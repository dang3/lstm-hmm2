divl
call
in
push
push
push
mov
mov
jns
in
sbb
push
push
mov
mov
mov
push
xor
mov
out
sti
fistpll
xor
lea
stos
stos
xor
in
dec
outsb
sub
repz
decl
xorb
mov
add
lea
mov
push
xor
add
cmpsl
inc
dec
cmp
ja
loopne
mov
push
push
sti
pop
fucomip
mov
and
sbb
inc
fcoml
and
or
add
popf
jge
testl
mov
xor
popf
jae
mov
jo
scas
loopne
dec
mov
or
push
sbb
cld
and
xor
pop
pop
pop
or
xchg
leave
ret
js
add
pop
cmp
testl
std
les
push
pusha
mov
adc
lds
in
shrl
push
popa
enter
push
push
lret
dec
mov
lcall
push
fstpt
jo
xor
xor
push
aad
in
jnp
outsb
xlat
fdivs
mov
outsb
fistl
loop
jecxz
xchg
in
repz
inc
out
out
call
jns
jnp
imul
lock
out
sahf
out
repz
cmc
test
jge
idiv
stc
dec
cs
sti
js
loop
sbb
je
mov
sub
mov
iret
fimuls
cld
push
and
mov
jl
je
hlt
mov
or
add
ror
xchg
add
je
pushf
inc
fldt
jl,pt
sub
jmp
xor
lods
arpl
pop
sbb
je
cwtl
out
xlat
gs
dec
hlt
movsl
jne
adc
xor
xor
mov
in
cmp
and
pusha
adc
or
test
cltd
sbb
imul
xor
or
mov
pop
hlt
cmp
jne
push
or
add
fadd
push
or
loope
jmp
and
push
push
push
adc
adc
or
cmp
pop
ret
push
xor
mov
ss
jmp
fs
jne
jo
cmp
sbb
add
lea
cmc
sub
call
aaa
or
sbb
dec
or
mov
insb
adc
pop
pop
in
ret
jbe
sub
mov
add
test
mov
or
incl
push
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
jne
andb
jg
pop
jo
repnz
mov
mov
inc
subl
jl
or
add
inc
cmp
push
pusha
lcall
and
sub
jbe
push
push
sahf
std
push
add
adc
andb
cmpsl
insl
push
sbb
dec
lock
or
sub
outsb
lcall
pop
pop
xor
or
fdiv
cmp
inc
incl
clc
orb
sub
inc
push
push
rcrb
les
mov
cmpw
add
dec
sbb
pop
add
adc
int
push
jbe
push
dec
sbb
xor
pop
addb
pop
inc
and
mov
push
divl
mov
std
loop
xchg
dec
xor
pop
or
cmpb
jbe
mov
mov
inc
cld
bnd
ljmp
cmc
cmp
sub
cmp
ficoml
fneni(8087
jbe
inc
shl
xchg
xchg
push
inc
clc
dec
push
out
movl
add
mov
daa
push
xor
cmp
jbe
or
push
inc
add
inc
mov
mov
test
cmp
jl
mov
push
adc
shl
lock
icebp
pop
and
fimull
nop
popa
jbe
xlat
push
ret
mov
cld
adc
xchg
sub
mov
ja
fdivs
add
shr
cli
frstor
inc
or
mov
mov
mov
push
fmull
repz
cs
insb
out
sahf
add
popa
fs
jnp
dec
imul
push
divl
in
jns
xlat
inc
mov
dec
scas
mov
ret
jnp
push
jb
lds
push
adc
xor
sub
dec
mov
pop
push
cld
stos
sub
decl
push
out
jge
or
pop
or
clc
iret
sub
sti
paddb
bound
mov
mov
push
lock
subl
shr
dec
mov
cs
in
mov
cmp
sti
popf
or
or
add
decb
fyl2xp1
mov
loopne
insl
out
xchg
or
jne
push
push
xlat
mov
inc
cmp
cmp
push
cmp
inc
clc
mov
push
cmpsb
or
push
xor
das
push
icebp
cld
lock
push
push
repz
jnp
fdivrl
jne
push
rclb
in
rcll
pop
sbb
cmp
inc
loopne
sbb
sbb
push
xchg
inc
mov
fdivrs
fimuls
ss
aad
cmpsb
xchg
in
add
outsb
or
push
add
sbb
in
mov
adc
je
gs
ret
clc
mov
ret
sub
sti
cmp
jl
lea
shl
mov
mov
pop
or
lret
cmp
je
xor
push
mov
cmpl
mov
pop
add
dec
movb
jne
add
mov
mov
lock
test
fiaddl
sbb
stos
stos
std
inc
stc
lock
xchg
stos
xor
push
incb
inc
mov
cs
cli
cwtl
rolb
sub
sbb
in
std
or
aad
arpl
inc
xchg
loope
push
enter
add
shl
lock
mov
mov
enter
jmp
outsb
gs
imul
iret
xlat
mov
cmp
repz
ret
iret
repz
lods
scas
iret
repz
scas
mov
mov
mov
iret
repz
mov
mov
aam
dec
add
ljmp
movsb
mov
push
rcrl
lock
dec
pop
mov
in
sub
inc
aad
xchg
fidivrs
add
in
in
mov
mov
aad
scas
in
add
mov
mov
out
loopne
clc
dec
fmull
xchg
ret
daa
stos
ret
mov
jb
mov
out
xchg
sbb
ret
movl
sbb
jl
push
mov
push
push
push
push
lret
int
push
push
pop
mov
inc
test
not
movl
std
mov
sub
jl
je
adc
jne
test
cmp
mov
ss
adc
decl
jge
dec
push
outsl
xorl
push
je
xlat
jo
ret
push
xor
pop
push
pop
push
xchg
cmp
fsubs
cmp
clc
in
fiaddl
xchg
push
and
push
addb
shrl
push
push
stos
push
add
and
or
add
adc
mov
rolb
add
push
pushf
and
mov
movsb
imul
fwait
insl
insl
cs
out
call
lcall
in
popa
in
out
push
sahf
data16
out
inc
mov
push
hlt
push
cmc
jb
imul
repz
stc
je
sti
cld
gs
std
or
mov
rcl
xlat
iret
adc
add
push
mov
add
je
mov
adc
leave
std
enter
in
or
das
push
int
int3
decb
adc
push
sub
sarb
and
or
and
lock
sarb
push
sub
ret
push
or
lcall
and
fadds
and
adc
inc
sbb
mov
pop
push
mov
sub
add
cmp
aam
call
xor
out
pop
pop
adc
movsb
xchg
push
add
push
subl
adc
sbb
or
or
jo
push
nop
sub
leave
fmuls
and
dec
mov
or
lock
or
movsw
movsb
push
mov
pushl
sahf
cmp
push
dec
xor
mov
or
arpl
jmp
add
push
ds
sub
push
ds
push
pop
adc
cmp
shr
inc
push
shrl
pop
ss
addr16
and
sbb
xor
xor
test
adc
inc
jle
enter
mov
cmp
or
scas
das
int3
pop
pop
incb
or
outsb
sti
cmp
jge
push
mov
sbb
idiv
cmp
jle
or
jle
jae
jl
popa
jle
jp
add
pushf
dec
loopne
pop
jl
pop
or
out
jo
inc
sub
jecxz
ficomps
lret
xchg
sbb
or
sti
dec
sti
mov
xchg
lods
cmp
xchg
stc
movsb
movsl
cwtl
sti
pcmpgtb
sbbl
pop
jmp
push
push
dec
mov
and
pop
inc
cmc
push
mov
push
test
push
cmovb
sub
lock
cmp
push
bound
xchg
shll
cmp
repz
arpl
pop
mov
fldenv
mov
sbb
ret
xlat
outsb
call
adc
inc
sbb
mov
cmp
mov
jmp
xor
push
jle
pop
lods
mov
cld
jmp
lock
ret
cmp
mov
jns
cmp
pop
sbb
loopne
mov
dec
dec
rcll
out
out
lock
mov
insb
mov
es
xor
cs
fs
test
cmp
inc
dec
shll
gs
roll
shll
insb
sbb
fldcw
dec
aam
aad
jo
jns
jns
cmpsl
fcomp
fcmovu
fdivl
inc
outsl
jo
xor
imul
inc
mov
push
js
xor
shrl
jbe
xor
imul
pop
rcl
dec
nop
aam
add
or
mov
leave
aaa
cmp
pop
int3
loopne
jg
out
mov
dec
cs
sub
je
push
pop
ds
push
in
idivb
pop
or
mov
je
or
jne
xor
cmp
xlat
rcrl
pop
psrlq
je
insl
push
sbb
cli
hlt
jno
inc
push
mov
add
fmuls
lcall
gs
adc
push
adc
jne
movsbl
xchg
push
movsb
pop
xorb
pop
push
dec
popf
push
fistpll
cmp
pushf
add
ljmp
cmp
je
jnp
sbb
gs
and
xchg
xchg
outsb
ja
jl
hlt
fcmovne
mov
add
je
popa
out
je
fs
pop
mov
jmp
push
loopne
dec
pop
mov
pop
pop
daa
test
sbb
lock
ljmp
xor
pop
and
lret
sub
sub
adc
repnz
jecxz
adc
outsb
sub
int
and
es
andb
andl
lods
popf
jmp
push
inc
pop
jle
bound
jne
lcall
test
clc
jae
mov
push
shl
imul
add
rcrb
dec
adc
push
sbb
adc
mov
push
and
push
icebp
mov
mov
movb
ret
enter
hsubpd
shll
xchg
adc
call
mov
mov
sbb
enter
mov
call
push
pushf
lahf
cmpb
std
call
rorb
and
pop
and
jmp
sbb
fucompp
sub
cmp
cmp
sub
adc
aaa
adc
enter
mov
daa
fdivrp
mov
sub
nop
pusha
push
enter
xor
jmp
nop
xor
dec
jmp
clc
xchg
arpl
outsb
andb
cltd
fxch
test
push
stos
ljmp
and
mov
push
inc
les
std
push
pop
rorb
inc
aad
stos
fwait
std
shl
add
adc
in
push
stos
movsl
in
adc
js
pop
ja
xor
gs
push
dec
dec
icebp
aaa
js
inc
sbb
andb
mov
aam
dec
movb
xor
push
xchg
sbb
fnstsw
ret
jmp
std
and
mov
add
xchg
addr16
dec
xchg
and
push
js
push
addr16
or
xchg
scas
scas
mov
pop
jnp
aad
push
cmp
add
jbe
dec
mov
sub
mov
mov
add
mov
adc
xor
mov
fmull
sub
loop
mov
rorb
dec
cmp
mov
push
or
andl
pop
mov
add
push
xchg
clc
dec
inc
and
insl
mov
jle
leave
push
cmp
das
sbb
and
gs
or
push
fdivr
xor
xchg
daa
insl
pop
jge
cmpsb
cmp
fnstenv
enter
and
cltd
das
inc
insb
in
pusha
inc
adc
add
sbb
clc
inc
sti
aam
xor
outsl
pop
sub
bound
roll
loopne
gs
pop
sbb
test
xorl
push
jbe
push
gs
cmp
aad
dec
sar
cld
std
mov
push
push
inc
jmp
arpl
in
jne
je
xor
imul
add
jle
push
lea
fadds
pop
push
test
test
mov
dec
xor
aad
push
movsl
iret
push
jp
fdiv
mov
dec
outsl
push
cmp
pop
int3
xor
push
xchg
push
jae
or
cmp
andl
cmp
out
aad
and
push
int
pop
in
pop
int3
cmp
add
push
jge
outsb
or
push
adc
fadd
mov
jmp
push
push
rcr
cwtl
sbb
fwait
cltd
dec
movsb
test
repz
lcall
iret
repz
repnz
cmc
div
iret
repz
stc
cli
sti
xor
lcall
xchg
insb
jns
out
inc
js
arpl
leave
jb
enter
xchg
insb
pop
inc
sbb
jmp
or
mov
imulb
pop
sbb
sbb
pop
lcall
addb
add
ja
sbb
sub
mov
lcall
jmp
and
xor
add
std
neg
mov
push
and
cmc
lea
pushf
mov
xlat
sti
rolb
pusha
pushf
sub
push
jmp
iret
insl
add
les
inc
sbb
push
push
stos
push
pop
sbb
shr
fsubrp
out
fistpl
xchg
push
es
sahf
sbb
cld
add
pushf
inc
mov
jmp
or
adc
add
sbb
je
pushf
xor
mov
lret
in
mov
mov
pop
rol
int3
shlb
cmp
mov
mov
fdivl
mov
push
or
inc
push
ljmp
mov
neg
sbb
or
js
rorl
aam
push
cmp
jg
pop
outsb
test
and
test
das
jae
sub
in
enter
mov
mov
mov
push
ret
sbb
inc
push
push
shl
adc
push
stc
sub
or
orl
not
sub
or
sbb
jl
js
mov
mov
adc
je
lods
lds
das
das
clc
jae
sbb
test
or
mov
cmp
inc
xchg
lea
xor
fistpl
adc
lock
add
mov
idivl
cmpb
jne
inc
adc
add
sbb
and
add
jbe
test
pushf
movsb
xchg
lahf
jl
inc
rolb
je
movzwl
jmp
push
and
jmp
aad
cmc
push
pop
push
push
push
mov
call
callw
mov
mov
lds
rcll
lock
pop
jbe
pop
sub
mov
loopne
mov
pusha
lock
imul
and
pusha
in
ret
lret
pop
inc
cmp
add
push
test
cmp
repz
mov
imul
xor
and
inc
dec
pop
outsb
or
sahf
jnp
jg
mov
aam
sahf
cmpsl
stc
cmp
or
and
jnp,pt
out
push
insb
int3
aaa
outsb
dec
xor
mov
push
cld
xor
add
repz
sti
inc
push
ss
adc
and
iret
repz
ss
dec
push
pop
fs
repz
jle
sahf
lods
repz
repz
int3
aam
cmp
cmp
push
push
cs
sahf
out
dec
fdivs
pop
jns
cwtl
push
movsb
mov
int3
inc
sbb
and
icebp
stc
or
add
and
push
and
out
cwtl
sbb
int
loope
jg
and
xchg
ss
add
or
aaa
push
xchg
push
cs
mov
decl
add
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
mov
shrl
mov
xchg
pop
out
add
call
incl
cwtl
jmp
fdivl
leave
pop
jp
lock
add
jnp
mov
mov
mov
testl
push
xor
push
push
inc
push
push
xor
push
test
sub
ljmp
push
add
xor
jg
bound
or
and
and
je
fbld
dec
gs
gs
add
pop
repz
xor
imul
into
idivl
pop
pop
push
add
xor
pusha
pushf
call
clc
addr16
mov
lea
inc
add
push
adc
out
es
mov
add
add
push
push
push
mov
and
aam
cmpb
add
popf
popa
movsl
mov
jecxz
inc
pop
pop
outsl
adc
into
scas
loope
repz
decl
jae
and
cltd
and
ss
lods
scas
addb
xor
and
negl
gs
pop
sbb
outsl
insl
arpl
loope
ret
jg
jae
arpl
jae
mov
cmpsl
mov
std
stc
fisttps
rcr
mov
out
mov
and
mov
inc
mov
mov
inc
dec
dec
inc
inc
mov
dec
inc
das
dec
mov
imul
fimuls
lods
lret
rol
mov
mov
mov
jg
push
mov
ja
incl
inc
popa
arpl
and
shlb
outsb
pop
add
xchg
insl
mov
jbe
mov
adc
testb
clc
mov
enter
insl
outsl
fs
lock
inc
loop
jge
ss
xor
sbb
cmc
imul
mov
sub
push
outsb
outsw
outsb
imul
pop
pop
jae
jae
gs
sbb
mov
add
mov
pop
movzbl
xchg
clc
jp
push
jo
imul
sub
jae
outsb
outsl
jo
andb
sti
xor
or
je
or
jb
or
data16
sbb
gs
lods
inc
inc
or
outsl
data16
mov
cmp
xchg
data16
repnz
fldl
inc
dec
push
scas
push
inc
push
inc
cmovp
push
rorl
push
cltd
nop
repnz
ja
cs
jmp
xor
xchg
lcall
repnz
push
xor
enter
add
mov
cmp
mov
int
add
cmp
jb
push
test
sarl
add
add
push
or
imul
mov
dec
push
add
cmc
push
pop
rclb
mov
leave
inc
jmp
ljmp
or
pop
mov
int
mov
imul
idiv
jmp
popa
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
push
cmp
gs
mulb
outsb
mov
pop
cmp
jle
pop
adc
mov
cmp
sti
repnz
adc
bndstx
jno
inc
cmp
std
sti
push
cmp
cs
arpl
or
mov
push
dec
add
add
lea
inc
js
enter
push
and
add
jl
loopne
push
mov
sbb
lods
popf
add
xor
adc
shll
adc
sub
add
insb
mov
cmp
sub
add
je,pn
js
dec
lods
loopne
andb
mov
ret
adc
jb
popa
je
inc
nop
dec
or
mov
nop
inc
inc
shrb
push
dec
mov
js
sub
xor
add
push
jb
test
aas
nop
add
leave
pop
nop
js
insb
outsl
arpl
fs
cs
jae
popa
arpl
and
dec
push
sahf
mov
fsubrp
popa
enter
shlb
negb
sbb
xor
in
and
lahf
jmp
xor
sub
jmp
inc
mov
add
addb
jb
out
shlb
je
fs
insl
sti
jae
sti
and
or
test
dec
imul
repz
out
dec
xchg
shr
or
inc
mov
sbb
fsubs
xor
loope
dec
imul
incl
pop
rcr
push
dec
cltd
sub
sbb
cwtl
add
adc
mov
pushl
popf
arpl
xor
add
imul
test
cmp
cmp
pushf
mov
add
mov
adc
testb
shll
incl
or
push
mov
fdivrl
jo
push
pushf
cmpsb
hlt
xchg
icebp
insl
cmp
xchg
stos
pop
dec
outsb
lcall
pop
mov
pop
mov
inc
xor
in
rolb
jp
cwtl
fcmovnu
add
fisttpl
call
mov
aas
and
fists
mov
in
mull
sbb
pop
clc
pushf
scas
cmpsl
aam
mov
in
mov
xlat
push
scas
data16
imul
add
mov
mov
sub
mov
mov
mov
push
mulb
mov
ss
mov
xchg
jo
andb
mov
or
and
push
adc
lret
rorb
xor
xchg
adc
push
dec
cmp
repnz
mov
cwtl
adc
pop
cmovp
cmp
jl
dec
push
xchg
fstpl
test
call
sti
or
fisttpl
fcomp
addr16
movsl
adc
or
imul
lods
jae
sbb
es
cmpsl
add
pushl
mov
cwtl
movsl
inc
sbb
jecxz
xor
xlat
jecxz
push
push
dec
test
rcll
jmp
or
dec
mov
xchg
lock
leave
pop
shrb
imul
jae
cmpsb
das
fstpl
incl
in
mov
xor
mov
lcall
imul
mov
out
or
rol
xor
push
sub
pop
and
cmp
xor
cltd
gs
lcall
loope
dec
fs
xor
xor
mov
dec
es
push
mov
ljmp
dec
lock
es
cmpsl
dec
fbstp
and
mov
loope
inc
leave
and
stc
dec
pushl
mov
cltd
clc
je
sub
lods
inc
stos
jl
stc
xor
testl
and
sti
pushl
lds
cli
std
bound
jmp
int3
cmp
sub
and
sbb
jmp
mov
adc
push
xor
xchg
xor
jp
jmp
and
jge
rclb
fidivrl
xchg
jns,pt
adc
dec
pop
xor
sbb
add
xchg
stos
mov
mov
jmp
and
mov
cmp
xor
orl
decl
popa
sbb
mov
mov
push
mov
mov
pop
dec
dec
iret
cmc
fcompl
push
sub
in
add
fdivr
mov
int3
cltd
or
inc
dec
pop
arpl
fstps
jmp
orb
mov
cmp
xorb
ret
adc
pop
pop
sbb
lock
cmp
decl
clc
push
adc
lea
mov
jb
adc
jne
lcall
pop
pusha
outsl
or
cmp
lods
xor
pop
xor
leave
fcoml
push
xor
loopne
ljmp
test
and
imul
xchg
and
cmp
dec
testb
lea
mov
es
imul
sub
ljmp
jmp
cmp
mov
xchg
not
mov
mov
insb
lds
loopne
pop
lcall
shlb
movq
adc
jns
aaa
jge
in
xor
xor
jne
jno
ds
lcall
and
cmpsl
int
movsl
in
stos
pop
push
add
mov
pusha
fwait
sar
jmp
test
mov
jg
lret
dec
std
lods
call
push
xor
jl
and
scas
jae
jmp
das
or
in
adc
gs
dec
int
addr16
xchg
in
mov
sub
jo
sbb
inc
loope
ljmp
xchg
mov
or
in
mov
leave
negb
movsb
sahf
cmp
lret
jmp
nop
jmp
int3
jmp
mov
xchg
xor
leave
call
jge
inc
insb
jg
test
andb
mov
stos
loop
xor
pop
add
push
jbe
xchg
incl
orb
jne
cwtl
test
lods
movsb
dec
pop
daa
sbb
fimull
lock
in
adc
or
insb
xor
or
dec
cli
xor
xor
add
adc
adc
pop
int3
mov
jg
int
adc
outsl
mov
cld
lcall
push
adc
test
pop
lret
xor
call
fists
lea
decl
std
xchg
sub
iret
sbb
or
mov
inc
sub
push
sbb
movsb
mov
stc
xchg
les
jae
cmp
clc
orps
mov
addb
dec
sub
jmp
jne
mov
ljmp
fnop
insl
test
adc
out
clc
call
jns
filds
push
das
sub
orb
xor
imul
cs
and
add
cltd
pop
pop
adc
adc
xchg
sbb
adc
and
incl
sub
push
repnz
inc
hlt
jg
xor
stos
into
pop
dec
jg
mov
call
sbb
nop
mov
pop
insb
mov
scas
mov
fbld
fcomps
or
inc
push
fwait
inc
inc
lock
out
cmp
xchg
pop
xor
das
jl
cmp
sbb
xor
sub
jmp
mov
ds
cs
scas
push
ds
or
adc
popf
jae
xor
in
dec
mov
pop
call
mov
sub
lcall
andb
jnp
mov
stc
fimull
decl
ds
fisubrs
arpl
lahf
adc
mov
dec
in
jg
popf
lahf
sub
inc
in
mov
xor
sarl
mov
and
mov
mov
push
test
jo
cld
nop
cmp
pop
popa
mov
sub
jg
inc
scas
and
out
cs
xchg
pusha
pop
or
imul
or
push
sbb
push
div
cmp
mov
pop
adc
sbb
push
ljmp
push
mov
inc
mov
test
push
lahf
mov
fldt
dec
gs
ret
leave
ss
loop
push
sbb
ljmp
stc
add
dec
popl
das
jmp
bswap
add
jae
mov
cli
out
xorb
cld
fcompl
push
hlt
pop
cmp
call
clc
pop
jb
std
sub
ja
mov
mov
and
mov
sahf
dec
dec
je
fucomp
sbb
or
sub
outsb
test
mov
cmp
mov
ljmp
jle
imul
sbb
lahf
mov
stos
xchg
push
or
scas
cli
mov
pop
jge
cli
inc
adc
mov
sub
pop
movsb
jmp
xchg
ret
das
ret
cmpsl
in
jg
imulb
gs
sbb
mov
pop
lea
ljmp
lahf
sbb
dec
and
das
jle
xor
fldt
out
jae
ljmp
cwtl
cmpl
jno
fwait
pop
jne
insb
popa
cmp
xchg
xor
cmp
lcall
subl
xlat
cmp
mov
pop
push
dec
pop
pop
stc
pop
test
adc
mov
push
outsb
loop
adc
dec
lods
fistpll
jbe
mov
dec
jg
fcoms
adc
dec
xchg
or
xor
cld
adc
push
outsl
xlat
scas
cmp
pushl
out
loope
pusha
cmp
clc
adc
out
das
push
and
sub
mov
shrl
jp
push
or
outsl
popf
test
shlb
push
add
loop
jne
inc
incl
subl
cmpsb
imul
rorb
push
mov
jmp
data16
mov
jb
and
out
cmp
negl
pusha
addr16
sub
fstps
ds
hlt
sub
stc
mov
ja
test
jl
jns
popf
loope
inc
testl
push
imul
mov
rolb
cs
add
decl
ret
fs
jg
inc
xorb
jle
and
aad
mov
mov
and
push
add
das
lods
lods
outsb
push
std
gs
mov
sub
mov
cmp
pop
and
dec
popa
rcll
xchg
insb
sub
jo
xor
and
or
inc
push
lcall
xor
cmp
and
lock
ljmp
cmc
out
rcrl
mov
btr
push
sbb
sbb
dec
sbb
je
fidivl
stos
int3
mov
mov
pmuludq
cmp
add
test
fisttpl
pop
inc
xchg
aam
insb
iret
adc
push
push
lods
rclb
lea
xchg
lea
dec
decl
adc
pop
cmp
push
jmp
mov
mov
in
jo
xorb
daa
mov
or
or
jns
adc
push
test
fwait
adc
popa
ljmp
cli
lcall
int
jae
ss
add
mov
adcb
std
push
lcall
aas
jns
inc
cwtl
in
jmp
aas
sbb
xchg
outsl
adc
mov
std
outsl
enter
in
outsl
ret
insl
xchg
cmp
xor
test
dec
outsb
sbb
dec
sahf
sbb
cmp
pop
jmp
std
and
les
roll
mov
adc
cmp
repz
pop
lods
mov
clc
xchg
add
ljmp
push
xchg
decl
andl
mov
cli
sub
testl
data16
xchg
data16
mov
decl
loope
xchg
cmpsb
scas
jb
inc
sbb
addr16
mov
out
into
or
jg
jae
call
into
scas
adc
fyl2xp1
lds
and
dec
mov
in
jle
mov
pop
pop
push
cmp
decl
stos
jg
sbb
sbb
lock
in
out
shr
rcrb
loope
push
inc
decl
pop
xor
add
mov
add
mov
roll
imul
inc
or
call
add
stc
mov
es
pop
mov
add
adc
sbb
das
imul
fldl
repz
fisubs
in
cmp
ljmp
dec
lret
call
sub
push
scas
popf
ret
jae
das
popa
sub
rclb
stc
out
mov
ds
add
movsb
ljmp
aad
sub
stos
and
mov
inc
hlt
pushl
jmp
jne
mov
fcmovne
ss
pop
xchg
xchg
test
mov
insb
mov
cwtl
icebp
pop
cmpsb
mov
xor
adcb
cmp
sub
push
movsb
jno
incl
aad
pop
cmp
xchg
loope
ret
std
mov
jg
jmp
jnp
push
mov
add
sbbl
lcall
lret
jge
enter
call
xchg
das
lds
inc
add
xor
mov
and
push
scas
push
push
xor
adc
sbbb
sub
fwait
movsb
pop
xchg
arpl
lahf
mov
mov
ret
fbstp
into
adc
jl
dec
lods
hlt
sub
nop
jbe
and
call
loop
mov
lods
in
dec
push
jne
sbb
dec
xor
hlt
loop
fldln2
repnz
das
mov
jmp
pop
dec
dec
push
pop
xchg
in
pop
cmc
enter
mov
ljmp
das
lret
rcll
rorl
xchg
lcall
fbstp
rolb
aad
popa
loope
ret
adc
mov
fildl
stos
mov
push
mov
call
cs
das
or
ret
dec
xchg
ljmp
sub
add
lea
sub
jle
repnz
xchg
mov
in
mov
dec
adc
dec
lock
ds
adc
lcall
push
stos
adc
mov
cmpsb
hlt
sbb
lahf
mov
test
incl
push
ret
xor
insl
jns
add
das
xchg
jae
add
clc
xchg
lcall
adc
mov
out
and
push
nop
jne
call
inc
mov
ljmp
adcb
cmp
adc
cmp
or
sti
ss
or
ljmp
mov
cld
repnz
push
inc
sbb
adc
arpl
push
xchg
jo
adc
pop
in
add
fs
jp
sarl
jle
cwtl
daa
xor
sub
adc
mov
mov
call
mov
pusha
adc
mov
pop
inc
jp
inc
mov
cmc
sbb
xchg
add
mov
test
aas
jmp
sub
into
sub
jg
je
xor
pusha
inc
dec
and
or
fldenv
incl
and
lock
in
gs
mov
imul
ja
rorb
sti
xchg
inc
test
test
jae
inc
gs
cmc
jo
mov
aam
dec
xchg
fstps
loop
das
dec
push
inc
shrl
push
ret
sarb
mov
jmp
push
lcall
ljmp
sub
enter
fldcw
pop
lds
push
mov
cmp
mov
mov
lods
lods
repnz
ja
cmp
fst
ds
jae
ret
xor
sub
pushl
mov
mov
jecxz
outsb
jle
out
cmp
cmpsb
mov
mov
xchg
pop
icebp
fcmovne
and
leave
faddp
inc
add
mov
pushl
cmpb
stc
xchg
pop
shll
stos
push
xor
jg
cld
inc
je
adc
jg
mov
push
repnz
test
xor
dec
mov
lcall
fsubrp
aad
mov
xchg
js
fsubrl
movsb
icebp
imul
xor
fadds
pop
xchg
lods
cmp
movsl
int3
adc
mov
xor
xchg
and
call
and
and
xchg
mov
mov
cmpsb
jae
loope
mov
ficoml
push
aam
repnz
cmp
dec
ds
aaa
nop
jnp
loop
dec
xchg
repz
sbb
and
in
sbb
lea
sbb
outsl
cli
cmp
fsubl
out
movsb
mov
addr16
push
pop
push
in
inc
imul
stos
sub
cmp
sbb
cltd
stos
fbstp
inc
xlat
sarl
outsl
stos
sub
lds
lock
jae
xchg
inc
push
ror
inc
jne
push
lods
ss
pushl
push
ret
lret
push
pop
pop
daa
mov
and
sub
shll
in
xchg
out
call
loopne
xchg
jecxz
or
inc
mov
in
sub
xor
daa
cmpsb
decl
test
rcrb
enter
imul
push
lcall
testl
bound
sahf
pop
fidivs
nop
dec
lahf
out
dec
pop
mov
lcall
cmp
push
jp
xor
aad
enter
mov
cli
lcall
sar
scas
pushf
xchg
inc
aad
imul
xchg
in
addr16
dec
movsb
mov
xor
call
cs
jne
insb
and
out
andl
sub
inc
or
loopne
sub
ljmp
sub
pop
mov
das
inc
movsl
push
add
pop
mov
movsb
jmp
fwait
out
hlt
fisttpll
lret
jb
imul
fwait
outsb
ds
ljmp
cli
xchg
jle
dec
lods
mov
cmc
fiadds
mov
mov
gs
jmp
pushf
and
pop
mov
ss
jb
xchg
aam
outsl
add
adc
mov
jnp
dec
mov
hlt
fwait
in
addr16
jmp
fidivl
and
std
fcomps
inc
imul
cmp
lcall
mov
and
fdivl
inc
dec
loopne
xchg
cmp
aaa
mov
loope
push
and
pop
jnp
mov
iret
outsb
xchg
mov
xor
xchg
mov
mov
call
lds
test
jns
xchg
inc
ss
lods
orl
decl
mov
daa
aaa
cmp
cli
insl
mov
pop
xor
lcall
push
and
mov
fstpl
jns
pop
inc
adc
in
dec
push
aaa
cld
jmp
or
push
inc
adc
jbe
pop
into
out
bound
pushl
sub
pop
pop
inc
jns
dec
cld
mov
cmpsb
leave
xchg
movsb
sbb
push
jns
push
mov
push
ljmp
aaa
or
sub
jge
dec
dec
or
fists
ret
gs
pop
or
mov
js
jle
lcall
jns
mov
mov
xchg
int3
inc
sub
add
sbb
dec
nop
xchg
mov
ss
out
sbb
mov
sti
cmpsb
fidivs
insl
fnsave
inc
pop
add
dec
lahf
or
push
outsl
jb
adc
enter
push
jbe
lea
incl
rcr
pop
jns
jp
mov
clc
cmc
imul
and
mov
jle
pop
mov
incl
or
into
mov
pusha
hlt
daa
mov
addr16
mov
stc
sbb
icebp
push
iret
incl
dec
xchg
int
xor
bnd
in
cmpsl
call
loopne
xchg
xchg
jne
adc
cmovns
incl
out
sub
pop
negl
add
ja
pop
mov
mov
icebp
fcomi
adc
decl
and
lret
mov
pop
xchg
test
dec
addr16
inc
notl
pushf
adc
mov
jg
push
jnp
dec
aam
mov
and
pop
pop
xchg
pop
and
push
sbb
mov
xor
lahf
ss
cmp
pop
sbb
incl
jb
imul
mov
add
pop
ljmp
hlt
sub
cmp
pop
add
mov
out
sarb
scas
adc
popf
ds
add
xlat
push
cwtl
add
xor
dec
inc
push
je
cwtl
sbb
xor
inc
fs
pusha
out
enter
inc
dec
lock
mov
xchg
fists
jbe
pop
cmpsl
adc
jmp
aaa
ds
movsl
es
fdivrl
insb
pop
lock
jne
inc
data16
mov
roll
mov
cltd
imul
mov
mov
cmpl
aam
test
inc
inc
insl
mov
cltd
and
dec
mov
das
jg
fidivl
test
outsb
ljmp
clc
lods
adc
pop
stc
sar
loop
cmc
mov
xor
popa
cltd
mov
idivb
ljmp
dec
pusha
or
jecxz
cmp
inc
sub
popa
test
iret
mov
dec
loop
mov
xchg
or
sbb
cltd
mov
aad
fists
imul
dec
jmp
xor
test
mov
out
aaa
jl
push
rorb
dec
lret
push
push
ljmp
rcr
push
es
incb
pusha
sub
push
cs
sbb
inc
mov
sbb
jnp
call
push
es
cmp
mov
stos
aad
sahf
push
insb
loope
mov
pop
in
pop
push
inc
and
icebp
dec
lcall
repnz
fwait
mov
sbbl
xchg
xor
lcall
ja
inc
std
iret
dec
jb
mov
rcr
popa
fsts
in
fsubp
cltd
add
call
cmp
adc
inc
lahf
inc
ja
mov
int3
rcrb
xchg
jnp
jg
dec
mov
dec
jmp
add
test
xor
jg
lcall
xor
and
movsb
sbb
mov
sar
mov
or
js
lcall
pop
push
adc
adc
sti
jne
xor
test
rcrb
pusha
sbb
and
jno
pushl
stos
pop
pop
mov
xchg
aam
call
sbbl
push
sbb
notb
xchg
jbe
pop
fildl
jge
xor
fisttpll
jo
mov
xor
outsb
insl
out
in
pop
adc
decl
jp
das
or
imul
dec
ret
jecxz
hlt
mov
cmpsb
mov
fiadds
das
ud0
lcall
cmp
rcrb
sbb
daa
lcall
popf
jb
dec
jno
sti
std
inc
dec
aas
outsl
pop
dec
gs
repz
jmp
mov
xchg
xchg
sbb
and
nop
inc
lcall
int
dec
sahf
mov
clc
sahf
push
mov
shr
xchg
mov
or
pushf
daa
incl
callw
inc
and
lret
mov
pop
xor
fistl
mov
ljmp
movsl
test
mov
sub
xchg
les
xlat
xchg
in
pop
lds
dec
xor
decl
out
dec
ds
sub
mov
pop
sub
outsl
ficomps
add
pushl
dec
fsubrs
and
negb
repz
les
idivl
cmpsl
lock
ret
rclb
and
jl
fistpl
and
lcall
test
lret
sahf
xchg
popa
shll
pop
cwtl
mov
testb
sbb
and
or
in
decl
sti
push
out
jae
pop
jp
pushf
andb
cwtl
sub
out
cs
shlb
lcall
cli
jno
test
jecxz
enter
cmpsl
dec
scas
cmp
push
les
decl
aam
sar
push
mov
inc
shlb
cmpsl
pop
divl
cltd
adc
pushl
adc
inc
imul
cwtl
fdivrs
mov
xchg
sub
lcall
imul
cmpsb
ss
cmp
cli
jle
outsl
dec
fsts
xlat
inc
xlat
jmp
or
les
xchg
lcall
jbe
jo
out
jmp
mov
mov
xor
dec
inc
hlt
push
or
dec
sub
xchg
xchg
and
xchg
jg
decl
cld
mov
in
sahf
pop
sbb
stc
test
adc
mov
lcall
into
lret
pop
push
lret
xor
and
fwait
xor
lretw
out
mov
sar
insl
dec
decb
loopne
and
ljmp
mov
xor
sub
mov
lahf
fimuls
fsubrp
incl
arpl
jne
jp
xchg
sub
in
lods
xchg
movsb
push
fldenv
lock
inc
mov
clc
sub
fwait
jne
rcrb
imul
ficoml
js
int
xchg
jb
arpl
pop
and
add
sub
dec
push
or
or
fidivrs
mov
lret
push
sbb
repnz
xor
out
sbb
mov
aaa
cmp
cltd
aaa
sbb
cmc
sub
lret
adc
fsubrp
pop
mov
lock
push
pop
insb
mov
incl
inc
shrl
push
in
xchg
and
or
xchg
insb
inc
inc
or
push
bound
xchg
call
outsl
cmp
repz
dec
or
cmp
jno
xchg
and
pop
sub
lds
cs
decl
xlat
and
push
push
cmc
inc
jae
bswap
push
pop
mov
xchg
xchg
lret
imul
lcall
hlt
out
and
repz
imul
push
movsb
pop
sub
mov
add
mov
decl
mov
mov
jbe
insl
xchg
xchg
sub
aas
fstl
insl
cmpsl
divb
cs
incl
cmc
dec
mov
push
ja
int3
data16
arpl
jl
push
xlat
and
adc
push
pushf
test
js
jb
sub
cmpsl
test
pop
mov
dec
dec
clc
jmp
aaa
cld
pop
xor
pop
dec
xor
push
sub
aam
out
push
jae
sbb
jge
pop
in
les
mov
shl
popa
adc
stos
jl
jge
lahf
dec
adc
dec
imul
enter
xor
xchg
push
jbe
and
incl
adc
mov
cmp
insl
or
stc
lds
add
and
decl
test
mov
adc
in
addl
adc
xchg
dec
ljmp
imul
push
int
icebp
or
fptan
pop
mov
insb
icebp
je
popf
ret
test
ljmp
xchg
sbb
push
je
in
jb
shrb
ss
fldl
lahf
add
jg
pop
and
xchg
dec
xor
out
icebp
mov
cli
xor
xor
notl
aas
mov
ljmp
fdiv
xchg
and
cmp
mov
cmp
jmp
scas
pushw
fcomi
lea
decl
inc
sub
cwtl
out
scas
scas
popa
test
inc
add
or
jmp
test
call
push
lea
sub
sbb
out
mov
mov
mov
test
scas
inc
iret
popa
mov
lock
xlat
add
lds
ljmp
jo
mov
xchg
push
movsl
je
pop
fs
mov
xor
pop
adc
cmpsl
decl
or
jae
jp
rcrb
int
pop
mov
push
iret
dec
pop
push
ljmp
mov
or
out
mov
jns
add
add
cli
adc
popf
leave
into
mov
cli
xchg
adc
roll
sbb
pop
call
adc
int
sub
cmp
mov
or
mov
pop
loop
jle
mov
test
lcall
mov
push
jmp
arpl
rolb
stos
lahf
nop
ficomps
decl
fnstsw
lods
and
inc
repz
les
mov
or
dec
pop
pop
jo
cmpl
enter
pop
xchg
xchg
stos
lret
push
mov
lcall
xor
aam
rcrb
and
push
xchg
cld
popf
sbb
lcall
jmp
push
inc
in
jno
cld
jmp
adc
popf
xchg
or
ljmp
ljmp
sub
or
inc
jbe
inc
jg
cmp
repnz
call
xorl
scas
in
mov
mov
dec
or
mov
cmpb
and
popf
outsl
mov
sbb
or
lock
pop
hlt
out
cli
repnz
lret
sub
imul
jnp
negb
sbb
xor
adc
xchg
adc
jb
cmpsl
xchg
ljmp
es
mull
dec
jb
pop
mov
pop
pop
in
jl
push
dec
mov
pushl
pop
rcrl
xchg
pop
in
push
jbe
fiadds
dec
ja
sbb
or
sbb
add
ljmp
mov
jmp
add
dec
jg
jnp
jge
inc
jmp
mov
ret
call
and
mov
jne
sbb
aam
jae
inc
xor
int3
ret
and
adc
mov
cmp
lcall
jno
ja
fildl
cmpsl
lock
cmp
inc
sbb
inc
lret
jle
in
jecxz
push
add
jmp
jg
lret
push
or
jae
loopne
ja
jnp
xor
mov
outsl
pushl
sub
int
mov
cmp
sub
add
cmp
pop
aad
ret
mov
pushl
dec
iret
cltd
mov
lock
sbb
int
pop
jg
pop
lock
jg
aas
xchg
std
int
sub
xchg
jl
sub
fsts
add
mov
cld
stos
ret
fidivrl
imul
incl
insl
push
mov
ret
inc
in
ds
iret
mov
inc
mov
rclb
in
inc
sub
xor
push
lahf
jne
and
aas
add
pop
mov
fcomip
call
xor
es
cmp
mov
sahf
xor
enter
fcmovnu
loope
pushl
test
fcmovu
lahf
xchg
jns
push
ja
pop
shlb
pop
push
push
cld
jg
pushl
out
outsl
sub
mov
test
fidivrs
mov
in
pushl
insb
or
pop
jecxz
pop
movsb
xchg
dec
out
or
movb
test
dec
lret
frstor
sbb
jmp
divb
popf
insl
pop
ret
cltd
adc
pop
orb
stc
dec
cmp
sub
and
roll
call
push
fsubrl
sahf
out
movsb
hlt
dec
ljmp
and
and
call
inc
add
or
leave
pop
ljmp
jp
jno
in
mov
mov
add
lds
adc
mov
cmp
sub
pop
ja
adc
pop
ljmp
insl
mov
push
jne
das
mov
dec
out
out
test
ret
adc
jg
pop
sti
idivb
mov
mov
insb
movl
cmc
lcall
fdiv
imul
xchg
xchg
jecxz
cmpb
in
test
clc
xchg
cld
dec
xchg
lods
pop
call
idiv
gs
xchg
xchg
pusha
pop
xor
scas
mov
inc
in
pusha
mov
roll
pop
hlt
mov
ja
fwait
sti
adc
xchg
enter
inc
push
push
mov
mov
test
mov
cmpsl
in
sub
jp
icebp
incl
pop
push
shlb
xor
imul
rcrb
into
incl
push
movsb
or
cmp
aas
aam
dec
mov
inc
or
jno
ja
pop
mov
xchg
sbb
ror
sbb
mov
mov
cmp
ja
adc
js
mov
rorl
lods
ds
sub
xor
int3
loopne
mov
idivl
jo
jg
jg
call
dec
sbb
pop
or
sub
push
ja
bound
std
call
cli
mov
or
pusha
pushf
or
jb
stos
xchg
xchg
and
pop
fdivl
ljmp
testb
and
rcrb
push
sahf
push
lods
add
jle
ljmp
adc
fadd
cld
sub
pop
outsl
cmp
lcall
jmp
dec
xor
std
fbstp
mov
jnp
int3
cld
sbb
add
jno
loope
lahf
pop
lds
pushf
inc
push
call
jmp
int3
xor
add
sbb
lahf
mov
inc
mov
or
lcall
dec
insl
in
bound
xor
add
movsl
sti
xchg
iret
adc
adc
mov
xor
xor
lds
add
xlat
jg
sub
push
inc
std
aad
and
mov
jns
ja
js
fsubl
lcall
push
mov
nop
xor
sahf
xor
jl
ret
mov
sbb
or
pushl
fiaddl
cld
xchg
ds
sbb
inc
pop
jmp
xchg
fistps
in
pop
popa
test
and
addr16
mov
out
lret
bound
jmp
fcomps
int
cs
pop
sub
daa
lods
pop
pop
popf
xchg
sarl
incl
je
lods
imul
ret
outsb
jp
xchg
shll
dec
lahf
jnp
call
std
lcall
pop
xchg
mov
inc
cmp
popa
lahf
fs
and
cmpb
notb
push
fwait
in
leave
jnp
jmp
call
or
mov
enter
stos
div
mov
jb
mov
pop
or
mov
push
pop
xor
popa
pop
jp
add
loope
bound
cmp
pop
dec
call
lcall
mov
cmp
push
lds
adc
push
jb
push
sbb
mov
add
data16
out
faddl
add
test
call
subl
sub
mov
out
bound
or
adc
in
pop
mov
or
jmp
cmp
outsb
int
push
mov
sub
fstpt
push
lret
mov
inc
pop
cmp
cwtl
sbb
inc
push
cmpsl
pop
xor
xor
ljmp
cmpsl
test
test
mov
fstpl
xchg
ja
test
jg
dec
aas
xchg
jg
pop
adc
sbb
xchg
cmpsb
pushl
stos
xor
jbe
fidivrs
inc
mov
loope
adc
loopne
sbb
cmp
cli
push
jne
inc
popf
cmpsl
pop
dec
outsl
jnp
stos
push
pop
cmp
xchg
mov
mov
arpl
xchg
dec
fisubs
push
addr16
and
push
add
fidivs
incl
jb
mov
lea
pushf
rcl
add
xchg
aam
cld
data16
imul
popf
test
jl
jmp
xchg
or
mov
andl
js
lahf
imul
call
rolb
cmp
sub
xorl
cld
incl
mov
dec
cmp
fcoms
mov
int
mov
out
out
ret
call
adc
jg
cmp
aas
push
mov
je
loope
imul
xchg
sub
call
sti
sub
pop
testb
lret
xchg
out
inc
push
add
pop
lahf
decl
cs
orl
inc
int
outsb
mov
lret
pop
aaa
jmp
mov
into
lea
cmc
leave
nop
xor
int3
sub
sub
cld
loopne
test
xchg
sub
ljmp
incl
in
aam
in
jmp
cmp
outsl
je
xchg
fldenv
mov
das
dec
ljmp
sbb
in
cmp
jg
sub
cmpsl
rclb
xchg
ja
call
int3
ljmp
movsb
push
lds
push
call
xchg
adc
les
jae
aam
lea
mov
aaa
fs
cmp
jo
je
pop
ret
lods
jns
and
pop
addr16
decl
adc
int
in
icebp
fimull
loope
lock
pop
addr16
xchg
mov
mov
cld
mulb
lods
pusha
inc
mov
fadd
add
pop
sbb
jg
nop
popl
xlat
shll
inc
bt
fninit
pop
and
dec
pop
mov
pushl
inc
pop
lods
int
sbb
lret
lcall
inc
sub
jne
popw
clc
clc
jl
pop
sub
lcall
cmc
pop
jecxz
add
or
lods
pop
lock
lcall
push
push
sub
add
stos
hlt
cltd
sbb
xlat
jnp
int
mov
in
mov
ss
lods
sbb
pop
jnp
pop
pop
pop
or
lret
mov
jecxz
mov
push
and
mov
rcr
cmp
xchg
push
pop
fs
push
inc
out
movq
aaa
scas
aaa
add
aaa
cld
outsl
sub
jl
scas
inc
sub
jle
aas
jbe
push
or
std
lcall
rcll
sub
scas
call
mov
dec
movsl
cmp
mov
ljmp
mov
jb
lret
in
aaa
std
incl
sbb
cmp
dec
mov
loop
lods
mov
jb
xchg
sub
pushl
mov
xchg
jle
xor
sbb
cs
leave
add
dec
aas
sbb
mov
or
sahf
mov
mov
sub
out
aam
daa
out
cli
lea
cmp
sbb
sub
into
dec
mov
repz
adc
lret
mov
int3
test
xor
lcall
nop
mov
enter
sbb
fadd
jmp
divb
jns
fmull
lods
lcall
jns
mov
ja
incl
loop
mov
shlb
jne
jb
dec
cmpsl
fldl
jmp
or
push
not
daa
push
imul
inc
shr
mov
pop
jl
cwtl
cmp
popf
addl
incl
dec
push
je
lea
arpl
mov
cmp
pusha
mov
in
lock
incl
lret
add
popa
incl
in
add
clc
adc
ja
mov
cltd
dec
mov
and
jbe
cs
cmpsb
cli
test
pop
outsb
lcall
mov
inc
aas
push
std
incl
pop
pop
cltd
add
cmp
mov
mov
xchg
scas
lock
lcall
xchg
pop
and
mov
ljmp
mov
aam
mov
push
data16
mov
fcomip
inc
jecxz
es
add
adc
mov
adc
adc
int
jmp
loope
int3
lods
std
push
gs
jns
pop
xchg
clc
ds
mov
mov
xor
mov
jle
or
les
pushl
ret
lea
in
popf
jno
out
mov
jp
push
negl
subb
sbb
adc
jno
call
push
sub
dec
push
push
xchg
mov
mov
lahf
and
movsl
jmp
sub
cmp
jp
test
out
stos
test
mov
pop
test
jae
adc
ljmp
jo
out
cmp
stos
jnp
jae
push
out
sbb
mov
jmp
cmp
nop
sub
loop
cli
or
and
imul
fdivs
shlb
inc
sub
xor
dec
jo
shl
popa
in
and
sub
sahf
cmp
daa
aam
jb
pushl
shl
inc
jbe
rcrb
repnz
fistpl
xlat
cmc
das
dec
fisubs
or
incl
sub
jge
push
mov
xchg
sub
xor
push
cmp
cltd
loope
adc
cli
pushl
aam
lds
and
xor
inc
inc
test
cmp
add
jg
ljmp
sub
mov
arpl
sbb
mov
jg
movsl
pop
lret
mov
test
add
sub
cmp
jg
call
xor
push
inc
test
shl
push
mov
add
push
jmp
pop
je
inc
dec
cmpsl
push
je
stos
mov
pop
jno
mov
lcall
ja
add
xchg
stc
jb
push
enter
leave
xchg
in
call
push
inc
jne
and
ret
arpl
je
cwtl
insb
push
lods
dec
notl
cmpsl
test
lret
xchg
jge
inc
cs
out
test
pusha
je
push
lods
aad
pop
xchg
test
shll
clc
ljmp
sub
mov
bound
mov
shrb
mov
sbb
enter
mov
jae
jnp
shl
pop
jg
ret
addr16
push
mov
out
cmp
mov
cmpb
pushf
mov
and
mov
repz
fbstp
xchg
fsts
mov
sub
iret
inc
lods
sti
jl
dec
ljmp
jmp
xchg
fidivrl
jmp
add
inc
or
jecxz
mov
stos
jne
imul
pushl
inc
fisubrs
push
xchg
xor
fwait
sub
mov
mov
loop
or
inc
clc
mov
pushf
repz
jg
loopne
paddd
sbb
add
out
dec
push
adc
sbb
mov
mov
ljmp
add
mov
fwait
cmp
cmp
push
or
mov
ror
popa
hlt
mov
dec
dec
das
je
xchg
mov
mov
and
inc
push
lahf
cmp
push
jno
in
fsub
sahf
es
xchg
or
xchg
jae
lcall
mov
incl
out
inc
fisttps
movsl
cltd
push
mov
pop
jnp
jge
pop
movsl
cmp
ljmp
and
pusha
push
cli
push
iret
testb
xlat
push
inc
and
stos
push
jecxz
outsl
in
push
jp
mov
pop
sub
pop
cmc
mov
mov
pop
icebp
jg
and
es
mov
fidivs
push
xchg
and
pop
das
cli
ljmp
xchg
mov
mov
sub
insb
adc
ds
lahf
fadds
pop
lds
lcall
js
xlat
add
and
mov
test
jnp
mov
enter
pop
lcall
fsubp
cli
jne
popf
cwtl
jnp
xchg
push
adc
fdivl
mov
dec
xor
jmp
pushf
test
xchg
out
shll
dec
adc
xchg
cld
pop
sbb
fcoms
push
push
sub
pushf
gs
inc
ret
push
inc
push
mov
dec
cld
jmp
push
and
jmp
out
arpl
or
daa
or
jns
mov
jmp
push
js
lcall
pop
jmp
or
push
inc
mov
cwtl
fiadds
aad
pop
inc
jns
sbb
adc
out
incl
mov
es
lods
dec
in
ljmp
inc
xor
int3
push
dec
jo
xchg
mov
call
bound
pop
insb
in
fnsave
int3
add
adc
sbb
fistpl
jmp
adc
out
ljmp
lcall
in
dec
sub
jmp
lock
decl
and
dec
pushf
popa
jecxz
in
xchg
or
movsb
cwtl
inc
push
mov
xchg
movsl
jg
call
mov
push
mov
xchg
pop
push
mov
test
aam
mov
jmp
int
outsb
sbb
xchg
jmp
mov
das
stos
in
mov
loop
dec
dec
decl
mov
xchg
into
icebp
mov
fcomps
aam
lods
fsubrs
mov
decl
insb
mov
lods
ret
scas
out
sub
cmp
inc
lea
movsl
sbb
lds
aam
push
test
outsb
jmp
or
push
loopne
sti
mov
xor
lcall
adc
stos
xchg
cmpsb
lods
aaa
int
data16
xchg
and
sti
or
test
push
cmp
pop
in
je
lods
mov
lods
xchg
mov
incl
ja
in
rcl
push
and
lds
mov
add
stos
iret
aam
dec
jg
incl
lock
fstpt
out
jmp
in
icebp
lcall
pop
movsl
push
mov
aaa
fstpt
jmp
daa
sub
cwtl
pop
xlat
mov
imul
bound
lcall
fimull
loopne
popa
pusha
mov
repnz
bound
decl
dec
xor
stos
roll
mov
sbb
je
pop
push
decl
pop
pop
das
mov
test
fcmovnb
scas
cmc
in
out
sub
jmp
loop
ljmp
lcall
dec
pop
push
inc
jecxz
fildl
aaa
xor
xchg
cmp
mov
push
fadds
mov
loopne
inc
in
out
jge
insl
cld
sahf
lcall
icebp
add
aaa
cld
decl
pop
js
imul
lahf
and
punpckldq
scas
jo
jmp
data16
dec
mov
jecxz
mov
iret
aad
mov
add
or
mov
jp
jp
xor
xor
or
xchg
sub
mov
add
sbb
push
and
xchg
stos
pop
fisubrs
dec
xchg
mov
mov
pop
sbb
inc
aam
xchg
scas
jp
arpl
cmc
stos
call
ficoml
idivl
adcb
pop
or
in
mov
push
xchg
sbb
lret
xor
xchg
lahf
xchg
lret
mov
test
cmp
mov
decl
js
sbb
cwtl
mov
rclb
lds
mov
cs
mov
ljmp
xchg
lods
mov
jae
call
fadd
dec
je
dec
mov
call
out
mov
xchg
push
inc
sbb
mov
int
adc
lcall
sbb
xchg
sbb
lcall
cmp
loope
push
sub
cltd
aaa
fs
incl
adc
aas
popa
shll
inc
add
sbb
lcall
xor
xor
adc
out
rorb
mov
push
addb
sub
jmp
testl
jp
push
pop
aaa
push
mov
inc
out
mov
hlt
call
pop
rolb
inc
cmp
xchg
jmp
pop
push
jecxz
xchg
inc
mov
xchg
popf
test
jmp
jb
insb
mov
jmp
xor
push
mov
insl
sbb
jae
push
decl
lcall
push
movsl
sub
and
cmp
mov
jp
into
dec
pusha
jmp
cli
xor
and
push
test
test
jbe
xchg
lcall
sub
add
out
cltd
add
jno
adc
jnp
mov
and
xor
push
cld
jl
pop
push
gs
cmp
cmp
inc
imul
je
hlt
decl
das
pop
pop
push
jo
or
jg
rorl
popf
ljmp
incl
outsl
add
mov
fiaddl
daa
sbb
cmc
sbb
lcall
imul
in
out
mov
outsl
jle
stos
or
and
mov
xor
ljmp
adc
test
xchg
pop
or
or
cld
lds
mov
fisttpl
add
pusha
lock
faddl
xchg
lret
add
jns
adc
call
test
insb
xor
lret
sub
xchg
xor
fadds
jmp
fdivl
sub
ljmp
adc
loop
mov
inc
xchg
stos
lahf
test
push
lods
dec
pop
in
adc
cwtl
ljmp
test
aam
int
aas
ret
clc
sahf
sbb
in
pushf
mov
xchg
bound
jecxz
rcr
adcl
js
push
mov
test
scas
cmp
rorb
aam
stos
insb
ds
in
sbb
sbb
lret
fmuls
cli
out
and
dec
mov
movsl
jno
test
dec
and
imul
xor
into
cmpsl
scas
cmc
or
sbb
das
sbb
nop
hlt
jmp
xor
xlat
popa
lea
pop
push
jne
sub
es
lcall
and
jnp
inc
dec
popf
je
mov
scas
popa
cmp
testb
jb
scas
pushf
adc
xchg
adc
loop
mov
push
cmp
mov
push
cmpsb
dec
cmpps
pushl
imul
sbb
cmp
and
mov
adc
push
fcoml
out
xchg
hlt
mov
arpl
sbb
xchg
mov
add
cmc
incl
pop
sbb
dec
sub
push
mov
es
sub
ljmp
outsl
das
or
lock
jb
xor
hlt
jle
pop
xchg
sarl
mov
ljmp
mov
sarb
inc
dec
scas
orb
and
cmpsb
lcall
jmp
push
nop
stos
jnp
mov
fcmove
orl
fists
cmp
incl
lahf
loope
scas
mov
cmp
dec
sbb
ret
mov
lahf
jnp
mov
scas
icebp
push
fmull
sbb
pop
ffreep
subl
mov
mov
push
cmp
inc
stc
dec
jmp
cs
xor
out
push
push
rorb
lahf
add
xor
jl
fidivl
sbb
sbb
in
outsb
add
arpl
ljmp
inc
mov
inc
mov
fcomip
imul
sbb
int3
imul
sub
lahf
sti
sub
cld
and
jg
mov
cmp
sbb
mov
sbb
pushf
xor
cmpsb
mov
scas
mov
pop
push
jo
scas
push
call
or
add
dec
iret
stc
int3
jg
mov
pushl
cmpl
pusha
test
and
cmp
ret
ret
cmp
popa
cwtl
mov
lock
inc
sahf
pop
pushf
push
lcall
ljmp
rorl
pushf
enter
cld
mov
mov
xchg
jl
xchg
jle
lcall
daa
mov
mov
cld
mov
pop
or
fimuls
aam
sbb
outsb
test
pusha
call
sub
xor
cwtl
dec
rorl
fimull
data16
ljmp
xchg
mov
adcb
adc
in
inc
test
ljmp
das
repz
int
push
add
inc
int
push
fdivrp
fisttpll
jmp
push
sub
mov
movsb
ret
xchg
or
jo
adc
and
decl
dec
mov
adc
cs
leave
xchg
jp
out
and
sub
xor
mov
fcomip
mov
outsb
sub
jmp
rorb
mov
push
sub
jmp
test
or
cltd
xchg
mov
aam
adc
lret
and
cmp
lcall
pop
js
dec
jge
adc
repnz
loop
mov
loope
ret
shrl
or
push
imul
cmpsb
nop
outsb
lea
ret
mov
nop
out
xor
dec
mov
or
jmp
cmp
es
and
daa
shrl
loopne
cmpl
cmp
add
jmp
call
imul
pop
or
xchg
mov
push
sub
rorl
out
sbb
cwtl
aad
ret
dec
xchg
jae
mov
pop
xchg
mov
arpl
mov
pop
cli
jle
mov
stc
cmpsl
inc
cmc
mov
pushl
push
data16
std
in
inc
cs
xor
push
mov
cli
jg
and
rorb
sbb
decl
clc
adc
rcll
sub
xchg
repnz
sub
shl
add
lock
pop
pop
cld
pop
inc
lock
fdivl
mov
aad
call
sar
lcall
insl
xor
or
lret
mov
mov
sbb
lods
cmp
jg
sub
sbb
testb
data16
repz
sbb
in
lahf
push
scas
into
pusha
lahf
dec
mov
in
mov
push
mov
jmp
nop
popf
jg
jg
and
scas
inc
pop
out
push
and
jo
mov
stos
mov
lcall
mov
push
push
arpl
imull
shlb
fmul
xchg
repz
dec
popf
sbb
call
fimull
scas
jne
mov
and
rcl
stos
mov
dec
adc
push
std
call
sahf
cmp
inc
mov
or
xchg
xchg
push
ja
dec
push
adc
stos
call
push
cli
jae
pop
scas
pop
push
and
push
sub
lret
pushf
ljmp
mov
arpl
mov
xchg
dec
ret
shlb
sub
mov
fnstsw
adc
incl
jbe
xlat
xor
mov
and
push
xor
in
add
mov
cs
test
jg
incb
dec
adc
sub
sbb
cli
jne
int
xchg
xchg
pop
out
gs
jl
call
into
mov
test
mov
jb
enter
popf
sbb
and
jmp
mov
imul
sub
sbb
mov
cmp
push
push
xor
arpl
stos
xchg
lret
jge
xchg
ss
xor
pop
pop
push
je
orb
mov
sbbl
scas
mov
cmp
incl
insl
lcall
out
stc
mov
mov
scas
data16
jae
sbb
testb
ljmp
sbb
hlt
pop
test
xchg
sub
aas
jbe
ja
jmp
dec
clc
cmp
aad
add
or
cld
adc
cmc
xchg
mov
cmp
rcll
idivl
loopne
fstps
daa
stc
nop
jge
mov
lcall
cltd
call
mov
addb
add
jg
sub
test
mov
and
test
mov
dec
call
add
nop
cmc
push
mov
jp
mov
dec
cmp
incl
mov
rclb
xor
loope
xlat
faddl
lods
in
lds
jne
push
inc
std
mov
je
jb
push
sbb
mov
pop
ja
inc
xchg
enter
mov
decl
xchg
and
sub
mov
cmp
push
aas
popf
inc
cmp
hlt
and
sahf
test
jae
dec
pop
pop
push
adc
pop
pop
fdivr
cmp
dec
inc
cmp
lret
stos
das
insl
jbe
ret
fmuls
repz
sbb
in
incl
mov
xor
mov
test
mov
fsubrl
cwtl
push
aad
lcall
adc
xor
cmp
out
dec
pop
lret
call
mov
jg
lock
ret
add
pop
call
push
push
dec
add
and
mov
push
xchg
cltd
mov
mov
sub
mov
lret
sub
and
mov
hlt
sar
mov
sbb
les
call
pop
dec
bound
xchg
lret
jns
and
sub
sahf
mov
scas
daa
fisubs
cmpsl
xchg
scas
jmp
xor
lods
in
adc
cld
push
mov
push
es
outsl
pop
lock
popa
enter
ds
out
mov
xchg
cmpsl
les
adc
in
xchg
pop
inc
cmp
or
push
jmp
cmpsb
cmpsl
push
jnp
stos
lret
sar
fnstenv
icebp
xlat
and
push
addr16
jmp
out
mov
repz
and
pop
pop
adc
lock
push
loope
push
cltd
call
push
notb
rcrl
mov
jns
movsl
repnz
daa
adc
out
mov
push
push
mov
xlat
lds
insl
mov
fsubr
ljmp
jne
mov
xor
shrb
subb
or
insb
in
stc
movsb
jmp
pop
nop
inc
fwait
push
aam
inc
adc
and
xchg
jl
dec
jbe
mov
jge
xor
fadds
lcall
sub
xor
mov
xchg
dec
es
incl
test
stos
out
jmp
mov
lods
out
in
and
aaa
xchg
mov
jae
call
cmp
push
or
mov
leave
push
insl
sti
inc
push
call
test
mov
sub
ljmp
es
sub
call
mov
arpl
pushf
insb
ror
inc
jae
jmp
mul
mov
mov
movsb
je
aad
cmc
test
jmp
adcb
lcall
or
aam
insb
stos
or
mov
fcomi
inc
popa
mov
es
in
xor
lcall
call
ljmp
jns
push
mov
icebp
jle
sub
pop
cmc
jmp
jle
ret
pop
sub
adc
pop
sub
adc
lds
pushl
adc
inc
jno
pop
sbb
jge
xor
sbb
mov
lds
int3
and
or
mov
and
and
dec
fstl
lods
movsb
inc
xor
hlt
cmp
pop
sub
or
push
mov
mov
xchg
jnp
push
test
and
dec
rorl
jno
andl
nop
cmp
sub
xchg
dec
fnstenv
call
fucomi
push
inc
dec
ss
decl
lock
fwait
cmp
jns
cmc
mov
add
cld
shlb
aam
dec
int3
fwait
outsb
mov
ret
and
and
jmp
popf
inc
in
or
add
nop
decl
cwtd
aam
enter
ja
lret
in
dec
lds
fcoml
and
call
test
fmulp
test
mov
pop
test
mov
jb
shll
xchg
push
jb
incl
xlat
addl
mov
push
xor
xchg
adc
inc
imull
iret
jnp
jns
sbb
call
mov
cmp
mov
sub
icebp
stos
fcmove
add
add
lcall
rorb
lods
mov
inc
mov
rorl
mov
adc
pop
sbbb
filds
mov
push
push
mov
sarb
test
arpl
loop
icebp
test
stc
sti
jne
adc
scas
or
sbb
incl
add
jle
mov
dec
pushf
push
inc
dec
roll
push
bound
aaa
std
incl
movsb
cs
mov
jle
pop
jnp
mov
sahf
mov
decl
lods
lds
ja
jl
sahf
je
addl
cmp
sahf
or
mov
stos
pop
inc
iret
mov
add
out
lods
shlb
decl
sahf
jo
aas
std
test
inc
pop
xchg
inc
push
or
lahf
stos
movsl
incl
inc
pushf
jg
hlt
fcompl
cmp
test
xor
js
mov
push
sbb
inc
pushf
leave
hlt
in
inc
and
std
ror
xor
js
call
xor
adc
jnp
mov
incl
push
sub
pop
xor
gs
inc
xor
insb
into
mov
push
mov
xor
fwait
incb
arpl
ret
nop
add
xorl
jmp
aas
lahf
in
push
inc
stos
xor
push
xor
cld
inc
or
daa
jmp
fdivl
call
popa
call
add
xor
rcrb
add
adc
popf
cmp
call
sti
mov
inc
push
jae
or
out
dec
xor
lcall
add
inc
in
mov
xchg
mov
inc
clc
popa
icebp
bound
ljmp
sarb
sbb
rorl
mov
hlt
outsb
lea
mov
clc
fcomip
lea
sarl
subb
xor
rcr
or
xchg
push
inc
out
push
xchg
mov
xor
xchg
sbb
push
fwait
jo
xor
mov
xchg
add
mov
fwait
and
mov
neg
pop
out
addr16
pop
sub
out
jb
sti
or
data16
or
xorl
test
xchg
dec
lahf
dec
jg
outsl
mov
and
rcrb
jo
jmp
in
sahf
fs
mov
call
lcall
sbb
xchg
nop
sbb
mov
js
mov
jb
fmuls
lret
sbb
sti
pop
mov
xlat
add
mov
mov
sub
mov
leave
mov
pop
inc
mov
add
cmpsl
dec
dec
jmp
xor
jns
aas
mov
int3
lea
and
mov
and
adc
cmp
das
sarb
fldlg2
xchg
mov
in
pop
jae
pushl
cli
xor
scas
shrb
push
push
jecxz
loopne
lea
lret
push
xchg
ja
jbe
fldcw
stc
cwtl
pop
js
out
fisttpll
mov
xor
mov
fcomip
add
inc
pusha
or
stc
xor
sub
je
dec
repnz
decl
dec
pop
dec
jmp
bound
ud1
mov
push
and
cmp
cmp
push
subb
out
cmp
clc
and
jl
and
out
push
cmp
repz
stc
adc
add
and
aad
stc
pushf
ljmp
lods
and
sub
popf
lahf
arpl
add
push
stos
jmp
pop
lods
ljmp
shlb
xor
xor
mov
imul
ljmp
in
pop
sub
mov
push
lods
inc
mov
dec
mov
and
jmp
call
in
int
sub
sti
jg
test
mov
xor
jg
xchg
xchg
pop
and
icebp
cmpsl
mov
or
adc
mov
or
scas
cli
ljmp
into
mov
loop
int
pop
adc
popa
aam
or
push
addl
pop
loopne
adc
lods
andl
push
sti
ret
jle
decl
mov
ss
fstl
stos
and
xchg
ja
cmp
mov
sbb
pop
push
sbb
jo
es
or
cmp
das
add
push
inc
in
pop
cmp
jmp
mov
xor
xchg
or
sub
pusha
and
repz
xorb
gs
movsl
imul
cltd
xchg
ljmp
jmp
cmp
mov
mov
mov
in
adc
std
mov
fmuls
mov
aas
mov
mov
incl
lock
cmp
mov
insb
fnsave
aas
pop
jbe
inc
enter
pushl
insb
and
jae
lds
inc
and
xor
fwait
sub
and
and
test
pushl
inc
adc
cld
lahf
nop
repz
jp
or
sub
sar
rcl
pop
adc
mull
add
ljmp
xor
test
shlb
or
test
adc
or
call
dec
and
test
test
sub
or
pushf
or
mov
and
in
jmp
rcrl
int3
adc
mov
sarl
idiv
lahf
mov
popa
dec
lcall
sbb
scas
cli
mov
pushf
hlt
out
mov
call
sub
fisttpl
arpl
jecxz
iret
fwait
idivl
xchg
test
shl
testb
call
add
sub
rcll
push
mov
push
rclb
cmp
inc
lret
ret
fildl
push
sub
sti
sti
push
mov
stc
xlat
adc
mov
pop
xor
ljmp
mov
rcrb
aam
lcall
mov
or
nop
jo
adc
sub
push
jbe
aam
decl
rcll
mov
xchg
pop
dec
dec
fcoml
sub
adc
jp
jmp
out
ljmp
nop
jle
or
rolb
sbb
inc
loope
sbbb
pop
fs
aam
xlat
add
lods
loop
clc
decl
adc
icebp
xchg
scas
jo
xchg
xchg
shr
popf
dec
mulb
jo
or
push
in
jmp
cmpsl
insl
or
inc
fstl
xchg
lret
xlat
cmp
pop
sub
loopne
inc
mov
mov
sub
outsb
out
aam
mov
jp
iret
dec
ja
push
or
pop
mov
ds
loop
push
push
pop
mov
sbb
hlt
jne
sub
or
out
repnz
bound
call
mov
cmp
fisubs
movsl
mov
sahf
dec
mov
icebp
out
pop
xchg
lahf
test
mov
xor
daa
iret
cld
mov
jmp
arpl
mov
push
cmp
xchg
fcom
cltd
jno
or
imul
clc
call
pushf
lock
push
xchg
jg
add
push
roll
in
rolb
rcr
iret
movsl
push
jbe
or
dec
es
dec
cli
xchg
mov
mov
fisubrs
test
or
pushl
add
ret
cwtl
movsb
lcall
jg
adc
jnp
addr16
icebp
es
xor
xchg
ss
cmp
lfs
push
das
xchg
pop
popf
fbld
dec
lods
sbb
call
outsl
in
pop
push
sbb
nop
ret
loope
inc
arpl
xchg
or
inc
les
in
sub
decl
mov
mov
test
xor
pop
xlat
xor
dec
add
jmp
insb
push
mov
jbe
cmpsb
lods
lcall
popa
js
jg
call
jnp
rclb
pusha
mov
and
pop
rclb
jo
sbb
push
pushl
hlt
xchg
xor
jecxz
push
ret
js
ds
dec
js
test
sub
loope
jae
lds
xchg
into
adcb
repnz
jg
inc
sbb
push
lahf
inc
xor
adc
jg
inc
shlb
adc
in
imul
ljmp
imul
jae
in
add
sub
pop
dec
ret
ret
and
aad
ror
stc
decl
pop
or
jg
sar
xlat
pusha
outsb
inc
out
das
or
out
pop
loope
pop
adc
ret
clc
inc
jnp
cmp
incl
inc
mov
pop
ja
push
lret
imul
xchg
mov
imul
inc
and
sti
cmc
adc
or
jns
dec
or
lahf
pop
mov
stos
sbb
mov
push
dec
shl
cmp
loope
bound
mov
push
jmp
in
sbb
cmpsb
adcl
jmp
and
int3
mov
and
jmp
push
jl
cvtps2pi
sbb
jb
test
pop
push
call
iret
lea
js
mov
inc
mov
xor
aam
and
adc
shll
inc
mov
mov
pop
repz
or
pushl
dec
fs
mov
jp
mov
dec
jle
das
int
lods
push
pusha
pushf
mov
fisubrl
stos
mov
bound
xor
sti
and
push
or
call
in
lds
mov
ss
or
xchg
mov
xchg
out
sbbb
int
jg
sbb
sub
mov
popf
mov
sub
scas
inc
call
lahf
lahf
jg
dec
out
pop
xor
sub
sbbb
fcomip
jg
pop
out
ret
xor
pop
push
jb
shr
mov
incl
inc
push
fwait
out
mov
pushw
xor
outsl
iret
ret
push
lret
ljmp
and
pop
inc
ja
sbb
cmp
adc
inc
mov
out
pop
les
inc
hlt
fidivrs
fildl
dec
lret
or
ret
xor
test
push
jmp
loope
clc
mov
inc
push
rcll
cmpsl
daa
lods
lret
and
decl
imul
push
mov
out
sub
lcall
cmp
aas
das
mov
not
push
and
xchg
stc
sub
cmc
call
stos
and
int
f2xm1
jp
fnsave
dec
fwait
cmp
lret
inc
sti
xchg
cmp
and
lods
pushf
mov
and
and
jg
nop
xchg
imul
mov
lock
mov
xchg
jo
fsub
shlb
out
stos
jmp
outsb
aad
sub
mov
jb
mov
push
enter
mov
cmp
call
add
push
dec
aad
dec
and
lcall
lock
xor
incl
fs
movsb
inc
push
cmp
je
int3
sahf
inc
or
push
jbe
out
sub
push
decl
jl
icebp
sbb
add
xchg
js
cmpsb
xchg
add
divl
lcall
jns
lods
bswap
mov
pop
xchg
pop
fcoms
sub
pushl
mov
push
jne
gs
push
mov
negl
cmpb
ret
jnp
cwtl
call
sbb
inc
pop
jno
loop
push
icebp
fucomi
jg
cs
mov
popa
dec
into
add
ror
pop
push
inc
flds
out
adc
ss
call
xor
add
movsl
dec
xchg
mov
jae
mov
jg
push
sbb
mov
stos
and
bound
lahf
jb
leave
call
sbb
jmp
out
test
lahf
lcall
pusha
std
imul
mov
mov
cli
pop
popa
insb
mov
adc
add
and
mov
out
std
mov
mov
cld
addb
leave
aad
aaa
aas
mov
dec
add
mov
out
shlb
incl
mov
cwtl
mov
cmpsb
loop
sbb
out
cmp
aaa
sbb
in
addr16
pushl
mov
cs
jle
ja
push
es
cmp
cmc
sbb
stos
jo
hlt
fmull
jo
call
in
pop
scas
xor
out
in
arpl
cld
sti
in
jns
cltd
cmc
sbb
jnp
inc
mov
ljmp
jmp
jle
imul
push
adc
repz
mov
test
outsl
mov
lret
inc
or
dec
incl
into
andb
rcll
loop
scas
add
into
push
add
addr16
decl
cmp
into
stos
jno
pop
ret
cmc
in
jmp
sbb
xor
data16
inc
inc
ljmp
cli
fcom
mov
mov
jecxz
insb
std
loopne
out
orl
xchg
sub
push
adc
in
add
js
js
test
sub
clc
fcomps
dec
sahf
aas
dec
dec
out
lock
push
jmp
inc
push
cmp
mov
rcr
inc
adc
rclb
sahf
pop
and
out
adc
lahf
insl
rcrl
sbb
pop
jb
push
insl
sub
stos
fiaddl
lcall
je
movsl
lcall
icebp
outsb
cwtl
fcmovu
call
lods
sbb
xor
mov
pop
mov
fsubs
push
data16
pop
add
mov
lcall
test
cmp
rolb
pop
lret
sub
push
je
stc
lods
imull
sbb
mov
test
test
iret
add
mov
xchg
sbb
push
pop
xchg
jp
jge
mov
call
aam
cs
test
pop
sub
jb
adc
xor
jbe
xchg
je
out
clc
insb
imul
xchg
push
or
dec
bound
in
es
daa
ret
hlt
call
pop
fdivl
push
xor
xchg
clc
out
sbb
mov
or
sbb
mov
leave
sahf
inc
xor
mov
xlat
mov
enter
fmul
dec
sbb
call
pusha
or
bound
mov
sbb
jle
arpl
ljmp
push
das
fsubrl
mov
mov
xchg
adc
mov
loope
xor
loope
push
dec
mov
leave
lea
xor
xchg
ss
push
lock
mov
addr16
inc
sahf
push
xor
jle
cmp
pop
add
mov
xchg
sub
ljmp
repz
fdivs
lret
sub
inc
mov
fildll
lods
and
mov
jge
dec
pop
mov
push
stos
shr
pop
dec
dec
outsl
mov
and
add
ljmp
mov
icebp
mov
sbb
daa
fstps
jb
jns
insb
jnp
mov
aas
das
sbb
int
fcomip
cld
dec
xor
cmp
cmpsl
in
mov
add
imul
adc
mov
mov
inc
add
cmpsb
and
es
ret
icebp
sbbb
jmp
fucomip
stos
sub
mov
in
shrl
xor
addr16
push
cltd
sbb
ss
call
pop
sub
arpl
fildll
psubq
addr16
add
lds
jg
call
sbb
mov
bound
jmp
arpl
imul
repz
scas
lcall
adc
test
inc
push
sbb
aaa
or
mov
loop
mov
rcrl
xchg
jg
fwait
jne
mov
mov
dec
sub
xchg
call
jmp
pop
dec
jl,pt
jl
ljmp
mov
sbb
jns
mov
pop
rcl
mov
test
call
pop
dec
or
stos
mov
movb
jmp
int
pop
or
push
adc
xor
xchg
lret
pop
loop
pushl
mov
sub
clc
or
rcll
imul
jecxz
enter
divl
jmp
imull
lods
xchg
jl
add
imul
call
sub
lret
fs
lcall
out
mov
inc
mov
popf
push
lahf
jecxz
pop
pushf
mov
push
mov
mov
pushl
test
pop
jnp
dec
sub
xlat
mov
sub
jne
push
pop
jge
incl
cld
idivb
xor
cmp
dec
mov
mov
add
ljmp
and
insb
sub
fwait
pop
loopne
or
lahf
je
popf
fcmove
mov
incl
mov
and
jl
mov
jp
pop
cs
cmp
dec
ljmp
sub
idivl
push
cmp
in
ret
lahf
sub
inc
sbb
mov
decl
fstpl
imul
jg
ljmp
rorl
xchg
les
dec
jle
pop
sbb
inc
in
xchg
jo
xchg
imul
loopne
adc
inc
push
or
scas
mov
adc
inc
push
push
or
fnstenv
mov
mov
mov
add
cmp
ljmp
jo
mov
cmp
mov
push
jns
inc
mov
adc
jmp
imul
call
arpl
loop
jecxz
sbb
inc
cmpsb
cmp
cmp
sub
pop
xchg
dec
dec
mov
sub
pop
push
test
adc
xchg
mov
insb
and
adc
xchg
clc
mov
fmull
jmp
aaa
imul
dec
mov
iret
push
rolb
stc
outsb
aad
enter
decl
cmc
push
or
iret
mov
out
cltd
pop
cmp
aaa
lock
jl
push
ljmp
stc
sarl
cmpsb
pop
paddb
gs
dec
dec
icebp
psubusb
and
cld
incl
sarl
inc
xchg
push
fldenv
movsb
leave
aam
imulb
dec
cmp
mov
movsl
jmp
out
notl
sahf
lea
std
js
dec
mov
mov
ret
mov
adc
aaa
out
test
scas
ds
orl
xchg
jle
decl
mov
ja
std
iret
lds
aas
mov
mov
cltd
xorb
push
pop
jnp
dec
fstl
xor
adc
int
test
mov
fistps
ljmp
adc
imull
stos
adc
sbb
mov
int
add
mov
imul
movsb
fisttpl
insb
push
leave
roll
inc
test
lahf
mov
jns
mov
jp
sub
dec
icebp
fsubs
incl
scas
mov
daa
fadd
scas
mov
jl
push
mov
push
test
incl
mov
pushf
pushf
iret
lock
aad
aaa
fsubrl
inc
out
ljmp
iret
sbb
or
push
cmp
inc
jle
fwait
jbe
xchg
pusha
call
xchg
mov
loope
xor
in
adc
negb
sub
out
xor
cld
lcall
inc
in
popf
pusha
mov
cli
out
test
jo
movsb
jecxz
sbb
xor
mov
mov
incl
mov
jns
shl
mov
and
pop
sub
sub
adc
mov
mov
sbb
inc
aaa
lea
lcall
test
scas
cltd
jo
seto
cmpsl
add
pop
outsl
dec
insl
notb
mov
lcall
call
iret
jl
mov
outsb
aas
push
jge
out
dec
xor
push
lcall
lea
clc
mov
dec
adc
ret
or
cli
aam
sbb
cmp
jmp
adc
mov
cmc
loope
mov
pushf
pop
and
ret
mov
dec
sbb
inc
out
push
mov
sbb
mov
and
push
out
aas
xchg
js
ret
in
jnp
xchg
xchg
mov
cmp
test
and
mov
das
or
jmp
mov
cmp
mov
or
out
xchg
bound
sbb
ljmp
push
int
daa
cmp
mov
mov
pop
ds
out
scas
mov
cld
adc
popf
decl
frstor
fistps
movsb
push
dec
jnp
xchg
mov
or
incl
mov
mov
and
int
fdivrs
and
adc
mov
stc
jmp
pop
leave
adc
loope
neg
fisubrs
inc
push
pop
mov
push
lods
pop
sub
cli
std
cmp
std
lcall
sbb
outsl
dec
cmpl
xchg
inc
lcall
or
incl
out
in
jno
sahf
mov
mov
adc
ret
aam
pop
mov
push
xorl
out
in
cmp
aaa
sub
xchg
jg
jmp
cmp
sti
ror
mov
aam
scas
jg
jmp
mov
out
or
sbb
mov
test
popa
xchg
leave
cmp
das
call
int
add
dec
cmp
mov
add
xchg
loope
daa
push
adc
push
pushl
gs
pop
push
xor
sub
jns
add
mov
push
mov
incl
jg
sub
daa
mov
dec
fisubs
std
das
es
clc
cltd
daa
jno
ret
fdivr
push
cld
ljmp
and
and
cltd
sub
inc
lahf
xchg
out
pop
inc
jmp
orb
cltd
lcall
fsubr
fldcw
cmp
sbb
out
aam
mov
fistpll
xor
jnp
das
int3
neg
sbb
popa
fstp
ror
mov
cmp
adc
cmp
adc
clts
cmp
mov
push
outsl
test
ret
mov
lea
pop
xor
fmul
outsl
xchg
xor
scas
cli
dec
sub
jne
iret
lahf
inc
scas
fimull
cld
flds
pop
mov
pop
ljmp
loopne
pop
hlt
sti
lods
push
xchg
notb
sbb
or
add
icebp
jecxz
mov
hlt
and
sub
push
xor
arpl
fbld
sub
sub
ljmp
dec
stos
lret
xchg
jl
cld
pop
push
pop
das
pop
mov
pop
aas
sbb
in
mov
jmp
fimuls
pusha
lock
or
lods
pop
jp,pn
jge
cwtl
cli
fisttps
jle
fcoml
jmp
xchg
and
adc
addr16
add
mov
insb
cmp
xor
lcall
mov
push
notl
jmp
dec
int3
movsb
js
dec
nop
insl
sub
jno
decl
jno
hlt
mov
adc
das
jne
mov
hlt
add
test
jle
jmp
imul
jne
push
je
cltd
cmp
outsb
in
push
repnz
or
lahf
mov
nop
lcall
loop
mov
dec
fnstenv
pop
data16
sti
out
push
das
cmp
mov
pushl
imul
std
lcall
repnz
push
test
fcomp
cmp
mov
in
pushf
and
lds
ja
mov
decl
push
out
ret
mov
scas
push
ja
sub
add
jb
iret
pushw
out
pop
xor
cld
mov
mov
mov
insl
outsb
push
push
insb
shrb
mov
popf
test
pushl
data16
dec
inc
sub
adc
push
mov
push
inc
stos
das
or
cli
call
mov
stos
sub
mov
sti
das
sbb
jl
push
arpl
imul
add
sbb
push
gs
in
arpl
add
xor
adc
clc
cwtl
mov
hlt
fisttps
in
in
sbb
mov
pop
mov
inc
decl
es
lahf
mov
unpckhps
sahf
repnz
pop
push
into
sti
mov
jmp
jmp
cmp
xchg
arpl
mov
ljmp
clc
call
inc
xchg
pop
lea
cmp
adc
and
gs
faddl
mov
adc
cli
iret
aaa
mov
mov
sbb
faddp
xor
sub
fdivr
pop
pop
cmc
sbb
ljmp
imul
scas
and
mov
std
leave
mov
jb
aas
mov
mov
scas
ljmp
and
mov
jle
enter
sahf
add
fcomip
call
jmp
jp
mov
test
jbe
sbb
outsl
lds
jle
jmp
xorl
int3
sti
and
mov
mov
jns
inc
aas
mov
lret
lds
test
cmpsl
iret
cmp
std
faddl
in
arpl
icebp
call
loopne
pop
inc
push
insl
fidivs
sti
fildl
mov
ljmp
data16
xchg
add
pop
loop
in
in
jne
xlat
jns
loope
jmp
ljmp
test
cmp
repz
push
or
jle
sub
lods
bound
loope
lds
call
cmp
mov
jecxz
pop
mov
mov
mov
lret
les
or
cmp
div
jge
dec
mov
pop
into
mov
sbb
mov
out
add
cmp
pushl
outsb
and
mov
cmpsl
sahf
jo
dec
lods
ret
insl
subl
leave
negl
popf
pop
scas
popf
push
test
adc
jo
aam
cmpsb
mov
dec
mov
pop
shlb
sar
in
and
jne
sub
jmp
rcrb
js
test
ds
in
sbb
pop
dec
sbb
in
iret
cwtl
ud0
add
scas
mov
push
out
dec
lahf
jae
ficoml
clc
ss
ljmp
cmp
push
outsl
cld
adc
shlb
outsb
les
pop
cmc
push
sbb
sub
push
xor
das
mov
add
push
adc
add
lahf
mov
sbb
jge
pusha
pop
jge
or
cli
xchg
pop
push
es
sbb
adc
sbb
dec
and
ljmp
mov
xchg
pop
cld
xchg
shrl
mov
xor
pushl
xchg
imul
lret
jecxz
jmp
mov
bound
addr16
pushl
jle
inc
cmpsb
lods
jle
xor
imul
inc
mov
sub
divl
mov
call
les
pop
inc
outsb
sub
lret
lcall
xchg
imul
dec
repz
rcr
roll
mov
mov
xor
dec
test
fwait
call
fs
leave
out
dec
lahf
inc
xlat
mov
fcmovu
mov
jge
mov
pushl
cmpsb
add
out
adc
ljmp
addr16
push
jmp
test
loope
jnp
mov
ficomps
out
pop
lock
int
and
mov
sar
das
clc
lcall
cmp
inc
scas
aad
js
cmpsb
push
in
aad
js
int3
js
and
mov
sub
test
jge
and
inc
pop
jb
jnp
stos
mov
insl
xchg
stos
push
mov
add
mov
push
pop
mov
stos
popa
lcall
lods
stos
or
in
scas
xor
and
fisubl
inc
lea
lcall
xorb
add
push
jmp
dec
jmp
fisttpll
fcmovne
mov
mov
scas
add
push
sahf
jg
sub
xchg
loope
fildll
pop
fidivrl
add
cli
lcall
cmp
fwait
dec
clc
rcrb
push
orb
popl
and
push
imul
sub
sbb
ja
mov
or
push
imul
stos
jo
fcoml
jno
pushl
and
test
cmpb
xor
icebp
xchg
icebp
leave
inc
xchg
push
lods
fdivr
dec
ret
adc
pop
cmpsl
cltd
add
cltd
cli
sti
jae
xchg
sbb
outsl
push
jne
jnp
lock
jmp
aam
xor
jle
je
sbb
fdivrl
pop
sbb
fisubl
or
cs
mov
jae
jb
sti
incl
jmp
out
lahf
pop
lock
nop
int
out
mov
mov
jg
jmp
into
lret
faddl
negb
jge
cmc
cmp
sub
out
or
call
lret
call
cmp
jne
popa
das
xor
sub
or
hlt
outsl
ss
dec
decl
gs
mov
movsl
push
cwtl
iret
aad
cmp
xorb
hlt
mov
xchg
mov
shrb
lock
push
test
and
lret
ret
pop
mov
mov
lods
movsl
rolb
out
push
lret
mov
les
lret
or
or
call
ja
and
gs
sbb
test
jo
ja
jbe
inc
adc
mov
mov
outsl
clc
cmp
xchg
dec
outsb
mov
mov
aam
je
popa
rdpmc
sub
ljmp
mov
mov
jge
int
or
popf
ret
lods
arpl
inc
das
xchg
cwtl
cld
mov
inc
ljmp
add
mov
inc
loope
sbb
sub
gs
inc
push
mov
jb
call
jo
inc
out
jle
aas
test
in
scas
mov
or
sub
adc
or
out
cmp
mov
test
sub
out
test
lock
pushl
std
jle
lret
test
es
pushf
mov
cmp
or
xchg
dec
test
cmp
incl
push
jbe
in
sahf
or
xchg
jae
cmpsl
mov
mov
fs
jmp
jmp
pop
sbb
leave
test
sub
dec
pushf
scas
mov
pop
push
xchg
sub
xor
insb
or
cmp
out
or
cmp
jbe
adc
pop
dec
stos
push
sub
insl
pop
je
mov
lcall
in
mov
mov
sbb
shr
mov
dec
dec
add
fwait
pushl
mov
mov
daa
sub
ftst
aad
enter
sbb
movsl
scas
push
decl
gs
call
sbb
outsb
inc
cmp
aas
arpl
ljmp
push
ljmp
insb
sub
and
call
jp
jp
sbb
pop
xorb
popa
out
sub
js
icebp
std
mov
push
cmp
mov
push
std
lcall
fisubl
lahf
and
mov
ss
ficomps
loope
outsl
adc
decl
xchg
aaa
movsb
imul
scas
jg
test
popf
and
jo
jg
hlt
sbb
jmp
loopne
mov
add
aad
icebp
inc
into
and
pop
sub
sbb
fidivl
call
in
cmp
xchg
fstpt
sbb
cmp
pushl
pop
xor
sbb
hlt
fimuls
pop
cmp
cmp
ljmp
cld
jne
dec
add
add
fiaddl
std
test
cmp
ds
out
ljmp
rorb
dec
aas
dec
push
inc
lcall
cmp
cmc
sahf
call
pusha
and
outsb
leave
cltd
jg
movsl
lahf
test
mov
lea
gs
push
test
mov
incl
std
dec
xor
jp
gs
lret
push
je
cmp
cmp
jmp
push
add
push
xor
mov
add
sub
sub
test
imul
ljmp
xorb
xor
gs
mov
js
fildll
scas
jo
jl
sar
lcall
in
jbe
push
cmp
push
ja
mov
insl
sarb
fldl2e
out
incl
jnp
add
jle
in
and
xor
jl
inc
jo
push
call
jl
iret
das
and
filds
xchg
les
ss
mov
push
outsb
lahf
imul
fnsave
pop
push
adc
mov
data16
fs
cmpsb
jne
lret
test
lret
mov
decl
mov
lods
pop
pop
repnz
mov
pusha
lods
push
dec
in
shl
pusha
and
mov
stc
jl
lahf
scas
fs
and
inc
mov
or
inc
inc
sub
stc
xchg
lret
sbb
adc
test
mov
push
ret
popf
lock
popf
decl
lock
fidivl
repz
lock
lcall
cld
scas
daa
out
in
ds
xlat
pop
xchg
xchg
jne
scas
in
mov
stos
and
fcmovnb
jne
shr
pop
test
loopne
in
xchg
mov
sti
jmp
jmp
mov
mov
mov
leave
lret
pop
ret
cmp
add
push
lahf
xor
sbb
stos
jmp
add
int3
repnz
dec
aaa
bound
mov
icebp
jb
call
push
incb
rcrb
sbb
mov
inc
pop
nop
lcall
call
in
add
cmpsl
dec
shrl
mov
or
lock
dec
lods
gs
ljmp
imul
and
pop
push
movsl
add
fstpl
rcrb
ljmp
push
inc
lahf
mov
in
push
adc
cld
pop
mov
ljmp
pop
stc
lods
push
leave
inc
push
into
dec
mov
loopne
div
hlt
mov
hlt
fnstenv
jno
loopne
fsubs
les
mov
out
mov
cmpsb
movsb
shll
out
repz
movsl
add
aas
and
int
idivb
incl
pop
cwtl
adc
ljmp
pop
lret
addb
cmp
sbb
ljmp
call
and
or
into
bound
jmp
xchg
sahf
sbb
insb
jp
and
decl
sbb
xchg
or
es
jb
aam
fisubl
or
aad
xchg
adc
pop
outsb
add
ljmp
mov
cwtl
mov
mov
jg
push
jecxz
cmp
shll
push
push
rcll
stos
leave
jl
test
enter
ljmp
xor
sbb
or
sub
jae
lcall
xor
enter
and
fldenvs
ficomps
and
or
decl
loop
add
insl
sub
arpl
popa
imul
daa
fs
push
xor
popa
test
jno
pop
lock
fmul
lods
fs
push
sub
cmp
cltd
jg
pushl
xchg
jae
dec
aam
inc
test
jne
call
push
mov
imul
xor
dec
pop
divl
ret
inc
in
iret
andl
out
mov
hlt
lock
mov
mov
xchg
test
fwait
pop
xlat
pop
sahf
push
sbb
pop
sub
ljmp
inc
test
push
in
cltd
mov
enter
icebp
mov
push
in
movsb
dec
push
push
jo
fwait
adc
jg
jae
add
ds
scas
mov
mov
mov
or
jmp
in
jge
jp
mov
sbb
incl
lea
jo
in
nop
jnp
or
mov
movsl
je
inc
das
clc
lcall
rolb
clc
pop
adc
inc
inc
xor
lcall
lcall
jg
jecxz
xor
aas
inc
rcr
or
or
data16
popl
lods
jge
lret
sarb
fsubrs
pop
jl
pop
aas
and
mov
lods
ficoml
mov
iret
ja
or
push
xchg
cmc
iret
mov
mov
xchg
inc
fs
scas
hlt
adc
xor
or
cli
lret
mov
add
jmp
and
lea
sub
xor
stc
adc
incl
cmp
xchg
jne
mov
out
fidivrl
or
pusha
push
or
jns
adc
incl
pop
test
hlt
dec
xor
lcall
pop
add
pop
pop
movsl
mov
dec
push
adc
dec
and
mov
push
xchg
pop
push
sbb
jecxz
xchg
int
mov
cmc
sub
dec
clc
xchg
decl
adc
ret
sbb
push
in
mov
lock
adc
fimull
pushl
or
std
xchg
cltd
mov
fcoms
cmp
xor
pop
into
cmp
push
dec
fidivrl
into
incl
jb
cmp
sbb
push
inc
xchg
pop
in
cmp
xor
test
pushl
insl
daa
call
ljmp
or
aad
add
fcmovnu
mov
lcall
mov
ret
lock
adc
xor
sub
movsb
mov
test
mov
flds
dec
inc
pop
jmp
add
fdiv
and
cmp
loope
sahf
cwtl
and
pop
icebp
decl
pop
sub
outsb
call
call
fcompl
incl
add
jo
sti
xlat
and
test
xchg
jmp
mov
into
mov
in
and
in
ja
gs
and
mov
aam
js
sbb
jl
xor
xor
pmullw
push
aas
mov
jle
bnd
movsb
outsl
js
cwtl
mov
sbb
dec
scas
les
jae
into
test
mov
mov
pop
lcall
aam
pop
cmc
clc
adc
fistpll
std
into
cmp
add
stos
jae
outsb
test
pop
cld
mov
fidivl
push
inc
inc
inc
and
call
lcall
pushf
incl
js
xchg
int3
push
repz
jno
iret
cmp
mov
iret
mov
lcall
shlb
pop
dec
adc
mov
sub
negl
pusha
inc
clc
dec
xchg
mov
cltd
decl
call
shl
ret
out
mov
test
stos
sbb
sub
lds
push
push
and
outsl
cli
xor
sar
data16
push
mov
cmp
jo
fbld
cwtl
lcall
movsb
test
stos
jle
push
test
inc
loopne
ljmp
adc
sbb
or
push
xor
push
mov
in
inc
dec
incb
out
dec
mov
sbb
mov
rcll
into
dec
ss
mov
jg
jne
mov
push
or
out
sub
testb
mov
cs
in
xor
call
xchg
mov
sub
xchg
shrl
pushl
jmp
add
mov
leave
pop
lcall
mov
call
mov
dec
push
mov
jnp
xor
or
xor
mov
jecxz
pushl
pop
lret
add
xchg
lods
daa
cmp
out
push
push
mov
in
cmp
push
mov
mov
cmc
xor
mov
pop
xchg
loope
lds
pop
aaa
mov
addl
add
xor
cmp
js
arpl
or
ds
decl
xor
cmp
mov
mov
jl
or
gs
enter
ljmp
xlat
add
fistpll
js
adc
cmp
sbb
dec
out
ret
decl
add
sub
in
xor
mov
pop
movsl
les
aas
mov
sub
popf
std
inc
ljmp
pushl
int3
call
mov
fwait
sub
sbb
mov
imul
aam
sub
jno
filds
jne
repz
and
mov
iret
jmp
adc
test
or
jne
and
cmpsl
into
mov
mov
cli
orl
lret
inc
sahf
sub
rcll
mov
ljmp
push
push
push
fcomps
sbb
imul
mull
dec
sbb
pop
jns
lcall
dec
int3
addl
mov
pop
fisubs
adc
call
inc
hlt
cmp
in
jle
andl
xor
adcb
jmp
je
pop
daa
decl
add
and
pop
leave
xor
stos
mov
testb
mov
lcall
sub
iret
out
push
pushf
bound
decl
insb
mov
xchg
rcrl
in
fnsave
pop
mov
mov
pushl
inc
jp
imul
push
imul
gs
inc
je
push
cmc
jne
fsubs
pushl
xor
xchg
jnp
sbb
mov
mov
mov
pop
ja
mov
adc
dec
and
and
lock
mov
int
int
enter
movl
incl
cmp
add
aam
fistps
fldt
push
xchg
jne
dec
in
inc
pushf
dec
lods
insl
nop
pop
jmp
dec
ret
cmc
mov
iret
sbb
sub
jo
cmp
enter
pop
loopne
mov
xchg
jmp
xor
push
loop
and
add
ret
shl
aam
in
push
in
push
ja
jb
mov
cmp
sbb
dec
ret
cmp
xor
xchg
add
arpl
ss
inc
pop
mov
sar
and
stos
lods
es
inc
and
push
xchg
imul
and
fs
in
fs
xchg
or
insb
and
outsb
xchg
bound
push
stos
decl
sbb
fcompl
jle
jp
lahf
movsb
test
fcmovu
fstpt
out
mov
jbe
adc
dec
repz
add
adc
xchg
xor
jno
stc
aad
call
sub
call
xchg
rcll
mov
mov
xor
pop
es
xorb
mulb
push
mov
loop
or
aad
stos
add
gs
fdivr
incl
cmp
aad
aad
aad
push
rcl
fcoms
mov
jecxz
sti
pop
or
adc
and
lea
mov
fmuls
popf
popa
int
push
shlb
cmc
mov
pop
cmp
sbb
mov
or
xchg
jae
xchg
sub
fs
pushl
pop
insb
pop
sahf
int3
push
pop
in
andl
fsubl
sar
insl
pop
icebp
jg
pop
test
mov
add
sub
sbb
sbb
cmp
inc
addr16
leave
lea
push
outsb
push
movsb
int3
test
stos
movsl
iret
lcall
pop
and
adc
xchg
xor
xor
cs
mov
pop
mov
or
jmp
xchg
out
mov
jecxz
xor
aaa
incl
dec
jb
jle
cli
fstl
insb
xor
scas
and
test
mov
inc
mov
jmp
ret
jecxz
mov
ret
cmc
lock
repz
ds
xchg
bound
ljmp
movsl
test
cmp
cmp
in
out
pop
add
mov
les
pushl
int
jns
loopne
or
cld
or
pop
push
aam
jle
pusha
jg
pop
ret
lahf
aam
test
andb
mov
and
scas
mov
hlt
jnp
push
inc
cmp
mov
pop
jno
lods
lcall
fdivrp
dec
xchg
pop
aaa
mov
xchg
sub
xor
mov
fs
dec
cmp
or
or
ljmp
cmp
xchg
adc
dec
repnz
pop
cwtl
xor
jno
in
push
mov
inc
cmp
in
incl
ret
sti
std
mov
lock
inc
xor
adc
jo
push
aad
adc
add
sub
lret
ja
push
daa
xchg
aas
dec
and
insl
xchg
imul
mov
ret
sbb
dec
xlat
push
sub
fimull
ficoml
pop
jecxz
jno
sub
push
clc
call
call
sti
into
daa
out
repnz
fldenv
pop
std
out
mov
fs
sbb
jo
mov
sub
dec
push
test
jmp
cwtl
inc
push
jne
and
shrb
xor
movsb
inc
xor
in
or
decl
je
stc
repnz
scas
mov
imul
cmpsl
in
dec
dec
fisubl
add
mov
mov
loopne
xor
push
jne
rcrb
jle
lcall
mov
pop
stc
adc
sub
cwtl
add
inc
loopne
scas
jne
mov
js
aam
rcl
jge
mov
ja
test
mov
pushf
cmpsb
pop
mov
or
insl
pushl
jp
dec
adc
mov
insb
and
mov
mov
std
fwait
mov
xor
ljmp
call
pop
cltd
clc
and
imul
cld
sub
push
add
add
adc
stos
call
loop
adc
adc
mov
rclb
and
ljmp
int
pop
pop
inc
sbb
mov
push
xor
ss
inc
adc
sbb
pop
cmc
pushl
inc
mov
push
sub
int
stc
jge
inc
and
pop
mov
xor
mov
int3
clc
sbb
insl
sbb
xchg
shr
outsl
popf
push
fnstsw
int
cmpsl
dec
and
call
das
mov
dec
adc
add
and
inc
mov
jge
sub
xchg
mov
inc
fisubs
sub
stos
mov
data16
adc
push
xchg
add
pop
xchg
sub
sub
xor
mov
or
xchg
jle
xor
pop
mul
mov
enter
mov
sbb
sub
jne
incl
insb
aas
mov
mov
dec
cli
rol
jg
dec
leave
ja
ret
lods
int3
dec
inc
sub
aad
pushl
int
insb
repnz
iret
stos
mov
adc
cmp
sub
inc
std
jg
in
std
pop
push
push
out
pop
into
aam
in
test
popa
repnz
inc
jb
out
fsubr
pop
clc
jmp
sbb
jg
add
insl
ja
jg
mov
cli
inc
lods
push
adc
mov
jno
jmp
push
loope
jl
dec
mov
adc
loop
leave
fstpt
mov
xchg
fxch
repnz
out
jnp
add
inc
adc
mov
lcall
arpl
push
ljmp
cli
incl
je
adc
scas
fs
arpl
xor
mov
jmp
test
lods
cli
sbb
lret
xor
xchg
insb
pop
popf
out
aam
call
insl
push
add
sub
fnstenv
dec
push
xchg
sub
sti
icebp
out
xchg
jg
push
mov
mov
cs
sub
cmp
icebp
add
in
filds
jl
inc
push
mov
gs
incl
mov
mov
mov
fwait
jge
stos
add
mov
in
jbe
std
out
push
imul
arpl
fists
js
rclb
into
nop
xor
or
call
adc
mov
popf
ja
daa
inc
cli
cli
push
or
fisttpll
ss
call
jp
lgs
sub
rep
adc
cli
jecxz
dec
jmp
iret
lcall
xchg
add
lods
fdivl
cs
sbb
sbb
xor
decl
pop
fadds
test
xchg
inc
loop
arpl
idiv
ljmp
add
lret
add
lock
out
and
or
pop
ljmp
or
nop
pop
sub
decl
loopne
pushf
adcb
xchg
shlb
dec
mov
loopne
stc
mov
lcall
jmp
or
cltd
popa
cmpsb
jo
incb
sti
imul
mov
pop
mov
inc
push
push
and
repnz
das
sar
cmp
adc
xor
fwait
test
pop
jne
hlt
lods
ss
pusha
incl
negb
daa
sbb
mov
pushw
notl
mov
jecxz
jmp
sarl
data16
inc
sbb
pop
sub
mov
repz
mov
cmpsb
push
xchg
ljmp
push
fstps
mov
sbb
cmp
mov
fwait
mov
in
sub
fs
es
pop
jg
sahf
jl
popa
pop
shll
xlat
or
xor
cmp
jnp
adc
push
lock
push
dec
mov
std
loopne
inc
cltd
nopl
push
cmpsl
xchg
dec
ljmp
push
adc
push
mov
add
cmp
in
ss
clc
push
std
dec
sbb
loope
loopne
inc
les
xorl
fists
js
push
or
movsb
inc
xchg
std
das
pop
jp
in
cmc
cmp
push
lcall
jbe
adc
pop
daa
xchg
mov
or
fnstenv
xchg
aam
add
jne
xor
ljmp
sbb
stos
push
jmp
mov
fsts
mov
mov
cmp
add
add
movsb
jb
pop
dec
fdivrl
mov
fistpl
outsb
es
jg
inc
imul
data16
lcall
cld
repz
pop
ljmp
push
dec
cmp
popa
repnz
sti
arpl
adc
movsb
mov
ljmp
hlt
push
loope
sti
in
pushl
imulb
icebp
and
loopne
jns
mov
dec
aad
or
jg
xchg
or
ficoms
ret
push
adc
scas
push
and
fwait
cltd
test
out
mov
add
icebp
cmpsb
dec
push
scas
mov
cltd
or
in
in
icebp
daa
cwtl
int3
lret
cmp
sar
lcall
jmp
rcrb
mov
inc
adc
pop
lret
test
incl
addr16
divl
jp
inc
stc
in
aam
stos
test
mov
out
xchg
call
push
mov
mov
and
pop
out
jg
lret
add
jle
fxch
leave
pushf
adc
mov
call
jno
push
jne
int3
push
imulb
pop
sahf
cmp
mov
pop
add
scas
pop
add
mov
jne
iret
inc
push
sbb
mov
mov
lcall
push
push
xchg
fistps
jg
push
stos
xchg
pusha
mov
std
mov
call
rcrl
xchg
nop
mov
movsb
mov
in
add
push
lods
and
mov
call
daa
or
fidivrl
stos
xchg
out
test
gs
stos
lcall
mov
sub
mov
out
negl
add
lret
dec
incl
dec
mov
lahf
jbe
jns
mov
into
lcall
dec
dec
jmp
push
call
lods
mov
out
lds
test
rclb
xchg
jecxz
stos
ds
pushl
add
xchg
xchg
xchg
ss
dec
lods
dec
enter
pop
push
fiadds
in
cmp
jp
imul
movl
and
shlb
icebp
xchg
pop
loope
dec
mov
test
rorb
or
lcall
dec
jp
xchg
mov
rol
sub
repnz
dec
mov
lock
jb
call
pop
lret
les
popa
jle
insb
shlb
cmc
mov
pop
sub
ret
dec
test
ja
incl
aaa
leave
push
inc
sbb
enter
mov
jecxz
xchg
bound
jb
inc
mov
pushl
sub
adc
decl
jmp
push
and
jmp
ljmp
xchg
mov
test
push
popf
inc
mov
lcall
aam
jae
xchg
sub
adc
mov
or
pop
push
pop
jno
pop
insb
insl
mov
call
xor
mov
pop
adc
cmp
jge
and
xchg
mov
incl
movb
rcr
dec
cwtl
sub
inc
daa
rorl
xor
jp
insb
into
movb
sahf
add
sbb
sbb
and
jae
pop
xlat
imul
mov
je
test
xor
or
decl
dec
adc
inc
fcomps
xor
test
mov
notl
addl
inc
sbb
push
sbb
cmp
bound
jmp
lods
lea
inc
inc
fisubl
shlb
push
lods
xchg
arpl
fidivrl
nopl
decl
adc
movsb
idiv
sbb
or
dec
adc
jnp
or
shr
cs
push
ljmp
js
aas
xchg
rcr
cs
stos
rolb
sbb
ret
adc
push
je
idiv
ljmp
add
xchg
fs
int
lret
pusha
xchg
aad
adc
dec
sbb
enter
call
scas
lods
imul
add
cs
mov
test
inc
fldcw
pop
icebp
js
add
sub
push
dec
xchg
insl
adc
cmc
xchg
and
lcall
mov
out
enter
pop
aaa
inc
pop
xchg
and
xchg
dec
mov
and
les
movsl
cmpsb
lcall
jecxz
or
xchg
call
xchg
enter
xor
mov
ljmp
int
sub
aam
mov
push
out
mov
cmpl
cmp
mov
xor
jg
ror
xchg
js
popf
and
incl
ret
cli
sbb
mov
mov
xchg
mov
fbld
incl
adc
and
xor
scas
or
fisttpl
lcall
cmp
sarl
fsts
stos
movsl
or
out
sbb
sbb
cmp
pop
je
cmc
cmp
call
mov
movl
jno
fisubl
mov
jp
add
sarl
call
inc
enter
cmp
sti
sub
sbb
dec
loopne
jno
loop
std
ljmp
adc
inc
sahf
sarb
inc
ds
mov
push
push
aam
add
adc
xlat
mov
pop
lods
fistpl
outsl
add
adc
decl
pop
scas
mov
mov
and
sub
ret
dec
mov
or
call
call
dec
repz
pop
jae
lods
add
inc
pop
ret
lret
ljmp
orb
push
cwtl
lock
in
mov
in
pop
mov
jmp
gs
dec
and
sbb
sarl
cmp
jne
mov
cmp
xor
cs
mov
scas
decl
dec
sbbb
popf
je
bound
jbe
divl
shrb
insl
dec
loopne
mov
decl
rclb
imul
scas
adc
sbb
sbb
incl
in
pop
outsb
inc
push
lock
stc
rorb
and
lds
test
cmp
cmp
jg
sub
daa
or
xchg
sub
push
push
inc
fisubs
dec
push
aam
fcomip
jnp
outsl
cld
cwtl
adc
or
xchg
pop
mov
cli
int
fwait
lods
xor
incb
out
xchg
es
scas
jbe
je
nop
inc
repz
call
push
cmp
arpl
jne
add
or
push
fs
hlt
pop
testb
bound
out
ja
mov
pusha
xchg
roll
inc
hlt
xchg
pop
inc
sbb
dec
and
or
pop
or
mov
jmp
xor
jno
imul
fcomip
lcall
aam
lods
xchg
sbb
rorb
add
ja
pop
popf
mov
pop
add
neg
xchg
lret
outsl
clc
incl
stc
or
mov
mov
gs
call
lcall
push
sarb
xor
imul
add
and
enter
movb
xchg
mov
jg
in
jae
icebp
add
pop
repz
dec
and
pop
pop
xor
pop
stc
clc
ss
es
mov
cmpsl
jno
aas
push
das
jnp
fldcw
out
ljmp
dec
outsl
mov
jns
or
lcall
out
push
pop
or
adc
xor
xchg
cmp
adc
inc
mov
jae
aad
in
mov
jecxz
shlb
repnz
mov
jmp
in
pop
movsl
mov
test
xchg
jle
in
test
mov
lret
jbe
or
jmp
sarl
ret
in
addr16
or
mov
sbb
mov
sbb
dec
jecxz
cmp
mov
int
lahf
xor
popf
jns
scas
and
mov
lds
mov
decl
xchg
popa
shll
mov
rorl
cmp
xor
es
lds
pop
add
mov
fucomip
fmull
icebp
and
jo
cmc
int3
pop
aas
in
jmp
cmp
mov
stos
xchg
jo
push
sbb
add
orb
pop
inc
jge
arpl
jmp
xlat
in
sbb
jle
mov
bound
iret
maxps
and
lcall
jns
rcl
cmpsl
dec
js
cmp
xor
test
mov
lods
cltd
fcomip
inc
jl
inc
xchg
adc
inc
out
push
mov
cmp
dec
jns
scas
mov
push
inc
outsl
call
jl
in
inc
idivl
in
ret
bound
inc
dec
and
incl
ret
add
test
pop
cld
mov
dec
adc
mov
mov
mov
pushl
fimull
pusha
aas
sbb
fs
in
pop
mov
andb
ljmp
test
push
sti
pcmpgtw
test
loop
pop
icebp
pop
decl
lock
pusha
xor
xchg
fisttpll
ret
push
insl
jbe
pop
push
and
fstl
push
cld
push
test
mov
js
pop
rcl
mov
test
cmpsl
pop
inc
jae
decl
rcrl
jnp
mov
int
xchg
aad
ljmp
lds
push
pusha
popf
add
test
flds
push
fisttpl
dec
out
in
das
sub
mov
cmp
mov
mov
fdivrl
data16
and
movsl
xchg
xchg
sbb
lcall
push
inc
imul
sarl
or
jl
xor
or
dec
cltd
fsubrs
cwtl
shlb
sbb
inc
test
cmpsb
jp
in
insl
dec
jno
leave
and
mov
call
jl
dec
sbb
push
push
out
clc
push
mov
mov
push
jp
sbbl
call
out
ss
nop
movsl
out
push
mov
mov
out
push
xchg
lcall
stos
inc
pushl
ja
cmpsl
sbb
jo
adc
push
push
lock
pop
pop
lods
pop
or
lcall
cmp
xchg
fbstp
cli
pusha
shrb
scas
pop
aam
or
jle
imul
jnp
aas
jae
xchg
movsb
into
shrl
stos
and
popa
push
or
pushl
xchg
and
imul
xor
push
sbb
ret
lcall
clc
in
sbb
mov
bound
add
fiadds
mov
rcr
cmpsl
cmp
inc
out
lahf
cmp
mov
xlat
movsb
jnp
stc
jae
adc
insb
dec
inc
xlat
out
pop
mov
add
testb
mov
jmp
mov
xchg
mov
popf
mov
mov
cld
xchg
in
sti
imul
int
rcrl
sub
jg
push
data16
dec
daa
test
arpl
inc
mov
sarl
fidivrl
mov
bound
fsubr
jl
jge
mov
rcrb
add
lret
jmp
mov
ficoms
push
mov
jecxz
mov
aam
enter
pop
iret
call
fcompl
jecxz
push
test
jle
out
mov
xor
sti
hlt
daa
cld
adc
cmpsl
cld
in
mov
pop
sub
into
loope
les
mov
inc
cmp
jnp
pop
aam
mov
push
ljmp
cmpsb
xor
repz
into
push
les
mov
call
pop
xlat
enter
sahf
cmpsl
xor
fcmovnbe
loop
aaa
or
mov
call
xor
jne
dec
dec
adc
call
push
stos
cs
mov
or
xchg
pop
je
dec
xlat
lock
out
clc
lcall
xchg
adc
and
sbb
sub
mov
ljmp
jmp
rcrl
mov
shl
sub
mov
shrl
aad
lcall
cmpsb
pop
out
imulb
inc
xor
jmp
rorb
lcall
xor
outsb
jg
sub
fcomps
fmul
lret
inc
mov
enter
dec
clc
incl
pop
scas
addr16
cs
out
mov
jmp
aas
sub
js
filds
into
loop
xor
add
out
push
rcr
or
pop
ficompl
jb
mov
bound
pop
mov
insl
fs
ljmp
cmp
jne
pop
add
mov
pop
mov
int
rolb
enter
mov
call
inc
xor
dec
cmpsb
mov
push
repnz
cmp
xchg
cmpsb
adc
ljmp
arpl
pushf
test
sub
inc
test
testb
or
in
jp
std
push
imulb
out
outsl
nop
lods
sahf
pop
push
add
fildll
nop
add
jmp
lds
fldcw
cmc
xchg
ljmp
jge
add
sub
mov
nop
mov
call
ret
cltd
insb
push
pushl
jmp
cmp
jg
fnstcw
lods
rcll
insl
pop
push
lret
add
mov
js
leave
inc
ljmp
movsb
outsw
daa
repz
sbb
pop
cld
mov
repz
out
shlb
popa
fimuls
stc
shl
jecxz
push
cmp
jae
add
rcrl
xchg
push
in
mov
sub
in
jge
call
mov
jl
xor
xchg
xchg
sbb
xchg
nop
lret
sbb
loope
jmp
jbe
xchg
aad
out
mov
xlat
fcmovnbe
mov
dec
mov
out
icebp
in
cmpsb
cmp
negb
mov
add
into
inc
movsl
jns
call
push
xchg
push
in
sahf
xchg
or
or
dec
push
xor
incl
cld
insl
push
bound
sub
push
and
cmp
andl
sbb
rorb
fidivrl
pcmpeqd
ret
xor
movsl
xor
or
push
mov
jo
daa
into
mov
mov
popa
adc
pop
clc
rorl
jge
push
and
punpckhwd
lahf
bound
dec
push
call
rcr
or
sub
pop
pushl
imul
dec
fistl
fst
inc
ret
flds
lcall
icebp
pop
xor
mov
or
in
testl
inc
movsb
pusha
in
xchg
roll
loope
pop
inc
data16
cwtl
pop
addr16
cmp
xchg
decl
xchg
lcall
ret
sub
cmp
mov
sbb
incl
add
sbb
jle
add
mov
mov
movsb
jle
addl
lcall
xchg
inc
or
cmp
idivl
mov
mov
cld
jge
int
test
jp
cmpsb
dec
xor
lret
das
popf
subb
xor
fwait
pop
mov
test
int3
rclb
sub
ds
xor
sarb
ljmp
xchg
add
decl
out
mov
fcmovb
cmpsl
out
ret
xchg
test
stc
data16
dec
cmc
adc
faddp
aad
lcall
or
stos
xor
pop
xchg
xchg
inc
fmull
jno
inc
loope
bound
clc
pushf
fdivl
notb
sar
test
fisubrs
mov
fdivr
loopne
mov
orb
negl
cmp
adc
pop
push
cli
push
into
rcl
clc
fbstp
test
and
addr16
and
jecxz
mov
cld
fnstenv
pop
test
jbe
lret
scas
sbb
add
decl
sbb
mov
cmc
rolb
adc
aam
into
stos
xchg
push
and
imul
sub
arpl
jge
or
pushl
call
fdivs
xchg
jmp
movsl
std
pop
mov
lock
popf
call
inc
repz
jmp
dec
mov
pop
test
xchg
repnz
inc
insl
mov
pop
cmpsl
add
or
pushl
xor
pop
mov
iret
ss
push
mov
mov
imul
jg
jb
ljmp
ljmp
ja
mov
mov
jne
pop
call
pop
jle
mov
push
hlt
hlt
xchg
and
pushl
mov
shlb
test
iret
cltd
cmpsl
dec
cli
mov
mov
mov
out
push
cmp
and
mov
or
scas
int
lds
jns
mov
add
ljmp
ret
xor
mov
jnp
stc
push
mov
push
outsb
jg
call
sbb
mov
lahf
xchg
arpl
sub
insl
push
cld
dec
insb
ja
xor
adc
dec
iret
mov
jle
add
mov
pushl
mov
popa
scas
push
jmp
cltd
popf
sti
faddl
aad
mov
and
cmp
mov
mov
lods
sub
xor
call
sub
imul
or
lcall
sbb
sub
sub
call
cs
mov
xor
nop
and
push
and
icebp
cld
jmp
push
pop
bound
push
cltd
imul
mul
fidivl
cmpsl
idivl
push
sahf
mov
iret
ds
pushl
enter
xchg
xor
fdiv
pop
icebp
js
add
lock
fcomip
jle
sub
ret
mov
add
imul
or
incl
fistpll
icebp
fstp
shll
repnz
rcr
enter
jb
jp
lds
jo
push
jg
cmp
pushf
fnstenv
jmp
lcall
lods
decl
lock
adc
test
jp
mov
xchg
cli
lcall
or
negb
or
icebp
loop
scas
xor
mov
xor
adc
sub
push
arpl
or
stos
loop
sbb
mov
repnz
and
fcomip
pop
cwtl
or
jmp
adcb
jle
jno
decl
and
push
cmpb
inc
sbb
pusha
jmp
out
stc
iret
adc
inc
leave
test
adc
cmp
idivl
divl
cld
and
mov
inc
pop
shlb
ljmp
movsb
inc
andb
jae
fidivrs
and
inc
loope
jl
js
divl
sub
or
cmp
fisubrl
sbb
dec
jecxz
pop
mov
arpl
or
pop
test
das
fimuls
icebp
push
sbb
stos
fs
adc
gs
ljmp
test
ja
rcl
stos
lods
idivb
decb
scas
fldcw
call
push
or
daa
mov
sti
ds
push
dec
mov
pop
mov
call
std
mov
inc
mov
movsl
xchg
and
sti
jnp
fnsave
dec
dec
stos
decl
pop
jge
mov
mov
push
cmp
enter
cmpsb
mov
xchg
arpl
aam
inc
es
int
arpl
push
xor
movsb
dec
mov
out
dec
rorl
xchg
sub
mov
sahf
andb
xchg
std
lea
mov
out
xor
cmpsb
inc
push
outsl
movsl
adc
clc
xchg
nop
std
in
ret
sarl
xor
repz
jmp
jmp
dec
fsub
cli
adc
adc
insb
adc
repz
adc
push
scas
fbld
sar
jmp
dec
fists
stos
mov
or
sub
shl
dec
lods
dec
call
inc
scas
sti
jg
xor
push
aaa
lahf
cwtl
ss
inc
push
push
iret
xor
xor
dec
push
adc
push
push
je
rorb
cld
jne
mov
xchg
lret
mov
mov
pop
push
cld
jg
andl
inc
incl
sub
call
dec
sbb
in
xchg
mov
or
hlt
test
cmc
loope
sbb
repnz
mov
xlat
sar
nop
arpl
pop
std
xchg
cmp
and
test
in
mov
test
jne
pop
xor
arpl
pop
sbb
repz
push
and
inc
je
aad
cmpsb
sbb
decl
ficoms
jp
xchg
mov
iret
ret
setl
nop
xor
fisubrl
je
dec
mov
or
popf
notb
mov
scas
mov
inc
aaa
outsb
jno
push
push
jb
sub
fisttps
movsb
les
fwait
js
fprem
jg
call
fsts
cld
std
cmp
push
mov
jmp
outsl
pop
cli
push
lcall
inc
and
jge
add
aad
dec
xchg
xchg
movsl
aad
popa
sub
ljmp
push
xchg
movsb
dec
movb
test
pop
js
ret
movsb
cmc
pop
pop
dec
push
fs
notb
into
dec
push
daa
movsl
ret
jmp
fsubrl
clc
decl
call
push
addr16
cmp
mov
cmp
decl
lock
inc
xor
lock
out
xchg
movsl
in
add
int3
pop
xor
dec
xor
pop
test
pushl
or
mov
ljmp
sbb
mov
loop
scas
jbe
idiv
decl
xor
or
popa
stos
out
push
xor
and
xchg
out
sbb
mov
cmp
mov
jbe
shl
arpl
arpl
jnp
add
fdivp
push
push
fbstp
jmp
pop
cmp
xor
cmc
out
enter
push
sahf
mov
scas
mov
sbb
mov
addr16
pop
xlat
insb
repz
fwait
leave
outsl
cli
jmp
test
pop
cmp
jnp
ss
pop
rcll
std
xor
int3
mov
push
ljmp
out
in
jnp
dec
leave
push
push
mov
cli
ud0
ljmp
rolb
xchg
lds
pop
mov
sub
fstpt
pushl
repz
orb
gs
stos
fimull
jge
xor
inc
mov
out
pop
ljmp
cli
incl
lock
fisubl
mov
dec
or
insb
pop
rcll
aad
jmp
xchg
or
sbb
and
lods
inc
sbb
hlt
mov
incl
int3
add
mov
add
out
repz
xchg
icebp
xchg
ljmp
decl
imul
pop
cld
mov
mov
in
mov
add
adc
enter
lods
mov
int
lahf
stos
in
push
dec
inc
sti
es
pop
or
adc
cmp
xchg
sbb
aad
call
cmp
cmp
mov
push
xchg
fldcw
lcall
jle
jle
sbb
lea
mov
fidivrl
and
testb
jmp
mov
data16
dec
les
imul
scas
or
and
or
into
xlat
xor
hlt
mov
push
daa
test
orb
lret
jl
and
sbb
decl
mov
repz
aas
jmp
and
and
xchg
xlat
push
scas
xchg
aad
inc
mov
push
push
cmp
cmp
mov
push
adc
loop
fs
inc
mov
sti
push
xchg
jmp
cmp
dec
fcoms
gs
movsl
adc
and
and
decl
dec
mov
and
xchg
mov
pop
cmp
lods
pop
ror
leave
mov
jno
ja
pushl
or
scas
dec
pop
inc
cmpsl
pop
push
mov
mov
sahf
xor
mov
add
sub
jmp
subb
jne
jb
xchg
cmp
push
enter
push
loopne
xlat
decl
ret
push
pop
pushf
cwtl
jp
jnp
dec
loope
xchg
dec
loopne
fdivrl
pop
in
add
mov
daa
andb
leave
sbb
mov
add
dec
ret
adc
movsb
fiadds
xchg
fisubrs
stc
jmp
mov
sti
pop
sahf
sub
push
cmp
leave
sahf
sahf
pop
into
out
or
mov
push
aas
sub
xor
loop
rorl
aad
pusha
rolb
imul
add
jp
mov
xor
xchg
pop
jle
cmpsb
lcall
ficoms
aad
insl
pop
xchg
or
jle
pop
mov
test
jb
or
ljmp
movsl
adc
or
call
dec
cmc
imul
mov
ret
mov
je
xchg
push
stc
or
dec
mov
mov
dec
push
aad
pop
adc
inc
lea
enter
xchg
mov
nop
rcrb
call
call
addr16
add
jecxz
daa
xchg
cmpsb
shr
lcall
fildl
cli
push
sarb
dec
add
mov
mov
or
or
mov
mov
add
je
cmp
dec
pop
and
xchg
mov
and
stos
xchg
dec
push
push
inc
std
movsl
xchg
add
std
xor
ljmp
fst
push
aaa
push
xchg
and
int3
lds
lahf
push
mov
loopne
or
rolb
stos
pop
incl
jae
adc
in
fs
aas
mov
in
popf
dec
or
adc
sbb
inc
movsl
out
push
movsl
bound
shll
or
scas
ljmp
fiaddl
pop
test
push
rcll
mov
mov
addr16
cmp
ljmp
and
add
mov
or
test
jge
fimull
fstl
lcall
xor
mov
mov
int
lahf
push
xor
std
mov
imul
xor
inc
lods
pop
xor
mov
fcomi
push
sub
mov
decb
mov
and
dec
out
enter
nop
mov
mov
lock
inc
flds
sarl
fcmovb
pop
mov
xchg
bound
ljmp
call
or
enter
fwait
jge
mov
pushf
leave
and
mov
adc
es
fdivs
ss
call
inc
arpl
xor
dec
inc
sbb
lcall
cld
hlt
mov
lret
rcl
jge
jns
test
xlat
scas
int3
ja
loop
fwait
pop
je
pop
mov
lahf
in
or
push
sbb
add
dec
inc
xchg
xchg
adc
sti
loop
ljmp
jbe
outsl
repz
call
rcr
imul
dec
mov
call
rcr
add
mov
addr16
rcl
mov
pop
mov
lahf
cmp
ljmp
xchg
in
gs
push
cltd
adc
cmp
xor
popa
xor
lret
jae
cmp
movsl
sbb
sar
lods
lret
mov
push
mov
sub
mov
fists
cmp
ficoms
ret
jmp
dec
mov
pop
jle
push
imul
push
imul
adc
incl
xchg
in
lea
les
imul
flds
int
xchg
push
dec
cld
lcall
dec
inc
popa
fidivs
mov
movsl
aas
pop
scas
jge
mov
popf
push
cld
call
mov
sub
mov
add
scas
lcall
incl
xchg
push
jmp
pushf
in
stos
push
mov
push
mov
mov
or
push
ret
jg
lcall
sub
into
fnstsw
repz
loop
pop
jbe
cmp
mov
push
cli
jg
fnstcw
hlt
je
cmp
or
ljmp
jo
pushf
mov
jno
dec
loop
mov
lea
imul
sub
adc
shl
lods
sti
je
notb
lcall
push
mov
sahf
test
dec
jmp
lock
mov
shll
jmp
xor
flds
rcll
adc
aad
adc
ds
jno
jb
shll
leave
clc
or
pop
xor
arpl
popl
jo
sbb
sbb
call
lcall
mov
dec
xchg
pop
push
sub
test
adc
adc
add
decl
lock
push
rclb
xlat
cmp
fs
out
imul
and
mov
adcl
dec
pop
sbb
fidivl
sbb
call
test
sahf
sti
sbb
ds
push
push
in
repz
mov
sub
sbb
aas
dec
mov
pushl
addl
fcomp
scas
adc
adc
div
test
jmp
push
sbb
adc
inc
push
mov
push
mov
add
stc
pop
xor
cwtl
repnz
ljmp
jp
pushf
out
inc
je
ds
inc
gs
popf
and
sbb
mov
sub
mov
jmp
jecxz
sbb
mov
inc
mov
call
cli
cmp
test
xor
xchg
in
or
mov
inc
adc
in
and
jg
jmp
xor
dec
and
dec
lcall
test
inc
nop
jnp
decl
or
popa
mov
adc
insb
xchg
sbb
stos
dec
scas
xchg
incl
dec
mov
popa
outsb
xchg
pop
mov
rclb
pushf
adc
aam
incl
pop
mov
xchg
mov
xchg
arpl
incl
push
mov
xor
mov
jmp
out
mov
bound
inc
ret
jae
js
pop
adc
dec
xchg
dec
jg
jmp
fs
dec
inc
mov
rcr
cmp
sar
jle
pop
and
mov
xlat
and
in
inc
pop
outsl
sarb
mov
pop
pushf
out
cld
call
push
or
mov
push
jge
divps
addr16
jbe
call
push
dec
pop
mov
inc
shll
mov
mov
xchg
imul
pop
cmc
jg
pop
fadd
adc
sub
fs
mov
scas
cli
jmp
add
loope
or
clc
mov
sub
rcrb
dec
sub
call
dec
mov
pop
mov
or
mov
ljmp
pop
lcall
xor
cmp
adc
int
mov
mov
insb
ret
cmp
aad
add
jecxz
add
cmp
cmp
cmp
push
pop
rcrl
out
push
add
fcompl
popa
xchg
dec
cwtl
xor
rcll
mov
mov
dec
and
add
jmp
fs
cmp
arpl
insl
cmc
sbbl
mov
pushl
call
jg
fcoml
pop
outsl
es
push
shl
repz
cmp
in
pushl
pushf
test
lods
lcall
cmp
sub
sbb
ljmp
inc
jge
or
out
add
mov
aad
pop
mov
lcall
daa
ret
or
jno
aas
test
pop
pop
jmp
jmp
outsb
aas
add
out
andb
cmp
pop
ja
push
mov
pusha
out
out
in
fadd
add
sub
int3
adc
decl
jnp
cwtl
daa
in
es
xchg
pop
dec
jecxz
loop
sub
mov
mov
out
andb
aas
adc
cmp
shll
pushl
pop
orb
mov
cltd
cmp
mov
cltd
aam
cmc
lock
ljmp
das
mov
lds
scas
jne
shrb
xchg
aad
lahf
sub
data16
mov
mov
mov
jecxz
jne
loopne
or
pop
push
jbe
sub
mov
lcall
jg
adc
push
shr
pop
bound
ficomps
sbb
ljmp
dec
sbb
in
add
sbb
mov
sub
and
rcrb
jp
out
stos
out
clc
mov
mov
sbb
aas
xor
add
xor
add
fidivrs
ja
push
jb
mov
jle
aad
out
cli
fs
xor
mov
icebp
data16
lcall
cmp
imul
fcoml
in
out
push
call
mov
cmp
lods
add
adc
xchg
push
mov
pop
sar
call
arpl
les
aad
mov
mov
rorl
enter
insb
addr16
sbb
std
decl
add
insl
sub
pop
adc
mov
sbb
gs
push
movl
sbb
movl
cltd
gs
mov
lods
cld
ret
cltd
jb
fcomip
jecxz
dec
lret
add
cmc
mov
popa
inc
cld
push
sub
daa
adc
push
insb
lcall
movsl
ljmp
outsb
cwtl
mov
push
stos
jae
sti
lods
into
int3
add
ret
or
ds
mov
mov
idivb
mov
decl
add
add
mov
cmp
rclb
mov
mov
in
aas
sub
or
mov
lds
stos
push
fcmovnb
inc
inc
inc
mov
push
in
jle
stos
or
or
je
push
repz
test
scas
push
jno
cld
mov
lods
cli
pop
test
es
repz
adc
ljmp
test
jge
fstpl
mov
pusha
push
lods
lds
popa
incl
mov
jge
lds
frstor
push
out
call
mov
scas
decl
nop
test
scas
lret
cmp
stc
testl
adc
cltd
jmp
mov
stos
pop
sahf
dec
adc
jmp
fmull
push
cmpsb
pop
imul
outsb
push
xor
mov
aam
mov
push
cmpsl
out
mov
jbe
sbb
sub
push
aam
pop
fdivr
call
stos
jl
and
hlt
sub
lock
jo
or
scas
addr16
pop
call
lock
std
mov
jb
ds
clc
lcall
fs
lock
fsubs
and
loop
mov
inc
sbb
lods
pop
and
ljmp
loopne
sbb
adc
dec
jae
push
push
frstor
leave
adc
push
pop
or
xor
fstps
shrb
loopne
fadds
rclb
sti
pusha
xor
push
xor
mov
inc
pushl
cld
mov
push
cmp
pop
xchg
mov
outsl
out
inc
push
dec
filds
call
hlt
bound
leave
lods
cmp
adc
and
shrb
push
cs
ficoml
roll
jge
sbb
mov
sub
mov
in
cli
call
or
push
or
sub
ljmp
dec
push
xlat
adc
pushl
fcmovb
push
rclb
divb
in
std
rcr
fs
jmp
imul
mov
mov
jmp
filds
js
hlt
ficoml
sbb
xor
mov
inc
loop
cmp
sbb
lcall
push
xor
addr16
lods
cmp
mov
mov
xchg
and
jl
ljmp
pop
icebp
jae
rcrl
lahf
mov
and
sbb
je
xchg
cmpl
pop
mov
cli
xor
mov
stc
mov
lods
jo
mov
push
add
or
inc
jo
mov
fildll
dec
xchg
ss
jmp
pop
ds
dec
xor
ds
hlt
cmp
or
mov
sahf
mov
in
inc
incl
mov
push
cld
mov
mov
mov
mov
xchg
in
sti
decl
add
mov
sbb
lcall
test
add
push
mov
outsb
mov
insl
int
xor
das
mov
xchg
test
call
test
jne
jecxz
lcall
repz
icebp
sbb
mov
icebp
mov
push
pop
cld
mov
scas
mov
xor
lea
mov
stos
sub
lock
movsb
gs
pushl
pusha
clc
mov
imul
mov
int3
repnz
xchg
xchg
jecxz
mov
pop
call
jmp
pop
mov
test
out
mov
test
lods
or
push
jg
clc
or
cmp
bound
mov
mov
loopne
pop
shll
xor
ljmp
jl
dec
push
adc
cmpb
adc
and
jecxz
pusha
jo
cli
jge
hlt
inc
add
xchg
rcrl
cwtl
popf
outsl
push
adc
push
je
push
fwait
jg
adc
cmpsb
repz
lcall
scas
fisubl
lock
pop
sti
mov
pop
adc
add
mov
inc
inc
repz
into
stos
mov
push
aaa
inc
loop
fs
mov
call
sbb
lods
loope
in
shll
xchg
jno
cld
jo
loop
pusha
orb
mov
test
outsl
mov
mov
cmp
ss
incl
lods
in
dec
push
test
xchg
clc
xchg
dec
cmp
lret
add
std
lcall
jmp
mov
pop
out
xchg
nop
lea
fisubrs
clc
jmp
mov
incl
mov
loop
mov
insl
ja
out
xor
mov
jno
test
cwtl
jg
ljmp
aad
repz
jae
dec
add
sbb
das
push
das
test
idivl
das
sar
add
add
xchg
jbe
sub
adc
dec
jge
shrb
pop
cs
jns
xchg
iret
out
adc
aaa
or
mov
adc
cmp
add
lcall
sbb
jmp
and
popa
push
inc
into
mov
daa
call
loope
mov
adc
stos
inc
add
int3
mov
out
jecxz
dec
es
mov
lock
mov
fs
jge
cld
ret
add
cmc
jp
out
jge
fcomip
or
push
jl
imul
xor
mov
mov
sar
sbb
dec
jmp
cmp
adc
imul
adc
cli
pushl
cmp
xchg
xchg
jno
xchg
orb
aam
scas
jle
arpl
in
inc
imul
and
hlt
fisttps
add
mov
jl
in
xchg
pop
ja
mov
dec
fistpll
mov
sub
int
mov
hlt
mov
lret
outsb
iret
pop
add
lahf
pop
xchg
push
and
pushf
add
jbe
pushl
test
push
stos
push
push
les
lods
outsl
jp
ja
mov
jmp
popf
mov
decl
std
push
push
in
lret
ljmp
aad
adc
dec
sbb
sbb
out
mov
incl
sbb
and
mov
adc
adc
decl
sub
dec
mov
stc
add
or
sub
push
inc
jl
sbb
xlat
shll
int
les
stos
jmp
adcb
ds
pop
jmp
js
dec
ljmp
ljmp
repnz
mov
and
sbb
add
xchg
fmull
push
icebp
fs
mov
sbb
les
sti
cmp
rclb
ljmp
mov
adcb
jb
scas
cmp
cmp
fwait
or
js
decl
aas
scas
mov
dec
inc
lock
data16
loope
int
es
stc
cmpsb
and
sar
cmp
push
pop
fs
mov
fs
mulb
loope,pt
cmp
add
xchg
addb
xchg
imul
icebp
add
rol
or
rorb
ljmp
incl
push
ffreep
hlt
cmpsl
or
enter
pop
mov
js
sti
mov
inc
cmp
incl
cli
scas
mov
jmp
insl
inc
dec
stos
push
fistpll
addr16
iret
and
call
cwtl
andl
outsb
sti
adc
sub
jo
dec
in
out
fisttps
mov
pop
pushf
dec
xchg
cmp
add
leave
call
pop
notl
inc
sub
incl
inc
repz
aam
cld
fistps
push
jae
mov
dec
and
sahf
rolb
inc
test
aad
xchg
inc
pop
fsubs
jb
frstor
or
mov
gs
push
inc
ljmp
js
pop
fdivrl
add
insb
dec
mov
aaa
push
jne
sbb
addl
pushl
pushl
loopne
fninit
stc
cmp
test
repz
rorb
cmc
repz
xlat
into
and
insb
roll
aas
or
clc
and
jo
mov
leave
idiv
cmpsb
xchg
mov
dec
add
sub
or
adc
push
decl
fld
xchg
xor
and
cmp
cli
ret
shr
cmp
pushl
inc
add
movsb
imul
push
jb
pop
sbb
jmp
mov
mov
and
stc
cmp
push
or
inc
xchg
cmp
and
mov
jb
ss
mov
std
inc
xchg
add
insb
lods
jg
in
push
cmp
test
lcall
or
aam
pop
push
lock
jge
lret
popa
outsl
add
push
jno
scas
xor
incl
mov
and
hlt
mov
mov
cs
rorb
adc
repnz
dec
daa
inc
sub
pushl
je
int3
lahf
out
cld
push
push
cwtl
ret
dec
mov
das
adc
or
cmc
je
scas
sub
push
xchg
dec
fists
cmp
lods
mov
fldl
fisubrs
or
sbb
or
in
out
inc
fbld
faddl
push
xchg
push
lods
repz
xchg
mov
mov
push
cmpsl
mov
jg
test
out
sti
mov
lahf
add
jl
push
mov
jns
pop
xchg
mov
or
dec
pop
adc
mov
inc
adc
pop
cmp
push
rcl
std
insl
and
rcrl
or
jno
sub
fneni(8087
jmp
pushl
mov
push
xchg
xchg
push
bound
pusha
dec
hlt
test
mov
push
pushl
or
int3
push
rorb
daa
xor
insl
lcall
mov
pop
andl
cld
loop
xor
sbb
call
out
dec
in
mov
xchg
lods
cmpsb
or
dec
mov
pop
xchg
xchg
stc
mov
jecxz
jno
idiv
jo
loope
jo
scas
imull
fdivrs
iret
imul
in
jno
into
jg
out
xorb
mov
out
jns
and
mov
mov
lcall
jno
push
subb
mov
sub
mov
and
addr16
int3
sub
inc
and
and
decl
fimuls
adc
iret
xchg
mov
jno
addr16
cmpsb
ds
sbbl
sub
and
pushf
fs
jmpw
outsl
popf
fmul
int
arpl
xbegin
mov
and
add
push
jo
fcmovnb
fisttpl
sbb
das
sbb
pushl
ja
mov
sbb
mov
jbe
adc
shll
xchg
mov
sbb
push
dec
ss
xchg
pop
add
mov
sbb
pop
mov
add
add
xchg
jb
mov
mov
loop
in
sbb
jg
mov
or
xchg
roll
lahf
ljmp
insl
adc
les
sbb
sbb
push
pop
scas
jmp
cmp
clc
lcall
xchg
nop
fstl
jmp
inc
dec
mov
ret
daa
inc
out
and
jg
lcall
push
ret
adc
push
pushf
loop
mov
cmp
sub
loope
ds
ljmp
test
mov
push
sub
add
push
adc
xor
pop
aad
test
aam
jmp
mov
adc
movsl
pop
xorb
out
lea
mov
push
testb
or
call
mov
aam
xor
es
xor
insb
iret
smsw
inc
dec
and
in
test
cwtl
jecxz
push
push
or
inc
divl
sbb
jno
fwait
shrb
jg
sar
ljmp
and
sub
pop
mov
lock
and
ljmp
and
push
fcoml
mov
cltd
mov
or
es
fwait
push
cltd
adc
decl
aad
xlat
rclb
push
pop
cmc
lahf
and
ss
sbb
jg
push
cmpb
enter
imul
jmp
in
pop
test
lret
sub
mov
test
fstpl
mov
fcmovnu
std
sub
mov
decl
pop
data16
daa
mov
jmp
xor
xchg
and
add
inc
jbe
cmp
ffree
mov
xor
sub
in
stos
xchg
jno
xor
pop
mov
test
nop
dec
pushl
out
cmp
pop
push
mov
jle
ret
xchg
cwtl
fsubrs
or
fs
pushl
jnp
push
xchg
mov
xchg
add
jge
mov
es
xcrypt-ecb
cmpsl
or
sbb
loope
je
lcall
in
ds
ss
fldenv
and
loop
xchg
in
lcall
mov
or
repz
lahf
mov
outsl
loope
out
jne
jmp
outsb
insl
fcomip
push
ss
test
sbbl
pop
out
mov
repz
xchg
xor
addb
push
pushl
scas
cli
out
pop
xor
xchg
jmp
repz
scas
push
xor
aad
addb
pushl
daa
addr16
test
subb
push
jbe
enter
fiadds
xchg
jb
mov
or
jl
iret
sbb
fstpl
mov
lret
and
jmp
mov
mov
test
push
mov
lods
outsb
outsb
pop
shl
incl
jle
jo
fists
push
out
fsts
push
inc
cwtl
add
dec
repnz
mov
mov
out
fs
mov
or
pop
push
and
movsl
in
mov
and
into
pop
inc
outsb
test
loopne
int3
cmp
ja
pushl
or
call
jl
dec
xchg
aas
mov
in
test
iret
aam
jg
mov
ja
mov
lods
aas
dec
lret
popa
xor
ret
sbb
out
leave
adc
jns
popa
addr16
xchg
sub
sbb
nopl
xchg
mov
add
cmpl
fldl
shr
inc
jno
popa
or
sbb
push
add
push
les
fcompp
xchg
mov
mov
rol
decl
sbb
sahf
out
sti
and
call
push
pop
push
fstpt
pop
ret
or
imul
pop
loope
js
orb
pop
xor
and
cmpsl
aaa
or
mov
mov
xor
add
out
add
lret
test
dec
push
pop
inc
pop
mov
scas
or
incl
jg
test
pop
js
jae
int3
inc
or
enter
cltd
fsubrl
push
or
jne
rcrl
mov
cmp
ljmp
test
dec
sbb
push
aaa
cmp
or
mov
xchg
call
xchg
or
int
dec
xchg
ljmp
inc
add
outsb
pop
mov
sbb
mull
fidivrs
jle
movsb
mov
loopne
pushl
int
scas
leave
inc
sarl
ss
daa
stos
sub
test
aaa
popf
pop
lret
lcall
xor
aas
sub
jne
pop
jo
rorb
lock
repz
xchg
mov
lcall
and
adc
or
or
in
lahf
and
loope
pop
mov
xchg
sarl
decl
xchg
push
call
outsb
push
cmp
xlat
and
fsubl
mov
popa
imul
jge
loopne
test
xchg
mov
xlat
rol
add
shrl
or
repz
mov
inc
xorb
jecxz
jp
stc
add
or
rorb
sysexit
fldt
call
inc
sarb
ret
leave
xor
fldcw
shrb
mov
add
shlb
xchg
sarl
jle
dec
cld
pop
ja
mov
jle
mov
dec
mov
sarl
xchg
sbb
stos
dec
lea
jmp
jmp
inc
xchg
sti
jp
and
inc
push
call
fcomps
adc
mov
xor
lret
mov
ja
push
cwtl
repnz
out
nop
mov
xchg
inc
fdivrs
fcomip
clc
push
adc
jl
pop
test
xchg
sub
test
test
lcall
mov
rolb
cmpsl
stc
in
mov
in
insb
cmp
cmp
incl
adcl
sub
adc
jmp
leave
add
ljmp
pop
arpl
mov
dec
inc
push
mov
xchg
lds
ret
sbb
pushl
sbb
leave
dec
lret
sub
push
popa
std
ss
xor
decl
loope
mov
sub
mov
pusha
inc
inc
mov
cmp
inc
pusha
aaa
fs
jmp
or
leave
cmp
incb
addr16
xchg
stos
clc
js
ljmp
jg
add
inc
mov
paddusw
stc
pop
mov
movsb
jb
aas
aaa
inc
mov
jns
cli
adc
xor
in
das
insl
pop
rolb
sbb
sub
inc
lahf
ljmp
stos
cmp
mov
fiaddl
int
lahf
dec
outsl
cmp
jmp
push
inc
adc
mov
inc
fcmovb
push
bound
xchg
iret
fs
and
dec
mov
incl
cmp
inc
and
cs
and
repz
out
adc
mov
popa
icebp
ljmp
pushl
insl
mov
mov
adc
mov
jns
sbb
je
sbb
mov
dec
leave
pop
scas
addr16
pop
into
dec
xchg
addr16
ret
pushf
and
push
sub
sbb
mov
pop
out
dec
movsb
or
add
jns
jb
dec
pushl
cwtl
xor
out
imul
jne
adc
xchg
mov
hlt
aam
addr16
out
icebp
scas
inc
pop
sbb
dec
lcall
cmp
roll
lods
xor
jo
cwtl
push
push
pop
inc
push
ja
ljmp
jecxz
sbb
jg
fldenv
sti
mov
repnz
pop
enter
stc
or
imul
aaa
adc
cld
cmp
mov
imul
pop
pop
filds
lcall
jp
lret
dec
jp
push
or
lea
push
push
cmp
adc
mov
sahf
push
sbb
arpl
testl
lods
pop
hlt
sub
and
imul
gs
push
mov
mov
jle
mov
mov
in
jmp
jb
adc
rorb
jmp
cmp
aam
ljmp
jmp
pop
dec
mov
dec
call
pop
test
in
fcomip
jg
ja
test
push
cmpsl
into
fdivp
push
pop
mov
pop
or
pop
out
xor
lcall
in
sub
faddl
inc
inc
add
aam
xchg
mov
mov
ret
ljmp
mov
ja
jg
mov
push
push
daa
addr16
daa
mov
jg
mov
bound
push
outsb
add
lret
fidivs
push
pop
inc
rcrb
cmp
jmp
insl
inc
jle
mov
jbe
psrlw
sbbb
add
ljmp
jl
cmp
sub
js
bound
add
sub
or
pushl
xchg
cmpsb
jmp
jns
ret
dec
add
pop
fs
lcall
daa
mov
pop
push
xlat
iret
push
xchg
es
aam
cltd
ficomps
inc
push
sbb
stc
stc
xorl
sub
enter
lea
push
cmp
cli
sbbl
clc
mov
sub
into
cmp
lcall
xchg
mov
fdivr
fwait
call
js
pop
add
xchg
jmp
decl
scas
enter
sub
ja
fidivrl
lods
negl
push
das
and
mov
jmp
ret
jg
cld
xor
dec
jne
subl
movsb
insl
sub
mov
fwait
imul
insb
test
frstor
sub
lahf
fnclex
clc
decl
iret
and
push
popa
lret
ss
ja
push
mov
out
jecxz
pusha
cld
add
ljmp
test
jmp
out
add
daa
pop
sbb
push
ret
and
insb
jb
pushl
sub
cmc
fdivrs
inc
jmp
mov
mov
mov
jne
addb
inc
pop
ds
mov
hlt
mov
and
cmp
cmpsb
mov
mov
fdivr
cmp
call
sti
jns
pop
jne
adc
adc
and
mov
mov
push
loope
es
incl
dec
push
sub
mov
sub
fcomip
dec
daa
rol
mov
jg
les
loop
pop
fwait
aaa
imulb
daa
decl
jo
push
mov
test
fs
pop
pusha
adc
pop
sub
idivb
pushl
ss
test
dec
nop
iret
enter
jecxz
sub
xchg
sbb
test
add
out
clc
out
push
ss
es
adc
fldt
pusha
push
aas
das
mov
es
mov
mov
mov
pop
and
insb
mov
jle
ffreep
je
cmpsb
mov
sub
out
jle
push
pop
divl
lock
add
rol
lds
or
lds
je
sub
or
jno
ljmp
sbb
nop
in
fcomps
in
dec
inc
xchg
nop
lahf
repnz
call
mov
incl
xchg
into
push
jge
cmp
test
flds
jbe
sub
or
fsubrl
mov
mov
repz
mov
xor
pop
stos
lret
cmp
lock
cltd
lods
add
gs
lods
rcrl
inc
xor
decl
fs
lock
sub
outsb
rcrl
and
mov
ret
and
push
call
inc
movsl
mov
mov
mov
push
mov
add
negb
call
in
adc
aas
mov
aaa
pusha
xor
scas
jmp
test
je
mov
call
mov
xlat
sub
dec
xchg
adc
mov
decl
push
decl
inc
mul
xchg
sahf
std
cld
leave
xchg
out
mov
pop
daa
movsb
orb
lahf
jnp
sub
call
or
fcmovb
adc
adc
pop
lods
jmp
pop
xor
cltd
loopne
jns
loopne
cmp
ja
arpl
es
jmp
pop
lea
xchg
mov
adc
mov
call
into
decl
and
cwtl
pop
dec
ret
fldl
mov
push
jmp
lds
stc
fwait
mov
inc
inc
jae
enter
ret
push
pop
aad
outsb
cli
lods
ret
in
aaa
jo
stc
fbstp
js
mov
stos
ret
imul
gs
sbb
int3
ss
adc
hlt
push
jl
aas
leave
add
push
xor
test
push
mov
xor
xchg
aas
decl
jo
fisttps
insl
xorb
jnp
pop
je
int3
stos
jmp
add
pop
cli
bound
jb
jg
mov
pop
repz
lret
mov
lock
ret
xchg
popf
jo
mov
cltd
aad
and
push
clc
lahf
or
pop
and
pop
dec
fs
decl
in
mov
xor
pushf
pop
mov
daa
xor
dec
push
dec
addr16
xchg
xchg
ds
incl
add
jmp
mov
aas
clc
in
mov
xlat
jo
loopne
sub
out
push
cmp
xor
imul
sub
lcall
lcall
dec
pop
loopne
std
fidivl
loop
sub
adc
xchg
jg
negb
incl
outsb
sbb
push
rcrl
inc
and
sub
out
dec
jno
push
push
outsb
sub
jae
mulb
mov
sbb
icebp
inc
inc
xchg
test
lret
pushf
roll
hlt
imul
xchg
pop
jnp
fistpll
sub
and
das
fcomi
xchg
xor
repnz
sub
int3
jle
ret
xchg
fimull
incl
xchg
in
stc
lcall
fcoms
ret
stc
incl
sub
and
jbe
popa
dec
jle
xchg
cmp
cmpsl
rclb
mov
add
incl
ret
and
xchg
pop
inc
cmp
fcmovb
xor
insb
clc
call
fwait
mov
push
sbb
cmp
push
aas
push
aas
incl
lea
aas
shll
or
cli
pusha
fwait
push
sub
push
push
xor
iret
jb
call
es
adc
sti
or
jge
mov
cmp
call
dec
cli
jecxz
fnstsw
ret
daa
cmpsl
arpl
shlb
push
push
clc
ficoml
sbb
inc
mov
sar
push
add
mov
testb
and
icebp
jg
ljmp
xchg
fnstsw
imul
cmc
mov
cli
jmp
inc
sub
daa
lret
das
imul
movl
out
inc
bnd
jmp
popl
xchg
push
mov
cmp
stc
jle
iret
jmp
dec
subb
imul
push
filds
pusha
das
inc
aad
xchg
ljmp
clc
bound
add
jno
in
mov
adc
push
xchg
jmp
into
pushl
xchg
cltd
mov
int
push
test
addr16
fldenv
cs
cmpsl
aam
sbb
pushf
jmp
das
inc
bound
aas
push
mov
sub
test
call
aad
add
cld
lret
pop
add
sbbl
inc
and
jle
push
lcall
and
mov
jge
in
push
mov
lahf
dec
les
sbb
sub
and
out
sub
mov
lcall
lods
mov
inc
and
push
andl
mov
fcomip
call
cmp
push
loop
imul
sbb
push
icebp
ret
xchg
lods
rolb
clc
fwait
mov
xchg
lods
jne
pop
mov
mull
idiv
decl
int3
insb
push
mov
pop
test
frstor
pop
repz
add
negl
scas
fistpll
pop
inc
cmp
adc
sahf
call
jbe
pop
mov
add
incl
bound
shlb
clc
and
or
push
add
out
clc
call
and
xchg
xor
test
cltd
les
lock
lcall
push
fstp
add
xchg
out
outsb
movl
mov
adc
jns
or
decl
andb
nop
xchg
outsb
pop
cmp
lcall
je
dec
or
xchg
lods
ss
jbe
pusha
mov
fsubrp
icebp
xor
sarb
jbe
popf
js
dec
pusha
sbb
fcoms
lcall
movsb
push
int3
sbb
mov
push
std
pusha
lds
inc
lock
incl
mov
aas
cmp
mov
jle
enter
sbb
loope
push
mov
push
mov
mov
clc
lods
adc
in
push
dec
ud0
lcall
or
pop
and
and
mov
ljmp
pop
les
rorl
dec
mov
int
adc
in
and
lret
xlat
mov
js
and
test
xor
mov
dec
ljmp
lds
mov
cli
sarb
movsl
iret
sbb
mov
incl
and
xchg
jmp
jg
xor
sbb
mov
or
jns
hlt
inc
xchg
sti
repnz
xor
push
fbstp
inc
xchg
mov
test
aas
jno
mov
in
shr
inc
aaa
int3
push
aas
lock
cmpb
jnp
rcrl
pop
shl
inc
push
fs
pop
mov
xor
jb
push
mov
xor
jg
mov
add
adc
incl
and
mov
test
push
xorl
arpl
mov
in
cmp
insb
clc
stos
fdivs
call
mov
jb
dec
dec
pop
daa
in
scas
inc
std
pushl
out
adc
jno
ss
test
stos
push
das
stc
mov
dec
cmpsb
sub
insl
push
insl
fdivp
insb
pushl
push
insl
lret
stos
mov
pusha
cld
pop
and
inc
push
dec
lcall
andps
es
push
inc
mov
out
xchg
adc
fsts
push
insl
lahf
data16
cmp
clc
enter
sbb
nop
cmpsl
and
out
dec
mov
dec
shrb
mov
sub
addr16
fisttpll
scas
enter
xchg
jmp
jbe
adc
xchg
fwait
adc
bound
mov
pop
pop
dec
mov
lcall
hlt
jg
inc
out
add
ret
dec
sub
inc
aaa
jmp
call
and
mov
mov
mov
int
xchg
push
and
and
sbb
jg
call
xor
mov
push
inc
and
pop
icebp
fstp
jecxz
xchg
test
fists
shll
rclb
sub
mov
xor
fisubrs
ljmp
inc
xchg
movsb
xchg
adc
repnz
cwtl
jmp
xlat
pop
push
cld
xchg
adc
or
lcall
sahf
out
push
jg
addr16
push
xchg
inc
sbb
insb
mov
jb
xchg
aad
iret
clc
mov
repz
stos
sbb
push
cmp
int
ds
hlt
mov
dec
jl
adc
aam
mov
rclb
push
lock
sub
pushf
jecxz
std
jmp
sar
push
pop
out
fmulp
mov
mov
jns
and
incl
fcomps
push
jg
xchg
cmp
or
nop
lcall
dec
adc
ds
inc
sub
insl
dec
mov
fmull
ljmp
clc
inc
add
imul
add
sub
add
hlt
adc
test
ud0
call
jge
pop
bound
xor
cmp
shll
decl
cmpsb
dec
je
mov
aam
sub
notb
in
outsl
inc
in
mov
cli
add
jmp
xor
aaa
iret
jo
pop
lcall
push
popf
jbe
idivb
lcall
dec
xchg
jns
jo
or
push
and
jmp
xchg
dec
jmp
adc
enter
push
jmp
xor
cmp
jae
mov
xchg
stos
jmp
rcrl
lret
sub
lods
mov
jae
and
mov
jnp
shl
jno
sti
ret
sbb
pop
mov
xor
out
and
inc
jmp
repnz
pushf
shll
and
and
insl
jecxz
cltd
mov
mov
jg
add
adc
xlat
pop
mov
je
outsb
add
or
lcall
out
leave
ss
icebp
test
adc
pop
mov
pop
push
xor
cld
mov
call
jb
mov
mov
jmp
mov
jmp
ljmp
mov
icebp
sarl
insb
sahf
mov
cltd
or
inc
mov
mov
dec
push
xlat
adc
xor
mov
jmp
cmpsl
jle
and
out
pop
loopne
push
and
add
pop
push
xorb
and
rorl
shlb
jmp
dec
jecxz
out
or
lahf
xor
adc
push
out
roll
imul
xchg
jmp
test
add
push
enter
xchg
sti
std
push
mov
add
pop
mov
ljmp
pop
arpl
sbb
das
insb
loopne
xchg
and
nop
mov
shl
ljmp
and
ds
jne
mov
push
cmp
push
lcall
cli
rcrl
cmpsl
cmp
mov
sbb
inc
xchg
fsts
mov
decl
lock
icebp
pop
xor
mov
mov
inc
fcoml
jne
incl
in
aaa
xlat
jno
and
sbb
cmp
add
mov
cmp
in
push
rcll
out
push
xlat
xchg
push
pop
insl
das
add
subl
mov
out
addr16
dec
filds
add
addr16
aad
sbb
rorb
mov
push
ljmp
dec
fldt
mov
orl
inc
loopne
cltd
addr16
daa
cld
test
sub
push
xor
subb
dec
and
mov
cltd
hlt
sbb
ljmp
push
ja
pop
enter
movsb
mov
test
in
or
loopne
cmp
add
fxam
dec
and
cmc
ds
cld
or
push
lods
shlb
out
icebp
cs
pop
cld
cmp
ljmp
cmp
sbb
xchg
mov
pop
lret
mov
aas
xchg
inc
test
mov
decl
popl
cmp
imul
lock
sbb
xchg
xchg
out
xor
push
sahf
roll
mov
stos
ret
in
jne
push
cli
insb
das
xchg
push
in
fisubl
stos
jae
stos
cmpb
test
into
fsubs
jg
xchg
jmp
inc
test
sbb
adc
mov
dec
test
jmp
scas
dec
cmpsl
faddl
dec
fcomps
gs
into
test
sub
xor
pop
sbb
dec
xor
lock
or
push
inc
mov
jne
jb
cwtl
jmp
mov
push
push
in
aaa
leave
push
andb
test
andb
mov
aaa
pop
scas
clc
decl
cmp
push
xchg
rcl
xchg
xchg
ds
xchg
and
pop
xchg
push
mov
mov
jl
sbb
mov
push
pop
mov
fnsave
mov
decl
dec
or
lock
ds
icebp
push
mov
jecxz
jmp
popf
std
sti
imul
cmp
aaa
rclb
xchg
pop
add
lods
push
jmp
cmpb
jmp
das
jno
gs
push
mov
js
sub
in
fadds
sti
shll
sub
clc
lods
repz
fisttpl
arpl
stc
xchg
inc
push
mov
cltd
cmp
test
imul
mov
cmpsl
outsl
call
cld
xor
scas
ret
daa
ficoml
mov
xchg
add
lret
lock
decl
movsl
xchg
or
test
ja
repz
jg
sbb
xchg
out
cmp
ret
int3
pop
ljmp
test
inc
lret
sub
cmp
xchg
sub
nop
dec
inc
jmp
dec
mov
in
insb
push
loop
flds
stc
xor
icebp
inc
xor
push
and
sub
scas
and
jmp
xchg
xor
adc
ds
addr16
sbb
mov
aaa
mov
jg
jg
dec
or
xchg
xchg
in
cmc
imulb
les
push
iret
mov
mov
inc
or
dec
jb
add
stos
mov
add
xchg
shrb
mov
out
jo
repnz
clc
movsl
jg
fadd
in
insl
xchg
xchg
inc
add
push
popf
jg
arpl
push
loope
adc
jmp
rcl
jno
pop
xor
and
and
movb
mov
in
pop
add
outsl
mov
jmp
jp
sub
pop
push
mov
push
in
dec
scas
inc
fisttpll
xchg
fs
sahf
adc
push
cmc
int
decl
pushf
xor
shl
xchg
push
fcmovu
in
fwait
scas
test
lret
add
pop
push
cmc
call
lret
pop
out
mov
cmpsb
lea
and
incl
dec
xchg
lods
push
dec
cmp
sti
dec
adc
loopne
jmp
out
incl
inc
mov
inc
lock
mov
gs
outsb
dec
in
dec
lcall
out
mov
xchg
in
or
out
cmp
sub
insb
lret
sub
pop
adc
cmc
jle
sub
out
xchg
int
addr16
out
dec
and
sbb
dec
mov
mov
pushl
sbb
lcall
or
arpl
in
std
push
xchg
and
mov
stos
jmp
push
and
cmpsb
fnstenv
aad
xchg
mov
outsl
adc
lcall
rcrb
pop
cs
aad
xchg
or
dec
mov
push
je
push
hlt
jmp
or
sbb
loop
loopnew
mov
test
sub
mov
xchg
cmp
imul
or
adc
mov
fdivr
ljmp
popa
cltd
adc
stos
popa
cmpsb
push
mov
mov
fsubrl
mov
push
rcrb
rcr
adc
cli
push
testl
jg
les
xchg
hlt
cmp
into
add
imul
xchg
adc
mov
imul
xchg
cmp
sbb
icebp
arpl
insl
enter
fcomip
jmp
mov
push
out
iret
mov
repz
xor
mov
je
pushl
shrl
insl
xor
roll
xchg
or
and
cmp
pop
sbb
xor
call
sub
xchg
or
fcomps
das
sub
ja
adc
subl
fisubs
jmp
xor
push
fdivrl
es
inc
mov
xchg
popa
std
nop
mov
loope
cmp
decl
aam
or
or
jp
dec
cmc
data16
cmp
xchg
pushl
cld
adc
adc
adc
ljmp
and
repnz
jmp
cmp
dec
add
push
lea
test
mov
out
sbb
mov
mov
sub
outsl
incl
fwait
mov
and
mov
out
dec
jb
jnp
jg
jae
lret
lcall
mov
mov
sbb
mov
jmp
mov
out
scas
push
jecxz
jb
mov
mov
add
test
nop
inc
jecxz
leave
cltd
insl
out
cmc
movl
test
ljmp
inc
pop
enter
cmp
sub
xor
xchg
mov
sub
mov
inc
scas
dec
sti
fsub
out
xchg
cmc
in
sub
or
ljmp
clc
pop
or
je
test
insb
fs
std
mov
add
call
loop
jge
cmp
inc
sub
jae
ja
gs
ja
hlt
test
dec
in
sub
mov
xchg
test
xor
sbb
and
out
sub
daa
cmc
push
sbb
decl
adc
repnz
sub
mov
icebp
aam
ja
enter
mov
imull
mov
sub
inc
push
dec
sub
popf
jl
inc
jg
js
xchg
dec
test
pop
call
cld
pop
mov
or
mov
rcr
fidivl
pop
jg
inc
cmp
and
ljmp
into
fcoms
cmp
push
push
pop
daa
outsl
pop
out
cmp
jmp
cmp
push
inc
loop
or
xor
out
sbb
ficompl
cmp
jg
enter
bound
xchg
mov
dec
cmp
pop
push
sbb
ljmp
xchg
inc
push
call
loopne
add
sarl
orl
shlb
mov
xchg
jmp
mov
add
pop
push
aaa
dec
and
pop
shll
push
out
cmp
stc
and
dec
fistps
lret
sub
sbb
mov
movsbl
xor
push
xor
cmp
in
sbb
mov
popf
das
xchg
popf
and
int3
pushl
xor
imul
push
fimull
pop
cmpsl
lahf
xchg
flds
testb
leave
mov
movsb
fsubs
lds
nop
mov
clc
cld
ss
fmull
xor
lods
call
sbb
out
out
sahf
rcll
cli
lds
sbb
jge
test
decl
mov
sub
jmp
jp
push
pop
sbb
jg
lds
dec
stos
pminub
daa
in
lea
cmpsl
rol
pushf
mov
in
push
sahf
out
or
sbb
jp
mov
leave
test
loopne
decl
jae
jg
frstor
mov
mov
sub
sbb
or
lcall
inc
mov
movsb
mov
push
and
mov
fcomip
pushl
xor
repnz
xor
in
push
add
ret
or
mov
movsb
mov
mov
outsb
loopne
cmp
inc
jne
stc
push
test
dec
mov
sti
sub
xchg
fstpl
inc
sbb
adc
aad
jecxz
add
lcall
or
sub
aad
or
test
sub
ljmp
insl
cltd
stc
lret
sbb
cld
std
pop
lea
cmpsb
lahf
inc
stos
imul
fwait
leave
mov
call
lahf
aaa
pusha
sbb
jae
xor
sbb
inc
mov
cmp
cmp
outsb
jnp
dec
mov
aas
adc
ss
cli
stos
jbe
push
mov
xor
hlt
mov
inc
or
pop
je
fcomip
decl
arpl
aas
push
scas
cmpsb
push
mov
and
adc
scas
decl
clc
mov
clc
sbb
push
and
aas
mov
leave
lcall
call
lock
call
and
scas
outsl
outsb
sub
xchg
sahf
cmp
push
lcall
push
adc
enter
cmpxchg
xchg
xchg
loopne
insl
in
scas
stos
das
clc
jbe
mov
adc
call
pushl
sbb
jae
fwait
popa
and
rclb
outsb
mov
push
loope
jb
nop
fdivrs
pop
jecxz
sbb
fs
ret
sub
aad
push
dec
cld
push
inc
ljmp
dec
divl
xchg
or
insb
cwtl
mov
mov
aam
mov
pop
test
push
test
imul
movl
repz
inc
adc
inc
cli
ljmp
push
mov
sbb
adc
imul
movsb
mov
pop
mov
mov
adc
out
cmpsb
sahf
je
jae
es
jno
mov
sub
fxtract
pop
incl
int
pusha
sahf
repnz
push
repz
mov
imull
dec
es
fdivrp
ljmp
sbb
cmp
js
inc
inc
cs
inc
loop
and
js
outsb
out
pushl
pop
xor
jg
xchg
cmp
fidivrl
loope
pop
arpl
cltd
fucomip
mov
pop
fildl
jmp
loop
jl
mov
sbb
cmpsb
dec
daa
scas
dec
inc
mov
jle
imul
lock
lcall
xor
add
mov
imul
stos
mov
insl
decl
mov
sbb
pop
sbb
in
mov
adc
shlb
sbb
call
or
imul
int3
std
pop
stos
repz
pusha
adc
fcmovnb
add
incl
sub
cmp
xchg
repz
jne
inc
and
and
mov
xor
push
js
ret
xchg
out
or
popa
imul
decl
int
mov
xchg
push
mov
rol
fwait
loopne
das
pop
mov
pushl
or
scas
mov
sbb
push
pop
and
nop
rcrb
fsubr
jne
inc
mov
mov
sbb
pop
cltd
mov
or
add
dec
xchg
push
lock
inc
xchg
incl
jnp
xor
stos
je
das
aas
inc
pop
data16
cmpsl
movb
xchg
lods
mov
or
jno
ljmp
push
cmp
sbb
jp
xlat
shlb
jg
mov
adc
mov
lods
xor
inc
and
inc
push
push
ljmp
fadd
xchg
inc
mov
dec
insl
pusha
xchg
mov
push
and
jmp
rcll
jg
aaa
shrl
inc
out
test
bound
rolb
pop
xor
lcall
push
jno
dec
xchg
and
cmp
mov
in
cmp
std
mov
std
sub
mov
cmc
jmp
or
hlt
push
sub
mov
cld
mov
push
and
lcall
ja
push
je
ja
cmp
fiaddl
inc
jecxz
cmc
or
cs
mov
xchg
imul
arpl
js
fwait
rcrl
jmp
fwait
idivb
jbe
mov
mov
push
out
test
jmp
add
jo
loope
ljmp
decl
out
pop
stos
mov
pop
dec
shrl
adc
call
in
and
test
adc
xor
in
stos
xchg
icebp
sbb
std
ljmp
or
add
xor
push
in
jae
sbb
sbb
sub
rcr
call
xlat
sbb
jbe
fwait
test
stos
aas
or
sti
das
add
sbb
dec
std
push
imul
xchg
mov
mov
cmp
outsl
lock
je
dec
xchg
mov
pushl
dec
lods
inc
mov
inc
cwtl
or
gs
or
pop
icebp
std
repz
lcall
ja
jmp
ljmp
jae
hlt
test
jno
les
dec
data16
jo
xchg
jle
or
aas
xchg
icebp
xchg
jns
push
jbe
ret
stos
in
es
fs
or
decl
add
fs
push
adc
sbb
cmp
jl
popa
xor
loopne
ret
dec
clc
dec
cmpl
int
jne
xor
arpl
sub
inc
shll
js
cmpsb
mov
sub
hlt
mov
jecxz
mov
pop
dec
addr16
pushl
jbe
outsl
ljmp
inc
adc
inc
clc
test
add
mov
neg
or
cs
pushl
jb
inc
mov
cmc
dec
nop
outsb
test
movsl
aad
out
or
shrl
add
pushl
pop
xchg
test
jg
xor
push
pop
shlb
mov
flds
incl
sar
call
fisubrl
sahf
popf
test
nop
xor
push
bound
js
add
leave
jecxz
call
in
cmc
cmc
out
mov
and
jl
test
mov
jae
mov
dec
pusha
aam
mov
aaa
std
decl
jno
in
js
lock
or
dec
repnz
jl
inc
ljmp
popf
mov
iret
mov
xor
lcall
or
inc
adc
jge
addr16
sbb
stc
pop
xor
push
mov
mov
mov
dec
loop
jl
mov
fimull
dec
lret
or
dec
xchg
ljmp
iret
dec
jo
adc
pusha
push
daa
addb
addb
push
sbb
mov
outsl
incl
sub
dec
jmp
addl
add
push
push
push
xchg
lcall
fmuls
shrb
stos
push
jne
test
out
lahf
daa
pop
pop
and
dec
out
xorl
call
out
mov
adc
or
iret
mov
sbb
or
das
outsl
fs
xchg
iret
cmpsl
sbb
sub
lcall
mov
shll
cltd
jp
ljmp
outsl
jecxz
repz
call
std
rolb
cmp
push
rcrb
dec
scas
mov
shll
stos
sub
inc
jg
ret
ljmp
out
in
and
mov
loope
mov
dec
jmp
test
add
push
push
cmp
push
adcl
repz
sub
inc
add
mov
ds
fbld
jp
add
push
arpl
add
mov
ss
in
in
pop
push
or
push
pop
and
jmp
fucom
add
mov
loopne
subl
sbb
je
in
cmp
popa
leave
sti
imul
incl
pop
sahf
sbb
in
adc
lds
shr
pop
mov
xor
mov
jbe
stos
jecxz
dec
sub
mov
jp
add
cld
ljmp
mov
push
inc
sbb
fwait
cmp
ret
mov
or
out
mov
incl
in
xor
mov
sub
cmp
je
pop
cld
lcall
movsb
xchg
std
mov
sbb
or
xchg
cmc
xchg
jbe
je
jmp
mov
hlt
dec
jo
stos
xchg
and
jg
fs
aaa
fcom
loopne
in
xlat
test
push
xchg
push
jmp
or
adc
cmp
pop
or
cs
rcll
adc
or
inc
and
sar
pusha
inc
jb
xchg
xchg
jo
div
fndisi(8087
cwtl
cmp
mov
ficoms
cmp
inc
sub
adc
pop
gs
andb
mov
jmp
divl
pop
xlat
pop
xchg
push
aad
aaa
in
andb
sti
repz
andb
jmp
pop
jne
decl
jp
push
cld
in
fs
mov
stc
mov
jecxz
sub
mov
pop
loop
dec
jbe
jg
mov
pushf
stos
mov
mov
adc
popw
pop
es
xchg
fs
out
pusha
lds
inc
stos
ja
and
pop
push
pop
cmp
loope
fdivs
pop
pusha
aad
clc
std
fs
push
mov
icebp
cmp
mov
mov
fst
fadds
mov
insb
jg
sbb
or
cmp
data16
in
dec
or
lahf
jnp
std
test
decl
in
xchg
jle
pop
jmp
pop
icebp
mov
push
adc
adc
ljmp
in
mov
sbb
imul
andl
decl
js
je
ret
push
adcb
cltd
push
std
xchg
in
rclb
push
adc
ds
adc
incl
cld
jmp
jno
xchg
cmp
pusha
and
pop
dec
pop
jnp
shrb
call
and
mov
mov
sub
lds
mov
jno
xor
das
call
insl
xchg
inc
and
push
pop
push
lcall
popf
mov
lcall
outsl
out
js
mov
mov
cmp
enter
call
pop
xor
out
jecxz
lret
pop
pushf
test
lcall
ret
test
jg
pushf
jb
cmp
lds
xchg
jnp
into
fistps
mov
fldt
addr16
mov
int
enter
sub
adc
sub
outsb
leave
js
dec
fnsave
xchg
mov
push
mov
fdivs
enter
mov
mov
and
movsb
lcall
decl
pop
loop
je
mov
pusha
sbb
movsb
sub
jnp
aas
jno
frstor
test
jae
shll
pop
push
jb
imul
cmp
jl
adc
popa
cmp
adc
cmc
cmp
mov
dec
gs
lock
outsl
popf
sbbb
int
push
and
jns
popf
nop
cltd
sahf
sbbb
rorb
mov
xchg
call
icebp
sub
lods
je
sub
xor
sbbb
jmp
and
lcall
call
pop
mov
adc
inc
test
aaa
fmul
lcall
cli
inc
jg
fsubrl
inc
cmp
inc
add
dec
scas
xchg
cmp
jge
xchg
or
call
std
in
adc
fldenv
ljmp
call
sub
es
das
imulb
jg
in
sbb
add
mov
or
xor
mov
xorb
pushl
cli
adc
hlt
or
dec
jge
xor
xchg
jmp
push
outsl
dec
into
pop
lret
ds
jmp
xchg
lods
dec
pop
pop
cmpl
addr16
das
or
std
lcall
jge
test
cmp
xlat
pop
out
mov
sbb
mov
aas
mov
call
sub
adc
test
dec
or
xchg
movl
cltd
cli
jg
or
dec
leave
lods
xchg
fsubs
dec
xor
mov
sti
mul
lock
fdivl
inc
sbb
or
andb
mov
pop
jns
mov
jmp
fldl
rcr
enter
psubw
daa
mov
jmp
xor
ficompl
incl
add
sti
mov
test
clc
jbe,pn
test
mov
fisubl
jne
pushf
mov
push
testb
fs
in
mov
mov
cmc
jae
adc
ss
mov
ljmp
push
mov
push
lahf
fcom
fmul
je
cltd
inc
cmpl
mov
jg
movsb
les
in
mov
mov
fwait
cmpsl
and
pop
fwait
loopne
faddl
les
push
cmp
test
into
jecxz
mov
cmpsb
mov
jae
adc
or
sbb
mov
dec
cld
mov
push
test
lds
mov
das
cli
call
div
clc
mov
xor
mov
pop
sub
decl
repnz
jg
rcl
mov
add
or
dec
xchg
adc
scas
mov
incl
shll
inc
test
jb
outsb
loope
popf
sbb
or
lsl
lods
jmp
incl
pop
mov
mov
enter
xchg
push
adc
mov
out
adc
xor
push
jae
movsl
repz
fisttpl
push
cmc
adc
push
mov
sub
xchg
outsb
fstl
mov
xor
jne
sbb
movsb
or
jmp
ljmp
jg
ret
dec
mov
aaa
dec
out
mov
imul
lret
leave
sar
loopne
cltd
xchg
or
xchg
out
sbb
dec
sub
push
test
das
enter
into
fwait
adc
mov
fwait
movsb
inc
inc
decb
or
movaps
add
incl
cmc
xor
jecxz
mov
lret
push
aas
call
clc
fldenv
lods
stos
stos
arpl
sar
ja
in
or
mov
sbb
xchg
stc
dec
pop
inc
jg
mov
xor
pushf
shl
pop
mov
cli
in
jne
lret
jns
cmp
cmpsb
pop
add
subb
enter
arpl
xor
ljmp
stc
popf
call
dec
push
jl
popf
pop
test
enter
ret
xor
and
seta
push
jo
jnp
std
jp
out
fldl
aam
and
subl
mov
lret
adc
dec
int3
int
ljmp
pop
mov
xor
mov
loop
loope
addr16
and
cmp
inc
add
jmp
leave
jl
push
mov
sbb
movsb
cmp
popf
sub
push
pop
sub
call
fldenv
and
insl
cs
jl
test
lea
xchg
jg
data16
fldenv
ret
add
lcall
push
mov
push
js
dec
pop
imul
out
adc
into
in
cltd
insl
fisttpll
das
jbe
test
dec
lock
lahf
xor
mov
push
das
xor
mov
pushl
cmp
dec
xchg
clc
cmp
rcll
scas
fwait
add
repnz
jmp
inc
divl
push
push
sbb
cmp
mov
lahf
pop
cmp
mov
inc
mov
mov
out
daa
mov
sub
mov
fstl
mov
pop
stc
test
out
push
or
pop
mov
xor
aaa
jl
mov
xor
loopne
cmp
or
jge
mov
sarl
sarl
inc
dec
xor
cmp
sbb
imul
and
and
mov
and
pushf
inc
pop
outsl
lcall
xchg
xor
loopne
xor
xlat
push
jge
mov
push
movsl
pop
imul
mov
jno
push
outsl
dec
push
xchg
or
push
sbb
dec
pop
ret
arpl
addb
sar
dec
std
fnstenv
out
fcomps
icebp
scas
mov
jno
ja
sbb
adc
inc
sti
lcall
ds
insb
stos
aad
mov
test
fiaddl
jmp
popf
lcall
jge
pop
fbld
mov
movsl
cs
cmp
push
jnp
incl
scas
inc
mov
js
aam
in
and
int3
stc
sub
xor
mov
ja
aam
mov
mov
pop
push
lea
loope
xchg
or
lds
stc
nop
xlat
pop
xlat
movsb
inc
push
sub
pop
jl
scas
push
cli
adc
mov
fimuls
minps
xchg
or
lods
mov
cli
dec
pop
lcall
adc
lock
cmovns
pushl
xchg
scas
int3
pop
adc
loop
sub
cmp
xorl
int
std
jg
out
clc
sub
imul
ret
jg
outsl
mov
scas
lcall
pushf
repz
js
adc
xchg
mov
mov
sahf
sbb
cmp
mov
decl
cld
ret
xlat
jle
push
inc
dec
xor
push
jne
call
pusha
mov
fcomip
mov
sti
lret
dec
fmul
hlt
jg
xchg
clc
aam
jbe
jnp
jecxz
clc
jg
popa
test
push
xor
sub
pop
mov
test
pop
cli
mov
mov
jp
or
clc
cmp
push
fidivl
pushf
sbbl
int
outsb
shrb
jg
mov
or
aas
and
mov
sub
sub
or
cmp
loopne
call
bound
arpl
lahf
in
cmpl
cwtl
jg
xchg
mov
lods
xchg
mov
rcrl
incl
sub
sahf
xchg
bound
shl
inc
push
push
lds
lcall
pop
lods
mov
mov
xchg
push
jno
xlat
and
inc
mov
xchg
cmp
aas
call
mov
mov
sub
loop
xchg
inc
andl
ror
mov
incl
repnz
popf
lods
pop
sub
cmp
pushf
mov
out
add
inc
enter
incl
stos
addr16
jle
sbb
sub
outsb
cmp
push
xor
call
cmp
mov
and
mov
add
and
add
add
out
scas
push
sub
or
cmp
pop
hlt
dec
jb
xor
pop
jb
dec
mov
pushf
push
into
sbb
xor
ds
dec
xchg
daa
call
add
adc
and
lods
test
aam
test
jmp
pushl
jg
rcrb
mov
and
mov
call
jg
add
inc
icebp
add
dec
in
ja
daa
push
fistpl
xor
lds
jecxz
push
ljmp
cmp
test
mov
jecxz
jg
bound
inc
sahf
clc
repnz
cmp
mov
pop
in
outsl
test
in
decl
adc
fwait
ja
aaa
mov
pop
popf
and
das
cmp
mov
cld
incl
pop
fcom
addr16
push
jmp
daa
dec
cld
das
aad
jle
pop
dec
and
decl
sub
and
scas
std
out
jnp
out
mov
mov
xchg
addl
stos
nop
mov
jg
mov
mov
mov
mov
push
call
cltd
pop
mov
jge
pop
int3
dec
mov
mov
insb
rorb
pop
je
jg
incl
cmp
inc
jmp
insb
adc
mov
and
call
pop
jb
sbb
dec
pop
insb
aad
mov
enter
mov
dec
add
xchg
decl
cld
out
cwtl
cmp
mov
pop
or
sbb
push
cmp
cmp
dec
std
mov
push
rcll
mov
lret
fildll
jbe
mov
incl
scas
inc
pop
jb
pop
mov
movsb
sub
xchg
push
xchg
sbb
repz
cmpsb
cli
cli
cmp
cmpsl
fsub
stos
jns
fldenv
pop
push
lea
cld
inc
lods
aaa
std
jne
mov
xchg
addr16
ljmp
ds
cmc
mov
lods
mov
js
push
mov
cmp
mov
jge
ss
jmp
mov
xchg
lock
push
mov
ror
das
jns
in
cmp
xchg
sub
add
ja
or
push
inc
out
out
jmp
push
jmp
push
lods
aaa
gs
test
out
movsb
pop
sub
jae
cs
jae
fsts
repnz
sbbl
push
jmp
lret
into
shlb
daa
lret
dec
loopne
push
lret
cmp
ds
xchg
add
xchg
decl
mov
cltd
imul
in
shr
cmp
push
les
out
sub
fstpt
inc
xlat
aam
dec
jle
fnsetpm(287
pop
pushf
push
or
add
mov
fnsave
sar
xchg
ret
xor
mov
mov
js
mov
and
addr16
mov
xchg
loopne
and
test
xor
lret
adc
inc
loope
and
stc
stos
shll
stc
clc
insb
xor
jae
cmp
xchg
jnp
lret
mov
imul
mov
gs
sar
pushl
lods
mov
jle
xor
movl
mov
mul
imul
lcall
outsl
test
pop
test
xor
movb
cmp
jecxz
cmpsb
inc
insb
fisubs
xor
jg
mov
movsl
outsl
ljmp
sub
jnp
sub
rcrb
pushl
cld
jmp
cmp
sbb
inc
dec
mov
icebp
cmp
cmc
movsl
out
decl
xchg
call
jne
jecxz
mov
cli
iret
lret
and
aam
cwtl
call
pushf
out
sahf
stos
inc
gs
shrb
scas
inc
test
sbb
xchg
gs
movsl
pop
pop
dec
fstps
rcr
out
incl
gs
stos
adc
mov
dec
and
lret
mov
cmp
call
push
rorl
fimuls
push
dec
adc
aaa
sub
mov
adc
sbbb
call
jle
js
test
sahf
loopne
add
pusha
dec
sbb
pop
fidivs
lds
push
dec
push
jl
lods
and
call
pop
xchg
pop
push
jle
push
fwait
jb
in
mov
popf
fadd
cwtl
icebp
mov
sub
and
lcall
arpl
es
xchg
cmp
push
lret
cmpsb
or
push
mov
sbb
cmp
jns
lods
mov
jns
dec
mov
xchg
mov
stc
add
inc
bound
lea
push
outsb
cmp
fbstp
testl
push
mov
lock
insl
jno
int
ficomps
inc
pop
lods
in
imul
cltd
pushf
bound
ret
dec
shlb
loope
incl
mov
cmp
push
adc
inc
mov
ds
in
jg
xlat
dec
gs
push
out
ret
jbe
fwait
xchg
sub
es
cmp
push
adc
incl
rcrl
cmpsl
lcall
pop
fisubl
out
int3
outsb
pop
dec
loope
sub
mov
sub
ds
mov
lahf
call
jnp
pop
cmp
sbb
cmp
add
dec
out
idivl
lods
dec
icebp
cmp
stc
jno
pop
jmp
mov
push
xchg
sbb
sbb
mov
lret
xchg
cmp
lcall
or
push
bound
jmp
jns
inc
mov
jmp
mov
jle
pop
in
decl
pop
push
mov
sti
aad
jo
in
pushl
cmc
inc
outsb
cli
jmp
lods
js
or
mov
mov
adc
mov
push
iret
scas
dec
cmp
push
sahf
mov
xchg
pop
es
push
out
mov
mov
test
rorl
popa
into
jp
sbb
pop
and
push
mov
mov
xchg
jge
decl
inc
push
bound
xor
notl
cmc
xor
or
icebp
bound
and
xor
sub
gs
jle
shrb
cmp
jmp
test
lock
pop
push
mov
dec
cld
sbb
repz
and
push
pop
mov
xor
leave
fmuls
je
or
mov
in
add
addl
call
cmp
loop
sbb
mov
fisttpl
pop
rcrl
rclb
jp
cmp
mov
or
cmpsb
in
stos
lods
callw
shlb
out
rolb
mov
mov
push
jns
sub
mov
jne
sbb
pushf
xor
mov
sub
ljmp
xor
xchg
push
xchg
insb
leave
ds
dec
push
push
pop
jg
call
ja
mov
dec
loopne
shrb
out
push
gs
and
push
push
divb
mov
pop
pop
sub
push
jnp
lods
xrelease
sahf
xchg
sbb
movzbl
loope
scas
clc
decl
pop
leave
xor
sbb
cmp
jg
pop
add
xor
push
arpl
pushl
push
je
inc
movsl
out
and
outsb
cmp
cmpsb
movsb
cld
pushf
pop
out
insb
pop
xorl
dec
inc
fs
lcall
push
pop
es
adc
lea
popa
gs
outsb
xor
hlt
roll
lds
aas
into
shlb
cmp
adc
adc
repz
dec
cltd
imul
jae
sbb
sarl
mov
cmp
jno
addr16
popa
dec
cld
jmp
or
jno
nop
leave
mov
dec
fs
les
popf
mov
out
mov
fistpll
in
sarl
in
movsb
pop
ffreep
jle
jl
fdivrs
mov
mov
jns
inc
dec
daa
daa
dec
scas
or
cwtl
pop
pop
call
mov
rep
add
mov
imul
sbb
nop
jno
mov
popa
or
xchg
inc
test
push
repnz
push
out
mov
or
lret
popa
jmp
mov
idivb
in
jge
insb
std
mov
mov
mov
mov
divl
stc
or
cld
xchg
out
mov
mov
inc
ds
lock
adc
sbb
cli
aam
les
mov
inc
mov
call
cmpsb
jcxz
int3
push
out
mov
or
adc
mov
pop
or
ljmp
mov
sub
pop
push
mov
lcall
jge
in
inc
aaa
out
icebp
imul
mov
cld
jmp
pop
sar
cli
cmc
out
scas
into
popa
sar
jbe
lcall
aaa
inc
push
stos
das
inc
mov
stc
rclb
arpl
dec
outsl
repnz
lret
shl
jbe
lcall
insl
mov
lds
fs
mov
jmp
mov
mov
cmp
jmp
mov
test
aaa
inc
ret
pusha
push
sub
push
jp
out
jmp
xchg
fwait
add
xchg
push
mov
pop
idiv
fwait
outsb
cmp
pushf
fistps
jne
jmp
call
adc
cmp
jmp
mov
icebp
sbb
das
ficoms
test
aaa
push
test
xor
insl
jmp
dec
add
divl
push
insb
lcall
jmp
jae
push
imul
addl
pushf
testb
insl
sbb
or
jp
jg
adc
mov
outsb
inc
sbb
mov
sbb
sbb
call
inc
dec
push
push
cmp
leave
lods
push
jmp
sahf
add
sbb
jp
xchg
mov
ds
incl
not
add
ret
js
stc
xor
pop
bound
lret
int
or
ljmp
es
sbb
icebp
inc
cmp
fcomi
mov
bswap
inc
fistps
adc
pop
lret
pop
pop
mov
sub
movsl
jnp
sub
fnstenv
xlat
lcall
rcr
int
mov
jo
push
cmp
mov
or
inc
cwtl
pop
lock
jg
dec
movsb
aad
mul
dec
shlb
adcb
add
push
and
lcall
adc
stos
rorl
lds
leave
sbb
pop
push
cmp
incl
ret
out
dec
arpl
push
jmp
jo
cmp
mov
fldl2e
push
ljmp
jle
cmpb
add
xor
inc
jge
xor
jae
sbb
std
cmp
outsb
movsl
daa
iret
mov
frndint
push
enter
mov
adc
push
and
jmp
test
mov
xor
scas
push
lock
in
ljmp
das
loopne
inc
mov
rcrl
clc
repnz
cmc
mov
mov
xor
rorl
sub
cmpb
fs
lahf
ror
push
ds
dec
pushf
inc
push
popa
nop
setle
push
lods
pop
pop
jns
mov
or
cs
in
mov
mov
and
popf
inc
ljmp
xchg
mov
inc
dec
lds
icebp
sbb
cmp
shrb
dec
incl
out
adc
dec
push
das
lret
jne
jge
fildll
or
cmpsl
add
adc
xchg
fstpt
xchg
inc
scas
adc
lcall
sub
sbb
jnp
jmp
outsl
and
imul
xor
decl
scas
xor
jle
push
stc
cwtl
sub
jp
popf
inc
decl
bound
das
xchg
fisubrl
dec
lret
out
fstpl
sbbl
loope
lcall
outsl
insl
mov
xchg
dec
repz
fs
ljmp
cmpxchg
and
cli
pop
sbbl
test
cmp
mov
dec
cmp
lret
pop
push
xor
xchg
cs
add
sub
xor
xor
adcb
pop
test
pushl
test
xchg
sarl
nop
xor
idivl
dec
in
leave
fcomip
cli
ret
decl
jbe
js
push
dec
cmp
dec
pushl
imul
popf
fsubs
adc
movsl
hlt
lcall
and
inc
jns
mov
mov
pop
or
add
sub
cmpsb
lcall
push
int
lcall
imul
rcr
loop
incb
adc
scas
imul
and
aam
or
mov
gs
mov
adc
and
incl
mov
mov
inc
int3
add
sahf
iret
sub
decl
xchg
xor
adc
das
arpl
or
cmp
sbb
imul
rorb
repz
jbe
loopne
filds
or
xor
mov
in
jno
ljmp
test
inc
test
out
in
push
insl
cli
loop
xchg
push
and
les
inc
pop
lcall
pop
xor
lahf
mov
fcomip
fnstsw
lret
push
loopew
movsb
shl
mov
repz
jp
pop
inc
stos
mov
loope
lcall
xor
mov
fchs
pusha
ret
repnz
js
or
sbbb
mov
jl
inc
loop
cs
inc
out
inc
jl
jnp
out
lcall
lods
push
ljmp
mov
jb
test
push
mov
mov
data16
cmp
sbb
dec
mov
pop
and
inc
cmc
and
imul
in
xor
sub
dec
sar
sub
stos
out
cli
fisubl
push
repnz
mov
aad
dec
ss
aad
push
decl
pop
adc
xchg
dec
cld
jns
sbb
lcall
das
sar
sub
icebp
mov
mov
fwait
jle
testb
xor
imul
test
std
cmc
sub
xchg
adc
dec
es
jbe
call
in
stc
ljmp
das
fdivrp
stos
push
shl
mov
ret
in
subl
mov
sahf
inc
inc
push
mov
lret
sub
lcall
sar
lock
das
rcrb
inc
mov
mov
xor
sub
sar
enter
testb
je
xor
aam
inc
fs
mov
mov
incl
jge
insl
cli
fcmovnb
out
adc
loop
lret
arpl
pop
xlat
adc
pop
incl
inc
lcall
aam
or
lock
js
loope
pop
ljmp
mov
fwait
xor
mov
sbbl
mov
ja
add
mov
in
dec
xlat
dec
int3
add
and
out
ljmp
lcall
mov
dec
daa
pop
in
inc
shll
lea
jp
rorl
je
jg
stos
outsl
add
es
rclb
inc
xchg
dec
inc
imul
pushl
std
out
jle
cli
cmc
repz
mov
leave
repz
out
shr
jmp
or
and
jne
mov
mov
mov
jmp
xchg
sbb
xor
pop
mov
and
stos
test
cmp
scas
imul
jmp
lods
push
xchg
jle
testb
nop
pop
xchg
leave
nop
call
adc
pop
jp
xchg
dec
sbb
mov
into
popl
adc
xor
into
popf
icebp
arpl
test
or
popa
icebp
cld
shll
call
jl
cld
pusha
xchg
push
cmp
ja
jg
add
sbb
push
in
fs
je
push
inc
imul
mov
sbb
pop
adcl
dec
push
jae
and
cmp
fidivl
inc
call
std
test
ss
adc
pushf
pop
mov
add
jmp
xor
outsl
pop
push
sub
movsl
pop
and
cwtl
mov
and
addr16
es
xor
push
sub
incl
fsubrp
dec
inc
and
mov
cmp
mov
cmc
add
loop
loope
mov
faddl
in
sti
and
adc
scas
push
dec
pusha
add
inc
jnp
ljmp
cmp
je
imul
or
jo
pop
or
xor
cwtl
shlb
and
cli
enter
jp
inc
xchg
lcall
loope
test
in
test
pop
imul
push
adc
sbb
lods
scas
jle
popa
jbe
test
mov
push
mov
cmp
pushl
movsb
ret
and
mov
cmpsl
mov
sbb
outsl
lods
lea
add
call
insl
fstps
outsl
hlt
inc
pop
push
mov
lods
fs
push
add
push
lahf
testb
jp
push
in
pop
das
sub
push
dec
cmp
inc
ret
std
fcmovne
in
jno
decl
js
scas
ret
pop
int3
xor
lea
std
inc
shll
out
or
pop
imul
call
clc
in
or
idivb
test
out
add
lcall
pushl
popa
popf
and
mov
pop
push
sub
aam
pop
mov
testl
pop
xor
push
fmuls
int
jg
cmpsb
xchg
dec
rolb
fadd
popf
jge
incl
lret
push
jns
fldenv
add
fdivrs
sbb
and
sub
incl
dec
mov
arpl
jae
adc
test
mov
adc
ljmp
ljmp
adc
pop
or
in
cmp
jnp
into
or
scas
mov
test
xor
decl
fwait
pop
mov
decb
cmp
ss
mov
call
xchg
xor
dec
movsl
push
out
ret
jg
sbb
stos
xchg
mov
cmp
ljmp
ljmp
adc
ljmp
bound
or
sti
decb
pop
repnz
lock
pop
lock
in
repnz
cld
pop
popa
jle
aas
adc
clc
dec
test
dec
adc
scas
or
inc
inc
and
mov
jmp
cmpsl
push
push
clc
mov
dec
jg
decl
test
sbb
test
xor
sub
mov
movsl
pop
ucomiss
ljmp
jge
ret
mov
fnstsw
into
test
pop
cwtl
xchg
call
mov
xchg
into
out
imulb
sub
dec
nop
cld
pushf
jmp
sar
ljmp
xor
pop
ja
ja
in
jns
push
test
movsl
push
popa
pop
mov
incl
test
add
rorb
jnp
leave
xchg
mov
test
call
pop
sub
mov
fwait
push
mov
push
push
imul
scas
subl
test
dec
mov
call
fcoml
or
dec
lods
stos
arpl
mulw
aaa
push
push
mov
lods
sbbl
loopne
int3
sub
mov
add
shlb
sub
sub
adc
sub
sahf
pop
sarl
mov
repnz
mov
jo
xchg
mov
pop
or
lcall
xchg
sbb
dec
xor
lds
push
pop
sub
push
and
inc
xchg
mov
jl
push
push
mov
aas
jo
push
add
push
cmpl
inc
pop
adc
stos
scas
data16
inc
cmp
nop
test
jbe
cmp
pop
pop
sub
cld
lea
dec
cmp
mov
jmp
hlt
xor
rorl
push
xchg
ret
xor
push
fidivrs
in
loope
shll
aaa
decl
jge
push
sbb
push
in
cmc
fstp
pop
push
xchg
dec
or
js
sub
jmp
outsb
dec
xor
add
cmc
loopne
xor
sub
cmpb
sti
jae
dec
push
mov
dec
dec
mov
pusha
and
mov
enter
icebp
adc
sahf
es
mov
or
pop
or
inc
add
pushl
call
jb
scas
dec
sub
lods
addr16
int3
xchg
cld
add
xchg
out
aad
xor
cwtl
lahf
mov
fildll
mov
gs
adc
pop
into
and
test
pop
decl
adc
adc
or
sub
fs
jp
bound
or
incl
std
push
jbe
int
cli
mov
leave
xchg
lahf
xchg
xlat
repz
in
and
jg
jg
sub
ud1
inc
mov
cmp
adc
imulb
addr16
popf
add
ror
dec
lea
push
mov
push
cmp
lret
test
fdivrl
pop
xchg
ljmp
mov
pop
out
xchg
dec
out
loop
push
jmp
and
jno
roll
ljmp
je
push
shlb
mov
push
lret
imul
pop
daa
test
stos
incl
subb
xor
jnp
xor
pop
addr16
jae
dec
rorl
mov
xchg
movb
popa
out
fisubrs
or
inc
rcrb
jmp
orb
sub
jae
jno
mov
xchg
push
lock
aam
mov
push
imull
fistps
dec
jo
cs
mov
sbb
lods
jno
pop
xchg
cmpsb
sahf
loope
or
cmp
js
outsb
fimull
mov
shl
and
mov
decl
aaa
jb
bound
xor
rcl
stc
pop
lahf
cmpsb
mov
jle
hlt
jg
pushl
mov
pusha
outsl
dec
dec
test
jl
adc
call
out
push
sub
lcall
push
and
adc
out
push
lret
sbb
jge
xchg
ljmp
sarl
pop
mov
imul
jg
cmp
mov
pop
cmp
mov
and
int3
test
dec
mov
jge
loop
dec
adc
pop
add
fists
fdivl
clc
movsl
sbb
xor
mov
aam
jno
das
cld
dec
lods
dec
cmp
inc
mov
or
aam
add
jne
mov
push
bound
rclb
aas
mov
and
stc
inc
pop
cmp
mul
dec
aam
loopne
fs
fldcw
sarb
pop
dec
mov
or
xchg
pusha
ljmp
mov
jg
movsl
mov
adc
jl
sar
mov
or
pushf
fmul
xor
dec
dec
mov
rcrl
fldenv
xchg
incl
lock
decl
add
add
or
ds
sti
pop
sbb
jo
jecxz
rcrb
push
xor
mov
xchg
fisttpl
mov
inc
adc
mov
fwait
push
xchg
sbb
clc
into
in
ffree
xor
jmp
das
test
jle
mov
rcll
ljmp
sub
out
mov
sub
mov
inc
mov
ljmp
sbb
loope
call
ficoms
sbb
sbb
lcall
xor
mov
push
add
inc
decb
mov
movsl
xchg
fisubrs
cmp
jmp
pop
imul
ds
outsb
fistpl
fadds
insl
stos
adc
call
call
inc
lahf
stos
loopne
std
pop
jae
data16
cmp
cs
push
incl
xchg
sbb
cmp
lahf
mov
pop
mov
push
addr16
popf
or
jg
jg
incl
lahf
pop
lock
mov
adc
incb
and
mov
lcall
test
clc
cld
jle
push
ss
push
sbb
out
xchg
repz
mov
lcall
imul
xchg
jo
jne
rol
push
or
jg
push
or
repnz
insl
dec
mov
lret
ficomps
into
xchg
xor
push
adc
mov
pushl
cld
jae
repz
icebp
sub
cmp
test
lcall
and
fisttpll
sti
stc
and
jecxz
mov
cmp
pop
into
pusha
mov
stc
adc
sbb
call
dec
mov
mov
mov
lock
inc
dec
mov
data16
jge
push
xor
jmp
lahf
out
mov
cmpsb
push
jo
iret
add
sub
nop
mov
fcomip
addr16
mov
ljmp
subb
add
pushf
xchg
sbb
stc
incl
xchg
xchg
mov
lods
mov
xor
ljmp
mov
loopne
mov
push
push
jmp
lock
aam
mov
daa
loop
ljmp
outsb
negl
mov
movsl
loopne
je
ficompl
icebp
fistpll
mov
adc
ret
aam
aam
mov
pop
mov
jmp
rorl
nop
xlat
jmp
aaa
nop
pusha
call
gs
pop
inc
push
ret
call
in
incl
add
sub
loop
mov
popf
or
jne
push
call
test
xor
push
push
and
decl
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
mov
xchg
gs
idivb
movsb
pop
je
arpl
xchg
add
decl
add
add
ds
test
add
in
gs
jg
mov
push
add
push
push
cld
dec
add
add
jbe
dec
mov
push
inc
inc
jge
push
mov
add
jbe
push
push
call
rcl
jg
cmp
jne
incb
push
push
mov
inc
lock
mov
or
je
js
lods
cmp
and
dec
sti
mov
add
dec
jmp
mov
jmp
ds
rol
notl
lcall
movb
into
pop
pop
pop
pop
jmp
sub
mov
add
mov
ret
rep
pop
mov
xorb
pop
test
cmp
iret
test
cli
aaa
dec
fucomip
and
xor
test
scas
or
je
mov
shr
into
popf
cmp
mov
orb
lcall
shr
adc
fildll
call
je
add
out
fwait
push
add
sub
and
add
jmp
out
xor
sbb
or
push
call
lcall
cmp
je
add
lods
or
add
mov
lods
stos
jmp
push
or
mov
ss
jbe
roll
test
cs
sahf
lods
test
nop
movl
adc
std
imul
mov
mov
cli
add
lock
movsl
push
test
add
inc
inc
push
pop
add
pop
lcall
pop
jne
dec
sbb
sbb
push
adc
mov
int
push
push
jmp
scas
cmp
lds
pop
rorl
loop
or
mov
idiv
cmp
jl
js
pop
cmp
add
add
jmp
sub
loop
popf
shll
addr16
rcl
lods
ret
mov
mov
adc
cmp
dec
mov
pop
jle
mov
aas
int
cmp
push
push
add
cli
in
fstl
or
push
inc
adc
jl
lock
lods
call
inc
add
cmp
loopne
jne
inc
ds
push
testb
je
shll
adc
std
filds
movsb
pop
lods
lods
mov
loop
push
ror
ficoms
sub
pop
fisubrs
mov
or
add
sbb
stos
push
pop
in
lea
pop
jp
push
mov
adc
xchg
stc
dec
mov
fbld
bound
xor
mov
push
jmp
push
mov
imul
dec
add
ja
push
fcmovb
pop
sub
jmp
gs
outsl
js
add
jo
imul
inc
inc
inc
push
and
mov
push
add
jae
sub
lcall
push
outsl
push
and
hlt
pop
dec
arpl
insb
and
inc
dec
add
ss
fcos
or
push
insl
imul
add
lahf
fnsave
jb
mov
mov
aas
and
jne
mov
lods
or
ljmp
shlb
xor
dec
jne
jmp
xchg
pop
ret
leave
xchg
cs
loop
mov
push
and
push
arpl
and
cs
outsl
and
sahf
xor
rolb
pop
add
add
leave
mov
ret
adc
repnz
popl
sub
je
dec
fcoml
test
mov
pop
xchg
sti
push
push
xor
or
mov
incl
pusha
outsl
add
push
push
inc
ret
int3
inc
bnd
lods
loope
incl
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
fwait
inc
add
add
add
cmp
pop
push
addb
or
or
or
or
or
movups
adc
adc
incl
jg
mov
push
mov
add
xor
addb
sbb
pop
pop
mov
inc
or
out
pop
cltd
in
shl
and
mov
lahf
std
fcmovnbe
mov
cmp
jae
pop
mov
dec
adc
into
shrl
out
out
mov
mov
sbb
negl
cmp
pop
cmp
pusha
outsb
orb
outsl
xchg
mov
imul
push
insb
push
leave
dec
cwtl
add
cs
mov
nop
push
pop
aam
idiv
outsl
mov
stos
mov
mov
mov
mov
pop
mov
mov
lds
pop
shll
pop
mov
adc
decl
sbb
xchg
add
pop
loope
adc
lea
and
sub
shl
add
mov
clc
cmpl
jl,pn
outsl
pushl
add
cmp
mov
mov
insb
jl
mov
mov
pusha
xor
lcall
into
push
jl
jmp
fdivs
sti
xlat
mov
mov
cmpsl
mov
jo
data16
jmp
testl
stos
mov
mov
fdiv
push
jo
mov
add
or
sbb
subb
push
mov
je
pop
pop
pop
xor
pop
dec
cmp
subb
test
jbe
mov
adcl
je
mov
sti
xor
je
loopne
lea
inc
mov
ja
xchg
jl
inc
cmp
jb
stos
mov
push
incl
jo
push
mov
cmpl
jb
mov
mov
inc
mov
imul
out
mov
ret
cs
stc
or
and
mov
icebp
movl
mov
and
xchg
lock
xchg
mov
jbe
jg
mov
jmp
cmp
jae
or
sbb
nop
sarl
icebp
in
or
sub
xor
mov
xor
jns
lret
cmp
hlt
xchg
cmp
mov
mov
cli
mov
mov
cmp
scas
int
ret
in
out
xchg
inc
add
mov
pusha
mov
ret
jle
push
lcall
add
push
push
call
decl
mov
mov
add
sti
sub
clc
cmp
and
push
mov
incb
push
lea
lret
mov
or
add
shrb
push
push
mov
cmc
or
rorl
rcl
add
xchg
adc
inc
sbb
movl
cmpb
xchg
or
fbld
or
mov
idivb
into
pop
or
mov
lahf
add
enter
int
sub
ret
mov
fcmovnbe
sahf
movsl
push
cmp
pop
je
inc
nop
adc
adc
lea
mov
out
icebp
push
test
sub
mov
or
cs
adc
mov
jg
adc
add
and
ss
inc
jmp
jne
push
mov
sti
idiv
jl
dec
rolb
jle
cmp
dec
xor
dec
mov
sub
ljmp
add
daa
iret
in
jmp
push
je
or
pop
sahf
sahf
mov
add
outsb
in
and
lea
cld
mov
and
dec
adc
aad
push
lea
push
lea
mov
adc
jg
inc
mov
mov
add
cmpb
ret
lock
xor
sbb
repz
jg
nop
pop
sub
mov
mov
pop
cwtl
fistpl
and
xor
lock
pop
cmpsb
lret
jbe
call
lock
mov
push
inc
fsub
fistl
push
inc
jmp
incl
add
dec
cmp
pop
shr
in
xor
or
test
mov
cwtl
clc
or
cli
sub
rcl
insl
pop
mov
push
inc
jb
pop
test
int
sbb
sbb
xchg
mov
push
or
mov
mov
cmpb
iret
mov
sub
loopne
daa
fsubrs
ljmp
add
lret
clc
stos
push
mov
mov
push
or
xchg
xor
jmp
jbe
incl
jb
mov
outsl
std
aad
ret
loopne
or
loop
loop
divb
add
and
or
sar
rcll
in
lcall
enter
out
or
in
inc
int
out
xor
dec
lock
sbb
jmp
addl
and
push
adc
xlat
fildl
loope
loop
add
cmc
sbb
je
cli
popf
mov
sub
stos
pop
gs
mov
xchg
std
mov
lret
mov
cmp
inc
lea
sub
das
sarb
pop
jae
mov
sub
inc
mov
mov
push
pop
ss
push
inc
add
push
mov
jge
mov
notl
sub
adcb
stos
stos
pop
inc
sub
cmp
dec
push
adcl
add
aad
int
scas
pop
out
stc
inc
add
cmp
gs
inc
fs
and
ss
dec
outsl
fs
popa
outsb
inc
gs
and
fsubs
dec
outsl
popa
fs
cmovno
imul
in
lock
in
mov
mov
or
add
pop
enter
add
jae
arpl
mov
insb
jne
pop
rcll
out
jae
imul
mov
jbe
popa
jo
inc
sbb
dec
outsb
cmovne
push
pop
push
fdiv
or
or
lods
arpl
scas
xchg
cmp
inc
imul
inc
mov
push
dec
inc
push
inc
divb
xor
push
gs
jne
jns
popa
insb
or
mov
stc
inc
insb
popa
push
dec
popa
insl
gs
xchg
push
add
push
push
push
xchg
das
icebp
sar
mov
xchg
push
pop
mov
adc
push
ss
push
mov
cld
pop
jbe
enter
xor
jb
xchg
push
mov
inc
jmp
push
mov
inc
add
punpckhwd
daa
stc
or
mov
ret
sbb
nop
inc
sbb
sub
inc
add
dec
scas
mov
sub
push
cmovl
sub
xor
inc
push
fiadds
push
ret
scas
in
insb
es
jb
or
dec
xchg
dec
jbe
xchg
andl
xor
fimuls
ds
lcall
in
sub
addb
es
out
lahf
nop
dec
adc
ficompl
lods
sub
xor
mov
adc
adc
je
mov
cmp
adc
dec
pop
out
add
fistpll
add
sbb
or
cmp
cmpsl
adc
daa
out
incl
fbstp
pop
sub
cmp
sbb
call
out
adc
xor
test
popl
call
imul
fdivs
lahf
inc
xchg
dec
mov
push
icebp
lcall
ljmp
push
popa
and
repz
xchg
xlat
enter
lods
xchg
in
dec
inc
dec
ljmp
mov
fimuls
xor
pop
ja
je
cmpsl
fldenv
xchg
rcrb
or
ljmp
fucom
lahf
jg
pop
jne
pop
mov
mov
jno
in
lcall
lods
cltd
ret
mov
inc
in
les
mov
mov
push
mov
jge
cmp
and
or
ljmp
mov
xchg
pop
rcll
jbe
ret
pop
imul
pop
pop
mov
mov
xchg
cld
mov
mov
dec
pop
dec
cmp
or
incl
loopne
xchg
ffree
or
push
or
in
cmp
aaa
orb
incl
sbb
shr
enter
fsubrl
dec
mov
das
clc
outsl
rcrb
mov
addr16
push
scas
repnz
aam
mov
mov
incl
push
in
pop
dec
stos
out
push
in
jns
pushf
push
icebp
xchg
in
stc
jns
or
call
push
test
mull
hlt
jmp
pop
addr16
test
mov
push
mov
dec
jg
or
aam
outsl
ljmp
inc
sarb
xor
cmp
insb
push
in
pop
lret
mov
lahf
ljmp
repz
pop
xchg
mov
out
jnp
movsl
mov
mov
pop
jp
ds
cld
adc
pop
mov
fdivl
pop
fcomps
out
inc
inc
mov
in
jecxz
sbb
pop
lock
fisubrl
dec
fcmovb
adc
stc
frstor
push
and
pop
dec
dec
jl
cmp
jg
aam
loop
les
loope
jnp
negl
int
andl
iret
cltd
dec
cld
popf
jno
mov
push
enter
sbb
loopne
pushl
dec
insb
dec
imul
jg
adc
fsubrl
shr
and
mov
fidivrs
mov
dec
imul
mov
mov
mov
push
xor
add
xor
pop
jmp
jmp
xorl
sub
xchg
xlat
or
xchg
inc
notb
test
ljmp
jns
mov
mov
out
ret
xchg
fcoml
push
jb
mov
dec
fistl
dec
imul
dec
adc
lret
in
call
sub
pop
adc
ret
roll
in
push
mov
xchg
in
push
lret
call
xor
xchg
scas
repz
or
ja
and
je
arpl
ss
mov
mov
jg
pushl
and
and
and
stos
enter
adc
ljmp
call
ret
lods
ret
sbb
push
enter
fildl
insl
sbb
mov
arpl
inc
mov
fcmovnbe
lds
lahf
rcrl
outsl
arpl
push
mov
mov
call
cmp
std
pushf
xchg
test
xchg
fiadds
ja
push
sub
jo
sbb
lds
out
clc
inc
cmpsl
js
jecxz
xchg
lds
fdiv
or
iret
mov
insl
jmp
arpl
cmc
rclb
xchg
fisubrl
cli
inc
ljmp
add
decl
cmp
sub
popf
test
jge
fidivrl
loope
and
incl
adc
xchg
jge
mov
xchg
mov
sub
icebp
decl
clc
aas
cmp
mov
in
adc
push
lock
pop
inc
data16
sbb
fists
mov
in
xor
cmc
idiv
push
add
mov
push
dec
aas
out
cmp
ljmp
stos
jbe,pt
out
repnz
call
and
push
mov
lock
mov
xor
decl
mov
ret
nop
xorl
mov
arpl
test
icebp
jno
xchg
jmp
and
adc
mov
mov
or
lcall
imul
ss
jp
xchg
pop
pusha
xlat
addr16
mov
loope
loope
out
xor
xchg
sbb
jle,pn
ljmp
rcl
out
push
int3
outsb
rcl
arpl
jmp
sub
mov
or
incl
mov
or
pusha
dec
ret
ljmp
xor
pop
dec
lods
roll
inc
insb
adcl
decl
xchg
xor
mov
std
jecxz
out
push
aaa
lret
inc
jl
inc
mov
jmp
jg
in
xchg
out
pop
int
test
repnz
inc
repz
cmp
mov
call
test
sbb
lcall
stos
andb
xor
test
jp
rolb
data16
inc
mov
jle
cmp
mov
incl
repnz
call
std
and
shll
inc
cmp
jae
pusha
sub
push
insl
lds
fmul
call
jno
out
mov
cmpsb
xor
in
sub
cld
jmp
dec
divb
pop
data16
xor
xchg
call
xchg
push
gs
mov
loop
mov
loopne
xchg
test
xor
sar
jns
xchg
enter
fmull
sbb
adc
mov
fsubrs
aaa
ret
and
and
inc
inc
in
ret
push
cld
incl
incb
fidivrs
pop
enter
jmp
jmp
pop
and
pop
imul
cld
fwait
and
mov
lock
push
js
inc
loopne
pop
add
jle
insb
jnp
pushl
mov
add
aas
cltd
loopne
rorl
ja
dec
rcrl
xchg
into
cmp
cmp
jnp
jo
aam
addr16
jp
in
lret
ljmp
fildl
jl
fidivs
stos
mov
call
jae
pushf
pop
fmuls
loopne
mov
mov
adc
mov
sub
pop
mov
mov
movsb
pop
push
lods
jle
push
jmp
sbb
cli
or
mov
outsl
out
scas
scas
pop
js
aaa
mov
iret
adc
ds
xchg
in
jb
jb
inc
sahf
ss
ljmp
jno
jb
cli
pop
fs
aas
or
inc
add
cli
ret
push
jb
jg
mov
mov
pop
imul
mov
mov
adc
sbb
push
mov
add
push
loopne
popa
sbb
sub
mov
lcall
and
xor
and
and
je
fcomip
subb
xor
jno
push
jg
push
mov
pop
push
mov
lock
jmp
fnstsw
dec
add
pop
and
xlat
jmp
or
inc
fcoms
jmp
xor
das
mov
pop
sub
add
insl
shlb
ds
cli
dec
sbb
mov
decl
stos
lods
into
shl
sbb
mov
fists
mov
movsl
xchg
fcmovnu
xor
lahf
or
mov
in
adc
mov
mov
xchg
jg
mov
cld
add
ja
fistpll
jle
sub
lret
xchg
adc
ja
enter
mov
mov
call
cmp
pop
das
push
pop
xchg
jno
push
mov
aam
mov
fnsave
mov
stos
push
jmp
xchg
ret
test
adc
out
shl
cmc
outsb
adc
ror
mov
gs
pushl
mov
mov
push
loope
mov
add
xor
dec
decl
add
sub
xchg
push
sbb
lea
lds
adc
sar
jmp
adc
arpl
sbbl
dec
mov
or
int3
fisubs
sbb
aaa
adc
jg
lods
lret
mov
pop
xor
test
jmp
loope
in
das
xchg
cmp
inc
mov
lahf
in
or
fmul
mov
push
incl
cld
rcll
push
int3
out
xchg
fdivrl
arpl
lods
mov
pop
fists
mov
mov
inc
incb
add
in
jbe
mov
rolb
jnp
xor
ss
not
aas
das
mov
js
out
xchg
cs
lcall
inc
mov
inc
rclb
add
and
test
sbbb
dec
jg
ljmp
sar
rsm
cltd
push
loope
andb
hlt
jae
sbb
ret
daa
xchg
ljmp
fistpl
or
lock
mov
in
mov
stos
and
jmp
jmp
cli
lret
cltd
gs
mov
push
xlat
mov
mov
out
divb
or
ss
jmp
pop
lret
or
mov
mov
cld
cmp
incl
fildll
js
xor
or
xchg
jg
outsl
jns
sbb
adc
inc
shll
mov
or
mov
jecxz
test
mov
adc
ucomiss
adc
or
call
test
dec
sbbl
cmp
mov
mov
push
and
mov
ret
mov
xorl
lret
hlt
sub
test
mov
dec
and
inc
nop
dec
addr16
lods
aam
sub
add
int
inc
das
div
push
jne
pop
mov
aaa
std
hlt
test
cmp
inc
pop
iret
dec
xchg
xor
call
fistps
sbb
sti
push
jge
loope
hlt
push
in
adc
push
decb
cwtl
cltd
arpl
icebp
leave
adc
out
push
inc
mov
push
ret
hlt
pop
mov
push
std
lcall
imul
push
mov
xor
cmp
pop
hlt
call
or
or
and
mov
nop
pop
sub
adc
incl
pop
nop
cld
mov
jle
je
inc
push
in
push
iret
std
jne
jnp
adc
or
lcall
test
cmp
xchg
pop
push
xchg
fstpt
rcr
rcl
ljmp
mul
add
andl
mov
jne
divb
das
xor
and
push
push
cli
dec
mov
lcall
pop
pop
loopne
push
andb
jg
mov
cmpsb
cwtl
leave
inc
xor
ror
fiadds
dec
jg
outsl
jp
xchg
mov
sbb
lret
mov
fsubs
inc
adc
enter
and
mov
adc
je
out
test
test
addr16
adc
cwtl
cmp
jbe
or
dec
inc
inc
clc
pop
imul
sub
jmp
xchg
add
ret
dec
and
jmp
insb
inc
inc
mov
sbb
adc
or
sbb
jno
adc
mov
lcall
jl
movsl
je
hlt
ret
test
insl
mul
pusha
bound
test
push
inc
jbe
je
lcall
pop
fs
mov
cltd
mov
cli
jge
iret
cmp
mov
dec
jmp
sub
gs
sbb
into
pop
xlat
xor
push
outsb
xchg
push
fcmovu
lcall
insl
out
add
psadbw
sub
in
and
mov
call
cli
xor
push
push
nop
mov
push
mov
push
shl
pushl
cmp
imul
and
jne
clc
out
and
inc
imul
mov
cltd
mov
sbb
enter
ljmp
xlat
rcl
frstor
insb
inc
sub
adc
add
inc
ljmp
inc
ljmp
out
push
push
int3
fistl
mov
cltd
dec
pop
adc
jnp
in
insb
xchg
repz
xchg
mov
in
sar
call
cmp
inc
sbb
rcr
insb
mov
mov
arpl
cmp
ljmp
cmp
fiaddl
bound
loop
cmpsb
add
ret
jo
outsl
in
inc
xchg
mov
xchg
cmp
adc
aad
cmp
xchg
lret
int3
mov
in
sbb
xchg
or
jb
mov
mov
jmp
cmpsl
ljmp
sub
or
adc
insl
aad
or
fcomip
ljmp
mov
mov
lret
add
js
sahf
mov
sar
ljmp
mov
in
push
sbb
lret
mov
mov
mov
test
lahf
mov
ljmp
xchg
inc
mov
je
dec
sbbl
sub
pop
jns
sub
mov
fadd
jmp
stos
jl
lods
ljmp
loopne
sbb
dec
inc
jge
fcomps
adc
jg
jnp
mov
daa
and
jo
adc
mov
jp
mov
outsb
dec
cwtl
xor
call
movsb
adc
push
or
call
sbb
push
rcl
xchg
xor
decl
xchg
sub
mov
add
cltd
fst
push
cltd
cmpsb
ljmp
add
es
adc
ds
xchg
hlt
push
int
add
cli
push
push
imul
mov
mov
xchg
dec
mov
lds
sub
loope
jmp
out
mov
cmp
dec
dec
inc
mov
jae
incl
add
and
ss
in
cmpsb
shr
sbb
fdivrs
ret
xor
jle
in
cmp
fcoml
clc
mov
je
lahf
call
sarb
push
lahf
cld
mov
jl
push
cmp
push
cmpsb
ds
decl
scas
int
daa
out
popa
and
fstpl
rclb
sbbb
jg
addr16
fisttps
xor
mov
push
inc
outsb
jl
mov
adc
cmpb
test
dec
xlat
fistps
push
enter
test
dec
imul
xchg
in
in
xor
es
lcall
push
in
pop
sub
jnp
and
and
repz
inc
mov
ljmp
mov
mov
int3
xor
shrb
jns
outsb
gs
jmp
pusha
cmc
aam
inc
and
push
dec
aad
lods
inc
jg
mov
push
insl
sbb
sub
add
dec
out
sahf
cmpsl
or
nop
add
call
std
jle
int
jb
mov
xlat
jmp
jecxz
mov
andb
cltd
mulb
out
in
lock
cmp
call
imul
jg
mov
jge
mov
push
enter
aad
sub
pop
leave
out
cli
incl
repz
daa
in
mov
xchg
fs
mov
ret
cli
out
loopne
sbb
mov
pushf
dec
or
mov
shlb
scas
push
mov
sub
bound
call
sub
cli
mov
sub
jmp
rcrb
mov
lcall
imull
fcmovb
and
jns
decl
sub
ja
es
addb
adc
push
add
jmp
push
push
adc
ljmp
lock
cmp
jb
es
mov
outsb
pushf
inc
or
mov
sub
ljmp
addb
shll
loopne
jo
or
cmpsb
enter
cli
and
add
dec
xor
lret
pop
rcll
jle
pop
mov
jmp
jmp
mov
es
cmp
je
push
call
pop
xor
aam
jne
insb
rcll
mov
cs
lea
roll
pop
loop
xor
adc
dec
ret
inc
xchg
mov
pop
fs
les
mov
inc
rorb
adc
adc
add
lods
movsl
repz
pop
in
incl
jecxz
inc
pop
jmp
mov
dec
add
add
jnp
mov
call
or
fs
pop
test
jo
out
cmp
sub
and
pop
add
ljmp
jb
sbb
insb
mov
les
ja
je
push
repnz
adc
mov
call
fcmovnu
sti
adc
mov
in
add
add
rcll
ljmp
push
or
pusha
jne
in
ret
call
mov
push
adc
fs
jbe
or
repnz
call
sub
push
push
lcall
call
mov
add
iret
out
das
cmp
rolb
repz
push
hlt
push
pushl
jp
fdivs
sbb
push
jne
gs
and
pop
scas
pop
inc
sbb
iret
mov
mov
fstpt
in
dec
push
mov
sub
movsb
fwait
subb
pusha
push
addr16
sub
jg
jmp
aad
scas
adc
and
adc
cmp
dec
or
sbb
lret
fldenv
pop
xchg
inc
in
mov
dec
fists
sahf
cs
faddl
out
lods
arpl
shrl
hlt
jp
mov
sbb
push
in
xor
fisttpl
xchg
sbb
jl
jmp
mov
imul
movl
inc
dec
pop
pushf
pushl
sti
mov
push
and
or
inc
cmc
push
iret
sbb
test
out
das
decl
mov
fs
test
sub
cmp
sahf
mov
xor
mov
fdivrp
jmp
jo
xchg
dec
lahf
movsb
sbbl
leave
xlat
lahf
mov
out
mov
call
sub
jmp
mov
jne
push
and
push
mov
les
call
pop
lcall
jne
mov
shll
lahf
xchg
aas
push
popf
jmp
adc
cld
sub
int
cmpsb
pushl
das
mov
aas
xchg
arpl
cwtl
sahf
data16
pushl
lcall
shrl
pop
xor
fucom
pop
lcall
call
arpl
pop
fisubs
mov
fisubl
push
mov
and
pop
cmp
push
lock
fsubrp
aaa
jno
fs
pop
sar
call
mov
ffree
add
xor
sbb
inc
inc
xchg
inc
aas
movl
scas
pop
mov
pushf
std
dec
jecxz
pop
imul
hlt
mov
ljmp
xchg
dec
adc
sub
ret
int3
xorb
outsl
dec
inc
cmc
cmp
xchg
jl
daa
mov
ljmp
les
sbb
fsubs
ja
jb
dec
test
scas
enter
je
push
mov
and
jmp
shll
test
adc
mov
negl
test
and
xchg
cmp
popf
jle
mov
jge
pop
in
loop
fs
add
cmpsb
inc
or
loope
push
ret
incl
fisttpll
jne
mov
rorb
imul
sahf
sti
pop
jmp
pop
push
mov
pop
scas
xchg
push
out
xchg
cld
lcall
lods
cmp
adc
mov
testl
mov
cmp
inc
and
decl
pop
clc
pushf
jae
dec
xor
fisubl
dec
add
jno
and
mov
pushl
movsl
mov
pop
xor
or
push
daa
cmp
pop
xchg
call
jp
pushl
cld
incl
ret
cmpsl
movsb
pop
xchg
xchg
insb
pusha
sub
int3
lret
or
incl
in
adc
mov
aad
lock
adc
mov
lret
inc
xchg
int
sar
cli
je
and
jmp
int
pop
out
pop
jl
pop
and
pop
cli
pop
jmp
insl
inc
ss
inc
cmp
jmp
mov
push
mov
push
add
out
dec
int3
mov
xchg
scas
cli
outsl
push
jp
mov
jg
stos
and
insb
jbe
test
dec
or
jl
mov
sahf
xor
push
push
int
je
cmp
sti
es
lock
ret
incl
icebp
addb
repnz
pop
and
xorb
pop
faddp
mov
dec
xor
inc
shrb
lret
outsl
xor
jmp
sub
incl
xchg
fsubrs
divl
cmpsl
sbb
xchg
hlt
xor
or
xchg
daa
mov
mov
jno
mov
rcrl
jle
sub
push
dec
mov
notb
call
lds
push
mov
cmp
add
cwtl
enter
cmp
pusha
out
push
jmp
out
cmovbe
ret
or
icebp
xor
sub
jmp
xchg
dec
mov
fldenv
fs
xchg
mov
imul
jp
and
mov
out
push
adc
pop
mov
call
iret
xor
mov
lods
xchg
inc
dec
add
jle
shrl
pushl
popf
cmpsl
mov
sti
int
rcl
adc
xor
into
xorl
cmp
ljmp
cli
mov
inc
inc
pop
jno
repnz
notl
push
inc
mov
mov
push
or
mov
jo
jmp
cli
cmp
xor
xchg
dec
sahf
rcl
insl
in
jecxz
sub
xchg
lcall
in
ret
inc
aaa
push
cs
fdivrl
es
inc
cmp
test
cltd
mov
xchg
push
stos
push
lret
push
fcom
add
xchg
out
and
movsb
jbe
jecxz
xor
leave
xchg
mov
imul
fs
out
loope
outsb
pop
fimull
push
pop
cmp
std
jmp
pop
push
hlt
cmp
rcpps
pop
xchg
repz
pop
rcll
fs
adc
cmp
call
mov
or
inc
lret
lcall
sarl
and
jo
sbb
jp
mov
dec
sar
pushl
mov
fsubrs
adc
xlat
pop
repz
jecxz
mov
aaa
cld
pop
xchg
clc
mov
push
jae
das
mov
xchg
shl
call
aad
inc
mov
out
cwtl
mov
pop
push
mov
adc
jl
popf
sbb
incl
cmp
sub
push
xor
push
xchg
mov
shll
gs
cld
fsubl
push
bound
push
aaa
add
clc
and
dec
pop
fidivl
clc
icebp
sbb
call
nop
imul
mov
ds
enter
sahf
js
push
push
bound
in
divb
sub
les
inc
mov
inc
icebp
shlb
mov
jg
cmpsl
sub
pop
mov
cmp
jnp
cmpsb
sub
mov
add
dec
test
fs
and
push
das
sbb
test
outsl
mov
push
mov
push
sub
xchg
outsl
push
out
jl
jle
pop
lcall
or
scas
lods
adc
repz
lahf
out
repnz
hlt
fwait
arpl
incl
mov
outsb
jp
outsl
rorb
adc
adc
into
xchg
xchg
decl
dec
add
mov
out
loope
scas
or
andl
jne
outsl
sub
decl
stos
pop
leave
mov
mov
ret
fld
jbe
aam
mov
call
xor
jbe
cli
lods
adc
inc
sbb
push
loopne
ja
repz
jb
jg
and
fninit
sbb
sub
inc
pop
xchg
jb
jns
incl
dec
shlb
out
sub
mov
lret
les
lock
pushf
movsb
dec
loop
call
push
jg
mov
xor
xor
jge
jle
mov
ja
mov
std
clc
cwtl
push
mov
push
daa
lret
cmc
inc
pop
adc
xlat
jmp
not
fidivrl
dec
sub
add
rolb
adc
dec
jmp
dec
add
fcmovnb
aaa
int
ljmp
xchg
sbb
mov
clc
es
arpl
decl
fidivrs
xchg
add
jge
je
cmp
dec
cmp
inc
xchg
incl
adc
and
xor
mov
and
mov
imul
jg,pt
ljmp
mov
mov
js
dec
mov
pop
aam
jp
adc
clc
incl
adc
cwtl
mov
ds
add
pop
jo
ljmp
mov
mov
fists
push
xchg
pop
mov
out
mov
ljmp
pop
mov
scas
inc
mov
sbb
repz
mov
loopne
mov
mov
stc
shrb
mov
pop
jbe
sub
ljmp
or
pop
xor
lret
fdivs
jge
and
add
popa
xchg
adc
xor
fcoml
adc
bound
xor
jg
test
or
int
je
mov
jbe
cli
mov
clc
rorl
and
sahf
fldcw
int3
insb
dec
mov
fisubrl
ret
call
std
jg
mov
icebp
into
sub
outsl
or
push
mov
jne
jg
mov
jge
ds
jl
inc
mov
aad
and
xor
int
xor
jecxz
inc
xor
in
es
dec
mov
mov
addr16
stos
pushl
lret
jecxz
daa
pop
sbb
sarl
push
sbb
loope
xchg
adc
into
cwtl
aaa
or
inc
cmp
movsb
out
jmp
jge
sti
dec
jg
fsub
jecxz
mov
inc
sti
out
dec
shr
xor
jmp
repz
das
dec
pop
out
push
pop
jae
jge
push
mov
jmp
ss
jns
mov
call
daa
fistpl
enter
iret
lahf
xchg
lahf
and
push
scas
lods
ds
adc
insb
mov
scas
sti
pop
movsl
aad
cmp
loop
insl
hlt
mov
fisubrl
sub
clc
or
decl
mov
jne
loope
ds
cmp
lahf
inc
hlt
and
or
ss
add
scas
cli
jmp
cmp
maskmovq
idivl
mov
pop
cmp
cmp
and
incl
xor
push
rcrb
filds
adc
stos
cmp
es
les
jae
and
dec
sar
jmp
mov
bound
int3
into
mov
push
orb
sub
mov
sub
and
mov
jp
aas
sbb
lock
jno
inc
dec
xchg
dec
mov
fwait
or
cli
xchg
or
add
push
ljmp
inc
xor
cmp
inc
add
das
shlb
repnz
out
add
jecxz
mov
gs
inc
mov
dec
or
add
std
int
mov
inc
cmp
incl
lods
mov
adc
dec
jg
mul
cld
adc
cs
addr16
mov
imul
cltd
out
in
popa
and
test
xlat
xchg
push
mov
out
sarl
popf
mov
scas
call
ljmp
shll
inc
push
aaa
testb
add
ljmp
mov
xchg
push
fdivrl
imul
shrl
mov
or
lock
decl
lret
pop
call
pop
sub
add
inc
mov
jge
jg
fistps
jnp
fadds
sahf
mov
and
sahf
icebp
loop
add
incl
sub
imul
push
or
mov
sub
call
cmp
mov
das
mov
daa
jne
jns
xchg
mov
mov
jmp
fimuls
daa
enter
sub
push
mov
mov
ljmp
mov
jno
mov
out
pop
stos
mov
in
and
dec
arpl
js
imul
ljmp
cmp
clc
xlat
xchg
in
addr16
cs
icebp
das
out
wbinvd
inc
or
push
lcall
jg
ret
mov
bound
negl
cwtl
outsl
data16
fsubrl
ljmp
pop
cmp
leave
leave
decl
nop
in
cmp
adc
jl
pop
mov
sub
insl
popf
add
pushf
cmp
icebp
in
sub
orb
jg
rcl
pop
mov
test
xor
scas
mov
xchg
pop
ds
push
push
mov
and
lods
sub
notb
mov
lret
pusha
sti
push
mov
andb
fstpl
btr
mov
ljmp
sub
divl
xor
jl
jge
cltd
jmp
lcall
jmp
cmpsl
mov
pop
sbb
call
call
aaa
adc
jmp
adc
or
js
cmp
push
popl
push
int
push
leave
stc
cli
es
push
pusha
sbb
jmp
jp
dec
and
xor
ss
daa
mov
mov
sbb
pop
jmp
push
rcr
out
clc
incb
dec
sbb
sbb
push
push
cmp
das
lods
cld
jns
mov
push
push
sahf
push
sti
aaa
flds
pop
sbb
outsb
inc
xchg
dec
ret
fdivs
pop
or
jmp
fisubrl
mov
dec
dec
pushf
inc
movl
sbb
iret
mov
pop
sub
loop
mov
out
gs
jmp
adc
out
ljmp
ss
pop
mov
das
out
adc
and
jnp
add
dec
jmp
mov
and
insl
dec
mov
je
aam
xchg
cmp
lret
pop
shrb
pushl
rdmsr
mov
add
add
xchg
mov
data16
std
sbb
cs
loop
add
cld
jb
and
mov
jae
dec
jecxz
pusha
int
cld
repz
mov
push
add
pusha
imul
adc
pushw
leave
insl
stos
adc
sub
pop
rcrl
mov
cld
ljmp
pop
inc
push
imul
or
inc
sub
es
cmp
stos
lcall
jo
dec
mov
mov
ljmp
jo
test
xchg
pop
cld
inc
dec
repz
push
ljmp
loop
jge
mov
jg
sti
cmpsl
sub
cld
arpl
xor
cmp
mov
xchg
xor
popa
daa
add
popf
out
mov
cli
les
ljmp
test
xor
into
test
jns
pop
testb
pop
out
rorb
sub
int
cld
jge
dec
and
or
pop
sti
mov
int3
cli
ss
std
pushl
xor
xchg
jp
in
xchg
lret
adc
pop
mov
fstl
or
mov
mov
test
xor
inc
stc
and
jg
dec
cmp
mov
jp
mov
ljmp
enter
push
adc
lds
sbb
pusha
jmp
mov
aaa
dec
rol
mov
xlat
sub
inc
cltd
arpl
inc
pop
xor
pushl
inc
and
cli
push
fdivs
xor
xor
sub
shlb
mov
cmp
add
mull
mov
sbb
xchg
in
mov
jno
and
call
out
rorl
xchg
adc
mov
xor
push
mov
fidivl
push
leave
repz
lcall
insl
and
loopne
mov
or
repz
xor
jecxz
in
roll
or
fbld
outsb
dec
fs
int3
xlat
mov
in
pop
pusha
cltd
fnstenv
mov
cmp
dec
sbbl
call
daa
mov
mov
inc
shlb
mov
push
mov
jbe
push
mov
jl
and
incl
inc
jecxz
shl
add
cs
sub
out
scas
and
mov
jg
icebp
cmp
cmp
mov
aam
pop
push
lea
call
and
cmp
jo
xor
mov
add
inc
adc
add
movsb
mov
jb
cmp
arpl
dec
decl
xchg
inc
xor
mov
xchg
aad
bound
jmp
lds
mov
xchg
mov
push
loope
ds
fcompl
pop
stos
xchg
imul
mov
stos
dec
cwtl
in
pop
ficomps
mov
pop
mov
out
sarl
mov
lret
hlt
xchg
push
mulb
shlb
std
aad
fs
ljmp
mov
or
dec
or
push
mov
xchg
xor
sub
incl
out
stos
inc
aad
xchg
in
xchg
mov
loopne
jg
jo
int3
leave
sahf
adc
mov
sub
mov
scas
lods
xor
in
sbb
cld
mov
pop
negb
aaa
xchg
xor
mov
or
cmp
dec
out
mov
jo
pushl
call
cmc
shrl
and
xchg
test
imul
arpl
cld
stos
lock
arpl
incl
adc
mov
push
dec
repnz
out
sub
mov
inc
xor
xor
sti
sbb
inc
repz
xor
pop
xor
sti
mov
outsb
pop
mull
cmp
jge
std
or
lds
xchg
leave
daa
aas
inc
adc
cwtl
jae
lods
pop
mov
sbb
decl
ret
dec
test
icebp
jp
cmc
loope
inc
test
mov
pop
jne
jle
fadds
sbb
rcrl
pop
mov
push
push
add
sarb
outsl
mov
push
cwtl
mov
mov
cwtl
cmp
rep
jmp
or
cli
out
and
enter
jno
push
push
and
in
lcall
jbe
popa
pop
cwtl
inc
rep
ljmp
mov
out
or
fs
pop
jo
stos
jne
mov
cmp
push
cmp
lcall
xor
icebp
fwait
daa
sti
sub
xchg
cmp
dec
or
stos
or
pushl
loop
repz
inc
xor
cli
mov
das
xchg
inc
mov
lcall
push
xchg
and
xor
sub
mov
out
adc
add
mov
xchg
test
ljmp
lods
pop
pop
cmc
xlat
in
pop
cmpsl
inc
mov
ret
ljmp
cld
jmp
in
vpsllq
leave
push
cld
jnp
cmc
add
xchg
xchg
jmp
pushl
xlat
lock
ljmp
push
xor
lcall
out
das
and
incl
repnz
pop
sbb
mov
gs
or
fwait
inc
stos
xchg
scas
mov
add
jmp
inc
incb
shlb
add
decb
push
pop
push
incl
xchg
jb
rcl
frstor
sub
in
push
push
stos
cwtl
fnstenv
icebp
fsubrl
sbb
js
cs
mov
pusha
push
add
inc
dec
idiv
call
ds
lods
test
in
add
movsb
in
fcoms
push
int
nop
adc
xor
hlt
jmp
out
in
mov
adc
mov
cmc
sbb
dec
adc
mov
in
incl
xchg
sahf
mov
xchg
cli
pop
pop
push
sbb
repnz
cmp
idivl
das
pop
jae
dec
hlt
or
xchg
fwait
cmpsb
rcr
insl
out
icebp
stos
rcll
push
jo
pushf
outsl
aam
cmpsb
jmp
cli
cmp
and
les
add
or
in
push
in
mov
call
into
aam
shl
in
or
pop
notb
adc
or
test
cmp
lcall
scas
out
xor
and
mov
rcrl
sbb
jmp
jmp
loope
jg
inc
and
aad
mov
sbb
incl
push
out
mov
push
xchg
hlt
jno
fldcw
mul
xchg
in
lods
mov
mov
mov
je
loop
or
call
mov
mov
decl
sub
fbstp
adc
sbb
rep
mov
scas
inc
adc
repnz
mov
sbb
mov
adc
sub
icebp
in
or
xsaves
push
cwtl
es
jp
lret
rorl
outsb
mov
xor
xchg
movsb
outsl
shlb
push
jg
push
push
jmp
or
jp
and
mov
sbb
push
iret
cmp
and
test
push
dec
insb
jl
push
lods
inc
xchg
mov
fstl
arpl
cmp
mov
mov
jns
ljmp
pushl
data16
ja
dec
lcall
movsb
cmp
adc
fwait
jmp
push
push
out
cmp
and
lock
push
lcall
lds
push
ljmp
mov
jge
xchg
stos
jmp
ljmp
lahf
mov
hlt
popa
adc
sti
mov
cmp
icebp
push
mov
ljmp
in
dec
mov
cmp
cwtl
cli
mov
loopne
fiadds
jg
mov
sbb
popa
scas
mov
outsl
and
je
or
outsl
mov
mov
fsubrl
jg
das
push
xchg
fneni(8087
jecxz
std
mov
push
pushl
jns
ficoml
mov
fwait
std
jg
xchg
sub
std
dec
ja
pop
mov
lcall
decl
lods
test
push
std
lods
mov
jg
sbb
popf
fldl
and
popa
sbb
add
inc
add
jbe
vcomiss
pop
push
shrl
loope
push
push
push
adc
and
cmpsl
mov
into
adc
lret
cltd
loope
push
mov
ljmp
inc
jb
repnz
jecxz
sub
xor
out
push
mov
or
jb
inc
mov
xchg
sbb
sbb
pop
add
jg
add
xorl
out
insl
pusha
inc
xchg
sub
inc
sub
mov
imul
push
or
movsl
daa
xlat
lcall
push
out
aas
arpl
jmp
push
jg
call
cs
lret
dec
mov
daa
push
mov
ljmp
jbe
aam
xor
cltd
call
addr16
mov
mov
sub
aaa
int
test
pop
mov
int
push
push
test
popf
add
ss
pop
cmpl
inc
or
ljmp
bnd
xchg
and
loope
sbb
and
popf
je
xor
mov
mov
les
mov
xchg
mov
decl
lock
cmp
sub
xchg
pop
fcompl
decl
sub
in
jo
adc
lahf
fstp
enter
xor
nop
add
xchg
cmp
daa
jg
stos
sbb
or
sbb
pop
int
pushl
push
mov
pop
mov
clc
test
inc
outsb
xchg
je
into
lret
lods
loopne
inc
push
and
dec
stos
mov
cmp
dec
andb
bound
dec
ljmp
lcall
mov
push
lea
lret
and
dec
pcmpeqw
mov
in
pop
out
inc
sbb
add
call
ds
leave
inc
pop
xor
sbb
out
fidivl
mov
lcall
lds
push
mov
sbb
sbb
movq
xchg
call
in
lahf
lods
shr
stos
enter
sbb
inc
stos
lcall
std
call
mov
jge
repnz
test
mov
call
push
in
fimuls
jp
cmpsl
icebp
test
test
lahf
xor
inc
xor
sbb
push
hlt
push
notw
xor
pop
test
mov
decl
cmp
out
in
cld
popa
sahf
mov
out
pop
into
push
jnp
xor
ljmp
mov
push
mov
outsl
jle
pop
sbb
jecxz
repz
mov
pushl
or
subl
test
lods
and
inc
cmp
jg
call
push
inc
scas
lock
mov
ljmp
mov
or
xchg
mov
jne
leave
les
pop
stos
in
xchg
mov
xchg
sbb
negl
push
loop
and
cmp
decl
outsl
sub
mov
sbb
sbb
push
repnz
rcl
bound
int3
ljmp
jmp
cmpsl
cmpsl
movsl
mov
leave
xchg
icebp
mov
fdivrl
xchg
decl
loopne
aas
pusha
ficoml
push
mov
pop
mov
aam
sbb
pop
subl
cmpsl
call
leave
test
lret
xchg
jb
mov
jg
orb
out
in
repz
or
mov
andb
inc
dec
and
mov
pop
mov
lretw
test
test
or
insl
outsb
mov
loopne
xchg
hlt
call
or
cmp
and
mov
popf
inc
inc
in
roll
jae,pt
fstl
sbb
inc
lret
repz
ret
loop
inc
ja
cmp
jmp
jl
cmp
and
xchg
add
mov
mov
mov
je
xchg
sar
jge
pusha
dec
nop
sub
mov
cmpsl
pusha
jns
in
rcl
push
sub
aam
cli
out
test
push
mov
incl
jnp
add
gs
ficoml
jo
fsubl
lock
push
pusha
pop
in
jg
and
xor
fwait
cmp
dec
pop
mov
leave
jae
mov
or
movsb
insb
or
xchg
clc
and
decl
adc
data16
fwait
aas
sahf
or
in
lds
addl
or
mov
movsl
dec
jmp
fneni(8087
and
enter
out
or
repnz
xchg
mov
mov
or
int
jnp
loope
das
hlt
push
call
pop
push
add
in
dec
mov
cli
cwtl
jb
inc
andl
outsl
loop
or
orb
incl
push
cmp
ret
jno
test
xchg
push
xchg
jae
and
pop
out
lcall
add
std
call
mov
mov
pop
fwait
adc
aaa
xor
mov
mov
popa
adc
test
mov
stos
ds
mov
push
jne
mov
jle
pop
or
and
cmc
mov
xor
dec
cmpsb
dec
jns
negl
dec
icebp
push
rcl
pand
push
and
rcrl
sar
decl
jnp
lret
sub
lods
sbb
jl
test
cmp
mov
outsb
push
decl
cltd
cmp
test
xor
inc
out
sbb
mov
icebp
mov
jb
push
decl
push
int
outsb
adc
loopne
arpl
push
mov
lock
add
lock
nop
pop
data16
and
and
mov
xchg
xchg
sar
cmpl
incl
push
jb
dec
dec
rcll
mov
ss
cmp
fildl
push
icebp
dec
dec
sub
call
mov
in
femms
jmp
jo
aad
lahf
mov
mov
mov
or
repz
lcall
fisubl
stos
scas
andb
addr16
mov
jmp
adcl
mov
lds
add
insl
xchg
mov
mov
mov
out
pushl
js
and
xor
jnp
push
push
aam
sub
lods
mov
incl
dec
icebp
cmpsl
aas
and
das
xchg
xor
sub
and
movsl
and
dec
adc
incl
mov
mov
jo
push
pop
outsl
jae
inc
int
fimull
bound
inc
rorb
lcall
xchg
mov
adc
rclb
sub
add
das
mov
jmp
scas
xchg
aaa
adc
sub
lds
dec
add
movsb
divb
rcr
dec
repnz
jb
inc
fcomps
cmp
inc
sarb
incl
inc
lods
mov
mov
mov
lahf
dec
mov
mov
mov
out
aaa
xchg
or
jle
fisubl
dec
pop
inc
cmp
mov
pop
movsl
xchg
fisttps
ret
mul
pusha
test
ja
incl
in
mov
mov
inc
jge
xchg
lcall
shlb
ljmp
sub
add
jmp
pushf
sbb
ret
sbb
push
jne
add
sbb
xchg
shlb
mov
mov
jmp
call
jns
dec
test
mov
cwtl
iret
int3
pop
test
inc
repz
adc
sbb
xor
mov
leave
adc
pusha
jg
cmp
mov
cltd
lods
lcall
sti
aad
xchg
cli
and
dec
jne
bound
ret
lahf
mov
aaa
cld
mov
dec
jecxz
lcallw
ss
jno
out
mov
shlb
addr16
lcall
cltd
mov
add
pop
mov
mull
dec
inc
mov
jmp
frstor
jns
inc
xlat
jmp
pop
je
cmp
cwtl
repz
cli
or
mov
pop
rorb
or
lods
push
and
call
xor
dec
sub
lcall
mov
stos
fadd
dec
jg
fisttps
xchg
test
jg
movsl
adc
jl
or
loop
pop
sub
out
adc
out
push
cli
mov
in
movsl
sbb
fstpl
and
insl
jle
cli
mov
and
adc
test
pop
clc
in
fdivl
rorl
shll
pushl
adc
lcall
push
loopne
xchg
push
imul
jg
mov
pop
sbbl
into
xor
in
or
mov
mov
das
xor
mov
add
push
fdivp
iret
sbb
imul
cld
lcall
xchg
jae
lret
shrb
fisttpl
xchg
je
adc
test
cld
sub
lcall
outsb
sti
divps
fcompl
mov
add
call
xchg
adc
jecxz
inc
ds
scas
cs
dec
jmp
xchg
int
xor
sbb
sarb
fisttps
sub
addr16
push
mov
xchg
mov
cmp
lods
les
lahf
add
pop
push
jg
call
xchg
std
xchg
in
push
decl
outsl
test
add
pop
jge
dec
ret
cwtl
sub
push
stc
jne
clc
pushf
imul
test
fistl
jecxz
cmp
sub
idiv
lcall
std
inc
mov
dec
or
inc
ljmp
cli
inc
lahf
mov
dec
jo
insb
es
pop
cmp
push
mov
test
push
pushf
push
cmp
repnz
aad
ljmp
cwtl
fstps
xlat
mov
or
jnp
mov
rolb
xchg
shrl
idivb
adc
decl
and
lcall
into
insl
push
sub
mov
xchg
pop
lock
cld
ret
lcall
mov
add
stos
sti
pop
mov
mov
push
cs
ljmp
jle
insl
pop
push
inc
cmp
cmpsb
mov
or
call
mov
jmp
cwtl
jns
cli
sub
int3
push
mov
popa
mov
call
pop
rclb
dec
jge
or
lock
jo
scas
mov
cmpsl
mov
shll
stos
and
call
and
aad
or
pop
xchg
inc
adc
into
xchg
enter
lcall
pusha
add
mov
dec
sbb
sub
sbb
inc
cmp
out
jl
pop
dec
lahf
jg
fnstsw
xchg
into
addl
xor
addr16
mov
sbb
pushl
imul
and
xor
cmpsl
pushf
std
jl
jne
pop
clc
dec
insl
mov
loopne
push
bnd
outsb
icebp
xchg
hlt
inc
or
sub
orl
lcall
xchg
mov
sub
in
dec
cmp
loop
pop
inc
adc
dec
test
jmp
fimull
mov
xchg
sbbl
sbb
rcrb
xor
inc
mov
push
dec
pop
push
xchg
xchg
push
jns
insl
pop
adc
lds
cmpsb
bound
inc
pushl
clc
cmp
adc
or
dec
leave
mov
test
add
xchg
jb
mov
jmp
cs
dec
push
in
arpl
iret
in
enter
aam
mov
xchg
sub
sub
and
or
jl
das
cwtl
pop
mov
xlat
add
orb
jmp
pop
pusha
scas
adc
cmp
sti
lods
inc
mov
inc
mov
scas
inc
push
cmp
add
cmp
mov
shl
fbstp
mov
nop
push
dec
push
pop
sbbl
lcall
inc
mov
or
cmp
dec
push
push
sbb
inc
lahf
lock
or
decl
loop
add
xchg
cltd
sbb
and
mov
xchg
in
cmp
cmp
repz
sub
jmp
xchg
loope
xor
pusha
je
push
fdiv
push
sbb
incl
pop
imul
arpl
mov
sti
inc
and
dec
aam
ljmp
pop
test
jmp
pop
shl
iret
je
jns
aad
dec
pop
divl
xor
cmp
incl
mov
ds
aaa
xlat
idiv
stos
pop
push
cmpsl
xchg
stos
repnz
dec
pop
mov
outsb
xor
xor
in
decl
lods
jmp
inc
es
dec
rorl
inc
scas
ret
nop
ret
cli
add
pushl
outsl
in
loope
xchg
jno
test
rcll
pop
adc
jno
jmp
inc
gs
fcoms
js
push
cmp
rol
js
push
jmp
scas
lcall
loope
call
les
mov
shrl
bnd
mov
jmp
jl
push
inc
imul
cmp
fdivrl
adc
jne
mov
clc
decl
adc
aam
sub
sahf
xchg
fucomi
inc
mov
pop
jge
and
dec
stos
lcall
add
popf
dec
adc
dec
jno
scas
in
lcall
pop
sti
mov
incl
ret
add
das
sbb
fcomi
fiaddl
dec
out
int
out
scas
mov
jnp
or
ljmp
rcrb
mov
adc
stos
arpl
dec
dec
inc
aad
pushf
outsl
clc
incl
je
xlat
loop
orb
fbld
fiaddl
mov
dec
add
cmp
int
stc
aaa
push
ret
int3
cmp
test
push
pop
mov
add
into
jmp
ljmp
sahf
or
cmp
shlb
out
jmp
pushf
lea
pop
mov
jmp
mov
jmp
xlat
mov
stc
sub
pop
or
cmc
or
test
adc
mov
jo
pushl
cli
cmp
jle
mov
or
in
adcl
pusha
mov
lods
inc
testb
dec
sub
jmp
jge
cmp
inc
mov
jb
and
sbb
jne
mov
enter
popa
movsb
test
jmp
dec
ret
cmpsb
dec
mov
pop
push
sub
imul
outsl
mov
sbb
test
add
das
sar
pop
loop
push
decb
rcrl
dec
mov
outsb
out
outsl
pop
dec
ja
sti
mov
mov
pop
outsl
push
outsb
push
roll
pop
or
jg
orb
roll
push
ds
sbb
in
popa
mov
xrelease
je
mov
and
fwait
ljmp
lcall
mov
test
sub
call
std
jg
in
mov
pushf
into
jb
pop
push
cmc
mov
push
pop
sarb
mov
negb
dec
cmp
xor
sub
xchg
int
popa
les
in
mov
std
mov
push
xor
insl
cltd
orl
es
sbb
je
incl
imul
jbe
adc
pop
mov
repnz
dec
sub
lcall
cmpsl
stc
sbb
dec
je
out
cwtl
daa
and
xor
sub
sbb
push
push
push
push
loopne
out
in
jmp
cmp
jmp
addl
or
fcmovnu
fildl
test
call
lods
loop
add
dec
das
jno
cwtl
les
xchg
mov
pop
ret
add
je
movsb
pushl
sub
imul
daa
pop
push
mov
cs
sbb
xor
loope
add
or
clc
inc
decl
cmp
ret
cmpsl
pop
test
xchg
adc
mov
cmp
scas
jle
add
push
rclb
mov
jmp
in
insb
lds
push
lods
pop
scas
data16
lret
adc
in
lcall
popa
lea
adc
pushf
test
lcall
sbb
decl
add
fsubrl
xchg
mov
aam
fmull
sub
jmp
adc
mov
dec
mov
push
into
jg
push
mov
xlat
outsl
and
ja
repz
outsb
inc
push
cmp
repnz
mov
lcall
cmpl
imul
fs
pushf
add
int
mov
cmp
int
aam
dec
lcall
fstps
jle
int
adc
mov
mov
frstor
mov
push
sub
cmc
jbe
jle
jmp
int3
mov
sub
stos
sub
mov
out
or
xchg
mov
ljmp
jno
dec
lret
mov
leave
xchg
dec
out
xchg
fdivl
mov
mov
jno
incl
push
jae
dec
push
add
cmp
pop
add
push
ja
or
jge
inc
push
dec
mov
adc
jg
test
jp
sbb
mov
pop
dec
dec
inc
rorl
mov
in
ret
inc
xor
or
leave
mov
xor
mov
adc
js
dec
xchg
lods
cld
ljmp
clc
jp
add
test
dec
pop
in
jo
mov
jp
ljmp
or
xor
and
fistl
mov
ljmp
mov
jge
push
outsl
clc
jmp
movsb
and
jno
mov
test
int
cld
dec
mov
incl
rcrb
data16
and
xchg
arpl
adc
mov
incl
out
insl
adc
inc
dec
lret
movsl
inc
add
mov
addr16
stc
adcb
pushf
mov
fs
dec
insl
int
mov
jmp
mov
loop
or
inc
enter
or
lea
stc
rorb
mov
sbb
dec
sbb
adc
sbb
pop
addr16
push
sbb
inc
leave
rolb
pusha
push
clc
in
lahf
cld
call
iret
and
push
and
popa
adc
test
imul
fs
add
mov
or
cmp
sub
fldl
mov
fisttps
sub
jecxz
xor
sbb
xchg
lcall
mov
pushf
and
in
ljmp
jg
dec
decl
jmp
loopne
dec
mov
popa
ss
outsb
aam
fldt
js
and
jne
fs
stos
das
jp
out
sub
hlt
in
js
stos
mov
pop
sub
cmp
decl
or
dec
ja
lahf
jp
dec
cmp
int
pop
pop
or
lcall
std
repnz
dec
stos
hlt
and
int3
push
xor
cld
xor
push
popa
inc
out
cli
jmp
add
cmp
pusha
xchg
jo
push
push
jo
xchg
dec
pushl
call
gs
mov
js
test
push
cmp
test
jnp
je
ds
imul
ja
dec
lods
jle
xor
icebp
push
jb
mov
lds
mov
push
lcall
mov
ret
push
rep
icebp
lods
cltd
loop
push
in
andb
inc
fldcw
mov
jp
sbb
pop
dec
mov
add
pop
loop
mov
fsts
xchg
pop
xchg
and
daa
dec
dec
das
push
xchg
lret
cmpsb
mov
out
xor
push
lock
jnp
mov
insb
xor
std
push
xchg
int
or
jne
pop
pop
cs
decl
and
jge
outsl
lods
ret
ja
dec
fisttpll
mov
cwtl
stos
cmp
jbe
and
jb
leave
jmp
cmpsl
cmp
pop
loopne
mov
push
ja
xchg
stos
inc
pusha
jmp
test
sbb
sub
imull
mov
hlt
cmp
lahf
or
xchg
push
scas
jmp
hlt
fs
push
test
scas
pusha
push
cli
xor
xchg
mov
lods
cmp
xchg
aas
mov
es
add
movsb
add
repz
sbb
loop
ljmp
clc
ljmp
loope
ds
and
jno
mov
pop
je
sub
ljmp
jno
ljmp
sarb
dec
mov
xchg
test
daa
jecxz
imul
inc
outsl
mov
aam
popa
mov
cli
mov
xchg
dec
aas
xor
jg
push
push
or
call
and
fnsave
dec
data16
clc
mov
movsl
aad
cld
call
lods
int3
cld
xchg
push
jp
ja
fdivrl
xchg
xchg
xor
jg
sahf
cmpsb
sbb
mov
lods
scas
add
mov
pop
jp
fidivrs
ljmp
push
not
scas
pushf
fs
jb
dec
xor
frstor
xor
or
mov
rclb
cltd
imull
cld
cltd
in
jne
aas
aas
test
ss
cltd
mov
jle
dec
ljmp
cmp
dec
lds
mov
test
mov
jecxz
mov
faddl
push
insl
je
pusha
dec
scas
jns
fimull
jno
xor
std
popf
dec
sub
sub
lahf
jns
mov
sar
fcoml
dec
push
ljmp
pop
daa
fcompl
sarb
ljmp
enter
xchg
shrb
fsubrs
fmuls
sbb
jle
cmp
insl
movsl
adc
decl
test
jo
add
add
ja
decl
jl
icebp
call
and
lcall
in
push
push
inc
adc
icebp
repz
in
stos
fs
push
cld
push
jno
sub
add
xor
hlt
std
arpl
fstps
lds
in
insb
pop
hlt
inc
mov
sahf
cld
mov
movl
fdivs
pop
test
les
not
decl
sub
rclb
xor
repz
rorb
add
fimuls
loop
scas
or
xchg
add
hlt
out
cli
cld
movl
and
es
mov
jno
movsb
call
push
lcall
lods
inc
dec
pusha
pop
and
ds
es
dec
pop
sahf
rcll
js
lds
cmp
pushl
ret
xchg
sub
jge
rcr
roll
mov
ljmp
mov
jbe
jb
not
jp
mov
inc
int
dec
xor
ret
incl
cs
mov
mov
mov
or
or
rcr
mov
cli
das
clc
jb
mov
imul
inc
addr16
pop
in
push
test
lods
ret
jg
icebp
incl
inc
xor
xchg
es
jno
fldl
sahf
call
aad
or
pusha
mov
pop
push
cmpsb
mov
fadds
pop
jge
adc
test
cld
pushl
or
push
pop
out
test
fstps
push
pop
lcall
or
out
out
pop
and
ljmp
mov
cmp
sbb
jecxz
mov
xchg
shll
shl
xchg
sbbb
int
or
jg
cmp
add
out
div
or
hlt
lods
stos
and
clc
call
fimuls
iret
sahf
jo
in
dec
decl
sbb
jl
arpl
addr16
sub
sub
mov
fwait
std
adc
or
jne
cmp
lret
xchg
clc
jmp
jmp
xchg
cmp
bound
incl
mov
sar
mov
bound
inc
sub
inc
cs
xchg
iret
and
and
xchg
shrl
push
mov
je
mov
fdivrl
movsl
xor
sbb
lahf
and
call
pop
dec
pop
aas
fstps
hlt
jg
test
lahf
addb
cmc
mov
lcall
outsb
lods
cli
cmp
cld
inc
mov
jmp
mov
decl
add
daa
imul
inc
test
fbstp
rcll
jae
addr16
push
jo
popa
mov
stos
dec
and
aad
icebp
xlat
cmpsb
test
enter
ljmp
add
repz
std
push
or
dec
or
cmp
repz
jl
out
dec
sti
sub
mov
enter
sub
sub
loopne
or
mov
int3
pop
push
jecxz
mov
sub
cmpsl
xchg
add
pushf
pop
xor
pop
pop
lcall
sbb
fcoms
and
sub
aas
movsb
sbb
into
loope
cmc
or
out
test
add
sbb
jmp
adc
jne
push
jb
push
outsl
cmpsl
xchg
dec
ret
sub
pop
mov
call
cmp
in
es
and
lods
jb
adcl
lock
lds
jle
pop
arpl
lret
push
pop
std
rcrl
inc
lea
pop
cmp
mov
sub
jl
add
jmp
or
ljmp
mov
ds
fistps
jmp
inc
je
mov
hlt
dec
mov
push
mov
dec
std
fisttpl
jmp
rcr
movsl
ss
aam
mov
add
mov
mov
fdiv
xchg
dec
incl
xlat
inc
push
xor
adc
pop
es
push
dec
jl
imul
cltd
mov
mov
incl
loope
stc
out
fistpl
mov
mov
inc
inc
call
mov
testb
push
addr16
outsl
popf
ja
mov
sbb
cmpsl
sti
inc
add
repnz
push
sub
mov
popa
xchg
bound
add
jbe
xor
or
sbb
out
jmp
gs
pusha
cmp
imul
rolb
bound
sahf
or
sub
hlt
xchg
das
add
or
adc
lock
push
adcb
std
pushl
fcompl
pop
sbb
sbb
int3
test
fstpt
nop
mov
mov
les
jns
cmp
dec
sbb
lret
or
inc
jle
adc
fwait
jmp
je
mov
aas
mov
inc
inc
push
icebp
or
ds
cmp
mov
arpl
pushf
insb
cs
add
push
iret
push
or
inc
or
and
aad
cld
insl
ljmp
jmp
or
incl
insb
test
cmp
push
ja
push
add
push
lret
cmp
jg
dec
enter
cmp
push
sub
dec
cmp
xchg
mov
sbb
outsl
xchg
out
repnz
aad
out
mov
pop
mov
incl
rclb
enter
dec
cmc
add
pusha
pusha
xlat
push
imul
xor
in
aaa
mov
or
mov
xchg
cld
call
adc
rclb
xlat
iret
mov
xor
movsl
cmp
or
loope
iret
ds
xchg
je
mov
popa
pop
aad
push
mov
into
mov
dec
xor
jg
ljmp
add
push
jecxz
sub
and
jp
push
xchg
pop
xor
decl
pushf
aad
push
jmp
cmc
jl
mov
mov
loop
popf
clc
and
loop
mov
sbb
xchg
lcall
stc
shrl
sbb
xorl
add
mov
sub
loope
lmsw
push
adc
inc
subl
sahf
add
ljmp
cmpsb
lcall
inc
push
mov
push
jae
or
nop
push
stos
sahf
lcall
xchg
pop
adc
jnp
pop
and
test
leave
mov
in
dec
push
pop
lret
inc
ljmp
sar
xchg
jb
dec
cmp
and
aaa
jbe
in
push
xorl
outsl
ss
mov
pop
sub
rclb
pop
add
sub
in
in
jo
jl
cmp
sbb
jle
cmp
loopne
pop
mov
scas
pop
fwait
sarl
lahf
sbb
xchg
add
jno
xor
rolb
cltd
fcompl
call
and
call
ljmp
inc
xor
jl
add
dec
mov
mov
imul
mov
pushl
mov
push
lods
cli
filds
push
rcll
mov
sub
pop
mov
pusha
cld
cmp
sbb
mov
fnstcw
cmp
loopne
cmp
or
xchg
mov
ficomps
flds
subb
je
lds
sub
lcall
aad
add
and
aad
loopne
mov
jno
or
orl
aad
xlat
jo
fldenv
out
push
mov
lcall
mov
xor
jne
lea
fdivrl
data16
jg
xchg
pusha
and
cmp
ss
rol
arpl
iret
xchg
inc
das
arpl
cmc
mov
sahf
adc
rclb
dec
lret
dec
jg
test
mov
aad
xchg
cmp
ljmp
inc
sbb
mov
sbb
loope
xchg
adc
popa
jl
fists
xchg
outsl
ljmp
cmp
fst
cli
es
fdivl
mov
lret
insl
lcall
aas
xor
mov
out
pop
adc
mov
gs
pusha
inc
sti
dec
mov
jb
sbb
arpl
lcall
mov
or
and
xchg
or
hlt
and
push
loop
call
aaa
add
xchg
cwtl
ljmp
sub
push
add
jp
jbe
in
aam
sbb
mov
decl
adc
jp
cltd
push
clc
xchg
daa
fwait
lret
lcall
mov
xchg
repnz
jmp
ljmp
out
movsl
cmp
adc
xchg
decb
clc
adc
cmp
xorl
dec
cmp
stc
jns
mov
pop
nop
push
mov
rorl
push
push
fs
jp
into
mov
sahf
pop
aas
pop
stc
cmp
out
mov
rol
lock
inc
jmp
sbb
and
stc
sbb
add
ljmp
pusha
imul
popf
bsf
sarb
ljmp
leave
adc
cmpsb
stc
push
cmpl
inc
or
incl
pusha
fidivs
pop
stos
mov
out
xchg
add
dec
adc
mov
or
lahf
cmpb
jns
ret
jo
in
jle
ljmp
aas
aam
fwait
sub
jnp
cmp
mov
lods
testb
sbb
xchg
jp
xor
dec
inc
xor
mov
push
std
fnsave
xchg
imul
inc
out
in
sub
repz
and
jle
scas
sub
mov
notl
cmpsl
test
jecxz
stos
int3
and
stos
inc
jns
mov
loope
mov
fisttps
nop
cmpsl
or
fisubl
ret
ret
sbb
in
fstp
sti
movsb
inc
fwait
ds
or
std
add
call
push
and
iret
xchg
out
mov
div
imul
push
and
pop
push
jmp
dec
shrb
mov
dec
inc
imul
lcall
push
cmpsl
into
repz
fiaddl
xchg
cmpsl
sub
or
mov
dec
idiv
push
jbe
sub
mov
jne
aas
stos
or
loop
call
sbb
js
jle
xchg
mov
lcall
dec
aaa
ljmp
mov
icebp
pop
imul
sub
clc
mov
idiv
xchg
imul
imul
test
jne
fisttpll
xlat
mov
outsl
adc
dec
pushl
notl
enter
hlt
push
movsb
sbb
push
arpl
clc
pushl
cld
cmp
ja
lahf
mov
sub
and
pop
pop
in
mov
aad
jmp
enter
dec
js
lahf
shll
dec
and
call
mov
mov
cltd
ja
notl
xchg
cmpsb
fiadds
leave
fldcw
aas
outsb
jg
daa
sub
inc
imul
stos
jl
dec
repz
es
push
push
fnstsw
arpl
in
dec
or
lcall
mov
ss
or
push
add
iret
push
lods
fists
test
cmp
movsb
mov
and
ljmp
scas
xchg
int
das
ja
jg
ljmp
inc
push
push
dec
outsl
push
les
dec
flds
xchg
cs
neg
icebp
incl
push
mov
jg
inc
dec
mov
out
dec
adc
cmp
es
insb
jb
jns
cmp
jge
vpcmpgtb
and
out
xor
mov
lcall
dec
lahf
or
mov
ljmp
lods
adc
dec
dec
and
add
pushl
mov
stos
mov
or
push
xchg
dec
scas
call
je
test
lods
inc
or
in
push
adc
pop
ds
push
push
sarb
cld
filds
in
sahf
lcall
ljmp
mov
mov
loope
push
xchg
and
add
fcmovnb
aaa
arpl
mov
jmp
jae
in
add
scas
je
and
in
addr16
ss
out
mov
out
cli
lcall
movsl
jg
out
mov
outsl
ret
mov
or
sub
fmul
xor
jg
lods
cs
hlt
sub
mov
sub
loop
push
pushf
lods
ja
arpl
jae
daa
pushl
jno
ljmp
xchg
dec
test
les
add
loop
decl
enter
jg
loopne
mov
push
les
inc
cmc
mov
adc
orb
addb
fwait
push
gs
pop
iret
lcall
push
into
adc
daa
iret
pop
adc
out
cli
adc
and
cmpsl
cmc
clc
mov
xlat
testl
inc
pushw
jg
dec
decl
outsb
ss
mov
test
movl
jmp
cmpl
add
jo
push
clc
push
movsl
mov
or
xor
xor
inc
stc
out
push
cmpl
lods
aas
sub
pushf
pop
or
clc
std
test
clc
pushl
rcrl
add
lcall
xor
adc
decl
push
into
neg
xor
jns
sahf
mov
repnz
sahf
jmp
ja
call
sbb
sbb
mov
je
push
push
xlat
ds
decl
ret
inc
and
xchg
push
dec
xor
fsubrl
push
mov
test
xor
ljmp
arpl
push
pop
xlat
shrb
jg
and
insb
xchg
dec
loopne
sbb
pushl
cmpsl
sarl
lods
cmpsl
xlat
sub
mov
lea
mov
cltd
cmp
decb
jg
aas
mov
ret
les
sbb
rol
shlb
xchg
pop
lret
das
in
nop
and
incl
push
pusha
pop
addr16
fidivrs
js
insl
mov
enter
les
loope
push
dec
dec
incl
in
lret
xor
ret
ljmp
sbb
add
lahf
push
push
mov
outsb
lds
pop
in
pop
pop
popf
pop
pop
shl
fistps
decl
popa
fisttps
cmp
adc
cmpsb
fs
add
out
sti
dec
xchg
push
neg
mov
ljmp
dec
bound
inc
cmp
xchg
jmp
addps
mov
subl
mov
rolb
sbb
decl
sub
mov
pop
js
jl
imul
or
outsl
pushf
pop
outsl
test
int3
inc
test
idivb
lcall
xor
pop
fcmovnbe
rcrl
adc
push
std
movl
adc
push
hlt
decl
xor
scas
shrl
stc
inc
mov
and
mov
ds
rorb
lds
pop
xchg
mov
jae
pop
mov
and
repz
pop
andl
cmp
cmp
imul
inc
arpl
mov
pop
add
divb
lahf
cli
fsubrl
cld
cmpl
cmp
test
shld
pop
inc
dec
loop
lock
push
sar
cli
xor
jp
jmp
inc
je
daa
or
data16
mov
lret
movsb
fisttps
mov
and
add
pushl
mov
ret
popf
adc
popf
loope
hlt
xchg
and
int3
ds
repnz
mov
call
mov
or
test
xor
loop
jmp
fistpl
stos
jp
jle
incl
push
lret
decl
inc
loopne
xor
dec
add
sbb
xchg
push
cli
xchg
xor
push
std
imul
dec
sbb
mov
sub
cmpsb
lret
lods
je
jb
ljmp
jns
pcmpeqw
loop
imul
push
arpl
test
sbb
push
xlat
stos
decl
cmp
xchg
jmp
inc
int
addr16
sbb
add
mov
cmp
imul
test
iret
jne
jae
dec
push
inc
xor
mov
mov
ret
fcomip
or
div
jnp
mov
incl
dec
loopne
pop
mov
rol
sbb
push
jle
mov
bound
decl
or
or
mov
xchg
xor
aam
or
pop
or
add
sti
call
cld
xchg
adcb
stos
insl
push
int3
sbb
cwtl
loop
mov
dec
sti
push
iret
cmp
jg
jg
lods
push
repnz
ret
mov
xor
pushf
xor
mov
repnz
pushl
xor
or
sbb
fistpl
mov
adc
cmpsb
add
jae
jg
push
std
neg
push
push
lcall
pop
cmpsb
lock
incl
out
das
inc
mov
pop
out
jbe
dec
pop
iret
les
jl
push
inc
ds
inc
mov
cs
inc
add
movsl
mov
mov
xlat
fisubs
stos
aam
js
jnp
pushf
incl
sub
mov
outsl
in
clc
pop
int3
cmp
add
andl
xlat
mov
jmp
test
loope
stos
dec
fcoml
push
iret
cmpsb
xor
mov
push
test
arpl
fcomip
outsl
jle
out
bswap
pop
fidivs
ja
inc
mov
jmp
pop
pop
dec
mov
add
imul
mov
ss
inc
pop
pop
or
movsl
loopne
scas
clc
pushl
fwait
dec
adc
ror
cmp
cmp
clc
shlb
cmpsb
lea
pushl
gs
std
in
cmp
enter
jge
nop
jmp
nop
sub
add
scas
dec
or
sbbl
mull
out
jae
mov
mov
lcall
test
jns
idivl
in
add
or
call
dec
fisubrl
jp
sbb
rcr
mov
mov
sbb
mov
sub
incl
push
lcall
or
inc
mov
adc
in
je
sahf
out
add
and
and
cmp
adc
sub
test
mov
clc
pop
xchg
int3
decl
pop
lods
cld
scas
out
sub
add
xor
popa
int
sub
mov
out
std
mov
xor
jecxz
hlt
fnstenv
pop
jg
data16
andb
mov
lcall
jl
pop
mov
mov
pop
sahf
pop
or
repz
repnz
call
mov
out
xchg
stos
mov
neg
pop
sbb
add
xchg
test
adc
dec
ljmp
aam
out
rcr
jge
cmp
mov
popa
mov
fisubl
lock
fsubr
sbb
mov
scas
clc
incl
jne
in
sub
fmull
aaa
sub
lcall
sbb
daa
and
mov
rol
fimuls
dec
jno
inc
icebp
add
ljmp
dec
cmp
xor
jle
xor
cmp
rcrb
adc
jnp
clc
pop
popf
mov
add
idivb
aas
nop
out
cmpb
addr16
adc
xchg
sbb
fwait
or
mov
xchg
xchg
lea
inc
enter
test
js
mov
sbb
loope
mov
jmp
sbb
inc
imul
pop
stos
gs
pop
fmull
jmp
xlat
pop
divl
pushl
mov
js
add
fldenv
out
call
xchg
fwait
inc
scas
cmp
and
or
fs
mov
pusha
imul
push
or
pop
jbe
push
addr16
mov
jge
push
pushf
testl
jge
pop
and
xlat
push
lock
push
ja
dec
mov
push
push
pop
arpl
sbb
cmpsb
xchg
mov
mov
lods
jg
enter
mov
ss
scas
xor
repnz
call
bound
lds
mov
cltd
insl
add
jns
orps
mov
incl
sbb
out
clc
stc
push
andl
jne
fs
shrb
ja
xchg
sahf
xchg
call
cmp
aas
cli
flds
int3
and
in
xchg
clc
xor
lcall
cmpsb
cmc
jmp
lea
loope
data16
ret
mov
mov
pop
enter
dec
sub
mov
add
xlat
mov
cli
stc
cmpps
or
pushl
inc
out
lahf
iret
lret
fisubrl
inc
jno
adc
movsl
inc
mov
test
jmp
jb
leave
mov
sbb
dec
repnz
add
mov
out
xchg
xchg
lods
ss
mov
dec
add
fists
fwait
dec
mov
loope
incb
mov
and
mov
sbb
negb
out
sub
out
insl
or
jl
add
test
xchg
and
sbb
add
xor
sbb
inc
out
inc
fsubr
cli
inc
sub
adc
xor
mov
decl
push
xchg
cmp
add
pop
out
add
sub
into
cltd
int
addr16
adc
add
call
jmp
add
stos
push
sub
rcl
sarb
outsl
sahf
call
or
mov
adc
adc
xchg
cmp
pop
mov
mov
mov
call
xchg
rorl
gs
and
cmp
sbb
cmp
push
inc
inc
lds
push
cld
push
pop
mov
adc
pushf
dec
jg
rcll
jle
push
loop,pt
jmp
push
xchg
dec
in
dec
push
lahf
lock
and
or
adc
je
cmpsl
fidivrl
pop
js
lahf
decl
ret
xor
cmc
int3
xor
and
mov
les
add
adc
or
das
sub
popf
push
int
mov
adc
sbb
or
jecxz
in
hlt
jno
mov
jb
outsb
das
and
out
cmpsb
icebp
incl
cmpl
imul
mov
mov
insb
mov
jge
imul
and
rcrl
mov
fisttpl
or
fsub
dec
iret
mov
in
push
xchg
lods
cmp
add
inc
xchg
outsl
sub
enter
push
fs
decl
dec
mov
xor
nop
cs
xchg
icebp
xchg
push
out
sbb
cmp
inc
stos
xchg
dec
or
jl
fwait
dec
lahf
push
rcrb
push
aad
mov
inc
mov
xchg
pusha
loop
insb
lret
xor
loop
cltd
jb
aaa
cld
decl
fidivrs
clc
push
jne
jb
mov
xchg
mov
cmc
pop
lret
mov
pop
data16
test
jae
mov
sbbl
fwait
inc
pop
clc
incl
sub
mov
jo
mov
pop
xchg
pop
cli
bound
rcr
and
clc
and
out
add
mov
aam
add
loope
or
xor
jg
jmp
divb
pop
and
sbb
stos
xchg
adc
adc
stos
cmpsl
daa
std
xchg
daa
sahf
inc
xchg
pushl
sbb
ljmp
sbb
pop
je
loope
or
jmp
or
or
dec
call
adc
int3
jne
jle
jo
pop
je
jl
xchg
inc
mov
pop
inc
mov
push
movsb
add
mov
jecxz
inc
aad
decl
xchg
int3
arpl
call
xor
das
sbb
inc
stos
xor
cmpb
xor
outsl
xor
jns
xorb
call
xchg
mov
aam
pop
lret
push
leave
jmp
outsl
sbb
addr16
pop
dec
out
mov
fcomip
jmp
xchg
icebp
lock
shll
pusha
ret
jb
in
aas
lcall
jle
sbb
push
xchg
xor
jbe
enter
sti
push
imul
pushl
loopne
call
mov
inc
mov
sbb
cs
add
ds
mov
ud1
out
hlt
xor
icebp
mov
inc
jecxz
nop
repnz
xchg
mov
sarb
xorl
lret
jno
out
push
and
rcll
xchg
shr
dec
pop
lock
lcall
ret
insl
dec
mov
sub
mov
popa
in
ret
fists
lcall
fnsave
rolb
mov
jbe
rcr
or
int
into
jae
lcall
mov
repnz
repnz
sub
push
call
xchg
xor
lods
xchg
pop
es
mov
icebp
mov
leave
push
mov
sub
add
sbb
sbb
fdivrl
popa
lret
xor
jmp
call
in
je
out
mov
rcrb
sub
cmc
lcall
inc
cmp
clc
or
sar
mov
imul
pop
in
cmp
loop
fs
cmp
shlb
adc
popf
or
push
push
decl
dec
clts
cmp
jne
pop
data16
movsl
into
ljmp
movsl
call
call
xchg
sub
insl
fisttpll
sub
inc
add
pop
out
mov
xchg
stos
push
or
pushl
mov
xor
mov
pop
outsb
bound
sbb
mov
lret
lcall
fdiv
sbb
xchg
in
sbbb
aad
mov
dec
xchg
sub
xlat
mov
incl
cmp
inc
ret
int3
fistl
add
aaa
add
push
lret
lods
lds
mov
nop
movsb
pop
sub
sbb
call
add
mov
adc
push
data16
into
fadds
int
fldenv
mov
mov
outsl
jg
sbb
shrl
pop
inc
aaa
ljmp
inc
jne
mov
dec
movsl
sub
dec
mov
out
scas
sahf
es
mov
call
sub
push
loopne
mov
fdivrl
pop
or
incl
int
cs
dec
out
cmp
hlt
sbb
dec
inc
mov
jg
add
decl
push
sbb
jecxz
in
bound
jmp
popf
scas
sbb
push
addr16
fs
loop
imul
imul
loope
mov
pop
jnp
push
ficomps
inc
push
test
inc
xchg
dec
ljmp
sbb
or
push
and
jno
js
mov
arpl
jne
jge
addr16
decl
sbb
pop
mov
sub
push
cli
pushl
cmp
int
mov
pop
mov
inc
into
fimuls
jmp
imul
add
imull
xor
jmp
push
movsb
cmpsl
lret
mov
cmp
cmpsb
int
sub
jnp
jbe
mov
push
repz
and
push
iret
scas
cmp
and
jp
rorb
aaa
dec
or
arpl
fistpl
inc
movl
mov
cs
sub
lock
xchg
or
dec
xor
mov
shl
in
es
lea
jecxz
or
into
imul
cmp
test
xchg
call
or
in
sub
enter
std
lret
pop
stos
mov
lret
ficompl
jae
push
jae
push
clc
mov
jmp
push
loope
out
outsb
jno
adc
stos
add
push
cmpsb
mov
jmp
pop
sti
decl
movsl
movsl
pop
xchg
mov
inc
sahf
pop
mov
add
cmp
jg
mov
xchg
jnp
test
rcrl
mov
mov
loopne
sub
pop
test
dec
fs
inc
pop
xorb
push
sar
in
test
push
clc
jecxz
fsubr
pmullw
pop
call
test
out
lods
scas
inc
cmp
add
pop
aad
cmp
mov
pop
repz
mov
jecxz
adc
leave
pushf
mov
jbe
mov
dec
sub
sbb
mov
gs
call
call
sub
stos
into
iret
neg
pop
sbb
or
clc
dec
mov
fucom
dec
scas
clc
das
xor
sub
cltd
sbb
mov
cmc
xor
incl
sbb
daa
mov
sub
into
push
sbb
jmp
jns
popf
and
test
inc
or
aam
jge
lahf
ljmp
inc
lret
js
loop
jne
cli
mov
ljmp
out
add
test
lret
pushl
inc
mov
push
dec
in
xchg
js
lahf
pop
jne
pop
icebp
xchg
cwtl
aad
pop
adc
rolb
mov
jne
loop
add
movsb
add
jno
in
repz
jmp
ficoms
mov
test
pop
xchg
arpl
addr16
shr
mov
jno
ljmp
push
data16
cmpl
cs
jmp
sbb
xchg
mov
sub
cmpsl
mov
insl
add
mov
push
cmp
lcall
pop
cmp
mov
lret
push
in
pop
repz
lret
test
dec
test
mov
call
push
cmp
std
pop
adc
mov
fwait
and
stos
stos
test
jo
push
cmp
jne
and
inc
jg
inc
loope
fldcw
arpl
out
adc
cltd
push
sbb
add
lcall
mov
mov
cmp
jecxz
data16
int
or
shr
ljmp
pop
mov
pop
mov
jae
dec
test
and
mov
mov
cld
mov
idivb
pop
xchg
je
mov
mov
cmp
mov
sub
cmp
es
sub
fwait
xor
dec
and
lret
pop
into
daa
sub
sbb
xor
incl
cld
loopne
lcall
dec
pop
sub
and
adc
mov
jmp
imul
das
pop
sub
push
and
jp
loopne
scas
jle
call
xor
repz
mov
pop
sbb
jg
mov
cltd
call
shr
inc
sub
aad
pop
popl
jle
movsl
bnd
add
push
fucom
dec
pop
cmc
ljmp
mov
mov
lahf
aad
js
fisubl
pop
int
push
pushf
mov
outsb
mov
pop
or
sub
cmp
or
inc
ljmp
jmp
pop
test
je
mov
leave
dec
rorl
out
sbb
jg
pop
add
cld
or
xchg
hlt
dec
scas
std
dec
int3
xchg
xchg
rorb
das
xchg
inc
cmpsb
je
sbb
lret
ljmp
jae
lcall
insb
stos
in
sub
push
mov
test
cltd
jge
fldenv
lcall
pop
xor
into
cltd
decb
mov
out
loopne
mov
push
add
jb
jmp
jne
xor
push
mov
enter
ret
hlt
ljmp
dec
fildll
mov
mov
iret
stc
enter
cwtl
cmpsb
or
jmp
push
rorb
mov
dec
inc
push
xchg
adc
icebp
stc
rcll
rcll
call
pop
xor
push
cmpsb
pop
inc
in
xchg
lods
orl
scas
add
jg,pn
std
incl
pushf
addr16
ljmp
xor
mov
inc
xchg
jne
pushf
lods
cmc
enter
cld
sbb
mov
sub
xlat
mov
mov
ljmp
sub
incl
cli
mov
jecxz
sub
fildll
fucom
jg
inc
or
pop
shrl
sbb
pop
sbb
lcall
jo
add
xor
push
pop
rolb
leave
jge
xchg
cli
pushl
arpl
outsl
xlat
add
ret
cmp
mov
mov
jmp
dec
sti
mov
test
jbe
sub
and
call
ss
outsb
cmc
pop
fiadds
dec
jmp
cld
add
jne
dec
inc
and
lcall
pop
dec
jns
push
arpl
adc
dec
cmp
mov
jge
pop
sub
cmp
aas
xchg
clc
scas
repnz
lcall
fidivrl
dec
dec
loopne
iret
push
cwtl
jnp
adc
xchg
or
in
inc
dec
push
sti
push
fstps
incl
insb
inc
repz
fiaddl
inc
mov
xchg
jg
mov
sub
cltd
ret
into
mov
inc
std
inc
cmp
pop
cmp
cmp
pop
jp
std
outsl
cli
call
or
bound
aad
scas
and
sbb
adc
sub
cwtl
call
jle
mov
and
push
xor
bswap
shlb
add
and
dec
loopne
ret
loope
mov
and
add
push
add
xor
adc
jo
sbb
jg
cs
out
xchg
push
pop
pop
fimull
loope
dec
xor
loopne
jg
pop
std
testb
xchg
fcompl
xchg
mov
fs
ja
xchg
add
fcomip
jp
pop
mov
add
test
jae
shll
mov
xor
imul
stos
incb
mov
jmp
js
sub
cmp
aam
lret
dec
data16
fldt
jl
or
push
hlt
leave
mov
imul
jne
in
jnp
insb
pop
sub
pushl
insl
or
cmp
inc
scas
sahf
outsb
sub
cmp
mov
ljmp
xchg
hlt
jecxz
jle
add
addr16
nop
jp
inc
stos
pop
fcompl
movsb
ljmp
jg
leave
fs
ja
negb
inc
or
out
cli
jbe
cs
sub
cltd
mov
imul
mov
or
fisttps
out
fisttps
cmp
in
shll
jns
cmp
xchg
inc
mov
xchg
cmp
pop
adc
scas
insl
movsb
aas
adc
stc
mov
push
shrb
cmp
add
xor
mov
pop
shrl
sub
pop
icebp
shr
stos
and
push
or
add
into
call
mull
out
sub
and
imul
xchg
adc
push
call
and
enter
jl
xchg
dec
mov
push
sbb
add
sbb
inc
insb
fdivrs
popa
mov
add
faddp
into
shrl
aad
mov
insb
sbb
jb
shll
popf
jo
jge
jns
mov
jl
insb
cmpsb
fwait
mov
clc
in
mov
pushf
mov
ljmp
xchg
in
mov
or
out
lock
fisubrl
incl
mov
icebp
pop
lahf
push
add
pop
pop
out
sti
dec
incl
cmp
push
mov
adc
out
push
sbb
inc
les
cmp
push
jmp
ret
cmp
daa
dec
pop
sti
out
add
sbb
jno
sbb
cmp
test
repnz
aad
in
and
mov
and
xchg
repnz
mov
mov
pushl
inc
jo
jle
mov
gs
scas
mov
fstpl
jne
pop
cmp
mov
inc
cmc
push
add
int3
xlat
xor
daa
fsubl
pop
cli
ljmp
mov
sbb
jmp
and
leave
popa
push
fdivrp
jbe
out
inc
pushl
add
into
pop
hlt
jnp
nop
std
jo
mov
aad
daa
test
mov
pusha
je
lret
inc
test
mov
test
xchg
jbe
sub
iret
pushl
pcmpgtd
mov
fwait
in
mov
out
dec
imul
lds
pop
push
push
out
cmp
mov
push
xchg
loope
jno
clc
data16
mov
mov
pop
in
aaa
pop
and
push
xor
ficomps
roll
sbb
ss
adc
ljmp
out
outsl
outsl
jmp
mov
push
lods
cli
jge
in
loope
cli
mul
and
push
jne
pop
lcall
jb
test
out
mov
cld
adc
aas
sub
adc
cmp
sbb
xorb
mov
out
clc
jmp
loopne
or
rolb
or
jb
push
pop
ss
stos
call
iret
fsubrl
lods
xchg
sbb
push
inc
scas
mov
gs
push
mov
ljmp
insl
cmpsb
in
dec
sbb
inc
jle
ljmp
xor
xlat
xchg
inc
in
push
adc
push
insb
mov
fwait
cmp
fcmovne
rcl
dec
loope
mov
pop
loopne
lret
pop
xor
aam
push
addr16
pop
addr16
call
cltd
ss
and
push
push
jne
gs
sbb
pop
cmp
xor
cmp
and
hlt
sti
mov
ss
pop
cmp
dec
mov
js
subb
pop
dec
inc
ss
jg
add
push
pusha
dec
jno
jns
xchg
jno
add
and
mov
mov
and
xchg
sub
out
inc
push
lods
dec
xchg
shlb
push
sbb
add
setbe
decl
in
sti
xor
jl
pop
arpl
sbb
dec
or
push
jg
jmp
loop
divl
je
mov
dec
shlb
sti
xchg
xchg
enter
cmpsl
dec
fsubs
stc
jmp
cmpsb
cmp
sti
mov
loop
not
in
rorb
cmp
scas
out
inc
mov
decl
int3
mulb
sub
mov
xchg
xor
pusha
jae
cwtl
aam
jmp
enter
andb
cmp
repnz
icebp
pusha
movsl
test
out
lcall
mov
push
adc
inc
adc
out
inc
clc
jns
int3
or
outsl
cli
jmp
pusha
js
push
inc
mov
cmp
insl
das
sarb
adc
lcall
jno
inc
ja
mov
pop
sub
fistpll
pop
stc
das
adc
mov
inc
dec
cmp
cmp
das
fimuls
clc
aad
js
in
stos
jb
mov
outsl
nop
sbb
outsb
aaa
ljmp
outsb
mov
mov
adc
jne
cwtl
call
incl
in
ret
pop
dec
xchg
mov
idivl
sar
call
fildl
pop
dec
arpl
out
pop
pop
dec
repnz
mov
iret
cmp
adc
popf
enter
inc
jno
pop
scas
or
je
test
aam
fimuls
cli
add
decl
pushf
mov
xchg
push
push
sbb
cwtl
mov
out
call
xor
and
cmpsb
push
xlat
fistl
or
fistpl
ljmp
mov
ret
dec
and
mov
stc
sbb
adc
rclb
jno
mov
filds
ficoml
rclb
xor
test
mov
cmpsb
jle,pt
mov
pop
insb
das
jge
sub
xor
xchg
sub
mov
push
call
cmpsl
mov
cmc
sub
inc
pusha
mov
pop
jmp
setns
filds
out
xor
add
sub
fdivrl
cmp
incl
test
xchg
adcb
pop
shll
rol
push
pop
and
lret
mov
incl
dec
fwait
inc
sbb
mov
cmp
call
push
mov
cmc
jmp
inc
dec
mov
fwait
xor
incl
inc
in
stc
pop
std
dec
sbb
or
xchg
js
lret
in
into
lea
push
push
add
aad
pushf
or
out
leave
ret
ja
aaa
xchg
loope
dec
into
ljmp
aaa
add
pop
ficomps
jp
inc
dec
push
xlat
repz
dec
sbb
mov
jge
decl
test
das
and
pop
lock
adc
cli
fildll
jmp
mov
lret
enter
cwtl
cvtdq2ps
dec
push
xor
push
fcomip
push
loop
hlt
ja
push
bound
cmc
mov
lea
test
fcmovne
sahf
mov
jecxz
data16
test
ljmp
xchg
call
in
cwtl
xlat
sarl
or
iret
mov
adc
jmp
jle
repnz
push
lods
xchg
mov
leave
sbb
pop
dec
jg
dec
add
pop
pop
loopne
mov
in
outsb
sbb
inc
cmpl
jae
pop
outsl
aaa
add
adc
movsl
cmpsl
dec
std
mov
lcall
lret
push
movsl
push
mov
push
sub
lods
mov
cmp
xchg
lcall
mov
fadds
mov
jecxz
xchg
or
loop
cmp
cmp
ljmp
in
je
lods
mov
add
repz
test
and
scas
add
sbb
fnsave
pop
insb
xchg
sbb
jmp
ljmp
sbb
enter
pop
lret
push
and
cltd
xchg
decl
mov
push
dec
mov
and
xchg
ljmp
cmp
call
test
mov
or
aam
popf
jp
add
push
clc
fistl
add
sbb
sti
inc
and
jg
adc
pushl
mov
out
mov
in
pmulhuw
into
fwait
shrb
in
sub
call
dec
jbe
rcrl
in
clc
mov
loop
popf
mov
xor
int3
scas
push
dec
jae
push
jmp
repnz
adc
lds
jmp
testb
rcl
std
jl
fsubrl
cmp
repnz
inc
call
clc
ror
hlt
xchg
pop
test
popa
mov
mov
pop
lea
out
pushl
pop
sub
rcrl
lds
data16
enter
mov
adc
ljmp
call
mov
popa
adc
or
jbe
shlb
cltd
inc
and
dec
clc
fmuls
je
cmc
incl
mov
push
pop
jne
std
pop
cld
add
xor
js
popf
cmp
lcall
loope
in
push
das
or
sbb
pop
addr16
sbb
scas
pop
popf
sbb
pushf
icebp
mov
fcomip
sub
pusha
push
les
stos
int
rol
ret
jg
ljmp
pop
push
jmp
sbb
jp
mov
lahf
push
ljmp
push
fs
inc
sbb
jp
add
je
dec
push
sub
mov
in
or
push
repz
adc
lcall
mov
popa
hlt
leave
call
jl
enter
cld
xchg
jo
daa
sbb
cmp
incl
jbe
mov
out
sub
clc
xlat
push
mov
push
test
gs
fiaddl
stos
in
xchg
dec
inc
movsl
sbb
out
cwtl
and
adc
imul
fistpll
sti
les
or
fildl
dec
and
out
fdivrp
pop
cmp
push
jo
sbb
icebp
call
pop
fxch
decl
jmp
and
sub
xchg
stc
les
dec
imul
cli
jmp
std
dec
jno
push
pop
jl
cmpsl
out
movsb
mov
rorl
dec
in
jb
fldcw
lcall
mov
jbe
psubsb
xchg
inc
or
mov
or
jecxz
test
std
pushl
lock
imul
fisttpll
inc
adc
xchg
in
inc
ja
mov
iret
jp
icebp
xchg
sti
or
pop
addr16
in
loope
lds
popa
lcall
add
lcall
add
xor
out
add
aaa
pop
dec
cld
lcall
or
ret
aad
pop
xchg
cmp
outsb
mov
xor
loop
mov
daa
push
add
call
jo
flds
test
lahf
jg
fnstsw
inc
push
das
popa
add
add
lock
xor
jmp
gs
inc
and
mov
gs
call
inc
cmp
pop
xor
sbb
popa
jg
mov
or
xchg
adc
xlat
pop
mulb
push
jmp
rcrb
mov
cmp
mov
push
decl
jg
cli
jmp
imul
mov
movsb
cmp
test
and
mov
pop
loopne
adc
and
enter
pop
icebp
lcall
lcall
cmpsl
pop
mov
insl
sub
xchg
outsl
xchg
push
std
ljmp
pop
scas
rclb
test
int3
popf
int
jecxz
mov
lcall
and
addb
pop
imul
aaa
mov
lcall
jmp
add
add
push
add
xor
adc
mov
xor
mov
hlt
jmp
div
fadds
jecxz
movsl
xor
xlat
sub
xchg
out
sub
das
clc
negb
push
pop
shr
push
xchg
push
je
add
sub
dec
sub
aam
leave
push
pop
mov
fs
add
ja
mov
fsubs
inc
decl
push
mov
cmp
int
mov
xchg
fmul
and
decl
loopne
cmp
shl
mov
lcall
dec
aas
inc
ret
push
in
outsl
lcall
sbb
dec
popf
dec
mov
xor
lcall
jge
mov
mov
lods
rorl
and
xchg
into
nop
push
stos
or
jge
mov
jg
jmp
mov
xchg
inc
out
jno
arpl
pop
notl
roll
lcall
mov
stos
jnp
xor
out
pop
orl
cmp
inc
daa
shrl
pop
push
iret
inc
sbb
lahf
rolb
sbb
mov
cmp
xchg
addl
jmp
mov
fcmove
adcb
adc
cmp
mov
and
jmp
cmpsl
dec
pushf
cmc
dec
lret
lret
in
push
loope
aaa
mov
insb
pop
or
ficompl
push
decl
int3
jbe
fisttpl
dec
pusha
pusha
push
ljmp
push
xorl
aas
ss
pushf
sub
pop
out
push
jp
insb
inc
pop
adc
ljmp
mov
jo
mov
xor
outsb
adc
mov
notb
hlt
mov
clc
ljmp
movsb
xor
dec
inc
cmp
sub
sbb
lock
cmp
adc
aaa
dec
test
jno
outsb
push
cs
xlat
int
mov
fcomip
add
jae
insb
jmp
push
dec
roll
mov
or
arpl
cmp
pop
sub
mov
pop
shlb
out
lcall
jp
scas
mov
cmp
pop
aad
or
in
xor
lea
sub
jb
push
sbb
lcall
loopne
cmp
sahf
mov
jmp
pop
dec
icebp
cmc
pop
dec
test
ja
xchg
sarl
fists
dec
mov
js
shlb
std
int
adc
fwait
mov
sub
lcall
mov
stc
fstpt
enter
inc
cs
test
xor
in
push
mov
std
fdivrs
xchg
mov
xor
sbb
mov
or
and
lds
in
push
call
push
iret
cmp
mov
icebp
pop
mov
loopne
js
cmp
sti
jmp
repnz
sbb
mov
jge
repnz
test
jg
fwait
jg
mov
xchg
fdivrs
sbb
lods
mov
mov
lret
jne
rcrl
adc
xlat
clc
loope
sbb
or
dec
inc
add
jmp
jecxz
sbb
xchg
jg
icebp
push
aaa
aaa
mov
add
aad
dec
cs
es
pop
pop
xchg
test
cmp
jnp
sub
out
clc
pop
add
xchg
push
sub
out
push
mov
push
jne
decl
ret
repnz
mov
push
fisttps
scas
shlb
iret
insl
cs
sbb
nop
pop
mov
mov
mov
test
incl
ja
fstl
call
jl
imul
mov
out
pop
push
dec
adc
pop
lock
out
popa
lds
movsb
daa
jecxz
push
mov
push
sub
xor
add
jmp
mov
in
lea
ret
xchg
mov
call
pop
mov
xchg
cmp
mov
insb
lss
dec
add
xchg
dec
jle
dec
pop
xor
loop
rcr
pop
es
dec
imul
sahf
mov
fildll
and
outsb
add
add
test
push
lahf
adc
pusha
fisubrs
push
xchg
fcoms
push
xor
incl
popa
dec
fildll
bound
int3
lcall
inc
inc
jno
popa
add
iret
pop
bound
incl
in
cmp
mov
xchg
aad
or
test
hlt
jle
addr16
mov
jg
pushf
xor
into
cld
add
pop
jp
pop
jb
out
push
mov
cltd
add
scas
mov
jg
push
lock
data16
jo
pop
adc
sub
ret
stos
arpl
test
out
xlat
pop
lret
push
dec
mov
outsb
sub
sub
sahf
decl
fdiv
fldcw
sub
fcmovu
adc
insb
cs
lds
push
pop
cmp
inc
jno
mov
popa
push
clc
push
aad
xchg
stos
fldenv
icebp
mov
push
jle
push
outsl
out
lea
ficoml
test
loopne
cld
fildll
je
pushf
or
dec
enter
rep
xchg
jmp
ret
xor
xor
sbb
pushl
fninit
xchg
imul
inc
or
int3
pop
mov
sbb
cs
jmp
mov
fidivrl
sub
mov
rolb
in
lahf
lock
jecxz
xchg
inc
call
call
mov
push
imul
je
push
jle
jl
shrb
imul
decl
push
loopne
into
push
pusha
jle
mov
xor
aaa
push
aad
lods
jno
out
out
adc
pop
int3
ret
cmp
popf
loop
push
lods
push
jecxz
shlb
enter
mov
iret
push
lcall
mov
fwait
stc
inc
cmp
sub
fisttpl
jno
sbb
es
pop
mov
pop
test
aaa
das
imul
repnz
dec
leave
je
push
decl
inc
xchg
pop
push
push
dec
or
lods
fistpl
hlt
nop
pop
sahf
into
xor
dec
and
pushl
subl
nop
loopne
fiadds
addl
sub
incl
push
jae
iret
jg
inc
jns
jmp
comiss
jb
test
call
call
imul
std
repnz
scas
xor
addr16
test
jle
mov
incl
adc
int
cli
out
cmpsl
mov
adc
mov
xor
xchg
fs
movsb
hlt
icebp
jmp
mov
cltd
mov
mov
lock
cwtl
rorl
xchg
cmp
mov
cli
or
fsubrs
sbb
xchg
scas
es
cltd
adc
sub
cmpl
rolb
jge
stos
push
stos
xchg
cmp
popf
stc
sub
mov
xchg
xlat
js
or
mov
ljmp
in
cltd
push
sub
pop
mov
ljmp
int
dec
shrb
and
push
cld
divl
push
mov
fsubrl
sub
scas
xor
lcall
fnstenv
pop
jmp
mov
jno
mov
mov
out
jae
stc
dec
push
shll
sub
mov
jo
mov
jnp
movsl
pop
jmp
sub
test
dec
out
add
push
andb
sbb
incl
cmp
shrl
popf
lea
popa
js
adc
mov
test
shl
ds
ss
in
fisttpl
fidivrl
subb
cld
cwtl
xchg
add
int
xor
movsb
ja
dec
ret
mov
cs
adc
mov
or
ljmp
push
jbe
add
add
sub
pop
pop
jl
addr16
mov
ja
notb
add
inc
in
push
movsb
xchg
lret
cli
jecxz
sub
arpl
xchg
xor
lcall
stc
loopne
movsl
aad
and
stos
inc
adc
mov
dec
mov
pop
xchg
jle
test
pushf
into
mov
incl
and
xchg
jns
shl
lds
and
pop
mov
out
jbe
cld
adc
ljmp
push
inc
fdivs
jns
or
xor
mov
rolb
mov
movsl
jmp
mov
jno
sub
mov
jle
dec
out
xor
jns
xchg
cmp
push
sti
loopne
jg
push
mov
pop
stos
mov
stc
sbb
mov
nop
loop
mov
jmp
nop
xchg
add
or
out
cwtl
and
adc
push
pop
jg
or
cmp
mov
repz
std
jecxz
jns
lcall
push
popf
mov
push
fistpll
cs
movhps
jg
nop
ljmp
rolb
adc
jecxz
and
scas
ret
pop
shl
add
xor
push
xchg
push
sar
out
jnp
push
adc
ds
cmp
jmp
inc
pop
rcrl
xor
lcall
inc
mov
outsl
dec
inc
rcl
mov
xlat
bound
fidivl
xchg
aaa
ret
dec
sti
shl
rcr
cltd
pop
jae
out
dec
jo
call
mov
ret
in
mov
inc
outsb
les
mov
pop
hlt
pop
push
fistpll
inc
add
icebp
aas
adc
in
add
hlt
adc
call
loopne
sbb
push
icebp
mov
mov
repnz
add
fcomps
jl
inc
loope
ret
xchg
rcr
and
or
pop
push
pop
decl
lock
dec
popf
add
inc
pop
punpckhwd
add
pop
or
jg
lds
cwtl
adc
lahf
mov
fsubrs
lods
push
pop
add
push
pop
sahf
daa
lret
decb
xor
and
mov
ljmp
cmp
jae
push
pop
sbb
out
jmp
sub
sbb
filds
ret
push
es
out
push
popa
cmp
sub
xor
cmp
lcall
lret
stos
test
and
or
jmp
js
ret
in
popf
loopne
clc
jns
inc
mov
loop
ss
xchg
or
repz
pop
sbb
popf
mov
lcall
jle
mov
fisubs
hlt
mov
mov
xor
mov
fwait
xchg
push
sub
call
cmc
pop
jp
mov
loope
inc
jmp
inc
out
or
pop
sahf
pop
mov
dec
decl
dec
std
or
xlat
notb
jp
decb
repz
call
test
mov
ljmp
cli
aaa
sar
rorl
xchg
aas
add
jl
aam
out
xchg
out
bswap
jge
in
popf
orl
les
lret
mov
in
lcall
add
pop
sbb
popa
push
adcl
ds
idiv
pushf
sub
incl
negb
jle
rcrl
mov
xchg
mov
jb
out
inc
cmc
mov
bound
fisubrl
mov
fwait
fistpll
dec
push
dec
fldcw
sub
outsl
pop
daa
pop
mov
lods
cwtl
jno
ss
lcall
jns
dec
jecxz
push
jle
sbbb
idivb
aam
orb
cwtl
rcrl
sti
sub
mov
jecxz
push
xor
pop
in
and
jecxz
imul
stos
cmp
push
cld
pushl
lods
cli
std
sub
dec
pop
insb
push
xchg
xor
dec
mov
in
pop
cmpsb
arpl
push
aaa
cmp
decb
aaa
jl
push
addr16
lss
in
test
jnp
imul
test
inc
push
int3
js
outsl
loopne
gs
loop
shlb
fucomip
loop
inc
ret
or
and
roll
lret
pushl
cwtl
pop
mov
in
test
inc
bnd
and
add
cmp
aad
xor
cld
mov
cwtl
clc
inc
add
add
add
int
dec
cltd
mov
ret
outsl
xor
incl
cmpb
jnp
adc
xchg
pause
xchg
test
ljmp
pop
sub
mov
mov
adc
push
adc
nop
pavgb
decl
mov
arpl
dec
or
fs
insb
imulb
jecxz
jne
dec
and
cwtl
mov
lcall
cmc
call
out
clc
mov
inc
cmp
xchg
mov
cli
adc
lahf
aad
notl
adc
lcall
out
es
ficomps
insb
imul
pop
mov
cli
je
das
repnz
lcall
mov
xchg
jnp
push
mov
out
aaa
cld
jmp
jge
popa
dec
xchg
les
cmpsb
pop
mov
push
dec
push
mov
adcb
in
sub
pop
cmp
cmp
das
fwait
inc
xor
mov
jle
cmp
jnp
push
aad
stc
cmp
std
xor
add
xchg
mov
fbstp
ds
xchg
or
jge
fs
cwtl
or
lret
mov
ret
scas
int3
aam
mov
dec
stc
inc
idivb
flds
mov
in
and
cld
ljmp
outsl
test
mov
inc
test
out
lds
xor
jp
inc
xlat
mov
repnz
lcall
lcall
aad
cmc
mov
aaa
add
ljmp
inc
push
mov
nop
cltd
popa
mov
out
mov
test
popa
nop
in
lcall
push
negb
sub
cmp
dec
xchg
call
call
pop
push
mov
leave
ss
sub
pushf
rcll
shrb
test
nop
jg
call
inc
or
xchg
push
mov
xor
add
push
mov
inc
cli
call
in
aam
mov
dec
mov
xlat
rolb
testl
lods
aad
ljmp
push
fwait
push
mov
dec
js
rcl
fldt
shlb
cmp
dec
mov
test
push
sbb
jp
ds
mov
int3
sub
dec
xor
in
cmc
decl
and
lret
mov
cmc
push
sarb
or
aaa
lcall
decb
mov
pop
mov
mov
xor
inc
jmp
fstl
push
inc
jmp
mov
fst
test
cmp
or
das
dec
inc
pop
add
call
xor
push
test
decl
jecxz
sub
sahf
mov
pusha
daa
sti
out
push
aad
enter
lret
out
mov
mov
mov
push
mov
popa
dec
pop
incl
ret
mov
pop
xchg
mov
int
scas
and
add
mov
push
scas
fcmovnb
das
imul
cli
sti
xor
test
inc
add
sub
jl
adc
pop
shll
clc
fstl
jmp
add
in
xor
lea
cmp
push
or
dec
mov
pusha
dec
gs
call
aas
test
adc
fidivrl
ja
xor
int3
dec
sbb
jbe
ljmp
or
loope
fsts
ja
push
nop
shlb
rcrb
inc
rolb
add
fsubrl
cld
dec
push
movsl
or
mov
jbe
incl
gs
enter
xor
dec
mov
add
jg
leave
clc
call
cld
pop
push
cld
mov
andb
push
fistps
cmp
push
mov
push
loope
mov
bound
lcall
lret
mov
sbb
rol
fldt
movsb
mov
xlat
jle
jp
cmp
ficoms
lcall
inc
pop
dec
mov
xor
test
jecxz
sbb
cmpl
push
add
mov
mov
out
cmp
iret
adc
fldl
sbb
pop
mov
mov
cmp
outsb
jnp
dec
lcall
aam
and
lahf
sbb
or
iret
data16
sub
pushf
sbb
push
call
test
stos
hlt
push
out
roll
lods
es
cli
ljmp
dec
add
jmp
int3
sbb
sahf
clc
imul
test
jmp
sub
call
cmp
stos
addr16
cld
test
mov
cli
lret
push
push
call
call
mov
inc
add
or
in
dec
nop
push
inc
mov
ret
adc
mov
sbb
adc
lcall
iret
cmpsb
lea
mov
jmp
mov
xor
mov
lret
sbbb
xor
fcomip
inc
inc
fisubl
mov
into
mov
loop
sbb
jg
xchg
dec
data16
ljmp
pusha
jbe
mov
cmc
xchg
mov
dec
mov
and
lcall
and
mov
ljmp
jle
push
sub
and
mov
fcomip
push
es
cltd
pop
push
fsubrs
mov
out
xchg
sti
add
sbb
aaa
push
call
std
ja
hlt
inc
orl
stc
push
stc
adc
jne
xchg
test
decl
rorb
mov
mov
mov
clc
clc
and
xchg
push
xlat
repz
pop
jecxz
incl
fadd
lahf
int
xchg
xchg
jg
call
or
mov
popl
jne
mov
jg
mov
enter
push
and
push
out
jmp
cmp
add
dec
dec
in
jecxz
out
je
and
mov
mull
pop
jecxz
jmp
iret
dec
adc
dec
xchg
das
das
adc
jae
ss
lods
push
decl
outsl
jmp
mov
in
dec
int
imul
movsb
idivl
insb
cwtl
jle
mov
sbb
out
movsl
adc
outsl
and
add
adc
decl
or
call
iret
dec
lahf
sahf
das
mov
xchg
sbbb
les
clc
scas
xlat
incl
scas
pop
lea
adc
aas
xchg
repnz
cmpsl
sub
call
mov
jg
pop
aas
jecxz
fstps
or
jl
insl
jg
xor
mov
adc
ficoms
push
pop
push
lock
mov
idiv
xor
scas
cld
in
add
decl
int
dec
cmp
adc
je
add
adc
imul
sbb
fdivrp
call
ltr
dec
jae
cmp
add
mov
rcll
pop
stos
cs
jmp
lods
push
pushf
lahf
flds
add
out
push
fists
stos
cld
inc
sbb
movsl
jae
cld
call
cld
loopne
out
mov
mov
aam
lock
lea
jle
cmc
ja
jae
lods
fwait
add
popf
sbb
push
and
mov
es
test
call
and
xchg
sub
aam
scas
cltd
sub
lods
cmpsb
add
icebp
lcall
mov
or
popa
mov
mov
add
stos
mov
lds
lcall
cmpsl
xchg
repz
sub
jns
adc
inc
mov
shll
in
sahf
pusha
sub
inc
sub
dec
jmp
sbb
jmp
dec
jg
loope
push
popf
cmpsb
dec
repz
addr16
jns,pt
mov
mov
adc
cmp
pushl
cmp
lea
scas
int
sbb
or
jmp
push
jp
sti
jmp
jmp
sti
jnp,pt
call
jg
addr16
call
jle
mov
repz
dec
xchg
or
add
mov
femms
and
icebp
ja
icebp
fstl
jb
rclb
movsl
std
mov
les
outsl
lret
std
sub
icebp
mov
or
mov
stc
pop
movsb
stos
dec
or
clc
jmp
fs
aas
fisubrl
mov
jne
sarb
fs
imul
pop
mov
incl
xor
sub
popf
movsl
repz
scas
insl
outsl
cs
mov
loope
pushl
mov
add
pop
fwait
cmp
clc
test
mov
ret
jg
out
pop
fs
lcall
test
ret
fwait
sbb
stc
xor
test
or
idivl
ret
adc
movsb
out
xor
mov
decl
fwait
xchg
or
lret
jecxz
dec
fwait
orb
sbb
subl
mov
inc
ja
dec
sbb
fisttpl
sti
in
outsl
pop
xchg
out
mov
fld
cmp
adc
add
pop
notl
mov
push
shll
loopne
dec
incl
mov
cmp
lds
sub
out
pushf
add
neg
enter
push
inc
sar
inc
xor
lock
lcall
xor
xchg
mov
leave
cmpsb
or
sbb
es
shrl
adc
and
jl
lcall
ljmp
rcl
out
bound
push
xchg
cs
pop
sub
add
push
mov
sbb
jl
into
jp
push
push
clc
call
pop
pop
cmp
aam
xchg
test
imul
xchg
pop
mov
pop
ja
dec
push
sbb
mov
pop
push
and
cli
xor
dec
aam
fwait
lods
js
call
pop
into
cwtl
push
dec
cmp
push
outsl
lahf
mov
mov
es
add
xchg
dec
pop
repz
std
push
ljmp
xor
cmp
cmc
push
dec
push
in
inc
out
add
out
cli
jg
xor
pop
fstpt
sahf
push
and
test
scas
aaa
push
pop
mov
jmp
jecxz
aad
sub
sub
adc
pop
scas
int3
js
loop
pop
cmp
mov
iret
push
aas
out
fimuls
ss
or
mov
inc
adc
xor
je
fdiv
push
push
fisubl
ds
xor
jg
or
rcrl
jle
jp
inc
push
push
jnp
sbb
fidivs
mov
sub
hlt
pushf
mov
push
jo
jle
push
fadd
repz
insl
jns
loop
es
imul
sub
idivl
mov
fcoms
xchg
dec
pop
fildl
test
cmpl
aas
les
outsb
xchg
push
mov
cli
mov
sub
sbb
inc
inc
mov
fildl
push
lcall
in
dec
sub
stos
xchg
add
data16
arpl
cs
fdivl
sbb
jmp
cwtd
and
push
rcrb
js
loopne
jae
scas
shlb
jb
mov
jg
sahf
movsb
icebp
fadds
mov
mov
in
push
scas
mov
aas
jb
mov
cld
pushl
cmc
fisubs
jl
adc
mov
pop
push
inc
and
movsb
push
leave
cltd
inc
bnd
call
loopne
sub
scas
stc
dec
imul
mov
mov
dec
push
cmpsb
dec
mov
push
popf
sbb
roll
cmc
inc
fnstenv
loop
leave
xorb
fdivr
cmp
xor
and
outsb
jge
pcmpgtb
inc
mov
mov
popf
movsb
cs
dec
pop
arpl
int
gs
mov
orb
inc
cmpsb
fbld
mov
sbb
sbb
and
enter
rcrb
xchg
insl
ljmp
mov
or
sub
xchg
xor
mov
mov
jns
ret
jg
pop
mov
xor
or
pop
ss
inc
das
cmp
andb
mov
sbb
mov
les
or
fstl
jb
mov
cmp
jmp
movsb
lea
iret
dec
mov
shl
sbb
hlt
and
data16
call
movsb
jge
mov
pop
jp
cmp
pusha
jae
lret
push
push
out
jle
inc
repnz
aas
dec
xchg
jnp
sbb
stos
cmp
cltd
push
mov
and
out
xchg
lret
lock
je
outsl
jle
xchg
xchg
inc
xlat
jmp
incb
cmp
mov
mov
call
mov
rorl
lock
icebp
sbb
icebp
jge
pop
repnz
scas
lret
stos
inc
xchg
dec
jecxz
sbb
dec
cmp
in
dec
mov
mov
mov
decl
mov
adc
jg
pop
lds
jge
sub
and
mov
dec
dec
icebp
pop
stos
insb
out
into
bound
dec
xor
ss
and
push
daa
mov
cltd
dec
into
jnp
jb
jns
fldcw
xor
lcall
inc
pusha
mov
jns
or
sub
idivb
lcall
test
cld
cld
lods
push
sub
sub
aad
outsb
pop
push
out
std
ljmp
outsb
ja
ret
jp
call
pop
cmp
push
movsb
pop
or
push
shrl
lcall
mov
sahf
push
test
icebp
int
jp
xorb
jg
mov
mov
mov
pop
dec
adc
mov
decl
mov
pop
inc
stc
mov
stos
or
mov
fprem1
xlat
push
stos
sbb
ja
decl
stos
scas
leave
in
inc
jns
test
push
cmpsl
and
sar
ljmp
fsubl
xlat
ss
mov
fists
cmp
push
jmp
outsl
rcrl
sti
cwtl
push
mov
je
cmp
aaa
hlt
mov
or
dec
xchg
mov
movsl
jmp
out
xchg
sahf
add
sbb
lcall
mov
decl
outsb
cmpsl
mov
stos
addb
in
lret
lret
push
ret
dec
lcall
mov
mov
mov
jp
data16
xchg
pop
mov
leave
mov
cli
repnz
sahf
clc
dec
pop
decl
sbbb
xchg
sti
stc
in
es
insl
pop
adc
inc
ljmp
and
sahf
adcl
mov
loop
aas
push
jno
incl
push
mov
xchg
outsb
mov
roll
xchg
cld
jno
lret
lcall
sbbb
lcall
sbb
cmp
adc
pop
cltd
movsb
fsubrl
mov
out
mov
and
aaa
cld
ljmp
dec
das
add
dec
mov
insb
sub
pushl
dec
xlat
fwait
mov
jmp
or
pop
dec
sub
cmp
add
lock
fisttpl
jg
addb
loopne,pn
or
pop
ljmp
xor
dec
or
mov
or
pushl
cmp
xchg
cmp
test
mov
push
pop
xchg
sbb
jle
cld
loop
cmpsl
jne
js
lcall
sbbl
hlt
incl
ja
sub
xchg
adc
dec
pop
xchg
mov
adc
jb
fld
push
xor
pusha
mov
jg
test
pop
pop
dec
faddl
push
inc
jne
sub
push
lahf
xchg
inc
sbb
push
lcall
call
inc
cld
loope
out
pop
pop
mov
aaa
int
pop
or
jbe
mov
cmp
lcall
mov
shl
fisubs
jae
cmp
addr16
dec
lret
xchg
cmpsb
cmc
push
fisttps
ficomps
sahf
push
daa
mov
mov
mov
out
cmp
xlat
pop
adc
lret
incl
xchg
push
int
movsb
int3
cmp
jae
push
insl
cmp
adcl
push
pop
movsl
aas
icebp
pusha
shrb
mov
xchg
leave
push
into
les
adc
loop
dec
cmp
pop
std
lcall
mov
fwait
xchg
xchg
xchg
dec
ds
fisubs
movsb
xor
jnp
dec
ret
dec
fnsave
inc
mov
pop
out
loopne
aaa
pop
clc
pushf
xchg
popa
cmp
ret
imul
jne
in
lcall
add
das
outsl
xor
dec
push
out
hlt
sub
pop
scas
sub
mov
fsubrl
in
jb
mov
xchg
cwtl
push
lods
pop
arpl
jae
mov
ljmp
xor
and
lods
mov
outsb
mov
or
lcall
cwtl
or
leave
and
sub
mov
aam
xchg
pop
daa
cmc
subl
int
pop
sub
or
popf
inc
ret
inc
sti
in
popa
sbb
adc
sub
add
inc
and
or
data16
adcl
adc
iret
ss
mov
xor
xchg
decl
mov
dec
jno
mov
sar
push
push
add
pop
bound
push
std
ljmp
adc
inc
shlb
pop
or
lds
pop
adc
movsl
loopne
mov
imul
cld
pop
jge
shl
mov
out
lock
ret
clc
mov
imul
enter
lock
mov
insl
mov
sub
adc
test
lds
dec
inc
test
jnp
js
call
pop
lret
sbb
enter
sub
jg
push
mov
mov
movsb
int3
call
loopne
bound
nop
clc
in
divl
aaa
insb
mov
jecxz
push
dec
dec
daa
daa
sub
inc
pushl
inc
xor
movsb
xor
xor
add
dec
repnz
insl
xor
int
arpl
dec
insl
pop
incl
cmp
sub
hlt
jns
fcoml
push
sbb
add
xchg
out
mov
incl
or
outsl
mov
sti
jg
test
xor
xor
and
xchg
add
outsl
out
incl
addb
ja
add
loope
jne
or
hlt
jmp
testl
das
jg
fwait
jmp
pop
fistpll
inc
and
xchg
sbb
call
sbb
call
and
call
imul
pop
jecxz
rcll
call
mov
or
ja
and
push
cmp
sarl
iret
rol
adc
ljmp
ss
push
iret
es
pushf
test
bound
add
ljmp
pop
and
sub
push
jbe
pop
lcall
add
scas
mov
or
xor
dec
les
inc
out
jmp
das
sbb
and
dec
xor
lods
scas
scas
mov
jle
fbstp
cmp
inc
shll
fcmovnb
push
xchg
mov
out
repnz
leave
ja
mov
pop
xchg
insl
cli
jl
imul
movsl
test
or
stos
mov
and
pop
movsb
int
outsb
fisttpll
mov
mov
jl
incl
and
dec
sti
jg
aas
fiadds
mov
jae
push
fisttpl
add
xlat
ljmp
pop
shll
lret
out
pop
mov
or
cmp
xchg
aad
ljmp
xor
repz
push
lret
push
scas
adc
xor
jle
into
nop
movsl
sub
or
std
pop
out
repz
hlt
push
or
mov
dec
pusha
pop
sub
inc
call
fwait
out
clc
mov
enter
fildll
sub
mov
mov
lds
ja
clc
cmp
push
sbb
adc
cmpsb
pop
pushl
sbb
mov
sbb
test
and
dec
in
pop
sbb
pusha
mov
ljmp
insb
out
cli
or
shr
mov
mov
sub
sub
add
and
pushf
sub
out
pop
cmc
aas
xor
push
cwtl
push
xchg
ds
push
push
jge
inc
cld
andb
cltd
clc
incl
scas
sbb
xchg
int3
in
adc
sarl
sbb
call
test
inc
in
add
jg
jne
es
je
pop
mov
je
jnp
mov
out
fsubl
xchg
call
add
and
push
cmpsb
xchg
mov
and
fistl
shl
das
ds
ret
cs
call
dec
ret
inc
pop
call
xchg
mov
xlat
push
fdivl
sub
xlat
inc
sub
call
cmp
mov
mov
mov
and
aas
push
or
dec
mov
mov
jne
mov
sbb
ss
gs
adc
out
adc
stc
movsb
dec
cmp
xchg
mov
cmc
add
xchg
pop
mov
adc
ljmp
icebp
add
sub
dec
jae
mov
pushl
xor
push
lds
dec
xchg
mov
sbb
fcmovnbe
fs
xchg
pushf
pop
pop
dec
cmp
mov
xor
movsl
subl
jle
sbbb
lds
mov
lock
jmp
and
adc
xchg
cmp
mov
dec
sahf
mov
out
sbb
or
lds
ret
push
inc
gs
call
cmp
adc
cmpsl
sbb
pop
faddl
add
adc
pop
insl
cmp
sub
ljmp
and
mov
scas
add
sbb
cmp
in
mov
mov
test
pushl
ljmp
dec
mov
or
pop
jmp
jnp
ljmp
xor
dec
xchg
jbe
idivl
daa
and
mov
inc
xchg
sub
negb
ljmp
xor
aad
mov
aaa
push
xchg
or
int
adc
or
test
data16
cmp
inc
call
mov
call
add
les
aas
inc
add
xorb
and
push
sub
pop
mov
incl
and
rolb
in
sub
scas
sbb
fwait
aas
mov
lahf
out
shlb
jb
push
cld
xchg
jmp
dec
into
std
xchg
jno
inc
into
loop
inc
jecxz
insb
iret
inc
push
mov
lods
ljmp
gs
hlt
int3
into
clc
cmp
popa
pop
outsb
or
mov
sub
and
out
nop
jg
shrb
or
add
mov
aam
ljmp
xchg
jns
sub
add
dec
in
fcoml
fdivr
push
sub
sub
sbb
pop
clc
ror
sub
xorl
jae
mov
loopne
jp
into
pushl
cmp
movsl
push
push
pop
rcrl
negb
loop
mov
scas
ss
fisubl
push
out
lods
lret
sub
lret
rclb
push
or
test
test
sbb
mov
xor
dec
dec
movsb
imul
fcmovbe
mov
popa
sub
shrl
xor
xor
mov
lcall
xchg
inc
inc
mov
and
rcll
jge
inc
jge
test
mov
pop
in
incb
aam
incl
insl
pop
rol
imul
mov
ss
sbb
ret
and
dec
ffree
mov
push
sbb
lret
and
dec
pushf
jl
testb
fstpl
js
xchg
gs
aas
ljmp
loope
int3
mov
mov
xchg
adc
ljmp
jne
fsubl
sbb
aaa
fmuls
scas
out
ds
sahf
dec
add
pop
cld
jmp
xchg
rcll
mov
dec
sub
insl
xchg
sbb
push
out
arpl
lds
sub
pop
mov
bound
out
pop
pop
jno
ds
cmp
push
sbb
aaa
push
pop
in
outsb
push
aad
es
ljmp
xor
lds
cmc
inc
ror
dec
xor
js
pop
push
nop
stc
fidivl
popf
adc
pop
call
fsubrl
popa
sarl
jmp
mov
aaa
push
pop
lret
jle
xor
mov
xchg
mov
popf
hlt
out
sub
in
decl
push
mov
sub
loop
xor
cmp
repz
int
jl
xchg
mov
insb
mov
neg
je
movsb
xor
sti
inc
inc
js
ja
stc
sub
and
cmpl
cmp
sbb
repnz
sub
das
hlt
dec
xchg
jno
and
insb
mov
mov
push
fwait
push
test
mov
sar
ljmp
vxorps
scas
push
pop
sbb
jp
cmp
int3
or
ret
mov
inc
sub
push
cmp
push
cli
les
imul
fadds
les
push
mov
dec
outsb
pop
js
inc
cli
test
mov
mov
jl
pop
push
stos
idiv
cmp
in
in
mov
ret
mov
nop
test
mov
jo
and
mov
mov
out
add
fucom
jbe
int3
xlat
push
adc
inc
popf
and
cld
push
or
sti
mov
sahf
repz
adc
pop
stos
jl
ja
mov
jnp,pt
arpl
dec
movsl
pop
jmp
jecxz
jbe
fcoms
out
mov
out
imul
add
icebp
enter
pushl
cmp
sub
push
jmp
push
mov
xchg
dec
dec
jp
mov
decl
insl
push
xor
cmc
sbb
movsl
scas
aas
and
or
jmp
fnstenv
mov
movsl
lcall
cmp
nop
movsb
push
lock
decl
cmp
push
into
cmp
std
add
popa
cmc
js
xchg
imul
insb
out
push
jbe
lcall
xor
pop
loopne
rcrb
pop
mov
pop
sbb
mov
ljmp
sub
dec
mov
bnd
test
jne
test
adc
jnp
decl
push
add
ds
and
jae
and
es
in
imul
incl
and
and
ffreep
in
xor
sahf
fwait
pop
ret
xor
mov
test
fdivrs
pusha
jmp
xchg
mov
ljmp
xlat
inc
mov
xchg
cli
fisttps
add
jnp
cld
sub
fistpll
orb
jmp
dec
jl
and
jnp
xor
lods
xchg
hlt
jp
dec
pop
mov
jmp
mov
jb
jnp
dec
daa
out
inc
adc
lock
lds
cmpsl
out
test
cli
lcall
test
cmp
xchg
lahf
loope
add
repnz
xchg
sbb
addl
divl
loopne
data16
push
push
mov
dec
xchg
mov
jb
idiv
mov
insl
push
test
test
out
cmpsb
in
mov
mov
xchg
mov
and
mov
lahf
stc
scas
jno
jbe
jmp
int3
mov
xchg
mov
sti
test
pop
mov
popa
mov
sub
nop
negb
in
fbstp
movsl
push
add
xchg
je
call
sub
jno
xor
test
push
stos
popf
popf
js
test
lcall
dec
adc
add
xor
lcall
leave
cltd
push
shll
addb
cwtl
cmp
xorb
clc
inc
push
es
sub
push
dec
push
mov
mov
scas
dec
mov
jmp
fsubrs
mov
sub
fldenv
and
lcall
lds
cld
scas
push
stos
rcrl
fidivl
popa
dec
ret
push
outsb
loopne
jg
test
fists
mov
mov
mov
inc
xchg
pop
repz
mov
cmp
loopne
decl
sub
adc
cld
mov
dec
mov
xor
jno
out
movsl
adc
lcall
lcall
inc
xchg
mov
xor
in
je
jnp
mov
loopne
dec
mov
cmp
adc
int3
stos
dec
jae
ret
fdivrp
popa
mov
add
aas
loop
xor
stc
pop
fbstp
push
jle
cmpsl
xor
call
sarb
jns
ja
cwtl
rorl
xchg
adc
push
and
xchg
xchg
sbbl
call
incl
imul
push
rcrl
test
mov
lds
cmp
loop
mov
js
aad
push
arpl
mov
push
iret
push
pop
inc
jg
lcall
sahf
pop
sbb
add
mov
aas
hlt
push
mov
add
and
shl
sub
cmp
sahf
mov
jnp
xchg
idivb
jne
dec
push
mov
and
xchg
or
adc
aas
cmp
cmp
out
imul
cli
mov
mov
sti
out
repnz
xor
xor
icebp
mov
cli
xchg
xorl
mov
sti
mov
push
cwtl
sbb
je
pop
fs
pop
in
xchg
mov
lods
jg
mov
pop
or
into
bound
bound
mov
xchg
fists
jg
faddp
popf
movsb
rorl
jg
mov
pop
std
jbe
test
or
call
les
ret
jbe
lea
cmpsl
cwtl
or
pop
fwait
imul
add
popa
inc
or
ljmp
mov
mov
xchg
imul
dec
ret
outsb
movsl
dec
mov
sub
jne
leave
dec
insl
inc
mov
pushl
dec
sbb
xor
push
insb
jne
bound
sarb
push
out
das
lods
pop
pop
jmp
dec
fcmovnu
xchg
jmp
xchg
repz
jp
xchg
ljmp
add
mov
adc
into
or
cwtl
xor
xchg
jo
inc
cwtl
js
out
cli
leave
js
stos
imull
jo
lea
push
ljmp
fldt
lret
in
popf
lock
ljmp
and
test
fildl
and
and
scas
out
test
in
push
ljmp
test
adc
add
mov
inc
insl
cmp
loop
cmp
pop
add
lcall
mov
clc
mov
mov
loope
xor
hlt
sub
push
mov
jmp
cli
divl
mov
xchg
rcrb
cmpsb
arpl
pop
addb
xchg
imul
lcall
in
jmp
adc
gs
cltd
ds
call
clc
ret
adc
iret
push
repz
jl
jo
sbb
fisubrl
push
stos
mov
iret
dec
mov
call
nop
rolb
cmp
adc
je
into
jp
and
lods
fildll
cld
call
mov
fadd
test
shrd
das
ljmp
sti
fimull
jnp
add
adc
xchg
int3
or
out
movsb
xchg
cld
aas
or
cli
incl
and
test
jmp
je
fsubs
mov
pop
jae
notl
clc
jg
je
push
jl
cmpsl
mov
nopl
dec
popa
aas
jg
cld
daa
add
out
int3
rclb
fistl
stos
repz
pop
ljmp
call
mov
and
add
jmp
test
xchg
mov
mov
push
xor
scas
dec
ret
les
mov
and
decl
sub
dec
xlat
mov
mov
stc
inc
scas
adc
inc
sar
xorb
push
sbb
xor
or
lods
sub
and
and
test
mov
aam
push
lds
pop
cmpsb
sbb
lret
int3
movl
adc
mov
cmc
xor
imul
ficompl
loope
and
mov
cli
or
repnz
ja
push
jecxz
movsb
pop
lahf
sbb
xlat
inc
lock
pusha
or
pushl
xchg
mov
cld
in
loope
mov
inc
fsubrl
mov
or
jbe
pop
int
out
pop
cmp
cmp
jmp
out
cmp
sbb
bnd
or
mov
outsb
cmc
jl
xlat
leave
push
mov
cmpsl
inc
lods
pop
sbb
lcall
cmp
outsl
ss
outsb
fistpll
or
inc
enter
mov
mov
ret
incl
fcom
push
sbb
fsubr
jg
pop
xor
and
or
fstpl
ljmp
pop
in
int3
inc
lret
xchg
dec
into
rcll
stos
xchg
int3
and
cmp
or
ljmp
inc
jle
adc
fwait
xchg
fistpl
inc
mov
gs
sar
mov
mov
or
sub
xchg
jge
sti
loope
repnz
test
incl
aaa
pusha
movsb
imul
repz
push
dec
jmp
jp
ror
jb
sub
pop
enter
ret
jge
lea
psrld
or
push
fidivl
je
push
sub
cli
xor
inc
lret
mov
out
cli
repz
mov
pop
mov
sbb
jl
push
xlat
shll
dec
cmp
mov
and
or
add
lret
inc
clc
or
xchg
mov
leave
mov
push
dec
ljmp
inc
add
xor
push
push
outsl
nop
sbb
lret
add
mov
push
jo
jbe
iret
or
movsl
sar
daa
jg
cld
idivl
mov
call
scas
popa
bnd
push
call
jns
add
mov
sbb
stos
popa
mov
adc
jb
xor
add
fistps
push
adc
sbb
lahf
ja
xchg
push
push
add
cmc
or
inc
or
lcall
mov
add
sub
push
daa
mov
xor
adc
cmp
negb
cmp
mov
inc
xor
stos
mov
push
stc
push
push
jle
xchg
xchg
in
out
scas
sbb
ljmp
mov
mov
xchg
ljmp
push
push
inc
sbb
test
jmp
iret
pushl
push
test
mov
adc
js
mov
inc
cwtl
dec
jmp
add
pusha
dec
lcall
cltd
pop
mov
dec
pop
mov
scas
into
andps
adc
cmp
pop
push
subl
jmp
pop
call
loope
loop
add
mov
add
jb
dec
dec
call
adc
decl
xor
xchg
fs
lcall
mov
aam
or
xchg
decl
daa
fs
mov
fsub
and
addl
cwtl
imul
push
dec
cmp
mov
sub
mov
dec
movsl
out
xor
adc
lods
dec
lcall
scas
adc
loope
pop
iret
mov
pop
popf
andb
mov
sar
popa
pusha
int
xchg
dec
and
fildl
mov
call
pop
insl
sbb
or
fdivr
lea
jno
push
dec
repz
fcomip
aaa
inc
outsb
xor
repz
xor
mov
ret
jbe
fisubl
incl
pop
mov
scas
or
iret
jmp
mov
test
gs
or
jg
jmp
sub
pop
sub
mov
jmp
xchg
cli
mov
xchg
mov
idivl
rorb
adc
push
adc
std
pushf
fimuls
out
jg
push
lcall
push
into
xchg
cld
int3
pop
clc
push
adc
in
and
or
filds
pop
ucomiss
lcall
dec
psubd
ss
mov
cmc
sti
int3
adc
ljmp
scas
ja
sarl
push
mov
lods
movsb
ds
popa
pop
inc
jns
push
ret
mov
jge
jmp
ror
dec
lods
sbb
xor
pop
rol
mov
push
add
repz
repz
call
xchg
add
pop
sbb
pushf
mov
sbb
and
xchg
cmp
imul
mov
adcl
mov
pop
loopne
fstl
lods
add
xor
outsb
adc
fwait
pushl
xlat
in
fwait
insb
mov
inc
mov
mov
ljmp
leave
cld
in
movsl
mov
pop
sub
in
arpl
jae
outsb
test
sbb
push
dec
mov
lahf
sbb
jmp
jns
jl
ds
sub
sub
inc
push
cmp
ljmp
mov
sub
dec
adc
adcb
into
mov
leave
gs
in
in
xchg
in
dec
rclb
std
jg
ljmp
pop
sbb
inc
sahf
clc
and
in
xor
push
ret
mov
jbe
jb
mov
ljmp
or
cs
add
jg
movsl
jle
add
out
es
push
bnd
mov
sub
jmp
scas
xchg
xchg
mov
add
test
fisttpl
add
scas
cwtl
push
cmp
xchg
sub
adc
lcall
scas
jnp
lret
jecxz
mov
jmp
adc
xor
adc
daa
rcr
loopne
xor
dec
decl
fistl
xor
xchg
popf
aas
pop
rcll
xchg
mov
outsl
pop
mov
in
call
es
xlat
mov
push
cmp
mov
mov
sbb
call
nop
dec
sahf
out
addb
imul
add
sbb
divl
pushf
lcall
push
xchg
jecxz
push
and
xlat
incl
int3
dec
out
icebp
call
sbb
sub
jmp
jg
scas
das
push
dec
mov
adc
jle
cmp
inc
cltd
push
out
mov
lcall
adc
mov
in
ja
addr16
xchg
repz
in
dec
inc
mov
sar
mov
rorl
jae
dec
pop
in
imul
push
xchg
xchg
outsl
xorb
dec
sti
push
jmp
sbb
into
ret
stos
adc
aad
inc
fsub
xlat
jb
push
mov
rcrb
inc
cmpsb
mov
sub
mov
sti
neg
mov
stc
je
push
addr16
mov
aaa
mov
cmp
call
pop
sbb
mov
out
mov
mov
adc
aad
mov
push
imul
leave
mov
lods
push
jp
mov
fmuls
push
mov
incl
jecxz
jg
fldl
pop
or
xlat
shrb
sub
pop
pop
sbb
ret
repnz
decl
xor
xchg
loope
push
dec
roll
popl
lcall
mov
push
js
fs
sahf
mov
ret
addr16
mov
popa
mov
add
inc
pop
push
push
outsb
pop
cmp
mov
lret
sahf
sbb
push
pop
xor
cld
xchg
ss
sbb
mov
cld
lods
add
pop
cmp
sub
mov
jb
and
xchg
push
adc
insl
or
adc
add
push
repnz
dec
stos
cmp
push
mov
jge
loope
cmp
lock
push
test
repnz
imul
cmc
sub
sar
data16
shl
lcall
jmp
sbb
enter
add
push
mov
cltd
dec
cmp
addr16
pushl
icebp
lret
popf
stos
jmp
lea
mov
xor
or
clc
mov
xlat
call
fs
imul
add
pushf
inc
inc
scas
inc
clc
jg
rcrb
mov
out
cs
xchg
sub
call
fs
out
sbb
and
jnp
jno
pushf
mov
jg
lods
lods
lcall
jl
rcll
push
repz
movsl
or
les
or
jnp
rol
loopne
mov
incl
out
mov
mov
daa
or
not
and
into
and
aaa
leave
cli
addr16
mov
fs
sbb
mov
xor
ljmp
jg
js
ljmp
in
inc
dec
cld
call
fimuls
jne
adc
xchg
jb
mov
mov
mov
sbb
shlb
mov
jp
ds
sub
xchg
movsl
or
push
lods
push
test
mov
push
mov
cli
dec
aaa
aam
mov
mov
pop
mov
mov
scas
ljmp
in
cwtl
call
adc
imul
dec
jmp
cmp
inc
or
shrb
pop
mov
in
stos
pop
pop
mov
lahf
xor
jno
pushl
sub
in
pop
pop
lahf
sbb
and
ficoms
fsubrl
cmp
fbld
fistpll
pop
lcall
insb
inc
push
in
popa
hlt
lcall
in
jnp
ljmp
pop
or
mov
jmp
fdivl
in
sahf
dec
ret
inc
mov
xlat
dec
mov
mov
inc
sarb
pop
cmp
lcall
aad
xor
xchg
stc
inc
popa
cmc
repnz
movsb
repz
pusha
mov
in
dec
js
mov
int3
add
mov
cmp
sbb
mov
test
ficomps
inc
pusha
jp
cmovle
pop
add
and
inc
dec
adc
or
mov
lds
add
pop
add
mov
mov
out
dec
add
ljmp
xchg
popa
jle
fcoms
sbb
push
jmp
xchg
out
incl
pop
dec
sti
jecxz
rorl
push
push
pop
dec
nop
scas
mov
daa
mov
ja
mov
xchg
lret
fwait
rorb
data16
lds
sbb
xchg
jmp
or
sub
pushf
call
xchg
incl
scas
scas
cli
fists
xchg
inc
fwait
jae
lret
xchg
push
cmpsl
push
mov
rcrb
out
cli
decl
and
mov
adc
lcall
fldl2t
jmp
test
xor
into
xchg
bound
roll
pop
shl
loopne
mov
sub
ljmp
dec
mov
xchg
adc
lock
or
dec
leave
lret
push
sti
mov
int3
sti
jg
cltd
std
jb
inc
cs
not
jecxz
inc
addl
add
mov
idiv
incl
add
lahf
mov
xchg
mov
push
and
adc
sub
cmp
mov
add
push
adc
lcall
cmc
inc
xorb
push
into
inc
adc
ja
scas
mov
idivb
pushf
stos
xor
stos
test
outsl
jne
mov
sbb
xchg
rcrl
aad
sti
fwait
pop
or
leave
addr16
cmp
addl
cld
adc
push
push
jmp
call
aaa
jle
mov
subb
and
xchg
cmp
ja
sahf
inc
cmp
cli
outsl
es
pushf
insl
adc
enter
mov
push
push
stos
scas
rol
fcompl
jl
repnz
in
pop
mov
shlb
lret
and
pop
ret
mov
bound
flds
sbb
outsl
pop
push
add
push
sarl
add
mov
fnsave
jle
incl
xlat
mov
or
adc
mov
cmp
dec
jno
jnp
sbb
data16
or
push
jnp
les
jbe
mov
clc
xchg
pop
lcall
mov
dec
jg
mov
lods
les
add
jg
pop
popa
fcomps
mov
mov
les
jns
lahf
fcmovu
icebp
inc
or
in
push
xor
pop
call
jnp
int
mov
bound
pop
ljmp
sub
insb
jp
cmp
sub
mov
imul
mov
lcall
ja
cld
push
repnz
xchg
jmp
dec
or
leave
xor
clc
repnz
fimuls
xor
pushl
mov
mov
mov
pop
int3
mov
incl
fmulp
xchg
dec
cmc
add
jg
aad
imul
jl
aaa
mov
xchg
ds
mov
cmp
incl
add
mov
pop
mov
or
fisubl
cld
xchg
jge
jle
into
pop
insb
jmp
lods
add
popa
stc
pop
es
push
xor
adc
xchg
mov
jno
sub
jbe
jp
jmp
inc
sub
iret
jecxz
add
sub
xor
or
add
imul
movsb
lcall
stc
dec
dec
xchg
cmp
mov
lcall
aad
add
out
jae
push
sbb
shl
int3
sar
ljmp
imul
xor
cmc
popf
arpl
notb
int
cmpsb
scas
clc
imul
movsl
pushf
pop
shlb
mov
mov
push
ss
je
out
or
jb
mov
xlat
push
and
aas
shrb
pop
pop
out
sbb
fdivs
enter
fwait
push
jns
sbb
ljmp
inc
movsl
xchg
dec
sbb
cmp
cltd
or
movsb
aad
jmp
jp
mov
out
cli
add
mov
xor
mov
add
icebp
inc
mov
sub
or
imul
mov
pop
lods
insl
sbb
pop
mov
add
lahf
adc
mov
push
std
fxtract
mov
fldcw
pop
in
mov
add
addl
xor
push
into
mov
out
inc
shlb
jmp
out
popf
daa
in
int3
int3
addr16
lahf
jb
pop
mov
mov
fldcw
push
xchg
push
es
cmp
arpl
ja
jmp
jnp
test
es
in
add
movnti
inc
push
xchg
in
in
pop
push
scas
push
mov
adc
adc
add
sbb
and
cmp
ret
inc
jl
sub
mov
mov
sub
xchg
js
adc
push
out
fst
incl
jae
or
lea
fbld
ret
sbb
inc
loopne
and
es
mov
dec
and
ret
es
add
jg
scas
jl
cmp
jno
es
or
xchg
sbb
out
and
es
inc
aaa
das
decl
mov
iret
in
xor
ficoms
xchg
jb
fidivs
cmp
jmp
dec
ljmp
scas
xchg
nop
mov
ret
ss
fmuls
out
cli
pop
sbb
bnd
sbb
xchg
inc
sub
pop
enter
xchg
push
ret
xor
sub
hlt
xchg
dec
push
roll
imul
cmp
pop
adc
push
pop
mov
xchg
push
and
sub
push
out
lcall
jg
push
loop
mov
aad
sahf
lahf
dec
loope
mov
mov
subl
and
lods
dec
cmp
loopne
imul
pop
repz
mov
pop
cwtl
mov
jg
xchg
test
xor
add
cmp
in
push
cmpsb
mov
inc
add
lcall
les
sub
push
subb
dec
lods
ret
mov
lock
jo
inc
adc
sbb
call
orb
adc
das
call
xchg
add
rorl
loope
jg
call
sbb
xor
repz
jnp
out
push
inc
inc
fisubrs
pop
push
pusha
cmp
dec
jle
jl
shr
aad
fldt
cmp
and
daa
cmp
adc
xchg
cwtl
fldl2e
incl
xor
mov
mov
sub
sub
fildll
push
repnz
fsubs
xchg
cltd
cmc
rorl
jbe
dec
jmp
cltd
mov
jle
jl
aas
fxch
adc
jmp
and
testb
xchg
inc
adc
call
out
arpl
insl
outsl
and
movsl
divb
out
dec
movsb
rcrl
psubq
ljmp
dec
jo
stos
loopne
pusha
and
sub
pop
mov
add
jmp
push
daa
push
xchg
jno
jb
xchg
insl
or
mov
or
sub
decl
into
insl
pop
adc
jg
lea
cmc
jecxz
and
mov
shlb
hlt
mov
xchg
or
and
ds
mov
mov
xchg
cmp
jg
pop
scas
addr16
dec
mov
aaa
mov
stos
pop
pop
mov
lcall
call
adc
ljmp
xchg
mov
outsl
add
xor
in
adc
mov
aad
dec
dec
mov
stos
inc
fmuls
inc
imul
push
sub
sub
mov
inc
or
aaa
pusha
cmc
lret
or
icebp
imul
into
mov
pop
add
inc
mov
jle
lret
fiaddl
push
das
add
inc
mov
or
dec
sub
push
xor
xor
xor
das
sar
fs
and
nop
mov
inc
cmp
xabort
fisttpll
lcall
out
mov
inc
repz
or
dec
jge
lahf
ja
jg
xchg
sbb
repz
clc
ljmp
mov
push
daa
inc
and
enter
fdivl
incl
pop
jne
sbb
cmp
push
jbe
clc
adc
inc
adc
filds
cld
decb
adc
les
sub
jecxz
ljmp
jbe
or
push
or
jnp
test
lahf
fldt
mov
cmp
insb
sub
mov
pop
lea
lea
testl
inc
bound
insb
cld
call
mulb
push
test
inc
or
jae
fwait
daa
mov
push
lcall
xor
std
pop
dec
inc
sbb
pop
imul
jne
sub
int3
sub
das
push
sub
cld
lcall
dec
sbbb
fldl
push
loopne
add
jae
xchg
ljmp
insb
mov
xchg
fcompl
push
jnp
mov
icebp
inc
das
hlt
push
pop
push
mov
mov
stos
jb
dec
into
mov
push
popa
iret
jne
fs
dec
fwait
pop
jno
mov
sbb
mov
or
mov
ljmp
fidivrs
popf
nop
xor
dec
insl
into
push
inc
xor
pop
push
outsb
inc
andb
in
inc
jo
pop
sar
incl
jnp
ret
cmc
hlt
mov
imul
fs
jp
lcall
dec
push
mov
push
adc
aam
sahf
outsb
cmc
aam
ds
lret
ja
incl
jle
xchg
sub
test
iret
xchg
fs
and
in
pop
lcall
jmp
loop
inc
sbb
mov
inc
mov
lret
movsl
and
mov
subb
clc
outsl
jl
leave
cmp
nop
shlb
sub
jnp
cld
rcl
sub
mov
call
loopne
cmp
loop
loope
mov
test
pop
in
lods
in
frndint
fisubrl
and
and
adc
icebp
xor
xlat
pop
testl
cmp
ds
mov
out
iret
mov
dec
push
test
mov
sbb
jae
cld
xchg
mov
loope
xor
lock
cmpsb
pop
loop
outsl
ljmp
push
test
push
add
bound
lock
mov
stos
out
clc
in
insl
fisttps
ljmp
jl
jp
enter
out
sub
popf
dec
mov
mov
adc
jne
add
xor
mov
inc
fs
call
stos
mov
aaa
cld
cli
cli
xorl
pushf
js
sbb
aas
loope
jno
sub
sub
bound
les
hlt
push
ljmp
incl
push
testb
ja
ffreep
test
mov
incl
adc
xchg
mov
jne
fcomp
shl
out
scas
mov
mov
push
das
idiv
in
xor
test
ss
dec
xchg
fimull
mov
sub
scas
repnz
icebp
jmp
xlat
pop
xchg
ljmp
jge
movsl
stos
jb
sbb
or
test
int3
jns
jmp
jle
movsl
ds
jno
jbe
add
dec
and
pop
cld
ljmp
jp
push
or
xor
hlt
pop
mov
loop
dec
aas
sub
ljmp
adc
in
push
mov
cli
icebp
fst
in
xchg
sahf
outsl
in
dec
xor
xchg
lret
pop
jecxz
in
pop
test
mov
int
sub
mov
mov
ret
jecxz
popa
xor
lret
insb
lret
pushl
cli
xor
lods
mov
adc
repz
inc
lock
and
daa
cmp
or
lret
stos
in
out
repz
test
imul
bound
clc
incl
xlat
enter
push
fs
jmp
js
fldl
sbb
mulb
repz
xchg
inc
adc
xchg
shl
cmp
lods
aaa
adc
cmp
lcall
mov
and
inc
mov
cmpsb
and
sub
dec
testb
xchg
nop
mov
lret
fidivs
jecxz
fimuls
inc
fisttpl
icebp
adc
jp
addb
pop
les
call
je
ja
in
aad
jo
cmp
pop
aad
mov
jb
jp
xchg
jg
pushl
ljmp
inc
adc
cld
push
mov
mov
xchg
pop
cmpb
dec
inc
insl
add
fadds
pop
loopne
push
cmp
ljmp
mov
push
stos
mov
mov
andb
dec
mov
in
and
data16
or
fstps
aad
sbb
dec
popf
jb
jle
pop
stos
fwait
shlb
xchg
out
clc
incl
push
adc
movsb
ror
xor
jg
in
pop
mov
pop
outsl
adcl
cwtl
rclb
test
pop
fsubrl
push
xchg
inc
xor
clc
jmp
jle
push
mov
lods
hlt
jp
cmp
mov
into
ljmp
das
inc
cltd
movsl
ret
std
lret
mov
or
or
stos
in
decl
cmc
sbb
xchg
cmpsl
pop
out
repnz
je
cmc
push
fildl
jmp
sbb
outsb
mov
js
ja
lret
xor
stos
sbb
aam
jbe
and
sub
sar
aaa
dec
mov
out
mov
sbb
hlt
inc
mov
mov
xor
or
mov
idivb
faddl
pushf
sub
shlb
xor
mov
in
bound
je
lcall
pop
ret
sub
lahf
movsl
pop
call
imul
mov
lods
inc
inc
in
adc
call
push
inc
xchg
adc
fisubs
inc
dec
xlat
sbb
push
mov
clc
and
call
sarb
sbb
lcall
sub
mov
in
int3
ficompl
in
test
je
mov
lcall
jge
repz
sti
add
nop
es
gs
pushl
xchg
sbb
pop
cmpsb
loope
jle
lcall
in
andb
popf
jo
sahf
lcall
xchg
jp
stos
adc
or
xor
push
scas
std
es
jo
pop
idivl
int
add
incl
jmp
adc
hlt
inc
js
sbb
ja
inc
in
mov
jbe
jmp
jg
loopne
and
dec
imul
bound
je
and
and
xchg
jle
in
add
jle
sbb
outsb
sbb
jp
cmp
frndint
xor
repz
shrb
mov
lcall
adcb
pop
les
movsb
xor
or
shr
cwtl
push
push
ret
int3
mov
mov
mov
fdivrs
test
inc
or
aad
in
and
push
inc
enter
call
sbb
es
decl
jp
insl
scas
jge
xor
cmp
jl
mov
lret
decl
jl
repz
int
pusha
adc
jne,pn
je
leave
mov
out
add
aaa
das
mov
repz
ljmp
iret
andb
dec
jmp
outsb
sbb
negl
decl
sti
outsl
adc
loopne
lods
xchg
test
pusha
cmp
ljmp
push
scas
adc
ficoml
je
lea
jp
jg
lcall
xlat
jmp
nop
push
jmp
ja
cli
aad
xchg
pop
adc
pop
dec
lret
pop
jno
ss
cmp
scas
and
stc
and
lcall
mov
sub
orl
sbb
inc
and
pop
std
jecxz
scas
push
cmc
mov
xchg
pop
fdivrs
aaa
mov
dec
cmp
insb
mov
mov
and
popf
lret
jae
shll
scas
jns
std
mov
xchg
mov
dec
rcll
addr16
mov
add
mov
pop
add
adc
add
mov
inc
popf
lcall
fidivrs
lock
fsubl
and
out
fwait
js
pop
insb
jne
push
push
mov
shrb
cmp
push
mov
pop
dec
sub
mov
pushl
call
xchg
jbe
ss
lods
je
cmpsl
loope
pop
xor
mov
leave
push
int
pushl
xchg
sbb
dec
xchg
ret
mov
fidivl
adc
jmp
rorl
cmp
test
ss
es
adcb
int3
insl
xor
xchg
xor
cs
pushf
mov
pop
pop
sarb
in
pop
cmp
sbb
incl
idivl
stc
repnz
daa
fistpll
fincstp
out
out
or
les
mov
out
fstps
int
jg
sub
lcall
xor
fdiv
sub
cmp
andb
push
and
xchg
jae
and
xor
jae
call
in
dec
pop
dec
xchg
dec
call
xlat
lcall
nop
mov
icebp
push
push
nop
inc
js
lret
aas
dec
jns
pusha
call
cmp
ret
mov
cmp
outsl
xchg
test
ljmp
sub
out
or
mov
adc
add
hlt
clc
dec
stos
jb
xchg
sbb
ljmp
das
aad
jmp
pop
pop
push
pop
cmpsb
and
sub
repnz
inc
into
jge
incl
or
xor
and
fdivrl
xor
sbb
mov
xchg
adc
pushf
stos
mov
fistps
mov
cs
dec
xor
aaa
cmp
adc
inc
mov
test
repnz
pushl
dec
pop
sub
test
cwtl
mov
sarb
leave
push
cwtl
sti
cmp
adc
cwtl
jg
push
stos
dec
lock
inc
jle
sahf
mov
int3
sbb
out
cmp
test
add
mov
mov
mov
add
es
adc
nop
sub
cmp
pop
jge
mov
add
pop
xchg
cmp
lods
mov
adc
subb
decl
insl
aad
mov
insl
pop
leave
test
std
dec
mov
pop
mov
ds
ljmp
xorb
and
scas
mov
sbb
mov
dec
es
data16
mov
aad
lcall
mov
xchg
mov
aas
fcoml
xchg
sub
call
jo
xlat
jmp
lock
ss
xor
jnp
xchg
xlat
jecxz
or
addr16
aas
pop
popa
lods
insb
jg
dec
mov
push
jg
xor
adc
rcrb
aad
cmp
push
and
mov
ljmp
sub
mov
repnz
insb
dec
ds
and
call
or
enter
jae
xchg
inc
mov
into
ret
xlat
dec
imul
data16
inc
push
scas
cmpsb
aad
push
lods
jp
loope
inc
jg
dec
ds
jmp
inc
pop
cmpl
xchg
ljmp
mov
pop
aas
fs
decl
xor
jne
sbb
mov
repnz
cmp
mov
pop
adc
mov
cmp
in
mov
jmp
clc
popa
mov
pop
into
imulb
pop
mov
int3
shrl
lcall
in
add
jno
jl
xor
imull
inc
mov
jg
cmp
push
xchg
ss
pop
xchg
aad
leave
jb
mov
cmpsl
decl
rorb
insb
push
in
mov
mov
add
mov
ss
sub
sub
lcall
add
and
dec
cmpsb
out
dec
mov
adc
sub
cmp
sub
pop
icebp
or
mov
inc
aad
out
sti
jns
or
and
inc
movsb
inc
loopne
test
pop
push
or
lcall
xchg
sub
pop
lcall
push
shlb
ds
ljmp
call
cmp
add
push
mov
push
fisubs
inc
rorl
call
pop
cmpsb
add
dec
pop
into
mov
jae
or
pop
lea
ss
mov
xlat
inc
movsb
stc
ljmp
mov
clc
xchg
push
sub
push
dec
imul
pusha
inc
lods
inc
loopne
stos
ret
js
mov
sub
mov
in
cmp
xchg
pop
orl
divl
push
add
sbbl
decl
jbe
sar
xor
sub
call
scas
test
repz
stos
lcall
mov
xor
mov
popa
mov
mov
repz
outsb
mov
mov
mov
cli
shl
mov
call
cmp
adc
enter
stos
aam
fcomp
pusha
lds
leave
mov
call
and
sbbb
cmp
pop
inc
pop
jnp
pop
cmp
out
sti
call
decl
or
test
sub
sub
push
js
jae
dec
icebp
aad
cmp
or
mov
test
stos
leave
mov
jno
pop
jmp
adc
pop
ja
dec
inc
rcrl
addr16
lcall
xchg
mov
mov
icebp
or
and
mov
or
pop
fildll
push
xchg
shl
dec
inc
fs
mov
nop
stos
add
fstp
and
mov
call
rcrl
cmp
or
pop
sbb
sub
mov
mov
jne
sbb
sub
mov
cmp
imul
cmp
pop
cmpsb
sbbw
or
adc
and
je
in
decl
lock
pop
mov
mov
jo
mov
xchg
add
jmp
add
or
adc
and
insb
mov
xchg
shl
add
pop
or
in
lret
adc
mov
decl
ffree
inc
dec
out
jno
jnp
cltd
addl
lret
xor
into
outsb
and
das
lcall
ljmp
cmp
inc
incl
inc
jbe
mov
je
xor
push
scas
xor
jmp
cmp
ja
int3
mov
lret
push
ljmp
cwtl
add
test
push
dec
pusha
adc
dec
sbb
cmp
sub
jg
pusha
cmp
jae
shrl
jb
mov
ret
pushf
jae
mov
mov
ficoms
push
ss
loop
int
test
incl
fsubrs
inc
xlat
inc
jo
mov
xchg
lods
leave
js
jmp
lea
push
mov
mov
adc
mov
mov
push
push
inc
fimull
xor
inc
fisttps
stos
pop
pop
addr16
mov
or
and
addb
out
jbe
out
cli
dec
or
fdivrl
add
aam
aam
push
js
bound
addr16
loopne
decl
fmuls
cmc
mov
popa
mov
or
and
sbb
xchg
jb
adcl
mov
push
aas
loop
adc
dec
pop
data16
jg
decl
add
mov
and
jbe
out
push
out
pushf
inc
insl
ljmp
sbb
xchg
jmp
push
mov
imul
in
loop
inc
push
xlat
ljmp
sar
mov
test
jp
addr16
insl
push
push
scas
sub
push
stc
incl
mov
or
dec
sahf
mov
rclb
cmpsl
sbbl
call
mov
cmc
testl
add
cmp
jl
jnp
incl
mov
mov
xchg
lods
fists
pop
mov
push
xor
ja
pop
jp
jnp
adc
pushf
shrb
in
sbb
xchg
mov
mov
push
popa
or
ret
sub
xchg
stos
mov
sub
push
ljmp
cli
clc
inc
cmpsl
icebp
xchg
xchg
xor
stos
mov
ds
ret
insl
lods
mov
xchg
xchg
mov
jmp
xor
mov
xchg
int3
adc
pop
fidivrl
inc
cmc
subb
sbb
or
icebp
imul
pop
js
cmp
add
lcall
push
jns
jo
incl
add
jge
add
xchg
xchg
out
mov
jb
cmp
sub
ja
xchg
mov
mov
mov
fsubrp
cli
decl
fldenv
sub
lret
mov
inc
mov
movsb
mov
dec
dec
je
xchg
js
adc
neg
mov
in
aas
and
mov
shlb
inc
lahf
jmp
fwait
ljmp
jmp
adc
sbb
sub
fcomip
push
sbb
pusha
sbb
popf
cltd
shlb
mov
pop
jp
cwtl
idivb
push
jmp
jl
rorb
test
and
leave
icebp
sub
add
jae
jnp
mov
fdivl
ja
loopne
pop
sbb
mov
xchg
dec
mov
mov
jnp
lea
out
dec
pop
in
cmc
sub
lret
negb
ljmp
pushf
insb
xchg
add
dec
xchg
out
mov
out
enter
jecxz
repnz
adc
xorb
jb
pop
inc
add
andl
cmp
scas
mull
call
mov
lahf
clc
js
xlat
ljmp
call
out
repnz
jae
aaa
cmp
mov
lcall
xchg
lret
jmp
rorl
mov
jmp
outsb
in
je
xchg
fmull
xchg
lock
xchg
add
ret
fisubrl
add
sar
pushf
push
fmuls
gs
fdivp
sub
cltd
jo
decl
stos
xchg
cs
jmp
mov
push
sti
pusha
in
arpl
add
pushl
cmp
xchg
cmp
ret
mov
ja
xchg
sub
ja
scas
jno
pop
cmc
pushl
pusha
push
das
aaa
pop
mov
add
je
sbb
ljmp
mov
mov
sbb
jae
lock
enter
sbb
enter
jg
movsl
aam
jp
or
fidivrl
aad
filds
dec
add
or
mov
test
les
inc
mov
pop
mov
cmpsb
push
jmp
or
subl
rorb
or
jb
jo
push
add
jp
sbb
xchg
push
sbb
popl
imul
push
push
arpl
data16
call
out
or
sub
pushl
add
add
cltd
nop
int
daa
andb
cs
xchg
mov
mov
shrb
push
or
cmpsb
cwtl
add
into
mov
wbinvd
pop
jo
sbb
psubsb
insb
mov
sbb
jo
js
data16
dec
outsb
je
dec
insl
js
adc
or
push
or
add
decl
jg
ljmp
lret
push
lea
mov
ljmp
jno
cltd
adc
push
jmp
test
lahf
or
push
cmpl
pushl
adc
aas
jbe
xchg
enter
sbb
bound
jg
addr16
pop
dec
nop
mov
or
add
iret
mov
mov
aas
xchg
imul
fists
lcall
xlat
xchg
lods
cmp
mov
clc
movsb
mov
adc
xchg
outsb
test
aam
cli
ja
mov
and
or
jmp
pop
sub
mov
push
rol
adc
adc
mov
outsl
cmc
mov
call
push
aas
cwtl
cltd
xchg
mov
or
sbb
xchg
fcoml
pop
insb
mov
add
test
call
mull
pop
cmc
xchg
mov
dec
or
pop
inc
push
xchg
ljmp
fsubrs
stc
shl
push
xor
test
inc
loope
sti
mov
pop
adc
xor
testb
lea
pushf
pop
inc
call
and
pop
dec
push
incb
or
test
sub
ljmp
imul
pushf
push
pusha
sbb
and
and
mov
push
fcos
jg
inc
sub
xor
mov
xor
xchg
pop
pusha
not
sbb
mov
cli
test
adc
pop
xor
or
sarb
clc
call
invd
and
xlat
neg
push
out
and
inc
jmp
add
jb
fwait
in
fcmovb
sahf
and
retw
push
stc
cmc
test
xchg
call
int3
adc
or
mov
lock
xor
call
xor
push
add
enter
jns
fcompl
stos
pop
pusha
mov
pusha
push
mov
cld
callw
std
call
dec
call
pusha
pusha
mov
push
repnz
out
pop
in
aas
xor
lds
or
mov
rcr
mov
mov
ds
push
inc
loope
inc
jp
loop
or
lahf
cmpb
incl
push
jmp
ret
setae
dec
hlt
lea
jg
lock
cmp
mov
nop
aaa
push
stc
mov
sub
icebp
ljmp
or
cmc
add
test
not
cmp
push
loope
aas
jg
add
mov
or
gs
sbb
fldenv
inc
jmp
fidivs
rep
pushf
push
mov
cmp
or
add
or
xchg
call
xlat
mov
loop
addr16
cmp
adc
inc
ret
adcl
jp
cmp
call
mov
pushf
jmp
push
stc
sti
adc
and
mov
bound
fadd
pop
jl
call
pusha
jmp
cwtl
xchg
sbbl
js
rorb
fdivrl
adc
fmull
and
or
xor
push
xor
cmp
test
mov
mov
pushf
mov
adc
jo
jge
out
push
mov
push
lret
stc
mov
testl
outsb
add
jno
jecxz
mov
test
aas
call
loop
jg
sbb
aas
inc
push
je
outsl
inc
test
les
or
addr16
push
ret
ret
sbb
dec
test
cmp
or
xor
jne
loope
imul
jl
call
scas
and
push
sub
mov
clc
sbb
jbe
push
push
adc
and
test
into
push
pop
mov
fsubp
mov
jge
lahf
pop
mov
push
jmp
cli
or
je
xchg
std
mov
and
push
cmpsb
or
push
push
adc
sbb
and
mov
rcl
jl
xchg
sbb
xchg
icebp
push
insl
xor
mov
push
sbb
xor
and
loopne
imul
jecxz
loope
dec
jae
mov
iret
out
dec
pushf
sbb
call
jmp
incb
and
addb
push
xor
add
scas
push
or
mov
and
push
loope
xor
sti
adc
or
divb
add
pusha
jecxz
jecxz
iret
stc
test
mov
push
ud0
push
dec
enter
mov
andl
bnd
bound
ss
loop
pop
cwtl
jns
pop
negl
and
sbb
jp
ficoms
dec
lods
int
ss
insb
mov
popl
xor
test
aad
or
jmp
or
jmp
sbb
pushf
sahf
mov
scas
push
push
dec
pop
or
pusha
call
ds
imul
jmp
sub
movsb
push
sub
incl
int
fisubrs
scas
cmp
xor
push
fsubrp
fdivrs
push
ret
push
sahf
loopne
ljmp
int
lcall
mov
pop
cs
test
push
or
and
pop
pop
mov
pop
jo
push
mov
idivb
fistps
sub
push
and
jmp
ret
outsb
fsubp
or
mov
lock
pusha
push
mov
je
icebp
mov
pushf
sbb
mov
call
xor
in
adc
jecxz
in
inc
insb
and
fldt
shr
shl
adc
cmp
xor
jno
xor
cmp
adc
jecxz
enter
loopne
test
fdivs
call
aaa
pop
cmp
add
inc
in
pushf
xchg
mov
loopne
xchg
je
out
sbb
ss
mov
pushf
push
cld
addr16
mov
and
lcall
in
xchg
lods
xor
icebp
adc
inc
mov
mov
clc
push
call
jmp
pop
lret
jno
aas
adc
push
sub
or
mov
mov
mov
adc
mov
outsb
mov
mov
stos
inc
seta
int3
sub
push
adc
call
mov
lret
inc
call
adc
enter
sbb
gs
rcll
jo
sbb
push
jle
int3
mov
clc
outsb
fidivrl
or
lahf
fs
push
jb
sbb
xor
test
xchg
and
lret
jb
sbb
jnp
inc
pushf
dec
xor
add
test
mov
ja
fs
jmp
push
cld
adc
mov
mov
int3
cmp
ja
jmp
dec
add
or
les
sbb
idiv
cs
call
test
sub
iret
call
and
in
push
popf
arpl
call
aad
xchg
ljmp
or
xorl
loop
adc
jle
mov
jl
lock
fistl
cmpsb
and
xchg
rcrb
lds
loope
dec
sub
cmp
dec
sbb
xchg
xor
js
lock
push
popa
push
jmp
push
test
sbb
push
mov
or
xchg
mov
popa
shll
shr
insb
mov
jl
sub
sbb
clc
shr
and
loope
gs
pushl
push
mov
push
pushf
and
setle
stc
cmp
jg
jmp
test
jo
jge
cmp
stc
pusha
cmpb
scas
movsl
push
cmp
call
pop
pop
es
pop
xor
rolb
dec
adcb
or
sbb
cmp
jecxz
jo
addl
lods
fwait
dec
sahf
jo
ret
mov
sbb
xchg
or
rcrb
movsb
loopne
test
pxor
pop
cmp
out
push
popa
mov
pusha
mov
loopne
in
pushl
mov
add
pop
adc
sub
cmp
lcall
mov
xchg
pushf
insl
stos
int
pop
sub
push
jno
adc
add
repz
repz
lcall
loope
adc
data16
movsb
leave
mov
sub
cmc
call
mov
std
cld
sarb
in
and
divl
push
ret
add
pushf
pop
sub
loop
bound
inc
inc
jmp
cmp
sub
adcb
notl
push
pop
dec
daa
pop
test
jp
aas
fdivrs
mov
loope
jmp
pop
stos
ret
aaa
push
in
adc
adc
mov
mov
mov
aas
lock
pop
jb
es
or
sbb
stc
call
fs
sub
cmc
mov
xchg
push
nop
mov
cmpl
cmp
in
push
ficoms
gs
pushf
mov
mov
xor
fcmovnb
cmp
shll
mov
loopne
out
jecxz
addb
neg
jb
push
pushf
movsb
sub
add
decl
bt
shll
push
push
stos
dec
iret
orb
lea
add
test
leave
xchg
pop
pushf
lcall
je
mov
loop
mov
push
mov
jae
mov
sbbb
mov
out
inc
jmp
sbb
inc
je
cmc
stc
test
cmp
push
push
incl
cmpsl
push
lahf
mov
data16
outsb
pusha
jo
jmp
stos
mov
rorl
dec
mov
or
push
call
ljmp
enter
fwait
jl
and
pop
lea
pop
sbb
pop
aaa
pop
cmpl
sbb
clc
outsb
jmp
jmp
push
push
js
out
and
loop
dec
sbb
lcall
daa
pop
jl
sub
loopne
add
stc
clc
sub
test
jo
pop
loopne
jmp
lret
mov
sarl
pusha
mov
mov
lcall
push
jmp
jecxz
sub
pop
ffreep
lret
jne
dec
or
add
xchg
xor
push
sbb
inc
icebp
adc
cwtl
sbb
stos
data16
icebp
icebp
mov
pop
lea
push
sbb
lock
push
cmpsb
nop
loope
push
outsl
mov
dec
jge
repz
aad
rolb
jmp
sbb
cwtl
ret
addr16
xchg
inc
push
sbb
or
ror
sbb
wrmsr
mov
je
pop
ret
push
and
push
mov
mov
call
stc
lea
jbe
and
rorb
pushf
dec
mov
fmull
jmp
shlb
pop
loopne
or
sahf
into
repnz
or
pop
shll
shr
add
rorl
mov
sbb
movsl
testl
mov
test
sbb
jg
pop
mov
stc
decb
sbb
cmp
std
test
cli
movsb
test
stc
xchg
mov
mov
stos
ss
std
jne
or
test
out
and
adc
and
jmp
rcll
clc
mov
jmp
je
jl
sarb
loopne
xchg
pop
add
loope
cwtl
or
test
xor
hlt
flds
pusha
test
sarb
and
jle
mov
fcompl
sahf
xor
setne
ljmp
aas
pop
mov
mov
mov
add
add
cmp
jmp
fbld
faddl
add
call
in
call
push
adc
out
pushf
addl
std
jnp
ret
jmp
push
sub
daa
pushf
push
pusha
shlb
popa
add
push
lods
sub
push
pop
push
cli
sbb
jle
divb
fiaddl
inc
xchg
sti
aaa
push
mov
out
dec
sbb
add
cli
mov
jmp
jmp
fidivrs
and
jmp
push
adcb
jmp
test
aad
imul
std
hlt
ret
bound
push
call
lret
out
repnz
pusha
aam
mov
movsb
aad
push
out
repz
loop
call
pop
push
call
stc
pop
into
nop
into
sub
mov
adc
inc
xor
cwtl
mov
xchg
add
xor
xchg
js
mov
das
xor
shl
push
rcrl
mov
pop
pop
cwtl
out
fcompl
call
mov
sbb
stos
jge
test
jmp
div
incb
cmp
mov
in
push
dec
push
pop
sub
cld
and
sti
in
sti
push
loop
ret
lea
cmc
movsb
nop
push
xor
dec
mov
jp
adc
ds
xlat
leave
out
jmp
leave
je
xchg
leave
subl
mov
cmp
mov
or
insl
cmc
jmp
rcrl
pop
inc
stos
insb
sbb
ret
stc
dec
adc
add
mov
test
jmp
jecxz
pop
insb
cwtl
testb
ret
xor
adc
cmp
test
mov
dec
incl
shlb
nop
mov
jmp
dec
lock
sub
mov
fsub
xchg
clc
mov
dec
popf
xchg
and
jnp
loopne
add
cmp
mov
addr16
sbb
in
mov
cltd
mov
dec
aas
fucomp
addl
dec
jmp
pop
call
imul
sub
jle
pusha
push
jp
cmp
int3
push
stc
mov
dec
or
mov
inc
pop
test
icebp
and
out
dec
fsts
jnp
or
icebp
push
cli
or
mov
mov
sub
cld
fdivs
lock
hlt
or
pop
enter
jne
ljmp
mov
orl
push
xor
mov
jo
hlt
mov
mov
push
xchg
into
xor
and
mov
and
jbe
scas
xchg
and
mov
not
std
add
or
ret
icebp
mov
cmp
lcall
imull
push
jno
inc
dec
and
jmp
loopne
faddl
sbb
iret
push
lcall
ss
sti
call
fisubrl
jecxz
incl
adc
movsb
cmp
adc
push
push
ret
push
xor
jbe
and
pushl
or
lods
sbb
pop
fstps
icebp
push
jp
xchg
insb
add
jo
xchg
mov
decl
inc
add
xchg
lret
in
dec
addl
cmpl
xchg
fldt
or
mov
das
jmp
sbb
repz
mov
xor
dec
das
cli
incl
push
push
imul
and
fiadds
stc
in
in
shl
push
cwtl
adc
call
jne
mov
pusha
mov
scas
and
fcoml
out
mov
xchg
xlat
js
int
dec
out
push
xor
and
mov
inc
and
icebp
dec
mov
ja
call
cs
mov
out
push
dec
out
or
call
pop
test
jnp
xchg
pop
daa
dec
in
xlat
das
popa
fildll
jmp
ficoms
incl
push
lock
std
std
test
xchg
mov
dec
sarb
cwtl
enter
mov
fidivrl
pop
push
ss
sbb
int3
in
jge
jmp
mov
ljmp
loope
and
test
sbb
pushl
out
cmp
mov
or
movsl
test
mov
sbb
pop
nop
enter
push
sub
fiaddl
xchg
add
cwtl
sarb
adc
and
adc
jg
rolb
dec
push
shr
pushf
cmp
add
inc
lcall
aam
push
sub
test
insl
cwtl
rcll
les
push
inc
push
stos
xor
ljmp
repnz
sbb
xchg
inc
add
fs
mov
ret
jb
pop
enter
or
call
mov
outsl
mov
xchg
clc
dec
inc
sbb
jg
aam
pop
int
adc
test
xor
popa
add
mov
mov
inc
inc
out
cld
dec
filds
push
test
mov
mov
pop
lcall
xchg
mov
xchg
imul
xor
mov
lahf
int
scas
in
sub
dec
dec
or
pop
mov
mov
dec
data16
outsl
jle
or
shll
push
ja
lock
fwait
jno
mov
incl
mov
xchg
mov
mov
inc
xor
add
out
pop
ficomps
xchg
arpl
jo
dec
arpl
jl
dec
sti
das
lods
and
fdivl
pop
out
fbstp
in
or
sbb
aam
pop
lret
xchg
in
shlb
je
jg
nop
mov
xchg
jmp
nop
adc
jle
add
jge
inc
shl
repz
mov
stos
and
fs
mov
les
bound
pop
mov
aas
daa
xchg
push
jns
ja
cmpsl
dec
enter
cs
xor
lods
stc
cmp
das
pushf
fnstsw
fisubrl
aaa
ja
mov
fst
push
pop
lret
fsubrs
xchg
push
xchg
push
pushl
xchg
jge
sbb
inc
data16
and
ljmp
outsl
decb
movsl
adc
pop
fiadds
addr16
insb
adc
icebp
in
jl
add
les
sub
pop
movsb
dec
daa
pusha
push
scas
or
outsl
pop
dec
jge
fxam
and
and
pop
ret
mov
fdivrs
mov
in
sahf
and
xchg
inc
popl
jnp
es
in
and
adc
shrb
aas
jb
adc
mov
xchg
push
mov
ret
jge
ja
ret
frstor
or
or
mov
call
cmc
aam
push
ret
fildll
fwait
ss
fstpt
lcall
stos
fcmovbe
pop
mov
inc
outsb
call
lods
movsb
and
lret
call
sub
fmull
xor
jg
arpl
enter
dec
jnp
and
push
pushl
insb
xchg
xchg
sub
jb
in
outsb
inc
dec
aam
cld
or
call
cwtl
out
out
fwait
sar
ljmp
mov
add
lods
push
adc
xchg
scas
test
lahf
push
adc
nop
dec
fwait
adc
dec
mov
outsb
jns
rol
pusha
jl
sub
jl
pop
lods
sub
xchg
out
pop
add
int
pop
hlt
jae
in
es
mull
aam
pop
shl
push
lcall
cwtl
mov
mov
push
ficoml
scas
mov
add
push
cmp
lds
daa
lock
fmull
decl
mov
int3
fiadds
in
adc
add
push
push
lcall
test
mov
loopne
jb
bswap
mov
jecxz
sub
push
hlt
jp
jg
pushl
cmpsb
insb
or
stos
jg
xchg
mov
js
das
roll
xchg
mov
jecxz
sar
ljmp
movsb
imul
js
fldt
aad
mov
or
mov
pop
sbb
sbb
repnz
jmp
cmp
ret
dec
inc
aad
push
test
xor
fimuls
stc
out
repnz
mov
mov
or
xor
xchg
outsb
aas
lock
cmp
fsts
inc
bound
gs
shlb
pop
cmp
repnz
ret
repnz
lcall
nop
xchg
dec
test
and
std
pop
pop
mov
fistl
pop
enter
jecxz
xchg
jmp
or
xor
adc
dec
insl
addr16
pop
arpl
mov
dec
in
and
or
pop
mov
mov
push
cmp
rcr
inc
push
lds
jne
lahf
cltd
movaps
movb
jb
add
cmpsb
sbb
jg
jmp
push
imul
adc
ja
xchg
mov
fsub
outsl
push
incl
insb
and
das
mov
iret
sub
pop
sarl
loop
and
inc
insl
mov
int3
mov
jg
ja
adc
test
into
in
jns
addr16
iret
dec
inc
aad
jno
outsb
inc
shl
ds
cmp
orb
mov
ja
dec
mov
and
loope
jg
xor
shlb
out
subb
fwait
into
loop
in
pop
subb
add
cmp
cmp
inc
clc
xchg
aam
fwait
aaa
dec
dec
pushl
out
and
mov
and
sti
imul
pusha
cwtl
pop
sub
sar
push
adc
jg
jmp
loope
ljmp
add
into
les
jl
in
inc
xor
push
inc
push
into
addr16
movsl
mov
jns
sub
fnstenv
pop
into
movsb
sbb
insl
push
pop
cld
aas
lcall
jle
push
insb
add
cmpsl
js
xchg
mov
punpcklwd
in
adc
call
sub
push
mov
movsl
xchg
popf
enter
push
and
aas
jmp
adc
inc
mov
cmp
int3
inc
inc
inc
mov
decl
into
out
cld
fiadds
and
xchg
or
scas
imul
mov
fists
push
pushl
push
shrl
in
repz
lcall
test
ss
rorb
cmc
mov
inc
cwtl
cltd
dec
jg
push
mov
jl
in
out
sub
push
les
fs
and
sar
or
test
out
outsl
loop
call
and
out
inc
mov
outsl
dec
repz
mov
in
loop
imulb
sahf
and
icebp
pop
push
into
cltd
jmp
nop
mov
add
lea
cwtl
sbb
push
cld
idiv
jmp
js,pt
mov
jge
xchg
mov
sub
scas
loope
rolb
call
int3
inc
loopne
sub
pop
jl
mov
fldt
or
mov
pop
mov
aas
les
sbb
mov
aaa
lcallw
push
enter
lock
jmp
mov
in
std
repz
push
clc
xor
aad
fs
push
cmp
and
das
jo
inc
push
rcr
cwtl
lcall
inc
jmp
add
and
stc
pop
sahf
orb
mov
xchg
sub
cmp
daa
jae
adc
out
sub
push
ret
pop
std
aaa
stos
or
aad
push
cmp
bound
mov
pop
arpl
aaa
push
js
aaa
inc
sti
mov
jle
add
xchg
fsub
mov
ret
inc
ret
fs
and
ljmp
hlt
xchg
jb
add
stos
sbb
or
push
dec
and
inc
cltd
insb
or
movsl
cld
jmp
push
icebp
add
inc
or
jecxz
fstps
in
stos
fwait
xchg
sub
call
lcall
inc
iret
jg
stc
inc
mov
cmp
ret
aad
gs
arpl
pushl
fiadds
mov
lock
inc
out
mov
jmp
xchg
dec
pop
lahf
lock
rclb
out
outsl
andb
fwait
rol
fisttps
jmp
xlat
push
xor
push
ss
cli
sbb
scas
mov
dec
dec
xchg
and
xchg
int3
mov
cld
sbb
and
and
push
ret
popf
and
mov
dec
cmp
out
outsl
dec
call
jbe
aas
call
adc
adc
je
mov
and
add
fdivp
shl
or
pop
and
push
xchg
outsl
cli
lcall
mov
add
xor
lods
insb
and
jg
push
sbb
rclb
add
je
mov
lds
hlt
dec
push
xchg
mov
pushf
xchg
fcoms
fidivs
mov
mov
addr16
inc
mov
in
mov
inc
dec
aad
cmp
aad
fimuls
stc
loop
icebp
fs
outsl
fwait
out
lcall
jae
mov
xchg
fidivs
outsl
jo
and
fwait
inc
popf
int
sub
push
pop
xor
ret
jg
mov
repnz
mov
ja
or
mov
ja
aam
outsl
out
es
dec
dec
or
loopne
jnp
sbb
decl
mull
outsl
aas
das
jmp
jns
out
inc
mov
fwait
out
sub
in
add
push
pop
repz
and
mov
xchg
or
dec
decl
and
jmp
mov
arpl
loopne
icebp
pop
fucomip
jg
insb
add
mov
rorl
jo
idivl
lret
inc
sub
jecxz
scas
lahf
xchg
fsubrs
and
mov
mov
packssdw
sbb
ljmp
jne
dec
mov
push
into
inc
inc
aad
cwtl
lds
xor
cli
adc
mov
xorl
jo
dec
push
push
fadds
adc
outsl
mov
lahf
push
out
loop
inc
bound
rcrl
lret
loop
pop
mov
andl
bound
idivl
fiadds
outsl
ljmp
xchg
sub
lods
mov
fnstenv
sahf
and
ljmp
inc
lret
push
add
cwtl
data16
cwtl
dec
pop
inc
sub
jg
jmp
add
enter
call
jae
js
out
mov
push
into
push
push
cltd
mov
lcall
jb
or
mov
repz
scas
xor
std
push
out
mov
push
stos
push
mov
iret
cmp
insl
fs
mov
in
jl
jmp
sub
popf
nop
mov
repnz
or
mov
aaa
decl
pop
adc
cmpsb
cli
mov
xchg
lds
sti
push
lods
arpl
lods
cld
mov
stc
in
repnz
fwait
jg
pop
mov
movsl
lea
push
hlt
es
adc
dec
fdivl
hlt
ficompl
in
popf
push
aaa
call
insl
mov
stos
addb
testb
dec
mov
inc
inc
mov
sahf
mov
mov
add
rcrl
sub
pop
inc
dec
mov
repz
pop
pop
arpl
js
in
inc
decl
in
mov
out
shll
mov
inc
in
push
push
lds
jecxz
ss
inc
sub
mov
push
into
test
pop
ljmp
lea
addr16
xor
jns
rorb
iret
sar
incl
aad
jae
lods
jecxz
jae
into
sub
lahf
xchg
mov
inc
mov
shll
jmp
adc
dec
test
cltd
cmp
enter
pop
jnp
std
jmp
ror
fiadds
stc
jmp
leave
jnp
sub
cmc
lods
lds
aas
push
dec
adc
out
fs
neg
shrl
pushf
into
jg
mov
sub
xchg
repnz
add
mov
dec
mov
xchg
das
push
or
andl
repnz
out
sub
inc
push
mov
adc
push
cwtl
dec
nop
loope
pop
movsb
dec
insl
pop
and
lahf
and
cli
jo
ljmp
inc
and
inc
add
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
xchg
push
inc
push
adc
incb
dec
inc
pop
pop
adc
mov
movsb
add
push
or
inc
xchg
je
add
movsl
or
push
push
or
ja
inc
imul
cmpsb
or
popa
adc
je
mov
dec
popa
inc
jb
popa
or
and
fwait
mov
sahf
push
push
outsl
jne
arpl
push
jb
mov
imul
repnz
mov
inc
imul
push
lret
outsl
sub
ljmp
test
dec
add
sarl
imul
imul
imul
inc
mov
push
outsb
xor
mov
push
push
imul
xorl
sbb
mov
dec
data16
addr16
fwait
inc
jo
xor
xor
sub
sbb
push
outsb
push
inc
je
roll
lods
cmp
jae
daa
push
les
shl
ja
jmp
jnp
push
shlb
xchg
xor
jb
mov
add
inc
outsb
jbe
outsl
stos
lock
popa
mov
bound
or
imul
std
int
jo
test
push
je
jo
outsb
outsw
clc
loopne
cwtl
and
jb
push
push
or
stos
mov
jo
sbb
fadds
gs
cltd
lret
sub
adc
adc
int
xlat
cltd
rcr
sbbl
mov
ja
arpl
mov
sbb
mov
sub
adc
fstpt
jb
sbb
adc
aas
xor
inc
jg
in
push
test
pop
jns
outsb
mov
fs
cmp
gs
loopne
popa
popa
inc
push
ret
and
lcall
es
or
addr16
adc
insl
xor
mov
insl
jne
push
cmp
jb
fs
lret
mov
imul
lcall
pop
jae
jo
or
frstor
je
jo
dec
outsb
push
outsl
insb
data16
dec
lock
shll
mov
shl
push
jmp
jo
push
mov
add
leave
add
pop
jecxz
xor
inc
roll
in
lahf
jmp
add
mov
push
lods
insb
ljmp
in
ljmp
and
xor
fs
jo
or
out
xchg
ja
jmp
pop
gs
add
pusha
bnd
jmp
pop
testl
jnp
inc
add
dec
and
sti
xchg
sub
shrb
jb
and
add
stos
lea
push
add
lahf
jp
sub
and
add
push
add
and
lret
add
cmp
lahf
rclb
notb
and
xchg
test
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
