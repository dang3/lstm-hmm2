insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
in
pusha
outsl
cmp
xor
or
cmp
cmpl
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
sbb
cmpsb
jne
add
test
adc
mov
mov
mov
in
ds
je
test
inc
xor
fdivrl
into
mov
inc
push
imul
stc
push
inc
add
in
loope
dec
adc
jae
into
mov
push
or
add
icebp
movsl
es
pop
adc
add
xchg
sub
or
xor
push
jbe
pop
push
loopne
ja
nop
sub
or
enter
enter
xor
rcr
push
bound
add
nop
push
ja
jg
add
fs
je
sub
in
clc
leave
sbb
adc
cs
push
push
movsl
insb
mov
pop
sar
daa
dec
ja
mov
outsl
arpl
or
daa
or
push
and
cmpsb
fstps
fs
and
lret
cmpsb
imul
shll
aad
sbb
shll
pop
and
ds
lcall
mov
sub
cmpsb
imul
imul
dec
shrl
and
dec
pop
shll
xchg
sahf
dec
shll
testb
cmpsb
imul
cmpsb
imul
insb
lcall
adc
mov
lret
lcall
push
dec
xor
mov
sbb
mov
mov
fwait
cmpsb
xchg
mov
mov
lcall
lret
mov
mov
fsub
imul
push
cmpsb
imul
imul
dec
shll
lcall
mov
adc
sbb
mov
push
ret
lcall
mov
inc
mov
push
fs
or
ja
xor
pusha
imul
dec
outsb
je
je
xor
cmp
adc
popa
fs
sub
xchg
mov
je
push
jne
jns
outsw
inc
aaa
dec
std
sub
outsb
push
jb
adc
adc
dec
imul
mov
inc
xorb
or
add
pop
push
or
lahf
xchg
xor
mov
add
aaa
sbb
pusha
add
add
inc
add
test
push
pop
pop
add
or
or
add
add
sbb
pop
fstps
jmp
add
add
and
cmp
pop
ss
add
ret
xchg
aas
mov
xor
or
shll
fsubs
incl
xchg
or
ljmp
cmp
adc
cltd
inc
xchg
ss
inc
xchg
pop
push
mov
inc
fisttpl
decl
fs
ret
cmpsb
pop
fdivl
das
xor
lds
adcl
xor
ud2
push
add
outsb
sub
pop
add
das
adc
push
packsswb
je
jne
jb
gs
sbb
pop
inc
or
push
sub
add
decl
pusha
aas
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
addr16
xor
jle
mov
push
sbb
xor
insl
rolb
add
or
stc
pop
pop
cs
add
imul
insl
xchg
push
dec
inc
push
push
inc
test
in
push
inc
dec
adc
outsl
data16
imul
outsl
and
dec
push
inc
jne
jb
outsb
je
jae
outsl
outsb
dec
push
jge
test
inc
popa
jb
push
aas
stos
jle
mov
pop
mov
mov
inc
addr16
xor
xlat
dec
inc
and
sbb
mov
lret
je
insb
nop
je
or
fstpl
or
outsl
and
outsl
jne
jae
addb
adc
popa
dec
or
sbb
mov
push
imul
cli
push
cwtl
cmpsl
pop
mov
je
xor
push
in
xchg
jns
xchg
sbb
mov
je
lahf
jne
jno
sub
jne
pusha
gs
fnstenv
adc
jp
xor
mov
addr16
sbb
push
bound
inc
stos
jl
cmp
ja
sub
cs
inc
dec
dec
inc
dec
inc
das
cmp
imul
mov
inc
dec
sbb
arpl
imul
aas
jo
outsl
or
lock
add
and
outsl
aam
jnp
das
mov
popa
outsl
dec
repnz
addr16
push
jb
gs
xchg
add
test
xchg
imul
adc
cmp
ja
pop
adc
push
mov
imul
jns
and
add
sbb
adc
into
mov
stos
pop
inc
add
imulb
push
arpl
cmp
or
test
inc
arpl
add
hlt
add
pop
repz
pop
push
pusha
or
xchg
add
xor
stos
iret
les
push
inc
pop
inc
das
sub
add
dec
jae
pmaxsw
mov
pop
mov
pop
jb
leave
in
pop
sbbl
xchg
pop
pop
scas
mov
dec
scas
push
add
out
add
cli
sub
mov
add
fistpl
xor
sbb
mov
in
mov
push
mov
call
push
push
dec
xchg
mov
sub
pushl
jmp
movb
add
push
push
std
mov
insb
outsb
popf
orl
in
cmp
add
mov
xor
mov
arpl
add
push
in
adc
scas
stos
std
jae
sbb
add
mov
or
scas
push
push
push
call
jle
pop
insb
in
add
movb
sub
sub
push
add
lea
push
lea
call
out
push
insl
imul
ret
imul
mov
test
out
jne
push
lret
or
pop
push
add
or
je
test
mov
mov
insl
and
lcall
push
mov
sar
movzbl
rcrl
fstpt
adc
mov
andb
mov
or
push
xor
xchg
fstpt
cli
insb
inc
pop
cmp
pop
jl
xchg
js
iret
add
pop
xchg
push
pop
dec
sbb
add
dec
xor
xor
aas
stc
add
add
les
add
mov
adc
adc
adc
add
and
nop
add
adc
rcrb
mov
sbb
adc
or
fldenv
add
push
push
pop
and
adc
adc
adc
sub
xchg
push
and
jg
shlb
cmp
jne
dec
add
lret
mov
leave
inc
push
cld
nop
addps
sbb
add
shr
xchg
and
ds
add
sbb
adc
xor
or
pop
pop
or
cmp
outsb
pop
in
pop
pop
mov
je
and
divl
adc
pop
cmp
ja
divb
add
or
jae
repnz
loopne
popa
sti
outsl
call
mov
cmp
out
jmp
cmp
jb
sub
sub
jmp
addl
or
sbb
hlt
mulb
adc
jmp
pop
loope
xchg
push
int
or
add
xchg
rclb
mov
jmp
push
mov
add
jmp
adc
and
pop
aad
push
pop
call
js
sarb
mov
dec
ret
jge
mov
fnstcw
dec
fistps
sbb
orb
push
js
insb
sbb
sub
mov
mov
dec
cmp
lock
add
mov
in
int
movsl
movsb
mov
pushf
fimuls
add
adc
rep
sbbb
or
int3
or
roll
mov
push
cmp
movsb
pop
dec
pop
mov
lret
mov
rolb
or
sarl
push
mov
outsl
mov
notb
sbb
flds
pop
or
sbb
insl
sbb
jle
jecxz
add
lds
xor
mov
bound
hlt
movsb
adc
jo
ret
adc
clc
call
dec
push
or
pop
jbe
out
pop
push
or
add
stos
adc
lock
test
jbe
loop
and
push
pop
call
sub
adc
lock
insl
lods
jecxz
mov
inc
inc
inc
jmp
fstpt
ds
vmulss
cmp
jne
xor
insl
fisttpl
rorl
adc
fucomi
ficoml
adc
andw
mov
xor
subl
mov
mov
jb
mov
movsl
and
mov
orl
push
push
pop
testl
adc
mov
or
push
sub
out
or
std
xchg
out
mov
lea
cmp
shll
jne
and
out
mulb
mov
ss
push
add
in
jmp
out
call
out
fdiv
lods
xor
lsl
push
jo
adc
fwait
jmp
iret
or
mov
or
movl
ss
out
sub
daa
or
nop
pslld
js
add
je
add
xchg
pop
leave
daa
pop
xor
adc
and
cmp
add
push
xor
add
cmp
add
pop
cmp
or
nop
xor
adc
add
xor
add
dec
gs
gs
cmpl
movb
fnstcw
or
fs
bound
fs
mov
push
mov
mov
pop
jmp
adc
sub
push
out
rcrl
jno
adc
adc
and
add
add
mov
jbe
push
outsl
sti
add
shlb
add
push
je
std
xchg
push
pop
and
int3
mov
pop
mov
push
jmp
insl
sti
sbbl
jmp
add
sbb
mov
loop
call
add
mov
cmpsb
sub
pop
inc
idiv
adc
idiv
pop
test
sbb
jmp
andb
mov
jmp
xor
mov
subl
mov
leave
xor
adc
cmp
call
add
push
call
adc
adc
or
mov
aam
ret
popf
aam
adc
adc
or
add
aaa
in
inc
mov
mov
and
clc
or
fsubl
fs
ja
xor
mov
cmpb
shlb
test
or
jmp
icebp
mov
imul
add
andl
cmpsl
mov
or
inc
sub
and
or
mulb
add
push
add
adc
inc
jge
lock
clc
mov
mov
shrl
xchg
loopne
cmp
jae
jmp
std
mov
pop
lret
shr
add
stos
leave
adc
inc
push
mov
mov
sub
mov
jne
adc
sbb
mov
mov
jmp
in
jo
mov
add
loop
or
adc
or
add
add
jne
xor
movsl
dec
test
loope
add
add
fwait
subl
pop
decb
jno
cwtl
cmp
mov
not
and
adc
push
jl
and
or
add
lea
lods
fcmovbe
sbb
ljmp
fisubrs
add
push
repnz
not
and
mul
or
or
adc
arpl
shr
divb
push
js
repnz
aam
fildll
fmull
pop
inc
fisubs
fimull
add
lea
and
out
xadd
adc
pop
inc
sub
mov
lock
and
not
cmp
add
repz
pop
sti
int
sub
rorl
push
shr
or
add
dec
mov
jmp
daa
pop
jg
push
mov
add
lea
sbb
repnz
loopne
mov
jle
hlt
mov
not
and
lret
lods
push
fsubrs
shlb
ficoms
xchg
rcr
mov
roll
xor
pop
fiaddl
lods
mov
or
mov
adc
test
scas
loope
scas
roll
mov
ret
orb
sbb
pop
int3
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
roll
sub
add
pop
push
in
mov
xor
add
sub
ret
push
fcom
add
fisubrs
mov
pop
fnstcw
pop
xlat
mov
repz
nop
imul
xor
lret
ja
fmull
or
xchg
jno
pop
fndisi(8087
popf
std
stos
lods
es
add
adc
fidivrs
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
xor
inc
cmp
sub
lods
mov
or
cmp
pop
or
popa
adc
add
or
mov
out
push
mov
mov
fcomp
ja
mov
bound
sbb
icebp
lods
pop
xchg
shlb
clc
jg
in
test
dec
cmp
inc
rclb
data16
or
fadds
hlt
push
and
lret
imull
clc
jb
repz
pop
pop
es
adc
jne
xor
inc
shll
and
mov
sbb
insl
and
call
fidivl
mov
xchg
call
xlat
lods
mov
fdivs
push
adc
add
jo
in
pop
rorb
fimull
out
fcoms
push
pushf
jecxz
xor
mov
xchg
fnstcw
out
adc
mov
jb
mov
out
aaa
pop
fidivl
and
sbb
loopne
fistl
popl
add
pop
aaa
or
movsl
imul
mov
push
fbstp
xchg
mov
cltd
xlat
sbb
jbe
enter
or
xrelease
call
inc
or
adc
out
or
fcmovbe
fsubs
js
mov
add
sbb
lock
aam
mov
mov
push
and
jge
daa
sub
aad
flds
outsl
adc
mov
movl
jecxz
fisttps
sub
iret
or
xor
xor
test
pushl
sbb
test
xor
jns
leave
insl
mov
xor
js
or
cs
js
aaa
mov
out
lds
popa
popf
insl
adc
inc
sti
xor
cmp
outsb
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
insb
movsl
neg
mov
fimuls
cltd
jb
jb
lret
fmuls
in
clc
pop
pusha
dec
mov
cli
xor
rcrb
mov
ds
lods
loop
out
or
mov
push
fbstp
jle
sub
jae
mov
imul
lock
cli
daa
mov
fimuls
xor
xor
test
popa
fidivl
jae
adc
fidivs
test
js
pop
out
cmp
in
fs
or
push
aas
sbb
push
clc
sarb
cmp
aam
cltd
js
mov
push
les
in
mov
stc
ja
idiv
ss
in
lret
jp
jl
pop
je
dec
fdivp
xor
cmp
lods
les
sti
cmp
cli
mov
fisubs
mov
stos
mov
mov
rcrb
sbb
push
or
in
jle
sbb
jl
inc
int3
or
inc
test
fs
or
lret
repz
mov
stos
adc
repz
and
jb
hlt
or
pop
jns
mov
adc
aad
scas
xlat
mov
fs
clc
cmp
pop
pop
gs
sbb
rcrl
or
lock
int3
or
push
xor
ja
jno
jns
mov
dec
jge,pt
out
call
vmwrite
shrb
lock
pop
test
out
jmp
dec
xor
out
loopne
jg
call
outsl
jecxz
addb
add
xor
dec
scas
dec
fistpl
loopne
sub
jecxz
jp
or
dec
fcmovnb
cmp
mov
sti
push
adc
add
mov
cmc
out
mov
lds
jp
arpl
ja
mov
in
repnz
fsubs
fiaddl
mov
pop
mov
sub
repnz
repz
sarb
roll
dec
mov
pop
cli
lret
pop
jge
xlat
pop
add
pop
movsb
mov
mov
mov
xor
aas
xor
roll
sahf
inc
js
cmp
push
mov
mov
cmp
ficoms
jl
js
sub
push
push
pop
adc
notb
test
jmp
xor
cmp
adc
mov
pop
fidivrl
lea
sbbb
aad
test
nop
iret
pop
pop
mov
mov
repnz
fbstp
adc
adc
add
sbb
test
faddl
cmp
jne
xchg
sbb
add
jo
sub
xor
stos
pop
cld
pop
insl
pop
cmp
mov
int
push
cld
call
sub
mov
aaa
mov
inc
inc
jmp
testb
out
or
testb
mov
sbb
and
les
fdivrp
pop
adc
lret
xor
add
pop
jnp
int3
push
loopne
xchg
insl
mov
add
fsubr
and
into
lcall
les
in
sbb
addr16
push
jl
push
or
call
iret
ljmp
push
jo
jl
stc
and
gs
neg
mov
jne
lock
pushf
mov
outsl
into
jo
pop
lcall
jnp
mov
rep
call
sbb
loop
les
add
mov
mov
lods
mov
mov
pusha
mov
inc
lods
outsb
les
fimuls
stc
fadd
push
pop
xor
and
sub
or
push
push
in
adc
push
add
push
push
ds
push
cmpsb
inc
add
mov
in
dec
out
push
out
push
mov
dec
inc
pop
mov
mov
test
adc
xor
push
into
insb
pop
test
add
fldt
repz
push
cmp
push
sbb
andb
test
int3
add
rcrb
or
ljmp
sbb
cmp
adc
sbb
add
push
push
mov
leave
scas
cmp
clc
cmp
add
xchg
je
pop
lret
imul
jo
or
push
int3
jbe
cmp
pop
imul
adc
outsb
adc
jnp
pop
push
mov
sub
int
mov
mov
push
sbb
jmp
sub
xor
xorl
add
adc
adc
cmp
sti
jns
mov
cmp
je
dec
dec
cmpw
jne
idivb
pop
push
arpl
inc
add
cmp
add
adc
push
sub
in
xchg
stc
sbb
punpcklbw
gs
imul
push
aad
subb
sbb
aad
jbe
cmp
fdivs
movl
push
or
push
je
fucomip
faddp
xchg
cmp
testb
mov
cmp
inc
mov
cmp
jne
push
js
add
push
outsl
call
jbe
ja
call
popf
xchg
mov
xchg
push
mov
xchg
add
loopne,pt
loopne
cmpsb
xchg
cmp
rsqrtps
cmp
push
inc
mov
cmp
subb
inc
test
adc
fwait
insb
and
test
stos
in
mov
les
xchg
ret
mov
mov
std
call
push
nop
or
fsubp
add
adc
mov
inc
mov
sahf
mov
xchg
mov
pusha
mov
sbb
mov
fsubr
cmpsl
je
pushl
pop
shrb
sub
mov
aaa
sub
cmp
int
sysenter
mov
or
sti
sub
mov
cmpsl
mov
add
sbb
and
testb
hlt
ss
lods
fmul
insl
cmp
sarl
mov
mov
test
rcrl
decl
int3
cmp
sti
ja
cmpl
cmpl
scas
or
repz
cmp
je
xchg
push
push
pop
dec
rcrb
add
mov
mov
js
in
sbb
pop
mov
sbb
pop
call
call
push
mov
cmpb
adc
push
je
jmp
imul
idiv
xchg
add
adc
push
push
jmp
dec
mov
push
cmp
ss
mov
rcll
xor
xor
push
mov
mov
jl
or
sti
mov
push
jo
push
int
fcmovnb
mov
nop
push
insl
mov
mov
xchg
lret
in
mov
mov
mov
mov
mov
mov
mov
mov
xchg
pop
outsb
mov
add
fnstenv
gs
insb
gs
and
mov
fmull
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
mov
push
loope
ret
rol
shrl
xor
lds
mov
leave
lret
insl
cmp
hlt
xchg
push
xchg
ss
xlat
xor
cwtl
cltd
lcall
fwait
pushf
adc
mov
insl
lahf
sub
mov
mov
movsb
inc
add
test
cmpsb
fnstenv
hlt
cmc
div
lret
imul
stc
hlt
cli
jns
ljmp
cmp
je
roll
add
in
xor
pop
xor
add
pop
sbb
push
sar
addr16
ss
inc
in
pop
subb
int3
jmp
mov
es
cltd
dec
pusha
leave
push
push
mov
and
pop
dec
rolb
gs
jae
hlt
cmp
sahf
cmpsb
inc
enter
lods
sti
inc
pop
pushf
in
sbbl
jg
out
jmp
test
sar
int3
push
and
sti
fs
or
loopne
mov
xchg
xchg
loopne
into
imul
cmp
pop
cli
inc
push
xchg
pop
mov
test
xchg
dec
lds
inc
sub
nop
jmp
aaa
xor
es
les
and
add
cmp
jmp
mov
nop
repnz
dec
outsb
xor
hlt
cli
call
or
test
daa
add
cltd
hlt
cld
push
mov
cmc
fsubrs
clc
std
pop
lds
out
fadds
stos
pop
push
es
or
mov
push
repz
push
popa
inc
bound
push
imul
icebp
lock
sub
mov
mov
mov
adcb
adc
and
test
sbb
and
mov
sub
je
cmp
call
mov
add
mov
push
push
mov
test
je
mov
adc
dec
movups
mov
call
inc
adc
or
lds
pushf
je
adc
arpl
add
mov
test
outsb
cmp
mov
outsl
push
or
jne
push
xchg
pop
inc
movl
test
cltd
scas
les
out
pop
adc
faddl
mov
hlt
fsubl
fimull
in
pop
hlt
adc
repnz
jae
cmp
cmp
cmp
popa
xor
cltd
rclb
push
mov
test
cld
cmpb
decl
cmp
jae
inc
stos
outsb
repz
call
inc
sbb
adcb
add
negb
pop
sub
ficoms
jns
shlb
or
movsb
sub
insl
dec
cmp
sbb
adc
jmp
pusha
sbb
repz
push
and
imul
ret
sbb
ret
mov
fidivs
and
dec
inc
hlt
mov
in
andl
arpl
push
xor
call
or
negb
pop
adc
jo
inc
mov
add
and
sub
jb
mov
cwtl
addr16
cld
cli
dec
xor
sub
outsl
jp
mov
insb
shll
push
imul
fidivl
fildl
push
data16
fidivs
fbstp
cmpsb
imul
bound
cli
sti
cld
std
insl
xlat
insb
int
cld
lcall
mov
add
xor
mov
mov
cmpsb
imul
roll
push
outsb
shll
mov
xorb
enter
pop
mov
pop
ror
dec
popa
js
mov
lret
je
outsl
outsb
xor
pop
inc
jb
icebp
add
push
jb
ret
sbb
cli
mov
ss
pop
mov
pusha
or
mov
cmp
sub
inc
mov
ja
push
stos
insb
adc
cmp
sub
hlt
add
xor
xor
lock
lock
imul
adc
imul
and
pusha
and
pushf
xchg
in
cmpsb
popa
cmp
je
cmpsb
imul
add
push
mov
add
or
fnstcw
or
inc
mov
push
cld
sbb
jo
mov
sub
int
add
and
std
push
add
mov
int
cmp
aaa
movsb
sub
in
andl
pushf
lcall
mov
jo
sbb
or
shl
push
sub
in
mov
ret
sahf
cmpsb
inc
add
clc
and
clc
and
cmp
and
fildl
or
mov
pop
xor
xchg
repz
and
sbb
hlt
in
shll
aad
fildl
cs
fcomp
cli
push
pop
push
adc
dec
in
push
or
xor
cld
jne
xor
cs
and
xor
adc
sub
push
mov
lcall
xchg
lock
jge
push
movsl
movsb
mov
xchg
pushf
push
pop
ret
sbb
stos
sub
lcall
sub
lcall
dec
mov
adc
or
pop
andb
add
pop
push
loop
sub
push
jmp
inc
movzbl
fs
inc
push
div
cmc
out
loopne
pop
inc
aas
or
std
and
or
and
push
dec
shll
add
and
pop
add
add
push
mov
push
dec
jo
ss
lods
push
icebp
popa
pop
repnz
in
repz
div
insb
stos
cmpsb
imul
lcall
cmpsb
imul
and
outsl
ret
sub
test
jne
add
and
pop
cwtl
xchg
xchg
push
orl
and
movsb
pop
pop
dec
push
orl
dec
inc
xchg
and
cmp
ds
sbb
adc
inc
call
inc
orl
test
cld
inc
cmp
push
dec
movsl
enter
sub
imul
inc
in
sub
sub
es
sbb
imul
cmp
lock
mov
hlt
lret
popf
mov
push
push
push
rcr
pop
inc
push
cmp
cmp
fcmovnb
jl
fsts
daa
fcomi
sub
sbb
popf
lea
pop
cmpsl
xchg
mov
dec
sub
js
and
push
xlat
lea
mov
rcrb
ret
jmp
sbb
sub
mov
cmp
push
cmp
mov
cmp
in
je
sbb
ret
xchg
push
mov
fdiv
mov
xchg
pop
clc
lret
inc
push
sbb
in
shl
insb
pop
insb
imulb
lods
cmp
jle
mov
xlat
sahf
sahf
cli
or
test
mov
pop
pop
adc
dec
sbb
adc
mov
sub
in
jne
outsl
aad
add
jl
jo
pop
call
mov
xor
push
push
dec
dec
fcoml
imul
push
cmc
cmp
nop
sbb
fucomp
nop
xchg
loopne
adc
addr16
cwtl
iret
adc
jmp
add
std
out
mov
sub
xchg
jl
nop
aas
xchg
sti
rcll
aas
loopne
mov
mov
test
push
decb
sbb
or
lods
sbb
data16
cmp
pop
push
daa
add
pushl
adc
mov
pop
mov
or
mov
mov
add
dec
cld
mov
cld
dec
sub
and
fidivrl
popa
lret
in
pop
cmp
jae
es
ss
shll
mov
cmpsb
pop
mov
jo
ss
mov
test
gs
xchg
gs
cmp
pop
xchg
es
dec
and
cmpsb
es
cmp
imul
cmpsb
imul
mov
je
das
enter
lcall
lcall
jae
rcl
shr
lcall
pop
xlat
aaa
fmuls
fwait
cmpsb
imul
and
rcl
imul
jae
arpl
jo
dec
shll
rcl
and
jae
jg
dec
shll
cmp
aaa
jae
enter
mov
dec
cmpb
incb
add
dec
paddusb
push
pop
bound
xchg
adc
fxch
or
push
add
push
push
leave
popa
cmp
ror
sbb
jle
xor
pop
gs
and
rolb
nop
mov
mov
or
push
or
adc
and
je
sub
push
dec
pop
into
leave
push
std
int3
push
push
xchg
repz
mov
sti
xchg
pop
or
mov
inc
cld
xchg
mov
mov
add
push
stos
sbb
jg
scas
mov
cmp
sub
fs
shl
pop
mov
pop
xchg
mov
in
and
je
mov
insl
lret
push
cmp
sahf
mov
cmp
xorl
pop
std
dec
or
pushl
pop
xor
sbb
add
and
test
aad
sub
push
adc
movb
popf
and
daa
fucomi
push
or
das
sbb
add
addr16
fimull
fxch
cwtl
in
add
pop
xor
fstpt
sahf
movl
push
iret
add
iret
inc
push
jb
test
out
adcb
push
pop
mov
pop
insb
arpl
or
shll
rcrb
in
cltd
lods
cmp
adc
mov
ret
jb
inc
mov
mov
push
shrl
sbb
iret
adc
std
inc
dec
sub
popa
push
icebp
shll
mov
xor
sbb
xor
jl
adc
sbbb
dec
ja
shll
mov
or
sbb
outsb
pop
jns
icebp
push
js
mov
sbb
inc
cmp
cmp
adc
and
xor
xchg
gs
mov
add
loop
mov
cmp
cmp
inc
xchg
xor
cmovno
test
call
xor
sub
jecxz
pusha
cmp
dec
cmc
xchg
sbb
cwtl
push
or
bound
fs
mov
jb
cmp
cmp
inc
inc
jne
push
jno
mov
pushf
push
ret
outsl
jl
insl
movsl
sbb
in
push
push
mov
mov
pushw
xchg
icebp
pop
gs
call
pop
sbb
das
dec
push
loop
loop
std
pop
and
hlt
xchg
xchg
push
xchg
push
add
pop
mov
out
jge
push
rep
or
cld
mov
nop
or
ss
in
sbb
lods
pop
call
shlb
lods
loope
mov
mov
outsb
nop
test
mov
cmp
stc
pop
test
ret
cmp
popf
cmp
add
aam
out
cmp
and
stos
sbb
jne
lods
push
adc
mov
or
adc
add
lret
divb
cwtl
in
fs
ds
mov
lods
cmp
in
jne
inc
inc
push
hlt
sbb
mov
adc
add
xchg
es
inc
in
mov
mov
into
xchg
mov
xchg
in
insb
mov
inc
cld
sub
daa
sub
dec
mov
push
jo
mov
mov
fwait
adc
push
mov
dec
sbb
jmp
push
inc
sbb
inc
aaa
push
addb
or
xchg
out
cmp
or
vfmsubps
sbb
add
test
push
pusha
push
lods
cs
push
push
insl
insl
cs
xor
lret
cli
fs
insb
cld
insb
dec
insl
and
dec
insl
jae
je
sub
shrb
dec
adc
int3
inc
sarb
push
cmp
rorb
push
sub
mov
daa
lret
insl
inc
je
dec
xor
ja
inc
insb
cwtl
gs
popa
ret
shrl
fwait
lock
sub
xor
dec
add
shl
inc
addb
mov
mov
lea
cs
sub
sub
shll
mov
add
xchg
adc
sahf
jne
loop
push
cmp
addr16
mov
testl
xor
je
mov
int3
outsb
ret
jle
dec
xor
mov
mov
dec
mov
cld
mov
add
jne
mov
xorb
and
test
xor
push
std
repnz
pop
sbb
mov
push
pop
int
lret
and
aaa
pop
adcb
ljmp
mov
sub
add
adc
rclb
mov
loop
push
sbb
mov
push
aam
mov
pop
or
aad
push
push
pop
or
xor
mov
pop
ret
aad
push
push
push
insb
xor
fdivrs
fidivs
push
push
imul
andl
add
push
cmp
mov
inc
loope
cmp
add
and
or
mov
cmovo
mov
cmpb
popf
push
les
mov
mov
icebp
jl
je
xor
pop
roll
adc
ljmp
xor
inc
into
xor
jno
repz
pop
jecxz
cmp
popf
lret
push
mov
pop
push
clc
mov
stos
sub
mov
or
add
rcl
fmuls
in
call
xor
mov
aad
push
int3
or
push
clc
sbb
and
pop
push
inc
mov
fisubrs
adcl
pushf
call
pushf
xor
mov
push
pushf
addb
insb
xchg
push
jp
pop
push
mov
jp
jb
test
cmp
int3
inc
xor
fbstp
pop
jnp
mov
cltd
mov
test
jle
mov
cmp
cs
hlt
xor
fldl
mov
adc
inc
and
push
filds
xor
or
dec
lock
loop
pop
negl
push
ret
add
stos
aas
or
add
jne
dec
hlt
push
xor
xchg
fldenv
dec
pop
xchg
gs
dec
inc
push
cs
insb
insb
test
fs
mov
or
inc
insb
jne
xor
mov
cs
insb
insb
inc
jnp
jg
pop
and
pop
outsb
lret
mov
je
push
jb
xlat
sub
scas
mov
push
movsl
cmpsb
pop
xor
push
pop
test
push
pusha
fsts
lods
lret
dec
je
pop
andb
dec
jo
gs
xchg
outsb
push
gs
xchg
insl
aaa
pop
gs
roll
aam
insb
fwait
cmpsb
imul
pop
rorl
xchg
gs
mov
inc
pushf
js
xchg
xchg
xchg
lret
insl
shll
cwtl
js
sub
push
xor
adc
je
mov
pushf
inc
push
fists
xorb
lcall
mov
mov
jbe
mov
mov
lgs
inc
jbe
mov
mov
mov
test
arpl
pop
sbb
mov
lods
cmp
and
fdivrs
adc
clc
add
mov
std
cld
rorl
aam
and
or
mov
and
fmull
adc
push
aad
cld
jne
push
leave
add
cmp
dec
mov
repz
mov
test
mov
jmp
push
pop
pop
xchg
gs
cmc
bound
push
sahf
js
fiaddl
je
incb
adc
adc
adc
out
pop
cld
je
insl
adc
mov
fisttps
shrl
movsb
or
repz
fimuls
cwtl
xchg
add
fisubrs
jne
jb
push
push
daa
push
ds
pop
ds
add
sarb
cmp
xchg
rorl
test
dec
hlt
enter
xchg
push
mov
sub
jae
ja
aas
add
add
sub
jbe
dec
sub
mov
or
call
lock
call
jl
pop
hlt
or
jbe
mov
faddl
cwtl
arpl
inc
cmp
out
fimuls
incl
les
mov
ljmp
je
and
ja
pop
xchg
gs
pop
xor
dec
jae
fsubl
out
call
gs
aad
arpl
jb
adc
jb
jbe
data16
sub
nop
call
mov
rcrb
add
lds
sbb
push
jne
inc
popa
mov
lcall
push
aaa
test
mov
imul
subb
jnp
xchg
call
push
inc
imul
and
insb
dec
push
mov
jmp
xchg
xor
cmpsl
jo
jae
dec
pop
call
call
fdivl
jbe
mov
incb
call
jne
jb
add
mov
pop
aaa
jle
inc
xchg
adc
sbb
add
shl
loopne
inc
loope
mov
rcrl
movsb
aad
dec
sbb
bnd
and
les
loopne
sbb
aas
popa
cltd
arpl
sbb
outsl
xchg
outsb
cmp
lcall
cmpsb
imul
imul
push
mov
enter
or
aam
popf
xchg
std
std
leave
bound
inc
int3
movsl
into
fs
sbb
std
lahf
dec
ja
nop
and
je
mov
lds
outsb
adc
sub
gs
outsl
jae
insb
mov
sub
mov
iret
push
or
in
dec
aaa
jnp
pop
sbb
lock
dec
pop
in
movsb
add
push
sub
cmp
in
sbb
fcomps
rolb
test
xorl
arpl
insb
mulb
cmp
sbbl
les
and
js
mov
loop
add
or
ret
sbb
push
andnps
push
or
add
push
push
je
xor
shll
insb
outsl
arpl
sbb
es
adc
andl
mov
jmp
movsb
mov
ror
clc
rorb
jb
hlt
je
cmpl
push
pusha
mov
icebp
sbb
lcall
cmpsb
or
incb
test
xor
stos
stos
lock
imul
or
push
popf
adc
jmp
xchg
arpl
cmp
pop
pop
xchg
and
pop
addb
and
cmp
inc
add
mov
push
cmc
pop
repz
loopne
mov
xor
xadd
mov
out
icebp
loope
outsb
fwait
or
clc
sahf
loope
and
mov
push
mov
movsl
push
and
pop
sar
push
add
dec
adc
add
xor
mov
loopne
cmp
push
xchg
lods
or
test
jne
inc
adc
in
xor
and
fdivrl
mov
adc
inc
fdiv
cld
mov
and
enter
xchg
dec
mov
xlat
add
fidivs
adc
cmp
es
mov
add
cld
stos
clc
rcll
cmp
or
or
cltd
std
cwtl
inc
cwtl
and
jmp
mov
lret
mov
je
outsl
outsb
lret
mov
lret
cmp
imul
mov
insb
imul
dec
lods
scas
scas
push
mov
imul
imul
lcall
or
jo
ret
les
imul
jne
sub
xchg
int3
fstpt
gs
xchg
gs
arpl
xchg
gs
xchg
outsb
cmp
xchg
xchg
gs
jb
jns
cmp
fwait
cmpsb
mov
ret
and
jb
xor
shrl
outsb
sub
insl
push
std
and
dec
mov
mov
dec
jl
dec
jne
or
jmp
push
and
enter
sbb
jmp
xor
cwtl
adc
cwtl
dec
outsl
adc
nop
aad
jle
inc
mov
mov
xor
xor
sbb
ja
jne
call
negl
pop
xchg
lret
xor
adc
cld
clc
shl
rcrb
aas
sub
mov
aaa
and
pusha
pop
jno
ja
and
les
mov
jae
arpl
xchg
xchg
imul
cmpsb
imul
inc
add
mov
jb
adc
sbb
sbb
repnz
ret
insb
jbe
xchg
sbbl
sti
lods
and
inc
in
scas
sub
lods
insl
enter
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
add
imul
outsl
popa
jb
lret
mov
je,pt
jb
roll
fs
fldt
enter
jmp
repnz
jns
out
aam
cmpsb
adc
ficomps
enter
inc
push
test
imul
insb
lcall
mov
xchg
push
xor
lods
mov
xor
push
je
stos
inc
push
mov
dec
fsubrs
jns
sbb
popf
je
insl
call
push
and
cs
pusha
call
je
in
sti
cmpsl
dec
mov
add
mov
adcl
push
clc
je
int
mov
and
jne
push
adc
test
sbb
ss
hlt
lods
xchg
jge
push
test
call
or
adcl
fstl
cmp
jmp
call
sti
mov
fwait
add
add
push
movl
imul
jl
sbb
or
loop
xor
mov
or
and
sbbl
lahf
or
es
jb
jns
int
add
ret
jmp
scas
or
and
out
nop
testb
sbb
movl
fsub
mov
sbb
in
mov
xchg
jecxz
dec
mov
and
in
push
add
out
out
sub
je
jmp
ljmp
leave
in
in
out
jbe
xor
ja
ds
sbb
shrb
xchg
jae
frstor
je
leave
shrb
outsl
loopne
cld
pop
mov
jb
cld
jecxz
in
in
or
inc
out
addr16
xchg
test
lcall
jle
je
popa
mov
jecxz
outsb
ds
pop
mov
or
push
adc
sub
push
repnz
pop
mov
cmp
cmp
pop
bound
xlat
rcll
or
rcl
jmp
xchg
inc
sbb
mov
sub
lock
or
dec
shll
pop
inc
inc
dec
mov
dec
roll
add
and
pop
push
mov
jg
jle
lcall
dec
inc
dec
xor
cmpsb
imul
fildl
push
fisttpll
cs
test
hlt
mov
shl
xor
mov
push
cmp
mov
cs
call
bnd
or
aas
jne
call
or
push
aas
inc
int
pop
pop
xor
mov
mov
add
popa
and
push
add
adc
mov
nop
add
mov
or
mov
push
fistpll
sahf
sahf
sub
test
int3
push
add
pusha
adc
mov
nop
les
push
cltd
ds
movsb
pushf
adc
and
mov
sbb
and
adc
mov
enter
xchg
sbb
addl
adc
pusha
mov
ss
jbe
push
push
outsl
and
in
adc
xorb
sbb
xor
mov
repnz
adc
inc
and
cltd
call
mov
fmull
push
call
mov
pop
dec
push
subb
push
cmpsb
jmp
mov
inc
in
imul
int
std
mov
add
mov
sbb
or
cmp
push
divb
outsb
push
orb
clc
stc
pushl
cmpsb
cmp
or
mov
sarl
jae
lea
dec
and
xor
mov
pushl
and
sbb
xor
inc
gs
push
lods
imul
enter
cmp
xor
divl
ds
and
and
xchg
push
sti
inc
sub
pop
mov
lods
addr16
and
fcomp
loope
or
or
icebp
rcl
aad
jns
hlt
insb
mov
mov
pop
rclb
call
lcall
push
iret
lea
lcall
call
sbb
dec
out
in
call
inc
adc
les
les
mov
int
mov
leave
push
or
int3
inc
scas
pop
ss
into
iret
pop
icebp
leave
and
scas
pop
and
add
push
push
fdivrl
fsubs
cwtl
mov
call
and
lock
or
shrl
dec
mov
mov
dec
mov
cmp
push
shll
mov
shrl
push
subl
mov
mov
clc
or
push
mov
shll
push
aad
xor
jg
add
test
scas
lret
xor
xorb
mov
mov
add
outsl
notb
adc
je
add
sbb
mov
lea
mov
inc
dec
mov
sub
call
incb
add
out
loope
pop
sbb
scas
shrb
shrl
dec
xchg
pop
xor
faddl
add
bound
mov
data16
and
mov
mov
and
pop
xlat
fwait
adc
adc
or
cmc
or
mov
je
repz
test
mov
pop
mov
and
push
add
mov
and
xchg
dec
dec
push
add
sahf
pop
jbe
loopne
adc
push
fs
dec
clc
and
leave
inc
ds
and
daa
orb
fcompl
and
cmpl
in
inc
and
sbb
mov
into
jle
cmp
push
add
mov
push
cmp
jle
pusha
push
jmp
fs
ret
mov
or
push
aam
sub
or
loopne
addr16
rcrb
jns
jb
push
pushl
pop
in
inc
aas
adc
aam
xor
pusha
adc
and
pusha
pushf
or
iret
fs
jbe
scas
push
cmp
faddl
pushf
jmp
call
fwait
inc
and
neg
fsubl
dec
and
adc
fcmovbe
aam
jbe
jne
les
jne
sbb
mov
cwtl
xchg
unpckhps
pop
cmc
mov
xor
jl
and
mov
adc
push
push
in
pop
jne
lret
inc
xorb
push
outsb
push
mov
mov
jmp
notl
mov
lods
jbe
add
lods
mov
out
sub
pop
ljmp
and
mov
or
mov
cmpsb
hlt
ds
and
push
mov
pop
ljmp
mov
daa
add
sub
out
add
or
pop
nop
out
sti
repnz
jmp
mov
add
mov
into
popf
data16
and
mov
xchg
adc
into
add
pop
pop
sub
je
jne
repz
aas
inc
and
xchg
fisttpll
int3
push
fldlg2
clc
jbe
mov
test
and
icebp
in
add
cmp
sbb
in
adc
adc
loopne
xor
call
xlat
adc
in
push
push
or
aad
mov
adc
add
or
adc
pop
mov
insl
call
mov
scas
lock
clc
inc
jge
mov
or
ret
sahf
add
inc
les
in
and
or
adc
inc
mov
mul
adc
or
stos
xor
popa
es
lock
add
pusha
jg
ja
cmp
jo
add
jmp
jne
pop
ja
add
mov
test
rclb
sub
mov
cwtl
cmc
mov
push
or
cwtl
pusha
xor
outsb
adc
push
push
mov
fwait
inc
cli
add
or
scas
jge
and
mov
scas
shl
push
nop
jge
enter
test
std
cmp
je
call
fbstp
pop
jmp
call
pop
jnp
cmp
rcll
mov
cltd
xchg
jecxz
inc
sbb
xor
dec
jbe
mov
cmp
add
mov
popa
push
or
jl
cmp
inc
cmp
fisubrl
lret
rolb
test
xor
popf
add
dec
pop
xchg
or
fldenv
pxor
push
add
or
out
into
cld
sbb
add
or
fs
add
dec
push
push
iret
fcoml
add
mov
pop
test
xchg
mov
jge
cmp
adc
into
ret
dec
sbb
fcompl
mov
cmp
dec
pop
repnz
iret
aaa
cmpsb
andb
in
loope
je
fmul
in
mov
fimull
fdivrl
fisttpll
ficomps
add
lret
sahf
xchg
or
push
push
movb
gs
mov
mov
fs
mov
movsl
out
cli
add
jbe
int3
inc
inc
dec
shrl
jl
or
fsts
dec
rcl
pop
push
gs
int
aad
call
dec
xchg
test
ds
jge
fdivl
jb
or
or
loop
xchg
jmp
and
fimull
rol
in
push
sub
bnd
ss
lock
call
adc
dec
sbb
movsb
sbb
mov
mov
cltd
push
dec
mov
mov
lds
push
movsl
push
enter
adc
mov
cmpsb
sbb
call
push
xor
and
mov
cmpl
dec
sub
das
rolb
and
cmp
pop
push
and
xor
in
jp
lahf
fdivr
pusha
fildl
pushf
pusha
int3
cmp
or
xchg
xchg
testl
aam
ret
or
xor
mov
add
push
pop
mov
add
inc
push
out
or
sbb
shlb
adc
mov
mov
hlt
sahf
jp
xchg
push
pushf
es
push
add
cmc
mov
and
mov
loopne
dec
out
repz
xchg
dec
dec
push
gs
outsb
scas
call
mov
jg
jge
cmpl
cmp
push
xlat
pop
xor
mov
xchg
push
cmp
fidivl
push
pop
inc
cmp
jl
ret
sbb
adc
pop
jb
add
jo
jl
clc
push
stc
jb
dec
or
fisubl
push
and
mov
sub
push
or
add
mov
add
lds
dec
jmp
inc
dec
sbb
push
loopne
pusha
movl
je
and
test
dec
or
roll
mov
stc
mov
cmp
movl
aam
pop
aas
arpl
jne
mov
sub
mov
mov
lods
pop
mov
out
out
lcall
adc
adc
lock
or
jmp
je
mov
mov
mov
jne
daa
add
ljmp
or
movl
inc
mov
adc
pop
inc
cmpxchg
data16
mov
lock
pop
or
sub
mov
add
ss
adc
sbb
ss
imul
int3
outsb
adc
mov
add
sub
mov
xchg
add
jmp
adc
clc
or
cmp
inc
add
test
in
pushl
jno
push
cmp
xor
pop
mov
je
adc
loop
inc
das
je
mov
add
or
and
ret
js
pop
mov
pushl
add
push
scas
clc
add
and
and
sub
or
cmp
sbb
inc
push
mov
sub
adc
arpl
add
xlat
call
adc
lods
sub
call
or
fwait
lahf
inc
aaa
pushl
lcall
jo
push
push
shrl
xchg
inc
jle
stos
mov
or
pop
jae
cwtl
and
add
adc
adc
mov
add
loop
mov
jno
push
mov
orl
iret
inc
inc
inc
in
mov
cmpsl
or
and
inc
cmp
testb
je
pop
inc
sub
test
orb
and
dec
xor
adc
pop
sti
lret
add
pop
lea
xchg
movsl
mull
add
inc
and
cltd
lods
jno
data16
adc
mov
addl
repz
mov
pop
scas
sub
dec
sti
sarl
cmp
jne
nop
sbb
jge
mov
or
adc
loopne
pop
pop
sub
movsl
out
js
insb
xchg
lods
loopne
jb
inc
and
inc
xchg
js
mov
pop
mov
in
pushf
push
sbb
call
stos
ret
or
add
jp
add
jno
mov
mov
dec
cld
je
repz
add
addl
add
sub
xor
add
call
adc
mov
xchg
je
pop
mov
arpl
jp
fimull
or
jle
or
xor
mov
outsb
push
pop
xchg
outsl
outsb
je
pop
mov
mov
clc
jo
pop
aad
adc
mov
push
jbe
cmp
and
or
or
pop
movsb
add
xor
stos
popf
icebp
sbb
sub
or
outsb
call
or
jl
jecxz
cmp
sbb
xchg
push
adc
xchg
jno
scas
pop
data16
dec
sub
sbb
rorb
jnp
inc
mov
adc
push
push
push
or
jge
cltd
mov
xor
push
ret
sbbb
push
dec
sub
orb
jbe
fcompl
adc
fisubl
mov
scas
adcl
mov
iret
pop
sub
mov
push
jge
pop
xchg
insl
cmp
xor
call
inc
inc
je
push
sbb
int
sbb
xor
pop
sbb
jmp
mov
adc
aam
dec
lods
and
sub
mov
sub
inc
test
cs
push
push
in
int3
cmp
popa
sub
mov
inc
orb
adc
call
push
sub
sub
std
and
cmpb
xor
adc
jl
sbb
lds
sahf
sbb
or
rol
adc
and
and
and
adc
ds
and
or
xchg
les
lds
outsb
pop
lcall
leave
inc
inc
stos
movsl
addr16
int3
lea
inc
int
aas
mov
pop
std
rolb
daa
dec
aaa
ret
ret
les
mov
out
ss
xorl
mov
pop
test
jmp
lret
popa
cmpsw
test
push
ljmp
popa
jns
gs
or
js
imul
push
dec
and
lods
fsubrl
dec
or
fmull
in
pop
mov
or
sub
movsb
out
mov
cs
pusha
mov
adc
push
cmp
cltd
cltd
and
push
or
jae
out
adc
xchg
int
add
jmp
xor
jge
out
cmpl
mov
ljmp
lea
inc
call
mov
icebp
andb
add
sub
inc
add
cmp
mov
pop
dec
mov
nop
das
lea
ljmp
lret
mov
add
sub
mov
insb
outsl
jb
jb
xor
mov
gs
in
or
lods
or
xchg
mov
mov
xchg
pop
popa
pusha
add
jb
jmp
adc
inc
nop
xchg
leave
std
and
xor
lret
add
add
add
shlb
pop
mov
jecxz
push
add
or
fmul
aaa
push
xchg
adc
pop
push
je
call
mov
js
movsl
les
test
aas
int3
ret
sbb
rcl
cmp
inc
xor
mov
and
xlat
sbb
int
test
mov
mov
test
and
jb
shrb
sbbl
divb
dec
mov
dec
enter
adc
lret
sub
and
sub
xchg
scas
add
pusha
jns
cmp
add
xor
mov
into
fadds
fs
addb
sahf
fisttpll
or
or
inc
inc
sub
sbb
or
jl
cmp
sbb
jb
fxam
jbe
add
mov
es
mov
clc
scas
mov
xor
testb
enter
cmp
pop
mov
push
cld
mov
mov
add
adc
mov
add
outsl
aas
and
dec
outsb
imul
inc
jb
arpl
push
arpl
sti
pop
push
rclb
gs
jbe
cltd
or
pop
pop
pop
and
dec
xor
mov
xchg
stos
inc
rcll
arpl
jae
fs
mov
cmp
pop
add
jo
xor
popa
jo
push
testb
inc
cmp
xlat
mov
dec
ss
add
inc
insb
fmull
jmp
pop
mov
jb
incl
enter
jb
jb
inc
scas
sub
packsswb
cs
pop
mov
in
jnp
sbb
sbb
inc
cmc
decb
fs
adc
mov
mov
add
jb
outsb
mov
or
xor
cwtl
loope
add
inc
or
lods
sub
loope
and
leave
fisubrs
sbb
sbb
jne
or
and
mov
into
add
pop
lods
adc
add
mov
imul
mov
mov
gs
jno
inc
mov
mov
outsl
jb
outsb
and
push
push
jne
subl
fs
adc
int3
pop
test
xchg
xchg
push
jge
sub
scas
fldt
aad
push
sub
push
push
push
fimull
lret
inc
cmp
imul
pop
ret
andb
arpl
mov
daa
dec
inc
fwait
int
push
inc
and
pusha
xchg
push
das
mulb
lods
dec
or
push
add
and
orl
loopne
add
sbb
mov
daa
ret
push
outsl
imul
mov
sub
pop
mov
sub
xor
sub
ss
cwtl
insl
xchg
shll
mov
dec
dec
inc
add
jns
mov
clc
dec
outsl
adc
ret
xor
outsb
push
ret
cmp
push
es
imul
pop
cmpsl
arpl
insl
fcomps
fcomp
popa
movsl
ss
jno
mov
sbbl
rorl
dec
test
test
shrb
jne
xor
jae
sarb
sub
sbb
inc
popa
sbbl
arpl
or
push
les
mov
dec
inc
push
dec
inc
mov
lods
add
jo
je
imul
js
cmpsl
imulb
pop
push
mov
out
mov
addr16
fs
mov
push
add
fstpl
std
inc
pop
pop
and
jno
xchg
add
lea
push
cmp
jno
or
jb
movsl
jae
adc
inc
test
cmp
gs
in
adc
ret
fsubs
add
dec
jo
sub
jno
gs
aad
push
push
mov
div
push
lods
mov
or
add
inc
fnstcw
sbb
add
je
inc
xor
sub
adc
mov
insl
aad
sbb
mov
bound
jae
sub
mul
sbb
pop
add
push
push
mov
imul
sub
lret
sub
push
fdivl
loope
lds
push
out
imul
stos
and
jnp
aaa
jnp
imul
cmp
pop
out
lahf
adc
push
mov
incb
jne
jno
or
movsl
add
jne
shll
push
dec
ja
pop
jo
inc
popa
arpl
sub
pop
inc
inc
push
inc
push
out
lock
and
mov
mov
cltd
es
imul
xlat
ss
adc
cltd
add
insl
rcrb
xchg
or
lret
into
negb
pop
fdivl
cmp
or
testb
add
pop
data16
imul
lret
xchg
popa
scas
fcomip
arpl
sbb
insb
jecxz
push
out
inc
lds
movsb
faddl
mov
sbb
imul
adc
jns
jge
cmc
mov
lcall
add
outsl
imul
mov
ret
aas
enter
xor
inc
pop
push
add
loopew
popf
jmp
xor
dec
sbb
xchg
bound
outsb
cwtl
mov
lea
leave
jbe
xchg
dec
add
fildll
movsl
add
and
push
int
lea
sub
testl
test
dec
insl
push
inc
pop
or
cltd
sbb
pop
mov
adc
pop
add
push
mov
push
cmp
pop
int3
rcrl
cmp
xor
sbb
pop
and
adc
lock
sub
pop
sarb
xor
dec
push
dec
xchg
sbb
dec
pop
je
scas
adc
mov
xlat
adc
pop
or
add
or
repz
pop
or
or
adc
jg
test
push
jmp
jb
inc
add
js
fs
dec
jae
xchg
cmp
jmp
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
push
aas
test
mov
xchg
aas
cwtl
aas
movsb
aas
test
aas
lret
aas
cli
aas
mov
fimull
xor
xor
xor
xor
xor
xor
push
hlt
pushl
cld
xor
xor
xor
xor
jle
mov
ret
pushl
sbb
xor
cmp
xor
jbe
xorl
jmp
xor
out
divb
mov
push
aaa
push
aaa
push
cmp
cmp
bound
jns
cmp
cmp
cmp
cmp
cmp
and
pop
cmp
movsb
cmp
cmp
cmp
cmp
cmp
aas
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
mov
xchg
cmp
mov
cld
add
jo
xor
sahf
aaa
mov
fldt
cmp
arpl
jp
xchg
cmp
cmp
cmp
nop
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lds
xchg
aas
mov
movsl
jmp
aas
fs
xor
xor
imul
dec
xor
xor
xor
xor
in
xor
xor
xor
xor
xor
xor
ret
pop
loopne
xor
divb
push
xor
pusha
aaa
fwait
test
jg
xor
xor
xor
mov
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
cmp
push
xor
jae
jns
test
lahf
xor
mov
ret
xor
cmp
js
aaa
cmpsb
aaa
mov
sub
outsl
push
cmp
mov
cmp
dec
cld
jg
xor
cmp
cmpb
cmp
cmp
cmp
cmp
sbb
ljmp
popa
cmp
cmp
pop
cmp
adc
test
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpsb
cmp
in
cmp
adc
sbb
and
add
dec
ds
ds
mov
ds
notrack
clc
or
pop
jo
fidivs
sti
xor
xor
call
pop
xor
xor
xor
ja
sahf
xor
stc
xor
stc
call
arpl
xor
xor
xor
xor
xor
sub
dec
xor
mov
test
xor
inc
ss
ss
ljmp
fbstp
adc
cs
movsb
aaa
and
sub
mov
cmp
cmp
cmp
imul
cmp
sarl
sub
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fidivrl
out
repnz
ds
push
aas
pop
aas
push
jp
mov
stos
aas
ret
aas
clc
aas
decl
pop
adc
sbb
and
lcall
xor
aam
call
xor
xor
xor
icebp
cmp
lds
iret
xor
xor
sub
xor
xor
xor
decb
xor
xchg
mov
lock
jg
decl
xor
xor
inc
repz
popf
movsb
ss
dec
in
in
ss
aaa
outsl
aaa
jp
xorl
test
aaa
enter
pop
decl
leave
jmp
out
idivb
pop
cmp
cmp
cmp
ja
cmp
pushf
cmp
repnz
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jo
ret
cmp
mov
test
xlat
cmp
aas
aaa
aas
inc
aas
dec
aas
stos
push
add
arpl
das
pushl
cld
cmp
outsb
xor
in
adc
sbb
push
xor
sub
xor
jo
pushl
cmp
inc
xor
push
xor
popa
xor
stos
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
ljmp
xor
xor
and
dec
xor
cmp
pushl
shll
sbb
xor
xor
imul
ljmp
mov
xor
in
xor
push
ss
ljmp
jmp
gs
ss
mov
cltd
aaa
mov
mov
ss
icebp
ljmp
stc
ss
adc
sbb
daa
pop
dec
aaa
pop
aaa
bound
insl
aaa
jge
test
pushl
nop
aaa
mov
aaa
ret
aaa
shlb
fidivl
in
aaa
divb
or
pop
cmp
std
fbstp
dec
cmp
push
cmp
cmp
jl
test
mov
mov
mov
sarb
aad
loopne
in
stc
cmp
cmp
push
cmp
bound
jne
jnp
jge
cli
sub
jge
cmp
cmp
orl
out
clc
sbb
and
sub
dec
cmp
pop
cmp
cmp
ljmp
mov
cmpsb
fwait
xchg
cmp
cmp
cmp
cmp
cmp
jg
call
cmp
mov
adc
pop
cmp
cmp
cmp
cmp
bound
cmp
dec
cmp
pop
cmp
push
jo
jbe
jnp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
outsl
clc
ja
nop
cmp
cmp
jl
ds
jno
lcall
incl
cmp
mov
mov
jl
xchg
int3
xlat
ds
jg
dec
add
aas
lahf
aas
lods
aas
mov
aas
in
gs
pop
mov
ret
xor
inc
xor
pop
xor
jno
jg
test
push
jecxz
call
xor
xor
xor
xor
xor
cmp
xor
test
xchg
xor
and
insb
xor
xor
jg
test
in
push
xor
xor
xor
xor
xor
lock
add
adc
and
pop
clc
fucomip
xor
cmp
cmpsl
ss
ss
sbb
and
cmp
cltd
aaa
stos
aaa
ljmp
mov
aaa
divb
mov
xchg
cmp
cmp
cmp
cmp
cmp
mov
cmp
inc
fwait
cmp
cmpb
std
test
scas
cmp
inc
cmp
cmp
cmp
cmp
imul
outsl
jg
cmp
inc
cmp
jae
jp
xchg
mov
sahf
ja
hlt
cmp
cmp
cmp
cmp
sub
test
ja
lock
cmp
sbb
sub
dec
cmp
movsl
cmp
cmc
cmp
outsb
je,pt
jp
cmpb
mov
xchg
mov
ds
push
clc
push
add
or
adc
push
aas
sbb
and
or
rol
mov
sub
push
leave
inc
or
loopne
mov
push
enter
test
mov
mov
jnp
mov
jno
mov
je
dec
pop
shlb
popf
fwait
out
das
sti
mov
mov
mov
and
inc
add
and
negl
cld
dec
inc
add
fstps
cld
addr16
test
jo
nop
test
push
out
push
mov
add
mov
mov
and
idivl
add
cmp
lret
adc
add
push
ror
icebp
jb
jb
ret
inc
and
testl
push
sub
nop
add
add
dec
push
push
sbb
test
pop
out
jle
cmpsb
imul
mov
lcall
into
shrl
mov
add
cmp
xor
inc
adc
fs
pop
xor
pusha
pop
lret
cli
arpl
sub
shll
mov
xchg
adc
pop
jae
sbb
mov
movq
xchg
jnp
mov
nop
adc
out
shrl
xchg
dec
dec
xchg
filds
repz
push
sub
push
push
inc
and
push
icebp
push
and
nop
push
add
int3
and
and
and
inc
push
test
and
and
jns
pushf
or
mov
mov
and
and
or
add
push
enter
or
push
enter
or
and
pop
and
sub
cwtl
leave
sub
push
mov
and
push
and
mov
sbb
bound
cmp
and
movsb
mov
sub
add
aas
push
and
test
mov
test
and
call
scas
jae
xor
and
xor
cli
push
xor
lock
push
push
testl
ret
lods
mov
stos
cmovb
inc
sub
test
cs
scas
jp
sbb
adc
add
rcll
xchg
popf
in
mov
in
sub
cmovge
add
es
and
call
pushf
fldenv
pandn
push
es
inc
push
dec
sbb
jp
aam
cmp
leave
or
or
cmp
cmp
push
and
and
mov
mov
push
pop
pushf
stos
and
jo
xor
out
and
add
xchg
mov
push
mov
jo
xor
push
leave
and
add
xor
dec
call
add
adc
andb
jg
inc
add
cmp
jl
xchg
adc
lock
in
inc
inc
mov
idiv
mov
jnp
icebp
addr16
int
std
adc
test
jne
push
sbb
pop
push
push
mov
pop
and
sbb
sbb
mov
mov
sbb
sbb
mov
mov
sbb
sbb
sub
mov
lcall
and
pop
mov
in
sbb
lods
and
std
push
cmp
sub
and
pop
mov
mov
mov
sub
push
mov
or
xchg
lods
sub
add
gs
cs
shl
js
stos
mov
test
mov
jmp
mov
add
repz
push
or
push
shll
add
inc
je
pushf
fadds
insb
or
outsl
outsb
mov
lret
mov
gs
cs
inc
aam
js
lea
lret
mov
insb
popa
jne
arpl
gs
aaa
xchg
movsl
sub
dec
xchg
and
outsb
inc
je
push
shll
lret
mov
cmpl
addb
xchg
pusha
inc
and
test
cs
dec
inc
mov
xchg
hlt
xchg
data16
nop
in
jns
movaps
sbb
leave
adc
call
sbb
pop
xchg
cmp
xchg
ret
jo
inc
jno
stc
ret
or
clc
dec
mov
add
call
jae
sbb
mov
scas
pop
jne
push
jns
push
adc
ret
pop
mov
cld
mov
push
shlb
dec
push
aam
add
fdivs
jmp
or
or
mov
xor
xchg
add
out
jae
sbb
lods
es
dec
and
mov
sti
cwtl
mov
inc
lods
pop
add
push
fstps
nop
nop
mov
add
pop
push
imul
sahf
mov
sbb
movsb
stos
in
shlb
sbb
add
shlb
pop
xor
pop
mov
pop
movl
outsl
out
or
or
add
sbbl
add
sahf
cmpsl
xor
or
adc
mov
and
mov
mov
adc
addb
add
cltd
dec
and
insb
xor
and
push
add
and
add
and
adc
das
mov
outsb
dec
daa
andb
pushf
adc
mov
sub
nop
or
rorl
roll
xchg
fimull
sub
and
push
push
dec
xor
add
and
or
ret
and
lret
sub
lds
shrl
test
mov
adc
adc
fisttpll
sbb
ja
inc
mov
sub
jae
push
mov
push
outsb
jb
and
add
inc
outsl
js
and
adc
stos
and
mov
sbb
push
adc
icebp
xor
les
and
push
add
insl
dec
jae
adc
sti
sbb
xor
and
popa
dec
inc
and
dec
popa
adc
and
mov
inc
and
sub
jno
mov
add
je
xchg
add
mov
dec
pop
adc
pop
rcrb
sub
pushf
insb
and
and
add
imul
cmpsb
jmp
pop
inc
int3
dec
pop
imul
pop
jmp
mov
scas
imul
sub
addr16
pop
and
mov
lods
push
inc
arpl
adc
movsl
int
adc
or
dec
sub
mov
arpl
or
dec
shll
cmpb
adc
xchg
and
mov
xlat
jbe
sbb
sub
movsl
mov
push
xlat
adc
jno
loope
mov
adc
in
xchg
adcb
aam
dec
or
pop
inc
mov
bound
sub
adc
sub
sbb
mov
pop
adc
or
or
shrb
inc
negb
stos
push
outsl
jecxz
shrb
cltd
stc
add
imul
dec
outsl
sbb
flds
mov
sub
and
test
lret
adc
aam
int3
mov
adc
jo
loopne
sub
movsb
push
or
dec
stc
out
scas
mov
dec
add
add
adc
mov
imul
fldl
pop
or
add
mov
jo
sub
addr16
movsl
out
pop
push
gs
mov
cmp
xor
scas
jnp
jecxz
inc
and
cmp
pop
mov
outsb
inc
jae
and
popa
cltd
pop
xlat
jns
popa
and
add
outsb
lods
fildl
arpl
inc
lds
ss
push
negl
gs
sub
adc
jnp
lds
jb
add
mov
cmp
fnstenv
xor
adc
xlat
xor
popf
xchg
pop
dec
or
out
pop
addr16
jo
popf
addr16
out
or
sub
mov
sub
shrl
push
sub
or
pusha
xchg
sbb
imul
push
daa
arpl
mov
inc
inc
aaa
popa
pop
outsl
pcmpeqw
jae
popa
adc
xor
inc
push
imul
and
arpl
cmpsl
and
pop
ret
mov
repnz
xor
xor
xor
mov
mov
insb
xchg
xor
cltd
divb
daa
lds
and
aam
xor
xor
sbbl
xor
fs
add
lea
mov
cmp
inc
sbb
aaa
scas
jg
pop
shll
pushl
or
pop
cmp
jg
lcall
cmp
lods
loopne
ljmp
jns
cmpl
mov
cmp
cmp
pop
cmpl
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
xor
cmp
inc
pop
dec
ds
push
add
call
nop
pop
or
and
or
add
popa
adc
mov
pop
imul
outsl
and
or
popa
mov
add
ss
outsl
data16
loopne
xor
or
cmp
lods
add
add
mov
push
add
mov
lret
add
push
or
push
dec
jae
pushf
jnp
add
jbe
mov
mov
nop
cld
add
and
data16
jl
and
pusha
inc
and
cltd
or
and
xchg
lret
xchg
jo
and
dec
add
loop
and
add
popf
add
mov
flds
stos
dec
add
or
add
add
add
dec
imul
sbb
lods
and
rorl
add
sub
add
inc
jo
jp
and
add
add
shlb
fs
jne
inc
mov
test
mov
nop
push
mov
push
push
inc
adcl
leave
xor
inc
dec
xchg
xchg
adcl
inc
push
cmpsl
outsl
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
