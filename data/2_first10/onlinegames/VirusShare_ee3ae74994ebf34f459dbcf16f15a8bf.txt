out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
insb
xor
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
aam
insb
mov
pop
in
add
xor
add
add
xor
shrl
cmp
pop
insb
dec
shll
int3
fdivl
xor
out
push
inc
and
cmp
xor
rcll
jo
mov
fidivl
lret
stc
fsubrl
movsb
xchg
pop
pop
xchg
xor
fwait
scas
cmp
dec
push
xor
stc
mull
outsl
arpl
je,pn
insw
addr16
xor
jg
dec
xor
push
gs
bound
push
jb
jbe
insb
gs
jae
jae
jnp
std
je
insl
xor
pop
or
add
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
bound
gs
in
sarl
imul
insl
fs
aaa
cmp
aaa
cmpsb
xchg
cmp
scas
iret
sbb
jb
enter
push
test
push
dec
inc
dec
dec
xor
fs
insb
pusha
repnz
fs
push
push
dec
inc
dec
adc
sub
and
inc
or
xor
add
push
add
add
nop
inc
add
incl
and
adcb
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
incb
push
and
fs
push
sbb
cmpsb
adc
cmc
outsl
mov
add
je
cmc
adc
lcall
xchg
addr16
jae
test
sbb
xchg
cmc
mov
daa
lret
pop
stc
fs
cmc
push
pop
xchg
cmc
adc
in
mov
mov
inc
dec
add
add
loopne
and
add
or
fwait
cmp
js
add
and
unpckhps
fucomp
dec
sbb
daa
add
or
ror
xchg
and
xor
pop
sub
in
flds
loopne
dec
dec
pop
push
pop
and
adc
int3
pop
fildll
pop
add
bound
pop
and
cltd
rcr
and
fs
je
push
mov
ss
in
in
jbe
jle
sbb
cs
push
push
pop
andb
fists
lock
dec
arpl
xor
jns
jbe
pusha
int
js
jb
insb
outsl
arpl
sti
add
push
add
data16
or
cli
jbe
mov
les
pop
testl
pop
ds
adc
jbe
jno
imul
cmpsb
imul
imul
dec
shrl
cs
pop
shll
push
jb
mov
sahf
scas
dec
shll
repnz
xor
out
adc
xor
pop
shll
nop
lods
popf
jne
add
lcall
movsb
cwtl
xchg
cmpsb
imul
lret
cmpsb
adc
jo
faddp
lret
adc
dec
scas
xchg
je
adc
push
je
jns
pop
outsb
add
pop
roll
fnstenvs
xor
es
ja
lcall
xchg
lcall
mov
imul
xor
fsts
js
out
int3
add
xchg
xorb
lret
dec
lahf
insl
mov
inc
sub
out
mov
push
add
xor
push
hlt
js
rcrb
push
mov
lldt
subl
gs
gs
icebp
sbb
and
sbb
push
gs
fs
sub
rcll
outsb
push
jb
inc
adc
cld
stc
or
dec
inc
push
and
aaa
clc
nop
jae
data16
bound
dec
inc
divb
inc
push
inc
pop
dec
sbb
jp
data16
push
imul
ja
dec
push
pop
inc
jne
push
je
adc
fistps
imul
adc
jae
inc
addl
addb
sbb
inc
or
mulb
add
iret
jbe
aaa
sbb
pusha
add
add
add
adc
mov
add
sub
sub
add
add
adc
add
insb
and
jmp
add
popa
mov
xor
adc
add
mov
insb
fldcw
pop
aas
or
mov
mov
leave
add
pop
roll
incl
dec
cs
mulb
pop
add
mov
add
test
inc
xchg
inc
pop
sbb
lret
push
inc
xchg
movsl
adc
add
cmp
inc
adc
and
cmpsb
pop
das
sbb
xor
pop
aam
das
divb
xor
or
imul
add
ja
jae
push
packsswb
je
jne
jb
shll
imul
inc
or
push
aas
xorb
sub
add
push
inc
jb
ljmp
call
pop
ja
or
push
mov
jae
pop
and
addr16
int
pop
xor
push
sbb
filds
cld
movb
rep
bsf
mov
pushl
or
sbb
call
in
leave
call
mov
add
mov
dec
cmp
xor
arpl
data16
add
ja
push
shrb
je
sbb
adcb
push
push
adc
and
and
and
inc
fistpll
pop
dec
push
mov
hlt
inc
test
pop
jno
sbb
jbe
sti
dec
xor
add
or
je
mov
jns
ja
je
incb
add
imul
popf
std
sti
or
or
aas
xchg
pop
add
push
inc
jae
test
stos
jne
add
jb
pop
push
add
jb
jbe
inc
jg
gs
popa
insl
cmpsl
dec
call
ja
jb
inc
popa
jb
pop
popa
jae
je
outsl
sbb
je
jne
shlb
iret
imul
mov
sbb
pop
test
add
push
jg
inc
and
mov
test
push
fists
aas
out
adc
push
mov
mov
or
rcrb
and
aas
ret
push
ja
filds
mov
sahf
shlb
pushf
and
cwtl
sti
fidivrs
inc
imul
sti
jg
fwait
mov
cmpl
sub
call
or
pop
mov
and
add
adc
popf
clc
sbb
xchg
xchg
adc
int
jbe
dec
or
push
sahf
fs
adc
inc
lcall
insb
and
add
pop
pop
ss
enter
add
jg
repnz
xor
inc
cmp
aaa
inc
inc
in
jnp
add
xor
xor
ss
inc
add
inc
xchg
cmpsb
imul
lcallw
cmp
add
xor
xor
ss
and
inc
add
cmp
cmp
inc
inc
inc
out
pop
lcall
jg
in
mov
inc
xor
xor
xor
scas
jnp
fwait
sbb
adc
or
fstl
inc
add
xor
adc
insl
jnp
xor
xor
pop
jnp
mov
cwtl
xor
inc
sub
in
scas
aaa
getsec
xor
inc
xor
pop
jae
xlat
inc
xor
xor
shll
imul
popf
inc
xor
xor
cmp
int
cmp
xor
push
insl
outsb
jae
cmp
ucomiss
pop
xor
pop
aaa
xor
in
lcall
sbb
add
lret
inc
xor
inc
or
fidivl
adc
add
xor
push
daa
add
addl
gs
dec
inc
xor
pop
addb
inc
wrmsr
icebp
inc
mov
outsb
fwait
xor
cmp
xor
ss
pop
imul
and
xor
xor
inc
inc
inc
push
aaa
ja
aaa
gs
in
mov
aaa
mov
aaa
cmp
aaa
outsb
dec
shll
inc
inc
inc
or
add
test
add
xor
das
and
xlat
inc
mov
cmp
int
sbb
pop
add
popf
xor
pushf
jae
dec
pop
test
xor
or
add
dec
or
dec
pop
int
inc
cmp
sub
in
leave
popa
ljmp
mov
jmp
xchg
add
outsb
scas
ud2
xor
mov
pop
aaa
xor
sarl
sbb
add
add
xor
dec
das
push
aaa
rclb
or
dec
movsl
daa
mov
cltd
fsubrl
xlat
or
movsl
stc
into
in
lcall
inc
inc
pop
cmp
loopne
imul
jle
pushf
sarl
insl
xor
xlat
sub
ljmp
into
fidivl
cmp
xor
xor
lahf
xor
imul
imul
imul
inc
lcall
cmpsb
imul
inc
inc
inc
inc
rol
xor
mov
push
pushl
inc
inc
sarb
cmp
mov
aaa
xor
mov
cmp
xor
sti
push
in
xor
xor
out
dec
incl
xor
xor
xor
jo
or
std
ss
sbb
pop
or
sti
xor
sub
int3
movsl
xchg
adc
inc
xor
pop
es
in
leavew
popf
xor
movsl
mov
and
ret
in
loope
xor
or
add
insl
scas
add
fnsave
movsl
mov
and
mov
int
cmp
xchg
pop
cmp
out
test
cmpsb
ss
lcall
and
imul
cmpsb
imul
pushf
dec
shrl
aaa
aaa
out
movsb
or
sub
aaa
aaa
icebp
xor
andb
roll
in
dec
pushl
inc
ja
mov
pop
cmp
xchg
dec
mov
xchg
xor
pusha
fwait
xor
inc
lods
cmpsl
ficompl
lcall
jne
pop
cmpsb
fs
dec
inc
inc
aad
dec
daa
ss
xor
loop
lods
mov
leave
xor
imul
xor
icebp
lds
aaa
push
or
lods
push
outsb
das
mov
gs
xor
cmp
jge
ret
and
cmp
push
stos
mov
scas
mov
push
inc
ljmp
inc
cmp
imul
mov
xor
loopne
jp
cmp
sbb
push
push
pop
xor
lods
cmp
fistl
cs
or
or
sbb
and
sbb
sbb
sbb
sub
test
mov
sarl
inc
adc
in
in
setae
pop
xor
mov
bound
push
sti
std
jp
cltd
cs
inc
inc
iret
pop
add
inc
sti
pop
pop
js
dec
in
or
jecxz
xor
or
roll
stos
push
scas
pop
cmpsb
das
inc
pop
xor
mov
dec
loopne
cmp
inc
out
popf
jmp
xor
xor
cmp
dec
and
adc
pop
cmpsl
or
repz
lret
pop
adc
sbb
pop
inc
adc
xor
mov
sbb
dec
addr16
inc
xor
daa
adc
mov
aaa
fstpt
inc
testl
adc
cmpsb
imul
dec
cwtl
ss
inc
and
cmpsl
imul
dec
xor
xor
lcall
and
mov
adc
inc
iret
inc
decl
fisubs
sub
inc
cmp
push
adc
mov
je
inc
decl
insb
xor
dec
and
adc
xor
loop
dec
out
in
inc
pop
push
add
xchg
lods
xor
xor
xor
pop
scas
xor
sbb
sbb
jmp
xor
rclb
xor
es
fld
xor
nop
dec
push
pop
and
adc
lret
popf
jp
leave
xor
dec
mov
sbb
mov
out
and
in
repz
loopne
or
lcall
stos
fs
popl
push
sti
cmp
rcrl
movsl
out
xor
out
into
aam
dec
ss
mull
cmpsb
push
imul
lcall
shl
ret
inc
sti
inc
dec
cmpsb
imul
stc
xor
decl
ljmp
addr16
add
les
push
and
aam
xor
sub
loopne
ss
and
btr
cmp
orb
out
bound
jno
and
cltd
enter
repz
adc
aaa
inc
xor
add
or
shl
xchg
scas
dec
out
or
ror
add
das
sbb
push
addl
dec
jmp
daa
inc
fcoml
ss
addr16
or
adc
and
pop
or
inc
adc
push
in
inc
adc
dec
in
push
nop
cmp
xor
mov
or
stc
inc
xchg
test
pop
pop
fnstsw
push
mov
in
out
and
popf
jl
xor
xor
dec
scas
push
decb
ret
xor
sub
stc
ret
pop
icebp
xchg
xor
in
xor
sarl
mov
loope
add
or
xor
push
addr16
mov
xor
xchg
imul
jne
cmp
popa
xor
ss
xor
xor
xor
addr16
xor
pop
or
repz
and
les
pop
insl
adc
xor
cmp
xor
jmp
mov
adc
aaa
jmp
mov
aaa
adc
xchg
mov
into
xor
ss
imul
inc
inc
inc
je
dec
pop
inc
xor
xor
add
cmc
xor
xor
ss
imul
adc
pushl
in
test
roll
lcall
pop
shlb
hlt
inc
cmp
lds
xor
xchg
fisubrl
out
mov
sahf
sti
inc
or
test
push
adc
mov
pusha
repz
popa
mov
xor
mov
or
sub
rcl
dec
inc
jmp
adc
add
jmp
sub
xchg
cmpsb
dec
push
test
popf
imul
inc
add
scas
inc
and
in
inc
cmp
add
lea
inc
fmuls
cmpsl
xchg
jmp
and
imul
xchg
fisubl
jmp
xor
pushl
dec
subl
movsl
xor
rorb
or
add
cmp
pop
fs
flds
daa
aaa
xor
pop
aaa
jno
in
sub
inc
add
imul
cmc
ss
pop
adc
shrb
dec
stc
cmp
sub
xor
pop
gs
js
leave
push
stc
cltd
mov
cld
xlat
in
xor
xor
add
pop
adc
xor
test
stos
cltd
add
or
push
imul
mov
jo
aam
cmp
push
cmpsb
cmpsl
cmp
mov
or
loop
mov
lret
icebp
pop
les
call
aaa
repz
push
insl
inc
out
jno
in
out
and
push
xor
xor
psrad
cmp
icebp
xor
out
inc
adc
add
pop
pop
xor
int
sub
sbb
test
inc
mov
sbb
inc
xor
jbe
roll
inc
push
mov
and
lods
mov
shrl
sub
jo
push
and
pop
mov
das
sub
sub
sub
movsb
leave
inc
jns
leave
xor
aaa
inc
push
dec
or
mov
xorl
and
jecxz
xor
mov
or
pop
xchg
sbb
inc
inc
push
and
and
out
xorl
inc
xchg
and
xor
xchg
pop
std
icebp
leave
sbb
xor
addb
shufps
push
adc
mov
rdpmc
mov
pop
and
pop
popf
rolb
pop
mov
daa
xchg
fnsave
inc
inc
movl
aaa
mov
add
cmpsb
fsub
inc
aaa
inc
xor
cli
xor
xor
int
and
inc
xor
cmp
cmpsb
cmp
testl
inc
cmc
aaa
sub
ss
int3
or
inc
inc
pop
imul
popa
push
cmp
scas
shll
xor
cmp
pop
cwtl
cmpsb
inc
inc
call
xchg
cmp
xor
ss
cmp
push
test
inc
inc
ja
sbb
and
cmp
xor
inc
sub
movsb
leave
adc
mov
hlt
xor
jmp
sub
mov
sbb
xor
nop
test
std
xchg
inc
mov
pop
dec
sub
xor
mov
mov
inc
add
es
dec
sbb
xchg
test
orb
inc
popf
sub
stc
fst
and
fstl
xorl
and
mov
add
lods
jo
adc
mov
lret
xor
mov
xor
popa
push
loope
lea
shll
xor
add
inc
mov
sub
inc
and
xor
adc
ljmp
mov
sub
dec
pop
jg
pop
and
sar
roll
push
xchg
mov
and
shl
sbb
mov
adc
xchg
or
lret
inc
cmp
inc
fbld
movsb
repz
pop
add
inc
mov
test
loope
xor
mov
inc
cld
out
lret
xor
cmp
sbb
mov
daa
adc
pop
mov
aaa
aad
jmp
dec
scas
add
in
pop
xorl
sbb
or
jae
pushf
or
stos
mov
inc
sbb
mov
in
mov
inc
or
ljmp
cmp
mov
cld
das
xor
inc
insb
sub
mov
aaa
movsl
enter
cmp
add
cmp
mov
aaa
and
or
or
xlat
cmp
xor
roll
jmp
push
std
clc
stc
mov
or
xor
xor
cmp
inc
and
adc
xchg
rcrb
jnp
inc
inc
shll
xor
mov
adc
inc
lods
test
pop
cmp
stc
jp
or
push
scas
dec
ja
sub
jecxz
data16
aad
std
xor
mov
mov
xchg
lds
loope
jmp
sub
push
mov
and
pop
loope
push
push
mov
cmp
xor
inc
lds
adc
faddl
xchg
stos
push
loopne
mov
pop
add
xor
add
shlb
mov
add
add
mov
add
add
mov
pop
add
sub
add
add
cmp
xchg
pop
inc
aam
add
inc
stc
xor
ja
cwtl
loopne
sti
rcr
pop
mov
add
test
xor
test
aaa
xor
jnp
test
add
les
popf
cmpsl
mov
daa
addl
pushl
sub
rcll
addr16
push
xlat
rolb
pop
pop
sub
test
fwait
mov
xor
lcall
sub
xchg
inc
aad
xor
scas
inc
adc
cmp
inc
into
inc
out
mov
icebp
out
aad
xor
sbb
fs
sub
repz
sub
cmp
lcall
mov
lcall
lcall
inc
inc
inc
lcall
inc
cmpsb
imul
lcallw
inc
inc
inc
dec
mov
inc
adc
incl
jmp
inc
mov
jnp
loope
inc
mov
lds
xchg
enter
add
ss
add
gs
or
pmaddwd
andb
fistpl
mov
or
push
sub
out
mov
sub
jo
loop
push
push
loope
jge
or
aaa
add
add
in
add
scas
or
pop
stos
jb
inc
add
cmpsl
movsl
scas
sbb
push
cmp
xor
jp
cmp
push
mov
push
sub
lret
xor
push
mov
xchg
mov
mov
pusha
daa
inc
popf
pop
es
imul
or
and
cwtl
iret
push
xor
daa
xor
lods
inc
or
cmp
pop
imul
sub
pop
shll
pop
stos
push
mov
daa
lods
sub
nop
and
and
addb
mov
push
pop
mov
movsb
cmp
xchg
or
enter
jae
push
jb
and
pop
inc
xor
aam
add
jnp
mov
or
stc
test
dec
inc
pushl
mov
or
sub
rcll
or
mov
xchg
inc
sbb
lret
notl
pop
mov
stos
sbb
and
cmp
xor
push
ljmp
arpl
stos
xchg
es
jae
mov
test
inc
std
xor
inc
mov
sub
icebp
mov
dec
loope
out
push
xor
imul
jmp
mov
and
cmc
mov
mov
xlat
pop
mov
push
xchg
jo,pn
mov
sub
sub
pop
sbb
mov
inc
add
ret
icebp
sbb
add
pushl
jmp
xchg
in
inc
jb
pop
pop
outsl
outsl
sbb
fisubrs
pop
arpl
imul
imul
pusha
dec
cmpsl
aas
pop
cmp
xor
std
fbld
pop
into
mov
stos
mov
into
icebp
testl
sti
dec
outsb
insb
cmp
popa
jb
gs
insb
popa
arpl
insb
addr16
push
popa
sbb
dec
outsb
jne
mov
push
lock
inc
movsl
pop
cs
addr16
insl
insb
gs
fbld
dec
add
and
lret
testl
rolb
jae
push
popa
outsl
and
pop
and
xor
in
and
dec
add
mov
push
out
or
add
add
xchg
xchg
cmpsl
dec
stos
dec
jbe
ljmp
leave
jp
mov
mov
mov
pop
sbb
decb
lcall
out
sbb
cmp
pop
fistpll
xorb
inc
add
xor
mov
mov
jle
ja
or
roll
stc
pop
adc
cli
add
jae
mov
div
jmp
or
jmp
xor
ret
and
insl
movsb
subl
or
pop
addl
add
in
fnstsw
add
push
push
xchg
faddl
iret
mov
adc
xor
or
movb
cld
push
sti
int
cs
mov
push
call
pop
jne
xor
shr
mov
push
shl
push
push
mov
int3
or
sub
mov
fsubr
rcrl
push
iret
mov
ja
lea
push
sub
push
lea
push
adc
mov
stc
call
add
mov
push
pop
mov
pop
pop
leave
ret
dec
pushl
add
pop
mov
iret
sbb
stos
sub
in
mov
push
bound
mov
push
push
movl
sbb
mov
dec
xor
in
fwait
in
out
jne
call
incl
pop
add
lea
adc
push
cmp
test
adc
ss
mov
cmp
sbb
je
cmp
repnz
sbb
sbb
and
sub
repnz
es
and
mov
iret
test
orl
push
lahf
in
add
and
adc
add
cmpxchg
xchg
add
add
or
jmp
xchg
fwait
push
ret
jnp
ficomps
adc
loopne
jo
jbe
shr
sub
adc
sub
mov
jo
mov
xor
push
cmp
addl
inc
xor
xor
or
outsb
sub
je
dec
je
add
aas
dec
jbe
por
iret
push
repnz
jmp
ud0
fstps
jbe
and
add
jo
pop
fcoms
dec
xorb
repz
data16
movsb
or
cmp
pop
push
push
push
insl
nop
mov
ret
and
mov
std
gs
push
push
xor
cmpsb
mov
sub
lea
adc
pusha
mov
push
and
idivb
icebp
cmp
in
add
movb
mov
sub
sub
push
add
push
jmp
add
inc
add
sti
push
push
in
push
inc
inc
call
mov
lods
inc
pop
orl
in
fisttpl
mov
mov
fsts
mov
or
aaa
jo
mov
cwtl
out
inc
xchg
or
int3
decw
lret
cmp
cmp
cmpb
in
in
sbb
push
movzbl
shll
or
pop
clc
add
mov
fwait
in
insl
incl
inc
or
aas
sub
fcmove
testb
push
aaa
mov
nop
dec
or
add
ds
cld
sarl
add
stc
nop
jl
xchg
and
pop
add
add
sub
mov
bnd
or
add
pop
xor
dec
nop
pop
adc
pusha
lods
adc
aaa
mov
cs
or
pushf
test
jne
addw
push
dec
cmp
lret
add
aaa
iret
jne
mov
sti
nop
pop
or
adc
and
pusha
xchg
and
add
add
sbb
sbb
and
mov
enter
push
pop
jne
fisubs
insb
into
or
add
scas
icebp
lds
push
or
jg
cmp
jg
add
jge
push
push
push
sbb
or
pop
insl
push
adc
push
push
and
pop
sar
mov
cmp
or
das
mov
jne
lahf
pop
sbb
call
push
or
xchg
imul
dec
adc
outsl
out
sahf
mov
or
movsw
mov
pushf
or
movsl
movsb
mov
pop
sbb
adc
fcomi
movsl
jb
push
xchg
dec
dec
mov
fcmovnu
adc
enter
enter
mov
dec
pop
mov
sti
and
and
pop
add
cmp
sarl
push
mov
xchg
inc
mov
add
not
xor
xor
inc
cmp
or
sbb
xchg
xchg
bound
mov
aas
or
ja
inc
inc
jno
ds
xchg
mov
jbe
outsb
pop
das
mov
push
xchg
push
lahf
dec
adc
xchg
clc
push
sub
inc
cmp
aaa
ret
jb
pop
pop
pop
test
add
push
mov
pop
push
enter
jo
and
insb
nop
and
repnz
pop
inc
adc
add
in
adcb
mov
push
jl
and
enter
js
and
je
and
and
nop
dec
inc
xchg
and
mov
ss
ficoml
repnz
adc
add
pop
adc
or
into
adc
add
cmp
shlb
dec
xor
and
rcll
sbb
mov
pushf
fwait
in
mov
popf
jne
sub
adc
jae
add
adc
xchg
xor
add
add
add
test
add
inc
mov
adc
std
xchg
pop
int3
cmp
lock
clc
imul
adc
cmp
xchg
std
shl
shrb
push
lret
mov
addr16
xor
imul
loopne
and
call
add
rdmsr
adc
adc
lock
dec
mov
iret
push
jae
cmc
data16
negl
outsl
xor
ja
and
cli
push
cs
fs
dec
mov
insb
std
lret
loopne
out
mov
cmp
inc
cmpsl
xor
inc
ja,pn
cli
in
sti
push
sbb
xchg
dec
xlat
and
mov
cmp
pop
js
mov
add
jle
push
cmp
jle
pop
hlt
add
sbb
in
ja
push
call
insl
sbb
je
test
movsb
mov
mov
inc
hlt
mov
push
in
jne
cmpl
mov
mov
add
inc
cld
or
test
in
mov
inc
push
inc
clc
xor
dec
std
iret
add
jmp
andl
inc
pop
sbb
sbb
sahf
inc
cmp
mov
imul
cltd
jmp
aas
mov
cli
fcmovnb
add
rcll
adc
sar
fildl
ja
xor
adc
ja
imul
inc
sub
mov
push
jp
incl
lds
push
movzbl
and
inc
mov
xchg
push
cmp
xor
in
cmp
lahf
sbb
cmp
fistl
int
adc
inc
cmp
jne
or
sub
mov
sub
inc
dec
leave
or
jge
sub
shr
fistpl
or
and
inc
test
pop
loope
pushl
or
test
je
mov
shr
xor
test
cs
and
es
or
test
je
cs
xor
rolb
fiadds
loope
or
mov
and
xchg
adc
adc
fstl
sarl
loope
sbb
aad
fidivl
rcrl
or
adc
push
mov
mov
adc
jmp
sbb
push
fsubrl
mov
and
jg
imul
outsb
jnp
rorl
repnz
adc
rorb
pop
insb
lods
mov
cmpsl
cltd
test
out
fisttpl
add
je
add
sub
mov
xchg
sub
adc
pop
xchg
rorb
mov
call
cmpb
inc
jne
or
pop
jl
sarl
pop
pop
ret
jmp
cwtl
add
ret
sub
add
dec
shlb
aaa
ret
add
rcrl
js
rclb
dec
push
je
icebp
xor
fisttpl
out
pop
and
mov
cmp
ret
aaa
push
jmp
adc
pop
add
xor
jbe
add
or
xchg
jmp
pop
mov
mov
pop
inc
idiv
adc
sub
sbb
jmp
andb
mov
add
add
sbb
push
enter
enter
stc
dec
nop
and
test
push
cmp
inc
add
sbbl
adc
adc
outsb
loop
dec
fwait
cld
call
adc
add
call
nop
and
inc
xchg
and
faddl
sbb
imul
lock
lods
fs
ja
xor
dec
jbe
cmpb
xor
movb
inc
cmp
jb
pusha
mov
jg
aas
fcmovnbe
imul
cmpl
shrl
outsl
or
inc
sub
and
or
out
outsb
sti
and
add
push
add
sub
je
adc
inc
cmp
jecxz
jmp
shr
lea
loopne
cmp
jae
incl
fcompl
outsl
pop
lret
jbe
add
imul
cld
pop
inc
push
mov
lcall
movsl
or
mov
mov
jne
shll
fdivl
test
fcomps
jge
add
cli
rolb
daa
rcll
cli
or
dec
imul
cmp
jo
xchg
pop
decl
jne
mov
xchg
inc
shrl
or
pop
jbe
or
cmp
mov
sti
not
and
push
jl
and
or
add
lea
test
xlat
sbb
shr
shl
out
push
jo
add
repnz
not
and
incl
sti
testl
mov
aas
test
or
mov
ja
js
add
push
aam
or
xchg
pushl
fisubs
fimull
add
lea
shr
fistps
xadd
adc
pop
inc
sub
mov
and
not
outsl
scas
mov
add
repz
pop
neg
fidivrl
shr
or
add
dec
daa
pop
in
pushl
adc
xchg
sbb
sarb
fimull
cli
mov
push
push
test
jle
lahf
jle
not
and
shlb
adcb
sub
xchg
rcr
loope
insl
fnstenv
add
loopne
fiaddl
pop
popa
xlat
or
mov
into
outsl
sub
adc
test
roll
mov
jae
jl
or
lods
sbbb
add
bnd
add
out
xor
add
xchg
xchg
ja
sbb
les
repz
fstpt
subb
addl
repz
add
rcr
das
pusha
sbb
mov
pop
scas
testl
jle
mov
pop
les
subb
jns
sbb
loop
cmovno
fisubl
sub
sub
fdivrs
or
fdivrs
mov
shl
pop
mov
stc
es
les
adc
out
or
xor
or
ret
cmp
or
xchg
jno
std
stos
lods
sub
es
add
and
pop
imul
enter
das
push
imul
repz
cmpsb
pop
mov
xor
sbbb
lods
mov
ret
popa
adc
mov
and
mov
jo
loopne
ljmp
jbe
and
aad
aam
pop
bound
push
imul
sbb
shl
test
jecxz
cmpsl
and
jg
jge
dec
jo
in
cmp
inc
rclb
push
fadds
hlt
outsb
mov
daa
clc
jb
repz
notl
pop
es
adc
repnz
xchg
xorb
movsb
and
stos
mov
xchg
out
call
pop
and
imull
mov
repz
pop
adc
call
xlat
lods
arpl
fcmovb
mov
pusha
mov
push
adc
add
insl
sbb
and
pop
and
lcall
jge
outsl
addr16
mov
fnstcw
out
shrb
lret
adc
scas
add
fstp
mov
mov
out
loope
out
sbb
loopne
jle
lcall
jmp
fldt
pop
aaa
or
mov
push
fbstp
inc
fimuls
data16
sbb
push
cmp
popa
nop
lods
popf
gs
call
mov
loop
shr
or
xlat
push
fisubrs
fdivs
test
lods
pop
add
pop
das
jbe
clc
mov
daa
outsl
pop
lods
cmp
daa
sub
aad
flds
into
shrl
outsl
adc
out
js
push
dec
fisttps
sub
adc
or
xor
test
hlt
inc
cmp
pusha
sbb
in
pop
imul
jbe
cli
mov
cmp
cmpb
divb
adc
ja
cmp
js
lds
popa
popf
insl
adc
mov
pop
adc
xor
mov
repnz
mov
popf
aaa
or
in
mov
jl
aaa
je
in
inc
inc
ljmp
in
insb
mov
xchg
mov
fimuls
in
mov
cltd
jb
repz
sub
int3
pop
pusha
dec
mov
lret
bnd
cli
xor
shrb
jo
mov
out
out
outsl
js
or
mov
jle
sub
outsl
xchg
out
testl
imul
cli
daa
mov
icebp
mov
lret
fimuls
test
fwait
outsb
lods
push
xchg
jae
adc
fidivs
test
aaa
or
cmp
iret
mov
or
push
aas
stc
or
cmp
aam
cltd
js
pop
mov
push
les
in
jle
xlat
sub
divl
idiv
ss
in
fxch
sbb
jl
pop
je
sbb
xor
mov
fildll
ljmp
sti
mov
stos
mov
fcmovnb
and
stos
rcrb
sbb
push
repnz
ret
sbb
jl
inc
int3
xor
pop
or
inc
push
or
mov
cmpsl
and
adc
lock
push
fidivrs
hlt
cmp
adc
xor
pop
ds
ret
pop
pop
gs
sbb
aaa
lret
sbbb
sbb
int3
or
pop
pop
sahf
push
or
ja
sahf
pop
bound
hlt
out
call
cmp
fwait
pop
unpckhps
sbb
pop
push
test
sub
clc
push
call
jnp
int
outsl
jecxz
jp
sbb
cld
xchg
stos
loopne
xor
sbb
out
incb
xchg
fninit
or
ret
mov
ljmp
fdivl
mov
adc
dec
mov
cwtl
sbb
jge
sbb
xlat
sbb
rcr
mov
xor
out
loopne
mov
fiaddl
and
lret
repz
pslld
ret
repz
int
pop
rclb
xor
mov
cs
mov
pop
jge
xlat
pop
add
pop
imul
movsb
mov
inc
or
or
push
mov
mov
addr16
inc
movsl
mov
lods
pusha
inc
xchg
mov
dec
cld
cmpb
aaa
jp
cmp
jl
js
sub
push
push
push
inc
pop
popa
testb
mov
cmp
mov
xlat
xchg
loop
push
pop
fisubrl
jle
fistps
inc
pop
inc
addr16
iret
sti
mov
adc
or
js
xchg
outsl
add
sbb
cmp
jne
pop
or
mov
xor
sbb
xchg
mov
mov
jmp
cmp
je
outsl
lcall
call
cmp
je
movsbl
add
sub
test
push
inc
cmp
jne
cmp
push
add
cwtl
xor
inc
add
mov
adc
subb
jo
jnp
mov
or
jg
adc
mov
cmp
shll
add
je
jg
or
in
mov
add
cmp
jnp
mov
adc
lea
inc
js
mov
push
sbb
jno
mov
xchg
out
mov
jmp
and
rep
add
push
aaa
or
in
mov
stc
jne
push
lea
adc
add
je
pop
dec
and
add
push
es
pop
mov
lret
in
lcall
sbb
les
jbe
lea
pushl
mov
jg
jnp
cmc
je
cld
dec
cmp
out
or
test
or
xor
fcomps
into
and
fildl
clc
pop
adc
mov
test
push
loopne
gs
outsb
sbbl
add
fsubr
int
mov
mov
push
iret
mov
sub
cbtw
lea
pop
std
push
or
call
out
stc
in
gs
das
lock
jo
hlt
pusha
mov
gs
test
lods
pushf
mov
fistps
or
bound
loopne
imul
call
and
xchg
cwtl
xchg
pop
sbb
mov
insb
les
shrb
adc
outsb
ret
ficomps
pop
fmull
inc
ds
pop
int3
loopne
mov
mov
and
ds
push
imul
in
dec
out
push
out
push
lock
icebp
in
sub
inc
repnz
mov
mov
xorl
mov
jo
or
inc
insb
test
add
sub
push
stc
hlt
or
push
add
imul
pop
or
leave
add
and
incb
es
or
xchg
xor
push
sub
cmpsl
mov
lea
bound
xor
xchg
je
mov
repnz
mov
jecxz
cwtl
das
sub
push
ret
cmp
sbb
sub
loope
jae
jnp
push
movhps
mov
add
bound
dec
dec
or
test
xor
por
mov
jl
movsl
or
xchg
popa
push
fucompp
or
add
add
adc
adc
add
jo
jb
ret
sbb
out
lods
add
sbb
dec
es
clc
add
pusha
xlat
insl
mov
sub
add
hlt
push
shlb
xchg
insl
fistl
pop
call
mov
jmp
mov
jp
inc
inc
inc
loope
sbb
cli
hlt
pop
jb
pop
movsb
cmp
jne
icebp
stos
fcmovbe
insl
add
mov
repnz
incb
adc
andl
insl
sub
subl
lock
push
dec
cld
pop
jb
bound
movsb
sub
add
mov
subb
push
push
je
dec
dec
pop
cmp
pop
jb
mov
inc
add
cmp
das
mov
push
test
dec
data16
jae
sete
push
sbb
ljmp
insl
xor
mov
inc
ja
movl
mov
adc
pop
mov
add
fldcw
jb
arpl
ss
aad
mov
pextrw
sub
outsl
cmp
test
cmp
call
xchg
xchg
and
mov
cmp
pop
repz
aaa
clc
inc
push
pop
cld
call
xor
mov
test
or
jp
iret
push
xor
arpl
dec
mov
cmpsb
xor
or
or
xchg
or
popa
and
mov
js
push
testb
shr
dec
mov
cmp
mov
push
sahf
xchg
mov
lods
push
int
test
or
bound
jle
les
jbe
pop
stos
pushf
add
int3
stos
stos
rclb
xor
arpl
push
or
enter
dec
je
in
jae
or
das
cmp
fsubrl
cmp
faddl
cmp
and
ret
jae
or
pop
xor
mov
add
and
insb
je
subl
mov
shll
add
std
repnz
xchg
add
xchg
in
sbb
push
nop
mov
add
xchg
out
add
mov
fwait
popa
cwtl
ss
shlb
push
jle
dec
mov
xchg
sbb
jne
mov
and
imul
call
dec
mov
mov
mov
fs
shl
inc
mov
add
jg
std
or
divb
adc
lods
mov
jle
pop
popa
jl
cmp
mov
sbb
mov
or
mov
xlat
sbb
mov
je
cmp
mov
pop
fistl
mov
scas
or
imul
push
jo
mov
jo
push
push
pop
pop
addr16
dec
shlb
jae
into
pop
mov
hlt
data16
xchg
in
sbb
pop
adc
pop
pop
call
pop
jmp
call
mov
das
add
inc
cmpb
sbb
add
adc
cs
cmpsl
idiv
xchg
adc
sarb
sub
pop
dec
mov
mov
movsb
loope
std
inc
ss
mov
test
imul
push
popf
fstpt
push
push
pusha
stos
or
test
jo
push
jg
sbb
jg
mov
bound
scas
dec
or
lret
scas
insl
mov
mov
mov
mov
lret
in
mov
mov
mov
mov
jbe
imul
lret
mov
fsts
rcl
js
in
mov
insb
aam
aad
ss
imul
fsubrs
and
fcmovu
gs
jbe
xor
loopne
test
loop
jecxz
xchg
fldt
push
out
dec
out
call
jmp
insl
jae
shll
je
insb
mov
sub
jo
mov
ret
les
lds
fldt
leave
lret
cmp
int3
mov
xchg
push
xchg
xchg
mov
mov
cltd
lcall
outsb
fwait
insl
xlat
jnp
mov
mov
mov
mov
mov
cmpsb
xor
xor
mov
test
push
test
je,pn
shl
clc
ds
hlt
cli
jns
lea
xor
pop
mov
or
or
mov
pop
das
and
adc
hlt
jo
mov
xor
lret
pop
fistpl
mov
jmp
insb
xchg
dec
cs
ds
mov
xchg
pushf
lcall
jmp
dec
rcrb
fstps
xchg
cmpsb
cmpsl
test
adc
pop
push
inc
shrl
out
fsubrp
jge
shrb
clc
adcl
inc
jge
sti
movsl
into
dec
xchg
push
dec
ret
ds
push
pusha
shl
and
imul
xor
scas
fcoml
sbb
daa
ja
lds
inc
sub
nop
jmp
aaa
sbb
dec
sbb
insb
sbb
inc
fmuls
fs
mov
shr
cmp
aas
mov
nop
sbb
xchg
repnz
sti
gs
je
or
rcrl
andb
add
jae
push
aaa
pop
or
and
mov
movsl
adc
sbb
jb
fadds
pop
mov
fdivrs
or
lea
daa
lock
in
lret
mulb
mov
mov
push
push
fsubrs
xchg
mov
push
sbb
mov
addb
sbb
jne
test
idivl
inc
push
inc
mov
fistps
loopne
inc
mov
ficomps
mov
adc
je
push
into
xlat
pop
cmp
add
sub
pop
pop
lock
jb
add
fdivs
std
pop
mov
mov
adcb
std
jl
and
daa
dec
jne
add
in
shll
adc
pusha
cmpsl
dec
ficomps
push
shr
xor
jl
cwtl
mov
sub
cmc
sub
push
mov
or
cmpsb
test
loopne
and
xor
cmpl
outsl
les
add
fisubrl
mov
mov
pop
jmp
imul
pop
adc
add
dec
pop
fsub
clc
std
scas
pop
aad
sbb
call
push
mov
jb
lea
in
cltd
in
cmp
cld
call
mov
bound
fsubrp
jnp
mov
andl
add
pop
cs
push
and
cmp
incl
icebp
pop
mov
adc
ljmp
out
sub
add
loope
or
adc
loope
insb
jmp
and
imul
jmp
lea
cltd
lea
mov
xchg
mov
cld
call
sar
adc
andl
fmuls
call
fsubrl
xchg
loopne
adc
neg
pop
sti
mov
mov
xchg
js
cmp
push
icebp
andb
test
pop
cs
int3
dec
int
jp
imul
insb
popa
push
dec
mov
lcall
fs
xor
insl
fidivl
fildl
fstp
jae
shrl
cmpsb
fbstp
xor
xor
push
xorl
std
cli
sti
imul
xor
std
insl
mov
imul
shll
mov
es
outsb
pop
movsb
imul
pop
enter
pop
lret
in
xlat
sub
js
out
call
nop
cmpsb
imul
jb
adc
jo
out
rol
cli
mov
pop
ja
fnsave
or
pop
aam
cmp
push
shrb
fdivrs
adc
push
dec
andb
pop
shll
mov
push
hlt
dec
mov
inc
xchg
add
in
fsubs
int
scas
push
loopne
mov
neg
sub
xor
dec
cli
sub
xor
inc
or
shll
imul
call
lock
xor
mov
bnd
xor
rcl
dec
shll
je
sahf
hlt
inc
mov
xchg
add
and
jmp
imul
adc
pop
stos
mov
clc
and
dec
xchg
stc
xor
xor
inc
mov
addr16
jb
les
pop
idiv
add
nop
pop
fwait
add
cmc
dec
sarb
xor
pushf
or
es
inc
mov
cmp
and
in
add
sbb
push
inc
hlt
aam
mov
dec
fdivr
mov
inc
in
xchg
jmp
lock
jge
cmp
and
fldl
or
lret
outsl
shll
jns
repnz
inc
in
in
iret
push
sub
push
add
sub
insl
pop
iret
push
pop
push
adc
dec
in
push
or
ret
rorl
bound
ljmp
xor
int3
pop
lea
xor
stc
js
mov
dec
aas
je
and
shrl
es
mov
mov
lcall
mov
mov
mov
mov
rol
ret
ret
mov
enter
lret
fwait
gs
fs
int
das
into
iret
scas
imul
adc
or
pop
xlat
aaa
fcomp
fidivrl
ja
mov
ficomps
fbstp
loope
jecxz
imul
jmp
ljmp
sbb
push
cmpsb
arpl
fs
es
cmpsb
jmp
es
lahf
dec
loopne
inc
cmp
xchg
mov
add
cs
jo
sbb
scas
push
sbb
adc
jae
aad
and
aaa
fwait
cld
or
mov
clc
je
fsub
mov
out
loopne
cmp
push
adc
call
mov
out
mov
mov
js
fcompl
out
loop
sub
shr
push
xchg
pop
fdivrs
lea
xchg
push
and
adc
inc
icebp
add
inc
sbb
pop
mov
shlb
lds
pusha
lcall
decl
jb
lea
jmp
mov
js
mov
adc
add
aam
incl
sbb
movsl
call
push
mov
add
ficomps
jge
and
add
or
and
mov
and
aam
add
cmp
jmp
jmp
xchg
mov
mov
push
push
divl
cmc
mov
adc
ds
movsbw
add
mov
cltd
idiv
mov
outsb
xor
jmp
adc
add
xor
push
cld
mov
push
dec
call
cmpsl
dec
int
scas
adc
xor
jl
les
mov
sbb
xlat
cld
push
je
fsub
pusha
cmpsb
inc
mov
clc
fcmovnu
das
inc
loopne
xchg
inc
in
add
insl
mov
loopne
test
cmp
pusha
cmp
mulb
jge
push
mov
mov
clc
test
cmpsb
bound
cmp
test
fs
call
adcl
sbbb
fimuls
push
push
dec
loope
movsb
mov
and
lcall
or
fwait
or
shlb
jle
push
and
mov
fdiv
mov
pushf
pusha
aad
and
ret
push
fadd
fucom
add
incl
push
out
in
lret
pop
sbb
sub
mov
sbb
pusha
jmp
cs
shrl
push
cmp
xchg
out
inc
stc
sbb
mov
in
clc
decl
xchg
pop
adc
or
loop
call
push
loope
push
push
rcr
and
and
jo
ss
out
push
push
lods
cmp
outsb
ja
jmp
dec
shl
rcr
mov
jne
pusha
ja
decl
cmp
cmp
outsw
ficoml
mov
bound
pop
jmp
mov
hlt
call
call
pop
dec
xlat
mov
and
js
stc
scas
or
add
call
mov
loopne
callw
enter
into
aad
in
sub
dec
mov
stc
xchg
call
cmpsl
jmp
push
push
add
push
ror
cmp
fistps
lret
add
xchg
mov
imul
or
movsb
mov
jg
pop
add
std
pop
xor
out
cmp
sbb
mov
cmp
jge
out
mov
dec
jmp
push
pushf
out
ja
int
mov
xchg
or
or
dec
pushf
fildl
imul
sub
loop
mov
or
cmp
jmp
mov
cmp
cmp
or
lds
cmp
cld
adc
push
cld
cld
sub
sub
add
mov
jp
and
or
add
lods
and
cmp
adc
mov
outsb
fcmovnu
loop
fcomps
inc
pop
push
invd
sub
mov
fdiv
cli
sub
test
mov
repz
pop
xchg
sub
jmp
mov
cmp
inc
stc
std
gs
std
or
mov
hlt
sti
jnp
xor
dec
call
out
ror
push
push
flds
ficoms
adc
and
xlat
rcrb
adc
test
push
xorl
rolb
nop
out
jnp
xorl
adc
and
jg
movaps
mov
filds
sub
inc
push
add
inc
into
ret
jmp
push
aaa
jo
jns
mov
cmc
mov
out
out
aam
or
sbb
jmp
shlb
adc
push
dec
loopne
xchg
dec
or
add
addb
cmp
jo
cltd
and
dec
js
rcrb
call
clc
inc
stos
cmp
fnstenv
ss
sarb
ds
ja
mov
and
inc
mov
xchg
adc
ljmp
orb
mov
sbb
adc
add
mov
dec
fldl
cmp
stc
sub
ret
jne
jg
mov
jne
adc
dec
testb
aas
sahf
mov
leave
stos
jmp
andl
aas
aam
movsb
popa
push
push
mov
ds
xchg
insl
fidivs
xchg
cs
clc
mov
push
stos
sbb
out
inc
or
ret
loope
xchg
shrl
repnz
leave
hlt
hlt
mov
jbe
sarl
xchg
push
popa
inc
add
aas
add
or
mov
hlt
push
pop
mov
sbb
pop
dec
push
push
inc
loopne
or
fsubrs
jae
adc
and
pop
mov
insl
cmp
and
xchg
aaa
add
iret
rorl
sbb
adc
push
dec
mov
pop
and
mov
mov
inc
leave
mov
movsb
mov
mov
cmp
pop
rorb
popf
push
pop
mov
fiadds
jnp
mov
and
rcrl
shrl
push
pop
xchg
bound
cmp
jnp
adc
cltd
xchg
int
xchg
mov
stos
jb
sahf
daa
fnstcw
mov
mov
test
cmpsb
leave
and
jle
ljmp
push
and
es
mov
inc
sbb
mov
and
and
fwait
in
and
call
and
mov
cmpb
sbb
pop
pusha
in
fstl
sbb
lahf
out
loopne
cwtl
sbb
mov
outsb
cmp
push
xor
add
sti
mov
clc
sbb
mov
pushf
cmp
adc
movl
pop
insb
jmp
daa
push
xlat
fmul
rcl
int3
sbb
mov
cmpsb
or
mov
movsl
test
mov
inc
xlat
pop
outsw
sub
mov
outsb
je
pop
pushf
movsb
sub
arpl
pop
ss
hlt
les
mov
pop
or
lret
out
fldcw
adc
sbb
aaa
stc
fcomi
or
mov
and
call
insl
or
incl
inc
push
insl
outsl
outsb
insl
jl
inc
inc
addr16
xor
xor
movsl
pop
lcall
jb
pop
lcall
ljmp
mov
shl
jb
add
call
mov
jge
test
jns
mov
mov
adc
je
ss
and
and
in
fistpl
jae
and
mov
insb
out
jne
push
pop
ret
inc
adcb
adc
das
stc
mov
decl
adc
mov
lock
adc
in
or
adc
xor
les
mov
call
stc
mov
aas
scas
or
les
push
xor
cmp
nop
push
push
cmp
and
and
push
mov
je
pop
adc
rcl
jbe
pop
hlt
int
rorl
js
push
dec
insb
xor
fdivrs
fidivs
dec
push
arpl
cmpl
and
jmp
xchg
or
add
jecxz
movsb
mov
pop
push
je
sbb
push
add
shlb
leave
repnz
adc
insb
out
add
adc
jle
jo
ficoms
push
cmovb
iret
inc
iret
call
out
add
mov
sub
cmc
clc
sub
or
add
rcl
fdivs
cmc
gs
fsub
call
pop
add
sub
dec
or
mov
add
sub
adcb
jne
mov
ljmp
popa
mov
stc
fmull
imull
pop
adc
nop
sbb
sub
push
enter
lea
jb
dec
pop
and
lahf
mov
les
std
sbb
inc
inc
lock
adc
inc
pop
aaa
fwait
cmp
jnp
mov
jne
clc
cltd
mov
divl
das
dec
sbb
hlt
cmp
and
mov
enter
adc
inc
mov
xlat
ljmp
sbb
push
sub
dec
lock
mov
sbb
push
ret
lods
inc
inc
mov
or
test
xchg
mov
or
cmpsb
inc
je
push
xor
push
adcl
dec
dec
pushf
dec
dec
shll
insb
insb
dec
xchg
lods
xor
addr16
fldenv
mov
and
insb
mov
gs
add
dec
outsb
pop
mov
xchg
je
push
jb
mov
pop
jbe
movsb
push
movsl
cmpsb
pop
cmpsl
push
gs
scas
pop
cs
lods
lods
sub
mov
lock
je
jo
sub
mov
jo
outsb
push
outsb
mov
lret
gs
gs
dec
shrl
roll
aam
mov
mov
lea
mov
inc
xchg
gs
imul
xchg
fistl
cltd
lcall
je
inc
push
dec
shll
fnstsw
cmp
inc
loop
in
inc
xlat
xor
out
out
mov
lcall
jb
mov
shrl
jmp
mov
mov
cmpsb
pop
jbe
mov
arpl
test
arpl
xchg
xchg
xchg
xchg
in
stos
cmp
xchg
in
mov
lock
sub
xor
lret
xor
or
clc
adc
push
add
ds
sub
shll
add
jne
jp
and
cmp
dec
xchg
aam
pop
rep
popl
mov
shrb
mov
mov
dec
xchg
pop
outsl
add
sti
in
jecxz
je
push
adc
adc
imul
inc
iret
iret
loop
je
dec
xor
lds
leave
sub
or
xchg
shrl
cld
repz
adc
fimuls
cwtl
or
sbb
mov
shlb
sub
bound
mov
or
add
mov
insb
push
clc
call
enter
mov
lret
or
or
push
aas
mov
xor
lsl
jno
adc
mov
xor
pop
adc
popa
inc
jnp
aad
jo
pop
sbb
cld
test
sbb
scas
jne
call
pop
inc
mov
subl
sahf
adc
push
cmc
movsl
mov
lds
mov
movsb
inc
sub
mov
pop
or
in
andb
push
lahf
insl
imul
sarb
sbb
mov
mul
or
sub
sub
pusha
sub
push
fdivp
ss
mov
cmp
inc
js
jmp
clc
push
mov
outsl
jnp
mov
das
pushf
xor
jmp
jle
or
arpl
inc
lahf
push
scas
cmp
scas
cltd
in
in
inc
sub
popf
les
push
xchg
addb
sbb
mov
sub
call
pcmpeqw
call
out
add
cmp
cmpsb
jbe
xor
aas
push
mull
dec
xchg
arpl
repz
dec
addr16
lcall
jne
and
jae
cld
inc
rorl
or
xchg
enter
sbb
pop
cmp
pop
xchg
ret
ficoms
push
pop
jb
adc
jmp
pcmpeqd
movsl
std
cmp
pop
mov
sub
fcomps
incl
subb
sbb
in
or
std
or
mov
aas
gs
xchg
xchg
popa
je
outsl
outsb
gs
pop
xchg
cmp
insb
shrl
lcall
clc
stc
xchg
xchg
xor
cli
sti
cld
in
xchg
and
out
in
mov
fldenv
sti
xor
xchg
fdivr
dec
in
add
cmp
adc
adc
jg
pop
insl
mov
das
pop
or
or
out
jg
xor
and
fdivs
insl
sbb
inc
add
scas
cwtl
nop
lret
xchg
mov
and
mov
in
bswap
dec
add
sub
mov
adc
mov
hlt
test
fsubrs
push
mov
popf
lods
in
push
mov
sbb
adc
push
nop
rolb
jae
xchg
lods
dec
call
mov
sahf
hlt
shlb
cmp
and
push
and
movsl
decb
fcmovnbe
and
or
add
fiadds
je
out
pop
mov
or
sub
push
rcrb
mov
inc
lret
pop
add
je
sbb
loop
in
in
adc
or
jle
adc
adc
pop
jg
mov
push
iret
repz
pop
adc
sub
xor
adc
xor
xchg
pop
adc
push
pop
adc
das
in
js
inc
cmp
prefetcht0
push
imul
adc
nop
pop
dec
and
call
out
enter
add
cmp
and
shl
jbe
add
or
add
and
insb
and
adc
xchg
cmpl
loope
jae
cs
or
cld
adc
out
pop
clc
push
pop
or
leave
outsb
scas
stc
push
das
sbb
adc
cmp
and
cmpl
mov
mov
dec
push
sbb
add
adc
movsl
inc
es
jae
call
xor
or
rclb
inc
inc
mov
shll
xor
imul
cmp
xor
rcl
popa
imul
xor
shll
jne
and
lea
xchg
gs
arpl
gs
xchg
xchg
outsb
gs
gs
gs
xchg
jo
imul
pop
jne
rcrb
leave
mov
lret
aas
popa
arpl
mov
lret
outsb
cmp
pop
ss
loopne
loope
jns
in
mov
out
lcall
pushf
sub
imul
lcall
fidivs
jo
je
add
and
mov
or
jmp
mov
jmp
movsb
pop
movsb
std
mov
xchg
push
adc
inc
idiv
or
or
clc
sbb
notl
mov
mov
pop
push
call
repz
adc
cmp
jg
and
xor
fmull
outsb
vmread
push
jl
repnz
jo
sbb
or
fdivr
xor
jne
stos
je
imul
clc
stc
clc
ret
lcall
cmp
mov
add
mov
xor
mov
xchg
pop
fldt
cmc
stos
add
sbb
lcall
jb
ret
and
xor
pop
xchg
fsubr
cmp
cmp
fcoml
pop
out
pusha
or
je
sti
outsb
mov
add
mov
xor
or
jnp
push
incl
lods
adc
push
mov
pop
xor
jle
jecxz
push
mov
mov
mov
sbb
fdivr
shlb
leave
adcl
mov
cmp
jmp
in
ljmp
or
sub
lahf
adc
push
movl
jge
outsl
push
xchg
pusha
xchg
arpl
pusha
cmp
shlb
sub
data16
xor
jne
loopne
dec
and
mov
xor
loopne
dec
aas
cmpsl
sbb
inc
fucom
jge
daa
daa
adc
arpl
lret
or
cmp
xchg
sub
mov
bound
jne
push
rol
insl
aad
cs
xorl
and
mov
xchg
adc
mov
sbb
mov
push
mov
or
push
inc
mov
push
xlat
arpl
fisubrs
jo
ss
xorl
fidivs
into
push
and
push
ss
pop
pop
fldl
mov
das
xchg
push
push
dec
fs
xchg
xchg
xchg
add
jg
and
in
jl
cmpsb
test
popa
jns
lcall
addr16
or
mov
push
mov
sub
adc
mov
leave
xchg
mov
dec
push
pop
and
push
mov
push
mov
sub
xor
popf
cmp
or
xor
cmc
push
scas
sub
push
pop
mov
call
iret
inc
movsl
or
movb
adc
mov
or
outsl
and
add
cmc
add
popa
cmc
push
mov
hlt
imul
fs
push
jl
jne
push
jb
sub
sbbb
adc
imul
adc
push
add
sbb
pop
sbb
sub
mov
pop
dec
pop
or
sbb
or
inc
stc
xor
pusha
sub
sbb
popf
push
cmc
rclb
cmpsl
sbb
lret
cmp
movsl
aam
fnsave
adc
pop
sub
andb
inc
ds
clc
cmc
fwait
sub
mov
mov
jecxz
icebp
push
pop
sbb
fstl
sti
xchg
push
outsl
nop
push
fsubs
je
sub
lock
add
imul
adc
mov
jmp
dec
and
in
fst
xor
cmp
mov
mov
lods
jmp
adc
push
lahf
lret
dec
cmp
and
test
pop
pop
jge
jl
mov
mov
mov
cmp
outsl
mov
sub
test
jle
mov
sbb
lea
push
shl
add
cs
xor
add
mov
negl
mov
dec
and
pop
jae
leave
jo
das
sbb
sbb
das
xor
sbb
and
leave
xor
and
sbb
leave
ret
mov
ljmp
sbb
outsb
mov
add
aad
fistps
cmp
add
das
fwait
call
add
or
xor
stc
js
sti
add
sub
andb
daa
ljmp
mov
cmp
fiaddl
or
mov
out
clc
clc
pushl
sbbb
ret
push
or
aaa
fs
pop
add
test
repnz
push
ret
push
or
out
sbb
mov
popf
mov
pop
dec
icebp
sub
stos
mov
dec
push
push
push
push
mov
mov
in
cmp
pop
dec
xlat
test
loop
jnp
sahf
sbb
cmp
adc
mov
xlat
fidivl
das
pop
divb
xchg
int
or
in
xor
push
cltd
in
aad
push
je
leave
or
popa
imul
push
xor
cmp
mov
pop
add
movsb
jnp
daa
call
andl
pop
push
ret
ja
sbb
sbb
and
push
in
sbb
sub
in
loopne
fs
sub
lea
cmp
jns
insb
jbe
fsubrl
dec
ds
jle
sub
int3
data16
or
mov
aad
sbb
pop
dec
adc
jg
and
icebp
sbb
cmp
pop
mov
push
jge
idiv
fstpt
mov
repz
jmp
cmp
loope
jne
cmp
mov
fwait
push
call
mov
cmpsb
or
and
xor
icebp
dec
cs
outsb
or
ror
sbb
mov
xchg
xor
jns
pop
cld
pop
clc
ret
fdivrl
push
jbe
mov
mov
mov
dec
or
jne
daa
cmp
cmp
jb
call
je
add
xor
add
mov
jecxz
push
ja
imul
lcall
insb
insb
in
mov
jb
cli
arpl
xor
sti
jbe
arpl
rol
and
jne
in
or
push
and
and
jmp
call
pop
je
push
push
add
jecxz
push
cmpsb
mov
pop
jo
cltd
cmp
mov
dec
pop
pop
xor
inc
xchg
dec
pop
pusha
cmpb
push
and
xor
and
pusha
fs
jg
adc
sub
dec
dec
add
enter
std
or
pusha
popf
js
adc
into
mov
xor
fwait
mov
pop
jo
inc
push
mov
ret
sub
xchg
push
push
popa
negb
push
pop
ss
jl
jb
xchg
sbb
data16
and
add
jle
iret
enter
loope
push
loopne
mov
rorl
jbe
or
inc
push
ret
mov
and
sub
sbb
sbbb
or
jb
add
daa
mov
popf
out
cs
jge
and
movsb
inc
cmc
pop
cmpsl
pop
nop
hlt
int3
xor
cmc
into
mov
jne
sbb
or
and
add
jp
mov
je
mov
shrb
cmc
push
xchg
pop
pop
test
xchg
pop
in
or
mov
sarb
popa
push
pop
clc
testl
xor
sbbl
test
imul
xchg
dec
addl
outsb
mov
push
sbb
dec
shll
jo
insb
jo
xor
shll
imul
dec
insb
insb
scas
inc
je
rolb
inc
fs
jo
lcall
dec
lret
mov
outsl
lods
subl
out
lret
jne
add
and
xchg
aad
je
xchg
sub
outsl
jne
mov
orl
inc
nop
inc
push
pop
xchg
xchg
cwtl
jno,pt
in
shll
int3
adc
sbb
repz
pop
and
xchg
outsb
fsubl
pop
add
xor
in
rclb
shll
adc
xor
sbb
mov
in
push
fildl
push
hlt
inc
cmp
push
xor
int3
add
push
mov
push
cmp
xor
hlt
cmpb
dec
in
dec
mov
lock
sbb
adc
sub
pop
push
xchg
xchg
dec
mov
push
lea
or
aas
jge
pusha
add
adc
jne
movsb
jecxz
mov
jecxz
push
cmpsb
test
nop
dec
add
enter
inc
inc
pop
hlt
add
scas
push
gs
mov
outsl
data16
pop
xchg
in
ja
gs
dec
cmp
imul
flds
data16
push
gs
orb
outsl
ja
jmp
push
in
push
nop
insb
dec
outsl
push
xchg
mov
popa
xchg
insl
pop
dec
pop
xchg
gs
push
dec
inc
popa
arpl
ret
in
sbb
inc
test
cmp
dec
fwait
fs
mov
mov
rolb
ret
add
dec
mov
push
data16
adc
into
adc
add
insb
add
adc
jl
push
xor
cs
xor
xchg
jb
das
cltd
mov
mov
xchg
insl
sbb
ret
push
mov
mov
adc
mov
adc
jne
mov
mov
cmpsb
flds
les
stos
fldcw
pusha
mov
addl
fistpl
add
sub
rcrb
push
xchg
push
and
mov
ss
dec
into
pop
ljmp
enter
testl
push
cmp
test
add
movsl
sbb
mov
sahf
sub
mov
xchg
or
std
jno
aad
call
fs
insl
je
jmp
mov
jmp
in
in
mov
add
out
out
ds
lock
cwtl
jae
shll
lcall
aam
inc
mov
stc
xlat
stc
fcomps
enter
stc
push
fcomi
lods
fcompl
mul
jns
outsb
adc
clc
leave
clc
fdivr
xchg
cli
aad
push
jb
cli
fdivr
fsincos
in
popa
pop
cmp
pusha
mov
test
icebp
add
mov
dec
xchg
int
mov
add
movb
insb
push
test
popf
insb
int
jne
outsb
and
rorb
insb
mov
mov
in
jp
sbb
ja
inc
jb
popa
mov
ja
mov
and
mov
je
dec
ja
dec
insl
lahf
mov
jbe
mov
dec
aaa
jb
movsl
cmpsb
nop
das
imul
aad
or
daa
addr16
xchg
dec
xchg
cwtl
cltd
je
and
lcall
jbe
mov
xchg
daa
daa
dec
ja
push
jo
mov
mov
jbe
test
pop
repnz
lods
fdivr
lcall
xchg
sti
je
pop
add
cmp
cmp
outsb
mov
cmp
pop
test
mov
inc
sub
aas
pop
popf
popf
addr16
stc
pop
dec
stc
push
inc
pop
icebp
cmp
or
stc
fdivs
sub
jmp
test
and
inc
and
or
sbb
push
in
fdivl
addl
sar
sti
les
out
jmp
inc
xchg
into
call
outsl
lds
mov
mov
mov
cmp
jl
add
jg
inc
cmp
jl
fs
push
jnp
and
xor
push
sbb
sub
int3
int3
push
sub
je
jo
cmp
shll
jno
dec
shll
xor
xor
shll
xor
dec
shll
mov
add
cmp
cmp
mov
sub
xor
push
dec
pop
das
push
xor
dec
xor
popa
jae
call
cmp
leave
fnstenv
rcl
shll
jo
dec
shll
jno
xor
shll
jae
xor
shll
xor
dec
xor
xor
shll
lret
mov
subl
outsb
das
jmp
das
sar
jb
xchg
cmpsb
cld
std
insl
lods
ljmp
adc
gs
lcall
xchg
lods
lock
cli
mov
test
bound
jle
pop
in
lcall
std
fdivl
je
jo
xor
sarl
das
das
outsb
bound
cmp
xor
aad
arpl
arpl
xor
outsl
insl
cmp
xor
xor
cli
add
leave
stos
popf
add
ss
out
movsb
or
hlt
popf
hlt
popa
xorl
cmpsb
imul
lcall
sub
cli
and
jns
push
sbb
or
jne
mov
insb
sub
add
mov
cwtl
sahf
imul
mov
fwait
xor
adc
sbb
fcompl
or
sbb
mov
add
adc
xor
or
daa
iret
xor
loopne
lods
fisttpl
into
inc
pop
adc
fists
adc
sub
adc
mov
sbb
wrmsr
lock
call
push
mov
sub
mov
or
jns
insb
movsb
or
fimuls
push
js
repz
fst
xor
inc
mov
stc
push
push
sbb
repz
repnz
pop
or
jnp
adc
xchg
aaa
dec
cli
xor
dec
push
pop
fstpt
stos
fwait
in
negl
xchg
stos
sub
pop
mov
xor
xchg
out
sub
popa
xchg
fsubl
xor
sbb
xor
or
mov
pop
mov
in
in
jno
add
out
fsubl
push
mov
sub
or
sbb
push
subl
mov
daa
and
or
dec
pushf
popf
mov
add
sti
inc
pop
push
push
xor
add
jne
xorl
je
int
xor
and
call
sub
movsb
mov
adc
adc
and
xchg
call
dec
nop
mov
repz
incl
add
cmp
call
loopne
xchg
pushl
int
test
push
mov
inc
jg
push
push
js
jl
xor
mov
xor
push
xchg
mov
add
mov
push
jge
inc
pop
fadd
push
ret
shrb
pop
and
mov
rol
adc
mov
aam
add
adc
add
shlb
lock
push
fdivl
mov
imul
sbb
cmp
mov
sbb
cmp
movl
cld
popf
inc
or
xor
and
sbb
loop
mov
pop
pop
inc
outsl
pop
imull
nop
fildll
and
jp
mov
ss
and
sti
or
and
pushf
mov
sti
mov
lods
inc
call
mov
je
cmp
adcb
outsl
sar
pop
inc
cmp
ja
or
xor
subps
jl
cmp
jg
movsbl
xchg
inc
jmp
cmp
jl
test
jbe
movaps
adc
out
jne
int3
mov
je
shll
dec
push
call
fcompl
pop
mov
lock
movntps
push
mov
add
sbb
add
arpl
es
dec
mov
shl
outsl
sahf
add
mov
or
push
adc
rcll
inc
xchg
ficoms
cltd
leave
adcb
xchg
jne
xchg
pop
xor
cwtl
jecxz
push
or
pusha
jne
jne
js
popf
add
sub
pusha
push
sti
mov
mov
push
push
push
mov
mov
or
mov
add
dec
pushf
push
inc
pop
cld
arpl
shll
pop
outsb
popa
jmp
push
cmc
addr16
cmpsb
outsl
insb
fs
rcl
out
imul
popa
mov
mov
sbb
xor
jbe
cmp
in
sub
inc
jmp
add
sub
cmpsl
arpl
mov
std
js
jae
sbb
clc
pop
sbb
cs
push
or
jb
pop
cltd
cli
push
pop
jae
out
test
push
mov
movsl
add
or
inc
mov
xor
lahf
push
cltd
sub
aam
decl
push
jo
shlb
adc
dec
pushf
jnp
stos
xor
cmovg
cmp
mov
sbbl
cmp
jge
push
push
pop
ret
pusha
lea
cwtl
push
push
cmpsb
andl
inc
mov
gs
ja
sbb
pop
push
push
es
or
dec
outsb
cwtl
cmp
or
inc
mov
lcall
rorb
fstpt
punpcklbw
jbe
sub
andl
sub
mov
or
or
addr16
push
or
es
xchg
cmp
adc
mov
jp
loop
or
pop
pop
xchg
test
and
adc
cmp
imul
add
xor
dec
add
inc
insl
test
sub
movsb
inc
cmp
call
je
inc
cmp
mov
jb
push
jge
jo
add
cmpl
inc
out
pop
jb
dec
or
imul
push
jl
push
or
mov
fisttps
fimuls
mov
dec
jmp
inc
dec
sbb
mov
mov
add
sub
insl
lock
inc
push
sbb
add
add
mov
pop
add
fisttps
loopne
jmp
jle
add
jno
mov
mov
mov
lods
pop
inc
outsb
inc
jae
mov
loop
mov
mov
sti
mov
lcall
shr
jle
movzwl
mov
jne
test
outsb
add
ljmp
jg
cmp
jne
ja
adc
aad
fists
imul
jne
data16
lock
pop
cmp
sub
rolb
add
ss
add
lea
int3
outsb
adc
mov
add
dec
add
inc
sub
jmp
pop
bound
cmp
add
das
outsb
aas
inc
jp
jbe
jno
push
pop
adc
je
adc
in
out
sbb
loop
inc
adc
iret
inc
sbb
cwtl
and
mov
dec
aam
cld
pushl
add
push
scas
clc
add
pop
or
pop
cmp
lods
cmp
pop
push
call
les
lea
test
js
push
rorl
insb
push
andl
jle
sbb
pop
lods
adc
call
mov
lahf
inc
aaa
pushl
jp
sbb
xor
inc
dec
sbb
sbb
add
les
ret
lcall
add
dec
and
int3
cmpl
cld
les
and
pop
mov
fmuls
push
insb
ss
or
sbb
and
xchg
fcmove
std
movb
testb
je
pop
inc
sub
es
shr
or
sub
pop
je
ficompl
add
js
push
cwtl
push
aam
xchg
push
enter
push
xchg
js
test
adc
inc
orl
fadds
fcoml
mov
enter
test
xor
sarl
mov
push
push
pop
in
repz
adc
add
sub
mov
adc
insb
shlb
jb
test
or
je
pop
mov
mov
push
lahf
mov
addr16
push
imul
mov
lods
cltd
cmp
mov
stc
or
in
dec
push
mov
add
add
stos
mov
fwait
xor
push
sbb
or
pop
inc
xor
push
inc
stos
rorb
sub
add
sbb
cmpsb
and
add
cmpl
incl
popa
pop
lods
pop
dec
xor
test
jecxz
xchg
icebp
ja
adc
in
jge
xor
in
push
stos
cli
adc
rcl
cltd
std
mov
push
inc
stos
mov
or
mov
or
or
loope
push
cmp
add
mov
add
sub
out
push
rorb
cmc
sbb
sub
jmp
inc
sub
arpl
or
pop
push
stos
data16
jo
out
push
fiaddl
or
shl
push
cmp
jbe
push
rorl
dec
sbb
loopne
mov
xlat
jle
outsl
popa
call
mov
loop
pop
mov
xchg
or
sbb
add
je
inc
js
cmp
rolb
cmp
imul
outsb
testb
stos
lds
lds
call
scas
fcom
push
faddl
add
push
ljmp
adc
sbb
decb
add
lods
out
xor
mov
loope
add
jl
flds
sub
pop
mov
push
ds
cmp
jl
das
pop
lcall
mov
push
sub
and
cld
add
fimull
and
pop
and
and
push
outsl
outsb
and
and
imul
and
mov
and
out
lcall
jae
loope
loop
addr16
jecxz
push
jne
popf
in
dec
adc
xchg
movsb
popa
jb
shlb
gs
gs
and
js
xor
xor
popa
jns
ljmp
test
in
mov
aad
or
mov
jo,pt
cmp
lea
and
mov
push
lods
addl
sub
and
xor
fcoms
xchg
adc
jo
sub
clc
es
mov
loopne
ret
push
adc
into
test
or
xor
jnp
jnp
bound
sub
lcall
in
push
fsubs
inc
push
in
push
shll
imul
shrb
addb
rolb
ret
in
jmp
add
push
xchg
subl
dec
pop
hlt
outsl
jb
pop
shlb
loop
in
repz
je
push
xor
out
add
push
adc
lds
aaa
inc
fs
dec
mov
and
in
xchg
xchg
lcall
or
fmuls
jno
lahf
jno
cmp
add
test
add
sbb
addr16
xchg
or
mov
and
fsubrs
and
mov
mov
adc
fistpl
test
mov
mov
cli
pop
jne
sbb
fbstp
pop
dec
push
cltd
nop
xchg
rol
or
sub
fmuls
add
or
push
sbb
pop
pop
add
sbb
sbb
pushf
mov
enter
test
or
enter
in
inc
and
pop
xchg
add
stc
jl
inc
inc
xchg
inc
xchg
push
xchg
cmp
xchg
push
shl
cmp
jae
or
add
jo
cld
mov
mov
in
xchg
inc
daa
mov
leave
into
mov
ja
cmp
fldenv
test
pusha
dec
jo
mov
sbb
gs
push
pusha
jns
add
push
sbb
mov
jl
jmp
inc
fs
arpl
gs
js
add
sub
testb
dec
outsb
imul
gs
jb
arpl
sti
cmp
add
dec
gs
jbe
cltd
add
pop
pop
mov
add
popa
xor
dec
gs
sysenter
add
inc
add
je
dec
fstps
and
add
mov
fldenv
mov
outsl
lahf
adc
test
outsl
mov
lea
inc
imul
aas
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
outsl
dec
xchg
push
and
je,pt
insl
sbb
insb
push
mov
adc
add
inc
insb
adc
add
jnp
push
or
xchg
aas
inc
adc
arpl
push
xor
das
pop
add
jnp
inc
add
scas
mov
ret
shrb
fists
outsb
adc
push
dec
outsl
lods
dec
imul
loope
ret
and
push
push
push
outsb
movsl
cwtl
xor
js
push
fcmovbe
sub
inc
jns
cmp
add
push
and
mov
int
jb
dec
into
add
inc
push
or
mov
gs
ja
inc
sbb
int
and
push
push
push
gs
jbe
xchg
lea
out
dec
sbb
push
orb
ret
xchg
insl
mov
pop
add
in
jo
push
push
xor
mov
and
adc
popa
imulb
mov
or
jno
pcmpgtd
pop
loope
inc
and
push
ret
push
das
clc
add
push
add
cmpb
push
fistpl
sbb
jae
bound
ret
cmpsb
jae
sub
ret
sub
push
inc
jo
cs
ret
jae
outsl
clc
push
imul
dec
inc
push
inc
sbb
mov
imul
jb
jo
outsb
loope
mov
mov
and
jne
jb
orl
inc
aaa
cmp
or
outsl
out
and
add
lahf
fildll
ss
adc
xchg
pop
scas
cmp
sbb
jbe
push
shrw
fisttpl
ret
pop
jno
aaa
imul
sbb
adc
inc
add
sbb
add
insb
pop
hlt
mov
ret
sub
mov
outsb
push
pop
mov
push
dec
mov
addb
add
xor
data16
push
pop
adc
mov
add
push
or
addr16
fs
popa
xor
mov
mov
std
inc
pop
pop
and
push
and
shll
insb
push
idivb
jmp
dec
aad
push
fmull
scas
push
push
pop
mov
push
js
outsl
insl
popa
inc
inc
inc
in
movl
adc
fsts
pop
push
jb
insl
mov
out
dec
pop
and
jae
mov
sbb
pop
dec
pop
insl
pop
pop
push
mov
imul
sub
test
adc
push
movsb
jne
mov
inc
sub
pop
add
jo
gs
jnp
negl
inc
stos
jb
cmp
idivl
loopne
or
inc
outsb
jne
push
add
testb
push
mov
or
or
cltd
add
insl
jp
and
imul
or
mov
xor
jb
adc
lock
add
mov
pop
call
fwait
cmp
out
in
sbb
xchg
popa
scas
add
add
cmp
mov
notb
imul
cmp
sub
imul
popf
aas
aas
xor
pop
push
sbb
pop
mov
arpl
nop
divb
xor
dec
sbb
bound
jae
and
out
fdivr
dec
out
mov
jl
jge
out
sub
or
loope
pop
jbe
outsb
adc
mov
or
cmp
push
sub
ret
add
dec
push
push
add
icebp
movb
jo
push
jmp
push
dec
insl
loop
outsl
inc
add
pop
jg
pop
mov
into
in
push
sbb
ret
add
data16
mov
add
movsb
mov
sbb
cmp
mov
outsb
adc
les
inc
sub
pop
es
inc
dec
push
dec
sub
mulps
dec
addr16
outsl
xor
cmp
cwtl
pop
mov
push
sub
ret
jmp
ja
adc
mov
stos
mov
pushf
stos
loop
outsl
or
mov
pop
push
ljmp
mov
call
mov
lret
sbb
dec
mov
mov
lods
mov
scas
jmp
lods
iret
or
or
adc
mov
addr16
inc
inc
insb
jb
mov
add
add
dec
mulb
adc
or
dec
stos
and
decl
inc
inc
dec
xorl
call
popf
ja
stc
lret
gs
jae
rcl
pop
mov
lea
jle
shll
cwtl
jl
movsl
mov
or
sbb
cltd
addb
xor
xchg
xchg
sahf
inc
gs
sbb
cmp
loopne
stos
fs
cmp
jmp
incl
popl
scas
shll
fstl
movsl
cmp
in
aas
cmp
xchg
fwait
pushl
js
cmc
jb
loop
cmp
pop
push
imul
outsl
in
mov
add
xor
outsl
jle
add
or
push
mul
je
stos
movsl
and
fistpl
inc
loope
sti
inc
xor
inc
mov
decl
lea
clc
dec
stos
inc
mov
adc
scas
mov
mov
mov
or
jmp
icebp
cmpb
scas
push
mov
repnz
xor
add
cmp
lret
pop
adc
push
call
pushl
fcom
cli
or
sub
rcl
add
dec
xor
ror
call
arpl
pushf
sub
test
addr16
or
push
xor
sbb
push
push
dec
add
and
shl
push
ljmp
imul
pushf
push
push
jmp
jg
loopne
data16
sub
and
jmp
add
insl
push
das
add
inc
cmp
call
call
aam
adc
fisubl
and
sbb
in
jnp
sti
enter
or
neg
pusha
es
add
add
sub
psrad
sti
movsb
rorb
dec
push
mov
clc
pop
stos
loop
sbb
push
test
or
stc
mov
adc
pop
mov
push
mov
lods
lods
add
loop
or
fnstsw
rcrb
mov
iret
xor
cmp
xor
neg
neg
pushf
push
sbb
shlb
mov
push
sub
sbb
inc
sub
ret
or
in
jg
xlat
and
ret
push
jmp
not
jbe
mov
jns
add
jmp
clc
test
cld
push
mov
adc
cmp
xor
mov
adc
std
add
mov
or
push
std
push
push
sbb
in
xchg
ds
mov
jmp
mov
pop
push
rcrb
fisttps
cmp
cmc
shl
push
lretw
imull
sub
call
in
fdivr
push
push
inc
arpl
fmull
jmp
mov
mov
ffree
mov
mov
out
push
or
adc
adc
sub
or
sbb
inc
push
pop
sbb
push
sub
lahf
mov
fisttps
lea
push
in
sti
out
cld
call
jmp
js
insb
pop
adc
call
out
fcompl
dec
jmp
push
int
fisttps
jmp
and
xchg
cmpsl
jno
out
mov
push
call
leave
jmp
jb
fists
imul
adc
pop
call
leave
jg
cld
js
xor
shrl
or
mov
movsbl
push
pop
les
inc
mov
pop
sbb
xlat
push
dec
sub
call
or
popf
pop
sub
stos
imul
shll
ljmp
xor
xor
cmp
cmp
cmp
sbb
insb
mov
rcrw
jo
or
call
hlt
mov
clc
fisttps
test
sub
loop
mov
loopne
ss
inc
pop
mov
pop
sub
in
xor
ret
popa
arpl
sbb
das
or
push
out
in
sbb
sbb
enter
mov
pop
push
testl
or
add
inc
clc
stc
fldl2t
ja
cmp
cmp
pusha
adc
clc
jmp
roll
mov
call
jmp
fcmovnbe
outsb
pop
cmp
ljmp
fcoml
mov
lret
ljmp
pushf
push
test
cmp
sbb
mov
sub
and
xor
or
test
mov
ret
pop
shlb
rclb
cmp
fdivrl
dec
fildl
sbb
push
push
xor
sub
pop
xorb
pop
add
pop
fucomi
mov
loopne
cmc
pushf
adc
mov
les
mov
mov
mov
sub
cmp
stos
imul
adc
popa
mov
xchg
push
or
inc
push
das
in
in
or
or
shrl
sub
adcb
cltd
xor
sbb
mov
and
jp
test
in
mov
mov
ror
pushf
clc
jg
ret
sahf
mov
push
cmp
cwtl
push
call
popf
fstps
xor
jno
xor
rep
call
add
or
popf
push
push
sbb
dec
neg
mov
outsl
push
into
jge
sub
lods
push
int3
fucomip
xchg
out
jbe
into
jbe
inc
fs
mov
lods
mov
sbb
inc
arpl
pushl
sbb
dec
xchg
test
jmp
je
fnsave
jo
lods
das
std
cli
or
ret
add
sub
shl
jmp
ret
mov
std
add
shr
pop
add
sub
push
loop
dec
cmp
fcompl
add
sbb
sub
faddl
pop
testl
aas
or
and
je
mov
aad
std
out
sti
ds
push
mov
adc
cld
out
jmp
call
push
lods
lods
outsl
mov
stos
das
adc
mov
cmp
mov
stos
mov
sbb
add
loop
roll
jg
jge
lret
cmpsl
data16
adc
cwtl
sbb
sub
aaa
add
or
arpl
dec
pop
cmpl
in
ret
jmp
cmc
movsl
movsl
mov
inc
cmp
mov
sbb
cmpsl
sahf
clc
clc
icebp
fcomps
mulb
xor
push
and
and
push
jl
mov
xchg
jo
pop
pop
movsb
fdivrs
fcompl
sbb
jle
insl
push
addr16
and
mov
sub
and
fistps
xchg
jno
cmp
push
insb
mov
sub
cmc
jle
sbb
nop
jmp
subl
mov
popa
jp
push
lahf
mov
xchg
or
sub
or
push
pop
lock
lret
in
and
sbb
and
cmp
add
pop
mov
outsl
repnz
jb
dec
sub
adc
push
sub
je
outsl
inc
sub
int3
pop
inc
sub
mov
jo
push
pop
jecxz
scas
adc
cmp
pop
in
sbb
loop
daa
sti
fsubp
fldcw
pop
sub
addr16
cmp
mov
sub
dec
sub
or
ret
add
lahf
jg
xchg
addr16
and
mov
lahf
pop
add
out
int
int
adc
cltd
sub
loope
aaa
enter
mov
mov
arpl
ret
xchg
fucomip
out
outsl
pop
mov
add
and
daa
pop
mov
bnd
int
cmp
pop
adc
nop
xchg
jns
adc
aas
int3
mov
jg
sub
ja
mov
imul
mov
mov
sub
sub
sbb
xchg
fcomps
pop
mov
neg
sub
mov
in
pop
rcrl
dec
out
mov
out
sbb
inc
xchg
push
add
jae
ja
sbb
fimuls
xchg
ffree
jnp
or
sbb
sbb
lret
jecxz
jg
loope
aaa
jnp
sub
pop
xchg
jg
es
das
loope
negl
daa
mov
xlat
pop
jnp
mov
or
jp
dec
roll
mov
sub
sbb
outsl
fdivrs
inc
mov
dec
js
mov
popf
xchg
icebp
fsubrp
mov
and
xchg
icebp
pop
jnp
xchg
or
sbb
sub
push
daa
repnz
xorl
add
dec
sub
pushf
jmp
cmc
cwtl
clc
mov
call
mov
daa
dec
cwtl
inc
mov
sub
push
cltd
clc
inc
mov
lea
add
sahf
mov
or
dec
inc
jmp
rol
pusha
rcl
sarl
sbb
push
dec
sub
jge
add
icebp
jae
rcl
add
mov
or
xor
outsl
mov
add
jbe
test
icebp
add
push
or
or
sub
js
cmp
pop
loop
mov
daa
mov
out
shl
rol
test
sub
jmp
sar
sub
cmp
shld
pushf
jmp
push
cmc
mov
add
push
push
test
ja
in
or
test
dec
dec
fmull
jge
cmp
sbb
std
xorb
adc
std
sbb
mov
mov
push
clc
std
pop
je
sbb
insb
test
call
pop
inc
jno
sbb
push
inc
loopne
xorb
add
mov
cs
pop
jmp
fdivp
mov
and
call
sbb
inc
add
add
mov
mov
jmp
push
sbb
push
mov
rcll
dec
rcrl
pusha
leave
sub
sbbb
sbb
enter
xchg
ljmp
stc
mov
xchg
or
jmp
sti
and
divl
jno
mov
sub
sub
xchg
scas
mov
hlt
stos
insl
int
add
pop
push
lock
or
call
ror
nop
mov
call
sti
push
jb
push
or
shrb
xchg
js
iret
repz
movl
inc
dec
aas
sbb
cmp
pushf
dec
adc
pop
mov
rcr
add
mov
fnop
orl
pop
test
mov
loope
mov
pop
sub
mov
jmp
outsb
test
adc
inc
aaa
notb
xchg
xchg
adc
aad
mov
inc
push
je
jmp
mov
call
std
cmp
call
or
mov
neg
pushf
mov
or
jp
inc
loopne
fldl
jae
push
cmp
xchg
jb
push
sbb
mov
adc
mov
aad
adc
popf
shlb
push
sti
adc
dec
aas
not
btc
sbb
repz
dec
aad
rcl
jmp
sbb
icebp
jl
inc
or
sub
clc
out
mov
inc
pop
aad
xchg
adc
pop
mov
sti
rorb
lret
lock
pop
sbb
push
push
rolb
dec
mov
xchg
sub
daa
aam
idivb
jbe
jmp
out
inc
pop
push
xchg
ret
push
mov
xchg
int
xlat
ficompl
pop
sub
mov
lock
pop
decb
ficomps
rcll
popf
mov
cwtl
not
pop
and
pusha
xchg
dec
jg
outsb
mov
movsb
sbb
shlb
js
lods
push
xchg
pop
xor
xor
not
adc
or
jge,pn
ss
cld
and
pusha
mov
add
loop
sbb
cmpsb
cmp
test
div
gs
mov
push
push
push
pop
call
sub
enter
std
ja
aam
pop
push
push
call
loopne
jae
out
jns
incl
xchg
data16
icebp
shll
jbe
jns
sbb
or
aad
pusha
out
xor
jecxz
pop
stos
jecxz
jmp
fidivrl
and
add
int
fsts
sbb
sub
adc
aaa
dec
xchg
sbb
pop
pop
xchg
cmp
sub
and
cwtl
rclb
test
ljmp
dec
or
xchg
mov
adc
pop
add
int
and
inc
xor
mov
jmp
fdivrs
inc
cli
dec
jmp
das
jl
pusha
jbe
dec
int
shl
push
aad
mul
push
mov
or
adc
imul
sti
in
and
outsl
add
or
sub
sbbl
repz
jne
movsl
jle
jns
mov
setne
ss
sbb
or
sbb
in
add
push
jne
xor
loope
push
pop
xchg
and
cltd
movsl
ficoms
sub
lods
and
rcl
mov
add
ret
sbb
sub
cmp
inc
cmpsl
sbbb
fwait
sbb
cmp
in
out
outsb
and
or
call
dec
pop
aaa
aas
in
outsb
scas
fcomip
negb
test
jmp
or
hlt
divl
add
setg
ljmp
xchg
lahf
cli
sbb
test
sbb
and
sub
addb
inc
pop
stos
out
jg
shll
xchg
ds
pop
push
xor
xor
or
dec
lcall
and
or
sub
leave
add
sti
xchg
ror
test
or
fsubs
add
mov
mov
icebp
icebp
jno
or
sub
inc
in
jbe
xlat
sub
push
jecxz
mov
mov
stos
pushf
into
cmp
cmp
popa
pushf
mov
inc
push
xchg
mov
and
cmp
cli
xor
clc
and
call
push
mov
es
push
neg
sbbb
lea
cmp
sbb
sub
std
xor
bound
ret
mov
out
cmp
sub
mov
js
stc
not
pop
jbe
es
loopne
arpl
stc
adc
not
neg
pop
shl
out
add
inc
clc
cs
sbb
call
ret
add
cs
mov
pop
insl
xchg
push
ja
jns
data16
mov
fcoms
sbb
ret
push
mov
rclb
and
push
jmp
and
neg
pusha
add
lahf
js
mov
hlt
mov
pop
mov
test
mov
and
add
mov
mov
mov
das
pop
dec
into
shlb
and
jb
cmp
and
or
push
xchg
fisttpl
add
pop
rorl
shlb
lcall
jge
rol
sub
clc
ret
jno
movsl
bnd
je
js
andl
mov
mov
imul
or
xor
ja
cmp
stc
loope
mov
add
and
in
imul
and
or
sbb
leave
loope
decb
sbb
int3
pop
or
xor
movb
mov
inc
outsb
es
cld
and
pushaw
lahf
ds
push
sar
std
jae
lock
jp
pusha
xor
sbb
xchg
jb
out
mov
and
push
cld
add
cmc
stc
sti
pop
out
js
test
call
daa
roll
insb
cwtl
xor
scas
fwait
leave
iret
mov
dec
popa
adc
pop
cli
out
imulb
jns
xor
jmp
xchg
cmp
shlb
or
mov
sbb
pop
mov
jb
outsl
lret
sahf
dec
dec
loopne
fcoms
enter
inc
add
sti
xchg
call
dec
es
and
push
jecxz
lcall
rol
dec
and
cmc
test
cmc
pop
fstl
sbb
cs
test
mov
jbe
enter
inc
scas
pop
shll
mov
jmp
test
les
sbb
dec
std
xchg
mov
nop
sbb
cmp
lods
stos
sub
or
dec
cli
or
add
push
push
mov
push
scas
ss
divl
jge
xor
hlt
pushf
scas
out
cmpsl
xor
mov
orl
rcl
outsb
jl
outsb
mov
clc
adc
test
cmc
pop
sub
or
push
mov
mov
nop
and
aas
sub
jmp
sub
ss
push
sub
add
mov
aad
insl
clc
adc
fmull
jg
add
push
ret
loop
ljmp
xlat
mov
push
stos
pop
and
ret
or
mov
dec
call
dec
mov
pop
pusha
inc
cmp
inc
mov
lock
ds
mov
xchg
std
mov
les
pushf
pushf
test
and
decl
adc
pop
pop
jge
roll
and
jo
mov
add
sub
sub
sbb
addr16
negb
dec
mov
cmp
jb
inc
mov
jg
add
sbb
sqrtps
andb
mov
adc
ja
lahf
stos
call
dec
cli
dec
ss
cmp
pushf
jns
push
fdiv
movsl
outsl
mov
ret
push
stc
cmp
cmp
sub
test
aaa
insl
or
adc
dec
mov
aad
pop
jmp
jg
dec
cld
cmp
jge
dec
in
adc
out
adc
dec
into
js
addb
sbb
xchg
fidivrs
push
pop
ret
sahf
dec
sub
sub
xor
jle
ja
push
pop
je
rcl
outsl
setp
push
push
ss
lret
pop
pop
jne
or
mov
popf
pop
pop
mov
rolb
mov
adc
jnp
push
addr16
adc
or
push
mov
in
lock
repnz
adc
stos
pop
cmp
sbb
fmuls
xor
fsts
setno
mov
pusha
jae
jl
repz
xchg
mov
inc
and
dec
sub
pop
or
stos
fwait
jp
outsl
outsl
punpckhbw
rcl
jmp
push
pop
dec
int
clc
rorb
mov
out
pop
popf
dec
or
push
cltd
pushl
imull
add
loope
mov
std
inc
ret
inc
mov
sub
outsl
sbb
in
ds
nop
inc
push
dec
sbb
push
das
sbb
jb
adc
sbb
inc
jg
cld
hlt
inc
ret
popf
fs
push
push
pop
and
inc
mov
pop
arpl
call
xchg
into
bound
adc
mov
out
mov
mov
lods
int3
sub
and
jmp
adc
out
mov
scas
sahf
rcll
pop
int
jns
mov
jl
ljmp
iret
xchg
lcall
ljmp
push
loopw
mov
xchg
inc
into
mov
inc
push
gs
push
ljmp
cmc
or
add
xchg
cmpsl
les
aas
jge
jge
pop
dec
adc
incl
inc
push
dec
xchg
test
loopne
mov
add
or
inc
pop
cwtl
mov
pop
mov
inc
mov
sti
call
jmp
cltd
xor
into
jecxz
repz
enter
stc
mov
popa
stc
idiv
jg
sti
clc
mov
inc
je
add
aam
xor
xor
sti
in
mov
in
fisttpll
push
mov
mov
fdivr
jg
stc
faddl
in
loopne
fldcw
stc
ret
cltd
repnz
lcall
push
hlt
cmpsl
mov
pop
or
fcmovb
mov
repz
cmp
dec
pop
bound
and
push
push
bound
dec
pop
cmp
test
cmp
mov
in
xor
xor
pop
pop
pop
inc
push
stc
push
fdivl
push
fdivs
movd
ljmp
out
cmc
mov
xchg
inc
into
lds
cmp
dec
ror
inc
jg
mov
aad
iret
hlt
xchg
incl
cmp
adc
push
inc
push
and
jg
inc
sub
mov
imull
sub
cli
dec
inc
adc
push
shll
and
and
mov
jge
mov
jo
jl
push
add
lock
and
cs
test
divb
rolb
fwait
cmp
pop
and
sub
call
faddl
pop
add
cmp
cli
outsl
mov
movsb
push
xchg
aaa
dec
lcall
pop
jl
fmul
dec
xor
push
pop
pop
pusha
add
loopne
mov
dec
cli
rol
lods
sbb
outsb
jne
mov
cmp
mov
fstpl
jnp
sub
out
push
sbb
fwait
adc
pop
dec
test
jmp
icebp
sarl
fildll
in
xchg
std
xchg
out
out
jo
and
pop
mov
mov
add
mov
ret
cmpsl
lahf
jg
mov
push
and
push
daa
pop
pop
inc
jg
inc
sub
aaa
insb
aaa
add
mov
cld
jg
fidivrs
aam
jbe
das
sub
or
dec
jge
push
inc
dec
imul
cmc
sahf
test
filds
les
mov
jne
loop
test
mov
pop
or
pusha
inc
push
dec
or
lcall
repz
out
pop
xchg
pop
inc
xchg
cli
icebp
mov
loope
std
mov
rol
mov
jns
stc
test
push
or
jg
fisubrl
pusha
aas
inc
sub
jno
dec
or
push
jae
xor
or
dec
ss
pop
cmp
xchg
ss
lods
lock
push
movsb
mov
int3
iret
les
lods
frstor
js
xor
push
aad
in
out
loopne
lock
loopne
lock
in
lcall
hlt
loope
pop
or
ficoms
bound
xchg
mov
adcl
jl
loopne
enter
stc
push
mov
cmc
into
mov
in
cmp
jmp
cmp
mov
mov
pop
addb
sub
or
xor
fs
mov
les
mov
mov
lcall
pushf
or
es
jne
incl
aaa
adc
push
sub
inc
push
pushf
xor
sub
fcoml
mov
and
hlt
pop
add
mov
in
mov
cmpsl
in
push
test
mov
mov
cmp
popf
das
cmp
adc
sbb
test
bound
xchg
fcmovnb
out
cli
xchg
idiv
ret
xor
dec
inc
loopne
dec
inc
mov
stos
mov
xchg
fimull
jae
adc
ljmp
cld
pop
neg
xchg
mov
test
sbb
inc
or
add
cld
or
incl
cmp
add
dec
and
xchg
xlat
jg
fistpl
push
fisubrl
mov
gs
shlb
pop
out
pushl
out
ret
into
sbbl
mov
sub
or
push
int
imul
sub
inc
sbb
cmp
out
and
inc
xchg
aad
mov
jg
mov
sub
pop
js
adc
add
pusha
jae
stos
fcmovbe
lret
int
inc
and
or
pop
push
inc
inc
push
pop
inc
push
or
xor
add
pop
and
out
test
and
movsl
pusha
je
incl
fnstcw
stc
adc
jb
pop
ror
ljmp
mov
dec
ds
jns
popa
jbe
pop
addr16
push
pop
dec
aaa
and
jmp
push
fnstcw
push
call
mov
pop
and
test
dec
mov
xlat
mov
in
mov
scas
sbb
sub
pop
scas
loope
or
jae
jns
lahf
pop
mov
sbb
pop
pop
sbb
icebp
loop
cltd
aad
pushl
mov
jo
push
mov
vmovdqu
movsl
inc
xor
inc
lret
adc
decl
lret
fdivl
cmp
or
add
leave
adc
imul
adc
test
jmp
jle
mov
xchg
fcompl
sbb
mov
pop
inc
jp
sbb
dec
cld
repz
fistpll
in
dec
adc
mov
jmp
adc
push
push
loop
mov
jmp
jge
and
scas
mov
sbb
icebp
adc
xchg
or
or
sub
adc
jne
pop
push
adc
mov
adc
pushf
pop
jb
out
shl
jg
pushl
push
xor
jle
inc
inc
sub
pop
sub
and
aaa
hlt
lret
in
push
dec
dec
jp
adcl
or
mov
adc
ficomps
in
aad
adc
mov
mov
cld
jmp
cmp
xor
or
add
and
int
loop
jge
outsl
jo
out
outsl
add
xor
cmp
jns
repz
out
outsb
jp
pop
sub
dec
push
and
inc
int
lahf
add
int
cmp
sbb
mov
mov
jbe
call
push
add
inc
or
outsb
jnp
or
pop
sub
outsl
sub
pop
add
lock
ljmp
sbb
cmp
sub
inc
push
dec
push
xchg
sbb
cmc
ljmp
nop
ds
and
mov
pop
imul
pop
movsl
mov
or
fisttpll
ds
and
inc
fstl
mov
fdivl
std
or
and
decl
xchg
cmc
rorb
stc
lock
adc
ljmp
push
xchg
pushl
daa
xor
leave
mov
in
je
push
inc
in
lea
paddd
in
outsl
xchg
adc
inc
add
sub
xlat
mov
mov
mov
cs
xor
iret
ds
cwtl
pop
arpl
and
imul
push
cld
aaa
ljmp
call
mov
sti
jne
xchg
push
pop
fdivr
jo
cmp
jg
lcall
jae
mov
and
add
add
ljmp
scas
mov
idivb
inc
push
lcall
cmp
cli
test
lret
adc
cmp
dec
dec
or
outsl
fbstp
xchg
notb
mov
inc
push
sub
sub
add
in
ljmp
mov
xor
rol
mov
cmp
adc
mov
cld
pop
push
icebp
ret
movsl
mov
jp
mov
mov
push
or
adc
repnz
das
fildll
sub
outsl
cld
inc
popa
xor
in
add
rolb
lahf
fstps
jb
xchg
xchg
nop
adc
dec
sub
pushl
mov
fldl
jp
addb
sbb
decl
xchg
jnp
push
or
cmp
addb
clc
repnz
loope
xchg
xor
lock
decl
call
lods
adc
pop
xchg
xchg
in
mov
pop
scas
cs
ret
orl
imul
dec
cs
inc
cmp
movsl
incl
daa
and
xor
push
or
pusha
lcall
in
cs
jg
insl
icebp
mov
rcr
mov
cmp
es
test
sbb
xchg
mov
xchg
rcl
stos
mov
add
call
dec
out
pushf
jmp
test
lock
ljmp
outsb
insl
xor
mov
loope
dec
inc
ljmp
sbb
mov
outsl
push
loopne
clc
fstl
js
in
mov
jnp
stos
andps
jo
stos
lods
jmp
or
and
or
hlt
and
xchg
mov
fidivrs
incl
cmp
jo
jmp
cs
or
int
jg
pushl
push
inc
pop
or
test
lods
mov
pop
call
pop
sub
push
sbb
jbe
dec
sbb
jbe
dec
pop
ljmp
insl
es
push
sbb
pop
add
jno
sti
pushf
pop
gs
cwtl
sub
lock
push
mov
jp
roll
fisttpll
add
xor
sbb
inc
jl
loopne
decl
cmp
mov
push
or
repz
dec
sub
or
pop
inc
add
adc
mov
push
cs
mov
push
and
pop
mov
pop
inc
pop
and
cmpsb
mov
lret
xchg
xchg
sbb
into
push
fld
adcl
cmp
call
pop
inc
repnz
pusha
test
adc
lock
pop
sbb
arpl
add
shrl
push
fistpl
xor
call
incl
dec
pop
or
imul
mov
sahf
leave
fistps
loop
pop
loop
std
jge
cmp
inc
jp
add
sbb
call
sbbb
dec
imul
mov
mov
outsb
adc
xor
dec
and
jno
das
hlt
ljmp
dec
shlb
rolb
sahf
and
rcl
shll
add
icebp
adc
pop
mov
ljmp
xor
jno
cmp
mov
fcompl
dec
adc
pop
ljmp
jo,pt
push
arpl
loope
int3
mov
jge
dec
xchg
lods
mov
cmp
mov
call
push
mov
adc
roll
lcall
jge
pushf
leave
mov
shr
pushf
aas
mov
push
test
xor
loop
fsub
sti
insb
xchg
out
out
lods
sbb
sbb
sbb
aas
inc
inc
cld
idiv
std
in
jmp
xlat
dec
rcrb
decl
idiv
into
mov
and
out
mov
out
xchg
cmp
dec
cmp
insb
imul
mov
sbb
cli
lret
push
push
xor
and
ret
cmp
pushf
push
xchg
ja
sti
call
out
inc
mov
push
cld
out
int3
cmpsl
movsb
scas
cld
cmpsl
outsl
decl
mov
idivb
lret
mov
dec
lds
cmp
fdivrp
jg
ja
frndint
mov
fiadds
mov
inc
or
jg
lcall
mov
xor
scas
int
leave
mov
test
xchg
mov
in
and
mov
or
xlat
push
pop
std
aam
push
add
push
lcall
or
inc
mov
or
dec
jmp
mov
sub
mov
movsb
pushf
push
jp
test
cmp
jl
xor
mov
mov
sarb
hlt
push
cmp
cmp
and
sub
rcrl
aaa
cli
addr16
int3
jmp
sub
jbe
cs
push
clc
decl
jbe
xchg
mov
lods
in
mov
pushf
mov
aad
outsb
cld
lret
rcll
into
cs
je
cmpsb
lods
fisubrs
jg,pt
jbe
lods
aaa
mov
insl
filds
sbbl
movsb
ljmp
fsin
push
push
aas
jp
add
dec
divb
xor
dec
bound
sub
push
sbb
jns
jns
sub
or
mov
int3
ret
rcrb
push
idivb
lcall
lret
fldcw
sbb
mov
fcoml
aas
add
adc
popl
das
mov
and
jge
or
adc
or
ljmp
jmp
lret
inc
ja
inc
movsb
test
mov
push
xchg
inc
std
out
out
pop
push
cmp
in
out
mov
aad
pop
jle
outsl
rclb
lret
aam
mov
incl
mov
mov
dec
addr16
or
cli
mov
in
movsl
mov
stos
lahf
cli
not
out
mov
xchg
mov
sbb
pop
cli
call
bound
jp
test
jne
add
rcr
addr16
es
inc
gs
insl
add
inc
jecxz
in
mov
insb
xor
mov
mov
sarl
pop
xor
pusha
xor
xchg
ljmp
hlt
mov
sbb
call
adc
stos
ret
lcall
loope
xchg
jg
es
popf
xlat
int3
int
dec
imul
dec
and
adc
push
icebp
call
gs
je
adc
and
sbb
pop
clc
adc
mov
jne
push
adc
adc
in
jmp
in
int3
cmp
dec
out
mov
pop
cmp
dec
loopne
or
scas
xchg
inc
ss
pop
jge
pushl
mov
and
out
aam
cmp
outsb
add
jns
call
inc
arpl
inc
push
ds
cmp
push
loop
jb
inc
xlat
adc
adc
call
or
push
pushf
insb
cs
scas
adc
jbe
outsb
sub
mov
dec
stos
in
xor
add
xchg
ljmp
test
lods
clc
fdivrl
pop
clc
int
or
jecxz
loopne
loopne
xor
outsb
adc
jb
lcall
cmp
stc
jge
adc
push
cmc
mov
jg
hlt
cmpsl
out
cmpsb
stos
mov
push
shr
icebp
sbb
aad
lock
jp
push
jmp
repnz
add
inc
pop
jp
nop
andl
ljmp
mov
xchg
add
sub
jg
fisttps
lret
push
std
ret
cmpsb
cwtl
mov
imul
fldt
push
xchg
int3
push
outsb
dec
sahf
icebp
in
adc
mov
sub
push
pop
pop
xor
add
cmp
mov
sub
ljmp
xlat
pop
jo
out
sub
adc
mov
pop
jl
lds
call
test
in
pop
clc
ljmp
jbe
xor
or
popf
mov
inc
dec
jge
cld
cld
fildl
mov
insb
pop
push
adc
mov
mov
jmp
decl
out
out
pushf
adc
es
imul
pop
cli
pop
push
sub
and
jp
sub
aad
push
ljmp
jo
clc
xchg
and
lods
aad
fucomi
fistps
call
dec
cmp
push
mov
xchg
cmp
test
decl
loopne
jecxz
ret
xchg
mov
lds
push
int3
pushf
enter
hlt
jge
sbb
in
loope
fisubrl
pop
loop
adcb
mov
cld
jl
inc
pop
dec
sub
and
push
jae
test
push
insb
icebp
ljmp
or
mov
mov
lods
rcll
sbb
test
shl
fcos
xchg
clc
outsl
mov
stos
adc
xchg
bound
dec
jge
decl
in
jne
xchg
cli
ja
aas
je
imul
adc
and
xchg
call
mov
fdivl
lcall
xchg
fidivrs
out
sti
out
mov
jnp
lds
mov
dec
pop
cmp
clc
lcall
das
adc
aad
int
cmpsl
in
repz
sbb
push
inc
das
cmc
insl
mov
or
adc
sbb
rcrb
inc
xor
or
stos
cmp
pop
out
dec
ja
jmp
dec
inc
adc
pop
fs
decl
xchg
loopne
sti
push
mov
aaa
sbb
sbb
pop
mov
fcomps
sub
xchg
xchg
add
hlt
test
call
test
jne
jo
rorl
push
push
xor
and
popa
or
mov
or
pushl
fcmovne
ss
roll
rcll
sub
call
mov
out
push
mov
aas
xchg
pushf
es
pop
stos
xchg
xchg
lods
jmp
mov
hlt
stc
in
loopne
lds
andb
mov
mov
and
pop
call
mov
shlb
cmp
push
sbb
cmpsl
push
ret
pop
mov
mov
pop
ljmp
jle
or
icebp
popf
sub
lods
out
push
sti
push
fidivrl
cltd
mov
push
mov
lock
mov
push
pop
call
cmp
repnz
jmp
jle
jl
jg
and
jg
test
mov
add
lea
repz
pop
sbb
stos
add
out
das
in
add
and
add
fs
hlt
jnp
sub
aaa
mov
js
push
sub
push
xor
mov
cmp
clc
mov
fs
add
mov
xor
outsb
pop
mov
addr16
xor
cmp
cmpsb
pop
jg
lcall
xchg
fwait
push
sahf
ss
xchg
enter
inc
add
cmp
inc
jp
lcall
shll
push
jne
pop
adcl
dec
pop
pop
jle
sahf
push
jg
outsl
pop
or
fcmovne
fsubs
jp
test
lret
mov
pop
les
push
push
mov
scas
mov
sahf
inc
movlps
sbb
aaa
lds
jecxz
inc
sbb
ret
filds
das
xchg
js
in
test
mov
cmpsb
cmovl
cs
ss
insl
xchg
or
loopne
jmp
or
adc
push
dec
inc
and
call
or
pop
js
cmovo
or
cmc
mov
call
mov
push
cmp
test
add
xchg
orb
ljmp
fcmovnu
add
and
push
insl
fistps
cmpsl
call
xor
lock
or
mov
repz
jb
xor
dec
push
sub
fdiv
cli
cli
jg
outsl
fbld
jg
aad
cwtl
mov
sti
outsl
cmc
pop
xchg
jmp
nop
mov
mov
xchg
stos
adc
pop
jl
jge
out
loop
mov
pop
lahf
loopne
pop
ss
lret
lahf
fcompl
jmp
cmp
mov
jo
mov
push
add
inc
decl
mov
test
fwait
nop
ret
cs
sarl
push
or
adc
addb
push
cmp
test
jg
incl
push
xor
call
cmp
or
loop
pop
or
push
mov
aad
call
insl
faddp
lea
dec
pop
mov
cld
mov
aam
aad
sbb
or
sub
mov
fmull
movsb
jmp
jg
lcall
in
inc
scas
imul
ljmp
and
into
xlat
sbb
cmc
pushl
rcrb
jb
or
bound
pop
adc
add
imul
stc
jns
push
lcall
cmp
rcll
or
jmp
leave
scas
sahf
ret
dec
stos
out
mov
aam
dec
mov
pop
fcmovbe
cli
pushf
stc
mov
pusha
pop
xchg
push
xchg
movsb
incb
fistps
out
fmul
lahf
mov
bound
or
mov
ljmp
lcall
int
ljmp
insl
pop
dec
mov
cwtl
lods
xor
lods
mov
mov
pop
jno
cmp
lea
clc
stos
xchg
shl
sub
out
rcrl
mov
fildll
shl
pop
mov
lods
push
filds
incl
and
pop
dec
pop
lcall
xchg
mov
mov
dec
aaa
and
mov
lcall
mov
jnp
mov
xor
insl
mov
or
and
into
rol
repz
int3
out
pop
sbb
dec
inc
rcrb
pop
gs
mov
adc
bswap
push
pop
sub
ds
lcall
sub
out
cmc
into
lods
ficoms
loope
xor
loop
mov
inc
cmpsl
jne
in
ret
test
jns
or
xchg
sahf
aaa
pusha
or
fistpl
dec
push
mov
add
repz
jb
mov
iret
mov
repnz
call
call
push
cmp
jb
mov
scas
mov
popf
lods
push
pusha
fs
and
outsl
hlt
int
and
arpl
and
js
aaa
stc
pusha
xor
outsl
cld
mov
cltd
rcrl
test
mov
ja
push
push
mov
pop
mov
pop
idivb
imul
jmp
mov
int
jns
js
lods
stos
lcall
loope
sub
outsl
adc
xchg
inc
sub
push
cmpsl
loope
xor
mov
push
loop
adc
call
fwait
push
hlt
orl
aam
fistl
sar
lret
icebp
jmp
push
mov
loopne
sbb
fbstp
enter
enter
mov
inc
add
dec
pop
sub
test
mov
xchg
stos
pop
cmpl
repnz
inc
mov
lret
hlt
out
push
cmpl
lods
xchg
jo
ds
hlt
sbb
push
xchg
jle
sarl
cmpsb
out
push
xor
iret
cmp
call
and
cmp
repz
mov
icebp
test
ljmp
sub
hlt
dec
add
jmp
loope
mov
test
and
mov
loopne
test
fcomps
insl
pop
aas
jl
aaa
clc
jg
out
and
mov
jmp
bnd
repz
sbb
mov
nop
popf
nop
movsl
call
cmp
addr16
aaa
push
jnp
std
jbe
add
mov
xor
push
incl
jl
pop
inc
push
mull
push
nop
out
mov
pop
sbb
or
jae
jnp
sub
jb
push
xor
dec
stc
xor
fmulp
icebp
out
lock
jmp
in
cld
leave
sub
push
movsl
mov
sub
out
ljmp
cmp
pop
repz
mov
cmc
repnz
jnp
mov
and
js
scas
loopne
sbb
jno
jmp
pop
cmp
in
cmpb
pop
jg
mov
inc
std
scas
outsb
push
divl
stc
mov
les
fnstsw
dec
cld
inc
xchg
call
pushf
mov
mov
insl
cld
ja
loop
fcmovu
mov
ret
loope
leave
subb
fisttps
xchg
in
mov
in
rcll
rcrb
mov
xor
scas
out
outsl
lock
mov
nop
test
fs
jp
enter
dec
adc
xchg
push
push
in
pop
pop
pop
das
jbe
scas
mov
xchg
mov
mov
xor
lock
rcll
sbb
test
mov
inc
cmc
cwtl
in
stc
cs
int3
in
or
add
and
js
jns
add
ljmp
movsb
pop
jae
push
push
push
sub
mov
sub
vmread
mov
lds
pushf
data16
mov
int
xchg
mov
cli
mov
out
push
in
pop
pusha
hlt
out
sbb
dec
mov
mov
rcll
aaa
adc
adc
jo
dec
cs
call
cli
add
jns
cmp
ret
jno
sub
push
ljmp
xchg
push
xor
cmc
jge
mov
mov
rol
sti
cwtl
cltd
ljmp
in
push
jne
pop
mov
inc
arpl
ljmp
sbb
sub
adc
das
mov
shlb
xor
icebp
in
hlt
test
mov
fildll
hlt
icebp
loope
cmc
mov
int3
cmc
xchg
iret
fwait
and
pop
push
xchg
outsl
and
push
push
das
pushf
mov
rep
aam
das
data16
mov
in
mov
mov
insb
adc
mov
mov
int3
pop
inc
push
sub
jae
sbb
add
xchg
add
lcall
incl
fstpl
scas
pushf
data16
and
sub
int3
or
mov
orps
jecxz
cld
adc
aaa
sub
xlat
mov
cmpsl
pop
popa
testl
sbb
lret
mov
mov
pushf
cmp
lret
cmpsb
fnstcw
jg
out
vmovq
xchg
xchg
stc
in
xlat
pop
aaa
outsb
aaa
int
decl
loopne
push
dec
addr16
insb
ja
push
call
cmovae
fmul
mov
mov
imul
add
scas
stc
push
add
ljmp
sub
cmp
jo
cmp
inc
xor
in
sbb
fbstp
shl
leave
push
fcoms
incl
std
addr16
movsl
into
fistpll
test
aam
mov
es
cmp
outsb
imul
cmp
call
push
pop
dec
xor
aas
mov
jnp
push
lret
push
mov
jg
cmpsl
sahf
xchg
adc
inc
sub
aaa
incl
jmp
dec
or
pop
imul
andb
jmp
andl
mov
pop
adc
sbb
inc
cmp
dec
roll
inc
iretw
cwtl
fsts
mov
les
mov
call
repz
incl
dec
pop
jb
push
imul
and
rcrl
pop
lea
push
movsb
push
repz
scas
push
adc
jnp
das
iret
test
movsl
iret
in
jecxz
std
jg
in
in
and
dec
or
in
xor
jecxz
lcall
ret
xchg
addl
test
lods
mov
icebp
jg
pop
add
sbb
pop
or
jo
repz
jg
lret
mov
test
sar
lds
pop
lods
rol
jg
call
mov
test
out
pop
push
pop
ds
push
movsb
fs
mov
pushl
adc
aaa
cmp
ja
pop
adc
xor
mov
lock
xor
sbb
jb
pop
addl
pop
loopne
lret
cmp
sub
or
and
inc
dec
or
comiss
jge
jl
gs
jle
and
std
out
mov
jo
jbe
cs
jne
in
mov
in
mov
fnsave
mov
cmp
sub
mov
call
xchg
in
mov
mov
mov
xchg
cltd
je
lcall
leave
movsb
bound
cltd
sahf
test
push
cmp
testb
xor
jg
into
xchg
xchg
dec
mov
push
inc
inc
sub
mov
cli
out
test
in
pop
push
dec
cld
adc
xor
outsl
loop
mov
outsl
sub
push
jl
das
je
xchg
fcomip
nop
mov
cmc
cmpsb
std
out
push
popa
push
or
outsb
xor
enter
push
sbb
dec
cmp
jg
pop
jge
sti
stos
xchg
jg
imulb
sbb
mov
inc
sub
divb
or
cmp
sub
inc
aas
push
popa
add
or
ret
fdivrp
jmp
adc
test
in
in
xlat
call
test
icebp
mov
pop
pop
insb
mov
xor
push
push
inc
sti
mov
out
fdivrp
mov
std
iret
cld
fstpl
and
ss
xchg
test
push
inc
push
xor
std
jmp
xchg
jbe
mov
hlt
enter
cmpsl
aas
repnz
jne
mov
dec
mov
ljmp
mov
stc
out
inc
icebp
lcall
pop
sbb
add
insl
push
sub
idiv
lods
mov
sbb
imull
or
cmp
ljmp
cmp
dec
or
insb
imul
int3
inc
rcr
into
sti
fstl
mov
inc
jmp
sarl
inc
mov
sbb
rcl
sbb
aam
sub
imul
in
xor
das
scas
lret
pop
push
cmp
stc
rorl
subb
sub
dec
push
mov
pop
decl
data16
pop
out
rcrb
lret
ret
jge
lock
lret
loope,pt
pushl
arpl
mov
mov
outsl
fidivrl
dec
stos
push
rol
sub
ljmp
mov
roll
mov
sbb
into
ficoms
aad
sbb
mov
jg
or
jmp
pop
std
std
mov
adc
inc
xchg
lock
or
sarb
and
pushf
mov
pop
jmp
jg
pushl
or
int3
sub
inc
or
pop
pop
leave
add
jecxz
and
lcall
lea
cmpsl
cmp
inc
mov
in
xchg
push
push
fdivr
ljmp
ret
into
xchg
sbb
shrb
pusha
enter
fadds
xchg
dec
mov
mov
ret
jno
cmc
mov
sub
pop
jg
daa
pop
sti
pop
rcrb
jg
in
push
stos
aam
pop
cld
call
adc
test
loope
fiaddl
loopne
push
inc
inc
xor
lret
incl
adc
sub
inc
in
test
cwtl
jl
aam
dec
adc
inc
fistpl
jg
daa
xchg
insb
movsl
mov
ret
jle
addl
xor
mov
jns
pop
jmp
cmp
cmp
jge
and
insl
inc
and
jg
mov
push
push
out
adc
test
xor
add
push
movsb
inc
pop
jmp
push
pop
jae
lods
and
test
mov
iret
dec
fs
lods
sbb
inc
ljmp
and
ret
jp
stos
or
enter
push
dec
add
pop
cmp
ja
pop
mov
cmp
and
push
into
insl
push
lock
test
ljmp
add
fcomi
xchg
dec
out
movsb
in
incl
inc
ja
clc
test
cmp
pushf
sbb
dec
lea
cmp
ljmp
mov
lret
pop
jge
outsb
rorl
mov
test
in
mov
push
and
aam
push
call
mov
fcoms
mov
xchg
cmc
mov
ljmp
and
ss
mov
mov
shlb
into
pop
iret
jb
nop
jg
push
rorl
xlat
xchg
gs
mov
ret
jl
les
and
mov
inc
inc
mov
mov
dec
hlt
and
aam
aaa
clc
out
pop
enter
mov
jmp
into
testl
sysenter
inc
inc
outsb
and
xchg
push
out
push
jg
lret
popl
xor
addr16
mov
ret
jnp
jg
jns
dec
ret
sub
add
nop
dec
scas
pushf
or
jge
roll
pop
rclb
fistps
es
dec
shr
cltd
popa
sar
add
jmp
jbe
inc
push
lods
je
xor
inc
test
enter
sar
fimuls
xchg
and
mov
mov
sbb
imul
sub
inc
ret
aas
mov
test
pushf
mov
pop
pop
lret
stc
pop
mov
shrb
jle
cwtl
roll
add
stc
dec
lods
xor
movsb
xchg
adc
or
jg
mov
test
mov
ret
js
imull
enter
insl
mov
inc
dec
sar
lret
lret
lock
jge
jns
cwtl
dec
dec
shll
aam
pop
ret
jmp
sub
cmp
sti
add
mov
popf
fldl
aas
mov
scas
xchg
add
test
mov
jmp
fmuls
mov
adc
rcrl
dec
mov
ja
lcall
jmp
daa
ret
outsb
je
loope
xor
mov
mov
andb
xor
mov
movsb
lods
jecxz
dec
stos
arpl
daa
sbb
xor
jo
fwait
jbe
and
out
sar
ljmp
cs
cltd
call
pusha
sbb
and
mov
aam
sub
lods
sbb
enter
call
cmp
das
cmp
sub
sub
adc
int
cs
es
int
decl
mov
mov
xchg
insb
inc
gs
movsb
movsb
out
inc
stos
adc
mov
ljmp
cmpl
push
mov
push
xor
push
adc
fmulp
incl
subb
jns
fs
leave
cs
cmpsl
out
push
mov
push
jnp
lahf
je
mov
xor
push
incb
aas
or
bound
repz
mov
mov
push
fidivrl
movsb
movsl
out
int
jl
repnz
jg
bndstx
sahf
fwait
add
mov
push
popa
sahf
pop
push
pop
call
cld
jg
lcall
stc
mov
cmpsb
jmp
bnd
scas
jle
rolb
ret
aas
loope
xor
sub
lret
mov
xchg
push
xor
ljmp
cltd
push
aas
outsl
xor
xchg
call
xor
fdivp
leave
call
ret
xchg
fcomps
andl
cs
mov
xlat
sbb
fildl
mov
pop
sbb
in
orb
dec
jmp
inc
xor
jne
sbb
bound
jbe
xchg
test
loope
stc
lds
fidivrl
in
lret
call
lret
inc
stc
mov
incl
cltd
shlb
add
mov
filds
jle
or
iret
and
sub
ja
dec
mov
imul
push
lret
call
popfw
mov
scas
pop
fdivrl
in
adc
xchg
cld
jnp
pushf
push
mov
loopne
jge
in
fidivl
movsb
mov
and
pushl
mov
fldl
scas
ss
popf
rcrb
pop
mov
xchg
and
xorl
fxch
sbb
sar
mov
mov
dec
mov
ret
js
rorl
pop
test
push
inc
lea
sbb
or
fadds
aam
push
ret
lcall
aad
xchg
pop
mov
mov
jmp
call
out
mov
lret
xchg
jb
mov
xlat
fcompl
rorb
dec
daa
aad
outsl
mov
jb
mov
push
fistpll
add
jnp
xlat
int3
outsb
shlb
das
push
push
fldl
jbe
lahf
shll
dec
std
aas
mov
cmpsl
loop
ss
loopne
outsl
jp
mov
or
xchg
mov
pushfw
outsb
lods
inc
fisubrs
mov
das
cmp
cwtl
outsb
fmul
test
cld
lcall
imul
fdivs
insb
and
push
push
push
mov
test
bnd
xor
popa
jecxz
pop
jle
gs
pushf
sbb
push
jmp
dec
stos
sti
les
lods
cld
call
clc
mov
roll
aad
push
and
loopne
mov
out
mov
call
pop
clc
lahf
add
mov
push
mov
inc
xchg
push
decl
xchg
test
adc
shrl
xor
lds
outsl
push
mov
dec
xorb
xor
fs
cmp
aaa
mov
cmp
sbbl
cmp
pop
push
cmp
adcb
mov
cmc
mov
mov
jp
mov
imul
add
fisttpl
pop
cwtl
ds
sarb
in
or
and
inc
aas
pop
aas
js
xchg
aas
mov
dec
repnz
add
pushf
mov
les
enter
fdivrs
in
call
inc
cmp
or
adc
sbb
inc
cmp
push
mov
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
lcall
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cld
cmp
cmp
cmp
data16
xchg
inc
fdivrl
jmp
aas
fldt
lock
aas
ds
dec
aas
pop
aas
cmpsb
aas
aam
je
aas
in
aas
stc
popf
lock
insb
fwait
jo
add
and
inc
jg
xchg
xor
mov
adc
dec
adc
pop
xor
push
test
xchg
pushl
mov
into
xor
xor
xor
outsb
xor
nop
xor
call
xor
xor
xor
cmp
outsl
icebp
ljmp
mov
xor
xor
xor
xor
ds
push
add
in
pushl
jo
xchg
aaa
mov
aaa
imul
xor
xor
xor
cmp
lock
sub
push
jnp
out
ljmp
sub
cmp
inc
cmp
sub
dec
cmp
outsl
cmp
pushl
cmp
cmp
mov
cmp
cmp
push
cmp
sarl
fdivrs
jp
jg
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
fildll
es
cmpb
aas
loop
in
icebp
add
adc
aaa
add
xor
xor
xor
xor
pusha
xor
xor
incl
pushl
imul
cwtl
or
xor
xor
xor
incl
dec
xor
jbe
jl
stos
xor
xor
hlt
push
push
outsl
in
xor
jne
xor
cmc
lcall
dec
xor
jbe
nop
xor
xor
xor
xor
xor
mov
call
xor
ss
ss
aaa
xchg
aaa
test
pushl
aaa
fbstp
call
cmp
cmp
jns
cltd
cmp
and
outsl
mov
add
push
cmp
cmp
or
adc
sbb
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ret
in
arpl
and
xor
sti
out
mov
mov
jge
xchg
xor
xor
mov
cld
xor
ja
xorb
xor
xor
mov
xor
fidivs
add
xchg
sbb
pop
ss
ss
lcall
shll
fnstenv
jecxz
and
mov
fdivl
in
iret
cmp
mov
cmp
pop
imul
push
cmp
imul
xlat
cmp
cmp
cmp
idiv
fnstsw
in
cmp
cmp
cmp
pushf
cmp
cmp
cmp
sarb
cmp
cmp
dec
ds
ds
mov
mov
out
idivb
fnstsw
mov
stos
aas
mov
add
clc
incl
pop
xor
xor
xor
loop
adc
and
pushf
xor
xor
xor
xor
sbb
push
addr16
adcl
cld
ja
mov
sub
into
bound
in
ss
jg
or
sbb
sub
cmp
dec
aaa
jne
jg
adc
sbb
es
cmp
insl
cmp
mov
cmp
inc
cmp
cmp
jg
jg
cmp
ja
cmp
and
sub
cmp
jnp
test
xchg
cmp
cmp
cmp
inc
cmp
and
cmp
mov
xchg
movsb
ds
ds
fnstsw
hlt
ds
or
sbb
xor
inc
aas
pop
aas
in
lcall
push
stc
aas
xchg
aas
movsl
aas
mov
aas
aaa
cld
das
mov
shll
add
xor
xor
mov
jg
dec
jnp
xor
aad
jbe
jl
inc
call
jle
xor
pop
xor
xor
xchg
xor
dec
ja
icebp
mov
xor
test
xor
mov
or
xor
xor
xor
xor
xor
xor
pop
inc
cld
ja
add
adc
sub
lcall
or
xor
push
je
jnp
shll
mov
xor
mov
dec
mov
ss
ss
test
mov
xchg
xchg
mov
xchg
xchg
add
or
addr16
cwtl
hlt
fcomip
aaa
mov
fdivrs
std
aaa
inc
cmp
outsb
cmp
jp
nop
sbb
cmp
movsl
push
adc
pushl
cld
cmp
mov
lds
cmp
sarl
cmp
cmp
cmp
pusha
pop
sarl
dec
cmp
mov
repnz
jg
push
dec
cmp
inc
ds
outsb
jae,pt
mov
mov
pop
xor
xor
xor
ljmp
adc
xor
cmp
data16
call
test
fnstcw
mov
jnp
std
or
cmp
imul
loope
out
lock
movswl
sub
inc
cmp
dec
pop
jo
cmp
cmp
push
jo
jp
jg
xchg
mov
test
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
pop
fists
cmp
cmp
cmp
insb
cmp
jl
xchg
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cltd
cmp
cmp
cmp
mov
adc
lcall
cmp
cmp
mov
in
cmp
pop
jg
cli
push
ds
ds
loope
aas
adc
sbb
push
arpl
jg
jg
aas
test
lcall
aas
aas
in
out
aas
notl
pop
int
pusha
xor
adc
outsl
cmp
inc
bound
push
mov
idiv
xor
xor
xor
xor
xor
ret
add
xor
xor
int
lret
dec
xor
xor
xor
and
jg
loope
xor
jbe
outsb
xor
std
xor
sbb
pop
adc
ss
mov
getsec
push
cmp
aaa
divb
add
sbb
dec
pop
incl
jo
cmp
cmp
jg
cmp
cmp
cmp
cmp
leave
add
or
das
ljmp
hlt
cmp
cmp
cmp
jl
cmp
cmp
call
inc
cmp
pop
cmp
js
cmpb
jmp
shlb
inc
sarb
in
icebp
mov
cmp
cmp
cmp
cmp
stc
sar
mov
loop
call
cmp
cmp
adc
sbb
fbstp
cmp
push
cmp
je
movsl
orb
sbb
jecxz
sbb
sbb
paddd
pop
xchg
or
jns
mov
cltd
add
sti
out
movsbl
pop
popf
rcrl
stc
out
out
paddd
popf
fstps
cltd
cmp
push
popa
push
cltd
ds
cmovns
aas
out
jl
push
fnsave
and
stc
leave
dec
push
icebp
insl
and
out
mov
nop
pop
andb
daa
pop
ret
in
and
pop
js
pop
xor
cmp
test
add
cmp
mov
push
mov
inc
aaa
loopne
testb
sbb
test
pop
and
mov
leave
pop
fs
and
add
mulb
sahf
jnp
or
and
jae
arpl
repz
test
mov
daa
inc
out
fldenv
sbb
adc
mov
daa
sub
push
and
js
and
inc
and
nop
je
inc
and
and
push
add
addb
or
lock
sub
add
stos
sbb
inc
sahf
mov
mov
test
xor
add
lea
mov
sbb
cld
push
dec
jle
scas
notb
and
xchg
mov
adc
inc
mov
scas
adc
sub
xor
inc
and
adc
and
cld
add
push
add
repnz
xchg
stos
adc
add
cmpb
insb
inc
and
and
jnp
pop
sub
jl,pn
and
sbb
aas
nop
jl
add
leave
add
inc
adc
add
adc
push
call
in
cld
rclb
add
push
iret
xor
adc
cwtd
add
pop
or
xor
adc
and
and
cmpb
push
out
scas
mov
xor
add
repnz
sahf
add
xor
inc
inc
and
xchg
repnz
inc
and
xor
jno
and
adc
fs
in
add
adc
xchg
lret
inc
lods
xchg
adc
add
pop
pop
or
repz
out
popa
jnp
mov
sub
test
inc
scas
nop
pop
add
and
fistl
add
adc
xor
leave
out
xor
xor
xor
xor
adc
add
and
addb
inc
and
push
jns
inc
and
out
iret
mov
push
pop
mov
mov
or
movsl
and
sub
sbb
mov
popa
mov
lock
and
add
int3
insb
das
and
adc
loop
or
pop
nop
mov
leave
adc
mov
out
test
adc
pop
jae
movsl
mov
fcoms
lods
cmp
lock
mov
sub
push
cmpsl
out
and
xlat
cmp
dec
shr
lods
push
lods
cld
sub
inc
dec
xchg
jp
je
popf
into
fdivl
call
in
pop
pop
push
jne
sbb
jbe
fldenv
loopne
psraw
mov
ret
outsl
hlt
xor
add
push
jno
mov
adc
imull
xor
fcmovnu
xchg
adc
and
adc
or
sbb
cmp
push
cld
int
pusha
mov
shll
loopne
sbb
idivb
insb
inc
ficomps
andl
and
xor
pop
xchg
inc
sahf
cld
and
decb
add
stos
fs
int3
mov
out
add
add
mov
stos
xor
jbe
lsl
xor
pop
xchg
xor
fs
xchg
sub
adc
dec
insl
insl
jae
leave
push
push
push
je
lret
mov
add
inc
xor
bound
jg
mov
sarl
loopne
lcall
inc
shll
dec
dec
inc
dec
shll
dec
popa
mov
shlb
sub
faddl
push
inc
rcl
push
adc
inc
inc
add
and
popf
stos
cli
and
cmp
cmp
out
add
xor
xchg
xchg
aaa
dec
call
sbb
xchg
call
or
jg
out
push
push
jl
add
push
push
pop
mov
jmp
mov
fs
xor
in
or
idivb
mov
stc
lea
sbb
cmp
sbb
movsl
and
add
add
inc
or
neg
mov
pop
pop
pop
pop
jno
pop
sahf
daa
mov
dec
xor
lods
fcomps
jo
xor
sub
and
xor
mov
xchg
lcall
adc
add
or
callw
push
and
clc
std
inc
xchg
test
dec
xor
jmp
enter
or
mov
or
jb
inc
push
icebp
nop
pcmpeqw
push
std
push
ljmp
lret
and
and
dec
xor
cmp
fistpll
jecxz
inc
add
cmp
jl
adcb
mov
push
mov
lcall
repz
lods
add
add
ljmp
mov
push
stc
sub
mov
mov
mov
jb
xchg
xchg
gs
outsl
outsb
gs
xchg
gs
je
gs
lret
mov
fs
insb
xlat
popa
pop
xchg
sub
shll
loopne
push
movb
bound
fisttps
mov
sti
xor
call
dec
or
lahf
addr16
movb
mov
test
dec
sub
mov
jb
je
enter
lret
daa
je
nop
int3
adc
push
daa
daa
addr16
jp
rcl
cmpb
daa
rcl
daa
andl
std
in
inc
jl
les
and
std
enter
int
xor
std
mov
shlb
or
test
int
std
js
ja
fsubp
aad
jne
pushf
add
incl
cs
lret
ret
add
mov
sti
mov
push
mov
insb
ret
inc
sub
lods
and
inc
xlat
push
jp
cwtl
dec
fisttpl
shl
push
loop
mov
sbb
mov
jb
xor
cmp
sar
clc
rorb
or
ljmp
push
adc
ficompl
sbb
dec
push
decl
jne
adc
mov
and
push
and
add
in
jg
add
and
cmpsl
inc
inc
and
jmp
inc
test
je
hlt
fs
pop
nop
mov
xchg
inc
mov
enter
cwtl
cltd
lcall
pop
xchg
push
and
and
mov
lock
jb
fdivs
pop
xchg
std
xchg
std
lahf
mov
xchg
std
xchg
std
xchg
std
lret
mov
jb
pop
sub
js
jo
insb
shll
in
outsl
mov
mov
xor
mov
std
icebp
add
loop
add
nop
or
mov
mov
dec
xor
shll
xchg
shrl
in
or
insb
push
xlat
jns
cld
imul
jns
xor
pop
movsb
cs
out
jmp
ja
repz
hlt
or
fwait
cmpsb
cmc
div
call
pop
add
inc
js
inc
add
jmp
xor
sub
pop
or
cli
sub
mov
int3
fs
addr16
aam
mov
add
mov
jae
jns,pn
gs
stos
test
outsb
xchg
gs
xchg
insb
popa
jne
arpl
xor
pop
or
dec
mov
jno
outsl
xorl
js
xchg
mov
dec
fildll
xchg
xchg
gs
outsl
jb
je
gs
rcrb
cwtl
insb
add
js
jmp
fwait
cmpsb
imul
in
out
std
loope
insb
push
push
xchg
push
add
pop
add
out
enter
add
add
aam
xor
in
add
fnstenv
dec
xor
lret
call
pop
movsb
pop
push
scas
inc
mov
adc
je
push
mov
mov
mov
jge
pop
xor
pop
mov
inc
mov
mov
mov
arpl
imul
icebp
or
out
sbb
lret
push
movsb
xchg
mov
add
into
loop
idivb
jae
cwtl
pop
pop
repnz
sub
loop
adc
jne
adc
mov
ret
adc
mov
jle
dec
repnz
cltd
xchg
push
aam
add
fmuls
sbb
add
pop
or
fbstp
add
es
enter
mov
or
loop
data16
and
sbb
jbe
enterw
add
and
push
mov
mov
pop
test
aaa
dec
mov
lea
stc
shlb
jg
nop
mov
adc
out
adc
in
insb
sbb
leave
pop
mov
push
fstpt
dec
sub
dec
or
jo
add
sub
repz
mov
pop
pop
or
mov
sbb
push
nop
daa
mov
sub
inc
push
push
inc
and
inc
add
shr
loopne
adc
enter
adc
mov
push
mov
and
inc
xor
ret
and
scas
nop
lds
and
jb
pop
mov
dec
or
pusha
and
out
movsb
add
xchg
dec
and
cli
fldenv
mov
and
jb
push
sbb
xor
inc
mov
adc
lods
data16
mov
mov
add
adc
arpl
or
jae
sub
mov
or
mov
js
loope
mov
push
pop
cwtl
inc
movups
and
add
xor
add
repnz
das
pop
push
lcall
ss
push
pusha
imul
imul
shll
cmpsb
lcall
jb
inc
jae
cmpsb
jmp
mov
cmp
lcall
xchg
lcall
add
xor
or
pop
xor
outsl
bound
xor
add
mov
push
inc
cmp
daa
dec
dec
jo
and
mov
test
or
and
mov
add
sbb
arpl
pop
or
aaa
mov
outsl
adc
dec
popa
jns
jne
jae
xor
fsubrs
popa
dec
push
push
and
fcmove
js
imul
cld
lods
loope
dec
push
dec
inc
push
sub
push
dec
mov
xchg
mov
dec
adc
ret
and
fdiv
mov
inc
leave
data16
inc
inc
adc
leave
out
jo
xchg
sbb
cwtl
out
dec
xchg
movsb
inc
enter
inc
addl
sub
mov
mov
or
push
add
push
les
mov
xchg
das
imul
inc
and
xchg
iret
cmp
pop
packsswb
sahf
jge
mov
mov
adc
dec
inc
mov
adc
mov
add
xchg
or
mov
add
sub
dec
outsb
outsw
es
mov
repnz
adc
mov
rcll
sbb
xchg
inc
pushf
fdivrl
lcall
les
push
mov
push
outsb
jb
ds
add
and
and
shrl
inc
inc
sbb
add
test
sbb
xchg
push
inc
xor
and
mov
xchg
cmc
test
daa
pop
inc
adc
sbb
xor
insl
sub
rorb
jg
pusha
adc
test
add
pusha
addr16
inc
inc
add
or
pusha
mov
popa
add
mov
movsb
pop
jns
dec
es
pop
mov
insb
and
sbb
aaa
pop
and
add
adc
pop
cld
add
dec
sbb
sub
xor
rcll
pop
out
clc
cmpsb
jmp
gs
and
or
pop
jge
mov
xchg
add
add
or
add
addl
xchg
pop
lods
adc
mov
or
pop
fwait
dec
ss
inc
push
push
jb
pop
push
add
pop
adc
icebp
movsl
xchg
and
jb
jne
int3
icebp
and
adc
cmpb
add
mov
adc
adc
jbe
adc
cmp
or
adc
sahf
jmp
cmp
jne
or
test
pop
rolb
adc
push
adcb
xorb
test
jnp
xor
stos
stos
jne
dec
pop
and
xor
int3
adc
outsl
pop
jns
pop
or
push
xor
add
or
ret
in
inc
mov
sub
jecxz
in
cmovno
pop
mov
add
sbb
jae
mov
xor
mov
incb
popa
cmp
fsts
inc
push
mov
add
pop
add
mov
cmovns
inc
or
add
imul
sub
aas
xchg
add
jne
rcrb
sub
add
out
or
shll
pop
mov
or
jecxz
or
movsb
jmp
or
mov
scas
jnp
pop
inc
and
xor
xlat
cmp
pop
jae
and
popa
jns
xchg
jae
add
addr16
gs
imul
mull
inc
push
jb
mov
sub
add
mov
jb
cmp
mov
add
mov
xchg
insb
popf
das
jne
xchg
pop
dec
or
lds
mov
adc
jnp
sub
xor
sub
sub
int
or
daa
fwait
insb
fmuls
imul
push
daa
jbe
mov
inc
test
flds
je
and
fstpl
pop
xor
inc
es
jne
imul
and
in
mov
outsb
push
insb
cmpsl
xchg
add
out
add
add
push
cmp
push
add
lock
mov
shlb
xor
xor
pusha
xor
lea
stos
xor
xor
push
mov
sub
xor
jg
mov
lea
xor
xor
xor
xor
xor
xor
xor
xor
push
hlt
pushl
xor
xorb
xor
js
rcrl
icebp
mov
fwait
add
aaa
xchg
inc
std
decl
mov
cmp
cmp
push
cmp
aam
pop
add
xor
aaa
cli
cmp
cmpl
inc
outsl
inc
xchg
dec
cmp
push
cmc
cmp
cmp
cmp
cmp
stos
and
cmp
push
clc
add
incl
jne
xor
jp
xchg
xchg
xor
xor
xor
call
xor
test
mov
lahf
xor
aaa
mov
xchg
sub
lcall
fnstenv
add
ss
ss
ss
outsb
cmp
xor
aaa
sub
xor
inc
mov
cmp
inc
fdivrl
loop
and
sbb
sub
or
mov
inc
add
and
pop
test
xchg
and
xchg
add
adc
add
xor
xchg
and
pextrw
or
sbb
pusha
lods
or
mov
fwait
mov
adc
jae
jne
pop
sbb
inc
outsl
pavgw
cmp
test
add
sub
mov
sub
add
add
jbe
fidivs
add
jbe
pop
pop
mov
aaa
insb
dec
cmovge
mov
add
imul
adc
mov
mov
call
adc
cld
and
imul
stos
add
xor
dec
stos
dec
stos
cwtl
fs
adc
sub
dec
lds
push
add
mov
lods
adcl
inc
jo
enter
loop
outsb
dec
inc
mov
pop
push
and
add
and
jo
adc
adc
and
adcb
pushf
mov
or
cmp
jne
fdivs
call
or
dec
add
xchg
and
rclb
dec
xchg
fstl
mov
sbb
and
add
pusha
or
and
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
