iret
dec
rcrb
xchg
mov
mov
jecxz
popa
jge
cld
addr16
cmp
stos
pop
sahf
pop
push
imul
push
loopne
xor
dec
imul
int
test
mov
jge
movsb
xor
je
jecxz
pop
or
inc
movsb
push
movq
mov
fcmovnbe
dec
inc
enter
lods
sub
push
pop
push
fstl
shrl
sbb
pop
adc
bt
cmp
add
bt
cmc
test
test
call
lea
jne
call
adc
sbb
sti
pusha
std
out
mov
stc
imul
mov
sbb
int3
enter
add
xor
xchg
out
mov
lods
popf
pushf
jp
mov
addb
movzbl
sub
fisttpll
jmp
pop
mov
lret
imull
sbb
lods
add
mov
in
int
ficoml
mov
xor
int
bound
out
out
loope
lret
testl
dec
inc
adcl
jmp
adc
xchg
ret
inc
clc
lds
fldt
xor
mov
inc
dec
dec
adcl
or
ffree
cld
addr16
push
pinsrw
leave
incb
decb
cmp
jg
cltd
xchg
out
or
pop
cmp
popa
icebp
cltd
push
sbb
mov
or
mov
xchg
xchg
sbb
adc
adc
fscale
js
add
inc
js
je
jb
arpl
jae
not
bswap
jmp
pusha
mov
jmp
add
and
push
lds
cmp
movsl
mov
pop
xor
popa
pushf
push
inc
dec
lret
jl
cmp
das
movsl
dec
dec
push
fwait
popf
cli
movsb
sbb
lret
mov
std
std
adc
sahf
pop
jmp
test
js
pop
inc
je
sbb
add
mov
out
outsw
loope
popa
fwait
jecxz
in
push
adcl
sahf
mov
cli
insb
lret
sbb
cmp
sbb
lods
in
push
pop
scas
pop
fcmovb
outsl
fs
pop
lahf
add
push
arpl
fndisi(8087
adc
push
fdivrl
inc
push
sbb
xor
cmp
cmp
test
mov
dec
into
iret
in
test
xchg
push
movsb
xor
imul
enter
dec
inc
ffreep
into
ret
push
stos
rcr
push
int3
mov
or
lea
jae
call
jmp
bt
add
clc
push
call
movb
mov
lea
je
pusha
pusha
pushl
adc
mov
pushf
mov
lea
jmp
pop
jge
std
xchg
and
rorl
push
dec
aam
lret
ror
push
enter
cmp
neg
inc
dec
movsb
lods
add
lahf
scas
push
push
xchg
mov
test
xor
push
push
adc
mov
mov
pop
movsl
pop
addr16
jae
aaa
jne
sub
and
push
pop
pop
adc
xor
pop
fstps
sahf
mov
mov
push
xchg
jnp
sub
daa
xor
mov
aaa
scas
scas
push
sub
push
adcl
in
stc
loop
add
jmp
dec
mov
push
pop
rorb
dec
inc
fidivs
inc
or
pop
jno
xchg
dec
mov
add
jmp
sub
cmp
mov
xlat
or
push
clc
mov
xor
jmp
sub
sbb
push
jg
push
xchg
cmpsb
scas
mov
mov
ret
mov
xor
hlt
lret
sbb
lret
mov
ss
mov
dec
cmpsb
and
ds
mov
test
arpl
and
mov
test
in
je
add
adcl
sahf
add
pop
push
das
enter
decl
xchg
mov
sub
arpl
scas
mov
xchg
or
scas
movsl
mov
add
adc
aad
push
dec
push
leave
lretw
sub
test
pushf
pushf
adc
sbb
popf
jb
sahf
dec
lods
fimuls
arpl
in
dec
xchg
cld
push
imull
js
adc
push
mov
loope
cmp
movb
clc
test
movb
pushf
lea
je
call
mov
int3
shrl
add
add
push
popf
jb
xchg
cmp
jl
orb
or
je
jecxz
fs
call
ljmp
pop
xchg
mov
inc
xorb
push
inc
dec
aaa
setno
xor
add
test
and
or
mov
jp
ss
out
test
lock
pop
int
mul
jmp
push
insb
popa
out
in
xchg
mov
lods
lcall
test
incl
adc
cld
cmc
push
cmc
add
call
jmp
mov
bswap
mov
lea
movzbw
pop
call
jmp
call
add
add
add
add
fucomi
push
add
cmp
xchg
add
mov
cmp
or
add
test
add
lods
cmp
adc
add
mov
add
mov
add
js
add
mov
cmp
mov
add
sarb
add
add
enter
int3
cmp
cli
mov
add
aam
add
punpcklwd
fdivrs
add
fucomi
push
add
mov
out
pop
aam
call
jmp
out
je
jb
jo
repnz
lock
mov
lods
add
xor
pop
lock
incb
sbb
or
pusha
mov
lret
dec
fs
sbb
push
lret
arpl
add
je
mov
push
dec
dec
jo
js
pop
mov
mov
xchg
push
movsb
movsb
xor
out
lcall
aas
mov
cmp
lea
jbe
orb
or
adcl
pushf
lea
jae
jmp
clc
push
cmc
cmp
pusha
lea
jae
bt
test
clc
clc
add
call
push
lea
jae
cmc
xor
call
pushfw
setae
mov
pushf
mov
ror
cmc
not
clc
add
stc
bt
clc
test
xor
stc
pushw
popfw
pushf
inc
jmp
mov
clc
test
movb
movl
pushl
lea
je
bsr
call
adcb
sub
clc
rcrb
or
jnp
sarb
xor
adc
lret
inc
adc
enter
mov
fidivrl
sub
mov
stos
mov
daa
xchg
loopne,pt
hlt
mov
pusha
dec
stos
adc
cmp
xchg
lea
mov
mov
jae
ret
nop
pop
mov
or
cmpsl
sub
xor
lret
adcl
call
sub
test
cmp
pusha
jmp
mov
call
inc
push
int
sub
test
mov
fs
fs
addr16
std
popa
popa
enter
loope
sbb
and
cmpb
rol
or
pop
pop
dec
ret
add
push
xchg
stos
lea
movsb
xor
xchg
idivb
das
jmp
jp
or
jb
hlt
js
jge
incb
cmp
leave
pusha
pushf
movl
pushf
lea
jmp
lods
jmp
add
bt
test
clc
cmp
movw
lea
jb
stc
pusha
clc
cmp
pushf
lea
jae
setge
mov
rcr
rcr
xchg
mov
jmp
ror
push
cs
into
mov
data16
loopne
out
jb
adc
std
loop
repnz
lds
and
test
test
rcrl
inc
icebp
sbb
lcall
fldt
sub
xchg
cmc
pop
les
mov
jl
movsb
xor
fisubrl
lret
cmp
adc
mov
shrb
mov
adcl
pushf
lea
mov
call
jle
inc
dec
cmp
insb
cmc
xor
in
outsl
ljmp
icebp
ljmp
pop
add
mov
movsl
movsb
popl
xor
add
mov
cmp
lret
and
inc
ret
inc
xor
xchg
jge
and
jae
mov
ss
movsl
and
leave
sbb
testb
lea
mov
adc
xor
rorl
rclb
lea
jmp
lds
fwait
add
xchg
add
out
xchg
pop
push
imul
loope
mov
pop
pop
sbb
jge
jge
fs
ja
sub
sub
pop
into
fildll
or
insl
test
test
das
mov
push
mov
test
cmp
sub
fs
in
adcl
fs
push
push
das
aas
stos
lcall
xchg
xor
out
push
mov
test
push
mov
sbb
sbb
or
jmp
cmp
arpl
cli
and
mov
fbld
dec
xlat
popf
dec
insb
add
in
fs
gs
loope
in
mov
cs
adcl
rol
fldl
loopne
repnz
sti
rorb
dec
push
dec
mov
ret
mov
pop
roll
lcall
cltd
shl
jmp
fcom
enter
popa
in
xor
aad
out
scas
jge
push
dec
out
mov
xor
dec
dec
add
sbbl
adc
ds
ror
push
fcmovnbe
sub
jge
js
or
out
in
xchg
adcl
add
aas
aas
pop
inc
data16
jb
popa
insl
inc
inc
push
inc
inc
pop
pop
pop
add
adc
add
call
inc
push
iret
rcrl
xor
inc
lea
jle
out
data16
loopne
jecxz
loope
lock
or
sub
divl
jmp
xor
jp
push
or
xlat
lret
xchg
test
leave
push
inc
icebp
sbb
pushf
jae
jae
dec
cmp
xor
jle
pop
dec
adc
inc
leave
mov
sbb
test
add
out
xor
fnstcw
fmul
push
fists
rorb
enter
adcl
add
pushf
push
bt
pusha
mov
bsf
rcl
shl
bswap
mov
stc
clc
cmp
test
cmp
lea
jbe
jns
jbe
clc
mov
sbb
xchg
movsbw
sub
add
or
setne
mov
or
bswap
pushf
add
rcr
movl
inc
sub
bsr
mov
add
push
cmp
pushf
lea
jbe
not
shl
sub
movsbw
inc
shrd
mov
sub
xor
xchg
mov
movsbl
ror
add
cmc
sub
clc
shr
inc
rcr
mov
sbb
bt
add
add
push
lea
mov
lea
call
pop
and
aad
lret
cmp
and
daa
mov
cmp
rcrl
mov
int
sub
sub
out
xchg
jecxz
idivb
jl
test
sub
mov
fst
int3
fmul
fs
out
push
sahf
les
icebp
adc
and
sbb
dec
push
out
ja
hlt
lea
mov
sub
inc
dec
aam
aaa
shrl
dec
ret
leave
inc
dec
fcmovu
push
mov
test
inc
adc
ret
dec
jge
sbb
int
adcl
into
ds
push
das
shl
sub
test
dec
inc
adc
or
xchg
or
mov
imul
lretw
cld
divb
idiv
add
stc
bnd
clc
ja
pop
clc
cltd
push
sti
mov
repz
or
fildl
adc
fdivrp
push
cmp
and
jmp
int
push
xchg
or
xchg
push
addr16
fwait
lret
insl
les
or
push
dec
mov
cmpsl
lods
inc
inc
pop
test
add
add
cwtl
adc
icebp
outsl
stc
sub
ds
pop
mov
daa
jge
push
stc
orl
fs
push
das
ret
fstl
xlat
jg
stc
sub
lods
xor
daa
mov
subl
test
adc
ficoms
push
pop
dec
push
out
icebp
push
jp
outsl
push
movsl
bndstx
inc
mov
jmp
push
pop
mov
xor
lea
or
scas
sub
je
mov
shr
out
and
test
push
iret
shrb
ror
mov
jo
sub
cmp
pop
push
add
adc
cmp
mov
scas
jns
test
mov
sub
jecxz
sbb
sbb
cmp
ret
mov
not
repnz
sarl
jns
jmp
aad
test
dec
movsl
mov
dec
jp
sub
fs
fwait
rcll
xchg
aaa
or
test
test
std
inc
lret
inc
dec
pop
inc
popf
dec
into
inc
dec
ror
dec
ror
int
lods
out
outsl
scas
cltd
push
sbb
cmpsl
mov
add
loopne
adc
movsl
push
inc
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
movl
pushl
movb
lea
jmp
ror
call
jmp
cmp
cmp
call
mov
pushf
pusha
lea
jmp
call
movzbl
mov
mov
mov
mov
lea
jmp
jmp
push
mov
movb
push
movl
pushf
pushl
ret
jge
imulb
mov
xlat
xorl
ud0
in
loopne
arpl
js
jge
sbb
sbb
and
lret
mov
fidivrs
mov
lret
mov
and
add
dec
push
pushf
bound
add
mov
mov
cltd
mov
sbb
mov
jg
push
inc
aam
icebp
sbb
and
mov
mov
sarl
lret
pop
movntq
out
out
pusha
xor
mov
and
mov
cmp
jge
fcmovnb
mov
sbb
jmp
imul
pop
sbb
xor
mov
jge
and
aaa
test
add
inc
push
sar
jb
icebp
jg
clc
add
lahf
adc
cmc
pop
or
cmc
pushl
aad
mov
ja
cmp
ljmp
adcl
mov
mov
ss
add
lods
aaa
scas
movsl
sub
aaa
sub
rcrb
push
sbb
xor
scas
inc
jp
or
testl
inc
xor
push
mov
or
mov
es
iret
adc
ss
xchg
cmp
aas
rcl
mov
jbe
bound
adc
jnp
cwtl
cmp
pop
cwtl
lea
mov
movsbl
jmp
xor
mov
loop
fsubrl
sub
test
sub
mov
push
mov
out
clc
addr16
ja
scas
cwtl
pop
scas
xchg
cwtl
xchg
pop
fadds
or
inc
stc
ja
mov
popa
outsb
arpl
insb
sbbl
test
sbbb
inc
nop
mov
pop
outsb
repnz
loop
in
repnz
nop
and
call
cmp
mov
push
outsb
xor
repnz
or
shll
movsb
mov
and
pop
jb
pop
bound
inc
dec
nop
dec
sbb
xchg
xchg
lret
shrb
sbb
aaa
test
mov
adc
leave
es
jo
test
pop
sbb
sbb
movsb
xor
leave
push
iret
inc
dec
rcl
fists
rcrb
fiaddl
adc
xor
dec
ret
ficoml
fildl
inc
lret
inc
dec
push
sti
hlt
sbb
repz
js
lock
dec
ret
je
push
cwtl
sub
cmc
jecxz
notl
jne
sarl
out
inc
aaa
pop
jo
ret
jno
nop
ret
mov
movsb
ds
mov
pushf
out
push
push
xchg
mov
inc
lret
inc
dec
ret
dec
inc
dec
push
push
cmpsb
fiadds
xchg
jle
jmp
push
sbb
sbb
mov
pop
addl
xchg
push
jl
jae
jmp
sbb
and
sbb
jnp
jmp
ffreep
and
cli
pop
sub
cmp
add
nop
push
jb
lods
inc
faddl
cwtl
push
jmp
xchg
ficoml
pop
pop
aam
xchg
dec
shlb
aaa
mov
mov
xor
dec
popf
and
aam
test
lcall
jl
adc
cmp
ja
fs
jne
xor
mov
call
pushl
pushf
lea
call
test
call
lea
jne
jmp
fmulp
inc
into
mov
push
das
clc
mov
rcrl
ffreep
fcmovb
pop
rcrb
aam
iret
ror
int
scas
inc
jle
xchg
aaa
or
sub
xchg
inc
jb
lods
and
lret
sbb
int
dec
ret
dec
les
sti
sub
movb
cmp
repnz
jmp
dec
pusha
call
jo
int
test
nop
jne
mov
jmp
std
pusha
jp
jmp
outsb
mov
pop
xlat
pop
inc
sbb
mov
and
sbbl
sub
dec
jle
pop
cs
jmp
sti
add
adc
mov
pop
inc
sub
fcmovnb
enter
or
jle
xchg
jbe
pop
inc
fisubrl
inc
ret
pop
ja
xchg
loopne
mov
das
mov
fwait
outsb
js
mov
inc
mov
push
dec
xlat
int
dec
push
lret
push
iret
push
fstl
enter
mov
inc
dec
push
push
jnp
call
mov
imul
adc
test
int3
and
jcxz
mov
jnp
aad
pop
lods
push
xchg
mov
sub
mov
enter
les
movsb
ds
repnz
cltd
mov
pop
pop
sbb
xchg
sbb
adc
mov
and
je
cmp
cmp
clc
push
add
cmp
cmp
mov
movl
call
mov
push
movzbl
movzbw
mov
push
pusha
pushl
ret
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
jmp
jmp
clc
jmp
jno
clc
data16
xchg
addr16
lock
imulb
je
and
aad
bound
push
imul
cmc
jno
push
pop
shr
gs
inc
push
lret
aas
lods
or
lods
mov
jae
mov
mov
scas
scas
scas
cwtl
adc
mov
add
repnz
adc
arpl
out
pusha
outsb
in
outsw
adcl
lea
jb
jo
cmp
push
lea
jae
btc
push
xchg
push
mov
pop
mov
bsr
movsbl
bt
mov
mov
push
jmp
mov
lea
pusha
xor
shr
mov
shl
not
mov
clc
test
or
movb
pushf
lea
je
bswap
sar
sar
or
push
bt
sbb
sub
cmp
bsf
pusha
shr
test
call
pusha
lea
je
test
jg
cmp
cmc
cmp
jmp
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
or
fadds
add
bound
out
data16
js
js
or
aas
mov
aas
out
jge
xchg
into
inc
inc
sbb
or
ja
lods
inc
mov
xchg
insl
push
enter
arpl
push
add
int
sbb
fcoml
mov
xchg
in
inc
jns
dec
push
cwtl
dec
mov
mov
pushf
dec
mov
or
iret
dec
ret
std
inc
sbb
add
or
inc
ljmp
and
xchg
in
xor
insl
pop
cmc
js
xlat
pop
sub
dec
into
ficomps
adc
scas
and
push
test
dec
pop
cvtdq2ps
loop
iret
dec
arpl
dec
test
pop
push
pop
rcr
pop
push
lods
adcl
es
les
das
hlt
popa
test
xor
mov
mov
and
xchg
mov
ffreep
flds
jbe
addr16
cmp
js
lret
nop
jbe
rclb
adc
or
test
pop
push
add
sub
jno
cld
and
mov
in
mov
ss
adc
adc
into
stc
cmp
xor
pushf
shr
call
call
shl
cmc
sub
mov
pusha
call
pushf
mov
movsbl
pop
pushf
push
pushf
pushl
pushl
ret
mov
lods
mov
ror
stc
not
cmc
ror
cmp
pusha
test
neg
clc
cmc
mov
cmp
pop
lea
pusha
movzbw
lea
jmp
dec
pop
inc
pop
push
testb
je
imulb
jmp
in
jae
hlt
std
negl
adc
or
and
mov
int
popa
mov
stos
dec
xchg
cwtl
and
movsl
shll
sub
iret
fsts
lods
mov
cmc
dec
outsl
xchg
iret
and
xchg
dec
loop
movsb
xor
lret
mov
inc
bound
sbb
popf
adc
adc
add
loop
into
fadds
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
mov
pop
and
mov
out
addl
je
jo
in
data16
add
gs
loop
out
nop
icebp
fiaddl
out
movsb
fcompl
sti
sbb
cli
popa
pop
adc
cmp
pop
mov
insl
roll
sub
jg
push
jns
rorb
dec
ror
dec
les
jg
pusha
pushl
call
clc
pusha
add
jmp
pushf
add
cmc
mov
xor
call
lea
jne
call
add
pushf
pushf
pusha
pushf
lea
jmp
pushl
push
mov
not
bswap
jmp
mov
mov
cmc
cmp
and
push
add
movw
lea
jmp
mov
pushf
jmp
cltd
mov
psadbw
inc
adc
mov
cmp
aas
and
sti
add
add
test
mov
ret
push
and
xlat
dec
dec
push
xchg
sbb
in
mov
inc
testl
rol
pop
inc
fcoms
push
pop
mov
xchg
je
mov
insb
out
dec
das
xchg
xchg
sbbb
das
mov
xchg
or
loop
pop
arpl
mov
pushf
cli
cwtl
jno
dec
rcrl
pop
inc
inc
lret
ret
dec
ss
les
mov
lea
je
movzbl
cmc
rcl
cmc
push
rol
rcr
sub
and
shr
shrd
shr
mov
jmp
mov
movzbw
mov
jmp
pusha
mov
mov
pushl
movb
pushl
ret
repnz
call
jmp
mov
adc
movb
call
xchg
sbbl
xor
xor
mov
mov
mov
mov
xchg
dec
or
cmp
sbb
cs
pop
mov
in
xchg
jbe
ret
loopne
into
cmc
mov
add
fs
mov
dec
pop
jae
jae
dec
jnp
push
mov
flds
xlat
mov
dec
movsl
stos
inc
loopne
enter
movsb
dec
xchg
xlat
loopne
addb
aad
xor
adc
pop
sbb
popf
nop
sbb
adc
je
xchg
mov
pusha
cmc
neg
pushf
mov
stc
cmc
rol
stc
bt
jmp
push
mov
call
call
mov
xchg
mov
sub
and
and
mov
push
leave
mov
jmp
add
aam
adc
add
pushf
arpl
mov
jg
insl
enter
or
hlt
dec
and
xchg
or
ss
mov
adc
movsb
xor
cmp
fs
movsl
out
int
fwait
or
into
mov
mov
test
rolb
je
cmc
add
clc
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
in
xor
in
js
push
mov
ror
push
int3
push
lods
aam
mov
hlt
ret
pop
push
out
inc
fcom
mov
insb
jecxz
xchg
ja
push
movsb
xchg
inc
inc
sbb
scas
lods
xlat
or
mov
and
pop
mov
push
pop
inc
test
cmp
popa
imul
daa
mov
jmp
clc
movsb
xor
pushf
mov
adc
xor
and
mov
and
call
stc
cmp
pusha
pushf
movb
jmp
call
push
inc
fadd
mov
cld
ljmp
jo
addb
pop
hlt
jg
fidivrs
imul
mov
or
cwtl
sub
in
inc
push
sti
sbbl
sub
mov
xchg
sbb
sub
movsl
cmp
pop
lds
xor
cmovle
vpsrlq
enter
inc
dec
inc
dec
inc
test
shlb
std
je
add
jbe
dec
sub
sti
ja
adcl
popa
je
repz
pushf
mov
pop
fildl
pop
faddp
into
inc
lret
push
jae
fstpl
sub
enter
xchg
fs
xchg
mov
nop
xchg
fisubs
sbb
xlat
jno
xor
call
in
test
jg
clc
mov
std
cld
xchg
or
fcoms
pop
add
xor
pop
aas
popf
push
sarb
inc
dec
lret
lds
mov
sub
scas
ret
aad
xchg
xor
ja
inc
fadd
pop
inc
pop
inc
lret
inc
int
stos
xor
jbe
dec
jg
cmp
push
sti
std
cmpsl
cmp
cli
adc
imul
rorl
mov
and
xlat
dec
jb
and
jne
call
daa
ficoml
stos
and
mov
and
mov
int
cltd
jbe
xchg
test
mov
in
les
out
andb
dec
inc
ds
call
add
inc
gs
gs
inc
inc
add
lret
dec
add
cwtl
jge
adc
sarl
adc
movsb
ds
mov
lock
jl
lock
imul
inc
lods
lret
popa
add
fxch
popa
jl
aaa
cld
adc
ss
les
into
rcr
dec
aaa
pop
daa
cltd
popl
pop
jno
xchg
xchg
iret
inc
inc
sbb
adc
sub
mov
mov
jmp
adc
sub
push
data16
outsl
aaa
repz
mov
mov
adc
fstpl
mov
shlb
sbb
lahf
test
sbbl
add
add
loopne
in
idivb
or
dec
mov
cmp
push
cmpsb
mov
xchg
xchg
mov
movsb
xor
mov
aaa
scas
mov
sbb
push
je
pushl
gs
pushf
pushf
pusha
movl
call
pusha
pushf
jmp
lea
jbe
inc
stc
sub
shrd
mov
shl
shl
mov
btr
btc
neg
rcr
add
test
shr
rol
movzbw
rol
mov
bsr
sar
add
mov
mov
movzbw
mov
mov
push
mov
mov
pushf
not
pushf
lods
stc
cmc
stc
clc
ror
bt
call
pushl
cmp
mov
movb
push
pusha
lea
ja
push
neg
dec
shr
sub
or
lea
add
and
sbb
push
mov
setnp
mov
cmc
repnz
jmp
add
add
lea
ja
pusha
pusha
mov
push
lea
jb
pushf
jmp
lea
je
jmp
cmp
cmp
cmp
pushf
jmp
pusha
pushl
cmp
push
jmp
lret
jnp
stos
push
nop
andb
hlt
imul
outsl
repz
dec
inc
and
aam
movsl
stos
mov
jecxz
aam
in
rcrb
mov
cmp
loope
xchg
je
fiaddl
or
jmp
xchg
filds
rol
fildll
mov
xchg
sbb
sbb
out
outsl
adcl
push
xor
call
jmp
add
push
gs
jo
outsb
dec
gs
add
stc
rol
pushl
cmc
mov
mov
stc
stc
add
cmc
test
pushl
lea
jne
jmp
inc
push
mov
jecxz
xchg
jo
std
data16
jle
std
jecxz
loopne
lock
adc
adc
adc
and
repnz
inc
filds
jns
and
xchg
push
mov
daa
mov
fldenv
adcl
lea
jne
sbb
push
mov
not
shr
lea
sub
add
stc
push
shl
dec
lea
sub
cmp
clc
test
test
sub
cmp
pushl
cmp
call
push
lea
jnp
mov
pusha
pushf
movw
lea
jmp
adc
mov
rol
call
xor
bound
xchg
push
adc
adc
or
mov
out
ljmp
out
xchg
or
mov
cltd
ds
sub
fcom
lods
in
sti
addr16
cmpsl
out
mov
inc
xchg
fdivrs
add
and
xor
roll
aad
mov
push
sbb
leave
adcl
dec
stos
punpcklbw
shll
icebp
jle
jle
jbe
mov
xor
dec
inc
dec
inc
leave
ret
iret
inc
fcmovnu
aad
push
adcl
pushf
pushf
lea
je
push
pushf
lea
jmp
out
adc
jmp
ljmp
out
je
jne
adc
push
mov
leave
loop
adc
sahf
hlt
cld
jecxz
repnz
add
pop
mov
sbb
adc
pop
jae
stos
shrl
aaa
divl
fdivrs
imul
popf
out
inc
out
lods
sub
inc
fidivl
pop
pusha
lods
push
jns
int
imul
ljmp
inc
in
std
ss
dec
pop
ret
add
rorl
in
pusha
in
adcl
mov
rorb
cmp
adc
adc
arpl
or
add
out
mov
cld
out
addr16
dec
jecxz
jecxz
jne
idiv
incb
fwait
dec
ja
out
bound
mov
out
divl
fsubrs
mov
cmp
xor
call
iret
sub
add
push
jp
repnz
pop
push
sbb
pushf
jecxz
adcl
movsl
cmp
push
push
das
jmp
arpl
std
ss
dec
test
or
add
jns
mov
mov
scas
xor
mov
or
jo
push
pop
rcr
das
push
imul
inc
mov
pop
inc
cmp
xor
in
add
pushf
movsb
mov
push
mov
aam
inc
push
xor
lods
cmp
push
or
sbb
jge
daa
pop
mov
sarl
jge
pop
icebp
stc
aas
mov
mov
fucom
call
mov
push
imul
test
pushf
adc
push
sbb
pop
mov
xlat
lret
pop
xor
aas
mov
xchg
xor
mul
imul
lods
xor
mov
mov
mov
ljmp
xchg
jns
xchg
pop
mov
push
dec
jg
mov
pop
orb
push
inc
and
out
cmpl
fildl
lret
bound
pop
mov
or
jl
cmp
loope
mov
mov
mov
mov
repnz
arpl
xchg
bound
pop
jns
mov
inc
push
dec
ror
mov
sbb
lea
mov
pusha
mov
jl
xchg
sahf
mov
pushf
xchg
lahf
jo
jo
mov
add
jg
and
lahf
push
lds
enter
ljmp
iret
int3
inc
push
pop
mov
out
inc
mov
pop
dec
push
push
mov
cltd
xchg
push
xchg
cltd
adcl
lea
inc
xchg
mov
bswap
or
sub
push
movl
lea
movb
movb
lea
jmp
push
lea
jne
setg
mov
bswap
movb
jmp
test
jmp
xchg
xchg
add
lret
cmp
mov
and
mov
dec
push
clc
inc
xchg
push
or
mov
dec
push
pop
sub
aas
xor
mov
sub
cmp
pop
lea
sub
fwait
lods
aaa
lahf
add
adcl
jmp
scas
mov
mov
mov
mov
cmp
movsl
mov
fldenv
pop
or
movsl
inc
fnstsw
in
mov
and
mov
dec
test
jb
xchg
and
loope
enter
dec
inc
mov
movsb
xor
movsb
sub
outsl
push
cmpsb
rorl
push
cs
pop
inc
dec
ret
and
xchg
mov
call
lea
je
call
pusha
jmp
mov
nop
push
mov
sbb
in
sbb
xchg
sbb
add
inc
pop
daa
popf
lods
mov
scas
jl
dec
dec
jnp
or
cmp
sbb
out
lods
test
mov
mov
adc
mov
or
test
loope
out
jne
stc
jb
add
jnp
jle
adcl
cvttps2pi
push
cmc
adc
and
aas
mov
test
mov
mov
in
aaa
scas
daa
xor
push
imul
es
addr16
pop
aas
cmc
test
xchg
gs
pop
movsb
mov
xor
out
popa
mov
lcall
xchg
cmpsb
mov
or
xchg
pushf
xchg
cwtl
push
popf
adc
dec
and
jmp
xor
out
xchg
loope
adcw
mov
cld
movsl
call
arpl
xlat
cmpsl
lahf
hlt
push
loope
cli
in
lock
jo
arpl
jbe
jne
jb
jo
dec
cmpsb
cmpsb
pop
mov
push
or
int
dec
or
sub
jge
inc
lcall
push
dec
sub
pop
pop
lock
dec
inc
mov
lods
dec
adc
fmulp
push
cld
jecxz
push
xchg
xor
movsb
xor
mov
mov
add
push
pop
rcrl
fists
rcr
shrl
lods
adcl
pusha
pushl
ret
push
cmp
jmp
mov
rcr
cmc
add
xchg
rcr
mov
bsr
sbb
add
btr
bts
movl
dec
ror
and
jmp
pushf
movb
lea
call
call
lea
jne
jmp
call
mov
bt
pushl
add
mov
pusha
lea
jmp
add
bt
cmp
pushf
mov
movzwl
xor
shl
mov
pushl
pushf
mov
add
pusha
call
push
inc
inc
pop
xlat
pop
adc
xchg
push
lea
jns
not
stc
call
bswap
mov
bswap
mov
pushf
mov
mov
pushl
pushf
jmp
lea
call
pushf
pushl
jmp
dec
push
push
inc
dec
push
push
cs
insb
add
clc
pusha
stc
push
test
cmp
pushf
jmp
dec
lods
pop
aaa
aas
pop
lret
repz
lock
jbe
jo
imul
icebp
jl
addr16
inc
mov
or
and
dec
dec
push
mov
scas
xor
pop
popa
jle
lret
jae
cmp
std
cmp
sub
xor
mov
adc
xchg
cwtl
xchg
or
int
cmp
fs
sbb
jns
orb
adc
cmp
out
je
add
lret
add
and
add
cmp
movsbw
setbe
lea
jbe
lea
jmp
or
xor
fwait
jmp
sahf
add
test
add
adcl
adc
adc
mov
xor
sub
xchg
pushf
jae
add
ret
or
or
pushf
test
loop
adc
and
dec
stos
outsl
fs
mov
jnp
jno
fwait
cmpsl
pop
pusha
stos
lock
push
adc
sbb
or
xchg
outsb
adcl
test
call
mov
or
jmp
nop
test
jmp
movsl
inc
mov
enter
pop
lods
mov
imul
and
push
xchg
inc
mov
aas
mov
loopne
fcom
sbb
adc
dec
xchg
inc
sbb
adc
push
movsb
xor
out
inc
push
pop
or
jns
mov
jnp
insb
jecxz
out
pusha
jmp
jecxz
in
adc
leave
cmp
adc
pusha
pushl
lea
jmp
mov
stc
stc
mov
add
jmp
mov
or
fcmove
das
sub
mov
dec
cmp
mov
mov
mov
stos
mov
daa
scas
inc
dec
jno
dec
or
aam
ret
neg
push
mov
fwait
add
add
ficompl
mov
xchg
or
in
adc
stos
and
subb
loope
or
fcmovnbe
enter
inc
lret
adcl
clc
pushl
ror
stc
pushf
test
pusha
not
sub
jbe
cmc
cmc
add
bt
jp
push
stc
xor
push
shr
pushf
mov
lea
je
jmp
lea
jb
pusha
cmp
pushf
lea
jae
pusha
or
bswap
shr
mov
pushl
seta
mov
clc
shld
bswap
cmp
mov
pushf
mov
bt
xor
push
mov
mov
movb
repnz
push
call
call
inc
push
into
rcrl
jp
fcomi
jmp
jb
jbe
icebp
or
jl
in
sbb
mov
sbb
xor
and
daa
mov
shl
pop
xchg
inc
fldenv
inc
in
in
sti
jbe
ljmp
mov
push
sbb
aas
and
js
jg
out
imul
adcl
jmp
lea
call
pusha
call
mov
mov
lea
call
call
add
cwtl
push
add
add
add
cs
add
add
add
call
add
add
add
add
adc
add
add
inc
sub
add
add
dec
pop
add
add
add
jle
add
add
add
lods
aaa
add
add
add
lea
add
cmp
push
add
aaa
add
dec
cs
mov
add
add
mov
call
lea
movb
pushf
setl
pusha
mov
movzbw
setae
bswap
pusha
lea
pushf
movl
lea
jl
push
push
mov
movb
pushl
ret
jae
push
jmp
jmp
pusha
cmp
movb
lea
ja
mov
inc
inc
inc
inc
dec
xchg
aas
cmp
call
jmp
jmp
xchg
xchg
sbb
sbb
dec
mov
call
in
aad
mov
aam
push
sbb
lcall
jmp
mov
je
cmp
dec
push
movsb
movsl
mov
test
jo
cmpsb
movsb
xor
add
shr
adc
sub
call
cmp
scas
and
mov
xor
mov
aaa
adcl
mov
jmp
inc
inc
dec
xor
cs
insb
add
aas
mov
sub
shll
adc
pop
pop
push
sbb
lcall
and
gs
and
pop
insb
dec
dec
mov
into
enter
stos
aas
push
pop
lock
pop
mov
xor
sub
andb
repz
pusha
call
imulb
clc
in
push
loopne
or
mov
out
out
fnstenv
jno
xchg
jae
data16
xor
rcrl
adc
decl
sbb
mov
popl
setne
mov
cmp
pushf
test
movb
push
jmp
lea
jne
push
movb
jmp
pusha
lea
call
push
pushf
push
lea
jae
not
jmp
xchg
adc
aam
repnz
add
pop
or
push
icebp
jg
and
pushf
addr16
fldenv
scas
pushf
mov
test
inc
leave
inc
and
out
dec
out
push
inc
pop
imul
xchg
mov
mov
pop
repz
dec
dec
pop
adc
dec
ret
mov
and
jle
aad
dec
jp
sub
int
cmp
jp
push
inc
lret
les
mov
testb
aad
clc
out
subb
dec
aam
andnps
add
xchg
or
adcl
cmp
xor
rcrb
push
leave
subl
pop
cltd
pop
popf
incl
mov
dec
mov
jmp
fisubrs
dec
fidivrs
sub
mov
xor
loopne
and
ret
cli
dec
jp
mov
push
xchg
pop
mov
mov
mov
iret
shlb
sub
sub
mov
aaa
lret
mov
mov
mov
movsb
fisubl
cmp
mov
mov
sbb
mov
cmp
test
mov
mov
cmpsl
mov
and
cmp
fcom
test
xchg
dec
in
loopne
inc
lock
jge
sbb
inc
enter
mov
mov
mov
adc
sub
or
addr16
xor
push
movl
popa
mov
pop
pop
push
xchg
pop
pop
cwtl
sub
fidivs
imul
fldlg2
cmpsb
insb
mov
pop
pop
arpl
inc
pop
addr16
aam
jl
push
int3
mov
iret
out
outsl
push
push
mov
lods
mov
xchg
mov
out
fiadds
scas
das
shll
out
fsts
popl
insb
test
xchg
repnz
cli
je
adc
shlb
cmpsb
insb
nop
xchg
sub
cmp
mov
dec
xchg
insl
mov
fstps
push
push
sub
xlat
adc
pop
dec
push
push
dec
jne
adc
pop
lahf
sbb
movsl
aad
out
mov
pop
icebp
scas
stos
inc
xchg
inc
int
pop
aas
push
xor
jge
fs
sub
iret
arpl
add
mov
push
loope
aaa
inc
sub
popa
ljmp
inc
sbb
xchg
mov
inc
mov
scas
sub
addr16
xor
roll
xor
jns
inc
fucomi
insb
scas
repnz
insb
cmp
das
push
sbb
jmp
adc
add
movsl
out
imull
rcrl
jle
mov
scas
test
cltd
pop
mov
mov
sbbl
shrl
or
les
movl
push
push
das
icebp
sbb
jbe
sub
in
stos
adc
insb
mov
ja
sub
repnz
loop
xlat
push
mov
test
inc
jns
stos
iret
aaa
shr
neg
jl
pop
mov
mov
xlat
pop
repnz
pop
cmpsl
xor
jne
dec
out
iret
and
addr16
iret
sbb
xlat
inc
sbb
pop
pop
insl
sbb
add
xchg
mov
inc
adc
shll
pop
fldt
imul
insb
pop
ffree
cmp
cwtl
aad
pop
mov
dec
mov
fmull
mov
jb
sbb
sbb
or
fbld
fiaddl
jecxz
das
and
mov
adc
pop
pop
fstps
pop
lret
add
pop
pop
xchg
sub
jb
aaa
dec
sub
mov
das
mov
fcoms
sub
loop
dec
adc
ljmp
jbe
fsts
sbb
subb
pop
dec
inc
mov
loop
rcl
call
iret
and
jb
push
inc
xor
arpl
or
repnz
pop
jbe
sbb
sbb
pop
cmp
shll
ficompl
cmp
sbb
fwait
push
shr
fsubs
ja
add
insb
test
data16
js
idivb
sub
xchg
xchg
es
cmc
mov
mov
out
shrl
pop
daa
out
repnz
lahf
pop
stos
and
pop
jle
les
imul
or
mov
or
sbb
lods
sbb
fidivrs
mov
int3
out
sbb
mov
pop
xlat
xor
xor
push
sub
dec
xor
mov
outsb
inc
push
fcomip
fisttpl
data16
mov
js
add
jb
stos
enter
jb
and
insb
lcall
push
cmp
pop
push
push
push
jle
rcrb
insb
les
aad
fsub
adc
mov
out
lds
cmp
push
sbb
pop
out
sub
test
into
fdivl
sbb
sbb
test
push
ror
or
loopne
mov
stos
push
mov
push
lcall
rcll
ss
xchg
sbb
out
sbb
cmp
pop
xor
iret
pop
push
adc
cmpsb
dec
jbe
xchg
inc
dec
dec
xor
lods
xor
das
sub
call
sbb
xchg
iret
cmp
pop
add
mul
fsts
in
pop
cmp
add
cmpsl
mov
scas
xlat
fwait
pop
loop
aad
shl
inc
xchg
xchg
push
iret
add
lods
int3
mov
push
push
aaa
enter
cmp
xor
mov
or
mov
fnstcw
mov
xchg
ja
mov
fstps
fadds
pusha
outsl
addr16
insl
sbb
inc
daa
outsl
enter
cmp
fsts
or
push
test
mov
cmp
hlt
rorl
shlb
gs
dec
in
inc
fists
cmp
pusha
adc
rcl
in
pop
cmp
in
gs
nop
inc
iret
bnd
cli
or
testb
pop
cmc
pop
sbbb
sbb
mov
loop
pusha
inc
xchg
sub
int3
cld
push
enter
fidivs
int
arpl
xchg
aad
cmp
popa
cmp
bound
pop
lret
mov
in
cmc
sbb
pop
dec
adc
pop
insl
cwtl
sbb
cmc
push
fsubrs
add
fcmovne
gs
pushf
push
fwait
adc
xor
fcomi
pop
outsl
cmp
add
inc
xor
popa
dec
xchg
pop
push
xlat
divb
cmp
sahf
sbb
and
aas
js
pop
mov
mov
adc
push
inc
mov
sub
mov
or
sbb
sub
popa
and
mov
jmp
sbb
mov
iret
outsl
filds
push
fnstsw
fnsave
addr16
aaa
mov
or
lret
dec
xchg
leave
sbbb
notl
shll
cld
sbb
pop
dec
insl
test
out
push
shrb
movsb
sbb
add
or
sbb
dec
frstor
test
gs
xchg
addr16
sub
add
xlat
adc
cltd
das
lret
pop
sarl
inc
pop
aam
sbb
adc
sbbl
mov
fidivrs
dec
dec
mov
mov
movl
mov
add
in
aad
push
jecxz
or
jmp
jne
dec
cmpsb
jmp
loop
sbb
pop
inc
idivb
imul
mov
mov
fwait
mov
cmpl
xchg
and
dec
push
aaa
xchg
lods
movsb
andl
push
adc
sti
iret
sbb
adc
cli
das
fs
pushf
movswl
sub
dec
and
pop
in
pop
cmpsl
rolb
dec
cmpsb
sbb
push
sub
pop
pop
in
dec
negl
pop
test
mov
scas
fisubrl
stos
mov
push
out
mov
lret
pusha
add
or
lock
es
movsb
and
pop
call
repnz
cli
xorb
popf
sbb
inc
xlat
xor
push
xchg
addr16
xor
pop
xchg
aas
xchg
jnp
cwtl
push
dec
or
cmpsb
xor
imul
sbb
xchg
cltd
fcomps
pop
push
cmp
sti
cmp
shrl
movsl
call
incb
sbb
movsb
in
xlat
jmp
ljmp
rorb
clc
cwtl
inc
addr16
push
testl
iret
push
pop
das
xor
xor
pop
mov
or
fstps
pop
fistpll
shl
push
sbb
sub
cwtl
hlt
or
cmp
loope
outsl
test
push
lock
pop
lahf
mov
mov
lahf
imul
mov
in
add
mov
xchg
loope
mov
rcll
pushf
jecxz
sbb
or
inc
insl
fisttps
adc
fnstcw
push
pop
or
mov
fucom
cmp
mov
xor
push
loope
pop
mov
imul
pop
fstpt
xchg
pop
xchg
inc
mov
pop
jo
adc
roll
cmp
add
stos
xchg
adc
imul
test
pop
fwait
insl
mov
stc
fcom
push
mov
scas
sub
shrb
xor
push
jbe
sub
loope
ja
shl
jbe
shrl
mov
mov
push
lods
in
push
mov
xlat
inc
sub
gs
xor
sub
in
adc
dec
jo
pop
cli
xchg
mov
aam
mov
mov
rcll
cmp
xchg
cmpsl
movsb
adc
jg
and
not
or
mov
sbb
icebp
lret
adc
fsubs
popf
pop
into
and
gs
and
fwait
cmpsl
fstps
or
int3
push
fistpll
imul
push
pop
or
pop
sbb
faddl
push
in
hlt
iret
cmpsl
enter
cmc
fstps
fs
mov
insl
fcompl
pop
dec
push
xchg
ss
fistps
cmp
jb
xlat
dec
gs
sbb
out
push
addr16
mov
mov
aaa
or
mov
xor
xlat
mul
pop
shrl
xor
scas
iret
call
xor
aam
sub
leave
out
popf
loopne
adc
push
fwait
loopw
push
out
arpl
pop
cmp
mov
push
hlt
idivb
addr16
and
lret
push
jo
pop
iret
pop
repz
pop
roll
scas
mov
sbb
adc
int
stos
add
cmp
mov
in
dec
rcl
sub
pop
cmpsl
rorl
sbb
ficompl
mov
adc
lea
xor
in
pop
adc
ss
dec
ljmp
iret
push
andl
out
lcall
loop
cmp
scas
jns
mov
insb
mov
gs
sti
imul
data16
push
outsl
jne
mov
or
add
cmc
mov
pop
dec
sbb
fsubs
xor
aad
loopne
push
xor
iret
xchg
sub
xor
sub
lahf
stos
xchg
cmp
in
mov
loope
pop
aas
fstps
ficompl
outsb
arpl
repz
in
xchg
sbb
fstl
pushf
add
cmp
mov
shr
mov
fbstp
jnp
rcrl
imull
loop
test
or
and
fnstcw
test
mov
pop
bound
adc
pop
and
rcr
cmpsb
sub
push
sbb
dec
shrb
outsl
lret
sbb
sub
push
imul
loopne
mov
fwait
decl
cmp
insb
pop
ficoml
lahf
clc
dec
repz
and
adc
sahf
js
outsl
dec
or
inc
lret
scas
mov
imul
cmp
lret
xchg
sbb
mov
mov
clc
pop
aad
adc
aam
nop
sbbb
push
loope
xor
jnp
xor
push
das
sti
jle
gs
lret
aaa
addr16
and
mov
xor
push
mov
xlat
enter
sbb
sbbb
sarb
sub
inc
les
xchg
inc
ret
lret
fbstp
adc
inc
data16
lock
aas
lcall
lds
fbld
pop
rolb
repnz
arpl
outsl
movsb
clc
jecxz
fists
mov
and
mull
xchg
add
rol
pop
jae
scas
push
mov
sub
divb
cmp
xchg
sub
mov
sbb
in
inc
jae
enter
jmp
push
sub
lret
movsb
sbb
sbb
xlat
iret
shr
scas
decb
xorl
mov
rolb
lea
sti
rorl
mov
push
xchg
sub
sbb
out
mov
or
shll
sbb
sbb
cmpsl
jecxz
scas
adc
pusha
xchg
aam
clc
ja
out
jne
xlat
cmp
imulb
negl
ljmp
fstpt
and
sbb
mov
adc
or
aas
xor
sahf
sbb
cs
mov
xor
mov
fadd
xchg
jle
push
aaa
gs
sti
jg
mov
cmp
es
or
shl
aaa
iret
push
popa
cmc
add
mov
adc
cmpsl
and
push
pop
addr16
push
sbb
loopne
cmpsl
adc
jmp
jge
mov
fildll
xchg
jb
lods
and
sbb
mov
jae
bound
mov
pop
adc
jl
pop
out
in
inc
pop
out
negb
and
insb
fcompl
xchg
sbb
xchg
xrstors
cmpsl
lea
mov
mov
outsb
or
or
test
xor
es
cwtl
rcrb
cmp
pop
aad
fisubl
aas
imul
jle
xchg
or
imul
out
cwtl
dec
nop
int3
push
pop
sbb
jae
pushf
xchg
inc
sub
sti
fsts
pop
or
aad
scas
cli
mov
mov
xchg
test
repnz
pop
iret
inc
fisubrl
test
imull
shlb
xor
in
push
cmp
xor
cwtl
movsb
pop
test
cltd
daa
pop
push
inc
jl
mov
inc
cld
stos
lds
fnstsw
push
in
or
xor
lret
scas
jo
add
or
adc
leave
xor
call
push
into
pop
push
xchg
lcall
outsl
sbb
mov
xchg
push
or
jo
lret
cmp
cmp
push
mov
ja
pop
adc
insb
xchg
lods
or
pop
xchg
inc
sub
push
pop
rclb
sub
sahf
addl
xor
push
pop
inc
xchg
xor
hlt
mov
xchg
repnz
imulb
sub
lods
movsl
inc
dec
shll
push
mov
add
push
dec
pop
push
out
sub
xchg
mov
aaa
or
xchg
arpl
imul
sub
cmp
pop
mov
sub
sbb
inc
shrb
stos
adc
scas
movb
aaa
mov
int3
sub
jbe
gs
xor
outsb
sub
cmp
push
cmp
inc
xchg
sar
pop
inc
dec
loop
int
mov
insb
pop
lret
arpl
xor
sbb
aaa
in
mov
push
repnz
cmp
xor
cmp
mov
inc
int
xchg
daa
push
data16
and
xorb
xchg
outsb
cmp
in
mov
inc
pop
mov
push
rcr
stos
pusha
cmpl
fs
or
pop
das
jecxz
aad
dec
stos
outsl
jecxz
mov
mov
cmp
stos
sarl
push
adc
cwtl
shrb
iret
imul
cmp
mov
outsl
add
xor
fbstp
bound
roll
mulb
repnz
addr16
lods
pop
popf
push
divl
out
sub
push
xchg
out
pop
fildll
dec
sbbb
rcrl
inc
andl
xor
outsl
out
sub
pop
fists
push
mov
mov
add
cli
jmp
mov
xor
sub
xor
adc
lea
adc
scas
out
aam
dec
mov
xlat
mov
aam
sub
dec
mov
add
pop
sarb
out
and
insb
adc
sahf
adc
shll
cli
push
jb
inc
cmp
jne
adc
pop
xorb
push
adc
aaa
inc
mov
push
cld
stos
lods
and
pop
aad
xchg
dec
movsl
xchg
pop
mov
and
mov
inc
aas
push
push
add
mov
pop
or
fwait
dec
cmp
pop
dec
jnp
daa
insb
mov
lods
hlt
push
fcmovnu
outsb
ljmp
js
dec
mov
inc
std
je
gs
cs
mov
xchg
out
fwait
mov
inc
cwtl
stos
mov
mov
ficomps
bound
int
cmc
mov
fs
inc
loope
jns
and
outsl
xchg
fdivrl
ljmp
test
sbb
imul
dec
imul
xor
aas
push
andl
xchg
fstps
das
jle
cli
sbb
rcrl
nop
cmp
sub
fstps
gs
fcmovnb
iret
rorl
inc
mov
xlat
movb
xchg
cmp
cmp
addr16
testl
rcl
or
mov
jb
push
inc
jae
sub
push
in
cwtl
sarl
pop
loop
faddl
jbe
inc
xchg
and
sbb
testl
pop
repnz
pop
movsb
dec
and
pop
outsl
sbb
push
jmp
dec
jecxz
xlat
arpl
sub
push
flds
push
push
and
mov
sbb
pop
jl
and
fcomps
inc
andb
add
ljmp
loope
aaa
testl
adc
fsubs
sbb
aad
icebp
push
cmc
out
sbb
out
rcll
fs
fnsave
cmp
aaa
add
mov
fdivrl
dec
cli
lods
fnsave
out
pop
stc
lret
iret
insb
cltd
std
gs
sbb
cmp
call
lds
pusha
lahf
cli
push
add
inc
shll
xchg
mov
cmp
fcoms
mov
mov
push
pop
xchg
mov
shll
pop
nop
cwtl
cmp
mov
jle
cltd
pop
dec
fcoms
int3
sbb
sbb
sbb
adc
aaa
pop
inc
pop
push
or
fcoms
fbld
mov
add
xlat
lret
xor
lcall
dec
out
inc
cli
sbb
adc
and
shr
out
jg
int3
jno
mov
push
jp
mov
inc
rcr
ja
lcall
mov
dec
dec
or
aad
cmp
xchg
cmovo
xor
sub
hlt
fldenv
xor
mov
insb
or
dec
dec
idivb
stc
mov
ds
lret
scas
adc
jge
and
sbb
mov
and
addr16
cmp
and
adc
shlb
sub
out
fwait
cwtl
clc
xchg
into
pop
daa
xchg
pop
test
or
test
clc
or
add
mov
xlat
hlt
test
pop
adc
dec
sub
pop
sub
pop
mov
rcll
rcrb
pop
fisttpl
cmp
cmpsl
lahf
sub
jecxz
jmp
das
and
lahf
hlt
fisubl
pop
sti
out
jmp
mov
fsubl
jmp
cmp
jo
outsl
loopne
or
daa
cmp
mov
mov
mov
in
icebp
push
daa
pop
inc
popf
test
movsl
xchg
pop
or
aas
fiaddl
pusha
insl
mov
movsl
ds
sbb
ret
xchg
pop
push
ficoms
aaa
push
sub
fadds
add
out
pop
jp
sbb
cmp
ret
or
cmpsl
data16
xor
pop
jbe
and
sub
jne
add
mov
daa
shll
addr16
pop
les
add
fldz
xor
or
pop
xorb
in
js
xchg
outsl
imul
dec
xchg
sti
jl
rol
mov
out
or
popf
mov
inc
in
and
xlat
push
divb
out
aas
fwait
dec
outsl
ret
lahf
push
gs
jecxz
cmp
pop
out
sub
push
push
inc
mov
dec
gs
aad
pop
cltd
imull
cmp
arpl
imul
in
lds
aaa
dec
jns
pop
ds
fucomi
and
dec
stos
fnstenv
test
insb
sti
xor
dec
gs
filds
fmuls
stc
in
jmp
pushf
or
ficoms
sbb
and
dec
add
mov
push
data16
inc
dec
push
jmp
cmc
sbb
imul
ss
enter
cwtl
test
add
push
xor
inc
stc
cmp
les
push
add
cmpsb
clc
jbe
fiaddl
push
das
lods
push
sbb
sub
cli
js
or
fistl
dec
adc
negl
stos
or
mov
out
nop
enter
hlt
fwait
daa
imul
dec
inc
jecxz
adc
out
adc
call
pop
cli
adc
dec
add
and
adc
mov
mov
cmpsb
xlat
pop
xchg
xor
repnz
lcall
cwtl
fs
in
pushf
cltd
in
in
push
adc
cmp
pop
ja
pop
adc
nop
xchg
stc
mov
cmpsb
inc
sbb
cmc
leave
in
mov
fistps
addps
sub
sub
mov
scas
add
bound
mov
out
pop
fsubrs
call
jmp
adc
xor
lahf
lds
adc
fs
sti
xchg
rcrl
data16
insb
sbb
imul
js
pop
lahf
sbb
xchg
das
data16
mov
mov
fsubr
lds
cli
out
insb
pop
das
fcmovne
aas
mov
sbb
cwtl
pop
jbe
adc
test
mov
outsl
pop
imul
sarl
movsb
cmpb
neg
sub
aaa
aam
and
xchg
enter
fs
in
pop
mov
xlat
mov
test
ds
rorl
pop
pop
mov
sar
out
fiadds
mov
xlat
pop
push
int3
test
jg
cmp
testb
jle
pop
outsl
das
mov
sbb
icebp
xor
fcmovbe
sub
inc
xor
or
push
sub
mov
mov
sub
sbb
mov
cmp
push
mov
inc
scas
or
lcall
fs
push
pop
add
push
adc
jbe
repnz
cmpsb
cmp
sub
out
push
cli
pop
shll
xchg
test
mov
jno
insb
sti
xlat
in
cmp
pop
adc
fisttpll
push
push
aas
daa
stc
xchg
mov
sahf
pop
push
cmpsl
cmpsl
loope
cmp
adcb
fstps
ljmp
hlt
sub
test
fwait
cli
mov
push
push
negb
mov
mov
and
sub
pop
in
sbb
dec
adc
fldenv
mov
pushf
jnp
rol
pop
jp
push
and
push
sbb
pop
mov
sbb
out
fwait
sbb
adc
pop
shrl
cli
xor
js
pop
inc
out
mov
add
shrl
push
push
fbld
test
push
ror
rcrl
mov
sahf
and
push
pop
mov
push
dec
fs
inc
sbb
incl
cmp
repz
mov
mov
aaa
iret
nop
adc
xchg
aas
call
xor
inc
mov
nop
hlt
dec
sub
mov
sbb
xchg
sbb
fldenv
pop
lahf
cmp
iret
rolb
fs
imul
outsl
xor
data16
bound
popw
das
cwtl
insb
jecxz
test
pop
pop
cli
aas
test
fildll
es
push
adc
sbb
testb
dec
pop
mov
arpl
lock
inc
and
sub
repnz
sbb
inc
push
pop
or
mov
xchg
arpl
push
movsl
fcoms
shll
in
mov
fwait
or
push
xchg
iret
add
and
inc
pop
pusha
xchg
adc
inc
fstps
roll
xchg
hlt
dec
adc
ret
xchg
cmp
add
into
push
lret
lret
pop
xchg
aad
adc
mov
fildl
fidivrs
cld
fbld
pop
adc
aad
shrb
ret
xchg
sbb
pmuludq
cmp
mov
inc
pop
or
lcall
adc
insb
int3
sbb
push
fadd
inc
or
cltd
lcall
fldt
dec
inc
ja
jl,pt
xchg
sbb
push
xchg
pop
sub
sub
inc
cmpsl
fimuls
lahf
aaa
add
jno
xor
arpl
mov
inc
pop
bound
add
jb
jecxz
dec
xlat
xchg
xchg
loopne
push
js
out
xchg
pop
add
mov
imul
jns
pusha
adc
push
fsub
imul
push
dec
mov
add
xlat
movsl
push
iret
push
repz
imul
xor
adc
fbstp
add
adc
fiadds
sbb
push
pop
ss
dec
add
nop
pop
fadd
add
jae
xchg
pop
andb
push
pop
pop
lret
sub
cmpsb
mov
mov
fistps
popa
dec
lret
xor
leave
popa
dec
loope
pop
popf
dec
push
out
insl
xlat
pop
and
mov
pop
dec
and
add
or
lods
in
inc
ret
rcrl
aad
int3
sahf
adc
jnp
pop
xor
je
mov
pop
test
dec
xor
xchg
insl
adc
jno
outsb
jg
sbb
jge
jl
pushf
push
lret
sti
mov
dec
adc
aaa
insb
test
pop
lods
inc
mov
movsl
out
lret
lea
sub
call
adc
jmp
repnz
rcr
adc
repz
movsl
add
fidivrs
fcmovnu
adc
dec
push
insb
mov
idivl
adc
or
and
and
sub
xchg
outsb
xor
pop
and
add
movsl
aad
stc
sub
mov
jbe
insb
mov
outsl
jb
mov
and
fsubp
cmp
int
sbb
and
cmp
lahf
fstps
add
mov
xchg
jb
push
mov
push
pop
or
outsl
inc
mov
cmp
pop
fwait
pop
pop
jle
in
mov
sbb
xchg
add
xchg
fisubs
fcompl
push
jne,pt
fiaddl
repnz
stc
xlat
loope
addr16
addr16
xchg
clc
inc
mov
test
cmpl
bound
inc
inc
lods
adc
hlt
xchg
jmp
movsb
cmp
lahf
sub
dec
jbe
outsl
popa
aaa
xor
inc
xlat
adc
pop
lret
push
aas
rorb
pop
ss
das
push
rcl
scas
jl
pop
out
xlat
mov
push
pop
or
insl
cmp
sbb
outsl
cld
inc
push
sti
or
mov
mov
mov
mov
leave
push
cli
jecxz
mov
outsl
xchg
aaa
mov
fs
xor
lahf
inc
sbb
repz
add
aam
das
pop
xchg
xor
or
adc
test
mov
sbb
cmp
cmp
push
cmpsl
sub
ja
push
pop
cmp
push
cmp
sub
pop
int
negl
sbb
or
push
fmuls
xor
mov
popf
xchg
pusha
lods
xor
xlat
pop
test
jns,pt
push
dec
pop
push
outsl
std
aaa
push
pop
pop
fisttpl
imul
mov
sbb
fwait
ja
sbb
outsl
or
data16
insl
mov
cltd
gs
pop
cmpsl
stos
pusha
ja
push
jmp
dec
ja
sbb
cmp
sub
push
mov
lret
gs
push
stos
sarl
mov
push
adc
sub
cmp
inc
outsb
and
fsubs
out
sub
push
xor
mov
mov
cmp
decb
cmpsb
push
jbe
xchg
mov
insb
sbb
cmp
push
dec
adc
push
sub
cmp
sub
or
data16
sbb
dec
push
mov
mov
pushf
decb
gs
pop
ss
hlt
push
cmpsl
cmp
mov
sbb
sbb
out
stc
outsb
das
or
pop
jns
fsubrp
sarl
call
rorb
loop
push
xchg
mov
ret
pop
mov
jle,pt
out
test
into
cmp
gs
dec
push
jnp
pop
mov
arpl
xor
ja
xor
sti
mov
adc
gs
sbb
jmp
out
and
cmp
movsl
xor
aad
nop
and
gs
scas
lds
movsl
sub
jb
dec
mov
xchg
andl
mov
adc
cmp
inc
xor
shlb
mov
cmpsl
ret
dec
xchg
sbb
and
notl
popa
fwait
andb
aaa
gs
mov
push
jg
ss
loopne
shrb
lahf
jne
fcmovnbe
push
inc
mov
pop
orb
mov
test
imulb
adc
out
jmp
xchg
adc
push
xlat
sbb
call
jb
cld
sarl
pop
sbb
ss
call
imul
pop
cmp
sahf
call
sbb
sub
test
push
dec
adc
push
push
push
push
int
jp
addr16
push
das
push
cmp
pusha
jmp
ss
add
lods
nop
fadds
das
adc
xlat
and
cmp
xchg
adc
xchg
xchg
iret
xor
push
adc
pop
mov
imul
pop
sub
stos
xchg
insl
inc
loop
rol
inc
and
jo
mov
sub
pop
mov
rcr
movsb
pop
aas
pop
jmp
hlt
stos
xor
push
mov
xlat
mov
fstpl
clc
outsl
mov
iret
mov
out
sub
or
ss
sbb
xchg
jno
sbb
les
xor
xchg
fs
lods
inc
xor
filds
lcall
cs
dec
sub
mov
push
cmp
pop
xlat
pop
incb
push
pop
icebp
repz
pop
add
cmpsb
lods
pop
je,pt
lahf
pop
sub
xlat
stos
lret
jae
mov
insl
and
notb
jge
fsubr
push
dec
cmp
cmp
pop
push
notb
pop
cmp
add
push
dec
push
cmp
sahf
cli
fsubs
shll
pop
dec
shl
jp
push
push
jne
mov
fildll
mov
notb
scas
push
pop
insl
test
push
stos
dec
sbb
cmpsb
repnz
jmp
mov
sub
test
je
aaa
push
lds
pop
sub
xchg
pop
lret
xor
lods
add
repnz
cwtl
jp
sub
mov
cmp
mov
addr16
out
pop
pop
out
push
sbb
mov
cmp
adc
sbb
pop
adc
movsl
fists
adc
mov
dec
push
mov
sbb
xlat
add
bnd
lock
rcll
div
popa
js
mov
ds
gs
jae
iret
or
aam
leave
in
ret
shl
inc
addr16
sbb
sbb
ljmp
and
mov
cmpsl
repnz
out
mov
fldenv
pop
mov
mov
fsts
and
imul
pop
mov
ja
xchg
xchg
pop
lahf
dec
fiadds
pop
sbb
fisubrl
jl
out
shll
aaa
dec
fsts
insb
mov
mov
pop
push
jle
push
pop
add
pop
mov
xor
xlat
xchg
dec
fwait
pop
mov
mov
inc
in
inc
mov
pop
int3
xor
xor
mov
cwtl
in
jno
push
push
rcrb
mov
insb
cmp
mov
call
imul
and
add
sub
insb
cmp
daa
or
jns
pop
sbb
rcrb
xchg
pop
add
sbb
mov
mov
pop
cmpsl
aas
pop
mov
sbb
push
rcrb
push
sbb
cmp
push
pop
loopne
push
push
std
xchg
in
pop
xor
xchg
adc
roll
and
das
imul
sbb
jmp
cmp
cmp
jnp
into
cmp
pop
mov
es
lock
shll
sub
pushf
sbb
add
pop
dec
sub
or
or
stos
dec
xlat
adc
das
xor
push
out
inc
sub
iret
add
fcmovnb
cmp
ss
push
loopne
aad
out
xchg
push
jge
mov
sbb
pop
jecxz
outsl
scas
rol
push
xchg
sbb
mov
imul
push
pop
pop
and
jle
pop
scas
mov
pop
fstps
faddl
add
pop
loopne
ret
lods
nop
or
and
fdivrs
les
ss
fs
ret
ret
aad
cmc
in
pop
sbb
fidivrs
sub
insl
mov
loopne
mov
std
and
shll
sbb
mov
jnp
enter
mov
and
les
addr16
ret
aad
mov
jnp
jnp
negl
addb
dec
sub
fsubrl
sub
fnstenv
and
fcoms
scas
sbb
xor
pop
mov
fdivrp
stos
aaa
pop
cmp
cmp
jmp
bnd
clc
ljmp
xchg
add
ss
dec
lahf
das
sarl
out
outsl
js
lcall
cmpsb
cmc
sbb
pop
pop
mov
les
arpl
sub
or
das
push
or
mov
aaa
fists
mov
push
nop
fstps
mov
jl
repz
mov
push
test
out
xor
rcll
aaa
jb
mov
pushf
inc
aad
and
mov
fwait
mov
or
inc
in
cmp
aas
cmpsl
xlat
sbb
adc
rcrb
mov
inc
sub
jle
and
pop
lods
xchg
mov
add
sub
sahf
sub
jne
xor
add
pop
xchg
rcl
pop
ficoms
outsb
sub
aaa
addb
xor
pop
outsl
rorl
and
inc
lea
mov
mov
jp
pop
mov
dec
and
imul
mov
adc
xchg
cmp
out
aaa
jne
push
xlat
test
xor
fisttps
cmp
or
mov
nop
adc
inc
jecxz
xor
jnp
inc
sti
push
push
insb
mov
mov
repnz
adc
mov
int
push
rcrl
xchg
insl
sub
mov
mov
aad
sub
sti
out
sub
aam
imul
mov
cmp
sub
iret
cs
pop
dec
xchg
out
cmpsl
rcll
imul
outsl
fbstp
loop,pt
pop
xor
push
cld
stos
sbb
pushf
push
mov
dec
scas
xor
int3
outsl
lcall
int3
aas
arpl
scas
repnz
idivl
gs
cs
sbb
pop
mov
das
nop
sbb
cli
mov
sbb
xor
lahf
xor
pop
lea
xchg
cmp
pop
sub
sub
mov
mov
lods
inc
enter
pop
and
cmp
adc
pop
sbb
out
into
mul
lock
pop
insb
mov
mov
adc
in
push
or
inc
dec
push
aas
test
addr16
call
and
gs
lock
xchg
sub
dec
dec
scas
mov
fisubs
jg
test
adc
imul
daa
in
xchg
mov
notl
outsb
inc
filds
pop
mov
je
inc
roll
loop
inc
mov
adc
pop
cs
pop
pop
cld
sahf
push
insb
gs
push
cmp
outsl
clc
rcl
nop
shrl
xorb
adc
out
rcrb
dec
js
out
push
movsl
push
jb
js
lret
imul
sarb
fcomp
rcr
xlat
imul
bound
xchg
jg
scas
fldenv
into
imulb
xchg
add
sbb
pop
mov
imul
cmc
out
pop
repnz
clc
xlat
mov
pop
sbb
mov
out
out
sbb
sbb
sbb
dec
xchg
push
loop
xchg
shlb
inc
adc
dec
ss
cmp
xchg
lds
rol
pushl
adcl
pop
sub
xchg
pusha
prefetch
or
loop
sahf
pop
roll
xchg
mov
sub
xchg
jbe
std
add
xchg
and
push
mov
cld
les
sub
jl
dec
leave
aad
imul
adc
jge
fdivl
pop
call
mov
das
pop
loope
pop
nop
aam
bnd
dec
add
iret
in
adc
and
sbb
inc
enter
and
lods
leave
dec
negb
and
insb
xor
mov
imul
mov
and
mov
or
sub
cmp
cwtl
dec
pop
daa
out
push
xchg
sbb
or
adc
push
lea
mov
pop
cmp
pop
loopne
nop
adc
sub
add
push
test
xor
andb
adc
dec
xlat
inc
cmpsl
adc
lea
add
fdivp
in
pop
arpl
mov
mov
mov
cltd
xchg
pop
in
fcoml
inc
adc
mov
mov
push
sbb
sub
packssdw
rcll
dec
and
pop
or
out
push
mov
ja
loope
lret
pop
cmp
mov
aad
movhps
and
push
mov
pop
xchg
inc
add
dec
test
js
std
xor
fs
rolb
pop
rolb
pop
adcl
xchg
push
imul
loope
scas
mov
nop
iret
sbb
fidivrl
cmpsl
mov
mov
hlt
push
icebp
push
add
arpl
das
xchg
push
rcll
aaa
pop
loopne
mov
arpl
roll
xor
sbb
movsl
xlat
pop
pop
push
cld
loop
fstps
xchg
out
fsubl
pop
xchg
loopne
sbb
push
cli
jb
pop
inc
push
push
sbb
dec
out
aam
or
jb
fisubrs
cmp
repnz
je
inc
mov
push
cwtl
cmp
test
mov
or
mov
loope
insb
pop
lret
jmp
mov
xchg
cmp
scas
and
jge
xor
mov
xor
and
cli
ficoms
rcr
shlb
pop
out
inc
out
shll
mov
xchg
inc
adc
inc
inc
dec
jae
mov
into
push
xchg
xor
jnp
sahf
insb
mov
sahf
mov
jb
leave
pop
ror
shrl
out
xchg
xchg
loope
or
xor
adc
jae
in
ja
scas
pop
aam
xor
dec
mov
mov
xchg
pop
divb
shll
jb
rorl
rcrl
cld
ljmp
adc
sbbl
and
in
addr16
adc
pop
flds
test
lock
push
aaa
aas
cmp
addr16
lods
aad
test
rcll
pop
sub
cltd
xchg
int3
imul
repnz
pusha
testl
jb
cs
mov
outsb
xchg
xchg
iret
xchg
dec
mov
dec
xchg
pop
mull
cmp
xchg
cmp
pop
jmp
shrl
or
xor
sbbb
xlat
push
and
pop
arpl
cmp
fmul
loope
popa
xchg
movzwl
xlat
cmp
pop
aas
sub
rcl
jne
aad
fbld
fs
push
mov
xor
adc
fildll
xor
sub
adc
push
mov
lret
mov
and
icebp
pop
sbb
andb
sarb
loop
mov
and
fistl
ficompl
pushf
stc
mov
icebp
cs
jns
mov
push
or
adc
xor
sub
in
in
push
sub
xchg
fistps
push
leave
icebp
inc
mov
ret
frstor
cs
int
adc
sbb
pop
outsl
repnz
pop
inc
dec
movb
js
xchg
pop
mov
add
aaa
inc
pop
cmp
jns
xlat
push
movsb
or
cmpsb
insl
mov
gs
shll
cs
fimuls
add
jae
mov
loop
sbb
jle
push
roll
sbb
sbb
pop
mov
fiaddl
adc
call
push
out
mov
or
add
and
xor
cli
push
push
mov
sbb
xor
andl
mov
mov
pop
sbb
fimull
mov
mov
fisttps
mov
mov
stc
pop
adc
push
sti
inc
mov
mov
push
or
fsubs
push
xlat
mov
popf
jecxz
xor
popf
ja
push
xor
popf
movb
or
inc
sahf
pop
in
repnz
in
jp
pop
jl
iret
aam
adc
dec
fwait
adc
mov
cmp
add
cmpsb
mov
adc
repz
es
and
inc
mov
push
out
fbld
jae
sub
fs
ljmp
dec
xchg
and
dec
sbb
mov
in
out
mov
adc
mov
loopne
dec
inc
addr16
call
jp
sub
stc
clc
pop
jne
bound
push
inc
push
mov
out
push
pop
cli
lcall
iret
lret
bnd
mov
movsl
in
in
aad
insb
sti
or
mulb
jp
mov
fwait
sbbb
adc
jmp
stos
xchg
or
pop
mov
flds
push
xchg
cmpsb
sbb
sbb
mov
push
mov
pop
loopne
cltd
jbe
adc
mov
pop
outsb
and
aad
test
and
cli
fisubrs
dec
jmp
negl
pop
mov
push
jmp
push
test
cmp
inc
les
jl
repnz
addr16
jo
push
lods
xchg
shl
inc
pop
cld
scas
push
rcll
stos
jg
repnz
add
add
fwait
push
adc
stos
push
data16
out
or
sub
sub
dec
add
lods
insl
jns
pop
jnp
out
jo
dec
jnp
xchg
inc
out
mov
pushf
add
mov
negb
push
sub
arpl
adcl
shll
in
aaa
fstl
sub
scas
jb
dec
jmp
mov
xor
into
add
add
cmp
dec
sbb
push
adc
and
and
lds
movsl
sub
stc
ficoml
das
xchg
sbb
test
inc
push
pop
fadds
in
mov
xor
dec
cwtl
out
adc
in
stos
push
in
mov
add
out
pop
fucomi
xor
push
inc
adc
add
mov
inc
fcoml
inc
mov
pushf
pop
scas
nop
dec
sti
js
add
jb
arpl
push
fwait
inc
dec
inc
mov
fadds
inc
pop
mov
loop
seta
xlat
inc
pop
scas
sahf
pop
push
adc
rorl
add
inc
mov
or
add
fucomi
pushf
xchg
cmpsl
fsts
cwtl
scas
popf
movl
aam
mov
push
inc
ret
nop
mov
and
mov
xchg
mov
pop
scas
lahf
in
xchg
and
in
outsl
sbb
call
mov
adc
push
imul
repnz
fcomi
sbb
cmp
adc
jnp
rcrl
cli
push
fstpl
xchg
push
pop
loope
repnz
fstps
mov
mov
mov
cmpl
gs
pusha
pop
pop
aam
pop
jmp
and
mov
push
out
adc
xchg
jp
inc
mov
ret
repnz
outsl
frstor
mov
xchg
xorl
icebp
mov
insb
aad
addr16
lds
out
xor
js
sbb
orl
rol
adc
pop
xchg
inc
add
aam
jle
pushf
out
inc
ret
pop
jge,pt
dec
add
movsb
jge
sbb
pop
dec
push
xor
push
leave
sbb
cmpsl
pop
es
sbb
mov
aad
cmpsl
fst
xlat
or
rorb
xor
test
jmp
push
mov
cmp
push
ret
inc
repnz
jg
ljmp
je
inc
pushf
test
jle
sbb
xchg
pop
lahf
call
and
sbb
sbb
mov
mov
rcr
xchg
and
jnp
pop
clc
daa
dec
sub
ret
mov
push
mov
push
fcomps
pop
dec
fistl
or
out
xor
lock
inc
mov
jbe
xchg
test
jl
adc
cmp
mov
imul
decb
cmp
adc
or
lds
inc
pop
cmp
lahf
fmull
cmp
adc
xchg
enter
repz
cs
inc
adc
lods
mov
dec
sbb
aaa
xor
sbb
shll
mov
xor
fisttpl
outsl
lock
mov
xchg
adc
pusha
test
clc
and
xchg
orl
sti
ds
add
out
push
pop
sbb
add
lock
pop
jge
mov
stos
mov
mov
mov
lods
xor
repz
push
inc
out
pop
out
es
cmp
pop
jmp
sbb
inc
ret
fs
cmpsl
and
adc
push
cmp
ja
cs
pusha
or
push
and
mov
mov
push
mov
ret
cld
cmp
mov
mov
push
pop
daa
loope
in
sarb
push
pusha
loope
adc
push
jae
scas
cmpsl
xor
adc
ret
sbb
divl
mov
and
fsts
pushf
push
aas
fldt
pop
pop
sbb
inc
dec
ret
xchg
out
cmp
mov
fistps
ret
inc
shll
jmp
pop
outsl
icebp
push
pop
in
arpl
bound
push
mov
cmp
lcall
xor
pop
cwtl
xor
inc
sbb
arpl
jecxz
xchg
adc
mov
rcl
sbb
inc
mov
divb
pop
pop
pop
call
jecxz
jb
push
fwait
daa
imul
out
sbb
in
pop
sbb
lret
fisubs
push
mov
cmpsb
aas
xchg
sbb
pop
mov
fstl
lret
into
icebp
xlat
pop
dec
nop
sbb
xor
cld
pushf
sbb
push
fstpl
pop
hlt
mov
gs
dec
sbbl
inc
mov
ficoml
push
pop
out
jp
aad
adc
inc
xor
scas
xchg
in
fcmovbe
cmp
add
sub
fnclex
sub
cmp
push
das
push
adcl
fstpl
gs
push
or
daa
test
pop
sbb
dec
mov
inc
cmp
add
out
adc
mov
iret
aas
and
scas
mov
iret
hlt
push
insb
aas
and
lock
xor
loop
pop
mov
jp
xor
shrl
mov
sti
in
pop
xchg
pop
inc
sarb
pop
mov
outsl
out
xor
mov
fnstenv
outsl
sbb
pop
push
dec
add
jmp
jmp
loop
sub
ss
push
lds
out
push
sub
filds
pop
inc
xchg
cmp
pop
dec
lahf
mov
imul
push
pop
rolb
sub
or
add
dec
mov
fistl
xchg
sub
mov
xchg
sbb
mov
mov
sbbb
aas
cmp
faddl
lods
pop
inc
test
stos
pop
outsl
fs
lods
pop
das
fildll
pop
or
mov
mov
mov
lret
sbb
adc
adc
hlt
jmp
fistpll
push
lock
jb
mov
mov
icebp
iret
fistpl
pop
sbbl
int3
insb
pop
cmpsb
ja
sub
sbb
imul
jnp
sub
push
mov
in
pop
aam
mov
or
push
mov
pop
fcomp
aas
jp
dec
add
cwtl
pop
aad
gs
sahf
pop
sbb
es
xor
xchg
mov
gs
mov
inc
pop
cwtl
fxch
xor
add
stc
ss
adc
aad
mov
inc
gs
cmpsb
inc
movsb
xor
pop
in
and
sbb
push
sti
sub
jp
add
sbb
cmp
xor
inc
aad
ss
push
cwtl
and
daa
cmp
sti
into
addr16
push
repnz
shl
inc
inc
add
cmp
mov
pop
mov
aad
push
or
aam
addl
mov
je
out
mov
movntq
cmp
scas
outsl
sar
inc
mov
jecxz
cwtl
push
sub
sub
cld
adc
mov
mov
shl
dec
and
push
stc
call
shll
lret
sbb
pop
mov
xorl
push
pop
lret
pop
inc
int
call
jnp
jl
js
inc
repnz
in
inc
dec
or
add
bound
sbb
sbb
jmp
jnp
in
cwtl
or
pusha
sub
popa
sbb
adc
adc
adc
out
sbb
out
shrl
xchg
sub
xchg
and
mov
in
in
xor
movsl
adc
mov
scas
fistl
dec
lahf
leave
fs
cwtl
xor
xchg
mov
and
sahf
enter
sete
sarl
cwtl
ljmp
sub
pushf
das
jnp
dec
sbb
push
jmp
mov
les
push
inc
pop
mov
xor
stos
iret
adc
pop
hlt
lahf
aad
das
lahf
mov
jmp
sub
xchg
cmpsb
addr16
inc
or
call
sbb
cli
stos
sub
insb
cmpsb
negl
sub
outsl
loope
xchg
movsl
cli
daa
fstp
fmuls
cmpsl
adc
xchg
pop
pop
and
xchg
lahf
jecxz
icebp
pop
ds
or
jbe
add
aad
pop
ljmp
cmpsl
xchg
sub
gs
pop
add
rorb
sbb
js
scas
daa
sti
inc
adc
int3
push
aas
xchg
pop
pop
ja
daa
aad
pop
fsubs
jp
andb
pop
dec
rolb
mov
out
std
xchg
inc
pop
sub
mov
sbb
dec
push
sub
shl
dec
and
insl
ja
fxch
add
xchg
dec
fsts
mov
jnp
in
hlt
shll
rep
jle
xor
xchg
sti
jne
cmp
ja
jecxz
addl
pop
shll
mov
add
jl
addr16
push
mov
sub
sub
pop
sub
jl
add
aad
cmpsb
pop
push
shr
push
daa
mov
sub
push
out
sti
dec
adcb
iret
shrl
sub
inc
call
addr16
imul
enter
mov
pushw
or
inc
bound
jb
icebp
aaa
or
hlt
push
mov
mov
fwait
dec
stos
imul
fcompl
test
cmpl
jle
cmpl
inc
movsl
mulb
movhps
xchg
push
jecxz
aaa
push
out
rol
xchg
dec
dec
leave
mov
lahf
call
rclb
lret
test
pop
sbb
orb
fwait
loope
fcmovb
dec
jl
ret
xor
adc
lea
xor
stos
pop
sub
rclb
mov
jns
jno
push
mov
stos
pop
repnz
cmp
cmp
mov
cmp
mov
inc
addr16
add
loopne
and
sub
je
adc
push
mov
or
out
das
push
pop
sub
fdiv
movb
das
mov
add
pusha
fwait
push
cmpsl
and
push
je
subb
ret
fildl
icebp
nop
xlat
jecxz
lods
rclb
int
jmp
pop
and
shrb
or
sbb
sbb
adc
sbb
shrb
stos
sbbl
sbbb
hlt
out
inc
mov
mov
pushf
pop
or
lret
and
js
push
jg
adc
push
adc
and
lods
cmpsb
ret
popf
lods
movsb
sub
or
fcmovnu
rcrl
rcrl
and
dec
jo
cld
aad
das
lahf
addr16
xor
and
mov
cwtl
xor
xchg
gs
addb
iret
pop
lahf
push
inc
outsb
pusha
lahf
pop
jg
pop
lcall
ret
call
pushf
add
bt
stc
cmp
movzwl
cmc
movsbl
adc
mov
bt
test
jmp
rclb
shrb
pop
enter
jb
inc
flds
inc
pop
aad
rcrb
sub
push
inc
fst
dec
out
mov
push
enter
pop
push
push
fidivrs
jne
js
or
mov
cmp
test
int3
inc
scas
mov
xor
pop
scas
faddl
mov
nop
jecxz
es
bound
mov
push
sbb
std
jno
mov
imul
fs
mov
insb
gs
cmpsl
cmp
xchg
outsb
jecxz
nop
or
mov
aas
ret
sti
addr16
aas
adc
mov
or
lds
push
jns
out
inc
push
and
adc
cld
vpsraw
loope
sbb
cmp
sub
dec
jle
or
mov
dec
std
fidivl
adc
std
repz
idivb
jns
or
mov
loopne
das
mov
nop
mov
add
jb
jle
or
je
dec
std
insl
cmp
arpl
outsl
aam
sbbb
fsubrl
shll
das
xor
test
lods
mov
and
sub
cmp
cld
jbe
xchg
mov
pop
call
dec
adc
dec
jecxz
jecxz
hlt
pop
pop
add
addb
aad
push
adc
cmc
xor
pop
push
fimuls
push
pop
mov
dec
xor
pop
push
add
imul
aas
dec
push
sbb
jb
add
movsl
push
mov
stos
inc
movsl
mov
or
repz
call
sbb
clc
mov
aam
out
sub
or
add
fadd
mov
xchg
mov
and
and
int
cmpsb
adc
imul
sub
call
lcall
mov
insl
jo
int
inc
inc
sub
adc
fsubl
push
ret
ljmp
cmp
cmpsl
std
in
bound
cmp
arpl
test
xchg
push
mov
jns
cmp
xor
daa
xchg
add
lods
and
call
icebp
ror
mov
sub
mov
imul
mov
stos
mov
and
sti
mov
faddp
popa
dec
sysret
or
jmp
mov
inc
dec
shrl
mov
lods
fstl
shlb
xor
pop
cmp
pop
sub
add
mov
jnp
pusha
test
movsb
sub
jle
fs
mov
mov
pop
adc
adc
dec
jl
lret
dec
les
imul
jle
int
inc
mov
outsb
data16
push
enter
flds
mov
mov
fistl
add
push
outsb
sbb
outsl
or
lret
icebp
or
imul
mov
mov
sub
in
cmpsb
pop
dec
inc
out
xor
js
adc
mov
out
pushf
adc
shrb
push
insl
pop
inc
xchg
out
push
mov
mov
inc
dec
pop
ret
rcrb
outsb
push
lcall
mov
jae
jne
or
ficoml
inc
and
sub
scas
and
cmpsl
jb
jb
out
popf
xchg
adc
push
sbb
pop
inc
mov
aam
movsl
shl
or
adc
out
leave
rorl
in
icebp
mov
xor
ret
dec
sub
sbb
adc
dec
xlat
test
mov
outsb
dec
dec
cwtl
ljmp
fildl
inc
dec
into
hlt
jge
xor
stc
addr16
scas
lods
stos
loop
movsl
mov
ss
movsl
xor
or
negb
aad
js
cmp
cltd
add
in
and
cmp
mov
pop
sub
rorb
mov
jge
mov
cwtl
jae
pop
push
sub
jne
pop
xor
xchg
in
test
mov
push
add
adcb
into
rcr
jge
and
mov
xchg
and
and
loope
fcmove
inc
jecxz
cmp
mov
scas
sysret
or
das
lods
and
add
jl
cmp
pop
inc
pop
jle
or
or
test
xor
and
inc
mov
xor
add
add
jne
jns
add
enter
pop
cmpsl
lods
les
shlb
adc
mov
lret
sbb
xor
and
xchg
or
jg
data16
and
xchg
sahf
xchg
ljmp
jle
push
cs
mov
push
dec
pop
inc
pop
mov
ret
pop
push
push
pop
fs
mov
mov
bound
loop,pn
daa
jbe
shll
bound
add
or
inc
xchg
mov
out
loope
cwtl
gs
repz
pop
jmp
loop
xor
lahf
out
popf
pop
outsb
push
ss
push
push
inc
lret
outsl
in
test
insb
push
jl,pt
cmc
std
idivl
sbb
push
push
into
xchg
dec
push
mov
imul
lret
movsb
jp
idiv
lea
mov
mov
out
hlt
incb
cmp
scas
or
mov
inc
push
into
popf
iret
imulb
insl
dec
jge
lods
and
adc
push
mov
orl
inc
dec
mov
cmc
inc
adc
mov
cli
jo
popw
push
lcall
ja
sarb
inc
pop
push
push
pop
push
pop
lea
xchg
mov
jo
or
insb
out
xor
mov
stos
insl
xchg
fsubl
xor
sbb
lods
mov
mov
push
fsts
mov
lods
movsl
int3
fs
incl
clc
repnz
jno
loopne
pop
stos
adc
push
xor
push
test
gs
pop
shlb
mov
mov
in
out
xor
rolb
rorb
sbb
sbb
stos
lea
inc
push
dec
fdiv
aaa
push
and
in
adcl
jecxz
mov
clc
rcrl
cs
mov
mov
fcmove
rcr
push
xor
adc
adcb
sub
inc
inc
push
dec
push
pop
xlat
xchg
popf
sub
loope
insl
fs
stos
fnstcw
xchg
mov
in
daa
cmp
mov
ss
push
pop
or
adc
mov
fldt
imul
shll
orl
or
xchg
xor
mov
jae
jp
pop
pop
outsw
adc
xlat
rcrl
stos
push
pop
or
pop
or
push
fbld
cmpsl
mov
mov
pop
push
in
mov
cli
mov
out
bound
add
pusha
push
es
adc
push
xor
aad
aad
idiv
mov
js
mov
dec
inc
das
fucomi
repz
ret
cmp
push
lods
xor
ds
xchg
sbb
mov
jmp
xchg
pop
bound
in
ror
leave
leave
mov
jne
addr16
ja
sti
xchg
xor
loope
cmpb
cmp
fsubl
xchg
jl
out
sbb
mov
inc
cmp
clc
lock
mov
xor
sahf
outsb
pop
push
std
pop
aas
aam
jmp
adc
add
lea
rcl
ret
pop
rcl
sub
pushf
aam
es
lea
ds
xor
inc
dec
xchg
add
push
push
dec
add
in
or
push
dec
sbb
ja
jb
test
or
add
xor
push
les
cmc
lahf
and
popa
sbb
mov
iret
fildll
mov
jb
xor
js
into
pop
inc
mov
push
outsb
icebp
pop
cmpsb
jecxz,pt
repz
push
in
push
push
sbb
into
lods
stos
pushf
mov
lcall
cmp
int3
dec
icebp
pop
lds
stos
lret
jg
cs
cmp
cmpsb
test
cmpb
add
out
cmp
mov
outsl
adc
test
loopne
in
mov
sbb
push
iret
inc
loop
mov
cs
dec
lock
push
gs
fistl
lods
js
mov
pushf
lcall
stc
scas
xor
lret
push
fcmovnb
jl
pop
pop
push
aas
ret
mov
out
mov
or
clc
rcrb
inc
mov
mov
jecxz
stos
ja
inc
dec
aas
ret
jmp
test
jg
popf
test
stc
jne
xchg
xorb
xchg
jmp
adc
cmp
mov
in
sub
scas
and
das
xor
imul
lods
cmpsb
scas
cmp
cmp
imul
xchg
jecxz
rcl
sti
loop
xchg
pop
bound
pop
pop
aad
jp
sub
scas
std
pushf
pop
add
pop
push
hlt
movaps
adc
cmpsl
sub
or
mov
add
adc
push
mov
test
mov
aas
outsl
mov
push
pop
mov
or
cmp
inc
mov
xchg
mov
xchg
fucomip
testl
insl
scas
push
pop
out
dec
pop
push
lock
leave
mov
cmpsl
iret
das
jp
stc
addr16
inc
arpl
cs
push
cmp
test
jle
fnsave
repz
cmp
or
add
pushf
xor
cmc
std
in
in
push
ss
loopne
inc
xor
filds
xor
mov
dec
fcomps
and
lds
and
and
popl
inc
ret
jo
xor
pop
mov
mov
popa
pop
xlat
pop
jp
pop
pop
push
push
scas
aad
add
jl
sbb
sbb
out
xchg
in
xor
fdivrl
xchg
sbb
push
mov
xchg
fs
sti
test
ret
aad
cld
out
push
push
pushf
mov
inc
xchg
clc
rcrl
mov
daa
adc
gs
adc
fs
xchg
lahf
into
inc
aam
insb
cmp
xor
xor
xor
int3
mov
lret
jge
loopne
daa
sub
and
pop
push
lods
add
jge
in
jno
mov
incb
aam
inc
mov
mov
inc
fistpl
icebp
rcr
mov
cmp
shlb
ss
fs
jb
repnz
orb
addr16
ja
jg
xchg
fcoml
jg
sahf
jle
dec
pop
into
and
xchg
imul
bound
xchg
cmp
lahf
sbb
fidivs
addr16
inc
dec
xlat
pop
mov
pop
sub
orb
pop
lea
aam
xor
insl
repz
xchg
pop
gs
push
ja
push
jno
mov
pop
push
xor
lea
jbe
xor
pop
push
int3
ret
das
addr16
dec
jl
insb
push
mov
push
ret
stos
mov
and
and
jp
out
stc
jne
insl
and
pop
push
cli
lret
insb
imull
daa
sub
mov
and
sbb
cmp
jge
cld
mov
xor
jbe
je
mov
enter
push
insl
cltd
in
xor
dec
sub
sbb
or
enter
sub
pop
ret
push
mov
adc
mov
movsl
gs
pop
fcmovne
push
fstp
ret
xor
pop
jecxz
or
clc
ret
mov
lret
in
xchg
repz
lret
dec
cwtl
ret
int
daa
out
adc
ja
js
ds
loop
repnz
int
cld
les
fisubl
or
mov
lret
adc
mov
hlt
cwtl
push
lods
dec
in
in
jb
loope
cmp
or
mov
mov
negl
jg
xchg
ja
pop
dec
dec
ret
ds
mov
ror
movsl
mov
mov
cmp
xchg
pushf
lcall
xor
sbb
jae
test
leave
inc
inc
mov
sub
mov
cmp
iret
neg
mov
mov
dec
rcll
xor
lds
test
jnp
mov
leave
cmp
repnz
pop
call
mov
dec
ds
push
ss
call
repnz
repz
in
gs
or
aad
fs
call
pusha
push
mov
push
movw
pushl
mov
lea
jmp
dec
push
push
inc
push
xor
fs
insb
add
cmp
add
mov
pusha
mov
pushl
ret
ror
mov
pushf
pushf
clc
cmpb
call
neg
cmc
pushf
jmp
pushf
call
mov
or
pop
stc
sbb
test
adc
or
mov
jg
jmp
and
mov
test
xor
fdivs
jo
pop
or
fs
fwait
mov
pushl
sbb
sub
push
add
ret
out
jb
push
cwtl
adcl
and
lds
int
xchg
mov
mov
jp
or
xchg
push
fdiv
lahf
lahf
push
lahf
jmp
into
in
repz
xchg
test
lret
loopne
bound
bound
cld
addr16
imul
test
and
cmp
ret
sub
aad
or
pop
fdivrp
push
dec
pop
pop
adc
inc
in
js
and
mov
cmp
and
fsubr
insl
hlt
jp
cli
jbe
lock
push
jg
incb
or
subb
add
bt
push
stc
cmp
pusha
pusha
jmp
pop
push
push
lea
ja
push
push
pushl
lea
jb
pushf
pusha
pushl
call
pushl
lea
jb
cmp
cmp
pusha
pushf
lea
jae
shld
mov
movsbw
ror
rcr
shl
mov
btr
neg
movsbw
rcl
mov
cmp
pushf
pusha
cmc
xor
pushf
repnz
jmp
movb
lea
call
pusha
call
fsubr
addr16
mov
fmul
push
into
push
dec
lret
aam
cmpsb
ficoms
sub
add
pop
pop
xchg
js
dec
inc
pop
pop
lods
mov
xchg
mov
fsubp
lods
daa
out
test
fwait
jecxz
addr16
out
rolb
testb
loop
pushl
pop
push
jne
ret
imul
bnd
ss
adc
add
popl
mov
mov
mov
push
inc
mov
movl
out
mov
shr
mov
neg
add
jmp
inc
push
lret
push
pop
jmp
mov
mov
mov
fnsave
data16
xchg
rcl
mov
ss
int
ffree
dec
inc
dec
dec
mov
test
call
sbb
jle
push
xchg
xchg
adc
xchg
pop
dec
fmul
fs
push
lods
ss
lahf
dec
dec
movsb
pop
dec
lds
scas
imul
jae
xchg
ljmp
push
aam
dec
inc
push
mov
mov
incl
jge
ljmp
je
outsb
jno
pop
das
test
pusha
push
push
adcl
bt
jmp
and
mov
cwtl
enter
adc
cmp
cmp
xor
cmp
mov
ret
subl
add
sahf
test
and
and
fadds
pop
les
push
je
shr
into
out
fwait
rolb
lods
sbb
push
add
adc
int
adc
movsb
and
mov
and
sub
lock
mov
ret
mov
adc
xchg
or
xchg
or
sub
sub
sbb
out
pop
xor
stc
mov
adc
lds
dec
shl
jae
rcrb
or
fwait
dec
jmp
je
push
xchg
fscale
jg
ss
mul
fcoml
cmp
ds
mov
add
pop
daa
pop
aam
push
pop
push
faddl
dec
adcl
lea
je
push
cmp
mov
lea
je
pusha
movl
mov
lea
jmp
push
jmp
shld
push
btc
sub
and
sar
mov
aaa
neg
aad
sub
pusha
shld
bswap
mov
btc
pushf
mov
shrd
aad
clc
movzbw
mov
inc
mov
shl
or
jmp
popf
sbb
fwait
out
dec
adc
fnstsw
cs
mov
mov
inc
mov
xor
push
sub
roll
mov
and
loope
je
push
jmp
jnp
in
lock
inc
in
loopne
in
pop
xchg
mov
adc
pop
sbb
xchg
xchg
adc
jl
push
scas
xchg
mov
ds
jp
ljmp
jb
jo
jne
push
inc
popa
xchg
add
xchg
mov
popf
pop
fwait
adc
pop
pushf
gs
xor
and
stos
and
iret
inc
jle
out
push
jge
push
inc
call
mov
cmpsl
fiadds
inc
pusha
pusha
pushf
lea
jbe
call
push
adc
pushf
lea
jae
push
call
jl
icebp
in
popa
or
cltd
push
or
cli
loopne
jecxz
out
pusha
jle
sti
xchg
stc
mov
je
push
leave
orl
cld
cmp
outsl
jns
fstpt
sub
into
xchg
movsw
popa
jae
in
push
dec
pop
pop
mov
adcb
xorb
jno
push
out
in
dec
push
shll
push
xchg
je
mov
loope
mov
loopne
cmp
or
test
add
sbbb
adcl
inc
lea
pusha
lea
call
jmp
call
pushf
lea
jne
call
pusha
push
cmpb
pushf
lea
jne
cmp
test
mov
clc
add
test
bt
movzwl
mov
neg
ror
neg
mov
pusha
movb
pushl
cmc
add
pusha
pushl
test
movw
mov
pushf
cmc
test
pushf
call
mov
xor
mov
add
lret
push
dec
push
lret
and
sarb
mov
and
jo
js
jnp
mov
jo
pusha
dec
and
movsl
daa
mov
lods
in
cmpsb
xchg
mov
scas
add
add
jecxz
mov
add
xlat
daa
mov
or
jecxz
lock
add
sbb
inc
enter
scas
insl
jge
and
hlt
sbb
leave
dec
in
add
adc
jae
mov
cmpsb
cmpsb
das
movsb
sub
pop
or
jmp
repz
roll
mov
pop
popf
add
test
jb
shll
imul
mov
and
xor
sub
cmp
cwtl
dec
lea
scas
popa
cmp
mov
adc
das
xor
dec
inc
aas
dec
inc
test
test
mov
or
mov
pushf
movsb
pop
adc
xchg
push
popf
or
pop
mov
loop
mov
adc
aas
insb
pop
in
imul
or
xor
dec
enter
inc
push
dec
lds
dec
push
dec
iret
inc
dec
inc
mov
icebp
insl
xor
cmp
lret
inc
leave
and
insl
jb
xchg
xor
out
popa
fwait
adcl
pushf
jmp
clc
clc
not
clc
cmc
rol
cmc
cmp
jmp
aam
pop
les
cli
push
dec
xlat
dec
push
dec
ror
push
fstl
push
ffreep
push
cmp
icebp
out
mov
fcmovnbe
cmp
or
jge
lahf
js
xchg
push
fstpt
loope
lcall
or
arpl
xor
jb
cmp
bound
xor
aas
push
cmpsl
jae
mov
addl
mov
or
adcl
pushf
pusha
pushf
stos
pushl
lea
jmp
pusha
stc
jmp
movl
lea
call
cmc
cmp
pusha
mov
jmp
pushf
call
xor
lea
mov
stc
add
cmp
pushf
movzwl
inc
shrd
shr
mov
pushf
pusha
add
push
mov
push
test
call
push
push
inc
push
xor
cs
insb
add
popa
stos
lcall
and
inc
clc
sbb
setno
xchg
cmp
or
mov
mov
mov
push
outsb
pop
idiv
mov
xor
rorl
leave
popf
adc
inc
pop
jecxz
outsl
arpl
push
dec
inc
pop
hlt
out
loopne
jbe
and
dec
sub
inc
leave
cmp
xor
psllq
cmp
out
arpl
loop
or
scas
aaa
mov
and
sub
adcl
setne
mov
mov
push
xadd
push
bswap
ror
push
shrd
xor
cmc
push
bswap
clc
mov
mov
mov
bsr
bswap
bts
mov
call
adc
outsl
lahf
push
inc
pushl
xchg
mov
adc
adc
sbb
stos
movsb
xlat
cmp
out
or
inc
out
push
dec
dec
daa
or
jo
lock
stc
sub
leave
pop
dec
movsb
xlat
popa
ja
jbe
out
cmpsl
inc
data16
inc
pop
push
push
push
test
push
or
fwait
push
movl
push
pushl
push
pushf
lea
jmp
add
dec
je
jo
outsb
fs
gs
gs
inc
add
mov
dec
sub
rcl
mov
push
add
cmc
mov
cmp
test
pushf
lea
je
pushf
test
add
push
jmp
call
call
addb
cmpb
and
movsb
mov
aas
mov
xor
xor
cmp
sahf
mov
cli
rorl
and
sub
fsubl
rorb
ja
dec
inc
iret
inc
dec
cmpsb
sub
dec
loopne
sub
lret
xor
sbbl
popa
sbb
adcl
fmul
aam
inc
and
jg
and
rorb
mov
dec
aad
cmp
faddl
sbb
and
cmp
addb
pop
push
mov
hlt
pop
bound
repz
jl
mov
and
and
cmp
adc
mov
movsb
ss
cmc
jecxz
push
ja
cmpsl
xor
and
fistpl
xchg
pop
nop
sbb
lahf
xchg
or
sbb
cli
rcl
mov
cmp
pushl
mov
test
cmc
neg
bt
pushl
rol
pushf
stc
not
jmp
mov
pusha
pushf
movl
pushl
lea
jmp
adc
mov
outsb
mov
testb
dec
push
test
sbb
jle
jns
jp
jns
lea
push
je
mov
push
dec
pop
pop
pop
dec
push
cli
cld
mov
mov
xchg
jle
icebp
movsb
xor
cmp
cmc
push
std
adc
clc
orb
adc
push
pop
sub
lret
btc
rcr
mov
bt
jno
and
jmp
add
dec
outsl
popa
fs
imul
add
fsubs
les
stc
cmp
cwtl
jmp
jmp
jecxz
adcl
push
pushl
pop
push
pop
xchg
push
mov
mov
daa
mov
jae
sub
loopne
test
icebp
shr
cmp
sbb
pop
mov
mov
mov
xor
mov
cs
dec
and
dec
jo
js
arpl
push
cld
jle
ss
inc
imul
stos
lock
push
push
sbb
mov
test
and
sbb
cli
dec
push
push
inc
push
push
cs
insb
add
test
incl
add
je
imul
gs
insb
pop
rorb
ret
cwtl
test
sub
test
stos
mov
and
cmpsb
mov
shr
push
xchg
loop
imul
mov
ss
setno
sub
rcrl
pop
push
ficoms
push
pop
push
fldenv
sub
jecxz
outsb
pusha
adc
addr16
jns
cld
out
fs
jg
ljmp
sub
fs
fbstp
dec
xor
fildl
push
mov
mov
clc
push
stos
xchg
outsl
xchg
lods
push
fidivl
movsl
mov
sub
add
push
aad
cld
movsb
cwtl
mov
int3
cmp
shlb
xchg
jp
sub
xchg
cmpsb
lea
add
sub
push
push
inc
pop
pop
or
xor
mov
xor
cmpsl
lods
xlat
adcl
push
push
jmp
push
and
jmp
cmpsl
mov
cmp
mov
push
fistpl
xor
dec
cmpsb
mov
mov
in
add
sub
es
fsts
mov
fisubrs
pop
or
ret
push
or
inc
xor
sbb
jmp
push
sbb
test
mov
push
pop
sbb
mov
dec
fcoml
add
in
aad
jge
dec
xor
add
scas
xlat
fcmovnbe
pop
push
fcoml
push
dec
pop
idiv
adc
lcall
in
and
and
cmpsl
sub
fsubp
repz
push
and
sub
adc
xchg
or
xchg
cli
or
sbb
xor
scas
scas
test
in
xchg
mov
scas
push
sub
mov
mov
aam
lahf
jnp
enter
pop
mov
cmp
push
dec
pop
cld
sbb
out
xor
je
je
xchg
mov
in
ss
test
call
inc
in
sbb
aaa
cmp
cmp
sub
insl
inc
loop
arpl
mov
inc
fadd
ffreep
pop
pop
inc
int3
inc
dec
dec
push
push
sbb
fdivrl
mov
push
fwait
lea
pop
push
xor
push
xchg
sbb
sti
fmull
popa
mov
jp
adc
xor
xchg
arpl
addr16
test
movsb
and
sar
pop
xchg
scas
ss
mov
and
lods
cmpsb
test
adcl
pushf
pushl
movl
pushl
movl
pushf
pushf
pushf
movb
lea
jmp
push
pushf
movb
lea
jne
pusha
jmp
jmp
stc
or
push
lea
je
aas
sub
das
call
lahf
jp
xchg
pushf
sbb
push
mov
aas
and
popf
pop
rcrb
lods
in
mov
cmp
mov
push
insb
or
fisttps
testl
es
aad
stos
stos
mov
add
push
push
inc
dec
push
jae
inc
dec
mov
push
xchg
jae
xor
xlat
fisttpll
dec
inc
fisubrl
adc
call
adc
cld
movsbw
pop
movzbw
xchg
lea
call
mov
sub
sarb
into
sub
pop
test
add
sbbl
xor
cmp
out
dec
mov
subl
push
push
fsubrl
lods
mov
loope
jl
gs
scas
and
lret
cmc
repz
jmp
mov
pop
rcl
ret
dec
repnz
jle
inc
cmc
cmc
mov
test
push
push
sbb
push
sbb
jg
test
in
dec
cli
or
xor
dec
jl
mov
mov
mov
jne
inc
lret
movsl
adc
enter
cmp
dec
popa
ror
push
or
icebp
cli
imul
pop
lea
pop
pop
add
xchg
pushf
mov
xor
xor
adc
xchg
mov
addr16
sub
dec
pop
inc
lods
pop
inc
fildl
jbe
data16
out
test
mov
test
xchg
push
nop
movups
sub
mov
jno
mov
mov
push
out
repz
mov
dec
ljmp
cmp
adcl
fistl
add
mov
les
pop
lock
and
mov
sub
add
push
ljmp
dec
or
movl
jl
inc
test
jb
adc
jo
mov
xchg
xchg
lea
loopne
test
dec
mov
jno
xchg
cld
mov
movsb
ss
xchg
xchg
adc
dec
ja
mov
xor
cmpsb
cmpsb
sub
test
push
push
xchg
fs
add
daa
mov
add
and
in
call
mov
pushl
mov
pushf
lea
jmp
mov
pushf
lea
jne
cmp
rcl
mov
test
jmp
rcl
cmpsb
fimuls
outsb
inc
das
ffreep
test
inc
pop
ret
fcom
fdivs
sub
cmpsl
push
xor
stos
pusha
jbe
jne
dec
sti
inc
inc
cmpsl
iret
addr16
iret
xchg
fdiv
jo
xor
push
jb
cmpsb
push
xchg
sbb
clc
mov
push
xor
adc
mov
sbb
cmp
pop
pop
push
xchg
adc
xchg
adc
push
pop
xchg
sahf
xchg
call
push
adcl
sub
lea
jge
jb
jmp
or
sbb
loopne
lds
pop
sahf
push
lea
or
dec
lods
cmp
add
push
or
mov
loopne
je
push
mov
rcrl
dec
fldcw
pop
push
mov
cli
movsb
ss
daa
xor
dec
inc
bsr
insb
into
ror
lret
inc
cmp
fnop
pop
xlat
faddl
lea
jae
shld
pusha
shl
mov
pop
bswap
stc
mov
or
mov
test
cmc
sub
pusha
test
test
repnz
mov
lea
jne
shl
bsf
mov
pushf
pushl
stc
sub
push
pusha
pushf
lea
jmp
pushf
lea
jae
pushf
pusha
jmp
jmp
imul
sub
dec
sub
ficoms
adc
cli
test
les
sub
xor
xor
pop
dec
lds
sub
jmp
and
mov
inc
cmp
and
out
out
pop
dec
loop
je
dec
shl
lahf
xchg
jge
insl
into
xchg
lcall
and
and
and
add
lea
call
pushf
pushf
mov
lea
jae
dec
pushf
push
mov
dec
not
not
inc
pushf
mov
lea
push
push
lea
call
call
aad
mov
push
outsb
adc
fcmovnb
fiadds
adc
jecxz
movsl
push
xor
stc
xor
ds
xorb
icebp
push
pop
test
lds
fildl
cs
fwait
in
in
cli
lock
sbbl
mov
xor
popa
aad
ds
cmp
add
cmpsb
les
pusha
push
add
ret
and
pop
push
pop
push
sub
inc
int
int3
inc
lret
roll
movzbw
lea
lahf
movzbw
pushf
mov
pushf
pushf
lea
ja
pusha
lea
jb
pusha
test
stc
push
cmpb
pushf
jmp
test
test
inc
shl
std
loopne
out
out
jecxz
pusha
sti
in
icebp
dec
add
pop
leave
or
pop
mov
pop
mov
cs
lret
popf
jne
push
out
inc
lea
mov
and
sbb
mov
add
jno
push
int3
fiaddl
dec
dec
call
imul
insl
fcomps
cmp
in
in
sti
cmp
cmp
test
push
xchg
dec
inc
ret
enter
into
ret
mov
lret
push
push
cmc
add
sub
lock
lods
xor
inc
cmpsb
cs
mov
movsl
test
or
inc
test
xchg
mov
push
nop
test
mov
push
fs
sub
ljmp
loopne
data16
mov
cltd
mov
cmp
xchg
mov
cli
pusha
adc
or
add
orb
pushf
pushf
adc
mov
sarl
rorb
and
jb
cmp
stc
push
cmp
jmp
pusha
clc
sub
push
lea
call
pusha
pushf
lea
jae
cmp
bt
bt
test
xor
jmp
pushf
xor
push
cmp
pushf
shr
call
pushf
push
call
cmp
cmp
pusha
movb
lea
jae
call
mov
push
lea
jmp
jmp
and
scas
aaa
dec
ss
push
xchg
mov
mov
ss
dec
adc
cmp
mov
sbb
push
or
adc
rep
and
mov
jae
in
fcmovb
pop
ret
pop
int3
mov
pop
fnsave
ds
xchg
cmp
xchg
xor
adc
xor
gs
sbb
syscall
mov
ficomps
jne
xchg
enter
ja
jo
inc
adc
sbb
dec
inc
dec
mov
or
push
stos
push
movw
lea
jmp
pusha
lea
jb
pusha
pushf
pushl
ret
pushf
call
push
inc
stos
pop
and
jmp
mov
jle
ror
push
enter
dec
sarl
test
and
in
dec
shrb
push
jmp
mul
out
js
mov
mov
mov
push
dec
push
xchg
mov
loop
sbb
jecxz
sub
xor
es
cmpsb
pop
and
push
push
enter
insb
add
push
stos
loop
dec
pop
push
sbb
push
xlat
fidivrl
sbb
inc
xchg
mov
xchg
mov
xchg
or
test
mov
push
pop
dec
mov
sub
xor
lods
imul
push
xchg
scas
jle
movsb
ss
pop
or
and
cld
lock
std
jb
cmc
jg
cld
cmc
adcl
cmp
in
subb
leave
inc
and
sahf
pop
fiaddl
pop
pushf
mov
jp
fs
cld
dec
or
sbb
repz
xor
data16
jg
repnz
ret
mov
push
add
cmp
in
jae
ret
add
inc
jno
and
out
mov
mov
push
sub
pusha
call
lea
call
pusha
call
add
bsf
sub
shr
xchg
bsr
sub
sar
mov
bt
and
add
call
sub
jmp
cmp
shll
mov
and
leave
cwtl
pop
jae
jg
mov
lret
jns
jo
xor
hlt
fidivl
dec
jnp
xor
adc
push
pop
jnp
rorl
aam
fadds
cmpsl
hlt
mov
movsb
lahf
and
pushf
sbb
add
pop
xchg
pushf
pop
sbb
pop
dec
xchg
sub
xchg
pop
cmp
out
out
arpl
push
imul
loope
pop
lret
ss
dec
pop
inc
faddp
fld
test
pop
xlat
lret
inc
jg
pop
imul
rclb
gs
addr16
ss
adc
jns
pop
daa
out
outsb
les
dec
in
int
outsl
xchg
lods
dec
stos
jb
inc
shr
fistpll
pop
dec
jae
and
fistl
aad
iret
push
pop
rcrl
dec
dec
inc
leave
inc
lret
ret
adcl
movb
sub
movb
pusha
lea
jmp
adc
lea
pushf
jmp
lea
jae
movsbw
mov
pusha
movzbw
not
mov
mov
call
mov
bsf
btc
add
sbb
bsf
add
push
dec
bt
cmp
mov
test
test
cmc
pushf
shr
pushf
clc
pushf
bt
cmp
mov
jmp
cmpb
mov
push
mov
pushf
lea
jne
shl
mov
call
mov
inc
mov
mov
mov
xor
in
repnz
out
mov
jno
push
mov
mov
cmp
loopne
loopne
scas
mov
mov
repz
push
xchg
cltd
ss
add
data16
inc
adc
add
cmpsb
push
fisubl
aaa
mov
inc
cmp
test
push
insl
inc
mov
add
test
clc
test
pusha
movzwl
btc
lea
push
pop
mov
cmp
cmc
add
call
xchg
orb
mulb
int3
mov
push
iret
rorl
jns
popa
adc
jmp
std
sbb
mov
xor
dec
fcomps
clc
repnz
orb
test
bound
xchg
xchg
cmp
push
lods
xchg
mov
lret
sub
sub
insb
mov
add
add
push
addr16
inc
pop
shrl
jne
push
movsb
lods
xor
cmp
cmp
cmp
mov
push
outsb
mov
fs
je
jmp
lea
pushf
movl
push
pushf
call
mov
call
cmp
push
call
imul
bt
stc
add
pusha
push
lea
jmp
ja
dec
push
pop
or
ljmp
pop
inc
dec
pop
inc
pop
inc
dec
sub
sub
push
movsb
or
aam
bound
mov
jecxz
pop
imul
add
dec
mov
imul
xlat
push
fistps
addr16
clc
mov
add
pop
test
test
add
popa
ljmp
cs
rcr
fildl
mov
inc
dec
inc
mov
or
push
bt
not
lea
jns
pusha
ror
jmp
clc
in
in
jl
pusha
rolb
jbe
pop
cwtl
pop
scas
and
mov
add
mov
std
std
loope
shl
ret
sbb
cwtl
sbb
sbb
mov
sahf
sbbl
lahf
jo
adc
in
jmp
dec
cmpsb
cltd
cwtl
mov
push
xchg
or
cld
insb
pop
bound
and
movsl
pushf
add
pop
lahf
sbbb
orl
outsl
ds
adc
adc
ss
cmp
cmp
push
mov
movsl
mov
jo
pop
clc
aaa
pop
jmp
in
pop
imul
stos
pusha
jbe
arpl
leave
mov
adc
fwait
xor
adc
push
mov
ficoms
sbb
push
adc
xchg
cmp
adcb
cmp
push
stos
push
mov
jne
in
enter
imul
iret
mov
fcompl
dec
clc
rcr
pop
or
sub
fidivs
mov
adcl
add
not
test
sub
jmp
lea
je
pusha
mov
cmp
mov
call
add
ja
jae
outsb
add
pushl
mov
jmp
mov
pusha
pushl
lea
jmp
jmp
mov
sub
xor
sar
add
sub
xor
bsr
mov
clc
test
pusha
pusha
mov
lea
je
jle
shr
add
neg
mov
clc
jmp
lea
xor
push
pop
lahf
lret
cmp
ss
xchg
push
test
jne
mov
mov
push
sbb
fs
and
sub
xor
mov
movsb
movsb
sub
fnstenv
mov
xchg
imul
pop
inc
pop
pop
pop
test
dec
test
push
push
jg
aad
inc
cmp
push
push
cmp
cltd
xchg
xor
leave
mov
xor
mov
xor
popa
xchg
arpl
or
and
into
stc
pusha
jmp
xchg
fs
data16
jnp
out
in
sbb
mov
mov
fbstp
jp
cmp
cmp
and
sbb
jo
lods
xchg
xchg
push
loope
movsb
cmp
sbb
dec
inc
push
or
push
lret
iret
mov
xchg
adc
or
orl
sub
mov
cs
cs
push
adc
cmpb
insl
je
test
adc
jmp
push
mov
pop
xor
xor
lcall
push
sbb
push
adc
fcmove
lock
sub
repnz
das
sti
mov
cmp
lods
lods
cmpsl
scas
mov
bound
cld
ljmp
movb
movb
ror
push
cmp
call
mov
cmp
mov
pop
scas
xor
mov
mov
mov
inc
ds
pop
push
sub
popa
movsl
testl
imulb
add
fcom
lods
push
lds
sub
mov
popf
aad
mov
jo
jp
pop
iret
movsl
push
xchg
rcrl
inc
rclb
mov
dec
mov
in
daa
xor
add
adc
cmpsl
ds
push
xchg
mov
lock
notl
xlat
pop
xlat
dec
dec
inc
dec
lds
inc
dec
inc
iret
adcl
pushf
push
not
bt
ror
cmp
cmc
bt
neg
push
call
pusha
test
xor
lea
pusha
jmp
push
lea
jne
aad
bswap
aad
sub
dec
lea
mov
cmp
add
sete
bt
xor
pushf
mov
cmp
push
cmp
bt
test
pushf
lea
jmp
pusha
lea
je
jb
pusha
or
pushl
mov
pusha
lea
je
adc
pushf
xor
das
inc
dec
mov
test
bswap
shrd
shr
lea
test
and
sbb
mov
cmc
cmp
or
pusha
call
iret
or
lods
fldcw
mov
and
lods
fmuls
pusha
lods
sbb
lods
fmuls
in
jmp
loopne
xor
and
shrb
adc
ljmp
rcrb
lods
fsubrs
dec
xorb
test
xlat
xchg
mov
imul
outsl
scas
and
mov
and
insl
ljmp
fldcw
sub
xchg
mov
fucomp
adc
and
or
int3
and
insl
out
fildll
fsubrs
ret
sti
or
lods
fsubr
adc
and
lods
mov
cmp
mov
and
out
add
push
stos
push
imul
and
popf
mov
lods
adcl
and
push
cmpl
fisubrl
ds
lcall
cltd
jmp
mov
and
mov
pop
scas
and
das
stos
scas
and
mov
xchg
xor
and
add
incb
jb
cwtl
pop
repz
and
stos
addb
fsubrs
cmp
xchg
sbb
and
xchg
das
cmpsl
or
pop
dec
movsb
xchg
or
and
imul
and
lods
and
repnz
and
and
lods
fisubrl
sbb
and
lods
fildll
mov
and
lods
fisubrl
out
and
int
mov
repnz
jmp
cmpsl
jmp
and
mov
and
mov
lock
dec
mov
cmpsb
xor
or
cwtl
lods
fdivs
jle
repz
add
cltd
or
pop
mov
sub
pop
das
sbb
loopne
out
gs
pop
decb
cmp
add
sub
adc
mov
mov
sbb
gs
xlat
push
pop
mov
pushf
pushf
lea
jmp
mov
cmp
clc
bt
cmp
movb
lea
jbe
pusha
btc
ror
sub
mov
bsr
pushf
mov
not
jmp
add
inc
gs
outsl
fs
gs
imul
add
je
or
mov
lcall
in
jo
xlat
mov
ror
rorl
dec
rorl
dec
push
into
fidivs
inc
popa
mov
les
popf
pop
mov
inc
inc
test
hlt
pop
testl
add
loope
and
shlb
das
sbb
sbb
jmp
mov
icebp
push
aam
inc
adc
add
int
loope
cwtl
sub
bound
sbb
inc
ficoms
pop
es
push
pop
rol
and
jecxz
gs
push
mov
and
xor
sbb
push
addr16
shl
push
lea
jae
cmp
pusha
cmp
pushf
xor
jmp
pushf
jmp
sub
call
mov
jmp
shr
shl
push
xor
jmp
cmp
push
lea
je
bt
call
pusha
lea
jne
call
lea
je
pushf
pushf
jmp
in
push
jb
into
fadd
pop
xor
fcmovb
pop
inc
pop
inc
dec
add
push
sbb
sbb
push
xorl
cmpsb
fidivs
scas
loopne
outsl
scas
adc
dec
xor
insb
repz
sub
push
xchg
push
sti
jns
ss
rolb
adc
sti
mull
scas
sub
jecxz
jo
jbe
call
loop
in
adc
mov
aad
flds
inc
fldl
es
push
lahf
xchg
scas
pop
fstps
cmpsl
cmpsb
lods
in
cmp
sarl
inc
int3
inc
into
push
ja
out
bound
ljmp
test
sub
ss
add
je
mov
insb
ss
mov
adcl
mov
push
push
sub
cmp
mov
sub
inc
mov
sbbl
ret
js
sbb
or
sbb
adc
dec
sbb
pop
sub
in
pusha
outsb
jb
stc
jae
negb
nop
jg
sub
clc
fmul
ret
les
jne
sbbb
popf
xchg
adcl
data16
cmc
stc
push
sub
enter
faddl
inc
fadds
into
rcl
pop
rcrl
fnstenv
sub
cmp
xchg
ret
movsb
out
shrb
dec
int
dec
inc
dec
adcl
sbb
insb
fldenv
mov
and
cmpsl
dec
mov
and
pop
out
rcr
fninit
sub
in
or
int3
cmpsl
addr16
leave
sbb
insl
orb
enter
mov
ror
scas
adc
fcomps
pop
rcl
lahf
arpl
push
nop
xor
pop
push
mov
add
cmp
lea
int
in
xchg
mov
cs
xlat
out
ja
test
jb
bnd
loope
fs
adcl
fcmovnu
push
dec
mov
inc
outsl
xorl
ja
cmc
sbb
cmc
lea
leave
xchg
sub
mov
dec
mov
mov
incl
or
shl
mov
mov
out
xor
je
out
fwait
test
lds
pop
sub
mov
dec
ret
pop
int
xchg
call
cli
dec
pop
das
adc
aam
adc
push
out
xlat
sti
ror
jbe
ret
jmp
jge
lahf
sub
push
dec
inc
inc
push
xchg
sbb
or
test
jo
push
jp
rcl
popf
insl
idivl
add
xchg
jbe
jle
jl
sti
in
jecxz
out
in
popa
mov
mov
xchg
test
inc
sbb
repz
and
xchg
mov
and
push
inc
out
call
ja
mov
mov
out
mov
sahf
shlb
adc
outsl
and
xor
ja
push
xchg
push
insb
lods
push
xor
cmpb
dec
dec
lock
lods
ret
jnp
sbb
inc
jb
scas
and
and
mov
fisubs
jp
cli
int
push
mov
pushf
movb
pusha
lea
jmp
xor
pop
mov
sbb
fwait
icebp
adc
sbbb
jns
cmp
loopne
out
xchg
push
ret
mov
rcr
jmp
inc
pop
lds
ja
sub
iret
mov
inc
pop
shrb
or
into
pusha
dec
mov
sbb
fsubrl
pop
clc
in
or
pusha
sbb
xchg
mov
add
lock
inc
add
sti
ret
sub
add
fstl
aam
push
fcmovnbe
fsts
adcl
adc
pop
stos
es
xor
jne
xchg
je
cmpsl
lahf
xchg
sub
cltd
adc
jns
cmp
hlt
rcr
es
push
mov
xchg
sub
inc
push
mov
inc
movsb
lret
xor
std
cltd
mov
sub
sbb
stos
mov
and
loopne
fildl
dec
test
aam
into
and
xor
movsb
ss
xor
daa
stos
or
push
jecxz
repz
arpl
ror
inc
dec
inc
int
dec
inc
lret
ret
adcl
ror
pusha
call
mov
pushf
call
addr16
arpl
fmulp
ror
push
dec
push
int3
inc
lret
push
int
inc
out
jae
in
int
movsl
sahf
mov
xchg
mov
clc
mov
mov
cmpsb
out
stc
and
test
pop
dec
pop
inc
push
xchg
fcom
push
movsb
ss
sbb
fdiv
lock
sti
jl
pop
push
pop
rorl
inc
mov
fsts
adcl
clc
cmc
cmpb
pusha
pushf
jmp
ret
dec
push
stos
loope
mov
xlat
scas
pop
ret
pop
rcr
pop
rorb
xor
and
mov
push
fwait
sub
and
loopne
jecxz
cmc
fiadds
dec
mov
push
test
push
xchg
lcall
push
inc
jl
jp
xor
xor
pop
push
dec
ret
pop
push
pop
rcr
rcrl
adcl
imul
add
in
pop
ret
ds
pop
out
test
popf
sbb
lcall
xchg
adc
sbb
in
inc
pop
repnz
fcmovne
arpl
jle
lret
test
call
popf
fwait
rcr
mov
push
rol
cmpb
inc
and
xchg
nop
into
out
arpl
in
out
in
adc
imul
push
jge
add
mov
cmp
pop
mov
pop
lcall
or
lea
xchg
mov
pop
mov
xchg
sbb
cs
imul
jle,pt
cmp
or
xor
mov
sahf
xchg
fwait
xchg
popf
push
lahf
xchg
sbb
adcl
lea
jne
movsbw
sar
btr
btr
mov
je
test
bts
mov
sub
call
jmp
rcl
rcrl
sub
cmp
aam
push
int3
inc
int
iret
ror
push
fcoms
cmpsl
push
lock
bound
aaa
repz
pop
lahf
nop
push
mov
and
hlt
sbb
push
xcrypt-ecb
cmpsl
mov
mov
add
inc
xchg
aam
xor
shrb
arpl
adc
cltd
dec
cmp
fcmovnb
fistl
sbb
movsb
xor
pop
adc
add
dec
lds
dec
inc
dec
inc
mov
adcl
xchg
mov
mov
dec
sbb
or
pop
test
sbbb
ljmp
mov
mov
out
test
loopne
inc
lods
add
push
xor
clc
lea
dec
aam
cmpsb
loope
lret
inc
test
mov
jge
adc
mov
das
and
shl
enter
stc
mov
stc
in
push
test
sahf
aas
mov
sahf
adcb
xor
sbb
popl
adcl
jb
or
movsb
jo
movsl
xor
fwait
add
sbb
xchg
mov
and
arpl
add
icebp
inc
mov
in
jae
xchg
and
xor
das
rol
add
xlat
loopne
jp
std
repnz
jbe
pop
jg
push
adc
lahf
sub
pop
enter
ds
cmc
jmp
call
jg
ss
call
call
pushf
lea
jne
adc
push
mov
cmc
jmp
call
lea
pushl
pushf
pushl
lea
jmp
add
inc
imul
popa
addr16
outsb
arpl
gs
push
imul
incl
add
popa
insb
inc
jb
add
push
pop
iret
push
fwait
jo
sub
sbb
pop
scas
and
out
popf
pop
cwtl
std
mov
push
hlt
dec
aad
shrb
xor
cmpsl
insl
jnp
cld
xchg
bswap
enter
cmpsb
cmp
shrb
das
lods
inc
jbe
sub
sub
fiadds
mov
orb
sub
mov
loope
in
imul
xlat
sub
push
pop
adcl
cmpb
pusha
push
pushf
lea
jne
clc
bt
call
call
pushf
pusha
shl
lea
je
lods
jmp
pusha
jmp
cwtl
push
add
add
add
cs
add
add
add
call
add
add
add
add
adc
add
add
inc
sub
add
add
dec
pop
add
add
add
jle
add
add
add
lods
aaa
add
add
add
lea
add
cmp
push
add
aaa
add
dec
cs
mov
add
add
outsl
dec
sub
add
pusha
bsf
mov
setnp
setne
add
movsbw
pushf
mov
stc
add
shl
movzbw
movl
btc
jmp
call
xor
cmp
sub
movsl
jne
sbb
mov
dec
les
int3
test
popa
xchg
jne
jmp
rcr
inc
push
scas
dec
mov
gs
jp
popf
jl
cltd
cwtl
push
stos
jge
sbb
jbe
jmp
jl
jp
push
pop
loopne
clc
pop
xchg
mov
cmpsb
xchg
xchg
test
loopne
lock
xorl
xor
push
nop
test
mov
aaa
sub
movsb
das
shrb
mov
or
cmp
cmp
jmp
and
sbb
jp
push
ret
daa
xor
or
inc
push
xor
sbb
inc
fldl
inc
flds
push
pop
mov
loopne
lret
test
dec
xchg
push
pop
add
loopne
mov
mov
test
into
rclb
jb
push
xchg
or
popf
push
pushf
adc
sbb
push
jb
fmulp
setbe
setle
push
add
pushf
shr
add
lea
inc
rcl
setno
xor
mov
clc
clc
shr
jmp
jmp
out
in
testl
inc
fadd
pop
ret
ffree
pop
xor
iret
push
std
jbe
pusha
sub
lahf
add
jg
repnz
stc
push
mov
cmp
sub
repz
inc
push
stc
jecxz
std
aam
mov
inc
jnp
lret
jnp
or
mov
mov
mov
push
inc
sbb
fs
ss
pop
and
lret
push
repz
dec
inc
into
les
jl
fisttps
cmp
add
fnstenv
mov
lahf
adc
jae
aam
mov
mov
mov
adc
cmpsb
mov
movsb
dec
mov
shr
cmp
add
jmp
push
xchg
add
leave
sub
cmp
and
jb
or
adc
add
xor
push
int
pop
leave
cli
inc
mov
push
pop
lock
jecxz
push
or
aam
xchg
mov
mov
out
push
sub
stos
xor
lods
mov
cmp
aas
mov
lea
pushf
pushf
xchg
pushf
push
dec
call
lea
jae
test
xadd
test
mov
or
mov
lea
clc
cmc
mov
cmc
stc
sub
bt
test
stc
bt
repnz
push
pushf
mov
call
inc
bt
mov
bt
test
cmpb
pushf
pusha
pusha
lea
jne
push
sub
dec
daa
aam
mov
sub
stc
add
xor
mov
test
test
push
lea
je
clc
sub
call
pushf
lea
jne
jmp
call
and
ss
jmp
dec
push
sysret
aas
xor
mov
push
fstpl
jbe
mov
lret
notl
loope
pop
push
fsubr
aas
out
call
sub
sbb
sub
int3
jnp
jmp
mov
add
and
and
and
mov
je
add
sub
jo
inc
pop
repz
or
rolb
mov
and
sub
lods
xchg
cwtl
in
lock
out
jp
jg
cli
jno
repz
stc
adcl
or
mov
add
cmp
cmp
pusha
mov
bts
push
cmp
rcl
mov
pusha
cmp
clc
sub
pushf
push
rep
call
jno
jmp
mov
loop
pusha
jns
cld
data16
in
fs
addr16
aam
insb
jno
sub
cmp
cmp
xor
test
mov
inc
mov
pop
repz
sub
and
hlt
or
orb
dec
cs
test
jae
popf
push
jo
jecxz
dec
scas
xlat
ror
dec
xor
je
setg
cmp
mov
push
jne
out
les
test
popf
ret
pop
lcall
push
iret
mov
push
adc
or
flds
jo
rorl
icebp
cs
jge
fidivs
test
lret
sbb
call
mov
stos
sahf
js
test
push
mov
xchg
or
mov
or
or
clc
push
loopne
mul
pop
insl
jbe
dec
test
mov
mov
or
xchg
idiv
cli
test
outsl
jecxz
loope
jmp
loopne
push
jbe
or
jle
sbb
inc
pop
jnp
cwtl
in
cltd
sbb
nop
push
jbe
lock
jecxz
fstpl
std
adc
stc
lea
pop
iret
sbb
mov
push
push
pop
cwtl
mov
add
dec
mov
test
mov
push
push
in
je
cmc
xchg
mov
aam
and
add
daa
inc
iret
cmp
sbb
mov
dec
mov
jecxz
arpl
adcb
pop
scas
clc
xchg
sbb
push
in
mov
test
inc
mov
xchg
push
sbb
jg
sub
repz
push
bound
cmp
out
stos
das
mov
push
popa
pop
ja,pn
fsubs
scas
sarl
push
ds
mov
sbb
pusha
mov
inc
in
nop
lahf
push
test
movsb
add
push
jp
stc
xchg
ljmp
js
movsb
fsubs
inc
xlat
pushf
jnp
je
xchg
xchg
ret
cmpsb
adc
pop
pop
pop
in
xor
cmp
out
push
decb
jae
and
sub
sub
clc
out
xchg
insl
mov
ss
adc
rsm
stc
mov
fisttpll
imul
pop
push
in
jbe
mov
idivl
in
adc
sarb
pop
movsl
push
out
adc
xor
orb
stos
pop
out
add
sbb
cwtl
pushf
xchg
xor
inc
xchg
cmp
mov
dec
xchg
push
rcrb
push
push
jo
xchg
test
push
call
lods
push
jbe
lfs
adc
xchg
mov
inc
add
ss
pop
aaa
mov
gs
aad
pop
sbb
pop
adc
out
test
cltd
int3
lods
push
add
ds
dec
push
jno
out
and
add
loop
push
stos
xchg
sti
les
sbb
add
je
inc
adc
and
addr16
sub
push
cltd
inc
ss
sbb
shrb
lock
xchg
mov
dec
push
pop
or
jl
mov
in
push
cwtl
sbb
fwait
cmp
mov
jns
pop
imul
pop
sbb
icebp
test
sub
sub
cli
imul
mov
mov
insl
xchg
push
and
sbb
lret
ss
sbb
mov
inc
mov
call
scas
xor
fistl
pop
or
xchg
stos
cmp
in
aad
sbb
jns
mov
cmp
xchg
sbb
mov
insb
es
push
daa
jmp
daa
pop
sub
pop
cmp
jns
pop
cmp
test
or
mov
xcrypt-ctr
cmpsl
fnstcw
xlat
mov
pop
cmp
sti
nop
pop
pop
test
call
sbbb
arpl
jne
pop
or
pop
mov
fbld
push
movsl
neg
imul
ja
pop
sbb
jnp
mov
jns
imul
and
mov
movsl
into
push
das
inc
ficoml
xchg
xchg
mov
imul
sbb
cmp
repz
push
popf
ret
fs
test
fiadds
in
popf
mov
cmp
fsts
mov
adc
sbb
cwtl
pop
out
jmp
rcl
xor
dec
mov
sbb
jmp
adc
repnz
jmp
add
xor
sub
pop
cltd
push
xchg
push
pop
ds
dec
addr16
add
in
out
jmp
mov
cmp
push
push
popa
arpl
shlb
add
dec
jns
push
arpl
sub
aad
xchg
scas
xlat
in
xor
imul
push
sub
or
jmp
push
lret
fwait
stos
jnp
pop
insb
cmp
dec
sbb
sti
or
in
mov
sbb
daa
or
jmp
jns
mov
cmp
sub
push
or
ljmp
push
es
push
out
test
sbb
add
sbb
sub
push
dec
push
inc
scas
rcrb
aam
ss
push
cmp
fmull
aas
sub
clc
dec
out
out
sbb
gs
fsqrt
pushf
out
push
pop
insb
mov
addr16
fistpl
gs
test
push
test
cld
out
loope
and
mov
sbb
jge
loop
lret
cmp
mov
or
push
jae
xchg
fnstenv
adc
pop
mov
mov
test
jmp
imul
mov
sbb
inc
mov
pop
ljmp
jmp
aaa
dec
xchg
loope,pt
push
dec
sub
ret
mov
fbld
addr16
inc
pop
imul
paddq
stos
sbb
sbb
pop
push
push
xor
dec
sti
dec
aad
inc
fwait
push
out
sub
adc
sub
xchg
popf
fistl
push
add
mov
jb
xchg
jne
xor
ja
imul
xor
mov
imul
pop
push
pop
sub
ret
push
lds
dec
mov
sbb
or
cmp
pushf
ret
mov
mov
jp
dec
pushf
cmp
jnp
cmp
imul
outsb
push
in
ficoml
cmp
fwait
or
aas
ret
das
xor
inc
idiv
rclb
push
jmp
add
sub
pop
sti
dec
shlb
push
cmp
pushf
or
nop
push
cmp
mov
and
jns
xlat
adc
add
in
sub
test
test
mov
sub
jne
xlat
pop
adc
pop
lret
cmpsb
movsl
xchg
shrb
mov
pop
leave
mov
test
push
aad
sub
imul
mov
mov
sbb
jne
imul
addr16
sub
out
int
adcl
sbb
pop
lock
cmp
out
xchg
adc
xor
out
pop
cmp
push
inc
push
push
mov
cmp
adc
aad
push
dec
aas
loope
mov
xor
dec
or
movsb
js
add
fidivs
jae
repz
fucom
adc
cmpsl
xchg
data16
imul
or
push
mov
push
aad
sahf
jb
xorb
cmp
push
aaa
adc
and
mov
pop
xchg
gs
push
dec
push
or
cmp
dec
lea
out
mov
push
daa
jne
jno
cmp
pop
cmp
test
flds
adc
xchg
pop
fstl
jecxz
in
push
pop
jmp
lret
addr16
std
sbb
push
fwait
sbb
daa
inc
call
negl
aad
xlat
mov
dec
xor
push
pop
jbe
push
test
pop
cmp
aaa
loopne
fmul
call
lahf
imul
imul
icebp
push
sub
adc
sbb
cwtl
sub
lcall
lahf
pop
cmp
mov
mov
fwait
popf
push
cmp
push
call
jno
out
test
xlat
addr16
ficoms
xchg
push
mov
pop
dec
and
mov
mov
mov
movsl
loopne
push
pop
rcr
mov
es
dec
dec
add
push
or
lahf
mov
push
sub
pop
outsb
pusha
out
mull
inc
ret
movsl
pop
popf
and
addr16
fistps
jns
push
std
jb
cmpsb
call
loope
pop
aad
fsubr
ss
jecxz
push
cmp
cmpsl
adc
pop
pop
push
sbb
mov
pusha
xlat
sbb
fisttps
notl
mov
xor
adc
mov
mov
imul
push
inc
push
pop
sub
xor
xlat
fsubs
ss
gs
mov
pusha
jl
cmp
sbb
out
adc
sbb
scas
xlat
je
jae
mov
mov
fstpt
xchg
xor
fbstp
or
push
dec
pop
ror
out
adc
push
push
mov
in
aaa
movsl
or
iret
adc
sbb
xchg
fcmovnu
pusha
pop
inc
mov
jno
out
sbb
cwtl
out
hlt
cmp
mov
cmp
xor
out
pop
cmp
jo
mov
sbb
fisttps
lcall
xlat
pop
pusha
sbb
clc
gs
hlt
cmp
push
fistl
mov
mov
out
shrb
hlt
sbb
out
icebp
cmp
adc
inc
sbb
push
sbb
xchg
out
mov
mov
pop
les
add
lcall
adc
xchg
push
movsb
mov
lcall
and
xchg
das
rcrb
pop
js
pop
sub
sub
sbb
mov
cmpsl
dec
pop
aam
cmpsb
les
rcrl
sbbb
int3
stc
pop
call
jecxz
push
xchg
iret
bnd
test
jg
inc
lea
jmp
mov
lods
arpl
add
cli
fnstenv
inc
repz
aad
aas
pushf
pop
arpl
loop
dec
dec
adc
jns
cmp
push
push
xlat
mov
jb
push
sbb
adc
add
xchg
pop
stc
fsubl
mov
ficoms
lcall
push
mov
push
push
adc
push
lock
push
xchg
shlb
out
xchg
push
xor
dec
pop
push
adc
pop
ret
cmp
lock
push
pop
xor
inc
mov
mov
pop
jns
xor
pusha
popf
and
rcl
jne
lock
cmp
stc
mov
mov
push
mov
jbe
mov
les
int
push
dec
popf
inc
sahf
lock
xlat
sbb
sbb
fdivrl
ja
popa
out
cmp
xchg
mov
jl
jbe
jbe
mov
arpl
cmp
cld
lods
push
int
adc
clc
lea
cmc
mov
lock
sarb
fdivs
pop
adc
andl
fsts
popf
jae
push
cwtl
xchg
stc
aas
fcoml
jb
or
outsl
addl
insb
addr16
ljmp
adc
cmpsl
ja
sub
push
test
std
and
loope
mov
sbb
shll
push
lods
pop
pop
jns
test
ss
push
scas
pop
pop
add
pop
imul
loopne
push
xor
imul
in
sub
jp
hlt
jecxz
ss
fdivs
jle
out
adcb
push
pop
pop
cltd
and
or
add
pop
fcoms
xchg
sbb
movsb
pop
bound
xor
jno
mov
fucom
stos
jmp
mov
mov
dec
mov
sarl
cmpsb
negb
outsl
cmp
sbb
xchg
adc
fldcw
aad
adc
push
sbb
lret
jle
add
test
xchg
push
jmp
or
cltd
ud0
pushf
xchg
push
add
push
loopne
xchg
push
inc
mov
loope
mov
ss
pop
xchg
adc
push
dec
or
pop
inc
xor
rorl
outsb
arpl
pop
xchg
mov
out
outsb
inc
adc
pushw
push
xchg
scas
jmp
clc
pop
mov
adc
sub
in
pop
call
fmuls
xor
pop
mov
mov
cmp
xchg
sti
or
sbb
je
or
sub
shrb
fnsave
aad
sti
vmaxpd
push
fcmovu
jb
lea
jne
push
push
hlt
lods
add
push
push
jnp
ffreep
je
push
mov
sbb
loop
lcall
mov
mov
adc
bound
mov
mov
mov
xor
ljmpw
aaa
and
lret
pop
push
push
in
test
push
dec
js
imul
inc
mov
fs
adc
fisttpll
mov
hlt
imul
cmpsb
and
inc
mov
inc
push
push
fcomps
jp
push
stos
or
es
and
inc
rcrb
movsl
jg
pop
adc
imul
push
dec
jno
or
fisubs
sbb
mov
push
push
mov
sbb
dec
push
push
mov
out
inc
leave
push
int
ret
test
or
fists
push
inc
dec
pop
mov
out
in
xlat
int
adcl
cli
in
into
cmp
mov
push
jb
dec
cmp
dec
jno
aas
push
insl
cmp
xchg
mov
inc
jne
cltd
ficomps
test
mov
rcll
shrb
ja
dec
inc
push
push
lcall
ljmp
push
dec
cwtl
fldt
fwait
test
push
int3
adc
gs
xchg
xor
mov
push
sub
mov
push
lock
loopne
push
sub
inc
push
ret
test
push
dec
push
xchg
in
inc
mov
insb
lcall
sub
mov
into
fst
pop
rcrl
movsl
mov
lods
pop
xchg
adc
sub
push
xchg
addr16
mov
sub
stc
xor
push
lods
dec
cli
push
mov
mov
cmp
add
xor
rcrl
cli
xchg
xchg
xor
in
xlat
pop
shl
sub
mov
mov
adc
add
xchg
stc
jbe
push
xor
fmul
sbb
dec
dec
ljmp
clc
mov
xor
scas
mov
inc
jns
clc
stc
aad
push
or
shrb
inc
stos
icebp
hlt
lods
or
jl
cmp
inc
jbe
std
xor
lds
mov
fsubs
push
or
cmc
int
xchg
pop
into
and
or
xchg
notb
loop
push
sbb
pop
dec
hlt
lcall
enter
jbe
addr16
xchg
adc
jns
repz
stos
shrl
push
push
rorb
push
test
or
mov
add
xchg
fstps
subps
or
fs
test
xor
xchg
cmp
xlat
into
mov
scas
pushf
fidivrl
xchg
jmp
nop
cmpsl
outsb
aad
cmp
pop
add
sbb
cmpsl
pop
push
xchg
cltd
shll
mov
out
js
fmuls
push
movsl
inc
inc
ss
movsb
pop
mov
push
push
and
sub
push
dec
pop
and
imul
sbbl
daa
add
and
sbb
dec
cmp
jg
cli
jecxz
js
lret
outsb
and
push
aam
lahf
lock
inc
sub
fldenv
fstpl
sub
xchg
pop
lret
subb
divl
loop
out
cmp
and
inc
mov
and
push
xchg
je
inc
mov
mov
pop
testl
push
orl
lods
pop
mov
andb
sbb
add
ja
cmpsb
push
lds
or
pop
ja
outsb
mov
in
push
shr
rorb
mov
ss
bnd
push
sarl
jnp
cltd
jmp
jg
mov
fnstsw
test
std
push
movsl
into
popf
xchg
leave
fidivrs
cmp
pop
imul
js
outsb
scas
cmpsl
jge
mov
pop
push
arpl
hlt
lock
xchg
ja
and
mov
pop
pop
pop
mov
adc
ja
loope
xlat
adc
inc
rorl
sub
aaa
pop
inc
push
dec
fsubr
in
cmp
cmc
jl
cltd
inc
arpl
jecxz
ds
adc
fsubs
ret
pop
cmp
into
lret
sahf
xchg
test
add
push
xor
pop
sbb
push
cmpsl
dec
fisubl
mov
pop
fcmove
out
pop
daa
fistl
jmp
fdivl
in
jge
push
scas
or
push
daa
jbe
js
into
push
jge
ds
pop
std
cmp
in
repnz
js
ss
add
daa
inc
lret
adc
adc
test
int3
dec
stos
leave
mov
inc
ds
or
stc
clc
inc
jmp
imul
fwait
mov
push
push
adc
or
xor
and
xchg
xor
iret
imul
inc
push
push
adc
fcompl
inc
repz
cmp
xchg
rclb
cmp
test
loopne
jg
out
sub
cld
push
lea
ja
pushf
inc
mov
inc
shl
and
xchg
rol
ror
bsr
mov
mov
cmc
rcr
mov
bt
stc
mov
sar
shl
mov
stc
jmp
sub
xchg
in
fbstp
dec
lods
fwait
test
xchg
adc
pop
pop
scas
jecxz
movsb
mulps
sbb
mov
cmpsb
cmp
mov
shl
outsb
enter
mov
inc
cmp
sub
and
xor
mov
push
or
cs
enter
mov
pushf
adc
lcall
mov
xchg
fwait
dec
mov
sarb
mov
pop
inc
clc
pusha
call
jmp
pop
pop
add
stos
movsb
cmc
jmp
fiaddl
xor
lcall
aas
mov
aas
fistps
xchg
adc
pushf
mov
imul
lret
outsb
bound
xchg
mov
enter
adcb
mulb
and
add
push
pop
and
or
sub
fimuls
sub
mov
mov
or
rcr
cs
mov
aad
mov
push
dec
pop
push
mov
inc
cmp
dec
pop
push
add
lods
shl
idivl
loop
or
jl
mov
es
mov
dec
rcll
push
into
inc
movb
ds
data16
sbbl
iret
rorb
sbb
xchg
xor
jne
dec
mov
and
sub
scas
sub
cmp
into
sub
sub
xor
mov
ret
out
pop
mov
out
popa
ret
pop
add
sti
mov
addr16
test
clc
clc
cmp
mov
xchg
ja
aam
mov
das
loop
dec
insl
fidivrs
icebp
outsb
pop
addr16
jp
test
mov
jne
bnd
jp
imul
pushw
sbb
pushf
cmc
clc
sub
jmp
lea
or
cltd
shlb
mov
and
and
cmp
and
icebp
mov
xor
dec
mov
cmp
leave
mov
jg
imul
fmull
cmpsl
sub
outsb
fucom
lret
push
mov
mov
scas
cmp
xchg
jbe
into
inc
jmp
sub
stos
cmp
and
out
mov
push
sub
push
fcom
fcmovbe
fistl
dec
lds
or
outsl
lahf
orb
mov
mov
popl
add
mov
or
sub
ljmp
rcr
xlat
lea
sbb
cwtl
sahf
adc
sub
mov
in
pop
rcl
imul
mov
add
jno
addr16
xlat
lret
xlat
faddl
in
mov
repnz
inc
inc
sbb
inc
fwait
mulb
sti
testl
mov
dec
push
ljmp
daa
daa
lods
and
cmpsl
sub
adcl
pushf
lea
jbe
bsr
add
mov
bt
stc
pusha
add
pop
mov
btc
add
lea
or
movl
and
bts
sub
neg
mov
jmp
jmp
andb
add
jp
mov
aaa
mov
or
push
cmpsl
and
test
cmp
cmp
add
sbb
xor
adc
jnp
ljmp
jne
je
inc
mov
loope
push
mov
xchg
insl
out
movsb
ss
ss
lcall
test
out
cwtl
loopne
popa
ljmp
bound
cwtl
stos
fs
imul
inc
or
leave
mov
inc
popa
mov
jbe
adc
pop
push
and
xchg
xchg
or
sbb
scas
mov
jno
mov
imul
pop
dec
lds
xor
mov
mov
fsubs
cmpsb
adc
and
idiv
je
repz
jno
lock
clc
jno
push
sbb
popf
fwait
pusha
call
in
loope
cmpsl
mov
andb
push
lret
inc
lret
inc
dec
mov
jmp
or
movsl
movsb
xchg
popf
jb
mov
inc
in
cld
add
jbe
ret
sti
scas
pop
stos
mov
add
incb
mov
mov
fwait
or
mov
clc
push
jge
hlt
pop
cmpsl
arpl
and
aaa
jg
inc
adc
mov
pop
aad
les
cli
cwtl
pop
xchg
xchg
pop
adc
loop
xchg
sbb
push
sbb
mov
call
lret
dec
adc
rcr
dec
rcr
fld
faddl
rorb
push
popf
lret
stos
orl
or
sub
sbb
adc
dec
push
cltd
rcr
jp
ja,pn
fisttpl
fsubrl
dec
mov
in
push
roll
test
outsb
dec
sbbb
pop
mov
inc
std
pop
jge
inc
and
hlt
add
jg
pop
fldz
rol
lea
stos
mov
sti
mov
and
and
sub
sub
out
lods
out
jmp
imul
push
aaa
rol
scas
pop
rcrb
pop
inc
pop
rcrb
clc
in
pop
mov
pop
or
mov
dec
sbb
mov
adc
arpl
mov
in
notb
mul
jmp
dec
rcl
movsb
or
pop
dec
ja
das
xchg
stos
xor
test
std
arpl
popa
insl
in
loop
outsl
imul
ror
btc
sbb
cmc
mov
jge
sbb
not
cmc
mov
test
shr
pushf
shl
mov
clc
jmp
mov
movzbw
movsbw
call
xor
setge
neg
btr
add
pusha
btr
shrd
bsr
mov
cmp
cmp
add
clc
mov
mov
sar
mov
pusha
test
cmp
push
pushf
call
rcl
dec
mov
fwait
jae
testl
pop
fadd
filds
dec
jecxz
add
sub
test
mov
adc
adc
test
adc
pop
xchg
call
pusha
add
aaa
movsl
faddl
stc
dec
divl
popa
pop
xchg
cmp
aam
rorb
adc
xchg
pop
push
sbb
sbb
push
pop
scas
pop
icebp
call
pushf
lods
cmc
mov
mov
ror
cmp
call
inc
faddp
cmp
popa
push
xchg
andb
jne
je
jae
icebp
in
negb
lea
add
les
loop
jp
sub
jnp
push
stos
imul
pop
inc
mov
push
sbb
and
push
iret
repnz
fcomps
mov
push
and
out
neg
loopne
xchg
xor
imul
pusha
push
fistpll
and
movsb
stos
mov
adcl
pop
pushf
mov
pushf
pusha
pushl
ret
sbb
jbe
jbe
shll
shlb
mov
mov
cmp
mov
sbb
adc
mov
in
inc
cmp
mov
fcmovbe
mov
popf
xorb
call
in
daa
sub
rcr
cltd
jbe
jbe
fstpt
icebp
mov
mov
pop
sti
xchg
cmp
mov
add
sarb
sbb
das
not
or
adc
vpcomd
ljmp
shll
xor
lcall
insb
sbbl
mov
in
fdiv
jmp
dec
out
mov
mov
push
xchg
scas
mov
sbb
push
aad
loope
std
test
orb
and
xchg
mov
xchg
add
in
jb
inc
in
repz
cmp
lret
cld
subb
outsl
inc
jecxz
inc
adc
push
cmp
cwtl
pop
pop
int
mov
lahf
adc
sub
lcall
lods
dec
add
aaa
mov
rcr
rcr
movsl
int
xor
xchg
not
pusha
mov
movsbw
movsbl
setns
bswap
mov
lea
je
push
mov
jmp
stc
in
jb
popa
mov
int3
xchg
jo
jmp
popa
jp
push
sub
rorl
and
dec
scas
dec
pop
mov
mov
clc
jmp
mov
sbb
and
inc
lods
loopne
imul
xor
sahf
cmp
adc
insb
movsb
ss
jp
push
sub
lahf
adc
jg
xchg
and
test
scas
mov
cmp
clc
js
pushf
movl
call
jmp
xor
mov
sbb
dec
aad
push
leave
push
dec
push
mov
ficoml
mov
cmp
out
lahf
hlt
jg
jmp
lods
cmovne
fsts
add
and
cmp
mov
dec
arpl
divl
sbbb
jl
aas
mov
xor
adc
test
orl
xchg
pushf
xchg
lea
lock
or
movw
pushf
call
xchg
mov
xor
fadds
xlat
insl
mov
aas
and
and
mov
add
popa
mov
or
inc
icebp
sahf
mov
mov
and
add
push
in
pop
insb
out
mov
cs
in
jecxz
nop
test
cli
inc
jbe
lret
movlps
mov
in
jo
fidivs
add
jmp
shr
out
stos
lock
outsb
je
int3
lret
cli
add
and
and
divl
cmp
inc
push
lret
pop
out
push
pop
inc
inc
inc
clc
jno
pop
data16
cltd
lahf
lds
xor
negb
lret
out
out
bound
insb
repz
xlat
cmp
mov
movb
inc
sub
xchg
jle
and
push
adc
sahf
cmpsb
push
sub
movsb
inc
push
adc
scas
xor
scas
jne
loop
repnz
scas
mov
mov
xor
mov
gs
pop
pushf
add
dec
lahf
mov
punpckhwd
adc
mov
sub
mov
lahf
adc
cmc
mov
addb
mov
cwtl
nop
sbb
ljmp
ret
es
mov
mov
add
repnz
mov
sbb
sbb
fwait
jmp
sbb
aas
xchg
push
xchg
ret
sahf
sub
call
add
or
or
sbb
bound
lods
pop
divb
iret
mov
jge
sub
sbb
imul
inc
mov
dec
inc
aas
std
loop
ljmp
out
cltd
sar
add
and
dec
xor
mov
shl
shl
add
pop
or
sar
and
aam
mov
imull
dec
scas
scas
and
xor
adc
xchg
add
xchg
mov
ltr
stos
pop
push
call
inc
sar
inc
inc
and
ljmp
dec
pushf
movb
bt
bt
xor
push
call
add
aas
aas
xor
fs
popa
insb
insb
outsl
arpl
je
inc
inc
push
inc
inc
inc
pop
pop
add
test
add
xor
mov
clc
pusha
call
bt
pusha
rol
stc
test
mov
call
mov
xor
cld
cmc
adc
sbb
lahf
sbbl
pop
sub
scas
mov
stos
mov
ja
pop
xor
push
sub
outsl
jne
jae
movsb
cmp
ljmp
popa
adcl
out
call
test
pop
rcr
jmp
fcmovnb
imul
aad
mov
fimull
cld
fisttpll
pop
mov
jb
lea
mov
fidivl
cmp
adc
loopne
and
and
jb
cmp
xor
fwait
push
jne
sub
sub
push
mov
out
shrl
add
ror
int3
inc
fcmovu
push
pop
rcr
and
push
fildl
adc
repz
cli
jmp
lock
call
je
outsb
out
dec
and
and
add
jmp
jmp
clc
ja
icebp
push
fildl
mov
pop
mov
dec
stos
in
dec
mov
dec
cmp
xor
fwait
jmp
cwtl
add
xchg
iret
add
mov
loop
mov
aam
mov
pop
fwait
enter
mov
pop
arpl
cmp
cmp
cmp
test
pop
out
lret
into
inc
inc
push
inc
fidivs
jbe
bnd
push
adcl
lock
sub
sub
sub
je
idiv
push
cwtl
test
sahf
and
cs
into
inc
movsl
mov
cmp
ja
loop
xchg
data16
data16
pop
lea
int3
sbb
dec
or
inc
pushw
data16
or
leave
jl
inc
lock
ljmp
adc
mov
int3
stos
push
dec
pop
aad
push
dec
jbe
jns
xlat
lea
popf
adc
or
fs
sub
cs
outsl
stc
and
in
or
add
xchg
sbb
sbb
sbb
sbb
or
js
int3
in
mov
call
and
fdivs
nop
loopne
test
insb
pop
dec
div
repz
fbstp
ja
xchg
shll
movsb
ss
insb
mov
mov
xchg
adc
pop
inc
dec
ret
leave
inc
dec
ret
int3
inc
dec
push
push
pop
push
adcl
xchg
sbbl
les
sbb
lea
or
mov
subl
xor
or
cmc
sbb
stc
add
call
lret
inc
xor
gs
clc
sub
ret
lds
shrl
push
iret
mov
push
clc
orb
shld
inc
gs
leave
data16
sub
stos
push
sub
cmp
fists
xlat
xor
jb
shlb
jo
loop
adcl
push
dec
dec
dec
dec
inc
push
cs
insb
add
mov
mov
mov
jmp
add
mov
bt
bt
mov
bt
stc
mov
pushf
test
jmp
pushl
popl
mov
stc
test
cmp
push
pusha
lea
ja
bt
sub
sar
shl
add
sub
not
mov
shr
mov
bt
cmp
bt
cmc
repnz
jmp
jle
imull
movsl
adc
sub
out
popa
jp
call
loope
hlt
js
mov
sub
jbe
stos
jmp
enter
stos
xchg
icebp
add
popf
mov
hlt
outsl
xchg
pop
jns
lret
aam
js
xchg
sub
jnp
pop
cmp
jecxz
jecxz
xchg
xor
xor
loope
in
fs
icebp
icebp
js
adcl
lods
clc
call
jecxz
imul
test
pop
inc
pop
aam
pop
mov
pop
inc
fcmovnb
dec
ret
inc
sbb
ss
ljmp
daa
outsl
adc
daa
cmp
int3
jl
xor
out
cwtl
sar
add
inc
mull
loop
jbe
dec
out
fmul
sub
rorl
into
fsub
pop
daa
pop
xor
or
vbroadcastsd
jl
jle
clc
jbe
add
push
sub
orl
push
dec
ljmp
cmpsb
add
mov
jmp
imul
insb
insb
add
insl
jno
add
xchg
outsb
loopne
lods
push
sub
push
repz
test
movsb
sbb
jmp
cmp
jmp
jp
push
sbb
cmpsb
fidivl
loopne
bound
jl
jmp
loopne
pavgb
repz
dec
jg
or
sub
fs
xchg
pop
cmpsl
and
mov
mov
push
cld
pusha
pop
repz
xor
mov
mov
movsl
adcl
xchg
xchg
xchg
outsl
inc
movsl
mov
mov
aaa
pop
test
ss
and
test
inc
mov
pop
femms
sbb
push
nop
fadd
mov
mov
fstps
adc
mov
mov
lods
hlt
lahf
mov
xchg
ret
movsl
pusha
testb
add
orb
adc
loop
inc
push
inc
push
dec
xor
cs
insb
add
shll
incl
push
mov
cmp
and
mov
aas
mov
sbb
mov
mov
or
sbb
jae
jns
movsl
cmp
xchg
test
push
xchg
loop
shlb
mov
std
jbe
inc
adc
mov
mov
xor
cmp
adcl
neg
test
cmp
mov
cmp
movb
call
lea
jne
pusha
mov
xadd
mov
clc
shl
clc
shld
sub
shl
bsr
or
rcl
lea
jmp
cmp
cmp
pusha
jmp
jmp
mov
or
cmp
cltd
adc
fldcw
cmp
and
jmp
enter
popa
cld
fdiv
jmp
jl
std
pusha
jmp
out
data16
ja
inc
call
adc
inc
inc
push
leave
popa
clc
jno
ds
jo
ss
mov
cmp
std
lods
mov
mov
loop
mov
pop
add
andb
mov
pop
stos
rcrb
dec
dec
inc
dec
adcl
pusha
clc
pushf
cmp
jmp
xchg
pushf
movl
push
call
mov
pushf
call
xchg
subl
jmp
sbb
sbb
sbb
mov
sbb
mov
xchg
dec
xorb
rcl
sti
out
push
dec
rcr
call
loope,pn
cmp
int
cs
scas
out
mov
scas
repz
sub
orb
loope
add
sti
cmc
jg
dec
dec
mov
sbb
mov
orb
syscall
mov
sub
insb
jns
stc
jae
movsb
cmpb
into
and
mov
dec
inc
dec
push
sbb
mov
inc
paddd
push
out
stc
mov
add
xor
sub
orb
cwtl
sub
push
imul
mov
cmp
jae
cmp
in
fs
jmp
and
into
addl
ss
inc
cmp
xor
mov
mov
adcl
popa
xchg
push
xchg
or
mov
mov
mov
in
cmc
repz
cmpsb
stos
daa
cmp
mov
push
pop
movsl
stc
sub
mov
out
add
ret
dec
xor
xchg
sub
mov
bt
pushf
xor
lea
pushf
lea
mov
call
outsb
jnp
sti
jb
push
sub
inc
pop
inc
faddp
fists
xchg
cmp
or
cmp
lahf
dec
jmp
fwait
fwait
imul
jae
adc
js
mov
hlt
in
cmp
mov
cmp
inc
iret
sub
addl
popl
inc
imul
insb
and
push
add
pop
add
or
push
lahf
push
std
cmp
and
cwtl
les
or
cmp
mov
ss
stos
cmpsl
sub
stos
and
adcl
icebp
rorb
stos
jmp
rcr
ffreep
pop
rcrb
pop
inc
pop
ret
lods
mov
mov
gs
ja
or
sbb
jb
orl
mov
stos
and
ret
jae
out
jge
pop
push
or
cmp
mov
fcmovnu
rcr
xor
fs
call
pushf
mov
test
fwait
adc
addr16
lahf
out
cmp
and
pop
mov
jb
mov
dec
xchg
aaa
push
lret
rcrb
or
repz
add
xchg
xchg
cmc
faddp
adc
push
std
pop
add
push
push
pop
ror
mov
or
stos
mov
push
sub
jno
das
mov
mov
ja
jle
xchg
jno
add
dec
cmp
enter
fadd
flds
aam
rorb
int
outsb
call
dec
inc
lret
inc
dec
movsl
stos
dec
push
std
outsl
imul
in
aam
pop
out
out
mov
mov
mov
ret
xchg
dec
rcrb
sub
xorb
mov
or
les
nop
cs
mov
cli
jne
sub
ss
mov
js
jge
std
jae
in
sbb
adc
in
rorl
add
push
inc
push
into
data16
aad
orl
repz
bound
adcb
in
inc
fldenv
push
fadds
repz
mov
rcrb
fiaddl
rcrl
xchg
lcall
movsb
push
ret
jo
inc
fdivrs
dec
fcomip
clc
sti
in
inc
dec
xor
mov
iret
mov
xor
data16
xlat
push
mov
sti
ret
pop
push
je,pn
movsl
mov
cmpsl
cmpsl
sub
push
das
mov
push
xor
pushf
mov
push
mov
lea
jne
push
pushl
pushf
lea
call
jmp
push
pusha
jmp
lea
ja
push
pushl
lea
jb
jmp
pusha
lea
call
test
cmp
cmp
jmp
repnz
sbb
adc
xchg
iret
fisubs
aam
and
pop
adc
cmc
loop
loope
pop
mov
out
pusha
cli
sahf
cwtl
sbb
push
sti
scas
sbb
push
pop
dec
mov
pop
lock
add
ljmp
js
mov
outsl
xchg
insb
sbbb
xchg
mov
jbe
xor
push
imul
fstps
leave
cmpsb
in
fdivrs
jo
dec
pop
out
fwait
adc
push
push
xchg
xchg
xchg
pop
push
test
adc
push
shr
addr16
aam
push
jb
inc
pop
pop
mov
mov
sbb
dec
loope
pop
push
cmc
xor
fnstenv
sbb
sbb
std
push
push
popa
daa
outsl
mov
xchg
mov
fwait
pop
pop
and
das
xor
xchg
xchg
rclb
rcr
pop
sahf
cmpsb
ss
xor
jge
mov
mov
loope
daa
add
sub
pop
shlb
add
xchg
push
cmpsl
xor
out
notb
addr16
out
xchg
fistpl
cwtl
pop
mov
cmp
pop
fsub
sbb
test
addr16
inc
adc
loop
cmp
call
pop
sub
jmp
xor
repnz
xor
aas
rcll
rolb
loop
add
test
pop
or
cmp
pop
pop
adc
iret
out
pop
xchg
xchg
jb
add
pop
inc
enter
mov
pop
xchg
sbb
jb
mov
cwtl
and
enter
aaa
xor
push
fdivrl
es
rcrl
jns
mov
pop
cmp
pop
sbb
std
cmpsb
cld
loop
cmp
and
mov
jecxz
push
out
mov
xchg
sub
loope
sbb
xor
inc
mov
cmpsl
icebp
inc
dec
aam
pop
and
sti
mov
aam
out
cmp
push
push
bound
cmpsb
inc
push
setl
sub
xlat
popa
pop
pop
sub
sub
data16
dec
sub
jmp
fistpll
mov
imul
mov
xor
dec
xor
cli
xchg
pop
dec
addr16
clc
mov
push
mov
cwtl
dec
push
jae
andb
pop
and
and
mov
hlt
arpl
imul
fistpl
addr16
xchg
int
jns
movsb
outsl
jno
cmp
xor
call
push
inc
dec
je
xor
mov
xchg
lahf
je
cmp
add
in
or
push
inc
nop
jb
push
roll
loopne
cwtl
pop
cmp
pop
jmp
scas
addr16
bound
shll
sbb
pop
icebp
sub
add
pusha
loope
mov
cmp
push
notb
dec
fldpi
mov
in
out
pusha
mov
loope
cmp
aaa
mov
push
arpl
call
pop
and
imul
xor
pop
loop
pop
push
lahf
outsl
ret
out
jecxz
lods
out
pop
fsubp
mov
mov
adc
aad
ja
js
loop
pop
mov
adc
nop
push
fistl
and
jmp
imul
fbld
and
ficoms
loope
decl
mov
dec
in
aas
sbb
rcl
clc
xchg
fstps
movsb
push
and
mov
pop
pusha
mov
jmp
repz
aaa
cld
push
adc
jb
xchg
sub
add
loope
cmp
sbb
xor
and
pushw
pop
repnz
pop
les
fistl
adc
js
mov
imul
mov
in
inc
xor
loope
mov
nop
xor
sbb
sbb
and
sub
add
icebp
mov
inc
pop
orb
push
fnstcw
daa
cwtl
loope
daa
out
xchg
inc
inc
nop
dec
outsb
add
pop
out
lods
sbb
dec
jg
xchg
fistpl
pop
lcall
mov
pop
dec
int
push
popa
push
mov
mov
ds
mov
add
xchg
mov
icebp
xchg
es
inc
push
and
pop
lods
jb
xchg
arpl
enter
outsl
xor
pop
data16
add
sub
loope
mov
xor
cmp
ficomps
adc
sub
xor
addr16
and
mov
jecxz
fcoml
jle
pop
adc
push
fnstenv
jecxz
xor
add
rcll
and
stos
movsb
scas
data16
iret
pop
lods
xlat
out
or
js
adc
sbb
es
and
inc
inc
fcomps
ds
and
xor
xor
lock
iret
sub
out
cmpsl
xor
sbb
xor
inc
notl
ficoms
inc
roll
pop
dec
jb
xor
in
stos
xor
sbb
pushf
dec
xor
in
xor
and
aad
adc
adc
pusha
imul
loope
xchg
xchg
ds
or
xor
das
adc
fs
movsb
cmp
adc
aaa
outsl
dec
js
sbb
inc
pusha
outsl
push
fistl
sub
mov
sbb
pop
daa
or
or
jecxz
insb
or
sarb
sub
dec
dec
icebp
add
cmp
xchg
shl
cmp
popl
addl
adc
fldcw
ljmp
loopne
test
push
cwtl
pop
sub
push
arpl
mov
and
and
adc
leave
ja
jb
pop
mov
loop
xor
mov
test
and
add
das
adc
rcrb
pop
ds
fisttpl
adc
outsl
inc
jmp
inc
fsts
fists
fdivr
push
iret
ljmp
mov
xchg
clc
mov
cmp
movl
push
in
ret
xchg
xchg
adc
inc
mul
aas
mov
mov
loopne
pop
out
cmpsl
pop
loope
stos
adc
push
and
xchg
mov
inc
fildll
insl
dec
lock
lock
jno
dec
adcb
mov
sbb
mov
ret
cmp
sbb
mov
fs
shll
xor
icebp
pop
imul
push
pop
push
mov
push
inc
iret
cli
xchg
fsts
xor
adc
outsl
pop
hlt
push
adc
push
mov
cwtl
rcrb
aam
and
fucomi
data16
or
loopne
test
std
arpl
jge
loop
xchg
push
nop
and
xchg
jb
cmp
loope
cmp
jecxz
rcll
in
cmp
sahf
popf
cld
cwtl
mov
pop
mov
xchg
push
stos
repz
jle
and
addr16
jg
pop
loop
cmp
mov
loope
pop
insb
mov
pop
mov
out
in
pop
xor
and
dec
and
scas
push
sbb
adc
repnz
sbb
push
or
pop
dec
xchg
repnz
outsl
shll
nop
sub
cmp
test
adc
pop
shll
loopne
test
fistps
xchg
pop
dec
inc
ss
or
xor
push
push
pop
roll
mov
xor
or
xlat
xor
jle
test
mov
test
dec
mov
loope
add
dec
sub
jo
mov
jnp
aaa
lret
shll
fwait
cmpsb
push
adc
subl
nop
out
addr16
movsl
sbb
add
loopne
pusha
pop
xlat
fistl
dec
add
jnp
daa
call
mul
xlat
cmpsb
cmp
add
loop
in
mov
iret
xchg
push
insb
call
fbld
xor
lea
inc
pop
cmpsb
rol
inc
leave
rcr
xchg
xor
andl
rolb
jl
ja
mov
mov
repz
dec
pop
movl
hlt
sub
jle
fbstp
add
mov
in
scas
lcall
fwait
les
mov
ret
push
sbb
sub
mov
pop
sub
sub
ss
xor
add
and
andl
cmp
js
test
clc
xor
nop
push
fbld
xchg
dec
mov
aam
movsb
outsb
test
or
pop
cmpsl
fsts
or
mov
xlat
dec
pop
shr
pop
aad
jg
mov
jns
in
pop
loopne
lcall
fwait
cwtl
shl
and
dec
jno
push
inc
loope
fistpl
test
out
cltd
sbb
pushf
jle
pop
cmp
bound
scas
stos
ds
push
adc
nop
cmc
mov
fxch
push
push
scas
stos
sbb
cmp
insb
or
sub
push
pop
jp
inc
cmpsl
add
rcl
jb
xlat
fsubp
subl
lcall
das
adc
pop
mov
xlat
push
push
xchg
aaa
out
xor
push
pushf
xor
add
fmulp
xchg
sub
les
cwtl
loopne
aaa
fwait
loope
test
out
or
pop
nop
rorl
mov
cmp
mov
imulb
push
jecxz
add
scas
movsl
jno
sbb
fcoml
jl
addl
push
out
mov
out
iret
loop
clc
imul
out
inc
add
and
fucomp
sub
xlat
fldcw
mov
or
mov
xchg
push
fsts
or
cmp
test
iret
jno
add
sub
hlt
mov
push
and
lcall
xchg
push
dec
icebp
fstpt
daa
sti
inc
loop
addr16
insb
pop
xor
fldcw
pushf
out
movsl
int
ds
daa
int
pushf
dec
lods
mov
push
loope
pop
nop
rcll
push
arpl
lret
jo
dec
iret
fidivrs
jmp
dec
nop
adc
sbb
push
push
fnstenv
lcall
jno
sbb
loope
pop
xchg
rclb
mov
imul
iret
stos
xchg
push
int
arpl
outsl
inc
push
xchg
inc
js
mov
pop
jecxz
jne
pop
xor
pop
nop
mov
arpl
xchg
pop
sub
fdecstp
nop
push
sub
add
hlt
enter
and
hlt
inc
hlt
mov
push
sbb
aam
cwtd
mov
fisubrs
gs
mov
int3
xor
mov
vmread
mov
stc
movsb
add
pop
testb
jb
divl
and
mov
out
lock
in
scas
movsl
sub
out
pop
arpl
fisttpll
loope
pop
imul
arpl
pop
mov
dec
mov
aam
movsb
adc
jecxz
add
pop
js
lret
popa
xchg
push
pop
pop
fs
aam
mov
jle
xor
inc
std
ret
notb
ja
test
mov
and
xchg
jecxz
xchg
iret
das
jne
mov
cmpsl
daa
fldl2e
test
adc
lret
jbe
das
mov
outsl
pop
jmp
mov
mov
adc
daa
shl
aas
rcrb
mov
std
and
scas
push
rol
movsb
out
insl
mov
out
pop
fidivl
xchg
loope
add
pop
testb
or
pusha
pop
lahf
pop
subl
loop
ficoms
call
jg
nop
jge
push
mov
popf
jl
mov
out
ja
mov
bound
in
pop
loop
popf
lea
jmp
aad
cmp
cmpsl
popf
mov
stos
sub
jne
cmpsl
inc
pop
fistl
xchg
sbb
pusha
pop
mov
dec
stos
xchg
push
xlat
xchg
rcr
scas
hlt
fcoml
hlt
mov
lahf
cmp
sub
fs
xchg
push
outsl
push
pop
lods
xchg
fstpl
sbb
inc
jmp
test
aam
mov
push
sbb
inc
shll
rcrl
inc
pop
pop
fldenv
inc
aad
negl
cltd
nop
jo
dec
dec
lds
loope
add
iret
xchg
mov
shlb
jmp
xchg
jge
adc
pusha
cli
lods
sub
cwtl
or
enter
adc
xlat
sub
push
mov
or
flds
xchg
cmp
mov
imul
out
push
nop
adc
aad
xor
sbb
cmp
cmp
inc
scas
xor
das
in
push
into
mov
mov
pop
pop
pop
shlb
jo
sbb
sbb
push
pushf
loop
sub
sbb
jae
fld
dec
push
addb
mov
fidivs
mov
xlat
test
and
xchg
xlat
scas
jnp
and
loop
and
xchg
cltd
and
xor
xchg
xor
push
mov
test
add
mov
push
fnstenv
loope
xor
cltd
jne
inc
xchg
add
jmp
rcl
es
out
loopne
cmpsb
push
xor
jne
bound
jp
or
cmp
lods
fstpt
rol
cmpsb
lock
es
xlat
dec
pop
popa
xchg
stc
fistps
mov
fstps
pop
sub
xor
rorb
xor
add
mov
push
popa
js
mov
loope
movsl
mov
dec
nop
pop
xchg
and
outsl
das
dec
rorb
aaa
push
pop
xor
push
mov
xchg
out
add
push
shrl
xor
mov
or
pop
loope
in
or
push
fxch
jle
aad
outsl
in
out
in
mov
cli
sbb
xlat
dec
cmp
jnp
cmp
pop
insb
nop
xor
pushf
xchg
bound
jb
xchg
pop
adc
shll
outsl
sub
mov
fnstcw
mov
sbb
imul
fists
out
push
push
push
pop
mov
lea
fcmovnbe
and
add
xchg
inc
push
mov
loope
adc
stos
mov
rorl
add
jnp
ret
sub
cmp
shlb
out
dec
dec
push
or
adc
scas
xchg
mov
out
dec
xor
fisttps
sar
mov
xor
fstpl
cmp
pop
lods
aad
fisttps
jno
and
xchg
int3
loop
push
sub
push
arpl
mov
cmp
loope
push
mov
jo
jmp
lret
dec
mov
lret
stc
cmp
sarb
aad
hlt
mov
outsl
iret
push
xor
push
mov
push
xchg
lret
sub
fwait
and
pusha
sub
fxch
adc
jmp
iret
data16
pop
in
sub
xlat
movsb
xorl
xor
mov
or
fs
fistps
ds
jl
and
jno
gs
sbb
aas
and
pop
cld
mov
data16
sbb
xor
std
movsb
lret
mov
dec
loop
lret
xchg
not
inc
addl
lods
test
loope
psllq
mov
mov
jecxz
cmp
cmc
mov
add
test
in
arpl
jecxz
jmp
pop
dec
and
inc
push
mov
pop
mov
fmull
loop
cmp
sar
jp
call
adc
pop
lcall
push
out
lret
out
sahf
dec
add
pop
push
fwait
nop
std
fwait
mov
xchg
push
adc
inc
fistl
arpl
je,pn
lods
inc
xor
das
jne
mov
inc
sub
push
fldenv
lret
mov
push
xchg
inc
xchg
inc
sbb
aam
and
push
lods
std
mov
scas
outsl
jle
adc
jno
daa
js
scas
pop
cmp
mov
fdivr
jnp
fsub
xor
arpl
insl
test
rcrb
cmp
minps
push
shll
mov
sub
adc
push
ret
sbbb
daa
pop
push
jnp
fildll
stc
jno
pusha
cmc
cwtl
xor
pushf
sbb
das
cmp
pop
pusha
xor
inc
aaa
loop
and
dec
xchg
stc
fidivrs
lahf
mov
gs
xchg
push
stos
out
fs
jecxz
daa
shll
adc
adc
adc
jmp
in
cld
repnz
mov
add
movsb
push
cmp
jecxz
pop
cmp
sbb
aad
xchg
sbb
dec
daa
outsl
and
out
push
or
mov
enter
sbb
cltd
scas
fldcw
insl
mov
clc
clc
int
xlat
popa
push
lods
fld
xchg
mov
fsubrl
xchg
dec
clc
out
negb
cmp
add
idiv
mov
mov
add
jbe
adc
and
sbb
getsec
push
enter
push
cltd
push
cmp
fsub
out
andb
adc
push
push
icebp
jae
icebp
xor
repz
in
popa
stc
inc
out
jmp
pop
push
loopne
pop
adc
and
ss
sbb
add
xchg
jmp
mov
pop
rclb
pop
sbbl
push
in
mov
stc
pop
adc
test
out
jb
jmp
shll
push
sbb
insl
rorb
cmp
sub
popf
xchg
inc
adcb
mov
movsb
xchg
cmp
or
pop
xor
arpl
js
pop
mov
add
insl
fwait
jb
add
mov
rolb
pop
jl
pop
pop
or
push
inc
jg
movsl
push
sub
jle
stc
aas
mov
jle
mov
push
push
and
adc
add
addr16
shrl
sub
pop
xchg
pop
das
lods
push
pop
flds
dec
lcall
in
pop
xor
lcall
push
sbb
cld
iret
mov
adcb
daa
fnstenv
mov
xchg
loope
xchg
pop
push
and
rorl
cld
fnstsw
sbb
cmp
out
shll
jl
mov
xchg
pop
or
jbe
insb
inc
orps
shll
shl
arpl
xchg
xor
xor
pop
xchg
pop
repnz
divl
xor
sahf
jge
es
lock
mov
rorb
das
sarl
xlat
push
int3
aas
inc
dec
test
adc
jb
cli
push
roll
ja
out
mov
sbb
mov
mov
shll
adc
fsts
das
inc
cmp
jmp
icebp
inc
dec
dec
stos
xchg
fistpll
pop
sbb
ljmp
xchg
mov
cmpsl
pop
out
mov
mov
xor
insb
imul
outsb
pop
xor
push
test
and
dec
xor
mov
lahf
xchg
int3
ret
mov
addb
add
mov
or
pop
rcrb
sbb
sub
inc
cli
sub
xchg
xor
xor
sti
arpl
ret
loope
sbb
xor
and
xor
xchg
imul
loopne
mov
movsb
inc
jecxz
jo
sbb
fimuls
cld
cs
xor
loop
inc
enter
ss
sbb
push
int3
push
data16
sbb
push
stos
mov
gs
sbb
push
pop
sarl
or
adc
mov
mov
sub
les
add
les
sub
pop
shll
xor
xchg
xlat
add
out
pop
pop
adc
daa
imul
sbb
mov
jg
xor
push
nop
gs
data16
gs
add
and
std
stos
or
loope
daa
stos
jmp
addr16
insb
fnstcw
sbb
add
lret
scas
sbb
das
sub
rcll
mov
fiadds
inc
pop
out
rorb
pushf
ret
in
insb
push
cmpsb
rcrb
jno
shll
ffree
inc
lock
mov
cmc
in
sub
adc
adc
movb
movsb
jae
push
mov
outsl
clc
insb
gs
xchg
inc
fsubrs
shll
pushf
push
jmp
jmp
sub
cli
out
pop
dec
cmpsb
icebp
add
out
mov
repnz
inc
and
mov
fisttpl
fcmovnb
je
pop
lret
and
mov
jmp
cmp
iret
jl
stos
mov
jno
xchg
pop
jb
lods
pop
pop
shl
icebp
xchg
rorl
mov
xchg
jl
dec
test
rcrl
inc
xor
sarb
add
push
xor
jne
rsqrtps
iret
out
xchg
out
ret
sti
and
or
add
sub
rcr
aam
pop
data16
pop
or
pop
cmp
fcoms
fldenv
or
cmp
lock
pusha
fistpll
mov
xchg
xchg
lods
mov
jns
gs
aaa
xlat
out
lock
push
fnstenv
push
add
xchg
aad
testb
out
pop
bound
adc
loope
adc
sub
or
pushf
sub
pop
in
call
aaa
shll
cmp
mov
xlat
fisubs
sbb
push
mov
sub
cmp
pop
stos
and
fistps
data16
inc
xor
pop
mov
pop
jl
iret
add
addps
xchg
call
cmp
cld
aad
es
xchg
pop
add
std
nop
out
push
pop
dec
xchg
iret
addb
add
mov
sbb
push
xorb
pop
bnd
push
shll
or
sbb
int
icebp
mov
push
or
in
out
bound
mov
sbbb
dec
mov
xchg
cmp
jb
dec
xor
mov
mov
dec
add
cmp
icebp
fisubl
and
xchg
cld
jecxz
aad
and
std
inc
mov
enter
xchg
push
jg
push
sbb
fadds
js
into
add
mov
and
mov
xlat
les
test
addb
mov
rcr
and
pop
pusha
ret
jp
pop
pop
ljmp
fwait
test
sar
sbb
aaa
mov
sbb
inc
push
push
arpl
rcrl
mov
adc
dec
ret
adcb
xchg
aas
sub
or
inc
inc
adc
sarb
and
add
xlat
repz
jo
iret
imul
mov
ficomps
jmp
xchg
xchg
test
and
xchg
movsb
cs
cmp
loop
sbb
das
push
dec
sbbb
or
xorb
movsl
imul
add
into
push
adc
pop
lds
aas
and
pop
push
adc
add
push
ret
scas
loopne
rorb
paddw
xchg
lret
ficompl
rcll
js
shlb
adc
sub
adc
andb
lds
ds
sbb
push
into
xlat
push
js
and
pop
loopne
jge
jle
sahf
pop
sbb
add
rcll
call
mov
pop
cmp
push
negb
pusha
xchg
or
dec
add
pop
adc
xchg
cwtl
aaa
mov
and
or
pop
pop
ljmp
stos
or
fimuls
cli
pop
push
push
gs
ljmp
xchg
cmp
adc
shlb
mov
shlb
lea
inc
and
sbb
stos
repz
inc
orb
add
cld
wrmsr
addr16
rcl
jp
mov
sbb
les
into
sbbb
and
sub
inc
shll
adc
push
adc
mov
cli
push
inc
jge
jbe
mov
cmpsl
cmp
aas
adc
push
and
out
int3
cmp
push
mov
xor
or
aam
fstl
mov
testb
dec
push
mov
subb
push
xchg
mov
addr16
pop
fcoms
loopne
push
cwtl
pusha
push
inc
jo
xor
mov
mov
jge
xchg
cli
ljmp
sbb
dec
inc
mov
ss
sbbl
pop
and
mov
inc
adc
notl
fdiv
out
jl
lods
push
lret
ja
xor
pop
push
mov
xchg
push
lret
or
js
ficoml
mov
mov
out
stc
push
or
cmpsl
or
cmpsb
sahf
inc
push
inc
js
shrl
cmpsb
push
cmp
adcl
xor
sub
mov
add
pushl
jle
loop
xchg
call
adc
mov
loopne
js
jno
in
mov
mov
stc
push
out
xor
push
push
lds
jno
shr
push
cmpsb
clc
mov
pop
adc
cmpsb
cmp
xor
cmp
dec
repz
cltd
add
mov
ret
sbb
jmp
push
icebp
xchg
movb
pop
out
sub
repnz
inc
xchg
xchg
inc
pop
mov
lock
insb
push
jp
sbb
clc
push
icebp
lret
inc
cmpsl
pop
adc
ficoml
es
enter
jp
pop
aam
inc
cltd
pop
cwtl
pop
dec
push
push
in
aas
mov
dec
pop
mov
jb
xchg
insl
pop
shrb
or
push
cmp
pop
pop
sbb
bound
add
add
int3
into
mov
outsl
xchg
mov
aaa
mov
jbe
test
push
into
fwait
mov
pushf
outsb
leave
dec
sbb
test
test
xor
das
call
mov
mov
loop
sbb
iret
pop
mov
mov
fcoms
push
lods
and
mov
ret
xor
pop
or
or
mov
xchg
jge
push
ret
cmp
movsl
mov
in
xor
jae
jnp
sbb
lret
xchg
pop
dec
into
or
jl
push
and
pop
dec
loope
mov
pop
sbb
ds
cwtl
hlt
pop
inc
outsl
add
cltd
sbb
addr16
std
add
push
adc
fstl
mov
test
mov
push
loopne
push
lea
movsb
dec
test
jl
sahf
push
setbe
hlt
jecxz
and
adc
cwtl
lock
pop
mov
mov
inc
cmp
clc
mov
lret
fldcw
ja
dec
cmp
rcrl
push
addr16
xlat
iret
push
cmpsb
ss
pop
push
ret
or
xor
push
int3
neg
stos
dec
jbe
push
push
fstl
je
push
sbb
pop
lahf
testb
add
xchg
lock
arpl
daa
int
das
or
out
push
sbb
sbb
adc
add
add
outsl
push
bound
push
in
mov
pop
push
xchg
or
or
lds
cld
add
pusha
sub
aaa
aam
cmc
pop
dec
adc
jbe
push
mov
xor
xchg
loope
xor
mov
push
andl
inc
test
push
dec
jg
push
xor
sub
push
push
push
add
mov
jae
out
pop
ror
sbb
mov
popa
cmp
iret
test
xchg
rcr
aas
jl
call
xchg
lret
js
shrb
xchg
or
add
in
xchg
push
movsl
mov
sub
dec
xchg
rcrl
xchg
cmp
fmulp
dec
xchg
jmp
jb
shlb
inc
mov
mov
cmp
adc
fs
pop
dec
cmp
pop
jne
jl
cmpsl
lahf
adc
mov
nop
scas
rorb
addb
outsb
or
pop
mov
ds
xchg
clc
push
xor
or
rcll
scas
data16
sub
sub
test
xchg
and
inc
add
int
mov
inc
adc
mov
ret
pop
push
dec
and
sahf
jp
push
pop
and
loope
cmp
mov
outsb
fs
dec
mov
push
sub
fldt
rorb
or
mov
xchg
and
les
scas
adc
mov
addl
push
popf
push
xor
daa
into
dec
mov
outsb
jne
fisttpll
adc
inc
xlat
mov
pop
adc
mov
sub
out
push
mov
out
adcl
clc
addr16
add
sbb
xchg
je
andl
gs
ljmp
divb
cmc
mov
mov
hlt
popf
push
insb
idivb
addr16
pop
pop
icebp
adc
cmp
dec
dec
fnstcw
xchg
int
adc
jo
aaa
scas
cmp
push
sbbl
sbb
cmp
dec
test
ljmp
pop
data16
jge
xor
sub
cmpsb
jb
add
movsb
sbb
jb
push
lds
mov
imul
mov
cmpsb
outsl
add
cmp
jns
adc
aaa
push
xchg
sbb
push
add
push
xchg
lret
dec
popf
fst
aas
sahf
addr16
add
bound
dec
xchg
adcl
jbe
push
inc
inc
and
sub
pop
push
mov
frstor
mov
outsl
jbe
and
les
fimuls
lcall
daa
shrb
mov
andl
jge
lea
push
hlt
insl
push
add
jp
ds
mov
push
fistpl
xor
or
or
add
into
cld
or
pop
inc
push
mov
cs
aad
push
ds
fdivrs
jecxz
jno
orb
jns
bound
jge
jnp
mov
xor
pop
or
cmp
dec
mov
adc
mov
sbb
pop
sarb
or
and
dec
xlat
aam
je
xchg
inc
in
push
cmp
ss
push
mov
lret
xchg
jmp
push
jg
jae
jno
lea
push
push
mov
nop
add
inc
inc
lods
cmpsl
aas
pop
mov
mov
push
mov
xchg
ret
fsts
ljmp
push
adc
loop
mov
mov
mov
inc
hlt
adc
push
mov
popa
add
xor
mov
fcompl
push
dec
lret
mov
scas
fs
xchg
jg
mov
aad
jns,pn
rol
repnz
cmc
sbb
push
mov
bound
gs
push
mov
mov
shlb
jno
dec
sub
xor
xchg
adc
mov
stc
push
fidivrl
mov
outsl
dec
mov
cmpsb
loope
inc
addr16
ja
mov
les
sahf
mov
popa
inc
inc
negl
and
push
xchg
xchg
push
add
jp
imul
into
sbb
jae
push
stos
lock
adc
mov
gs
lock
sbb
bnd
pop
sahf
rcl
orb
ljmp
add
loope
lods
cli
cltd
dec
xorb
stos
mov
push
jbe
test
stc
mov
std
cwtl
xchg
pop
popa
mov
lcall
mov
loope
insb
push
out
call
add
dec
pop
xor
push
cwtl
xlat
imul
mov
in
out
push
outsb
shlb
sub
adc
mov
push
sbb
inc
push
imul
add
mov
aas
cmc
scas
push
jmp
xchg
lds
in
cmpsb
outsb
jbe
mov
inc
ss
xor
lock
addr16
jne
sub
adc
repnz
adc
enter
or
inc
xchg
lcall
mov
mov
push
push
mov
push
cld
cmc
test
push
adc
push
clc
popl
push
addr16
jmp
shl
fsubrp
mov
inc
les
outsl
and
setnp
jge
mov
movsl
mov
mull
aas
sbb
test
mov
or
mulb
arpl
push
or
add
rclb
adcb
cwtl
pop
adc
pop
sub
push
xchg
inc
mov
cmpsb
lds
adc
and
outsl
scas
or
xchg
push
mov
aad
mov
jp
push
arpl
dec
int
pop
mov
sbb
call
xchg
mov
leave
xchg
ja
lcall
mov
js
push
insb
fwait
dec
or
inc
outsl
pop
xchg
movl
dec
push
sub
jb
movsb
ret
xchg
outsb
pop
adc
mov
xchg
out
mov
push
popf
pop
push
sub
pop
aad
rcll
jnp
fisubl
xchg
inc
cwtl
mov
push
dec
pop
mov
push
mov
push
fsubs
and
push
mov
mov
push
out
or
mov
addr16
pushf
ds
jns
dec
aad
outsb
out
push
inc
cmpsl
mull
es
jmp
push
dec
push
daa
adc
out
dec
cs
pop
push
or
dec
push
inc
dec
bound
mov
fiadds
and
add
push
mov
stc
fucomip
xor
daa
xchg
push
data16
lods
fcompl
aaa
dec
jne
clc
test
lds
pusha
or
and
pop
cmp
push
leave
dec
mov
push
push
inc
shlb
ficoms
jge
lods
mov
jnp
cmpsb
jmp
mov
test
mov
pop
imul
dec
andl
push
mov
popf
and
fadds
xlat
sbb
push
or
xor
aas
jle
addr16
dec
cmp
adc
push
aam
sti
pop
arpl
or
push
addl
push
xchg
pop
jmp
scas
jmp
shll
mov
push
leave
jb
mov
push
or
xlat
push
xchg
push
movsb
push
xchg
sub
dec
push
pop
xor
push
mov
pushf
aaa
push
cmp
pop
push
addr16
mov
mov
ret
cli
lret
es
inc
cmp
ja
fisttpll
pushf
or
or
in
inc
mov
icebp
jg
cmc
jnp
sbb
repz
cwtl
dec
inc
sahf
cltd
xorps
fwait
or
mov
rcrb
push
icebp
mov
outsl
push
jbe
js
inc
popa
je
aaa
cltd
and
icebp
pop
cmp
or
mov
xor
pop
inc
push
jmp
push
mov
or
lret
push
fld
ficoml
add
sbb
ja
subb
xchg
mov
test
mov
bound
fdivrp
push
icebp
cmc
loopne
sub
mov
push
int3
scas
and
sub
push
addb
arpl
shll
mov
aaa
test
scas
inc
pop
pop
xor
dec
jne
ss
push
shl
mov
jmp
out
inc
mov
inc
test
adc
rcr
fcoml
push
adc
add
insb
repz
pop
popf
xchg
aam
in
jge
outsl
daa
icebp
in
push
arpl
shll
cmpsb
or
adc
imul
repz
jge
jbe
pop
aam
pop
lcall
xchg
mov
cmp
rclb
mov
jle
sub
cmp
cmp
and
pop
cmp
mov
cmpsb
push
lods
push
cwtl
out
test
inc
sbb
dec
lret
add
rol
push
push
lret
dec
cmpb
jl
push
ret
sbb
int
aaa
push
jg
mov
pop
mov
fwait
push
mov
arpl
cwtl
xchg
push
nop
mov
vxorps
shlb
mov
mov
mov
loop
dec
pop
das
idivb
mov
push
push
lea
loopne
sbb
xchg
int
es
or
jmp
sub
push
pop
or
in
xor
ja
push
clc
sbb
dec
push
lret
jne
pop
adc
xlat
pop
push
into
add
aaa
mov
dec
push
or
insb
sub
sti
sub
repz
jnp
iret
push
jmp
push
dec
lock
sbb
sbb
pushl
cmp
sub
int
inc
adc
or
imul
mov
push
pop
or
call
inc
fisttps
add
xchg
mov
push
mov
rorb
hlt
es
addr16
add
mov
push
push
fwait
aaa
in
sub
cmpsl
inc
add
add
pushf
ja
out
dec
push
stc
pop
icebp
fcomi
arpl
push
jb
mov
fwait
mov
inc
rorb
jne
loope
push
ret
and
jge
push
cwtl
mov
add
es
and
ljmp
popa
and
mov
popf
fwait
dec
je
and
rcrb
pop
pop
movl
xor
cld
inc
inc
jp
xchg
cltd
push
repnz
cmpsl
push
dec
mov
out
pop
mov
or
add
push
cmp
cmova
push
or
cmp
mov
adc
push
mov
daa
dec
aaa
std
push
mov
fisubrl
scas
sbb
cmpsb
dec
pop
sub
mov
adc
push
pop
cmp
xchg
iret
sub
es
inc
push
push
push
cmp
fnstsw
pusha
push
jge
xchg
and
dec
add
rcr
clc
cwtl
gs
xor
cmp
push
in
decl
jo
add
outsl
imul
push
xchg
inc
ficoms
data16
outsb
scas
cmpsb
testl
inc
in
pusha
push
loope
pushf
pop
mov
or
xor
outsb
sub
mov
int
mov
add
das
xchg
push
movsl
and
jl
shll
lock
sahf
push
push
subb
gs
fisubs
das
sbb
gs
push
inc
ljmp
hlt
sarb
inc
mov
lods
and
xor
outsb
cmp
sub
adc
or
lcall
js
std
pop
mov
clc
js
inc
aaa
shrl
and
or
xor
cltd
stos
mov
mov
lock
pop
push
cmp
out
aas
ss
insl
or
push
dec
sahf
lret
scas
out
xor
lcall
ficoml
mov
jne
xchg
shrl
out
adc
imul
mov
ret
adc
cmp
mov
shl
incb
jecxz
lds
sbb
push
fistpll
sahf
aaa
cmp
or
xor
loopne
xor
pop
ffree
test
jmp
out
xor
cwtl
scas
popa
int3
dec
and
xchg
or
aam
push
mov
lar
not
dec
mov
mov
push
push
fcomp
xchg
fistpl
filds
mov
rorb
pop
loope
pop
out
jmp
mov
sti
nop
cmpsb
nopl
fwait
mov
ficoml
pop
inc
pop
les
insb
mov
dec
clc
pop
add
push
jg
xor
mov
rclb
out
es
movsl
nop
scas
inc
adc
push
mov
adc
js
dec
cmp
mov
std
movsl
push
cmpsl
mov
sub
cmc
aas
pop
xor
je
insl
scas
iret
xor
mov
aas
push
sub
jge
shrl
add
test
lahf
xlat
mov
push
ret
out
mov
mov
inc
fsqrt
stos
sbbl
hlt
cmp
ja
fld
mov
pop
pop
fabs
mov
xor
ret
xor
pop
mov
xchg
dec
mov
and
repnz
pop
push
sbb
lret
inc
test
and
jb
leave
xchg
loope
ret
gs
dec
xor
data16
xor
xchg
loope
xor
shlb
cwtl
cmpsb
iret
out
sub
outsl
push
je
daa
aas
and
sahf
lods
jl
loope
mov
dec
scas
shrb
mov
lods
mov
cwtl
rcll
call
in
mov
outsl
xchg
lock
negb
inc
fs
je
repz
pop
scas
push
repnz
push
pop
jo
mov
adc
idivl
mov
mov
push
sbb
adc
push
fisttps
rorb
dec
xchg
sub
out
jp
cwtl
psubusb
inc
push
xor
cli
push
mov
push
jae
mov
mov
push
pop
addr16
xor
push
insb
mov
cmp
pop
fildl
sub
and
jmp
mov
jb
shll
xchg
fisttps
pop
aam
adc
inc
data16
and
cmc
pop
jl
dec
adc
pop
fistl
int
sbb
add
pusha
cmpsl
adc
xchg
jne
sbb
jo
pop
lahf
push
adc
pop
cwtl
clc
xchg
sbb
mov
test
pop
push
fsubrs
push
and
inc
sub
jecxz
mov
cmp
xor
gs
lods
xchg
roll
mov
leave
adc
dec
xchg
dec
cmpsb
js
sbb
pushf
adcb
sti
jg
aaa
push
jno
sahf
shl
int
pop
dec
xchg
adc
xor
pop
les
adcb
dec
jmp
out
outsb
cmp
pop
dec
test
mov
xor
sub
or
aaa
pop
lret
inc
pop
lods
dec
or
pop
ficompl
add
jbe
dec
in
fadd
pop
adc
jge
inc
mov
testl
pop
lahf
test
push
push
mov
xor
jge
in
mov
push
add
push
push
cmp
daa
mov
sub
push
cld
dec
scas
xchg
adcb
add
int
aas
mov
push
lock
jle
inc
pop
cmp
xchg
andb
push
fidivrl
sbb
test
inc
mov
mov
orb
scas
out
jne
test
daa
loop
aas
push
jb
mov
push
push
inc
mov
fists
push
test
daa
xchg
idivb
nop
cwtl
dec
mov
int
add
aaa
mov
pop
cmp
out
mov
lcall
xlat
push
std
push
xchg
sub
add
in
sbb
outsb
xchg
sub
cltd
push
int
mov
ljmp
mov
cmpsl
cmp
fsts
icebp
iret
sub
out
inc
pop
or
leave
orl
push
push
scas
aas
cmp
pusha
jo
mov
call
cmc
and
xor
push
repz
adc
ds
cli
jecxz
cmp
aad
rcrl
cld
in
repz
mov
insl
push
into
cmp
cld
cmc
mull
mov
add
xchg
testl
sbb
push
mov
movsb
cmp
call
pop
dec
push
enter
mov
lcall
adc
pop
dec
jae
xchg
movsl
pop
adc
lret
pop
loope
rclb
push
or
dec
mov
insl
mov
addr16
pop
fldenv
mov
pop
push
or
sbb
xor
iret
test
dec
or
out
jno
imul
add
mov
push
insb
xchg
dec
aam
inc
push
add
push
lahf
jmp
fcomps
mov
pop
divl
mov
sbb
fstl
xchg
lods
repnz
xchg
mov
fldt
test
inc
and
cmp
or
mov
push
fidivl
inc
or
push
arpl
imul
inc
dec
repnz
outsb
mov
lahf
out
divl
lret
pop
sbb
fidivs
and
dec
push
dec
loop
outsb
fistps
and
adc
cmp
std
pop
loop
addl
repz
in
inc
inc
sub
jp
pop
xor
mov
jg
popf
push
add
inc
dec
xchg
adc
pop
rcll
aad
icebp
adc
xchg
fwait
repz
and
inc
dec
mov
popa
cmp
lds
pop
inc
cmp
cmp
push
xor
lock
push
mov
cmp
push
leave
pop
push
iret
push
fistpl
hlt
jmp
addr16
roll
push
xchg
xchg
mov
shll
push
in
pop
fmuls
cli
push
stos
xchg
outsb
jle
ljmp
push
fstl
push
lcall
hlt
lea
xor
xchg
imul
push
daa
pop
or
jne
movl
pop
orb
xchg
ret
mov
fwait
aaa
jno
into
push
xchg
push
stc
adc
jbe
cmp
push
add
popf
iret
rol
mov
push
cli
jns
pop
aam
push
lock
mov
test
pushf
xor
mov
mov
insb
cmp
popf
fisubrs
pop
leave
inc
aaa
mov
or
push
jle
add
mov
xor
push
cmp
xchg
and
jg
xchg
and
out
add
mov
push
loope
lea
mov
data16
xchg
and
xchg
jmp
pop
push
or
popa
jecxz
and
sub
aas
adc
dec
push
sbb
dec
stc
pop
cwtl
inc
mov
mov
add
xchg
ds
push
pop
inc
push
push
xchg
iret
gs
jg
sub
and
pop
push
icebp
pop
mov
pop
push
jecxz
xchg
xlat
push
in
adc
pop
push
in
mov
sar
pop
or
ret
or
push
mov
lahf
fists
jmp
pop
out
pushf
push
adc
pop
add
clc
cmpl
xor
sbb
push
mov
push
sub
ljmp
bswap
shll
push
push
fdivs
pop
test
jg
lds
test
fcoms
pop
pop
jbe
out
call
inc
mov
sub
mov
jp
xchg
cmpsb
add
push
clc
jl
push
dec
push
add
xchg
mov
and
insb
movsl
pop
mov
ss
push
popf
and
push
addr16
popa
mov
shll
adc
hlt
push
mov
dec
mov
sahf
mov
push
rclb
lret
xchg
push
and
enter
aas
ja
add
inc
pop
cwtl
out
add
pop
movsb
xchg
mov
arpl
lret
pop
shrb
test
out
pop
push
out
cmp
jbe
mov
ja
loop
in
push
out
outsl
out
xor
mov
jmp
mov
add
inc
cmp
clc
mov
mov
insl
sub
mov
inc
xlat
aaa
dec
xchg
push
push
pop
dec
mov
sbb
aam
sub
adc
fcoml
lea
pop
out
or
jb
xchg
add
push
xlat
and
pop
lods
ret
dec
push
into
push
popa
pusha
emms
pop
std
push
fistpl
or
daa
jne
jmp
cwtl
or
je
test
mov
cld
movsl
jmp
movsb
push
fcoms
mov
enter
and
pop
dec
aaa
pop
in
das
mov
pop
inc
push
lcall
es
mov
mov
loop
push
scas
adc
lock
pusha
in
mov
mov
dec
mov
jno
dec
sub
aam
xchg
push
push
xchg
call
push
pop
loop
je
jbe
ret
mov
jmp
arpl
adc
jns
mov
mov
aad
jnp
les
sub
cmc
es
push
pop
cltd
xlat
xchg
add
pop
adc
rcrl
sar
jno
push
dec
push
ljmp
sbb
xor
cwtl
scas
sahf
lds
mov
mov
and
inc
fs
lds
std
test
idivl
xchg
push
sub
xchg
sbb
pop
loope
adc
sbb
lcall
push
bound
cmpsl
xor
inc
scas
xor
push
sbb
or
push
fsubl
lcall
push
lds
jmp
xchg
push
mov
test
xor
test
and
pop
mov
mov
mov
mov
rorl
dec
addr16
cmp
lahf
shl
sbb
adc
sbbb
ficoms
add
and
dec
shr
or
sahf
xor
mov
hlt
fldt
cwtl
mov
stc
cltd
adc
flds
negl
dec
mov
push
add
ss
dec
xchg
out
cmp
dec
dec
add
pusha
adc
xchg
adc
popf
cld
pop
mov
cltd
dec
mov
jmp
movsl
pop
mov
pop
xlat
xchg
emms
sbb
pop
push
scas
cmp
push
dec
pop
xchg
shrl
mov
aam
gs
data16
shrb
nop
stos
xor
sbb
cmp
repz
test
adc
adc
movsl
pop
xchg
mov
mov
mov
sti
push
pop
mov
scas
and
push
or
shll
daa
addr16
stos
lret
push
fmulp
popa
mov
test
imul
inc
movsb
rcll
ja
push
jmp
adc
push
push
lcall
sahf
cmpsl
pop
mov
ret
xchg
aad
push
loopne
cmc
popa
lods
or
jb
xchg
cwtl
adc
das
dec
test
xor
xchg
lahf
rclb
outsl
imul
push
pop
mov
mov
cs
jb
fldenv
push
addl
loopne
repz
sub
mov
mov
loope
xor
jno
adc
push
hlt
xlat
push
or
and
mov
push
mov
lahf
mov
repz
shrl
repnz
mov
aas
mov
dec
cltd
sbb
movsb
test
aas
ret
inc
sarl
outsl
mov
add
and
test
out
in
iret
pop
stos
outsl
pop
xchg
sub
adc
lcall
scas
outsl
pop
aas
push
fadds
test
in
mov
xchg
push
sarb
push
aam
push
rclb
and
movsb
inc
pop
jp
dec
testl
add
push
dec
mov
adc
test
repz
out
arpl
cmc
pop
pop
mov
mov
dec
cmp
idivb
push
push
shrb
cmpsl
and
jmp
push
and
cmp
pop
addr16
mov
aas
push
enter
mov
test
test
pop
mov
mov
cmpsb
and
dec
ljmp
lcall
push
rol
pop
adc
pop
jb
fcompl
jb
lea
push
sub
mov
mov
push
scas
inc
es
insl
push
sub
shlb
cmp
loopne
daa
insl
jl
in
int3
sahf
pop
sbb
adc
pop
push
or
or
xchg
add
adcl
ja
into
push
clc
push
sbb
not
dec
sub
jg,pt
mov
daa
push
mov
sbb
push
movsl
cmp
sub
adc
repnz
cmp
adc
jae
pop
testl
loop
adc
jmp
xchg
xlat
mov
iret
push
xor
dec
movb
pop
gs
ficompl
xlat
scas
loop
fsubl
jnp
incl
cmp
push
js
mov
jecxz
out
push
icebp
jbe
pop
add
ret
mov
adc
push
push
cmpsb
inc
lds
inc
pushf
sti
pop
in
dec
push
mov
jbe
sub
pop
xor
imull
adc
adc
mov
fwait
push
jl
add
clc
and
ret
push
sub
cwtl
adc
pop
add
and
rclb
cwtl
push
test
dec
and
push
jle
scas
cs
push
repz
lock
sti
xor
or
jge
push
mov
dec
mov
out
stc
stos
lea
insl
xchg
scas
adc
fcoms
and
test
in
adc
sahf
push
lock
push
sti
push
jmp
xor
jb
inc
jge
push
push
mov
pop
les
adc
push
push
push
add
mov
mov
movsb
xchg
divl
int
push
jle
jge
adc
mov
je
scas
add
mov
xchg
ja
push
shll
sbb
xchg
inc
mov
pop
test
jae
dec
iret
add
mov
je
nop
aas
push
ljmp
or
call
imul
aaa
dec
hlt
popa
mov
jmp
push
movl
mov
je
hlt
lods
cmp
jbe
gs
adc
ficomps
stos
cwtl
aaa
cltd
sahf
stc
push
movsb
mov
fwait
outsb
cmpsb
stos
adc
sbbb
dec
push
xor
jne
adc
sbb
inc
stos
daa
jmp
out
mov
bound
jmp
imul
or
jmp
pop
popa
push
int
test
pop
and
sbbb
es
int
push
push
pop
pop
cmpsl
sbb
insl
insb
xchg
nop
mov
jbe
loop
inc
repnz
ljmp
push
ss
fs
pop
jb
fwait
bound
push
mov
xchg
pop
pop
pop
lahf
pop
cs
push
fildll
adc
push
movsl
imul
xor
jmp
push
adc
hlt
fcmovbe
lock
push
or
add
jle
aas
fadds
mull
out
mov
xor
mov
mov
push
shll
sbb
push
push
mov
icebp
dec
mov
das
push
pop
xchg
mov
or
leave
in
pop
in
ss
and
sbb
test
cmp
fmull
and
push
sahf
xchg
push
filds
aas
fstl
inc
jge
popa
mov
jo
or
push
push
mov
mov
daa
ljmp
pop
out
outsl
js
pop
pop
mov
mov
sub
and
mov
push
push
push
scas
sbb
fdivrl
adc
pop
xchg
jne
cwtl
push
jbe
pop
pop
cld
mov
enter
inc
dec
mov
je
or
fwait
cli
cmp
js
mov
addr16
pop
lods
xchg
imul
in
test
xor
push
fdivp
push
enter
leave
pop
jp
xchg
andl
mov
and
inc
jecxz
test
ss
add
jo
and
push
pop
es
sbb
rorl
test
scas
das
push
jne
cmp
add
cvtps2pi
addr16
jo
ja
or
pop
sbb
push
lret
inc
xchg
mov
add
cs
sldt
std
xchg
mov
push
mov
inc
push
mov
cmp
jecxz
add
fists
push
stos
lret
jnp
pop
push
xchg
aad
cld
ja
rcl
xchg
dec
ja
out
cmp
loop
sarb
and
push
cltd
mov
jb
rcl
out
pop
movb
xchg
dec
mov
mov
pusha
push
loope
mov
pop
repnz
mov
into
and
inc
cmp
adcb
mov
sub
out
mov
ret
rcrb
mov
xchg
enter
scas
push
aam
inc
mov
lock
xchg
out
add
ficompl
push
outsb
fdivrl
push
mov
int3
rol
out
xchg
xchg
addb
add
paddq
push
inc
sahf
movsl
or
or
dec
rcll
dec
jne
adc
push
adc
mov
icebp
les
push
js
mov
push
xchg
or
arpl
sub
or
cmp
dec
fsts
mov
decb
leave
nop
roll
sar
mov
jecxz
fidivrl
data16
push
jae
scas
mov
xor
pop
aad
jecxz
pop
push
mulb
fldenv
sahf
sbb
jne
adc
popf
inc
test
int3
push
mov
fld
neg
insb
mov
fsts
addr16
movsl
outsb
lea
rcll
imul
mov
pop
mov
cmp
sbb
mov
xchg
test
push
out
jnp
in
sub
push
pop
ffreep
add
xchg
push
xor
repz
cld
pop
mov
push
test
push
lods
sbb
ror
cmc
notb
pop
pop
pop
dec
imul
pop
sbb
imul
pop
pop
xor
icebp
rcll
loope
lahf
js
inc
lcall
mov
cwtl
xchg
sbb
aas
ficoml
rcrb
add
cmp
sbbb
push
mov
lret
out
scas
into
push
icebp
cltd
pop
cmc
mov
ficomps
fdivrl
mov
pop
mov
and
hlt
push
mov
nop
push
out
xchg
and
mov
push
ficomps
push
jmp
cmp
xchg
push
xor
out
mov
push
ljmp
shlb
ja
cmp
stos
loope
push
mov
mov
sub
mov
test
push
js
ja
xchg
insb
push
out
jb
rcrl
xor
adc
jmp
mov
int
xchg
loope
nop
out
add
push
call
and
sarl
roll
in
ss
orb
add
cld
push
mov
push
adc
xor
xor
push
enter
push
pushf
mov
fistps
cli
std
dec
push
xchg
mov
mov
inc
sub
loop
arpl
out
int
inc
stc
push
imul
dec
push
dec
cmp
or
pop
shlb
fucom
das
push
scas
out
aaa
dec
fistpl
mov
jo
pop
or
insb
sub
cmp
push
dec
inc
pop
out
mov
add
push
push
xor
pop
dec
jle
movsb
xchg
fmuls
mov
push
fisubrs
ret
adcb
push
mov
rcrl
lret
stos
push
adc
xchg
adc
adcb
mov
shlb
mov
sub
inc
stc
push
out
or
cmp
repnz
in
fsub
add
pop
inc
mov
les
jno
out
mov
jle
mov
cld
out
pop
pop
rclb
rorl
xchg
push
xor
rcll
lock
sbb
jnp
xchg
mov
rorb
ret
out
jbe
pop
sub
push
and
jae
jecxz
adc
add
sar
outsb
mov
cmc
xchg
call
wbinvd
pop
mov
aaa
cmp
loope
lret
push
adcl
cmpsb
std
push
scas
es
das
int
add
ja
jo
pop
jmp
mov
fists
jl
std
pop
sbb
rcl
out
ja
mov
pop
sbb
enter
movsb
push
pop
rorb
icebp
andl
dec
std
cmp
xor
inc
ss
adc
mov
outsb
xchg
dec
call
cmpsb
nop
insb
out
mov
stc
jmp
call
or
gs
std
aas
scas
xchg
add
pop
xchg
lret
lods
or
fstpt
pop
push
jg
mov
es
mov
lret
pop
mov
ror
mov
push
addl
sarl
and
pop
mov
push
stc
cmpsl
addr16
sti
xor
repz
lcall
aad
pop
mov
and
push
mov
sahf
cmc
test
inc
xor
sbb
inc
roll
pop
mov
call
inc
shld
aaa
aam
mov
fistl
lock
and
add
adc
aas
ljmp
xor
push
fnstsw
pop
cld
in
popa
mov
mov
mov
ja
push
push
arpl
xlat
pop
xchg
cmp
xchg
aaa
fsubrp
pop
insb
les
sahf
and
or
cmp
xchg
imul
cmp
stc
es
jns
xchg
popa
push
jle
enter
jl
repz
mov
fbstp
call
xchg
adc
push
adc
fs
jmp
cmc
cwtl
dec
rclb
push
subb
daa
mov
inc
pushf
ret
or
leave
mov
adc
push
loop
cli
call
cwtl
mov
mov
stos
sti
push
faddl
imulb
xchg
xchg
fcoms
movsl
test
lcall
daa
cmpsb
hlt
lods
ficomps
xchg
and
cmp
jge
insl
xchg
xchg
pop
loop
ret
mov
je
into
imul
cmp
xchg
or
fcoms
cmp
into
sbb
xchg
pop
or
cmp
jbe
out
pop
repz
mov
aaa
daa
push
mov
cmpsl
test
mov
aaa
sbb
pop
cmp
ja
or
push
ja
cmpsb
xchg
lret
or
cmp
dec
lret
cmp
fists
xchg
int
and
push
mov
pop
pmaxub
mov
or
pop
add
decb
outsl
les
daa
aaa
xor
pop
cld
cmpsb
pop
addr16
lods
dec
sahf
dec
pop
xor
inc
andb
std
arpl
inc
push
test
push
cmp
out
leave
adc
push
lods
mov
push
aas
push
aam
push
mov
pushf
sbb
shll
mov
push
and
jns
sub
mov
and
mov
dec
mov
pop
add
in
jmp
mov
in
jl
popf
stc
repz
push
adc
dec
mov
pushf
and
ja
movsb
jo
ret
add
call
or
pop
add
repnz
push
outsb
fdivs
push
in
jmp
ds
icebp
xchg
je
loopne
add
mov
loop
xlat
notl
ds
ljmp
xchg
mov
sub
push
or
jecxz
sub
or
mov
dec
sti
xchg
fiadds
push
adc
aaa
sub
push
mov
push
fucomp
sub
pusha
push
movsb
fs
push
push
sub
push
lret
sbb
rcrl
lods
bound
out
push
or
push
fimuls
mov
push
lcall
jae
and
pop
jb
jne
addr16
mov
xchg
mov
mov
out
out
test
int
fimuls
add
or
push
jbe
push
pushf
fdivrp
ficoml
jle
xchg
xor
xchg
inc
int3
or
das
push
or
ret
push
push
push
mov
push
mov
leave
xchg
incb
mov
addr16
push
aam
add
js
mov
lret
xchg
add
jns
pusha
jb
loopne
int3
push
pop
ja
pop
or
in
arpl
aaa
adc
sbb
hlt
repz
notl
data16
ret
jo
cmpsl
lret
repnz
pop
xchg
lea
pop
lahf
movsb
loope
popf
push
push
mov
add
push
es
xchg
dec
xor
mov
out
ficoml
push
out
mov
in
jb,pn
clc
xchg
push
jno
push
pop
pop
sarb
push
fwait
sbb
push
jnp
mov
lret
cli
mov
inc
sub
push
cmp
je
sub
cmp
xchg
ljmp
lds
ljmp
out
out
loope
into
jmp
cli
and
xor
xchg
test
pop
mov
sbb
sbb
shrl
aaa
icebp
jp
scas
loopne
ja
outsl
push
mov
imul
push
pushf
insb
xchg
leave
jno
repz
xor
es
aas
push
pusha
outsl
daa
fnstcw
inc
xchg
jb
inc
mov
mov
fisttpll
adc
inc
jecxz
data16
mov
or
xchg
iret
xor
fcmovnbe
out
push
pop
lret
sbb
popf
out
fsubrs
jmp
and
push
pop
inc
in
adc
push
pop
pusha
sbb
ljmp
out
adcb
and
inc
test
adc
ficomps
xchg
push
and
push
xchg
ss
mov
push
fisubrs
xor
bound
pop
fldlg2
inc
and
pushf
ss
test
xchg
pop
adc
sarl
adc
out
push
or
or
fimuls
push
sub
sbb
or
push
push
lret
mov
inc
leave
xchg
sub
push
sub
lahf
inc
fbld
cmp
mov
jno
xchg
repz
cmc
into
shll
fcom
adc
sbb
lods
cmp
push
out
jno
fldcw
sarl
sub
push
adc
xor
in
mov
pop
xlat
sbb
outsl
fwait
sbb
push
insb
push
repnz
mov
nop
shll
cmp
test
mov
pop
dec
loopne
pop
inc
sbb
fmuls
push
sbb
xor
sti
lahf
adc
xlat
scas
jae
or
pop
clc
push
les
jle
mov
nop
vmread
pop
sbb
mov
nop
mov
push
nop
scas
xor
sarl
cld
scas
pop
push
test
mov
hlt
adc
or
fcmove
out
repnz
sarl
push
mov
sbb
loope
fnstenv
test
and
push
imulb
xchg
adc
sbb
sbb
sarb
xor
inc
cmp
xchg
xchg
pop
dec
aam
inc
xchg
push
push
nop
icebp
mov
and
cmp
insl
or
mov
mov
insl
jo
lock
add
insb
pop
addr16
cld
sbb
dec
outsl
bound
inc
icebp
loop
push
xor
dec
pop
mov
adc
sbb
and
cmp
jno
inc
mov
pop
cwtl
test
cmp
movsl
rolb
nop
jb
dec
sub
lret
push
int3
sbb
mov
push
das
cmp
add
jle
jl
pop
adc
lods
imul
iret
or
negl
or
cmpsl
adc
mov
mov
or
fcom
xchg
insl
jbe
jae
dec
push
loope
pop
sbb
int3
or
imulb
adcl
fldt
mov
jecxz
stos
imul
cmpsb
push
push
pushf
cs
lods
xchg
sub
bound
push
sbb
push
ret
dec
sub
pop
jg
push
mov
jmp
mov
test
lods
sbb
cmp
inc
push
daa
out
ja
data16
fyl2x
inc
and
pop
mov
fucomi
mov
push
roll
dec
bound
push
aaa
pop
cwtl
pop
lds
std
push
subb
cmpsb
adc
mov
push
jbe
mov
sbb
dec
and
in
pusha
cmp
mov
call
popf
sub
icebp
fists
inc
pop
inc
pop
bound
jae
push
mov
xor
push
nop
enter
pop
notb
fisubl
cmp
dec
push
push
pop
sbb
hlt
inc
mov
and
in
bound
rcl
dec
into
push
fwait
pop
push
adc
in
inc
cmp
push
cmpsb
movsl
scas
cmp
inc
imul
push
or
test
cmp
push
lods
andb
ret
aam
dec
fildl
mov
jno
pop
mov
pop
fs
sub
mov
pop
pop
lret
test
push
or
lahf
arpl
fcoml
dec
clc
daa
add
icebp
jecxz
xchg
xor
mov
mov
push
stos
pop
jp
and
mov
addr16
roll
pop
cmpb
push
insb
pop
in
xchg
push
sub
sub
gs
mov
pop
daa
xchg
lods
mov
ja
dec
mov
or
push
adcb
push
xlat
pop
push
lret
xchg
nop
mov
mov
into
cmc
outsl
mov
push
aad
adc
jae
mov
push
lcall
lods
or
mov
in
xchg
push
loop
stc
pop
mov
stos
sub
xlat
push
push
in
mov
push
mov
inc
jb
xchg
leave
sub
xchg
push
add
popa
lock
or
xlat
test
in
addr16
in
aad
and
mov
mov
jne
ret
fists
push
cmp
jp
enter
movlps
or
scas
popf
pop
xchg
mov
pop
fldt
sbb
jbe
cmp
cmp
mov
jge
push
xor
and
ficoml
sbb
ss
pop
je
cmp
pop
mov
out
push
out
rclb
pop
loopne
sahf
push
push
mov
mov
divb
pop
into
outsl
mov
rol
add
mov
push
dec
loope
addr16
mov
adc
sub
lcall
lock
push
ret
add
loop
dec
test
push
and
icebp
sub
sub
push
ljmp
and
dec
fiadds
xchg
xlat
xchg
ds
mov
bound
lock
mov
cmpsl
jge
and
addr16
push
cmc
sub
in
sub
cwtl
icebp
xchg
pop
mov
jmp
push
sbb
insl
and
push
stos
cwtl
daa
js
fists
add
push
mov
mov
xchg
shrd
add
push
mov
sbb
xchg
outsb
scas
sub
adc
xchg
aaa
cwtl
sub
out
lret
outsl
xchg
push
fst
pop
dec
or
sbb
movsl
gs
push
cmp
ds
pop
in
test
xor
jns
test
or
xor
pop
sub
push
loopne
test
mov
lcall
mov
pusha
inc
rorb
pop
mov
dec
loop
sbb
push
mov
das
icebp
je
ds
mov
clc
push
cmp
in
fisubs
pop
fdivrs
mov
sub
cld
ficoml
or
xchg
fisubrs
fstpl
mov
ja
mov
andb
mov
cmp
icebp
pop
jae
mov
icebp
push
aaa
mov
inc
sbb
in
jge
repnz
add
inc
xchg
inc
xchg
lahf
push
xchg
clc
fnstcw
pop
subb
lcall
aad
pop
addr16
cmp
mov
sub
adc
shr
pop
mov
adc
or
jecxz
lret
inc
ljmp
add
push
aas
push
dec
cmpsb
pop
mov
shrb
mov
mov
cwtl
mov
fistpl
push
movsl
call
push
cmp
mov
cltd
pop
mov
pop
rclb
jge
xor
lock
std
stos
call
cwtl
sti
and
in
ljmp
xchg
mov
cmpsl
pop
push
movsl
mov
adc
stos
outsl
mov
push
ficoml
ja
cld
rclb
push
push
test
xchg
mov
mov
push
ljmp
cmp
jne
mov
jp
or
push
inc
frstor
push
push
pop
out
xchg
lahf
into
es
pop
rorl
mov
cli
pop
xor
nop
bound
cmpsl
int
rcrl
mov
and
push
cmp
pop
pop
sbb
xchg
or
adc
sub
test
jns
je
mov
lock
aam
adcl
push
lahf
mov
fsts
dec
out
cwtl
ljmp
cmp
sarb
push
insl
sub
rcll
iret
addr16
add
and
cmp
ret
sub
cmpsb
inc
push
aad
and
push
cmc
push
mov
pop
jp
inc
popf
sahf
idivl
jne
cmp
ja
inc
sub
inc
aaa
sbb
push
pop
xchg
fwait
sbb
cwtl
sbb
pop
cld
pop
push
sub
mov
fsubrs
mov
daa
orb
mov
push
xchg
sbb
aad
leave
or
push
ret
dec
jb
and
xor
adc
push
and
push
rorb
inc
aad
sub
push
fincstp
push
cmp
push
lea
testb
pop
mov
lock
popf
leave
out
psubq
stos
mov
arpl
pop
sbb
dec
int
fadds
cltd
push
cmp
stos
repnz
add
push
lds
bound
scas
pop
lret
xchg
cmp
popf
mov
jno
ret
sub
push
jg
add
mov
jnp
jo
enter
pop
jbe
stc
ret
push
scas
cld
out
jb
add
adc
sbb
mov
loope
lods
adcl
das
cs
negb
push
sbb
repnz
movsl
test
call
push
xorl
sahf
ljmp
cltd
inc
push
decl
push
dec
jle
inc
inc
insb
loope
out
ja
aam
icebp
xorl
pop
lret
das
push
adc
lahf
insb
mov
push
aas
jae
xor
pop
push
mov
icebp
push
mov
cmp
push
inc
sub
mov
ss
xchg
push
jmp
push
lods
mov
push
sbb
mov
and
sahf
mov
jecxz
push
adc
push
inc
jg
push
lahf
repz
and
fwait
push
pop
xchg
aad
jnp
adc
push
pop
sub
push
aad
pop
add
jbe
test
dec
rorb
dec
xor
ds
je
push
sub
sbb
hlt
sub
js
mov
cmpl
add
adc
mov
sbb
jnp
ficoml
cltd
rcll
xchg
pop
mov
and
xchg
aaa
mov
push
cld
iret
mov
mov
sub
fadds
mov
fiaddl
popf
mov
shrl
and
sahf
push
rep
mov
test
cltd
or
aaa
mov
les
in
cmpl
cmp
jne
or
add
cmpl
stos
xchg
pop
inc
cmpsb
std
sarl
syscall
inc
pop
jnp
jle
push
pop
data16
jbe
adc
push
insb
mov
mov
or
inc
bound
clc
daa
push
pop
jo
ljmp
mov
ret
fsubrl
jge
cld
ja
out
dec
pop
push
aad
pop
push
mov
ds
mov
mulb
fwait
test
mov
xchg
xchg
fbld
inc
adc
js
ds
push
ja
or
in
push
call
ljmp
mov
and
xchg
add
push
push
dec
rorb
mov
test
add
insl
fcoml
mov
push
das
sub
inc
xchg
fnstenv
daa
add
movsl
mov
or
insb
sub
cld
push
xchg
pop
imul
jo
sbb
adc
cwtl
and
out
jge
out
xchg
push
clc
jnp
mov
rclb
rol
push
jl
aaa
mov
ja
pop
xchg
ljmp
push
inc
xor
daa
sub
inc
addr16
out
lcall
sub
cld
push
aad
sbb
subb
push
inc
dec
out
imul
mov
jbe
es
popa
icebp
ja
add
or
daa
pop
rorl
sub
ds
mov
lcall
pop
test
mov
faddl
leave
insb
push
adc
sub
lahf
push
push
jmp
inc
xor
push
mov
clc
adcl
hlt
test
mov
inc
push
iret
pop
cwtl
ss
xor
add
jl
push
lods
sbb
xchg
sub
adc
js
mov
dec
fstp
or
hlt
xchg
cmp
movsb
outsl
dec
lcall
pop
push
rcl
ja
pop
sbbl
fnstcw
or
dec
pop
xor
pop
or
sub
mov
xor
sub
andb
add
test
fwait
cmp
ret
mov
add
push
xchg
xor
add
cli
pop
jbe
xchg
ds
mov
lahf
imul
pop
cmc
nop
scas
std
mov
xor
add
xchg
scas
xlat
and
mov
mov
mov
jae
cmp
inc
xor
fwait
xchg
jg
cmp
jecxz
nop
stos
pop
neg
mov
add
inc
rcr
xor
loop
nop
inc
jnp
fnstenv
loope
ljmp
push
xor
pop
jne
int
and
lods
cs
pop
sbbl
mov
stc
or
adc
sar
inc
enter
clc
sub
out
sahf
repz
mov
adc
call
push
push
cmpsl
sbb
fstpl
mov
cmpsl
fcomip
std
jp
insb
pop
shrl
out
movsl
lds
push
mov
inc
int
mov
sbb
cmp
aad
pop
dec
outsb
addr16
mov
pushf
or
sub
cs
repnz
push
add
add
xlat
mov
fldt
or
xor
mov
push
mov
or
dec
aad
mov
mov
pop
xchg
pop
jge
push
jo
out
inc
imul
push
test
cmp
or
push
dec
out
call
scas
cmp
ss
cmp
and
mov
ret
test
lahf
pop
out
popl
and
pop
ficompl
ljmp
cmc
outsb
push
popf
dec
pushf
push
inc
push
add
xchg
bound
es
inc
add
rolb
jle
xor
cmp
addr16
imul
jno
jae
fs
cltd
jmp
push
lds
push
loopne
sub
push
rorl
call
cs
mov
add
and
sbb
or
add
add
lds
lods
pop
and
jae
mov
add
or
adc
movsl
sti
or
sbb
das
cmpsl
pop
and
aaa
inc
mov
clc
cmp
ja
call
imul
pop
aad
les
pop
jp
push
xor
daa
mov
and
fcoms
cmp
lods
sub
pop
mulb
ja
xchg
out
ss
xchg
push
add
mov
push
icebp
mov
push
push
xchg
jns
mov
push
inc
sub
pop
mov
jo
push
sbb
xor
fs
xchg
mov
aam
test
or
jne
aaa
jbe
jp
js
inc
mov
leave
mov
lret
mov
frstor
movsb
sahf
adc
mov
sub
adc
dec
adc
mov
rorl
ficomps
cmpsb
hlt
push
imul
lss
push
aam
out
cmp
rorl
pop
mov
lret
push
ret
mov
push
push
cmp
adc
add
addr16
sub
fs
adc
sbb
daa
in
xchg
cwtl
mov
jb
scas
icebp
loop
lcall
out
sub
mov
rolb
push
int
ss
jg
sbb
jge
xchg
push
pop
xor
mov
push
andb
xchg
push
push
into
or
iret
addr16
pop
idivl
test
cmc
add
sbb
repnz
cmp
enter
push
fdivp
pop
test
push
test
imul
sbb
and
xchg
insb
xor
stos
and
sub
mov
jmp
inc
jne
jle
cmp
addr16
rorl
lret
out
pop
movsb
test
xchg
in
test
test
decb
and
pop
fdivs
sub
test
aad
jb
repnz
pop
push
mov
enter
pop
mov
stos
sub
inc
mov
orb
ja
arpl
push
or
int
imul
push
jns
or
inc
jo
sahf
adc
aam
ds
hlt
inc
push
push
pop
out
jno
popl
pop
fiaddl
dec
sbb
cmp
xchg
pop
mov
xor
add
and
mov
pusha
add
imul
cmp
and
adc
cmp
ficoml
or
ror
jmp
addr16
addl
push
mov
and
push
mov
jmp
mov
out
or
sub
adcl
jne
inc
cmp
movsl
outsb
mov
in
pop
stos
icebp
lea
popf
xor
xchg
int3
imul
dec
xchg
pop
push
mov
call
ret
sub
loopne
inc
dec
lods
dec
sub
cli
loopne
lcall
jge
add
aas
jle
lret
cltd
push
xor
cmp
stos
push
outsl
jmp
adcl
xchg
pop
call
addr16
rolb
xor
movsb
ficoms
test
mov
sbb
inc
fdivr
push
or
call
push
sbb
mov
or
add
mov
pop
addr16
lret
push
xchg
test
push
hlt
insb
popf
rep
inc
out
clc
mov
push
je
iret
push
pusha
nop
ljmp
jns
dec
pop
mov
stos
pop
jg
int3
pop
leave
mov
bound
pop
rolb
push
cmpsl
jp
cmp
data16
lds
addl
loope
push
xchg
ljmp
in
xchg
bound
mov
push
aad
jge
xor
dec
cmpsb
push
in
iret
int
leave
xchg
mov
lock
fldenv
inc
push
clc
push
and
je
inc
inc
pop
mov
and
cmp
pusha
sub
into
clc
push
stos
push
fimull
movsb
les
js
inc
mov
mov
or
adc
sbbb
test
jo
push
fldenv
or
cs
pop
sub
bnd
pop
test
popa
push
lcall
aam
cmp
loopne
push
outsl
push
lahf
ss
push
arpl
cli
jnp
aaa
adc
dec
jle
iret
push
lods
xchg
dec
and
lcall
out
es
or
mov
je
jge
push
adc
js
pop
push
jp
sbb
push
out
jne
add
aas
mov
test
dec
jge
stos
fcoms
divl
rcll
xbegin
jmp
jno
out
push
mov
outsb
cmpsb
dec
lods
push
addr16
cmp
mov
loope
sub
pop
xor
cmp
mov
cmp
out
in
and
mull
cli
mov
in
stos
out
testl
cmp
imul
aaa
std
mov
dec
inc
test
mov
inc
je
notl
ljmp
push
imul
mov
repz
xlat
in
clc
rcll
dec
jbe
cld
lods
add
push
lods
mov
test
xor
lcall
fsubs
pop
push
repz
mov
pushf
out
xchg
push
push
jle
cmpsb
sub
jae
lret
rorb
push
xchg
sbb
mov
out
pop
xchg
pop
pop
mov
cmp
jo
push
pop
or
clc
lcall
mov
cs
pop
mov
mov
ja
sub
push
imul
push
or
jo
pop
lods
cmp
faddp
pop
xchg
clc
test
mov
jae
pop
repnz
or
xor
inc
inc
dec
cmpsl
and
add
dec
sbb
addb
adc
dec
call
push
push
psubb
pop
iret
pop
movsl
cmpsl
inc
push
roll
jecxz
clc
lock
ja
mov
mov
stc
sbb
xlat
add
dec
push
jnp
mov
mov
addr16
movsl
clc
aad
adc
jae
les
mov
fcmovu
xor
packuswb
sahf
xchg
in
sub
dec
mov
fwait
ret
sub
xor
push
jecxz
mov
adc
sub
imul
cltd
jmp
out
aaa
pop
push
sub
inc
int
push
mov
sbb
jae
test
popa
jl
test
pop
mov
rolb
lods
hlt
sbb
aas
mov
pop
push
test
ret
pusha
fistpll
adc
pushf
or
inc
mov
xchg
andl
es
mov
popa
inc
jmp
popf
xchg
jl
ror
lahf
push
xor
xchg
pop
push
aas
aam
push
mov
clc
jge
mov
in
push
bound
lods
daa
js
ja
rcrb
daa
xor
scas
jl
pop
adc
and
movsl
sub
push
fdivl
sbb
push
pop
xor
mov
pop
sti
xchg
aaa
push
push
push
fisttpl
push
movsb
mov
adcb
adc
pop
mov
mov
cs
les
push
and
push
inc
ret
jge
pop
dec
push
adc
fdiv
push
inc
lahf
xor
dec
fwait
movsb
inc
inc
aas
jo
adc
pop
rclb
xor
add
xchg
pop
and
xor
xchg
mov
add
and
push
pop
jl
fcoms
mov
popa
cmp
jge
pop
mov
jmp
lock
mov
sub
ja,pt
cmp
out
push
push
adc
not
aas
dec
or
push
xor
pop
mov
adcl
jne
dec
push
sti
push
xchg
sbb
inc
mov
mov
mov
arpl
jo
fcmovb
insb
fmul
out
or
lods
pop
inc
jle
repz
push
pop
mov
and
push
je
xchg
jge
add
push
sahf
les
mov
dec
lret
out
push
rclb
andl
cwtl
leave
lods
cmp
sahf
clc
pop
iret
sahf
andl
icebp
xor
mov
aaa
out
pop
out
cmp
push
lods
icebp
shrb
pop
fistps
or
mov
or
imul
push
inc
ficomps
push
out
sub
lret
adc
ficoms
lcall
pusha
dec
add
in
xor
sub
push
mov
cwtd
xchg
lret
or
imul
das
or
rclb
and
sub
sub
aaa
adc
mov
add
inc
int
sub
sub
fcoms
add
cmpsl
notb
mov
mov
movsb
arpl
inc
add
mov
xor
cli
bound
push
out
ljmp
push
adc
lea
push
inc
iret
pop
or
dec
xchg
cmpb
or
leave
pop
cmpsb
adcl
pop
sbb
push
push
test
cmp
aam
pop
mov
popa
inc
mov
sub
cmc
push
gs
push
mov
les
out
pop
jl
cwtl
sbb
aad
testl
insb
push
mov
cmp
hlt
xchg
xor
and
icebp
outsb
es
xchg
testb
and
push
cltd
pop
push
pushf
adc
push
add
mov
push
xor
sbb
insl
add
push
lret
dec
scas
cmp
adcb
fcomps
insb
push
fdivrl
jmp
jbe
cmpsl
push
ja
mov
pop
add
or
fsubrl
jne
or
pop
inc
testb
cmp
inc
out
shr
les
and
sub
push
mov
aaa
je
xchg
js
inc
int
push
push
cmpsb
pop
ja
or
push
inc
or
sbb
add
push
push
pop
push
adc
sub
xchg
jge
jne
pushf
push
arpl
push
ret
jbe
push
mov
addr16
lods
sbb
call
std
push
pop
xchg
push
dec
push
dec
hlt
pushf
dec
test
inc
mov
jmp
mov
aam
in
cs
inc
dec
lret
fadds
dec
add
stos
xchg
dec
lods
sub
int3
push
cmpsb
imul
xor
xor
jns
push
mov
xor
pushf
add
repz
loop
dec
push
xor
sarb
cwtl
adc
pop
xchg
inc
ret
add
popa
push
jmp
ret
xchg
inc
lock
int
pop
adc
pop
inc
enter
inc
popa
fiadds
call
out
stc
scas
sbb
xchg
hlt
push
ret
mov
sub
push
sarl
aam
fidivs
push
push
mov
imul
sbb
rcrb
cmpsl
push
mov
xchg
push
loope
push
pop
shl
mov
mov
pop
pusha
pop
aaa
pushf
fistl
add
jb
xchg
dec
push
int3
xor
xchg
sub
or
jl
push
dec
testb
push
lahf
pop
mov
adc
nop
jno
push
arpl
aas
adc
je
loope
cmp
push
in
mov
mov
push
xchg
adc
xchg
push
jecxz
insb
addr16
sbb
movsb
jl
sub
mov
pop
testb
mov
cmc
fs
sub
cli
addr16
push
les
jo
jecxz
adc
sub
hlt
cmpsl
imul
sbb
inc
mov
xlat
cltd
cmp
mov
gs
cmp
stc
lea
into
test
icebp
xor
cmp
cmp
cmpsb
inc
adc
push
ret
jno
std
test
jp
push
aas
popl
pop
sub
push
add
jge
and
lock
push
shrb
mov
das
lahf
stc
and
ret
and
pop
add
fldt
jl
rclb
andl
and
ja
jg
test
jno
inc
rclb
je
push
xor
ret
test
adc
aas
out
lea
jl
fsubrl
inc
xchg
hlt
adc
cld
sbb
icebp
fwait
cs
les
xchg
push
push
sbb
push
xchg
xor
push
xchg
xchg
fstl
xor
sbb
mov
pop
lods
test
fcoms
adc
and
and
in
push
and
xchg
stc
repnz
stos
call
add
outsb
ss
dec
test
lds
xor
mov
cmpsb
andl
xchg
xchg
sub
nop
dec
or
mov
jne
jo
mov
mov
pop
jnp
push
add
mov
push
cld
xchg
lret
mov
pop
push
xor
cmpsb
icebp
fisttpll
dec
cmp
push
sahf
xor
pop
nop
inc
xor
mov
xor
in
fstp
cmp
lret
or
xchg
add
sbb
push
flds
push
clc
call
jno
mov
andb
and
ret
push
out
inc
inc
imul
pop
xchg
mov
outsl
mov
pop
sahf
pop
jle
js
addr16
jno
mov
add
ja
sahf
fisubrl
push
mov
inc
enter
notb
roll
jle
add
push
ss
jb
push
lea
mov
jmp
mov
popa
push
mov
loope
lea
rcrb
scas
mov
push
mov
aad
dec
pop
adc
push
out
xchg
in
push
inc
test
outsb
and
pop
jne
mov
pop
and
xchg
adc
loop
mov
jnp
or
add
cmc
sub
cld
xchg
ret
pop
shll
xor
popf
adc
mov
xchg
arpl
test
or
shrl
in
inc
movl
push
xchg
dec
mov
outsl
pop
dec
xchg
shrl
addr16
scas
adc
js
nop
cmpb
loope
in
repnz
cmpsl
daa
shll
sbb
push
jl
sbb
xchg
sub
push
stos
push
cmc
dec
lea
mov
inc
out
stos
outsl
movsl
push
shll
and
test
push
fstps
add
xor
or
sahf
xchg
or
push
cmp
jae
mov
pop
outsl
dec
push
sbb
mov
sbb
lret
pop
scas
cmc
mov
push
mov
cltd
or
cmpps
lret
pop
add
push
repz
addr16
pop
sti
cmp
mov
jmp
fildl
testb
push
pop
loope
sub
aam
cwtl
sbb
mov
push
adc
xor
gs
rcl
add
jo
dec
adc
popf
pop
cmp
and
bound
push
xchg
mov
mov
xor
cmpsl
std
xor
pop
xor
sbb
dec
add
xchg
sbb
out
xlat
sbb
shll
mov
test
adc
jp
jae
jb
dec
sub
mov
cmp
pop
jns
fwait
insb
jl
repz
in
ret
jmp
push
xchg
shl
inc
xlat
leave
sbb
xor
dec
sahf
insl
push
outsb
lds
lea
shr
les
pop
cltd
dec
dec
mov
in
sbb
sbb
push
fsts
stos
mov
lcall
cmpsb
xchg
adc
cmp
push
das
decb
shlb
inc
inc
push
shl
loope
pop
adc
xor
jnp
or
fadds
jmp
push
outsl
cmp
mov
sahf
notl
addr16
shrb
pop
pop
fisttpll
push
dec
sbb
adc
push
rcrl
es
pusha
stos
sbb
leave
pop
add
and
push
mov
jne
dec
push
bound
dec
cmc
push
and
pop
pop
addr16
jmp
or
stos
pop
ficomps
fwait
es
into
das
sbb
lea
testl
push
dec
test
sub
jne
ljmp
xor
out
ja
dec
call
push
mov
loop
pop
fisubs
stos
mov
shrl
sbb
insl
add
inc
sbb
fisttpll
push
stos
cmp
outsl
outsb
inc
scas
lret
xchg
jg
sub
and
sbb
adc
sti
aam
pushf
cs
mov
mov
lods
subb
cmp
dec
pop
roll
movsl
pop
iret
scas
push
fdivrs
mov
ljmp
mov
inc
jg
inc
adc
pop
mov
lahf
test
fnstenv
push
jmp
push
mov
or
mul
mov
xchg
insl
insb
xchg
roll
cmpsb
popa
xlat
jle
pop
outsl
dec
mov
shl
cmp
inc
adcb
ja
insl
pop
enter
fstl
rorl
xchg
shl
pop
rcll
mov
aas
xchg
aas
xlat
jge
lcall
hlt
sbb
bound
loope
cmp
filds
xlat
fwait
nop
dec
mov
scas
call
cmp
aas
add
fnstcw
fdivrl
mov
pop
pop
push
lret
xchg
or
rolb
and
pop
out
fs
call
inc
rorl
mov
sahf
push
push
xchg
xchg
fistps
cs
out
sub
lahf
ss
les
mov
jns
add
push
test
ficoms
outsb
inc
fxch
fwait
jb
iret
pusha
jp
cld
rclb
jns
mov
stos
pushf
push
out
mov
mov
addr16
mov
sub
mov
nop
push
shlb
icebp
mov
in
lock
mov
dec
jae
or
das
inc
rcrb
mov
sbb
cmp
mov
jne
pop
cmpxchg
pop
push
sbbb
cwtl
xor
xchg
xchg
shl
dec
pop
and
stos
sbb
je
jecxz
or
icebp
pop
jp
iret
push
inc
daa
cmpsl
and
adc
push
mov
punpcklbw
pop
pop
lods
jge
out
outsb
roll
leave
push
mov
xchg
ds
xchg
push
scas
inc
sbbl
test
mov
popa
xchg
or
shrl
push
es
jge
adc
dec
out
cmp
sbb
addr16
mov
jge
lcall
xor
movsb
xchg
jb
jnp
xchg
pop
dec
and
add
pop
int3
filds
inc
mov
push
push
jb
cmp
jle
or
and
pop
daa
inc
aaa
push
push
fdiv
addr16
add
mov
sti
and
test
push
loop
lds
jl
and
lcall
mov
enter
lret
sub
push
fs
mov
call
pop
out
lods
cmp
jnp
xchg
ja
jb
push
xchg
jbe
add
repnz
outsb
pop
pop
loope
jp
push
cmp
push
jo
pop
leave
mov
jne
push
dec
mov
mov
fwait
jmp
fdivr
sub
dec
mov
pop
cwtl
cmp
mov
mov
out
test
fisttps
adc
jge
inc
or
rcl
push
insl
xor
sbb
xchg
xchg
push
xor
mov
sti
in
ja
je
mov
or
push
sahf
cmpb
test
popf
cli
pop
mov
pop
aaa
cld
xchg
sbb
xor
sub
test
sub
sti
mov
or
mov
push
repnz
int3
inc
cmp
sbb
xor
push
jbe
lods
int3
addr16
add
hlt
cmpsb
cmp
mov
push
push
in
dec
test
aaa
sbb
add
js
fiaddl
pop
jle
dec
mov
jge
mov
gs
push
jns
andl
hlt
jbe
mov
loop
inc
je
test
pop
pop
aam
inc
sbb
inc
ja
stos
out
mov
lcall
sti
fisubs
insl
ret
mov
push
popa
xor
into
sbb
push
bound
push
in
aad
and
aaa
into
push
sti
stos
popa
mov
insb
xchg
fsts
xor
push
fisubs
push
pop
dec
and
ja
cmp
cmp
lds
fcoms
pop
fcom
scas
pop
shlb
addr16
daa
and
loope
lcall
loopne
addr16
or
loope
xchg
inc
pop
dec
mov
cmpsb
mov
loopne
xchg
gs
sbb
jae
lea
or
inc
roll
xor
js
pop
cmp
xchg
shl
cwtl
pop
lods
mov
or
xchg
push
pop
pop
scas
xchg
mov
repz
add
cli
cmp
lock
mov
inc
je
push
dec
scas
mov
shrl
leave
pop
lret
inc
fcompl
push
scas
das
dec
inc
push
lods
cmpsl
push
shll
rcrl
inc
push
mov
loope
mov
adc
shr
lods
xchg
mov
lret
xchg
shrl
fldcw
out
adc
loope
mov
cmc
into
xor
lahf
push
rcrb
mov
test
mov
pop
inc
test
inc
rclb
or
insb
es
jae
xchg
and
sahf
push
mov
pop
dec
in
jo
outsb
push
xchg
sub
bound
xchg
jb
sbb
and
xor
sub
xor
imull
or
mov
repz
pop
cmp
jecxz
scas
xor
and
push
sub
add
pusha
dec
jp
pop
pushf
loope
lret
inc
push
and
push
cmc
cltd
add
mov
rclb
jg
mov
push
scas
mov
stos
sbb
std
push
outsb
mul
fdivp
push
in
lods
and
stos
push
fisubrl
and
or
mov
daa
clc
js
cs
insb
pushf
dec
push
pop
dec
outsb
push
pop
mov
dec
fmull
lock
ljmp
xchg
xchg
scas
mov
push
cwtl
xor
push
mov
pop
sbbb
mov
pop
fsts
mov
xor
loope
pushf
lret
jns
les
adc
aam
jb
xchg
cmpsl
addr16
fmul
sahf
hlt
pop
pushl
out
push
ja
shrl
mov
jne
inc
pop
jnp
cmp
arpl
dec
fstl
aaa
xchg
dec
mov
push
imul
push
dec
into
xor
mov
loop
xchg
mov
inc
repz
icebp
enter
scas
xchg
pop
push
in
test
js
mov
jne
cmp
inc
mov
xchg
mov
sbbb
mov
insb
ja
xchg
inc
int
push
sub
push
loop
loope
or
pop
cmc
push
jo
stc
mov
imul
rclb
out
sub
aaa
dec
sub
mov
push
pop
xor
xchg
cs
aaa
sbb
push
rcll
push
xchg
roll
ljmp
xchg
cmp
pusha
sub
push
lods
xor
ss
push
sub
ficompl
out
xlat
std
jecxz
add
scas
or
aad
push
pusha
pop
imul
idivl
stos
ljmp
adc
sub
jbe
pop
mov
fmull
push
loopne
inc
push
dec
in
dec
xor
mov
jmp
call
push
out
push
xchg
sub
jp
jae
mov
stc
push
addr16
sti
mov
popf
sbb
ds
jl
xor
push
push
adc
into
and
xchg
sub
jnp
push
pop
jecxz
imul
pop
call
pop
mov
pop
push
add
es
das
movsb
js
push
pop
bnd
cmp
in
addr16
sbb
pushf
cmpsl
xor
lods
data16
outsb
loopne
jo
andl
push
lea
inc
mov
ja
push
aad
in
cmp
fcomps
or
cld
lcall
jp
enter
test
aaa
add
sub
pop
or
push
xchg
clc
mov
lahf
push
adc
jge
cmp
jns
addr16
or
add
aaa
push
mov
cmp
shr
push
cs
cmp
stos
push
out
aam
push
test
push
pop
xchg
test
push
inc
mov
pop
jecxz
hlt
test
pop
sub
lods
loopne
fcompl
mov
or
mov
push
push
popa
inc
aam
pop
sbbb
cmpsb
xchg
loop
loopne
lods
into
xor
jp
mov
in
aaa
xchg
data16
lods
pop
lcall
push
lret
xchg
add
push
cmp
aaa
jle
test
lcall
dec
out
movsl
xchg
push
and
cmc
lea
repz
fwait
adc
out
push
dec
fcomip
loope
loop
push
addr16
insb
fisttpl
inc
jnp
pop
jmp
push
test
iret
adc
push
lret
in
push
loopne
sarb
ja
ds
out
and
stc
test
mov
aas
std
mov
push
sbb
out
ja
pushf
mov
popa
push
loope
outsl
mov
test
cmc
xchg
adc
fisubs
inc
aad
pop
add
pop
add
xchg
pop
adc
rolb
call
loope
mov
cmp
ss
inc
arpl
push
cmpsb
sub
loope
mov
xor
xor
rorb
jmp
icebp
aas
push
mov
lahf
enter
add
pop
pusha
add
dec
jp
cmp
push
pop
push
cli
out
out
loope
and
je
and
dec
inc
outsl
mov
test
add
and
mov
mov
or
jb
and
mov
sbb
test
testb
xlat
or
cmp
fcmovnb
repnz
arpl
mov
fld
popf
in
pop
push
mov
sbb
cld
mov
sbb
xchg
dec
sub
stos
xchg
cs
cwtl
mov
push
pusha
test
iret
sarb
daa
xchg
scas
lods
mov
push
shll
jmp
cmp
shl
adc
inc
scas
mov
ficoml
mov
push
dec
arpl
nop
xchg
adcb
scas
addb
imul
xor
negb
fimuls
mov
fwait
jle
mov
sub
push
int3
icebp
inc
add
popa
fcomps
mov
xor
mov
loope
pop
xchg
sbb
inc
push
jl
outsl
lret
daa
pop
daa
scas
xor
inc
add
sarl
loope
pop
jo
or
xchg
push
mov
fidivrl
pop
pop
nop
out
loope
mov
mov
addr16
out
push
adc
xchg
sarl
pushf
add
xlat
mov
lahf
movsl
pop
dec
les
addr16
int
fimuls
xchg
loope
lret
jecxz
idivb
mov
xor
and
aad
sub
pop
or
out
cli
xor
repnz
cmp
shrl
ljmp
push
inc
pop
mov
pusha
push
sbb
fnstenv
sbb
xchg
mov
testl
outsl
mov
sbb
sbb
cmp
jmp
xchg
jmp
dec
pop
inc
lock
pop
loop
sarb
adc
roll
sbb
rol
inc
addr16
mov
aaa
bound
sub
loopne
mov
ss
jg
leave
xchg
mov
lcall
mov
cltd
into
imul
adc
and
out
push
fidivs
inc
pop
scas
movhps
adc
data16
xchg
inc
repz
cmp
adc
loope
and
nop
popa
cmp
aad
fistl
insl
ror
cmp
cmc
add
add
stos
push
pushf
mov
jne,pt
xchg
scas
imul
and
outsl
push
sub
nop
pop
pusha
push
push
mov
shrl
daa
dec
cmp
push
inc
jae
fcomi
push
ss
gs
mov
inc
arpl
adc
dec
jmp
daa
xchg
or
lock
jae
rclb
mov
mov
push
pop
mov
out
push
fcompl
popa
mov
and
sub
sti
lret
test
xor
mov
cmc
push
loop
xchg
push
outsb
decl
pusha
icebp
xor
xchg
iret
mov
push
mov
push
dec
push
call
mov
lock
movsl
push
aas
in
scas
insb
sub
hlt
mov
add
bound
sub
out
xorb
add
ficoms
lcall
rcll
adc
das
and
jmp
xchg
mov
pop
xchg
mov
xchg
jno
fists
dec
sub
push
xor
dec
popa
movsb
insb
lcall
inc
in
fisubl
imul
jns
repnz
iret
pop
add
nop
loope
fmulp
adc
roll
mov
xchg
pop
pusha
inc
pop
shll
pop
xchg
fbstp
mov
mov
out
popa
sbb
jb
mov
shl
sub
jmp
imul
sub
roll
out
add
mov
loope
shl
pusha
fs
pop
inc
lret
stos
sub
fnstenv
sbb
inc
lret
xchg
xchg
sub
leave
fistpl
jle
sti
cmpsb
adc
imul
sbb
call
test
pusha
icebp
mov
pop
xchg
push
popf
mov
jg
mov
adc
push
pop
test
aaa
out
cmp
sbb
out
pop
repz
movsl
dec
in
push
lahf
aaa
enter
mov
sbb
les
sbb
lds
dec
cmp
jo
loope
cmp
addr16
fldenv
aam
loop
es
inc
fists
mov
fnsave
push
in
es
sbb
xor
sahf
push
cld
fcom
sub
push
sub
pop
and
in
andnps
mov
push
test
sub
mov
ja
cltd
repz
outsl
xor
mov
out
cwtl
js
pop
imul
shlb
mov
pop
ss
push
push
cmp
andl
mov
pushf
pop
pop
and
mov
sub
jle
inc
icebp
pop
jp
cmpsb
mov
push
ljmp
jl
push
call
mov
in
cmp
dec
jp
and
cmp
inc
or
jl
repnz
popa
sbb
popf
test
xchg
pop
add
dec
xchg
aad
lock
lret
jecxz
dec
and
hlt
jnp
loope
xchg
sbb
sarl
xor
and
hlt
xor
adc
fmull
adc
stc
icebp
adc
jle
sbb
cld
in
jne
adc
cmc
xor
into
cmp
xlat
loope
roll
add
dec
negl
pop
adc
ror
push
cld
xchg
lcall
jns
inc
jb
hlt
jmp
stos
mov
mov
adc
xchg
vmovhps
iret
in
push
inc
jo
push
and
pop
int3
lret
pop
sti
movl
bound
ret
sub
movsb
mov
ja
pop
and
add
push
push
xchg
mov
shrb
push
test
xlat
pop
jge
sub
cltd
cmp
push
pop
push
fcom
push
cwtl
push
xchg
mov
es
mov
pop
push
addb
inc
aam
dec
mov
xchg
jb
cmpsb
jnp
pop
mov
xchg
adc
insb
cmp
mov
sbb
out
jns
push
cmp
push
push
aad
sbb
push
in
hlt
adc
ss
rclb
jp
add
push
lea
aam
cmc
add
cmpsb
orl
inc
inc
xchg
rolb
shr
div
push
flds
test
orl
push
fwait
inc
jl
or
popa
rorb
aas
aaa
dec
pop
cmp
mov
mov
f2xm1
push
xchg
clc
ret
xchg
pop
ficomps
fisubrl
repz
pop
out
ds
out
fwait
push
push
cmpsl
sub
xchg
xor
jno
mov
stc
jnp
ret
inc
popl
pop
pop
mov
pushl
stc
push
pusha
lcall
out
mov
mov
cmp
dec
sub
or
scas
flds
xor
inc
test
xchg
mov
nop
je
loopne
push
push
dec
sub
lahf
and
pop
cmp
adc
flds
in
push
stos
mov
aas
adc
rcl
push
inc
adc
rcrl
lods
jnp
faddp
mov
lahf
jnp
sar
push
jge
nop
subl
cmp
test
hlt
mov
push
lret
push
je
cmp
leave
jno
push
sbbb
mov
mov
sub
push
jo
negb
hlt
cmp
inc
in
test
xchg
pop
dec
inc
xchg
push
mov
sub
ss
jno
push
mov
mov
push
cwtl
test
mov
mov
push
hlt
pop
adc
sub
cmpsl
push
lods
fmull
push
movsb
jne
inc
lcall
and
inc
mov
sub
pop
int
je
test
push
sub
inc
xchg
movsb
or
rorb
aaa
sbb
xor
push
or
fmull
sbb
cmpsl
in
push
inc
jge
pop
pop
and
cmc
lcall
xchg
push
inc
mov
outsb
arpl
fs
popf
divl
pop
shlb
mov
in
mov
bnd
xor
add
cmp
mov
fidivl
in
fldl
iret
outsl
sub
mov
mov
jmp
push
push
out
jb
test
push
stos
stc
push
cwtl
pop
test
ficoml
addb
mov
sub
mov
sbbl
jae
pop
or
aad
push
std
push
cmpsl
and
or
adc
sahf
aas
ds
lcall
lods
movb
pop
ljmp
or
add
aaa
jb
int3
inc
jmp
ret
push
jge
push
xchg
mov
and
xchg
mov
stos
mov
jne
insl
cltd
daa
imul
jge
popf
addr16
nop
pusha
and
push
cmp
mov
push
push
jmp
jns
outsl
shld
iret
bound
or
xchg
pop
data16
aaa
ljmp
sbb
mov
dec
std
pop
sar
push
jl
sub
mov
pop
ja
add
dec
pushf
aaa
add
lods
push
cmp
inc
jl
pop
inc
xchg
ljmp
adcl
ss
dec
fsubp
push
sahf
pop
insb
pop
lret
ja
fs
push
mov
push
mov
test
ja
fdivrs
jle
mov
imul
push
repz
push
fcomps
pop
jecxz
ret
lcall
loop
sbb
or
in
jge
pop
call
push
adc
rclb
push
lcall
sub
ret
push
test
push
xor
pop
push
andl
sbb
dec
cld
xor
enter
andl
hlt
rcll
push
sbb
xor
xor
popf
hlt
jae
add
mov
icebp
cmp
xchg
inc
mov
insb
adc
mov
sub
or
jbe
aad
inc
inc
xchg
test
test
or
ja
dec
or
add
adc
call
popf
mov
and
aad
inc
mov
fldcw
test
aam
push
adcb
insl
xchg
movsl
fwait
js
scas
pushf
shl
stos
cmp
push
je
rcrl
push
gs
cld
xchg
push
push
mov
dec
das
into
xorb
jae
or
push
ljmp
flds
movsl
cmp
pusha
loop
mov
sbb
scas
out
in
insb
sub
sbb
xchg
call
lahf
insb
xchg
xchg
icebp
and
jecxz
out
popa
add
test
out
movsl
cmp
jecxz
test
daa
call
inc
out
xchg
shrl
pop
inc
inc
dec
cmp
loope
call
outsl
in
test
mov
adc
sbb
and
add
shll
pop
clc
out
mov
mov
movsl
out
cwtl
jns
mov
repnz
pop
les
aad
jno
je
dec
out
add
aas
int3
pop
adc
repnz
jl
pop
idiv
mov
sahf
mov
aad
mov
pop
sub
xchg
pop
loope
imul
mov
pop
sahf
jnp
and
cltd
fistpll
addb
aas
pusha
movsb
loope
les
push
cmp
push
aam
fcom
sti
jge
jecxz
jne
or
popl
jns
arpl
jle
nop
inc
jbe
loope
adc
aam
push
das
gs
cmp
cs
jp
cmpsb
iret
fiadds
inc
push
xchg
xor
call
sub
xor
iret
fsub
cmp
lods
icebp
inc
sbb
xchg
aaa
shll
mov
div
nop
mov
call
sub
sub
jbe
mov
incl
adc
jb
mov
int
mov
add
es
or
cmpsb
pop
mov
adc
cmp
and
add
dec
pop
jmp
fs
xor
out
xchg
push
push
cmp
pop
xchg
mov
fs
das
int
roll
repz
in
mov
sbb
pop
cmp
gs
pop
mov
pop
xlat
sbb
lds
xor
subl
addr16
pop
fstps
add
mov
mov
das
and
sbb
test
mov
std
test
sub
inc
jecxz
push
fstpl
mov
push
cltd
icebp
jl
jmp
movsb
insb
mov
jg
add
fmull
sbb
imul
push
xlat
add
push
xor
pop
mov
pop
mov
mov
jecxz
adc
adc
addr16
je
lods
ja
ficoms
pop
cmp
pop
mov
lods
and
movsb
add
push
iret
dec
in
pop
jp
push
push
outsb
push
rorl
pop
out
lret
fsts
sbb
and
inc
jo
lods
xor
push
out
out
cmc
aam
mov
mov
stc
loopne
and
adc
insb
loop
test
ds
std
nop
dec
dec
dec
mov
int
pop
mov
js
ljmp
dec
dec
shll
cld
jmp
sbb
mov
fnsave
jmp
jl
jns
mov
xchg
daa
xchg
jle
push
dec
or
pop
jl
pop
cmp
arpl
out
sub
out
inc
xorb
in
or
mov
js
into
lods
adc
mov
rcrb
mov
ret
dec
jmp
popa
cmpsl
bound
cs
dec
fisttpl
fdivs
jg
fldcw
push
cmp
xchg
jae
es
sub
pusha
ret
push
rolb
or
cmp
std
jae
in
push
or
ja
add
push
jle
push
stos
ds
jb
xchg
test
cmc
andl
lret
xor
into
ficoml
mov
dec
pushf
mov
je
lcall
inc
test
jle
in
fs
iret
out
add
loopne
cmp
xor
pop
add
leave
out
adc
data16
xchg
test
pop
arpl
sahf
push
ljmp
in
ja
adc
shl
push
in
cmp
dec
cmp
xstore-rng
cmpsl
inc
movsl
mov
daa
inc
jo
lcall
dec
jbe
mov
sbb
ljmp
movl
pushl
dec
push
stos
sub
dec
imul
or
or
in
adc
jmp
out
and
inc
inc
dec
xor
jecxz
addr16
aas
arpl
xchg
mov
push
add
pop
pop
cwtl
mov
and
push
mov
data16
mov
repnz
dec
inc
mov
and
dec
pop
adc
int
jns
sub
testl
and
xchg
xchg
adc
pop
mov
das
test
cmp
js
mov
push
push
inc
pop
fmul
sbb
lea
sbb
mul
inc
mov
push
mov
fimuls
lahf
push
scas
aaa
mov
shll
sbb
pop
mov
adc
push
mov
js
mov
cltd
call
cmpsb
ss
arpl
cmp
out
jmp
xchg
jecxz
push
or
adc
cmp
stc
pop
mov
pop
mov
stc
push
pop
add
enter
fstpt
imul
out
pop
rolb
inc
add
and
pop
in
mov
aam
test
push
jo
les
int3
sub
fiadds
aas
adc
dec
sub
loope
stos
test
pop
loop
int
fistpl
inc
inc
repz
aam
inc
inc
addr16
cmpl
push
mov
push
and
mov
ss
das
dec
pop
test
scas
push
push
jns
push
adc
adc
insl
adc
xchg
xor
in
push
roll
push
mov
ret
cmp
or
clc
inc
add
push
cltd
and
mov
or
push
jo
ds
pop
out
cmp
push
pop
mov
cli
push
pop
sbb
or
repnz
ret
mov
sahf
and
ficoml
sub
ds
movsb
sub
xchg
adc
inc
pop
mov
popf
adc
mov
xchg
push
mov
and
sub
test
add
cmp
out
add
cwtl
fisttpl
add
push
jecxz
mov
xor
rcll
aam
dec
jns
nop
and
pop
sbb
dec
mov
mov
add
dec
inc
push
arpl
rcll
add
add
sarb
mov
sbb
add
ja
adc
dec
fisubrl
mov
lods
mov
ret
cmp
sbb
mov
in
pop
orb
js
cmp
xchg
mov
mov
sub
xchg
push
inc
mov
loope
test
shl
jbe
push
in
lods
adc
push
je
mov
sbb
cmc
or
das
mov
inc
push
jno
cmp
cmpsl
lock
repz
xor
or
xchg
push
pop
in
popa
inc
dec
push
push
lret
xchg
pop
pop
flds
dec
int3
dec
mov
cmp
jne
or
inc
cmp
mov
pop
lahf
cmpsb
sbb
mov
xor
hlt
dec
shlb
push
sti
jae
add
das
jmp
inc
cwtl
mov
push
sub
push
jns
pop
pop
cmpsb
mov
or
gs
mov
xchg
mov
adc
outsb
out
test
aaa
push
sub
push
adcl
repnz
dec
inc
push
out
or
dec
push
push
or
or
test
mov
jbe
dec
xor
pop
xchg
xchg
inc
aaa
mull
ja
out
addr16
push
xchg
dec
push
ret
std
jo
in
outsl
dec
add
sub
inc
adc
push
xor
mov
int3
sub
push
in
push
sub
xor
dec
xchg
push
insl
pop
scas
int
clc
push
xor
mov
movsl
bound
adc
fs
cs
and
dec
add
addr16
lret
dec
xor
test
lock
das
movsb
add
stc
push
mov
xor
out
push
hlt
adc
push
pop
rclb
sti
cmp
xchg
push
lret
sbbl
sar
test
xchg
jbe
mov
dec
push
cmpsb
test
and
push
cmp
cs
xorl
mov
sti
stos
add
cmp
xor
shlb
cmp
fsubr
jae
clc
stos
enter
pusha
push
lahf
pop
js
dec
sub
leave
popa
sbb
shr
jae
movsb
ficoms
mov
test
fistpl
adc
push
std
rcll
cltd
pop
ret
shll
movsl
push
xchg
psrad
mov
inc
dec
sti
sbb
and
push
mov
inc
mov
aaa
in
cmp
xchg
fcoms
movsl
and
push
pop
lea
push
jp
mov
push
and
je
mov
mov
ficoml
jp
icebp
push
xchg
stos
push
push
inc
cmp
xchg
in
pop
push
les
sarl
push
dec
cmp
xor
icebp
mov
jno
rcrb
bound
aaa
ss
into
gs
xchg
sub
xor
pop
sti
jecxz
dec
out
xor
push
jns
repz
mov
call
nop
and
dec
test
cmp
and
repnz
aas
xor
sbb
lret
sub
das
aas
cmc
cwtl
sub
add
out
inc
xchg
rcll
jge
mov
mov
mov
sarl
push
mov
pop
sub
sbb
notb
add
sbb
lods
mov
fwait
jle
inc
fdivl
cmpsb
fistpll
mov
push
rcr
fdivp
divb
loope
mov
and
outsl
xchg
xchg
xchg
arpl
push
mov
fldcw
add
push
mov
adcb
ret
test
push
loope
lret
xor
push
adc
fsubs
icebp
xor
jo
push
inc
jno
dec
and
or
fld1
mov
or
push
imul
clc
xorb
and
or
je
mov
sbb
test
ror
pop
psrlw
popa
shl
icebp
movsb
or
push
out
push
or
ja
loope
mov
stc
adc
mov
fcoms
daa
xchg
inc
push
mov
pop
in
adc
mov
xor
sbb
sub
test
data16
push
mov
mov
into
pop
mov
fmuls
pop
push
and
and
push
jne
push
incl
mov
loope
shll
mov
mov
xchg
inc
xchg
and
xlat
pop
adc
outsl
inc
pop
add
xor
mov
push
dec
add
and
mov
pop
ret
sub
cmp
dec
cmp
mov
fs
add
push
iret
and
in
push
add
and
insb
rcr
dec
sahf
insb
aam
scas
in
inc
je
ret
iret
mov
pop
xchg
or
rcrl
mov
mov
arpl
mov
in
adc
pop
outsl
sti
fldcw
push
in
lret
inc
ffreep
shrl
xlat
or
and
mov
or
into
ja
sbb
lret
fdivl
int
loope
jg
mov
pop
into
into
jl
repnz
mov
xor
loopne
adc
inc
push
ret
fisttps
or
call
push
lods
mov
adc
xchg
fistps
mov
loope
mov
icebp
addr16
and
ror
into
mov
xchg
cmp
in
pop
xchg
mov
std
mov
into
jne
inc
dec
nop
mov
test
adc
in
popf
push
loope
inc
push
inc
pop
adc
test
outsb
inc
pop
push
repnz
test
sub
pusha
mov
frstor
into
xchg
addr16
cld
scas
push
syscall
rcrl
mov
xor
mov
or
push
repz
in
cmp
ljmp
adc
in
xchg
jp
aaa
mov
lds
mov
lea
cmp
push
jns
stos
addr16
out
xchg
fldenv
popl
ficoml
push
pop
sbb
mov
jne
inc
fstpt
xchg
cld
mov
addr16
mov
sar
fcompl
push
ljmp
mov
sbb
lods
out
or
or
add
fbstp
jmp
jno
dec
push
sbb
cmp
push
mov
movsb
aam
pop
mov
inc
xchg
cmp
cltd
pop
xchg
fs
les
inc
dec
pop
in
inc
mov
jg
aam
cmp
xchg
adc
jecxz
mov
jle
cmp
idivl
jmp
in
push
movsl
sti
xchg
inc
mov
jae
inc
mov
repz
ret
scas
cmpsb
jo
push
pop
mov
xchg
push
mov
pop
out
sti
mov
xchg
aaa
mov
mov
mov
mov
dec
cmp
pop
insb
xchg
ret
xlat
ja
push
pop
and
and
push
cmp
xor
push
cld
pop
aas
adc
inc
jae
jb
pop
cmpsb
pop
xor
lock
add
faddl
mov
call
mov
push
aam
aad
sbb
and
cmpsb
out
xchg
add
pop
jne
iret
es
inc
dec
aaa
repnz
aas
pop
adcl
adc
xchg
xchg
xor
js
loop
pop
out
inc
mov
clc
pop
adc
orl
scas
mov
mov
data16
ret
sti
rorl
jns
jb
xchg
adc
push
jle
xor
iret
or
sbb
aaa
cmp
dec
scas
or
pop
sbb
dec
ret
lahf
repz
mov
mov
mov
adc
mov
std
push
repz
iret
sub
stos
daa
sbb
leave
push
frstor
mov
inc
push
mov
mov
rcll
jne
adc
lea
push
jle
mov
lods
push
movsl
je,pt
pop
mov
mov
or
or
ljmp
push
push
xlat
ja
sbb
jle
xchg
inc
ret
pop
push
pop
pop
sbb
push
push
inc
push
cmp
jb
rorl
lahf
xor
lds
mov
mov
fldt
sub
adc
scas
xchg
adc
jl
pop
test
pop
loope
out
leave
addr16
mov
shl
xor
add
push
and
daa
leave
mov
dec
push
sub
xor
loop
inc
insl
pop
sbb
out
push
pop
dec
outsl
xor
clc
push
adc
addr16
push
stos
sbb
dec
pushf
push
divl
and
sarl
fs
dec
jmp
out
mov
mov
fstl
mov
mov
and
lock
and
cmp
push
iret
mov
mov
push
loope
and
in
sti
scas
mov
jmp
push
push
mov
sar
xchg
movsl
jle
mov
fidivrl
mov
leave
jnp
loope
aaa
fneni(8087
std
xor
lods
aad
push
xchg
jecxz
dec
xchg
sbb
sbb
mov
imul
or
cmp
add
imul
shl
pushf
pop
push
cmp
out
and
push
iret
adc
mov
cmp
mov
mov
icebp
inc
dec
idivl
adc
scas
loop
push
daa
shll
pop
loop
fnstcw
sub
dec
sbb
and
pop
push
js
insb
js
pop
and
test
mov
xchg
ja
push
stc
lcall
adc
das
jnp
and
cmp
or
aad
jne
sbb
jns
push
sbb
jae
add
repz
cmp
adc
loope
cmp
pop
std
mov
mov
dec
lcall
sbb
cmpsb
lcall
push
xor
and
fisttpl
loope
fnstenv
jnp
fstp
push
add
mov
xchg
adc
sbb
xor
nop
push
imull
dec
pop
pop
outsl
pushf
aaa
testb
fsubrl
aad
xor
lods
sub
test
mov
xchg
jno
pop
iret
xor
adc
out
inc
pop
fldcw
int
inc
mov
inc
mov
call
gs
push
out
sbb
push
adc
pop
loope
iret
and
and
test
scas
iret
clc
in
aam
mov
fs
out
stc
jmp
jmp
loope
sub
repz
dec
fnstenv
and
inc
jns
push
xor
insb
add
push
test
mov
das
int
inc
jg
or
xor
loope
cli
cmp
ret
lcall
push
aas
out
cmp
push
fnstenv
mov
dec
ljmp
and
aam
dec
aad
cmp
cld
adc
mov
sbb
lcall
jecxz
push
popa
sbb
enter
cwtl
in
push
add
loopne
dec
outsl
and
out
add
adc
add
mov
mov
fisttpl
scas
mov
movsl
inc
dec
incl
sbb
decb
jg
pop
inc
data16
mov
ffreep
cmp
negl
push
mov
pop
aas
inc
push
fcomps
lds
adc
pop
dec
shlb
dec
aas
inc
jb
js
mov
pop
sbb
movq
dec
fimull
pop
loopne
ret
mov
cmp
sarl
fstpt
sub
jecxz
pop
arpl
cwtl
push
mov
aad
movsl
pop
xchg
addr16
pop
xchg
test
jmp
push
mov
jb
rcrl
push
popf
xor
mov
sub
mov
fwait
repnz
stos
pop
inc
out
jg
inc
jne
arpl
into
call
rclb
sbb
loopne
jbe
add
or
daa
jo
pop
mov
jae
nop
fs
int3
or
xchg
icebp
xchg
leave
push
xchg
bound
jle
push
mov
lret
sbb
stos
rolb
jbe
aas
xchg
push
push
cmc
out
fcoml
aaa
push
push
popfw
mov
push
lds
mov
nop
ret
lcall
sbb
mov
faddl
fsubs
and
insb
jno
adc
sub
push
push
stc
iret
pop
data16
sbb
cmpsb
dec
inc
out
xor
subb
jecxz
adc
sbb
mulb
xor
inc
sub
cmpsb
adc
xchg
incl
cmpsl
xchg
xchg
inc
ret
in
xor
push
les
lea
mov
mov
loop
out
xchg
push
sbb
test
dec
sarl
jecxz
icebp
aaa
sbb
loopne
ds
je
out
cmp
mov
pop
nop
mov
or
adc
xor
xor
mov
adc
rol
sbbl
push
repz
loop
or
scas
pop
add
push
popa
and
jge
lods
andl
jne
mov
add
cmp
bound
cld
shrl
jle
insb
push
push
push
icebp
cmp
scas
dec
xchg
mov
dec
push
sbb
xchg
inc
xor
sbb
mov
cmpsb
pop
testb
cmp
push
cmp
mov
mov
sub
js
push
negb
aas
xchg
push
aad
rorl
mov
setle
sbb
mov
pop
dec
add
sub
cmpsl
and
aaa
popa
mov
jge
pop
mov
push
out
xchg
cmc
lea
out
push
mov
je
pop
out
pop
jnp
jno
mov
push
fisubrl
push
call
in
aas
sti
js
mov
pop
jo
bnd
push
mov
push
mov
mov
and
arpl
jnp
pop
movsb
js
aaa
jp
add
cwtl
mov
lods
idiv
xchg
inc
les
jp
mov
push
jne
adc
push
cmpsl
mov
mov
adc
loop
mov
xor
int3
jp
sbb
fldcw
xchg
push
out
inc
fistps
leave
sub
xchg
fdivrl
movsl
adc
inc
jbe
cli
sbb
jp
push
pusha
lahf
ja
shlw
inc
movsl
lock
fstl
orb
dec
adc
and
pop
call
pop
jle
mov
fwait
mov
sbb
push
push
fbld
adc
jge
mov
mov
pop
scas
push
push
push
add
or
jns
cwtl
ss
hlt
js
mov
xor
aad
adc
add
sub
add
dec
fbstp
inc
enter
sbb
jmp
xchg
inc
cmp
xchg
aas
aam
es
inc
push
movsl
push
std
lret
sub
xor
mov
pop
push
cmpsb
es
shrl
movsl
in
in
push
mov
cmp
test
push
leave
jg
stc
jne
xchg
inc
push
in
ds
out
movsl
call
xor
inc
into
xor
rcrb
outsb
xor
cli
cmp
arpl
jmp
xchg
pop
pop
enter
int3
add
leave
les
stos
sub
push
mov
sti
inc
lods
ljmp
icebp
sahf
xchg
test
xchg
inc
mov
sti
adc
cmpsl
inc
lock
add
push
nop
addr16
test
mov
push
mov
frstor
out
sbb
inc
jmp
fldenv
jns
rcll
popa
pop
mov
sti
popf
cmp
pop
jns
xchg
ljmp
mov
fisubrs
call
xor
pop
add
xor
test
mov
adc
pop
pushf
push
sbb
stc
daa
mov
push
mov
xchg
adc
andb
test
inc
rcl
inc
sub
stos
jmp
cmp
push
cwtl
mov
adc
jbe
popa
out
outsl
nop
shll
xor
loope
loopne
inc
pop
lea
into
sub
jle
pop
mov
pop
xchg
jmp
push
mov
xchg
ja
fcom
mov
mov
or
push
subl
cld
jle
mov
jnp
adc
nop
jp
popf
add
cmpsl
arpl
test
mov
fs
filds
ds
sbb
push
sub
add
mov
daa
fxch
and
push
push
fisubrs
push
scas
icebp
mov
sbb
pop
loope
mov
and
ja
xor
pop
mov
sub
pop
mov
cmp
mov
insb
push
push
call
aaa
leave
test
cmp
or
adc
xchg
pop
ret
sub
ja
and
xchg
pop
push
inc
in
rcrl
xor
ficoml
fistpl
fnstsw
fwait
push
aas
mov
imul
mov
sub
outsb
je
cmp
inc
push
popf
hlt
outsl
cwtl
mulb
std
sub
xlat
pop
pop
lea
push
pop
push
sbb
or
push
stos
mov
mov
lahf
scas
lock
jno
aaa
jo
arpl
in
or
jge
lods
push
out
out
sub
xchg
mov
fists
xchg
sbb
sub
lahf
out
or
mov
inc
repz
mov
lods
mov
sbb
pop
jbe
sbb
dec
push
rclb
sahf
mov
cs
mov
inc
pop
jo
pop
or
push
mov
subl
cmovs
push
into
push
push
xchg
and
inc
int
mov
xchg
pop
mov
push
inc
bound
sbb
stc
jmp
test
lock
fildll
test
and
aam
inc
push
pusha
xor
xchg
mov
lret
mov
shr
mov
fmull
fistl
xor
mov
dec
repnz
pop
lcall
mov
inc
rcrl
sahf
mov
push
add
xchg
mov
mov
pushf
xor
ja
pop
fistps
dec
push
fimuls
dec
inc
lret
adc
ja
loopne
xchg
pop
ret
push
pop
popl
xor
jne
mov
filds
mov
mov
out
scas
js
fs
cmpb
les
push
repz
pop
pop
push
mov
ljmp
addb
mov
xor
mov
push
test
bound
stos
or
xchg
push
adc
mov
xor
cmp
mov
jmp
jne
das
inc
ja
insl
and
push
mov
adc
push
test
int3
adc
gs
adc
mov
mov
mov
adcl
notl
inc
xchg
sbb
push
jbe
test
dec
lods
cmpsl
mov
jb
pop
dec
das
jge
repz
out
dec
jp
push
pusha
or
pop
leave
mov
xor
push
mov
adc
and
add
sbb
cmp
les
das
scas
inc
lcall
sbb
pusha
imul
mov
andb
ja
push
mov
arpl
or
jno
mov
rcl
adc
decl
jecxz
test
or
movsl
hlt
ret
dec
sub
pop
je
outsl
in
stos
les
push
dec
mov
jnp
xchg
imul
cmp
jge
mov
ds
push
pop
popa
add
out
xor
mov
push
push
rcr
sub
hlt
insl
incb
movsl
lcall
push
stos
cmp
les
cmp
enter
fstpt
mov
jno
daa
mov
pusha
push
push
mov
lods
das
sbbb
pushf
es
push
scas
adc
and
push
jg
xchg
fsub
pop
jp
push
int
mov
negb
icebp
mov
xor
xor
hlt
dec
jno
push
leave
xor
insl
mov
pop
lock
addr16
mov
in
jl
cmpsb
pop
add
push
cmp
mov
push
fisttps
pop
aaa
cld
jg
jns
loope
leave
push
pushf
push
cmp
xchg
mov
mov
push
jno
jo
jge
or
fistps
scas
stos
data16
mov
dec
mov
movsl
ja
cmp
xchg
push
out
enter
js
fisttpl
inc
jl
sbb
repnz
mov
and
scas
lcall
lcall
scas
inc
xor
data16
hlt
mov
dec
std
add
jae
mov
shll
pop
cli
xor
cld
je
add
and
icebp
rclb
add
pop
fidivs
push
cwtl
test
les
aad
jg
pusha
pop
stc
push
jmp
aam
xor
mov
push
mov
lret
xchg
fwait
push
cmpsl
lcall
push
dec
rcrb
mov
pusha
push
pushf
or
cmpsl
imulb
adc
push
popf
push
clc
xchg
das
xchg
inc
jg
push
mov
push
sbb
bound
cmp
jmp
aaa
adc
xchg
inc
push
adc
clc
push
adcl
mov
fcmovnbe
jg
inc
in
push
das
add
jnp
pop
mov
popf
pop
insl
push
push
pop
fisubrs
cmp
cmp
pop
xchg
aas
in
aaa
ret
mov
stos
xor
in
icebp
push
jno
xchg
and
push
push
roll
mov
fadds
dec
and
popf
cmpsb
outsl
test
imul
add
out
shlb
mov
scas
rcrb
xchg
sub
pushf
bound
push
push
sbb
rclb
ficomps
mov
call
jno
pop
fists
loope
mov
sbb
mov
xchg
add
scas
adc
pop
push
andb
mov
in
inc
jbe
push
imul
add
inc
shl
iret
test
sbb
iret
faddl
sub
inc
and
mov
out
inc
pushl
jle
sbb
cmp
pop
pop
add
or
inc
dec
ffreep
xor
adc
jg
dec
ss
mov
inc
sub
dec
imul
mov
test
je
mov
mov
cmp
fsts
lea
ds
mov
movsl
sub
cli
adc
or
cmpsb
mov
pop
push
out
and
cltd
sub
mov
cmp
pop
mov
push
mov
lods
insl
dec
add
cmp
arpl
into
mov
or
in
and
pop
cmpsb
push
ficomps
addb
push
enter
imul
std
inc
xchg
test
pop
inc
push
shl
fsubs
pop
fildl
jle
push
je
xor
push
movsb
push
adc
cli
fwait
cmpsl
divl
push
out
sbb
ret
jo
imull
xchg
cld
or
inc
aaa
fidivl
push
cltd
and
pop
jae
mov
mov
dec
sti
sbb
adc
cmpb
xor
dec
fisubrs
cmpb
cld
out
add
loope
dec
mov
push
pop
cltd
pop
loopne
push
inc
mov
fmuls
outsl
stos
sub
jo
ljmp
fwait
scas
xchg
pop
adc
xor
cmp
cmc
push
sahf
sub
sub
cmp
fildll
cmp
hlt
aaa
lret
insb
xchg
mov
push
push
test
jge
pop
aad
loopne
and
cli
hlt
sbb
movntq
xor
and
adc
adc
dec
es
and
pushf
pop
inc
out
jns
push
bound
pop
jecxz
dec
jmp
or
addr16
test
scas
stos
test
xor
mov
push
addr16
sub
mov
sbb
popf
arpl
hlt
fs
pop
xchg
outsl
xchg
jae
in
push
inc
jne
push
xchg
xor
mov
psrlw
faddl
pop
test
xor
aaa
adc
repnz
insb
and
es
xchg
addr16
test
pop
rcrl
dec
enter
aam
jo
sub
in
lret
cmp
addr16
adc
fbstp
push
pushl
movsl
adc
mov
cld
es
inc
jle
aaa
cwtl
mov
cmp
and
and
add
cmp
pop
int
icebp
cli
les
pop
cld
mov
into
scas
push
ret
addr16
pop
pop
jo
mov
pop
jge
test
loop
xor
arpl
mov
push
sbb
sbb
xchg
sarb
or
inc
mov
scas
not
push
ret
adc
ja
sbb
mov
push
mov
fsub
popa
xor
and
cmc
cmp
fisubl
mov
adc
mov
sbb
fdivl
push
fbstp
push
push
fisubrs
addr16
mov
je
xlat
das
push
or
push
xchg
aad
addr16
or
push
jo
push
mov
fstl
push
loopne
push
xchg
xor
push
mov
cmpsb
lock
xor
stos
in
pop
push
push
jecxz
fcoml
push
in
addb
fdivs
pop
push
jl
push
xchg
std
int3
js
daa
jmp
push
add
movsb
insl
push
lret
or
push
shl
pop
or
xor
and
mov
imul
or
lret
and
push
push
mov
clc
jb
pop
fs
mov
inc
iret
adc
dec
fisubl
add
xchg
sub
sarb
ret
lock
fldt
mov
push
jo
add
and
dec
ja
insb
les
adc
adc
mov
mov
bound
dec
jle
loop
outsl
pop
nop
loope
mov
mov
jnp
mov
outsl
push
out
xor
xor
sub
iret
pop
js
hlt
shrl
cmpsl
cmp
adc
sbb
xlat
fisttpl
jecxz
arpl
inc
inc
add
mov
add
push
xorl
dec
xchg
jl
ror
push
daa
shll
or
addr16
jnp
sub
movsl
add
sbb
out
adc
and
add
xchg
lods
lock
push
jne
daa
mov
xchg
dec
gs
sub
xchg
loop
push
scas
out
pusha
jle
cmp
movsl
fwait
repz
outsl
jl
rcll
pop
and
fs
lcall
push
test
dec
pop
inc
xchg
inc
dec
sub
jnp,pn
movl
aas
add
test
pop
loop
push
incl
nop
scas
in
cmp
mov
xchg
lret
addr16
repz
out
mov
mov
lock
bswap
out
imul
lcall
out
aam
out
sbb
push
or
es
cmp
xchg
and
roll
mov
cmp
fdivs
jmp
xor
push
cmpsl
mov
push
mov
sbb
shl
pop
shlb
mov
pop
xchg
test
mov
ret
mov
jne
push
ficoml
jle
jecxz
aam
loope
xchg
outsl
lea
mov
loopne
nopl
daa
jb
mov
or
and
es
nop
fdivrs
push
and
xchg
or
fwait
insl
rol
mov
inc
mov
xchg
icebp
loop
cmp
mov
pop
adc
pushf
jle
add
out
cwtl
mov
ja
sub
imul
ja
inc
clc
movsb
mov
iret
lahf
cmpsb
xchg
mov
jnp
test
ljmp
xor
imul
rep
out
pop
mov
stos
in
push
sbbb
clc
pop
js
loope
add
jmp
xchg
loopne
aaa
lahf
dec
out
and
out
ja
or
sbb
push
lods
ret
lahf
aas
lcall
push
in
mov
sub
nop
pushf
mov
imul
fisubl
push
pusha
mov
adc
repnz
and
aam
outsl
cwtl
mov
pop
adc
loopnew
jbe
and
mov
outsl
iret
dec
jmp
sbb
jo
outsl
bound
xchg
fs
add
arpl
mov
icebp
outsl
testb
iret
in
mov
mov
push
icebp
cmc
xchg
dec
inc
pop
loope
jnp
cmpsb
or
test
outsl
push
xor
inc
lahf
mov
movl
xlat
insb
pop
xchg
idivl
push
sti
daa
push
test
xchg
sti
fisttpl
out
ljmp
inc
andb
sub
pop
mov
push
push
push
repnz
std
dec
mov
dec
pop
push
push
pop
jae
call
inc
sarl
pop
dec
das
mov
lods
push
push
mov
stos
xor
xor
inc
dec
je
rorl
pop
push
lret
sub
fwait
aad
js
xor
movsb
add
jnp
xor
pop
divl
test
aad
mov
out
loope
dec
sbb
pop
call
pop
add
in
lret
mov
and
mov
pop
sub
and
sub
icebp
leave
push
add
sbb
dec
adc
mov
push
fldt
push
in
pop
cwtl
fld
mov
sbb
fidivs
dec
getsec
stos
sub
fs
pop
scas
out
fcoml
dec
pop
xchg
ficomps
jge
mov
nop
jle
mov
ds
frstor
sub
pop
hlt
int3
adc
pop
pop
cwtl
dec
in
push
out
stc
sub
lahf
mov
mov
repnz
or
repz
fsubrl
cs
push
ret
adc
xchg
in
orl
shll
test
sarl
pusha
pop
repnz
fadds
daa
sub
fimull
jmp
push
in
jbe
mov
xor
movsl
inc
loope
inc
and
les
mov
lock
daa
sub
ja
push
fcomip
cwtl
push
aam
push
sbbb
push
push
xchg
push
pop
jb
cmp
pop
pop
call
add
dec
jmp
pop
inc
movsl
or
pop
jecxz
icebp
and
pop
cmpsb
jne
push
add
pop
jle
xor
mov
mov
or
add
imul
push
lret
dec
test
jne
mov
jp
adcb
xchg
call
xor
add
pop
lock
and
pop
pop
push
js
push
xor
ret
sahf
adc
push
inc
cmp
loope
sub
mov
sub
pop
ljmp
fcoms
lcall
icebp
jo
xchg
mov
in
add
lock
adc
push
aas
mov
fisttpl
inc
xchg
mov
lods
push
mov
mov
adc
je
jl
les
in
outsl
dec
jae
xchg
pop
cmp
or
insb
add
sub
fisubrs
pop
insl
ret
sub
lea
mov
push
jge
adc
add
test
std
and
push
jae
mov
movsb
sbb
push
jmp
inc
mov
push
mov
xchg
rorl
mov
push
imul
daa
shll
push
push
jbe
add
pop
out
je
ret
ficoms
dec
adc
push
mulb
scas
jns
xchg
mov
js
pusha
and
mov
add
or
data16
push
cmp
and
imul
out
and
dec
push
iret
outsl
xchg
pop
rorb
scas
push
std
stc
scas
jmp
push
cwtl
mov
inc
push
jae
or
xor
dec
scas
in
fwait
jecxz
pop
movsl
inc
dec
sub
xor
shlb
out
enter
dec
jl
xchg
xchg
lods
jle
int3
lods
xor
add
enter
mov
xchg
or
add
add
icebp
lods
push
xor
ret
push
inc
cltd
dec
adc
arpl
adc
push
hlt
lcall
scas
pop
enter
rcl
push
outsl
add
stos
in
push
fwait
adc
mov
mov
jle
or
bound
mov
gs
dec
lods
xchg
mov
push
sbbl
into
lods
imul
mov
push
pop
push
pop
ljmp
sbb
sub
pop
stos
sti
in
out
dec
fistpl
push
cli
dec
sub
shl
movsl
adc
scas
mov
pop
sahf
sub
xchg
arpl
mov
arpl
fdivrp
push
movsl
add
push
das
ret
and
cmp
adc
push
cli
push
test
and
xor
sbb
cmp
or
add
adc
cltd
loopne
pop
pop
dec
jl
cmpsl
push
pop
sti
lds
inc
inc
push
dec
xchg
push
pop
push
cwtl
cmpl
sub
std
cmpsb
or
addr16
cmp
pusha
lea
insl
mov
aad
ljmp
inc
loope
ficomps
or
fwait
arpl
xor
mov
clc
pop
push
push
roll
mov
dec
fsubrs
xor
sbbl
jl
xchg
sbb
adc
lcall
les
mov
fisubs
pop
incl
pop
test
movsl
cmp
push
add
sbb
sub
test
imul
mov
xor
jp
mov
decl
jg
fsts
pop
ja
es
sbb
push
jo
jl
pusha
popf
xchg
cwtl
stos
in
pop
cs
inc
jp
push
ret
stos
xor
aaa
xor
sti
pop
fdivr
push
xchg
sbb
push
in
mov
adc
arpl
iret
sarl
jb
push
push
scas
shl
imul
insl
xor
fbld
rorl
push
cmp
rorl
ja
cli
out
les
pop
and
stc
imul
push
int3
popf
sub
cmp
sub
pop
push
shlb
pop
pop
mov
clc
jecxz
and
xor
add
sti
pop
pop
iret
out
and
sarl
lret
mov
push
dec
push
addb
jl
sbb
mov
and
leave
sub
mov
lds
pop
push
adc
adc
ss
inc
mov
xor
mov
fs
inc
rolb
mov
fstp
and
iret
and
jl
out
scas
pop
pop
push
xchg
lea
cmpb
int
and
xchg
lret
cmp
hlt
nop
cmp
cltd
arpl
adc
pushf
fxch
adc
lds
mov
lock
sarb
mov
pop
xchg
xchg
or
xchg
sbb
cmp
adc
nop
pop
psubusw
or
int
test
jnp
cmpsb
insl
pop
mov
xchg
push
enter
mov
or
shll
movsb
xor
dec
push
ffreep
ret
scas
aas
add
mov
fiadds
pusha
das
sub
pop
inc
subl
aad
push
and
sub
lcall
pop
clc
imul
insl
sbb
nop
mov
lock
shll
aaa
fnstcw
mov
mov
cli
in
jle
std
flds
out
push
add
inc
xor
xor
xor
nop
cmp
hlt
add
ja
or
cmp
mov
pop
mov
xchg
inc
dec
data16
int3
loope
push
inc
in
xor
dec
pop
dec
mov
fnstcw
repnz
or
pop
out
flds
rcl
xchg
mov
out
adc
in
xor
loopne
push
mov
sub
and
xchg
outsb
lea
ret
scas
cwtl
and
outsl
out
into
pop
xor
in
dec
dec
mov
insl
sub
xor
aaa
jb
push
addr16
in
in
notl
lahf
mov
nop
xchg
fsub
inc
pop
cmp
xchg
jnp
mov
add
loopne
cld
cmp
je
or
fsubl
fwait
lret
jbe
push
mov
jbe
movsl
jmp
jge
pop
outsl
notb
dec
ret
shrl
or
pop
mov
push
pop
cmp
inc
add
dec
sub
inc
fs
lock
aaa
clc
out
rol
jnp
or
jle
xor
push
out
or
xchg
sub
jne
mov
add
in
shrd
xchg
lods
jo
movl
inc
imul
mov
pop
aam
sub
dec
xchg
test
mov
pop
xchg
scas
rcr
fsubp
xlat
movsb
sbb
cmc
add
movsl
jmp
pop
sub
pop
xor
and
or
mov
add
mov
sub
cwtl
ss
test
mov
int3
adc
mov
sti
scas
sub
adc
push
neg
sbb
rcrl
bound
aaa
test
fs
nop
sti
add
mov
push
add
adc
in
push
mov
test
push
push
aam
out
iret
mov
stos
sbb
popf
addr16
es
mov
leave
mov
cltd
mov
pop
lods
xchg
mov
pushf
push
repz
and
out
push
ljmp
aad
xor
dec
jne
cmpsb
mov
ds
aaa
arpl
movb
sub
mov
fwait
mov
ret
mov
ds
mov
jecxz
mov
ret
pop
dec
sub
bound
stc
mov
int3
mov
inc
aas
and
mov
enter
sbb
lret
add
mov
enter
orb
push
orl
jle
jmp
notl
ja
addb
fdivrl
mov
mov
insb
scas
rclb
cmp
inc
cmp
adc
xlat
cmp
pop
cwtl
mov
jge
push
fsts
and
leave
dec
xor
movsb
push
xchg
jle
xlat
sbb
loop
loope
xchg
jmp
in
pop
lods
pop
xchg
scas
mov
push
mov
xor
cmp
je
cmp
mov
sahf
aam
sub
bound
sbb
mov
lds
mov
mov
xor
fldt
icebp
repz
call
pop
hlt
out
out
je
cld
sub
xor
pop
rcrl
sub
int
dec
sub
and
xchg
lds
push
and
adc
mov
fsubrl
pop
mov
cli
scas
xor
addr16
mov
xchg
adc
jne
dec
ret
jb
dec
or
cwtl
rcll
divl
adc
push
dec
lods
cld
mov
out
loope
in
orl
shlb
or
sub
mov
inc
mov
fmuls
lret
test
in
movsl
cmpsl
cmp
lahf
push
or
hlt
xchg
push
xchg
aaa
lds
adc
xor
push
pop
mov
xor
and
adcb
mov
dec
xchg
and
mov
sbb
sti
pop
mov
outsb
push
inc
out
lds
sub
adcb
bound
outsl
lret
mov
inc
xchg
fmull
mov
mov
mov
pop
cmpsl
hlt
xchg
xchg
aad
dec
test
push
sub
int3
inc
push
xor
incb
pop
push
mov
cs
test
and
test
lods
inc
pop
les
push
sub
jne,pn
xchg
jmp
xchg
cmpsl
jecxz
push
and
xor
jno
pop
xchg
jp
push
mov
icebp
push
lcall
xchg
push
cmp
mov
push
lock
xor
jge
push
pop
sahf
push
arpl
sbb
inc
xchg
and
fisubs
push
fidivl
push
push
add
push
dec
dec
loop
mov
shrl
push
and
adc
out
cs
outsl
push
inc
xlat
cmpsb
push
xchg
movsb
rcrl
mov
xor
or
push
jmp
mov
sbb
xchg
push
sbb
loop
je
bound
and
lret
les
sub
adc
inc
xchg
cmpsl
pop
leave
sbb
mov
dec
push
inc
mov
xorb
nop
sbb
or
fcompl
xchg
dec
lods
insb
test
mov
popf
testl
out
pop
dec
push
rep
insb
push
jl
jge
mov
imul
mov
or
into
push
inc
aaa
fdivr
dec
test
push
xorb
fistps
cmc
into
cltd
dec
pop
add
repnz
bound
shrb
push
jns
push
jbe
in
cmp
sub
cmp
push
or
push
les
pop
push
xchg
out
push
pop
icebp
sbb
jbe
and
pop
pop
inc
push
mov
mov
push
rcl
pop
mov
push
sbb
clc
jbe
cmp
icebp
mov
ja
dec
xchg
xchg
test
jbe
sub
pop
rcll
mov
repnz
nop
lds
stc
pop
pop
inc
push
jbe
mov
dec
push
negb
repz
aaa
push
in
mov
push
sub
test
push
jo
rclb
sbb
outsl
or
clc
mov
push
in
xchg
icebp
adc
push
es
or
test
push
mov
leave
or
mov
sbb
lret
pop
lahf
rorl
and
lock
rcll
rclb
mov
out
jb
push
xor
push
ret
divb
dec
lods
scas
rolb
jnp
jge
cmp
inc
nop
push
dec
inc
xchg
xchg
mov
push
jae
inc
xchg
jl
mov
fisttps
repz
jno
push
ret
sub
push
dec
aaa
and
sti
out
mov
ficoml
rorl
stc
dec
jb
sub
js
sub
sti
pop
addl
loop
mov
jne
cli
lds
scas
pop
jb
dec
pop
mov
sbbb
pop
push
add
adc
jecxz
dec
inc
inc
sbb
fimull
clc
mov
jmp
inc
fwait
adc
adc
jl
xchg
adc
fcompl
add
push
loop
in
xchg
dec
pop
mov
je
bnd
and
jbe
lret
stos
imul
insl
test
mov
stos
cmp
dec
popf
cmp
iret
into
imul
fs
pop
pop
push
mov
int3
xor
xchg
jae
sub
xchg
cltd
pop
aad
shll
mov
jae
jge
out
bound
ffreep
rorb
xchg
dec
nop
pop
div
push
cmp
push
daa
cmpsb
push
sub
es
push
jg
lds
push
or
cmp
xchg
xlat
repz
rclb
mov
xor
outsl
mov
jno
push
push
rolb
mov
ficompl
push
stos
cwtl
out
nop
mov
adc
adc
jp
pop
outsl
imul
and
notl
arpl
jmp
pop
pop
pop
or
fimuls
imul
jle
leave
stos
dec
out
outsb
jne
ljmp
lods
pop
jl
mov
mov
mov
repnz
push
pop
pop
push
fiaddl
shrl
sahf
push
ja
movsl
xor
lret
add
aas
popl
and
imul
mov
test
scas
push
xchg
sub
pop
push
into
xor
jb
pop
push
or
sbb
or
arpl
mov
inc
rorl
pop
hlt
lcall
add
je
ss
push
mov
or
inc
cmpsl
xor
adc
imul
adc
aaa
loope
or
mov
pop
xor
cmp
push
call
iret
lods
push
cli
les
dec
adc
xor
or
stc
add
ds
push
roll
es
push
mov
lock
push
ja
pop
jae
mov
movsl
dec
xor
and
mov
js
xorps
int
adc
add
inc
xchg
pop
js
dec
out
insl
cmp
mov
xor
push
in
push
or
push
xchg
pop
int3
mov
mov
dec
lock
mov
xchg
push
mov
push
cmp
rcll
fwait
or
pop
and
xor
ljmp
mov
es
and
inc
push
xchg
roll
push
xor
fsts
push
dec
xchg
inc
mov
sub
out
mov
rcll
ljmp
or
mov
cwtl
pop
xor
int
sarb
cmp
dec
push
pop
push
les
lea
rorb
inc
pop
and
mov
pop
shlb
bnd
cmpl
add
pop
push
lods
pop
sbb
mov
push
mov
lcall
adc
inc
outsl
daa
xchg
ss
jb
push
xor
mov
icebp
lahf
xchg
addr16
mov
pop
inc
gs
hlt
pop
into
jae
hlt
cmp
push
scas
add
les
loope
push
data16
daa
rcll
pop
lock
jns
mov
aaa
jb
xorl
push
fisubs
nop
or
scas
mov
push
insl
push
xor
jp
stos
push
add
sbb
lea
rolb
in
cwtl
mov
fisttps
fsubl
inc
movsb
into
push
cmc
jg
inc
pop
fistl
sub
pop
cmp
pop
adc
idiv
movb
sub
test
lods
push
mov
pusha
and
dec
cwtl
daa
aas
mov
lcall
daa
outsl
dec
push
xchg
jecxz
xchg
pop
lds
lods
imul
movsl
mov
out
out
loope
push
pushl
or
jmp
iret
repz
loope
adc
and
fcomi
rcl
stos
sbb
dec
sbb
js
dec
ds
push
lcall
mov
cmpsl
mov
and
push
fnstenv
push
cmc
inc
jns
mov
mov
lds
xchg
dec
fs
out
dec
lods
cmp
rcr
in
adc
sub
add
dec
nop
movhps
fidivrl
sub
aad
scas
pop
and
in
ficoms
fcomp
adc
stc
aas
mov
out
fs
sbb
inc
push
fdivrl
pop
out
xchg
lea
lahf
mov
mov
jnp
lea
cmp
cmp
movsb
dec
mov
pop
push
scas
loopne
xchg
xchg
iret
dec
out
clc
mov
ret
loope
adcb
orl
flds
dec
or
test
jnp
xor
jno
mov
ds
test
das
cmp
mov
in
push
insb
push
pusha
pop
jp
mov
fwait
add
fs
test
fs
lcall
or
mov
jle
cmp
jnp
sub
cs
lret
push
adc
fs
pop
fnstenv
inc
es
fwait
dec
hlt
xchg
pop
or
mov
shrl
rclb
sub
jns
push
inc
and
popf
jmp
orb
fcos
adc
sbb
mov
and
and
lods
pop
gs
add
jecxz
mov
loop
adcb
stos
adc
pop
sub
repnz
inc
loope
add
xchg
and
ja
xchg
dec
leave
rcll
out
popa
out
movsl
aaa
sub
cld
xor
mov
inc
das
flds
ret
mov
test
jne
add
pop
imul
xor
ss
mov
xor
or
shll
pop
add
fidivrs
xor
add
ret
adc
inc
adcl
shlb
dec
xchg
inc
loope
pop
push
ret
es
sub
cmp
arpl
push
addps
sub
lds
nop
mov
dec
dec
ret
outsb
daa
jo
pop
fdivp
into
cmp
mov
fistl
dec
dec
inc
clc
mov
mov
cmc
push
cmpsb
in
adc
cmp
pop
adc
mov
imul
ja
fnstcw
push
and
push
mov
jns
push
icebp
push
xor
push
mov
adc
mov
loopne
invd
out
cmc
es
mov
or
test
call
sbb
adc
inc
pop
jp
push
push
xor
or
stos
shrb
jecxz
inc
push
jno
cli
cld
test
sti
sbb
cmpl
aam
cmp
push
rol
nop
mov
dec
loope
cld
push
inc
push
jnp
int
and
sbb
std
xor
pusha
imul
pop
lea
ficoms
scas
aaa
sub
rep
stos
push
std
dec
inc
pop
fwait
popl
cmp
int
sub
push
jl
pop
ret
rclb
mov
push
push
sbb
cmp
or
mov
aaa
lea
pop
pop
xchg
repnz
inc
add
xor
mov
mov
aad
out
fcomps
push
cltd
xor
push
arpl
mov
sahf
xorl
pop
rcrl
xchg
repz
mov
mov
inc
cmpsb
rcrl
bound
adc
adc
push
mov
rclb
in
cmp
pop
jp
inc
and
xchg
and
or
repnz
pop
pushf
in
mov
xchg
jl
sub
dec
xor
jo
data16
sahf
rdpmc
mull
sbb
mov
adcb
movsb
or
dec
dec
or
iret
sub
dec
adc
pusha
push
in
jne
mov
inc
movsb
aaa
int3
loope
mov
dec
lahf
mov
jno
negl
xchg
ret
mov
popf
pop
or
push
outsb
dec
scas
add
push
sahf
loope
cmp
cltd
push
xor
inc
mov
push
mov
push
adc
push
add
mov
lret
push
cmp
xchg
xlat
push
pop
xlat
or
dec
aam
rcr
push
cltd
movsl
push
sti
jbe
in
mov
or
outsb
out
orl
es
mov
pop
lock
in
mov
mov
inc
and
push
push
mulb
and
push
jmp
push
aas
jp
jp
push
push
sbb
lret
sarl
pop
jmp
xlat
xchg
or
mov
sbb
or
andl
inc
push
sbb
rclb
xor
pop
fsts
jl
xor
out
mov
in
xor
cltd
dec
jl
iret
add
repnz
stc
and
dec
adc
lock
sbb
aas
or
push
and
adc
xchg
mov
cli
sub
add
push
mov
xchg
sarl
inc
sbb
daa
xor
nop
sub
sub
mov
cmp
ja
inc
and
pop
mov
shrl
js
xlat
psubusw
cs
mov
pop
outsb
push
jno
sub
adc
fwait
or
pop
mov
jmp
sub
test
test
push
and
and
pop
fisttps
mov
mov
iret
push
in
out
mov
jnp
dec
xchg
cmp
les
ficoms
rorb
adcl
js
push
push
movsb
add
jne
aaa
pop
leave
stos
xor
pop
push
xlat
inc
imul
mov
popa
ja
cmp
cmp
ret
xchg
mov
mov
pop
test
push
xor
rclb
aas
mov
dec
xchg
sub
outsl
int
mov
jno
test
data16
orb
mov
xchg
push
sub
mov
push
push
pop
mov
in
mov
xchg
fistps
popa
add
outsl
dec
fidivrs
push
fstl
xchg
push
aas
adc
insl
xchg
push
mov
dec
mov
insb
sbb
ja
xchg
lret
jge
pop
je
out
inc
jle
arpl
dec
shlb
movsb
out
js
pushf
inc
mov
sahf
mov
fisttpll
push
xor
adc
push
aam
xor
test
push
fs
sahf
dec
xchg
daa
add
ret
push
insb
sub
push
add
xor
inc
test
push
mov
in
pusha
inc
enter
loopne
cmp
push
push
xor
push
push
push
sub
rorb
leave
test
fistpll
movsl
les
popf
ficompl
jle
inc
ljmp
mov
cld
xchg
sub
push
call
push
or
pop
iret
pop
pop
mov
push
outsl
lret
cli
push
mov
push
xlat
aas
lock
or
mov
int3
adc
sbb
in
add
clc
adc
inc
add
xor
sub
xchg
sahf
adcb
test
sarb
ja
inc
fwait
shlb
xor
mov
add
fsubrl
inc
fistpl
push
pop
jg
inc
pop
inc
xchg
pushf
repz
stc
xor
dec
and
cli
xchg
jl
test
push
jo
add
stc
push
cmp
adcb
cmp
or
or
push
and
xchg
lods
mov
sahf
mov
imul
nop
dec
xchg
out
push
jns
xchg
jb
mov
push
loopne
decb
lret
aaa
push
loop
push
pop
add
out
push
sbb
mov
int
outsl
mov
cltd
inc
pop
push
xchg
daa
mov
adcb
jb
cmp
imul
push
xor
inc
pushf
mov
xchg
leave
add
into
pop
mov
movsl
ja
cmp
pop
push
in
push
xchg
xchg
push
fs
pop
stos
notb
sbbl
push
fisttps
push
mulb
sbb
lds
adc
sbb
pop
pushf
insb
inc
lea
jae
mov
pusha
and
loopne
pop
mov
stos
pop
cli
cltd
sbb
nop
push
sbb
xorl
lahf
jne
fdivl
and
push
xchg
call
push
test
cwtl
mov
call
lret
ja
cmpsb
mov
pop
in
gs
mov
push
mov
adc
cmp
xchg
test
ss
push
out
adc
sahf
jmp
pop
pop
sub
fcompl
and
aas
dec
push
fdivs
cmova
enter
test
push
dec
mov
loop
mov
sbb
aas
push
mov
out
xor
push
inc
sub
in
psllq
push
adc
pop
jl
loopne
push
shlb
pushf
negl
mov
push
paddsw
sub
add
mov
cmc
mov
pop
mov
gs
stc
je
divl
into
adc
mov
in
or
in
xchg
ja
xchg
jge
pop
gs
cmp
dec
pushf
or
push
push
pop
ja
imul
lock
ficomps
icebp
pop
xor
pop
xchg
les
cmpsb
adc
pop
push
adc
in
and
push
movsl
dec
sub
imul
dec
ja
sti
cmpsl
push
insb
xorl
push
test
xlat
in
cmp
ss
pusha
outsb
cmpsb
orl
xchg
shll
mov
pop
adc
push
es
pushf
xor
in
and
pop
ficoms
jge
gs
adc
ret
push
xor
lds
pop
fyl2x
roll
jb
xor
sbb
mov
sahf
pop
in
cmpsb
aaa
jg
imul
fs
sub
repz
sbbb
dec
test
fists
push
cmp
push
mov
push
mov
cmp
stc
bound
imul
add
add
cmp
xor
fnsave
push
push
dec
mov
push
sub
mov
jno
jbe
enter
pop
mov
sbb
inc
stos
or
pushf
mov
pop
gs
fistpl
push
push
jbe
jecxz
and
jo
pmulhuw
jmp
and
push
jnp
add
pop
daa
lcall
repz
jmp
insb
out
sbb
dec
iret
sub
fisttpl
addb
roll
mov
pop
inc
subb
ja
ss
push
xor
and
xchg
push
loope
pop
and
pop
lods
mov
push
dec
scas
push
test
fisttpl
pop
test
jl
cmpsb
add
cld
imul
mov
rolb
sarb
add
out
rcrl
jae
nop
inc
adc
mov
pop
daa
cmp
xor
clc
push
fidivl
mov
jnp
jnp
jbe
add
adc
js
fmul
pop
imul
xlat
push
ret
add
push
popf
shl
popa
imul
ret
pop
pop
cs
pop
out
addr16
xor
bound
pop
push
lds
mov
mov
cmp
ret
out
or
cld
jb
push
cltd
outsb
add
push
mov
xor
push
bound
push
lds
xor
jae
jp
pop
pop
divl
mov
popf
lds
push
std
xchg
adc
push
mov
fidivs
dec
xchg
mov
push
rsm
push
lea
dec
out
ficoms
fldl
daa
xor
in
or
push
mov
cmc
push
paddd
js
fdivr
ja
jp
lods
test
or
out
dec
sbb
lret
xchg
adc
inc
ds
icebp
jae
dec
rcl
add
adc
pop
out
lcall
xchg
hlt
pop
mov
push
orb
leave
dec
es
inc
jno
ret
mov
jp
aaa
jl
shlb
inc
pop
sub
insl
and
push
mov
xchg
lea
mov
inc
push
mov
ret
mov
out
negb
mov
add
sub
test
pop
imul
cltd
stos
das
jbe
jge
sbb
add
inc
scas
std
inc
jnp
fisttps
into
pop
or
cmpsb
mov
in
iret
mov
xchg
ljmp
adcb
or
cld
out
pop
fisttpll
mov
jno
sbb
out
inc
addr16
fldt
pop
iret
into
adc
jb
push
jg
les
sahf
roll
stc
lahf
dec
mov
or
movsb
fwait
scas
hlt
xchg
push
pop
lret
jbe
popa
mov
lods
sub
sub
inc
loope
ret
inc
aam
movsb
pop
out
cli
aas
jg
push
jbe
sbb
mov
andl
dec
pushf
iret
mov
push
pop
stos
and
dec
mov
adc
pop
mov
push
cmpsl
loope
shll
and
imul
sub
leave
push
outsb
shrl
add
insb
jle
xchg
xchg
lods
push
movsb
in
lds
push
test
scas
jo
sub
test
add
or
fstp
ja
mov
inc
jl
pop
cmp
stc
ret
sbb
push
pusha
xlat
sbb
sti
sub
fnstsw
add
ffreep
push
pop
shrl
jbe
outsl
scas
push
jl
and
aam
pop
sub
arpl
nop
out
push
mov
mov
pusha
xor
mov
sbb
mov
mov
jl
push
mov
mov
inc
inc
sbb
or
cmp
mov
loope
lret
mov
fwait
scas
sbb
ljmp
dec
inc
repnz
sbb
ret
push
inc
scas
pusha
xor
xchg
stos
cmp
int
xchg
xadd
jl
adc
shlb
sarl
addr16
xor
pop
mov
nop
fbstp
sbb
jns
pop
sub
lea
pushf
pop
fistl
xor
and
bound
addr16
andl
pop
push
das
mov
lret
pop
pop
jecxz
in
cli
mov
xchg
pop
mov
xchg
add
stos
fucomp
sbbl
push
nop
sarl
mov
pop
jbe
insb
popf
sub
pop
loop
int3
arpl
push
xchg
movsb
mov
aaa
mov
cwtl
icebp
jbe
mov
das
cmc
pop
setp
push
add
xor
insb
sub
data16
or
sbbb
das
decl
xchg
aam
push
stos
pop
pop
push
or
xlat
jbe
and
pop
pop
xchg
stos
push
call
jbe
pop
add
insl
xchg
filds
out
mov
add
pop
and
dec
in
rcll
push
dec
cmpsb
fdivl
pushf
aas
or
cmpsl
sub
adc
sub
test
sbb
cmp
pop
dec
jb
into
nop
add
xor
push
jmp
add
pop
sbbl
fwait
scas
incb
mov
arpl
sub
pop
cmp
push
or
mov
arpl
dec
sbb
ret
mov
and
jno
mov
push
sbb
jle
mov
popf
fprem1
push
jl
add
xlat
rcr
xchg
arpl
loope
popf
adc
lods
stos
jmp
mov
and
xor
sub
xlat
out
stos
push
fistl
addb
xlat
push
jmp
stos
mov
popf
iret
push
mov
scas
lea
xor
push
pop
icebp
push
xor
outsl
inc
shrb
mov
jno
enter
jecxz
pop
lods
shrb
add
jle
pop
adc
adc
fcoml
je
mov
or
adc
add
cltd
adc
sbb
mov
inc
jno
sti
pop
mov
pop
inc
inc
ja
xor
jg
and
pop
into
mov
ret
pop
or
popa
stos
xchg
data16
lods
int3
inc
inc
mov
das
adcl
sub
push
xchg
sbb
notb
ret
pushf
repz
xchg
adc
push
loopne
add
add
xor
aad
cli
mov
adc
push
enter
lahf
movsb
inc
mov
ss
loopne
ja
orl
mov
and
xchg
sbb
in
add
push
jbe
popf
cmc
jo
push
rcrl
mov
daa
jne
push
dec
pop
sub
clc
out
and
rclb
outsb
cltd
lock
mov
adc
adc
cmp
push
pop
in
xor
es
cmpsb
pop
xchg
adc
hlt
sbb
stos
out
mov
int3
pop
pop
cltd
sbb
xchg
push
xchg
mov
out
jmp
call
jp
push
add
daa
xchg
jmp
pusha
xchg
addl
notb
jle
rcrl
dec
sub
mov
pop
inc
fwait
mov
cmpsl
and
das
ja
inc
and
pushf
xor
data16
roll
js
sti
or
cmp
xchg
adc
push
mov
cmpsb
lahf
inc
push
and
jmp
loop
cmp
mov
mov
push
fisttps
mov
sarl
mov
adc
aas
push
loopne
pop
lret
jae
push
cltd
inc
and
push
es
scas
addr16
pop
jge
inc
xchg
pop
mov
dec
and
aas
loopne
add
cmp
cmp
push
divb
lret
rclb
add
xchg
push
inc
roll
sbb
dec
fnstenv
aad
divl
jno
movsb
sarb
aas
xchg
xlat
fcmovnb
jns
stc
mov
xchg
mov
mov
jmp
test
push
and
bound
jl
push
push
sbb
mov
loopne
nop
or
rolb
jg
enter
push
pop
fisttps
push
repz
imulb
mov
mov
insl
js
inc
xchg
sub
popf
filds
or
push
pop
push
outsl
js
mov
rol
push
movsb
icebp
xor
push
into
lret
cmpsb
jmp
jge
frstor
dec
in
pop
jle
xor
push
iret
enter
pop
inc
sbb
push
pop
inc
pop
leave
mov
push
std
xor
dec
xor
in
mov
push
lret
bnd
push
adc
repz
push
sbb
cli
mov
xchg
mov
and
jmp
outsl
push
xchg
pop
inc
inc
movsl
inc
mov
jo
cmpsl
sbb
fistps
push
fs
int3
mov
cmpsb
xchg
ds
dec
xor
mov
repnz
xchg
add
jp
jmp
aad
sub
xorl
jo
call
in
push
adc
rclb
push
aas
mov
jne
inc
int3
stos
push
in
or
pop
sub
movsb
movb
hlt
mov
push
les
out
stc
jnp
out
or
fisubrs
sbb
cmp
xlat
pop
push
in
push
loop
dec
imul
call
jb
sub
push
push
inc
ds
pop
mov
add
and
jo
add
or
test
mov
inc
mov
inc
mov
cmp
test
shlb
sbb
addr16
push
inc
hlt
pop
mov
push
jmp
jp
dec
mov
aam
push
addr16
enter
fstps
push
dec
rclb
dec
mov
nop
push
enter
aad
subb
js
dec
or
push
add
mov
mov
push
push
xchg
data16
cltd
pop
push
ja
inc
sarb
lods
push
fldt
push
add
imulb
jle,pn
jno
je
jmp
outsl
add
mov
sbb
std
fildll
pop
sbb
adc
stc
push
icebp
add
dec
fildl
or
cld
je
push
sub
or
jo
sbb
mov
sbb
jecxz
lock
and
push
inc
mov
ljmp
add
push
pop
popa
mov
adc
pop
mov
sbb
mov
cmpsl
hlt
push
pop
les
rol
fisubrl
pop
push
nop
rcl
mov
ds
push
inc
rorb
push
push
and
sbb
mov
xor
push
sti
shl
push
mov
popa
xchg
inc
data16
mov
call
pop
mov
fadds
subb
aam
xor
movsl
push
mov
inc
and
in
mov
lods
push
mov
add
mov
std
mov
cltd
and
or
test
push
int
inc
xor
and
or
jnp
fs
mov
jae
mov
mov
push
iret
cmp
leavew
jne
mov
inc
hlt
bound
sub
add
add
push
ljmp
cli
sub
add
dec
rorl
addr16
in
mov
js
in
ficompl
mov
testl
ficoms
pop
push
and
lcall
aam
fsubl
idivb
in
jl
jmp
shll
pop
jecxz
push
sti
pop
mov
aaa
outsb
les
inc
ja
mov
inc
pop
mov
mov
cmp
and
lds
sbb
pop
push
daa
loope
inc
repz
test
mov
sub
mov
inc
or
pop
dec
adc
sarb
dec
jg
fdivrs
ret
jbe
fisttpll
aam
adc
inc
aas
lods
int
mov
jg
adc
mov
xchg
or
xchg
fs
test
xorb
inc
lret
scas
xchg
repnz
cmp
cltd
sar
data16
push
xor
data16
xchg
push
add
push
jg
push
out
psubsb
addr16
xchg
push
mov
jp
push
mov
push
push
pop
inc
push
repnz
xorl
add
mov
adc
fistl
jle
mov
cmpsl
dec
sbb
fistpl
add
inc
cs
jbe
ja
jnp
inc
sub
repz
pushf
push
inc
jbe
dec
outsl
adc
adc
gs
push
pop
sbb
push
push
les
fiadds
movsb
xor
cltd
xor
movzbl
fstpt
pop
ja
mov
inc
mov
ficompl
mov
ds
mov
cwtd
mov
stos
fcoml
and
lcall
jle
das
or
jns
stos
or
adcb
push
std
shlb
add
adc
fs
pop
mov
pop
push
inc
push
movsb
jnp
hlt
add
or
jae
pop
push
jge
in
xor
mov
sarl
dec
loopw
or
rol
mov
hlt
adc
lods
jns
dec
popf
repz
loope
dec
jle
jno
push
push
fmul
pushf
std
movsl
pop
jp
cmp
mov
xor
cmpb
std
push
inc
call
nop
sbb
inc
sub
xor
cmp
jnp
iret
call
aaa
pop
and
lock
fldcw
ds
push
jle
mov
mov
or
jmp
mov
and
sbb
loope
or
xchg
cwtl
repz
push
cmp
cld
push
iret
add
vpmacssww
inc
setp
mov
mov
add
inc
rcr
push
add
fwait
push
adc
dec
add
mov
dec
cmc
cltd
sub
leave
xchg
shl
xchg
sbb
outsl
add
push
in
daa
fldenv
arpl
loope
or
mov
xor
aas
das
enter
rclb
ds
mov
popa
jmp
loope
pop
pop
notb
ja
sub
mov
cwtl
ja
pop
insl
js
jl
clc
pop
lods
rcll
cmp
pop
int
shl
mov
popa
adc
idivl
test
cmpb
mov
cmp
nop
lds
add
shr
scas
loope
call
sub
mov
and
shll
les
lahf
fldpi
loopne
movb
addr16
xor
jle
sbb
insb
ror
pop
popf
xor
lds
sub
mov
jns
stos
ret
out
loope
and
mov
shll
fldcw
in
popa
out
mov
paddsw
add
jno
pop
hlt
data16
scas
dec
jno
push
mov
test
sarl
pop
dec
movsb
mov
mov
insb
add
xor
xlat
inc
xchg
pop
jmp
int3
aam
mov
sbb
xchg
push
into
mov
and
jl
mov
sbb
mov
sahf
mov
cmp
aas
or
push
pushl
nop
adcb
aaa
int
mov
xchg
mov
xor
push
hlt
jb
xor
aam
hlt
pop
in
div
fs
loop
inc
icebp
mov
or
loope
pop
push
sub
jp
ds
shll
scas
sahf
sbb
rcll
pop
mov
mov
and
mov
shll
sbb
ds
xor
mov
bound
xchg
test
mov
out
in
outsb
test
es
insl
decl
xlat
jg
addr16
addr16
sbb
ret
xchg
mov
insb
pop
push
shlb
and
adc
push
xor
or
pop
shll
test
in
adc
pop
jl
ret
xchg
sbb
xchg
xor
cmp
sbb
gs
xchg
jne
mov
movsl
pop
adc
pusha
jecxz
pushw
sbb
push
xlat
jl
outsb
add
jle
inc
inc
pop
dec
xor
pop
rorb
dec
xor
fsubl
sbb
in
jge
sbbb
xlat
loopne
not
outsl
xor
fldcw
mov
movzwl
in
dec
addr16
xchg
jl
dec
jmp
xchg
push
fisttps
out
pop
pop
jbe
cmp
lret
dec
pop
dec
adc
mov
lods
mov
and
pop
or
sahf
mov
test
pop
in
les
sbb
xchg
je
hlt
xchg
rcrl
aad
ss
mov
jae
int3
push
jb
sbb
cli
pop
sahf
ret
or
lcall
popa
out
aad
dec
adc
call
cwtl
sub
fstpl
cmp
fdivs
push
mov
mov
jnp
cmp
cmp
sbb
pop
pop
loope
fs
push
lds
pop
mov
cmp
pop
push
and
sub
sbb
push
divb
aaa
inc
loope
lods
lock
leave
sbb
dec
iret
adc
add
ss
je
js
mov
addr16
lea
std
popf
fs
jl
push
inc
pop
imul
movsb
addr16
adc
inc
and
arpl
jbe
mov
dec
cltd
push
xchg
lock
stos
push
pop
mov
loope
push
or
or
ret
mov
aas
mov
imul
push
popf
mov
int
je
xchg
fstpl
push
roll
sub
xchg
sti
out
iret
dec
jge
or
jbe
aad
mov
push
clc
aaa
insl
push
cmp
popf
pop
xor
addr16
xchg
inc
fwait
inc
sub
mov
imul
ljmp
outsb
stc
out
xchg
add
jbe
cmp
fdivp
mov
cmpb
push
popf
lods
shl
push
sub
stos
lahf
add
jb
dec
push
xchg
add
push
sahf
pop
push
inc
or
inc
mov
mov
andb
jg
push
push
lret
push
dec
or
pop
loopne
cmpsb
mov
lcall
sahf
int
push
aaa
clc
aad
push
fnstsw
dec
mov
inc
mov
pop
lcall
jle
loopne
fcoms
mov
pusha
in
or
push
push
out
sub
mov
push
xlat
inc
adc
adc
fcomp
sbb
push
push
pop
stc
pop
pop
xchg
jge
push
inc
add
dec
fiaddl
sbb
jle
push
sarl
mov
add
sub
push
push
dec
dec
sub
cli
or
mov
aas
aaa
cmpsl
pushf
and
ffreep
and
push
xchg
mov
aaa
jg
fisubs
push
mov
cmp
push
ss
fs
jmp
ret
test
or
push
cli
test
push
ljmp
idivl
cmp
jns
cmp
adc
out
fwait
mov
cmp
inc
enter
int
push
mov
xor
and
xorl
mov
dec
iret
lret
pushf
fiaddl
sbb
pop
fwait
sub
test
push
andl
outsb
mov
nop
imul
push
scas
sub
mov
sub
dec
jg
ja
into
push
iret
push
scas
shlb
sbb
mov
push
fs
push
push
sub
iret
enter
insl
pop
aad
push
pop
inc
in
xor
push
leave
test
xor
pop
hlt
cwtl
add
inc
sbb
cmp
mov
ret
mov
mov
lcall
cmpsb
outsl
lahf
and
mov
push
shrb
nop
xchg
out
cmp
push
cmc
mov
insb
push
dec
jns
pop
inc
aaa
hlt
sub
clc
enter
xlat
push
add
into
cld
dec
ds
cmp
insl
push
and
push
loope
popf
sbb
push
into
push
push
push
dec
out
ljmp
aaa
mov
pop
hlt
mov
insl
data16
scas
push
vsubss
ds
fcoml
cltd
lock
jge
push
cmp
sbb
mov
push
pop
or
jne
pushf
insb
out
mov
sti
dec
shrl
shll
xchg
repz
pop
lods
push
push
sub
stos
aad
jg
addr16
dec
pop
faddl
push
leave
pop
andb
adc
outsl
dec
xor
addr16
mov
movsl
lock
cmp
outsl
dec
daa
ss
mov
push
loop
pop
repz
xchg
outsb
push
hlt
push
mov
or
sahf
ror
lods
sbb
mov
push
movsb
insl
loopne
scas
fisttps
xor
push
xor
or
addl
cmp
xchg
add
cmp
jmp
push
dec
lret
push
jnp
mov
gs
mov
outsb
movsb
push
lock
ja
pop
fistpl
shr
jb
ja
jns
insb
jmp
cmc
rcrl
dec
loopne
lcall
or
repnz
add
push
addr16
sbbl
test
nop
mov
xchg
cmp
push
out
push
xchg
pop
repnz
out
lcall
fildll
ficoml
mull
pop
lea
lods
mov
xor
pop
jns
shr
repnz
sbb
cs
lahf
xor
loop
jnp
wrmsr
mov
mov
loopne
cmc
push
dec
lods
jbe
push
loope
add
sbb
mov
ljmp
and
dec
push
nop
inc
test
pop
mov
mov
or
xchg
out
mov
into
pop
sbb
jle
or
push
pop
xchg
mov
cltd
mov
jb
jno
add
xor
jnp
mov
mov
cltd
ja
test
cmpsb
mov
cld
xlat
jmp
pop
aam
push
std
cltd
and
pop
push
jnp
push
cmp
fidivl
push
in
arpl
mov
out
nop
push
add
mov
mov
mov
pop
inc
stos
add
pop
pop
and
jb
mov
leave
mov
scas
in
push
mov
push
cld
aas
aam
scas
adc
xchg
inc
loopne
add
dec
push
adc
dec
rcrb
psubsb
cwtl
mov
adcb
push
xor
and
pushf
inc
lcall
stc
push
push
dec
jbe
jecxz
fwait
and
and
add
shll
jge
push
add
jl
call
inc
out
inc
adc
xchg
ffreep
and
inc
fs
cwtl
mov
inc
addr16
xlat
dec
sbb
test
rclb
insb
ret
lahf
adc
int3
xchg
inc
mov
and
lret
push
ds
sbb
mov
push
mov
jp
notl
subl
cmpsb
adc
jg
sahf
push
sub
sahf
aad
roll
lahf
adcb
adc
xor
mov
icebp
adc
xchg
cs
dec
mov
mulb
iret
lds
add
je
js
push
cwtl
rol
jg
dec
daa
ja
loope
iret
outsl
push
jmp
mov
inc
xchg
mov
aas
addr16
inc
push
pop
pop
push
mov
xchg
dec
mov
fdivl
jge
or
pop
aas
xor
popa
hlt
cmp
pop
sar
in
cmp
adc
mov
repnz
mov
inc
mov
add
or
sbb
push
push
insl
dec
adc
sub
pop
loopne
push
pop
into
pop
sti
test
adc
aam
push
cmpl
mov
and
lea
pop
in
jmp
pop
lahf
add
or
scas
xchg
mov
pop
or
arpl
scas
mov
fistpl
shlb
daa
cmpsl
xchg
adc
aas
push
cmc
pop
mov
fwait
push
inc
cmp
push
pop
add
inc
popf
aad
addr16
mov
pop
jns
mov
sarl
fidivrs
ret
std
push
jge
push
pop
sub
sub
adc
mov
push
test
xlat
adcl
jns
int
inc
inc
push
and
daa
lcall
xlat
pop
loop
out
cmp
fldenv
mov
lea
mov
mov
lods
movsl
pop
je
xchg
xchg
push
or
xor
ja
leave
pop
int3
push
stos
jp
inc
add
jl
push
mov
cld
icebp
jnp
push
inc
mov
loope
mov
jl
pop
push
fcos
loopne
push
lods
sti
xlat
add
aas
push
sub
aad
mov
xor
xchg
cmpsl
cli
repz
iret
lcall
loopne
sbb
adc
add
test
cmp
sbb
mov
mov
inc
xchg
icebp
adc
subb
inc
fists
sbb
pop
lret
fwait
inc
pop
sub
dec
lret
lcall
push
add
loope
inc
addr16
lret
cmpsb
call
dec
jle
mov
jl
pop
pop
leave
dec
enter
sbb
jns
js
mov
pusha
fimuls
pop
scas
into
lahf
jl
test
in
mov
jae
sarb
push
fisubrl
movsl
fnstcw
fbstp
xchg
fwait
pop
shll
lcall
movsb
or
push
punpcklwd
and
mov
pop
cmp
dec
in
shll
jae
dec
lret
add
cmp
mov
sbb
aad
flds
push
jmp
pmullw
xchg
push
das
xlat
es
sarb
dec
shrl
repz
fistps
pop
jge
iret
push
xlat
add
jl
dec
sub
mov
lret
sbb
arpl
pusha
cli
cltd
jns
jb
std
call
orl
test
pop
imul
xor
jns
out
adc
pop
inc
stos
lods
int
xchg
cmp
cmc
leave
mov
push
repz
lret
idiv
adc
test
xchg
and
push
mov
cli
and
ja
mov
loope
pop
jb
push
fbld
int
sti
movl
or
xlat
daa
dec
out
pop
sti
daa
cmp
jb
hlt
push
imul
push
push
leavew
xor
push
jl
add
out
int3
inc
and
pop
inc
and
push
shll
push
sbb
cmp
dec
mov
mov
insl
fldl
xchg
pop
push
dec
sahf
punpcklbw
addr16
push
dec
inc
and
orl
insl
lds
pop
cmpsl
pop
jne
into
dec
mov
inc
xor
mov
dec
in
addb
push
or
out
pop
daa
rol
push
call
dec
sub
pushf
fcoms
in
rclb
mov
out
out
inc
stc
rcrb
cmc
sbb
sbb
jl
lds
ret
add
push
aam
rolb
add
push
or
dec
test
inc
inc
xor
mov
jge
mov
imul
clc
cltd
cmp
stos
pop
inc
jmp
lret
loopne,pt
dec
out
push
or
or
xchg
dec
cmp
sub
cwtl
add
lcall
dec
rorb
orl
out
cmc
movsb
xchg
inc
iret
icebp
add
push
inc
dec
push
mov
xlat
fcmove
and
dec
mov
sub
push
push
jl
lea
jle
inc
iret
cmp
sub
push
insb
push
fwait
mov
add
pop
cmp
or
repz
adc
rolb
mov
sub
push
xchg
pop
jg
mov
clc
notl
inc
orl
pop
mov
push
lcall
mov
inc
shlb
ja
stos
pop
xchg
add
insl
xorps
in
add
or
cwtl
or
pushf
shrb
insl
adc
inc
rolb
cmp
dec
mov
cmp
lahf
cmp
lea
pop
sbb
out
in
inc
mov
inc
fidivrs
sahf
cmp
xchg
mov
arpl
xor
mov
cmpsl
pop
aam
adc
xor
sbb
fimuls
test
aad
sbb
push
aas
incb
movsl
push
ficompl
pop
jmp
mov
js
add
lods
mov
cmpsb
les
dec
pop
jo
sti
pop
incl
cltd
clc
arpl
push
xor
and
inc
cmp
or
push
cmp
pusha
mov
xchg
push
daa
lret
push
mov
sub
cmp
mov
mov
sub
mov
lods
sbb
adc
cmpsb
push
call
xor
nop
scas
dec
pop
xor
jnp
fdivrp
push
ss
jb
mov
stos
adc
mov
dec
lods
out
ja
pop
push
ljmp
loop
push
add
repz
push
xor
jno
in
jmp
jb
pop
pop
pop
addr16
or
jmp
add
hlt
push
dec
or
push
sub
cmpsb
repz
push
or
js
xchg
dec
xchg
mov
mov
push
out
lea
push
adc
mov
xchg
dec
or
xchg
arpl
ficoms
or
lds
scas
pop
or
fld
adc
mov
xchg
xchg
rcrb
inc
into
push
outsb
sbb
push
pop
sbb
adcb
cld
notb
adc
adc
repz
push
xchg
lahf
push
sub
add
mov
inc
shll
jmp
pop
iret
shl
push
sub
popa
mov
adc
rcll
mov
push
pop
scas
js
cmpsb
daa
mov
imul
lods
int3
push
xor
lcall
or
fimuls
or
sub
push
or
cmp
pop
mov
xchg
xor
shll
outsb
add
fisubrl
notb
sbb
pop
call
les
inc
mov
push
popa
dec
in
push
xor
dec
out
cmp
inc
cltd
mov
pop
lock
in
pop
imul
jmp
xchg
fbld
sahf
int3
mov
mov
in
inc
sbb
mov
ljmp
push
imul
fdivrp
jp
imul
in
sbb
mov
sub
rcll
loop
mov
push
cld
xor
jp
imul
push
movsl
sbb
sbb
pop
sub
repz
enter
out
mov
jcxz
loopne
add
xor
into
arpl
stc
lcall
int
jmp
or
inc
mov
dec
push
ficomps
push
adc
out
out
and
lds
loope
add
lcall
add
jg
push
mov
stos
sub
dec
loope
icebp
cltd
mov
ret
cmp
in
sbb
mov
xchg
ret
test
push
dec
mov
test
popf
pop
push
addr16
lds
shrl
andl
add
mov
or
push
popa
in
adc
sub
movsb
sbb
fwait
mov
scas
adc
push
jp
insb
mov
xor
fidivl
add
push
fnstenv
in
dec
jnp
xchg
mov
ja
mul
push
xor
push
xor
lret
leave
repnz
out
xchg
addr16
in
push
push
daa
sub
cmp
push
ljmp
aaa
int3
dec
ret
aaa
fcoml
pop
fistpll
push
les
cs
pop
dec
outsb
stos
movsl
adc
xlat
fs
mov
ss
pop
hlt
add
and
nop
xchg
inc
sbb
dec
and
pop
sub
mov
mov
sahf
ret
addr16
mov
and
cmp
aam
loope
aaa
loopne
repz
push
push
push
andb
mov
push
pop
rcl
mov
lods
addr16
fsubl
call
outsl
in
stos
push
mov
mov
add
add
stos
xchg
push
mov
and
push
and
mov
mov
or
add
inc
fmull
adc
test
and
dec
xor
inc
push
repnz
or
mov
jmp
ret
popa
pop
jecxz
inc
xor
pop
ret
jnp
gs
xchg
cmpsl
pop
mull
ret
ret
lcall
and
cmp
cld
iret
addr16
movsb
adc
sti
lds
pop
in
pop
addr16
pusha
flds
push
ja
pop
test
push
iret
gs
xlat
outsb
xor
clc
jl
ret
push
push
add
mov
insb
xchg
add
and
mov
orl
outsl
add
out
mov
movsl
call
stos
push
std
lret
addr16
insl
flds
cltd
daa
jle
push
or
push
das
add
aaa
sub
mov
xorb
mov
imul
or
mov
clc
adc
pop
shl
push
sbb
fisttpll
xor
push
movl
inc
stos
jne
cwtl
imul
enter
inc
pop
push
stos
sub
push
add
scas
push
fisttpll
popf
sub
cmp
lcall
push
add
sub
scas
dec
lret
test
in
adc
jp
out
ds
and
dec
inc
xlat
mov
mov
inc
add
hlt
mov
movsl
push
pop
mov
jecxz
inc
or
rol
push
adc
xor
push
jae
xchg
pop
stos
pushf
mov
bound
inc
fs
les
mov
rcrl
push
jno
iret
loopw
stos
mov
cld
sahf
pop
scas
enter
in
mov
push
xor
hlt
pop
lea
pop
sub
jne
std
fcompl
cmp
mov
cmc
xchg
imul
in
xchg
addb
data16
aad
lahf
loope
pop
lret
in
xlat
push
or
sub
fcoms
or
rcll
xchg
outsb
out
jecxz
fiadds
sub
loope
imul
cmc
in
cwtl
push
loope
lods
mov
not
add
lds
sub
imul
mov
cmp
fadds
adc
jnp
into
sbb
mov
mov
mov
in
addr16
sub
xor
jle
push
scas
std
or
movl
push
daa
sub
or
jae
shl
lock
ljmp
pop
push
pop
cld
std
imul
xlat
xlat
mov
xor
adc
std
xchg
pop
das
cmc
loope
gs
add
and
jno
push
xchg
and
rorl
mov
cmpsl
jno
push
jbe
xchg
pop
xor
rcll
push
xchg
push
mov
cld
push
pop
and
cmp
xchg
jl
dec
iret
lods
das
jge
xor
fmulp
fstps
cmp
push
sub
mov
dec
sbb
test
nop
xor
fcomps
cmp
insl
cmp
add
mov
xor
fisttps
pop
sbb
int
shll
dec
fsubr
mull
cmp
mov
in
sarl
flds
imul
xor
inc
out
scas
or
stos
mov
cmpsl
add
cmp
pop
and
test
aaa
push
icebp
jmp
pop
mov
ret
inc
shll
cmp
pop
nop
sub
mov
push
fmul
adc
xchg
sub
in
rolb
cmp
inc
sbb
mov
dec
cmpb
or
jb
add
fstl
repnz
jnp
adc
add
jns
or
scas
shrb
outsb
lret
divl
hlt
add
into
iret
jae
pop
pushf
pop
sahf
mov
xchg
jbe
int3
jmp
imul
push
dec
mov
jg
repnz
pop
fcoms
test
std
cmp
inc
and
lods
cmp
pop
out
sub
jp
daa
loope
or
jbe
sbb
xor
inc
aam
push
pusha
or
test
or
and
pop
icebp
dec
pop
mov
jb
mov
push
and
push
cmp
mov
popa
adc
push
mov
cmpsl
inc
mov
rcll
pushw
rcl
int3
loope
xchg
sti
outsl
xor
cmp
pop
in
mov
push
flds
adc
pop
mov
out
nop
dec
cwtl
mov
add
fsubl
cmp
xchg
ss
or
sti
test
mov
and
cmc
loope
mov
sbb
push
pushf
cmpsl
daa
nop
in
out
pusha
jns
jne
jnp
push
and
loope
sub
mov
inc
shrl
xchg
xor
and
fbld
fdivs
mov
xchg
inc
fidivs
test
mov
call
cmpl
mov
push
enter
test
cltd
addr16
mov
pop
adc
or
push
jb
xchg
pop
push
xchg
adc
roll
mov
cmc
mov
ja
cmp
pop
in
add
daa
in
sar
test
push
mov
xlat
testb
aaa
repnz
add
rcrl
xchg
mov
pop
cwtl
cli
cld
mov
xchg
imul
pop
iret
jecxz
daa
ds
popl
stos
push
daa
or
movsb
sub
push
push
mov
popf
mov
cmpsb
mov
dec
or
in
xchg
mov
or
outsb
out
lcall
lcall
sarl
in
stc
push
ljmp
add
xor
sub
jno
rol
xor
pop
push
mov
sbb
mov
bound
cmc
in
pop
js
mov
push
pop
push
outsb
xchg
jns
sub
adc
add
cmp
cmc
sub
pop
lea
scas
pop
popa
imul
xor
xchg
push
mov
push
addl
sti
and
mov
push
and
inc
inc
outsl
out
ja
insl
pop
sub
pop
jne
ja
cmp
sbb
call
push
in
jecxz
push
push
push
sbb
outsb
call
es
add
out
cs
loopne
pop
add
lahf
rcll
out
das
push
xchg
rorb
and
pop
outsb
and
add
pusha
mov
cmc
sti
or
mov
dec
push
scas
xchg
dec
cmp
pop
les
mov
cmp
shll
or
mov
sbb
pop
dec
pop
scas
pop
call
pusha
fistpl
fyl2xp1
pop
and
aas
push
sar
xor
call
daa
iret
hlt
xchg
xchg
or
add
xchg
or
mov
pop
dec
test
pop
cld
ficomps
mov
push
aad
push
ja
pop
mov
jns
cmp
data16
pop
out
das
mov
inc
pop
add
movsl
push
dec
out
cwtl
push
mov
ja
fidivs
sar
stos
arpl
and
outsl
dec
movups
push
addr16
call
lret
lods
fidivrs
test
push
push
mov
and
push
into
dec
nop
insl
cmp
jae
mov
pop
sub
push
sbbl
and
inc
not
repnz
mov
outsl
frstor
subl
lods
imul
sarb
cmpsb
jle
loopne
jb
push
xor
aad
mov
pop
lea
aas
mov
push
add
repnz
and
lret
pushf
pop
ffreep
pop
loope
push
in
cwtl
je
sub
xor
xlat
icebp
xor
inc
xchg
add
pop
or
cmpsl
dec
addr16
and
push
mov
mov
jns
or
repnz
cmpsb
std
pop
xor
test
push
subb
dec
mov
xchg
mov
adc
xor
pop
push
repz
std
inc
push
popa
shr
sub
dec
push
mov
aad
mov
push
in
pop
add
cli
out
mov
mov
adc
push
aas
inc
jae
lret
cmpsl
jp
lods
out
nop
imul
lret
xchg
and
loope
ja
aad
arpl
push
sub
push
scas
aas
enter
sbb
push
pusha
in
sbb
adc
xchg
andb
push
lahf
ficoms
inc
pop
call
ret
gs
pop
out
add
sub
mov
xchg
ret
push
push
aam
aas
scas
iret
arpl
cmp
aam
and
fisttpl
mov
leave
jo
ficoms
scas
lock
sub
pusha
xchg
add
fimull
xlat
push
and
fbld
mov
pop
fcmovbe
and
dec
mov
in
xor
mov
cmp
push
clc
fcoms
sbb
les
jle
nop
ret
push
pop
filds
cmp
pop
repz
cmp
lret
pop
in
movsl
sub
mov
mov
push
push
fidivrl
notl
xor
iret
push
jne
push
cltd
add
rolb
sbb
fs
out
push
lea
dec
sub
pop
je
lods
insl
in
dec
and
pop
outsb
call
pop
nop
adc
cmp
sub
pop
sti
std
mov
jbe
cmp
fnstsw
dec
pop
subb
add
adc
adc
mov
jg
bound
mov
xchg
loope
push
out
mov
loopne
and
cwtl
jmp
mov
jb
and
fwait
int
stos
imul
les
shl
pop
ja
loope
or
add
loope
lcall
xchg
int3
cmp
cli
out
nop
adcb
scas
out
arpl
mov
push
push
jb
aam
hlt
lds
jno
jl
mov
lock
inc
and
mov
mov
in
lea
into
jl
mov
jno
aad
outsb
fbld
ret
push
lahf
adc
leave
iret
jae
xchg
mov
xor
je
push
cmp
bound
fistps
mov
pop
out
sbb
add
mov
fiadds
shr
xor
pop
addr16
mov
push
loope
pop
insb
lcall
push
test
popa
aaa
xchg
or
test
fcoml
xlat
xlat
mov
pushl
adc
loope
pop
inc
cmp
incb
mov
cmp
roll
cwtl
sbb
das
std
sbb
fisttps
mov
add
adc
mov
pushl
xlat
add
stos
sarl
adcl
rorl
jne
mov
iret
lods
xchg
adc
pop
mov
adc
hlt
je
push
xchg
cmp
std
loop
xor
xor
mov
test
adc
test
xchg
divb
lret
pushf
dec
adc
movsl
lods
inc
cmp
cs
loope
fidivrl
lret
cmp
add
pop
adc
xchg
mov
sub
mov
xchg
cmp
jnp
outsl
in
pop
aas
xchg
push
rcrl
cmp
loope
sbb
inc
adc
xchg
ljmp
outsl
xchg
mov
xor
jbe
and
in
out
xor
pusha
mov
mov
push
sbb
fsubl
in
das
sahf
dec
mov
cmp
and
mov
out
int3
adc
pusha
shl
xor
out
jnp
lea
fnstenv
rcl
addr16
rolb
xor
das
pop
sub
into
gs
call
aas
shll
sbb
dec
jge
icebp
das
inc
sbb
inc
pop
and
aaa
pop
loope
fs
sub
rorb
jb
scas
aam
pop
ret
bound
lods
rcrb
inc
rcrl
ret
xchg
jg
or
leave
adc
addr16
js
aam
loop
pop
adcb
adc
xor
dec
and
pop
ja
aas
mov
mov
mov
jecxz
lret
jae
addr16
mov
pop
out
stos
inc
xchg
adcl
cmpsl
pop
pop
shlb
arpl
jbe
pop
push
loop
add
sub
adc
test
lods
stos
out
dec
ret
push
movb
push
ret
arpl
not
je
aaa
xchg
mov
push
shlb
adc
or
push
cmp
or
sbb
push
jnp
dec
test
lds
push
and
mov
jg
mov
pop
push
aaa
sbb
ja
ss
insl
push
fst
or
outsb
cwtl
addl
push
jo
lcall
icebp
mov
inc
lods
push
pushf
andb
iret
leave
test
hlt
cmc
jo
jg
movsb
inc
pop
jecxz
addb
pop
gs
xchg
es
mov
push
jbe
mov
int
xor
pop
lods
xchg
aad
rorb
loopne
ljmp
mov
sbb
cwtl
sub
ja
jne
imul
negb
inc
push
or
pop
push
push
jb
push
mov
test
or
lret
or
push
movsb
popa
aaa
xlat
je
push
lods
addr16
inc
shrb
rorb
shl
shr
movsl
xor
add
fadds
add
mov
xchg
pop
jp
jecxz
pop
leave
mov
mov
sbb
roll
push
call
mov
mov
mov
fisttps
dec
cwtl
push
icebp
cmp
in
fwait
out
adcl
jge
jecxz
dec
and
int3
pop
adc
in
sahf
xor
rolb
scas
push
push
push
adc
cmp
lret
mov
jb
add
loop
sbb
xor
xchg
pop
cmpsl
nop
inc
dec
movsb
pop
bt
push
pop
xchg
pop
cmp
jmp
dec
mov
aaa
mov
repz
addr16
loop
addr16
ds
xlat
dec
daa
mov
fcomp
cmp
push
mov
popa
nop
push
mov
in
sub
aad
pop
push
aas
hlt
sarb
jno
leave
adc
pop
jo
pop
les
jp
add
sub
xchg
jge
das
icebp
popf
xor
pop
adc
cmp
dec
out
cmc
ds
mov
sbb
adc
movsl
sahf
mov
mov
push
bound
add
mov
addr16
scas
push
or
daa
jp
rcll
jns
addr16
xchg
push
mov
test
adc
inc
jo
pop
ja
lahf
bound
dec
push
push
imul
push
jnp
movsl
pop
aas
or
adc
mov
aaa
inc
dec
adc
aaa
repnz
and
inc
add
movsl
sbb
sbb
push
int3
push
in
push
xor
movsb
mov
negl
or
aaa
mov
and
nop
push
or
xor
push
push
sbb
pop
jmp
test
adcb
cmc
lock
hlt
fucom
xor
adc
add
sbb
and
inc
mov
mov
push
rorb
stos
cmc
mov
mov
test
icebp
movsb
iret
pushf
dec
jp
leave
xchg
mov
jae
mov
add
sub
test
fiadds
aaa
mov
push
stos
sbb
and
popa
shlb
stos
jo
jg
adc
push
push
jne
iret
push
stc
xchg
xchg
adc
fidivrl
push
sub
dec
pop
cs
shlb
adc
pop
in
xor
mov
pop
push
arpl
mov
push
lock
clc
addr16
call
lds
je
cmp
sub
icebp
ljmp
cwtl
or
pusha
pop
or
std
xchg
int3
and
mov
xor
and
push
pushf
scas
xor
mov
add
outsb
adc
xchg
loope
jne
pop
mov
pop
scas
push
jnp
dec
mov
sbb
or
sub
repz
leave
and
ja
adcl
sbb
jecxz
inc
mov
sbb
sub
push
lret
adc
mov
xchg
push
aad
inc
mov
xchg
and
push
ret
inc
pop
std
popa
scas
in
outsl
aad
lahf
arpl
ret
mov
pop
test
movsl
mov
je
lret
add
ret
je
pop
flds
out
xor
lock
ror
mov
jae
cmpb
adc
xchg
aaa
push
icebp
xor
cmpsl
xchg
in
outsl
xchg
pop
pop
mov
imul
test
out
mov
loope
ret
fidivrl
aad
push
inc
js
pop
test
mov
sbbl
jmp
xchg
ljmp
fistps
add
pushf
insb
out
mov
les
sbb
movsl
lret
mov
lret
loop
data16
and
dec
pop
inc
nop
outsl
add
repz
aas
jne
pop
shl
cmp
loope
dec
sub
out
pop
shl
imul
filds
sbb
ret
pop
push
popa
fld1
hlt
cmp
mov
push
outsl
xchg
push
mov
inc
pop
aad
jae
push
insb
and
pop
xlat
push
push
rclb
rcrl
mov
popa
roll
sbb
inc
jbe
out
or
ret
popw
add
sarl
push
popf
leave
inc
int
push
push
push
mov
aas
add
orl
and
js
lods
and
scas
imul
push
mov
insb
loop
sub
xchg
and
cwtl
movsb
mov
add
pop
stc
mov
inc
push
mov
mov
xchg
pop
loopne
adc
sarb
jmp
addr16
sbb
adc
aaa
sarl
xchg
push
pop
leave
push
sbb
add
addr16
dec
mov
inc
push
push
shr
push
push
dec
or
xchg
adc
outsl
ds
loopne
loope
mov
add
andl
ss
inc
addr16
push
xchg
adc
cld
jo
loopne
push
or
inc
mov
push
xchg
xor
stos
es
ficoml
cmc
push
xchg
int3
jecxz
cmp
push
pop
repz
xorb
push
pop
jb
pop
aad
rcrl
mov
ljmp
lret
mov
rolb
aas
addb
outsb
fbld
pop
ja
push
sub
pop
push
jae
in
push
fmulp
lahf
cmp
pop
cli
repz
adc
aaa
mov
mov
sti
and
inc
ret
or
out
pop
sub
packssdw
cmp
pop
mov
ret
push
mov
jle
push
lds
cmpl
xor
xor
xor
fs
add
pop
ljmp
daa
out
loop
inc
rcrl
icebp
jmp
out
mov
enter
cli
bnd
lea
push
lds
xchg
push
jge
cwtl
jae
repz
aas
idiv
push
int3
mov
lret
aaa
and
lods
mov
mov
je
icebp
mov
std
repnz
popf
fidivs
push
or
pop
or
adc
jae
inc
rolb
add
and
aaa
cli
dec
jp
push
dec
pop
scas
dec
test
scas
adc
jne
popf
dec
insb
sub
mov
cmp
cmp
arpl
or
mov
int
dec
out
lods
and
sbb
mov
lea
inc
dec
rorb
pop
push
add
mov
imul
into
adc
mov
fsubrp
sbb
jg
or
inc
sbb
addr16
fistps
push
and
inc
jecxz
fcomps
mov
inc
fstps
cmp
inc
out
push
or
and
mov
push
fcomi
aam
xchg
js
xor
outsl
cmp
mov
aas
cli
adcb
xchg
jecxz
outsl
mov
dec
xchg
add
mov
sbb
inc
inc
lret
aam
inc
and
xchg
inc
pop
push
mov
push
int
and
sub
loop
sbb
rcrl
ficomps
repnz
stos
cwtl
push
sbb
add
sbb
add
cmpsl
xchg
adc
leave
xchg
mov
inc
or
imul
mov
xchg
pop
adc
jo
aad
pop
xor
jb
int
std
jb
push
bound
pop
subl
xor
cltd
push
fisttpl
xchg
mov
mov
push
filds
push
in
in
xor
in
inc
ret
fs
pop
rorl
push
xchg
jno
out
pop
sbb
dec
dec
fimull
xor
add
fidivl
rcrw
adc
push
cwtl
cmp
pop
xchg
pop
xchg
sbb
pop
loopne
xchg
inc
xor
insl
ret
scas
fists
mov
dec
dec
cwtl
aas
sbb
push
insl
loop
sar
xlat
push
jge
in
pop
push
rcll
ds
cmp
sub
outsl
scas
arpl
and
jmp
cmp
jne
mov
push
ficoml
or
cmp
outsb
fcoml
push
cmp
fcomi
xor
push
xorb
add
mov
js
and
jp
push
ret
movsb
xchg
je
cmp
emms
mov
fcoml
xchg
mov
insb
push
inc
jecxz
push
cmp
daa
dec
mov
pop
mov
rorl
xchg
mov
imul
xchg
xchg
pushf
push
fidivl
lods
pop
pop
mov
movb
nop
push
stos
push
test
push
xchg
add
xchg
mov
dec
mov
orl
addr16
pop
cltd
test
mov
cmp
inc
push
fidivrs
fs
push
les
inc
orl
push
shlb
test
mov
lods
ja
pop
mov
inc
in
call
inc
xlat
testb
loop
xor
push
repz
loope
unpckhps
mov
lea
mov
out
push
cmp
pop
jb
fcoml
scas
icebp
mov
std
xchg
push
xor
add
push
sbb
sbbb
leave
dec
out
mov
cmp
lahf
fldt
mov
hlt
mov
aam
push
xcrypt-ofb
cmpsl
push
addr16
js
int3
lret
adc
inc
push
jecxz
adc
rcll
mov
mov
inc
xchg
scas
push
mov
scas
lock
push
pop
or
test
jns
dec
daa
cmp
xor
inc
push
dec
adcl
pop
xchg
roll
push
mov
push
mov
dec
testb
pop
push
fildll
xlat
push
mov
cmc
icebp
imul
movsl
sbb
gs
sbb
push
cmpsl
mov
xchg
xor
aaa
mov
rcrb
in
push
cltd
and
je
push
gs
dec
test
inc
adc
push
mov
mov
ljmp
hlt
push
and
push
aas
fld1
sub
in
push
inc
cwtl
mov
mov
xchg
mov
pop
ja
jge
cmc
js
push
or
mov
sbbb
sti
mov
rorb
subl
aad
sbb
aaa
rcr
push
leave
out
das
adc
aad
pop
push
push
scas
jb,pn
call
jbe
movq
into
dec
mov
cmpb
aaa
in
mov
inc
add
pop
cwtl
mov
into
push
in
mov
cmpsb
pop
xor
dec
rcll
mov
stos
adc
push
fisttpl
arpl
mov
cmp
sarl
xchg
jae
xor
jne
in
mov
xchg
cmp
cmp
incl
enter
push
aaa
in
add
int3
and
xor
arpl
pop
jle
ret
add
jb
push
fucomp
fsubrs
push
cmp
push
lds
jp
xchg
js
das
divl
int
dec
pop
pop
xchg
and
sub
mov
lahf
ss
cmp
fildl
mov
cmpsl
xor
outsb
cmpsb
push
or
push
jle
test
add
push
pusha
ja
call
in
pop
fdivrl
out
dec
xor
mov
jg
pushf
push
mov
and
iret
outsl
stos
gs
hlt
jge
test
xchg
imul
pop
jp
xor
inc
add
xchg
cwtl
lds
addr16
faddp
pusha
mov
xchg
ja
pop
xlat
test
pop
cltd
mov
adc
pop
ficoml
outsl
fcoms
mov
je
sub
addr16
out
pushf
add
push
jmp
cmp
push
jl
inc
icebp
mov
loopne
push
mov
pop
pop
lret
fstpl
adc
pop
push
sub
push
pop
sub
xchg
sti
xlat
sbb
enter
xor
mov
fmuls
sub
ficoms
cltd
in
call
sbb
ss
push
pusha
fiadds
fisubl
pop
mov
add
pop
jmp
jg
mov
and
out
xchg
jg
cmp
jp
jbe
inc
dec
dec
or
jb
cmp
jge
sbb
jmp
dec
pushf
pop
push
add
dec
gs
fcoml
cmpsb
adc
daa
xorl
inc
push
push
xchg
pop
loope
cmpsb
mov
cltd
scas
or
sbb
mov
lret
mov
flds
dec
mov
jp
aas
sbb
in
jnp
push
push
fildl
cmp
pop
adc
xlat
call
leave
inc
test
mov
int3
fistps
mov
pop
loope
xchg
add
outsl
cli
test
mov
mov
fs
call
cs
cs
xlat
flds
jmp
sub
lods
push
xor
stos
pop
mov
sti
outsb
das
sti
jmp
lea
rcrl
adc
andl
mov
xchg
pop
iret
cmpsl
fldcw
cmp
push
xchg
xchg
iret
sar
insl
test
je
jmp
loop
add
cmp
mov
inc
pop
rorb
in
jo
or
adc
pop
fnsave
fidivrl
popf
pop
xchg
xchg
outsl
ror
xchg
movl
xchg
aas
pusha
call
cmp
negb
add
iret
pop
jb
loop
movsl
xor
scas
pop
imul
jno
pushf
pop
cmp
pop
adc
jno
loop
out
out
out
iret
in
push
adc
hlt
sbb
test
daa
adc
pop
cmp
std
pop
ljmp
fisubrl
xor
adc
ljmp
push
add
test
jle
rol
mov
pop
arpl
out
push
lock
adc
loop
mov
xchg
mov
clc
adc
ja
pop
or
push
or
xchg
movsl
stos
fucompp
and
xlat
jnp
nop
adc
sub
push
adc
pop
push
dec
stos
andb
jbe
inc
cmp
xchg
dec
js
cld
pop
and
mov
mov
pop
push
lahf
dec
movsb
cmp
mov
in
jge
cmp
and
test
cltd
xchg
ficomps
insb
pop
push
pop
jecxz
addr16
and
sarb
add
fcomi
sub
hlt
loope
arpl
cli
sub
gs
adc
cltd
fisttpl
xchg
hlt
mov
push
fdivl
add
ljmp
cmpsb
or
push
pop
rorl
out
fwait
nop
sub
outsl
not
in
sbb
scas
mov
mov
xchg
cmp
pop
mov
nop
dec
xchg
sub
js
ret
paddd
mov
rcrl
jmp
mov
ss
or
out
repz
xchg
sbb
pop
pop
cmpb
pushf
sbb
cmp
enter
sub
aas
fbstp
push
xor
push
mov
loope
jge
or
jl
ja
clc
mov
in
push
hlt
shrl
push
std
mov
inc
rorl
pop
dec
aaa
xchg
into
fistps
jp
sbb
sarb
or
mov
es
and
adc
xchg
mov
adc
fstps
rcll
fisubrs
mov
jb
adc
in
inc
das
xlat
mov
mov
mov
and
or
les
cmpb
lods
loope
add
subl
loope
cltd
lods
aad
das
mov
in
fcomps
xchg
test
inc
mov
pop
pop
push
subl
mov
mov
sbb
jp
push
loop
ja
shrl
test
or
mov
es
xorl
mov
pop
hlt
push
pop
mov
xchg
pop
ret
adc
jae
popf
out
xor
push
daa
pusha
int3
sbb
inc
xchg
add
mov
sub
pop
pop
xor
mov
jecxz
pop
divb
and
xchg
dec
jp
shll
movsb
sbb
out
popa
lcall
shl
sub
or
arpl
out
pop
std
lret
sub
adc
inc
adc
loop
mov
add
rcrl
xor
cmp
pop
ficompl
lods
add
jecxz
mov
in
pop
xlat
dec
pop
movl
ret
in
and
pusha
jnp
sbbb
push
rcl
sub
push
xorps
std
mov
push
mov
pop
inc
adc
mov
sbb
jne
fidivs
lcall
adc
mov
mov
pop
xchg
jp
sti
sbb
gs
scas
test
inc
sbb
movsl
mov
scas
loopne
jmp
adc
mov
ret
ljmp
mov
mov
shll
push
adc
pusha
in
int
cmp
iret
inc
daa
fldcw
mov
ja
fisttps
outsb
inc
mov
sahf
aas
push
movsb
cli
xchg
push
jno
shlb
mov
xchg
and
jnp
fsubl
fidivrs
dec
mov
inc
mov
stos
scas
ror
inc
movsl
fldpi
cli
xchg
jns
fstps
jge
adc
add
movsl
aam
mov
shrl
fcoml
loope
shlb
repnz
loope
adc
pop
addr16
push
je
aad
jne
xchg
xchg
cmp
sub
in
push
shlb
mov
icebp
lret
add
push
mov
add
popf
mov
lock
push
iret
aaa
or
aaa
lahf
jle
ss
movsb
mov
sahf
adc
addr16
xchg
jns
jl
xchg
out
inc
arpl
adc
push
pop
lahf
out
fcoml
mov
jmp
das
lods
hlt
shlb
xor
pusha
cwtl
ja
mov
lret
mov
adc
out
pop
fsubrs
popa
or
add
arpl
aas
mov
push
pop
and
testb
fidivl
jb
sub
xchg
mov
iret
push
jle
fisubl
cld
mov
repnz
mov
push
in
lcall
addr16
dec
jp
xchg
and
mov
shrb
movsb
rcll
jle
hlt
mov
push
mov
push
test
inc
jl
cmp
or
fidivs
dec
mov
mov
push
jo
push
mov
outsl
dec
dec
jecxz
mov
cmp
insl
outsl
test
mov
adc
mov
inc
pop
add
add
cwtl
mov
xor
movsl
sti
and
std
loope
pop
xchg
shll
lea
scas
and
imul
pop
pop
repz
fcom
dec
aam
test
push
mov
mov
das
dec
rorl
xchg
xor
jp
outsl
or
cmp
in
push
adc
scas
inc
mov
aaa
fnsave
cmp
pop
pop
mov
push
adc
jle
jecxz
mov
push
iret
pop
mov
fists
test
dec
push
sahf
mov
push
add
outsb
rep
fcmovbe
mov
mov
mov
repz
rorb
push
pop
and
add
mov
push
dec
xlat
and
inc
pop
mov
outsl
push
nop
xor
mov
js
mov
and
idivb
jnp
push
push
mov
inc
int3
insb
jge
push
fsubl
in
loope
push
pop
addr16
push
sbb
xchg
push
adc
push
pop
mov
leave
push
xchg
daa
xchg
or
ret
push
lock
hlt
cmpsl
push
mov
sub
mov
xor
aas
cmp
repnz
es
imul
sar
xchg
lret
ja
loop
jg
inc
std
pop
mov
in
pop
add
pop
cmp
int
push
jp
push
out
mov
jbe
lret
mov
sub
dec
popf
fbld
das
icebp
push
xchg
push
jno
cmpxchg
and
hlt
xchg
push
outsb
rdtsc
shll
jno
sahf
mov
mov
imul
test
cmpsl
jmp
mov
imull
rolb
push
loopne
mov
cmc
test
cli
and
pop
es
movsb
loope
xchg
arpl
insl
hlt
sti
or
rclb
xor
add
or
ret
push
and
aaa
mov
xchg
jbe
push
sbb
add
cmpsl
push
xor
fnstsw
and
ja
and
adc
pushl
cmc
stos
inc
push
mov
push
mov
jmp
fdivs
jb
jp
aam
ret
loop
andb
mov
pop
pop
pop
inc
aas
and
jo
cmp
push
clc
repnz
scas
jne
fld
fildll
mov
ds
cmpb
mov
inc
cmp
rcl
xor
push
aas
rcll
adc
cli
lahf
cmp
cmp
sbb
xchg
scas
xchg
and
cmp
xchg
sbb
dec
inc
and
push
loop
xchg
jbe
push
push
mov
out
es
mov
enter
pop
nop
add
push
push
pop
xchg
xor
aaa
out
mov
icebp
shl
mov
in
sbb
rcrl
into
int3
sbb
fucomip
push
aas
dec
and
inc
int
lea
pop
ss
scas
xchg
adc
sub
pop
adc
push
cmpsl
push
push
mull
subb
adc
into
push
lds
fsts
mov
mov
cmpb
pop
fcompl
mov
mov
jl
rclb
nop
test
out
jge
dec
lret
mov
and
mov
and
jecxz
out
cld
sbb
test
mov
mov
mov
mov
push
je
lods
mov
mov
pop
mov
lock
mov
fdivrl
out
adc
lret
cmp
sti
sbb
in
and
push
aam
or
aaa
out
cli
jne
movnti
jo
mov
ljmp
push
mov
dec
out
jnp
inc
push
pop
sub
push
dec
ja
movl
aaa
es
and
pop
dec
insb
cmp
arpl
fwait
aad
push
data16
xchg
add
pop
pop
xchg
mov
insb
mov
inc
aam
push
push
mov
and
mov
aaa
icebp
and
cmp
adc
mov
adc
pop
jo
lods
push
mov
cmpsb
and
push
mov
imul
test
fcoml
sahf
movb
cwtl
loope
lahf
popa
jno
leave
mov
push
pop
pop
mov
push
mov
dec
movsl
popf
push
adc
sub
xchg
movsb
pop
in
xchg
mov
xchg
js
adc
test
sub
jo
outsl
les
xlat
dec
stos
bswap
jnp
or
pop
pusha
adcl
pop
jl
push
cltd
insl
push
flds
mov
fucom
gs
push
mov
dec
out
xchg
pop
aaa
mov
fiaddl
mov
or
and
push
add
xchg
popf
push
adc
xlat
adc
cmpsb
pop
pop
push
mov
add
test
imul
lret
xor
push
mov
xchg
mov
push
mov
rep
and
cmp
fs
addr16
out
push
dec
lods
mov
dec
aaa
lds
or
in
hlt
and
jns
leave
mov
push
icebp
jge
outsb
push
mov
sbb
fstpt
jb
push
mov
test
test
es
cmp
hlt
aam
lahf
sbb
mov
sbb
sub
call
dec
inc
and
inc
jecxz
and
mov
mov
jp
push
push
adc
sbb
les
mov
pop
loopne
scas
inc
inc
movsl
xor
cmp
pop
mov
push
adcb
xchg
inc
push
cltd
add
jmp
mov
push
dec
mov
fcomps
enter
jo
dec
lds
je
daa
push
ja
pop
scas
inc
add
and
cmp
sti
fmull
mov
and
jecxz
je
pop
pop
mov
in
dec
in
adc
mov
les
cmc
mov
push
not
ret
mov
ja
pop
inc
in
push
lea
test
lock
add
out
add
adc
outsl
push
add
pop
fimull
xor
pop
mov
orb
mov
pop
je
adc
cwtl
ret
push
push
inc
dec
xor
ja
andl
mov
inc
mov
sbb
insl
aam
xchg
mov
std
jb
xchg
sub
int
jbe
in
rorb
dec
lds
sub
xor
into
jle
mov
mov
or
imul
fs
js
jno
inc
mov
jne
push
pop
jle
xor
push
adcb
dec
push
into
cltd
inc
xchg
and
stos
lret
lret
rorb
jb
jle
enter
movsb
push
fstl
jbe
push
enter
lods
sbb
pop
icebp
jae
lea
das
mov
cmpsb
pop
scas
fidivs
sbbb
rclb
and
es
push
arpl
jns
sbb
gs
addr16
xlat
sbb
push
arpl
sub
jno
leave
push
mov
aaa
push
mov
mov
shll
enter
xchg
mov
lods
mov
fcoml
pop
sahf
popl
cli
push
mov
xor
xchg
addr16
arpl
push
into
cmp
push
sahf
inc
jge
mull
lcall
pop
rorl
subl
mov
jo
lea
lcall
dec
dec
aad
sbb
push
mov
jecxz
loop
pop
lret
inc
sbb
out
loope
jecxz
adc
addr16
add
aam
mov
push
lret
push
into
or
loop
push
cli
scas
ljmp
adc
push
cmp
inc
sbb
nop
push
es
loope
fcoml
jecxz
dec
outsl
outsb
pop
inc
sar
cmpl
jecxz
xchg
add
lahf
js
iret
or
push
jne
jb
dec
jl
bound
cmp
xchg
add
rsm
push
shl
nop
add
mov
cmp
imul
repnz
mov
xchg
pop
jge
add
fnstenv
dec
sub
lods
xchg
add
and
sbb
xchg
test
push
mov
pop
jle
xchg
std
sbb
pop
test
push
jns
xchg
leave
lret
or
lret
or
jbe
sub
mov
mov
jns
adc
in
out
mov
loop
rcl
loop
pop
out
aam
and
ret
stc
mov
push
sbb
adcl
and
in
loope
xor
mov
pop
movsl
jmp
mov
pop
mov
cs
mov
push
ds
loope
sahf
and
push
in
das
sarl
dec
addr16
out
sahf
jne
movsl
xorps
dec
jl
push
scas
jnp
push
inc
sbb
sbb
fists
adc
fld
cmp
inc
cmpsb
and
jno
mov
out
nop
mov
cmp
insb
xlat
sub
xchg
loope
daa
cmc
outsl
add
imul
subl
mov
inc
sahf
arpl
out
loop
lds
icebp
sbb
adc
lea
mov
cmp
mov
call
int
data16
lea
sub
gs
rorl
lcall
or
shll
sub
fsubrs
cltd
push
pop
std
ja
nop
loop
sub
mov
outsl
xchg
xor
xchg
jns
mov
das
jl
xchg
push
pop
iret
dec
inc
cmp
in
dec
or
sbb
jmp
insl
or
xchg
jne
out
aaa
pop
lods
imul
hlt
loopne
and
mov
jns
mov
out
ret
mov
btc
rcrl
int3
in
arpl
mov
xchg
test
mov
push
or
pop
push
mov
cmpsl
sub
inc
call
das
push
xor
mov
push
dec
sbb
jle
adc
push
cmp
jns
pop
enter
arpl
mov
int
aaa
lret
pop
add
add
into
push
sbb
push
lods
aas
sbb
pop
lds
data16
scas
jmp
fwait
insb
fisttpl
xchg
stos
push
and
sbb
rolb
out
fldenv
out
and
outsl
int
mov
pop
add
cmp
loop
fs
inc
sbbl
sub
adc
push
xchg
or
in
fsqrt
lcall
pop
outsb
and
push
ljmp
imul
push
add
sbb
or
mull
xor
in
jg
int3
push
lret
lock
lock
cwtl
loope
mov
lahf
dec
mov
mov
gs
cmp
stos
outsl
push
dec
xor
add
loop
lret
adc
and
shll
int
outsb
push
jp
enter
push
jl
xorl
lret
rcrb
mov
sahf
adc
mov
jb
cli
push
cmp
mov
jae
sub
add
je
int
fwait
inc
lahf
cmp
mov
scas
mov
div
sbb
xchg
mov
inc
fisubrl
das
popa
mov
test
xor
pushf
je
push
xor
shr
test
int
pop
push
out
push
outsb
xchg
add
mov
cmp
test
adc
push
mov
push
xchg
hlt
lods
xchg
ljmp
jno
icebp
mov
fisttps
aad
inc
lea
rclb
push
sbb
das
jno
xchg
push
cld
push
popa
scas
push
mov
int
movsl
imul
jmp
mov
filds
bound
gs
pop
mov
cmp
cmp
jnp
adc
stc
jnp
jg
leave
loop
or
push
and
pop
ret
ret
stos
push
add
adc
fsubl
stos
in
inc
or
ja
pop
shll
dec
popf
add
fnstcw
call
adc
lods
daa
pop
mov
add
pop
sti
xchg
fiadds
push
mov
mov
push
stos
push
int3
mov
and
xchg
shlb
insl
lahf
jb
push
cli
test
inc
dec
lock
fsubl
mov
mov
sti
cmp
xchg
adc
pop
test
jmp
fists
test
pop
push
fcoml
cltd
sub
xchg
pop
popf
add
out
scas
jne
mov
sbb
popa
andl
outsb
or
sbb
push
rorb
aaa
push
and
inc
mov
inc
xchg
jmp
mov
inc
or
fstl
xor
mov
shlb
pop
and
imul
outsl
adc
int
jb
mov
push
adc
pushf
push
add
jecxz
insl
lods
sub
call
loopne
push
xor
arpl
adc
push
lahf
pop
push
pop
out
add
push
push
sbb
xchg
push
arpl
imul
mov
outsl
sub
dec
shlb
mov
jns
daa
pop
jnp
cli
push
push
mov
and
push
mov
cmpsb
inc
add
cli
cmp
xchg
push
sbb
or
adc
aaa
cs
cmp
pop
dec
sub
xchg
xlat
pusha
sub
jl
fists
sbb
push
lret
fistpl
ds
not
ss
cmp
cmpsb
xchg
or
outsb
jmp
mov
sub
xor
push
in
pop
push
pop
push
in
mov
mov
mov
shll
mov
ds
adc
cwtl
push
dec
jmp
not
pusha
loop
mov
jnp
lret
je
addr16
xchg
push
xchg
mov
js
sahf
ds
xchg
ret
loop
mull
inc
roll
fldenv
in
push
lods
pusha
xor
mov
movsl
pop
or
ljmp
stc
mov
push
jge
movsl
add
adc
in
pop
adc
push
scas
adc
pop
clc
or
mov
pop
inc
sub
mov
push
roll
sbb
mov
pop
dec
jmp
cld
cltd
push
mov
fdivr
rcll
cs
adc
adc
fisubl
insb
pop
jmp
aas
and
sbb
adc
jo
in
push
addr16
out
aam
sub
mov
and
push
ss
mov
inc
outsb
pop
nop
push
insb
mov
les
xchg
add
push
sub
outsl
jns
lahf
push
pop
push
ljmp
or
enter
in
ret
dec
jb
push
out
loop
and
cmp
out
es
cmc
shll
daa
mov
mov
iret
aas
jg
mov
loopne
pop
and
push
and
loope
fsubrl
mov
lret
pop
orb
push
in
fstps
and
pop
in
inc
mov
xor
pop
push
jle
clc
jno
das
sub
inc
push
imul
pushl
popa
inc
testl
js
cwtl
push
push
ficomps
cmpsb
jp
out
push
pop
imul
push
xchg
cld
push
fildll
push
push
aaa
adc
test
pop
repz
ljmp
sbb
mov
and
adc
lods
push
sbbb
out
rcrl
push
neg
pop
test
or
test
pop
je
push
test
mov
insl
pop
mov
or
jno
rcll
inc
in
fs
sub
jbe
push
inc
scas
mov
mov
pop
push
sbbl
cmp
shrb
in
insb
mov
push
mov
mov
and
jo
push
lods
or
out
jp
jbe
mov
ljmp
pop
lock
arpl
xlat
pop
aam
ficoms
out
insb
push
or
insb
push
ret
sbb
cmp
out
mov
fisubrs
mov
and
push
js
mov
popf
cmp
pop
jg
xchg
mov
add
and
adc
not
aam
imul
cmp
sahf
ss
icebp
jae
out
jecxz
out
push
inc
dec
mov
add
sahf
aad
adc
sub
pop
jmp
fbstp
push
das
out
sbb
fadds
outsb
add
mov
push
sahf
sbb
popa
or
mov
push
fadd
insb
push
in
pusha
loope
mov
mov
daa
jns
xchg
inc
xchg
fiaddl
push
lods
pop
lods
leave
setge
hlt
addr16
cld
pop
sbb
cmpsb
xor
aas
std
aaa
pop
ja
xor
inc
dec
andb
subb
lds
push
into
insl
jbe
stos
pop
or
popf
and
adc
sbb
in
sub
pop
js
or
arpl
div
and
pop
movsl
je
xor
fs
cltd
push
sub
cmp
fbld
dec
fcomps
jp
pop
dec
insl
fdivr
arpl
daa
aam
jg
cs
inc
ret
push
in
lea
cmp
ljmp
cmp
adc
stos
jmp
mov
pop
mov
dec
test
lock
jo
test
mov
jb
push
or
inc
or
pop
sub
xchg
sarl
push
jecxz
sti
jg
push
jo
fs
out
push
call
mov
cwtl
inc
sbb
push
mov
or
je
mov
enter
cmp
sahf
inc
scas
adc
push
inc
mov
mov
add
hlt
dec
ds
cwtl
or
mov
iret
shlb
in
pop
dec
lods
sbb
mov
rcrb
int
sub
push
inc
lahf
js
loop
adc
jle
out
xor
cmpsb
aam
pop
fs
mov
sub
aas
test
pop
push
pop
repnz
in
xor
push
sarb
xchg
das
cmp
and
push
scas
in
dec
push
cmp
add
cmp
mov
adc
mov
cmc
push
inc
mov
jnp
ja
push
cli
pushf
and
cmp
fimull
popa
fcoms
inc
js
addb
movsl
mov
dec
mov
ja
loopne
jl
sub
mov
cwtl
rorl
ja
lods
iret
stc
pop
and
push
sub
js
sti
jge
in
mov
pop
rcrb
inc
push
pop
stc
xchg
fwait
sbb
insb
out
add
pop
stos
cltd
jg
pop
pop
inc
out
lret
xchg
adc
xor
or
pusha
pop
out
lcall
je
cmc
push
jne
adc
push
adc
sub
mov
pop
pop
sbb
inc
push
outsb
xor
xchg
push
clc
inc
daa
dec
sti
mov
sbb
or
test
push
shll
adc
loop
hlt
aam
test
enter
add
mov
pop
scas
push
mov
adc
adc
xchg
nop
or
outsb
ja
fs
push
test
aaa
insb
sub
insl
into
es
fisubs
nop
repnz
jae
bound
push
and
insb
adc
sub
or
pop
es
sub
jb
cmp
add
pop
hlt
push
xor
ret
pop
xor
xlat
in
movsb
mov
sbb
push
xchg
scas
or
call
pop
or
rcrb
add
adc
and
mov
push
jecxz
push
jno
push
xchg
stos
jmp
scas
add
mov
cli
sti
and
xor
std
jecxz
sbb
dec
or
pusha
inc
add
dec
cltd
adc
and
push
jne
movsl
lret
mov
fidivrs
stos
pushf
mov
ds
fisttpll
fisttpl
sbb
mov
mov
lods
mov
xchg
pop
out
arpl
mov
enter
pop
lds
in
fisubl
dec
mov
push
xlat
xor
inc
xchg
push
jne
sahf
or
sbb
and
scas
add
rcrl
in
pop
ds
ret
push
call
lahf
fcompl
push
pop
xchg
fnstsw
dec
sbb
ja
jecxz
repnz
scas
out
stc
inc
adcb
pop
aam
pop
insb
push
mov
fmul
notl
pop
mov
fnstsw
in
xor
jle
push
addr16
mov
sub
add
push
xlat
cmpl
push
scas
pop
mov
cmp
enter
fcoms
je
repnz
inc
shrb
dec
mov
in
pop
rcrb
dec
sbb
jecxz
outsb
and
lret
stc
cmp
shll
cmpsb
in
fcoml
shrl
dec
xchg
pop
out
mov
pushf
xchg
add
cmp
addr16
mov
notb
or
xchg
les
push
xchg
or
int3
push
popa
lods
inc
orl
xchg
cmp
and
outsl
sub
xchg
sbb
icebp
jnp
push
std
add
lahf
and
fdivs
out
inc
lock
jb
rcr
stos
in
inc
push
ja
leave
cmp
clc
or
inc
adc
dec
dec
iret
pusha
pusha
xor
mov
or
rorb
fidivs
stc
jnp
push
or
sti
xor
push
xchg
mov
js
cmpsb
pop
out
outsb
call
inc
in
pop
jmp
lahf
add
nop
jns
outsb
into
xor
mov
out
jg
icebp
pop
loop
pop
push
pushf
xor
stc
cmpsb
ret
inc
pop
loope
jmp
icebp
mov
xor
push
outsb
push
aam
cmp
cwtl
push
xor
jecxz
mov
rolb
cli
dec
mov
and
mov
xchg
inc
jle
pop
test
and
fldl
mov
es
mov
or
daa
repz
bound
outsl
push
arpl
push
dec
in
cld
and
add
jecxz
mov
cmpsb
fistl
test
stos
inc
aas
mov
push
push
adc
pop
mov
add
dec
and
or
or
ficoml
jnp
ljmp
fs
jge
sbb
sbb
leave
push
push
arpl
adc
or
fcompp
enter
repz
lahf
push
mov
push
xchg
stc
xchg
mov
pop
pop
movsb
xchg
jnp
and
xor
fdivs
add
inc
lcall
pop
mov
mov
insl
cmp
outsl
pop
lret
mov
add
repnz
mov
sbb
mov
lds
push
jp
js
fldenv
mov
push
scas
aas
xchg
push
fbld
imul
add
daa
cmp
leave
test
hlt
adc
sub
rcr
xchg
andb
repnz
cmp
loop
inc
push
jg
and
aad
nop
lock
lods
cwtl
dec
data16
jb
loopne
and
mov
mov
in
shr
fistps
repnz
fcmovnb
jle
mov
cmp
bound
mov
jp
mov
stc
imul
loope
fidivs
add
or
idivb
mov
add
fcmovb
jl
or
pop
addr16
jle
leave
in
mov
std
mov
fsts
es
roll
lds
lret
fisttps
push
lahf
xor
ficompl
mov
pusha
outsl
xchg
inc
pop
jno
aaa
sbbb
push
insb
xlat
jnp
addr16
out
adc
lods
jecxz
add
stc
or
imulb
movsb
pusha
outsl
jb
inc
push
aaa
int3
push
cli
decl
jge
sub
aas
ret
rcrb
inc
pop
push
fwait
sub
sbb
push
sti
andl
jnp
lret
push
ret
jne
mov
jae
fcomip
shll
addr16
sbb
add
ja
mov
sbb
xlat
dec
push
stc
push
push
shrb
mov
in
rcll
push
arpl
ret
out
push
imul
pop
cmp
lret
rcll
jg
xor
push
lds
aam
mov
xchg
xchg
mov
cltd
fs
sahf
sbb
push
mov
mov
arpl
daa
pushf
or
sbb
and
sub
mov
ljmp
inc
arpl
push
push
mov
mov
mov
adc
push
pusha
fwait
push
xchg
push
stc
pop
cltd
test
mov
xchg
push
arpl
shll
pop
ljmp
push
in
in
push
imul
inc
dec
mov
fisttps
adc
fistpl
mov
xchg
or
cwtl
pop
lock
std
andb
outsb
push
shrl
cli
mov
ret
loope
mov
and
aam
pop
rorb
test
outsl
or
xor
push
lods
xlat
push
push
pop
repz
cwtl
jge
push
cld
cmp
push
cmpsl
xchg
xor
push
inc
lock
pop
cmp
push
mov
or
xchg
mov
rclb
jnp
push
jecxz
pop
lcall
push
dec
mov
cmp
push
xlat
mov
call
xchg
shl
add
xchg
inc
sbbb
add
mov
lods
fistl
call
pop
adc
adc
push
addr16
pop
jae
push
ret
addr16
or
xor
out
jecxz
shl
in
push
push
in
dec
xchg
cmp
fadd
push
lret
leave
sti
data16
pusha
test
andb
mov
inc
adc
imul
cmp
mov
iret
and
add
in
jns
mov
mov
lock
push
imul
xchg
xchg
ret
jnp,pt
test
add
loop
jmp
pop
jmp
test
mov
int3
push
inc
add
push
pop
sub
jge
faddl
pop
mov
ret
ljmp
js
mov
push
aam
xor
sub
scas
incb
pop
xchg
and
push
shll
jecxz
testb
lret
push
push
loopne
push
jmp
scas
cmc
mov
push
cmp
jb
inc
mov
daa
lds
mov
test
mov
ret
cwtl
push
scas
mov
sarb
jmp
or
push
lahf
add
cmp
test
lea
dec
cltd
push
dec
push
daa
movsl
cmpl
pop
push
push
jbe
xchg
pop
shrb
cmpsb
push
dec
sbbb
iret
addr16
and
addr16
insb
add
mov
push
data16
inc
sub
gs
push
mov
out
xor
xchg
mov
push
add
xchg
test
mov
jge
push
mov
add
iret
pop
inc
mov
pushf
mov
push
rcll
jecxz
iret
lea
test
push
push
dec
push
out
inc
push
fdivl
int
cmp
movsl
push
in
jne
mov
addr16
cmpb
movsb
ljmp
out
xor
addr16
xchg
lods
xor
mov
not
ret
push
push
inc
cltd
sub
push
and
in
push
vcvtdq2ps
sub
add
push
aad
jmp
cmc
neg
movsl
mov
mov
repnz
mov
mov
inc
lret
adc
mov
out
bound
stos
and
fisttpll
lahf
movsb
loope
jge
in
push
and
cmpsl
out
mov
xchg
ljmp
mov
test
pushf
sbbb
push
add
bound
aas
mov
adc
cmpsb
inc
mov
and
push
data16
into
cmp
popf
adc
jb
js
push
cmp
test
cmpsw
xor
xor
cmp
mov
push
add
test
pop
loopne
fs
mov
push
push
pop
add
sti
and
and
inc
lock
sub
xchg
in
test
push
xchg
das
mov
fwait
mov
xor
ja
lock
push
cmpsb
ss
nop
pop
push
mov
ficoml
pop
scas
push
cmpsb
xor
dec
cmp
jnp
in
and
sbbb
mov
xor
xchg
mov
adc
xchg
jg
shl
cmp
loope
jp
aam
in
push
add
add
aaa
lret
in
pop
fdivrp
pop
push
or
cmp
jo
lcall
js
cmp
test
fwait
inc
adc
loop
outsl
clc
adc
push
shrb
popf
pop
std
inc
stc
push
mov
mov
test
test
ficomps
ja
and
adcl
push
lcall
mov
call
daa
dec
mov
insl
pusha
out
stc
inc
or
mov
pop
ljmp
push
sbb
testl
std
xor
aaa
inc
pop
xchg
mov
push
xchg
loop
mov
imul
push
push
dec
fdivrl
push
scas
shl
push
cmp
imul
push
push
add
shl
add
xchg
xchg
lcall
mov
inc
cmp
push
les
jae
rcl
inc
lret
mov
rorl
mov
je
pop
clc
mov
mov
dec
iret
std
mov
push
xor
sbb
cmp
push
fsubrl
xchg
rcll
sti
push
iret
nop
xchg
push
sbb
jecxz
ljmp
pop
push
push
jge
jo
push
cmpl
push
or
stos
lahf
das
sub
pop
leave
cmpsb
or
xchg
insl
sbb
cmp
inc
ror
mov
adc
sbbb
test
aam
inc
dec
fldl
inc
int
sub
push
push
loop
mov
ss
lea
adc
ret
sub
jns
push
lods
sbb
jg,pt
dec
adc
jl
and
cmp
aaa
cmpsb
lds
loope
test
push
scas
push
or
mov
lret
push
or
xchg
mov
repz
cmp
testb
jg
mov
roll
push
xor
jns
filds
cmp
lret
stc
pushf
sbb
out
xchg
fs
push
push
testb
loop
jle
adc
sti
in
sub
arpl
rcrl
cli
push
push
xlat
pop
stos
jbe
mov
aas
stc
jle
or
roll
aaa
hlt
pop
daa
pop
hlt
aam
movsl
pop
mov
sub
sub
push
rorb
divl
les
stc
ss
push
popf
test
sub
inc
push
popl
jne,pt
push
in
lods
std
lds
fldl
push
lret
arpl
cmpsl
addr16
inc
repnz
push
or
daa
jg
ja
and
popf
pop
jae
sbb
insb
ret
adc
push
push
sbbb
in
push
subb
ja
test
sub
xchg
xchg
stc
fmul
add
pushf
repz
sti
mov
sub
pop
adc
push
mov
ljmp
sub
sub
dec
es
mov
dec
sbb
pop
xor
xchg
cmpb
shll
push
fidivrl
icebp
repz
push
packuswb
sbb
nop
jnp
shlb
jl
rcrl
pop
pop
nop
call
pop
lea
mov
mov
adcl
or
jl
adc
out
push
insl
scas
das
sub
cmpsl
rcrl
pop
adc
lahf
jecxz
int3
mov
xchg
sbb
cmp
add
sbb
cli
push
mov
and
sarb
loope
mov
xor
push
nop
pushl
xlat
jp,pn
loopne
in
dec
fnstenv
xor
xlat
mov
insl
int3
cmp
xchg
mov
inc
jle
sbbl
mov
or
adc
and
jp
dec
imul
cmp
mov
xchg
mov
push
add
ds
and
adc
mov
sbb
icebp
mov
stc
xchg
mov
loope
adc
mov
leave
xlat
pop
lahf
mov
leave
das
inc
pop
loope
movsb
divl
fs
pop
or
nop
jl
jmp
sahf
iret
stc
dec
insb
push
fcomp
fxch
cmc
mov
dec
rcrl
push
dec
push
xchg
loopne
rcr
xlat
pusha
movsl
push
movb
outsl
or
lret
imul
inc
aam
xchg
outsl
push
loope
jecxz
jl
pop
dec
jb
pop
mov
and
and
ljmp
mov
jmp
and
push
lcall
lods
pop
aad
gs
pop
or
cmp
xchg
push
lods
jae
jns
push
out
and
jnp
fstpt
rcll
sub
nop
push
repz
hlt
cmpsl
loopne
push
outsb
jae
inc
clc
popf
sbb
push
imull
sub
rcrl
scas
aaa
and
les
xchg
pop
aaa
lahf
push
pop
pop
fstps
movsl
jl
pop
aad
movsl
inc
cmp
mov
rcrb
dec
mov
insl
out
dec
lret
addr16
mov
push
sub
push
neg
add
arpl
test
sbb
adc
push
and
pop
out
jae
fsub
inc
mov
hlt
test
addl
mov
movsb
sbb
mov
add
cwtl
imul
mov
dec
out
mov
sub
popf
pop
flds
int3
pop
xor
shrl
push
leave
mov
sbb
test
add
pop
mov
shll
dec
jl
inc
or
aad
xchg
gs
pop
imul
aad
cmp
xchg
sub
jecxz
lds
cmp
lea
dec
cltd
mov
push
nop
pop
rclb
popf
sti
out
insl
mov
loop
das
rolb
push
xchg
in
jnp
inc
adc
mov
sbb
fildl
mov
push
outsb
fistl
xchg
pop
xchg
push
adc
neg
push
mov
fistpl
daa
divl
dec
inc
push
test
fnstsw
sub
clc
and
push
push
popa
sub
sahf
pop
push
lods
loope
add
push
mov
cli
jae
mov
push
mov
pusha
movsb
bound
xor
or
lods
jmp
ja
cmp
lret
das
inc
jbe
adc
andl
orb
pop
inc
in
std
movsl
das
js
aaa
data16
xchg
in
or
out
sarl
mov
dec
into
cld
push
std
lea
jge
push
push
xor
pop
aad
mov
push
fnsave
xchg
ds
stos
inc
and
ljmp
dec
mov
push
mov
sti
addb
lods
inc
pop
adc
pusha
push
xchg
sar
pop
jp
sub
cmp
push
xchg
insl
push
pusha
sub
cmc
push
push
cmp
fstpl
loop
mov
cmp
cld
ja
push
xchg
cmp
inc
xchg
scas
inc
test
ret
stos
push
fwait
jne
push
lock
inc
inc
std
adc
dec
data16
loope
pop
jo
pop
push
jae
adc
fwait
dec
or
dec
push
jns
push
sbb
sbb
pop
pop
sahf
dec
pop
mov
push
cmpsl
and
push
xor
int3
cmpsb
pop
fisubl
jl
fimuls
push
stos
jl
shl
out
push
adc
adc
out
sub
insl
push
pop
add
adcb
aaa
ret
xchg
incl
push
mov
es
gs
into
push
bound
hlt
lds
icebp
adc
repz
rolb
fdivr
ja
inc
inc
mov
scas
addl
or
mov
push
aad
add
js
jb
push
mov
out
xor
insb
fisubl
ss
inc
test
cmovs
push
insb
mov
gs
mov
adc
push
shlb
jbe
sbb
mov
push
cltd
gs
pushf
or
mov
push
ret
jnp
jl
mov
sub
push
xchg
cld
or
or
sbb
outsb
scas
sbb
int3
mov
or
mov
or
mov
xor
mov
inc
std
pop
outsl
push
ja
fisttpl
sbb
cmp
enter
dec
loope
sub
sti
sbb
ja
aaa
sahf
xor
pop
sub
push
cmp
lahf
outsb
pop
push
sub
pop
neg
jecxz
outsl
cs
sbb
mov
out
xor
adc
fldl
ret
cwtl
cli
loop
jo
pop
push
adc
lret
inc
push
push
jg
sub
push
sbb
dec
jle
cmp
push
pushf
lret
sbb
lahf
and
lcall
outsl
and
aaa
ret
ja
push
lock
mov
fnclex
sub
cld
push
adcl
cmp
or
nop
jmp
push
xor
subb
push
cltd
imul
push
je
inc
and
daa
loopne
jbe
ret
out
xlat
in
pop
mov
pop
push
icebp
dec
push
dec
inc
or
addb
repnz
mov
cltd
push
dec
mov
push
fcoml
stc
cmpsb
scas
pop
adc
mov
push
xlat
push
icebp
pop
and
xchg
push
lahf
iret
out
inc
dec
sub
and
sti
push
or
xchg
or
lret
jl
test
scas
push
jecxz
mov
push
jb
pop
pop
int3
lahf
adc
push
movsb
pop
xchg
fnstcw
cltd
mov
stc
gs
lcall
sahf
dec
sub
sbb
pop
inc
push
stc
pop
ret
push
pushf
add
inc
dec
ficoml
adcl
aaa
dec
dec
pop
xchg
fsubp
push
push
adc
mov
push
nop
pop
fstps
inc
test
xchg
cltd
int3
stc
add
lods
cmpb
push
push
push
jnp
cmc
imul
push
or
test
lcall
addr16
push
xchg
pop
fildll
push
test
sbb
invd
cmp
push
inc
mov
adc
das
mov
push
sub
lock
ja
fdivrl
jle
adc
add
imul
push
xchg
jnp
inc
add
ss
sub
rolb
in
add
in
ja
repz
dec
test
addr16
mov
jle
out
push
movsl
push
loopne
jne
sbb
inc
stos
pop
sub
sub
jne
iret
mov
stos
das
pop
mov
adc
dec
test
loop
dec
pop
repnz
in
cmpsl
adc
dec
pop
jle
pop
inc
cmp
outsl
push
dec
fsubrl
pop
dec
xchg
push
fwait
sbb
rcll
int
jns
push
insb
mov
in
test
sbb
test
mov
rcrl
sub
das
push
jg
mov
mov
push
repz
dec
rcrb
testl
outsb
pop
mov
push
pop
push
jns
repz
test
es
jbe
out
in
push
inc
jae
xor
or
push
movsl
rcll
lcall
int3
jmp
ret
mov
push
pop
xchg
adc
inc
daa
sbb
xlat
outsl
jo
mov
xchg
dec
mov
hlt
adc
mov
pusha
shlb
sbb
sbb
pop
imul
test
ljmp
mov
and
mov
push
add
js
xor
adc
xor
dec
adc
push
jl
lods
dec
test
pop
cmp
arpl
arpl
dec
repz
add
cmp
push
loopne
popf
aad
push
inc
into
pop
add
repz
rclb
aas
push
mov
js
pop
or
push
aaa
mov
add
pushf
sbb
cltd
fadd
ss
push
aaa
xlat
pop
in
sbb
jb
or
andb
cmp
cmp
loopne
push
adc
gs
mov
push
test
ds
test
sub
leave
pop
lods
clc
scas
push
dec
dec
xchg
dec
xchg
cs
mov
inc
or
sahf
insb
or
dec
rorl
jnp
lcall
dec
nop
aaa
adcb
ficomps
roll
jl
jns
fstpt
clc
in
cltd
push
mov
repnz
jno
movsl
dec
lea
inc
jg
imul
jae
xchg
add
sbb
leave
ret
mov
arpl
push
sbb
xchg
xor
pop
popa
pop
jg
arpl
jle
sbb
jl,pt
mov
test
push
mov
push
shr
test
pop
jmp
out
mov
ret
xor
aaa
fisubl
pop
daa
dec
inc
fstps
inc
pop
hlt
popa
push
pop
test
fs
stc
mov
subl
push
loopne
inc
faddl
pop
hlt
cli
test
push
inc
mov
push
mov
xor
leave
shr
cmpsl
js
push
sub
push
cwtl
outsl
pushf
insb
push
jo
out
sbb
es
pop
cmc
adc
stos
arpl
push
das
test
push
mov
mov
into
daa
addr16
lret
int
push
cmpsb
es
pop
push
in
rcr
jmp
push
sub
jno
and
fldenv
mov
xchg
stc
ljmp
push
mov
mov
jnp
lods
push
fldlg2
cltd
repz
fisttps
dec
testl
or
adc
rcl
mov
lcall
rcll
inc
aas
sbb
dec
xchg
adc
push
pop
loope
out
insb
fimuls
pavgw
nop
mov
mov
dec
dec
sahf
lahf
lock
sbb
ja
ss
cmp
fisttpl
hlt
sbb
pop
iret
mov
sbb
movsl
test
cwtl
xchg
imull
adc
dec
aaa
aaa
mov
cmp
xchg
ret
mov
adc
imul
adc
mov
mov
out
and
inc
decb
push
lret
loop
jg
mov
mov
cmp
ret
lret
loope
lods
fwait
cs
push
inc
std
jbe
nop
cmp
ds
or
mov
push
or
pop
lods
inc
dec
mov
pop
and
pop
in
mov
loope
pop
jb
push
push
addr16
jnp
pop
sti
jg
push
pop
pop
clc
out
dec
push
jns
pop
pop
mov
outsl
icebp
xchg
js
pop
nop
ficompl
je
push
xchg
push
mov
adc
push
fsin
dec
xorl
inc
mov
pop
subb
and
push
add
xor
iret
lret
loopne
xor
aad
xchg
imul
pop
xor
nop
mov
xchg
pop
mov
aam
mov
shrl
ss
out
dec
test
xchg
aad
push
movsl
sub
pop
fnstenv
xor
int
idivl
fcoms
jae
sub
and
loop
in
in
mov
dec
xor
shr
loope
mov
pop
inc
xchg
int
inc
lock
pop
inc
adc
roll
add
push
or
mov
mov
cmpsb
test
lret
outsl
and
out
jbe
insl
movsl
loop
stos
push
sbb
fisttpl
push
orb
icebp
add
push
test
mov
or
shl
sbbl
and
loope
lea
fstl
int
gs
sub
rclb
test
orl
imul
fs
adcb
pop
jge
movsl
add
sbbb
sub
add
cli
pop
ret
mov
push
ds
push
gs
aam
pop
cld
in
inc
cli
push
pop
stos
mov
push
test
test
mov
test
jg
loop
js
repnz
mov
mov
sub
idivb
icebp
movsb
repnz
dec
push
inc
outsb
fildl
jae
mov
dec
ret
push
jb
repnz
jo
orl
sub
notb
lcall
push
outsb
lret
cli
and
leave
push
ja
pop
add
ja
cmp
pop
loope
or
sub
push
icebp
push
popf
pmullw
es
pop
loop
in
out
imul
aad
fs
xchg
cmp
orb
aad
ja
lret
nop
leave
lea
sub
push
testb
push
push
dec
mov
inc
mov
out
ja
mov
js
movsb
xchg
pop
jl
pop
popa
pop
dec
jae
ja
pusha
pushf
pop
lret
sbb
push
adc
mov
lods
cs
push
std
pop
iret
aas
lock
test
jge
insl
pop
xchg
insb
pop
pop
dec
adc
dec
inc
mov
inc
and
ds
mov
das
std
adcb
xor
loopne
mov
sahf
imul
or
lret
and
sbb
dec
dec
cld
sub
pop
nop
push
jge
outsb
mov
aaa
ret
push
testb
cmp
or
mov
mov
sub
inc
xor
mov
mov
subb
leave
les
push
or
pop
and
mov
addr16
ljmp
push
add
push
mov
sar
mov
jmp
pop
xchg
push
lds
xor
imull
dec
mov
push
pop
mov
test
fs
or
jbe
dec
test
jmp
subl
xchg
sbb
xor
xlat
out
pop
pop
test
pop
dec
xchg
adc
test
bound
mov
and
dec
push
fistl
test
push
lods
cmp
std
pop
mov
js
jb
sub
rcrl
push
cmp
dec
cmpsb
or
out
mov
jp
and
popf
je
mov
lods
push
push
jle
daa
pop
xor
push
subb
negl
lahf
ss
inc
adc
push
stos
mov
js
add
sbb
movsl
adcb
cmpsb
or
rclb
es
popa
ljmp
push
mov
jecxz
sar
push
and
xor
jge
rcll
out
push
outsl
lahf
test
pushf
dec
push
pop
mov
push
outsl
add
cmp
adc
lea
fistps
inc
inc
aad
push
leave
sbb
adc
call
adc
movb
mov
cmc
mov
push
cwtl
mov
dec
lock
pop
out
ss
push
and
push
push
rcrb
sti
cmp
cmpsb
fsubrp
mov
dec
aaa
push
cmc
mov
xor
push
mov
push
xchg
insb
adc
inc
ja
mov
pop
imul
repz
adc
in
adc
xor
clc
flds
xchg
push
inc
out
aaa
rclb
ja
scas
fstpt
and
divl
inc
mov
cmp
outsl
rorb
mov
jmp
fnstcw
out
mov
lcall
dec
jno
pop
inc
mov
aad
lods
or
inc
adc
cld
xchg
repz
incl
inc
ss
fbstp
xorb
ror
xchg
fstpl
loop
jecxz
xor
sbb
mov
dec
lahf
inc
data16
int
mov
xor
imul
xchg
push
out
push
int
jo
jge
pop
pop
subb
pop
fs
outsb
pop
adc
push
or
clc
inc
xor
or
cmc
adc
frstor
inc
outsl
mov
lret
xor
xchg
pop
mov
enter
push
jg
xchg
inc
xchg
push
ljmp
pop
aas
push
add
mov
inc
xchg
and
and
fsubs
sbb
loope
lcall
xchg
jl
or
pop
mov
mov
mov
sub
fwait
add
lcall
lret
mov
push
mov
pop
xlat
sub
nop
mov
sysenter
xchg
mov
sub
jbe
test
jno
in
mov
or
xor
imul
aaa
fsts
push
or
add
in
pop
mov
push
loop
push
in
addr16
xchg
push
sub
insb
inc
push
jb
and
sarb
aad
scas
push
pop
pop
imul
inc
sub
addr16
xchg
pop
cltd
call
dec
and
add
dec
push
push
sbb
hlt
cmc
inc
jbe
jb
fs
or
ret
dec
pop
xchg
push
stos
pop
push
repz
push
mov
adc
dec
and
inc
cmpsb
repnz
test
lods
add
add
jl
mov
in
cmp
mov
push
fwait
and
inc
rorb
or
sub
jmp
pop
jle
popa
push
sbb
insl
cmp
xchg
lods
int3
push
pop
add
dec
rcrb
jmp
js
xchg
fistpl
adcl
add
push
arpl
xchg
addr16
fsts
pop
push
push
xchg
cli
int3
sti
xchg
fildl
add
nop
loope
dec
cmp
jns
je
jle
adc
or
cmpsl
lret
push
fadd
xor
mov
inc
cs
sti
mov
clc
xor
mov
fwait
movsl
jno
or
iret
push
cmp
inc
into
scas
mov
stc
cmpsb
pop
movsb
fldenv
mov
xchg
sbbb
mov
sbb
roll
mov
dec
ss
xchg
inc
daa
fistps
inc
cmp
lret
cmp
shrl
sbb
cltd
xchg
pop
xchg
add
xchg
nop
cmp
mov
add
aam
push
mov
sub
push
push
sti
push
sbb
jb
js
jmp
sbb
sarb
shll
in
or
out
mov
jb
jp
out
push
cmpb
pusha
outsl
mov
movsb
lahf
add
mov
mov
shll
mov
pop
int
inc
cltd
lret
sbb
pop
lea
push
jo
mov
fisttpll
jo
outsl
insb
jge
loop
adc
nop
lahf
iret
icebp
sti
mov
pop
jns
nop
int
sbb
jg
enter
mov
sbb
fcoml
popaw
loope
insb
inc
loope
xlat
xchg
jg
add
into
pop
and
pop
xor
add
out
outsl
adcl
pop
mov
in
jnp
pop
repnz
mov
out
icebp
push
add
adc
js
xor
jbe
repz
mov
rcrl
sbb
adc
test
ljmp
lcall
mov
ret
and
and
sub
lahf
ja
add
add
fmulp
cltd
and
loope
jg
iret
xchg
out
pop
sbb
add
or
xlat
xor
adc
int
mov
in
push
cs
pop
std
adcb
loope
or
ds
neg
or
cwtl
jg
xchg
mov
les
shl
sub
or
mov
jnp
add
gs
subl
xchg
add
loope
lea
sbb
dec
jne
in
xchg
cmp
int3
cmp
int3
jae
aad
loope
xchg
repnz
sysret
fldt
std
les
int
pusha
cwtl
mov
and
vmovq
pop
inc
imul
outsl
inc
mov
rolb
pop
push
out
test
in
sbb
daa
mov
loope
lcall
notb
push
and
xor
ss
hlt
pop
int3
dec
out
cmp
sbb
fs
arpl
int
xchg
sub
add
fldcw
fnstsw
je
xor
dec
pop
leave
enter
lea
cmc
stos
sub
in
fadd
xor
xor
clc
pushf
enter
add
dec
and
pop
fiaddl
cmpsb
insb
xor
mov
lcall
sbbl
test
xchg
and
pusha
sub
popw
outsl
insl
xchg
add
daa
aad
mov
cmp
gs
in
dec
stc
clc
insl
mov
jno
rcrl
notb
fs
sbbb
pop
and
in
pop
in
mov
sbb
iret
daa
fxch
or
lods
je
paddsw
xor
int
shrl
xor
mov
pop
dec
or
ret
iret
pop
mov
rorb
xlat
pusha
and
pop
jl
int3
nop
cmpsl
js
adc
leave
rolb
pop
xlat
flds
pop
sarb
loope
gs
int3
aaa
dec
loope
inc
mov
fs
movsl
xchg
mov
cmp
or
pop
enter
push
in
es
adc
adc
xchg
ja
mov
inc
dec
rcl
test
sub
fbstp
pop
mov
iret
fwait
pop
notb
jecxz
sbb
jmp
fdiv
push
sub
rcrl
xor
jecxz
mov
scas
mov
adc
nop
rclb
fldenv
aaa
leave
loope
notb
jae
sti
out
xchg
aaa
rol
scas
rorl
and
stos
adc
les
pop
inc
mov
add
lcall
push
daa
sahf
mov
pusha
rorl
pop
mov
loope
cmp
push
dec
enter
sub
adc
add
inc
xor
sub
jne
addr16
ja
rolb
loop
ret
adc
fstpl
mov
test
ja
cmp
cltd
cwtl
push
test
and
xor
daa
mov
push
jne
pop
outsb
fimuls
imul
pop
in
adc
sbb
mov
movsb
daa
add
fs
xlat
inc
lods
jo
ret
sbb
push
test
aas
loopne
push
dec
out
add
notl
test
jns
push
sbb
mov
ja
jge
sahf
xor
xchg
mov
xchg
push
and
mov
shrb
jl
rcrl
subl
lret
inc
sbb
leave
mov
mov
insl
push
in
outsl
rclb
call
push
mov
mov
dec
mov
fcmovnb
imul
sahf
mov
jne
push
aaa
lahf
sbb
pop
jb
fists
out
pop
enter
sbb
imul
or
pushf
sub
ja
sub
test
in
fildl
pop
aas
ljmp
pop
mov
adc
fcoms
pop
loop
mov
ret
mov
and
in
add
loopne
push
bound
push
push
dec
mov
inc
cmp
and
inc
mov
push
shl
fwait
jo
mov
add
mov
sub
js
fucomi
hlt
mov
mov
mov
inc
scas
pop
mov
pop
mov
xchg
sbb
out
dec
xor
push
lods
stos
push
mov
in
jl
push
loop
pushf
push
add
pop
dec
sbb
movsl
movsl
rclb
js
sub
dec
jns
cmp
push
adc
fbld
cld
push
add
movsb
outsb
or
push
xor
sbb
push
neg
popa
jl
xchg
out
popf
lret
xchg
xchg
sbb
shl
fst
mov
sbb
adc
push
out
xor
sub
jle
push
je
and
pop
lcall
sub
adcl
cld
cmp
leave
enter
imul
pop
sub
cwtl
mov
jne
lea
and
and
mov
inc
mov
sub
lahf
dec
push
cmp
cmp
pop
out
movsb
ja
ds
push
fsubl
dec
push
adc
stos
imulb
xor
mov
ljmp
adc
mov
frstor
jp
stos
mov
mov
pop
mov
loop
mov
pop
pop
aaa
cmpsb
or
mov
popf
pop
scas
fildll
xchg
pop
ret
xor
pop
mov
adc
push
adc
mov
inc
or
cmp
pop
push
sub
call
jno
and
js
mov
push
rolb
mov
pop
aad
push
jge
cli
or
adc
enter
inc
orb
mov
roll
add
test
mov
fnsave
pusha
push
push
mov
sti
jns
inc
rorb
jbe
inc
outsb
subl
icebp
pop
je
lcall
daa
push
js
repz
pop
dec
dec
fwait
sub
xchg
jg
repnz
sbb
sbb
daa
negl
or
xor
fwait
add
jp
push
test
add
sbb
jns
jp
pop
adc
lock
push
addr16
fildll
clc
push
fistpl
sbb
push
jg
add
and
jmp
movsl
pop
add
ret
mov
xchg
ret
negl
jb
sbb
push
xchg
sahf
outsb
push
pop
dec
or
jg
arpl
insb
test
and
mov
cmp
sub
addr16
iret
sti
ja
das
insb
pushf
xchg
and
add
pop
aaa
xchg
dec
test
jge
das
fwait
push
xchg
push
cmp
scas
notb
adc
cmp
aad
das
or
lods
pop
sbb
push
xlat
aas
cwtl
pop
mov
pop
pop
push
rclb
aaa
xor
movl
push
shl
scas
out
inc
push
mov
jb
xor
andb
jl
packuswb
push
dec
xchg
and
push
jle
in
or
in
addr16
iret
mov
mull
into
mov
insl
pop
cwtl
and
sbb
cmp
push
xor
jno
add
pop
jbe
mov
into
popw
jp
and
jle
pop
xchg
ret
push
imul
xchg
push
in
mov
push
push
lret
aad
xor
scas
icebp
or
mov
sub
cmp
push
pop
adc
mov
fmull
inc
out
in
cs
xchg
add
aaa
subb
ret
push
pop
sbb
stos
pop
mov
pop
outsl
jb
loop
daa
fbstp
pop
push
scas
mov
xor
iret
lods
inc
push
mov
pop
aam
jnp
mov
xchg
mov
xor
mov
out
test
sub
mov
cmc
cmpsb
nop
jge
aaa
push
jb
movsb
mov
daa
pusha
mov
push
rcll
rcrb
inc
and
xchg
popf
jne
scas
sbb
push
out
addr16
data16
xor
push
xor
repz
sbb
adc
cmp
scas
push
push
push
sub
pop
mov
mov
in
icebp
decb
movsl
push
stc
push
stos
hlt
and
das
push
pop
enter
mov
add
imul
push
insb
ljmp
cwtl
lods
jne
push
jno
and
mov
cmpsl
push
fxch
dec
mov
mov
inc
lret
adc
scas
adc
aas
jno
jecxz
sti
push
push
push
sbb
pop
fs
push
pop
js
daa
xchg
lcall
fidivrs
pop
jl
jl
fisttpll
ret
mov
pop
mov
sbb
push
jge
std
cmpsl
aas
cmpsb
fwait
pop
cli
addr16
ljmp
mov
mov
pop
lret
icebp
pop
pop
popf
pop
mov
call
mov
icebp
push
sub
push
push
sbb
sub
adc
mov
sbb
mov
push
jae
dec
xchg
mov
add
ds
js
pop
mov
push
push
cwtl
dec
cmpsl
fisttps
lds
aam
aad
leave
mov
ja
or
aas
pop
testl
lock
xchg
or
adc
outsl
pop
inc
xor
push
shlb
sbb
or
das
cmp
js
inc
rclb
pop
call
pushf
jp
addr16
and
loop
fnstenv
out
dec
push
shrl
fbstp
mov
idivl
push
pushf
dec
jbe
pop
in
es
aaa
sub
inc
ret
push
shr
pop
mov
std
fisttpl
jbe
popa
sbb
movsb
push
pop
lock
mov
div
pop
mov
gs
pop
loop
xchg
lds
jae,pt
sub
fldcw
ficompl
push
adcb
mov
adcb
addr16
dec
mov
cmc
push
in
adc
pop
insb
mov
xchg
cmp
add
mov
fcomi
call
sbb
mov
mov
das
and
testb
test
jle
inc
mov
into
dec
sub
push
lret
adc
push
xchg
adc
mov
xchg
push
rorb
pop
jl
out
mov
das
lret
adc
scas
std
es
in
pop
adcl
ja
mov
js
push
and
push
inc
fs
mov
xor
movl
jmp
loopne
push
das
push
iret
inc
cmpsb
push
and
ffreep
nop
cltd
or
clc
bound
mov
das
jp
in
inc
and
mov
fs
lods
sub
push
sub
push
sub
loope
leave
and
je
add
xchg
icebp
push
ret
mov
sbb
test
jb
jmp
nop
lret
mov
add
sti
push
scas
cwtl
stos
xchg
sub
sarl
xor
mov
sti
mov
out
jno
stos
mov
jle
stos
flds
xchg
adc
fwait
icebp
add
jle
out
push
flds
jl
sub
fldcw
loope
scas
fistpll
ds
jge
push
js
push
add
call
sti
add
sti
iret
xor
inc
and
je
fldenv
loope
mov
pop
ret
jle
scas
daa
outsl
mov
xor
cltd
push
mov
ss
inc
movsb
notl
mov
stos
push
xchg
adcb
loope
ret
dec
aam
xchg
movsb
push
andl
sub
push
add
iret
loop
cmpl
jg
dec
xchg
dec
dec
out
and
in
pop
mulb
cs
imul
std
cmpsb
into
fsts
xor
inc
push
pop
es
cmp
cmp
pop
add
imul
add
cmc
sbbb
out
test
repz
addr16
or
in
pop
jo
pop
adc
or
divb
push
inc
aam
ret
push
insb
inc
rcll
xor
xor
in
cwtl
sbb
jne
push
cmp
cmp
xchg
sahf
mov
dec
popa
outsb
mov
cltd
popa
aaa
pop
aad
mov
ret
aas
pop
inc
xchg
sarl
out
mov
mov
inc
icebp
leave
in
jno
push
jbe
outsl
jnp
sub
mov
repz
lret
jecxz
mov
cwtl
sbb
pop
jno
inc
mov
aam
mov
cmp
jo
add
jp
fdivrl
or
inc
inc
mov
pop
inc
add
push
aam
rorb
mov
jbe
movsl
test
push
sub
push
ja
or
xor
lahf
pusha
rcll
pop
int3
mov
jbe
push
sahf
mov
and
lret
addr16
push
add
ja
movl
pop
daa
pop
ret
jb
fbld
mov
mov
push
aad
jae
into
aaa
loope
mov
ret
fs
adc
sbb
roll
sti
dec
mov
sbb
push
and
outsb
adc
sbb
cmp
adcl
test
sub
mov
push
shrl
es
mov
sahf
mov
stos
jae
mov
insl
push
push
test
mov
fsubrl
inc
stos
jne
iret
push
dec
ds
rcr
addr16
sbb
jne
mov
push
lds
pop
ss
cmp
outsl
mov
dec
push
loopne
out
or
call
pushf
push
ret
popa
xchg
mov
push
out
rorb
mov
fisubs
mov
pop
outsb
arpl
sbb
push
or
out
scas
addr16
and
in
adc
push
push
push
ja
imul
jbe
pusha
repnz
rcll
xchg
test
pop
mov
out
push
push
jl
imul
out
adc
loope
mov
push
sub
mov
jne
test
scas
aaa
push
into
push
adc
arpl
repnz
ljmp
ljmp
and
and
push
push
mov
bound
loope
test
pop
leave
sub
clc
mov
xor
rorb
push
xchg
or
and
ljmp
inc
out
xlat
ja
jecxz
les
fwait
ljmp
inc
and
cwtl
sbb
jg
cmp
pop
jnp
cmpb
xchg
sub
cmp
cmc
mov
xor
pop
jecxz
pushf
xlat
enter
mov
push
or
fwait
lcall
and
lea
pushf
add
adc
pop
and
pop
cli
pop
pop
xor
push
sub
add
push
xor
push
mov
push
call
int3
mov
pusha
in
ss
lods
daa
mov
or
movsl
push
test
stos
jno
je
jne
xchg
es
pop
pushf
mov
xchg
lods
or
push
lret
xor
out
pop
daa
jge
clc
or
leave
aaa
aaa
loopne
mov
push
imul
jg
push
in
xor
test
imul
jae
fmuls
outsb
push
or
jl
push
lcall
jno
shl
push
inc
aaa
ret
mov
jne
ja
ror
xchg
cs
clc
mov
xor
roll
repz
dec
inc
bound
push
jecxz
add
mov
jmp
sarb
push
jmp
lods
inc
test
in
repz
fldt
mov
inc
xchg
outsl
hlt
mov
jmp
and
lret
push
pop
call
mov
inc
add
aaa
or
fidivrl
shll
mov
in
cmp
frstor
in
in
push
nop
push
faddl
ds
mov
mov
loopne
and
aaa
push
push
fdivrs
mov
lret
cmp
pop
push
shl
mov
and
lods
push
xchg
rcll
xchg
and
jno
push
pop
outsb
mov
fwait
pop
stos
lock
aam
pop
lret
mov
mov
ffree
push
movsb
add
push
arpl
mov
xor
xchg
inc
js
adc
arpl
mov
push
mov
push
rorl
js
push
xchg
or
ret
outsb
out
mov
cmp
mov
add
sarl
addl
pop
push
dec
push
fstpl
dec
cs
ja
scas
data16
jae
jae
xor
test
dec
mov
stos
sti
mov
mov
and
mov
sar
mov
shll
push
fcoms
jae
xlat
pushf
xchg
mov
fbstp
pop
into
dec
push
clc
repnz
fidivl
in
sahf
cmpsw
fcomps
add
xchg
mov
ja
shll
mov
sbb
arpl
ljmp
pop
nop
cli
mov
push
mov
inc
add
mov
fdivrs
pop
cld
ss
mov
aaa
mov
push
add
es
mov
outsl
add
push
and
mov
dec
adc
xchg
pop
jl
test
push
mov
in
cmp
test
ss
pop
or
js
repnz
mov
jle
popa
sbb
sbb
dec
push
pop
add
inc
push
mov
int
and
inc
jb
mov
cmpb
jl
sbb
scas
js
xchg
nop
pop
or
push
jp
add
or
cmc
outsl
add
dec
pop
pop
pop
icebp
xchg
repnz
mov
nop
sub
aas
mov
icebp
cmp
pop
adc
inc
xorb
or
push
shll
lods
jne
sub
leave
push
pop
loop
mov
xchg
stos
rcll
push
test
jle
xlat
fldcw
lock
cmpsl
pop
into
jmp
ret
inc
xchg
ja
mov
or
addr16
mov
sahf
imul
dec
sbb
fstpt
sbb
dec
es
rcrb
mov
leave
test
popf
dec
testl
and
insl
push
jns
inc
cs
repz
adc
pop
xchg
cwtl
out
enter
les
cmp
das
mov
push
dec
sub
addr16
or
or
fs
cmc
jbe
loop
sti
in
pusha
jge
or
mov
lret
ficompl
repz
push
aas
or
imul
and
push
sbb
inc
jle
xchg
out
enter
dec
mov
insb
arpl
ljmp
ss
mov
in
js
jbe
and
fildll
pop
cmp
pop
lret
pop
sahf
dec
xor
ror
leave
cmp
je
push
jmp
ret
xchg
dec
mov
mov
sahf
mov
shrb
mov
pop
push
jo
push
and
dec
aad
xchg
add
incb
fwait
pop
sub
or
inc
aad
pop
mov
add
xchg
inc
hlt
xchg
popf
push
ljmp
pop
sub
pop
pop
mov
push
xlat
cmc
out
movsb
js
dec
cli
pop
sarl
xor
jns
cmpsb
xor
popa
pop
clc
les
push
adc
inc
push
dec
mov
fmull
mov
cmpsl
sbb
push
mov
pop
push
mov
call
loope
sub
pop
jg
xchg
hlt
push
xchg
int3
mov
test
cmp
scas
fidivs
push
cmpsb
dec
lods
sbb
icebp
xchg
xor
xor
or
aam
rorb
imul
jp
add
in
mov
enter
add
sti
shrl
pop
mov
and
push
std
ficoml
leave
mov
jnp
jge
mov
dec
lods
adc
push
cmpsb
push
push
fisubs
incl
mov
lcall
and
sub
into
push
mov
test
lods
insb
pop
jbe
in
adc
push
dec
daa
sbb
arpl
aaa
fimuls
push
inc
or
je
push
aam
xchg
cmp
test
ss
fstps
push
test
xor
push
push
mov
or
jp
xchg
push
jmp
pop
push
mov
cmp
imul
xlat
pop
jbe
test
xchg
lods
pushf
into
iret
pop
push
pop
and
push
pop
fwait
jecxz
pop
push
push
xchg
in
out
fcompl
out
testb
cmp
scas
ret
loop
out
xorl
mov
push
mov
dec
ret
cmp
sub
test
push
test
pop
push
in
push
not
inc
mov
push
inc
mov
pusha
shlb
nop
rol
in
xchg
mov
mov
mov
xchg
inc
std
subb
dec
inc
jns
lret
ret
stc
es
sub
mov
cmp
push
andl
imul
lock
inc
adc
in
dec
cmp
mov
push
sbb
xor
cmpsb
mov
gs
xchg
mov
dec
loope
mov
mov
jne
mov
sbb
mov
aaa
mov
xor
add
or
xchg
pop
iret
rcr
jg
pop
test
cmp
inc
out
rorl
mov
icebp
loope
in
inc
xor
cmp
mov
std
out
scas
rcr
xchg
mov
insb
adc
xchg
and
aas
in
or
pusha
pop
out
lea
add
shll
or
or
andb
xchg
inc
pop
jne
loope
and
fdivrl
pop
xchg
mov
mov
out
subl
jl
pop
loope
int3
in
pop
jg
push
insb
fsts
adc
adc
sbbb
orl
inc
jmp
aas
xchg
add
dec
in
shl
repnz
jae
mov
mov
push
cmp
sti
pop
lock
repz
push
push
mov
loop
push
aad
mov
push
mov
xor
pop
mul
mov
cs
sti
push
out
xchg
jae
repnz
jbe
std
push
or
leave
mov
fs
adc
fldt
mov
divb
insb
mov
mov
std
adc
rcrb
sub
sbb
fstpl
ljmp
rcr
mov
jle
cwtl
aam
dec
je
in
lcall
popa
pop
pop
test
daa
jle
or
jge
fldl
cmpsl
in
inc
push
fmuls
mov
push
add
ljmp
sbb
lret
test
pop
cmpsb
jmp
and
testb
push
mov
push
scas
xorl
xor
push
inc
jne
loope
sahf
fcoml
add
push
in
and
mov
cmp
pop
push
pop
push
or
call
pop
mov
mov
lcall
mov
push
fldt
aaa
pop
movsb
arpl
pop
push
mov
imul
push
lods
adc
fcom
sti
mov
pop
inc
dec
mov
rolb
addr16
pop
call
push
cmc
sbb
pop
dec
push
fs
push
pop
lods
int3
fsubrs
mov
add
test
sbb
sbb
das
xor
dec
fst
es
inc
test
cmpsb
push
arpl
pop
test
push
jne
cli
sbb
mov
aaa
xchg
cmp
xor
lret
sbb
fs
add
jle
pop
xchg
add
jge
push
out
pop
imul
testl
test
roll
je
rcr
push
aad
daa
or
gs
dec
mov
stos
leave
push
push
push
and
divb
cmp
add
xchg
push
out
rclb
jmp
sbb
jb
scas
pop
add
arpl
fsubs
fs
push
mov
or
mov
std
dec
pusha
addr16
aas
cmp
outsl
jmp
pop
jbe
push
push
sbb
sub
dec
inc
sbb
addr16
pop
movsb
cmp
jbe
rorb
pop
sahf
ljmp
aad
sbb
sbb
aas
mov
test
ss
cmpsb
sbb
fwait
xchg
loope
clc
xor
arpl
call
xor
or
or
sbb
push
shlb
pop
pop
cmpsb
jmp
push
cmp
aad
add
pusha
adc
sbbl
sbb
sbb
test
jle
pop
inc
mov
aam
push
cmc
in
movsb
shrb
mov
cwtl
adcb
and
aam
frstor
mov
pop
inc
outsb
insl
aad
push
push
sbb
mov
adc
fsub
aam
data16
mov
lahf
push
outsb
pop
and
push
xchg
adc
mov
jne
dec
mov
push
add
inc
shll
xor
lcall
xor
cmp
pop
push
add
ret
cld
adc
aam
pop
in
fcoms
aas
pop
fstpl
neg
in
testb
or
fsub
xchg
mov
and
dec
popf
aam
push
in
outsl
mov
lcall
ficoml
mov
mov
xor
fadds
ljmp
mov
fadds
dec
pop
push
fcomi
fnsave
mov
pop
iret
fstp
pop
mov
out
cmp
sbb
fiaddl
mov
push
push
call
lret
pop
jno
sub
xor
cmpsb
sbb
pop
mov
aas
sarb
imul
cli
push
pop
fstp
aaa
cmpsl
xor
fiaddl
ds
push
addr16
negb
out
pop
pop
js
imul
pop
fsubp
imul
lock
cmp
sbb
push
sbb
cld
das
pop
mov
push
mov
daa
aam
out
sahf
aas
mov
imul
neg
pop
subb
fstl
xchg
and
pop
icebp
mov
push
cltd
lds
les
mov
test
xchg
xlat
test
xor
imul
outsl
in
and
ljmp
mov
pop
into
ffree
pop
call
push
dec
sbb
xchg
aaa
test
inc
mov
outsl
dec
dec
das
fists
repz
loop
adc
ss
push
or
adc
pop
mov
xor
loopne
aad
mov
fcoml
daa
imul
aad
inc
mov
movsb
cltd
mov
push
lcall
bound
repnz
test
xchg
aaa
out
lods
and
out
mov
ds
aam
jae
js
outsl
inc
flds
mov
aad
rorl
xchg
outsl
cmpsl
outsb
mov
bound
jae
add
mov
cmp
sbb
in
jmp
xchg
sbb
xor
xchg
lret
adc
mov
cs
lods
xchg
negb
mov
push
sbb
pop
inc
push
adc
lods
mov
pop
pop
push
mov
fwait
dec
adc
or
push
pop
into
jmp
aad
xchg
mov
adc
adc
fwait
out
dec
fbstp
sbb
cwtl
cmpsb
jp
jne
sbbl
scas
and
cwtl
xor
push
es
fcmove
pop
negl
aam
fsubs
cmpsb
xlat
cld
neg
xchg
mov
push
icebp
sti
repnz
addr16
insb
lods
mov
gs
repnz
lret
xchg
cld
push
enter
mov
jle
pop
das
aad
daa
sbb
xchg
outsb
xchg
dec
sbb
adc
fcomps
or
sub
pop
push
push
call
into
lcall
push
push
xor
adc
pop
mov
fucomi
das
or
lahf
hlt
pusha
aaa
ja
and
mov
adc
pop
pop
lret
arpl
push
xchg
add
addr16
jmp
pop
ljmp
push
xchg
pop
call
stos
outsl
ljmp
mov
mov
sbb
outsl
and
pop
call
sar
fsubr
push
test
test
xchg
adc
cld
daa
notl
pop
loop
cltd
mov
pop
mov
pop
pmullw
jecxz
sbb
es
pop
add
mov
pop
idivb
filds
push
outsb
push
enterw
dec
insl
pop
push
lret
test
mov
loopne
std
push
xor
xchg
fwait
add
div
push
xchg
cmp
fcmovne
add
in
xlat
jg
push
adc
add
sub
mov
or
dec
xchg
sbb
sub
pop
fidivrl
iret
fadd
xor
roll
push
arpl
loopne
outsl
ljmp
push
aad
sahf
cmpsb
test
iret
cld
andb
dec
call
xchg
pop
faddl
jnp
negl
jmp
out
jp
lahf
pop
pop
rcl
sbb
jbe
mov
in
cmp
push
push
sti
xchg
sub
xchg
xor
rcll
xor
cwtl
dec
daa
addr16
jne
aas
sahf
adc
sbb
daa
arpl
mov
cmp
mov
mov
ja
mov
outsl
sub
icebp
push
inc
xor
cmp
xchg
repz
push
sbb
adc
mov
cltd
xor
mov
shll
jne
shlb
push
xlat
push
stc
testl
test
jp
mull
xlat
pop
xchg
push
cmc
lds
mov
mov
push
mov
jae
mov
out
push
jno
pop
sbb
push
sbb
mov
cmp
jmp
xor
push
and
rcr
daa
test
inc
das
jne
sbb
push
nop
push
adc
adc
stc
fdivrs
and
icebp
mull
sbb
shrl
dec
sbb
adc
sbb
daa
push
push
ja
std
mov
fisttps
inc
arpl
lahf
pop
push
pop
pop
in
aad
sub
xor
push
out
in
add
shrb
bound
adc
mov
nop
in
js
pop
jae
ficomps
test
scas
or
fwait
aad
and
jecxz
inc
inc
rclb
ljmp
adc
xchg
mov
fsubs
inc
mov
xchg
and
add
mov
aaa
cld
clc
adc
pop
push
idivl
in
pushf
test
call
repnz
sbb
cmp
push
fisttpll
lret
sahf
test
sub
xchg
jae
fsubrs
push
arpl
outsl
fistpl
or
xchg
aaa
lcall
inc
pop
rorb
fildl
push
jne
sub
movsl
sbb
xlat
pop
sbb
sbb
pop
fsubr
in
xchg
pop
sub
mov
fidivrl
mov
rclb
mov
mov
pushf
rcrl
fcompl
sbb
mov
xchg
add
movsb
and
jmp
push
stos
push
fcomps
cmc
sbb
arpl
sahf
stc
xor
rcl
cs
cmp
sub
out
jmp
pop
pop
enter
clc
cmc
les
outsl
in
mov
xor
pop
out
arpl
push
adc
imul
ljmp
mov
fdivrs
popa
sbb
int
push
or
pop
pop
insl
loopne
lcall
mov
and
stos
push
aaa
push
cltd
dec
repnz
sub
or
push
fstps
sahf
mov
sub
mov
push
cwtl
daa
pop
cmpsb
cmp
ja
cmpsl
flds
pop
fcmovnu
push
fcmovnbe
ds
sahf
sbb
leave
jge
clc
adc
dec
inc
std
jecxz
add
faddl
daa
jbe
sti
push
sub
in
sbb
lods
dec
inc
aas
fistpl
or
rorl
daa
fstp
rcrl
xchg
in
pop
sar
xchg
aaa
test
sbb
hlt
pop
testb
js
adc
loop
xchg
pop
pop
inc
xor
lcall
call
add
insl
mov
test
adc
and
or
mov
sbb
aas
pushf
insl
push
mov
xor
xchg
nop
repz
sub
fcmovnu
cli
and
push
daa
push
fnstcw
nop
shl
rcll
pop
dec
mov
fnsave
push
mov
pop
rorb
push
push
sbb
jg
xchg
push
pushf
jbe
cmp
cld
rclb
cmpsb
sbb
pop
inc
int
and
and
push
pop
or
mov
pop
pop
addr16
sbbl
test
sahf
mov
into
fstl
psubsb
lahf
cmpsl
repnz
lcall
lcall
mov
out
pop
ja
cwtl
cli
mov
lods
pop
call
mov
xor
push
pusha
negb
pop
mov
sets
ljmp
xchg
out
mov
pop
xchg
in
call
push
insl
xchg
xchg
or
lea
aam
push
movl
push
mov
mov
je
lods
rcrb
mov
add
push
ja
mov
push
frstor
mov
out
pop
xlat
or
mov
add
pop
pop
mov
push
divb
sbb
push
dec
sub
aam
push
pop
mov
pop
loopnew
pop
movsb
mov
push
ljmp
ss
fcmovb
lret
and
push
xchg
mov
fwait
shrb
cmp
ja
pop
scas
push
adc
xchg
cs
sbb
fstl
js
mov
and
ret
fistpl
addr16
out
inc
fs
ficoml
push
push
pop
push
loop
outsb
adc
arpl
sarb
pop
inc
addr16
aaa
test
fisttpll
mov
jo
xchg
aaa
or
fs
cmp
sti
push
outsl
cmp
fsubs
push
dec
cmpb
mov
sub
mov
inc
outsl
fcoms
mov
ja
adcl
pop
jne
pop
in
sbb
adc
sbb
cmp
popf
pop
pop
add
xor
movsb
mov
inc
outsb
cld
decb
push
insb
mov
xchg
inc
add
fcomi
aad
pop
in
xor
inc
rcrb
dec
mov
mov
fistl
or
movsb
lret
sbb
aad
xchg
cwtl
jecxz
lods
xchg
mov
inc
clc
shl
push
mov
addr16
xchg
xor
ficoml
js
dec
rolb
add
adc
popf
dec
daa
mov
fimull
enter
popf
xlat
std
outsl
cmp
test
pop
pop
testl
nop
rcrb
jmp
xor
addr16
xchg
not
mov
lahf
add
xchg
outsl
cmpsl
add
jge
push
xchg
loop
rclb
jne
imul
push
push
es
addr16
outsl
popf
add
inc
out
sar
icebp
aam
aam
jecxz
aad
jl
jmp
fdivs
xor
sub
stc
mov
sbb
mov
je
pop
test
addr16
cmpl
inc
fidivl
jle
push
add
adc
subl
jbe
lcall
adc
ficoml
cwtl
sbb
in
pop
pop
js
loope
bound
pop
push
mov
mov
fstpl
xchg
mov
mov
out
fdivs
inc
adc
fcoms
cmp
fsts
hlt
cmpsl
xor
sbb
push
mov
insb
popa
movsl
sub
adc
repz
xchg
bound
gs
xlat
push
js
into
pop
or
repnz
hlt
push
pushf
lods
aas
inc
fiadds
testl
in
pop
out
mov
adc
ja
std
in
dec
andb
pop
iret
fistps
dec
mov
pop
mov
xchg
xor
pop
fwait
add
xchg
fmul
push
pop
fdivrs
push
pop
sub
test
hlt
fisubrs
outsl
inc
rcr
cmpsb
addr16
push
hlt
pop
and
negb
fcmove
pop
mov
mov
sub
push
push
fisubrs
mov
fmull
push
cltd
push
push
mov
pop
xchg
fdivrs
outsl
fcmovu
add
out
aad
test
adc
outsl
pop
push
sub
sbbl
fists
aam
fstpl
or
push
pop
fiaddl
lret
int3
mov
push
xorb
data16
adc
out
nop
dec
in
mov
in
push
xor
fstl
cld
out
repnz
pop
dec
sbb
leave
push
adc
mov
inc
roll
pop
mov
adc
pusha
push
scas
aaa
xlat
pop
sti
or
sbb
ja
fmuls
ss
push
insl
push
aaa
pop
sbb
movsl
xor
js
test
push
add
arpl
mov
push
pushf
pushf
cmc
pop
pop
scas
xor
rcrl
loopne
sub
stos
notb
aad
pop
mov
push
adc
mov
cmpsl
xchg
cmp
cmp
push
pop
add
mov
ds
in
imul
xor
fbstp
sahf
or
cmp
pop
call
test
sub
inc
pop
sub
pop
andl
call
movsb
mov
arpl
mov
sub
push
push
aam
and
test
xor
pushf
push
daa
cmp
mov
and
push
loopne
pop
cmpsl
fisubrl
fstpt
push
lret
adc
pop
pop
push
pop
dec
sbb
push
stc
test
enter
ficoml
pop
out
sbb
addr16
inc
arpl
enter
loop
fs
sbb
dec
cmp
adc
mov
adc
sbb
lock
int3
lods
inc
adc
pop
lret
cmp
out
aaa
pop
xor
lcall
dec
int3
inc
shrb
call
pop
xlat
fisttpll
sub
sbb
shrb
push
ss
addr16
adc
cmp
rcll
jne
lret
ret
repnz
js
pop
xor
aaa
adc
sbb
sbb
addr16
pop
push
xchg
push
in
test
ljmp
sub
or
dec
add
xchg
push
push
adc
sbb
pushf
into
cwtl
adc
push
inc
push
xchg
mov
mov
adc
fs
cltd
outsl
fisttpl
arpl
add
ja
xchg
push
xchg
popa
cmp
xor
xchg
dec
and
mov
fs
fcomps
add
addr16
sub
das
fst
xlat
jecxz
mov
push
daa
add
mov
add
push
fdivs
roll
mov
not
sub
xlat
inc
push
mov
push
jb
aad
sarl
mov
sbb
or
nop
adc
rcr
mov
mov
in
or
pop
fmuls
or
cld
push
push
xchg
sbb
iret
sub
mov
sbb
je
leave
lock
cwtl
loope
dec
std
arpl
mov
or
testb
mov
jp
pop
push
mov
mov
cwtl
inc
popa
jle
cmp
mov
pop
push
pop
call
sub
push
cmc
push
pushf
and
sahf
add
mov
pushf
mov
adc
scas
adc
mov
push
ret
out
rcl
jnp
and
xorl
inc
pop
lcall
add
mov
push
xchg
adc
sahf
cli
mov
lcall
pop
push
pop
ficompl
in
clc
adc
xchg
daa
inc
popa
cmp
xchg
push
sub
ss
cltd
xor
popf
pop
icebp
ficompl
arpl
push
cmpsl
pusha
xor
scas
push
dec
mov
outsl
push
imul
insl
mov
call
repnz
out
fstl
cmpsl
push
dec
cltd
push
aam
mov
push
adc
call
aam
add
xchg
or
in
sbb
inc
mov
jmp
aaa
shrl
inc
out
fistpl
push
data16
cmp
xchg
pop
pop
mov
xlat
push
mov
xchg
mov
enter
out
arpl
fwait
div
xchg
std
xchg
in
mov
movsb
xchg
adc
jmp
lcall
mov
aas
fldl
xor
lcall
pop
pop
daa
notl
jg
sbb
and
cmc
cmp
rcl
std
out
shll
pop
sbb
inc
sarb
testl
inc
push
fdivs
cmp
push
xorl
pop
int3
stos
or
sbb
mov
and
xor
hlt
mov
test
pusha
push
jecxz
sbb
daa
dec
fimull
fcoms
xchg
pop
add
std
aaa
hlt
sbb
and
fstpl
push
loope
imul
xor
rcr
test
cld
call
aas
pop
push
pusha
cwtl
pop
pop
popa
std
adc
lahf
and
rcr
dec
cmp
pop
addr16
imul
dec
xchg
adc
mov
jl
push
adc
cmp
adc
lret
jecxz
xor
inc
sub
push
imul
fistl
dec
lock
js
orl
rcrb
fwait
filds
aam
in
nop
xlat
loopne
xchg
dec
push
aam
aam
sbbb
mov
ds
addr16
dec
add
inc
push
cmpsb
push
mov
pmaddwd
push
sub
adc
xor
xor
mov
pop
gs
jae
adc
iret
xchg
inc
mov
lods
rolb
xchg
out
mov
out
pop
loop
fsts
hlt
fisttpl
push
xchg
xlat
movsb
cmp
lock
xor
xchg
daa
and
pop
test
call
lcall
push
icebp
add
pop
push
in
or
sub
in
jle
fstpl
adc
xor
push
nop
xchg
xchg
mov
loopne
pusha
or
aas
arpl
push
jae
pop
mov
xor
mov
pop
cltd
fmuls
enter
cmp
pop
pop
cmpsl
bound
lret
push
lcall
or
and
push
addr16
xlat
inc
push
xchg
ret
mov
loopne
fsub
daa
mov
xchg
push
gs
push
cmp
icebp
rcll
sti
lret
dec
mov
lcall
xor
dec
sub
call
ljmp
push
outsl
pop
mov
push
push
push
in
xchg
push
adc
aaa
cs
rcll
push
xchg
clc
test
subps
mov
or
jg
fistl
push
sbbl
aam
mov
out
pmuludq
xchg
popf
adc
xor
xchg
push
pop
aaa
testl
push
loop
push
imul
push
lahf
lcall
jmp
pop
push
mov
data16
test
stos
call
aaa
mov
je
push
cs
pop
push
les
jne
hlt
adc
push
hlt
imul
xchg
cmp
mov
xchg
lahf
leave
pop
lcall
cmp
push
adc
pop
aaa
mov
fwait
pop
xchg
fisttpll
ret
sbb
out
adc
push
pop
fwait
inc
mov
xchg
fcomps
pop
add
int3
push
and
push
push
es
cltd
loop
sbb
jns
cmpb
cmp
rcrl
xchg
xchg
push
outsl
out
inc
mov
int3
xchg
aam
out
imul
adc
fcoms
xor
pop
sbb
xlat
or
inc
imul
add
and
pop
sub
push
adc
aaa
pop
push
clc
fcoml
fstl
push
mov
sbb
push
and
mov
daa
xor
jge
fst
pop
nop
and
fdivl
xchg
push
push
push
mov
mov
mov
xchg
cmp
jle
mov
sahf
outsl
pushf
add
loope
call
iret
in
aad
push
or
jl
pop
or
aad
add
sub
inc
or
push
add
sbb
mov
mov
dec
popf
pop
lcall
pop
fsubs
and
out
test
imul
pop
daa
inc
mov
mov
inc
in
imul
das
pop
push
gs
mov
cmp
je
fst
jecxz
fwait
push
cwtl
sub
adc
fcompl
cmp
loopne
push
xor
cmp
cmp
push
cmpl
fldz
pop
cmp
movsb
mov
push
sti
in
fwait
jbe
pop
push
fnstenv
pop
push
inc
adc
pop
push
cmp
idivl
faddl
adc
and
daa
cmpl
sbb
daa
out
mov
sahf
push
popf
pop
inc
rclb
add
xor
aas
pop
jge
nop
or
popf
test
mov
push
sahf
xchg
cmp
push
in
push
addr16
pop
aas
aam
sbb
mov
pop
fsubl
ret
insb
adc
inc
mov
xor
xorl
push
and
in
sbb
movsb
popf
jns
repz
xor
pop
shrb
movsb
mov
adc
pop
aaa
enter
inc
dec
pop
or
jmp
pop
sub
sahf
push
pop
xor
mov
push
fidivrs
hlt
pop
fcmovu
int
inc
fimuls
push
add
pop
push
sub
and
adc
cmp
outsb
sub
nop
pusha
fwait
push
fmul
dec
insl
xchg
repnz
jno
fldenv
or
adc
syscall
inc
das
sahf
out
shr
lcall
pop
fldt
clc
mov
call
aas
xchg
xchg
mov
addr16
out
fbld
es
lret
xlat
lcall
test
jnp
and
push
pop
out
mov
pop
lahf
inc
pop
push
push
inc
adc
fisubs
inc
rorb
daa
enter
sbb
push
xchg
or
or
sbb
adc
aam
pop
insl
nop
add
mov
xchg
push
dec
dec
repnz
daa
jo
in
xchg
xlat
xchg
into
dec
mov
je
mov
scas
jmp
adc
jecxz
aad
sub
mov
jmp
push
test
sahf
or
mov
or
mov
rcl
adc
imulb
mov
scas
and
pop
mov
shlb
push
push
fcoms
pop
fiaddl
ret
test
mov
push
xchg
lds
jge
lock
or
test
and
or
mov
rcrl
cmp
or
xchg
jbe
pop
xor
xlat
pop
jbe
aad
sahf
or
aaa
dec
aad
pop
push
mov
xor
inc
jbe
and
fcomps
out
insl
in
jbe
xchg
pop
into
pop
test
mov
push
push
jne
dec
aam
sbb
push
jae
sbb
enter
clc
sub
aaa
cmp
stc
xchg
pop
addr16
negl
rcrl
cmp
push
cmp
mov
fcomps
inc
jmp
pop
push
mov
sub
ffreep
rcrb
xor
mov
adc
daa
stc
jecxz
add
xchg
pop
pushl
cmp
cmp
mov
mov
mov
xchg
js
movsb
inc
xchg
push
bound
cmovae
push
sub
adc
mov
jmp
or
scas
xchg
fcomp
bound
daa
dec
sub
fwait
and
rolb
cwtl
pop
mov
outsl
stos
int3
xchg
pop
pop
sbb
inc
std
test
xchg
push
fdivrs
out
or
push
bound
dec
inc
cmp
movsb
jbe
rclb
mov
outsb
and
sbb
fld
adc
jae
rclb
mov
loop
jp
in
jl
push
or
out
test
aad
into
push
pop
push
aas
xchg
les
in
push
fwait
mov
push
test
lds
enter
xor
lahf
aam
pop
aaa
aaa
push
icebp
jl
jae
shl
rcll
sub
mov
adc
jae
shl
sbb
lret
xchg
test
pop
push
pop
fwait
xchg
mov
negb
mov
pop
je
and
or
pop
push
xchg
ja
aas
mov
das
arpl
fsubs
mov
push
aam
fdivs
hlt
sbb
faddp
push
xlat
lcall
fstpl
jbe
mov
sbb
jb
pop
inc
out
negb
daa
xchg
pop
adc
out
mov
negl
or
pop
push
cmp
pop
push
enter
mov
push
imul
cmpsl
xor
and
mov
mov
loop
in
pop
or
and
sbbl
push
push
pop
cmp
mov
ss
xor
jne
push
pushf
cs
rol
jg
testl
xchg
sbb
jne
repnz
push
test
cld
xor
xor
add
sbb
add
rcrl
dec
sub
push
push
and
sbb
fstp
adc
and
push
test
mov
sbb
add
arpl
xchg
pop
lods
adc
arpl
xlat
pop
push
div
push
sbb
test
sub
pushf
negl
orl
aas
movsb
xlat
loop
shl
ficomps
mov
rcl
xor
inc
and
aam
out
push
movl
xlat
dec
bound
adc
test
je
int3
insb
ret
push
cmp
addr16
lret
inc
repnz
pushf
aaa
mov
addr16
out
fcoml
mov
cmp
pop
aas
cltd
or
rclb
scas
pop
aad
push
push
add
push
shll
aad
or
arpl
sub
jle
dec
aam
sbb
daa
adc
xchg
repz
mov
and
fisubrs
inc
dec
mov
push
push
dec
test
xchg
aaa
std
push
test
push
outsl
xchg
call
out
dec
test
mov
fdivl
mov
adc
jg
sub
xor
dec
mov
mov
mov
adc
push
pop
adc
jle
inc
pop
pop
push
scas
push
pop
aaa
pop
popf
mov
cmpsb
adc
or
sbb
cmp
push
scas
jl
insb
frstor
rclb
in
add
pop
xchg
adc
rorb
les
std
sbb
clc
mov
cmpsb
jns
nop
sbb
add
mov
fisubs
pop
push
daa
mov
repz
shrl
dec
add
rol
push
jmp
sub
dec
arpl
mov
outsl
fadds
xchg
push
cmp
lcall
cwtl
fwait
pop
fbstp
fcomi
test
mov
xchg
pop
adc
pop
stos
ret
cmp
push
aam
aas
sbb
fistpll
xchg
xchg
addr16
icebp
mov
xchg
inc
sbb
inc
push
adc
push
sti
hlt
xchg
push
xor
adc
das
pop
push
adc
aam
xor
push
and
pop
rcr
aam
std
dec
or
outsl
cmp
lea
fistl
js
fcoml
jl
xchg
pop
pop
daa
sahf
bound
rorl
outsl
inc
mov
push
adc
cmovg
ficoml
stos
adc
sbb
push
xchg
push
aam
out
dec
aaa
rclb
pushf
or
push
fwait
push
pop
rclb
imul
cmp
inc
call
mov
in
jecxz
lahf
pop
in
out
ficompl
movsl
pop
inc
rclb
leave
addr16
push
xchg
and
xchg
in
aam
arpl
cmp
adc
fdivr
pop
outsl
or
sbb
lahf
mov
movsb
repnz
cwtl
inc
aas
dec
or
pop
fsubs
rcll
insb
adc
dec
fs
fsubr
pusha
add
pop
sbb
imul
das
aad
push
xchg
aas
shrb
lds
push
inc
addr16
pop
cs
sarl
pop
ja
out
or
push
mov
cwtl
pushf
jb
xor
push
pop
notl
sbb
push
aad
xor
mov
cmp
rcr
and
imul
cmp
pop
sub
lcall
aad
inc
and
push
fidivs
aam
popa
out
adc
add
dec
sub
xor
sbb
push
sbb
pop
pushf
repz
xor
cwtl
test
lds
imul
les
movb
xchg
sahf
and
mov
xlat
xlat
aam
js
ja
cmp
xchg
xchg
fwait
pop
pop
inc
mov
shlb
jl
mov
mov
into
pop
pop
push
movsb
es
xorl
add
pop
xchg
enter
xchg
insl
add
aad
ja
lret
iret
imul
jle
mov
cwtl
lcall
sar
aaa
mov
arpl
mov
test
xchg
adc
mov
insl
jmp
or
push
pop
pop
add
rclb
fstpl
nop
pop
inc
xchg
lods
sbb
jno
pop
inc
sbb
fdivrp
jmp
push
jp
rcll
xor
out
shlb
add
sbb
jb
and
fsubrl
stos
xor
pop
dec
cmpsl
add
sbb
addr16
mov
mov
iret
xor
lods
lahf
push
pusha
aaa
pop
pop
lahf
inc
jns
andl
inc
das
leave
push
rcrl
pop
fsubrs
popf
xchg
loop
pop
adc
xchg
push
push
jnp
push
inc
fstpl
xchg
rcrb
shll
out
adc
push
stc
shrb
aaa
daa
bound
es
push
xchg
dec
jecxz
jno
jnp
dec
fnstenv
mov
xor
cld
enter
cmp
addr16
xchg
fcmovbe
push
mov
push
inc
adc
jns
add
push
sbb
xchg
cwtl
or
mov
jmp
push
shlb
mov
fmuls
pop
push
jecxz
outsb
push
mov
pop
dec
push
in
aaa
arpl
sub
xchg
jl
jg
nop
aaa
pusha
or
ljmp
jecxz
push
out
aaa
repnz
in
mov
pop
sbb
mov
rcr
pop
mov
jl
repnz
pop
pop
test
clc
lcall
movsb
cli
roll
cmp
mov
and
aam
cmp
lcall
pop
cmpsb
mov
shl
out
adc
xchg
jnp
xor
scas
push
push
and
movsl
lea
loopne
inc
and
rcrb
subl
sub
loop
daa
out
sbbl
rorb
add
mov
loop
outsl
imul
ss
loop
mov
mov
xchg
push
das
mov
arpl
jecxz
push
or
xchg
js
je
aam
jbe
inc
pop
add
mov
jo
dec
hlt
dec
mov
inc
test
add
dec
scas
lods
push
push
jle
push
push
lds
inc
and
rcll
scas
push
sbb
fistpl
mov
cmp
mov
push
std
dec
adc
pop
jne
outsl
sub
xchg
sub
nop
push
push
inc
shrb
sahf
das
mov
add
push
scas
iret
stos
sti
repnz
aam
pop
inc
sbb
mov
pop
aas
mov
and
and
data16
insl
pop
jbe
cwtl
sahf
sub
cmc
jl
in
xchg
scas
push
loop
fwait
and
push
xor
or
push
jo
dec
shl
fcomps
inc
add
push
icebp
ret
and
inc
or
sub
adc
push
jb
cmp
test
inc
add
push
cs
dec
dec
jg
inc
push
push
ret
aaa
inc
and
in
mov
mov
or
xchg
push
test
mov
jo
inc
adc
jecxz
shrb
popa
xchg
pop
out
mov
lret
push
jle
lods
into
pop
cmp
popf
mov
pop
imul
std
mov
adc
rcr
leave
xor
sti
xchg
insl
jne
dec
in
loop
pop
add
aaa
pop
sbb
sbb
and
pop
dec
lret
jno
cs
int
mov
push
pushf
roll
fs
enter
xlat
std
call
push
mov
pop
jno
cmp
mov
push
leave
insb
les
sbb
xchg
mov
push
mov
push
adc
jmp
push
iret
int
push
aad
mov
or
mov
fists
and
sahf
push
lea
sub
adc
push
popa
pushf
ljmp
inc
push
adcl
sbb
mov
jle
test
sarl
rclb
addb
or
movsl
mov
stos
lock
leave
dec
cmp
cmp
xchg
cmp
loope
xchg
xor
push
sbb
pop
sub
and
lahf
fstpt
push
sub
add
push
cltd
and
sbbl
xchg
cli
and
cwtl
test
cltd
fstpl
inc
push
pop
xlat
in
sbb
pusha
xor
sub
pop
adc
mov
mov
mov
cltd
cwtl
cmc
jmp
push
pusha
aaa
cmpsb
cmp
sbb
cs
or
jb
fldenv
jge
push
cmpsl
xchg
inc
cli
dec
fwait
mov
bound
movsb
das
xor
in
push
mov
push
mov
leavew
push
lret
ret
and
and
push
sub
jmp
inc
addr16
inc
mov
rcrl
jp
fcomip
fmuls
inc
stos
add
push
daa
dec
addb
lret
mov
cwtl
push
xor
adc
push
pop
jae
addr16
mov
lcall
push
push
mov
int
add
rcll
andb
les
outsb
dec
clc
addr16
push
sbb
xor
in
push
mov
push
cmp
mov
sbbb
adc
add
scas
or
jge
pop
cmp
inc
or
pop
push
cmp
mov
or
cmp
push
pop
cmpsb
sbb
inc
push
hlt
mov
cmp
int3
push
aas
aaa
mov
pop
push
push
mov
das
sub
mov
sub
push
push
xorb
push
gs
adc
xor
negb
loopne
inc
push
out
mov
push
test
add
xor
pop
mov
out
pusha
adc
das
push
mov
daa
jo
push
ret
enter
lahf
and
arpl
push
adc
pop
aam
aaa
push
cli
cmpsb
popa
cmpsl
scas
push
gs
inc
push
dec
inc
movl
divl
xchg
sub
mov
inc
rorb
and
std
dec
icebp
jmp
mov
push
sti
adc
inc
add
dec
cs
cwtl
icebp
mov
cwtl
ficompl
inc
mov
repz
jmp
pop
adc
xchg
pop
dec
sub
push
add
jb
cmpsb
xchg
ret
idivb
mov
jnp
mov
mov
xchg
inc
push
jl
or
jnp
fdivs
inc
sbb
lea
roll
repnz
ret
add
adc
pusha
mov
mov
jne
xchg
push
nop
iret
inc
and
repnz
mov
dec
sahf
xchg
xor
scas
xor
pushf
repnz
lret
mov
sbb
js
jmp
xlat
push
cmp
push
xchg
movsl
pop
in
andb
cmp
mov
jl
test
les
cltd
fwait
pop
push
int
outsl
daa
add
mov
sub
push
mov
push
mov
ja
or
fs
adc
ja
cmp
adc
mov
push
jg
push
inc
push
dec
push
xchg
fnstenv
int
mov
shll
push
lds
push
hlt
mov
je
push
adc
xchg
nop
es
ret
pop
adc
into
mov
jle
sub
pop
pop
popf
and
pop
mov
add
push
mov
mov
xchg
inc
xchg
insl
aaa
sti
addb
pop
roll
lret
cmp
aaa
xchg
cmp
dec
sbb
jecxz
push
scas
loope
jno
imul
pushf
call
jge
mov
push
inc
frstor
dec
stos
push
xchg
inc
and
sub
cmp
push
pop
mov
push
std
aaa
mov
imul
lods
and
push
pop
into
fsubl
adc
pop
js
std
xlat
rcl
mov
xchg
leave
outsl
lret
imul
aaa
rorl
push
or
dec
js
scas
push
call
orb
ds
ljmpw
push
sti
add
pop
push
leave
jle
sub
jnp
jmp
lcall
xor
outsb
repz
cmp
or
mov
in
push
gs
out
push
bound
mov
imul
mov
push
test
inc
loopne
int
and
jp
lcall
cltd
push
mov
dec
ja
cld
mov
xchg
aas
push
mov
notl
cmc
mov
xchg
xor
dec
in
rcrb
xor
insb
push
orl
out
insl
sub
jle
jge
cmp
dec
lcall
pusha
in
push
lds
push
int3
fcmovu
pop
shl
cmpsl
cld
push
faddl
dec
rcrl
pop
jecxz
dec
pop
xor
push
pandn
clc
push
xlat
das
movsl
ret
mov
leave
xchg
daa
mov
stc
push
mov
add
sub
cmp
inc
stos
aam
push
dec
stc
push
jb
mov
push
sbb
out
cmpsb
push
xor
lea
pop
xor
dec
es
pop
pop
ja
push
sahf
lret
in
subb
inc
cli
aaa
mov
iret
sub
push
push
sbb
mov
push
das
push
dec
and
mov
mov
loope
mov
adc
call
xchg
ja
jbe
ficomps
aas
jge
xor
mov
pop
mov
icebp
push
popf
mov
or
iret
lods
enter
repz
push
inc
push
stc
mov
scas
fs
call
sub
out
popl
dec
jae
dec
mov
daa
jns
cmp
lds
scas
xchg
leave
push
clc
pop
insb
xchg
fdivl
pop
inc
je
aad
push
mov
cmp
or
jge
xchg
imul
jo
pop
ds
push
push
mov
cli
mov
ljmp
pop
inc
or
divl
xchg
add
cwtl
aam
push
insl
test
movsb
fs
fimuls
dec
push
aas
mov
jecxz
push
or
sbb
sbbb
add
and
jns
jae
mov
ja
in
xchg
jns
push
cmp
and
add
call
pop
lods
adc
clc
push
andb
out
enter
xchg
pop
jmp
lock
push
outsl
mov
xchg
push
ficompl
mov
jb
adc
xchg
movsb
out
push
sub
subb
or
mov
push
data16
lcall
test
mov
call
push
inc
inc
adcb
in
sti
push
push
mov
push
mov
mov
sub
scas
and
ret
repnz
inc
cmc
sarl
xchg
daa
and
pop
imul
int
push
cmpsb
imulb
push
add
inc
cmp
sbb
ja
jmp
clc
adc
and
and
cmc
repnz
out
jl
in
les
ja
fwait
ret
outsl
push
nop
imul
cwtl
test
rorb
and
push
push
inc
and
inc
mov
cmp
inc
pop
addr16
push
shl
cs
pop
test
addr16
push
test
xchg
push
inc
and
insb
jne
push
push
aad
mov
jl
es
push
in
jge
into
hlt
push
cld
push
pop
inc
sahf
mov
adc
mov
add
bound
mov
icebp
dec
jle
test
fs
jmp
pop
xchg
imul
adc
pop
sarb
fisubl
cmp
jo
icebp
rcll
std
inc
fneni(8087
adc
mov
xchg
inc
jno
and
hlt
aam
push
push
push
int
lods
pop
pushf
imul
lret
push
mov
dec
mov
cmp
lcall
test
fsubrs
addr16
xlat
mov
mov
mov
stos
xorb
int3
add
aas
xor
test
push
xor
cmp
fisubs
inc
jle
or
jb
dec
scas
les
mov
inc
iret
adc
cmp
ljmp
push
push
xorl
and
or
iret
nop
cmp
mov
lods
shll
xchg
mov
pop
push
xlat
sbb
movsl
fnstsw
or
xchg
push
addr16
dec
pop
popf
adc
jp
dec
loope
call
sub
pop
cli
jg
and
and
iret
push
push
lret
pop
cltd
ret
xchg
call
popf
xchg
pop
fisubrs
push
test
inc
shr
dec
rclb
repz
xor
leave
xor
xchg
js
pushf
pop
daa
mov
popf
sub
pop
sbb
or
sahf
leave
xor
in
cwtl
lahf
pop
out
pusha
into
loopne
mov
sarb
xor
inc
ret
cmpsl
fildll
sahf
mov
pop
mov
add
out
js
push
dec
mov
cmp
div
and
add
dec
mov
mov
fldcw
mov
rcll
push
xchg
and
push
fisubrl
dec
mov
dec
mov
xchg
adc
xchg
outsl
xor
adc
faddp
push
mov
ja
stos
push
ror
outsb
int
in
push
xchg
aad
mov
push
push
jmp
mov
nop
shll
dec
push
mov
cld
popa
adc
stc
mov
or
in
push
jl
cmp
bound
jnp
aas
adc
push
sub
pop
jbe
sbb
add
cmp
push
mov
repz
ficoml
jo
sub
inc
xchg
inc
lea
pop
sub
pop
aas
aad
out
pop
sti
or
sub
notb
jns
into
xor
jge
push
push
xchg
imul
add
push
and
cmp
push
lret
aad
movsl
xor
idivb
dec
push
xor
hlt
mov
out
sub
std
ds
int3
sti
mov
push
test
rcrl
push
mov
pop
adc
push
repnz
ret
jmp
shlb
add
jg
les
push
out
test
cmc
adc
repnz
cmpsl
sbb
dec
inc
cmp
ja
push
xor
mov
mov
push
push
adc
push
mov
xor
adc
push
stc
xchg
sbb
mov
add
mov
push
add
inc
cmp
fbld
mov
clc
xor
push
imul
es
mov
push
pusha
mov
lret
dec
sub
push
or
jb
or
data16
pop
out
cmp
fnstsw
les
lret
jl
cmpsl
ds
test
mov
cmpsb
fidivrs
adc
xchg
outsl
push
mov
xor
rclb
push
or
pop
jne
xlat
xchg
rcrl
jae
push
mov
insb
stos
push
ret
movsb
sub
push
adc
repnz
add
pop
cmp
or
inc
or
stc
fistl
xchg
imul
mov
jl
notl
les
push
push
test
mov
push
les
ja
mov
adc
xchg
pusha
sbb
mov
and
pop
cmp
adc
sub
mov
daa
cs
insl
push
jg
notl
adc
mov
bound
adcb
test
fs
push
dec
int
and
hlt
dec
pop
cli
push
inc
lret
lret
mov
pop
cmpsb
cmp
xor
ficompl
pop
jl
push
mov
das
out
mov
ds
leave
push
or
xorb
daa
int
shl
inc
xchg
sub
dec
sti
and
push
fistpll
loopne
lock
push
aaa
ss
xchg
mov
pop
xchg
and
cmp
push
jno
inc
arpl
sub
xchg
outsb
pop
fs
imul
cmp
push
cli
cld
xchg
stos
mov
cmpsb
xchg
dec
std
sbb
daa
shrb
fwait
imul
cmpsb
inc
mov
jg
stc
pop
xor
jne
js
fsubr
shl
pop
ja
imul
pop
loop
arpl
or
push
cltd
fsubr
pop
push
push
scas
aas
pop
gs
das
xchg
push
inc
rcrb
adc
adc
pop
cmp
xchg
or
xchg
rcrb
stc
mov
addr16
aam
sahf
jmp
push
lds
or
dec
jbe
xlat
xchg
andl
mov
adc
adc
subl
test
mov
jge
in
adc
sbbb
push
pop
lods
mov
or
push
mov
shrb
push
stos
idiv
subl
mov
adc
in
out
dec
push
xor
addr16
subl
lods
mov
stos
push
jmp
jp
mov
push
outsl
push
mov
pusha
mov
adc
or
pop
dec
fyl2xp1
jmp
cmpsl
mov
and
pop
lcall
fwait
adc
dec
jecxz
push
mov
push
jno
push
das
popa
fists
jl
and
push
or
push
int3
push
xor
addr16
push
mov
lods
insb
push
into
mov
jno
stos
lahf
mov
push
inc
dec
xchg
sbb
sbb
out
adc
das
sahf
lea
cld
pop
shlb
es
jb
xchg
pop
lcall
xchg
mov
fsts
loope
mov
pop
mov
sbb
push
stos
dec
dec
test
mov
xlat
cmp
in
add
dec
xor
pop
xor
sub
jbe
int3
dec
push
into
pop
mov
insl
mov
jecxz
jmp
push
lods
or
js
fimull
insb
ljmp
incb
inc
jp
push
iret
pop
or
push
mov
jp,pn
mov
push
add
sub
dec
in
lds
arpl
mov
mov
iret
pop
fs
pop
aad
das
push
jg
movsl
lret
jmp
pop
inc
push
jae
push
push
ljmp
lock
ja
pop
add
xchg
aaa
jo
jmp
enter
lahf
std
sub
push
sbb
mov
jge
add
adc
dec
cmpsb
push
repz
cmc
add
push
and
loop
and
mov
dec
push
ret
push
mov
and
add
xchg
mov
push
push
fdivrs
push
dec
add
out
loop
ljmp
repz
sub
or
jno
inc
inc
push
mov
cmp
mov
push
push
out
fs
jge
fsubrl
fidivrl
or
mov
ret
inc
push
xchg
enter
add
mov
in
jge
mov
jne
in
test
inc
push
incl
jp
inc
out
mov
or
adc
push
jge
mov
xor
mov
mov
lahf
cmp
nop
push
mov
cmp
hlt
push
push
dec
js
inc
mov
mov
push
inc
push
push
xchg
sbb
shll
cmp
push
testl
sub
adc
shlb
shlb
mov
mov
push
mov
into
shlb
or
jmp
pop
add
sti
inc
push
inc
in
addr16
push
dec
das
cmp
ja
jp
push
je
das
cs
aas
rcrb
xor
and
bound
inc
jns
and
shrb
lds
sub
ja
adc
inc
mov
xchg
adc
xchg
push
in
push
out
movsl
adcb
outsb
push
fcompl
int3
ljmp
fucom
pop
into
push
add
push
imul
lds
fisubrs
or
rclb
push
movsb
lcall
orl
sbbb
xchg
mov
xor
insl
aaa
push
sub
xchg
dec
sbb
test
cmp
sbb
int
in
xchg
add
push
rcrl
mov
addps
push
test
imul
dec
push
and
push
add
out
fcmovnbe
inc
ss
jb
andb
pusha
iret
push
test
in
adc
std
ja
shlb
pop
imul
cmpsl
mov
mov
aaa
mov
scas
push
outsb
cmp
rcl
ljmp
add
push
insl
adc
cmp
mov
push
fsub
stc
pop
lcall
je
in
mov
pop
sahf
adc
or
int3
xchg
xorl
push
or
jmp
push
movsl
repz
lock
cmpb
aad
xchg
push
loope
add
xor
stc
mov
push
pop
lcall
inc
jp
or
lret
xchg
cltd
push
xor
gs
cmp
sbb
fisttpll
push
outsl
fiadds
adc
sbb
push
push
imul
mov
push
jg
sbbl
add
lea
push
lods
movsb
sub
sbb
dec
test
pop
cmc
jp
push
xor
cltd
pusha
jl
or
cmp
push
fbstp
cmpsw
les
jbe
xchg
pop
dec
fadds
pop
adc
add
jecxz
scas
cmc
xor
sbbb
push
push
or
je
sbb
push
repnz
mov
icebp
das
ja
mov
lock
mov
xchg
dec
aad
sbb
mov
xchg
pop
push
mov
daa
mov
ja
jl
lret
stc
xor
mov
movsb
lahf
fidivl
rcr
gs
push
addr16
addr16
or
add
cmp
mov
insb
cmp
data16
push
push
fcoms
sbb
sub
jbe
es
roll
xchg
push
bound
shrl
mov
or
mov
push
sbb
lock
stos
dec
aaa
enter
pop
call
jnp
push
sbb
xchg
outsb
sub
iret
scas
jbe
stc
push
dec
lds
push
mov
insb
sbb
mov
push
push
movsb
pop
pop
test
aad
xchg
mov
pop
scas
cmp
push
test
fucomip
inc
push
stos
fnstsw
out
leave
mov
js
inc
das
cwtl
push
fwait
cmp
imul
test
sub
arpl
pop
push
cmp
popf
adc
aam
into
stos
cmpsb
stos
push
sbb
xor
push
push
lcall
lret
loop
jbe
and
pop
rorl
push
and
adc
jae
mov
xorb
mov
add
mov
xchg
fiaddl
push
inc
pop
fisttps
stc
hlt
lods
jmp
lret
aad
movb
dec
inc
sbb
xor
mov
sbb
popf
ja
pop
mov
addr16
push
jmp
push
subl
xor
ret
mov
mov
insl
repz
outsb
out
and
jecxz
jge
insb
cmpsb
fisubrl
out
inc
mov
leave
jns
adc
pop
repnz
pop
or
sbbb
lahf
lods
or
push
mov
or
adcl
nop
push
mov
xor
bound
mov
sarl
mov
scas
jg
inc
repnz
es
push
pop
mov
sbb
sti
push
idivl
jno
das
xchg
lock
and
sub
xchg
andl
not
outsl
push
imul
push
push
in
insb
xor
pop
loopne
mov
icebp
mov
xor
test
mov
xchg
cmp
pop
pop
leave
into
push
pop
push
fildll
fstps
push
in
movsl
in
inc
xchg
sbb
push
mov
xchg
imul
enter
pop
repz
in
bound
push
push
dec
push
in
and
pusha
xor
push
mov
push
push
clc
and
jle
cmpsb
push
popf
imul
imul
loop
push
adc
frstor
sti
push
int
aad
push
jg
pop
push
add
pusha
loopne
lds
aaa
cmpsb
fdivl
xchg
push
sbb
jno
test
mov
pop
or
push
js
pushf
cmp
xchg
cmp
push
sub
push
xchg
stos
rcr
xor
gs
cmc
mov
pop
xchg
mov
repz
orb
jmp
popf
dec
cmp
pop
push
mov
js
pop
stos
rcrb
cmpsl
xchg
or
subl
lahf
mov
or
cltd
pop
fdivrl
js
scas
push
pop
sar
loope
inc
push
decl
xor
push
fsubr
sti
cmp
push
or
pop
push
ret
cmc
sub
xchg
ljmp
sahf
mov
adc
or
add
or
xlat
push
daa
stos
mov
xchg
adc
adc
inc
mov
and
pop
sub
push
push
inc
jp
or
mov
xchg
pop
ljmp
cmp
fcompl
cmp
test
or
and
ficoms
xchg
out
scas
cmpsl
das
notl
inc
dec
xlat
xor
push
sbb
insl
std
xor
add
push
pop
leave
pop
sbb
dec
pop
jge
into
in
icebp
mov
push
cwtl
scas
outsl
test
push
mov
xchg
fisttpll
xchg
xchg
push
fstps
xor
mov
in
adc
lods
sahf
jecxz
aam
xor
dec
and
inc
mov
push
and
imul
rorb
pop
mov
movsl
out
pop
mov
cmp
fdivs
push
stos
mov
cltd
stc
xchg
into
fldenv
mov
push
push
insb
hlt
push
nop
xor
mov
cmp
or
aas
ja
push
jp
and
push
lcall
enter
sbb
add
push
mov
mov
data16
sbb
push
sbb
inc
push
arpl
cmp
scas
into
addb
sbb
pop
jbe
inc
push
jnp
test
xchg
or
fsubs
pop
mov
mov
call
movsb
out
out
push
sarb
inc
cwtl
mov
stos
pop
cmpsl
sti
call
xchg
aam
push
push
outsl
sub
jns
test
vxorps
push
insb
leave
push
dec
pop
mov
or
pop
adcl
aad
push
or
ret
test
inc
fsts
lret
pop
sbb
sub
mov
lahf
decl
pop
out
cmp
das
dec
cmp
jo
jns
jp
cwtl
sub
lahf
pop
out
arpl
pop
ds
mov
jg
add
cwtl
xchg
out
xchg
pop
fsubs
lods
push
push
js
jle
adc
notb
and
xor
push
mov
mov
mov
xor
pop
in
jae
bound
cmp
adcl
sub
jo
aad
mov
xchg
jns
repnz
push
fistpll
xlat
lods
push
push
arpl
clc
int
jb
sub
sbbb
xchg
jmp
cmp
push
fisttpl
sub
daa
mov
pop
adc
xchg
xor
push
mov
clc
pushf
add
test
pop
pusha
push
cmpsl
xchg
gs
push
incl
repnz
adc
out
push
in
cli
cmp
addr16
cmpsb
push
aam
push
and
inc
fsts
jne
inc
pop
shl
fistps
nop
xor
push
mov
lcall
scas
and
cmpsb
jmp
mov
mov
gs
sbb
cmp
std
xchg
ja
pop
push
mov
cmp
push
xor
ffree
add
mov
loopne
rclb
mov
push
fcoms
ror
mov
mov
lods
and
inc
imulw
push
push
es
outsl
pop
dec
cmp
test
popa
xchg
lahf
lfs
ret
nop
loopne
sbb
bound
push
sarl
lock
test
hlt
xchg
pop
in
rcrb
ja
push
shrl
push
inc
test
pop
jbe
rcr
je
jle
fisubrl
ljmp
and
imul
xor
out
mov
mov
es
jns
inc
dec
inc
add
pop
loopne
pop
aaa
leave
sbb
pop
mov
and
push
cmp
cli
jae
cmp
adc
adc
jg
ja
fstp
add
stos
arpl
into
xchg
out
mov
dec
cmp
push
push
movsl
sub
out
test
aad
push
inc
xchg
cmpb
fbld
or
js
dec
push
rclb
xchg
aaa
inc
popa
push
imul
mov
or
into
and
std
nop
js
inc
pop
push
adc
sbb
ljmp
and
cmp
outsl
push
add
mov
inc
iret
fcompl
sahf
mov
in
outsb
out
into
mov
or
xor
xlat
push
in
cmpsb
push
movsl
sbb
or
call
jle
lea
xor
test
ds
nop
and
or
lret
cmp
or
mov
push
mov
xchg
push
fsubrp
in
mov
testl
daa
inc
pop
in
jge
fdivs
and
pusha
pop
mov
xor
loop
xchg
sub
push
les
xlat
mov
in
cwtl
mov
mov
lret
mov
mov
add
mulb
das
push
xchg
and
test
adcb
jecxz
shlb
xor
cmp
bound
rcrb
and
popf
orl
sarl
nop
mov
in
adc
mov
inc
ret
push
rclb
fsubr
pusha
loop
outsl
push
push
add
fstpl
movsb
inc
stos
jmp
mov
jnp
push
dec
pop
in
scas
push
es
jno
ja
pop
movsl
push
lret
sbb
ljmp
addb
push
and
add
sarl
cmpsb
mov
adc
mov
dec
push
xchg
fwait
sbb
cmp
push
in
mov
xor
push
xorb
push
ljmp
mov
push
mov
cmc
divb
popa
jo
and
fcoml
xchg
fcoms
cmp
repz
rcrl
push
pop
adcb
dec
out
xor
adc
pushf
cmp
sub
rcrb
xchg
push
in
lds
test
test
mov
dec
rolb
filds
aad
xchg
mov
hlt
pminsw
push
cmp
push
out
bound
fidivrs
test
pop
out
pop
sbb
xchg
das
mov
movsb
pshufw
enter
test
or
arpl
adc
ja
add
cmpsb
ret
or
push
cmc
push
xor
les
pusha
lods
inc
loop
dec
sbb
dec
mov
dec
cmp
pop
inc
push
and
in
pop
scas
cmp
pop
inc
mov
cwtl
sub
mov
push
push
test
push
stos
jne
lods
or
sar
jno
push
cmp
or
sbb
fistps
xchg
push
mov
push
leave
jb
xchg
into
ret
stc
pop
cwtl
pushf
enter
les
cmpb
cmp
add
addr16
fcmovnbe
cmc
call
outsb
inc
jbe
stos
adc
addr16
in
mov
mov
int
push
xchg
icebp
and
sub
jne
jmp
adc
nop
scas
es
push
mov
shl
push
movsb
rcrl
std
push
sub
imul
xlat
inc
scas
dec
push
sbb
popf
dec
jmp
and
loop
adc
ss
sub
es
add
add
xchg
cmp
mov
push
add
not
mul
sub
push
sbb
call
inc
addr16
mov
daa
leave
pop
cmp
cmp
test
jmp
test
icebp
rcrb
bound
movl
xchg
inc
mov
daa
jne
or
cwtl
add
insl
and
lea
rolb
lock
daa
adc
nop
fsubp
push
or
xor
daa
push
push
push
movsb
aam
and
jle
xor
into
adc
rcrl
imul
or
shrb
xchg
push
stos
movsb
sarb
dec
xor
hlt
pop
mov
addr16
aaa
jp
mov
push
pop
mov
dec
sti
push
jno
out
cli
int
repz
lea
call
jnp
scas
fistl
cmp
add
imul
or
lods
shll
out
inc
xchg
and
pop
imul
test
test
jle
push
sarb
scas
xchg
mov
sub
inc
add
and
add
sub
xchg
jae
push
push
push
adc
lret
shlb
jns
cmp
pop
xchg
andl
scas
mov
jl
jnp
jmp
iret
add
add
adc
xor
or
push
std
xlat
ret
movsl
iret
jbe
cmpb
dec
push
lret
fldl
imul
fdivr
xor
xchg
test
sarb
inc
aas
js
ja
jp
pop
push
lret
xchg
addr16
cmp
adc
fcoml
enter
adc
adc
mov
push
divl
cmp
dec
cld
out
sbb
lret
mov
and
test
jge
adcb
ja
jge
mov
pop
pop
cmpsb
adc
cwtl
inc
push
jnp
pusha
dec
add
or
ja
jle
push
mov
cli
fistpll
mov
leave
adc
movsl
push
pop
ret
scas
addr16
das
mov
push
push
pop
insl
ja
lea
cmp
je
xchg
jo
push
pop
xchg
cmpxchg
add
push
mov
xchg
pop
push
push
es
push
data16
stos
aad
dec
or
xor
push
test
push
out
dec
xchg
xor
lea
push
es
rolb
xor
stc
xchg
mov
add
shr
stos
sbb
adc
inc
andl
nop
les
out
pop
push
sub
sbb
push
jbe
lret
popf
jg
push
xchg
stos
fucompp
popa
cs
rcll
sub
add
add
sbb
push
lods
daa
ja
repz
in
pop
dec
jge
call
sysret
xor
adc
push
inc
inc
addr16
mov
jns
clc
push
vxorps
xchg
test
push
mov
pop
pop
mov
gs
mov
in
mov
dec
push
mov
fptan
pop
ds
negb
add
push
das
outsb
into
movsl
jo
dec
fsts
mov
adc
cmp
fimull
jbe
push
incb
push
aam
out
cmpsb
cmp
daa
xor
mov
sbb
loop
aaa
inc
shrl
stos
pop
mov
into
push
push
icebp
inc
and
push
je
jae
xrelease
fwait
push
rcr
mov
inc
adc
adc
add
fcmovbe
sbb
clc
outsb
jo
inc
inc
xchg
iret
jmp
cmp
adc
push
mov
ret
cmp
push
test
ret
inc
xchg
add
mov
mov
pop
inc
push
add
das
aas
aaa
inc
pushf
out
mov
decl
or
pop
adc
cwtl
pop
in
jno
adc
in
mov
xor
pop
sbb
pusha
push
nop
imul
sti
add
mov
scas
inc
push
cmp
out
mov
xchg
sbb
adc
hlt
push
push
add
mov
fs
lret
sub
inc
push
mov
or
es
int
fwait
stos
mov
mov
mov
adc
fs
push
ret
icebp
inc
mov
inc
push
xorl
adc
push
or
adc
push
outsb
jp
ja,pn
arpl
jg
mov
push
xor
imul
pop
mov
adc
cli
pop
test
ss
xchg
push
mov
inc
in
lods
cvttps2pi
jb
pop
call
pop
mov
and
addr16
xor
dec
and
push
in
push
jo
arpl
mov
jecxz
dec
add
add
push
sahf
out
push
fsubr
xchg
sti
adc
in
rolb
push
loopne
jns
xchg
aaa
pusha
mov
adc
xchg
and
inc
aas
jno
push
ror
roll
pushf
dec
mov
cld
jns
pop
pop
fisttpll
xchg
push
pushf
test
idivl
fcmovbe
mov
push
mov
pusha
cltd
push
inc
push
xor
adc
add
out
adc
or
dec
jb
pop
sub
js
push
adc
jnp
aam
xor
pop
push
nop
mov
lock
fcompl
mov
adc
adc
addr16
dec
andl
fisubrs
in
ljmp
push
sbb
pop
roll
push
and
js
iret
cmc
mov
sahf
pop
xchg
sbb
incb
mov
inc
js
xlat
icebp
cwtl
pop
push
cmp
pop
lock
add
loope
ret
push
call
test
jns
jo
rcrl
and
lods
sbb
lret
sbb
gs
ret
mov
rcr
mov
mov
imull
scas
push
lahf
dec
sub
in
sbb
jmp
sub
xor
add
das
pop
xchg
adc
push
pop
loop
jge
lcall
cwtl
jg
scas
pusha
mov
xchg
push
push
jmp
cmpsl
or
push
test
iret
xchg
jp
sbb
push
pop
adc
shll
imul
push
mov
popa
push
push
inc
adc
and
pushf
jb
push
in
mov
xchg
push
cmp
xor
cmp
push
stc
jl
fadds
scas
es
xorl
daa
mov
pop
das
loope
out
push
sub
lea
ds
es
ja
xor
or
js
stos
loop
mov
lods
inc
add
sbb
mov
cld
inc
pop
ret
je
pop
sbb
rorb
aam
call
adcb
mov
sub
jbe
and
lods
push
xchg
fisubrs
loop
mov
repz
bound
jg
push
mov
push
cmovbe
clc
xor
jp
cwtl
adc
mov
aas
mov
stos
popl
test
sub
aaa
rclb
ret
cmpsl
and
mov
ljmp
jmp
fstps
aad
cmp
test
jle
push
xlat
mov
fs
pop
cmp
push
dec
cmp
shrl
xorb
sbb
notl
jns
dec
je
lds
push
aas
pushf
das
and
mov
pop
or
fdivl
inc
mov
bound
into
fildll
int3
xchg
lods
or
nop
mul
mov
aad
pop
and
sbb
pop
mov
lret
fs
xchg
fwait
out
mov
int
inc
rorl
rcll
or
adc
fstps
pop
xchg
imul
mov
in
push
mov
rcrl
add
mov
push
cmp
mov
aam
jnp
xchg
cmpsl
shrb
out
scas
cmp
mov
mov
fstpt
xchg
pop
fldenv
test
jle
mov
jbe
repnz
test
mov
add
jbe
pop
out
pop
sub
sub
xchg
cmp
sbb
test
rolb
xchg
mov
dec
mov
fnstsw
pop
and
ja
andb
jnp
in
mov
js
daa
xchg
xchg
push
lock
mov
cmp
sbb
in
mov
sti
fbld
dec
push
mov
loope
xchg
cmp
jae
pop
iret
pop
insl
and
aas
mov
add
add
les
pop
subl
xor
rcrb
push
sbb
cltd
rclb
icebp
adc
fisubrs
dec
stos
pop
ret
xchg
shll
jmp
and
rcrl
xor
imul
popf
push
mov
sbb
jmp
xchg
mov
push
mov
xor
xbegin
cmpsb
mov
mov
scas
and
cld
xchg
shll
xor
mov
movsb
mov
xor
cmp
mov
rcrl
inc
push
loop
inc
incb
out
pop
je
punpckhwd
clc
xchg
mov
cmp
add
dec
mov
bound
rcl
sub
fldl
add
push
rcll
in
pop
mov
aaa
icebp
inc
xchg
inc
nop
jmp
shlb
adc
pop
fldcw
das
hlt
pop
mov
add
shll
lods
push
pop
in
add
or
dec
fwait
mov
imul
lcall
mov
push
fldt
pop
mov
inc
call
pop
adc
adc
or
or
in
movsb
add
inc
cld
imul
xor
mov
mov
mov
fucomip
sbb
cmpl
xchg
sub
mov
xchg
sub
stos
aad
lret
fisubrs
mov
add
imul
pop
test
lods
pop
ret
mov
xchg
movsl
jae
das
jnp
adc
push
sub
push
mov
pop
push
mov
int
out
cmp
xchg
sbb
addl
daa
inc
pop
add
ja
sbb
lret
sub
bound
jae
mov
icebp
fst
fsts
mov
dec
push
pop
out
rep
icebp
out
dec
sub
xor
push
jae
nop
pop
jle
fsts
pop
insb
ret
push
stos
imul
popf
int
sub
sarl
cs
das
loop
pop
xchg
clc
in
lcall
iret
xchg
cmp
lods
movsl
aas
loope
psrlq
mov
push
cld
es
roll
ljmp
hlt
xchg
pop
push
dec
shr
subb
xlat
mov
mov
clc
ret
xchg
push
xchg
push
enter
mov
stos
sbb
insb
push
icebp
add
into
or
out
dec
outsl
loope
loope
mov
and
sbb
jb
in
mov
xlat
gs
push
subb
mov
out
cld
fisttps
and
mov
outsl
add
mov
pop
adc
cli
hlt
imul
sbb
inc
movl
inc
ficoml
dec
cmp
pop
sub
push
cmp
aad
nop
mov
hlt
lods
loope
cmp
aad
loope
pop
pushf
and
inc
scas
lcall
fnstsw
daa
stos
sahf
dec
inc
fistpl
fldcw
out
adc
sbb
or
loope
fistpl
std
xor
inc
mov
adc
sub
rcrl
repz
xlat
xor
jno
lods
fcoms
pop
mov
mov
sbb
jns
fnstenv
push
pop
or
mov
cmp
rcrl
fs
nop
and
sbb
cmp
sbb
mov
xor
adcb
jmp
dec
sbb
out
shll
lock
aas
inc
in
ljmp
push
mov
nop
adc
lods
jl
inc
xor
push
jmp
mov
in
mov
fbstp
dec
push
and
jg
enter
push
gs
sbb
daa
ret
xor
adcb
sub
xchg
movsl
pop
sub
std
cmp
clc
xlat
push
sub
test
ret
mov
pop
jbe
push
cltd
add
sbb
pusha
ss
bound
filds
ret
push
es
pop
push
sahf
pop
fistps
mov
mov
gs
inc
inc
jb
add
push
mov
and
push
adc
into
xchg
in
in
cmp
aas
jp
and
push
movsl
mov
pop
jno
stc
jle
subl
dec
sub
inc
cwtl
xor
add
fists
pop
jl
jno
cmp
imul
mov
js
shll
or
mov
push
out
mov
cmp
jbe
in
test
aad
add
sub
inc
mov
pop
mov
out
jne
jnp
sbb
jmp
cmp
lret
xlat
aaa
scas
fs
xor
iret
fdivl
inc
int3
mov
lahf
add
dec
xor
cs
cltd
mov
lahf
int3
lea
out
iret
ja
jmp
push
jb
aam
rcrl
cwtl
mov
and
sub
mov
push
loope
rcrl
pop
push
sub
lods
push
push
popa
xchg
rcll
sub
ficoms
push
sub
pop
aam
dec
push
outsb
push
mov
ljmp
mov
cmp
dec
aaa
nop
roll
dec
adc
cwtl
fstsw
iret
rcrb
sub
test
ds
push
lock
ret
sub
mov
sbb
rcll
xchg
fcoms
cltd
in
push
push
push
mov
imul
outsb
dec
push
scas
adcl
sbbl
das
inc
repz
mov
fstpt
pop
dec
cmpb
or
pop
adc
lods
jno
add
in
cmp
loopne
jp
and
or
pop
je
cli
xchg
jle
pop
jg
pop
clc
setb
lods
dec
loope
icebp
push
push
push
sub
addl
inc
xchg
dec
aas
aad
ret
gs
aaa
std
ret
push
sub
jl
sbb
fucomip
arpl
test
lcall
xchg
xchg
push
sub
xchg
call
and
sbb
cwtl
loope
sbb
fistpll
cmpsb
dec
jae
into
push
ja
out
xor
sub
loopne
daa
dec
movsl
push
test
addr16
ds
lcall
aaa
fbld
pop
sbb
sti
add
adc
addl
xchg
rcll
xchg
push
fists
dec
test
loope
xchg
arpl
out
sbb
fidivrl
insb
jnp
mov
pushf
mov
mov
inc
out
pop
andb
icebp
hlt
adc
insl
out
pop
pop
mov
lods
lcall
jmp
pop
jbe
sbb
mov
push
into
push
xor
cmp
xchg
pushf
loope
and
dec
test
push
dec
hlt
push
xor
pop
mov
pop
jle
mov
pop
aas
xor
loopne
arpl
xor
cmp
out
add
xchg
add
repz
sbb
sbb
xchg
and
ficomps
add
or
outsl
pop
jne
ss
adc
mov
iret
sub
mov
notb
push
jecxz
xchg
xchg
nop
or
and
out
ds
in
outsl
stc
ds
pop
lock
repnz
pop
fistpll
scas
sti
pop
sbb
das
mov
cs
mov
cmp
ljmp
in
mov
push
sub
leave
or
mov
jecxz
jmp
adc
mov
pusha
addr16
flds
inc
push
mov
cmpsl
idiv
les
mov
jae
ficoml
lcall
and
xor
sub
sbb
and
les
xor
jge
cmp
lret
nop
fwait
sub
jmp
movsb
nop
pop
sub
adc
lods
arpl
arpl
icebp
dec
mov
shrl
mov
clc
mov
nop
lods
adc
lret
cltd
jle
hlt
xor
in
out
outsl
mov
cwtl
fnstenv
clc
add
dec
mov
scas
jl
push
ficoml
dec
adc
flds
xchg
dec
loope
xor
nop
mov
and
jp
scas
jb
sub
cmp
pop
xor
rcr
sbb
mov
push
in
ljmp
push
or
or
pop
out
fstps
mov
pop
push
orps
movsl
xlat
int
add
rorl
fsubr
nop
or
cli
fsub
push
jecxz
outsl
insb
jmp
xor
push
out
out
or
mov
inc
test
adc
loopne
adc
insb
int
pop
xchg
jmp
hlt
aad
inc
mov
or
dec
jecxz
int
xor
jle
push
outsb
cltd
mov
mov
sbb
mov
sbb
mov
push
xchg
push
push
push
pop
push
dec
jl
mov
fistpl
lret
aaa
call
xor
mov
pop
fcoms
out
stos
mov
mov
data16
xchg
adc
sub
out
ljmp
fsubrl
xchg
ljmp
pop
sahf
mov
imul
adcl
mov
xchg
lret
mov
fs
xlat
adc
adc
lret
sti
cmp
outsl
and
rorl
xorb
push
fmul
cmpsb
sarb
out
mov
lods
shll
icebp
and
add
arpl
sbbb
jecxz
pop
rorb
loopne
xor
pop
cmp
jl
pop
jbe
and
mov
inc
cltd
cmp
xor
adc
sti
or
ret
pop
imul
pop
push
sbb
roll
inc
xor
push
out
adc
xchg
and
stos
dec
sbb
jl
call
mov
or
sbb
testl
bound
mov
mov
jae
xor
popa
adc
pop
popa
in
sti
sub
inc
push
pop
and
out
xchg
sub
cmpsb
leave
clc
cmp
sti
mov
leave
inc
psubq
xor
jecxz
outsl
adc
add
in
and
rol
loope
dec
nop
cmpsb
mov
iret
xor
lcall
sub
test
loope
ja
cmp
jnp
mov
bound
xor
push
push
pushf
jle
or
push
in
add
jns
lods
push
xor
test
push
mov
cmpsb
pushf
bound
jl
lret
push
or
and
pop
loope
pop
and
rol
pop
and
lahf
scas
sub
jl
lret
adc
test
imul
movl
aad
adc
dec
mov
or
lods
test
loopne
pop
ret
add
ret
inc
or
pop
jecxz
jg
sub
ret
fildll
cmpsb
dec
pop
jmp
shrb
sub
cmpb
pop
imul
or
jne
fidivrs
sbb
sub
aam
fisttpll
adc
mov
inc
int
mov
mov
jnp
in
fistps
cltd
or
les
out
adc
adc
jl
mov
dec
mov
sti
nop
mov
push
add
sbb
sbb
mov
inc
xor
outsl
or
sbb
push
adcb
fcmovne
inc
clc
aad
and
scas
dec
xchg
dec
mov
jb
mov
push
loop
aas
mov
lods
iret
dec
fsubrs
rcll
arpl
sbb
int
cmc
and
add
dec
inc
imull
jno
sub
add
cmp
nop
in
xchg
sahf
xchg
pop
lods
xlat
fnstcw
push
je
or
shrb
push
pop
jns
xchg
and
adc
jne
in
dec
dec
jp
xor
xor
pushf
roll
cltd
or
adc
scas
aaa
xchg
cs
inc
mov
jae
mov
xor
int
adc
pop
stos
stos
cmp
jmp
loope
ret
cmp
pop
cmp
adc
fldl
mov
loope
lret
jnp
into
push
shll
xchg
dec
push
aaa
fnstcw
push
cltd
and
hlt
out
jle
in
mov
das
sub
pop
adc
xor
and
xor
loope
imul
rorb
xor
fidivl
adc
aaa
jp
inc
fwait
movsb
ljmp
cmpsl
jecxz
or
sbb
test
jg
inc
mov
test
push
adc
das
rcr
xor
pushf
pop
rcr
mov
fldcw
int3
mov
fnsave
xor
stc
jmp
les
pop
sub
mov
mov
xor
loope
sbb
loope
lds
pop
movsl
aas
jae
insl
int3
rcll
sbb
cmp
movsb
push
jmp
cmp
push
mov
sub
jmp
jns
cmpb
aam
adc
loopne
sub
pop
int
push
add
cmp
sahf
dec
xchg
add
sub
pop
jne
shl
push
cmp
adc
push
lret
lea
test
push
mov
pop
xchg
cwtl
sti
mov
add
jmp
notl
fcoms
cltd
hlt
repz
xchg
jb
cmp
push
sbb
mov
xchg
sbb
lea
pop
adc
repz
jmp
cmp
gs
int
and
mov
push
ja
push
inc
mov
or
cmp
iret
push
jp
and
cmp
or
sub
stos
xchg
xchg
popa
sbb
sub
lods
xchg
hlt
test
push
clc
push
dec
outsb
arpl
orb
mov
lahf
sub
xchg
sub
xor
loopne
sbb
addr16
fnstcw
das
inc
push
imul
mov
hlt
rol
xchg
call
cmp
filds
addr16
andb
ret
popa
jb
out
movsb
xchg
xor
gs
dec
jo
add
add
pop
dec
pop
loop
xor
jbe
sbb
bound
and
mov
pusha
pop
xor
cmpsl
sub
jecxz
mov
daa
lret
mov
push
hlt
adc
out
jno
add
xchg
addl
stos
rcll
loop
xor
adc
cs
movsl
pop
shrb
das
ret
mov
xchg
and
mov
mov
mov
push
xchg
jecxz
or
jg
mov
ds
push
arpl
push
pop
dec
mov
jne
sbb
out
jb
fwait
ret
insb
mov
adc
mov
aaa
cli
out
outsl
nop
or
sarb
cmp
fisttps
adcb
mov
call
mov
ss
xchg
cld
lods
inc
cwtl
repz
mov
sbb
es
shll
sbb
pop
divb
aas
fdivrl
bound
dec
mov
add
or
icebp
mov
xchg
push
repnz
pop
xchg
inc
fistl
nop
pop
push
sub
sbb
loopne
adc
shlb
cmpsb
jbe
xchg
leave
inc
imul
xor
inc
ljmp
sbbl
push
add
xchg
int
bound
mov
lods
ljmp
pop
les
xor
cmp
aaa
adc
outsl
pop
inc
jns
bound
push
movsl
int3
adc
pop
xchg
push
pop
sbb
cmp
aaa
xor
add
push
mov
mov
push
fisubs
insl
push
inc
push
jmp
mov
test
es
in
sbb
dec
dec
xchg
stos
pop
and
mov
out
adc
add
mov
clc
rcll
faddl
inc
push
push
push
popf
mov
rcll
dec
leave
or
iret
jnp
mov
or
mov
mov
xchg
xchg
leave
clc
push
test
aas
pop
pop
xchg
mov
fsubrl
xchg
sub
jge
ds
sbb
and
mov
in
int3
push
adc
xorb
jbe
mov
or
jge
data16
push
xor
nop
push
in
mov
out
push
ficoml
popa
adc
int
xlat
addr16
movsb
xor
dec
loopne
push
cmp
adc
fists
sbb
pop
lret
daa
dec
daa
mov
rol
mov
ja
lcall
pop
inc
jne
xor
pop
aam
cmpsl
pop
daa
lret
mov
inc
and
sarb
pcmpgtw
mov
mov
mov
mul
sbb
and
push
or
pop
add
pop
cmp
push
xor
pop
loop
bound
stos
pop
push
enter
sub
xchg
or
fstl
add
push
and
dec
leave
jmp
cmpsl
int3
push
sbb
push
or
cmp
jg
mov
into
push
imul
dec
cmp
lds
into
sbb
mov
cmp
in
or
adc
fs
xor
xchg
fdivr
add
push
fwait
inc
icebp
lods
mov
cmc
mov
fisttpl
insl
loopne
mov
mov
mov
push
cmp
into
lret
dec
pop
mov
mov
cmp
out
push
push
or
push
negb
scas
or
in
pusha
iret
testl
stos
mov
jns
push
cltd
lods
into
cmp
push
adc
jb
jp
or
push
leave
ret
arpl
jb
push
out
push
cmpsb
daa
mov
sbb
pop
ret
push
pop
insl
jl
cli
mov
mov
or
lret
insb
jl
mov
mov
loopne,pn
cmpsl
repz
inc
adc
fnsave
xor
scas
and
push
push
inc
stos
shll
in
push
sub
mov
fmuls
inc
push
lcall
shlb
and
fisubrs
outsl
pop
loope
shrb
cmpsb
mov
cmp
fcoml
loope
icebp
jle
lcall
aam
pop
popa
jne
pop
lock
clc
cmpsb
xchg
mov
in
les
push
mov
xchg
cmp
js
or
in
ret
inc
repz
loope
sub
mov
fmull
jno
outsb
jb
jo
pop
pop
comiss
insb
push
cmp
mov
xor
dec
pop
pop
jnp
and
adc
cmp
xor
fxch
sub
jnp
mov
pop
icebp
add
incb
sub
and
push
mov
pop
push
sbb
ds
xchg
in
sarb
xor
mov
dec
sahf
inc
sub
mov
cmp
push
jbe
test
push
out
hlt
das
inc
call
popf
jmp
jne
mov
push
aas
js
je
ret
into
sbb
lds
or
inc
cld
push
jecxz
stos
dec
sub
repz
es
jmp
xchg
outsl
and
mov
lock
push
xchg
sbb
aas
aam
test
dec
in
call
adc
dec
push
mov
nop
repnz
mov
scas
pop
pop
jo
cmp
pop
sbb
into
cwtl
mov
outsl
jns
or
or
sub
mov
and
inc
push
fnstenv
xor
cwtl
dec
xchg
or
jno
addr16
add
adc
cmp
xchg
cmovno
cs
push
sub
test
int3
test
jmp
sbb
dec
push
push
add
jne
push
mov
jecxz
ret
hlt
sbb
pop
pop
jp
push
mov
jnp
cmpsb
add
pop
loop
push
and
or
cmp
mov
fsub
test
shl
inc
dec
nop
cmp
cs
push
mov
xor
push
pop
lcall
push
clc
jmp
push
lea
lahf
mov
insl
ss
ljmp
popf
add
adc
push
das
dec
test
jno
dec
push
or
cmp
jbe
jp
aad
jb
push
xchg
pop
add
sub
pop
into
push
cmp
jae
divb
mov
int
xchg
aaa
fimull
clc
hlt
dec
push
iret
cmp
push
pop
dec
insl
push
xchg
or
rcrl
pop
sbb
dec
pop
shlb
dec
mul
add
into
pop
lods
mov
jmp
test
pop
xchg
shll
jle
dec
push
mov
mov
mov
imul
iret
mov
xor
mov
lock
test
insl
pop
fs
pusha
xchg
test
xchg
cld
fstl
repz
fdivrs
xchg
dec
les
mov
mov
lock
nop
mov
push
shrl
push
adc
xchg
push
cmp
lock
or
into
inc
enter
clc
adc
in
pop
pop
sbb
add
jmp
xor
pop
loope
xor
xor
inc
lret
jg
cmpsl
mov
or
sub
pop
jns
mov
call
stos
adc
fwait
jnp
cltd
jmp
push
jns
or
ficoms
inc
cmp
sub
mov
fists
sub
mov
inc
mov
pop
sbb
xchg
add
push
adcb
mov
pop
push
jo
mov
adc
enter
movsl
pop
and
adc
sahf
xor
loope
pop
popa
push
or
sub
cltd
mov
mov
aas
mov
insb
ljmp
pop
fists
shl
scas
mov
mov
push
dec
xor
inc
mov
shll
addr16
mov
lcall
clc
cmp
push
sbb
push
adc
sub
pop
xor
outsb
rcrb
addr16
sbb
lea
or
jmp
jne
or
jae
daa
sbb
lods
insl
push
xor
inc
rcrb
iret
xor
push
mov
lock
adc
test
xor
inc
jne
dec
scas
push
ja
dec
ss
or
adc
cmp
repz
rcrb
or
addr16
in
xchg
jb
push
jae
loop
dec
lcall
mov
mov
cmp
jbe
or
ljmp
xchg
dec
mov
xor
repnz
inc
adc
push
mov
sti
pop
nop
pop
ljmp
int
cmp
fldenv
xchg
leave
cmp
out
push
sbb
push
sbb
icebp
mov
fnstenv
lock
jge
lods
push
sbb
mov
dec
fstpl
negl
insl
and
inc
push
add
or
test
popf
outsl
pop
and
movsb
mov
sbb
test
loop
push
xor
push
stos
repz
lret
addr16
andl
pop
mov
mov
addr16
lcall
or
mov
shll
xchg
push
push
adc
inc
mov
outsb
push
test
xor
xor
sub
and
dec
push
push
movsl
das
dec
in
shrb
sbb
xchg
lods
push
sbb
mov
adc
push
push
xchg
dec
aad
shlb
dec
in
cmpsb
dec
lret
sub
pop
and
pusha
xor
dec
mov
lret
ss
mov
jecxz
es
mov
ja
jo
mov
xor
add
push
lahf
push
jbe
add
push
mov
pop
rclb
divb
or
pop
and
sub
fnsave
push
push
mov
xchg
mov
test
mov
add
or
fwait
mov
add
adc
fnstsw
sub
push
push
std
pop
push
data16
shll
mov
add
jmp
dec
mov
shll
data16
dec
push
into
jne
or
out
sub
cmp
decl
adcb
cmp
ficompl
daa
arpl
cmp
sbb
jae
popa
ss
xlat
cli
and
inc
cmp
cmpsb
rcrl
into
inc
addr16
mulb
mov
push
les
push
cmp
fcoms
out
in
fwait
stos
pop
cwtl
push
cmpsb
rcr
dec
roll
nop
push
jne
sbb
daa
scas
pop
push
xor
jns
mov
sub
popf
xlat
xchg
push
pop
jmp
addr16
cmp
cmp
jne
cmp
rcll
dec
add
hlt
repz
ret
mov
fistps
push
xchg
stc
xor
mov
fistpl
pop
or
push
lea
lds
cmp
add
movsb
push
cli
sahf
pop
push
ss
mov
push
sbb
push
in
aad
es
xchg
push
movsb
mov
cmp
leave
add
js
and
shlb
cmp
sub
jno
push
cmp
sub
sbb
sub
in
xlat
dec
mov
orb
pushf
dec
jle
mov
jae
sbb
cmp
insl
shlb
rcrl
push
dec
sbb
call
mov
mov
lcall
movb
jns
push
adc
xrelease
push
out
rol
iret
mov
push
push
push
push
mov
cmpsl
loope
jecxz
mov
mov
aaa
fdivl
sub
loopne
outsb
or
mov
mov
mov
add
push
cld
mov
jne
adc
les
jmp
xchg
outsl
loopne
cs
mov
inc
faddp
pop
push
xchg
cmp
push
movl
inc
rcrb
call
pushf
push
mov
and
adc
bound
inc
and
out
fimuls
inc
movsb
or
pop
mov
insl
insb
pushf
pop
sbb
dec
mov
push
loop
adc
jge
cmp
inc
sub
push
dec
addb
stos
ss
test
mov
sbbl
out
hlt
bound
inc
sarb
xlat
mov
pop
out
ds
pop
lcall
stos
or
push
dec
add
mov
add
lods
inc
xchg
xchg
push
mov
inc
iret
call
ds
aad
clc
shl
adcb
push
in
cmc
push
and
jmp
sti
xchg
sbb
cltd
jmp
pop
std
cwtl
gs
add
push
call
jbe
loop
stos
mov
adc
xor
pop
mov
pop
pop
cmpl
sti
and
test
mov
cs
in
int3
xor
jnp
out
jg
ja
mov
adc
push
adc
push
push
cmpsl
or
jae
cwtl
push
in
stos
addr16
mov
xor
pop
repnz
stc
mov
jns
int3
int3
xlat
push
pop
pop
lret
jg
test
mov
mov
mov
fimuls
mov
add
add
cs
xor
fistps
scas
mov
dec
push
cwtl
call
or
pop
jge
jno
or
push
sti
in
cmp
out
cmc
jbe
mov
daa
push
and
fbstp
test
jmp
test
dec
add
mov
push
movsl
aas
add
xor
shl
nop
xor
jl
test
adc
push
xchg
add
cmc
mov
inc
aaa
mov
push
push
ljmp
dec
cmp
pop
flds
lock
bound
repnz
ss
pop
arpl
mov
jbe
push
pop
arpl
test
mov
fisttpl
mov
lahf
imull
lods
push
adc
popf
sarl
cld
loope
test
mov
push
xor
jl
adc
fiadds
sub
sbb
lods
push
mov
das
imul
mov
push
das
int3
mov
push
jl
pushw
push
jb
push
shrl
and
adc
push
mov
clc
jae
push
jl
call
imul
sbb
out
lea
inc
imul
inc
nop
and
mov
fistps
xchg
shll
hlt
js
rcll
fucomi
aaa
mov
shrb
pop
outsb
test
fimuls
addr16
dec
sub
pop
decb
push
ds
jp
sbb
push
hlt
mov
pushf
nop
fdivrl
mov
mov
mov
push
pop
cli
fwait
xor
orl
push
or
inc
into
mov
daa
push
pop
pop
jnp
mov
mov
xor
push
xor
add
push
popa
xor
pop
fisttpl
mov
mov
pop
or
fdivrl
aas
out
inc
dec
mov
or
fisttps
jbe
xor
mov
clc
push
xchg
pop
lock
mov
xchg
inc
js
push
cmp
mov
call
imul
daa
les
dec
cld
push
gs
sub
sbb
ja
jp
push
outsb
repz
push
test
sbb
lahf
push
lods
adc
cmpsb
sub
push
dec
add
mov
int
push
push
mov
lret
es
cmpsl
sbb
rsm
dec
pop
xchg
cmp
inc
push
shll
or
pop
or
je
ja
call
iret
dec
sysret
mov
push
scas
xchg
jmp
cmpsl
push
data16
mov
push
stos
hlt
flds
inc
lcall
outsl
std
mov
xor
dec
or
pop
sub
cmp
les
mov
pop
stos
addr16
push
jb
aas
mov
inc
cmc
push
mov
outsl
mov
jnp
ret
das
call
jge
fiaddl
gs
inc
mov
outsl
pop
movsl
inc
scas
ds
xchg
jl
shlb
xchg
cmpsl
ljmp
aas
std
fstpl
insl
inc
in
pop
jne
pushf
adc
pop
loopne
das
jge
xor
mov
mov
jo
dec
push
mov
jcxz
or
cmp
inc
adc
push
inc
xchg
mov
testl
sbb
daa
lods
pop
push
leave
lahf
in
jp
mov
shlb
push
sbb
xor
and
lods
rcrb
push
sub
scas
int
fmul
aas
push
daa
mov
sub
jns
cltd
push
cmc
out
mov
push
pop
xchg
and
sub
ficomps
mov
mov
push
add
push
adc
cmp
mov
popa
push
lcall
jnp
sub
lds
sub
xchg
and
aad
sbb
and
jg
sub
out
xor
and
int
mov
jmp
notl
mov
pushf
inc
repz
inc
pop
stos
push
sub
call
fsubp
into
out
xchg
div
push
in
stos
adc
mov
jbe
int
xor
imul
pop
push
repnz
push
je
mov
mov
out
loop
fsts
fwait
jae
aaa
inc
sbb
xchg
sub
fistps
add
jecxz
mov
fbstp
in
test
pop
dec
rdmsr
dec
pop
mov
pop
clc
leave
ret
mov
sti
cli
xchg
and
xor
fldpi
cs
lret
push
jne
inc
cltd
iret
popa
push
inc
mov
sbb
pop
mov
test
shr
cmp
leave
icebp
push
lods
repz
or
sahf
jbe
mov
add
popf
fiadds
inc
scas
sbb
lahf
xchg
enter
push
xchg
push
and
rolb
mov
call
shll
push
xchg
out
fnstenv
push
ds
and
ja
inc
int3
sub
stos
cmp
dec
fsubs
mov
pop
cwtl
or
mov
lods
sbb
sti
in
fs
xor
pop
cmc
sbb
test
xchg
mov
adc
fldenv
inc
outsb
push
push
mov
adc
in
push
insl
sti
test
jno
pop
push
pusha
fwait
and
mov
adc
jns
out
testb
cwtl
inc
mov
push
and
aas
fmul
stos
out
pop
xchg
in
xchg
inc
push
xor
dec
lahf
call
cltd
sbb
cmp
rclb
sub
add
jp
sub
mov
sub
fdivl
out
shlb
xor
shlb
sbb
mov
mov
rcll
pop
mov
dec
fs
ja
sbb
mov
xchg
iret
xor
shlb
test
call
rcrl
push
shll
push
es
sarb
inc
dec
fsubs
xchg
pop
std
jecxz
push
push
pop
and
outsl
and
and
push
bound
daa
fsubr
loope
inc
loope
pop
inc
popf
cld
pop
lahf
xor
xor
sarb
mov
and
cmp
test
mov
gs
test
lods
pop
mov
loope
testb
pop
or
fadd
fistpll
outsl
test
inc
cmp
bound
les
and
pop
fldl2e
lret
mov
rcll
rcl
imul
test
addb
lret
loope
push
and
in
xor
imul
scas
popa
xchg
fwait
imul
xor
xlat
push
cltd
scas
cmp
clc
mov
fstpl
push
sbb
mov
outsl
push
loope
arpl
pop
stc
xchg
dec
cmp
ret
pushf
dec
sub
cltd
ss
fmul
out
scas
hlt
jg
or
test
pop
stos
dec
add
leave
adc
mov
dec
sahf
hlt
push
cmc
lds
aaa
inc
lcall
mov
dec
jecxz
and
inc
xchg
test
mov
pop
sbb
stc
arpl
lods
mov
jbe
push
mov
enter
jnp
jno
add
imul
xchg
sbb
std
popf
pop
rol
cmpb
arpl
fdivl
mov
dec
ret
xor
adc
push
pushf
adcl
in
mov
loope
loopne
pop
mov
fstps
pusha
rclb
dec
ret
arpl
lock
push
push
js
xchg
xchg
sbb
pop
dec
sbbb
test
daa
bound
js
mov
addl
push
push
pop
jns
pop
shrb
or
push
mov
push
scas
inc
in
addr16
mov
add
push
ret
push
imull
lahf
testb
push
push
sub
inc
fistl
pushf
push
xor
push
sub
inc
outsl
movsl
hlt
fadds
push
mov
push
xchg
cmp
push
outsl
mov
ss
mov
pusha
dec
lret
jp
add
mov
mov
or
es
pop
adc
inc
or
adc
xchg
push
ret
fildl
call
setl
pop
push
sti
push
push
xchg
inc
inc
cmp
clc
rol
mov
or
push
adc
and
adc
es
cmc
adc
pop
push
mov
xchg
sub
out
mov
push
test
and
push
pop
or
push
hlt
lock
mov
les
rclb
fidivrs
mov
pop
mov
pop
fistpl
jne
adc
mov
fdivrs
add
cmp
push
push
sbbl
movsl
cwtl
imul
pop
mov
ljmp
sbb
dec
imul
sahf
stc
test
xchg
push
dec
js
dec
rcrl
cmp
push
loopne
les
es
or
out
mov
pusha
push
lret
mov
pop
cs
inc
or
sub
movsl
pop
dec
clc
lret
or
popf
sbb
pop
ds
xchg
mov
adc
shll
out
fwait
cs
and
sub
movsl
addr16
cltd
je
adc
xchg
push
cmpsb
aas
cs
shlb
stos
xchg
jnp
mov
lods
mov
pop
popa
mov
in
mov
push
fwait
sbb
aas
movsb
pop
jmp
jle
sahf
inc
stos
push
adcb
pop
mov
mov
pop
es
and
xchg
jp
jecxz
cld
add
stc
mov
ja
sub
xor
ds
pop
mov
sbb
in
jecxz
push
or
icebp
xchg
pop
mov
cld
lods
sub
pop
daa
jo
xchg
loopne
push
repz
movsl
lock
cmp
scas
xor
adc
fbld
je
in
loop
rcrl
push
xchg
decl
pop
or
mov
jmp
and
pop
loope
mov
rcrb
jns
popf
outsb
push
add
push
pop
hlt
out
daa
les
cld
pop
jg
fmuls
push
jbe
and
fcom
std
mov
and
pop
or
xchg
push
test
inc
cltd
fdivrp
loope
cmpsl
loope
inc
push
incb
push
inc
fst
push
xchg
push
push
dec
std
out
or
and
imulb
shrb
mov
inc
pop
test
mov
scas
pop
into
data16
mov
sub
push
popf
mov
sub
jmp
xchg
jae
inc
loop
adc
inc
push
imul
mov
daa
mov
pushf
pop
shrb
mov
pop
cmpsb
and
sbb
dec
push
mov
push
sahf
adc
test
sbb
das
pop
mov
push
icebp
mov
push
into
mov
std
cmp
push
pop
push
mov
jb
fidivrl
lahf
into
jae
sarl
adc
test
or
xchg
out
jl
mov
mov
cs
addr16
popf
leave
out
jae
pop
in
xor
int3
mov
or
inc
push
mov
mov
ja
imul
xchg
arpl
add
mov
ror
pop
ficoms
sub
pop
fdiv
lods
mov
ffree
xor
dec
pop
and
outsb
test
mov
mov
fwait
jle
dec
add
daa
push
cmpsb
std
test
popa
pop
jne
push
jbe
mov
aaa
push
xchg
out
inc
test
rcll
mov
test
or
rep
dec
sbb
les
lcall
pop
clc
fsubrl
cli
mov
push
insb
pop
xchg
pusha
mov
or
sbb
add
pop
jbe
outsl
sub
push
inc
jg
push
cmpsl
rcrb
pop
shrl
fs
pop
out
pop
jae
test
ds
cltd
sub
addr16
icebp
sbb
push
jo
cmp
xchg
add
mov
sbb
lods
pop
mov
push
insb
addr16
js
scas
adc
dec
mov
push
lcall
cmc
or
rclb
push
jle
push
jg
popf
and
ficoml
sub
push
adc
loope
xor
mov
mov
push
cmp
sar
mov
dec
ds
cmc
inc
mov
push
aaa
rol
jle
xor
push
sub
push
outsb
test
and
ja
sbb
pop
dec
xchg
inc
pop
repnz
mov
cs
push
mov
mov
ja
sub
push
fst
xchg
test
and
pop
xor
push
lret
and
cmp
dec
outsl
xor
jmp
pop
push
push
or
dec
int
xchg
push
pop
push
pushf
jae
rcrb
ds
cmpsb
push
mul
stc
pop
inc
shrl
fs
dec
sub
add
xor
adc
or
jecxz
fcomps
imul
jno
mov
xchg
cwtl
mov
xchg
mov
mov
or
dec
push
push
jb
hlt
sbb
jl
push
and
out
lds
xor
push
cld
xchg
or
jecxz
pop
in
out
fdivl
push
inc
sub
push
popf
es
inc
xchg
inc
mov
lds
mov
dec
push
or
sub
ja
outsb
pushw
test
lods
insb
je
in
and
daa
adc
outsl
addr16
add
addr16
jle
jmp
mov
sub
inc
xchg
cmp
sbbl
fidivs
daa
fnstenv
iret
inc
mov
int3
pop
in
push
in
cwtl
test
pop
push
stos
arpl
push
aaa
aam
loope
ret
lods
adc
out
mov
pop
mov
mov
roll
lea
pop
inc
aad
mov
push
cmp
imul
cli
scas
pop
fisubs
loope
push
pop
orb
cmpsb
and
clc
push
mov
or
mov
add
mov
cmp
pop
test
cmp
jge
xor
loope
xchg
cmp
jl
jae
out
pushf
fsts
inc
decl
iret
std
push
outsl
shrl
add
cmp
adc
add
ficoms
mov
shll
lea
pop
imul
push
mov
xlat
js
mov
xor
pop
inc
fisttpll
mov
pop
arpl
cmp
ja
lret
out
push
push
xchg
jb
mov
pop
push
lods
cmp
movsl
aaa
sub
popa
nop
in
dec
sbb
pop
repnz
pop
addr16
xchg
dec
mov
jge
nop
push
lods
xchg
into
and
mov
pop
or
addr16
je
enter
adc
clc
iret
and
xchg
push
stc
and
and
icebp
mov
insb
push
fdivs
aaa
push
insl
cli
sub
jns
push
lds
mov
cmpsl
xchg
or
jnp
andb
inc
sub
ja
in
imul
or
shlb
negl
movl
dec
or
xchg
fistpl
daa
sbb
sub
or
xchg
push
cmpb
mov
mov
jnp
pop
lcall
pmovmskb
push
cmp
sub
fldenv
pop
sbb
lret
rclb
mov
push
mov
leave
xchg
test
cmpb
dec
and
pop
fidivl
dec
pop
xchg
push
push
aad
ljmp
clc
sub
mov
cmpsb
cmp
lods
push
xchg
ret
gs
fcoms
xchg
out
cli
out
mov
cwtl
enter
jg
cli
aam
push
push
sub
cmp
ret
sbb
popa
xchg
push
jno
je
loopne
jne
push
inc
jmp
ljmp
jns
xor
mov
cmpsl
cmc
push
mov
sahf
outsb
repnz
das
push
add
mov
divb
push
into
nop
push
lret
inc
sahf
jmp
lret
inc
lea
scas
jbe
icebp
sub
cmp
cmp
xlat
cmp
decb
push
stos
pop
test
jnp
jbe
or
push
fldl
sti
mov
leave
xor
xchg
xorps
clc
pause
in
or
dec
xchg
pop
leave
fists
mov
adc
gs
sub
lods
push
jne
or
or
lods
pop
mov
adc
aaa
lret
push
push
xchg
and
adc
push
jae
mov
pushf
xchg
push
mov
aas
pop
sahf
mov
sbb
mov
mov
negb
fists
lds
mov
inc
xchg
test
fucom
scas
dec
push
fbstp
stos
movsb
dec
mov
xchg
out
test
pop
push
xchg
inc
pop
loope
mov
sub
rcrb
pop
xlat
ljmp
mov
jmp
jmp
mov
sbb
pushf
cmp
mov
into
jecxz
add
pop
push
dec
dec
es
ja
jo
mov
sbb
icebp
inc
jno
push
aas
lock
adc
xchg
out
pop
testl
loope
pop
cmp
or
cmp
dec
or
sbb
push
or
sub
out
fwait
sub
inc
je
jne
push
jnp
mov
lods
push
popa
push
mov
mov
icebp
push
push
das
sub
push
into
fnstenv
adcb
loope
jmp
mov
pop
cmpsl
inc
push
adc
ljmp
sbb
xchg
jo
pop
loope
sub
stos
lock
mov
pop
mov
mov
cmp
pushf
das
push
xor
dec
je
ret
inc
les
xor
mov
push
mov
adc
es
and
and
imul
mov
pusha
js
test
loop
rolb
push
inc
sarl
aaa
stos
sub
jp
testl
push
pop
test
mulb
sub
xchg
cmp
lret
push
push
leave
pop
inc
orb
ret
cmp
sti
cmp
mov
ljmp
add
das
addr16
pop
xchg
push
mov
aam
outsl
mull
into
stos
push
arpl
push
in
cwtl
cwtl
dec
pop
jae
xchg
cmp
fcompl
push
pushf
mov
jmp
icebp
test
mov
mov
push
xor
xchg
pop
pushf
add
fs
loope
popa
in
pop
xchg
in
add
loopne
or
enter
insl
ret
shrb
faddl
sahf
aam
bound
cmpsb
jnp
sbb
dec
nop
js
into
push
movsl
dec
pop
xor
and
or
fs
mov
ljmp
lret
xchg
daa
mov
cmpsl
mov
faddl
push
frstor
insl
adc
movsl
cs
pop
sbb
sarl
push
fwait
outsb
mov
lret
mov
push
jo
rclb
push
jnp
mov
dec
push
adc
call
mov
mov
push
sub
sbb
adcb
xchg
mov
pushf
call
das
cmp
sbb
insl
aad
jnp
in
xor
stos
xchg
notl
xor
xor
and
add
pop
inc
cmp
push
inc
add
lcall
pop
daa
add
push
cli
mov
sbb
mov
xor
fstpt
pop
ja
pop
jmp
push
stos
or
mov
add
aam
xor
je
aas
lcall
dec
and
push
fdivrl
ret
fldcw
xchg
out
test
stos
sbb
push
movsb
iret
mov
jp
std
sbb
xchg
xor
filds
xor
jne
mov
popf
sbb
xchg
sbb
xchg
mov
push
xchg
push
jno
aad
loope
call
inc
pop
test
lcall
rcrb
stos
push
dec
loope
cli
stc
cmp
xor
ljmp
push
add
bound
or
xchg
enter
push
sbb
and
xchg
jns
pop
mul
call
push
mov
je
shlb
push
fimuls
adc
fistl
sbb
inc
xchg
dec
mov
push
stc
pop
outsl
in
pop
xor
aad
imul
cmp
lods
lcall
bound
jnp
loop
jecxz
fistps
aaa
adc
pop
adc
mov
loope
jmp
in
call
into
pop
test
pop
fwait
test
adc
dec
cmp
int
or
ds
push
mov
stc
mov
pop
test
mov
adc
fbld
std
push
cmp
sarl
push
xor
pop
cs
arpl
adc
xchg
ret
sub
cmp
push
cmp
sbb
shl
pop
lahf
push
xchg
cmp
mov
jb
mov
inc
push
xor
arpl
fists
inc
xor
ja
lea
mov
inc
arpl
xchg
fs
xchg
mov
lods
ror
stos
jmp
push
push
mov
daa
cmp
into
lods
cmp
mov
aad
and
push
loop
xor
push
aaa
iret
pop
and
adcb
das
mov
ficomps
pop
ret
or
dec
push
int
sbb
outsb
scas
push
push
pop
xchg
aam
xchg
repnz
sub
mov
push
loop
outsl
cmp
jmp
aaa
push
mov
int3
dec
ret
xor
jg
push
inc
inc
xchg
fwait
mov
movsl
and
mov
push
out
fsubl
cmp
sbb
repz
pop
xor
pop
mov
repnz
test
pop
stc
test
je
in
pop
dec
loopne
mov
mov
hlt
stos
or
aam
push
pop
repz
mov
jnp
cwtl
xor
push
mov
pop
and
addr16
mov
push
xchg
add
adc
sub
mov
movsb
pusha
aam
lcall
dec
mov
daa
mov
adc
inc
out
add
shrl
push
cmpb
rorb
mov
aas
addr16
fsubrs
dec
jo
loopne
lcall
pusha
push
stos
movsb
inc
mov
or
pop
rcrl
pop
dec
sahf
std
push
das
push
stos
pop
sub
dec
or
dec
js
push
outsb
push
adc
cs
orl
dec
mov
jnp
sbb
lods
push
fisttps
lret
jl
repnz
dec
ret
adc
jecxz
pop
mov
mov
jne
mov
call
call
push
int
pop
leave
fcmovnbe
jne
push
mov
dec
ret
mov
rorb
enter
push
sub
fsubp
mov
bound
call
setge
faddl
leave
stos
push
outsl
loop
cwtl
aam
or
pop
push
out
push
inc
outsb
or
push
rol
sbb
push
loop
xchg
xor
jmp
xlat
ja
jo
push
sbb
test
lods
xchg
int3
add
add
imul
stc
scas
repz
sti
pop
test
addr16
or
mov
fs
adc
push
jge
push
add
movsl
loope
flds
push
and
clc
iret
lcall
arpl
fnsave
sbb
cmp
add
pop
out
imul
add
clc
out
xchg
xlat
neg
shll
mov
xchg
lds
or
subb
fists
scas
cwtl
sub
jb
out
insb
push
mov
mov
rcl
mov
xor
sub
lcall
ljmp
mov
xchg
movsl
and
dec
inc
inc
je
addr16
pop
add
into
gs
or
jno
sub
inc
test
sbb
ret
pop
aaa
cwtl
scas
daa
dec
inc
mov
lock
xor
inc
jle
or
push
lcall
int3
dec
movl
pop
jl
repz
in
xchg
aad
pop
or
cwtl
mov
pop
fsts
inc
or
roll
sub
or
loop
mov
nop
or
out
lea
push
outsb
out
jne
and
pop
mov
cmpsl
push
fcmovnu
ret
jge
shlb
ret
roll
pop
stc
fld1
rorb
mov
movsl
sahf
and
clc
out
roll
aaa
lret
push
mov
sarl
aad
loope
fiaddl
cs
sbb
jmp
subb
ljmp
adc
outsl
pop
cmpsl
cmc
adc
mov
push
ss
mov
insb
dec
aaa
bound
test
cwtl
push
daa
rcll
inc
mov
push
jmp
push
cmp
sub
jns
xchg
mov
filds
and
pop
adc
or
push
sub
fmuls
movsb
ret
repz
jg
sub
push
mov
inc
sbb
rcrl
push
clc
pop
jnp
addr16
xor
and
test
lds
subb
lcall
bound
cmp
xor
add
rcll
inc
es
inc
mov
push
lret
sti
int3
mov
push
xchg
cwtl
push
aas
stos
in
cwtl
and
pop
pop
mov
ficoml
lock
xlat
inc
aam
aam
lds
and
push
hlt
jge
dec
in
mov
push
rorl
and
movsl
popa
movsl
add
pop
cmc
xor
lock
fbstp
int3
hlt
push
repz
jl
pop
arpl
jbe
pop
or
out
push
pop
popa
jb
add
cmp
inc
loopne
int3
cmp
xchg
cmpsb
jns
dec
mov
lds
xor
push
sar
addr16
push
xor
push
mov
xchg
js
inc
imul
jecxz
dec
jg
pusha
push
jnp
push
adc
adc
ja
sub
aam
ret
std
pusha
ficoml
shlb
push
mov
push
rclb
enter
dec
mov
fistpll
scas
adc
inc
jno
push
daa
pop
xor
and
xlat
inc
leave
mov
mov
movsl
adc
ja
pop
lds
push
push
push
mov
in
es
cmc
mov
andb
push
mov
incl
aad
jbe
push
enter
or
out
push
push
lahf
jmp
jecxz
pushf
mov
out
movsb
lods
psllw
stc
pushf
pop
pop
out
ficoms
push
je
xchg
or
fwait
pop
jmp
sbb
mov
hlt
or
adc
xor
and
adc
stos
xor
js
adc
pop
fs
orl
ret
scas
clc
mov
mov
push
leave
int
pop
test
xor
pop
fwait
test
enter
mov
push
lret
scas
xlat
inc
push
shll
xor
adc
inc
push
popf
int3
pop
call
push
mov
mov
mov
push
and
in
test
jl
adc
and
outsb
jge
popa
ror
xorps
cltd
push
push
jns
sub
sbb
push
mov
sub
ret
dec
aad
mov
dec
push
jb
xor
add
out
dec
add
es
in
mov
or
fildl
mov
inc
cs
icebp
ret
xchg
int
push
adc
movsl
pushf
push
test
jecxz
add
jmp
lcall
push
out
pop
adc
cwtl
mov
arpl
add
repnz
cmp
sbb
mov
pop
movsl
xchg
adc
push
das
push
shlb
std
mov
add
pop
push
or
jo
xchg
cmp
aad
mov
inc
mov
call
jp
jno
lds
jmp
rorb
ds
xchg
test
push
mov
sbb
adcb
add
jo
addr16
cmp
out
adc
and
fdivr
xchg
inc
dec
lea
fisubrs
addr16
mov
adc
and
std
faddp
out
stos
cmp
jae
jmp
lock
les
adcl
int
repnz
mov
or
pop
out
push
push
add
hlt
push
mov
pop
and
es
lea
ljmp
pop
lret
mov
pop
test
addr16
mov
jecxz
push
mov
push
int
jns
stos
es
dec
xchg
inc
in
push
nop
jge
aas
cmp
pop
sahf
pop
sbb
movsb
xchg
inc
xchg
jne
movsl
test
sub
pop
mov
inc
stos
shrl
loopne
xchg
jo
cmp
or
xor
sbb
sub
xor
ds
das
movsb
jbe
and
mov
shr
or
pop
dec
sub
mov
dec
lods
imul
push
mov
mov
insl
addr16
inc
xchg
pop
jbe
sub
xchg
bound
adc
shlb
icebp
out
pop
pop
ljmp
push
loope
cmpsl
xor
mov
pop
lret
fs
push
cwtl
mov
mov
push
clc
out
adc
test
mov
pop
jb
icebp
pop
cmpsb
push
mov
fwait
ret
mov
mov
lea
pop
aaa
mov
mov
lods
insb
add
mov
in
addr16
ret
pop
adc
push
shl
xchg
inc
inc
sahf
lret
inc
fistl
fiaddl
pop
mov
mov
shll
pop
xchg
rclb
dec
jge
and
stos
addr16
out
or
push
inc
xchg
cmovg
sub
sub
sub
cwtl
test
lods
cmpsb
lret
ja
pop
int
cwtl
movsl
pop
es
pop
cmc
dec
lcall
or
sbb
insb
push
mov
jle
push
inc
fisubs
jae
mov
mov
movsl
mov
lods
push
pop
cmc
jne
push
clc
xchg
int
ds
mov
and
adc
dec
mov
xchg
mov
daa
out
dec
mov
adcl
aaa
xchg
push
loopne
ss
ds
fdivrp
push
js
push
sbb
push
and
sbb
adc
adc
bound
repnz
inc
sarb
in
cltd
nop
sbb
popf
insb
jmp
sarb
jl
dec
aad
push
cmp
imul
inc
sbb
iret
cmp
or
outsl
mov
jnp
push
ss
lahf
xchg
add
hlt
sbb
jne
adc
or
pop
lret
mov
mov
push
cwtl
scas
je
dec
push
addr16
dec
jle
fucom
push
jne
cs
adc
adc
sub
ja
jb
repz
xlat
adcb
push
push
or
fstps
in
push
sub
test
insb
addr16
aas
fisttpl
stos
jl
mov
imul
xchg
pop
loope
xor
ds
dec
cltd
and
negl
push
add
and
xchg
mov
pop
pushf
xchg
into
cwtl
xchg
shll
mov
pop
and
adc
dec
mov
pop
inc
push
adc
xor
mov
cmp
and
dec
adc
or
in
sti
push
js
mov
mov
cli
mov
cmpsl
pop
scas
sbb
loope
loop
add
jae
out
push
pop
and
repnz
push
xchg
push
jp
test
das
pop
mov
outsl
ja
push
std
jg
mov
push
adc
dec
mov
xchg
loope
mov
push
jne
fldt
std
push
and
test
xor
aad
push
and
insl
mov
popa
xchg
fisubl
or
jl
push
or
inc
fsubl
xchg
flds
ja
aaa
inc
pop
in
inc
ss
or
jno
or
out
dec
test
pop
daa
sub
add
mov
testb
aam
fistpll
jle
mov
das
lcall
shll
inc
inc
and
push
pop
add
pop
push
clc
js
ret
mov
xchg
inc
fnstenv
adc
pop
fs
mov
or
loop
adc
loope
mov
movl
mov
jns
test
js
xor
mov
xchg
iret
lret
movsb
cli
rclb
ss
setns
adc
mov
std
ds
aad
pushf
mov
jno
add
into
movsl
or
test
add
xlat
jp
fsts
cltd
sub
es
stos
js
xor
mov
daa
icebp
clc
pop
cmp
test
mov
pop
loope
clc
jb
lret
pop
push
loope
xchg
jmp
shll
ja
push
stc
cmp
inc
js
add
lods
xor
scas
mov
and
pop
xor
movsl
in
push
inc
adc
push
subb
fisubs
sahf
enter
cmp
jnp
dec
shlb
xlat
jae
adc
rcl
notl
mov
out
lods
loope
inc
insb
icebp
cmp
adc
jb
inc
scas
or
movsl
sbb
and
push
pop
push
adc
lsl
ret
imul
adc
pop
fnstenv
pop
sbb
or
inc
push
sub
sbb
pop
insb
jb
push
iret
push
in
jb
push
scas
xchg
mov
cmc
cmovne
pop
subb
pop
aad
xchg
mov
addb
fnsave
lret
push
pop
loopne
mov
sbbl
jle
jg
or
sub
push
mov
push
pop
push
xchg
addl
cmpsl
lds
insl
pop
out
or
push
pop
jbe
xchg
mov
and
jnp
push
adc
or
push
loope
lds
ficoms
repz
pop
js
cmpsb
pusha
push
outsl
jle
inc
push
or
lea
icebp
in
adc
je
or
outsl
inc
fimuls
sahf
sub
xor
mov
and
aam
cwtl
pop
scas
sbb
push
mov
aad
inc
in
lcall
divl
js
dec
add
inc
fmull
js
mov
je
inc
mov
mov
inc
rcrl
bound
ja
mov
dec
inc
mov
jmp
lahf
test
repz
lahf
aad
sbb
imul
scas
and
or
test
or
imul
xchg
push
subb
loope
scas
mov
int
adc
mov
jae
pop
test
insl
movsl
pop
push
es
out
out
push
popa
test
outsl
add
pop
xchg
sub
mov
pop
add
lret
or
mov
stos
std
inc
rcrl
push
xor
cmp
movl
lds
xchg
outsl
test
lods
mul
add
fcmovnu
ret
aaa
hlt
gs
inc
fsubs
and
pop
in
movsb
rcr
adc
mov
inc
test
cld
jg
imul
stos
je
lock
aas
les
cld
mov
faddp
inc
std
subl
lret
pop
lcall
aam
test
fsts
and
rcr
cmp
adc
mov
cs
sub
movsl
add
lret
testl
jnp
mov
or
sbb
dec
or
add
shrb
push
add
xchg
loope
lds
jecxz
fwait
xor
testb
add
sbb
bound
scas
mov
fmulp
ss
pop
inc
int
dec
inc
popa
inc
cmc
sbb
xlat
or
ja
into
fdivrp
loope
xor
pop
xor
push
cmp
mov
xor
jbe
add
ljmp
fsts
push
lods
pop
sub
mov
je
adc
xor
adc
jge
into
test
jne
fisubrs
inc
xor
sarb
sbb
mov
mov
shrl
lds
ret
icebp
add
mov
or
sbb
pop
in
mov
gs
fisubrl
inc
in
xor
jns
sarl
bound
xchg
test
cwtl
dec
push
pushf
movsl
mov
inc
and
dec
mov
data16
loopne
pop
mov
jne
inc
sub
ret
mov
ja
leave
imul
jp
popl
push
sub
jae
mov
mov
aaa
out
rorl
int
xor
pop
test
fldl
push
mov
xchg
sarl
cs
pop
test
int3
lock
pop
adc
call
cmp
aaa
and
test
mov
movsb
aaa
lods
push
cmp
inc
and
or
push
mov
jmp
or
outsb
pop
add
inc
jge,pt
pop
lods
insl
and
dec
mov
jno
push
mov
push
pop
test
xchg
pop
push
cmp
fstp
push
aad
or
pop
push
lret
dec
mov
lss
jns
push
mov
sbb
dec
pop
fmull
mov
xchg
xchg
push
mov
mov
insb
add
inc
push
stos
ds
push
push
mov
mov
aaa
adc
test
adc
xchg
push
mov
add
mov
outsb
popa
push
mov
jle
pop
cld
push
aad
sub
jne
mov
addr16
or
xor
lret
mov
aad
push
xor
pop
or
mov
inc
std
cmp
push
jns
jne
call
and
int3
pop
sbb
rcrb
jl
outsl
mov
jle
mov
fdivp
mov
jmp
sub
loop
jno
sub
adc
mov
imul
rorb
and
arpl
inc
stos
lods
jno
das
add
fstl
ja
call
pop
imul
xlat
jne
pop
pushf
fs
in
mov
inc
push
movsb
push
scas
and
rclb
add
lods
push
dec
push
arpl
sbb
insl
mov
imul
ja
addr16
out
jns
loop
or
push
mov
cltd
xor
xor
push
dec
lds
sbb
pop
test
negl
push
pop
insl
pusha
cmp
push
lods
aaa
movsl
test
push
xlat
add
call
sbb
inc
dec
test
and
iret
cmpsb
daa
insl
mov
mov
push
lahf
inc
ret
push
push
sti
cmp
cmp
cmp
repnz
out
mov
mov
mov
push
cmp
push
sbb
adc
jb
push
dec
in
iret
stc
push
out
addb
mov
push
push
outsl
pop
rclb
outsb
shrb
inc
jmp
addr16
push
add
es
mov
shll
in
sub
xchg
pop
rorb
pop
pop
mov
push
lods
cld
movsl
jl
pop
fdivrs
addr16
cmc
scas
cmp
in
roll
shlb
std
xchg
ret
xchg
inc
repnz
jl
push
sbb
mov
rcrb
ljmp
lcall
push
xchg
adc
sti
push
and
mov
dec
out
shrl
mov
push
stos
add
jge
xor
ss
stos
insb
pop
and
mov
addl
dec
mov
inc
push
xlat
sbb
push
mov
ret
cmp
and
jo
push
test
stos
push
push
cmp
movsb
rclb
test
std
push
lods
mov
jp
pop
push
push
imul
push
mov
daa
scas
daa
psubusw
stc
xchg
push
std
mov
push
adc
xor
ficoml
fimuls
cltd
adc
push
mov
cmpsl
push
cmpsb
inc
cmp
mov
mov
clc
sub
xchg
push
push
jg
dec
sub
sbb
or
addr16
pop
mov
pop
lods
stos
ficompl
push
icebp
cmp
xchg
cmp
jo
push
jne
push
dec
pop
cmp
call
fcomi
pop
sarb
scas
dec
push
mov
xchg
fwait
push
sbb
jne
dec
inc
fs
push
push
xchg
inc
aas
mov
daa
dec
mov
inc
pusha
scas
cmp
mov
pop
movsl
cmp
loopne
movsb
rcrl
pop
dec
les
cmp
shrl
push
test
iret
sbb
dec
or
dec
lret
loop
xor
sub
ss
or
xor
mov
push
sub
add
push
adc
mov
lahf
stos
sbb
clc
sbb
fdivrs
push
rcrb
and
pop
xchg
int
push
or
lds
add
adc
test
movb
xchg
rcrl
xchg
lods
orl
movsl
int3
cld
mov
cld
fs
mov
adc
push
movsb
filds
pop
je
mov
inc
mov
add
insb
jmp
push
xchg
cmp
mov
out
pop
jno
lods
fdivrl
dec
addr16
sbb
fwait
lret
pop
inc
cmp
cs
nop
mov
lret
dec
mov
jb
addr16
sub
movsb
mov
or
cltd
shll
out
stos
adc
lea
sbb
cmp
sbb
sbb
pop
sbb
loope
cltd
or
rcl
xor
inc
add
lods
sbb
loope
rclb
fwait
xor
out
jecxz
jbe
adc
jbe
adc
rcll
shll
xchg
pop
xor
sbb
in
mov
loope
rcll
pinsrw
cmpsl
pop
into
subl
add
push
mov
adc
push
lods
mov
add
iret
xor
or
push
dec
sub
push
lods
lock
sbb
jnp
and
cwtl
aas
ret
xchg
inc
push
loope
stos
cwtl
push
icebp
inc
fcomi
in
pop
push
dec
jbe
loope
and
xor
imul
jp
lcall
iret
pop
repz
out
movsl
stc
pop
mov
bnd
cwtl
pop
sbb
push
pop
cmc
loopne
iret
ftst
inc
out
nop
fcoml
cwtl
call
ret
pop
xchg
and
outsl
sub
jb
divl
lret
pop
jno
and
std
pop
push
fldenv
sub
hlt
xor
jecxz
or
push
pop
jae
movsl
push
xor
mov
sarl
adc
cld
or
sarl
sbb
xchg
aas
loop
add
xor
and
loope
call
sar
data16
nop
cli
fcompl
mov
adc
mov
nop
shll
mov
repz
ficompl
lahf
fcoml
cmp
stos
ret
mov
sahf
xchg
stos
lret
scas
xchg
aad
fnstsw
loop
not
dec
sub
xchg
pop
fbstp
inc
or
or
push
or
pop
mov
xlat
jcxz
mov
addr16
or
xlat
or
push
js
xchg
mov
and
push
fcmovnbe
adc
pop
xchg
out
add
sub
std
add
mov
arpl
fwait
inc
loop
adc
cld
test
lea
sub
push
das
filds
pop
push
popf
sbb
cli
rcrb
inc
inc
fstps
add
xor
sub
mov
cmp
test
adc
inc
pop
mov
mov
mov
in
ds
dec
fstps
out
dec
out
in
and
div
dec
int3
iret
or
rorl
cmp
es
ret
out
push
cmp
mov
orb
push
fnstcw
les
xor
fwait
jle
lds
aam
lods
pop
add
push
dec
daa
push
icebp
mov
imul
jns
jmp
mov
push
mov
shrb
mov
mov
in
mov
push
jmp
jecxz
dec
jno
xchg
and
pop
push
cmpsb
push
jo
mov
movsl
xchg
int3
fsubl
lds
fidivrs
insl
sub
push
arpl
jno
lahf
push
out
aam
int3
rcrl
and
mov
mov
cmp
lret
jl
movb
sbb
call
push
cmp
xchg
aas
ret
xor
out
push
push
test
mov
mov
push
sahf
sub
pop
or
mov
lcall
aas
fistl
jl
or
push
ficoml
aaa
xchg
jno
inc
mov
push
test
mov
movsb
mov
gs
addb
mov
jnp
pushf
mov
sub
call
fwait
imul
jns
xor
add
pop
arpl
stc
mov
cmp
push
cwtl
jns
inc
pop
loope
addr16
xchg
push
or
add
std
aaa
pop
ret
push
in
pop
mov
inc
pop
jne
cli
cwtl
push
mul
repz
popa
adc
and
sub
inc
jg
jo
push
push
mov
aam
adcl
inc
pop
out
mov
push
cmp
xchg
adc
push
pusha
sub
adc
push
outsb
dec
cltd
out
hlt
mov
movsl
fnstsw
push
or
push
sbb
inc
clc
lock
inc
cmc
push
dec
dec
fistps
and
repnz
and
aaa
push
fucomp
push
sti
test
fwait
mov
cmp
ror
adc
popa
ds
jb
leave
lock
and
xor
push
push
sbbb
stos
outsl
pop
inc
or
pusha
xchg
cmp
mov
vunpckhps
pop
inc
xor
jge
xchg
adcb
mov
push
fldenv
out
loope
jns
sbb
stos
test
lcall
and
cmp
loopne
xchg
loope
mov
ret
cmpsl
or
hlt
mov
xchg
mov
aad
add
push
sub
lds
js
data16
adc
cmp
aam
push
xchg
fld
dec
daa
das
jl
sub
shrb
xchg
flds
jbe
sbb
jecxz
iret
mov
lock
test
dec
mov
out
add
arpl
xor
outsb
filds
mov
inc
jo
pop
xor
fnstcw
loope
jnp
inc
mov
cmp
or
fadds
inc
adc
inc
inc
xchg
xchg
out
stos
iret
das
push
popa
cltd
dec
push
mov
xor
pop
stc
imul
aaa
and
pop
mov
add
fmuls
push
and
pop
ljmp
xor
pop
ret
popa
pop
xor
push
jo
add
mov
cmpsb
push
mov
push
je
inc
in
std
sbb
icebp
or
push
and
adc
pop
shl
cmp
movsb
mov
shrb
enter
xor
ljmp
or
mov
insl
test
add
daa
xor
shr
lods
aad
push
push
jmp
arpl
std
aad
sbb
or
sub
cli
mov
shll
shlb
addr16
sbb
fnsave
rcrl
jbe
mov
pop
repnz
pop
pop
pop
adc
in
lock
rcll
in
cmc
mov
mov
push
cmpsl
enter
mov
sub
pop
or
push
mov
adc
inc
jecxz
adc
imul
cmc
cmpsb
fstl
mull
xor
push
les
mov
mov
jo
lds
cmpsl
mov
sarl
or
push
inc
lahf
addr16
loopne
pop
and
aaa
sbb
dec
pushf
mov
movsb
icebp
loop
out
lock
shll
rcpps
sub
pop
sarl
popa
pushf
mov
mov
addps
fldenv
pop
mov
jp
fs
aaa
adc
pop
sub
cmp
mov
fistl
outsb
out
movsl
ljmp
sub
int
daa
ds
add
push
and
jns
sti
call
pusha
xchg
push
mov
stc
jnp
loopne
data16
aad
or
mov
addr16
subl
add
push
pop
inc
push
out
xchg
adc
or
xchg
dec
lret
in
adc
push
pop
aaa
mov
notb
dec
mov
push
insl
push
cmpsb
ja
lock
add
popf
imul
cld
push
inc
fmuls
pop
popf
mov
into
test
imul
dec
mov
jbe
loopne
fistpll
in
push
insl
adc
cmp
push
outsl
enter
aaa
imull
movl
outsl
push
adc
sbb
out
xor
pop
xchg
mov
pop
in
pusha
test
push
fnstenv
xor
or
xchg
mov
outsl
pop
dec
adc
fbstp
pop
jle
push
sahf
push
cmp
cld
aas
shrl
cmp
sbb
push
adc
push
jbe
sahf
pop
and
pop
popf
fistpll
xchg
jb
and
xor
push
mov
fnstsw
push
mov
inc
sti
add
xchg
push
push
push
cmc
cwtl
push
jne
loop
pop
xchg
aaa
mov
mov
addr16
scas
outsl
push
aas
adc
lret
mov
cmp
js
push
es
push
test
jae
pop
cmp
xchg
fistps
popa
jbe
ret
cs
cwtl
jl
lds
rcl
test
push
test
push
aas
lods
lret
and
pop
int
orl
xchg
push
adc
push
mov
mov
pop
and
xchg
sbb
inc
dec
pop
shl
mov
sub
dec
push
cmpsl
out
mov
movsl
ljmp
push
lret
stc
adcb
pusha
fadds
clc
sbb
sbb
jo
mov
mov
jp
jne
pop
mov
test
jb
in
in
cmpsb
sahf
xor
mov
mov
inc
int
mov
hlt
xchg
pop
xchg
rorb
into
push
xor
xor
test
cwtl
out
dec
inc
lret
mov
nop
daa
pop
mov
dec
cltd
fs
and
out
mov
push
pop
mov
cltd
add
stos
sbb
mov
idivl
pusha
push
fisttps
test
mov
push
sbb
loope
shll
test
pop
call
icebp
and
add
ja
daa
mov
jo
lret
inc
pop
xchg
outsb
fimuls
inc
divl
push
or
mov
ja
cmp
inc
push
xchg
sub
scas
das
mov
xor
sbb
pop
mov
in
ja
aam
lcall
inc
and
push
and
push
out
ja
dec
cs
divl
pop
cwtl
cltd
push
sbb
sub
rcrb
inc
out
pushf
insb
adc
into
xchg
dec
pop
adc
xor
sub
lahf
xchg
push
xchg
aad
sbb
mov
mov
inc
xchg
pop
inc
pop
in
fsubr
fsts
insb
dec
scas
aaa
mov
push
sbb
mov
jbe
imul
adcl
mov
xor
les
sbb
inc
movsl
pop
mov
lods
gs
dec
rcll
sub
mov
pop
push
and
fstps
and
lea
in
divl
pop
divl
lods
fdivp
jge
rorb
sub
loopne
pusha
dec
push
dec
sub
jmp
call
mov
push
negb
jmp
push
in
stos
xor
push
jge
loope
add
sub
sbb
dec
test
adc
loop
mov
pop
insb
data16
dec
xor
cmp
add
lock
lods
stc
ficoml
dec
cmpsl
shrb
xor
in
push
push
inc
popa
mov
or
xchg
jo
into
ret
cwtl
xchg
aaa
push
ja
push
push
nop
xor
repz
int
ja
lds
xchg
leavew
fsubl
addr16
cmp
mov
dec
bound
dec
ret
sbb
loopne
push
and
rorb
fisubs
add
adc
mov
add
mov
mov
into
sahf
hlt
xchg
loopne
stos
jae
lods
adc
sahf
mov
movsl
cs
mov
mov
lcall
adc
shl
adc
add
or
into
fistps
xchg
jle
jmp
data16
ficoms
out
mov
jo
or
iret
pop
dec
lods
test
cmp
popf
pop
pop
ss
push
jmp
enter
hlt
pop
rorl
out
fstpl
pushf
fs
fimuls
mov
mov
xlat
das
inc
icebp
pushf
addr16
mov
pop
pop
rcl
inc
ret
mov
fistl
adc
int
xor
subb
jecxz
push
call
pop
xchg
sub
adc
lods
lret
lret
gs
add
iret
jle
enter
jo,pn
sub
mov
scas
mov
inc
sub
scas
mov
incb
or
xchg
jg
mov
das
mov
jmp
filds
ret
aas
outsl
xchg
jecxz
pop
in
loope
inc
pop
xchg
repnz
mov
ret
lea
pop
dec
xor
negb
cmp
lods
cld
push
daa
icebp
xor
je
sbb
xor
ja
and
jle
mov
xor
mov
xlat
je
shrl
or
xchg
pop
repz
cmp
mov
sub
out
outsl
and
roll
loope
cltd
roll
inc
ljmp
or
mov
xor
push
lret
pop
jae
test
imul
iret
push
pop
xchg
push
xchg
scas
stos
stc
jecxz
push
ja
adc
or
pop
push
in
push
sub
jo
push
pop
imulb
imul
pop
or
fadds
pop
pop
sbb
push
push
cltd
xor
mov
or
rol
lahf
cmp
fnop
clc
sub
adc
in
sbb
xchg
mov
idivl
lret
packuswb
inc
ljmp
dec
movsb
test
pusha
add
imul
cpuid
scas
lock
sub
aam
test
inc
jge
jae
js
ja
pop
lods
loope
hlt
push
cmp
cwtl
or
push
rcll
or
imul
sbbl
inc
cwtl
xor
lea
adc
sbb
xchg
push
pop
and
add
pop
int
ffreep
rcl
sbb
xorl
sbb
or
aas
loope
in
pop
add
std
add
test
xchg
out
rol
dec
push
addr16
clc
out
xchg
lods
ds
xlat
xor
and
sti
out
push
or
cmp
in
and
adc
ret
mov
outsl
inc
push
ret
jmp
pop
out
inc
aam
mov
add
ret
jnp
sub
aas
rcll
loop
jae
inc
pop
sub
fstps
mov
jmp
pop
repz
rorl
in
sub
aad
xchg
mov
mov
push
adc
js
std
adc
push
pop
pop
sub
jg
xlat
and
adc
jb
adc
inc
dec
fstpt
xchg
dec
pop
out
cwtl
imul
or
shll
push
push
xchg
outsl
icebp
cmp
insb
pop
ret
mov
and
outsl
pop
xchg
insl
movsb
adc
xor
push
addr16
push
mov
adc
push
iret
out
and
xchg
cld
xor
pop
std
mov
xor
pushf
adc
data16
in
or
call
xchg
insb
xor
adc
push
pop
sarl
repnz
mov
bound
iret
mov
dec
inc
xor
pop
repnz
add
ror
ficoml
out
mov
push
cld
xor
sbb
mov
add
stc
scas
adc
testb
push
stos
jp
cmp
into
xchg
adc
add
mov
sbb
fstps
and
xchg
push
pop
iret
inc
xor
insl
mov
push
nopl
inc
add
mov
hlt
push
loope
fwait
mov
adc
pop
fisubs
cmp
pop
insl
lret
add
inc
data16
adc
xchg
movsl
sub
pop
sahf
fdivrl
jae
adc
xor
xor
cmc
mov
xor
add
in
fwait
adc
mov
or
test
cltd
test
ljmp
test
movsb
cmp
inc
or
xor
sbb
add
inc
sbb
mov
mov
fwait
nop
int
fistpl
add
pop
mov
leave
pop
fs
mov
ja
cmp
pusha
fsubrl
test
push
push
jl
imul
fidivs
arpl
xchg
mov
cwtl
cwtl
and
mov
mul
dec
xchg
or
cltd
push
mov
imul
push
cmp
sahf
pop
push
rcll
loop
and
push
and
popa
dec
inc
adc
leave
in
dec
jmp
cmp
test
icebp
mov
mov
dec
sti
stos
pop
pop
shr
lods
dec
mov
sub
jne
imull
sbb
loope
and
stc
jp
cmp
dec
pop
in
int3
jmp
adc
shrl
or
cmp
add
xor
sub
mov
dec
inc
mov
rorl
or
ja
jmp
cmp
mov
xchg
push
xchg
xchg
rcr
sub
enter
xchg
scas
sbb
fdivp
mov
in
cmp
sbb
mov
xor
mov
and
jnp
ret
in
mov
out
add
imul
lods
imul
mov
shl
ja
mov
xchg
lret
addr16
mov
fistpll
movsb
xor
mov
inc
and
dec
loope
das
data16
minps
insl
outsb
xchg
or
mov
cmpb
inc
fnstenv
xchg
in
dec
scas
push
cmp
into
ret
fldcw
maskmovq
lock
sbb
pop
add
icebp
push
inc
add
xchg
push
cmpsb
pop
fisttpll
les
pop
mov
push
jne
cmp
repz
inc
aam
addr16
xchg
sbb
popa
mov
mulb
fbld
ljmp
pop
bound
test
push
fcmovnb
es
fcoml
xor
xlat
pushf
test
jp
sti
mov
or
pop
stos
sbb
sbb
mov
lea
arpl
pop
and
inc
lret
sub
pop
out
jecxz
movsb
xor
out
jnp
sbb
aad
push
pop
fistpll
imul
enter
xor
out
arpl
dec
shrb
push
sub
and
push
movsb
scas
push
pop
jmp
jae
xchg
add
dec
loop
stos
xor
gs
fs
cmpsl
pop
inc
das
nop
mov
adc
adcb
xchg
add
imul
push
roll
cmp
xor
mov
int
mov
mov
aas
mov
mov
js
adc
ja
psubusw
pop
cmp
push
mov
dec
sub
add
push
inc
push
mov
std
je
xor
cli
mov
add
jne
in
cmp
jo
push
or
sub
mov
insb
jle
xor
xor
lods
push
outsb
inc
rorb
push
aas
arpl
pop
addr16
mov
int3
aad
jns
add
cmp
enter
mov
test
insb
xchg
pop
dec
stos
jmp
add
into
mov
cmp
push
std
sbb
loopne
dec
xchg
jnp
bound
jg
adc
je
cmp
fwait
or
xchg
aad
hlt
push
rcr
push
cmp
sub
inc
mov
testb
lcall
bound
push
loop
cmp
out
push
call
xor
cmp
adc
sbb
aaa
jmp
jl
push
cmp
push
sbb
clc
jnp
out
outsl
rclb
arpl
xchg
xlat
pop
dec
or
aaa
xchg
inc
outsl
mov
xchg
adc
pop
fmulp
aaa
imul
daa
pop
xor
arpl
jle
or
ds
jle
xor
inc
jne
pop
insb
call
rcll
lock
jne
testl
xor
inc
into
or
lods
mov
rclb
aam
adc
sub
push
add
enter
in
pusha
xlat
pop
flds
cltd
add
push
dec
loope
jecxz
mov
je
push
pop
inc
lods
dec
leave
pop
pop
aad
fsubp
repz
and
xor
rcll
inc
or
cmpsb
push
and
sbb
adc
out
push
and
jbe
push
add
dec
mov
sub
out
aam
cmovnp
int
nop
dec
adc
lahf
and
push
stc
xchg
mov
out
sbb
fcoml
mov
popa
pop
push
in
push
divb
nop
cmp
and
mov
add
sahf
pop
stc
jl
movsl
daa
dec
test
fsub
arpl
mov
push
movb
loop
xchg
mov
dec
push
jno
jecxz
cmp
clc
icebp
sub
mov
lret
movsb
adc
das
cwtl
or
daa
add
push
aam
pop
mov
push
push
in
jb
fistl
push
xor
push
dec
add
mov
clc
sbb
jne
xchg
insl
sti
mov
repz
stos
out
and
lret
imul
sbb
cli
jns
add
aaa
sub
inc
lods
and
dec
jbe
movq
jo
imul
push
mov
cmpsb
sub
mov
pop
movsb
jg
mov
inc
sti
pop
push
mov
lea
inc
fsts
mov
jb
mov
aaa
xchg
lods
cltd
cs
adc
cli
sbb
lcall
push
or
lahf
pop
adc
inc
pop
int3
sub
push
and
scas
fmuls
das
push
pop
movsl
lcall
pop
aas
mov
int
add
or
push
add
lcall
inc
je
xchg
out
cmp
js
sti
push
push
ds
test
addr16
arpl
sti
movsb
lock
pmaxsw
push
les
sbb
xchg
push
insb
pop
xor
addr16
int3
push
fmuls
shll
inc
shrl
cwtl
sbb
repz
rorl
jge
pop
adc
adc
jno
ja
imulb
mov
adcl
out
cld
push
xor
insl
pop
add
push
ja
xchg
int
iret
sti
cwtl
pop
outsb
push
in
push
pop
inc
adc
adc
pusha
xor
push
sbb
inc
pop
leave
dec
push
mov
jne
int
mov
rclb
mov
jp,pt
cmpsb
dec
rcrb
je
mov
xchg
nop
sbb
fimull
loope
mov
sahf
add
int3
inc
insb
mov
loopne
inc
mov
jb
pop
push
xchg
mov
pop
pop
aas
andb
sub
push
xor
sbb
pop
xchg
sahf
addr16
adcl
sub
popa
leave
pop
shrb
jmp
push
jmp
xor
sub
push
mov
fisubs
pop
push
pop
addl
int
push
out
push
jns
push
sti
mov
mov
je
pop
inc
mov
das
jle
out
mov
mov
xor
sbb
lock
arpl
jmp
das
push
rclb
movsb
adc
dec
ret
push
ja
test
xor
enter
lds
inc
in
lods
xor
int
rcll
mov
mov
mov
inc
pop
rolb
or
push
lods
push
jno
stos
inc
out
push
jmp
pop
arpl
jg
ret
cmp
icebp
pushf
inc
fsubl
mov
xchg
stc
adc
xchg
aaa
mov
sti
jl
push
std
jg
loopne
adcb
sbb
lahf
lds
fbstp
add
push
or
pop
dec
in
out
loope
jne
lret
xchg
jne
dec
push
das
int
icebp
mov
data16
ret
mov
mov
dec
dec
inc
cmpsb
popf
addr16
pop
cmp
sub
cmp
push
cmp
xchg
ret
mov
push
lea
lods
iret
push
ret
cs
dec
int3
insb
mov
jo
sbb
in
or
dec
pop
mov
add
pop
out
mov
aas
xlat
inc
mov
bound
cmp
sti
lahf
in
mov
insb
mov
daa
fcomps
or
cmp
pop
push
xor
jb
push
xchg
loope
mov
in
mov
xor
ja
mov
pushf
pop
sarl
sub
test
mov
fbstp
push
ja
jecxz
push
mov
inc
adc
cld
push
pop
mov
mov
xor
push
push
movsl
mov
aas
adcb
insb
outsl
mov
hlt
or
xor
les
jg
in
push
pop
das
mov
pop
push
js
stc
xchg
and
mov
push
jne
sbbb
stos
sub
pop
roll
sahf
ds
dec
dec
or
push
xor
rcr
sbb
push
lea
add
scas
push
fldenv
push
movsl
cld
jbe
mov
in
or
mov
gs
push
rclb
aam
push
xor
pop
xchg
add
push
push
enter
pop
mov
jle
sti
mov
leave
out
in
popf
pcmpgtd
shlb
dec
iret
push
xchg
jnp
popf
fwait
add
inc
gs
inc
fdiv
arpl
pop
push
and
divl
and
bound
ds
and
aam
insl
movsl
xor
and
and
lahf
pusha
mov
cmovae
je
push
jbe
pop
loope
sbb
push
loop
insl
icebp
notb
out
inc
push
sbb
or
cli
sti
jb
inc
nop
jp
imul
mov
lahf
lret
ds
xor
arpl
push
ret
push
mov
fildl
ss
outsl
pop
into
or
adc
mov
lea
push
dec
jno
push
jo
imul
dec
icebp
jae
out
addr16
pop
aaa
pusha
jg
js
imul
test
decb
add
push
sub
cmpsb
mov
cwtl
or
xlat
add
add
ja
push
push
rcrl
orl
mov
aaa
xrelease
push
js
sub
push
insb
jo
sbb
push
mov
lret
repnz
xor
adc
addr16
push
and
pop
clc
rcrb
in
dec
out
sub
fdivrp
pop
cmp
pop
jb
mov
out
rcr
push
adc
sbb
and
fwait
mov
int3
inc
pushf
push
lods
adc
push
repnz
stos
leave
jge
fcmovb
and
jp
inc
decl
int3
lret
inc
add
test
lret
cwtl
out
mov
fstp
cwtl
push
xchg
xlat
ja
mov
xor
iret
jnp
cwtl
xlat
test
sbb
push
push
lret
mov
push
fisubrs
mov
push
jmp
imul
popa
xchg
into
rcr
jp
enter
pand
add
mov
inc
rorl
jnp
out
pop
adc
hlt
fs
push
inc
daa
xor
xchg
in
pop
dec
push
sbb
sti
pop
cmc
dec
repnz
push
or
cmp
push
out
imul
addl
jbe
repz
iret
and
mov
push
and
arpl
mov
inc
gs
pop
cmp
popf
cwtl
out
movsb
pop
iret
fstps
dec
ja
push
xchg
pop
sub
negl
mov
fsubl
push
xchg
and
mov
popl
or
cld
mov
cmp
imul
ljmp
inc
call
pop
xor
loopne
or
xchg
mov
out
inc
xchg
sub
jo
cmc
in
scas
or
popa
pop
lahf
xchg
inc
xor
mov
dec
mov
cmp
or
jmp
push
cmpsb
and
add
pop
popl
ja
loope
push
mov
jecxz
or
aas
fnstcw
and
xchg
xor
push
lods
mov
repz
data16
xchg
cld
push
insl
fisttpll
push
jmp
mov
loopne
pop
call
dec
ljmp
lods
pop
aam
pop
aam
inc
mul
lods
les
stc
xchg
insl
fimull
movsb
inc
cli
mov
outsb
in
aam
out
insb
loop
cmp
jbe
out
test
push
mov
xchg
mov
ds
push
pop
or
lret
push
ja
imul
outsb
or
xchg
scas
push
das
mov
dec
push
aaa
or
xor
outsb
and
lea
inc
test
ss
fwait
movsl
cwtl
jo
enter
pop
jae
mov
repz
in
jp
jmp
add
dec
out
xor
and
scas
aam
mov
aaa
mov
inc
xchg
call
out
loope
rcr
push
icebp
jl
pop
mov
repz
pop
loop
push
test
in
negl
in
mov
adcl
mov
fnstenv
mov
sbb
adc
and
icebp
fisubs
outsl
les
jno
push
pop
mov
rorb
in
jae
jmp
idivb
jmp
decb
jb
xor
mov
sub
sub
mov
lret
aam
jbe
push
mov
mov
xchg
mov
cltd
ficompl
shlb
nop
and
std
sbb
ja
jne
hlt
test
aad
data16
cmpsb
and
add
adc
rorb
pusha
daa
or
mov
dec
pop
xchg
int
and
ficompl
stos
dec
dec
ret
cmp
imul
pop
out
aaa
cmp
push
rcr
push
in
xchg
aam
jle
jne
ret
int3
out
aas
out
setg
aas
xchg
push
sub
mov
icebp
push
jno
adcb
adcb
sti
jmp
cmp
das
mov
pop
fstps
insb
sahf
mov
push
or
jbe
and
test
xchg
jle
jp
lcall
pop
cltd
mov
mov
push
addr16
int3
gs
mov
sar
push
inc
pop
cwtl
lock
cltd
pop
push
sub
in
xchg
pusha
xor
mov
mov
je
mov
imul
rclb
bound
mov
add
or
iret
jp
and
push
xchg
sub
and
dec
das
mov
or
xchg
out
or
inc
xchg
pop
mov
fiadds
xchg
scas
sbb
shlb
ss
mov
xor
mov
iret
add
sarl
lret
adc
push
fdivs
inc
push
push
sarb
cli
dec
scas
sbb
roll
dec
hlt
push
loop
in
pop
xor
xchg
jnp
xchg
push
icebp
arpl
testl
sbb
in
mov
enter
sub
jbe
mov
lds
or
mov
and
bound
inc
aad
mov
leave
idivb
sets
icebp
repz
roll
stos
add
push
pop
pusha
rcrl
jecxz
int
push
pop
mov
cmp
mov
js
jno
xchg
and
push
pushf
xor
inc
aaa
fnstcw
inc
mov
xchg
outsl
pop
out
ret
push
inc
aad
call
divb
mov
ss
pop
add
mov
jo
xlat
xchg
xor
aaa
mov
sbb
gs
pop
nop
add
mov
xor
in
movsb
dec
cmp
pop
push
fcos
in
aaa
xor
cmp
into
popa
pop
xchg
lea
rcll
loope
mov
shrb
jecxz
ljmp
adc
dec
pop
out
mov
loope
out
mov
inc
insl
lods
iret
pop
nop
shl
inc
pusha
adc
mov
pusha
add
and
out
fldenv
push
jp
or
iret
xor
push
mov
pop
sbb
adc
fidivrs
sbb
call
add
inc
mov
xchg
add
fcmovnb
imul
aas
push
iret
dec
pushf
in
sub
sbb
pop
mov
sub
xlat
mov
mov
cmpsl
scas
sub
add
cmp
or
mov
sbb
xchg
rcl
and
pop
add
cmc
ret
call
pop
lret
pop
fnstenv
sbbb
popa
rolb
cmpsb
pusha
scas
lret
cmpl
aad
rolb
push
cmp
cmp
popf
xchg
pop
lret
pop
adc
jge
xchg
jecxz
cmp
mov
pop
out
or
test
popa
testb
cli
xchg
sub
pop
scas
mov
dec
xlat
pop
loope
push
ss
xor
mov
outsb
fidivs
pop
inc
imul
mov
push
insb
mov
cmpl
pushf
aaa
xchg
mov
rcr
subb
mov
in
push
loope
aam
sbb
xchg
stos
add
cmp
loope
adc
nop
jmp
into
sub
jno
mov
mov
cld
dec
mov
out
addps
xor
fld
sbb
out
stc
jge
xor
pop
xor
int
jns
pop
push
mov
addr16
roll
mov
les
fmuls
add
pop
loope
pop
dec
mov
xor
adc
movsb
into
fsubp
repnz
xor
iret
pop
xlat
out
das
mov
sahf
test
mov
cltd
xor
loop
adc
cltd
test
mov
insl
and
out
jle
or
ret
xor
bound
and
mov
dec
pop
push
xlat
shr
xor
fwait
pop
xchg
ja
icebp
xor
aad
inc
lahf
mov
pop
iret
inc
inc
in
data16
movsb
ss
push
jg
cmp
inc
notl
push
pop
movsb
xor
and
out
scas
adc
mov
lret
lret
jg
jcxz
popl
movb
mov
lods
xchg
stos
lods
shll
scas
fistpl
cmpsl
test
add
pop
aaa
loope
add
pop
scas
das
mov
sub
lahf
enter
shlb
xor
sub
loope
xchg
aam
pusha
outsb
mov
jnp
outsl
hlt
daa
andl
xchg
push
add
jbe
test
push
pop
mov
inc
rorb
inc
jb
pushf
imul
sbb
add
inc
insb
aad
push
fdivl
push
icebp
jle
mov
loop
bound
insl
pop
cmp
cmpsl
loope
push
cli
test
dec
sbb
pop
fldcw
test
loope
imul
in
push
push
pop
scas
jo
xchg
and
and
flds
jae
mov
inc
nop
repnz
roll
xor
mov
and
insl
mov
lret
gs
dec
decb
or
jmp
pop
pusha
cs
jno
inc
rcr
push
and
out
xchg
stc
aad
and
pop
rcll
jp
imul
adc
shl
sub
pushf
fbld
fwait
cmpsb
or
cli
xor
loopne
cwtl
sti
nop
sub
filds
fcoml
scas
sysexit
cwtl
inc
fisubs
out
sbb
sbb
dec
jo
xor
xor
sub
lret
sbb
inc
and
push
fiaddl
fsts
dec
jge
mov
test
and
xchg
stos
in
fbld
cmpsb
test
test
sbb
cs
mov
push
mov
inc
adcl
pop
add
lods
sbb
and
jge
mov
rcr
jb
push
in
loope
add
icebp
fcomi
movsl
inc
adc
inc
pop
jge
cmp
xchg
cmpsl
loope
push
jbe
fstl
inc
pop
inc
sti
dec
fcoms
pop
str
jae
xchg
in
dec
mov
mov
in
pop
rcll
into
pop
cmpsb
cmp
mov
movb
inc
pushf
rcrl
pop
mov
out
and
je
mov
mov
repz
push
mov
inc
stos
adc
arpl
pushf
cmp
push
inc
jo
in
xchg
repz
ss
mov
icebp
xor
push
add
adc
sub
pop
movsb
pop
insb
in
out
push
jae
sti
pop
cld
jl
adc
adc
mov
push
jge
push
xchg
ljmp
jno
push
out
cltd
sbb
dec
sub
enter
mulb
push
ud0
stc
shll
push
mov
jo,pn
lahf
cmp
push
pop
dec
pop
in
push
push
mov
out
lds
jb
xchg
sub
in
sub
xor
in
rcll
mov
add
fidivs
iret
aas
mov
mov
hlt
mov
jo
cmp
or
lahf
addr16
pop
inc
xchg
mov
pop
idivb
dec
pop
shl
mov
dec
xchg
leave
push
push
push
punpcklbw
idivl
xor
imul
adc
gs
add
jp
dec
addr16
lods
imul
inc
adc
push
mov
sbb
addl
out
inc
or
jbe
push
and
mov
fwait
clc
jl
mov
out
cld
das
add
int
push
imul
jle
rorb
push
cltd
dec
push
fadd
pop
jnp
test
nop
pusha
mov
std
push
pop
xlat
out
cli
push
and
adc
pop
jmp
icebp
jae
aas
pop
mov
pushf
mov
push
das
ficoms
jp
push
jbe
daa
xor
push
lret
inc
or
inc
sbb
pop
pushf
cmc
cltd
cmpsl
les
ret
mov
cwtl
addr16
nop
push
out
push
mov
mov
vxorps
test
mov
sbb
subl
mov
in
push
sbb
pop
xchg
rep
xor
xchg
jl
cmp
es
mov
lret
nop
popf
cmc
pop
push
cmp
inc
aad
lds
andb
sub
lock
push
idiv
cmp
loopne
mov
pop
push
mov
out
push
mov
jb
pop
imulb
int
push
adc
inc
and
cmp
data16
pop
out
cmp
inc
popl
pop
or
repz
aas
stc
lds
xor
bound
jno
je
cmp
and
pop
xor
lock
pop
mov
pop
lret
and
inc
pop
mov
adc
push
out
fwait
and
test
rol
shrb
jcxz
enter
mov
or
aaa
subb
dec
push
pusha
test
mov
xchg
pop
movl
push
push
pop
stos
sub
xor
pop
rorb
sub
add
dec
loop
and
push
aad
sarb
lret
mov
pop
jle
push
lahf
mov
fs
push
shr
aam
dec
jp
xor
push
push
fcomi
sbb
jmp
lret
ljmp
mov
cmpsb
mov
stos
pop
into
stc
push
xchg
xor
mov
push
xor
and
mov
push
out
imul
adc
push
mov
pop
loop
sbb
addr16
fcmovu
or
sub
addr16
mov
pop
test
mov
lret
cld
dec
sbb
push
arpl
test
dec
lahf
push
imulb
sbbb
dec
js
mov
xchg
and
pop
pop
ret
push
fwait
xor
repz
ja
bound
push
mov
jb
adc
lret
mov
add
adc
push
fistps
sbb
xchg
push
inc
ljmp
push
xor
inc
cmp
addr16
into
subb
lcall
sub
inc
xchg
fmul
test
push
aas
xlat
addr16
or
rorl
addr16
std
in
gs
pop
cli
xchg
push
push
rolb
pop
insl
inc
inc
das
out
push
lock
adcb
sub
mov
rol
jno
xchg
test
xchg
fdivr
test
push
mov
push
mov
cli
jno
push
test
stc
imul
int3
imul
dec
pop
jae
pop
lret
add
push
test
inc
int3
sub
scas
pop
pop
test
jne
dec
mov
mov
xchg
or
ja
push
inc
push
clc
lock
pop
and
aam
pop
dec
iret
js
push
mov
lret
fs
xchg
js
cmp
jl
out
aas
pop
ficoml
mov
xor
adcb
add
adc
lret
push
push
pusha
aas
imul
jl
adc
push
cmp
xchg
dec
push
jns
mov
ret
xor
pusha
divb
inc
sbbb
out
sarb
inc
push
jg
inc
cmp
xchg
jne
test
pop
fsubrp
mov
jg
push
or
sti
sarl
and
add
xor
push
xchg
xor
cmpsb
sbb
faddl
cmpsl
pushf
repnz
jno
mov
dec
mov
pop
jle
adcl
movsb
fwait
push
cmpb
sub
push
jo
gs
addr16
push
popa
addb
out
mov
jo
fisttpll
and
aaa
fmull
cltd
out
sbb
pop
cmp
out
fildl
addr16
lods
mov
xor
push
fistl
mov
push
leave
jns
scas
addr16
mov
xor
push
in
push
xor
jecxz
push
pop
lret
dec
cmp
sub
mov
loop
and
pop
push
mov
mov
mov
pop
inc
in
and
dec
sbb
mov
ljmp
mov
insb
dec
mov
mov
adc
cs
mov
mov
data16
add
mov
lahf
test
fstps
dec
ss
popa
mov
push
xchg
pop
xor
scas
mov
loopne
scas
test
jecxz
rorb
push
mov
dec
ret
icebp
fldt
imul
leave
dec
mov
mov
out
pop
jb
sbbb
lret
add
popf
xlat
push
fldenv
jl
xor
fwait
roll
roll
loope
fstps
cmp
arpl
pop
dec
push
out
insl
mov
ss
add
adc
push
xor
sub
and
jbe
pop
cmp
ret
movsl
xchg
and
cmp
adc
mov
scas
out
xchg
pop
sbb
rcll
pop
movsl
insb
sub
pop
scas
inc
mov
aaa
fists
in
inc
outsl
scas
fidivrs
mov
mov
pop
fwait
pop
sarl
bound
in
push
jmp
xorb
or
pushf
outsl
push
fxch
pop
pushf
mov
loope
cwtl
add
addr16
flds
shl
sbbb
inc
xorb
push
or
nop
rcll
push
movsb
mov
mov
xchg
icebp
xor
rcrl
int
jne
aaa
jbe
cmpsl
and
xor
sti
fisttpl
mov
lods
shrb
xchg
pushf
loope
das
roll
cmp
pop
rep
sub
adc
sub
in
stos
add
adc
and
lock
insb
arpl
out
mov
push
pop
adc
fucomip
xchg
jbe
mov
dec
arpl
and
loop
fstps
xor
mov
sarl
mov
repnz
lret
or
dec
add
pop
cwtl
push
loope
or
lea
test
pusha
imul
xor
lret
push
push
dec
loope
pop
and
negb
out
mov
sarl
mov
sbb
aaa
cmp
sub
xor
or
loopne
fsubrs
xlat
loopne
mov
or
xor
mov
and
repz
sbb
scas
sbb
cltd
fnstenv
aad
mov
fldt
sarl
rcrl
sbb
jb
or
mov
fldenv
push
pop
js
movhps
and
shll
xchg
xchg
and
add
inc
loope
mov
clc
stos
lea
mov
mov
push
cmp
add
rcl
pusha
xchg
call
push
dec
push
jae
sub
pop
rol
pushf
arpl
ja
or
xchg
push
je
xor
ljmp
out
repnz
repz
pop
stos
cmpsl
inc
push
mov
hlt
sbb
test
ror
addr16
xchg
push
stc
test
imul
mov
dec
enter
sub
or
sub
adc
mov
mov
add
movsl
cld
jmp
mov
jg
in
adc
arpl
outsl
xchg
stos
shll
push
stc
orl
lret
push
jno
pushf
pop
fcoms
punpckldq
jmp
xchg
adc
clc
and
mov
adc
and
xchg
jne
test
cmp
or
fstpl
inc
int
or
xchg
mov
test
insb
popa
js
pop
cmc
mov
aaa
mov
pop
popf
xchg
addr16
lods
fs
xchg
sbb
xchg
adc
add
jns
dec
cmp
pop
ss
and
push
mov
mov
repz
or
addr16
and
xchg
push
add
loop
subb
das
lea
andb
xchg
push
sub
rcr
jbe
fdivs
loopne
mov
fldcw
push
in
cli
cltd
pop
push
jns
loope
sbb
adc
xchg
test
out
pop
inc
daa
cmpsl
dec
xor
mov
xchg
or
jns
push
ljmp
push
sbb
int3
bound
pop
adc
sbb
xchg
mov
ds
xor
divl
or
add
cmpsl
mov
lds
sbb
sub
adc
pop
jp
sbb
adcl
sahf
jb
push
mov
or
loop
inc
push
int
jno
sbb
mov
imul
leave
and
rorb
dec
push
xor
in
nop
adc
lds
adc
xorb
pop
jl
mov
push
and
or
adcl
mov
cwtl
push
andl
cld
mov
push
fcoms
das
outsl
insb
pop
mov
mov
imul
nop
xor
jnp
or
pop
mov
pop
test
push
out
inc
test
xchg
rclb
push
push
aas
dec
mov
cmp
fidivrs
lcall
es
push
bswap
repnz
ss
mov
ja
aad
push
push
mov
add
lods
inc
hlt
or
sbb
pop
mov
sub
inc
fsubp
clc
lods
push
movsl
inc
push
pop
out
xor
push
aam
jbe
push
aad
or
ret
push
mov
lds
pushf
adc
lahf
xchg
jg
xor
pop
pop
pop
mov
sbb
jbe
xor
loope
inc
xchg
mov
push
inc
mov
and
push
orb
in
in
mov
fptan
push
adc
shlb
gs
ja
jp
call
mov
inc
lds
jbe
bound
loop
jne
test
daa
fisubs
mov
shll
aaa
test
lret
dec
jecxz
push
jmp
mov
mov
and
mov
out
cli
out
rol
jne
xor
inc
in
push
sbb
dec
mov
xchg
sarb
push
xor
cli
movd
fisubrs
cmp
jmp
fstl
jae
shll
out
sbb
xchg
sbb
ja
xor
pop
out
pop
scas
pop
jnp
mov
mov
aad
inc
shll
nop
pop
rorl
pop
xor
std
push
es
imul
ja
cmc
xchg
aaa
stos
and
outsb
pop
cli
stos
pop
add
jl
push
int
push
movsb
ret
lahf
out
inc
pop
lret
mov
pop
jb
mov
fistl
jl
xlat
push
fwait
sbb
mov
inc
sub
and
addr16
sbb
push
jge
push
mov
xor
mov
push
push
mov
cli
xlat
leave
or
nop
pop
push
popf
mov
jge
inc
or
mov
push
or
sbb
leave
dec
jl
jb
push
mov
lret
movsl
push
insl
and
out
pusha
loopne
add
mov
enter
mov
fs
push
imul
lret
in
out
daa
mov
sub
sub
and
xchg
pop
inc
outsl
das
add
daa
popa
lahf
pop
insl
mov
sar
notl
mov
ds
sbb
sbb
fisttpl
test
jns
or
push
rcll
loop
mov
dec
movsl
adc
pop
shlb
push
xor
sub
lock
and
push
pusha
dec
push
sub
aaa
icebp
jno
stos
ss
scas
sub
mov
insl
popf
enter
jecxz
cmp
jb
push
nop
fwait
and
and
mov
add
testb
pop
dec
mov
cmp
mov
xor
dec
cmpsl
call
stc
lret
xchg
push
xor
shl
fildll
ja
mov
pop
pop
in
mov
and
es
cld
or
mov
mov
dec
xor
jge
fcoml
into
aaa
in
mov
push
movsl
push
xchg
jl
cli
mov
xchg
test
add
push
push
sahf
rclb
lods
mov
push
push
sbb
mov
mov
sbb
pop
sbb
cmpsb
mov
pop
xchg
jmp
scas
ja
arpl
dec
inc
shr
push
push
scas
jbe
push
pop
push
fsubs
je
fwait
mov
xor
inc
and
sub
inc
into
push
dec
es
mov
js
inc
pop
cwtl
ficoms
xchg
push
into
adc
pop
add
lods
das
cmpsl
outsl
ljmp
popa
test
rorb
push
mov
stos
addr16
ja
rclb
xor
lahf
add
loop
mov
inc
push
or
and
pusha
test
and
pop
call
test
lods
das
inc
xchg
and
jb
push
leave
gs
cmp
int
cmpsl
sti
aam
dec
cwtl
scas
sub
imull
add
mov
scas
push
mul
imul
rcrb
xor
int3
aaa
ss
sub
xor
jge
mov
sbbl
ljmp
and
mov
lods
lret
imul
inc
into
mov
push
or
xlat
fwait
xchg
jb
addr16
mov
jno
push
jp
push
icebp
stos
xchg
mov
cmp
or
aam
leave
dec
sbb
add
sub
je
sub
cmp
frstor
jmp
dec
push
lock
stc
add
icebp
push
xchg
popf
pop
xchg
push
lcall
adc
push
dec
movsl
jle
mov
inc
or
jle
xchg
out
pop
cmpsl
xor
ljmp
adc
imulb
jne
sbb
push
imul
flds
xor
xor
mov
jmp
pop
test
sarb
ja
lret
xor
mov
movsl
sub
sbb
push
rcll
inc
outsl
push
loope
iret
ljmp
fsubrs
inc
xchg
xchg
jne
cmp
xchg
adc
mov
bound
out
lcall
add
imul
jp
push
gs
loope
mov
cmc
test
movsb
or
push
mov
adc
fsubl
fsubrl
out
cmp
push
imul
aaa
and
push
dec
out
rcr
mov
fimull
insb
inc
adc
or
pop
lock
std
sar
pop
mov
pop
movsl
out
popa
cmp
imul
jbe
clc
clc
jmp
nop
pop
fstpt
mov
and
pop
rcl
cmp
out
add
inc
fnstcw
sbb
jecxz
pop
nop
and
or
fst
fiaddl
scas
test
fpatan
inc
leave
cmpb
mov
sub
rclb
xor
enter
xchg
gs
dec
pop
aaa
cs
adc
add
push
xor
sahf
mov
xchg
or
jb
inc
aas
push
cmp
or
fstl
fadds
sub
aaa
test
pop
pop
xchg
cli
in
aad
popa
xchg
xor
adc
push
call
hlt
cli
push
pop
cmpsb
mov
sahf
orl
rcrl
mov
pop
dec
and
mov
dec
ret
jge
cmpsb
out
mov
xchg
mov
mov
inc
mov
cmp
scas
jp
and
sub
xor
or
jmp
push
inc
jle
popa
sbb
in
sbb
pop
cwtl
insb
cmp
pop
mov
xor
and
or
shl
stos
sub
aaa
aaa
mov
pop
push
repnz
cs
mov
cmp
scas
mov
push
push
xchg
outsl
out
jnp
push
pop
dec
mov
daa
repnz
arpl
xor
lret
fisttps
dec
leave
aad
daa
sub
popf
pop
dec
loope
fildl
pop
xchg
fstps
mov
roll
mov
pop
fildl
jle
ret
push
pop
push
rorl
jns
xchg
or
lea
rclb
sbb
fbld
flds
mov
sub
dec
fcoms
xchg
cmp
dec
mov
sbb
or
xchg
push
popf
push
xor
dec
jb
fisubrs
mov
pop
xchg
loop
fs
int
pop
test
leave
popf
push
fldenv
leave
hlt
das
scas
rclb
not
testl
adcb
mov
mov
mov
mov
xlat
mov
insl
pop
dec
ja
mov
imul
pushf
mov
push
jmp
adc
mov
mov
and
int
jle
test
div
jmp
inc
push
lret
push
mov
bound
inc
aaa
cmp
cltd
mov
rorl
shrl
inc
lods
fcompl
push
sub
adc
jno
out
dec
push
fs
testl
xor
fwait
and
loope
pop
xchg
or
mov
mov
xchg
and
mov
imul
test
dec
cmp
mov
loopne
push
out
pop
inc
pop
mov
pop
jo
xorb
outsl
enter
pop
jns
cmpsb
sti
cmp
js
or
dec
popf
pop
push
ja
mov
out
add
mov
cltd
inc
arpl
mov
and
lods
test
dec
push
pop
dec
shll
push
jnp
pop
mov
push
out
jmp
cli
test
push
stos
scas
ss
add
mov
mov
lock
pop
aam
sbb
push
pop
mov
inc
scas
push
enter
mull
cmp
rcrb
push
jl
dec
inc
jae
repz
pop
and
sbbb
xchg
rep
push
loop
mov
in
push
enter
addr16
in
mov
sti
push
xor
mov
mov
push
xor
pop
rclb
daa
pop
lea
ss
inc
mov
push
cld
push
mull
sbb
sbb
and
pop
movsb
insb
test
fsubs
push
mov
cmpsb
push
js
xor
or
lret
or
cld
mov
das
add
popa
pop
lea
clc
fimull
pop
cmp
add
add
std
xchg
add
addr16
pop
pop
mov
mov
push
xor
adc
lds
iret
lods
xchg
inc
lods
pop
sahf
push
stc
pop
loopne
insl
and
push
sub
jno
mov
cmpsb
jp
push
movsb
adc
push
mov
js
ja
push
mov
insl
mov
filds
pop
scas
int
sub
push
inc
lods
cltd
pusha
jnp
xor
push
sbb
repz
popf
mov
ds
inc
push
mov
push
std
fstpt
test
push
mov
loope
xchg
push
clc
rcll
mov
test
lret
pop
add
and
out
jbe
xchg
mov
std
shrl
mov
cs
aad
jp
push
jo
sub
popf
outsb
mov
dec
cmc
in
inc
lea
xchg
push
ja
data16
push
add
aad
pusha
push
rclb
mov
mov
cmpsl
inc
push
xchg
inc
xchg
mov
push
jae
and
xchg
mov
loope
xchg
sti
pop
test
mov
xchg
sub
daa
jg,pt
cs
ret
jle
sbb
add
push
mov
push
aad
sub
adc
push
push
sahf
dec
xor
xchg
push
jl
pop
loop
es
out
lea
mov
stos
arpl
jae
jle
faddl
imul
sbb
fisttps
inc
cmpsl
daa
push
cmpsb
cld
test
clc
jmp
pushf
mov
push
in
cli
cmp
pop
and
imul
pop
mov
dec
mov
out
or
gs
sbb
fisttps
outsb
push
lcall
xor
push
pop
ret
pop
and
pop
cmp
lret
ret
sbb
xlat
pop
mov
cmp
lods
stc
rcll
xchg
loope
negb
pop
jl
scas
mov
enter
imul
pusha
daa
xor
das
adc
aaa
lea
xor
jle
into
nop
fsubrp
jnp
pop
dec
sbb
jbe
rcrl
cld
sahf
outsb
push
testl
fimuls
push
lods
bound
inc
push
mov
mov
push
mov
js
roll
out
push
outsl
jp
cmp
in
xlat
test
mov
aaa
outsb
inc
xchg
cmp
mov
dec
push
push
cmc
mov
cwtl
or
rorl
lcall
sub
xchg
xchg
jb
js
sbb
pop
iret
dec
sbb
or
push
cmp
sahf
inc
das
fcomps
pop
push
into
shrl
addr16
xchg
push
xor
dec
inc
add
fidivs
xor
and
sbb
in
lahf
repz
sbb
ret
mov
negb
jmp
sti
out
rcrl
cmc
jnp
push
adc
movsb
add
push
push
push
add
call
jmp
and
push
jg
push
mov
mov
sub
and
sbb
pushf
repnz
xchg
ret
jg
mov
mov
inc
and
shl
sub
mov
ljmp
pop
stos
hlt
sub
test
push
push
in
mov
pop
push
dec
adc
out
xor
aaa
xchg
or
jmp
push
push
ret
xor
jecxz
jle
fistl
jmp
inc
dec
lahf
outsl
mov
mov
out
or
out
out
push
xchg
inc
sub
lcall
jmp
mov
push
fsubrs
pop
loopne
sub
fwait
pusha
stos
jmp
sar
movsb
push
cmp
pop
add
and
enter
adc
push
xor
ret
push
mov
sahf
push
xchg
pop
inc
fisubrs
imulb
push
pop
js
mov
rcll
xor
push
cltd
jl
adc
mov
in
mov
out
inc
lret
repz
mov
addr16
push
dec
sub
push
pop
xchg
mov
jecxz
inc
push
sbb
xor
dec
daa
rcrb
pop
arpl
sbb
in
bound
or
fistl
cmp
stc
push
or
lods
push
xor
and
shll
insl
cmp
imul
mov
aad
lods
mov
xor
fcoms
dec
lret
xlat
push
test
fnsave
xor
jmp
cmc
pop
divb
push
adc
in
jbe
dec
loop
popf
dec
fistps
lods
cmpsl
inc
faddl
xor
push
ja
mov
push
sbb
std
subb
outsl
aad
mov
stos
xlat
sbb
out
cmpsb
aas
mov
fisttpll
sub
ds
pop
xor
jp
cmp
mov
fldl
mov
push
add
out
sub
pop
xchg
and
or
ss
push
clc
aam
in
stc
mov
mov
push
mov
jl
pop
sub
sbb
xor
lahf
movsb
sbb
inc
loopne
push
test
fnstsw
stc
jp
or
insl
jbe
dec
scas
inc
dec
dec
xchg
fdivl
stc
ljmp
push
adc
sbb
leave
into
cmp
jno
add
fistl
cmp
pushf
lret
mov
fnstsw
pop
mov
repz
cmp
subl
ljmp
inc
mov
inc
lahf
fcomps
adcb
sbb
fidivs
and
fstpl
xchg
xlat
push
mov
sti
pop
jb
cmp
push
ror
sar
ficomps
mov
push
inc
les
add
mov
pop
stc
aaa
aad
outsl
sahf
mov
ja
imul
test
faddl
sub
or
pop
sti
cs
push
outsl
clc
cli
int
js
mov
cltd
pop
dec
or
xchg
jns
xor
mov
out
dec
mov
mov
push
not
sarl
xor
inc
add
addr16
mov
mov
mov
sbb
sbb
adc
insb
push
or
fcmovbe
push
sti
outsb
test
xor
push
xchg
adc
fs
int3
sbb
les
dec
shll
imul
fwait
mov
pushf
nop
sbb
adc
dec
push
mov
xchg
sub
mov
cmp
loopne
cwtl
sbb
jmp
out
ret
or
inc
daa
xchg
xor
int
lret
call
jb
xor
fists
daa
push
icebp
js,pn
mov
scas
roll
or
cmp
push
ret
stc
daa
push
push
std
test
jns
int
pop
push
mov
jnp
mov
inc
mov
mov
push
lret
lret
pop
xchg
push
inc
outsb
faddl
shlb
jbe
lds
idivl
inc
and
test
cli
leave
and
inc
shll
push
fisubl
js
cld
jns
popa
arpl
bound
lds
mov
xor
push
mov
add
push
sbb
mov
clc
js
cmpsb
lock
push
mov
jae
bound
xchg
les
cmp
js
in
sub
or
ficomps
cld
push
mov
and
scas
mov
popf
enter
fistl
or
lods
es
iret
push
mov
insl
push
mov
les
mov
pop
jle
fwait
sbb
cmpsb
daa
inc
call
aaa
jns
push
push
pop
push
xor
dec
xchg
stos
inc
cmpsb
mov
dec
sbb
and
adc
frstor
push
mov
mov
ja
jle
push
repnz
cmpsl
neg
ficoml
or
cmp
gs
push
jge
rorb
push
nop
sbb
lods
push
arpl
pusha
shlb
add
adc
mov
mov
addr16
add
jno
lods
jb
mov
pop
fstps
or
clc
jl
fwait
notb
push
insb
pop
je
aam
cs
push
repz
push
nop
imul
push
out
inc
adc
dec
fcoml
pop
mov
fwait
or
ja
mov
inc
enter
push
xor
fstpt
gs
pop
out
mov
inc
cmp
outsb
es
adc
and
push
mov
mov
sti
jg
jle
outsl
gs
mov
out
pop
and
mov
and
mov
hlt
and
neg
mov
or
pop
inc
or
adc
leave
cld
cmp
arpl
push
push
repz
lahf
xorps
mov
sbb
aaa
in
jno
movsl
mov
mov
mov
and
sbb
fistpll
push
adc
sub
outsl
sub
push
xlat
and
inc
mov
dec
mov
push
jae
xor
push
fisttpll
cld
jp
repz
push
lods
and
ds
push
out
cld
sbb
push
in
adc
push
xorl
inc
push
scas
aaa
scas
lcall
sbb
or
dec
pusha
divl
das
rcrl
and
sbb
pop
shl
xchg
and
pusha
push
sbb
imul
fs
or
outsb
test
pop
pop
mov
sbb
pop
mov
push
fisttpl
add
jae
stos
scas
cwtl
loop
test
xchg
scas
lea
pushf
sub
mov
aam
xor
mulb
int
push
mov
movsb
imul
fdivrp
ret
adc
push
dec
inc
arpl
push
sbb
mov
sbb
add
mov
mov
add
dec
push
mov
dec
or
push
mov
sbb
cli
push
subl
outsl
push
mov
push
out
push
jp
and
lea
mov
add
push
f2xm1
movsb
push
ret
add
jg
icebp
lds
push
dec
jl
xchg
lock
add
stc
rol
push
or
jmp
stos
adc
scas
push
mov
das
inc
mov
insb
es
xchg
jge
imull
or
inc
mov
addr16
inc
jmp
imul
insl
or
ja
push
test
push
rcr
sbb
jno
sbb
push
imul
jbe
sarb
and
push
lods
push
rclb
adc
pop
cmp
test
loope
outsb
out
testb
test
test
push
xor
gs
push
lcall
rclw
addb
pop
ret
fistps
fstpl
loopne
sub
xchg
cmp
jne
mov
scas
andl
hlt
pop
xchg
out
mov
push
adc
dec
inc
arpl
mov
insl
cmp
mov
mov
iret
lds
in
out
ret
fsubrl
popl
jb
loope
mov
adcl
inc
sbb
and
insl
jle
lea
dec
jnp
pop
sahf
pop
pop
cmpsb
cltd
xor
orb
mov
loop
pop
outsb
lds
xchg
mov
push
arpl
rclb
ja
sar
movl
out
pop
sub
or
dec
or
mov
push
jg
inc
sub
sbbb
shrl
push
pop
scas
test
sahf
inc
or
scas
mov
pop
push
push
movsb
sub
inc
xorps
or
insl
mov
pop
mov
lret
pop
xchg
pop
into
dec
js
fwait
les
pushf
leave
cmp
cmp
mov
rorb
dec
hlt
mov
sahf
add
fcoms
fcompl
jb
lock
cwtl
mov
pop
mov
jl
dec
cmp
push
xchg
cmp
enter
jne
xchg
or
dec
jb
cmp
incb
fldl
dec
mov
xor
pop
test
es
jnp
mov
jns
and
negl
and
push
fisubrl
mov
jae
pop
pop
add
enter
daa
scas
xchg
ret
mov
int
loopne
jecxz
jns
testb
out
inc
rclb
xchg
mov
xor
push
std
call
mov
lds
xchg
daa
lea
enter
push
inc
or
imul
fcom
popa
in
mov
std
sub
inc
push
addr16
stc
jp
fldt
push
fstl
push
jns
mov
or
cwtl
ret
into
sbb
xchg
cmp
cmp
cmc
and
mov
jbe
sbb
inc
push
test
jp
stos
repnz
sbb
sub
testl
stos
inc
adcb
dec
fcom
jno
mov
js
xor
insl
idivb
sub
hlt
into
pop
mov
in
lea
test
rolb
mov
out
rorl
jne
insb
xlat
daa
into
movsl
or
xchg
sahf
pop
mov
jle
fstpl
fucomi
cmp
je
fwait
int3
filds
leave
dec
addr16
negl
pop
xchg
cli
fsubl
jmp
fsubl
cmpsl
loop
scas
or
push
leave
mov
test
sbb
inc
push
pusha
popa
fwait
sbb
dec
je
inc
jg
jnp
sub
adcb
xchg
gs
jle
xor
push
pop
jno
cld
cmp
cmp
movsl
push
pop
fcomps
fwait
aam
aad
push
jo
inc
dec
mov
bound
iret
test
cltd
mov
inc
int
dec
cmp
mov
mov
loopne
lods
pop
shl
pop
push
sahf
mov
mov
mov
out
push
pushf
pop
or
cld
movsb
xor
push
test
xchg
scas
push
sbb
lods
push
push
inc
or
sub
push
pop
add
es
jp
mov
xchg
inc
addr16
mov
in
je
push
jecxz
loop
push
shl
nop
mov
pop
inc
scas
mov
pop
push
jmp
xlat
cmp
pusha
xchg
ljmp
add
jb
lea
imul
int3
call
or
add
mov
mov
lods
mov
pushf
sub
outsb
add
and
xchg
lock
orb
je
dec
adc
inc
sbbl
pushf
lret
push
outsb
pop
push
cmp
daa
inc
xchg
loope
nopl
out
jno
pop
outsl
push
fidivs
test
popa
jle
mov
and
mov
fwait
add
push
and
xchg
popa
es
or
out
push
fildll
or
sub
lret
iret
pop
xor
mov
xor
ds
shrb
mov
jp
or
push
or
sbbl
pop
adc
pop
push
mov
fdivl
ret
add
jns
inc
dec
cmp
inc
or
push
cld
fstl
das
push
adc
and
pop
ss
push
notb
mov
or
test
mov
lret
pop
mov
xor
arpl
pop
xor
mov
sahf
xchg
cmp
fldl
iret
xchg
std
popf
aaa
sbb
imul
andl
dec
rcll
psubusw
inc
sbb
shll
rorb
leave
pop
insl
sbb
adc
fnstenv
rcr
notb
stos
dec
fcmove
test
push
das
mov
cmp
cwtl
xlat
sbb
into
push
leave
or
lds
pop
push
aas
addb
inc
mov
push
lcall
jp
mov
popa
push
lds
out
adc
loope
xor
ficoms
idivb
push
out
das
mov
adc
adc
mov
loop
jb
push
mov
fdivs
push
addr16
js
sbb
push
push
adc
sbb
xchg
xchg
arpl
call
push
push
fisubrs
cli
cmpsb
push
cld
mov
sub
sbb
inc
ret
fadds
jo
pop
stc
ljmp
and
pop
cmpsl
ret
push
cltd
rolb
push
outsl
rorb
pop
add
or
repz
push
in
cs
mov
mov
cmpsl
sbb
out
dec
dec
idivl
inc
pop
push
test
int3
adc
push
or
pop
stos
ljmp
ss
jae
sarb
dec
mov
nop
mov
pop
loopne
mov
mov
cmc
rcrb
push
or
sahf
addr16
lds
pop
loope
aaa
add
insl
push
mov
hlt
jl
out
add
pop
pop
hlt
mov
adc
icebp
loope
sub
or
mov
gs
push
dec
dec
jnp
xor
push
pop
mov
mov
push
pop
iret
test
cmp
mov
push
mov
xorps
leave
adcb
adc
sub
and
push
lea
shlb
aam
push
add
xor
adc
fsubr
jmp
inc
or
inc
jb
gs
and
mov
leave
pop
sbb
xchg
test
inc
mov
out
inc
iretw
pop
push
aad
push
add
mov
test
pushf
lods
ljmp
jp
push
mov
mov
jp
push
xchg
ror
or
test
sbbl
inc
push
ret
fisubrs
sub
cmp
std
xlat
hlt
int
ss
fdivrl
mov
enter
mov
iret
pop
push
fmuls
push
popl
cwtl
je
cmpsl
add
mov
push
jnp
stos
imul
push
add
push
fcoml
jbe
hlt
nop
out
outsl
pop
shl
mov
outsl
pop
lods
and
leave
pop
add
fwait
lcall
pop
sub
adc
pusha
or
push
es
xor
loopne
call
mov
enter
jbe
adc
xchg
pop
cmpsb
rcrl
pop
stos
sti
negl
daa
out
push
push
mov
adc
fisttpl
add
xchg
pop
push
mov
jno
inc
pushf
out
add
inc
shr
sbb
pusha
fs
dec
addr16
jmp
push
test
pushf
jle
cmp
adc
or
mov
into
cmpsl
aad
sub
test
scas
add
mov
and
and
push
icebp
sub
dec
push
add
push
sub
mov
fwait
sti
push
and
and
push
add
hlt
push
test
ret
adc
push
mov
xchg
mov
push
mov
jb
and
xchg
jnp
xor
int3
xor
dec
int
in
mov
insl
jg
pop
shlb
mov
imul
push
cmp
mov
int3
out
clc
dec
stos
pop
aaa
xchg
idivb
test
pushl
jge
negl
ficoms
bound
xorps
int3
inc
mov
xor
mov
leave
pop
into
fcoml
test
and
notb
mov
cltd
sub
fisttpl
mov
in
fistl
sar
adc
aas
jge
cmp
adc
ret
ljmp
inc
test
sub
inc
push
mov
loope
aaa
rolb
jns
xor
test
cs
arpl
jp
xchg
adc
lcall
fbld
inc
nop
push
pop
or
ja
push
aad
fnstsw
inc
mov
fidivrs
push
rdtsc
lret
jbe
xchg
in
cmp
pop
pop
pop
mov
adc
rcrb
mov
push
push
roll
push
and
or
add
out
or
test
cmp
addr16
xor
pop
push
flds
loop
outsl
or
mov
adc
lcall
ss
pusha
insb
rcll
je
pop
push
cmp
ds
jbe
bnd
loopne
xor
inc
cmp
push
aaa
mov
fucom
xchg
mov
add
jg
add
sbb
dec
mov
push
push
loope
out
inc
jns
lcall
call
pop
data16
lock
loop
dec
out
push
and
adcb
pushf
in
adc
or
push
jb
mov
xchg
sub
stos
fs
xchg
fwait
push
aas
ja
xlat
pop
sahf
pop
popf
and
roll
hlt
push
je
addr16
ja
xchg
xchg
mov
cmp
cli
lds
addr16
jge
test
push
pushf
dec
test
dec
stos
int
outsl
mov
xor
sbb
ja
outsl
add
dec
aad
arpl
outsb
or
cld
es
xchg
dec
mov
xchg
cld
outsl
sbb
or
lock
dec
xchg
sub
out
dec
sarl
xchg
enter
ljmp
lods
push
adc
dec
push
ljmp
out
out
or
jnp,pt
repnz
inc
je
mov
cltd
fisttpll
scas
into
aad
sbb
imul
loope
imul
xchg
xchg
or
jl
shll
imul
lods
fnstcw
or
xchg
add
adc
imul
fcomps
inc
lods
dec
loope
or
shll
aaa
adc
push
dec
and
outsb
xchg
or
movsb
ja
and
mov
mov
push
das
pop
push
and
or
and
leave
ffreep
out
xchg
mov
shll
or
into
mov
scas
gs
ret
rorl
jns
shll
xchg
subl
jns
addb
dec
cmpsb
test
movsl
pop
mov
aas
mov
cmp
je
pop
loope
cltd
xchg
pop
push
mov
xlat
adc
xchg
pop
push
insb
rcr
imul
inc
cmpsb
lods
je
std
xlat
cmp
cmp
mov
pop
in
fcmovnb
push
push
into
stos
fldenv
xchg
push
lds
jp
fistl
fld
movsl
ds
std
leave
mov
jl
aaa
mov
jg
sbb
fimull
adc
lret
xchg
add
mov
add
aad
dec
or
scas
loop
neg
loope
int3
push
stos
pop
pop
mov
ss
jb
add
xchg
mov
les
pop
daa
push
loope
shlb
push
mov
sub
cmpsb
out
mov
xor
sub
mov
cmpsb
xchg
lods
into
push
aaa
in
adc
inc
pop
adc
lods
sti
dec
pop
icebp
aaa
fldcw
xor
lods
nop
mov
cmp
fimull
das
sbb
popf
in
adc
std
lret
xor
pusha
pop
daa
popf
jb
mov
fldenv
sbb
stc
xchg
jmp
jmp
shrl
cld
push
cmp
jp
mov
xchg
daa
sub
mov
in
int3
repnz
ret
pop
inc
loope
push
arpl
and
pop
and
dec
cld
mov
data16
dec
push
cwtl
and
mov
pop
xchg
pushf
into
orb
push
icebp
dec
sarl
test
movsb
cmp
xor
sub
pop
rorb
outsl
scas
outsl
or
and
mov
jecxz
cmp
cmp
pop
out
push
stc
jne
aas
xchg
das
add
pop
fsts
nop
xor
rorb
dec
xchg
aas
scas
out
sub
jns
inc
imul
nop
cmp
cmp
sbb
push
mov
movb
sahf
push
push
rorl
int
fistps
mov
adc
stc
insb
ficompl
and
es
push
lock
shlb
inc
xchg
into
or
ds
mov
fdivs
enter
or
mov
or
cld
dec
daa
inc
sbb
rcrb
rcll
aaa
fcmovnu
dec
loope
dec
sub
adc
mov
adc
addr16
movsb
mov
xor
sub
shl
scas
into
cs
cmp
in
push
jnp
cmp
mov
pop
pop
fnstcw
sub
mov
aaa
adc
pop
ret
mov
gs
or
mov
dec
lret
into
rcrb
test
sub
or
stos
mov
and
ss
in
dec
mov
out
add
fstpt
outsl
mov
lret
xchg
jmp
push
notb
adc
xchg
pop
loop
gs
imul
or
push
shl
ret
mov
mov
imul
cwtl
push
fldcw
inc
pop
andb
and
lret
jno
roll
rclb
sbb
add
push
lret
mov
push
out
fisttps
ret
addl
pop
sti
pop
mov
mov
mov
popf
push
fdivrs
mov
test
mov
loope
rcrb
push
cmp
mov
push
sub
jl
jnp
int
inc
push
flds
call
movd
insl
fiadds
repnz
lret
call
pop
and
loope
mov
add
pop
mov
dec
mov
and
mov
shll
aam
jge
cmp
in
scas
push
fsubrs
jno
xchg
int
dec
sbb
add
int
sbbl
mov
sti
jg
lock
push
add
icebp
push
stos
jl
cmp
mov
cmp
mov
movsb
out
dec
pop
sbb
pop
int
loope
les
jmp
or
subl
xchg
loopne
cmp
pop
aad
out
add
call
sub
jl
sbb
lea
fisttps
and
xchg
sub
addr16
pop
inc
mov
mov
ja
subb
pop
faddl
mov
lock
push
stos
sbb
js
and
add
ret
fsubs
loope
jl
xor
jne
dec
ds
leave
test
xchg
mov
and
xor
mov
aas
sub
into
enter
cmove
adc
jns
mov
mull
andb
shll
push
leave
dec
and
xchg
pop
sub
jo
dec
pop
insl
aaa
loop
lock
aaa
cmp
pop
or
outsl
cmp
inc
or
add
test
push
iret
fsub
cmp
jne
fs
lods
fistl
ds
pop
pop
or
adc
push
ret
inc
mov
xchg
pop
mov
xchg
pop
mov
mov
rclb
xor
add
lahf
pop
inc
hlt
lods
pop
adc
cmp
sti
int
out
push
ja
pop
dec
out
pop
xchg
ds
xlat
das
adc
sub
and
fwait
test
aaa
popa
jl
push
jecxz
cwtl
popf
lock
int3
addr16
out
scas
cmpsl
mov
mov
dec
loop
sarl
scas
orb
jecxz
mov
sbb
push
or
sbb
mov
fmuls
pop
cmc
cmp
sub
pop
aad
jle
cwtl
xor
mov
lret
ja
mov
push
ficompl
or
ds
mov
dec
push
mov
xchg
pop
jne
daa
out
jmp
xor
jmp
cmp
int
pop
repz
lret
lds
pop
loopne
in
mov
cli
push
mov
cmp
in
lods
shl
aaa
xchg
cmp
ss
push
icebp
into
addr16
sub
mov
xchg
pop
gs
mov
jo,pt
xchg
in
cmp
js
data16
pop
leave
stos
in
gs
sar
dec
push
cmp
push
popf
add
or
mov
lds
sub
mov
imul
stos
movq
sub
push
data16
cs
imul
pop
add
adc
jne
mov
push
jp
jle
pop
aad
repnz
pushf
pop
faddl
push
inc
cwtl
cmpsb
add
mov
xchg
xor
push
insb
mov
cmc
cltd
cmpsb
out
aaa
sbb
add
pop
mov
sub
cld
insb
addr16
jl
ret
push
or
or
mov
mov
inc
mov
js
pop
aas
divps
cmp
mov
stc
pusha
jl
push
add
cmpsb
xor
sbb
fistpll
sub
ret
push
loopne
sub
jns
stc
pop
or
cmp
pop
pop
out
lahf
xor
and
pop
ja
lcall
rcll
aas
lret
rcr
sbb
xchg
pop
dec
popl
mov
lahf
outsl
push
mov
xor
sub
fwait
mov
lahf
dec
push
divl
push
dec
jns
das
xchg
sbb
mov
push
leave
or
push
std
pop
mov
sub
ja
push
jmp
xchg
push
dec
hlt
movb
xor
mov
roll
decl
nop
inc
ljmp
or
push
push
loop
lea
fs
inc
inc
mov
add
movsl
adc
fsubrs
pop
push
xlat
fisubs
adc
addl
out
push
push
dec
xor
push
adc
sub
sahf
adc
mov
sub
mov
imul
adc
mov
mov
cli
add
push
xor
sbb
leave
repz
arpl
lret
and
iret
stc
ror
xchg
cwtl
push
cmp
dec
inc
sbb
adc
sahf
adc
lret
pop
add
test
ja
inc
xchg
xchg
pop
enter
mov
fildl
outsl
add
data16
adc
jg
pop
sub
xchg
int
jae
gs
and
push
mov
out
sbb
repnz
pop
test
mov
cmp
cmp
stos
add
mov
push
sti
aam
ds
testl
cmpsb
or
add
orb
pop
mov
cmp
or
insl
fcmovnu
rcrl
and
pop
push
push
enter
js
adc
pop
ja
mov
cmp
cmpsb
lahf
mov
jle
add
xor
mov
mov
xor
inc
mov
push
mov
pop
flds
out
push
push
dec
iret
pop
xchg
outsl
jge
xchg
adc
jle
sahf
mov
push
loopnew
or
push
int3
xchg
pop
and
aad
inc
mov
push
call
sahf
iret
lret
push
sub
shll
rcrb
stos
jbe
or
lret
mov
jae
icebp
mov
cmp
mov
lea
push
outsb
cmpsl
dec
test
adcb
sti
fiaddl
outsl
push
and
ljmp
jnp
gs
and
pop
mov
aam
push
int3
push
into
sbb
sub
fistps
xor
lock
sub
pop
mov
ja
pushf
mov
pop
loope
pop
push
mov
sbb
mov
mov
ficoml
lea
and
rcrl
mov
fisubrs
into
push
xchg
int3
push
es
jnp
out
outsb
das
xchg
fildl
dec
aas
loopne
pop
lods
pop
addr16
inc
aas
xchg
jae
add
cli
mov
push
sub
jns
insl
xor
dec
ja
dec
fisubrl
mov
popa
sbbb
stos
and
sub
push
jp
mov
test
xor
push
xlat
and
push
das
in
xchg
add
push
pop
push
das
pop
rcll
icebp
jecxz
cli
cltd
pop
pop
std
xor
xorb
or
add
test
ja
pop
outsl
xchg
inc
aas
andb
call
fistl
push
mov
fs
add
fdivrl
cmp
mov
outsb
lret
mov
sub
pop
jo
jno
pop
pop
xchg
mov
push
popa
cmpsl
push
pop
jp
and
mov
or
divb
cmp
js
add
ss
inc
sub
adc
pop
jne
mov
dec
xchg
xchg
iret
jmp
push
lret
adc
fcomip
ss
repnz
mov
mov
stos
rcl
mov
inc
add
jecxz
lahf
xchg
xchg
cs
xchg
jb
cmp
lods
push
push
push
xor
fsub
mov
xor
into
xor
inc
pop
mov
mov
push
shl
ja
jnp
add
adc
int
popa
mov
dec
out
lahf
jb
pop
inc
out
dec
mov
and
imull
xchg
daa
xor
popa
mov
test
sahf
xor
push
fs
inc
js
cltd
gs
or
imul
inc
test
insl
add
jl
pop
and
sub
jecxz
insl
push
mov
outsl
xchg
icebp
and
xchg
les
mov
mov
js
bound
push
inc
fwait
nop
or
shlb
cmp
fdivr
flds
cmp
das
inc
ja
jb
pop
pop
adc
shrl
in
push
push
and
cmpsb
push
in
sbb
sbb
inc
clc
mov
and
fwait
mov
mov
mov
pop
xlat
negb
dec
aas
gs
mov
xor
imul
pop
test
ret
mov
aaa
push
or
add
cmpsl
dec
js
mov
jnp
rcrl
pusha
out
cli
push
jp
roll
mov
dec
loop
and
xor
push
lock
je
sarl
fcmovnu
std
out
pop
into
xchg
gs
pop
cmc
outsl
push
shld
sbb
jmp
adc
mov
lcall
iret
cmp
sub
je
jnp
out
adc
mov
xchg
pop
push
adc
stos
dec
je
sub
pushf
and
ret
xorb
adc
scas
repz
js
add
mov
jbe
hlt
cmp
dec
xor
lret
pop
mov
adc
fisttpl
pop
inc
sar
dec
cld
outsb
cmpsl
push
push
jnp
mov
rcr
cmp
or
lods
enter
inc
push
dec
fildll
jg
and
and
aaa
out
pop
popl
jecxz
push
scas
pop
push
ja
mov
insb
push
or
std
pop
xchg
inc
push
mov
popf
sbb
lds
push
stc
dec
or
rcll
fsubrl
popl
sub
mov
lods
stc
add
cmp
and
ret
and
add
pop
out
jl
test
psubusw
ret
ret
adc
pop
stos
jecxz
pop
cld
fsubrl
aas
js
shlb
pop
sub
lods
les
loope
pop
jnp
fiadds
xchg
pushf
pop
adc
mov
nop
pop
arpl
sub
clc
aas
add
fiadds
in
addr16
loope
pop
jle
icebp
es
jecxz
scas
push
or
fsubrp
dec
rcll
add
xor
or
iret
and
sbb
js
xchg
repz
das
inc
fstl
and
fistpll
shll
xor
das
push
mov
out
scas
xchg
inc
or
and
shr
push
dec
xor
push
loope
mov
pop
inc
mov
stos
push
bound
jmp
pop
cmp
sbb
notl
and
clc
popa
cltd
lods
jp
loope
mov
adc
and
xor
pop
pop
lret
ss
nop
add
xchg
pop
pop
movl
andl
stc
je
fisubs
inc
iret
pop
aas
mov
decb
scas
ja
xchg
sbbb
and
clc
movsb
cli
xor
push
nop
xchg
lea
cli
or
and
pop
mov
cwtl
and
jbe
add
test
fldenv
lea
rcr
pop
add
enter
inc
fstps
rcll
inc
pinsrw
rcrb
popf
imul
iret
xlat
xlat
icebp
pop
push
scas
sub
pop
into
mov
pop
ds
dec
pop
popf
orb
sbb
pusha
pop
and
add
out
in
aam
push
ja
sarb
stos
imul
aam
push
push
movsl
out
movsb
dec
data16
cmc
test
mov
jne
aas
repz
pop
mov
cs
push
pop
jg
xor
push
inc
lret
push
dec
mov
xchg
fsubs
xchg
imul
sub
jmp
or
sbb
in
push
jge
test
out
push
or
push
adc
mov
cmpsb
mov
sbb
jge
push
dec
cmp
popf
xchg
sub
jmp
mov
xchg
add
pop
and
ljmp
fs
lock
movsl
fwait
gs
push
outsl
fnsave
jp
add
and
add
dec
fsubl
push
mov
mov
xchg
or
push
mov
ds
mov
mov
adc
pop
ud2
subl
iret
ljmp
push
and
jbe
xor
lcall
aad
fldcw
push
enter
leave
data16
push
or
gs
adc
ja
cwtl
push
pop
mov
mov
or
popf
dec
or
outsl
daa
push
stc
aam
jmp
mov
out
aas
out
mov
push
xor
mov
push
out
mov
ret
mov
push
shll
and
test
jne
push
adc
xchg
mov
das
and
push
xchg
test
fisttpl
aaa
pusha
mov
push
push
pop
push
mov
je
inc
mov
or
test
mov
out
xor
inc
jmp
insl
into
push
rcr
sbb
test
sbb
out
push
pop
xchg
ja
ret
sahf
push
sbb
incl
or
pop
mov
jnp
out
sub
jl
mov
mov
mov
loope
push
cwtl
cmpsl
mov
enter
jbe
cmp
mov
pop
ja
andl
repz
fst
push
pop
mov
sahf
cmp
jp
inc
pushf
scas
push
xor
push
ds
ficompl
mov
lahf
stos
aas
jmp
inc
mov
cmp
push
gs
pop
fdivrl
jae
pop
sbb
pop
push
sarl
pop
lods
lret
sub
nop
cmp
das
ret
xchg
or
outsb
push
xchg
push
mov
push
xchg
and
xchg
std
inc
out
or
sahf
cld
pop
movsb
mov
ficomps
sub
and
lds
out
repz
inc
cmp
fildll
dec
aad
fimull
mov
lret
ja
add
or
push
cmc
push
push
sbb
jne
pusha
hlt
mov
fdivrl
and
xor
xor
insb
jb
pop
int3
sub
test
pop
cmpb
lret
push
ss
lods
int
nop
adc
fisubrl
cmp
pop
dec
push
xlat
les
xchg
cltd
testl
aaa
push
pop
mov
mov
test
test
jne
push
mov
fistpl
rcll
or
sbb
push
push
js
xchg
push
mov
int
adc
xchg
lret
pop
push
fiaddl
push
push
add
ljmp
push
shll
data16
mov
nop
pop
fcmovbe
les
bound
lret
xor
inc
push
mov
mov
icebp
ljmp
dec
rcl
push
adc
inc
aam
pop
jno
mov
or
scas
pop
push
push
jae
hlt
mov
push
lahf
mov
ffreep
sti
jns
aaa
add
je
lret
fwait
mov
adc
shll
or
call
jbe
mov
xor
leave
push
adc
in
or
lcall
out
sahf
and
out
push
mov
rcll
xor
push
rcll
xlat
dec
inc
rclb
sub
adc
push
stc
mov
scas
sbb
jno
fbstp
and
dec
out
out
cmpsb
push
cmp
fbld
icebp
and
es
xor
les
jno
loope
pop
data16
loope
and
and
in
add
xchg
iret
sbb
sbbb
sbb
xor
scas
inc
and
ds
push
aas
shl
fisubrs
rorb
aaa
nop
adc
dec
loope
cs
stc
push
dec
dec
inc
sbb
incb
loope
adc
cs
pop
js
fwait
sbb
inc
push
stos
loope
out
pop
or
mov
or
clc
xlat
mov
jno
aaa
and
push
pop
pop
and
push
stos
lock
mul
out
adc
shr
sbb
and
cmp
jbe
addl
ljmp
es
adc
fistpll
in
call
aas
mov
cmp
push
pop
mov
push
adc
jno
into
arpl
mov
fcomi
fs
cs
loopne
dec
nop
rorl
sbb
mov
and
adc
jnp
dec
call
xor
pop
ds
loope
cs
fisttpl
mov
iret
jl
pop
cltd
shrb
pop
addr16
cmpsl
ret
stc
add
seta
aas
push
jne
cmp
and
fdivp
call
sbb
lods
push
ljmp
adc
rcrl
mov
xlat
pop
adc
sub
rcll
loope
sbb
mov
outsl
mov
pop
xor
push
inc
adc
gs
loope
in
jbe
pop
rcl
movsl
mov
mov
fmull
push
movsl
push
cmp
sub
scas
inc
xchg
scas
int
int3
mov
push
push
push
mov
ret
sub
idivl
mov
cmp
push
movsb
jecxz
fwait
mov
and
movsb
loope
xor
fisubs
mov
cmp
xor
and
xchg
mov
xchg
jp
jl
dec
dec
loop
add
inc
fucomip
jg
int
in
mov
jmp
jns
repz
push
cwtl
dec
mov
nop
es
test
push
pop
mov
mov
mov
adc
dec
add
pop
scas
push
lret
sub
xchg
dec
push
fistps
push
negl
pop
fdiv
jne
repz
mov
ss
cwtl
mov
dec
sbb
pop
loope
cvtpi2ps
push
mov
lds
jae
icebp
enter
or
adc
aas
mov
jg
sbbl
push
mov
cs
sbb
addr16
or
test
push
lds
and
push
mul
add
orl
fcmovu
ss
inc
sbb
imul
adc
pop
jp
xchg
pop
lret
lods
push
mov
aam
xchg
xor
push
or
push
gs
add
in
push
aad
fdivrs
mov
cltd
adc
int
arpl
or
out
pusha
pop
xchg
pop
inc
loopne
pop
fdivrs
icebp
out
enter
inc
dec
pop
call
cmp
stc
pop
push
das
in
sahf
adc
cmpsl
shll
daa
push
pushf
or
sbb
sbb
aaa
outsb
movsl
test
pop
shl
fldt
cmp
cmp
push
mov
cmp
or
sbb
popa
push
ljmp
scas
pop
movsl
pop
jae
sub
fstl
fidivrs
addr16
ljmp
inc
xor
mov
lods
push
cmp
data16
xor
nop
out
push
push
pop
arpl
cmpsl
ret
imul
mov
movb
push
adc
icebp
cmp
inc
pop
hlt
sub
add
add
imul
notb
xchg
enter
test
inc
popf
push
popa
push
or
xchg
push
insl
lret
push
addl
cli
jnp
pop
jp
lret
pop
fildl
push
ja
jle
and
jl
xchg
lahf
mov
jecxz
addr16
rclb
xchg
lret
loopne
xor
xchg
push
rorb
mov
fsub
aad
mov
push
jge
in
or
xchg
roll
loopne
xchg
aaa
push
fcmovnbe
sti
adc
pop
adc
and
push
jns
test
and
push
aam
push
ficompl
in
fldl
xchg
je
out
dec
push
das
imul
cmp
cmp
jb
fucomip
hlt
sti
push
pop
dec
jle
jns
cltd
enter
aad
gs
leave
pop
sbb
fstps
inc
cmc
mov
mov
scas
add
adc
stc
sar
jge
dec
jecxz
sti
fmull
add
test
aaa
in
jnp
xor
pop
jmp
push
push
test
cwtl
jl
mov
insl
adc
push
insb
mov
popa
push
xchg
hlt
std
add
rcll
dec
jo
call
push
push
ss
out
jecxz,pn
push
xchg
out
adc
shl
gs
popa
push
aaa
jb
mov
call
outsl
jno
push
loopne
dec
movsb
xor
mov
std
jmp
fs
push
adc
mov
addr16
pop
sahf
add
inc
aam
aaa
loope
cmpb
mov
mov
pop
pop
idiv
mov
adc
push
jmp
push
mov
aam
mov
push
jg
pop
mov
mov
or
push
outsb
cli
and
push
fndisi(8087
xchg
xor
dec
std
mov
ja
sub
push
xchg
rcrl
js
cltd
xchg
xchg
outsl
push
scas
fdivrl
xor
jo
lret
leave
and
mov
pop
fbld
push
adcl
dec
jg
pop
sbb
push
aad
jae
ljmp
xor
fistps
ret
les
push
lock
xchg
push
lret
cmp
and
lret
push
push
cs
jecxz
push
fildl
mov
or
jle
dec
sub
xchg
mov
inc
into
mov
ja
cld
sbb
pop
mov
jl
in
push
cwtl
push
lcall
add
xchg
fcomp
xor
pop
xchg
test
inc
lret
mov
cli
dec
pop
inc
mov
inc
stos
imul
xchg
push
lods
jmp
adc
or
addr16
dec
xchg
sub
mov
adc
lock
mov
or
sub
cs
add
jne
ds
ficompl
and
pop
pop
or
dec
adc
fwait
aas
mov
sbb
pop
fs
cld
test
movsb
jge
cmp
push
jbe
dec
xchg
clc
fwait
loopne
aaa
data16
aam
jp
bound
pop
xchg
sarl
mov
push
cmpsb
push
shlb
stos
push
pop
xchg
lcall
ret
imul
push
xchg
pop
out
aam
push
push
mov
or
ja
mov
pop
pop
mov
addr16
in
mov
cmpsl
cmp
sarl
push
out
pop
lods
xlat
add
insl
cmp
sti
push
mov
and
jle
push
insl
push
mov
sti
and
add
jg
into
mov
stc
add
push
dec
jo
pop
arpl
test
pop
outsl
push
inc
cmp
inc
mov
push
push
fisubrs
jp
stos
ds
pop
test
xor
sbb
jmp
scas
push
das
sub
jno
pop
outsl
rorl
adc
sbb
in
mov
mov
int
ret
sbb
push
dec
inc
pop
xor
jmp
aas
aaa
fnstenv
cmp
fucomip
sub
fs
nop
ror
pop
add
fisubrs
lret
sti
adc
insb
lea
enter
jge
in
lock
or
pop
cs
pop
sub
loope
jb
rcll
add
sahf
inc
mov
ret
leave
sub
adcb
or
mov
pop
scas
cwtl
sub
pop
filds
adc
ror
insb
mov
scas
mov
loope
adc
std
sbbl
cmc
lcall
xchg
mov
lock
rorb
push
fisttps
stc
lds
xchg
dec
jge
pop
xor
mov
inc
fndisi(8087
dec
cwtl
lds
fld
dec
push
test
add
jbe
nop
mov
jge
dec
xchg
ja
mov
rcll
dec
cmp
and
sbb
push
mov
sbb
pop
cld
loopne
iret
cwtl
lods
cmp
mov
xchg
and
dec
lret
int
pusha
xchg
loope
add
mov
test
adc
loope
mov
pop
or
push
sahf
mov
in
divb
in
cmp
rorb
pop
stos
cmpb
lock
and
mov
dec
insl
xchg
inc
sub
jl
add
pop
ret
bnd
fbstp
mov
jns
adc
lock
xchg
test
jmp
mov
mov
or
js
push
pop
lods
fildll
or
mov
or
xor
cmpsl
pusha
aas
pop
push
lods
pop
outsl
ret
movsl
dec
push
das
stos
pop
imul
cmp
nop
loop
jg
std
push
loop
mov
loop
fldenv
add
shll
push
push
push
inc
mov
xchg
cwtl
mov
xchg
pop
xchg
imul
in
xchg
fsubl
pop
xchg
add
fwait
push
xchg
cmp
inc
roll
data16
sbb
imul
push
in
hlt
lds
push
jmp
mov
xor
stos
pop
out
ja
out
jnp
xlat
mov
les
pop
push
cmpsb
push
cwtl
je
jnp
addl
mov
push
adc
push
sub
mov
inc
loop
pavgw
rcrl
push
mov
jmp
out
outsl
sbb
cli
ds
xor
pop
and
repz
ja
jmp
jp
pop
cmpsl
push
push
pop
cmp
sbb
ja
mov
mov
xlat
pop
test
loope
xchg
mov
imul
sub
cs
dec
push
push
or
pop
sub
sti
pop
lea
and
cltd
jns
es
repnz
daa
adc
ficomps
arpl
push
xchg
lds
nop
mov
pop
into
mov
fwait
adc
inc
rolb
or
jp
push
dec
repz
pop
jg
inc
icebp
leave
stos
ret
pop
sti
jns
xchg
push
sti
es
xchg
je
imul
in
cmpsl
lds
xlat
test
dec
push
inc
pop
or
add
gs
jge
adc
or
push
scas
clc
decl
mov
sub
enter
dec
mov
adcb
arpl
pusha
daa
ja
out
in
neg
xchg
xchg
push
lret
or
xchg
shlb
pop
mov
adc
jg
cmc
pop
jne
add
pop
inc
lahf
cmp
push
insl
fimull
ret
xlat
les
sarl
outsl
out
add
lods
cld
in
in
out
xor
sbb
sub
cmpl
subb
mov
out
jecxz
add
ja
dec
push
faddl
jl
push
or
fstps
mov
push
push
mov
aas
lahf
or
loopne
xchg
adc
pop
pusha
cmp
xorps
cmp
push
push
xor
cmc
inc
xchg
mov
or
mov
and
ret
sbb
addr16
xor
cwtl
push
inc
jbe
jb
cld
or
jns
push
aaa
inc
sbb
insl
xor
pop
gs
addr16
outsl
push
into
subb
push
sbb
sub
aam
idivb
dec
adc
push
out
cmp
pop
xor
mov
bound
xchg
cs
push
popf
sub
mov
xlat
notl
mov
enter
leave
sub
outsl
fimuls
mov
lea
mov
xchg
xor
fsubr
dec
enter
pop
pop
pop
ror
push
dec
push
lock
push
push
cmp
jb
inc
sub
in
jecxz
push
cwtl
xchg
stc
fistl
popa
bnd
fmul
sub
dec
mov
pop
push
arpl
leave
daa
ret
adc
push
lods
sub
mov
fsubp
cmp
pusha
sub
pop
sub
jno
xor
pop
or
jp
push
lods
xchg
jnp
or
mov
push
imul
icebp
mov
hlt
cmpsl
inc
jecxz
inc
shrl
pop
cld
jb
mov
push
push
jno
mov
push
mov
dec
ret
fs
mov
mov
add
push
mov
cmc
xor
rcll
xor
shll
sub
adc
push
pop
mov
cmp
mov
add
mov
ss
repnz
push
push
inc
pop
cli
stc
xchg
inc
test
leave
or
adc
out
fsubrs
push
lea
ljmp
mov
xchg
dec
test
mov
push
fdiv
dec
adc
dec
testl
sbb
clc
mov
cmpsl
push
rorl
push
add
jae
loop
and
or
push
out
jo
dec
xor
sub
jl
pop
es
outsl
push
mov
push
jnp
cmp
mov
stc
add
xchg
cwtl
xor
xchg
sub
inc
ficoml
js
icebp
lret
lret
xchg
enter
add
cwtl
pop
mov
sbb
negl
lret
fldcw
mov
sahf
pop
push
cmpsb
push
out
inc
push
hlt
jg
shll
dec
cwtl
mov
aas
pop
out
aad
xlat
les
ret
pop
and
call
lock
jbe
pop
pop
xchg
mov
lcall
loope
shrl
inc
xchg
ficoml
dec
adc
fnstsw
cs
and
ret
add
movsb
setg
add
pop
xchg
sbb
ja
push
pop
dec
aam
mov
fucom
dec
sbb
xor
rcll
icebp
pop
aam
pop
rclb
lods
inc
dec
dec
mov
loop
or
out
mov
push
rorb
out
mov
icebp
mov
jl
xor
mov
lds
pop
mov
sub
sub
pop
push
pop
dec
fpatan
pop
jae
cmc
test
add
pop
arpl
cmp
mov
sbb
aas
mov
nop
adc
push
or
jns
and
pop
dec
jae
outsl
push
add
fmul
push
mov
sbb
aam
mov
mov
fistl
nop
call
cmp
push
gs
loope
pop
sub
push
inc
lret
fdivr
shrb
lds
mov
xor
movl
hlt
mov
push
int3
push
rclb
push
jno
push
cld
push
popa
into
stos
adc
enter
xchg
push
imul
in
lods
add
push
pop
movl
mov
sbbb
or
rcl
jge
icebp
loope
inc
roll
fwait
sbb
pop
pop
xor
jne
pop
xlat
xchg
sub
mov
aaa
mov
daa
sbb
jp
mov
jg
out
or
test
pop
mov
sub
nop
lock
je
movsb
out
push
lods
dec
mov
arpl
mov
or
cmp
push
or
jp
mov
arpl
xchg
push
scas
add
and
fldt
pop
pop
insl
loopne
mov
int
mov
push
add
out
nop
lcall
mov
rorl
imul
in
pop
push
push
out
sub
mov
pop
and
mov
test
jecxz
ja
pop
pop
mov
and
cmp
push
inc
adc
jl
sbb
pop
mov
mov
dec
les
adc
mov
pop
inc
imul
loope
shrb
jo
push
inc
enter
inc
cld
dec
mov
add
or
push
sbb
test
fcomps
test
pop
addr16
iretw
mov
add
lods
push
fiadds
sbb
in
addr16
mov
xchg
movsb
and
sub
cmp
js
pop
clc
xor
jo
out
stos
lret
js
fwait
jo,pn
xchg
jae
aam
cmp
sub
mov
mov
ja
jmp
cmp
aas
clc
cwtl
push
fmull
mov
adc
cli
ja
shlb
cmp
jle
pop
je
mov
push
cmp
rcrl
sbb
xchg
push
and
out
ret
roll
or
sbb
lods
pop
adc
int3
add
jmp
out
sbb
movsb
push
cli
in
push
jge
cli
addr16
jbe
in
adc
pop
addr16
mov
pop
into
lret
and
rcrl
rorb
push
mov
push
rorb
loopne
push
mov
xor
sub
stc
inc
inc
mov
adc
out
cmp
int3
sahf
int
rorb
imull
jge
into
pop
lcall
insb
and
inc
lods
aaa
ja
adc
ficoms
add
pop
push
imull
ja
std
out
dec
ucomiss
push
cmpsb
inc
popf
pop
fstpt
out
pop
jge
and
shll
ds
push
test
lret
movsb
repnz
pop
dec
out
lods
lret
xchg
sub
cmp
hlt
cmp
jb
fdivrs
out
xchg
jmp
cmp
pop
lahf
inc
adcb
popa
pop
int
scas
stos
imulb
pop
cmp
push
in
and
lret
push
sarb
bound
sub
aas
push
mov
mov
scas
jl
pop
pop
cli
push
xor
sbb
and
adc
mov
inc
push
adcl
mov
xchg
inc
stc
mov
push
ds
out
push
ja
jno
xchg
pop
scas
ss
pop
lcall
add
in
mov
popf
pushf
xchg
sbb
xor
or
dec
dec
aam
and
fnstenv
pop
ret
scas
push
iret
int3
es
fstpt
adcl
ds
cwtl
adc
mov
jl
not
test
push
test
or
push
pop
cmc
mov
xlat
ja
lret
fmull
push
out
aam
jmp
cltd
js
shll
int3
imul
sub
nop
push
lret
fwait
cmp
adc
push
fistps
pop
iret
insl
sbb
push
cs
push
push
popa
and
push
daa
and
mov
popf
xor
cmp
cmp
and
xor
push
mov
lret
inc
xchg
lret
lock
xchg
pop
rolb
icebp
jl
jnp
fisttpl
out
jg
inc
sub
aam
test
mov
mov
cli
out
mov
scas
cld
mov
mov
mov
notl
xchg
mov
test
imul
das
mov
and
leave
and
lea
test
cmpsb
inc
cmp
mov
xor
fnstcw
push
pop
mov
xor
push
mov
enter
mov
or
sbb
loope
sbb
shll
xlat
jecxz
pop
xchg
push
add
dec
push
cmp
mov
addr16
in
outsl
fstps
divb
adc
and
add
cmc
decl
out
loope
jo
test
stos
add
imul
ljmp
out
fisubs
jbe
cmp
jno
xor
ret
push
fld
push
xchg
mov
idiv
mov
fistl
shll
sahf
cmp
mov
in
jns
shll
rolb
shll
iret
je
addr16
mov
mov
cli
push
out
call
inc
repnz
rclb
mov
out
sbb
push
mov
or
adc
mov
pusha
xchg
mov
out
sar
cltd
adc
pop
xor
xchg
int3
adc
enterw
nop
fldt
ficomps
pop
aam
jae
aam
xchg
fadds
nop
fstps
into
mov
push
mov
xchg
adc
sarl
mov
adc
daa
movsb
bound
pop
mov
mov
shll
iret
push
mov
push
jle
cmp
bound
add
leave
cmp
mov
pop
dec
adc
gs
push
dec
pop
push
xchg
xchg
repnz
push
mov
loope
idiv
inc
int
xchg
ja
testl
jg
rclb
ret
fnstenv
push
jmp
and
jb
pop
and
dec
imul
or
inc
les
arpl
and
push
jb
mov
adc
add
fistl
dec
xchg
xor
pop
jge
insl
xchg
loope
push
lret
ja
mov
dec
ss
imul
jl
push
movsl
call
mov
dec
xor
sbb
out
cmpsb
or
xchg
aaa
and
jecxz
lret
aas
lcall
shrb
xchg
pop
pop
xchg
or
push
stos
icebp
hlt
xor
mov
popf
mov
loope
pop
or
cmp
jecxz
imul
lods
cmp
add
mov
jle
enter
xor
cld
cmp
mov
add
cmp
xor
jmp
test
cmp
fcoml
ss
mov
sub
cmp
xchg
psraw
or
sbb
jo
jmp
jne
aad
add
cmp
mov
in
push
fidivs
mov
or
pop
sub
mov
in
xor
cs
ficoml
insb
arpl
mov
or
sub
adc
pop
fxch
testl
dec
in
int
loop
mov
mov
aad
sti
push
mov
push
pop
add
int3
inc
cmp
mov
inc
notl
and
adc
cld
inc
out
sti
sbb
push
shlb
add
lds
insl
ret
enter
cmp
notl
mov
js
push
roll
daa
ja
lods
es
push
adc
sbb
xchg
dec
movsl
and
mov
or
or
mov
daa
xchg
lret
push
cmp
jb
pinsrw
mov
xor
dec
pop
ret
adc
xlat
xor
xor
add
clc
pusha
inc
cltd
mov
push
jne
ficomps
cmpsl
popf
pop
sbbb
mov
adc
mov
pop
xchg
out
es
push
ss
inc
cs
jl
push
enter
pop
jp
push
idivl
mov
mov
popa
ljmp
dec
int
and
clc
push
xsha1
cmpsb
dec
jnp
mov
cs
push
jmp
call
ror
push
lds
sub
push
ret
shll
movsl
lcall
adc
sahf
dec
inc
push
or
data16
popa
dec
js,pt
lock
arpl
mov
mov
sub
cmpsb
push
add
lds
mov
ss
aas
and
mov
xchg
fadds
xorl
fbld
jge
inc
mov
stos
mov
mov
mov
mov
mov
insl
in
ja
mov
push
or
movsl
dec
test
pop
mov
jle
fnsave
push
inc
test
sub
addl
loopne
test
adcl
mov
pop
mov
hlt
xor
ret
pop
movsb
lock
clc
shlb
and
sbb
fbld
push
insl
in
pusha
mov
mov
insb
int3
mov
cmp
fst
push
dec
fwait
incl
js
fsubl
mov
ret
cmp
jmp
enter
pusha
push
and
pop
jp
pop
or
js
xchg
mov
popa
je
iret
pop
mov
fdivl
ret
push
xchg
cli
or
mov
push
jbe
pop
std
stc
daa
rclb
shlb
shr
fsubrl
cltd
ss
xchg
sub
push
mov
add
xor
jo
out
cmp
test
jecxz
and
lods
loop
push
pop
lret
stc
jbe
xchg
dec
andb
cmp
ljmp
xor
nop
lds
lods
mov
cmp
mov
push
lods
int3
addr16
inc
dec
mov
shrb
outsl
add
xchg
loop
jbe
sub
xor
pop
daa
sub
xor
or
gs
aas
movsb
cmp
in
pushf
scas
mov
outsl
jno
insb
out
or
call
jle
mov
scas
mov
repnz
push
xor
cs
int3
pusha
mov
fucomip
pop
fists
xor
cmp
sbb
pop
outsb
push
push
cmp
add
cmpb
icebp
mov
dec
fs
lods
mov
shll
push
fisttpll
outsl
mov
ss
nop
push
inc
adc
xor
mov
lods
negb
sub
xor
idiv
mov
adc
pop
add
ja
scas
lret
rol
mov
das
flds
jecxz
cwtl
jp
xor
xchg
xchg
mov
btc
out
loope
in
pop
fwait
mov
inc
mov
and
cmpsl
cld
mov
nop
add
pop
sub
jmp
mov
xlat
jne
push
outsb
mov
cwtl
pop
and
sbb
js
shll
xlat
mov
insb
lods
bound
in
test
jl
cmc
lods
das
adc
lods
fwait
mov
mov
test
enter
inc
pop
mov
cmp
iret
lods
add
lea
xor
cli
mov
cmp
shll
lcall
fstl
arpl
icebp
fcoml
mov
mov
xor
in
loope
movntq
mov
inc
rorb
dec
xchg
xchg
push
daa
pop
push
adc
out
mov
sbbl
mov
xchg
shl
xor
mov
cmpsl
push
loope
push
sbb
popf
ficoms
sbb
lock
loope
neg
and
cltd
sbb
inc
adc
into
gs
inc
rcl
fwait
dec
inc
out
jbe
mov
jne
movsl
sub
and
imull
jle
fcom
repz
insb
aas
push
xchg
inc
movsb
push
les
cmp
jno
or
xchg
js
pop
and
push
inc
xor
push
or
and
sbb
outsl
adcl
insl
pusha
push
inc
and
mov
dec
loope
fs
sbb
inc
lcall
ficoml
in
in
leave
add
sahf
push
fucom
fwait
dec
mov
sbb
insl
jne
ljmp
clc
in
and
jo
insb
aaa
rcll
xchg
lods
cmpsl
fdivrl
sarb
cwtl
xlat
jo
pop
repz
xor
aaa
shrb
add
lods
pop
out
sub
rcll
push
in
push
sbb
cltd
sbb
add
mov
mov
adc
leave
pop
pusha
xchg
mov
jg
and
pop
clc
lret
aaa
je
push
cmp
xlat
das
mov
xor
ja
cmpsl
es
test
rolb
push
push
clc
mov
popa
insb
jmp
aaa
pop
jcxz
imul
leave
add
push
push
dec
mov
test
lds
push
call
lods
dec
xor
movsl
hlt
sub
icebp
push
push
pushf
inc
sti
mov
loop
js
add
mov
jecxz
cltd
push
mov
push
movsb
cmp
sub
or
jnp
push
jecxz
or
insb
ja
adc
mov
stc
xchg
flds
shlb
push
sbb
cmp
push
imul
sub
pop
ja
shl
xor
lods
pop
or
cmp
nop
pop
push
and
mov
pop
sbb
das
fildll
push
lods
inc
sti
jns
jo
shrb
cmpsb
ljmp
sub
mov
aaa
xchg
in
insb
sub
inc
and
jg
dec
lods
xchg
push
ud2
xchg
addr16
lods
imul
movsb
dec
out
xchg
mov
int
mov
out
pop
movsb
inc
test
repnz
sub
cmp
inc
pop
sub
pop
pop
lods
sub
fdiv
rorl
xorl
inc
pop
and
pop
pop
push
rcl
cmp
notb
lock
out
movsb
push
hlt
aad
mov
jno
lcall
pop
js
or
jno
daa
scas
cmp
push
xchg
mov
or
cmpsb
xor
pop
mov
int
push
lods
idivb
or
movhps
dec
and
cmp
jle
inc
mov
sbb
pusha
pop
or
cmpsl
nop
and
pop
movsb
int
lret
pop
mov
pop
jp
mov
or
mov
xor
notb
adc
jne
enter
decb
fsubrl
sub
dec
rcl
cmp
sbb
lret
pop
cltd
lock
rorb
mov
xchg
push
js
pop
mov
ret
add
push
arpl
push
clc
inc
push
subb
sbb
and
mov
rcrb
jnp
dec
scas
sbb
mov
fstpt
leave
pushf
loope
push
out
xchg
pop
in
lahf
lods
stc
xchg
cmp
jg
cmovle
pop
mov
pop
jl
stos
pop
push
push
lea
jae
mov
rolb
daa
arpl
push
jg
popa
enter
ss
imul
push
pop
sti
xchg
cmp
pusha
push
data16
outsl
lock
push
mov
adc
and
inc
loop
pop
not
pop
out
jg
ja
icebp
outsl
clc
sbb
aad
rorb
and
inc
sti
cld
pusha
mov
in
gs
xor
adc
addr16
xchg
add
mov
pop
in
aas
adc
addr16
inc
dec
sub
imul
fcmovu
add
ficoml
push
lds
gs
jo
mov
fs
int
and
cmpsb
adcl
inc
pop
aaa
jbe
addr16
pop
out
jne
cli
lods
shrl
pushl
addr16
push
pop
adc
call
lock
mov
jp
imul
rep
dec
in
jne
sahf
cmp
pop
pop
xor
arpl
dec
xlat
inc
roll
lock
int
dec
push
pop
shrb
stc
pop
jo
inc
add
push
stc
test
xor
lret
das
aas
stos
pop
dec
adc
sbb
insb
xorl
sbb
mov
mov
setbe
ds
and
sbb
push
or
add
push
pop
scas
rclb
mov
mov
fcoml
push
repz
jecxz
push
mov
jmp
mov
xor
jnp
sub
or
jns
sbb
cmpsb
je
xlat
fcmovnu
imul
ret
pushf
pop
push
popa
add
jae
test
das
cwtl
addr16
xchg
pop
cmc
mov
inc
mov
mov
popf
xor
lods
into
ss
pop
pop
pop
mov
arpl
inc
push
inc
xchg
xchg
sbb
pop
sarb
push
adcb
les
cmp
jnp
ret
adc
push
int
push
mov
dec
mov
arpl
ljmp
dec
out
outsl
ja
mov
push
sbb
mov
cmp
sub
inc
xchg
pop
inc
js
lret
movb
arpl
xor
pop
popf
sub
adc
mov
pop
jnp
pop
enter
outsb
push
repnz
ret
lea
and
cli
pop
push
sub
test
xor
push
inc
xor
xlat
pop
dec
lds
push
cs
pop
jbe
lock
fwait
rcll
dec
push
and
pop
aad
cltd
adc
inc
sti
pop
fists
hlt
repz
mov
sbb
or
adc
cmpsb
fdivl
adc
push
popf
setl
push
jnp
mov
popa
scas
das
ja
sub
push
enter
push
popa
movl
mov
movsl
pusha
jbe
stos
mov
mov
lea
add
add
mov
xor
add
sub
shl
xchg
addr16
jle
push
xchg
fs
out
mov
sbb
xor
push
push
testb
sbb
adc
out
lret
jne
jns
pop
adc
mov
es
imul
ficompl
xorb
or
push
mov
mov
push
inc
or
xor
add
adc
movb
ljmp
or
add
mov
fs
push
mov
neg
sbb
push
mov
jns
jbe
push
iret
pop
push
adc
daa
das
inc
sti
mov
test
xor
stc
inc
mov
popa
ja
mov
shlb
adc
push
inc
out
es
or
mov
sbb
jecxz
pop
ficoms
jg
addr16
jle
repnz
mov
push
fcomps
cltd
and
lahf
mov
mov
add
and
pop
je
ja
aaa
stc
das
lahf
ss
xor
pop
xchg
dec
scas
push
bound
mov
mov
sahf
cwtl
push
enter
les
test
sti
mov
rcll
inc
mov
jl
icebp
sahf
push
shl
pop
addb
xor
mov
jae
out
mov
or
mov
sub
ret
mov
add
daa
rorl
mov
aas
int3
ss
push
push
sarb
mov
xlat
in
cmp
inc
adc
shr
dec
pop
pop
shrb
xor
or
aaa
mov
jmp
dec
scas
pop
inc
push
rclb
xor
sbb
jp
push
fs
test
jae
iret
mov
imul
sbb
ficomps
adc
sub
lods
movsl
push
fs
orl
xor
dec
cwtl
inc
mov
testl
movsb
cmp
in
or
in
mov
push
adc
jl
and
iret
adc
roll
jmp
lock
test
cmp
sbb
inc
push
pop
lock
mov
imul
out
aam
push
push
mov
mov
test
jnp
adcb
pusha
in
inc
mov
orl
into
pop
sub
fisubl
js
js
mov
ljmp
out
lahf
xor
inc
xchg
aas
push
inc
mov
scas
xchg
stc
mov
xchg
movsl
popa
mov
jno
push
xchg
pop
fs
test
xorl
xchg
sub
lret
in
sar
jl
adc
pop
enter
mov
push
cmp
mov
and
mov
inc
rcll
mov
loopne
mov
add
test
test
pop
push
mov
out
xor
xchg
cmpl
sub
loopne
lcall
movsl
push
cmpsb
mov
adc
cmp
cltd
push
pushf
pushf
mov
adc
or
inc
pop
sbb
aad
push
jp
daa
loope
mov
xor
js
mov
adc
test
inc
jmp
shll
inc
push
rolb
popf
mov
and
adc
or
sub
lock
mov
push
pop
mov
in
and
inc
in
xchg
adc
dec
push
push
cmp
insb
stos
mov
addr16
or
ret
inc
push
jmp
lret
clc
mov
int3
cmp
pusha
lods
ret
aad
pop
imul
mulb
xor
cmpsl
push
lea
mov
xchg
bound
leave
jnp
push
mov
push
or
or
xchg
push
xchg
dec
mov
mov
jbe
imull
push
cmpsb
mov
stos
dec
mov
and
mov
mov
cwtl
in
cmp
dec
jns
jno
xor
lds
dec
cmpsl
push
popf
test
or
scas
rclb
cmpl
addl
xchg
les
popf
aas
jp
xchg
pop
pop
pop
jo
or
pop
mov
jecxz
dec
push
push
sub
and
cmpsb
pop
mov
or
repnz
add
and
rcl
mov
repz
ja
cmp
or
push
add
pop
jnp
ja
xchg
rcll
cmp
dec
sahf
push
and
mov
xchg
arpl
out
pop
dec
xchg
pop
push
ret
mov
jnp
push
mov
test
add
test
in
into
std
xlat
add
pop
pop
nop
and
xchg
leave
sti
inc
lahf
fwait
sbb
cmp
rorb
and
and
push
in
add
jecxz
mov
idivb
std
sub
sbb
fcmovnu
jle
test
hlt
mov
push
sub
xchg
pop
cmpsb
mov
movups
aaa
nop
pop
xchg
cmp
mov
xchg
push
sub
inc
movb
adc
jnp
xor
and
mov
out
repnz
out
xchg
xor
push
mov
lea
push
xchg
sub
xchg
push
xor
cmp
popf
push
pop
addr16
mov
inc
leave
fidivs
cmpsl
das
loopne
inc
loope
js
adc
push
mov
fadd
inc
push
mov
mov
pop
pushf
test
push
and
push
ret
jl
sar
push
jne
cmp
sub
push
dec
lds
cwtl
test
sub
push
stos
jno
push
and
bound
out
add
popf
push
push
add
roll
push
cld
in
lahf
add
out
lea
dec
cmpsb
mov
pop
iret
xchg
push
decl
pop
dec
out
dec
addr16
xchg
xor
inc
movsl
xchg
mov
xchg
jns
xchg
push
pop
addb
cld
xchg
dec
push
divl
aad
or
mov
and
push
arpl
xchg
pushf
push
adc
clc
icebp
pop
lods
cwtl
mov
adc
insb
push
gs
cmp
pop
mov
adc
es
stos
std
daa
outsl
push
das
or
sbb
xchg
pop
mov
addr16
es
mov
mov
lea
cmp
mov
mov
inc
fnstcw
inc
or
inc
mov
pusha
out
jecxz
push
push
push
stc
push
sbb
negb
shrb
int
sbb
inc
mov
push
dec
mov
pop
ret
fistpl
into
add
jecxz
fs
in
int3
and
mov
test
sub
roll
loope
insl
shlb
mov
aas
mov
push
add
xchg
xchg
add
outsl
std
xchg
jp
shr
mov
popl
pushf
imul
repnz
jp
int3
jb
pop
add
lret
sub
mov
xchg
jecxz
nop
add
insl
test
es
daa
mov
push
lods
cmpb
test
int
cmp
je
xchg
mov
mov
mov
stos
mov
lcall
cmp
jl
cmp
jnp
sbb
shr
xchg
pop
clc
add
pop
or
sub
std
xor
scas
imul
sbb
aad
jnp
stc
pop
mov
sbb
mov
xor
xor
cmp
lret
pop
int
push
fildl
jmp
dec
pop
shrl
movsl
loopne
add
loope
mov
cmp
cltd
mov
jns
mov
mov
adcb
adc
push
aaa
pop
in
fnstsw
push
gs
fsub
add
xor
push
and
adc
fbld
push
aas
push
cmp
jne
or
jp
pop
and
repnz
lahf
ljmp
lret
pop
cmp
pop
xchg
xchg
and
andl
clc
testb
outsb
shll
dec
push
cmp
or
inc
out
lods
jno
mov
jb
lods
pop
fcoml
mov
pop
add
xor
pop
leave
rolb
movsl
pop
xchg
sbb
ss
cmpxchg
mov
imul
loope
das
mov
push
fsqrt
fwait
inc
dec
mov
ss
out
xor
mov
loope
out
sbb
xor
ja
or
call
inc
push
push
xchg
pusha
in
scas
dec
es
andb
fneni(8087
bound
jle
jecxz
jl
mov
push
insl
jo
loop
push
je
jnp
push
mov
jg
jmp
push
dec
insl
or
xor
xor
loope
mov
inc
imul
inc
loope
sub
sbb
out
push
xchg
mov
test
mov
insl
ret
mov
cmp
rorb
lahf
call
lods
mov
divl
xchg
es
pop
inc
mov
sbb
pusha
int3
loope
orb
or
cld
daa
fldcw
std
or
jns
xchg
shl
dec
int
fisttpl
pop
lcall
or
jns
scas
push
mov
push
pushf
negl
pop
pop
lods
push
fnsave
movsl
pop
lds
int
pop
out
shrb
or
mov
mov
add
cmp
ja
jno
xchg
sbb
or
push
push
sbb
das
jp
push
push
cs
cmpsl
push
jge
ljmp
push
fdivrs
lds
xchg
adc
dec
pop
jmp
xchg
pop
popf
imul
add
pop
popa
push
fwait
test
cmc
jne
adc
pop
xor
stc
lods
hlt
mov
xlat
push
testb
inc
and
jp
je
imul
or
clc
out
mov
mov
inc
and
notb
xchg
mov
lcall
xor
xchg
pop
inc
mov
sub
pop
lahf
cmc
sbb
aas
xor
jecxz
fdivrs
stos
or
mov
mov
std
add
iret
lahf
js
pop
pop
fimuls
je
lods
ja
out
pop
jnp
imul
cwtl
push
icebp
push
les
jae
push
xor
stc
inc
out
jns
cmp
pop
or
and
add
popa
pop
or
jb
xchg
mov
mov
sub
lcall
dec
xlat
push
imulb
xchg
mov
fcompl
inc
dec
into
pop
push
rorb
mov
mov
sub
popa
ret
cli
stos
fmull
or
popf
scas
push
cwtl
mov
cmp
repz
inc
mov
sub
lods
outsl
push
xor
mov
in
push
lock
pop
dec
scas
jl
icebp
iret
cwtl
jnp
sahf
push
jl
sub
jo
loopne
dec
jbe
pusha
push
test
dec
mov
mov
repz
jns
lret
mov
xlat
mov
jle
pop
enter
aam
jecxz
sbb
dec
popf
sbb
sbb
pop
adc
xchg
and
push
adc
aaa
sar
ljmp
pop
movsb
loope
dec
cmp
mov
pop
mov
cmp
cmp
cmc
out
rcll
pop
daa
xor
cmp
pop
cmpsb
lds
jmp
into
mov
mov
sub
fsubr
ret
das
or
int
mov
sahf
pop
frndint
test
loopne
push
pop
lods
mov
adc
mov
mov
and
sbb
addr16
mov
pop
inc
jb
stos
into
popa
pop
xor
pop
mov
in
pop
fmul
fbstp
pop
add
ficoml
jne,pt
cmp
in
mov
lea
cmp
ds
jnp
jp
stos
push
insl
and
cmp
mov
out
iret
popf
inc
repnz
and
sbb
test
rorl
aas
xor
fadd
xchg
popa
mov
shlb
adc
data16
pop
cmp
rcrb
jae
fnsave
push
adc
jmp
std
sahf
and
pop
sbb
pop
iret
sar
xchg
xchg
cmp
mov
out
sbb
or
sahf
adc
cmpsl
jmp
pop
arpl
sarb
cmp
mov
sub
dec
lds
push
xlat
leave
jnp
mov
adc
popf
push
inc
pop
sarl
xchg
rorl
movsb
cld
rorl
xor
xor
shll
adc
push
dec
adc
fcomps
mov
pop
or
imul
pop
ja,pn
push
and
aaa
data16
fdivrs
xorl
loop
loop
loop
loop
loop
mov
loop
divb
cmp
sbb
mov
je
xor
test
add
test
ja
or
or
cmc
dec
jecxz
pmulhuw
jmp
and
shrb
cmp
mov
jmp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
cwtl
sbb
enter
mov
sub
pop
sbbb
pop
subb
call
andb
xchg
out
pop
rorl
adc
daa
out
fdivs
les
dec
mov
jne
lods
cmpsb
jns
mov
xchg
incl
addl
pop
cmpl
mov
cmpsb
cmp
dec
sbb
imul
inc
movsb
push
daa
jbe
adc
push
adc
std
rolb
sbb
xchg
leave
xchg
fisubl
addb
xchg
xchg
xchg
roll
notb
outsl
push
cmp
sbb
stc
push
fcmovb
mov
in
cli
test
jo
js
sbbb
sbbb
ljmp
subb
repnz
add
cmpsl
inc
sbb
hlt
fs
in
popa
cld
loope
bound
loop
loop
loop
loop
rorb
push
cmp
sbb
stc
fimull
lcall
jp
cwtl
cmp
das
mov
xchg
cmc
cmp
mov
ret
add
sub
or
or
xor
lock
add
loope
pop
mov
or
or
dec
add
add
add
and
adcb
out
ja
or
rcl
push
mov
sbb
test
pop
push
pop
out
ja
js
inc
pop
aas
and
out
lds
mov
xchg
pop
cmpsl
out
xchg
cmp
fcmovbe
popa
mov
or
arpl
mov
popa
js
andb
inc
addr16
jl
test
punpckhdq
lret
sbb
push
xor
mov
adc
out
lret
test
xchg
sbb
inc
cmpsb
icebp
add
adc
push
and
jp
jp
jp
jp
jp
jp
jp
jp
jp
cwtl
or
mov
cmp
inc
pop
xchg
stc
xor
rcl
inc
cmp
mov
std
js
es
gs
sti
mov
cmp
cmp
push
mov
xchg
ret
dec
enter
imul
mov
pop
pop
pop
push
out
lret
and
movsb
push
imul
and
mov
iret
sbb
push
aaa
sahf
test
jbe
and
adc
pop
lahf
ret
add
popf
sarl
jecxz
adc
xchg
shl
data16
push
js
cmp
xchg
dec
pop
xchg
negb
push
out
fidivs
push
push
dec
sbb
flds
dec
push
ds
sti
mov
sbb
out
fiaddl
inc
cwtl
lahf
inc
push
push
sbb
fsts
pop
loope
dec
nop
inc
popf
inc
pop
inc
push
inc
xchg
inc
rcll
mov
ds
xchg
ficompl
pop
sbb
pop
push
in
adc
xchg
cltd
aaa
jge
adc
xchg
fwait
xchg
pop
jb
xchg
fcoml
sbb
pop
dec
xchg
xor
in
ljmp
fdivr
jmp
push
mov
rcll
cmp
push
push
out
inc
fiadds
push
push
es
and
sbb
mov
xor
cmp
adc
push
gs
data16
pop
jl
adc
mov
jg
out
cmp
push
and
jmp
out
jbe
pusha
pop
xlat
cwtl
orps
filds
xchg
arpl
xchg
inc
add
fcoml
out
ljmp
inc
leave
dec
xor
sub
pop
ret
arpl
adc
cmc
adc
xchg
shrl
cmp
clc
push
inc
mov
aad
enter
aaa
inc
out
loope
or
out
push
push
jbe
jge
xor
loope
sarl
arpl
adc
ficoml
out
data16
push
xchg
push
popf
scas
sbb
xchg
xchg
adc
rclb
ja
out
mov
dec
fcmovb
shll
push
pop
cmpsb
dec
adc
mov
jne
xor
fistpl
out
sbb
mov
aam
mov
pop
pop
shlb
sub
and
cwtl
push
push
movsb
movsb
sbb
outsl
cmp
cmp
pop
pop
inc
out
ss
gs
inc
into
rorl
push
cmp
rcrl
cmc
jne
jmp
mov
in
jecxz
dec
mov
inc
lcall
adc
cmp
push
sbb
inc
lds
ret
es
out
cmpl
adc
ja
xchg
cmc
mov
adc
xchg
sub
adc
push
rcl
xchg
dec
and
pop
push
movhps
scas
adc
lahf
adc
clc
or
adc
aaa
inc
push
mov
cmp
xchg
sub
push
xor
insb
pop
sahf
fists
and
push
jecxz
cs
test
cmc
stos
jecxz
push
mov
fstpt
push
push
in
push
stc
lret
out
mov
sbb
xlat
push
popf
pop
pop
push
add
imul
frstor
fwait
aaa
mov
ss
sbb
outsl
out
push
push
es
ret
ljmp
shlb
cwtl
cmp
or
iret
ss
mov
xor
mov
fwait
adc
push
xor
push
cmp
sbb
pop
push
push
sbb
sbb
shll
call
cli
fdiv
sbb
push
push
push
push
notb
call
mov
pop
xor
test
cmp
fwait
adcb
inc
sub
imul
nop
add
add
enter
arpl
out
xchg
sar
out
mov
mov
dec
das
call
pop
sub
aam
imul
shl
and
push
or
push
push
cmp
mov
lods
lcall
mov
or
push
cmp
ja
aas
push
fcomps
test
dec
xchg
inc
adc
lcall
mov
dec
adc
adc
dec
mov
pusha
inc
inc
add
pop
pop
inc
pusha
adc
fnstenv
push
gs
push
fcompl
cwtl
mov
or
daa
pop
inc
push
nop
pusha
push
add
sahf
out
out
hlt
lods
daa
inc
cmpsb
add
jbe
adc
pop
xchg
aad
adc
jne
stos
jnp
jg
subl
sti
xchg
pop
inc
push
xchg
lret
adc
lock
push
addr16
rol
rcl
stc
push
shl
clc
neg
and
push
and
push
neg
mov
push
cmc
and
clc
mov
movzbl
pusha
test
mov
setne
or
mov
test
push
not
sub
lea
not
lods
rol
ror
cmc
not
shr
add
rcl
rol
shl
test
xor
setno
pushf
mov
stos
lea
js
not
sets
mov
call
bt
add
call
aas
sbb
addb
adc
std
inc
xor
adc
idivl
mov
out
adc
jg
popa
test
jnp
cmpb
sti
out
dec
fnsave
lcall
jae
loopne
inc
out
and
nop
dec
pop
movsl
aam
outsl
sbbb
push
xchg
cmp
movsb
xor
mov
addr16
mov
jle
outsl
pusha
add
mov
jmp
jmp
out
loope
in
decl
ja
adcl
movsbl
jmp
repnz
sub
and
inc
pop
inc
fcmovb
fdivs
xlat
int
insb
jbe
jnp
loopne
insl
ja
fbld
repnz
stos
pop
mov
sbb
cli
or
sbb
in
rolb
dec
loopne
fdivrs
lret
lds
push
cmpsb
mov
jbe
icebp
movsb
xor
lcall
xlat
pop
push
pop
push
pop
and
adcl
or
scas
sub
nop
push
repz
sbb
arpl
push
sub
cs
push
sub
test
sub
scas
mov
and
lds
jno
nop
pop
loope
dec
pop
popf
pushf
mov
jmp
xchg
jge
mov
cltd
mov
add
inc
mov
outsl
loope
or
and
gs
outsl
gs
cli
icebp
push
adcl
inc
push
dec
inc
dec
xor
cs
insb
add
addb
adc
add
add
push
and
add
add
in
add
add
add
inc
pusha
mov
mov
pusha
movb
lea
call
jmp
sub
bt
cmp
jmp
icebp
in
out
lea
ret
faddp
fcmovnb
faddl
ret
fadds
mov
enter
dec
les
jbe
int3
mov
cmp
test
cmp
mov
cmpsl
popa
into
adc
dec
inc
and
jno
cli
push
xchg
arpl
mov
xchg
xchg
mov
std
hlt
or
ret
cmp
lods
mov
lods
cmpsl
mov
into
adcl
xchg
std
jmp
fbld
out
call
push
movw
lea
pushf
movw
lea
jmp
push
lea
jae
call
dec
pop
rcr
int3
shl
fwait
jle
jno
jae
repz
hlt
out
test
popa
in
add
pop
outsb
imull
mov
jae
xor
leave
inc
int
xor
cld
jo
ficomps
cmp
fs
mov
enter
xchg
jno
push
jmp
mov
xchg
mov
adc
dec
jecxz
sbb
xor
lock
out
sbbb
in
pop
loopne
mov
ret
ljmp
shr
jo
fiadds
xor
jmp
jmp
sub
pop
outsb
int
or
arpl
and
pop
xchg
adc
xchg
sbb
jb
outsb
inc
test
test
inc
cmpsl
and
pop
xchg
push
into
inc
int
adc
icebp
sbb
mov
cmp
test
aaa
cmp
push
mov
adc
adc
or
repz
jmp
mov
cmp
popa
arpl
repnz
pop
sbb
sbb
sbb
push
push
or
mov
subl
jae
pop
clc
pop
add
cmc
xchg
pop
xchg
in
sub
dec
xorb
sbb
and
rcr
dec
or
push
lahf
adc
outsb
xor
mov
or
mov
inc
and
mov
mov
daa
inc
inc
aaa
pop
dec
ret
aaa
mov
ss
iret
fcomps
jns
jl
or
sbb
xchg
dec
out
mov
aad
out
pop
add
xchg
arpl
xchg
fwait
adc
adc
xchg
adcl
pusha
pushf
movl
push
movl
push
pushf
lea
jmp
pushf
mov
pushf
pushf
movb
lods
pushf
pushf
pushf
ror
pusha
call
push
cmp
pusha
lea
ja
jmp
call
mov
seto
call
jmp
lea
ja
pushf
lea
jb
jmp
ds
mov
push
cmc
not
call
push
lods
addr16
dec
mov
sbb
imul
jns
dec
imul
mulb
adc
xchg
cmp
loopne
push
cmp
aad
call
out
xor
out
pop
cmp
adc
push
dec
cltd
inc
pop
das
jp
jg
push
sbb
imul
cmp
mov
cltd
pop
mov
dec
mov
push
pmullw
ljmp
mov
addr16
push
test
and
mov
and
push
jbe,pt
rcr
and
add
cs
iret
push
jns
addl
imul
inc
ffree
pop
inc
fcmovb
sub
jns
sbb
xor
insl
ja
dec
dec
push
aaa
cmp
sarb
sbbl
mov
sti
sti
jbe
sbb
pop
mov
int
dec
inc
aas
pop
push
sub
fsubrs
daa
cmp
cmp
mov
push
xor
sti
mov
push
cmp
cmp
inc
fidivs
xchg
ss
mov
sti
fcmovnbe
cmp
xor
fcoml
push
xchg
call
cmp
push
fisttpl
pop
iret
cwtl
dec
iret
ror
xlat
dec
rorl
rcrb
mov
iret
or
adc
mov
sbb
add
and
inc
sbb
push
xchg
pop
nop
cltd
xchg
sbb
sbb
icebp
fimull
inc
and
pushf
lea
ja
push
movb
movb
lea
jb
call
pusha
lea
jb
pusha
pushf
lea
jne
pushf
lea
mov
sets
not
not
mov
bswap
push
mov
movb
mov
pushf
mov
movsbw
lea
not
pop
pushf
pusha
pushl
ret
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
addr16
lret
inc
ljmp
pop
push
inc
enter
pop
push
aad
dec
das
sbb
push
repz
notb
cmp
mov
dec
mov
in
xor
pop
or
jae
fs
sbbb
aad
jo
sub
sub
movsl
jae
aam
ljmp
scas
ljmp
rorb
xchg
mov
push
pop
ret
ret
dec
dec
inc
dec
mov
or
rep
movsbw
lea
push
movsbw
mov
pushf
push
movb
lea
jmp
or
xchg
push
test
mov
xor
and
int3
cmp
dec
mov
xor
gs
mov
lea
jecxz
out
adc
ljmp
inc
fidivs
jbe
inc
cltd
add
fidivs
and
push
nop
stc
mov
movsb
xor
shrb
jp
mov
sti
aas
lock
adc
sbb
cwtl
loope
xchg
adc
in
pop
pushl
pushf
movl
pushf
pushf
push
lea
jmp
pusha
jmp
cmc
lret
cmpsl
fistpll
pop
ja
ja
cmc
imul
outsl
out
arpl
or
bound
imul
mul
std
push
push
or
mov
push
popa
sarb
xchg
addr16
adc
xchg
ret
jmp
scas
pop
movsb
push
push
popw
shlb
in
rcl
movsl
adc
pop
or
out
and
aaa
mov
inc
jb
cmc
jle
jl
clc
idivl
insl
lds
add
cs
arpl
popa
jp
js
clc
adcl
dec
lds
faddl
cmc
jp
dec
add
sbb
adc
xor
pop
xchg
mov
adc
iretw
ret
cli
out
arpl
addr16
div
clc
jne
push
or
hlt
ret
dec
xor
or
pop
sbb
xor
adc
sub
hlt
cmp
xor
push
fst
jb
adc
sbb
js
add
test
sub
seto
push
add
and
push
adc
jns
clc
adc
inc
repnz
addr16
movsl
adc
cld
mov
pop
push
mov
fucomip
cld
pop
mov
xor
nop
jne
pusha
dec
test
inc
push
inc
mov
pop
dec
cld
hlt
int3
repnz
stos
out
cmc
cli
ja
stos
dec
dec
mov
or
add
adc
fwait
adcl
jmp
test
mov
mov
lea
mov
or
pop
std
and
sub
jl
sbb
sbb
mov
lea
mov
gs
lret
andb
ret
dec
inc
cmc
ljmp
mov
sub
jl
movsb
sub
pop
lds
jmp
xchg
sbb
xchg
rorl
sub
sbb
xor
out
fwait
clc
out
jecxz
loop
loope
arpl
or
pop
dec
add
bound
ljmp
clc
jb
fwait
fwait
xchg
sbb
jecxz
adc
cmpsb
push
inc
dec
push
ficoml
sub
in
or
lahf
sub
pop
dec
add
bound
ljmp
jns
imulb
iretw
std
inc
cmp
mov
scas
cmpsb
lods
and
jle
add
adc
pop
cmc
xchg
push
or
adc
and
jecxz
out
hlt
push
je
lret
jecxz
xchg
gs
dec
ret
adc
mov
mov
daa
popl
out
sarb
xchg
test
inc
inc
inc
js
dec
push
jmp
out
jmp
test
cmp
loop
mov
cltd
mov
xchg
ficoml
cmpb
cmp
sub
or
jne
xor
cmpsb
out
aam
inc
mov
adc
push
js
out
xchg
fld
dec
ret
lock
fldcw
cmpsl
mov
mov
mov
adcl
imul
cmc
jns
movsl
lea
or
add
push
add
dec
jne
in
js
inc
ret
fsubl
and
call
xchg
lock
shrl
sbb
test
xchg
loopne
sbb
dec
inc
pop
pop
dec
inc
lods
mov
mov
cli
movsb
xor
pusha
aas
adc
pusha
imul
adc
jno
add
adcl
fs
jbe
cmc
sub
shl
btr
mov
mov
xadd
rol
mov
pushf
call
sbb
pop
jae
pop
adc
bound
lahf
xlat
pop
out
fcoms
outsb
mov
jg
imul
test
adcl
call
push
ficompl
sbb
fcomps
jecxz
pop
push
fnstcw
pop
sbb
fst
pop
jbe
bound
mov
cld
fists
fstpl
lcall
inc
pop
adc
and
in
mov
mov
push
cmp
pop
push
adc
cmp
pop
inc
adc
dec
cwtl
cwtl
fldcw
push
fistpl
pop
stos
sbb
insl
pop
adc
addr16
notl
push
rcrb
movsl
cwtl
outsb
sarb
imul
cmp
sbb
test
lds
in
mov
fsts
dec
sbb
pop
pop
lcall
mov
loope
das
pop
inc
aad
hlt
popf
dec
fs
fcoml
daa
mov
dec
adc
push
data16
adc
sbb
cli
adc
adc
fistl
popf
pop
aas
push
rcrb
loopne
push
pop
pushf
pop
sbb
pushf
push
sbb
fcompl
push
rol
loope
sub
xchg
lcall
sbb
fistl
jmp
push
fwait
jmp
dec
sbb
rcl
pop
add
xor
pop
scas
in
adc
adc
xchg
enter
call
shrl
push
dec
sbb
sti
rcrb
fcomps
adc
push
push
pushf
pop
xchg
adc
jmp
push
aam
sbb
adc
aam
bound
sbb
push
fs
push
std
in
lahf
aas
adc
cmp
xlat
cmp
fwait
cli
popf
imul
sahf
xchg
pop
rol
xor
cmp
cmp
ret
xchg
arpl
iret
stos
jae
jge
pop
xchg
loope
pop
or
addr16
xchg
adc
test
pop
dec
jno
scas
sbb
xchg
icebp
dec
jecxz
inc
loop
mov
pop
loope
jp
outsl
push
xlat
xchg
adc
clc
nop
inc
sbb
iret
lcall
arpl
pop
rolb
lea
xchg
xchg
insb
xchg
push
loope
ja
out
jp
mov
clc
test
enter
js
cwtl
sub
lret
cwtl
adc
fsts
pop
cmp
cwtl
xchg
loope
dec
xor
notb
lahf
mov
or
test
jmp
dec
imul
pop
mov
jb
pop
gs
je
xchg
daa
push
les
cmpb
push
fndisi(8087
test
jno
mov
push
cmp
in
push
hlt
testl
cmp
mov
inc
add
insl
js
es
sub
shl
pop
cld
xor
push
xlat
inc
loope
insb
dec
daa
sub
xchg
mov
cwtl
or
xchg
sbbb
mov
rcrb
dec
rcr
xor
push
inc
scas
pop
sub
jmp
enter
push
cmpsb
xor
push
pop
fcmovnbe
popf
xchg
mov
pushf
pop
in
push
push
adc
insb
cld
and
add
mov
clc
xlat
dec
add
movsb
jge
ret
and
pop
loope
cmp
push
sbb
addr16
xchg
push
bt
call
jmp
lea
jae
pushf
pushf
pusha
pushl
lea
jmp
call
jbe
jl
imul
enter
dec
rorl
dec
push
dec
ror
aam
inc
fdivs
sbb
sbb
jno
sarb
cmpsb
das
mov
lret
inc
inc
mov
cwtl
dec
lea
add
sub
mov
pop
rclb
push
insl
loop
lret
mov
jnp
or
lods
xor
mov
loopne
outsl
in
out
fwait
jl
hlt
pop
lds
rcrl
fnop
fisubl
adcl
xchg
out
xlat
push
sub
push
xchg
sbb
lahf
dec
inc
fs
sub
inc
out
pop
mov
jnp
sbb
pop
inc
iretw
int
jo
xchg
mov
jmp
rcrb
fcmovbe
lahf
dec
inc
std
or
add
inc
out
and
repnz
pop
adc
pop
ret
dec
lret
adc
push
sub
mov
xlat
leave
lds
dec
push
int3
push
fstl
fld
push
and
adc
es
xchg
xchg
into
pushf
addb
insl
pop
mov
test
lods
jp
jp
fcmovnbe
sub
cmp
data16
dec
and
sti
js
adc
jge
je
ljmp
push
push
fnop
pop
stc
mov
jb
idiv
je
gs
popf
in
adc
cld
or
jmp
call
movw
mov
pushf
mov
movb
mov
call
pusha
mul
push
mov
mov
pushf
pushf
mov
movb
pushf
popl
pushl
lea
jnp
popl
pushf
pusha
lea
jmp
neg
sbb
dec
rcr
mov
cmp
sub
cmp
pushf
add
jmp
pushf
mov
push
push
mov
pushl
pusha
movw
pushf
popl
mov
pushl
pushf
lea
jmp
pushf
jmp
pushf
call
not
cmc
pusha
cmc
stc
sub
clc
sub
jae
and
push
pusha
pusha
mov
mov
call
das
xor
mov
test
add
pusha
pusha
mov
jmp
mov
call
pushl
popl
pushf
push
mov
lea
jmp
jmp
pushf
mov
sub
neg
rol
mov
jmp
pushf
popl
pusha
movb
call
mov
lea
jne
shr
lea
add
mov
push
jmp
mov
push
lea
jmp
push
pushf
popl
pusha
jmp
mov
mov
mov
pushf
pushf
mov
pushl
ret
rol
ror
clc
movzbl
pusha
pushf
stc
bt
add
add
je
sub
push
clc
rol
pushl
call
pushf
jmp
pushf
mov
push
mov
push
pushf
popl
lea
jns
popl
pushf
pushf
push
lea
jmp
mov
lea
push
pushf
popl
lea
neg
push
adc
xadd
add
jmp
movw
mov
pushf
pushl
ret
shrd
push
lea
ror
sub
mov
btr
bsr
mov
movzbw
call
movl
mov
movb
pushf
popl
mov
mov
lea
jmp
call
bt
mov
bt
sub
cmp
push
jmp
pushl
popl
pushf
pushl
push
lea
jmp
pusha
jmp
mov
pushf
push
call
ror
pusha
bt
add
cmc
push
rol
push
dec
bt
stc
sub
jmp
mov
call
call
mov
pushf
pushf
lea
jmp
push
lea
bt
cmp
call
movb
pushf
lea
cpuid
clc
sub
push
jmp
jmp
pushf
shl
movb
pushf
cmc
shr
bt
pushl
or
bt
cmp
jmp
lea
jne
bts
bswap
movzbl
or
mov
clc
pusha
stc
mov
and
clc
pushf
clc
push
cmp
pushl
push
call
pusha
movb
lea
jmp
pusha
jmp
call
cmp
test
add
push
pushf
call
jmp
cmc
test
call
pushf
push
push
push
pushl
popl
push
pusha
pushf
mov
lea
jmp
call
call
call
pushl
pushf
mov
push
jmp
mov
rcr
rcl
mov
clc
pushf
sub
stc
clc
cmc
shr
call
pushf
call
test
cmp
mov
test
add
jle
stc
bt
sub
pushf
mov
mov
pushf
lea
jmp
cmc
btc
mov
cmc
add
push
push
pushf
mov
mov
pushf
pusha
jmp
dec
mov
cmp
test
stc
sub
lea
jl
bt
add
stc
clc
mov
pusha
push
jmp
mov
pushf
push
push
pushf
popl
movl
push
lea
jmp
call
pushf
call
pusha
mov
lea
jae
mov
pushf
movw
lea
jmp
mov
call
add
call
pushl
call
bswap
lea
call
push
mov
pushl
jmp
mov
pushf
push
push
lea
jmp
mov
pusha
jmp
cmc
call
shrd
cmc
mov
stc
mov
clc
clc
cmc
sub
clc
stc
shl
pusha
jmp
setne
pushf
mov
pusha
mov
divl
call
call
call
call
pushf
pushf
mov
push
pusha
movw
mov
lea
jmp
call
call
ror
sub
btr
seta
movzww
push
cmp
xchg
movb
stc
pushf
push
add
movb
pushf
movb
call
call
cmpl
pushf
jmp
call
sbb
sar
sbb
mov
dec
not
not
stc
mov
pusha
stc
add
pushf
mov
pushf
push
pushf
lea
jmp
pushf
push
mov
push
jmp
pusha
pushf
popl
pushl
movw
call
jmp
jmp
xchg
cld
mov
cmc
aad
std
pop
daa
pop
bt
pop
movsbw
xor
pop
push
not
mov
not
rcr
bsr
movsbw
mov
or
pushf
mov
bsf
pushl
popf
pop
xchg
not
pushf
mov
pusha
pop
mov
jmp
call
pusha
mov
pushl
mov
pushf
call
add
push
jmp
pusha
pusha
mov
movw
mov
mov
mov
call
mov
call
pushf
bsr
btr
btc
mov
and
sbb
shld
sbb
lea
sbb
btr
btr
dec
add
stc
call
not
jmp
not
shrd
mov
bt
pushf
cmp
add
push
lea
jmp
mov
pusha
movw
pusha
lea
jmp
pushf
cmc
mov
pusha
sub
pushf
pushf
pushf
mov
movb
mov
pushf
pushf
lea
jmp
sub
clc
stc
cmc
cmc
sub
push
xor
jmp
sar
bt
bsf
mov
sbb
add
pusha
movzbw
pushf
pusha
dec
movb
btr
btc
movsbw
ror
dec
call
pushl
pushl
popl
pushf
mov
lea
jmp
pushl
popl
push
pusha
pushf
lea
jmp
push
mov
jmp
dec
pushl
sub
cmp
stc
call
pusha
call
pushf
mov
mov
pusha
push
pushf
lea
jmp
add
movsbl
sub
stc
mov
cmp
clc
jmp
lea
jne
push
pushf
push
lea
jl
mov
pusha
lea
jmp
pushf
popl
jmp
pushf
popl
movw
movb
mov
lea
jmp
pushf
mov
call
push
pushf
pushf
jmp
shr
aad
movzbw
mov
push
sub
stc
clc
pushf
pusha
add
pushf
movb
mov
movb
pushf
popl
jmp
call
mov
call
pusha
lea
jns
push
pushf
mov
movb
lea
jmp
pushf
call
push
push
pushf
jmp
pushf
popl
mov
not
pushl
movzbw
xchg
std
mov
pusha
call
pushf
popl
push
movb
lea
jmp
call
pushf
movl
pusha
mov
pushl
pushl
ret
in
loop
test
mov
inc
mov
les
loop
add
loop
movsb
call
jecxz
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
movsb
mov
jecxz
fs
mov
add
loopne
inc
pusha
loop
movsb
leave
loop
add
loopne
in
loop
in
loop
in
loop
in
loop
in
loop
in
loop
in
loop
fs
mov
in
loope
add
loopne
add
loopne
les
mov
les
loop
les
jecxz
movsb
dec
loopne
inc
pusha
loop
fs
mov
in
loopne
and
loop
add
loop
movsb
mov
jecxz
fs
loop
and
loop
les
loop
test
jecxz
add
loopne
inc
inc
loop
add
fbld
les
loop
fs
loop
inc
pusha
loop
fs
mov
inc
jg
mov
fs
mov
les
jecxz
in
loopne
les
mov
movsb
imul
add
loopne
inc
mov
jecxz
les
jecxz
movsb
leave
loop
les
loop
inc
xor
loop
inc
jns
mov
fs
in
test
jecxz
inc
xchg
loope
add
fbld
inc
mov
and
loopne
add
jecxz
inc
mov
jecxz
movsb
imul
test
jecxz
in
loope
in
loopne
test
jecxz
movsb
lock
test
jecxz
in
loope
test
in
test
mov
movsb
scas
fbld
in
loope
test
in
add
loopne
add
loop
les
mov
fs
mov
movsb
call
jecxz
les
loop
fs
mov
test
in
fs
mov
inc
inc
loop
add
loopne
and
loop
fs
loop
inc
dec
jecxz
test
in
les
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
inc
mov
loope
inc
jg
mov
test
jecxz
add
loop
in
loopne
test
loop
in
loop
in
loop
in
loop
in
loop
in
loop
in
loop
in
loop
test
loop
in
loope
add
loop
movsb
leave
loop
inc
xor
jecxz
test
jecxz
fs
in
fs
in
inc
dec
jecxz
test
loopne
inc
pusha
loop
add
loopne
in
loope
test
in
inc
mov
loope
inc
dec
jecxz
fs
mov
les
jecxz
test
jecxz
inc
mov
loopne
inc
pusha
loop
test
loopne
add
loopne
fs
mov
test
in
inc
inc
loop
les
loop
inc
xchg
fbld
test
mov
test
jecxz
movsb
dec
loopne
les
mov
les
loopne
test
jecxz
fs
jecxz
test
mov
and
loop
add
loopne
add
loopne
les
in
in
loope
inc
dec
jecxz
test
in
les
jecxz
fs
loop
test
jecxz
in
loope
les
loop
inc
mov
loope
les
loopne
les
mov
inc
inc
loop
add
loopne
inc
inc
loop
les
loopne
fs
mov
test
jecxz
movsb
mov
loopne
and
loopne
test
jecxz
and
loop
test
mov
add
loop
inc
xor
fbld
les
loop
movsb
lock
fs
in
fs
loop
les
mov
pushf
jmp
neg
or
mov
jmp
mov
push
mov
movb
call
call
call
pusha
sbb
test
mov
clc
rcr
pushl
sbb
mov
cmp
stc
sub
pushf
stc
cmp
shl
jmp
pushl
pushf
popl
jmp
seto
mov
stc
cmp
push
jmp
pushf
call
sub
mov
movb
pushf
div
pusha
pushf
movb
mov
call
pushf
mov
pushf
pusha
pushf
push
mov
push
jmp
cmp
test
sub
movw
mov
pushl
mov
push
mov
lea
jmp
mov
jmp
shl
push
call
pusha
lea
je
jmp
mov
pushf
push
pushf
pusha
lea
jmp
clc
clc
pushf
sub
jmp
pusha
mov
lea
jnp
pusha
push
mov
movb
pushf
lea
jmp
bt
cmc
add
jmp
pusha
sub
bt
cmc
call
call
cmp
test
push
xor
call
pusha
push
jmp
mov
pushl
call
jmp
jmp
push
jmp
cmp
call
pushf
movb
mov
lea
ja
push
pushf
mov
mov
push
mov
lea
jmp
pushf
cld
call
sar
shl
xor
mov
sub
add
call
mov
bswap
call
call
call
call
cmp
mov
shrd
rol
bts
cmc
mov
shr
cmc
or
mov
push
pushf
cmp
pusha
add
cmp
shrd
pushf
mov
pushf
jmp
pushf
xor
pushf
movb
jmp
mov
push
push
lea
jmp
mov
movb
push
pushl
lea
jmp
pushf
popl
movb
lea
jmp
pushl
popl
mov
movb
movb
lea
jmp
jmp
sar
mov
clc
clc
cmc
sub
pushf
pusha
pusha
mov
movb
pushf
push
mov
lea
jmp
pushf
popl
mov
push
lea
jmp
bswap
bswap
mov
pusha
jmp
cmc
cmp
popf
pushf
lea
jmp
pushf
jmp
pusha
mov
pushf
popl
pushf
pushl
popl
pushf
pushf
lea
jmp
pushf
mov
pushf
mov
mov
pushf
mov
jmp
inc
push
decl
pushl
pusha
call
call
jmp
dec
dec
call
clc
sub
pushf
cmc
call
pushl
mov
pusha
mov
mov
mov
lea
jmp
pusha
pushf
mov
jmp
pusha
mov
lea
jge
pusha
movb
pushf
pushf
popl
pusha
push
call
lea
jno
push
mov
call
rcl
mov
bt
clc
sub
pushf
jmp
pushf
mov
pusha
movw
push
movb
lea
jmp
push
jmp
push
push
pushf
mov
call
add
add
pusha
mov
pushf
pushf
pushf
mov
lea
jmp
jmp
pushf
popl
pusha
push
pushf
pushl
lea
jmp
not
movsbw
dec
jmp
dec
pushf
movb
bt
add
stc
pusha
neg
pushf
clc
pushf
push
sub
cmp
mov
add
clc
bt
mov
bt
cwtl
add
jae
cmc
sub
push
pushl
mov
pushf
pushl
lea
jmp
movl
pushf
popl
pushf
lea
jmp
pushf
pushl
pushf
pushf
popl
call
pushf
mov
bswap
bswap
pushf
popl
cmp
lea
rol
rol
xchg
sbb
mov
shl
bsf
mov
call
mov
movb
pusha
call
pusha
pushl
popl
push
mov
lea
jmp
jmp
cmc
not
btc
rol
and
shld
bt
inc
rol
mov
bt
add
lea
jno
pushf
mov
pushl
push
mov
mov
lea
jmp
movb
pushf
xchg
call
and
pushl
clc
pushf
cmp
pusha
lea
jne
rol
movsbw
rcl
xorb
push
push
mov
movb
movb
lea
jmp
bt
shld
mov
not
test
test
xor
add
pusha
pusha
mov
pushf
movw
call
stc
stc
push
clc
sub
mov
call
jmp
pushf
lea
pusha
mov
pusha
mov
jmp
jmp
sub
mov
lea
jg
pushf
pushf
mov
mov
pusha
pushf
push
lea
jmp
pusha
mov
push
pushl
call
mov
push
pushl
ret
mov
pushf
pushf
popl
mov
pushf
lea
jmp
mov
push
mov
pusha
push
lea
jmp
pushl
popl
movb
movb
mov
lea
jmp
stc
add
jmp
lea
jne
pushf
rep
shl
mov
rol
mov
std
pusha
clc
pushl
popf
movb
lea
jmp
movb
mov
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
mov
pushl
call
clc
add
jmp
pushf
popl
push
lea
jmp
add
bsr
lahf
mov
dec
sar
cmc
mov
xor
push
jmp
movb
jmp
call
sub
pushf
jmp
pushf
popl
jmp
shl
movsbw
shl
xor
mov
shl
shld
sub
bswap
mov
pushf
test
mov
lea
jno
clc
add
bt
pushf
jmp
pushf
jmp
clc
jmp
pusha
pushf
mov
mov
lea
jmp
pushf
popl
push
lea
jmp
mov
movb
call
inc
rcl
mov
shrd
lea
adc
movb
mov
movb
call
pushf
mov
call
sar
btr
push
lea
mov
shl
mov
mov
jmp
jmp
bswap
push
pushl
mov
lea
jl
pusha
pusha
mov
pushl
pushf
pushf
mov
push
mov
lea
jmp
lea
jne
or
stc
clc
movsbw
xorb
not
movsbw
movsbl
pop
pusha
lea
jmp
push
push
call
xchg
cmc
mov
pusha
pushf
jmp
rcr
xadd
mov
dec
btc
call
movb
jmp
bts
aaa
bt
mov
push
bt
bswap
jmp
jmp
call
pushf
popl
jmp
pushf
pusha
pusha
mov
pushf
lea
jmp
pushl
push
pushl
popl
pushl
lea
jmp
push
push
mov
pusha
movb
movb
lea
jmp
pushl
mov
call
bt
sub
push
call
pusha
movw
not
setb
mov
call
push
add
lea
js
rol
bt
pusha
pusha
sub
cmp
test
jmp
pusha
pushl
pushf
mov
movl
pushf
push
mov
mov
push
pushf
lea
jmp
call
pushf
popl
movl
pushf
pushf
lea
jmp
push
call
pushl
popl
mov
mov
movb
movl
lea
jmp
pushf
mov
pushf
movl
lea
jmp
pusha
mov
pushf
push
lea
jmp
pusha
mov
pusha
lea
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
jmp
rol
mov
push
add
movw
pusha
lea
jmp
pushf
popl
movw
pushl
movl
pushl
popl
pusha
push
push
lea
jmp
mov
pushl
pushf
push
pushl
mov
movw
mov
push
pushl
mov
lea
jle
pusha
pusha
mov
jmp
bts
test
mov
not
jmp
mov
pushl
pusha
push
pushf
popl
pushf
pushl
push
push
lea
jmp
mov
ja
pushf
mov
pushf
mov
call
lea
jne
pushf
xor
pushl
pushf
mov
xchg
pushf
push
call
push
mov
pushf
pushl
call
cbtw
clc
cmc
clc
cwtl
clc
cmp
cmp
sub
pushf
pushf
jmp
rol
not
xchg
rol
btr
neg
and
call
pushf
ror
cmp
call
mov
movl
pushf
mov
pusha
pushl
ret
mov
push
mov
pusha
movb
mov
call
pushf
push
call
call
movb
jmp
je
bt
test
sub
stc
clc
shr
jmp
push
lea
jae
pusha
mov
push
pushl
jmp
jmp
jmp
rol
push
mov
shl
cmp
bt
mov
movb
sub
cmc
test
bt
clc
shr
push
mov
mov
pushf
pushf
popl
jmp
sar
daa
mov
sbb
test
mov
cmc
add
call
pushf
rep
add
call
movb
movw
call
rcl
btr
ror
ror
movsbw
dec
pushf
not
btr
shl
test
clc
and
btr
mov
cmp
cmp
clc
cmc
sub
pusha
pusha
movb
push
mov
mov
push
pushf
lea
jmp
mov
cwtl
seta
push
mov
call
pusha
pushf
movw
pushl
popl
push
lea
jmp
mov
jmp
push
call
call
pushf
mov
jmp
mov
pusha
push
pushf
pushf
mov
lea
jg
pushf
pusha
pusha
movw
movb
lea
jmp
mov
pushf
pushf
popl
push
call
and
pushl
pushl
jmp
call
call
mov
push
pusha
movw
pushf
popl
pushf
pushf
lea
jmp
pusha
movb
mov
pushf
mov
pushf
push
movw
mov
lea
jmp
pushf
test
clc
neg
clc
mov
pushf
sub
clc
sub
pushf
cmp
cmp
add
pusha
push
sub
movw
mov
movb
pushf
movl
lea
jmp
std
mov
jmp
cmc
xor
call
pusha
jmp
bt
pushl
cmc
test
bt
add
cld
jmp
push
movzbw
mov
stc
stc
xchg
pushf
cmc
push
bt
add
jmp
shl
mov
btr
mov
bt
bt
stc
call
sub
stc
movb
mov
and
mov
pushf
popl
push
pushf
push
pushl
popl
push
pushl
lea
jmp
pushf
mov
call
lea
jne
push
cmp
stc
pushf
sub
call
shrd
das
mov
test
pushf
pushf
add
push
jmp
bswap
bswap
shld
mov
ror
dec
rol
mov
cmc
bsr
clc
pushl
popl
shld
xchg
movl
cmp
cmp
mov
mov
shl
shl
movzbw
sub
call
clc
bt
pusha
sub
test
cmp
shr
pushl
push
mov
mov
call
mov
movb
pushf
popl
push
lea
jmp
pushf
popl
mov
mov
pushf
lea
jmp
pusha
rol
movw
jmp
mov
mov
movw
lea
jmp
xchg
lea
movzbw
lea
jo
mov
push
pushl
cld
jmp
movb
pushl
popl
pusha
movb
mov
lea
jmp
lahf
mov
not
rcr
not
or
mov
stc
call
push
add
test
pushf
shld
pushl
mov
pusha
mov
movl
pushf
pushf
popl
call
pushf
call
pushl
popl
movb
mov
lea
jmp
jmp
lea
jno
mov
call
call
push
pushf
pushf
push
pushl
popl
pusha
pushf
push
lea
jmp
lea
jno
pushf
push
push
movb
pusha
lea
jmp
mov
call
inc
movzbw
dec
bt
shl
sar
clc
xor
bsf
ror
neg
sbb
not
xor
movzbw
rcr
stc
setns
movzbl
ror
mov
lea
jae
rol
cmp
bt
cmp
pushf
add
pushf
mov
pushl
movl
pushl
ret
call
movsbw
dec
setp
stc
test
add
stc
add
inc
ror
mov
bt
add
push
lea
ja
pushf
mov
push
lea
jmp
jmp
lea
je
cmc
sub
pusha
stc
xchg
stc
pusha
cmc
stc
mov
bt
sub
jmp
mov
movb
pushf
pusha
pushf
lea
jmp
mov
jg
push
call
jmp
push
add
lea
push
mov
push
pusha
xchg
bswap
pusha
pushl
popl
dec
btr
movl
xadd
mov
btc
clc
bts
xchg
sub
pop
bts
rol
shrd
stc
xor
neg
rcr
pushl
lea
sbb
sub
sar
mov
movsbl
clc
cmc
mov
pushf
dec
shr
add
lea
add
shl
pusha
mov
clc
stc
bsr
sub
xor
call
movb
pushl
pushl
popl
push
push
pushf
lea
jmp
jmp
pushf
dec
mov
bt
add
push
clc
bt
cmc
mov
call
jmp
pushf
pushf
pushf
popl
pusha
call
push
jmp
mov
jmp
pushf
popl
pushl
pushl
popl
pushf
pushf
push
mov
lea
jmp
pusha
rol
setp
neg
mov
btc
mov
shld
mov
sub
mov
movsbw
dec
bt
pusha
ror
pushl
sbb
sar
add
movzbw
ror
movb
rol
bsf
bt
setns
dec
sub
sar
and
pushf
not
movzbl
sub
jl
pushf
mov
stc
cmp
stc
or
jmp
js
mov
push
lea
jmp
shr
rcl
inc
mov
test
sub
cmc
jmp
mov
movw
pushf
mov
mov
push
pushl
jmp
sub
call
push
pusha
pusha
push
mov
push
call
call
pushf
mov
pushf
pushf
call
and
mov
jmp
jmp
bswap
rcr
xor
mov
cmc
cmp
mov
bt
push
stc
not
cmp
jmp
bsr
notl
adc
pushf
mov
bt
bt
cmc
jmp
call
pushf
call
pushf
mov
pushf
movb
movb
lea
jmp
pushf
lea
call
mov
call
call
pusha
push
push
mov
push
mov
jmp
lea
mov
lea
jmp
stc
xadd
mov
jmp
pushf
mov
pusha
pusha
mov
pushf
mov
push
call
lea
jg
pushf
call
shld
pushf
movw
pushl
mov
mov
pushf
popl
lea
jbe
push
pushl
popl
movb
mov
pusha
lea
jmp
rdtsc
adc
rdtsc
pusha
sub
jae
sub
jmp
mov
push
lea
jmp
movb
mov
pushf
jmp
mov
mov
call
xadd
mov
cmc
sbb
btc
shl
mov
test
add
pusha
lea
jle
push
mov
pushf
pusha
pushf
push
lea
jmp
bt
cmc
push
rol
movb
add
jmp
seta
pushf
mov
pusha
mov
push
movb
push
lea
jmp
inc
pusha
not
cmp
push
jmp
rcr
add
pushf
jmp
rep
pusha
test
mov
cld
shld
rcl
mov
test
cmc
std
cld
pushl
popf
mov
push
pushf
lea
jmp
call
jmp
lahf
or
aam
mov
call
jmp
call
add
call
pushf
popl
pusha
lea
jmp
jmp
add
call
jmp
pusha
mov
call
jmp
call
mov
pushf
pushf
pushf
pushf
popl
push
mov
mov
mov
lea
jmp
pusha
push
lea
ja
bsf
pushf
lea
shrd
lea
shl
btr
xor
movzbw
sub
not
pop
test
das
lea
push
and
shl
sub
jmp
jmp
call
clc
bt
mov
pusha
test
cmc
movb
or
movb
mov
jmp
pushf
mov
pusha
mov
call
pushf
jmp
mov
jmp
call
shr
push
movzbl
stc
push
add
pusha
push
dec
pushf
ror
push
call
pushf
pushl
mov
push
lea
jmp
pusha
pushf
pushf
pushl
popl
pushf
pushf
lea
jmp
mov
cmp
test
mov
test
bt
test
stc
add
pusha
lea
jl
pusha
mov
pusha
lea
jmp
stc
sub
sub
ror
mov
ror
test
shld
mov
clc
test
jmp
pushf
popl
pushl
pusha
push
mov
lea
jmp
dec
call
jmp
sub
bswap
clc
pushf
rol
dec
mov
mov
setb
dec
sub
add
btc
mov
cmp
pushf
add
jmp
pushl
pushf
pushl
popl
movb
movl
push
pushf
lea
jmp
call
pusha
call
add
jmp
movzbl
lea
lea
mov
lea
call
shrd
mov
inc
mov
test
clc
pushf
not
clc
mov
call
push
jmp
pusha
pushf
popl
pushf
lea
jmp
pusha
push
mov
jmp
pushf
pushf
pushf
mov
call
call
mov
jmp
mov
pushl
movw
mov
movw
lea
jmp
mov
jmp
mov
call
mov
mov
jmp
movw
pusha
mov
pushf
call
push
mov
call
cmc
stc
sub
call
movb
mov
pushf
movb
pushf
pushf
lea
jmp
stc
bswap
stc
ror
call
mov
pusha
movb
push
mov
lea
jmp
mov
call
mov
push
mov
lea
jmp
shl
mov
cmc
pushl
popf
pushl
pusha
lea
jmp
lea
push
pushf
jmp
pusha
pushf
call
mov
jmp
push
rol
test
bt
sub
bt
cbtw
stc
cwtl
clc
pushl
test
pushf
sub
pusha
mov
pushf
push
pushl
push
lea
jmp
pushf
popl
push
jmp
add
pop
mov
xchg
neg
add
xor
ror
mov
btc
xor
rcr
stc
add
movsbw
mov
lea
dec
and
xor
adc
neg
add
cmp
rcl
xor
movzbw
movzbl
bts
mov
rol
ror
mov
pushf
pusha
bt
push
rol
pushl
clc
push
add
pushf
jmp
movb
sub
push
mov
movb
mov
push
lea
jmp
pushf
popl
push
lea
jmp
