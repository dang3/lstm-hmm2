add
std
ljmp
fs
lods
jb
push
rcrb
pop
movsl
insl
nop
out
xchg
mov
dec
lahf
fidivrs
movsl
cmp
or
jle
imul
add
jae
lcall
mov
lods
xlat
es
dec
xor
loopne
mov
or
xchg
es
clc
je
dec
cmpsb
and
adc
mov
aaa
xor
dec
sub
push
or
mov
xchg
inc
sub
leave
in
xchg
jl
call
inc
jl
cli
fstpt
enter
lods
xlat
les
int
cs
lds
xorb
mov
rcrb
inc
in
popf
nop
push
fnstsw
fistpll
mov
push
mov
mov
lods
adc
outsl
adc
data16
xor
pop
jo
stos
mov
fisubs
subl
xor
push
dec
test
sbb
adc
pop
sub
xchg
in
mov
lret
popf
shr
int3
js
fucom
or
dec
dec
xlat
testl
icebp
into
xchg
jbe
xchg
xor
js
or
shll
lcall
push
cmp
xchg
and
mov
psrld
mov
fcmovu
icebp
clc
test
rorb
push
cli
dec
sub
push
stos
bound
mov
xchg
sbb
xchg
jecxz
sub
lods
dec
xor
sbb
stc
lret
and
jecxz
mov
sti
inc
add
jl
ljmp
lahf
lret
mov
jbe
icebp
insw
rorb
jmp
enter
mov
movsl
xor
inc
movsl
lock
add
ds
push
inc
and
mov
mul
test
mov
arpl
js
sbb
fcoml
rcll
jg
repz
popl
cld
xor
imul
jge
fwait
lods
or
sub
mov
jl
sub
sahf
xchg
mov
aad
ret
adc
mov
sbb
into
test
std
dec
test
sub
shrb
gs
jns
imul
ds
xchg
cld
dec
add
dec
pop
push
cmc
adc
adc
or
inc
fwait
mov
sbbb
sub
or
mov
jbe
mov
adc
sub
sbb
pop
repz
sbb
dec
test
cmc
je
imul
lods
dec
mov
jmp
out
cli
out
popa
cld
js
in
sbb
loop
and
push
mov
lcall
xchg
adc
push
jmp
out
rep
loopne
sbb
je
std
cli
pop
xchg
mov
xor
shrl
pop
in
lret
sbb
jnp
mov
xchg
stos
xchg
punpcklbw
push
mov
jns
or
mov
fmuls
adc
push
or
adc
push
xchg
nop
sub
mov
cmp
aad
inc
xchg
mov
xor
test
push
add
pop
jnp
inc
cwtl
out
push
fiaddl
stos
stos
inc
and
lret
fdivrl
pop
hlt
lcall
loop
xor
ds
cli
push
std
dec
and
pop
outsb
add
mov
xchg
ret
ds
inc
jg
iret
add
push
rol
out
stc
jmp
sub
push
mov
aaa
adc
cmp
add
inc
mov
adc
test
sti
in
lds
and
rcl
mov
push
loopne
fsubl
add
das
or
ja
mov
push
loop
js
push
shr
add
xor
gs
shl
insl
idiv
fmulp
jge
stos
je
push
sbb
nop
loopne
xor
rcrb
jae
mov
pop
pop
insl
or
cmp
lcall
mov
inc
add
sbb
fisubrl
push
lret
xchg
mov
sbb
mov
sub
push
jae
mov
ficoms
cmpsl
xor
mov
roll
or
jb
shlb
cmc
dec
jns
mov
jbe
mov
in
rolb
ret
xrelease
lret
push
jbe
enter
adc
cmp
or
loopne
mov
lcall
enter
out
shlb
imul
jbe
xor
leave
stos
push
push
fs
adc
movsl
cmp
in
sbb
pop
pop
mov
loope
sahf
lds
pop
inc
dec
pop
ficoml
sahf
lods
leave
nop
into
dec
or
popa
xor
add
dec
test
cmpb
pop
cmp
lods
cltd
sbb
outsl
push
jbe
adc
pop
or
mov
xor
jo
push
xor
jp
cmc
ljmp
mov
jecxz
mov
enter
or
add
pop
cmp
or
fistpll
rcl
mov
hlt
stos
sub
cmp
lret
pop
dec
iret
inc
orb
popa
jbe
repnz
fsubrs
mov
sub
xchg
xchg
jbe
and
repnz
out
sbb
ret
and
or
sbb
push
sarl
outsb
jno
scas
ja
jl
lock
test
and
lret
jno
testl
jne
xor
cmpsl
cmp
fisubs
mov
ret
cmp
lret
arpl
and
sbb
and
es
dec
xor
fwait
clc
dec
fdivl
mov
sub
lods
push
push
sbbl
push
lock
mov
mov
stos
into
or
je
mov
dec
or
fsubs
mov
and
daa
jg
addr16
repz
add
stc
lahf
jo
mov
jbe
jnp
rcrl
data16
jb
fisubrs
rclb
daa
xchg
in
adc
mov
mov
stos
jmp
sbb
add
insl
shl
cltd
push
and
sbb
sbb
push
test
addps
mov
inc
pop
sbb
insb
add
xchg
fwait
adc
fs
out
push
mov
add
scas
lcall
cwtl
pop
adc
flds
push
fwait
ret
adcb
inc
loop
ret
pop
in
xchg
int
push
aaa
in
sub
sahf
sbb
ljmp
mov
jnp
sub
mov
ljmp
sbb
mov
popf
pop
mov
xor
lret
pop
loop
js
ja
insl
adc
xor
cmp
mov
fwait
and
cli
push
add
push
mov
out
sub
aas
fsubs
clc
push
mov
push
insl
cld
fwait
xchg
in
mov
xchg
in
pop
sti
in
outsl
test
cld
fsubl
fsubrs
cwtl
nop
mov
insb
cmovle
push
mov
inc
adc
lcall
dec
sub
inc
ljmp
inc
and
pop
or
bound
movq
mov
das
dec
in
mov
xchg
mov
loopne
and
jp
dec
nop
add
shrl
mov
mov
mov
in
fnstsw
add
into
adc
decb
cld
shl
mov
mov
lahf
out
jbe
push
sub
int3
sti
xchg
mov
xor
es
xor
dec
pop
sbb
lahf
mov
call
push
add
jne
popa
jp
sub
cmpsl
sub
dec
int3
mov
xchg
clc
xchg
lret
pop
and
jno
mov
lret
xlat
push
fs
in
mov
mov
push
dec
nop
mov
or
scas
cmp
inc
mov
and
xchg
ja
out
push
cli
mov
xchg
jnp
call
rcl
pusha
pop
dec
push
push
pop
push
iret
stc
vpackssdw
loop
add
aas
loopne
and
popf
mov
or
pushl
jb
rcrb
push
and
mov
mov
cld
pop
lods
aad
push
sahf
fwait
dec
pop
mov
jnp
cltd
dec
lahf
mov
lahf
lahf
mov
xor
lret
bound
test
jno
inc
fstpl
xor
aad
jns
rorl
dec
add
not
adc
pop
mov
lret
notb
lock
imul
or
testl
xor
mov
fiaddl
das
push
aam
and
mov
fisubl
adc
and
pop
iret
mov
outsl
call
outsb
jnp
dec
test
push
je
lcall
mov
leave
les
bound
mov
inc
cmpsl
addl
pop
dec
into
arpl
pop
sahf
addr16
mov
arpl
fsts
xchg
xchg
arpl
negl
mov
jp
xchg
push
daa
es
sbb
hlt
loope
push
dec
mov
pop
test
push
mov
js
loope
xchg
rcr
or
add
idivl
push
aas
jl
or
lods
and
mov
or
push
fsubr
mov
mov
cltd
and
jl
mov
mov
fisubrl
nop
sub
ljmp
dec
lock
adc
daa
js
divb
lahf
scas
xor
dec
push
lret
mov
or
or
mov
fs
pop
xchg
sub
sbb
fwait
shrb
aad
mov
mov
dec
xchg
iret
jmp
and
js
in
adc
cld
sbb
xor
fsubrl
lock
outsb
push
jns
xlat
ret
or
or
xor
inc
loop
add
xlat
sbb
sbb
mov
lods
leave
insl
stos
cmp
lods
stc
frstor
test
or
xchg
xor
clc
fistps
sub
popf
mov
inc
dec
or
out
cmp
pop
and
int
sbb
add
outsb
jg
movsl
and
jle
or
jmp
adc
shlb
repnz
mov
jecxz
add
jo
dec
mov
adc
in
stc
and
adc
int3
jne
stos
cmp
jb
jbe
or
nop
mov
stos
lret
loop
test
add
jmp
pop
and
push
popf
lret
cli
fwait
mov
ljmp
adc
scas
into
xchg
arpl
mov
mov
out
es
inc
xchg
mov
cmpsb
jl
imul
mov
or
call
int
out
pop
cld
mov
push
xor
cltd
xchg
jle
jbe
jae
jecxz
cltd
pop
pop
into
fs
jecxz
iret
cmp
pop
roll
faddl
scas
or
aam
pop
and
xchg
sub
hlt
xor
sbb
add
cltd
lcall
std
xchg
out
ret
mov
ja
xchg
mov
repz
mov
dec
imul
pop
das
cmc
aam
sbbl
stos
cli
dec
or
jno
in
imul
xor
dec
shlb
sbb
imul
ja
inc
push
cwtl
cmpsb
lfs
cwtl
leave
cmc
mov
ljmp
push
push
cs
sbb
jg
cmp
ljmp
inc
adc
mov
mov
xchg
pop
inc
sub
xlat
repnz
or
xor
testb
add
nop
and
push
inc
sub
push
inc
lods
mov
adc
in
cli
in
push
add
lahf
adc
mov
xchg
fnsave
adc
int3
jb
adc
mov
jb
adc
jp
cmp
dec
xor
xor
pop
push
enter
lret
rcr
dec
loopne
js
iret
aam
sub
sub
mov
je
shrl
in
xor
cltd
add
lea
and
dec
in
adc
jo
test
xor
std
mov
push
xchg
ss
rcrl
ss
in
pushf
fcomip
cs
mov
ds
mov
popa
push
sbb
jle
push
cmpsl
daa
add
jb
fistpl
loopne
push
dec
sub
adc
sub
push
repz
adc
add
sahf
xchg
cmc
fs
adc
loopne
cmp
out
sbb
pop
aam
inc
test
stc
dec
mov
add
dec
xor
imul
stc
pop
dec
movsb
push
jnp
mov
push
das
cmp
mov
scas
inc
aas
int
jle
jno
and
dec
jb
cld
mov
imul
pop
test
add
inc
call
mov
or
and
jo
and
iret
mov
cmc
enter
mov
cmpsb
rcrl
mov
xor
fst
or
scas
cmp
fwait
jg
pop
mov
addl
aas
mov
cmp
iretw
lods
push
cmpsb
out
jmp
inc
test
adc
test
mov
leave
pop
jae,pn
pop
dec
inc
xchg
cmp
cmp
sti
jae
push
fdivs
push
sar
cmc
adc
and
adc
sar
pop
pop
jo
inc
fs
out
pop
or
movsl
mov
int3
mov
mov
int
addr16
mov
cmp
cwtl
pusha
push
push
ljmp
cltd
fwait
dec
inc
sahf
add
fs
xor
iret
jl
mov
sbb
inc
daa
into
or
test
gs
mov
mov
movsl
push
cltd
fwait
mov
jle
fisubs
cmp
test
push
aad
fistl
aas
jbe
mov
xor
aad
stos
mov
fcmovnbe
xchg
ljmp
in
add
pop
jae
cmp
pop
dec
push
xor
shll
cli
inc
out
addr16
jb
mov
xor
gs
jmp
test
xlat
dec
mov
insb
lea
xchg
xchg
push
jo
jmp
in
sbb
jmp
lds
mov
dec
mov
add
dec
sbb
iret
and
aam
push
jp
repz
aad
xchg
bound
lret
adc
mov
stos
push
mov
jle
or
sbb
sub
scas
cmpsl
push
cld
mov
sbbl
xor
mov
mov
pop
pop
mov
xorl
je
je
push
outsb
xlat
rclb
push
mov
xchg
dec
lret
ficompl
lahf
ljmp
repz
cmc
repz
xor
outsl
pusha
das
cs
sbb
inc
add
cltd
cmpsl
test
lcall
test
movsb
inc
in
xchg
bound
inc
adc
or
jmp
cwtl
push
mov
cmpsl
add
pop
adc
adcl
ret
cli
mov
adc
jecxz
imul
fcoms
int3
out
sub
call
lret
fcoml
lds
sti
ret
or
popa
cmp
sbb
call
leave
jo
call
movsb
pop
or
fisubrs
popa
or
fs
call
pop
xchg
jb
pop
xchg
push
or
or
insl
and
sub
imul
fwait
xor
sub
adc
imulb
sbb
push
xchg
adc
push
xchg
scas
les
mov
xchg
divl
loop
in
jle
xor
push
sbb
negb
mov
push
push
incb
add
icebp
ljmp
out
lret
aas
cmp
adc
sbb
pop
bound
add
sahf
sbb
xchg
std
int
xchg
shl
add
dec
loope
test
insb
pop
loop
adc
fistpl
xchg
loop
and
shlb
jae,pt
aad
mov
and
bound
mov
outsb
fwait
push
cmpsb
dec
lcall
mov
mov
popl
push
xlat
cmp
cwtl
hlt
sbb
das
jmp
xchg
add
push
cmp
bound
in
inc
push
insl
cld
arpl
adc
mov
dec
jno
loop
aad
adc
push
arpl
pop
pop
jbe
mov
outsb
in
inc
mov
or
mov
mov
sbb
outsb
scas
or
lods
in
test
jg
jno
mov
jg
addr16
hlt
lock
loope
push
push
inc
inc
pop
mov
insl
cwtl
shll
test
test
mov
insb
adc
adc
outsl
arpl
sahf
jbe
std
push
push
mov
mov
mull
dec
arpl
sbb
adc
pop
aam
sub
and
lcall
sub
lahf
imul
cmp
push
pop
outsl
mov
or
dec
xchg
sti
jae
out
mov
pop
jb
push
xlat
sti
jle
add
sub
ja
enter
add
gs
xchg
pop
xlat
adc
lods
aaa
movsl
dec
movsb
test
mov
popf
mov
sbb
cmp
cmpsl
jbe
mov
dec
aaa
adcl
hlt
imul
xchg
into
ds
sbb
jecxz
jle
adc
sub
mov
dec
sbbl
roll
mov
insb
xlat
pop
pusha
fstpt
out
xchg
jle
jmp
les
je
sarl
sbb
push
mov
test
outsl
ret
sub
dec
dec
jmp
add
inc
scas
js
movsb
xchg
mov
popf
cld
aad
in
or
fs
addb
xor
push
loop
jno
add
repnz
aam
pop
push
sub
dec
outsb
xor
adc
fwait
adc
inc
mov
lds
orl
push
dec
jno
daa
xor
sub
lods
int
dec
leave
imul
inc
lock
aas
scas
inc
ljmp
andb
jmp
repz
inc
sub
mov
test
into
xor
das
mov
fs
push
inc
sbb
into
adc
mov
sub
or
fsubrp
movsb
pop
xor
or
pop
xor
mov
cmp
mov
xor
inc
sub
out
cmp
pushf
pop
popf
aas
pop
push
dec
pop
sub
movsl
in
push
sub
mov
sti
aas
cmc
jp
mov
mov
cmp
mov
or
mov
jmp
cmpsl
or
push
repz
push
outsl
test
or
push
xchg
mov
test
rolb
add
enter
push
xor
mov
ds
sbb
clc
push
jle
mov
adc
xor
fwait
mov
pop
xacquire
push
in
pop
in
pop
lods
andl
add
inc
daa
jns
popa
in
cmp
fnstenv
out
xrelease
stos
pop
stos
dec
and
scas
jnp
xorb
std
and
or
xchg
fwait
sub
inc
xchg
push
mov
and
out
mov
popa
jmp
insl
xchg
fsubl
pop
ret
sub
into
or
imul
fildl
cli
or
inc
sub
dec
push
dec
mov
push
dec
enter
push
or
mov
mov
ret
push
and
push
mov
aam
mov
or
out
adc
mov
aas
scas
dec
xlat
mov
repz
shlb
push
test
push
jae
arpl
gs
repnz
xchg
sbb
jns
cld
nop
mov
ds
xlat
inc
out
sub
pusha
adc
mov
push
jg
ret
loop
dec
dec
adc
int
test
dec
push
ret
or
in
dec
push
pop
shlb
jo
pop
mov
les
push
jmp
dec
add
insb
add
jnp
adc
hlt
adc
cmp
add
test
and
xchg
ljmp
inc
mov
dec
aas
cmc
jle
rcll
std
test
inc
pop
push
fsubp
dec
inc
in
xchg
adc
jge
or
popf
cmp
mov
in
or
jo
mov
cmpsb
cmp
sub
push
inc
flds
mov
and
rol
pop
xorl
jnp
mov
or
rclb
cmc
ror
mov
jecxz
xchg
gs
int3
or
aaa
dec
xchg
pop
fsubrs
or
mov
aas
mov
jbe
inc
sub
and
add
lahf
mov
ret
or
in
adc
push
mov
and
xor
cwtl
lods
dec
js
test
decb
cmc
ss
test
pop
and
pop
cmp
mov
gs
test
xchg
add
flds
stc
lret
pop
leave
cmpsb
rclb
mov
out
pop
cmp
and
sbb
fstpl
pusha
push
ss
mov
jb
cmp
pop
scas
iret
jbe
pop
cld
inc
movsb
add
sbb
jae
and
xor
xchg
popf
bound
jo
inc
lcall
popf
icebp
pop
cmpsl
pop
and
mov
js
xor
incl
cmp
cltd
mov
jecxz
in
mov
movsl
shlb
call
addl
decl
cmp
dec
jnp
push
mov
fwait
stos
or
in
lcall
cmp
test
and
mov
mov
and
arpl
mov
inc
sbb
add
mov
sarl
std
adc
arpl
stos
std
mov
pushf
mov
push
lcall
and
cltd
and
sbb
jo
out
push
xchg
iret
inc
xlat
adc
jge
cmp
xor
xchg
adc
mov
icebp
cli
popf
lahf
xor
aam
push
dec
icebp
fdivrs
fstpt
hlt
mov
jle
fisubrs
push
clc
int
inc
jg
scas
push
sub
xchg
ds
cli
inc
mulb
jb
int3
iret
cs
xchg
movsb
mov
mov
pop
mov
gs
aaa
inc
cs
push
repz
mov
std
xchg
adc
jne
dec
fs
cmp
in
and
test
mov
pusha
stc
jp
sub
jmp
pop
push
insb
mov
push
push
shrb
xlat
lock
or
cmpl
jecxz
cmc
push
xor
test
outsl
leave
jl
sarl
jecxz
push
sti
leave
loope
cmpsb
sub
adc
dec
cmpsb
mov
and
sbb
dec
mov
cwtl
call
ds
test
push
mov
sub
ljmp
daa
ljmp
dec
pop
out
fstl
adc
in
aaa
pop
push
sbb
pop
jmp
xchg
adc
nop
out
inc
fstl
pop
aad
adc
push
jno
sub
hlt
nop
fmull
push
and
scas
stos
sarl
incb
lods
adcb
int3
pop
cld
in
sbb
jb
aas
lahf
and
cmp
das
fsubrs
sbb
aas
jge
adc
mov
aaa
mov
iret
xchg
std
fisubrs
clc
ss
movsb
mov
movsb
cli
ret
push
pop
dec
cld
push
mov
cmp
inc
sub
xchg
fwait
and
je
xchg
xchg
pop
dec
pusha
adc
ret
ret
or
mov
repnz
add
xchg
jle
or
mov
mov
or
dec
jae
cmc
icebp
idivb
cwtl
xor
mov
and
hlt
or
in
cmp
xchg
call
and
lods
jo
mov
test
rclb
mov
iret
subb
stc
inc
mov
xorb
jne
call
add
mov
dec
sub
sti
xchg
shll
int3
mov
sbb
iret
push
push
sub
inc
fcmovne
ret
insl
add
inc
imul
xchg
jp
lahf
xor
xchg
insb
data16
cld
mov
fmul
push
and
adc
sbb
sbb
add
push
fs
xchg
nop
repnz
pop
mov
popa
imul
mov
push
mov
xchg
ds
repz
and
cmp
adc
pop
xchg
mov
insb
dec
adc
shlb
jbe
imul
or
add
jb
jns
ficomps
and
xchg
pop
sti
shll
imul
mov
mov
cltd
aam
leave
jmp
aas
mov
dec
andb
xor
dec
inc
push
in
sub
lds
jmp
cmp
sub
cli
add
inc
jl
out
mov
stc
test
adc
lcall
push
mov
mov
ds
repnz
push
imul
xchg
ss
or
xchg
adc
sub
mov
ljmp
pushf
fnstcw
mov
fisttps
sub
sub
and
pop
cmpsb
sub
and
stos
mov
xchg
testb
out
and
aam
lods
stc
jne
ficoms
mov
or
mov
lock
and
push
cwtl
aad
inc
cwtl
inc
xor
fs
pop
jmp
jl
or
push
jbe
mov
dec
repz
push
iret
loop
aas
xor
mov
fstl
pop
xchg
mov
out
adc
adc
jne
ret
mov
mov
push
sub
iret
popf
insl
lcall
outsb
lret
les
arpl
dec
lcall
cmc
and
cli
popa
xlat
pop
dec
sbb
xchg
and
push
fisttps
xor
ds
scas
or
ret
dec
nop
dec
xchg
sbb
fs
insb
pop
mov
fisubrs
test
mov
jb
jl
mov
dec
sbb
enter
dec
sub
ret
push
repz
sbb
sub
push
jnp
in
pop
and
cmpsl
mov
cli
cmp
dec
xchg
outsl
xchg
out
loop
cmp
adc
aam
dec
add
adc
mov
in
ret
pop
pushf
pop
mov
xor
push
add
pop
cmp
in
and
aad
rcll
aam
sahf
pop
fwait
dec
or
mov
in
mov
mov
mov
outsl
lea
mov
or
mov
into
xor
mov
outsl
mov
mov
jge
inc
xor
gs
dec
inc
ja
arpl
push
aam
ret
negb
mov
add
lret
lds
pushf
mull
test
jge
xchg
ret
push
xlat
rclb
mov
xor
inc
mov
xor
into
mov
fcompl
inc
out
js
sti
leave
aad
push
xlat
mov
cli
inc
pop
xchg
cmp
mov
jae
inc
aad
mov
jns
ret
inc
mov
insb
mov
out
inc
lahf
fnstcw
lcall
and
out
push
mov
outsb
arpl
mov
xor
aas
lock
jne
sub
aas
push
xorb
imul
shll
mov
dec
and
and
test
hlt
sbb
fbstp
sub
sub
int
mov
mov
fnstenv
or
icebp
push
add
jns
mov
mov
dec
mov
lea
adc
adc
scas
fs
xchg
cmpb
movsb
jle
sub
xchg
dec
cltd
xchg
rcll
sti
add
jle
pop
push
imul
in
mov
lds
push
dec
pop
mov
int
push
cmp
mov
jns
and
dec
mov
in
lcall
and
je
cmp
xlat
out
shlb
popf
repz
icebp
mov
es
leave
mov
jg
inc
scas
sbb
imull
xor
insb
jg
fs
lods
mov
leave
divb
mov
push
decl
adcl
fwait
stos
xor
push
inc
mov
mov
dec
cmpsl
or
cmp
scas
or
aam
aas
call
or
pop
iret
lcall
int
ljmp
adc
sarl
push
cmpsb
adcl
mov
add
mov
xchg
jns
push
sbb
ret
cli
jae
stc
jecxz
stos
xchg
lea
ret
mov
ja
and
xchg
icebp
or
cmpsl
mov
and
jns
gs
add
add
es
sbb
sbb
inc
movsb
sar
add
inc
inc
sbb
aaa
sahf
push
pushf
inc
mov
imul
dec
ljmp
andb
in
sbb
loop
xor
inc
mov
sub
xor
ljmp
fsubrs
and
sbb
xor
mov
jmp
push
adc
bound
mov
or
out
cmp
lcall
int3
push
pusha
lds
mov
ret
out
jg
rcl
or
xchg
jl
mov
hlt
test
or
out
lcall
lods
mov
mov
mov
ljmp
dec
dec
mov
push
mov
jb
inc
stos
packsswb
adc
mov
das
xchg
cs
cmp
mov
in
shlb
mov
cltd
pop
cld
inc
fwait
test
cwtl
loop
dec
sub
repz
push
jnp
mov
sub
xchg
bound
sahf
das
popa
test
mov
cmp
xchg
jge
fucomi
iret
push
and
cmpsl
sbb
or
addr16
inc
mov
loop
xor
dec
ja
outsl
mov
mov
icebp
jo
pushw
pop
cwtl
xchg
jns
enter
push
pusha
sub
cmc
jb
enter
jecxz
lods
add
ret
pop
stc
push
dec
push
test
adc
stos
and
jmp
bound
aam
out
ret
adc
fnsave
mov
aaa
movsb
loope
arpl
inc
adc
mov
in
push
repz
test
pop
clc
int3
sbb
out
xor
mov
js
inc
into
fistps
mov
mov
rol
mov
stos
fwait
push
adc
jbe
xchg
dec
jne
inc
stos
je
gs
pop
or
daa
sub
jg
cmp
ss
test
lds
stos
mov
mov
mov
shll
popa
adc
adc
aad
mov
aas
cli
xorb
call
mov
cmp
sbb
cmpsl
pop
pop
data16
jmp
popa
lea
push
test
fsub
test
push
ret
mov
add
call
push
popf
pop
mov
sbb
pop
scas
cmc
arpl
jbe
push
bound
mov
inc
adc
inc
aas
xlat
imul
mov
dec
add
outsb
or
xor
pop
arpl
xchg
push
mov
or
mov
aas
into
scas
xorl
xchg
stc
mov
push
mov
push
jp
sbb
ds
dec
popl
cmc
dec
push
cmp
cmp
outsl
mov
sub
push
pop
test
jl
mov
outsl
movsl
leave
mov
lock
and
push
cmp
push
fsubr
pop
adc
add
rorb
shlb
xor
in
adc
inc
mov
sbb
call
xchg
xor
andl
jne
shrl
xorl
and
and
pusha
and
inc
sub
sub
arpl
xchg
cltd
cld
jecxz
ss
call
cmp
clts
dec
mov
fs
das
loope
mov
sbb
jp
inc
clc
scas
cltd
lret
popf
cltd
or
stos
jno
add
xor
xchg
cwtl
popw
shl
cmpsl
mov
test
hlt
add
lret
test
mov
dec
add
jo
mov
mov
mov
sbb
repz
mov
sbb
aam
pand
push
movsb
popa
fwait
lods
pushf
popa
or
js
add
fwait
and
and
cmp
jne
and
xchg
jae
cmp
adc
mov
pop
push
andl
push
mov
lahf
sbb
das
jecxz
out
xchg
aaa
cmc
sbb
add
pop
push
addr16
pop
mov
jp
and
dec
andl
jecxz,pn
ss
push
pusha
mov
or
pop
jnp
jmp
enter
movsb
pop
cmp
mov
fwait
add
and
js
fidivs
adc
dec
jnp
inc
sub
daa
lods
aas
es
aaa
mov
xchg
xor
js
xor
outsb
mov
xchg
lods
and
mov
outsl
adc
nop
stc
inc
lahf
or
lret
mov
ret
add
arpl
aam
cs
xor
int3
stc
xor
bound
inc
jl
and
fsubs
sub
xchg
mov
dec
das
mov
int
cli
aam
push
push
push
call
push
adc
or
aam
pop
inc
dec
inc
cs
mov
inc
inc
dec
scas
lcall
mov
sbb
lods
in
pop
out
mov
shll
sbb
stc
nop
in
pushaw
mov
int3
js
shll
out
icebp
sarb
xchg
pop
fldt
jecxz
test
pop
test
cmpsb
leave
jmp
lcall
imul
rcrb
pushf
pop
lahf
lcall
lods
scas
mov
mov
mov
imul
adc
pushf
je
push
daa
mov
stc
imul
incb
bound
sarl
xchg
push
mov
iret
fisubl
clc
jnp
dec
xor
xlat
in
or
subb
nop
cld
insl
inc
push
xchg
aaa
sbb
fsubs
pop
mov
or
inc
push
cmpsb
ss
add
cmc
jmp
jnp
or
pop
xor
out
xchg
push
sbb
mov
lock
dec
lcall
clc
or
add
pusha
and
lea
test
add
or
push
xlat
dec
dec
mov
xor
pop
aad
xlat
jmp
push
shll
in
negb
add
les
pusha
ja
fwait
idivl
cli
sbb
jp
xchg
dec
cltd
push
cmp
daa
push
ljmp
popf
ljmp
xchg
sub
je
cmpsl
sahf
rorl
add
leave
push
xchg
addl
sub
ret
enter
jo
and
fildl
jo
popf
aas
rol
ss
fdivrp
js
dec
cmp
scas
xchg
movsl
shll
fsubs
pop
out
xchg
enter
bound
and
leave
sbb
pop
sbb
scas
jno
adc
imul
jg
out
fcoml
inc
or
sub
scas
pop
stc
seta
ficompl
and
jno
inc
xchg
fimuls
je
imul
xchg
aaa
fsubp
sub
pop
mov
push
inc
test
mov
inc
inc
mov
pushf
or
int
cwtl
jmp
icebp
fiadds
add
adc
outsb
dec
lahf
xor
out
and
in
sarl
xchg
hlt
jmp
jbe
imul
sub
arpl
jno
out
mov
scas
and
out
imul
pop
xlat
jp
inc
add
jae
or
xchg
adcb
push
subps
xor
icebp
test
pop
pop
in
push
jae
push
mov
ja
fidivl
xlat
inc
aam
repnz
sub
ja
mov
push
or
sub
dec
divb
outsb
clc
shlb
daa
in
dec
push
inc
push
mov
xchg
cmpsl
sbb
aad
pop
movhps
sbb
xchg
jo
movsb
jno
sbb
rcl
movsb
adc
adc
xchg
mov
add
add
jmp
popa
repz
ja
add
cmp
mov
outsb
ret
in
jmp
mov
daa
push
daa
out
inc
cmp
lea
mov
push
adc
inc
pop
fiaddl
mov
je
adc
out
repnz
imul
mov
addl
xchg
into
test
xchg
xchg
ret
movsb
mov
or
mov
xorb
push
lcall
test
pop
enter
in
push
pop
pop
lods
xor
imul
add
adc
push
stc
push
ror
or
lods
cmp
imul
inc
fadd
inc
fnstenv
sub
test
ljmp
subl
mov
pop
sahf
xor
push
inc
pop
cmpsl
cmp
fmull
fld
fstpl
iret
loopne
pusha
adc
shrl
and
clc
xchg
stos
out
and
mov
mov
divb
or
out
std
test
xor
stos
xchg
or
mov
xor
rep
hlt
sbbb
bound
clc
aas
dec
push
js
scas
push
pusha
decl
dec
insb
cs
aaa
xchg
bound
fucom
mov
mov
sbb
sarl
add
mov
idivb
mov
sbb
sti
fsubp
push
das
add
nop
and
inc
jnp
mov
imul
leave
mov
push
mov
mov
mov
clc
mov
sbb
rorl
lds
hlt
push
pop
jo
lret
je
inc
sub
rorl
xchg
mov
inc
fldt
xchg
and
leave
cmp
subl
xor
xlat
sbb
je
dec
movsl
push
out
pop
out
mov
fisubs
popa
outsl
arpl
aas
into
xor
add
xchg
adc
dec
lock
cmp
fwait
daa
insb
mov
sahf
add
mov
pop
cmpsl
pop
jle
xchg
shrb
jl
imul
and
mov
jns
test
ljmp
sahf
insl
movsl
jg
or
mov
or
mov
mov
mov
adc
flds
idivb
jne
xor
out
cmpsl
push
cmc
ja
jno
push
dec
push
stos
mov
mov
xchg
pushf
push
push
aam
mov
test
nop
jg
loope
push
mov
pop
xchg
jp
jp
daa
xchg
jnp
mov
out
fs
hlt
in
cmp
incb
cmp
std
pop
rolb
adc
out
mov
add
adc
or
ljmp
xor
ret
in
adc
add
pusha
in
cld
js
in
outsl
lods
nop
mov
sub
mov
or
cmp
hlt
pop
adc
mov
lea
mov
jecxz
adc
jb
stc
push
movsl
cwtl
scas
mov
xchg
xor
xchg
bnd
es
sub
push
cltd
inc
mov
cld
inc
push
cli
mov
in
pop
rorb
out
push
lahf
jae
das
mov
mov
mov
inc
cmp
pop
enter
js
cmc
dec
mov
push
dec
outsb
adc
push
and
je
and
cmp
enter
adc
xchg
je
testl
das
fildll
cmp
or
push
arpl
xchg
adc
movsl
mov
jp
xchg
cmp
aad
push
mov
ficompl
adc
sub
aas
or
mov
icebp
pop
cmp
sub
das
mov
and
std
adc
jbe
leave
dec
mov
imul
jno,pn
fstps
mov
mov
inc
ret
adc
aas
les
scas
ss
sbb
nop
push
or
inc
and
xchg
mov
ljmp
es
stos
shl
das
popf
sbb
mov
xchg
fbld
shlb
push
faddp
enter
incl
mov
fiaddl
add
lahf
mov
pushf
add
sbb
jb
cmp
gs
loope
adc
xor
notb
out
gs
inc
mov
xorb
int3
sbb
dec
mov
fwait
xlat
cwtl
lret
iret
outsb
rsqrtps
dec
push
mulb
cld
stos
mov
cmc
mov
ss
cmp
xor
mov
into
sbb
in
outsl
or
mov
cmc
xchg
aam
cmp
mov
fistpll
scas
and
daa
hlt
jb
scas
pusha
gs
mov
std
cmp
pop
fnstcw
mov
jl
cmp
out
pop
rolb
push
int
push
subl
in
mov
jne
addr16
inc
mov
lcall
cmpsb
aas
and
cmpsb
mov
rorb
mov
jmp
pop
lock
shl
ficoml
icebp
ljmp
adc
enter
mov
cmp
ss
int
dec
mov
sbb
xchg
int3
adc
xor
int
mov
jbe
es
and
js
adc
cmpsl
or
add
push
dec
call
paddw
movsl
push
subb
shr
jb
mov
and
sbb
out
cmp
mov
xchg
into
popa
and
fnsave
fwait
dec
cmp
or
cld
pop
add
mov
mov
sbb
push
inc
push
bswap
mov
aad
xor
sbb
shll
leave
ja
and
inc
or
mov
sbb
lcall
popa
rclb
mov
inc
shrb
sti
jae
mov
cmp
pop
pop
and
adc
inc
xchg
mov
ljmp
xor
xlat
jp
or
scas
scas
push
inc
inc
mov
lods
movsb
roll
adc
fdivrl
das
movsb
xor
addb
push
jmp
xor
nop
dec
push
gs
fists
outsb
mov
mov
jle
push
clc
test
push
sub
mov
and
in
js
sbb
fcomip
lahf
and
mov
xchg
or
rclb
sahf
mov
lods
push
lods
popf
std
mov
popa
rcr
leave
pavgb
stc
cmp
cld
ja
or
xor
push
jecxz
dec
popa
jbe
shl
stc
or
jp
fnstcw
push
or
dec
call
jbe
fneni(8087
cld
cmpsl
sub
xlat
lods
pop
ss
imul
adc
insl
push
dec
adc
xor
xchg
cmp
lret
xor
mov
aaa
shl
mov
out
in
adc
out
inc
cmp
push
arpl
or
scas
aaa
mov
gs
mov
jl
lea
xchg
inc
mov
sub
nop
test
icebp
inc
shl
enter
mov
adc
jmp
push
adc
push
or
lahf
xor
fistpl
ret
xor
add
pop
mov
or
aas
pop
mov
cltd
bndldx
fs
loopne
out
mov
jns
rolb
jns
push
xchg
ljmp
lods
jb
push
lcall
inc
mov
in
or
repnz
mov
in
inc
adc
test
add
dec
sbb
push
sbb
xor
add
jl
ja
cmp
jecxz
xchg
push
pop
push
sbb
sbb
or
std
cmp
dec
mov
fistpll
inc
stos
xor
dec
cmpsb
push
push
fidivs
dec
mov
pop
xor
popa
mov
sbb
cmp
hlt
mov
jns
xchg
cmp
notl
fsubrs
dec
sub
cmpsl
adc
enter
out
shlb
or
stc
adc
cmc
xor
sbb
jbe
xchg
loopne
cmpsl
mov
call
jl
sti
incl
pop
pop
aas
mov
imul
dec
xor
push
cmp
xchg
adc
pop
jp
sahf
dec
xchg
mov
enter
dec
aam
subl
push
rep
mov
shll
add
mov
and
xorl
fcmovne
inc
or
push
or
push
inc
jp
call
xchg
into
xchg
stos
pop
ret
ret
popa
loop
insl
add
je
adc
jp
sbb
cmp
pop
jns
add
jecxz
in
out
or
cmpsl
pop
and
or
cmp
lock
imul
xor
jbe
jecxz
adc
hlt
movsb
orl
rolb
addr16
jnp
push
sti
cwtl
out
hlt
sub
movsb
mov
loope
testl
adc
lods
ret
push
mov
and
lock
push
loop
aam
daa
jo
outsl
addl
movsb
addr16
scas
or
test
xchg
rol
pop
pop
arpl
rorb
sbb
and
adc
mov
mov
lods
stc
jmp
push
mov
shr
cmp
scas
pop
add
repz
mov
lcall
insb
sti
ret
ds
pusha
mov
out
push
mov
sti
stos
lcall
int3
mov
cmp
cmc
xorb
jge
push
mov
and
sbb
ja
leave
push
outsl
into
xchg
aam
sbb
push
fdivl
jg
scas
sbb
fildll
or
out
and
fdivrs
inc
inc
or
cmp
push
imul
pop
ror
push
cmp
test
das
hlt
xor
xor
outsb
js
dec
push
ja
andb
lret
xchg
xor
popf
push
in
mov
mov
adc
subb
xor
js
jmp
pusha
xor
data16
push
cltd
add
dec
pop
ja
mov
test
in
addb
jb
rcrl
mov
cmpsl
xchg
fistpl
push
out
xlat
xor
adc
inc
xor
call
mov
sub
stos
pop
in
mov
pop
stos
adc
xchg
xchg
pusha
cmpsl
jg
mov
fdivrp
mov
outsl
sti
lock
shr
pop
dec
cs
add
rcll
adc
popa
sbb
lea
les
mov
icebp
icebp
jge
mov
xor
test
les
pop
mov
rcrl
inc
adc
loopne
pop
in
jle
xor
jge
dec
cmc
pop
scas
mov
jl
lds
movsb
adc
or
jnp
movsl
add
mov
aaa
dec
hlt
or
or
aas
inc
daa
or
into
scas
mov
push
sub
mov
jmp
mov
mov
aad
std
sbb
aam
lods
mov
xor
xchg
arpl
rorl
call
cmp
jmp
jp
out
xchg
mov
push
push
jg
lock
movsb
cld
mov
call
mov
loopne
nop
in
in
je
stc
popf
xchg
mov
fdivp
ljmp
std
inc
adc
movsl
inc
dec
nop
mov
fs
adc
cmp
xchg
xchg
sbb
loop
and
adc
inc
bound
imul
movsl
ds
cmp
ds
lods
sub
push
sub
mov
xor
dec
lcall
dec
pusha
push
call
scas
push
adc
shrb
cmp
iret
iret
jne
in
insl
adc
inc
test
call
sbb
dec
aad
sub
sbb
xor
mov
push
inc
into
in
rcll
dec
clc
sub
push
lea
popl
loopne
jle
cmpsl
xor
aaa
adc
inc
orl
or
mov
mov
es
jae
push
insb
jl
add
cli
push
addr16
push
mov
push
mov
ds
fwait
lds
inc
inc
xchg
and
outsb
in
adc
push
push
dec
idivb
add
cld
sbb
pop
ficomps
xor
xor
cmp
dec
gs
cmp
cmovle
push
inc
jge
sbb
scas
xchg
mov
jg
push
sarl
xchg
fildl
es
inc
pop
shrl
int3
clc
int
cmpsl
jg,pn
adc
rcl
stos
pop
jg
jmp
sub
into
fsubl
sub
pop
and
adc
enter
stos
in
out
xor
push
fwait
cmp
jle
and
dec
ljmp
adc
mov
dec
push
jge
pavgw
cmp
stos
sbb
or
pop
outsb
xchg
out
addb
les
shll
movsl
pop
notb
test
repnz
dec
sahf
ss
clc
int3
dec
inc
push
push
daa
dec
pop
rcrb
loope
pop
cli
adc
int
or
push
push
lods
sbb
push
and
jns
adc
xor
fld1
in
setbe
test
pop
orb
mov
inc
inc
pusha
fwait
mov
jno
mov
imul
pop
sub
pop
xchg
aas
ficoml
mov
dec
hlt
mov
adc
cs
sahf
movsl
adc
pop
xlat
add
hlt
int
adc
rorb
movsb
ret
cmp
cmp
and
sub
movsb
scas
stos
jne
in
or
scas
in
test
stos
cltd
fstps
in
dec
lret
sub
in
aaa
stos
repnz
jne
es
loope
sti
pop
fnsave
mov
shrb
lods
test
sub
add
pop
pop
jns
lock
mov
cwtl
je
or
mov
out
sbb
test
cmp
push
clc
mov
sbb
dec
lret
sahf
and
rcr
rorb
lea
mov
mov
gs
cmp
cmc
arpl
sub
pop
repz
mov
or
mov
cmp
inc
xchg
xor
xor
push
outsb
fwait
js
outsl
sbb
adc
std
sub
sbb
xchg
mov
test
clc
or
cmpb
xchg
add
stos
outsb
icebp
repnz
vmulss
mov
cmp
pop
and
mov
mov
xchg
xor
addr16
mov
jmp
dec
dec
xchg
sub
mov
daa
scas
pushf
js
test
loopne
pusha
mov
jno
loopne
mov
pop
and
jmp
stos
insb
cld
leave
popa
push
pop
sub
add
mov
lcall
sbb
aad
outsl
mov
inc
sub
jle
xor
pop
sub
push
fldt
subb
aaa
xor
ds
adc
sbb
mov
sbb
cmp
scas
idivl
mov
and
dec
jecxz
inc
stc
push
inc
data16
pop
or
push
mov
jo
nop
leave
xor
inc
lcallw
stos
adc
cmp
cs
mov
lods
je
push
dec
stos
inc
arpl
fidivl
cmc
imul
sub
cmp
push
xor
and
sahf
cmpl
lcall
adc
test
aas
lcall
adc
jo
ficomps
ror
sarb
enter
sub
push
cwtl
fimuls
imul
pop
jmp
bound
rcrl
jo
pushf
pop
cmp
push
out
dec
fisubrs
bound
ja
xlat
loop
shll
shll
out
leave
aam
jnp
push
add
add
out
test
daa
cmp
or
shlb
mov
xchg
and
or
add
loopne
in
xlat
mov
shrl
xchg
pop
outsl
ja
sub
xchg
xor
dec
dec
loope
mov
jno
mov
pop
loop
dec
jnp
jecxz
andl
je
sub
push
fdivrp
insl
pop
rcl
scas
call
pushf
fwait
lret
adc
pop
jl
lcall
mov
adc
call
loop
or
adc
in
or
in
ja
repz
push
push
cltd
xchg
sub
lcall
push
xchg
sbbl
pop
xchg
insl
rclb
aas
lcall
dec
sarl
loop
addb
cmc
push
mov
jg
bound
or
daa
mov
pop
jae
or
cwtl
xchg
mov
cmp
xchg
jl
add
aad
and
push
xor
outsl
pop
iret
inc
push
fldl
mov
les
mov
dec
aad
jb
and
imul
fildll
lods
in
fdiv
dec
pop
mov
int3
aad
push
rcrl
aad
or
bound
pop
movsb
cwtl
inc
test
fldt
adc
mov
mov
xchg
pop
push
push
push
inc
leave
out
cwtl
pop
fidivs
xlat
std
mov
pop
add
and
add
inc
push
lods
mov
jge
mov
add
xchg
add
inc
lds
insl
jecxz
ficomps
mov
inc
rcr
pop
sbb
add
and
pusha
aas
cmp
xor
cmpl
clc
pop
lahf
aad
cmp
out
js
cmp
fdivs
mov
jmp
and
mov
outsb
jmp
push
les
addr16
jb
mov
clc
rcll
pop
mov
push
xor
lds
or
cmc
in
push
gs
test
scas
push
scas
inc
pop
ss
sbb
push
push
adc
fcomps
out
rcr
hlt
or
adc
clc
jmp
sarl
dec
iret
or
ficoml
mov
pop
pop
pop
cwtl
lock
mov
lds
imul
cmc
dec
popa
cwtl
add
xchg
lret
mov
fldt
or
xchg
repnz
cmc
dec
les
outsl
outsb
fiadds
xchg
nop
xchg
sahf
dec
fstl
movsl
cmp
idiv
xchg
mov
scas
popa
neg
dec
jo
xchg
inc
es
dec
xchg
xchg
cmpl
pop
push
movsb
mov
icebp
je
mov
fidivl
jmp
stos
push
mov
or
push
sti
sub
test
popl
jo
mov
mov
mov
mov
into
pushf
sahf
ret
hlt
and
call
ss
inc
and
popf
xor
xor
scas
loope
int
and
mov
sbb
sbb
mov
pop
mov
jecxz
adc
faddl
in
in
pop
aad
fimuls
ss
leave
xchg
lods
xor
test
bnd
inc
jno
jae
iret
inc
inc
jge
xlat
les
lock
xchg
cld
in
stos
ljmp
jge
mov
cs
xor
or
cs
cmpsb
ljmp
cwtl
jecxz
dec
mov
out
mov
sbb
jecxz
fmull
clc
sub
bound
lret
sbb
sub
jle
andb
stos
fdivrl
mov
mov
push
adc
inc
mov
scas
sbb
sub
loopne
dec
insl
lea
xor
jne
fs
lahf
out
inc
cmc
xlat
mov
dec
andb
test
push
mov
lret
mov
ret
pop
sbb
add
adc
or
enter
jge
xor
xor
dec
push
sub
and
xchg
sbb
call
jbe
test
stos
add
push
popa
or
mov
jne
mov
jb
mov
pop
xchg
lds
push
je
lret
mov
add
fs
cltd
shlb
in
nop
adc
mov
leave
or
adc
cmp
mov
mov
push
fdivrs
ljmp
mov
push
jae
lock
fsubr
dec
enter
or
insb
ljmp
or
jle
movsb
aad
movsb
cmc
arpl
cmpsl
mov
or
xor
movsb
out
les
add
pop
bound
and
insb
inc
dec
pop
sub
pop
pop
insl
sbb
push
insl
movsb
and
ss
scas
ss
sub
js
ds
add
mov
repz
xchg
into
repnz
in
adc
xchg
and
daa
or
scas
aaa
andl
sbb
pop
jp
es
cmpsl
cmp
pop
push
mov
inc
rcrl
fdivrp
js
mov
imull
adc
pushf
mov
aam
add
jp
dec
jno
rol
sub
mov
mov
cmpl
decb
stos
icebp
push
daa
push
jle
lock
pusha
mov
sub
popf
mov
xchg
sbb
mov
call
out
pop
mov
sub
mov
aaa
lea
pop
cmp
ret
xor
mov
adc
mov
inc
xor
lods
adc
dec
mov
sbb
and
jb
daa
loope
sti
popl
lock
sti
jecxz
inc
sti
or
mov
js
popf
xchg
mov
ficomps
cs
lods
xchg
cmp
mov
adc
pop
push
pop
mov
ja
test
sbb
jp
sbbb
xchg
pop
orb
xchg
sub
push
push
cmpsl
jbe
ljmp
and
cmp
dec
inc
sbbb
popf
inc
sbb
mov
jl
add
mov
mov
ljmp
js
sbb
sbb
fbld
push
adc
mov
mov
mov
filds
scas
scas
test
out
cmp
cmp
pop
loop
test
inc
jb
aam
jge
insb
negl
jno
jns
inc
xor
cli
add
outsb
cmpl
or
mov
dec
pop
xchg
xlat
adcl
add
push
mov
dec
push
int3
dec
aad
stos
mov
xchg
pusha
dec
jmp
jl
cmp
loope
scas
jno
ss
sub
push
sti
push
and
inc
rcrl
lahf
jge
faddl
adc
push
into
movsb
inc
xchg
data16
icebp
adc
mov
xchg
sahf
mov
pusha
pushf
add
movb
add
pop
xor
pushf
ss
inc
ficomps
mov
std
jle
cmp
push
in
cmpsl
push
mov
ret
popl
daa
aad
mov
lods
mov
cld
xchg
repnz
stos
dec
push
aad
sbb
cs
stos
js
dec
xchg
movsb
stos
adc
sbb
mov
cmc
cld
cs
mov
and
loopne
ret
xchg
ret
mov
xor
sub
fsubrs
sbb
pushf
jp
or
inc
filds
addb
push
movsb
push
inc
stos
fcmovnb
adc
mov
js
pusha
cmpsb
pop
testb
xchg
ja
and
mov
fisubrs
mov
push
insl
inc
pop
push
bound
shrl
mov
sbb
push
mov
dec
push
int3
xchg
push
and
mov
inc
test
sbb
repnz
fwait
or
xchg
xchg
mov
fs
inc
xlat
add
loop
cwtl
push
pusha
cmp
and
mov
mulb
add
ficomps
xchg
and
mov
cmp
lods
shrl
sub
push
nop
dec
add
pop
movsb
xor
fimuls
lret
adc
adc
pusha
aas
arpl
mov
dec
pop
test
cmp
mov
lea
ljmp
cmc
pop
push
mov
jge
cmpsb
cpuid
and
sub
mov
rcll
in
outsb
lret
jge
les
push
sbb
add
cwtl
nop
pop
insb
and
inc
lahf
cmp
hlt
addr16
mov
pop
in
adcb
mov
in
pop
js
lods
in
testb
cld
fimuls
push
dec
xchg
adc
push
mov
mov
jbe
pop
out
icebp
add
mov
insb
out
sub
and
aad
pop
ret
pop
loopne
jmp
outsb
test
mov
popa
cmp
cmp
in
nop
mov
ljmp
push
imulb
xchg
and
dec
mov
push
lcall
xchg
xor
add
lock
push
adc
jmp
nopl
fdiv
out
cmp
dec
je
inc
es
shll
pop
xor
pop
mov
pushf
mov
loope
test
shrb
cltd
clc
add
push
icebp
ret
dec
mov
dec
and
cmp
ss
mov
jecxz
scas
aam
inc
dec
pushf
and
pop
lods
pop
pusha
leave
call
inc
and
mov
sub
les
fs
and
outsb
push
or
ds
sarb
sbb
les
xchg
jbe
es
inc
mov
xchg
jle
iret
lods
mov
mov
xor
repz
pop
dec
cld
fsts
pop
and
jmp
xor
call
sbb
scas
or
push
fsub
mov
imul
js
flds
mov
int3
lea
mov
mov
lahf
mov
fisubrs
push
dec
hlt
in
and
mov
shll
ret
pop
xchg
dec
je
jnp
jg
pusha
sub
cmp
sbb
add
sbb
sub
xchg
sbb
nop
mov
mov
jmp
nop
and
mov
gs
rol
jb
movsb
loopne
or
sbb
sub
add
out
mov
mov
cmp
jno
push
jb
test
movsb
push
aaa
jbe
scas
cmp
rcr
mov
data16
cld
push
jmp
lcall
insl
dec
jb
pop
adc
jno
and
or
cmp
hlt
mov
add
and
mov
xor
outsl
or
fiadds
pop
dec
test
mov
mov
pop
cmp
jns
lods
arpl
es
test
pop
sahf
imul
inc
push
sub
cmpsb
mov
cmp
das
clc
mov
aaa
mov
pop
repnz
decb
jecxz
repz
out
fsubp
inc
mov
xsavec
and
mov
lea
jb
dec
push
daa
and
mov
sti
mov
es
jae
jp
push
scas
pop
imul
xor
push
mov
mov
mov
cmpsb
and
sar
repnz
cli
dec
ja
inc
push
fdivl
rcrb
cmp
mov
mov
aad
xor
cmp
fs
mov
out
addr16
dec
jnp
stc
flds
adc
cltd
push
dec
sbb
push
push
iret
enter
ja
jge
push
out
popa
fdivrl
mov
xchg
test
jecxz
cmp
cmp
mov
jno
add
ja
inc
xchg
cwtl
dec
iret
rolb
add
fisttpl
push
mov
mov
xchg
sub
push
adc
je
push
and
imul
jge
push
repz
mov
aas
xor
or
sbb
je
mov
iret
inc
call
into
inc
mov
scas
mov
xor
iret
das
jb
xlat
inc
faddp
imul
dec
mov
loop
pop
scas
movsl
test
adc
cmpsb
pusha
es
dec
sub
rclb
aad
dec
lods
loopne
lcall
jns
les
mov
pop
xchg
test
cs
aam
dec
adc
pop
jns
daa
jle
subb
fsubrs
mov
sbbl
cmp
imul
ret
leave
xchg
sbb
xchg
adc
sbb
lock
add
sbb
out
pop
test
test
dec
ret
pushf
mov
jne
bnd
or
loopne
xor
ljmp
pop
cmp
push
pop
adc
pop
in
xlat
jge
inc
cmp
push
hlt
mov
test
repnz
mov
jb
shl
jl
mov
add
push
jge
addr16
ljmp
stos
mov
lahf
jns
push
sbb
cli
pop
gs
test
push
shl
cmp
xchg
push
pop
push
pop
jo
push
mov
nop
js
inc
sub
mulb
cmc
lahf
dec
ljmp
mov
shr
mul
or
fistpl
stos
ljmp
hlt
mov
sub
adc
loope
pushf
js
fwait
dec
inc
push
cmc
add
sti
rorl
movsb
fwait
and
and
pop
sar
mov
xchg
push
mov
rclb
jg
mov
not
sub
decl
stos
sti
ret
sub
test
xchg
es
dec
bound
mov
sbb
cmp
inc
push
stos
cwtl
mov
nop
jmp
jg
cmp
or
jnp
imul
testl
pop
mov
insl
sahf
ret
jno
xor
and
jmp
mov
push
sbb
sub
sub
mov
daa
sti
gs
adc
fcmovnu
stc
movsl
test
ret
lock
ss
sbb
mov
sub
cmc
movsb
jge
mov
and
bound
pop
cmp
fnstsw
test
xorb
inc
rol
loop
mov
mov
addr16
enter
push
and
and
push
notb
jo
out
push
pop
shlb
pop
ljmp
mov
inc
mov
lcall
dec
push
dec
ljmp
push
les
xchg
and
jnp
loop
mov
xchg
testb
add
push
test
test
jne
or
stos
cmpsl
dec
jp
scas
insl
push
push
sub
test
stos
dec
movsl
rolb
xchg
movsl
arpl
out
mov
jne
aaa
inc
addr16
push
ss
jl
sahf
pop
pop
popa
mov
mov
push
mov
add
lock
es
loopne
dec
jmp
outsb
sahf
push
mov
cmp
xchg
rorb
sbb
jle
push
push
mov
jp
aam
add
fcmove
mov
aad
xor
loopne
pop
mov
insl
out
add
or
js
add
bound
jne
or
mov
pop
cltd
adcl
and
mov
lret
test
and
test
inc
add
cmpl
dec
inc
pop
dec
jmp
dec
scas
mov
das
mov
add
sbb
mov
fidivrl
push
clc
and
cmpsl
mov
mov
fldt
call
push
xor
imul
pop
add
push
cli
stc
std
push
aas
push
push
mov
popf
mov
int
dec
cltd
test
test
jge
add
and
mov
nop
sub
mov
mov
cmp
fbld
inc
mov
xor
and
cmp
sub
mov
mov
lret
dec
pushf
int
sub
rorb
or
or
adc
and
lods
mov
stc
xchg
repz
lds
jne
into
lods
xor
repnz
test
dec
stc
nop
mov
mov
pop
enter
push
dec
mov
mov
lds
xor
es
aas
aam
xchg
adc
std
sbb
movsl
inc
ss
jmp
shll
and
insb
mov
sti
mov
pop
cmpsb
lcall
enter
sub
shll
lret
jnp
adc
pop
out
xchg
jmp
lods
test
or
jno
mov
pop
aad
rorb
push
fbld
cmp
aad
push
dec
push
push
or
cs
dec
lret
mov
ffreep
sahf
nop
cltd
ret
or
rcll
jg
cmp
add
lods
fisttps
cmp
pop
jnp
push
dec
addr16
faddp
sbb
call
addr16
nop
mov
ss
aas
xor
mov
aad
scas
mov
inc
lods
cmp
mov
jne
mov
jne
dec
mov
ret
scas
ds
mov
xchg
mov
movsb
and
aaa
scas
sbb
mov
std
cmp
inc
push
bound
movsl
lret
mov
inc
mov
imul
or
ja
push
pop
icebp
in
flds
mov
mov
lods
movsl
stos
sub
jg
outsl
cs
mov
mov
add
fcoml
repnz
out
xor
mov
dec
shll
in
loope
cltd
xor
mov
jae
and
fisttps
dec
sbb
dec
fiadds
jge
pop
adc
jmp
std
scas
mov
jp
sbb
mov
sub
sbb
push
mov
jo
inc
push
xor
sbb
imul
push
cmpsb
cmp
ja
adc
mov
push
out
out
imul
cmpsl
or
adc
add
add
inc
pop
push
mov
add
push
lds
insl
lcall
rcll
mov
aad
lahf
insl
inc
cmp
pop
add
push
inc
stos
or
pop
mov
mov
adc
in
push
imul
out
loop
loopne
inc
popa
sbb
sub
rolb
int
jp
xchg
cmp
pop
movsl
cmpsl
je
test
out
sub
push
xor
std
movsl
adc
popa
xor
ss
je
adc
movsl
xor
rclb
xor
xlat
daa
test
out
pop
inc
mov
fs
inc
stos
movsb
mov
stos
inc
std
cwtl
lods
xor
leave
addr16
test
inc
fadds
mov
sbb
pop
outsl
and
jnp
mov
push
es
xchg
mov
movsl
jne
adc
icebp
push
and
cld
dec
js
ss
je
stos
and
mov
dec
es
mov
xchg
sbb
cmp
sub
xchg
outsl
lret
sti
mov
adc
jle
mov
cmp
pusha
ljmp
adcl
sub
scas
je
repnz
xchg
ret
xchg
testl
adc
pop
jo
push
dec
pop
xchg
mov
hlt
push
add
inc
dec
dec
insb
cmc
add
push
and
cltd
push
pushf
mov
ss
idivb
dec
repz
jle
inc
icebp
add
mov
loope
xorb
xchg
sub
nop
dec
dec
cs
push
add
xor
mov
push
mov
or
cmc
stc
loopne
or
int3
jecxz
int
aam
popa
xor
push
clc
and
inc
dec
inc
pop
push
jecxz
loop
and
xor
insl
paddusw
popf
lret
sbb
ret
jno
fsubp
mov
sar
inc
jbe
ffree
movsl
push
ljmp
int3
pop
jne
pop
lahf
jne
or
sbb
push
pop
sbb
xor
push
sarl
mov
out
and
cmp
cmp
mov
movsl
jmp
rol
mov
sub
pop
iret
insb
push
es
sub
sub
dec
loopne
adc
sbb
dec
inc
dec
hlt
pop
rclb
loope
jge
test
bound
jge
pop
add
push
insb
mov
sbb
push
cmp
cmpsb
in
xchg
mov
jecxz
xor
adcl
in
incl
loopne
fildll
call
mov
add
sti
sub
loop
xor
lds
rcr
xor
js
mov
int
aam
push
cmp
and
mov
jo
sarl
or
fldl
rorb
roll
dec
dec
add
jmp
or
divb
mov
xchg
pmulhuw
popf
xchg
out
inc
adc
out
fxch
in
imull
xchg
shlb
div
xchg
loope
jmp
add
outsl
stc
push
sbb
ja
fprem1
aam
cmp
in
cli
sbb
clc
mov
pop
incl
cli
mov
sub
cmp
inc
push
add
pop
cmp
fs
jecxz
ss
pusha
stc
add
adc
mov
ljmp
test
sbb
mov
mov
xchg
cmp
cmp
sbb
pop
scas
sbb
pop
dec
cli
mov
clc
and
aas
mov
arpl
aad
mov
cmp
mov
out
ret
lahf
mov
or
xchg
adc
shlb
jmp
mov
mov
push
xchg
jnp
push
push
pusha
cmpsb
mov
inc
mov
cmp
jp
shr
movsl
push
add
pop
test
sub
fxch
add
ret
and
sahf
mov
inc
xor
ds
dec
js
insb
js
ret
push
divl
push
mov
xchg
lret
test
dec
ret
test
mov
cmp
lcall
lock
test
xor
dec
push
cmp
add
nop
in
push
inc
mov
jae
adc
sbb
mov
push
pop
push
mov
mov
or
cmpsb
outsl
xor
or
mov
scas
add
iret
cmp
jns
stc
or
xlat
jae
adc
inc
jno
xchg
xchg
leave
inc
aaa
in
daa
icebp
dec
push
fcmovnb
ficompl
mov
sar
and
mov
notl
andb
movsl
push
jp
and
arpl
or
prefetchnta
icebp
inc
sbb
enter
sbb
test
fs
mov
repnz
cmp
lcall
xor
jns
jmp
insb
out
mov
pop
aad
lods
mov
in
mov
call
push
mov
insl
movb
jb
out
adc
sbb
sbb
fidivl
adc
sbb
cmpsb
xchg
dec
ja
dec
push
aaa
call
sbb
mov
fbld
pop
popa
int
out
add
int
test
popa
mov
inc
mov
fincstp
imul
dec
test
xchg
jl
icebp
sahf
stos
jns
xchg
dec
fs
addl
cmp
cld
leave
pop
inc
push
enter
lret
push
popf
in
addr16
fwait
in
loop
arpl
xchg
bound
sub
imul
lcall
adc
mov
dec
test
inc
cmpsb
mov
arpl
cmp
xor
call
ret
dec
xchg
and
jb
lahf
fiadds
in
sbb
cmp
sbb
xchg
jle
sub
pop
scas
pop
cmpsb
and
ss
outsl
cmpsb
shll
out
sbb
and
and
clc
mov
popa
ljmp
jne
ret
sub
lds
pop
dec
repnz
sbb
stos
shr
repnz
mov
cmp
sahf
dec
in
mov
ss
pop
popf
rolb
xchg
mov
jg
loopne
cmpsb
xchg
arpl
pop
fsub
dec
push
xor
cs
in
ljmp
add
movsl
xchg
push
sub
cmpb
dec
dec
fcoml
inc
dec
mov
dec
test
push
cltd
add
mov
mov
xor
inc
or
sub
jg
pop
je
pop
stos
into
rcl
mov
movsb
push
pushf
hlt
mov
xor
ds
inc
or
mov
jmp
iret
add
cmc
xchg
and
dec
fdivr
int
js
push
and
pop
shll
dec
sbb
test
mov
inc
xchg
aad
mov
fs
in
insl
mov
or
fiaddl
pop
icebp
pushf
add
stc
jmp
push
pop
mov
dec
adc
lahf
fmul
faddl
mov
insl
pop
jno
sbb
jmp
push
pop
push
ret
pop
mov
sub
inc
pop
mov
xchg
dec
sub
jp
movsl
lods
jecxz
push
xchg
out
fs
icebp
iret
mov
jno
lcall
sub
jmp
ret
mov
mov
push
cmp
xor
pop
ffree
mov
sbbl
dec
adcl
sbb
fidivl
mov
and
pop
fucomip
mov
mov
in
pop
daa
movsb
adc
sub
xchg
outsl
cs
pop
add
insb
sub
push
jb
mov
cltd
push
out
pusha
mov
lea
pop
bound
insb
adc
push
mov
cmp
loopne
je
push
gs
aad
fldl
outsl
cmc
push
and
decl
data16
movsl
imul
aam
inc
ret
ja
xor
xchg
mov
pop
cmp
cmp
loope
enter
mulb
mov
mov
jbe
ret
mov
mov
push
jne
clc
std
mov
pop
arpl
adc
sbb
ljmp
insl
testb
add
cmp
inc
roll
dec
push
jne
lods
lret
jnp
and
test
mov
sub
notl
pop
out
push
jl
add
add
lcall
movsb
fdivrs
add
pop
movl
xchg
xchg
push
gs
mov
and
mov
jle
std
pop
into
fwait
jno,pn
mov
iret
imul
mov
in
sets
sub
jge
pop
std
sub
mov
js
and
sti
push
fs
outsl
sub
xchg
inc
add
in
clc
loope
dec
pusha
lock
and
adcb
jbe
lock
leave
popf
pop
sbb
dec
jns
push
idivl
adc
inc
enter
mov
nop
cmp
jae
sbb
push
in
imul
pop
repnz
mov
bound
mov
sub
sub
adc
jae
dec
or
call
inc
popa
stos
gs
aam
insb
hlt
scas
pop
jge
push
test
sbb
cmpsb
inc
jnp
jl
sub
and
pusha
cmp
cltd
inc
xor
enter
inc
sub
pop
out
push
rorb
mov
inc
jle
mov
mov
inc
xchg
add
xor
dec
out
sub
arpl
inc
push
jle
jg
cmp
add
pop
jle,pn
dec
jl
push
push
push
mov
dec
xor
jg
ret
loopne
arpl
xchg
fstps
in
mov
dec
fwait
js
lea
aam
out
jbe
jo
cmpsb
mov
mov
or
inc
jbe
stos
cmpsb
hlt
pop
icebp
mov
cmp
xchg
ja
mov
movsb
jecxz
gs
cmp
outsb
jmp
rorl
std
aaa
popf
cld
bound
cmpsl
movb
inc
out
mov
xor
mov
outsb
sbb
xor
and
mov
add
push
mov
or
mov
xchg
mov
stos
fldl
inc
xchg
push
lock
cli
jp
add
popa
mov
mov
jmp
jne
jno
fldcw
rcl
ds
pop
cmp
aam
cmp
test
enter
ja
clc
xchg
sub
les
dec
or
mov
cmp
xor
xchg
xor
push
addr16
cmp
dec
je
in
std
xchg
enter
pop
loope
xchg
inc
pop
in
mov
mov
sahf
in
dec
jmp
js
add
int3
lods
ret
testl
jo
sbbl
mov
cwtl
out
dec
mov
xor
addr16
js
dec
mov
pop
mov
push
loop
dec
dec
cltd
fs
iret
jp
jno
push
xor
push
xchg
in
sbb
cmp
push
hlt
xor
add
test
sbbl
iret
andl
hlt
inc
mov
shlb
dec
call
pushf
xor
out
pop
testb
push
jl
sub
outsl
iret
ja
ja
cmp
outsb
cs
call
in
aaa
arpl
jp
cld
arpl
jno
aad
in
das
jne
push
lretw
sbb
cmpsb
mov
cmpsl
sbb
inc
icebp
add
jb
adc
inc
mov
pop
les
jg
xchg
cmp
ret
cmp
addb
das
sub
pop
cmp
cltd
pop
idivb
js
add
fstpt
adc
dec
cmp
and
pusha
out
jp
jg
cwtl
xchg
sub
insl
mov
add
mov
adc
inc
dec
mov
xchg
fwait
outsb
test
stos
enter
mov
dec
xchg
push
sbb
loope
or
jbe
add
xor
dec
pop
ja
push
rcrb
stos
push
out
sbb
pushf
xchg
cwtl
mov
aaa
push
loope
add
test
adc
stos
xchg
fldcw
sbb
inc
pop
adc
adc
daa
cli
jns
jno
int
repz
jne
pop
xchg
add
je
mov
das
pop
inc
push
pop
and
into
popl
fldenv
cmc
int3
add
loop
test
std
iret
in
adc
jb
jae
cmc
cs
adc
jp
ljmp
mov
mov
das
insb
dec
aaa
popf
xor
cwtl
jp
inc
mov
int
inc
and
pop
inc
cmp
mov
push
dec
jmp
scas
jne
andb
jo
in
sar
pop
mov
adc
or
mov
add
in
jecxz
mov
mov
mov
lret
cmp
shll
cltd
mov
mov
test
outsb
push
shrb
mov
cmp
push
popf
mov
mov
mov
cmp
popa
jg
mov
in
jg
fsts
mov
push
fsubrs
aas
or
mov
fisubs
pushf
inc
js,pt
loopne
cmp
out
xchg
pop
xchg
cltd
push
testb
outsb
int3
imul
push
jmp
pop
mov
jmp
fucomi
cwtl
pop
xchg
lock
jns
in
int
adc
jl
loop
lahf
fdivr
or
mov
mov
push
xchg
lea
push
dec
daa
push
adc
hlt
out
cmpb
jg
mov
leave
dec
aaa
xchg
add
jo
cli
lods
jo
ljmp
pop
xor
sub
enter
xlat
out
pushl
cli
inc
mov
jno
or
inc
or
sub
mov
je
insb
xchg
mov
lret
pop
xor
test
jne
insl
das
adc
push
stos
test
push
jl
mov
dec
fsub
and
mov
jb
outsl
sub
fsubr
fwait
cs
jecxz
xor
push
subl
push
jno
push
bound
fistps
xchg
push
mov
cmp
push
add
mov
cltd
xchg
in
xor
cwtl
xor
xor
push
add
cli
dec
mov
loope
or
lds
push
pop
pop
dec
adc
xchg
movb
and
adc
js
dec
xchg
lahf
fstpl
xchg
cli
add
stos
rorl
nop
fistpl
cltd
pop
out
xor
fwait
popf
popf
inc
mov
push
fnstenv
add
bound
dec
cld
fsubrs
lods
jo
out
cwtl
ret
push
lods
mov
cmpsl
cltd
stos
mov
insl
gs
dec
addr16
and
les
mov
pop
jl
push
xor
add
shrl
loope
jge
mov
inc
enter
or
pop
enter
int3
or
xchg
in
aam
lods
or
std
mov
jne
inc
push
daa
shrb
mov
add
lds
enter
jns
pop
pop
icebp
cwtl
push
mov
cmp
sahf
adc
mov
inc
int
xor
push
mov
add
leave
testl
mov
mov
add
leave
adc
popa
pop
and
adc
mov
insb
movsb
push
stc
cmpsl
add
lea
ja
sub
xchg
push
lock
adc
dec
adc
notl
ja
ja
fwait
push
not
inc
stc
mov
sbb
mov
aas
leave
arpl
mov
test
sbb
mov
fwait
outsb
cmp
push
sahf
mov
stc
mov
je
pop
jno
adc
cli
jl
mov
out
adc
mov
daa
fidivrs
mov
lahf
mov
filds
xchg
addr16
mul
popa
and
inc
lcall
ja
enter
fidivrl
out
imul
pushf
lret
xor
pop
or
iret
lods
dec
lahf
add
cli
adc
daa
cwtl
test
lock
sub
and
jge
das
mov
jbe
xlat
sbb
hlt
xchg
out
or
lahf
jp
inc
sub
mov
sub
std
adc
jecxz
in
adcl
loop
pop
mov
sti
ljmp
ljmp
and
pop
push
test
xor
adc
hlt
js
xchg
gs
mov
xchg
cwtl
sahf
sub
sbb
dec
xchg
add
pop
xor
sbb
mov
in
lret
jg
mov
imul
fldenv
cmc
int
or
into
in
mov
mov
out
rorl
js
xchg
aaa
loopne
iret
daa
pop
mov
jno
ss
xor
int3
sti
aaa
sub
sub
pushf
adc
xchg
popf
adc
xor
sub
in
push
sbb
test
lods
ret
lods
mov
inc
loope
cmp
push
mov
inc
repz
sub
test
inc
cwtl
mov
fidivrl
jno
mov
cmp
pop
mov
repz
imul
cli
lret
add
int3
rcrb
xchg
aas
aam
push
mov
adc
mov
and
sub
inc
inc
ds
push
jge
mov
cmpsb
aas
leave
bound
or
and
cli
ds
ret
xchg
lds
addl
push
mov
mov
clc
mov
cltd
movl
loopne
repnz
mov
ret
xchg
dec
cli
cmp
xor
push
sub
rorb
inc
adc
hlt
mov
orb
and
or
pop
fisttpl
xor
clc
mov
jp
mov
sbb
mov
bound
cmpl
je
test
fisubl
xor
inc
adc
js
adc
js
in
xor
push
cmp
xor
lds
inc
cli
jne
adc
aad
ds
or
mov
movb
adc
jg
cld
clc
andb
hlt
int3
rcll
sbb
sub
mov
ret
mov
lods
or
lret
cmp
mov
sub
popf
imul
nop
xor
pop
mov
mov
mov
mov
fnstcw
lret
cmp
outsb
and
cld
pop
mov
es
jecxz
push
movsl
xor
jb
fimull
fnsave
sub
iret
jnp
add
fidivrl
cltd
mov
loopne
ss
sub
scas
out
data16
adc
cmp
and
mov
pop
push
mov
cli
xor
jno
cmp
dec
add
fcmove
cmp
xor
push
movsl
mov
or
xor
fisubs
cli
pop
shrl
cmpsl
xchg
adcb
pop
adc
mov
xor
mov
add
mov
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
dec
add
lods
dec
add
test
add
add
add
add
lret
add
movsb
add
rep
add
aas
inc
gs
push
inc
push
je
insb
imul
pop
pop
add
dec
inc
inc
dec
dec
inc
push
inc
push
pop
pop
inc
push
dec
dec
pop
add
jne
inc
jae
xor
