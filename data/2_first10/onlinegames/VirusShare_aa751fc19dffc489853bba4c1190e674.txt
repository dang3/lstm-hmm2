sbbl
cmpsl
cld
mov
pop
pop
xchg
gs
dec
aas
das
sbb
xor
sarl
sub
mov
jae
gs
push
sub
mov
dec
cmp
sbb
mov
lahf
cld
scas
ror
gs
add
jns
insl
cld
arpl
incl
out
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
fimull
xchg
lcall
xchg
xchg
sahf
adc
dec
adc
out
lcall
daa
mov
iret
leave
rcrl
cmpsl
lcall
ret
jmp
lock
fwait
fwait
shlb
testl
pushf
adc
int3
hlt
mov
in
add
es
lret
je
jle
xchg
idivl
jg
and
movsb
sub
adc
pop
test
mov
test
por
push
lods
cmp
mov
lcall
aaa
mov
hlt
xor
push
movsb
shll
xchg
xor
and
push
sub
mov
xchg
inc
xchg
sub
sub
daa
mov
es
enter
mov
cld
push
mov
cld
mov
mov
sbb
mov
rorb
cld
adc
call
mov
lret
or
and
mov
or
pop
push
mov
add
dec
add
cld
add
xchg
scas
add
jl
cld
pop
cmp
pushf
adc
out
mov
pop
aaa
out
jo
int3
or
pop
les
mov
add
imulb
je
adc
je
idivl
mov
int3
aas
adc
jb
addr16
cmp
adc
pushf
cli
xlat
stos
scas
test
ljmp
movsb
dec
and
inc
ljmp
jmp
dec
and
and
in
icebp
repz
out
pop
rolb
mov
or
mov
je
aas
repnz
mov
jl
jecxz
insb
ljmp
add
sti
xchg
mov
inc
or
in
test
adc
mov
test
loop
inc
mov
mov
cmp
xchg
stc
paddw
decl
dec
adc
cld
xchg
mov
dec
mov
dec
icebp
test
inc
int3
and
or
loop
inc
dec
xor
fbld
pop
les
test
shrl
or
dec
xchg
loop
out
jl
mov
jb
and
mov
scas
repz
jmp
sbb
movsb
dec
mov
fdivrs
mov
popf
test
call
mov
and
sub
lcall
stos
les
push
test
repz
fsubr
repnz
out
pop
scas
jae
sub
cmpsl
dec
iret
in
xor
test
data16
mov
xlat
bnd
repz
loopne
repnz
jo
dec
shlb
testl
cmpsl
pop
dec
inc
in
in
repz
cmp
jns
enter
sti
movsl
xor
int3
addr16
xchg
hlt
jecxz
inc
mov
neg
lcall
aaa
leave
sahf
ss
mov
dec
mov
hlt
idiv
mov
fwait
mov
out
cmp
pop
push
adc
and
or
clc
fcomip
je
push
popf
dec
cmp
sub
in
stos
jmp
add
pop
jp
out
stc
jne
sub
mov
mov
jmp
loopne
sbb
aas
jge
fidivrs
stos
dec
pmulhw
dec
jp
cld
std
ljmp
iret
jmp
lock
ljmp
jmp
jb
push
stos
pop
in
xchg
xchg
lods
out
cli
inc
sub
and
jb
ja
cli
movsl
in
mov
aad
pop
or
fildl
dec
test
cmp
aam
pop
add
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
inc
mov
mov
mov
mov
stos
fsubs
pop
enter
out
pop
dec
shrb
or
or
sti
test
add
repnz
add
sub
mov
mov
or
lods
test
jb
jmp
scas
sti
jg
pop
out
aas
inc
out
inc
adc
loopne
inc
push
repnz
cltd
push
inc
xor
lods
push
daa
and
add
xchg
or
movsb
jne
cld
js
and
clc
lret
xchg
push
ljmp
xlat
dec
mov
pop
popa
inc
jecxz
ds
pop
and
cmp
dec
test
loope
mov
ljmp
cli
sub
iret
test
adc
lods
dec
cmpsl
xchg
ljmp
jns
out
cmp
dec
call
jne
cmpsl
mov
adc
and
sub
add
xchg
jae
adc
sub
cmp
test
inc
pop
cmpsb
add
dec
lret
movsb
dec
stc
fimuls
mov
lret
mov
cld
mov
mov
lret
lcall
mov
mov
mov
xchg
cmc
mov
pop
jmp
cmpsb
mov
add
cmpsl
jbe
dec
cli
hlt
adc
pushf
loope
lods
pushl
cld
ljmp
ss
imul
into
sbb
scas
or
out
inc
ljmp
hlt
jno
inc
fwait
or
sub
add
aaa
cli
mov
adc
in
stc
xor
xor
rorl
dec
xor
js
xchg
ja
cs
lods
in
xchg
in
inc
add
add
adc
mov
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
lret
xchg
mov
cmp
inc
jnp
lea
cltd
clc
je
pushf
cmp
lock
pop
loop
add
xor
popf
xor
mov
fwait
pop
add
imul
in
sub
push
sub
xchg
repnz
aas
inc
test
add
add
push
ljmp
cltd
add
push
or
pop
push
xor
xlat
das
xchg
inc
push
and
inc
dec
xlat
inc
and
insl
jb
adc
hlt
xchg
dec
test
or
fcoml
hlt
leave
xlat
push
xchg
hlt
in
fcomi
dec
or
mov
nop
cmpsl
xchg
gs
xchg
mov
mov
shrb
mov
hlt
xchg
push
int
cmp
ds
cmp
sub
jg
jmp
cmp
jmp
and
cmpb
add
mov
jns
xchg
push
cmp
daa
push
jl
aaa
xchg
jae
pushf
shr
xchg
add
push
mov
shll
outsl
add
scas
daa
dec
adc
stc
pop
mov
popf
shl
xchg
cld
ret
jno
popf
subl
fnsave
jnp
ja
scas
insl
jl
ds
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
cmp
xchg
mov
push
ret
out
je
cmp
in
lods
fadd
fwait
dec
pop
jns
cs
sbbl
lds
inc
pop
xor
int3
jl
jno
adc
popl
push
adc
adc
movhps
ret
inc
jle
enter
pop
repz
or
sub
int3
mov
mov
ficoml
dec
enter
add
mov
xor
sub
jge
lahf
ret
jmp
hlt
daa
std
sub
out
xor
out
jae
outsl
jb
jl
outsl
cli
imul
scas
ret
sbb
sub
rorb
test
mov
aam
je
repz
push
movsb
lahf
jbe
sbb
mov
std
daa
push
xchg
in
xor
mov
fcoms
jl
mov
mov
aad
cmpsl
dec
ja
add
and
mov
mov
mov
cmc
imul
push
nop
mov
sti
stos
cmpsl
cmp
mov
std
jmp
push
push
repnz
in
cld
ljmp
pushl
lahf
jl
inc
sti
cld
add
inc
loopne
mov
pop
cld
icebp
loopne
icebp
decl
xor
inc
mov
stos
xchg
add
push
nop
cwtl
lea
xchg
xchg
nop
mov
popf
lcall
mov
mov
fists
repnz
fstpt
imul
cld
push
push
inc
data16
cmp
loopne
adc
dec
data16
adc
testl
xchg
enter
adc
scas
mov
out
jbe
dec
icebp
fdivp
dec
adc
es
stc
repz
clc
sar
out
cld
lcall
call
lahf
push
aad
out
clc
pop
cmp
stc
incl
test
jp
mov
mov
sti
mov
push
or
popf
mov
add
lahf
jg
rcrl
aas
in
lods
add
adc
lea
cmp
std
jecxz
fcomps
hlt
mov
ds
into
or
das
sbb
xor
fs
loopne
rclb
sar
cmp
adc
iret
add
aad
mov
mov
gs
xchg
gs
dec
inc
xor
push
xchg
mull
mov
push
inc
pop
cmpsl
jno
test
fwait
stos
mov
cwtl
gs
imul
sub
xchg
sahf
sar
into
and
cli
loop
dec
fidivl
dec
fisttps
iret
int
aad
int3
fstl
rclb
addr16
or
cli
xchg
ret
mov
in
fldenv
inc
xlat
jle
xlat
jp
pop
xor
imul
data16
repz
or
in
out
out
xchg
idiv
shll
frndint
cmc
jmp
test
jmp
mov
jmp
arpl
jmp
mov
jmp
out
fs
jmp
aaa
out
jmp
stc
jmp
out
daa
mov
out
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
clc
or
aad
call
pusha
mov
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
mov
notl
adc
pop
stos
adc
inc
js
sub
pop
iret
loop
lret
iret
cli
push
push
and
xchg
sub
loop
fdivr
in
fistpll
and
mull
xchg
sbb
xchg
mov
jp
movsl
cli
mov
rol
xlat
mov
inc
aas
mull
fidivl
lret
pop
jge
stos
jl
or
adc
cmpb
jmp
dec
and
addr16
jmp
inc
lret
add
pop
ret
in
cmp
xor
add
repnz
dec
push
and
lods
std
xchg
cmpsb
scas
dec
xchg
dec
dec
loop
shlb
or
cmp
mov
lahf
xchg
pop
sar
fwait
pop
test
inc
mov
and
clc
sbb
fwait
nop
jbe
pop
shll
xchg
shll
rcrl
xchg
lret
shll
xchg
xchg
lret
and
cwtl
lret
mov
clc
and
pop
lret
push
sbb
sbb
int
outsl
add
push
mov
xor
dec
sub
aaa
scas
cli
daa
scas
in
inc
mov
shll
jmp
or
cli
pop
xchg
not
lret
in
shr
sub
xor
inc
ret
xor
lods
lods
cld
cmpb
adc
out
stc
adc
aad
push
out
out
push
div
cmpsb
jns
stos
jecxz
mov
pop
and
or
subb
pop
pop
add
jl
sub
jmp
fcomi
xchg
mov
mov
je
cltd
jle
inc
add
xor
ret
jle
idivb
in
mov
push
scas
popf
pusha
jbe
pop
push
les
add
mov
lock
and
out
xorb
jl
in
dec
add
mov
mov
push
repnz
loope
cmc
cld
add
and
je
cld
mov
scas
mov
add
cld
jg
lods
in
aad
xchg
mov
cmp
sbbb
jl,pt
std
scas
and
pop
fildll
jl
sti
jl
adc
sbb
add
iret
cmp
mov
mov
jbe
fwait
push
aas
and
adc
repz
cli
je
ja
or
out
jno
mov
add
lahf
jb
imull
adc
adcl
test
cmp
adc
mov
je
imul
and
movsb
xchg
cltd
outsb
mov
cltd
out
adc
cmc
xchg
nop
bound
hlt
sti
mov
mov
loope
std
mov
sbb
adc
pop
pop
imul
testb
jbe
in
jmp
cld
mov
outsb
cld
mov
push
xchg
and
cld
mov
mov
xchg
je
sbb
mov
or
leave
mov
mov
stos
lods
add
cmpsb
cld
sbb
xor
add
sbbl
je
add
pop
and
rcll
cld
mov
rcl
fildl
popl
add
mov
cmpsb
xrelease
ja
mov
je
xlat
cmp
xchg
mov
int3
je
aaa
add
jl
jecxz
cmp
push
pop
jne
movsb
stc
pop
adc
movsl
sub
popf
in
xor
enter
lods
out
mov
gs
pushf
pushf
std
dec
jle
cld
lods
arpl
test
cmp
icebp
xor
xchg
xchg
sti
xchg
int3
lods
sbb
mov
insb
ficoms
mov
add
cmc
notl
scas
add
mov
mov
cli
and
cmp
cmp
mov
je
jns
je
ret
mov
or
movsb
mov
pop
xor
fsub
adc
repnz
inc
iret
je
adc
mov
or
cld
pop
jecxz
dec
out
fldl
mov
clc
or
jmp
jmp
repnz
imul
pop
mov
pop
cmp
mov
fbstp
addr16
clc
fucomp
jle
pop
repnz
and
and
ret
arpl
jne
cmp
mov
cmpsb
adc
jb
dec
not
jg
xlat
data16
cmpsb
imul
test
daa
or
or
pop
push
push
jle
subl
add
mov
std
inc
test
dec
mov
jl
shr
add
notb
test
lea
pushf
dec
xor
mov
repnz
pop
shr
iret
pop
xchg
sbb
sub
and
cli
xor
mov
dec
adc
mov
xchg
mov
or
push
sti
js
cli
add
fs
add
xchg
aaa
jae
add
aas
dec
dec
dec
shll
repnz
cli
inc
in
pushf
in
lcall
jg
jg
fcompl
enter
shl
in
rol
lahf
in
mov
stc
adc
xchg
neg
push
in
push
fbld
mov
mov
xchg
fwait
xchg
lcall
mov
pushf
mov
mov
add
xchg
popf
lea
sbb
nop
fwait
mov
add
mov
xchg
lcall
dec
rorb
xchg
rol
cmpsb
icebp
sahf
mov
sub
pop
jmp
mov
loop
xchg
xor
in
xchg
mov
sub
cwtl
xchg
loop
jnp
test
xchg
mov
sbbb
test
xchg
jecxz
lea
and
jl
xchg
lcall
lcall
fwait
enter
les
lea
lock
lret
dec
cld
scas
mov
and
and
pushl
jb
xchg
nop
jns
mov
testl
ss
nop
mov
sub
xchg
rcrb
xchg
mov
fdivs
fidivrs
jge
pop
mov
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
shl
test
mov
lods
mov
aam
ret
rcll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
sbbb
stos
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
out
inc
jnp
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
push
std
dec
jo
mov
xchg
mov
push
into
fdivs
mov
mov
add
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
push
iret
int
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
add
int3
mov
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
das
add
add
xchg
lret
jo
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
or
add
ret
imul
ret
push
ret
or
scas
incb
add
stc
pop
pop
icebp
arpl
push
nop
or
js
fstpl
mov
jp
popf
mov
jp
ret
enter
jp
fmull
stos
fcoms
sbb
and
testb
sbb
popa
mov
mov
sub
clc
popa
cld
std
aaa
hlt
dec
adc
jno
adc
fbld
mov
aaa
sub
divb
aas
push
inc
stos
jo
std
clc
adc
aaa
push
xlat
leave
xchg
jo
rorl
cs
mov
clc
pop
add
es
aas
sarb
sub
cld
imul
imul
fwait
dec
leave
mov
lret
xor
and
lds
es
outsl
push
and
sar
cld
icebp
xchg
gs
add
fdiv
dec
mov
movaps
cld
jmp
sub
xchg
gs
aam
mov
xchg
jnp
xchg
gs
gs
inc
xor
fs
mov
lds
xchg
clc
jns
gs
adc
pop
push
dec
sbb
cmp
sub
mov
xchg
gs
int
lret
mov
lret
mov
jnp
sub
mov
push
xor
mov
fcmovne
xchg
movsb
movsl
lret
mov
mov
mov
jmp
mov
cmp
jne
sub
mov
cld
cld
inc
push
mull
inc
mov
and
push
sub
jecxz
add
lcall
and
add
call
gs
xchg
gs
mov
gs
xchg
xchg
lea
gs
gs
push
inc
pushl
mov
mov
mov
fwait
arpl
sub
inc
jmp
xor
aad
pop
cmp
xchg
gs
lods
jns
incl
lods
jg
jl
ret
sahf
notb
mov
je
mov
push
stc
cmpsl
or
mov
adc
repnz
mov
mov
cld
std
iret
push
mov
add
pop
cltd
pushf
mov
lods
mov
stos
test
lods
mov
and
stos
lea
cltd
mov
cli
daa
xor
jecxz
test
lahf
test
pop
cwtl
test
fbld
pop
idiv
out
mov
icebp
xlat
hlt
loopne
xchg
sti
lahf
fdivr
pusha
cwtl
sti
jl
idiv
cld
out
inc
adc
mov
dec
cld
mov
jmp
sahf
fdivr
std
fbld
cld
cli
dec
not
and
cmpsl
dec
scas
mov
or
shr
cld
call
jp
out
mov
in
mov
shrb
xor
test
stc
xchg
dec
push
clc
notl
cld
add
fnsave
incl
in
lcall
cld
mov
insb
mov
js
mov
mov
imul
jnp
aad
jns
pop
jl
jg
sarb
in
pop
cld
iret
nop
data16
filds
popf
pusha
ds
mov
test
xchg
mov
jp
decl
inc
ljmp
adc
cmpsl
dec
out
lcall
xchg
call
aam
loopne
rolb
addb
mov
mov
mov
cwtl
hlt
mov
and
movsb
or
cwtl
lock
or
hlt
in
iret
int
cld
invlpg
push
mov
jb
aam
clc
in
jmp
mul
xchg
pushf
enter
mov
add
call
nop
lea
xchg
fistl
and
int
loope
lret
daa
jnp
repz
pop
in
in
mov
mov
jnp
clc
out
in
mov
stos
in
leave
jae
xorl
sub
inc
push
mov
mov
cld
nop
mov
shlb
jl
add
lods
xchg
rol
int3
xchg
xchg
rcrl
scas
in
movsb
xchg
cld
es
je
rorl
je
jecxz
mov
pop
xlat
jb
arpl
push
lock
sub
idiv
out
lods
scas
je
mov
sti
clc
push
jbe
mov
and
fcmovnbe
test
inc
jle
cli
js
testl
jbe
in
repz
jl
idivl
jg
nop
je
fldt
cltd
in
in
inc
pushf
fcoml
mov
ds
imulb
sti
repz
mov
je
out
pop
mov
push
ds
mov
es
insb
cmp
jb
jmp
stc
jb
cmpsb
aas
mov
in
fwait
inc
clc
xor
jmp
cmp
mull
jecxz
xchg
jns
jmp
hlt
xchg
jns
cltd
mov
fwait
cltd
imull
dec
cmp
enter
ja
decl
add
enter
shl
or
fninit
jb
add
xchg
jb
mov
test
out
loopne
hlt
out
and
cld
mov
and
adc
cmp
nop
in
adc
sub
inc
out
mov
in
xchg
adc
jle
adc
lahf
push
ja
clc
in
jo
cmp
jo
xor
in
xchg
ret
inc
add
sbb
jno
movsb
mov
xchg
fcomps
popf
fs
inc
sbb
in
popf
in
dec
incb
xchg
dec
adcb
in
out
inc
dec
push
xchg
in
mov
aas
movsl
mov
and
sbb
out
and
pushf
inc
inc
stos
stos
xchg
xchg
xlat
mov
in
mov
mov
push
and
xor
add
in
out
fsubr
xchg
cmp
push
add
or
inc
ds
in
inc
ss
daa
mov
fdivrs
inc
ret
in
in
or
pop
add
and
in
mov
pushf
insb
inc
out
lods
inc
inc
jle
lcall
and
or
test
sti
jnp
adc
xchg
adc
xchg
in
or
out
mov
xor
in
dec
dec
cmp
cwtl
dec
insb
inc
pushf
fdivr
and
xor
add
daa
sbb
pusha
add
push
in
fwait
jbe
sbb
fcoms
xchg
jecxz
mov
dec
inc
ficoms
lods
je
in
mov
dec
sub
or
xor
jnp
cmpl
push
ljmp
cld
mov
inc
stos
pop
les
cmp
insb
pop
call
in
test
inc
inc
cmpsl
mov
mov
mov
adc
or
fadds
cmp
andb
incl
scas
loopne
cmp
in
xchg
std
cmp
bsr
rcll
and
out
or
lods
jo
dec
mov
adc
dec
call
bound
in
mov
xchg
sbb
inc
js
inc
mov
jnp
adc
loopne
mov
inc
jl
lods
xor
leave
in
je
cmp
mov
or
shlb
adc
cmp
inc
cmp
in
sbb
mov
in
mov
or
inc
test
jl
push
mov
cmpsl
in
bnd
bnd
xlat
hlt
dec
add
add
call
in
je
int3
icebp
inc
fsubs
sbb
or
repz
rolb
pushf
int
lcall
lock
pop
push
fsubl
leave
mov
daa
call
mov
enter
push
test
add
lret
pusha
mov
pop
lret
mov
daa
sbb
call
push
test
inc
in
fidivl
xchg
test
lcall
in
les
cmp
jnp
in
idivb
or
sahf
and
adc
xor
cmp
decl
and
in
inc
and
clc
add
sarb
xchg
movsb
outsb
push
push
cmp
fldlg2
popf
or
in
add
lock
add
xchg
and
xor
shll
cmp
aam
adc
jg
fucomip
js
js
je
es
add
mov
loope
addr16
add
ret
mov
cmpsb
dec
inc
cmp
shr
and
dec
inc
and
and
aaa
dec
jp
add
shlb
cmpl
rorl
aas
mov
das
push
rcl
in
test
xchg
mov
and
add
js
add
test
mov
cmp
or
bound
cmp
and
dec
repnz
inc
in
in
jo
je
jecxz
shll
insl
adc
in
dec
and
adc
fnsave
push
stos
hlt
sbbb
mov
pop
mov
scas
loope
fwait
jge
in
lock
popf
js
jae
rorb
sub
fucomip
cmp
inc
xor
sub
test
push
sub
into
int
lret
lret
dec
dec
neg
or
add
inc
sbb
call
dec
push
xor
push
jae
jl
xor
adc
and
push
js
mov
adc
xchg
outsl
jge
stos
loop
lock
lods
scas
aam
mov
and
scas
pop
mov
ljmp
mov
xchg
inc
push
add
shl
xchg
hlt
xchg
lock
xor
rolb
jp
and
sbb
lock
dec
dec
add
lock
out
orb
sbbb
movsb
loop
add
mov
fdivl
inc
adc
mov
out
fdivrp
inc
xchg
fildll
lea
call
inc
xchg
mov
jg
test
out
add
aad
in
cli
inc
sub
xor
jbe
sbb
dec
pop
pop
je
sbb
cmp
push
je
aam
nop
enter
adc
stc
repz
pop
repnz
sub
inc
add
xchg
aad
mov
and
jge
xchg
iret
pop
test
aad
test
mov
mov
xchg
push
out
jno
dec
enter
mov
push
xchg
xlat
repnz
or
xchg
negl
jae
jne
inc
ret
pop
lods
xchg
fcmovne
add
repz
inc
xor
inc
push
mov
out
jb
sub
loopne
or
or
mov
jne
jg
icebp
pushl
repnz
iret
loope
cli
xorb
loopne
cmpsb
adc
cmpsb
addl
scas
dec
das
outsl
enter
cmp
adc
aam
cmpsl
mov
or
lods
out
ljmp
out
xchg
cmpsl
mov
or
mov
or
cli
inc
mov
pop
iret
inc
jg
ljmp
xor
lea
lret
or
sti
inc
std
push
nop
scas
cmp
cld
add
or
movb
sti
pop
and
mov
mov
scas
ja
xchg
sub
scas
sbbl
div
scas
jb
scas
flds
scas
push
cmc
fidivl
jl
scas
xlat
mov
mov
dec
and
adc
les
mov
mov
mov
and
std
sbb
sbb
nop
cmp
jne
out
sbb
jmp
icebp
shl
in
and
out
jl
decb
mov
jns
je
jl
arpl
in
insb
icebp
imul
mull
inc
jp
jmp
sti
xchg
and
sub
and
aaa
fcmovnu
sub
incb
fstl
mov
jecxz
ds
je
lods
icebp
jg
loopne
mov
mull
sub
pop
cs
out
mov
out
dec
lcall
mov
xchg
hlt
xchg
pop
jno
inc
pop
cmc
jb
bndstx
daa
dec
pop
lcall
xor
inc
cmp
repnz
inc
in
and
andl
mov
cmp
out
repnz
dec
sldt
loopne
in
inc
dec
repnz
mov
sub
out
sub
jecxz
pop
jecxz
ds
sub
mov
mov
jmp
in
std
push
mov
pushf
mov
inc
rorl
lock
lds
ficomps
imul
push
adc
je
repz
les
adc
les
enter
stc
clc
movsb
xchg
pop
adc
out
mov
and
std
push
mov
or
mov
jbe
shl
popa
push
dec
out
cmpsb
lea
fwait
cmpsb
and
aaa
xchg
mov
add
adc
cld
dec
push
sub
in
mov
cltd
jl
mov
adc
lods
jmp
xchg
std
test
add
movl
ljmp
scas
scas
cld
mov
ds
and
add
divl
or
daa
pop
cmp
int3
ds
push
push
cli
add
jl
and
jb
enter
pop
ficoms
mov
pop
dec
fiadds
adc
popl
sbb
in
imul
scas
rorb
loopne
lea
push
cmpsl
andb
xor
push
pop
into
sbb
cld
cmp
adc
ljmp
into
clc
idiv
cmp
inc
and
test
les
sbb
imul
mov
sarl
xchg
dec
repz
data16
cmp
scas
jae
ja
popa
jecxz
scas
cmpsl
scas
jnp
jecxz
cld
lea
subl
jp
scas
mov
movsl
push
scas
lahf
stos
lock
pop
adc
test
in
js
inc
sti
lods
ret
push
lahf
call
popa
mov
lea
push
fldl
scas
cmovne
pop
scas
arpl
iret
push
lahf
in
inc
jecxz
pushl
lret
pop
fmulp
adc
xor
push
ja
adc
in
or
mov
push
add
lar
test
loope
add
out
dec
inc
mov
stos
cmp
pop
xchg
mov
jae
repz
xchg
xchg
lock
xchg
jecxz
outsb
pop
adc
xchg
adc
out
fwait
push
cmp
lret
in
jnp
mov
and
out
subb
shll
sub
clc
or
mov
or
sub
nop
lret
std
cs
fldl
ja
aad
xchg
adcl
cmp
xchg
xor
scas
out
jns
rol
insl
iret
and
inc
test
sbb
xor
jae
scas
sbb
ds
cmpsl
cs
xor
cmp
jg
orl
adc
adc
out
mov
les
pop
movsb
sbb
test
jnp
les
inc
adcb
or
scas
adc
sub
and
les
lahf
inc
inc
inc
lods
mov
pop
aaa
scas
or
ds
pop
fsts
jecxz,pt
cwtl
andl
test
pop
popf
outsb
cli
or
dec
push
fildl
mov
shld
fcomp
add
add
loopne
mov
outsl
add
ret
cmpsl
pop
scas
inc
cmp
inc
xor
mov
jbe
lock
rcr
jb
push
jmp
je
mov
sbb
lret
sbb
jne
ret
idivb
inc
and
mov
aas
enter
pusha
into
stos
test
cmp
je
cld
xchg
cmpsl
lret
xchg
mov
mov
xbegin
ret
adc
in
pop
cli
cmp
and
clc
aam
into
sti
aas
pop
sti
sub
pushf
adc
scas
inc
push
shll
mov
stos
hlt
pop
sbbb
mov
mov
incl
std
int
jmp
push
xchg
mov
stos
bound
push
bound
push
pop
mov
xor
imull
bound
lea
aad
mov
aad
aaa
lcall
frstor
lock
out
movsl
fildl
push
mov
pop
mov
push
sub
fiadds
fwait
cmpsb
mov
int3
rolb
jp
jno
lock
into
fldcw
mov
mov
mov
adc
add
jle
fdivrl
mov
adc
adc
repz
jle
cmp
mov
jmp
mov
sub
je
je
ds
jb
cs
jl
rol
mov
add
ds
loop
mov
push
in
jb
xchg
ss
lods
jbe
fiadds
dec
stc
cli
jecxz
pop
mov
stc
call
push
enter
in
mov
out
add
sub
push
add
jne
aas
sti
ds
add
jb
aad
sti
mov
and
nop
shll
cmp
mov
cmp
movsb
iret
daa
mov
outsb
mov
pop
je
mull
sub
or
faddl
icebp
aad
adc
hlt
add
out
jb
call
psubsb
add
sub
adc
add
adc
or
hlt
or
cld
call
jb
enter
or
adc
mov
jmp
sub
mull
and
and
and
jmp
arpl
and
sub
adc
adc
ds
jmp
unpcklps
fmull
or
mov
pop
add
fs
adc
inc
ds
jge
ds
hlt
or
or
xchg
movsb
sub
and
rclb
in
lock
je
adc
or
jmp
stos
push
andl
movsb
xchg
pop
das
fidivrl
cld
in
stos
in
adc
push
add
cmp
je
and
cmpsl
out
sub
aam
lods
jp
jg
sahf
sub
push
dec
cmp
in
aam
in
mov
and
fisubl
mov
jecxz
mov
xor
loope
push
add
or
cmc
dec
mov
sbb
add
out
jl
hlt
fnstcw
sbb
cmp
lret
pop
daa
daa
addr16
xchg
adc
jmp
das
cmovns
and
xlat
loopne
or
push
add
je
pop
xchg
xchg
mov
aas
sti
dec
movsb
or
idiv
lock
sar
aad
sahf
out
dec
sub
stc
sub
movsb
cmp
daa
cli
inc
sub
fs
movsl
adc
stos
je
or
out
outsl
xchg
adc
sub
outsl
pop
lret
and
sub
and
out
les
push
push
jp
js
inc
cld
stos
add
add
das
and
mov
cmp
movsb
fbld
jno
xchg
movsb
je
ret
int
rclb
fcomi
adc
lahf
fdivrl
hlt
cmp
imul
std
fdivp
dec
mov
cmp
cmp
pop
hlt
cmp
fsubl
sub
stos
je
popf
or
loop
jns
cmp
cli
hlt
sub
pop
andb
mov
call
cld
pop
dec
cltd
or
lret
xor
xchg
daa
or
movsl
mov
or
mov
movsb
aam
push
cmp
push
adc
dec
mov
jmp
nop
dec
sub
push
or
test
dec
dec
jae
push
sub
js
dec
jo
repz
jmp
std
lahf
sbbb
jo
das
jo
fisubl
jo
inc
loopne
sbb
sub
icebp
pop
daa
mov
cwtl
and
test
leave
inc
dec
shll
sub
xorb
lds
dec
loopne
dec
and
inc
fs
das
dec
sbb
push
ficoms
outsb
pop
leave
cmp
dec
popf
aaa
jo
popf
xchg
add
sub
enter
jo
ljmp
mov
adcl
xchg
js
sub
sub
icebp
daa
and
aam
negl
es
jmp
mov
dec
fisttps
sub
andb
xchg
js
dec
cli
push
sbb
xchg
jo
dec
inc
adc
dec
cmovle
adc
imul
ret
aaa
or
and
test
es
nop
cwtl
sub
dec
xor
shl
cmp
or
cmp
aad
jae
inc
xor
int3
sub
das
out
jmp
mov
ret
sti
push
dec
movsb
adc
add
int3
add
xchg
test
int
or
jge
rorl
loop
popa
loopne
rol
fstpl
xchg
cld
xor
out
mov
int3
or
mov
sbb
fildl
das
and
dec
adc
lcall
loope
add
dec
outsb
xor
in
push
xor
mov
xchg
jp
dec
lea
adc
xor
loope
call
pop
mov
cmpsl
imul
nop
lods
dec
jmp
inc
sbb
inc
jo
imull
jno
iret
cmp
imul
sbb
cld
cmp
rol
xor
sbb
and
je
and
xchg
xchg
jle
jp
iret
adc
and
sbb
cmp
into
push
xchg
icebp
add
hlt
cmpsb
inc
ja
adc
mov
jecxz
inc
sbb
add
das
sub
xchg
cmp
stos
push
and
inc
or
rorl
add
lods
sbb
xor
mov
inc
push
addr16
lcall
es
insb
jae
cld
and
xor
push
cmp
fst
push
das
in
push
stc
hlt
loope
jmp
out
int3
jg
xor
jp
dec
stc
mov
mov
xlat
lret
flds
popa
shl
pop
fsubrl
out
test
xchg
psrad
lea
insb
add
lahf
and
adc
loop
into
push
push
cmp
int3
shrb
cmp
movsb
lcall
sbb
cmp
xchg
ret
xorb
xrelease
ja
mov
loop
movsb
dec
cmp
inc
inc
roll
sbb
and
xchg
mov
adc
mov
pop
out
sbb
adc
mov
adc
xchg
in
adcl
dec
sbb
test
add
arpl
pop
sbb
add
cmc
jle
in
test
cmpsl
lahf
add
pop
adc
loopne
dec
fs
adc
divl
lods
push
sub
or
sub
sub
daa
movsl
dec
sub
pop
lret
inc
into
adc
daa
inc
cmpsb
xchg
xchg
pop
and
sub
aad
jmp
cmpb
add
push
or
mov
je
lods
inc
xchg
jb
mov
into
movsb
adcb
mov
movsl
dec
pop
mov
stos
dec
mov
int3
repz
or
repnz
je
je
adc
xlat
lahf
xchg
add
cmpsb
les
cmp
xchg
xchg
andl
aas
jb
scas
or
cltd
mov
iret
test
sub
not
cmpsb
xchg
mov
cmpsl
and
xchg
jb
xchg
jge
mov
xchg
push
push
xchg
outsl
xor
and
adc
xor
out
icebp
clc
out
pop
xor
std
les
out
sub
test
outsb
cmpsl
xor
pop
pop
cmp
popf
clc
insl
cmpsb
lods
or
out
out
push
icebp
xabort
aam
test
das
call
add
add
mov
jecxz
sbb
xchg
or
pop
decl
pop
mov
pop
cmpsb
jge
cli
paddsw
pop
std
out
das
mov
imul
sub
inc
dec
xchg
das
mov
cmp
mov
dec
pop
xor
aas
push
leave
movsb
lds
mov
jo
int3
add
xchg
jb
scas
jne
lret
inc
mov
bsf
icebp
test
std
dec
orb
jb
repnz
add
mov
lods
test
loopne
lods
jmp
jne
jbe
rcrb
pop
pop
sub
test
adc
inc
out
das
cltd
cld
xchg
ja
dec
das
xchg
sbbb
repnz
sahf
sub
push
andl
pop
lcall
stos
sbb
nop
ret
sbbb
lret
jnp
aam
jb
mov
cmp
fidivrl
jbe
mov
ja
lahf
nop
jnp
and
incl
rcl
shrb
dec
addr16
dec
in
into
xchg
cltd
aaa
xchg
hlt
nop
xchg
lea
jmp
xor
popf
ret
test
pushf
adc
cmp
mov
pop
aaa
clc
ret
pop
mov
ljmp
fcmovne
mov
je
enter
sub
sub
ja
pop
adc
not
scas
mov
cmp
jb
int
adc
xchg
mov
or
fdivp
bound
add
jb
notb
jecxz
adc
ret
add
sarl
lods
scas
loope
cmp
cld
scas
call
cmp
jmp
mov
cmp
pop
cmpsl
or
psllq
dec
shll
and
push
test
cld
test
push
fldcw
lahf
pop
out
mov
adc
xor
pop
les
aas
or
jmp
or
mov
add
inc
sti
cltd
loope
lea
lds
sbb
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
aam
dec
push
in
rclb
fsubrl
push
jl
push
in
xor
cmp
sbb
cltd
xchg
lret
and
test
dec
jns
lock
xchg
std
mov
pop
mov
mov
jl
je
insl
cmp
in
and
pusha
cmp
test
mov
orb
mov
jno
mov
mov
mov
sti
ret
rorb
sub
push
mov
adc
xchg
sti
call
fdivrs
cli
arpl
rcrl
dec
mov
cmc
call
dec
lahf
jmp
adc
popf
andl
lods
hlt
lret
into
mov
mov
xlat
stc
cltd
and
jmp
jmp
pop
push
dec
pop
mov
adc
mov
sub
mov
cmpsl
fbld
jge
dec
xchg
std
call
sub
jp
jno
dec
jns
jae
xchg
mov
mov
out
dec
jno
dec
xchg
jecxz
outsl
icebp
cld
and
bound
les
inc
cli
push
call
push
mov
stos
das
out
filds
cmc
in
cmp
xor
ror
in
cli
cmc
or
mov
loope
movb
pop
fs
std
call
rolb
cmpsb
dec
es
sti
rol
in
pusha
inc
cmpsl
into
and
inc
popf
cmp
mov
ds
mov
and
push
iret
push
loopne
pushl
sti
loopne
out
shr
iret
xchg
sbb
pop
movsb
jbe
inc
xchg
pop
pop
filds
cmp
push
je
arpl
dec
sbb
cld
arpl
adc
dec
fimuls
clc
repnz
add
mov
pop
lods
dec
jle
and
push
hlt
outsl
mov
dec
mov
test
lahf
repz
call
fldl
pop
dec
or
clc
setp
mov
pop
dec
clc
clc
pop
jno
adc
pop
xlat
dec
div
xor
add
inc
ret
jp
mov
mov
iret
gs
notb
inc
add
shr
dec
aam
mov
aaa
insb
out
test
sbb
dec
adc
mov
cmpsl
repz
jae
mov
xchg
filds
jecxz
ret
jmp
adc
inc
dec
cmpl
adc
in
test
xchg
fs
jno
sub
aaa
sub
adc
push
sbb
xor
lea
push
mov
xchg
dec
cwtl
dec
test
push
mov
mov
lea
inc
mov
inc
hlt
inc
mov
lea
inc
test
inc
xchg
ja
inc
xor
xchg
call
lcall
rcll
xchg
xor
lcall
xor
shlb
and
shll
mov
repnz
xchg
call
xchg
icebp
and
push
inc
adc
adc
femms
or
inc
sub
sub
mov
cmp
lret
adc
lcall
iret
lds
xor
sub
jne
pop
push
bound
jmp
jb
push
and
mov
das
bound
shll
jg
xchg
cmpsb
cwtl
sbbb
out
ljmp
mov
sub
xor
mull
sbb
lods
inc
arpl
cmp
rcrb
insl
push
adc
loop
stc
stos
add
insb
and
pop
and
mov
out
mov
sub
aaa
aaa
jne
inc
add
jp
mov
int
jo
dec
sbb
stos
add
jb
aam
cs
jg
mov
scas
mov
imul
or
out
mov
cs
fcmovne
pop
pop
leave
insl
sub
mov
mov
imul
loop
fstpt
scas
mov
leave
push
push
adc
enter
iret
jmp
loope
pop
jnp
mov
cmp
shr
les
inc
stc
adc
iret
movsl
lret
inc
pop
push
js
dec
out
mov
pop
jle
pop
outsl
mov
sbb
sti
pushl
xor
out
or
pop
lods
mov
clc
or
add
cld
mov
inc
mov
out
mov
les
daa
xlat
or
mov
xchg
cld
daa
sbb
icebp
out
adc
out
jmp
adc
rorl
xchg
shlb
ljmp
nop
jno
sbb
mov
jmp
push
es
cltd
adc
mov
pusha
inc
mov
jp
jne
pop
shrl
repz
repz
test
cmp
adc
cmpsb
inc
sahf
popf
cld
xor
out
sti
es
negl
push
insl
adcb
popa
ds
push
cwtl
out
xchg
pop
inc
xorl
mov
cmpsb
jmp
std
xchg
mov
int3
fnstsw
dec
add
cwtl
mov
in
and
fcomip
cwtl
out
pop
cld
movsl
sub
push
rcrb
add
orl
mov
lahf
scas
inc
sub
lret
mov
adc
aam
loope
cli
in
mov
mov
xchg
pop
jae
jl
lahf
mov
adc
cltd
cld
dec
outsl
add
ret
cli
roll
push
pop
lcall
mov
xor
ljmp
pop
lahf
sbb
fistpl
mov
or
pop
mov
inc
mov
ds
gs
or
pop
or
popf
decb
xorl
mov
stos
stos
cmp
xchg
aad
in
mov
lock
pop
add
sahf
outsl
and
xchg
je
lods
mov
in
lahf
dec
je
cmp
test
jnp
hlt
ja
out
test
push
fistps
jecxz
adc
jno
pop
movsb
cmp
push
sbb
sub
jge
pop
iret
popf
sti
hlt
rcrl
mov
mov
xchg
adc
sub
cmpsl
idivl
push
mov
pop
bound
rcll
std
mov
lock
mov
xchg
rcrb
push
or
or
sbb
jno
icebp
mov
imul
xchg
jae
in
add
jl
jmp
inc
cld
frstor
repz
fwait
roll
xchg
fwait
cmc
pop
cmpsb
mov
call
paddb
mov
lock
ja
mov
or
aas
lret
xchg
je
mov
iret
ja
ljmp
rcrl
fistpl
jg
pop
cld
adc
mov
mov
repz
lret
mov
lret
xchg
xchg
sahf
jbe
cltd
mov
aam
lret
dec
or
scas
imul
int3
ja
sub
push
rcrb
mov
insb
lea
cmp
leave
enter
pop
xchg
pushl
in
pminsw
and
ss
data16
aaa
fbld
clc
addr16
repz
adc
out
and
mov
cli
aaa
out
pop
cmpsb
mov
fistpll
mov
fstpt
js
repz
js
js
icebp
jo
mov
and
js
out
js
rcr
loope
cmp
pop
fwait
mov
pop
inc
pop
movsl
pushf
add
dec
mov
jo
das
jo
dec
push
gs
shl
in
xchg
hlt
sbb
push
shll
sbb
pushf
testb
adc
mov
cmp
dec
das
lret
mov
je
shrb
jge
ret
mov
mov
cmp
pop
jmp
xor
dec
push
repz
in
loop
push
les
loopne
mov
fbstp
imul
scas
mov
scas
sub
imull
sub
gs
dec
out
push
in
jg
rclb
cs
mov
xchg
cmpsl
aas
and
xchg
or
cmp
sbb
mov
inc
pop
rolb
sub
in
ror
and
add
mov
xor
sbb
xor
mov
daa
adc
pop
shll
cwtl
inc
dec
fsubrs
mov
xchg
fstpl
pop
shr
fs
cmp
idivl
jnp
pop
add
aad
ss
add
add
loope
addr16
insb
out
mov
fwait
aam
fdivr
out
in
jae
out
jo
iret
out
ljmp
push
ffreep
daa
mov
daa
xchg
ret
pop
cmp
and
xchg
jae
inc
push
or
inc
cmp
cmpsl
ds
incl
xor
xchg
and
sbb
jge
js
call
test
adc
sbbl
dec
test
mov
adc
out
adc
lahf
xchg
shr
or
cli
outsb
ret
hlt
xchg
ja
inc
jl
jns
loopne
cli
mov
ja
sub
fwait
cmpsb
andl
loop
jge
ja
push
test
data16
add
test
pop
daa
or
add
and
or
or
pop
cmp
fsts
dec
mov
xchg
sti
imul
call
push
add
xor
or
jmp
mov
add
dec
sbb
pop
setne
pop
stc
aam
sbb
mov
add
cli
push
xor
pop
mov
popf
push
jecxz
mov
mov
and
add
out
pop
add
negb
aas
mov
dec
pslld
jnp
pop
lock
mov
test
je
mov
add
mov
shrl
mov
and
dec
xchg
addr16
ret
fisubl
mov
lea
clc
popa
in
pusha
pop
hlt
pop
push
dec
mov
cld
pop
in
pop
pop
xchg
inc
stc
gs
pop
cmp
push
push
pop
push
inc
pop
push
push
clc
push
call
pop
inc
dec
lock
call
dec
inc
icebp
gs
dec
dec
dec
fiadds
inc
stc
adc
xchg
inc
out
in
inc
xchg
call
xchg
gs
cld
jmp
cmp
mov
adc
ret
xor
shlb
mov
call
call
sub
sub
sub
sub
sub
daa
mov
mov
and
and
and
mov
and
rcrb
gs
out
xchg
int
fimull
addr16
mov
cs
lret
mov
fcoms
in
adc
sub
or
or
or
in
fiaddl
jno
mov
add
mov
mov
cmp
mov
pop
push
stos
std
jns
aas
xchg
push
cli
jle
xorb
push
lds
in
hlt
and
iret
fldcw
test
icebp
add
fisubrs
and
les
and
xorb
in
ret
stc
das
outsl
mov
loope
repz
repz
cli
adc
in
mov
cli
sbb
and
inc
sti
cmp
out
lock
xchg
jge
xchg
mov
jno
pop
pop
inc
push
pusha
xchg
pop
subb
add
cld
adc
pop
push
in
call
rcl
jne
test
sbb
popf
and
stos
addr16
add
icebp
nop
mov
cmp
dec
loope
inc
jmp
in
mov
ljmp
test
movsl
inc
rclb
sub
test
cli
mov
jmp
rep
xchg
mov
in
rorb
ja
cli
test
stos
jae
cmp
inc
lahf
aam
test
rcrl
and
xor
orl
dec
je
add
lahf
xor
xchg
jbe
imul
iret
xchg
xchg
js
lods
jmp
or
push
and
inc
sub
jns
adc
cmp
test
cld
dec
ja
inc
bound
fistps
sarb
jecxz
jae
cmp
arpl
cs
lods
stc
cmp
js
cmc
dec
ljmp
std
sub
ljmp
jg
pop
leave
popf
sub
jp
push
fldt
lahf
out
popf
sbb
iret
out
jl
daa
jbe
xlat
das
sub
dec
mov
int
push
or
adc
pop
notb
add
mov
sbb
xor
jge
ja
mov
inc
test
fs
xchg
mov
mov
jp
lahf
hlt
jns
add
jmp
cmpsb
out
jp
je
xchg
mov
mov
add
xor
push
jmp
adc
push
fildl
lret
sbb
into
aad
mov
aas
sub
sarb
add
and
mov
int
cli
test
add
mov
leave
jecxz
movsl
mov
das
cmp
cs
out
add
jae
int3
or
int
jb
sub
mov
mov
pop
xor
mov
stos
roll
pushf
add
das
mov
in
mov
adc
rorl
in
in
or
rorl
pop
xchg
pop
scas
clc
lret
mov
mov
mov
mov
sub
lcall
mov
mov
lret
dec
lret
push
inc
mov
lret
repnz
dec
lcall
lcall
cwtl
dec
mov
mov
jne
je
mov
lods
cld
jb
jno
jo
outsl
mov
pop
lcall
mov
in
push
xchg
imul
mov
lds
addr16
jle
aam
data16
add
mov
xchg
lods
lcall
clc
mov
sbb
sbb
sub
mov
lret
mov
mov
lret
mov
pushf
mov
jecxz
pop
in
imul
aaa
aaa
aaa
ja
daa
das
outsl
pop
enter
pop
cmp
adc
push
cmp
adcb
add
jns
mov
mov
int3
std
int
dec
or
mov
pop
xchg
fcmovnbe
dec
mov
pop
cwtl
fnstenv
dec
fxch
xchg
lds
push
cmpsb
or
notb
mov
out
orps
ja
dec
loopne
scas
cmpsl
aas
lods
scas
lcall
movsl
cwtl
lods
out
push
jmp
sti
jo
mov
fdivrp
movsb
pop
mov
pop
xor
jmp
repz
mov
xchg
pop
test
sub
push
ja
cli
in
mov
test
push
adc
inc
scas
cli
cld
cli
cli
stc
pop
ret
sarb
pop
test
pop
push
out
in
add
or
mov
arpl
lods
xor
cld
ja
cld
push
mull
xchg
mov
je
pop
cmp
popf
imulb
mov
mov
je
call
pop
adc
in
scas
popf
mov
mov
sti
dec
add
test
dec
lods
insl
mov
mov
dec
push
inc
cmp
daa
cli
cli
fisttps
mov
popa
leave
ret
lret
loop
jecxz
sbb
mov
int
jl
sub
int3
pop
sar
dec
xchg
adc
cld
pop
lea
adc
sbb
lock
push
mov
setns
mov
mov
lds
in
aaa
dec
inc
xor
add
pop
jmp
pop
and
mov
sbb
mull
xchg
cld
pop
cmp
pop
pop
int3
sbb
movsb
ret
and
loop
lret
insl
insb
fdivl
cmp
xchg
cmpsl
pop
and
lahf
jg
or
aas
inc
pushf
clc
mov
pushf
pop
stos
and
pop
pop
xchg
push
aaa
xor
data16
mov
loope
call
iret
or
adc
test
out
clc
cmpsb
add
or
dec
pop
jp
icebp
mov
pop
lea
push
cmp
enter
pop
jne
adc
sub
mov
psraw
popa
add
repz
gs
popf
stc
popf
cmpb
mov
mov
rcl
push
jns
gs
rclb
xchg
fistl
in
cmp
ret
arpl
in
repnz
mov
push
enter
mov
hlt
stc
mov
pushf
jb
sbb
sar
add
adc
pop
sbb
xorb
mov
ret
mov
sbb
cli
pop
mov
mov
shlb
and
pop
data16
pop
or
in
cld
mov
scas
in
fstpl
mov
ja
and
inc
jnp
mov
jae
dec
mov
std
inc
mov
fdivl
cmpsb
xchg
pop
jnp
dec
mov
ljmp
xlat
stos
scas
stos
mov
jae
stc
mov
xchg
in
rolb
xchg
stos
jge
mov
mov
add
mov
xor
jae
inc
or
mov
jle
pop
xchg
mov
add
lcall
or
rorb
cli
mov
xchg
lahf
int3
adc
adc
int
jb
subb
push
xchg
das
movsb
fistl
notb
icebp
in
mov
in
insb
aaa
lahf
stc
mov
mov
adc
fidivrs
aaa
out
sti
sub
jecxz
int
outsb
inc
push
push
out
xchg
call
xchg
clc
pop
adc
out
push
ja
pop
push
cmp
cmpb
mov
sbbb
leave
mov
sub
call
aam
filds
sbb
ljmp
out
sub
lahf
in
in
loopne
fwait
ljmp
xchg
cmpl
mov
clc
add
in
push
arpl
push
ljmp
aas
push
stos
or
or
pop
push
mov
adc
int3
aaa
ss
push
inc
clc
dec
repnz
and
sub
push
mov
jbe
add
shlb
sbb
add
inc
outsl
insb
faddl
inc
iret
and
daa
mov
or
and
mov
pop
sar
fidivl
add
jne
mov
jno
jecxz
add
ficoml
gs
gs
arpl
popa
mov
pop
jl
xchg
xchg
mov
loop
rcrb
push
push
pop
mov
fcomps
pop
mov
jmp
push
fcoml
in
mov
mov
mov
dec
stc
xchg
inc
push
movsb
popf
dec
lds
inc
inc
lds
inc
push
inc
popf
inc
roll
mov
xchg
push
aas
loopne
hlt
cmp
push
xchg
cmp
cmp
popf
aaa
insl
pop
in
std
popf
xor
mov
lret
sub
mov
sub
int
loope
movsl
lahf
sub
loopne
cs
pop
xchg
inc
mov
sbb
std
and
push
aas
sbb
cmp
xchg
fucomp
lods
or
jg
ss
mov
jbe
test
dec
std
mov
mov
mov
sbb
adc
mov
das
adc
dec
adc
pop
icebp
push
cld
addr16
xor
cwtl
lock
popf
cmp
xor
xchg
inc
or
and
mov
outsb
daa
ds
jne
pop
cmp
mov
loope
mulb
add
iret
loope
inc
je
inc
cmp
mov
leave
jno
mov
into
sbb
jg
jns
std
inc
cmp
repz
and
inc
cmp
cmp
in
lcall
dec
int3
xor
out
in
xor
cmp
and
mov
and
pop
jecxz
loop
loope
jp
insb
sbb
jle
cltd
jmp
fs
seto
push
lock
mov
or
push
aad
or
cmp
sub
data16
loopw
or
mov
xchg
mov
or
mov
shr
hlt
pop
xchg
int
gs
pushf
push
nop
sahf
lea
pushf
fdiv
sbb
xchg
fwait
lcall
dec
or
and
xchg
cmpsb
mov
xchg
mov
xchg
lcall
xor
adc
mov
int
jb
scas
lret
push
movsl
ja
scas
cmp
daa
add
loop
fwait
jmp
xchg
xor
movsl
inc
iret
clc
arpl
cmpsl
pusha
aad
jb
add
stos
iret
rcll
lods
jb
pushf
mov
pop
incb
jno
or
ja
hlt
out
fldl
es
fmull
xchg
push
mov
test
inc
lret
into
stos
push
jle
adc
leave
in
div
or
inc
lahf
testl
xchg
aas
cli
shll
and
adc
pop
popf
adcl
sti
fwait
mov
lods
cmp
imull
push
andb
scas
repnz
sti
push
cmpsl
push
mov
push
imul
testl
jbe
xchg
stos
cmp
out
sbb
cli
or
and
das
xchg
enter
jecxz
fidivrs
leave
cli
sub
in
jl
mov
mov
jg
push
jo
neg
ss
notl
stc
sbb
sbb
mov
mov
push
adc
sub
jae
adc
mov
fwait
jmp
cmp
adc
mov
stc
pop
pusha
cmp
movl
insb
icebp
popa
jecxz
imul
daa
loop
pop
mov
sub
ja
lfs
sub
outsb
cli
mov
adc
roll
push
cmpsb
in
inc
jg
nop
jmp
inc
xlat
mov
sub
out
inc
cwtl
ljmpw
in
cli
pop
jno
mov
jle
lcall
popa
outsb
pop
je
add
add
sbb
incb
jecxz
gs
jne
std
add
push
stc
aas
mov
outsb
xchg
xchg
mov
repz
outsb
out
or
shll
pop
mov
repz
daa
movsl
shr
xchg
dec
jo
sahf
into
cmp
add
cld
gs
repz
adc
sbb
call
fbstp
arpl
xchg
jnp
fistl
inc
ds
call
ljmp
add
add
or
lcall
lret
test
mov
enter
mov
movl
jmp
fisubs
cmp
mov
mov
and
and
repz
fldcw
movsb
arpl
cmpsb
jecxz
rorl
data16
cmp
rolb
jne
add
outsl
mov
pop
dec
add
mov
mov
add
stc
xchg
and
mov
rcrl
pushf
sbb
sbb
xchg
stos
ret
inc
inc
lret
sbb
or
mov
jns
stos
scas
stc
pop
lods
jbe
insb
insb
insb
dec
pushf
nop
xchg
insb
insb
insb
insb
lea
jecxz
fwait
xchg
out
pop
adc
adc
gs
sub
mov
aaa
es
cwtl
pushf
xor
and
and
aaa
and
pop
sub
dec
add
push
stc
sbb
mov
icebp
push
sbb
jle
scas
sbb
mov
add
sbb
seta
daa
add
pop
lahf
ss
aas
movsb
ds
aam
mov
iret
lods
outsl
push
mov
jns
int
shlb
add
sub
inc
pop
add
leave
out
inc
call
inc
test
out
sub
fisttps
mov
xchg
cld
repnz
xor
xchg
pop
imul
fdivl
adc
notl
stc
push
jp
je
mov
mov
cmp
test
push
mov
add
stos
lahf
pop
test
je
mov
shr
cmpsl
nop
sbb
xchg
pop
bswap
push
out
ja
jp
enter
clc
sahf
je
je
pusha
cli
push
int3
cs
adc
lock
add
fcmovnb
mov
fdivr
sarb
daa
jmp
jl
inc
fs
stos
mov
dec
inc
cli
cmpsl
cmc
cmp
push
stc
hlt
inc
and
nop
xlat
or
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
or
shl
mov
ret
lock
mov
xchg
sub
cmc
mov
mov
repz
das
das
mov
std
jnp
inc
pop
shll
xchg
dec
mov
xchg
sti
sbb
xchg
jns
mov
xor
inc
pop
jb
xor
pop
ja
aam
into
iret
cmp
pusha
mov
in
dec
and
icebp
push
cmp
xchg
xchg
std
out
aaa
jns
xchg
xchg
pop
loope
inc
je
test
mov
adc
mov
xchg
and
icebp
xchg
dec
repz
jl
xor
mov
in
mul
call
push
test
mov
push
std
test
out
dec
cmpsb
stc
je
xlat
fcmove
fucomip
leave
test
and
je
repz
xlat
loopne
sarl
add
xchg
pop
out
lahf
test
dec
lock
xchg
jecxz
mov
fcomip
and
cmpsb
je
or
pop
subl
sti
jbe
jb
add
je
out
je
je
clc
test
cmp
lret
int3
das
pop
cmpsl
fidivl
je
jp
pop
dec
nop
outsb
mov
andb
mov
jb
imul
orb
inc
lods
mov
and
dec
jnp
test
add
in
jle
testb
pop
rcll
cmc
out
push
xlat
mov
mov
jmp
fwait
negl
in
repnz
push
cwtl
pop
mov
cltd
mov
and
push
loope
mov
aad
inc
jle
and
xlat
pop
scas
out
xlat
daa
pop
fisubl
sti
mov
xchg
test
ror
insl
mov
mov
pop
fcmovnb
jl
jecxz
jmp
add
pop
ljmp
dec
mov
or
jb
inc
cli
jne
out
or
nop
hlt
and
pushf
push
int3
adc
je
cltd
xchg
mov
orb
mov
je
push
stc
push
aam
mov
addr16
fistpll
dec
sbb
out
mov
out
cwtl
outsl
test
mov
mov
in
out
call
andl
popa
fcomps
add
mov
cld
mov
jbe
scas
cli
push
popa
lea
ficomps
dec
and
movsb
cmp
test
cmpsl
fstpt
inc
jnp
cmp
enter
mov
cmpl
jecxz
cmp
or
or
inc
fimull
pop
jle
mov
xchg
jge
inc
mov
aas
dec
dec
movsb
test
or
sbb
sub
add
orl
andl
popa
and
add
pusha
in
lret
jmp
subl
cmc
push
sar
repz
mov
idivl
mov
xor
dec
in
les
in
decl
pop
enter
and
je
cltd
add
jle
ds
sub
mov
sbb
dec
aas
push
push
shlb
stos
or
mov
stos
in
lock
scas
test
subl
cld
test
jmp
cwtl
mov
fs
jmp
mov
test
cs
jmp
scas
cmp
js
popf
sbb
ljmp
rorb
jb
nop
scas
inc
jbe
jmp
cmp
testb
mov
or
mov
in
add
sub
aam
cwtl
add
adc
inc
in
push
dec
and
sbb
out
shrb
and
ljmp
push
xchg
ffree
sbb
mov
jle
test
and
mov
gs
out
nop
scas
js
xlat
inc
repz
dec
je
scas
ret
cmp
jmp
shr
leave
fnstcw
mov
xchg
push
scas
pop
mov
dec
jecxz
out
cmp
ret
mov
scas
lret
sti
xlat
mov
mov
sub
mov
divl
fisttpl
fsubp
das
out
jbe
lods
scas
mov
jo
sbb
data16
mov
dec
pop
or
push
jp
push
add
scas
cmp
jb
out
out
daa
rorl
test
out
addr16
xchg
sahf
pop
jge
xchg
insb
bswap
mov
xchg
out
xchg
cmp
mov
negb
scas
daa
fidivs
ficompl
and
js
sahf
jmp
mov
movsl
ljmp
sbb
loopne
xchg
pop
cwtl
pushf
clc
sub
jnp
in
fistps
lods
sub
in
cltd
adc
mov
mov
cs
clc
out
cmp
jg
inc
stc
push
mov
dec
mov
hlt
enter
jl
jb
aam
jg
lret
mov
inc
mov
adc
out
jne
test
testl
mov
aam
lea
mov
sub
cld
xchg
aad
scas
scas
cwtl
mov
mov
cmp
cmc
out
xor
ret
mov
sub
or
call
cmp
xlat
call
vphadduwq
in
mov
ja
push
repz
sub
lds
fildll
icebp
sti
js
lret
frstor
add
repnz
daa
jmp
sar
in
aad
add
neg
loopne
jmp
jg
std
mov
sti
and
ds
call
clc
jg
into
mov
hlt
mov
scas
push
ja
mov
fdivr
sar
repz
lret
or
repz
push
iret
addl
xor
mov
addb
lea
mov
mov
fdivrl
push
add
inc
inc
pop
repnz
xor
out
aas
push
lds
hlt
icebp
sti
adc
aam
cwtl
sbb
add
mov
sbb
add
dec
ljmp
or
and
mov
movsb
dec
jmp
jne
rolb
out
mov
pop
add
push
and
or
cmpsb
mov
mov
pop
xor
dec
in
jg
sbb
and
in
ret
or
xchg
daa
jmp
lret
aas
jecxz
repnz
or
pop
fisubrl
call
leave
pop
mov
and
inc
enter
shl
jecxz
iret
hlt
sub
sbb
add
lret
repnz
pop
adc
enter
fadd
hlt
xlat
out
pop
mov
repnz
fdivs
adc
arpl
aaa
jle
icebp
jle
in
jp
mov
ret
cmp
sbb
sarb
cltd
aam
notb
add
insb
hlt
xor
cmp
cmpsl
pop
addr16
cmpsl
js
add
clc
xchg
or
out
das
call
fists
pop
cmp
pop
and
cltd
dec
loop,pt
pop
inc
in
push
fmul
mov
jecxz
idivb
addb
cmp
fsubrs
push
add
fadds
out
cmp
dec
push
in
mov
sbb
sarb
push
add
rclb
in
inc
sbb
mov
in
sbb
es
mov
mov
lret
negl
lcall
stos
dec
jae
cmp
ja
mov
fistpll
notl
xor
and
scas
mov
scas
and
lret
out
cli
pop
in
jmp
cld
push
lahf
shll
out
rcrl
rorl
ds
jle
mov
cmp
je
in
aam
jecxz
mov
inc
rcrl
movb
xor
lahf
scas
lods
pop
ss
bound
fidivrl
cmp
xchg
add
sti
test
lods
jl
je
push
leave
in
imul
pop
jnp
int3
mov
aad
and
incl
flds
fiadds
mov
cltd
daa
inc
lds
arpl
inc
cmpsl
cli
jbe
inc
leave
aas
pop
leave
fbld
call
int
xchg
or
or
cmp
aas
addr16
xchg
sbb
inc
insl
xchg
scas
xchg
faddl
xchg
mov
loop
xchg
xor
cld
ficoms
push
add
xor
mov
inc
mov
stos
xchg
mov
inc
mov
push
mov
iret
data16
sahf
out
int
cmpsb
jle
test
mov
jns
hlt
dec
mov
mov
lcall
mov
sbb
nop
cmp
pop
mov
inc
imulb
aas
movsb
sub
xchg
movsb
daa
mov
out
sub
mov
xchg
movsb
scas
mov
loop
mov
clc
cwtl
xchg
xchg
sub
cmpsl
test
jbe
test
rorl
push
cmp
repz
cmc
mov
pop
out
inc
jo
cmp
out
shr
cwtl
push
stos
pop
xchg
pop
mov
mov
mov
jmp
push
lods
inc
inc
inc
nop
imul
cli
or
stos
pop
inc
cwtl
mov
mov
mov
stos
xchg
cmpsl
jmp
fmuls
xchg
ret
dec
push
add
clc
out
xor
movsl
mov
mov
mov
repnz
dec
and
mov
and
ja
push
sbb
mov
hlt
adc
push
decl
add
cld
mov
xor
mov
jl
clc
popf
inc
jge
jge
leave
bound
loopne
xor
xchg
dec
xchg
idivl
adc
out
sbb
add
inc
leave
jb
mov
std
aas
push
mov
lock
and
mov
cmpsb
jl
cli
int3
add
sti
enter
xchg
pusha
aas
fdivrl
xchg
filds
and
loopne
test
inc
ds
jg
int3
dec
jnp
adc
or
lcall
out
cmp
inc
jecxz
lea
rclb
cli
sub
fnsetpm(287
pushf
pop
leave
jg
gs
cmp
fbld
xor
pop
loope
fmull
sub
xchg
xlat
sub
insl
neg
cmpsl
dec
lret
push
mov
hlt
outsl
ret
mov
repz
icebp
sti
lock
add
pop
or
iret
adc
lret
stos
inc
jo
and
sbb
test
and
fs
dec
icebp
mov
daa
ffreep
lea
adc
shl
inc
adc
jge
out
call
int3
or
in
add
scas
mov
jnp
lods
fistpll
insb
push
les
pop
pop
pop
aam
push
sbb
lret
mov
adc
lods
out
jno
in
fucomip
cmp
cmp
add
pop
xchg
js
push
outsl
fcmovnu
cmp
lock
scas
nop
pusha
mov
repz
jmp
cmpl
repz
scas
fs
out
out
mov
out
push
je
aam
push
movsb
mov
jae
cld
loopne
shr
cmc
push
stos
fcmovbe
iret
jmp
xchg
daa
mov
jmp
aad
xlat
mov
imul
test
and
xchg
jae
ffreep
cmp
inc
leave
fwait
sbb
test
shr
pop
sub
pop
lahf
lock
out
ds
lds
mov
leave
adc
mov
mov
inc
mov
xor
sub
fisubrl
push
cmp
loop
cmp
cmpsl
icebp
fs
mov
cmp
adc
inc
and
leave
jecxz
repz
push
popf
mov
out
mov
and
repz
dec
xchg
je
out
pusha
stos
cmp
mov
dec
mov
cmpsb
xchg
dec
mov
push
cli
dec
rorl
cmp
ja
fucomi
test
pop
jns
sti
jns
mov
hlt
out
mov
pop
ds
push
push
icebp
jp
push
inc
lock
cmpsl
inc
aaa
sub
fistpll
mov
call
xchg
insl
pop
jae
adc
push
lret
xchg
inc
add
pop
mov
add
nop
out
push
fs
cwtl
xor
dec
movsb
lcall
xchg
sahf
mov
call
rclb
into
cld
pusha
mov
jecxz
cmp
sub
adc
inc
fbstp
aam
mov
adc
clc
loope
fcoml
mov
std
mov
out
clc
je
or
shl
inc
imul
out
jg
js
fistps
xchg
cmc
flds
mov
cmpsb
std
leave
sub
dec
cs
and
jmp
cmp
stos
xchg
mov
mov
pop
cmp
jecxz
pop
std
in
scas
push
insl
call
sbb
sbb
jmp
not
scas
jg
ret
lds
aad
mov
aaa
scas
sbb
xor
out
movsl
in
jp
aad
mov
xor
stos
scas
mov
scas
pop
dec
stc
in
mov
jae
jle
aas
adc
dec
sbb
movsl
call
mov
cld
inc
scas
lods
loopne
lret
scas
or
pushl
outsl
jl
in
pop
jne
out
stos
push
push
pop
popa
xchg
gs
pop
jmp
cmp
fistps
jb
add
mov
push
das
cmp
xchg
jmp
out
inc
jmp
lods
loope
decl
mov
pop
out
cmpsl
icebp
fxam
pop
idiv
pop
cli
in
fisttps
fisttpll
pop
and
stc
std
xchg
mov
fnstcw
mov
mov
xchg
pop
in
lret
cmc
sbbl
loope
out
and
pop
push
sti
add
stc
in
sbb
clc
das
cmpsl
xchg
mov
sar
inc
in
jle
mov
fsubr
add
jl
push
andb
fcomps
subb
push
cli
inc
mov
fucomp
repz
aad
test
imull
ds
jle
and
jne
sqrtps
mov
cs
dec
popf
lods
sbb
dec
ss
or
jns
cmp
aam
inc
cld
xchg
sbb
shrl
fistpll
push
movsl
dec
jno
inc
and
lret
mov
adc
add
jge
push
adc
cmp
push
add
xor
imul
test
mov
dec
xchg
iret
sti
pop
in
imul
into
ja
int
cmpb
jmp
pop
fsubp
ds
push
test
pop
test
out
lcall
mov
scas
lret
scas
jg
sbb
mov
aam
pop
push
mull
pop
js
sbb
mov
outsl
scas
int3
and
push
dec
call
cli
arpl
add
cmp
xchg
xchg
shrb
out
test
imul
aas
mov
aas
pop
ss
std
aad
je
jg
sub
ds
xlat
lcall
gs
jge
cmp
lcall
or
mov
jae
ss
in
stos
loop
in
mov
xchg
xorl
ss
jbe
cmp
lret
lds
je
jmp
push
mov
std
push
loopne
adc
add
jbe
test
dec
jge
div
jg
daa
mov
in
mov
hlt
aas
repz
aam
jbe
xor
pop
cmp
jp
je
jp
xchg
pop
lahf
pushf
mov
daa
stos
das
jbe
add
adc
mov
mov
mov
aas
xchg
dec
mov
mov
dec
push
lcall
aaa
fisubl
scas
cli
pop
pop
scas
leave
mov
push
lock
xchg
leave
leave
push
cli
dec
shl
pushf
in
fwait
mov
fdivp
jge
cli
ja
xor
out
xchg
in
shrl
mov
mov
lret
mov
enter
inc
and
mov
xchg
sub
aas
xchg
out
xor
push
fdivr
push
xchg
xchg
movsl
or
pop
insl
bound
daa
sub
adc
sub
sub
ljmp
cmpsl
aam
stc
ret
in
pop
in
outsl
std
daa
repz
ds
xlat
fdivr
mov
mov
add
push
mov
sahf
mov
cmc
pop
mov
imull
in
cmpsl
out
fildl
jge
jnp
sarb
cli
fdivp
rcr
pushf
out
pop
movsl
call
mov
fldl
std
clc
sti
lods
sti
out
iret
data16
pop
shlb
pop
mull
sti
sub
pop
sahf
imul
xchg
movsb
inc
je
xchg
mov
int
mov
inc
in
mov
hlt
jmp
fnstsw
and
mov
push
stos
jmp
and
and
filds
jg
pop
cmp
adc
shrb
lock
lods
lcall
adc
mov
mov
ffree
cmp
xchg
sti
test
jl
push
js
mov
xchg
movsb
in
pop
test
xor
add
fidivrs
jno
shrb
mul
aad
ljmp
and
mov
mov
out
inc
mov
test
les
sub
mov
in
data16
and
pop
mov
in
xchg
out
mov
in
dec
hlt
dec
lea
cmp
ret
xchg
xor
js
fsub
xchg
mov
cltd
mov
sahf
lret
lret
mov
hlt
and
fchs
call
out
xlat
mull
mov
sti
fs
dec
ljmp
notb
fwait
mov
mov
notl
mov
jg
mov
cmc
aam
sub
sar
adc
dec
xchg
lea
test
data16
cwtl
aas
push
dec
ds
into
stos
cmp
imul
push
and
or
aam
xorl
fisubrs
mov
push
jge
scas
mov
jp
mov
mov
and
lods
out
out
xchg
xchg
jp
and
and
push
push
in
xchg
inc
aad
cmpsb
dec
jle
and
pop
or
fcmovu
daa
movsb
hlt
in
mov
mov
jno
and
sub
test
cmp
cmpsl
in
xor
rorl
fucomip
jns
daa
fsubp
adc
mov
push
test
movlps
dec
les
nop
xchg
out
popf
in
adc
orl
lea
lcall
cltd
loop
les
cwtl
pushf
leave
mov
mov
lea
stc
cli
xchg
repz
insl
int3
jl
mov
cli
pop
inc
notb
mov
nop
cmp
xchg
push
sahf
push
mov
xchg
push
cmp
xlat
sub
decl
std
cltd
into
inc
mov
leave
outsb
sahf
sahf
int3
and
mov
sbb
mov
imulb
sbb
in
xchg
inc
push
lret
xchg
testb
pop
movsl
pop
inc
std
stos
and
dec
push
xchg
xor
rol
sub
scas
std
mov
push
lock
or
out
pusha
popf
lret
inc
nop
mov
hlt
sbb
xchg
pop
adc
jl
ds
in
jns
std
jns
mov
fistl
fisubl
imull
hlt
scas
iret
fcomi
jo
xlat
xlat
fistpll
das
scas
cmpsl
gs
fwait
push
aad
out
ds
pushf
sti
in
cmpsl
dec
push
lea
call
mov
icebp
xchg
push
inc
lahf
xchg
lret
jno
out
mov
js
into
loopne
sub
sahf
mov
out
lret
xchg
mov
das
adcl
stos
mov
and
pop
cmp
cwtl
lock
xchg
dec
dec
dec
xor
ljmp
test
inc
sar
icebp
mov
mov
fnstenv
dec
mov
clc
insb
ljmp
mov
cmp
fists
out
lahf
not
jnp
lcall
std
add
add
jae
push
sarl
pop
roll
out
lret
shrb
pop
rolb
scas
pop
pop
mov
mov
cmpsl
fwait
xchg
shrb
movl
pop
push
cmp
dec
add
xor
add
dec
cs
test
in
roll
add
mov
jne
dec
les
pop
cli
ret
in
ret
out
mov
add
add
mov
ret
add
ret
pop
ret
push
ret
cmp
sub
sbb
or
add
repz
adc
in
rol
mov
mov
ret
shlb
add
test
mov
cwtl
iret
or
push
iret
inc
iret
xor
and
bswap
and
add
into
fxch
fwait
into
nop
into
push
into
inc
inc
sub
and
lret
inc
cmpsb
int
int
int
int
int
int
add
add
int3
cmp
sub
or
test
mov
lret
mov
lret
pop
lret
fs
xor
sub
or
add
call
sbb
iret
add
jle
js
pop
into
dec
into
inc
into
sub
or
add
lret
int3
mov
repnz
int3
ds
lret
icebp
lret
ror
add
add
lret
xchg
lret
lret
cmp
sbb
adc
lret
ror
int3
lret
dec
lret
add
add
jp
leavew
dec
leave
sub
test
enter
enter
pusha
push
cmp
lds
lds
lds
vpinsrw
mov
les
les
fcmovnb
mov
jg
push
add
in
sbb
ret
das
ret
adc
or
ffreep
rol
rol
ret
faddl
add
lods
ret
cltd
ret
xchg
jbe
bound
and
add
add
ret
enter
mov
xchg
roll
outsb
roll
rcrl
or
repnz
in
add
adc
iret
sar
shlb
cltd
rorb
xor
cvtps2pi
and
outsl
rclb
iret
mov
into
repnz
movsb
into
popa
into
pop
mov
push
cmc
add
push
into
jmp
leave
int
int
int
int
int
call
or
int3
repnz
mov
stos
int3
sub
push
mov
lret
fiadds
in
les
aas
lret
das
lret
test
lret
adc
jecxz
inc
lret
mov
enter
nop
lret
xchg
and
sbb
icebp
leave
loopne
leave
enter
movsb
leave
xchg
fcmovb
inc
push
add
lret
jg
jns
sbb
mov
nop
mov
inc
sub
or
push
inc
add
repnz
aaa
lds
lds
call
les
add
add
and
or
hlt
shr
fcmovb
nop
rorl
pop
add
add
shr
aad
into
rol
dec
rolb
shlb
and
sbb
adc
nop
xchg
pop
or
iret
hlt
iret
out
iret
aam
add
iret
aas
iret
cmp
and
pop
iret
or
add
in
ror
mov
into
lcall
into
jnp
xor
int
int
int
adc
hlt
lock
or
push
lret
add
add
pop
lret
adc
cld
lret
loopne
lret
pop
lret
inc
lret
xor
lret
std
leave
add
inc
add
leave
fmulp
mov
repnz
call
aam
movl
movl
scas
movsl
leave
push
lds
lds
insl
lds
push
add
lds
repz
ljmp
lret
les
mov
jo
pusha
les
dec
les
cmp
ret
jmp
inc
ret
cmp
push
add
and
aam
pushf
ret
add
cli
push
sarl
and
aas
ds
cmp
and
into
inc
jmp
and
int
int
cmp
int
js
mov
int
sbb
int3
rolb
add
jo
test
sahf
lret
mov
enter
enter
enter
sub
adc
stos
jns
nop
repnz
loope
lds
lds
lds
adc
ficoml
les
les
adc
ret
rol
xchg
add
ret
add
sbb
ret
bound
dec
ret
inc
ret
ds
xor
sub
and
sbb
adc
add
pop
ret
add
sti
ret
in
ret
or
ret
ret
pop
jno
or
or
jne
outsb
ret
inc
cmp
pop
adc
dec
ret
cmp
xor
sub
mov
lock
in
ffreep
aad
rol
leave
rol
add
add
mov
shrl
xchg
rorl
lcall
add
pop
rcll
sarl
xor
in
add
and
mov
sarb
rcrb
sarb
adc
mov
jns
mov
xlat
iret
dec
iret
enter
push
add
les
iret
jnp
insb
push
and
into
ror
sbb
adc
ret
mov
test
jp
je
fs
aas
mov
cmp
inc
pop
into
push
into
mov
int
int
add
add
jge
insb
int
int
int
int
int3
in
int3
fcmovne
ror
int3
test
int3
inc
int3
daa
add
cmp
lret
mov
xchg
test
js
pop
lret
push
lret
dec
add
jb
lret
cmp
lret
push
lret
xchg
lret
lret
xchg
lret
loop
add
jne
imul
jle,pn
lret
jmp
rolb
add
leave
mov
leave
mov
or
leave
ja
outsl
leave
addr16
leave
push
leave
inc
leave
xor
sub
and
sbb
add
bswap
or
repz
enter
enter
xchg
pop
addr16
enter
add
xchg
inc
sbb
jnp
lds
inc
lods
les
adc
xor
sub
mov
ret
fwait
ret
xchg
ret
daa
push
inc
push
repnz
ret
mov
ret
xor
in
inc
push
repz
pop
sarl
xor
and
push
xchg
shrb
outsl
shlb
rolb
shlb
xor
and
lcall
xchg
icebp
iret
jmp
iret
iret
pop
iret
push
iret
dec
enter
iret
cmp
xor
add
into
mov
xchg
push
pusha
into
inc
das
pop
enter
int
int
int
out
xlat
pop
add
add
push
int
int
int
int
int
int
int
int
int
int
int
int
int
pop
fimull
cli
pop
cmc
mov
cld
outsb
add
sahf
add
ljmp
pop
mov
daa
enter
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
out
es
shl
mov
jp
int3
add
idiv
or
cmpl
cwtl
lcall
sti
out
clc
lahf
call
xchg
movsb
sahf
je
bndstx
iret
cld
outsl
iret
jle
jo
aaa
negl
lcall
ds
std
dec
incl
jmp
daa
rorb
fsub
jl
cmp
mov
pushf
dec
std
and
loope
pop
cmp
fs
int3
or
cmp
jl
adc
loopne
clc
adc
mov
in
mov
lret
mov
in
jl
cld
jg
movsl
jne
mov
mov
ror
enter
imulb
mov
sub
inc
clc
xchg
adc
in
into
loopne
std
sbb
mov
stc
cli
int3
std
fnstsw
gs
mov
enter
cmc
mov
push
add
out
fbstp
mov
in
mov
stc
stos
inc
adc
cld
stos
lods
loopne
repz
hlt
add
or
cli
xchg
lcall
mov
out
jl
cwtl
cli
cmp
stos
aam
and
pop
sbb
adcb
or
repz
inc
jmp
lock
lret
div
mov
cmp
cli
and
push
scas
daa
jg
jge
scas
jp
inc
repz
dec
inc
push
aad
xor
bound
imul
jno
je
notl
mov
scas
mov
xchg
jmp
addr16
jp
push
cmpsl
in
xchg
and
sbb
xchg
aas
fbstp
fnstsw
push
cltd
sti
jne
mov
sarl
std
fwait
addr16
ret
aam
cli
xor
sti
test
adc
jecxz
mov
stc
das
lods
stos
pop
cmp
adc
divl
or
imul
mov
xor
ss
jl
paddd
jns
mov
mov
fsub
jne
dec
jnp
mov
scas
jecxz
pushf
adc
int3
and
inc
stos
jecxz
mov
mov
inc
jb
cmpb
lock
lods
rorl
jmp
repnz
inc
ret
out
test
xor
movsb
pop
add
fwait
insb
loop
fdiv
xchg
mov
cmp
mov
es
cld
or
push
aad
out
xchg
div
scas
xchg
int3
xchg
arpl
pushf
add
addr16
arpl
adc
sbb
sbb
ja
mov
push
adc
inc
cld
adc
adc
cmovge
mov
fldcw
jnp
das
ja
pop
push
adc
mov
sbb
cs
dec
mov
mov
mov
lret
mov
mov
adc
ja
jb
addr16
mov
add
ds
std
pop
clc
jg
mov
loop
fadd
add
jge
je
jl
sti
lahf
sti
jecxz
push
enter
push
pushf
testl
mov
xor
xchg
adc
dec
xchg
movsb
cwtl
movsl
mov
sti
es
dec
adc
ja
std
inc
jecxz
adc
jb
fildl
or
mov
shr
mov
mov
push
sbb
mov
and
jle
mov
pop
jne
push
push
pop
ret
mov
mov
xchg
xlat
fisubs
lahf
in
add
mov
pop
test
aad
push
sti
into
enter
into
cli
and
pop
or
lock
jecxz
jnp
call
out
ret
cmpsb
cmc
es
pop
dec
jmp
cmp
jo
cld
cmp
mov
push
sbb
pusha
sbb
cmp
jle
ficoml
mov
dec
mov
clc
in
scas
jmp
pop
pop
jb
push
clc
test
in
lret
mov
lods
or
jmp
into
mov
icebp
mov
mov
sahf
aad
mov
aaa
fcmovu
insb
out
mov
xlat
ss
mov
pusha
insl
lahf
push
cli
outsl
incb
inc
fildll
mov
sbb
mov
repnz
cld
stos
inc
mov
shrl
mov
cmp
xchg
cli
fsubr
xchg
stc
dec
jbe
jae
sub
cli
cwtl
fdivrl
lds
mov
add
inc
push
inc
into
pop
cld
inc
repnz
mov
test
stc
scas
jb
gs
cwtl
push
add
mov
dec
stc
dec
add
jecxz
dec
add
dec
repnz
std
xchg
repz
rcll
hlt
int
push
pop
incl
aaa
cmpsl
cli
movsb
fcoml
push
test
test
stc
push
add
push
add
iret
fmull
dec
stos
imul
lods
lods
sub
daa
xchg
jp
pop
pop
shll
fsubl
lcall
sbb
mov
xlat
xchg
into
inc
aas
jmp
mov
push
mov
inc
imull
loopne
and
andl
xor
cmp
pop
cmp
test
cmp
mov
fdivrl
xor
add
jns
out
xor
cld
xor
xor
xor
and
cmp
incb
jg
enter
xor
jp
mov
dec
xchg
ja
inc
enter
inc
inc
hlt
aas
enter
mov
pop
xchg
mov
mov
xor
loop
add
sub
jne
aam
lcall
xchg
sbb
adc
fdivrp
push
lcall
fadds
dec
pushf
fmull
out
or
sbb
jne
fsubrl
lahf
mov
imul
push
mov
mov
aas
clc
sub
sub
jb
scas
cmc
xchg
mov
scas
xchg
jmp
mov
inc
or
mov
stos
dec
jl
cmc
sahf
pop
sub
or
test
jne
cmpsb
jg
movsb
das
hlt
or
pop
xchg
inc
repnz
jg
out
xor
mov
push
cli
mov
repnz
push
mov
sarb
jge
inc
jp
cmp
stc
daa
daa
stos
scas
push
xchg
addr16
jnp
movsl
dec
in
call
jno
mov
push
stc
cwtl
in
cmp
pop
test
pcmpeqd
and
mov
xchg
loope
mov
cmp
fistps
shrb
icebp
mov
test
cmpl
mov
hlt
jmp
add
adc
and
test
add
mov
mov
enter
div
dec
mov
jbe
pop
cmp
pop
in
out
or
je
cmpsb
mov
cli
divl
jae
popa
imul
xchg
sarl
jae
scas
mov
mov
scas
dec
pop
adc
jge
add
pop
loope
pushl
clc
fisttps
xchg
jg
pushl
fwait
xchg
cld
in
cld
in
pop
lret
incl
lret
mov
push
iret
in
outsl
andl
jg
rorl
sti
jg
and
mov
ja
fdivs
jg
and
lahf
mov
test
out
jne
cmpsl
in
movsb
mov
stos
pop
outsl
ljmp
decb
mov
aas
aad
imull
out
lods
fucomp
arpl
mov
mov
sbb
mov
jb
test
cs
mov
jnp
es
call
mov
or
gs
aam
mov
icebp
je
stos
xchg
lea
fiadds
es
nop
xchg
xor
lcall
out
push
outsl
ja
ljmp
xchg
pop
mov
mov
xchg
xchg
mov
fnstsw
push
sti
mov
fstp
out
mov
cwtl
mov
outsb
fcomi
mov
fdivrs
mov
ja
stc
in
push
cmp
sbb
mov
jmp
cld
inc
inc
icebp
mov
daa
sarb
inc
cld
sarb
fsub
push
xchg
cmp
call
jl
cld
ss
movlhps
dec
adc
add
test
xchg
gs
aad
ret
inc
aaa
gs
xchg
gs
pop
movsb
adc
repz
rcr
and
cld
xchg
hlt
into
clc
mov
je
push
xor
leave
xlat
das
push
jbe
adc
repnz
icebp
cld
stc
in
xchg
pop
or
enter
jmp
ljmp
xchg
jne
shlb
cmp
daa
jmp
cmp
xor
fdivl
and
scas
mov
scas
mull
insl
mov
out
mov
cmc
mov
test
adc
rcll
cmc
ja
pushf
fwait
in
out
test
insb
jge
mov
mov
int3
jne
xor
arpl
movsb
xlat
popf
jle
jmp
inc
repnz
mov
cmp
repnz
leave
jne
mulb
or
xor
push
in
ljmp
mov
push
mov
pop
xchg
xchg
lret
out
xchg
out
out
in
mov
add
jg
enter
scas
repnz
mov
stc
loopne
lcall
push
test
jl
cli
lret
lods
testb
push
add
pushl
cli
mov
adc
in
mov
rorb
jnp
sti
pop
hlt
movsb
imul
loop
std
fidivl
mov
clc
sbb
and
mov
sbb
dec
mov
cld
lret
popf
dec
sbb
mov
fcoml
mov
andl
or
xchg
gs
cmpsl
sahf
fdivr
mov
enter
cld
lret
mov
call
xchg
insb
loopne
stos
xlat
incb
ljmp
leave
push
mov
ljmp
xchg
in
adc
iret
cli
jg
jg
pushf
and
int3
xchg
push
inc
jp
in
loopne
hlt
cwtl
out
incl
popl
cwtl
jo
in
mov
push
int
and
jnp
cmc
xlat
mov
lock
xchg
push
xchg
clc
hlt
xchg
fsub
jmp
xchg
jo
xchg
sbb
xor
dec
scas
fmuls
leave
or
loopne
lock
pushf
decl
in
lret
and
loopne
mov
mov
adc
ficompl
in
cmp
lcall
push
outsb
scas
incl
aas
into
xor
int
int
int
cmc
imul
int
int
add
fcomps
jo
inc
int3
lret
mov
jp
adc
icebp
lret
xchg
lret
push
pop
add
fcmovne
cmpsb
mov
add
jb
dec
leave
enter
enter
enter
enter
add
xchg
xor
sub
add
lds
lds
inc
push
lds
vzeroupper
push
pop
rol
loop
adc
ret
pop
pop
jg
out
ret
iret
ret
pop
add
or
std
shl
mov
rcrl
rsqrtps
push
rorl
push
push
xchg
ljmp
cmp
sub
out
in
lcall
fwait
out
dec
lcall
jmp
dec
hlt
lahf
add
sahf
push
sbb
iret
sahf
scas
scas
ds
iret
mov
cmpsl
sti
test
mov
mov
stc
pop
movsl
and
sti
std
outsl
dec
mov
out
jecxz
ds
popf
cld
jbe
fbstp
pop
ffree
fstpt
pop
call
pop
repz
paddd
in
mov
aas
mov
aas
inc
lahf
lahf
cld
jl
cmc
jns
pop
sub
aas
lcall
bnd
push
in
or
adc
decl
jnp
push
dec
adc
decb
cmp
inc
lock
stos
shlb
shlb
leave
pushl
hlt
push
dec
sub
lock
pop
mov
stc
cltd
loop
pop
mov
mov
sbb
hlt
sti
lods
pop
rcrl
mov
cmpsl
out
pop
outsl
jl
lcall
aas
pop
in
mov
sbb
jecxz
std
repnz
lcall
ljmp
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
