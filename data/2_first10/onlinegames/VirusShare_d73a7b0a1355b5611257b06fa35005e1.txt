sbbl
mov
iret
jns
cld
imul
aas
sub
fs
mov
lret
fwait
test
cmp
cld
addr16
mov
pop
dec
aaa
sub
cltd
fsubrl
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
int3
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
mov
idivl
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
lahf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
repz
mov
out
jecxz
fistpll
and
daa
xor
daa
inc
ss
sub
add
in
stos
in
int
test
or
push
xchg
ret
ret
jns
lret
mov
out
jne
cmp
jb
mov
add
popf
jp
pushf
addl
mov
pop
jmp
adc
jb
lahf
dec
scas
stc
pop
fcmovne
repz
jecxz
fldt
mov
aas
sub
inc
pushf
rorb
mov
lods
push
leave
jg
shr
xor
cltd
out
sbb
pop
add
gs
out
gs
push
fbld
stc
jnp
push
int3
and
mov
int
pop
imul
lret
jg
bound
pop
pop
aaa
dec
stos
jecxz
jb
pop
inc
stc
pop
rolb
mov
jmp
add
and
dec
xlat
mov
icebp
loopne
sti
adc
pop
xchg
xor
ljmp
or
ret
mov
lock
faddl
and
jnp
inc
out
idivl
pop
cli
testb
or
push
dec
ja
inc
cld
mov
insb
out
adc
in
xor
pop
mov
add
dec
out
je
jns
mov
and
pop
fwait
rclb
fstl
popa
adc
mov
jl
cmp
lds
inc
or
test
dec
sub
fadd
sarb
test
mov
or
mov
ret
pop
jp
mov
js
add
and
sub
hlt
jle
pop
test
cmp
movsb
lock
test
mov
add
jbe
adc
sbb
push
mov
es
call
call
xchg
dec
iret
scas
int3
imul
sti
dec
adc
pop
call
dec
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
ljmp
mov
notl
xchg
std
pop
stos
adc
loope
jmp
daa
pop
iret
loop
sub
cli
push
push
mov
cmpsb
sub
jmp
in
cli
pop
add
fists
je
pop
mull
out
sbb
out
daa
and
lahf
lock
movsl
cmpsl
push
pop
mov
fmul
out
movsl
pop
in
repz
jg
jns
clc
stos
js
jo
jl
and
mov
das
cmpb
js
cmp
jmp
ret
adc
cli
lds
lods
pop
ret
in
cmp
adc
aas
test
out
repnz
pop
mov
push
sub
and
shlb
xor
cmp
imul
lahf
xchg
pop
sar
fwait
pop
cmp
jbe
clc
sbb
fwait
nop
shll
or
pop
mov
xor
dec
xchg
lea
xor
lcall
inc
dec
shl
lret
xchg
lret
and
cwtl
cld
and
and
pop
lret
push
and
sub
sbb
int
outsl
add
add
ret
call
divl
scas
cli
daa
scas
mov
inc
jl
jmp
das
pop
sbb
pop
xchg
notb
jmp
cmp
das
sbb
clc
xor
lods
lods
cld
push
and
adc
aad
push
out
xchg
jmp
jns
dec
idivl
mov
cmp
subb
or
jl
sub
ljmp
xchg
push
repnz
je
adc
sti
cltd
jle
and
ret
insb
xchg
push
push
testb
shl
sarb
pusha
jbe
adc
ret
jl
mov
lock
adc
xchg
pop
or
je
xchg
fdivs
add
jl
lea
jp
mov
mov
aam
loope
dec
xchg
mov
je
cld
mov
scas
mov
xchg
pop
je
je
in
aad
xchg
mov
pusha
add
sahf
in
idiv
jl,pt
std
scas
and
pop
inc
or
jl
sti
jl
adc
sbb
cmp
mov
mov
jbe
mov
and
push
mov
repz
cli
je
ja
sub
cmp
jl
out
jno
mov
dec
add
lahf
jb
imull
adc
adcl
or
lock
ds
mov
or
imul
out
cltd
outsb
mov
cltd
out
inc
mov
xchg
adc
cmc
cld
mov
imul
hlt
sti
mov
sbbb
mov
out
dec
leave
ds
fs
pop
imul
testb
inc
scas
pop
mov
mov
cld
xchg
aam
movzbl
push
xchg
mov
cmp
xchg
ret
sbb
mov
mov
mov
mov
stos
mov
and
add
mov
nop
pop
jp
cmpsb
out
sbb
je
add
add
cmp
push
pop
cld
mov
rcl
fstpt
xlat
add
mov
cmpsb
xrelease
jbe
mov
pop
jecxz
xchg
setno
or
shl
jl
jecxz
cmp
push
cmp
stc
pop
adc
loopne
jb
in
xor
enter
jnp
fildll
xor
pushf
cmp
xchg
cld
cmp
lods
arpl
out
xchg
outsl
cmp
cmp
loop
jae
xchg
sti
xchg
cltd
pop
clc
dec
lods
sbb
mov
insb
fisubs
inc
out
test
cmc
notl
scas
add
jnp
cmp
mov
cmc
dec
lods
xchg
fcmovnb
cmp
jno
in
mov
je
jns
je
ret
je
mov
or
movsb
mov
xchg
mov
mov
in
clc
sbb
out
inc
iret
je
and
pop
mov
or
cld
pop
cmc
cwtl
int3
xchg
fldl
mov
icebp
or
jmp
jmp
in
jbe
testb
or
cmp
push
sub
inc
lock
repnz
inc
repnz
inc
ret
arpl
jl
add
mov
cmpsb
adc
mul
push
xchg
jg
xlat
lcallw
xchg
adc
or
or
pop
push
push
hlt
std
int3
pop
push
add
mov
sti
mov
dec
mov
clc
loopne
jmp
notb
loopne
lcall
mov
push
movsb
fistps
and
xchg
dec
inc
incb
cli
xor
lahf
imul
hlt
ss
setg
inc
iret
mov
outsb
push
fisubl
add
jge
repz
ficoml
scas
fimull
pushf
pushf
mov
cli
inc
in
stos
cmpsl
das
aas
call
in
pop
daa
push
mov
lcall
rcl
in
cmpsl
sbb
in
mov
in
fdiv
fcoms
push
filds
mov
mov
pop
and
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
dec
add
jns
lods
std
mov
sahf
fwait
mov
popf
lea
sbb
enter
nop
fwait
mov
mov
lcall
mov
rol
cmpsb
repnz
cmp
fldl
xchg
mov
pushf
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
orl
ljmp
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
dec
xchg
movsb
mov
push
aam
lcall
in
cld
scas
dec
cmp
out
pushl
jb
xchg
nop
and
mov
testl
sub
adc
nop
or
sub
sahf
dec
mov
mov
lock
or
lock
jo
repz
inc
shlb
sub
xchg
and
cltd
stc
lcall
roll
hlt
xchg
xchg
repz
mov
popf
psllw
lahf
pop
jmp
jo
int
xchg
je
push
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
cmp
bound
cmp
ljmp
decl
les
dec
mov
shl
test
mov
lods
mov
jp
js
inc
push
std
fmuls
xchg
cmpsl
cltd
cmp
lods
in
call
and
xchg
lcall
mov
mov
xchg
test
jp
dec
shr
lret
mov
pushf
nop
mov
adc
sahf
sbbb
stos
mov
cltd
dec
or
xchg
nop
aad
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
xor
test
faddp
dec
mov
dec
outsb
jbe
xchg
mov
mov
in
data16
fisubrs
lret
xchg
lock
fsubrs
idivb
std
testb
shll
xchg
mov
push
daa
fdivs
mov
cmc
neg
pusha
filds
add
into
sbbb
ja
push
arpl
xor
pop
into
add
ljmp
add
pop
mov
mov
jne
pop
int
int
int
int
int3
ljmp
add
add
int3
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
add
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
add
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
add
scas
ret
jno
imul
ret
push
ret
or
mov
aad
pop
push
bound
cld
orl
in
shrl
clc
push
ret
sub
or
pushf
and
cli
and
or
cli
sub
push
test
mov
cli
adc
cli
sub
push
test
sub
lret
clc
push
xor
dec
adc
clc
adc
aaa
pandn
inc
fcomps
jl
adc
push
clc
dec
mov
mov
fistps
enter
aaa
lods
cmpsb
clc
fucomip
fucomip
cmpsl
or
jecxz
lods
pushl
neg
jl
aas
filds
insl
fsubs
ds
aas
rclb
and
aaa
push
adc
loope
imul
inc
fisubl
mov
pop
xchg
gs
inc
pop
addr16
and
jmp
inc
sbb
dec
clc
sub
push
xchg
gs
sbb
add
loopne
cld
gs
add
sar
dec
clc
aaa
cld
sub
push
mov
xchg
or
dec
fmuls
lds
gs
mov
lea
fs
xchg
gs
inc
xor
or
dec
lret
mov
shr
fcmovnb
scas
cltd
sub
mov
mov
sub
mov
cmp
pop
xchg
imul
xchg
gs
xchg
xchg
jne
dec
cmp
gs
sub
jmp
gs
adc
frstor
jno
orl
mov
in
sbb
adc
mov
mov
clc
pop
adc
inc
jge
inc
add
imul
inc
push
xchg
gs
push
dec
call
stos
gs
xchg
xchg
lods
mov
test
addr16
push
dec
pop
xchg
gs
inc
aaa
sub
xchg
gs
sti
mov
mull
xchg
aad
mov
inc
clc
das
hlt
test
fwait
cld
stos
and
ret
push
mov
dec
cmp
cld
loope
popf
push
mov
lret
mov
test
int3
lcall
mov
fstps
std
in
andl
insb
cmp
lcall
es
scas
mov
xchg
push
in
stos
mov
push
dec
inc
out
test
mov
mov
negl
cltd
pushf
mov
andl
lods
mov
stos
test
lods
mov
jge
cltd
mov
push
fbstp
test
mov
xor
scas
lods
inc
scas
mov
pop
mov
fucomip
jmp
jg
ffreep
idiv
xrelease
pusha
idiv
cld
out
pop
add
out
inc
inc
lahf
cld
jns
stc
dec
mov
xlat
fwait
dec
mov
pop
out
cmpsl
std
fbld
cld
and
es
jmp
cld
jnp
cmp
or
sarb
cld
mov
jmp
mov
xlat
in
inc
dec
ds
push
clc
outsb
cli
aaa
out
nop
cld
dec
sahf
shlb
add
incl
push
push
imul
sahf
aam
aaa
insb
mov
jmp
mov
cmpsl
jg
loopne
imul
icebp
jne
add
sub
dec
iret
nop
int3
daa
cmpsl
pop
es
fucomip
mov
int
lock
test
xchg
adc
test
jb
nop
decl
pushf
adc
pop
mov
lcall
jmp
clc
test
lock
mov
add
fbstp
hlt
call
xchg
test
fidivrl
mov
or
iret
div
xchg
jg
xor
clc
iret
int
cld
fdiv
inc
rcrb
pop
mov
and
clc
in
jmp
in
mov
js
insb
insl
sarl
scas
outsb
outsl
mov
addb
adc
nop
lea
sar
cmpsl
cmpsb
int
dec
cmp
int
cmc
clc
mov
stos
in
leave
jae
pushf
mov
pop
mov
lock
dec
mov
mov
cld
nop
mov
pop
mov
enter
test
xchg
cmp
popf
sahf
xchg
lock
xchg
cld
cpuid
mov
mov
add
mov
je
pop
aam
jbe
pcmpeqd
ds
sti
je
sub
sti
lcall
pop
idiv
les
and
scas
pop
out
jle
lods
jg
inc
add
push
divl
jne
jae
daa
stc
jne
movl
cmpsb
cmp
mov
finit
jbe
cmp
stos
and
out
lods
stos
je
add
mov
outsl
in
jecxz
xsaveopt
scas
test
jl
xchg
fucomip
lock
call
in
imul
outsl
cltd
notl
aas
xchg
aaa
lods
xor
in
xchg
jns
repz
and
adc
cmp
nop
in
loopne
daa
filds
adc
sbb
and
inc
out
fdivrs
aas
mov
dec
jle
adc
hlt
in
pushf
enter
divl
xor
xchg
js
add
sbb
sub
out
test
xchg
fcomps
popf
and
inc
fs
inc
inc
in
popf
in
dec
add
add
push
dec
cld
xchg
dec
xchg
in
mov
fwait
dec
and
frstor
sbb
pushf
inc
inc
stos
stos
xchg
xchg
es
fwait
outsl
xlat
mov
mov
push
and
adc
leave
sahf
in
out
fsubr
xchg
cmp
daa
rolb
inc
inc
ds
fsub
inc
and
inc
dec
fsubr
fdivrs
inc
ret
dec
or
lahf
in
mov
add
and
in
mov
cli
sahf
mov
and
jle
or
test
stc
in
adc
jl
add
les
leave
jl
mov
dec
dec
cmp
mov
jno
cwtl
fdivr
and
xor
add
in
sbb
pusha
add
push
in
fwait
jno
inc
ret
sbb
and
add
push
adc
mov
dec
jl
cld
in
lods
je
and
cld
fistps
or
add
movsl
in
push
ljmp
jnp
call
stos
pop
dec
xchg
pop
call
in
test
pop
jle
dec
inc
flds
or
xchg
xchg
sti
jg
inc
les
inc
fwait
shrb
mov
push
cmp
cmp
mov
incl
scas
loopne
dec
dec
dec
dec
cmp
cmp
sti
push
sbb
nop
stos
or
add
and
cmc
or
lods
jo
dec
or
icebp
mov
loop
inc
dec
call
bound
in
cmp
inc
js
inc
mov
dec
xchg
dec
inc
jmp
in
mov
inc
jl
adc
je
cmp
leave
leave
sti
sbb
or
daa
mov
dec
stc
inc
in
jae
andb
pusha
inc
cmp
in
sbb
mov
jo
mov
lock
call
mov
mov
idiv
pop
cmp
jo
addr16
out
dec
add
add
int3
in
je
dec
and
into
fsubs
sbb
or
rolb
pushf
int
leave
sub
inc
lock
add
leave
mov
and
in
push
mov
enter
dec
dec
adc
add
lret
pusha
mov
mov
cwtl
mov
pushf
sbb
sub
push
test
inc
in
fidivl
dec
cld
lcall
insb
inc
lret
cmp
jnp
in
idivb
loope
xchg
inc
or
sbb
push
stc
cmp
adc
mov
mov
inc
push
sub
mov
clc
and
cltd
fldlg2
popf
or
daa
mov
out
in
add
xlat
push
and
xor
shll
cmp
aam
cmp
js
jmp
outsl
loop
js
mov
dec
adc
inc
xchg
add
ret
mov
push
les
jg
shr
and
cli
inc
and
and
movsb
xlat
push
add
shlb
fwait
loop
inc
and
popf
hlt
sti
adc
adc
mov
adc
add
cwtl
cmovb
xchg
add
mov
hlt
mov
pushf
cli
add
test
ret
repz
ret
bound
in
pusha
fwait
cli
xchg
sbbb
inc
in
aaa
inc
imul
in
jecxz
shll
jp
inc
dec
xor
adc
int
and
jmp
cmp
out
add
sub
sub
sub
cmp
sub
ret
add
rcr
fisttps
decl
add
or
fbstp
push
in
into
int
lret
lret
add
or
iret
cmp
in
fmul
iret
lret
inc
push
inc
and
add
dec
cmp
cmp
mov
insl
ret
cli
movsb
repz
jl
insb
mov
lds
cld
sbb
fstps
jae
out
out
fsub
dec
jg
fmul
pop
dec
fildl
pop
mov
enter
push
pop
push
lret
iret
sbb
test
adc
aas
cmp
shr
mov
lock
inc
push
pop
lcall
sahf
cwtl
lock
xchg
rcr
jb
fdivs
pop
outsb
hlt
pop
add
or
lock
and
dec
sbb
arpl
ret
mov
loope
loop
push
dec
pop
in
rcr
iret
ret
notl
in
or
mov
lcall
adc
icebp
xchg
mov
and
movsb
repz
mov
in
aam
scas
loope
cs
push
cltd
jp
cltd
sti
jmp
lret
dec
adcb
popf
sti
clc
xchg
out
jmp
and
ret
add
mov
cmpsb
cmpsb
movsl
and
mov
popf
fidivrs
mov
lret
test
push
je
mov
out
inc
adc
scas
xchg
xchg
lret
repnz
lods
insb
sbb
push
sbb
and
add
cmp
push
je
aam
jl
cli
jbe
cmp
repz
pop
repnz
inc
add
xchg
outsl
xchg
jb
mov
test
test
mov
pop
rcrl
dec
and
push
enter
pushl
mov
jl
icebp
xchg
hlt
mull
ljmp
inc
jae
jno
pop
lods
xchg
incl
mov
xchg
inc
lock
mov
mov
xchg
ds
sarl
in
decb
lcall
mov
test
sar
mov
jmp
inc
sub
pop
mov
ss
icebp
movsb
mov
mov
jge
shl
popf
cli
cmp
or
or
das
adc
test
mov
iret
cmc
or
cmp
sti
lds
lahf
cli
or
dec
or
loopne
nop
stos
cmp
jle
add
ret
cld
xor
and
add
scas
in
int
clc
stos
iret
fistpll
iret
fists
sub
xchg
repz
iret
fildll
mov
testl
cli
dec
cli
cmp
xchg
jecxz
jge
jge
add
fildl
les
incb
fstl
cld
or
pop
xchg
popf
sbb
aam
das
adc
mov
not
sub
xchg
mov
loopne
mov
popa
pop
icebp
sub
shl
add
xchg
xchg
or
jb
sbb
jb
cvtps2pd
cltd
leave
or
das
repz
inc
aas
pop
out
dec
outsb
shl
push
inc
in
cli
andl
lock
jg
pushf
fsub
jno
fidivrl
xor
pop
leave
or
dec
mov
and
repnz
repnz
mov
lock
push
dec
icebp
out
inc
stos
test
das
and
dec
int
or
jmp
in
sub
repnz
pop
pop
pop
mov
xlat
incb
hlt
mov
jns
pop
sub
adc
inc
sub
sbb
repz
testl
or
insl
cmpsb
mov
ret
nop
and
and
adc
clc
pop
adc
out
mov
jns
xchg
in
paddw
jno
mov
or
jbe
rol
out
cmpsb
lea
inc
mov
test
cmpsb
aaa
les
mov
cld
jno,pt
aad
cmp
idiv
pop
pop
push
ret
in
test
jl
mov
and
sub
add
jl
std
test
add
push
jl
daa
movsb
ljmp
jecxz
scas
cld
mov
jno
nop
stos
jb
incb
jno
adc
lret
daa
cltd
in
int3
jmp
mov
fs
scas
cli
add
mov
repz
lds
add
rorb
or
inc
pop
scas
xchg
and
jne
cld
mov
mov
loopne
lea
xor
add
push
pop
into
sbb
cld
cmp
xor
push
lods
pop
cmp
pop
aaa
push
or
clc
idiv
cmp
jne
mov
test
les
sbb
cmpsl
xchg
mov
jno
testb
aas
mov
hlt
les
jnp
lret
sub
insl
clc
ja
fistpll
fildll
push
cmp
sub
sbb
iret
fistps
cld
pop
test
mov
adc
iret
pop
xchg
rcll
shrl
out
out
dec
mov
pop
in
mov
aaa
mov
iret
fistps
lret
arpl
fbld
ja
stos
mov
scas
shlb
xor
push
mov
mov
jge
cs
imul
loope
out
sti
fidivrs
insb
mov
xchg
popf
jns
gs
ljmp
fsubp
sbb
pushf
cmp
bound
clc
and
adc
ja
adc
in
jno
test
ljmp
popa
test
mov
out
arpl
mov
stos
out
push
repz
dec
add
cwtl
xchg
out
xchg
jne
fiadds
dec
sbb
dec
std
out
sahf
int3
stos
pushf
call
and
cmp
shrl
cli
jb
add
or
mov
xor
or
aam
nop
stc
push
fldl
sbb
inc
jb
or
xchg
and
in
pop
and
mov
xor
or
xlat
iret
in
mov
pop
in
mov
ficomps
add
push
mov
icebp
push
add
mov
push
mov
jp
cli
int
std
pop
orl
add
adc
out
mov
les
pop
dec
cmp
sub
or
jmp
mov
jnp
les
and
jb
jbe
sarl
scas
adc
sub
mov
add
je
les
mov
sbb
lods
mov
jmp
cmpl
mov
popf
fsts
mov
xchg
outsb
inc
insb
pop
pop
adc
ret
dec
push
fildl
daa
shl
ds
lret
inc
fs
movsb
divl
nop
test
mul
aas
mov
iret
sbb
dec
cld
cmpsl
dec
test
nop
je
aad
jno
xchg
push
out
cmp
cltd
pop
repz
ror
stc
adc
in
dec
adc
lea
cli
cmp
aam
into
sti
aas
pop
dec
mov
add
scas
and
and
adc
mov
data16
mov
stos
hlt
push
add
sub
cmp
mov
fdivr
stos
dec
scas
and
mov
in
stos
mov
fwait
movsl
in
pop
pop
cmp
das
in
cmc
jnp
or
lods
outsb
aam
in
cli
mov
mov
call
fldcw
aas
lcall
in
ljmp
jne
and
pop
in
push
pop
cmpb
pop
out
push
shufps
mov
enter
fwait
cmpsb
mov
int3
ss
lock
into
repnz
adc
sti
into
cmpl
push
add
cs
sub
fdivrl
xchg
add
test
jle
mov
mov
xchg
ss
in
std
fidivrl
mov
jmp
std
mov
cmpl
icebp
je
ds
jb
add
add
pop
rol
mov
add
ds
loop
mov
push
mov
mov
mov
pop
jb
push
mov
ja
stc
call
mov
nop
dec
scas
or
cmpsl
or
cmpl
sti
ds
add
sti
mov
and
repnz
imul
stos
out
mov
xchg
popf
hlt
sub
outsb
mov
adc
mov
or
add
sub
or
add
out
pop
in
add
pop
filds
sub
adc
lcall
scas
push
dec
inc
add
hlt
or
cld
out
jb
enter
fiaddl
nop
invd
adc
inc
add
dec
dec
or
shl
cmpsb
mov
cli
add
nop
xchg
cmpsb
jmp
and
cmpsb
ds
ds
test
cmpsl
mov
and
or
sub
add
mov
and
lock
ror
adc
inc
ds
push
adc
movsb
jge
ds
hlt
or
or
dec
add
dec
and
jb
in
lock
je
andb
repz
add
stos
scas
pop
add
or
fisubrl
add
pop
cld
in
stos
in
aad
js
je
and
adc
jmp
jge
je
jg
push
nopl
push
mov
push
push
sub
ficoml
push
inc
and
jl
inc
dec
dec
jecxz
mov
push
add
or
dec
mov
sbb
add
dec
dec
dec
push
hlt
fnstcw
jl,pt
lret
pop
daa
inc
push
xchg
addr16
adc
jmp
adc
and
leave
mov
inc
xlat
loopne
or
push
add
popa
push
add
je
pop
mov
aas
imul
stos
mov
out
push
adc
aad
daa
stc
sub
cmp
daa
cli
inc
sub
jmp
adc
inc
add
iret
stos
cmp
fucomp
outsl
xchg
adc
sbb
popf
imull
lret
and
sub
xor
and
add
push
dec
push
enter
fmulp
jmp
sub
mov
dec
cld
clc
gs
jno
xchg
hlt
gs
movsb
je
ret
int
mov
in
sub
movsb
fcomi
js
and
and
cmp
jmp
std
fdivp
dec
mov
cmp
lods
jp
adc
sub
and
sub
stos
je
popf
or
push
push
mov
cli
hlt
sub
pop
test
pop
mov
call
xchg
imul
daa
cld
or
movsb
xchg
pop
lea
or
movsl
mov
out
repz
or
pop
mov
repnz
cmp
xchg
imul
fcoml
pop
dec
mov
jmp
dec
push
or
shrb
pop
jae
push
sub
pop
ret
je
daa
dec
jae
orb
jns
jmp
std
lahf
jo
das
add
inc
sub
jo
inc
loopne
sbb
mov
cltd
push
sub
icebp
pop
jp
and
fsubl
es
dec
shll
sub
mov
dec
ret
adc
and
shlb
dec
and
das
dec
sbb
test
ficoms
outsb
pop
dec
cmp
sahf
popf
aaa
jo
sub
enter
pop
movsb
xchg
dec
jo
in
cmp
mov
jns
ja
xchg
js
sub
push
inc
or
in
icebp
pusha
notl
jo
fsubl
es
je
jmp
mov
dec
sbb
and
out
jb
andb
cli
push
sbb
xchg
mull
test
cmovle
loope
mov
adc
jmp
jo
je
xchg
imul
es
nop
cwtl
sub
icebp
cmp
sub
cmp
lcall
jae
rclb
int3
sub
das
out
push
mov
hlt
lock
jecxz
sti
push
add
ret
and
add
jle
mov
divl
cs
jge
jge
shl
xchg
add
rol
fstpl
out
mov
add
mov
mov
sbb
fildl
and
int3
out
nop
pop
dec
adc
mov
mov
movsb
push
add
push
xor
mov
lea
mov
xor
xor
add
or
mov
mov
lods
dec
jmp
and
dec
lret
mov
sub
sub
sub
andl
dec
enter
cmp
xchg
add
xor
sbb
aas
in
xchg
cwtl
int3
and
iret
adc
dec
dec
sub
insl
mov
jmp
sahf
push
xchg
cmpsb
inc
ja
pop
xchg
js
adc
ljmp
mov
inc
pop
and
stos
push
and
imul
mov
or
leave
xchg
sbb
bound
loopne
sbb
test
pop
mov
in
repz
hlt
adc
mov
ret
mov
insb
jae
sub
jle
push
pop
out
mov
in
push
sahf
in
stc
hlt
loope
cmp
mov
int3
jg
dec
stc
mov
insb
sbb
aad
bnd
fldpi
pop
inc
lock
fsubrl
out
sub
pushf
xchg
test
xchg
lea
int3
loopne
pop
insb
add
adc
loop
in
and
int3
into
push
push
sub
rcl
sbb
sub
cmp
movsb
lcall
add
sub
sub
xorb
push
xor
jo
mov
cmp
mov
sarb
xchg
loop
inc
inc
roll
push
shlb
sbb
and
loop
lret
jmp
ret
out
adc
mov
inc
outsb
rcl
adc
mov
push
test
test
nop
mov
stc
test
in
ror
jb
leave
add
pop
sbb
add
cmc
test
les
pop
adc
pop
adc
or
shll
loopne
out
divl
xor
subl
sub
sub
daa
pop
lret
inc
into
enter
adc
daa
pop
and
cltd
xchg
shrl
inc
sub
je
div
cmpb
dec
mov
outsb
sub
adc
into
lods
mov
into
movsb
and
adc
mov
pop
jbe
dec
push
mov
repz
stc
fisubs
add
js
xchg
je
je
cmpb
andb
xchg
jno
cmpsb
aam
test
xchg
xchg
or
mov
mov
mov
les
mov
ljmp
jb
xchg
movsb
push
mov
jge
mov
outsl
inc
nop
jp
xor
scas
xor
out
and
and
clc
out
les
xlat
mov
insb
out
cmp
arpl
int
pop
mov
cmpsb
and
out
hlt
lods
sub
pop
fdiv
movb
nop
clc
mov
jb
dec
enter
adc
aam
mov
mov
jecxz
sbb
xchg
or
sub
inc
pop
ljmp
je
bound
pop
cmpsb
in
std
clc
arpl
dec
pop
std
or
lods
stos
add
dec
xor
fwait
sub
inc
aas
cmp
mov
push
mov
scas
cmpsb
jne
jmp
add
orl
shrb
int3
add
xchg
cmc
movsb
mov
sub
mov
testb
testb
mov
repnz
inc
dec
pop
repz
test
adc
mov
jmp
jo
out
scas
pop
mov
sbb
or
out
das
cli
mov
das
cltd
dec
das
xchg
add
iret
repnz
sahf
sub
daa
lcall
inc
test
stos
sbb
nop
ret
sahf
pop
dec
lret
jnp
aam
jb
mov
cmc
pop
inc
fiaddl
idiv
push
mov
pop
or
clc
pop
fidivs
aam
pop
in
and
mov
pop
addr16
xchg
cltd
aaa
cmc
leave
and
dec
movsb
xchg
imul
jl
testl
mov
mov
push
pop
stos
mov
pop
mov
call
ljmp
push
sub
mov
out
sbb
xor
pop
testl
int
loope
jb
lret
sub
inc
lock
add
jb
jle
inc
jp
xchg
out
xchg
dec
mov
rcl
jp
lods
scas
loope
ljmp
loope
dec
notb
jmp
andb
xor
jae
xchg
jmp
lock
mov
and
test
cld
test
pop
in
fsubrl
aas
test
adc
popf
cmpsl
jg
rcll
or
adc
les
mov
sub
adc
add
inc
out
cltd
loope
lea
lds
cltd
je
mov
cltd
ret
mov
cli
aam
xchg
das
clc
sub
pop
xchg
xor
push
push
inc
xor
bound
sahf
push
es
sbb
jg
lock
nop
lret
jg
scas
pop
mov
mov
ret
clc
insl
cmp
pusha
and
and
cmp
test
mov
mov
inc
add
adc
mov
mov
mov
sti
ret
rorb
inc
push
rep
mov
sub
jge
in
pop
jp
dec
and
xchg
cli
xor
fildl
mov
sbb
jns
insb
push
jmp
mov
cmpsl
aas
sub
les
aaa
lret
add
mov
stc
cltd
and
jmp
rcl
and
stos
and
aam
mov
adc
fbld
fstl
jge
sub
and
jp
jno
stc
push
repnz
dec
adc
jmp
add
out
inc
ljmp
ja
icebp
mov
insb
out
cs
bound
pop
test
repnz
jge
hlt
sbb
mov
cmc
xor
rcrl
in
fdivs
fisubl
lcall
mov
lret
imul
movb
cmpsb
in
aas
or
add
xchg
mov
sub
rclb
aam
xchg
adcb
loopne
loopne
loop
sbb
daa
xor
movsb
jbe
inc
hlt
xchg
pop
pop
filds
cmp
push
je
arpl
adc
jb
cld
arpl
add
push
add
fimuls
clc
sti
mov
adc
jg
dec
aad
push
hlt
shr
inc
bound
mov
icebp
test
stc
call
out
push
out
jmp
popa
fstl
dec
sbb
and
xor
mov
pop
jno
jecxz
nop
adc
cli
pop
xlat
xchg
sub
xchg
je
add
inc
ret
out
add
ss
add
mov
andb
dec
aam
insb
out
test
adc
mov
out
je
lods
add
inc
leave
xchg
filds
jecxz
out
and
adc
lcall
push
inc
mov
add
add
inc
faddl
mov
mov
mov
les
aas
aas
iret
mov
push
sbb
lea
xchg
cld
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
and
inc
mov
inc
hlt
inc
in
push
and
inc
xchg
ja
dec
shl
aas
inc
pop
lcall
xchg
nop
lea
dec
rcrl
shll
scas
sahf
xchg
dec
shll
aad
xlat
hlt
aas
adc
xchg
inc
xchg
adc
adc
femms
or
mov
stc
aas
sarb
sub
xorl
popf
cmp
cmp
xchg
iret
cmpsb
imul
jg
mov
mov
jne
pop
push
bound
sbb
and
and
inc
das
bound
sarl
cmpsb
xchg
cmpsb
mov
and
out
lock
push
ljmp
jnp
adc
dec
call
inc
push
arpl
adc
fiaddl
rcrb
bound
aaa
mov
add
loop
call
ret
stos
aaa
cltd
lcall
mov
fdivrl
aaa
jne
inc
adc
addb
lock
dec
sbb
jb
out
movsb
or
ds
pop
scas
mov
insb
push
in
jg
out
mov
mov
inc
sbb
pop
fldt
add
or
lcall
jno
mov
js
jnp
inc
xchg
or
scas
test
cmp
adc
enter
std
es
mov
cmp
in
mov
inc
jmp
les
inc
stc
sbb
jp
push
iret
push
js
dec
js
cs
repz
ss
enter
or
fidivrs
add
lret
inc
mov
das
sahf
hlt
cmp
or
xlat
jmp
and
or
xchg
cld
daa
test
mov
imul
rorl
xchg
popf
je
rcl
std
push
scas
jnp
repnz
jno
aaa
or
mov
jmp
xor
pusha
faddl
adc
push
shlb
icebp
jne
loope
sub
test
mov
jo
inc
leave
mov
aad
aad
call
cltd
mov
inc
xor
das
xor
dec
mov
test
adc
mov
mov
cmpl
push
pop
dec
fcomps
mov
in
cwtl
jno
orl
mov
dec
sti
into
pop
in
into
pop
inc
inc
dec
aaa
and
lret
mov
xchg
gs
aam
mov
cmp
in
mov
test
jne
sbb
adc
cmc
pop
xor
hlt
inc
loopne
cltd
jl
jnp
cli
inc
out
lcall
pop
or
scas
or
in
mov
pop
ljmp
dec
mov
pop
out
dec
mov
xchg
jl
fildl
fists
lahf
or
pop
mov
dec
mov
inc
mov
dec
mov
testl
jmp
lahf
jnp
cmp
xchg
dec
lret
mov
stos
aad
inc
scas
repnz
imul
inc
ret
pop
add
test
out
fwait
je
cli
inc
pushf
jl
cli
in
mov
dec
adc
pop
sbb
out
add
fistps
icebp
jp
cmpsl
sbb
dec
shlb
push
mul
repz
push
push
sarl
sub
jge
pop
out
jge
push
sahf
lahf
cmp
sub
mov
xchg
adc
sub
sar
fdivr
jecxz
add
shrl
jbe
pop
jmp
mov
push
mov
inc
addr16
inc
jb
or
insl
je
jecxz
add
pop
sub
lahf
mov
outsl
ret
inc
jecxz
mov
add
out
frstor
jl
in
push
inc
std
es
repz
mov
mov
mov
xchg
fwait
ja
rcl
sti
and
imul
ljmp
mov
lock
ja
jl
sub
fimuls
xchg
jle
cmp
aas
cs
lret
pop
dec
je
mov
mov
xchg
div
jg
pop
cld
adc
repz
adc
adc
cs
adc
daa
hlt
push
sahf
pop
push
or
popf
in
add
pop
shll
out
fs
xchg
jg
in
rcrb
dec
lea
call
out
dec
nop
dec
scas
cs
arpl
push
sets
movsl
int3
into
ss
outsw
mov
addr16
imul
cmp
dec
lahf
and
or
cmpsb
mov
mov
fstpt
jl
int
js
js
hlt
in
xor
js
das
jecxz
iret
jecxz
mov
jo
icebp
jmp
in
pop
ret
cmp
pop
add
mov
std
loope
ret
fcomps
das
gs
shrb
pop
cmp
leave
jge
out
cmp
adc
pushf
jge
enter
lods
mov
jno
fists
lret
sbb
mov
rcrb
popa
mov
lods
add
fdivrp
cmp
mov
es
out
push
jmp
jmp
adc
loop
or
cld
movsl
jl
xchg
loopne
mov
inc
stc
and
jb
imul
scas
mov
sub
imull
out
pop
dec
cmp
dec
out
push
enter
aas
and
ljmp
pop
ja
popf
fcomi
ljmp
sbb
lds
dec
test
jge
inc
jp
push
out
or
repz
jmp
cmp
ljmp
add
lret
xor
test
js
cltd
inc
mov
jb
mov
add
ret
push
xchg
sbb
loop
or
dec
inc
cmpsb
cs
mov
hlt
push
in
test
sahf
cmp
loopne
xchg
lock
adcb
cmpsb
andl
loop
inc
xchg
test
jg
jge
repnz
cmp
les
pop
fwait
or
icebp
jle
and
out
fisttpl
pusha
pop
pop
lahf
dec
pxor
hlt
fsts
rcll
xchg
sti
imul
inc
xchg
in
imul
xor
inc
mov
repnz
or
jmp
pop
dec
xchg
imul
cli
mov
inc
sahf
test
inc
mov
scas
and
scas
fadds
mov
cli
adc
sbb
add
out
pop
jbe
ret
negb
aas
mov
jnp
daa
aas
jb
xchg
lock
pop
insb
mov
pop
sbb
add
mov
inc
loopne
pop
gs
addr16
retw
inc
and
fisubl
fldenv
popa
dec
mov
pop
hlt
pop
in
pop
mov
pop
inc
gs
push
in
pop
pop
pop
pop
lds
gs
push
in
push
push
push
push
clc
push
call
push
push
dec
lock
call
gs
dec
in
dec
dec
dec
dec
imul
in
inc
inc
jno
in
inc
xchg
int3
mov
aas
ds
push
inc
xchg
cmp
cmp
jmp
cmp
mov
popf
xchg
sub
in
xor
mov
mov
mov
sub
loopne
hlt
sub
daa
repnz
loopne
inc
and
and
sub
lods
and
and
rcrb
gs
xchg
stc
xchg
xchg
int
ficoml
fnstcw
adc
mov
lret
fcoms
in
adc
das
in
pop
or
in
cld
and
in
gs
sub
add
mov
std
pop
iret
gs
dec
pop
dec
pop
shrl
jecxz
add
aaa
xchg
or
push
mov
mov
push
xchg
ds
add
rcl
cwtl
icebp
test
sub
mov
mov
push
loopne
aaa
adc
lret
ja
scas
stc
das
decb
out
cmp
dec
xor
scas
repz
daa
daa
xchg
cli
mov
jo
stc
mov
scas
scas
ss
je
jmp
adc
lret
je
jp
mov
jmp
inc
inc
add
mov
mov
addr16
pop
in
jbe
push
push
sbbl
sub
or
cmpl
adc
pop
push
mov
jb
hlt
idivb
jmp
sbbl
popf
movsb
pop
and
xlat
mov
mov
popa
jge
pusha
inc
iret
stc
mov
mov
int
jl
ja
pop
mov
inc
mov
test
mov
xchg
mov
lock
lock
xchg
cli
test
test
fidivl
jne
stos
aam
or
dec
cmp
movsb
cmpsb
dec
in
cmp
stc
in
cmpsb
test
imul
lods
jp
aam
bound
or
jb
in
test
sub
test
data16
aaa
in
je
loop
pop
cmp
ret
scas
fmul
aaa
sarb
cmp
fisubrs
lahf
and
loop
cmp
jl
cmc
aaa
std
xor
dec
xchg
rol
std
sub
and
mov
pop
pop
mov
mov
jne
js
out
repz
les
pop
out
mov
inc
mov
mov
mov
mov
xchg
mov
push
out
push
ret
aaa
in
cmp
mov
ljmp
mov
jae
ja
pop
or
jge
xchg
adc
add
jne
jge
into
daa
cmpsb
out
xchg
mov
jbe
cmp
push
add
xor
xor
push
test
shl
jmp
mov
inc
outsl
lret
into
aad
jmp
xchg
daa
xchg
sub
add
mov
int
test
xrstor
test
jecxz
lods
in
outsl
ljmp
loopne
pop
dec
pop
repz
or
mov
sub
mov
mov
mov
stos
sub
inc
mov
addl
add
mov
cwtl
fwait
jnp
cld
mov
adc
adc
sub
in
in
or
xchg
xor
mov
lret
mov
xchg
mov
sub
lcall
mov
mov
mov
movsb
lcall
mov
aas
xor
lcall
lcall
and
mov
ja
jbe
jne
je
jae
and
jb
jno
jo
outsl
mov
jmp
scas
insl
mov
in
push
xchg
imul
mov
lds
addr16
jl
fmull
stos
pushl
mov
xchg
lods
lcall
clc
mov
sbb
sbb
xchg
lret
mov
lret
mov
lret
mov
mov
lret
mov
pushf
mov
jecxz
pop
in
cmc
insl
outsb
outsb
outsb
dec
hlt
ja
daa
mov
dec
ljmp
lahf
ja
pop
mov
aaa
addb
add
add
or
inc
cmp
out
push
pop
fdivr
push
dec
pop
adc
ret
mov
clc
xchg
mov
lret
lds
add
add
mov
jb
out
sub
loope
cld
mov
leave
lods
scas
lcall
in
pop
add
sti
shld
xchg
cld
outsl
das
sbb
dec
mov
jmpw
push
test
cmc
std
mov
das
mov
adc
test
in
push
ja
cli
in
shrb
xchg
test
jno
xchg
clc
sbbl
cld
add
mov
shlb
rorb
int
hlt
je
imull
fs
adc
int3
or
cs
mov
out
sbb
mov
cld
popl
jecxz
insl
jle
enter
testb
testb
popa
aas
scas
clc
push
adc
mov
or
dec
sbb
rcrl
and
in
sbb
add
dec
idivb
cli
addr16
movsb
arpl
cli
decb
fbld
adc
inc
add
ret
push
xchg
gs
das
pop
mov
int
mov
pop
int3
jno
dec
pop
mov
and
pop
lea
aas
mov
insl
pop
mov
add
adc
cltd
test
mov
sbb
add
cmpsb
add
pop
arpl
adc
in
xchg
sbb
push
popf
push
fdivl
inc
sarb
int3
pushf
ret
pop
pop
lea
lret
or
push
hlt
inc
fs
lahf
jg
or
cmc
test
rcrl
shr
pop
cmp
int
dec
xlat
and
inc
cltd
mov
inc
gs
mov
test
jmp
mov
pop
lea
inc
icebp
mov
cmp
mov
pop
es
adc
aad
sti
adc
sub
add
push
flds
jne
ret
add
jecxz
adc
iret
arpl
negb
ficoml
shl
mov
in
addr16
xacquire
lock
ret
in
frstor
lret
in
ja
jae
mov
pop
fnstcw
mov
in
sar
adc
sbb
shlb
pop
mov
sbb
jge
int3
or
cmp
cli
ret
xlat
adc
or
pop
shll
dec
clc
dec
push
adc
pop
or
in
cld
mov
push
or
jmp
inc
fistl
xor
dec
test
mov
std
push
mov
xor
cmpsb
jnp
dec
pop
stos
mov
ljmp
xlat
stos
scas
stos
jnp
stc
out
mov
and
pop
rolb
xchg
stos
aam
mov
or
lahf
inc
add
mov
pop
jp
jae
clc
sahf
fiadds
or
pop
repz
push
pop
test
jno
shrl
dec
rorb
add
lret
ljmp
int3
out
int3
jb
cs
bound
das
push
push
xchg
das
movsb
hlt
arpl
adc
or
aas
mov
addr16
loop
out
cmpsb
mov
jge
int
clc
sti
jl
fsubrp
dec
mov
enter
outsb
inc
push
push
xchg
clc
repz
cmp
sbbb
stos
pop
sub
xchg
call
ds
inc
xchg
jnp
mov
loop
fs
pop
fldl
xchg
filds
inc
hlt
sbb
iret
sti
test
int
loopne
clc
and
adc
ljmp
negl
in
arpl
daa
call
lahf
jg
call
repz
push
mov
adcb
std
int3
stc
mov
mov
mov
int3
inc
inc
add
xchg
and
sub
lock
jbe
add
shlb
and
add
fdivrp
int
and
aaa
jp
inc
inc
ret
push
subl
sub
sti
out
adc
mov
fldl
loopne
add
testb
push
dec
fstpl
fbstp
lock
add
mov
lods
lods
sub
loop
mov
arpl
lods
lods
lods
lods
popa
mov
pop
mov
loop
loop
mov
pop
mov
sub
lret
pop
ret
push
fcoms
cmpsb
imul
fisubl
insl
pop
lods
mov
dec
or
sub
lds
inc
inc
lds
mov
inc
int
mov
ds
repnz
cmp
cmp
mov
adc
imul
popf
sub
xchg
inc
push
sub
daa
adc
flds
int
loope
movsl
and
and
gs
inc
push
and
and
pop
xchg
stos
jp
loop
fcomps
ficoml
out
daa
mov
aam
mov
mov
fildl
xchg
cmp
mov
leave
mov
std
in
mov
mov
jle
jne
sbb
adc
icebp
loop
clc
or
adc
addr16
cmpsb
mov
daa
aad
aaa
lock
cmovl
out
fdiv
sarb
cmp
xchg
mov
icebp
and
out
loop
cmp
cli
pop
jne
out
in
pop
cmp
movsl
cld
loope
addb
mov
push
adc
loope
xlat
xchg
das
clc
pop
jno
clc
leave
jno
std
dec
into
sbb
test
jns
cmp
lcall
mov
lcall
xor
jno
xor
xor
jno
movsb
sub
and
mov
xchg
or
loop
sub
jp
jne
jbe
cmp
dec
aad
jle
jnp
cltd
push
lock
xor
mov
add
data16
loopw
dec
push
cli
in
mov
inc
inc
or
or
jg
adc
or
pop
xchg
int
nop
mov
lea
inc
mov
hlt
sbb
xchg
fwait
shl
lret
mov
mov
adc
fcmovne
cmp
cs
cmpsl
sbb
data16
sub
adc
mov
scas
lret
data16
fbstp
iret
cmp
or
dec
pop
stc
jmp
dec
xor
pop
xchg
xchg
pop
mov
shr
jb
push
movsl
jmp
sub
stos
pop
lock
pushf
mov
pop
sahf
je
add
incb
ja
hlt
daa
cmp
fxch
addr16
fmull
out
ret
lds
pop
inc
xchg
pop
jmp
or
lret
into
sbb
in
testl
out
sti
repz
test
cli
roll
pop
popf
adcl
loopne
shrb
fwait
mov
lods
cmp
imull
xchg
loop
cmpsb
andb
jge
ja
sti
mov
jns
sbb
pop
in
loop
xchg
pop
and
insl
xorl
xor
xchg
icebp
flds
and
push
cmp
out
into
stos
push
jecxz
dec
xor
and
in
xor
cli
xchg
out
jl
pop
scas
nop
lea
lods
imulb
leave
mov
jbe
ljmp
jg
mov
loope
nop
cltd
xchg
gs
xchg
mov
addr16
pop
mov
and
xchg
sub
and
and
jge
sbb
je
call
pop
mov
loopne
xchg
mov
mov
test
mov
mov
sahf
scas
lret
mov
xchg
mov
fisubl
testl
stc
pop
fisttpll
lcall
jne
mov
rcrl
loope
je
and
jp
xchg
mov
adc
hlt
pop
xor
fdivr
call
enter
push
mov
mov
inc
sti
ret
popf
mov
lods
lahf
and
call
mov
inc
xchg
std
mov
cmp
ss
xor
je
inc
jl
dec
add
loop
in
les
jle
stos
movq
xchg
add
jne
cmp
adc
lret
pop
sahf
int
ds
adc
scas
movsb
ja
sub
sub
jnp
or
idivl
pop
push
sarb
in
outsl
out
incb
adc
cmp
mov
lods
xchg
stc
sbb
es
adc
stc
pop
mov
or
jb
adc
adc
xchg
int3
and
jb
dec
adc
dec
rorl
imul
cmpl
in
inc
xchg
je
cli
or
mov
pop
clc
loope
cmpsl
xor
repz
cli
ret
adc
cmc
add
cld
xchg
sbb
sub
cwtl
add
sti
in
inc
jg
je
fwait
clc
lahf
incb
pop
mov
jge
pop
into
sbb
add
pop
mov
inc
stc
push
sti
inc
pop
imul
lods
mov
mov
sbb
std
add
mov
loope
mov
jae
mov
lcall
jae
lcall
jl
out
push
in
jg
jmp
aad
pop
xchg
mov
stc
pop
outsl
in
rcrl
fistps
lcall
in
insb
inc
stos
xchg
jbe
out
xor
mov
fbstp
imul
test
pop
enter
adc
add
inc
cmpsl
or
cs
mov
lods
repz
mov
cmp
call
xor
out
pop
cmp
arpl
cld
pop
pop
imul
out
xchg
repz
cmp
pop
call
add
and
cmp
dec
repz
inc
fnstenv
shrl
test
cmp
pop
call
pop
jg
ret
mov
jb
push
cmp
mov
add
shll
ss
mov
shll
sub
mov
xor
sbb
xchg
mov
add
nop
imull
sbb
stos
scas
stc
mov
pop
jle
dec
pushf
nop
mov
xchg
lea
rcrl
mov
xchg
nop
push
xchg
adc
mov
add
adc
add
sub
mov
leave
or
aaa
frstor
mov
add
add
and
stc
sbb
push
sbb
push
sbb
jle
aaa
dec
cwtl
pushf
scas
sbb
sbb
scas
pop
add
add
imul
repz
push
inc
cmc
leave
cmpsl
scas
push
mov
fwait
cmp
daa
iret
lods
cmpsl
push
mov
add
sub
outsb
int3
pop
add
cli
sti
cmpsl
scas
icebp
push
push
test
loop
pop
and
cmp
cld
repnz
fs
dec
ss
adc
test
dec
push
imul
je
cwtl
loopne
sbb
push
jp
dec
push
add
je
mov
pop
mov
add
add
cmc
push
mov
pop
test
je
mov
push
xchg
cmp
cmpsb
out
cmpsl
pop
bswap
push
out
daa
xchg
jle
sub
je
add
or
cli
push
int3
cs
cmp
out
and
add
fcmovnb
mov
fsubr
jbe
adc
jl
decb
inc
inc
pop
out
dec
sbb
test
add
pop
lret
inc
lock
xcrypt-ctr
cmpsl
sahf
cmp
cs
mov
and
xchg
mov
mov
ret
lock
mov
pop
xor
ljmp
push
sub
cmp
mov
repz
jnp
adc
xchg
xchg
mov
aam
dec
in
cmp
inc
dec
jns
mov
pop
jb
xchg
dec
jge
xor
inc
into
daa
xorb
cmp
push
dec
jecxz
adc
push
test
xchg
xchg
out
and
aas
shlb
jns
mov
je
nop
scas
ficoms
dec
in
stos
int3
dec
push
stc
lods
icebp
xchg
dec
repz
test
lret
jmp
sbb
ffree
out
popf
push
jbe
dec
push
mov
push
and
cmpsb
stc
je
xlat
fimull
add
nop
dec
sub
je
repz
xlat
loopne
sarl
jbe
repnz
xchg
jb
inc
scas
adc
pop
ljmp
imull
adc
inc
pop
jbe
sti
jbe
je
out
and
pop
scas
je
je
clc
test
cmp
sbb
inc
xlat
fidivl
je
jp
stc
popa
out
mov
orb
inc
xchg
jge
push
in
ds
inc
test
fs
shrb
repnz
movsb
je
not
shrb
sti
push
dec
xor
out
nop
xlat
mov
jecxz
negl
jg
repnz
pop
push
cwtl
stc
pop
cmp
mov
inc
jp
inc
aad
cmpsb
pop
ljmp
add
movsb
xchg
xlat
pop
out
cmp
sti
mov
loope
dec
jne
jo
pushf
addl
or
push
out
pop
rolb
mov
jecxz
jmp
add
scas
std
inc
and
int3
or
mov
int3
sub
push
lock
ds
dec
cli
adc
push
int3
adc
je
cltd
pop
sub
xchg
stc
mov
je
push
stc
push
lret
lods
or
lock
out
mov
repz
jmp
push
jle
jg
mov
dec
in
call
andl
popa
fsubrs
repz
mov
jbe
scas
cli
push
mov
sbb
divl
das
sub
mov
pushf
dec
mov
cmp
sbb
arpl
enter
inc
xchg
xor
jnp
mov
aaa
jecxz
adc
adc
cmp
mov
ret
xchg
fucomip
cmp
inc
sahf
lock
popf
mov
aas
dec
out
cmp
sub
or
sbb
sub
in
and
pop
dec
pcmpeqd
xlat
mov
ds
pop
mov
cmp
or
mov
push
push
sar
repz
or
shlb
fisttpl
jle
xchg
in
jg
pop
les
stc
jmp
push
pusha
and
idivl
je
cltd
add
clc
ds
sub
out
jl
sbb
fst
lock
push
fdivs
dec
aad
xor
inc
mov
push
jae
pop
movsb
test
cmp
and
xchg
inc
mov
test
jmp
cwtl
mov
mov
pop
pop
pop
out
lds
inc
mov
and
sti
xchg
dec
xor
lret
pushl
push
notl
and
jbe
and
cmp
mov
xchg
shll
in
add
mov
mov
scas
cwtl
sub
dec
test
in
lahf
dec
orb
pop
inc
jmp
and
cltd
add
in
repz
rsm
outsb
xchg
xchg
push
pop
inc
or
xchg
hlt
mov
cld
cmp
loop
dec
dec
mov
sbb
das
inc
mov
je
call
ret
cmp
daa
addr16
mov
xchg
lea
and
mov
aam
ds
and
mov
cmp
sti
ret
lret
ret
scas
xlat
lret
sub
insl
je
push
fsubrl
adc
dec
scas
cmp
clc
xchg
fsubp
insb
fadd
fldl
scas
mov
jecxz
sbb
mov
fadd
int3
inc
ds
dec
pop
jp
push
add
and
adc
pop
jg
xchg
shr
push
xchg
lret
out
sahf
pop
mov
iret
xor
out
ljmp
ret
cmp
lcall
pop
stos
cld
fidivs
fiaddl
pop
lock
fisubs
scas
std
inc
jnp
imul
mov
aaa
into
cmp
inc
out
cli
js
pop
cwtl
pushf
sub
inc
lock
iret
adc
out
out
sbb
pop
test
inc
mov
daa
add
cmp
jg
out
icebp
sti
pop
in
or
out
hlt
icebp
sti
inc
stc
insl
stos
push
dec
ret
bswap
test
mov
jge
cld
fsubs
mov
xchg
out
rcl
mov
testb
fucomip
jl
pop
pop
inc
orb
ret
out
adcl
call
out
cli
cld
cmp
ret
mov
jb
into
or
cmpsl
xchg
outsb
nop
dec
mov
out
mov
sbb
sbbb
clc
pop
ret
out
outsl
cld
xor
push
into
inc
enter
mov
scas
clc
pop
shl
std
add
stc
mov
adc
inc
push
dec
stos
push
movsb
dec
jg
pop
mov
mov
in
andb
and
and
in
cmpsl
ret
xor
pop
cmp
dec
add
xchg
negb
push
xchg
test
lods
dec
pop
mov
cmp
es
sbb
jnp
mov
inc
leave
leave
nop
out
loope
push
inc
xor
movsl
sbb
push
in
dec
or
repz
and
stos
add
lret
scas
push
add
push
adc
sub
movsl
mov
shll
es
xchg
mov
or
pop
cmp
fidivrl
test
test
add
add
jbe
cmc
clc
sub
mov
std
mov
iret
aam
xchg
jp
dec
mov
shll
fs
shll
shl
addr16
pop
push
mov
fcoml
enter
fimull
xchg
repz
loop
shl
sti
lret
dec
push
cmp
imul
inc
gs
cld
adc
dec
jmp
stc
add
pop
ja
ja
pop
sub
call
xchg
insl
pop
jb
sub
ljmp
ret
pop
test
jge
lret
nop
dec
test
ret
mov
stc
mov
int3
add
cli
in
jne
cli
das
jg
iret
and
movb
adc
fdivr
pop
dec
mov
jmp
out
xchg
cmc
rcrl
xchg
jp
mov
scas
cli
push
push
loop
inc
pop
sbb
pop
movsl
js
pop
je
test
mov
mov
inc
adc
in
fbld
adc
ret
pop
xchg
mov
sti
call
jmp
mov
or
add
cwtl
je
mov
out
pop
push
out
cli
fs
pop
push
sar
bound
in
repz
loope
xchg
jg
fs
jle
mov
cmpsb
pop
cmp
cmpsb
repnz
adc
insb
leave
movsl
mov
call
and
cmp
movsb
andl
jl
xchg
mov
je
stos
aam
jp
jmp
dec
adc
cld
fs
cwtl
stos
add
xchg
xor
inc
lock
jmp
mov
test
mov
jecxz
out
xor
enter
jbe
out
rclb
and
sbb
add
jle
dec
jmp
icebp
adc
ret
cmp
push
pop
sbb
in
cmp
mov
inc
imul
out
xchg
nop
inc
mov
mov
out
int3
lret
scas
dec
mov
icebp
repnz
and
scas
and
sub
bswap
jp
lret
je
in
mov
pop
jle
jnp
jl
mov
or
and
pop
lds
pop
clc
jmp
add
pop
xchg
and
pop
add
mov
mov
jmp
jle
mov
pusha
sbbl
mov
dec
jne
jp
ja
ret
push
das
push
sbb
leave
lcall
clc
cmc
je
lock
jmp
adc
mov
std
decb
jge
sbb
push
sti
test
pop
in
hlt
lahf
pop
cmp
lock
push
mov
cwtl
rcrl
scas
push
stos
adc
in
cli
mulb
movsb
xor
out
inc
inc
jmp
jne
or
shl
fsubl
mov
rolb
jmp
push
ret
aaa
mov
repnz
cs
cwtl
popa
and
lods
push
mov
daa
shlb
cmp
mov
in
scas
imul
repnz
mov
jmp
bound
fwait
es
bound
xchg
adc
pusha
repnz
cwtl
inc
add
mov
test
jae
clc
dec
xchg
out
push
mov
xchg
arpl
lcall
cmpsb
in
adc
pushw
and
and
notl
lock
imul
pop
rcll
cli
cmpsb
mov
add
out
adcl
int3
scas
lret
mov
ljmp
jno
inc
std
subb
mov
mov
add
pop
pop
push
cli
popf
sti
cmpl
jbe
call
cli
cli
pop
push
repz
mov
jp
add
out
pop
mov
sbbl
jno
decl
push
mov
jne
inc
mov
dec
and
std
push
mov
mov
hlt
into
jmp
in
scas
out
pop
cmp
nop
jnp
dec
aaa
inc
jnp
jecxz
mov
icebp
jne
fimull
rclb
sub
jp
xchg
and
testl
jg
cld
mov
shll
cmpsb
adc
out
jge
adc
in
pop
std
scas
test
int3
fdivrs
test
lahf
fnstenv
test
jmp
lret
push
pop
mov
mov
test
push
fcoms
dec
ljmp
and
icebp
pop
ret
mov
loop
cmp
aas
or
fst
and
repz
rclb
cmpsb
out
xchg
cmc
mov
pop
stos
push
aas
jl
or
call
jne
idivl
mov
and
stos
not
add
dec
subl
xor
mov
jecxz
sub
sti
lahf
and
jle
push
mov
dec
cli
test
lcall
sbbb
and
notb
faddl
addl
xchg
lcall
ds
xor
cmp
leave
rcll
cs
lahf
rcr
hlt
lods
mov
push
jnp
jns
inc
mov
icebp
std
inc
mov
xchg
fistps
push
xchg
mov
lret
out
cmp
sti
sahf
mov
incb
cld
xlat
into
mov
std
outsl
fcomip
clc
push
sar
cld
daa
iret
mov
arpl
xor
negl
jle
jecxz
fcomip
ja
jno
popa
pop
std
mov
dec
cld
arpl
pop
repnz
sbb
iret
mov
pop
jp
cld
and
jp
aas
cld
loope
out
getsec
cld
sbb
testl
pop
fcmovnu
sar
dec
and
std
sar
repz
mov
mov
mov
pop
mov
shrb
call
iret
fbstp
loope
iret
or
fisubrs
mov
jo
int
into
jnp
lcall
sub
repnz
sub
mov
imul
sahf
pop
or
lcall
dec
xchg
mov
ret
in
jecxz
mov
out
test
test
dec
push
adc
pop
and
adc
inc
fldenv
cmp
jge
dec
test
aam
jmp
mov
lds
push
mov
mov
lret
cmc
in
sbb
push
ror
cmc
int
sub
in
mov
xchg
mov
mov
out
mov
pop
int
sti
vmovss
push
fbstp
jae
cmpl
xlat
and
mov
fsubrs
pop
add
jbe
sti
repz
test
jg
ret
je
repz
cmpsl
in
mov
mov
mov
push
repnz
loopne
test
dec
repnz
pop
icebp
mov
add
cld
cmc
add
js
mov
in
test
out
xchg
dec
cmc
loop
into
movsb
sub
add
push
mov
xor
cld
jp
jge
enter
mov
sti
jle
mov
cmpsl
cld
mov
lods
aaa
into
cld
mov
fnsave
mov
shrb
pusha
shll
inc
lret
jbe
in
lods
add
cld
fs
jle
loopne
or
rolb
das
loop
fucomi
xchg
scas
sti
pop
push
nop
jae
or
icebp
adc
inc
mov
cmp
nop
mov
inc
movsb
clc
sub
mov
pop
mov
popf
mov
lea
pushl
mov
out
arpl
mov
and
popf
fistl
std
lret
jne
adc
mov
push
ds
mov
dec
jb
adc
and
sti
add
xor
lahf
pop
inc
test
xchg
xchg
out
test
out
repz
xor
jnp
mov
adc
std
aaa
mov
sti
pop
sub
sub
cmpsl
imul
daa
aas
in
fstpl
shlb
lcall
mov
sbb
inc
cmp
dec
jge
and
in
jnp
jae
mov
add
loopne
mov
jb
scas
sbb
aas
push
add
ret
pop
adc
decl
scas
lahf
jo
cmp
add
mov
cmpsb
dec
idivl
mov
lret
xchg
mov
jmp
das
jbe
jae
inc
cmp
leave
ret
sub
cli
sti
jp
enter
jno
repz
shrl
pop
out
and
sarl
lock
cli
ret
cld
fidivl
iret
cli
and
mov
imul
mov
ds
pushf
in
and
sbb
mov
filds
in
out
or
bswap
adc
int
int
int
ret
mov
mov
lcall
xor
inc
dec
in
inc
pop
lods
call
sarb
jg
mov
iret
fadds
cld
movl
inc
mov
sub
mov
in
push
dec
int3
cld
dec
lcall
pop
in
hlt
jg
cld
push
inc
hlt
xlat
int
mov
ret
xlat
std
fdivr
push
les
pushf
cmc
add
push
test
mov
sahf
mov
decl
jmp
fidivrs
outsl
aas
jg
out
repz
mov
shl
repnz
pushf
out
pop
sub
mov
ds
jmp
out
std
clc
fisttps
ja
es
mov
sti
and
mov
xchg
push
leave
sahf
lcall
mov
mov
sub
int
mov
std
hlt
jge
cmpsl
mov
fucomip
sti
push
xor
sub
push
stos
and
scas
xchg
mov
psraw
cmp
lods
rcrl
cld
lods
lcall
xchg
mov
dec
mov
mov
mov
jmp
js
stc
shl
in
mov
jge
sbb
xchg
scas
nop
xchg
inc
call
inc
rol
jbe
cmc
lahf
test
pop
les
and
fidivrs
inc
dec
scas
inc
mov
push
test
jne
mov
mov
in
data16
jmp
in
xchg
out
mov
out
inc
xchg
scas
inc
xchg
xchg
mull
xchg
mov
lahf
cmp
xchg
loop
push
loop
dec
fidivs
in
lcall
repnz
loopne
test
out
push
in
mov
mov
mov
sarb
jns
and
mov
outsl
jae
lea
ja
fldt
mov
jp
mov
repnz
pop
mov
dec
push
mov
cwtl
shl
push
xchg
sahf
mov
ficompl
pop
jge
test
out
sub
aam
or
decb
cwtl
sahf
out
shrl
icebp
cmp
scas
mov
mov
lahf
hlt
out
into
sahf
xor
mov
cmp
lods
out
out
test
push
and
and
pop
aad
adc
push
andb
call
testl
jb
mov
iret
fnstsw
movsb
decb
leave
jno
pop
cwtl
xchg
mov
jl
repnz
jmp
cmp
mov
xor
fucomip
jns
adc
stc
inc
psrlw
ficoms
lock
pop
or
cmp
cmc
enter
sti
adc
mov
pop
not
inc
into
xchg
inc
in
loopne
lret
mov
pushf
and
in
xchg
and
in
xchg
mov
pushf
mov
sbb
test
idivb
ds
xchg
xlat
xchg
jp
std
xchg
mov
jle
dec
and
fdivrp
ret
xchg
adc
cmp
rol
popf
and
push
idivl
movsl
lock
cwtl
or
out
out
out
push
nop
mov
sbb
xchg
adc
or
jl
ss
jns
sti
nop
hlt
cwtl
std
add
jns
mov
xor
aas
push
xchg
imul
dec
outsb
insl
filds
dec
xchg
mul
jno
sti
incl
fsubp
pushf
aas
jne
mov
mov
mov
addr16
adc
inc
aam
nop
or
cmp
in
call
xchg
sbb
jno
out
mov
sub
mov
loope
scas
sub
fnstcw
cmp
ret
dec
insb
mov
mov
mov
jo
sbb
cmpsb
cmpsb
mov
jmp
xor
ljmp
mulb
setg
icebp
lret
adc
int3
add
cmc
icebp
dec
adc
notl
repnz
inc
push
mov
cmp
mov
out
fbstp
jp
inc
lods
fucomip
pop
mov
add
xchg
notb
out
out
rcl
mov
fwait
sarl
roll
rcrl
aas
mov
add
mov
enter
enter
enter
enter
enter
int3
jb
push
pop
add
popa
xor
repz
in
dec
sub
repnz
rcl
add
les
les
dec
les
add
add
push
ret
mov
popf
ret
pop
add
ret
pop
ret
add
cld
ret
loop
aam
inc
add
nop
pushl
ret
outsl
ret
dec
ret
shrl
pop
push
add
rcrb
shrb
adc
add
scas
add
mov
inc
stc
stc
iret
jmp
iret
mov
iret
inc
iret
cmp
jmp
pop
add
into
out
into
into
xchg
into
inc
into
test
int
int
int
mov
mov
add
int
int3
push
int3
inc
int3
cmp
ljmp
lret
sbb
in
lret
dec
push
add
lret
stos
lret
or
lret
inc
sahf
push
add
cmp
iret
add
cli
into
ror
into
lods
into
sbb
pop
jge
cmc
cli
test
add
leave
xchg
int3
jl
jae
add
add
int3
and
pop
int3
adc
bswap
mov
lret
mov
xchg
push
lret
dec
lret
ror
lret
lret
add
add
cld
leave
call
leave
js
sub
mov
test
loop
xlat
mov
sub
add
nop
pop
and
or
aad
pop
lds
lds
lds
les
xor
push
add
ret
into
ret
mov
ret
ret
popa
ret
push
ret
inc
ret
cmp
das
ret
and
sbb
in
add
adc
or
clc
ret
fcmovb
aad
ret
ret
cmpsl
ret
mov
test
ds
add
cmp
push
ret
add
sti
shl
ret
shrl
shrl
rcll
sarl
in
add
xor
rcrl
adc
or
add
ffree
mov
scas
shlb
test
js
pushf
and
jnp
je
es
jecxz
add
add
fmulp
fmul
ret
into
cwtl
into
insl
into
dec
into
sub
into
cmc
in
add
ljmp
push
out
fdivrs
add
add
ror
lret
int3
ret
int3
movsl
int3
sahf
int3
cltd
int3
xchg
int3
sub
lret
in
lret
jecxz
aad
add
out
lret
add
out
xlat
leave
xchg
leave
mov
xchg
add
mov
enter
enter
enter
enter
add
jno
rol
sub
rol
popf
imul
and
adc
push
movb
add
lock
or
add
hlt
ret
out
pushf
ret
xchg
ret
mov
js
retw
inc
ret
xor
sub
cli
ret
add
cld
rol
pop
ret
inc
ret
xor
pop
ret
cmpps
adc
and
shll
or
shrl
and
sbb
push
shl
adc
cmp
add
rol
mov
rclb
and
mov
in
iret
pop
iret
push
iret
dec
push
clc
into
mov
sub
and
jmp
add
add
int
int
int
int
int
int
int
int3
lock
or
int3
int3
pop
int3
push
int3
inc
int3
xor
subl
push
sbb
adc
or
adc
leave
cmc
leave
jb
add
jmp
out
aad
movsb
leave
sahf
leave
je
fs
inc
add
add
add
enter
lret
mov
mov
mov
ja
add
add
adc
or
add
icebp
jmp
ffreep
iret
mov
lcall
add
add
push
arpl
pop
adc
or
sbb
faddp
pushl
cli
ret
mov
rol
clc
mov
pusha
repnz
rcrl
in
rclb
xchg
add
into
cmpsb
into
sbb
or
cld
pop
int
add
pop
lock
int
int
int
int
int
int
int
int
int
int
add
nop
aaa
push
lret
test
lret
jg
jne
ja
xchg
enter
enter
add
daa
add
add
movl
lds
lds
jo
lds
add
lds
in
fs
rol
lret
rorb
les
add
les
les
les
pop
les
dec
les
call
push
xor
sub
and
sbb
adc
pushl
repz
ret
loopne
fcmovnb
aad
iret
ret
vmulsd
ret
sbb
add
mov
test
jg
jns
outsl
ret
push
arpl
pop
ret
push
ret
xor
cs
pop
ret
std
ret
inc
sbb
inc
lret
ret
mov
ret
xor
pop
add
shr
add
and
rcl
sarl
movsb
rcll
pop
rcll
push
add
cmp
xor
and
shl
rcr
rol
rol
stc
sub
and
mov
shrb
mov
mov
inc
mov
iret
lret
iret
mov
mov
sub
iret
js
jno
dec
mov
iret
sbb
adc
pop
iret
mov
jg
adc
mov
into
mov
test
ja
mov
sub
add
stc
int
fcmovne
aam
lret
andb
int
or
or
jno
sub
or
add
loopne
int3
repnz
inc
cmpsb
int3
mov
jbe
outsl
int3
test
lret
ret
lret
stos
lret
movsl
lret
mov
decl
lret
jns
push
pop
and
push
push
mov
lret
cmp
xor
lret
leave
fidivs
stc
inc
xchg
enter
fs
dec
movl
add
aam
mov
ds
and
inc
out
movsl
lds
lds
cmp
sub
sbb
or
jg
xchg
les
mov
ret
test
ret
cmp
and
sbb
adc
inc
push
in
ret
iret
ret
cmpsb
ret
xchg
ret
jl
adc
or
incb
mov
and
shll
dec
roll
add
sti
shl
out
add
and
shr
jecxz
xlat
rcrb
jge
ja
jno
imul
rcrb
jp
int
rclb
rolb
stos
jmp
jle
push
dec
mov
ss
insl
cld
fiaddl
ud0
add
adc
pop
mov
xchg
inc
xchg
clc
outsl
inc
test
orl
enter
inc
ljmp
push
xlat
inc
jmp
popf
enter
addl
lock
int3
mov
loope
xlat
mov
jne
addr16
jg
fdivr
lahf
ljmp
xchg
sti
loop
mulb
sti
jae
iret
cld
pop
adc
lock
decl
lock
std
call
dec
clc
ffreep
ljmp
aas
jg
mov
lods
leave
daa
mov
jae
icebp
mov
fsub
cmc
fdivl
clc
xor
ja
into
or
cmp
pop
into
jmp
out
loopne
clc
and
cmp
inc
and
jae
jg
mov
lret
xchg
movsl
mov
ror
adc
jg
enter
cld
pop
pop
xchg
gs
dec
mov
notb
cmp
lret
mov
aad
orb
into
loopne
mov
mov
testb
std
sbb
fstpl
frstor
movsb
xlat
cltd
outsb
sbb
mov
nop
jmp
ret
icebp
add
mov
scas
push
dec
add
stos
sbb
mov
mov
jmp
std
and
iret
hlt
mov
mov
add
fildll
jl
mov
stos
jbe
pusha
ljmp
mov
repz
fcomp
repz
jmp
dec
push
fistpll
lock
stc
cmc
in
sbb
jb
cmp
mov
or
addb
jp
inc
fbld
pop
mov
mov
pop
insb
cmp
pop
in
pusha
mov
ja
in
clc
lds
nop
xor
xchg
std
ds
xchg
aas
subb
scas
repz
pop
xchg
mov
in
adc
fwait
addr16
ret
mov
das
test
push
adc
xlat
testl
mov
es
je
aas
popf
mov
or
lret
imul
mov
cmp
lock
jl
paddd
jns
or
ljmp
mov
mov
fdivrs
int3
and
pop
jle
inc
dec
shr
gs
icebp
mov
sahf
js
subb
ds
mov
nop
fimuls
roll
sub
xchg
mov
stos
fldcw
cmp
pop
jge
xlat
cli
rclb
leave
cld
or
xchg
jge
aad
not
xchg
dec
mov
add
test
add
sbb
mov
lds
loopne
xchg
scas
lods
cmp
gs
bound
jmp
jmp
stos
mov
adc
xchg
inc
push
mov
cmp
xlat
das
mov
fistps
pop
and
push
loopne
cld
sbb
jge
push
xor
mov
mov
xchg
sub
push
sbb
adc
adc
gs
xchg
mov
xchg
fs
jmp
push
pop
mov
addr16
ds
std
jecxz
add
lock
mov
mov
ret
dec
enter
sar
sti
pushf
enter
insl
sti
cmp
mov
hlt
lds
jge
jb
dec
xchg
movsb
cwtl
movsl
dec
fmuls
sub
sbb
jecxz
int3
jne
sti
lea
xchg
divl
arpl
outsl
xlat
xchg
jb
scas
push
mov
pushf
aas
pop
pop
mov
jl
xchg
mov
push
test
inc
lret
fidivrs
xchg
xlat
fidivs
incb
jge
add
fsubr
mov
pop
test
call
into
into
pop
mov
pop
pop
or
cmp
lock
lods
mov
pop
jle
cmpsb
cmc
xor
ljmp
xchg
out
cltd
dec
leave
stos
lcall
aas
sahf
sbb
add
jg
lcall
mov
cmpsl
mov
stos
xchg
arpl
in
scas
jmp
push
clc
pop
stos
or
add
pusha
jmp
lret
fsubrs
mov
jg
ja
repz
jnp
ss
scas
stos
fildll
mov
mov
mov
out
mov
mov
in
fisubrl
mov
decl
sahf
outsb
orl
mov
xchg
xor
aaa
cli
sub
outsl
lret
ret
pop
cli
stc
int
stos
icebp
push
in
inc
cld
stos
inc
stos
shll
and
inc
jne
repz
dec
cmp
xchg
stc
dec
out
popf
pop
lahf
dec
cmpsb
dec
notb
in
push
in
fisttpll
aas
or
inc
daa
movsl
test
test
cmp
orl
inc
push
add
or
scas
dec
add
or
repnz
dec
jle
stc
ljmp
sti
out
add
fsub
out
popf
push
je
push
pushf
xor
push
jnp
stc
push
add
dec
add
mov
gs
jle
dec
xchg
xchg
xchg
xchg
rcll
fs
lahf
fsubl
lcall
sbb
movsb
xlat
xchg
testl
mov
and
and
adc
adc
mov
lods
hlt
cli
mov
cmp
pop
cmp
xchg
push
shrb
daa
sti
fwait
lods
in
and
scas
cmp
aaa
jns
out
clc
mov
mov
xor
xor
ja
xor
jno
imul
sub
inc
jp
xchg
inc
imulb
test
mov
inc
hlt
aas
enter
push
pop
push
mov
xlat
sub
pushf
mov
and
add
sub
sbb
sbb
jg
adc
cmpsl
addr16
scas
dec
fadds
ficomps
dec
dec
pop
fsubrl
jb
push
out
or
fnstenv
fidivrl
dec
cli
pop
into
jne
out
cmp
clc
cli
jge
imul
xchg
sti
pop
aas
cmp
es
jb
scas
sti
scas
sub
mov
negl
jmp
in
cmp
pop
into
cmc
sahf
pop
sub
or
mov
in
dec
scas
in
test
idiv
das
cmpsb
xor
dec
xchg
scas
xchg
out
mov
movsb
jno
repnz
xchg
incl
sarb
jge
outsb
mov
stc
daa
daa
push
xchg
push
scas
sbb
imul
jl
ljmp
std
mov
inc
das
stos
in
cmp
jbe
stos
sub
sahf
loopnew
add
push
lret
ljmp
jmp
lods
push
stos
ja
push
adc
mov
mov
cld
cmp
mov
lret
in
stos
iret
push
jmp
aas
lahf
hlt
cmpsl
add
mov
out
imul
test
jbe
and
pop
pushf
pushf
cmp
fcomi
div
dec
and
ljmp
cli
out
or
repnz
cmpsb
mov
stos
or
sti
repz
int
xchg
shl
int
int
jae
out
je
jne
dec
mov
jecxz
pop
adc
adc
icebp
out
out
mov
pushf
loopne
xchg
jg
xchg
std
stc
in
mov
out
jo
inc
mov
mov
dec
pop
inc
xchg
repz
in
outsl
sbb
int3
rorl
sti
fsub
dec
pop
in
in
ja
fcomps
pop
fbld
inc
lahf
mov
mov
cld
lods
push
push
aam
jns
mov
pushf
xchg
lahf
jnp
data16
scas
mov
xlat
add
jg
decl
xchg
cmc
mov
pop
loop
mov
neg
jg
mov
fisubrs
movsl
decl
xchg
mov
inc
dec
jmp
movsl
shl
rolb
push
and
adc
jecxz
stc
dec
sub
cmpl
push
icebp
je
push
and
inc
push
stos
mov
xchg
aad
mov
and
call
fwait
mov
repnz
ljmp
xchg
loop
lcall
stos
pushl
mov
jae
cmpsl
mov
push
std
mov
stos
outsb
mov
cld
fdivs
xor
pop
mov
in
mov
loop
call
int3
sub
jl
clc
jmp
cld
inc
dec
adc
fwait
daa
sarb
inc
cld
rol
shll
lret
ds
test
sub
adc
int
cld
ss
shld
inc
add
test
xchg
gs
xchg
dec
ret
inc
aaa
scas
dec
xchg
gs
pop
movsb
adc
repz
mov
fistl
cld
push
stos
pop
inc
lret
xor
jbe
in
in
adc
repnz
lret
shrb
pop
jb,pt
or
leave
cmp
and
ljmp
mov
shrb
mov
pop
pop
std
daa
jmp
aas
in
xchg
fdivl
popf
aas
jecxz
in
mov
mov
push
cmpsl
jne
insl
mov
out
sahf
push
out
or
icebp
cmp
adc
into
dec
cwtl
inc
rorl
dec
scas
cmp
out
and
insb
jge
mov
adc
cltd
xchg
cwtl
mov
mov
jle
xchg
lahf
pop
daa
jmp
nop
mov
xchg
movsl
dec
mov
push
lds
imul
lcall
ljmp
testl
xchg
mov
cmp
cltd
xchg
dec
dec
subb
in
jg
sub
decl
enter
mov
test
cmp
std
scas
dec
cli
ucomiss
push
test
jp
cli
lret
lods
divb
mov
sub
sub
mov
adc
push
js
cld
leave
decb
or
std
ficoml
pop
mov
push
pop
xor
xchg
push
cwtl
mov
sbb
repnz
cmp
faddl
cld
inc
xchg
or
sbb
mov
fs
lcall
adc
lock
lcall
dec
enter
xchg
cwtl
mov
push
adc
orb
mov
popf
insb
loopne
stos
xlat
ljmp
ficomps
hlt
mov
mov
into
es
iret
cli
adc
jg
and
int3
dec
out
dec
xchg
xchg
push
loopne
add
mov
cmp
repnz
mov
in
xlat
push
subb
mov
call
enter
sar
fwait
lock
clc
adc
fs
xchg
fdivs
in
jo
xchg
push
dec
scas
fmuls
mov
and
fcomps
pushf
decl
mov
loopne
push
adc
mov
loopne
jbe
jb
cmpsl
pushf
mov
daa
and
call
xchg
test
jb
xchg
lcall
dec
xchg
mov
mov
xor
int
in
movsb
and
cmpsl
int
push
push
push
or
fmul
mov
int3
lret
mov
and
in
add
lret
xchg
lret
push
leave
cmpsb
leave
fwait
leave
xchg
stos
in
add
ja
jb
dec
leave
js
jmp
add
enter
enter
xchg
movsb
sub
dec
xor
mov
add
add
cmp
xor
sub
and
push
lds
mov
ret
adc
dec
jmp
movsb
test
leave
cmp
ds
ret
std
shl
jge
or
xchg
shll
rcrl
inc
lcall
insl
scas
stos
xlat
gs
pop
addr16
out
decb
test
lcall
addr16
jne
roll
stos
xor
mov
pop
cmc
enter
shll
mov
push
inc
insl
aad
hlt
push
sbb
lods
cmp
and
mov
push
jae
cmp
mov
stos
sti
dec
out
js
dec
decb
jge
movsb
pop
jg
jmp
mov
cmp
cmpsl
idivb
inc
repz
jl
std
das
outsl
pop
sub
std
out
pop
dec
repnz
iret
lcall
adc
decl
jnp
dec
cmp
lea
push
or
push
cmp
push
test
sbb
cs
rcrb
scas
push
mov
jmp
ja
cmpsl
push
lock
pop
mov
stc
cltd
loop
pop
mov
mov
lret
out
fstl
rcrl
scas
filds
out
jl
es
cld
iret
sub
fdivrs
push
cmp
pop
cmp
cld
or
jecxz
std
iret
repnz
int
call
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
