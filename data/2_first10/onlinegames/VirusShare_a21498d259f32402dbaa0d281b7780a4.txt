insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
in
pusha
outsl
cmp
xor
or
cmp
xor
cld
xchg
shlb
daa
push
mov
sub
jg
mov
faddl
out
std
rclb
xor
insl
outsl
incl
lea
push
mov
push
or
lds
lret
in
gs
popa
enter
push
lret
insl
mov
add
outsl
int3
int
pop
into
push
xor
shlb
cmp
xor
push
aad
xlat
pop
fdivs
data16
aaa
fisttpl
push
pop
loope
xlat
insb
mov
inc
in
and
add
int
jmp
jmp
xor
shll
in
aaa
lock
repnz
idiv
imull
fwait
insl
stc
dec
pop
cli
sti
js
je
mov
mov
sub
mov
pop
adc
fnstsw
adc
and
mulb
jg
cmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
lea
cwtl
decb
movl
testb
dec
jne
adc
adc
jne
push
or
mov
sbb
iret
das
aas
repnz
inc
adc
cmp
jne
mov
jnp
fbstp
mov
pop
pop
pop
leave
ret
mov
in
sbb
xchg
leave
mulb
adc
push
push
imul
stc
ret
hlt
push
push
jbe
or
push
clc
add
mov
push
sbb
js
push
lock
notb
push
pop
insb
pop
push
cltd
movzwl
push
push
stos
mov
addr16
xor
cmp
je
push
adc
or
sub
iret
and
cmp
adc
push
push
sub
sbb
outsb
push
je
loope
mov
lea
or
movsl
sbb
jecxz
jns
insl
jns
in
sbb
pop
ret
cltd
rorl
mov
mov
clc
inc
xchg
xor
int
mov
mov
push
scas
inc
adc
mov
in
pop
or
push
adcl
mov
fcmovne
fldenv
cmp
in
lods
jnp
adc
clc
push
dec
inc
mov
push
push
sbb
dec
ja
loope
push
jno
dec
inc
pop
jae
lahf
cmp
jge
add
lods
mov
and
jo
sub
dec
push
divb
or
call
or
loop
cld
xor
imull
sbb
in
adc
and
push
add
leave
jnp
mov
cmp
adc
int3
out
cmp
aas
jnp
pop
inc
cs
ja
jmp
sbb
icebp
push
mov
push
and
jno
fimuls
sbb
pop
adc
test
call
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
push
jecxz
mov
xchg
inc
cmpb
pop
fadds
test
add
aad
pop
clc
inc
and
loope
jno
jnp
mov
movsb
sub
cltd
jae
push
daa
push
mov
in
int3
sbb
sub
outsl
push
mov
adc
xor
adc
out
inc
js
lock
push
mov
in
inc
mov
and
jno
insb
push
pop
or
daa
fsubrl
adc
call
or
pop
negl
pop
rolb
add
std
add
in
leave
sbb
je
or
je
div
fucomp
repz
lea
andb
faddl
mov
loope
rep
stos
jle
sbb
adc
loopne
int
add
add
xor
test
dec
xchg
or
ficomps
jg
or
mov
pop
call
popf
xchg
cmp
push
xor
lret
push
pushf
lock
mov
jp
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
pop
testl
dec
xchg
leave
sbb
pop
repz
mov
icebp
stos
push
cmpsl
stc
add
std
enter
cld
dec
fistl
pop
adc
cld
fwait
mov
push
pop
sar
fxch
scas
mov
inc
rclb
pop
jo
addr16
fldenv
pop
int
mov
iret
push
rcrb
xchg
movsl
insb
rcl
or
lcall
cwtl
stc
pop
lcall
jb
cmp
mov
adc
mov
mov
mov
jns
add
jne
cmp
rorb
push
loop
cli
int
out
jl
add
pushl
js
mov
sahf
sbb
mov
fimull
lods
flds
fs
outsl
outsb
pop
cs
or
clc
je
jae
pop
sti
insb
mov
adc
xor
out
pop
in
jg
or
clc
scas
addr16
lods
clc
mov
ds
icebp
xlat
xor
push
int
or
rcr
data16
data16
call
xchg
das
push
ficoms
sti
mov
adc
dec
or
cmp
sub
push
call
insb
mulb
push
sar
stc
fcompp
iret
int3
push
push
jbe
fsubrs
stos
jl
call
call
daa
cmp
lcall
push
js
inc
lcall
js
imul
out
and
lock
xchg
cmp
and
sbb
inc
nop
cmc
xlat
vdivsd
and
in
xchg
retw
insb
xchg
and
cmc
fs
sbb
js
pop
mov
or
je
adc
cmp
enter
aad
sti
push
bswap
lods
mov
jnp
jmp
and
xchg
add
inc
pushf
pop
push
cmp
fdivp
sub
jmp
pop
loop
pop
jae
sub
mov
or
loope
push
inc
adc
jmp
cs
dec
movsb
inc
cmpsl
in
adc
and
and
jb
loop
mov
adc
or
dec
inc
dec
dec
and
mov
push
dec
inc
dec
jb
push
dec
cs
adc
or
outsl
add
push
hlt
sbb
cld
or
addb
decl
add
add
nop
add
xor
mov
cwtl
add
mov
add
add
pop
mov
int
mov
test
js
outsl
addr16
insl
and
outsb
outsb
outsl
je
cmp
jmp
and
outsb
and
inc
dec
push
and
fs
jg
ss
push
pushf
shrl
xchg
add
pusha
xchg
xchg
sarb
int
pop
stos
jae
xchg
aam
jae
xchg
shll
repnz
daa
repz
jge
xchg
pop
cmp
xchg
in
and
std
cmp
imul
mov
push
inc
add
in
pusha
stc
cld
dec
adc
cmp
and
add
or
add
pop
stos
xchg
fwait
lock
add
add
or
add
jae
sub
cwtl
ja
fildl
mov
mov
dec
aam
cmp
cmp
xor
mov
adc
pop
test
nop
and
mov
cs
je
push
dec
push
movsb
push
loopne
inc
push
push
push
fsubs
mov
cmp
insb
outsl
arpl
ret
or
inc
pop
dec
shrl
xchg
add
ss
xchg
rcr
fstps
ds
add
cmpsb
imul
cmpsb
imul
push
add
dec
pop
insb
test
movsb
mov
int3
fidivl
cmpsb
imul
sub
xor
sarl
dec
pusha
jo
dec
shll
aam
lcall
add
xchg
and
xor
mov
add
xchg
loop
mov
xor
shll
xlat
xor
dec
cmp
or
out
nop
lcall
add
cmpsb
imul
xchg
shl
out
cmpsb
jmp
sbb
push
push
fwait
cmpsb
imul
shll
addr16
pusha
add
xor
add
dec
dec
outsb
je
mov
jle
je
mov
mov
push
gs
fs
sub
dec
je
jo
dec
fidivs
outsw
inc
aaa
dec
jo
outsb
push
jb
push
out
adc
push
dec
dec
add
in
mov
call
push
xchg
in
test
int
rolb
or
popf
mov
add
shlb
pusha
add
push
flds
add
push
or
inc
add
or
or
and
fistps
sub
or
and
test
das
pop
pop
and
cmp
shlb
ja
aas
xor
or
add
mov
or
sarl
incl
and
add
cltd
sub
test
add
xchg
adc
xchg
inc
xchg
ret
pop
test
mov
fistpl
test
lea
dec
ret
add
push
jg
cmc
das
lcall
fs
addr16
sarb
xor
das
daa
loope
jg
add
pop
pop
cs
add
leave
and
gs
popa
insl
das
mov
mov
or
push
push
inc
push
inc
dec
adc
outsl
data16
cmc
mov
outsl
ja
and
inc
jne
fdivrl
fbstp
imul
jb
inc
popa
xchg
outsl
push
fbstp
push
aas
aas
inc
push
dec
dec
inc
xor
cmp
and
inc
lret
xor
dec
inc
and
inc
enter
sub
jbe
mov
push
je
insb
nop
je
or
fisttpll
lock
outsl
and
outsl
jne
jae
adc
addb
jae
dec
push
push
sbb
inc
xchg
dec
push
push
pop
test
and
dec
ret
test
mov
shrl
cwtl
cmpsl
pop
in
outsb
mov
xor
outsl
je
sarl
push
jns
xchg
shll
fcmovbe
lahf
jne
xor
gs
mov
pop
gs
add
loope
inc
push
mov
inc
mov
adc
xor
dec
cmp
or
lcall
addr16
fs
arpl
in
addr16
clc
int
mov
xbegin
mov
and
mov
and
in
into
mov
stos
mov
adc
cmpsl
ljmp
stos
pop
sub
call
in
fs
lahf
lcall
sbb
jle
sub
sub
fildl
movsb
repnz
jne
xor
dec
cs
add
jmp
repnz
lret
cmpb
fmull
call
add
or
cmp
push
xor
mov
mov
cmp
je
add
inc
cmp
cmp
pop
jae
mov
fisttps
jmp
xor
ret
and
in
mov
push
add
add
ja
cmp
push
mov
cmpb
push
pop
sub
adc
xchg
sbb
push
sbb
push
sbbb
call
jg
jne
xor
jmp
mov
push
shl
push
push
mov
fidivs
call
and
mov
fsubr
inc
mov
call
mov
notl
sbbl
out
add
dec
xchg
sti
mov
call
ret
add
ljmp
add
xchg
add
pop
dec
sbb
xorl
out
lods
inc
in
testb
bound
mov
push
push
cmp
loopne
mov
out
add
or
out
jle
dec
add
inc
in
jne
call
incl
pop
add
mov
adc
cmp
jge
divl
xor
mov
in
fimuls
je
cmp
dec
sahf
in
sahf
sbb
and
and
test
and
or
pushf
jge
testl
mov
push
jmp
adc
iret
jb
mov
add
sbb
sub
imul
pop
jmp
adc
mov
xchg
fwait
xor
push
mov
or
or
ret
cmc
adc
test
or
mov
pop
sub
mov
scas
fs
mov
lods
ret
loopne
xor
add
xor
fcmovnbe
mov
aas
mov
jne
andl
jmp
adc
push
mov
movsb
cmp
and
decl
lcall
or
leave
adc
and
add
jns
addr16
push
repnz
mov
rep
or
cmp
pop
push
push
mov
mov
inc
fs
sub
std
or
call
push
push
fdivp
xor
mov
lea
xor
rclb
push
in
mov
in
or
ljmp
adc
lea
movb
mov
sub
sub
push
add
push
jmp
add
inc
add
sti
push
push
jl
inc
inc
call
fisubrl
pop
orl
in
out
add
adc
mov
push
fsts
mov
leave
fldt
aaa
cwtl
out
inc
mov
fadd
lcall
rcrl
or
and
ficoml
cld
dec
pop
in
sbb
sar
jbe
push
movzbl
shll
jle
mov
add
mov
andb
mov
inc
or
aas
fiaddl
cmpl
pop
fstpl
mov
mov
push
dec
enter
in
add
leave
lahf
adc
xor
adc
xor
in
repnz
adc
adc
adc
adc
adc
jmp
int3
adc
outsl
adc
xchg
sbb
punpckhbw
add
pop
add
and
pop
lea
add
aas
notl
sbb
pop
adcb
and
pop
add
fdivl
jl
mov
loopne
mov
loopne
xchg
push
and
mov
loopne
fbld
cmpw
jne
dec
cmp
lret
add
xchg
inc
push
jnp
stc
and
xor
add
sbb
add
call
push
adc
stos
add
sub
xor
adc
in
enter
cmp
or
rol
push
mov
or
xchg
repz
xchg
mov
adc
jg
add
jge
push
push
dec
mov
loope
mov
push
push
and
push
clc
shrb
mov
sub
lahf
shrl
dec
xor
sbb
jbe
pop
aad
adc
sbb
sub
pop
inc
push
outsl
out
sahf
lea
lock
add
mov
fcomps
and
loopne
adc
jge
adc
mov
cld
xor
data16
adc
dec
sbb
inc
cmp
or
insb
in
mov
mov
dec
pop
mov
mov
mov
shll
push
or
shr
xchg
jle
jle
push
mov
add
mulb
xor
inc
cmp
shrb
jl
pop
mov
or
call
inc
xchg
jno
nop
pslld
adc
add
cmp
lahf
xchg
pop
leave
add
push
xor
adc
and
push
jno
repnz
pusha
xor
adc
adc
add
loopne
nop
adc
jno
add
add
adc
xchg
pop
popa
add
jo
add
es
pop
bnd
inc
rolb
xor
aas
andl
xor
je
sbb
mov
xor
push
mov
pop
cmp
jne
sbb
mov
movsb
inc
out
adcb
js
mov
xchg
xorl
sbb
sub
cmp
push
push
movsl
sbb
adc
daa
or
adc
pop
cmp
push
pop
negb
sbb
test
lcall
lcall
clc
jle
xor
cmp
jle
int
dec
sbb
in
ja
fisubrl
dec
adc
adc
je
test
jno
insb
inc
cmp
mov
inc
hlt
mov
sti
mov
and
jne
cmpl
daa
jmp
jl
insl
in
cld
jne
xor
cld
cmp
movsl
fldcw
add
clc
jmp
andl
jmp
in
push
pop
sbb
addr16
inc
cmp
mov
adc
and
mov
mov
lods
xor
sbb
push
and
inc
mov
test
jne
cmp
call
xor
je
fdivrp
pushl
mov
or
inc
cmp
jne
or
sub
mov
movsl
jbe
xchg
adc
dec
leave
or
std
xor
jne
or
jmp
lds
leave
insl
in
pushl
or
test
je
mov
shr
xor
test
jecxz
and
fstpt
icebp
or
test
je
cs
cld
xchg
rorl
and
jne
shl
or
mov
and
xchg
adc
cmp
add
jp
loope
mov
call
je
cmp
dec
stc
add
adc
push
fimull
push
jae
aas
or
jmp
sti
imull
test
bound
jg
fildll
add
test
or
pop
imul
jbe
les
je
cmpsl
cltd
test
add
je
add
into
in
sub
mov
adc
pop
pop
nop
sub
aam
icebp
add
filds
cmpb
inc
or
jo
pop
or
jl
push
cwtl
sbb
adc
adc
scas
xchg
cmp
pop
fisubl
loope
jbe
shlb
add
inc
sub
mov
je
mov
push
push
outsb
or
pop
and
push
mov
in
int
pop
aaa
push
jmp
adc
add
xor
out
fldt
push
inc
call
xchg
sti
scas
jbe
cltd
pop
inc
idiv
adc
jg
aam
hlt
outsl
sbb
jmp
andb
adc
imul
rorl
in
add
add
nop
xor
adc
sbb
and
xchg
jmp
mov
add
push
call
pushf
pop
repnz
add
mov
jl
jl
in
popf
pop
lock
adc
sbb
jl
inc
mov
add
pop
stos
je
mov
lret
fs
ja
xor
mov
pop
insl
cld
jbe
cmpb
xchg
push
jl
cmp
jb
cli
pshufw
loop
imul
cmp
and
andl
sbb
adc
ljmp
insl
mov
adc
add
add
dec
adc
inc
rcll
or
and
push
mov
sarl
arpl
aas
cmp
jae
incl
lret
lock
jo
enter
or
push
mov
jg
adc
mov
dec
push
push
jne
adc
jecxz
out
mov
dec
jo
mov
add
loop
mov
jns
adc
or
sarb
jne
xor
inc
fsts
inc
pop
decl
jne
mov
xchg
inc
fidivl
or
pop
jbe
or
cmp
mov
not
and
push
jl
and
or
add
lea
js
xlat
sbb
shr
ja
aaa
push
or
jo
add
repnz
mov
and
testl
mov
or
ficomps
test
push
js
add
push
aam
fucomi
fldt
or
fisubs
fimull
add
imul
decb
and
out
xadd
adc
pop
inc
sub
lret
lock
and
not
cmp
add
jg
mov
xor
into
mov
shr
or
dec
daa
pop
jg
push
imul
sbb
mov
push
lods
loop
lods
inc
idiv
mov
push
push
cmpsb
jle
not
and
sub
adcb
gs
sub
xchg
rcr
mov
roll
xchg
sbbb
or
cmp
adc
sbb
inc
xor
sbb
add
pop
fcomp
push
or
xor
add
mov
sbb
add
out
jns
sub
xor
add
sbb
int
jbe
les
repz
fcomp
cwtl
subb
xchg
xchg
mov
addl
repz
not
fdivp
or
xor
pusha
adc
pop
scas
testl
sti
mov
pop
les
data16
jl
sub
add
pop
push
loop
jge
xchg
sub
in
sbb
add
int
fdivrs
pop
mov
rcrl
les
adc
enter
or
xor
repz
push
or
or
xchg
jno
std
mulb
mov
add
and
mov
fidivrs
pop
jle
mov
mov
cmpsb
pop
mov
mov
mov
mov
mov
xchg
or
rol
popa
jbe
adc
add
or
jmp
mov
ljmp
and
aad
aam
lods
jge
mov
bound
sbb
add
and
jg
mov
dec
cmp
inc
rclb
or
mov
push
fadds
hlt
push
and
stc
fisubrs
repz
pop
pop
es
adc
repnz
shll
and
fwait
mov
and
call
fisubrs
insl
mov
adc
jnp
lcall
xlat
lods
mov
or
mov
pusha
adc
inc
add
test
and
cmp
insl
in
pop
and
int3
cmp
jge
cli
fldenv
clc
in
mov
shl
jg
or
pop
cmp
add
mov
repz
shl
int
and
sbb
loopne
ret
and
enter
or
movsl
imul
mov
push
fbstp
xchg
mov
cltd
xlat
sbb
mov
sub
cmp
gs
fwait
aaa
or
call
inc
loop
insl
adc
or
xlat
fdivs
faddl
sbb
xorb
cld
xor
enter
in
in
stos
daa
sub
aad
flds
outsl
adc
cmp
xchg
dec
fists
les
mov
adc
js
jge
or
xor
test
mov
sbb
test
xor
mov
call
divb
adc
xor
cs
js
lds
popa
popf
insl
adc
inc
sti
xor
mov
jns
jno
repnz
or
in
mov
sub
divl
mov
inc
inc
ljmp
xchg
sbb
xchg
mov
push
adc
cltd
jb
xchg
mov
outsb
repz
pusha
mov
ffreep
dec
mov
cli
xor
rcrb
mov
xchg
mov
jae
or
mov
repnz
xor
jle
sub
jae
mov
int
in
testl
imul
js
pusha
jp
mov
mov
fidivl
lods
xor
test
out
aam
xchg
jae
test
out
sub
xor
add
add
xchg
lods
mov
or
push
aas
sbb
cmp
into
sub
fstps
push
in
loop
les
in
mov
inc
out
idiv
ss
in
clc
jl
pop
insb
cmp
pushl
in
jnp
xlat
or
aam
gs
lods
les
mov
jne
cli
mov
mov
js
xorl
and
stos
rcrb
rcl
push
inc
in
repz
addb
push
xchg
ljmp
inc
sub
lret
push
or
pop
sahf
outsl
dec
mov
stos
adc
fwait
xchg
lock
hlt
cmp
xchg
cld
cltd
or
mov
scas
xlat
mov
ret
pop
jo
lret
pop
gs
sbb
rcrl
or
lock
int3
or
push
or
sbb
repz
dec
jge,pt
out
call
unpckhps
fwait
xchg
sbb
pop
test
or
jg
jns
pop
push
call
outsl
jecxz
jp
sbb
das
dec
sbb
int
jb
pop
jb
fistpl
loopne
sub
jecxz
jp
pusha
call
fsubs
enter
add
mov
scas
aaa
pop
mov
lds
jp
sbb
ja
mov
xor
pop
imul
out
loopne
mov
aaa
test
xor
aam
rcl
sub
fldenv
pslld
ret
repz
rol
test
mov
mov
push
dec
mov
pop
fcmovnbe
pop
mov
out
xlat
pop
add
pop
movsb
mov
scas
push
push
mov
xor
pop
mov
js
cmp
mov
cld
sbbb
sarl
pop
sub
push
push
push
push
and
xchg
or
xor
and
and
adc
or
outsb
lea
movsl
pop
mov
sbbb
push
clc
mov
nop
iret
pop
pop
mov
mov
into
ljmp
mov
pop
sbb
cmp
mov
fisttpl
test
or
hlt
cli
test
sub
inc
faddl
push
push
jle
jl
std
add
cld
faddl
cvtpi2ps
pop
in
std
sbb
xor
mov
stos
popf
pop
push
xchg
push
fsubr
pop
lods
ficompl
mov
add
adc
or
aaa
adc
out
int3
xor
jnp
push
cmp
sub
push
push
cmp
test
pop
fwait
lea
push
inc
jno
mov
bound
and
call
or
jo
js
sub
or
pop
jge
push
push
out
ljmp
sub
pop
lock
and
fcomps
xchg
fisttpll
stos
mov
jnp
popf
xor
lock
mov
inc
adcb
out
in
ret
push
and
test
adc
incl
xor
outsl
inc
cmp
jl
jns
xchg
testl
inc
cmp
test
jne
push
adc
mov
push
sub
idivb
xchg
movsb
frstor
dec
enter
add
lock
pop
xor
or
mov
movsl
movsb
pop
xchg
les
hlt
push
push
mov
mov
add
cld
cltd
cld
add
adc
add
jno
out
fmuls
je
mov
jo
push
push
push
lods
mov
sbb
inc
stc
test
repnz
div
ret
insl
das
enter
loopne
leave
mov
and
clc
sbb
out
outsb
test
andb
jmp
jbe
push
jnp
push
lret
in
jb
add
jo
push
mov
adc
imul
pop
cs
fs
add
inc
frstor
cs
fidivs
dec
cmp
pop
xchg
popa
jo
jb
sub
ljmp
cmpsb
les
out
lret
insl
icebp
jne
add
or
dec
cwtl
xchg
xchg
xchg
add
int
xchg
jmp
cmp
jne
jge
push
mov
pusha
pop
dec
push
orl
dec
inc
xchg
and
loope,pt
push
mov
xchg
inc
jnp
adc
ret
sbb
jmp
ja
sarl
add
push
and
aas
sub
xor
and
roll
inc
in
gs
in
mov
movb
mov
or
fsubl
add
add
lds
pop
jle
push
mov
jmp
cmp
popf
cmp
out
out
cmp
flds
adc
lock
sbb
cld
cld
pop
sub
jno
xchg
dec
decl
push
ja
push
xlat
lea
or
sbb
test
jbe
jmp
leave
sbb
and
and
add
jns
mov
mov
mov
jge
ss
adc
adc
push
push
aad
cmp
cmp
jle
mov
push
add
or
pop
cmp
jmp
fs
pop
adc
push
cmp
push
xor
fdivl
mov
xchg
loop
ret
pusha
pop
lret
or
aaa
ljmp
lahf
mov
and
push
jo
cmp
push
dec
ja
pop
pop
sub
jae
push
insb
add
jb
or
xchg
std
in
xchg
std
cmp
out
xchg
sti
aas
dec
xchg
sti
ja
mov
xchg
sub
subl
jp
cmp
mov
fs
lods
sti
sub
test
ss
jae
pop
push
daa
add
adc
adc
test
or
inc
sbb
pop
pop
sbb
sub
mov
jbe
xchg
je
std
dec
cld
sub
xchg
lret
insl
mov
rcrb
and
xchg
jae
es
sahf
adc
xor
mov
xor
mov
cmpsb
cmpsl
jo
test
shrl
scas
scas
cmpsb
fnstenv
dec
mov
mov
adc
lcall
mov
fs
bound
mov
adc
les
mov
pop
imul
int3
cmpsb
jmp
inc
iret
jae
rcrl
rcll
aam
aad
xlat
pop
fwait
cmpsb
jmp
imul
mov
subl
xor
and
push
shll
fs
mov
dec
es
lret
jb
and
out
ret
jae
stc
call
lds
add
in
testb
or
jge
gs
push
lock
push
or
ds
cmp
mov
loope
push
pusha
inc
xchg
ret
sub
pop
outsb
dec
cld
dec
pop
xor
push
push
rolb
fsubrs
inc
nop
sbb
push
inc
mov
or
adc
je
mov
mov
dec
pop
into
leave
lret
xorl
pop
fildl
int3
dec
rorl
mov
sti
xchg
jp
pop
ret
call
push
mov
fsubs
cmp
imul
fwait
pop
add
je
mov
jmp
cmp
xchg
xchg
mov
add
push
mov
dec
mov
mov
sub
adc
repz
aam
imul
dec
or
pushl
and
add
adc
inc
jg
add
dec
jmp
bound
inc
mov
popa
mulb
ss
add
jle
mov
lds
test
outsb
ds
fstpt
sahf
movl
push
iret
add
add
pop
xor
fmuls
je
rorb
xchg
insl
mov
insb
adc
js
add
xorb
shrb
add
dec
pop
mov
push
out
sbb
inc
push
mov
loope
sti
scas
push
andl
inc
dec
std
push
add
push
pop
xorl
scas
mov
sbb
das
pop
mov
fmuls
sub
mov
repnz
mov
push
add
out
int
test
clc
std
mov
loopne
pop
je
sub
mov
insb
stc
sub
leave
fs
popf
mov
lret
fimuls
call
mov
nop
dec
pop
cmp
inc
inc
into
ljmp
call
popf
lock
push
pop
dec
sub
ds
push
movsb
cmp
dec
and
jo
hlt
inc
mov
nop
push
sbb
scas
je
loope
adc
fadds
sbb
aaa
out
mov
js
push
scas
jno
push
mov
xor
sti
xlat
ficomps
in
push
push
mov
and
call
imul
gs
ljmp
ret
sub
std
push
inc
loope
loopne
dec
jne
roll
push
add
pop
mov
push
rep
or
mov
mov
sbb
in
mov
add
cld
scas
je
lea
or
mov
add
imul
add
fistl
mov
dec
jnp
add
sbb
and
lcall
les
clc
aam
sub
pop
fldt
stos
and
test
lods
shlb
dec
adc
add
push
data16
inc
cwtl
in
sub
pop
pop
xchg
mov
ds
pop
in
jne
sbb
push
jo
lock
addr16
push
hlt
sahf
jnp
lret
mov
jmp
pop
pop
les
fcomi
sbb
push
push
and
mov
cld
sub
add
mov
jl
popl
out
jnp
mov
and
mov
push
insb
mov
dec
sbb
sbb
cmc
daa
mov
scas
ds
jl
pop
jnp
lret
pop
and
or
and
les
adc
sbb
mov
sbb
in
imul
or
insl
rcrl
outsb
cli
fs
insb
cld
insb
dec
xor
and
insl
jae
je
stos
jmp
and
add
mov
dec
add
jb
lock
icebp
inc
in
ror
rorb
inc
or
insl
sub
leave
mov
inc
je
dec
dec
rcrl
inc
insb
cwtl
gs
popa
mov
shlb
pop
mov
xor
add
mov
or
lret
mov
push
add
cmp
add
mov
sub
pop
aaa
xor
movsb
movsl
dec
mov
jecxz
sbb
sahf
jne
cmp
fcmovu
sbb
cwtl
lea
push
addr16
adc
popf
fsubrl
xor
mov
sub
sub
xchg
mov
movsb
mov
add
icebp
pop
add
jne
mov
push
push
dec
insb
jmp
inc
cli
xchg
imul
xor
push
sti
cld
imul
mov
adc
push
sahf
add
lahf
fdivrl
adc
ljmp
mov
call
dec
sub
push
lahf
sbb
adc
data16
mov
push
sbb
inc
mov
pop
xchg
dec
aad
lcall
gs
sub
outsl
nop
lock
insb
mov
jl
pop
push
push
push
fdivrs
fidivs
pop
xorl
mov
fsubrl
repz
push
testb
adc
inc
loope
cmp
add
and
or
mov
cmovo
into
add
dec
cld
jmp
test
adc
icebp
or
and
jo
and
test
xchg
push
jle
pop
mull
adc
push
cld
and
jno
std
insl
psllw
cmp
fisttpl
vpavgb
push
lret
mov
mov
add
stos
or
add
shrb
lret
mov
aam
fsub
call
or
and
jge
rcr
stos
push
lret
dec
jmp
mov
les
cmp
sub
loopne
out
mov
inc
sub
fisubrl
adc
adc
sub
nop
lret
jbe
aaa
add
pop
dec
mov
lods
rorl
stos
xor
sub
shl
shll
and
push
mov
mov
and
jl
inc
mov
jnp
mov
cltd
mov
pop
in
idiv
jle
mov
cmp
pop
mov
ret
and
loope
xor
mov
adc
inc
pop
xlat
incl
mov
xor
or
push
ss
xchg
xchg
mov
add
ss
cli
jecxz
jo
xorl
int
dec
sub
push
xor
mov
dec
shll
dec
inc
mov
aam
push
cs
jmp
movsb
addr16
insl
adc
jo
jne
out
jae
pop
dec
shll
icebp
bnd
or
and
xor
gs
jb
mov
or
cmpsb
pop
cmpsl
btc
test
lods
gs
add
mov
or
gs
mov
lret
outsb
push
gs
gs
in
es
roll
aam
mov
mov
ret
mov
es
pushf
js
xchg
xchg
xchg
mov
xchg
xchg
xchg
inc
push
cwtl
js
xchg
flds
je
push
jbe
inc
push
fists
gs
nop
cmpsb
imul
shll
push
mov
mov
mov
scas
imul
mov
mov
imul
inc
mov
shlb
shlb
fs
sti
adc
movsb
sbb
fdivs
jp
test
sbb
clc
add
mov
std
cld
mull
and
cli
test
andb
push
xlat
mov
leave
push
dec
add
cmp
sub
cwtl
jne
iret
lahf
ds
loopne
xor
dec
cmp
pop
inc
mov
add
add
pop
and
inc
adc
add
icebp
push
fildl
adc
ljmp
ja
je
add
je
sti
jbe
cmpsb
loopne
ss
or
add
stos
mov
outsl
test
jne
cmp
subl
pop
je
add
enter
mov
mov
pop
xor
mov
call
xchg
rcll
jle
hlt
push
sbb
push
test
in
add
push
jb
jbe
adc
or
push
and
cmpsb
bound
xor
ficoml
in
rclb
mov
not
pop
or
mov
aam
mov
push
into
inc
cmp
inc
fisttps
incl
pop
or
out
sub
add
xchg
gs
xchg
ja
xor
xor
lret
lods
cs
fs
pop
inc
dec
shll
jbe
jb
add
data16
iret
push
pop
insl
jne
clc
loopne
nop
aam
jo
aam
pop
pop
adc
mov
arpl
push
xchg
or
shlb
addr16
aaa
test
mov
lods
pop
xor
testl
cmp
lods
popa
or
and
pop
inc
popa
jmp
push
mov
test
inc
enterw
sub
in
push
lret
call
std
jecxz
jbe
xor
mov
or
jne
jne
jb
sbb
ret
push
xchg
pop
aaa
icebp
sbb
shrb
jmp
and
loopne
mov
addr16
loope
iret
push
xchg
mov
lds
jge
dec
push
loopne
pop
ss
and
xchg
in
je
outsl
outsb
xchg
gs
xchg
cmp
outsl
adc
gs
jae
jne
and
xor
pop
jnp
nop
or
sbb
negl
int
cmp
dec
cmp
cmp
jge
pop
sub
sbb
pop
adc
fcomps
rolb
orb
push
add
or
sub
adc
clc
cmp
push
or
cs
pop
sbb
test
xor
adc
int3
pop
jge
roll
inc
lods
int3
js
sub
push
mov
inc
push
je
cmp
je
outsl
arpl
cmpsb
imul
es
sub
movsb
mov
ror
cli
lds
jb
cmc
je
cmpl
pop
sub
ret
mull
sub
sub
push
cmp
mov
fdivrp
dec
xor
stos
stos
imul
dec
rclb
cmp
mov
call
sbb
adc
pop
xchg
and
sub
sbb
sbb
push
lahf
xchg
pop
inc
xor
mov
das
pop
repz
loopne
sbb
rol
jp
sbb
out
sbb
clc
xchg
stc
cmp
or
and
and
mov
in
mov
and
mov
inc
je
sarb
movb
adc
cwtl
mov
imul
sbb
and
xchg
in
dec
xor
xchg
fdivrl
das
fcoms
sub
cmc
cld
adc
and
leave
mov
stos
aaa
cmp
stc
xlat
add
jb
adc
cmp
dec
pop
cs
call
cmp
xchg
cld
jg
loop
or
mov
sub
jg
std
mov
jp
inc
cwtl
and
xchg
gs
popa
arpl
pop
xchg
imul
xchg
gs
gs
imul
xchg
outsb
gs
lods
scas
fnsave
mov
bound
mov
imul
mov
or
xor
mov
jo
ret
dec
mov
pcmpeqw
lret
mov
push
add
popa
arpl
mov
imul
xor
fs
jb
aad
shlb
es
or
dec
sub
pop
out
xor
and
data16
insl
xorb
imul
dec
ss
mov
adc
dec
sarb
out
in
jmp
push
push
in
stc
shr
sbb
jmp
cwtl
aaa
pop
jne
xchg
bswap
cmpsl
nop
scas
lock
push
and
sub
jbe
mov
xor
sbb
lea
adc
call
pop
add
lret
xor
call
clc
div
rcrb
aas
sub
mov
dec
movsb
dec
pusha
inc
lock
pause
les
fstps
jae
arpl
fs
dec
outsb
cmp
inc
lcall
or
mov
out
jle
cmp
push
bnd
sub
mov
lock
lods
dec
lods
inc
xlat
pop
add
in
scas
sub
test
xchg
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
jb
arpl
cs
insb
xor
outsl
sub
jb
xor
shll
loop
in
mov
call
jmp
pop
in
je
out
jns
out
ficompl
push
inc
push
sub
fs
adc
lock
xchg
mov
dec
negl
pop
and
imul
push
xor
mov
push
flds
rclb
imul
pop
je
adc
adc
sti
xchg
lods
shl
arpl
push
mov
sub
add
jle
mov
or
and
mov
and
jne
mov
adc
js
jmp
cmp
mov
fldt
loopne
adc
or
mov
jge
call
popa
cmp
adc
shrb
fistpll
add
jmp
call
add
mov
adc
add
cmp
fsubrl
pusha
lods
int3
outsl
inc
cmpsb
push
push
push
lods
dec
ret
mov
xchg
mov
cmp
mov
cmp
mov
rol
dec
cmp
shl
ret
push
dec
jmp
and
cmp
mov
pop
nop
lock
sub
push
dec
popa
movl
fcompl
dec
fsubrs
xor
and
call
imul
mov
and
ljmp
jecxz
mov
jmp
in
in
xchg
out
inc
out
ja
ds
fcoml
pop
lcall
loopne
inc
mov
cld
jecxz
in
out
xchg
cld
in
out
push
xor
leave
lret
outsl
lods
mov
xlat
int
jnp
test
divl
call
es
cmpsb
add
negl
sbb
lods
xor
mov
lret
or
inc
ret
cwtl
mov
jge
mov
or
push
adc
add
push
lcall
rolb
mov
sti
sahf
insl
adc
popa
adc
jecxz
push
push
push
cmc
test
push
push
sbb
or
and
sub
repz
cld
prefetcht0
cmp
or
cld
mov
add
lcall
bnd
add
lock
fisttpll
cmp
out
mov
data16
pushf
pusha
push
pushl
jbe
add
movswl
shlb
xchg
jbe
pop
enter
and
xchg
adcb
scas
push
sbb
pop
jb
filds
adc
mov
mov
mov
mov
movsb
leave
xor
cmc
in
adc
adc
mov
or
or
pop
or
roll
xchg
imul
push
negl
aam
adc
shr
iret
mov
sbb
inc
cmp
xchg
ror
fistps
xchg
push
add
popl
call
cmp
mov
fistl
les
call
mov
dec
jo
jnp
jmp
push
cmc
adc
jmp
dec
inc
mov
fcmovnu
std
lcall
rolb
jge
mov
sbb
enter
push
cmpl
je
fistpll
xchg
or
icebp
push
lock
mov
call
mov
cmpl
cwtl
cmp
jmp
mov
stos
mov
mov
icebp
cmp
ficoms
pushf
rolb
stos
outsb
ds
cmp
push
mov
push
loopne
pop
ljmp
mov
loopne
jl
test
aam
fs
mov
adc
enter
cmp
lods
mov
pop
inc
dec
push
outsl
data16
xor
je
popa
gs
lods
ss
rorl
js
xor
pop
mov
add
mov
cmc
xchg
mov
add
lcall
push
gs
push
bound
imul
gs
xchg
dec
outsb
insb
imul
gs
push
gs
ss
pop
lock
jae
gs
xchg
gs
imul
inc
outsl
xchg
hlt
sbb
js
sbb
add
and
or
je
pop
cmpsl
mov
jmp
inc
jmp
add
jmp
mov
jmp
push
jl
sub
and
mov
and
or
add
xchg
je
cmpl
cmp
stos
mov
xor
in
push
mov
inc
ja
test
add
or
cmp
sbb
add
cmpb
js
mov
jge
jo
add
cmpl
mov
cmpsl
ljmp
push
cmp
mov
ja
add
mov
fisttps
inc
dec
fwait
push
test
jecxz
add
sub
xorl
sbb
mov
ror
pushf
jg
xchg
call
ret
add
movl
pushl
add
mov
sub
mov
lods
xor
xlat
pop
adc
add
imul
mov
popf
andl
or
jmp
jle
movzwl
mov
dec
test
add
test
shlb
cli
pop
or
adc
jmp
adc
inc
cmp
jne
data16
or
jne
or
sub
add
or
lock
xchg
xor
outsb
adc
mov
aaa
cmc
push
push
cld
inc
inc
data16
add
jmp
add
add
dec
insb
sub
jae
into
add
push
jle
xchg
addl
pusha
mov
loop
inc
adc
iret
popa
cld
sbb
inc
xor
je
and
mov
pushl
add
push
loopne
cs
clc
add
sub
mov
sub
adcb
push
mov
pusha
ljmp
pop
xor
sbb
sub
adc
jle
add
mov
call
mov
lahf
inc
stos
fs
ss
pop
cltd
pusha
push
pusha
loopne
pop
push
push
pop
les
ret
pop
int
jne
and
or
xchg
push
cltd
push
lods
sahf
jns
nop
or
stos
xchg
fdivs
cld
push
les
and
pop
mov
lea
mov
mov
inc
adc
pop
and
inc
sub
mov
shr
or
pushf
fwait
gs
test
push
pushf
inc
and
sbb
push
or
xchg
mov
cmp
pop
mov
fisubl
mov
push
sub
stos
mov
mov
fcmovnu
or
jmp
and
push
push
adc
sub
xchg
or
js
ss
jb
cs
push
dec
js
push
jne
and
add
or
mov
jecxz
or
call
xchg
pop
psubsb
mov
inc
add
jl
cmp
mov
scas
std
daa
repz
add
add
push
into
sub
push
jb
fwait
mov
loopne
mov
ret
jecxz
inc
sarl
add
pop
mov
cmp
or
or
aam
adc
js
decl
hlt
pop
xchg
pop
outsw
outsb
je
and
gs
rorl
jo
push
mov
mov
adc
mov
test
rol
or
xchg
loopne
xchg
push
movsb
cltd
imul
stos
jne
popa
stos
jns
mov
es
xor
add
mov
push
sbb
jl
cmp
cmp
and
adc
push
pop
add
arpl
sub
push
push
mov
fsincos
movsl
pop
mov
add
cmp
or
or
xor
and
sub
incb
outsb
sub
xor
adc
sahf
push
loopne
outsb
jbe
fdivl
or
push
insb
add
mov
call
mov
vdivsd
cld
push
mov
call
cmp
dec
or
lahf
add
pop
les
cmp
push
mov
daa
push
pop
ss
add
and
fisttpll
mov
jle
mov
mov
call
xchg
pop
jle
lods
inc
or
cmpsl
in
inc
dec
xchg
outsl
and
orb
sbb
xorl
pop
test
xor
inc
mov
je
je
mov
out
push
mov
push
shrl
add
mov
add
in
adcb
imul
imul
xchg
adc
mov
int3
pop
add
sub
fdivrl
add
ret
leave
rorb
lds
ss
mov
fs
mov
add
xor
mov
mov
data16
push
pop
repz
xor
mov
lret
mov
je
popa
jns
lcallw
int
jne
jg
enter
add
and
data16
movsl
or
jne
in
loopne
data16
adc
inc
lahf
xorl
mov
pusha
es
shrb
push
mov
sahf
lcall
pop
pusha
mov
daa
test
sahf
or
int
roll
fdivs
lret
mov
adc
pop
test
inc
xor
xor
lea
outsb
cmp
inc
lods
xor
jg
xor
icebp
call
push
add
pop
inc
in
or
popa
or
push
cmp
and
andb
leave
aad
pop
xchg
gs
jbe
js
insb
outsl
gs
xchg
gs
jb
gs
test
cwtl
js
in
adcb
xor
jle
ficomps
faddl
push
sahf
cltd
cmpsl
mov
jnp
in
mov
enter
fstps
std
mov
sbb
subb
addr16
pop
call
mov
push
push
mov
adc
data16
adc
pop
push
cmpsl
pop
pusha
inc
popf
mov
mov
rorl
add
cmp
xor
pop
pop
leave
rcrb
push
fisttps
or
pop
jmp
xor
sbb
cwtl
mov
add
push
pop
jo
sahf
fistps
and
js
inc
and
pop
sub
xor
mov
sbb
insb
cs
adc
das
mov
add
inc
add
sub
mov
sub
adc
adc
adc
nop
push
push
mov
push
arpl
gs
js
gs
fdivl
and
dec
outsb
imul
lods
sti
imul
or
and
push
add
or
popa
jbe
mov
mov
pop
bound
push
push
jmp
xor
dec
gs
sysenter
add
bound
je
mov
and
add
mov
vpcmpgtd
xor
inc
mov
jge
sti
push
jb
mov
popa
imul
add
aas
push
outsl
outsl
insb
out
fists
push
outsb
popa
jo
push
xchg
push
and
je,pt
push
mov
dec
dec
ss
add
sbb
adc
inc
insb
cwtl
mov
imul
and
js
jg
imul
packsswb
add
push
xor
jnp
out
mov
sbb
fs
adc
sub
dec
xor
inc
gs
inc
mov
mov
xor
sub
pusha
inc
lods
sub
imul
cs
and
inc
jns
add
or
arpl
imul
add
into
mov
dec
test
rorb
push
pop
mov
stos
sbb
xchg
notl
outsb
lea
xlat
outsb
and
push
push
and
fists
insl
aas
xchg
lods
lods
loopne
fwait
popf
int3
dec
sbb
push
or
push
int
pop
test
and
aad
sub
push
push
push
push
in
inc
mov
cmp
sbb
insl
andb
adc
jno
mov
in
dec
pcmpeqb
and
xchg
push
mov
ss
das
jne
mov
imul
sbbb
mov
fwait
mov
fbld
ret
sbb
int3
or
add
mov
lret
pop
xchg
je
mov
mov
rcrl
add
popa
mov
lar
daa
mov
cmp
sub
filds
adc
cwtl
mov
sub
ret
scas
adc
lods
jecxz
insb
or
pop
jne
jge
fcmovnbe
cwtl
pop
icebp
movsb
insl
stos
popa
jae
sub
pushf
push
imul
insb
inc
addr16
dec
test
fldt
lods
push
adc
icebp
xlat
sbb
sub
push
outsb
push
xchg
inc
cmp
dec
inc
ret
loopne
dec
inc
jle
add
or
je
push
jno
mov
ljmp
js
sub
cmpsl
mov
lahf
pop
dec
adc
jl
pop
add
add
inc
movsb
loope
addr16
xor
sbb
ret
ficoml
jl
inc
inc
dec
or
shlb
in
out
push
xor
jo
push
fstpl
cmc
add
jmp
jo
inc
fwait
mov
xor
pop
add
outsl
pop
test
jnp
idivl
dec
out
xor
jb
cmp
idivl
sub
add
in
addr16
outsb
jne
jno
jge
loopne
or
jne
inc
shlb
mov
arpl
jo
inc
popa
arpl
add
mov
and
inc
push
inc
push
add
jmp
or
mov
xchg
or
test
fmulp
gs
ret
dec
cmp
xor
add
mov
int3
fcmovbe
add
inc
xlat
jnp,pn
roll
imul
jg
data16
popf
mov
push
xchg
popa
xchg
mov
out
lds
jae
mov
incb
adc
push
jns
fstl
insl
cmp
or
add
mov
ja
mov
pop
or
mov
aas
xor
pop
push
add
psubusw
xlat
cltd
xor
dec
psraw
sbb
dec
add
stos
insb
ja
sub
mov
dec
sub
ret
add
adc
pop
sub
fwait
jae
lret
aaa
lds
data16
sbb
or
cwtl
pop
aaa
popa
add
sub
sub
xor
pop
jbe
cmp
sub
incb
jle
add
add
addr16
jg
jecxz
mov
cmp
test
cmp
cmp
fnstcw
or
push
ds
ds
cmp
inc
ds
ds
jbe,pt
cli
jl,pt
lea
lods
ds
ds
ds
and
cmp
push
aas
idivl
aas
jbe
push
sub
xor
push
xor
mov
in
xor
xor
xor
sub
pop
mov
xor
adc
das
xor
outsb
xor
jns
mov
sahf
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
pushl
mov
mov
xor
out
hlt
xor
and
jnp
pushl
xchg
mov
ss
jmp
aaa
sbb
sub
inc
aaa
pusha
aaa
sahf
aaa
test
pushl
add
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
out
fists
aaa
bound
cwtl
aaa
sarb
cmp
cmp
cmp
cmp
xchg
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
lcall
jmp
cmp
cmpl
pop
cmp
cmp
mov
stos
cmp
cmp
cmp
cmp
lcall
sahf
cmp
cmp
cmp
cmp
cmp
cmp
and
decb
loopne
out
insl
adc
mov
aas
incl
mov
aaa
xor
xor
xor
fdivl
pushl
xor
jg
lea
mov
xor
xor
inc
xor
movsl
xor
fnstsw
loope
out
repz
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
cld
xor
xor
xor
push
lock
xor
js
lea
pop
pushl
cld
test
add
aaa
ret
aaa
fdivs
pop
cmp
cmp
cmp
cmp
sub
aaa
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
iret
cmp
ljmp
cmp
push
imul
cmpsb
ds
out
ds
ds
mov
ja,pt
cmpl
mov
aas
lds
iret
aas
aad
out
repz
fildll
pop
xor
jbe
test
mov
mov
xor
xor
xor
decl
cmp
xor
mov
xchg
xor
clc
clc
xor
xor
xor
xor
mov
xor
cmp
sti
mov
pushl
xor
xor
xor
xor
xor
mov
out
mov
in
int3
aaa
shll
loopne
ljmp
aaa
cmp
mov
jo
cmpb
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
insl
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cld
cmp
push
cmp
lfs
jecxz
or
cmp
cmp
lods
cmp
jmp
idivb
and
sub
aas
ds
fcomip
ds
jo
jp
jg
mov
sarl
fnstcw
loop
call
or
adc
pop
aas
and
aas
dec
aas
pop
aas
outsl
aas
popf
aas
cmpsl
aas
mov
dec
mov
orb
xor
xor
xor
push
xor
addr16
pushl
insb
xor
pushf
xor
xor
xor
sub
insl
xor
xor
sar
fists
jmp
xor
xor
xor
call
pop
arpl
lret
dec
in
ss
jnp
mov
loope
aaa
shll
pop
push
cmp
jae
lea
out
pushl
icebp
cmp
push
cmp
cmp
cmp
cmp
cmp
clc
lcall
cmp
cmp
push
cmp
cmp
ja
mov
xchg
cmp
jmp
fwait
out
sbb
fdivrs
add
push
cmp
cmp
cmp
jmp
cmpsb
push
jns
cmp
cmp
cmp
cmp
cmp
outsl
cmp
dec
adc
xor
cmp
xchg
xor
inc
clc
das
pop
ds
ds
sbb
and
cmp
add
mov
xchg
ds
ds
mov
push
xor
push
and
call
sbb
adc
mov
nop
mov
in
fwait
adc
mov
je
dec
pop
shrb
popf
fwait
out
das
sti
mov
mov
sahf
mov
nop
xchg
push
cmp
aad
or
sub
cmp
jb
loopne
and
cmp
ret
pusha
mov
add
ret
aaa
enter
cmp
or
add
adc
adc
jb
jb
ret
dec
test
in
inc
and
lcall
in
sbb
inc
xchg
ja
daa
push
popf
add
jmp
mov
mov
fmul
in
xor
sbb
push
pop
out
xor
dec
shll
pushf
mov
pop
dec
ds
adcb
cmpsb
imul
cmp
js
push
push
cmpsl
push
cmpsb
inc
sub
push
xor
sub
or
cmp
and
in
push
and
mov
roll
out
inc
mov
or
sub
push
push
inc
and
outsl
push
xor
dec
add
add
mov
and
enter
and
pusha
and
and
leave
sub
shlb
and
je
add
pop
test
add
or
dec
test
mov
and
in
sbb
add
std
or
push
leave
addl
add
pop
and
xor
xchg
mov
xor
cltd
and
sbb
xor
mov
in
and
push
and
sbb
add
pushf
jmp
jne
push
xchg
and
and
and
in
push
adc
push
xor
push
pop
adc
pop
pop
ds
xchg
xor
push
push
out
pop
and
inc
inc
inc
jo
test
inc
cs
fcomps
adc
push
push
ljmp
adc
lahf
in
test
or
orb
aam
sbb
jecxz
fwait
cmp
stc
dec
mov
mov
xorl
adc
inc
cmp
cmp
lcall
cmp
scas
ret
adc
cmpb
and
nop
add
cmpsl
push
and
add
mov
mov
test
ficompl
mov
push
adc
cmp
cmp
xchg
push
cmp
or
aad
xchg
add
pop
mov
add
mov
and
cmp
cmp
add
cmp
jl
roll
adc
enter
call
idiv
mov
loopne
xchg
icebp
idiv
sbb
pop
test
adc
btr
jne
pop
push
pop
xchg
inc
sahf
add
nop
sbb
outsb
pop
mov
sbb
sbb
mov
mov
sbb
lcall
mov
inc
and
mov
jl
dec
lods
std
test
mov
scas
std
scas
xchg
sbb
imulb
mov
push
mov
mov
mov
jo
ss
mov
pop
add
enter
adc
int
or
test
dec
aam
stos
lods
mov
ja
arpl
push
xchg
and
cmpb
and
in
outsl
jb
mov
push
push
sbb
in
mov
push
jmp
inc
push
inc
mov
and
ss
jae
and
jo
rcrb
mov
lock
fmull
mov
lret
mov
outsl
outsb
outsb
mov
je
js
in
mov
fs
popa
jne
xchg
gs
outsb
arpl
mov
aaa
mov
insb
adc
sub
addr16
imul
mov
insb
inc
dec
xchg
outsl
jb
bound
pop
mov
mov
enter
adc
jb
in
push
xchg
pop
repnz
mov
ret
sub
sub
mov
imul
jae
leave
mov
xchg
push
mov
push
or
push
and
outsb
stc
push
push
mov
pop
cmc
xchg
jge
push
xchg
sbb
out
push
mov
adc
xor
aam
pop
push
in
add
pop
sub
aas
out
mov
push
aam
add
xchg
mov
fcomp
mov
shrb
loopne
out
mov
loopne
ficomps
call
fwait
es
dec
and
mov
push
mov
andb
add
data16
jbe
push
sbb
je
adc
insl
lods
push
inc
aam
and
imul
push
adc
bound
fdivs
movsb
add
sbb
add
xchg
mov
push
pushf
sti
fsubrs
xor
pop
mov
arpl
inc
add
cmpsb
jae
mov
in
or
or
ficoms
test
mov
or
shl
fdivrp
mov
push
popa
repnz
xchg
adc
sub
sbb
push
test
and
adc
add
add
cmp
dec
and
dec
push
enter
add
ss
and
add
adc
xchg
leave
adcb
sti
add
int
ja
add
adc
out
dec
sub
adc
jae
cmpsb
mov
bound
xor
dec
and
mov
cmpl
fldl
mov
mov
sti
les
sbbl
xlat
pop
xchg
mov
push
sbb
das
push
pop
lret
or
aad
cmp
add
std
sbb
inc
mov
cmp
popa
ja
lcall
nop
jae
push
mov
push
outsb
jb
clc
add
aaa
and
js
adc
sub
and
andl
mov
scas
adc
lret
icebp
xor
aas
and
cltd
push
add
insl
dec
jae
mov
sub
adc
add
or
and
dec
add
ja
and
andb
or
daa
add
and
in
xlat
push
add
xor
fsubrs
ret
sub
cmp
dec
and
and
add
mov
xchg
int
lock
or
dec
shll
mov
xor
loopne
out
clc
jmp
xor
pop
jge
hlt
cltd
scas
mov
xchg
leave
add
cs
push
xor
sbb
xchg
icebp
add
jno
adc
inc
push
pop
es
mov
pop
and
outsl
insl
aaa
fcoml
rcll
js
mov
adc
rclb
xchg
inc
jbe
testl
icebp
ljmp
dec
xchg
jno,pn
loope
sbb
mov
xor
adc
inc
ret
push
xchg
adcb
fxch
inc
add
jnp
imul
mov
sarb
pusha
cmpsb
fadd
jae
jo
xchg
mov
insl
pop
jns
pop
adc
int3
mov
or
cmp
adc
adc
popa
push
adc
sub
inc
imul
dec
outsl
sbb
flds
rclb
or
nop
out
dec
dec
pop
add
pop
mov
dec
les
rcll
int3
add
lods
push
out
push
faddl
aaa
pop
add
add
pop
xlat
adc
inc
or
add
decb
cmp
aas
stos
push
inc
mov
or
add
imul
push
addr16
pop
jecxz
or
dec
outsl
and
mov
fnstsw
jecxz
inc
and
jmp
outsb
inc
jae
and
mov
jns
popa
and
add
arpl
ss
addr16
jo
cmp
aaa
ss
push
das
pop
gs
sub
push
adc
push
lds
lods
imul
fnstenv
xor
sbbb
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
dec
adc
xchg
jmp
je
pop
xor
jle
add
mov
or
fs
orl
or
daa
dec
dec
imul
outsb
xchg
mov
cli
push
daa
jbe
mov
test
pcmpeqw
test
pop
xor
inc
push
imul
and
arpl
arpl
scas
insb
cmpsl
xchg
out
add
stos
add
loop
shlb
xor
xor
adc
es
push
add
call
xor
xor
xor
xor
dec
inc
cld
lret
xor
xor
xor
and
mov
mov
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
pop
pushl
or
pop
cmp
jg
lcall
cli
cmp
les
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmc
add
out
sbb
clc
push
icebp
lcall
fisttpll
and
or
nop
jle
stos
sub
pushf
add
mov
ljmp
sbb
xchg
push
mov
sbb
xchg
sbb
xchg
bound
or
or
cmp
or
test
add
jne
push
add
or
and
push
add
sbb
adcl
outsl
jbe
inc
cmp
fimuls
insb
popa
push
mov
jl
gs
outsb
sub
sbb
jo
popa
push
mov
sbb
adcl
into
movsb
push
mov
add
and
add
and
cmpsl
flds
or
stos
mov
pop
add
pop
insb
inc
add
jae
or
dec
xor
sbb
inc
popf
data16
xchg
inc
mov
add
sahf
sbb
push
xchg
sbb
out
inc
add
enter
add
and
jne
inc
cmp
sbb
mov
push
push
adc
sbb
leave
xor
out
rclb
daa
sahf
sbb
jle
xchg
add
or
add
add
add
add
incl
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
