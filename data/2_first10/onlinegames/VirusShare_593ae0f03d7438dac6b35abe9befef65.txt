mov
inc
and
and
add
in
sub
movsl
in
jle
out
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
and
stos
sti
popf
popf
int
dec
call
jmp
out
ja
jne
dec
lea
pop
adcb
sti
std
jl
les
fildl
jle
xor
adc
out
fildll
inc
jbe
test
bound
ss
push
ljmp
mov
push
je
mov
push
call
outsl
fmul
testb
in
jo
inc
xchg
fstl
insb
pop
xchg
push
pop
mov
jmp
add
push
inc
cmp
mov
mov
xor
ret
pop
push
or
pop
leave
ret
push
in
pop
push
push
jp
push
mov
mov
imul
cld
add
sbb
jmp
mov
ss
jo
insb
in
jne
jae
out
cs
icebp
es
mov
call
lock
rcr
je
xor
inc
push
push
xchg
mov
ds
ret
inc
push
lds
je
mov
data16
dec
enter
lret
cmpsl
insl
ss
inc
push
int
into
arpl
outsl
jbe
jmp
shlb
shll
jb
and
ret
pop
out
mov
mov
js
movsb
movsb
movsl
sahf
out
sahf
cmpsb
cmpsl
test
stos
stos
jns
out
lods
lods
scas
scas
mov
jns
out
mov
mov
in
shrl
mov
xchg
mov
out
mov
gs
loope
jmp
imul
push
push
cld
push
call
scas
clc
mov
clc
push
or
jge
sbb
cld
dec
dec
cmp
xor
and
jae
pop
sbb
or
dec
mov
cmp
jmp
mov
imul
add
xor
movsl
add
adcb
inc
or
pop
pop
shl
sbb
pop
enter
in
mov
movl
or
jno
push
xchg
jne
jae
fwait
int
out
gs
jb
xor
xor
mov
iret
repz
cmc
testb
insb
fwait
dec
loope
imul
in
ss
sahf
cmpsl
out
call
ja
mov
adc
ret
out
aas
inc
gs
push
jne
dec
or
or
add
inc
push
push
push
mov
sarb
dec
mov
mov
inc
ret
ja
xor
sbb
and
lock
push
mov
mov
dec
popa
xor
xor
sti
loope
decl
mov
jne
cmp
jb
fs
out
out
dec
jno
mov
push
push
adc
clc
sbb
int3
fimuls
rcrb
dec
je
mov
jns
ds
das
mov
fmul
sahf
loope
add
in
cld
jp
pop
add
lods
sub
mov
adc
addr16
repz
shll
xlat
fcomp
iret
repz
fcmovu
addr16
and
test
or
jno
or
imul
jne
cmpsl
jns
jb
gs
js
outsl
movsb
jns
jns
jl
jnp
int
lea
pusha
insl
jle
cmpsl
fldcw
adc
inc
xorl
subl
test
dec
xchg
mov
mov
inc
mov
push
jne
cmp
mov
out
cld
mov
out
ss
popa
xchg
jbe
gs
xchg
jge
jns
xchg
xchg
cwtl
cltd
mov
xorl
insb
into
sahf
gs
mov
test
lds
sahf
out
enter
out
jae
imulb
lret
int3
je
int
jb
iret
shrb
dec
sti
shll
shrb
sahf
mov
mov
inc
sahf
out
stc
pushf
imul
push
inc
scas
mov
jne
call
xor
arpl
lcall
sbb
pop
fisttpll
push
push
mov
icebp
xchg
idiv
data16
or
and
sub
imul
pop
popa
pop
addr16
gs
inc
das
pusha
inc
sub
push
jo
roll
hlt
push
rcr
pop
ja
mov
mov
push
xor
je
mov
mov
pop
jp
orl
sbb
loope
stos
and
movsb
loopne
mov
in
les
in
or
mov
int
les
nop
stos
scas
dec
das
jmp
sbb
filds
outsb
rclb
lret
mov
xchg
or
mov
pop
je
dec
push
mov
repz
lock
cmp
jg
or
jl
ret
and
pop
mov
cwtl
push
lcall
cwtl
jo
pushl
mov
sbb
and
movsb
out
in
call
gs
in
fdivr
in
shlb
pop
sub
fs
or
xlat
adc
and
or
scas
daa
popa
cmp
dec
jae
or
mov
or
sbb
dec
lock
or
aad
ja
aam
pusha
push
jne
mov
mov
lahf
pop
sub
jno
insb
clc
jae
dec
cs
cli
sysenter
pushf
out
insl
cld
sahf
pusha
mov
shlb
push
lea
push
das
push
add
inc
test
push
movl
pop
rcrl
mov
dec
int
cmp
gs
std
insb
mov
cmp
and
dec
jnp
mov
jmp
xchg
sub
mov
adc
jnp
cmpl
stos
xor
sub
mov
sti
jg
mov
xor
pop
je
cmp
je
inc
shr
jne
add
ds
dec
jne
fisubrs
add
pop
xchg
mov
and
xchg
push
enter
decl
xchg
cmp
jae
xor
mov
mov
mov
dec
je
xor
adc
es
adc
fdivs
mov
or
cmp
cmp
xchg
mov
mov
popa
aas
lds
jne
push
cmp
jmp
mov
sbb
mov
push
push
addl
fldcw
je
fildl
outsl
fnsave
fbld
jb
jne
xor
iret
mov
push
fcomps
push
aam
outsb
jmp
inc
aam
pcmpgtd
xchg
push
inc
andb
mov
insl
push
inc
popl
es
push
push
leave
lods
and
and
in
cltd
jmp
cmp
adc
pop
insl
mov
mov
pop
cmp
jne
stos
fwait
lods
xchg
dec
jle
push
mov
add
enter
ret
cmp
fisubrl
lcall
or
rorl
lock
mov
pop
inc
repnz
push
inc
jl
sarb
inc
add
push
xor
sbb
loop
pop
mov
cmp
or
or
cmp
orb
movb
add
and
xor
dec
push
sarb
xor
cmp
je
and
nop
mov
or
push
into
xchg
mov
or
rcrb
cmp
in
sbb
ja
ja
pop
xlat
mov
mov
fadds
cmp
in
shrl
adc
xor
mov
pop
push
mov
imul
mov
stc
or
push
addr16
pop
clc
mov
xor
xor
stc
mov
aaa
stc
outsb
enter
movl
sti
pop
sti
in
fisttps
arpl
inc
push
dec
and
and
and
adc
arpl
call
call
inc
lock
stc
pop
jmp
pop
ja
and
sbbl
pop
in
negb
jns
xchg
cli
nop
or
sub
add
and
mov
imul
std
mov
push
push
pop
jb
testl
xchg
jl
mov
outsb
and
sbb
lcall
cmp
test
jae
fs
sub
mov
in
push
insl
popf
pop
mov
cmp
and
adc
and
imul
rol
clc
cmp
rcl
rcl
xor
cmp
and
out
sahf
out
cmp
out
sahf
xor
cmp
out
es
xor
shlb
ret
lcall
es
sbb
cs
div
clc
sahf
cmpsl
jge
stc
cli
mov
xor
cld
std
cmpsb
out
xchg
dec
cltd
insb
testb
pop
or
mov
pop
push
mov
sub
xchg
and
fsubs
adc
jp
repnz
add
xor
js
fldt
adcb
mov
cmp
jmp
stc
push
jo
or
pop
pop
mov
mov
push
mov
test
mov
mov
outsl
les
lcall
outsb
sti
xor
lods
cmp
gs
cltd
jo
insb
clc
sahf
lcallw
popf
es
sahf
jne
cmp
mov
shl
scas
cmc
add
or
jp
xchg
cmp
sbb
mov
mov
je
call
push
xchg
mov
enter
int
pushf
mov
out
std
lock
icebp
repnz
out
repz
std
loope
movsb
dec
sub
test
cmp
shl
dec
clc
mov
pop
lea
cmp
add
int
mov
movsl
cmpsb
je
inc
test
test
xor
stos
lods
outsb
lods
scas
push
in
shrl
es
ss
mov
jae
mov
xor
ds
and
fs
mov
xchg
sbbl
sub
lock
jo
push
imul
cmp
cmpsb
jae
push
gs
idivb
insl
imul
jns
out
aad
xlat
fcomp
in
or
pop
inc
orb
ljmp
imul
cwtl
jne
fidivrs
mov
fadd
inc
cmp
repz
jmp
lret
repz
sub
xchg
fstl
push
call
hlt
add
mov
push
cld
paddusw
or
dec
lahf
xchg
adc
outsl
lahf
xor
insl
jb
sub
or
daa
push
popf
jo
push
iret
jae
andb
mov
gs
imul
jecxz
in
lea
pusha
data16
clc
fdivrl
sbb
jmp
push
adc
rol
cmp
in
xor
sbb
push
neg
sbb
inc
pop
out
fs
mov
mov
jmp
push
insl
popa
imul
out
mov
jo
xchg
jge
mov
cmc
mov
mov
jl
inc
scas
add
lret
fsubl
xlat
imul
add
jnp
cmp
xor
add
in
cmp
mov
pop
popf
ret
inc
mov
iret
movl
popa
adc
xchg
ret
loop
into
pushl
or
loopne
or
mov
clc
adc
add
cltd
hlt
jns
ljmp
push
movsb
cmpsb
add
mov
iret
shrl
pop
push
cmpsb
mov
cmpsl
mov
adc
shl
shll
mov
rcl
or
movsb
lret
aas
into
addl
rolb
movsb
shll
lahf
imulb
aam
aad
xor
xlat
fsubs
sub
bound
pushf
repz
push
push
sub
in
dec
mov
sbb
out
and
push
xor
adc
mov
leave
iret
fdivrs
push
cmp
jmp
or
pop
enter
and
rclb
push
seto
hlt
push
mov
data16
cmc
inc
notb
mov
cmp
enter
lock
xorb
push
outsb
subl
lahf
lretw
int3
or
push
pop
pop
push
push
pop
mov
push
mov
lahf
int
fdivl
fldl
filds
and
add
fs
jecxz
lcall
outsb
movsl
repnz
in
push
addr16
dec
xor
mov
and
mov
mov
pop
jmp
leave
push
push
adc
mov
push
bound
jmp
or
xchg
add
cmp
imul
clc
add
je
enter
ss
jmp
aas
pushf
jge
ss
mov
roll
int
lea
in
push
cmp
movsl
jl
inc
push
cmp
adc
pop
repnz
inc
cmp
testb
cmpsl
in
fwait
shll
inc
push
lods
push
nop
inc
push
clc
mov
in
inc
push
sarb
push
aam
call
adc
pop
pop
ret
pusha
mov
je
cmp
inc
push
pop
xor
lock
cmp
sbb
inc
cmp
or
sbb
jne
pop
add
out
dec
dec
sbb
scas
add
je
or
add
xor
mov
mov
shr
cmp
jbe
xor
test
jbe
lea
cmpb
fists
outsl
jg
xor
mov
mov
xchg
mov
add
sarb
or
sbb
into
jb
xor
les
and
enter
out
sub
les
loopne
mov
adc
out
arpl
and
sbb
push
in
enter
or
decl
ja
pop
mov
mov
cmpb
fadds
adc
xorl
movsl
aad
or
sbb
dec
mov
int3
mov
movaps
sti
fisubs
popf
sub
push
sub
ja
mov
test
adc
lock
insb
cmp
and
mov
rcrb
fwait
je
inc
faddl
or
ljmp
cld
cmpsb
aad
and
test
or
xlat
popa
pusha
aaa
fcomp
jo
sbb
decb
and
test
sar
push
add
lcall
cmp
repz
jnp
sub
insl
cmp
dec
repz
cmp
cmp
repz
inc
inc
push
inc
repz
repz
gs
jbe
lea
inc
imul
sarb
ret
add
mov
cmpsb
imul
imul
int3
dec
push
push
popa
and
imul
dec
push
mov
pusha
insl
jae
popa
sti
sub
imul
mov
mov
xor
xor
cmpsl
test
stos
ss
cmp
movsb
jns
cmp
push
and
sbb
out
dec
and
and
int
dec
inc
daa
sub
xor
xor
leave
sub
dec
repz
inc
sub
and
inc
xor
xor
xor
xor
shrl
inc
out
inc
out
push
lock
mov
inc
mov
add
sbb
add
or
je
or
sarb
or
pop
insb
push
rcpps
sub
dec
repz
je
adc
adc
xor
rcll
mov
out
push
sbb
sbb
xor
nop
je
cs
insl
xchg
push
arpl
test
jae
cmpsl
fldcw
xor
je
mov
es
mov
lds
push
mov
out
sahf
nop
xchg
xchg
xchg
xchg
xchg
imul
lcall
insb
pushf
popf
call
xor
cmpsb
xchg
or
je
sub
nop
xchg
imul
nop
call
pop
push
adc
mov
pusha
inc
popa
arpl
xor
dec
pop
fs
gs
dec
repz
addr16
fwait
dec
sbb
imul
xor
bound
push
shll
xor
nop
rorw
scas
loope
loop
hlt
adc
nop
imul
cmpsb
imul
sbb
fucom
jo
push
fisttpll
xchg
lret
jb
jne
insb
add
push
jne
jns
jbe
pop
inc
js
popf
push
inc
pop
aaa
sbb
mov
cltd
add
int3
aad
lods
push
pop
push
dec
repz
push
pusha
arpl
rcll
push
or
xor
pop
outsl
pop
mov
dec
jae
jns
lock
sbb
ds
int3
xor
cmp
adc
add
adc
clc
ss
mov
dec
xor
lea
je
xor
adcl
lds
and
lea
test
push
jbe
and
and
jl
cmp
in
jmp
lcall
adc
and
cmpsl
inc
fidivl
ret
push
push
and
jecxz
test
sub
lret
inc
mov
addr16
fisttpll
sbb
rcl
adc
inc
int
mov
fadds
mov
inc
cmp
adc
xchg
jl
dec
sbb
aas
pop
mov
orb
jl
and
in
inc
pushl
leave
mov
addb
mov
aaa
sub
mov
rcrl
fdivp
push
fld
push
jmp
mov
shrb
push
sti
xor
shr
and
dec
popf
andb
add
cmpsl
fstp
nopl
aam
cs
mov
ja
cmp
ret
scas
lcall
adc
enter
hlt
mov
pop
jmp
cmpl
mov
mov
jne
push
mov
add
movsb
push
mov
test
jae
inc
mov
cmpsl
lds
shl
imul
inc
xchg
mov
cmp
out
dec
cmp
je
cmp
jb
dec
dec
cmpw
jne
push
es
sbb
pop
or
les
dec
sub
sbb
push
lods
sbb
cmc
mov
push
inc
adc
xor
ja
pop
jb
enter
movl
out
enter
push
call
ja
and
or
or
dec
mov
jns
cmp
fsqrt
test
imul
test
and
sub
cmp
into
repz
cmpsb
imul
lcall
lcall
gs
nop
movsb
imul
dec
ljmp
icebp
push
sub
call
dec
cld
popa
adc
inc
or
cmpsl
sarb
addr16
test
push
sahf
icebp
pop
subb
xchg
mov
sbb
push
push
fcoms
mov
sub
rolb
imul
jno
bnd
and
cwtl
jmp
mov
push
pushf
adcb
sub
sub
cmp
and
pusha
rorl
jae
push
bound
je
cmp
cmp
push
xor
pop
inc
fbstp
jno
add
test
cmp
sbb
xor
stc
adcb
or
in
stc
push
mov
or
jne
insl
sub
jo
stc
pop
cmpb
sub
cld
lock
in
loop
dec
pop
adc
adcl
cmp
push
mov
ret
je
inc
add
fabs
adc
pmaxub
lea
repz
cmp
jo
imul
stos
sbb
and
adc
inc
das
add
loop
in
sub
jl
xor
xor
sbb
dec
add
sub
inc
and
cmpsb
imul
je
cmpsb
imul
cmpsb
imul
pop
hlt
pop
repz
fs
js
mov
fdivp
loopne
jne
arpl
push
push
or
mov
into
je
daa
in
pushf
push
pop
fldl
popa
xor
pushf
ss
push
add
push
dec
push
push
mov
cmc
add
pusha
pusha
ds
push
int
fisttpl
es
push
jp
push
adc
dec
adc
popa
mov
jle
pop
jmp
loopne
sub
jne
sbb
clc
inc
push
paddw
inc
inc
mov
adc
pop
adc
std
push
mov
or
pop
mov
je
mov
or
pushf
add
xor
in
fwait
adc
fwait
sahf
scas
pop
stos
insb
or
xor
push
and
sahf
out
jns
dec
xchg
dec
inc
push
xor
add
lcall
outsb
jnp
sbb
jb
lods
scas
push
scas
repz
mov
mov
inc
mov
pushf
mov
lcall
xchg
cmpsb
imul
lcall
jns
xlat
pop
pop
xchg
test
sahf
negb
fwait
test
sahf
lahf
mov
mov
mov
movsl
cmpsb
or
testl
gs
mov
cmpsb
jne
jae
inc
pop
shlb
cmp
rcrb
dec
je
pop
outsb
je
imul
pop
cmp
lret
addr16
pop
jo
int3
je
sbb
rclb
imul
xlat
enter
cmp
aas
lds
push
add
les
push
push
movl
push
jb
add
rcl
fcomps
imul
es
rcll
inc
mov
call
ds
cmp
push
push
adc
test
out
mov
mov
add
jmp
cli
ljmp
loopne
mov
mov
add
pop
js
data16
cld
and
xor
les
dec
push
sub
test
les
dec
outsl
lock
int3
int
in
lret
pusha
pop
push
and
arpl
adc
or
xchg
negb
lock
dec
insb
xchg
sbb
cmp
je
negb
sahf
xchg
push
sahf
arpl
adc
push
loope
inc
cmp
jl
push
and
gs
insl
cmc
addb
lea
push
bound
xadd
test
mov
pop
sbb
pusha
sub
sub
sub
adcl
bnd
push
push
xchg
mov
jp
lods
inc
enter
mov
mov
push
jae
popa
cmp
das
dec
add
xchg
lods
push
add
test
lods
mov
add
adc
cmpsl
mov
data16
mov
push
test
xchg
pop
idiv
je
lea
add
adc
jle
xor
and
mov
and
lret
or
lret
adc
cmp
lcall
nop
xor
js
fwait
ja
out
push
pushf
pop
mov
pop
pop
jbe
jo
in
outsb
dec
dec
shll
cmpsb
imul
outsl
jp
cmpsb
imul
cmpsb
imul
imul
xchg
push
xor
jb
pop
inc
jb
cwtl
cmpsb
imul
shll
aad
repz
fcmovbe
xor
fcmovu
jnp
repz
fstp
xor
lea
dec
shrl
inc
pop
push
push
imul
imul
imul
rcrl
dec
ret
pop
mov
clc
test
cmpsb
sbb
out
inc
gs
outsl
inc
inc
lcall
imul
imul
fists
sbb
push
movsb
sbb
jbe
ficomps
fs
sub
dec
das
jns
xor
push
loopne
push
rorb
and
and
push
jno
test
jbe
xor
mov
in
test
addb
rolb
adc
test
or
sbb
leave
clc
adc
xchg
and
jb
int3
pusha
cmc
add
ja
loopne
fmuls
addr16
fmuls
mov
xor
popa
bound
movsbl
out
pusha
cmp
cwtl
sbbl
clc
aas
cmp
pop
jb
lea
push
scas
add
sbb
in
mov
std
stos
lret
xlat
stc
push
lahf
test
jbe
and
add
jmp
inc
fcoml
or
fstl
pop
and
jne
adc
dec
cli
or
shlb
and
dec
cmp
out
mov
mov
nop
fwait
add
push
mov
pop
sbb
mov
sarl
and
aas
popa
andb
xor
je
outsl
outsb
cmp
and
outsl
arpl
xor
imul
cmp
cwtl
xor
sbb
cwtl
ja
js
out
xor
xchg
enter
sbb
sbbl
push
push
push
cmp
cs
cmp
mov
cli
lods
adc
mov
dec
mov
cmpsb
mov
dec
jo
aad
int3
push
outsl
xor
mov
push
ljmp
dec
rcll
insl
pop
lcall
je
push
jns
cmpsb
imul
arpl
lock
nop
jge
adc
fstpl
pushf
js
xchg
xor
iret
inc
ret
jb
xor
je
jb
add
mov
sub
cld
adc
mov
nop
add
popf
pushf
mov
sbb
push
icebp
xchg
push
incl
xor
jmp
ja
xor
jp
mov
mov
popa
jl
or
or
jl
cmp
inc
cmp
cwtl
lock
les
jne
ret
push
inc
mov
sub
dec
and
stc
pop
jo
adc
test
fistl
lea
and
rcl
adc
pop
idivb
jmp
fistl
mov
test
jne
inc
nop
dec
pop
add
inc
lea
mov
mov
push
or
sarb
loopne
lea
shll
popa
sub
fdivp
in
add
push
or
stc
add
sbb
jp
add
xchg
inc
pushl
dec
push
and
pop
insb
jns
pop
jg
pushf
xchg
pusha
mov
cmpl
jne
cmpl
outsb
das
insl
popa
jne
adc
je
imul
addr16
push
push
sub
je
daa
les
push
outsl
push
jne
popa
outsb
addr16
adc
int3
fisubs
dec
lretw
jne
stc
fsubrl
mov
push
sub
mov
inc
mov
push
sbb
mov
or
and
das
ret
lods
push
daa
cwtl
test
test
pop
je
andb
sbb
jge
cmpsl
inc
cmp
outsl
cmp
jne
movsb
or
negb
fisubs
or
lea
cmp
stos
enter
ds
ret
sbb
or
pop
mov
mov
push
mov
sbb
cmp
push
shlb
or
fldt
sbb
sub
jae
jb
xor
or
jns
je
inc
pop
ret
out
jne
pop
pop
mov
ljmp
stc
or
js
inc
dec
nop
jb
push
cli
pop
or
add
sub
mov
lret
adc
dec
sbb
mov
ret
lret
cmp
jbe
mov
adc
fstps
insl
add
jae
sub
add
clc
fisubs
or
and
rcl
mov
paddusb
sbb
pushf
jne
push
mov
push
or
loop
cwtl
mov
sub
sub
incl
fwait
imul
ret
or
cmc
sbb
pop
lods
pop
adc
pop
into
or
adc
pop
enter
sar
test
pop
cmpsb
das
mov
dec
adc
jae
out
xor
mov
sti
sub
arpl
in
movsl
xor
aad
hlt
pop
outsl
enter
pop
jne
je
mov
js
aas
test
dec
insb
or
sub
mov
cmpl
stos
dec
jge,pn
jle
push
ret
ss
push
xor
clc
lea
fs
call
mov
fisttpll
cmp
ja
std
hlt
mov
inc
cld
xchg
xlat
add
push
jp
scas
cld
cmp
xor
adc
outsb
pop
neg
push
sub
push
shll
sbbb
adc
or
bound
movsb
push
jp
adc
push
test
fistpll
outsb
ja
push
xorb
div
xor
test
lock
dec
sub
mov
inc
hlt
inc
pop
inc
cmp
jl
xchg
push
mov
mov
lock
sub
lods
sbb
sbb
out
clc
pusha
push
pop
test
loopne,pn
test
xor
insb
lret
mov
je
call
hlt
div
lods
cmp
clc
or
dec
ret
dec
dec
sub
andl
push
int
scas
js
inc
push
push
repz
popf
pop
incl
push
and
testb
mov
pop
sbb
or
lock
pushf
dec
leave
jo
cmpb
mov
and
mov
je
dec
adc
ds
imul
and
outsl
je
inc
and
push
outsl
in
sbb
outsl
sbb
push
push
cmpsb
adc
or
push
lea
push
push
pop
out
mov
mov
push
push
scas
mov
lock
fisubrs
ret
sub
mov
movb
mov
jg
mov
add
push
push
pop
je
call
enter
in
push
add
xor
popf
sbb
ret
mov
cwtl
je
add
jb
cld
jne
roll
cmp
and
inc
ret
hlt
cmc
xchg
scas
push
and
adc
push
and
mov
cltd
fstpl
in
adc
or
lea
push
cltd
ret
push
add
insl
xchg
test
outsl
jge
add
movsb
sbb
stos
test
cmp
ds
imul
or
pushf
push
lock
adc
and
aad
mov
sbb
ds
jecxz
adc
jns
dec
lock
pop
pop
cmpsl
sbb
loopne
clc
ficoms
push
xor
mov
jo
rcrl
cmp
dec
sar
or
cmp
sarl
push
stos
inc
mov
in
adc
lcall
insl
sub
gs
dec
arpl
imul
mov
cmp
xchg
int3
hlt
inc
cmp
sub
lcall
and
xor
das
shlb
jns
icebp
repnz
outsb
ret
roll
jnp
js
push
xor
jbe
pop
push
and
dec
pop
and
out
xchg
lret
cmp
push
lret
jne
sbb
mov
mov
shlb
adc
inc
xor
rorb
nop
loope
loope,pt
nop
ret
xchg
inc
fistl
or
or
mov
lods
addl
or
adcl
cwtl
sub
shll
mov
mov
jnp
lret
stos
sbb
mov
test
add
pushf
push
push
adc
iret
add
mov
jmp
xchg
or
aas
ret
adc
notl
push
xchg
lcall
je
shlb
adc
lcall
imul
mov
lcall
roll
in
js
fcoms
mov
ret
sub
xchg
loopne
mov
adc
fidivs
mov
rorb
add
push
loopne
push
daa
push
or
lcall
gs
je
andb
outsl
dec
shll
jo
dec
test
xor
push
inc
outsb
popa
lcall
outsl
je
sbb
push
ds
outsl
arpl
jae
xor
inc
out
out
inc
dec
in
cs
outsb
lock
sahf
out
sahf
repnz
cmc
div
xor
hlt
jns
stc
dec
mov
fnstcw
dec
and
mov
inc
xchg
daa
rcr
push
inc
daa
jbe
je
mov
movb
je
aaa
mov
mov
push
mov
enter
inc
xchg
cmc
sub
pop
inc
inc
fidivrl
mov
xor
xchg
and
and
jecxz
ds
fs
imul
pop
xchg
movsb
sti
dec
rorl
pop
test
sbb
adc
jmp
sub
mov
xor
gs
shll
outsl
imul
and
push
imul
dec
sti
fidivrs
addr16
mov
popa
aad
out
imul
les
lcall
push
jae
test
imul
xor
outsb
push
add
aam
dec
imul
and
mov
test
push
xor
fcompl
mov
cmp
int3
test
nop
out
enter
inc
je
in
sahf
inc
jne
jb
imul
imul
pop
loope,pn
mov
cli
into
mov
mov
into
inc
pop
in
dec
cmp
xchg
and
mov
sub
movsl
mov
adcb
or
push
inc
shlb
push
arpl
sub
jne
mov
ret
or
sub
or
inc
sahf
push
and
jg
test
jne
ret
cmpw
jne
mov
add
cmpl
pop
fs
inc
push
ret
stc
mov
adc
cmp
shrb
cmp
je
insb
cmp
in
divl
adc
pop
cmp
ja
dec
jge
sbb
adc
jae
fsubrl
push
or
or
in
in
ffreep
inc
jmp
cmp
jb
pop
sbb
or
je
decl
clc
mov
jmp
mov
adc
addl
enter
jnp
add
sbb
in
cmp
push
adc
adc
add
inc
mov
shll
adc
add
aaa
mov
xor
insb
add
mov
adc
push
fcompl
adc
pop
push
mov
push
shrb
push
jns
outsb
je
jb
pop
imul
cmpsl
cmpsl
lock
icebp
ret
je
and
je
dec
daa
iret
repz
outsb
push
insb
shlb
imul
jo
push
jne
xor
ret
dec
outsb
rclw
je
call
enter
gs
mov
fs
cli
mov
jo
mov
and
sahf
out
outsb
je
jb
out
sahf
out
je
insb
outsl
cmpsb
imul
dec
popa
test
lcall
adc
mov
call
push
sbb
ret
lods
mov
and
rol
and
sbb
popa
pop
inc
scas
jmp
push
add
cmp
in
in
cld
and
ja
push
dec
cmp
push
aaa
mov
pop
outsb
sub
adc
popf
insb
mov
jbe
push
insb
movsb
jge
out
ret
adc
in
push
mov
fistpl
lahf
int3
inc
xor
jb
movsbl
cmp
je
ds
and
idiv
pushl
adc
leave
je
mov
inc
inc
jmp
andb
inc
or
xor
dec
ror
or
test
adc
sub
je
movb
repz
mov
inc
dec
mov
mov
push
push
inc
dec
jge
dec
cmp
dec
jne
mov
dec
inc
sub
add
sub
jmp
sbb
push
pop
mov
shl
jne
push
insb
inc
push
cmp
js
inc
clc
jge
clc
lcall
lcall
sub
mov
cmp
fstp
mov
inc
xor
adc
jmp
add
add
sbb
sbb
decl
add
clc
push
mov
mov
inc
inc
test
jne
pop
in
dec
dec
ret
cmp
and
lds
addr16
mov
je
aaa
inc
push
cmp
inc
push
jecxz
sahf
imul
xor
shll
je
imul
xor
shrl
inc
insb
jae
mov
loopne
notl
fmuls
pop
insl
inc
jo
push
add
pop
mov
pop
lods
idiv
dec
sbb
addl
sub
es
push
jns
lcall
imul
outsl
jb
mov
cmp
test
mov
aam
mov
les
or
jp
mov
loop
fisttpl
inc
cmp
pop
or
add
mov
mov
sbb
div
fistpll
mov
adc
sarl
ret
mov
jle
jb
and
hlt
das
movsb
mov
sbb
mov
cmpsb
lret
or
movl
test
xorl
inc
add
cmp
jb
jmp
mov
mov
std
jle
dec
movzwl
mov
orl
incl
cmp
jae
cmp
jb
push
mov
int
push
mov
cmp
push
mov
repnz
add
cmc
hlt
mov
sti
sbb
xor
inc
cmp
je
andl
push
rolb
das
imul
jmp
ret
dec
fsubs
ret
neg
mov
sbb
or
push
ror
mov
and
pop
clc
or
jmp
push
dec
adc
fdivrl
mov
jb
push
or
ret
popf
cmp
scas
clc
sub
mov
and
push
imul
jp
and
cmp
or
orb
in
or
add
je
xchg
mov
in
jo
xor
in
ljmp
sti
and
lcall
sbb
pusha
popa
iret
xor
mov
jmp
mov
xchg
jae
call
adc
and
pop
cli
in
inc
decl
jne
xor
inc
aaa
aam
sbb
stos
hlt
cli
imul
aaa
add
add
lds
cmp
lock
or
std
and
add
push
and
test
shlb
adc
jmp
je
ljmp
ds
imul
les
xor
fadds
insb
jmp
push
add
sbb
push
fldenv
roll
sub
and
jmp
fcompl
lcall
adc
mov
adc
pusha
in
incb
in
jecxz
movsl
es
add
lock
outsl
jne
dec
in
enter
aam
inc
or
adc
jle
inc
test
sub
mov
pop
rcr
pop
lock
shll
fnstsw
andb
add
or
addb
lahf
bound
cs
icebp
xor
popa
jo
in
pop
push
in
xor
and
cmp
pushf
mov
xor
stos
icebp
add
jmp
mov
imul
sub
mov
loopne
push
push
mov
lcall
imul
loopne
sbb
inc
bound
psadbw
mov
inc
data16
test
jae
mov
addb
mov
gs
sub
sbb
sub
add
sub
leave
ret
sub
nop
pop
adc
add
sbb
add
dec
jge
rolb
inc
cmp
into
and
mov
shll
je
dec
shll
ja
dec
movsl
shlb
imul
arpl
icebp
sub
jecxz
pop
sub
add
lret
stc
psadbw
sbbl
and
mov
xchg
xchg
cmp
lds
movsb
imul
test
sbb
add
mov
test
push
pop
xchg
sub
pop
mov
lea
jle
stos
sub
add
cs
lock
stos
sbb
ret
cmp
add
leave
or
cmp
repnz
lods
dec
imul
cltd
sbb
pop
bound
fisttpl
repnz
stc
xchg
std
mov
inc
pop
add
inc
sub
mov
mov
xor
stc
adc
les
xor
inc
int
call
xor
jns
imul
fimull
cs
jbe
inc
push
cmpsb
imul
ljmp
addb
dec
pop
rcll
xchg
ficoms
xchg
clc
inc
jbe
mov
gs
mov
rorl
scas
lcall
imul
aaa
call
imul
cwtl
or
jg
shll
mov
aaa
add
add
out
insl
mov
pop
das
push
sub
das
shrl
aaa
add
lahf
or
or
pop
rol
inc
orl
jp
dec
jo
mov
xchg
push
fildl
popa
push
test
inc
loopne,pn
or
inc
or
clc
divb
push
push
add
aaa
push
mov
mov
mov
std
or
rcrb
stc
dec
js
pop
mov
pop
push
push
add
push
cmp
push
rcll
or
mov
bound
call
mov
push
add
icebp
imul
popa
jmp
or
imul
loope
jbe
add
fimuls
mov
nop
mov
mov
add
push
or
jae
cmpl
adc
mov
movsbl
mov
mov
daa
loopne
idiv
sub
je
cmp
mov
loop
add
push
mov
jl
and
adc
jge
pop
and
add
pusha
daa
add
push
mov
pop
pop
iret
xchg
lock
mov
mov
test
fldcw
mov
mov
std
xor
enter
inc
push
and
out
pop
shlb
cmpb
sarb
sbb
inc
mov
fsts
push
cmpb
xchg
and
sbb
shlb
sub
add
sahf
xor
sbb
imulb
sti
mov
test
cmp
adc
adc
mov
mov
add
imul
or
jbe
mov
hlt
dec
stos
mov
push
clc
add
mov
push
mov
jge
xchg
leave
adc
outsl
mov
repz
add
pop
add
ss
nop
je
push
pop
inc
mov
add
hlt
data16
pop
mov
sarl
mov
les
push
sub
mov
cs
loopne
and
lahf
cmpb
inc
ret
sbb
adc
add
xchg
or
xor
test
stc
cmpsl
pop
jno
out
xchg
mov
dec
inc
jo
jg
repnz
add
cmp
or
add
push
xor
mov
sbb
cltd
fdivrs
xor
push
or
jb
movsl
data16
leave
std
mov
test
clc
clc
xchg
mov
adc
cmpb
sbb
aam
jnp
adc
jns
cmpsb
imulb
int
and
push
xchg
fdivrs
pop
test
push
andb
lea
fwait
or
pop
xor
je
push
xchg
push
or
shrb
push
jo
pop
or
cmpsb
dec
adc
shr
pop
push
cmpsb
add
xor
je
adc
jmp
pop
pop
adcl
jne
pushl
cmpsb
mov
mov
lods
test
and
aam
bound
jecxz
shr
popa
out
cmp
movsb
add
ret
inc
test
jmp
fisttpl
js
mov
repz
dec
mov
add
enter
movsb
imul
sbb
mov
imul
dec
shrl
imul
mov
and
sub
sbb
imul
jge
add
hlt
je
add
into
dec
add
mov
aaa
in
leave
mov
cmp
pop
xor
push
fldenv
pop
mov
stos
pop
dec
test
shl
dec
cmp
je
imul
cmp
adc
jb
push
lock
hlt
xor
jne
sbb
inc
or
jnp
pop
jo
xchg
int3
mov
test
mov
adc
add
cmp
int3
xchg
lret
imull
sbb
or
pushf
nop
lahf
add
xor
inc
and
sti
mov
add
insb
adc
push
push
ret
int3
jg
pop
mov
pusha
push
jb
pop
pop
push
in
mov
cs
jmp
scas
daa
mov
or
add
adc
pushf
push
mov
cmp
inc
testl
imul
pop
inc
add
push
pop
gs
or
jo
push
testb
jl
add
pop
or
mov
or
mov
addb
ret
mov
fs
ljmp
pop
out
out
out
fcmovnu
mov
jmp
dec
sub
addl
div
cld
dec
iret
imul
hlt
repz
push
fwait
les
mov
adc
dec
add
adc
mov
mov
push
jbe
fldl
daa
arpl
adcl
insl
insl
sub
rcr
sub
loope
daa
sbb
popf
and
xchg
xchg
inc
outsb
pop
cmpl
jae
jnp
stc
add
dec
fwait
daa
jo
mov
lods
cmp
jne
std
loope
mov
sbb
or
gs
sbb
out
out
idivl
xchg
divl
es
repz
fildll
out
in
push
out
lahf
addr16
filds
int
pop
das
mov
daa
jb
fnstcw
std
add
das
daa
jmp
dec
fs
out
out
xchg
js
mov
lcall
push
cmpl
add
jnp
rcrl
sub
cmp
call
inc
push
mov
pop
dec
add
push
mov
fidivrs
ljmp
push
emms
testl
lret
stc
mov
dec
jge
mov
lcall
mov
inc
jno
in
insl
add
push
call
push
icebp
inc
in
out
push
pop
andl
sbb
mov
lods
popf
popf
cmp
pop
cs
mov
add
mov
mov
data16
stc
ja
jg
out
inc
out
leave
shll
mov
subb
aas
mov
clc
shll
out
inc
pop
fbstp
ret
jbe
sub
dec
out
cmp
stc
mov
inc
fistl
mov
cmp
data16
pop
sti
repnz
sbb
dec
xor
out
dec
xor
in
ja
out
mov
xlat
sti
je
xor
jecxz
inc
fninit
pop
outsb
fucom
xchg
xchg
loope
orl
xchg
subl
xor
sub
xor
jge
pop
sub
fsubp
ss
and
add
stos
push
pop
mov
fisubl
add
pop
lret
and
scas
lcall
adc
call
scas
or
push
and
pxor
dec
push
add
push
jnp
add
loopne
sub
std
test
pop
xchg
scas
int3
iret
dec
xlat
cli
xchg
les
sti
std
lcall
aas
push
mov
lahf
xchg
sub
mov
pop
dec
push
push
fisubrs
and
xlat
push
xchg
add
xlat
bound
pop
ja
xor
sahf
xlat
xor
orb
incl
mov
insb
mov
sub
push
das
mov
lahf
jmp
add
out
dec
add
imul
lcall
fildll
xchg
loope
hlt
sti
xor
fsubl
popa
jg
mov
sub
out
adc
cmp
call
lahf
leave
xor
mov
or
jge
or
lock
xor
clc
push
mov
mov
jle
mov
leave
in
jmp
cmpsb
cld
aas
sub
test
in
xchg
loope
outsb
mov
fdivr
addb
push
sbb
and
leavew
sar
cmp
mov
and
xor
das
ret
xor
fs
dec
pop
and
je
in
ja
ljmp
add
popaw
jne
je
gs
gs
cs
js
xor
xor
outsl
mov
testb
arpl
outsb
cmp
outsl
data16
hlt
mov
pop
or
call
pop
mov
and
aaa
daa
push
push
dec
cmp
cs
out
sti
fstps
adc
push
call
mov
das
aas
dec
add
gs
and
decb
adc
js
push
mov
push
push
dec
mov
outsb
sub
pshufw
jae
jne
fs
sub
fs
enter
gs
xor
sbb
inc
dec
outsl
shlb
imul
out
jg
fadds
gs
je
push
push
mov
pop
inc
cmp
outsl
es
popa
pushf
sbb
push
dec
cwtl
je
sbb
daa
push
push
push
pop
or
je
jbe
mov
or
je
sub
push
btc
push
mov
inc
addr16
add
mov
popa
das
xor
xor
inc
arpl
jo
inc
outsb
arpl
push
inc
addr16
and
mov
cltd
dec
cwtl
inc
inc
lods
popa
jne
mov
mov
xor
sub
imul
sbb
data16
js
js
imul
test
jo
imul
popa
mov
jae
mov
insb
xor
ja
jb
pop
lods
rolb
je
sub
ret
shrl
and
xor
xor
negb
ficoms
mov
push
jns
mov
pusha
mov
popf
pop
ja
sub
je
adc
jb
sbb
mov
stos
addb
adc
enter
inc
add
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
jmp
xor
imul
outsl
dec
jne
je
jg
inc
jns
gs
gs
imul
bound
jae
daa
cmp
gs
jo
popa
je
inc
sbb
cs
data16
mov
fs
popa
or
fisubrs
and
subb
push
push
gs
inc
jne
imul
je
mov
dec
fs
outsl
dec
shlb
pop
inc
jb
jns
inc
jb
std
mov
jp
inc
insb
outsl
jae
dec
popa
outsb
fs
xor
outsl
mov
jo
insb
inc
rcrl
sub
dec
outsl
fs
ja
xlat
in
mov
lock
add
outsb
inc
adc
repz
jo
adc
mov
div
inc
inc
adc
je
jl
push
arpl
push
pop
cmpsb
loopne
insb
inc
in
inc
outsl
inc
push
jp
dec
insl
clc
das
xor
and
jae
insb
or
inc
xor
pop
mov
jae
jo
je
pop
outsb
into
jle
int
jae
imul
popa
in
jae
insl
je
xor
xchg
pop
jne
adc
hlt
imul
mov
insl
or
jae
mov
mov
jne
in
scas
xor
push
mov
popa
outsb
xchg
xchg
movups
outsb
cmp
ja
jae
mov
out
push
nopl
xor
sub
mov
jb
or
notl
xor
enterw
xorl
sbb
pop
in
jo
pop
push
jbe
mov
inc
outsl
mov
jo
jo
imul
js
or
gs
insb
arpl
aas
aas
xor
inc
push
inc
divl
pop
out
xchg
sub
pop
sub
push
mov
lret
push
jnp
xor
mov
imul
pop
jo
shlb
popa
push
outsb
push
add
imul
stos
xchg
js
and
fimull
sahf
inc
dec
mov
insb
popa
sub
sbb
mov
in
cmpb
jno
jne
jbe
inc
xor
adc
test
push
repz
fstl
add
or
fbstp
xor
xor
xchg
call
jo
or
adc
push
pop
or
and
sub
or
push
sbb
dec
or
adc
sbb
adc
push
cmp
or
aaa
add
mov
push
jbe
incl
xor
adc
push
sub
or
adc
push
sbb
or
adc
add
add
push
ljmp
or
adc
sbb
pop
adc
es
or
dec
pop
push
lock
movq
and
cmp
sbb
push
dec
or
adc
jnp
out
mov
or
and
xor
sub
nop
insl
mov
adc
mov
or
pop
push
or
push
or
ljmp
rcr
push
or
adc
adc
or
inc
add
lock
pop
or
fcomip
add
pop
push
add
gs
pop
and
sbb
lock
xchg
or
sbb
cmp
movsb
rclb
cmp
lock
je
adc
adc
adc
mov
aaa
adc
sbb
test
or
or
or
pop
or
cmp
push
or
lock
movsb
sbb
inc
and
push
or
adc
daa
jno
sbb
add
or
cmovns
sub
or
and
and
add
push
sbb
cld
sahf
decl
push
or
sbb
pop
push
adc
sbb
sbb
cmp
sbb
insl
jge
cmp
add
addl
aaa
fcoml
xchg
or
dec
and
adc
pop
cld
fildl
cmp
and
inc
adc
enter
incl
mov
les
pop
push
add
or
das
clc
faddl
rcll
and
jno
mov
xor
sbb
or
dec
adc
insb
clc
aas
or
or
cmp
insb
stc
add
cs
mov
mov
fmull
sbb
push
adc
inc
pop
jl
pop
inc
sbb
add
lock
add
push
push
pushl
mov
dec
add
adc
or
lock
adc
clc
aaa
inc
inc
inc
dec
add
dec
imull
mov
and
xor
pusha
data16
out
lods
mov
movsl
dec
or
adc
insl
outsb
fistpl
popa
sbb
fcmovnu
in
cmp
nop
js
pop
adc
jb
leave
in
dec
test
shlb
or
pop
jl
push
je,pn
push
xor
pusha
add
sub
add
je
imul
or
dec
fs
ficomps
dec
fdivs
gs
and
or
shrb
insl
popa
outsl
push
mov
mov
add
out
gs
or
add
fistpl
inc
inc
es
repz
xchg
lock
mov
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
