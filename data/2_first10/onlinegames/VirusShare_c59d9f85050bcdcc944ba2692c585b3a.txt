sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
into
lret
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
and
cld
push
sbb
lahf
insl
jbe
clc
push
mov
jbe
lods
mov
jbe
adc
inc
dec
push
jbe
fmull
test
push
jbe
clc
movsl
or
push
popl
jbe
or
shl
and
cmpsb
or
inc
into
xchg
std
push
lock
sub
lock
and
mov
jae
adc
das
std
outsl
stc
aaa
push
push
adc
lock
sti
aaa
push
call
jne
fldl2t
cmpsl
lock
sub
leave
aas
add
aas
stos
or
lahf
enter
push
cld
outsl
and
dec
cld
or
xchg
inc
std
pusha
cld
sub
xchg
gs
jae
mov
dec
shlb
dec
pushf
cld
or
call
cld
leave
mov
gs
es
testl
xchg
gs
xchg
popf
xchg
jg
pop
pop
xchg
gs
inc
sub
sub
xor
dec
fxch
mov
sub
test
inc
xor
daa
sbb
stc
dec
in
xchg
gs
rol
mov
lea
xchg
subl
gs
xchg
and
cld
pop
adc
pop
xlat
ret
and
xor
inc
gs
xchg
gs
popa
jae
lahf
mov
gs
xchg
ret
xlat
jmp
or
xchg
gs
cld
cmp
push
repnz
lea
inc
push
xchg
inc
xchg
insl
clc
arpl
pop
imul
xchg
inc
mov
fwait
cld
xchg
gs
xchg
xchg
pop
push
dec
xchg
gs
xchg
inc
cmp
and
pop
adc
std
mov
pop
xchg
gs
int
pop
push
inc
ds
and
cmp
imul
pop
mov
dec
popf
xorl
jmp
pop
xchg
lcall
jmp
mov
adc
fwait
pop
mov
dec
test
xchg
rorl
and
scas
insb
mov
mov
out
outsl
sub
xchg
inc
out
outsl
in
mov
xchg
jg
mov
stos
add
aas
dec
stos
mov
mov
dec
and
add
repnz
cmpsb
lods
mov
stos
test
lods
mov
jl
fwait
lea
cltd
mov
pop
fbstp
test
test
out
cwtl
cwtl
cld
pop
lret
scas
mov
les
dec
jg
loopne
mov
mov
idiv
cld
out
xor
mov
lahf
mov
leave
cld
mov
fidivrs
call
fists
cld
mov
fbld
and
cld
or
ficomps
cld
lcall
stc
mov
cmp
cld
mov
rorb
testl
bnd
nop
jno,pt
mov
jle
test
clc
incl
pop
adc
cld
mov
insb
mov
js
mov
mov
lods
cmp
stos
jp
cmp
out
scas
lock
dec
mov
ficoml
clc
inc
daa
cwtl
dec
fucomip
mov
test
das
in
pop
xchg
adc
decl
sub
lock
sbb
mov
sub
ficomps
mov
push
adc
test
loopne
rcl
add
add
fbstp
hlt
mov
and
jmp
xchg
cwtl
lock
fs
in
iret
int
cld
cmpb
dec
mov
ljmp
jnp
dec
cs
jmp
mov
imul
hlt
mov
mov
lea
stos
sar
scas
test
xor
mov
out
pop
cmc
clc
mov
stos
rcrb
mov
push
dec
int
into
cld
aas
sti
in
xchg
cs
aam
frstor
outsb
movsb
sahf
xchg
clc
cld
xchg
jnp
mov
cld
jle
call
fs
and
mov
pop
je
add
add
xor
mov
clc
jb
pop
inc
stc
pop
in
dec
mov
clc
mov
stos
dec
pushf
dec
add
jbe
pop
cli
dec
mov
out
jg
hlt
jl
scas
sub
testb
imul
repz
gs
fldt
mov
hlt
inc
xor
sub
in
stc
out
sub
outsl
repnz
push
cmc
inc
enter
enter
das
je
leave
outsl
repnz
cld
cld
sahf
jb
and
dec
sub
pushf
xchg
cld
stos
cmpl
lock
add
test
and
jl
inc
cmp
cmp
int
hlt
dec
sbb
cmp
into
hlt
nop
dec
or
add
xor
mov
cmp
das
and
sub
and
addb
sub
dec
loopne
xor
test
push
fdivp
inc
push
xor
stc
inc
sub
cmp
or
in
xchg
fwait
mov
mov
lock
sahf
jmp
loope
mov
sbb
ds
testl
sar
adc
xor
xchg
mov
xchg
xchg
fs
mov
adc
cld
pushf
hlt
clc
pushf
lock
or
mov
add
lock
rolb
jno
test
pusha
push
hlt
pop
out
adc
and
dec
sbb
arpl
mov
adc
push
rcr
fwait
xor
xlat
fldz
pop
adc
pop
std
iret
cmpsl
cmp
repz
xchg
dec
lahf
out
dec
jge
cmc
xchg
push
out
pop
ficompl
xchg
mov
and
rcrb
jp
mov
aam
scas
xlat
jmp
mov
xchg
cmpsb
std
hlt
cmpsb
mov
in
xchg
fs
xchg
sbb
mov
add
int3
int
adc
stos
push
xlat
cmp
test
lcall
xchg
in
nop
orb
ja
push
test
or
iret
dec
mov
je
mov
ja
loopne
shlb
out
addr16
mov
fisttps
scas
mov
xchg
push
shr
jge
rolb
mov
repnz
test
add
jle
sti
push
mov
ret
sub
ds
divl
into
mov
jl
sti
mov
inc
ljmp
mov
je
push
jbe
and
ja
jl
add
mov
push
xchg
pop
xchg
adc
sbb
sti
adcl
mov
xor
ja
jmp
fucom
push
in
cs
pop
es
add
fisubrs
add
add
aas
adc
stc
lods
ds
std
test
jbe
dec
jb
lret
ja
insb
pop
test
push
into
jl
jle
test
daa
pop
sbb
xchg
pop
pusha
xchg
pop
push
clc
jle
aam
or
jmp
adc
scas
cmp
push
jbe
push
pop
cmp
daa
add
neg
jl
cli
jbe
dec
cmpb
dec
movsb
roll
pop
dec
jge
cld
pop
cmpsb
xor
adc
sbb
sti
pop
movsl
popf
mov
fcmovbe
and
and
cmp
in
jl
mov
faddp
ret
mov
mov
in
ja
loopne
int3
add
mov
sbb
jmp
test
xlat
and
ss
dec
out
in
jl
mov
inc
clc
xchg
lock
and
lock
mov
lock
adc
clc
f2xm1
repnz
cli
loopne
add
mov
jbe
xchg
cld
adc
arpl
rcrl
adc
sti
xor
pop
dec
jecxz
repnz
das
dec
daa
test
jb
or
and
out
mov
divl
mov
xlat
movsl
cmp
xchg
pop
test
imul
je
jb
mul
movsb
test
and
jge
insl
repnz
fists
neg
cld
imul
divb
insl
scas
test
je
aam
mov
xchg
jbe
pop
aad
pop
pop
jle
iret
test
cmp
std
lock
out
dec
lldt
mov
adc
out
add
add
jne
mov
scas
test
test
scas
cwtl
int3
mov
pop
notb
mov
pop
imulb
ret
and
xchg
in
mov
sub
mov
sub
out
jo
and
adc
push
je
iret
lahf
sub
mov
push
xchg
lcall
movsb
aad
rcrb
and
xchg
and
enter
sti
jge
je
aam
jl
cmp
xchg
call
cli
jl
repnz
xchg
test
jb
mov
int3
jmp
nop
inc
pop
test
mov
jnp
sbb
jecxz
push
enter
arpl
mov
nop
out
repnz
hlt
mul
jge
pushf
xchg
push
or
inc
jae
jge
popf
xchg
fistl
icebp
pop
dec
movsb
jecxz
xchg
inc
lock
mov
popf
and
repz
mov
jne
fdiv
pushl
bnd
iret
loope
jmp
and
pop
inc
addr16
cmpsb
je
lods
daa
out
mov
das
jle
pop
inc
mov
mov
clc
testb
out
dec
out
jge
out
inc
in
jbe
jge
pop
inc
sahf
mov
iret
inc
inc
jg
call
sti
cli
imul
je
fistl
out
cltd
jle
pop
pop
ds
inc
mov
cld
xor
jge
insl
mov
push
insl
push
sub
in
fstpt
jnp
es
insb
push
ljmp
in
das
cmp
pop
test
jg
cli
into
add
fcmovnb
sub
dec
fs
incb
fstl
jno
jecxz
sbbl
aam
je
or
in
ljmp
mov
test
out
jb
das
clc
popa
pop
icebp
pop
in
jp
add
xchg
jl
jb
pop
adc
or
pop
lcall
xor
inc
sub
ror
pop
out
aas
inc
in
dec
dec
stc
adc
out
pop
lock
and
call
cmp
mov
adc
inc
dec
repnz
sub
inc
loopne
mov
pop
inc
lock
out
dec
arpl
xor
mov
jp
jge
or
mov
jmp
pop
mov
imul
popf
pop
cmc
sub
push
sbb
xor
jns
or
incb
je
hlt
and
testl
fs
pop
cmpsb
mov
fists
clc
pop
xchg
sbb
movsb
adc
out
mov
test
std
dec
sub
jno
jno
mov
loop
adc
lea
andb
sbb
xchg
ljmp
push
sub
idiv
sub
in
mov
cltd
jl
mov
add
lret
xchg
jl
std
test
add
movsb
sarl
add
jl
pushl
cli
jecxz
in
cmpsl
jb
jnp
jno
xchg
dec
jb
jge
int3
jmp
sbb
sub
stos
lock
xchg
cli
add
dec
xorb
enter
lds
mov
fsubrp
fstps
bound
fiadds
jne
cld
mov
aam
sub
jo
lea
and
repnz
pop
pop
aas
adc
scas
and
and
psubb
cld
cmp
and
fmul
jne
lahf
test
les
sbb
notl
aam
aas
testb
das
repz
iret
xlat
in
outsl
pop
incw
jnp
aaa
insb
mov
into
or
lea
iret
mov
jle
outsl
into
jae
mov
int
or
jo
jl
lcall
jnp
mov
mov
iret
arpl
pop
jge
adc
fadds
mov
inc
negl
notb
mov
pop
stos
ja
repnz
test
mov
jge
pop
cli
mov
in
in
in
sbb
dec
adc
fsubp
into
cmp
add
push
mov
cmp
pop
popa
jecxz
pushl
jns
dec
sbb
ja
ja
adc
in
jno
popa
pushf
ljmp
mov
divb
nop
pop
adc
xchg
fwait
stos
out
mov
dec
sbb
or
xchg
shl
xchg
jmp
jl
jb
clc
icebp
xchg
xor
std
out
jmp
push
pop
xor
repz
inc
popa
mov
add
or
mov
or
or
sti
bound
xchg
add
js
mov
xor
add
aaa
mov
xchg
addr16
scas
outsl
xor
ds
mov
jb
mov
dec
repnz
jle
push
icebp
push
jge
mov
lret
dec
in
pop
dec
or
movsb
push
call
mov
xchg
adc
mov
xchg
jbe
out
mov
les
pop
or
and
jmp
mov
jnp
les
int3
jbe
xchg
add
movsb
movsbl
je
fsubrl
xchg
mov
int3
das
add
je
les
repnz
fwait
xchg
and
mov
rorb
mov
cwtl
cmpl
les
jl
out
out
add
scas
fisubl
hlt
and
aas
inc
or
cmp
je
push
jbe
cmp
pusha
inc
pop
add
jle
or
inc
sbb
adc
cmp
les
mov
ljmp
xor
mov
nop
movsb
add
idiv
adc
jl
lock
jmp
mov
hlt
sti
and
loopne
jb
enter
hlt
aas
push
cli
push
out
cmp
sub
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
and
add
int3
sub
hlt
cmp
roll
enter
imul
mov
push
and
mov
dec
mov
xor
jns
out
inc
aam
inc
mov
push
out
mov
jnp
popa
test
jecxz
sarb
rol
mov
les
push
cli
mov
repz
pop
mov
cs
sub
push
fistps
add
jne
fdivrl
cmp
test
ds
jl
stc
xchg
and
xchg
out
hlt
mov
cmp
mov
pop
dec
shlb
cmpsl
push
std
pusha
fdiv
sti
mov
mov
adc
je,pt
or
push
mov
fisubl
cld
das
mov
cld
sub
cltd
mov
cmp
mov
fimull
dec
dec
xchg
dec
fs
aaa
div
movsb
cmp
jo
jp
ret
mulb
enter
mov
insl
test
nop
push
in
xchg
jmp
test
enter
in
and
clc
and
cmp
aam
into
sti
aas
leave
inc
dec
sub
sti
jns
mov
scas
out
inc
adc
adc
ja
jge
data16
mov
stos
push
inc
mov
mov
pusha
jg
decl
in
jne
xchg
std
push
mov
idivl
out
jne
sub
scas
mov
ja
fsubrp
out
js
sbb
out
les
scas
dec
jnp
cmpsb
out
push
out
icebp
mov
lea
in
jne
in
out
hlt
mov
jge
push
scas
or
mov
jne
movsl
push
mov
test
hlt
add
ss
lock
into
fnstcw
jns
add
sti
into
cmpl
aad
rolb
mov
hlt
jle
fdivrl
dec
add
jbe
imul
mov
int
fucomip
repz
add
xchg
ss
in
std
fidivrl
mov
jmp
std
mov
inc
mov
pushf
dec
je
je
ds
ret
jl,pn
rol
mov
add
adc
mov
aaa
loop
mov
push
ss
dec
mov
lods
jbe
sub
jecxz
cmp
test
divb
stc
call
mov
mov
xlat
or
cmpsl
add
jne
aas
sti
ds
cmp
sbb
divl
pop
push
inc
mov
das
shll
icebp
cmp
sub
mov
cli
je
inc
cmpsb
mov
pop
inc
cmp
or
faddl
icebp
subl
or
add
out
jb
call
jns
movsl
add
sub
adc
sti
cld
add
adc
add
hlt
or
cld
out
inc
ud1
dec
cmp
or
adc
test
sub
mull
mov
cli
cmpsb
jmp
and
inc
dec
adc
ds
jmp
pcmpeqb
fsubl
or
mov
pop
add
mov
ror
adc
inc
xor
hlt
or
or
add
mov
inc
cld
and
imul
lock
je
adc
pop
push
mov
jmp
stos
inc
andl
xchg
repnz
in
stos
inc
inc
dec
sub
cmp
je
and
cmpsl
out
sub
mov
cmpl
sub
and
inc
push
mov
pop
jb
sub
fisubl
aam
mov
mov
ror
loope
push
add
or
push
pop
aam
adc
out
aam
arpl
fnstcw
ds
and
xchg
jl
lret
pop
daa
daa
addr16
adc
sub
das
and
nop
and
and
xlat
loopne
or
dec
jb
rclb
sub
mov
xchg
aad
xlat
aas
sti
dec
movsb
stos
xchg
pusha
sbb
out
sar
aad
lret
sahf
daa
stc
sub
and
daa
cli
inc
sub
inc
mov
pop
adc
stos
cmp
fcoml
sub
out
outsl
xchg
adc
sub
cltd
push
icebp
xchg
repz
and
dec
or
mov
push
push
mov
cld
stos
add
add
sub
dec
enter
mov
xor
smsw
jno
xchg
movsb
je
ret
int
cmc
movsb
fisubs
mov
repz
cld
sub
and
cmp
and
adcl
pop
dec
adc
cmp
fsubl
sub
je
popf
or
loop
mov
cli
hlt
sub
loope
lret
pushf
andb
mov
xchg
stc
dec
and
imul
daa
cld
or
jmp
or
movsl
mov
sti
mov
ds
inc
stos
cmpsl
and
cmp
in
xchg
rcrb
adc
dec
mov
jmp
dec
push
test
mov
jae
push
ds
lock
push
je
daa
dec
jae
adc
jns
jns
jmp
std
lahf
jo
das
inc
dec
push
mov
fisubl
jle
pop
insb
pop
cmpsb
inc
daa
sub
icebp
pop
jp
dec
mov
daa
es
dec
shll
aam
sbb
sub
xorb
and
sub
and
das
xchg
lcall
ficoms
outsb
pop
dec
cmp
dec
popf
aaa
jo
clc
hlt
shrb
dec
enter
jo
in
cmp
mov
iret
xor
jno
js
sub
sub
icebp
lahf
nop
pop
cli
negl
imul
pop
je
jmp
mov
and
lret
and
and
loop
dec
cli
push
sbb
xchg
jo
dec
sysret
push
mov
int3
pop
pop
adc
scas
inc
rorb
or
addl
test
es
nop
cwtl
sub
and
mov
sub
sbb
jl
cmp
aad
jae
test
sbb
mov
das
out
push
movsb
xchg
lahf
jecxz
sti
push
js
xchg
push
add
int3
add
jno
adc
ljmp
mov
rcr
bound
repnz
mov
int3
lret
bnd
mov
sbb
fildl
test
dec
adc
imul
push
mov
adc
xor
imul
xor
mov
push
ljmp
or
dec
sub
cwtl
loope
call
pop
mov
add
imul
popl
inc
inc
sbb
and
shl
jno
iret
cmp
inc
scas
inc
mov
jno
cld
cmp
mov
xor
sbb
cmp
mov
cwtl
int3
and
cli
and
iret
adc
and
sbb
jb
and
push
xchg
lcall
cli
loop
sti
adc
notl
sub
shl
sbb
shufps
xchg
cmp
cli
push
and
inc
or
dec
or
leave
lods
sbb
movsl
clc
lcall
xchg
ret
lcall
lcall
jae
repz
in
sub
out
mov
fst
push
das
in
push
stc
hlt
loope
movsb
xchg
xchg
push
out
int3
jg
shl
call
aad
bnd
sbbl
lock
fsubrl
out
test
xchg
cmp
inc
mov
pop
insb
add
dec
gs
adc
loop
into
push
push
sub
and
pop
int3
shrb
cmp
movsb
lcall
sbb
icebp
and
xorb
xrelease
fidivrs
mov
mov
es
addb
or
add
mov
or
sbb
out
adc
mov
pop
out
sbb
adc
mov
push
adc
cs
test
push
nop
mov
push
inc
and
test
push
sub
mov
out
sbb
add
cmc
test
jns
nop
lahf
jle
loope
mov
loopne
out
mull
rorl
mov
subl
sub
sub
daa
pop
xchg
movsl
test
or
adc
daa
pop
or
inc
pop
and
sub
aad
cmpsl
iret
xor
lock
dec
pop
movsb
inc
dec
mov
je
lods
add
shll
adc
mov
xchg
mov
imul
je
repz
rep
dec
mov
cmc
xlat
or
xchg
lahf
add
xchg
or
les
cmp
xchg
aam
test
xchg
jae
in
scas
or
in
test
or
addb
pop
cmpsl
add
dec
scas
pop
repnz
jb
xchg
jge
mov
cmpsb
mov
mov
scas
inc
adc
xor
out
icebp
clc
out
das
bound
and
out
movsl
jge
jb
test
mov
sbb
scas
int
bound
out
pusha
sbb
mov
daa
lods
movsb
dec
scas
pop
out
incb
icebp
xabort
pop
js
adc
enter
addb
mov
mov
jecxz
sbb
xchg
or
cld
mov
pop
ljmp
fsin
pop
adc
in
push
pop
mov
jno
insl
cld
dec
in
lods
add
sub
and
aas
cmp
jmp
in
stos
cmpsb
imul
mov
cmc
sti
jo
xchg
inc
test
aaa
add
xchg
cmc
push
leave
xchg
pop
mov
mov
cs
repnz
jecxz
cmpb
mov
dec
xor
test
loopne
lods
jmp
adc
jo
and
dec
jecxz,pn
repnz
jno
inc
mov
adc
cli
out
das
cltd
dec
das
xchg
mov
stos
scas
repnz
orl
daa
lcall
and
sbb
mov
sbb
nop
ret
inc
mov
adc
idivb
xlat
in
sub
mov
jbe
mov
mov
pushl
jmp
jl
pop
outsb
rolb
mov
dec
adc
cmc
leave
movsb
xchg
imul
dec
jmp
test
mov
fbstp
ficompl
jl
das
inc
hlt
jecxz
mov
sub
xchg
je
enter
xor
xor
out
ja
pop
cmp
pop
les
jb
xor
or
shlb
notb
test
addr16
fstpt
lods
scas
loope
xor
mov
out
jne
jmp
cmp
cs
inc
inc
pushl
xchg
inc
lock
dec
test
repz
cmp
test
fstpt
cmp
test
cmpsl
lods
sarl
into
sbb
sub
mov
mov
add
inc
sti
cltd
loope
lea
lds
add
and
cltd
je
sti
cltd
ret
mov
cli
dec
leave
mov
sbb
xchg
pop
in
fsubl
and
sub
and
test
sub
cmc
clc
mov
or
pop
jmp
sub
and
inc
pop
mov
clc
xchg
lods
pusha
dec
dec
dec
repnz
and
test
mov
mov
add
mov
mov
mov
sti
ret
rorb
out
inc
outsb
xor
js
lock
pop
jg
cmp
nop
pushf
mov
pop
xor
mov
mov
push
arpl
jecxz
and
in
fildll
mov
sub
jg
aaa
jbe
sub
icebp
fdivr
ds
add
mov
add
jmp
ret
push
and
aam
mov
push
inc
lret
sub
jmp
std
jp
lahf
cmp
and
dec
dec
out
iret
jno
jnp
add
movsb
dec
out
inc
out
mov
jecxz
int
loop
outsl
icebp
cwtl
rolb
jno
bound
les
test
jl
scas
bnd
repnz
hlt
loop
nop
jecxz
dec
cs
mov
lret
fsubrs
dec
fisubl
adc
add
pop
or
cli
stc
pop
add
jnp
rolb
dec
lahf
dec
testb
out
xchg
das
fwait
iret
add
dec
inc
and
and
loopne
adcb
test
or
iret
sub
pop
or
sysret
outsl
filds
push
inc
push
jge
je
arpl
repz
ds
or
mov
nop
lods
add
mov
dec
fimuls
pushf
mov
pop
xchg
enter
mov
outsl
std
ds
pop
xchg
and
stc
call
pop
xor
out
aas
jle
fstl
dec
es
jb
mov
imul
testb
or
adc
cli
pop
xlat
mov
lock
inc
ret
std
mov
mov
add
lods
shr
inc
mov
insb
out
test
mov
clc
mov
cmpsl
lods
out
jbe
test
jmp
filds
jecxz
ret
inc
mov
and
dec
cmpl
add
push
inc
icebp
xchg
mov
cltd
inc
ja
shrl
iret
xchg
mov
push
and
cld
push
mov
xchg
xor
lea
cwtl
dec
test
dec
inc
mov
scas
dec
lea
inc
mov
mov
lea
inc
hlt
inc
faddl
cld
inc
xchg
in
in
push
ja
inc
daa
lcall
xchg
nop
lea
xor
lcall
jmp
int
and
lods
xor
shll
sahf
xchg
xchg
mov
aad
sub
inc
adc
adc
jp
or
aas
sarb
sub
xchg
or
cmpsb
imul
iret
iret
iret
lahf
movsb
imul
imul
jne
mov
push
bound
fildll
stc
sub
movsb
sub
das
nopl
fcoms
jg
mov
and
int
out
ljmp
cli
and
gs
or
js
int3
lahf
call
adc
cltd
shll
leave
push
cltd
test
mov
xchg
pop
into
stos
add
cld
adc
and
mov
sub
fidivs
jne
add
movsl
dec
test
int
jo
dec
hlt
aas
inc
push
sbb
jb
aam
cs
es
shrl
cwtl
mov
in
loopne
dec
cmp
mov
repz
dec
pop
fldt
add
and
add
insl
shl
cmc
subb
les
mov
imul
or
push
push
adc
enter
stc
aas
xchg
or
es
jecxz
inc
dec
jp
add
inc
stc
sbb
iret
push
aad
sbb
repz
fsubrp
dec
pop
repz
ss
or
mov
add
iret
jp
xchg
lret
shl
dec
loopne
cmpsl
ret
out
mov
mov
data16
push
icebp
mov
pop
stos
icebp
cmp
jne
xor
jmp
ja
jae
rcrb
scas
mov
leave
imul
inc
and
into
jp
mov
out
jmp
fdivr
dec
in
xchg
fwait
out
movsb
pop
pop
mov
inc
jge
not
fstl
std
repz
adc
cmpsb
inc
push
inc
iret
dec
inc
rcl
negl
push
stos
icebp
mov
outsl
iret
mov
xchg
inc
inc
xorl
jge
and
add
mov
ret
inc
cmp
decl
pop
xor
and
out
xor
pop
cld
movsl
dec
mov
jl
jmp
dec
xchg
mov
lret
mov
xchg
jbe
rcrl
in
mov
test
and
pop
mov
std
cmc
and
and
fistps
decl
enter
lcall
mov
in
mov
pop
ljmp
mov
jnp
in
cli
and
jl
fisttpl
fists
sahf
inc
xchg
sbb
pop
mov
out
lods
cmp
pop
cli
aas
in
and
orb
imul
jmp
cmp
cmpb
xchg
dec
cmc
pop
rorb
mov
fcoms
pop
scas
test
out
int
and
mov
push
and
popa
push
ja
adcl
mov
push
pop
imul
xchg
shll
aas
jmp
cmc
sbb
in
lahf
jg
add
mov
jnp
lock
inc
je
out
out
dec
mov
fidivl
mov
xchg
and
cmpsb
cmpsb
out
div
mov
lahf
inc
je
xchg
xchg
pop
arpl
int
jp
std
pushf
ja
test
ret
push
adc
xchg
rcrb
mov
add
outsl
sub
dec
hlt
jg
mov
jecxz
stc
pop
xchg
arpl
out
adc
jl
in
loope
imull
add
fstps
out
inc
scas
xchg
fwait
xchg
jb
enter
imul
ljmp
mov
clc
pop
fistpll
or
or
pop
jg
xchg
jg
cmp
fistpll
cs
mov
push
sti
insb
pop
fcomi
mov
pop
cld
adc
add
and
push
adc
gs
pop
jbe
jns
les
pop
psubusw
mov
je
cmp
pop
or
pop
fdivrl
mov
lret
in
rcrb
insb
int3
lea
leave
ja
cs
jmp
xchg
std
mov
testl
sahf
jne
ror
ss
data16
or
clc
addr16
jl
imul
popa
jg
xchg
test
add
test
mov
fwait
outsl
mov
xchg
xchg
outsl
jecxz
sarl
and
ret
or
in
and
aam
js
shrb
in
sbb
mov
cld
hlt
daa
loope
ret
jp
jmp
jb
das
gs
sar
lods
fiadds
jmp
push
and
aas
test
mov
test
cmpsl
push
pushl
lea
out
inc
mov
xorl
shrb
xchg
mov
mov
mov
jp
out
cmp
xchg
hlt
popf
jmp
jmp
in
loop
sub
daa
xor
adc
xchg
loopne
in
in
mov
jb
imul
or
lcall
sub
imull
out
fmuls
or
aas
loop
cmp
icebp
repnz
out
lock
adc
jmp
sub
jmp
ja
out
pop
addr16
fisttpll
cmp
into
testb
lahf
or
jp
or
and
jecxz
out
out
pop
mull
stc
fisttps
in
xchg
jge
and
repnz
cltd
inc
scas
jb
mov
mov
repz
pop
push
pop
xlat
jle
mov
leave
repz
aam
mov
xchg
ja
loopne
scas
mov
and
jle
jb
cld
ficompl
pusha
inc
lcall
test
ret
pop
mov
sahf
or
icebp
jle
xchg
sub
aad
adc
jecxz
add
pop
dec
hlt
fsts
adc
std
jno
xor
add
push
out
imul
xchg
cmpsb
mov
jmp
rcrb
mov
push
js
jge
clc
pop
dec
xchg
push
pop
stc
xchg
adc
ja
scas
das
sahf
test
inc
test
scas
es
pop
mov
pop
lret
xor
adc
popf
lret
jo
xchg
jo
gs
aas
mov
sub
jnp
mov
inc
jae
mov
push
dec
pop
xchg
daa
mov
rcll
movsl
sarb
mov
addr16
lea
fisubl
fldenv
popa
xchg
inc
push
push
in
pusha
pop
hlt
pop
in
pop
mov
pop
mov
mov
in
pop
pop
pop
pop
mov
sub
mov
in
push
push
push
push
clc
push
call
push
push
dec
lock
call
lret
mov
dec
dec
push
and
in
inc
inc
pop
inc
in
inc
xchg
mov
inc
sbb
ds
mov
cmp
cmp
mov
aad
cmp
push
mov
ret
xor
rolb
push
inc
xor
mov
push
adc
sub
sub
sub
sub
daa
in
inc
push
es
inc
and
adc
and
and
rcrb
fld
lret
mov
repz
xchg
int
fisubl
adc
gs
xchg
mov
fcoms
in
adc
xchg
pop
push
inc
or
in
stc
inc
test
out
pop
push
mov
push
jle
pop
add
push
xchg
cmp
mov
dec
pop
in
fistpll
aas
sbb
cli
inc
jge
cmp
pop
push
inc
jno
xchg
push
and
hlt
xchg
rcl
cwtl
inc
test
shll
mov
daa
mov
adc
negb
je
stc
out
cmp
das
outsl
sub
repz
daa
daa
or
cli
mov
jo
xchg
aam
stc
mov
scas
scas
ss
jmp
call
pop
mov
lock
cmp
and
mov
dec
insl
out
imul
pop
pop
push
sub
fisubrs
cld
adc
inc
cltd
jbe
pop
push
mov
mov
sti
ret
scas
addr16
xor
jo
mov
stos
test
mov
adc
aam
out
cld
stc
mov
jge
iret
pop
and
mov
fmuls
shlb
test
ss
lods
xchg
mov
psubb
out
xchg
cli
test
cmp
das
clc
aam
mov
loopne
cmp
orl
adc
cmp
int3
je
add
jbe
imul
bound
jns
rcrb
arpl
aaa
leave
outsl
inc
adc
add
jb
in
test
dec
in
test
cld
mov
icebp
fidivrs
cmp
ret
fwait
aas
div
sarb
cmp
scas
aaa
scas
out
lods
stc
daa
dec
xchg
clc
dec
cmp
js
cmc
aaa
std
xor
movsb
hlt
std
sub
and
cs
std
xchg
sub
mov
clc
inc
mov
out
inc
xlat
lret
mov
daa
test
popl
adc
dec
mov
sti
lcall
mov
lret
jbe
mov
in
xchg
rorl
dec
adc
loope
jg
mov
mov
movlps
inc
and
mov
jb
adc
sub
out
pop
fisttps
cli
cmp
add
je
or
test
rorb
or
mov
adc
sub
or
aad
jmp
mov
mov
xchg
mov
int
sub
mov
mov
scas
scas
test
adc
aas
leave
jecxz
lods
in
outsl
cmp
clc
jmp
das
jbe
jno
xchg
mov
ja
xchg
sub
jecxz
or
mov
mov
mov
mov
pop
int
add
push
mov
mov
adc
adc
adc
call
pmulhuw
in
or
lret
pop
lret
es
mov
mov
lret
xchg
mov
mov
lcall
lret
mov
lcall
repnz
scas
push
inc
mov
mov
mov
les
lcall
lcall
lahf
dec
mov
adc
jbe
jne
je
jae
cld
xchg
sub
shll
mov
movsb
fnclex
inc
arpl
xchg
pop
inc
push
imul
mov
lds
addr16
inc
jb
data16
add
xchg
mov
pop
xchg
lcall
lret
loop
mov
sbb
mov
mov
sub
mov
mov
jmp
mov
bound
pop
mov
ja
daa
outsl
sti
inc
mov
loop
shrb
inc
xor
mov
sbb
add
add
lock
stc
cmp
lock
pop
fdivr
popf
xor
std
lods
js
std
mov
jmp
aad
jg
das
mov
jp
lret
xchg
test
cmpsb
or
pop
add
mov
jb
out
sbb
loope
clc
inc
stos
mov
lcall
mov
cwtl
lods
out
sti
shld
leave
ljmp
mov
cli
adc
cwtl
movsl
push
ja
repz
mov
ret
mov
test
xchg
repnz
ja
cli
in
inc
cmpsl
mov
inc
mov
mov
push
movsb
in
sahf
inc
stos
lret
sbb
and
stc
fnsave
dec
xchg
cmpb
adc
into
movsl
hlt
je
pop
push
add
data16
or
out
inc
into
stos
xchg
in
or
dec
mov
shlb
hlt
std
jbe
xchg
roll
and
pop
sbb
mov
test
or
push
adc
dec
adc
cltd
xchg
sbb
roll
iret
xchg
mov
dec
idivb
cli
loopw
and
jg
adc
cmp
push
das
pop
mov
mov
mov
int
int3
jb
push
cmp
rorl
mov
cld
dec
pushf
lods
cmp
lea
add
inc
lods
xor
lock
ljmp
mov
addb
dec
pop
gs
xor
add
add
pop
arpl
mov
loop
lods
nop
xor
aaa
mov
pop
out
ljmp
dec
xchg
fisubs
pop
pop
loop
lret
fbstp
std
cmpb
xchg
lahf
jg
or
fcmovnu
xlat
sub
rcrl
out
mov
pop
test
dec
xor
outsb
xlat
and
xchg
shrb
mov
test
out
inc
fnstsw
adc
mov
rorl
enter
jne
add
or
pop
fidivrs
push
mov
add
notl
dec
ljmp
jp
fdivrl
lods
scas
pop
xchg
jl
shlb
jae
sti
jle
jnp
adc
jmp
lock
loopne
push
fdivrl
loopne
mov
dec
adc
or
or
sub
int3
loopne
call
xlat
sti
je
mov
add
jg
inc
leave
fcomp
std
sub
jecxz
add
add
mov
dec
sub
addr16
xor
cli
pop
mov
js
rclb
out
sub
dec
adc
arpl
and
and
pop
inc
push
mov
in
xchg
leave
inc
sbb
rorb
cmp
sbb
sbb
jge
movsl
and
add
movsb
clc
lea
pop
cli
ret
mov
notb
arpl
and
cmc
loop
mov
daa
in
cld
mov
cmc
lret
std
int
xor
neg
xor
fsubp
loope
rol
xchg
ljmp
jnp
push
scas
icebp
pop
out
testl
pop
rolb
xchg
icebp
flds
sub
out
add
out
ds
inc
pop
jp
jae
mov
or
sbb
push
cwtl
aas
inc
rcl
sbb
mov
jbe
xchg
ljmp
loope
jmp
jb
subb
push
fdivr
xchg
cwtl
xchg
das
movsb
inc
arpl
jge
fsubrs
out
aas
mov
mov
clc
cmpsb
mov
out
out
repz
inc
leave
ja
sahf
xchg
inc
aaa
sub
push
push
cltd
fimull
pop
pop
ds
fs
jns
arpl
bound
push
pop
jns
pop
xchg
pop
rcrl
and
in
jns
xchg
pop
fcomps
pop
xchg
push
xor
dec
adc
push
fcoml
push
mov
out
pop
rcr
xchg
stos
dec
pop
push
push
inc
xchg
popf
dec
lds
inc
inc
lds
inc
inc
popf
inc
roll
mov
inc
push
aas
loopne
hlt
cmp
jg
gs
cmp
cmp
sahf
arpl
mov
mov
mov
mov
xor
sub
and
and
and
pop
xchg
imul
cltd
aam
mov
mov
decb
xor
test
test
mov
std
in
mov
mov
dec
mov
sbb
adc
icebp
das
adc
jno
push
mov
push
icebp
lret
jl
xor
jne
pop
mov
xorl
ljmp
add
jns
gs
jne
scas
jle
fimuls
jnp
fmull
mov
lcall
nop
cwtl
xchg
xchg
xchg
testb
add
test
mov
test
loop
add
loop
jp
cld
test
adc
cli
pop
adcl
cld
in
sub
xlat
cli
stos
pcmpgtd
js
sbb
lods
je
inc
xchg
das
xchg
inc
jmp
xor
inc
lock
aaa
mov
enter
fwait
and
xlat
arpl
out
inc
add
in
popa
lret
cmp
cmp
pop
push
call
out
ss
std
rcrl
xor
xor
rorl
xchg
imulb
repz
lock
and
popf
lock
dec
es
divb
scas
push
std
cs
jns
cmpsl
lahf
mov
test
mov
sahf
jo
xchg
hlt
mov
mov
fists
adc
sete
mov
sahf
lea
xchg
stc
xor
sbb
sti
or
ret
or
jl
mov
sub
mov
mov
cld
jmp
in
mov
and
fwait
jp
fstpl
loop
jecxz
popf
lods
out
adcb
inc
incb
enter
dec
hlt
daa
in
fld
add
cli
mov
call
lods
mov
hlt
ds
jle
dec
pop
fsubs
repnz
push
mov
call
inc
lahf
testl
xchg
sbb
aas
cli
rcll
add
andl
adc
pop
xchg
lods
cmp
imull
cmpsb
mov
test
mov
or
ds
lock
jne
fldt
jp
ljmp
jne
pop
jmp
pop
and
inc
scas
push
rcll
cmp
sti
dec
in
inc
icebp
cmc
push
pop
repz
pop
lock
mov
pusha
jecxz
test
cli
jno
movsl
scas
repz
hlt
arpl
xchg
jnp
leave
in
fbstp
mov
mov
sub
aas
outsl
lods
nop
lret
mov
lret
cltd
mov
mov
lcall
adc
add
call
shr
dec
xchg
inc
enter
sbb
push
xor
nop
je
mov
adc
jge
pop
out
xchg
fnsave
scas
sub
or
mov
dec
decl
inc
sbb
fisttpl
mov
mov
cwtl
xchg
mov
fisubrs
add
sbb
aam
jp
xchg
or
in
mov
and
call
ljmp
push
sar
in
int3
mov
mov
mov
lds
loopne
ds
sub
add
dec
jge
aam
mov
lock
cs
lcall
lds
add
xchg
insl
dec
fnstenv
out
mov
push
hlt
stos
hlt
lahf
je
cmp
dec
cs
dec
jnp
es
shll
movsb
and
scas
push
aaa
clc
xor
or
shlb
std
fistpll
mov
into
test
out
cmp
mov
mov
xchg
loopne
xchg
stc
sbb
sbb
pop
mov
scas
jb
jb
adc
and
adc
xchg
int3
and
adc
xlat
divl
adc
inc
sti
jns
stc
pop
or
test
pop
mov
bound
hlt
rcrl
fists
outsb
jmp
inc
fldenv
sti
ret
adc
add
cld
xchg
sbb
mov
mov
inc
cli
in
inc
jg
je
lahf
mul
push
push
push
push
inc
sub
mov
out
repz
pop
sbb
stos
mov
jbe
gs
scas
lret
ficoml
hlt
idivl
hlt
xor
mov
lret
scas
jmp
jg
lods
push
std
add
mov
outsl
xchg
xchg
mov
sahf
mov
outsl
xchg
or
mov
aam
stc
imull
fwait
add
iret
jne
stc
pop
out
cmp
pop
outsl
in
dec
ficomps
icebp
iret
jne
das
add
dec
cltd
jns
leave
in
insb
inc
mov
dec
fnstcw
aas
cmp
lret
imul
iret
out
imul
sbb
lcall
je
adc
mov
lods
repz
iret
daa
std
jle
cmp
call
pop
adc
icebp
xchg
cmp
fisubs
cmp
sbb
out
mov
mov
fists
cmp
fnstenv
fisttpl
into
cmp
test
mov
scas
mov
out
jne
mov
cmpsb
inc
outsb
fdivl
xchg
and
mov
rcrl
pushf
sbb
sbb
xchg
push
xchg
inc
mov
add
icebp
mov
scas
stc
xchg
jbe
sbb
fisttpl
xchg
sbb
sbb
lea
cmp
fwait
xchg
nop
cmp
mov
dec
pushf
mov
push
ret
xor
and
sub
daa
aaa
adc
daa
dec
frstor
and
lea
add
mov
xchg
adc
add
push
stc
sbb
dec
cmp
push
sbb
jle
scas
sbb
cmp
sbb
scas
pop
add
add
cmp
mov
daa
add
frstor
inc
test
mov
iret
fcmovnbe
jmp
stc
cmp
add
sub
cmp
pop
add
cli
in
fistpll
bnd
int3
pusha
pop
pop
loope
and
inc
std
add
cmp
ss
shlb
mov
loopne
imul
je
xor
test
testl
repnz
jp
je
mov
pop
mov
cli
push
jo
pop
push
mov
pop
in
adc
or
or
shr
cmpsl
pop
mov
inc
repnz
push
out
aam
mov
xor
dec
je
je
arpl
push
int3
cs
cmp
inc
es
add
fcmovnb
mov
fsubr
and
in
jbe
sahf
mov
flds
mov
out
dec
inc
cli
test
mov
movsb
mov
adc
inc
add
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
mov
ret
or
mov
cs
sub
gs
gs
mov
les
clc
jmp
jnp
mov
mov
sbb
in
jns
decl
pmaxsw
pop
jb
out
cmp
into
and
jne
cmp
push
push
jg
inc
test
xchg
xchg
add
stc
xchg
ds
aaa
jns
mov
adc
cltd
jecxz
nop
dec
out
stos
lods
icebp
xchg
dec
dec
inc
int
repz
lret
fnstcw
dec
jmp
xchg
ficompl
pop
push
orb
dec
push
mov
out
dec
cmpsb
stc
je
les
mov
ficoml
add
je
repz
xlat
loopne
inc
xor
popa
xchg
pop
adc
ljmp
int
xchg
movsb
xor
and
mov
pop
fsubrp
cmpsb
je
and
jne
fnstcw
ljmp
lock
jbe
sti
jbe
je
out
je
je
clc
test
je
mov
int3
das
pop
mov
push
into
or
cmpb
mov
andb
bnd
or
imul
scas
les
ds
jnp
in
pop
scas
repnz
stos
repnz
mov
xchg
not
shrb
cmc
out
test
jnp
xlat
mov
in
sbb
add
pop
repnz
and
incl
cltd
fnsave
inc
xchg
pop
addr16
leave
out
cmpsb
pop
ljmp
xchg
jmp
xchg
xlat
pop
fucomi
fs
mov
js
push
push
punpcklbw
addb
orl
fs
mov
jl
jecxz
jmp
add
pop
pop
icebp
repnz
shl
dec
mov
or
jb
mov
or
lock
ds
adc
mov
dec
aas
int3
adc
je
cltd
xchg
stc
mov
repnz
sub
push
cmp
lock
scas
jmp
out
out
cwtl
outsl
ds
mov
test
jmp
push
cltd
mov
call
add
les
andl
popa
fdivs
jbe
scas
cli
ficomps
xor
lea
das
sub
mov
mulb
cmp
cmp
lahf
cmp
arpl
enter
jae
out
jnp
in
inc
ljmp
aaa
jecxz
adc
or
fists
fidivrl
fwait
cmp
inc
and
aas
dec
out
or
cmp
sub
sbb
sub
jbe
mov
andl
pop
dec
jae
nop
aas
mov
movntq
adcl
sub
xor
cmp
out
or
cmp
mov
sub
call
cmc
push
pusha
xor
mov
fmull
cmp
mov
push
sub
sub
cld
xchg
push
sti
pop
movsl
in
mov
in
sti
ret
dec
stos
mov
movsb
test
add
fdivs
adc
scas
cwtl
mov
sbb
icebp
mov
test
ja
inc
and
ja
mov
xchg
lret
and
dec
lret
notl
and
adc
lcall
sub
call
sub
xlat
or
imul
mov
mov
icebp
scas
cwtl
xchg
je
vphaddbw
inc
in
and
stc
lahf
sbb
inc
call
or
cmpsl
in
and
test
fs
repz
xchg
jle
sarl
or
js
test
mov
mov
xlat
add
or
jb
mov
je
cli
and
jmp
cmp
mov
pushf
mov
mov
aad
pop
ss
lods
mov
daa
pop
dec
sti
outsl
jecxz
aaa
fidivrl
out
lret
ret
lds
jne
scas
dec
mov
fnstenv
add
adc
xor
mov
xchg
decl
faddp
mov
jge
mov
outsl
mov
in
mov
mov
pop
dec
pop
adc
lea
adc
cmc
jb
xchg
shr
repnz
sub
push
xchg
repz
pop
stc
or
cmp
lods
mov
mov
cmp
lcall
pop
mov
cld
sbb
lock
jecxz
pop
fisubs
and
rorl
mov
out
cltd
pop
sti
or
mov
cli
js
pop
cwtl
pushf
clc
bound
lock
testl
daa
fstpt
push
push
inc
pop
sub
shl
out
jl
aas
stc
cmpsb
pop
bswap
cmp
call
cld
stos
add
shrb
add
ffree
int3
pop
movsl
mov
andl
push
fcmove
mov
mov
jle
jb
repnz
adc
stos
add
mov
mov
clc
pop
int3
or
addr16
mov
xchg
and
sti
aad
xchg
add
lock
in
push
out
daa
mov
cmp
xor
fwait
insl
out
and
mov
rcll
jno
cld
sarl
aas
adc
lock
arpl
lds
loopne
mov
sti
push
loope
pop
xchg
dec
pop
push
hlt
jl
cmp
lahf
dec
repz
ror
jmp
jnp
testl
push
pop
je
pop
fs
mov
movsl
cmc
hlt
mov
cmc
and
cli
shr
repnz
pop
pop
xchg
daa
outsl
xchg
add
out
pushl
int
leave
push
gs
jecxz
push
inc
in
xchg
adcl
imul
ja
xchg
jnp
sbb
loope
loop
lods
ret
fmulp
nop
lahf
or
mov
xchg
push
push
sub
mov
push
push
sbb
loopne
jae
aad
lahf
and
scas
sbb
mov
ficompl
mov
mov
and
xchg
lods
stos
mov
shlb
inc
jns
in
jp
fninit
inc
neg
xchg
push
mov
daa
lods
pop
ljmp
dec
jo
sbb
or
stc
lods
shlb
pop
cmpsb
xor
das
xchg
jmp
std
sti
lcall
sbb
loopne
gs
xchg
leave
sub
cli
roll
pop
inc
je
mov
xorl
jg
mov
xor
push
mov
loop
repz
mov
in
iret
adcl
add
sti
movb
jmp
jb
scas
das
sbb
leave
or
pop
addl
repnz
cli
add
fmuls
stc
test
incl
xor
pop
cmc
movsb
inc
xor
out
icebp
cmp
inc
loop
pop
inc
aas
fbstp
out
cmp
stc
jbe
sub
jne
lock
mov
out
daa
cli
adc
xor
dec
ss
and
scas
jbe
inc
add
fsubl
lods
ljmp
sbb
call
aad
pop
xchg
sbb
lods
xchg
pop
iret
test
pushf
push
sub
imull
into
clc
sbb
cs
lcall
orb
imul
cmp
ja
icebp
jp
call
scas
repnz
jb
pop
pushf
bound
loop
pop
jb
aad
adc
xchg
test
lock
movsl
fistps
inc
inc
xchg
repz
out
pop
out
idiv
lods
ds
add
out
out
cmpsl
imul
dec
stos
mov
lock
mov
jnp
sti
add
fiaddl
cli
mov
int3
ss
enter
clc
and
stos
mov
inc
xor
icebp
xor
mov
cmc
inc
pop
scas
lods
scas
cld
pop
adc
insl
mov
arpl
jae
jmp
or
cmc
lahf
aas
add
sbb
mov
std
leave
inc
loopne
xchg
iret
popl
and
jne
cmp
cli
loop
sub
xchg
fs
fadd
adc
out
std
or
jne
sub
call
xchg
mov
sbb
inc
mov
pop
and
inc
pop
mov
lret
jmp
ljmp
pop
repnz
testb
inc
push
out
jg
scas
lods
out
repnz
inc
or
jnp
fbld
daa
cmpsl
cmc
cltd
test
lods
dec
xchg
ss
rsm
inc
push
inc
ljmp
std
sub
inc
sti
fcmove
adcl
sti
dec
cmp
mov
lret
shrb
mov
pop
psubb
iret
lock
mov
jle
faddl
mov
outsb
mov
les
mov
push
or
inc
add
popa
out
mov
pusha
test
lcall
jmp
lcall
insb
fcom
out
pop
pop
stos
icebp
clc
ds
xchg
ljmp
fs
aas
xchg
mov
icebp
gs
loope
add
dec
aaa
mov
add
std
pop
dec
dec
aaa
lcall
mov
imul
jnp
mov
fildll
adc
lods
stos
pop
fildl
adc
xor
sar
mov
out
hlt
icebp
sti
in
dec
xchg
pop
fs
cmovne
xchg
notb
dec
or
inc
pop
icebp
jl
mov
ret
mov
ret
add
stc
sahf
push
cmpl
ret
mov
pop
fcmovu
dec
mov
cli
psubd
sti
in
cmp
mov
and
ret
sbb
sbb
jl
mov
repz
sbb
pop
add
jl
xchg
test
mov
mov
cli
sbb
insb
mov
shrl
loop
fldenv
ret
insl
jb
sub
xchg
dec
mov
or
testb
mov
push
hlt
ret
pop
sbb
mov
sub
std
inc
inc
xchg
out
out
jecxz
jno
adc
inc
out
push
fdivl
repz
mov
sbb
out
aas
out
int3
int
cld
pop
outsb
xchg
sbb
cmpsb
cltd
jecxz
inc
dec
cmpsl
incl
mov
mov
xchg
call
sub
jmp
jmp
lock
rcl
dec
jmp
outsl
outsb
outsb
inc
fistpll
xor
or
sbbb
xchg
in
call
scas
aam
shrl
push
cmp
icebp
in
jl
out
dec
add
xorps
xchg
filds
jb
jp
cli
or
jb
jl
cli
and
dec
or
jb
fs
jp
xchg
ret
hlt
shl
xchg
lods
out
pop
rcr
push
pop
sbb
mov
cli
dec
pop
cmp
test
std
or
out
adc
leave
xchg
push
rorb
inc
xchg
adc
iret
aaa
push
pop
mov
icebp
dec
xchg
lahf
jp
add
xchg
sub
leave
xlat
and
lock
js
push
out
push
imul
addr16
jae
pop
pop
jmp
mov
std
add
andl
aad
into
fstpt
push
insl
into
sub
jmp
cmc
sbb
testl
jg
idivb
call
mov
iret
aas
iret
jns
sarb
icebp
ret
aad
std
xor
fidivl
fiadds
into
jnp
pop
pop
outsl
fldcw
out
divl
jg
cmpsl
int3
sarl
aas
rorl
shlb
mov
pop
pusha
xor
mov
call
iret
sti
std
shll
or
into
xor
jns
bound
lret
cmc
jle
sti
xor
pop
pop
out
push
and
inc
in
scas
dec
jp
mov
mov
cltd
nop
shrl
lods
das
sahf
or
mov
mov
daa
cli
pop
imul
ret
movsb
push
cld
adc
shr
mov
push
sahf
ficompl
push
repnz
pop
out
lret
repz
mov
xchg
lcall
cmp
push
incl
lahf
pusha
inc
add
fxam
dec
mov
dec
cmp
repnz
lods
loop
cmc
lret
cmc
sbbl
loope
ret
out
xchg
ret
repz
xchg
jge
mov
xchg
shll
mov
out
imul
cmp
mov
cli
xlat
pop
decb
in
and
jge
inc
inc
xor
into
xchg
mov
jae
push
mov
xor
mul
insl
lret
lahf
mov
mov
mov
adc
ret
xor
je
jmp
daa
enter
sub
add
das
hlt
pop
rcrl
inc
mov
fucomp
popf
addr16
xchg
call
movsb
sub
add
enter
lock
gs
aas
ljmp
insl
xchg
enter
mov
fidivrs
mov
cld
out
cli
outsl
inc
mov
nop
mov
xor
pop
jg
jnp
push
scas
xchg
add
cwtl
fcmovbe
lahf
testl
jb
loopne
cmp
inc
xchg
fucomi
xchg
add
daa
icebp
mov
icebp
in
pop
cmp
dec
cmp
dec
sar
inc
out
mov
repnz
xchg
fisubrs
adc
fidivrl
decl
cmp
xlat
iret
dec
mov
into
pop
outsb
sti
mov
clc
mov
loope
jg
ja
jnp
mov
into
int3
and
sub
sub
lds
add
push
test
xchg
mov
idivb
lock
call
and
std
or
sub
sub
imul
fcomi
push
shlb
lcall
test
and
stos
sbb
inc
cmp
cli
pop
push
mov
out
rcrb
outsl
push
aaa
add
add
test
scas
int3
add
ret
aad
scas
ja
iret
jnp
out
push
inc
mov
loope,pt
jbe
test
ljmp
xchg
mov
std
mov
jbe
push
cld
inc
push
stos
jbe
cmp
cli
sub
xor
cmp
pop
addr16
das
pop
pop
out
and
jecxz
add
xor
lret
aaa
iret
fwait
sbb
or
pop
ljmp
cli
sti
out
lock
mov
adc
imul
shl
xlat
int
add
pop
jae
ret
mov
mov
iret
lret
imul
mov
jge
stos
test
mov
dec
in
cmp
jmp
fsubrs
adc
mov
imul
push
push
in
push
outsl
xchg
aas
shr
lods
lcall
cltd
aas
mov
in
or
icebp
cmpsl
in
jne
mov
jg
shl
ljmp
lcall
les
sar
pop
fdivr
and
bound
mov
lods
shrl
jno
xor
std
mov
sahf
mov
imul
pop
jmp
mov
aad
popf
cld
sbb
jge
aad
cmpsb
push
jg
daa
out
iret
lcall
sub
mov
mov
fstps
aad
jl
and
dec
cmc
mov
ficomps
pop
movsb
mov
jg
aam
leave
call
mov
enter
adc
fdivr
ja
mov
out
arpl
movsb
inc
out
fwait
xchg
xchg
lcall
mov
decl
xlat
iret
inc
in
mov
scas
stc
sti
nop
mov
inc
jl
loope
pushl
js
shrb
stos
out
movsl
in
lcall
sahf
incl
mov
mov
divl
mov
iret
sti
test
push
aas
jg
sahf
mov
rcll
icebp
fidivrs
jno
aam
shlb
jbe
mov
repz
mov
out
sahf
mov
and
mov
pop
nop
popl
adc
xor
xchg
movsb
jnp
xchg
xchg
out
mov
scas
mov
mov
shll
loopne
fistps
adc
out
xchg
cmp
inc
or
mov
jecxz
mov
ds
mov
fsubr
in
nop
xchg
xchg
add
outsl
filds
mov
rolb
repz
lods
sbb
lahf
out
mov
aam
pop
xchg
mov
into
push
adc
lods
mov
ficompl
dec
mov
out
mov
inc
push
inc
xchg
mov
sahf
cwtl
lret
in
jmp
scas
jge
mov
pop
mov
out
push
mov
lret
lods
out
out
pop
inc
dec
dec
fdivrp
sahf
ds
in
xchg
xchg
out
ficompl
lahf
inc
mov
mov
in
idivl
jb
mov
xchg
jecxz
movsb
cbtw
ret
mov
popf
inc
jb
mov
bnd
mov
ljmp
out
inc
xor
adc
and
cwtl
out
daa
dec
rcll
xchg
ficoms
ja
idiv
mov
cmc
inc
outsl
jnp
imul
mov
nop
incl
xchg
test
mov
std
and
mov
out
bound
mov
adc
and
imulb
test
mov
repnz
xchg
xlat
xchg
xchg
mov
mov
pop
imulb
mov
ret
lret
inc
cmp
stc
rol
mov
cmpsl
scas
std
mov
movsl
lock
cwtl
jb
out
sbb
adc
mov
insb
push
lret
hlt
xchg
adc
addr16
jl
ss
jge
mov
jns
std
add
jnp
add
std
clc
ja
sub
push
test
jg
scas
aas
push
mov
sbb
sti
push
cmp
sbb
loopne
ljmp
fwait
cmp
das
les
nop
dec
neg
dec
xchg
fsubrp
call
or
jno
in
loope
insl
loopne
adc
mov
mov
inc
xchg
lods
xchg
push
lods
mov
xchg
add
jbe
mov
mov
mov
into
std
stc
sub
loop
test
dec
negl
cld
ljmp
negb
inc
sbb
mov
cld
pop
jle
pop
lcall
std
mov
lods
stos
aas
cmp
mov
scas
out
call
mov
cmp
fcmovnu
jecxz
ret
out
rcl
add
shll
shll
add
fs
iret
out
fcmovne
xlat
iret
lret
iret
iret
mov
iret
cmpsl
iret
fwait
iret
xchg
iret
xor
sbb
add
add
ret
into
dec
into
cmp
int
int
int
int
int
int
int
int
int
int
add
add
pop
int
int
int
int3
inc
int3
ror
int3
pop
add
add
int3
ds
sahf
lret
xchg
lret
imul
lret
aas
lret
daa
lret
or
lret
jno
insb
lret
das
lret
add
add
test
leavew
cs
push
leave
std
enter
enter
repnz
js
aas
xor
add
add
and
fld
lret
mov
cmp
push
adc
inc
lock
inc
add
leave
lds
lds
test
mov
rol
ret
xchg
ret
jge
jge
add
retw
push
ret
ds
xor
ret
add
ret
mov
jns
push
into
push
ret
rol
rcrl
roll
shrl
rcll
fdivr
mov
shlb
inc
adc
add
int3
iret
mov
iret
cmp
in
int
int
int
int
int
int3
loopne
add
inc
cmp
test
insb
int3
addr16
inc
ret
add
cld
shl
rol
movb
cmp
sbb
lahf
mov
iret
in
cwtl
iret
iret
push
iret
inc
iret
sbb
add
hlt
cmpsb
into
lret
into
xchg
jge
pop
into
push
into
cs
sub
push
into
sbb
int
cli
cmc
add
int
xchg
int3
aad
xor
push
int3
xlat
pop
add
repnz
aad
mov
lret
ror
lret
addr16
in
enter
add
mov
ss
enter
gs
pop
dec
movl
add
popf
addr16
aas
or
loopne
sahf
lds
lds
add
add
aas
lds
lds
lds
lds
in
ffreep
int
ret
les
pop
add
pop
push
les
inc
les
les
les
add
mov
ret
nop
ret
mov
add
ret
pop
ret
push
ret
push
ret
dec
jp
push
cli
xorb
sub
push
ret
stc
ret
lret
mov
ret
ds
xchg
rcll
add
jmp
faddp
mov
shlb
shrb
and
adc
add
mov
iret
mov
dec
iret
inc
iret
cmp
into
filds
xlat
into
shr
lods
into
movsl
into
mov
push
into
cmc
int
int
dec
add
dec
int
mov
lret
cltd
lret
xchg
lret
mov
xor
xlat
enter
scas
xchg
sahf
lret
pop
ret
pop
lret
dec
add
call
and
cld
enter
cmpsb
enter
enter
enter
rol
nop
pop
add
and
adc
movsl
lds
lds
push
divb
lds
lds
add
adc
popa
les
dec
les
cmp
sub
push
add
ret
mov
add
imul
xor
sub
ret
cli
ret
ffree
int3
sbbb
iret
ret
movsl
ret
fcompl
mov
add
imul
xchg
add
mov
jnp
jae
push
sbb
adc
or
iret
push
iret
jb
insl
int
int
out
int
int
adcb
int
mov
jb
dec
int3
adc
add
sub
lret
lret
insl
lret
fs
mulb
push
lret
dec
lret
and
add
add
adc
hlt
leave
fmulp
aad
leave
mov
leave
popf
leave
xchg
leave
nop
leave
add
orb
sbb
or
lock
loope
mov
mov
in
inc
sub
xlat
add
add
sbb
cltd
ret
xchg
ret
add
cmc
roll
push
add
roll
shrl
sbb
ror
leave
rol
mov
movsl
rcrb
test
jg
js
testl
iret
aaa
iret
and
aad
inc
into
stos
into
mov
and
loop
insb
lret
push
lret
dec
test
lret
push
push
push
lret
cmc
inc
bswap
sahf
leave
in
enter
xor
add
sahf
enter
enter
insb
enter
enter
enter
enter
mov
ljmp
mov
popf
add
add
sbb
insb
data16
pop
push
dec
ss
xor
daa
movl
fcmovnb
roll
and
add
enter
mov
mov
sbb
popa
pop
push
cmp
xor
mov
enter
and
push
adc
pop
jmp
fidivrl
sbb
jmp
lds
lds
lods
les
les
pop
or
or
add
ret
popa
ret
pop
push
dec
ret
inc
pop
daa
ret
je
nop
add
or
loopne
aad
int
pop
adc
mov
test
ret
mov
add
add
adc
ret
es
sbb
adc
add
add
shl
aam
ret
shll
test
add
sarl
rcrl
adc
add
rcrb
jb
push
shlb
rclb
rorb
sarb
cmp
xor
sub
daa
sbb
adc
fldt
rorb
popf
pop
aas
clc
iret
loope
iret
insl
push
jns
scas
iret
xchg
iret
jne
pop
iret
cmp
hlt
add
mov
push
into
inc
into
push
into
test
int
mov
int
int
int
int
inc
add
imul
lret
push
lret
repz
fcmovne
pushl
pop
scas
ds
enter
subb
or
leave
jae
or
test
enter
enter
iret
das
pop
enter
lods
jp
push
ljmp
je
cmp
enter
in
lds
lds
sbb
lds
lds
faddp
push
outsb
adc
inc
push
mov
dec
fdivs
les
ret
jmp
ret
lahf
ret
sub
cmp
xchg
and
sbb
adc
and
ret
mov
ret
fwait
ret
ds
fidivs
mov
loopne
jnp
test
in
in
pop
mov
orb
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
mov
push
add
and
iret
jle
add
repz
inc
mov
rcl
lret
xor
mov
sarl
iret
cld
cld
in
sarl
decl
imul
rorl
enter
jg
std
inc
ljmp
jne
lock
lahf
jl
mov
leave
imul
add
and
jnp
lods
int
add
sub
aad
into
or
cmp
icebp
dec
xchg
and
out
loopne
out
into
daa
test
fsubr
cs
inc
push
jl
lret
mov
mov
jg
movsl
mov
mov
xor
lret
mov
bound
mov
sub
pop
adc
xchg
aad
or
fnstsw
fildll
fists
cli
sti
cld
fsubrl
fildll
daa
lods
xor
and
mov
mov
cmp
add
fbstp
mov
scas
push
and
nop
lcall
scas
outsb
int
loopne
inc
lock
hlt
mov
mov
add
fildll
jl
cmc
xchg
inc
pop
pop
out
ss
cmpsb
inc
jmp
das
or
push
xchg
repz
repz
xchg
lock
loope
adc
pop
or
mov
mov
or
cmpsl
in
fistpll
repz
pushf
dec
std
imull
loope
mov
pop
sub
mov
xlat
mov
xchg
cmp
jmp
cmpsl
in
std
jmp
xchg
arpl
add
ljmp
pop
pop
mov
mov
addr16
ret
mov
jg
push
adc
lahf
mov
jecxz
decb
ljmp
jg
adc
cmpsb
adc
ljmp
stos
push
xchg
push
push
mov
mov
pop
pop
xor
jl
paddd
jns
or
mov
add
daa
pushf
push
test
adc
inc
dec
loop
test
sub
adc
inc
loope
cmpsl
jae
subb
ds
mov
nop
fimuls
roll
sub
xchg
mov
out
fldcw
cmp
mov
cmp
leave
cld
or
jl
ljmp
not
scas
add
pop
add
add
sbb
mov
shl
dec
inc
mov
xlat
fldl2e
sbb
cmp
mov
adc
mov
push
mov
repz
lahf
jnp
int
das
ja
pop
pop
mov
push
loopne
cld
sbb
xchg
gs
mov
addr16
mov
adc
adc
xor
fwait
addr16
jbe
loope
pop
fcomip
push
std
inc
jge
pop
shl
stos
ret
stos
popf
mov
loopne
daa
push
jnp
fcmovnb
sub
jb
dec
nop
jl
sti
sti
sbb
pop
jmp
int
ja
das
push
je
in
hlt
lds
fs
sti
dec
xchg
movsb
cwtl
movsl
and
mov
sbb
mov
int3
jb
ss
jae
xchg
ret
lret
arpl
jb
scas
mov
xor
inc
cli
lgs
mov
mov
out
fstp
inc
mov
sti
push
pop
je
lahf
cli
sub
mov
fidivs
mov
add
clc
orb
fistl
cmpsb
jg
pop
aad
and
pop
or
jmp
scas
jecxz
push
aas
sahf
mov
mov
call
arpl
icebp
call
jg
cli
insl
sbb
cltd
lods
scas
insb
sbb
fucomi
xor
loopne
add
iret
jne
ja
add
pushf
ds
insl
mov
mov
bswap
cltd
out
xchg
sti
push
clc
stc
xlat
push
mov
out
mov
or
fucomip
loope
clc
decl
out
fisubrl
mov
mov
shl
adc
mov
mov
lahf
push
cli
mov
js
mov
xchg
cmc
cld
inc
jae
mov
insl
ret
pop
cli
stos
mov
cld
jo
mov
shrl
xchg
jge
cmpsl
xchg
cmp
jge
testl
cmp
xchg
repz
out
jge
into
cmc
mov
xchg
mov
stc
inc
inc
sub
out
cld
inc
repnz
mov
test
stc
pop
cmp
xor
push
add
dec
stc
dec
add
jno
dec
add
dec
repnz
jle
mov
cmpsl
and
pop
incl
fstpt
jle
push
dec
push
ret
lahf
push
dec
push
stc
push
add
cmp
push
add
outsb
push
dec
orl
xchg
jle
xchg
xchg
stc
cs
sbb
lcall
sbb
insl
bound
xchg
lret
inc
mov
in
pop
push
inc
mov
imull
adc
and
and
lods
hlt
clc
push
jl
cmp
pop
cmp
mov
sti
fwait
pop
jl
out
cli
lods
cmp
xchg
hlt
inc
aaa
jns
out
xor
inc
xor
xor
xor
stos
push
mov
push
cmp
bound
cmpsb
popa
frstor
mov
jne
bound
pop
imull
hlt
aas
enter
xchg
pop
movsb
std
mov
inc
cld
outsl
adc
add
adc
mov
pushf
clc
sbb
push
fs
dec
sbb
jne
mov
pushf
dec
iret
pop
dec
fadds
dec
in
mov
out
mov
shl
or
mov
scas
dec
clc
hlt
mov
lock
jmp
clc
mov
ljmp
fildll
insb
cmp
jb
scas
cmc
xchg
mov
mov
push
inc
or
mov
mov
sahf
xor
loopne
out
inc
sub
addr16
jg
and
in
pop
mov
xchg
push
mov
jmp
jmp
sbb
inc
out
out
aad
or
ja
incl
shrb
inc
jge
outsb
xchg
stc
daa
daa
jne
stos
pop
aaa
psubq
inc
repnz
imul
jbe
stos
icebp
fnstsw
sbb
mov
call
cmp
inc
fcompp
pcmpeqd
cld
aas
mov
cmp
daa
mov
cmp
negl
shrb
icebp
std
jle
mov
jg
push
pop
aad
lds
jnp
iret
dec
call
jle
hlt
cmpsl
add
and
imul
test
jbe
jno
dec
negl
pop
mov
mov
jbe
jnp
inc
pushaw
cli
out
or
je
cmpsb
mov
in
mov
sti
repz
xchg
rcrl
jae
pop
fucomp
std
call
iret
jle
outsl
cmc
loop
pushl
fs
ljmp
cmp
fwait
xchg
cld
jne
outsl
jne
pop
test
sarl
mov
cmpsl
sub
mov
repz
in
outsl
sbb
out
repz
sti
fdiv
cmpsl
sub
mov
ja
fcomps
in
fbld
inc
lahf
fistpll
stc
sti
out
cmpsl
mov
pushf
aam
rcr
jnp
loop
div
stos
add
mov
rcr
jg
sbb
fucomip
lock
xchg
pushf
testb
jmp
mov
jmp
rcrl
pop
or
call
adc
sarb
jb
aam
or
je
stos
xchg
fsubr
pusha
mov
push
mov
sub
int
mov
stc
jg
je
roll
lods
cmp
mov
roll
stos
pushl
mov
push
mov
aam
test
fwait
cli
jbe
mov
test
cmp
iret
push
mov
std
xor
mov
cmc
icebp
sbb
fsubr
cld
dec
push
inc
div
lahf
cld
inc
daa
sarb
mov
js
mov
lret
clc
test
xchg
daa
lahf
call
pop
mov
movsb
add
test
loope
pop
aad
ret
mov
lret
mov
aaa
scas
pop
movsb
adc
sub
pop
repz
mov
xorb
lret
aad
ss
adc
ja
ret
repnz
shl
inc
jmp
or
add
jmp
ljmp
push
shlb
into
mov
std
in
fucom
daa
ljmp
fcoml
lcall
xchg
cwtl
scas
mull
out
mov
insl
fdivrl
mov
sahf
out
call
push
fwait
in
rorl
mov
out
js
dec
jge
mov
outsb
scas
sub
imul
xchg
xchg
dec
test
mov
lods
xchg
jl
jle
jmp
mov
mov
dec
testl
test
mov
das
in
ljmp
mov
push
mov
cmp
out
xchg
rolb
dec
in
popa
mov
jg
enter
pop
in
sti
mov
stc
shll
scas
in
push
test
je
cli
lret
lods
divb
pushl
mov
in
sbb
decb
nop
sti
pop
hlt
movsb
in
sub
sar
fidivl
imull
mov
mov
xor
sbb
repnz
sbb
mov
cmp
inc
cld
lret
popf
dec
sbb
adc
xchg
call
lcall
mov
sahf
xchg
sahf
fdivr
mov
cmp
enter
pushf
orb
movsb
push
xchg
fdivrs
stos
lahf
mov
ljmp
leave
push
mov
ljmp
mov
lahf
mov
dec
xchg
adc
mov
xchg
push
dec
out
js
loopne
hlt
cwtl
out
mov
cmp
mov
in
xchg
xchg
je
xlat
push
int
fs
inc
cmc
xlat
mov
cmpsl
jnp
mov
xchg
clc
hlt
xchg
fdivrs
xchg
jo
and
cmpsb
dec
xchg
push
ljmp
decl
lock
notl
mov
loopne
cwtl
lret
and
cmp
shrl
loopne
jbe
mov
lcall
call
mov
test
lcall
int
dec
sti
call
stos
push
cmpsb
enter
or
int
movsb
adc
cmpsl
int
push
push
int
int
int
mov
add
int3
mov
int3
lret
mov
and
add
add
lret
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
jb
dec
leave
enter
add
enter
enter
enter
enter
xchg
add
add
gs
sub
adc
add
lds
lds
lds
lds
lds
mov
stos
add
out
ret
iret
ret
lods
ljmp
or
std
shl
add
cli
lcall
pop
rcrl
rorl
aad
jnp
pushl
cld
out
push
aad
stos
fisubrl
imul
lahf
dec
xchg
clc
dec
adc
fisubrl
cmp
dec
sbb
mov
aam
lahf
call
ljmp
out
std
aas
jg
sbb
icebp
xchg
std
jle
dec
jle
cli
push
jne
test
decb
pop
cltd
leave
cmpsb
sub
cmp
pop
aad
aas
xchg
jle
inc
repz
iret
jl
mov
lcall
cmpsb
outsb
mov
adc
std
mov
loope
dec
mov
jnp
dec
clc
popl
daa
cmp
out
mov
out
or
cs
rcrb
lahf
ljmp
das
hlt
pop
lock
xlat
rol
pop
or
push
mov
gs
div
dec
out
fnstsw
xchg
incl
daa
shll
outsl
mov
jmp
out
out
call
iret
sub
fcomps
cmp
out
lods
sub
mov
cli
ljmp
fildl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
