lahf
push
sarb
sub
mov
in
xchg
addl
jns
mov
lcall
insl
mov
mov
insl
cmovp
out
loope
and
dec
fistpll
js
sub
push
mov
mov
or
push
mov
sub
int3
cmp
mov
push
inc
pop
dec
mov
inc
add
xor
adc
inc
fdivs
pop
fimull
and
mov
in
shlb
inc
push
xor
inc
jge
stos
mov
dec
and
cmp
enter
stos
jecxz
arpl
fsubp
ret
aas
daa
lds
or
cmp
jb
or
dec
fmull
sbb
lcall
push
sub
es
xor
cltd
outsb
les
negl
daa
ja
bound
cmpsl
lcall
push
mov
into
test
into
cwtl
add
mov
xchg
adc
js
xchg
fcomp
lahf
xor
pop
adc
aaa
and
call
in
xchg
pop
ffree
jp
mov
pop
xchg
popf
adc
cmp
mov
xchg
fimuls
sub
or
in
mov
push
sub
xchg
add
add
sahf
dec
out
sub
test
inc
andl
pop
out
icebp
push
or
inc
fwait
add
int3
and
jecxz
inc
fdivrs
mov
int
mov
add
sbb
xchg
push
pop
call
pop
dec
popf
loopne
mov
jbe
mov
sub
icebp
or
mov
test
iret
mov
std
iret
xchg
rorb
sbb
test
and
adc
outsl
ss
adc
std
push
out
int
sbb
gs
je
adc
repnz
cmp
sub
stos
pop
.byte
cmp
lahf
push
sarb
sub
mov
in
xchg
addl
jns
mov
lcall
insl
mov
mov
insl
cmovp
out
loope
and
dec
fistpll
js
sub
push
mov
mov
or
push
mov
sub
int3
cmp
mov
push
inc
pop
dec
mov
inc
add
xor
adc
inc
fdivs
pop
fimull
and
mov
in
shlb
inc
push
xor
inc
jge
stos
mov
dec
and
cmp
enter
stos
jecxz
arpl
fsubp
ret
aas
daa
lds
or
cmp
jb
or
dec
fmull
sbb
lcall
push
sub
es
xor
cltd
outsb
les
negl
daa
ja
bound
cmpsl
lcall
push
mov
into
test
into
cwtl
add
mov
xchg
adc
js
xchg
fcomp
lahf
xor
pop
adc
aaa
and
call
in
xchg
pop
ffree
jp
mov
pop
xchg
popf
adc
cmp
mov
xchg
fimuls
sub
or
in
mov
push
sub
xchg
add
add
sahf
dec
out
sub
test
inc
andl
pop
out
icebp
push
or
inc
fwait
add
int3
and
jecxz
inc
fdivrs
mov
int
mov
add
sbb
xchg
push
pop
call
pop
dec
popf
loopne
mov
jbe
mov
sub
icebp
or
mov
test
iret
mov
std
iret
xchg
rorb
sbb
test
and
adc
outsl
ss
adc
std
push
out
int
sbb
gs
je
adc
repnz
cmp
sub
stos
pop
imul
or
sub
push
inc
pop
jecxz
xor
rcrl
cmp
jne
xor
loope
jg
mov
jl
enter
push
jmp
fists
sbb
insb
cmp
xchg
inc
inc
mov
push
or
mov
add
and
sub
stc
imul
or
enter
out
jg
cmp
and
add
and
add
add
and
add
add
add
jb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
pop
fidivs
cmpsl
stc
mov
lcall
scas
mov
xchg
je
cmp
pop
in
adc
push
dec
and
add
jmp
sbb
inc
mov
or
ljmp
shlb
das
mov
add
pop
sbb
stos
outsl
jmp
sub
cmp
jno
or
out
jg
movl
out
sbb
lods
adc
jge
nop
mov
adc
scas
in
mov
data16
push
scas
push
mov
mulb
addl
mov
jp
and
push
mov
mov
iret
sbb
xor
mov
pushf
or
dec
rol
and
mov
dec
adcl
movsl
cmp
and
jae
xchg
jmp
push
pop
in
enter
or
insb
xchg
xchg
mov
loope
mov
push
dec
pop
lret
mov
into
cmp
ret
in
pop
in
jb
fimull
sbb
cmp
shlb
nop
insl
jne
cmp
or
gs
adc
xor
jns
push
gs
ret
cmp
in
jge
lahf
xor
adc
lods
lea
pusha
cmc
mov
lcall
push
inc
xchg
push
icebp
or
repnz
fisubl
ret
push
adc
aaa
xchg
mov
movsl
mov
sub
mov
mov
in
mov
xlat
test
inc
cmp
push
test
inc
dec
dec
cmp
jnp
sub
add
xor
inc
out
inc
iret
push
lods
ss
jns
push
jge
js
lret
dec
int3
fiadds
add
std
imul
push
inc
jp
sub
insl
mov
icebp
lods
add
sub
in
xor
clc
cmpsl
out
jb
add
testb
repz
es
das
sub
mov
dec
cmp
pop
movsl
pushf
adc
jmp
push
loope
enter
cmp
mov
push
push
mov
addr16
in
push
std
dec
adc
pop
mov
and
imulb
fisubl
push
sbb
cmpsb
ficoml
ror
ror
pop
or
aaa
jg
icebp
loope
xor
pusha
push
xchg
mov
icebp
lds
int3
add
test
fnsave
mov
adc
pop
or
mov
jmp
cmpsw
sbb
ret
lcall
call
leave
mov
bound
push
adc
fwait
xlat
push
xlat
jmp
popa
cmpl
das
pop
add
inc
insl
cld
cltd
push
sbb
rorb
cwtl
pop
rcrb
insl
dec
adc
leave
sub
xor
add
repz
mov
fmuls
or
adc
dec
das
inc
test
sbb
mov
stos
in
repnz
jbe
stos
cs
dec
mov
sub
lods
insl
xchg
out
mov
jmp
and
lock
xchg
xchg
inc
idiv
pop
jecxz
mov
loope
push
push
mov
pop
loope
push
jbe
or
rcl
or
pop
lcall
stos
jmp
hlt
mov
aad
test
test
or
out
inc
sahf
in
cld
lock
inc
and
iret
mov
sub
mov
mov
inc
fsubrs
ss
in
outsb
push
sbb
adc
dec
inc
hlt
pop
outsb
pop
xchg
hlt
bound
adcl
out
movsb
daa
dec
insb
pop
sbb
insb
je
int3
sahf
push
cmp
inc
outsb
jmp
outsl
sub
mov
push
iret
adc
sbb
mov
cltd
mov
mov
jg
movsl
sub
pop
jg
cmpb
dec
stos
subl
lock
call
pop
imul
fninit
cmp
outsb
cmpsl
in
xchg
testl
in
std
dec
into
dec
jl
ds
jmp
outsl
or
jle
fdivl
icebp
jnp
cltd
insb
xor
mov
push
cmp
lods
sbb
icebp
adc
add
into
out
cs
jge
fcoml
test
aam
sahf
fcompl
jae
adc
movsb
dec
push
insb
dec
xchg
mov
mov
jecxz
inc
sbb
aaa
pop
movsl
cmp
jg
mov
ja
sahf
inc
and
xchg
jp
dec
dec
jp
mov
mov
adc
sbb
into
push
push
push
push
and
push
fbld
out
out
test
in
icebp
inc
fsubrl
ja
ljmp
push
xchg
dec
leave
mov
dec
test
leave
mov
xor
push
mov
leave
fwait
in
push
mov
cmp
clc
lock
mulb
out
and
mov
icebp
jle
nop
sub
inc
pop
mov
fmuls
cmp
cmp
lret
dec
inc
jecxz
outsl
push
cmc
lcall
jge
jne
dec
pop
fstpl
repnz
cmp
jp
hlt
push
xchg
hlt
pop
out
dec
repnz
scas
and
mov
xlat
addl
add
mov
lahf
lds
loopne
popa
subb
mov
je
adc
rol
ret
cmpsl
test
adc
sub
inc
inc
cmp
push
and
pop
notl
daa
xchg
adc
shlb
mov
ja
push
in
xchg
sbb
sub
aam
dec
push
sbb
jmp
add
xor
dec
sbb
pop
cmp
outsb
jo
mov
cmp
adc
sbb
stc
inc
push
sub
bound
subps
xor
int3
leave
pop
sbb
mov
ja
daa
sub
mov
sbb
mov
or
pop
adcb
sub
jae
sub
xor
push
pushf
sub
jg
iret
iret
or
andb
rcll
shlb
mov
dec
sub
add
xadd
dec
pop
test
adc
xor
sbb
or
leave
xchg
aaa
lock
lods
push
jbe
add
add
add
mov
aam
adc
sub
outsb
outsb
add
mov
in
cmp
xchg
addr16
mov
outsl
xrelease
or
or
jge
repz
lods
ja
enter
adc
aam
xor
jnp
jno
sahf
rcll
in
add
adc
mov
mov
adc
lock
roll
xor
sub
fnsave
xchg
adc
dec
mov
test
test
outsl
jbe
ss
das
and
pop
push
shr
pop
and
in
pop
dec
mov
mov
and
aam
into
sbb
cmpb
jmp
imul
adc
xor
mov
xchg
lds
dec
pop
push
loop
test
inc
mov
push
push
outsb
xchg
adcl
fists
sbb
sub
lock
das
jae
push
ja
dec
xor
mov
mov
int
cmp
outsl
mov
lret
enter
pop
jae
adc
pop
test
push
lods
loope
daa
xor
subb
xorl
jmp
icebp
inc
test
adc
js
or
mov
xchg
or
out
scas
js
cmp
mul
jmp
push
mov
add
bound
ret
jb
ss
sahf
cmp
scas
in
insb
sahf
call
adc
pop
pop
adc
sahf
inc
sti
sbb
lods
mov
push
jbe
daa
add
lea
in
sub
pop
int
aad
imul
mov
jne
adc
rcrb
inc
sbb
sbb
outsb
dec
push
and
leave
mov
lret
mov
jmp
and
jg
adc
lea
hlt
mov
mov
pusha
push
push
stos
add
ljmp
jp
loope
add
add
sbb
fwait
mov
mov
pop
repz
clc
mov
lcall
or
out
adc
jge
or
sbb
pushf
clc
fdivr
ljmp
outsl
sbb
stos
xchg
nop
sbb
mov
push
mov
mov
jne
sub
jnp
test
mov
not
jbe
in
dec
mov
out
enter
je
es
xchg
mov
or
mov
shll
jnp
xor
push
int
cmc
stos
mov
or
shll
push
pop
xchg
shlb
enter
cmp
addl
sub
daa
pushf
scas
test
or
lea
into
fcomip
enter
scas
lods
ja
pushfw
aad
adc
scas
pop
cltd
jns
mov
stc
cmp
add
outsb
test
xchg
or
ret
les
insl
add
jne
push
test
leave
ja
adc
out
lea
mov
ret
xchg
ss
out
mov
mov
in
or
mov
mov
sbb
or
js
push
stos
adc
dec
sub
jp
push
imull
sbb
insb
xor
xchg
lds
jae
jbe
mov
sahf
cmp
or
xchg
cmp
mov
fsubr
sub
dec
int
stos
sub
inc
mov
ljmp
push
das
loop
and
and
ret
cld
mov
add
addb
cltd
outsb
inc
addr16
pop
xchg
mov
jmp
ret
push
in
lea
inc
jo
inc
jnp
cmc
mov
subl
jl
in
call
mov
mov
je
rorb
adc
aas
jmp
dec
jp
pusha
repnz
ja
das
adc
adc
std
out
mov
xlat
or
testl
pop
adc
push
sbb
xor
cs
std
pop
push
dec
pop
jne
incl
pop
push
jp
int
adc
xchg
fnstsw
repnz
and
cmc
xor
or
xor
pusha
out
cli
mov
movsl
in
mov
loop
push
lret
and
add
addl
clc
cmp
dec
push
jo
mov
jo
add
xchg
out
xchg
out
sbb
mov
je
xchg
inc
sub
aas
rolb
jmp
lds
adc
sbb
and
jle
jbe
or
cltd
pop
inc
movsl
mov
or
sub
xor
mov
ficompl
int3
je
jo
xchg
icebp
mov
dec
and
sub
hlt
inc
pushf
bswap
js
push
pop
push
test
nop
pop
dec
outsb
xchg
fsts
push
test
test
fcmove
xor
addl
push
dec
inc
add
or
out
shrl
bound
aam
sahf
mov
and
pop
cmp
mov
mov
sub
or
push
in
jo
push
ds
push
push
xchg
loop
test
loop
add
cs
popf
shll
repz
xchg
pop
fs
mov
push
mov
test
lcall
adc
sbb
or
daa
cmp
adc
cli
push
or
clc
pop
push
in
outsb
xor
rorb
out
jle
ja
fnsetpm(287
rorb
sbb
std
sti
add
nop
fldt
mov
hlt
push
sti
adc
dec
xor
mov
test
out
xchg
and
cmp
cs
test
iret
lea
cmpsl
sbbb
subb
inc
add
adc
ds
in
inc
dec
xchg
gs
orl
sbb
mov
fs
fsubs
out
fstl
pop
movsb
lret
popf
ret
and
dec
xchg
shl
repz
adcb
hlt
or
insb
adc
int
mov
mov
or
push
fsubl
sub
lahf
mov
pushf
mov
sbb
dec
sub
lcall
mov
lea
sub
sub
gs
mov
sti
cmc
std
repnz
sbb
mov
pushf
outsl
mov
iret
push
movsl
mov
and
adc
sub
out
outsb
dec
imul
test
sbb
jne
cmp
sti
cmc
test
dec
arpl
lcall
clc
push
push
rolb
mov
cmpsb
movsb
and
cmp
call
fldl
jnp
sahf
xchg
test
imul
sbbb
cmp
std
sub
jae
mov
scas
clc
xor
push
fsubr
sbb
nop
mov
dec
or
sbb
cs
xchg
add
xchg
xor
imul
ret
enter
out
xor
add
scas
jg
inc
dec
js
xor
icebp
jne
jecxz
mov
out
outsb
xchg
stos
lods
and
ss
xchg
xchg
sbb
add
mov
mov
sbb
fwait
aad
jmp
inc
inc
inc
mov
or
clc
dec
es
mov
scas
add
mov
std
mov
je
aam
fwait
and
inc
ret
adc
xor
pop
in
mov
aaa
mov
xor
ljmp
fwait
cmpsb
push
adc
rcl
out
mov
aam
and
test
mov
mov
mov
aam
push
cmovp
test
push
cmc
sbb
pop
sub
cld
mov
dec
and
pop
sbb
add
or
imul
mov
and
fisubs
scas
xor
or
enter
int3
lret
sarb
and
dec
mov
xor
sar
cli
pop
sti
insl
lcall
repnz
iret
sbb
mov
sbb
outsb
jmp
fsubrl
xor
jmp
jns
dec
fucomip
pop
notb
sub
xchg
roll
adc
dec
mov
or
sti
cmovne
mov
out
mov
movsb
mov
mov
clc
or
or
or
int
push
notl
scas
std
cmc
sub
les
cwtl
adc
add
inc
cmp
call
mov
add
add
mov
out
movsb
aam
ja
imul
adc
xchg
adc
shl
jns
adc
pop
dec
dec
movsl
ss
test
and
adc
sub
mov
pop
xor
les
lret
push
jo
stc
mov
pop
sub
scas
test
sahf
sub
jne
jo
adc
aaa
aam
xlat
subl
incl
sbb
push
aad
in
lods
sub
or
xor
xlat
xchg
mov
popf
lahf
pop
sub
lret
mov
sbb
or
lret
add
inc
jge
in
movsb
movsb
nop
dec
popa
pusha
xchg
subb
cmp
int3
loop
mov
jnp
ja
cld
rolb
or
cmp
sub
addr16
repnz
popa
xor
je
jmp
mov
loope
cld
dec
push
push
in
xchg
push
out
popl
mov
adc
cmp
ret
xchg
mov
inc
pop
jo
xlat
in
mov
xchg
jnp
inc
scas
clc
mov
pop
inc
outsl
icebp
sbb
sub
pop
jae
adc
adc
repz
out
sbb
sbb
inc
sub
popa
test
sub
sbb
mov
xchg
fadds
iret
inc
loopne
xchg
rorl
lock
stos
inc
aad
out
push
or
aad
cltd
fs
ret
pop
adc
pusha
inc
dec
sbb
cmp
sub
dec
xor
jmp
or
stos
push
jns
add
leave
lcall
pop
push
test
jg
iret
dec
subl
and
and
pop
add
pop
mov
sbb
mov
std
cmp
xor
cmp
jnp
push
xchg
or
adc
mov
and
mov
adc
cmp
add
pop
xchg
int
mov
sbb
je
stos
add
loopne
and
push
mov
lock
fisttpl
dec
mov
pop
push
ret
pop
lock
psubsb
es
loope
scas
inc
adc
add
inc
or
popa
mov
leave
xchg
bound
push
sti
sbb
inc
adcb
cmc
push
clc
adc
lahf
js
fs
adc
inc
inc
xchg
pop
std
leave
mov
lcall
xchg
sbb
sbb
cmp
sub
dec
js
shrb
add
sub
hlt
stc
or
inc
movsl
add
aam
test
pop
push
dec
push
sbb
sbb
mov
je
lds
mov
inc
in
xchg
lret
sbb
push
cmp
data16
xor
xchg
and
sbb
enter
mov
sub
mov
xor
outsb
jo
sub
mov
inc
mov
mov
je
pop
cwtl
push
stos
sub
aas
fmuls
sbb
ret
cmpsb
iret
leave
sub
rorl
xchg
dec
mov
sbb
popf
pop
push
ja
test
lds
pop
push
dec
inc
inc
adcl
mov
ss
jns
leave
rcll
cmp
mov
pop
and
faddp
iret
std
push
dec
pop
xor
cli
cmp
dec
out
pop
std
fiaddl
outsl
call
iret
and
adcl
les
les
scas
into
push
inc
xor
test
in
jo
or
rclb
in
adc
inc
mov
mov
aad
loop
and
xchg
lock
stc
mov
out
mov
jmp
dec
jmp
addl
push
out
jae
cmpsb
insb
aad
add
into
jno
jo
jo
lock
cmp
cmc
shr
xor
lret
xchg
push
dec
cmpsb
add
xor
lock
cmc
fwait
sbb
dec
inc
jo
stc
ljmp
dec
mov
push
mov
sub
fcmovnb
push
test
subl
insl
xchg
and
adc
add
fwait
sbb
mov
sbb
jns
cli
xlat
pop
sbb
jns
sub
aam
inc
ds
and
imul
mov
jno
mov
inc
in
add
cwtl
movsb
mov
adc
addr16
pop
inc
sbb
sbb
cmc
xor
push
mov
test
js
stos
mov
jmp
mov
jo
xor
lds
xchg
out
pop
xchg
push
pop
lds
xchg
ds
movsb
mov
xchg
sar
insl
pop
mov
aam
insb
lods
in
xchg
mov
xchg
jecxz
stos
jae
cmp
add
mov
adc
dec
mov
and
test
lea
leave
xchg
pop
push
sub
xchg
in
je
arpl
pop
rorb
lds
cmp
push
cmp
into
es
stos
cli
jnp
dec
mov
lods
addr16
dec
int
cmpsb
fwait
stos
jecxz
arpl
lret
cmp
jg
mov
inc
fstps
adc
add
add
or
sub
mov
push
cmc
stos
push
sub
xchg
xchg
rol
and
push
inc
or
sub
hlt
movsl
xor
jns
jp
dec
std
xchg
sbbl
out
insb
mov
mov
jecxz
scas
inc
dec
mov
scas
fimuls
mov
and
sub
pop
leave
mov
cmp
das
shl
pop
add
cwtl
test
filds
push
and
sbb
sarl
adc
or
sti
ja
push
mov
inc
inc
movaps
scas
inc
push
xchg
scas
mov
inc
mov
and
jno
insl
test
adc
orl
push
sub
stos
adc
sbbl
push
or
fs
insb
mov
test
hlt
jns
cmc
adc
in
lret
xor
lea
das
fistps
jae
jmp
inc
pusha
pop
fcoms
shrb
jecxz
jne
pop
jno
movsl
adc
xor
sbb
xchg
mov
xchg
rcrl
loope
mov
xor
daa
pop
out
xor
and
xchg
mov
ljmp
sub
xchg
and
int3
push
repnz
sbb
andl
lock
scas
jmp
xlat
xchg
mov
lds
negl
jecxz
inc
xor
mov
dec
cs
pop
adc
jp
sbb
das
pop
push
pop
lods
push
outsb
jnp
push
and
jb
push
aaa
inc
sbb
aam
addl
les
inc
fsubr
fsubrs
jns
mov
adc
mov
ljmp
mov
xchg
or
jp
sbb
or
jmp
and
cltd
inc
scas
dec
mov
and
mov
into
or
xor
sbb
push
fbld
and
sub
and
stos
adc
mov
and
adcl
mov
inc
and
scas
nop
cmp
aas
popf
clc
pop
iret
test
xlat
push
iret
aaa
data16
lods
xor
inc
daa
inc
test
in
into
sbb
aad
fwait
bound
ret
test
sbb
mull
mov
shrb
push
adc
rclb
out
push
mov
movsb
js
or
data16
xchg
xchg
out
aaa
adcb
sub
and
in
lock
pop
pop
xchg
xchg
rorb
rorb
xchg
lds
sbb
dec
dec
sahf
inc
fstp
popl
scas
out
or
jae
fistpll
jbe
jo
inc
fistl
push
cmp
mov
ds
cmp
popa
pop
push
and
aaa
kmovb
shrb
or
mov
xor
jg
push
scas
xchg
pop
js
out
ds
adc
pushl
inc
xchg
dec
mov
jbe
jecxz
leave
xchg
xor
push
cmovbe
or
pop
fcmove
add
mov
inc
jp
cmpsb
mov
das
xchg
cmpsb
jnp
inc
mov
dec
stos
xlat
fcmovb
or
add
mov
pop
and
enter
test
add
dec
test
outsl
inc
out
adc
pop
sbb
cltd
xorb
pushf
or
mov
aas
fiadds
cltd
cmp
push
shl
mov
sahf
jp
pop
jg
adc
addb
push
cli
and
pop
pop
dec
ljmp
mov
cmp
loope
xor
jae
jne
pop
jb
enter
jp
aad
push
xchg
daa
xor
aaa
std
inc
cmp
adc
sahf
sar
in
lds
jecxz
adc
push
adc
sbb
jmp
hlt
clts
addb
cmp
xlat
sbb
scas
mov
lds
mov
jae
icebp
jecxz
cltd
pop
add
shrb
repz
test
fs
push
dec
lods
add
icebp
push
jl
cmc
lret
in
sbb
rcrb
xchg
add
into
popf
xchg
xchg
hlt
cmp
ljmp
jb
stos
addb
stc
add
or
mov
ja
push
sub
xor
loopne
adc
imul
sbb
sysret
fwait
lret
mov
mov
mov
out
pop
jp
in
loope
mov
loopne
lds
inc
popf
push
xchg
xchg
jno
sub
sar
arpl
add
stos
push
jecxz
pop
clc
movsl
pop
dec
iret
out
cmp
sbbb
jno
leave
repnz
btc
add
test
mov
mov
lds
sub
sahf
pusha
negl
popa
popl
sbb
mov
aad
xchg
jp
dec
add
pop
imul
clc
cmp
sub
and
push
sarl
test
pop
cli
jno
out
adc
or
or
push
popf
dec
push
nop
outsl
cmpsb
and
pop
insb
pop
and
addl
outsb
xchg
lahf
pop
fdivrs
mov
rcr
add
je
pop
fiadds
jb
mov
sub
test
inc
test
jl
sub
jg
dec
fdivl
mov
pop
pop
mov
jb
mov
mov
decl
sbb
dec
jl
aam
in
xchg
shrl
jno
sbbl
pop
out
orl
sbb
xchg
mov
jo
lock
cmp
dec
imul
ret
and
jb
or
orl
cmpsl
daa
jno
hlt
cmp
shrl
cld
adc
xlat
js
or
mov
cmpsb
pop
sub
xchg
lods
mov
inc
adc
inc
push
cmp
testb
dec
add
pusha
cmpb
push
loop
mov
test
ret
fldenv
mov
fs
daa
adc
mov
fisttps
test
mov
out
mov
stos
sbb
imul
js
mov
mov
cltd
xlat
lods
test
aam
cmp
inc
fs
int
test
add
pop
lcall
imul
dec
and
mov
mov
addr16
xor
mov
add
lret
dec
jo
fistpll
outsl
out
cwtl
insl
outsb
cli
inc
pushf
mov
mov
push
insb
pop
fcoml
sbb
xchg
xlat
pusha
popf
roll
jmp
popa
sub
cmp
lahf
fdivl
shll
outsl
jecxz
flds
loopne
adcl
sbb
xchg
cwtl
stos
mov
sti
jmp
mov
xchg
std
mov
adc
mov
sbb
lds
mov
push
adcb
xchg
mov
jo
mov
repz
pop
sub
or
clc
push
push
inc
or
xchg
xchg
sbb
scas
sbbb
pop
es
dec
mov
xchg
decb
push
push
mov
pop
xor
loop
pop
inc
lds
lods
push
mov
lods
stos
scas
fimull
js
mov
aam
js
xchg
mov
cmpl
movsb
stc
outsl
jns
cmp
dec
roll
out
scas
push
push
inc
rcll
ljmp
cmpsl
inc
repnz
xchg
push
jb
test
pop
bound
sahf
call
push
aas
in
and
popa
shrl
lds
sub
es
movsb
jb
inc
scas
aam
xor
xchg
xlat
scas
pop
sub
clc
cld
mov
test
pop
pushf
pop
cmpsb
imul
mov
push
mov
mov
jno
dec
leave
jp
scas
jmp
pop
pop
xchg
ss
ds
mov
into
stos
scas
insb
stc
lcall
push
pop
test
push
hlt
jb
loope
or
mov
and
lock
and
sbb
xchg
repz
mov
lods
scas
xchg
clc
andl
out
ss
inc
inc
orl
insb
sbb
xchg
mov
mov
pushf
stos
fadd
sarb
daa
push
sub
jne
add
xor
leave
movsl
sub
sbb
jae
sbb
gs
jge
pop
adcl
std
mov
repnz
lahf
push
cmp
jl
shrl
lods
out
sub
add
in
cmpsb
mov
lds
adc
pop
inc
xor
and
out
inc
add
inc
adc
imul
dec
pop
int
jns
push
daa
sub
sahf
das
je
leave
push
bound
adc
xor
andl
sti
insl
sub
dec
popa
and
xor
jp
jmp
shl
cmp
fildl
push
sub
and
cmp
rcrb
xor
inc
add
jle
adcb
push
aam
lea
pop
loop
aad
fdivrs
jbe
mov
sbb
fwait
pop
pop
mov
rcl
data16
je
and
xchg
jbe
add
fldcw
cwtl
cmp
scas
frstor
mov
sub
jg
fcoms
mov
movb
outsb
sbb
mov
pop
adc
subl
lret
xor
cli
pop
lock
xor
sub
cmp
sub
test
aad
add
ds
mov
push
and
lahf
xor
lcall
cmp
lds
daa
lcall
popa
out
pop
dec
add
xor
dec
lahf
fidivs
in
add
testl
stos
lahf
mov
daa
leave
outsl
dec
pop
jnp
xor
inc
sbb
mov
stc
pop
lods
out
push
pop
mov
cmp
push
cld
push
mov
daa
andb
cmp
jmp
adc
mov
pop
inc
cmp
push
jmp
shrb
push
flds
imull
sbb
jmp
inc
push
xor
les
jecxz
lret
loope
iret
int3
leave
dec
jp
mov
pop
dec
movsl
mov
iret
repz
dec
push
aad
add
pop
lods
adc
enter
adcb
cltd
scas
jle
stc
sub
rolb
addr16
leave
shlb
dec
or
pop
out
pusha
aas
and
jae
mulps
dec
pop
jnp
popf
dec
pop
fucom
jnp
mov
data16
mov
mov
cmp
xchg
cmp
inc
lods
bound
jmp
lea
imulb
sub
icebp
jae
xchg
and
mov
sub
adc
iret
mov
loope
inc
pop
sbb
dec
jae
mov
test
into
sbb
dec
inc
mov
cmpsb
aad
fcmovb
pop
and
out
push
movsl
cli
rcrl
pop
pop
adc
add
outsl
outsl
lea
gs
rclb
inc
and
jle
adcl
and
aas
cmp
cmp
or
xor
dec
jl
jge
push
mov
nop
jmp
fldlg2
push
setne
cmp
aam
arpl
testl
jp
dec
and
imul
arpl
xchg
or
push
aam
test
cmp
cwtl
inc
daa
cmp
lret
mov
cmp
mov
or
mov
js
xor
sub
pop
dec
testl
add
push
xchg
out
rol
xor
test
psrad
sbb
std
out
rcll
stc
adc
mov
push
subl
cmp
add
adc
shr
dec
std
mov
stc
push
dec
orb
push
je
mov
xorl
xchg
mov
pop
pop
xor
shrb
cltd
arpl
jnp
jo
fildl
mov
mov
aaa
mov
iret
lret
dec
xor
pusha
das
aam
cltd
nopl
jmp
pop
ss
mov
push
test
flds
ds
mov
dec
lea
push
outsl
movsl
loope
push
in
mov
lea
push
mov
xchg
mov
jecxz
pop
xchg
in
jmp
aas
shlb
sub
pop
xchg
test
cli
dec
roll
lcall
lret
lds
es
jmp
and
outsl
mov
lcall
ljmp
or
ret
push
popf
mov
enter
lahf
shlb
enter
loope
in
sbb
or
rolb
mov
adc
loop
push
add
mov
and
adc
cmpsb
cmp
stc
stc
dec
sbb
xchg
ja
add
jl
pop
mov
scas
ret
and
mov
jge
addr16
ds
movsl
out
out
sbb
xchg
out
negl
lahf
cmc
fcoml
das
lds
and
in
mov
mov
decb
and
sub
cmp
pop
ret
xchg
gs
adc
push
call
mov
lret
dec
jmp
into
add
push
and
aaa
dec
in
cwtl
push
lea
fdivl
sbb
out
pop
xor
pusha
add
mov
in
mov
xorl
xor
jle
add
outsb
mov
and
mov
push
pop
cwtl
jns
test
adc
mov
xchg
mov
xor
pop
mov
cmp
inc
sbb
mov
xor
push
notl
or
mov
dec
ss
mov
push
adc
out
jl
lock
push
xchg
cmp
push
xor
adc
cmpl
aad
mov
out
pop
dec
hlt
jnp
adc
xor
mov
sysexit
mov
xor
push
push
repz
inc
in
jp
scas
sub
jne
into
insb
ds
insb
or
or
cs
es
add
fsts
notl
pop
fbstp
ficompl
pop
mov
dec
push
popa
loopne
dec
mov
in
ss
sub
fidivs
jns
ret
out
or
xchg
call
xchg
popf
xchg
dec
sbb
shlb
mov
pop
fdivs
aas
fnstsw
fisubrl
xchg
int3
adc
ficoml
adc
mov
cmp
out
add
xchg
adc
add
adc
mov
lea
or
insb
cmc
js
push
shlb
shll
lcall
repnz
push
jne
pop
sbb
push
push
push
jmp
adc
dec
stc
stos
pop
mov
sbb
mov
decb
movsl
ftst
mov
cld
inc
fdivl
sub
jg
cli
popa
jge
mov
inc
sbb
push
dec
and
pop
sbb
hlt
xchg
pop
fldenv
outsb
mov
clc
cltd
inc
stc
sub
pop
mov
jle
fildl
fstl
xchg
sub
jl
lret
bound
pop
mov
lahf
sahf
lahf
xlat
pop
jecxz
cmp
lods
repz
adc
shl
push
mov
push
inc
mov
and
cmpl
cmp
sub
lods
popa
stos
or
pop
push
in
subl
inc
xor
sbb
test
loope
push
and
mov
sbb
loopne
addl
loope
pop
lea
int
lret
addr16
mov
and
inc
and
gs
aam
ljmp
out
and
std
mov
jnp
fadds
inc
jo
xchg
fdivl
insl
ljmp
mov
xor
hlt
jne
ljmp
popf
negl
mov
sbb
or
popf
in
inc
clc
leave
jmp
cmp
cmp
jmp
int3
inc
cmp
inc
ret
pushf
int
xchg
mov
lods
pusha
bound
mov
mov
lods
xor
push
cmpsl
sbb
xor
popa
aaa
mov
fcoms
sub
imul
test
test
lods
or
loopne
mov
sub
pop
jge
outsl
or
loope
jecxz
call
lods
fdecstp
stos
adc
xchg
mov
sub
outsl
sub
loope
cltd
mov
les
fbld
cs
lcall
popf
cli
fisubrs
loop
or
jno
jmp
mov
mov
or
imul
push
movsb
clc
in
mov
and
call
or
pop
addr16
pushf
fistl
test
lock
sbb
mov
pop
mov
adc
subb
mov
popf
mov
cmpsb
add
jp
sub
mov
xchg
ret
out
test
jmp
inc
jle
or
push
or
or
imull
fsubl
enter
sub
data16
dec
or
add
out
jb
cmp
sbb
iret
add
pop
xlat
mov
ja
or
ret
mov
pop
mov
sub
xor
inc
enter
icebp
frstor
add
jmp
jo
xchg
or
cmpsb
mov
add
es
mov
push
cwtl
jmp
inc
adcl
out
xchg
cmpl
sahf
outsl
enter
aam
cwtl
cli
push
push
mov
cmp
mov
pop
loop
insl
ja
and
jnp
insl
loopne
jle
or
xchg
xchg
movsl
cmp
dec
arpl
xchg
inc
int
push
in
add
repz
ret
xor
mov
dec
sub
test
fpatan
lods
ffreep
sbb
jge
pusha
test
add
inc
mov
jp
sbb
fisubl
in
inc
shrl
adc
pop
fistl
pop
and
sti
mov
and
jmp
aaa
adc
jae,pn
mov
scas
stc
xchg
sub
dec
and
mov
cltd
mov
imul
xor
sub
loopne
sub
call
pop
int
add
shr
add
scas
xchg
mov
mov
or
jp
push
push
testl
jmp
stc
jb
mov
pop
xchg
xchg
push
ret
cmp
lahf
jns
mov
cmp
shr
mov
cmp
mov
xor
xor
movsb
test
stos
push
divb
mov
inc
mov
aaa
das
das
mov
mov
cld
int
push
pop
xchg
xchg
div
push
inc
cld
push
fistps
in
push
movsl
push
push
cmp
mov
lods
or
mov
loopne
mov
lret
push
std
orl
xchg
add
in
iret
pop
ljmp
aam
and
int
add
loope
loopne
repnz
inc
mov
mov
or
and
std
dec
insb
mov
ror
adc
cmpsl
out
jmp
out
scas
jnp
call
xchg
sbb
push
dec
mov
mov
cltd
dec
pop
jecxz
push
decb
test
push
cmc
nop
dec
push
jle
int
sbb
dec
mov
faddl
pop
pop
mov
fdivr
adc
scas
xchg
push
xor
and
int
iret
pop
test
negb
xorl
daa
sub
rcrb
dec
jl
pop
mov
push
lret
addr16
xchg
push
sub
iret
fucom
leave
mov
aaa
sbb
xchg
in
jge
or
cmpsb
add
jne
leave
pop
je
or
add
sub
leave
roll
fildl
pop
leave
loop
mov
mov
adc
test
sub
sub
cmc
dec
insl
xchg
stos
test
mov
push
rcrl
sbb
cld
xor
arpl
dec
in
push
jae
xchg
mov
dec
jmp
popf
mov
adc
clc
loopne
dec
sahf
or
sub
in
inc
cmp
pop
fwait
dec
aaa
adc
dec
cmc
test
call
cli
or
sahf
mov
push
xchg
lock
and
lret
pop
mov
xor
ret
sarl
es
stos
dec
cmp
fs
pusha
ret
sbb
loope
and
das
jae
dec
cwtl
insl
loope
inc
aam
mov
ja
push
push
jno
push
add
sbb
fistpll
pop
mov
lea
xchg
or
add
imul
out
sub
jl
cmp
push
pop
inc
push
loop
lock
or
into
arpl
test
out
adc
inc
cltd
push
push
sti
cmc
scas
aam
adc
cmp
jb
sub
nop
leave
jbe
push
push
adc
xchg
jmp
sar
mov
mov
push
add
outsl
jecxz
repnz
jle
xorl
gs
jp
jb
sub
xor
stc
test
ficoms
sub
ljmp
pop
push
out
ss
mov
sbb
call
mov
ljmp
or
mov
dec
arpl
mov
daa
lahf
fs
test
dec
jmp
xor
enter
sbb
rcll
pop
incl
jl
mov
orb
pop
cs
lea
mov
fdivrl
sub
fildl
ret
xor
cs
adc
call
mov
aaa
push
jmp
mov
mov
lret
test
add
fsubs
test
scas
xchg
pop
and
push
data16
cmpsb
fists
into
mov
pop
lcall
and
add
in
jmp
adc
pop
xor
je
mov
cmpl
push
fcompl
ficoms
push
fcmovnb
sub
outsb
push
cltd
and
data16
dec
test
sub
push
sarl
or
inc
mov
les
mov
sub
dec
dec
mov
in
push
mov
add
push
test
test
mov
test
mov
fnstcw
insl
leave
mov
loope,pn
push
in
mov
fidivl
mov
cmpsb
fcoms
scas
leave
sbb
xor
aaa
cmp
loop
sbb
lds
sub
mov
or
or
inc
mov
in
mov
js
push
cmp
adc
movsb
movsl
fcmovb
add
insb
push
add
aaa
mov
pop
mov
and
cmp
jno
or
mov
arpl
jl
or
push
out
jg
xchg
cmp
outsl
inc
pop
inc
and
int
mov
jmp
jno
push
dec
adc
outsb
fcmove
push
mov
dec
lock
pop
mov
pusha
sbb
adc
std
jmp
pop
sahf
inc
adc
mov
mov
sbb
scas
dec
sbb
out
mov
sbb
xchg
ds
dec
aaa
dec
inc
loopne
loopne
loop
cmp
std
cwtl
adc
pusha
popa
add
mov
sbb
movsl
or
adc
repz
pop
and
add
xor
aas
cmp
fsubrl
out
xor
jp
xchg
adc
popf
mov
jg
xchg
enter
test
jae
imul
cmp
loopne
push
shrb
sbb
pop
int3
cmp
xchg
mov
cmp
jmp
shrl
repz
cmpsl
jo
fwait
lea
adc
mov
jecxz
sub
push
sub
or
and
jmp
test
add
mov
sub
mov
xchg
in
jo
mulb
movsb
sub
inc
xor
xchg
jo
clc
scas
int
ds
testb
mov
jb
xchg
mov
cmp
mov
scas
mov
movsb
add
jge
xor
insl
push
mov
xor
imul
xor
sub
push
stos
jnp
xor
jnp
out
push
jbe
xor
cmp
jb
into
pop
jmp
jno
mov
cmp
out
cwtl
add
andl
xor
shr
mov
inc
in
int
int
add
test
dec
add
in
adc
dec
sahf
cmp
pusha
test
dec
mov
test
xor
addr16
cmp
and
fwait
xlat
inc
sarb
popa
stc
cli
lods
push
push
mov
mov
pop
fs
push
fidivrl
mov
data16
sbb
in
sbbb
rcrl
pop
sbb
test
dec
mov
sub
sbbb
jl
pop
or
je
frstor
pop
cmpsb
imul
rclb
pop
les
inc
mov
cmpsl
pop
mov
push
pop
fstps
or
mov
mov
rol
into
in
sub
dec
jecxz
dec
andl
icebp
adc
sbb
sbb
mov
shrl
icebp
out
cwtl
adc
push
adc
out
loop
ficoml
pop
dec
lods
xor
xchg
movsb
fwait
jg
lock
add
lock
xor
inc
negb
sub
pop
or
jmp
push
mov
hlt
scas
push
movsb
loop
cmp
mov
jbe
stos
push
xchg
push
notl
cmpsl
push
je
daa
xor
or
cltd
and
lret
fists
lcall
shrl
mov
clc
jno
dec
dec
cmpsb
or
sbb
sub
andl
fnstcw
aaa
jle
insb
xchg
inc
or
xorb
dec
jbe
lcall
pushf
movsl
inc
cltd
or
popa
pop
pop
cmp
adc
jns
mov
scas
and
fcmovbe
rclb
out
xchg
xchg
push
in
setl
nop
xchg
and
or
inc
test
data16
fiaddl
into
adc
push
mov
xchg
push
andb
lock
pop
ret
adc
pop
mov
dec
mov
cmp
lea
inc
cmc
push
arpl
xchg
xchg
nop
bound
jg
pop
jp
shlb
dec
ret
insb
mov
adc
outsb
dec
lahf
mov
lock
xchg
stos
xchg
adc
fcomi
and
mov
cmp
xor
andb
xchg
or
mov
sbb
or
sti
or
xor
shl
sub
je
movsl
in
negb
mov
mov
aad
mov
stos
push
psrlw
dec
inc
push
inc
std
inc
push
int
shrb
je
xor
xchg
xchg
in
sub
rcr
jle
pop
mov
outsl
lret
es
mov
fisubl
fists
mov
andb
into
push
mov
cwtl
clc
cmp
xor
pop
loopne
inc
sub
or
sahf
les
jne
adc
inc
xchg
leave
cmp
in
lahf
add
sbb
aam
xor
xchg
out
mov
out
test
cmc
orl
repz
dec
ret
jns
loopne
mov
imul
pop
dec
push
pop
mov
and
sub
dec
add
sub
je
sub
xchg
stos
ss
pop
mov
ja
jmp
sarl
aad
in
jae
add
bound
outsb
and
cmp
cmp
jp
sbb
test
aad
and
mov
shl
pop
rcr
or
push
mov
addr16
pop
mov
nop
push
fmull
dec
les
jns
jle
mov
cwtl
dec
sbb
ds
mov
mov
call
notb
mov
xacquire
test
push
inc
add
hlt
sbb
lods
jecxz
aaa
push
xor
fmull
pop
cmp
mov
in
lret
jb
mov
hlt
mov
je
sti
js
adc
cwtl
pop
pop
jge
jle
arpl
fs
mov
xor
sub
ds
into
imul
aas
repnz
dec
adc
xor
das
in
or
fcmovne
dec
jge
pop
xchg
inc
repnz
icebp
sub
pop
mov
jp
test
sbbb
pop
hlt
addl
push
sub
call
negl
je
cmp
dec
fldl
jle
inc
std
xchg
dec
pop
lock
or
pop
or
jne
adc
lds
les
and
mov
mov
lret
jne
gs
push
fmuls
xchg
cmpb
add
lahf
ljmp
xchg
adc
xlat
les
add
int3
mov
pop
lea
inc
cwtl
stos
adcl
mov
sbbb
and
leave
fs
aam
adc
jb
movsb
push
add
or
push
push
push
mov
ja
pusha
and
push
je
cmp
push
pop
scas
lock
ja
sub
movb
mov
push
jnp
stc
or
repz
inc
push
sbb
jno
mov
fs
mov
or
xchg
cmp
add
mov
movsl
in
sbb
inc
in
sbb
mov
in
xchg
jbe
push
dec
adc
jmp
fcmovbe
bndstx
pop
adc
jno
add
push
dec
cmp
sub
cmc
test
sbb
pop
or
rcll
mov
push
idivb
mov
lock
mov
mov
xchg
dec
push
mov
data16
jo
cmpsb
mov
pop
mov
sbb
cld
mov
cmp
adc
inc
fidivl
cld
pop
insb
pop
jmp
jmp
inc
insb
test
mov
sub
je
xor
arpl
aas
aad
out
je
imul
mov
icebp
sti
jbe
xchg
jno
fstpl
push
test
xor
mov
dec
subl
out
std
xchg
std
insb
icebp
xor
scas
cwtl
cmp
scas
jp
enter
mov
incb
sub
xchg
sarb
lret
inc
jmp
sti
daa
std
sub
mov
lods
rorl
mov
inc
mov
out
and
aaa
fimull
popf
or
leave
push
pop
xchg
mov
cmpb
push
add
jg
aaa
aam
pop
xchg
pop
adc
lret
mov
sub
mov
jns
sarl
lods
fistpl
sbb
lods
dec
ss
call
push
cmp
xor
clc
bound
out
xor
test
jne
aas
sbb
inc
inc
insb
imul
push
sarb
das
cmp
xor
jae
push
lods
jmp
mov
ja
fucomip
push
inc
cld
fwait
lret
cmp
add
inc
repz
in
repz
sub
int3
xor
jae
push
fidivl
out
xchg
sbb
test
pop
jmp
and
xor
jp
sub
mov
mov
or
int
mov
pusha
rcr
mov
sbb
xor
push
mov
mov
imul
adc
pop
dec
ret
sub
out
cmp
xchg
push
mov
out
mov
imul
xchg
sub
mov
pop
cltd
dec
movzbl
cld
xor
lret
xchg
imul
sbb
sti
out
add
xchg
inc
or
rcll
adc
mov
mov
add
int
inc
lods
out
dec
scas
loopne
es
push
adc
and
mov
or
xor
mov
fdivrl
loop
data16
daa
xor
out
cmpsb
cwtl
dec
inc
sub
dec
mov
adc
cli
xlat
jnp
jmp
push
fcomps
push
outsl
repz
cmp
inc
dec
loopne
jns
in
pop
std
sub
sbb
lods
push
lcall
je
out
push
inc
mov
jle
push
jns
lods
lret
int
cld
sub
dec
mov
push
dec
fidivs
test
int3
aam
inc
jl
stos
test
push
out
mov
scas
pop
leave
xchg
push
sbb
inc
pop
pop
jl
loope
ret
fmuls
out
sbb
inc
add
sbb
les
mov
jo
adc
in
push
scas
pop
sub
jo
sub
mov
fcmovnu
or
je
flds
lahf
ja
mov
test
cmp
pop
bound
adc
or
rcrl
dec
repz
xor
movsb
dec
pop
mov
int3
orb
sbb
push
jecxz
mov
cs
xor
cs
ficomps
mov
arpl
inc
xchg
or
jnp
lea
push
xchg
lods
cmpsl
aaa
pop
pop
and
push
push
mov
mov
sbb
lds
mov
packsswb
sbb
and
dec
dec
xchg
pop
and
inc
sbbl
jp
insl
sar
sub
nop
mov
hlt
sub
jl
test
mov
xchg
add
mov
jne
test
nop
dec
cwtl
ja
bound
or
out
shlb
inc
int3
push
push
lods
imul
test
scas
fs
lea
mov
mov
adcl
cltd
and
loopne
sbb
pop
cmp
lret
repz
je
lods
cld
cmp
mov
or
xchg
int
int
pushf
mov
shlb
xor
sub
movb
imul
test
pop
dec
out
push
and
js
sti
inc
test
test
dec
cmp
fistl
add
sub
cmp
pop
iret
fs
adc
jg
or
call
fisttps
mov
push
lods
jle
into
xchg
fstl
cwtl
cmpsl
mov
and
cmpsl
cmp
add
and
inc
ja
cwtl
mov
test
dec
mov
xor
jg
sbb
and
sbb
inc
mov
mov
or
movsb
data16
mov
mov
xor
sub
dec
pop
shrl
aad
or
jae
aam
or
pop
dec
cs
add
outsl
adc
fnstcw
pop
mov
push
pop
jb
inc
pop
xor
pop
lods
and
addr16
xchg
iret
out
jns
sub
push
inc
mov
pop
cmp
cmp
clc
dec
test
mov
icebp
popf
inc
cmc
sub
ret
ds
pop
lods
jne
adc
mov
outsl
sbb
xor
fisttpll
popl
popa
in
push
je
pmaxsw
cmp
jno
pushf
inc
movsb
mov
mov
jle
icebp
xchg
and
mov
scas
ss
and
clc
das
insl
and
fldcw
pop
enter
sti
cmp
clc
lods
mov
add
clc
jb
add
aaa
lods
mov
stos
cli
sbb
jmp
mov
push
and
out
mov
mov
leave
and
div
xor
xchg
cmp
out
lods
cmpsl
xchg
pop
sbb
mov
mov
sub
or
mov
mov
inc
dec
lret
das
lods
sarb
sbb
aaa
mov
inc
imul
cmpl
ljmp
jae
push
xchg
push
icebp
jne
push
mov
stos
lahf
insl
xorb
pop
pop
scas
inc
dec
xchg
aad
fisttpll
and
sub
cmp
sbb
pop
cmp
inc
mov
icebp
cmp
fiaddl
imul
js
cmc
ret
mov
scas
shll
or
insb
push
inc
fsubrs
repnz
mov
lahf
sbb
pop
lea
cmp
cmp
cmp
push
cmpsl
jle
scas
add
out
sub
scas
push
dec
dec
stc
jnp
lret
loop
dec
mov
int3
jl
mov
mov
test
lcall
sub
lcall
into
inc
inc
xchg
mov
ss
into
jle
fucomip
mov
mov
mov
mov
sbb
mov
xor
ds
adc
dec
add
ror
sahf
lock
je
movsl
jne
sub
sahf
mov
xchg
sub
loopne
movsl
cmp
add
mov
pop
mov
xlat
mov
rcl
or
leave
sti
pop
scas
gs
test
ret
mov
adc
jno
sub
xor
push
xor
xchg
sub
stos
iret
daa
cmp
fmulp
sub
jp
out
out
xor
xor
aad
mov
sub
sub
pop
scas
stos
rorb
out
stos
ljmp
decl
in
clc
fdiv
mov
pop
and
movsl
ja
dec
pop
ds
xchg
loope
sarl
and
lods
or
loop
cmp
punpcklbw
cmp
frstor
dec
mov
inc
inc
pop
mov
jl
aad
fisubs
jno
xor
imul
xchg
imul
cmp
aad
push
in
add
mov
sbb
stos
mov
push
xchg
roll
lods
scas
hlt
pop
jae
mov
call
shr
loope
sarl
mov
mov
arpl
sbb
cwtl
mov
mov
push
jg
ja
insl
xchg
xor
sub
test
sub
pop
int
mov
repnz
insl
pop
and
dec
das
loope
mov
cmpsb
lahf
clc
and
push
cs
sbb
or
or
sbb
cmp
jge
mov
imul
jnp
jb
dec
add
pop
rorl
jmp
enter
or
inc
and
out
mov
out
push
sbb
data16
clc
dec
subl
lahf
iret
mov
pushf
cs
fstpl
sbb
ds
mov
and
int3
xchg
out
and
pop
mov
shll
dec
push
xchg
push
leave
aas
sub
std
pop
dec
sub
jmp
jle
sub
addr16
aad
xchg
out
jmp
popa
fcmovnu
std
mov
clc
fldt
sub
xchg
les
xor
fnsave
jnp
cmpl
jne
jns
out
dec
ja
sahf
sti
sar
es
roll
jnp
inc
push
and
out
xchg
dec
and
scas
push
js
je
insb
sub
add
pop
jae
and
out
psubd
ret
data16
and
fimull
jo
xchg
adc
sub
adc
jo
mov
pop
dec
cmpsb
or
xorb
mov
jbe
stos
mov
jne
lret
xchg
sar
pop
mov
jl
mov
cmpsl
clc
mov
decb
sub
mov
add
xlat
cmpsb
fcoml
adc
insb
rolb
push
test
mov
imul
add
xor
sti
sbb
cmc
repz
xchg
stos
xchg
sub
inc
aad
inc
cld
jne
mov
in
dec
ja
bound
sub
xor
sub
stos
inc
pusha
mov
xor
stos
xchg
adc
ds
repz
ret
mov
test
or
jmp
push
sbb
in
je
mov
xchg
inc
cmc
jno
jo
cmp
out
pop
enter
sti
dec
ret
sub
lret
push
popf
ror
das
outsb
dec
imul
enter
fs
mov
stos
add
outsb
mov
add
jbe
mov
and
repz
dec
cmp
icebp
xor
aas
out
mov
lds
scas
mov
sub
stos
pushf
push
lds
xchg
pop
mov
enter
lods
ror
push
push
xor
pop
stc
outsl
out
test
lods
dec
in
sbb
imul
std
imul
cmp
pop
mov
pop
jmp
fcoms
mov
mov
jo
in
mov
clc
mov
aad
push
jae
xchg
mov
mov
movsb
sbb
sahf
and
sbb
pop
in
inc
sbb
fwait
in
js
test
lahf
test
fwait
xchg
pop
jg
cs
stos
push
loope
xorl
mov
inc
or
lret
sbb
mov
lret
or
mov
inc
add
push
or
je
mov
lahf
sub
and
inc
insl
ret
fisubs
add
pop
or
nop
jnp
fcoml
adc
dec
sbb
in
pop
shll
insl
nop
roll
lea
daa
cmp
sub
outsb
cmp
xchg
pop
shrb
xor
dec
les
mov
xchg
push
sub
test
lods
cmp
jp
xchg
dec
mov
mov
add
cmp
movsl
insb
aas
dec
cmpsb
or
je
std
ds
sbbb
xchg
mov
out
pop
sbbl
je
addb
lds
test
push
icebp
rolb
pop
cmp
mov
add
add
sub
dec
dec
push
fidivl
push
out
pusha
jge
jno
pop
daa
in
rcr
xor
loope
mov
mov
mov
push
and
icebp
adc
adc
ss
out
xchg
mov
pushf
lods
imul
mov
pop
dec
ljmp
fwait
cmp
mov
pop
and
and
nop
out
leave
lods
cld
pop
ljmp
in
sub
cs
jmp
cwtl
adc
inc
lret
lret
lods
and
or
fidivs
popf
gs
adc
fadds
dec
divb
ret
cmp
insl
mov
loop
idivb
out
lret
test
je
int3
bnd
adc
sub
sbb
push
cmp
mov
data16
nop
lods
mov
lock
dec
dec
dec
jb
fistps
mov
xchg
ds
jnp
lods
mov
sbb
mov
cltd
dec
jg
mov
mov
fcompl
sbb
stos
test
pop
test
ret
icebp
je
fistps
and
mov
mov
push
sbb
inc
pop
cmp
in
and
pop
outsl
pop
mov
push
je
pop
aad
roll
jl
mov
push
xchg
mov
pop
or
fsubs
pop
lea
sub
add
mov
pop
sub
mov
xchg
test
push
cmp
rclb
mov
or
add
push
ds
cld
scas
adc
push
add
int3
and
inc
fidivs
gs
adcb
jo
and
jge
arpl
aam
rclb
xor
mov
inc
mov
bound
add
cltd
aaa
adc
push
pop
cmpsb
adc
inc
insl
int3
test
fdivrs
xor
add
inc
mov
mov
fdivs
ficoml
mov
xor
nop
cli
cmpsb
inc
or
imul
dec
jb
insb
rsqrtps
xchg
je
cmp
and
addr16
aam
popa
pop
lret
icebp
push
fwait
add
jns
rol
leave
jl
or
fsubrp
jecxz
dec
test
inc
mov
sub
int3
adc
xchg
cltd
push
inc
stos
sbb
jmp
inc
and
push
ljmp
pop
outsb
pop
imul
mov
add
xchg
fwait
sbb
out
in
scas
fnsave
adc
jl
push
ljmp
lods
xchg
in
or
stos
icebp
shll
nop
add
fs
and
ret
sbb
fxch
cmpsb
bnd
xor
negl
aad
cs
scas
sub
lds
in
scas
popf
xchg
notl
or
loopne
addr16
cmpsb
popf
icebp
jae
sub
orl
aaa
sti
outsl
outsl
es
pop
mov
dec
in
clc
xchg
inc
pushf
out
cld
outsb
mov
into
mov
pop
adc
iret
push
lret
or
mov
outsl
adc
mov
ja
scas
in
fwait
into
add
push
jle
xlat
dec
repnz
loop
mov
add
pop
aaa
mov
cli
xor
mov
add
imul
fimuls
stos
add
int
mov
mov
jmp
aas
sbb
mov
orb
lds
or
push
popa
inc
jmp
imul
xchg
xor
and
mov
les
sub
push
mov
jp
mov
pop
dec
jp
push
paddusb
sahf
mov
push
push
ret
jns
adc
das
negb
mov
dec
fwait
add
xchg
add
add
inc
cmp
mov
or
mov
jecxz
add
or
int3
xchg
imul
inc
loopne
jbe
scas
sbb
jmp
inc
mov
iret
fidivl
mov
mov
popf
lods
push
unpckhps
push
push
jno
dec
and
cs
push
mov
xchg
sbb
pop
jb
lcall
xchg
cmp
mov
sbb
inc
push
mov
mov
decl
fs
cmp
sbb
push
xor
push
or
rcr
sub
jbe
push
sub
add
xchg
out
push
dec
and
jg
jno
nop
adc
sbb
xchg
je
push
jnp
lds
pop
add
pop
jnp
dec
dec
mov
or
jbe
movsb
inc
lods
movsl
push
loopne
sub
jne
in
dec
mov
inc
xor
sbb
lret
imul
pop
pop
test
sbb
mov
ror
xchg
jle
iret
orb
int
add
mov
int3
cwtl
cltd
ljmp
cltd
sub
sub
sub
outsl
cli
movsb
push
movsb
dec
pop
out
cmpb
dec
shlb
bound
inc
or
stos
clc
xor
or
inc
fcompl
xlat
adc
mov
push
lea
stc
fsts
packuswb
mov
adc
aaa
int3
pusha
push
mov
mov
xchg
jge
outsb
jecxz
push
lret
movsb
fdivl
aas
push
push
push
movsb
icebp
frstor
in
clc
movsl
push
adc
cmp
push
mov
mov
cmp
fdivrl
dec
xor
in
rolb
out
aad
lds
outsl
es
and
or
mov
mov
sti
repnz
js
mov
push
cs
fcomps
loope
daa
das
pop
and
les
shll
rcrb
dec
xchg
inc
mov
mov
sti
fst
lds
sub
xchg
test
mov
imul
outsb
je
aad
jg
mov
inc
and
lods
fcmovnb
xor
les
jo
or
popf
cmpsl
sub
pop
add
leave
mov
push
pop
pop
jl
fs
sbb
orb
mov
mov
push
cmc
into
scas
movb
loopne
out
fsubrs
fimull
pop
dec
mov
pop
or
rolb
mov
test
ss
push
ljmp
sbb
cs
mov
mov
imul
fs
xchg
inc
imul
mov
mov
popa
ja
test
jecxz
int3
fbstp
loope
inc
daa
ss
lret
std
push
adc
icebp
fistpl
add
push
pmulhuw
push
xor
aas
or
aad
pop
and
push
or
call
push
int
dec
int
and
lock
push
movsb
movsl
sub
imul
adc
stos
insb
int
push
sub
dec
das
jle
xlat
repz
cld
xchg
dec
add
cmp
repnz
pop
popf
jmpw
fldcw
add
stc
dec
stos
xor
mov
xchg
in
mov
jae
mov
aaa
fwait
push
aad
sti
inc
js
pop
outsb
pop
aad
and
push
sbb
jno
xor
int3
bnd
mov
push
inc
fwait
add
fidivrs
cmpsl
cmpsl
insb
lods
dec
xchg
push
and
xor
adc
enter
sub
test
leave
xor
and
cmp
jg
pop
add
lea
add
aam
nop
insl
sbb
push
test
mov
jp
add
fs
clc
mov
mov
mov
mov
lret
dec
sarl
pushf
jge
scas
push
fbld
mov
inc
sbb
inc
push
add
rorb
dec
loope
jbe
andb
mov
mov
fsubs
adc
test
cmpsl
aas
pop
sub
mov
inc
out
in
mov
fwait
lret
mov
add
add
and
aad
cmp
cmp
xorb
xchg
outsl
js
sub
out
or
cmp
repnz
cmpsb
stc
popl
adc
mov
mov
xchg
xor
ljmp
add
mov
dec
cmp
push
cmp
outsl
push
cmp
cmp
insb
fld
in
sub
fwait
sbb
mov
test
sub
fst
lret
mov
ss
incb
mov
add
push
pop
pusha
mov
sub
or
fisubrl
outsl
ret
push
fdivrs
mov
pop
ss
sbb
add
pop
mov
mov
inc
mov
mulb
mov
cld
cmpsl
mov
mov
incb
ss
mov
andb
adc
sbbl
stc
into
fstpt
mov
aam
mov
or
cmpsb
cli
int
sub
dec
cmp
adc
sub
clc
cmp
and
mov
and
push
out
orl
out
call
xchg
je
stos
inc
jb
inc
enter
push
je
int3
xchg
rorl
shll
insl
clc
idiv
push
jnp
out
in
das
into
and
test
ficompl
loop
lods
pop
mov
sbb
and
add
repz
or
adc
sub
fsubrs
mov
jl
ret
push
jmp
call
sub
sbb
inc
adc
scas
push
divb
negb
ljmp
ret
mov
and
leave
lret
pop
and
out
out
jmp
cli
add
add
add
js
out
outsb
xchg
ja
pop
scas
cmpsl
jle
out
and
fistpll
xchg
pop
addr16
mov
imul
push
test
les
insb
daa
push
push
sub
out
push
clc
cmpsl
pop
adc
sti
dec
xchg
cs
aam
inc
hlt
mov
rcll
fmuls
mov
mov
int
mov
jl
daa
in
add
cmpsb
or
mov
dec
mov
int
jo
lret
mov
mov
ss
xchg
sbb
jmp
cwtl
mov
fmul
imul
fcoms
ret
scas
rol
jmp
fnstenv
int
dec
add
jmp
and
test
xchg
mov
inc
mov
in
cmp
inc
mov
jns
outsb
hlt
arpl
bound
call
movl
push
arpl
or
sarl
sbb
jne
adc
jge
cli
jge
aam
push
out
cmpsb
cmp
cmpsb
loopne
sbb
cld
cmp
call
adc
fistpl
or
int3
cmp
sbb
gs
loop
mov
lds
into
in
dec
movsb
cmp
ret
hlt
sbb
xor
sub
and
fldenv
movsb
push
lods
nop
pop
mov
xchg
lods
push
inc
sbbb
push
inc
cmp
testb
and
push
pop
out
int
mov
inc
xchg
dec
jle,pn
ljmp
pop
jmp
cmpb
or
mov
pusha
leave
mov
mov
push
cmp
nop
loop
ret
jne
into
jmp
pop
push
and
sbb
addr16
inc
push
out
lret
sub
dec
push
lret
in
mov
jae
jns
fildll
sub
aas
sti
subb
das
xor
insb
call
inc
in
add
shl
ret
repz
jnp
adc
outsb
fisttps
xor
push
pop
cmp
pop
jns
cli
int
push
es
sub
lods
jae
call
dec
and
es
adc
cmpsb
or
repz
inc
movsl
mov
outsl
imul
jne
cwtl
out
push
jmp
cmc
inc
test
mov
popa
sbb
inc
lea
mov
xchg
pop
push
sub
repz
movsl
outsb
fists
rcr
add
push
movsl
stc
sub
loopne
pop
movsb
sar
inc
callw
cmc
jg
mov
adc
testb
aam
push
xor
dec
sbb
out
bound
pop
scas
adc
or
or
sbb
pop
out
cmp
pop
add
jle
and
push
aam
dec
pop
pop
xor
dec
dec
mov
mov
popf
push
pop
jecxz
adc
fisubs
incl
imul
add
mov
push
scas
fucom
adc
pop
sbb
dec
test
fidivl
outsb
or
lods
mov
aaa
fs
sbb
and
xchg
jo
push
xchg
sub
mov
addr16
mov
dec
imul
fnstenv
ret
mul
loopne
add
xchg
rclb
into
mov
repz
push
xor
clc
pushf
adc
sarl
fcmovne
and
std
jb
jnp
add
stos
fsqrt
clc
addr16
fcomip
pop
cmp
or
cmp
mull
dec
fbld
cmp
test
clc
cs
decb
xchg
mov
adc
dec
or
pop
push
jle
push
lcall
mov
pop
dec
arpl
clc
mov
fidivl
js
add
imul
repnz
dec
dec
xchg
xchg
adc
into
and
scas
scas
insb
shlb
outsb
and
repz
hlt
jns
cwtl
push
add
aad
psraw
fwait
sbb
cmp
fwait
inc
imul
not
xchg
popf
hlt
inc
les
mov
adc
mov
xchg
push
jne
ljmp
cmp
pop
pushl
iret
clc
lcall
loop
dec
jp
sub
inc
pop
leave
sbb
sbb
mov
loop
scas
xor
jne
pop
scas
insl
mov
inc
cmp
dec
dec
sbb
test
dec
mov
movsb
loope
push
movsl
cmp
cmp
les
mov
bound
icebp
sar
lods
cli
repnz
xlat
popf
jle
sbb
and
shrl
cwtl
fbld
nop
int
mov
aas
pop
sbb
mov
ljmp
push
outsl
popf
dec
pop
iret
out
and
mov
adc
and
or
pusha
and
jmp
lods
movsb
sub
push
rcl
js
out
adc
cld
adc
and
jb
and
push
fcmovbe
repz
jne
bound
mov
fistl
movsl
sub
cld
test
sti
sub
mov
xor
push
adc
addl
and
pop
push
cmp
aaa
xchg
insl
into
adc
rorl
mov
xchg
dec
scas
add
xchg
cmp
lods
add
adc
lock
xlat
mov
cmc
cmp
mov
movb
ror
inc
jb
mov
pop
fisubrl
fdivp
imul
std
xor
popf
adc
rorl
cmp
lds
rolb
xchg
push
and
pop
jb
pushf
push
jne
mov
sub
loope
aas
outsb
popa
jmp
lods
pop
mov
jno
sarb
add
mov
add
rcrb
dec
shlb
movsb
or
add
imul
sbb
cmpsb
xor
dec
jecxz
sbb
inc
fsubl
cmp
xor
xchg
out
add
xlat
dec
test
lods
xor
inc
out
inc
outsl
push
add
cmp
cli
jb
xlat
aas
and
mov
rcrb
lahf
bound
sub
fistps
xor
sub
data16
pop
xor
sarb
ret
cmp
mov
in
sarb
loopne
sahf
jnp
mov
movsb
lret
inc
repnz
mov
add
jb
mov
inc
or
xchg
decl
and
scas
les
dec
std
sub
mov
and
fistpll
sub
hlt
std
adc
xchg
push
pop
shrl
shlb
cmpsb
and
test
dec
mov
insb
cmp
ret
cwtl
icebp
push
shll
stc
scas
subl
lcall
push
sub
sbb
jmp
xchg
mov
mov
pop
adc
add
or
or
sbb
mov
sub
pop
sub
mov
in
cmpsl
bswap
roll
xchg
lods
fmulp
sbbl
pop
cli
jae
dec
cmpsl
inc
rcrb
and
stos
gs
pop
imul
ss
jl
sbb
sti
loopne
xchg
xor
dec
mov
mov
mov
adc
add
push
cwtl
cmp
stos
je
andl
fists
mov
out
lret
dec
mov
sub
orl
ja
inc
add
fyl2x
nop
inc
pusha
dec
jl
cld
push
adc
cmpsl
xor
pop
sub
clc
fldcw
push
daa
dec
mov
popa
sahf
mov
mov
iret
mov
stos
push
fucomi
test
lds
add
std
fisubs
fbld
mov
vmovaps
js
scas
jl
aaa
mov
jp
cmc
into
loop
imul
lahf
inc
add
inc
pop
sti
notl
and
decl
rcl
mov
lea
inc
and
cmp
stc
sbb
xchg
xlat
cmp
fnstenv
mov
ret
fnstsw
xchg
mov
bound
xor
sahf
jmp
mov
ja
mov
outsb
cmc
test
mov
cld
aas
mov
incl
ljmp
call
mov
test
stos
cmp
cmp
fldl
fstpt
gs
push
loop
imul
pusha
insl
sub
mov
lret
xor
movntps
xor
outsb
adc
mov
xor
pusha
pop
xor
pusha
jno
mov
mov
mov
mov
pop
ret
cli
into
lahf
cli
cmp
std
add
into
sbb
or
cld
xor
mov
cmp
mov
out
lahf
jnp
mov
ja
mov
cmp
and
shlb
imul
enter
mov
pop
jns
push
ss
les
mov
xchg
in
das
hlt
push
and
lds
ret
jbe
mov
jp
lods
push
sbb
lcall
sub
adc
mov
xchg
cmp
nop
jp
dec
adc
aas
ss
lock
fnsave
loope
popa
xor
scas
adc
add
out
sbb
push
push
mov
in
lcall
adc
les
movsl
mov
xchg
push
jno
mov
stos
decl
push
inc
push
les
mov
sti
adc
mov
sbbb
push
ficomps
aam
int3
dec
das
gs
cli
push
cmp
gs
adc
inc
jae
ret
outsl
popf
out
arpl
sub
pop
xor
jmp
int3
out
jno
cwtl
rorl
lds
dec
iret
adc
jmp
mov
ja
addr16
stc
push
outsb
fsubs
movsl
or
loopne
sub
imul
pop
in
push
mov
adc
inc
xchg
mov
stos
inc
adc
dec
inc
cli
andl
sub
imul
and
outsl
jbe
aas
cmp
mov
mov
push
incl
mov
enter
adc
jl
xor
mov
cmp
repz
stc
cmpsl
cld
mov
fldt
ffreep
mov
or
cmp
imul
mov
pop
lock
adc
sbb
mov
loopne
jnp
sbb
ds
xchg
jmp
cmpsl
push
pop
xor
cmp
mov
test
out
and
or
and
int
rcrb
lahf
dec
movsl
je
movsl
push
push
gs
daa
cmpsb
cmp
or
jno
inc
mov
lea
sti
sub
sarb
dec
push
rcrl
je
bound
mov
push
scas
xchg
mov
in
inc
dec
inc
and
lock
scas
cmp
mov
add
cmc
pusha
pop
jg,pt
xchg
or
test
in
xor
stc
push
sbb
push
mov
loope
mov
sub
xchg
inc
sbb
test
ficoml
inc
int3
aad
and
sbb
shll
dec
sbb
mov
mov
in
mov
cmp
sbb
les
int3
ret
xor
mov
negb
add
jnp
dec
dec
pinsrw
push
mov
out
int3
inc
bound
jmp
iret
cmp
xchg
out
inc
mov
in
dec
jo
lcall
xor
and
repz
and
mov
fisttpl
sbb
mov
popa
rcll
stc
data16
ljmp
xlat
xor
sub
lcall
sti
out
mov
inc
and
dec
popa
stos
leave
and
sub
fwait
dec
adcl
push
inc
jmp
xlat
dec
adc
andb
or
push
xlat
in
sub
stos
push
or
inc
add
add
xor
inc
loopne
mov
out
mov
pop
test
sar
and
xor
imul
rcr
push
adc
or
sub
adc
cmp
xor
push
mov
or
adc
stos
bound
adc
loopne
xchg
push
insb
dec
mov
cmp
adcb
nop
mov
idiv
pop
sbb
out
cmpsl
mov
adc
cld
fbld
jns
push
fwait
and
jb
add
jle
stos
inc
enter
mov
dec
mov
dec
testb
push
add
or
bound
jecxz
lea
pop
ljmp
repz
cmc
ljmp
lahf
jno
xchg
fildll
frstor
pusha
mov
movb
sti
cli
inc
out
mov
hlt
cmc
fistpl
lret
in
jg
lret
push
and
and
inc
fimull
loope
xor
fiaddl
mov
jns
xlat
fwait
ret
int3
je
mov
aam
push
add
sub
cmp
add
xchg
mov
mov
sbb
mov
mov
xor
movntq
out
imul
sbb
sub
jp
jecxz
cs
stos
shlb
scas
out
jp
mov
pop
ret
das
dec
je
xchg
pop
dec
sub
stos
inc
cmp
es
movsl
lcall
jecxz
dec
inc
in
xor
or
aas
sti
cld
or
ret
inc
arpl
dec
sub
adc
and
mov
dec
gs
and
add
fcomp
push
stc
mov
ret
sbb
inc
mov
mov
push
fucomp
mov
cs
mov
mov
jnp
lret
nop
xor
jg
mov
fcomip
inc
dec
lahf
mov
mov
fsubrs
cmp
xchg
or
cmp
inc
stc
push
mov
sbb
push
adc
jge
mov
mov
fdivrl
jno
sub
push
xor
push
mov
jl
jg
or
mov
add
jo
ficompl
sub
push
out
ret
mov
fs
rcll
pop
adc
xchg
mov
push
jecxz
mov
into
scas
and
pop
outsl
add
pop
lock
inc
dec
jns
ds
push
add
xchg
in
add
or
push
xor
scas
inc
das
iret
mov
pop
cmpsl
fwait
out
cmp
xchg
lret
cmp
adc
lds
mov
cmpl
dec
mov
cwtl
fsubl
add
dec
ret
xchg
pop
scas
mov
xor
push
and
jmp
pop
jo
push
std
sbb
mov
test
or
int3
cltd
sbb
aad
mov
rorl
pop
pop
xchg
jbe
pop
lret
ret
cmp
xor
jle
inc
es
and
lea
mov
mov
jb
jae
adc
jmp
arpl
lds
fwait
into
gs
inc
jl
and
out
cmc
ffree
shl
in
aad
stos
adcl
outsb
jmp
nop
pop
inc
outsl
pop
push
shrb
jmp
jne
xchg
push
add
and
xor
icebp
xchg
dec
sahf
pop
push
sbb
lods
scas
pop
mov
dec
jno
jg,pt
add
pop
sub
adc
add
xor
cltd
std
in
mov
xor
in
cli
out
jp
mov
in
insl
add
stc
add
or
scas
pop
mov
push
fisubs
xchg
int3
bound
jns
pop
pop
fldenv
or
xor
adc
add
cmp
incl
cmp
sub
lret
aaa
adc
mov
sbb
mov
inc
insl
aas
rcr
jmp
push
cmpsl
test
xlat
jl
inc
fistps
pop
es
inc
dec
xchg
ljmp
sub
in
mov
rcrl
push
je
pop
sbb
xchg
jbe
js
and
adc
cmp
cltd
inc
adc
and
mov
rol
mov
dec
nop
cltd
es
push
or
cmpsb
and
mov
sbb
sbb
mov
sub
mov
xor
xor
fbld
addb
mov
jno
inc
pop
adc
push
mov
xor
pop
lods
mov
out
xor
pop
and
out
pop
xor
xor
movsb
add
rorl
imul
and
fildll
mov
sub
rolb
and
testl
in
out
sub
int3
mov
add
fisubrl
adc
mov
aam
and
scas
call
xchg
pop
lcall
test
bound
pop
aaa
ds
or
movsl
pushf
mov
mov
cmp
fcomps
mov
xlat
movsb
pop
lock
std
cmp
adc
and
test
lret
mov
subb
inc
xor
int3
xor
and
fdivl
push
pop
inc
sbb
addr16
cs
or
inc
iret
cmpsl
cmp
lods
push
mov
mov
andps
inc
cwtl
add
ss
mov
idivb
jl
test
negl
in
clc
pop
fcmove
xlat
mov
daa
into
ss
call
sub
cmpsl
cmpsb
leave
movsb
leave
clc
mov
jle
cmp
ja
lock
fwait
loope
orl
cmp
sbb
mov
add
lock
jmp
push
enter
stos
inc
test
xor
inc
les
xchg
jecxz
sete
dec
or
xlat
jns
fdivs
js
xor
sub
out
jmp
movsl
test
je
xchg
add
pop
in
repz
lods
gs
sub
lods
mov
pop
jl
pop
lods
mov
lret
lret
xchg
fmuls
or
xor
pop
xchg
dec
inc
iret
or
push
cmp
pop
jg
loopne
clc
jno
mov
insl
jp
lds
sub
jns
ljmp
roll
mov
xchg
dec
xchg
sbb
imul
and
ja
fiaddl
cltd
scas
xor
push
shrb
and
push
mov
fwait
test
dec
mov
inc
inc
das
push
add
lahf
aaa
out
adc
out
jp
sub
bound
xor
mov
lahf
xchg
xchg
cld
sbb
lods
loop
and
aam
mov
lret
push
xor
rcrb
and
in
into
or
inc
cmp
xacquire
imulb
mov
sbb
jl
inc
xchg
cmpsl
xchg
shr
movsb
ja
sbb
adc
mov
dec
mov
lret
add
push
lods
sbbl
cmp
movsl
push
jns
jae
mov
mov
rol
xor
jno
jmp
and
icebp
aad
lods
push
je
pop
incb
mov
push
sub
dec
ffree
int
inc
pusha
cltd
jl
loope
je
push
aam
pusha
lret
into
or
adc
fidivrl
push
mov
sar
out
lock
add
not
ja
pop
cmp
imul
rcr
and
inc
daa
pop
scas
fisttps
sub
cmovns
jecxz
shrl
loop
mov
rol
cmp
jmp
repnz
dec
cmp
cltd
stos
mov
loop
shl
and
or
imul
mov
in
jge
and
mov
push
iret
jns
out
adc
mov
inc
shll
fwait
js
in
adc
and
push
xorb
int3
jnp
stos
loop
fsubrp
inc
sub
cmp
and
cmp
test
repz
inc
outsb
jns
cmpsb
arpl
aad
pop
xchg
pop
fbstp
xchg
push
mov
jne
push
mov
pop
stc
mov
push
fcompl
adc
mov
lods
add
ljmp
test
pusha
xchg
subl
stos
enter
fs
adc
add
sbb
cwtl
push
add
fcoml
add
int
fsubrs
dec
jmp
js
push
sub
les
repnz
pop
xchg
test
jp
sub
cmc
imul
mov
push
lds
jmp
punpcklbw
pop
adcb
mov
cmp
pop
push
sbb
sbb
cmp
sbb
inc
xchg
icebp
sub
xchg
xchg
xor
cmp
enter
insl
pop
jnp
sbb
dec
clc
in
cld
xchg
aaa
in
push
add
xor
sub
decb
sbb
jle
or
sahf
push
jp
sahf
xchg
mov
inc
add
out
nop
movb
leave
fcmovnb
cmc
inc
stos
sub
movsl
dec
test
iret
sub
cmp
pop
loopne
pop
cltd
jne
pushf
push
jmp
and
dec
cltd
adc
fstl
jmp
sub
clc
dec
jno
ja
and
cld
lahf
mov
dec
or
jge
xor
ljmp
cld
adc
lcall
pop
iret
xor
aad
jno
xchg
stos
cmp
sarl
xchg
dec
loop
ss
popf
hlt
daa
cmpsl
mov
ret
or
jne
xor
mov
add
sahf
test
mov
imul
sbb
jmp
pusha
addb
pop
ss
push
popf
mov
fldt
push
sbb
jmp
inc
daa
cmp
leave
cltd
adcb
sub
jbe
push
pop
mov
pop
sub
cwtl
aas
jp
rcrb
nop
xlat
mov
movsl
insl
aas
pushf
mov
mul
and
cli
push
aam
les
inc
dec
add
leave
scas
mov
fcomps
sub
insl
ds
cmp
cmp
pop
test
sub
lret
mov
fiadds
jno
dec
sub
mov
gs
lcall
mov
lret
js
dec
and
sahf
movsl
cwtl
lods
push
inc
or
lahf
adc
cs
xchg
fcoms
jo
sbbl
lcall
adc
and
mov
and
movsl
push
int3
inc
xchg
pop
xor
dec
adc
ret
push
bound
adc
add
xor
mov
mov
outsb
cmp
mov
fiaddl
aam
add
iret
xor
and
add
in
jno
mov
iret
clc
jbe
xor
push
repnz
sub
jge
mov
loope
lret
adc
add
mov
into
push
mov
es
aas
hlt
dec
daa
lock
notb
mov
mov
mov
jmp
adc
push
sub
mov
ret
mov
jae
cli
fwait
sahf
ret
test
mov
fdivp
inc
mov
push
call
xchg
sub
aad
and
dec
adc
xchg
mov
movsl
pop
ljmp
add
or
insl
lock
stos
jge
cmp
push
scas
imul
add
data16
in
int
cld
pop
fwait
xor
push
add
jo
sbb
icebp
data16
mov
push
pop
or
fisubs
mov
pop
jecxz
cmpsl
cmc
mov
sti
loope
xchg
push
cltd
sbb
adc
mov
mov
mov
sbb
sbb
xchg
jp
mov
ja
js
adc
push
and
mov
add
js
aaa
cli
mov
mov
insl
lea
jp
into
dec
mulb
out
ljmp
mov
in
adc
pushf
sbb
inc
cmp
pop
inc
inc
lods
push
cmp
jmp
movl
push
push
xchg
xchg
roll
inc
lret
jecxz
or
xchg
inc
scas
push
shlb
mov
sbb
and
adcb
fwait
test
addr16
nop
mov
aaa
lret
negb
dec
ficompl
movsl
sbb
sbb
das
push
adc
outsb
in
jmp
cwtl
xchg
mov
test
cmp
icebp
add
xchg
inc
lahf
cmc
xor
add
add
loop
outsb
cld
xor
inc
dec
mov
insb
mov
jge
inc
int
out
shlb
inc
add
pop
mov
mov
or
ja
dec
jmp
mov
sub
pop
jno
and
inc
lods
mov
sub
aam
lret
pop
pslld
jb
loopne
ss
fnstcw
jge
inc
cld
loopne
out
mov
push
cld
insl
push
call
movsb
dec
loopne
stos
pop
ret
sbb
or
mov
adc
xlat
push
std
pop
decb
or
icebp
push
mov
cwtl
clc
sbbb
mov
out
mov
mov
pop
dec
repnz
add
icebp
adcl
out
sub
mov
ror
aad
fcoms
mov
cmpsb
leave
add
dec
sbb
ljmp
mov
sub
or
and
push
test
xchg
mov
clc
sub
push
enter
push
fdivr
scas
fsubrs
sbb
cmp
daa
mov
fcmovu
and
sub
in
mov
inc
aas
jmp
push
pop
or
fisttpll
dec
aaa
out
iret
fists
and
xchg
jle
adc
in
test
icebp
sbb
shll
mov
adc
inc
iret
js
sbb
arpl
xchg
push
lcall
cli
pop
ret
cmpsl
push
adc
cltd
xor
push
data16
xchg
mov
push
inc
sub
sub
das
popf
sets
push
mov
sub
mov
jge
das
sbb
data16
mov
push
pop
mov
sbb
or
xchg
fbstp
scas
clc
xor
jno
cli
dec
or
lcall
mov
cli
sbb
stos
jns
je
outsb
jbe
mov
pop
dec
adc
push
movl
mov
and
mov
clc
cld
mov
into
jbe
dec
xchg
sub
aaa
leave
dec
xchg
fwait
cmc
daa
lods
push
sbbb
or
cli
adc
orps
add
sbb
mov
jecxz
cmc
add
push
std
cli
jl
enter
sbb
stos
push
lock
cmc
leave
jo
fidivl
inc
push
pop
clc
xor
mov
inc
and
imul
daa
sbb
neg
lret
mov
std
pusha
xor
sbb
outsb
adc
mov
leave
and
mov
or
pushf
cs
outsb
cmp
mov
xor
insl
testl
out
pop
pop
sub
pop
pop
loop
test
je
jne
sub
out
cwtl
jmp
mov
xchg
pop
jle
lods
in
xlat
mov
ret
outsl
jns
mov
cltd
clc
les
sahf
es
mov
shlb
sub
scas
mov
mov
jbe
add
bound
cmp
movsb
out
fistpl
jne
push
cmc
pop
sti
in
stos
jle
mov
loope
sub
jno
push
adc
push
nop
inc
sbb
push
cmp
ss
pop
daa
cmpsb
cmp
or
push
loopne
push
jae
shrl
das
add
or
or
hlt
inc
cmp
rcl
cmpb
adc
fisttpl
in
bound
iret
arpl
lret
mov
pop
data16
mov
test
leave
cmp
mov
mov
xlat
sbb
out
mov
enter
outsl
jecxz
out
xorl
push
pop
in
cld
lea
jle
imul
scas
or
mov
add
add
push
add
push
xchg
mov
addb
sbb
sahf
or
out
sbb
adc
mov
cltd
mov
xchg
and
cmc
cltd
jl
fs
mov
cmp
leave
loop
mov
iret
sub
lahf
mov
in
fldcw
test
orb
xchg
pop
fstpt
adcb
or
ja
gs
sarb
mov
and
add
scas
pop
imul
inc
enter
call
add
jne
jns
sbb
push
fdivs
jecxz
mov
ja
mov
shll
sub
xor
push
mov
out
fistl
add
mov
dec
fdivrs
imul
in
pop
jp
aas
icebp
mov
and
or
xor
push
std
inc
cmp
push
in
dec
xor
xchg
cmp
cwtl
sbb
cmp
adcb
pushf
pop
scas
pusha
fdivrl
movsb
ret
pushf
mov
mov
rcll
adc
test
jle
mov
jg
insb
mov
rcll
inc
outsb
aas
lret
mov
mov
xor
jecxz,pt
xchg
mov
inc
std
mov
add
push
jne
or
rol
es
xchg
iret
push
or
mov
mov
cmp
jl
or
ffreep
or
pop
hlt
mov
decl
inc
fldenv
cmpsl
mov
push
mov
add
jge
int3
cld
ficompl
movsl
in
cmp
sub
js
fldenv
xchg
pop
je
inc
jae
outsl
inc
jmp
mov
xchg
aas
push
dec
dec
pop
daa
xor
adc
mov
adc
pop
sbb
jne
cld
aad
dec
adc
xlat
fwait
xchg
ljmp
dec
jmp
pop
adc
sub
or
push
cli
shlb
lahf
into
mov
mov
and
pop
jmp
test
mov
dec
sahf
push
cwtl
xor
add
icebp
pop
addr16
push
dec
and
mov
cmc
xor
jb
jmp
test
inc
mov
pop
and
inc
push
sbb
sub
pop
push
stos
pop
xor
aam
adc
xchg
pop
jle
or
in
xchg
imul
sub
ljmp
sti
lock
pop
call
aas
jns
mov
sarl
or
out
mov
xor
scas
sub
cmp
xor
xor
dec
xchg
push
imul
add
mov
mov
mov
cld
js
mov
test
aaa
cmp
mov
xor
xchg
pop
in
movsb
add
push
adc
sti
xchg
dec
xor
mov
cmc
push
xor
add
sbb
mov
ret
mov
fcomip
rol
dec
stc
les
lea
gs
cmpsb
jno
in
xor
jmp
stos
test
rcl
in
fcmovnb
cmp
insl
sub
mov
xchg
mov
xlat
dec
mov
xlat
mov
subl
dec
int3
test
push
daa
aad
dec
repnz
or
pushf
in
jnp
push
sbb
jmp
fwait
xchg
sarl
imulb
insl
arpl
test
ret
jl
jno
sahf
xchg
aaa
cmp
out
cmp
xchg
inc
cmp
in
xor
sti
jb
dec
sub
lock
sub
stc
testb
aad
out
cmp
xor
stc
pop
xchg
add
mov
fdivrl
xor
lcall
sahf
mov
dec
push
stc
push
out
xchg
xor
mov
inc
es
into
push
popa
mov
lods
ljmp
mov
inc
cli
nopl
fbstp
jmp
gs
and
lahf
stc
push
enter
filds
and
dec
mov
ss
fsts
mov
call
sub
dec
sub
or
fimull
pop
jbe
aam
ret
dec
mov
and
stc
fisubrs
add
fs
cmp
lahf
xor
fmull
test
orb
xchg
icebp
movsl
nop
sarl
loope
sbb
mov
xor
ds
push
gs
js
dec
iret
and
into
fwait
andl
push
outsb
cltd
sbb
xchg
adc
lcall
inc
xor
icebp
dec
mov
jb
movb
loope
or
push
jl
scas
sbb
std
scas
outsl
cmp
mov
fistpll
out
insl
in
fiaddl
jmp
xor
loop
xchg
ret
jp
and
mov
lret
xor
sbb
leave
lret
leave
pop
add
insb
jnp
sub
fsub
cmp
add
pusha
out
faddl
lret
fistl
pop
pop
lahf
cmc
add
aad
mov
insb
pop
jle
ds
sbbl
pop
jnp
sbb
push
dec
cmp
scas
lret
jne
and
cld
mov
popa
in
mov
xor
and
jbe
jle
push
popf
test
insl
cmp
cli
mov
ret
popa
mov
loop
das
cld
gs
dec
or
into
cmc
inc
iret
fldl
adc
dec
jle
outsb
jns
jbe
sub
gs
xchg
jl
xorb
pusha
adc
aad
dec
iret
ret
sub
in
popf
lret
cwtl
aam
jbe
mov
dec
dec
add
in
xchg
add
pop
or
xor
xor
or
sub
xchg
mov
in
js
test
adc
rcl
sub
sahf
fdivr
mov
xchg
push
mov
or
outsb
out
cmp
fldenv
xchg
femms
loope
mov
stos
pop
mov
mov
pop
xorl
and
cmpb
add
lcall
loop
push
xchg
insl
js
les
es
rorl
lods
mov
add
clc
add
push
imul
xorb
and
mov
dec
xor
and
jae
dec
dec
inc
adcb
dec
arpl
addb
out
sub
xor
fs
push
xchg
sbb
mov
mov
pop
mov
mov
sub
push
cmpsl
push
sub
push
xchg
adc
jo
add
xchg
cmpsb
leave
dec
lcall
sub
and
test
in
xor
je
or
aaa
and
sbb
ss
or
xor
fnstsw
lods
mov
mov
loope
jl
mov
in
cmc
test
stos
popa
repz
in
push
jns
xor
and
sbb
data16
enter
fbld
mov
je
mov
inc
pop
cmp
cli
inc
lea
gs
push
push
mov
sbb
ds
aaa
mov
loope
mov
out
lods
or
dec
jp
popa
ret
mov
push
lods
mov
pusha
push
aad
scas
mov
push
insl
mov
arpl
lret
sbb
sub
fsub
jmp
lahf
inc
cltd
test
inc
in
mov
push
push
mov
int
test
movsb
cmp
cmp
push
outsl
add
fs
sub
testl
dec
push
shll
in
push
popf
cld
arpl
inc
mov
push
out
lret
xchg
or
cmp
sbb
sbb
inc
lcall
xor
cwtl
fnstsw
cmp
xchg
mov
cmc
ljmp
add
pop
test
push
insl
sahf
into
sbb
jae
xor
push
sub
fdivs
addl
cmp
push
inc
enter
or
push
bound
sarb
sub
xor
sub
add
sub
adc
mov
stos
cmp
or
mov
daa
jae
xchg
sub
push
mov
idivl
or
icebp
testl
int
cwtl
lock
cmp
je
sub
cmp
leave
stos
xor
and
sub
sbb
arpl
push
dec
fdivrl
xchg
pop
sbbb
adc
maxps
arpl
xor
loop
adc
pop
lea
ljmp
hlt
cmpsl
push
movsl
add
ljmp
pop
mov
insb
or
sbb
or
shll
ljmp
aam
fstpt
dec
cmpsl
mov
bswap
test
sbb
inc
add
fwait
imul
fcmovb
inc
dec
aad
push
loope
mov
jge
push
std
insb
daa
in
ror
mov
sub
sahf
pop
xlat
sbb
movsl
test
pop
sub
loope
dec
mov
cmpsb
xchg
dec
mov
inc
divl
push
ds
pop
or
dec
add
outsb
jl
sahf
sub
push
dec
jmp
pop
mov
xor
push
cld
xor
cmp
inc
and
adc
inc
inc
data16
vpcmov
push
std
adc
adc
xchg
sbb
ret
neg
adc
push
rcr
iret
sbb
cmpsb
mov
scas
push
shlb
fs
aam
cmp
and
sahf
ja
aam
mov
dec
ds
xchg
stos
mov
aam
adc
lahf
cmp
popf
push
cli
and
aas
imul
xchg
out
and
outsb
cmp
push
sbb
and
mov
inc
out
clc
xchg
lds
xchg
in
test
stos
cmp
mov
clc
pusha
fs
mov
jbe
jmp
cmp
test
fs
adc
testl
add
cs
jle
fnstsw
mov
jp
adc
and
aad
jne
mov
mov
dec
ret
scas
or
lods
add
in
negl
cld
xchg
ss
jp
sbb
je
fld
loopne
adc
dec
cs
add
ret
xchg
aam
fcomp
aaa
mov
lret
xchg
or
mov
lahf
bound
dec
aad
inc
adc
push
cmp
es
loop
les
dec
push
jb
aad
ds
and
aas
mov
pop
das
sub
jo
xchg
in
rcr
jbe
cmovg
mov
scas
enter
xchg
adc
mov
dec
adc
add
aas
es
roll
mov
nop
sub
cmpsb
cli
ret
push
mov
jne
inc
scas
mov
mov
notl
out
outsl
sti
in
cmp
push
pop
js
push
add
test
jecxz
adc
out
mov
iret
pop
cs
pop
mov
aas
mov
mov
sub
js
repz
or
xor
je
js
xor
inc
add
fcoms
int
xchg
adc
into
jnp
movsb
js
cmpsb
fdivs
or
rorb
ret
pop
fidivrl
and
push
xchg
adc
or
xchg
cs
inc
arpl
mov
shrl
push
mov
xchg
pop
jmp
sysexit
gs
aad
mov
jg
jge
pop
mov
sub
lods
fcomps
mov
ljmp
push
icebp
and
mov
xor
jae
loopne
fisttps
mov
mov
inc
cli
les
mov
daa
shrl
push
movsb
cmp
hlt
mov
shr
aam
cmp
jmp
movsl
and
mov
lret
cld
lock
lds
ret
inc
dec
mov
imul
es
test
rclb
sbb
mov
sbb
ficoms
movsb
inc
aad
mov
lret
push
or
sbb
dec
out
sub
mov
scas
add
lret
and
scas
pushf
push
xor
addr16
add
jmp
xor
xor
jmp
sub
jmp
or
movsl
es
pop
pusha
mov
rcrl
push
jg
aam
inc
sub
xor
add
fiaddl
pop
clc
popa
sarb
xchg
cmp
pushf
and
inc
loop
push
and
or
pop
cmp
mov
test
js
push
aaa
popf
sub
sbb
ret
sbb
or
js
daa
fildl
nop
js
sub
ficomps
fisubrl
cwtl
addr16
fsubs
inc
pusha
insl
sahf
pop
addr16
call
and
inc
pop
jne
dec
inc
rcrl
aad
ds
sbb
pushf
sbb
jno
add
mov
xchg
loopne
rclb
mov
imul
cld
mov
xor
inc
jp
inc
mulb
repz
in
mov
fildll
jnp
shlb
lea
jb
push
pushf
sbb
stos
sti
aam
cli
insl
push
push
push
lea
xor
data16
xor
scas
lea
pop
xor
ret
cmp
scas
jge
xchg
xchg
out
mov
mov
mov
adc
mov
js
mov
and
imul
cmc
lods
rcl
loop
mov
mov
cmpsb
pop
mov
dec
push
sub
loope
je
stos
fdiv
pop
in
sbb
pusha
ja
or
pop
push
xadd
repnz
xchg
subb
clc
mov
or
in
push
xlat
fsts
arpl
mov
cs
xor
dec
jo
out
push
ljmp
mov
fmull
or
cmc
fs
and
ror
mov
xchg
out
in
ficomps
inc
jne
xor
cltd
jbe
nop
dec
mov
ret
jmp
in
jge
push
fcomps
in
xor
xor
pop
dec
fistpl
xchg
mov
mov
cmc
mov
dec
test
ljmp
xchg
mov
pop
push
dec
xchg
sub
andb
fwait
cmp
scas
dec
into
call
mov
out
mov
popf
pop
bound
imul
dec
loope
mov
cwtl
cmp
xchg
out
sahf
int
icebp
mov
inc
cli
push
jg
xor
pop
cmp
movsb
add
pmulhw
ljmp
sbb
rcrb
jge
mov
mov
jle
mov
xchg
push
decl
xor
jg
aaa
pop
xor
test
icebp
xorl
push
addr16
es
pop
lahf
insl
jno
repz
jecxz,pt
test
inc
aaa
inc
negl
jl
mov
fnstcw
xchg
mov
jbe
add
sti
sarl
push
ss
daa
mov
cmp
sub
push
imulb
push
ja
adc
xor
cmp
rcll
out
insb
std
jecxz
lds
jno
jge
test
cld
lods
js
or
jecxz
daa
sbb
out
mov
fbld
scas
ss
cmp
mov
ja
outsl
adc
testl
dec
aas
inc
popa
dec
sbb
push
adc
pop
xor
test
mov
sbb
in
jno
fildl
lds
sub
out
pop
testl
xchg
imul
adc
add
std
outsb
pushf
jmp
sub
pop
push
add
imul
sbb
xlat
cmp
dec
mov
push
pop
movsl
lret
sub
iret
jbe
jecxz
add
adcl
dec
test
lcall
dec
adc
cs
dec
in
out
and
test
dec
stc
test
insb
and
inc
fistpll
inc
push
ficompl
fadd
push
lret
and
sub
inc
test
mov
adc
cli
sub
out
aad
mov
daa
and
mov
sub
sub
aaa
test
cmp
test
mov
pop
inc
mov
cmp
lcall
jno
sbb
cmp
mov
or
into
push
jl
fisubl
aas
testb
lret
lahf
aaa
out
jp
cmp
sti
cmp
insb
dec
pop
movsb
mov
fs
shl
addl
dec
or
cs
mov
inc
jo
sub
jb
test
sbb
mov
inc
mov
aad
sti
out
cmp
fucomi
out
notl
sub
xchg
addr16
xlat
xor
or
sbb
mov
bound
push
or
mov
fcomip
inc
mov
ja
pop
xlat
jo
push
push
fildl
inc
fwait
cmovnp
add
scas
pop
pop
xchg
or
jbe
clc
dec
out
test
dec
imul
xchg
arpl
mov
xlat
jmp
sub
sub
lds
cs
pop
xchg
pop
cmc
and
repnz
or
cmp
and
inc
iret
jb
dec
ljmp
push
pop
rcrb
mov
stos
imul
jbe
stc
pop
and
jg
inc
aas
pop
incl
adc
mov
mov
xor
adc
lods
xor
or
inc
and
and
xchg
mov
cmp
into
jge
cmp
mov
fstpt
dec
out
cmp
dec
les
push
add
push
jmp
cmp
icebp
sub
xor
movsb
adc
test
sbb
mov
and
stos
mov
sti
dec
loope
adc
cmp
imul
out
repz
mov
mov
mov
bound
jl
pop
xor
cli
les
mov
lods
mov
sahf
mov
jns
mov
pop
sbb
pop
sbb
xchg
arpl
or
mov
clc
mov
sti
outsl
in
int3
inc
push
add
enter
addr16
aaa
idiv
add
inc
and
cmpsb
lret
into
add
pop
xlat
mov
jo
iret
add
popf
in
sbb
rcl
insl
out
inc
insl
sub
arpl
shlb
pop
movsb
sbb
lods
mov
adc
xchg
mov
or
pop
stos
add
out
loope
add
sbb
cltd
pop
lds
cmpsl
adc
push
mov
in
mov
xlat
dec
xchg
cmp
inc
dec
push
sbb
rclb
ja
mov
fwait
hlt
imul
push
inc
popf
mov
mov
cwtl
aas
jl
idivb
dec
out
mov
xor
fildl
leave
inc
out
adc
loope
cmp
xchg
test
push
xchg
repnz
imul
daa
sub
xlat
mov
xor
cs
mov
mov
pop
cmp
rolb
adc
mov
dec
repnz
insb
insb
mov
in
inc
dec
aaa
out
lds
push
dec
in
add
iret
dec
inc
outsl
in
pop
aas
ja
add
stos
scas
iret
mov
add
ljmp
int
dec
out
mov
or
test
movsl
cmc
sub
adc
scas
jns
inc
jmp
movsb
push
mov
jmp
test
jl
dec
push
add
mov
aam
jae
jo
mov
adc
xlat
cmp
sar
fxch
fisttpll
sti
lcall
xor
cmp
inc
negb
imul
xchg
ja
jg
xor
lcall
pop
lods
imul
jl
sarl
push
mov
nop
xor
push
test
es
in
lret
cmp
mov
add
inc
mov
mov
fisubs
mov
shrb
add
mov
pop
sahf
stc
sbb
sar
and
ds
icebp
mov
shll
fnstcw
pop
jo
call
pop
icebp
and
jb
int3
mov
jmp
pop
or
fsubl
xchg
lods
jp
sub
cmc
mov
push
imul
fbstp
inc
sbb
jg
pop
xchg
mov
sbb
and
int
jne
movsl
jmp
hlt
mov
fwait
jge
mul
push
pop
flds
inc
jo
xchg
aam
test
insl
cs
sbb
pop
or
cwtl
lock
sbb
repz
fadds
mov
mov
or
xchg
cmp
stos
in
pop
incb
mov
dec
mov
mov
aas
adc
inc
std
in
xchg
or
jo
or
adc
pop
mov
dec
aaa
je
mov
jmp
sub
inc
mov
pusha
into
xor
je
test
cmpsl
and
push
cmc
mov
mov
push
inc
sub
cmpsb
fadds
jge
and
je
frndint
mov
inc
lods
sbb
rcr
test
enter
jmp
add
sub
loope
scas
out
push
cmova
sbb
scas
mov
rcrb
push
fxch
mov
cmp
scas
fwait
mov
lea
xor
inc
push
adc
fidivrl
xor
and
cwtl
sub
add
xchg
mov
push
mov
jle
jno
mov
xchg
ss
in
push
push
mov
je
fimull
popa
dec
movb
arpl
sub
and
outsb
or
imul
cwtl
xchg
mov
xchg
mov
push
push
lds
pop
sub
pop
arpl
jp
scas
mov
cmpsl
jae
or
mov
movsl
mov
or
dec
shl
xor
xchg
mov
xor
shrl
pop
fbld
stos
cmc
aad
pop
jno
jb
fdivrs
push
push
dec
push
inc
loop
jmp
js
xor
stos
fdivl
push
test
lret
popa
ret
mov
iret
adc
ss
cmp
xor
shll
dec
jae
outsl
adc
sbb
test
shl
cmpsb
lods
cmp
daa
mov
push
adc
mov
xor
xor
pop
imul
pusha
mov
push
inc
in
xor
push
add
inc
js
push
pushf
or
push
dec
out
push
push
lahf
int
or
add
pop
sbb
xchg
dec
or
fisubl
xchg
and
lahf
sub
mov
cmp
lock
push
and
daa
mov
stc
mov
inc
xchg
fcomps
sti
push
fmul
sub
inc
xor
fnstsw
popa
out
mov
repnz
fiadds
pop
inc
arpl
inc
pop
into
xor
inc
xchg
in
sbb
daa
mov
push
sbb
loopne
decl
sbb
jge
addr16
fsubrs
and
rcr
xchg
in
cmp
insb
cmp
out
xor
out
adc
imul
mov
scas
cli
dec
or
inc
push
inc
clc
incl
fmul
or
test
cmp
xor
das
aam
pop
mov
xor
andl
imul
lret
jno
sbb
sbb
jg
xor
cmpsb
xchg
inc
jecxz
in
icebp
sbb
mov
add
repnz
notb
mov
int
pop
jge
and
inc
pop
inc
adc
test
push
cmovs
dec
and
xchg
cmp
jmp
inc
test
adc
inc
stc
mov
mov
jb
outsl
jle
add
outsb
nop
iret
inc
adc
dec
and
or
testl
pop
mov
cs
jb
incb
pop
ljmp
hlt
in
add
fsubs
ret
sbb
sbb
xor
test
ret
cmp
sahf
xchg
inc
push
sahf
addb
orb
jb
insb
call
loope
add
pushf
jl
and
jnp
jmp
mov
push
jae
mov
mov
xchg
scas
cmpsb
cltd
repnz
xchg
mov
sub
jecxz
lahf
dec
icebp
mov
push
and
mov
add
ss
jge
adc
and
inc
add
xor
ret
cmp
push
repnz
mov
jp
inc
cli
sub
js
je
sub
push
out
jae
js
inc
decl
push
dec
inc
shr
rcrl
clc
lock
jg
lahf
or
fistps
pushf
lods
imull
or
dec
aam
push
cmc
push
jnp
mov
scas
ja
fld
jp
xchg
add
push
jecxz
mov
mov
jg
mov
xchg
int3
add
hlt
xchg
lock
mov
js
add
lret
pop
or
inc
in
dec
cltd
sbb
mov
add
pop
leave
fwait
and
lret
out
push
jg
lea
mov
loopne
fisttps
pop
pop
shlb
orb
and
sbb
add
pop
out
cmc
js
sarl
xchg
mov
inc
jg
cltd
xchg
mov
out
xchg
mov
mov
cmp
rcrb
shr
test
stos
aaa
inc
leave
mov
mov
xchg
testb
popf
jns
ret
dec
stos
xor
cwtl
pop
push
popa
popf
inc
cmpsb
inc
cld
pop
cmp
out
add
dec
pop
shrb
shrl
inc
dec
bound
in
leave
xor
adc
fidivl
sarl
sbb
cmp
sub
mov
pop
in
pop
cmp
lcall
inc
cld
fwait
xchg
jmp
std
scas
xor
mov
add
push
or
pop
call
push
ffree
inc
and
into
cmpsb
mov
add
adc
mov
lods
jg
sbb
lods
jg
testb
mov
mov
out
sub
cmp
mov
ficoml
xor
fiadds
in
xor
repz
repnz
sub
rolb
cli
test
popa
nop
dec
mov
stos
cmc
test
mov
insb
or
mov
mov
arpl
aad
adc
push
push
mov
ljmp
clc
cs
mov
ret
out
test
int3
mov
push
arpl
pusha
jecxz
icebp
cmp
fs
int3
sub
or
popa
lods
fs
leave
xchg
dec
sub
dec
push
xchg
fdivl
repnz
icebp
popf
in
and
pop
loop
jbe
add
and
fs
jnp
pop
rol
cmc
sahf
shrl
adc
cs
arpl
sarb
test
mull
loopne
adc
iret
mov
lahf
jg
dec
out
adc
insw
adc
js
pop
mov
add
xchg
int3
mov
jno
sti
and
in
mov
and
cmp
andb
outsb
jl
faddl
in
movsb
or
daa
arpl
sub
push
out
mov
repz
mov
pop
out
adcb
adc
clc
je
xor
cmc
cwtl
idivl
mov
call
cmpsl
arpl
shlb
xor
stos
mov
ljmp
out
into
pop
rcrl
fldcw
and
aam
gs
movsl
test
lock
faddl
imul
test
sti
xchg
push
inc
xor
jp
loopne
add
add
sbb
addl
repnz
xchg
lds
out
mov
mov
jle
mov
jo
pop
fcoms
lret
xor
fs
push
mov
bnd
mov
in
cmpsl
add
out
cld
inc
out
cmc
xor
loopne
dec
div
lcall
call
mov
mov
xor
xor
add
aad
imul
xor
mov
add
sti
push
pop
jmp
sbb
mov
leave
mov
test
cmp
jge
lea
adc
jnp
cmp
lret
add
ljmp
test
push
rcl
lock
fadds
dec
pop
pop
add
sbb
insl
enter
dec
dec
mov
push
data16
out
aad
adc
stc
daa
cmp
rorb
xlat
inc
pop
or
push
lahf
push
pop
mov
or
jg
inc
dec
cmpb
mov
or
out
pop
xchg
loopne
mov
mov
mov
mov
mov
mov
test
push
cmpsl
pop
dec
nop
lea
std
ljmp
cmp
fcmovbe
inc
xor
fnsave
jne
out
xor
ret
fcomip
imul
sahf
add
sbb
inc
cmp
xlat
pop
jge
inc
sub
dec
arpl
and
sarb
mov
mov
mov
repz
out
ja
jbe
sbb
xorl
das
sub
daa
cmc
mov
rcrb
shll
dec
bound
ret
sub
movsl
lods
filds
jp
jno
fwait
mov
cmp
push
cmpsl
adc
push
sbb
or
neg
cmp
pop
pop
cmp
test
xchg
push
das
mov
cmovs
pop
sbb
mov
pop
or
mov
adc
movsb
mov
leave
in
sub
pop
pop
pop
ljmp
call
stos
pushf
adc
add
xchg
adc
inc
movb
cltd
dec
push
inc
vpcomub
mov
xor
filds
test
cmpsl
insb
in
xchg
lcall
pop
pop
jno
adc
adc
inc
pop
inc
dec
mov
jl
popf
add
mov
mov
inc
into
push
sub
add
xchg
pushf
fdiv
iret
mov
test
adc
cmc
mov
dec
mov
lock
test
cmp
xchg
roll
andb
jnp
pop
popf
xchg
mov
jp
mov
xlat
push
xor
xor
mov
sub
inc
mov
cmp
pop
inc
outsb
sub
inc
and
mov
cli
push
sbb
inc
pop
notb
jle
dec
xlat
hlt
jg
mov
vmread
dec
dec
adc
test
cmp
sub
pushf
push
pop
fsubp
sub
and
loope
add
add
adc
pop
ret
or
adc
mov
mul
push
mov
mov
sbb
mov
jl
add
orb
into
pop
icebp
stc
aas
pop
pop
das
imul
add
int3
pop
mov
iret
dec
fs
add
idivb
movsl
mov
mov
inc
sbb
jge
and
js
cmp
int3
cmpsb
cli
test
andl
ja
mov
mov
mov
pop
mov
jmp
test
dec
or
mov
jne
cli
es
dec
dec
sbb
pop
lea
push
and
or
jge
mov
mov
pop
stos
scas
fisubrl
shll
outsb
sub
mov
sbb
fadd
sti
inc
addr16
outsb
and
loop
fdivs
mov
inc
sahf
mov
xchg
bound
push
push
jg
aaa
jbe
mov
movsb
sub
lea
add
adc
cs
inc
cld
cmp
outsb
jb
jmp
cmp
inc
out
xchg
or
push
pop
dec
sub
ss
or
jp
pop
sbb
out
scas
std
dec
push
add
xchg
fcmovnbe
dec
mov
test
pusha
add
scas
es
xchg
aaa
jl
or
mov
js
xor
cmp
fstpt
xchg
int
inc
out
nop
mov
pop
pop
inc
mov
out
cmp
shlb
popa
pusha
ljmp
and
xor
adc
sbb
std
test
fs
out
xor
pop
push
sub
fs
adc
jns
cmp
pushf
push
out
iret
inc
ret
lcall
pop
mov
add
push
das
nop
sub
loope
into
addr16
pop
fstps
js
lret
xchg
cmc
jb
adc
shll
jbe
repz
mov
jns
and
dec
pop
iret
and
dec
in
fdivrl
shll
jne
addr16
pushf
call
mov
xchg
dec
fisttps
mov
cwtl
and
ficoml
sbbb
mov
and
mov
jns
pop
jle
jl
cmp
mov
aad
mov
inc
out
outsl
cltd
dec
cmpsl
jg
js
xor
clc
dec
cmp
mov
into
arpl
mov
fisttps
jge
sbb
or
sbb
dec
orb
out
int
pop
push
test
dec
gs
cmp
aaa
push
insb
pop
cmc
rorb
mov
sub
lods
idivl
xor
mov
sub
test
push
and
mov
cmp
xor
iret
adcb
inc
sti
fwait
scas
scas
dec
sbb
jge
mov
pop
pop
std
xchg
inc
xor
adc
rorb
push
out
enter
adc
out
and
or
les
cltd
cmp
shrb
shll
ljmp
add
dec
mov
mov
push
int3
mov
push
inc
out
lock
ud1
jnp
out
adc
xor
lea
shll
xchg
jno
xchg
fldenv
hlt
int3
pop
lcall
mov
dec
call
sbb
xchg
cmp
push
loopne
cld
cmpsb
arpl
shll
mov
out
mov
adc
pusha
gs
in
stos
sbb
push
lods
xor
pop
and
pop
mull
pushf
add
into
jae
pop
xchg
daa
pushf
and
fnstsw
pop
dec
imulb
xor
sbbb
add
mov
xor
sbb
mov
dec
pusha
push
pop
scas
lea
dec
add
pop
in
push
jns
clc
in
or
sbb
xchg
arpl
popa
fs
inc
sbb
ljmp
outsl
mov
ljmp
cmp
addb
dec
fldl
and
pop
lds
stos
or
push
pop
push
inc
pop
inc
nop
push
adc
int3
and
jnp
pop
adc
xchg
fsubr
mov
lods
sbb
loope
pop
cmp
xchg
mov
out
cmp
push
push
add
add
jne
movsb
in
add
mov
inc
pop
bound
mov
or
jg
fs
jge
jnp
dec
push
dec
sub
pop
dec
out
xchg
mov
aam
and
push
inc
or
jle
mov
push
cmp
ss
jmp
xchg
jae
push
xchg
je
orl
scas
push
xchg
push
inc
push
jg
push
stc
sub
jae
in
or
out
pusha
mov
xchg
mov
xorl
mov
data16
movsl
and
jle
aas
jnp
cld
test
stc
mov
cmp
dec
jle
mov
shlb
sub
outsl
ja
ja
sub
cs
cs
into
dec
inc
xchg
rorb
pushf
loopne
pop
stc
xchg
add
call
lahf
ss
into
cmpsl
cmc
in
lcall
push
pop
movsb
jo
js
mov
jo
jg
insb
lret
mov
xchg
sub
jne
jmp
movsl
or
lcall
lock
std
js
sub
shll
or
pop
inc
mov
dec
and
xlat
imul
mov
jbe
sbb
pop
xchg
or
mov
sahf
leave
pop
fsubs
lcall
cmpsl
stos
xchg
pop
in
addr16
or
inc
jb
xchg
push
push
fdivr
es
push
dec
sub
sbbl
pop
cld
mov
es
push
xchg
lcall
cld
mov
mov
dec
jne
lahf
add
int3
dec
fisubs
sub
lods
imul
or
mov
mov
aad
nop
lret
andb
add
sbb
jecxz
hlt
pop
inc
lcall
xor
ror
mov
leave
bnd
lods
mov
rol
lock
loop
mov
ret
in
xchg
fs
jno
pop
xor
pop
and
or
call
icebp
sbb
pop
cmp
xor
xchg
fsubrs
inc
cmp
pushf
call
xlat
cmp
imul
addl
scas
out
shr
mov
and
lcall
pop
rcr
jle
ss
imul
push
mov
out
adc
push
mov
add
mov
mov
pop
or
mov
xchg
adc
mov
push
mov
push
xchg
fildl
fwait
negl
fsubs
rcll
into
scas
push
fs
scas
and
cwtl
mov
sbb
es
inc
or
scas
loope
push
out
lahf
orb
icebp
in
jle
cmp
in
scas
xchg
jl
ljmp
dec
test
stc
adc
push
xor
mulb
xorb
dec
cmp
mov
stos
mov
lods
add
mov
je
das
xchg
jmp
cltd
or
cmpsb
mov
push
sbb
mov
xor
and
popa
xchg
pop
scas
outsb
xchg
sub
jbe
aas
jno
mov
sub
push
lods
sti
inc
lods
insl
dec
pop
inc
dec
push
fnstenv
push
out
mov
xor
add
nop
inc
sub
push
in
xchg
pushf
mov
cld
call
jb
popf
movsb
mov
mov
test
xchg
dec
mov
jae
out
orb
jle
push
aas
andl
push
xor
fnsave
imul
out
jb
pop
mov
push
stc
outsl
add
es
shl
stos
je
jae
icebp
cmp
daa
outsb
push
jge
xor
cld
popf
int3
ret
pop
rcrb
ja
mulb
stc
pop
jne
subb
push
addr16
aam
jno
mov
jle
pusha
push
scas
int3
dec
imul
inc
xchg
imul
insl
jne
mov
mov
test
lcall
xchg
clc
mov
xor
push
jp
and
pop
pop
xchg
jnp
adc
in
xchg
xor
mov
lea
push
adc
mov
test
inc
pop
sbbb
cmp
inc
es
sub
dec
aas
xchg
inc
jl
mov
std
xchg
mov
in
aaa
dec
dec
jne
inc
arpl
dec
icebp
mov
pop
ljmp
mov
pop
add
pushf
cs
sub
ficoml
ret
ret
adc
icebp
sbb
xchg
neg
mov
pusha
push
aam
sbb
xchg
mov
xlat
hlt
neg
imul
in
std
ds
sbb
pop
or
sarb
dec
sub
sub
pusha
pop
sub
cmp
xchg
insb
movsb
rcrb
dec
js
xchg
arpl
sbb
sbb
xchg
jle
stos
shll
pop
or
pop
mov
pusha
xchg
movsb
dec
flds
lock
jp
add
test
addr16
faddl
rorl
push
fwait
dec
ljmp
mov
push
inc
sub
lret
sbb
icebp
cld
fdivrs
fisttps
push
mov
jg
and
or
scas
pop
repnz
lret
mov
mov
inc
xor
popf
mov
dec
cmp
aad
sub
cwtl
mov
loop
xchg
rorb
enter
ss
jnp
out
lea
jg
ret
std
clc
adc
and
lret
enter
sbb
jl
call
inc
adc
jle
sbb
lods
or
ret
cmpsl
push
cmpl
roll
arpl
out
insb
gs
jmp
push
lret
jecxz
and
clc
shll
sub
enter
adc
jo
cmpsl
xor
faddl
mov
add
lahf
aas
in
dec
push
jne
inc
sbb
jl
cltd
sub
cmp
sub
loopne
xor
loop
rcll
push
sub
push
inc
ret
cmp
test
movsl
mov
mov
and
outsl
insl
sub
or
or
mov
mov
out
inc
test
xchg
mov
loope
mov
adc
adc
inc
dec
xor
lcall
jno
pop
jnp
repz
push
js
pop
aad
jno
daa
test
movsl
repnz
imul
lret
lds
cmpl
addr16
rcrb
mov
adc
cwtl
daa
dec
mov
or
adcb
imul
pushf
pop
iret
push
cs
xchg
inc
mov
imul
push
fnstcw
push
or
lods
ljmp
xchg
ret
pop
out
inc
fidivrl
lcall
cs
mov
into
pop
add
data16
ljmp
or
sub
sbb
push
mov
int3
mov
mov
xchg
inc
push
jbe
cwtl
test
pop
push
xchg
xor
hlt
dec
jge
rcr
cld
and
test
mov
mov
xchg
into
or
push
into
cmp
push
mov
mov
xchg
push
xor
cmp
xchg
push
xchg
inc
add
fimuls
mov
test
aas
mov
mov
lahf
bound
shrb
cmp
mov
popf
ja
mov
or
xchg
addr16
lret
xor
mov
icebp
cmpsb
dec
and
sub
lods
shl
insb
test
cmp
adc
sub
aas
icebp
stos
lds
shlb
jns
cmp
adc
push
leave
insl
add
pop
sub
mov
dec
push
jge
adc
fnstsw
jnp
pop
jge
or
cli
shll
and
pop
jb
scas
loop
cmpsl
outsl
add
push
cmp
mov
sub
sbb
inc
shll
mov
cwtl
outsb
inc
dec
sbb
insl
xchg
in
lret
mov
shlb
push
push
fiaddl
cltd
push
jne
jae
outsl
xchg
repz
xor
mov
aas
or
inc
add
pop
mov
imul
add
ret
movsl
pop
jg
jo,pt
xchg
jnp
sbb
loopne
cmp
and
ljmp
push
sti
or
lods
stos
stos
ds
iret
push
sub
dec
cmp
ss
popa
xor
lea
movsb
std
or
xchg
xlat
xchg
mov
jnp
pop
jle
and
lcall
xor
popa
cmc
idiv
stc
roll
push
imul
mov
xchg
fwait
dec
lcall
mov
es
fisubrs
sahf
enter
call
mov
popa
jo
sub
adc
test
dec
jle
enter
adc
nop
fs
cld
aad
lods
addr16
jecxz
or
pop
and
ret
push
lods
xchg
pop
cmc
cltd
mov
lcall
imul
rcr
lcall
stc
lret
scas
stos
inc
mov
loop
sbb
pushf
cli
jle
xchg
dec
xchg
pop
lods
or
mov
jo
stos
shlb
scas
mov
stos
movsl
jecxz
mov
mov
mov
fistps
push
xor
lea
pop
dec
scas
ja
add
push
enter
and
cs
mov
movl
inc
adc
dec
push
rcrb
repz
insb
mov
push
push
test
jmp
outsb
insb
mov
dec
leave
dec
andl
jno
mov
test
xchg
add
mov
or
dec
push
test
cmpsl
mov
enter
jmp
or
push
shrb
repz
cmp
sub
xor
push
outsl
xchg
cmp
mov
cmp
mov
mov
push
jl
insl
and
cli
push
ja
cmp
shll
mov
imul
mov
out
out
lock
dec
mov
mov
cwtl
cmp
pusha
data16
rolb
xor
pop
pop
ret
in
cli
testl
scas
xor
movsb
lea
pop
or
or
mov
ss
sbb
pop
cmc
push
push
pop
xor
ficoml
or
or
out
xor
fdivrl
dec
mov
je
cmc
xchg
repz
outsl
push
enter
out
mov
mov
cmc
push
xchg
xchg
mov
fmull
inc
int3
andb
int
pop
in
aad
jns
lods
xchg
cltd
adc
ja
xchg
lcall
sbbb
mov
pop
add
lahf
push
cmp
ljmp
mov
add
or
repnz
xor
cmc
imul
popf
and
or
jne
add
xor
aad
outsl
je
in
fbld
les
adc
icebp
sbb
cwtl
mov
add
pop
arpl
ss
hlt
fsubs
and
dec
mov
jmp
jno
add
xchg
push
in
pop
fldl
dec
mov
and
sarb
mov
int
scas
into
xchg
in
sbb
stos
in
popa
mulb
scas
enter
mov
push
inc
mov
mov
push
and
push
jnp
add
xchg
lods
out
add
mov
jne
xchg
inc
nop
sub
cmc
aad
mov
shrb
inc
in
jno
rcrb
or
imulb
fstpt
dec
in
sbb
push
sub
dec
sbb
xchg
mov
div
and
sbb
outsb
pusha
jo
loop
mov
and
mov
test
clc
push
test
mov
dec
mov
mov
or
mov
dec
jmp
jg
sbb
sti
mov
jmp
fcoms
in
movsb
mov
out
int3
lret
mov
dec
or
mov
scas
fwait
in
xchg
sub
mov
xchg
std
dec
shl
jp
mov
movsl
add
adc
mov
insl
dec
sub
cmp
mov
adc
es
sub
mov
fcomp
mov
sub
popf
outsl
adc
dec
jns
mov
dec
sbb
xchg
aas
cmpsb
rorl
mov
push
shll
xchg
jle
inc
les
mov
xchg
orb
push
movsl
adc
jle
andb
pop
subl
add
in
pop
xchg
cmp
mov
cmpsl
add
sub
mov
xchg
incb
testl
xor
jbe
adc
jmp
mov
mov
and
add
mov
iret
mov
inc
shrl
iret
sub
push
cmp
dec
aas
jne
das
stos
mov
leave
mov
cli
sti
mov
jmp
pop
mov
mov
outsl
mov
lds
xchg
movsl
sub
psubusb
mov
fadd
aaa
mov
clc
cmp
and
mov
and
add
jae
pop
cmp
mov
bound
into
mov
mov
adc
pop
jbe
mov
add
popf
sbb
jnp
shrl
xchg
add
dec
push
mov
mov
push
out
into
mov
jmp
negb
xchg
sub
popf
sub
data16
sub
dec
movl
ret
ss
mov
jp
nop
sub
pusha
lret
pop
leave
pop
mov
jo
pop
imul
rcll
cli
fidivrs
add
aas
mov
ja
and
aaa
cmp
mov
or
pusha
jecxz
xchg
jmp
cmpsb
jnp
nop
sub
sub
pop
shrl
cltd
ss
mov
ret
mov
mov
in
pop
mov
sbb
data16
aam
xlat
arpl
xor
cwtl
sub
dec
pushf
add
jb
jle
add
adc
shlb
ja
dec
mov
mov
push
js
shr
mov
jns
lods
jno
psraw
jp
gs
paddw
and
icebp
cltd
xchg
mov
stos
inc
hlt
jp
and
cmp
mov
add
push
mov
negl
sub
xchg
sbb
mov
subb
popf
jge
das
jbe
int3
popf
add
in
cmp
je
sti
lcall
inc
subb
bound
adc
sbb
loop
inc
mov
imul
add
out
mov
popa
jg
dec
rcll
rclb
loop
rorb
or
or
mov
mov
xchg
push
pushf
jle
pusha
pop
xchg
cwtl
out
int3
pop
lea
mov
in
fldt
mov
add
dec
lods
or
add
mov
lcall
push
ds
cmc
outsb
in
cmp
xchg
out
pop
into
rol
stos
rolb
adc
fucomp
movsb
fildll
or
aad
imul
add
aad
adc
adc
push
cs
pop
and
pop
and
sub
mov
into
sbb
sub
mov
dec
dec
mov
inc
mov
mov
les
nop
inc
xchg
jno
add
vphaddwd
jbe
add
and
push
lds
push
lods
mov
int3
or
mov
cmpsl
push
je
or
push
test
addr16
jae
rcll
jae
imul
xchg
scas
or
sahf
jnp
nop
or
lods
pushf
pop
add
fwait
js
add
pop
cwtl
in
jg
clc
mov
xchg
inc
fisttpl
call
jae
cltd
jp
jo
pop
faddl
hlt
sub
jg
push
sub
or
xchg
lds
mov
es
jns
cmp
and
jb
sub
pop
shll
pop
out
pop
movsb
jecxz
mov
push
and
cwtl
fnsave
jg
test
jo
js
and
lahf
enter
rcrb
je
or
pop
sbb
mov
dec
mov
js
mov
xchg
shlb
int3
and
dec
or
or
push
cmpsl
xor
xchg
insb
test
movsl
scas
inc
push
out
stos
shll
bound
shrb
fs
insb
adc
cmc
jbe
push
pop
test
adc
loopne
outsb
cs
sti
and
pop
cmp
push
pushf
int3
mov
fildll
outsb
lods
jbe
jne
popa
leave
leave
shll
jmp
pop
in
jb
inc
addb
mov
ss
dec
jns
inc
mov
pop
adc
addr16
aam
jecxz
mov
pop
sub
and
sahf
fmuls
or
iret
jae
outsb
cmp
inc
mov
int
jb
sub
sbb
fdivrl
xchg
add
mov
sbb
mov
lock
jmp
jae
test
jg
mov
pop
pop
mov
shll
movsl
inc
cmpsb
stc
dec
dec
shr
jl
stc
add
pop
dec
push
mov
jmp
out
out
jmp
lods
xchg
inc
cmp
add
mov
movsb
add
sahf
jns
fnstcw
push
cmc
xor
push
stos
pop
je
push
std
aad
arpl
ljmp
push
push
cmpsb
add
lds
sbb
sub
xchg
fs
jp
cs
popf
jp
jne
cmp
test
incb
mov
push
vpunpcklqdq
push
popa
stc
mov
inc
sub
in
push
or
aad
lret
adc
shrb
ret
daa
jle
decl
icebp
jnp
rcll
mov
sarb
rcrl
push
push
jmp
or
je
adc
pop
adc
imull
iret
mov
ret
pop
mov
cmp
jmp
stos
mov
xchg
mov
int3
xchg
outsl
push
mov
mov
lret
push
sbb
sbb
xchg
push
xchg
mov
jge
jp
push
fmull
mov
sub
dec
and
push
push
or
lock
std
lcall
mov
push
out
xor
or
icebp
mov
je
and
xchg
push
jae
or
mov
mov
jbe
lods
cmp
fcmovne
sub
sbb
je
xor
outsb
in
or
das
push
dec
xor
pop
ja
mov
pushf
out
cmp
rcll
adc
test
and
pop
lods
js
mov
repnz
nop
fisubl
dec
lods
lea
mov
dec
jo
sbb
addl
cmp
jns
jmp
or
add
xchg
xor
add
jae
ret
pop
sub
mov
push
xchg
loop
movsb
decb
cmp
xor
jb
js
lret
add
cli
xchg
in
hlt
sub
and
fs
ljmp
int
push
mov
mov
push
push
iret
push
aas
cmpsb
aaa
cmpsl
xchg
cmp
sub
fmull
jnp
push
in
dec
icebp
loope
mov
outsl
jno
pop
add
into
stc
mov
add
into
movb
test
sarl
leave
je
jns
fwait
pop
push
xchg
cmp
xor
add
cmc
repz
push
dec
adc
xor
push
sti
and
mov
jo
sbb
shll
fwait
mov
aaa
mov
adc
arpl
dec
jl
cmp
mov
jmp
inc
sti
data16
sbb
outsl
adc
cmp
pop
out
loope
cmc
jns
mov
xchg
xchg
popf
mov
cs
adc
xor
dec
fcoms
xor
ret
popa
mov
xor
mov
jnp
xchg
mov
test
xorb
lods
jmp
fildll
mov
xchg
jno
fwait
mulb
clc
scas
neg
xchg
mov
test
lea
inc
or
dec
mov
je
xchg
cmp
dec
shl
inc
clc
mov
das
jbe
ret
ds
scas
sbb
out
xchg
sbb
push
mov
aas
ja
notb
out
sarb
and
push
aas
pop
jmp
je
adc
lret
push
xor
imulb
inc
outsb
pop
push
inc
pop
push
add
adc
lods
mov
cmp
xor
rol
inc
in
inc
stos
sub
hlt
repz
mov
jnp
mov
stos
inc
push
pushf
push
mov
dec
xchg
clc
bound
and
aas
out
in
jno
aam
xor
cmp
add
inc
sub
movsl
mov
xor
jmp
shl
outsb
add
sub
cmp
aad
or
push
inc
out
insb
pop
pop
sbb
faddp
sbb
or
pop
fbstp
push
std
push
in
nop
daa
in
inc
cmp
mov
mov
dec
cmp
pop
cmp
inc
push
jb
lock
push
add
mov
out
enter
xor
cmp
mov
or
dec
adc
lret
pop
sub
insl
icebp
mov
inc
sbbl
push
icebp
outsl
add
aad
sahf
xchg
inc
add
mov
or
pop
std
scas
xchg
out
xchg
add
mov
jnp
pop
out
and
sarl
mov
lcall
add
std
jo
mov
and
xchg
test
nop
faddl
cmp
fs
push
jl
pop
iret
dec
in
icebp
pop
out
aas
and
lock
cmp
cltd
push
xchg
sbb
addr16
lret
addr16
jae
ret
adc
xchg
sahf
pusha
jmp
sbb
pop
cli
pop
mov
bound
cmp
shr
and
push
or
imul
jne
mov
fimuls
xor
dec
inc
sbb
inc
aam
pop
jae
mov
leave
or
aas
pop
rcll
lret
ljmp
mov
or
loop
pop
cmp
inc
mov
mov
rolb
push
jno
lea
jecxz
lcall
dec
mov
icebp
fstps
mov
xchg
sub
ret
js
pop
cmp
shrb
sub
add
nop
iret
loop
sbb
andl
sub
sub
aam
inc
enter
mov
mov
bound
les
jnp
xor
jmp
rcr
pop
xlat
jbe
xchg
jae
and
mov
int3
je
sbb
test
gs
outsb
jmp
push
add
jecxz
push
inc
sub
test
out
fldenv
cmp
jecxz
xor
shll
jp
ja
inc
ret
sbb
pop
add
stos
jmp
mov
ret
sbb
pop
sahf
dec
std
daa
sbb
adc
in
pop
xorl
mov
clc
pop
xchg
imul
sbb
pop
jne
or
mov
mov
inc
xchg
xorl
pop
push
cmp
dec
jns
pushf
test
loope
insb
jmp
repz
xor
rolb
xchg
fnstenv
outsb
jno
ds
jecxz
es
lods
cmc
lret
lods
push
mov
mov
mov
fists
pop
enter
lret
push
cs
adc
mov
fs
inc
adc
adc
les
out
inc
push
cs
push
lea
ret
mov
push
or
cwtl
loop
mov
jno
insl
cld
pop
dec
push
in
fdivrs
mov
push
out
incb
loop
adc
ljmp
subb
pushl
rorb
jge
loope
adc
mov
sti
xchg
aam
cltd
bound
mov
and
les
mov
inc
jae
cmp
movsb
cmp
popf
xchg
jno
mov
mov
pusha
scas
jle
add
dec
fadd
test
push
push
ja
clc
loop
pusha
in
iret
sbb
sub
loope
jge
lock
mov
clc
shll
cmp
push
push
dec
mov
jno
jb
enter
sbb
stos
test
test
out
insb
pop
cmp
jmp
xchg
push
mov
jnp
or
rcl
adc
jo
jle
xchg
test
pop
shl
xchg
ja
fucom
add
and
pop
pop
arpl
sbb
mov
ficompl
lods
cmp
loopne
arpl
jns
ds
aam
mov
lret
jecxz
jb
test
outsl
mov
or
sti
mov
std
inc
jmp
mov
test
movsb
sbb
ret
add
fadds
jmp
jg
imul
ret
insb
popa
mov
das
pop
inc
mov
shrl
mov
mov
ja
mov
test
xor
mov
xchg
pop
icebp
rcr
out
add
add
das
push
jp
xor
xchg
pushf
outsl
push
cmp
add
inc
jp
push
jl
fucomip
pushf
in
jl
and
add
ds
sub
mulb
inc
or
mov
xor
inc
ret
mov
insb
mov
mov
xor
into
xor
imul
dec
pop
xchg
cwtl
mov
fcmovb
or
push
jno
pop
dec
sbb
notb
je
test
dec
cltd
add
dec
aad
lret
aam
aaa
dec
mov
mov
outsl
ss
pop
cmpsb
lret
out
rcrl
xchg
jo
or
cmp
mov
or
mov
cmpb
aad
jb
xchg
mov
icebp
xchg
adc
jns
push
sub
xor
imul
jae
cmc
pop
push
mov
mov
mov
push
pop
popa
ud0
jge
stos
outsb
decb
sbb
jecxz
pop
and
adc
outsl
test
pop
fs
and
stos
subl
mov
ss
mov
inc
mov
lea
mov
enter
xchg
shlb
pop
inc
daa
fidivl
mov
xchg
xchg
outsb
cmp
inc
aam
mov
pusha
mov
sbb
shl
pop
mov
jnp
mov
fnstcw
jnp
jmp
mov
push
add
bound
adc
push
add
test
mov
aad
nop
cmp
daa
popl
sbb
add
fbstp
or
shrl
xchg
sbb
xor
lds
mov
cmpsl
andl
or
adc
insl
mov
daa
fwait
je
das
jns
push
dec
test
or
sar
and
mov
mov
xor
pop
fwait
sub
popa
test
fdivr
push
shl
push
daa
repz
adc
in
xchg
test
test
xchg
icebp
dec
add
or
push
jg
mov
jl
xor
test
ret
sub
xchg
inc
shl
int
lret
xorl
mov
mov
adc
mov
call
xchg
xchg
pop
xor
mov
je
jecxz
jbe
in
jl
mov
push
lahf
or
and
sbb
dec
out
out
add
and
std
outsb
lahf
pop
or
push
out
mov
cmpxchg
es
lret
insl
das
ror
sahf
divb
xchg
inc
jns
insb
ljmp
je
pop
aas
stos
jle
add
leave
outsl
push
fsts
push
add
sarb
or
mov
ds
adc
scas
sbb
adc
ljmp
add
call
stos
add
std
mov
call
push
out
add
dec
jb
cmpsl
push
addr16
mov
mov
push
test
push
dec
xor
shlb
add
pusha
cmp
jge
or
pushf
add
stc
cmp
add
fwait
cwtl
test
dec
mov
lahf
xchg
pop
pop
pop
jge
ljmp
in
mov
sbb
stos
and
dec
fldl
xchg
sbbl
cmp
lods
xchg
jle
aas
or
icebp
ret
jle
divl
je
mov
mov
push
movsl
shrb
lea
outsl
scas
jb
in
mov
loop
mov
jle
xchg
dec
and
jle
mov
mov
scas
sub
lcall
stos
pusha
arpl
popf
divb
lahf
pusha
jle
nop
ljmp
lds
das
cmp
or
imul
adc
stos
inc
xchg
out
or
inc
faddl
mov
sahf
aas
jae
jecxz
xchg
xchg
dec
adc
test
mov
pushf
add
pop
or
inc
int
jae
cld
in
xchg
in
add
push
filds
insl
sti
insb
sub
jne
repz
enter
inc
in
or
mov
pushf
inc
in
ror
rcr
pop
ja
addr16
mov
pop
mov
sahf
pushf
pop
out
icebp
call
xor
insl
dec
imulb
cld
mov
in
xlat
mov
scas
push
inc
sbb
mov
xchg
jbe
ret
es
lods
and
ljmp
jbe
xchg
das
mov
popa
imul
xchg
lahf
sub
jb
pusha
pusha
pusha
pop
outsb
or
std
rol
mov
mov
pop
mov
pushf
jmp
jae
or
or
xchg
xchg
data16
mov
stos
push
sti
jae
movsb
pop
clc
icebp
or
rorb
js
jns
cmp
mov
dec
inc
fbld
mov
mov
jo
dec
fwait
jle
push
stos
mov
js
mov
add
jbe
aas
imul
cmp
cmp
cmpsl
mov
lret
lods
jnp
repnz
push
xchg
in
inc
sub
mov
sub
cmpsl
fidivs
xor
sub
or
adc
xchg
subl
xor
fnstcw
out
fldenv
gs
addl
jns
push
add
mov
add
scas
sbb
outsb
push
fsubs
dec
ss
cmp
pop
mov
inc
xchg
bound
in
int
ljmp
pop
lea
ss
push
mov
shll
dec
repz
lret
clc
lret
push
arpl
mov
out
mov
in
push
xor
fmul
out
adc
jbe,pt
dec
push
repz
jp
ja
test
addr16
movsb
cmp
sub
mov
jmp
lds
arpl
aaa
xchg
push
fdivrl
jb
mov
jo
mov
in
les
aaa
or
xor
pop
cmp
icebp
leave
aas
pusha
inc
jp
push
aas
test
push
rclb
scas
daa
pop
test
jl
ss
and
in
xor
jmp
insb
mov
imul
and
out
cmp
push
push
addr16
sbb
test
adc
cmp
push
cmp
aaa
bound
jg
xchg
ss
mov
xchg
inc
ret
test
and
aaa
popf
in
push
mov
pop
push
jae
inc
mov
push
add
and
mov
nop
inc
fimuls
xchg
mov
mov
aaa
rclb
fidivrs
testb
mov
xchg
test
enter
sbb
ret
push
pop
test
sub
pushf
cmp
fistpll
xor
or
cmp
js
xor
ss
shl
or
movsl
jp
loop
adcb
pop
incl
mov
jnp
pop
sbb
mov
sti
ss
xor
mov
mov
inc
pop
jns
jbe
pushf
pushf
jmp
cmpsb
iret
xchg
push
loope
xlat
mov
add
enter
jns
and
nop
outsb
xor
dec
frstor
daa
push
enter
sti
test
movsl
jns
negb
mov
mov
lret
nop
outsb
fwait
mov
jo
jae
cmp
cmc
xchg
dec
lods
mov
sub
cmpsl
jecxz
mov
arpl
adc
loopne
inc
in
ret
stos
or
dec
lret
aas
loopne
roll
xchg
hlt
mov
push
add
mov
ds
arpl
mov
mov
test
mov
mull
add
cmpsb
push
es
and
cmpsb
out
fisubs
jp
dec
aas
jp
push
xchg
mov
jns
mov
add
mov
ja
imul
clc
fwait
adc
inc
cli
sti
lret
mov
cld
push
jge
pop
stos
inc
testl
xchg
adc
bound
stc
clc
ret
addb
jbe
and
pop
pop
xchg
fimull
push
rcrl
add
fsts
mov
dec
mov
mov
mov
ljmp
mov
cwtl
pop
iret
jmp
ja
call
add
jle
lcall
jnp
pop
dec
xchg
mov
fimuls
mov
fldt
loop
jge
addl
jecxz
cwtl
xor
and
ljmp
es
push
imul
dec
bound
cmp
add
cmp
dec
movsb
icebp
fcomip
xchg
push
push
push
je
jmp
imul
jge
rorl
sbb
sbb
dec
in
scas
fdivrl
pop
mov
cmp
lcall
sbb
jo
jae
stc
scas
dec
mov
loopne
mov
mov
jge
fwait
or
cmp
mov
jmp
jecxz
gs
repnz
in
add
pop
sbb
js
adc
cltd
insb
call
push
test
sahf
arpl
in
jle
int3
aam
test
movsb
add
pop
xlat
pop
pop
mov
sub
fcomp
leave
mov
into
jbe
mov
in
jbe
sub
push
stos
test
test
pop
mov
dec
popa
xlat
xchg
mov
call
hlt
ds
xlat
add
fucomp
ds
loop
pushf
aad
pushf
mov
jle
jae
sarb
xor
or
sbb
jb
movsb
or
xor
xor
insb
mov
dec
mov
in
pushaw
frstor
clc
insl
pop
lret
pusha
stc
loop
sbbl
add
cld
das
popf
imul
je
imul
sbb
mov
scas
mov
out
ret
shll
lcall
pop
iret
dec
dec
and
xchg
mov
fstps
xor
xlat
arpl
lret
jns
negl
test
mov
mov
es
int
push
pusha
sub
sahf
xchg
mov
adc
shll
insb
test
hlt
mov
mov
into
sbb
js
out
mov
stos
push
pop
sub
pusha
rol
sahf
pop
cmp
incb
dec
cmc
cmpsl
lret
test
jno
mov
dec
lret
lock
inc
push
iret
xchg
adc
daa
inc
repz
std
xor
aad
or
jb
les
xchg
adc
or
sub
inc
rep
push
dec
leave
enter
stos
add
pop
setno
pop
cmp
popa
or
hlt
ds
add
cmp
int
lahf
inc
inc
push
mov
jb
cmc
pop
enter
and
out
notb
sub
andb
sbb
push
and
adc
jl
lds
jo
daa
imul
movsb
bound
ljmp
pop
pop
addr16
mov
test
cmp
loop
push
clc
mov
or
testl
mov
outsl
sti
or
push
shrb
dec
cmpsl
mov
cli
imul
les
das
arpl
popa
jmp
mov
dec
mov
cmp
cmp
pusha
mov
inc
ljmp
xchg
rorb
pushf
pop
aaa
xor
sarl
sahf
imul
popa
add
mov
outsl
orb
data16
pop
sbb
adc
sub
adc
jbe
and
mov
repz
mov
sub
andb
pop
mov
shl
imul
push
sub
pop
inc
or
fstpt
cmpsl
mov
test
dec
sahf
lds
daa
mov
sbb
in
cld
shrb
dec
shr
mov
mov
fldt
xchg
cli
rclb
test
mov
xchg
sub
dec
in
inc
xchg
or
lret
push
mov
shlb
movsb
pop
icebp
fs
mov
jo
divl
pushf
imul
call
and
mov
cmp
cwtl
and
rorb
mov
movsl
push
insb
leave
fisttpll
mov
jg
cmpb
push
shl
adc
mov
sbb
nop
lock
push
pop
jl
cmp
lret
and
loope
push
pop
or
mov
or
sub
je
idivl
ljmp
jnp
cmp
add
pop
and
sahf
fisubs
gs
cmp
cs
sahf
outsb
sarl
push
jmp
mov
or
lods
outsb
cmp
imul
jbe
movsl
rol
loop
scas
fsubp
loopne
pop
nop
enter
xor
out
scas
or
enter
xchg
fbstp
jnp
adc
mov
outsl
sbb
mov
push
sbb
xor
aaa
js
xchg
insl
and
es
adc
jmp
pop
or
xchg
cltd
xlat
jmp
lret
mov
ljmp
fdivl
mov
ds
xchg
dec
fsub
pop
inc
dec
mov
xchg
mov
addb
adc
addr16
xchg
and
shll
xchg
mov
pushl
ret
inc
inc
mov
ret
dec
xchg
xor
shll
dec
inc
lds
addr16
test
inc
lcall
cmp
ja
in
imul
jbe
mov
mov
xchg
or
cmpsb
inc
jns
imul
andl
and
pop
mov
inc
lock
out
aad
data16
rol
xchg
xchg
icebp
scas
push
jb
out
cmp
cmp
mov
and
dec
std
cmp
dec
cmp
xchg
push
fnsave
les
mov
mov
mov
push
pushf
cli
and
fstpl
std
adc
jae
adc
in
out
pop
xor
movsl
std
into
fiaddl
mov
aas
test
shr
adc
pmaddwd
mov
bound
insl
shll
int
xor
mov
test
pop
pop
hlt
test
lods
mov
fdivrl
mov
inc
shlb
and
cmp
test
jo
sti
xchg
das
sbb
data16
xchg
mov
aam
push
and
sub
inc
cld
neg
pop
call
rcrb
pushf
mov
cmpsl
iret
and
fucomi
xchg
insb
mov
leave
inc
fcomps
jp
outsl
mov
sbb
outsl
fsubrs
inc
xor
je
andl
in
pop
notl
scas
outsb
icebp
je
outsw
sub
adc
cmc
adc
fcoml
xchg
mov
or
jle
cmc
inc
lds
dec
scas
mov
dec
ret
ds
nop
jp
cmp
jmp
sbb
cmp
int
mov
fs
shlb
loop
lahf
sub
frstor
xchg
hlt
js
aaa
pop
inc
add
mov
and
outsb
fs
or
mov
mov
mov
negb
cld
xchg
dec
ja
push
and
xor
pop
or
lea
sbb
add
jecxz
or
repz
shr
rcr
jns
test
xor
add
xchg
fldt
cmc
data16
mov
adc
or
ficomps
jmp
xchg
jg
jb
test
pop
mov
push
pushf
ds
xchg
dec
jno
xor
cmpsl
xor
mov
loopne
int
lcall
xor
mov
jbe
or
jmp
into
cmp
repz
lock
sub
gs
lret
or
repz
sub
adc
fs
mov
into
or
test
rorb
cmpsb
jmp
addr16
mov
adc
repz
shrl
loop
jecxz
mov
dec
jno
aas
xchg
je
add
test
pushf
pop
push
ret
push
or
cmpsl
adc
js
mov
mov
popa
jns
xchg
push
pop
mov
inc
or
push
push
pop
sbb
jbe
lock
rclb
out
aad
sbbb
pop
push
xorl
pop
jb
aam
shlb
mov
lcall
jbe
cmp
popa
aad
mov
je
fldt
xor
jge
mov
popf
and
mov
cltd
push
jne
mov
outsl
mov
xchg
and
sbb
xchg
idivl
mov
int
sub
xchg
in
pcmpgtw
sbb
cs
mov
sbb
addr16
jle
jnp,pt
mov
in
or
xor
popf
mov
mov
cmp
jnp
xchg
dec
mov
ret
mov
lea
jge
dec
mov
push
insb
mov
cmp
push
in
push
mov
sub
or
push
sub
cs
pusha
sbb
cmc
sbb
jecxz
inc
push
out
test
fistps
cld
or
into
xchg
stc
dec
and
adc
xor
call
mov
jle
gs
outsl
or
fisubl
fstpt
xor
lods
andb
mov
scas
mov
pop
add
jae
stos
dec
sub
clc
push
andb
lea
stos
add
add
ds
and
mov
xchg
pop
imul
cltd
mov
cmp
icebp
rcr
jnp
into
push
and
push
lret
push
jnp
jne
mov
and
inc
repnz
ss
stc
je
lods
pop
pop
ds
and
outsl
sahf
mov
jbe
fimull
inc
lods
mov
fwait
push
adc
dec
cmp
clc
fisttpl
fists
adc
xchg
repnz
shll
js
pop
loope
mov
pop
cmp
mov
add
mov
jmp
jecxz
dec
or
mov
cld
outsl
lock
lcall
popa
mov
sub
or
sbb
inc
popw
jns
mov
out
pusha
or
nop
sahf
xchg
mov
mov
push
push
mov
imul
movsb
jns
es
hlt
sub
mov
loop
cmpsl
mov
cmp
sbbb
fs
push
push
into
and
insl
paddsw
addr16
imul
push
mov
insl
inc
fisubs
insb
fsts
pop
dec
lods
inc
fs
pop
dec
mov
mov
sub
aam
pop
cmp
scas
jl
push
inc
or
aaa
bound
test
aaa
or
rcrl
cwtl
jne
sub
jg
and
push
xchg
and
mov
jmp
imul
or
and
sbb
adc
jge
stos
push
and
arpl
pop
out
inc
dec
sahf
cmp
push
sub
mov
sbb
jp
sahf
movsl
and
pop
pop
fbld
test
jecxz
push
js
incb
inc
jle
stc
cli
repz
decb
fcmove
sub
push
xchg
lock
push
push
sti
or
dec
push
jmp
add
jno
gs
pop
jmp
stos
fldl2t
es
aaa
xchg
lret
xchg
std
mov
pop
cwtl
insl
es
cli
xor
or
imul
mov
inc
popf
aad
jp
adcb
mov
jno
std
fwait
test
inc
lahf
and
xor
ja
mov
sbb
jl
das
ja
mov
jnp
clc
mov
mov
dec
cmpsl
mov
mov
push
mov
dec
xchg
cmpsl
ss
fimuls
sub
ljmp
jmp
fcmove
or
mov
jbe
jg
std
add
insl
testl
inc
mov
jnp
adcb
jbe
sub
pop
imul
scas
leave
sbbb
push
sbb
mov
imul
and
and
mov
inc
inc
mov
das
pop
add
ror
adc
lds
inc
mov
in
fimuls
push
es
out
frstor
xchg
loope
dec
popa
mov
push
jae
and
or
mov
arpl
cmp
adcl
addr16
lock
adc
loopne
pop
orl
xor
pop
push
xor
in
arpl
xor
subl
test
clc
sub
icebp
sbb
outsb
data16
inc
and
ficomps
push
cmp
add
jmp
rorl
loop
imul
add
jl
sbb
push
push
jbe,pn
inc
xchg
inc
cmp
cmp
int
xchg
cmpsl
mov
xor
adcl
mov
cmpsb
pop
arpl
popa
pop
enter
aad
lret
int
insb
sti
lea
test
je
push
cs
jecxz
cwtl
cli
sbb
bound
cmpsl
mov
dec
aam
lea
jo
fdivr
push
pop
inc
sbb
and
lods
mov
push
mov
ficoml
mov
push
call
dec
jl
out
fisttpl
inc
cld
jge
add
push
jmp
xor
aaa
xchg
sahf
sbb
leave
xor
pop
sbb
adc
sbb
lret
jo
add
jns
sahf
daa
subb
dec
jmp
cmc
cmpsl
jbe
subb
push
bound
test
lret
mov
dec
sbb
and
add
xchg
sahf
adc
icebp
pusha
xor
out
inc
out
adc
outsl
mov
jl
roll
pop
pusha
pop
mov
xchg
stc
ja
pop
bound
mov
xchg
cmpsl
loopne
adc
clc
push
jbe
fmull
inc
xchg
add
or
test
jmp
xchg
xchg
or
push
add
xchg
sbb
test
jno
int
aad
subl
inc
mulb
xchg
mov
insl
push
cli
sbb
sbb
mov
mov
sub
xchg
mov
fidivl
es
insl
ret
cmp
std
addr16
ds
mov
inc
mov
sub
mov
cmpl
pop
cli
mov
cmpsb
ja
cmp
sub
mov
jo
adc
dec
inc
mov
in
bound
movsb
and
gs
mov
xor
add
jle
loope
xor
jae
inc
out
mov
lods
add
pop
cltd
adc
in
adcb
jl
mov
test
xchg
fadd
push
pop
dec
sbb
add
adc
lea
push
mov
lahf
adc
out
adc
sub
clc
adc
fwait
sub
jo
outsl
bound
adc
jns
call
cmp
fcoms
mov
arpl
insb
push
daa
pop
rorl
stos
in
add
dec
int3
mov
loope
jns
loope
or
mov
bound
popa
add
mov
loop
push
cs
mov
mov
ja
ja
sahf
adc
and
sub
roll
mov
loopne
pushf
lods
sub
cmp
xchg
push
test
inc
test
int3
xor
aad
cmp
clc
push
fldt
mov
push
sub
push
pop
mov
rolb
push
adc
cmp
mov
sub
lret
fnsave
push
popa
out
cli
dec
mov
mov
mov
xor
and
inc
xor
xchg
push
push
or
sub
mov
pop
fwait
xor
ja
inc
push
pop
cs
bound
jg
into
lods
pop
and
add
cld
cmpsl
sbb
sti
es
push
aas
pop
push
push
inc
outsl
test
decl
and
data16
std
arpl
scas
leave
lcall
pop
cmp
sub
mov
push
sbb
cmp
sahf
jle
adc
lahf
decl
test
add
pusha
scas
divb
mov
add
sti
inc
stos
shlb
imul
xor
hlt
in
add
movsl
insb
pop
fdivrs
jns
in
mov
les
mov
push
mov
and
stos
nop
sub
pop
loope
sbb
mov
cli
mov
jmp
lds
mov
mov
lds
aad
xor
sub
out
and
dec
arpl
jp
lret
sahf
push
sahf
outsl
jg
jle
ljmp
test
arpl
fcomi
sub
mov
sbb
mov
or
loop
push
mov
stos
ja
mov
out
mov
dec
dec
push
sub
inc
jne
scas
cmp
adc
aas
pop
es
mov
fwait
sbb
adc
scas
clc
push
fsts
movsl
jnp
mov
insb
mov
mov
jl
xchg
push
inc
pop
aaa
jl
inc
cmp
call
inc
test
sbbl
jnp
sub
jl
pop
lods
lds
cmp
xchg
adcl
stos
or
push
inc
ret
mov
idiv
fidivl
out
inc
or
divsd
sbb
jae
in
inc
xor
decb
into
push
leave
mov
js
sbb
sti
and
xor
outsb
push
pop
sbb
imul
jae
xchg
je
jb
and
and
imul
and
sub
pop
ljmp
xorl
adc
mov
cwtl
push
test
xor
xchg
icebp
mov
mov
add
sub
out
iret
and
outsl
ret
fdivp
jno
aas
sub
aad
and
jae
leave
mov
xchg
movsb
aam
adc
pop
out
inc
test
add
mov
jbe
aaa
fisttpll
cmpb
cmp
mov
mov
jb,pn
jns
push
xlat
xchg
dec
rcl
jp
inc
outsl
dec
out
dec
mov
xchg
outsl
lahf
loope
and
push
mov
mov
or
mov
call
push
jmp
add
adc
clc
sarb
int
mov
ss
xor
test
dec
je
mov
shlb
hlt
icebp
cmp
cmp
les
mov
mov
sub
je
jecxz
cmpsl
mov
pop
fidivs
jb
fisttpl
dec
dec
lahf
daa
iret
stos
lock
push
arpl
push
cmpsl
cmpsb
jmp
adc
les
outsl
sub
push
out
je
or
out
js
gs
sub
and
aad
and
out
mov
fs
dec
mov
inc
xor
mov
les
sub
popf
incl
or
lahf
lret
mov
xchg
add
bound
lds
inc
dec
hlt
leave
testl
hlt
adc
mov
mov
scas
xchg
inc
mov
in
out
outsl
mov
cmpsb
decb
push
pushf
sub
jo
dec
lods
xchg
out
jl
push
push
add
clc
sub
mov
adc
mov
add
hlt
hlt
sbb
jbe
call
pop
or
xorb
pop
daa
test
inc
dec
xor
out
mov
adc
fisubl
imul
cli
scas
popf
sarl
cmpsl
mov
call
mov
xchg
and
pop
aaa
imul
rclb
cmp
popa
cmp
and
cmp
jo
cmp
xchg
mov
shl
add
icebp
rcr
xor
mov
and
ja
lods
das
out
arpl
inc
push
sar
jle
jo
out
xchg
mov
je
clc
jmp
mov
fistpl
nop
mov
pop
loopne
stos
mov
mov
adc
adc
frstor
and
mov
cmp
daa
sti
push
icebp
mov
lahf
sahf
sti
popa
dec
mov
adc
push
inc
sbb
scas
mov
mov
dec
jne
out
mov
in
mov
insl
nop
in
add
mov
sbb
es
adc
sarb
sub
idiv
dec
pop
pop
xor
lahf
xlat
addl
mov
cmp
fisubs
fs
jmp
enter
fcmovnb
jge
mov
xor
into
sub
jns
in
ja
imul
adc
adc
rorb
cld
sub
sbb
ja
insb
fisubs
cmp
cli
pop
adc
fnsave
lds
std
pusha
stc
mov
mov
push
adc
cli
xor
dec
dec
pop
in
insl
cwtl
imul
jbe
pop
lock
insl
push
xor
sarb
xor
bound
add
add
inc
leave
insl
and
test
aam
int
jns
jns
mov
mov
loop
adc
cwtl
repz
pop
add
mov
push
or
push
xchg
fldl
out
in
enter
xor
mov
dec
aam
xchg
xor
mov
adc
jg
sbb
or
jl
ds
lods
push
jg
xor
pushf
cld
add
push
mov
andl
fstl
ret
push
push
lds
xor
and
neg
clc
pop
pop
andb
push
rcrb
xchg
ret
jno
and
stc
fnstsw
inc
sbb
xlat
cmp
mov
fwait
es
insl
daa
cwtl
adcb
outsb
es
sub
jbe
loope
in
fisubrs
lret
push
jo
mov
push
cmp
movsl
fdivrl
xor
data16
in
add
inc
out
pop
adc
movsb
sub
ds
addl
call
gs
aaa
mov
jle
push
jecxz
in
push
and
sub
rorl
xchg
inc
push
leave
push
jp
outsb
xchg
push
jp
stos
jae
mov
mov
call
jae
adc
xor
cmpsb
mov
cmp
mov
insb
icebp
dec
cmpsb
enter
ds
pop
adc
mov
add
sub
jmp
ficompl
jle
pushf
outsb
mov
gs
xor
inc
cmpsl
ret
sub
icebp
lahf
rorb
adc
or
lret
inc
das
mov
mov
cmpsl
inc
lret
xor
or
xlat
imul
psrad
xchg
mov
je
repz
jmp
test
outsb
movups
inc
shl
pop
mov
inc
nop
mov
dec
sub
xchg
add
add
xor
pop
mov
xchg
daa
adc
mov
fiadds
pushf
mov
mov
pop
sub
push
shl
out
inc
out
jb
sub
js
js
scas
insb
mov
fwait
pop
or
pop
sub
inc
loop
out
cltd
pop
dec
mov
movsb
push
dec
sti
adc
and
ficompl
aad
popf
popf
dec
or
aad
sub
nop
pop
push
cmp
outsl
pop
inc
sub
popa
aam
cmp
into
mov
xor
das
sbb
sub
jbe
es
loopne
cmp
inc
xor
movsb
mov
test
inc
jae
pop
sbb
jae
and
addl
and
xor
mov
push
xchg
jnp
jns
out
out
mov
addr16
es
push
pop
mov
add
out
andb
xor
in
into
mov
sub
loop
sub
fbstp
push
daa
push
push
in
outsb
add
jle
sar
ljmp
add
mov
bound
add
pop
inc
icebp
insb
imul
cwtl
add
xchg
aaa
test
mov
pop
and
xchg
scas
cmp
mov
data16
iret
gs
mov
pop
mov
or
mov
aad
jp
lds
mov
insb
loope
pop
mov
mov
push
ss
adc
rolb
lcall
pusha
hlt
mov
and
or
call
pop
inc
jge
mov
sbb
xor
mov
scas
aad
sbb
and
popf
xchg
pop
xorb
idiv
xchg
scas
orl
inc
out
dec
sbb
aad
lcall
and
or
jmp
and
aaa
pop
xchg
in
call
insl
push
ss
mov
outsb
cld
loopne
mov
jecxz
adc
pop
add
xchg
push
cmp
mov
scas
in
je
mov
xlat
fwait
dec
mov
lret
paddsb
add
fcmovu
mov
and
popf
test
xchg
cwtl
sub
pop
je
xorl
mov
inc
push
and
fidivl
pop
jae
or
jne
ds
subl
insb
mov
or
arpl
aad
mov
and
mov
and
dec
std
or
mov
xchg
lret
shr
xor
add
insb
rol
add
or
test
ja
lret
push
mov
inc
inc
jg
lret
push
repz
mov
je
pop
int
jo
ss
pushf
insl
push
pop
add
stos
xor
call
push
xor
mov
add
inc
cltd
adc
pop
cmp
test
pop
or
mov
data16
fbld
sbb
mov
push
or
push
cmp
pusha
xorb
test
push
dec
pop
rclb
in
movsl
cmp
push
sbb
in
xor
lret
enter
fwait
inc
insl
lcall
and
dec
mov
out
cmc
mov
sub
dec
mov
adc
jo
xor
cmovnp
pushf
call
scas
xorl
je
push
sub
iret
sbb
dec
andb
sub
mov
in
xchg
xor
lahf
jno
mov
movsb
push
loop
test
repnz
sti
push
test
or
adc
adcl
loope
inc
rcrb
jmp
pop
je
add
fs
xchg
sbbb
std
loop
pop
bound
dec
xor
or
aas
or
mov
or
inc
imul
hlt
inc
repnz
push
push
mov
mov
ret
and
pop
adc
sbb
idivb
insb
inc
and
jae
push
int3
enter
jecxz
jmp
cli
sti
cmp
push
mov
cli
mov
repz
adc
sbb
ljmp
fcoml
pushf
scas
pop
mov
enter
pop
hlt
push
cmp
jbe
int3
outsl
mov
xchg
sbb
mov
xchg
imul
daa
adc
add
popf
xor
push
stos
sbb
push
je
mov
out
push
push
jmp
push
adc
xlat
call
fstpt
lret
lods
leave
out
dec
jbe
rcrb
or
stos
add
push
and
imulb
es
sbb
mov
sti
mov
mov
mov
sbb
adc
push
mov
scas
cmp
lods
ffree
inc
ret
dec
xchg
pop
lcall
adc
pushf
aad
pop
mov
jecxz
addr16
arpl
lods
xchg
aaa
or
cwtl
sti
xor
lods
jne
maskmovq
mull
add
gs
mov
inc
push
pop
mov
adc
push
sub
fmull
xchg
shlb
aam
inc
mov
stos
add
les
outsl
fcoms
loope
push
dec
pop
dec
sbb
sbb
out
dec
pop
dec
std
cmp
jno
adc
adc
xor
rol
xchg
jle
inc
movsb
mov
jl
mov
data16
and
add
dec
cmp
pop
xor
sbb
sbbb
cmp
fwait
in
push
cmp
dec
clc
mov
pop
iret
aad
push
push
popf
inc
mov
or
scas
or
nop
repz
shlb
loopne
les
push
push
sar
sub
aam
sbb
xchg
js
adc
jae
pop
mov
scas
mov
lahf
out
cmp
in
mov
subl
xchg
cmp
inc
lds
je
adc
inc
inc
add
pop
int
adc
repz
sbb
negl
sbb
or
popa
iret
ja
sbb
jo
fisttpl
mov
jns
mov
mov
rep
pop
test
xor
in
les
push
lret
int3
stos
stc
pop
xchg
push
xlat
adc
ja
ja
cli
cs
xlat
adc
pop
jbe
ss
cmpsb
mov
inc
stos
shlb
mov
imul
testl
call
mov
jmp
xor
pushl
mov
incb
jmp
xor
mov
popl
pop
call
and
clc
mov
pop
sub
cld
xor
add
xor
or
add
mov
mov
sub
adc
sub
add
nop
xor
xor
mov
add
inc
inc
inc
inc
cld
sub
cld
call
cld
jmp
xor
or
cld
ret
sbb
xor
sub
dec
add
jns
add
popa
xor
inc
ret
add
push
mov
call
leave
ret
nop
nop
inc
pop
inc
pusha
inc
inc
mov
xor
jmp
nop
popa
movl
nop
nop
pushl
mov
mov
mov
int
cmpl
jl
fwait
movl
ret
