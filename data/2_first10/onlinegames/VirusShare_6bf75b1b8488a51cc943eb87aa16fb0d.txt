popa
add
mov
add
add
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
xor
xor
or
outsb
push
call
jo
push
push
add
xor
test
mov
jle
fists
xor
push
lea
push
push
dec
xor
adcb
test
outsb
jl
outsb
add
mov
push
je
mov
jecxz
push
call
les
dec
push
aam
and
dec
ficoms
jmp
cs
push
dec
movsb
push
push
or
in
mov
pop
mov
daa
movsb
mov
aad
sbb
inc
jp
pusha
pop
pop
push
pop
pop
pop
leave
ret
sub
push
push
shlb
mov
pop
cld
push
int3
xorb
jo
jmp
jo
insb
cmp
xchg
jne
jae
cs
pusha
xor
jo
repnz
mov
call
repz
or
test
rorb
push
push
shll
sahf
ret
les
push
xchg
lds
je
dec
enter
popf
cmp
popa
lret
int3
inc
cmp
xchg
outsb
into
arpl
outsl
shlb
cmp
jo
shlb
jae
mov
mov
cmp
pop
mov
cmp
je
movsb
movsb
movsl
iret
repz
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
mov
cmp
repz
mov
mov
jle
iret
mov
mov
loope
imul
adc
or
push
pusha
pop
shr
lea
push
cld
push
call
into
add
mov
mov
push
mov
daa
out
mov
cmp
jbe
lea
pushl
push
sbb
imul
add
je
inc
add
cmp
jmp
mov
lods
add
add
fsubs
mov
roll
pop
inc
or
inc
test
pop
sub
enter
mov
inc
lds
lods
add
sahf
sbb
jns
out
gs
xor
cmp
mov
sub
lret
mul
push
loope
push
xchg
loope
imul
push
loope
cmp
imul
outsl
ljmp
je
pushf
test
mov
orb
xor
dec
pop
adc
or
jne
push
push
mov
push
mov
push
es
xchg
inc
ret
mov
xor
push
inc
sahf
in
pop
add
push
mov
sbb
add
aaa
mov
push
out
adc
repz
jne
sub
add
or
js
cmpb
fs
fs
sub
jnp
jo
push
int
es
clc
aam
or
mov
adc
bound
mov
push
das
mov
sahf
mov
shrl
xor
outsl
dec
aam
addr16
loope
aad
imul
fsubrs
fidivl
cs
jno
fsubl
or
jo
adc
test
movb
jb
jae
jns
je
jne
jbe
jns
gs
js
mov
cwtl
pop
jns
inc
jnp
ficoms
sti
jl
insl
rol
lock
jg
xchg
inc
addb
subb
cmp
insl
test
inc
xchg
push
in
or
mov
push
jmp
cmp
push
cmp
adc
mov
sbb
push
xchg
nop
push
xchg
popa
xchg
jbe
gs
loope
cmp
xchg
addr16
cmp
xchg
inc
pushf
imul
sbb
add
mov
jns
enter
cmp
jne
jae
push
int3
je
popa
adc
xchg
into
jb
je
jne
jo
push
ja
shrb
je
iret
mov
js
mov
jo
mov
cmpsb
cmp
xor
jae
cmp
jno
adc
xor
fbld
lea
imull
cwtl
adc
inc
push
push
scas
lds
sub
push
iret
push
data16
imul
adc
mov
repz
addr16
cmp
pusha
push
mov
fs
mov
cwtl
dec
add
and
pop
push
test
adcb
mov
or
test
inc
mov
idivb
jmp
xor
and
in
cmp
daa
jb
mov
jo
test
imul
je
jb
dec
lods
mov
cmp
xor
in
loopne
je
jnp
push
jp
out
ja
repz
cmp
sub
movsl
xchg
enter
orb
push
xlat
add
add
mov
push
cltd
sbbb
frstor
test
mov
add
dec
stos
adc
decb
fcoms
lcall
and
fadd
mov
sarb
cltd
xchg
int3
mov
cs
mov
sbbl
mov
rcrl
dec
stos
enter
ret
enter
xchg
leave
lock
into
int3
sub
jo
int
into
and
xor
je
popa
xor
mov
mov
xor
mov
mov
fwait
nop
mov
add
push
ret
loope
in
hlt
cmc
inc
mulb
sbb
adc
mov
stc
or
sbb
cmp
cmp
cmp
fisttps
or
faddl
dec
push
add
jl
aam
mov
dec
and
test
loope
add
push
fldcw
mov
mov
pushf
clc
mov
cmpsb
in
mov
test
mov
adc
icebp
mov
lret
repz
inc
call
add
movsl
mov
insb
ret
xor
adc
add
mov
mov
push
xor
idivb
je
push
dec
sbb
roll
js
sub
mov
push
push
xchg
mov
push
jg
repz
inc
lea
ret
mov
mov
adc
clc
mov
dec
push
push
clc
xlat
nop
fnsave
jmp
xor
orb
inc
movl
incb
push
xor
nop
jnp
scas
xor
sbb
push
add
das
push
push
les
push
push
pop
popa
pop
mov
lds
add
movsb
jecxz
sarb
pop
loopne
pmuludq
addr16
loop
jecxz
in
mov
inc
loope
inc
dec
aad
add
or
and
and
pop
pop
addr16
cmp
mov
xchg
insl
sub
mov
in
outsl
cli
outsb
inc
dec
cmp
data16
imul
jns
inc
jb
repz
popa
dec
popa
insl
xchg
sti
push
hlt
es
sub
ja
push
pop
cmp
push
push
cmpl
add
cmp
and
test
or
popa
jmp
jo
push
shlb
icebp
pusha
je
nop
xor
push
stos
dec
ret
mov
xchg
js
sbb
mov
mov
jae
ror
and
jae
popa
arpl
pop
dec
outsl
outsb
cmp
gs
insb
outsl
sahf
out
sahf
arpl
jne
dec
fs
jnp
mov
pop
or
inc
mov
imul
pusha
or
mov
lds
repz
and
add
mov
adc
inc
mov
xor
test
xor
loop
loop
mov
jo
mov
inc
mov
sbb
xchg
outsb
shll
loope
push
ret
jb
outsl
lds
loope
cmp
jae
jae
dec
lret
mov
mov
pop
xchg
and
dec
cmc
jo
gs
sbb
imull
push
stc
cli
outsl
sti
arpl
adc
jae
repz
xor
idivl
repz
outsb
jmp
outsl
in
arpl
sub
in
gs
pop
aas
sub
mov
sbb
sub
cmpsl
xor
je
scas
mov
xorl
outsb
aad
add
xlat
fsubrs
xor
lods
push
arpl
cmp
fisubl
jae
sbb
push
jae
arpl
xlat
push
sub
add
pushf
add
arpl
pop
mov
and
lods
xchg
lods
add
inc
out
adc
push
xchg
mov
in
xor
fxch
and
je
movb
js
adc
push
pop
loop
movsb
mov
dec
repnz
cmp
movsl
add
push
mov
stos
add
mov
dec
repnz
cmp
push
mov
bnd
aas
cmp
andl
faddl
sbb
jl
mov
jbe
xchg
setne
pop
push
lret
pop
out
clc
push
daa
sahf
popf
cltd
popa
pusha
push
shll
pop
mov
shlb
test
inc
pop
push
sahf
add
test
push
cmp
cmp
push
pop
sahf
jmp
jecxz
into
push
ja,pt
cmp
sbb
fnstcw
pop
push
and
jbe
cmp
ret
jns
das
cmpsb
inc
dec
push
mov
outsb
dec
fs
out
sahf
pop
gs
insb
outsl
or
jmp
jb
jb
cs
gs
push
repz
repz
imul
iret
jo
idivl
jg
jae
fsubp
jns
call
jo
sbb
mov
js
cmp
xchg
movsb
xor
xor
repz
stos
cmp
and
xor
and
jae
les
and
int
out
and
sub
daa
sub
sub
jns
int
sub
pushf
inc
sub
sbb
das
xor
push
sbb
and
sbb
nop
xchg
jbe
inc
loope
repz
push
xor
jno
repnz
icebp
jno,pt
push
pop
out
xchg
xor
or
push
or
push
out
or
insb
mov
smsw
jno
adc
cmp
ljmp
cmc
lea
push
pop
cwtl
cltd
cmp
push
add
test
out
in
arpl
xchg
xor
jnp
pop
mov
xor
cmp
push
mov
sbb
cmpsl
cmp
ret
loope
cmp
gs
jae
jae
sbb
xchg
dec
lcall
pushf
popf
fcompl
and
test
out
dec
push
in
nop
gs
fcmovu
call
xor
dec
push
sbb
bound
arpl
icebp
icebp
packsswb
addr16
imul
js
mov
jecxz
outsb
cld
sbb
fcoms
jae
cmp
fistps
loope
fs
loope
loop
cltd
adc
cmp
rorb
or
ret
outsb
sbb
mov
les
outsl
xchg
jo
arpl
gs
jae
lahf
out
in
in
lea
sbb
imul
insb
clc
in
jecxz
push
jne
jns
mov
clc
inc
js
out
jmp
dec
jl
pushf
out
push
dec
mov
lods
dec
dec
dec
sub
push
das
into
arpl
arpl
imul
push
pop
icebp
cmp
mov
pop
jecxz
loop
pop
pop
pop
aam
jno
pop
inc
lock
ss
cmp
je
or
xor
aaa
data16
dec
repnz
or
cltd
or
adc
add
xor
adc
add
mov
pop
hlt
push
xlat
pop
ret
shll
clc
jne
pusha
push
cltd
fnop
stos
cmp
fstl
aaa
lret
jne
push
leave
sbb
aaa
in
mov
add
jne
push
rol
roll
mov
jno
xor
mov
mov
ljmp
add
mov
sar
push
iret
out
popa
push
mov
hlt
or
push
add
outsb
test
sub
sti
sbb
or
adc
mov
and
mov
or
jl
xchg
push
push
call
in
xchg
sbb
fwait
xor
nop
scas
sub
inc
sub
push
mov
sub
in
cmp
mov
notb
pop
jne
sti
mov
sti
push
cmpsl
inc
cmp
mov
adc
inc
inc
pushl
xchg
nop
dec
shlb
test
add
stc
les
shrb
xor
mov
adc
hlt
popa
ja
mov
imul
mov
jne
aam
push
dec
cmpsl
add
faddl
movsb
push
mov
sub
mov
in
out
in
sub
shl
out
push
out
out
mov
adc
clc
cmp
add
pop
je
cmp
jb
dec
dec
in
popl
out
dec
xor
cwtl
jg
pop
jne
push
pusha
or
lret
in
lds
andb
cwtl
push
jp
ret
cmp
inc
inc
cmp
pop
mov
and
push
cmp
sbb
push
out
pop
mov
es
clc
je
into
fistps
mov
push
and
shlb
xchg
pop
inc
cwtl
testb
fsin
lcall
and
shll
sbb
fdivp
gs
xor
cmp
jecxz
xor
cs
push
cwtl
enter
inc
inc
repnz
gs
outsl
jns
cli
gs
data16
out
push
and
outsl
ds
xchg
call
cld
add
add
int3
mov
ret
aam
shlb
sub
add
clc
jno
jmp
out
int3
xor
popa
or
push
fidivrs
pop
lods
ljmp
je
jns
sahf
xor
mov
lcall
adc
jb
aad
push
in
xchg
sarl
jno
hlt
cs
sub
inc
adc
inc
cmp
shrb
popa
ret
inc
adc
lcall
stc
xchg
scas
inc
push
jmp
mov
mov
sbb
xor
loope
xchg
and
std
dec
mov
mov
clc
std
sahf
mov
cmp
sti
lock
mov
sub
and
adc
mov
sbb
xchg
fnstenv
or
cld
faddl
cmp
mov
sbbl
sub
push
mov
les
movsb
jo
adc
aam
jle
cmp
fnstenv
jnp
pusha
inc
sbb
push
and
mov
xchg
sbb
jno
xchg
mov
je
cmp
out
out
call
outsb
mov
in
push
cwtl
xchg
int
jne
ret
jae
inc
or
mov
js
int3
mov
push
jne
mov
shlb
xchg
mov
pop
lods
xchg
cmp
cwtl
pop
dec
jl
loopne
pop
repnz
xchg
push
ss
lds
xchg
into
dec
clc
rcr
sub
dec
push
cli
sti
push
and
xchg
cld
sbb
pop
xchg
dec
lock
dec
and
jne
call
popa
or
jmp
pop
sub
test
mov
pushf
ret
pop
add
sahf
fadd
loopne
and
xchg
pop
fmull
shr
adc
dec
push
test
inc
xor
cmp
repz
dec
outsb
je
jb
je
rep
gs
push
imul
insb
cmp
imul
jo
jo
inc
lret
push
gs
icebp
in
addr16
ljmp
in
mov
inc
call
jns
outsb
fs
iret
repz
jno
gs
repz
inc
js
insl
inc
iret
jecxz
icebp
adc
sahf
jo
outsb
negb
clc
stc
cli
hlt
xchg
out
sti
cld
std
call
loope
dec
leave
outsb
lret
dec
fwait
jb
in
adc
repz
and
shl
js
xlat
shrl
aad
dec
sbb
add
mov
into
ret
sbb
pusha
lock
insb
cmpl
mov
pop
cmp
jbe
jl
aas
lds
push
lcall
movl
cmp
popa
mov
imul
jecxz
fsub
adc
xchg
mov
mov
pop
in
jns
cmpsl
es
and
and
pop
lea
stos
or
xor
push
hlt
adcl
mov
negl
fistl
or
addr16
inc
mov
int3
cmpsb
and
xchg
pop
inc
pop
in
mov
push
cltd
pop
jmp
pop
mov
or
addr16
ljmp
lea
pop
push
mov
les
jae
je
mov
xor
cltd
mov
idiv
or
das
clc
loopne
mov
or
and
jl
mov
in
inc
cmc
add
inc
cmp
jl
mov
incl
jns
sub
dec
and
lock
nop
cmpsb
push
jae
and
adc
je
jne
mov
daa
adc
fsts
in
movb
or
push
clc
cwtl
sub
insl
push
mov
repnz
pusha
add
andl
add
fadds
clc
and
or
xchg
or
add
push
es
call
adc
sub
jo
sbb
sub
sbb
in
xor
mov
adc
inc
test
adc
pushf
add
rcpps
mov
stc
xchg
loope
inc
cli
inc
sti
jb
popa
std
insl
sbb
xchg
or
movsb
dec
ret
loope
cmp
imul
stos
push
lods
dec
lods
push
scas
imul
outsb
mov
mov
mov
sbb
icebp
sub
or
nop
cmp
sahf
addr16
sbb
lods
pop
mov
jb
insl
mull
ljmp
popa
js
push
outsl
outsb
fcomps
mov
loope
inc
fidivl
push
cmpsl
mov
fimuls
lea
pop
pop
nop
pop
xchg
push
sbb
xchg
xchg
push
xchg
inc
xchg
jb
popa
imul
cmp
push
cltd
jo
push
inc
lcall
sahf
xor
adc
loope
xor
mov
mov
mov
mov
xchg
mov
adc
loope
je
inc
shrb
repz
mov
outsl
jne
idivb
outsb
fs
and
cmp
lret
int3
int
or
jl
insb
inc
mov
filds
cmp
clc
sub
int3
push
fcmove
pop
mov
jmp
sbb
mov
xlat
mov
ret
stos
gs
dec
jno
cmp
loopne
jno
cmp
rorb
push
push
shlb
pop
scas
pop
adc
add
jl
jo
mov
add
mov
sub
cmp
mov
flds
push
xchg
push
test
repnz
nop
iret
mov
push
and
cmp
popa
arpl
or
cmp
pop
pushf
je
jo
lahf
jae
jo
sbb
mov
and
push
movsl
push
cld
or
xchg
mov
mov
mov
or
sub
inc
jns
call
mov
test
dec
testb
pop
adc
inc
clc
popa
dec
cmp
or
sbb
inc
jne
jb
lcall
out
jle
arpl
dec
icebp
xor
mov
test
dec
mov
ret
loope
jo
gs
out
push
push
jb
arpl
popa
hlt
jnp
aad
movsb
ds
loope
mov
imul
ret
popa
xlat
je
fsts
int3
jae
outsl
arpl
mov
xchg
xor
repz
inc
jne
gs
repz
je
jb
arpl
ret
xchg
dec
sbb
inc
gs
jae
test
sbb
adc
repz
insb
test
pop
dec
mov
mov
mov
adc
and
sbbl
mov
dec
in
test
add
or
add
add
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jg
lods
mov
pop
ret
lret
shlb
add
lea
push
cli
dec
xor
mov
push
or
inc
mov
cmp
add
xorl
hlt
inc
test
jns
cmp
cmp
mov
repz
mov
jae
mov
and
popa
arpl
jns
out
outsb
cmp
fs
insl
es
and
iret
es
bound
add
push
ficoml
sub
outsl
dec
mov
in
xlat
inc
adc
int3
mov
fsubrs
ds
in
or
subb
sbb
push
adc
addl
adc
or
push
inc
or
push
add
mov
fidivs
shll
jl
or
cmp
push
push
push
js
ret
adc
add
cmpb
test
mov
mov
or
ret
sbb
mov
movl
add
cmp
sbb
push
call
cmpl
call
adc
jbe
push
fildll
or
and
pop
add
mov
test
mov
scas
into
scas
imul
dec
add
rorb
push
cld
js
pushf
push
sbb
aas
jns
out
xor
jns
out
xor
cmc
mov
xor
sahf
icebp
mov
into
cmp
out
iret
rcl
sarb
rcl
jo
iret
repz
xlat
fdivs
fnstenv
outsb
mov
loope
cmp
mov
jns
loopne
loope
cmp
inc
cmc
es
iret
repz
cmp
clc
cmp
out
lock
loope
icebp
repnz
xor
cmp
sbb
divb
es
fs
xor
xor
ret
loope
cmp
scas
adc
mov
notl
push
lods
std
xchg
sub
movsb
lods
ljmp
cmpsb
loope
add
adc
push
fnstsw
adc
pop
ds
lret
daa
dec
rorb
jecxz
sub
dec
pop
cmp
dec
and
cmp
sti
push
mov
enter
fnstsw
lahf
pop
outsb
gs
mov
jge
pushl
ja
jmp
insb
and
xor
or
dec
rcll
call
mov
and
je
iret
leave
dec
ds
mov
cmp
mov
push
pushf
sbb
inc
andl
jae
in
or
fdivr
xchg
pop
mov
sub
je
cmc
dec
pop
jl
jne
sti
jnp
pop
sbb
subb
je
cli
jb
imul
mov
out
pop
xchg
test
xchg
cmp
mov
pop
and
pop
pop
in
pop
jmp
insb
insb
icebp
aas
ret
push
lds
mov
mov
int3
mov
xor
push
adc
mov
pop
pop
mov
stc
xor
adc
jne
and
aas
stos
js
and
iret
arpl
outsb
adc
out
push
fbstp
outsl
arpl
mov
mov
cmp
and
mov
adc
mov
sub
cmp
jecxz
mov
mov
lea
iret
repz
mov
push
sbb
jns
jns
rol
ret
les
ljmp
outsb
lret
push
adc
int3
int
into
outsl
xorl
shlw
shlb
lock
sti
sbb
fdivs
inc
outsl
sbb
sub
insb
nop
fwait
data16
out
test
je
cmove
jo
pushf
push
cmp
xor
jl
mov
imul
or
jo
or
dec
sbb
jecxz
xorl
cmpsb
mov
out
mov
movsb
push
inc
repz
xchg
dec
inc
xor
sub
and
repnz
mov
mov
jo
mov
shl
addr16
ja
xchg
loope
inc
imull
jb
gs
cmp
cs
fs
insb
std
dec
push
out
dec
lods
lods
dec
outsb
shll
inc
push
lods
out
mov
gs
jne
ret
icebp
mov
mov
push
push
adc
mov
mov
arpl
cmp
arpl
push
cmp
enter
mov
push
push
popa
test
xchg
mov
insb
aas
ret
lods
pop
push
clc
jl
and
cmpsl
jns
xor
push
xchg
mov
jle
test
hlt
imul
rcrl
fidivl
test
add
sbb
xor
add
into
cmp
mov
and
mov
cwtl
aaa
or
loopne
loope
cmp
loopne
loope
loop
jecxz
sbb
xchg
in
in
out
out
out
lock
loopne
sbb
lock
call
int3
aas
and
push
jmp
mov
mov
inc
icebp
pop
cld
sbb
pop
and
fs
fcoml
test
les
hlt
test
jp
enter
clc
setno
enter
wbinvd
iret
into
rol
movl
jmp
add
imul
sbb
aam
stc
popl
push
xor
adc
push
aad
cmp
inc
dec
add
mov
js
enter
je
mov
mov
mov
aaa
mov
test
cmp
and
pop
push
xadd
mov
cmp
shll
sbb
push
les
sbb
inc
int3
push
rolb
out
jns
pop
mov
jp
push
fcoml
add
mov
loopne
pop
stos
xor
xchg
fidivs
xor
data16
sub
jl
xchg
cmp
ss
mov
jno
test
ret
jne
enter
add
nop
movsl
and
lret
jmp
ret
jg
push
push
mov
xor
and
out
xchg
inc
mov
cmp
mov
mov
pop
push
out
in
inc
adc
mov
inc
popf
jge
sarb
rol
and
pop
jmp
adc
testb
in
ja
and
push
or
pop
mov
arpl
add
imul
and
fcompl
je
mov
imul
inc
mov
and
mov
sub
ret
out
mov
cmp
out
add
or
mov
lcall
xchg
mov
mov
sub
pop
inc
or
test
adc
mov
clc
or
jge
je
addb
cmp
push
cld
push
arpl
jecxz
in
push
call
fs
mov
call
mov
icebp
cmp
icebp
mov
xlat
pop
xchg
jns
push
popa
mov
enter
fsts
xchg
mov
or
clc
cwtl
pop
push
adc
jmp
mov
std
inc
push
add
push
data16
or
add
cmp
je
add
icebp
xor
sub
adc
pop
movsb
lock
push
pop
xor
add
mov
pop
inc
adc
add
clc
jl
lea
mov
mov
push
sarb
sbb
clc
lahf
orb
mov
rep
jecxz
mov
js
cmp
stc
pop
dec
fsubl
enter
movsb
lret
mov
inc
scas
dec
sub
mov
hlt
div
push
shlb
inc
add
ret
cmp
dec
call
jne
mov
daa
rorl
add
adc
repz
jo
insb
jno
icebp
movaps
add
cmp
jne
add
in
xor
sbb
ljmp
jno
and
dec
push
push
fs
jecxz
push
xor
dec
cmpsl
inc
in
mov
inc
bound
int3
int
testb
out
jns
insb
push
jb
xchg
sahf
arpl
aad
push
push
cs
cmp
loopne
add
jl
addr16
mov
pop
in
mov
daa
xor
outsb
and
mov
hlt
dec
lock
ret
pop
sub
pusha
popa
push
adc
rcll
mov
dec
sub
mov
mov
mov
jl
enter
aas
mov
lea
xor
inc
pop
xor
decl
push
inc
mov
add
add
in
jmp
add
movb
and
push
sub
inc
add
and
jle
push
push
mov
sbb
sbb
xchg
cld
fmull
ret
test
nop
inc
shll
jnp
push
sub
jmp
or
push
pop
xchg
jno
ret
jne
push
xchg
add
int3
in
mov
jl
cmpl
adc
mulb
lea
cmp
push
shlb
cmp
sub
orl
xor
test
lret
sahf
clc
push
xchg
jbe
lds
sahf
hlt
sbb
mov
fucomp
testl
mulb
gs
xchg
push
push
mov
xchg
mov
sbb
inc
stos
or
push
inc
insb
int
shlb
push
mov
popa
add
je
or
mov
dec
mov
in
pop
adc
push
push
adc
cmc
je
notw
sbbl
js
or
or
push
mov
insb
in
and
inc
inc
shll
adc
dec
addl
xor
push
bound
jns
das
dec
insb
cmp
jmp
pop
push
adcl
jmp
push
xchg
rorb
mov
icebp
adc
sbb
xchg
push
add
push
gs
stos
fwait
fs
cmp
gs
in
inc
sub
jb
xchg
pop
inc
sub
or
aam
cmpsl
dec
das
in
mov
mov
pop
outsl
mov
aas
inc
mov
lods
cmp
mov
sub
mov
push
int
jmp
lea
jmp
push
shll
add
lcall
push
sub
dec
mov
into
nop
je
imul
jno
cmp
imul
roll
aaa
pop
dec
push
sbb
clc
push
adc
and
push
push
je
mov
or
orb
je
mov
and
rol
pop
push
pop
ret
test
add
sbb
hlt
fsubr
std
adc
push
jns
andl
xchg
out
push
lret
outsl
lahf
out
cmp
ret
add
shlb
shll
jecxz
adc
cmc
cmp
jae
outsl
iret
sub
dec
outsl
jns
dec
sub
jae
push
sahf
out
xor
rep
in
jae
je
and
jo
sbb
outsl
repz
gs
jae
iret
arpl
xor
rcr
lret
je
mov
adcb
pop
adc
ret
lock
fists
xchg
pop
je
xor
popa
push
pop
add
inc
shr
add
dec
dec
sub
sub
popa
dec
sub
dec
js
xchg
and
ficompl
pop
cltd
mov
add
xchg
add
mov
outsl
mov
fcmovb
in
push
imul
popa
jo
xor
repz
xor
fs
insb
pop
leave
add
cmp
fsubr
adc
fisubs
outsb
cmp
repz
push
outsl
imul
add
cwtl
jns
das
xor
dec
outsl
imul
out
jo
out
push
imul
jnp
mov
icebp
aas
stos
jo
ret
sbb
xchg
fs
loope
cmp
jae
je
push
cmp
xchg
mov
in
push
movsb
jb
jmp
mov
stos
jmp
bound
lods
adc
cld
nop
mov
lea
ljmp
jae
mov
enter
outsl
pop
incb
in
jne
cmp
repz
outsb
je
jb
sbb
mov
jae
flds
xchg
push
push
test
mov
xchg
or
push
xchg
adcb
dec
dec
int3
pop
mov
pop
aam
xchg
adcb
fcomps
rclb
add
pop
dec
mov
push
push
inc
xor
fs
test
push
ret
mov
cmp
aad
cwtd
or
mov
or
add
shlb
ret
cmpw
jne
mov
add
cmpl
cmp
inc
ljmp
icebp
jl
adc
cmp
imul
outsb
rolb
shlb
je
mov
cmp
je
sub
add
cmp
ja
mov
in
jecxz
mov
dec
add
mov
mov
cmp
inc
jmp
add
add
cmp
jb
sbb
cmpb
add
je
decl
incl
jmp
mov
andl
jmp
push
xor
jmp
movlps
adc
fs
mov
pop
adc
add
jns
jne
mov
add
or
enter
shl
shll
adc
and
cmp
cmp
pop
es
shrb
ret
cwtl
adc
mov
test
sub
out
sub
es
dec
push
push
clc
push
jg
push
das
movsb
pusha
xor
or
ret
shlb
ficoms
push
add
je
or
inc
dec
pop
push
mov
push
mov
cmp
jle
cmp
and
sub
movb
jns
nop
xor
or
aam
je
ret
sub
push
hlt
push
xor
push
jecxz
mov
iret
clc
push
addr16
cs
insb
xchg
dec
pusha
sbb
mov
xor
in
gs
ficoms
out
sarb
pop
dec
jo
scas
xor
icebp
dec
sahf
idiv
cmp
je
cmp
dec
mov
cmp
insb
sbb
rcl
dec
jae
xor
je
jecxz
test
jne
lahf
sarb
outsb
add
adc
outsb
jns
out
gs
gs
out
sahf
out
popa
fs
imul
sub
add
cwtl
dec
pop
movsl
je
cmp
repz
gs
insb
outsl
loope
jae
dec
cmpsb
popa
roll
ret
cmpsl
outsb
test
movsb
xor
ss
repnz
push
clc
shll
mov
jbe
cltd
mov
shlb
inc
cwtl
inc
mov
jo
rclb
xor
add
movsl
jle
inc
mov
mov
pop
sub
stc
sub
ret
in
add
dec
push
test
xchg
jns
inc
in
jmp
aaa
xchg
pop
xor
in
lcall
jae
sbb
adc
mov
int
cli
test
and
fmuls
xchg
or
xor
cmp
in
je
sbb
push
sub
lds
je
add
sub
sbb
inc
stos
xchg
movsb
cmp
or
jo
xor
hlt
push
sbb
lds
popa
dec
push
aam
or
cmp
hlt
lock
adc
jne
call
lock
mov
sub
sbb
jmp
dec
add
jb
movsbl
cmp
mov
jmp
icebp
push
rcl
or
add
mov
mov
test
je
mov
inc
inc
jmp
andb
cmp
push
fwait
xor
pusha
inc
test
je
test
cld
aaa
pusha
sahf
mov
mov
adc
jp
pop
push
inc
cmp
mov
in
jo
fs
nop
sbb
rorl
mov
ss
jns
mov
or
ficoms
incb
clc
cmp
mov
andb
gs
cltd
scas
jbe
inc
add
sti
sub
mov
cmp
fld
cltd
dec
inc
fldl
cmp
jmp
add
mov
outsb
xchg
adc
roll
sbb
adc
jmp
push
mov
mov
cmp
test
jne
pop
ret
sbb
mov
cmp
add
inc
jg
mov
je
mov
add
xor
cmp
mov
jne
mov
sub
add
cmpb
mov
inc
cmp
je
andps
mov
arpl
nop
insb
pop
add
ss
push
fwait
ss
adc
xor
dec
or
repnz
push
pop
xor
test
inc
in
out
out
andl
imul
je
imul
lea
hlt
inc
sbb
je
das
sub
push
mov
push
fmuls
mov
add
cmp
insb
jne
add
adc
ror
stos
popa
loopne
pop
pop
adc
and
loop
push
push
jae
and
jns
aad
scas
hlt
insl
inc
adc
mov
cmp
or
jmp
incb
imul
sbb
adc
or
dec
fidivs
or
sbb
sbb
xchg
xor
sub
shlb
add
mov
mov
nop
pop
xchg
cmp
or
sbb
dec
dec
pop
add
push
adc
sarl
ret
mov
jb
inc
add
or
and
iret
cmp
jbe
insb
dec
out
inc
mov
iret
add
sarb
push
or
pop
test
leave
push
addl
inc
sbb
or
fwait
add
sbb
dec
movzwl
or
mov
add
imul
test
add
cmp
jae
cmp
jb
or
rol
addr16
add
or
cs
mov
into
repnz
inc
sbb
sub
mov
stos
sbb
push
xchg
xor
outsb
sub
andb
mov
popa
mov
xchg
add
roll
incl
xor
mov
ret
fcoml
push
inc
dec
xor
cld
mov
lret
idivl
lret
jbe
stc
idiv
aaa
jp
inc
fcompl
xchg
lea
movsb
or
push
shll
pop
fimuls
adcb
imul
and
or
mov
push
or
and
jp
test
sbb
inc
xor
rcl
cld
subb
xor
movb
leave
and
ljmp
mov
ret
clc
gs
int
dec
add
xchg
ss
add
dec
fldenv
sub
lcall
dec
mov
loop
dec
inc
inc
jb
ds
sbb
or
mov
stos
cmp
add
inc
push
add
clc
push
fldt
in
mov
mov
pop
and
push
leave
aaa
dec
orb
aas
inc
hlt
pushf
sbbb
add
scas
dec
test
mov
inc
push
in
lock
shrl
dec
or
cmp
jbe
or
sbb
lock
xor
or
lock
push
aad
pop
pop
aaa
cmp
pop
xor
andb
adc
insl
sub
push
bound
repnz
and
jo
dec
inc
mov
pop
negb
mov
jno
stc
clc
pop
fsts
jmp
fmuls
add
lret
add
sti
mov
xchg
das
mov
in
mov
inc
int
inc
jns
ja
bound
cmp
es
imul
insb
addr16
repz
xor
or
sub
cmc
inc
jle
loop
pop
jae
lcall
notb
cwtl
aam
nop
arpl
loop
bound
sub
ljmp
cmp
popa
inc
push
ret
or
xor
int3
mov
jmp
push
dec
std
mov
and
lock
ret
mov
outsb
mov
mov
mov
push
mov
out
push
stos
outsl
ja
xor
sahf
inc
imul
and
jnp
jns
xorb
insl
add
stc
cmovbe
stc
data16
cltd
fwait
pop
lods
popf
cwtl
shlb
mov
xchg
std
xchg
std
iret
rcrl
inc
insb
xor
repz
inc
popa
arpl
mov
mov
jmp
popa
je
add
test
leave
cmpsb
jle
nop
cld
xor
cmp
dec
sbb
popf
stos
stos
push
xor
jl,pn
int3
loopne
js
subb
cmpsl
push
cltd
pop
idiv
add
cwtl
add
push
cmp
add
cwtl
in
sbb
cwtl
cmp
mov
inc
into
inc
out
lret
imul
out
negl
add
mov
mov
lea
sti
jb
cmp
mov
add
sub
pop
into
jae
or
xchg
jne
xor
pop
inc
push
dec
outsb
push
and
fs
out
jns
inc
xor
xor
imul
sbb
aam
sahf
pop
scas
inc
jbe
nop
cmp
repz
fdivl
js
js
fcomip
cmp
lods
aam
mov
inc
fs
outsl
frstor
out
je
pop
dec
xchg
mov
jecxz
gs
mov
and
arpl
cmp
imul
pop
leave
pop
decl
stc
lcall
push
and
mov
mov
call
and
cmpsb
pop
test
insl
push
cmp
test
fimuls
push
loop
push
jp
daa
lods
fnstenv
es
cmpb
or
dec
and
mull
addr16
divb
fisttpll
inc
fists
xor
jmp
gs
jo
cmp
xchg
sbb
fmuls
dec
pop
push
test
jecxz
jno
or
jle
gs
jle
mov
pop
jb
je
icebp
into
imul
sahf
out
fcomps
mov
jae
push
xchg
and
jae
jae
jae
cmp
jb
add
jne
jne
jne
xchg
loope
jne
jne
jne
jne
jno
sbb
jne
jne
jne
xor
loope
sahf
es
je
je
je
cmpsl
or
pushf
je
cmp
movsb
je
je
je
je
je
xchg
loope
je
je
je
je
jo
sbb
je
je
je
je
je
sbb
or
jae
jae
jae
xchg
loope
jae
jae
jae
jae
jae
cmp
cmpsb
jae
jae
jae
jae
jbe
lock
jbe
jbe
jbe
push
xchg
pop
jbe
jbe
jbe
jbe
js
addr16
add
lret
loop
inc
gs
gs
inc
inc
dec
bound
and
je
dec
aaa
pop
js
push
add
add
inc
jb
popa
fsts
mov
imul
popa
jo
imul
subl
jb
dec
lret
add
add
dec
xor
cs
insb
add
add
insl
jae
mov
jae
jb
outsb
je
add
je
outsb
or
add
inc
pop
inc
pop
push
inc
pop
in
add
add
jae
insl
setbe
cmp
xor
lret
data16
enter
sarb
xor
imul
xor
pop
push
outsl
jo
dec
pop
adc
bound
es
or
imul
in
jo
outsb
arpl
jecxz
and
in
push
mov
jl
and
gs
pop
stc
cs
out
or
les
loop
imul
popa
outsb
fs
in
ret
lret
int
clc
aaa
jo
pop
push
jb
ret
sbb
push
cld
cmp
pop
in
jbe
sti
fwait
jge
mov
sbb
loope
imul
push
sub
or
add
add
rorb
add
dec
outsl
popa
fs
sub
insb
xchg
push
cmp
in
push
jbe
add
imul
movsl
lds
inc
inc
je
pop
or
bound
push
jle
push
pusha
dec
shlb
imul
outsl
dec
jne
inc
jns
adc
or
jne
ret
imul
and
push
inc
add
push
pushf
andb
jo
push
xor
sbb
roll
dec
outsl
fs
inc
lcall
mov
fsts
add
loope
in
icebp
adc
inc
jo
outsb
mov
mov
push
xchg
fwait
loope
push
outsl
test
jne
dec
enter
jo
lcall
stos
lds
xchg
mov
dec
out
loop
shll
xorl
insb
imul
insb
dec
inc
push
dec
inc
dec
mov
lea
or
mov
mov
loop
push
push
fdivl
ret
push
mov
cwtl
cltd
ja
mov
and
rorl
inc
js
mov
and
jae
jne
add
push
add
cmp
int3
add
dec
inc
dec
lret
lock
fisttpl
add
sub
cli
ljmp
and
push
ja
pop
jge
xor
fiaddl
xor
lds
and
push
xor
push
add
lret
cmp
inc
add
or
and
sub
push
dec
dec
inc
sub
pop
and
subb
jo
jae
cltd
loope
aaa
sub
fs
mov
sbb
outsl
pop
push
xor
push
ficompl
lock
lods
jo
xor
shrb
jae
imul
mov
icebp
push
or
dec
ljmp
xchg
enter
and
inc
or
xorb
cmpsl
add
add
or
daa
add
fstpl
add
xor
pushf
imul
sbb
add
or
push
add
mov
call
and
arpl
into
or
das
push
fnstsw
int3
jl
or
gs
xchg
xchg
cmp
dec
add
stc
dec
or
or
jno
or
negl
sbb
inc
sahf
shll
or
pop
outsb
adc
jle
imul
add
adc
pop
inc
pop
xor
shr
je
mov
loop
loop
xchg
pop
mov
add
pop
fs
xchg
stc
insb
pusha
lea
pop
mov
or
aaa
add
mov
add
adc
or
add
add
pop
add
inc
iret
leave
jge
adcb
or
lret
add
cmpsl
enter
xchg
xor
adc
xchg
fldt
sub
jnp
sbb
cmp
in
fisttpll
test
out
add
movsb
add
sub
add
dec
xchg
xlat
and
pusha
fwait
pop
int3
mov
jns
mov
push
adc
cmp
ss
push
xlat
bound
push
rol
loop
add
sbb
and
sbb
sbb
fidivrs
cmc
add
and
sub
sbb
mov
pusha
cmpsl
gs
cmp
fdivrl
sub
mov
adc
push
pop
adc
push
arpl
ret
push
js
lret
ja
or
fnstcw
pop
adc
xor
xchg
sub
xchg
in
loope
jge
cmp
mov
add
js
imul
dec
push
das
jmp
stc
and
sub
xor
mov
lret
adc
lret
pop
cmp
inc
popa
or
inc
iret
push
jl
shlb
test
stos
cmc
fwait
loop
gs
pop
stc
sub
iret
push
push
es
leave
fisubl
cmp
and
dec
pop
sub
out
imul
rorl
add
sbb
xchg
stc
les
jae
sub
in
add
into
or
or
mov
inc
pop
sub
sbb
lcall
add
adc
lret
orl
ret
sbb
adc
bound
xlat
cmpsb
loop
and
scas
in
mov
add
add
add
add
add
add
add
add
cmp
add
xor
add
xor
add
inc
mov
add
add
rorb
add
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
mov
add
mov
add
add
xor
add
add
add
push
mov
add
add
add
add
add
add
xorb
add
add
add
add
push
mov
add
add
je
add
add
add
incl
add
add
add
add
add
lcall
add
add
add
pushl
add
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
dec
xor
cs
insb
add
add
add
gs
inc
inc
add
dec
push
push
inc
push
push
cs
insb
add
add
jae
popa
outsb
add
add
add
inc
push
xor
cs
insb
add
add
inc
gs
imul
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
inc
add
jo
fdivr
mov
jno
add
repz
js
and
add
insl
mov
icebp
loope
add
mov
push
push
sub
dec
add
mov
add
mov
xorb
xor
pushf
jl
pushf
push
pop
mull
add
ret
pop
push
push
push
call
pop
sub
inc
add
sahf
add
add
mov
mov
mov
add
sbb
pusha
or
stos
pop
cwtl
add
nop
cmpl
je
mov
test
je
mov
mov
mov
or
cmp
sbb
das
add
mov
fmull
or
call
mov
sub
lea
push
push
push
push
aaa
add
mov
call
jmp
sbb
jne
out
inc
shlb
push
add
test
je
mov
push
inc
and
pushf
jb
jnp
xchg
stos
sbb
pop
sub
lea
jne
jmp
test
je
loope
mov
mov
jg
lea
cltd
push
aas
pop
dec
popf
add
sbb
mov
loop
rcrb
push
movsb
insl
loope
stos
jp
pushf
arpl
jmp
test
fiadds
add
mov
mov
add
movb
add
mov
hlt
addb
repnz
push
call
aaa
push
mov
popa
cmp
cmp
inc
or
jge
add
pop
pop
ret
push
mov
add
aaa
loop
repnz
sub
call
add
push
call
pusha
pop
push
add
jle
or
push
add
sti
xor
add
je
push
mov
add
jne
xor
stos
pop
add
jmp
add
movsl
xor
leave
dec
cmp
es
mov
cmpb
pop
or
ret
je
mov
adc
add
mov
sub
mov
lods
mov
add
lods
inc
pop
add
aas
mov
sub
je
movw
movl
jge
sbb
add
add
js
add
mov
and
shr
dec
add
clc
add
mov
add
dec
in
ljmp
add
add
adc
pop
add
gs
add
push
add
nop
jecxz
sub
call
jle
sbb
xlat
xchg
cmp
or
into
dec
push
jmp
xor
push
clc
movzwl
test
jne
test
jl
ljmp
cmc
or
mov
clc
cmp
jge
mov
inc
movzbl
add
mov
and
sub
je
dec
mov
jne
or
int
cmp
jne
or
rclb
les
aas
les
add
push
cwtl
add
sarb
enter
adc
xor
mov
xor
mov
jmp
sarl
xor
ret
add
jbe
mov
or
call
jg
sbb
push
mov
lock
xor
pop
mov
jg
inc
adc
pop
popa
je
pop
je
mov
cmpsl
popa
dec
or
sar
rep
add
cmpsl
popa
cltd
loope
jnp
lcall
add
lret
cmp
in
push
mov
mov
ret
jne
dec
aad
xchg
mov
dec
mov
add
addl
adc
iret
xchg
mov
jge
or
mov
enter
pop
cli
repz
add
jno
cli
dec
stos
push
sbb
dec
mov
push
xor
push
into
call
cmp
je
or
je
and
dec
popl
call
sub
pop
cli
cmp
sub
stc
jmp
mov
xor
aas
movl
movl
pop
pop
stc
out
jns
or
fisubrs
inc
nop
insl
fldcw
sub
insb
dec
push
cmp
push
je
add
add
jle
mov
int
incl
repnz
lahf
push
push
push
push
call
xchg
inc
dec
cmpsb
imul
push
adc
lds
jae
bound
or
inc
or
adc
pushf
jae
testb
cltd
or
mov
cwtl
test
rclb
pop
jae
cmp
jmp
aam
push
adc
subl
adc
add
aad
mov
pop
adc
in
in
test
adc
lcall
lods
push
mov
nop
inc
inc
scas
in
xor
pop
mov
outsl
xchg
popf
add
aam
lods
test
ja
mov
cmp
mov
in
push
scas
inc
rcrl
dec
or
lcall
int3
add
stos
insb
mov
subb
cmp
adc
jl
sbb
aaa
or
or
fildl
add
and
cmp
push
mov
test
dec
faddl
add
orb
ja
mov
mov
in
ret
in
aam
xor
and
iret
adcb
cmc
lea
add
aaa
dec
push
xor
pop
out
lret
mov
add
inc
jo
insb
imul
and
jb
jb
push
add
arpl
jo
add
and
and
call
jb
jae
ret
jne
and
je
bound
js
mov
adc
dec
mov
popa
insb
jbe
mov
popf
sbb
sbb
add
push
add
jnp
jae
xor
dec
gs
popa
mul
insb
add
inc
outsl
js
add
shll
outsb
gs
imul
imul
inc
test
add
dec
popa
outsb
fs
add
outsb
inc
xchg
loop
outsl
cmp
sub
je
cltd
jle
fcmovnb
popf
or
repz
rcrb
cmp
inc
insl
shr
cld
pop
sahf
out
cmp
jp
mov
xchg
pushf
movsl
sbb
or
shlb
je
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
push
add
movsb
add
add
mov
add
insb
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
