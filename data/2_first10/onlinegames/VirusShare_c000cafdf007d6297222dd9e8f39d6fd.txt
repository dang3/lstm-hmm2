out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
inc
inc
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
push
sbb
jbe
jnp
fwait
out
mov
add
add
je
and
jle
out
and
jae
test
push
sti
mov
mov
fs
and
adc
or
out
dec
push
imul
and
adc
sbb
and
out
in
or
push
or
add
and
dec
sahf
add
add
aaa
add
add
mov
push
xor
mov
inc
mov
dec
pop
mov
sub
in
and
faddl
xor
add
imull
bound
pop
mov
fldenv
fwait
mov
je
pop
sub
add
loopne
inc
push
push
pop
aas
and
add
gs
shll
xor
shlb
sbb
add
jb
insb
outsl
arpl
sti
add
dec
mov
push
out
inc
mov
scas
mov
sub
adc
add
lods
shlb
cmpsb
imul
and
cmpsb
jmp
es
pop
imul
insb
lcall
sbb
xor
sub
cmp
test
mov
mov
imul
lcall
ds
imul
shlb
aam
enter
sahf
insl
lcall
scas
jae
pop
out
dec
mov
add
mov
imul
lcall
ret
lret
cmpsb
imul
dec
shll
and
inc
scas
lcall
fwait
add
cmp
lcall
shr
add
fildl
mov
nop
iret
add
jne
mov
add
jle
pusha
pop
ss
xlat
add
pop
and
lock
dec
or
cltd
add
add
decl
je
jb
gs
mov
fisubl
push
gs
fs
sub
andb
pop
dec
jo
outsb
push
jb
inc
adc
cli
repz
sub
dec
dec
inc
push
and
xchg
mov
add
mov
and
or
outsl
add
dec
rep
aaa
sbb
pusha
add
push
addb
push
add
fistpll
pop
add
mov
and
rolb
add
sbb
push
ret
and
and
testl
ret
push
add
mov
int3
xchg
int
ja
aas
mov
add
aas
add
arpl
xchg
or
shrl
fcoms
mov
incl
and
add
es
sbb
inc
jno
test
inc
xchg
lea
popa
xchg
mov
inc
fistpl
and
or
incl
sub
ret
inc
mov
xchg
stos
pop
fmul
dec
xor
xor
hlt
pop
in
xor
ud2
push
add
outsb
mov
outsl
add
jae
push
packsswb
je
jne
jb
gs
xor
popa
sbb
add
gs
add
ja
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
fs
addr16
xor
push
sbb
popa
pcmpeqb
popl
add
xchg
push
jg
lea
jmp
call
dec
call
insb
inc
out
iret
mov
imul
mov
lret
dec
je
jo
int
jg
lahf
jno
gs
inc
js
fwait
or
out
je
lods
push
jns
mov
je
jb
in
outsl
outsb
sub
add
mov
xchg
insl
das
mov
jne
sub
pusha
mov
cs
popa
insl
cmp
outsb
ds
mov
popa
mulb
and
outsb
arpl
lahf
out
rcrl
call
add
mov
cld
std
or
lds
push
push
add
push
dec
cmp
mov
adc
movl
hlt
int
add
add
cmp
lea
imull
decb
push
mov
cmp
imul
add
aas
sti
add
js
and
or
add
movsb
or
mov
lcall
nop
outsb
and
les
shlb
xchg
bsr
mov
jmp
ja
pop
pop
and
aam
dec
add
inc
push
dec
inc
popa
iret
subb
lcall
mov
lea
jb
ss
mov
clc
inc
jb
or
imul
aas
pop
inc
arpl
shlb
push
pop
les
iretw
into
mov
stos
pop
inc
add
cmp
add
fwait
xor
sub
xor
xor
add
cmp
xor
stc
pop
stc
cmp
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
pop
sti
sysenter
add
push
sahf
mov
or
pop
mov
mov
and
lret
daa
sub
popa
into
lock
or
add
jb
leave
in
inc
in
inc
das
pop
xor
xchg
pop
pop
jg
sbbl
or
add
cli
sub
mov
add
mov
in
in
push
add
sbb
mov
sub
in
adc
stos
gs
add
mov
cld
mov
push
mov
mov
rorl
xor
or
adc
in
in
push
push
lcall
jmp
dec
in
add
adc
sub
sub
mov
mov
push
or
or
movb
sti
push
push
outsl
inc
add
sbb
jne
inc
dec
outsl
movsl
pop
pop
orl
in
or
in
fadd
mov
lock
add
mov
mov
cwtl
push
call
or
fcomps
pop
or
lret
div
in
outsl
adc
mov
es
call
xor
sbb
mov
in
or
mov
lock
fidivrs
mov
ficomps
dec
clc
add
mov
andb
divb
or
push
aas
mov
lcall
call
pop
jl
push
aaa
sub
mov
nop
ljmp
add
sub
add
cmpw
jne
mov
add
addl
aam
add
mov
xchg
and
add
add
adcl
nop
adc
setno
xchg
lods
push
dec
jne
or
leave
or
adc
cmp
je
mov
fistpll
adc
iret
je
or
divl
adc
pop
cmp
ja
pusha
imul
cld
add
or
jae
cmc
mov
outsl
sub
or
inc
jmp
cmp
jb
sub
je
adc
clc
outsl
add
je
decl
incl
ror
ficoml
fdivrp
fcoms
or
xor
jmp
loopne
popa
dec
jo
jecxz
add
out
sub
push
jp
dec
push
mov
enter
xlat
mov
cmp
jg
add
jge
push
push
push
pop
mov
mov
mov
and
push
push
dec
lcall
testl
call
push
or
js
lods
dec
mov
push
push
or
fcomi
movsl
add
mov
movsb
mov
xor
push
jo
mov
jbe
pop
mov
loopne
xchg
dec
dec
mov
jae
adc
enter
sbbl
or
mov
hlt
or
push
push
cmpl
sbb
pop
ja
jmp
sbb
adc
lock
adc
call
jbe
pop
or
push
push
inc
clc
push
jo
enter
sub
aad
adc
fdivrl
leave
repnz
cmpl
push
xor
adc
adc
inc
mov
sbb
add
and
addr16
mov
je
sbb
clc
test
push
adc
addr16
mov
inc
xor
fstl
sbb
je
test
shll
dec
inc
cmp
jo
sar
nopl
fucomi
mov
push
jno
lock
not
push
fdivl
call
push
sub
loop
cld
loope
add
push
sbb
das
fxch
mov
frstor
or
aaa
add
imul
popf
outsb
mov
adc
mov
jecxz
jb
ss
je
xchg
mov
decb
ss
jle
xor
cmp
jle
mov
das
adc
cltd
dec
sbb
in
ja
and
mov
sbb
adc
je
test
rcr
mov
jns
incl
mov
push
in
jne
cmpl
daa
lds
mov
cmp
jne
xor
dec
lods
dec
add
fldt
andl
nop
sbb
addr16
and
in
sahf
inc
cmp
mov
int3
out
lret
adc
neg
pop
decb
mov
faddl
jbe
jmp
or
pushw
ja
jne
data16
or
std
jo
icebp
jmp
xchg
or
add
mov
cmp
shll
jae
aaa
ret
add
repnz
je
jecxz
das
mov
or
ds
mov
cwtl
in
jo
aas
enter
loope
push
jmp
adc
pop
sub
mov
fidivs
shr
jns
lahf
or
sub
into
mov
xor
pop
inc
idiv
lcall
call
jg
sbb
jmp
andb
mov
sub
xor
add
shl
inc
push
xchg
insb
enter
aam
enter
sbb
xchg
nop
sub
add
leave
daa
nop
xor
adc
adc
adc
jbe,pn
mov
xchg
call
push
add
cmp
lcall
cmp
xor
adc
insl
je
cmpsb
pop
add
and
or
cmp
adc
jo
add
aaa
movsl
mov
enter
mov
loop
jg
mov
imul
add
andl
mov
dec
incl
ljmp
or
imul
fcompl
and
push
add
mov
ret
inc
cmp
jecxz
push
negb
aaa
add
cmp
loopne
cmp
jae
incl
sbb
dec
mov
shr
add
imul
mov
push
mov
dec
iret
lods
or
inc
test
or
roll
sbb
test
fcomps
rorb
mov
fistpll
add
loop
or
adc
or
push
clc
add
jne
cmp
fildl
test
add
pop
push
mov
jbe
stos
pop
jnp
inc
popa
bound
push
xchg
pop
jbe
or
cmp
sti
clc
divb
decb
jl
and
or
add
lea
push
mov
ljmp
mov
std
in
ja
add
repnz
not
and
testl
lea
test
or
js
jge
fcmovnu
add
push
aam
or
fisubs
fimull
sti
lret
jg
add
lea
shr
shl
push
pop
stc
outsl
lods
pop
inc
sub
mov
and
not
cmp
aaa
xlat
fldl
add
repz
mov
sti
outsl
adcb
jmp
or
add
dec
daa
pop
jg
in
mov
fldt
sub
sbb
aad
mov
push
lods
loop
mov
push
push
push
call
fcomip
shlb
push
push
shlb
adcb
sub
xchg
rcr
mov
push
ficoms
add
sahf
fidivl
pop
popa
xlat
or
mov
lods
adc
sbb
inc
xor
scas
shrb
fisubl
jl
or
sbb
pop
int3
xor
add
pop
pop
mov
add
out
xor
add
repnz
push
sbb
les
rep
fwait
ja
rolb
fcomp
cwtl
subb
addl
repz
sub
rcr
das
pusha
arpl
pop
mov
shrb
pop
scas
testl
insl
mov
pop
les
subb
outsb
mov
idiv
loop
bswap
inc
sti
sub
sub
sub
fdivs
lret
mov
add
xlat
pop
mov
sbb
mov
and
xor
les
adc
out
or
xor
or
out
repnz
fcoml
test
jbe
es
add
and
fisubrs
mov
aad
cmp
pop
aaa
das
int
jo
push
mov
cmpsb
pop
mov
xor
dec
daa
and
xchg
mov
scas
and
or
popa
adc
add
or
mov
shl
ljmp
and
lods
jge
jmp
mov
bound
push
test
xchg
shlb
clc
jg
iret
das
cld
inc
jge
dec
cmp
inc
rclb
lods
xor
add
push
and
clc
pop
mov
repz
pop
pop
es
adc
lods
and
movsb
ficoml
adc
test
stos
mov
lock
out
fldz
call
insl
fwait
aaa
pop
imul
das
call
out
loop
xlat
lods
mov
sbb
push
adc
add
rorb
in
sub
outsl
aam
and
clc
cmp
jae
cmpsl
pop
jge
cli
fnstcw
ds
jg
or
add
xchg
dec
stos
mov
mov
mov
pop
jl
out
loope
out
sbb
loopne
ret
jnp
sti
repnz
enter
aaa
or
mov
push
aam
je
fbstp
lcall
xchg
inc
mov
fidivrl
or
idivl
call
inc
loop
shr
or
js
or
mov
add
mov
jns
sbb
jns
push
aam
mov
jge
out
daa
push
and
sub
inc
mov
mov
outsl
adc
jecxz
test
fisttps
repnz
adc
or
xor
outsl
mov
test
jmp
add
insl
mov
test
xor
mov
data16
cmp
or
cs
inc
js
js
lds
popa
popf
insl
adc
outsb
aaa
mov
inc
sti
xor
mov
repnz
outsb
cmp
cmp
std
mov
stc
jo
call
ljmp
fcmovnu
fs
mov
fimuls
lret
movsl
cltd
jb
repz
sub
int3
pop
pusha
dec
mov
xlat
xchg
in
cli
xor
lods
sbb
mov
out
push
fcomip
ds
mov
jle
sub
mov
out
testl
dec
out
mov
daa
mov
push
das
pop
dec
fimuls
test
out
aam
xchg
jae
adc
fidivs
pusha
cmp
pop
jbe
cmp
out
cmp
or
push
sub
mov
aas
sbb
cmp
rcl
fstps
in
jbe
les
in
pop
mov
pop
jle
ja
idiv
ss
push
in
clc
jl
pop
je
clc
lcall
cmp
outsl
inc
gs
lods
les
cli
xor
mov
stos
das
insb
sbb
adc
stos
rcrb
sbb
push
or
jo
sbb
ret
sbb
jl
inc
int3
arpl
xchg
ljmp
inc
push
or
movb
xchg
stos
push
jb
lods
mov
mov
adc
xor
mov
jl
aas
cmp
pop
pop
gs
sbb
outsl
xchg
add
sti
lock
int3
or
int
mov
push
or
ja
cmp
les
jno
dec
jge,pt
out
call
jns
ss
adc
in
inc
mov
test
dec
ja
rcrl
jg
call
shl
fwait
outsl
jecxz
jp
sbb
stc
and
dec
fistpl
loopne
sub
xchg
mov
or
ret
mov
ljmp
fdivl
jae
cld
pop
mov
cmpb
xor
xchg
sti
lds
jp
xlat
sbb
cmpsb
fsubs
xor
out
loopne
jb
rcr
mov
ret
inc
outsb
xchg
out
xlat
sub
pslld
ret
repz
rclb
xor
imul
pop
jge
xlat
pop
add
pop
lret
sub
push
mov
or
or
pop
mov
inc
js
cmp
inc
mov
mov
dec
cld
cmpb
sbb
and
sub
push
push
push
call
inc
or
leave
inc
out
sbb
push
insb
js
inc
enter
insb
xlat
push
push
outsb
lea
insl
test
inc
pop
inc
addr16
jge
jl
iret
jb
adc
or
testb
push
add
sbb
cmp
ja
call
imul
add
add
int
sub
dec
pop
adcb
pop
and
fistpl
lea
inc
push
fmuls
rorl
push
jl
aaa
out
push
jmp
xorl
loope
rep
cmp
sbb
jno
push
mov
jp
xlat
clc
call
fists
mov
push
or
cld
call
cmp
jbe
lea
pushl
mov
add
cmp
out
or
in
add
testb
bndstx
sub
lea
clc
pop
icebp
add
js
xchg
or
stos
fdivrs
lret
lods
mov
sbbl
add
stos
jae
mov
jg
lcall
dec
std
call
scas
stos
sbb
sub
ds
iret
out
out
add
in
gs
das
int3
repz
jl
push
jo
hlt
gs
or
lds
mov
add
or
out
mov
or
inc
call
mov
loop
and
ret
pop
dec
aas
mov
lods
bound
pop
or
dec
fmuls
jns
lods
outsb
les
fldenv
fmull
inc
push
pop
adc
stc
fsubrl
nop
push
jbe
ret
adc
lcall
push
push
movb
in
dec
out
push
out
push
insb
mov
icebp
inc
repnz
mov
mov
add
pusha
add
xor
sub
sahf
push
push
sub
add
sbb
aam
mov
pop
rcrb
push
sbb
and
add
js
add
add
pop
or
loopne
add
inc
data16
jbe
sbb
in
push
adc
and
push
add
push
push
add
stc
sbb
clc
fsubrl
xor
lea
or
or
cld
pop
popa
testb
lock
das
sub
push
or
xor
adc
push
or
imul
push
movhps
xchg
mov
or
jmp
push
dec
lods
mov
and
or
add
ret
add
fcomps
lock
fs
adc
push
cmp
scas
rcll
cs
mov
add
mov
test
adc
cmp
lea
mov
sub
jo
ljmp
inc
sbb
xor
or
cmp
mov
sub
add
hlt
push
shlb
mov
mov
push
pop
call
mov
adc
add
mov
inc
out
lods
inc
inc
inc
inc
push
mov
lahf
ficoms
pop
jb
pop
jns
enter
jnp
in
icebp
add
mov
repnz
jo
jae
pop
or
push
andw
mov
loopne
mov
cld
pop
jb
adc
xorb
movsl
jns
jle
adc
cmp
mov
out
subb
jo
add
dec
dec
pop
cmp
pop
xchg
mov
mov
add
cmp
das
fsubrl
mov
cmpsb
in
xchg
push
push
stc
paddusb
fstps
or
push
jo
ret
ficompl
cwtl
cmp
ja
xchg
movl
add
into
adc
fwait
outsb
dec
fisttpl
inc
add
sahf
lods
adc
jb
adc
push
or
pop
adcb
incb
or
lea
cmp
clc
add
push
call
inc
pop
frstor
lcall
lds
repz
inc
push
pop
cld
call
test
or
xor
aaa
push
jo
adcb
cmp
xor
sub
movsb
sub
and
orl
movsb
mov
or
cmp
xchg
xchg
inc
js
push
testb
sbb
decl
je
cmp
jne
push
das
cltd
xchg
out
hlt
int
call
arpl
add
pop
jbe
call
stos
int3
outsl
dec
xchg
test
popa
or
fcompl
or
enter
push
jae
aaa
pop
pop
clc
mov
adc
daa
jp
lea
sub
inc
das
mov
test
adc
adcb
insb
add
jl
fistl
or
scas
mov
test
aam
add
mov
les
push
gs
sbb
dec
mov
add
fnsave
test
adc
mov
ja
ret
addr16
imul
fs
add
add
outsb
jne
mov
jnp
sbb
sub
and
out
dec
mov
xchg
or
test
mov
inc
mov
outsb
xor
pop
add
lods
std
or
push
or
xor
mov
jl
cmp
mov
mov
pushf
push
mov
or
pushf
inc
push
pushf
mov
dec
je
cmp
mov
scas
insl
and
mov
adc
mov
divb
jo
mov
jo
push
push
lods
xor
in
pop
dec
cwtl
data16
out
insb
or
pop
mov
imulb
in
sbb
pop
adc
pop
pop
call
lcall
push
pop
mov
or
shrl
dec
inc
sbbl
adc
cs
cmpsl
pop
imul
pop
lret
sbb
pop
push
std
inc
in
cmp
mov
or
fnsave
gs
or
adc
fcoms
jbe
pusha
stos
or
decl
mov
jecxz
dec
sbb
jg
leave
lods
pop
cs
lods
push
insl
mov
mov
lret
in
mov
mov
mov
mov
pop
cs
jb
gs
dec
das
mov
mov
mov
fxch
in
fsts
rcl
js
shlb
insb
aam
scas
imul
fsub
dec
test
mov
gs
pop
in
push
out
lds
inc
call
shll
jo
imul
je
rol
mov
ss
or
ret
les
cmpsb
imul
mov
lret
cmp
int3
hlt
xchg
push
xchg
xchg
push
cwtl
cltd
lcall
xor
sahf
mov
insl
mov
mov
pop
cmpsl
test
push
test
shll
stc
loopne
mov
mov
push
or
or
inc
popf
pusha
fmull
pop
sub
jb
adc
ret
xor
inc
sahf
sbb
int3
dec
jb
fsubr
lods
add
loopne
idivb
gs
dec
mov
jne
dec
lret
mov
mov
dec
rcrb
adc
xchg
hlt
adc
jnp
adc
test
stos
cmpl
jg
lea
xor
clc
sub
push
inc
jge
sti
ljmp
pop
xor
mov
int3
push
add
loopne
xchg
add
cli
out
pushf
in
lret
pop
cli
inc
ret
sbb
daa
dec
inc
lds
inc
mov
aaa
sbb
dec
pop
insb
xor
and
add
mov
adc
cmp
aas
mov
nop
mov
je
repnz
sti
gs
push
dec
xchg
push
pop
add
in
jmp
adc
ss
sbbl
add
daa
jecxz
jmp
add
mov
inc
test
jb
fadds
adc
xchg
add
jnp
inc
ret
pusha
or
jle
mulb
daa
lock
mov
inc
mov
mov
enter
sbb
insb
fsts
insl
mov
cmpsl
xor
fadd
xchg
sub
push
pop
sbbb
popa
jbe
test
fbstp
fcoms
add
mov
sub
je
mov
xlat
pop
push
call
jo
add
lock
xor
sub
je
push
int
jne
inc
stc
test
dec
inc
push
ljmp
popf
in
cmp
fs
jne
loop
shll
adc
dec
cltd
ljmp
pusha
nop
push
inc
and
inc
imul
add
and
andb
test
mov
and
or
cmpl
movl
mov
jmp
imul
pusha
adc
ja
pop
testb
std
addb
lahf
mov
jo
outsl
inc
xchg
and
insb
xchg
push
lea
lods
outsb
cmp
cmp
cld
mov
mov
bound
aaa
cli
push
cmp
push
cmp
push
jne
pop
inc
mov
cmp
fsubrs
inc
push
pushf
cld
popa
xorb
add
ret
xor
add
push
adc
add
adc
or
adc
push
fistpl
inc
sub
lods
std
pusha
and
xlat
jmp
push
add
scas
and
add
ret
xchg
cld
call
clc
pop
jp
in
andl
call
icebp
jbe
fcmovnu
sub
inc
repnz
loopne
arpl
sbb
pop
ret
mov
xchg
add
and
fisubs
ret
or
test
push
int3
dec
dec
adc
iret
imul
xor
push
dec
push
imul
fsubs
ja
fildl
shll
cmpsb
fbstp
imul
sbb
cli
sti
cld
xor
insl
mov
mov
ss
roll
mov
mov
imul
shll
xor
push
outsb
fs
in
mov
pop
enter
fdivl
mov
lret
in
out
mov
mov
jmp
jmp
inc
jb
icebp
or
xchg
mov
ror
cmp
push
ja
sbbl
adcb
push
sbb
enter
cld
mov
ret
push
xor
mov
adc
pop
push
hlt
or
lret
add
xor
movb
in
xor
mov
add
jmp
fldcw
out
inc
adcl
lret
cmp
xor
push
jb
outsb
je
in
shll
outsb
fs
xchg
lret
out
ja
jne
bnd
shll
add
cs
insb
adcb
aam
or
mov
jge
push
add
sbb
mov
ss
mov
mov
loopne
jb
andb
sbb
push
int3
lret
loope
xor
push
int3
and
idiv
mov
add
loopne
insb
add
popa
jl
cmp
fs
xor
das
sub
inc
in
loopne
and
in
add
jo
sbb
hlt
aam
mov
dec
fsubr
in
test
xchg
xchg
clc
lock
jge
cmp
and
sbb
ficoms
fwait
xlat
xchg
xchg
repnz
je
popa
clc
inc
in
in
cmp
lods
sbb
test
inc
sub
mov
iret
push
pop
push
adc
dec
in
push
or
or
and
jne
xor
mov
out
sub
and
and
mov
scas
xor
es
pop
xor
push
xchg
mov
sub
pop
shll
mov
mov
ss
shll
mov
lcall
jo
insl
shll
ret
mov
addr16
shrl
lret
int3
int
lcall
iret
rcl
shrb
scas
imul
aam
aad
xlat
aaa
mov
mov
insb
mov
fnstsw
jae
data16
xor
out
mov
lcall
jmp
cmpsb
arpl
jne
in
sbb
out
fs
cmpsb
jmp
outsb
repnz
lcall
rolb
mov
divb
sub
mov
sbb
sub
pop
and
push
aaa
fwait
scas
push
aad
cld
or
mov
loopne
and
clc
adc
inc
cmp
lods
fcoml
adc
or
mov
pushf
xor
fcompl
cmp
jno
out
loop
cmp
pop
call
scas
cmp
mov
add
inc
sbb
jno
mov
aam
into
and
mov
add
jnp
call
pushf
pusha
clc
stc
mov
xor
pusha
or
cmp
aaa
mov
add
mov
sahf
cmp
mov
cmp
sub
push
popf
add
call
mov
fstps
mov
rep
das
jmp
jge
and
add
or
and
bound
pop
sbb
icebp
cmp
add
pop
sbb
adc
xchg
pop
mov
jecxz
and
cmp
jno
js
xchg
jbe
jge
jg
jg
ds
movsbw
add
rcrb
je
pop
outsb
xor
outsl
adc
sbb
xor
push
cld
lods
and
dec
call
cmp
jb
adc
scas
push
sbb
les
decl
sbb
and
ret
cmp
sbb
add
in
es
inc
mov
sub
push
or
sahf
jo
or
or
push
pop
push
xor
jno
cwtl
je
sub
cmp
fs
mov
mov
adc
mov
sbb
mov
or
push
push
movsl
stc
mov
push
idiv
mov
cld
std
mov
pop
sub
call
negl
loop
pushf
pop
and
test
mov
inc
loope
dec
pushf
mov
mov
test
push
pushf
shrb
das
scas
add
adc
xor
sar
es
cmp
cmpsb
and
lds
aad
mov
push
vmulpd
jge
inc
aas
call
pop
shr
sbb
mov
lods
sahf
fwait
test
sti
lcall
pushf
lea
mov
push
pushf
pushf
mov
std
outsb
inc
jl
dec
or
inc
jmp
lock
repnz
loope
rorl
pop
pop
lret
movsl
rorb
leave
fwait
cld
dec
inc
shll
mov
aam
popa
gs
or
mov
or
mov
test
test
test
test
cwtl
call
shll
xchg
imul
push
and
push
repz
lea
pushf
popf
push
call
cld
bswap
ror
cltd
popa
mov
rclb
outsb
in
ja
test
sbb
mov
lret
jmp
sbb
shlb
and
std
mov
ret
loope
cmp
pusha
jmp
inc
test
lahf
pushf
ss
mov
pushf
sub
inc
inc
lcall
pop
mov
shrl
testl
iret
pop
pushf
stc
call
pushl
setp
mov
mov
xor
sub
shl
not
and
lea
idiv
fcmovnbe
rcll
push
sbb
mov
scas
xchg
outsl
mov
push
push
mov
ss
and
adc
rolb
sub
lret
jb
or
std
cld
test
lret
fmull
cwtl
cld
dec
aas
adc
and
hlt
add
mov
js
lea
lods
outsl
iret
je
ds
ds
mov
pop
lahf
and
sub
cli
frstor
and
xor
call
cmp
ss
call
test
call
cld
pop
jbe
dec
shl
sti
sub
sti
fldenv
cwtl
imull
fidivrs
aad
jl
cmc
push
jp
sub
push
push
or
adc
mov
cmp
xchg
push
in
and
adc
mov
adc
and
adc
push
rolb
ss
sbb
call
out
add
sub
dec
xchg
in
inc
jg
cld
add
cmp
dec
mov
sbb
inc
pop
lock
lea
mov
xlat
ret
jmp
jno
repz
cmp
or
pop
mov
iret
scas
gs
movsb
adc
jg
pusha
add
xchg
call
repz
sbb
push
ljmp
imul
ljmp
mov
stc
or
sub
push
mov
xor
cmp
imul
out
pop
xlat
sbb
outsl
pop
cmp
je
push
or
push
push
pop
pop
mov
dec
mov
add
dec
fwait
or
pop
fdivrs
fidivs
dec
push
arpl
cmp
je
call
xlat
and
cltd
or
testb
mov
pop
push
je
int
mov
loop
mov
xor
or
lds
adc
sub
push
femms
cmp
les
or
add
les
pushf
loope
jmp
clc
mov
enter
cli
mov
lret
aam
fsub
call
pop
mov
icebp
dec
inc
rol
int3
dec
sbb
xchg
or
sbb
aad
out
test
mov
push
icebp
push
adc
insb
stos
outsb
xor
adc
adc
lea
adc
mov
fcmovne
in
pop
mov
dec
inc
push
hlt
adc
jl
inc
mov
sar
inc
dec
pop
mov
in
or
push
jnp
mov
testb
mov
loope
call
das
inc
hlt
cmp
inc
jo
and
mov
pop
jmp
add
push
mov
add
xor
les
jmp
rclb
push
ret
adc
hlt
stos
adc
pusha
dec
push
clc
or
pop
lea
js
lock
push
xor
push
lret
mov
sbb
push
dec
dec
dec
dec
sub
mov
inc
push
cs
fs
xorb
xchg
and
jne
mov
fs
insb
mov
pushf
cmp
outsb
lcall
mov
int
jmp
mov
cmpsb
pop
cmpsl
jbe
jb
push
gs
lods
cmpsb
imul
imul
cmpsb
imul
fnstenv
roll
aam
mov
mov
popa
fs
xlat
mov
es
js
shll
dec
xchg
xchg
xchg
xchg
xchg
push
mov
ss
inc
push
cwtl
js
lcall
je
inc
cmpsb
jmp
cs
fnstsw
cmp
inc
loop
scas
imul
cmpsb
imul
lret
xlat
xor
mov
lcall
inc
mov
negb
shlb
mov
sbb
sbb
or
mov
fsubr
sbb
hlt
mov
mov
push
adc
clc
add
jg
test
adc
inc
out
cld
aas
xor
pop
rcll
cmpsl
adc
mov
pop
call
lods
xor
inc
xchg
pop
repz
xor
sub
loope
push
mov
ljmp
push
pop
dec
xchg
gs
jp
or
sahf
in
je
push
push
add
mov
sbbb
rcll
mov
sti
je
sub
dec
mov
or
jnp
pusha
sbb
sbb
ja
push
mov
xchg
sub
add
sahf
enter
pop
out
data16
test
incb
enter
lock
leave
sub
inc
or
sbb
out
out
adcb
lsl
mov
repz
mov
dec
or
xchg
loop
jbe
or
in
pop
call
cld
out
lret
daa
inc
out
push
fildl
sub
sbb
or
pop
push
or
mov
jp
or
sahf
movsl
and
sbb
push
icebp
lock
adc
hlt
add
jno
rcr
cmp
cmp
xor
cmc
push
hlt
out
insl
jmp
mov
pop
jae
je
cwtl
jo
testb
aad
sub
mov
xor
lock
incl
dec
std
clc
push
popa
mov
xor
pushf
xor
jmp
jle
add
fisubs
inc
and
pop
jae
cmp
xor
fldcw
popf
push
jg
sbb
hlt
or
call
mov
call
mov
pushl
pop
cmpsb
xor
aas
push
lcall
je
xor
imul
xor
je
outsl
jae
jne
push
shll
movsb
cs
or
pop
adc
loop
sbb
pop
inc
ss
pop
cmpsl
pop
xchg
cli
sub
cmp
pop
jb
adc
push
out
jno
movsl
std
mov
mov
js
fcomps
incl
test
pop
aam
mov
or
add
je
xchg
lret
lret
xchg
cltd
stos
and
or
orl
adc
xor
mov
add
sbb
lret
lret
lret
lret
je
or
jle
adc
xchg
data16
cmp
call
and
or
repz
push
jmp
aas
lock
cmp
sahf
out
sbb
in
in
je
loope
add
call
aam
addr16
pop
xchg
in
popa
je
outsl
outsb
gs
insb
xor
mov
imull
clc
stc
dec
and
cli
sti
cld
xor
push
roll
inc
mov
cld
shrl
scas
push
arpl
cmp
push
sub
or
out
add
and
sub
fsubl
push
jl
cmp
cli
or
lock
mov
xchg
in
push
lret
pop
push
pop
push
das
repnz
mov
cmp
add
mov
sahf
ljmp
faddl
pop
or
mov
mov
adc
sub
mov
pop
push
cli
adc
sub
push
mov
arpl
or
add
pop
jmp
sbb
shlb
fwait
adc
movb
pop
jb
cmp
push
ja
fdivrl
xchg
call
add
cmp
push
sub
or
push
pop
add
enter
popa
push
imul
lods
shlb
popa
imul
xchg
imul
insb
into
mov
pushf
sub
mov
imul
mov
arpl
je
mov
lret
imul
test
pop
rcrb
cmp
arpl
cmp
fs
loopne
loope
shll
loop
jecxz
in
out
add
xor
pop
pop
add
sbb
shll
jp
pop
mov
dec
outsb
stos
jo
ss
or
int3
jmp
inc
push
in
or
jmp
mov
xchg
andb
sbb
add
pop
xor
mov
mov
inc
jb
andl
pop
fdivrl
cwtl
push
in
dec
lcall
cmc
inc
push
jl
test
add
pop
mov
fsubl
orl
sbb
shlb
jb
clc
ret
lcall
mulb
negl
cmp
outsl
push
addr16
push
or
mov
dec
repnz
enter
sub
mov
xlat
or
xchg
out
enter
fcoml
sbb
cltd
je
mov
jge
mov
je
and
sbb
mov
or
and
incl
lods
sbb
jmp
loop
mov
dec
xor
mov
mov
mov
mov
pusha
mov
jl
leave
call
popa
dec
adcl
inc
or
jl,pn
icebp
jmp
aas
fwait
popa
ret
call
push
sbb
push
push
adc
pop
ss
add
xchg
fnstcw
push
sbb
cmpsb
dec
jb
jle
clc
ljmpw
fisubs
dec
xchg
and
inc
loope
cmp
cmpsb
leave
loopne
sub
aas
ja
cmp
push
arpl
mov
cmp
adc
gs
insl
bound
inc
cmp
fxch
cs
push
jo
push
xor
out
cmc
sbb
cmp
pushf
mov
std
in
fisubs
cld
in
mov
pop
subb
dec
shll
imul
arpl
add
push
lods
hlt
ljmp
rol
shl
pushf
xchg
mov
pop
mov
sbb
mov
outsb
or
inc
dec
and
inc
cmp
jb
inc
sbbl
andb
icebp
frstor
add
subb
lea
movsb
dec
adc
pop
xchg
test
ja
xor
sub
xchg
xor
fsub
fs
push
arpl
jb
imul
subb
jne
int
sahf
pop
test
mov
mov
sub
dec
je
jmp
add
push
loopne
xor
xor
ficomps
xor
cld
test
mov
xor
sbb
cmpb
insb
dec
and
add
cmp
add
sub
cmp
cmp
outsl
sub
cmpsl
xor
bound
adc
cmp
add
mov
mov
into
orl
pop
nop
loope
mov
jne
push
push
push
inc
sub
and
or
jo
pop
push
push
inc
es
call
inc
jno
pop
xchg
mov
xchg
add
shlb
and
xor
cmp
loopne
rolb
or
loopne
pop
inc
outsl
sbb
outsb
add
pop
push
rolb
add
and
call
clc
add
add
push
push
lcall
jo
insb
imul
add
pop
inc
fs
xchg
gs
fs
imul
dec
add
movsl
dec
scas
push
js
int
pop
and
je
clc
xor
mov
cltd
xlat
pop
cwtl
xchg
or
enter
xchg
pop
mov
mov
pop
mov
dec
push
dec
inc
xchg
push
xchg
sbb
and
jnp
and
or
sbb
insb
add
shlb
je
imul
xor
fs
hlt
xor
or
outsl
bound
dec
or
outsl
push
xchg
push
mov
test
mov
cmp
insb
fcoms
mov
xlat
push
test
hlt
test
or
dec
jle
mov
out
cs
inc
xor
mov
adc
inc
lods
push
fidivs
push
mov
mov
ret
je
je
les
adc
jo
enter
outsb
insl
mov
ret
inc
sub
cmp
jo
inc
sbb
in
ljmp
pop
enter
pop
mov
push
push
jno
push
stos
aaa
jns
push
imul
cmpsb
imul
inc
lcall
sub
popa
jb
inc
push
mov
call
and
sbbl
jb
and
cld
in
cmpsb
imul
cmpsb
imul
cmpsb
imul
lcall
xchg
cld
fisubrs
out
int
and
push
dec
shll
imul
in
xor
int3
mov
push
jbe
int3
push
mov
lret
je
cmp
das
xor
lret
mov
pop
xor
shlw
inc
push
jb
mov
dec
bound
jae
shll
arpl
shll
xor
xor
shll
das
imul
and
jne
jno
lret
mov
dec
push
je
push
cs
subb
jae
call
inc
and
cmpsb
jmp
sti
cld
rol
xor
xor
cmp
enter
daa
cwtl
sub
in
cmpsb
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
cmpsb
imul
imul
dec
addr16
les
sub
pop
nop
add
cs
sbb
sbb
cmp
dec
sbb
lds
arpl
adc
pop
sarl
scas
insl
addb
or
inc
cld
lds
into
call
psrad
shrl
cmp
call
add
mov
scas
mov
sub
imul
repnz
and
data16
cs
add
push
sbb
mov
fisubrl
push
call
pop
xor
or
xchg
or
jbe
lea
inc
out
add
fisttpll
lock
hlt
cmp
push
mov
xlat
dec
adc
pop
sbb
add
jge
mov
push
xchg
xchg
mov
or
mov
mov
cvtps2pi
mov
je
add
lret
mov
or
call
pop
fucom
dec
cmpl
inc
das
add
pop
stos
push
sub
xor
stos
mov
andb
cmpsb
mov
cld
adc
ficompl
jle
shll
sbb
add
push
push
fisubrs
jge
cli
add
pop
push
push
inc
ficompl
pinsrw
sti
loope
xchg
insl
mov
xchg
mov
mov
sub
push
mov
insb
xor
adc
mov
sub
testl
xchg
enter
sti
cld
sbb
xchg
int3
mov
mov
pop
mov
mov
out
sbb
insl
xchg
inc
ret
ljmp
sbb
dec
xchg
test
mov
or
xchg
daa
orl
sti
push
push
cwtl
andl
popa
inc
pop
sub
insb
push
inc
lds
push
pop
ret
pop
cmpxchg
xchg
addr16
addl
cmp
adc
jne
ja
aas
push
setnp
ds
mov
jle
push
mov
or
sub
inc
push
and
xor
pop
push
fadd
ds
dec
andb
push
insb
xor
mov
xchg
fstl
xor
ret
mov
and
or
add
pusha
call
jno
cmp
push
mov
rorb
pop
or
loop
or
pusha
shll
push
dec
push
sub
lcall
mov
aaa
add
inc
mov
and
sbb
mov
into
in
cmp
add
cli
inc
inc
ss
add
xor
pop
xor
adc
add
fildl
inc
xor
adcb
sti
fs
cmp
mov
push
ljmp
nop
or
mov
xchg
mov
inc
pushf
xchg
jge
lea
cmp
shl
mov
mov
dec
ret
bound
jg
sub
mov
mov
cld
lahf
stc
or
jge
pushf
pushl
pushl
imul
popf
adc
fdivr
fcmovnb
cmp
push
cmpsb
cmc
in
fbld
loopne
lret
lock
mov
ja
inc
sub
lock
cmc
adc
ret
jmp
cmp
adc
sub
mov
ds
mov
ret
jbe
stos
xor
fdivrs
or
pop
jns
insb
push
push
call
aas
sbb
call
jo
and
pop
shrb
adc
pop
jne
stos
pop
pop
and
pop
pusha
cmp
and
xchg
lock
inc
push
push
jo
jl
add
and
adc
sbb
push
pop
sbbb
dec
and
adc
dec
push
mov
cltd
push
pop
popl
cmp
lret
rorl
gs
add
inc
add
test
shrb
cmpb
icebp
push
jp
fwait
pop
jne
mov
add
jo
aam
cmp
ret
cmp
jne
push
movsb
xchg
lock
push
mov
push
lea
scas
shrb
notl
sbb
xlat
adc
and
adc
sub
movb
push
sbb
or
sbb
mov
mov
mov
add
dec
cld
sub
imul
cs
push
popa
testl
mov
test
je
into
fistl
push
add
adc
xor
or
neg
dec
add
mov
cmp
jl
add
jbe
hlt
inc
jg
das
or
or
jl
cli
aaa
jg
inc
inc
mov
je
mov
fidivrs
pusha
push
sarl
push
push
or
push
fidivl
mov
adc
mov
sbb
and
adc
loopne
add
scas
and
mov
int3
andb
aad
jo
iret
mov
sbb
sub
ljmp
ficoms
xlat
sahf
mov
in
out
pop
pop
test
push
loope
mov
cmpl
xor
sub
inc
xor
inc
mov
lret
mov
outsl
pop
dec
outsb
xor
pusha
je
or
popa
shll
sub
xor
xchg
dec
sub
mov
dec
imul
popa
outsl
pop
inc
dec
shll
popa
je
dec
shll
lcall
imul
outsl
pop
push
jmp
cmc
movsl
divb
idiv
xchg
stc
mov
sti
cld
mov
pop
xchg
gs
dec
bound
pop
xchg
stos
outsl
and
xchg
gs
xchg
push
push
add
pop
orl
insb
jmp
mov
pushw
mov
mov
push
push
xor
leave
xor
ss
and
mov
xor
jne
call
jmp
lret
lret
ljmp
fiadds
lock
dec
shll
sub
sarl
pop
cmp
stos
mov
inc
inc
jnp
adc
rcl
int
pop
into
mov
shlb
fnstsw
xor
in
mov
je
std
test
adc
sbb
cmp
lea
rolb
adc
jb
testl
mov
pusha
subb
movsb
test
push
cmp
dec
jge
mov
sub
jns
dec
fildl
mov
outsl
and
push
mov
mov
mov
dec
adc
out
add
icebp
pop
mov
push
push
div
lcall
lea
add
xor
push
mov
or
push
mov
add
les
add
and
cmpsb
xor
mov
inc
insl
sbb
fldcw
mov
push
aam
or
sub
add
add
inc
sbb
add
arpl
jl
int3
lds
rorb
push
stos
ljmp
into
enter
adc
aaa
sub
add
cmpl
xor
add
mov
call
jne
sbb
inc
cmp
cmp
sbb
ljmp
js
add
or
cmpl
mov
inc
adc
mov
push
fdivrl
stc
fs
add
mov
mov
add
push
inc
inc
cmp
sbb
push
add
mov
sub
lcall
ret
or
bound
sbbb
ret
add
jmp
fst
pushl
xor
adc
jne
mov
sub
stos
push
jp
mov
fdivrl
mov
mov
lods
cmpl
pusha
lea
shr
jg
outsl
movzwl
mov
jne
daa
add
ljmp
shlb
cli
add
lods
adc
mov
mov
inc
lar
data16
lock
insl
das
popf
sub
sub
lods
inc
mov
add
or
fimull
lea
out
adc
mov
addl
pop
cld
jl
or
add
jbe
lea
sbb
cmp
mov
adc
add
shrl
fcomps
ret
mov
push
sbb
mov
adc
iret
jb
jle
add
je
and
mov
lods
adc
add
push
scas
clc
dec
sub
and
sub
mov
inc
push
mov
adc
and
mov
xor
jle
push
mov
sbb
in
std
and
jbe
sbb
pushl
lcall
lret
or
adc
push
orl
adc
sub
push
faddl
or
push
popa
fsubs
jnp
xor
ss
ret
dec
out
aaa
iret
or
inc
testb
je
test
outsb
pop
inc
sub
or
and
scas
movsl
xor
push
mov
sti
mov
gs
ret
sbb
data16
fstl
push
xchg
mov
mov
adcb
add
scas
mov
push
sub
push
outsl
xlat
mov
or
or
icebp
mov
cwtl
adc
sub
pushf
sub
lret
gs
outsl
gs
sbb
gs
shll
fs
insb
push
shll
xor
iret
cs
add
inc
push
aad
sub
add
pop
lock
loopne
aad
add
or
pop
rcrb
inc
inc
mov
scas
out
or
push
mov
or
clc
cld
jne
mov
xchg
push
jno
mov
ds
lret
cmp
mov
lret
add
inc
sub
xchg
pop
mov
pop
cmp
leave
mov
xchg
or
cwtl
pop
xor
popa
xchg
add
xchg
cmpsl
loopne
lahf
mov
and
in
mov
lea
les
scas
dec
push
cmp
pop
ja
jno
clc
stos
push
sbb
cwtl
lods
mov
push
cmp
hlt
adc
je
mov
enter
sub
lods
mov
sbb
or
dec
sbb
mov
test
or
sub
or
lcall
outsb
fadds
push
and
add
imul
scas
or
cmpl
bound
push
fsubrl
mov
loop
dec
pushf
sub
call
mov
jg
pop
call
fdivrs
ss
sub
cmp
iret
push
ss
mov
add
add
fisttpll
mov
push
jle
mov
dec
mov
sbbb
mov
sarb
push
sahf
stos
adc
mov
jl
inc
pop
xlat
or
cmp
jnp
push
adc
xchg
flds
int3
push
xor
push
fidivl
and
aad
and
fwait
mov
cmp
inc
sarl
mov
int
or
jne
sub
sub
adc
mov
jns
inc
mov
push
arpl
in
jnp
dec
push
push
imul
jmp
inc
sbbb
or
jo
pop
xchg
fcmovne
lret
xchg
pop
loopne
jae
std
rorb
in
jne
jae
out
popf
in
ds
pop
push
and
lret
jb
gs
xor
mov
xor
sub
jb
jns
js
stos
mov
fwait
test
push
sbb
cld
mov
test
xor
and
mov
pusha
mov
cmp
mov
push
mov
inc
or
and
outsb
rcrb
hlt
push
adc
daa
test
mov
push
sub
fcomp
add
call
xchg
sub
and
xor
ret
jno
push
mov
rcl
xchg
hlt
add
inc
xor
jnp
loop
or
scas
in
loopne
and
and
sbb
add
sahf
push
adc
mov
gs
insb
outsl
lret
mov
lret
jb
jb
gs
mov
xor
ud2
inc
sbb
xchg
mov
cmc
jmp
adc
push
cwtl
xor
inc
cwtl
pop
inc
testb
xor
and
mov
push
push
mov
jo
out
mov
out
jp
insb
std
jns
push
pop
jecxz,pt
imul
sbb
or
movsb
sub
dec
push
gs
cli
inc
sarb
mov
xorb
cltd
mov
lock
adc
aas
rcrb
movsb
lcall
xlat
xchg
pop
inc
in
and
push
inc
addb
pop
push
jne
dec
sbb
push
xchg
andl
cmp
or
jl
sbb
adc
push
pop
sub
lock
cmp
inc
int3
add
mov
inc
dec
xor
stc
adc
bnd
das
rcrb
sbb
sbb
add
sbb
sbb
loopne
mov
push
mov
lods
and
xor
sub
imul
jl
cmp
push
scas
adc
xchg
cmpsl
sbb
fsubrs
xor
test
mov
xlat
sbb
mov
dec
lods
imul
adc
xor
dec
inc
add
call
pop
jne
jb
outsb
je
jb
arpl
jae
mov
idiv
lcall
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
fcmovnu
incl
je
popa
insb
and
mov
pusha
cmp
ss
adc
pop
inc
insb
out
xchg
inc
fs
pop
cmpb
dec
imul
popa
jb
inc
push
add
inc
inc
add
je
gs
jne
in
mov
cmovbe
outsl
arpl
mov
inc
notb
jp
push
stos
adc
fdivrs
dec
jge
dec
outsl
fs
adc
insl
adc
outsb
mov
add
notl
xchg
add
fs
push
and
sbb
jns
add
or
pop
dec
push
and
add
inc
push
mov
inc
sub
adc
aam
jmp
pop
popa
imul
outsb
lahf
outsb
and
push
push
mov
pop
notl
insl
outsl
pop
push
sub
add
dec
sbb
push
andb
xchg
rcl
fldt
push
push
jo
inc
push
pop
popa
in
jmp
cmp
insb
mov
ret
lret
pusha
insl
push
pop
or
push
add
gs
aaa
sub
test
sub
jge
fwait
sbb
gs
outsl
imul
mov
xrelease
jns
mov
addr16
out
cmp
in
xor
int3
popf
add
jns
popa
cmp
fucomip
imul
cmp
jbe
jnp
testl
pop
aad
add
cmp
lods
insl
pop
pop
add
sbb
adc
pop
sbb
jae
fisttpll
jae
insl
fwait
xorw
push
out
sbb
mov
add
add
arpl
push
inc
mov
outsb
push
inc
cld
cmpl
inc
dec
inc
push
dec
inc
or
lods
add
jo
je
aaa
push
movsl
imul
jecxz
push
outsl
ja
mov
movsl
imulb
mov
rcrl
dec
gs
fs
mov
adc
inc
fstpl
std
inc
pop
pop
and
ss
xchg
add
push
shll
jl
mov
fiadds
fidivrs
lret
aad
mov
push
push
push
mov
es
fwait
jno
cmp
push
insl
mov
adc
inc
in
inc
outsl
sbb
add
je
cmp
int3
and
jb
out
dec
fsts
and
sbb
mov
pop
sub
lcall
and
cmpl
dec
mov
add
xchg
fisubrl
mov
imul
sbb
sub
xchg
in
jo
movsb
jne
add
popa
xor
inc
inc
push
inc
push
pop
adc
ret
push
sbbl
ja
inc
mov
popa
fldenv
into
pop
lods
sbb
xor
mov
clc
pushf
or
insb
push
xor
pop
add
pop
out
fistpl
insl
jmp
dec
in
dec
lret
xchg
popa
adc
pop
or
mov
add
adc
jns
pop
mov
insl
pop
or
outsb
lea
cmp
mov
and
xor
inc
pop
push
add
dec
loope
jae
fcmovnbe
cltd
outsb
nopl
sbb
xchg
ja
jge
int
xor
mov
jnp
out
mov
dec
out
mov
idivl
sub
or
mov
add
scas
outsl
add
lret
xor
mov
sub
ret
add
add
mov
dec
in
cwtl
mov
cmp
push
imul
outsl
pusha
scas
xchg
add
mov
pop
add
ja
mov
push
push
add
pop
int3
rol
sub
xor
pop
test
and
jbe
repz
mov
inc
sub
ret
cld
inc
jle
inc
dec
push
dec
sub
xchg
pop
je
fisttps
cmove
adc
stos
add
ljmp
xchg
out
enter
pop
lock
adc
dec
push
mov
mov
lea
shl
adc
jl
shr
push
push
stc
or
push
call
pop
dec
add
sbb
jne
mov
push
add
adc
and
sbb
add
popa
xchg
pop
inc
pop
jl
dec
out
mov
inc
popa
jb
dec
cmp
add
dec
dec
dec
adc
jg
xor
fmull
pop
dec
nop
cmp
and
sbb
ljmp
jl
inc
xchg
stos
imull
sbb
sub
aaa
adc
lds
int
pop
mov
dec
clc
pushf
xor
push
sbb
mov
das
cwtl
push
ret
jbe
incl
int3
pop
imul
dec
daa
add
shr
in
ljmp
mov
ficoml
xchg
jne
rcrl
loopne
movsl
or
or
push
ret
mov
cmp
mov
pop
or
decl
insl
shl
push
pop
or
data16
mov
xor
fldt
out
dec
jns
jns
out
sbb
out
push
push
inc
dec
xchg
push
cltd
mov
mov
jns
int
jp
ss
ljmp
xor
stc
mov
xor
push
das
test
loop
aam
aaa
xchg
adc
xchg
adc
inc
lcall
add
pop
and
cmpsb
cmpsb
push
and
and
push
in
pop
add
pusha
mov
and
mov
jno
in
pop
push
aas
rol
rcl
mov
cmc
mov
call
inc
hlt
testl
and
jno
outsl
mov
push
mov
push
sub
rcll
testl
mov
call
aad
out
jle
popf
shrd
jmp
fsubl
clc
jne
push
inc
jmp
push
xchg
push
mov
and
mov
out
cmp
pop
xor
callw
insb
adc
push
and
mov
mov
sbb
mov
mov
sti
das
add
pop
inc
jmp
push
rdtsc
inc
enter
in
mov
lret
add
xor
jl
leave
jne
test
mov
loopne
add
dec
dec
lea
test
mov
fimuls
or
jae
call
in
lret
push
and
adcb
mov
ret
std
aaa
stos
in
test
mov
test
test
push
mov
enter
in
out
out
mov
jmp
out
jg
push
push
popa
dec
jmp
or
decb
mov
sar
sbb
roll
out
div
rorb
lret
jbe
sarl
ret
push
ror
xor
sub
ljmp
cli
or
out
sub
push
mov
sub
addr16
mov
enter
add
inc
mov
mov
aad
inc
out
out
out
int3
push
fdivrl
std
push
and
popa
jmp
xchg
shl
mov
pushf
xchg
mov
call
pop
loope
cmpb
shll
psubw
into
rcr
fisttpl
push
rorb
lcall
add
rol
xor
inc
or
out
pop
pop
clc
call
push
add
pop
fcmovnu
push
gs
das
add
mov
call
lock
or
inc
and
sarl
enter
jmp
pop
or
shlb
add
outsb
std
mov
push
xor
gs
dec
int3
ljmp
or
pop
cmc
cbtw
cmc
outsb
jns
pushf
clc
cmc
sub
call
rcrb
neg
neg
push
cmc
push
pop
push
pop
and
pop
mov
sub
push
fisttpll
mov
shl
inc
cmp
cs
cli
add
xchg
ret
jle
inc
jmp
loop
jle
rol
xor
xchg
fdivrl
outsl
sbb
rorb
mov
inc
ret
cmpsb
rcrl
push
bound
aam
addb
pop
or
or
mov
mov
jne
sbb
push
popf
push
call
push
mov
cmpsl
mov
push
test
adc
cwtl
pushf
cmp
lods
jg
sti
dec
pop
or
xadd
stc
imul
inc
scas
or
fisubrs
test
clc
mov
shl
cld
lods
sti
mov
push
mov
mov
bswap
jmp
clc
pop
add
std
mov
loopne
add
push
or
aaa
push
xchg
sbb
jge
call
shlb
pushl
push
cmp
add
push
pusha
push
cld
pusha
sub
rol
and
or
cltd
add
jg
and
subb
dec
add
cs
clc
and
stc
adc
or
int
add
ret
test
push
jl
push
xorb
mov
out
and
hlt
sub
mov
pusha
jmp
stc
jmp
push
xbegin
icebp
lahf
jae
jle
push
sbb
neg
pcmpeqd
mov
pushf
and
loopne
jmp
xchg
add
lret
mov
in
clc
or
aad
sub
nop
in
lods
shrb
mov
push
push
cmp
and
xchg
int3
push
icebp
scas
aaa
in
cmp
pop
popa
shrd
sbb
arpl
cld
fcomps
adc
loopne
push
iret
cmc
or
jmp
dec
out
outsl
sbb
add
cs
push
sbb
dec
out
jmp
sub
ja
call
dec
add
aas
jbe
push
push
pop
inc
pop
jmp
stc
orb
dec
aam
arpl
mov
ret
fstl
jmp
push
mov
xlat
jne
adc
mov
aaa
out
push
arpl
call
aad
loope
xchg
mov
stc
cmp
call
pop
pop
ja
shl
mov
lock
dec
pop
ds
sub
aam
shl
push
push
push
sub
dec
add
mov
pop
aad
rol
in
push
imul
sbb
pusha
push
lea
jl
je
pop
movsl
sbb
lret
ss
adc
pop
and
sub
push
int3
fiaddl
push
jmp
cltd
sti
push
and
or
fs
cmp
push
pusha
mov
clc
xchg
jge
shr
call
shlb
lock
jmp
add
xor
jns
or
mov
out
mov
xor
call
rclb
testl
push
pushf
inc
cmp
out
mov
push
mov
push
inc
sbb
lea
popa
cmc
jmp
cmp
push
push
stc
popfw
pushf
sub
call
cmpsl
pushf
aaa
insb
std
jg
push
lea
mov
pop
inc
divl
xor
sbb
mov
insl
xor
push
xor
cmp
mov
or
add
outsb
xor
in
pusha
sub
pop
xchg
mov
rorb
scas
not
mov
shlb
cmp
jecxz
mov
pusha
mov
jmp
jae,pn
push
or
or
lahf
movsl
jmp
xor
mov
pop
inc
jmp
push
es
jo
xchg
cmp
je
jne
test
mov
push
jmp
fcomi
jp
popa
cmpsb
and
int3
lahf
sti
add
or
decl
jp
test
fwait
iret
and
cmp
mov
mov
push
mov
ffree
aam
int
stc
push
add
iret
add
cmpsl
sbb
add
dec
fwait
stc
cli
cmp
xchg
add
pop
push
clc
mov
mov
stc
xchg
jmp
push
or
mov
push
cmp
cmp
mov
pop
lahf
pop
mov
xchg
out
pop
data16
or
xchg
stos
jmp
fsubl
sbb
mov
in
dec
pop
std
mov
sar
pop
sub
pop
or
pop
pop
mov
mov
or
add
lcall
fcmovbe
std
mov
int
adc
xor
dec
or
clc
or
or
adcl
mov
dec
mov
push
jbe
sti
xor
clc
cmp
pcmpgtd
add
add
lret
je
movsb
cmp
xchg
mov
add
push
or
aas
mov
inc
jmp
test
aas
mov
cmc
pusha
insl
imul
mov
push
outsb
inc
and
mov
push
sbb
scas
or
push
es
out
or
pop
out
nop
cs
in
mov
shrl
sarb
popf
aam
pop
add
push
insb
clc
not
leave
call
or
sbb
leave
call
jmp
lea
push
add
roll
stc
pop
sbb
popa
sti
outsb
cmp
ja
loop
xchg
push
mov
fmuls
stos
sub
push
negl
shlb
negl
pop
pop
xor
movsl
adc
pusha
in
cmp
notb
test
xchg
cwtl
call
clc
xchg
sti
cmp
test
aaa
leave
stc
subl
adc
sub
jecxz
xchg
jnp
pop
mov
call
push
ss
jge
hlt
xor
out
push
bound
jmp
pop
fwait
arpl
scas
notl
or
mov
cmp
movsb
lcall
mov
pop
sub
std
fistps
dec
inc
inc
jl
add
mov
inc
push
adc
jb
or
sbb
mov
sub
add
xor
fdivrl
push
in
out
insb
ja
and
ljmp
fisubs
outsl
inc
mov
or
orl
test
in
adc
arpl
add
int3
out
fwait
pop
mov
cmpl
pop
sti
jnp
dec
mov
test
arpl
das
mov
mov
jae
addr16
mov
jo
xchg
fwait
sub
mov
mov
mov
mov
xor
iret
xchg
arpl
ret
and
out
dec
rol
in
jbe
out
addb
stos
in
sbbl
je
dec
loop
cmp
das
sub
xlat
das
pushf
or
pop
outsl
xchg
jae
neg
sti
jnp
xchg
mov
subl
sbb
fistpll
sbb
or
daa
sbb
sbb
addr16
daa
inc
fsubrp
ja
mov
out
outsl
nop
sbb
pop
jnp
neg
roll
ja
pop
loope
popa
or
ret
sbb
ja
mov
daa
and
loope
mov
sti
mov
cmp
sbb
push
arpl
fs
jg
adc
dec
push
out
mov
and
movnti
div
mov
ret
out
lock
xchg
inc
mov
js
xchg
mov
icebp
iret
aaa
cmp
sub
jae
outsl
sbb
cmpb
push
jae
inc
faddl
sbb
or
jnp
daa
sub
push
out
mov
or
ja
packssdw
adc
fisubs
ret
or
neg
jecxz
pop
testl
and
mov
push
clc
xchg
lock
rcl
or
loopne
pushf
jb
mov
sbbb
push
sbb
sti
lods
sbb
xorl
sti
scas
jbe
push
rcl
add
ret
cmc
adc
mov
rep
es
or
jmp
mov
pop
mov
mov
mov
adc
pushl
push
popf
push
push
jne
sub
ss
dec
and
jae
mov
icebp
cwtl
add
mov
jmp
outsb
add
dec
push
add
js
insl
idiv
stc
pop
jl
aam
ret
pop
call
aad
cmpsb
mov
aam
cmp
lret
inc
mov
enter
and
adc
call
loope
inc
sub
stc
sub
sbb
out
mov
lock
sti
mov
jo
xchg
mov
push
mov
cli
sbb
dec
push
cmpl
lcall
add
pop
jmp
pop
xor
lret
pop
jmp
push
sti
ja
fbld
pop
and
jmp
insb
rcrl
lret
call
fistps
push
dec
adc
loope
jnp
cmpsl
fsub
push
pusha
pop
subb
loope
pop
std
aam
push
call
lahf
aaa
notl
ret
dec
notl
movsb
sub
jne
jmp
sti
add
jg
inc
popf
sub
loop
lahf
cmpb
imul
mov
incl
jmp
xor
call
push
mov
jp
pop
shl
jp
in
daa
in
sbb
xchg
test
inc
cmpsl
cmp
stos
arpl
inc
lods
lret
mov
cmp
lods
cli
add
mov
mov
pushf
cmc
sahf
cmc
enter
pusha
jecxz
out
js
call
and
mov
bound
test
pusha
shr
shlb
mov
or
in
jp
jmp
pusha
loopne
jecxz
stos
mov
clc
movsl
dec
mov
lods
fsts
sbb
adc
mov
push
subb
and
test
mov
imul
iret
loopne
xor
sahf
shll
sbb
sub
jae
push
rorl
jg
pop
sbb
pop
rcrb
daa
call
lea
cmp
pop
fistpl
inc
lods
data16
das
inc
jmp
repz
jecxz
jle
ror
rcl
sub
sub
jmp
dec
fbstp
pop
aad
mov
pop
jae
jmp
jmp
dec
push
outsb
jecxz
xor
inc
push
jo
mov
adc
bswap
aam
xchg
mov
test
fldl
mov
rcr
mov
movsb
xchg
mov
add
lahf
sarb
repz
std
sub
fmulp
xchg
xchg
xchg
dec
pop
jo
fsubrp
shrb
loope
pop
popa
mov
aam
or
jb
bound
repnz
mov
push
sub
xchg
leave
mov
clc
insl
cli
add
adc
jbe
fildll
dec
test
stc
push
add
sbb
jbe
andb
adc
add
test
popa
push
dec
std
test
int3
lods
movsl
jmp
sbb
add
repz
and
cmp
push
xchg
call
scas
cmc
fisttpll
xchg
add
lock
push
ror
test
pusha
add
fucomp
setne
sub
mov
pushf
push
sbb
adc
adc
xchg
cmp
or
mov
pop
dec
xor
scas
push
std
cmc
adcb
ljmp
sub
aaa
mov
stc
lea
stc
shl
not
and
sub
ret
mov
sarb
cmc
sub
cwtl
out
mov
and
repz
pop
cld
mov
mov
push
pop
arpl
pop
in
sbb
std
xchg
int
mov
mov
push
cmc
popa
fcoms
add
data16
test
call
lea
xor
loopne
and
or
or
fsubrl
pop
pop
add
xor
rorb
add
loope
arpl
outsl
mov
mov
push
test
jle
movsb
sub
adc
cmp
outsb
and
push
dec
sti
sbb
fmull
fsubs
pop
bound
and
loop
ja
loope
jbe
icebp
jns
or
mov
inc
cmp
cwtl
clc
cmp
sub
clc
jmp
adc
or
mov
xor
adc
mov
pop
enter
setnp
pusha
push
mov
cld
jnp
scas
cmp
fsubr
cmp
loop
icebp
add
inc
xlat
sbb
jmp
out
mov
push
lahf
push
xor
aaa
xchg
loope
pop
jge
jne
pusha
addr16
fnstsw
incl
popa
pop
pslld
pushf
add
scas
adc
mov
movsb
outsb
ret
dec
xor
stos
pushf
fs
mov
cmp
pop
push
call
mov
push
repz
and
push
cltd
in
lods
lret
fwait
xor
cli
lcall
ret
sbb
scas
movsl
sbb
cmp
pushf
call
rclb
aad
xchg
xchg
hlt
add
cmp
jbe
incb
rcrb
jmp
xor
cmp
mov
les
repnz
in
mov
cld
loope
or
adc
mov
dec
ret
lcall
sbb
or
jecxz
std
cmpsl
testb
cmp
incb
rcr
cmc
xchg
ljmp
xor
outsb
imul
xor
lret
ret
loope
aas
shrb
into
cli
jge
xchg
sub
pop
call
push
fisubs
cli
outsl
add
fcomi
lods
ss
or
rol
rcr
mov
sub
loop
jp
mov
push
aaa
lods
aas
mov
push
push
mov
subl
test
clc
push
inc
stos
loope
xchg
or
stos
aam
xchg
fisubrl
xor
push
sbb
adc
adc
mov
aas
add
js
cld
push
push
out
sbb
arpl
xor
push
into
cmp
dec
and
iret
call
daa
jmp
mov
mov
sbb
mov
cmp
sub
cmpsl
stos
mov
pushf
jmp
mov
smsw
jns
jb
inc
repz
insb
bt
stc
pushf
pusha
push
pop
jmp
stc
jmp
jmp
add
lahf
outsb
fbstp
mov
mov
pop
subl
orl
loopne
js
adc
loop
or
test
push
rclb
adc
lods
inc
push
push
pop
add
push
scas
sahf
loopne
or
sub
mov
and
sbb
insb
mov
insb
pushf
push
mov
xchg
sahf
cmp
dec
cmpsl
pusha
pushf
xchg
daa
xor
dec
scas
out
cmp
lret
push
dec
jmp
jmp
push
mov
dec
push
mov
jno
mov
jg
getsec
push
sahf
std
call
gs
lcall
pop
mov
push
leave
xlat
stos
nop
outsb
jne
mov
rcll
or
mov
fmul
mov
or
ret
sarl
cs
mov
repz
dec
adc
xchg
sub
or
mov
inc
xchg
aad
mov
movsl
test
ret
out
lcall
stos
mov
inc
mov
mov
add
pop
jle
mov
shrb
push
roll
or
sub
dec
jbe
sub
aad
aad
lock
mov
and
pop
cli
push
adc
dec
aam
mov
xor
dec
lods
jne
out
adc
or
rcrb
sbb
push
js
and
jecxz
les
dec
or
sbb
push
cmp
jmp
movsb
inc
xchg
cld
and
fadds
std
mov
repz
leave
sub
call
add
aad
aad
divl
stos
pop
insl
mov
loop
xor
add
sarl
pop
sbbb
fsubrl
push
pusha
inc
xlat
mov
lret
outsl
jbe
call
loope
or
sti
push
loope
in
leave
mov
xchg
rorl
mov
mov
sbb
imul
mov
cli
adc
shrb
int3
dec
mov
xchg
lret
push
dec
push
in
adc
sub
xor
sahf
loopne
mov
fyl2x
test
xor
xlat
ror
dec
jg
fldcw
xor
lock
fistpll
sub
mov
mov
cmp
sub
outsl
mov
jp
arpl
dec
xchg
mov
mov
mov
out
sbbl
xor
imul
inc
frstor
les
or
add
movsb
fistps
out
add
mov
jl
push
sub
inc
xor
mov
xchg
adc
cwtl
and
lds
sub
xor
out
fsubrl
jb
and
push
in
fcomi
cmp
in
push
push
inc
daa
mov
jnp
outsb
adc
pusha
pusha
cmc
mov
testb
sub
jmp
fisttps
mov
add
add
in
mov
mov
xchg
cmp
mov
lret
pop
cmp
jecxz
push
call
out
mov
mov
jl
test
test
fdivrp
jl
leave
lret
scas
aad
pushf
outsb
loop
decl
cmp
pop
jns
mov
sub
or
mov
push
dec
fnstenv
pushl
adc
jb
dec
aaa
mov
incl
cmpsl
ds
or
xor
sub
js
negb
jno
sbb
clc
shlb
and
lock
adc
or
clc
call
cmp
pop
push
or
cmp
mov
mov
movsb
pop
gs
jg
and
inc
nop
out
pop
mov
sbb
icebp
movsl
push
fadds
hlt
xor
inc
dec
mov
aad
rcll
or
aaa
movsl
jo
sub
mov
in
mov
les
add
fistpll
movsl
cmp
dec
sub
sub
push
or
jl
call
jae
in
bound
sub
lret
inc
mov
jb
cmp
js
inc
push
mov
mov
sbb
jno
hlt
or
scas
bnd
inc
or
jl
call
jbe
lret
ss
mov
cli
and
dec
mov
sub
in
cli
and
mov
call
inc
repnz
call
sub
fldt
mov
cld
test
mov
xchg
andl
cli
lods
and
fdivs
or
sub
repnz
icebp
mov
pop
push
push
adc
or
dec
sbb
cli
addr16
bnd
jg
cmpsl
jecxz
sub
dec
jb
push
push
cmpb
mov
sbb
ds
iret
shrb
adc
std
jg
ljmp
xor
adc
icebp
mov
jno
push
shr
jbe
mov
dec
cmc
push
out
lods
out
mov
dec
push
inc
and
gs
icebp
into
dec
pop
icebp
pusha
pop
xchg
mov
and
push
pop
adc
dec
hlt
lcall
in
mov
xchg
or
jb
sbb
mov
push
int3
push
pop
or
lahf
out
pushl
inc
xor
inc
add
xor
lods
ret
mov
clc
test
inc
jns
nop
cs
lret
fs
cs
xor
fistpll
aaa
ljmp
or
decl
adc
adc
cld
lahf
out
pushf
adc
inc
dec
mov
cli
aad
push
pop
call
loope
mov
push
in
xchg
cmc
insb
out
int3
imul
add
int3
and
dec
push
mov
mov
test
mov
pop
xchg
mov
and
aam
out
dec
xchg
outsl
cld
std
pushf
xor
ljmp
dec
and
iret
lea
xor
fsubrs
xor
pushf
inc
or
mov
jmp
sbb
insb
insl
push
push
mov
mov
mov
incl
clc
scas
sbb
cmp
xorb
jecxz
sbb
sahf
jns
xchg
or
mov
and
xor
stos
adc
mov
sub
push
and
pop
jb
dec
stc
cmp
out
es
ret
push
mov
out
adc
dec
mov
push
mov
js
out
out
add
dec
push
push
lods
arpl
loope
fsubrl
orb
jmp
jbe
jns
push
cli
sub
sti
pop
or
mov
sbb
fbstp
call
sbb
mov
dec
xchg
mov
pop
shll
mov
jl
ret
pusha
push
fnsave
inc
pop
aam
stc
cmp
xchg
pop
xchg
aaa
xor
jecxz
in
inc
mov
int
lods
repnz
aas
push
add
mov
mov
inc
jno
jg
xchg
aaa
and
mov
mov
cli
mov
sbb
call
call
xor
leave
test
inc
dec
fwait
arpl
sub
push
stos
fists
shr
divb
std
call
push
xor
imul
mov
stos
fnclex
push
and
call
loope
pop
pop
push
dec
loop
mov
mov
fsts
in
mov
testl
and
dec
scas
ja
testb
test
lret
sbb
aam
ljmp
lock
scas
push
mov
inc
pushf
inc
pop
jmp
iret
inc
ljmp
cld
leave
push
mov
sbb
and
bound
mov
add
vmwrite
pushl
das
inc
jo
test
sub
insb
ss
push
leave
repz
push
inc
std
lcall
mov
push
jmp
imulb
add
mov
xor
add
xlat
int
push
outsl
sbb
xchg
mov
push
cltd
call
mov
jbe
inc
pop
mov
idivb
push
mov
arpl
xchg
fnsave
aam
imul
gs
sbb
incl
dec
xchg
js
lds
out
xchg
in
jp
clc
xchg
cmp
mov
xchg
imul
pop
pop
fidivrs
and
mov
mov
sbb
xchg
pop
xchg
mov
fisubrs
cmp
adc
cmp
xchg
mov
pop
repnz
clc
outsl
std
pushl
enter
sub
fisttpl
fisttps
mov
push
dec
sbb
pop
in
fisttps
fadd
shll
dec
xlat
insl
xor
push
outsl
leave
sub
jg
fcmovnbe
xchg
movsb
jp
add
adc
orl
leave
outsl
ror
test
mov
aaa
mov
cmp
or
iret
aas
inc
push
push
aaa
dec
xchg
sbbl
fisttpl
inc
pop
cmp
ss
mov
xlat
mov
sub
xchg
ds
dec
fists
cmpsb
out
movsb
aas
mov
shll
fidivrl
mov
lcall
mov
mov
fsubrl
popa
jl
lock
dec
mov
stos
cltd
aam
lock
dec
mov
inc
lds
xchg
xor
mov
mov
mov
enter
add
aad
push
leave
lcall
lcall
mov
and
sub
adc
push
mov
jmp
sub
mov
stc
test
jmp
inc
sti
test
aaa
jmp
out
mov
das
jbe
imul
stc
adc
test
jb
cld
fsubl
inc
mov
add
popf
pop
xchg
sub
add
inc
arpl
fwait
xor
push
das
xchg
add
das
jge
cmpsb
xor
inc
dec
lds
add
das
add
sti
adc
sti
cltd
shl
fwait
bound
test
jmp
sub
jmp
inc
xchg
jo
push
push
sub
jp
out
pop
clc
mov
push
push
inc
xchg
and
sarl
out
inc
dec
jge
sbb
sub
leave
xchg
inc
popa
decl
and
enter
arpl
call
insl
xchg
mov
mov
xchg
ljmp
ds
dec
ret
rcl
mov
popf
jbe
scas
or
add
jbe
decl
mov
xchg
jecxz
loop
arpl
insl
pop
fbstp
sub
arpl
mov
call
pop
sarb
repnz
mov
pop
loop
xor
mov
lcall
sbb
push
jae
xor
pop
rorl
cmp
mov
imul
imul
call
push
dec
loopne
mov
and
mov
fnstsw
push
lcall
dec
xchg
notl
xchg
imul
xchg
in
mov
mov
push
sahf
movsl
outsb
push
jg
cltd
leave
movl
and
lods
out
add
lods
sbb
pushl
jle
fwait
ja
test
mov
cmp
add
js
es
std
pop
int
jns
cmp
xchg
inc
test
or
mov
sbb
or
lret
mov
xor
clc
push
test
pop
leave
in
insl
push
jo
mov
imul
in
adc
stos
adc
scas
loope
sub
pop
cld
imull
mov
pusha
push
stos
call
lods
sbb
mov
cli
loop
sahf
nop
and
repz
pop
pushf
fs
in
dec
popa
test
add
lahf
jno
into
adc
jle
mov
dec
ja
mov
cmp
loop
das
xor
and
popa
add
bound
lods
lock
mov
movsl
jns
pushl
and
xor
lcall
mov
jae
shll
jp
fistl
push
inc
cmp
xchg
jnp
ja
mov
mov
jmp
popf
bound
add
hlt
repnz
popa
mov
not
pop
mov
int
icebp
bound
and
into
mov
in
sub
pop
dec
add
pushl
pushf
jle
inc
push
dec
scas
jge
imul
aaa
out
repnz
mov
icebp
or
loopne
cmp
jp
stc
cmpsl
jle
sbb
pop
or
adc
push
push
popf
imul
push
mov
jb
jb
outsl
lock
adc
jge
cmp
outsl
rclb
push
repnz
ljmp
je
hlt
stos
insb
div
nop
or
mov
add
jo
mov
lret
fmull
jmp
cmc
adc
cmp
std
das
jae
loopne
jnp
je
shrb
out
cmp
cld
lcall
es
fldenv
sbb
sbb
sub
mulb
ret
jns
add
mov
mov
cs
sbb
mov
sbb
js
mov
int
xchg
jb
push
dec
xchg
scas
xor
incl
pop
lods
scas
fdivs
pop
cld
clc
mov
inc
sbb
scas
xor
lea
pusha
fwait
out
incl
sub
loop
mov
push
cmp
incl
lds
aaa
jmp
je
dec
fsubp
xchg
mov
dec
lds
and
addb
in
lods
dec
and
pop
push
addr16
mov
adc
xor
mov
mov
jg
mov
mov
aam
stos
lret
push
cwtl
sbbb
mov
pop
dec
sbb
decl
call
aam
jl
dec
movb
push
imul
and
push
push
loope
jb
pop
rorl
flds
fcos
jg
inc
scas
pop
jnp
mov
cmpb
inc
mov
repnz
mov
cld
in
push
add
push
lea
mov
jg
ljmp
icebp
scas
popa
jecxz
mov
dec
pushf
arpl
mov
sub
cld
outsl
sub
lods
xor
or
mov
lock
lock
ljmp
rolb
jmp
jb
jg
fistpl
jge
bound
pusha
fs
data16
iret
inc
sbb
add
cmpsb
mov
lock
and
inc
or
and
jmp
mov
push
fwait
into
rcrb
ds
sar
pop
out
sar
mov
aaa
sbb
add
in
out
out
in
lea
add
pop
ljmp
jle
adc
or
cld
sbb
ljmp
fnstsw
push
in
addl
adc
or
add
je
lret
nop
xor
mov
or
adc
cs
movsl
jmp
cli
test
and
xchg
adc
pop
leave
loopne
roll
pop
push
lcall
out
sbb
mov
jge
sub
pop
or
mov
jl
inc
cmp
sbb
dec
inc
imul
ret
test
adcl
jg
xchg
fbld
mov
or
sub
pop
jnp
aaa
lods
jne
insl
xchg
dec
xor
fbld
setbe
adc
xchg
mov
idivb
loop
inc
and
jmp
jmp
scas
arpl
test
xlat
inc
in
lret
add
add
sub
pop
popf
push
push
or
popf
decl
test
das
push
lahf
imul
fdivr
jo
mov
pushl
mov
xchg
push
mov
and
ret
add
cld
in
ret
mov
stos
mov
cmp
dec
xor
pop
fs
stc
lahf
xchg
cld
mov
sbb
mov
std
jae
jg
std
push
stos
out
sub
mov
push
lods
pop
dec
scas
out
mov
mov
push
or
lods
fdivs
cmp
pop
jl
pushf
out
ficompl
incl
cwtl
cmpb
mov
outsl
aas
add
aas
cmp
lds
lret
bound
pusha
sbb
cmp
lcall
cmp
mov
faddl
push
test
testl
jge
cmp
inc
add
ljmp
inc
out
int
lock
rcrb
scas
hlt
and
mov
jno
push
mov
in
popf
int3
sarl
push
jbe
adc
test
jns,pn
and
cmp
adc
dec
xchg
push
call
clc
lea
fisubrl
and
add
mov
adc
lret
dec
xchg
outsl
xor
outsl
mov
repnz
decl
popl
hlt
mov
jnp
pusha
jmp
incl
ljmp
lods
inc
dec
mov
jnp
fucom
gs
push
pop
cli
call
and
add
dec
cwtl
and
xchg
popf
pop
mov
incl
faddp
inc
aam
fsubs
cmp
nopl
xchg
push
ljmp
lock
add
jns
stos
ret
stos
xor
xor
mov
outsl
push
pusha
xchg
mov
icebp
ljmp
lds
lods
pushl
sbb
rclb
rorb
inc
or
inc
mov
mov
jnp
cli
xchg
push
cmpsl
test
cmp
mov
ljmp
xor
test
andnps
clc
ljmp
pop
adc
out
loop
lock
imul
repz
jb
ljmp
mov
pushf
ret
rorb
jp
sub
mov
call
cld
lods
push
jbe
nop
lret
rorl
adc
ds
jmp
adc
stos
mov
mov
sub
xchg
setp
addb
idiv
ljmp
hlt
mov
dec
rorl
lock
fs
sbb
mov
mov
decl
clc
and
sub
adc
je
ljmp
out
out
ljmp
jg
mulb
inc
mov
sub
cmp
repz
lock
clc
scas
pop
iret
lock
pushl
iret
sub
out
test
inc
outsl
inc
cld
insl
into
xchg
movsb
ret
out
pop
cmp
fdivrp
ljmp
add
inc
insb
xor
or
loop
imul
lods
mov
mov
adc
push
jmp
sbb
repnz
push
jmp
adc
sar
jg
test
std
shll
lock
mov
ja
cmpsl
mov
push
sti
xchg
xchg
lods
pcmpeqw
cli
call
sub
mov
adc
shl
lea
and
test
pushl
je
xor
sahf
hlt
je
lds
test
mov
dec
popa
sub
ljmp
pop
sub
sub
xchg
clc
test
xchg
dec
mov
add
fadds
xchg
or
mov
dec
ss
mov
dec
call
inc
push
sub
cmp
pushl
out
push
call
lods
adc
iret
enter
inc
enter
ret
sbb
pop
jp
push
rorl
mov
test
cmpsb
fcoml
push
push
or
or
imul
in
sbb
xchg
mov
dec
fsubrs
bound
pop
mov
shl
mov
clc
loopne
insb
movl
scas
shlb
xlat
pop
cli
fildll
jnp
dec
std
loopne
jmp
leave
pop
add
jbe
lcall
mov
imul
mov
ja
mov
pushl
sub
sub
fs
int
push
in
lea
fnstsw
lea
rcl
adc
rol
pop
adc
adcl
cwtl
ljmp
pop
insl
push
insl
leave
jl
rolb
bnd
xchg
test
xchg
mov
pushl
mov
or
add
rcr
enter
adc
inc
pop
out
jmp
jbe
movsb
aaa
mov
jne
jbe
push
cwtl
fs
incl
rorb
push
lret
add
stos
test
lret
pop
add
out
jg
xor
fadds
xor
aam
push
xchg
cmpsb
cmp
mov
mov
std
jmp
pop
xchg
sub
or
in
xlat
dec
pmulhw
and
das
int
pushf
scas
dec
les
hlt
ljmp
xchg
cmpsl
inc
gs
fadds
sub
dec
cld
repz
push
dec
cld
mov
clc
sarl
jl
das
lahf
cmp
lock
jno
lcall
test
xor
add
hlt
out
lods
xchg
push
sti
ficoms
fsubs
ljmp
adc
fisubs
sbb
push
xchg
xor
push
rolb
mov
ret
sub
outsl
lock
mov
pop
xchg
imul
xchg
push
xor
push
lods
push
jmp
jmp
or
xchg
or
lds
jo
xor
xchg
es
sub
lcall
test
into
iret
ljmp
test
bound
xor
pop
mov
neg
andl
cmpsl
in
or
out
mov
dec
xorl
rclb
or
outsl
loopne
jns
mov
cmp
cld
sti
pop
pop
arpl
incb
std
inc
xor
jo
popa
test
mov
sbb
in
xchg
shrb
sub
mov
lods
ljmp
hlt
push
leave
testb
icebp
shrb
jg
sbb
test
add
jg
stos
inc
push
mov
jge
insb
pop
lcall
cld
sub
mov
popa
sahf
rcrb
dec
jae
mov
clc
lcall
xchg
or
xchg
sbbb
cmp
xchg
sub
daa
test
mov
xor
lahf
ret
shll
sbb
nop
adc
shrb
pop
incl
jno
sub
sbbl
sbb
test
stos
pushl
pushl
or
jl
mov
pushf
jns
push
jecxz
into
pushf
mov
outsl
jb
cltd
cltd
mov
out
pop
in
mov
test
inc
fs
lea
pushf
xchg
repnz
stos
dec
xchg
xlat
sub
mov
fistpll
out
imul
cld
jg
test
sbb
add
popf
or
sahf
xchg
inc
scas
mov
stos
mov
jecxz
cmp
mov
adc
dec
imul
inc
mov
sbb
daa
stos
sbb
xor
mov
std
cmp
fnclex
in
inc
pop
lock
scas
cmp
or
sbb
mov
sbb
fildll
inc
negb
or
jp
decl
sbb
ret
ficomps
lahf
mov
add
mov
xor
jmp
mov
jp
fisubs
insl
ds
cltd
data16
nop
pop
and
cli
iret
subb
fucomip
mov
out
mov
inc
cmpsl
mov
adc
or
icebp
jmp
lcall
outsl
push
push
ret
pop
out
pushf
inc
push
clc
aaa
push
push
jbe
inc
adc
outsb
je
aaa
adc
push
das
inc
pop
pop
fwait
sub
insb
icebp
aam
adcb
mov
jl
push
mov
push
pop
std
adc
dec
cs
incl
mov
sarb
lock
dec
nop
xor
sub
test
icebp
mov
jg
cmpsl
cld
out
out
sbb
cmp
cmpsb
mov
cmpsl
sub
popf
imul
notl
pop
mov
int
movsl
pop
out
inc
jns
sbb
loop
cmp
or
mov
sahf
decl
mov
sbb
nop
mov
sub
mov
push
push
lods
xchg
ljmp
push
ljmp
mov
sarb
cs
jecxz
pushl
adc
mov
mov
inc
fs
mov
jle
bound
das
mov
push
fidivl
enter
out
adc
pop
or
sbb
out
push
cmpsb
in
xor
inc
xor
pop
clc
fisubs
cli
pop
or
ljmp
outsl
inc
mov
dec
dec
add
shl
aas
std
add
mov
add
jmp
add
jo
inc
mov
cmp
cwtl
mov
jmp
daa
call
mov
ss
add
ds
data16
lret
pop
sbb
mov
cli
addb
punpcklbw
fdivrs
fimull
push
out
ja
dec
std
incl
mov
or
or
add
or
aas
ret
xor
lcall
dec
call
inc
mov
aas
pop
xor
xorl
inc
pop
sarb
jge
jnp
sub
lcall
ret
xor
je
inc
jb
or
or
fcomp
idiv
lcall
iret
test
data16
call
fdivrl
xchg
stos
sbb
stos
jp
stc
sarb
jecxz
push
cmp
outsl
aam
adc
call
or
jb
shlb
push
sbb
adc
pop
sbb
orb
push
and
mov
lock
inc
jle
les
adc
cmp
imul
cld
mov
pop
clc
jbe
pushf
lahf
jmp
jp
push
sbb
or
mov
mov
idivb
jo
jl
ret
gs
mov
out
mov
fnstcw
and
xchg
sarl
and
mov
fdivrs
sti
movsb
cmp
and
push
fldenv
aaa
cli
test
pop
aaa
mov
push
in
ljmp
hlt
in
mov
sbb
sbb
add
xor
in
ds
aaa
repz
push
dec
outsl
lock
cmp
shrl
ss
dec
ret
jmp
incl
jmp
mov
pop
pop
mov
mov
cmp
push
mov
popf
scas
xchg
lods
mov
sub
pop
cwtl
jbe
push
je
out
pop
and
and
xchg
insl
adc
cmpsb
stc
out
cmc
or
xor
push
call
cld
sub
repnz
dec
mov
movswl
adc
imul
add
testb
imul
mov
mov
scas
pop
xor
movsl
push
mov
mov
sbb
and
cmp
out
faddp
mov
dec
insl
jbe
push
int3
or
jl
ret
pop
mov
in
or
xlat
dec
push
jne
nop
xor
jno
jl
icebp
pop
xlat
insl
xchg
and
mov
lcall
jmp
sti
or
pop
jbe
scas
cmc
push
lret
xchg
sbb
aas
lods
les
push
mov
jl
lahf
pop
mov
hlt
push
fildll
hlt
rorl
dec
sub
push
and
push
pop
popl
mov
dec
outsl
jg
and
loope
mov
addb
jmp
sbb
pop
xchg
fisubrl
xchg
test
jg
repnz
aad
ds
xor
test
cwtl
jmp
loop
cmp
xchg
scas
add
cwtl
hlt
cwtl
jl
sti
mov
loope
out
inc
xchg
mov
jge
pop
ret
sbb
cwtl
jno
les
aam
mov
int
in
jnp
pop
mov
cld
aam
mov
mov
test
fs
dec
push
push
and
std
mov
loop
mov
in
js
pop
pop
fucomp
sbb
pop
cmp
lods
out
ljmp
push
push
mov
lds
mov
and
add
nop
cmc
mov
ljmp
mov
jo
xchg
fwait
or
add
mov
add
scas
ret
aad
and
or
push
in
and
lock
test
adc
shll
in
sbb
std
inc
jae
jb
pusha
xchg
insl
pushf
pushf
push
mov
daa
inc
xchg
rorb
cmp
push
mov
repz
lcall
ljmp
jg
lret
test
insb
sbb
dec
nop
dec
jmp
pop
sub
lahf
aam
divb
leave
sarl
incl
mov
mov
adc
xlat
or
insl
push
and
cmp
or
xor
jb
sbb
mov
xchg
test
pop
mov
mov
push
pop
pusha
push
call
neg
ljmp
scas
jg
push
sub
adcb
pushf
inc
xor
pop
orl
icebp
dec
lret
pushf
sbb
sub
dec
lock
sbb
mov
sbb
movsb
sbb
pop
call
mov
xchg
add
fisttpll
bound
mov
lcall
xchg
xchg
test
sub
and
xor
jg
pushl
imul
xchg
jmp
out
leave
jbe
push
xchg
dec
jmp
mov
in
dec
push
mov
mov
insl
loope
sbb
fimull
ljmp
xchg
aaa
sbb
push
jne
lods
mov
push
jge
fidivrs
xchg
scas
cmp
mov
incl
mov
mov
inc
icebp
mov
addr16
jg
push
bound
pop
out
popf
insb
push
repz
mov
or
incl
outsl
ret
mov
ficoms
mov
je
int3
mov
addr16
outsl
mov
lret
lahf
cmpsl
push
sbb
jmp
mov
inc
mov
cld
test
lcall
and
inc
cs
xorb
push
dec
lret
cmp
mov
inc
lcall
mov
out
iret
push
call
pop
fistpll
aam
out
pop
std
dec
gs
xor
sbb
enter
push
push
mov
adc
clc
pushl
xchg
out
cmp
fldcw
sbbl
xor
dec
mov
xchg
into
dec
jb
sub
or
sbb
mov
mov
mov
pop
scas
loope
sub
das
aaa
insb
jo
mov
hlt
mov
loope
pop
clc
jmp
pop
mov
inc
ret
pop
mov
fnstsw
mov
push
test
push
ljmp
iret
xor
or
push
dec
mov
loop
lret
mov
std
lcall
lcall
aad
gs
js
fbld
inc
mov
inc
fsts
mov
dec
xor
ret
jnp
xchg
inc
add
out
outsl
pusha
push
push
test
add
pop
bound
jg
pop
sub
or
mov
or
stos
xchg
mov
mov
jg
sahf
push
lret
jne
and
cmp
mov
pusha
ljmp
maskmovq
mull
jns
mov
push
push
lahf
lock
cs
stos
imul
add
sti
mov
mov
lods
push
aad
nop
push
cli
pop
test
push
or
jp
mov
xchg
or
sahf
cmp
adc
push
imul
inc
aaa
decb
ret
sbb
cmpsl
add
mov
adc
pop
lods
sti
aaa
xchg
std
in
call
lcall
imul
call
test
sar
or
mov
push
inc
jmp
xor
int3
sti
aad
mov
pusha
mov
push
insb
mull
inc
shll
jecxz
cmp
pop
ljmp
dec
dec
jg
cld
xchg
mov
cwtl
jnp
shll
call
jbe
jl
popf
mov
pop
call
test
stos
xchg
outsb
aaa
jmp
adcb
xor
mov
dec
sbb
mov
pusha
std
decl
sub
aad
int3
push
inc
cmc
add
jp
jne
clc
ljmp
add
iret
frstor
leave
jge
push
cmp
jl
jmp
sbb
inc
fmull
clc
outsl
push
sti
push
mov
and
stc
jg
icebp
call
push
lock
std
std
mov
xchg
imul
adc
jle
das
mov
into
mov
pushf
mov
pop
gs
ljmp
lods
in
jge
mov
dec
stos
and
aam
pop
leave
add
out
fisubrs
adc
or
xchg
gs
add
inc
ss
jg
xchg
movsb
in
sahf
int
int3
mov
sbb
adcb
fldl
decl
pusha
xor
inc
pop
cmc
into
rorb
and
add
pop
rol
add
jbe
in
fcoms
pushl
pusha
stc
es
push
out
lcall
mov
icebp
lcall
call
adc
pusha
jmp
inc
xchg
iret
out
pop
jno
decl
mov
roll
adcl
jbe
inc
push
jle
das
lret
incl
add
iret
fistpll
addr16
add
xlat
cmpsl
loopne
outsl
xchg
mov
jge
pop
call
das
pop
lret
insl
ljmp
adc
test
jle
add
jbe
aaa
mov
mov
in
jno
jl
mov
fsub
mov
dec
dec
mov
in
call
ret
jne
mov
into
fisttps
mov
jg
xchg
cmp
lods
jge
mov
dec
dec
andl
push
repnz
push
into
loopne
cs
inc
cmpsl
test
sub
push
add
loopne
aam
push
push
subl
flds
dec
adc
fstpt
dec
mov
cmpsl
or
inc
cmp
sub
add
sub
add
pop
rcrb
mov
dec
dec
and
push
les
ljmp
dec
xchg
jbe
test
jmp
xchg
rol
je
ljmp
jbe
mov
lods
xor
iret
or
push
fucomi
inc
in
incl
add
fs
ret
jno
sub
mov
cmp
lcall
add
inc
subl
fxam
rcrl
test
je
push
pop
leave
mov
fmull
aas
pushl
jg
xchg
adc
mov
hlt
inc
xchg
push
mov
and
test
test
push
stc
repnz
sbb
dec
dec
xchg
data16
std
jg
sub
adc
daa
mov
dec
sub
insl
or
xchg
push
pop
pop
movsl
sbbb
sbb
jge
add
mov
and
adc
test
fldt
cmpsl
add
je
pushl
xchg
xchg
data16
xchg
mov
das
fisttpll
and
pushl
jb
aam
subl
xor
and
jno
movsb
cmp
ret
out
int
xchg
xchg
in
insl
icebp
push
aaa
pop
out
int
cld
cmp
negb
add
and
aam
push
shrb
sub
clc
lcall
lea
inc
xchg
into
ljmp
push
mov
push
jle
int3
push
push
flds
xchg
mov
xchg
insl
jnp
out
sbb
jns
subb
incl
popa
and
adc
pushf
mov
xchg
jno,pn
add
xor
pop
pop
xchg
jecxz
incl
pop
mov
je
orb
add
jp
test
shll
insl
scas
xor
or
call
and
insb
sbb
dec
test
mov
ret
jno
jbe
into
into
sti
leave
lret
repnz
xchg
pop
insb
mov
or
jg
in
clc
dec
dec
and
aam
push
in
and
pop
mov
lods
xchg
inc
cmp
dec
jo
mov
mov
sub
xchg
inc
adc
aad
lcall
push
fildll
les
xchg
mov
lahf
adc
xor
mov
outsb
adc
call
jp
sub
and
push
mov
lahf
or
decl
cmp
cmp
inc
jl
rolb
call
jo
mov
nop
push
insl
lock
push
sahf
into
test
ljmp
add
mov
andb
fidivrs
imul
cld
fsubr
pop
add
push
lret
mov
pop
xor
xchg
fcoms
outsb
push
cmp
jb
pushl
add
sub
mov
dec
and
imul
mov
jns
ja
mov
ljmp
scas
insl
mov
testl
lods
loopne
cwtl
push
scas
test
call
sub
xor
scas
fdivp
push
dec
xlat
push
push
lcall
jnp
ja
pop
scas
ficompl
lcall
outsb
in
loope
cmp
fwait
push
frstor
outsb
push
mov
insl
cltd
stc
popa
push
mov
stos
xchg
daa
cld
or
pushl
rorl
test
push
mov
inc
mov
jo
in
scas
jle
mov
popa
xchg
sar
iret
aas
or
push
jbe
fidivrl
push
push
sar
call
mov
mov
mov
fnstsw
shrl
loope
cmp
push
mov
decl
jbe
pushf
loopne
xor
movsb
movsb
call
pushf
stc
jb
iret
dec
cmpsl
xchg
inc
or
add
ds
push
cltd
call
cli
jg
das
les
dec
daa
mov
ror
stc
mov
sarl
int3
std
push
call
pop
fbstp
cmpsl
sub
fildll
outsl
addr16
cs
mov
cld
ja
jbe
nop
shrb
nop
jb
loopne
inc
stos
fcmovne
xlat
sbb
jg
xchg
lret
xchg
lods
add
out
mov
jne
call
adcl
cs
das
aas
call
fbstp
jo
addr16
mov
or
push
jge
cld
pop
lcall
outsl
inc
ficoms
sub
adc
shrl
loope
cmp
push
mov
ljmp
jnp
adcl
cmpsb
out
jp
stos
push
int
cmp
pop
in
mov
mov
ss
push
push
pop
jae
mov
xor
mov
cs
mov
bound
out
rorb
sarl
jmp
shlb
push
sub
sbb
outsb
xchg
fistpll
jnp
ret
push
inc
jbe
cwtl
mov
adc
movsb
test
dec
lcall
cs
cltd
pop
pop
xchg
mov
push
add
pop
mov
push
mov
and
into
fisubs
call
shll
fcomp
imul
dec
daa
dec
sbb
iret
pop
jl
cmp
scas
xchg
lds
js
insl
ljmp
lret
jo
or
loope
cmp
pcmpeqd
arpl
cli
repz
fidivl
mov
or
push
dec
xor
lea
or
xchg
cld
or
mov
lahf
lods
cmc
mov
xchg
shl
sar
daa
mov
cs
iret
ss
shrl
xchg
lret
lret
call
shrl
lret
push
je
ret
outsl
pop
push
jbe
sub
xor
xor
outsl
xchg
sbb
jae
sub
and
jbe
fwait
out
push
outsl
jmp
fidivl
movsb
scas
out
inc
stos
mov
jb
cld
mov
lea
cmpsb
shlb
pop
sahf
pop
popa
jo
cwtl
pop
and
sub
cs
cs
std
push
into
sarl
pop
push
add
fwait
xchg
and
xchg
push
xchg
sbb
enter
xor
les
jg
mov
jle
lret
mov
fwait
jbe
cwtl
js
dec
mov
pop
fidivl
in
lret
cld
les
lcall
mov
gs
and
lret
cmp
lock
fwait
cs
movsl
fld1
mov
incl
mov
outsb
fcmovnbe
add
out
mov
cmp
cmp
pop
cmp
call
cmp
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
data16
imul
ja
lcall
aas
add
inc
je
push
xor
test
xor
pushl
sub
cmp
dec
xor
xor
adc
xor
mov
lds
shll
fdivrp
pushl
jmp
stc
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
icebp
xor
shlb
ss
and
lcall
cwtl
inc
xor
xor
xor
xor
xor
incl
jns
nop
xor
xor
xor
stc
xor
xor
cmpsb
xor
das
mov
xor
ss
ss
aaa
sbb
add
pushl
sub
mov
dec
cmp
test
mov
xchg
stc
decl
lcall
sarl
push
cmp
clc
cmp
jae
test
cmp
mov
pop
cmp
add
or
pusha
imul
ds
lret
xor
inc
lcall
cmovle
push
aas
ja
fdivrs
fidivrs
push
pusha
ret
fildll
or
sub
mov
xor
xor
xor
pop
ljmp
je
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
ljmp
xor
xor
pop
mov
jno
js
jle
mov
ret
xor
mov
xor
xor
xor
dec
cli
xor
xor
jne
mov
out
xlat
cmp
jge
mov
xor
push
push
ss
outsl
lcall
ss
divl
pop
aaa
and
add
pushl
insl
aaa
je
jle
xchg
aaa
fwait
aaa
movsl
aaa
mov
fisttpl
cmp
cmp
cmp
cmp
iret
cmp
cmp
cmp
jmp
aas
cmp
jle
test
mov
sub
fnstcw
insl
jg
aas
sarl
out
in
shll
sarb
aas
xor
bound
std
pushl
imul
shll
xor
xor
xor
xor
xor
aaa
cld
pushl
pushf
xor
xor
xor
xor
mov
ljmp
test
pushl
mov
xor
pushl
mov
aad
ret
outsl
lock
ss
lcall
mov
jbe
out
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
mov
cmp
jne
pop
cld
idivl
add
mov
aas
iret
aas
aad
fstpt
jecxz
jmp
das
adc
mov
and
cmp
inc
xor
ret
push
jnp
mov
xor
xor
xor
imul
sti
pushl
push
xor
xor
xor
xor
dec
lret
aad
in
xor
xor
xor
xor
and
xor
ss
xor
xor
mov
xor
xor
xor
lcall
mov
mov
xor
xor
xor
xor
popa
ret
fistpll
jne
xor
push
mov
jne
mov
ss
ds
xchg
aaa
cld
aaa
add
pop
cmp
rcll
jg
mov
cmp
ret
cmp
cmp
cmp
mov
cmp
cli
cmp
sbb
and
sub
xor
ds
ds
jg
ds
ds
fnstcw
out
idiv
add
pop
aas
and
sub
ss
fbld
aas
dec
aas
push
aas
pop
aas
addr16
jb
js
cmpb
aas
xchg
aas
mov
aas
lret
aas
loopne
pop
sbb
or
xor
dec
xor
pop
xor
or
jecxz
loope
pop
or
js
mov
xchg
xor
js
sbb
ret
xor
and
xor
add
xor
xor
xor
test
mov
xor
xchg
loope
xor
icebp
roll
xor
xor
xor
pop
daa
mov
scas
xor
cmp
out
xor
inc
call
mov
inc
xor
xor
xor
xor
xor
xor
xor
xor
test
xor
xor
popf
lcall
xor
shlb
decl
xor
aaa
shlb
fnsave
icebp
aaa
add
jg
cmp
cmp
outsl
cmp
xorb
cmp
cmp
mov
add
cmp
mov
cmp
xor
pushl
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
add
jae
jg
dec
or
ds
sti
cmp
mov
mov
sarl
fsubrs
subb
test
aaa
xor
jg
call
xor
xor
xor
sub
xor
xorl
xor
int
xor
aam
xor
xor
xor
push
sti
xor
aad
cli
out
cli
scas
jnp
xchg
lea
lcall
xor
xor
cli
out
popf
jg
xchg
xor
xor
xor
xor
xor
pushf
xor
outsl
dec
xor
xor
add
inc
int
ss
ss
jo
xlat
aaa
dec
and
mov
into
mov
cmpsl
or
xor
or
pop
inc
cmp
lock
xor
and
lods
cmp
cmp
leave
inc
dec
push
fadds
jecxz
lret
cltd
add
sahf
fcompl
rcrl
paddd
int
cmp
popf
fstps
cltd
cmp
cltd
ds
jb
mov
fcoms
xchg
xchg
mov
add
sbb
xor
and
daa
pop
ret
in
and
pop
xor
cmp
stos
orps
mov
add
and
mov
fsubs
sbb
data16
jmp
jge
dec
xchg
adcl
mov
popf
lret
pop
jnp
or
ret
scas
sbb
jb
inc
add
mov
and
inc
aad
outsl
nop
fildll
and
inc
test
add
mov
inc
jbe
inc
mov
jno
mov
add
or
sbb
jp
inc
repnz
mov
adc
out
or
fildl
adc
jp
pusha
push
cs
arpl
nop
push
push
push
pop
inc
add
scas
mov
pop
add
push
push
pop
mov
in
pop
mov
or
movsl
or
inc
mov
fsts
mov
repz
addr16
loopne
sub
enter
mov
and
test
and
std
sub
push
and
sub
notb
xchg
or
test
adc
aam
add
jle
inc
xlat
mov
push
or
mov
add
aaa
ret
fsubrs
sub
cmp
sbb
int3
mov
fnstsw
inc
dec
lock
add
push
data16
push
sbb
shr
jae
ja
cmp
pop
pop
push
stc
fisubs
jne
sbb
or
popf
and
adc
add
pop
cld
lds
add
sub
lcall
cmpl
jbe
and
cld
inc
or
aaa
cmp
xor
shll
mov
and
xchg
sbb
mov
mov
fidivs
pop
es
out
jge
mov
mov
lret
pop
and
fnstcw
push
or
cmp
orb
inc
mov
sub
add
mov
add
lret
mov
insl
insl
xor
fs
mov
add
insb
test
sub
jno
mov
insl
jae
adc
gs
insb
cs
test
sub
dec
dec
inc
jg
repnz
lea
sub
addb
xchg
loopne
dec
pop
push
stos
and
xchg
gs
gs
dec
lcall
popa
insl
add
push
inc
fwait
mov
cmc
movsb
push
mov
or
loopne
adc
mov
xor
cs
sub
mov
mov
sub
xchg
jecxz
out
add
aaa
dec
ret
in
or
call
sbb
cmc
call
or
jg
or
add
push
push
or
sbb
jb
in
xor
mov
jns
jnp
pop
or
add
ret
and
jne
leave
sbb
adc
add
or
pusha
ret
inc
inc
adc
xor
jecxz
or
mov
fdiv
mov
xchg
adc
adc
test
insl
mov
mov
mov
push
ret
xor
mov
mov
xchg
jne
decb
call
outsl
push
aas
das
or
ja
stc
add
or
add
leave
mov
pop
jae
popf
inc
inc
decb
bound
sub
out
sub
add
sbb
cmp
sbb
jb
adc
push
mov
push
dec
inc
push
sbb
sbb
out
aas
fisttpll
mov
pop
pop
or
mov
test
or
adc
cmp
insb
mov
xchg
xor
and
aam
ret
adc
test
lods
out
jl
std
push
popf
orb
clc
push
das
jge
mov
inc
mov
cmp
or
cmp
jl
hlt
adc
push
adc
cmp
loopne
shlb
add
repz
js
pop
stos
shrl
xor
push
and
add
mov
insl
push
sub
mov
pop
xchg
gs
jb
outsl
pop
xchg
in
outsb
gs
cs
adc
sbb
insb
popa
outsb
fs
mov
jp
push
fnstsw
fnstsw
loope
sub
mov
out
arpl
or
jbe
fs
sti
xor
call
sbb
mov
call
movsb
flds
adc
hlt
pop
je
sahf
sbb
jl
or
dec
movb
mov
adc
outsb
int3
int
sub
shlb
insb
into
xor
xor
shrb
shlb
sub
push
cmp
adc
shlb
sar
imul
jg
movb
std
sub
jae
enter
test
bound
ss
std
mov
sub
or
pop
jns
std
inc
std
js
ret
imul
push
ja
dec
aad
sub
popf
pop
push
int3
add
sbb
add
sti
mov
mov
cmp
jbe
jp
push
adc
push
inc
xchg
add
es
mov
push
sub
push
pop
cmpsb
shll
jge
inc
rcll
cmp
je
push
mov
aaa
fs
test
rorb
ljmp
int3
outsb
push
cld
push
push
adc
clc
scas
popf
mov
dec
push
decl
jne
inc
sahf
bswap
in
outsl
push
add
and
out
je,pt
test
shrb
mov
mov
and
mov
pop
xor
and
ret
in
add
sbb
pusha
mov
mov
je
cmp
push
mov
mov
std
mov
mov
aaa
lods
aam
mov
xor
mov
js
test
mov
fnsave
or
pop
push
fsubr
sbb
in
add
fiaddl
add
push
inc
sub
testl
outsl
add
outsb
dec
shll
jae
cs
shll
lret
mov
outsb
insb
popa
jne
pushf
sub
outsb
arpl
cs
les
leave
gs
inc
add
lret
jno
cmpsb
mov
mov
cmc
mulb
mov
push
pop
imul
sub
outsl
jb
cs
mov
js
mov
mov
bound
jecxz
pusha
adcb
je
xor
mov
iret
pop
mov
mov
ret
cli
adc
in
and
hlt
add
xchg
inc
stos
clc
loopne
jmp
push
leave
jne
mov
adc
gs
call
cld
xorb
add
or
inc
or
jp
pop
inc
je
divb
fdivl
push
pop
cmp
inc
add
repnz
sub
adcl
mov
jne
push
cmpsb
add
pop
sbb
ret
jle
pop
push
add
repnz
push
mov
aam
add
fdivr
push
add
insb
iret
dec
sub
add
xchg
fwait
and
sbb
cmp
mov
clc
dec
inc
and
mov
shll
pop
add
testb
push
inc
in
xchg
ret
js
mov
adc
adc
rclb
ret
add
dec
xor
cmp
mov
ret
sbb
fimull
xchg
inc
scas
mov
pop
inc
loopne
xor
pop
mov
arpl
into
mov
cmpsb
jae
or
mov
clc
ret
lret
testb
adc
nop
mov
pop
pop
fidivs
inc
addr16
or
add
and
notl
cmp
bnd
sbb
inc
adc
stos
leave
or
inc
push
and
inc
sbbb
add
pmulhuw
add
and
or
shll
add
test
test
and
pop
add
dec
jo
and
cmpsb
enter
add
fcoml
add
add
es
xor
push
cmp
push
mov
shr
mov
cmp
je
sbb
in
jg
outsb
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
fbld
movsb
mov
add
mov
xchg
push
push
daa
inc
cmp
jl
add
jg
and
ds
mov
or
stc
stc
shll
add
shll
insl
mov
pop
rclb
mov
andb
ss
cmp
mov
and
add
scas
fdivs
push
jle
mov
jb
sub
add
jae
jnp
lock
enter
mov
mov
push
ret
int3
cmp
add
xor
orl
inc
cmpsl
add
shrl
inc
pop
imul
push
cmpsb
imul
sub
add
inc
ret
imul
test
dec
inc
cmp
cs
imul
imul
push
adc
stos
ret
dec
dec
cmp
imul
and
mov
add
sub
outsl
insb
stos
aas
fcoms
pop
or
jns
outsl
inc
push
jg
mull
dec
popa
jns
jne
inc
lods
nop
mov
adc
stos
popa
fs
sub
add
push
sub
js
jg
push
jne
imul
aaa
mov
sti
fldl
push
sub
push
push
mov
popa
sub
or
lock
inc
adc
push
pop
inc
nop
clc
inc
in
mov
roll
push
add
or
sbb
or
or
inc
lods
xor
pop
mov
cmp
andb
aam
dec
andb
repz
addb
inc
outsl
xchg
adc
and
inc
xchg
aaa
pop
packsswb
fnstenv
push
add
jo
mov
out
je
nop
inc
mov
inc
and
inc
sbb
adc
int
jno
sti
sbb
inc
or
fstpt
outsl
es
loop
fldcw
add
pop
adc
push
cmp
jnp
dec
push
inc
js
lcall
push
negb
mov
push
outsb
jb
and
adc
inc
outsl
js
cmpsb
aaa
popa
leave
xchg
and
adc
add
iret
and
and
jno
and
test
inc
inc
jg
nop
or
adc
andb
and
adc
add
jg
add
and
cli
xorb
insl
insl
dec
jae
pop
xor
add
inc
and
in
cmpsb
cwtl
or
add
js
int
cmp
or
xchg
pop
and
sbb
or
shll
aaa
adc
pop
stos
cmpsb
imul
cmpsb
imul
jmp
mov
scas
jmp
sti
rorl
sbb
pop
xchg
gs
add
jecxz
pop
push
mov
arpl
loopne
outsb
cmp
or
pop
clc
je
inc
rclb
fdivl
rorb
and
xorb
sbb
bound
and
pop
adc
test
roll
jbe
imul
jl
inc
mov
jecxz
cmpsl
fs
jno
fldcw
jnp
sbb
adc
imul
fisubl
push
dec
enter
or
sub
sti
fnstcw
imul
mov
add
xorl
push
push
outsl
pop
jns
pop
pop
adc
pop
mov
je
pop
in
popa
jbe
lds
adc
xchg
mov
inc
imul
mov
sbb
add
pusha
mov
add
sbb
adcb
xor
clc
pusha
push
aas
add
jl
lods
adc
pop
movsb
pop
xlat
mov
push
or
dec
mov
dec
add
cmp
dec
mov
jae
movsb
fildl
pop
or
sub
sub
add
jb
int
adc
popf
outsb
leave
sbb
lret
outsl
and
neg
dec
xlat
mov
jecxz
mov
and
xor
jae
and
add
movsl
popa
and
inc
add
addr16
fstpl
jg
inc
imul
adc
mov
xlat
add
int
fsubrl
sub
add
push
jb
xlat
jae,pn
cmp
fnstenv
xor
jmp
pop
ret
mov
outsb
xchg
insb
popf
xchg
pop
dec
jge
mov
addr16
jo
popf
addr16
cwtl
lret
mov
sub
scas
xor
xor
inc
int
fwait
mov
or
fsubs
sub
dec
dec
imul
push
arpl
adc
fs
inc
aaa
popa
pop
outsl
pcmpeqw
jae
popa
adc
xor
inc
push
imul
and
arpl
push
cmp
mov
add
insb
adc
pushf
or
and
test
nop
xor
xor
jg
adc
xchg
xor
xor
xor
outsl
xor
clc
incl
xor
xor
xor
xor
xor
xor
xor
xor
adc
mov
jne
pushl
aaa
aas
cmp
cmp
cmp
cmp
cmp
sarb
cmp
cmp
jg
clc
pushl
mov
ds
ds
ds
jle
movsl
ds
jbe,pt
pop
and
xor
cmp
xchg
sarl
aas
aam
fwait
add
pop
xor
xor
and
sub
bound
mov
or
push
ljmp
mov
test
fdivs
fdivs
add
hlt
jl
xchg
out
popa
divl
fildl
inc
out
flds
xorb
mov
and
add
adc
and
add
pusha
and
pop
mov
aad
push
test
outsl
iret
sub
in
inc
out
and
lods
add
add
and
test
mov
out
test
mov
inc
push
andb
dec
repz
dec
xor
add
movhps
xor
shrl
data16
xor
rorl
fnstenv
cs
popf
sti
into
sbb
inc
ret
sbb
in
xor
loop
nop
lcall
scas
int3
jp
pop
sbb
mov
imul
add
inc
sbb
cmp
add
adc
shl
test
dec
lcall
out
and
fwait
outsl
lds
sbb
sbb
outsl
fstl
push
test
dec
inc
les
bound
pop
mov
dec
or
test
add
push
mov
in
enter
adc
dec
pop
leave
and
jmp
repnz
or
and
and
add
in
enter
add
or
add
daa
push
and
nop
push
inc
mov
sbb
in
cmpb
xchg
or
and
xchg
es
or
mov
lds
pop
rclb
add
mov
out
sub
aam
out
sbb
fsubr
push
mov
add
out
lock
pop
xor
adc
sub
cmp
sbbb
add
call
jle
sub
pop
loopne
mov
lea
cmpl
test
mov
das
sbbl
fbstp
lahf
andb
mov
mov
mov
incl
incb
inc
mov
xor
and
mov
push
fcoml
add
or
adc
hlt
shl
imul
dec
es
mov
pop
cmp
inc
add
mov
cmp
out
cld
push
dec
adc
fnstcw
xor
mov
call
or
data16
pmulhuw
outsb
fbstp
sbb
pop
cmp
push
imul
xor
daa
or
hlt
add
push
dec
je
mov
inc
cmp
in
adc
jnp
je
push
ss
pop
and
or
cmp
lock
jnp
stc
mov
repz
call
push
mov
cli
jmp
movl
pop
cmp
push
adc
sbb
pop
jle
inc
add
lea
jecxz
jg
cld
mov
dec
mov
jne
es
pushl
sub
popf
hlt
inc
add
imul
jne
lcall
or
pop
das
push
pop
inc
loopne
stos
push
push
pop
fcoml
movnti
sbb
and
sbb
clc
dec
mov
std
xchg
ss
clc
jle
lea
std
aaa
fcmovu
jge
cmpl
jle
cmp
jne
mov
inc
jmp
push
jnp
ja
xor
xor
mov
xor
mov
xchg
sub
outsb
imul
mov
mov
mov
lret
sbb
loopne
inc
sub
adc
sub
xor
pop
pop
cltd
adc
pop
sub
add
xorb
push
xor
inc
jge
cwtl
cld
jns
call
jno
dec
cmpl
mov
push
orl
shrl
ss
or
cmp
pop
inc
sub
and
inc
aaa
cwtl
mov
pop
and
inc
pop
fstpt
add
mov
fdivrl
jge
call
movsl
mov
icebp
and
dec
xor
clc
flds
cwtl
push
and
xchg
cmp
je
inc
add
cmp
add
mov
sbb
imul
xchg
iret
js
add
out
adcl
mov
in
fmuls
std
jl
out
je
sbb
and
inc
and
es
adc
and
outsl
clc
or
push
xchg
mov
cmpl
push
pop
shll
lea
mov
cmp
pop
mov
push
cmp
jle
sbb
xor
les
adc
rcll
ret
andb
dec
pop
jle
adc
and
jns
mov
add
sub
xor
and
jo
push
adc
and
stc
push
mov
push
push
call
loop
aas
add
in
fdivp
int3
stc
clc
adc
movsl
and
inc
int
fidivs
add
sbb
inc
lahf
add
addr16
mov
dec
repnz
call
push
in
fidivrs
loopne
dec
test
and
xchg
mov
add
imul
adc
jns
fistpl
sbb
sbb
fstp
fistps
sbb
sbb
loope
jecxz
sahf
or
in
aam
inc
inc
inc
inc
xlat
fcomp
inc
inc
inc
inc
fcmovu
inc
inc
inc
inc
loopne
dec
sahf
inc
inc
loop
loopne
test
idiv
decl
int3
xor
je
cltd
cmp
sbb
lret
inc
sub
inc
xchg
movsb
dec
andl
xchg
out
nop
aam
mov
sbb
rcl
and
pop
in
sub
call
adc
cmp
and
andb
or
push
sbb
xlat
push
push
les
pop
stos
mulb
adc
or
and
jmp
and
js
jl
insb
inc
dec
mov
and
arpl
das
mov
pusha
add
cwtl
inc
push
add
sbb
or
adc
les
xor
shlb
xor
add
add
mov
xor
add
add
mov
mov
or
sub
addl
test
pop
add
mov
lahf
bound
push
insb
decl
push
fs
push
push
mov
jo
inc
outsb
jbe
outsl
outsb
xchg
sub
aas
jae
jle
nop
add
xor
lods
push
lret
sub
rorb
adc
cmp
jbe
or
add
add
inc
pop
mov
mov
dec
testl
jbe
jb
jb
ret
mov
imul
dec
outsb
das
fisubrl
push
call
adc
mov
out
insb
jae
dec
into
and
stos
add
xor
stos
and
inc
in
add
sbb
and
add
push
lea
lcall
shll
add
add
mov
or
xorl
daa
dec
mov
push
insl
xor
decl
enter
dec
xor
xorb
xor
adc
inc
les
cli
pop
cmp
icebp
pop
xor
mov
xor
xor
xor
xor
in
xlat
pop
loopne
mov
push
aaa
jbe
mov
xchg
aaa
stos
aaa
cmp
dec
in
cmp
mov
fistl
incl
jle
or
jl
mov
xchg
cmp
cmp
cmp
adc
cmp
cmp
cmp
jl
cmp
bound
inc
cmp
xchg
cmp
pusha
add
sub
lds
add
add
mov
and
push
adc
add
pop
push
ret
push
ud2
test
or
add
pop
rclb
xchg
xorb
aaa
outsl
jne
arpl
negb
add
or
add
pop
pushf
or
popa
call
add
add
add
and
dec
add
sub
jmp
rolb
add
pop
incb
add
add
insl
cmpb
stos
pusha
fwait
add
push
sbb
lock
frstor
add
insb
dec
mov
je
xchg
cmpb
pop
jb
add
pop
bswap
das
sbb
add
and
arpl
andb
mov
and
mov
sub
nop
fs
shlb
rclb
mov
cmp
or
and
scas
push
or
lock
adc
pop
and
leave
add
push
mov
xor
adc
outsb
inc
daa
dec
adc
push
add
daa
pop
inc
inc
add
add
add
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
