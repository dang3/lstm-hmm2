out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
pop
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
mov
ret
mov
inc
inc
test
jne
pop
xchg
pop
add
packsswb
jmp
adcl
cld
xchg
imul
ljmp
in
fadds
add
je
popa
imul
xchg
imul
popw
mov
jmp
or
roll
jg
xchg
or
pop
test
inc
add
leave
rep
mov
or
add
push
cmp
sysenter
pop
and
add
dec
inc
repz
inc
sbb
je
push
pusha
jno
sbb
pusha
pop
testl
and
leave
std
mov
jo
adc
das
pop
stos
push
mov
pusha
xor
push
add
in
lret
std
dec
push
mov
cmp
lcall
sti
or
inc
in
sub
inc
dec
shll
popf
sti
flds
pushf
lds
daa
into
pop
iret
and
leave
pop
pushf
popf
roll
rorb
popf
vpaddq
outsl
or
into
xlat
jp
jb
inc
mov
mov
adc
mov
in
and
or
push
insl
mov
cli
ud2
jno
mov
and
push
add
and
mov
fnsave
pop
add
push
cmp
outsl
lret
in
loope
outsb
inc
clc
je
jae
pop
sti
insb
jbe
add
in
pop
jmp
ud2
jg
xchg
mov
xor
xor
stos
push
into
data16
pushf
or
imul
data16
lods
add
sub
cmp
ljmp
fldt
inc
sbb
imul
cwtl
popf
adc
push
push
jb
mov
xor
sar
insb
fstps
jl
push
cmc
xchg
push
jp
cmp
int3
insb
xchg
xor
adc
ja
leave
aaa
inc
jl
in
xchg
xchg
in
in
out
pop
out
call
cs
in
or
out
and
pop
pop
lock
sarb
test
or
and
add
mov
pop
jecxz
or
pop
sub
cmpsl
test
sbb
mov
fs
dec
je
adc
add
jo
testl
adc
inc
sub
int3
add
movsb
test
add
andb
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
or
fldcw
mov
add
xor
or
add
cmpsb
imul
imul
scas
imul
sub
cmpsb
imul
sub
movsb
fidivs
into
ret
stc
dec
xlat
xor
add
mov
scas
inc
add
pusha
xor
daa
fwait
cmpsl
add
outsl
arpl
je
adc
lcall
xor
xor
xor
bound
push
jb
jbe
insb
gs
lcall
jae
gs
xor
pop
or
add
mov
jg
pushw
gs
outsl
imul
fs
adc
adc
punpckhbw
bound
gs
jne
arpl
xor
pop
imul
insl
fisubrl
fs
cmp
aaa
cmpsb
xor
jle
fwait
mov
mov
xor
push
cmp
cmc
pop
add
add
inc
dec
dec
in
lret
cs
insb
dec
push
push
dec
inc
dec
inc
adc
rcrb
enter
adc
stos
and
or
aas
or
add
add
dec
pop
nop
inc
nop
inc
xchg
int
mov
add
add
pop
mov
int
mov
decl
push
addr16
insl
and
outsb
outsb
outsl
je
bound
sar
sti
jb
outsb
and
inc
dec
push
and
fs
popa
pushl
sti
imul
cmc
jae
mov
or
jo
enter
out
cmc
je
out
adc
jp
jnp
arpl
sub
frstor
xor
cltd
in
cmc
xor
adc
cmp
push
imul
in
push
inc
adc
add
mov
mov
add
or
add
sbb
add
sti
add
add
pop
add
xor
and
xor
ss
pop
push
inc
adc
dec
pop
repnz
or
lock
pop
sub
ss
xor
pusha
out
imull
bound
pop
pushf
sbb
and
int
fs
je
push
mov
in
loop
jle
push
and
cs
push
push
pop
fists
jbe
and
out
dec
arpl
xor
jns
jp
je
mov
outsl
arpl
sti
mov
or
lods
and
bound
inc
pop
xor
ret
or
push
inc
sub
test
je
mov
cli
or
add
mov
stos
test
or
xor
mov
add
movsb
outsb
shll
add
pop
xor
shll
cmp
fs
xor
roll
int
jnp
fadds
pop
add
add
sub
push
pop
outsb
shll
mov
outsb
shll
or
fbstp
dec
pop
jl
imul
cmpsb
jmp
pop
inc
add
scas
lcall
push
inc
jns
cmpsb
imul
ret
jae
outsb
int3
add
xor
xchg
ljmp
add
or
pop
mov
je
mov
cli
imul
sub
ds
push
pop
fsubs
js
xchg
push
xorl
dec
xor
lcall
loopne
dec
incl
mov
pushf
popl
call
cmpsb
jmp
xlat
add
add
bound
sub
getsec
movsl
jmp
or
dec
outsb
je
jb
gs
fxch
fiaddl
pop
add
adc
sti
lahf
sti
push
gs
fs
sub
dec
je
jo
jne
jns
popa
out
mov
aaa
dec
jo
outsb
push
jb
adc
jno
inc
jo
dec
dec
inc
push
fucom
add
imul
inc
mov
fbstp
clc
lcall
dec
inc
push
push
inc
push
inc
pop
dec
adc
subb
pop
pop
jg
fistl
test
stos
dec
push
pop
inc
jne
jae
in
jge
push
push
push
jae
outsl
outsb
sbb
inc
pop
jae
inc
mov
nop
popf
jns
add
gs
or
lahf
xchg
sarl
flds
adc
sbb
pusha
xchg
or
add
enter
push
pop
pop
add
inc
test
repnz
mov
dec
and
add
xorl
and
testl
or
add
mov
gs
add
mov
push
or
mov
aas
push
pop
or
and
mov
add
test
adc
cltd
sub
push
xchg
xchg
inc
xchg
mov
ss
inc
test
add
ret
enter
push
inc
cmpsb
pop
sbb
and
cli
mov
pop
xor
ud2
push
add
sti
or
add
jae
push
minps
lcall
add
gs
sbb
pusha
pop
xlat
je
push
sub
add
sbb
decl
push
inc
jb
push
and
ja
or
push
mov
jae
mov
mov
cs
addr16
xor
push
pushl
sbb
mov
pushf
rol
mov
cmc
stc
cmp
add
jmp
int3
sub
xor
arpl
push
add
mov
jb
sbbl
arpl
push
sub
mov
and
arpl
nop
jnp
mov
shll
jp
push
push
aaa
ja
sbb
rorb
cmp
mov
das
add
cmp
test
ss
cmp
push
pushl
mov
jns
ja
je
aaa
ror
pop
jg
add
mov
jae
ja
inc
incb
add
pop
cs
std
lea
add
jb
arpl
popa
insl
gs
fildl
jnp
aam
outsl
jb
inc
popa
jb
xor
popa
jae
je
outsl
cs
jo
inc
mov
popw
dec
or
adc
adc
insb
jae
fdivr
mov
sarb
in
clc
ret
cld
mov
aaa
adc
ret
jle
movsl
mov
or
je
jne
call
adc
lea
and
mov
push
and
mov
lods
fimuls
pop
test
push
jg
adc
push
ja
sbb
cmp
call
pop
xor
and
mov
push
aas
ret
movb
or
pop
sti
fidivs
cmp
and
or
mov
lcall
and
mov
cmpl
sti
jg
sub
call
add
adc
rcrb
add
sbb
sub
adc
add
and
or
pop
sbb
sbb
push
xchg
pushf
or
xor
insb
and
pop
push
pop
xor
push
enter
add
pop
xor
inc
in
int
fnstsw
add
aaa
inc
inc
add
xor
imul
lret
xor
ss
test
add
ss
add
inc
cmp
inc
inc
lcallw
inc
inc
or
cmp
add
xor
xor
jnp
cmp
and
inc
add
and
lcall
inc
xorl
jg
xor
xor
fwait
imul
xor
sbb
adc
jnp
cmp
cmp
inc
insl
jnp
ja
xor
inc
xor
imul
inc
pop
xor
cwtl
xor
in
scas
jnp
inc
sub
aaa
xor
outsb
int
or
js
xlat
inc
xor
jae
mov
xor
shll
imul
inc
xor
fstcw
cmp
aaa
cmp
xor
pop
xlat
xchg
insl
cmp
xor
push
cmp
psubsw
fldt
xor
pop
xor
inc
fistpl
lods
inc
adc
cvtpi2ps
repnz
pop
jmp
xor
inc
mov
int
or
add
or
daa
mov
xor
push
xlat
push
lcall
inc
mov
xor
inc
xor
dec
shrl
cmp
test
or
jge
add
dec
push
lcall
xchg
addr16
ja
sbb
lcall
shll
xor
mov
cmp
aaa
and
or
pop
roll
aaa
add
sub
adc
mov
xor
stc
jae
cmp
mov
bndstx
pop
pushf
jae
iret
add
popf
xor
dec
pop
xor
and
xchg
mov
or
imul
cmp
popa
ljmp
xor
cltd
dec
in
leave
dec
xor
scas
xchg
test
or
inc
xchg
jmp
in
mov
psrlw
scas
xor
sahf
inc
and
int3
lods
mov
stos
add
das
in
movsl
add
or
loope
daa
mov
cmpsb
cmpsb
xor
xlat
or
xlat
insb
int
movsl
stc
xor
inc
inc
sbb
pop
jae
inc
inc
pop
cmp
pop
out
lret
je
jle
xor
leave
in
inc
and
out
inc
scas
jge
xor
cmp
and
fidivl
jae
xor
xor
dec
xor
dec
shll
cmp
dec
shll
and
inc
inc
inc
xor
je
xor
xor
xor
xor
xor
ss
cmp
inc
push
cmpsb
stc
xor
inc
inc
inc
mov
pushl
inc
inc
ror
insl
or
xor
mov
pop
aaa
push
aaa
xor
inc
xchg
jbe
xchg
fidivl
test
jb
in
xor
cmp
push
fsubl
xlat
incl
xchg
xor
xor
lret
xor
push
rol
mov
or
jo
or
bound
cmp
sub
adc
inc
xor
cmp
inc
dec
out
xor
sti
xor
xor
lret
xor
cmp
and
sub
lods
in
loope
or
or
add
repz
sub
sbb
pop
and
cmpsb
jmp
cmp
inc
push
cmp
mov
mov
inc
out
shll
ss
xor
xorl
mov
xor
xlat
mov
inc
inc
xor
and
inc
xor
or
xor
aaa
aaa
aaa
cwtl
data16
out
test
and
xor
repz
dec
dec
add
xor
sub
pop
mov
xchg
pop
cmp
xor
inc
lods
daa
xlat
aam
cmpsl
fiaddl
xor
pop
push
and
imul
ss
mov
loop
lods
mov
pop
rcrl
mov
xchg
cld
xor
dec
sub
aaa
push
jnp
insl
fisttpl
xor
gs
cmpsb
scas
jb
xor
cmp
je
inc
decb
and
inc
pop
inc
push
stos
mov
filds
pop
push
mov
inc
inc
sub
xor
cmp
scas
popa
xor
xor
lret
aad
aas
cmp
sbb
inc
psubsw
xor
sbb
or
xchg
cmp
insb
cmpsb
mov
xor
in
loope
adc
fcmovb
push
sbb
add
aad
sbb
fisubs
sbb
pushl
xor
lds
mov
inc
adc
xlat
add
xchg
jne
imul
xor
xor
gs
xor
into
je
inc
std
nop
inc
inc
iret
pop
add
ss
pop
dec
push
xchg
pop
or
jecxz
leave
les
xor
ds
es
in
gs
push
inc
in
ret
xor
inc
cmp
out
adc
xor
xor
inc
mov
and
adc
and
xor
repz
and
adc
push
cmp
js
adc
xor
mov
je
mov
adc
inc
xor
cltd
movsl
lretw
fstpt
inc
cmp
jae
je
subl
sub
lcall
ret
ss
inc
dec
rcl
cwtl
and
inc
inc
inc
movsb
imul
pop
jnp
xor
xor
dec
shll
inc
inc
iret
push
inc
dec
pushf
inc
ljmp
push
dec
lock
jmp
nop
pusha
or
cmpsb
fnsave
adc
inc
inc
cmp
pushl
mov
sub
xor
into
std
xor
ss
add
xor
ja
jo
fldl
or
lods
xor
imul
sbb
or
add
std
repz
loope
movsb
cmp
and
jno
scas
xor
fld
xor
ror
xor
nop
popf
adc
mov
xor
sti
add
sbb
xor
ss
and
in
scas
dec
pusha
repz
jae
inc
lret
add
or
cs
jge
pop
inc
dec
xor
popl
inc
sti
mov
inc
jae
jmp
xor
imul
je
mull
inc
inc
inc
shll
in
pop
cmpsb
imul
cmpsb
sti
inc
and
inc
xchg
xor
xor
xor
adc
call
outsb
add
jnp
les
iret
lahf
xor
push
adc
jb
sub
xor
pop
inc
lret
xor
or
and
scas
adc
pop
sub
xchg
leave
repz
ss
inc
xor
lds
and
sub
and
xorl
cwtl
mov
inc
stc
or
jne
xor
jmp
sahf
jb
movsl
jno
jp
xor
bound
add
test
aaa
mov
jmp
dec
rolb
jecxz
in
test
jecxz
pop
dec
xor
and
in
or
push
and
in
and
sub
mov
inc
adc
pushf
dec
pop
in
sbb
les
out
jl
xor
sbb
ss
or
lcall
pushf
jmp
xor
cmpsl
in
xor
jmp
xor
xor
mov
jno
test
or
sbb
test
popa
xor
ss
dec
xchg
xor
and
cwtl
int
shll
add
test
jge
mov
loope
fidivl
pop
jo
xor
cmp
xor
iret
insl
xchg
jmp
xor
rcl
adc
imulb
popf
xor
xor
ss
xchg
and
rcrl
and
cli
and
inc
inc
xor
xor
cmpsb
stos
xor
xor
xchg
and
sub
dec
inc
inc
incl
sub
sub
jne
pop
push
negl
cmp
push
or
xor
xchg
cmpsb
scas
adc
shl
aam
mov
inc
push
leave
insb
dec
inc
xor
inc
push
dec
aaa
inc
mov
adc
or
ret
inc
xor
and
movsl
cmp
add
push
xchg
jmp
adc
je
cmpsb
xor
add
xor
lcall
dec
push
iret
xor
xor
test
jmp
and
cwtl
outsb
in
in
inc
cmp
das
inc
cmp
jmp
push
jmp
and
xchg
aam
sub
jmp
inc
push
decl
nop
xor
adcb
or
mov
dec
inc
pop
movsl
xor
pushf
and
lret
or
iret
int3
push
mov
inc
xor
aaa
xor
ljmp
in
in
xor
outsb
leave
cmp
cmc
ss
dec
dec
repz
inc
xchg
xchg
cmc
xor
cmp
nop
dec
inc
cmc
xor
xor
imul
cmp
push
lods
adc
push
stc
adc
add
mov
and
jecxz
nop
or
incl
inc
int
cmp
imull
inc
movsb
mov
or
ret
inc
sub
xor
pushl
adc
lods
xor
cmp
mov
or
daa
inc
add
adc
sbb
mov
and
inc
aaa
repz
inc
push
cmp
insb
and
and
imul
cmove
or
pop
xor
fstps
or
lret
xor
cmpsb
lret
xchg
enter
and
mov
xor
arpl
inc
sbb
inc
ret
mov
xchg
xor
adc
xor
push
cmp
push
scas
pop
sub
sub
and
xor
ret
sub
and
ljmp
dec
push
push
xor
cmp
push
sbb
sbb
insb
cltd
stc
sahf
jmp
xor
jmp
negl
inc
inc
andl
in
sub
xor
and
mov
test
pop
std
lret
addb
sub
dec
xor
movsl
vmread
mov
in
cmovs
xor
insl
sub
mov
mov
enter
jmp
cmp
cmp
fnsave
inc
inc
rol
stos
and
aaa
push
fldcw
in
pop
mov
inc
aaa
inc
xor
push
lret
xor
inc
or
mov
adc
mov
testl
lods
data16
das
ss
mov
sbb
or
mov
inc
inc
inc
out
sbb
cmp
adc
xor
ret
sarl
inc
inc
inc
rorl
cmp
lcall
aaa
fs
inc
and
cmp
and
cmpsb
cwtl
cltd
xor
xor
mov
cmp
inc
xchg
lods
sbb
inc
addl
cwtl
push
xchg
inc
push
adc
xchg
pop
dec
rclb
es
inc
leave
popf
mov
dec
xrelease
ljmp
mov
dec
inc
stos
shlb
test
fstl
push
xor
leave
aam
dec
call
fcoml
mov
add
adc
sbb
les
xor
xor
or
cmp
push
sbb
decl
xchg
shll
test
push
adc
push
sbb
adc
mov
adc
fs
adc
push
incl
push
jb
ss
inc
lret
jg
sar
xchg
adc
adc
inc
xor
push
cltd
lea
adc
mov
loope
inc
pop
sahf
enter
cmp
inc
and
add
rolb
stc
dec
push
xor
inc
inc
xchg
jg
sub
xchg
mov
inc
push
xchg
or
cld
test
xor
cmp
sbb
sub
mov
mov
lret
add
das
sbb
mov
xchg
mov
lds
add
sbb
jnp
sbb
push
pushf
and
or
mov
fildl
xor
inc
xor
add
inc
cltd
mov
xchg
out
out
pop
jmp
das
xor
inc
insb
or
mov
test
or
push
aaa
and
mov
and
pop
adc
pop
lock
cmp
sub
xor
sbb
push
jmp
push
dec
or
imul
xor
xor
adc
inc
and
movsl
movsb
adc
cs
pop
sti
adc
inc
inc
xor
and
pop
push
inc
jnp
cmc
adc
inc
hlt
aaa
pop
xlat
or
cmp
xor
dec
ja
sbb
scas
sub
jecxz
aad
std
xor
mov
mov
xchg
dec
xchg
lret
in
xor
xor
int
xlat
sub
dec
loope
xlat
mov
addps
and
or
mov
mov
cmp
insb
add
pop
xchg
xlat
dec
inc
mov
adc
mov
aas
dec
shlb
or
inc
xor
add
add
add
and
lds
push
and
lods
sub
ljmp
mov
stc
xor
add
loop
ja
inc
adc
xor
inc
int
add
ss
jl
in
fimuls
xchg
in
xor
test
push
adc
aad
sbb
cmp
rolb
xor
sub
or
fwait
mov
gs
inc
xor
add
cmp
stc
inc
aad
xor
adc
in
std
inc
into
dec
mov
mov
push
cmpsl
out
sbb
push
sbb
loop
inc
repz
xor
cmp
inc
inc
inc
rorl
mov
popf
sbb
and
inc
inc
and
dec
shll
inc
inc
adc
inc
xor
ret
inc
inc
inc
fnstenv
xor
xor
xor
lods
imul
sub
xor
jnp
adc
pop
les
pop
inc
adc
cmp
sub
mov
shll
cs
or
jo
xlat
push
or
mov
sti
xchg
dec
loope
mov
or
movsl
pusha
add
or
xor
loop
or
loopne
xor
sub
call
add
in
dec
sub
xchg
jae
jo
cltd
inc
add
add
test
or
xlat
jmp
xor
sub
add
aad
movsl
out
mov
int
inc
in
xor
scas
xchg
mov
mov
mov
pusha
mov
pusha
daa
inc
loope
lret
adc
mov
fnstenv
fsubs
xor
daa
xor
xor
or
cmp
or
xor
inc
jns
mov
cmp
adc
stos
and
mov
lods
ljmp
fs
and
dec
pop
add
stos
and
push
pop
incl
inc
dec
push
xor
mov
and
sbb
jl
xor
mov
add
push
hlt
stc
pushl
adc
or
and
pop
frstor
xchg
inc
push
cmpsb
sbb
sbb
adcb
iret
data16
ret
add
aad
cmp
lcall
xor
push
out
arpl
jae
sub
push
mov
xor
xor
push
shll
inc
sbb
xor
mov
and
or
cmp
aam
jmp
xor
and
push
lret
orb
mov
xor
xorl
push
mov
je
xor
push
push
adc
aas
mov
cmp
mov
pop
scas
std
in
mov
into
mov
push
mov
pop
jmp
outsl
outsl
pushl
movb
call
xor
cmc
pushf
data16
rol
call
and
lea
jmp
mov
in
neg
push
inc
mov
frstor
rcrl
or
or
push
mov
mov
data16
in
in
outsl
push
sub
fs
jmp
lea
jmp
repz
loopne
inc
jb
jne
pop
outsl
outsb
gs
lock
inc
jbe
arpl
imul
loop
cmp
xchg
rcrl
xor
sti
mov
mov
stos
mov
into
icebp
testl
testb
cmp
popa
jb
gs
insb
popa
arpl
insb
addr16
push
popa
insb
aaa
push
aad
imul
jne
push
add
mov
inc
pop
pop
jns
sub
pop
add
insl
insb
gs
xchg
fs
adc
out
and
cmp
adcl
lret
pop
inc
jae
push
popa
outsl
inc
xchg
dec
mov
push
idiv
data16
and
lea
fimull
dec
cs
mov
cmpsl
lods
in
xchg
lret
push
jmp
shr
cld
mov
adc
in
sbb
pushf
fstpl
push
add
daa
adc
cmpl
cmp
jge
push
xor
mov
mov
or
roll
stc
pop
sti
std
fists
jl
cmp
pop
jae
mov
or
jmp
xor
fisttpll
adc
or
sbb
or
pusha
jns
pop
jge
testl
or
call
cmp
outsb
fists
or
movb
inc
jle
fcoms
dec
mov
push
call
pop
jne
mov
incl
shr
mov
push
shl
push
push
mov
mov
out
xor
mov
call
fnstcw
call
xlat
pop
lea
push
sub
push
lea
push
adc
fdivr
fwait
sti
mov
call
add
mov
jg
push
pop
mov
pop
pop
leave
ret
dec
inc
or
aas
addr16
add
pop
pop
shrb
cmp
sti
pop
sbb
bound
mov
push
push
movl
cmp
mov
dec
xor
mov
test
sbb
jne
xor
push
push
cmp
lea
or
fdivrs
cmp
sbb
je
cmp
fldt
sbb
sbb
and
mov
and
and
in
mov
or
inc
orl
xchg
mov
sbb
jmp
adc
and
jmp
sahf
std
pop
dec
add
add
or
xchg
vmovdqu
aam
jnp
cmpsb
inc
or
adc
in
call
shr
sub
mov
add
mov
leave
xchg
xor
push
cmp
ja
test
xchg
push
xor
clc
xchg
push
push
xor
inc
sub
je
dec
je
add
fcmovnu
xchg
in
aas
decb
jmp
adc
push
mov
movsb
cmp
and
decl
lcall
or
leave
adc
and
add
jns
addr16
push
repnz
jbe
or
dec
cwtl
mov
rep
or
cmp
fcomps
push
push
nop
mov
mulb
pop
sub
mov
mov
andl
push
push
xor
rcl
lock
inc
add
pop
xor
push
and
loopne
push
jne
popa
dec
in
add
inc
jmp
sarb
roll
sbb
in
sub
inc
add
sti
push
js
lea
pop
cmp
js
lds
sbb
jnp
mov
dec
out
in
negb
mov
psubusw
mov
ret
ret
test
out
int
push
outsb
inc
movsl
or
jp
int
fmull
or
add
mov
mov
cmpb
test
or
ss
cmp
testb
or
push
pop
clc
add
mov
int
mov
andb
mov
or
push
aas
sub
data16
ret
fstpl
mov
mov
nop
gs
add
and
dec
jle
je
add
je
add
xor
adc
add
add
test
xchg
jmp
bnd
add
and
push
out
dec
inc
and
dec
xor
adc
lods
jne
xchg
in
push
xchg
aaa
or
fldl
test
jne
cmpw
jne
mov
cmp
lret
and
mov
push
adc
and
push
xor
adc
mov
add
push
sbb
and
enter
jae
mov
push
pop
jne
or
push
ret
push
push
add
shr
mov
push
cmp
jg
and
outsl
add
jge
push
push
push
sbb
sbb
clc
sarb
and
pop
mov
xor
or
das
mov
fldl
in
sbb
lock
or
pusha
sbb
and
lcall
in
cltd
imul
lea
data16
fcomi
movsl
add
mov
movsb
push
sbb
or
notb
in
jle
mov
pop
mov
sbb
rep
subb
dec
dec
mov
int
adc
loopne
insb
in
movsl
xor
mov
mov
aaa
mov
dec
pop
mov
dec
and
fistpll
or
shll
push
or
sarl
push
mov
idiv
mov
add
not
xor
xor
inc
cmp
or
sbb
push
sbbb
jecxz
add
orb
jo
aas
inc
ds
xor
adc
xchg
mov
xor
adc
shlb
push
pop
in
inc
pop
jl
and
js
jl
ds
and
je
and
inc
xor
adc
xor
adc
add
sub
xchg
pop
and
xor
adc
and
add
dec
frstor
int3
or
cmp
sbb
fidivrl
and
pop
das
fs
adc
mov
insb
sbb
push
mov
cmpsl
fwait
in
addl
mov
addl
mov
hlt
mov
xchg
sbb
inc
add
test
add
sub
in
adc
adc
xchg
pop
int3
add
movsb
adc
imul
push
cmp
xor
outsb
jg
cltd
mov
add
addr16
in
fisubrs
xor
je
fiaddl
add
fcoms
jecxz
popf
cmp
mov
out
add
rdmsr
adc
repz
add
lret
hlt
jae
cmc
data16
int
sub
pop
clc
outsl
and
sub
rcrb
fs
out
fmul
shrb
dec
adc
mov
cmp
lea
push
fcoml
push
pop
ret
xor
mov
outsl
sub
cmp
jge
add
jle
ljmp
pop
adc
push
mov
cmp
dec
adc
shlb
call
mov
pop
je
test
cmp
movsb
mov
cld
fistl
push
and
jne
cmpl
daa
pop
sub
pop
test
cld
enter
add
inc
clc
xor
testb
jmp
andl
inc
xlat
sbb
addr16
inc
jbe
add
cmp
pop
fwait
mov
mov
cli
fwait
xchg
lods
jmp
xor
stos
cmpb
jne
data16
or
imul
mov
mov
cmp
or
mov
and
inc
mov
or
inc
cmp
jne
mov
clc
je
cmp
fwait
adc
push
or
movsl
fdivrp
add
stc
and
or
sub
psrad
mov
inc
dec
leave
or
or
jmp
add
and
inc
test
jne
or
test
je
mov
shr
lods
imul
xor
test
cs
and
sub
test
xchg
mov
mov
pop
rolb
fildll
loope
or
mov
and
xchg
adc
adc
test
lahf
fstl
pop
sbb
aad
push
cmp
fidivl
jne
or
adc
push
mov
fdivl
add
push
sbb
bound
sti
push
fstps
mov
and
jg
imul
mov
outsl
fisttps
xor
adc
rorb
and
lods
cltd
test
add
pop
pusha
out
je
add
sub
mov
and
sub
and
or
cmpb
inc
jne
or
jl
sbbl
pop
ret
jmp
mov
sbbb
inc
iret
insb
add
sti
mov
mov
shlb
aaa
ret
outsl
mov
fadds
xor
sub
pop
push
je
mov
add
cmpb
pop
and
cs
roll
popf
les
aaa
push
jmp
jg
mov
adc
add
xor
sbb
call
add
movsl
out
mov
pop
mov
idiv
adc
mov
call
inc
jmp
andb
mov
mov
das
mov
test
mov
enter
in
and
enter
sbb
cmp
fildll
add
cmpsl
sahf
adc
int3
es
and
test
lret
jle
xor
adc
adc
adc
jae
enter
cmp
call
xchg
cwtl
inc
mov
mov
cmpsl
pop
stos
je
jp
sub
ljmp
adc
jo
clc
filds
inc
cmp
jb
in
cmpsb
ljmp
rorb
orl
insl
lcall
or
inc
sub
and
or
out
outsb
sti
and
add
push
add
pushf
jne
adc
inc
jge
and
ljmp
shll
cmp
loopne
cmp
sarl
inc
pop
lret
enter
or
leave
je
inc
push
mov
lods
sbb
jecxz
sub
inc
mov
mov
jne
adc
sbb
repz
jne
fucomip
iret
jo
mov
add
loop
rcll
cli
sarl
mov
mov
jge
jne
xor
mov
pop
push
outsb
inc
mov
pop
pop
decl
stos
pop
call
inc
in
or
pop
jbe
or
in
aaa
mov
cmp
sti
not
and
push
jl
and
stos
sub
add
lea
mov
sbb
and
ljmp
add
push
hlt
mov
std
repnz
not
and
testl
mov
fstpt
shr
out
push
js
add
push
aam
jge
fisttpl
inc
fisubs
fimull
add
sti
lret
jg
lea
shr
shl
push
pop
inc
fstpl
outsl
sub
mov
and
not
cmp
add
aaa
xlat
psllq
mov
shr
mov
sti
or
repz
dec
daa
pop
jg
push
idivb
add
lea
sbb
mov
mov
push
push
icebp
jle
not
and
movsl
inc
pop
xor
and
mov
in
pop
adc
movb
jecxz
subb
repnz
xlat
loopne
fiaddl
mov
or
adc
test
mov
add
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
roll
sub
add
pop
push
in
mov
xor
add
sub
ret
push
fcom
add
fisubrs
mov
pop
fnstcw
pop
xlat
mov
repz
nop
imul
xor
lret
ja
fmull
or
xchg
jno
pop
fndisi(8087
popf
std
stos
lods
es
add
adc
fidivrs
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
xor
inc
cmp
sub
lods
mov
or
cmp
rorb
cld
pop
ret
popa
adc
add
or
pop
mov
mov
ret
add
and
aad
in
cmp
aam
pop
bound
sbb
xchg
and
stc
test
jg
testl
data16
in
or
fadds
hlt
push
and
outsb
mov
fdiv
push
pop
pop
es
inc
xor
adc
repnz
rorl
jne
and
stos
pop
mov
loop
mov
fsubs
out
call
mov
mov
out
hlt
pop
adc
call
xlat
lods
pusha
mov
mov
pusha
jo
in
cld
adc
inc
add
and
in
pop
and
xor
cmp
mov
fnstcw
out
movsl
shll
adc
scas
add
mov
shl
int
and
sbb
loopne
mov
mov
inc
enter
pop
and
mov
push
fbstp
inc
fimuls
int
cld
sbb
push
cmp
ret
and
gs
call
jns
adc
inc
loop
shr
or
xlat
lea
flds
fdivs
test
pop
mov
lock
aam
pop
in
mov
mov
daa
sub
aad
flds
outsl
pushf
mov
push
movl
xchg
dec
fisttps
sub
adc
or
xor
test
ss
cmp
sbb
leave
insl
mov
test
xor
mov
data16
cmp
or
cs
inc
js
js
lds
popa
popf
insl
adc
outsb
aaa
mov
inc
sti
xor
mov
repnz
outsb
cmp
cmp
std
mov
stc
jo
call
ljmp
fcmovnu
fs
mov
fimuls
lret
movsl
cltd
jb
repz
sub
int3
pop
pusha
dec
mov
xlat
xchg
in
cli
xor
lods
sbb
mov
out
push
fcomip
ds
mov
jle
sub
mov
out
testl
dec
out
mov
daa
mov
push
das
pop
dec
fimuls
test
out
aam
xchg
jae
adc
fidivs
pusha
cmp
pop
jbe
cmp
out
cmp
or
push
sub
mov
aas
sbb
cmp
rcl
fstps
in
jbe
les
in
pop
mov
pop
mov
ss
push
in
clc
jl
pop
je
clc
lcall
cmp
outsl
inc
gs
lods
les
cli
xor
mov
stos
sub
adc
stos
rcrb
sbb
push
ss
sbb
jl
fs
loope
int3
or
inc
push
or
movsb
mov
repz
and
jns
shlb
hlt
cmp
mov
or
adc
mov
xor
cmp
pop
pop
gs
sbb
outsb
fs
rcrl
gs
xchg
int3
or
push
or
ja
mov
lcall
hlt
out
call
insl
data16
unpckhps
sbb
repz
rcrl
test
sub
cmp
call
scas
dec
jle
outsl
jecxz
jp
sbb
addb
sbb
dec
outsb
repz
sub
jecxz
jp
ret
add
mov
add
in
fdivl
mov
outsb
sub
cmc
cmpb
lds
jp
xlat
sbb
ja
mov
xor
out
in
cmpsb
gs
mov
ret
iret
fwait
aam
rcl
sub
pslld
ret
loop
pop
mov
pop
rclb
xor
mov
xor
out
xlat
fnsave
cli
pop
add
pop
movsb
mov
inc
or
rcrl
lods
xor
pop
jns
cmpb
inc
js
cmp
sbb
in
dec
cld
cmpb
decl
jl
push
pop
sub
push
push
push
mov
mov
xchg
cmp
inc
enter
insb
xlat
dec
jno
addps
outsb
lea
icebp
lahf
jg
stos
jne
pop
inc
test
nop
iret
pop
pop
mov
mov
mov
into
ljmp
add
add
mov
push
dec
jne
bound
pop
ljmp
add
hlt
ljmp
jmp
cmp
je
mov
or
fdivs
mov
sub
jne
inc
cmp
jne
aad
fucompp
cmp
push
add
push
outsl
clc
or
and
push
xchg
jp
push
mov
stc
mov
mov
add
jg
adc
inc
cmp
or
out
shll
add
je
shll
aas
sbbl
mov
andb
fbstp
mov
jnp
dec
ffreep
dec
adc
lea
inc
js
mov
push
or
adc
decb
jmp
and
rep
pop
pop
push
mov
or
dec
sub
jne
push
loop
sti
out
lea
adc
add
push
addr16
and
add
mov
push
inc
cmp
sub
call
sti
pop
lcall
or
jmp
cmp
jbe
lea
pushl
push
testb
or
dec
cmp
out
or
testb
insb
lea
mov
lock
test
push
popf
mov
mov
mov
jnp
int3
push
loopne
pop
int3
cmp
pop
mov
add
fsubr
mov
lcall
and
ss
stos
imul
iret
out
outsb
push
or
call
gs
jl
out
das
lock
jo
hlt
gs
ljmp
lods
pushf
mov
mov
lock
xor
fisttps
mov
dec
adc
js
or
call
and
pop
xor
mov
mov
mov
lods
dec
ja
push
inc
fimuls
fmull
inc
or
push
jge
jae
pop
mov
call
mov
fistl
push
ds
push
xchg
pop
stos
push
jge
add
dec
out
push
jle
pop
cs
push
lock
icebp
inc
repnz
mov
jle
push
fmuls
pop
push
mov
push
push
cli
pop
add
in
xor
repz
sub
out
mov
or
push
enter
add
push
and
or
and
and
cltd
loopne
inc
decb
out
adc
push
cmc
adc
stc
fwait
test
cmpsb
xor
cmp
inc
flds
xchg
je
imul
or
sbb
or
xor
jo
inc
mov
or
push
xor
sub
pop
push
mov
adc
je
push
dec
xchg
loope
sub
aam
enter
cwtl
por
mov
inc
dec
mov
adc
popa
push
into
adc
mov
test
xchg
cmp
jne
cmp
add
and
out
push
adc
sbb
and
or
cmp
mov
jle
lock
hlt
push
shlb
lret
mov
dec
cmp
jmp
pop
call
imul
and
add
lods
fcmovnu
push
mov
xrelease
inc
jge
pop
jb
pop
mov
enter
push
in
jmp
inc
push
repnz
ret
push
in
cmpsb
pop
fstl
push
andw
loope
orl
xchg
outsb
insl
add
cld
pop
jb
and
sub
mov
rcrb
lock
cmp
mov
sbb
mul
sub
mov
dec
dec
pop
cmp
sbb
lods
jae
push
arpl
pop
ja
cmp
das
fsubrl
pushf
cwtl
test
mov
xchg
jl
jae
dec
mov
push
or
fs
push
pop
add
loopne
ficompl
cwtl
cmp
jmp
xchg
movl
das
cmp
push
mov
or
sahf
sbb
fcoms
jne
cwtl
int
btc
int
pop
clc
sbb
xchg
lea
cmp
clc
add
push
lods
es
and
mov
xor
mov
cmp
adc
clc
inc
mov
cwtl
mov
pop
cld
call
ja
xor
scas
js
mov
xor
dec
or
push
mov
pop
or
push
pop
into
in
shrb
xor
cmp
add
imul
pop
sub
xchg
jle
loope
cmp
dec
xorb
or
inc
add
mov
or
out
test
test
add
enter
mov
fstpl
rcrl
add
pop
inc
sbb
loope
mov
stos
int3
mov
mov
or
fcompl
mov
loopne
or
enter
test
or
fsubrl
pop
pop
mov
cmp
fadd
cmp
and
ret
sbb
inc
jmp
and
and
jl
jo
dec
ss
jle
test
xchg
mov
xchg
in
mov
xchg
scas
pop
sub
mov
and
std
mov
add
loopne
movsb
sbb
push
nop
push
xchg
add
mov
add
mov
and
fldenv
mov
xchg
push
cwtl
and
or
outsb
je
dec
mov
add
mov
fdivr
xchg
cmpb
mov
call
int
cmp
dec
mov
ss
pop
sub
adc
pop
mov
inc
mov
sbb
pop
add
fs
lods
std
or
mulb
into
xor
push
jl
iret
push
ljmp
jmp
mov
or
pushf
inc
fbstp
decl
int3
cmp
inc
lock
mov
std
gs
or
push
jo
mov
push
jnp
lods
jo
push
push
pop
dec
shlb
sbb
or
sbb
and
dec
sarb
in
sbb
outsl
add
ficompl
sbb
pop
call
call
jne
pop
mov
cmpb
dec
inc
call
pusha
cmpb
adc
cs
inc
fisubrl
xchg
adc
xor
jmp
dec
mov
aaa
and
xchg
shlb
mov
mov
test
mov
xor
push
sahf
mov
pop
push
push
pusha
stos
or
decl
pop
push
jne
sbb
jg
leave
lods
jb
pop
lods
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
mov
push
fsts
rcl
js
shlb
insb
jbe
mov
aam
aad
xlat
pop
fsubrs
fsub
dec
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
mov
or
ret
rol
shrl
xor
lds
mov
leave
lret
insl
cmp
hlt
xchg
push
xchg
ss
xlat
xor
cwtl
cltd
lcall
fwait
pushf
adc
sub
push
mov
and
movsl
cmpsb
xor
mov
es
cmc
div
xchg
or
clc
ds
hlt
cli
jns
aad
or
mov
pop
mov
pop
xor
or
stos
adc
pop
andl
jae
adc
rclb
scas
pop
aaa
xor
lret
pop
int
push
in
int3
jmp
lret
and
loopne
idivb
in
xchg
mov
xor
insb
mov
dec
rcrb
fstps
xchg
andb
adc
lea
adc
or
jg
lea
sar
in
push
inc
jge
movsl
leave
enter
adc
lahf
movsl
push
int3
push
pusha
shl
and
cwtl
into
movsl
into
imul
xor
mov
ret
sbb
daa
gs
lds
int3
fisubs
fldl
scas
nop
jmp
aaa
es
mov
fs
add
sbb
mov
adc
cmp
aas
mov
je
lret
jne
nop
repnz
sti
gs
push
pusha
mov
or
mov
add
lds
aaa
aaa
jno
and
call
or
fs
mov
and
mov
sbb
adc
fdivrs
lea
or
push
in
lret
shlb
lock
mov
inc
mov
mov
xchg
inc
adc
sbb
fsubrs
dec
les
aam
xor
add
bswap
pop
mov
mov
xorb
mov
inc
add
xor
or
mov
aam
mov
mov
ljmp
push
ljmp
and
add
or
push
fwait
andl
ja
add
push
mov
push
xor
int
repnz
ss
cmp
xor
frstor
adc
push
cmp
sub
add
push
xchg
addb
lods
mov
jle
add
mov
pop
lret
iret
loopne
sbb
lea
push
sbb
sarb
mov
cli
stc
cmpsb
jne
push
sub
in
movl
in
std
xchg
dec
aad
aaa
fsub
addr16
orl
xor
and
fwait
dec
mov
xchg
mov
mov
outsb
divl
cmp
bound
nop
out
lea
jae
fstpt
mov
push
mov
inc
jo
lock
cld
popa
xor
sub
mov
pop
add
aad
mov
adc
into
test
xor
adc
pop
adc
ret
jno
jmp
and
and
or
pop
call
jmp
pop
outsl
scas
xor
jge
fs
sub
cmp
out
dec
sbb
andl
mov
jbe
fcmovne
xchg
insb
fsubrl
loopne
mov
lods
jge
mov
ret
mov
pushf
les
xchg
call
adc
fldcw
js
pop
int3
dec
int
jp
shll
iret
imul
dec
shll
push
imul
mov
ja
fildl
sbb
mov
jae
xor
xor
pop
sbb
cli
sti
cld
std
insl
xor
mov
lcall
mov
add
sarl
xor
mov
outsb
shlb
pop
xor
or
enter
pop
lret
xchg
lret
insl
xlat
in
out
mov
jmp
ljmp
or
icebp
repnz
nop
loopne
jo
mov
fsubl
sahf
jecxz
cwtl
mov
addr16
pushf
and
or
push
fsubrl
mov
add
inc
sub
pop
fs
test
pop
push
hlt
xchg
add
mov
in
lock
xor
push
insb
pusha
or
lock
jmp
jecxz
dec
out
add
lret
aad
imul
imul
xchg
lret
in
outsl
out
ja
jne
repnz
imul
xor
adc
insb
insb
je
in
daa
addb
cmp
rclb
or
cmp
sub
loopne
cmp
out
mov
push
push
fsubrl
sbb
fldcw
dec
cmp
hlt
jae
shrb
pop
add
cmp
push
adc
adc
fs
sbb
cmp
das
inc
inc
in
loopne
ret
and
push
add
or
or
fiadds
push
ret
mov
pusha
mov
in
xchg
call
jge
cmp
jnp
and
and
jl
push
or
xlat
mov
retw
push
jnp
fistl
inc
pop
xor
hlt
in
mov
and
dec
sub
push
ret
fsts
push
adc
inc
insb
outsl
sub
push
or
jne
fcompl
sbb
and
out
pop
pop
adc
or
test
dec
jmp
jae
sbb
mov
mov
add
hlt
cld
inc
inc
cmc
jge
xchg
js
outsb
sbb
cmp
add
or
mov
hlt
push
jbe
punpckhbw
xchg
sub
movq
add
add
lds
roll
cmp
and
popf
mov
push
pusha
pop
jae
add
mov
pusha
ror
movzbl
jno
pop
frstor
mov
add
add
fsubs
dec
cmc
pushl
jg
mov
push
rol
rol
clc
add
das
aam
leave
neg
add
jmp
mov
xchg
jle
inc
mov
inc
arpl
adc
push
fcmovnu
sbbb
sub
clc
ror
dec
loopne
inc
mov
stos
add
mov
xor
rcr
pushl
pop
pushf
or
sti
subl
cbtw
pushf
clc
test
cwtl
jmp
jo
push
lods
fnsave
mov
mov
cmpsb
push
mov
pop
mov
dec
push
pop
call
add
dec
addr16
adc
daa
xchg
or
in
mov
xor
adc
data16
mov
sti
aas
sub
sbb
sub
xlat
cmc
push
enter
xchg
sti
dec
negl
adc
pop
push
adc
insl
mov
jmp
inc
pop
push
fwait
cmpsb
mov
test
lea
dec
in
call
cmp
sub
mov
sub
shl
popa
pop
lcall
and
sahf
lret
cmpsb
imul
xchg
dec
shll
test
stos
stos
lods
lods
pop
scas
pop
mov
lcall
jb
shll
mov
lcall
jns
dec
shll
mov
ret
cmpsb
imul
shlb
lret
cmpsb
imul
lcall
bound
lcall
mov
jo
outsb
cmp
pushf
and
imul
imul
popa
in
out
sbb
and
pusha
fs
xor
outsb
cmp
aaa
dec
roll
and
icebp
xor
cmp
call
xor
sbb
call
cmpb
adc
mov
push
or
movsb
sbb
lea
sub
push
push
scas
out
iret
inc
sub
adc
mov
fsubs
nop
xchg
push
adc
push
shlb
fisubrs
mov
or
mov
adc
je
insb
add
cwtl
jno
mov
and
bound
dec
int
orb
pop
sti
pop
out
scas
jle
adc
jmp
adc
pop
or
xor
arpl
pusha
ss
jge
or
lock
inc
call
jmp
jmp
test
hlt
or
cmp
repz
push
push
xchg
push
sbb
rorb
mov
push
fsubrl
dec
pop
and
jo
data16
sbb
mov
or
inc
xchg
iret
push
xchg
mov
enter
mov
sbb
bound
mov
mov
xor
xlat
fdivr
inc
fldl
lea
push
push
push
shlb
jne
jle
xlat
adc
es
les
aas
sahf
mov
xlat
imul
or
lock
adc
mov
pusha
ds
cwtl
cmpl
jbe
loope
fidivs
xchg
ss
shr
jnp
movsb
inc
adc
stos
sbb
sbb
pop
add
jo
or
jbe
nop
addr16
push
hlt
hlt
insb
mov
fidivrs
hlt
push
fs
xor
mov
inc
add
cwtl
insl
dec
push
aas
inc
clc
outsb
mov
mov
sbb
orl
or
adc
leave
push
clc
in
mov
adcb
pop
aam
out
popa
dec
call
aaa
add
rclb
in
push
pushf
das
daa
and
daa
jmp
xchg
inc
add
cli
push
test
fldl
mov
xchg
push
xchg
push
adc
imulb
dec
call
jl
adc
fisubl
or
loopne
inc
push
mov
lods
push
adcl
mov
insb
scas
sbb
jge
arpl
in
popf
cld
cltd
xchg
sar
xchg
mov
and
lcall
jl
mov
nop
inc
mov
and
leave
pop
jle
xchg
iret
leave
std
std
mov
loop
add
inc
mov
loop
mov
in
inc
mov
xor
jo
outsl
mov
and
call
and
adc
add
mov
ret
call
add
cmp
in
push
pop
clc
loopne
sub
sti
mov
fbstp
cmpl
movsl
out
je
add
push
sar
mov
xor
push
push
or
outsb
add
fdivrp
lds
push
inc
sti
sbb
pushf
xor
daa
push
sbb
pop
fidivrs
jp
push
ds
lcall
test
and
mov
sub
mov
outsw
outsb
je
push
mov
and
ret
dec
arpl
subb
jno
pop
or
ret
test
sbb
jne
fadd
negb
mov
aaa
adc
mov
adc
mov
pop
and
inc
or
sarb
fs
outsb
insl
addr16
int3
out
jb
xor
xor
or
movsl
cs
gs
js
es
add
jb
lcall
cld
cwtl
sbb
dec
pop
jg
lods
dec
cs
loopne
dec
pop
call
and
push
shll
xchg
mov
icebp
adc
je
add
mov
data16
and
in
xchg
sub
arpl
mov
dec
adc
aaa
fwait
rsm
pop
pop
ret
jle
pusha
push
adc
jle
repnz
dec
xor
adc
xor
adc
cld
inc
in
xor
adc
adc
xchg
test
sbb
fcmovne
mov
xchg
push
stc
mov
fstl
and
push
jae
xchg
jbe
push
xlat
and
push
inc
sbb
jp
sub
je
pop
or
pop
push
push
pop
pop
hlt
adc
cmpsb
cmp
in
push
adc
push
fdivrs
cmc
es
fidivs
push
push
imul
adc
push
mov
cld
inc
sub
adc
sub
test
adc
or
pop
sub
sbb
or
adc
jnp
popf
push
inc
out
into
mov
ret
data16
inc
jns
add
sarb
mov
out
mov
aaa
mov
push
mov
cmp
ffree
add
int
xchg
aas
scas
lds
xor
push
sub
or
add
rcl
fcomps
cmc
gs
fsub
call
pop
add
mov
mov
add
loopne
jp
mov
mov
outsb
sbb
jge
rcl
ret
mov
testl
and
add
scas
daa
and
mov
insl
cs
mov
les
xchg
adc
gs
and
pop
jb
dec
mov
and
aam
stos
hlt
mov
sub
cmp
stc
dec
inc
pop
js
jnp
mov
fildll
into
idiv
jle
jne
cmp
test
and
in
xor
mov
sub
adc
inc
notl
filds
ljmp
sbb
or
lcall
arpl
pop
sbb
push
ret
adc
lock
shlb
add
or
fwait
sub
test
popa
fsubrl
jp
pop
push
xor
push
push
push
dec
lcall
dec
inc
push
gs
xor
shll
imul
jne
cs
call
sub
dec
outsb
je
push
jb
mov
lcall
push
movsl
cmpsb
int
fnstenv
cmpsl
push
gs
add
lods
xchg
dec
je
xchg
gs
je
dec
jo
gs
andb
lea
insl
xlat
int
jne
fwait
shrb
roll
fwait
cmpsb
imul
pop
shrl
mov
gs
inc
push
es
insl
shll
xchg
inc
push
dec
mov
lret
cwtl
js
lcall
xor
fcompl
fstl
xor
xlat
loopne
loope
loop
in
sub
dec
in
ds
mov
scas
fnstenv
dec
mov
mov
lgs
mov
pop
mov
xlat
add
shr
negb
mov
je
sbb
sbb
out
sbb
pop
or
clc
lret
inc
cmpsb
repz
mov
add
aaa
xchg
js
add
cs
push
push
nop
pop
jne
cmp
push
mov
inc
lret
pop
mov
inc
jne
test
dec
cmpsb
mov
pop
inc
stc
xchg
das
jmp
mov
sti
je
push
adc
mov
adc
push
adc
adc
imul
xor
imull
or
movsb
or
cwtl
xchg
shl
push
sbb
or
test
ret
and
push
dec
push
pop
cs
popa
or
add
add
rcrb
or
push
adc
enter
sbb
clc
imul
fwait
sbb
cmp
stos
mov
addl
adcl
ror
or
bound
cmp
push
jbe
mov
loopne
call
push
inc
cmp
jb
lret
xchg
sub
aas
mov
jmp
adc
sub
pop
mov
add
call
mov
or
imul
add
hlt
je
test
clc
iret
push
or
xchg
sub
pop
lods
lret
lahf
loopne
mov
loopne
pushf
out
pop
mov
cmpl
and
mov
call
mov
test
mov
dec
or
push
data16
jge
mov
ret
fidivs
clc
shld
inc
out
out
inc
jmp
shlb
fldenv
ret
stc
sub
pusha
cli
push
test
xchg
cmp
and
loop
pop
popf
push
add
cmp
cmp
pusha
mov
je
clc
cmp
mov
xchg
or
adc
sub
call
jns
add
test
xor
inc
stc
inc
sti
stos
test
das
mov
fdivrl
push
sub
xchg
add
mov
push
sbb
fldcw
pushf
pusha
repz
pop
fstpt
xchg
cwtl
or
inc
add
or
inc
mov
adc
adcl
sbb
inc
mov
push
pop
cld
or
adc
mov
out
call
insb
loopne
pop
dec
fwait
xor
aas
push
es
mov
pop
popa
arpl
insb
lcall
shll
jae
sbb
xor
jne
and
push
mov
outsl
add
jmp
cmp
cltd
data16
insb
js
rcrl
pop
adc
sbb
push
sub
adc
or
dec
inc
iret
pcmpeqd
and
fcmove
imull
scas
neg
sbb
add
pop
fs
sbb
in
in
pop
mov
std
or
sub
icebp
or
popa
mov
lret
mov
je
outsl
outsb
lret
mov
lret
cmp
insb
xchg
mov
outsl
arpl
and
sti
cld
in
push
add
sub
push
pop
adc
mov
mov
je
sbb
cmpb
xor
push
ja
pop
pop
mov
sbb
imul
in
insb
xor
mov
jnp
pop
jge
lods
sbb
enter
cmp
add
adc
push
mov
inc
ss
pop
jge
mov
rolb
fwait
add
paddusw
ss
lret
sub
rorl
adc
mov
lcall
push
push
mov
add
icebp
xchg
outsb
push
mov
pop
fsubl
hlt
adc
mov
dec
adc
xor
hlt
shlb
cmp
sahf
dec
adc
data16
icebp
insb
dec
mov
and
add
lods
mov
je
lds
cmp
or
sub
dec
js
addl
inc
divb
aaa
adc
pcmpeqb
sbb
adc
mov
jl
push
jle
adc
adc
inc
pop
jbe
shr
or
jns
scas
cmp
sub
inc
gs
jmp
aas
adc
xor
cmp
in
xor
add
std
push
stc
push
pop
mov
test
adc
add
cld
sti
mov
cmpl
jne
scas
push
jmp
iret
lea
mov
xor
pop
das
add
and
enter
stos
jle
or
imul
push
dec
xor
push
or
cld
pop
push
inc
jns
clc
push
pop
push
adcb
in
in
push
das
mov
sti
xor
fcompl
lret
cmpl
mov
mov
dec
push
or
add
adc
pushf
cld
dec
inc
es
jae
call
mov
push
es
sub
inc
add
pusha
lret
mov
lret
aas
popa
arpl
sub
mov
outsb
cmp
shll
cmpsb
imul
dec
shll
xchg
andb
xor
rorl
mov
imul
cmpsb
imul
aaa
mov
shrl
push
rcl
addr16
popa
arpl
leave
mov
imul
mov
push
loopne
loope
jns
lcall
out
and
call
ds
mov
ret
mov
jb
jp
outsb
mov
xor
jo
je
and
mov
add
sti
jmp
cmpl
or
jmp
mov
jl
adc
std
or
push
adc
outsb
je
jbe
notb
stos
and
adc
mov
out
repnz
jg
orb
push
js
lea
pop
cmp
xchg
test
mov
fadd
sub
fcompl
lods
or
rcll
nop
cmpsb
jo
and
pop
xor
stc
cli
sti
cld
jmp
pop
xor
mov
cmpsb
outsl
mov
sbb
cmp
mov
cld
loop
mov
pop
enter
xchg
sub
mov
sbb
xlat
or
mov
fsub
leave
enter
sub
movsb
stc
insb
jb
sbb
mov
mov
fbstp
je
cmpl
mov
cmp
mov
test
mov
push
mov
mov
xor
jmp
jecxz
jnp
jecxz
rcr
call
popa
mov
mov
add
cmp
jmp
faddl
call
jmp
loop
adc
add
pop
jge
sbbb
or
mov
leave
pop
xlat
push
sbb
call
sub
cwtl
mov
daa
cmp
loope
or
dec
loopne
ds
dec
xor
in
dec
dec
dec
or
imul
insl
imul
cmp
movsb
jae
enter
leave
cs
push
jo
xchg
bound
repz
jns
add
ret
dec
mov
sub
or
and
into
cmp
popa
push
jmp
arpl
outsb
push
imul
fs
push
push
mov
repnz
sub
rclb
daa
and
pop
push
add
jg
ljmp
dec
push
or
sahf
insb
leave
popa
xor
shll
gs
outsl
sbb
dec
shll
outsb
mov
push
jle
sbb
pop
scas
inc
mov
cmpsl
pusha
pop
fiaddl
xor
les
mov
clc
call
in
aam
enter
insl
push
inc
jp
jmp
jmp
inc
and
cmp
movb
inc
sbb
std
or
movsb
jp
adc
mov
mov
pop
mov
xor
cmp
addl
lods
fsubs
loope
push
jne
push
ljmp
data16
push
and
and
add
jb
or
push
xor
mov
inc
lret
rol
mov
add
pushf
sbb
mov
leave
shl
adc
add
mov
rcll
popa
dec
push
shrl
cmp
loop
hlt
movsl
movsb
loope
hlt
sti
js
and
iret
inc
inc
sub
fwait
cmp
inc
xor
push
das
cmpsb
adc
sbb
sbb
ljmp
jb
jb
adc
push
movsb
int3
xchg
adc
in
xorl
movzbl
pop
clc
imull
enter
cli
push
aad
xor
cmp
push
inc
sub
inc
popf
inc
scas
jle
and
call
clc
add
add
push
popf
insb
add
sbb
dec
push
or
insb
lock
popa
pop
repnz
hlt
cs
fs
insb
inc
rorl
inc
inc
je
fs
pshufw
push
dec
outsb
outsw
cmp
dec
aad
sub
mov
dec
out
icebp
jne
add
and
xor
orl
lds
test
sub
dec
push
dec
inc
push
sbb
xchg
inc
xchg
xorb
loopne
bound
daa
sbb
sub
mov
stc
aad
and
or
es
cmp
mov
xchg
aas
in
arpl
insl
in
sbb
add
movl
roll
sub
jne
iret
push
pop
lea
imul
jle
fmuls
mov
dec
das
cwtl
jnp
cmp
cmp
leave
ss
shr
dec
push
adc
sub
add
int3
sbbl
pop
xor
xchg
dec
sbb
lea
or
lea
insb
inc
gs
sbb
scas
rcll
add
mov
dec
add
enter
shrl
fsubl
dec
aad
push
gs
adc
data16
gs
xchg
gs
jb
pop
dec
xchg
gs
xchg
imul
xchg
gs
data16
push
arpl
pop
xchg
outsl
ja
push
in
addl
push
lods
bound
jae
gs
xchg
insl
pop
dec
push
dec
inc
or
push
jns
add
mov
stos
mov
mov
ret
push
int3
add
fwait
xchg
or
out
insb
jl
cld
mov
int
les
cs
push
pop
xor
call
mov
mov
fwait
cltd
mov
dec
movsl
adc
mov
in
sbb
adc
xor
mov
mov
push
push
add
les
outsb
shll
mov
test
or
pop
loop
in
pop
lods
add
lcall
pop
sarb
mov
add
dec
loopne
add
dec
adc
inc
ds
imul
shrb
mov
cmpsl
mov
mov
testb
ds
aad
sbb
movsl
jnp
inc
dec
mov
sbb
mov
lods
div
movb
shrb
popa
fisubrl
fcmovnbe
sub
shlb
push
fnsave
shrb
loopne
rcrb
and
jae,pt
sub
leave
in
or
mov
shlb
mov
fildl
adc
jmp
mov
aaa
jmp
pop
push
xor
popa
imul
sub
xor
mov
arpl
imul
xor
inc
sub
into
mov
dec
imul
std
leave
inc
mov
rcrb
jp
push
data16
gs
xor
xchg
inc
ror
cmp
in
mov
lret
sub
fs
ja
and
into
arpl
in
rcl
lcall
mov
je
sbb
in
xchg
and
sbb
sbb
imul
push
sbb
mov
inc
imul
xchg
imul
in
fs
outsl
jo
dec
dec
xchg
out
jno
jns
jae
pushf
lea
jne
jbe
sbb
loopne
ret
sbb
mov
movsl
fs
mov
mov
mov
mov
mov
ffreep
ret
daa
add
les
sub
or
and
or
or
sbb
lcall
movsb
jb
pop
sbbl
pop
lcall
inc
mov
pop
lcall
pop
lcall
mov
and
popa
sbb
js
jb
arpl
lcallw
mov
push
ja
outsb
lret
mov
jb
pop
scas
popa
scas
jae
lea
mov
mov
outsl
pop
mov
cmp
outsb
push
inc
sub
insb
lea
add
sub
call
test
les
xor
fmull
mov
sbb
setnp
sbb
pop
mov
dec
leave
sbb
push
add
or
rorl
push
addb
xchg
xchg
adcl
call
pop
xchg
jmp
sub
ljmp
mov
jp
push
in
cli
int3
stc
sahf
push
add
jmp
xchg
xchg
cmp
std
xchg
sbb
loop
loopne
fsubs
xor
rclb
imul
jne
jmp
dec
dec
xchg
insb
jmp
in
out
mov
sahf
xor
out
ds
xchg
xchg
outsb
in
dec
sar
roll
rorb
imul
stc
in
xchg
arpl
stc
xlat
stc
fdivr
jecxz
cmp
stc
push
cmp
mov
adc
mul
in
mov
clc
fdivr
push
jb
xchg
cld
aam
aad
xor
dec
fdivr
fsincos
orps
jno
cld
cmp
and
adc
notb
adc
test
ret
testl
in
mov
test
adc
or
fs
ja
shrb
or
je
mov
insb
mov
mov
fxch
data16
sub
shrb
popa
mov
pushf
pushf
mov
leave
rorb
sahf
dec
insl
leave
rcrb
mov
mov
popf
sub
enter
imul
aad
or
xchg
pushf
pushf
pushf
pushf
dec
xchg
cwtl
cltd
lcall
test
imul
mov
mov
pushf
pushf
pushf
sub
mov
pushf
fwait
mov
cmpb
adc
clc
lock
add
fdivr
fst
cli
lret
jns
fdivr
mov
pop
test
add
xlat
mov
in
push
cmp
pushf
mov
aaa
popa
add
cmp
popa
pop
mov
sub
aas
pop
test
mov
hlt
push
insb
or
lock
cmp
hlt
inc
push
hlt
ret
push
nop
clc
js
add
jge
or
loopne
dec
xchg
call
out
jne
lea
js
or
popf
jns
xchg
push
lds
call
push
hlt
push
insb
cmp
jle
neg
mov
or
add
jg
inc
cmp
mov
call
test
aaa
rep
loop
cmc
dec
mov
mov
push
jb
xor
in
cli
or
push
cs
fidivs
loope
imul
dec
shrl
insl
outsl
fs
lds
in
call
push
fwait
add
push
or
push
sub
push
in
inc
xchg
rorb
ja
push
pop
push
push
fisttpll
movsl
clc
mov
xorb
cmp
cld
aas
jmp
inc
mov
pop
mov
add
ret
inc
nop
and
andb
in
add
sbb
test
aas
add
cwtl
mov
enter
into
inc
pop
adc
mov
mov
test
add
movsb
loopne
xorl
push
test
inc
pop
daa
mov
mov
icebp
dec
mov
roll
mov
lcall
pop
push
js
jns
dec
aaa
add
sbb
push
push
xchg
divb
jns
repz
sub
jb
lret
aaa
cli
jge
out
sub
mov
call
pop
jbe
stos
mov
or
cltd
in
movsb
movsb
divl
stos
aaa
xor
xchg
test
negb
push
push
push
cwtl
adc
jae
add
sbbb
in
or
rolb
inc
xor
cmc
pop
push
mov
push
sub
fs
in
shrd
sub
push
add
icebp
faddl
cs
xor
sti
mov
cmpsl
xchg
loop
sbbb
mov
test
push
sub
push
mov
je
leave
jb
outsl
jo
je
jl
test
inc
inc
aam
test
inc
cmp
loopne
dec
cmpsb
fwait
dec
and
pop
sub
and
mov
movsl
adc
add
or
lcall
push
add
pop
add
adc
cmp
sub
out
xor
or
jg
out
and
or
call
ss
fs
jnp
mov
data16
out
je
push
fwait
jnp
test
push
push
and
inc
sub
pusha
push
push
mov
xchg
sbbb
out
mov
jnp
xor
cmp
cmc
and
fstl
jmp
inc
add
fsubrl
mov
sbbb
pop
add
ss
add
sbb
jnp
push
push
lods
add
xor
or
jp
clc
inc
out
lods
out
scas
push
and
fs
pop
shlb
adc
fmuls
push
sbb
ds
cmc
or
push
mov
and
call
pop
dec
pushf
mov
inc
call
inc
mov
adc
fsubrs
push
or
ja
or
cld
aas
cld
add
sbbb
or
dec
jg
mov
jmp
cmp
jl
cmp
adc
sub
mov
in
mov
sbb
fs
cmp
fisubl
jge
les
negb
js
add
mov
rorb
xor
or
sub
outsb
xchg
xor
sbb
add
arpl
dec
fbstp
pusha
cli
sahf
add
mov
or
or
outsb
cli
inc
xchg
add
outsb
xchg
or
comiss
jno
jne
xchg
inc
xchg
cwtl
ds
ss
in
in
and
loopne
push
mov
shlb
shlb
and
push
cmp
int3
sbb
rclb
jge
int
pushf
push
cmc
in
cmc
arpl
mov
xor
gs
xchg
gs
outsb
popa
insl
sub
mov
jl
jns
outsl
mov
lret
mov
fs
arpl
imul
les
adc
sub
lea
or
push
ret
in
adc
push
inc
jmp
mov
sti
je
pop
jecxz
jb
add
jle
jmp
cmp
clc
pusha
mov
xchg
pop
mov
or
jb
pop
jae
dec
inc
mov
push
push
mov
scas
add
or
xchg
popf
mov
negl
mov
xor
sbb
push
mov
mov
jne
int3
mov
cmp
sarl
inc
fwait
sbb
pop
jne
dec
out
imul
push
dec
cmp
mov
lea
adc
rcrl
sbb
and
insb
gs
insb
ja
cmpsb
mov
es
mov
flds
xor
push
addr16
cwtl
aad
or
ljmp
andb
sub
push
fisttpll
push
iret
pop
push
ss
or
or
or
jae
mov
and
das
jmp
scas
sbb
data16
adc
or
pop
pop
xchg
and
mov
cmpsl
push
add
nop
mov
cmpl
test
inc
sbb
movsl
dec
adc
cmp
call
sub
outsl
std
loop
cmpb
js
cmp
add
cmpl
adc
dec
jb
dec
or
imul
push
jl
push
or
mov
lds
add
mov
add
inc
mov
jmp
inc
dec
sbb
mov
sbbb
sbb
je
and
push
sbb
add
and
pop
cmp
add
movl
adc
aas
add
jno
mov
push
aad
sbb
das
roll
int3
in
inc
jno
add
add
ja
cmp
mov
roll
lea
shr
jle
movzwl
mov
jne
daa
add
add
test
je
cmp
jne
outsl
or
je
adc
addr16
lar
popf
fldt
data16
lock
pop
or
sub
insl
das
add
ss
adc
sub
lcall
int3
outsb
adc
mov
stos
push
mov
mov
add
jmp
or
push
std
inc
je
repz
pushl
jno
push
call
fmuls
dec
adc
out
push
in
or
mov
adc
iret
pop
aaa
cld
ret
sbb
lea
pop
mov
incl
cld
add
push
scas
clc
add
sub
push
mov
sub
andb
mov
aad
inc
mov
sbb
sbb
ja
dec
cmp
test
jle
sbb
sbb
push
call
inc
aaa
fwait
lahf
inc
aaa
pushl
lahf
pop
xor
cltd
lret
xor
jecxz
shrl
nop
mov
or
push
or
test
adc
sub
cltd
pop
ja
cltd
cld
les
jno
shll
fcomps
jge
and
ret
ja
inc
inc
ja
xchg
inc
mov
sti
lea
testb
je
pop
inc
sub
and
jmp
and
adcb
gs
xor
js
cmp
jbe
clc
test
xchg
clc
shlb
out
enter
push
adc
and
rcll
inc
jp
loop
cmp
sbb
daa
shll
sub
mov
pop
inc
arpl
jo
pop
or
and
sti
jmp
and
lahf
push
loopne
shl
sahf
leave
mov
lret
gs
insb
outsl
iret
and
gs
js,pn
and
xchg
sbbb
push
and
sbb
or
mov
add
pop
mov
dec
mov
scas
rcrb
cmp
cmp
outsl
or
je
addl
sbb
jb
mov
xchg
pop
rcrb
pop
rclb
gs
or
or
sub
inc
sbb
pusha
scas
sub
xor
faddl
pop
mov
pop
xor
lcall
rclb
aad
stos
orl
or
stos
pushf
sub
cltd
stc
jno
lods
adcb
sbb
pop
push
sbb
jl
xchg
fnstcw
call
pushf
je
adc
dec
mov
dec
rcrb
and
mov
push
push
call
inc
jno
jg
pop
pop
call
or
call
jp
sti
dec
push
sbb
add
or
out
inc
test
je
sahf
jbe
fcomps
xor
fldcw
jo
cwtl
xchg
bound
mov
add
iret
cmp
call
mov
push
addl
pop
push
jno
or
cmp
cmpb
scas
push
mov
daa
inc
adc
mov
fisttpll
outsl
nop
pop
ret
jle
push
int3
clc
push
add
lock
or
adc
movl
mov
ret
cltd
add
push
and
or
orb
jecxz
iret
inc
or
aam
dec
or
inc
cmp
jl
ficompl
js
jecxz
xchg
daa
mov
mov
push
ds
or
ljmp
and
inc
and
dec
push
stos
arpl
inc
inc
outsl
outsb
imul
addr16
inc
cltd
inc
mov
mov
add
lea
cmpl
popf
in
je
adc
ds
popa
sub
push
andl
gs
lret
xor
je
cmp
mov
popa
jns
push
sub
je
repz
aad
push
and
cld
push
or
ret
xor
sti
rorb
cmp
xor
les
ficomps
mov
ja
out
out
add
push
xlat
xchg
adc
into
adc
adc
roll
push
mov
mov
lea
mov
adc
test
inc
xor
xor
ja
mov
and
xchg
aas
push
mov
jle
call
mov
add
or
lds
and
pop
add
lock
gs
js
insb
gs
xchg
outsl
jb
jb
adc
pusha
xchg
gs
in
jnp
and
test
push
sub
sub
cld
shlb
ret
call
iret
or
xchg
enter
xchg
std
leave
std
call
mov
stos
call
mov
sbb
push
jno
mov
ss
add
pop
mov
or
pop
xor
push
sbb
inc
push
push
adc
imul
or
inc
mov
xchg
mov
lock
shlb
in
and
mov
sbb
fildll
pop
dec
cltd
nop
xchg
mov
sub
push
or
dec
push
or
movsl
mov
sub
xor
xor
xchg
cwtl
xor
xor
pushf
mov
xor
aam
int3
add
enter
and
inc
add
enter
xor
push
and
or
repnz
flds
mov
adc
in
pop
mov
mov
daa
push
or
dec
xlat
or
add
add
push
lods
pop
pusha
enter
xor
int3
mov
cmpsb
jmp
sub
xchg
cli
add
aas
adc
mov
cmp
call
arpl
gs
js
gs
mov
xchg
jb
and
dec
outsb
imul
jg
mov
gs
jb
arpl
push
sub
add
dec
gs
jbe
je
gs
inc
add
imulb
jae
pop
bound
push
push
xor
js
push
inc
mov
sysenter
add
inc
sti
jae
mov
sub
outsl
aas
and
add
int3
adc
jmp
inc
xor
mov
in
push
jb
mov
popa
imul
outsl
dec
xchg
jb
aas
push
outsl
outsl
insb
push
push
outsb
popa
jne
jbe
jo
push
push
and
je,pt
sbbl
dec
ss
push
hlt
mov
inc
insb
mov
rcrl
xchg
push
arpl
push
std
add
jnp
inc
add
or
sbb
fs
adc
std
fildl
adc
dec
outsl
lods
dec
imul
dec
pop
movq
push
pop
mov
add
sub
rorl
pop
inc
jns
add
sbb
xchg
or
and
int
fwait
imul
jb
dec
into
add
adc
mov
mov
mov
lret
ja
inc
sbb
int
and
push
push
int3
push
shl
gs
xor
fsubl
adc
into
push
adcb
ret
xchg
push
loope
es
in
jo
push
addr16
repz
inc
les
lcall
int
fisubl
out
daa
jno
pop
sub
pcmpeqb
and
pusha
xchg
push
ret
push
das
clc
add
push
add
sbbb
push
je
mov
sbb
je
mov
cwtl
mov
pop
sub
dec
cmp
sub
push
fsubs
mov
xchg
loope
xchg
mov
clc
push
imul
ret
es
sbb
outsl
imul
push
add
arpl
outsb
cmp
sub
cmp
comiss
test
inc
aaa
cmp
xor
inc
jg
outsl
out
and
add
lahf
fildll
mov
cwtl
imul
adcl
scas
gs
push
popf
jnp
jbe
xchg
shrw
pop
or
ret
outsl
mov
pop
jno
insl
sbb
adc
js
dec
fwait
inc
add
test
dec
inc
popa
cmp
sub
out
sbb
pop
lea
test
add
sub
mov
xchg
adc
pop
mov
lcall
inc
push
dec
inc
sub
add
jo
je
aaa
push
pop
jle
mov
insb
popa
cwtl
mov
or
or
sbb
and
popa
xor
mov
pop
notl
push
inc
pop
std
inc
pop
pop
and
push
and
shll
mov
inc
fiadds
idivb
movsb
jecxz
addr16
aad
push
push
push
jae
push
imul
adc
shlb
add
push
enter
inc
inc
in
movl
adc
jo
cmc
cmp
push
sub
ljmp
sbb
loope
pop
and
jae
sub
aaa
aaa
sbb
pop
shrl
in
pop
push
mov
imul
sub
add
jo
movsb
jne
cmc
notb
or
xor
pop
add
mov
gs
jnp
iret
neg
rcrl
inc
stos
jb
cmp
mov
xchg
loopne
addr16
cmp
outsb
jne
push
ja
add
jle
inc
push
inc
push
mov
insl
loope
sub
and
or
gs
mov
mov
pop
inc
jb
adc
mov
add
mov
pop
inc
sbb
push
sbbl
mov
dec
xchg
popa
xor
pusha
cmp
add
cmp
out
pop
loope
add
adc
or
sub
add
imul
in
lods
pop
jp
aas
xor
pop
push
add
mov
mov
jae
nopl
sbb
mov
pop
dec
sbb
push
and
inc
mov
or
or
insb
out
lea
out
sub
lret
in
or
loope
pop
jbe
pushf
jmp
xchg
dec
add
adc
push
outsl
rep
ja
dec
push
push
aad
add
xchg
fdiv
cmovno
inc
dec
insl
rolb
jae
adc
lret
pop
into
in
inc
add
sbb
out
mov
mov
push
test
out
mov
adc
lds
inc
fcoml
adc
inc
mov
sub
pop
xor
fistl
rorb
popf
lods
inc
loope
push
dec
sbb
xor
imul
bts
adc
pusha
jmp
lock
pop
or
test
mov
jmp
repz
cmp
in
mov
mov
pop
or
push
fwait
xchg
fmull
pop
subl
jne
mov
test
sbb
add
mov
xchg
push
add
pop
and
jge
add
jb
push
fadds
sub
pop
cltd
xchg
and
or
stos
push
or
fs
decl
rol
pop
jns
push
mov
pop
aam
cld
loop
inc
jbe
or
movsl
and
movsb
sub
ud0
jmp
pop
int3
cld
shrd
lods
adc
ret
pop
inc
and
pop
ds
pop
xor
ljmp
test
xchg
inc
scas
int3
fisubrl
cwtl
mov
push
mov
and
aad
and
sub
clc
inc
push
insb
iret
xchg
sbb
and
xlat
mov
sub
test
stos
push
mov
inc
add
and
fsubs
xlat
sti
dec
cld
pop
add
imul
pushf
daa
shl
std
fs
jp
dec
jne
lcall
pop
sub
roll
lahf
test
sti
ret
dec
mov
arpl
xor
mov
decl
pop
mov
popf
shll
or
lret
pop
mov
sbb
in
jmp
fwait
or
call
inc
xchg
movsl
stos
push
sub
add
adc
movsb
aam
adc
xchg
lret
cmp
ljmp
pop
cwtl
imul
les
and
popl
movzbl
xor
adc
lock
aad
into
nop
mov
add
mov
int
or
aaa
sub
fiaddl
cmp
push
jnp
adc
ljmp
adc
aam
insl
sub
push
sub
daa
loope
cmp
jae
add
loopne
jp
dec
inc
pop
dec
incb
xchg
cmp
push
imull
adc
add
add
mov
in
in
dec
stc
mov
pushf
call
std
add
or
imul
push
jmp
push
jmp
mov
jnp
clc
sub
clc
cmc
gs
mov
jo
mov
push
in
std
push
imul
mov
inc
test
mov
ret
add
xorl
mov
add
call
int3
push
rorb
mov
xor
jp
pop
cmp
adc
lcall
sti
push
clc
push
jbe
add
call
lock
rolb
push
push
dec
pop
pusha
mov
je
addr16
mov
cwtl
in
sbb
cmp
fwait
sub
and
push
add
in
mov
movsb
stc
lods
repnz
shl
mov
in
cmc
stc
cmp
cld
ss
popf
out
jnp
addl
and
xor
out
sub
outsl
and
hlt
dec
mov
pop
imul
push
call
outsb
sub
sub
push
outsb
mov
fistpl
inc
ret
cmp
movnti
cmp
push
dec
or
psraw
xchg
js
call
push
mov
out
sub
inc
mov
in
pop
add
call
xor
mov
sub
jmp
sbb
popa
push
adc
xchg
push
jge
mov
ror
and
jo
push
shl
neg
push
neg
mov
or
and
add
or
rcr
pop
mov
divl
or
xchg
pusha
jmp
push
cmc
ror
cmpsb
shrl
hlt
sbb
ljmp
add
or
jl
jae
jmp
add
repnz
lock
int3
and
mov
or
and
push
std
ficomps
pop
jmp
sub
fwait
lds
int
fwait
and
xchg
or
std
cmp
aad
setp
push
fistl
sti
mov
lods
loopne
std
push
inc
sarl
push
pop
ret
cmp
ror
mov
push
clc
mov
in
int
enter
cmpsb
sub
or
pop
bswap
push
shr
xchg
rcl
mov
pop
inc
add
push
push
movl
jmp
pop
div
outsl
jg
mov
mov
int
pop
repnz
into
insl
sbb
or
bswap
lea
xlat
fs
movsl
in
neg
sub
cmp
adc
std
pop
sub
testl
push
mov
neg
ss
mov
test
rcl
add
aaa
outsl
mov
dec
shr
mov
xor
pushf
cmp
pop
mov
xor
iret
xchg
xor
push
shll
cmc
sbb
clc
mov
or
test
adc
adc
call
mov
or
fcoms
xor
lea
mov
mov
iret
pusha
in
push
add
pop
adc
or
ss
pop
fcomps
insb
lea
xchg
jmp
cwtl
jo
and
mov
adc
fistpll
shrd
call
cli
push
adc
jmp
cmp
sub
jg
or
adc
ja
cmp
push
movsl
lods
data16
cmp
push
add
mov
add
and
push
xchg
push
stos
sbb
scas
ja
fadd
and
sub
dec
jmp
test
in
call
inc
ja
call
fstl
xor
or
ss
xchg
inc
xor
das
add
and
sub
sbb
and
dec
arpl
jp
mov
pop
adc
ss
pop
pushf
flds
shlb
mov
int
mov
aad
add
imul
movq
mov
pop
rcr
loopne
ret
out
call
xor
pop
dec
or
sub
dec
out
push
stc
and
xor
mov
or
push
mov
std
push
cmpsl
pop
inc
jl
call
testb
sbb
sub
jnp
mov
inc
or
sbb
add
aaa
sub
mov
pushf
subb
cmc
rcl
push
call
mov
and
push
inc
or
or
std
sub
add
ss
pushl
std
fisttpll
mov
mov
or
add
add
pop
dec
inc
mov
mov
jns
push
push
pop
dec
mov
test
mov
ljmp
mov
jmp
cmp
add
pop
inc
das
push
jg
pop
jmp
clc
lods
popf
lds
push
sub
adc
aad
loope
out
or
add
jmp
xchg
add
xchg
mov
xchg
mov
movsb
pushf
push
or
test
cld
in
add
jl
pop
out
jp
adc
ret
outsb
mull
mov
sbb
mov
mov
mov
mov
fidivs
popf
call
out
movsb
into
push
jmp
sarl
and
stos
hlt
out
pop
mov
push
ret
adc
clc
xchg
mov
jmp
mov
push
pushf
das
and
mov
nop
inc
shlb
mov
insl
inc
out
xchg
mov
call
xchg
fstp
in
push
icebp
rcl
sti
incb
into
and
mov
push
mov
rcr
pushf
test
cmc
mov
insl
scas
mov
xor
out
bsf
in
out
or
pop
push
testl
aad
jle
sbb
shr
call
sbb
call
fdivs
call
push
inc
dec
es
push
shll
imul
sbb
xlat
hlt
sbb
movl
dec
jl
jle
call
cmpb
pop
fisttpll
push
cmc
jge
mov
scas
int3
nop
insl
jo
mov
cmc
xchg
sbb
shr
js
loope
inc
xor
insl
push
pusha
push
cmp
jl
xchg
fisttpl
adc
data16
adc
fsubp
in
aad
movsb
add
dec
fsts
pop
pusha
cwtl
dec
sbb
jns
fwait
sti
mov
cld
imul
aaa
lahf
mov
lea
test
adc
cwtl
inc
sbb
pusha
fucomi
stc
jmp
das
ret
mov
mov
sbb
add
jbe
cltd
bound
jb
inc
into
dec
jmp
inc
aas
jns
ret
sbb
add
xchg
pusha
push
dec
ret
cmp
mov
push
mov
leave
push
sarb
shl
mov
cld
icebp
call
push
mov
mov
jne
pushf
inc
add
pop
pop
std
xchg
and
stos
pusha
ja
xchg
je
jo
mov
add
addb
or
sbb
ffreep
jnp
push
push
xor
movsb
push
and
xor
bound
jo
test
int
pop
jnp
rorb
roll
adc
or
movsl
inc
pop
movsl
ret
cmc
scas
repnz
or
or
into
push
mov
pop
call
ja
lea
adc
psubq
cmp
pop
or
fnstsw
call
shr
or
out
insl
xor
dec
cli
stc
cmc
data16
mov
clc
hlt
cmc
push
cwtl
fcomi
jmp
sbb
mov
or
popf
outsb
push
sbb
mulb
or
jmp
in
mov
mov
or
cwtl
mov
push
pusha
pusha
pop
mov
cs
pop
dec
mov
outsl
mov
shlb
dec
cwtl
mov
jp
movsb
push
negl
xor
orb
shrl
adc
int3
mov
jmp
jne
jp
mov
hlt
or
jo
push
push
bound
mov
mov
sar
push
sbb
xchg
xor
cld
add
adc
jb
rorl
mov
pop
sub
mov
add
xlat
xchg
sbb
pop
gs
cmp
pushl
pushf
pop
push
int
negl
push
lahf
outsb
loopne
in
daa
inc
and
int3
push
sbb
jge
jmp
cmp
daa
pop
cmpsb
ja
lods
xchg
and
out
dec
out
les
mov
inc
mov
dec
inc
dec
cmp
push
jmp
jle
mov
push
fsubrl
push
and
lods
or
nop
gs
lcall
jecxz
add
in
je
ss
push
or
mov
test
mov
sub
jno
gs
mov
dec
mov
stos
mov
push
sbb
int
and
or
in
pop
sbb
inc
sbb
fsubs
fisubrl
addl
jns
in
inc
adc
movsl
push
adc
xchg
inc
push
pop
cmp
pusha
les
jno
or
jo
test
pushf
in
mov
lahf
shlb
fisttpll
inc
call
inc
clc
push
into
scas
xchg
orl
dec
mov
out
jp
sbb
test
jnp
jb
sbb
jmp
push
insl
fildll
lods
testl
jg
or
push
movsb
mov
inc
xor
mov
inc
movsl
or
or
lock
cmp
mov
xorl
jbe
xor
inc
int
pop
cmp
cmc
or
addr16
cmpsl
rcr
fwait
mov
pop
and
jge
in
mov
mov
pop
jbe
mov
aad
jp
push
sbb
pop
sub
xor
test
and
pop
add
xor
add
jo
sbb
lret
imul
add
ljmp
ljmp
mov
add
jmp
enter
mov
jmp
sar
sub
test
pop
xlat
popw
scas
pushf
scas
lea
xchg
icebp
dec
mov
sub
sbb
xor
mov
mov
add
jge
push
das
lock
dec
cmc
repz
adc
sub
addb
jecxz
mov
push
mov
insb
cmp
and
jg
clc
sbb
jmp
jno
out
or
mov
add
clc
xchg
dec
cmpsl
jg
add
call
pop
mov
fdivl
cmp
xchg
stc
lods
dec
pop
cli
push
push
cmp
addl
add
add
push
iret
inc
scas
and
fs
adc
mov
xchg
fldcw
fimull
and
sub
lret
sbb
jl
daa
mov
mov
mov
mov
mov
repnz
pop
cs
leave
stos
add
mov
in
sub
pop
cwtl
scas
les
sbb
dec
outsb
out
mov
pop
ret
mul
mov
mov
mov
daa
mov
test
pop
das
clc
mov
stos
and
fdivrl
push
xorl
lods
add
mov
loopne
push
or
or
daa
out
fnstcw
mov
sub
mov
mov
neg
jnp
mov
in
mov
insb
mov
xor
pop
xorl
sti
mov
das
scas
add
mov
out
mull
pop
sub
xor
outsb
add
mov
ret
or
mov
loopne
test
fwait
xchg
inc
push
or
jnp
mov
jnp
mov
push
xchg
mov
test
push
out
xor
mull
iret
out
xchg
aas
lret
daa
or
sub
push
pop
dec
comiss
out
or
lock
pop
repz
mov
pop
jecxz
sub
neg
jnp
jecxz
dec
mov
sbb
mov
jnp
fstpt
xchg
repz
lods
mov
or
mov
stos
sti
aas
aaa
arpl
adc
dec
xor
dec
ds
inc
pop
dec
and
jl
dec
or
js
lea
incl
jnp
lret
sbb
inc
fdivrs
test
fidivl
jnp
ja
fwait
mov
mov
fimuls
mov
js
idivl
fcmovnu
jnp
mov
pop
inc
pop
jg
cmp
sub
pusha
dec
cmc
rolb
push
sbb
aam
adcl
pop
jne
mov
add
pusha
stc
imul
imul
mov
pop
outsb
movsl
rolb
das
pop
rolb
xor
outsl
fs
jmp
jno
jge
add
jle
mov
aad
dec
call
and
xchg
dec
fbstp
pushf
pop
lock
out
mov
push
icebp
call
mov
push
test
or
ret
sbb
mov
jno,pn
es
pusha
jle
sbb
push
psrld
hlt
xor
addl
fisttps
inc
pushf
mov
dec
cmove
or
push
scas
push
cmp
flds
xor
xor
data16
sub
jae,pt
int3
addb
push
or
lea
in
mov
inc
test
pusha
out
iret
or
out
sahf
roll
out
fsubr
shlb
enter
js
inc
bound
test
pop
cmc
sub
loopne
cmp
stc
neg
push
rcll
cmp
xchg
int
inc
adc
mov
shr
xor
xchg
inc
loop
test
or
aad
sbb
jmp
mov
jl
notl
jmp
setnp
adc
loop
pop
hlt
adc
push
push
sub
xlat
inc
ret
rclb
loopne
sarl
imulb
jmp
and
inc
stos
pop
ud1
mov
inc
stos
dec
jmp
xadd
mov
rolb
stc
ror
jo
fistps
dec
and
xor
push
add
aad
push
outsb
mov
and
sahf
shll
mov
and
out
clc
inc
push
push
les
fwait
insl
daa
js
pushf
xchg
sub
js
add
mov
mov
dec
ds
icebp
add
enter
shll
popa
insb
dec
lock
add
das
scas
shr
loopne
hlt
aaa
hlt
stc
or
mov
sar
xchg
insl
adc
cmp
or
in
je
jg
pop
data16
cmpsb
pushf
and
lds
mov
loopne
shlb
xor
sahf
std
sub
mov
fwait
out
imulb
inc
in
mov
pushf
loopne
adc
pop
adc
jge
call
mov
je
cmp
lret
inc
push
pushf
stos
mov
pop
mov
movsl
ficoml
push
out
xchg
testl
dec
out
push
out
shll
in
ss
repz
xor
add
fdivrp
outsl
scas
and
je
aaa
call
mov
and
pop
in
outsb
movsl
in
xchg
xchg
push
stc
pusha
sti
adc
inc
push
lcall
xchg
shlb
fs
ds
out
fcmovnu
popf
fwait
mov
dec
hlt
or
je
add
rorb
cmpb
push
cwtl
jmp
add
pop
pushf
xor
popa
jl
loope
dec
call
ret
aas
lcall
mov
dec
push
dec
mov
push
mov
lock
mov
jo
gs
xchg
adc
add
cs
and
cmc
sbb
sub
pushf
stc
mov
sub
popf
fldt
mov
hlt
push
mov
jge
andb
std
xchg
pushw
in
mov
push
cmc
push
rcl
cmp
lods
clc
mov
push
mov
inc
push
call
adc
iret
cmpsb
arpl
icebp
test
sub
xchg
subl
testb
sub
cwtl
pusha
jno
jne
sti
pop
outsb
mov
lret
ljmp
lods
jo
mov
in
in
nop
arpl
push
pop
pushf
clc
in
int3
sar
dec
add
and
sbb
mov
add
push
pop
jne
sbb
pop
fstpt
push
cmpl
dec
add
jne
pop
dec
in
icebp
test
roll
xchg
xor
jmp
outsl
dec
out
enter
or
dec
pusha
call
ljmp
mov
xlat
stc
mov
out
lea
in
sbb
cmc
xchg
bound
dec
or
loopne
scas
mov
xorb
popf
sub
sub
sub
roll
clc
outsl
clc
sar
neg
shl
les
movsb
data16
sarb
movsb
pop
cli
xchg
out
cmp
insb
sub
loopne
mov
jp
push
addr16
inc
mov
sbb
hlt
outsl
sub
and
pushf
push
mov
mov
shlb
and
ror
movsb
add
or
jle
jg
outsl
lds
mov
cld
sbb
mov
push
jp
in
sets
in
int
xchg
js
ficoml
sub
shll
mov
pusha
and
notl
outsl
aaa
jge
enter
sbb
xor
inc
es
leave
cmp
add
dec
daa
insb
pop
lock
dec
add
fcmovnb
mov
dec
shr
movb
jmp
or
lods
repz
mov
cli
dec
push
and
jle
sarb
push
and
je
loop
imul
inc
cltd
shll
shll
pop
pop
rolb
outsb
push
dec
push
stc
in
sub
push
mov
dec
dec
cmp
clc
push
mov
call
shl
push
psrlw
clc
call
stos
int3
push
push
or
push
mov
push
out
xchg
loope
cmp
call
sbb
popa
js
out
adc
cmp
push
xchg
orl
jne
shr
leave
add
jne
aas
cwtl
jle
movb
xor
scas
and
fwait
and
mov
jecxz
mov
dec
pop
mov
out
add
test
es
js
sbb
pop
push
mov
notl
mov
or
add
ds
cmp
inc
adc
push
mov
add
mov
xchg
idivb
cli
and
push
cmp
jmp
add
sbb
jmp
sbb
mov
cs
out
roll
call
add
adc
out
lahf
or
sub
out
push
daa
aaa
rclb
jmp
loop
push
or
mov
sbb
xchg
sub
iret
nop
loope
or
insl
xor
insb
mov
pop
into
in
jb
clc
in
lock
jmp
push
sbb
xchg
insl
in
idivl
nop
hlt
cmpsl
fdivrl
sbb
lods
imul
shl
rol
sub
shr
jl
test
movsl
fcmovbe
jb
test
ljmp
movsb
mov
adc
test
clc
sarb
pushf
pop
add
loop
dec
dec
scas
cmc
icebp
outsl
pusha
rol
sar
setns
xor
out
lods
aas
mov
add
leave
jmp
push
push
sbb
testl
aaa
ret
aas
jmp
push
adc
mov
xor
pop
and
push
add
inc
jp
cmpl
xor
ret
dec
sub
call
pop
jb
jo,pn
lods
bound
cmp
sub
jg
adc
mov
sar
sar
xor
inc
adc
xchg
lds
ja
lea
popa
add
enter
pusha
and
dec
clc
popa
mov
jge
shlb
stc
vpsubsb
mov
rcl
add
pop
testb
test
mov
pop
xchg
bound
jle
cwtl
rcrb
sbb
push
xchg
pop
iret
movsl
aas
out
leave
xor
adc
mov
arpl
mov
xlat
in
xor
call
pop
sub
loope
jae
pop
jmp
jle
lea
cltd
out
repz
sbb
out
or
loop
addr16
inc
xchg
jge
scas
push
mov
loop
test
mov
pop
fucomp
cli
call
push
icebp
push
jno
jmp
hlt
clc
test
bswap
pop
test
aam
in
mov
xlat
pusha
insb
aas
dec
pop
pop
cltd
arpl
aad
push
mov
push
stc
jmp
push
mov
cmc
push
mov
nop
lea
and
mov
jmp
ljmp
std
jmp
sbb
in
repnz
lock
or
push
jo
aaa
xor
mov
loopne
movsl
pop
fisttpll
test
aam
pushf
in
sbb
stos
mov
dec
add
xor
int3
test
cmp
into
push
push
cmp
add
jmp
pop
cmpsl
ljmp
jecxz
inc
out
sbb
sbb
xchg
fwait
arpl
aas
addb
mov
sbb
xchg
test
shr
lock
mov
sbb
pop
mov
pusha
les
jecxz
shlb
arpl
or
mov
testl
jns
lret
mov
movb
or
jmp
pop
sahf
bound
movsl
call
sbb
sbb
inc
adc
std
adc
jg
outsb
scas
jg
xlat
pop
negb
add
mov
call
das
mov
sub
loopne
cmc
rorl
mov
adc
inc
outsb
mov
push
loop
popl
ret
imul
ret
aad
xor
adc
xor
sbb
push
icebp
xchg
or
stos
pop
ss
popf
and
add
adc
mov
sub
out
call
arpl
xchg
or
out
jbe
jmp
pushl
mov
jp
adc
mov
push
clc
jns
inc
movsl
rorl
shrl
mov
stos
loope
loop
loop
sbb
pop
pop
aam
lea
mov
add
call
push
lock
faddl
mov
sbb
lods
out
ficompl
and
es
mov
enter
les
mov
iret
add
lock
sub
and
sbb
lea
jl
inc
stos
fs
fildl
idiv
setae
pop
enter
std
loop
mov
stc
add
sub
pop
cmc
lcall
xor
dec
mov
sub
fldcw
sbb
test
push
push
mov
jae
push
dec
mov
cld
out
pop
shl
pusha
push
push
cmc
ret
shl
jmp
dec
dec
cmp
mov
ds
push
rcl
add
into
shlb
pop
shlb
push
out
push
mov
pop
fstpl
loop
rcl
push
mov
adc
ljmp
in
jae
adcb
push
ret
mov
rcr
fidivs
adc
lcall
aam
jb
out
stc
bound
and
cmc
call
inc
pop
cmpsl
mov
fbld
sbb
xor
push
mov
add
test
dec
clc
neg
pop
cmp
ljmp
adc
ret
pop
cmp
fwait
rcll
addb
sahf
fsqrt
and
mov
jl
repnz
sbb
push
mov
loopne
inc
jg
mulb
or
sub
mov
icebp
add
ret
push
shrb
add
cs
cmp
icebp
cmp
sub
mov
and
and
adc
mov
jge
pop
add
not
sbb
xchg
mulps
arpl
insb
mov
xchg
add
xor
push
sub
fidivrs
mov
xchg
or
jno
scas
add
push
xor
iret
inc
iret
shlb
or
push
jg
je
nop
adc
add
lret
fbstp
das
push
dec
loope
hlt
add
aas
mov
mov
adc
lods
mov
mov
roll
subb
inc
dec
add
cmp
push
mov
pop
xor
mov
mov
stos
adc
jbe
js
insl
add
test
popa
stc
inc
add
fucomp
sahf
jnp
js
xor
je
xor
push
sti
loopne
cmp
lods
and
addr16
ret
dec
mov
cli
inc
cmp
cwtl
or
clc
out
inc
pop
push
push
push
scas
stos
sbb
lods
inc
push
pop
lret
rsqrtps
fsubrp
xchg
bound
pusha
popf
push
sub
rcrb
pop
out
push
pop
jo,pt
mov
lcall
repnz
ja
dec
push
jmp
clc
cmp
add
mov
aam
scas
jmp
ja
rol
aas
mov
pop
out
jbe
dec
int3
lock
pusha
jecxz
inc
sbb
lret
jnp
push
sti
mov
fwait
ret
push
mov
mov
jg
repnz
pushf
jno
and
add
in
jbe
shl
dec
out
sti
testl
bound
ret
lea
fdivr
mov
scas
neg
mov
sub
call
adc
neg
setle
movb
sub
lock
mov
add
mov
or
sub
rcl
mulb
cwtl
xor
gs
xchg
notl
pop
jns
jbe
lods
mov
cli
xor
xorl
mov
inc
in
xstore-rng
cmpsl
inc
bound
pusha
adcl
scas
jecxz
arpl
lock
sbb
in
push
pop
dec
sbb
shl
sub
int3
and
push
pop
idiv
push
push
clc
loop
mov
test
sub
cld
out
pop
inc
adc
bound
push
mov
imul
sbb
dec
mov
sahf
insl
fistl
int
rcrl
ficomps
pop
jle
jmp
jge
adc
mov
mov
sub
mov
decl
outsb
inc
lcall
dec
in
cmc
sbb
push
mov
add
or
jmp
mov
lock
shlb
inc
rclb
dec
outsl
test
push
loope
jne
xchg
cmp
add
add
pop
add
push
loope
sar
jmp
ffree
rorb
shlb
dec
mov
inc
jo
cs
js
cmp
adc
in
fxch
inc
mov
pop
mov
call
dec
cmpsl
pushl
inc
aaa
mov
push
outsl
cmc
pop
mov
sub
mov
in
inc
sbb
dec
adc
pop
sbb
test
xchg
call
mov
mov
dec
cmp
xchg
xor
popf
adc
stos
mov
cmpsl
sub
pop
sarl
fwait
jp
std
lds
lds
fistpl
lock
xchg
mov
lret
xchg
pop
mov
dec
xchg
pop
pop
jl
add
mov
fcoms
mov
push
pop
lret
mov
sti
dec
enter
cmp
cmpsb
incl
push
rcrl
in
push
cmpsl
jg
xor
jle
call
mov
fisttpll
icebp
addr16
cmp
and
iret
xchg
jmp
faddl
lret
aas
dec
pop
inc
incl
sbb
sahf
pop
ss
scas
lahf
xor
cmpsl
imul
gs
and
lcall
out
or
and
addr16
andb
xchg
sub
aad
pop
xchg
mov
dec
arpl
std
ret
imul
outsb
fildll
push
int
cli
jg
push
mov
sbb
mov
shlb
roll
sub
pop
mov
call
cmp
stos
adc
sub
mov
add
mov
sbb
mov
fadds
mov
inc
mov
mov
jp
pop
fstpt
sub
pop
cld
mov
pop
int
sbb
mov
add
adc
ja
mov
imul
jmp
add
jbe
cmc
jbe
pusha
push
pushaw
adc
pop
loope
dec
or
or
subl
lock
addl
push
icebp
xchg
and
loop
lret
xchg
cli
scas
jp
in
cli
fsubrs
pop
pusha
mov
ljmp
mov
inc
jg
lds
imul
adcl
cwtl
cld
sbb
pushl
ret
dec
fiaddl
out
or
mov
out
jg
decl
stc
or
xchg
mov
mov
xlat
hlt
les
das
gs
adc
sbb
call
add
sub
repz
scas
out
stos
pop
push
insb
loopne
xchg
repnz
mov
xor
call
in
outsb
dec
shrl
ret
pop
push
les
scas
add
in
call
out
cmp
push
fnsave
push
hlt
lret
daa
mov
inc
movq
and
loopne
inc
call
sarl
ret
in
pop
mov
pop
or
lcall
adc
mov
iret
cmpsb
ljmp
into
mov
pushl
ficoml
lds
mov
addr16
outsb
xor
lret
outsl
call
and
shl
pushf
xchg
rcrl
mov
stos
add
or
in
push
ljmp
cld
or
mov
int3
sti
adc
test
sub
rcrl
or
mov
outsb
xor
mov
sti
fmulp
pop
fstp
mov
xchg
add
je
cmp
stos
and
pop
out
aaa
punpckhwd
or
sbb
enter
outsl
lcall
or
insb
sub
rolb
adc
push
jle
xchg
icebp
push
out
nop
lahf
lcall
fwait
cmp
cmp
dec
or
repnz
repnz
les
out
push
sti
or
sbb
lret
mov
loopne
std
xchg
enter
or
shll
inc
or
mov
rclb
outsl
call
inc
scas
mov
add
and
in
outsl
inc
sub
push
push
jp
sub
xor
jg
push
incl
gs
inc
bswap
and
dec
sbb
shlb
fnstsw
inc
test
or
fs
sub
jo
add
out
stos
push
out
xchg
mov
jno
das
js
xchg
stos
repnz
lds
mov
call
and
inc
sbb
mov
xchg
icebp
push
test
sub
adc
jp
lods
mov
xor
push
fdivrs
push
inc
fcmovbe
repz
cld
lcall
adcl
hlt
mov
shrb
pop
mov
sbb
or
jno
mov
int3
sbb
sbb
fsubr
jmp
xor
push
insl
lods
je
push
mov
inc
or
mov
sbb
and
outsb
add
sub
in
cmp
sub
in
push
mov
add
ds
imul
andb
lcall
cmpsb
and
adc
outsl
inc
cs
stc
out
stc
mov
lret
sahf
pop
lods
cli
mov
fistps
sbb
push
sub
fstl
mov
jp
aam
lcall
mov
inc
jl
popf
mov
dec
aas
insl
shll
cld
add
pop
jb
arpl
inc
mov
push
fadds
mov
inc
jae
movsb
fists
clc
dec
cmp
mov
add
sub
out
jmp
push
jp
adc
xchg
push
aaa
icebp
mov
cmp
int
xor
stos
test
mov
mov
sub
out
mov
incl
cltd
loopne
int
inc
sub
pusha
shlb
clc
fsubrl
mov
push
and
add
js
in
xchg
cwtl
sub
xor
cmp
fcmovnu
jle
xchg
in
lds
rep
sti
cmp
pop
add
cmp
jg
das
aad
loopne
dec
and
sbb
int
aaa
jecxz
and
ficoml
pop
pop
mov
jl
pushf
mov
fdivrl
mov
and
adcl
or
sahf
push
xchg
or
push
aaa
jle
fistpl
jmp
add
cltd
mov
xchg
loopne
ljmp
les
cld
rcrl
add
fsubl
lods
inc
jns
push
jne
shll
lcall
mov
int3
xor
mov
repz
mov
jle
adc
cmp
dec
or
or
and
fcmove
ss
outsb
inc
addr16
out
sbb
fisubs
fwait
fs
andl
pop
ss
enter
jmp
dec
sbb
jo
push
repz
das
adc
lret
sub
dec
out
cld
mov
jg
cmpsl
lcall
inc
jno
adc
jle
stos
das
pop
bound
mov
xor
decl
sar
xchg
mov
outsl
shll
xchg
jg
mov
add
push
repz
mov
scas
fmuls
popf
xor
test
insb
ret
adc
push
hlt
pushl
cmp
fcompl
stos
popf
aaa
dec
test
xor
out
mov
loop
ret
data16
test
or
sbb
clc
pop
aam
stc
inc
scas
dec
lods
cmp
inc
insb
inc
pop
loope
mov
inc
aas
sbb
jl
mov
jl
test
push
dec
xor
call
inc
sub
call
stos
test
stos
ljmp
icebp
or
ja
out
idivb
aas
or
xlat
mov
and
call
or
xor
mov
loope
repz
aaa
clc
ljmp
pop
rcr
mov
xchg
cmp
push
sub
inc
cmpsb
xchg
aam
sbb
or
cmp
sbb
es
jbe
cmpsb
mov
daa
dec
pop
stos
mov
imul
jl
mov
jg
lahf
mov
cmp
push
icebp
gs
pop
xchg
sub
sbb
rorl
ljmp
mov
pushf
pop
stos
mov
rcrb
test
outsl
inc
mov
mov
loope
add
sub
sahf
lds
jg
testb
jns
or
pop
insb
mov
jns
cmpsl
jmp
das
clc
add
xor
in
push
pop
cmp
inc
push
ljmp
jp
cmp
dec
int
inc
add
jo
adc
xchg
xchg
jp
call
clc
mov
inc
or
dec
lea
sub
push
sbb
adc
lds
outsl
jg
push
sub
test
ds
out
outsl
add
mov
loopne
or
jmp
cvtps2pi
daa
jnp
ljmp
mov
pop
mov
aaa
mov
pop
in
subb
jg
fdivs
stc
adc
inc
cltd
imul
cli
fisttps
jg
sbb
xor
jle
lret
mov
pushl
in
jge
inc
adc
in
bound
mov
push
sub
xchg
push
out
inc
jg
sti
into
pop
popa
push
mov
fldt
outsb
mov
fcmovne
add
sub
pusha
sub
fs
push
jge
cs
mov
mov
lock
movsb
in
cltd
stos
leave
movsb
adc
add
outsb
adc
cmp
loopne
clc
adc
outsb
mov
cmpsl
jp
add
mov
sub
xchg
mov
ja
or
aaa
sahf
insl
push
sbb
mov
mov
repnz
dec
or
dec
dec
mov
lret
in
cli
test
inc
xchg
jge
dec
add
ljmp
jo
dec
and
mov
mov
mov
call
cld
add
test
mov
mov
dec
movsb
add
rclb
sub
call
scas
sbb
mov
mov
mov
pushf
xor
addr16
clc
push
sub
out
inc
stos
movsl
pop
sbb
test
iret
cbtw
idiv
lahf
or
call
popa
and
test
mov
inc
sbb
adc
jle
push
fnstsw
pusha
xor
xor
sbb
pushf
mov
lret
incl
movsl
dec
dec
les
xchg
sbb
fwait
ljmp
push
stos
cmp
ljmp
sti
icebp
jns
lret
ljmp
bound
add
mov
adc
xor
mov
das
leave
mov
xor
mov
sti
mov
cld
loope
sbb
push
das
mov
sbb
loope
pusha
std
neg
daa
outsl
sub
scas
push
or
sbb
push
push
cmp
mov
insb
mov
mov
push
dec
sub
mov
xchg
mov
nop
push
mov
adc
add
add
mov
ljmp
sub
mov
or
fcomps
adc
std
outsl
cmpsl
mov
loop
add
cmc
loopne
cld
adc
ljmp
push
subb
jmp
xchg
pushf
push
jle
mov
cmp
test
dec
xchg
ret
push
lods
clc
dec
es
call
jecxz
ljmp
mov
jo
pop
fistpll
sti
leave
stos
jnp
xor
out
add
fildll
jp
out
shl
dec
mov
shll
loopne
stos
pusha
xlat
adc
inc
icebp
or
pop
fstpl
call
imulb
cwtl
jae
cmp
mov
jg
cld
xlat
push
dec
xchg
jle
imul
or
popa
dec
ret
push
test
dec
daa
cmpsl
aam
imul
mov
sbb
add
adc
lret
pop
rorb
sub
mov
clc
rcll
sbb
add
push
add
mov
sbb
inc
outsl
dec
pop
lods
loope
inc
mov
cmp
mov
jl
test
jg
pop
mov
sbb
cmp
push
in
jle
cli
shll
xor
popf
bound
out
push
das
mov
jmp
mov
rcll
bound
js
ljmp
subl
push
sub
push
ja
pop
out
push
push
cli
mov
int3
notb
jmp
call
test
add
fwait
imul
das
push
out
loopne
fisttpl
cmp
jae
cmpsl
jl
rcll
add
lods
xchg
add
sbb
sub
lock
jmp
stc
fstl
mov
mov
xchg
and
jg
fstl
in
ss
jecxz
imul
mov
icebp
add
addl
xchg
fs
cmp
adc
mov
mov
xor
mov
pop
push
das
or
mov
sti
adc
add
xlat
and
es
imul
fadd
jmp
xchg
pop
mov
inc
adc
mov
daa
sub
cmp
cs
inc
adc
sbbb
cs
sub
mov
mov
jo
inc
iret
xor
add
bound
xor
mov
mov
inc
lds
sbb
es
push
mov
addr16
or
inc
cltd
insb
mov
mov
pop
lea
sbb
outsl
dec
daa
fwait
shl
dec
jp
or
mov
pop
inc
into
or
fwait
or
das
icebp
push
mov
mov
jne
rorb
incl
mov
cwtl
loope
lcall
clc
je
je
sti
add
mov
sbb
imul
std
clc
js
imul
decl
mov
sahf
ds
popf
rcrl
push
repz
and
inc
aad
pushl
movsl
add
out
dec
jecxz
jnp
fisubrl
in
push
repnz
fs
sbb
jg
shll
in
adc
aam
aaa
sub
scas
enter
cmp
push
adc
xlat
mov
repz
fyl2xp1
dec
xchg
data16
fisubl
outsl
xlat
xor
pop
cli
sub
xchg
jl
mov
negb
sub
cmpsb
cmpsl
or
mov
sbb
sub
int
or
out
inc
mov
inc
repz
mov
das
out
nop
push
mov
jne
cmp
xor
inc
fnstsw
pop
gs
jb
add
shrb
push
jge
jl
xchg
sbbl
ss
call
dec
stos
add
arpl
jno
out
inc
int3
inc
fwait
xchg
incb
xchg
arpl
ret
inc
and
adc
lds
cmc
call
xchg
ret
mov
inc
add
xchg
test
aaa
pop
or
lods
pop
or
cmp
cs
xchg
fidivrl
mov
mov
out
mov
xchg
gs
xchg
daa
xchg
xlat
ss
cmp
imul
shrl
xor
incl
inc
xor
add
leave
dec
ret
in
push
outsl
cmp
dec
and
jne
int3
mov
and
cwtl
pop
out
pushl
push
es
ret
les
jg
neg
cmp
sti
mov
out
inc
jnp
bound
inc
stos
js
pop
pop
fidivs
add
fnstsw
pop
mov
lahf
cli
lret
xlat
mov
insb
push
mov
jbe
adc
cmpsb
enter
push
scas
aam
sbb
inc
popa
push
pop
rolb
sar
push
xor
dec
loope
push
push
bound
lret
push
mov
cld
pop
mov
or
mov
incl
jb
nop
idivb
repnz
xor
pop
jp
out
xchg
movsb
imul
mov
xlat
mov
dec
into
popf
cmpb
negl
lret
das
cld
daa
adc
pop
fistl
lock
repnz
or
sbb
into
stos
jl
mov
sub
clc
movsl
test
jno
gs
subb
icebp
mov
das
cmc
das
mov
test
lea
inc
push
cli
je
scas
mov
sahf
rorb
jns
jne
pusha
ret
cmp
cmp
mov
out
sbb
inc
push
inc
add
jg
dec
pop
gs
mov
outsb
outsb
shl
in
js
les
sbb
xor
mov
mov
adc
lods
out
dec
loope
mov
jge
add
dec
lods
jg
mov
jge
outsb
scas
aas
call
popa
test
popa
add
cld
adc
mov
xchg
pusha
mov
loope
inc
xchg
faddl
ficomps
mov
push
ja
aas
xlat
dec
mov
mov
std
inc
popf
pop
jbe
adc
jmp
decl
fsubr
push
jecxz
in
cmp
adc
inc
jg
and
aad
inc
mov
sub
imul
dec
lods
lret
test
xor
add
cld
iret
scas
mov
inc
addl
ret
dec
or
mov
movsb
lret
mov
mov
mov
xlat
cs
inc
jge
int3
mov
jnp
fs
jge
sti
pop
cli
lcall
fsubrl
cltd
mov
and
neg
xor
push
mov
outsb
dec
mov
popa
fwait
push
cmp
call
fiaddl
add
test
jnp
xor
mov
jmp
push
jg
mov
dec
js,pn
xchg
repnz
out
decl
out
inc
cmpsb
sbb
dec
jmp
adc
and
mov
mov
and
inc
imul
cli
xor
loopne
cld
rcrl
dec
inc
imulb
test
inc
mov
out
jmp
daa
mov
dec
sub
inc
test
out
push
scas
push
xchg
movsl
ljmp
mov
add
incl
fyl2xp1
push
push
loope
insb
pop
pushf
and
scas
sbb
dec
mov
mov
jle
call
pop
add
insl
loop
mov
push
push
mov
je
inc
das
jbe
loopne
push
xchg
movsl
pop
jnp
dec
loope
shl
cmc
test
popf
xor
mov
shll
push
jo
sbb
dec
xor
pop
in
shlb
shrl
jg
frstor
mov
scas
nop
sub
mov
ficoms
pop
push
outsl
inc
sbb
jnp
mov
je
jge
pop
cmp
mov
outsb
adc
into
jae
jge
xchg
sub
lods
pop
ljmp
je
push
cmp
stc
pushl
loop
dec
addr16
fwait
stos
nop
mov
mov
lods
mov
hlt
int3
loopne
incl
add
leave
adc
fnsave
scas
std
xlat
jbe
mov
mov
int3
sbb
mov
cmp
inc
sarb
call
cltd
stos
or
mov
inc
sub
pop
mov
push
pop
clc
xchg
mov
sbb
cmp
es
loopne
adc
lcall
push
sub
pop
in
xchg
adc
jno
xchg
adcb
test
ljmp
push
or
sub
stc
int
push
mov
dec
out
ljmp
icebp
ret
mov
push
or
mov
stos
sbb
dec
mov
xchg
js
std
inc
inc
xchg
ret
mov
jbe
cmp
xlat
in
aaa
add
jnp
iret
push
ljmp
jge
out
test
mov
xchg
jecxz
in
mov
shll
or
jns
xchg
es
adc
mov
outsl
mov
pop
aas
push
sbb
dec
call
jns
add
pusha
jbe
ljmp
mov
ljmp
shl
pop
and
dec
shlb
add
shl
inc
dec
nop
insb
mov
sub
bound
ffreep
orb
sbb
push
popl
popf
test
jg
mov
mov
je
ljmp
lods
cltd
push
in
xchg
dec
mov
clc
stc
jb
adcb
push
push
mov
mov
loop
jne
push
adc
xchg
or
decl
push
or
sub
fldt
jmp
xor
ljmp
js
sbb
add
imul
movl
vmovss
adc
sbb
adc
mov
or
cmp
movsl
das
sub
daa
adc
jl
mov
push
stos
mov
sbb
inc
sbb
cmp
movsl
sti
mov
pop
sti
gs
insb
cld
outsb
in
inc
shlb
xchg
imul
test
les
add
sbb
pop
rcrl
scas
in
push
popa
neg
lea
xor
xor
popf
jecxz
fidivs
mov
cli
adc
sbb
cmp
push
mov
ja
in
mov
icebp
fs
mov
fiaddl
lret
jg
sti
gs
into
aam
loop
jnp
push
into
push
fisubrl
icebp
decl
xchg
dec
and
xchg
and
lahf
loope
js
ljmp
mov
jecxz
pop
inc
jbe
cmpb
adcb
sub
test
out
push
in
mov
out
dec
fstpt
fwait
push
mov
ss
jae
mov
push
jge
cmp
and
loope
cmp
outsl
icebp
push
ja
ja
cmp
in
loopne
enter
inc
sbb
subb
lods
in
imul
enter
outsl
aaa
leave
fs
popl
loopne
mov
mov
ss
mov
push
cmp
push
jns
arpl
sbb
mov
imul
mov
xchg
ljmp
mov
mov
insl
cltd
andl
adc
aaa
fbstp
sbb
push
sbb
xor
jne
ljmp
or
mov
jecxz
pop
push
repz
cmpsb
daa
fistpl
std
ljmp
jmp
int
xchg
push
out
push
call
mov
xchg
sub
pop
push
ljmp
inc
mov
push
repz
fsubrl
add
pop
stc
aaa
lcall
out
cmpsb
mov
sub
inc
das
orl
or
jbe
pop
shlb
mov
mov
cmpl
push
xchg
out
add
cmpsb
mov
gs
pop
cmp
sbb
ljmp
subl
jg
inc
xor
frstor
xchg
sbb
inc
movsl
add
mov
out
test
call
sbb
test
jp
dec
jl
incl
inc
xlat
into
pop
pop
stos
out
mov
xchg
xor
call
cs
outsb
sbb
aam
out
inc
sti
into
xchg
out
inc
lret
outsl
jg
lds
mov
inc
pusha
push
adc
jl
or
fdivrl
xlat
enter
mov
mov
jno
stos
call
notl
dec
inc
loope
push
call
xor
inc
xchg
out
cli
jmp
cmovs
pusha
subb
into
xor
and
add
fmuls
adcb
test
outsl
pushl
fisubl
stos
hlt
int
xchg
call
sbb
mov
in
divb
adc
ljmp
rclb
movsl
fldlg2
jg
xchg
andl
pop
mov
adc
fstpt
inc
stos
cmpsl
insl
repz
or
push
imul
nop
add
xor
xor
add
jg
frstpm(287
jg
fwait
push
fnstsw
cwtl
jbe
loopne
and
mov
push
mov
dec
or
sbb
data16
mov
dec
jge
inc
in
clc
test
mov
add
cs
pop
insb
aaa
ljmp
or
adc
js
push
xor
and
jmp
sahf
xor
pop
clc
xchg
loope
arpl
cmp
cs
sbb
xor
sbb
repz
mov
icebp
je
mov
insl
cmp
jl
ja
insb
cli
push
lahf
sub
ret
add
sub
sbb
mov
loope
clc
push
leave
out
cmp
push
mov
das
sbb
das
cli
lahf
ret
sti
or
fisubs
fcomps
sub
xor
orl
jl
pop
fcoms
aad
fisttps
jl
sbb
lret
cmp
daa
add
popf
icebp
inc
and
std
dec
fldt
insb
div
cmp
fldt
sub
mov
lret
not
aaa
sub
loopne
inc
push
cmp
or
add
sbb
dec
mov
arpl
jae
and
shrl
sub
aaa
ds
sti
das
pop
xor
inc
adc
sub
mov
jg
jle
xlat
pop
aam
addr16
sbb
neg
das
mov
pop
std
rol
sbb
add
dec
push
push
adc
inc
pop
push
dec
mov
loope
adc
sahf
mov
call
cs
cmpsb
xchg
rcrl
stos
jne
push
jle
mov
xchg
xchg
std
pushl
lret
aad
pushf
push
jp
jb
stc
enter
push
mov
bound
push
lret
bound
sbb
jl
push
movsb
dec
xor
out
pop
inc
cs
ds
or
mov
push
push
cmpsl
repz
jl
cmp
xchg
shl
outsl
test
adc
push
inc
decl
pop
lahf
pop
mov
inc
and
les
test
icebp
pop
push
roll
sub
cltd
frstor
mov
in
stos
int3
aad
cld
imul
mov
mov
or
std
xor
jae
das
std
das
mov
ret
lahf
cld
jmp
insl
inc
pop
jp
in
in
sbb
mov
xorl
in
sub
push
icebp
xchg
cmc
xlat
loop
cld
leave
adc
in
adc
sbb
test
pop
sti
mov
xor
lds
dec
xchg
add
jmp
lcall
add
mov
clc
jecxz
stos
je
cmp
ljmp
pop
ljmp
push
insb
lds
iret
push
arpl
test
xchg
outsb
cwtl
arpl
lods
fildl
pop
pop
jle
pushl
dec
adc
push
mov
out
xchg
in
fldt
push
mov
hlt
es
rcl
dec
push
xor
lods
es
sbb
das
stc
dec
pushf
loopne
mov
rol
scas
loop
or
incl
fwait
xor
xor
sub
clc
pop
cli
mov
out
imul
cmp
adc
lds
jecxz
stc
or
pop
jmp
mov
incb
fsubs
push
xchg
in
mov
testl
pop
ja
cli
xchg
fucom
and
cmp
addl
in
js
bound
xchg
pushf
out
sti
filds
inc
sahf
imul
cmp
mov
in
inc
cld
pushl
push
das
out
aaa
mov
mov
xor
shl
lea
adc
frstor
imul
lea
clc
lret
outsl
or
fists
les
pushf
icebp
xchg
push
sub
incl
add
mov
sub
adcl
popa
les
or
sbb
loopne
test
std
xor
adc
cmp
js
rclb
mov
loopne
sub
call
stos
in
adc
push
ljmp
mov
cmp
std
ja
or
test
xor
pop
and
shrl
jmp
jns
jne
mov
ja
decl
dec
mov
loopne
xchg
jo
stos
mov
aaa
pop
xor
mov
fildll
movsl
jmp
das
cld
js
or
dec
subb
add
nop
xlat
adc
test
inc
push
pop
stos
jae
sti
shrb
add
mov
std
test
sbb
sbb
pop
pop
mov
loopne
mov
aaa
or
repz
lods
add
repz
cmp
inc
nop
aad
icebp
mov
enter
push
mov
loop
pop
aad
std
lcall
adcb
sub
xor
test
add
fwait
repz
out
rolb
stos
sbb
xor
mov
push
sub
add
das
lock
rcrl
jae
xor
cmp
fisttps
and
add
jb
incl
inc
mov
inc
fisttpll
push
mov
lock
and
dec
pop
mov
inc
cmc
mov
call
jg
xorb
out
ljmp
shll
call
out
jg
or
push
repz
int3
mov
push
ljmp
or
out
jp
dec
lret
xor
lret
cmpsl
jbe
mov
test
js
mov
std
fnstenv
mov
push
mov
push
call
mov
push
push
and
cmp
xchg
test
out
aas
add
outsb
pop
gs
stos
nop
loope
push
ljmp
out
test
movsl
pop
sbb
adc
sub
cmp
shl
les
decl
xorl
imul
jmp
jg
fnstenv
mov
pop
test
sub
mov
push
sub
lock
lods
cld
mov
int
pop
and
mov
arpl
ret
and
add
adc
jne
mov
insb
dec
sub
push
stos
xchg
and
cld
mov
rolb
mov
cld
jle
push
mov
decl
add
xchg
mov
xchg
sub
sub
xor
sarb
call
or
xchg
add
mov
repnz
out
mul
decl
xchg
jb
addl
sub
mov
push
and
pop
loopne
pop
cmpsb
bnd
in
ja
sub
adc
add
pop
jb
out
dec
scas
push
pop
movsl
fbld
lock
mov
idivb
pop
ret
cmp
fisubrs
negl
hlt
jg
outsl
lock
int3
call
stc
sub
hlt
push
ss
or
push
divb
adc
inc
dec
inc
cmp
js
ss
inc
scas
ljmp
hlt
pop
das
xor
loope
adc
daa
mov
decl
clc
mov
aam
in
add
adc
lock
outsl
lds
inc
mov
pusha
jp
add
idiv
mov
data16
or
mov
mov
into
xor
and
mov
pop
std
in
cs
push
lods
cmp
in
into
mov
xchg
mov
testl
pushf
fadds
fxch
inc
fadds
out
jb
int
jnp
inc
popf
jg
jg
cmp
jnp
pop
push
inc
adc
pop
mov
mov
test
and
xor
pop
inc
and
mov
inc
mov
pusha
jg,pn
outsl
inc
add
mov
ljmp
pop
push
cmpsb
inc
cltd
inc
pushl
sbb
pop
push
dec
jg
repz
adc
mov
push
rorb
mov
mov
sti
mov
das
sbb
inc
add
pop
xor
js
clc
jmp
push
mov
cmp
rclb
outsb
cli
arpl
mov
fisubl
adc
inc
cld
mov
ret
ret
jg
cli
or
cmpsb
in
fistl
jg
mov
xchg
stc
inc
jg
rcrb
aas
fimuls
mov
loop
inc
inc
inc
popa
rcrl
xchg
addb
aam
mov
dec
aad
call
out
push
arpl
sbb
sub
jecxz
cmp
out
push
imul
push
and
jmp
stc
and
inc
divl
std
jg
mov
les
lea
sahf
and
sti
mov
or
or
loopne
pop
scas
cmp
jmp
mov
push
inc
ss
ds
daa
ret
daa
rcrl
in
stos
decl
fnstenv
xchg
mov
mov
cld
lods
call
mov
movsb
pop
mov
stos
lcall
fildl
sub
incl
or
mov
lods
mov
push
mov
test
fs
movsb
ja
loope
cli
shlb
test
out
lret
push
scas
test
rorb
ja
movsl
or
xor
shr
js
sub
aaa
outsb
mov
ss
incb
pop
popa
adc
pop
aam
xchg
lcall
psrlw
inc
xchg
adc
mov
fidivl
jnp
push
push
shrl
stos
or
jg
jmp
sub
popa
scas
int3
mov
sub
add
out
ja
aaa
hlt
fistps
push
in
jae
scas
add
and
add
popa
or
lcall
mov
and
popf
jno
fcoml
push
pushl
push
jnp
test
xor
int
out
jge
lcall
jno
mov
xchg
ss
sub
loop
cwtl
lock
ljmp
fcoml
loopne
sbb
mov
push
fdivs
add
jge
call
fsubrl
clc
mov
and
and
out
popf
fsubs
dec
mov
mov
es
in
addr16
sti
sub
inc
adc
roll
hlt
and
adc
int3
cli
jle
loopne
mov
mov
data16
and
call
jns
imul
sbb
test
dec
icebp
iret
pop
out
mov
cltd
mov
movb
das
cld
jp
mov
ss
jb
sub
call
daa
aas
hlt
hlt
push
or
cmp
in
addb
dec
idiv
jmp
sbb
lock
fs
jo
mov
cltd
jno
mov
cwtl
pop
cld
pop
loopne
add
dec
push
jno
ljmp
out
dec
sahf
pop
push
add
push
mov
sub
icebp
mov
sub
gs
shl
mov
incl
xchg
leave
pop
pop
cmp
mov
stos
jb
decl
push
and
dec
push
inc
into
dec
aad
sub
mov
pop
iret
mov
jno
pop
mov
lea
jmp
call
jp
jae
in
sub
arpl
ficompl
xor
jl
popf
test
mov
adc
cmp
addb
jg
inc
cmp
or
fwait
outsl
pop
dec
in
push
rorb
outsl
dec
mov
dec
mov
fidivrl
and
ret
mov
rorl
aad
std
in
mov
push
sti
xor
mov
pusha
adc
lcall
lock
std
std
xchg
imul
mov
ljmp
mov
sub
pushf
mov
lcall
xchg
ss
lahf
mov
test
dec
xor
aam
push
lret
jg
jmp
xchg
cmpsb
inc
test
sbb
cmp
adc
out
andl
in
xchg
push
mulb
lock
and
push
enter
fmull
xchg
repnz
jmp
enter
jl
pop
ja
iret
iret
dec
and
add
pop
fnstenv
mov
insb
je
in
cmp
mull
aam
pop
int3
stc
lcall
fisubl
adc
test
test
enter
push
inc
idivb
mov
mov
shll
mov
aam
decl
mov
ret
ja
mov
enter
and
loope
call
mov
int3
sub
dec
inc
andl
pop
pop
sar
das
das
jecxz
sub
push
xlat
test
jge
jno
jecxz,pn
mov
inc
mov
jl
lcall
add
cmp
sbb
dec
lret
decl
mov
inc
imul
arpl
jg
aas
cmp
dec
ja
mov
jno
test
inc
js
mov
pop
out
and
cmpsb
fcmovne
pop
pop
sahf
icebp
mov
or
flds
inc
mov
test
in
ret
js
ds
inc
mov
sbb
dec
xlat
xchg
push
aam
ret
jb
loop
iret
ret
and
fistl
pop
pop
ret
incl
or
dec
dec
xchg
and
aam
push
into
mov
mov
adc
jae
pushf
mov
int3
movsb
lea
insl
movsl
test
add
xlat
ret
sbb
inc
in
aas
addl
ret
js
or
push
mov
out
xchg
inc
adc
pushf
lods
jge
mov
jg
mov
pop
pop
lret
fnclex
fldenv
inc
test
dec
sbb
xchg
inc
into
dec
add
mov
insl
out
test
mov
pop
mov
aas
repnz
adc
mov
fisttpl
xchg
outsb
imul
mov
cltd
iret
lret
out
pop
cs
or
pop
jno
ret
jge
js
dec
inc
dec
and
push
ret
mov
adc
test
imull
mov
bound
in
out
insl
cmpsb
mov
dec
and
mov
sub
repnz
xor
jg
test
mov
ret
jbe
and
daa
outsb
popa
xchg
aas
sahf
push
in
and
or
jge
fxam
mov
jae
das
mov
and
pop
iret
insl
jmp
cmp
cli
cmpsb
stc
call
add
add
mov
andl
cli
leave
adc
fcmovnu
adc
aaa
xchg
addr16
mov
ret
jno
and
xchg
add
pop
repz
pop
mov
lock
fisttpl
and
jg
repnz
pop
shl
sub
int
icebp
xchg
ljmp
cld
jle
add
sbb
mov
jae
cmpsb
fs
imul
inc
mov
xchg
pusha
jmp
sbb
jnp
test
cmp
mov
xchg
lods
pop
in
mov
jg
inc
leave
and
aam
push
xlat
cs
test
inc
cmp
into
add
aas
jge
jg
cmp
les
loop
lods
adc
inc
lcall
push
push
jge
out
push
dec
inc
cli
xchg
test
ljmp
cmc
pop
adc
outsb
push
xor
jle
outsl
push
mov
dec
data16
cltd
jg
jmp
movsl
fs
out
sbb
push
lret
cmp
pushl
sub
pushl
cwtl
pushf
push
adc
flds
pusha
push
mov
out
in
call
cmp
out
jmp
mov
jb
idivl
push
ret
popw
mov
lcall
mov
adc
enter
xor
sub
popa
dec
cmp
jg
cld
xchg
mov
loopne
inc
stos
into
aaa
sub
push
pop
js
mov
add
repz
cmp
push
in
rclb
cs
fimull
and
cs
es
std
es
rcrl
stos
in
out
push
ret
sub
lret
js
cmp
outsb
insb
ss
aaa
pop
arpl
mov
dec
divl
nop
xchg
popa
mov
aaa
push
push
ljmp
jg
je
mov
ret
cmp
jbe
inc
lock
and
call
ljmp
xchg
pop
fistpl
pop
in
xchg
pop
push
into
pop
jne
cwtl
das
pushl
push
out
loopne
lret
aaa
loope
cmp
and
in
or
xchg
xchg
imul
gs
inc
sbb
jb
out
lahf
call
mov
dec
add
and
outsb
ds
sbb
js
fsubrl
dec
out
nop
outsb
cs
ds
out
fstpt
xor
jp
sbb
scas
js
sbb
enter
shl
push
jb
push
loop
ljmp
lret
push
mov
les
fidivrl
movsb
test
jg
sbb
out
imul
aad
testl
push
stc
idivb
and
fxam
sub
repnz
fdiv
sti
out
fimull
out
xor
or
fstpt
mov
dec
in
nop
pop
lds
ss
jg
aas
jmp
dec
out
mov
outsb
int
cmp
lods
loope
dec
stos
push
pop
incl
fists
mov
mov
dec
xchg
loopne
adc
push
incl
fiaddl
pushl
outsb
rorl
jge
lcall
jb
xlat
dec
pop
cltd
or
jb
pop
fistpll
clc
adc
test
xor
repz
in
xchg
decl
jbe
xchg
and
push
mov
loopne
inc
stos
inc
int
dec
cld
cltd
and
and
aaa
xchg
js
jb
xchg
in
push
inc
pop
mov
cmc
cltd
call
iret
xchg
cmp
cs
idivb
sub
jmp
sub
in
push
iret
scas
cmc
daa
cmp
mov
outsb
scas
add
sbb
jp
call
adc
decl
pusha
mov
mov
loop
dec
stos
test
js
fistps
mov
jns
xchg
fimull
repz
ss
sub
pop
fmuls
shl
mov
ds
adcl
cs
push
xlat
jb
xchg
pop
mov
les
add
lds
jnp
in
sbb
ret
in
cmp
pushw
mov
jno
jbe
addr16
loop
lcall
mov
stc
icebp
dec
enter
fidivl
lahf
fisttps
ss
sub
mov
or
push
rcll
jp
xchg
aas
inc
imulb
aad
mov
push
js
or
lret
repnz
mov
iret
inc
mov
pop
lret
outsb
scas
cmp
jg
mov
sub
pop
inc
lcall
clc
fidivrl
movsb
scas
out
ljmp
pop
imul
xchg
jl
mov
call
push
ret
xchg
adc
addl
jo
sub
or
mov
inc
add
and
in
jg
ds
lock
sub
inc
aas
pusha
aas
jl
cwtl
aas
mov
sarb
add
add
nop
and
push
cmp
cmp
je
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
fnstcw
fidivrs
in
xor
dec
cmp
pop
cmp
cmp
cmp
cmp
std
cmp
cmp
cmp
cmp
cmp
cmp
jge
and
aas
ja,pt
leave
ds
pop
loop
cmpsb
aas
jns
cmpb
aas
mov
sti
into
aas
fdivrl
jmp
nop
xor
call
das
push
jl
mov
xchg
xor
iret
xor
xor
xor
xor
jg
bound
xor
xor
xor
xor
xor
mov
test
mov
xor
push
xor
outsb
xor
incl
cld
xor
aas
fdivl
xor
xor
pushl
out
add
sahf
aaa
scas
aaa
mov
aaa
adc
and
cmp
push
cmp
je
mov
mov
shll
xor
fs
loopne
incl
ss
into
ss
or
sbb
cltd
aaa
fbld
aaa
out
clc
aaa
or
cmp
cmp
adc
cmp
aas
cmp
dec
cmp
jae
mov
test
cmp
cmp
jp
sbb
dec
cmp
cmp
cmp
cmp
clc
das
hlt
les
cmp
enter
mov
add
das
xor
decl
out
xor
pop
xor
jns
fwait
xor
xor
xor
or
xor
sub
sub
movsl
xor
fbstp
out
or
xor
cmp
pop
xor
xor
xor
xor
xchg
xor
xor
xor
ljmp
sbb
and
dec
xor
xchg
fwait
xor
lcall
adc
daa
aaa
data16
jge
xchg
aaa
stos
aaa
mov
cmp
imul
sbb
cmp
les
pop
cmp
cmp
nop
cmp
mov
leave
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
lods
ds
ds
add
or
fstpt
add
shl
pop
xor
mov
fwait
xor
xor
xor
push
add
or
inc
cld
pushl
push
xor
jbe
xchg
xor
xor
idiv
incl
push
xor
xor
in
or
xor
in
xor
xor
xor
xor
pop
xor
das
lock
ss
ret
ss
add
fnstcw
ss
xor
aaa
mov
xchg
aaa
inc
cmp
xchg
cmp
cmp
mov
ljmp
xor
cmp
cmp
pushl
jl
mov
xchg
cmp
cmp
shll
cmp
cmp
cmp
cmp
cmp
call
insb
scas
cmp
cmp
cmp
dec
cmp
mov
xchg
ss
jo
shr
and
or
sbb
sub
xor
stos
loope
lock
jg
or
xor
xor
xor
xor
xor
mov
push
xor
jg
xchg
lods
inc
xor
aaa
push
aaa
sub
cmp
gs
mov
ret
mov
in
cmp
cmp
cmp
cmp
and
xor
lock
cmp
mov
mov
xchg
cmp
push
cmp
outsl
cld
ljmp
mov
cmp
ljmp
and
cs
jg
cmpb
push
cmp
dec
mov
cmp
cmp
jg
clc
cmp
cmp
cmp
cmpl
cmp
hlt
ds
ds
inc
ds
ds
ds
ds
mov
aas
popa
aas
idiv
fildll
std
jmp
xor
xor
outsb
loope
pushl
add
xor
xor
jl
fidivs
xor
xor
jg
pushl
and
pop
xor
xor
cmp
rcrb
cld
outsl
jge
sub
das
imul
incl
sbb
daa
aas
sub
aas
inc
aas
dec
aas
dec
ljmp
pop
aas
arpl
outsl
aas
jne
cmpl
xchg
aas
xlat
incl
cltd
aas
mov
aas
jecxz
aas
iret
aas
fnstcw
fidivrs
in
sbb
cli
xchg
lock
add
xor
add
dec
std
xor
xor
fdiv
movsl
jg
xor
xor
dec
inc
xor
gs
jb
jns
inc
fbstp
popf
push
nop
xor
lods
xor
scas
aam
sarl
mov
xor
jle
xor
xor
xor
popa
pop
xor
lcall
push
xor
imul
jnp
pushf
xor
xor
jg
pushl
fdivl
loope
hlt
xor
xor
xchg
xor
xor
lods
xchg
fcomip
xor
xor
xor
xor
xor
xor
xor
xor
std
das
adc
pop
xor
xor
pop
xor
xor
xor
decl
arpl
xor
add
xor
xor
aaa
ss
ss
jecxz
movsl
imul
mov
push
pushf
ss
lds
jmp
pop
mov
aaa
pop
aaa
bound
jne
jl
clc
lods
aaa
mov
sbb
lock
mov
and
push
lcall
jnp
test
jmp
cmp
dec
cmp
cmp
cmp
cmp
aaa
xor
aaa
std
pushf
cmp
cmp
cmp
fwait
pop
jae
jg
test
cmp
gs
cmpb
mov
lock
popl
aas
pop
aas
psrlq
and
and
or
dec
xor
inc
sbb
sub
xchg
decl
mov
ret
fdivl
loope
out
adc
sbb
and
daa
sbb
xor
xor
out
in
std
hlt
dec
jg
xor
xor
xor
insb
xor
xor
xor
scas
cmpsb
pop
rcr
je
jp
adcb
iret
subl
stos
xor
xor
xor
adc
mov
out
xor
xchg
inc
push
and
dec
movsl
or
divb
push
xor
push
mov
dec
mov
call
xor
divl
ds
and
cmp
js
cmp
cmp
jno
jp
std
cmp
cmp
cmp
arpl
fimull
jns
ds
xor
jb
insl
std
xor
call
cmp
cld
outsl
push
pop
pop
fdivrs
out
jne
cli
cmp
ret
into
outsl
fisttpl
xor
adc
inc
xor
repnz
inc
cmp
sbb
mov
idivb
cmp
mov
xor
rcll
decb
int
cmp
popf
fstps
cltd
cmp
cltd
js,pt
mov
xchg
mov
sbb
or
insl
xchg
adc
mov
and
andb
inc
daa
pop
ret
in
and
pop
js
pop
xor
mov
nop
cld
add
add
inc
add
loopne
cs
add
nop
jmp
jge
push
adc
and
fs
dec
xchg
push
xor
or
pop
mov
or
insb
insb
div
jb
jb
inc
add
jae
daa
pop
mov
insb
adc
mov
add
and
and
inc
aas
xchg
iret
dec
loopne
mov
test
add
popl
and
push
and
add
inc
mov
sbb
enter
stos
sbb
pop
mov
push
add
jns
and
hlt
cld
pop
dec
adc
add
and
xchg
add
xchg
insb
dec
imul
scas
movsb
mov
inc
push
inc
mov
inc
add
nop
cmp
inc
inc
xor
test
add
stc
test
stos
adc
add
daa
add
insb
inc
jo
sub
jb
cs
push
stos
enter
aas
in
repnz
and
inc
inc
adc
add
and
out
adc
inc
stos
enter
adc
add
adc
add
xor
jns
mov
adc
add
or
xor
mov
adc
and
and
out
dec
dec
and
add
add
test
and
xor
xor
int
xor
inc
inc
movsb
inc
xor
add
or
xor
adc
jb
or
fs
lods
mov
sbb
lods
xchg
adc
subl
mov
xchg
push
and
mov
push
roll
aaa
and
das
add
xchg
and
xor
adc
jae
enter
xor
repz
xor
xor
xor
or
test
xor
adc
addb
inc
repnz
pop
inc
mov
push
jg
push
jnp
pop
mov
sti
push
fsubrl
rep
or
jp
inc
add
sahf
pushl
add
mov
pusha
mov
pop
adc
icebp
xor
adc
inc
mov
mov
add
and
leave
or
les
pop
inc
cmp
test
push
lock
ret
mov
add
fsubrs
dec
fisttps
xlat
cmp
out
popf
cmpsb
fldl
lods
cld
sub
inc
dec
rdpmc
pop
mov
adc
add
cmp
shr
cmp
pop
out
mov
fistpl
dec
cmp
lock
sbb
in
jl
pusha
or
jno
jle
not
adc
mov
jno
adc
sbb
mov
mov
notb
hlt
mov
fdiv
and
call
subl
ret
mov
pusha
out
ja
mov
shll
popa
or
xchg
sbb
fidivs
andl
ds
and
xor
pop
and
fwait
sub
mov
dec
les
dec
inc
and
add
or
add
add
mov
test
mov
inc
mov
xor
cs
xor
fs
addr16
sub
jae
mov
je
insb
int
lret
push
sbb
dec
inc
jg
cmp
or
rorb
and
dec
mov
lcall
gs
dec
shll
dec
inc
inc
imul
gs
popa
insl
rol
add
fwait
adc
js
faddl
cwtl
pop
or
lds
test
out
icebp
lahf
and
dec
cmp
cmp
aad
dec
sub
icebp
aaa
dec
call
push
lcall
ja
mov
je
cmp
push
notl
rorb
push
adc
out
sbb
in
enter
and
or
test
jnp
outsb
adc
push
push
jno
add
fnstcw
and
shlb
nop
out
pop
or
stc
outsb
sub
or
neg
mov
pop
pop
pop
pop
jno
pop
sahf
daa
mov
dec
xor
lods
fcomps
jo
xor
sub
and
xor
mov
xchg
lcall
adc
add
or
callw
push
and
movsb
test
inc
push
dec
xchg
std
stos
jmp
daa
test
pop
or
mov
xor
pop
sbb
pcmpeqw
or
push
std
push
ljmp
lret
xchg
jp
xor
push
cmp
push
push
cmp
jecxz
cmp
add
cmp
jl
push
adcl
or
jne
xchg
cmp
repz
lods
add
and
scas
or
popa
imul
mov
xor
add
pop
mov
in
lret
pop
xchg
gs
outsl
outsb
gs
xchg
gs
cs
insb
xchg
aam
aad
insb
xlat
popa
gs
xchg
mov
jne
arpl
dec
xchg
push
loope
imul
sub
push
data16
cld
sti
xor
call
mov
rorl
mov
call
test
mov
icebp
gs
daa
je
lret
int3
adc
daa
addr16
push
into
jp
sarb
daa
daa
daa
rcl
shll
add
cmp
dec
cmp
push
fcmovb
dec
movsb
addb
vshufpd
sub
testb
imul
inc
jns
js
in
mov
aam
int3
add
incl
jns,pn
in
xchg
popa
fbld
sti
outsb
pop
push
push
inc
and
mov
jl
xor
push
adc
xlat
push
jp
dec
push
es
cmpsl
insl
jge
inc
shll
sbb
mov
add
ret
test
jl
or
ljmp
push
adc
in
int3
sbb
dec
push
decl
jne
nop
xchg
xchg
adc
inc
and
add
mov
cld
sub
cmc
xchg
in
add
inc
inc
in
in
test
mov
hlt
pushf
call
mov
inc
mov
enter
lcall
pop
xchg
push
lods
and
pop
mov
arpl
push
cmp
fcoms
xchg
std
xchg
std
sub
xchg
std
lret
mov
in
mov
mov
mov
mov
lret
mov
mov
xor
shrb
mov
jge
inc
je
dec
lock
push
pop
xchg
pop
inc
and
mov
pop
sbb
sbb
cli
or
add
pop
cld
xor
dec
dec
std
in
xor
push
out
je
mov
push
hlt
add
div
call
orl
add
rorb
lock
pop
or
cli
notb
xchg
xchg
popa
xchg
addr16
lret
mov
inc
outsl
outsb
outsb
gs
frstor
je
jns,pn
sub
adc
mov
sub
mov
popa
jne
arpl
or
imul
imul
js
fildll
jb
sub
js
outsl
jb
outsb
mov
gs
rcrb
or
bound
shlb
out
call
test
inc
push
xchg
push
add
pop
add
cmp
movsb
add
add
aam
inc
push
fldln2
add
fldenv
imul
adc
mov
scas
dec
divl
inc
inc
rclb
fwait
push
daa
or
dec
dec
xchg
and
aaa
mov
jge
fldl
mov
xchg
push
es
rcl
xor
arpl
je
or
or
movsb
imul
push
dec
or
mov
inc
pop
repnz
xor
and
pop
repnz
out
out
sub
push
sbb
or
adc
jo
or
sbb
repz
subb
outsb
mov
push
aam
add
fmuls
shlb
mov
loopne
add
pop
or
mov
xor
jge
call
enter
int
and
mov
shlb
mov
add
add
ret
fisubrs
sbb
sbbl
cmpl
push
mov
or
xchg
test
sahf
mov
mov
push
cmp
push
filds
add
adc
or
pop
ds
xchg
rorb
imulb
add
sbb
leave
pop
mov
mov
add
stos
js
or
mov
xchg
lret
testb
adc
out
jge
lock
pop
pop
or
inc
sbb
or
add
enter
inc
loopne
and
enter
sbb
inc
adc
es
in
adc
inc
xchg
sbb
or
andb
add
dec
repnz
jns
add
pusha
inc
xchg
dec
push
enter
add
mov
cli
movsb
hlt
cmpsb
sbb
pop
jb
dec
xchg
push
sbb
inc
addb
xor
test
add
lods
mov
mov
pushf
int3
add
adc
sbb
jmp
add
jae
push
js
in
sub
mov
or
loope
mov
push
pop
lret
enter
daa
imul
mov
cmpsb
or
mov
pop
push
inc
and
ss
cmpsb
imul
imul
mov
lock
fmulp
ret
xor
shll
imul
mov
imul
outsb
mov
xchg
dec
stos
pop
add
mov
cmpsb
xor
add
pop
xor
xchg
pushf
ret
xor
test
ja
xor
inc
mov
push
jo
sub
add
adc
daa
out
outsl
pop
or
loop
fbld
lock
popa
jns
jne
jae
xor
jge
mov
dec
push
push
js
inc
pop
sti
ja
outsb
jp
js
outsl
fwait
lahf
rcll
push
dec
inc
push
sub
push
push
push
dec
inc
mov
sub
rorb
add
fdiv
mov
inc
inc
inc
adc
fldcw
mov
test
imul
sbb
xchg
or
pop
mov
inc
enter
push
or
xor
and
inc
push
adc
lds
and
push
fbstp
out
inc
adc
subb
or
push
aaa
and
xchg
rcrl
xchg
mov
adc
sbb
lds
inc
add
mov
inc
adc
xchg
xor
pusha
adc
adc
jno
sub
dec
movsl
sbb
push
or
adcb
mov
sub
adc
rcr
andb
addr16
pop
mov
lcall
les
push
mov
push
outsb
jb
adc
andl
dec
dec
push
jl
outsl
js
inc
xchg
xor
gs
jno
mov
or
xor
adc
mov
fs
and
std
sbb
sbbb
adc
andb
sub
stos
lods
sub
inc
mov
hlt
addb
dec
jae
jg
and
inc
ffreep
into
roll
inc
inc
add
sub
pusha
add
mov
jg
jns
dec
es
fs
and
sbb
push
sbb
pop
xchg
test
mov
jge
adc
pop
cld
add
dec
lcall
mov
mov
enter
out
xlat
xor
dec
and
or
pop
inc
xlat
je
jge
add
ret
das
dec
mov
add
addl
inc
pop
xor
mov
pop
jno
adc
fwait
imul
jecxz
ss
inc
push
push
add
dec
scas
inc
out
adc
sub
lea
jne
cmpb
mov
push
pop
test
mov
and
bound
xchg
xchg
clc
push
in
adc
fnstenv
cmp
jne
or
mov
adc
mov
adcb
push
lock
inc
push
jnp
add
push
dec
movq
mov
xorl
mov
jns
pop
push
xor
inc
les
xchg
or
add
mov
int3
dec
xor
je
movsl
fcmovnbe
xor
cmovno
imul
dec
outsl
sbb
jae
pop
rorl
add
fs
add
add
jl
sbb
pusha
push
mov
gs
adc
fcmovnu
ret
pop
add
dec
cld
jae
push
inc
cmovns
add
incb
fldlg2
imul
sbb
pop
or
adc
dec
mov
neg
addr16
pop
jecxz
or
jns
and
mov
fnstsw
jecxz
inc
and
jmp
outsb
inc
jae
and
mov
jns
popa
and
add
arpl
ss
addr16
jo
mov
aaa
outsb
es
push
or
add
sti
adc
sub
fisubl
jb
cmp
fnstenv
xor
popa
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
pop
adc
xchg
xchg
outsb
jae
pop
xor
xor
cmpsb
fcmovnu
gs
push
sub
shll
insb
or
daa
dec
dec
sub
fs
xlat
outsb
xchg
mov
jl
in
push
daa
jbe
mov
ret
fs
outsl
pcmpeqw
lret
je
and
xor
inc
push
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
add
sbb
xchg
lock
push
add
pop
mov
mov
jg
cli
lea
xor
xor
lea
pusha
xor
jg
and
lea
stos
xor
xor
fidivrs
mov
fwait
xor
call
test
das
inc
xor
xor
xor
xor
xor
xor
xor
mov
jg
movsl
enter
aam
out
divb
xor
pop
arpl
xor
dec
ss
jg
mov
fisttps
aaa
xchg
aaa
pushf
cmp
aaa
cmp
cmp
xchg
mov
call
test
into
cmp
cmp
cmpl
jg
dec
cmp
cmp
lret
cmp
cmp
stos
cmp
or
jne
call
jo
cmp
dec
ja
xchg
mov
xor
in
dec
xor
jg
test
mov
mov
xor
xor
xor
xchg
sub
int
fnstenv
test
pop
inc
sub
push
ss
ss
out
imul
mov
aaa
inc
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
mov
or
xlat
push
adc
dec
push
mov
xchg
and
xchg
jo
inc
xor
inc
add
pop
inc
movsb
xor
xchg
nop
and
mov
movups
adc
mov
jae
jne
pop
sbb
inc
outsl
pavgw
or
mov
cmp
add
call
inc
mov
dec
popa
add
or
shlb
call
pop
mov
mov
pop
dec
cmovns
push
test
add
xor
add
addb
addb
iret
pushf
dec
or
and
fwait
stc
test
xor
cld
popf
add
inc
or
jl
and
pusha
adc
xchg
add
mov
fldl
es
sbb
xor
sbb
leave
pop
adc
jle
mov
and
mov
or
fcoms
add
sub
add
add
inc
cmpl
pusha
inc
jl
lods
add
in
adc
mov
rorl
cmp
xchg
sub
and
mov
add
adc
daa
scas
add
add
add
fdiv
and
or
add
incl
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
