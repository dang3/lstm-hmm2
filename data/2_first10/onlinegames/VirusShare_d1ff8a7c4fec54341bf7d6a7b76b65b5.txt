out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
push
push
inc
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
gs
sub
jle
out
gs
shlb
xor
gs
sub
gs
sti
mov
daa
mov
mov
pop
jmp
push
lock
out
dec
push
imul
and
adc
pop
add
int
jns
out
in
or
push
or
add
and
out
mov
adc
das
add
xor
and
xor
ss
pop
push
nop
mov
dec
pop
cld
inc
push
lret
js
mov
push
and
dec
push
or
sbb
pop
fdivr
std
bound
pop
mov
xlat
push
xorb
fs
je
faddl
movb
cs
push
push
pop
dec
dec
rorl
daa
add
imul
mov
jb
insb
outsl
arpl
sti
add
dec
mov
or
inc
pushl
mov
shlb
mov
lcall
sbb
sub
or
scas
lock
hlt
stos
xor
mov
add
shll
cwtl
test
shll
or
jne
sub
cmp
stos
pusha
imul
mov
lcall
scas
dec
shll
pop
insb
xor
shll
sahf
mov
rcl
xor
cld
or
aam
dec
shll
lcall
push
dec
stos
jecxz
mov
mov
cmp
push
js
out
pop
imul
push
outsb
in
das
cmpsb
imul
cmpsb
imul
cmpsb
imul
insl
lcall
xchg
shll
test
nop
jb
shll
test
jmp
decl
loop
movhps
cmp
cmpsl
loop
mov
ss
mov
mov
test
dec
outsb
je
jb
gs
test
pusha
dec
in
sbb
push
gs
fs
incl
jae
daa
dec
jo
outsb
push
jb
inc
adc
push
jo
dec
dec
dec
dec
dec
inc
push
and
sbb
add
or
inc
add
add
xchg
add
aaa
sbb
pusha
lret
cmpsb
add
add
jnp
test
pop
add
and
add
es
and
add
inc
fmul
push
sbb
mov
inc
fldenv
add
add
popa
fsubs
test
add
mov
mov
and
ja
inc
pusha
stos
test
mov
aas
add
pop
sbb
push
popa
rorl
in
add
fldcw
adc
sbb
mov
inc
inc
xchg
adc
pop
mov
lods
mov
inc
fldt
dec
and
fs
xchg
les
mov
mov
das
xor
push
sbb
adc
ud2
xlat
std
pop
cli
push
add
add
add
jae
push
por
add
punpcklwd
testl
jg
mov
sub
aas
push
inc
jb
ljmp
call
pop
ja
or
push
mov
jae
pop
and
addr16
int
pop
xor
push
sbb
filds
mov
mov
pusha
pushf
lea
jmp
sarb
loope
bt
data16
test
pusha
bt
call
jge
inc
xchg
imul
outsl
pusha
out
or
cmpsl
jg
int
push
dec
fisttps
push
testl
adc
jne
jae
inc
js
cli
jnp
xor
outsl
je
fsts
filds
stc
inc
ret
je
outsl
outsb
xor
xor
daa
mov
mov
je
jo
jne
add
and
pop
pop
cs
add
lcall
std
inc
arpl
popa
insl
push
dec
inc
push
push
inc
push
inc
pop
std
mov
arpl
data16
cmpsb
outsl
ja
and
pop
inc
jne
jb
fldt
mov
sbbl
inc
popa
jb
inc
pop
in
lcall
jno
addr16
pop
dec
test
sub
push
fs
dec
fs
out
mov
insb
imul
dec
pop
insb
or
jmp
fs
jg
out
or
xor
fstpt
jbe
jne
fs
imul
in
imul
lcall
je
cmc
insb
xor
insl
dec
test
ja
or
jg
ret
sbb
pop
into
mov
stos
pop
pop
and
jae
jo
fs
jl
call
mov
arpl
cmp
pop
add
add
or
repz
dec
mov
mov
pop
push
mov
mov
mov
xlat
rol
cli
mov
leave
mov
daa
lret
push
movsb
fneni(8087
mov
mov
mov
int
fnstenv
pop
and
std
dec
outsb
out
out
xor
rcl
mov
mov
stc
adc
into
fidivl
mov
bound
enter
arpl
mov
mov
adc
mov
mov
fisttpl
rolb
lock
enter
in
xlat
ffreep
in
mov
lock
or
mov
sti
ret
mov
mov
mov
in
mov
aad
rcl
mov
loope
in
lret
cli
fadd
leave
mov
pushl
mov
sub
mov
pushl
enter
mov
aad
mov
leave
ffreep
lods
shr
fstpt
out
lds
movl
mov
fstpt
cmp
jecxz
lods
pop
mov
mov
lock
mov
lds
loope
into
loop
rol
xlat
adc
or
ror
fistpll
dec
mov
mov
lret
aad
adc
lods
rorl
xlat
rcrb
ret
negb
sti
lahf
cmpsl
mov
out
cmpsl
shr
les
jmp
icebp
and
lret
mov
sbb
test
loope
sbb
xlat
adc
leave
xlat
in
leave
out
fcmovnu
push
shrb
mov
lret
mov
mov
out
in
push
sub
mov
movsl
mov
iret
push
mov
ret
das
push
outsl
push
test
cmpsl
pop
mov
cs
pop
nop
adc
sub
mov
cli
xchg
pop
push
hlt
adc
insb
gs
xor
aas
fnstsw
fs
mov
dec
dec
dec
inc
repnz
addb
inc
inc
das
mov
and
inc
dec
pop
xchg
lret
dec
cs
pop
popf
pop
mov
repnz
pop
sbb
pushf
fstpl
push
add
sti
aas
push
mov
push
push
adc
fisttps
mov
push
push
push
mov
xor
mov
lea
outsb
mov
pushl
add
mov
or
out
adc
mov
or
call
fisubrl
adc
pop
filds
orl
push
pop
jmp
add
mov
or
into
test
dec
lock
adc
dec
mov
add
leave
adc
aad
mov
push
mov
mov
jge
lea
adc
mov
push
push
call
lea
or
mov
sub
fucomi
outsl
incl
add
push
or
or
movb
sti
sti
fidivs
push
adc
call
imul
loopne
pop
ret
mov
imul
test
xchg
jbe
push
call
ret
out
or
or
mov
or
jg
and
es
call
and
push
movzbl
dec
js
push
insl
cs
adc
mov
andb
mov
dec
divb
aas
inc
inc
pop
cmp
pop
jl
push
imulb
pop
mov
nop
mov
movsb
mov
shlb
ret
cmpw
xchg
mov
add
cmpl
or
add
mov
and
and
and
mov
or
sbb
and
and
push
jbe
xchg
xchg
nop
pushl
xor
out
jne
or
call
cmp
je
mov
cmp
je
or
divl
cld
mov
adc
pop
cmp
ja
mov
in
outsl
in
in
xor
mov
mov
cmp
ljmp
sti
testb
push
sub
je
addl
or
incl
aas
xor
xor
int
adc
or
push
jmp
loopne
jecxz
ret
xor
add
out
sub
lods
imul
add
mov
divl
fadds
add
jge
push
push
push
sbb
fimull
sbb
mov
es
push
push
and
pop
movsl
ficomps
leave
dec
ret
fcmovbe
pop
pop
push
mov
pop
sbb
aaa
push
or
mov
js
lods
dec
sbb
sbb
cmpl
mov
push
or
test
jo
fdivs
lock
add
mov
divb
in
mov
xchg
xor
pop
mov
xor
pop
push
lods
enter
dec
dec
mov
or
ss
sbb
pop
mov
jb
add
cwtl
jbe
pop
sub
outsb
aas
cmp
jg
inc
test
sbb
pop
adc
adc
lret
push
push
outsl
outsl
sub
cmp
jbe
jne
jmp
push
push
inc
clc
push
jo
repz
push
sub
aaa
pop
cmp
jecxz
aad
pop
pop
leave
dec
pusha
push
add
xor
loopne
jl
adc
and
mov
sub
mov
lock
push
mov
insb
xor
clc
test
xor
mov
ret
mov
push
inc
xor
jo
jmp
je
pushf
jno
dec
inc
imulb
xor
push
not
mov
mov
or
out
lahf
in
push
jno
lock
je
adc
call
sbb
pop
pop
push
sub
add
insb
out
sbb
push
test
out
cmp
xchg
and
and
or
push
imul
push
adc
ss
into
adc
mov
jmp
xor
inc
dec
xor
imulb
add
clc
mov
clc
daa
push
into
sub
cmp
popf
mov
sbb
inc
in
jnp
xlat
aas
std
push
and
sti
jb
xlat
xchg
addr16
movsb
sub
decb
pop
ja
jne
cmp
xor
out
fidivl
xor
testb
add
sbb
enter
rorl
add
inc
loopne
shlb
shlb
add
pop
push
adc
pop
push
je
test
sbb
insl
rcrl
cwtl
xor
enter
je
push
jmp
adc
mov
fidivs
shr
pop
or
mov
inc
call
pop
sub
pop
inc
idiv
fbld
xor
adc
mov
inc
inc
jmp
adc
mov
andb
mov
jmp
xor
ficoml
nop
push
mov
lock
and
test
sub
add
daa
adc
enter
in
add
lods
cmp
add
mov
incl
xchg
xor
adc
je
mov
pop
pop
aam
enter
inc
imul
cmp
pop
ja
xor
dec
jbe
mov
cmp
es
movb
cmp
jb
pop
mov
jg
sub
or
andl
shrl
adc
ljmp
or
out
outsb
sti
and
add
push
add
sub
jno
adc
inc
cmp
jecxz
jmp
shr
lea
loopne
cmp
jae
incl
cmp
pop
lret
shr
add
imul
sbb
mov
dec
or
mov
mov
mov
mov
jne
shl
sbb
adc
fcomps
rorb
sbb
loop
or
adc
or
stos
lock
jne
cmp
roll
pop
xchg
mov
pop
dec
stos
pop
leave
inc
inc
bound
push
incb
jbe
or
cmp
xlat
and
add
push
jl
and
or
add
lea
sub
shr
shl
or
mov
add
mov
and
not
and
testl
das
icebp
aaa
push
mov
push
shl
push
js
add
push
mov
outsb
jnp
mov
or
fisubs
fimull
add
stc
outsl
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
sbb
ljmp
mov
and
not
test
fisubrs
psllq
mov
jne
push
shr
or
add
dec
daa
pop
jg
push
outsl
sub
xchg
sbb
mov
push
lods
sti
fcmovnu
xchg
loop
mov
push
push
hlt
mov
not
and
sub
mov
popa
shlb
sub
jns
mov
xchg
rcr
mov
roll
into
mov
test
sbbb
or
out
or
adc
test
mov
add
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
imul
mov
mov
adc
sub
mov
loope
sbb
fdivrs
pop
fbld
mov
les
aaa
and
nop
imul
xor
repnz
or
xchg
jbe
out
cwtl
std
stos
lods
es
add
cld
and
fidivrs
imul
add
aaa
das
push
mov
cmpsb
cltd
jb
std
pop
mov
xor
lods
mov
or
cmp
and
or
popa
lret
idivb
and
mov
mov
shl
ljmp
pop
add
and
aad
aam
fiaddl
and
sbb
cld
push
fcomip
add
and
jg
jge
dec
cmp
sbb
iret
inc
rclb
push
fadds
hlt
push
ja
lods
xor
fdiv
push
pop
pop
andb
push
repnz
shll
out
and
stos
mov
lock
call
lock
imull
mov
mov
hlt
pop
adc
call
xlat
push
mov
xchg
mov
sar
out
pusha
adc
inc
add
mov
xchg
fimull
out
dec
lods
pop
sahf
fcoms
push
clc
cmp
cld
jbe
sbb
cli
fnstcw
out
ss
jg
or
add
mov
mov
mov
out
loope
in
lods
stc
out
sbb
loopne
ret
inc
enter
testb
pop
aaa
or
mov
push
fbstp
inc
fimuls
mov
lret
xrelease
cmp
or
call
stc
out
pop
inc
loop
shr
or
xlat
repnz
mov
add
sbb
and
add
loope
mov
clc
mov
daa
jle
push
push
and
sub
aad
flds
outsl
addr16
data16
push
movl
push
dec
fisttps
sub
adc
or
xor
test
fiadds
cli
jmp
add
test
xchg
fldt
xor
mov
xor
int
adc
pusha
jns
lea
lds
popa
popf
insl
adc
fisubrs
inc
sti
xor
mov
repnz
or
in
rcr
lret
call
in
leave
repnz
inc
inc
ljmp
dec
in
mov
xchg
mov
fimuls
cltd
lods
xchg
pop
fnstenv
repz
icebp
in
pop
pusha
dec
mov
cli
mov
xchg
rcrb
mov
pop
add
or
jl
mov
jle
sub
jae
mov
jnp
mov
add
sbb
lock
cli
daa
mov
faddp
cmp
aaa
addr16
xor
test
xor
mov
jae
adc
fidivs
test
aaa
or
cmp
jbe
cmp
or
push
aas
in
cld
mov
sarb
cmp
aam
cltd
js
pop
cld
sarb
push
in
jle
call
out
ss
in
cmp
clc
jl
pop
je
dec
outsl
clc
lcall
inc
gs
lods
les
xchg
lods
jge
cli
cmp
cli
mov
outsl
xor
stos
mov
pop
das
insb
sbb
push
or
in
mov
or
int3
or
inc
inc
arpl
movsb
in
movb
adc
xchg
xchg
jb
hlt
push
xchg
lods
mov
cltd
or
push
scas
xlat
mov
mov
jl
ret
pop
pop
gs
sbb
rcrl
or
lock
int3
or
push
sbb
mov
or
ja
jno
cmp
rorb
hlt
out
call
bsf
ss
in
rcrl
test
mov
or
fwait
ja
sarl
call
outsl
jecxz
rol
jb
dec
sbb
int
mov
and
loopne
sub
jecxz
jp
xchg
fcmovnb
cmp
mov
std
push
adc
add
mov
jp
cmpl
aaa
xchg
ja
mov
xor
cmp
loopne
mov
fiaddl
mov
inc
outsb
xchg
adc
repnz
repz
pop
push
roll
dec
mov
sub
jge
xlat
pop
add
pop
movsb
mov
mov
mov
xor
pop
sbb
pop
fildl
push
inc
ja
call
adc
sbb
sarl
sub
push
push
push
mov
push
testb
inc
lods
adc
xor
xchg
adc
mov
outsb
lea
jmp
sub
lahf
inc
pop
inc
adc
push
iret
jb
adc
sti
mov
adc
adc
add
sbb
cmp
je
cmp
jne
xchg
imul
dec
cmp
lea
je
push
sub
dec
and
dec
xchg
and
imul
lea
mov
rorl
push
cmp
fidivrl
fcompl
jmp
repz
add
stos
cmp
cmpsb
sbb
push
adc
mov
xlat
clc
call
lcall
push
or
pop
cld
pop
repz
call
sub
pop
idivb
mov
dec
cmp
or
out
or
testb
fisubrs
ss
loopne
xor
pop
adc
fs
dec
mov
fdivrs
mov
mov
int3
push
loopne
pop
int3
rolb
aam
aad
neg
call
push
dec
les
in
out
imul
das
test
or
call
jl
addr16
gs
das
lock
addr16
fcomip
jo
hlt
gs
neg
into
push
rcrb
or
mov
mov
or
daa
out
mov
inc
call
sbb
ret
out
in
inc
mov
mov
scas
dec
mov
mov
lods
outsb
les
fimuls
repnz
push
pop
inc
loopne
xor
test
sub
adc
xchg
fcomi
in
lcall
inc
add
dec
out
push
jle
pop
cs
push
lock
icebp
inc
repnz
mov
shlb
xor
mov
push
push
cmp
add
fstps
sub
aam
lods
or
sbb
xor
orl
push
andb
lcall
and
xor
out
jbe
sbb
mov
outsl
xor
push
add
subl
add
stc
clc
out
or
ret
xchg
je
sbb
cld
scas
xor
mov
sub
shrl
or
xor
or
or
adc
inc
cmpb
xchg
jne
sbb
test
mov
mov
sbb
dec
add
pop
lock
mov
inc
pop
adc
push
xchg
clc
ret
pop
int3
sbb
sub
into
adc
xor
lea
xchg
cmp
jne
cmp
mov
inc
sbb
popa
fidivrs
xor
sbb
scas
fs
rolb
jle
or
add
hlt
push
shlb
push
and
push
pop
call
fidivs
jmp
inc
inc
inc
mov
mov
jb
fstpt
ds
pop
pop
cmp
jne
icebp
add
mov
push
repnz
mov
cmova
adc
andl
mov
cmp
add
cld
pop
jb
xor
cmp
fcomps
sarl
mov
jg
repz
subb
cmp
je
dec
dec
std
mov
jne
pop
push
arpl
pop
rorb
das
fsubrl
cmp
lock
cmpsb
ret
push
xchg
sub
lcall
or
ret
sbb
cmp
inc
orl
ret
addl
fisttpll
into
dec
jge
xchg
inc
add
fcoms
jb
adc
mov
cmpb
int3
push
sahf
xchg
sub
or
lea
cmp
call
loopne
xchg
and
mov
xchg
jecxz
push
or
aaa
clc
inc
push
outsb
insl
mov
scas
pop
pop
cmp
inc
decb
test
xor
mov
adc
sbb
or
xlat
pop
cld
movl
push
inc
call
inc
dec
sbb
test
lret
push
je
js
push
push
dec
xorb
or
inc
add
je
cmp
jne
push
sbb
cmp
adc
adc
ja
mov
adc
pop
push
fnstsw
test
aas
stos
les
jbe
pop
stos
cmp
dec
rol
or
jae
push
insb
insb
push
push
or
enter
lret
jae
aaa
mov
fsubrl
cmp
fdivl
jnp
pop
and
ret
adc
nop
test
clc
sbb
test
xchg
in
pop
push
mov
mov
mov
test
sbb
mov
test
sbb
fildl
sbb
push
nop
xor
dec
outsl
loopne
test
adc
in
mov
or
adc
outsl
jge
and
call
mov
in
xchg
sbb
add
mov
into
push
xchg
push
cmp
mov
inc
mov
push
push
cmp
dec
mov
pop
sub
cmp
aaa
shlb
xchg
or
sti
sub
add
cmp
jbe
inc
cmp
std
or
neg
jp
sub
mov
clc
call
cmp
and
sbb
mov
or
into
negb
push
mov
dec
fsubr
sti
je
cmp
mov
mov
add
mov
in
scas
or
pop
sbb
dec
mov
jo
push
push
pop
movsb
cmp
sbb
test
pop
mov
inc
fisttps
hlt
fwait
xchg
in
sbb
pop
leave
pop
pop
call
mov
call
mov
cmpb
inc
orl
or
mov
nop
jbe
adc
push
sub
dec
mov
outsl
inc
outsb
lods
cmp
jo
insl
gs
lcall
cmp
push
pusha
stos
or
call
testl
lods
in
mov
dec
or
cs
lret
mov
mov
mov
mov
mov
lret
in
mov
mov
hlt
jb
xor
add
pop
outsb
fwait
lods
fsts
rcl
js
shlb
insb
in
lcall
xlat
pop
fsubrs
pop
mov
mov
fsub
dec
imul
gs
pop
in
push
insb
fwait
in
out
dec
out
call
dec
shll
popa
imul
rol
mov
cmp
ret
rol
lcall
mov
leave
xchg
cmp
int3
hlt
xchg
push
xchg
insl
lcall
cwtl
cltd
lcall
fwait
pushf
adc
sub
data16
inc
mov
insl
mov
movsl
cmpsb
xor
test
push
test
es
cmc
div
clc
ds
or
hlt
cli
jns
lea
inc
or
mov
rorl
cmpsb
dec
hlt
jle
or
pop
loopne
mov
cld
jb
adc
push
pop
jo
aaa
xor
jb
push
int3
fwait
or
mov
xchg
dec
cs
ds
pop
arpl
or
jmp
dec
rcrb
mov
xchg
xchg
mov
cmpsl
mov
adc
ss
movsb
shrl
xlat
divl
jg
lea
mov
lcall
push
inc
jge
sti
xor
jne
lcall
negb
sub
loopne
into
imul
enter
xor
dec
jbe
xchg
ret
sbb
daa
jmp
lds
inc
sub
nop
jmp
aaa
sbb
loop
sbb
sbb
ret
ret
jmp
test
aas
mov
nop
add
fwait
repz
jbe
outsl
cld
std
inc
inc
xor
push
hlt
cld
adc
push
out
cmp
push
adc
std
inc
push
xor
sub
stc
push
sbb
inc
xor
jle
push
test
cld
mov
add
pop
std
repz
int3
loopne
push
seto
outsb
lret
shrb
cld
decb
fstpl
lret
nop
loop
sbb
mov
adc
and
mov
bound
pop
pop
loop
add
mov
and
ret
leave
inc
imulb
inc
loope
mov
dec
push
sub
icebp
mov
or
mov
dec
mov
outsl
or
mov
ret
stos
inc
and
mov
insl
sub
mov
mov
shrb
faddl
out
xchg
cmpsb
cmp
jp
jae
or
nop
test
aad
adc
mov
std
incb
jl
or
add
inc
sub
add
add
arpl
ror
xchg
mov
mov
jo
adc
sti
cmpl
aaa
repz
jne
push
dec
jmp
adc
clc
or
and
int
add
aaa
jbe
repz
dec
adc
in
nop
sbb
test
push
mov
cwtl
les
cmp
int
mov
cmp
cmp
bound
inc
mov
push
push
cmp
jae
push
call
insl
mov
push
andl
daa
incl
loopne
stos
ss
fwait
insb
iret
das
or
loope
aam
adc
cld
adc
jo
mov
and
lock
sti
shll
jmp
push
add
scas
dec
mov
in
mov
and
js
jle
lock
and
out
call
jecxz
fsubrl
mov
push
mov
ss
dec
pop
ret
mov
xchg
cmp
mov
jle
test
es
in
dec
int
jp
imul
dec
push
ss
lods
imul
fidivl
dec
mov
sub
inc
fidivs
shll
xor
xor
sub
dec
jae
sub
sti
mov
orl
insl
jmp
insb
lcall
mov
pop
mov
mov
imul
fs
lcall
in
lcall
lret
in
out
jbe
jb
mov
jmp
add
pop
inc
jb
inc
rcll
xchg
jnp
adc
mov
mov
mov
arpl
jae
in
pop
add
xchg
xchg
add
cli
mov
push
mov
pop
add
inc
xchg
add
mov
add
in
xor
int
fstl
mov
jmp
or
gs
inc
mov
pop
add
sub
imul
mov
push
imul
jb
outsl
out
ja
jne
repnz
pop
jo
cmpsb
insb
insb
je
int
fs
subb
rcl
sub
aam
cmp
addr16
sub
mov
fsubrl
sbb
cwtl
lods
add
and
cs
loop
sbb
and
pushl
dec
push
pop
adc
inc
xor
shlb
fwait
or
mov
das
cmp
in
xor
sbb
push
inc
and
call
xor
pop
in
and
in
cmpsl
sbb
lret
divb
call
and
cmp
and
mov
jl
push
outsl
shll
fwait
xlat
mov
repnz
fistl
inc
in
push
sub
mov
jb
sub
push
pop
push
adc
ret
inc
mov
dec
in
push
or
jne
xor
and
and
stos
jmp
sub
jmp
pop
and
xor
sub
mov
add
je
and
jae
mov
mov
mov
cmpsb
pop
ss
mov
mov
mov
lcall
mov
xor
rol
adc
les
imul
outsb
pop
leave
outsb
fwait
gs
lret
fs
int
das
into
bound
cmpsb
pop
iret
rcl
rcl
adc
or
pop
xlat
aaa
fsubs
fcmovu
ja
mov
dec
mov
mov
jae
loop
lcall
pop
out
call
jmp
in
daa
in
lcall
fs
es
push
repnz
loopne
imul
push
mov
mov
idivb
sub
mov
pop
and
roll
daa
jae
add
outsb
ss
pop
cld
or
mov
mov
mov
mov
outsb
xchg
mov
in
mov
ds
les
lds
fcomps
inc
sbb
adc
in
push
out
cmp
pop
call
scas
outsb
mov
int
jl
pop
add
inc
sbb
les
inc
jmp
sbb
incl
add
neg
setge
sar
mov
call
bsr
mov
sbb
and
rorl
outsl
das
push
push
mov
std
mov
push
call
enter
sbb
icebp
and
lcall
jmp
fbld
adc
jnp
inc
ret
push
std
add
ja
das
rcrl
call
and
cmp
cmp
jbe
outsb
ja
lods
mov
mov
mov
cltd
dec
mov
icebp
idiv
mov
jae
divl
adc
add
xor
pop
dec
mov
or
inc
cmp
scas
pop
xor
adc
xchg
inc
movl
outsb
lret
sub
dec
push
int
jnp
push
ror
outsl
insl
adcl
clc
xchg
repnz
mov
clc
mov
call
bt
jmp
dec
les
mov
jp
hlt
mov
int3
je
loope
orb
xchg
repz
mov
dec
xorb
push
jp
shlb
push
mov
push
push
bnd
pop
sub
mov
stc
mov
rcr
lods
not
mov
in
add
mov
cld
test
mov
mov
loopne
dec
push
arpl
mov
mov
pusha
outsb
ja
and
and
push
data16
mov
arpl
add
and
not
test
test
sbb
cld
push
insl
not
cmc
clc
push
orb
rcrb
inc
mov
xchg
pop
push
and
stos
mov
fs
ljmp
sahf
out
cmpsl
ror
rcl
mov
inc
loop
jg
mov
outsl
shl
lock
add
clc
test
pusha
add
insl
ret
fsubs
stos
or
and
cltd
lock
sub
pusha
mov
adc
add
inc
jmp
and
and
sbb
adc
das
pop
lcall
inc
push
mov
int
ljmp
jecxz
cmp
scas
cmc
pusha
add
xlat
push
shrd
jmp
mov
test
cmp
xchg
out
cmp
std
mov
out
aaa
mov
xchg
mov
fisubrs
add
pop
push
rcl
or
test
push
xchg
jmp
mov
fcmovne
add
lret
and
rolb
setnp
pop
sarl
subb
inc
push
xchg
and
aaa
es
sar
mov
sar
add
sarb
cmp
ret
shl
or
push
movq
or
xchg
rol
seta
pusha
xchg
enter
cmp
out
ror
arpl
push
aad
sbb
push
test
pusha
xadd
cmc
pushf
or
jbe
jmp
xor
js
xchg
push
and
pushf
add
jns
testl
pop
js
rclb
ret
cs
pop
or
call
inc
xor
mov
test
iret
gs
mov
js
cmc
cli
adc
in
in
mov
insb
outsl
loop
xchg
iret
inc
xlat
ds
in
push
sub
sub
push
repnz
test
hlt
cli
cmp
les
sub
repnz
lret
pop
push
pop
mov
pop
fisubs
negl
xchg
add
adc
pusha
bnd
sti
sub
sti
and
mov
sti
jae
mov
addb
push
push
push
cmp
call
jl
ss
negl
jge
sub
lahf
lods
outsb
cmpsl
jp
outsb
adc
and
in
push
rolb
nop
test
fucomi
or
or
add
fs
push
inc
and
jg
out
jns
test
cmpb
mov
into
sbb
cmp
scas
push
adc
or
push
jmp
call
wrmsr
add
adc
dec
mov
cmp
cmp
jl
pop
lds
mov
mov
addr16
pop
mov
xor
mov
push
xchg
cltd
shll
xor
fstpl
imul
xorl
xchg
pop
inc
or
inc
rorb
mov
std
aas
sub
or
out
cwtl
add
and
rorb
lcall
adc
add
pop
push
sbb
xchg
xor
sub
fsts
sbb
call
pop
test
and
push
sbb
call
enter
push
ljmp
notl
das
or
cmpsl
sub
push
jl,pt
sti
cmp
mov
xchg
jmp
or
sbb
pop
mov
cmp
je
ret
rclb
push
pcmpgtd
pop
and
sbb
sbb
call
pop
fidivs
sbb
cmp
je
sub
push
add
and
das
mov
lcall
sbbb
push
xor
icebp
push
in
pop
pop
in
mov
dec
xor
add
xchg
inc
jl
push
loop
adc
pop
repz
push
sub
outsl
sbb
repnz
stos
cmp
lds
rorb
les
clc
lret
mov
dec
adc
stos
or
add
shrb
lret
mov
aam
fsub
call
pop
mov
push
adc
mov
fists
mov
in
loop
stos
dec
adc
push
dec
adc
push
cli
lcall
or
and
pop
mov
aam
mov
and
sbb
dec
pop
and
sahf
mov
inc
xor
jnp
mov
lods
push
adc
or
push
jle
mov
sbb
sub
hlt
xor
add
xchg
mov
add
inc
sub
mov
outsl
pusha
lea
ss
push
rcrb
mov
or
dec
add
inc
xor
inc
fiaddl
pop
lock
xor
push
pop
push
dec
dec
lret
mov
lret
dec
dec
inc
push
cs
clc
sub
mov
data16
cmpsb
stos
je
imul
cmpsb
imul
pusha
lcall
lret
mov
dec
je
jo
mov
daa
lret
jo
push
gs
mov
lret
jne
jae
inc
xchg
mov
shll
xchg
xchg
cwtl
push
ds
imul
sahf
scas
imul
pop
xor
movsl
cmpsb
mov
je
xor
shll
outsb
fs
push
popf
pop
notb
jmp
push
gs
xchg
gs
jno
gs
lret
mov
gs
popa
dec
outsb
je
push
daa
daa
jb
and
sub
inc
outsl
outsb
outsb
arpl
inc
xchg
mov
inc
mov
xchg
xchg
xchg
and
xor
out
call
or
pusha
enter
cmpsb
cld
data16
inc
fsubp
std
pop
lcall
int3
jg
jno
inc
mov
add
ret
mov
cli
in
test
cmp
mov
dec
sub
pop
repz
movaps
aas
lcall
jmp
push
pop
add
add
jmp
stos
sti
je
push
add
sahf
lret
insl
adc
xchg
dec
mov
dec
je
fbld
aam
sub
shrb
cld
jo
jmp
repz
fcmovbe
or
add
push
push
mov
or
and
daa
rolb
xor
add
ret
ljmp
cs
jp
pop
xor
call
mov
aaa
sbb
sbb
inc
lsl
cwtl
enter
inc
push
test
or
mov
sbb
out
out
dec
in
or
lds
movsl
cmp
or
mov
mov
mov
cld
inc
je
pop
mov
imul
jp
adc
lock
adc
jp
xchg
xchg
push
hlt
mov
addr16
incb
sbbl
or
sub
pushw
adc
loope
sub
cltd
mov
les
cmp
je
add
cs
out
mov
aaa
mov
das
pushf
xor
jmp
jle
xor
je
daa
inc
xorb
lea
test
pop
xor
repz
popf
or
inc
mov
jg
mov
pop
aam
stos
or
lock
sbb
pop
je
adc
push
and
pop
pop
xchg
or
sub
push
es
fsub
inc
data16
arpl
jne
repnz
daa
sbb
je
or
lock
jle
adc
adc
push
push
pop
or
das
pusha
sahf
out
and
sbb
adc
cmp
sbb
sahf
xchg
pop
nop
sbb
in
das
in
andb
pop
dec
inc
pop
dec
pop
call
xchg
in
and
imul
cmp
xchg
gs
insb
outsl
arpl
sbb
adc
daa
pop
cli
test
adc
test
loop
lods
dec
out
cmp
or
data16
mov
dec
movsl
enter
push
and
dec
rorl
add
call
xor
clc
sub
or
cmpsb
lret
jae
adc
cltd
sub
jle
or
cltd
out
jl
adc
cmp
ret
pop
icebp
sbb
or
lock
out
pop
clc
push
xchg
in
push
lret
pop
push
sub
das
cs
or
mov
push
dec
add
stc
roll
insb
out
lahf
jge
mov
add
bsr
or
mov
cmpsl
and
pop
push
inc
sub
mov
aad
push
mov
and
pop
mov
mov
cwtl
add
mov
cmp
dec
push
and
adc
jne
mov
jae
call
pop
lret
mov
pop
jmp
mov
iret
pusha
inc
xchg
add
xchg
xchg
gs
add
popa
arpl
lcall
imul
sbb
mov
push
insb
push
sarl
lret
mov
lret
aas
popa
arpl
lret
mov
sub
gs
gs
mov
jo
imul
es
rcrb
gs
jno
popa
arpl
xchg
cmp
fs
data16
jb
loop
jecxz
xor
dec
shl
out
call
inc
shll
and
mov
imul
lcall
lcall
cmp
mov
sbb
or
inc
push
in
push
arpl
sbb
aam
adc
sbb
mov
movsb
std
mov
fxch
aam
adc
mov
bound
sbbb
mov
mov
jne
call
sarb
push
jg
xor
repnz
pop
inc
cld
adc
adc
push
call
cs
fdivr
lods
movsb
shlb
or
je
jb
imul
cli
jo
ret
lcall
inc
mov
fs
mov
cld
mov
into
push
xor
pop
add
pop
push
mov
cwtl
jmp
cmc
mov
loopne
es
adc
xlat
movsb
pusha
adcl
into
dec
fcomps
adc
xchg
daa
fcoml
jb
out
stc
sbb
mov
shrb
cmp
mov
mov
out
jle
into
incl
jge
push
call
test
push
push
cld
mov
lret
add
cmp
cmp
int
mov
mov
mov
lock
popa
fildl
adc
cmp
adcb
add
in
std
call
or
sbb
mov
xchg
sbb
inc
addl
loop
and
mov
add
imul
cmp
aas
stos
outsl
sbb
in
sbb
dec
dec
into
arpl
xchg
gs
into
cmp
je
bound
scas
fs
es
out
mov
nop
bound
push
jo
das
test
xor
sbb
push
mov
sub
xchg
add
and
pushf
mov
cld
pop
sub
in
mov
dec
shll
jns
jb
xorb
add
inc
outsl
mov
push
inc
dec
xorb
lahf
cmp
mov
aam
push
sar
loope
xor
pop
cmp
sbb
or
add
and
inc
xchg
and
inc
cmp
lds
xchg
jo
add
jle
mov
andb
adc
pop
push
stos
adc
ja
xor
xor
fsub
fs
jmp
arpl
movsb
imul
mov
jne
out
mov
push
mov
stos
dec
dec
push
mov
daa
pop
mov
mov
flds
cmp
vpsubw
pop
pop
xor
fyl2xp1
mov
outsb
inc
pusha
cmpb
mov
aad
call
mov
stos
std
push
das
call
sub
xchg
dec
adcb
xchg
pusha
xlat
xchg
add
in
cmp
xor
out
rcrb
fsubr
cmp
fldl
push
in
mov
loope
imul
push
push
push
xor
or
xchg
jo
lock
and
and
add
lods
push
push
pop
adc
outsb
lock
mov
jge
movsl
movsl
movsb
nop
xchg
mov
cmc
hlt
and
jl
ds
loopne
pop
je
int3
sbb
add
add
sbbl
bound
fldt
lods
xchg
pop
jmp
loopne
idivl
scas
inc
movzbl
and
cmc
cli
push
ror
hlt
push
and
inc
add
xchg
sahf
adc
xor
andl
mov
sub
push
dec
jo
jo
cs
shll
insb
sbb
gs
add
lcall
jae
dec
add
fucomp
push
inc
outsl
aad
xor
icebp
rcrb
loopne
jne
add
enter
xchg
xchg
xchg
lock
adc
pop
pop
xchg
sub
mov
dec
push
dec
inc
xchg
xchg
sbb
jo
hlt
and
mov
sbb
push
lods
loope
cs
xchg
outsb
inc
cmp
fwait
mov
adc
cwtl
aas
ret
or
sub
inc
and
inc
in
add
sbb
lret
add
int
inc
repz
rcll
add
hlt
mov
lea
imul
int
sub
bound
cmp
cmp
pop
repz
fsts
fwait
popf
insb
sub
adc
testl
and
and
jnp
scas
arpl
jnp
lea
orb
add
mov
sub
or
xor
sbb
mov
insl
rorl
mov
push
in
sbb
xor
cmp
cs
xchg
adc
mov
jmp
inc
out
lods
dec
neg
adc
or
in
sbb
mov
lea
xchg
call
in
popf
mov
je
rorb
add
enter
or
je
cmp
das
bound
outsb
insl
jno
dec
xchg
gs
jae
jns
jb
jb
faddl
fidivl
imul
mov
mov
cmp
loopne
loope
pop
loop
pop
mov
jbe
in
push
in
out
imul
sbb
add
ljmp
stos
add
das
sbb
cmpsb
imul
cmpsb
imul
push
jnp
jo
mov
decl
popf
cmpsb
int3
int3
loope
je
xor
shll
das
das
bound
xor
shrl
jno
addr16
shll
jne
xor
shll
imul
shll
arpl
shll
ss
and
xor
arpl
lret
mov
shlb
addr16
insl
xchg
cmpsb
fwait
sub
in
rol
fmuls
dec
cmp
cmc
dec
dec
shll
xlat
imul
dec
jmp
add
outsb
mov
pop
enter
movsb
add
clc
lret
enter
jl
dec
inc
sub
enter
addr16
js
das
jo
outsl
sub
arpl
adc
fwait
cmpl
nop
jmp
lcall
mov
rcll
mov
adc
outsb
inc
les
push
js
add
xchg
jb
lock
xor
adc
adc
and
cmp
sbb
cmp
lock
ljmp
jne
loop
push
push
add
jo
mov
adc
inc
sub
sub
sti
mov
call
sub
sbb
sbb
or
sub
ljmp
ss
std
or
mov
pop
pop
pop
imull
pop
pop
cmp
je
xchg
push
bound
dec
shll
mov
paddb
decl
xchg
aaa
lea
push
hlt
or
add
adc
adc
es
or
or
imul
fistpl
xor
arpl
or
add
insl
dec
call
xchg
ja
pop
cmc
imul
sub
push
mov
xor
fsubrp
aaa
inc
or
and
mov
aas
push
push
stos
lea
in
ret
ss
sbb
sbb
lock
push
in
or
xor
je
sub
adc
fildll
gs
es
push
mov
jg
add
dec
fadds
scas
call
sbb
add
scas
push
and
mov
fistl
orb
arpl
loope
mov
mov
mov
jno
test
jg
inc
cltd
push
sub
sub
jmp
fsubrs
mov
ret
add
mov
sub
xor
sub
mov
add
repnz
shrl
mov
scas
stc
scas
mov
call
shlb
rorb
ds
int3
imul
push
dec
aas
mov
sub
test
sub
mov
mov
mov
into
aad
xchg
mov
dec
out
mov
call
or
arpl
or
cmp
pop
push
push
jmp
mov
and
enter
icebp
pop
rcll
cmpsl
mov
cmc
sbb
mov
mov
fxch
test
loopne
jmp
fdivrs
enter
or
push
cs
push
stos
cli
or
ret
imul
outsb
push
and
call
add
ja
lret
in
mov
or
and
repnz
ss
mov
fsts
mov
mov
fldcw
add
mov
xchg
sbb
cmp
sahf
push
push
push
call
xchg
push
mov
push
pshufw
mov
or
loopne
add
lret
push
insb
or
test
je
sbb
mov
push
fldenv
xlat
cmp
and
aam
dec
sarl
nop
imul
lock
arpl
test
pop
jp
lret
rolb
sbb
ja
nop
and
pusha
insb
sbb
or
pop
pop
cmp
lahf
mov
push
push
mov
lods
jb
xchg
adc
iret
repz
mov
push
push
cmp
out
xchg
jae
loopne
cltd
mov
jmp
xchg
call
dec
xchg
mov
cltd
push
fmull
jns,pn
mov
aas
jo
ja
push
push
push
pop
xchg
or
inc
push
push
dec
cmpsb
rorb
loopne
aam
sbb
dec
pop
add
jne
mov
or
push
nop
or
fdivp
pop
push
push
xor
in
jbe
mov
inc
add
incb
loope
out
push
mov
jp
outsb
cmp
pop
mov
xchg
int
pusha
dec
adc
fcompl
sbb
arpl
ss
cmp
pop
or
mov
pop
cmp
add
popa
rcrl
mov
mov
add
and
hlt
adc
scas
mov
xchg
mov
mov
mov
push
movsl
mov
and
add
dec
lods
cmp
rorb
loopne
aas
cmp
scas
js
mov
out
push
loopne
push
andl
js
mov
jmp
push
and
je
mov
mov
and
adc
sbb
and
int3
fldl2t
inc
xor
pop
add
or
push
jmp
lock
mov
sbb
dec
in
sbb
arpl
add
sub
jno
aad
shr
test
adc
sbb
pushf
pop
mov
jle
cmp
stc
cmp
sti
mov
das
adc
aas
add
pushf
pusha
pushf
mov
adc
lods
and
xchg
cwtl
decl
jmp
stc
mov
push
fnstsw
lea
lea
cld
jmp
sub
bound
pushf
push
or
adc
add
popa
mov
aas
outsl
mov
mov
loopne
pop
inc
aas
adc
out
test
repz
push
sbbb
pop
lcall
std
je
mov
jbe
shll
outsb
je
shll
inc
inc
and
xor
insb
addr16
shll
popa
outsb
and
xor
insb
cs
or
gs
data16
xor
cmp
call
jne
cmp
ds
inc
icebp
enter
das
pushf
xor
or
popf
cwtl
insb
enter
dec
sub
xor
psubsw
in
xor
mov
dec
cmp
add
test
sbb
and
notl
sbb
jg
mov
mov
or
mov
add
lea
sahf
cmpsl
cmp
add
mov
add
jae
push
adc
int3
cmp
imul
xlat
inc
cld
stc
push
push
mov
mov
adc
fsub
pop
stos
push
call
jbe
mov
aam
sub
pop
lcall
sbb
fcoms
add
enter
xchg
lret
cmpsb
data16
and
test
call
out
dec
xor
and
adc
mov
mov
sbb
mov
insb
fbld
pop
push
inc
mov
dec
sub
lock
add
inc
fs
xchg
sub
adc
push
jns
fs
pop
adc
jae
out
sbb
aas
hlt
aas
pop
fs
nop
call
sbb
int3
sub
mov
movsb
pushf
enter
sti
add
sbb
fs
lret
inc
inc
ds
cmp
nop
xchg
out
ds
fwait
enter
fs
mov
push
jns
int3
je
pop
pop
push
push
fs
dec
inc
cmp
jns
fs
sbb
sbb
clc
cmp
rolb
pushf
and
mov
or
fbstp
or
cld
inc
xchg
and
cmp
inc
lds
fwait
dec
cmp
cmp
lcall
ret
not
jle
rolb
cmp
cmp
jl
je
jle
movsl
mov
cmpb
dec
js
add
inc
jge
jo
add
cmpl
mov
scas
imul
or
iret
push
in
dec
xor
imulb
mov
add
mov
mov
jmp
inc
dec
sbb
xor
ficoml
loope
loop
or
xor
dec
or
sar
movsb
fcom
add
pop
add
add
mov
loopne
jmp
add
pop
sti
jg
jne
mov
sub
mov
fs
insb
daa
out
lret
mov
fstp
mov
mov
std
fldt
fs
lea
shr
jle
movzwl
mov
incb
mov
add
ljmp
cli
outsl
add
jle
adc
outsl
mov
lar
data16
lock
jne
pop
andl
bound
insb
mov
push
or
jbe
test
mov
int3
mov
adc
addl
xchg
add
insl
mov
add
sbbl
jae
push
add
rclb
mov
jno
push
scas
mov
dec
je
adc
loop
and
jbe
inc
adc
iret
pushl
sbb
and
mov
pushl
add
push
scas
jle
lods
adc
inc
sub
or
or
loope
inc
push
mov
dec
rorb
int3
xor
xor
fistps
sub
add
adc
pop
lods
test
shrl
cltd
in
data16
lahf
inc
aaa
pushl
lcall
dec
popf
add
or
les
into
push
insl
jae
popa
xchg
jl
dec
cmp
cmpl
cltd
cld
sarb
adc
jg
insb
push
lds
fdiv
jge
jle
fsubs
pop
mov
lea
add
mov
inc
adc
pop
and
inc
sub
mov
shr
outsl
or
adc
adc
adcl
dec
xor
or
mov
push
mov
push
adc
mov
mov
icebp
sub
fbstp
xchg
or
sub
sub
xlat
mov
ss
sbbl
or
mov
inc
sub
sbb
imul
sub
cmpsb
imul
imul
ljmp
in
jb
fs
and
loop
adc
xor
inc
push
jle
insb
daa
cwtl
movsl
pop
lock
push
or
loop
or
xlat
dec
mov
or
mov
mov
cli
or
sbb
aam
insb
mov
addl
enter
add
andb
mov
loop
out
pop
sub
mov
test
or
or
mov
cmp
aas
mov
jae
push
inc
popa
dec
stc
adc
ds
orb
cwtl
cmp
loopne
loop
lea
jne
mov
lahf
adc
pop
or
test
out
sbb
jl
mov
xchg
cs
adc
xor
add
test
loop
dec
sbb
sbb
push
mov
insb
arpl
jge
aam
pop
adc
mov
or
xchg
and
fisttpll
push
stos
or
sub
leave
add
or
cmpsb
push
mov
add
clc
test
insl
jo
test
fsubrl
outsl
sbb
pop
out
sahf
ljmp
jge
pop
subb
cltd
fdivs
pop
andb
inc
je
cmp
jnp
pusha
push
and
xor
cli
add
and
fisttpll
negl
mov
ret
add
lahf
pop
push
insb
dec
mov
mov
jmp
test
xor
std
mov
call
add
cwtl
out
xor
lods
xor
je
push
jmp
adc
lock
jns
or
inc
cmp
jl
mov
sbb
and
mov
pop
push
jmp
std
ret
add
fdivrl
mov
adc
pushf
out
add
insb
xchg
arpl
in
sahf
pop
inc
adc
data16
imul
jmp
adc
inc
pushf
xchg
in
out
fs
outsb
cmpsb
add
pop
loopne
jae
dec
aaa
jb
std
loop
jcxz
int
cltd
ja
jne
popf
in
ds
sbb
cs
pushaw
mov
lret
gs
pop
xchg
sub
je
fs
xchg
jb
jns
cs
sub
xor
movsb
test
push
iret
fdivr
rol
movsb
rolb
pusha
push
adc
mov
out
ret
jmp
push
mov
jmp
sub
xlat
and
push
xlat
imull
hlt
push
adc
fisubl
push
mov
cwtl
sbbb
push
xor
xor
sub
and
xor
xor
or
movsl
inc
dec
mov
dec
pusha
pusha
add
add
push
add
xor
mov
sarl
and
mov
inc
mov
jb
sub
js
insb
outsl
gs
rol
jb
cs
push
push
test
gs
jnp
or
inc
out
push
andl
mov
std
scas
fs
adcb
cmp
mov
add
sub
or
mov
add
mov
fxch
imul
jmp
add
inc
push
arpl
jge,pt
push
int3
int3
movsl
rcrb
std
xchg
mov
jl
xor
cmp
test
jne
lcall
jmp
xor
xchg
cmp
rol
and
adc
aam
mov
push
jmp
sbb
add
fs
pop
xor
add
insb
jo
sbb
sbb
je
movsb
pusha
mov
outsb
flds
das
hlt
lock
adc
or
inc
or
add
adc
adc
in
add
cld
jo
scas
or
sbb
gs
mov
dec
daa
data16
or
mov
sub
testb
mov
push
dec
push
pop
mov
sbb
adc
dec
rcrl
sub
mov
test
push
lea
gs
inc
add
stos
push
test
xor
push
lea
adc
push
sbb
jae
dec
fs
add
lcall
xchg
insb
push
xor
popa
jo
push
in
outsb
jae
add
jb
jne
insb
and
push
add
pusha
scas
inc
xor
dec
dec
add
mov
adc
mov
pusha
sbb
add
push
dec
gs
xchg
aad
mov
cmovbe
arpl
addl
icebp
test
xchg
inc
add
dec
outsl
fs
adc
adc
jge
xchg
add
popa
inc
sarl
jecxz
add
adc
and
dec
sbb
jns
add
or
dec
ret
pop
push
and
roll
testl
into
add
xor
insl
or
je
mov
nop
imul
outsl
jb
outsb
and
lock
bound
push
push
gs
outsl
test
and
lods
sub
add
fstps
push
adcb
and
jae
in
negb
aad
push
sub
push
push
imul
push
push
push
mov
pop
dec
pcmpeqb
push
mov
das
shrl
jl
push
gs
push
mov
push
inc
gs
loope
loope
pop
dec
jae
in
test
mov
jae
mov
imul
add
cltd
stos
mov
imul
mov
test
push
jne
jns
xor
out
jo
cmp
and
and
cmp
jns
call
adc
imul
outsb
inc
pushf
lock
jbe
jnp
push
je
xchg
fcmove
xchg
mov
pop
sbb
test
loope
push
lret
adc
mov
ret
adc
fimull
xorb
insb
sub
jae
mov
lods
mov
xor
jno
or
dec
jae
sbb
je
int3
add
imul
sbb
pand
arpl
imul
push
ss
dec
fcoml
adc
pusha
push
outsb
dec
inc
push
dec
inc
xor
mov
pop
lods
add
jo
je
aaa
push
sar
push
mov
cltd
sub
fildll
push
loopne
xchg
sbb
gs
and
xor
push
lods
push
imul
or
inc
pop
pop
and
std
jmp
shll
fistpl
cmp
add
dec
hlt
popa
addr16
ss
xor
inc
and
push
push
mov
outsb
popa
scas
push
jnp
or
ret
inc
add
xchg
jle
fnstcw
add
je
imul
push
jb
gs
insl
jnp
sbb
outsl
daa
mov
and
push
mul
sbb
pop
add
push
add
push
sbb
push
mov
push
sub
pop
cwtl
in
jo
movsb
jne
xor
add
pop
add
fstpt
push
cmp
mov
out
imul
cmp
jle
jg
adc
inc
outsb
jne
inc
inc
push
inc
push
pop
inc
adc
xchg
or
test
mov
or
arpl
adc
divl
cmp
mov
cmp
adc
xor
add
add
in
mov
adc
imul
rclw
adc
mov
mov
imul
xor
outsb
insb
jns
ficomps
popa
insl
push
or
mov
add
mov
loop
loop
aas
xor
inc
pop
push
add
mov
inc
pop
xchg
loope
jae
nopl
xlat
cltd
xor
dec
sbb
mov
int
and
dec
fwait
jnp
out
out
mov
out
mov
cmp
adc
add
mov
scas
add
jb
xor
test
mov
ret
cmp
ret
sti
add
ja
dec
adc
add
das
cmp
xor
daa
imul
pop
imul
adc
jae
nop
rclb
sbb
cmp
insb
test
push
push
sarb
sub
data16
insb
xor
inc
fcoml
jbe
mov
or
cld
inc
imul
inc
dec
push
dec
scas
xchg
adc
je
sbb
or
bts
mov
jmp
sbb
andb
sbb
mov
adc
iret
push
add
pusha
pop
sub
or
das
add
or
repnz
stc
test
add
movsl
outsb
stos
ljmp
push
lods
pushf
movb
jmp
mov
lret
sbb
ror
adc
addl
jae
mov
bsf
rolb
mov
mov
push
arpl
or
mov
push
inc
lea
add
orb
mov
mov
js
repnz
dec
loope
mov
push
arpl
push
inc
ret
inc
or
dec
dec
dec
aaa
sbb
push
jecxz
lock
popf
sub
push
push
scas
ret
mov
mov
inc
jns
sub
in
or
jmp
mov
shl
gs
mov
call
mov
xchg
stos
mov
inc
mov
leave
inc
out
mov
jmp
cmp
test
or
popf
movsb
dec
insl
add
dec
xlat
mov
sahf
insl
pop
addl
or
decl
scas
cltd
incl
cmpsl
mov
push
lahf
push
pop
rcrl
rcrl
aam
call
cltd
inc
jmp
pusha
push
arpl
sbbb
test
inc
hlt
pop
dec
stos
lret
fsin
ljmp
dec
inc
mov
sahf
paddusw
push
in
xor
outsb
lea
test
sub
lcall
mov
xor
push
and
loope
int3
cld
scas
lret
jo
sbb
pop
inc
cwtl
roll
jmp
add
and
xchg
add
ss
jnp
pop
mov
adc
add
add
or
jne
in
push
pop
into
pop
xchg
adc
lcall
mov
inc
popl
vdivss
icebp
push
pop
pop
mov
bndstx
lea
jbe
fsubrs
and
push
outsl
rorb
pop
adc
das
addl
inc
fsubr
repnz
dec
inc
fmull
add
push
mov
sbb
inc
out
inc
in
pusha
cmp
inc
in
and
pop
inc
bound
add
cmpsl
inc
push
xlat
jle
add
neg
in
inc
fiaddl
lret
testl
das
inc
dec
or
out
mov
and
and
jnp
push
mov
adc
xchg
fsubrp
iret
add
or
mov
and
das
ja
mov
bound
pop
das
jmp
std
fsubp
xchg
pop
pop
dec
bound
xor
dec
repz
mov
ret
sbb
imul
or
jle
pop
adc
iret
jle
neg
aas
push
daa
out
loop
jno
out
dec
push
pop
cmp
neg
jnp
pop
aas
ja
jnp
fistpll
mov
out
daa
ret
sbb
inc
sbb
pop
or
addr16
test
pop
aas
ret
dec
js
mul
xchg
pop
and
push
fidivrs
xchg
aas
scas
or
xchg
neg
sti
fwait
mov
xor
in
movsb
aaa
pushl
int3
inc
sbb
lahf
mov
ja
or
imul
ret
in
icebp
and
jmp
movsl
cmpb
dec
and
pop
pop
xchg
xchg
pushf
xchg
mov
aad
bswap
js,pn
mov
not
push
inc
pushl
movsl
mov
inc
push
rcr
mov
ret
das
mov
or
clc
inc
jno
popl
test
test
mov
add
pop
adc
fldt
rcr
adc
sub
pop
mov
stc
bt
jmp
das
in
test
lahf
cmc
pusha
mov
pop
adc
pop
aad
negb
enter
add
pushf
xchg
mov
sets
inc
call
sub
outsb
sbb
push
pop
arpl
xchg
fisubs
jne
and
mov
test
sub
pusha
rol
ret
pushf
push
push
mov
cli
mulb
ror
pop
ljmp
filds
and
mov
sti
mov
xlat
or
fcoms
jmp
fdivrl
je
or
and
mov
adc
add
pushf
call
iret
jge
sbb
pushf
xchg
jmp
jg
lds
push
push
adc
push
mov
or
scas
test
adc
lret
packsswb
or
out
neg
ret
pushf
aad
cmp
cbtw
movsl
mov
in
add
cwtl
xchg
jns
cli
ja
jmp
call
jg
clc
out
ret
cmp
sub
cmp
add
pop
inc
aas
jmp
push
pusha
lods
add
data16
pop
jnp
ds
sub
and
dec
int
fdivl
xchg
pop
mov
lods
pusha
call
and
jbe
cmc
shld
push
push
sub
lret
loope
jl
and
ret
fisttps
lods
arpl
inc
or
shlb
lods
fldcw
out
add
aad
fisttpl
adc
stc
xor
add
aam
std
test
lods
adc
rcr
jns
cmc
test
mov
test
test
adc
jo
cmp
adc
mov
out
mov
lahf
mov
sub
or
inc
lea
add
mov
mov
ds
out
or
xchg
push
push
icebp
pushl
loopne
dec
inc
xor
sub
stc
ror
lea
fildll
mov
out
mov
std
or
dec
cmpsl
dec
sub
bswap
mov
sub
add
std
adc
neg
sbb
lea
push
cmc
mov
loop
lcall
cld
xchg
sbb
pushf
data16
std
cld
jmp
or
or
fs
lock
aaa
fimuls
cmp
clc
pop
std
aaa
inc
enter
out
jo
push
out
cmp
cmc
push
mov
test
sbb
sub
das
outsb
pop
ret
inc
daa
or
sahf
mov
popf
add
loope
rcll
mov
cmc
xor
push
cmp
jge
sbb
sub
push
add
ss
fisttpl
movsl
mov
push
fcmovu
outsl
jb
push
psubsb
push
xchg
pushf
outsb
clc
inc
loope
mov
push
mov
xchg
sbb
pop
jmp
mov
push
add
adc
aaa
and
and
cmp
push
test
ret
xchg
in
push
not
xchg
add
clc
push
push
cmp
pop
std
cwtl
clc
jg
clc
mov
call
aad
cmp
mov
cmp
scas
push
lret
lret
enter
pop
xchg
shr
push
push
xor
insb
add
mov
aas
call
stos
cld
mov
mov
sbb
mov
mov
clc
popl
fnstenv
loopne
sar
cmpsb
dec
movsl
lret
push
mov
or
clc
cmp
stc
sub
push
imul
jmp
cmp
pop
sbb
and
and
fwait
idivl
stos
lods
repnz
pushf
fwait
xchg
pop
ja
sbb
mov
pop
xchg
cmp
pushf
push
pusha
dec
call
or
pop
mov
add
pop
mov
psrad
jne
leave
inc
mov
jmp
aaa
pop
jmp
add
pushf
push
mov
and
mov
dec
pushf
in
fisttps
fidivrl
mov
shr
or
call
pop
or
filds
rorl
jecxz
jmp
and
push
popa
test
mov
movb
fdivrs
or
inc
jae
rcrl
pushf
push
jmp
fucom
fucomp
bound
jmp
lahf
fcomps
fldenv
inc
cmp
pushf
loop
xor
cld
push
aaa
sbb
inc
jl
movsb
pop
js
xor
mov
cmc
add
fistpll
rcrl
lea
call
inc
xorl
scas
fimull
pop
repnz
fcmovbe
pop
sub
ret
push
call
xchg
sbb
sub
xchg
push
adc
mov
out
push
adc
or
sbb
aaa
mov
cmc
pop
mov
push
mov
sbb
add
rol
pushf
stc
sti
ror
push
mov
mov
js
cmpsb
in
imulb
pop
and
insl
mov
inc
rolb
fucom
jbe
jno
outsb
jmp
jmp
fistps
shl
mov
add
sbb
ss
call
adc
inc
ja
or
xor
shll
xchg
out
in
int
inc
jmp
mov
jne
xadd
sub
add
incl
mov
fmull
cmp
test
jmp
ret
xor
adc
add
lea
rcr
shlb
jo
outsb
pop
lods
push
pop
in
imul
ljmp
mov
pusha
adc
inc
jecxz
ja
or
and
int3
es
shl
scas
lods
in
jns
incl
insl
outsl
lcall
jno
mov
hlt
mov
sub
sahf
rcrb
xchg
and
add
divl
das
mov
dec
sub
add
mov
xor
in
mov
icebp
inc
and
sbb
imul
jb
sbb
arpl
and
xlat
dec
mov
pop
lret
bnd
rorl
stos
fildl
push
popf
dec
rorl
js
nop
dec
outsb
faddl
lods
insl
pop
imul
insl
sub
jmp
or
sub
push
xchg
scas
pmulhw
jnp
test
je
inc
cmc
stc
cmp
aad
cmp
loop
shll
ret
pusha
mov
and
mov
lea
and
inc
cli
inc
add
shll
sahf
ds
jmp
xor
push
loope
or
aas
sar
testl
cltd
sbb
xchg
jo
cmp
repnz
add
mov
sub
pop
sub
sbb
ja
inc
ret
xor
cwtl
inc
jmp
jno
pop
pop
pop
cltd
iret
enter
pop
inc
fbstp
inc
addr16
pop
pushf
pop
pop
rol
test
jo
mov
pushf
mov
mov
jge
sbb
or
jecxz
fistpll
cmp
cmp
js,pt
sub
xchg
xor
iret
lcall
fldenv
add
adc
xchg
cmp
test
add
clc
ret
aas
aaa
outsl
adc
inc
or
push
lret
sub
mov
mov
adc
loopne
or
mov
push
and
jo
mov
int
cld
es
cmpl
mov
clc
clc
cmc
add
cmc
cmc
stc
pushf
sbb
xchg
int3
cmpsl
and
sbb
jmp
gs
mov
lret
sub
lea
data16
imul
jo
jb
jnp
pop
out
cmp
fdivrs
ds
xbegin
das
mov
shl
jmp
add
push
imul
fcomps
jne
jmp
cmp
imul
fdivrs
cmpsl
inc
cmp
sub
les
dec
pop
clc
cmp
sar
cwtl
jmp
or
jl
push
push
lret
int3
push
insl
clc
sub
neg
shr
sub
cmp
pop
imul
cld
sbb
jo
xor
or
loope
je
sbb
xor
jmp
push
mov
gs
mov
ret
outsb
inc
mov
cltd
cli
test
dec
cld
pusha
xchg
out
daa
sbb
int
insb
stc
cld
sub
loopne
cs
pushf
adc
repnz
and
push
arpl
std
xor
xor
pop
push
rcr
jb
mov
aad
sub
loope
inc
pusha
fsubs
fldenv
sbb
fldl
jmp
in
loop
cmp
xorl
mov
ror
test
fcom
lock
rorb
add
mov
mov
push
xor
jle
mov
push
pop
repz
adcl
push
xor
mov
sbb
movsb
outsl
fcomps
rcr
test
mov
imul
or
incl
fcompl
movsb
popf
push
push
std
aaa
cmp
out
mov
mov
sti
movsl
in
fnstenv
push
pushf
fbstp
jno
jmp
sub
adc
pop
mov
push
xor
add
call
or
jb
jp
cmc
call
cltd
mov
popa
push
push
lock
mov
push
pop
mov
lock
call
jg
dec
ret
push
sbb
scas
jmp
xrelease
and
div
jb
mov
test
mov
pushf
mov
lock
mov
stos
stc
stos
push
mov
shl
pop
pop
mov
and
jmp
out
inc
cmc
aam
sub
push
test
mov
lock
int
cmp
push
dec
pusha
mov
mov
ret
mov
gs
call
cld
popf
jno
repz
jecxz
call
xchg
jle
ret
dec
jg
ret
loop
iret
mov
inc
and
xchg
hlt
xor
call
jbe
fwait
cld
push
fdivr
and
dec
movsl
adc
mov
aas
dec
aas
mov
push
ds
adc
sbbl
add
xchg
push
jnp
jmp
std
test
andl
ljmp
stc
stos
jmp
call
insb
fadds
add
xchg
xchg
mov
add
cmp
jg
mov
sbb
sbb
ror
pusha
push
mov
push
in
or
ss
mov
call
jmp
pop
dec
push
in
sbb
pop
adc
test
push
jb
pop
repnz
lcall
pushl
aaa
repnz
filds
popf
movsbl
jne
add
pop
sbb
cmp
shll
stc
mov
xor
sub
imul
add
sbb
jmp
loopne
xor
js
lods
lock
clc
pusha
sbb
lret
inc
out
add
xchg
popa
shlb
add
jg
loopne
xchg
ljmp
fdivrl
shlb
js
xor
add
push
xchg
add
subb
int
dec
insl
mov
fmuls
in
lds
pop
push
cmp
mov
arpl
dec
mov
pusha
cmpl
cmp
rcl
or
xor
or
xor
or
mov
sbb
lahf
inc
push
push
sub
out
mov
pop
inc
cld
add
and
dec
jg
icebp
pop
test
cmpb
insl
mov
push
mov
loopne
or
pop
inc
test
pop
cmp
mov
push
mov
fstps
sub
lret
cltd
xor
arpl
fmuls
mov
dec
and
mov
mov
in
jl
add
out
pop
cmc
rorl
testb
sbb
js
lcall
jmp
pop
scas
cmp
ud2
xor
into
xlat
push
mov
icebp
push
cmp
sarb
popf
int
repnz
cmp
dec
jmp
lock
test
test
mov
stc
sub
loope
into
loopne
push
mov
imull
add
jmp
or
outsb
sar
sar
std
push
loopne
into
not
inc
btc
add
sar
shl
sub
das
or
cli
js
mov
pushf
sti
lock
pop
jae
push
test
add
lcall
add
jmp
jp
jmp
xor
daa
mov
imul
and
adc
arpl
js
stos
pushf
push
jns
jo
aaa
dec
sbb
test
out
rsm
xchg
test
es
enter
lea
daa
adc
into
test
jmp
add
rorl
pop
push
xor
out
jecxz
xchg
out
outsl
movsb
pop
rclb
xchg
in
and
sbbl
pop
and
outsb
out
xor
test
hlt
pop
jae
xchg
push
cmp
in
mov
mov
call
inc
mov
pushf
mov
call
mov
xchg
jmp
incb
mulb
cwtl
jge
daa
pop
pop
cmovg
out
push
mov
push
hlt
sti
movsl
cmp
in
or
out
inc
stc
pushf
cmc
push
cld
negb
test
adc
scas
xchg
jmp
inc
test
ds
cli
push
push
call
inc
inc
jmp
mov
cmp
out
call
mov
pop
and
push
loop
sbb
cmp
inc
pusha
sti
sbb
add
push
xor
add
jmp
mov
pusha
out
cli
adc
test
xchg
dec
fsubl
in
shll
add
frstor
jmp
mov
pusha
mov
sahf
addr16
sbb
loope
cmp
sbb
aas
and
cli
sbb
jnp
adc
pop
rcrl
add
aaa
pushf
dec
insl
inc
pop
pop
cmc
mov
cmpsb
sbb
mov
push
sti
or
in
pop
mov
xchg
stos
das
push
insb
lea
lock
push
fwait
push
or
sbb
addr16
je
pop
mov
in
mov
hlt
into
ljmp
adc
mov
int3
fcompl
das
sbb
jl
shll
dec
push
xchg
or
mov
sub
into
pusha
add
mov
outsb
dec
stos
jmp
mov
dec
jge
into
xchg
mov
loop
and
add
cmpb
sub
cwtd
or
fimull
clc
lahf
add
sbb
xchg
mov
jne
frstor
subl
test
jmp
je
out
dec
sbb
add
outsl
in
fsqrt
jae
cmc
fsubr
pusha
icebp
inc
xor
ficompl
pop
dec
add
frstor
jmp
cmp
lods
inc
dec
addb
shrl
das
push
lret
adc
push
es
icebp
mov
jg
dec
xchg
cmpsb
mov
xor
jo
nop
fildl
mov
xlat
ss
sbb
inc
cld
jg
jno
sarb
mov
mov
out
sub
ljmp
out
jae
push
xchg
mov
ss
leave
push
add
paddb
imul
call
repnz
jno
scas
xor
ljmp
mov
fwait
mov
mov
mov
dec
mov
xchg
and
sub
inc
andl
mov
cwtl
pop
xchg
sbb
out
sub
push
adc
ret
in
and
call
cmpsl
ljmp
xchg
and
mov
push
push
insl
dec
jns
cmpsl
mov
sbb
jg
test
stc
ja
jne
push
mov
xchg
or
int
out
jo
decl
sbb
mov
jb
cltd
stc
pop
push
fsubrs
add
xchg
test
mov
xchg
out
fucomi
mov
sub
cmpsl
and
mov
loopne
mov
xor
pop
mov
cmp
inc
arpl
addr16
in
mov
fistpll
mov
lcall
pop
fwait
xchg
adc
sub
mov
mov
clc
mov
lret
adc
aaa
movsb
insl
push
jge
mov
jg
mov
mov
roll
xchg
cmpsb
or
mov
lret
pop
in
mov
mov
jmp
dec
daa
pushf
dec
sbb
mov
push
cmp
mov
mov
jne
out
dec
adc
inc
loopne
sub
mov
sarb
mull
cld
sti
mov
ss
ja
mov
pushl
mov
pusha
mov
or
test
into
imul
xchg
ja
div
add
dec
pop
pop
cmc
push
les
les
sub
cld
jmp
jge
fisubl
test
inc
fadds
test
pop
out
dec
decl
rclb
sub
and
lret
daa
gs
stos
mov
mov
xor
je
leave
jg
jmp
xchg
mov
inc
popa
inc
gs
mov
cmpsl
dec
push
inc
mov
jbe
shrb
mov
in
or
mov
jle
dec
dec
ffree
jp
popa
or
inc
add
and
mov
loope
pop
mov
leave
out
and
mov
mov
mov
jg
arpl
and
mov
mov
xchg
pusha
lcall
testb
in
ss
aas
fwait
or
test
sarb
mov
decl
add
aam
cmp
lock
insl
in
sub
out
call
mov
dec
add
pop
sbb
xchg
lcall
cmp
xchg
and
scas
fsts
repnz
jg
adc
add
sbb
in
dec
fisttpl
aas
jmp
pop
fistpl
and
pop
ficompl
push
fdivs
out
in
jmp
outsb
loopne
add
outsb
jne
mov
pop
dec
cmp
gs
adc
cld
pusha
push
jb
mov
fidivrs
jp
sti
popf
jmp
sbb
fistps
std
out
mov
int3
icebp
xor
push
adc
jecxz
das
loope
mov
in
mov
in
scas
sub
ds
pop
ret
jno
jg
stos
sbb
ja
or
test
cmp
cwtl
movsb
dec
std
and
add
pop
ja
int
cmpsb
push
xor
dec
into
rcll
pop
add
add
push
adc
xor
sub
das
jmp
ljmp
push
inc
xchg
add
sbb
ficompl
xchg
sarb
in
push
add
call
cli
stos
aad
out
cmp
aad
jl
fmull
std
loope
add
mov
in
lock
jl
mov
incl
or
push
in
int
clc
xlat
mov
lahf
mov
jg
frstor
ljmp
xorb
push
mov
adcb
adc
and
into
pop
or
aaa
mov
jmp
add
lret
ret
mov
adc
das
les
ljmp
roll
addr16
fdivs
repz
mov
cmp
frstor
adc
out
mov
inc
jbe
inc
test
ret
repnz
rcrb
mov
mov
cmp
aam
incl
jl
jns
mov
stc
sti
jp
xor
pop
jmp
mov
xchg
mov
ret
ljmp
test
int3
add
add
cwtl
sbb
sbb
incl
mulb
sarl
push
push
ja
rorb
in
fsub
cmp
jg
or
test
or
pusha
out
not
fwait
cmc
push
arpl
inc
loop
cmp
in
and
in
jae
pop
sub
xchg
xchg
push
iret
mov
fstpl
adc
or
xchg
cmpsb
loop
fcompl
pop
sbb
pop
cwtl
push
pop
aad
sbb
cmp
ljmp
stos
stos
test
push
in
jne
mov
fdivr
frstor
testl
pop
sbb
adc
inc
add
xor
jle
ss
pusha
repz
ss
outsl
sub
push
jmp
fbld
cwtl
push
push
adc
push
adc
push
aad
mov
xchg
push
mov
es
addb
ret
pop
test
lods
xor
lods
lods
out
scas
mov
test
out
leave
lock
imul
mov
pop
mov
clc
mov
sbb
push
mov
add
lcall
mov
stc
pop
ljmp
xlat
mov
push
mov
call
rcrl
or
test
stos
push
lret
sti
loopne
mov
push
mov
jns
in
decl
push
xchg
lcall
cmpb
cs
dec
call
add
adc
xor
scas
xor
insb
pusha
ret
aas
out
mov
rcll
cmpsl
es
push
mulb
fistps
dec
loope
lock
inc
rorb
adc
out
or
pop
outsl
das
sub
out
out
outsl
xor
lea
das
push
rcl
xchg
rcl
xchg
shrl
jbe
sub
fsubrp
sbb
sbb
add
pop
out
jl
mov
cmp
sbb
xor
out
sbb
and
push
popa
loope
lahf
sbb
aam
cli
scas
adc
pop
fcomp
shlb
call
les
or
jp
std
xchg
jecxz
sub
and
fucomp
mov
mov
popf
insb
testb
sub
test
incl
sbb
jmp
call
in
imul
test
clc
insb
popf
add
sbb
jae
jmp
inc
jg
pushl
pop
cli
mov
jmp
jg
out
push
push
dec
xor
das
icebp
mov
dec
ret
jne
jne
mov
enter
push
add
out
outsl
cld
add
dec
das
sbb
outsb
xchg
out
add
repz
jg
loopne
push
lods
int
mov
cli
cmp
divb
insl
cli
jbe
mov
and
jg
push
push
adc
and
fdivr
rcl
lahf
inc
loop
ss
jmp
lcall
xchg
ds
adcl
xor
cmp
pop
or
repz
jo
and
xor
xchg
push
jg
pop
pop
mov
ja
jb
insb
ljmp
into
call
mov
addl
test
icebp
test
test
popf
mov
js
std
xchg
cmp
mov
or
mov
fcompl
or
movsl
mov
add
in
lcall
aaa
in
test
popa
fildl
push
in
repz
add
outsl
add
leave
mov
cmp
jns
cmpsl
aad
mov
lock
mov
sbb
jb
and
lock
push
sub
ljmp
out
arpl
cmpsb
and
movsb
adc
ret
int3
imul
mov
inc
cmp
mov
test
lea
orl
fistpll
popf
jbe
or
xchg
shrb
in
cltd
insl
je
sbb
fmuls
lock
jp
pop
subb
cmpsb
or
xorb
loop
mov
or
stos
cmpsl
mov
mov
rcrb
add
sbb
leave
jmp
into
adc
mov
dec
mov
scas
xchg
pop
mov
xor
data16
jle
call
inc
fidivrs
or
or
test
addr16
insl
insl
dec
mov
lea
inc
addb
ret
jo
scas
mov
push
cli
sub
call
pop
idivb
lock
ds
sbb
cld
jg
jle
inc
cld
cmp
dec
scas
cmp
out
outsl
lcall
enter
popa
pop
popf
sahf
pop
faddl
cld
mov
push
cmp
aam
into
or
add
add
add
cld
jns
js
pop
inc
mov
pop
push
jo
insb
sub
ud0
incl
loope
push
mov
mov
jbe
inc
out
dec
iret
rcll
shrb
dec
std
femms
mov
xchg
push
call
and
ss
ja
or
inc
inc
add
add
in
jg
mov
push
arpl
test
mov
leave
mov
push
xchg
shlb
in
icebp
hlt
in
push
fucom
pop
dec
lock
adc
aam
sbb
fucomip
idivb
subl
sbb
sbb
pop
xchg
rol
push
dec
and
in
mov
ja
ljmp
cmpsl
in
and
inc
out
cmp
push
push
iret
aaa
lds
adc
pushl
push
adc
xchg
adc
pushf
and
mov
dec
lret
lods
sub
test
outsb
cmp
mov
scas
ficompl
out
jmp
add
push
xor
das
scas
call
outsl
ja
scas
xor
icebp
insl
mull
mov
pop
inc
out
incl
repnz
dec
jo
mov
arpl
div
js
jb
pop
aaa
push
jb
jg
mov
cmpsb
adc
stos
mov
sbb
outsl
shl
sub
mov
scas
lcall
push
sub
adc
sbb
ja
leave
mov
or
dec
mov
aaa
inc
out
mov
xchg
test
imul
push
pushl
cmp
inc
inc
inc
lds
incl
dec
and
pop
rcll
scas
and
pushl
flds
mov
insl
sbb
ret
ja
inc
inc
lret
pop
aaa
clc
push
pushl
repz
mov
sbb
inc
cwtl
out
mov
push
jno
mov
jo
ret
jo
lods
clc
mov
pushf
mov
add
das
lret
xchg
fsubrp
cmp
dec
jb
mov
cli
push
das
outsl
std
cld
mov
jecxz
sbb
out
push
mov
pop
fcoms
and
jecxz
xchg
mov
hlt
sub
or
aad
fsubrs
adc
sti
inc
pushl
loope
ds
and
mov
cmp
adcb
mov
out
fs
sti
sbb
jmp
adc
push
cmp
lock
je
fucomp
xlat
call
sbb
fsubl
ljmp
inc
pop
fdivl
mov
and
sbb
fcomps
fdivs
loop
sbb
pop
subb
shlb
js
imull
jb
adc
mov
dec
push
es
movsb
and
pop
js
idiv
pop
pop
xlat
mov
push
push
cmc
jbe
push
pop
or
ljmp
lock
lret
mov
sbb
xor
jo
incb
das
jg
fcompl
xchg
dec
push
and
jbe
ret
in
fists
out
loope
push
push
sahf
enter
mov
add
jmp
mov
mov
dec
mov
nop
out
pushf
fprem
cmp
cltd
aaa
cli
sbb
lock
push
adc
ja
out
fs
push
mov
inc
mov
add
les
test
cs
and
insl
popa
mov
sarb
clc
sub
mov
push
push
cmp
stos
jmp
stos
sub
stc
call
sub
sarl
xor
mov
sti
jmp
outsb
lcall
addr16
testl
or
and
fiadds
and
loop
outsl
testl
movsl
push
sbb
aas
jg
mov
aad
das
hlt
das
icebp
inc
jo
pop
out
mov
push
jle
iret
stc
mov
call
insb
js
jae
int
cmp
call
lds
inc
je
xbegin
xchg
mov
in
dec
scas
jb
imul
int3
sub
xor
push
pop
call
int3
or
xchg
jle
aas
fstps
ljmp
call
or
out
lock
sbb
out
das
mov
pop
xorb
adc
bound
pop
pop
and
add
pop
pop
dec
insb
jmp
sub
bound
pop
fcompl
cmovnp
sbb
pop
cmp
xor
mov
mov
incl
jl
cmp
mov
fmull
ret
or
jg
mov
sub
dec
mov
fwait
cmpsl
or
adcb
test
es
int
jbe
fidivs
pop
hlt
mov
push
pcmpeqd
es
jg
or
pop
cltd
mov
mov
test
jno
loopne
popf
xchg
insb
mov
pop
cmp
fildl
fiaddl
rcll
cmpsl
push
stc
cs
push
mov
gs
fdivr
cwtl
mov
mov
lahf
jecxz
fbld
arpl
popa
out
decl
pop
lds
or
sar
mov
jnp
dec
jb
lods
sub
sti
ljmp
test
int
divb
clc
jecxz
sub
ficomps
pop
insb
aad
pop
das
pushl
clc
lcall
scas
dec
sbb
in
pop
test
lret
mov
push
aaa
inc
mov
cs
sarl
loope
mov
cmp
hlt
call
incl
pop
dec
cmp
and
push
jnp
rorl
and
popf
jge
inc
pusha
sti
lret
cmp
mov
mov
jne
stos
add
std
lcall
sahf
pop
xchg
cmp
ficomps
rcrb
xor
add
inc
push
movsb
inc
mov
sbb
idiv
mov
stos
daa
add
inc
add
cs
mov
rolb
std
out
addr16
std
mov
cs
ljmp
das
pop
cmp
xlat
fiadds
mov
aam
mov
call
aam
adc
push
push
or
or
fcoms
xchg
lock
mov
enter
mov
addr16
adc
jecxz
jg
ffreep
pop
loopne
mov
fcompl
xchg
and
push
xor
dec
xor
ss
je
pmaxsw
aas
popa
andb
xchg
out
cmp
xchg
adc
inc
mov
out
and
dec
out
inc
data16
fmuls
loop
adc
push
add
or
std
decl
movsb
cld
sbb
jle
xor
inc
test
ljmp
rcll
insb
stos
test
out
js
mov
fdivrs
repz
adc
dec
cmp
daa
idivl
jle
int
cli
xchg
cs
add
xchg
xor
addr16
decl
arpl
and
jg
ds
nop
jg
imull
mov
testb
fwait
sub
stos
jmp
jp
in
pop
subl
sti
mov
repnz
jae
lds
mov
andl
lock
pushl
push
xchg
push
push
aam
iret
int3
mov
fisubrs
mov
loopne
test
inc
outsl
mov
add
fucomip
inc
fbstp
movsl
pop
pusha
mov
xor
in
das
jne
inc
mov
add
sbb
decl
js
shrl
cld
dec
and
arpl
out
aaa
lock
mull
fs
call
pop
inc
test
pop
jmp
xor
sub
or
dec
pop
mov
xchg
jp
stc
call
xchg
push
cmovnp
lea
call
mov
or
ret
xor
fstl
call
xor
adc
int3
dec
dec
into
mov
loope
aad
mov
jle
pop
xchg
cld
adc
lcall
sub
mov
out
inc
jmp
stc
outsb
sub
lcall
mov
dec
dec
or
dec
xchg
xchg
in
sar
jmp
test
push
cmp
push
movsl
push
ret
cmp
cli
push
mov
sbb
cld
adc
push
int
dec
insl
incl
rcl
aaa
cmpsl
jne
rcrl
xor
ja
jg
sbb
mov
bound
xor
hlt
mov
xor
mov
popf
sub
filds
push
fs
pandn
push
pushf
push
fistpll
loope
push
outsb
hlt
cmpsl
imul
dec
or
leave
or
cmp
cmc
rclb
mov
fs
xlat
pop
cmovb
xor
idiv
cmp
push
jo
leave
cmp
push
jmp
rcrl
nop
push
enter
inc
push
inc
es
pop
out
fstpl
pop
push
push
ret
xor
or
scas
jg
jl
enter
jo
pop
fsub
xor
imul
andl
stos
bound
mov
mov
andb
shlb
mov
fidivrs
mul
or
mov
sub
adc
jecxz
test
out
fucomip
or
nop
xchg
push
push
lret
inc
inc
jg
adc
jmp
outsl
dec
mov
cmp
sbb
inc
jno
mov
push
mov
mov
mov
jbe
rclb
scas
sub
das
icebp
and
lock
in
sub
mov
jmp
insl
push
std
adc
loop
sub
addr16
xor
inc
sar
adc
insl
lret
lret
cmpsb
mov
sti
pushl
daa
data16
inc
pop
push
std
dec
aam
jb
inc
xor
sarb
sbb
xchg
pop
push
push
into
lret
lret
lods
insb
adc
lods
incl
in
sti
addr16
stos
push
and
adc
mov
adc
ss
sbb
mov
xor
lcall
pop
enter
and
mov
xchg
adc
push
rorb
or
cmp
pop
pop
push
imul
insl
push
aad
or
movsl
sub
daa
fsubrp
out
lods
jle
dec
xchg
cmp
or
clc
jg
std
rcl
cmovle
inc
dec
lret
stos
sbb
xchg
xchg
call
sbb
stos
bt
ja
ret
in
mov
int3
cmp
idiv
mov
gs
and
jns
jmp
dec
add
cmc
mov
sti
lcall
loope
lods
xchg
stos
imul
push
mov
mov
cmp
bound
adc
insb
test
lods
pop
push
add
mov
mov
or
je
scas
outsb
pop
fs
je
movsl
bound
daa
sbb
fwait
outsl
cmc
inc
pushl
popa
mov
aas
xchg
dec
repz
clc
into
shlb
and
fldenv
mul
pushf
pop
dec
mov
mov
stc
mov
mov
test
lret
aas
lret
fimuls
rcrl
fbstp
xchg
int
call
nop
cmp
mov
xor
out
sbb
cmp
jns
lret
mov
jne
xor
mov
mov
jg
int
or
xlat
andl
push
or
mov
sub
lcall
test
jp
jns
jl
mov
xor
icebp
mov
aaa
ljmp
pop
js
divb
es
icebp
jle
sti
ss
leave
inc
lret
adc
cltd
push
push
aad
pop
pop
pop
jo
adc
testl
xor
cmp
sbb
aaa
loop
repnz
stos
hlt
mov
fwait
in
and
repnz
decl
pop
jno
inc
xor
ret
andl
shll
fisubrs
decl
adc
xchg
and
mov
fwait
sbb
add
adc
faddl
xor
inc
ffree
fwait
daa
push
stos
cli
je
ss
mov
xor
das
xor
std
dec
icebp
out
aaa
fistl
cmp
cmp
jle
push
movsl
das
fbstp
mov
mov
push
sub
pop
ljmp
pop
fs
mov
fdivrl
or
push
mov
jmp
lock
add
rcll
dec
les
int
mov
mov
mov
je
mov
adc
es
adc
dec
or
or
popf
lds
out
ljmp
xor
push
iret
dec
dec
scas
inc
cmp
loope
pop
push
arpl
enter
xchg
sbb
das
mov
add
shl
inc
ret
push
pop
push
je
mov
push
mov
mov
cmp
xlat
pusha
std
ds
jge
sbb
out
stc
insl
xor
fildll
clc
and
cld
fisttpll
add
ljmp
cmc
mov
mov
xchg
mov
xchg
popa
push
push
mov
mov
sbb
jg
add
mov
jo
aas
popf
xchg
aam
adc
and
fucomip
filds
lret
mov
arpl
sbb
shll
daa
push
push
push
movsb
hlt
cmp
movsb
aad
cmp
inc
imul
cmp
outsl
out
dec
and
rcrl
mov
int3
and
or
outsl
lock
jno
mov
mov
shlb
and
jp
pushf
pop
sti
mov
les
or
xor
mov
xchg
mov
mov
shlb
ss
je
dec
mov
das
lock
aad
cmp
cmp
xor
mov
pop
pop
ds
xorl
popf
lods
rcrb
aam
stos
sub
movsl
pop
call
gs
push
outsb
call
cmc
inc
jecxz
cmp
nop
neg
pop
sti
mov
pop
popf
popf
pop
sahf
pop
sbb
mov
mov
jne
mov
or
out
scas
pop
imul
dec
fistps
in
dec
cmp
stos
xorb
fcomps
fnstsw
xchg
scas
mov
xor
mov
pop
jl
cmp
es
xchg
sahf
gs
push
xlat
movsb
repz
adc
and
fbld
movsb
mov
jmp
call
sub
int
mov
xchg
stos
sub
ja
push
inc
ljmp
lret
mov
xor
ljmp
icebp
mov
outsb
out
xor
jle
sarl
cwtl
in
mov
das
mov
orl
decl
cmp
sbb
popf
cmpsl
jmp
decl
push
pop
dec
lea
mov
cmpsb
mov
mov
push
lret
idiv
das
hlt
or
or
test
arpl
ret
jg
mov
dec
adc
sbb
sub
mov
aaa
cld
in
pop
aas
sbb
dec
push
loop
push
adc
push
sub
mov
gs
and
and
cmp
or
or
movsb
xorl
push
mov
cld
daa
hlt
inc
adc
xchg
call
jg
lret
mov
push
add
out
inc
cwtl
add
mov
adc
lcall
incl
dec
cmpsb
cs
stc
mov
jp
push
out
lcall
incl
cli
jmp
sbb
stos
mov
adc
scas
sbb
or
cmp
lcall
add
pusha
inc
lret
ret
loop
add
and
push
lods
inc
pop
idiv
xorl
mov
xor
mov
cmc
mov
scas
cmp
ja
fidivs
mov
jae
addr16
inc
cmpsb
scas
push
and
xor
inc
or
sar
pushl
lret
dec
leave
inc
xchg
mov
adc
sub
lahf
out
sahf
test
fisttpl
lcall
cld
sarl
mov
test
test
outsb
adc
pop
xchg
mov
push
jno
ljmp
jne
inc
test
cmpsb
call
loop
sbb
jg
pop
fwait
xchg
adc
subl
movsl
addb
mov
mulb
repnz
out
xchg
sbbl
iret
jg
fwait
add
fcompl
loop
and
mov
das
insb
push
sub
xchg
jg
ret
xchg
int3
cmp
cli
dec
xor
xor
or
inc
daa
ljmp
inc
and
mov
pop
pop
lods
mov
cmp
and
scas
xchg
jl
dec
ss
add
sub
dec
sub
data16
mov
stc
ficomps
andl
inc
add
sbb
jmp
adc
loopne
stos
adc
std
xlat
pushf
jmp
movsl
movsb
sub
ret
inc
push
pop
popf
sbb
mov
iret
mov
cltd
jecxz
in
idiv
lcall
jo
out
outsl
das
out
pop
out
xchg
add
sub
mov
pop
jecxz
pop
idiv
mov
sti
divb
mov
xor
push
mov
divl
lods
sub
sub
std
jmp
jp
cmpb
sbb
cmp
adc
outsb
jge
movsl
pushl
popf
movsb
arpl
test
mov
icebp
jno
ds
pop
fcmovu
sbb
jne
inc
test
push
pop
outsl
cmp
mov
gs
push
incl
loope
sbb
push
jecxz
nop
adc
or
into
or
sbb
or
dec
je
ror
xor
cmpsl
ret
addb
addr16
mov
fiadds
lahf
dec
or
jno
lods
int3
mov
lcall
cmpsb
cmpsb
loop
mov
aaa
in
orl
call
xchg
cld
fistpll
pop
xchg
lods
out
dec
sub
adc
pop
adc
push
adc
cmpl
sbb
xchg
mov
dec
out
sub
out
inc
xchg
jecxz
dec
mov
or
xchg
incl
loopne
out
bound
mov
add
pop
ficoml
leave
add
or
fucomip
push
add
adc
and
insl
movsb
mov
outsb
enter
aad
call
cmp
and
jge
jp
cmc
ss
xchg
jno
sbbl
outsl
cmc
ljmp
push
jns
sub
mov
jo
and
inc
adc
mov
pop
addr16
fstpl
push
out
stos
jl
inc
add
mov
jmp
adc
roll
xlat
push
dec
les
arpl
adc
pop
and
fidivs
decl
fistps
xchg
jecxz
xchg
popa
popf
stc
imul
test
mov
xlat
xor
sbb
mov
clc
decl
fsub
dec
aaa
rcrl
inc
insl
fwait
mov
inc
aaa
jg
or
lahf
mov
inc
cltd
rcr
inc
lahf
repz
jns
jbe
mov
jo
xchg
lea
inc
inc
dec
daa
mov
sahf
mov
jp
mov
pushf
push
adc
out
mov
stos
jo
add
pop
xor
sbb
sub
insl
das
cmpsb
sub
out
add
test
mov
lds
add
loop
cwtl
adcl
lods
pop
stos
add
dec
cmp
mov
cmp
xchg
jg
inc
test
inc
xchg
sub
out
mov
cmpsl
sub
notb
lret
mov
shlb
dec
mov
pop
mov
loopne
sbb
imul
pop
pop
lods
pop
cltd
adc
jno
pusha
add
push
mov
mov
xor
pop
je
cmc
pop
lret
les
xchg
addb
aam
inc
fcomi
cmp
pop
lods
dec
push
dec
dec
or
in
mov
pop
mov
es
popa
daa
pop
push
cld
mov
ljmp
inc
sbb
push
mov
dec
cltd
adcl
mov
pop
jae
stos
mov
adc
pop
fwait
xor
xchg
xchg
rcl
add
call
mov
loop
cmc
jecxz
mov
pop
int
call
clc
pop
fdivrs
call
xor
fistl
and
mov
gs
clc
test
cli
test
loop
dec
icebp
pushf
test
pop
lcall
jae
cmp
fcomp
fwait
pop
sbb
cmp
cmpsb
in
outsl
lcall
jecxz
jge
jae
ror
bound
in
jb
fisttpl
scas
cmp
movl
jmp
incl
jmp
mov
lods
shr
or
xchg
push
repnz
pop
faddl
mov
decl
daa
push
int3
inc
and
clc
push
push
popa
sub
push
aam
out
mov
mov
loope
ja
rcll
dec
dec
mov
inc
jl
jbe
daa
xchg
push
es
cmp
add
idiv
jg
cltd
jmp
ficomps
cmp
or
fmuls
or
stos
jg
jg
ljmp
inc
and
roll
cmp
idiv
outsb
scas
adc
sbb
xor
das
xor
in
fstl
xchg
cld
xchg
fdivrl
pop
mov
dec
js
push
xor
scas
ficomps
iret
jno
arpl
leave
mov
test
sub
mov
dec
sub
push
std
jmp
and
cli
jg
gs
movsb
and
out
cmpsb
inc
test
push
adc
bound
mov
test
jne
repnz
pop
cmpl
jl
pushf
sbb
iret
outsb
inc
ja
push
push
cmp
outsb
stc
jp
ja
es
fstl
push
add
enter
push
pop
cmp
cmp
cli
xchg
mov
nop
clc
fmul
lcall
mov
call
mov
imul
rol
inc
ret
fwait
aam
call
iret
stos
aas
sbb
sub
sti
mov
mov
push
enter
or
xchg
xchg
lds
ret
outsb
inc
add
lcall
loopne
call
rclb
jo
pop
xor
enter
push
ds
adcb
add
mov
out
sub
add
mov
fistl
jb
in
push
les
out
out
movsl
sub
and
pop
call
sub
aad
adc
xchg
push
sub
call
or
imul
jge
fnstsw
imul
stc
pop
lahf
mov
sbb
enter
dec
cld
xchg
sarb
inc
ret
es
dec
adc
pusha
push
inc
mov
sbbl
cmpsl
lret
mov
fldt
mov
adc
into
mov
or
pop
bound
jbe
into
inc
mov
dec
add
es
pop
jp
fadds
sbb
push
push
mov
scas
adc
adc
hlt
mov
pop
loope
sub
js
push
mov
xchg
adc
shrl
loop
mov
fcom
call
enter
sti
outsl
xchg
rorb
scas
clc
inc
push
sarb
std
dec
insb
mov
in
xchg
mov
loope
add
and
push
jnp
leave
inc
mov
decl
inc
sub
lds
addl
into
xor
aaa
lcall
xchg
rorb
leave
mov
pop
sahf
jns
out
sbb
and
in
push
jl
or
sub
push
ljmp
pop
jp
into
scas
insb
jmp
cmp
divl
mov
scas
imul
xor
jae
lock
mov
jge
pop
cmpsl
mov
std
push
xchg
inc
add
inc
jg
jg
lods
std
mov
loopne
mov
fistpl
cltd
xlat
adc
xchg
adc
pop
pop
std
or
push
clc
and
shll
jmp
shll
mov
sub
push
jo
cmp
aaa
jae
ret
inc
cmp
movsl
xchg
add
sub
dec
xchg
pop
cmpsl
sbb
pop
inc
and
xchg
test
call
shlb
arpl
pop
inc
arpl
or
lret
das
icebp
pop
fistps
rcr
pop
lcall
in
loope
int3
xchg
cwtl
adcl
movsl
rorb
sti
fists
cld
and
imul
ret
xchg
add
mov
in
stos
sarl
loop
pop
fcompl
jg
pop
pop
lea
dec
ds
mov
ret
ja
rcll
pop
cli
dec
or
pop
add
pop
push
loop
and
lret
and
xchg
dec
and
sub
jmp
out
ljmp
lods
test
dec
fwait
pop
push
pop
inc
jb
adc
jg
fmull
jb
sub
inc
inc
cli
test
jg
imul
dec
std
pop
pop
loope
sbb
cmp
test
dec
mov
mov
push
sti
hlt
sub
mov
push
mov
cld
cmp
in
jg
dec
sub
push
aas
gs
jle
push
cld
and
js
int
ja
push
lock
lcall
pop
push
fmull
or
loop
xor
adc
out
je
aam
fisttps
mov
mov
jno
cmc
std
jecxz
mov
pop
inc
mov
sbb
lods
cwtl
cltd
mov
pop
and
dec
cltd
or
push
add
mov
fmull
loopne
popa
and
and
mov
sbb
and
xor
std
pushl
jmp
dec
pop
inc
and
dec
or
add
pop
fistps
sbb
mov
rorb
lea
fmul
xor
xor
xor
push
jecxz
js
push
xor
pop
mov
mov
out
daa
fwait
inc
xor
std
cli
divl
ss
es
pop
jg
xchg
jge
out
fsubrs
add
jl
jmp
fnstsw
imul
xrelease
pop
lea
push
sarb
pop
and
pusha
sbb
xorl
dec
or
aad
ret
stc
ret
lret
xchg
jg
pop
mov
lahf
sub
mov
incl
sub
ljmp
sbb
movsl
pushf
push
je
mov
ret
jp
loopne
and
out
cmpsl
nop
test
adc
orb
jp
loopne
and
popf
jg
push
imul
ljmp
xlat
jg
int
or
xor
inc
notl
into
pop
je
cmpsb
adc
dec
insl
jg
mov
loop
or
mov
push
xchg
ljmp
call
xchg
xchg
call
out
scas
xor
xchg
push
or
or
gs
scas
stos
add
and
lcall
mov
xor
lds
mov
push
stos
sub
clc
lcall
cmp
pushf
xor
adcb
adc
das
sub
les
scas
add
rcll
dec
mov
push
cmc
lret
mov
rorb
negl
cmc
mov
xor
lock
sub
enter
call
sub
sbb
jne
fsqrt
xchg
pusha
cmp
loop
in
jle
add
stos
lods
jmp
leave
push
mov
sahf
sub
or
pop
cli
or
sbb
idiv
jg
leave
mov
movl
jno
rcl
inc
jb
lcall
pop
mov
inc
lahf
fistps
push
pop
push
ficomps
aam
jb
into
jge
jmp
cmp
test
iret
dec
or
pop
push
in
sub
or
jle
out
clc
fwait
cmc
inc
imul
push
stos
pop
addr16
dec
jae
mov
mov
ffreep
mov
mov
add
ret
mov
cwtl
hlt
xchg
mov
shlb
push
xchg
cwtl
xlat
push
jno
jl
push
hlt
or
xchg
repz
mov
lcall
pusha
mov
loopne
pop
out
xlat
test
clc
mov
mov
jl
dec
inc
outsb
or
adc
mov
adc
or
or
inc
sti
mov
insl
mov
and
xor
sar
out
mov
repz
jno
lods
pop
mov
mov
mov
adc
aaa
clc
fstpl
sbb
loopne
or
pusha
or
rorb
lcall
stos
int
mov
mov
sbb
mov
mov
adc
imul
aaa
cld
pop
fstl
notb
xchg
xchg
mov
inc
outsb
inc
inc
inc
aas
push
cmp
push
jg
jg
loopne
xlat
divb
and
subl
cmp
xor
fldt
mov
sbb
je
or
lret
mov
test
xor
outsl
mov
push
jg
pop
inc
imul
adc
xchg
xchg
adc
mov
aam
adc
fsubrp
lods
xor
cmp
push
or
cmp
pop
jmp
dec
push
fisttpl
rcll
popa
and
loopne
xchg
stos
aaa
pop
cli
int
cmpsl
test
jge
in
pop
jg
or
sarb
xor
stos
dec
pop
int
xchg
or
cmpsb
rorb
iret
mov
out
in
pop
shrb
addb
sub
mov
lods
sub
insl
pop
lea
nop
lahf
movl
rolb
jg
ret
push
in
enter
movl
or
or
loope
enter
mov
pop
lock
incl
ljmp
daa
jne
dec
fldenv
fdivl
jge
into
subl
call
pop
lcall
lret
test
mov
jg
xchg
lds
inc
pop
roll
in
adc
insb
sbb
inc
outsl
pop
mov
mov
lahf
fldl
ja
lock
jg
ljmp
pop
mov
adc
loopne
xchg
adc
in
or
jmp
imul
sbb
rorl
jbe
icebp
mov
pusha
jae
add
jb
push
push
adc
mov
dec
sbb
cwtl
lods
or
and
repz
dec
dec
mov
das
jne
dec
or
dec
cmpsl
push
ds
or
and
push
loope
or
incl
fisubrl
jge
dec
push
roll
outsl
cmc
cmpsl
data16
pop
testb
jmp
jmp
mov
sub
lods
outsl
dec
lea
or
imul
lds
int
xchg
dec
inc
mov
mov
xor
mov
mov
ret
push
or
mov
and
test
cld
data16
xchg
mov
enter
test
sti
ret
ljmp
clc
imul
mov
imul
addb
repz
push
ds
jge
pop
sti
push
or
push
push
adc
shlb
jno
pop
jmp
dec
shrb
addr16
cltd
cli
insl
loopne
jo
adcb
inc
add
pop
loopne
lods
rol
mov
std
jg
ljmp
loopne
pop
mov
adc
dec
push
sub
outsb
insb
ljmp
sub
push
lock
std
std
dec
xchg
sbb
call
jns
js
leave
ret
mov
pushf
mov
ss
lahf
scas
dec
in
jge
or
rcr
inc
pop
and
aam
pop
into
add
out
adc
test
popf
lcall
push
mov
imul
xchg
push
es
lock
shll
adc
or
sbb
fldl
pop
xchg
in
call
ret
jge
sahf
out
into
int
lea
pusha
rorl
pop
in
lcall
das
mov
jl
in
cmp
aam
add
push
pop
mov
pop
clc
loop
sub
test
lahf
and
dec
add
inc
push
clc
push
insl
mov
add
in
mov
test
xor
rcr
sbb
stc
pushl
xchg
fs
mov
ret
jns
cmp
into
les
insl
and
jle
out
add
pop
mov
mov
clc
pop
in
sbb
aam
push
ret
jmp
sub
mov
xchg
jg
pushl
dec
roll
out
je
xchg
mov
push
jle
dec
rorl
inc
adc
jmp
pop
fiaddl
test
xchg
imul
push
ret
jbe
cmp
sarb
cmp
jge
imul
fadds
pusha
insb
dec
sbb
jge
decl
or
xor
dec
inc
cld
and
push
dec
in
adc
test
jne
xorl
jl
lret
fdivr
lcall
cmpsb
movsl
add
dec
sbb
cmp
dec
in
jmp
mov
xchg
arpl
push
jg
inc
aaa
ror
pop
outsb
push
sti
repnz
xchg
add
add
lods
sbb
insl
pop
jbe
pusha
test
fcmovnbe
sub
out
repnz
or
xchg
rcrl
sub
ret
mov
lds
dec
vcomisd
pop
decb
or
adc
dec
mov
mov
pop
inc
ret
jl
loope
lret
rcr
and
or
lret
call
rcrb
int
jp
sbb
lods
fst
push
sti
pop
outsb
mov
and
data16
mov
jg
jg
inc
add
mov
inc
es
jae
test
dec
add
pop
mov
lea
das
insb
adc
adcb
or
pop
mov
pop
mov
lcall
jns
pop
enter
mov
in
enter
and
aam
push
ret
in
aad
adc
xchg
dec
nop
adc
js
jb
add
testb
insl
mov
fldl
sbb
sbb
push
lea
mov
mov
lock
xchg
ret
pop
outsl
std
and
push
jle
dec
pop
rolb
clc
out
jl
jge
loope
inc
imul
in
lret
lea
cmpsb
mov
fisttpll
cli
test
dec
xor
xchg
fildl
inc
mov
and
xchg
test
ret
dec
adc
sahf
in
call
ret
jno
mov
arpl
push
das
dec
xchg
jg
push
jbe
cmp
stc
add
sbb
cli
mov
push
cltd
fistl
push
cmp
mov
xchg
inc
shll
lea
add
rcrb
rcl
in
xchg
orb
inc
adcb
inc
cli
test
inc
and
mov
jno
pop
pop
xchg
insl
stc
xchg
mov
jo
pop
jl
insl
jno
mov
and
aam
push
shlb
push
aad
jge
push
xor
hlt
add
jecxz
mov
mov
imul
das
cld
sbb
sub
dec
testl
inc
inc
mov
pop
mov
test
lods
adc
outsb
cltd
pushl
loope
cmp
frstor
pushw
mov
dec
repz
xchg
subl
fidivrl
movsb
mov
dec
movl
mov
cli
mov
call
mov
pop
pop
nop
jnp
mov
mov
mov
and
cs
aas
mov
xlat
dec
leave
or
xchg
push
leave
lcall
sub
outsl
fs
pushf
cs
test
jp
mov
mov
lcall
jbe
popf
adc
cmc
insb
int3
fidivl
movsb
scas
in
sub
sti
iret
daa
dec
imul
pop
out
xorb
or
sbbb
ds
or
mov
cld
das
icebp
cs
aas
data16
rcr
stc
adc
or
lcall
cwtd
mov
outsb
cs
inc
into
outsb
push
cmp
js
jecxz
and
mov
outsl
decl
jbe
fwait
clc
bound
jle
movsb
movsb
out
dec
stos
stos
addr16
or
das
xchg
mov
stc
pushl
mov
fsubrl
push
cmp
call
mov
cs
arpl
fildll
das
dec
inc
ds
jbe
jbe
push
pop
aas
and
adc
int
mov
or
dec
ret
jbe
jo
aas
nop
cmp
imul
call
cld
ljmp
pop
xorl
add
or
ja
xor
mov
gs
aas
mov
ljmp
cmpsb
pop
stc
pop
dec
das
push
call
mov
retw
and
dec
sub
fcoms
repnz
xor
push
xor
jbe
nop
lret
fcomp
cmp
movsb
mov
cmpsl
dec
sbb
das
icebp
mov
push
por
mov
fwait
clc
loopne
inc
mov
and
pop
jle
mov
ss
stc
cs
jns
dec
xchg
cs
push
jae
add
das
sbb
jg
mov
mov
ret
outsb
aas
loope
aaa
loopne
sub
mov
ret
lcall
cmc
push
fidivrl
movsb
test
mov
iret
flds
pushf
push
in
in
das
cmc
or
push
add
out
adc
jb
jg
pop
mov
push
rcrb
idiv
repnz
lret
mov
je
mov
push
inc
jecxz
arpl
mov
or
ret
outsb
add
cmp
call
das
bound
mov
dec
into
jbe
fwait
ret
imul
sub
xor
js
inc
cmp
cli
outsl
cld
xorb
sti
mov
rclb
scas
dec
inc
cld
pop
mov
fnstenv
sahf
or
jns
jg
stc
inc
ja
or
lret
pop
js
in
pop
mov
and
mov
cmp
cwtl
ss
cmp
imul
mov
je
das
popa
xor
sbb
ja
addr16
fptan
fistps
nopl
xchg
xor
xor
push
aad
into
aad
call
jg
add
lea
sahf
rorb
push
in
pop
sahf
or
repnz
decl
les
imul
dec
adc
jbe
mov
jg
ss
sub
and
jbe
popf
sbb
imul
sahf
int
stc
dec
mov
sar
cmpb
add
aam
fcmovnu
and
scas
into
jg
std
xchg
pop
pop
xorl
sub
cld
repnz
ja
data16
push
mov
mov
pop
sbb
mov
icebp
bnd
lret
and
push
push
mov
mov
jbe
fwait
leave
imul
lret
push
mov
ja
xchg
and
jge
mov
adc
insb
mov
pop
jg
out
mov
cld
cmc
test
cmp
ja
dec
fnsave
mov
mov
call
das
jl
xchg
xor
mov
mov
test
sar
xor
xor
xor
xor
xor
xor
xor
pop
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
sub
xor
popf
xor
mov
ss
add
ss
ss
outsl
xorb
ss
ljmp
pushl
cmp
dec
aaa
gs
jl
nop
aaa
mov
cmp
add
cmp
cmp
push
jl
xor
xor
xor
jg
outsl
jl
fs
ss
ss
xchg
ss
ss
aaa
pop
out
sar
aaa
inc
aaa
xorb
aaa
les
xlat
hlt
aaa
repnz
pop
cmp
inc
in
push
cmp
cmp
add
cmp
cmp
cmp
jg
cmp
cmp
je
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
into
cmp
mov
aas
sub
jnp
jmp
push
xor
xor
mov
mov
xor
insb
xor
das
cld
pushl
xchg
xor
xor
xor
xor
in
xor
xor
push
xor
inc
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
xor
xor
xor
xor
xor
xor
xor
pop
xor
jp
outsb
xor
xor
xor
xor
inc
aaa
or
pop
std
test
pushf
aaa
mov
mov
je
mov
lahf
cmp
cmp
xor
aad
outsl
std
cmp
mov
cmp
dec
cmp
cmp
cmp
cmp
call
cmp
cmp
aaa
cmp
mov
cmp
jmp
aaa
fcmovnb
mov
jecxz
adc
and
sub
xor
xor
call
pop
xor
test
lea
sti
xor
xor
xor
push
xor
xrelease
outsl
inc
mov
pop
xor
xor
xor
xor
xor
ljmp
ljmp
ss
xorl
ret
jg
pop
xchg
cmp
mov
mov
xchg
lcall
sbb
insb
cmp
jl
cmc
cmp
cmp
cmp
cmp
cmp
cmp
mov
clc
jge
aad
pop
inc
cmp
mov
scas
cmp
cmp
incl
ds
ds
ds
dec
ds
ds
ds
ds
add
cmpb
add
xor
xor
mov
sahf
xor
test
sbb
pushl
pop
xor
xor
xor
xor
lahf
aas
xor
dec
sar
jns
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
jno
jp
sbb
sbb
lcall
xor
push
outsl
js
pushl
jae
mov
fwait
xor
push
xor
sub
xchg
lea
mov
divl
adc
push
aaa
sbb
inc
aaa
imul
jno
sahf
aaa
lds
aaa
adc
movsl
iret
cli
cmp
cmp
cmp
mov
mov
aad
repz
cmp
sub
jo
jbe
jl
cmp
xchg
cmp
std
cmp
cmp
cmp
cmp
cmp
cmp
pop
ds
ds
ds
cmpsl
mov
mov
mov
fistpll
idivb
das
aas
push
aas
imul
aaa
mov
xor
and
add
xor
inc
ret
pushl
lret
xor
xor
xor
xor
xor
xor
jb
push
or
jg
xor
xor
xor
xor
xor
xor
ret
mov
popa
add
xor
mov
sbb
dec
aad
xor
xor
xor
xor
xchg
xor
pop
int3
sbb
aas
xor
jb
jl
xor
xor
cmp
dec
ss
imul
ss
mov
lcall
jecxz
push
loopne
ss
ss
xlat
leave
icebp
push
jg
aaa
ds
in
aaa
xlat
adc
ljmp
icebp
jg
cmp
cmp
cmp
cmp
cmp
pop
cmp
js
mov
cmp
cmp
mov
mov
cmp
cmp
push
out
sub
cmp
cmp
cmp
add
dec
cmp
popa
cmp
je
lea
cltd
fdivp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
and
das
cmp
cmp
push
cmp
push
cmpb
ljmp
or
mov
mov
cmp
cmp
cmp
cmp
or
sbb
mov
cmp
adc
pop
cmp
cmp
cmp
cmp
cmp
cmp
lock
sarl
ds
aas
pop
add
pushf
hlt
lock
push
pop
aas
mov
xchg
pushl
test
xor
xor
xor
xor
xor
xor
dec
aaa
xor
jae
fnstenv
adc
cmp
inc
xor
jg
aaa
aas
mov
mov
in
in
xor
xor
xor
and
sub
pop
jg
xor
rolb
pop
pop
xchg
dec
lret
lock
push
jecxz
or
adc
sbb
sub
mov
jle
popa
pop
or
sub
inc
sub
decl
aaa
notb
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
mov
dec
cmp
push
cmp
pusha
cmp
insb
cmp
mov
mov
mov
cs
out
pop
add
jecxz
add
out
xor
xor
adc
push
cmp
add
dec
or
fmuls
sub
scas
jns
mov
add
out
fcompl
rcrl
paddd
out
cmp
popf
fstps
cltd
cmp
cltd
ds
add
aas
xchg
cmovns
adc
dec
mov
cmp
or
add
sbb
xor
and
outsb
mov
mov
pop
and
pop
xor
or
adc
dec
mov
out
mov
push
je,pn
js
mov
adc
in
add
add
xchg
xor
pop
jnp
dec
xchg
lods
pop
or
jb
jb
sub
fwait
cmp
and
mov
fildll
and
inc
mov
test
add
inc
sub
xor
addb
inc
jno
std
push
inc
pop
and
push
inc
mov
push
jne
push
or
shr
push
mov
add
mov
adc
adc
jp
adc
adc
inc
inc
push
push
push
pop
fidivl
aad
mov
pop
pop
pop
cli
xchg
mov
dec
push
push
pop
mov
aas
adc
or
movsl
or
inc
mov
mov
adc
adc
movsb
aam
std
push
or
data16
mov
rolb
pop
push
mov
add
and
inc
mov
push
bound
or
test
adc
aam
adc
addb
in
fmull
inc
or
lea
jne
enter
push
sub
adc
sbb
pop
lods
int3
inc
dec
lock
flds
jne
sbb
jmp
call
addr16
aam
lds
mov
stc
fidivs
sbb
es
push
and
aaa
mov
sti
cmp
add
lret
add
out
adc
andl
sti
jge
add
xchg
adc
and
fs
or
mov
or
mov
int
out
shll
xchg
popa
frstor
sbb
fidivs
pop
es
push
bound
lret
pop
mov
fbld
push
or
xchg
insb
out
jno
push
jno
mov
repnz
hlt
imul
add
xchg
lret
data16
xor
xor
cs
fs
cld
insb
cmpsb
dec
or
jae
mov
insb
adc
xchg
insb
dec
dec
inc
jg
mov
test
repnz
rorb
and
loopne
mov
adc
mov
lret
insl
inc
gs
dec
xor
xchg
sub
dec
cwtl
popa
insl
mov
add
gs
push
es
or
movsb
push
sbb
add
push
jp
adc
xor
lahf
je
xadd
js
mov
sub
or
inc
gs
dec
call
lods
cli
adc
cmc
cmp
cmp
or
add
push
push
or
sbb
jb
in
xor
mov
jns
jbe
cmp
stc
lea
inc
push
fs
sbb
and
nop
pop
mov
push
dec
pushf
stos
inc
out
jmp
jecxz
mov
fimuls
xchg
fdiv
clc
xchg
adc
adc
cli
mov
mov
push
or
inc
push
iret
in
push
ret
xor
popa
jg
pop
xor
or
int3
or
outsb
lret
mov
das
or
and
sub
and
xchg
xchg
incb
jae
pop
das
in
mov
adc
sub
and
and
sub
adc
mov
or
popa
or
sub
inc
push
cmp
sbb
fisttpll
mov
and
cmp
sub
or
pushf
clc
std
xchg
inc
cmp
lds
xchg
xor
and
aam
ret
adc
test
lods
out
jl
std
push
popf
orb
clc
inc
jno
sahf
inc
das
jge
adc
frstor
push
cmp
or
cmp
jl
dec
call
call
push
push
and
inc
test
lods
repz
lods
add
adc
jg
push
lret
andl
add
sub
mov
lret
mov
push
jne
popa
outsl
lret
mov
sub
gs
and
sub
js
xchg
gs
push
outsb
insb
popa
jne
and
jb
cmpsb
pop
push
jno
loope
or
jne
mov
cmc
mulb
idiv
dec
stc
push
push
jg
inc
cli
je
sti
xor
call
and
push
scas
mov
dec
mov
rorb
xchg
adc
hlt
pop
adc
test
cmp
add
dec
movb
lret
lret
outsb
int3
pop
lcall
xor
movsl
pop
lcall
push
sub
xchg
rcl
push
cmp
sub
pop
mov
sar
imul
sub
aas
mov
std
enter
test
in
insb
lods
pop
std
mov
sub
or
into
jns
std
inc
std
xchg
cltd
js
push
ja
dec
aad
cmp
add
std
out
pusha
lods
outsl
sbb
cmp
sbb
push
push
or
xchg
es
xor
and
push
push
sub
cmpsl
insl
inc
dec
push
jge
inc
outsb
sub
sbb
mov
sbb
and
addr16
and
or
or
dec
jg
push
adc
out
pop
jbe
or
outsb
orl
decl
jne
in
outsl
push
add
je,pt
test
enter
imul
jne
je
pushf
jo
and
enter
rol
fs
push
mov
mov
pop
iret
dec
xchg
xchg
push
mov
arpl
mov
test
mov
lods
jnp
pop
adc
cmp
or
cmc
mov
inc
xor
lods
jb
mov
call
mov
call
mov
fiaddl
add
imul
add
inc
int3
fs
pop
cs
into
popa
iret
shrb
dec
fwait
in
outsb
rcl
gs
jae
add
js
lret
mov
pop
jmp
popa
jne
leave
mov
outsb
arpl
cs
add
es
leave
mov
inc
sub
insb
outsl
add
fwait
cmpsb
fwait
sub
sub
cmc
mulb
lret
push
adc
gs
daa
lret
mov
insb
outsl
gs
ss
je
out
gs
mov
bound
icebp
insl
mov
push
or
je
xor
inc
ss
mov
mov
mov
ret
cli
adc
fwait
xchg
dec
lcall
and
enter
loopne
je
into
xchg
inc
push
leave
jmp
std
adc
je
ds
addr16
sub
lret
mov
mov
movsl
cld
into
not
leave
mov
cmp
insl
stc
and
inc
push
addr16
cmp
loopne
push
loopne
call
out
jp
xchg
adcl
mov
int
add
push
js
lret
in
dec
pop
or
sbb
add
push
je
int
or
aam
add
fdivr
push
sahf
xchg
cs
lds
mov
inc
inc
fidivrl
sbb
add
es
dec
inc
and
mov
push
jns
nop
neg
sbb
pop
add
mov
xchg
punpckhbw
sbb
mov
insb
mov
and
xchg
test
ret
adc
mov
aam
sti
xor
mov
xor
pushf
or
sbb
inc
mov
xchg
inc
scas
push
sti
in
add
xor
pop
mov
arpl
inc
add
in
pushf
or
mov
or
jo
xchg
mov
call
pop
pop
add
xchg
or
or
add
cmpsl
sub
jo
add
inc
and
pusha
inc
inc
add
push
add
dec
inc
nop
adc
add
dec
inc
add
cmpl
popa
push
inc
test
xchg
rol
shll
jae
xchg
dec
jne
scas
xor
and
jle
and
jo
and
jns
or
cmpsb
add
fcoml
and
push
add
inc
fists
xchg
ss
push
cmp
mov
jne
mov
jmp
mov
cmp
je
sbb
lcall
cmp
je
movsbl
add
sub
test
push
inc
cmp
jne
cmp
je
mov
inc
jmp
fbld
adcb
cmp
inc
scas
stos
fcoml
jae
jl
pop
insb
inc
cmp
jl
add
jg
and
sti
cmp
adc
inc
cmp
shll
add
shll
mov
rcrl
mov
andb
flds
cmp
mov
mov
mov
mov
push
cmp
jb
sub
or
jae
sub
mov
or
notb
mov
mov
push
ret
int3
cmp
je
and
cmpsb
jmp
lcall
fadds
pop
inc
pop
sbb
xor
shll
dec
push
pusha
je
xor
rorl
inc
mov
lcall
inc
dec
shll
cs
je
pusha
dec
adc
addr16
inc
add
loopne
dec
rorl
pop
rolb
dec
adc
dec
cmp
add
sub
add
mov
or
sub
inc
add
or
outsb
push
xor
outsl
fs
jg
xor
dec
popa
jns
jne
jae
xor
or
sub
add
sub
cmp
out
or
fdivl
pop
xor
or
js
sti
mov
insl
xchg
jnp
push
sub
push
push
mov
adc
bound
mov
cltd
or
les
inc
and
pop
inc
nop
clc
inc
lret
dec
ss
add
dec
inc
jo
int
xor
and
add
or
into
addb
push
fsubl
data16
movsb
or
les
sbbb
add
and
arpl
mov
cmp
dec
jo
mov
or
pop
add
adc
test
mov
adcb
or
sti
sbb
inc
xor
imulb
outsw
es
loop
outsb
insl
loope
sub
adc
mov
push
stos
sbb
ds
lock
into
push
lcall
mov
and
mov
push
outsb
jb
mov
fmuls
outsl
ret
inc
outsl
js
xchg
movsb
or
xchg
dec
and
sbb
push
add
sub
dec
stos
and
ljmp
dec
push
add
xchg
loope
push
nop
mov
icebp
add
in
lret
cmc
lods
push
cltd
insl
insl
dec
jae
mov
push
add
sti
add
cwtl
or
jb
lret
dec
pop
js
sbb
bnd
mov
mov
jne
mov
outsl
jb
inc
std
add
pop
adc
cmpsb
jmp
sbbb
cwtl
pop
stos
ss
mov
inc
int3
dec
pop
or
shll
jmp
mov
pushf
dec
xlat
xor
mov
sti
rorl
shlb
or
cs
outsl
add
push
add
jecxz
stos
rcrl
pop
call
arpl
lock
mov
adc
or
sub
je
inc
rclb
outsb
pop
ret
je
rcl
or
add
gs
push
jne
adc
mov
or
test
jbe
or
mov
sbb
xor
jno
and
jne
or
ret
imul
adc
arpl
push
dec
or
sti
fxch
clc
jnp
imul
sub
add
xorl
mov
outsl
pop
jns
test
jmp
pop
testl
popa
jbe
pop
pop
lds
adc
outsl
jecxz
in
roll
pop
sub
imul
jns
mov
add
fiadds
sub
pop
add
clc
pusha
push
mov
add
xor
push
add
add
push
or
dec
mov
fyl2xp1
out
dec
add
add
imul
loopne
jae
xchg
pop
aaa
and
add
sub
add
addl
addr16
dec
into
shrb
push
gs
out
je
or
fwait
jmp
test
insl
add
outsb
int
shlb
jae
and
popa
jns
jns
jne
popa
and
add
addr16
mov
arpl
inc
imul
outsb
es
push
outsb
jae
xlat
add
adc
or
imul
jb
cmp
fnstenv
xor
arpl
je
outsb
xchg
insb
popf
pop
lods
jmp
xchg
pop
dec
or
lds
pop
out
jae
popf
addr16
mov
outsb
jae
sbb
xchg
pop
xor
xor
fsubl
sub
sub
cmp
or
daa
dec
fldenv
dec
imul
push
daa
jbe
mov
imul
jne
fwait
adc
dec
je
and
scas
cmp
xor
pop
fmulp
test
push
mov
and
xlat
popf
jmp
xchg
xchg
and
add
movsl
ret
decl
xor
xor
and
xor
inc
xor
xchg
xor
xor
xor
mov
xor
add
xor
xor
sbb
sub
movsl
mov
adc
adc
call
dec
aaa
pop
aaa
je
mov
aaa
aam
aas
cmp
sbb
inc
cmp
pop
cmp
cmp
cmp
cmp
jo
mov
ds
ds
cld
mov
imul
movsl
ds
ds
xor
aas
addr16
ja
xchg
sarl
aas
clc
jmp
aam
fwait
dec
xor
push
xor
and
sub
bound
subb
sbbb
inc
add
pop
xchg
rorl
aas
lods
add
push
hlt
jl
xchg
out
popa
jnp
pop
inc
out
flds
add
push
mov
maskmovq
divl
in
and
out
add
adc
dec
or
xchg
add
and
pop
sub
call
mov
push
test
outsl
stos
mov
sub
stos
nop
out
and
lods
add
cmp
jb
or
adc
subl
daa
inc
push
pusha
sub
and
add
xor
add
cmovge
je
push
das
add
push
data16
dec
shll
or
dec
ror
cli
cs
out
mov
sub
dec
xor
pop
dec
shll
nop
lcall
scas
int3
jp
pop
sbb
add
inc
sbb
sbb
lcall
jg
and
ret
test
dec
lcall
out
and
jnp
lds
inc
lds
pushl
test
adc
out
dec
push
adc
call
andb
sti
es
sar
push
outsb
andl
add
dec
adc
and
or
or
test
or
and
leave
and
jns
bnd
and
and
and
enter
and
in
push
sub
sbb
jns
and
pop
and
add
push
enter
or
movsb
orb
mov
mov
sbb
fsubr
push
insb
pop
inc
sbb
icebp
nop
enter
call
jb
fnstenv
hlt
sbbb
add
add
mov
lret
add
mov
add
pop
loopne
sub
and
cmpl
test
sarb
add
cmpl
inc
test
addr16
mov
mov
adc
inc
enter
incb
inc
mov
xor
leave
enter
cmp
enter
add
or
push
dec
outsl
sbb
call
mov
sub
or
cld
mov
mov
push
push
cmp
mov
lea
popf
sbb
xchg
pop
mov
pop
call
or
int3
xor
pmulhuw
inc
js
add
or
testb
hlt
pop
popa
jle
add
pop
clc
daa
lods
call
dec
jg
mov
je
push
inc
cmp
in
adc
jmp
ret
and
jno
push
mov
loope
mov
repz
call
jmp
mov
orb
aad
pop
cmp
or
pop
inc
mov
sbb
enter
or
mov
inc
mov
push
cld
mov
dec
mov
jne
es
pushl
sbb
add
popf
hlt
inc
sbb
loopne
add
imul
fmuls
add
lcall
pop
inc
clc
add
mov
sub
push
add
jg
mov
mov
clc
jle
lea
jo
inc
sub
or
scas
jg
sbb
mov
inc
nop
add
insb
mov
xor
xchg
xor
inc
xchg
je
mov
nop
sti
sub
lcall
mov
cmp
sub
cmp
push
fs
cs
mov
inc
sub
cmp
rolb
icebp
sub
pop
pop
cltd
adc
pop
daa
adc
adc
fs
lds
or
push
xor
js
cmc
cwtl
cld
jns
call
sbb
cmpl
add
xor
insb
cmpsb
cmp
push
das
ss
or
repnz
sbb
add
fcoms
lea
mov
inc
inc
pop
fstpt
sub
dec
ret
lea
pop
mov
jecxz
mov
arpl
icebp
mov
ret
xchg
mov
add
outsb
push
std
xchg
cmp
je
sarb
pop
jl
jmp
pop
mov
imul
js
mov
icebp
push
add
out
pop
inc
lds
jbe
xlat
cmp
mov
jl
out
je
sbb
or
push
and
inc
and
test
adc
and
sbb
sbbl
pop
mov
test
or
cmpl
push
lea
sbb
loop
mov
push
cmp
stos
lcall
jno
or
push
negb
sbb
call
es
lcall
adc
push
test
stos
mov
xchg
insl
and
sub
xor
adc
jo
roll
push
scas
test
adc
push
addl
idivl
add
in
idivl
and
jmp
negb
inc
int
fmulp
adcb
dec
lret
inc
lahf
cltd
in
xchg
add
xchg
cld
loopne
call
pop
mov
inc
and
in
sbb
inc
mov
test
stos
dec
mov
sub
imul
test
sbb
sbb
fcmovnu
fnstsw
fnstsw
movb
loop
in
inc
inc
sahf
jecxz
aad
xlat
inc
inc
inc
inc
fcomp
fcmovu
inc
inc
inc
inc
inc
inc
inc
inc
loopne
loop
jg
sahf
fsub
fdivr
idiv
decl
cltd
cmp
jo
xchg
je
sbb
jnp
int3
inc
sub
out
andl
aam
add
xchg
out
fsub
pop
in
xchg
rcl
shrb
idiv
ljmp
cmp
daa
shlb
and
insl
sbb
pop
push
cmp
push
shlb
loope
in
push
cld
out
sbb
inc
jnp
and
loopne
insl
std
out
nop
sbb
jmp
jle
js
mov
mov
jl
add
and
das
mov
inc
pushf
add
sbb
push
and
adc
xor
jb
les
nop
xor
shlb
jbe
mov
lcall
outsb
cwtl
pusha
lcall
or
xor
dec
adc
mov
inc
adc
clc
cmpxchg
xorb
orl
lds
popl
mov
jo
inc
outsb
jbe
outsl
outsb
xchg
outsb
fistpl
jae
jle
xor
adc
in
or
dec
rclb
mov
add
or
lret
or
popf
or
add
sbb
dec
rol
pop
adc
cmc
mov
add
inc
inc
jle
ja
jbe
jb
jb
stc
pop
dec
outsb
popf
insl
fcom
das
fisubrl
inc
mov
into
add
je
outsl
insb
jae
dec
inc
adc
jo
and
pop
add
jmp
sbb
jne
xchg
and
jl
push
sbb
xor
das
fdivl
add
rolb
fdivs
push
imul
mov
push
insl
xor
clc
xchg
lret
nop
das
dec
xor
xorb
sub
pop
mov
xor
xor
jg
xor
xor
xor
xor
jp
xorl
fdivl
jmp
aaa
mov
xchg
aaa
stos
aaa
cmp
dec
push
cld
call
in
cmp
mov
cmp
cmp
jle
or
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
inc
fiaddl
inc
cmp
push
cmp
sahf
cmp
movsb
cmp
add
xor
add
mov
and
inc
xor
cmp
insb
psllw
mov
call
xor
sarb
or
jb
and
gs
or
push
lock
pop
or
add
push
ret
add
jb
sub
jmp
jo
push
popf
xor
add
add
inc
add
add
pusha
mov
add
pop
insb
rorl
mov
je
and
stos
lahf
jns
pop
adc
mov
add
cld
mov
or
outsb
add
and
arpl
mov
sub
into
in
pop
add
add
adc
nop
fs
add
add
clc
jl
mov
in
push
or
xchg
insb
inc
adc
mov
add
push
xchg
sub
inc
xor
adc
call
push
push
cld
in
enter
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
