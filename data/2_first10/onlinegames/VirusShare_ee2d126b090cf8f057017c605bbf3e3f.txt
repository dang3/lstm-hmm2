mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
add
icebp
dec
add
xor
add
add
add
add
add
imul
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
je
push
cli
stos
pop
mov
push
stc
negb
or
out
lcall
push
ret
sahf
cmp
sahf
std
push
orl
stos
cmp
orb
jmp
je
or
test
fisubrs
sbb
leave
xor
jge
sub
int
adc
lea
jno
stc
pop
mov
rcrb
das
fisubl
sbb
imul
fwait
adc
daa
aam
xchg
sub
sbb
add
ss
outsl
aad
pushf
lock
and
jg
lcall
lock
stos
and
inc
mov
add
push
outsl
xor
js
enter
and
dec
xchg
bound
dec
cs
bound
sbbb
pop
lods
pop
sub
idiv
inc
dec
inc
xchg
cs
mov
xchg
mov
cmp
push
fwait
mov
bnd
dec
dec
rcll
sub
inc
xor
sub
clc
enter
and
xchg
fisubrs
fs
outsl
addl
pop
mov
movsl
fnsave
push
push
mov
xchg
stos
jp
push
add
loope
scas
xor
or
imul
ret
pop
adc
or
inc
icebp
mov
cli
movsb
pop
jge
fsubrs
ljmp
je,pt
mov
or
xchg
mov
call
insl
adcb
cmp
pinsrw
cs
inc
ret
adc
sarl
sbb
test
add
adc
and
mov
dec
xchg
cmpl
push
lcall
mov
addl
jno
jns
aam
push
cli
sub
lock
cmp
nop
xchg
inc
jl
push
xchg
das
dec
mov
xchg
lar
daa
fwait
cmc
fs
filds
adc
xor
push
sbb
test
fldt
.byte
cmpsb
xchg
.byte
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
je
push
cli
stos
pop
mov
push
stc
negb
or
out
lcall
push
ret
sahf
cmp
sahf
std
push
orl
stos
cmp
orb
jmp
je
or
test
fisubrs
sbb
leave
xor
jge
sub
int
adc
lea
jno
stc
pop
mov
rcrb
das
fisubl
sbb
imul
fwait
adc
daa
aam
xchg
sub
sbb
add
ss
outsl
aad
pushf
lock
and
jg
lcall
lock
stos
and
inc
mov
add
push
outsl
xor
js
enter
and
dec
xchg
bound
dec
cs
bound
sbbb
pop
lods
pop
sub
idiv
inc
dec
inc
xchg
cs
mov
xchg
mov
cmp
push
fwait
mov
bnd
dec
dec
rcll
sub
inc
xor
sub
clc
enter
and
xchg
fisubrs
fs
outsl
addl
pop
mov
movsl
fnsave
push
push
mov
xchg
stos
jp
push
add
loope
scas
xor
or
imul
ret
pop
adc
or
inc
icebp
mov
cli
movsb
pop
jge
fsubrs
ljmp
je,pt
mov
or
xchg
mov
call
insl
adcb
cmp
pinsrw
cs
inc
ret
adc
sarl
sbb
test
add
adc
and
mov
dec
xchg
cmpl
push
lcall
mov
addl
jno
jns
aam
push
cli
sub
lock
cmp
nop
xchg
inc
jl
push
xchg
das
dec
mov
xchg
lar
daa
fwait
cmc
fs
filds
adc
xor
push
sbb
test
fldt
add
js
mov
or
sbb
lret
jecxz
jo
and
xlat
dec
fs
mov
jbe
testb
jnp
sbb
inc
cmc
fidivl
jo
ljmp
and
fwait
cmp
sbb
fbstp
inc
sub
into
inc
fcoms
movsb
je
fpatan
movsb
loope
lea
cmp
jbe
pop
jmp
repnz
test
out
jns
sub
fldlg2
dec
mov
mov
insl
lcall
sbb
outsl
jb
hlt
jmp
popf
gs
fs
leave
push
stos
push
sbb
sbb
clc
or
inc
add
cmp
cli
xchg
outsb
pop
in
cld
push
add
aad
mov
mov
dec
sbb
imul
mov
cmp
mov
sub
push
ret
cs
xlat
fucom
repz
cli
or
adc
push
aam
hlt
jmp
cmp
adc
push
mov
lods
push
outsl
mov
xchg
fwait
movsb
cmc
pushf
fldcw
jle
enter
scas
mov
aas
repnz
jl
pop
test
pusha
negl
dec
add
gs
mov
jo
loope
ret
popf
cmp
and
cmpsb
mov
pop
mov
mov
enter
sub
mov
test
cmp
mov
jge
ds
loop
mov
push
lea
adc
mov
dec
filds
xchg
jne
add
lret
rorb
repnz
inc
pop
outsl
shlb
ficoml
ds
out
sub
sarb
js
stos
fs
push
push
xchg
icebp
xor
test
sub
movsl
insb
jno
int
and
ja
push
push
hlt
cs
leave
pusha
popa
push
pushf
push
mov
adcl
lods
insl
fwait
adc
or
xor
ds
mov
ret
xchg
es
push
adc
rcrb
dec
push
cmpsb
jb
fidivl
neg
or
jecxz
push
cli
sti
cwtl
dec
js
push
inc
enter
dec
inc
mov
or
into
mov
mov
popf
jg
pop
test
decb
cmp
idiv
push
pop
jae
mov
rcrb
push
rcr
dec
mov
sbb
iret
lret
aaa
mov
jne
inc
pop
adc
jb
mov
add
and
test
fimull
es
mov
pop
clc
shl
pop
fs
jg
sbb
xchg
out
mov
.byte
.byte
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
je
push
cli
stos
pop
mov
push
stc
negb
or
out
lcall
push
ret
sahf
cmp
sahf
std
push
orl
stos
cmp
orb
jmp
je
or
test
fisubrs
sbb
leave
xor
jge
sub
int
adc
lea
jno
stc
pop
mov
rcrb
das
fisubl
sbb
imul
fwait
adc
daa
aam
xchg
sub
sbb
add
ss
outsl
aad
pushf
lock
and
jg
lcall
lock
stos
and
inc
mov
add
push
outsl
xor
js
enter
and
dec
xchg
bound
dec
cs
bound
sbbb
pop
lods
pop
sub
idiv
inc
dec
inc
xchg
cs
mov
xchg
mov
cmp
push
fwait
mov
bnd
dec
dec
rcll
sub
inc
xor
sub
clc
enter
and
xchg
fisubrs
fs
outsl
addl
pop
mov
movsl
fnsave
push
push
mov
xchg
stos
jp
push
add
loope
scas
xor
or
imul
ret
pop
adc
or
inc
icebp
mov
cli
movsb
pop
jge
fsubrs
ljmp
je,pt
mov
or
xchg
mov
call
insl
adcb
cmp
pinsrw
cs
inc
ret
adc
sarl
sbb
test
add
adc
and
mov
dec
xchg
cmpl
push
lcall
mov
addl
jno
jns
aam
push
cli
sub
lock
cmp
nop
xchg
inc
jl
push
xchg
das
dec
mov
xchg
lar
daa
fwait
cmc
fs
filds
adc
xor
push
sbb
test
fldt
add
js
mov
or
sbb
lret
jecxz
jo
and
xlat
dec
fs
mov
jbe
testb
jnp
sbb
inc
cmc
fidivl
jo
ljmp
and
fwait
cmp
sbb
fbstp
inc
sub
into
inc
fcoms
movsb
je
fpatan
movsb
loope
lea
cmp
jbe
pop
jmp
repnz
test
out
jns
sub
fldlg2
dec
mov
mov
insl
lcall
sbb
outsl
jb
hlt
jmp
popf
gs
fs
leave
push
stos
push
sbb
sbb
clc
or
inc
add
cmp
cli
xchg
outsb
pop
in
cld
push
add
aad
mov
mov
dec
sbb
imul
mov
cmp
mov
sub
push
ret
cs
xlat
fucom
repz
cli
or
adc
push
aam
hlt
jmp
cmp
adc
push
mov
lods
push
outsl
mov
xchg
fwait
movsb
cmc
pushf
fldcw
jle
enter
scas
mov
aas
repnz
jl
pop
test
pusha
negl
dec
add
gs
mov
jo
loope
ret
popf
cmp
and
cmpsb
mov
pop
mov
mov
enter
sub
mov
test
cmp
mov
jge
ds
loop
mov
push
lea
adc
mov
dec
filds
xchg
jne
add
lret
rorb
repnz
inc
pop
outsl
shlb
ficoml
ds
out
sub
sarb
js
stos
fs
push
push
xchg
icebp
xor
test
sub
movsl
insb
jno
int
and
ja
push
push
hlt
cs
leave
pusha
popa
push
pushf
push
mov
adcl
lods
insl
fwait
adc
or
xor
ds
mov
ret
xchg
es
push
adc
rcrb
dec
push
cmpsb
jb
fidivl
neg
or
jecxz
push
cli
sti
cwtl
dec
js
push
inc
enter
dec
inc
mov
or
into
mov
mov
popf
jg
pop
test
decb
cmp
idiv
push
pop
jae
mov
rcrb
push
rcr
dec
mov
sbb
iret
lret
aaa
mov
jne
inc
pop
adc
jb
mov
add
and
test
fimull
es
mov
pop
clc
shl
pop
fs
jg
sbb
xchg
out
mov
andl
xchg
lret
mov
mov
bound
cmp
call
or
add
repnz
addb
push
xor
aam
dec
push
jp
icebp
push
popf
dec
cld
push
dec
sbb
mov
jns
and
sub
int3
cs
sbb
scas
adc
dec
sub
sbb
and
les
pop
pushf
xor
mov
fs
cmp
mov
push
movsl
fidivrs
jge
aaa
dec
mov
lret
bound
lea
test
les
push
rol
mov
push
sub
adc
mov
mov
dec
inc
enter
inc
mov
loope
out
xor
sbb
sbb
cli
mov
movsb
cmp
mov
addb
fnstcw
jge
mov
rcrl
sub
or
cltd
cmp
xor
sar
jns
mov
aam
cld
js
lahf
imul
jae
rclb
pusha
adc
mov
icebp
sbb
xor
sbb
inc
add
push
mov
sbb
addr16
inc
js
inc
push
mov
push
jecxz
bound
mov
fiadds
int
fldl
lahf
icebp
ret
mulb
testl
fimull
mov
xchg
mov
and
pop
xchg
jp
pop
xchg
jo
cs
js
stos
in
dec
les
mov
inc
pop
push
cld
lods
cmpsb
shlb
sbb
xor
xchg
mov
adc
aam
or
push
call
jmp
fwait
sub
inc
dec
out
shrb
repz
sub
pop
mov
je
iret
cmp
mov
inc
adc
shll
mov
add
cli
cmp
xor
std
inc
sbb
outsb
sub
in
adc
rcrb
mov
negb
sbb
ljmp
lret
mov
rcrb
and
jns
add
mov
xorl
lods
ds
mov
mov
and
push
repz
and
cmp
mov
into
push
repz
and
imul
loop
sti
test
xchg
cmp
call
fimull
subb
mov
sub
pop
jp
sahf
mov
bsr
addl
ja
cmp
push
and
mov
mov
mov
test
int
xorb
lcall
out
or
sbb
fistpl
xchg
dec
xchg
mov
ja
scas
out
int
jge
adc
xchg
sbb
sub
pop
inc
and
push
loope
in
test
dec
fs
fisubl
inc
outsb
push
stos
in
out
enter
inc
sbbb
cmp
cmp
add
dec
cmp
std
pop
mov
mov
sub
in
or
aaa
xchg
aad
imul
jnp
or
mov
sub
fisubrl
lds
push
mov
dec
or
mov
sub
mov
mov
xor
mov
mov
mov
inc
fadd
sbb
xchg
mov
rcrl
std
mov
jbe
jno
in
xchg
xchg
or
jle
xor
fisubl
enter
in
int
mov
loope
fnsave
leave
sbb
xor
gs
xchg
scas
pop
cwtl
add
add
popf
sbb
je
lock
arpl
sbb
clc
mov
cmp
jecxz
stos
std
xor
leave
mov
push
add
xchg
push
das
mov
loope
push
dec
rcll
imul
dec
pushf
add
mov
mov
xchg
mov
mov
mov
iret
mov
imul
cmp
mov
aaa
roll
imul
jmp
mov
xchg
je
mov
fisubl
add
xchg
sbb
and
adc
mov
ljmp
divl
xchg
aas
mulps
dec
cmpsl
das
dec
sbb
test
std
jmp
jae
pop
popa
pop
xor
sub
orb
rcll
popa
stc
xchg
mov
inc
jmp
iret
mov
es
aaa
pop
fcomip
sbb
bound
scas
out
lods
xor
inc
sbb
and
bound
ss
mov
add
dec
push
in
xor
lods
sbb
inc
mov
stc
jae
add
cmp
xlat
or
adc
add
sbb
push
fcoms
sub
stos
hlt
lret
gs
popa
mov
mov
or
imul
lret
loop
cli
pop
lea
incl
int3
inc
push
sbb
je
movsl
filds
cmp
push
stos
rcll
clc
sub
mov
cli
mov
bt
mov
add
outsb
xchg
in
xchg
add
mov
jno
sti
in
aad
mov
shlb
addr16
cmp
mov
mov
mov
outsl
movsb
and
notl
sbbl
outsl
or
or
cmp
out
rcl
cltd
add
adc
pop
xchg
lods
jmp
push
sbb
and
mov
scas
aaa
popf
mov
mov
xor
jnp
sub
aaa
rol
sti
pusha
jo
and
ljmp
andb
pop
xchg
cmp
clc
loop
sbb
gs
cmp
inc
push
jecxz
icebp
push
jnp
imul
dec
ljmp
pusha
cmp
in
and
stc
movsb
jns
pop
decb
stos
push
ds
jg
sbb
mov
sbb
scas
call
cld
add
nop
sbb
lret
data16
out
jae
mov
in
mov
bound
push
adc
inc
aam
mov
testl
push
rcrl
test
inc
inc
es
xchg
rsm
fidivl
push
push
mov
es
xor
out
les
ds
push
das
or
xchg
sbb
push
cwtl
int
out
mov
jecxz
int
sub
mov
mov
aas
add
test
gs
test
das
into
push
mov
leave
mov
pop
mov
xchg
cmp
mov
aaa
and
xchg
cs
pop
rolb
jg
jbe
pop
std
adc
adc
in
cld
push
sub
into
jmp
imul
roll
std
dec
sbb
rcrb
dec
pop
out
xchg
test
mov
add
and
repnz
mov
stc
repz
and
xchg
xor
sub
and
or
cli
push
daa
lahf
push
js
push
in
enter
nop
out
pop
mov
or
mov
popa
push
xor
scas
and
addr16
sbb
add
mov
call
sbb
call
sub
cmp
cmc
rclb
mov
xor
push
dec
pop
jo
xlat
daa
or
fwait
xor
data16
mov
adc
push
pop
out
adc
and
ljmp
out
push
daa
jae
lret
outsb
enter
lea
addr16
mov
ds
lods
fwait
mov
xor
pop
push
pushf
jp
sub
sbb
xchg
stc
ret
hlt
jne
jmp
lock
bound
dec
jge
nop
dec
aaa
fsubrl
clc
sarb
jecxz
lcall
cmp
fidivl
dec
mov
stos
cmp
adc
popf
inc
mov
sti
daa
imul
mov
fsubr
adc
lods
sbb
sub
int3
test
ds
xchg
push
xor
xor
fucomp
imull
ret
sbb
dec
add
pop
cmp
pop
out
xor
in
pop
dec
sub
lret
call
cmpsl
int
push
cltd
inc
adc
ret
arpl
ret
push
ret
jb
inc
es
loope
mov
xchg
jle
xchg
mov
sbb
add
add
push
push
add
es
cld
xchg
xchg
adcl
dec
push
into
lods
stc
ss
rcll
dec
dec
sub
daa
cwtl
mov
pusha
pop
mov
adc
push
ss
or
push
or
mov
xchg
cltd
imul
pushf
jle
pusha
inc
push
or
loopne
stc
lea
pop
add
inc
inc
dec
imul
jnp
and
loopne
pop
lea
notb
andb
in
jbe
cmpsl
adc
test
mov
adc
pushl
or
aas
sbb
faddp
push
jbe
dec
jl
insb
mov
in
jmp
imul
iret
mov
sub
rorb
push
shll
ror
pusha
xchg
mov
sbb
adc
repz
addl
push
jb
cmp
in
mov
add
sub
icebp
daa
push
dec
test
std
xchg
aad
cmp
dec
lods
mov
cwtl
bound
dec
mov
out
or
adc
inc
lcall
mov
lret
imul
jle
arpl
pop
cmpsb
adc
sub
jmp
mov
mov
adc
and
scas
add
aas
xchg
xchg
and
xchg
pop
pop
add
inc
enter
dec
jmp
adc
mov
popa
adc
lret
sahf
out
cmp
test
jnp
dec
cltd
jnp
cld
add
mov
or
sbb
cmp
or
cmp
out
push
xchg
xchg
out
mov
mov
push
cmp
sbb
imul
testl
push
jbe
stc
push
dec
addb
std
cmp
je
jecxz
xor
pop
in
mov
add
ret
popf
daa
out
lock
std
daa
inc
push
mov
test
xor
mov
sub
andb
mov
mov
mov
sub
insb
or
cmc
scas
ret
hlt
shrl
adc
rolb
mov
add
nop
push
cmpsl
int3
adc
mov
sub
popa
xchg
mov
push
les
ret
push
ja
jbe
mov
or
dec
sub
rcl
xchg
cmpsb
arpl
mov
and
aad
jp
jb
and
leave
xor
fcmovu
shl
cs
add
pop
jno
ret
push
pusha
inc
and
fs
inc
push
iret
aam
dec
push
in
int3
fwait
cmc
repz
pop
hlt
adc
fisttpl
inc
stos
aad
cmp
push
jecxz
sub
dec
cmc
in
jns
xorb
jecxz
enter
mov
pushf
xor
fcomip
js
add
sti
jb
adc
adc
push
inc
mov
mov
mov
xor
test
or
outsb
jmp
mov
out
outsb
add
cmpsl
add
inc
test
dec
cli
lods
ss
movsb
fiaddl
adc
shrb
cmpb
and
cmpl
popa
mov
popf
xor
popf
cs
jmp
mov
mov
stos
sub
inc
mov
out
stos
cltd
sbb
inc
movsl
iret
lahf
jl
cmp
xchg
pop
call
xor
xor
fsub
mov
shll
mov
or
lahf
mov
outsl
xor
test
xor
pop
in
push
mov
jnp
incl
xchg
stos
mov
test
into
xor
sbb
out
aas
sbb
add
dec
je
out
jo
jp
dec
jo
xchg
jmp
cmc
or
sbb
insb
push
fcomi
push
and
xor
or
sub
or
cli
pop
movsbl
mov
dec
insl
adc
sub
test
out
aam
jne
stos
stos
mov
mov
aaa
or
outsl
mov
add
cld
xchg
loope
sub
xchg
jne
shl
mov
cmp
sbb
xor
cmp
inc
inc
in
add
and
cli
je
add
scas
jge
dec
test
and
sub
shrb
leave
mov
fsubr
jnp
and
mov
scas
loopne
push
ficomps
push
lods
addr16
mov
les
add
shll
xor
notb
mov
lret
cmp
xchg
push
jecxz
xchg
jle
fisttps
mov
or
les
iret
xor
mov
pusha
out
inc
lret
loopne
inc
sbb
xor
sub
push
rcl
loop
xor
scas
std
inc
push
mov
pop
sbb
sbb
xor
into
xchg
mov
cmp
adc
sub
cmpsb
mov
aas
dec
xor
test
push
mov
and
push
cmpl
cltd
inc
xor
adc
push
mov
das
movsb
xor
jp
loope
push
push
pop
cs
push
aam
cmpsl
clc
inc
push
sbbl
inc
mov
icebp
and
aad
arpl
mov
adc
pop
pop
mov
aam
popa
cli
sahf
cmc
cs
loop
loopne
dec
test
scas
das
je
xor
repz
fst
mov
scas
mov
sub
cmc
popa
adc
dec
or
push
cmp
cmc
stos
xchg
sub
mov
sub
outsb
movsl
mov
mov
addb
jmp
or
ret
or
mov
std
pop
xchg
push
mov
jns
inc
inc
dec
pop
mov
add
out
insl
fcoml
xor
mov
int
adc
mov
scas
test
loop
cli
cmp
xor
mov
out
jl
inc
sbb
in
jb
dec
in
rcll
cld
fisubl
ds
loopne
jmp
and
push
out
insb
test
dec
sbb
pop
fucomi
cmp
adc
jnp
pop
xor
shl
xor
inc
dec
hlt
pushf
lea
cmpsl
popf
xchg
pop
xadd
movsb
int
cld
es
and
sbb
sbb
pusha
inc
aad
jecxz
insl
add
arpl
mov
fsubr
mov
push
pop
jmp
rcrb
shr
jne
cmp
jmp
pop
rclb
std
icebp
insl
and
jmp
in
test
addr16
mov
push
jg
out
repnz
inc
adc
scas
jp
imul
es
mov
jne
and
sbb
pushf
push
mov
shrl
pop
xchg
cmp
jecxz
enter
xor
or
sub
push
mov
dec
mov
mov
xchg
dec
les
lret
cmp
fwait
dec
push
sub
push
or
ljmp
jns
outsl
pushf
bound
cmp
clc
popfw
inc
mov
adc
mov
adc
inc
jle
out
pusha
dec
sti
ljmp
arpl
sub
movsl
cltd
js
push
xchg
mov
nop
push
add
dec
out
lea
fiadds
scas
pop
mov
adc
push
jb
inc
cwtl
and
mov
scas
push
dec
mov
lret
sub
xchg
mov
xor
add
cmp
inc
insl
cmp
cmp
loopne
lret
or
ficoms
xchg
mov
lahf
sbb
notl
ret
pop
aam
call
push
cmpsl
fsubr
jns
aaa
pop
pop
adc
nop
pusha
or
cmp
ret
es
test
aad
push
xchg
mov
xor
jne
fld1
add
add
repz
inc
xchg
hlt
imull
push
add
pop
sub
and
inc
fldcw
cli
popa
popf
lahf
arpl
adc
les
and
xor
jo
fwait
stos
adc
cmpsb
sub
call
dec
jae
out
clc
scas
xorb
lea
add
mov
mov
jecxz
push
pusha
pop
outsl
insl
inc
imul
arpl
sub
movl
xor
push
inc
inc
jnp,pt
out
icebp
jno
adc
xchg
xor
adc
ss
inc
aam
out
pop
aam
sahf
cmc
in
jnp,pn
ljmp
adc
stos
adc
xor
icebp
add
push
and
or
out
pop
aam
orb
lahf
inc
inc
daa
cmp
mov
sti
subl
push
in
inc
sbb
ss
mov
xchg
xchg
ds
mov
pushf
jnp
mov
je
ficoms
inc
push
sub
jecxz
cwtl
sahf
sbb
in
arpl
nop
xor
cs
jns
jle
mov
js
xor
int
cmp
js
or
and
cld
daa
call
push
fs
stos
push
fs
data16
adc
dec
xor
lcall
insl
adc
sub
pop
or
jmp
mov
jl
ljmp
mov
repnz
int
popa
arpl
cmp
lock
push
push
sub
xlat
stos
adc
stc
outsl
test
xorb
xor
fcmovb
cwtl
xchg
xor
ljmp
dec
sub
fs
mov
and
mov
dec
mov
repnz
jno
aad
or
xchg
jbe
mov
or
push
mov
sbb
add
push
inc
push
or
movsl
jmp
pop
push
arpl
sub
test
std
cs
lahf
xchg
and
xchg
mov
adc
or
sub
fsubl
sbbl
pop
andl
lret
push
fstl
scas
xchg
dec
xor
dec
in
sub
pop
lds
lds
push
pop
mov
pop
clc
sub
pop
pop
scas
adc
and
fadd
test
test
xchg
cmp
sub
mov
es
test
outsl
cltd
jno
repz
bound
dec
dec
or
out
sbb
in
pcmpgtd
movsb
jmp
test
dec
icebp
pop
std
jl
or
cmp
insl
gs
mov
sub
fisttps
or
push
rclb
inc
sbb
push
or
cmpsl
xchg
adc
jo
mov
popf
js
mov
mov
sbbb
dec
jle
faddp
inc
dec
xchg
ret
mov
xchg
mov
cmc
xchg
mov
adc
arpl
loop
lret
outsl
mov
repnz
clc
and
out
ret
sbb
jbe
addr16
xchg
xchg
call
popf
pop
mull
dec
cli
repz
and
sbb
and
and
loope,pn
mov
mov
jmp
mov
adcb
adcb
js
lcall
aas
popa
lahf
lock
dec
inc
ljmp
add
pop
data16
inc
mov
push
daa
loopne
cmp
data16
ret
test
dec
xor
ja
pop
xchg
cs
xor
cmc
ret
pop
lret
lods
lea
fwait
sbb
xchg
lods
movsl
imul
jp
mov
imul
cmp
icebp
mov
inc
cmpsb
add
repnz
inc
inc
test
jns
mov
les
mov
jp
call
lods
mov
lock
icebp
aad
addr16
sub
add
mov
jecxz
adc
mov
sti
test
fidivrl
cwtl
decl
mov
popa
mov
lea
lods
inc
movsb
hlt
adc
gs
mov
inc
movb
or
push
adc
inc
jb
jne
xchg
fcoms
aad
push
mov
jle
pop
lds
cwtl
orl
loope
pop
imul
push
jecxz
jnp
loop
dec
hlt
mov
cmpsl
jb
sub
dec
fidivrs
into
jp
fsub
mov
pop
xor
cld
cs
jge
outsl
pop
repz
sbb
and
inc
dec
inc
in
cmp
bound
into
mov
rolb
adc
stos
pop
sbb
shrb
lret
fsubp
ss
jmp
xchg
xchg
inc
sub
scas
mov
push
pop
sub
stc
cmp
mov
pop
dec
rcrl
xchg
jp
loop
adc
ds
mov
xchg
xor
test
fdivrs
inc
jmp
dec
int3
fs
add
inc
sbb
fadds
xor
jg
dec
mov
repnz
xchg
out
cld
push
addr16
xchg
cwtl
mov
and
adc
data16
mov
out
pop
cmp
cli
out
add
mov
sub
shlb
dec
mov
cmp
pusha
jo
lret
add
pop
js
cltd
pop
popw
jo
test
dec
cmc
in
xor
adc
xor
pop
aad
jns
cmp
sub
subl
lret
loope
leave
fmuls
dec
insb
dec
jp
rcrb
push
push
loop
lcall
popf
jp
shl
xor
hlt
movsl
dec
sarb
je
loope
inc
insl
or
mov
sbb
jne
ja
std
gs
jmp
xchg
das
lock
jl
sbbb
and
jns
mov
pop
scas
mov
in
leave
imul
int
push
loop
mov
pop
fists
sti
pop
xchg
into
jns
fadds
mov
inc
cld
sarb
pop
push
and
sbb
push
rolb
add
push
pop
adc
lahf
cmpsl
pop
xchg
pop
sbb
sbb
pavgb
test
fcmovbe
hlt
or
cld
aaa
cmp
mov
fidivl
xchg
xor
addb
jle
stos
mov
test
mov
ja
pop
mov
push
add
popa
jae
push
xorl
mov
call
mov
scas
mov
loopne
adc
roll
cwtl
enter
adc
mov
cmp
jle
lods
push
sbb
pop
iret
mov
xchg
push
insl
dec
mov
xchg
addr16
stc
shll
iret
pop
leave
lods
outsl
xor
cwtl
cmc
or
test
popa
xchg
das
jb
int3
push
cmp
pop
or
arpl
out
les
jg
stc
xor
bound
xchg
les
pop
dec
jne
stos
test
mov
add
cld
js
out
js
jo
pop
cmp
aad
test
pushf
and
jnp
outsb
mov
enter
stc
dec
adc
xchg
pusha
in
dec
je
sbb
ds
sbb
cltd
xchg
ficoms
addr16
mov
inc
testb
push
out
cmp
fstpt
outsl
ret
scas
aad
mov
sub
and
jns
inc
push
mov
pop
mov
ret
inc
stos
or
xchg
pop
cmpsl
sub
cmp
fldcw
int
xor
dec
mov
xlat
jge
mov
or
dec
sub
sahf
in
ljmp
movsb
sbb
mov
pop
sub
outsb
es
xchg
mov
push
pop
jp
fidivrs
repnz
pop
add
cmp
pop
out
aaa
arpl
movsb
pushf
int
mov
add
or
add
dec
xchg
fnsave
sub
add
sbb
cmpsb
and
add
pop
mov
loop
sub
in
iret
fld
mov
sahf
and
test
in
jae
sub
add
insb
inc
std
cwtl
mov
out
mov
pop
in
dec
or
sbb
mov
lea
lahf
push
mov
fldcw
push
and
cli
mov
mov
jmp
mov
movsb
fs
lret
in
or
out
mov
ss
add
sbb
lea
dec
xor
adc
popf
bound
adc
enter
je
mov
aad
iret
into
sub
mov
mov
subb
punpcklwd
pop
or
fistpll
and
mov
pop
test
sub
insb
dec
and
jne
mull
or
movb
add
lods
loop
sub
xor
popa
icebp
xchg
frstor
cmpsb
cmpsl
pusha
mov
mov
leave
mov
repz
mov
pop
push
push
mov
inc
mov
mov
jecxz
sub
dec
fldl
je
pop
fldenv
outsb
push
stc
xchg
jb
mov
int
mov
iret
push
xor
lock
mov
pop
call
inc
push
lcall
lds
std
pop
cmpl
adcb
stos
sbb
inc
sbb
push
xor
cltd
dec
mov
mov
mov
cwtl
dec
mov
xlat
dec
add
shrb
jb
mov
call
repz
in
orb
inc
xor
dec
push
mov
rolb
jnp
mov
in
repnz
mov
fstpt
addr16
dec
push
lret
test
pusha
jnp
cmpb
pop
xlat
fwait
xor
clc
sbb
mov
mov
out
cmp
inc
sbb
cld
adc
pop
dec
push
jno
and
ljmp
js
xor
fdivs
outsl
mov
pop
lcall
jecxz
lea
push
fs
rcrl
stos
or
test
mov
xchg
mov
cmpsl
out
sahf
imul
scas
push
and
dec
or
shll
cmpl
push
cmp
mov
jnp
dec
iret
dec
dec
adc
imul
fs
cltd
lahf
out
lcall
fucomip
fldcw
dec
cmp
jmp
repnz
dec
adcl
scas
add
pop
xchg
mov
lock
andb
and
jae
jecxz
add
pop
fidivrs
insb
cs
and
ss
push
inc
mov
stc
mov
mov
cmpl
popf
iret
mov
ret
and
sahf
lahf
or
adc
lret
call
pusha
mov
cmc
negl
mov
mov
mov
pop
or
movsl
out
sbb
js
push
rcrl
mov
cmp
les
push
dec
sbb
daa
out
mov
adc
ds
dec
std
sub
sbbb
sub
pushf
sub
pop
outsb
adc
sbb
add
adc
xchg
lds
shlb
or
pop
outsl
mov
loope
popf
add
adc
jo
pushf
mov
repnz
push
enter
sub
sub
ret
sub
sbb
cmpsb
xor
xor
cmp
xchg
mov
lock
test
mov
iret
stos
pop
test
push
stos
mov
int3
cltd
int3
or
dec
sub
push
out
jnp
and
pop
lock
add
fstpl
mov
iret
pop
add
or
ret
test
jl
xor
stos
cltd
pop
cwtl
adc
adc
sub
aad
bound
or
or
enter
xor
xchg
aaa
popa
or
jle
adc
sti
les
sub
mov
mov
or
aaa
push
call
inc
fldenv
daa
stos
clc
das
push
dec
push
add
test
jmp
in
mov
xor
push
leave
fmuls
xchg
mov
inc
fldenv
stc
cmpsl
and
push
cmp
imul
popa
repnz
mov
int3
test
dec
int
adc
cld
imul
dec
hlt
push
dec
cmc
ret
lods
inc
aaa
and
out
lods
xor
sarl
adc
inc
push
arpl
int
push
xchg
xlat
mov
xor
in
mov
jno
pushf
call
adc
adc
mov
xorl
aam
mov
loopne
xchg
jnp
ljmp
mov
mov
leave
xchg
push
pop
aam
mov
xchg
xchg
sub
adc
mov
sub
repz
push
push
bound
xor
shrl
inc
pop
loopne
enter
jo
add
jle
sar
push
jae
sbb
cltd
fisttpll
adc
sub
cmp
xchg
add
pop
adc
jp
cld
or
mov
sbb
in
mov
push
inc
popa
into
in
je
adc
int3
dec
pop
mov
out
cmp
leave
cld
push
aad
mov
mov
dec
dec
psubsb
adc
push
mov
xor
jp
adc
test
adc
add
sbbl
lea
pop
or
jns
mov
mov
mov
push
add
outsl
mov
ret
push
mov
fsubrl
inc
sub
or
mov
sbb
dec
sub
sub
sub
mov
push
out
lods
or
xchg
arpl
add
decb
push
les
int
cltd
sub
mov
cmpsb
fiadds
lret
lock
aaa
inc
mov
scas
andl
icebp
aam
xchg
jecxz
daa
mov
and
int3
call
fistpl
jbe
mov
pushl
aas
push
inc
mov
mov
xchg
shrb
dec
mov
loop,pn
repz
arpl
or
shr
fcomps
inc
outsb
enter
cmp
ds
and
fwait
aas
cld
leave
adc
sbb
sbb
jae
in
fsub
arpl
push
adc
movsl
jns
flds
pop
cmp
and
pusha
mov
cltd
fbld
dec
sub
scas
sub
bound
mov
cmp
cmpsb
xor
mov
andl
loop
lds
or
or
jmp
movaps
adc
cmp
inc
jecxz
cmp
or
xlat
jg
call
roll
jb
xchg
andl
or
jb
fidivs
in
add
jp
pushf
in
je
nop
daa
shll
push
rcrl
xor
scas
jecxz
sub
sub
loop
sbb
xor
inc
imul
enter
pop
arpl
mov
lcall
fistpll
inc
and
arpl
out
int
mov
js
pop
icebp
mov
je
test
add
mov
dec
lahf
stc
mov
mov
xchg
cmp
fistpl
mov
xchg
loop
sub
mov
inc
jnp
xchg
loope
sub
xchg
nop
loope,pt
cmp
clc
sti
fxch
fldl
psubq
rorl
mov
out
or
std
and
and
cmp
popa
inc
ss
mov
call
lar
aaa
aam
sbb
xor
jmp
mov
push
sahf
std
xchg
popf
push
insb
sub
aas
mov
sbb
sub
loopne
push
aaa
mov
inc
inc
imul
inc
mov
fdivp
mov
lretw
icebp
mov
into
jne
out
adc
iret
aaa
xor
test
cmpsb
add
test
push
cmp
pop
add
sub
std
lods
push
xchg
dec
push
or
ja
jae
jg
xchg
dec
cld
cmp
mov
add
out
pop
test
cmp
mov
xchg
inc
dec
sub
push
adc
roll
mov
in
pop
fucom
mov
pop
int
sbb
in
xchg
cli
movsl
inc
out
in
xchg
mov
mov
int3
cmc
lods
cmpsl
sub
das
cmp
stos
mov
mov
cs
or
rclb
sub
repnz
dec
cld
popa
jl
mov
lock
cs
outsb
push
xchg
push
pushf
scas
sub
jo
ret
push
mov
dec
leave
stos
adc
or
out
and
pop
cs
ffreep
mov
add
lods
int3
fs
icebp
adc
jb
clc
fldt
outsl
out
out
fwait
jg
jb
popa
mov
cmc
int3
test
mov
negl
cmp
shlb
ret
dec
dec
mov
nop
push
add
clc
mov
mov
xor
ret
mov
and
nop
rcl
xlat
or
stc
arpl
fisttps
sbb
push
add
and
adc
jae
pushf
sub
test
jns
mov
xchg
sbb
add
jge
cmp
imul
sub
fnstenv
mov
mov
movb
xor
mov
outsb
scas
stos
xchg
out
fdivrs
fs
adc
hlt
xor
gs
imul
inc
add
lahf
jle
pop
push
pop
pop
dec
sub
mov
sbb
jg
or
and
fstps
dec
push
out
sbb
or
xchg
xlat
jbe
add
push
dec
jp
dec
insl
inc
js
ds
pop
inc
cld
rclb
cmpsl
push
stos
rcl
movsb
in
dec
and
ret
jmp
sbbl
and
mov
imul
dec
sti
mov
mov
jmp
push
out
scas
sub
repz
sbb
jl
inc
cld
mov
cmp
in
mov
enter
push
jg
in
jmp
std
aad
xchg
shrb
sbb
test
jg
fwait
enter
movsb
dec
call
vfmsub132sd
imul
sbb
pushf
ret
fnstsw
rol
inc
in
ret
mov
subb
pop
out
hlt
btcl
inc
inc
std
cmp
ljmp
sub
jnp
lds
mov
mov
mov
dec
shrl
adc
inc
sub
and
aam
push
and
jnp
jae
mov
mov
or
jmp
inc
fwait
dec
add
and
test
imul
out
mov
xchg
push
jl
js
mov
cmp
repnz
xor
mov
int
roll
dec
add
repnz
ret
mov
push
pushf
popa
jbe
inc
push
inc
xchg
shll
bnd
sbb
cld
lret
fs
cmpps
dec
mov
add
adc
dec
mov
lret
inc
fcompl
dec
inc
inc
xor
add
loopne
aam
stos
jo
lret
cmp
fmul
mov
test
addr16
mov
cmpsb
lahf
loop
ljmp
jbe
push
adc
mov
dec
or
or
ds
into
in
pop
sub
std
daa
je
dec
pop
iret
and
int3
cmp
arpl
cmp
cmpsl
andl
fisttpl
icebp
mov
jecxz
ret
jp
movl
pop
in
xchg
repz
jle
sub
xchg
cltd
mov
int
mov
out
aam
pop
sbb
jle
xor
push
mov
sub
jmp
outsl
add
mov
or
jo
btc
xor
fs
cmp
push
adc
xor
in
mov
push
xchg
fdivrp
and
xchg
or
lds
test
addr16
and
fisttps
fcmovnu
add
or
cld
enter
movsb
ljmp
or
call
jo
or
xlat
sub
shll
dec
xor
cs
add
mov
leave
and
aam
jmp
adc
push
aam
sub
popa
xor
jle
sahf
mov
mov
mov
mov
out
ljmp
orb
scas
in
icebp
xchg
mov
cmc
test
shl
sub
and
or
mov
or
or
xor
fnstcw
xor
sbb
jp
lret
inc
push
and
dec
mov
pop
loopne
shlb
cmp
cmp
ror
mov
jmp
shlb
sub
cmp
xor
jmp
aam
sahf
xchg
lds
cmp
mov
or
test
push
lret
push
cmp
vpminsw
add
ljmp
ret
or
and
das
sti
jnp
inc
mov
in
push
mov
clc
and
push
data16
sbb
popf
jge
sub
cmp
and
pop
mov
leave
fcomip
rcrb
sub
inc
andl
xchg
mov
pop
imul
push
addr16
int
mov
jo,pt
es
and
lret
shl
sbb
ss
addr16
push
unpcklps
inc
or
cld
scas
mov
xorl
xor
and
jbe
mov
and
dec
mov
pop
lods
hlt
out
pop
pushf
testb
in
scas
aaa
xchg
pop
sbb
mov
leave
push
lcall
add
inc
test
test
pop
push
cwtl
pop
bnd
jae
mov
loope
fiadds
scas
add
and
xchg
in
in
inc
cmp
outsb
pop
pmulhuw
mov
xor
jns
inc
mov
aad
iret
adc
and
xor
sbb
add
and
js
stos
jmp
add
jns
push
adc
jb
testl
les
je
jnp
mov
addr16
arpl
inc
pop
imul
push
mov
add
xchg
in
mov
movsl
cmp
out
stos
push
mov
push
pop
lret
sarl
sbb
or
cwtl
add
mov
orb
mov
mov
in
sub
movsl
rcrb
fisttps
cmp
lods
or
loope
lock
cmp
bound
in
xor
pop
pusha
or
or
mov
adc
ror
test
or
xchg
xor
ds
lret
insb
testl
lea
xor
inc
add
test
push
xchg
outsb
dec
xchg
je
stc
jb
jae
shlb
enter
lock
divl
sbb
dec
cs
xor
enter
push
and
push
fcmovne
out
xchg
in
lock
add
push
fdivrl
out
pop
or
dec
push
jmp
mov
mov
mov
xchg
scas
test
rcl
stos
loope
jge
fildl
insl
clc
add
jle
push
add
inc
in
dec
outsb
dec
in
je
enter
dec
movsb
mov
sbb
add
push
push
pop
rcll
mov
mov
loope
dec
jge
movsb
ljmp
push
push
mov
pop
xchg
movsb
mov
movsl
movl
cwtl
and
aad
fwait
add
add
xchg
scas
mov
pop
and
or
jl
push
int
test
popa
add
hlt
cmp
mov
out
mov
loop
cmp
out
out
scas
sbb
sbb
and
jg
lcall
pop
sbb
mov
les
repnz
inc
push
jmp
xchg
xchg
test
orb
ret
or
roll
xor
mov
jmp
or
dec
pop
mov
shlb
cmp
in
jo
push
push
xchg
out
add
stc
xchg
mov
push
cmp
xorb
cmp
mov
mov
push
dec
je
jmp
sub
dec
xchg
pushf
movsb
dec
cmp
jns
mov
fcoml
push
mov
jmp
cli
daa
or
sbb
sbb
insl
hlt
cmpsl
test
cmpsb
push
repz
lcall
lods
add
xchg
adc
jecxz
xor
sub
in
daa
test
stos
dec
jg
dec
rcrl
mov
loopne
ljmp
sbb
mov
inc
jo
pop
repz
cmp
dec
jmp
scas
xor
loopne
sub
mov
xor
sbb
dec
aad
push
sub
pop
sbb
xchg
xlat
outsb
mov
ds
pop
std
xchg
sbb
imul
sti
jge
dec
mov
mov
test
fimuls
xchg
mov
or
cmp
lret
jge
repnz
dec
add
out
cwtl
adc
mov
dec
stc
mov
aaa
mov
mov
test
mov
mov
sbb
add
pop
or
aaa
dec
loop
lahf
push
clc
push
adc
push
stos
jge,pt
dec
leave
xchg
add
shlb
or
outsl
sbb
popa
negl
lahf
jno
push
add
mov
ret
jo
mov
test
xchg
pop
ds
cmp
btr
pushf
or
jbe
popa
sub
sub
nop
xlat
icebp
outsl
push
inc
lcall
aad
ss
mov
imul
std
sbb
imul
test
inc
add
aas
and
testb
lahf
jae
mov
pop
int
adc
je
daa
or
cltd
ds
and
ret
out
lods
fwait
clc
cs
and
jae
sarb
mov
sahf
dec
das
outsl
in
and
xlat
imul
mov
push
in
inc
std
loope
jl
xchg
or
adc
pop
xor
arpl
and
ds
mov
adc
scas
ljmp
cmc
lahf
pop
shlb
js
outsb
bound
sbb
insl
sbb
push
sti
lret
xor
sbb
insl
jne
lock
dec
out
cmp
or
cmp
and
sub
notb
scas
xor
pop
pop
fstpt
inc
add
dec
sub
rcl
lret
jo
leave
stc
pop
loop
inc
test
aam
adc
inc
insb
nop
mull
aas
or
mulb
popf
mov
fisttps
enter
idivb
fstpt
push
cmp
and
ret
push
lea
or
push
in
test
lahf
push
mov
fs
testl
push
test
in
ds
hlt
dec
inc
cmpsb
pop
jmp
stos
sub
enter
sub
xor
rcrl
xor
cmp
or
inc
jns
cmp
jnp
dec
insl
dec
rcrb
mov
out
cmc
fcoml
aaa
push
mov
xchg
or
lods
popa
inc
movsl
movsb
sub
pop
pop
scas
sub
xor
addl
push
xor
cmpsl
pop
xchg
mov
xchg
sbb
repz
aas
mov
mov
lcall
test
scas
movq
adc
push
sbb
ds
push
js
and
adc
out
jg
xor
aad
out
fcoms
cmp
mov
cltd
out
jno
rcll
mov
dec
mov
stc
out
mov
aaa
ja
adc
lock
lods
inc
mov
inc
xchg
or
inc
lahf
jno
push
mov
mov
push
shll
and
adc
mov
rcrl
push
add
movsb
ds
adc
pop
jno
add
pop
les
xchg
xor
mov
dec
mov
test
jle
scas
push
mov
or
push
cmp
mov
testb
es
pushf
je
test
je
adc
rcl
mov
ss
sbb
push
sub
nop
inc
push
in
stos
negb
fwait
sub
cmp
ja
aaa
data16
fwait
outsl
jno
jno
adc
into
leave
sub
rclb
mov
.byte
mov
.byte
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
je
push
cli
stos
pop
mov
push
stc
negb
or
out
lcall
push
ret
sahf
cmp
sahf
std
push
orl
stos
cmp
orb
jmp
je
or
test
fisubrs
sbb
leave
xor
jge
sub
int
adc
lea
jno
stc
pop
mov
rcrb
das
fisubl
sbb
imul
fwait
adc
daa
aam
xchg
sub
sbb
add
ss
outsl
aad
pushf
lock
and
jg
lcall
lock
stos
and
inc
mov
add
push
outsl
xor
js
enter
and
dec
xchg
bound
dec
cs
bound
sbbb
pop
lods
pop
sub
idiv
inc
dec
inc
xchg
cs
mov
xchg
mov
cmp
push
fwait
mov
bnd
dec
dec
rcll
sub
inc
xor
sub
clc
enter
and
xchg
fisubrs
fs
outsl
addl
pop
mov
movsl
fnsave
push
push
mov
xchg
stos
jp
push
add
loope
scas
xor
or
imul
ret
pop
adc
or
inc
icebp
mov
cli
movsb
pop
jge
fsubrs
ljmp
je,pt
mov
or
xchg
mov
call
insl
adcb
cmp
pinsrw
cs
inc
ret
adc
sarl
sbb
test
add
adc
and
mov
dec
xchg
cmpl
push
lcall
mov
addl
jno
jns
aam
push
cli
sub
lock
cmp
nop
xchg
inc
jl
push
xchg
das
dec
mov
xchg
lar
daa
fwait
cmc
fs
filds
adc
xor
push
sbb
test
fldt
add
js
mov
or
sbb
lret
jecxz
jo
and
xlat
dec
fs
mov
jbe
testb
jnp
sbb
inc
cmc
fidivl
jo
ljmp
and
fwait
cmp
sbb
fbstp
inc
sub
into
inc
fcoms
movsb
je
fpatan
movsb
loope
lea
cmp
jbe
pop
jmp
repnz
test
out
jns
sub
fldlg2
dec
mov
mov
insl
lcall
sbb
outsl
jb
hlt
jmp
popf
gs
fs
leave
push
stos
push
sbb
sbb
clc
or
inc
add
cmp
cli
xchg
outsb
pop
in
cld
push
add
aad
mov
mov
dec
sbb
imul
mov
cmp
mov
sub
push
ret
cs
xlat
fucom
repz
cli
or
adc
push
aam
hlt
jmp
cmp
adc
push
mov
lods
push
outsl
mov
xchg
fwait
movsb
cmc
pushf
fldcw
jle
enter
scas
mov
aas
repnz
jl
pop
test
pusha
negl
dec
add
gs
mov
jo
loope
ret
popf
cmp
and
cmpsb
mov
pop
mov
mov
enter
sub
mov
test
cmp
mov
jge
ds
loop
mov
push
lea
adc
mov
dec
filds
xchg
jne
add
lret
rorb
repnz
inc
pop
outsl
shlb
ficoml
ds
out
sub
sarb
js
stos
fs
push
push
xchg
icebp
xor
test
sub
movsl
insb
jno
int
and
ja
push
push
hlt
cs
leave
pusha
popa
push
pushf
push
mov
adcl
lods
insl
fwait
adc
or
xor
ds
mov
ret
xchg
es
push
adc
rcrb
dec
push
cmpsb
jb
fidivl
neg
or
jecxz
push
cli
sti
cwtl
dec
js
push
inc
enter
dec
inc
mov
or
into
mov
mov
popf
jg
pop
test
decb
cmp
idiv
push
pop
jae
mov
rcrb
push
rcr
dec
mov
sbb
iret
lret
aaa
mov
jne
inc
pop
adc
jb
mov
add
and
test
fimull
es
mov
pop
clc
shl
pop
fs
jg
sbb
xchg
out
mov
andl
xchg
lret
mov
mov
bound
cmp
call
or
add
repnz
addb
push
xor
aam
dec
push
jp
icebp
push
popf
dec
cld
push
dec
sbb
mov
jns
and
sub
int3
cs
sbb
scas
adc
dec
sub
sbb
and
les
pop
pushf
xor
mov
fs
cmp
mov
push
movsl
fidivrs
jge
aaa
dec
mov
lret
bound
lea
test
les
push
rol
mov
push
sub
adc
mov
mov
dec
inc
enter
inc
mov
loope
out
xor
sbb
sbb
cli
mov
movsb
cmp
mov
addb
fnstcw
jge
mov
rcrl
sub
or
cltd
cmp
xor
sar
jns
mov
aam
cld
js
lahf
imul
jae
rclb
pusha
adc
mov
icebp
sbb
xor
sbb
inc
add
push
mov
sbb
addr16
inc
js
inc
push
mov
push
jecxz
bound
mov
fiadds
int
fldl
lahf
icebp
ret
mulb
testl
fimull
mov
xchg
mov
and
pop
xchg
jp
pop
xchg
jo
cs
js
stos
in
dec
les
mov
inc
pop
push
cld
lods
cmpsb
shlb
sbb
xor
xchg
mov
adc
aam
or
push
call
jmp
fwait
sub
inc
dec
out
shrb
repz
sub
pop
mov
je
iret
cmp
mov
inc
adc
shll
mov
add
cli
cmp
xor
std
inc
sbb
outsb
sub
in
adc
rcrb
mov
negb
sbb
ljmp
lret
mov
rcrb
and
jns
add
mov
xorl
lods
ds
mov
mov
and
push
repz
and
cmp
mov
into
push
repz
and
imul
loop
sti
test
xchg
cmp
call
fimull
subb
mov
sub
pop
jp
sahf
mov
bsr
addl
ja
cmp
push
and
mov
mov
mov
test
int
xorb
lcall
out
or
sbb
fistpl
xchg
dec
xchg
mov
ja
scas
out
int
jge
adc
xchg
sbb
sub
pop
inc
and
push
loope
in
test
dec
fs
fisubl
inc
outsb
push
stos
in
out
enter
inc
sbbb
cmp
cmp
add
dec
cmp
std
pop
mov
mov
sub
in
or
aaa
xchg
aad
imul
jnp
or
mov
sub
fisubrl
lds
push
mov
dec
or
mov
sub
mov
mov
xor
mov
mov
mov
inc
fadd
sbb
xchg
mov
rcrl
std
mov
jbe
jno
in
xchg
xchg
or
jle
xor
fisubl
enter
in
int
mov
loope
fnsave
leave
sbb
xor
gs
xchg
scas
pop
cwtl
add
add
popf
sbb
je
lock
arpl
sbb
clc
mov
cmp
jecxz
stos
std
xor
leave
mov
push
add
xchg
push
das
mov
loope
push
dec
rcll
imul
dec
pushf
add
mov
mov
xchg
mov
mov
mov
iret
mov
imul
cmp
mov
aaa
roll
imul
jmp
mov
xchg
je
mov
fisubl
add
xchg
sbb
and
adc
mov
ljmp
divl
xchg
aas
mulps
dec
cmpsl
das
dec
sbb
test
std
jmp
jae
pop
popa
pop
xor
sub
orb
rcll
popa
stc
xchg
mov
inc
jmp
iret
mov
es
aaa
pop
fcomip
sbb
bound
scas
out
lods
xor
inc
sbb
and
bound
ss
mov
add
dec
push
in
xor
lods
sbb
inc
mov
stc
jae
add
cmp
xlat
or
adc
add
sbb
push
fcoms
sub
stos
hlt
lret
gs
popa
mov
mov
or
imul
lret
loop
cli
pop
lea
incl
int3
inc
push
sbb
je
movsl
filds
cmp
push
stos
rcll
clc
sub
mov
cli
mov
bt
mov
add
outsb
xchg
in
xchg
add
mov
jno
sti
in
aad
mov
shlb
addr16
cmp
mov
mov
mov
outsl
movsb
and
notl
sbbl
outsl
or
or
cmp
out
rcl
cltd
add
adc
pop
xchg
lods
jmp
push
sbb
and
mov
scas
aaa
popf
mov
mov
xor
jnp
sub
aaa
rol
sti
pusha
jo
and
ljmp
andb
pop
xchg
cmp
clc
loop
sbb
gs
cmp
inc
push
jecxz
icebp
push
jnp
imul
dec
ljmp
pusha
cmp
in
and
stc
movsb
jns
pop
decb
stos
push
ds
jg
sbb
mov
sbb
scas
call
cld
add
nop
sbb
lret
data16
out
jae
mov
in
mov
bound
push
adc
inc
aam
mov
testl
push
rcrl
test
inc
inc
es
xchg
rsm
fidivl
push
push
mov
es
xor
out
les
ds
push
das
or
xchg
sbb
push
cwtl
int
out
mov
jecxz
int
sub
mov
mov
aas
add
test
gs
test
das
into
push
mov
leave
mov
pop
mov
xchg
cmp
mov
aaa
and
xchg
cs
pop
rolb
jg
jbe
pop
std
adc
adc
in
cld
push
sub
into
jmp
imul
roll
std
dec
sbb
rcrb
dec
pop
out
xchg
test
mov
add
and
repnz
mov
stc
repz
and
xchg
xor
sub
and
or
cli
push
daa
lahf
push
js
push
in
enter
nop
out
pop
mov
or
mov
popa
push
xor
scas
and
addr16
sbb
add
mov
call
sbb
call
sub
cmp
cmc
rclb
mov
xor
push
dec
pop
jo
xlat
daa
or
fwait
xor
data16
mov
adc
push
pop
out
adc
and
ljmp
out
push
daa
jae
lret
outsb
enter
lea
addr16
mov
ds
lods
fwait
mov
xor
pop
push
pushf
jp
sub
sbb
xchg
stc
ret
hlt
jne
jmp
lock
bound
dec
jge
nop
dec
aaa
fsubrl
clc
sarb
jecxz
lcall
cmp
fidivl
dec
mov
stos
cmp
adc
popf
inc
mov
sti
daa
imul
mov
fsubr
adc
lods
sbb
sub
int3
test
ds
xchg
push
xor
xor
fucomp
imull
ret
sbb
dec
add
pop
cmp
pop
out
xor
in
pop
dec
sub
lret
call
cmpsl
int
push
cltd
inc
adc
ret
arpl
ret
push
ret
jb
inc
es
loope
mov
xchg
jle
xchg
mov
sbb
add
add
push
push
add
es
cld
xchg
xchg
adcl
dec
push
into
lods
stc
ss
rcll
dec
dec
sub
daa
cwtl
mov
pusha
pop
mov
adc
push
ss
or
push
or
mov
xchg
cltd
imul
pushf
jle
pusha
inc
push
or
loopne
stc
lea
pop
add
inc
inc
dec
imul
jnp
and
loopne
pop
lea
notb
andb
in
jbe
cmpsl
adc
test
mov
adc
pushl
or
aas
sbb
faddp
push
jbe
dec
jl
insb
mov
in
jmp
imul
iret
mov
sub
rorb
push
shll
ror
pusha
xchg
mov
sbb
adc
repz
addl
push
jb
cmp
in
mov
add
sub
icebp
daa
push
dec
test
std
xchg
aad
cmp
dec
lods
mov
cwtl
bound
dec
mov
out
or
adc
inc
lcall
mov
lret
imul
jle
arpl
pop
cmpsb
adc
sub
jmp
mov
mov
adc
and
scas
add
aas
xchg
xchg
and
xchg
pop
pop
add
inc
enter
dec
jmp
adc
mov
popa
adc
lret
sahf
out
cmp
test
jnp
dec
cltd
jnp
cld
add
mov
or
sbb
cmp
or
cmp
out
push
xchg
xchg
out
mov
mov
push
cmp
sbb
imul
testl
push
jbe
stc
push
dec
addb
std
cmp
je
jecxz
xor
pop
in
mov
add
ret
popf
daa
out
lock
std
daa
inc
push
mov
test
xor
mov
sub
andb
mov
mov
mov
sub
insb
or
cmc
scas
ret
hlt
shrl
adc
rolb
mov
add
nop
push
cmpsl
int3
adc
mov
sub
popa
xchg
mov
push
les
ret
push
ja
jbe
mov
or
dec
sub
rcl
xchg
cmpsb
arpl
mov
and
aad
jp
jb
and
leave
xor
fcmovu
shl
cs
add
pop
jno
ret
push
pusha
inc
and
fs
inc
push
iret
aam
dec
push
in
int3
fwait
cmc
repz
pop
hlt
adc
fisttpl
inc
stos
aad
cmp
push
jecxz
sub
dec
cmc
in
jns
xorb
jecxz
enter
mov
pushf
xor
fcomip
js
add
sti
jb
adc
adc
push
inc
mov
mov
mov
xor
test
or
outsb
jmp
mov
out
outsb
add
cmpsl
add
inc
test
dec
cli
lods
ss
movsb
fiaddl
adc
shrb
cmpb
and
cmpl
popa
mov
popf
xor
popf
cs
jmp
mov
mov
stos
sub
inc
mov
out
stos
cltd
sbb
inc
movsl
iret
lahf
jl
cmp
xchg
pop
call
xor
xor
fsub
mov
shll
mov
or
lahf
mov
outsl
xor
test
xor
pop
in
push
mov
jnp
incl
xchg
stos
mov
test
into
xor
sbb
out
aas
sbb
add
dec
je
out
jo
jp
dec
jo
xchg
jmp
cmc
or
sbb
insb
push
fcomi
push
and
xor
or
sub
or
cli
pop
movsbl
mov
dec
insl
adc
sub
test
out
aam
jne
stos
stos
mov
mov
aaa
or
outsl
mov
add
cld
xchg
loope
sub
xchg
jne
shl
mov
cmp
sbb
xor
cmp
inc
inc
in
add
and
cli
je
add
scas
jge
dec
test
and
sub
shrb
leave
mov
fsubr
jnp
and
mov
scas
loopne
push
ficomps
push
lods
addr16
mov
les
add
shll
xor
notb
mov
lret
cmp
xchg
push
jecxz
xchg
jle
fisttps
mov
or
les
iret
xor
mov
pusha
out
inc
lret
loopne
inc
sbb
xor
sub
push
rcl
loop
xor
scas
std
inc
push
mov
pop
sbb
sbb
xor
into
xchg
mov
cmp
adc
sub
cmpsb
mov
aas
dec
xor
test
push
mov
and
push
cmpl
cltd
inc
xor
adc
push
mov
das
movsb
xor
jp
loope
push
push
pop
cs
push
aam
cmpsl
clc
inc
push
sbbl
inc
mov
icebp
and
aad
arpl
mov
adc
pop
pop
mov
aam
popa
cli
sahf
cmc
cs
loop
loopne
dec
test
scas
das
je
xor
repz
fst
mov
scas
mov
sub
cmc
popa
adc
dec
or
push
cmp
cmc
stos
xchg
sub
mov
sub
outsb
movsl
mov
mov
addb
jmp
or
ret
or
mov
std
pop
xchg
push
mov
jns
inc
inc
dec
pop
mov
add
out
insl
fcoml
xor
mov
int
adc
mov
scas
test
loop
cli
cmp
xor
mov
out
jl
inc
sbb
in
jb
dec
in
rcll
cld
fisubl
ds
loopne
jmp
and
push
out
insb
test
dec
sbb
pop
fucomi
cmp
adc
jnp
pop
xor
shl
xor
inc
dec
hlt
pushf
lea
cmpsl
popf
xchg
pop
xadd
movsb
int
cld
es
and
sbb
sbb
pusha
inc
aad
jecxz
insl
add
arpl
mov
fsubr
mov
push
pop
jmp
rcrb
shr
jne
cmp
jmp
pop
rclb
std
icebp
insl
and
jmp
in
test
addr16
mov
push
jg
out
repnz
inc
adc
scas
jp
imul
es
mov
jne
and
sbb
pushf
push
mov
shrl
pop
xchg
cmp
jecxz
enter
xor
or
sub
push
mov
dec
mov
mov
xchg
dec
les
lret
cmp
fwait
dec
push
sub
push
or
ljmp
jns
outsl
pushf
bound
cmp
clc
popfw
inc
mov
adc
mov
adc
inc
jle
out
pusha
dec
sti
ljmp
arpl
sub
movsl
cltd
js
push
xchg
mov
nop
push
add
dec
out
lea
fiadds
scas
pop
mov
adc
push
jb
inc
cwtl
and
mov
scas
push
dec
mov
lret
sub
xchg
mov
xor
add
cmp
inc
insl
cmp
cmp
loopne
lret
or
ficoms
xchg
mov
lahf
sbb
notl
ret
pop
aam
call
push
cmpsl
fsubr
jns
aaa
pop
pop
adc
nop
pusha
or
cmp
ret
es
test
aad
push
xchg
mov
xor
jne
fld1
add
add
repz
inc
xchg
hlt
imull
push
add
pop
sub
and
inc
fldcw
cli
popa
popf
lahf
arpl
adc
les
and
xor
jo
fwait
stos
adc
cmpsb
sub
call
dec
jae
out
clc
scas
xorb
lea
add
mov
mov
jecxz
push
pusha
pop
outsl
insl
inc
imul
arpl
sub
movl
xor
push
inc
inc
jnp,pt
out
icebp
jno
adc
xchg
xor
adc
ss
inc
aam
out
pop
aam
sahf
cmc
in
jnp,pn
ljmp
adc
stos
adc
xor
icebp
add
push
and
or
out
pop
aam
orb
lahf
inc
inc
daa
cmp
mov
sti
subl
push
in
inc
sbb
ss
mov
xchg
xchg
ds
mov
pushf
jnp
mov
je
ficoms
inc
push
sub
jecxz
cwtl
sahf
sbb
in
arpl
nop
xor
cs
jns
jle
mov
js
xor
int
cmp
js
or
and
cld
daa
call
push
fs
stos
push
fs
data16
adc
dec
xor
lcall
insl
adc
sub
pop
or
jmp
mov
jl
ljmp
mov
repnz
int
popa
arpl
cmp
lock
push
push
sub
xlat
stos
adc
stc
outsl
test
xorb
xor
fcmovb
cwtl
xchg
xor
ljmp
dec
sub
fs
mov
and
mov
dec
mov
repnz
jno
aad
or
xchg
jbe
mov
or
push
mov
sbb
add
push
inc
push
or
movsl
jmp
pop
push
arpl
sub
test
std
cs
lahf
xchg
and
xchg
mov
adc
or
sub
fsubl
sbbl
pop
andl
lret
push
fstl
scas
xchg
dec
xor
dec
in
sub
pop
lds
lds
push
pop
mov
pop
clc
sub
pop
pop
scas
adc
and
fadd
test
test
xchg
cmp
sub
mov
es
test
outsl
cltd
jno
repz
bound
dec
dec
or
out
sbb
in
pcmpgtd
movsb
jmp
test
dec
icebp
pop
std
jl
or
cmp
insl
gs
mov
sub
fisttps
or
push
rclb
inc
sbb
push
or
cmpsl
xchg
adc
jo
mov
popf
js
mov
mov
sbbb
dec
jle
faddp
inc
dec
xchg
ret
mov
xchg
mov
cmc
xchg
mov
adc
arpl
loop
lret
outsl
mov
repnz
clc
and
out
ret
sbb
jbe
addr16
xchg
xchg
call
popf
pop
mull
dec
cli
repz
and
sbb
and
and
loope,pn
mov
mov
jmp
mov
adcb
adcb
js
lcall
aas
popa
lahf
lock
dec
inc
ljmp
add
pop
data16
inc
mov
push
daa
loopne
cmp
data16
ret
test
dec
xor
ja
pop
xchg
cs
xor
cmc
ret
pop
lret
lods
lea
fwait
sbb
xchg
lods
movsl
imul
jp
mov
imul
cmp
icebp
mov
inc
cmpsb
add
repnz
inc
inc
test
jns
mov
les
mov
jp
call
lods
mov
lock
icebp
aad
addr16
sub
add
mov
jecxz
adc
mov
sti
test
fidivrl
cwtl
decl
mov
popa
mov
lea
lods
inc
movsb
hlt
adc
gs
mov
inc
movb
or
push
adc
inc
jb
jne
xchg
fcoms
aad
push
mov
jle
pop
lds
cwtl
orl
loope
pop
imul
push
jecxz
jnp
loop
dec
hlt
mov
cmpsl
jb
sub
dec
fidivrs
into
jp
fsub
mov
pop
xor
cld
cs
jge
outsl
pop
repz
sbb
and
inc
dec
inc
in
cmp
bound
into
mov
rolb
adc
stos
pop
sbb
shrb
lret
fsubp
ss
jmp
xchg
xchg
inc
sub
scas
mov
push
pop
sub
stc
cmp
mov
pop
dec
rcrl
xchg
jp
loop
adc
ds
mov
xchg
xor
test
fdivrs
inc
jmp
dec
int3
fs
add
inc
sbb
fadds
xor
jg
dec
mov
repnz
xchg
out
cld
push
addr16
xchg
cwtl
mov
and
adc
data16
mov
out
pop
cmp
cli
out
add
mov
sub
shlb
dec
mov
cmp
pusha
jo
lret
add
pop
js
cltd
pop
popw
jo
test
dec
cmc
in
xor
adc
xor
pop
aad
jns
cmp
sub
subl
lret
loope
leave
fmuls
dec
insb
dec
jp
rcrb
push
push
loop
lcall
popf
jp
shl
xor
hlt
movsl
dec
sarb
je
loope
inc
insl
or
mov
sbb
jne
ja
std
gs
jmp
xchg
das
lock
jl
sbbb
and
jns
mov
pop
scas
mov
in
leave
imul
int
push
loop
mov
pop
fists
sti
pop
xchg
into
jns
fadds
mov
inc
cld
sarb
pop
push
and
sbb
push
rolb
add
push
pop
adc
lahf
cmpsl
pop
xchg
pop
sbb
sbb
pavgb
test
fcmovbe
hlt
or
cld
aaa
cmp
mov
fidivl
xchg
xor
addb
jle
stos
mov
test
mov
ja
pop
mov
push
add
popa
jae
push
xorl
mov
call
mov
scas
mov
loopne
adc
roll
cwtl
enter
adc
mov
cmp
jle
lods
push
sbb
pop
iret
mov
xchg
push
insl
dec
mov
xchg
addr16
stc
shll
iret
pop
leave
lods
outsl
xor
cwtl
cmc
or
test
popa
xchg
das
jb
int3
push
cmp
pop
or
arpl
out
les
jg
stc
xor
bound
xchg
les
pop
dec
jne
stos
test
mov
add
cld
js
out
js
jo
pop
cmp
aad
test
pushf
and
jnp
outsb
mov
enter
stc
dec
adc
xchg
pusha
in
dec
je
sbb
ds
sbb
cltd
xchg
ficoms
addr16
mov
inc
testb
push
out
cmp
fstpt
outsl
ret
scas
aad
mov
sub
and
jns
inc
push
mov
pop
mov
ret
inc
stos
or
xchg
pop
cmpsl
sub
cmp
fldcw
int
xor
dec
mov
xlat
jge
mov
or
dec
sub
sahf
in
ljmp
movsb
sbb
mov
pop
sub
outsb
es
xchg
mov
push
pop
jp
fidivrs
repnz
pop
add
cmp
pop
out
aaa
arpl
movsb
pushf
int
mov
add
or
add
dec
xchg
fnsave
sub
add
sbb
cmpsb
and
add
pop
mov
loop
sub
in
iret
fld
mov
sahf
and
test
in
jae
sub
add
insb
inc
std
cwtl
mov
out
mov
pop
in
dec
or
sbb
mov
lea
lahf
push
mov
fldcw
push
and
cli
mov
mov
jmp
mov
movsb
fs
lret
in
or
out
mov
ss
add
sbb
lea
dec
xor
adc
popf
bound
adc
enter
je
mov
aad
iret
into
sub
mov
mov
subb
punpcklwd
pop
or
fistpll
and
mov
pop
test
sub
insb
dec
and
jne
mull
or
movb
add
lods
loop
sub
xor
popa
icebp
xchg
frstor
cmpsb
cmpsl
pusha
mov
mov
leave
mov
repz
mov
pop
push
push
mov
inc
mov
mov
jecxz
sub
dec
fldl
je
pop
fldenv
outsb
push
stc
xchg
jb
mov
int
mov
iret
push
xor
lock
mov
pop
call
inc
push
lcall
lds
std
pop
cmpl
adcb
stos
sbb
inc
sbb
push
xor
cltd
dec
mov
mov
mov
cwtl
dec
mov
xlat
dec
add
shrb
jb
mov
call
repz
in
orb
inc
xor
dec
push
mov
rolb
jnp
mov
in
repnz
mov
fstpt
addr16
dec
push
lret
test
pusha
jnp
cmpb
pop
xlat
fwait
xor
clc
sbb
mov
mov
out
cmp
inc
sbb
cld
adc
pop
dec
push
jno
and
ljmp
js
xor
fdivs
outsl
mov
pop
lcall
jecxz
lea
push
fs
rcrl
stos
or
test
mov
xchg
mov
cmpsl
out
sahf
imul
scas
push
and
dec
or
shll
cmpl
push
cmp
mov
jnp
dec
iret
dec
dec
adc
imul
fs
cltd
lahf
out
lcall
fucomip
fldcw
dec
cmp
jmp
repnz
dec
adcl
scas
add
pop
xchg
mov
lock
andb
and
jae
jecxz
add
pop
fidivrs
insb
cs
and
ss
push
inc
mov
stc
mov
mov
cmpl
popf
iret
mov
ret
and
sahf
lahf
or
adc
lret
call
pusha
mov
cmc
negl
mov
mov
mov
pop
or
movsl
out
sbb
js
push
rcrl
mov
cmp
les
push
dec
sbb
daa
out
mov
adc
ds
dec
std
sub
sbbb
sub
pushf
sub
pop
outsb
adc
sbb
add
adc
xchg
lds
shlb
or
pop
outsl
mov
loope
popf
add
adc
jo
pushf
mov
repnz
push
enter
sub
sub
ret
sub
sbb
cmpsb
xor
xor
cmp
xchg
mov
lock
test
mov
iret
stos
pop
test
push
stos
mov
int3
cltd
int3
or
dec
sub
push
out
jnp
and
pop
lock
add
fstpl
mov
iret
pop
add
or
ret
test
jl
xor
stos
cltd
pop
cwtl
adc
adc
sub
aad
bound
or
or
enter
xor
xchg
aaa
popa
or
jle
adc
sti
les
sub
mov
mov
or
aaa
push
call
inc
fldenv
daa
stos
clc
das
push
dec
push
add
test
jmp
in
mov
xor
push
leave
fmuls
xchg
mov
inc
fldenv
stc
cmpsl
and
push
cmp
imul
popa
repnz
mov
int3
test
dec
int
adc
cld
imul
dec
hlt
push
dec
cmc
ret
lods
inc
aaa
and
out
lods
xor
sarl
adc
inc
push
arpl
int
push
xchg
xlat
mov
xor
in
mov
jno
pushf
call
adc
adc
mov
xorl
aam
mov
loopne
xchg
jnp
ljmp
mov
mov
leave
xchg
push
pop
aam
mov
xchg
xchg
sub
adc
mov
sub
repz
push
push
bound
xor
shrl
inc
pop
loopne
enter
jo
add
jle
sar
push
jae
sbb
cltd
fisttpll
adc
sub
cmp
xchg
add
pop
adc
jp
cld
or
mov
sbb
in
mov
push
inc
popa
into
in
je
adc
int3
dec
pop
mov
out
cmp
leave
cld
push
aad
mov
mov
dec
dec
psubsb
adc
push
mov
xor
jp
adc
test
adc
add
sbbl
lea
pop
or
jns
mov
mov
mov
push
add
outsl
mov
ret
push
mov
fsubrl
inc
sub
or
mov
sbb
dec
sub
sub
sub
mov
push
out
lods
or
xchg
arpl
add
decb
push
les
int
cltd
sub
mov
cmpsb
fiadds
lret
lock
aaa
inc
mov
scas
andl
icebp
aam
xchg
jecxz
daa
mov
and
int3
call
fistpl
jbe
mov
pushl
aas
push
inc
mov
mov
xchg
shrb
dec
mov
loop,pn
repz
arpl
or
shr
fcomps
inc
outsb
enter
cmp
ds
and
fwait
aas
cld
leave
adc
sbb
sbb
jae
in
fsub
arpl
push
adc
movsl
jns
flds
pop
cmp
and
pusha
mov
cltd
fbld
dec
sub
scas
sub
bound
mov
cmp
cmpsb
xor
mov
andl
loop
lds
or
or
jmp
movaps
adc
cmp
inc
jecxz
cmp
or
xlat
jg
call
roll
jb
xchg
andl
or
jb
fidivs
in
add
jp
pushf
in
je
nop
daa
shll
push
rcrl
xor
scas
jecxz
sub
sub
loop
sbb
xor
inc
imul
enter
pop
arpl
mov
lcall
fistpll
inc
and
arpl
out
int
mov
js
pop
icebp
mov
je
test
add
mov
dec
lahf
stc
mov
mov
xchg
cmp
fistpl
mov
xchg
loop
sub
mov
inc
jnp
xchg
loope
sub
xchg
nop
loope,pt
cmp
clc
sti
fxch
fldl
psubq
rorl
mov
out
or
std
and
and
cmp
popa
inc
ss
mov
call
lar
aaa
aam
sbb
xor
jmp
mov
push
sahf
std
xchg
popf
push
insb
sub
aas
mov
sbb
sub
loopne
push
aaa
mov
inc
inc
imul
inc
mov
fdivp
mov
lretw
icebp
mov
into
jne
out
adc
iret
aaa
xor
test
cmpsb
add
test
push
cmp
pop
add
sub
std
lods
push
xchg
dec
push
or
ja
jae
jg
xchg
dec
cld
cmp
mov
add
out
pop
test
cmp
mov
xchg
inc
dec
sub
push
adc
roll
mov
in
pop
fucom
mov
pop
int
sbb
in
xchg
cli
movsl
inc
out
in
xchg
mov
mov
int3
cmc
lods
cmpsl
sub
das
cmp
stos
mov
mov
cs
or
rclb
sub
repnz
dec
cld
popa
jl
mov
lock
cs
outsb
push
xchg
push
pushf
scas
sub
jo
ret
push
mov
dec
leave
stos
adc
or
out
and
pop
cs
ffreep
mov
add
lods
int3
fs
icebp
adc
jb
clc
fldt
outsl
out
out
fwait
jg
jb
popa
mov
cmc
int3
test
mov
negl
cmp
shlb
ret
dec
dec
mov
nop
push
add
clc
mov
mov
xor
ret
mov
and
nop
rcl
xlat
or
stc
arpl
fisttps
sbb
push
add
and
adc
jae
pushf
sub
test
jns
mov
xchg
sbb
add
jge
cmp
imul
sub
fnstenv
mov
mov
movb
xor
mov
outsb
scas
stos
xchg
out
fdivrs
fs
adc
hlt
xor
gs
imul
inc
add
lahf
jle
pop
push
pop
pop
dec
sub
mov
sbb
jg
or
and
fstps
dec
push
out
sbb
or
xchg
xlat
jbe
add
push
dec
jp
dec
insl
inc
js
ds
pop
inc
cld
rclb
cmpsl
push
stos
rcl
movsb
in
dec
and
ret
jmp
sbbl
and
mov
imul
dec
sti
mov
mov
jmp
push
out
scas
sub
repz
sbb
jl
inc
cld
mov
cmp
in
mov
enter
push
jg
in
jmp
std
aad
xchg
shrb
sbb
test
jg
fwait
enter
movsb
dec
call
vfmsub132sd
imul
sbb
pushf
ret
fnstsw
rol
inc
in
ret
mov
subb
pop
out
hlt
btcl
inc
inc
std
cmp
ljmp
sub
jnp
lds
mov
mov
mov
dec
shrl
adc
inc
sub
and
aam
push
and
jnp
jae
mov
mov
or
jmp
inc
fwait
dec
add
and
test
imul
out
mov
xchg
push
jl
js
mov
cmp
repnz
xor
mov
int
roll
dec
add
repnz
ret
mov
push
pushf
popa
jbe
inc
push
inc
xchg
shll
bnd
sbb
cld
lret
fs
cmpps
dec
mov
add
adc
dec
mov
lret
inc
fcompl
dec
inc
inc
xor
add
loopne
aam
stos
jo
lret
cmp
fmul
mov
test
addr16
mov
cmpsb
lahf
loop
ljmp
jbe
push
adc
mov
dec
or
or
ds
into
in
pop
sub
std
daa
je
dec
pop
iret
and
int3
cmp
arpl
cmp
cmpsl
andl
fisttpl
icebp
mov
jecxz
ret
jp
movl
pop
in
xchg
repz
jle
sub
xchg
cltd
mov
int
mov
out
aam
pop
sbb
jle
xor
push
mov
sub
jmp
outsl
add
mov
or
jo
btc
xor
fs
cmp
push
adc
xor
in
mov
push
xchg
fdivrp
and
xchg
or
lds
test
addr16
and
fisttps
fcmovnu
add
or
cld
enter
movsb
ljmp
or
call
jo
or
xlat
sub
shll
dec
xor
cs
add
mov
leave
and
aam
jmp
adc
push
aam
sub
popa
xor
jle
sahf
mov
mov
mov
mov
out
ljmp
orb
scas
in
icebp
xchg
mov
cmc
test
shl
sub
and
or
mov
or
or
xor
fnstcw
xor
sbb
jp
lret
inc
push
and
dec
mov
pop
loopne
shlb
cmp
cmp
ror
mov
jmp
shlb
sub
cmp
xor
jmp
aam
sahf
xchg
lds
cmp
mov
or
test
push
lret
push
cmp
vpminsw
add
ljmp
ret
or
and
das
sti
jnp
inc
mov
in
push
mov
clc
and
push
data16
sbb
popf
jge
sub
cmp
and
pop
mov
leave
fcomip
rcrb
sub
inc
andl
xchg
mov
pop
imul
push
addr16
int
mov
jo,pt
es
and
lret
shl
sbb
ss
addr16
push
unpcklps
inc
or
cld
scas
mov
xorl
xor
and
jbe
mov
and
dec
mov
pop
lods
hlt
out
pop
pushf
testb
in
scas
aaa
xchg
pop
sbb
mov
leave
push
lcall
add
inc
test
test
pop
push
cwtl
pop
bnd
jae
mov
loope
fiadds
scas
add
and
xchg
in
in
inc
cmp
outsb
pop
pmulhuw
mov
xor
jns
inc
mov
aad
iret
adc
and
xor
sbb
add
and
js
stos
jmp
add
jns
push
adc
jb
testl
les
je
jnp
mov
addr16
arpl
inc
pop
imul
push
mov
add
xchg
in
mov
movsl
cmp
out
stos
push
mov
push
pop
lret
sarl
sbb
or
cwtl
add
mov
orb
mov
mov
in
sub
movsl
rcrb
fisttps
cmp
lods
or
loope
lock
cmp
bound
in
xor
pop
pusha
or
or
mov
adc
ror
test
or
xchg
xor
ds
lret
insb
testl
lea
xor
inc
add
test
push
xchg
outsb
dec
xchg
je
stc
jb
jae
shlb
enter
lock
divl
sbb
dec
cs
xor
enter
push
and
push
fcmovne
out
xchg
in
lock
add
push
fdivrl
out
pop
or
dec
push
jmp
mov
mov
mov
xchg
scas
test
rcl
stos
loope
jge
fildl
insl
clc
add
jle
push
add
inc
in
dec
outsb
dec
in
je
enter
dec
movsb
mov
sbb
add
push
push
pop
rcll
mov
mov
loope
dec
jge
movsb
ljmp
push
push
mov
pop
xchg
movsb
mov
movsl
movl
cwtl
and
aad
fwait
add
add
xchg
scas
mov
pop
and
or
jl
push
int
test
popa
add
hlt
cmp
mov
out
mov
loop
cmp
out
out
scas
sbb
sbb
and
jg
lcall
pop
sbb
mov
les
repnz
inc
push
jmp
xchg
xchg
test
orb
ret
or
roll
xor
mov
jmp
or
dec
pop
mov
shlb
cmp
in
jo
push
push
xchg
out
add
stc
xchg
mov
push
cmp
xorb
cmp
mov
mov
push
dec
je
jmp
sub
dec
xchg
pushf
movsb
dec
cmp
jns
mov
fcoml
push
mov
jmp
cli
daa
or
sbb
sbb
insl
hlt
cmpsl
test
cmpsb
push
repz
lcall
lods
add
xchg
adc
jecxz
xor
sub
in
daa
test
stos
dec
jg
dec
rcrl
mov
loopne
ljmp
sbb
mov
inc
jo
pop
repz
cmp
dec
jmp
scas
xor
loopne
sub
mov
xor
sbb
dec
aad
push
sub
pop
sbb
xchg
xlat
outsb
mov
ds
pop
std
xchg
sbb
imul
sti
jge
dec
mov
mov
test
fimuls
xchg
mov
or
cmp
lret
jge
repnz
dec
add
out
cwtl
adc
mov
dec
stc
mov
aaa
mov
mov
test
mov
mov
sbb
add
pop
or
aaa
dec
loop
lahf
push
clc
push
adc
push
stos
jge,pt
dec
leave
xchg
add
shlb
or
outsl
sbb
popa
negl
lahf
jno
push
add
mov
ret
jo
mov
test
xchg
pop
ds
cmp
btr
pushf
or
jbe
popa
sub
sub
nop
xlat
icebp
outsl
push
inc
lcall
aad
ss
mov
imul
std
sbb
imul
test
inc
add
aas
and
testb
lahf
jae
mov
pop
int
adc
je
daa
or
cltd
ds
and
ret
out
lods
fwait
clc
cs
and
jae
sarb
mov
sahf
dec
das
outsl
in
and
xlat
imul
mov
push
in
inc
std
loope
jl
xchg
or
adc
pop
xor
arpl
and
ds
mov
adc
scas
ljmp
cmc
lahf
pop
shlb
js
outsb
bound
sbb
insl
sbb
push
sti
lret
xor
sbb
insl
jne
lock
dec
out
cmp
or
cmp
and
sub
notb
scas
xor
pop
pop
fstpt
inc
add
dec
sub
rcl
lret
jo
leave
stc
pop
loop
inc
test
aam
adc
inc
insb
nop
mull
aas
or
mulb
popf
mov
fisttps
enter
idivb
fstpt
push
cmp
and
ret
push
lea
or
push
in
test
lahf
push
mov
fs
testl
push
test
in
ds
hlt
dec
inc
cmpsb
pop
jmp
stos
sub
enter
sub
xor
rcrl
xor
cmp
or
inc
jns
cmp
jnp
dec
insl
dec
rcrb
mov
out
cmc
fcoml
aaa
push
mov
xchg
or
lods
popa
inc
movsl
movsb
sub
pop
pop
scas
sub
xor
addl
push
xor
cmpsl
pop
xchg
mov
xchg
sbb
repz
aas
mov
mov
lcall
test
scas
movq
adc
push
sbb
ds
push
js
and
adc
out
jg
xor
aad
out
fcoms
cmp
mov
cltd
out
jno
rcll
mov
dec
mov
stc
out
mov
aaa
ja
adc
lock
lods
inc
mov
inc
xchg
or
inc
lahf
jno
push
mov
mov
push
shll
and
adc
mov
rcrl
push
add
movsb
ds
adc
pop
jno
add
pop
les
xchg
xor
mov
dec
mov
test
jle
scas
push
mov
or
push
cmp
mov
testb
es
pushf
je
test
je
adc
rcl
mov
ss
sbb
push
sub
nop
inc
push
in
stos
negb
fwait
sub
cmp
ja
aaa
data16
fwait
outsl
jno
jno
adc
into
leave
sub
rclb
mov
xchg
xor
test
xchg
je
pop
fistl
inc
xorps
dec
xorb
roll
cmp
arpl
cmp
loopne
idiv
push
and
mov
add
mov
jg
mov
popf
loop
cmp
xchg
adcb
push
jbe
pop
xor
imul
rolb
stc
jo
outsl
ffreep
insb
jnp
repnz
addl
push
mov
xchg
lea
and
ja
jle
dec
js
sub
mov
push
sti
int3
popf
add
jmp
push
lods
in
mov
std
je
inc
js
dec
mov
inc
and
mov
dec
mov
xchg
dec
pop
adc
subl
fwait
pop
adc
sbb
stos
inc
jbe
mov
jns
xchg
xor
xchg
push
lret
dec
mov
sub
pop
jecxz
pusha
aad
cmpsb
push
xor
push
test
cmp
pop
push
inc
daa
shlb
xlat
push
jmp
push
mov
xor
cmp
adc
loopne
xchg
in
add
cs
test
cs
add
repz
xor
push
mov
push
mov
clc
out
dec
jb
loop
lds
ds
pop
add
xchg
inc
cwtl
fsubrl
inc
xchg
movsl
in
cltd
loope
pop
pop
bound
out
sub
insb
or
mov
cmc
enter
fistl
and
sbb
fcompl
cmp
dec
inc
cmp
imul
jecxz
cmc
push
sbb
mov
into
sahf
cld
ret
and
inc
add
mov
add
sub
mov
test
push
roll
jle
mov
push
mov
push
cli
pushl
push
add
mov
pop
sbb
xchg
jle
cmp
pop
add
fdivr
add
pop
jbe
mov
lock
jg
pop
sub
aam
jg
adc
dec
sti
xchg
xchg
in
push
lret
sub
cltd
mov
pop
pop
push
or
std
sub
jo
jl
mov
ret
xor
sub
add
adc
cmp
mov
pop
aad
out
push
ss
loope
aam
std
rorb
jae
cwtl
lcall
ljmp
xor
fcoml
mov
int3
adc
addr16
cwtl
and
shll
and
lahf
and
mov
sbb
dec
mov
popa
lahf
inc
lret
adc
pushf
adc
inc
add
jg
loope
das
push
lods
adc
xor
pusha
sahf
add
adc
pop
or
dec
mov
mov
nop
adc
inc
cmp
push
int
sbb
dec
lcall
ds
pushf
mov
sti
js
dec
imul
add
notl
mov
iret
enter
ljmp
loopne
negl
inc
dec
pop
mov
stc
push
or
sub
es
xor
in
dec
test
and
xchg
fs
xlat
mov
fstps
and
mov
mov
stos
imul
mov
jp
out
and
insl
and
pushf
sbb
push
add
loop
bound
out
and
push
ffreep
enter
es
inc
pop
andl
add
mov
mov
mov
jo
xor
push
out
hlt
movsb
sbb
xchg
call
adc
mov
hlt
outsl
icebp
push
mov
in
sub
inc
enter
push
mov
mov
pop
sub
adc
cli
mov
mulb
repz
and
ret
xchg
rcr
push
aaa
fwait
int3
push
popf
int
testb
xlat
sub
decb
fadd
dec
jo
inc
add
sub
shl
adc
gs
xchg
shr
fbld
cmp
pop
arpl
jns
lret
pop
cmpsb
ret
sahf
sub
or
and
push
xor
adc
jle
mov
bound
gs
mov
push
mov
jae
cmp
push
clc
inc
addr16
push
cltd
sub
mov
inc
hlt
ds
and
imul
call
push
xchg
je
mov
test
xchg
pop
mov
cwtl
pop
or
jns
cmc
cmpsl
mov
les
mov
cmc
xor
adcb
xchg
jnp
or
jns
inc
jle
sub
dec
xchg
js
int3
lcall
mov
fsubl
pusha
cltd
repnz
or
sbb
mov
sbb
mov
jecxz
cmc
icebp
adc
insb
pop
pop
inc
xor
lods
stc
fiaddl
jmp
adc
fsub
mov
cli
mov
inc
and
inc
popf
adc
xchg
sbb
or
rclb
sti
loopne
sub
cwtl
leave
in
sbb
cmp
mov
pop
and
xor
aam
inc
cmp
in
jnp
xchg
jg
dec
jo
sbb
enter
popf
fcomp
fcoms
adc
jb
int3
xchg
dec
iret
fimull
push
push
mov
test
fsubrs
rorb
jl
pop
adc
shlb
das
cmpb
rclb
out
cmp
jmp
sub
repnz
mov
mov
sbb
mov
fidivs
repz
sub
jp
jbe,pt
inc
jnp
pop
repz
cmpsl
sbb
adc
pushf
pushf
test
cwtl
test
scas
pop
push
fsub
addr16
dec
stos
jmp
sbb
aam
inc
pop
inc
cli
sub
cld
pop
data16
outsl
adc
aam
or
js
mov
mov
sar
bound
pop
push
addr16
cld
cmc
repz
and
rclb
fisubl
mov
adc
fldl
sbb
pop
adcl
jmp
and
stos
shll
movsl
xchg
loopne
enter
sbb
jle
adc
adc
add
call
lods
xchg
adc
adc
mov
pusha
ficomps
test
sbb
cmp
inc
out
jle
jp
testl
outsl
dec
push
mov
in
pop
sub
insl
dec
cmp
andl
and
xor
dec
jno
movl
xor
int3
pushf
and
cli
arpl
dec
dec
xor
aaa
mov
and
pusha
sbbl
pop
out
mov
lret
mov
xchg
aam
lods
dec
fs
outsb
sub
inc
sub
subl
or
xor
icebp
push
dec
xchg
std
xchg
push
or
add
push
xchg
dec
mov
mulb
jnp
mov
adc
aad
call
mov
pop
loope
and
jns
aas
test
jns
jle
push
push
fs
scas
clc
xor
data16
mov
cltd
in
xchg
mov
in
das
sbb
idivl
mov
jae,pn
pop
movsb
and
es
scas
fwait
xchg
scas
push
mov
sbb
mov
inc
adcb
dec
imul
sub
cmp
addr16
jl
xor
xor
test
lods
mov
hlt
mov
mov
daa
adc
out
fisubl
jge
inc
xorl
jg
push
mov
sbb
push
std
test
xchg
rorl
sub
js
or
cli
adc
les
lcall
jnp
jg
push
mov
les
enter
int
inc
adc
aad
int3
pop
in
fisubrs
jp
nop
les
jne
out
jnp
dec
mov
das
imul
or
mov
daa
mov
incl
mov
mul
mov
mov
mov
insb
or
lret
es
leave
xchg
pusha
inc
mulb
outsb
in
addr16
cld
mov
lods
jne
pusha
add
xchg
jno
iret
fwait
or
mov
and
lea
cmc
xchg
mov
pop
xchg
lret
and
int
dec
test
dec
cmp
sub
xor
push
pop
cmpl
push
jns
mov
pop
jns
out
ret
ret
imul
js
sbb
push
arpl
inc
dec
adc
movsl
int3
mov
inc
add
lcall
clc
test
adc
das
mov
xchg
pop
in
jg
lahf
add
repz
pop
into
and
mov
jl
bound
or
inc
jns
test
es
scas
or
inc
or
or
pusha
aad
sarb
in
shl
adc
xchg
add
mov
movsb
daa
lret
xchg
sarl
into
dec
or
je
push
lret
lcallw
cmpl
repz
add
gs
sbb
aam
outsb
cmp
int
add
mov
xor
in
dec
into
mov
bound
ja
das
repnz
pushf
or
jns
mov
movsl
std
mov
jo
arpl
iret
inc
or
les
mov
adc
inc
push
int
dec
mov
sub
sub
fdivs
pushf
int
enter
out
fists
push
movsb
test
xchg
ror
popl
ss
xchg
fildl
sub
lret
repz
fidivs
xchg
imul
inc
testb
mov
outsl
sar
pop
adc
sbb
lret
dec
rcrb
xchg
pop
in
inc
xor
andl
push
lea
push
push
aad
dec
sub
ret
test
mov
std
loop
jb
jg
cmp
adc
add
sbb
mov
pusha
mov
inc
subb
or
iret
xchg
xchg
or
test
pop
adc
out
adc
pusha
out
sbb
daa
jnp
xchg
jp
push
mov
jns
fildll
cld
cmc
sbb
and
cmp
push
je
leave
cs
inc
out
sub
push
sub
xchg
cmp
test
iret
push
je
xor
int3
adc
scas
pop
clc
out
stos
fcoml
jbe
or
or
test
inc
adc
dec
add
repz
sub
xchg
stc
les
lea
sahf
shll
insb
adc
pop
leave
mov
mov
xchg
add
fidivrs
mov
cmp
lods
push
adc
xor
imul
sub
negl
dec
lds
stos
pop
mov
jns
mov
and
scas
mov
push
mov
push
dec
lcall
mov
jge
push
xor
lods
inc
lea
mov
cld
mov
sbb
jle
fld
jnp
xor
daa
mov
fcomi
and
test
les
push
addl
pop
enter
xchg
cs
jb
stos
inc
mov
test
sahf
dec
adc
sbb
add
mov
xor
xor
mov
or
arpl
jne
sub
mov
mov
test
inc
lret
stc
xor
cld
lcall
insb
dec
mov
jmp
inc
mov
mov
add
int
in
sbb
icebp
iret
xchg
pop
sub
xor
xor
gs
ljmp
lret
mov
lock
imul
fs
movsl
mov
dec
test
sbb
dec
incb
in
dec
ret
sub
sarb
addr16
insl
pop
in
cmp
cmp
fst
add
xlat
push
and
jns
push
mov
sub
das
xchg
inc
pop
add
xchg
aam
arpl
sbb
cli
orb
jmp
lcall
mov
out
lea
add
sub
dec
sbb
jmp
shl
iret
mov
jle
loopne
mov
scas
sbb
and
xchg
fcomps
shll
dec
rol
aad
sbb
movsl
jecxz
std
dec
and
dec
mov
xor
into
mov
scas
xorl
movsb
ret
dec
jb
hlt
mov
rorl
or
mov
imul
and
shll
push
sbb
dec
scas
and
repz
or
cmpsl
aas
test
stos
ja
xor
dec
movsl
mov
pop
jp
sbb
push
dec
adc
loopne
lcall
pop
aaa
adcb
addr16
outsb
cmpsb
pushf
cli
aam
mov
mov
scas
dec
addr16
adc
xchg
jb
dec
push
js
jl
bound
das
imul
aad
adc
xorl
outsl
jg
cwtl
sbb
and
imul
aas
dec
lcall
ljmp
ds
adc
inc
cwtl
jle
adc
jp
dec
orb
adc
faddl
mov
shl
inc
aas
adc
mov
inc
dec
stos
pushf
mov
rolb
fcmove
fcomps
shll
jmp
in
jge
sbb
stos
pop
mov
ljmp
shlb
sahf
incl
add
lods
scas
jo
fwait
and
inc
sub
or
pop
lock
dec
cwtl
xchg
jg
mov
mov
push
pop
scas
iret
and
sub
cwtl
test
sub
push
loopne
adc
sahf
inc
sarl
sub
ficomps
aas
dec
push
dec
push
push
jmp
stc
or
xor
scas
or
jne
fisttps
add
loopne
jno
mov
mov
cmp
iret
hlt
pop
loope
bnd
aaa
scas
mov
cmp
mov
sbb
lock
xor
decl
out
fdivl
divb
insb
mov
adc
in
add
ret
mov
mov
fsts
mov
ja
loope
es
fsubl
mov
sub
out
mov
lret
imul
cmp
jl
leave
push
dec
add
mov
xor
and
gs
push
lds
ja,pt
xstore-rng
cmpsl
ret
aam
pop
into
xchg
repz
xor
pop
scas
mov
fldenv
add
in
inc
mov
xchg
pop
inc
in
repz
mov
repnz
imulb
insb
inc
inc
loopne
rcrb
mov
ljmp
repnz
loope
ja
inc
push
rorb
js
imulb
cmc
test
imul
jo
and
push
sbb
jecxz
sub
nop
inc
inc
pusha
xor
jge
xchg
cmc
cmp
je
test
pop
sti
cltd
mov
into
jle
cli
pusha
test
std
hlt
jnp
into
pop
into
mov
ljmp
mov
and
inc
xor
fstp
cmp
outsl
jns
mov
sbb
inc
push
ljmp
cld
fsubrl
xor
notb
cmpb
loopne
fstp
cwtl
mov
loop
adc
jno
dec
pop
mov
cmpsb
push
cwtl
lret
adc
push
popf
addr16
inc
pop
jmp
loop
mov
mov
jnp
out
jl
mov
adc
and
sub
jle
ret
lret
pusha
in
sub
push
sub
addr16
les
test
dec
out
ror
int3
push
mov
insb
mov
dec
loopne
xchg
inc
test
daa
mov
mov
ret
sub
gs
dec
iret
xchg
and
popf
js
mov
popl
push
add
mov
and
lock
push
and
pop
push
das
arpl
scas
pop
test
cmp
cmp
xchg
add
orb
adc
or
ret
fadds
stos
rorl
setb
xor
pop
sbb
jmp
lea
std
in
shll
cmp
mov
xchg
sbb
shrl
dec
or
mov
testb
icebp
jnp
mov
mov
insl
jle
pop
cmp
xor
mov
arpl
or
gs
jno
xor
cmp
jbe
adc
jle
sub
lret
push
stos
rorl
in
lea
cmp
and
clc
nop
push
es
sbb
xchg
adc
adc
sahf
add
dec
push
psrad
out
jg
inc
mov
loopne
cmpsl
or
or
test
cld
sub
mov
mov
repnz
sub
stc
sub
dec
inc
sbb
std
addr16
dec
mov
cmp
lret
les
pop
lcall
loope
mov
pop
sbb
xor
sti
xchg
cli
hlt
adcl
inc
or
cmp
stc
inc
nop
in
and
adc
inc
mov
inc
mov
add
push
out
ljmp
arpl
inc
push
ret
and
and
pop
movsl
mov
cmp
xchg
clc
jae
pop
icebp
aam
sbb
cmp
xor
xor
jp
push
aam
and
mov
and
sbb
clc
std
test
dec
fisubl
sub
das
sub
jbe
nop
mov
sub
pop
mov
dec
inc
pop
icebp
out
and
in
cwtl
les
enter
and
negl
pop
jnp
stos
xor
cmp
sbb
xor
lahf
push
test
cli
or
cmc
sbb
adcl
cmpsl
pop
je
add
inc
xchg
xchg
fiadds
sub
inc
mov
fs
cwtl
and
lcall
xchg
sbb
pop
mov
mov
cmp
jg
push
popf
addl
mov
dec
dec
xchg
xlat
xor
int
mov
mov
fldlg2
dec
xlat
adc
addb
ret
aam
std
or
dec
call
sub
clc
imul
nop
jnp
jmp
jle
sbb
push
das
aam
mov
pop
jmp
movsb
cwtl
aad
pop
pop
aaa
gs
inc
add
je
jo
fstp
call
repnz
dec
jle
and
adc
adc
inc
fcmovu
push
call
ror
xchg
pop
pop
dec
das
or
fstps
loop
fwait
test
add
push
lret
test
push
sbb
add
fcomi
jge
or
or
adcl
in
xor
subl
and
cmp
loop
stos
cmp
mov
jae
dec
in
or
sbb
nop
inc
scas
cld
aaa
movsb
dec
ljmp
mov
in
hlt
arpl
dec
xor
inc
xchg
sbb
or
dec
inc
pop
pop
xchg
aam
xchg
and
lods
push
stos
xchg
mov
lret
ljmp
dec
push
or
out
mov
mov
push
mov
subb
mov
cmp
sub
xor
lods
cmp
shll
pop
lea
adc
fistpl
pop
lcall
push
pop
xchg
xor
shll
stc
aam
cmpb
mov
mov
fistps
add
mov
imul
sub
pop
xchg
cmp
stc
cmpsb
sub
sbb
cmc
lods
and
and
push
xchg
fadds
jle
push
lods
movsl
test
data16
das
cli
sub
pushf
mov
out
dec
xchg
jns
fsubr
fadds
mov
pop
aam
cs
pushf
adc
mov
mov
and
jnp
pop
out
add
bound
pop
push
gs
int3
rclb
and
cmp
iret
insl
sub
dec
out
add
push
sarl
in
xor
pop
into
pop
shll
lock
xor
pushf
fstl
ja
mov
jge
mov
aaa
mov
shlb
xlat
or
bound
jae
pop
xlat
mov
jmp
mov
loop
mov
fisubl
push
dec
add
xchg
mov
pop
or
aaa
loope
popf
adc
inc
cmp
pusha
cmp
mov
out
es
push
mov
jno
inc
mov
rcrb
lods
fisubrs
inc
mov
add
stos
int3
loop
push
jns
mov
arpl
fs
repnz
adc
mov
add
loopne
jbe
add
and
fistl
adc
mov
out
jge
es
pop
or
or
pop
xchg
sahf
or
and
xchg
in
popa
sub
mov
jae
dec
movsl
jbe
int3
mov
rolb
fidivl
shll
mov
push
mov
or
sub
nop
xor
je
jg
fcmovnu
into
and
mov
cmp
sbb
lea
loopne
and
add
lods
test
cmpsl
push
lret
sbb
xchg
fists
jg
pop
xchg
into
sbb
pusha
cmp
les
in
push
sub
push
xor
cs
out
in
add
sbb
inc
sub
imul
insl
leave
xchg
jo
imul
insb
dec
test
or
cli
cmp
xlat
test
jbe
testl
and
into
pop
push
in
jbe
in
inc
mov
sub
loopne
push
mov
sbb
or
cmp
pop
cmpsb
pop
flds
add
mov
sbb
mov
into
mov
sbb
divb
sub
pushf
xor
fdivp
cwtl
jo
inc
inc
adc
cmp
mov
popa
fsubrl
cmp
repnz
xor
push
stos
insb
add
shll
mov
adc
xlat
fs
gs
mov
adc
mov
jp
test
ja
mov
pop
inc
xchg
inc
fiadds
aaa
fistps
loope
repnz
mov
lds
nop
mov
aaa
sub
dec
xor
push
push
push
inc
icebp
repz
arpl
pusha
push
es
test
jmp
cmc
sti
xchg
jmp
dec
mov
popf
adc
mov
lret
jo
ja
xor
inc
gs
inc
add
dec
gs
mov
xchg
scas
cmpsb
rcr
leave
pop
jmp
jge
enter
rorb
loop
sahf
daa
mov
fsubl
mov
inc
mov
cmp
jne
and
fwait
jns
mov
adc
xchg
xchg
dec
dec
mov
jno
mov
pop
aas
xchg
or
xchg
mov
imul
adc
test
test
mov
mov
cmp
imul
loop
cltd
shl
lods
add
in
add
arpl
sti
jnp
sqrtps
pop
stos
addr16
nop
aaa
and
mov
mov
mov
jmp
inc
mov
imul
rcll
into
mov
or
fxch
add
mov
fisttpll
or
fwait
test
sahf
add
pop
fiadds
dec
inc
pop
jo
sbbl
loopne
les
sbb
repnz
dec
inc
pop
add
adc
out
out
cmp
or
and
aam
xchg
jb
xlat
push
shlb
adc
flds
xchg
gs
push
sahf
add
mov
jb
add
and
or
shll
jmp
mov
sub
xchg
stc
and
xchg
je
pop
pop
repz
in
pop
rcll
push
pop
inc
or
add
adc
icebp
mov
scas
aad
out
popl
jecxz
negb
or
in
lods
lods
mov
mov
push
sub
or
mov
and
dec
xor
test
cmp
jge
imul
adcb
idivb
xchg
sub
iret
incb
jnp
xchg
out
mov
rcrb
rcrl
add
sub
cmp
pop
lcall
aaa
mov
xchg
jmp
ja
adc
dec
push
mov
push
inc
lret
push
out
enter
