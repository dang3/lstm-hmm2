inc
imul
data16
xor
cmpsb
push
mov
repz
inc
insb
lcall
add
and
push
idivl
xor
xchg
and
inc
pop
insb
dec
shll
dec
xor
xor
and
fidivrs
imul
fs
add
pusha
push
adc
imul
cmpsb
imul
cmpsb
imul
imul
jno
cmp
push
test
xor
shll
xor
adcb
inc
jb
add
add
out
out
es
enter
or
xor
xchg
jo
stos
mov
dec
aam
shl
cmp
adc
dec
shll
cmp
xor
shll
int3
repnz
dec
xor
mov
data16
imul
pop
es
or
dec
push
sbb
test
dec
dec
xchg
dec
and
inc
mov
mov
imul
orl
dec
shll
outsb
sahf
test
pop
movsl
dec
shll
pop
lret
cmp
fldcw
push
inc
pop
xor
xor
jp
sub
push
dec
outsb
or
in
rcrb
mov
cmp
or
lods
xchg
pop
popf
add
and
mov
cmpsl
imul
addb
into
ss
pop
sub
andb
loope
adc
pop
jnp
push
add
outsl
addr16
fs
insl
outsl
push
xchg
mov
pusha
les
sbb
sub
pushf
lea
mov
cmpsb
cmpsl
loop
rcrb
mov
mov
adc
sarb
xor
adc
xor
cmc
ret
xor
cmc
lock
sahf
xchg
push
and
jecxz
cmpsl
test
scas
add
shr
jmp
in
call
jo
dec
les
fmull
mov
dec
dec
inc
dec
or
add
inc
adc
pop
pop
or
adc
syscall
adc
cmp
sub
xor
add
pop
pop
add
adc
dec
sbb
rorb
push
or
dec
add
push
adc
int
pop
add
pop
mov
xor
mov
es
fwait
sub
es
pop
push
mov
push
push
ret
xor
mov
and
insb
mov
cld
sub
adcl
adcl
pop
int3
cmp
movsb
cmpb
in
in
fisubrs
adc
jmp
lods
pop
xor
sub
or
adc
push
and
cmp
adc
dec
sub
xor
cmp
sbb
cmp
and
subl
add
cmp
push
sbb
inc
push
inc
dec
add
push
bndstx
inc
jne
and
jmp
push
push
push
jle
mov
and
xor
jle
js
insl
sub
add
or
mov
dec
and
cmp
mov
push
push
loope
stos
scas
mov
shrb
mov
mov
xchg
or
or
mov
pusha
nop
xchg
mov
add
add
cmp
pop
sbb
xchg
out
mov
cli
mov
add
add
pop
icebp
jl
mov
xor
outsl
sti
lea
lds
mov
mov
outsl
xchg
add
add
stos
out
loopw
pushf
inc
cmc
pop
xchg
lahf
lret
add
shrb
sbb
es
add
add
jge
push
sub
sub
std
push
enter
push
lcall
int
pop
dec
outsl
sub
test
sub
cmp
mov
ret
add
add
outsl
jbe
adc
test
mov
jecxz,pt
test
xchg
add
dec
cmpsl
mov
fisubrs
add
push
pop
adc
aad
adc
lods
in
xlat
adc
add
add
out
add
add
mov
or
fistps
sub
adc
lret
mov
lds
cmp
into
add
rolb
add
add
pop
mov
mov
lds
xchg
xchg
fistl
inc
push
push
push
dec
mov
add
scas
cmpsl
mov
mov
test
add
add
mov
inc
jb
push
pop
adc
ret
push
mov
xchg
mov
cwtl
loopne
xchg
mov
pop
dec
jnp
push
mov
add
test
imulb
test
jge
scas
jecxz
sbb
movsl
das
lods
xchg
cltd
push
jne
inc
jo
add
add
popl
inc
or
push
paddq
and
and
daa
or
sub
or
sbb
les
add
add
dec
aad
or
push
sub
ret
adc
clc
add
cmp
fcoms
shl
idivl
add
add
decb
adc
out
and
add
sub
out
push
jnp
imul
lar
sub
add
push
loopne
outsl
or
in
or
rcr
out
fisubrl
aad
cmp
add
xor
sub
or
cmpb
dec
push
lock
pop
and
push
pop
inc
mov
cmp
add
cld
inc
lods
imul
mov
add
cmp
pop
mov
arpl
mov
xchg
pushl
xchg
cwtl
cmp
cltd
xchg
lcall
mov
jb
xchg
dec
sbb
fwait
fwait
test
inc
test
push
push
jge
adc
push
add
dec
and
daa
loope
inc
addr16
aas
insb
int3
push
test
mov
mov
jne
mov
dec
lods
leave
sub
das
xor
add
add
inc
mov
push
stc
mov
sub
or
icebp
call
iret
daa
or
add
or
in
repnz
les
stos
xor
and
add
add
sbb
add
add
mov
fldenv
jmp
imul
lret
imul
push
pop
out
xchg
jb
in
jmp
mov
add
lods
std
aaa
pop
cmpsb
test
or
mov
enter
add
mov
mov
sbb
faddl
rorb
cmpsl
scas
mov
inc
addr16
mov
mov
add
push
aad
out
ret
test
arpl
pop
fsubrs
or
scas
iret
sbb
add
inc
push
jb
test
je
xchg
dec
mov
mov
xchg
xchg
add
add
lea
xchg
adc
xlat
insl
xchg
sub
jg
jns
insb
lea
add
add
icebp
mov
jo
mov
pop
fsubp
cmp
rclb
add
mov
xor
lret
and
lret
push
loop
dec
es
inc
add
sbb
adc
add
add
xchg
out
imul
icebp
push
repz
in
addr16
shl
cwtl
inc
or
push
jmp
inc
push
push
popa
out
jmp
addl
out
lods
in
adc
lock
add
add
sbb
fst
add
pop
sbb
push
lahf
push
rorl
inc
adc
cmp
into
mov
lret
ror
and
add
nop
mov
jae
push
pop
sub
jle
mov
fisubrs
ja
cmp
or
dec
les
mov
dec
xchg
loope
mov
addb
sub
clc
pop
dec
test
dec
in
add
add
addr16
pop
xchg
in
clc
and
shrb
sarb
jecxz
fidivs
add
and
repz
adc
cmp
cmpsl
fadds
push
adc
add
mov
jge
int
sarb
movsl
push
mov
lds
sub
add
add
stos
push
stos
push
adc
and
mov
lea
cmc
mov
hlt
aad
cmc
adc
add
pop
aas
repz
ds
xchg
cmc
icebp
dec
mov
sub
inc
in
loop
cmp
lret
mov
add
add
mov
jno
stc
lds
cmpsl
pop
pusha
or
std
adc
repnz
sarb
push
clc
or
add
and
pop
and
dec
jge
pop
das
push
mov
test
rolb
add
ret
add
enter
aam
stc
lret
shrb
and
repz
cltd
adc
aaa
cmp
add
mov
lahf
dec
mov
mov
pop
pushf
mov
imul
jnp
or
sbb
dec
xchg
mov
jg
jbe
popf
add
jbe
je
pushf
mov
addr16
lcall
xchg
lcall
scas
xchg
pop
movsl
mov
push
or
inc
inc
fstpt
nopl
int
pop
pop
adc
test
xor
cmp
sbb
add
mov
mov
out
and
insl
or
add
push
xor
or
push
jecxz
or
xor
add
mov
ficoml
sub
sub
pusha
in
and
outsl
cmc
hlt
outsb
in
movl
cmp
xlat
shl
lock
cmp
das
in
cld
inc
repz
addl
add
sti
div
and
inc
scas
test
mov
cltd
pop
movsb
mov
scas
xchg
pop
fldl
popa
imul
scas
pop
dec
mov
pusha
mov
mov
test
pop
cltd
jb
mov
push
jg
adc
xor
add
mov
cltd
inc
insl
pushf
push
nop
dec
cld
xchg
add
xchg
stos
sbb
pushf
lcall
add
add
mov
lods
int3
xchg
leave
sahf
add
in
mov
and
int3
ja
xlat
add
js
push
repnz
sub
and
add
ret
int
adc
lods
repz
popf
imul
push
pop
jecxz
add
xorb
lcall
jecxz
sbb
adc
cmp
test
mov
add
int3
into
jmp
or
out
jmp
ret
adc
loop
add
push
es
loopne
or
pop
sbb
insl
inc
ljmp
mov
add
add
dec
adc
test
test
cmp
cltd
mov
dec
movl
mov
xchg
pop
dec
and
and
sbb
call
or
add
sti
push
loopne
arpl
push
sbb
jbe
mov
fs
out
fwait
cli
roll
cmp
jmp
inc
mov
mov
addl
push
add
mov
dec
sbbl
loop
gs
mov
xchg
add
add
pop
fidivl
mov
sub
push
loopne
xor
loope
or
xor
sub
adc
and
or
push
or
add
add
das
in
sbb
xor
xchg
fisttpll
or
das
loope
in
loope
add
xor
or
ja
icebp
cmp
cmc
insl
pushf
cmp
jmp
add
or
cmp
adc
xor
jmp
in
adc
add
add
sar
dec
aas
and
add
dec
ds
gs
aas
iret
cld
jno
mov
jl
popa
dec
inc
fldt
mov
sub
cmpsl
lods
mov
shl
jecxz
out
cmp
mov
mov
in
xchg
in
sar
cmp
jb
test
pop
cwtl
add
loopne
add
pusha
das
sbb
xor
xor
dec
or
jno
sub
and
dec
and
sub
xor
dec
dec
pop
inc
pushf
mov
mov
icebp
dec
pop
push
hlt
mov
push
push
and
outsb
gs
cmp
inc
insl
arpl
ja
cwtl
aad
cs
mov
xor
in
lahf
xchg
sldt
outsb
inc
sub
inc
xchg
es
bound
add
add
sub
roll
jp
pop
dec
mov
jo
jno
movsl
xchg
adc
push
cmp
mov
movsl
inc
bound
rcl
loop
ljmp
xchg
enter
ljmp
loop
and
add
call
popa
orb
jne
and
xor
and
add
and
shlb
adc
sbb
sbb
test
or
push
sbb
les
aas
mov
add
jae
sbb
sbb
add
bound
or
adc
sbb
and
pop
and
and
cmpsb
test
xor
mov
xchg
rorb
rcrb
test
xchg
mov
popa
lret
xchg
sub
and
jmp
xor
push
lcall
movsb
mov
mov
popa
push
ret
daa
fs
sub
jecxz
adc
push
dec
dec
pop
test
rclb
add
pop
push
push
push
addr16
aaa
bound
push
cmp
jo
das
cmp
popa
aas
dec
cmp
jnp
popa
sub
loopne
xor
or
inc
dec
push
xor
jae
and
and
sbbb
movsl
fnstenv
pop
add
lock
lret
mov
or
mov
dec
div
outsl
jl
enter
fstp
mov
fst
ficomps
xchg
ffreep
iret
shlb
loop
cld
inc
lea
aam
in
decl
lret
int
or
insl
in
pop
adc
sbb
les
add
inc
add
pop
sbb
leave
cmp
sbb
jg
nop
sub
cmp
sub
push
add
cli
imul
sub
add
fdivrl
mov
add
mov
addr16
pop
js
mov
push
push
gs
jb
dec
pop
inc
inc
fs
ud0
fcomip
negl
rol
rcr
aam
mov
push
int
les
ljmp
push
sub
icebp
cwtl
jmp
in
pusha
push
mov
xchg
xchg
decb
incb
sbb
testb
test
cwtl
xchg
ljmp
popa
loop
mov
into
fidivl
icebp
stos
mov
and
mov
rol
jbe
les
jb
sbb
sbb
imul
imul
shll
mov
pop
xor
enter
mov
enter
add
sbb
push
mov
jl
dec
inc
repz
int
stc
test
push
daa
dec
mov
sbb
add
inc
aas
dec
jl
pop
push
add
sbb
jae
jae
imul
add
adc
dec
es
jne
lods
mov
mov
mov
add
in
in
xchg
mov
add
inc
add
mov
lock
rorl
mul
nop
out
std
xchg
add
mov
lret
sub
xchg
outsl
data16
xchg
nop
sahf
orb
in
rcll
and
popf
xchg
xchg
popf
popf
cltd
cltd
popf
popf
addl
xchg
xchg
popf
cmpsl
cmpsl
cmpsl
mov
cmpsl
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
xlat
push
jno
cmp
xlat
mov
loop
stos
pop
or
or
jo
pusha
pop
sub
xchg
pop
out
cmp
lea
lds
mov
mov
int
repz
fldl
fcom
in
mov
int3
ret
sbb
lea
fs
cmpb
pop
mov
and
sub
xor
mov
or
jmp
cmp
sub
sub
push
pop
sub
addb
sbb
pop
pop
es
sbb
dec
cwtl
push
push
xor
push
int3
pushf
mov
inc
orb
test
inc
mov
xor
cmc
push
mov
jns
lahf
push
enter
cmp
mov
or
mov
xchg
int
into
mov
xchg
push
popf
jns,pn
xchg
inc
add
testb
dec
jbe
mov
pop
or
addb
add
mov
popa
sbb
dec
jg
xchg
std
divl
add
sbb
outsb
jle
jge
imul
cmp
sub
xchg
mov
pop
bound
rorb
test
jnp
fs
add
ds
sbb
and
cmpsb
or
pop
jne
push
inc
or
out
fdivl
push
das
fidivs
pop
data16
hlt
sti
shrb
dec
sbb
jo
js
and
cmp
xor
imul
dec
pop
daa
das
addr16
popa
add
and
cmc
sar
adc
jmp
bound
ds
cli
jge
add
pop
push
inc
mov
add
pop
es
adcl
pop
add
int
rcrb
add
xchg
mov
outsb
jge
push
adc
data16
arpl
push
push
cmp
test
xchg
ds
xor
scas
xchg
ret
cmp
mov
xor
jecxz
dec
inc
add
subl
repnz
pop
inc
insb
and
out
leave
cmp
insb
xchg
jle
popa
in
les
xor
pop
or
pushf
es
insb
xor
fwait
inc
das
in
sub
mov
cmpsb
dec
loop
fsubrs
add
mov
rcrb
movsb
xchg
mov
cmpsl
imul
inc
repnz
ucomiss
out
std
insb
cwtl
cmp
aas
loopne
insb
ret
sbb
dec
and
ret
mov
lcall
scas
inc
and
xor
cltd
cmp
xchg
pop
push
rcrl
lock
add
aam
xchg
jg
scas
push
add
add
jne
les
push
cmp
popa
push
jbe
orl
push
push
bswap
dec
sub
adc
push
scas
jg
jno
stos
sbb
dec
pushf
push
xor
andl
fcomp
cmp
push
add
outsb
mov
xor
orl
repz
cmpsl
mov
test
lds
add
jnp
push
negl
xor
pop
cmc
jnp
xor
push
cmp
incb
add
rorb
mov
push
sbb
cmc
and
lds
and
imul
test
incb
inc
sub
repz
xchg
iret
mov
mov
sbb
push
pop
sbb
cmp
add
pushf
xchg
cld
pop
add
out
cmp
cli
dec
pop
pop
mov
ror
xchg
ljmp
add
shll
xchg
mov
hlt
or
inc
cmp
and
and
xor
xor
add
cmp
stos
sub
and
stos
sub
testb
jecxz
cmp
xchg
lret
roll
add
add
sbb
add
je
lahf
movsl
xor
ja
jp
pop
int
add
adc
add
add
pop
pop
xchg
inc
jne
das
push
xchg
add
pop
mov
clc
out
insl
cmpsb
popf
sbb
in
loop
fimuls
jp
pop
mov
dec
inc
mov
call
add
add
fldcw
iret
xchg
pushf
mov
mov
enter
push
push
jb
or
aas
shlb
add
add
cmpsl
jg
hlt
lea
mov
in
cwtl
pop
jno
nop
testb
rep
je
int3
sbb
je
adc
xor
jb
sbb
and
mov
fstpl
mov
sbb
sti
add
mov
ljmp
xor
inc
popf
in
add
pcmpeqw
dec
sub
jle
pop
cmpsl
adc
mov
and
xor
mov
rorb
sbb
mov
mov
pusha
addl
mov
sub
hlt
fisubrs
push
inc
cmp
xchg
mov
xchg
mov
fistpll
jnp
int
aaa
shll
inc
ret
adc
testl
push
leave
push
into
push
inc
insl
std
outsb
imul
xorb
loopne
stc
inc
cmp
xor
lret
pop
popa
xor
mov
in
mov
or
mov
push
push
sahf
and
cmpsl
dec
ljmp
popf
fadds
adc
test
cmp
scas
repnz
push
dec
sub
sbb
sub
mov
push
int3
inc
lret
mov
sbb
fdivp
pusha
stos
mov
in
xor
and
xor
in
sub
and
push
aaa
pop
sbb
shrl
dec
inc
xor
add
out
inc
add
xor
push
shrb
bound
sub
sub
or
or
ficoms
sbb
lcall
jg
add
sub
arpl
mov
jbe
xor
fbstp
and
fistpl
xchg
fmull
xchg
sub
and
shrl
in
hlt
mov
aas
stos
dec
dec
ds
stc
mov
hlt
lods
mov
test
mov
shlb
xchg
fwait
bound
lret
mov
mov
jb
popa
jae
jle
push
mov
negb
push
dec
outsb
sub
xor
inc
lods
out
imul
leave
arpl
pop
subb
ret
insl
or
mov
add
mov
pop
push
mov
jl
cli
push
and
adcb
xor
gs
pop
nop
mov
ret
push
xchg
jns
out
ret
loop
add
pushl
lea
add
sub
or
xchg
fldt
xchg
rolb
iret
into
movsl
pusha
adc
ffreep
dec
xchg
mov
or
add
mov
mov
mov
in
stos
mov
xchg
scas
ficompl
pusha
xchg
push
mov
test
sti
mov
sbbl
loopne
addr16
ret
movsb
sub
xor
add
and
cs
sarb
bound
subl
mov
leave
into
les
inc
or
jmp
pop
and
lock
and
repnz
popf
sahf
insl
pop
and
push
inc
sbb
and
adc
or
out
mov
dec
enter
lods
iret
push
sub
rclb
outsl
xchg
pusha
aaa
cwtl
or
std
and
addb
inc
int3
push
sbb
rcrb
enter
setne
dec
ds
mov
dec
cmpsl
je
and
sub
shlb
cs
nop
xchg
mov
mov
xchg
test
scas
mov
mov
ret
pusha
and
dec
mov
idivb
mov
or
mov
adc
pop
jns
inc
jle
gs
dec
ficoms
or
mov
leave
popa
lcall
cltd
push
hlt
dec
fstpt
dec
cmpsl
and
jecxz
in
and
or
jne
add
inc
mov
inc
loop
inc
cmp
dec
pop
ds
and
jno
pusha
shl
mov
pusha
in
insl
cmc
push
mov
inc
xor
imul
or
mov
test
xor
push
or
imul
jl
pop
out
pop
and
adc
fwait
cmp
jno
xchg
or
or
inc
inc
lret
popa
call
scas
int
pop
jnp
fimull
xor
shll
loopne
leave
xchg
or
rolb
test
cmc
fistpl
enter
ljmp
sbb
adcb
cmpsb
add
enter
xchg
cmp
mov
and
imul
in
mov
sbb
shl
xor
push
fs
mov
imul
movsl
cmpsb
shlb
xchg
addb
jae
aad
sbb
inc
and
pop
push
xchg
jns
out
leave
pop
sub
ret
xor
shll
pusha
pop
or
push
mov
xor
fisubrl
aad
adc
sbb
push
fnstcw
adc
adc
fxch
add
sbb
outsl
pop
or
dec
mov
in
lret
jns
in
test
enter
popa
add
mov
dec
or
notb
int3
mov
cltd
or
repz
jae,pt
sahf
jo
mov
mov
in
scas
push
test
xchg
push
mov
add
and
mov
cmp
xlat
push
push
cmp
testb
mov
cmpsl
int3
dec
mov
lea
add
sbb
push
xchg
dec
adc
test
or
arpl
mov
pop
fidivrs
adc
scas
add
pop
push
sbb
cmpsl
dec
test
fs
mov
test
clc
jnp
int
mov
xchg
mov
and
out
int3
sti
dec
or
popf
sub
pop
test
mov
lcall
outsl
das
adc
cwtl
inc
pop
or
test
add
daa
imul
add
sub
test
adcb
leave
imul
add
fwait
xor
outsb
mov
xchg
push
outsb
repnz
and
inc
or
xorb
stc
adc
lods
lahf
fdivl
jo
mov
lea
imul
xor
ffree
cmpl
xchg
adc
in
xchg
cmp
xor
sub
jae
shll
xchg
push
dec
mov
add
add
mov
rcr
stos
mov
jbe
popf
xlat
inc
mov
in
xchg
adc
fsubrp
xchg
addb
push
sti
rcll
leave
inc
mov
cltd
pop
loop
call
xor
ret
mov
addb
daa
push
jecxz
sub
mov
addr16
mov
pop
pop
gs
test
les
xor
pop
jnp
dec
pop
imul
jg
or
mov
bound
and
jle
fcoms
into
push
xchg
xor
adc
into
cmpsb
jns
imul
jmp
loop
jo
daa
dec
pop
loopne
sbb
adc
fcomps
xor
sub
dec
into
mov
lds
mov
adc
ljmp
inc
adc
adc
lret
ljmp
popa
sub
xorl
push
bound
and
mov
cs
daa
in
arpl
dec
lods
cmpsb
mov
loope
test
mov
in
aas
pop
mov
outsl
xchg
add
fdivrs
adc
and
incb
push
push
cs
cmp
lods
pop
push
fadd
std
dec
sub
sti
stc
rorb
or
fwait
pop
rcll
popf
xorl
or
mov
data16
jmp
push
inc
add
adcb
das
jno
or
lods
cmp
insl
adc
sbb
pop
xor
push
fwait
je
dec
mov
adc
or
jmp
or
push
popa
fcoms
jnp
sub
bound
les
xchg
je
sahf
mov
add
into
in
sbb
xchg
push
imul
mov
xor
cmp
dec
jecxz
hlt
outsl
sub
loop
test
xor
xchg
arpl
xor
xchg
lret
shl
rcrl
mov
repz
dec
xchg
test
outsl
pop
mov
inc
jbe
aas
sbbb
dec
mov
jae
inc
sbb
sbb
mov
movsl
jns
fimull
loope
mov
lret
push
xor
hlt
fwait
sub
loope
or
push
insl
sbb
cmpsl
shl
add
out
ds
sbb
pop
lret
pop
loop
ud0
mov
push
mov
sub
adc
leave
xor
dec
mov
pop
xor
gs
mov
addr16
or
adc
ret
aam
out
lds
xchg
push
pusha
nop
inc
adc
scas
sub
mov
or
test
jnp
jae
add
adc
inc
insl
mov
adc
daa
sbb
push
push
push
cmp
push
gs
pop
push
lret
xor
adc
cmp
rclb
lods
push
daa
shlb
stos
loopne
lods
loope
hlt
inc
sti
jmp
imull
push
loop
hlt
cld
jne
in
js
in
dec
mov
test
cmp
sbb
mov
push
mov
out
xchg
xchg
leave
mov
pusha
loopne
arpl
sbbl
inc
in
sub
dec
dec
sbb
hlt
push
lock
inc
or
xor
dec
je
pop
shrl
cmpsl
mov
mov
xor
imul
mov
jge
adc
mov
push
in
push
mov
stc
dec
xchg
aaa
jae
dec
add
out
arpl
cmc
lods
sub
test
sub
repnz
add
push
jecxz
sub
xchg
roll
bound
repnz
xor
mov
rorl
push
xchg
jnp
outsb
or
inc
lret
adc
add
push
xor
clc
pop
pop
pusha
sbb
push
jns
out
lods
mov
inc
rorb
mov
adc
inc
subl
loopne
ret
arpl
cli
sub
sub
jge
imul
mov
jns
cmp
lock
fimull
movsl
jecxz
inc
lds
push
test
sbb
mov
dec
popa
f2xm1
out
xor
xor
mov
cmp
scas
mov
inc
mov
xchg
push
mov
mov
xchg
imul
inc
xchg
stos
call
mov
subb
inc
je
add
sub
sbb
mov
pop
push
xchg
and
and
add
inc
mov
aaa
scas
pop
out
sahf
or
inc
pop
xchg
fdivrl
dec
sbb
sub
aas
cs
push
push
jae
pop
test
insb
hlt
inc
mov
iret
fimull
test
xor
loope
dec
xchg
adc
mov
or
push
sbb
jne
adc
mov
mov
adc
push
jle
sbb
xor
jno
lods
gs
or
mov
popf
in
xor
scas
repz
or
stos
push
cmovno
pop
popa
push
aaa
ret
mov
sbb
sti
into
rcll
into
cmpsb
imul
inc
in
adc
pop
leave
aas
jl
adc
cmp
fwait
cmp
adc
fisubrl
lds
daa
stos
xchg
pop
push
gs
shlb
sbb
dec
test
dec
mov
in
int3
addr16
jmp
aad
fisubl
dec
sbb
js
test
fdivrs
leave
imul
sub
add
push
xor
call
pop
std
pushw
jne
movsl
xor
sbb
pusha
fs
das
pop
hlt
adc
add
pop
pop
mov
push
jmp
cmc
test
stos
mov
call
orl
iret
add
mov
or
iret
js
arpl
xchg
out
mov
pop
scas
push
insb
gs
sub
sbb
dec
cmp
dec
mov
mov
das
leave
sbb
xor
jmp
mov
movsb
push
inc
xchg
cmc
outsb
test
or
push
or
adc
pop
add
xchg
sub
add
insb
sbb
shll
movsb
ds
or
xchg
cs
mov
dec
xchg
sbb
xchg
mov
pop
fldt
adc
sub
mov
pop
pop
arpl
inc
sbb
icebp
or
and
push
mov
xchg
mov
pop
test
bound
in
rorl
es
inc
xor
add
jp
cmp
into
jb
mov
lods
jno
fdivrl
sbb
xchg
inc
jnp
xchg
jno
rcrl
push
push
dec
sahf
jbe
add
dec
xchg
fs
test
mov
mov
int3
add
pushf
xlat
mov
test
mov
and
push
nop
cmp
out
cld
mov
jne
sbb
xchg
popa
mov
loope
adc
mov
in
mov
mov
xchg
and
std
xchg
pop
xchg
cmp
add
outsb
mov
jae
add
push
insb
ds
adc
add
daa
sub
pop
add
xchg
ficompl
out
jno
fcmovu
mov
ljmp
or
or
ret
sub
xor
xchg
cmp
push
js
js
mov
test
in
pop
inc
pop
cmp
inc
bound
repnz
repz
mov
sub
into
adc
ja
xchg
dec
test
sbb
or
jnp
xor
iret
sub
cmc
dec
pop
adc
test
pop
add
testl
mov
mov
or
fwait
rclb
and
jns
mov
and
mov
sub
push
dec
js
adc
xlat
or
inc
xor
lds
inc
add
add
push
add
movsb
pushf
test
repz
inc
pop
mov
jge
out
adc
mov
nop
stc
xor
ss
mov
inc
xor
dec
out
xchg
es
pop
dec
lcall
inc
sub
inc
mov
pop
faddp
or
mov
repz
mov
ret
fs
xchg
and
push
js
data16
mov
push
xchg
pop
jl
jle
cmpb
mov
push
hlt
icebp
pusha
dec
test
int3
int
lret
xor
sbb
nop
loopne
testl
pop
cmp
push
in
cmp
push
aas
adc
cmp
nop
push
pop
mov
scas
xor
push
sub
pusha
les
mov
mov
das
pushf
pop
scas
jb
mov
adc
mov
push
mov
push
mov
sub
mov
icebp
shl
xchg
xor
fs
xlat
xchg
orb
std
les
push
cmpsb
xor
xor
cmp
mov
xor
ds
sarl
mov
adc
xchg
ficomps
adc
mov
add
sub
addl
pop
sar
in
push
mulb
add
adc
shll
outsb
mov
and
pminub
test
mov
cmpsb
idivb
push
cli
jl
mov
lahf
cltd
pop
or
popa
or
xchg
es
mov
jb
cmp
je
lock
sbb
imul
push
iret
push
add
lret
jp
hlt
sub
pusha
pusha
or
add
dec
addr16
adc
sbb
jbe
inc
pop
cli
test
or
call
cmpsl
sbb
add
sub
push
add
add
dec
pop
dec
pop
adc
aam
jg
cmp
fdivs
gs
dec
stos
sub
add
sarl
push
push
mov
mov
jb
fxch
fsubl
xchg
test
mov
fwait
push
mov
stc
dec
mov
in
pop
mov
clc
add
pusha
enter
mov
push
mov
mov
xor
sbb
xchg
add
and
movsb
inc
daa
scas
inc
cmp
insl
or
stc
mov
jle
out
scas
fdivs
sahf
xor
imul
cld
or
sub
push
xchg
sarl
fbstp
stc
cmc
mov
inc
shll
scas
std
sub
adc
push
orb
pop
aas
mov
mov
test
gs
jp
jmp
xor
inc
pop
dec
mov
addl
jb
cld
xchg
jae
sub
sbb
mov
ss
ss
dec
nop
les
dec
loope
and
cmpsb
lret
dec
inc
insl
mov
bound
push
sbb
fwait
jb
mov
movsb
sti
or
addb
mov
mov
loopne
rcr
jg
or
sbb
add
dec
ja
stos
fwait
mov
mov
out
jae
inc
mov
ds
add
mov
xchg
adc
jp
pop
mov
xor
xor
mov
pop
xor
pcmpeqd
das
mov
inc
lods
imull
xor
xchg
into
mov
js
rcrl
sahf
xchg
add
int
xchg
mov
js
xchg
sbb
add
xor
outsb
xchg
aas
sahf
lea
icebp
stos
addb
fnsave
jmp
pushl
in
pushw
pop
sbb
stc
push
dec
jl
mov
and
jb
pusha
test
mov
adc
or
jle
or
mov
test
sub
jne
cs
or
fidivs
push
mov
jecxz,pn
adc
lods
popf
in
xchg
mov
dec
xchg
mov
sub
out
sub
xchg
in
popf
cmp
push
push
popa
les
out
outsl
jnp
into
inc
sbb
adc
adc
pop
or
mov
mov
mov
lock
push
mov
int
pop
ret
cmp
out
add
hlt
mov
repz
fsubrl
sub
lods
xor
adc
test
hlt
push
dec
les
dec
dec
mov
dec
fdivl
daa
dec
xor
jnp
push
mov
inc
mov
xor
fs
mov
ss
and
inc
outsb
xchg
shll
pusha
imul
test
push
sbb
fnstcw
stc
mov
pop
cld
sbb
add
out
test
lods
xchg
mov
cmpl
or
and
ror
or
sbb
orb
pop
and
mov
shl
or
loope
push
add
push
jmp
les
mov
ret
std
sbbb
mov
bound
mov
movsl
sbb
add
add
lods
outsl
mov
sarb
rol
inc
sbb
arpl
insl
mov
mov
rol
negb
xchg
shrb
mov
stos
inc
clc
cmpsb
call
or
icebp
pop
cmp
adc
xor
sbb
lahf
push
incl
test
mov
jne
add
jmp
push
pop
imul
xor
pop
mov
push
push
enter
idiv
loopne
std
subb
sti
mov
mov
test
mov
lcall
xor
cmpsl
cmpsl
dec
add
xor
pop
popa
scas
sub
mov
pop
popa
dec
divb
pop
stos
repnz
fs
inc
insb
sub
test
xor
inc
and
mov
in
xlat
js
push
xor
mov
mov
test
jmp
bnd
adcl
mov
scas
das
icebp
and
and
xchg
cmp
or
push
icebp
dec
ret
sbb
xor
mov
mov
add
arpl
and
push
daa
or
sub
and
in
xor
add
hlt
sub
lcall
xchg
jle
adc
push
cltd
cmpb
fs
repnz
loop
daa
push
jno
mov
or
int3
dec
clc
lcall
push
xor
fcoml
pusha
jns
rcrb
xchg
or
orb
jle
adc
lods
insb
movsb
push
mov
adcb
testb
add
add
je
push
cmc
dec
sbb
sbb
imul
sub
ss
xchg
adc
push
hlt
or
push
cmpl
movl
stos
push
and
or
xor
and
push
mov
clc
mov
int
or
sbb
cs
sub
mov
insl
div
shl
sub
or
int3
inc
xchg
scas
outsl
das
mov
inc
inc
loop
push
fisubs
scas
xchg
das
rcl
jg,pt
push
fisubl
pop
test
and
incl
sbbb
fnstenv
stos
icebp
xchg
cwtl
sub
clc
je
sbb
lahf
call
inc
push
inc
shrb
push
sbb
rcl
or
cmpl
pop
mov
cmp
scas
dec
xor
cmpsb
sbb
mov
mov
sbb
cmc
or
out
add
inc
mov
std
ja
lret
dec
fldt
pop
lock
mov
cmp
jl
fsub
mov
inc
dec
fcomps
xchg
pop
nop
pop
push
push
mov
jnp
jg
lahf
sub
jbe
and
in
and
cmpsb
or
adc
dec
cld
es
or
sbbl
add
pop
movsb
movsl
ds
adc
cld
or
pop
in
aaa
ds
jo
subb
xchg
mov
testl
lds
stc
sub
mov
and
movsl
fimull
iret
dec
daa
test
push
dec
pop
sbb
cwtl
nop
mov
scas
mov
sbb
aad
jb
mov
xor
adc
inc
jl
push
inc
int
stos
cmpsb
xor
inc
jp
insl
xchg
push
imul
mov
cld
sub
test
js
mov
xchg
mov
cs
adc
arpl
jnp
pop
push
jns
shrb
or
fadd
jle
lds
ret
or
daa
lret
les
push
mov
cld
mov
xlat
std
push
inc
push
and
enter
jno
jl
shrb
or
hlt
incl
ret
outsb
mov
and
cltd
or
popa
sbb
pop
and
jg
dec
or
iret
roll
jg
push
adc
xor
jge
add
add
mov
inc
jg,pt
push
dec
xchg
sarb
andb
sbb
push
mov
sbb
lock
bound
push
lds
sub
in
xchg
testl
aam
add
push
shrb
jecxz
mov
pop
sub
push
popa
pop
mov
lcall
or
push
fisubs
leave
cwtl
test
push
adc
push
daa
cmc
in
mov
addr16
jl
lods
add
and
testl
fsubrl
ss
cmp
push
es
aas
xchg
pop
insb
inc
inc
push
adc
subb
insl
outsb
add
mov
jl
or
ss
mov
rorb
xchg
dec
in
cmc
sbb
loop
dec
dec
gs
cmp
ljmp
ret
push
stos
xor
popa
pushf
push
sbb
or
sbb
sbb
xchg
fadds
test
gs
sti
cmp
es
add
pop
pop
out
pop
cltd
imul
pusha
scas
lock
jbe
inc
aad
push
mov
adc
call
push
mov
pop
movsl
repz
pop
and
adc
enter
inc
sub
in
inc
pop
ds
xchg
pop
popa
mov
push
aad
das
mov
and
pop
adcl
pop
lods
popf
imul
xor
dec
pop
aam
or
pop
sbb
out
mov
lcall
mov
jns
jp
scas
mov
mov
sbb
mov
cmp
dec
rorl
or
iret
incb
jno
ds
fdivl
mov
and
sar
jno
ficomps
and
push
dec
xchg
mov
jmp
in
rcrl
cli
xchg
in
in
loop
pop
scas
and
jbe
pop
pop
dec
and
dec
mov
jmp
sbb
bound
adc
mov
mov
setb
push
lock
cmpsl
jecxz
sub
push
dec
popa
ret
or
mov
jl
daa
mov
adc
jg
adcl
out
pusha
cmc
push
in
clc
push
inc
xchg
out
xchg
dec
mov
addr16
xchg
inc
cmp
inc
jno
push
xchg
mov
or
out
jns
or
data16
fadd
push
or
pop
clc
fsubl
fwait
in
xor
test
rcr
pop
out
xchg
mov
enter
xor
jno
in
dec
sbb
push
bound
sbb
shlb
roll
push
push
sbb
sub
jae
push
fucom
out
dec
cmp
loopne
in
dec
std
or
cmpsl
in
jb
mov
adc
mov
sub
xorb
inc
mov
jns
xor
sbb
fiadds
add
and
test
mov
sub
jb
cmp
mov
mov
jbe
xor
sarb
cmp
mov
mov
push
xchg
lea
push
xchg
divb
xor
sub
and
sbb
jmp
cmp
js
daa
rcr
pop
pop
and
adc
fistpl
cmovp
add
bound
add
sbb
adc
cmpsb
cli
popa
or
mov
jne
jo
ss
inc
add
inc
in
test
dec
push
xor
jae
inc
inc
testb
scas
mov
xor
out
out
lock
popf
cld
dec
xorb
filds
vrcpps
pop
push
sbb
xor
sub
jnp
fldl
arpl
mov
inc
xchg
outsb
cmpsl
into
andb
sbb
mov
add
jl
sbb
adc
lret
ret
icebp
insl
orb
pmuludq
pushf
mov
pop
push
lods
add
rcll
jl
push
jg
inc
repnz
add
lcall
dec
repnz
test
lret
lock
cmp
lods
in
roll
mov
clc
dec
xchg
mov
mov
ret
add
sub
add
mov
scas
out
cmp
ret
pop
scas
push
push
cwtl
xchg
mov
test
mov
cmp
rcrl
out
test
in
add
lods
out
pop
push
je
mov
pop
or
xchg
jge
xchg
hlt
mov
mov
push
and
dec
insl
ret
imul
sub
out
movsb
inc
or
insb
sbb
popa
pop
and
jge
jbe
mov
or
icebp
in
ds
mov
sbb
shll
and
jb
jno
lds
adc
arpl
aaa
loopne
ret
loopne
jbe
cltd
das
xchg
icebp
cltd
loope
mov
mov
fisubl
mov
cmp
jl
pop
cmpsb
or
nop
hlt
sbb
adc
call
mov
pop
mov
or
mov
dec
mov
sbb
mov
xchg
aas
xor
cs
imul
xor
xchg
movsb
cmp
aaa
dec
imul
push
and
int
ret
cmpsb
push
pop
dec
dec
sub
or
imull
scas
imul
sbb
fs
jb
int
jmp
scas
lret
ret
mov
cmpsb
xor
fwait
testl
gs
mov
test
fstps
mov
jb
inc
scas
rorb
xchg
mov
test
pop
pcmpeqb
stos
inc
inc
xchg
jmp
push
gs
les
mov
incl
ljmp
jbe
inc
and
popa
cmp
aaa
xor
aaa
out
inc
cmovns
pop
hlt
push
xchg
test
jle
ret
stos
dec
mov
vmovq
mov
lcall
stos
jmp
xchg
inc
inc
pop
jnp
les
cwtl
sub
ret
lock
xchg
xchg
out
in
dec
in
mov
popa
fsubrl
jge
or
cmp
stos
int3
dec
inc
push
out
jns
pusha
mov
cmpsl
mov
in
inc
mov
ja
add
cld
or
jp
sub
mov
fidivrs
ds
pop
repz
shlb
sub
mov
cltd
pop
leave
jnp
sub
sub
mov
cmpb
add
addb
loop
es
dec
fsts
cmpsl
mov
scas
or
jbe
fwait
jp
xlat
outsb
adc
push
adc
ret
or
or
dec
and
lcall
repnz
cli
jno
inc
std
pop
movsl
fdivrl
loope
add
mov
mov
sub
divl
std
idivl
xor
test
shlb
dec
pop
out
push
pop
sub
mov
and
pusha
or
cmp
orl
shlb
pusha
and
lret
mov
dec
sbb
lret
push
aas
loopne
arpl
push
sub
popa
repz
fidivs
cli
push
mov
mov
stos
mov
or
movsb
mov
aaa
mov
fisttpll
in
pop
dec
cmpsl
pop
mov
out
cmp
add
in
and
outsl
pop
push
sub
js
mov
fldcw
xchg
repnz
xchg
stos
ret
adc
cmp
into
push
jge
and
lods
fs
call
stos
mov
sub
sbb
fsubl
sbb
mov
push
push
scas
sbb
into
inc
call
adc
nop
jmp
sar
mov
and
mov
fs
and
cmp
pop
mov
aad
roll
dec
fdivl
mov
add
pop
repz
hlt
dec
mov
bound
fnstenv
insb
lods
pop
jmp
inc
fnstsw
mov
into
jo
test
cmpsl
aas
cli
cs
push
outsl
mov
sbb
stc
xor
xlat
fisubs
pop
xor
jecxz
inc
pop
mov
ljmp
cmp
pusha
imul
mov
fidivl
mov
inc
scas
xchg
mov
rorb
cmp
es
pop
sub
inc
popf
pop
rolb
sub
xor
add
push
ret
out
cwtl
xchg
mov
inc
adc
outsl
negl
paddsb
lahf
push
int3
jb
jns
jp
ja
mov
and
push
jmp
pop
into
test
mov
push
adc
cmpl
inc
dec
jle
xor
push
pop
mov
or
or
jl
mov
xor
decb
aam
movsb
inc
jae
xor
sub
pop
xchg
sbb
pop
or
cwtl
jb
mov
pushf
mov
mov
pop
xor
inc
nop
inc
push
and
adc
subb
sbb
push
shlb
push
add
push
mov
or
dec
sahf
pop
pushf
and
cmpsl
and
adc
jb
or
rcll
pop
sub
lret
push
or
xchg
dec
jmp
rcrb
jmp
pop
fwait
mov
lock
push
dec
shl
adc
ljmp
pop
lahf
popa
fsubl
repz
fs
addr16
xor
nop
sti
clc
repnz
int3
daa
jmp
inc
je
cmpsl
pop
adc
adc
sub
stos
inc
jbe
test
mov
add
pop
or
cwtl
stos
add
or
add
shlb
push
cmp
arpl
xor
add
jmp
jbe
pop
mov
xchg
pop
mov
add
push
insl
sarl
adc
add
xchg
dec
clc
repz
movsl
lret
mov
pop
and
insb
sbb
std
aam
test
xlat
sbb
push
data16
and
les
cmc
popa
das
stc
adc
out
mov
mov
and
insb
shrl
add
mov
dec
xchg
add
inc
daa
mov
sub
mov
test
cmpsl
inc
out
loope
dec
test
insl
aam
add
clc
push
mov
das
test
xor
test
sahf
add
pop
movsl
sub
arpl
scas
push
mov
xchg
sub
jmp
pop
aam
frstor
outsb
pop
cmp
scas
mov
leave
dec
dec
mov
movsl
fxch
fisubs
push
repnz
sub
dec
fnstenv
std
pop
pop
xor
andb
imul
mov
mov
sbb
dec
dec
ror
imul
movsl
sub
or
xchg
iret
int
aaa
ja
or
cld
pop
das
pop
popa
aaa
loop
pop
mov
je
out
imul
push
aad
add
ficompl
mov
pop
in
loope
inc
pop
push
pop
pop
fcmovne
push
pop
sbb
aaa
lcall
lds
int3
popf
lods
ljmp
mov
mov
cld
push
jbe
xadd
xchg
je
jmp
out
adcb
adc
stos
test
imul
mov
and
mov
dec
jb
xor
mov
rol
dec
cmp
arpl
adc
pop
sub
stos
ja
xor
xchg
sarl
push
lods
add
mov
in
cmpsl
pop
mov
rcll
leave
push
mov
push
arpl
add
inc
rol
cmp
xchg
into
andb
imul
xchg
sahf
aad
add
int3
sti
sub
into
cmp
xor
mov
les
fisubrs
adc
popa
mov
fisubl
fisttps
mov
xchg
int
and
pop
lock
loope
test
mov
test
add
arpl
xchg
xor
xchg
or
jae
inc
in
adc
movsl
loop
popf
daa
lahf
test
jg
cmp
sahf
jns
das
in
jmp
mov
out
sbb
inc
pop
mov
dec
xchg
xor
aaa
lock
add
pop
push
rclb
push
jl
dec
adc
lret
pop
mov
cmp
sub
pop
movl
out
test
lds
pop
popa
jae
xor
adc
sti
fs
scas
dec
inc
cwtl
or
in
jg
sarl
mov
repz
dec
push
adc
and
ficompl
jo
mov
mov
nop
test
fldt
daa
mov
lret
aam
cmc
enter
test
imul
inc
dec
and
cltd
add
fsts
dec
xor
or
or
rclb
and
mov
je
ljmp
cmpsb
pop
pop
lods
lret
sub
mov
fmuls
jg
aam
push
sbbl
out
sahf
add
add
scas
jge
and
add
popf
outsb
push
cli
ja
pop
es
cmpsl
pop
xor
or
mov
pop
imul
repnz
xor
hlt
test
outsb
jmp
add
push
sbb
ficoms
add
outsb
aam
nop
jle
lods
rol
sub
mov
movsl
jecxz
cmc
imul
mov
sbb
and
loopne
cli
push
mov
push
mov
jne
xchg
fsubl
les
sub
mov
mov
mov
or
mov
add
lock
subl
lcall
push
rcrb
popa
add
and
or
and
cmp
dec
adc
add
sub
jp
mov
sbb
hlt
mov
sub
xor
popa
inc
jle
fdivrl
xchg
sub
sub
xor
lods
je
push
push
or
lods
rclb
xor
and
sahf
out
xchg
pushl
ljmp
adc
dec
adc
inc
jo
xorl
sbb
stos
or
cmp
xor
jle
imul
sub
fimull
inc
leave
add
das
inc
or
mov
lahf
adc
fwait
cltd
sahf
pop
stos
xchg
rcll
icebp
andb
dec
out
or
sub
mov
jmp
adc
dec
hlt
jne
push
xchg
jns
insb
pop
loope
insb
mov
and
orl
adc
sub
jle
cld
mov
push
fcomps
push
lock
int
mov
lds
loop
inc
sbb
add
push
sub
xor
xchg
daa
arpl
mov
out
jns
into
gs
pop
dec
iret
mov
lods
push
fidivs
add
mov
push
loopne
test
sti
aaa
add
mov
scas
dec
xor
lods
mov
aas
add
sub
cmpsl
pop
aas
sbb
inc
push
mov
inc
adc
pop
push
sub
out
sarb
pop
pusha
data16
das
movsb
out
sahf
clc
xor
xor
dec
pop
stos
leave
or
and
mov
jge
push
call
push
int3
cmp
popf
shlb
std
inc
pop
and
xlat
push
pop
cmpb
push
add
mov
les
fs
inc
push
mov
jnp
popa
rcrb
mov
lahf
pop
fldl
jo
xchg
pop
adc
add
inc
adcl
cmp
or
test
fstps
add
std
ret
insb
xor
push
mov
jb
xchg
pop
fwait
out
cmp
ret
nop
icebp
ja
ret
dec
or
push
int3
pop
inc
inc
xchg
pop
leave
push
jns
inc
cltd
leave
lret
mov
xlat
pop
arpl
mov
mov
mov
pop
lock
mov
nop
jg
ja
sub
out
inc
mov
xor
add
adc
loopne
cmp
lds
cmp
jne
push
aad
outsb
lcall
in
gs
xor
adc
cmpsl
aaa
repnz
or
in
bound
dec
push
pop
loopne
xchg
inc
cwtl
mov
mov
add
mov
pusha
lret
popf
clc
scas
mov
std
in
sub
shrb
ret
xchg
pusha
daa
xchg
cs
fistps
mov
mov
push
mov
mov
pop
mov
fnstcw
add
xor
mov
inc
jne
and
sbb
lods
stos
xchg
stos
mov
xchg
jnp
dec
shrb
pop
insl
sub
fmull
repnz
or
mov
jo
inc
lret
cmp
cmp
daa
adcl
sbb
mov
fwait
out
ja
and
push
pop
jl
inc
push
xor
les
shll
inc
xchg
push
rcr
and
add
inc
es
dec
xor
data16
xor
add
cmpb
cmp
std
inc
push
nopl
pushf
cwtl
xlat
call
decl
push
dec
fsubs
leave
mov
xchg
rcll
lea
mov
inc
xor
scas
dec
jp
or
push
pop
ds
and
sti
push
jge
pop
mov
ds
jg
out
std
shlb
loopne
mov
scas
xchg
adcl
inc
lds
cmp
fwait
xlat
scas
out
js
xchg
xchg
mov
and
or
push
ds
or
or
outsb
lcall
pop
jecxz
and
push
cmpb
fadds
push
dec
pushf
sub
add
fdivs
push
lret
inc
adc
push
sub
cmp
inc
lcall
inc
adc
daa
add
inc
pusha
add
fs
int
jp
sbbb
add
jne
and
and
pop
xchg
aam
decb
push
mov
pop
xlat
and
imul
dec
and
out
mov
sti
adc
aad
ss
mov
xor
clc
jbe
xchg
xchg
cmp
adc
xor
push
nop
in
mov
mov
sub
loope
and
xchg
jnp
insb
mov
xor
pop
dec
mov
loope,pn
pop
in
incb
lret
test
fnsave
pop
ret
push
mov
stos
xor
pushf
addr16
pop
call
pop
cmpb
jnp
inc
stc
inc
xor
movsb
aam
mov
es
cld
flds
sbb
xchg
mov
mov
pop
add
icebp
sbb
xor
rclb
roll
leave
loop
push
pusha
in
fsubl
push
sbbl
in
sub
into
imul
and
dec
fdivrs
subl
cmp
stos
xor
cmc
inc
or
sbb
hlt
mov
push
insb
shlb
jl
lea
fiaddl
clc
push
insl
fsubs
inc
shrl
in
push
pop
pop
shrl
or
or
mov
movsl
inc
bound
mov
dec
imulb
scas
mov
sub
add
es
jle
xchg
dec
aaa
xor
fildll
sahf
cmp
stos
es
dec
or
sahf
mov
xchg
mov
adc
xchg
add
inc
leave
fs
and
xor
push
insl
jle
in
adc
jb
sahf
pushf
mov
sub
insb
icebp
popa
lahf
xchg
and
pop
xor
add
jle
int3
mov
idivb
insb
pop
subb
movd
sbb
andl
mov
pop
xor
adc
lret
incb
mov
movsb
leave
inc
cltd
mov
scas
and
push
and
cmp
int3
mov
dec
ret
mov
lods
test
fwait
das
pop
stos
jno
sbb
enter
add
fs
cltd
fists
mov
test
or
xlat
push
mov
sub
fcomps
rorb
cs
roll
sub
sub
lods
cmpsl
rcrl
mov
dec
mov
sbb
mov
pop
xchg
das
nop
mov
add
mov
les
xchg
test
sarb
jp
shlb
jno
arpl
jmp
xor
repnz
dec
cmovl
inc
insb
nop
scas
or
cmc
lods
nop
pop
pushf
sub
arpl
mov
ds
cs
call
lods
stos
jecxz
jp
ret
in
cmpsb
mov
test
int
repz
mov
push
mov
pop
movsb
adc
push
in
mov
sbb
pop
sbb
ljmp
xor
mov
jp
jbe
sbb
loop
mov
test
xchg
popf
fsubrl
xor
mov
orb
mov
xor
mov
sub
mov
or
leave
in
cmc
pushf
cli
pop
cwtl
mov
adc
push
lock
cmc
shlb
lods
sbb
pop
shrb
ss
enter
adc
xchg
xchg
fwait
loopne
iret
pushf
xor
dec
adc
aas
loope
stos
adc
ret
and
addb
xchg
lock
lret
or
mov
faddp
rorb
xlat
cmp
ljmpw
popa
scas
jle
gs
mov
scas
pop
lods
rcl
mov
and
imul
loopne
stc
jnp
outsb
cmp
enter
cmp
push
inc
adc
or
adc
sbb
inc
pop
mov
mov
scas
and
push
inc
push
lahf
in
repnz
mov
jb
jns
inc
sbb
add
sti
je
out
sub
sub
vblendps
jecxz
mov
push
fwait
mov
pop
xchg
sbb
add
or
dec
add
cmp
and
cli
aaa
mov
in
pop
popa
sub
lret
sub
imul
push
mov
andb
pop
mov
jb
and
mov
stc
mov
mov
sbb
and
int
cwtl
push
inc
mov
mov
movsb
out
shlb
add
gs
ss
pop
scas
cmp
sub
sbb
data16
bound
add
in
cld
xchg
or
fistpl
repz
fldl
push
or
jmp
pop
jg
das
out
lahf
notb
inc
cwtl
cmp
xor
mov
jnp
inc
sbb
mov
adc
pop
test
sbb
add
mov
add
rorl
jp
inc
ret
scas
push
aam
jne
cmp
add
scas
mov
or
icebp
divl
rol
clc
jns
pop
xchg
push
dec
ret
mov
mov
sarb
mov
sbb
pop
pop
dec
les
xor
ret
mov
pop
mov
and
mov
jl
sbb
jne
jge
jb
push
sub
jbe
adc
scas
xor
dec
and
sub
mull
push
or
ret
loop,pt
lret
push
push
out
add
fsubrs
adc
xor
xor
xchg
xor
lods
cmp
jp
cmp
aam
push
sub
mov
dec
cmpsl
sub
cwtl
je
cmp
repz
cmpsb
das
sti
push
out
pop
ret
xchg
aad
xchg
bound
xchg
xlat
mov
fcmove
aas
sub
lahf
xchg
jbe
mov
das
push
ror
mov
mov
rcrb
enter
push
inc
cmp
dec
mov
dec
sub
repnz
test
or
nop
insl
imul
mov
data16
or
sub
xor
push
shlb
inc
jge
xchg
lahf
lcall
test
add
pop
stc
adc
pop
roll
ret
fsubrs
push
push
sbb
scas
adc
sub
jl
jb
test
mov
adc
xchg
ds
pop
dec
insl
push
xor
or
nop
decl
or
popf
loopne
xchg
imul
jl
mov
loope
ss
adc
mov
js
pop
dec
cmc
lea
cli
xchg
daa
mov
outsb
pop
pop
jl
adc
mov
ret
adc
or
mov
stos
cmp
jne
test
outsb
js
jnp
cmc
lea
je
add
jecxz
and
push
sbb
lret
movsb
cmc
and
pop
inc
jne
lea
sub
mov
add
cmp
mov
in
jmp
scas
jnp
loopne
sub
das
and
xchg
mov
je
dec
hlt
iret
scas
ss
mov
cwtl
sub
scas
adc
mov
ret
fdiv
dec
imul
aad
ljmp
pop
ss
fdivs
lret
dec
pop
push
push
add
push
or
push
pop
push
mov
or
mov
mov
mov
add
les
sbb
adc
loopne
pop
fbld
push
lahf
loope
imul
cmp
rcrl
repz
adc
adc
sub
jns
mul
xchg
adc
call
jae
xchg
xchg
mov
xor
fildl
hlt
movsl
inc
add
ret
jmp
mov
loop
add
ja
fs
or
mov
fisubl
pop
in
mov
stc
filds
addl
push
dec
fisubs
ret
sub
mov
dec
ficoms
popf
jae
pusha
mov
jl
sbb
lock
jo
sub
int
xor
sub
inc
aam
stc
mov
addr16
fdivl
popf
ljmp
pop
int
aam
shr
add
add
pop
mov
jecxz
dec
and
mov
fs
and
and
int
push
sbbb
dec
xor
pop
shrb
call
jns
push
into
sub
mov
or
lock
popa
movb
or
mov
shlb
lret
cmpsb
push
fs
xor
sti
ds
mov
mov
xchg
pusha
nop
dec
ss
xor
fs
jp
mov
dec
mov
adc
scas
xor
movsl
sub
mov
nop
shll
mov
pop
fstpt
ss
shrd
out
and
insl
pop
xor
sub
cmp
pop
outsb
mov
xor
inc
nop
add
pop
bound
insb
sahf
sbb
or
outsl
inc
jo
das
aas
mov
push
pop
mov
mov
movsb
dec
popa
ds
clc
stos
popa
push
popa
addl
mov
or
push
dec
addr16
cmpb
cwtl
dec
xchg
inc
xchg
push
cmc
or
sub
imul
adc
xlat
mov
movsb
inc
pop
mov
aam
and
and
or
mov
nop
iret
dec
push
movsl
xor
jnp
xchg
inc
mov
inc
out
cmp
js
sub
xchg
insl
sub
mov
gs
jns
pop
xor
cwtl
sti
adc
adc
addr16
hlt
mov
lcall
mov
inc
mov
out
aas
enter
and
lea
xlat
jae
mov
adc
aas
sub
cwtl
arpl
or
imulb
xchg
sahf
jg
cmc
stos
and
sbb
sbb
leave
mov
shll
pop
test
dec
dec
pop
sbb
lea
inc
scas
icebp
add
addb
rcrb
cmpsb
mov
adc
jno
xor
aas
test
sub
imul
jno
jnp
xorb
push
out
inc
ret
js
inc
xchg
xchg
sbb
push
adc
lea
sbb
adc
inc
or
push
adc
jbe
and
orb
add
lret
lahf
sbb
mov
nop
inc
add
push
mov
je
inc
add
inc
fs
push
stc
xlat
mov
xchg
jge
dec
sbb
and
sbb
mov
imul
pop
cmp
jb
fwait
lcall
mov
hlt
scas
inc
jns
inc
or
push
push
xchg
loop
icebp
dec
jns
add
push
lret
push
pop
mov
pusha
jmp
testl
jmp
in
jb
push
push
outsl
mulb
xor
jg
xchg
fists
fwait
mov
or
cmpsl
push
jmp
add
push
enter
add
push
in
xor
mov
neg
pop
xchg
adc
xlat
cmpsb
sti
inc
and
jo
lret
or
mov
insl
stos
sub
mov
add
shll
xor
sbb
push
popf
rcl
inc
adc
pusha
repnz
xchg
mov
adc
push
add
lock
sbb
fistps
pusha
aas
les
test
mov
adc
sbb
orl
adc
jle
aam
pop
sbb
lret
lret
test
jb
out
and
faddl
xor
and
dec
inc
inc
adc
and
mov
pop
jno
insb
xor
stos
aas
std
lret
fdivr
stos
sbb
arpl
aaa
test
jae
xchg
test
mov
pop
pop
shl
xchg
mov
fwait
movsb
push
mov
adc
out
sbb
fldcw
imul
jmp
jp
mov
cmp
xlat
andl
cwtl
dec
xor
repz
push
push
stos
add
sub
and
xchg
dec
imull
fs
jnp
xor
xchg
enter
sahf
rcll
jge
push
inc
push
push
mov
mov
movsl
ljmp
mov
push
pop
mov
push
scas
sbb
ja
stos
push
dec
cmp
roll
cmp
adc
inc
push
subb
pop
cmp
cmp
cli
inc
decl
pop
mov
nop
xchg
decb
cmpsb
clc
jne
sbb
mov
loopne
or
inc
cmp
sti
aas
jmp
push
ret
loope
ror
inc
xchg
push
adc
mov
stos
add
ret
fdivs
mov
xor
and
popa
xchg
mov
adc
xorl
movsl
das
push
sbb
in
sarb
pop
dec
rcl
mov
and
cwtl
sub
adc
pushf
sbb
pop
int3
add
mov
adc
int
inc
rorb
push
call
pop
std
fcoms
and
lret
hlt
sub
pop
xchg
loopne
or
cs
mov
add
rclb
sar
stos
mov
imul
sti
je
or
mov
insb
xchg
jmp
push
aam
xor
loopne
enter
adc
into
pop
enter
cmp
movsb
lret
push
stos
push
inc
jle
push
repz
inc
and
mov
xor
cmpl
dec
sub
xchg
and
daa
cmp
xor
push
push
insl
rorl
push
fistl
mov
mov
sarl
push
dec
xchg
shrl
mov
lds
cmpsl
cld
mov
push
or
or
mov
outsl
or
push
popf
mov
mov
aam
and
pop
imul
dec
in
aaa
stos
add
sub
popf
shlb
mov
or
data16
adc
cltd
data16
ljmp
addl
inc
pop
pop
sbb
xor
addb
pop
sbb
mov
notl
jb
outsb
lcall
leave
les
push
add
add
insl
and
shlb
aas
mov
add
sahf
fisubrl
sbb
sbb
fimull
xchg
inc
push
xlat
mov
mov
xlat
pop
and
cmc
aad
push
dec
mov
mov
fdivs
xchg
dec
and
hlt
add
cmp
sbb
icebp
call
lret
sub
push
mov
cmp
fwait
stos
fldcw
out
fs
adc
icebp
xor
es
test
adc
xchg
loope
xlat
cmp
cmpl
test
xchg
mov
push
stos
movsl
mov
push
cmp
fidivrl
adc
push
push
loop
pop
pop
dec
scas
stos
mov
push
mov
sbb
stc
adc
cmp
es
adc
cmp
mov
ds
icebp
dec
add
in
aas
push
push
movsl
fsubrs
xchg
cmp
cltd
es
lea
adc
push
test
pop
xor
enter
leave
add
xchg
dec
adc
and
push
mov
and
add
idiv
push
and
popa
pop
aad
test
pop
cmp
inc
inc
inc
mov
xor
xor
lea
es
cmp
dec
rcrb
or
and
sub
sbb
into
jp
and
mov
adc
push
push
dec
push
add
cmp
data16
adc
mov
in
jl
outsl
push
bound
or
add
inc
jg
incb
mov
popl
es
imul
xor
adc
jl
repz
or
cmpsb
insl
clc
jo
and
roll
mov
loop
jmp
inc
movsl
in
ja
pop
add
fs
pusha
loope
dec
mov
ds
in
movsl
jno
pop
xchg
fsubs
adc
rcrb
jle
insb
sbb
in
bnd
sbbb
int3
adc
push
or
outsl
cmp
sub
cmp
pop
xchg
in
daa
cmpsb
test
mov
adc
add
pushf
pop
stos
outsl
mov
in
xor
mov
jb
adc
inc
jae
adc
cmpsl
loope
adc
push
xchg
pop
xor
insb
adc
mov
clc
aaa
aas
jge
movsb
fsub
sbb
push
pop
std
js
stos
jp
fmuls
adc
push
lea
mov
imul
jne
test
mov
test
inc
out
fldenv
bnd
hlt
inc
fwait
in
int3
cltd
mov
mov
jb
test
stc
aas
xchg
mov
out
adc
sub
lods
data16
lret
pushf
fldt
loopne
xchg
jbe
adc
mov
imul
mov
cmp
sbb
or
ljmp
pop
sbb
in
xor
inc
xchg
je
pop
jbe
int
pushf
js
xchg
mov
pop
add
sub
movsb
mov
pop
in
les
xchg
push
adc
cld
sub
xor
xchg
jmp
daa
test
push
mov
insb
add
fs
test
and
inc
outsl
jo
pushf
into
sbb
or
cmp
dec
and
mov
mov
stos
stos
dec
sub
fstpl
mov
and
xor
mov
iret
rcrb
pop
mov
hlt
push
dec
or
fs
jno
and
imul
push
adc
dec
or
insb
inc
shll
and
pop
mov
and
imul
cwtl
jne
popa
js
mov
test
dec
sahf
out
adc
inc
sbb
xchg
mov
sahf
pop
imul
sbb
mov
jl
pop
or
shll
testl
cmp
push
lods
dec
adc
push
or
push
jge
jbe
sbb
or
std
mov
out
loop
test
fcoml
ret
inc
cmpb
sub
loope
lods
and
dec
mov
fstpl
pop
insb
hlt
das
lahf
pushf
xor
rorb
lcall
test
mov
adc
fbld
adc
add
adc
inc
inc
adc
xchg
loopne
adc
inc
adc
xor
xor
lea
and
xchg
lahf
cmp
mov
iret
pop
xchg
scas
jg
lret
pop
sbb
and
gs
mov
jbe
es
mov
fistpll
fidivrs
mov
out
sub
mov
mov
lods
and
ja
in
icebp
fldt
mov
cmp
out
fs
fs
or
add
stos
enter
repnz
mov
orb
loope
adc
sti
inc
inc
test
sbb
xor
fnstcw
das
mov
jg
outsb
divb
xchg
sbb
bound
outsl
icebp
fucompp
das
scas
push
cmp
test
dec
int
std
scas
cmp
rcrl
mov
or
xchg
scas
jp
add
add
jl
rcrb
nop
adc
mov
daa
adc
adc
add
push
insb
cmp
push
pop
shll
xchg
or
xchg
inc
out
push
mov
sti
dec
pop
ret
dec
jge
in
insb
in
dec
jl
push
jbe
adc
mov
pop
pop
add
inc
sahf
lods
sbb
test
mov
mov
and
cli
inc
in
popa
shlb
push
jo
jbe
mov
mov
popf
inc
sbb
rcll
sbb
jmp
mov
xor
outsl
mov
jmp
inc
aad
push
and
mov
pusha
pusha
add
jl
adc
test
jns
jbe
mull
je
and
or
push
and
push
cmp
inc
test
adc
pop
add
fidivl
mov
inc
dec
dec
or
cmpsl
adc
lret
add
inc
shlb
push
mov
dec
fisttps
int
jle
pop
xchg
lods
bound
or
xchg
shl
mov
fwait
out
jp
mov
int3
adc
bound
add
jne
lcall
xchg
frstor
pop
sti
scas
repz
ret
pop
cltd
jne
pushf
lcall
out
push
pop
push
pop
lcall
or
js
movsl
gs
pop
sub
hlt
mov
lods
and
pop
das
pop
fsts
mov
inc
mov
rol
cs
add
call
add
lds
mov
sarl
sbb
mov
mov
xchg
dec
mov
mov
pop
and
data16
lret
in
out
jne
fbstp
sbb
xchg
adc
data16
push
daa
insb
fwait
cwtl
inc
rcll
cld
and
cs
and
rcll
cld
xchg
pop
mov
mov
add
imulb
jl
sbb
push
loopne
ret
sbb
iret
test
add
popf
pop
xor
mov
test
pop
mov
xor
sub
jno
test
pop
insb
cld
dec
stos
sub
in
mov
sbb
loopne
mov
mov
popf
and
sub
std
xchg
jmp
shr
xchg
stos
pop
mov
inc
rcrl
mov
jnp
pushf
stc
aaa
jno
loopne
mov
pop
sub
cmp
adc
xchg
les
shrl
push
pop
dec
nop
dec
pop
sub
ss
xchg
push
push
std
xor
imulb
add
dec
mov
andl
sbb
mov
pop
lods
loop
xor
push
bound
push
cwtl
test
sbb
cmp
adc
aaa
jo
xor
leave
push
cmc
or
aad
fs
rorb
push
adc
adc
insb
bound
adc
adc
cs
adc
adc
sub
fsubr
add
adc
hlt
repnz
iret
sahf
or
or
pushf
sbbb
in
ror
or
or
int3
bnd
or
cli
add
or
or
cld
loop
testb
or
lret
shrl
or
or
xchg
or
fadd
fmuls
or
or
and
adc
or
or
or
sub
or
or
xor
rolb
lahf
mov
or
test
add
sbb
test
cmp
mov
or
test
test
adc
test
inc
inc
test
addr16
inc
enter
xchg
fnstsw
dec
dec
or
xchg
sbb
dec
dec
dec
dec
sbb
push
dec
dec
dec
dec
dec
inc
cs
dec
dec
dec
dec
mov
dec
dec
dec
push
dec
dec
dec
dec
xor
addr16
call
xchg
jbe
sbb
pop
lcall
hlt
push
cli
inc
inc
inc
push
mov
inc
inc
add
ds
inc
inc
inc
or
push
or
mov
push
sbb
adc
mov
pop
ret
ds
and
hlt
rolb
jle
pusha
cmc
mov
jl
inc
jo
nop
nop
adc
in
test
cli
pop
or
inc
and
xor
cmpsb
lods
adc
fstl
mov
add
pushf
xor
jl
or
push
lods
jmp
ljmp
lods
push
gs
inc
inc
fs
add
push
repnz
mov
sub
sbb
test
xor
das
scas
ret
popa
enter
xchg
das
out
aad
cli
cli
cmc
add
rcrb
addl
aam
push
lret
jb
push
add
cmc
mov
lds
mov
outsb
jbe
loope
add
jo
imul
add
inc
jg
loope
sub
push
shrb
cmp
repz
adc
stos
jp
inc
or
test
mov
or
xchg
mov
push
shlb
lock
adc
orl
sahf
enter
mov
xor
push
ja
lods
aam
popf
inc
inc
jbe
pusha
jb
xchg
popf
xor
lcall
in
inc
sbb
xor
dec
or
lea
lahf
in
nop
mov
rcl
les
in
xchg
jle
or
int3
nop
dec
push
pusha
inc
xorb
movsb
inc
mov
jo
inc
into
int3
shlb
and
mov
and
mov
insb
cmc
fucomip
repnz
adc
pop
in
dec
fmuls
push
jns
fucomp
jg
arpl
mov
push
sbb
add
shlb
fimuls
add
jmp
out
icebp
mov
movsb
imul
lods
mov
mov
pop
sub
mov
and
sbb
mov
ljmp
idivb
cmpsb
mov
sti
push
push
call
or
mov
cltd
jmp
roll
inc
in
xchg
xchg
in
iret
or
leave
push
imul
inc
sub
pop
adc
es
iret
mov
jne
sub
orb
or
aaa
rorl
xor
mov
xor
add
aad
das
dec
sbb
mov
and
int3
por
popa
xor
test
or
jbe
inc
adc
adc
push
nop
sti
test
add
in
jmp
gs
frstor
xchg
sarl
fbld
inc
adc
fnstcw
mov
cmpsl
pusha
mov
mov
pusha
in
pop
mov
movsb
inc
adc
push
push
pusha
push
xchg
cmp
adc
inc
cltd
jbe
aaa
inc
pushl
push
or
jle
sbb
popa
sarb
dec
jnp
add
imul
xchg
sahf
dec
ljmp
mov
mov
cmp
popl
xor
test
dec
sbb
mov
orb
xor
cwtl
jp
push
mov
fs
sahf
mov
push
popf
aas
mov
lss
out
and
and
mov
insb
or
mov
mov
xchg
das
dec
repz
cmp
xchg
xchg
test
insl
int3
and
cmp
inc
mov
bound
mov
sub
ds
mov
xor
andl
mov
mov
neg
dec
fsubrs
or
insl
scas
push
les
dec
mov
and
lods
cmpsb
in
test
mov
jb
add
icebp
mov
jns
pop
sbb
aaa
or
nop
out
xchg
cld
lret
jg
fistpl
push
mov
bound
ret
dec
aas
cmc
jl
jecxz
insl
mov
or
mov
dec
cmp
push
mov
mov
les
js
jg
enter
sbb
lds
mov
jg
pop
mov
sbb
cs
ljmp
js
or
mov
xor
pop
inc
push
fs
push
push
nop
jl
js
leave
xor
inc
jb
mov
sub
pop
cld
cmp
shlb
or
pop
jno
into
mov
adc
loop
lods
dec
add
js
xor
cmp
xchg
sbb
js
sbb
lock
test
loop
mov
and
js
pushf
rdmsr
mov
js
push
or
int
cmp
repz
repnz
loop
and
js
addb
icebp
outsl
nop
js
fildl
sbb
iret
xchg
fs
test
or
add
sub
sub
lea
pop
sahf
js
daa
inc
int
mov
xchg
jae
adc
cmp
call
mov
lret
sbb
and
repnz
adc
lea
xchg
shll
movsb
popa
dec
shll
cmpsb
pop
inc
push
pop
xor
les
cmc
and
or
and
aaa
mov
adcb
inc
mov
or
inc
xchg
pop
pop
pusha
test
add
inc
push
int3
and
jbe
add
pop
push
lds
and
pusha
push
cwtl
mov
pop
xor
scas
cwtl
lcall
and
mov
stos
cli
popa
push
fs
pop
icebp
sub
inc
fists
dec
pop
out
rclb
test
js
testl
hlt
leave
add
mov
cltd
mov
out
mov
xor
scas
outsl
xor
adc
rcl
into
fpatan
fcmovnbe
rcll
mov
xchg
loopne
dec
icebp
ffreep
dec
jg
mov
ljmp
iret
in
lock
adc
add
sbb
add
aaa
pop
stos
xchg
les
cmp
cmp
and
sub
bound
sbb
sub
pop
pop
addr16
xlat
pusha
push
jno
sbb
sub
shll
push
pop
pop
mov
sbb
and
mov
mov
enter
cmpsl
pop
push
fs
xchg
mov
sarb
ret
sub
and
ljmp
bound
jno
sbb
hlt
aaa
sbb
adcb
fs
xchg
fsubs
push
add
and
sub
mov
xor
pop
push
popa
dec
dec
xchg
push
mov
jne
inc
adc
dec
imul
and
into
pusha
pop
mov
xchg
cmp
push
into
mov
pushf
rol
add
mov
mov
stos
shrl
sub
call
ret
addl
ljmp
shlb
dec
push
ret
outsb
jge
add
xchg
push
or
movsl
adc
adc
test
iret
or
movsl
mov
mov
inc
sbbl
outsl
outsl
imul
into
jb
xor
sub
lcall
dec
test
aad
pushf
xchg
imul
test
pop
mov
shrl
pop
xlat
adc
xor
dec
lea
jbe
cmp
fisttpll
pop
cmp
mov
xchg
les
jb
inc
les
cmp
and
cmp
xchg
sahf
mov
inc
mov
ss
push
push
outsl
mov
stc
pop
sbb
lret
enter
cltd
ja
arpl
xor
pushf
cmp
hlt
xchg
push
iret
push
scas
int3
sbb
dec
aad
leave
pop
es
in
or
sub
or
sub
jmp
jno
push
idivl
cmp
dec
es
sub
rcrb
clts
or
stos
sti
scas
xchg
nop
in
mov
cmp
inc
pop
sub
dec
int3
lahf
mov
das
cmpsl
mov
inc
cmc
arpl
bound
fcmovnu
xor
xchg
adc
out
push
das
lods
adc
push
int
pop
test
icebp
mov
lock
cmpsb
bound
xor
pop
rorb
gs
add
or
cmp
sarl
sub
lods
cmpb
or
inc
xchg
mov
movsl
push
xor
cmp
or
lret
nop
push
ret
sub
movsb
clc
sahf
sub
xchg
xchg
add
es
sbb
insb
imul
adc
call
cmc
shll
sbb
mov
adc
inc
adc
add
push
dec
lahf
push
sbb
mov
decl
out
rol
xchg
mov
xor
into
insl
aam
rcr
pusha
cwtl
pop
cltd
imul
mov
pop
incl
jp
adc
jb
or
pop
inc
ret
lahf
mov
xchg
pushf
dec
mov
mov
push
lock
fsubrs
out
mov
lahf
lea
lahf
jo
mov
adc
push
pop
push
xchg
out
xlat
add
nop
jge
dec
int3
xor
mov
outsb
sti
xor
sub
jnp
pop
add
cmp
and
adc
gs
pop
ss
jp
inc
xchg
adc
inc
dec
pop
push
push
xor
js
and
push
imul
mov
nop
sub
and
mov
cmp
loopne
pop
pop
mov
jno
mov
pop
clc
fstpl
sbb
fdivl
ret
stc
sbb
movsb
pop
push
pop
shl
ljmp
lret
faddp
xchg
or
jnp
push
dec
jne
clc
xor
loope
cmp
mov
mov
xor
popa
push
inc
leave
and
sub
pop
inc
jnp
or
xchg
int3
pusha
sbb
outsl
cli
test
adc
mov
ljmp
or
aam
xor
fwait
sub
push
jns
les
inc
scas
xor
ss
rcl
out
pop
dec
out
out
movsl
icebp
sbb
movsb
lods
stos
subb
les
loop
dec
hlt
mov
cmp
mov
xor
cmp
inc
into
fistps
push
mov
inc
pop
pop
lods
je
ret
cwtl
xor
jle
loop
adc
inc
jns
jp
lds
mov
xchg
mov
mov
and
xor
mov
int
push
sub
jo
mov
loope
cmp
fidivl
mov
dec
cwtl
sbb
jle
js
pop
ds
or
je
mov
and
sub
and
pcmpgtd
arpl
pop
dec
fnsave
push
mov
and
add
imul
and
sti
std
xchg
icebp
and
cmc
clc
jecxz
jne
in
pop
adc
xor
mov
ss
gs
or
mov
or
mov
les
sarb
gs
adc
or
cmp
das
sub
add
adc
cmp
pop
cmp
jle
sub
sub
adc
add
sbb
adc
push
aaa
or
sbb
sbb
add
adc
or
or
or
lock
repnz
fbstp
loopne
mov
stc
out
cld
aad
loopne
addb
jmp
clc
rolb
and
add
fstp
fld
lret
fadd
shl
call
mov
add
adcl
test
stos
test
scas
scas
mov
rcll
cmpsb
mov
xchg
xchg
xchg
lea
mov
and
orb
xchg
pop
cmp
fs
cmp
dec
push
outsl
inc
inc
jp
inc
and
inc
jle
lds
fdivl
pop
pop
jmp
and
xchg
dec
xor
jp
das
aas
and
add
adc
add
xor
xor
sbb
xor
sbb
cmp
sub
and
nop
mov
add
cmovge
add
sub
fwait
add
add
and
add
mov
push
das
nop
out
in
cmpsl
aam
out
rcrb
add
std
jmp
loop
in
rolb
repnz
std
xchg
aam
ret
iret
adc
shlb
fmul
in
std
faddl
stos
mov
mov
push
xchg
mov
mov
mov
cmp
sub
mov
dec
xchg
fdivrs
les
mov
dec
lock
sub
add
add
outsl
push
pop
inc
pcmpeqb
inc
ja
imul
jl
incl
push
mov
movl
inc
pop
jb
inc
inc
pop
outsb
xor
jns
cs
aaa
xor
xor
jb
push
add
add
add
insb
jg
ss
xor
jne
cld
sub
lods
add
adc
icebp
pop
add
roll
call
push
adc
or
cmp
cmp
into
cmc
inc
mov
jmp
clc
mov
fsubr
jle
sub
int3
test
pop
add
iret
das
lret
lahf
repz
fidivl
shr
ret
fld
daa
dec
in
loope
jp
mov
xchg
lods
mov
loope
imul
les
push
test
clc
mov
stos
loope
add
and
xchg
fidivrl
loop
sbbb
out
add
xchg
mov
mov
jge
push
das
push
gs
movsb
arpl
insl
inc
push
das
push
add
insb
pop
xor
push
dec
inc
dec
dec
push
inc
inc
jb
jns
add
bound
push
inc
jbe
jae
in
jmp
xor
inc
inc
or
dec
sub
adc
out
or
pop
push
movsl
inc
pop
movsl
daa
adc
cmpl
xchg
pcmpgtw
cmp
and
popa
cs
in
stc
es
cmp
loopne
js
mov
cld
in
cld
xchg
mov
shl
pop
fsubrs
gs
jo
jno
hlt
faddl
nop
hlt
adc
arpl
shl
xor
mov
mov
dec
dec
scas
ret
nop
xor
or
cmpsb
fdiv
mov
lcall
mov
fwait
outsb
mov
insl
lock
sahf
shlb
mov
cltd
int
cmp
add
jb
pop
jg
lds
add
sub
insl
xor
popa
and
leave
js
outsl
jle
jl
incl
and
pop
lock
sub
cltd
test
push
sub
movsb
movsb
mov
mov
mov
test
xchg
movl
mov
pop
jecxz
inc
mov
test
xor
jns
jge
pusha
movsl
adc
xorl
push
push
push
dec
jne
pusha
inc
pop
inc
insb
sub
or
icebp
lods
mov
out
add
adc
pop
add
sti
add
js
insb
int3
push
sbb
test
inc
jg
sbb
sbb
dec
or
push
or
sysret
add
add
sub
add
xor
aas
sub
and
and
or
cmp
add
or
jp
add
adc
popa
addr16
pusha
adc
add
jo
cmpsl
xor
js
lods
jmp
add
add
das
ss
addr16
xor
push
pop
icebp
cwtl
lods
or
sarb
mulps
adc
pop
add
lods
lods
je
mov
sbb
lea
or
sub
push
out
pop
mov
fidivl
lock
sarb
xchg
data16
and
mov
stos
movsb
jne
mov
int
and
xchg
lcall
adc
and
popf
adc
sub
jo
insl
xlat
mov
xor
fs
mov
int
add
push
add
dec
jne
cld
mov
divb
push
xor
arpl
lods
inc
mov
out
aam
test
pop
push
fisttpll
dec
adc
pop
sbb
jecxz
cmpb
mov
add
scas
in
aad
imul
push
dec
sbb
sbb
rorb
and
popa
inc
add
xchg
or
push
push
xor
or
jnp
fidivl
out
add
pop
sub
scas
int
call
dec
es
pop
jp
xlat
xlat
xchg
xor
aad
iret
inc
int
out
adc
xchg
xchg
xchg
sub
add
int3
enter
fwait
iret
scas
cmp
mov
push
dec
mov
arpl
sub
xchg
xlat
xor
mov
ds
dec
jne
js
push
int
pusha
enter
xchg
or
sub
inc
push
data16
mov
add
in
fs
jo
jp
inc
pop
gs
jle
mov
mov
les
sahf
scas
xchg
les
imul
xor
push
inc
push
cmp
and
dec
nop
cmpsb
daa
cld
inc
mov
pop
inc
daa
xor
das
sbb
out
jne
ja
adc
lcall
lcall
mov
add
mov
test
call
adc
mov
stos
roll
push
test
jl
lret
push
mov
adc
loope
lods
add
dec
outsb
out
nop
in
jbe
insl
cs
mov
test
mov
xchg
imul
test
or
test
shlb
sbbb
push
jnp
popa
fsubrl
mov
add
imul
inc
mov
xor
lret
mov
inc
mov
xor
adc
pop
and
pop
test
int3
pop
cmp
mov
cmp
hlt
push
push
lock
in
inc
add
add
xchg
cmp
popf
pop
add
add
adc
add
inc
xor
xor
add
add
sbb
add
in
or
add
add
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
push
mov
mov
add
lea
mov
push
mov
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
add
mov
test
je
mov
lea
mov
mov
mov
mov
push
rep
mov
mov
add
jmp
pop
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
inc
call
adc
call
jb
ret
cmp
jae
push
push
push
jmp
push
push
push
push
xor
xor
movsb
xor
dec
jle
call
jae
xor
call
sub
jae
mov
inc
jmp
mov
mov
call
adc
loop
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
nop
dec
jbe
add
sldt
add
add
add
add
in
add
add
adc
add
add
add
add
inc
adc
add
add
add
or
add
and
add
and
add
and
add
add
add
add
or
add
pop
and
add
and
add
cs
add
cmp
add
inc
and
add
dec
and
add
pop
and
add
and
nop
and
add
add
cwtl
and
add
add
mov
add
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
inc
and
add
add
add
add
add
add
add
addb
add
fs
add
add
add
addb
add
je
add
add
add
nop
and
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
je
insb
je
add
add
addr16
jo
outsb
dec
gs
add
add
dec
outsb
imul
add
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
je
jb
arpl
jae
insl
popa
addr16
imul
add
add
push
popa
je
inc
imul
jae
add
add
jae
add
inc
imul
add
add
je
fs
jo
gs
dec
outsb
outsw
add
add
imul
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
dec
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
xor
xor
fs
insb
add
inc
push
dec
cs
dec
dec
add
dec
push
inc
push
dec
cs
insb
add
push
inc
push
push
cs
insb
add
imul
insb
insb
add
push
imul
push
push
inc
push
push
xor
fs
insb
add
inc
dec
dec
xor
cs
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
shlb
add
and
add
imul
dec
push
add
fisubs
add
pop
add
add
add
add
aas
inc
gs
push
inc
push
je
insb
imul
pop
pop
add
dec
inc
inc
dec
dec
inc
push
inc
push
pop
pop
inc
push
dec
dec
pop
add
jne
inc
jae
xor
ja
addr16
fs
insb
