stc
ja
call
in
sub
push
push
push
mov
mov
add
andb
outsl
jmp
inc
les
push
or
in
mov
gs
popa
enter
mov
jbe
lret
lret
outsl
int3
int
jb
jne
into
push
shll
shlb
xlat
insl
mov
inc
aad
add
cmp
pop
mov
mov
fldcw
fidivl
fisttpl
push
add
pop
loop
jecxz
add
inc
in
in
jmp
inc
call
imul
aaa
lock
pslld
mov
hlt
cmc
sbb
add
aaa
fbstp
cmpsb
clc
stc
dec
add
pop
sti
js
cld
je
fcmovnu
out
mov
xlat
sub
mov
jle
pop
pop
fs
pop
adc
mov
jg
adcb
daa
test
je
push
push
call
mov
jmp
mov
cmp
sbb
lea
add
call
jl
xor
rclb
sbb
mov
push
pop
je
xor
pop
shll
jmp
or
mov
push
out
sbb
xor
pop
pop
pop
leave
ret
test
inc
sbb
mov
int3
sub
or
pop
and
mov
test
mov
push
or
fwait
in
fndisi(8087
clc
xor
cmp
jne
mov
push
sub
divb
loope
push
sbb
cmpl
jl
gs
fwait
in
jmp
cmp
push
push
push
inc
push
adc
outsl
into
pushf
add
or
rolb
das
cld
repnz
or
sarl
push
mov
add
neg
sbb
fldcw
fildl
pop
or
sbb
push
pop
ret
adc
add
paddsb
lock
pop
pop
movaps
add
sbb
mov
test
je
mov
push
xor
mov
test
in
decl
sbb
push
push
add
test
mov
jne
andb
sbb
ret
movsb
push
push
push
push
or
xchg
and
pop
xor
mov
mov
or
cmp
jne
sub
int
or
fcoms
jbe
push
aaa
pop
mov
gs
add
mov
mov
adc
push
push
jmp
xor
dec
cld
xor
or
adcl
push
mov
and
and
or
sti
out
test
or
pop
push
adc
dec
hlt
sbb
je
fs
mov
int
pop
shlb
fcmovnb
jge
nop
mov
pop
sub
lods
add
mov
mov
mov
pop
jnp
pop
movsb
mov
xor
or
push
ffree
jge
jnp
pushl
int3
add
out
ja
mov
mov
aaa
popl
out
addl
call
mov
adc
mov
arpl
das
xchg
mov
mov
testb
je
nop
lea
push
push
or
push
jae
int
in
or
mov
fcomps
jmp
popa
movsb
adc
lods
mov
ja
pop
pop
mov
lret
mov
cmp
sbb
enter
add
cmp
pop
movsb
iret
int3
add
aam
xchg
sbb
pop
mov
add
sbb
sbb
mov
xchg
adc
fisttpl
push
add
sbb
add
xor
cld
push
mov
add
mov
lock
push
adc
fdivrp
lock
rcrl
jne
sub
adc
and
insb
arpl
push
mov
add
fcoms
add
out
mov
inc
lret
in
lea
push
adc
loopne
push
or
xchg
in
lds
push
pop
sub
in
or
movsb
and
mov
inc
add
int3
mov
or
shl
inc
cmp
jge
mov
or
pop
pop
lret
in
fidivs
loopne
loope
lcall
imul
popa
insl
gs
je
inc
mov
inc
push
imul
insb
gs
jbe
test
push
push
xor
sti
in
pop
in
adcb
push
outsb
rcr
sbb
mov
mov
out
mov
add
stos
pop
adc
adc
lods
mov
sub
adc
int3
sub
or
loope
sub
inc
or
sbb
test
push
jbe
push
ja
adc
les
out
push
sbb
popa
push
fldt
test
adc
mov
je
popa
cwtl
cmp
adc
pushf
addr16
inc
mov
cmp
cmpl
cmp
into
and
jecxz
sub
dec
push
sbb
clc
pop
mulps
adc
adcl
adc
mov
push
push
stos
pop
fcoms
test
fisttpl
rorb
sub
adc
out
add
push
sub
mov
fs
outsl
adc
mov
jb
or
adc
fsub
jl
add
and
or
push
sub
mov
jge
lret
mov
jnp
pop
idiv
cmp
jle
add
jl
popa
pushl
sti
lret
jle
jp
add
pop
jl
pop
mov
pop
sti
push
out
pop
cwtl
sub
mov
imulb
or
add
je
out
or
add
adc
fcomi
xor
clc
cmp
sub
cmp
jmp
push
lock
add
add
jp
imul
sbb
fcoml
inc
cld
jp
ds
xabort
movsl
movsw
movsb
push
pop
push
mov
inc
repz
hlt
cld
xchg
popf
divl
or
xchg
pop
lcall
sub
adc
push
call
jge
inc
push
inc
or
inc
rorl
inc
call
inc
pop
lea
adc
add
cs
shll
aam
test
jbe,pn
add
movsl
adc
insb
dec
cs
test
cs
stos
push
lods
add
ss
scas
adc
mov
dec
push
push
mov
lfs
cmpsb
cmpsb
into
xor
sbb
mov
rclb
jne
out
jns
out
gs
inc
repnz
dec
rcll
mov
dec
shll
jb
jb
outsb
mov
xor
xor
push
mov
in
mov
add
xchg
lret
mov
push
rorl
inc
cmpsb
stos
insl
mov
pop
les
cmpsb
jmp
pop
xchg
inc
inc
test
or
sti
jecxz
in
ljmp
cmp
mov
mov
push
or
pop
ret
fisttpll
add
pop
adc
push
sub
call
test
bound
dec
sub
outsb
pop
jbe
adc
enter
addr16
dec
iret
and
push
sahf
aad
fcoms
adc
jle
fstl
jmp
jo,pt
and
or
pop
mov
jecxz
mov
js
pop
or
xchg
scas
or
push
push
outsl
dec
fwait
dec
push
push
jl
ss
dec
in
mov
addr16
push
cmc
decl
pop
js
mov
push
and
sbb
cmp
cmp
jmp
shrl
jl
dec
int
fcomps
add
pop
outsl
and
adc
sbb
je
jne
leave
xor
jmp
dec
scas
adc
sbb
push
jge
mov
lea
or
popf
dec
mov
push
andb
add
pop
into
adc
dec
lahf
add
in
mov
mov
jmp
sarl
cmp
shr
adc
add
dec
dec
shll
inc
imul
cmc
xchg
and
or
push
ja
and
push
or
add
xor
lret
push
add
push
mov
lods
push
add
flds
add
scas
inc
jae
fadds
inc
push
inc
xlat
and
sub
push
and
cmp
sbb
addb
loope
push
lods
pop
fstp
push
add
jmp
dec
mov
sub
loopne
shl
push
xchg
lock
jmp
sub
sub
add
sub
cmp
cmp
in
jbe
dec
dec
dec
push
push
sub
cmp
stos
adc
add
sub
pop
mov
fisubl
or
push
testl
gs
jle
add
aas
roll
adc
add
cltd
or
loop
pop
sbb
roll
jb
out
push
insl
push
add
add
or
jo
and
ret
daa
add
daa
jns
clc
adc
cld
inc
ds
in
cld
or
or
ds
in
sbb
sti
adc
sbb
jae
sbb
sbb
mov
ret
cld
add
cmpl
inc
adc
push
stc
and
add
cmp
or
pop
sub
xor
inc
filds
out
push
cmp
pop
jmp
inc
mov
jbe
pop
in
cmp
xor
data16
xchg
lds
stc
outsl
sub
mov
adc
adc
and
xchg
inc
push
push
and
loop
jo
cli
clc
lret
pop
mov
or
jmp
add
sbb
push
and
or
in
fsubrs
xchg
nop
or
jmp
sbb
sub
pop
imulb
clc
and
sbb
mov
sbb
adc
mov
jb
std
sub
and
xchg
test
arpl
stos
or
mov
lock
or
pop
or
mov
imul
stc
imul
imul
imul
je
inc
outsl
jo
mov
xor
imul
lcall
mov
cmpsb
mov
cmpsb
inc
call
shlb
cmpsl
cltd
cmpsb
imul
sarl
inc
je
adcb
aaa
subl
cmp
adc
fcomps
pushf
adc
mov
movsl
and
in
lea
mov
arpl
int3
jge
imul
or
cmp
out
arpl
or
hlt
test
sti
push
add
add
sbb
push
fists
push
xchg
scas
pop
xchg
mov
xor
inc
add
adc
adc
inc
shrl
dec
push
call
dec
pop
inc
adc
sub
cmp
pop
pop
xor
adc
push
sub
xlat
and
or
push
stos
adc
inc
ds
in
xlat
stc
hlt
push
clc
hlt
adc
testl
inc
movb
arpl
into
xchg
data16
and
jo
outsl
insb
imul
imul
int
out
ja
gs
or
mov
dec
sub
pop
dec
insb
xchg
sbb
dec
shrb
push
insb
shrb
push
xor
shrb
push
js
xchg
in
sub
xor
xor
sub
inc
pop
lcall
ss
aaa
jmp
mov
cmp
push
jbe
pop
cmp
inc
mov
movsl
pop
cmp
xor
mov
repnz
push
loopne
xchg
inc
inc
pop
inc
cld
cmc
add
pop
push
movsl
cmp
dec
call
adc
sbb
call
mov
mov
mov
ljmp
add
lcall
repnz
lea
push
push
jge
push
jle
sub
mov
addb
inc
cmpb
push
xor
dec
test
mov
mov
jae
cmp
jecxz
das
int
xorb
add
cmp
jno
sbb
pop
lock
jns
xchg
adc
cmp
frstor
sub
test
add
sbb
cmp
jecxz
adc
test
pop
add
int3
push
lcall
sbbb
mov
add
and
icebp
pop
push
pop
push
lcall
pop
pop
add
movsl
pop
pusha
dec
popa
dec
bound
arpl
into
dec
pop
lcall
push
push
dec
lds
mov
lea
outsb
lcall
xchg
xchg
xchg
mov
push
aaa
jecxz
xchg
lods
cwtl
cwtl
dec
push
aam
or
pusha
cltd
js
loope
add
add
push
in
push
pop
lods
cmp
mov
push
adc
push
movsl
mov
pusha
lock
addr16
test
mov
popf
sbb
pushl
jl
or
pop
inc
mov
fidivrs
movb
inc
or
test
outsb
add
push
std
jnp
ret
xor
jne
or
ja
pop
mov
cmp
jae
mov
push
shl
or
pop
adc
movsb
cmp
stos
lods
jno
add
mov
andb
jo
cmp
mov
icebp
clc
inc
mov
adcb
dec
add
fmul
out
push
mov
test
cmp
add
fcomps
rolb
shll
mov
pop
cld
sub
test
push
inc
enter
fldl
fdivr
push
fscale
adc
adc
jge
nop
loopne
lock
mov
in
mov
adc
or
fsubrp
int
inc
lock
fwait
pop
jbe
adc
mov
in
mov
std
orl
pop
or
xor
and
add
xlat
das
or
loop
fstpl
mov
pop
jbe
adc
push
push
push
mov
test
test
data16
inc
lock
fistl
adc
xor
addl
inc
cwtl
leave
push
and
add
xchg
ret
lcall
xor
out
adc
adc
jo
shll
jo
adcb
cmp
pop
inc
or
dec
dec
push
adc
divb
sbb
test
je
push
push
shl
xor
pop
pop
push
js
mov
daa
push
outsb
cmc
jg
sbb
pop
shll
mov
jne
sbb
adc
push
sti
insb
mov
or
adc
adc
push
and
xor
out
and
pop
sbb
jmp
pop
fists
shlb
add
aad
js
mov
into
fsubrl
mov
mov
add
adc
mov
packssdw
adc
pushf
push
add
outsb
jmp
addb
and
je
pusha
pushf
je
mov
pop
and
add
pusha
lea
jbe
pop
jnp
xchg
sbb
or
jae
push
fadd
out
push
push
jp
in
and
lock
cltd
je
push
push
xor
mull
push
and
add
pop
pop
ret
aad
adc
adc
cmp
pop
outsl
xchg
push
push
push
cmpsl
outsb
xor
adc
cld
insb
pop
add
adc
fnstcw
enter
and
mov
and
jb
xchg
lahf
sub
imul
pop
shlb
clc
jmp
add
and
ret
hlt
push
mov
inc
ss
jge
cmp
mov
out
add
pop
push
adc
insb
lock
orl
pusha
xor
push
sbbb
sbb
lret
adc
in
push
pop
pop
call
js
shll
out
out
and
icebp
jmp
push
lea
shlb
ja
rclb
loopne
lds
and
or
mov
aas
loopne
lcall
jbe
fdivrl
inc
adc
sub
pop
pop
mov
leave
or
ds
fbstp
negb
inc
les
and
and
rcll
imul
xchg
push
xchg
jmp
inc
sub
sbb
pop
or
clc
pop
scas
or
aaa
insb
lea
pop
cs
push
mov
push
add
outsl
add
fsubr
loop
jb
and
andl
inc
mov
xchg
and
mov
fsubrl
push
and
add
and
gs
push
and
push
ds
jne
mov
add
ret
add
push
test
stos
and
xchg
mov
mov
subb
int
mov
sbb
xchg
ret
add
adc
and
cmp
pop
sub
adc
lods
jnp
std
fnstcw
inc
sbb
mov
push
dec
pushl
mov
in
sbb
push
call
out
mov
or
mov
lock
arpl
fwait
sti
in
jg
inc
add
push
mov
push
mov
or
or
outsl
pop
add
add
xor
mov
and
pushl
int
push
push
adcl
mov
out
cmpb
imul
mov
add
add
add
clc
xor
mov
and
add
and
xchg
jmp
sub
mov
pop
aas
movb
loopne
cmc
push
add
adc
bound
or
xchg
in
inc
add
sti
in
xchg
js
or
adc
ss
adc
sbb
mov
add
dec
pop
mov
mov
enter
adc
and
sbb
adc
inc
add
jmp
popf
mov
dec
ljmp
in
aam
shll
arpl
popf
push
pop
push
mov
dec
clc
shll
inc
or
or
jb
sbb
and
movl
add
pop
jne
aad
mov
jbe
pop
jbe
inc
test
mov
xor
leave
rorb
repnz
jle
inc
jo
sbb
rorb
imul
fistps
mov
test
xor
mov
push
das
mov
push
jne
jo
mov
mov
imul
lea
insl
into
sbb
push
es
cltd
or
adc
adc
inc
adc
ja
adc
iret
dec
push
cmp
jl
pop
nop
sahf
daa
shrl
jge
or
dec
inc
leave
push
add
nop
inc
mov
test
cmp
pop
or
pop
psraw
fistl
pop
and
fnsave
dec
roll
pop
sbb
icebp
aas
cmp
jl
or
inc
jmp
fdivrp
mov
inc
mov
mov
pushl
dec
jb
pop
jbe
fwait
jno
into
push
adc
mov
outsb
jecxz
adc
adc
into
sbb
pop
clc
mov
cmp
sbb
xchg
add
sahf
xor
push
adc
clc
sub
repnz
pop
or
adc
or
xchg
mov
push
mov
aaa
outsl
lahf
cmpsb
pop
push
xlat
cwtl
dec
test
and
les
xor
pop
or
mov
dec
sbb
inc
in
mov
pop
jae
xor
pop
inc
dec
and
sbb
in
outsl
inc
add
jne
push
jmp
push
push
push
insb
xchg
mov
xor
movsl
push
cmp
fadds
push
push
dec
add
mov
mov
je
cmp
push
test
sub
push
pop
mov
inc
test
popa
adc
dec
jbe
jnp
dec
push
push
push
push
out
or
sbb
cmp
push
pusha
jecxz
int
fistpll
cmpw
jne
jo
or
inc
or
call
inc
imul
or
sub
ret
push
inc
testb
adc
decl
mov
jbe
sub
fadd
push
push
or
dec
outsl
xchg
out
push
ret
jne
repnz
popf
pop
leave
sub
adc
mov
outsb
lea
mov
mov
pop
adc
test
jne
push
add
and
cmp
adc
xchg
inc
push
jmp
ret
sti
inc
adc
shll
fwait
in
dec
jb
sub
pop
roll
jl
adc
cmp
ret
jnp
push
js
pop
popa
cwtl
sbb
cmp
add
nop
data16
push
inc
jle
xor
push
ret
clc
call
pusha
popa
adc
mov
lock
dec
loope
pop
mov
inc
shrl
add
add
ss
out
stos
jle
sbb
mov
cld
xchg
jmp
or
int3
add
mov
sub
enter
inc
int3
shrb
push
push
mov
daa
mov
mov
mov
add
dec
aam
xchg
xchg
xchg
mov
add
xchg
xchg
xchg
call
lea
push
cmp
ret
or
mov
dec
sub
sub
in
sub
mov
or
sbb
out
jbe
jae
xchg
push
cmp
inc
mov
sahf
lcall
insb
mov
add
pushf
test
enter
or
addr16
or
jne
mov
adc
fnstsw
decb
mov
jmp
sbb
mov
or
cmp
adc
mov
in
fcmovbe
push
daa
inc
mov
aas
inc
cmp
or
test
cmpl
mov
ret
add
add
and
add
out
pushl
mov
cmpb
jne
inc
or
add
or
pop
in
and
aam
dec
movsb
aaa
pop
mov
inc
rolb
sub
fcmovnu
jmp
sub
push
pop
mov
les
lods
xchg
cwtl
mov
add
inc
or
push
roll
lret
xor
push
push
fisttpl
cld
cmpsl
mov
inc
mov
add
in
sub
push
xchg
jle
pop
cmp
pop
mov
adc
aam
add
imul
jb
dec
in
inc
setbe
lods
mov
enter
push
inc
imul
imul
jmp
mov
mov
ljmp
inc
add
inc
pop
cmpsb
imul
imul
sarl
add
ja
js
shll
mov
xor
shll
into
out
shll
add
sub
dec
shll
jp
jbe
shll
test
inc
cmp
pop
lods
jmp
jnp
pop
sbb
sub
jns
icebp
push
pop
adc
notl
incl
lods
insb
roll
aaa
adc
add
add
inc
inc
jg
sub
adc
cmpsl
sbb
xchg
mov
dec
adc
inc
push
push
or
add
jne
ss
pop
aaa
sub
mov
dec
xor
cs
insb
pop
mov
xchg
xchg
lret
stc
lods
adc
jne
push
pop
and
pop
mov
scas
outsl
in
lcall
scas
adc
inc
sub
loope
loope
aam
mov
sbb
add
lcall
test
push
adc
adc
and
dec
out
mov
gs
gs
dec
xor
xor
popa
adc
gs
gs
outsl
add
sti
jle
std
ficoms
inc
inc
pop
pop
daa
push
push
add
pop
jae
arpl
jae
std
dec
cmp
bound
push
jb
jbe
insb
gs
outsl
jo
outsb
fdivp
outsl
sti
pop
cs
fs
pop
jae
jae
insl
dec
jb
sub
inc
pop
and
outsl
outsb
xlat
xlat
add
adc
out
jg
dec
inc
add
jne
sub
push
mov
sbb
adc
imul
jae
shlb
and
xchg
mov
addr16
outsl
push
je
jns
or
add
or
out
pop
mov
and
arpl
outsl
data16
mov
cmp
add
bound
repz
dec
push
push
xor
inc
mov
popa
fstpt
add
xchg
and
lock
inc
add
inc
add
shlb
or
add
fmuls
inc
inc
xchg
pusha
cmp
pop
mov
int
mov
in
ljmp
jae
jo
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pop
sti
pop
lock
dec
push
and
cs
addr16
std
inc
xchg
and
mov
shll
sub
mov
and
dec
mov
shll
mov
paddusw
ss
loopne
ja
cmp
sarl
das
or
in
sub
push
imul
ret
dec
add
subb
or
dec
adc
aad
or
push
test
adc
jge
or
pop
adc
nop
push
imul
mov
add
or
mov
sbbl
in
adcb
push
mov
pusha
cwtl
push
loopne
mov
pop
cmpsl
call
je,pn
ss
gs
pop
ljmp
out
into
add
jge
jb
popa
je
dec
xchg
sti
push
daa
sub
lods
jmp
add
add
daa
xor
push
push
or
adc
add
and
daa
jb
jb
add
adc
sarb
shlb
insl
jo
and
jge
jbe
mov
pop
fadds
daa
xor
loop
add
daa
clc
insl
lret
pop
in
and
insb
outsl
arpl
sbb
pusha
ja
add
popa
add
pop
xlat
push
jmpw
cld
xchg
mov
out
ss
mov
stos
leave
ret
push
lret
inc
pop
ret
das
push
sti
out
testb
orb
adc
movsl
ret
add
adc
mov
mov
jp
data16
xchg
push
aas
mov
pop
mov
outsb
push
push
and
mov
push
mov
cmp
sub
jecxz
push
jne
push
andl
fbstp
xor
add
int3
cmpsb
decl
ja
jne
mov
add
test
cs
push
pop
push
cmp
fisttpl
or
cmpl
pop
push
and
push
cmp
mov
decl
push
pushl
jnp
pop
mov
push
inc
sti
jg
mov
mov
jne
mov
pop
mov
aas
fistpll
add
mov
add
mov
shr
mov
jmp
cmp
je
mov
mov
pop
mov
fisttpl
movsb
push
call
dec
mov
jnp
call
jge
cmp
lcall
lea
cmp
mov
mov
jne
xor
sbb
or
enter
adc
clc
in
cmp
je
lret
mov
inc
push
dec
and
call
lods
mov
je
mov
scas
add
pop
jnp
testb
add
mov
push
call
fnstsw
mov
add
pop
lock
cmp
es
add
dec
or
jb
test
mov
insl
xchg
mov
add
sbb
sbb
loopne
adc
dec
aas
jno
pop
lcall
cmp
std
sti
cmp
mov
pop
push
or
adc
je
insl
fstpl
sbb
mov
into
dec
lcall
mov
jp,pt
and
push
or
dec
or
pop
or
cmp
loopne
mov
jmp
mov
mov
jle
js
jne
fidivs
lods
lock
je
adc
or
jne
mov
sbb
aas
mov
andl
pop
pop
adc
pop
jnp
into
or
adc
inc
pop
ds
mov
fisubl
orb
mov
sub
dec
pop
mov
or
sbb
sbb
push
mov
sbb
or
imul
iret
mov
lret
xchg
jmp
enter
push
mov
pop
js
orl
push
mov
rcr
push
dec
or
imul
or
movsb
aas
orl
cmp
jg
mov
je
pushl
mov
ss
inc
cmp
inc
pop
inc
jae
xchg
in
mov
std
push
adc
pop
dec
push
subl
je
out
ds
inc
adc
mov
cmp
fcoms
mov
push
in
sbb
in
mov
add
adc
leave
adc
je
pushl
pop
sub
testb
or
push
int3
leave
cmp
mov
push
mov
int3
mov
add
je
push
daa
xchg
icebp
add
sub
jecxz
aas
sbb
mov
adc
mov
mov
cltd
fistpl
jae
inc
add
inc
mov
ds
sqrtps
or
add
jbe
movsl
sbb
inc
adc
lea
inc
jmp
push
je
ret
test
daa
add
fdivl
repnz
push
test
and
in
mov
add
xchg
movhlps
mov
pop
pop
mov
jne
sbb
andb
sub
ljmp
xchg
mov
inc
add
cmp
jb
jmp
imul
add
lea
movsl
add
stos
cli
xor
adc
loopne
mov
sub
pop
rcl
push
test
mov
jbe
mov
enter
inc
sub
insl
stc
pop
cli
rolb
cmp
inc
cld
ljmp
pop
jbe
adc
cmp
hlt
add
add
sub
inc
pop
adc
ljmp
rol
sub
mov
insl
mov
adc
jbe
mov
add
push
push
push
sbb
xlat
inc
pusha
mov
test
or
mov
iret
clc
lock
push
lcall
mov
and
adc
iret
out
popa
fsubs
das
fsubrl
out
stc
jl
jo
gs
push
fldl
jg
pop
xlat
mov
test
mov
lods
movsb
push
in
xchg
cmpsl
dec
movsb
push
lea
sbb
loop
jg
sahf
or
pusha
movl
mov
mov
and
xchg
or
and
pop
iret
or
and
xor
smsw
stc
sbb
and
and
lods
std
dec
jnp
and
cld
mov
add
mov
jne
push
popa
add
mov
mov
or
sbb
lret
clc
or
inc
mov
pop
sbb
add
stc
jge
xchg
and
push
inc
jle
lret
ss
adc
in
inc
pop
mov
cld
mov
lock
das
outsl
or
std
cmp
scas
pop
adc
push
push
push
outsl
inc
sub
push
mov
pusha
mov
movsl
push
ficompl
arpl
clc
enter
pop
or
daa
jmp
mov
fsubrl
pop
mov
jmp
into
jge
push
nop
jp
andl
add
push
mov
roll
jns
sub
pop
pop
jecxz
pop
js
test
mov
pop
clc
cmp
mov
je
dec
dec
cmpw
pusha
out
ljmp
cmp
outsl
mov
ja
add
sub
leave
imull
fsubrl
add
scas
sbb
nopl
sub
mov
push
call
aad
cmpsl
jle
cwtl
or
cmpsl
in
ficompl
shlb
cmpsb
std
cltd
sbb
adc
in
push
test
ficomps
call
xchg
sbbb
decl
push
mov
cmp
ljmp
dec
bnd
cmp
xor
clc
push
add
imul
cmpsl
andl
sbb
pop
pop
pop
in
xor
sub
mov
pushf
and
sbb
faddl
push
dec
add
rcll
push
movl
or
or
push
cmp
xorl
outsl
test
test
xchg
insb
adc
and
add
mov
mov
lea
mov
nop
out
sub
xchg
cmp
add
outsb
xchg
sub
gs
xchg
or
gs
xchg
arpl
jae
xor
mov
add
cmp
bound
xor
jmp
lea
mov
dec
iret
rcl
sub
shll
add
dec
aam
fldl
inc
mov
pop
xlat
inc
fnstenv
dec
jo
mov
adc
outsb
pushf
cs
pop
mov
xchg
push
imul
jne
stc
mov
inc
xlat
jne
push
lgs
mov
mov
inc
rclb
sbb
mov
add
mov
jb
dec
not
adc
xor
and
insb
fsubl
add
lods
pop
inc
or
fsts
push
adcb
push
push
addr16
fdivs
rcr
faddp
fadd
ja
add
sub
push
loope
add
movsl
lret
sub
fs
pop
and
push
push
or
sub
push
scas
xchg
mov
les
adc
daa
mov
ret
mov
call
inc
mull
push
inc
ja
fildl
sub
loopne
xor
aad
and
cltd
in
adc
cmpsl
mov
mov
fmuls
add
push
inc
mov
cmp
ret
clc
sub
pop
mov
sbb
mov
insl
xchg
loopne
adc
mov
mov
dec
or
test
push
mov
xchg
xor
mov
mov
adc
inc
dec
je
mov
or
popf
test
pop
push
cmp
idivb
pop
adc
movsl
data16
sbb
adc
lods
and
xchg
inc
mov
sub
repnz
xor
sub
push
data16
pop
lret
mov
pop
add
loop
sbb
add
cld
push
cmp
pop
mov
aad
and
push
mov
or
popf
xor
clc
sub
adcl
insb
push
push
insl
xor
or
mov
sub
xor
push
pop
inc
pop
add
adc
push
pop
pop
cmp
sub
pop
shlb
and
into
imul
push
outsb
xlat
arpl
pop
add
bound
rorl
jb
bound
mov
pop
lods
cs
inc
xor
stos
mov
test
lcall
xor
into
xlat
pop
fcomps
fnstenv
insl
jae
je
cmpsb
imul
imul
js
inc
popa
lcall
xlat
xor
mov
mov
lcall
out
fldl
ljmp
imul
fs
shl
xchg
hlt
roll
aam
cmc
mov
adc
imul
in
jb
enter
popa
je
enter
outsl
outsl
insb
push
gs
jo
jbe
or
xor
inc
clc
inc
mov
or
arpl
sub
jae
mov
outsl
sub
ss
and
insb
and
test
imul
imul
into
sbb
inc
jo
xor
into
sub
jb
xchg
fadds
jb
mov
xchg
dec
pushf
popf
dec
xor
inc
adc
xlat
xor
sub
out
xor
and
jo
push
push
mov
lret
int3
pop
int
into
cmpsb
imul
push
imul
jne
insb
push
jne
lcall
sbb
xorb
lea
mov
les
and
fs
gs
jnp
inc
inc
xor
test
push
xor
popa
jnp
jl
jge
mov
push
xorb
sbb
int
pop
lods
adcb
outsl
mov
lods
adc
stos
mov
shlb
mov
lock
outsb
and
inc
loope
mov
ficomps
inc
addr16
icebp
xchg
dec
adc
push
pop
jbe
lea
mov
push
scas
jno
fsubrl
adc
and
pop
push
mov
pop
mov
jbe
push
aas
pop
inc
fs
push
loopne
sbb
mov
dec
insl
test
or
sbb
sub
jge
cmp
push
pop
mov
jo
loopne
push
out
in
fwait
clc
lret
pop
mov
add
push
test
or
mov
cmp
xor
movsb
pop
and
xchg
std
imul
rorl
pop
adc
mov
cmp
scas
xor
mov
adc
loope
into
cmp
outsl
test
push
bound
mov
adc
lea
stos
pop
movsb
or
mov
adc
incl
adc
and
lret
rorb
fcomp
mov
cltd
fcoms
loop
dec
pop
lock
test
outsb
cmp
or
mov
ss
call
in
adc
or
add
or
xlat
loop
push
test
mov
sbb
adc
sbb
and
dec
mov
xor
sub
repz
je
sbb
sbb
movzbl
test
std
bound
adc
mov
and
cmp
mov
icebp
ret
movb
jbe
xor
movsl
pusha
mov
xor
mov
std
adc
cmc
push
mov
inc
pop
dec
or
addb
sbb
ja
scas
outsb
jmp
xchg
or
fs
pop
push
jae
fiadds
push
pop
mov
add
sti
jl
mov
or
add
je
das
sbb
out
push
dec
clc
sub
dec
mov
push
xchg
xchg
insb
ja
jo
je
sub
and
mov
xchg
sbb
xchg
scas
popa
dec
adc
inc
popa
std
push
inc
fstp
in
pop
pop
or
cmp
and
aad
dec
or
movsl
or
and
add
push
dec
daa
or
bound
inc
jnp
push
bound
ret
cmp
mov
aaa
inc
mov
fists
adc
jmp
push
pusha
dec
cmp
int
cmp
adc
lods
adc
sbb
pop
add
xchg
or
cmp
sbb
or
pop
xor
and
or
xor
xchg
adc
inc
add
pop
or
push
inc
cmp
gs
adc
xchg
or
or
out
cmp
dec
dec
jmp
or
adc
push
aaa
adc
jae
cmpsl
adc
inc
stos
add
loopne
jp
repz
xorl
fistl
add
and
dec
rolb
push
call
mov
mov
or
mov
push
xchg
cmpsl
sahf
inc
movb
test
mov
or
xchg
sub
aam
xor
inc
add
sbb
fidivrl
movl
mov
lea
call
movsb
and
out
add
pop
addr16
or
mov
push
push
nop
loope
add
in
dec
js
popa
xor
push
or
test
or
adc
mov
inc
inc
adc
cmpsb
imul
mov
mov
jb
jge
sbbb
mov
pop
or
es
pop
inc
cs
imul
xchg
cs
adc
scas
jmp
cltd
adc
pop
data16
xchg
loopne
xlat
jne
gs
test
ds
into
ds
dec
rcll
rolb
push
jb
jmp
scas
xor
ret
es
and
cmpsb
vpcmpgtw
sub
je
sub
dec
inc
je
fcomps
jne
mov
and
and
mov
inc
or
jae
jmp
inc
lock
call
loopne
sbb
adc
in
xor
xchg
cltd
adc
pop
push
mov
bndstx
aam
lds
cmp
add
push
add
inc
pop
cmp
push
adc
dec
hlt
push
pop
inc
push
testb
loope
jge
mov
jo
pop
je
push
orl
jno
cmp
cld
push
jge
add
pop
ljmp
mov
fsts
fwait
add
sti
in
shlb
sub
lock
mov
cmp
xor
subb
cmp
loopne
xor
iret
divb
inc
icebp
div
stos
jle
pop
lock
push
mov
push
xor
cmpsl
std
cmp
cmp
outsb
mov
mov
ret
cmp
jl
and
inc
rcl
je
sub
jbe
cmp
pop
push
push
mov
fnsave
in
jb
push
ret
sbb
aam
lods
push
or
inc
shlb
enter
push
inc
outsb
mov
mov
ret
test
pop
or
inc
inc
leave
mov
mov
mov
push
pop
int
add
push
jl
jne
xor
push
mov
ret
sbb
orl
jae
pop
rep
mov
add
incb
add
dec
inc
mov
add
mov
loope
inc
push
xchg
and
in
outsl
daa
sahf
js
cmpb
je
repz
push
lock
icebp
roll
in
mov
data16
es
jns
out
insb
pop
inc
pop
mov
xor
mov
pop
in
mov
gs
push
imul
addb
ss
adc
mov
inc
lods
xchg
add
insb
sti
sbb
or
cli
or
jmp
ds
mov
push
mov
add
jmp
inc
sti
aaa
xchg
add
movb
xor
push
out
add
fildl
inc
sti
jno
lea
mov
and
push
sub
loope
imul
adc
fcoml
cmc
ss
leave
das
fs
mov
scas
jmp
pop
push
pop
loopne
sub
sbb
ss
adc
iret
pusha
xchg
sbbb
adc
mov
mov
adc
mov
jne
sti
insl
imul
or
or
inc
push
in
push
mov
sbb
pusha
and
push
sub
sub
fwait
sti
push
int
inc
mov
or
enter
or
daa
int3
cwtl
push
pop
cwtl
ret
movsb
xchg
xchg
outsl
sub
test
mov
lret
cmp
int3
sub
sbb
nop
xor
or
dec
sets
jo
incl
fsubrs
repz
adc
sbbl
add
enter
cmp
insb
pop
sarb
call
mov
repnz
push
pushl
mov
int
sbb
push
in
lock
push
add
adc
pusha
cwtl
in
inc
nop
insl
lret
mov
bound
mov
adc
push
push
add
int
pop
das
rorb
mov
sahf
addb
unpckhps
cld
pop
popf
add
jl
mov
sbb
fsubs
xor
repnz
mov
cmc
sbb
aad
push
inc
clc
outsl
add
jmp
jne
je
sar
js
cmp
push
xlat
dec
std
popa
push
stos
mov
adc
vmrun
clc
dec
jne
adcl
mov
mov
add
pop
jmp
sub
pop
mov
fstpl
enter
jno
pop
fs
dec
pop
mov
mov
or
popf
xchg
or
and
cld
cwtl
xchg
add
sub
add
adc
sbb
in
sbb
inc
add
mov
jmp
sbb
ret
inc
sbb
adc
popa
imull
outsb
sbb
shrb
pop
jmp
stc
loopne
or
cmp
mov
xor
in
add
aam
jp
ret
xor
and
dec
repz
loopne
addr16
stos
cmc
pop
lcall
xor
and
push
ds
add
adc
cwtl
lds
push
mov
push
mov
push
pop
xorl
adc
mov
sub
enter
pop
clc
div
add
orl
loope
mov
andb
pop
mov
mov
sbb
lcall
test
dec
cmpl
jge
xor
jl
jp
inc
addb
aam
and
sbbb
xchg
or
adc
mov
hlt
cmp
inc
xor
push
jne
xorb
push
xchg
jne
dec
aas
push
xor
imul
inc
mov
cmp
jle
and
jmp
inc
push
dec
jo
xchg
dec
lea
decl
push
lds
xlat
sbb
rcl
orl
insl
mov
and
fsubr
add
popa
subl
call
fs
push
sbb
or
push
repnz
repz
shrl
xlat
xor
loope
stos
into
test
shll
inc
dec
jne
sbb
mov
mov
jmp
adc
sub
hlt
mov
out
dec
push
and
pop
xlat
add
xchg
push
nop
inc
push
xchg
xchg
add
xor
jmp
cmp
jne
dec
in
test
push
testl
push
sbb
addl
orl
pusha
mov
mov
push
sub
or
add
adc
fdivrs
sub
jae
or
pop
pop
daa
je
xor
or
ljmp
add
pushl
sbb
jl
jmp
daa
loop
or
or
popf
imul
fwait
add
push
movsb
ja
mov
jo,pn
adc
or
add
hlt
push
push
xchg
popa
bound
xor
inc
sub
add
popa
adc
cli
lds
dec
sub
add
loope
xchg
or
leave
add
pop
pop
or
sub
fldt
pop
push
movsb
imul
dec
push
adc
cs
mov
mov
maskmovq
sub
ss
fadds
sbb
ret
inc
lahf
cmpsb
cwtl
adc
pop
fdivs
pop
sub
and
test
and
cmp
push
test
push
xchg
push
jo
push
stos
cmovno
test
lock
test
lea
cwtl
inc
insb
pusha
pop
mov
test
jae
mov
sub
enter
in
fs
push
in
incb
sub
aas
push
cmp
dec
push
mov
jae
mov
js
mov
shll
test
test
xor
pop
scas
pop
scas
mov
push
xlat
xor
mov
mov
mov
add
xor
mov
cmp
adc
cmp
xor
mov
rol
shrl
ret
lods
les
int3
pop
mov
insl
mov
add
scas
jmp
scas
int3
xor
pop
into
xor
dec
rclb
mov
notl
aam
aad
mov
pop
xlat
or
pop
aaa
cmp
fdivrl
lcall
loop
jecxz
call
out
test
imul
pusha
pop
cmp
popa
idivb
dec
shll
push
sbb
testl
cli
add
lcall
cmpsb
nop
movsb
lahf
test
subl
sahf
leave
lea
mov
aam
test
mov
dec
ss
mov
and
fcmovnb
sarb
xor
arpl
push
cmp
inc
in
arpl
test
fisubs
or
push
std
sbb
adc
push
jge
bound
adc
jnp
push
add
or
jae
pop
aaa
cmp
imul
adc
les
outsl
or
mov
jmp
aaa
or
adc
sub
rcr
fbstp
shr
inc
cmp
sbb
mov
jmp
add
mov
lea
cltd
pop
inc
pop
dec
addr16
ret
jmp
outsl
or
jmp
xor
test
subb
outsb
and
clc
jmp
sub
inc
cli
aad
imul
lds
mov
xchg
lcall
mov
add
lods
jo
in
push
sub
cmpsb
arpl
mov
mov
xchg
mov
imul
cmpsb
imul
mov
xchg
les
testb
fcoml
add
test
push
xlat
mov
push
push
test
inc
push
stos
push
shrb
push
imul
sbb
add
scas
pop
adcb
or
pop
cld
mov
mov
test
add
or
and
push
push
filds
divl
adcb
and
cmp
mov
push
mov
sbb
testb
sbb
or
mov
shll
mov
add
icebp
shlb
subb
pushf
add
dec
cld
xchg
add
cwtl
jmp
imul
popf
sbb
push
lret
xor
xor
or
jne
push
movsb
stos
aaa
test
je
mov
pop
mov
mov
and
inc
xchg
cmp
mov
and
dec
sbb
inc
outsb
pop
cltd
xchg
std
and
add
push
adc
sub
fadd
sub
jbe
bound
pop
aaa
pop
mov
pop
ret
pop
pop
fs
hlt
les
mov
push
rorb
pop
ja
rcrb
sub
xor
fadds
pop
fdivs
fsts
fisubrl
popa
jg
cmp
movb
ret
test
sbb
nop
daa
add
mov
enter
aas
aas
push
pop
mov
add
adc
lods
ljmp
or
adc
in
fsubr
sub
sbb
pop
lret
pop
imul
adc
add
imul
push
jno
test
imul
cmpsb
imul
andl
xchg
push
xchg
imul
add
push
cld
test
roll
or
push
push
mov
add
add
cmp
xchg
sbb
mov
mov
cmp
dec
pop
call
icebp
adc
sub
mov
sub
push
and
repnz
or
or
jmp
and
test
mov
cmp
fbld
mov
or
push
push
mov
test
sbb
sub
mov
xor
in
sbb
in
in
aaa
pop
or
mov
add
or
dec
add
mov
aam
je
repz
stos
movsb
add
mov
aas
inc
xchg
in
pop
lods
pop
and
sbb
outsb
sbb
sbb
push
dec
add
push
mov
inc
pop
addr16
cs
and
das
fs
mov
lcall
lcall
loopne
add
mov
mov
stos
and
je
aad
mov
push
stos
lea
push
mov
jns
mov
mov
addr16
jge
pushl
jbe
push
mov
or
cmp
inc
rcrb
inc
in
ret
jmp
or
cwtl
mov
sbb
repnz
mov
shr
test
adc
sub
jle
pop
sub
add
jmp
mov
fwait
rcll
add
or
loop
inc
insb
out
jle
ret
sbb
add
mov
xchg
inc
fstl
xchg
cmp
les
popa
jmp
push
fisubs
sbb
fcompl
loope
add
xchg
out
dec
xor
les
push
loope
das
push
push
push
sbb
test
push
jl
mov
dec
inc
jb
shr
cmpl
pushf
mov
and
dec
inc
mov
ljmp
mov
cmp
sbb
in
adc
fidivl
or
adc
out
testb
out
pusha
cmp
cmc
subb
jbe
loopne
ja
xor
pusha
inc
add
jecxz
and
dec
mov
dec
pop
pop
push
pusha
insb
mov
and
add
icebp
or
pop
jl
jg
push
int3
leave
repz
cli
jg
cmp
add
jl
inc
cmp
jl
push
push
mov
add
or
fildl
daa
idivl
sbb
dec
xchg
je
push
or
icebp
out
jbe
mov
mov
add
mov
mov
sub
fiaddl
and
pop
lds
mov
or
rcl
sbb
sbb
cmp
push
mov
add
cmpsb
imul
lods
imul
jae
or
push
std
mov
push
aaa
addl
shll
movsb
jl
pop
mov
add
xchg
mov
rcl
lds
les
pop
sub
cmpb
jbe
xchg
cmp
fisttpl
mov
add
mov
int
or
addb
push
bound
push
xor
mov
pop
mov
je
and
cmc
pop
andb
ja
call
pop
cwtl
sub
fdivrl
je
dec
push
inc
xor
lret
test
mov
inc
mov
inc
aad
lock
int
lcall
lea
cmpsb
imul
mov
lret
mov
inc
out
xchg
out
cld
mov
ret
sub
fsubrl
mov
mov
lcall
mov
and
pop
addr16
sub
jbe,pn
xchg
rcrl
shlb
push
or
inc
xlat
lock
nop
ficompl
cmp
dec
lds
mov
cmp
call
decl
mov
adc
mov
nop
jp
mov
and
test
adc
repz
sub
pop
pop
add
mov
cmpsb
push
jbe
fsubr
test
ss
imul
icebp
lcall
out
jmp
lds
aam
adc
dec
out
pop
add
mov
cmp
xor
cmp
lret
push
sarb
sbb
std
adc
xor
sub
movsl
mov
inc
ret
jmp
push
mov
aam
or
pop
jbe
jne
fmul
dec
mov
lea
jne
jmp
arpl
outsl
or
sbb
mov
pop
sub
cmp
jp
mov
xchg
push
push
mov
and
cmc
test
mov
mov
arpl
xchg
ret
sub
pop
test
sub
and
cmpsl
mov
jg
jmp
mov
icebp
mov
xor
movl
xchg
mov
xchg
xchg
loope
call
scas
jmp
xchg
mov
imul
clc
xchg
mov
repnz
shll
push
mov
mov
xor
mov
mov
shll
loop
cs
loopne
loopne
pop
add
xchg
jp
test
int3
mov
mov
rcrl
fsubrl
inc
pop
fstpl
subl
cli
mov
xchg
cmp
call
lahf
push
jg
cmp
pushf
or
sbb
orb
or
aam
xchg
je
mov
loope
cmp
jo
xchg
mov
xor
jne
iret
cld
roll
sbb
add
lcall
jne
or
insl
arpl
pop
adc
mov
and
sbbb
jne
mov
jp
call
add
sub
add
add
xor
fistps
jmp
call
hlt
mov
cs
cmp
lret
adc
orl
sub
mov
or
sbb
cs
push
imul
sbb
loope
inc
xor
xchg
dec
sahf
adc
sbb
shll
adc
scas
imul
addr16
pop
jnp
leave
push
das
imul
jl
cmpsb
dec
add
lds
mov
mov
pushf
add
pop
mov
shrl
and
addr16
and
ss
aad
pop
outsl
cmpl
add
jno
cmpsb
and
aam
xorl
adc
mov
sbb
mov
daa
and
shr
fdivrs
or
jmp
or
inc
das
in
js
mov
pusha
xor
shll
test
les
loopne
and
int3
pop
or
loop
jge
cmpsl
or
or
push
mov
push
mov
mov
mov
cmpsb
mov
pop
sub
test
lds
in
fs
mov
mov
sbbl
sti
push
rorb
push
or
or
mov
sarb
mov
xorl
pop
ret
adc
add
xorl
ja
and
je
mov
dec
mov
jne
jbe
inc
stos
add
sbb
push
dec
mov
push
sbb
dec
rcrl
jns
jb
int
mov
or
sbb
jmp
jl
add
mov
push
sub
push
inc
xlat
mov
lock
push
and
fadds
cmp
pop
jecxz
in
mov
sbb
idivb
inc
shrb
add
cs
pop
rolb
rol
outsl
jb
add
int3
push
insb
push
xlat
ja
xchg
int
fdivrp
inc
loop
insb
push
adc
mov
out
pop
xchg
out
pop
movsl
push
mov
add
or
or
mov
push
push
scas
adc
xchg
pop
and
pop
jne
xor
data16
push
dec
or
inc
xchg
imul
add
fistpl
loop
dec
lods
hlt
shll
dec
pop
inc
dec
shll
or
enter
dec
cmp
lcall
out
bound
shll
and
jmp
jp
dec
ficoml
mov
push
movb
cltd
mov
sub
mov
pop
push
push
jbe
mov
lret
mov
push
push
dec
dec
lret
mov
lret
push
dec
pusha
dec
dec
inc
aad
mov
sbb
sbb
push
mov
sbb
outsl
sbbb
dec
leave
call
or
push
push
cmpsb
loope
testl
movb
mov
lret
pusha
in
mov
mov
pop
stos
and
aas
push
lock
lock
pop
aad
add
lcall
neg
ss
push
jmp
push
or
jno
mov
sbb
mov
fnstcw
sbb
mov
dec
fldl
fiadds
mov
loopne
loope
xchg
sti
je
pusha
fsubs
das
rolb
and
mov
push
xchg
rclb
adc
inc
ret
andb
enter
mov
lods
jnp
sbb
add
push
xor
adc
xor
pop
pop
pop
jae
or
decl
push
std
pop
jbe
push
xor
push
jbe
mov
cmp
jg
cmp
xor
aas
idivb
inc
push
cmp
pop
jb
push
push
test
aaa
jne
or
scas
mov
adc
nop
xor
nop
pushf
add
and
push
aaa
nop
rolb
cmp
clc
clc
mov
add
shrb
mov
jo
insb
inc
std
aaa
in
mov
sbb
in
out
or
pop
jne
add
mov
aas
jmp
stos
jmp
jo
aam
aad
xor
push
fmuls
sbb
in
leave
sahf
nop
andb
je
loopne
loope
jo
dec
xor
aam
fdivl
and
aaa
fcmovbe
or
inc
lods
dec
aaa
mov
ret
push
jmp
mov
pop
in
in
notl
push
sbb
insl
sbb
dec
push
shl
outsl
sub
adc
test
jge
sbbb
adc
stos
mov
inc
cltd
aad
mov
shll
sub
sti
adc
cmp
add
rorl
jne
and
push
push
lcall
sbb
test
sbb
push
cwtl
cmp
sar
data16
lret
cmpsb
or
adc
cs
ret
bound
orb
sbb
and
sbb
and
or
test
xchg
and
xchg
xchg
lea
incb
mov
add
push
sbbb
push
inc
jp
adc
push
xor
loopne
rorb
xor
push
xor
mov
ficoms
sbb
push
inc
pop
lods
or
push
inc
mov
cli
pushl
hlt
dec
shll
and
add
pop
add
xor
push
imul
sub
insb
or
sbb
sub
jo
add
add
out
mov
add
pop
jmp
mov
in
ret
test
pop
fsubs
syscall
in
ljmp
outsb
adc
mov
hlt
sub
xor
cmc
push
mov
mov
js
dec
mov
or
cmp
jbe
push
cli
xor
adc
pushf
lods
push
test
les
js
pusha
test
add
inc
cmp
rcrl
or
rorl
pop
cmpl
fbstp
into
mov
shlb
ljmp
cld
test
xorb
int
add
shll
pusha
fsubs
push
push
mov
jno
dec
insb
xor
push
or
push
cld
mov
push
xor
clc
js
sbb
jmp
add
lcall
fstps
loop
push
nop
add
add
pop
sub
jbe
mov
lods
testl
popf
and
rcrb
sti
inc
test
rcll
adcl
cmp
add
add
xor
push
inc
xor
sbb
mov
pusha
adc
hlt
inc
cmc
inc
mov
arpl
pop
dec
mov
or
lcall
jae
pop
ret
add
xchg
cmpsl
in
add
cmp
orb
xor
fs
daa
cmp
jmp
out
pop
cs
mov
mov
lcall
popf
xor
bound
sbb
imul
fidivl
mov
lock
or
mov
pop
mov
enter
mov
mov
mov
mov
and
mov
scas
jmp
rorl
aam
ss
xor
jl
mov
outsb
or
push
fiadds
sub
loopne
loope
loop
push
sti
xor
imul
push
xlat
inc
mov
je
sbb
shlb
fmuls
lods
loop
les
xchg
cmp
loop
cmpl
and
das
flds
test
xchg
ja
lods
insl
pop
jb
push
in
jo
femms
pop
jae
dec
pop
and
add
outsb
lret
das
xchg
rcll
fs
add
pop
push
data16
shll
mov
pusha
test
movsl
stos
push
pop
dec
push
insl
add
adc
push
sub
jbe
arpl
adc
push
add
addb
adc
pop
ret
pushf
mov
mov
push
popa
pop
mov
mov
test
or
mov
inc
mov
outsl
push
dec
mov
testl
push
insb
or
in
or
pop
aam
jle
mov
gs
stos
das
or
outsl
add
jge
jne
pop
add
repnz
into
aas
adc
push
aaa
movsb
or
xor
sbb
or
mov
in
pop
adc
push
push
fsubr
pusha
or
adc
add
js
fimull
out
out
sub
jnp
or
cld
mov
sub
jne
jge
pusha
mov
cmp
push
sub
fsubr
scas
loopne
sub
push
push
push
or
and
popf
dec
adc
dec
push
pop
adc
mov
adc
inc
sbb
mov
sub
add
mov
add
call
mov
lea
shr
test
jle
mov
insb
or
fldenv
push
mov
cmpw
std
adc
jge
loope
rdtsc
or
iret
add
inc
inc
dec
jne
add
cmp
jne
pop
pop
pop
or
in
jbe
cwtl
andb
int
cmp
div
fimull
jmp
adc
hlt
daa
icebp
add
push
mov
mov
inc
inc
or
repnz
lea
out
sub
mov
test
or
push
mov
inc
inc
cmp
adc
xor
mov
xchg
adc
inc
jge
cmc
pop
subb
inc
add
and
pop
inc
mov
and
mov
add
add
push
mov
and
cs
xchg
push
or
jnp
cmc
sbb
push
jb
and
push
cmp
mov
or
mov
je
jb
rclb
dec
push
rorb
ljmp
aas
test
je
push
js
loopne
and
or
and
stos
ficompl
jl
fsubrp
jle
xchg
jo
add
cmp
sub
roll
mov
ret
clc
ja
adc
dec
cltd
idiv
and
push
add
mov
cmp
scas
pop
aad
sbb
xchg
pushl
adc
adcb
sbb
ret
in
or
test
dec
push
inc
cli
mov
bound
mov
mov
add
push
ss
mov
fidivrs
sub
std
sub
mov
cld
jl
sub
fwait
test
cmp
xor
push
cmp
add
adc
sarl
shll
push
lea
pop
adc
and
mov
or
sbb
stos
ficoms
lcall
aaa
jne
push
xor
push
rcll
enter
mov
int
mov
push
pop
push
inc
and
pushf
add
push
and
xchg
ret
mov
or
mov
inc
pop
push
sbb
pop
inc
shll
jbe
mov
cld
out
pop
mov
xor
dec
push
and
ss
mov
add
push
jbe
rolb
icebp
enter
dec
fstpl
pop
and
sahf
test
adc
cmpsl
and
add
mov
in
arpl
jnp
aas
rcrb
pop
ret
loop
shlb
subps
and
xor
sbb
neg
addl
adc
int3
adc
daa
or
daa
or
sub
xchg
add
das
and
jmp
push
cwtl
inc
sbb
nop
add
mov
andl
xor
fisubrs
pop
jne
adc
dec
pop
jbe
loopne
dec
clc
lret
ja
in
and
inc
push
ss
mov
fisttpl
jge
ss
sbb
enter
inc
in
push
roll
in
add
aam
imul
lea
mov
iret
je
je
outsl
mov
je
adc
pop
cmp
push
fcomp
mov
lock
or
jae
test
push
je
mov
cmp
popf
inc
jmp
cmp
jb
sub
popf
jle
sbb
add
je
decl
add
jmp
mov
add
add
sbb
rcll
add
add
sbb
shll
xor
sub
or
fcoml
mov
gs
shll
lods
mov
adc
lahf
cmp
inc
and
fcomp
or
sub
inc
js
xor
mov
movsl
push
rcl
outsb
cmp
shrb
pop
xor
shll
cltd
xchg
xchg
sahf
mov
and
leave
aam
mov
push
out
add
cwtl
cmpsb
pop
push
add
fstl
sub
and
test
lods
mov
cltd
cmpsb
or
cmpsb
dec
shlb
les
lds
xorb
movsb
lcall
imul
xchg
xchg
xchg
mov
cmpl
mov
pop
filds
pop
loope
loop
pop
xlat
mov
jge
adc
inc
je
xlat
pop
mov
mov
ss
inc
xlat
jne
mov
mov
mov
mov
fldt
mov
cwtl
sub
ss
cltd
sub
fildl
pushf
popf
setle
mov
cwtl
mov
and
push
movsl
cmp
mov
test
and
pop
or
in
or
push
lods
adc
roll
pop
adc
clc
and
jb
sub
daa
and
mov
mov
daa
mov
pop
mov
jo
sbb
add
xorl
lods
inc
sbb
cmpsl
push
cwtl
mov
inc
add
movups
arpl
cld
test
pop
lock
jle
mov
add
cmp
pop
leave
lahf
pop
movsb
mov
rclb
mov
int3
mov
insb
inc
sbb
mov
testb
es
mov
dec
cmpb
call
stc
call
je
sbb
mov
mov
adc
inc
cmc
mov
inc
lcall
or
dec
mov
cmp
sbb
adc
sbb
or
popf
sub
sbb
enter
cmp
lret
dec
test
inc
adc
sbbb
ror
in
fmuls
and
push
mov
aam
insb
int
out
shlb
adc
dec
shlb
data16
icebp
xor
push
stos
andl
inc
inc
and
adc
add
sti
xor
cs
out
jo
and
or
xor
leave
loope
push
lods
adc
test
test
mov
jmp
adc
add
xor
ret
add
enter
lret
int
fs
or
insb
push
add
jle
push
insl
je
in
and
sub
int
sbb
add
mov
sbb
sbb
inc
ljmp
inc
daa
push
outsl
or
fnsave
into
fcmovnbe
push
pusha
cmpb
inc
lds
bound
lds
andw
or
arpl
rcrl
test
jb
xchg
add
and
or
out
push
add
xchg
pop
push
inc
add
decl
adc
fbstp
es
mov
sbb
pusha
mov
jne
int
push
push
dec
je
pushf
and
imul
add
xchg
clc
inc
push
xlat
mov
jle
pop
xchg
jb
out
movsb
sub
jle
inc
clc
cmp
jne
in
lsl
inc
cs
cmp
sbb
popf
lock
fiadds
mov
pop
xchg
repz
pop
push
sbb
lret
out
addb
inc
jle
jmp
movzbl
je
sub
jl
add
jg
cmp
push
adc
movsl
stc
adc
shll
shll
cmp
xor
push
test
and
outsl
pop
xor
shll
pop
movsb
mov
arpl
sub
sbb
fadds
aaa
in
pop
mov
rep
stos
dec
out
adc
push
movsl
les
js
add
rol
stc
mov
pop
add
clc
xchg
push
mov
ret
popa
into
cs
mov
push
pushf
or
pop
jl
and
push
push
dec
jnp
cmp
mov
mov
call
sub
adc
xchg
and
mov
je
adcl
push
add
adc
mov
cmp
je
dec
inc
mov
mov
sbb
sbb
inc
adc
cmp
mov
adc
mov
xchg
mov
orl
jmp
leave
sub
push
inc
imul
mov
enter
insb
cmp
inc
pop
fadds
fcompl
push
mov
fsubr
fldt
mov
xorb
lds
pop
je
or
inc
pop
add
push
cld
es
push
adc
mov
cld
push
jmp
cmp
pop
inc
cwtl
add
adc
cmp
and
mov
pushf
out
pop
push
adc
add
jp
adc
popa
fsubs
add
cltd
mov
idiv
test
sub
das
xchg
shrb
loop
adc
xchg
mov
test
add
ja
jbe
and
xor
jge
fcomps
push
ss
insb
in
shlb
scas
jne
xchg
lods
test
and
addb
add
dec
push
fimull
imul
mov
jmp
lods
fmuls
in
je
jmp
out
cs
pop
dec
push
sub
bnd
adc
add
sub
pop
inc
call
cmpsb
imul
addr16
shlb
test
test
adc
jmp
test
pop
lds
movb
jmp
add
add
dec
fisubrl
lret
dec
add
int
into
mov
iret
jne
das
sarl
cmpsl
mov
scas
cmp
xchg
addr16
in
push
and
push
mov
mov
dec
sub
mov
add
gs
outsb
add
test
cwtl
or
push
or
dec
and
dec
xlat
jne
fcompl
fldl
fistps
mov
jecxz
in
or
jne
in
out
push
mov
push
adc
push
mov
mov
add
adc
cmp
outsb
pop
adc
inc
fsubl
aaa
pop
pop
mov
hlt
mov
enter
call
clc
lea
or
iret
clc
dec
dec
jp
pusha
mov
fimull
push
mov
jbe
push
clc
rorl
jne
aas
int3
cs
push
prefetchnta
and
mov
lods
lock
insb
add
adc
jmp
push
pop
cmpsl
pop
loop
mov
push
or
push
je
push
add
jnp
add
sbb
outsb
mov
or
jne
je
test
iret
mov
mov
cmp
lods
repz
xorl
pushf
add
sbb
mov
xchg
pop
adc
les
out
pop
icebp
adc
addr16
mov
stos
test
or
lret
test
inc
repz
out
push
inc
test
inc
cld
pop
jmp
add
add
xchg
cmp
or
adc
pusha
scas
cld
push
push
sbb
dec
adc
or
push
add
dec
inc
adc
push
add
pop
movl
cmp
mov
or
dec
push
xchg
sbb
lret
jge
adc
jo
mov
or
cmp
push
adc
shll
lock
push
pop
push
cmp
and
adc
es
les
inc
or
inc
or
add
inc
adc
adcb
mov
jae
or
push
outsb
shll
stos
mov
std
adc
orb
pop
or
push
add
insb
lret
or
or
or
mov
je
pop
or
lock
pop
adc
push
jl
add
push
and
movb
and
sub
pop
mov
adc
rorb
rclb
ret
push
jo
inc
mov
xor
ds
inc
or
pop
sub
repz
sbb
push
stos
add
inc
pop
add
mov
adc
mov
adc
loopne
in
cmp
xchg
rorl
push
repnz
fsubr
and
jecxz
or
sbb
push
mov
addr16
lret
stos
fsts
push
rcll
cmpb
push
xor
fstps
mov
in
fildl
add
sahf
les
adc
or
outsl
outsb
cmp
addl
sbb
jno
xor
or
popa
jb
mov
aam
aad
subl
xor
and
inc
test
mov
addr16
push
addr16
loope
jecxz
or
pop
pop
out
imul
dec
data16
pop
repz
test
pop
idiv
psubw
cli
push
sti
test
in
cmp
cmp
popa
stos
mov
mov
test
add
repnz
jl
add
or
mov
inc
insl
movsl
pop
popa
mov
test
add
roll
dec
jo
xchg
push
addb
mov
pop
xor
lret
mov
stos
cmpsb
icebp
inc
mov
add
add
in
adc
enter
jecxz
add
xchg
int3
add
cmpl
stos
push
je
orl
jmp
in
arpl
mov
out
shl
or
jmp
repz
sbb
or
pop
push
mov
loopne
mov
cld
jae
mov
out
or
add
add
ret
or
roll
adc
lahf
data16
dec
outsl
dec
and
pop
orb
movsb
add
addl
and
sahf
or
loopne
push
int
mov
jae
sbb
xor
pop
or
cltd
inc
es
sbb
jae
frstor
rorb
pop
clc
das
stc
imul
sbb
and
sub
and
les
push
mov
mov
rcrb
inc
mov
es
loopne
mov
mov
sbb
mov
je
jp
xor
push
cli
adc
mov
int
sbb
and
loop
cmpl
mov
clc
xor
hlt
add
push
iret
jle
jae
ss
push
inc
or
dec
add
and
mov
mov
sub
dec
mov
shlb
outsb
shlb
cs
outsb
or
mov
add
xchg
subb
jb
xor
outsb
popa
ja
add
jnp
sbb
sti
pop
and
imul
dec
popa
addb
fistl
lods
jle
mov
or
cli
out
inc
fcomp
mov
call
cli
mov
sub
mov
xchg
push
add
sub
mov
inc
and
push
or
shrb
push
lret
inc
add
mov
add
xor
xor
lock
lods
or
cmp
mov
mov
imul
or
sub
cltd
fdivrs
sbb
add
inc
push
adc
push
inc
and
push
aad
add
sbb
fcomps
push
xor
cmpsl
and
and
movl
inc
out
mov
add
xor
hlt
push
mov
push
add
push
mov
jmp
mov
rcrb
inc
xchg
pop
cld
inc
sbb
xor
dec
shlb
roll
clc
in
in
hlt
add
lds
push
bound
or
test
pop
mov
adc
outsb
es
dec
add
jmp
sbb
arpl
pushf
stc
mov
add
push
jmp
bound
out
jge
outsb
rcll
pushf
js
push
inc
je
out
cmp
stos
cmp
lds
pop
test
jmp
push
inc
sub
aad
cmp
xchg
test
push
mov
add
push
lret
inc
cltd
cmp
mov
mov
gs
sahf
loopne
inc
mov
fwait
push
mov
pop
dec
pop
mov
cmp
xchg
or
cmpsl
rcrb
sbb
cmp
jmp
lds
fwait
and
mov
adc
test
mov
shrl
add
pusha
je
mov
push
jp
insb
aam
add
bound
inc
push
icebp
push
and
push
mov
jmp
sahf
mov
and
pop
sub
sti
fstp
mov
push
cmp
jb
addr16
out
paddq
outsb
nop
in
or
rorl
or
add
pop
in
mov
inc
inc
add
or
push
inc
shlb
sbb
inc
jnp
jle
add
mov
or
sub
pusha
dec
mov
add
push
sbb
sti
pushf
or
mov
out
pop
pop
movsbl
push
mov
mov
or
jo
add
je
cmp
sbb
inc
xor
adc
sbb
into
es
dec
or
andb
xchg
mov
push
incb
or
int3
sbb
mov
int
add
addb
repnz
call
and
inc
lock
ret
sbb
jnp
jmp
push
cli
mov
mov
cmpb
pop
jnp
add
xor
test
loope
inc
les
andb
inc
jmp
dec
scas
pusha
ja
andb
sub
and
or
sbb
xlat
jp
sub
adc
rcrb
scas
mov
add
mov
push
addr16
mov
jnp
mov
rolb
push
in
push
add
cmp
std
or
or
pop
adc
test
pop
lds
push
add
int
movl
or
inc
mov
and
add
jp
mov
fisubl
inc
jns
faddl
push
mov
mov
ds
leave
cwtl
cmpb
arpl
mov
mov
adc
mov
mov
roll
push
dec
les
mov
xchg
pop
cmp
sbb
pop
testl
inc
and
jmp
and
leave
lock
aam
mov
mov
pop
je
lods
dec
cs
push
and
in
push
sar
pop
mov
popa
pusha
inc
and
jg
leave
test
adc
mov
add
lahf
adc
cmp
sbb
or
insb
pusha
cmpl
pop
loop
je
fs
int3
push
cmpsb
mov
test
cs
or
movsb
shl
or
pop
xchg
push
or
push
shll
imul
push
pop
outsb
cmp
enter
or
adc
mov
or
neg
jle
je
decl
and
jo
idiv
mov
les
mov
lcall
or
and
pusha
fistpll
add
adcl
ds
and
or
jne
mov
fdivrl
xchg
push
orl
sub
sbb
sar
mov
or
cmp
xor
mov
sbb
add
stos
addb
test
icebp
outsl
inc
or
clc
push
xor
push
ljmp
adc
xor
ficoml
pop
in
push
insl
mov
mov
push
add
pop
mov
pushl
bound
push
mov
lock
adc
sub
sbb
hlt
cmpsb
adc
mov
add
fisubl
out
push
mov
dec
xchg
fwait
clc
mov
pushf
or
jne
shr
lods
add
outsb
mov
les
ret
pop
jb
xchg
push
add
add
adc
mov
lret
jle
js
adc
sbb
adc
fmuls
adc
add
xor
fdivr
rcrb
lock
cld
outsl
fldt
mov
mov
cmpl
and
jno
lcall
push
mov
pusha
shlb
mov
fadds
gs
and
jo
popa
inc
movb
pusha
xchg
fs
and
and
push
dec
and
and
dec
inc
inc
cmp
and
and
xor
js
inc
sahf
and
nop
in
in
inc
inc
inc
inc
lock
clc
cld
mov
or
adc
sbb
nop
orb
lods
sbb
and
add
fcom
shlb
int
mov
dec
mov
cmp
mov
sub
jmp
jo
push
pop
mov
je
lods
shlb
sbb
mov
lock
cmp
mov
addl
mov
add
in
cmp
pop
add
add
xor
add
xor
mov
jle
aam
add
adc
and
scas
mov
mov
and
and
shlb
sub
jl
cmc
or
int
mov
loop
mov
mov
adcb
fadd
and
or
dec
mov
incl
mov
clc
daa
lea
pop
nop
leave
xchg
mov
jg
pop
push
aad
in
add
hlt
fwait
or
outsb
add
pushf
adc
je
push
cmp
inc
push
outsb
test
shll
sub
aam
push
mov
dec
ds
adc
xor
xor
dec
pusha
cmpsb
imul
imul
mov
pop
xor
add
imul
scas
imul
mov
jmp
scas
sbb
cs
out
dec
pushf
ret
mov
je
loop
sbb
cmpsl
mov
xchg
add
stos
ss
rcr
call
dec
rcll
es
xor
sarl
inc
dec
push
pusha
pop
xlat
jne
outsb
push
lret
cmp
shll
jp
push
rcll
xor
mov
or
lock
loopne
lods
shll
lock
outsl
addb
add
jmp
pusha
jbe
mov
aas
rcll
xor
jae
inc
shll
or
jmp
andb
pushf
jno
addr16
in
mov
loopne
pop
jp
out
mov
out
pop
cmovle
or
psrlw
test
mov
cmp
fs
fldenv
pop
hlt
or
add
inc
cwtl
outsb
jnp
jg
sbb
ds
push
js
add
sbb
sti
das
inc
mov
mov
add
insb
outsb
nop
andl
push
fcomps
xchg
daa
pushf
pop
cmpsb
push
mov
sbb
fwait
andl
pop
sub
gs
pop
dec
add
adc
pop
add
xchg
adc
mov
pop
adc
xchg
add
mov
adc
fdivrl
call
add
daa
xor
pop
daa
mov
nop
adc
add
stos
test
ja
pop
mov
cmp
mov
inc
lock
or
insl
sti
cmp
outsl
fs
gs
popa
outsb
fs
lods
jmp
add
imul
jb
arpl
push
outsl
pop
adc
jae
popa
jbe
loop
fs
add
jb
add
outsl
dec
fnstenv
int3
inc
outsb
je
jb
shll
xchg
push
imul
adc
sti
imul
add
outsl
jae
or
add
test
dec
cwtl
outsl
inc
mov
cmc
div
mov
mov
imul
xchg
add
lods
std
lods
aam
push
dec
sbb
jns
adc
lds
pop
add
or
jns
mov
adc
jb
jge
fldt
jns
push
add
gs
aad
push
and
push
insb
push
je
ret
divl
mov
outsl
int3
cmp
jne
push
out
sbb
jae
test
sbb
out
push
outsl
imul
in
in
add
pop
push
add
jae
call
sbb
shlb
dec
sbb
adc
mov
or
mov
mov
jne
in
in
push
or
gs
outsl
adc
pop
popa
imul
insb
repz
imul
test
addr16
jmp
repz
outsl
ja
inc
fsubrs
xchg
ljmp
or
xchg
outsl
insl
insl
mov
outsb
outsb
mov
jae
inc
test
out
addb
insb
insb
or
and
orl
push
inc
jae
mulb
or
pop
clc
fldt
leave
add
arpl
outsb
or
push
dec
inc
dec
hlt
push
nop
sub
add
aas
xor
outsb
outsl
pop
inc
pop
push
add
jp
xor
scas
xor
dec
setns
or
dec
jnp
addb
js
xorb
pop
stos
xchg
sbb
sti
test
cmp
loope
ja
jae
fdivl
bound
outsl
push
lea
int
mov
and
dec
mov
mov
xor
add
insb
test
jecxz
adc
or
arpl
testl
sbb
cmp
ret
or
jb
push
mov
mov
daa
lret
ficompl
sti
jo
pop
push
daa
xor
mov
jo
je
fsubr
jbe
adc
imul
or
fcmovu
inc
outsb
jne
add
push
mov
mov
movsl
ret
cwtl
pop
or
mov
pop
fstpl
xorb
imul
loope
jo
add
mov
push
imul
push
or
loope
push
add
mov
or
dec
lret
addr16
jmp
or
cs
jb
dec
pop
js
inc
dec
dec
add
adc
or
fmuls
fldenv
adc
dec
inc
sub
cmpsl
in
mov
jns
inc
popf
dec
fldt
icebp
inc
dec
push
dec
add
jne
je
or
jne
setp
jbe
gs
inc
pop
or
push
ja
arpl
insb
or
add
adc
sub
add
sbb
arpl
insb
ja
sub
pop
imul
inc
sbb
cs
decl
movb
and
hlt
inc
push
dec
cmp
test
jg
mov
fs
fs
inc
adc
cmp
xor
pop
loope
in
mov
pushl
testl
xor
sbb
lcall
add
push
jne
rcll
dec
jns
movsb
push
inc
or
test
gs
out
adc
pop
cmc
mov
orl
inc
push
cmp
rcll
std
insb
in
jae
xchg
std
push
add
pushl
pusha
insl
jne
and
or
add
sbb
sbb
mov
loopne
mov
pop
imul
xlat
mov
shl
addl
ret
xor
sbb
lock
xorl
or
sub
nop
add
sbb
xchg
add
mov
add
mov
sub
addl
pop
mov
add
mov
pusha
add
and
and
pop
enter
es
push
addl
fs
dec
testl
and
add
aas
ret
adc
add
push
inc
aas
mov
add
add
add
outsl
add
sbbb
add
mov
leave
inc
add
add
add
mov
mov
mov
pop
test
daa
pop
or
xchg
movsl
add
fisttps
pop
and
mov
aaa
or
das
add
xor
adc
jae
jb
in
enter
jp
jg
mov
push
inc
jb
push
and
ja
or
push
imul
inc
mov
jo
or
rolb
mov
pop
and
add
and
cli
adc
popl
jmp
adc
push
or
jl
sub
iret
and
add
pop
or
fwait
pop
cs
push
add
push
push
push
call
dec
inc
push
push
inc
push
inc
pusha
rcrb
dec
adc
aad
lock
dec
push
addr16
fisubrl
push
dec
xchg
imul
mov
adc
shrl
jp
push
push
jb
cmp
sub
in
push
cmpb
and
ret
pop
out
pop
cmp
push
stos
retw
addl
adc
add
mov
xchg
bndstx
test
clc
pushf
sbb
cld
dec
test
and
xbegin
xor
fcmovb
cli
mov
push
cmpl
adc
xchg
add
cmp
lock
imul
sbb
sub
mov
and
rcrl
cmpsl
cmp
xor
add
stos
sub
fnstcw
sub
jg
ljmp
int3
aas
call
decl
imul
insl
fistps
fists
xchg
push
mov
mov
bound
jg
pop
pop
fstpl
lock
or
sub
divb
and
gs
repz
aas
add
bound
or
mov
pop
mov
xor
pushl
fsubl
cli
or
xor
call
in
jg
mov
pop
mov
push
lock
stc
mov
inc
jo
pushl
jns
mov
pmaxsw
dec
je
dec
outsb
jne
loop
fs
push
push
pusha
inc
xor
adc
or
jne
mov
sub
jo
sbb
outsl
inc
add
mov
dec
add
insl
loope
pop
push
dec
push
push
xor
dec
inc
pop
inc
add
pop
jnp
hlt
sbb
inc
cmp
xor
jbe
imull
add
inc
push
pop
clc
or
test
testl
imul
cmp
pop
cltd
sub
lret
add
push
push
push
or
cmpsb
fwait
ret
test
lods
mov
dec
add
je
adc
fs
fsubl
xchg
sub
dec
outsl
jp
insb
popa
das
xor
mov
sbb
and
sub
addr16
jo
and
and
cmp
dec
and
dec
outsb
xor
inc
and
pop
mov
adc
das
imul
or
js
in
fucomi
mov
in
or
sbb
mov
add
jbe
jmp
mov
insl
jae
mov
sbb
imul
fs
rcrb
add
push
sub
sub
jge
xchg
and
das
xor
lahf
test
fwait
mov
pop
push
jns
gs
xchg
mov
dec
lods
ja
sub
xchg
jae
mov
and
lock
and
enter
call
add
add
jecxz
incb
or
daa
dec
aas
xor
and
jnp
cld
enter
inc
mov
dec
and
idivl
xor
mov
outsl
je
daa
add
jne
jg
cmp
jnp
cmp
mov
dec
pop
cmp
addr16
dec
mov
aaa
push
repnz
adc
pop
add
fists
add
adc
dec
push
adc
inc
shll
or
js
adc
push
or
add
hlt
push
pop
mov
xchg
inc
shll
decl
adc
cmp
sti
or
addr16
in
add
mov
fcomip
aaa
mov
adc
add
dec
pop
scas
mov
sbb
xchg
add
pusha
cmpsl
daa
mov
popf
or
nop
ret
push
jo
and
or
ret
adc
add
add
addb
adc
repz
add
adc
mov
xor
adc
dec
add
cmp
jge
or
xlat
adc
shrl
cld
daa
adcb
push
pop
jge
and
jge
jge
cwtl
inc
mov
sub
push
rclb
dec
pop
sub
push
push
cltd
mov
cmpb
pop
dec
push
out
push
out
xchg
sbb
shl
push
cmp
add
dec
push
cld
pop
data16
add
pop
lods
into
sbb
inc
or
pop
or
insl
or
hlt
in
pop
adc
inc
outsb
add
adc
pusha
or
cmp
and
push
mov
jge
pop
pop
mov
adc
mov
popaw
int3
xchg
and
xlat
pop
adcl
and
sbb
inc
jne
sti
sbb
add
call
push
mov
jnp
sbb
je
push
lds
push
sbb
or
mov
xchg
andw
pop
jb
loope
fcoms
or
mov
push
or
outsl
scas
sahf
dec
mov
jae
jg
mov
movswl
cmp
mov
adc
inc
decl
jne
sbb
decl
fstpt
not
inc
mov
push
sar
out
ss
push
je
inc
add
and
fldcw
adc
or
stos
in
inc
out
jb
add
outsl
jl
movsb
testb
rol
and
push
pop
lock
jmp
push
js
add
pop
push
pop
and
dec
bound
xor
fsubrl
mov
dec
mov
xor
adc
dec
xchg
lds
adc
out
inc
mov
ret
shlb
arpl
push
sub
popa
mov
gs
xor
cmp
sbb
scas
leave
mov
jmp
adc
pcmpeqw
sub
push
push
test
xor
add
xchg
add
add
bound
add
roll
adcl
hlt
mov
pop
dec
adc
or
and
ret
inc
inc
push
sbb
xor
mov
inc
mov
mov
inc
sbb
mov
loope
jnp
and
cwtl
xor
xor
xchg
or
xor
mov
xchg
mov
cli
sub
inc
pop
add
add
pop
push
sub
or
pop
adc
and
jg
fstpl
and
cmp
repz
andl
inc
sub
push
mov
add
ja
test
mov
dec
lds
or
or
sub
fcomps
adc
stos
sbb
xor
jne
xor
aad
xchg
lea
mov
in
les
and
sub
jnp
aaa
nop
sub
mov
and
dec
push
out
fs
add
ffree
xchg
jmp
aaa
mov
daa
jne
cmp
outsl
mov
aas
imulb
jae
mov
mov
call
rclb
cmpl
mov
jbe
hlt
or
outsl
ftst
and
push
push
movsb
push
rolb
inc
sub
and
xchg
loop
jns
pop
and
ljmp
test
nop
movb
push
outsb
jl
push
cltd
sbb
inc
data16
insb
sub
or
mov
mov
or
fsts
sbb
add
fldl
and
pushf
ficompl
ret
cmp
pusha
mov
sbb
scas
icebp
stos
pop
loopne
sub
lods
push
fistpl
or
cmp
dec
mov
aaa
outsb
adc
jp
shl
fstpt
push
or
cmp
sub
adc
addr16
cmpsb
and
jl
or
mov
cmp
push
sbbb
je
popf
push
dec
jl
add
push
and
mov
je
mov
mov
jmp
or
adc
pop
movsb
test
sub
lods
in
mov
sbb
bound
sbb
dec
int3
jle
push
in
mov
or
add
xlat
jmp
push
add
in
aad
pop
or
syscall
mov
pop
fildl
mov
lock
mov
mov
or
push
scas
sub
mov
sub
mov
and
fstps
out
lea
pop
cld
cmp
or
mov
cld
or
es
nop
mov
imul
inc
jl
notl
push
adc
shll
es
add
ja
call
push
add
dec
push
dec
xor
mov
decb
shlb
cltd
insb
xchg
pusha
add
hlt
test
mov
mov
xchg
xorb
mov
mov
addb
lods
mov
sbb
orb
add
pop
or
subl
or
or
mov
pop
shl
push
mov
dec
push
adc
loopne
ret
mov
push
mov
mov
xchg
sti
je
cmpsb
push
nop
mov
pop
adc
insl
cmp
cs
sub
aaa
stc
int
jns
jecxz
adc
adc
add
xchg
add
add
sbb
rolb
loopne
mov
shrl
stos
dec
pop
jl
cld
mov
push
rorb
xor
aas
pop
push
cmpsl
into
stos
dec
hlt
xor
bound
imul
pop
stos
pop
rcl
inc
gs
mov
jnp
loopne
fstpt
sti
lea
xchg
sahf
mov
mov
push
mov
push
mov
sub
add
in
inc
fdivl
add
jge
pop
sbb
push
mov
shlb
adc
shrl
or
jl
adcb
in
fimuls
call
loopne
mov
imul
push
adc
arpl
test
sbb
inc
xor
movsb
fdivs
int
mov
push
insl
fmuls
xor
push
pusha
mov
in
push
ret
push
fcoms
push
daa
inc
xor
pusha
pop
xlat
cmp
repz
jo
or
adc
inc
cmp
xor
and
in
sbb
test
and
dec
jmp
xor
stc
aam
sub
push
movsl
and
inc
std
cmc
es
cs
mov
call
dec
sbb
pop
mov
into
and
in
xlat
adcb
shlb
push
insb
pop
pop
add
mov
or
adc
xlat
mov
inc
add
rclb
enter
jne
adc
sub
out
mulb
xor
mov
movsb
lods
ret
xlat
je
bound
and
add
xchg
mov
add
adc
xlat
jge
imul
add
xor
mov
add
xor
adc
inc
dec
shll
xchg
cmpsb
xor
shll
int3
fsubr
cli
shll
add
inc
dec
mov
pusha
dec
pop
insb
std
cwtl
jbe
and
mov
and
rorl
push
and
les
js
nop
out
or
adc
xchg
add
cmp
iret
outsl
out
mov
mov
or
and
test
push
inc
adc
pop
lahf
jne
sbb
ret
sub
push
outsl
in
push
mov
xchg
int
push
add
clc
mov
xchg
adc
and
inc
xchg
mov
push
mov
js
adc
adc
lret
mov
cmp
or
jo
add
mov
push
je
add
add
or
inc
push
imul
adc
jg
mov
sbb
mov
push
add
mov
cmpl
or
imul
fsubr
sbb
xchg
inc
fstps
push
and
jl
jo
add
sbb
mov
sti
push
imul
xchg
mov
bound
popa
push
sub
jae
je
je
xor
inc
mov
jecxz
add
push
andl
xchg
push
push
test
dec
inc
les
dec
mov
arpl
mov
popa
jecxz
add
mov
inc
test
jne
and
push
jo
popa
je
sub
mov
mov
outsl
mov
and
sub
add
insb
sbbl
xor
stos
jae
or
jle
sarl
int
sub
cmc
incl
in
iret
push
stos
xor
sti
xor
mov
sahf
jbe
ss
xor
inc
jge
mov
dec
rcpps
and
jne
add
mov
and
cmovb
adc
rolb
aad
roll
add
sub
nop
mov
mov
and
sbb
jg
fsubl
mov
dec
pop
filds
jns
pushf
push
push
testl
jg
pop
ljmp
dec
addb
cmp
or
lcall
jmp
lahf
rolb
imul
shll
test
jns
aas
sub
loopne
push
das
cmp
mov
push
icebp
lds
sub
cmp
outsb
push
jge
mov
mov
dec
push
cmp
fistps
in
inc
xchg
mov
test
inc
call
xchg
xchg
lea
jo
sarl
cmpsl
stos
iret
push
fldl
ja
xchg
mov
or
call
imul
out
aaa
ret
lret
into
int3
in
test
mov
dec
dec
dec
push
dec
add
dec
inc
push
inc
jecxz
add
cmova
jbe
pop
out
adc
and
incl
stc
xor
mov
jnp
or
cmp
cld
mov
ficomps
dec
or
mov
cmp
mov
mov
cmc
mov
shlb
test
ljmp
jmp
jne
adc
mov
sub
imul
xchg
out
mov
jp
cmc
js
mov
test
les
cmp
pop
std
and
adc
mov
out
inc
fisubrl
lret
addr16
call
test
inc
sub
pop
and
push
jnp
lock
mov
mov
std
sbb
sub
inc
aad
cld
pop
inc
ja
adc
mov
mov
outsl
mov
push
xlat
test
int3
adc
andb
lds
arpl
push
lock
std
std
cmp
mov
call
dec
mov
int3
les
pushf
mov
pop
xchg
ss
decl
sub
jge
imul
cmp
push
movb
fisubl
push
lcall
test
ret
or
or
and
xchg
push
es
mov
shrl
aaa
loopne
decl
inc
xchg
push
enter
dec
mov
jne
pushl
test
inc
xchg
mov
push
push
jne
inc
imul
and
or
shll
push
pop
mov
cmp
mov
out
add
push
add
mov
test
jg
jg
add
mov
pop
lret
aaa
mov
aas
cmp
jg
mov
and
cld
fstpl
or
stc
adc
incl
xor
inc
test
loop
jne
testl
inc
mov
xchg
xor
sbb
insb
daa
push
cmp
xor
sarl
push
sbb
xor
lock
fnstsw
incl
movsl
stos
movsl
pop
stos
daa
pop
jmp
neg
lret
call
xchg
sub
and
pop
bound
xchg
aad
cli
sub
pop
inc
lahf
xlat
mov
cmpb
cmpsl
decl
mov
ret
aaa
ror
jecxz
mov
xchg
push
mov
ret
js
outsl
lret
incl
ja
sar
and
pop
pop
sub
mov
push
xchg
cmp
jge
or
inc
call
mov
in
xlat
sub
call
sbb
cltd
shll
ds
add
popa
test
jl
xchg
sar
xchg
pushl
or
adc
inc
cmp
int3
mov
aas
aaa
mov
pop
aam
inc
cmp
mov
jb
cmp
jmp
push
and
idivb
das
test
dec
test
mov
and
add
mov
inc
cld
push
inc
lods
push
das
insb
inc
cmp
dec
call
mov
ss
icebp
adc
jecxz
sarb
add
loop
adc
cmc
std
cmp
std
push
jg
jg
dec
cmpsb
lgdtl
ds
pop
fwait
mov
sub
aas
aad
pop
js
lret
adc
inc
jg
mov
imul
add
lods
in
adc
dec
decl
outsl
loope
pusha
ret
jae
cmc
cli
lret
int
push
ds
aaa
pop
arpl
jge
mov
fmuls
ja
icebp
aam
pop
lret
and
test
jg
mov
outsb
dec
add
xchg
mov
les
cli
push
ss
loop
rcrb
addr16
int
cmp
pop
cmp
jae
xchg
test
jno
or
mov
mov
sub
cwtl
adc
xor
lods
inc
test
mov
cs
jmp
popf
dec
mov
and
ja
arpl
xlat
cmc
lock
jg
sbb
sbb
addl
xor
adc
cmp
stos
out
lcall
xchg
je
loopne
mov
dec
sub
ret
mov
clc
into
iret
scas
jb
mov
ss
mov
pop
cmp
push
sub
inc
sub
addl
pop
cmp
dec
scas
push
mov
orb
inc
inc
jmp
add
jmp
cmc
into
push
int3
mov
xchg
into
lods
mov
clc
pushl
into
mov
pop
xlat
jl
imul
xor
push
and
cli
in
push
lcall
lods
outsb
lcall
sub
stos
jne
lods
dec
mov
inc
or
inc
jne
pop
into
insl
jb
ljmp
mov
test
sbb
mov
and
ds
push
lock
fwait
incl
mov
shl
cmp
nop
in
mov
mov
std
insl
and
in
in
mov
movsb
rcll
cld
jle
mov
sub
jno
xchg
dec
cmpl
inc
out
sub
mov
into
stos
movsl
test
push
mov
aas
stos
je
xchg
or
shrl
mov
into
adc
inc
mov
xlat
jae
jns
mov
shrb
rep
mov
adc
mov
scas
popf
sub
mov
or
cmp
jg
into
out
mov
dec
fidivrl
ja
pop
mov
adc
jbe
xor
mov
xor
xchg
mov
out
xchg
imul
shl
jo
in
sbb
push
inc
mov
lret
jmp
es
or
pop
or
notl
popf
push
inc
push
sub
mov
aad
pusha
or
xchg
mov
xlat
into
and
push
popf
jmp
push
mov
cmp
daa
lret
xchg
push
std
fimull
mov
ret
lret
repnz
mov
mov
xchg
pop
mull
inc
pop
pop
cmp
jge
jmp
and
aam
leave
call
fcomps
jge
shll
xchg
inc
pop
jmp
push
mov
aad
clc
jb
xchg
call
mov
jmp
dec
dec
mov
ret
js
call
lea
cmc
mov
add
inc
insl
push
adc
fistps
imul
mov
sar
lret
mov
adc
fldt
int3
add
push
aam
testb
mov
jo
test
clc
dec
adc
mov
push
xlat
idiv
jg
repz
mov
ret
jae
jp
ret
in
sub
xor
ror
or
pop
xor
nop
cmpb
jge
stc
in
cwtl
ljmp
ja
dec
inc
or
aam
pop
fucomi
fldenv
xchg
push
mov
mov
sar
std
decl
movb
mov
mov
stos
add
mov
cmp
ret
cld
repnz
dec
sbb
lcall
and
mov
dec
cmp
or
add
movsl
push
mov
jg
xchg
cmpsl
sub
out
scas
jnp
les
inc
mov
loope
dec
mov
inc
pushf
cmpsb
por
aaa
das
lods
push
sbb
xor
inc
xor
sbb
mov
into
inc
test
scas
xorb
std
ljmp
jecxz
das
sbb
repz
setnp
mov
mov
adc
mov
test
sbb
jle
aad
shr
xor
jne
mov
test
outsb
lods
push
test
lods
xor
mov
insb
test
in
jg
insl
xor
pusha
ja
inc
shll
pop
outsb
stos
push
cmp
pop
mov
cld
loopne
sbb
or
pop
and
aam
push
into
call
das
cmp
shlb
out
xlat
test
jae
fwait
or
cmp
es
cmp
or
stos
push
mov
sbb
ret
cmp
fistps
xchg
mov
ret
jno
xchg
add
out
and
enter
imul
insl
inc
mov
aad
jl
in
sbb
sub
cmpsb
pop
popa
aad
clc
lcall
mov
mov
jle
add
pop
stos
fsubl
mov
cmp
andl
jnp
cmpsb
insb
sbb
inc
insl
mov
xchg
pusha
sub
loopne
inc
xor
decl
sub
or
pop
mov
cmp
jns
iret
test
dec
mov
aam
cld
lret
in
pop
push
int
loope
push
jne
sbb
pop
iret
mov
add
ljmp
cmpsb
xchg
mov
jp
cmp
pop
add
jb,pn
hlt
mov
enter
xchg
jle
lock
iret
dec
add
lcall
xor
jge
sbb
jne
pop
and
lock
pop
pop
iret
outsl
xor
dec
sbb
loopne
imul
and
outsl
mov
inc
insb
pop
cmp
push
mov
fdivr
lea
pop
sbb
push
xor
mov
sbb
mov
jo
pusha
addl
hlt
sub
adcl
call
cltd
push
dec
out
jmp
xchg
cmp
outsb
xor
dec
xchg
lea
mov
aad
jmp
pop
stc
mov
pop
ja
arpl
mov
inc
push
mov
lret
shlb
test
pusha
pushf
adc
jl
lods
add
dec
cmc
call
mulb
mov
sub
push
pushf
loopne
jmp
mov
lret
insb
nop
mov
ret
lea
clc
jne
lahf
adc
jno
and
dec
lock
jge
into
clc
mov
pop
lods
data16
in
sub
mov
cwtl
aam
pop
jno
fldcw
icebp
ljmp
rorb
adc
ficomps
inc
out
mov
mov
das
mov
rolb
jno
adc
inc
movsb
fnsave
and
mov
dec
mov
sbb
mov
cmp
cmp
jge
pop
inc
jg
jae
push
ret
xlat
je
test
movsl
adc
xchg
mov
sub
std
sar
call
push
sbb
mov
xchg
dec
stos
lcall
mov
push
or
sbb
incl
push
xor
pop
hlt
loope
sbb
nop
int
gs
movsl
nop
dec
subb
and
push
mov
scas
scas
or
mov
xchg
xor
aaa
clc
cmp
sub
mov
jle
pop
scas
push
hlt
or
inc
mov
insb
test
mov
mov
enter
fcmovbe
pushf
mov
ret
test
out
fdivrp
aaa
ljmp
in
movb
xor
pop
pop
bound
sti
mov
jg
cld
pop
daa
paddd
bound
rol
test
pop
jne
test
dec
mov
scas
mov
mov
jg
out
subl
insb
sub
cmp
push
push
sarl
hlt
in
inc
sub
nop
in
and
cs
pop
jne
add
fisubrl
cmc
ja
icebp
aaa
outsl
int3
pop
pop
psllw
es
jae
aaa
push
mov
sub
lods
cmp
push
jae
bound
mov
inc
pop
add
pop
in
scas
data16
push
sub
pop
rolb
int
cmp
pop
inc
dec
shll
jge
inc
sti
enter
dec
dec
cld
into
aam
rorl
insb
add
mov
xor
xor
xor
xor
add
xchg
mov
ljmp
xor
mov
lahf
xor
xor
xor
xor
xor
xor
and
pop
xor
xor
loop
imul
ja
xorl
fwait
cmpsb
ss
ss
mov
leave
ss
xlat
ss
ss
ss
aaa
arpl
imul
jg
test
cwtl
aaa
sahf
lcall
aaa
cmpsb
aaa
mov
aaa
iret
aaa
aaa
fidivs
out
in
aaa
repz
std
aaa
or
sub
pushl
cmp
outsb
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
inc
cmp
jbe
cmp
cmp
cmp
cmp
cmp
cmp
push
mov
inc
cmp
test
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
cmp
clc
xchg
clc
xchg
cmp
cmp
in
cmp
cmp
cmp
cmp
sbb
sbb
xor
cmp
dec
imul
jmp
push
jo
jbe
jl
mov
cmp
mov
les
clc
cmp
push
sti
cmp
adc
sbb
sub
xor
ds
ds
ds
lods
ds
fidivrs
push
aas
addr16
and
movl
sbb
faddl
outsl
add
inc
add
add
xchg
mov
lods
sbb
mov
pop
call
cmovs
pusha
je
jbe
pop
pop
push
push
sub
sbb
cmp
adc
or
xor
inc
xchg
fdivrp
arpl
add
add
xor
mov
and
adc
mov
insb
or
sbb
sub
fs
fmull
adc
sub
nopl
sbb
fstpl
pop
add
pop
or
adc
pop
insl
mov
cs
jb
or
inc
pop
je
jbe
dec
push
or
sbb
adc
or
aas
insb
jb
xchg
cmp
adc
adc
movups
add
std
imulb
add
pop
xor
adc
fstpt
add
or
sub
sbb
fsubr
pop
adc
or
or
adc
mov
push
aaa
or
adc
fidivs
add
sbb
sbb
mov
add
mov
add
sbb
push
sbb
adc
jbe
popa
sti
roll
push
outsl
test
in
push
or
popa
pop
and
push
add
and
getsec
sub
mov
add
add
xchg
add
push
push
cmp
mov
xchg
add
push
mov
sbb
int3
mov
decl
and
jmp
jae
fdivr
jmp
xlat
jb
mov
add
dec
push
psubq
lcall
inc
scas
inc
test
outsl
sar
dec
in
into
jne
cmpsb
dec
loop
jg
in
inc
lods
mov
stos
add
mov
jmp
jp
pop
cwtl
sbb
aam
and
xor
adc
mov
out
sbb
lret
and
rolb
test
jg
mov
sti
xchg
roll
xchg
dec
cmp
sbb
notb
mov
dec
fildl
cs
mov
mov
ljmp
pop
pop
jge
xchg
mov
mull
lock
mov
inc
std
or
and
mov
xor
xchg
push
inc
in
add
sub
fcoms
adc
pusha
pushf
and
sub
out
adc
out
call
test
and
sbbl
les
pop
out
mov
dec
cmp
jne
xchg
jno
sub
ficoml
rclb
sub
sbb
push
sbb
ret
inc
adc
sbb
xor
fucomp
xchg
sub
pusha
data16
jmp
sbb
mov
in
outsb
jo
push
pushf
gs
stc
dec
icebp
fldt
shlb
mov
jo
arpl
cmpb
add
cmpsb
push
mov
or
pushf
data16
lret
sub
mov
adc
data16
cmp
das
ffreep
or
clc
push
scas
jo
pushf
aas
divl
imul
add
push
into
dec
xchg
mov
mov
iret
test
sbb
sbbl
jne
mov
add
or
out
lock
pushf
insl
push
inc
sub
pop
pusha
imul
mov
push
sbb
xor
pop
mov
mov
push
dec
inc
cld
mov
jge
mov
sbb
rcll
cmp
xchg
mov
sahf
int
fidivrl
enter
subl
icebp
mov
je
xor
cvttps2pi
pop
je
add
cmp
dec
fucomp
aas
jl
ret
push
fsubrs
pusha
add
or
aam
dec
xchg
and
cmc
push
jmp
dec
mov
add
lcall
add
js
mov
iret
cmp
test
sbb
cmp
sbb
insl
push
inc
xchg
jbe
or
cmp
inc
sbb
or
push
fs
mov
push
inc
roll
out
fdiv
cmp
pop
mov
inc
add
or
pusha
fsubp
clc
clc
xor
mov
data16
outsl
cwtl
push
sbb
push
mov
pop
pushf
mov
mov
xchg
inc
fs
fwait
cmp
repnz
push
xchg
stos
cmp
push
xchg
repnz
push
dec
adc
cld
scas
cmp
mov
fwait
sbb
or
dec
or
push
stc
mov
pusha
pop
mov
sub
cli
mov
sahf
mov
adc
inc
cmp
sub
loop
jne
cltd
dec
pop
add
out
jle
mov
mov
fcomps
cmc
sbb
insb
sub
pushl
xor
adc
outsl
int3
adc
xor
jmp
sub
pop
mov
aaa
cmp
ror
sarl
ja
jae
popf
mov
dec
lahf
enter
jmp
pop
push
or
aad
aaa
and
or
shrb
pop
lcall
mov
loope
pop
add
leave
int3
jno
repz
mov
ret
sub
cld
arpl
jo
cmp
cmp
xor
or
sub
inc
pop
sahf
mov
cmp
and
sub
cs
fadd
sbb
pop
xor
imul
hlt
mov
or
pusha
adc
int
jecxz
mov
xchg
inc
leave
cmp
ljmp
je
cmp
push
mov
or
dec
pusha
or
push
notl
push
mov
dec
mov
mov
arpl
add
or
ja
mov
add
sbb
loop
addb
outsl
or
push
pushl
sub
sahf
inc
add
ret
sub
adc
inc
mov
sub
and
add
inc
dec
xlat
xchg
sbb
ds
push
adc
sbb
les
jg
push
push
lock
outsl
aad
cmc
outsb
push
and
mov
pushf
add
push
mov
or
cmp
adc
sub
test
dec
sub
iret
test
add
mov
add
push
inc
fdivrs
int3
pop
mov
lds
rorb
cmp
lock
mov
jmp
enter
out
pop
sub
lock
and
cmp
dec
and
call
das
mov
mov
inc
int3
push
or
xor
outsl
and
sbb
pushl
mov
insb
sub
xor
pop
sti
adc
pop
icebp
mov
pop
enter
pop
das
mov
rorb
adc
movsl
rorl
sub
repz
pop
push
icebp
int
lahf
rcll
jge
mov
lods
jle
fcoms
sbb
iret
mov
cld
sub
test
lods
adc
mov
in
xchg
jnp
push
vrsqrtss
lock
pusha
push
push
sti
test
push
scas
push
or
mov
pop
cmp
push
jge
or
add
pop
mov
or
test
repnz
dec
jg
push
jo
pop
sbb
cli
push
fdiv
fs
cmp
jmp
push
or
mov
mov
je
and
mov
ret
inc
test
xlat
and
mov
adc
and
andb
xchg
jns
push
dec
lret
lea
pushl
ja
cli
dec
dec
inc
jo
jb
stos
adc
out
imull
xchg
dec
cmp
gs
test
mov
idivb
push
subb
dec
cmp
addb
fsubs
and
out
into
pop
ljmp
and
push
loopne
add
xor
daa
cmp
mov
sub
sbb
dec
lock
jo
test
aas
sub
cld
sbb
adc
add
inc
cwtl
mov
ljmp
cmc
jbe
pusha
push
xor
inc
ret
sub
hlt
mov
add
push
cmp
clc
push
mov
inc
outsl
cs
test
hlt
loope
xchg
sub
mov
cli
lock
pop
dec
bound
pushf
jl
rclb
jne
mov
mov
incb
or
lahf
setne
mov
inc
arpl
cld
lcall
icebp
xchg
mov
stc
or
bt
cmc
push
inc
aad
hlt
decl
fidivrl
sahf
mov
or
push
jo
ds
rcrb
aaa
jb
pop
mov
lret
lea
push
iret
bswap
sub
shll
dec
add
cld
pop
cmp
cli
mov
fiaddl
cmp
inc
add
into
mov
adc
lods
add
sbb
mov
sub
cwtl
testb
adc
out
jg
loope
lock
scas
das
lea
jne,pt
mov
adc
or
pop
filds
dec
andb
push
push
jecxz
testl
dec
xchg
je
test
sahf
es
cltd
pop
push
xor
xor
push
push
inc
incl
ret
daa
xchg
pusha
ljmp
dec
jp
leave
ret
scas
std
and
or
or
mov
inc
aas
pushf
pop
jge
mov
inc
sahf
and
aam
pop
iret
lcall
repz
adc
test
xor
jle
add
les
inc
adc
inc
jne
lods
jo
inc
cld
mov
cmp
ret
mov
inc
jmp
add
add
pop
hlt
lret
dec
adc
hlt
lock
aaa
fwait
icebp
je
adc
jnp
mov
push
push
and
push
jno
inc
xchg
cmpl
cwtl
cmp
imul
xlat
jno
xchg
subb
imul
push
decl
cli
pop
outsb
popf
out
add
iret
push
push
jecxz
movsb
adcl
jl
fcom
jecxz
out
jge
pop
push
mov
mov
in
outsb
je
mulb
or
push
cld
sbb
xchg
or
clc
outsl
xor
pop
repnz
sbbb
pusha
std
push
ret
push
les
cwtl
arpl
jle
inc
sub
inc
cmpsb
fisubrl
sahf
out
loopne
and
loop
cmp
shl
push
pop
clc
je
inc
dec
sbbb
jg
dec
rorb
adc
sarl
js
std
dec
cmp
nop
subb
lock
hlt
sbb
or
sahf
movb
or
cwtl
adc
jmp
lahf
mov
fisttpl
and
mov
jp
xchg
lock
dec
notb
adc
pushf
sub
incl
mov
xchg
insb
jno
jge
sbb
jbe
aas
rol
les
insl
and
pop
icebp
inc
xor
pusha
jl
jl
jge
ror
leave
sub
dec
inc
hlt
and
aam
push
leave
out
and
ljmp
lods
lret
sbb
push
add
add
pushl
and
insb
xorl
mov
dec
shl
dec
sbb
inc
mov
mov
add
data16
es
rcrb
inc
jnp
xor
ljmp
push
sbb
cltd
clc
fs
into
and
adc
cmpsl
loopne
arpl
mov
loope
push
clc
fdivrl
cmp
jp
das
inc
jl
mov
or
dec
jl
push
testb
call
cs
and
out
repnz
inc
pop
inc
lock
ss
pop
inc
pop
mov
pushf
pushf
cld
adc
mov
addl
cmp
inc
js
loop
xor
pop
push
push
pop
sti
jge
imul
enter
jbe
inc
bnd
outsb
mov
push
lea
pop
lock
xor
arpl
aas
xchg
and
fidivrs
mov
push
ficomps
pop
pop
add
hlt
mov
jmp
icebp
lock
xor
dec
adc
fnsave
push
push
dec
sbb
sarl
and
ds
cmp
push
or
push
sub
scas
dec
cmp
pop
pushf
or
xchg
lock
aas
adc
adc
add
or
xchg
sbb
push
push
mov
xchg
fadds
jae
addr16
outsb
pop
inc
push
or
lret
or
cmp
and
or
sahf
mov
push
xor
lea
push
or
loopne
in
mov
xor
in
sahf
inc
jmp
aaa
imul
adc
mov
int
push
bound
sbb
and
dec
ud0
mov
inc
es
mov
inc
jecxz
mov
data16
inc
jg
jmp
lock
pushf
cmp
cwtl
dec
dec
les
aam
int3
jmp
clc
adc
jmp
cwtl
mov
push
add
pushf
in
push
push
push
hlt
pushl
and
scas
in
scas
lret
mov
mov
mov
adc
adc
sub
push
cmpl
stos
lds
rclb
test
sub
mov
shlb
clc
push
ret
rclb
or
mov
mov
inc
outsb
shll
add
orb
push
xchg
mov
pop
cmp
mov
cs
adc
mov
cmp
hlt
repnz
xchg
and
inc
push
pushf
sub
insb
jmp
hlt
in
dec
pop
aas
lret
inc
cmp
lock
pop
aaa
mov
mov
inc
hlt
xor
decl
dec
loopne
shrl
sub
sahf
inc
mov
push
add
cmp
pop
push
push
cmpsb
mov
ret
js
jne
fnstcw
xor
inc
lock
lret
jmp
aas
push
ss
or
pushf
cs
lret
add
mov
movsb
push
ret
jbe,pn
add
and
pusha
mov
lds
adc
push
je
push
xchg
inc
pop
test
cli
adc
adcl
pop
jae
cmpsl
popa
inc
mov
xchg
shlb
sbb
out
shll
pop
lock
pusha
push
mov
icebp
out
test
or
mov
xor
repnz
jnp
rcrl
jmp
movsb
pop
fcoml
out
test
adc
sub
daa
mov
jne
and
push
mov
aaa
fldenv
xchg
xor
js
inc
fs
daa
fldl
adc
mov
add
in
adc
xchg
add
jmp
xchg
outsb
fdivl
inc
test
lret
out
in
and
cli
or
dec
or
fs
loop
pop
or
js
dec
sbb
aam
push
in
xlat
sub
cs
fbld
ret
pop
mov
add
or
movsb
inc
jg
call
mov
js
mov
inc
sub
flds
test
mov
sub
xchg
je
clc
mov
inc
mov
mov
mov
fcoml
or
std
push
jb
add
dec
sbb
nop
push
xchg
adcb
sbb
push
pop
movsl
xchg
rcll
and
sbb
push
dec
arpl
punpcklbw
js
inc
cmp
inc
push
lcall
adc
ror
jp
outsl
adc
cmp
ficoms
cmp
mov
cmpl
push
and
jecxz
cmc
clc
cli
sbb
call
mov
fldcw
out
or
or
push
mov
mov
xor
clc
cmp
leave
push
data16
call
fwait
stos
stos
jns
filds
negb
mov
adc
inc
push
pop
sub
das
bound
push
pop
jnp
int3
xor
add
push
insb
fisubs
and
stc
add
dec
pop
data16
stc
lods
icebp
pop
xchg
rclb
pop
mov
out
xchg
cmp
dec
sub
mov
shl
lds
jne
adc
loopne
test
das
das
dec
call
ds
pop
adc
mov
ret
addr16
or
pushf
push
imulb
and
xor
aaa
mov
movsl
pusha
inc
filds
pop
pop
inc
adc
mov
ret
or
daa
sub
jle
sub
push
pop
mov
jl
popa
and
mov
ja
and
imul
push
push
and
ss
inc
loopne
lods
loope
mov
jecxz
push
or
cmpb
or
xchg
jecxz
addb
jge
pushf
xchg
mov
imul
sbb
nop
push
lcall
icebp
and
mov
or
lds
jle
push
mov
and
movsb
push
dec
ret
xor
sar
decl
inc
xchg
imul
ret
jnp
pusha
mov
lret
sub
add
lock
dec
rorl
shrb
sub
aam
outsl
sarb
in
cmp
or
pop
jmp
jg
imul
sahf
loope
outsb
loop
cmp
aam
push
mov
inc
out
enter
orl
rorb
xchg
cmp
pop
add
dec
sub
jo
pop
shlb
push
inc
push
jge
stos
jnp
and
xchg
dec
adc
pop
ret
inc
inc
add
daa
mov
mov
fs
sahf
dec
mov
pop
jecxz
out
test
or
sbb
adc
add
lock
push
adc
lea
ds
orl
stos
rol
test
jns
and
jnp
xchg
hlt
subb
or
mov
insl
mov
jg
aaa
push
mov
ss
jp
jmp
movsl
movsl
shrb
loope
ds
jl
push
dec
movsl
inc
test
sbb
inc
jne
cmp
add
mov
inc
popa
inc
insl
decb
jp
cmp
mov
xor
sti
jno
adc
fucomp
pushf
enter
outsl
jo
and
pop
push
push
mov
sahf
repz
ret
idivl
out
aas
std
sbb
ds
repz
bound
fbld
push
ja
out
aam
stos
loope
sbb
icebp
pushl
adcb
or
fsts
ret
enter
jp
and
dec
mov
test
movsl
sub
xlat
cmp
shrl
jecxz
pop
sbb
mov
fildll
test
dec
pop
jae
lret
scas
sbb
jmp
in
lock
pop
aad
nop
cltd
pop
sub
fxam
jno
dec
inc
lcall
pop
pop
adc
or
shlb
roll
xor
push
cmp
cs
std
mov
xor
sbb
and
or
dec
shlb
or
cwtl
fsub
aam
inc
cltd
cwtl
or
decl
orb
es
or
cmp
inc
push
xor
std
pop
dec
mov
clc
sub
mov
lds
cmp
cmp
inc
mov
add
add
mov
xchg
jmp
add
aaa
in
push
xchg
dec
scas
popl
add
fbld
clc
inc
xor
fdivrl
cmp
pop
andb
clc
js
jo
adc
push
iret
dec
cmp
adc
lods
scas
jo
loopne
subb
or
mov
les
in
cmpsb
dec
add
jecxz
inc
addr16
sub
mov
mov
jmp
lock
cld
pop
push
icebp
sbb
stos
pushf
dec
cmp
faddp
rorl
shrl
lock
adcb
push
pop
repz
or
mov
push
push
xor
adc
out
inc
test
iret
and
jbe
addr16
out
push
mov
pop
jge
xchg
ljmp
rcrb
and
inc
or
xchg
sahf
push
call
pop
cltd
jg
idivl
add
inc
sub
jg
mov
mov
jno
ds
iret
jg
sub
adc
inc
xlat
fstpt
pop
push
stc
in
call
xor
sub
jbe
test
cs
jl
sub
fwait
add
sti
hlt
inc
xchg
mov
jmp
fwait
bound
jne
add
pop
xor
outsl
insb
sbb
inc
pop
mov
stc
cmc
cli
cmp
add
in
pop
cmp
daa
mov
es
and
inc
mov
xor
fidivrs
jle
and
adc
mov
lcall
sbb
ja
out
push
cmc
cmp
jge
fnsave
xchg
add
push
add
fsubrl
icebp
icebp
rorl
enter
pushf
cmp
jge
loopne
jg
jb
xchg
xchg
push
adc
cmp
fstps
xor
ljmp
mov
and
add
roll
nop
adc
lahf
cmp
incl
inc
test
test
push
jne
cmp
mov
inc
mov
fbld
filds
mov
and
cmp
add
stc
xorl
out
pop
jl
and
xor
pusha
pop
shrl
decl
dec
mov
cmc
fninit
cld
dec
mov
aam
jae
into
push
push
stos
xor
push
das
fdivrp
push
dec
dec
sub
jle
aad
aas
inc
dec
ljmp
push
fidivrl
xchg
mov
sbb
int
cmp
sti
int
push
cli
push
cld
es
popa
ljmp
inc
adc
or
mov
mov
add
add
rolb
mov
mov
pop
jl
mov
cmp
xchg
mov
fucomi
in
cs
rcrl
xrelease
vmread
test
adc
ds
fsubrs
pop
cwtl
push
mov
enter
push
and
add
adc
int3
rclb
test
inc
add
pop
das
das
mov
rcrl
xchg
mov
push
add
push
pushf
rcrb
cld
sub
add
ja
sbb
pop
pop
mov
dec
clc
sbb
dec
fists
pop
cltd
dec
fwait
mov
mov
or
sub
push
lds
mov
cmc
es
sub
cs
mov
add
addr16
mov
jo
shl
cli
in
loopne
pop
push
call
dec
cmc
divb
or
bound
xlat
inc
cmpsb
lret
sbb
repz
push
aas
dec
notb
jl
push
loope
jp
mov
loopne
pop
scas
push
dec
jae
call
jmp
ficoml
aad
filds
dec
insl
orb
pop
pop
cmp
dec
lods
xchg
xor
fisttps
dec
and
jmp
pop
cmp
movsl
pop
outsb
icebp
adc
or
jb
mov
dec
ja
mov
loopne
es
xchg
stc
enter
in
popf
rcll
fwait
les
push
ret
cmpsl
test
int
cmpsb
std
filds
icebp
adc
sbb
pop
sub
mov
aaa
pusha
ss
out
dec
adc
mov
mov
shll
jmp
inc
test
test
push
cmp
loop
int3
inc
dec
ret
sub
or
fmuls
add
pop
out
fisubs
push
dec
cmp
add
sbbl
mov
push
jbe
fwait
js
jae
outsb
dec
sub
icebp
rclb
cs
sarb
aas
mov
add
push
xor
lret
repz
mov
stc
push
jge
adcl
mov
xor
fsubr
mov
dec
cmpb
jno
mov
in
fisttps
into
or
test
adc
sub
nop
xor
mov
xor
loope
sbb
mov
inc
jl
jnp
jle
push
ds
or
js
mov
mov
cmp
push
repnz
shll
mov
xlat
orb
in
addr16
push
mov
sti
jle
cli
mov
pop
adc
cmp
sub
xchg
test
xor
pop
test
cmc
inc
into
comiss
and
clc
call
pop
pop
ds
xorb
addr16
lret
in
jecxz
push
dec
sub
mov
jno
imul
pop
push
cmp
mov
cmpsb
clc
iret
cld
jl
iret
subps
jne
pusha
sbb
fistpll
shlb
mov
outsb
call
jle
sahf
adc
fildl
xor
addb
push
push
add
clc
pushf
mov
aad
xlat
and
inc
and
xchg
jbe
mov
ss
pop
cmp
popf
pusha
cmp
aas
ds
clc
jnp
push
fdivrl
adc
sbb
divb
cmp
pop
add
not
push
pop
icebp
mov
and
xchg
call
cmp
cmp
mov
ret
push
aaa
jae
ss
ret
comiss
aas
rclb
das
add
iret
aam
rcl
int3
insl
cmp
arpl
push
pop
jle
fists
test
inc
test
push
lods
sahf
adc
insb
add
fs
out
adc
jb
xor
xchg
fadd
xchg
sub
add
shll
or
add
jbe
jmp
fldenv
cmpl
cmp
fisttpl
mov
lret
mov
lds
or
jo
mov
imul
mov
xor
pop
icebp
fs
xor
or
pop
jg
jmp
popa
cwtl
sarl
negl
jno
push
mov
cmp
cli
in
mulb
out
or
imul
sbb
adc
notl
mov
aaa
sbb
jbe
sahf
mov
ret
push
cmp
movsb
sbb
and
mov
and
imull
int3
xchg
packssdw
ror
dec
and
stos
fs
sub
sub
mov
sub
add
stos
mov
psllw
inc
dec
outsl
aas
test
mov
aaa
mov
push
lock
lds
cld
push
std
int3
cmp
addr16
mov
jbe
add
jge
dec
sbb
dec
fstl
call
cmpsb
and
shl
mov
push
xor
sahf
inc
popa
mov
add
incl
clc
incb
sub
cmpsb
test
mov
cmp
jb
loope
scas
aaa
mov
push
fildl
adc
cmc
outsl
inc
sub
jle
add
jo
paddsw
pop
inc
pusha
cltd
adc
lods
jg
add
loope
dec
mov
hlt
adc
sbb
sbb
mov
push
jb
jmp
shll
inc
ljmp
loope
mov
cmp
adc
mov
daa
jmp
inc
ljmp
xchg
xchg
es
xchg
into
lock
roll
aad
add
hlt
rorb
xchg
xchg
fwait
jle
loope
stos
cmpsl
jno
sub
mov
sbb
cmp
sbb
in
jns
mov
mov
call
hlt
rcrl
pop
mov
in
push
or
clc
sbb
adc
dec
lret
pusha
int3
mov
loop
sbb
add
mov
mov
mov
je
cmc
xor
xchg
pusha
and
jo
push
inc
jecxz
aas
mov
push
ljmp
cmp
leave
in
inc
jg
sub
xlat
jnp
cmp
xchg
sub
daa
add
xchg
repnz
adc
pushl
dec
test
out
jne
int3
dec
in
add
mov
fidivrl
add
aam
sub
pushl
hlt
inc
add
cmp
push
notb
xor
push
mov
pushl
ret
dec
xchg
aaa
pop
push
xor
mov
lret
stos
das
mov
jbe
arpl
leave
lret
iret
loope
xchg
or
pushl
mov
lods
push
xchg
sub
bound
mov
aad
shlb
pop
fdivrp
add
mov
orl
mov
xor
ror
adc
out
loope
inc
jmp
stc
inc
shl
mov
gs
fmuls
push
jge
bound
enter
mov
xchg
push
add
ret
mov
push
test
outsl
dec
rol
neg
pop
or
mov
jle
mov
mov
jge
nop
xor
pop
mov
mov
inc
mov
fists
and
int3
sub
or
lock
or
pusha
adc
push
incb
cmp
or
cmp
xor
scas
clc
push
in
out
test
sub
xchg
incb
stc
icebp
inc
xor
push
mov
jp
clc
xor
imul
pop
xchg
xchg
out
shll
jecxz
imul
out
lods
sub
in
popa
cmp
push
lock
xchg
loopne
push
filds
sub
popa
push
cmp
lock
jae
inc
imul
push
sub
xchg
addb
push
jne
cld
or
stc
jnp
int3
mov
xor
imul
pushl
aas
and
or
xchg
shrd
clc
out
lea
jg
pop
pop
inc
test
inc
test
cmp
mov
fisttpl
aas
mov
ljmp
pop
mov
loop
aad
push
or
pop
pushl
lcall
mov
test
bound
loopne
jmp
dec
das
loope
mov
cli
sub
push
pop
jle
jnp
clc
jle
and
xchg
repz
sbb
outsl
jnp
pop
lret
mov
aad
mov
stc
xchg
pop
ss
dec
mov
push
jl
pop
cmp
xchg
test
mov
ret
inc
notl
mov
js
orb
into
dec
lock
sbbb
rcll
dec
aam
sti
std
cld
and
pop
add
pop
clc
popl
dec
and
inc
dec
pusha
push
dec
xor
push
lcall
cld
inc
dec
int3
mov
add
sbb
jne
sbbb
xor
js
imul
sub
inc
sub
in
das
hlt
movsl
movsb
mov
dec
dec
dec
hlt
add
mov
cld
or
sub
rclb
cmpsl
pushl
add
and
cmp
sbb
movsl
and
in
mov
cmp
pusha
sbb
test
push
sub
adc
jnp
out
lcall
inc
leave
cmp
popl
dec
xchg
jne
ss
fmull
daa
pop
add
in
jle
jmp
out
jns
std
ret
mov
imul
or
push
popa
cmpsb
xor
hlt
push
adc
cmp
clc
out
lock
or
outsb
sbbl
je
or
cmp
xchg
or
ljmp
mov
xor
bound
in
push
jg
addr16
fcompl
add
out
xor
jg
aaa
xor
inc
scas
sub
jne
sub
mov
and
and
wrmsr
and
pop
mov
sub
lret
sbb
xor
lcall
ds
sti
and
adc
sub
shrb
pop
mov
test
mov
mov
xor
arpl
mov
insb
jg
clc
in
aaa
sub
xchg
xchg
dec
xor
fsin
sahf
xchg
jecxz
sub
cli
fstpt
mov
jmp
mov
outsb
mov
push
jecxz
mov
mov
outsl
popa
insl
push
ret
enter
dec
mov
fisubs
leave
lar
xor
mov
ljmp
fldl
xor
push
outsb
je
adc
and
add
xor
xor
jg
bnd
push
xor
xor
xor
xor
xor
xor
cmp
cld
xor
xor
xor
ss
outsb
ss
xchg
ss
lock
aaa
cmpsl
dec
cmp
les
lock
decl
mov
jo
cmp
cmp
cmp
cmp
jl
sub
cmp
cmp
insb
lahf
insb
push
xorb
decl
xor
xor
insb
xor
or
xor
xor
add
pop
mov
ss
cmp
cmp
lcall
cmp
cmp
jb
push
cmp
cmp
cmp
push
cmp
cmp
cmp
pusha
ds
ds
cmp
ds
inc
aas
jo
scas
mov
mov
or
inc
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
mov
ss
mov
aaa
xchg
aaa
pushf
aaa
cmc
aaa
cld
aaa
or
cmp
lcall
cmp
sarl
xchg
cmp
cmpl
push
aad
cmp
ds
sarb
ds
push
jb,pt
jp
mov
aam
fnstcw
mov
lret
aas
fstpt
loopne
mov
jg
mov
or
mov
xor
xor
jno
jnp
pushl
xorb
xor
xor
xor
test
add
pop
xor
xor
xor
xor
shll
pushf
xor
xor
ret
mov
xor
cs
xor
insb
add
mov
divb
and
aaa
cmp
cmpl
cmp
xor
aas
cmp
dec
fdiv
cmp
outsl
mov
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
cmp
test
xchg
cmp
cmp
and
fsub
xchg
repz
cs
add
mov
mov
ds
ds
inc
aas
dec
aas
pop
aas
mov
in
out
dec
mov
jg
cltd
xor
iret
xor
test
xlat
pop
int
pop
xor
and
das
xor
pop
xor
std
movsl
out
xor
xor
xor
mov
xor
jo
test
or
stos
mov
and
inc
jns
aaa
shlb
loope
mov
pop
push
cmp
jae
cmpb
cmp
cmp
icebp
decl
idivb
add
inc
cmp
push
cmp
lock
fbstp
cmp
cmp
mov
cmp
scas
loop,pt
jg
pusha
pmaxub
push
push
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
imul
decl
ss
lock
or
aas
in
xchg
aaa
addr16
mov
jl
addb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
dec
cmp
xchg
push
ds
ds
lds
cld
adc
sbb
das
aas
mov
cmp
clc
cmp
inc
xor
pop
xor
pushf
xor
xor
xor
outsl
xor
fisttps
dec
shll
repz
xor
xor
xor
scas
xor
xor
fisttps
clc
pop
xor
xor
pop
lods
xor
push
repz
inc
xchg
cmp
jae
mov
nop
cmp
cmp
cmp
lcall
mov
cmp
cmp
cmp
cmp
cmp
cmp
jecxz
sub
or
ds
mov
xlat
ds
lock
clc
add
jb
jmp
loopne
out
out
xor
lret
xor
mov
xor
xor
dec
ss
decl
ss
ss
shll
clc
ss
ss
pop
loope
aaa
or
ds
inc
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
bound
or
mov
aaa
jp
xorb
aaa
mov
shll
mov
ret
aaa
into
aaa
aam
fidivl
loopne
out
sar
and
sub
cmp
cmp
inc
cmp
pop
cmp
icebp
incl
je
jg
test
nop
cmp
mov
jne
cmp
or
cmp
jge
add
mov
jg
push
cmp
sbb
and
es
cmp
mov
cmp
mov
jecxz
cmp
mov
inc
cli
call
or
dec
es
xor
xor
xor
or
adc
mov
xor
sub
cmp
cmp
inc
xor
xor
scas
call
xor
xor
hlt
xor
shll
clc
movsl
out
std
cmp
push
cmp
jl
add
mov
int3
in
push
cmc
cmpsl
shll
add
or
rorb
adc
inc
xor
xor
bound
adc
and
dec
aaa
cld
or
xor
in
xor
das
cmc
lcall
shrl
xor
or
and
push
mov
adc
cmp
cmp
push
loopne
sarl
mov
cmp
cmp
cmp
std
sub
cmp
fdivl
mov
dec
mov
lds
mov
cmp
xchg
pop
sbb
cmp
test
push
xchg
adc
ja
call
adc
mov
sub
add
lcall
aaa
xchg
fs
pusha
jne
adc
into
into
scas
lods
sub
decl
pop
cwtl
pop
daa
mov
jge
cmp
popa
sbb
adc
aam
pop
shlb
call
test
shrl
add
jno
push
test
jmp
cmpsl
sub
jb
addr16
faddl
hlt
dec
rorb
mov
dec
rcll
push
mov
jo
bound
xor
out
cmp
push
jp
or
and
lcall
faddl
stos
mov
cmp
lock
repnz
pop
aam
push
pop
jae
dec
jno
je,pt
and
mov
out
push
jne
cld
fiadds
inc
or
fimuls
in
mov
sbb
int
icebp
pop
loope
decl
mov
mov
mov
cmc
mov
call
std
pop
sub
mov
jg
mov
dec
scas
dec
test
test
mov
ja
mov
add
jnp
add
sub
dec
mov
sbb
pop
clc
shll
and
cmp
xor
mov
ljmp
mov
and
add
mov
jg
xchg
das
mov
xchg
enter
call
jle
decl
adc
push
adc
mov
movsl
outsl
subb
movsb
xchg
mov
pushf
xor
imull
dec
adc
add
jecxz
add
pop
mov
adc
pop
cmp
outsb
in
add
stos
push
pop
add
push
push
lahf
lret
out
mov
cli
jge
lahf
sbb
clc
sub
inc
popa
flds
sub
push
inc
out
sbb
adc
mov
sub
xchg
pop
or
ljmp
out
icebp
lcall
mov
xlat
jg
pop
mov
sub
dec
push
sub
lcall
mov
and
dec
out
push
mov
add
mov
es
push
or
inc
inc
ljmp
push
dec
sbb
pop
lock
mov
enter
outsl
mov
mov
out
subb
and
fwait
adc
add
movsb
int
bound
lcall
insl
sub
inc
pop
jle
lds
das
bound
jle
aad
xchg
inc
loope
mov
xchg
das
push
std
push
lods
imul
mov
sub
jecxz
into
clc
int3
lds
clc
mov
inc
test
jecxz
popf
or
jle
jns
pop
aas
pop
and
loopne
aas
rol
mulb
mov
push
mov
xchg
popa
js
inc
pushl
inc
xchg
xor
lret
lahf
insl
sub
decl
lds
cmp
jge
stc
in
mov
call
jmp
push
repnz
pop
sar
int3
sarb
fxch
push
inc
push
and
xchg
inc
movsb
jmp
cwtl
imul
lods
adc
movsb
cli
pop
addl
andl
adc
xchg
orl
mov
inc
dec
xlat
je
cltd
mov
push
sub
push
sub
xchg
out
xor
movsb
dec
std
inc
inc
test
test
shlb
mov
inc
insb
mov
xchg
filds
pop
subb
mov
ret
inc
and
cmp
popa
mov
push
repnz
orl
lret
das
cmp
adc
rorb
movsl
orb
pop
push
icebp
lret
out
mov
xchg
adc
les
inc
mov
push
aad
js
std
dec
add
mov
sbb
lahf
inc
loope
outsl
std
movsb
jecxz
mov
fidivs
inc
inc
ret
int
and
pop
outsl
push
dec
add
xor
js
jns
jge
push
fwait
cmpsb
mov
jmp
bound
push
push
dec
sbb
sub
or
inc
addr16
bound
jne
jno
ror
mov
sub
pop
negl
xchg
cmp
pop
shlb
jns
loope
dec
dec
jecxz
mov
decl
cmc
enter
test
cmp
int
fcomip
inc
mov
mov
mov
xchg
leave
xor
and
or
aad
add
cmpl
push
push
ja
out
inc
inc
push
std
inc
or
test
push
pop
loope
scas
jae
aad
rclb
xor
and
inc
inc
or
add
iret
jecxz
xor
dec
add
ficompl
mov
push
sub
mov
in
dec
shrl
mov
inc
jge
outsl
lret
jno
mov
ja
push
scas
jns
sahf
dec
call
imul
jb
insb
inc
cld
pop
sahf
loopne
and
and
jge
in
xchg
or
mov
add
out
sub
xchg
hlt
fdivrl
sbb
mov
push
or
lahf
stos
add
ss
sbb
mov
popf
jns
pusha
imulb
pusha
add
sbb
sbb
mov
sub
imul
bound
subb
add
add
test
test
into
insl
adc
addr16
stos
cmpsb
iret
sub
fsubrs
add
fstl
jbe
js
xor
std
stos
imul
mov
pop
lock
xchg
mov
or
mov
cmpsb
push
test
ljmp
push
mov
ret
jo
pop
fcmovb
iret
lea
rcll
xor
mov
or
cwtl
out
insb
popf
jge
cld
dec
inc
and
and
aam
push
call
xlat
sub
test
adc
xchg
inc
jbe
mov
push
stos
movsb
test
daa
push
es
lock
xlat
lock
fildl
aad
clc
inc
sbb
js
push
push
cmpsb
pusha
or
inc
jl
es
xor
add
pop
mov
mov
dec
sbbb
cmpsb
adc
cli
inc
out
pop
test
std
mov
xchg
popf
or
pusha
sub
jle
push
aam
push
sub
pusha
mov
sub
outsl
stos
call
aad
pusha
pushf
not
pushf
pusha
mov
push
je
js
loopnew
lock
dec
adc
aas
andl
xor
fstps
mov
repz
pop
cmp
aaa
inc
pop
int3
insb
xlat
js
mov
mov
lret
mov
clc
arpl
push
pop
js
sbb
cmpsl
mov
daa
test
dec
faddp
lods
call
xchg
into
inc
mov
mov
jmp
shrl
fldt
sbb
cmp
sbb
mov
out
aaa
mov
mov
lods
int3
and
xor
inc
jmp
test
jle
xor
aaa
andb
sub
mov
jmp
sub
xor
push
incb
cli
add
or
mov
add
test
movsl
add
mov
jns
inc
insl
cld
push
int3
ret
sti
jns
dec
in
xchg
loope
cmpsb
out
int
jne
hlt
cmpsb
lret
sbb
cli
sub
not
push
sbb
je
push
push
push
test
jbe
test
xchg
jp
push
jne
outsl
into
push
inc
fcomps
orb
and
shrb
retw
mov
lcall
and
sub
fwait
mov
add
outsb
add
ljmp
ret
and
jno
daa
pop
mov
dec
add
jp
in
and
inc
sub
fcompl
sub
pop
in
stc
fistpll
add
mov
dec
push
mov
aad
mov
pop
and
pusha
loop
jnp
ja
sbb
dec
int3
les
add
sub
lods
je
call
pop
lcall
fisttpl
fidivs
mov
bound
loop
call
jge
clc
mov
fisubl
push
jae
imul
es
or
std
loop
ffreep
cmp
sub
jo
or
push
cli
xchg
inc
jae
push
sbb
mov
mov
pusha
pushf
pushf
add
popf
jp
mov
push
or
cmp
jne
inc
mov
push
out
jp
jg
icebp
imul
inc
repnz
adc
das
mov
add
hlt
pop
loop
scas
inc
dec
or
push
jne
push
dec
mov
repnz
add
lods
sbb
icebp
cmp
jne
icebp
cmpsb
xchg
ljmp
push
add
out
lds
fdivl
out
fsubrs
mov
in
jp
call
outsl
mov
shl
dec
inc
sub
popa
xchg
lea
xchg
xchg
cmp
cs
arpl
lods
iret
mov
sbb
mov
sbb
das
mov
into
cld
stos
mov
decl
andl
rcl
or
into
fwait
ret
hlt
mov
adc
scas
ret
icebp
add
decl
ror
lea
arpl
dec
out
sbb
clc
lods
sbb
mov
cwtl
sbb
incl
rcrl
cli
in
aam
adc
test
icebp
lea
fwait
cli
mov
out
mov
xchg
movsl
xor
int
rol
push
add
xor
push
cli
xchg
cli
cmp
lds
mov
mov
ljmp
ret
adc
xchg
and
stc
xlat
jmp
cli
addr16
jbe
enter
jmp
inc
lcall
or
xchg
dec
add
mov
sarl
arpl
cmpsw
pop
scas
mov
jbe
or
jge
sbb
mov
mov
pushl
cs
mov
test
popf
lahf
inc
xor
add
jecxz
aad
mov
xchg
pop
adc
xchg
clc
lea
jp
call
adc
inc
add
mov
jp
inc
out
fisttps
push
lock
and
mov
add
sub
xor
pop
out
xchg
ja
movsb
add
nop
and
movb
dec
add
jp,pt
fadds
sbb
mov
mov
jp
jae
insb
cld
push
mov
mov
jno
push
and
push
push
decl
and
out
hlt
add
cmpsb
inc
test
sub
test
ljmp
add
imulb
push
hlt
adc
movl
mov
imulb
ljmp
adc
idivb
aaa
pop
clc
and
mov
ret
in
aas
outsl
cmc
push
adc
mov
sub
in
or
jp
fildl
fwait
jle
sarb
xchg
cmp
arpl
xor
pop
lock
cmpl
adc
gs
pop
ljmp
movsb
outsb
mov
cmpsb
jae
mov
imull
adcb
push
fldl2e
sbb
or
mov
jl
mov
mov
popa
call
pusha
push
scas
sbb
jbe
or
inc
mov
pop
or
inc
jne
andl
daa
test
imul
jg
inc
jl
jne
push
jb
dec
daa
xor
mov
jmp
and
movsl
out
xor
and
icebp
scas
jb
adc
pop
push
xor
movsb
mov
pop
in
jne
lret
dec
aad
idivl
lods
data16
cmp
fcoms
fs
cmpsb
mov
aad
or
stos
jg
pop
and
cmp
push
stc
loope
mov
bnd
dec
cmp
ss
lock
adc
lds
add
adc
ds
test
or
cwtl
lahf
daa
jge
xchg
jg
aaa
std
adc
jb
sub
ret
mov
das
daa
fldt
xor
mov
incl
int
out
sbb
cli
jp,pt
stc
andb
or
sbb
adc
idivb
mov
mov
in
push
cmp
xor
leave
mov
popa
subb
outsl
dec
in
pop
and
std
js
loope
aas
sbb
sub
out
insl
push
incl
push
inc
cld
test
push
shrl
mov
ficomps
pop
fsubr
sub
cmp
push
ljmp
je
cli
roll
movb
popl
fnsave
sub
das
mov
sub
cmc
xchg
pop
es
jae
into
loope
push
cmpsl
jg
clc
jg
xchg
popf
xchg
scas
loope
sahf
ret
sub
leave
test
aas
inc
cld
inc
aad
flds
sub
mov
jp
jg
clc
scas
outsl
mov
mov
mov
or
xchg
xchg
mov
mov
cmp
mov
mov
xor
mov
pop
mov
xor
adc
mov
shll
xor
ret
xor
jo
and
int3
xchg
sbb
pop
push
cmp
cmp
add
call
mov
mov
pop
int
dec
mov
and
adc
pop
shl
inc
lods
dec
test
fsub
test
mov
xchg
outsl
sub
mov
adc
das
call
loop
and
sub
cmp
inc
mov
jge
cmp
dec
jo
lock
fwait
es
cmc
dec
stos
sbb
das
shll
into
and
std
addr16
daa
and
push
das
adc
ljmp
aad
das
adc
and
mov
jg
push
dec
push
sub
adcl
insb
jae
cli
imul
jno
repz
icebp
fcomps
mov
std
es
or
jg
mov
sbb
iret
cli
jmp
push
cmp
daa
mov
lret
push
push
lea
inc
cs
rclb
shl
dec
andb
sub
fs
lods
mov
movsb
push
and
insb
lret
and
pusha
adc
or
pushf
push
lahf
or
adc
jbe
sahf
jo
cli
test
xchg
jne
adc
adc
mov
mov
cmc
jg
pop
mov
jns
push
bound
jp
dec
lods
pop
sub
lcall
stos
loopne
inc
movsl
dec
test
sbb
or
jp
jae
lahf
mov
pop
loopne
out
lea
jg
and
ds
sbb
scas
das
inc
xor
ljmp
std
pop
sti
add
adc
cld
stos
xor
mov
mov
add
sub
clc
push
xchg
mov
jecxz
jno
fldl
xchg
cmp
dec
mov
pop
aam
fwait
stos
jle
xchg
or
call
jg
mov
xchg
pop
pop
push
loopne
push
mov
icebp
cmp
int3
ret
push
inc
cmp
out
xchg
sahf
xchg
cmp
fs
push
push
fbld
mov
mov
jg
mov
ret
jno
faddl
out
lods
sub
outsb
stos
incl
inc
push
mov
cmp
xchg
js
in
outsb
dec
dec
and
aam
push
popf
ljmp
push
mov
pop
adc
ret
fiadds
sbb
mov
movsl
outsb
cmp
mov
adcb
loop
outsb
mov
rcll
sub
mov
inc
inc
adc
push
scas
loope
repnz
icebp
add
call
mov
xchg
mov
pop
add
js
out
daa
mov
mov
jo
jle
add
push
adcb
outsl
js
jl
jb
xchg
pmaddwd
pop
and
int
lcall
mov
push
cli
mov
jbe
in
fildll
push
mov
xchg
pop
enter
sub
clc
xchg
andl
inc
xor
xchg
mov
outsl
push
incl
xor
sahf
int3
sbb
incl
insb
pop
mov
ret
jns
xor
ror
sbb
cmpsl
call
not
jo
das
mov
shlb
in
add
and
aam
push
fisubrl
inc
fnstsw
xchg
insl
ljmpw
hlt
fists
adc
fimuls
sub
xlat
insl
mov
loope
xchg
rorl
jo
arpl
dec
xor
xchg
add
pop
stos
clc
mov
mov
and
jl
stos
add
addb
rorb
add
pop
push
pop
or
ret
aam
jg
js
adc
or
bound
jl
pushf
or
push
xchg
mov
pushl
pushf
adc
sarb
outsb
mov
insb
add
adc
addb
and
mov
push
pop
adc
xor
and
fdivl
sub
arpl
fwait
mov
mov
pop
outsl
data16
or
popf
or
popa
fs
popa
push
loope
or
adc
add
push
add
adc
addb
adc
adc
jle
insb
jg
outsb
pop
push
push
bound
jae
fcoms
repz
nop
stos
or
inc
js
jecxz
push
xor
adc
mov
jge
jo
jnp
adc
movq
adc
outsl
jb
popa
test
mov
outsb
insb
xchg
sub
mov
lds
add
bound
mov
sub
outsb
jbe
outsl
outsb
push
bound
imul
pusha
inc
stos
sub
mov
test
dec
popaw
inc
sub
ficoms
adc
mov
adc
or
add
sbb
test
testb
imul
mov
pop
insb
sbb
jo
and
inc
insl
inc
adc
inc
mov
or
add
adcb
int3
mov
popa
call
stos
xor
cltd
jae
test
push
push
mov
stos
mov
stos
add
out
data16
outsb
xchg
mov
mov
pop
pop
aas
mov
pop
sbb
popa
and
mov
jbe
ret
cwtl
imul
outsb
push
push
ja
mov
jne
or
adc
pop
popa
cmp
adc
jo
arpl
outsl
fs
popa
orl
adc
jo
arpl
daa
sbb
je
mov
dec
insl
add
adc
push
add
jae
inc
xor
addl
arpl
sub
cmc
add
add
add
jne
push
add
outsl
cmp
add
add
jns
jb
mov
add
loope
inc
lods
mov
pop
mov
sub
cmpl
sti
or
mov
cli
push
pusha
fbld
in
aam
push
cld
cmp
fcoms
mov
jmp
add
fisubs
pop
cmp
in
mov
adc
add
popa
fists
push
add
push
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
