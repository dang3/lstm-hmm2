call
add
add
add
jo
cli
and
fstps
loop
insl
cltd
and
dec
mov
sbb
data16
lcall
or
mov
cld
jmp
sbb
movsl
bound
ss
pop
movsl
push
icebp
dec
fmuls
cli
mov
rorb
sbb
popf
lock
int3
divb
sub
mulb
pop
inc
ret
int3
cwtl
push
faddl
insl
adc
stc
mov
push
jnp
pop
jo
push
cmp
cmp
subb
icebp
stos
dec
inc
cwtl
xchg
movsb
sbb
xchg
xor
popf
ret
xchg
sub
loopne
xchg
and
lcall
pop
xchg
leave
fiaddl
movsl
or
dec
test
mov
arpl
jmp
fwait
jb
imull
sbb
imul
rorb
push
cs
xchg
fwait
movsl
int
out
mov
je
inc
pop
cmc
and
sahf
icebp
popa
aas
adc
and
pop
mov
out
mov
jl
and
jg
and
mov
ret
add
dec
fcmovu
or
je
insl
lea
cmp
sbb
push
scas
dec
pop
and
xchg
rorb
mov
mov
inc
add
inc
mov
adc
or
mov
mov
sbb
out
xchg
push
mov
push
test
andl
mov
cmp
pop
push
aad
pop
sub
xchg
frstor
mov
and
aaa
lods
aam
ljmp
mov
and
popf
pusha
lret
lret
jb
pop
out
mov
scas
pop
mov
adc
lahf
dec
lahf
fistl
push
cmp
lock
fadds
xchg
ret
mov
cmp
push
test
push
sub
cmpsl
adc
loope
cwtl
adc
icebp
xchg
into
icebp
lock
fwait
movsb
xchg
repz
imul
ss
lcall
push
pop
adc
cmpsl
fsub
mov
mov
inc
in
sbbl
mov
dec
rcll
cmpsb
push
fcmove
stos
dec
pop
jnp
out
lods
mov
jne
jne
push
push
inc
outsb
add
pop
cli
xchg
clc
lods
mov
nopl
leave
hlt
maskmovq
int3
leave
dec
test
test
lret
hlt
sub
cmpsb
or
and
lods
fucomip
adc
out
add
aaa
stos
les
roll
pop
test
dec
jo
adc
pop
push
adc
aad
xor
adc
mov
cmpsl
push
mov
idivb
pop
mov
test
cmc
fildl
mov
inc
out
sub
mov
cmp
cld
lahf
pop
push
movsb
sub
cmp
inc
jg
and
mov
sub
sbbl
or
jbe
sbb
mov
cmp
push
jp
pop
cmpsl
outsl
push
adc
mov
or
mov
push
mov
addr16
sub
xor
rorb
push
and
nop
daa
movsl
sbb
test
or
mov
pop
repnz
sub
jae
or
push
xchg
stos
fstpt
lret
cmpsb
pop
push
daa
loope
xor
lret
jno
xchg
inc
leave
or
cmp
shr
dec
mov
mov
test
xabort
sbb
lcall
icebp
xchg
inc
jp
add
jg
mov
or
daa
rcr
mov
test
mov
repnz
in
in
lds
test
sbb
mov
in
js
clc
cmpsb
sbb
sbb
jae
out
dec
adc
add
mull
outsl
inc
dec
xchg
aas
data16
aas
out
mov
das
insb
xchg
jo
pop
xchg
aad
mov
dec
adc
push
add
or
lahf
push
mov
push
test
mov
pop
xchg
adc
mov
mov
popf
push
jo
xor
dec
pop
dec
sbb
mov
cmc
das
lcall
lds
pusha
daa
mov
adc
inc
shr
pop
pop
mov
jp
pop
psrlq
jae
lret
ret
stc
lds
lock
mov
cs
sbb
xchg
test
fs
pop
cmp
daa
rcll
xchg
lods
jle
dec
jecxz
stc
fsubrp
stos
xor
bound
lods
icebp
popl
ja
mov
test
adc
add
and
dec
in
cmp
dec
fldt
lea
mov
fisttpl
out
negl
mov
xchg
jbe
push
sbb
lea
fwait
inc
into
jns
subb
pop
pusha
int3
jle
sbb
sahf
mov
cwtl
pop
hlt
test
mov
shlb
test
sbb
rorl
and
jnp
xchg
cli
xchg
jo
and
xchg
cli
cs
je
repz
sub
and
push
cmp
sar
xchg
or
mov
jb
js
jmp
aam
mov
jg
lods
xor
jg
jbe
pop
push
xlat
push
push
sahf
clc
xchg
int3
ds
std
sbb
shll
lcall
add
pop
xchg
mov
mov
js
aam
mov
push
dec
pusha
adc
aas
iret
fistpl
add
ret
inc
mov
mov
add
lea
das
mov
pop
ds
pop
xlat
push
sbb
loop
sbb
mov
loope
or
scas
push
mov
jmp
jno
jne
adc
or
adc
xchg
mov
shr
arpl
arpl
push
rcrb
pusha
lret
test
cmp
jbe
mov
addr16
jbe
dec
cmp
adc
mov
sbb
push
lock
jno
cmp
rclb
in
xchg
xor
fbld
jbe
outsb
pop
xchg
fstpt
test
fadds
sub
cmp
push
mov
ljmp
insb
in
divps
pushl
add
fwait
sbb
test
push
mov
scas
ss
adc
mov
das
and
pop
daa
sub
out
loop
push
xor
test
stos
xor
jle
dec
test
ret
imul
inc
dec
int
xchg
js
xor
insl
fcmove
pop
cltd
sub
ret
mov
js
xor
and
cmovge
xchg
mov
jne
sub
add
popa
mov
push
enter
adc
adc
xchg
adc
fistl
push
xchg
sub
fldl
lods
push
xor
xchg
shll
popa
jp
jp
mov
cmpsb
push
or
dec
ljmp
ds
sbb
adc
xchg
mov
dec
mov
dec
xchg
xchg
push
in
lret
sbb
inc
rcl
add
test
and
imul
mov
jns
test
sbb
and
xchg
xor
sbbl
fmull
sar
jge
and
add
out
adcb
cmpsb
mov
sub
dec
icebp
xor
in
dec
jnp
jmp
xchg
pop
dec
xchg
fidivs
das
inc
pop
jp
jb
xor
inc
fisubrl
cwtl
mov
sarl
pusha
arpl
xor
out
push
xor
mov
mov
add
and
addr16
pop
fsubs
movsl
push
push
es
outsb
lods
mov
lods
mov
pop
jg
pop
arpl
and
and
dec
cmc
add
sub
clc
fnstsw
mov
pop
xchg
dec
scas
jmp
dec
stos
pop
jp
rol
data16
leave
push
sub
int3
jmp
movsb
pop
test
and
lods
cmc
shll
xchg
sub
cwtl
inc
les
add
cmpsb
pushl
mov
inc
sbb
mov
pop
negb
stos
sub
scas
cmc
mov
and
sub
stos
push
cmp
test
xorb
lods
push
pop
inc
stos
loope
push
push
cs
and
in
loope
insl
mov
testl
push
mov
fistpl
aad
outsb
jns
cmp
hlt
adc
mov
addl
cwtl
xchg
and
push
add
adc
mov
add
int3
sarl
jecxz
insb
cmpsb
movsl
xor
xchg
dec
lcall
or
sub
fistpl
jp
push
mov
cmp
mov
jmp
and
xchg
loop
or
jp
dec
out
scas
xlat
out
jae
ja
cmp
sub
pop
lea
push
add
imul
mov
jbe
cmp
movsl
sti
xorb
cltd
leave
mov
icebp
cmpsb
popa
cmp
xor
outsl
mul
sbb
pushf
fs
push
cli
push
add
mov
cltd
push
xchg
sbb
dec
std
cmp
outsb
jge
frstpm(287
jp
sbb
pushf
js,pt
int
aas
sbb
loope
jbe
fisttps
jo
into
shlb
mov
sbb
dec
iret
fimuls
pop
enter
mov
loope
fildl
in
subb
fxch
sub
sarb
sbb
lds
lods
cmc
movsb
addr16
mov
loop
es
jb
dec
inc
adc
movsb
enter
lock
ss
clc
mov
mov
sbb
inc
out
movsl
test
icebp
lret
pop
fists
sbb
push
aas
setne
imul
nop
mov
pop
xor
jne
dec
les
orb
jbe
ljmp
jmp
pop
and
cmp
and
rcrl
bound
aad
add
xchg
xchg
aas
lret
adcl
movsb
inc
cmp
xor
iret
cmpsl
adc
jns
outsb
jno
leave
stos
add
cltd
ret
cmp
cmp
or
mov
adcb
notrack
sub
inc
aad
cmc
jl
rclb
mov
sbb
sub
xor
ret
loope
int3
mov
gs
movsl
sub
sbb
ja
rorl
sub
add
fdivl
addr16
cmp
sub
inc
std
pushf
decb
lea
push
in
inc
sub
mov
cltd
xlat
pop
mov
cltd
xchg
popa
jg
xor
stos
dec
arpl
dec
sbb
nop
mov
jmp
mov
push
imul
clc
sbb
inc
and
nop
pop
cltd
insb
xchg
clc
cmp
adc
push
test
outsl
jnp
cmp
and
lret
mov
mov
cmp
sub
scas
test
repnz
js
aaa
gs
push
cltd
adc
pop
outsl
pop
stos
jo
add
inc
icebp
inc
dec
and
dec
call
mov
daa
xor
arpl
jae
fistpl
stos
pop
pop
add
imul
iret
jle
jno
sti
adc
dec
mov
sbb
test
aam
or
lret
repnz
and
idivl
xchg
divl
adc
sti
fnstsw
and
push
lea
adc
add
test
vpxor
les
and
fdivr
icebp
and
dec
xchg
pop
in
pop
psllw
dec
sbb
and
xor
out
sbb
mov
iret
in
jae
stos
adc
into
in
adc
sub
outsl
jns
cwtl
iret
ret
aam
and
cld
outsb
sub
fwait
xchg
ret
sub
scas
fisubrl
or
pop
adc
adc
push
push
mov
pop
cld
or
inc
imul
add
bound
addr16
push
fidivs
jns
jmp
cmpsl
movsl
push
xor
or
mov
mov
mov
or
je
jecxz,pt
sbb
jg
insb
lret
jns
cmpsb
and
xchg
aaa
xor
sbb
cs
hlt
fisttpl
lcall
push
pusha
mov
push
data16
mov
sbb
jbe
inc
lahf
call
jb
jb
push
xor
mov
je
sub
inc
scas
stc
xor
sti
cmp
in
addr16
jge
push
popf
mov
lds
repnz
fldl
aam
mov
pop
ret
lock
stos
xor
loopne
sbb
fdivrl
into
or
icebp
mov
fimull
fs
lods
sar
and
cli
adc
leave
es
ret
repz
sarb
or
andb
loopne
stc
mov
dec
and
lock
xor
in
pop
sub
scas
daa
sti
dec
mov
scas
cs
test
and
sbb
xchg
adc
lcall
push
repz
incb
cmp
mov
mov
mov
inc
cmp
cmpsl
lds
daa
dec
sarb
in
add
add
imul
mov
rcrl
mov
push
pop
gs
or
addb
jg
mov
pop
cmpsl
mov
popl
and
mov
and
mov
push
pop
lds
pop
dec
xchg
inc
or
cmp
ja
sbb
in
jmp
push
pop
pop
incl
fdivrl
push
sahf
ljmp
sbb
cli
decl
push
push
jmp
or
xchg
ret
and
xor
sbb
and
cmp
jb
sti
cmp
xchg
add
add
pop
pusha
inc
lds
sbb
pop
and
aaa
xchg
inc
mov
cmpsb
inc
cs
sbb
pop
mov
jp
and
daa
inc
jnp
in
mov
out
sub
push
jle
les
or
idivl
lods
cmp
shll
mov
incb
push
push
mov
stc
add
xchg
xor
popf
pop
mov
xchg
mov
dec
cmp
cmp
cld
jle
inc
cld
sbb
fildl
push
dec
xchg
aam
xor
adc
or
jo
ja
stos
repz
and
int
sbb
test
out
mov
add
jmp
dec
sub
fadds
jo
jbe
call
mov
cmp
pop
sbb
cmp
push
jae
inc
sub
cmp
popa
ffreep
xchg
sub
sub
aad
in
push
fldl
lock
rcrw
inc
add
andnps
cmp
or
out
incl
mov
imul
cli
mov
mov
cs
fst
or
dec
mov
push
mov
xchg
repnz
push
xor
repz
pop
fdivs
idivb
dec
add
int
dec
lcall
test
xchg
loopne
xchg
jbe
movsb
scas
and
jecxz
testb
jge
jp
cmp
adc
mov
adc
in
test
mov
out
and
dec
lea
out
imul
incl
daa
repnz
xchg
test
xlat
cmpsl
fwait
popa
sbb
nop
pusha
jg
xchg
pop
adc
mov
fstl
sarb
ret
xchg
push
jecxz
sbb
mov
je
or
sub
lock
mov
and
cmp
push
aaa
ror
jge
imul
mov
call
pop
cmpsl
and
mov
xchg
mov
ss
cs
pop
inc
enter
mov
outsl
movsb
xchg
movsbl
jns
and
jnp
jle
dec
push
js
pop
mov
pop
lock
mov
mov
push
int
jb
adcb
out
cmp
push
mov
out
aaa
mov
jle
idiv
add
adc
repnz
jnp
fs
ljmp
sub
fwait
int3
push
adc
enter
popa
jmp
mov
fld
cld
pop
mov
leave
sbb
std
ljmp
or
cmp
fiadds
test
mov
sti
in
jno
adc
arpl
xchg
test
pop
outsl
fcom
push
sbb
mov
int
nop
out
ljmp
jmp
aaa
cmp
and
popa
inc
movb
sbb
test
push
iret
dec
test
adc
push
cmp
rorb
int
shl
push
fstl
xchg
and
push
cmp
cld
nop
xor
add
xchg
push
push
je
xor
cwtl
pop
xchg
stc
mov
mov
cmpsl
ret
enter
jnp
jge
xchg
push
out
sbb
notb
imul
xchg
aam
mov
and
lret
and
mov
movsl
lods
pop
sub
cmp
sbb
dec
pop
xchg
lret
out
scas
inc
or
shll
pushf
gs
jg
fxam
add
cmp
adc
int3
rcll
outsb
int3
fimuls
test
sar
push
lret
repz
dec
movsl
in
xor
adc
add
jmp
add
adc
std
cs
cwtl
dec
out
bnd
sti
pop
sbb
lcall
push
fcmovnbe
add
fisttps
std
jmp
add
jno
arpl
and
and
sbb
dec
mov
outsl
sbb
lahf
and
dec
and
jnp
pop
xor
outsl
jno
scas
adc
dec
mov
fisubrl
fwait
dec
pusha
dec
add
adc
mov
dec
push
and
mov
sub
push
jbe
insb
lret
int3
adc
pop
out
mov
jmp
push
cmp
or
stc
dec
les
lcall
sbb
test
popf
filds
push
xchg
or
jecxz
in
nop
sbb
sahf
loope
or
mov
mov
adc
test
lahf
mov
scas
xchg
xchg
sbb
cmp
sbb
mov
out
push
push
in
and
hlt
adc
lea
sbb
sub
and
xchg
mov
mov
cltd
andb
jae
and
mov
fistpll
sub
repnz
ds
in
pop
cmp
fnstenv
lcall
jl
inc
mov
and
popa
lods
lret
jb
mov
push
adc
mov
stc
push
arpl
aam
inc
outsb
mov
pop
imul
cmp
fstl
cwtl
daa
and
sbb
and
callw
ljmp
and
mov
mov
or
xchg
fucomip
add
out
and
and
xor
and
je
jmp
inc
mov
xchg
lock
out
jle
sbb
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
andb
lds
mov
xor
mov
cld
clc
add
aas
jl
adc
shll
xor
inc
adc
xor
lea
xchg
scas
or
cwtl
lret
mov
pop
popa
and
mulb
jle
jle
lcall
repz
std
cmp
mov
stos
movsb
leave
stos
mov
add
cs
adc
rcr
or
mov
decl
repz
add
xchg
popa
addr16
cmp
mov
jo
leave
adcb
scas
loop
push
in
sbb
imul
sbb
icebp
icebp
int3
xchg
lock
cs
pop
push
sub
mov
adc
aad
add
add
pop
pop
mov
sub
push
loopne
test
scas
cmp
pusha
sbb
cmpsb
pop
sbb
mov
mov
inc
fsts
sahf
inc
rcll
ja
mov
in
fs
push
test
cmpsb
mov
mov
cmp
and
testb
mov
dec
add
pop
push
jns
fcoml
push
jg
sbb
add
cmpb
pop
or
push
loop
cmpsl
movzwl
push
fcomp
in
lock
repnz
or
sub
push
test
inc
stos
stc
sbb
fisubs
leave
dec
mov
mov
cmp
sbb
xchg
lods
aad
cwtl
int3
pusha
mov
loop
push
mov
dec
das
aad
arpl
int3
jg
sub
pop
adc
in
inc
cmc
add
pop
jg
enter
mov
add
lret
mov
fildl
add
sbb
ja
lret
mov
cmpl
mov
push
dec
pop
fs
cmp
adcb
mov
mov
mov
fnstenvs
xor
mov
adc
fwait
pop
stos
inc
inc
mov
xor
fsub
loopne
sbb
sbb
std
clc
pop
jge
push
and
pop
push
jno
repnz
push
repz
add
cmp
in
add
repnz
push
stos
pusha
lret
out
mov
mov
and
and
push
push
xchg
add
enter
cltd
xchg
aas
sbb
push
int
adc
jae
arpl
loop
or
cmp
jg
daa
jo
jb
imul
jne
in
lret
pop
scas
loope
fs
scas
scas
pushf
xchg
pop
adc
add
cs
sub
jbe
push
sub
addr16
movsl
js
int
daa
jp
out
add
cmp
xorl
ret
xor
notb
test
ja
lcall
xchg
xchg
pop
push
mov
lahf
in
jg
mov
sbb
testl
lock
jge
fistl
punpckhwd
add
push
imul
bnd
cmpsb
int
test
mov
dec
push
push
fs
jns
mov
aam
lcall
sbb
mov
sahf
or
push
sti
mov
out
cltd
je
mov
inc
movl
push
clc
ss
gs
sub
clc
add
jmp
sbbb
sub
imul
push
or
iret
sbb
push
pop
pop
cld
add
test
add
fildl
cmpsl
jg
mov
enter
or
sub
lea
cld
inc
push
ret
push
jmp
add
xor
fcmovnbe
shr
mov
xlat
add
es
mov
add
lods
inc
mov
push
orb
sub
xor
in
aaa
sub
xchg
enter
hlt
dec
insb
pop
lahf
sub
push
pop
cmp
pop
pop
iret
clc
xor
sub
in
jo
hlt
movsb
xchg
sub
inc
mov
je
lds
icebp
pop
push
and
stc
outsb
add
movsl
das
out
mov
sub
ror
mov
and
enter
in
fidivrl
add
jp
sti
adc
xchg
cmp
lock
sub
les
pop
ja
pop
movsb
inc
ss
shll
jmp
pop
xor
mov
test
stos
cmp
outsb
arpl
adc
mov
fidivrl
push
std
scas
xchg
lcall
xchg
xchg
sub
jns
xor
test
push
or
dec
xor
iret
addr16
sbbb
inc
enter
nop
mov
push
mov
and
dec
fdivp
or
hlt
lods
ss
popf
out
movups
mov
insl
fildl
les
fs
push
jg
scas
jae
mov
sub
je
movsl
fisubl
rorl
jp
divb
xchg
mov
aam
pop
and
daa
mov
stos
gs
dec
xorl
adc
imul
xchg
fcoms
dec
push
insl
shll
out
cmp
inc
pop
inc
lea
cli
js
mov
ds
jg
sbb
adc
insb
xor
stos
mov
out
and
mov
or
inc
jo
fisubrl
aam
and
push
and
sub
xor
push
xchg
fistpl
lret
inc
stos
fptan
push
sahf
clc
fldt
lret
mov
mov
add
mov
ret
stos
jns
mov
adc
jns
mov
dec
add
xchg
fstpl
nop
pop
xor
flds
jmp
shll
cld
aad
les
dec
test
mov
jae
andl
fsubrs
sbb
or
test
cmpsl
fdiv
push
add
mov
in
pushl
mov
shrl
and
xor
in
cmp
cmp
mov
adc
scas
stos
inc
xor
cmc
xchg
lock
test
cs
push
cmp
rol
mov
cld
fmulp
fs
pop
movsl
dec
out
jl
stos
pop
mov
lods
das
rcl
jl
ret
sbb
leave
pop
mov
imul
push
pop
inc
lods
inc
daa
lock
lcall
sub
inc
jno
push
div
mov
test
add
push
imulb
ds
mov
add
push
dec
ficoms
dec
sub
popf
popa
pusha
and
not
inc
enter
rcrl
xor
out
data16
jle
push
or
jl
xchg
lret
lret
stos
fisubrl
adc
and
xor
jle
insl
in
xor
and
inc
into
test
stos
adc
dec
jg
movsl
sub
push
or
or
sub
nop
mov
daa
push
fmul
arpl
jnp
cmp
adc
xor
int3
push
loopne
jae
lods
ja
cwtl
ret
cwtl
inc
pop
push
push
movl
push
in
and
adc
fcmove
xchg
in
in
and
xlat
daa
dec
loop
xor
pop
sub
leave
scas
pop
hlt
push
pop
pop
mov
das
mov
add
lahf
xor
xor
call
jge
setb
ja
inc
push
into
fildl
into
popf
scas
sbb
mov
lds
lret
inc
jnp
xchg
cmp
dec
and
pop
cli
jo
rclb
inc
xor
mov
jmp
nop
fcoml
add
gs
shl
mov
xchg
int3
dec
fwait
sub
idivl
lods
cld
xor
or
insl
ljmp
xor
fnstenv
arpl
std
push
mov
cmpl
int
test
inc
rclb
xchg
cmp
fisubs
or
lods
cmp
mov
jmp
shl
ss
stos
shl
and
xor
inc
scas
jbe
mov
loopne
popa
add
mov
or
mov
movl
cmp
gs
jle
iret
mov
mov
add
test
mov
mov
add
dec
xchg
dec
out
dec
cmp
dec
lret
jae
fstl
or
movsb
mov
movsb
xor
adc
sarl
dec
cmp
inc
push
lret
test
ret
push
stc
test
pusha
lret
xchg
or
lret
cmp
xchg
ret
adc
stos
aas
out
or
xor
push
sbb
es
idivb
cmp
mov
stc
inc
imul
fsubl
fsubrl
mov
pop
mov
inc
movsl
xor
mov
pop
mov
pop
aaa
in
inc
test
test
inc
nop
inc
cmp
outsl
lods
lret
pop
scas
pop
addr16
adc
cmp
fs
xlat
mov
xor
sbb
or
xor
jae
cmpl
sbb
or
cmp
push
jl
call
jl
mov
dec
adc
cmp
mov
adc
bound
xchg
xchg
xor
fcmovnb
sub
push
sub
stos
stc
popf
aad
sbb
adc
mov
inc
sub
mov
mov
std
ljmp
addl
pop
xor
xchg
mov
sub
popa
pop
loope
int3
dec
rorl
inc
out
insb
jne
test
lahf
ds
es
mov
pop
fiadds
fwait
into
xadd
es
sub
cld
xchg
adc
sub
push
pop
xorl
push
mov
scas
out
int
or
cmp
add
add
cmp
mov
lock
hlt
test
cltd
aaa
dec
xchg
jecxz
adc
ret
push
mov
rolb
rorl
jnp
sub
test
call
hlt
loop
add
pop
out
aaa
and
stos
insb
es
outsb
cmp
inc
adcb
test
mov
dec
rorb
arpl
shrb
dec
mov
stos
cwtl
loopne
sub
xchg
call
sahf
out
pop
push
ret
mov
mov
xor
mov
aaa
out
es
lcall
mov
adc
mull
adc
cs
mov
sub
aam
fldenv
pop
loopne
dec
repnz
sbb
test
cmp
push
xchg
xchg
sbb
mov
xor
dec
or
adc
sbb
dec
add
inc
inc
in
scas
cli
jle
popa
insb
rcrb
cmpsl
enter
jnp
add
fldz
sahf
lret
push
clc
xor
aas
and
loope
and
js
or
dec
nop
cmp
arpl
dec
sub
xlat
test
int
inc
xchg
or
pop
mov
sbb
jne
pop
out
inc
push
movsl
dec
or
das
dec
fsubr
xor
mov
dec
mov
jmp
or
xor
loopne
add
gs
sbb
mov
je
dec
mov
inc
pop
mov
pop
add
sub
or
stos
incb
in
xchg
inc
push
xchg
lea
imul
jmp
int3
mov
pop
jne
cmp
mov
push
xchg
push
nop
scas
xchg
shl
cld
add
aas
out
pushf
xor
movsb
popf
imul
das
stc
pop
lret
jecxz
inc
xlat
xchg
shlb
subl
lahf
in
data16
incb
out
mov
mov
inc
push
mov
sti
lret
inc
mov
cmc
fsubrl
pop
push
push
inc
rorb
xor
insl
js
not
dec
outsb
pusha
jg
pushf
adc
adc
ljmp
sub
lods
mov
xor
or
pop
sub
clc
fs
out
dec
in
xchg
mov
and
add
and
fisttpl
outsb
lock
inc
push
femms
inc
jae
fsubr
lret
mov
xchg
jb
or
fsubrs
lcall
push
push
pop
sahf
push
lods
cltd
xchg
xor
lcall
rcrl
jae
jbe
xchg
add
push
icebp
cmp
je
in
test
pop
sub
jmp
pop
mov
xor
adc
cmp
adc
jns
cmp
daa
enter
dec
inc
lods
adc
scas
push
sub
arpl
dec
pusha
jl
lea
push
popf
leave
imul
xchg
faddl
sub
shrl
cmp
push
sub
pop
loopne
je
jle
mov
inc
push
pushl
mov
lcall
add
insl
sub
cwtl
pop
shl
adc
mov
int
xor
hlt
or
fsubrl
std
pop
movsb
roll
pop
fs
add
aas
orl
lods
movsb
pop
shll
fsubp
xor
cmp
xchg
jp
fisttpll
xchg
rcrl
and
bound
loopne
mov
mov
xchg
leave
jb
cld
subb
pop
pop
dec
adc
pop
test
inc
fistps
xchg
clc
lods
inc
enter
mov
aas
cs
xor
scas
add
sbb
fadds
fst
loope
out
xor
out
sub
std
mov
push
push
jg
andl
cmpsl
punpckhwd
xchg
push
jne
faddp
push
imull
int3
mov
test
pop
inc
pop
xor
inc
stos
loopne
rolb
xor
or
xlat
lods
dec
sub
sarl
mov
push
ret
mov
addl
movb
in
inc
in
push
pop
fistpl
cld
adc
stc
pop
call
pop
cmp
jmp
and
test
fwait
xchg
out
or
fldt
xchg
xor
push
rorb
data16
push
mov
and
jno
xorl
popa
cmp
inc
jge
fstps
xor
or
adc
sarb
pop
and
loop
xor
arpl
xchg
pop
lods
divb
cltd
repz
data16
das
enter
mov
mov
mov
mov
stos
pusha
pop
loopne
mov
lock
rcll
movsl
or
push
mov
sbb
add
push
ljmp
push
and
mov
sub
loopne
inc
mov
jne
addr16
mov
clc
dec
aas
inc
les
xor
scas
cmpsb
jnp
lahf
jle
ljmp
repz
mov
dec
inc
cmpb
fiaddl
jae
ja
hlt
xchg
lcall
test
mov
fs
pop
or
aad
loop
scas
inc
je
inc
mov
inc
cli
jne
icebp
ret
or
aam
xchg
cmpsb
add
mov
add
movsl
insl
sbb
push
xchg
mov
outsb
xchg
scas
aam
xor
sub
out
add
fnstenv
sbb
mov
leave
out
xor
mov
cmpsb
jmp
pop
push
sbb
cmp
test
aas
adcb
adc
fsubs
shll
outsb
or
aam
pop
sub
jp
imul
inc
push
or
adc
lret
pushl
xchg
and
das
xchg
mov
cmp
repnz
addr16
push
mov
bound
jno
lcall
pop
icebp
repz
push
add
call
out
mov
jns
fs
lcall
xorb
jo
mov
stos
mov
mov
jge
insl
stc
mov
dec
dec
int
stos
icebp
mov
dec
xor
mov
cltd
lock
test
test
push
stc
daa
icebp
stc
outsb
lods
sbb
and
fists
enter
mov
js
mov
and
call
mov
jo
mov
call
jns
je
pop
sub
push
mov
cmp
sub
or
les
addr16
loope
adc
sub
jecxz
out
in
das
int3
push
push
ljmp
or
mov
push
repz
icebp
hlt
jbe
je
out
fucomp
into
repnz
testl
popf
cld
enter
jne
inc
arpl
in
push
negl
testl
xchg
mov
inc
jne
rcrb
std
adc
fadd
nop
aaa
lret
rcr
inc
or
xchg
lods
adc
fdivrl
ss
enter
shll
mov
jno
gs
test
push
dec
mov
adc
sub
pop
rcl
or
xchg
ja
aaa
or
scas
push
xchg
lret
cli
dec
jecxz
test
iret
sbb
cli
sub
dec
fnstcw
imul
push
int3
or
mov
pushf
mov
sar
and
sarl
lock
inc
rclb
push
dec
pop
mov
mov
mov
insl
insb
aad
fcmovu
xchg
popf
adc
ret
jge
hlt
shl
lret
fmull
jecxz
fbld
nop
insb
inc
mov
scas
test
das
stos
lods
data16
xchg
xor
jae
xor
test
cmp
pop
ret
sub
dec
cmp
sbb
mov
hlt
cmp
arpl
cmp
test
mov
and
cmp
mov
cwtl
sti
or
int
cli
fcompl
mov
rcrb
push
arpl
mov
cli
or
push
cmp
sti
movsb
test
jbe
mov
std
call
add
gs
push
stos
sbb
cs
xchg
mov
ja
std
incb
aaa
pop
push
leave
iret
les
insb
cltd
and
int3
push
jnp
and
xchg
ret
js
inc
ss
mov
into
stos
lods
sahf
popf
push
call
or
ret
repnz
pusha
dec
cli
nopl
mov
loop
xlat
shlb
outsl
cmpb
add
fwait
mov
test
fbld
icebp
xchg
repnz
sub
mov
push
es
xor
notb
and
ss
inc
jg
mov
arpl
mov
or
std
push
jg
shrb
popa
stc
dec
mov
sub
pusha
mov
fisubs
inc
dec
cmpsl
push
stos
adc
stos
pop
fs
sub
test
xchg
stos
jl
push
icebp
es
test
mov
mov
in
shl
addl
movsb
mov
xchg
popa
jl
ftst
mov
mov
mov
and
out
js
mov
popa
mov
shr
jl
pushl
pusha
push
cmp
push
mov
add
sbb
popf
icebp
pop
dec
fwait
daa
fsubrp
sub
or
adc
and
dec
js
lods
ja
jae
add
sub
lock
repnz
iret
aam
fucomi
push
mov
sarb
int
insb
sbb
clc
std
sbb
in
or
aad
push
pop
inc
clc
mov
xchg
mov
inc
lods
jecxz
jbe
cld
fistl
inc
pop
xchg
leave
sub
in
je
out
fidivl
dec
hlt
xlat
loopne
pop
out
shrl
cmp
adc
inc
jns
adc
dec
clc
jmp
nop
ja
and
xchg
lret
inc
add
iret
rcll
in
outsb
sub
mov
fwait
xorb
hlt
xlat
sahf
es
je
jne
lods
cwtl
mov
test
out
lods
jns
mov
js
loope
jge
mov
push
xlat
mov
orl
adc
and
popf
pop
loopne
pop
mov
mov
lods
mov
mov
or
rcrl
or
addb
addr16
lahf
jmp
mov
pop
push
mov
jae
cmpsl
cmp
dec
mov
outsb
movsl
xchg
jno
inc
int
adc
push
setns
jae
arpl
pop
jne
sbb
push
fs
ret
xchg
sbb
lds
aaa
stos
cmp
and
adc
or
and
sub
push
add
mov
les
cmp
add
insl
daa
jnp,pn
mov
test
test
stos
insb
orl
jmp
inc
xlat
daa
sbb
mov
adc
pop
xor
out
test
outsl
sbb
out
cli
mov
cmp
lret
and
xchg
into
das
clc
pop
mov
scas
and
test
sbb
mov
pop
or
stos
ret
std
gs
pop
inc
fwait
mov
dec
daa
xchg
ljmp
mov
test
std
mov
fisttpl
cwtl
push
and
leave
and
lock
sub
cmc
dec
cli
out
ds
sbb
inc
and
dec
inc
or
fisttps
arpl
mov
cmp
loopne
insl
arpl
jmp
xchg
mov
pop
je
lret
jge
cli
mov
ja
cmp
cwtl
xchg
lods
pop
jne
mov
sbb
cli
push
xor
mov
adc
fcom
ret
adc
xchg
in
or
popa
add
sbb
enter
loop
es
and
loop,pt
sbbb
xor
adc
repnz
sbb
mov
push
aad
stos
sti
divl
mov
jmp
jns
dec
fsub
int
imul
push
inc
aad
sub
test
and
push
loop
imul
clc
repz
out
dec
cwtl
mov
ret
xor
adc
mov
rorl
cmpsb
sbb
dec
mull
insb
es
xor
pushf
movsb
jmp
call
mov
enter
add
imul
btc
sbb
repz
push
xchg
movl
pushl
test
jge
jo
icebp
outsl
add
or
ret
mov
push
stc
inc
fwait
sahf
in
dec
les
scas
xchg
ljmp
dec
xchg
insl
lahf
dec
mov
inc
lods
aam
cld
add
outsb
pop
add
jge
je
dec
xor
sub
pop
sbb
clc
dec
std
pushf
adc
pop
fscale
mov
cli
and
and
jp
out
push
cmp
aaa
in
mov
daa
and
cmp
dec
in
js
or
fs
or
fcomps
adc
mov
in
in
pop
mov
loop
sub
mov
cmpsb
test
push
pop
lds
mov
pusha
shl
sbb
out
jg
imul
add
repz
mov
or
jo
test
jmp
adc
fdivs
or
mov
outsl
inc
pop
ss
ret
push
pop
push
pop
xchg
cli
pop
push
jae
test
sub
jle
mov
mov
mov
adc
ret
cmp
loop
pop
inc
add
adc
dec
fs
mov
inc
mov
xor
ret
jp
inc
xchg
lock
js
or
mov
pusha
jge
jl
iret
inc
sbb
lret
shr
loop
insb
mov
std
dec
inc
sub
mov
mov
mov
lret
lcall
cmp
imul
arpl
mov
out
test
outsl
lods
dec
sub
add
fsubrl
std
adc
pop
sub
ljmp
add
call
push
frstor
mov
insb
jl
insb
jae
dec
mov
aaa
push
sbb
aas
into
loopne
enter
int3
sbb
adc
mov
mov
ss
jl
push
loop
daa
sub
cltd
jno
push
jmp
flds
fisubs
test
cltd
dec
aad
lods
cmp
fwait
aas
add
loope
pop
xorb
shll
pusha
dec
inc
add
sbb
sbb
push
mov
dec
int
jl
mov
pop
or
mov
add
mov
outsb
bound
xor
push
inc
jo
out
sbb
loop
inc
mov
cld
hlt
cmpl
mov
add
cmp
sbb
xchg
outsl
in
adc
dec
or
and
cmpsl
dec
jle
pushf
inc
pusha
loopne
not
push
pop
popf
push
push
mov
xchg
cli
rcrb
add
xor
mov
dec
xchg
cmp
dec
dec
scas
int
sub
fistpl
dec
sub
sbb
inc
xchg
add
test
xor
loopne
mov
mov
ja
inc
or
call
shr
subl
xor
inc
stos
xor
imul
outsl
push
stc
lret
out
call
ret
les
inc
lahf
out
in
loop
mov
popa
out
icebp
pop
inc
movsl
jmp
dec
clc
and
enter
push
shr
leave
cmc
or
in
push
test
or
aas
dec
dec
bound
adc
lock
mov
jg
dec
in
sub
and
int3
rcrb
repnz
or
dec
xlat
cmp
inc
mov
push
in
inc
adc
jae
pop
sti
sbb
inc
mov
xchg
add
jle
scas
cltd
mov
imul
sahf
mov
loope
call
pop
dec
pop
mov
scas
mov
out
push
pop
inc
pop
repnz
jle
xchg
pop
dec
ljmp
dec
shl
fiadds
mov
das
push
xchg
arpl
jae
popf
or
xchg
push
into
mov
nop
mov
imul
xchg
das
push
movsl
lret
je
xchg
xchg
popa
pop
xor
ret
icebp
push
add
js
inc
cli
mov
push
mov
mov
jno
push
fadds
xor
mov
cs
pop
test
jno
mov
test
mov
mov
iret
mov
loop
xchg
std
push
push
insb
and
rorb
pop
sahf
xor
aad
fstpl
stos
jae
pusha
mov
mov
pop
inc
dec
lret
xlat
js
or
iret
lcall
test
negl
popa
in
cltd
call
clc
call
mov
or
fistpl
and
popa
int3
push
adc
je
adc
out
shr
out
rcll
in
jecxz
cmp
lret
pop
add
out
jle
or
pop
mov
in
ret
mov
lahf
cmp
push
ret
adc
jae
xchg
subl
daa
mov
mov
mov
out
stos
loop
push
and
addr16
inc
js
or
int
inc
test
xchg
pop
lcall
pop
sbb
sahf
xchg
mov
mov
fst
mov
mov
fldt
jmp
call
push
call
mov
push
push
inc
les
mov
pusha
test
xor
fisttps
rep
mov
xchg
pop
lret
pop
sbb
arpl
push
arpl
sub
aas
aad
je
pop
in
aad
aas
inc
adc
mov
into
addr16
push
gs
sub
cwtl
dec
xchg
std
push
sbb
sbb
outsb
push
les
ds
dec
dec
in
xor
inc
cmp
xor
packuswb
jecxz
int
adc
or
int
mov
push
adc
scas
sahf
leave
inc
lahf
subb
repz
xor
add
add
cmpsb
dec
mov
xor
push
in
loope
iret
lcall
loopne
dec
aad
bound
lcall
in
sub
xchg
jne
in
pop
xchg
sahf
xchg
fcmovnb
inc
insb
dec
ja
mov
cmc
in
sarb
or
inc
sub
jno
cmc
push
test
cwtl
jle
mov
mov
loop
mov
ret
push
inc
xchg
xchg
out
mov
bound
lcall
xchg
scas
mov
mov
lds
sbb
ror
outsb
add
lret
jne
call
iret
insl
ja
sub
outsb
dec
push
inc
aaa
leave
dec
cmp
stos
xlat
sub
mov
xchg
fs
mov
cmpsb
imul
xor
xchg
or
push
lods
mov
mov
movsl
fadds
dec
cmc
cltd
sub
fisubs
pusha
pop
ds
sar
sbb
push
add
cwtl
xchg
shll
xchg
int3
cmp
test
fsubs
inc
pop
in
lock
out
push
sub
fnop
inc
lods
scas
or
sub
out
dec
dec
and
std
dec
movsl
out
mov
into
es
mov
and
jmp
sahf
sbb
outsl
xlat
repz
jecxz
push
mov
lods
jecxz
movsb
ret
cld
pop
cmp
outsb
fdivrp
xlat
inc
daa
jmp
pop
and
jne
jae
jmp
scas
and
lods
xor
testb
push
jnp
sub
nop
imul
ss
and
ret
pop
add
push
js
add
int3
sub
pop
rcrb
mov
shl
cltd
or
daa
iret
stos
jne
sbb
pop
xor
sbb
mov
sbb
sub
mov
xor
shll
es
fmull
rcrb
gs
inc
cmp
xor
mov
lea
and
cmp
cmpsl
scas
mov
movsl
ds
adc
sbb
adc
mov
popa
sub
dec
jno
ss
pushf
int3
int
bound
and
fnstcw
outsb
pop
mov
les
jae
push
clc
insb
loopne
movsb
sahf
adc
ja
sbb
test
adc
fwait
pushl
cltd
mov
fmuls
xchg
outsl
stos
lods
cmpb
out
out
aam
rclb
xchg
inc
jmp
outsb
iret
pusha
in
dec
lret
xchg
mov
sbb
pop
repnz
dec
sbb
daa
mov
imul
xchg
lahf
repz
in
mov
std
jge
mov
mov
mov
or
fsubrs
test
je
std
imull
mov
cld
push
pop
ja
dec
scas
and
iret
push
scas
mov
add
jne
cltd
lret
xchg
cltd
inc
dec
clc
or
add
push
adc
das
add
and
xor
int
xor
xor
push
int
adc
cld
adc
xor
arpl
lret
cmpsl
hlt
das
push
lahf
lret
std
sarb
or
int
bound
test
mov
lods
sub
push
dec
test
push
int
outsl
jnp
cmp
pop
pop
dec
je
dec
dec
aam
icebp
pop
or
out
rcr
fwait
add
dec
mov
pop
or
daa
and
mov
lea
sar
and
mov
insb
into
pushf
jb
jmp
mov
pop
ljmp
and
push
data16
fildl
shrl
imul
xchg
mov
nop
push
inc
dec
sub
inc
int3
notl
mov
lods
push
ljmp
mov
int
movsb
add
loopne
in
mov
sub
rcll
pop
sti
inc
jmp
shl
popa
jle
cmp
sub
dec
test
pop
not
jecxz
sbb
mov
test
enter
push
dec
and
cmp
cmpsb
std
aas
shlb
mov
leave
rcr
jl
push
sbb
xor
inc
jnp
rcll
in
movsl
mov
hlt
lcall
in
mov
mov
icebp
prefetcht2
imul
inc
pop
outsl
inc
cld
out
fwait
je
std
mov
lds
int
mov
mov
cmp
push
out
insl
pop
fnsave
cmpsl
adc
cmp
jle
or
testb
stos
push
addl
xor
dec
adc
fsubrl
or
dec
or
jne
and
xor
jmp
rol
shrl
cmp
mov
ds
into
dec
xchg
push
jmp
sub
mov
xchg
jbe
mov
cmpsb
fmull
and
into
testb
fildll
xor
cmp
dec
mov
cltd
mov
add
jnp
repz
push
xchg
pop
fidivs
xlat
sbb
cs
lret
xor
xlat
ds
cmpsb
movsb
pushf
inc
flds
mov
push
cli
das
fdiv
stc
pop
je
in
arpl
sbb
sarl
popl
push
xchg
and
movsl
dec
lret
inc
movsl
or
jbe
xchg
mov
fistpll
mov
adc
es
mov
insl
mov
pop
movl
push
xchg
jmp
pop
adcl
out
add
aam
andb
imul
pop
movsb
and
int
sbb
mov
rorl
cs
aaa
icebp
dec
ret
pop
xchg
movsl
xchg
orl
scas
fbstp
in
jl
popl
call
mov
xor
movsb
scas
cmc
push
mov
outsb
jecxz
jo
jg
sbb
ret
adc
pop
mov
loopne
clc
fdivl
repnz
test
out
jg
adc
fcmove
loope
mov
rol
fsubs
jnp
int
sahf
xor
lret
mov
cmp
ret
inc
clc
into
sahf
xchg
push
adc
fildl
and
sub
aaa
daa
movsl
lcall
sub
popa
les
sbb
push
dec
sbb
iret
je
je
xor
mul
mov
daa
into
in
sbb
or
cmp
dec
add
gs
aam
aas
jmp
out
cmp
shrb
adc
inc
shll
mov
nop
pop
or
jge
adc
jl
repz
loopne
popf
xlat
inc
pop
xor
jnp
mov
stc
cmp
jbe
cmpsb
mov
jle
inc
fwait
xlat
jns
sub
jp
sub
push
cmp
or
dec
je
and
jnp
test
cltd
sub
jbe
mov
movsb
and
int3
push
adc
test
repz
inc
xchg
lods
cmpsb
or
xor
jno
lock
in
add
jo
mov
mov
inc
bound
in
xchg
mov
in
ljmp
out
out
push
cmc
ds
inc
divl
or
xchg
dec
dec
push
decb
mov
scas
xchg
sub
in
mov
lods
mov
int3
movsl
sub
cmpl
add
add
sbb
sbb
and
mov
ljmp
and
pop
add
cld
dec
test
lahf
cmp
add
lds
insb
mov
inc
adc
pop
decb
mov
mov
loopne
test
adc
aas
shll
popf
lds
aas
push
notl
ror
fstl
bnd
xchg
inc
xchg
pop
or
cltd
popa
sbbb
testb
mov
mov
inc
fmull
mov
scas
xor
add
nop
mov
mov
ja
push
xchg
std
leave
adc
popf
in
adc
sub
mov
pop
fistpl
xchg
sub
neg
sub
int
leave
fwait
into
dec
mov
dec
jecxz
cmpsb
cmp
adc
jns
mov
push
and
mov
test
dec
cltd
sub
pop
test
jle
cmp
pop
inc
fisubs
mov
jl
mov
ss
int
test
mov
cld
fstl
incl
out
movsb
fwait
pusha
xchg
aas
in
lods
orl
mov
jmp
mov
lods
xchg
sar
out
fwait
test
subl
or
mov
idivl
and
mov
pop
adc
mov
dec
orl
cwtl
aad
pop
insb
cmp
mov
pop
adc
fsubl
add
lcall
ljmp
mov
mov
mov
xor
add
xchg
push
dec
bound
and
scas
aas
jo
int
int
aam
xchg
loope
push
int3
inc
insb
xchg
xchg
and
imul
enter
jns
stos
addr16
aaa
scas
outsl
mov
negl
xor
xchg
xchg
stc
aam
ja
cmp
sti
cmp
pop
pop
mov
push
cmp
fistl
mov
xchg
push
imul
scas
mov
ret
adc
or
sub
sbb
sub
scas
fdivrl
ror
mov
push
xchg
mov
adc
mov
dec
or
jnp
imul
popf
shll
add
adc
push
mov
xchg
sub
int3
mov
or
jp
mov
add
out
pop
cmp
mov
icebp
jp
mov
dec
push
mov
enter
sbb
lock
lock
js
push
mov
pop
lods
jae
stc
imul
xor
fldl
sbb
xor
icebp
or
and
cmp
dec
in
mov
in
xchg
push
xchg
ret
aad
cmp
mov
or
mov
jnp
cmp
leave
lahf
shrl
sbb
mov
fisttpl
cs
fnstsw
cmp
pushf
cmpsl
test
dec
push
lcall
int
or
orb
xchg
xchg
mov
adc
imulb
mov
arpl
hlt
imul
lods
enter
add
ret
sub
push
dec
push
add
jp
inc
les
int3
dec
mov
mov
or
xchg
push
pusha
sbbl
ret
enter
ret
adc
mov
jmp
je
dec
out
push
inc
sub
notrack
push
in
xor
add
dec
movsb
sbb
xchg
mov
push
add
mov
enter
or
js
out
sbb
sub
andb
push
pop
rsqrtps
and
mov
int3
xor
cwtl
out
inc
sti
cmc
outsb
leave
add
rcl
dec
iret
mov
cmp
out
inc
and
hlt
ja
test
pop
cmc
inc
clc
cmpl
cld
lcall
rorb
js
loop
sbb
xchg
xchg
push
sbb
aaa
add
and
mov
repnz
and
stos
mov
jecxz
idivl
mov
sub
fs
mov
or
adc
pusha
push
out
pushf
cmp
jg
in
cmc
hlt
fcoml
jecxz
or
lret
mov
lret
sbb
leave
jns
sub
fcmovnu
pop
ljmp
addb
incb
out
rclb
xchg
mov
and
mov
sbb
sbb
mov
es
add
sbb
mov
repnz
pop
divl
mov
sbb
lahf
push
xor
faddl
test
iret
mov
js
cmp
and
dec
push
mov
sub
mov
push
addr16
mov
faddl
jmp
das
mov
out
and
mov
int
jnp
push
repnz
xchg
popf
int
adc
sbb
ja
outsl
add
ja
mov
pop
ret
sbb
into
fisubl
bound
lahf
xor
inc
add
aas
hlt
andl
mov
push
leave
das
call
push
lods
jne
mov
mov
loopne
test
loopne
outsb
and
pop
sbb
icebp
icebp
dec
fistl
cmpsb
addr16
sbb
das
mov
mov
jle
dec
sub
push
stos
cwtl
cmp
imul
and
in
sub
inc
mov
pushf
push
mov
lea
inc
cmpsl
or
cmc
sub
ss
pop
ds
or
or
xor
stc
mov
mov
dec
lret
jecxz
dec
insl
cmp
clc
xchg
and
cmp
xor
enter
aaa
nop
cmp
aas
and
mov
inc
sub
dec
arpl
push
in
adc
loope
mov
xor
jb
dec
mov
icebp
push
lcall
pop
jge
inc
dec
jne
test
mov
test
adc
jge
lret
into
cmpsb
pop
enter
pop
lret
test
adc
or
enter
mov
je
mov
jp
jo
mov
xor
push
lcall
sub
mov
mov
jnp
xor
or
xor
outsb
movsl
ret
ja
adc
mov
and
push
dec
es
adc
jmp
shrl
sti
xchg
xor
es
imul
mov
sti
loopne
ss
and
enter
inc
lret
push
xchg
jae
ret
mov
push
clc
and
xchg
cmpsb
sub
sub
or
lcall
and
rcrl
test
les
push
in
lret
test
jns
push
fsubrl
mov
cmpsb
addb
fcomps
sub
push
push
icebp
push
andl
mov
xchg
test
push
jg
push
sarb
pop
aas
fbstp
sub
sar
pop
push
pop
dec
add
jnp
mov
imulb
cltd
fiadds
data16
lret
cmp
cmpsb
sub
mov
loopne
or
test
loopne
lods
pop
cmp
mov
xor
mov
cmpl
cmp
outsl
inc
scas
test
popf
jne
inc
clc
aaa
xor
sarb
gs
xor
jmp
lea
inc
nop
rorl
int
jno
pop
fbstp
testl
lods
adc
mov
cmp
xor
fwait
xchg
pop
sub
enter
or
lock
out
pop
fwait
add
ficoms
or
fisttps
aam
adc
dec
adc
xor
xor
test
sub
sbb
xchg
ss
inc
cwtl
mov
dec
sbb
addr16
xchg
sbb
sub
repnz
hlt
cmp
mov
das
shl
mov
sti
cmp
mov
ficoms
jno
add
cmpsl
into
cmp
test
int
sub
sbb
popf
mov
push
lods
das
cmp
cmc
sub
xchg
push
mov
xchg
out
or
cmpsb
mov
mov
imul
movsb
add
repnz
push
jnp
inc
and
inc
dec
push
mov
popa
mov
adc
insb
iret
sub
jmp
jp
xor
imul
arpl
pop
repz
stos
pop
mov
lods
mov
fadds
fwait
xlat
dec
sub
xchg
pop
lock
sbbl
ret
roll
lcall
add
loope
or
push
mov
xor
mov
pop
dec
pop
jbe
add
rcr
jno
cmp
pusha
add
push
cmp
cmc
add
fcomps
mov
outsl
xchg
push
je
mov
stos
pop
loopne
sti
cmpsb
mov
lcall
js
jnp
clc
test
aad
ret
out
jbe
dec
and
pop
sub
test
add
mov
jmp
jecxz,pt
gs
jmp
adc
inc
jno
ret
aaa
or
mov
xchg
jo
xor
dec
xchg
icebp
ljmp
clc
mov
sbb
jmp
push
push
pop
setg
jge
out
stos
adc
pop
rcrb
mov
mov
std
xchg
or
cmp
inc
cld
mov
jle
ja
cmp
jo
xchg
mov
sub
sub
cwtl
stos
cs
adc
out
push
mov
pop
stc
dec
fdivl
sub
dec
ret
ret
sub
enter
xchg
jl
addr16
xor
sahf
push
jae
iret
sub
out
jae
xchg
or
popf
mov
fistpll
inc
test
mov
decl
dec
cmc
lods
pop
enter
or
in
jnp
cmp
sbb
jae
inc
lea
inc
xchg
inc
insb
mov
push
add
out
pop
sub
sahf
aaa
jno
loopne
insl
push
push
ret
push
xchg
push
jg
sub
add
pusha
and
ss
stos
jb
inc
test
outsb
mov
sub
xor
pusha
repz
mov
xor
test
movsb
and
mov
aas
mov
adc
jecxz
int3
xchg
addr16
cmp
sub
sti
xchg
pop
sbb
mov
int
scas
push
xchg
lds
fs
cs
or
test
enter
int
mov
cli
push
pop
popf
jo
adc
pop
push
dec
xchg
cli
negl
dec
jecxz
push
into
fiaddl
cli
adcl
frstor
test
cmpsb
dec
inc
stc
inc
insl
jns
push
roll
movsb
lods
add
imul
sbb
add
add
jmp
mov
dec
test
pusha
jmp
mov
add
sbb
sbb
fmull
nop
sti
in
pop
jecxz
inc
shll
mov
jmp
inc
test
incl
mov
jp
ds
outsb
adc
call
xchg
mov
mov
loope
loop
mov
add
movsl
jne
push
push
call
insb
fidivrl
scas
mov
fs
jne
or
adc
js
iret
pop
inc
test
adc
dec
popf
pop
fs
sbb
movsl
sub
decb
cmp
icebp
dec
test
lahf
add
repnz
dec
bound
add
and
js,pt
int3
or
into
jecxz
xor
jne
int
pop
test
dec
pop
test
enter
xchg
mov
daa
stc
sahf
or
adc
imul
cmp
inc
pop
add
dec
dec
xchg
shl
jb
pop
enterw
pop
jae
outsl
jae
int
sub
jle
push
dec
dec
sbb
jg
jp
scas
into
and
gs
mov
and
dec
push
pop
inc
xchg
mov
cmp
xorl
and
xchg
das
shll
or
jne
jle
mov
mov
ss
inc
xchg
push
clc
inc
mov
xchg
jmp
cmp
rorl
fldt
gs
aad
push
xor
cmpb
fiadds
lods
enter
jmp
mov
js
mulb
or
mov
push
pop
mov
fisubrl
movb
xor
pop
xchg
xchg
in
inc
outsl
fs
shrl
push
mov
pop
fadds
mov
xor
ret
rcrb
xor
jne
jae
cmpsl
leave
jns
inc
or
adc
and
push
cwtl
aam
mov
fistps
arpl
xor
scas
fwait
mov
icebp
icebp
rorl
sub
push
shll
lods
dec
push
arpl
jmp
mov
push
jae
iret
xlat
stc
outsl
fnstcw
xlat
push
iret
imul
mov
ret
sbb
rcll
loop
mov
out
jnp
lret
pop
adc
xchg
jg
lahf
or
mov
test
cmp
out
and
cltd
xchg
out
sbb
shrl
xchg
mov
in
sub
shl
sbb
xor
cli
xchg
xchg
xchg
and
mov
mov
test
cmc
jno
fldt
sbb
cmpsl
lods
fsubrl
push
cltd
add
in
mov
add
repz
xchg
pop
icebp
pusha
xor
jle
ret
fildll
or
mov
cmp
mov
adc
adc
sbb
in
sbb
dec
cmp
xchg
shrb
pop
sub
mov
pop
jl
add
jo
mov
xor
mov
sbb
test
in
cmp
imul
int
arpl
cs
or
dec
inc
stc
mov
xchg
mov
fiaddl
or
mov
in
out
mov
andl
and
mov
jmp
sub
stc
xlat
and
mov
sub
mov
stos
neg
adc
push
jge
imul
test
or
pop
dec
out
adc
lea
rorl
test
mov
push
mov
andl
xchg
inc
test
and
lea
xchg
mov
pop
shlb
inc
jns
pop
loopne
outsb
das
sbb
xchg
push
out
jnp
xor
in
dec
adc
mov
mov
and
stos
xor
adc
ret
dec
push
mov
stc
pop
add
aas
pop
push
stos
out
lahf
xchg
orl
and
jbe
ds
cltd
iret
mov
jnp
xchg
call
cmpsb
inc
js
xchg
enter
mov
dec
movsb
fdivrs
pop
sub
popa
jae
lret
adc
loop
cmp
push
mov
inc
fmul
shll
dec
lds
cmp
lods
lods
add
dec
push
xor
mov
cmpb
add
xlat
cmpsb
arpl
fwait
dec
cmp
mov
mov
fcoml
jge
or
inc
loopne
cmc
shrb
push
outsl
mov
dec
adc
sub
xor
popa
jbe
xchg
mov
jnp
and
shll
scas
push
xor
movsb
fimuls
pop
rcrb
sub
lret
xchg
lds
mull
xchg
ja
lcall
loopne
xchg
mov
in
push
cmpsb
testl
lds
xor
mov
mov
mov
jmp
insb
mov
xchg
addb
push
adc
lods
mov
in
add
shll
pop
mov
dec
bound
test
jne
cmc
cmpsb
mov
sub
out
aaa
inc
dec
int3
xchg
insb
pop
js
inc
push
cmp
mov
or
adc
mov
or
cmp
outsb
imul
or
fldt
xor
add
ljmp
mov
aaa
xchg
sub
scas
dec
out
mov
popa
popf
popf
add
and
or
out
mov
push
aam
in
cmp
dec
and
insb
mov
push
clc
fwait
mov
xchg
mov
add
insl
cmpl
jne
xchg
inc
sahf
mov
pusha
fwait
cmp
cmp
int3
push
pop
stc
pop
aas
sub
in
jge
call
jle
scas
xchg
adc
add
push
or
test
fst
arpl
js
push
hlt
xor
js
dec
mov
jne
in
lock
pop
sub
movsb
sbb
test
inc
jbe
fdivrp
cmc
jns
sub
outsb
adc
mov
xor
push
cs
int
imul
pop
and
out
ja
lock
add
repz
xchg
vpmovmskb
std
jbe
jo
stos
jns
pop
lods
out
jg
lods
and
adc
inc
outsl
test
adc
fsubrs
inc
sbb
movsl
out
jb
mov
insb
jmp
sbb
jp
push
fcmovne
loopne
ficomps
sub
cmp
mov
mov
ljmp
cmp
mov
ljmp
push
enter
adcl
fisubs
out
inc
sbb
sbb
aam
xchg
xchg
je
inc
out
into
jbe
push
lret
mov
mov
lret
out
jmp
cli
xchg
add
cmp
addr16
imul
scas
mov
mov
mov
int
xor
pop
popa
adc
or
push
jle
mov
sbb
jb
fidivs
adc
jns
stos
movsb
ljmp
sti
clc
or
adc
xor
cmpsl
out
jl
mov
data16
xor
xor
es
add
nop
sbb
insb
aam
jb
shr
sbb
mov
pop
and
jo
rorl
stos
cmp
inc
addr16
iret
push
push
mov
int3
pop
cmp
bound
mov
lock
push
int
add
mov
and
in
adc
xchg
xchg
bound
jmp
and
adc
cmp
sbb
pop
push
lods
fnstcw
push
and
jmp
pushf
test
inc
roll
add
je
fnstsw
lods
stos
cmp
cmp
addr16
je
sub
iret
jbe
sbb
call
xor
fsubs
scas
dec
cmp
mov
mov
dec
leave
imul
sub
ss
dec
lahf
xor
or
add
jns
into
shll
insl
fs
mov
xor
mov
cmp
mov
scas
cmp
xor
sbb
aad
add
adc
aad
movsl
mov
pop
insl
mov
lret
dec
scas
cmpsb
cmpsb
jmp
lds
outsb
fildl
mov
int3
inc
in
push
jno
adc
dec
jne
inc
push
adc
incl
jbe
adc
jge
outsb
xchg
repz
xchg
mov
push
testb
stos
xchg
bound
lret
sub
inc
gs
frstor
es
sub
les
out
cmc
insl
shll
xlat
scas
cltd
sarb
rorb
int3
lods
jmp
imul
ror
xchg
stc
mov
stos
push
fisubrs
inc
sahf
sub
aad
loopne
js
scas
data16
adc
mov
rcr
mov
jbe
addr16
sub
call
clc
ret
ret
ja
outsl
add
inc
int3
lods
xchg
mov
push
mov
imul
cmp
jle
push
stos
insl
dec
in
ljmp
push
add
push
out
push
aad
stc
and
mov
js
cmpsl
jo
int
push
inc
add
jmp
xor
cmp
jl
inc
jbe
in
inc
adc
hlt
add
xor
pop
pop
fbstp
jnp
lret
mov
fsubl
enter
adc
in
jle
jns
fistps
out
fstps
ds
mov
push
cmp
fisubs
out
pop
das
out
inc
dec
sub
mov
xchg
adc
out
fxch
aaa
stc
sbb
mov
mov
mov
shr
cwtl
xchg
inc
gs
xor
dec
mov
and
sbb
mov
es
lds
shl
imul
decb
add
mov
arpl
cmp
je
pop
mov
out
mov
xchg
lods
dec
xor
shll
mov
dec
and
mov
repz
out
out
mov
in
out
xor
andb
stc
jbe
pop
pop
ljmp
jbe
enter
mov
mov
inc
mov
add
cli
jg
popf
loope
fdivrl
sti
push
sbbl
sub
dec
inc
mov
xor
dec
test
jl
mov
sbb
aaa
stc
mov
je
mov
push
mov
pop
hlt
xrelease
adc
aad
push
scas
jne
out
pop
jmp
jns
scas
push
dec
popa
or
xchg
jge
fwait
out
mov
ja
xchg
and
addr16
in
inc
push
test
dec
mov
jp
xor
push
loopne
lods
or
jp
mov
xlat
popl
repz
inc
xor
push
arpl
adc
push
pusha
mov
inc
daa
or
mov
addl
push
inc
sub
hlt
xor
xchg
mov
add
imul
and
loop
mov
push
add
sbb
sbb
jnp
cmp
enter
rclb
loop
loope
lret
and
pop
push
push
or
jle
pop
mov
cltd
out
pusha
dec
add
jnp
cvttps2pi
rorl
mov
in
sbb
repnz
inc
fidivrs
push
mov
sub
fists
xor
or
cld
shl
dec
adc
adc
repnz
jae
inc
mov
in
push
data16
cmp
mov
xor
jb
push
cmpsl
inc
scas
cmp
fnstenv
and
sbb
jl
cli
push
pop
jns
dec
cmp
mov
dec
adc
lcall
and
xchg
inc
cmp
sub
xor
cmp
mov
mov
fstl
adc
ja
mov
cmc
push
sub
testb
sti
pop
popf
std
out
aas
cmp
sub
jnp
shl
pop
fwait
xchg
push
pop
jnp
xchg
mov
shl
xor
bound
mov
divl
aad
dec
and
sub
fnstsw
mov
cmp
push
jnp
jno
jnp
fs
mov
lcall
enter
cmp
lahf
jb
xchg
jmp
fisttps
jecxz
jl
add
mov
jge
mov
add
sbb
mov
insb
loope
pusha
push
pusha
fs
rorb
or
lret
gs
cltd
cwtl
sbb
icebp
push
push
xchg
mov
data16
popa
loop
sub
mov
jecxz
xchg
mov
push
inc
lods
hlt
inc
repz
scas
shll
sbb
fimull
mov
lcall
orb
popf
sbb
lcall
into
movb
mov
adc
xor
sbb
jbe
xchg
imul
dec
fstpt
sbb
repnz
sbb
fucomi
add
insb
repnz
popf
sub
cwtl
mov
dec
les
std
add
rcr
push
inc
or
and
push
cmp
enter
pop
arpl
mov
stos
mov
xchg
sti
fs
mov
xchg
lods
jmp
xchg
loope
movsb
mov
dec
cmc
pop
rcl
je
and
repz
xchg
dec
and
sbb
dec
into
loopne
or
test
inc
bound
mov
mov
pop
mov
jge
roll
call
aaa
sub
mov
cltd
inc
ret
push
das
arpl
sti
jnp
sbb
adc
lds
rorl
fldl
push
dec
jo
jnp
cmp
add
insl
ret
fadd
test
fildll
js
jp
cmc
notl
add
xchg
adc
mov
mov
into
and
xchg
xlat
xor
cmp
or
inc
add
add
or
add
outsb
push
dec
jo
nop
jns
push
sbb
inc
out
mov
lods
or
and
cmp
and
insl
fwait
outsb
in
data16
mov
lret
mov
aad
fbld
sub
js
aam
scas
cmp
mov
sub
std
nop
test
cmp
lods
sub
pop
add
push
iret
and
sbbl
mov
ljmp
pop
pop
clc
fsubr
out
xchg
xchg
loopne
stos
mov
lock
andb
cmpsl
jge
push
lret
jge
or
mov
lcall
insl
movsl
sub
lea
xor
loope
cmp
pop
out
push
inc
cmp
xlat
inc
and
cmp
dec
fstpt
mov
push
test
stos
pushf
sahf
xchg
push
pop
inc
es
mov
mov
xor
or
dec
out
out
js
shrb
add
xor
push
jl
loopne
push
cmp
cmc
mov
or
test
in
sub
inc
push
filds
test
or
pop
mov
mov
jp
pop
cmp
ss
clc
mov
sbb
je
test
mov
pop
in
call
cmp
pop
loop
imul
pop
icebp
adc
sbb
outsl
mov
jae
into
jo
movsl
fmuls
mov
call
leave
xchg
or
mov
pop
lcall
push
and
lcall
test
add
loop
jge
fcmovb
jo
xchg
insb
xor
jne
inc
push
icebp
sub
sbb
pop
jo
andb
aam
cltd
mov
and
ss
repz
inc
dec
sbb
cmpsl
idivb
and
xor
popf
jmp
push
enter
cmp
cltd
pop
shlb
arpl
test
push
sbb
sar
ljmpw
xor
int
jo
leave
xchg
stc
aas
jmp
cmp
sbb
or
hlt
cmp
mov
push
jp
dec
cmpsl
icebp
push
cmpsl
cwtl
pop
into
pop
mov
adc
adc
addr16
cmc
in
out
pop
cltd
push
or
lret
js
xchg
pop
inc
ficoml
movsl
xchg
loop
mov
daa
cs
iret
fsubrs
call
test
jb
mov
lea
lea
pop
aas
mov
test
add
adcl
incb
repz
lret
mov
dec
sbb
push
mov
mov
ja
jo
mov
stos
movsb
push
xchg
cwtl
or
loope
fidivrl
adc
push
rcr
sahf
lcall
dec
hlt
lahf
scas
enter
scas
inc
dec
rcll
adc
cltd
xor
xchg
dec
push
pop
pop
les
mov
fmull
adc
push
int3
loop
cs
jg
sub
push
or
pusha
pop
inc
push
xchg
in
add
and
cmp
clc
imul
adc
addr16
add
dec
jg
fildll
or
jecxz
xchg
xchg
pop
in
leave
adc
int
mov
sbb
arpl
inc
shll
and
insb
incb
addb
push
pop
rcl
icebp
cmp
xor
int3
insl
arpl
xor
hlt
mov
jg
je
jecxz
jmp
cmp
pop
sbb
xor
fcomps
jnp
arpl
fisubrl
sbb
mov
ds
jno
ja
fldenv
inc
inc
dec
push
xchg
enter
adc
push
movsb
sub
shll
inc
pop
decl
scas
dec
inc
int
and
xor
inc
xchg
or
mov
adc
push
mov
push
sbb
stc
dec
jge
mov
lcall
fbld
or
xchg
push
xchg
stos
push
pop
frstor
and
xchg
scas
enter
and
and
cmp
enter
mov
test
mov
cmpsl
test
cmp
and
jb
sbb
scas
pminub
xor
add
sub
or
aam
mov
xor
jmp
xor
ds
orl
pop
stc
inc
add
arpl
roll
dec
and
repz
addb
add
data16
jbe
repz
push
sbb
jge
sti
pop
or
fwait
xor
push
in
or
daa
cld
in
rcr
adc
es
jnp
sub
xlat
inc
ficompl
jae
fsubrl
jge
push
std
loop
rolb
pop
mov
or
out
fisubrs
push
jl
mov
inc
scas
mov
push
dec
hlt
jmp
push
roll
jnp
rcll
cwtl
popf
addr16
mov
cmpsl
mov
pop
xchg
xchg
mov
sbbb
jbe
icebp
cltd
xor
sarl
test
iret
jl
roll
sbb
mov
out
lcall
xor
loopne
aam
mov
mov
outsl
and
dec
sub
ljmp
xchg
xchg
mov
or
fs
out
shlb
ljmp
push
test
out
out
adc
dec
jne
mov
mov
fidivrs
add
mov
ljmp
jle
movsb
loopne
mov
shlb
inc
repnz
ret
jns
cmp
sbb
lret
dec
insb
dec
jne
in
xchg
lock
popf
ja
dec
push
lret
mov
cmpsb
sub
cmp
cmovbe
inc
push
cmpsl
test
sub
xchg
sbb
lahf
sti
or
and
mov
arpl
push
pop
lret
mov
cwtl
sbb
inc
adc
xchg
mov
flds
push
ds
movsb
out
sub
jns
enter
imul
mov
nop
jle
fs
nop
cmpsl
aas
imul
in
push
jmp
aas
stos
push
jg
test
nop
test
sub
xor
es
call
xchg
fs
test
jnp
pop
mov
clc
jmp
inc
fmul
mov
dec
lds
cmove
inc
outsb
fnstenv
and
xchg
out
shll
mov
mov
dec
inc
lods
pop
or
mov
adc
add
cmp
aam
jbe
add
ljmp
mov
fsubrl
es
dec
mov
stos
in
inc
sti
cmp
movb
add
add
push
mov
adc
cltd
xchg
js
test
jge
mov
add
sub
sub
dec
rcrb
xchg
mov
loope
pop
add
fsubs
sahf
jae
jmp
sbb
push
lret
addb
lea
test
ljmp
xor
xchg
dec
mull
enter
cltd
popa
outsl
push
cwtl
iret
fcmovnb
mov
dec
sahf
jg
ss
mov
inc
jg
cltd
xor
imul
lahf
xor
lret
out
loop
push
mov
xchg
or
into
and
daa
in
or
jbe
mov
dec
jnp
and
inc
insl
iret
mov
xor
or
out
repz
call
mov
popf
mov
push
jmp
movsl
out
xchg
out
sub
pop
test
push
jne
and
push
fidivrl
into
inc
cmp
pop
ret
dec
out
mov
add
adc
sahf
insb
jbe
sub
idivl
pop
leave
aaa
jmp
dec
jmp
xchg
hlt
mov
pop
cwtl
mov
pop
cmp
ja
add
jle
ds
aam
iret
mov
add
std
mov
popf
mov
es
aam
in
mov
xchg
inc
jl
add
mov
cmpsb
std
sbb
xor
sbb
sbb
cmp
mov
xchg
xor
shlw
cwtl
push
dec
sbb
inc
xor
movsl
sub
repnz
push
cmpsb
push
hlt
push
jmp
outsl
imul
push
fldcw
adc
scas
in
lret
mov
push
in
ficoml
imul
bound
push
je
push
mov
aad
mov
dec
cmp
fsts
mov
jno
dec
push
and
sarb
aas
dec
int
in
stos
lods
adcb
xor
lcall
dec
sbb
xchg
jmp
add
push
and
push
shll
out
add
pcmpeqw
jmp
std
popf
mov
mov
pop
imul
clc
jno
sub
jge
lcall
call
jbe
hlt
and
cmp
pop
ret
pop
dec
lcall
and
aam
test
mov
and
out
pushf
xor
faddl
push
cmp
nopl
push
xor
mov
sbb
fsubrs
int3
add
fwait
imul
popf
scas
cvtdq2ps
xchg
or
enter
jge
cmp
gs
fists
shll
pop
and
cwtl
pop
mov
sbb
nop
jae
sub
in
xor
pop
ret
loope
scas
repz
sub
ret
sbb
fwait
push
push
add
mov
test
popf
ret
xchg
inc
std
xor
pop
call
loopne
sbb
pop
out
movsl
push
aad
dec
pushf
orl
xchg
xchg
cwtl
sahf
sbb
push
sbb
xchg
ja
imul
mov
ror
or
xchg
sahf
push
aam
dec
or
test
cs
or
inc
jb
scas
movsl
pushf
pop
stos
mov
test
xchg
push
je
pop
jl
aas
mov
push
std
lea
repnz
lahf
mov
loop
xchg
cltd
xchg
dec
fisubl
xchg
xchg
out
fstpt
mov
mov
gs
repz
test
ds
insl
ficompl
fwait
jecxz
sbb
push
push
int
mov
push
push
push
mov
jmp
int3
scas
xchg
clc
xor
ret
ret
sbb
pusha
add
shl
mov
fisttps
arpl
pop
fdivrs
movsbl
push
ds
jmp
iret
iret
sub
idivl
dec
cwtl
jle
bound
xchg
aad
push
ja
push
pop
ja
pop
fnstenv
adc
enter
lret
xor
rorb
pop
mov
pop
cmpb
push
pusha
dec
xchg
fisubrs
call
inc
or
int3
dec
pop
cmp
xor
sub
mov
and
lods
inc
adc
sub
aas
enter
bound
lahf
inc
xchg
lods
lahf
and
add
mov
adc
xchg
scas
inc
lahf
test
lods
and
mov
and
or
inc
sbb
mov
and
dec
jno
insl
pop
mov
add
xchg
cmpsb
or
inc
and
pop
mov
push
scas
push
scas
js
frstor
test
mov
mov
fstps
or
pop
pop
mov
addr16
pop
div
jp
pop
pop
pop
inc
sub
inc
movsl
inc
mov
pop
addr16
lea
adc
mov
mov
lret
or
jae
xchg
lret
je
mov
fisubl
gs
dec
jp
xlat
adc
pop
push
cltd
pop
cmp
fnstenv
outsb
pop
movsb
or
push
in
sbb
jae
or
lods
movsb
pop
test
xlat
xor
cmp
mov
addl
out
mov
cmpsb
sub
jbe
jo
xchg
push
sub
push
test
ds
cs
lods
fucom
push
jns
jmp
xlat
movsl
movsb
movsb
mov
xor
daa
pusha
push
or
shrb
mov
pop
mov
sub
repnz
jo
jp
roll
decl
jnp
add
mov
in
subl
fcoml
cmp
sub
jecxz
int3
jns
sbb
addb
test
notl
mov
sbb
enter
adc
pop
das
cmp
xor
mov
push
jns
or
or
call
pushf
sub
into
add
in
pop
dec
lret
lahf
jns
into
fidivrs
xchg
xchg
sub
or
push
movl
pop
cld
in
ret
cmpsb
roll
adc
stos
cld
sbb
imul
ljmp
lods
dec
push
jg
pop
in
das
hlt
data16
xlat
push
mov
add
xchg
aad
cmp
jg
xchg
mov
jmp
aaa
cmp
lret
cmp
xor
or
ja
movsl
pop
mov
and
test
fdivs
out
cwtl
xor
ret
jmp
es
aad
jl
sbb
aaa
cmp
mov
in
add
hlt
lahf
pop
ss
push
jne
rcll
cmpsl
repnz
mov
xchg
rcrl
out
outsb
push
ss
inc
pop
xchg
daa
mov
lcall
jae
xchg
cmp
xchg
sub
sbb
sarb
jecxz
sbb
scas
jg
gs
scas
sub
pushf
pop
add
jnp
fbld
mov
out
std
push
out
cs
notl
mov
mov
cmp
jg
and
repz
sub
pusha
dec
ret
mov
fstps
push
xchg
outsl
cmp
cwtl
dec
sahf
pusha
sarb
insb
jnp
push
sbb
push
filds
pushf
xchg
je
dec
xor
outsl
mov
xor
mov
pushf
mov
lret
pushf
nop
stc
adc
pushf
mov
mov
inc
pop
add
out
push
mov
dec
mov
sub
into
pop
xor
fdivrl
sbb
rolb
shrl
je
jb
add
push
xor
sub
inc
je
xchg
sbb
es
mov
or
jo
pop
jp
pop
xchg
outsb
lcall
and
cld
ret
cwtl
inc
jns
jnp
sahf
sti
mov
lods
and
dec
add
sub
pushl
add
push
ja
ljmp
popa
pop
into
cmpsl
and
pop
sbb
inc
lret
mov
insl
loop
mov
mov
cmp
cmp
sbb
inc
es
hlt
mov
adc
dec
fidivrl
js
leave
movsl
push
inc
mov
mov
fs
je
popf
dec
daa
dec
adc
outsw
jns
push
jp
aad
mulb
push
in
cmp
push
xor
jg
mov
sub
dec
shrb
add
cld
add
pop
icebp
pop
add
mov
xchg
xchg
in
cmp
jno
je
inc
out
mov
insl
push
pop
movsb
or
push
or
jle
and
xor
stc
sub
je
bound
imul
sti
lods
pop
and
add
jbe
adc
dec
lods
fwait
testl
shll
ljmp
mov
and
add
cmp
fwait
jo
sbb
push
ja
popa
test
jnp
push
or
xchg
sbb
shlb
fwait
out
inc
inc
idivl
inc
scas
mov
mov
mov
cmp
xchg
sub
das
lcall
js
ret
sub
jmp
das
cli
cmp
std
sbb
or
xchg
cmp
dec
xchg
mov
push
test
mov
imul
hlt
mov
lods
mov
mov
pop
pop
leave
jmp
icebp
mov
sub
xor
mov
movsb
add
out
jmp
xchg
loope
aad
mov
lock
mov
lock
daa
mov
push
sahf
ljmp
sub
mov
jg
inc
add
stos
adc
rcrb
leave
or
jge
fldl
fsts
dec
loop
and
sbb
cmc
lret
dec
je
cwtl
dec
mov
jle
fisubs
dec
mov
xchg
and
pop
das
add
fdivl
sbb
mov
jle
inc
push
sbb
loopne
pop
pop
inc
pop
pop
movsb
pop
and
in
push
stos
jbe
adc
fimull
cmp
pop
outsl
addl
fs
ret
stos
xor
sbb
pushf
cmpb
pop
mov
js
in
pop
adc
cs
jl
insb
cmp
fidivs
lret
push
pop
shrb
xchg
inc
xchg
scas
dec
notl
sub
add
call
movsb
or
push
outsl
adc
or
mov
or
mov
test
or
lahf
aad
loopne
bnd
add
sub
int3
lods
call
mov
or
add
add
cli
jno
les
inc
leave
add
pop
pop
xchg
icebp
loop
cmp
jne
lret
jno
sub
nop
testl
xor
enter
push
cmp
xor
pushf
sahf
xchg
adc
les
mov
and
and
daa
mov
insl
xchg
add
inc
xchg
movsb
mov
loope
push
insl
into
jp
fcmovnbe
xor
xchg
xor
and
sub
and
aam
int
mul
jbe
jmp
insl
sbb
xchg
jne
cmpl
xor
dec
mulb
push
xor
scas
mov
xchg
inc
pop
sub
ror
inc
mov
mov
fsubrs
test
mov
loope
icebp
inc
sub
decb
xlat
inc
shl
outsl
das
inc
stos
lods
dec
adcl
test
stos
into
xchg
sbb
fpatan
jne
push
push
in
mov
jmp
sbbb
lret
sahf
lret
mov
scas
or
dec
mov
xorl
sbb
pop
push
mov
cmp
mov
xor
lods
pop
mov
test
cmpsb
xor
ret
in
adc
adc
push
bound
push
inc
call
js
fcmovne
jl
jne
xchg
add
inc
leave
ficompl
shrb
add
data16
dec
push
add
xor
push
rcl
loope
mov
cmpsl
fwait
sti
pop
mov
inc
pop
ljmp
jp
outsl
outsl
dec
cmc
call
fs
shll
jge
adc
or
jb
pusha
aam
or
in
sbb
adc
daa
sub
mov
loop
lods
jbe
pop
push
movb
or
adcl
cmp
roll
xor
in
mov
pop
xchg
inc
data16
fldenv
fsubp
incl
adc
sub
adc
xchg
stos
or
testb
and
imul
inc
sub
cmp
sar
dec
in
pushf
out
inc
push
jg
cld
push
ds
fnsave
out
pushf
out
xlat
jge
or
leave
xchg
jb
cltd
adc
in
fimuls
push
outsl
xchg
jl
mov
fsts
loope
hlt
movsb
dec
and
or
jge
sbb
ret
arpl
mov
push
inc
cmp
or
dec
clc
lcall
ja
insb
sarb
mov
sub
mov
xor
loope
jecxz
je
iret
outsb
fldlg2
xor
add
faddp
stc
push
in
dec
shll
adc
or
push
imul
mov
cmp
out
mov
mov
push
mov
mov
arpl
jle
push
mov
xor
push
pop
xchg
data16
push
aas
mov
fwait
push
inc
push
jle,pt
fcom
push
xchg
mov
int3
mov
push
jl
pop
or
inc
and
fldl
adc
inc
int
int
out
add
sbb
fs
dec
sub
mov
or
mov
dec
ds
insb
cmp
outsl
fnstenv
dec
cmp
outsb
xor
push
rcrb
xor
mov
jg
addl
ret
push
jg
jl
out
aam
mov
or
add
es
cmpsl
xchg
pop
test
cmp
and
xchg
nop
int3
cmp
js
push
stos
jle
das
jg
adc
ret
sbb
mov
fcomps
cmc
mov
bound
ss
mov
push
pop
out
sbb
lods
cmc
inc
iret
xchg
movsl
mov
and
adc
fbld
xor
and
mov
adc
scas
rcrl
popf
push
cltd
adc
movsb
adc
dec
mov
inc
std
push
jl
jg
mul
ss
adc
mov
jg
jns
push
iret
adcb
imulb
sub
test
push
out
pop
icebp
mov
pop
sbb
test
mov
icebp
push
jmp
imul
leave
leave
imul
aam
pop
and
rorl
fsubp
adc
adc
dec
inc
stos
out
ret
imul
out
inc
inc
push
jmp
xchg
jne
fs
stos
pop
cmp
lcall
test
stos
inc
mov
sbb
dec
ja
repz
mov
push
leave
repz
leave
cltd
mov
int3
mov
lock
scas
sti
cwtl
and
add
aas
jle
jle
xor
xchg
sub
sub
mov
cmp
call
or
add
xor
call
loopne
lods
pop
idivb
sbb
lods
add
dec
sti
in
rorb
mov
frstor
inc
push
dec
pop
into
mov
xlat
sub
loop
push
fstpt
scas
and
xor
rorb
adc
loopne
jb
testl
xlat
int3
push
into
mov
push
push
push
sbb
adc
adc
adc
add
jp
test
stc
fisubrl
out
call
lcall
das
adc
dec
es
out
test
dec
rorb
cwtl
imul
pop
call
std
and
mov
lea
js
xor
int
jp
adc
ss
movl
stc
or
rorl
clc
and
pop
jns
mov
jg
imul
loopne
push
in
jbe
mov
insl
int3
sub
jl
and
pop
cmp
cmp
scas
mov
mov
out
bound
add
cmpsl
imul
cli
cmpsb
ljmp
fstpl
jle
int
loop
das
dec
mov
test
std
mov
in
out
data16
xchg
pushl
xor
inc
sti
pushf
add
xor
adc
jl
pushf
out
add
mov
add
lret
sarl
in
dec
adc
bound
jae
sbb
mov
xor
and
jo
inc
mov
push
mov
incb
sbb
inc
adc
xchg
adc
jne
push
imul
inc
lock
addb
inc
and
adc
test
jo
cmp
sbb
push
sub
jno
stos
aas
hlt
jge
xchg
hlt
shr
jmp
mov
mov
dec
andl
lcall
jge
scas
sub
gs
inc
inc
fwait
cmp
xor
nop
mov
jb
pop
mov
aas
jl
mov
mov
lea
push
inc
pop
daa
mov
mov
pop
mov
inc
inc
call
sbb
push
mov
cmpsb
iret
scas
lds
lods
cmp
xchg
stos
pop
scas
aam
popa
adc
gs
mov
add
xchg
leave
fisttpll
mov
mov
das
loop
dec
int
add
xchg
cmc
adc
mov
mov
repnz
test
add
and
aaa
sbb
iret
add
or
xor
je
insl
lock
or
sahf
jle
aaa
xchg
xchg
jo
call
orb
mov
outsl
lds
push
cmp
push
add
js
stos
cmp
xchg
dec
and
sbb
mov
mov
fsub
inc
sub
mov
into
stc
mov
lds
fsubrl
clc
add
or
jns,pt
iret
fwait
mov
arpl
inc
test
inc
pop
fnstsw
test
push
jl
stos
xchg
adc
aad
jecxz
sti
lahf
lea
mov
mov
fisubrl
imul
fs
push
outsb
sub
lods
out
lods
lcall
mov
popf
jb
sub
cmpb
and
inc
shr
pop
imul
ja
push
mov
cmp
pop
xor
cmp
js
lea
jbe
mov
out
sarb
imul
push
mov
fcmovnu
pop
fistps
mov
jbe
mov
mov
sbb
lahf
test
jno
lret
add
sub
mov
inc
sub
es
cmp
lods
push
pop
cld
aaa
and
cmp
adc
push
jnp
movsb
cmp
pushf
xchg
fstps
aaa
fstps
pushl
lcall
scas
ss
scas
incl
jb
out
cmp
jnp
ss
jmp
and
xor
das
and
sbb
shrb
lea
fistps
cwtl
fisttpll
dec
cli
pop
jg
jbe
sub
push
ds
loop
and
out
mov
shlb
and
inc
mov
inc
pushf
mov
dec
nop
adc
scas
pop
das
sahf
test
dec
mov
push
pusha
push
out
mov
int3
insb
mov
mov
lds
mov
sub
out
aad
shlb
fwait
mov
int
xchg
adc
push
cmpsb
xor
cld
fnsave
sub
stc
inc
stos
shrl
aam
xlat
adc
dec
insb
lahf
js
repz
xchg
in
cltd
and
mov
push
in
sbb
add
push
movsb
test
lock
fisttpl
pop
fbld
dec
xchg
arpl
sbb
jbe
out
or
movsb
lds
add
loopne
dec
stos
pop
cmpsb
xchg
sti
std
push
xchg
loope
xchg
mov
test
push
push
cmpb
das
mov
idivb
aad
pop
pusha
sbbl
jb
aad
xchg
imul
dec
mov
stos
and
sahf
sub
xchg
cli
jl
xchg
mov
or
xchg
adc
cltd
clc
cmpsb
jge
xor
mov
sub
in
pop
or
dec
mov
jnp,pt
enter
mov
add
out
testb
add
jns
adc
jl
pop
mov
jle
jo
xchg
jecxz
add
fstpt
outsb
and
jg
popf
je
mov
sub
cmp
pop
movl
adc
insb
push
out
imulb
icebp
xlat
aaa
inc
lds
jno
pop
rcll
pop
mov
ror
jb
mov
xchg
push
pop
cmc
cmp
movsl
outsb
fcmovnb
imul
dec
pop
popf
test
jl,pt
dec
and
xchg
mov
cmp
imul
in
push
shrb
xor
adcb
cmp
jb
pop
stos
in
xchg
dec
push
testb
sahf
rorl
test
push
jb
fnstcw
movsb
mov
xchg
divl
cmc
shlb
scas
fsubrp
orb
sbb
add
test
xchg
xrelease
push
popa
and
fdivs
mov
push
pinsrw
sub
cmpsl
cli
push
jns
push
cmp
xorl
push
xchg
mov
lret
divb
bound
lods
inc
mov
push
push
in
jne
jne
leave
iret
mov
cmp
push
xlat
pop
int
fs
cmp
and
add
mov
dec
hlt
mov
pop
je
or
pop
xchg
push
inc
mov
enter
pop
shlb
sahf
push
dec
pop
cmp
push
ljmp
adc
add
sub
mov
scas
cmp
dec
std
nop
dec
outsl
imull
test
out
add
idivb
pushf
xchg
jg
clc
fwait
jp
icebp
cmp
xor
orb
cwtl
add
test
cmp
ljmp
aaa
lea
jo
mov
cltd
cmpsb
xlat
sub
test
cwtl
and
pushf
subb
pop
mov
push
ss
repnz
adc
dec
inc
dec
sbb
test
jns
into
cmpsb
pop
mov
sbb
aas
icebp
std
mov
shlb
add
dec
cmpsb
jmp
sub
cmc
add
and
pop
mull
movsl
xchg
cmpsl
popf
lret
pop
xchg
call
xchg
sub
sbb
call
pop
fldl
xor
dec
out
sbb
xor
xor
inc
and
mov
and
ljmp
insl
sbbb
pop
pop
mov
xchg
mov
movb
rcrb
int3
in
xor
outsl
pop
mov
xor
cmp
dec
pop
cmp
pop
dec
jp
out
std
and
add
cmpsl
inc
movsb
push
popa
icebp
repz
push
aam
arpl
dec
lret
sbb
inc
in
stos
jmp
push
pusha
xchg
jnp
inc
mov
jae
dec
adc
movsb
pop
xor
jb
cmp
xlat
mov
pop
and
fidivs
xlat
out
pushf
out
mov
or
out
ss
icebp
rclb
and
fsubs
mov
or
ficoml
repnz
xor
out
xor
push
sub
pop
fdivl
mov
jo
mov
call
dec
testb
sub
xchg
es
mov
std
mov
dec
xor
adc
sarb
jg
mov
mov
jge
push
lcall
jmp
add
cmp
dec
sbb
push
push
movsb
jne
inc
mov
adcb
mov
adc
and
lret
fmuls
jmp
dec
sub
or
daa
jbe
lods
jae
or
jns
or
jp
movsl
mov
fistpl
inc
aas
lcall
add
cmpsb
cmpsl
popf
in
leave
push
and
ds
insb
cmc
testl
movsb
dec
icebp
and
jle
mov
pushf
cmpl
xchg
push
add
andl
jb
jnp
pushf
in
add
mov
pop
jge
cli
push
enter
add
mov
sbb
scas
mov
out
mov
sub
popl
popa
jae
scas
push
pushf
mov
std
mov
adc
ja
repz
pop
adc
and
sti
cwtl
xchg
cltd
and
mov
push
cmpsb
cld
ljmp
or
lods
xchg
rorl
inc
cmpsl
int3
add
xor
rclb
dec
lret
cltd
ret
adc
movsb
push
xchg
mov
add
cmp
add
xchg
inc
ss
push
add
clc
pop
push
xchg
test
push
mov
cmp
sbb
xor
retw
cmp
dec
mov
xlat
daa
jl
cwtl
pop
test
push
in
pop
sbb
cmp
mov
jp
xchg
fdivl
lret
cmp
add
pop
fldenv
mov
mov
mov
xor
repnz
inc
and
out
sub
jno
repnz
out
dec
dec
push
push
xchg
mov
in
and
cwtl
sub
mov
jne
push
das
test
sub
jo
inc
fcmovne
push
xor
mov
bound
mov
xchg
adc
lahf
test
std
aas
adc
push
int
sub
push
sarb
cld
adc
and
test
jmp
adc
add
add
add
mov
add
addb
add
add
add
data16
add
add
addb
add
add
add
push
add
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
adc
add
add
add
inc
add
add
add
sbb
add
xor
add
inc
and
add
add
add
and
add
add
add
cld
and
add
and
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
push
loop
push
jne
and
sti
arpl
jbe
bound
stos
adc
push
dec
insl
sub
outsb
sti
inc
pop
lret
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
push
or
fsubl
push
adc
xor
icebp
pop
test
mov
movsb
adc
and
ret
nop
add
test
and
arpl
std
ja
cltd
loope
adc
test
sub
add
sbb
insb
inc
minps
in
dec
adc
xor
cld
pop
add
sub
outsl
das
fisubrs
decl
jbe
add
lea
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
outsl
sbb
rep
jle
pop
sbb
add
enter
push
pop
sub
lcall
sbb
xor
inc
pause
cwtl
add
lea
dec
push
inc
inc
xchg
aaa
or
mov
call
mov
xchg
fld
sub
or
push
add
dec
lock
leave
cwtl
aas
push
mov
cmp
push
outsb
add
xchg
stos
sbb
or
cmp
pop
push
xorb
loope
pop
jg
push
lea
push
aas
pop
push
mov
dec
es
sbb
enter
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
xor
dec
pop
inc
add
test
mov
out
nop
or
ret
aaa
push
inc
pop
adc
cmp
pop
pop
pop
pop
ret
xor
adc
cld
dec
mov
sub
loopne
push
add
lret
push
call
mov
ret
rorl
push
adc
push
sti
scas
rol
push
fs
xor
orl
add
in
iret
lods
push
xor
scas
leave
jo
test
sbb
cmp
je
icebp
ja
cmp
rsqrtps
repz
sub
shrb
fisubrl
loope
or
pop
in
mov
decb
js
mov
fists
filds
add
in
push
test
mov
and
sti
clc
shr
or
incb
add
pop
dec
jecxz
loope
mov
jbe
jae
shll
adc
add
add
ret
jmp
cmpsl
and
xor
call
push
push
cmp
leave
pop
add
or
nop
xor
rorb
inc
adc
fisttpll
adc
xchg
test
insb
fsubrs
mov
iret
jge
dec
push
inc
imul
inc
dec
je
dec
or
xlat
jne
sub
jbe
dec
or
rclb
rcrl
push
addr16
into
add
pop
roll
pop
pop
dec
mov
aam
cmp
ret
add
pushw
push
loopne
cmpsl
incb
dec
add
push
aad
imul
pop
std
sti
ljmp
inc
mov
je
loopne
popa
push
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
mov
outsb
inc
push
adc
enter
test
cltd
and
add
mov
inc
mov
hlt
push
leave
dec
or
dec
jb
sbb
push
addr16
in
rolb
lret
jae
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
fstpl
in
in
pop
inc
mov
sbb
gs
cmp
scas
pop
fwait
movsl
mov
cwtl
pop
mov
and
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
mov
insl
jae
lret
lods
lret
in
sbb
or
subl
test
testb
xchg
out
bound
ja
shlb
pop
test
ret
xor
jmp
dec
arpl
jmp
mov
ficoml
test
jmp
testb
mov
jle
mov
jg
cmp
and
jmp
push
add
iretw
adcl
mov
and
imul
mov
in
xchg
push
sub
mov
lods
popf
and
push
outsl
jnp
repz
xor
icebp
mov
shr
nop
adc
dec
dec
or
adc
mov
rorl
imul
insl
pop
sbb
sbb
lock
inc
cmp
add
lea
push
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
and
inc
test
sub
shlb
mov
and
movsb
out
icebp
inc
jo
insb
imul
jb
mov
adc
out
and
jne
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
or
int
dec
int
mov
fwait
push
xor
push
dec
fidivrs
popa
addr16
inc
outsl
js
xorl
js
data16
imul
fwait
insb
add
inc
js
je
xchg
movsb
jo
insb
inc
shrb
popa
outsb
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
add
mov
cltd
lcall
jge
push
add
insl
cmp
and
jmp
push
cmp
dec
dec
xor
jno
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
je
add
sub
add
sub
add
addr16
add
and
add
and
add
add
shlb
add
and
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
