jg
mov
mov
xor
mov
mov
add
or
push
mov
addl
mov
sub
add
jbe
call
push
adc
call
or
divb
call
pop
pop
ret
push
mov
push
xor
idiv
jle
add
test
add
shlb
or
jne
mov
push
sub
lret
test
add
push
add
inc
mov
adc
inc
or
or
inc
divb
push
cmp
add
call
mov
test
cltd
insl
jbe
pop
adc
adc
cwtl
jae
fbstp
push
iret
mov
xor
cmp
pop
cmp
movsb
xchg
outsb
add
cmp
xlat
push
push
into
jmp
fucomi
pop
fldt
loopne
mov
mov
js
add
sub
cmp
popf
add
lock
push
push
rorb
push
push
pushl
inc
xchg
and
xor
jmp
lea
in
ljmp
mov
sbb
pop
pop
pop
ret
mov
incb
push
mov
shrl
push
imul
test
aas
push
push
lea
xor
shr
addr16
mov
sti
fisttpl
jmp
lock
add
and
cld
xor
add
add
inc
cmp
jl
add
cmp
vpshufhw
pop
pop
arpl
add
xchg
sub
in
out
mov
std
cwtl
sahf
add
push
aaa
fimull
jmp
or
sub
call
mov
aas
cwtl
clc
pop
sbb
jae
rep
das
cld
outsb
jmp
stos
mov
add
sbb
lea
enter
inc
pop
test
inc
inc
cmp
lea
or
cld
decl
add
dec
mov
cmpl
sub
sub
mov
pop
and
in
imulb
popf
roll
xor
icebp
mov
mov
add
xor
add
mov
imul
stos
push
incb
or
push
jb
mov
inc
and
cmp
mov
mov
cmp
jb
mov
push
test
mov
test
je
dec
js
loopne
xor
fcmovbe
pop
sbb
dec
sbb
mov
push
test
jle
test
add
xor
cmp
sub
shl
push
pop
push
or
std
lea
cmpsb
cltd
idiv
imul
sbb
push
fidivs
mov
mov
sub
pop
ljmp
add
xor
arpl
jle
and
imul
imul
add
sti
cld
push
add
push
das
sub
jge
xor
ret
and
decl
jne
sub
pop
mov
ret
js
test
pushl
lcall
mov
dec
adc
icebp
cmpl
je
dec
push
ret
fimull
neg
inc
sub
insb
das
mov
cmp
jbe
adc
movsl
sbb
xchg
je
and
je
ss
add
pop
sub
cs
mov
cltd
or
inc
cmp
mov
sbb
sbb
xchg
ret
fs
dec
testl
xor
add
sub
js
mov
xchg
lret
in
or
lds
gs
popa
enter
fldt
add
outsl
int3
int
xlat
sub
iret
pop
rorb
shll
mov
xchg
lret
shlb
shll
aam
aad
add
cmp
pop
fdivs
fldcw
fidivl
fisttpl
loopne
add
pop
loop
jecxz
add
inc
out
out
call
lcall
in
pop
in
aaa
lock
jmp
cmpsb
jmp
repnz
repz
cmc
sbb
add
insl
fwait
scas
divl
clc
stc
dec
add
pop
sti
js
mov
call
mov
call
insl
out
inc
daa
inc
call
dec
dec
mov
or
lock
daa
loopne
or
add
lock
sub
push
cmpl
dec
inc
pushf
movl
sbb
sbb
pop
sub
pop
je
sarl
and
and
out
or
psadbw
jo
mov
ret
or
push
in
pushf
dec
sbb
mov
mov
or
jge
in
xchg
sbb
or
sarl
push
pop
mov
cli
fldt
sub
divb
xor
inc
cmp
or
sbb
and
xchg
pop
xor
out
orl
ss
push
leave
idivb
dec
movsl
cld
push
iret
aad
mov
adc
mov
xor
push
in
out
sub
scas
lea
jp
ficompl
ljmp
lea
mov
cmp
jne
andl
cld
lret
mov
inc
sbb
pop
dec
outsl
insb
jg
mov
cmp
adc
clc
inc
push
pop
dec
aaa
lds
gs
jb
push
or
fisubl
clc
mov
xor
add
pop
sbb
lods
out
or
stc
xor
andb
es
push
inc
sbb
cmp
pop
and
cmp
jmp
or
pop
or
jle
call
push
jl
or
jl
cmp
jg
movswl
add
shl
fnstsw
add
cmp
jl
cmp
jg
adc
adc
mov
inc
mov
or
sub
push
sub
add
or
sub
add
dec
inc
inc
and
or
pop
push
jl
enter
pop
mov
xchg
pop
mov
dec
fldcw
ds
das
inc
cs
loop
mov
negb
sub
mov
mov
out
lea
nop
les
std
into
push
push
inc
lods
sbb
cmp
or
cmp
dec
hlt
je
push
push
xchg
push
repz
stc
sbbl
inc
mov
mov
mov
push
test
cmp
je
psubb
dec
out
adc
push
hlt
adc
lret
adc
popf
mov
lret
pop
mov
or
dec
insb
fisttpl
add
ds
add
add
add
lret
push
and
icebp
mov
pop
pop
cmp
int3
sub
inc
pop
sbb
mov
xor
fsubrl
hlt
jmp
test
movsb
scas
push
in
jp
jp
popf
mov
push
push
xor
ja
shll
mov
addb
mov
pop
push
push
rol
outsb
adc
jmp
or
lods
icebp
cwtl
cmp
das
mov
cmc
adc
in
test
faddl
out
mov
mov
mov
lcall
or
or
clc
popf
xor
out
call
push
fisubrl
sbb
sub
pusha
mov
sub
push
adc
cld
push
sub
jbe
mov
rcrb
add
sub
int
jge
stos
stos
and
loopne
add
mov
mov
mull
push
add
jmp
push
sar
stc
mov
xor
lods
mov
cwtl
mov
dec
add
xchg
xchg
xchg
in
in
xchg
adc
sti
lock
or
sar
push
insb
fwait
or
and
push
outsb
add
fsubrs
cmp
xor
push
adc
jbe
xchg
nop
mov
out
jge
cld
test
stos
jmp
mov
push
add
sub
call
pop
mov
jmp
add
dec
pop
sbb
sarl
xchg
sbb
fidivrs
mov
fldt
pop
and
movsb
and
out
fnstsw
div
sbb
xor
lea
xorl
ja,pn
mov
call
pop
add
push
push
and
sbb
cmp
sub
or
mov
testb
data16
push
ljmp
push
out
mov
inc
jmp
push
or
fimuls
jne
add
inc
pushf
repz
loope
add
dec
jmp
push
cmpsb
pop
or
xchg
dec
xchg
ud2
jmp
loope
std
push
or
mov
cmc
repz
push
adc
xor
ret
adc
sub
inc
sbb
xor
stc
das
fdivrl
and
sub
push
or
pop
movsl
push
and
jl
sub
fucomip
mov
insl
aaa
jnp
adcb
in
pop
insb
rol
sbb
inc
inc
lahf
push
jns
and
mov
fnsave
pushf
push
jmp
add
adc
or
sub
enter
arpl
das
hlt
push
arpl
lea
xchg
cmpsb
jmp
mov
lcall
lahf
add
in
inc
andl
pop
shll
sbb
ss
xor
dec
add
sbb
sbb
adc
add
pop
inc
cmp
pop
stos
push
mov
mov
arpl
xchg
popf
adc
add
mov
xchg
ret
mov
movsb
pop
sbb
pop
loopne
sbb
rep
cwtl
popa
outsl
mov
mov
xor
or
mov
loopne
add
mov
out
clc
push
mov
and
int
test
bound
xchg
mov
jmp
mov
aam
push
cmp
mov
fwait
add
fchs
psubusw
rorl
jmp
adc
sbbb
adc
push
or
mov
das
or
shl
add
adc
sbb
lods
adc
lea
push
sbb
inc
lcall
add
dec
das
cs
cmp
movsl
lock
call
movsb
mov
roll
cwtl
stos
add
idivl
cmp
shr
mov
into
push
push
fmuls
sbb
adc
adc
jne
jl
mov
fsubl
or
xchg
lds
out
roll
xchg
mov
pop
popa
mov
or
push
mov
rorb
sbb
sub
pusha
fucomi
add
sbb
pop
or
cltd
cmp
imul
mov
icebp
std
xchg
lock
jge
cmc
adc
xor
xor
xchg
lcall
test
mov
test
cmp
push
nop
mov
xchg
sti
push
jae
int3
pushf
add
ja
or
shlb
add
jns
xor
inc
mov
inc
push
add
pop
push
push
and
loop
xchg
sarl
cmpsl
push
movsl
cld
mov
jb
jae
jl
fsubp
fcmovnbe
xor
shll
mov
dec
mov
mov
mov
lcall
hlt
xchg
and
or
fcoms
cs
insb
cli
lret
pushl
jecxz
xchg
or
or
add
inc
popf
adc
sbb
pop
mov
lock
push
fcoms
pushl
or
pushl
lds
pop
inc
and
and
mov
cltd
jo
sub
hlt
jge
test
dec
insb
daa
mov
mov
arpl
mov
aaa
inc
xchg
xchg
xchg
xchg
gs
mov
insl
adc
scas
mov
inc
mov
mov
push
pand
int
or
fsubrs
pop
fldl
push
inc
fadds
xlat
ret
pop
and
adc
xlat
cmpsb
lahf
cmp
insb
in
inc
faddl
or
push
out
jno
clc
andl
nop
push
ds
sahf
hlt
mov
or
sub
ds
mov
cmpsb
ljmp
inc
push
test
xchg
std
inc
in
adc
adc
adc
jae
cmp
jne
outsb
mov
sbb
or
jbe
and
adc
sub
sbb
and
test
ret
push
hlt
mov
insl
push
lea
test
fildll
mov
push
pop
and
js
rcr
mov
je
xor
push
inc
int
adc
call
movb
sbb
sbb
cmp
mov
stc
cvtpi2ps
pusha
lea
stc
std
push
test
idivl
scas
ret
add
or
mov
inc
les
ret
les
and
fistpl
lcall
rorb
lock
xchg
add
pop
sbbl
add
dec
mov
add
xchg
por
inc
or
sahf
dec
rclb
ret
ds
imul
pop
rorb
shr
or
jno
addl
pop
sbb
xor
arpl
fcomp
push
inc
mov
adc
call
xchg
test
jo
lea
push
jle
push
out
push
insb
fcomps
xchg
loope
sahf
inc
cmp
sti
es
gs
push
lea
push
push
mov
das
cmp
into
mov
mov
je
ja
js
push
pop
add
push
sbb
xor
movsb
push
bound
xor
pop
aam
lret
imul
cmp
adc
ror
roll
pop
repz
xor
dec
mov
adc
mov
outsb
xchg
add
mov
sub
sub
fstps
fcomps
jbe
dec
add
add
sub
in
lret
fdivrl
sub
jmp
push
cwtl
filds
lods
jg
and
push
adc
or
movsb
ss
int
mov
bound
push
fbstp
xchg
inc
xor
shrl
sbb
xor
adc
and
arpl
and
xor
popa
or
jne
or
cmp
sub
xchg
cmp
jne
push
mov
fiaddl
faddl
pusha
cs
cmp
or
add
xchg
jl
je
adc
jle
imul
int3
xor
add
push
outsl
rcll
dec
js
or
pop
mov
ss
test
xchg
les
xchg
orl
pusha
or
mov
xchg
add
adc
ss
or
shr
mov
rol
adc
test
jmp
loope
sbb
in
sbb
cmp
jmp
pusha
hlt
std
daa
lea
or
push
pusha
or
add
adc
divl
cmpb
cwtl
movsl
pop
cmp
xchg
or
sub
push
add
fdivs
loop
inc
roll
push
rorb
push
push
inc
loopne
dec
push
push
or
push
outsb
or
adc
gs
in
std
fimull
cmp
xchg
jp
sub
xchg
and
sbb
mov
pushf
sbb
xor
mov
cwtl
inc
push
push
test
stos
mov
pop
es
int3
js
arpl
dec
enter
jne
ja
mov
lret
push
xor
mov
sub
push
inc
sbb
imul
sbb
or
or
fmuls
add
dec
pop
cmp
push
cmp
test
adc
dec
lods
sti
pusha
pop
std
cld
push
or
insb
mov
push
or
insb
push
xor
lock
pusha
mov
in
mov
add
insb
dec
add
xchg
add
imul
xchg
push
pop
or
xor
rolb
adc
icebp
adc
test
stos
gs
aam
icebp
and
xor
jle
leave
jne
push
adc
je
adc
in
in
cmp
mov
ljmp
push
test
push
lret
out
mov
cmpsb
dec
call
leave
mov
stos
inc
push
in
repz
push
push
fildll
cmp
jne
or
aaa
sub
lret
push
push
push
cmpsb
dec
lock
mov
pop
mov
pop
aam
sbb
gs
rorb
lea
push
lds
mov
rcrb
sbb
or
lea
and
pop
mov
and
mov
loopne
xor
cmp
sbb
in
rcrb
aas
and
push
mov
enter
shr
pop
fadds
ja
inc
mov
cmpsb
add
push
mov
or
jns
lods
decl
sbb
ja
out
or
sub
out
jge
mov
jge
cmp
mov
xchg
adc
mov
lea
lea
adc
xchg
or
cmpsb
rep
xchg
fstpt
cmpl
outsb
mov
pop
inc
pop
xor
cs
xchg
jge
ret
push
sub
sub
loop
fstpt
or
cmp
mov
pop
pop
pop
mov
lock
push
ljmp
mov
mov
mov
push
and
cmp
jle
mov
es
inc
jg
dec
leave
test
outsl
xchg
sub
jge
shrb
imulb
sub
add
cmp
inc
ss
jle
shlb
lea
ja
into
sub
push
mov
mov
inc
test
std
movsl
adc
adc
jge
clc
push
shll
popa
push
adc
sti
pushf
sbb
ret
add
mov
ss
or
push
enter
push
pusha
das
or
xchg
mov
mov
push
mov
hlt
idivl
enter
jle
push
ljmp
clc
and
adc
sti
pop
cmp
and
clc
jg
xor
dec
testb
cmpsl
enter
and
push
push
jp
hlt
bound
push
fucomi
sbb
jl
adc
sub
sbb
inc
cmp
insl
adc
mov
pop
inc
add
dec
mov
add
shll
adc
ret
jbe
or
jmp
or
ljmp
loopne
jl
push
jg
jmp
push
mov
adc
inc
add
inc
add
sahf
cmp
jmp
std
or
dec
ret
pop
aad
fisubrs
icebp
pushl
andl
sbb
jns
or
clc
or
jnp
pcmpgtd
hlt
adc
aaa
cmp
add
mov
divl
out
jmp
adc
nop
fwait
ja
jmp
into
imul
std
and
mov
mov
shr
add
mov
lods
sub
clc
xor
lea
add
pop
mov
sahf
xchg
mov
sbb
lock
roll
mov
sub
jno
sbb
or
icebp
pop
call
or
cltd
add
sub
dec
mov
add
xor
in
mov
pop
inc
cwtl
not
clc
sti
cs
insl
lret
add
call
call
test
pop
movsl
push
ret
and
sbb
push
and
mull
xchg
lock
jmp
mov
out
jbe
sbb
mov
add
mov
fdivp
cld
mov
or
add
aaa
cmp
adc
adc
mov
dec
mov
mov
or
je
pop
aaa
andps
std
jo
into
bound
adc
jge
aas
fnsave
pop
and
jmp
ss
orps
xor
push
push
sbb
fs
fmuls
xor
ja
jb
mov
fwait
or
adc
imul
jae
mov
lcall
lahf
lahf
adc
emms
aas
test
cmp
xor
ret
sahf
sub
jo
pop
stos
push
inc
out
lcall
in
out
mov
push
int
fistl
outsl
or
mull
add
sub
mov
push
das
mov
pop
test
add
fcmovnu
or
cmp
and
pop
jle
adc
inc
sbbl
add
add
mov
rorb
rcl
inc
jne
sti
scas
inc
and
add
jmp
ds
loopne
add
shlb
lret
rorl
mov
or
incl
dec
subb
hlt
leave
cmp
jb
neg
and
mov
sub
mov
inc
dec
loopne
enter
cmc
insl
and
push
adc
loop
jmp
cltd
scas
sub
push
and
pop
dec
inc
mov
test
push
push
jg
imul
jbe
cmp
jb
pop
adc
push
sub
jmp
stc
or
rep
jmp
mov
out
loop
sbb
pop
test
xor
and
enter
jmp
nop
pop
dec
loopne
or
xor
fistpl
mov
mov
mov
add
fstps
pop
int3
pop
xchg
popf
lea
and
xchg
add
inc
and
sbb
xchg
imul
je
mov
inc
mov
inc
in
call
dec
in
in
lock
hlt
or
clc
cld
into
cmp
add
add
or
lock
add
lock
fcomps
nop
popf
or
adc
adc
or
fildl
addr16
cld
jg
jecxz
mov
or
push
ss
add
out
stc
out
pop
stc
pushf
sub
sub
push
mov
add
outsl
add
add
jne
dec
push
mov
dec
pop
lea
add
jge
orb
subb
daa
and
mov
out
scas
inc
pop
or
pop
add
or
adc
js
shll
sub
inc
aad
lcall
sbb
adc
imul
imul
or
pusha
add
ss
inc
xchg
mov
xchg
push
xchg
in
inc
add
and
dec
add
mov
lea
jmp
lea
cmpb
test
add
cmp
dec
push
jne
mov
mov
add
xor
ret
mov
add
xorl
lcall
loopne
cltd
push
fcomps
xor
int
jns
mov
mov
push
add
in
cld
pop
sub
xor
mov
fsubl
inc
lods
adc
jmp
mov
xchg
addr16
fld
pop
outsb
imul
xor
add
xchg
test
push
cmp
data16
or
or
mov
jl
icebp
or
push
push
mov
aaa
inc
add
jbe
pop
adc
testl
push
push
mov
test
icebp
cs
adc
ret
fstpl
push
xor
inc
arpl
inc
sbb
mov
jo
outsl
add
and
sub
mov
aaa
push
dec
mov
in
outsb
call
mov
sub
push
or
into
sar
ret
popl
loop
mov
jno
mov
push
or
push
xlat
add
sbb
mov
or
pop
icebp
mov
dec
add
imul
aaa
adc
add
xor
xor
lcall
sbbl
lods
and
mov
orb
inc
loope
lods
xor
and
or
mov
shll
jbe
lcall
rcr
fisubrl
test
pop
pop
inc
or
xor
pop
mov
ret
daa
pushf
mov
sbb
jo
fimuls
ss
fimuls
mov
push
or
or
sbb
fbstp
jmp
leave
jmp
pop
push
aas
popa
sbb
pop
push
xchg
mov
push
sti
inc
sbb
sti
mov
jbe
jge
lea
aaa
jno
and
cmpl
cmp
cmp
cs
inc
mov
inc
cmp
je
sub
cmp
sbb
incl
adc
xchg
push
cmp
je
sbb
sbb
push
cld
push
mov
arpl
aas
ljmp
push
pushf
push
inc
mov
out
jmp
pop
cmp
je
sub
subl
aas
or
jmp
inc
imul
xor
xchg
cmp
inc
xchg
sub
out
es
in
inc
decb
std
cld
add
push
adc
enter
and
loopne
jg
cmp
pop
pop
add
mov
or
je
cmp
cmp
mov
pushf
adc
test
sti
inc
sbb
or
lock
pop
nop
les
pusha
loope
jb
cmp
popa
mov
js
cwtl
add
popl
and
pusha
cmp
inc
and
push
sbb
lcall
cmp
test
and
dec
insb
mov
add
shrl
aas
cmp
or
leave
push
scas
inc
mov
inc
or
or
push
jbe
roll
je
dec
cld
xor
push
push
leave
inc
ja
out
mov
jno
lahf
dec
mov
sbb
leave
cmp
je
mov
or
aam
in
jne
aam
data16
mov
push
jne
lea
mov
imull
adc
lret
aam
fisttps
add
sbb
std
push
in
mov
shlb
mov
lea
imul
or
mov
out
add
push
mov
ret
xlat
jne
aam
jg
decl
jg
or
jp
add
or
sbb
jmp
mov
add
outsb
mov
call
mov
bound
pop
add
push
lret
fmuls
pop
sub
push
sbb
lock
jmp
sub
cmp
mov
or
mov
and
add
jae
inc
loopne
movl
mov
loopne
or
jne
jg
dec
loopne
decl
lock
mov
andb
or
in
push
dec
lret
pop
mov
or
or
push
jp
fnstcw
add
test
loope
xchg
jne
jmp
pop
push
je
inc
mov
lods
sub
addr16
add
icebp
outsb
mov
sbb
int3
mov
ret
cltd
push
cmp
test
xchg
rorb
sbb
lds
insl
cli
sub
ret
mov
scas
stos
push
push
ret
cmp
push
adc
push
mov
or
cmp
sbb
sbbb
ss
rclb
push
or
popa
mov
jne
mov
test
inc
aas
mov
cmpl
movzbl
push
pop
add
insl
push
aaa
clc
push
xor
fadds
xor
add
rclb
mov
je
popa
mov
jne
rdpmc
fildl
push
push
inc
cmp
ud2
mov
mov
pop
pop
sbbl
inc
ret
jne
shlb
add
fcomp
pop
sahf
stc
mov
pop
pop
ret
push
sbb
orb
cs
or
sub
mov
fdivrs
push
push
add
cmp
icebp
xor
ret
sub
sbb
daa
mov
add
mov
add
xchg
add
ret
mov
les
imul
divl
push
adc
mov
cmpsb
addl
cwtl
mov
inc
aaa
adc
jle
pop
repnz
or
lcall
mov
push
inc
inc
dec
je
rcrb
mov
shll
mov
push
add
cmp
cmp
call
or
jne
enter
repz
fdivrl
mov
and
out
lea
mov
ljmp
pop
cli
mov
fldt
mov
cmp
jne
arpl
cmp
jne
push
adc
mov
and
int
fsubrl
pushf
fistpl
sbb
cs
push
inc
stos
push
push
repnz
add
ds
je
adc
cmpsl
adc
ss
cmp
sbb
adc
call
or
push
test
out
add
sbb
movsl
decl
pop
andl
push
lea
cmp
jb
add
or
fidivrs
in
pop
push
push
mov
pop
jne
jp
xchg
adc
cmp
jae
push
inc
jmp
mov
push
cmp
adc
adc
jle
push
inc
outsb
sub
jae
and
call
mov
mov
push
andb
xchg
ja
cmp
jns
lods
lcall
mov
js
int3
rorb
icebp
mov
and
shl
fstpl
or
call
xor
loopne
push
stc
js
cld
push
imul
std
pop
cmc
dec
mov
or
mov
or
pop
jbe
pop
mov
jg
sub
movsb
imul
mov
gs
add
mov
aaa
loop
inc
aam
or
pushf
pop
jbe
push
or
mov
jmp
cmovne
loopne
mov
dec
cli
jbe
icebp
pop
loope
mov
jne
push
xchg
imul
xor
xor
lret
popa
fldcw
popf
sub
rcrb
dec
cmp
add
hlt
cmpl
cmp
or
ljmp
sbb
scas
idivb
pop
lea
es
movl
and
cmpl
insb
add
mov
add
ss
or
rcll
add
xor
rclb
std
mov
add
sub
cmp
or
add
sbb
push
insb
cmp
jne
inc
popf
jne
mov
push
dec
or
mov
dec
pop
fs
push
in
xor
dec
adc
sti
push
fsubs
sbb
lods
sub
subb
mov
sub
pop
je
inc
cmp
cmpb
mov
jmp
repnz
and
xchg
mov
sbb
add
ljmp
lret
cld
push
pop
inc
loope
in
dec
rolb
jno
clc
add
mov
pushf
fnsave
hlt
je
xor
inc
mov
add
push
test
scas
pop
mov
jecxz
or
mov
stos
ret
gs
scas
pusha
lds
clc
dec
dec
add
std
add
andl
push
mov
mov
add
fistpl
testl
mov
stos
cmp
jae
inc
fidivs
call
and
pop
int
jmp
fiaddl
fwait
push
mov
inc
adc
iret
cld
sub
inc
std
or
out
jnp
hlt
mov
inc
cltd
mov
movsl
push
dec
test
or
jne
out
sbb
xor
add
mov
test
pop
or
jle
cli
add
sarb
jbe
aas
pop
mov
dec
or
cli
and
xchg
jae
mov
pop
dec
add
fcoms
mov
mov
sub
dec
loopne
ds
jnp
push
pushf
mov
pop
add
mov
jmp
pop
push
gs
add
out
mov
add
pop
push
push
or
mov
push
adc
mov
pop
sarl
test
loop
cmp
clc
adc
pop
cmpl
fidivs
mov
inc
adc
adc
cmp
je
inc
mov
jno
enter
sti
mov
out
not
and
fbstp
dec
add
pop
lea
push
sbb
lahf
outsl
ss
pop
push
jno
dec
pop
into
xchg
fcomps
add
jo
js
adc
or
ret
mov
je
xorl
jo
roll
xchg
pop
xor
xchg
inc
add
mov
mov
sti
or
inc
mov
jae
cmpsl
cmovo
pop
jne
sbb
mov
mov
lods
or
jmp
and
and
je
push
bts
test
sbb
add
test
or
notl
cmp
or
mov
test
add
push
fsts
mov
push
push
call
pop
sub
pusha
mov
pop
or
push
cmp
in
pop
inc
adc
push
paddd
or
adc
andl
adc
shlb
aas
imul
and
push
or
push
cmc
push
les
loop
mov
ret
jne
jne
pop
push
mov
mov
insb
int
das
sub
or
cmp
or
push
jp
add
and
movsb
mov
xchg
sub
lea
mov
sub
pop
pop
mov
lock
jge
je
arpl
or
or
jmp
mov
enter
call
test
mov
roll
and
decb
iret
jne
fucomip
pop
mov
sbb
pop
jne
mov
cmp
inc
mov
jmp
sbb
movl
adc
push
ret
aaa
es
sub
out
push
add
add
je
cmp
cs
adc
mov
cmp
insl
mov
sub
cmp
adc
push
xchg
mov
push
jo
mov
inc
mov
adc
inc
mov
adc
add
cmp
lods
jno
or
or
mov
test
sbb
pop
and
sbb
mov
lret
pusha
adc
dec
push
into
cmp
or
and
jl
shl
lcall
and
or
push
icebp
cmpsb
dec
mov
add
ss
jle
aam
add
imull
mov
mov
dec
popa
cmp
sub
iret
outsl
scas
and
push
repz
and
mov
add
cmp
jns
in
mov
jmp
dec
adc
xchg
jo
sub
test
sub
mov
cwtl
sub
mov
jae
sbb
jp
jge
mov
pop
movsb
in
inc
or
test
imul
sub
push
fildl
push
cmp
or
jge
rcll
out
bound
or
or
mov
scas
jmp
sub
mov
and
jnp
mov
lods
lea
mov
xchg
and
xchg
fimuls
or
xor
jne
or
in
lock
and
adc
cld
lahf
rcr
fildll
lea
jne,pt
cmp
cmp
push
lea
push
outsl
adc
mov
push
dec
roll
in
je
jne
pop
mov
cmp
add
hlt
sbb
cwtl
xor
je
sbbl
mov
lock
push
fwait
inc
stos
mov
lea
repz
or
fisubl
fnstcw
js
mov
sbb
add
pop
adc
push
stc
add
jl
sub
mov
mov
inc
xor
mov
pop
cli
push
loopne
loop
push
fidivl
inc
or
mov
aas
imul
pop
clc
xor
inc
inc
lods
inc
fwait
shlb
inc
mov
lods
sti
test
out
push
and
stos
mov
cmc
mov
shll
ds
add
fildl
inc
ja
repnz
mov
push
movl
dec
jge
mov
movsl
dec
add
sub
adc
xor
outsl
or
dec
lock
jbe
push
dec
or
clc
add
pop
inc
test
cmp
or
cld
ret
in
fs
inc
inc
mov
inc
mov
or
jp
dec
inc
jne
or
mov
and
cs
addr16
mov
cld
mov
jg
add
or
lea
sub
xchg
push
jecxz
cwtl
mov
xchg
orb
pop
outsl
shrl
sub
mov
jbe
test
dec
or
fnstcw
repz
inc
insb
dec
cld
lock
lea
shlb
mov
pop
dec
bound
pop
push
clc
xchg
gs
jns
icebp
nop
sub
shl
xlat
sbb
hlt
dec
or
or
ficomps
mov
rorl
stos
jl
fwait
stos
jo
xchg
fdivs
add
inc
xor
cli
imul
pop
mov
sti
ror
aam
insb
pop
aas
or
or
mov
cmpsb
test
decl
movsl
in
and
dec
iret
lahf
rcrb
inc
in
gs
jmp
fcoms
lea
test
lea
inc
push
jg
xchg
dec
pop
cld
cmp
inc
jae
xchg
cs
lea
clc
jno
adc
ds
fldt
fimuls
lea
push
shrl
pop
mov
movsb
mov
stos
xor
cmp
shrb
mov
xor
addb
cmp
push
push
imul
adc
test
jns
imul
pop
or
lds
mov
or
push
ret
add
jl
pop
jnp
push
add
xchg
lods
inc
cli
pop
in
lods
push
adc
loop
cmp
mov
cmp
pmulhw
xchg
lock
push
pop
push
sub
dec
sbb
inc
mov
cmp
xchg
rolb
bound
and
jb
xchg
and
fwait
inc
sub
je
inc
in
test
add
mov
ljmp
test
mov
jne
cmpl
pop
call
mov
mov
rcr
xor
cld
sub
mov
or
sbb
ljmp
fisubs
cmp
setge
dec
and
dec
add
inc
rolb
xchg
or
jl
or
lods
and
cmp
jae
orb
push
addb
inc
add
loopne
mov
jmp
or
daa
sahf
adc
and
mov
incb
je
adc
add
lret
pop
pop
pop
mov
cmp
shlb
inc
and
inc
inc
add
rorl
test
mov
or
mov
mov
and
aas
ljmp
mov
sbb
aas
push
aas
mov
test
dec
add
jns
or
test
orl
or
sbb
movl
je
icebp
mov
das
sub
loope
mov
push
mov
mov
mov
je
cmpl
jns
lds
lea
pop
out
inc
push
cli
fwait
mov
xor
mov
push
movsb
je
cmp
pop
ljmp
jne
mov
inc
jbe
add
add
in
mov
insb
mov
test
xor
or
or
push
and
and
mov
add
push
sub
push
sub
pop
sar
or
or
add
stc
dec
or
enter
fiadds
movzbl
add
and
test
sbb
inc
add
push
loopne
mov
add
mov
adc
shll
push
mov
fsub
sbb
sbb
insb
fisttps
add
call
or
push
ja
add
cmp
out
jae
mov
jle
lret
jl
cmp
adc
fstpl
add
jne
push
add
pop
or
inc
mov
jb
sbb
dec
add
mov
aam
inc
jae
mov
cmp
es
dec
pop
hlt
mov
mov
cmpl
pop
push
inc
cmp
jbe
or
or
pop
aam
js
fisubrs
jg
inc
popa
fistl
cmc
aas
fsubs
xlat
mov
std
inc
hlt
inc
xlat
ret
sub
sub
jne
or
out
add
jle
add
insl
jo
or
ljmp
push
rcll
mov
pop
push
mov
push
or
cmpsb
mov
mov
push
orb
cld
mov
cwtl
fwait
adc
inc
pushf
sbb
shrb
jne
inc
fstpt
mov
enter
jnp
fldt
sbb
repnz
inc
les
or
or
add
push
or
xchg
and
xor
je
push
pop
mov
jbe
pop
sbb
jne
jne
mov
push
and
sub
lea
das
xchg
xor
cmc
lock
cmp
or
or
or
sbb
add
add
mov
push
outsl
mov
adc
inc
jmp
andl
inc
mov
pop
sbb
inc
testb
inc
je
pop
test
ficoml
push
call
fucomi
cmp
pop
cmpb
lods
rorb
jg
inc
inc
aas
push
jae
cmp
or
and
mov
cmp
fsubr
inc
loop
sbbb
repz
aad
lea
mov
push
fstpt
xor
mov
pop
mov
and
aad
lods
sub
mov
xchg
mov
shr
jle
lock
ret
sub
jb
out
jmp
popa
rolb
jmp
shrd
aaa
push
ret
mov
or
or
out
xchg
shlb
inc
xor
push
inc
aas
jle
xchg
or
sbb
jl
sbb
and
mov
add
loopne
testb
out
pusha
jae
adc
add
push
shlb
cmp
cmpb
add
hlt
outsb
jg
pop
and
mov
xor
add
shlb
and
pop
outsl
rol
sub
cmp
cmp
gs
xor
push
loope
cmp
pop
inc
inc
stos
arpl
add
sub
imul
inc
xchg
ret
movsl
add
mov
mov
add
test
or
in
cmp
add
data16
cs
cmpb
xchg
fidivrl
push
mov
sbb
inc
and
add
add
add
into
mov
pop
rcll
orl
and
sbb
in
hlt
jmp
lret
pop
mulw
or
push
je
hlt
sub
mov
scas
dec
cmp
pop
sbb
loop
mov
test
test
seta
rcrl
test
lret
push
xchg
or
clc
loope
mov
pop
pusha
imul
mov
shlb
scas
push
jno
mov
gs
or
mov
inc
jo
je
push
cmp
pop
add
ret
cmpsb
xchg
sub
jmp
cmp
push
and
in
mov
dec
dec
add
xor
push
fnsave
push
inc
add
in
add
mov
jbe
adc
dec
pop
push
push
or
mov
fnstsw
sub
or
neg
add
mov
and
add
outsl
jg
movsbl
mov
cmovb
loopne
je
flds
xchg
loopne
mov
jmp
bound
aad
insb
lahf
cmc
inc
rolb
fcomp
push
shrb
inc
aam
push
inc
dec
xor
in
add
cmp
je
add
outsb
outsb
sar
dec
dec
je
or
cld
or
add
addb
add
sub
xor
into
repnz
insl
push
push
inc
sarl
sbb
fsubs
mov
mov
mov
jmp
jge
push
mov
jb
clc
pop
rolb
push
aaa
dec
sub
add
mov
ja
rolb
mov
mov
adc
and
ds
cmpb
ds
cs
inc
enter
and
add
ret
adc
ret
mulb
xchg
or
add
xor
icebp
addr16
add
sbb
adc
add
push
clc
addr16
xor
or
xchg
add
pop
adc
iret
test
popf
addr16
call
lods
imul
jo
insb
adc
mov
neg
mov
inc
sub
iret
mov
mov
add
sbb
mov
and
test
sub
add
jne
mov
aam
pop
orl
and
or
sbb
or
out
out
addb
adc
mov
jne
cmpb
pusha
cmp
push
push
int
lods
js
hlt
xor
cmp
mov
sub
xchg
std
push
jge
fistl
mov
in
fsubr
or
jge
add
xor
jbe
mov
movl
les
and
aas
jbe
dec
add
jg
pushf
mov
pop
shr
jecxz
out
cmp
or
push
xor
push
or
or
mov
jne
rcll
scas
clc
jle
add
mull
shlb
add
js
push
sbb
shlb
subb
ss
pop
mov
clc
xchg
pop
jbe
mov
mov
sub
pop
test
and
add
stc
jae
je
mov
fidivrs
sub
adc
mov
insb
clc
push
mov
or
fstps
lret
add
je
push
lods
imul
test
das
dec
adc
fstpl
lods
int3
daa
jecxz
pop
sar
xor
les
call
insl
je
or
or
es
or
int3
pop
push
in
xlat
mov
rolb
mov
sbb
or
add
adc
loop
fdivs
mov
jmp
and
cmp
shlb
mov
and
lea
orw
scas
pop
pop
push
nopl
mov
cmp
push
xor
jmp
cmp
fs
sti
ret
sub
rcrb
imulb
mov
or
loopne
loopne
xlat
push
sbb
jg
jl
lods
adc
rorb
pushf
jnp
jo
neg
fs
in
push
or
icebp
jnp
dec
mov
ret
clc
mov
jp
mov
cmpl
or
add
add
das
iret
xchg
test
adc
or
je
mov
test
mov
outsb
push
push
sbb
add
outsb
arpl
mov
fldt
cmpl
pop
add
xor
pop
jae
outsl
inc
hlt
mov
jmp
push
sub
xchg
add
push
mov
fidivl
cmpb
jne
pop
mov
or
add
sbb
sbb
jmp
cs
test
es
push
or
sub
mov
or
enter
or
arpl
mov
jne
sub
add
sbb
adc
mov
push
je
scas
ret
ljmp
into
in
sub
add
add
xor
cs
jae
inc
add
test
fidivrs
testl
sbb
pop
dec
jle
lea
push
in
pop
pop
insb
add
add
sbb
cltd
lret
add
je
insl
adc
sbb
dec
ret
xchg
or
fiaddl
cwtl
decl
outsb
jo
pop
addr16
cmc
add
dec
rolb
movups
dec
fsubrl
movsl
decl
js
pop
aam
lea
out
add
shr
stos
dec
cmp
mov
jne
adc
shll
jle
je
mov
inc
sbb
add
adc
insb
jnp
add
jg
xor
es
scas
imul
es
jge
fstpt
xor
daa
pop
rolb
mov
addl
imul
pop
jbe
imul
mov
sbb
lret
call
jo
jbe
mov
inc
aaa
subl
stos
jne
mov
dec
jne
push
or
add
or
cmp
pop
jge
cmp
push
int
leave
and
or
mov
push
cmp
or
sbb
dec
fdivl
gs
aaa
pop
or
mov
imul
add
mov
stos
inc
out
lcall
repnz
or
xchg
push
inc
loopne
add
roll
mov
or
shll
daa
lea
add
adc
fimull
sub
mov
fsubrs
push
mov
mov
add
out
jle
mov
push
lret
fcoms
jecxz
push
mov
mov
mov
lret
outsb
or
icebp
jg
xor
or
or
loope
or
jne
and
cli
mov
sbb
pop
pop
pop
fsubrs
inc
cld
aam
add
cmp
je
jg
dec
shll
faddl
aam
xchg
sub
mov
aaa
push
std
cld
cs
arpl
pop
cmp
inc
xchg
cmp
outsb
cmp
push
popf
pop
push
push
push
or
mov
jl
sub
and
sbb
and
add
sbb
jne
sbb
aas
push
or
ds
test
push
loopne
cld
sbb
jb
mov
jne
fwait
dec
xchg
sbb
mov
shrl
adc
inc
aad
cmp
cmp
dec
rol
jae
pusha
and
addl
or
xor
mov
in
pushf
or
test
cmpsb
cmp
insl
andb
pop
fimuls
aad
cld
jmp
xor
fisttpl
dec
push
jp
xchg
in
cltd
popa
push
push
hlt
dec
push
push
sbb
ret
insb
movsl
or
sub
xor
sub
mov
sbb
mov
aad
push
fcmove
add
mov
in
pop
cmc
daa
repz
pop
mov
jno
call
jbe
loopne
adc
mov
fbstp
fs
mov
jae
je
mov
add
mov
push
fst
sub
and
adc
rcl
dec
insb
mov
dec
or
pop
pop
mov
dec
sub
adc
ds
jle
stos
pop
lock
adc
inc
jmp
adc
jne
sar
rcll
insl
stos
mov
mov
scas
std
mov
std
leave
mov
sub
or
add
inc
in
fisubl
sti
push
mov
jne
sbb
or
lahf
dec
jle
mov
jne
stos
mul
scas
rclb
cli
sbb
idivl
add
loope
rcrl
inc
mov
cwtl
jge
xchg
push
hlt
pop
test
loop
ficomps
mov
adc
push
push
movsl
adc
inc
adc
add
loop
test
push
pop
orl
or
xor
aad
sub
mov
inc
add
ss
add
or
cld
dec
jae
rcr
xchg
push
push
popa
sub
and
fmuls
aaa
packuswb
mov
cmp
sbbl
popa
int3
sub
sahf
jne
inc
sbb
mov
insb
pminsw
adc
push
cmc
or
adc
push
push
or
or
add
and
adc
test
pop
sbb
divb
push
loopne
and
push
adc
dec
mov
inc
aas
mov
or
push
fisttpl
inc
out
add
cmpsl
add
or
dec
pop
test
xchg
je
inc
jmp
leave
inc
xchg
mov
in
adc
xor
loope
xchg
xor
daa
rorb
inc
jmp
sbb
sub
push
push
cld
inc
and
and
out
jmp
jae
dec
js
jmp
xor
adc
push
fs
push
push
push
push
and
adc
mov
add
fimull
dec
cld
and
mov
jmp
xor
mov
and
jge
clc
sub
ljmp
mov
adc
jnp
and
or
fwait
adc
addl
pusha
or
xlat
pop
pop
pop
mov
not
dec
jae
mov
sbb
mov
push
test
push
test
sbb
mov
add
push
cmp
jge
xor
sub
jo
roll
shlb
clc
or
jne
cmp
mov
call
sbb
out
cmp
rclb
pop
cmp
inc
jle
cmp
lea
jle
andb
inc
inc
cmp
ret
or
roll
mov
cli
push
adc
mov
adc
std
mov
movsl
or
cmp
je
jmp
mov
or
add
movsb
neg
jle
lea
pop
add
je
xchg
xchg
add
pop
add
mov
push
mov
cmp
jne
xor
insl
add
inc
pop
leave
adc
nopl
stc
mov
sti
out
jmp
cmpb
push
mov
or
jbe
inc
or
ja
and
cmpsb
mov
add
jmp
cs
cmp
pop
or
cld
inc
mov
xchg
daa
cmp
mov
inc
js
data16
repz
call
pop
mov
lds
mov
or
xor
push
cmp
push
test
cmp
cmp
call
call
dec
and
inc
dec
sub
push
mov
and
push
cmc
pop
add
aaa
jne
pop
ljmp
push
sub
pop
mov
in
xchg
loop
fsubrl
fwait
inc
lcall
stc
and
push
mov
pop
clc
call
and
clc
rolb
push
pop
mov
and
idiv
push
add
xor
mov
insb
das
dec
add
push
push
xor
and
pop
shll
mov
push
mov
mov
imul
les
adcb
mov
mov
insb
loope
cld
aaa
jmp
adc
incl
setnp
add
cli
mov
inc
aas
and
mov
dec
clc
mov
pop
sti
push
mov
mov
inc
inc
or
jmp
or
fistpl
add
sbb
inc
adc
push
add
inc
subl
mov
sbb
je
or
or
xor
dec
mov
mov
adc
adc
or
sbbl
fucom
mov
add
rcl
test
mov
and
call
sub
xchg
or
fidivl
add
jecxz
lea
aaa
or
rcrb
ja
jle
sbb
xchg
ret
shr
mov
dec
lret
mov
sbb
movb
inc
mov
andb
cmpl
or
xorb
je
sub
loop
pop
outsb
inc
cmp
cmovo
adc
add
pop
sti
xor
sbb
sti
push
leave
movl
inc
push
mov
add
aas
push
addb
mov
mov
inc
mov
testb
icebp
in
mov
ss
addb
cmp
pop
ljmp
add
pop
mov
jbe
inc
or
daa
outsl
mov
ffree
pcmpgtd
push
jae
inc
inc
or
jne
icebp
mov
sub
das
dec
sar
or
pop
pusha
push
jmp
xlat
xor
cs
dec
xor
and
mov
jne
cmp
or
daa
pop
pop
popf
lods
sub
add
jl
push
hlt
mov
add
dec
movsl
jne
mov
cmp
xchg
pop
mov
inc
or
add
sub
clc
notb
into
jne
sti
jmp
push
push
pop
push
inc
sub
insb
sub
dec
in
inc
xor
rolb
or
shll
adc
xchg
sbb
fisubs
faddl
sub
sub
mov
inc
add
add
insb
loop
addr16
inc
jne
std
mov
pop
mov
movsl
jg
fdivrl
sbb
jl
lock
idivl
mov
cmp
aas
mov
lea
pusha
jle
push
pop
xchg
or
shrd
mov
xor
in
dec
jl
in
mov
jecxz
push
and
ds
mov
mov
fs
cmpsl
jle
push
fstpl
or
movsl
push
and
mov
mov
mov
inc
inc
add
jl
push
dec
mov
fdivr
repnz
cmp
in
pop
pop
add
mov
negb
mov
dec
outsb
inc
call
pop
insb
test
pushl
push
aas
jl
leave
data16
mov
rolb
orb
xor
push
jmp
or
dec
in
mov
add
addb
jl
mov
ss
test
mov
sub
or
in
push
dec
mov
sbb
sub
inc
sbb
push
mov
stos
popa
adc
jmp
xor
xor
mov
mov
cmp
icebp
pop
shl
cmp
sbb
sbb
insb
scas
lods
shrl
insl
out
pop
adc
or
js
lds
sub
cltd
push
addb
pop
sub
cmp
sarb
push
outsl
mov
gs
sub
push
mov
cmp
clc
or
cmp
add
push
pop
addr16
mov
push
or
push
fs
adc
sbb
aas
mov
pushf
cmp
outsl
adc
and
adc
xchg
daa
outsl
sbb
pop
sub
pop
jmp
lea
sub
fmull
or
into
pop
rolb
adc
sbb
les
sub
scas
inc
call
mov
inc
and
fiaddl
sub
addl
jmp
cmp
xlat
mov
loope
and
add
ret
cmp
dec
jl
cmp
or
jp
push
and
xor
sub
dec
pop
js
pop
shll
cmp
adc
pop
sarb
mov
outsb
add
sub
pop
add
or
pop
jg
mov
fadds
jno
imul
mov
nop
adc
sub
sub
sub
jo
jne
or
pop
jo
sub
sub
xor
std
mov
ss
in
or
jne
jb
jne
ljmp
push
sub
mov
imul
sub
lcall
add
sbb
add
loope
push
jb
bnd
cld
sbb
dec
adc
scas
jne
and
jne
loope
add
adc
or
pop
push
jbe
idivb
add
pop
into
adc
daa
sarl
subb
fstps
leave
neg
add
insl
pop
add
push
or
inc
imul
mov
arpl
add
or
jecxz
ja
mov
sbb
scas
dec
inc
aaa
mov
repz
in
or
cmp
jl
jbe
test
mov
mov
push
cmp
test
mov
inc
jae
push
pop
jmp
stc
xchg
out
cmp
ja
jge
hlt
xchg
in
testb
push
inc
jno
js
pop
jo
repz
or
dec
inc
sbb
and
lds
or
arpl
add
stos
or
push
andb
mov
push
adcl
dec
add
push
mov
mov
jge
dec
mov
mov
rcr
mov
clc
movsl
sbb
add
add
mov
lahf
push
les
iret
inc
addr16
test
ljmp
push
fidivs
cmc
xorb
add
xor
loopne
sbb
jbe
xchg
push
xor
or
lock
mov
or
movb
inc
mov
sbb
movsb
enter
sub
popl
int3
mov
cmp
sbb
push
or
shll
adc
sbb
test
jl
fs
das
inc
sub
jle
mov
decl
or
pop
push
pop
cmp
and
test
jo
xor
ret
bound
sti
jmp
lea
fcmovne
fs
mov
cltd
or
aaa
jmp
sub
xchg
and
xchg
mov
test
sbb
int
imul
adc
push
lahf
lock
leave
or
xchg
stos
push
jl
lret
shlb
orl
movl
lea
add
mov
ja
lds
in
pop
mov
mov
xorl
pop
mov
mov
inc
xchg
sarb
adc
pop
test
jne
jge
mov
cwtl
cmp
jb
pop
mov
and
sbb
pop
push
es
jb
mov
out
mov
shlb
insb
cmp
int3
jl
adc
mov
jb
les
and
push
lock
mov
mov
xor
inc
mov
sub
ret
push
jae
cmpb
push
sbb
or
mov
scas
or
mov
daa
or
aaa
cmp
push
pop
inc
mov
std
cmc
xor
push
dec
xlat
xor
jo
mov
push
ds
mov
push
ror
or
or
push
add
jb
sbb
insl
xor
mov
test
inc
ljmp
push
and
adc
jmp
rcr
or
lods
repz
sbb
jge
movsl
test
negl
jb
cmp
ja
jb
cmp
cs
sub
dec
xchg
pop
jecxz
fcomps
lods
int3
add
outsb
push
pop
outsb
or
ret
out
push
out
mov
enter
adc
lcall
or
mov
mov
adc
or
es
pusha
pop
inc
xchg
xchg
jecxz
add
sbb
add
sbb
push
pop
out
pusha
filds
or
mov
or
fs
out
or
push
into
addl
mov
cmp
sbb
add
shlb
dec
arpl
ds
mov
insl
ret
lea
inc
and
xor
sbb
xchg
mov
fisttps
aam
or
xchg
fcoml
adc
lea
enter
sub
push
pop
push
push
inc
inc
pusha
xlat
push
adc
mov
call
and
inc
cmp
repz
fistl
mov
mov
pop
inc
or
or
inc
cli
pop
and
jne
ret
lea
jo
insl
adc
pusha
xor
cmpsb
mov
push
or
mov
insl
mov
ss
xor
enter
push
inc
mov
mov
popa
hlt
arpl
sub
fcoms
dec
sub
cli
stos
stos
mov
pop
jge
jg
mov
dec
out
mov
test
or
testl
inc
call
cmp
ja
inc
mov
out
push
dec
jle
ret
push
push
push
jno
add
lea
loopne
sti
mov
je
mov
movsl
add
cli
mov
mov
adcl
nop
inc
inc
push
inc
inc
cmpb
aam
and
xor
add
rcr
jp
dec
orb
scas
in
loop
cmp
shld
mov
inc
jns
out
push
data16
inc
mov
lds
jb
push
cmp
lea
or
dec
stos
fstl
mov
sbb
loop
outsb
sbb
cmpsb
mov
inc
cltd
imul
sub
dec
mov
push
fs
jmp
bound
pop
or
mov
test
lret
sbb
movsb
arpl
mov
dec
sub
add
xor
rorb
mov
adc
mov
insb
mov
mov
mov
mov
ret
pop
in
add
lret
jecxz
out
mull
or
xor
mov
in
loop
das
cmp
mov
movb
aaa
cltd
aaa
push
push
lea
mov
lret
mov
call
mov
add
call
xor
add
stos
inc
inc
mov
repz
scas
loope
push
cli
xorl
mov
mov
xor
push
push
push
xor
dec
dec
fisubs
cld
push
and
sub
std
adc
fisttps
movsb
je
cli
adc
nop
mov
mov
sbb
xchg
ret
pop
xchg
mov
mov
jmp
adc
lock
in
stos
ss
xchg
adcb
jge
div
popa
jb
add
ja
dec
sbb
out
xchg
pop
leave
sub
push
in
scas
std
or
pop
cld
adc
sbbl
mov
add
xchg
push
nop
jo
insl
filds
cmp
jne
cld
sahf
adc
pop
mov
insb
push
mov
or
outsl
out
insb
adc
data16
add
jmp
aad
inc
inc
in
jmp
mov
add
xchg
cmpsb
lea
addb
jo
daa
or
negl
cmp
add
add
dec
pop
mov
xor
enter
push
xchg
sbb
call
add
mov
or
call
add
lock
rclb
andb
cmp
cmp
and
pop
mov
cmp
jb
add
ja
jne
je
jecxz
xchg
jge
icebp
adc
cmp
into
rclb
jae
or
push
movsl
es
xor
inc
loop
xchg
add
rclb
or
test
jo
sbb
mov
jne
or
jmp
push
cli
popa
popa
imul
xchg
push
cld
pop
orl
inc
aaa
push
rcrb
int
rolb
jae
iret
testb
xorb
jl
adc
pop
enter
mov
inc
ja
pop
xchg
nop
loopne
ja
stos
out
sub
sbb
jge
cs
add
cmp
mov
fsts
or
or
jmp
or
je
jmp
out
and
push
in
add
shll
fldt
add
inc
mov
dec
lods
cmp
sub
test
mov
in
lods
sbb
adc
sbb
or
andl
inc
cmp
mov
pop
add
or
or
jae
or
outsb
adc
pop
imul
inc
mov
mov
pusha
xchg
pop
and
test
pop
int3
push
cmp
adc
mov
or
test
xor
mov
or
es
push
cmp
insl
push
sbb
mov
cs
mov
std
mov
jmp
in
jbe
out
or
xor
xor
push
mov
sahf
and
mov
xchg
pusha
and
inc
ds
je
adc
add
sbb
fsubrp
sbb
insb
sbb
and
or
add
mov
je
or
mov
loope
or
stos
inc
or
cmp
imul
xorl
jge
das
mov
mov
sbb
shl
pop
jno
or
adc
mov
mov
or
lcall
and
adc
nop
jl
cmp
pusha
jmp
pop
sbb
nop
or
fidivrs
cmp
movsb
or
add
lds
imul
add
push
mov
inc
mov
psubsb
cmp
pop
sbb
push
and
and
in
fisttps
sbb
sbb
pop
and
pop
cmp
jbe
push
sbb
insb
xchg
sbb
stos
or
push
inc
and
adc
xchg
das
inc
add
fildl
test
sbb
xor
inc
sbb
sbb
dec
and
sbb
sbb
dec
adc
cmp
cltd
sbb
inc
mov
fs
dec
shll
xchg
xchg
add
cmpsb
pop
ss
cwtl
adc
xor
lcall
stos
mov
mov
fadds
testb
pushf
dec
shll
fwait
inc
add
aam
mov
dec
shll
xchg
js
inc
pop
ss
shrl
add
lcall
in
add
mov
lcall
mov
adc
mov
add
cltd
pop
xlat
jge
aas
sbb
or
jns
fwait
pavgb
or
mov
mulb
rcrl
add
push
outsl
adc
cmpsb
imul
xchg
cmpsb
xor
add
insl
cmp
jns
popa
imul
outsl
outsb
xor
jo
fstl
and
add
pop
jp
pop
lcall
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
dec
push
push
inc
push
and
aaa
nop
push
arpl
add
fldt
xchg
add
push
add
add
add
fdivrp
mov
cmp
pop
or
aaa
jl
push
pop
mov
scas
fneni(8087
push
or
pusha
add
jo
add
and
iret
jne
add
adc
push
add
mov
gs
mov
jne
insb
add
iret
sub
insb
insb
sub
outsb
insb
push
mov
gs
or
mov
outsb
je
insl
and
jb
jb
push
jecxz
inc
fst
push
push
adc
add
dec
inc
mov
inc
mov
adc
xor
cmp
sub
insb
je
and
stc
data16
jp
push
daa
aaa
pop
sti
outsb
outsl
je
add
addr16
arpl
data16
fildl
imul
aaa
and
je
imul
lahf
xor
jbe
jb
jne
xor
arpl
and
insb
sub
xor
imul
or
gs
das
pop
push
ret
fcmovu
loop
xor
imull
fwait
sti
outsl
jo
pop
xor
pcmpgtb
arpl
cmp
cmpl
push
and
insl
mov
nop
insl
lods
je
mov
mov
das
pop
int
subl
add
jo
mov
jo
addr16
insl
and
insl
ss
xor
rorl
sub
stc
pop
mov
cmp
jb
jne
jae
pusha
mov
mov
outsb
outsb
subb
cmp
or
fs
sub
pusha
cmp
push
imul
push
jecxz
cmp
bound
fdecstp
xor
push
inc
push
and
push
aam
popa
mov
cmp
pop
add
cmp
loopne
movsb
mov
and
outsb
ds
jnp,pt
insb
jl
testl
popa
ds
push
jbe
push
fcmovne
fimuls
mov
xorps
lcall
gs
popa
addr16
outsl
js
jae
or
xor
xor
fs
or
cmpsl
adc
lcall
inc
fwait
scas
mov
pushf
lods
lret
imul
inc
test
add
adc
add
xchg
ljmp
std
call
ret
jle
fisubrs
rorl
ret
add
je
jno
call
mov
loopne
pop
cmpsb
xchg
add
xchg
loope
cmp
dec
adc
lret
gs
incl
filds
xlat
bound
inc
jmp
cmp
mov
and
add
sbb
jae
gs
inc
pop
sarl
jg
jge
adc
fidivrs
cmp
mov
insb
int
aas
cmc
out
add
pop
subl
hlt
xchg
in
dec
push
inc
ljmp
js
mov
adc
es
outsb
inc
mov
jns
jo
stos
enter
sub
pop
pop
mov
decl
jb
cmpsb
push
jns
arpl
out
pusha
jecxz
jbe
movsb
lret
cmp
inc
aad
or
incl
aam
push
daa
mov
push
pop
or
pusha
add
pop
pop
mov
jmp
dec
dec
sbb
jo
cld
repz
outsl
adc
mov
fstps
insl
mov
and
xchg
dec
out
xor
push
aas
adc
fildll
scas
lahf
addb
mov
enter
ret
in
add
ffree
mov
clc
mov
mov
scas
and
mov
push
inc
push
inc
pop
je
add
push
adc
xchg
aas
popa
adc
sub
divl
cs
fistpl
mov
pushf
cmpsl
sahf
nop
movsb
lea
fiaddl
gs
fs
sub
pusha
out
mov
leave
dec
dec
inc
dec
push
dec
dec
push
sub
cmp
cmp
js
gs
aas
ret
dec
inc
inc
inc
pop
add
es
mov
pop
sub
sub
dec
dec
xor
fidivrs
mov
jg
lods
call
in
out
inc
mov
push
inc
dec
push
hlt
cwtl
lods
test
push
inc
pop
insl
push
mov
sahf
iret
sbb
scas
pop
or
rol
loop
rcll
addr16
aas
mov
ljmp
daa
mov
into
jl
movl
cmp
idiv
ljmp
xchg
mov
xor
das
mov
popf
dec
sub
mov
test
add
in
data16
lret
jne
out
jl
jmp
daa
or
jae
mov
pusha
fs
or
xchg
mov
sub
pop
xor
add
call
fisttps
jle
scas
adc
in
loopne
jl
fldenv
stc
int3
adcb
fcos
pushl
mov
inc
fsubs
and
mov
stc
ja
sub
ljmp
push
loope
fdivr
xchg
mov
out
mov
fldcw
dec
inc
jge
in
stos
xor
popa
jg
in
loope
shr
push
rcll
jmp
mov
mov
decl
mov
inc
repz
pop
mov
xchg
scas
and
psubw
mov
cs
ret
gs
sahf
sahf
es
sub
incl
mov
outsb
cmpsb
xor
and
mov
ret
lcall
aas
pop
mov
ds
scas
pushw
in
pop
inc
sahf
xchg
ljmp
adc
fdivs
das
inc
gs
mov
mov
lahf
add
xor
pop
and
sbb
loope
cltd
mov
push
aas
or
mov
push
int3
fimuls
xchg
addl
sub
psubw
test
pop
add
loop
mov
nop
add
xor
int
loopne
enter
das
cld
sbb
test
push
bound
out
xchg
loope
addl
cmpl
sub
jbe,pn
pop
inc
daa
dec
cld
push
push
call
xchg
push
test
test
sbb
mov
outsl
out
lcall
mov
push
sahf
push
ret
add
pop
test
lahf
mov
add
xchg
daa
push
push
dec
sbb
add
sbb
repnz
ljmp
scas
xchg
incl
pop
and
cltd
rcrb
mov
inc
std
jmp
call
xchg
ss
xor
call
jno
incl
mov
mov
lahf
and
out
jae
push
sbb
mov
fnstcw
add
xchg
mov
test
sub
mov
jmp
int
mov
pop
jnp
pop
test
sbb
adc
xor
sbb
leave
push
or
lcall
cmpsb
imull
pop
adc
pusha
mov
js
ljmp
call
sub
in
rcll
jbe
push
sbb
jne
lock
lcall
in
lcall
fadds
sub
test
mov
shlb
pusha
fsubrl
out
push
roll
dec
lret
cmp
inc
lock
in
dec
push
incl
fisttps
dec
adc
mov
mov
ret
pushl
mov
fistl
test
mov
jae
aas
fs
jecxz
int3
hlt
insb
incl
clc
call
enter
or
movsl
pop
movsl
pop
mov
pushl
cmpsb
dec
sbb
pop
or
fisubrs
jecxz
push
adc
aas
push
clc
icebp
jl
outsl
std
dec
add
push
gs
aad
sbb
jno
or
adc
adc
jecxz
test
pop
into
pushl
mov
fisubrs
adc
push
cmpsb
pop
test
aad
mov
pop
into
call
call
aaa
cmp
mov
std
arpl
icebp
pop
aas
dec
pop
push
jno
ret
jne
outsl
jle
adc
bsr
das
pop
inc
mov
clc
insl
cmpsb
push
fcmovnbe
mov
out
movsb
shrl
call
xor
sub
stos
test
inc
push
adc
cmpsb
imul
push
test
call
cld
pop
sbb
jns
out
push
ja
sub
jmp
test
arpl
inc
orl
pushl
mov
inc
stos
shll
sbbb
jge
sbb
pop
popl
fisttpl
pop
jb
es
call
mov
inc
mov
adc
mov
lcall
push
lea
aad
inc
int3
adc
aad
sub
fcmovnbe
fsubrs
jmp
sar
je
pop
xor
inc
and
test
in
and
adcl
jbe
scas
test
mov
cmpsl
mov
sub
fstps
jg,pt
mov
xchg
push
push
pop
lcall
bnd
jmp
int3
jmp
scas
xchg
dec
jb
sbb
adc
jp
jmp
int
call
jecxz
mov
imul
fldenv
jb
adc
sahf
or
and
ds
daa
out
rcl
or
loop
jle
mov
push
aad
xchg
and
adcl
sbb
inc
outsl
std
movsl
test
push
cwtl
adc
in
sbb
cmpsl
ret
int
sbb
xor
in
and
cmp
xor
xor
sbb
pop
mov
decl
out
dec
mov
jge
cwtl
adc
call
mov
fs
mov
mov
stc
iret
mov
push
insl
enter
push
decl
movq
movsl
mov
lods
jl
add
mov
in
js
or
mov
rcll
ljmp
test
lahf
and
inc
inc
adc
pop
outsl
jo
adc
cmc
out
push
dec
stos
stc
pop
loop
xor
dec
jg
push
icebp
xchg
pop
rolb
fistl
je
xor
imul
sub
stc
lock
incl
incl
paddusw
cltd
cmp
sub
push
push
xchg
or
jmp
mov
pop
fdivs
aaa
std
testb
test
lcall
jne
dec
lods
jge
test
mov
mov
xchg
mov
lret
loop
xchg
xchg
call
xlat
dec
cld
adc
out
mov
cmpl
xor
daa
movsb
ljmp
lcall
mov
fxam
jecxz
dec
test
xchg
cli
sar
in
cmp
sbb
fsincos
jecxz
push
repz
sar
pop
loop
cmp
adc
lret
and
push
push
fwait
cld
sub
ljmp
xchg
sub
cmpsb
incl
movsl
pop
leave
lcall
movsb
inc
adc
test
arpl
and
mov
pushl
cli
js
xor
push
xlat
sub
cmp
xchg
cmp
push
sbb
ljmp
fwait
test
mov
add
das
lcall
std
incl
aad
addr16
aam
push
ret
ja
cmpsb
add
bound
int
mov
ljmp
dec
scas
cltd
out
jle
mov
sbb
dec
inc
pop
push
jl
movsb
sub
push
ret
incl
dec
out
stos
jge
cmp
mov
mov
pop
hlt
mov
mov
call
xor
mov
jne
push
add
jmp
sbb
sahf
xchg
mov
cld
xor
or
or
shlb
ss
repnz
push
fwait
into
fsubrs
pusha
pop
frstpm(287
js
ljmp
mov
adc
push
or
std
fdivs
lcall
outsl
push
decl
cmp
dec
and
lock
push
lods
xor
call
ljmp
sti
mov
popa
adcl
pushf
cmp
fimuls
mov
or
dec
or
or
push
ficoml
dec
jno
mov
and
outsl
popf
push
push
jmp
cmc
xor
sbb
mov
cmpsb
dec
push
push
add
js
pop
ss
loopne
incl
leave
jnp
mov
arpl
test
loope
jg
mov
push
cmp
push
adc
std
call
fwait
sbb
loope
pop
call
or
jo
mov
xor
inc
movsb
push
fldt
mov
dec
jns
jae
cli
xchg
jb
push
int3
sbb
in
stos
loopne
sub
push
push
jmp
int3
push
test
cwtl
add
mov
mov
jne
xor
cmc
cmp
pop
xchg
sub
xchg
stos
cmpsb
dec
sub
stc
jge
cmc
addr16
nop
dec
and
pop
or
imul
loope,pt
jg
jne
inc
cli
mov
pop
repz
ss
inc
xchg
cmp
fildll
shlb
insb
xor
jne
pop
into
dec
imul
jg
add
ret
adc
fildll
ficoms
in
incl
sar
cwtl
add
add
aam
test
or
add
push
mov
fstl
adc
sti
pop
ja
or
push
lock
leave
mov
and
aas
pop
jmp
xor
cmc
ljmp
or
lods
sbb
imul
sbb
in
dec
sub
jmp
jbe
adc
push
inc
int
mov
sbb
fistpl
test
rcr
cli
jmp
ficompl
popf
pop
hlt
mov
xor
mov
ljmp
sbb
push
imull
rcrl
xor
jle
jmp
lock
mov
js
jae
pop
jle
xchg
jmp
jge
lock
out
jecxz
cmp
jmp
xchg
mov
mov
mov
decl
ljmp
sbb
inc
mov
aad
sbb
arpl
decl
ljmp
mov
in
mov
push
inc
es
cli
incl
sub
shl
es
movsb
pop
arpl
dec
dec
adc
pop
ljmp
std
fucomip
or
movsl
cmp
lock
add
mov
push
lock
push
jle
je
mov
out
repz
cmc
in
jo
cmp
outsl
hlt
ljmp
fs
test
xchg
fmulp
ja
jg
xchg
add
adc
jmp
push
sub
int
sahf
xor
or
loop
lods
dec
jo
aas
or
xchg
clc
jg
fidivrs
add
addr16
test
mov
aaa
fistpll
or
mov
jno
rorb
push
sbb
popf
decl
mov
inc
cmpsl
pop
pop
inc
rcl
xchg
ljmp
loope
call
loope
or
ljmp
adc
cmp
lcall
add
inc
inc
rclb
imul
aam
add
je
addb
repnz
push
xchg
jnp
mov
in
or
loop
out
or
lea
xor
xchg
pop
inc
test
pushl
xchg
push
fstps
xlat
scas
je
dec
push
hlt
stos
jb
lcall
ret
sub
pop
jmp
adc
stc
mov
daa
ret
adc
fldl
ss
and
fstl
loope
jmp
into
leave
ds
inc
jnp
sub
lock
push
xchg
fwait
pop
in
testl
jg
mov
sub
jecxz
mov
in
jae
sbb
test
push
decl
cmp
test
adc
and
je
jb
or
loopne
inc
dec
and
cmpsl
lcall
stos
imul
ljmp
lock
push
add
fwait
dec
and
adc
mov
dec
incl
loop
enter
movsb
push
mov
inc
icebp
mov
mov
lret
gs
aaa
shl
rorb
add
jns
mov
fcomip
or
stc
inc
push
inc
jp
nop
xor
xchg
cmc
repz
daa
pop
jg
mov
jecxz
mov
dec
pusha
sti
mov
popa
adc
lcall
call
push
sub
popa
in
cmp
push
sub
incl
inc
lods
lods
adc
add
and
cmp
mov
cmp
loopne
sub
sub
lods
fs
mov
inc
inc
test
lcall
or
stos
sbb
adc
popf
add
cmpsl
xor
mov
jg
aam
lds
dec
decl
pop
pop
enter
sbb
pop
mov
sbb
xchg
xchg
or
mov
mov
shl
cmp
out
mov
sbb
gs
jno
jbe
sbb
pop
mov
mov
xor
cli
cli
cmp
push
lret
xor
xor
movsb
out
test
std
inc
mov
cli
inc
sub
adc
cli
sbb
or
incl
xchg
push
add
jnp
int
aad
testb
mov
and
subl
jg
gs
ret
out
mov
adc
int
cld
pop
clc
lea
in
add
cwtl
jmp
sub
sbbb
jnp
sbb
mov
fistpl
cli
cmpsb
pushl
test
repz
and
and
lret
push
enter
rorl
sbb
dec
cmp
into
and
pushl
inc
cli
popa
cmp
sub
in
les
jl
fists
stos
out
inc
dec
callw
pushl
jmp
pop
sub
addl
fisttps
mov
inc
adc
sbb
inc
decl
cmp
mov
or
pusha
push
push
pop
cmp
jg
decl
xchg
mov
mov
sub
adcl
or
ror
add
fdivrp
lcall
push
loope
push
mov
mov
test
add
cld
lea
imul
mov
hlt
aaa
arpl
dec
mov
das
icebp
incl
cmc
adc
cs
arpl
xor
je
mov
rolb
in
inc
push
push
pusha
icebp
xchg
pop
cwtl
inc
mov
leave
pushl
adc
mov
pop
bound
cmp
fadd
mov
addr16
adc
js
int
xchg
cmc
jg
jle
push
rorb
decl
outsl
leave
or
rorl
xchg
call
mov
daa
and
cmp
xor
cli
mov
xchg
sbb
jle
movsl
xchg
push
dec
ljmp
leave
lea
shl
xchg
cmp
inc
outsb
data16
cltd
cmp
mov
decl
lret
xor
cwtl
divl
jno
mov
fnstcw
gs
jge
loope
dec
add
push
add
mov
or
mov
dec
add
jg
stos
ret
popa
jg
pushl
sti
fmuls
xor
xchg
outsl
aam
lret
cmp
push
call
add
fwait
repnz
lods
ret
inc
arpl
ficomps
dec
mov
mov
testb
ss
mov
mov
testl
lock
dec
repz
scas
in
mov
fidivs
mov
lret
and
inc
in
or
push
pop
push
mov
lcall
scas
xor
lahf
aas
pop
dec
hlt
push
add
test
insb
insb
dec
sbb
dec
sbb
adc
js
push
into
cld
jbe
sahf
xor
loop
mov
aaa
mov
or
iret
lret
and
stos
call
mov
cmpsl
push
into
xchg
out
lock
fistpl
ss
pushl
mov
or
fmulp
mov
xor
add
sahf
push
ret
ret
inc
data16
pop
and
xchg
jno
or
adc
jmp
or
hlt
mov
inc
xchg
decb
call
pop
mov
fs
in
cs
pop
mov
scas
xchg
jmp
test
jmp
ds
push
nop
jg
push
ljmp
xor
ljmp
rorl
lret
gs
cmp
outsb
push
and
pop
clc
pushl
and
aam
mov
bound
cmp
lcall
and
jmp
add
mov
mov
dec
or
or
stos
scas
imull
fcompl
sbb
incl
fcompl
mov
dec
aam
sub
scas
imul
movsb
ja
mov
mov
dec
jo
pop
ja
movsl
adc
leave
push
out
aad
test
mov
call
in
xchg
clc
dec
js
in
push
ror
xor
rclb
sbb
out
mov
loopne
mov
mov
mov
xor
add
mov
out
push
push
inc
add
dec
std
rclb
pop
xchg
fistps
leave
outsb
adc
or
jg
into
cltd
fdivs
dec
sbb
jno
inc
cmp
mov
add
pop
movsl
mov
pop
ljmp
mov
jge
jmp
add
rolb
pushl
iret
mov
push
inc
add
sub
stc
hlt
stos
lds
ret
pushl
adc
ja
fcmovne
ret
jg
adc
repz
inc
decl
sub
lods
lahf
popfw
dec
imul
sti
fwait
addr16
incl
inc
sub
lret
ret
cli
testl
mov
mov
das
lock
lea
dec
aaa
loope
push
pop
jno
leave
jg
das
hlt
rcll
xchg
in
jno
stc
mov
mov
call
dec
push
jmp
jge
xchg
int
add
pop
movsl
arpl
imul
add
inc
ret
xor
inc
daa
jl
mov
mov
sar
lahf
push
cmpl
loopne
jbe
dec
in
mov
vcmppd
in
mov
mov
adc
imul
push
test
pop
repz
out
sahf
sbb
idiv
dec
cli
lock
jge
pop
stc
mov
ret
test
adc
add
pop
inc
jbe
in
js
xchg
out
aas
xchg
dec
movsl
popa
inc
push
mov
mov
shll
cmpsb
sti
jno
cwtl
cmp
mov
and
lcall
sar
pusha
xlat
hlt
mov
xchg
pop
xchg
pushf
mov
sbb
ljmp
sub
dec
and
inc
arpl
cld
jg
ret
cwtl
rorb
push
mov
mov
out
and
ljmp
push
or
in
add
cwtl
sbb
cmp
adc
outsb
pushl
js
adc
mov
addr16
mov
lea
in
rolb
lock
setno
xchg
push
sbb
stos
mov
cmp
xchg
xor
xchg
pop
ss
movsb
addr16
mov
jmp
adc
add
cmp
sbb
xchg
repz
xchg
loopne
icebp
gs
js
xor
ljmp
dec
lock
sbb
into
shrb
lock
inc
fnstsw
aaa
js
jmp
add
pop
sub
repnz
stos
sub
inc
xchg
addr16
push
push
in
dec
test
aam
xchg
lcall
fiadds
jmp
ljmpw
fwait
arpl
sbb
push
shl
push
gs
xchg
mov
sti
sbb
cmp
cli
and
dec
cmpsl
push
out
sbb
daa
stos
dec
push
add
fimull
das
xor
outsl
cli
push
adc
mov
ljmp
cld
ss
call
mov
out
dec
test
sbb
mov
lret
pusha
pop
adc
incl
not
jl
dec
push
push
jg
cmp
dec
xor
jecxz
ljmp
push
or
pop
insb
mov
xorl
inc
nop
mov
lea
mov
das
ja
xor
jl
pop
mov
mov
add
mov
cmp
cmp
adc
lcall
xchg
fnclex
aaa
sbb
das
cli
loop
and
inc
clc
or
jns
dec
mov
in
jbe
call
dec
add
dec
and
xor
dec
mov
sbb
lods
out
dec
js
jge
mov
push
scas
jecxz
decl
dec
mov
es
into
outsb
mov
int3
mov
ja
sub
ljmp
push
das
push
adc
movsl
jae
aad
lcall
xor
jmp
in
popa
call
les
aam
lcall
testl
incl
ret
pop
stos
aad
jns
push
gs
rol
xchg
stos
mov
push
mov
ljmp
push
sbb
sbbl
mov
xchg
insb
cltd
pop
imul
adc
dec
inc
jge
dec
xor
adc
or
divl
xchg
jecxz
addr16
inc
test
dec
jbe
cmp
outsl
jg
add
inc
pop
lret
or
imul
cmpsl
pusha
or
or
cmp
call
cmc
imul
push
rol
mov
sub
mov
xor
ljmp
sbb
ret
mov
imul
frstor
adc
xchg
mov
push
adc
sti
outsb
js
dec
ljmp
incl
ret
mov
hlt
fnstsw
call
lods
dec
dec
mov
inc
imul
xchg
sti
cmc
rcll
lahf
mov
stos
in
xchg
adc
push
out
sbb
sub
mov
scas
inc
sbb
adc
pop
or
dec
loop
sahf
decl
mov
lods
mov
xchg
jo
fisubl
ja
popf
out
jle
mov
decl
pop
cmpsb
pop
sub
dec
out
nop
or
shll
jg
test
push
cmp
mov
cmpsb
es
bound
cs
or
cmp
sub
das
lods
aaa
and
outsb
dec
jp
addr16
ret
pop
jecxz
pushl
xor
lret
loope
push
roll
dec
jo
inc
fstl
sbb
and
rcll
pop
mov
and
push
and
repnz
dec
sub
roll
and
sub
mov
xor
jecxz
and
pop
clc
jbe
mov
subl
fldenv
shrb
leave
insb
andb
cmp
pop
mov
in
jae
ljmp
hlt
dec
pop
jmp
jecxz
adc
mov
adc
push
enter
lcall
push
mov
mov
mov
clc
add
repnz
push
call
jmp
fcoml
push
cmpsl
fs
int
cmp
pop
test
in
movsl
stc
push
pop
sbb
push
out
mov
shl
mov
dec
mov
fucomip
incl
xor
inc
nop
ret
cmc
mov
pop
and
sbb
adc
pop
ljmp
and
insb
jge
inc
or
ds
addb
sbb
ljmp
fnstenv
repnz
popf
adc
cmp
hlt
mov
scas
nop
rcrl
sbb
push
sub
scas
data16
mov
jl
lcall
xchg
adc
jne
cmp
in
shl
pop
imul
decl
orl
xor
mov
ljmp
lcall
stos
add
sti
adc
mov
xchg
test
fdivs
arpl
test
mov
cli
call
faddl
lahf
mov
cwtl
xchg
jmp
push
das
jmp
jg
mov
sahf
repnz
movsl
rcr
sbb
mov
push
jb
lock
xchg
sbb
aad
xor
jbe
or
ljmp
ds
imul
dec
push
in
popa
test
or
inc
les
aad
push
sub
adc
jge
mov
ja
cmpsl
jge
out
mov
mov
mov
cli
call
daa
sbb
repz
pop
data16
xor
push
xchg
out
clc
ljmp
mov
xchg
push
jmp
xor
pop
lcall
ljmp
mov
imul
push
xchg
mov
cmp
jg
scas
xor
lea
and
ljmp
incl
cli
pop
popa
repnz
push
fnsave
pusha
out
adc
push
incl
ljmp
jne
leave
cwtl
mov
orl
int
movsb
lcall
mov
sbb
in
out
notb
jmp
lcall
test
fsubrl
das
cmpsl
and
aad
fbld
filds
cltd
push
fisttps
xchg
fsub
xchg
cltd
ja
push
int3
ret
sub
dec
cmp
adc
cltd
shrl
cmc
sbb
call
xor
or
lods
and
fwait
mov
dec
int
cmp
mov
pushl
push
cmc
idivl
cmc
sti
roll
cs
mov
ficoms
repz
pop
icebp
jnp
xor
dec
inc
push
clc
inc
lods
js
ds
push
iret
data16
push
mov
fldl
mov
add
rorb
outsb
subb
das
daa
or
cwtl
test
int
inc
jne
push
cmp
sahf
push
jg
push
pop
push
push
mov
sbb
aaa
jmp
add
sbb
aaa
clc
ljmp
nop
lods
xor
jge
pushf
mov
mov
fdivl
mov
jl
jne
cmpsb
lods
out
xchg
sub
cld
je
adc
dec
mov
pop
subl
fnstsw
test
lods
int3
jae
cmp
fbld
and
popl
fstpl
dec
stos
xchg
std
call
pusha
inc
call
adc
jno
inc
adc
jns
ljmp
push
adc
call
xor
rorb
push
adc
pop
in
inc
fiadds
pushl
mov
mov
imul
bound
adc
loop
adc
or
push
incb
call
sub
mov
ljmp
movsb
mov
outsb
mov
jle
cmp
or
push
pop
cli
inc
decl
mov
sub
adc
mov
mov
sbb
aad
dec
icebp
pusha
jg
popl
mov
xchg
add
fistpl
call
stc
ja
or
lahf
pushl
movsl
xchg
mov
testl
outsb
int
push
inc
jmp
sub
add
das
imul
fsubl
pop
in
enter
ficompl
inc
mov
mov
bnd
lock
adc
sub
shlb
mov
int3
movsb
in
repnz
and
icebp
in
aas
sub
or
inc
das
cmc
mov
in
cmp
jg
pop
ljmp
xchg
jmp
push
loop
decl
cld
pop
std
ficomps
mov
in
dec
pop
cwtl
cltd
dec
add
idivl
lcall
and
fisubl
xchg
cli
and
and
pushl
jge
push
sub
loopne
push
inc
out
mov
mov
out
icebp
neg
pop
sahf
mov
mul
stos
clc
mov
pop
ljmp
mov
xchg
or
adc
int
lret
push
mov
mov
std
decl
fdivr
das
inc
into
dec
push
insl
mov
call
out
mov
mov
sbb
nop
push
adc
sub
dec
lret
and
in
mov
in
in
jno
pop
ret
fidivs
icebp
mov
xor
sbb
test
mov
rcl
sbbl
js
jle
pop
cmp
or
pop
pushl
xchg
sbb
into
xor
outsb
imul
call
ret
mov
imul
in
mov
imul
adc
call
lret
pop
mov
pop
clc
call
das
addr16
mov
push
push
lock
lret
cwtl
adc
scas
or
pushl
dec
dec
jecxz
enter
add
push
dec
push
outsb
popf
inc
out
ja
mov
lret
pushl
out
sub
pop
jge
hlt
mov
mov
inc
lock
stos
loope
es
stos
data16
xchg
lcall
push
popa
jl
lock
mov
mov
push
stos
push
adc
sbb
sahf
ret
outsl
sbb
insb
mov
jg
decl
xchg
addb
ja
cmpsb
aam
mov
outsl
popa
xor
sti
cmp
outsl
lcall
out
and
fmul
gs
aas
push
xchg
pop
inc
dec
jmp
pusha
sub
ffree
push
mov
lcall
fcmovb
jp
xchg
mov
jge
jno
pop
dec
jge
xchg
dec
inc
decb
mov
fstpt
test
xlat
jecxz
cmp
in
adc
outsb
shll
mov
in
test
repnz
test
fisttpll
cwtl
ud0
dec
cmp
sub
test
in
loopne
in
xchg
jge
add
adcb
mov
pop
clc
in
outsl
cld
pop
xor
fsts
sbb
sub
push
cmp
pushl
pop
loopne
dec
mov
sbb
mov
dec
sub
mull
pop
clc
call
aas
dec
xchg
sub
jns
xchg
mov
mov
sub
aaa
aaa
insl
mov
sbb
clc
fdivp
dec
test
or
cmp
ds
test
jge
mov
mov
mov
mov
add
jecxz
pop
hlt
rep
cmp
leave
cltd
xchg
insl
pop
mov
imul
mov
fisttpll
push
cmpsb
pop
fwait
push
push
fsubrl
mov
sar
int3
jg
loopne
lcall
adc
xor
push
sub
scas
mov
cmpsl
xchg
pop
xchg
call
push
mov
ds
dec
inc
enter
mov
inc
xorb
movsl
cmp
decl
fwait
cmp
sahf
mov
jb
sbb
out
or
cmp
fists
xchg
xchg
pop
or
out
test
pop
jp
adc
test
hlt
ret
inc
hlt
mov
ljmp
hlt
call
leave
bound
neg
xchg
in
jae
xchg
mov
inc
dec
dec
shll
incl
pusha
popf
int3
sub
das
jle
or
inc
nop
ds
xlat
sar
pushl
dec
ficoml
ljmp
ljmp
mov
fisttps
jbe
jmp
movsb
sbb
imul
lock
push
xor
cmp
cmc
xchg
clc
dec
mov
mov
cltd
inc
mov
mov
aas
cmp
push
add
sarl
pop
push
mov
pushl
push
dec
fwait
jl
push
mov
cmp
push
mov
or
inc
mov
sbb
sbb
ret
jnp
xchg
int
mov
lcall
call
jge
or
sbb
pop
aam
test
xor
out
outsb
jle
push
lret
mov
call
mov
lea
mov
ljmp
and
pushl
and
adc
jecxz
cmp
mov
cmpsl
jno
imul
and
push
lds
push
sbb
std
mov
pop
inc
jno
cmp
test
lea
test
test
xchg
jnp
dec
call
mov
sbb
jb
or
imul
fsubrs
mov
sub
mov
xchg
aas
sub
xchg
dec
lret
jb
and
incl
inc
xor
jg
repnz
adc
mov
mov
das
outsl
loop
sub
into
addr16
pusha
repnz
push
incl
mov
add
ja
inc
shll
jmp
mov
jmp
push
dec
cmp
lods
sbb
sub
jg
xlat
and
out
mov
fwait
jne
in
cmp
jp
ljmp
and
mov
adc
inc
ret
cld
sar
lcall
cmp
std
daa
mov
cld
or
aas
add
push
pushl
stos
add
adc
gs
out
pushl
xor
lcall
push
test
js
xor
nopl
sar
cmp
dec
out
push
out
mov
sub
call
lcall
call
out
adc
arpl
decl
and
icebp
xor
jne
mov
adc
shr
rcrb
mov
lcall
cmc
mov
shll
jmp
xchg
dec
pop
mov
mov
push
push
mov
inc
movsb
sub
xchg
into
cmpsb
lret
mov
decl
sbb
mov
mov
add
sti
out
mov
jl
cmpsb
mov
mov
js
pop
add
jg
adc
cmp
and
or
das
cmp
ja
dec
lds
decl
call
dec
sbb
push
fisttpl
mov
cmp
fsubl
std
fistpll
test
mov
xchg
jo
test
xchg
adc
sbb
sbb
dec
fisttps
fwait
lret
adc
rolb
fs
loop
call
repnz
and
inc
cmp
ret
cmp
mov
test
jge
cmp
idiv
ljmp
jmp
call
pop
cmp
sub
push
inc
sub
js
xchg
pop
decl
ret
mov
inc
ret
cmpsl
jecxz
das
mov
xor
clc
adc
mov
and
dec
test
xor
lcall
cld
pop
jle
sub
push
shlb
jle
and
rorl
hlt
push
cli
notb
jge
icebp
push
aas
inc
int
jne
cmpsb
pop
sarb
dec
xor
cwtl
inc
enter
adcb
dec
or
jno
mov
adcl
mov
insl
lcall
sar
lcall
rorl
jge
imull
es
inc
fadds
add
inc
or
mov
es
imull
mov
bound
add
fidivl
ljmp
es
or
jg
call
mov
sahf
mov
lcall
decl
mov
in
jns
push
roll
push
pushl
clc
inc
fwait
cmp
out
xchg
jmp
cmp
mov
xchg
sbb
jmp
sub
data16
inc
pop
jbe
ficomps
xchg
pop
out
cmp
inc
jecxz
xchg
add
aam
pop
pop
mov
inc
repnz
inc
outsb
xchg
xchg
sbb
loop
inc
call
push
cmc
les
and
fdivrp
es
xor
push
fildll
divb
mov
adc
inc
adc
lods
adc
ficompl
call
test
mov
subb
out
xor
shrl
fsubp
mov
push
pop
idivl
nop
lea
push
jmp
dec
cmp
decl
aam
push
fisttps
lods
and
mov
icebp
daa
pop
mov
idiv
aas
cmp
clc
or
iret
shlb
xchg
imul
mov
in
loop
inc
pop
idivb
pop
jmp
add
xchg
fcoml
std
decl
sbb
and
jb
pushf
dec
pop
pop
inc
fwait
lds
iret
ret
std
mov
xchg
nop
mov
cmp
jg
adc
inc
jecxz
ss
call
and
insl
cmp
int3
push
pop
std
ret
pop
mov
inc
add
in
fwait
in
add
icebp
xchg
std
test
aaa
dec
repnz
fists
call
bound
aaa
ss
mov
mov
std
iret
xchg
arpl
test
ret
scas
adc
outsl
pop
bndstx
aaa
pop
or
jns
adc
mov
jle
dec
xor
mov
dec
or
xor
lods
mov
mov
pop
xchg
cmp
repz
pop
lea
decl
in
enter
push
cmp
ds
inc
test
mov
add
test
decl
mov
mov
pop
rol
adc
mov
add
aas
sarb
mov
pop
lcall
jbe
stos
shl
xchg
dec
sahf
jb
aam
sti
inc
xchg
stc
pop
cmpl
push
cmp
jl
jo
call
mul
rol
dec
xor
sub
pop
push
lcall
fcomip
int3
movsb
nop
sbb
jb,pt
fwait
dec
push
jge
mov
cs
orl
fistl
push
test
fcoms
hlt
and
cs
pop
fstp
push
outsl
sbb
out
pushf
ret
xchg
adc
out
sbb
jge
fimull
lahf
mov
ja
out
ret
cmc
push
insl
jg
ljmp
pop
pushf
or
scas
sub
popa
cmp
sub
mov
inc
scas
fbld
jp
and
pop
mov
cli
push
insb
xchg
push
pop
gs
adc
mov
pushl
adc
sbb
out
jo
mov
scas
adcl
jmp
jne
and
adc
xor
mov
or
and
mov
decl
and
pop
add
pop
pop
sub
movsl
sub
adc
lea
push
jg
push
call
sti
mov
and
cli
fisubl
add
sbb
enter
decl
or
mov
mov
mov
push
rclb
dec
xchg
pushl
xor
pop
pop
push
fisubrl
push
popf
sbb
cmpsb
aas
fwait
loope
and
xorl
dec
cli
xchg
mov
loope
adc
clc
fmuls
divb
xor
loopne
ss
jmp
mov
pushf
lock
outsb
aad
or
arpl
sbb
fsubs
in
mov
jecxz
inc
pop
lahf
cld
pop
lds
sbb
jmp
rorb
cmp
dec
cli
jae
lcall
cltd
add
jecxz
leave
push
add
mov
adc
je
push
xchg
loope
fcomip
aaa
xchg
out
jae
and
insl
popa
int3
lds
jecxz
push
aas
ret
clc
and
push
imul
pop
xor
lcall
jnp
imul
loopne
into
xor
out
enter
mov
lret
sbb
dec
push
dec
xchg
decl
dec
inc
rclb
mov
call
xchg
inc
stc
fisubs
rclb
mov
bound
scas
xor
xor
inc
out
and
mov
mov
lcall
aad
cmp
mov
sbb
mov
xchg
or
test
stos
sbb
hlt
push
push
das
lock
jmp
lock
mov
test
pop
mov
iret
cmp
data16
lcall
test
aas
sbb
xchg
arpl
enter
clc
xchg
cmc
cmp
rolb
decl
fistpl
jne
scas
pop
nop
mov
outsl
cmp
push
pop
daa
xchg
sbb
cmc
mov
sub
sub
fisubrs
loopne
and
in
jmp
cmp
sti
loope
fs
or
adc
fisttpll
mov
push
sub
scas
popa
popf
jo
inc
andl
clc
hlt
push
xchg
sub
adc
xchg
lret
leave
jne
jns
xor
shr
jmp
fistpll
addr16
ds
mov
out
pop
jnp
mov
pop
push
cs
call
or
jg
mov
cli
ljmp
mov
jmp
jo
mov
outsl
jne
ljmp
xor
jbe
dec
std
adc
shrl
jp
cmp
sub
cwtl
xor
sub
cmp
add
pop
jo
mov
loope
repz
loopne
add
nop
es
fwait
mov
loopne
call
fs
add
iret
xlat
mov
movsl
sbb
fisttps
inc
mov
sub
pushl
jae
jno
cli
pop
inc
xchg
or
mov
jle
outsb
xchg
adc
decl
pusha
sub
pop
pop
add
int
or
cmp
mov
jns
inc
cmp
push
adc
lret
pop
mov
imul
xor
or
int
pop
mov
cld
adc
and
rcll
jmp
xlat
mov
pop
pop
ret
out
imul
stos
mov
jecxz
jle
loopne
jg
andl
data16
shll
fidivrs
subl
dec
dec
jg
stos
pop
adc
insb
fwait
fstpt
ljmp
iret
rolb
and
inc
xchg
dec
fldl2e
ret
add
xchg
and
lcall
mov
or
sub
sbb
or
jbe
gs
push
mov
shrl
inc
adc
jns
mov
cmc
imul
and
jb
mov
aad
js
add
dec
ds
sar
decl
pushl
push
fisubs
xchg
sbb
leave
mov
out
cmp
dec
lods
call
mov
loopne
lods
das
dec
and
lret
jae
lret
pop
pop
dec
sub
or
inc
popa
pop
cli
mov
push
addr16
jmp
push
rcrb
cmp
lods
push
lret
or
xchg
add
sbb
xor
ljmp
inc
out
leave
add
pusha
mov
xchg
lods
fisttps
jns
sub
push
jb
or
cmpl
xor
shlb
in
shll
movsl
call
mov
ret
sbb
notl
jne
xchg
enter
decl
mov
daa
push
jne
ret
inc
adc
ret
cltd
sub
push
cmp
inc
cmc
lret
out
mov
mov
gs
adc
lcall
mov
xchg
fwait
sbb
jmp
into
data16
aaa
or
outsb
mov
inc
int3
jecxz
mov
cmpl
sbb
and
hlt
xchg
jmp
push
mov
lcall
daa
pop
pop
add
pop
test
push
fs
add
jg
pushf
cmp
mov
shll
pop
ljmp
out
add
fnstcw
jbe
fs
mov
decl
xchg
xchg
lret
in
fwait
push
jecxz
mov
jo
push
adc
ja,pn
sub
addr16
test
lods
sbb
shlb
cltd
test
mov
adcb
jp
scas
pop
cmc
mul
pusha
stc
aam
sbbl
int3
cmpsl
inc
enter
outsl
xchg
aad
adc
call
out
outsl
std
fcoml
or
push
stos
notl
dec
and
mov
into
mov
test
xchg
inc
subb
jp
xchg
push
fidivs
add
call
jl
push
inc
aam
add
lret
add
popa
sti
ja
dec
dec
xchg
std
lock
call
push
fcmove
push
push
lret
movsb
push
push
pusha
cmpsl
xchg
das
cmp
mov
mov
and
fmuls
push
mov
ljmp
movsl
mov
loope
popa
mov
clc
jl
es
dec
and
mov
repnz
inc
repz
movd
xchg
push
push
ljmp
lcall
xchg
mov
sbb
inc
jle
push
cmp
ljmp
jg
lea
pop
in
icebp
idivl
and
add
pop
and
inc
xchg
dec
int3
iret
mov
call
mov
and
int3
push
sahf
fwait
mov
dec
jnp
xchg
aam
adc
dec
adc
mov
repnz
call
test
mov
in
jae
sbb
add
mov
in
inc
or
jb
pop
cs
fdivrl
push
dec
int
push
jo
addr16
pushl
xchg
push
jae
ret
cmp
aam
mov
out
cwtl
repz
mov
adc
das
in
mov
divb
insb
jg
bound
sub
jbe
aas
or
dec
ljmp
int
inc
rolb
xor
jmp
dec
divl
aaa
loope
rclb
xor
mov
mov
jnp
mov
call
imul
push
sbb
adc
bound
decl
lcall
and
sbb
addb
addr16
lahf
jle
std
ljmp
fs
ja
adc
jbe
stos
aad
clc
sti
cmp
stc
sbb
adc
jne
mov
xchg
push
int3
mov
fiaddl
jle
adcl
mov
jo
push
jnp
pop
mov
pusha
adc
push
adc
jg
sbb
xchg
or
popf
push
fwait
cmp
decl
imul
inc
pop
mov
inc
dec
movsl
or
inc
push
dec
xor
dec
jmp
xchg
in
mov
and
aaa
pop
sbb
adc
pop
mov
aam
in
mov
jmp
cmp
jnp
push
inc
jae
out
test
push
add
fs
push
and
and
outsl
sbb
xor
lret
mov
clc
outsl
ljmp
push
fildl
xor
cmc
in
mov
adc
decl
or
adc
cmc
lods
lock
scas
mov
xor
enter
das
fdivr
cmpsb
das
mov
inc
inc
stos
test
outsb
add
pushl
mov
push
arpl
sbb
push
add
jecxz
repnz
fldln2
fcoml
repnz
test
sbb
es
jb
xchg
cltd
out
push
call
mov
jge
leave
mov
adc
dec
pushl
dec
add
into
jb
mov
cmpsl
lcall
call
fstpt
testl
iret
inc
pop
pop
adc
cmp
test
lcall
jns
loope
inc
cmpsb
in
inc
add
cmp
push
insb
ds
shr
xor
jp
decl
cltd
popf
and
jecxz
or
xchg
mov
or
lock
cwtl
aaa
call
scas
pop
dec
mov
subb
call
lret
xchg
outsl
cltd
inc
pop
inc
fmulp
lret
sbb
sbbb
js
out
daa
mov
mov
jbe
and
je
push
aam
inc
mov
mov
xchg
pop
jno
pop
and
bound
fld
adc
cli
in
incl
mov
shlb
iret
xchg
clc
ret
mov
pop
ljmp
lods
cmp
dec
mov
in
addr16
jge
aaa
mov
or
jmp
mov
mov
mov
out
incl
mov
sub
stos
mov
test
xorl
incl
call
jg
xchg
push
xchg
sub
dec
pop
fldl
clc
pop
sti
insl
adc
pop
cld
push
lods
or
dec
push
push
push
adc
or
mov
popf
insl
inc
fildll
lcall
inc
in
scas
xor
lcall
mov
sub
js
shrl
lods
dec
dec
aam
pop
mov
mov
jg
sub
ret
push
in
cs
jmp
les
lcall
bound
mov
jb
dec
iret
jmp
or
add
shll
inc
push
lcall
cmp
int
pop
push
xchg
lds
or
nop
sub
jo
mov
pop
xchg
hlt
push
or
xchg
xor
shl
sbbb
cltd
xchg
jnp
aad
pop
cld
or
mov
das
pop
repz
test
fistpll
testl
add
filds
popf
mov
pusha
push
sbb
and
inc
sbb
inc
outsl
pop
out
mull
and
lcall
push
push
inc
sbb
cmpl
incl
mov
push
push
adc
pop
push
jbe
or
pop
daa
add
and
jno
clc
jg
cs
inc
in
fldcw
mov
nop
std
shll
lods
ljmp
and
sub
mov
mov
pop
push
fmul
add
mov
cltd
and
xchg
outsb
js
mov
mov
icebp
lcall
aas
hlt
test
add
sub
lahf
mov
or
fcmovnbe
sbb
push
jne
jmp
or
xchg
push
cld
stos
iret
push
jb
bound
scas
insb
movsb
cld
decl
xor
jns
xchg
push
push
out
repnz
iret
dec
xchg
lods
dec
popf
xchg
xor
cwtl
add
jmp
movsb
aaa
imul
mov
fidivl
movsb
mov
sub
scas
and
cli
stc
pusha
mov
pushl
cmp
rorl
xor
loop
or
jmp
mov
fsubrp
arpl
xor
xchg
xchg
sub
cli
sub
lods
pop
ljmp
mov
xor
jbe
jo
pusha
inc
sub
repnz
mov
or
push
mov
dec
call
mov
addr16
imul
pop
imul
decl
cld
jmp
mov
cmp
test
dec
test
arpl
xchg
cli
movsl
popa
mov
aam
mov
into
ljmp
fwait
jp
cltd
xor
push
ret
je
repz
test
push
cs
push
adc
loopne
jg
in
les
cmpsb
pop
xor
jne
pop
pop
pop
mov
or
popf
rcll
jnp
jg
and
lret
jecxz
lods
sbb
test
jg
xlat
leave
repnz
ss
in
mov
xchg
aad
int3
das
push
scas
pop
pop
mov
icebp
cmp
ds
fwait
jg
lcall
push
sti
pop
movsl
loopne
rolb
or
imul
dec
inc
and
movsl
adc
jmp
fcoms
inc
jo
lahf
popa
lea
gs
orl
mov
std
or
jmp
pop
dec
imull
fwait
xor
ja
or
cmp
out
pusha
jo
icebp
decl
add
loop
je
mov
cmp
inc
das
cmp
dec
pop
jmp
test
jl
push
icebp
lret
mov
popa
ss
jmp
jae
sub
sub
sbb
cmc
cmp
jecxz
jo
lock
das
in
push
or
jmp
negb
push
fs
incl
cwtl
sbbb
dec
fadd
sub
repnz
pop
rcrb
dec
pusha
sti
and
sub
sar
clc
add
and
push
jae
enter
dec
or
add
mov
cli
sub
int
xor
adc
push
fwait
jns
outsl
cld
mov
popf
lods
ret
sbb
sub
lea
inc
jns
scas
dec
jle
call
mov
scas
jp
adc
shll
lret
jmp
xchg
cmc
test
lcall
insb
dec
bound
loopne
xchg
stc
jne
stos
das
div
adc
jbe
jp
xor
pushl
inc
stos
shl
cwtl
nop
std
mov
femms
push
push
popa
lcall
jge
sbb
lds
repz
xchg
mov
repz
daa
add
cmp
inc
and
cmpsl
stos
add
or
arpl
push
cmp
adc
xchg
pop
arpl
inc
jne
int
jns
cwtl
push
and
xchg
sbb
insl
xchg
push
xor
jle
test
xchg
out
int3
mov
jne
pusha
test
dec
inc
ret
mov
dec
cld
jg
inc
xchg
movsb
loop
rcl
int3
sub
push
jp
adc
or
jo
mov
ljmp
iret
add
std
addr16
mov
cmp
incl
add
rorl
xor
xchg
in
call
dec
test
mov
mov
decl
loop
mov
int
mov
mov
xchg
or
aas
push
dec
xor
jb
decl
in
adc
jecxz
jno
pop
mov
mov
cmp
push
out
push
lcall
in
push
cmp
stos
cmp
adc
mov
jge
push
jl
jg
les
and
jl
xchg
sub
sub
mov
and
adc
mov
push
fbstp
cmp
and
jg
call
inc
mov
testb
push
ds
dec
dec
mov
sub
pop
mov
incl
jno
pusha
and
into
js
lods
jmp
mov
add
sarb
test
movsb
decb
mov
mov
push
cs
pop
and
outsl
fsubr
outsl
push
mov
mov
adc
js
sbb
xchg
mov
sbb
out
pop
mov
pop
call
insl
jl
lret
mov
sub
ja
xchg
call
decl
mov
test
sti
inc
pop
jno
insb
inc
xchg
test
lea
lea
rcrl
gs
incb
pushl
mov
shrb
lcall
jp
aaa
xchg
nop
mov
lods
out
out
jns
incl
dec
or
or
sub
jmp
inc
ret
sub
pop
data16
fwait
xchg
js
pop
jg
fstpt
idivb
cmp
insb
pop
mov
stos
inc
jmp
in
mov
add
fidivl
pushl
mov
cmpsl
sbb
rcrl
or
aaa
clc
decl
lcall
add
dec
sub
fwait
mov
pop
mov
addl
insb
jae
fyl2x
inc
mov
loope
pushl
js
fsubrl
arpl
mov
decl
pop
std
aaa
pop
cmp
bnd
inc
test
xor
pusha
lcall
sub
ret
xor
or
pop
sbb
enter
or
mov
pop
xlat
lods
pop
inc
xchg
adc
fisubrl
xchg
mov
aaa
mov
test
xor
nop
xor
fnstsw
lahf
inc
out
in
adcl
leave
pop
mov
repz
hlt
ljmp
shlb
in
mov
mov
into
mov
rcrl
mov
out
les
call
movd
pop
pushf
jmp
loopne
arpl
lcall
adc
out
jb
push
jecxz
sbb
orb
pop
or
jle
mov
push
pushl
shl
repz
inc
movsb
adc
jp
sbb
dec
sbb
or
xlat
adc
aad
pop
jbe
aas
repnz
aad
imul
hlt
fists
or
add
in
mov
icebp
loop
lahf
popf
inc
loopne
decl
sub
ds
movsb
or
and
loope
jecxz
lock
jge
inc
je
lcall
fstpt
sarl
test
cmp
fldlg2
mov
and
loop
jecxz
pusha
hlt
pop
add
jbe
ret
xlat
and
out
mov
inc
std
lret
xor
mov
bound
fnstsw
in
lahf
inc
popf
mov
push
shlb
dec
incl
pusha
dec
int3
ds
and
push
xor
or
icebp
add
call
sbb
sbb
mov
repnz
fimull
and
lods
push
xchg
or
sti
mov
jb
push
leavew
loopne
ljmp
pop
inc
test
in
cmp
mov
int
cmp
xchg
lret
pop
dec
pop
cli
jg
aaa
pop
cwtl
loopne
push
adc
aas
pop
out
out
jge
fnstenv
pop
subl
jg
pop
mov
mov
test
pop
movsl
inc
imul
notb
dec
pop
push
jo
mov
adc
stos
xor
mov
mov
push
pop
ja
pop
jns,pn
out
or
mov
vpacksswb
mov
mov
stos
push
cwtl
fwait
mov
fs
aad
pop
lcall
lods
dec
cmp
xor
adc
push
mov
lea
aad
adc
or
sbb
movsb
mov
push
lods
sti
cli
inc
ljmp
cld
jg
je
xchg
nop
das
mov
push
jb
cmp
adc
lods
outsl
xchg
xchg
aad
ret
pusha
fcompl
test
hlt
xchg
hlt
jle
jne
inc
sbb
mov
dec
add
stos
cmpl
jp
adc
rcrb
repz
jp
int3
decl
sarb
pop
aaa
lret
cmpsb
nop
inc
mov
pop
sbb
push
ret
mov
pushl
fsincos
lods
and
pop
mov
clc
xchg
push
fcompl
loope
push
mov
pop
inc
inc
mov
inc
and
mov
movsb
stos
in
pop
inc
adc
jp
xchg
incb
popf
cwtl
adc
xchg
out
inc
jnp
sub
hlt
stos
leave
fistps
jno
ret
pop
xchg
jbe
and
inc
leave
jecxz
clc
das
call
aam
movsb
gs
cmpsb
iret
mov
mov
repz
shlb
sub
ljmp
sbb
or
or
mov
dec
pop
popf
cmp
adc
test
lods
fidivl
subl
lods
std
hlt
pushl
pop
ds
mov
or
push
push
ljmp
call
das
xchg
sub
push
push
pushf
ret
movsl
incb
or
cmp
call
mov
push
xchg
pop
or
insb
mov
cltd
cli
jmp
repnz
call
push
jl
mov
add
out
rorb
mov
sbb
inc
add
outsl
cmp
popf
mov
lcall
jmp
shr
sub
pop
jecxz
stos
push
arpl
outsl
clc
outsb
mov
outsl
push
mov
lcall
dec
stc
sbb
sub
cltd
scas
call
mov
jmp
aas
lds
fistps
enter
pop
sbb
sbb
adc
mov
call
xor
fistpll
pop
fcoml
mov
cltd
adc
fs
das
mov
fwait
incl
mov
enter
test
inc
sbb
add
or
inc
pop
jmp
insl
bound
xlat
and
sbb
inc
mulb
in
xor
decl
dec
xchg
adc
mov
ret
sub
mov
dec
scas
mov
call
decl
repnz
aas
cmp
jecxz
int3
out
rcl
or
or
lcall
outsl
rolb
aas
xor
add
mov
mov
mov
pushl
mov
sbb
pop
outsl
aam
or
insl
mov
mov
xor
lcall
nop
jnp
inc
add
ss
add
lcall
mov
pusha
into
outsb
jge
enter
cmp
mov
std
int
loop
pop
stos
rolb
jbe
mov
call
bound
fsts
testb
inc
test
cmp
lock
push
inc
or
lret
jae
subb
jg
es
cmpb
xorb
insb
jne
out
inc
xchg
mov
or
cltd
push
out
or
icebp
arpl
push
pop
add
pop
mov
pushf
mov
jle
sbb
pop
insb
out
dec
dec
ds
ljmp
mov
pop
into
sahf
sbb
xorl
popa
mov
inc
aam
cmpsl
xor
mov
out
jne
popa
test
inc
sbb
mov
pop
das
sub
and
dec
jmp
pop
addr16
jg
sarb
adc
lret
xor
mov
mov
push
insl
xor
into
push
imul
in
jmp
rorl
push
jl
pop
xor
jg
ss
jmp
sar
addr16
pop
rcrl
cmpsl
rcll
pop
fwait
rcll
std
mov
ss
xor
nop
push
adc
xor
adc
add
push
mov
decl
ja
stos
repnz
or
mov
or
fmulp
cmp
outsl
xchg
push
cs
adc
or
mov
jl
fdivr
push
add
sbb
lret
les
decb
mov
aaa
inc
addr16
adcl
mov
out
xor
and
in
jp
cmp
push
lcall
mov
lds
inc
lock
and
adc
xchg
xchg
into
dec
cld
ljmp
movsb
xchg
hlt
xchg
sub
js
cmp
loop
add
decl
daa
push
and
lods
fildll
push
icebp
mov
push
and
out
pop
push
jmp
std
push
test
and
sti
dec
lods
mov
jno
mov
mov
xor
push
ja
bnd
sti
xchg
shrb
pop
push
mov
mov
mov
negb
mov
aaa
incb
movsl
insl
lds
cmp
jmp
jns
xor
cs
cmpsb
insl
icebp
fmuls
jnp
xchg
daa
mov
adc
sbb
lret
push
decl
inc
jbe
adc
enter
add
sub
add
dec
pushl
fcomps
mov
xchg
inc
lret
and
fs
call
decl
aas
mov
jae
add
xor
cmp
popa
push
jne
inc
daa
adc
mov
mov
decl
test
push
out
mov
add
out
inc
loope
sub
mov
add
int
fimuls
xor
jnp
lods
push
lea
inc
rcl
testl
pop
push
in
and
jge
push
inc
aas
jne
jg
addr16
push
push
es
int3
xlat
jns
mov
fiadds
pop
lahf
and
mov
xchg
addb
fstpt
scas
das
ja
xchg
sarl
and
movsl
decl
cmp
hlt
sbb
decl
fsubrl
pop
xchg
out
int3
xchg
clc
call
nop
or
dec
and
arpl
or
fcomip
sub
sbb
dec
scas
mov
iret
fistpll
jnp
xor
mov
pushl
cli
out
into
sbb
test
sti
clc
and
ljmp
fbstp
orl
jl
aaa
outsb
test
clc
inc
inc
pushl
das
cmp
test
stos
pop
adc
cli
mov
mov
iret
jecxz
push
pop
test
pusha
loopne
inc
xchg
idivb
lcall
outsb
movsl
add
pop
ss
addr16
sub
xchg
incl
ljmp
push
pop
loope
jp
push
hlt
lds
dec
push
cld
jo
decl
jecxz
pop
cmpsl
dec
mov
push
xchg
inc
mov
and
dec
or
push
sub
ljmp
sar
push
xchg
pop
mov
jae
jb
jmp
mov
ljmp
jl
push
loopne
shlb
fistps
fmull
mov
jg
pop
pop
inc
imulb
lea
lea
mov
mov
dec
imul
ds
push
xchg
jns
fs
and
loop
mov
ret
cmp
cmpl
add
test
decl
scas
popf
sub
dec
jnp
mov
xchg
add
popa
mov
push
mov
push
repz
incl
lea
jbe
mov
jae
sahf
jno
jmp
hlt
test
imul
lret
xchg
inc
sbb
lds
adc
jo
jg
dec
jno
mov
in
insl
sub
fcomps
add
out
push
push
out
mov
xlat
cli
pop
adc
mov
mov
jo
adc
addl
mov
xor
out
imull
popf
and
push
push
lea
idivl
in
sub
mov
decl
or
imul
lret
addr16
in
mov
mov
pop
and
push
fldl
xchg
xchg
sarb
adc
xchg
ljmp
mov
stos
xor
cmp
add
sbb
stos
pop
mov
call
testb
and
push
push
pop
adcl
loop
cmp
add
into
xchg
mov
es
mov
dec
jge
push
and
int3
stos
int3
sub
mov
push
inc
inc
or
outsb
repz
in
dec
mov
ljmp
mov
mov
add
daa
mov
nop
xchg
sbb
in
pop
outsl
lods
mov
or
jne
loop
jl
movsb
xor
movsb
loopne
jno
cmp
adc
or
out
outsl
lods
pop
or
cmp
dec
clc
sub
or
lds
mov
inc
sub
push
mov
imul
hlt
jp
jbe
negb
call
xor
incl
je
sbb
xor
and
jns
fadd
mov
es
lcall
out
jmp
inc
inc
jbe
pop
pop
cld
imul
mov
rol
jg
fsubl
in
adc
pop
pop
loope
cmc
cmp
pop
jns
negl
out
aam
outsl
jne
dec
addb
push
or
call
push
out
mov
cmp
xchg
out
insb
push
cpuid
xchg
ficoms
in
lcall
decl
mov
arpl
push
jmp
or
fs
movsl
xor
out
sbb
outsl
inc
sti
push
stc
outsl
sbb
inc
pop
sbbl
jmp
inc
xchg
pop
cmp
and
mov
cmp
mov
dec
fnstcw
adc
mov
cmc
lcall
data16
cltd
and
sub
mov
addr16
sar
ljmp
insl
push
test
cmpsl
xchg
sbb
bound
add
mov
mov
fildll
int
ret
aad
adc
mov
adc
enter
pushf
dec
cwtl
inc
fsubs
pushl
add
mov
aam
es
mov
mov
clc
mov
outsb
or
push
movsb
cmp
scas
inc
sub
and
sub
mov
jo
call
xor
dec
shr
lods
sarb
push
pusha
inc
adc
call
daa
mov
xchg
push
mov
sub
pmullw
and
xorl
pop
lods
mov
lock
ds
add
mov
out
sbb
and
aaa
pop
push
pop
out
cmp
cltd
xor
ljmp
or
fsubrs
xchg
pushf
aaa
popf
add
or
fwait
and
push
add
inc
cmp
mov
imul
test
push
mov
mov
pop
adc
sub
pop
xchg
dec
jp
incl
pop
rolb
inc
mov
jne
pop
in
push
mov
ljmp
popf
in
mov
filds
jl
decl
cmp
push
fisubrs
dec
cltd
rclb
fnstcw
push
cmpsb
in
mov
aam
sar
inc
cmp
cmp
dec
jno
mov
dec
adc
add
push
arpl
adc
add
movsl
fdivrp
decl
jp
scas
dec
rolb
sbb
stos
popa
xor
pushl
loopne
mov
xchg
aad
add
aad
test
and
adc
arpl
cmp
xor
push
lods
bound
jl
fadd
outsl
lods
das
inc
paddd
cltd
push
out
shll
push
nop
fistl
adc
js
ret
push
inc
sub
push
push
jle
fbld
in
sahf
sub
cmpsl
jnp
jmp
in
cmp
or
lcall
mov
out
repz
jg
das
outsl
pop
push
dec
push
sbb
and
push
out
fldenv
test
std
ljmp
sub
xchg
outsl
push
xor
ret
xor
aas
xchg
sub
test
mov
mov
jmp
xor
and
sti
arpl
adc
outsl
lcall
mov
int
nop
in
shlb
test
xchg
xor
sbb
les
jmp
aas
out
jl
cwtl
dec
hlt
dec
stos
leave
add
sub
mov
inc
daa
insl
test
push
leave
or
xor
pop
ja
lcall
fwait
mov
adc
out
push
jp
pop
and
cmp
out
jnp
mov
pop
xor
add
sbb
decl
sbb
paddusb
mov
mov
inc
call
outsb
xor
jl
push
mov
dec
das
jb
incl
call
out
gs
adc
lock
loop
sbb
jmp
icebp
xor
or
icebp
bound
aam
sub
inc
pop
sub
clc
and
jge
clc
and
mov
xchg
pop
hlt
cmp
xlat
or
push
sar
shlb
cmpsb
push
sbb
divb
and
jmp
jno
inc
jle
mov
pop
adc
xchg
mov
add
das
loopne
mov
mov
movsl
inc
cmpsb
sbb
pushl
or
cmp
or
loope
arpl
xor
inc
xor
lock
popf
movsl
scas
adc
call
sub
iret
xor
inc
jl
cmp
jmp
bound
pop
jo
or
push
inc
cli
incl
push
cmp
xchg
sub
jno
dec
mov
mov
out
and
loope
push
mov
cmp
inc
xchg
xchg
xor
cmp
rclb
jb
sar
push
cltd
fistpll
inc
stc
push
inc
cmc
cs
pop
cli
nop
testl
std
movsb
mov
or
cld
push
mov
leave
dec
or
in
sub
mov
and
roll
push
jae
xor
fbld
mov
scas
mov
jb
negl
out
outsb
jecxz
pop
adc
sub
hlt
jg
sbb
das
dec
cmp
cmpsl
jp
sbb
das
mov
jno
call
das
scas
cmp
loop
jle
push
cltd
and
and
scas
leave
ret
jmp
mov
test
imul
iret
push
mov
ficoml
call
mov
popf
repnz
pop
adcb
fisttps
pop
mov
leave
pop
nop
xor
sahf
rcrb
pop
loop
call
pop
pop
dec
mov
bound
out
lcall
aad
dec
jle
mov
ljmp
stos
inc
jecxz
shlb
scas
mov
jno
cltd
cmc
pop
fists
or
gs
lcall
jmp
data16
mov
pop
push
or
bound
int3
sub
mov
incl
ja
loop
insl
or
fnstcw
add
sub
xchg
decb
cwtl
imul
mov
imul
fneni(8087
in
fstcw
xchg
xchg
sbb
jnp
js
inc
mov
ljmp
enter
lcall
int
repz
fwait
or
inc
push
adc
shrl
inc
push
pop
jmp
sub
jnp
inc
adc
cmp
jne
fnclex
std
mov
add
adc
xor
out
or
dec
xor
push
arpl
xor
je
adc
jb
insl
push
jae
and
insl
and
mov
add
dec
adc
inc
inc
cmpsl
adc
add
fcoms
fsubs
incl
lock
sbb
push
std
add
dec
inc
push
pop
adc
mov
sbb
inc
sub
xorb
add
push
orb
inc
repnz
and
adc
ret
test
addl
add
or
add
push
add
push
and
add
test
in
add
add
xor
dec
xor
or
xor
lea
mov
and
xor
and
xchg
xchg
add
dec
shll
or
or
or
sti
dec
roll
or
pop
adc
insb
lcall
adc
cmpsb
jnp
pop
sbb
shll
cmpsb
sbb
xchg
sbb
xchg
js
jns
jp
dec
shll
cld
pusha
call
call
inc
push
pop
add
dec
shrl
adc
add
pop
add
xchg
rcrb
cmp
xchg
roll
add
movsb
push
pusha
cmpb
cld
in
rcll
filds
mov
cld
add
cld
inc
jle
test
shll
fldenv
cmp
fimuls
mov
iret
mov
in
xchg
jg
mov
jle
or
sti
in
out
push
add
pop
pop
fisubrl
xor
jmp
fcomp
loopne
pop
xor
addr16
push
push
mov
add
mov
xlat
stos
sti
or
push
add
imul
push
or
or
or
push
fs
sbb
push
cmp
xorps
adc
and
adc
pop
and
xor
push
xor
pop
push
pop
push
pop
pop
and
fsubs
insb
pop
insl
test
fldl
jo
sbb
stos
push
das
orl
pop
sbbb
dec
aaa
fsubs
test
add
sahf
or
mov
xor
pusha
adcl
lahf
into
pop
xlat
push
adc
sbb
or
test
xchg
push
fs
push
leave
push
xor
push
outsb
lcall
add
adc
add
jg
pusha
and
add
add
xor
cmp
and
add
sbb
cmp
sub
outsb
fstp
jae
je
push
sub
nopl
sbb
pop
add
pop
or
adc
pop
push
pop
mov
outsb
pop
and
pop
jb
or
inc
pop
shll
stc
dec
push
or
sbb
adc
push
pop
and
insb
jb
daa
cmc
lret
test
sbb
movups
add
adc
add
or
add
sbb
sbb
add
sbb
aaa
or
sbb
sbb
sbb
sbb
ss
ss
or
sbb
push
mov
add
add
sbb
add
dec
sbb
add
add
sbb
sub
push
add
add
xor
in
jmp
pop
lods
push
in
scas
jmp
push
add
ud0
push
inc
inc
dec
test
or
cwtl
dec
lea
mov
jbe
dec
je
dec
jmp
out
ret
ljmp
rcl
pop
push
cld
stos
in
sahf
or
mov
push
rcll
mov
xor
decl
add
repnz
push
mov
lret
ljmp
into
popa
mov
adc
mov
jg
mov
iret
cmc
push
adc
jno
inc
pop
cmp
pop
nop
inc
jo
and
decl
lcall
sub
bound
cmc
pop
jle
inc
dec
lods
sub
inc
scas
pop
push
push
call
xchg
xorb
xor
pop
dec
mov
pop
sub
rcr
pushl
shll
cld
jg
xor
adc
repnz
inc
mov
or
decl
push
cmp
sub
mov
les
jo
pop
jnp
sbb
ss
jl
lret
lcall
or
push
cmp
pushf
insb
bound
and
in
mov
add
adc
lock
out
fisttps
push
push
call
ds
cwtl
cmp
mov
and
push
fadd
inc
jp
stos
outsl
inc
shll
movsl
push
scas
out
mov
pusha
pushf
pusha
push
nop
pop
pushf
mov
adc
mov
out
push
jmp
call
bsf
not
add
xchg
mov
lea
pusha
adc
and
add
std
inc
add
ds
stos
movsl
pushf
mov
mov
pop
cmp
call
jne
add
or
int3
into
daa
jmp
sub
ja
cwtl
push
cmp
shr
or
add
and
daa
pop
pop
or
push
mov
push
mov
pushf
jmp
xchg
or
or
pusha
cmpsb
outsl
adc
sbb
addl
xor
push
sub
call
sub
test
or
xor
fwait
pushf
xchg
lahf
lock
ds
movsbl
setb
push
push
xor
fstpl
xor
mov
addr16
pop
ud2
outsl
loope
fwait
shl
sti
inc
call
ja
mov
sbb
dec
call
pop
add
mov
mov
les
and
push
push
je
inc
inc
call
mov
or
jne
mov
sbb
fistps
or
push
push
or
ret
cmp
or
pop
cmp
cmp
lock
xchg
mov
cwtl
loope
mov
call
lock
sti
mov
stc
nop
js
push
sar
sbb
adc
jmp
lcall
mov
push
pop
fiaddl
push
fldt
sbb
fdivr
pop
int3
sub
testb
sub
pop
push
and
mov
pop
call
xlat
mov
or
pop
bswap
jmp
add
and
mov
in
cld
or
push
mov
fisttps
pop
or
jmp
add
or
push
jo
outsl
mov
xlat
lret
nop
mov
add
popa
mov
mov
aaa
add
enter
stos
fdivs
std
push
sub
orl
imul
push
incl
fsubrs
add
mov
mov
std
out
sbbb
ljmp
mov
jecxz
adc
mov
jo
mov
pusha
cmp
stos
cmp
loope
sbb
movsb
or
and
and
jmp
fnstsw
add
dec
movsb
xor
js
iret
lret
nop
adc
adc
mov
sbb
scas
call
or
cld
sarl
push
ret
outsl
mov
cmp
pop
fadd
add
cmp
sbb
push
dec
movsb
add
push
mov
pop
push
sub
pushf
ja
ja
mov
and
jmp
je
not
cmp
pop
ret
mov
flds
jmp
jle
call
cld
inc
ds
add
lea
cmp
in
ret
sbb
mov
call
adc
and
clc
lret
call
or
mov
xchg
xbegin
pusha
dec
adc
imul
sub
xor
xchg
ficoml
push
push
pop
aam
jns
aaa
sub
icebp
dec
mov
push
mov
data16
jmp
cwtl
lahf
pop
jae
jnp
test
adcl
push
add
push
cld
or
adc
sub
ja
fiadds
shll
or
js
xchg
cmp
push
call
pop
adc
adc
leave
cmp
sbb
pushf
adc
cmp
mov
movsl
inc
inc
or
outsl
adc
jmp
sbb
call
cwtl
scas
mov
pop
jp
mov
sahf
loope
in
push
loop
sbb
or
xor
mov
rep
xchg
or
push
sbb
loopne
fstps
call
pusha
mov
popa
div
dec
ficompl
clc
rclb
dec
pop
jg
scas
jmp
fwait
sti
jbe
loop
inc
fwait
push
js
in
push
enter
iret
mov
cmp
xorl
mov
add
push
mov
loope
push
add
inc
test
rclb
jle
jo
jmp
shlb
cmpl
cmp
xlat
mov
or
cltd
lds
int
mov
xor
rcrl
add
add
fmull
fmul
fsubs
pop
mov
ljmp
push
fwait
and
jmp
fdivrp
pop
daa
push
xchg
push
mov
in
loop
jmp
sbb
xor
ja
jmp
sarb
dec
fnstcw
mov
push
loope
mov
lcall
inc
mov
or
push
add
pop
lahf
mov
sbb
hlt
xchg
push
cli
push
movsb
xchg
sahf
cmp
mov
test
pop
push
adc
movsb
leave
pop
xchg
cmp
xchg
lods
sarl
dec
dec
shlb
jmp
mov
scas
insl
push
sub
sub
adcb
fisttpl
jo
xchg
ss
aaa
jl
out
shll
mov
je
popf
add
outsb
and
mov
ja
je
loope
sub
enter
cld
arpl
xor
jecxz
pop
mov
mov
cld
sbb
xor
or
outsb
incb
inc
add
insb
shlb
push
fcom
sahf
push
loope
or
loopne
int3
ss
pusha
jne
in
xor
cmp
adc
mov
je
or
retw
dec
cmc
addl
cmp
or
cwtl
imul
nop
sti
xor
adc
outsb
shll
jb
fsubrp
pop
mov
je
lret
jne
fisttpll
jmp
aad
cmp
fiadds
stc
je
push
jo
inc
mul
ret
in
xor
fcmovnbe
fsubs
cmp
adc
nop
jmp
jecxz
aaa
jo
push
add
mov
lock
add
call
into
lds
pop
dec
inc
aad
pusha
sbb
inc
psubsb
ss
mov
lret
pusha
call
ret
mov
outsl
ret
imul
ja
mov
adc
pop
iret
dec
mov
jg
jmp
jae
popf
dec
fstl
inc
mov
add
pop
jno
out
jmp
sbb
push
sub
lock
adc
out
push
or
pushf
push
jb
ja
dec
inc
pop
insb
add
call
mov
pushl
inc
ret
mov
imul
push
pop
cmp
push
repnz
popf
sbb
lahf
cmp
xchg
xchg
mov
inc
push
sbbl
push
ret
aaa
sub
adc
cmp
call
call
fidivrl
sbb
jecxz
sbb
lock
inc
fidivrl
leave
int
popf
roll
test
and
shrl
add
std
adc
sub
push
loope
out
imul
xor
jmp
ds
es
loopne
popf
lret
daa
sbbb
int
mov
cmc
dec
xchg
cmp
mov
movsl
sbb
add
push
sar
pop
insl
mov
mov
dec
xchg
rorl
js
mov
cmp
mov
mov
std
push
sbb
call
mov
mov
push
fisttpll
pop
call
out
or
xor
sbb
adc
push
and
push
imul
clc
push
fs
add
das
sub
shrb
mov
test
out
mov
bnd
jmp
cmp
xchg
icebp
pushf
push
or
mov
push
jecxz
test
mov
cmp
sub
sbb
mov
insw
insl
adc
xlat
jmp
ss
mov
orl
pusha
scas
cmp
or
and
outsl
inc
and
dec
mov
addl
or
lahf
sti
xor
xlat
bnd
adc
imul
insb
std
subl
or
push
xor
nop
mov
jl
add
and
fldl2t
int
mov
stos
ret
xchg
mov
mov
dec
mov
sbb
rorl
in
lcall
rep
jmp
les
jb
loop
fstpt
aad
sbb
sbb
cmpsl
push
mov
fcoms
push
clc
call
add
mov
and
je
push
data16
or
push
and
push
shrl
inc
pop
add
xchg
in
ljmp
loope
xchg
jns
fmuls
popf
std
fistpll
sbb
mov
jge
call
aam
inc
outsl
add
dec
xor
rol
adc
mov
lods
inc
push
push
ss
testb
push
or
std
ss
cmc
xchg
das
add
mov
sbb
mov
push
lea
push
leave
push
ja
push
pusha
shll
and
rorb
pop
lret
jae
cmp
call
notb
pusha
loopne
xor
mov
movsl
iret
ret
pusha
das
fidivl
xor
call
test
cmp
setl
and
jae
outsl
in
dec
lret
or
in
jmp
add
push
xorb
lods
lds
push
clc
data16
hlt
sbb
lret
stos
or
das
fadd
loopne
xor
call
jbe
fsubr
cmp
repz
lock
shll
sub
xlat
sarb
mov
pusha
out
pusha
mov
mov
int
cmp
add
push
push
mov
mov
jmp
push
inc
clc
jp
ds
push
xor
cmp
mov
mov
filds
aas
sbb
dec
sub
inc
mov
lods
movsl
sbb
pop
into
call
popa
xlat
jge
call
call
add
jl,pn
mov
mov
hlt
push
idivl
and
ds
adc
cmp
xor
ljmp
lea
seto
mov
pusha
sub
dec
pushf
scas
or
push
lock
mov
mov
push
call
xchg
xor
pusha
or
ret
subl
xchg
inc
cmpsb
mov
call
sbb
mov
subb
pusha
pop
and
mov
push
dec
fnstcw
rep
sbb
mov
ret
inc
mov
add
cmp
stos
jmp
xor
pusha
jmp
dec
inc
adc
ret
jmp
push
sub
loopne
out
adcb
cmc
das
cmp
je
xor
xchg
loopne
loopne
cld
outsl
mov
fwait
mov
pop
pop
mov
push
push
scas
mov
sarb
in
iret
cwtl
or
or
ja
stc
mov
mov
popf
lret
cld
mov
addb
push
out
push
push
xchg
inc
mov
adc
ss
mov
or
lret
jmp
fistpl
lret
imul
ret
inc
in
and
xor
dec
mov
je
and
add
aam
mov
rcrb
xor
pop
push
push
and
mov
pextrw
sbb
fdivl
loopne
rorl
sbb
aas
sbb
call
or
jbe
movsl
and
movb
les
ret
jmp
cmc
sar
pop
cmp
sub
pop
push
and
insl
mov
xor
mov
mov
push
sbb
add
aas
adc
cmp
cmp
mov
adc
dec
loopne
push
repz
sbb
xor
inc
mov
gs
cld
shrb
dec
adc
call
push
les
sbb
xchg
insl
push
mov
jnp
ret
mov
lea
gs
push
mov
stc
push
in
cmp
xor
or
add
pop
in
pop
insb
insb
xchg
sub
lea
pushl
jmp
mov
imul
loope
cs
mov
add
xorb
mov
rcrl
dec
std
dec
jl
pop
xor
dec
jg
pop
add
xor
pop
jmp
mov
xchg
or
ja
mov
mov
add
aad
ljmp
xchg
in
sbb
jge
adcb
adcb
mov
sahf
call
pop
or
pushf
mov
and
pushf
filds
int3
mov
pushf
push
push
mov
xchg
lock
ret
testb
push
fstl
stc
icebp
mov
dec
lods
lock
enter
cli
jp
mov
push
ljmp
xlat
add
out
cs
mov
frstor
adc
jb
add
cmpsl
das
std
lcall
in
mov
push
leave
or
push
shl
arpl
or
mov
jecxz
call
push
add
adc
and
out
cld
inc
icebp
iret
sub
mov
call
out
incl
les
idivl
ret
mov
popa
nop
decl
aad
aad
inc
cmp
mov
or
stc
out
sti
jne
out
gs
lcall
jae
out
mov
xor
push
xchg
cmp
ljmp
loop
inc
addr16
xchg
adc
cwtl
nop
int3
add
mov
dec
std
mov
pushl
pop
mov
jecxz
sti
clc
jle
dec
fists
push
std
imul
sahf
shll
call
int
and
pop
int
adc
cmpl
loopne
push
sbbl
and
jmp
jmp
ficoms
mov
push
lock
std
std
xchg
xchg
push
mov
ret
jo
imul
les
lcall
push
pushf
mov
pop
aas
ss
out
out
sbb
jge
sbb
and
incl
rolb
fsubs
cmpsl
test
mov
xchg
shll
jg
call
test
in
in
xchg
push
cmpsl
in
jno
aas
or
addr16
aam
ljmp
cmc
insl
mov
xchg
imul
mov
fsubrs
insl
inc
pop
push
inc
loopne
dec
in
std
jge
imul
push
mov
mov
push
pop
int3
in
gs
mov
das
ljmp
adc
xchg
xchg
mov
lock
imul
add
mov
jmp
pop
xchg
mov
xor
sbb
dec
mov
decl
mov
ret
jge
mov
lods
sub
popa
push
pushl
mov
xor
jge
adc
dec
dec
push
and
aam
pop
ljmp
mov
insl
out
xchg
movl
jns
fs
push
mov
dec
rcll
xchg
roll
js
dec
mull
shrb
jg
dec
fimull
ja
insl
data16
ret
inc
addr16
gs
out
int
outsb
shrl
pop
xchg
xor
outsl
iret
int3
dec
jne
in
call
pop
push
ret
insl
ss
push
loope
es
movb
jmp
insl
xchg
popa
adc
add
outsl
mov
fwait
clc
mov
mov
push
aam
insl
sti
mov
lcall
dec
clc
pop
ret
and
insl
mov
xlat
pop
pop
mov
into
jg
lods
fstpt
in
dec
dec
mov
pop
aam
pop
enter
adc
test
jo
fwait
adc
cld
cs
outsl
sub
add
stos
and
and
call
or
adc
inc
lea
gs
lcall
add
xchg
ret
int
gs
or
decl
pop
loopne
scas
in
dec
jno
in
mov
inc
aam
push
iret
insl
mov
sub
test
lahf
mov
mov
repnz
xor
mov
dec
xor
lods
push
insl
pop
push
fisttps
mov
adc
inc
mov
std
daa
insb
mov
push
aaa
pop
push
insl
daa
shrb
jge
jns
mov
and
mov
push
mov
fsubl
dec
xchg
push
push
arpl
add
mov
pop
xchg
and
dec
mov
and
rcl
imulb
jae
xchg
cwtl
sti
loop
sarb
or
sub
shll
mov
ret
mov
mov
data16
insl
or
mov
push
dec
lock
out
xchg
aas
or
jbe
cwtl
mov
and
aam
push
xchg
ljmp
inc
test
std
xchg
popa
popa
cmp
pop
mov
out
add
cmp
push
test
cmp
sarb
in
je
mov
and
fsin
xchg
aaa
shlb
enter
nopl
push
dec
mov
insl
adc
fildll
jp
in
outsl
inc
xchg
aam
rorl
rcll
xor
jle
jge
lock
cltd
jl
push
xchg
dec
push
cmpsl
push
or
mov
addr16
pop
inc
outsl
mov
jg
ret
outsb
std
mov
outsl
pop
out
int3
imul
ja
push
insl
ss
mov
xor
xchg
push
fucomp
pop
clc
pop
fcomp
sub
or
dec
stos
xor
aas
pop
xorl
mov
xchg
push
incl
dec
fldl
repnz
addb
in
mov
in
incl
repnz
dec
iret
test
pop
cvtps2pi
cmpsb
addl
lods
sbb
gs
cld
jmp
dec
jge
icebp
inc
cmp
xlat
loop
add
push
jmp
jg
xchg
mov
mov
jg
xchg
push
neg
add
cmp
jb
mov
std
fcoms
xlat
call
clc
push
adc
fistpll
push
sbb
dec
cmpsl
dec
push
in
sub
push
xchg
das
aad
jecxz
push
lods
fiadds
in
and
into
xchg
fsub
out
mov
pop
cwtl
jg
sub
push
roll
andb
xchg
adc
in
push
or
addl
sti
jb
xchg
cld
sbbb
sar
inc
or
dec
mov
hlt
push
xchg
out
cs
decb
sub
fwait
pop
ret
lds
hlt
rclb
dec
std
lock
cmp
aas
and
pop
arpl
adc
loop
ljmp
mov
jb
add
fsubs
and
ret
lds
in
xchg
mov
cmpl
imulb
push
adc
mov
and
jge
mov
push
flds
js
add
jb
push
mov
mov
adc
adc
push
ja
mov
hlt
pop
push
mov
movsl
inc
call
das
mov
dec
stos
out
outsl
jle
dec
test
lcall
pop
cmp
int3
dec
dec
aad
jns
gs
rol
mov
mov
int
sti
mov
and
xor
cmc
mov
adc
push
fdivr
pop
loop
inc
pusha
addb
rcl
jp
ret
inc
loop
pop
aaa
test
push
fisubrs
xor
mov
dec
dec
xchg
sub
lea
sahf
xor
push
xor
imul
es
lahf
adc
ljmp
jmp
mov
push
fs
and
sbb
dec
dec
imull
push
dec
sub
pop
arpl
ret
pushl
pushf
inc
dec
rcl
sbb
or
aad
mov
aaa
add
fdiv
push
shlb
xorl
mov
pushl
add
movsl
sbb
int
loope
sbb
mov
or
fwait
test
jg
add
je
out
jecxz
add
sub
jmp
push
scas
sbb
pop
sub
jle
jg
mov
outsl
fcomi
push
adc
inc
stos
mov
jmp
std
addr16
leave
inc
dec
aad
insb
inc
nop
and
fimuls
stc
loop
clc
push
decb
push
mov
inc
and
das
or
sub
out
insb
xorb
sub
mov
repnz
jno
pop
add
cmp
arpl
pop
clc
call
pop
inc
clc
popf
das
push
pop
pop
pop
mov
and
decb
out
and
push
iret
xorl
mov
adc
xchg
addl
jmp
aas
xchg
pop
adc
adc
test
mov
das
jl
pushl
push
fdivs
push
gs
fs
adc
ds
cmpsb
mov
test
add
frstor
daa
clc
push
cmp
aaa
cld
sbb
or
fcoml
call
decl
mov
sub
push
jecxz
movsb
fwait
lcall
sbb
pop
scas
cmp
sbb
cmc
inc
mov
lcall
xchg
pop
jp
inc
xchg
jb
fimuls
mov
xor
stc
out
adc
mov
in
movsl
jl
xchg
adc
pop
add
fcmovnb
insl
or
cld
fcomip
mull
inc
jmp
pop
xchg
insl
mov
dec
jle
push
loope
inc
adcl
mov
dec
cmp
sub
sahf
mov
inc
xor
jmp
mov
add
cmc
xor
stc
dec
mov
scas
and
mov
push
arpl
sbb
adc
adc
adc
pushl
jne
xchg
aas
and
adc
addr16
jmp
adc
cmp
cltd
jb
bswap
stos
inc
imul
testl
je
mov
inc
fcomp
iret
xchg
add
and
or
or
sub
push
shrd
sub
loope
inc
js
shll
mov
aaa
xchg
xor
dec
adc
test
jmp
xchg
movsl
mov
pop
xor
mov
pop
decl
adc
inc
scas
fstl
and
jo
adc
push
fdivl
or
outsl
andb
jns
dec
dec
rorl
xchg
pop
cmp
call
mov
repz
adc
dec
enter
dec
lcall
sahf
adc
and
push
rcll
sbb
pop
inc
adcb
fistps
cmp
outsl
sbb
jmp
and
pop
loop
test
adc
or
jg
gs
in
incl
push
adc
pop
ret
add
test
xor
mov
jb
and
pop
push
daa
mov
cmp
outsl
cs
sub
enter
dec
std
incl
sub
out
pop
and
sub
sahf
cwtl
js
sub
xchg
cmpl
ja
adc
mov
in
jns
gs
and
addl
jmp
idivl
repz
lods
nop
xchg
xlat
shrl
xchg
aaa
adc
outsl
inc
pop
sub
inc
dec
outsb
decl
rcr
xchg
iret
add
ds
aas
mov
loope
and
js
test
dec
pop
leave
push
cmp
call
xor
out
sub
push
iret
popf
insl
cld
repnz
adc
loopne
rorl
gs
sbb
push
rclb
cmp
cld
shrb
cmc
daa
leave
and
andb
test
sbb
jle
pop
iret
js
jmp
mov
lcall
aad
jmp
mov
sbbl
and
jno
ja
and
in
ljmp
test
loopne
mov
jno
or
fdiv
arpl
leave
dec
push
sbb
fsub
and
and
mov
adc
test
notrack
mov
inc
pop
push
fs
inc
adc
mov
clc
sub
popa
xor
stc
out
mulb
or
mov
jmp
jg
mov
push
aam
out
inc
pushf
notb
inc
fistpll
xchg
leave
inc
inc
ljmp
inc
ds
push
inc
add
neg
outsb
lea
shll
lcall
xchg
cmp
xchg
das
cld
or
push
ret
cltd
pop
adc
or
adc
jle
movsl
pop
inc
cmpsl
sub
arpl
adc
je
lcall
sarl
jl
lcall
xor
lds
add
and
add
fcos
outsl
shrb
imul
das
icebp
loope
xchg
subb
jg
xchg
mov
adc
aas
jge
in
mov
lods
shll
fs
push
in
cmpsb
popf
fwait
call
pop
mov
int3
mov
jg
aad
clc
jmp
adc
inc
lods
cmp
sbb
push
pop
repnz
sar
push
pop
loopne
xchg
rcrl
and
fcomp
mov
icebp
mov
push
jg
pop
ljmp
sub
lods
push
and
xor
mov
andl
mov
ljmp
sbb
mov
jmp
dec
ret
fmul
mov
dec
sbb
loope
fs
adc
cmpsl
jl
jg
or
mov
jge
add
adc
sub
xchg
adc
pop
clc
jo
fnsave
fcmovnb
iret
stos
aas
insb
jge
loope
gs
mov
ret
push
aaa
add
pop
clc
xchg
adc
jle
out
in
adc
insb
insl
jne
aas
pusha
pusha
inc
bound
scas
sbb
call
arpl
mov
push
sub
and
cmovnp
aad
test
incl
decl
gs
push
pop
out
ret
sbbb
push
add
mov
jecxz
sub
imul
pop
ja
push
jg
lcall
cs
sbb
fs
leave
inc
inc
adc
stos
cmpl
subl
xchg
pop
mov
cmc
mov
imul
mov
inc
push
push
repz
xchg
shr
xchg
das
dec
in
mov
add
int
aaa
jmp
adc
test
outsl
icebp
in
mov
inc
clc
xchg
cmp
out
cli
incl
out
sub
pop
sub
hlt
adc
fistpll
sbb
and
daa
sub
shr
mov
int
dec
adc
scas
and
mov
add
fiaddl
aad
jp
fs
add
xchg
stos
dec
and
fadds
dec
outsl
fs
gs
popa
outsb
fs
jnp
imul
fs
xchg
les
outsb
je
stos
push
in
dec
jo
pop
jge
push
xor
push
jb
je
jge
mov
push
sbb
push
mov
sbb
gs
imul
ficoms
inc
jns
sub
xchg
pop
div
dec
push
jb
inc
imul
ja
sbb
jbe
pushaw
push
je
push
push
fstp
outsb
sbb
gs
mov
or
push
mov
in
adc
inc
insb
insb
adc
add
fmuls
xor
dec
inc
dec
inc
push
or
sub
dec
outsb
outsw
or
inc
mov
push
jns
push
xchg
sub
cmp
or
push
aad
or
sbb
inc
pop
inc
mov
and
jae
pop
push
inc
stos
gs
push
outsb
push
outsl
fs
and
inc
jo
icebp
lcall
adcl
xchg
dec
inc
dec
popa
jo
test
decb
jne
push
data16
loope
loope
inc
aaa
push
bound
fsubrs
xchg
outsl
jns
sbb
out
push
cmp
js
iret
push
adc
imulb
bound
bound
insl
scas
into
outsb
sbb
push
or
js
push
je
add
out
shlb
insl
test
or
cmp
in
nop
arpl
xchg
pop
inc
pop
jae
jnp
jmp
je
js
sub
add
test
mov
push
add
outsb
mov
xor
or
outsb
jae
inc
adc
inc
mov
pop
push
shll
fst
jbe
inc
dec
mov
adcl
dec
fsubs
mov
push
jb
adc
mov
inc
adc
push
fwait
data16
add
xchg
lsl
push
outsl
xchg
gs
xchg
adc
xchg
adc
or
lret
sbb
stos
xchg
add
ss
cld
ret
cli
pop
cld
in
dec
dec
loopne
sidtl
add
js
ret
inc
add
add
or
add
mov
mov
pop
pop
add
add
sub
pop
arpl
data16
mov
push
ret
inc
adc
in
imul
nop
js
aaa
mov
pusha
cs
or
or
push
add
or
stos
add
fdiv
fistl
dec
jae
arpl
add
mov
add
repz
adc
dec
scas
jmp
mov
or
and
pop
and
cmp
add
test
add
mov
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
