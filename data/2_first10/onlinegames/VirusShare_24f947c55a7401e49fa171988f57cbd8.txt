out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
sbb
loope
filds
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
jl
jae
and
push
push
or
scas
dec
mov
pop
dec
mov
sbbb
ret
pop
xor
or
shrb
adc
clc
inc
xchg
xor
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
sbb
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
or
push
add
adc
fwait
movsl
xlat
mov
and
jb
jae
lahf
hlt
mov
pop
pop
push
mov
mov
dec
mov
cmpsl
mov
lea
xchg
dec
in
in
mov
mov
xor
or
jp
sti
add
sub
mov
cli
adc
dec
xchg
pop
inc
cmp
adc
jmp
dec
and
mov
iret
mov
cmpb
inc
add
adc
cwtl
stc
sbb
xchg
in
sub
dec
push
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
out
mov
sub
andb
xor
call
add
push
jne
mov
mov
mov
inc
inc
test
jne
push
jae
negb
pop
push
mov
sbb
inc
fstps
cld
push
push
std
movsl
pop
lcall
int
sub
add
je
popa
add
sub
shrb
pop
add
add
sub
popw
or
insb
int
push
jne
insb
inc
or
lret
cmpsb
pop
cmpsb
test
inc
add
stos
iret
leave
push
out
mov
test
push
sbb
cmp
insb
pop
popa
jb
cmc
insb
sbb
push
push
and
test
popa
sbb
je
push
pusha
adc
dec
push
push
pop
negl
das
lods
sti
mov
out
enter
xchg
movsl
pop
lcall
movsl
pop
lcall
les
shrb
popf
sarl
dec
xchg
mov
test
sti
lahf
fnstenv
adc
add
lea
jmp
xorb
sar
xor
or
mov
mov
add
dec
push
mov
jo
imul
xchg
mov
dec
pop
cld
test
bound
int3
pop
cmpsb
inc
arpl
pushf
mov
daa
jno
leave
int
scas
iret
mov
daa
roll
shr
shll
jb
aad
or
mov
jp
jb
adc
divl
adc
add
les
inc
lods
mul
push
sarl
mov
shr
iret
or
mov
or
shrb
int
adc
dec
fstl
push
and
mov
insb
js
ret
pop
add
push
cmp
outsl
jb
pop
mov
je
jae
pop
fwait
popf
cwtl
sar
xorl
ss
or
arpl
fs
sbb
add
or
jecxz
dec
xlat
xor
stos
fs
int3
je
or
shll
sti
lods
add
lods
rorb
xchg
ret
into
push
or
pop
imul
fldlg2
or
gs
jg
enter
data16
jl
cld
in
in
bound
inc
mov
sti
iret
leavew
push
or
xor
ret
ret
int3
push
hlt
inc
mov
mov
adc
cmp
in
push
daa
inc
js
notl
hlt
xor
jo
mov
insb
call
mov
in
cs
out
and
mov
pop
lock
stc
mov
hlt
jp
inc
jle
movsb
hlt
insl
add
xchg
movsb
lods
hlt
or
jp
xchg
xor
sbb
arpl
fimuls
dec
je
adc
add
add
push
out
or
add
jmp
mov
xor
adc
movsb
or
dec
sub
mov
add
fs
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
or
push
and
and
hlt
xor
pop
lcall
pop
and
xor
dec
pop
imul
imul
shll
add
xorb
shll
mov
imul
scas
push
xchg
add
int3
or
pop
add
outsl
aas
jmp
fbld
adc
je
insw
addr16
xor
xor
push
gs
stc
jmp
jne
push
jb
jbe
insb
gs
jae
jae
gs
xor
pop
add
push
push
dec
pop
and
pushw
gs
outsl
imul
lods
or
pop
adc
mov
cs
and
imul
pop
jo
push
fs
imul
mov
sarl
push
out
sbb
in
cmp
stos
nop
adc
repz
adc
add
inc
dec
jle
in
xchg
cmp
cs
insb
inc
push
push
dec
inc
dec
push
add
dec
jp
subb
and
ret
adc
nop
adc
or
jmp
add
add
nop
sbb
inc
add
mov
add
add
pop
mov
int
mov
add
push
push
addr16
insl
and
outsb
outsb
outsl
je
pushl
and
outsb
and
inc
dec
push
and
fs
fstpl
negb
dec
cmc
adc
or
je
or
loope
std
enter
mov
or
lret
fnstcw
enter
getsec
push
imul
push
push
inc
dec
add
rol
push
fnstenv
add
or
or
or
faddl
mov
adc
add
mov
or
sbbl
test
fs
add
mov
idiv
inc
bound
push
int
cs
fs
je
sbb
in
lahf
mov
fistps
mov
insb
outsl
arpl
cmpsb
movsb
jmp
push
push
inc
insb
cmp
inc
daa
add
mov
lcall
mov
xor
mov
add
adc
xor
shll
pusha
outsb
pop
jle
shll
fsubrp
imul
jne
jnp
inc
ss
cmp
jg
add
xorl
ficoms
daa
pusha
and
gs
repnz
jmp
xor
js
add
add
pop
insl
push
xchg
pop
jb
mov
pop
xor
jnp
outsl
fs
add
adc
add
je
cs
push
add
mov
mov
mov
cmp
mov
mov
mov
mov
mov
lea
mov
sbb
neg
notb
mov
or
or
iret
add
or
mov
test
push
push
hlt
je
andl
jge
adc
fldt
inc
cmp
jne
mov
aaa
push
call
add
or
pop
incl
cmpl
sbb
cmp
jl
aas
mov
jmp
pxor
ja
dec
or
movzwl
mov
pop
jmp
sbb
out
incb
cmp
jb
adc
je
cmp
ja
mov
jg
and
cmp
jb
daa
in
add
push
or
andb
sbb
rorb
out
add
add
add
cltd
in
arpl
and
jge
inc
jmp
data16
push
or
les
movsl
je
addb
in
jge
push
lea
rclb
mov
adc
adc
mov
mov
int
jmp
lea
incb
pop
pop
jmp
adc
mov
outsb
insb
ja
orl
sbb
lock
in
movb
fwait
in
mov
or
outsb
call
pop
outsb
adc
xor
xor
cs
fs
out
insb
arpl
xlat
sub
pop
ss
dec
cmc
jo
idivl
mov
jbe
clc
adc
dec
cli
outsl
pop
sti
arpl
pop
fisubl
jae
jae
mov
mov
xor
cmpsb
imul
imul
lcall
loope
shll
jne
insb
xor
and
insb
outsl
arpl
dec
into
fidivrs
mov
xchg
test
fcoml
fstp
popa
nop
cmpsb
fistl
push
outsl
jp
cmpsb
sbb
gs
fwait
cmpsb
imul
cld
or
inc
enter
shll
push
shll
je
push
lock
call
sbbl
jb
and
pop
sbb
in
mov
xor
inc
fs
jo
leave
push
shrb
dec
dec
shll
dec
jo
xlat
push
jb
aaa
dec
shll
gs
lahf
or
and
imul
fwait
in
xor
and
je
data16
fmuls
fiaddl
fldt
jne
shll
push
jb
jbe
xor
xorl
daa
gs
sti
and
popa
jne
inc
call
or
lock
imul
cmpsb
imul
imul
pop
movsb
addr16
mov
fwait
sbb
xor
call
incb
mov
cld
iret
sahf
jae
jl
adc
adc
popf
adc
shrb
add
fmull
add
addb
pop
xchg
push
adc
push
call
push
sti
jbe
add
cld
fnsetpm(287
sbb
or
add
push
repnz
add
pop
in
daa
test
add
mov
add
and
pop
inc
ds
add
nop
adc
adc
sahf
push
call
xchg
push
aaa
pop
adc
adc
pop
cmp
pop
jae
or
add
push
fcoml
add
jne
cld
orb
pusha
or
jae
clc
gs
xor
cmp
jne
push
outsb
ret
data16
jmp
adc
cmp
adc
adc
je
sub
pop
pop
lea
inc
add
or
lcall
clc
std
inc
and
mov
xchg
insl
xor
mov
cld
mov
or
fs
xchg
hlt
sbb
or
mov
mov
or
add
mov
push
jnp
adc
adc
data16
cmpb
je
inc
outsl
adc
call
daa
sbb
insb
push
inc
loope
je
push
lock
inc
add
cmp
jl
xchg
cmp
mov
or
lock
mov
or
ljmp
iret
mov
addr16
mov
xchg
push
mov
dec
pop
dec
jne
pop
call
sbb
addr16
jmp
mov
out
xchg
adc
cmp
xor
aad
mov
clc
cmp
je
adc
or
or
sahf
rcrb
sbb
ret
push
cmp
shrb
std
or
lea
or
cmp
jne
xlat
cmp
push
dec
fdivs
push
adc
mov
fstpl
fimull
fldt
mov
adc
cmp
in
hlt
pushf
rcll
or
sti
sti
and
cmp
sub
sti
xor
movl
lea
fwait
adc
aas
mov
cs
sub
or
mov
call
inc
pop
scas
and
add
in
mov
push
mov
jmp
push
sbb
and
out
das
jmp
mov
je
xchg
push
insb
cmp
fistl
pusha
jne
loopne
adc
push
imul
add
or
or
hlt
or
jb
mov
jecxz
adc
or
jl
flds
adc
cmp
int
je
mov
bound
mov
push
mov
mov
fstps
es
test
scas
pop
ss
pop
push
mov
sbb
cmp
mov
sbb
fsubrl
scas
xchg
lret
push
and
xor
mov
or
pop
outsl
xor
mov
gs
js
jo
mov
lretw
int3
outsl
int
pop
into
iret
pop
pop
ss
shrb
and
rcl
gs
mov
lcall
outsb
insb
lcall
outsl
outsb
cs
xor
nop
cld
mov
ret
nop
xlat
lea
add
adc
jne
inc
adc
pop
sbb
loop
test
idivb
xor
xchg
lret
xchg
in
mov
push
push
cmc
cmp
or
push
jmp
sub
scas
inc
test
int
adc
xchg
sbb
call
ss
jb
punpckhbw
shr
rorb
dec
xchg
orl
pop
jmp
push
test
add
mov
jns
xchg
ds
ret
or
inc
or
or
and
cmpw
jne
dec
cmp
cmp
mov
clc
xor
mov
cld
outsb
cmp
je
lods
sbb
jle
cmp
sub
cmp
js
sub
jo
daa
cmpl
jb
dec
jl
push
decl
iret
push
jae
cld
je
fisttps
or
fisttps
push
inc
das
lds
mov
mov
adc
test
inc
loop
cltd
and
roll
pusha
loop
fwait
jge
pop
add
sub
jb
clc
fisttps
incl
mov
out
mov
lods
inc
cmpl
mov
rcr
int3
mov
mov
in
mov
sahf
andl
or
jmp
jle
movzwl
mov
cmc
xchg
mov
add
ljmp
cmp
mov
mov
adc
add
push
xchg
into
mov
or
jne
or
sub
ss
adc
ss
or
cmpsl
xchg
xor
outsb
adc
js
lock
mov
inc
jl
add
xchg
jecxz
jmp
push
bound
jmp
jae
je
and
loop
repz
pushl
jno
push
mov
mov
dec
adc
sbb
loopne
outsb
inc
adc
iret
fcomip
or
lcall
lea
pop
mov
pushl
addr16
loope
ret
push
scas
clc
add
sub
cmp
lcall
mov
pusha
adc
adc
mov
cmc
xor
insl
andl
jle
sbb
pop
lods
jmp
push
call
adc
dec
data16
lcall
jo
cmp
add
mov
les
push
xlat
jl
fstps
push
fcoml
xor
pop
xor
je
xchg
and
jecxz
or
call
int
inc
mov
add
fsubrl
arpl
inc
cmp
testb
je
shl
mov
or
jae
addr16
jmp
or
mov
push
sti
gs
add
clc
add
into
out
and
inc
xchg
pop
jecxz
sbb
data16
adc
fbld
mov
js
int
inc
xlat
mov
inc
adc
prefetchwt1
or
insl
loopne
pushf
jne
nop
sbb
aad
insb
or
mov
sub
or
inc
cmpsb
imul
imul
jl
gs
push
sahf
nop
xchg
mov
or
mov
and
pushf
addr16
cmp
or
or
jo
pop
arpl
mov
test
push
pop
sbb
add
xorl
jne
push
in
and
xor
push
repz
fs
lock
out
mov
mov
js
cmp
adc
and
add
lods
std
insl
push
push
push
mov
mov
movzbl
add
mov
add
jmp
mov
jecxz
in
inc
jle
fists
sbb
dec
mov
or
test
lret
inc
jmp
push
sub
neg
adc
add
sbb
not
and
mov
adc
fbstp
jl
add
jg
loop
adc
inc
cmp
jg
cmp
shll
cmp
je
mov
mov
hlt
mov
std
lcall
cmp
mov
xchg
sbb
imul
sbb
jl
adc
fcoml
in
and
test
mov
push
push
adc
xchg
mov
sbb
or
mov
or
mov
add
sbb
lea
jb
sub
jle
test
pop
jae
les
out
movsl
mov
popa
mov
movsb
xor
out
cmp
cmp
adc
mov
inc
lcall
adc
ja
cmp
and
outsl
add
fs
imul
mov
mov
jae
dec
popa
outsb
fs
add
push
inc
sti
insl
jnp
xchg
push
imul
popa
je
adc
fdivrs
sub
dec
outsl
fs
adc
insl
adc
idivb
gs
inc
fs
arpl
iret
into
xlat
imul
imull
jb
push
das
nop
add
imul
pushl
addr16
dec
bound
arpl
push
sub
jae
mov
lods
imul
push
gs
dec
xchg
jno
dec
pcmpeqb
jb
jb
mov
insl
lods
fsubrl
or
idivb
gs
movb
xor
jo
mov
jns
je
dec
cmpsl
bound
inc
insb
sarl
cmp
outsb
int3
enter
mov
mov
xor
push
add
aaa
insl
jo
cmp
fcomp
mov
outsl
outsl
insb
push
insl
jo
push
outsb
popa
jo
push
fcmovnu
addr16
lds
jne
insb
je
xchg
fiadds
dec
push
addl
mov
fisubl
xor
inc
daa
dec
mov
outsl
scas
sbb
cmp
sbb
push
dec
inc
mov
lods
add
jo
divb
jg
mov
push
push
sbb
out
add
jne
inc
arpl
fstl
fisubrl
sbb
add
lea
dec
outsb
inc
insl
xchg
imul
mov
negl
sub
jbe
insl
add
lods
jns
pop
arpl
jo
mov
or
pop
filds
cmp
insl
mov
cmp
push
inc
push
dec
imul
ds
sbb
lcall
xor
jbe
add
push
add
or
in
sub
add
insb
ja
xor
dec
push
pop
push
xlat
or
ljmp
xor
outsb
xor
xor
pop
xor
xor
xor
xor
xor
sbb
ljmp
imul
mov
mov
out
divb
aaa
lcall
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
into
jo
jg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
int3
cmp
jmp
ds
sub
xor
sub
lds
dec
jmp
ljmp
xor
xor
xor
xor
xor
inc
xor
mov
loope
call
xor
jmp
imul
out
repnz
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
adc
fidivs
xor
xor
or
push
leave
inc
dec
push
out
mov
inc
sub
add
xor
cmpps
in
fwait
add
adcb
push
les
stc
out
mov
sub
data16
daa
mov
pop
jmp
cmp
pusha
push
shll
pop
dec
and
adcl
mov
add
mov
and
xor
dec
pop
dec
daa
aas
nop
adc
and
orb
repnz
and
cmp
add
cmpb
mov
push
lahf
mov
xchg
pop
inc
and
test
shrb
jae
push
sahf
jb
je
arpl
fs
pusha
sti
rclb
rclb
add
xor
add
add
das
loopne
mov
scas
jmp
lcall
jns
imul
sub
outsb
loop
clc
or
sbb
dec
shll
test
rcl
imulb
data16
sub
cs
ds
shll
sub
shll
repnz
lcall
cmp
pop
imul
je
cmpsb
ret
sub
mov
lcall
cwtl
xor
shll
je
inc
xor
mov
repz
pop
insb
xor
cmpb
mov
imul
pop
dec
add
xor
cmpsb
inc
jb
jl
lcall
mov
lret
dec
shll
call
addr16
cmpsb
pop
push
sbb
xor
mov
lcall
call
insl
lcall
shrb
mov
and
jmp
and
push
addb
push
lret
cmpsb
jmp
xor
ss
mov
or
ja
lret
cmp
outsb
je
jb
gs
adc
daa
in
outsl
fs
sub
insb
inc
adc
push
dec
dec
add
addb
pop
push
sbb
xlat
push
adc
sar
popa
bound
dec
inc
push
push
inc
push
inc
pop
dec
cld
jb
adc
and
outsl
data16
jmp
dec
push
pop
sbb
imul
push
pop
jae
sbb
push
xor
lea
xorb
insb
add
or
add
inc
add
jbe
data16
xchg
add
aaa
sbb
add
xor
add
mov
push
pop
pop
nop
and
add
ret
or
and
fmul
push
pop
fistps
inc
inc
flds
add
fsubs
test
mov
and
add
stos
test
pop
aas
mov
aas
add
pop
ret
sub
fsubr
add
pop
add
adc
pop
lcall
push
leave
inc
flds
inc
mov
mov
lods
mov
pop
inc
dec
and
sub
xor
bound
and
lahf
roll
add
and
pop
xor
rcll
jmp
or
imul
jne
out
add
push
packsswb
adc
pop
inc
or
mov
scas
js
push
pop
ja
call
push
jb
push
and
ja
or
push
or
das
mov
sti
pop
and
xor
imul
push
aas
testb
and
mov
fs
jmp
cmp
pop
adc
shr
sbb
jmp
test
mov
xor
popa
arpl
data16
pop
inc
out
add
xor
insl
shrb
jb
arpl
dec
adcb
pop
adc
stc
mov
outsb
gs
push
dec
push
push
dec
dec
mov
in
pop
jno
fistl
outsl
je
xor
push
jns
jae
test
sahf
push
xor
imul
jl
or
pop
push
push
outsl
addb
adc
jae
in
mov
mov
das
add
pop
cs
push
add
jb
call
frstor
dec
loopne
outsl
jb
inc
popa
jb
pop
jno
push
int
inc
test
insl
or
jne
mov
lds
femms
pop
clc
push
lock
pop
adc
pop
add
fildl
cmp
icebp
repnz
jne
mov
add
push
xor
std
mov
dec
inc
dec
inc
das
aam
adc
outsb
out
pop
push
dec
push
dec
inc
pop
mov
mov
push
fisubl
leave
addr16
aas
jo
decl
push
pop
fs
test
pusha
and
lret
cli
inc
test
mull
outsl
dec
testl
sbb
gs
xchg
adc
mov
jb
gs
pop
xor
push
pop
test
push
outsb
loope
inc
cmp
pop
ja
mov
mov
dec
pop
and
mov
jns
sbb
push
lea
fsts
sti
jno
dec
inc
les
mov
stos
inc
fdivs
arpl
cmp
or
cmp
sbb
adc
xorb
mov
es
aam
fs
lock
sbb
out
xor
stos
iret
les
dec
dec
dec
inc
stos
mov
in
xchg
xchg
outsb
mov
pop
jb
leave
or
mov
lret
mov
xchg
xchg
popf
add
cwtl
es
mov
out
add
cli
sub
mov
add
and
xchg
and
loopne
and
and
enter
inc
in
int
inc
mov
push
loopne
adc
lcall
jmp
pop
sub
sub
mov
add
push
push
push
call
addb
pop
ret
test
adc
cmp
pop
loopne
sbb
add
push
xchg
and
push
and
scas
push
adc
mov
insb
in
add
movb
sub
sub
push
add
lea
push
lea
call
decb
imul
ret
mov
mov
xchg
in
push
jmp
cs
or
pushf
adcl
ja
or
adc
mov
rolb
xor
jae
sti
in
or
mov
lock
insb
or
repz
mov
fcmovnu
pop
loopne
gs
mov
xor
aas
loop
xor
xchg
test
cmp
pop
jl
xchg
insb
pop
mov
test
in
leave
scas
xchg
add
xchg
and
push
add
add
add
fs
cld
push
cwtl
jge
rclb
push
push
movsl
bound
int3
sbb
nop
and
xchg
push
test
lret
push
xchg
aaa
mov
pushf
test
jne
ret
cmpw
cmp
clc
pop
icebp
add
cmpl
push
repnz
and
and
jl
inc
xchg
and
sbb
add
sbb
and
mov
pop
out
mov
push
pop
jne
or
push
mov
xor
jle
cmp
je
mov
cmp
je
or
divl
adc
pop
cmp
fucomi
jne
ja
jge
add
or
jae
cmc
mov
loopne
mov
cmp
jne
or
fistps
out
cmp
jb
sub
sub
add
je
mov
dec
decl
es
or
jmp
xchg
push
or
out
inc
cwtl
jmp
or
arpl
push
arpl
mov
mov
mov
cmp
jg
sub
adc
and
push
push
sbb
stc
adc
mov
pop
mov
dec
ret
iret
loopne
fmull
pop
sbb
xor
sbb
ret
or
or
xchg
mov
mov
lock
add
mov
or
movsl
movsb
mov
mov
mov
rep
clc
sub
dec
dec
mov
mov
or
inc
jle
sbb
pop
mov
add
xor
add
cmp
ljmp
push
sarl
push
mov
add
not
xor
xor
inc
cmp
or
push
das
loop
sbb
push
test
roll
mov
inc
test
sbb
adc
adc
rcll
and
cmp
jbe
divl
outsb
pop
add
scas
mov
inc
mov
inc
cli
jb
pop
pop
pop
adc
add
lods
stos
add
add
nop
pslld
jo
and
insb
nop
and
pop
and
pavgb
dec
adcb
in
jns
nop
and
and
or
and
das
enter
nop
and
popa
push
add
enter
lret
and
jmp
mov
xchg
pop
jns
nop
nop
and
add
mov
jo
and
add
add
jmp
xchg
xor
inc
jle
add
out
orb
mov
mov
std
insb
adc
push
pop
cs
mov
movsb
adc
in
cld
xchg
jp
cwtl
xor
mov
aam
lds
addr16
mov
enter
nop
push
push
add
ror
jge
push
sar
push
sbb
add
rdmsr
adc
in
mov
xchg
imul
testl
outsl
and
cli
imul
cmp
lret
enter
pushf
shrb
xor
jnp
ja
cli
jo
lret
int3
sti
push
pop
mov
and
fwait
adc
and
inc
or
cmp
xor
xor
cli
data16
mov
cwtl
mov
ja
jne
dec
out
or
mov
or
or
or
or
sbb
data16
xor
lock
push
mov
cmp
mov
shlb
add
orb
add
je
mov
test
loop
push
sub
aaa
in
pslld
jmp
adc
jmp
add
adc
mov
fbstp
call
mov
pop
inc
idiv
sub
push
or
jg
sbb
jmp
andb
mov
add
in
or
add
repnz
and
test
adcw
dec
pusha
add
dec
rclb
adc
adc
adc
fwait
add
jns
pop
repnz
ljmp
adc
adc
sub
cmp
push
and
cld
sub
fs
ja
xor
dec
jbe
andb
jecxz
xor
aaa
movb
inc
cmp
jb
cld
ljmp
imul
add
andl
test
mov
adc
ljmp
mov
and
or
imul
adc
and
lods
mov
dec
adc
inc
cli
in
mov
adc
in
push
add
cmp
mov
aas
cmp
jae
incl
lret
shr
add
test
pop
mov
push
mov
insl
mov
mov
dec
push
pop
jne
lock
test
rcll
sbb
mov
push
jo
mov
add
loop
or
adc
pop
bound
add
jne
ljmp
add
sub
push
aaa
xchg
inc
jno
and
sub
aas
mov
movzwl
sti
not
and
push
jl
and
or
add
lea
js
xlat
rcl
shr
shl
out
push
add
pslld
cli
notl
jg
fcmovnbe
and
testl
mov
fnsave
shr
shl
push
js
add
push
aam
cs
jbe
out
inc
fisubs
fimull
add
lea
pop
notl
shl
push
pop
inc
sub
mov
scas
mov
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
shlb
jg
push
push
xchg
sbb
mov
push
lods
sti
fcmovnu
xchg
loop
mov
push
push
hlt
mov
not
and
sub
mov
popa
shlb
sub
jns
mov
xchg
rcr
mov
roll
into
mov
stc
fiaddl
mov
or
adc
test
mov
add
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
not
mov
mov
adc
push
fcom
add
or
fdivrs
mov
xlat
mov
mov
nop
imul
xchg
out
nop
out
fmull
or
test
cmp
jno
std
stos
lods
push
fdivs
mov
push
cld
and
mov
outsb
pop
fidivrs
pop
aaa
das
push
mov
fmull
out
jns
pop
mov
xor
add
and
xchg
mov
fiadds
and
or
popa
adc
add
in
jbe
decb
mov
mov
shl
ljmp
mov
push
mov
bound
pop
mov
add
shlb
clc
jg
stc
test
inc
jge
dec
cmp
inc
rclb
data16
or
fadds
hlt
push
and
lret
imull
clc
jb
repz
pop
pop
es
adc
jne
xor
inc
shll
and
ja
fisttpl
xor
insl
repz
mov
hlt
pop
adc
fcmovb
jl
sbb
loop
xlat
lods
mov
arpl
mov
pusha
adc
inc
add
rorb
lcall
and
clc
addr16
icebp
aam
pop
jge
cli
fnstcw
ds
jg
or
insb
fst
imul
fidivl
fsubp
int
and
sbb
loopne
ret
insl
pop
jle
inc
enter
aaa
or
mov
sbb
mov
inc
fimuls
cltd
cltd
xlat
sbb
push
enter
cmp
gs
sahf
outsl
fidivs
call
inc
loop
shr
or
inc
call
mov
add
sub
imul
cmp
push
aam
mov
scas
sbb
daa
push
and
sub
out
int3
aad
flds
outsl
adc
xor
out
xchg
dec
fisttps
ja
mov
adc
or
int
xor
xor
test
pusha
fldt
test
xor
mov
jb
cmpb
divb
adc
mov
fadd
and
or
adc
inc
sti
xor
mov
fxch
fwait
repnz
or
in
mov
pop
fcomip
xor
mov
pop
ds
sbb
xchg
mov
std
adc
cltd
jb
repz
mov
int3
pop
pusha
dec
mov
out
jno
cli
xor
rcrb
mov
pop
mov
or
xlat
mov
jle
sub
jae
mov
jns
fidivrs
jo
lock
out
pop
cs
mov
mov
fidivl
cmc
je
lea
test
out
aam
xchg
jae
adc
fisubrl
fidivs
test
jle
pop
out
cmp
or
gs
push
aas
sbb
cmp
rcl
fldenv
js
jbe
les
mov
jle
ja
divl
sarb
jp
jl
pop
je
pop
push
lret
pushl
or
sti
fdivp
cmp
lods
les
pusha
imul
sti
mov
fdivs
fisubs
adc
stos
rcrb
sbb
ss
shl
ret
sbb
jl
fs
loope
int3
or
inc
push
or
movsb
mov
repz
and
jns
shlb
hlt
cmp
mov
or
adc
mov
xor
cmp
pop
pop
gs
sbb
outsb
fs
rcrl
gs
xchg
int3
or
push
or
ja
mov
lcall
hlt
out
call
insl
data16
unpckhps
sbb
repz
rcrl
test
sub
cmp
call
scas
dec
jle
outsl
jecxz
jp
sbb
addb
sbb
dec
outsb
repz
sub
jecxz
jp
ret
add
mov
add
in
fdivl
mov
outsb
sub
cmc
cmpb
lds
jp
xlat
sbb
ja
mov
xor
out
in
cmpsb
gs
mov
ret
iret
fwait
aam
rcl
sub
pslld
ret
loop
pop
mov
pop
rclb
xor
mov
xor
out
xlat
fnsave
cli
pop
add
pop
movsb
mov
inc
or
rcrl
lods
xor
pop
add
inc
js
cmp
xor
jge
cmp
call
and
sub
push
push
push
inc
insl
adc
or
mov
pop
mov
xchg
adc
xlat
adc
inc
pop
fisubrl
jle
jge
xchg
push
lahf
inc
pop
inc
addr16
iret
fbstp
adc
or
fdiv
insl
push
add
sbb
cmp
jne
dec
popa
push
xchg
pop
ljmp
icebp
jne
shr
out
lret
jmp
cmp
je
sbb
mov
cmp
aad
mov
mov
sub
jne
inc
cmp
jne
cmp
or
in
add
or
xorb
add
or
sub
mov
jnp
loope
xchg
or
adc
lea
inc
js
test
fmuls
jl
std
movsl
cmp
adc
jmp
and
rep
xor
aaa
or
sti
out
mov
jne
push
lea
adc
add
je
pop
cmp
sbb
stos
push
add
push
xor
mov
push
jo
pop
mov
pop
mov
or
cld
call
cmp
jbe
lea
pushl
jnp
in
in
pop
xchg
je
cld
dec
cmp
out
or
testb
fmuls
inc
pop
mov
fsubl
loopne
outsl
clc
pop
adc
mov
int
mov
int3
push
loopne
gs
outsb
sbbl
add
fsubr
out
mov
mov
push
rcl
push
or
in
imul
ja
or
call
stc
jge
lahf
gs
das
lock
jo
hlt
gs
es
imul
jne
lods
pushf
mov
je
clc
int
adc
or
or
addl
std
outsb
add
and
mov
mov
sub
inc
dec
sub
fstp
mov
xor
push
pop
hlt
push
xor
and
fsubrs
test
push
sbb
insb
imul
mov
mov
jb
dec
out
push
out
push
dec
dec
inc
mov
pop
repz
xorl
data16
push
push
cli
pop
add
shll
repz
and
daa
jne
hlt
or
cs
data16
mov
or
inc
push
sbb
test
mov
or
inc
pop
lock
push
push
mov
push
sbb
xor
cmp
xor
lea
xor
imul
or
or
push
add
cmp
or
ret
or
movhps
xchg
inc
rcr
push
dec
je
xchg
jne
sbb
test
xor
mov
xor
addl
and
in
les
test
adc
imul
xchg
xchg
pusha
sub
sbb
inc
out
xchg
jo
dec
mov
out
dec
clc
add
jle
lock
or
jecxz
pop
jbe
fnstenv
jmp
pop
call
pop
insl
adc
add
pop
pop
mov
inc
inc
jg
sbb
dec
outsl
adc
xlat
pop
cmpsb
cmp
jne
push
cmp
rorl
loope
idivb
push
andw
aaa
addr16
mov
subl
sub
xchg
dec
cld
pop
jb
bound
jno
push
pop
adc
sahf
test
adc
subb
push
push
je
dec
dec
pop
cmp
pop
mov
arpl
pop
ja
cmp
jp
push
test
popf
arpl
jne
orb
mov
loopne
enter
aad
push
or
and
add
sbb
movl
addl
je
inc
mov
inc
add
pusha
pop
cmpsb
and
lods
cld
push
push
push
sbb
sub
into
and
add
aaa
lea
cmp
std
ret
shlb
xchg
and
or
mov
push
adc
clc
inc
push
outsb
imul
cmp
push
movsb
or
mov
xor
xor
push
jo
adcb
insl
rcl
jnp
jge
into
cmpsb
xor
jle
mov
inc
call
add
imul
test
pop
js
push
push
dec
xorb
or
inc
add
mov
cmp
jne
push
nop
punpckhbw
test
pop
add
and
das
xor
jbe
pop
stos
int3
pushf
xor
or
divb
push
or
enter
ss
loopne
es
bnd
or
adc
or
cmp
and
ret
push
fnstsw
jmp
int3
xchg
or
insb
mov
fistl
or
in
scas
mov
insb
ja
movnti
sbb
push
nop
lods
mov
mov
push
mov
adc
mov
cmp
push
ds
cwtl
and
xchg
mov
insb
loopne
dec
mov
fcomp
sub
mov
pop
xchg
mov
pushl
cmp
inc
shrb
mov
dec
out
cmp
inc
insb
out
mov
xor
sub
mov
sbb
pop
add
jg
xor
jmp
test
xchg
imul
iret
push
ljmp
jmp
mov
or
pushf
inc
fbstp
decl
int3
cmp
jle
les
jne
cmpl
scas
or
aad
mov
or
jo
push
push
pop
add
loopne
dec
enter
aaa
bound
std
pop
sti
fwait
add
in
sbb
pop
adc
pop
pop
fnstcw
jmp
call
mov
fcoml
mov
dec
inc
sar
mov
jmp
xor
cs
cmpsl
movb
pop
xchg
adc
jmp
dec
nop
xor
mov
mov
mov
push
mov
dec
cmp
fsubrl
push
push
repz
mov
pop
lods
pusha
stos
or
decl
pop
push
xchg
sbb
jg
leave
lods
jb
pop
lods
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
mov
push
fsts
rcl
js
shlb
insb
jbe
mov
aam
aad
xlat
pop
fsubrs
adc
cmpsb
fldenv
fmul
mov
or
push
push
popa
imul
je
jmp
xor
pop
jle
jae
popa
fwait
int
dec
imul
scas
fxch
push
repnz
ret
shll
add
xor
enter
lcall
int3
hlt
xchg
push
fwait
cmpsb
jmp
xchg
xchg
mov
inc
jbe
xlat
insb
mov
pushf
adc
sub
push
mov
insb
add
test
push
test
es
cmc
div
clc
or
inc
xlat
ds
hlt
cli
jns
lea
xor
enter
push
rol
and
or
xor
test
and
loopne
scas
or
rorb
jo
aaa
in
rclb
xor
lret
pop
cwtl
xchg
int
push
int3
jmp
out
dec
ss
and
in
mov
cmp
insb
daa
pop
mov
dec
rcrb
mov
mov
cmp
pop
inc
fcmovnbe
push
enter
mov
jge
push
stos
orl
jg
fsubrp
jge
lea
xchg
xchg
pop
mov
inc
jge
sti
dec
dec
movsl
into
dec
adc
push
inc
add
ds
and
imul
and
mov
xor
and
loopne
sbb
daa
xchg
arpl
push
push
inc
sub
push
mov
scas
nop
jmp
aaa
sbb
mov
movsl
jmp
sbb
or
ret
jmp
adc
aas
mov
nop
repnz
gs
or
les
jo
push
insb
outsb
nop
or
and
mull
mov
test
jb
fmuls
fistl
mov
jnp
test
outsl
rcrb
outsb
and
push
daa
lock
jp
mov
movsb
int3
lea
mov
sbb
cmp
dec
les
add
shlb
addb
cmpl
inc
push
mov
popa
fbstp
rorl
clc
popa
pop
cmp
jns
xlat
push
and
push
jmp
pop
in
or
testb
inc
pop
add
nop
jle
loopne
xchg
jo
dec
inc
mov
mov
add
mov
jl
sti
mov
sbb
pushf
adc
ds
fs
loopne
and
jle
xor
pusha
cmpsl
fs
inc
dec
add
lods
mov
mov
xor
push
and
or
leave
push
pusha
aam
jecxz
mov
mov
stc
mov
jne
push
es
imul
pop
adc
dec
pop
fmuls
mov
faddp
pusha
aad
or
pusha
in
nop
sbb
sahf
and
cmp
faddl
cmp
int
mov
mov
mov
bound
mov
out
lea
push
mov
fstpt
call
inc
push
push
pop
negb
inc
lock
das
incl
lea
adc
in
fsubl
pop
adc
pop
or
orb
out
adc
jmp
and
ret
inc
xor
call
jmp
jge
xlat
sbb
or
sub
sbb
fsubr
js
jle
in
andl
jns
push
loope
fwait
rcl
fsubrl
loopne
filds
push
mov
daa
icebp
pop
sbb
mov
xchg
in
insb
add
and
lret
and
pop
int3
dec
int
dec
pop
ss
jp
imul
shll
dec
push
imul
mov
ja
fldt
imul
imul
lcall
cld
int
insb
mov
insl
sar
sbb
add
mov
mov
mov
dec
pushf
push
outsb
xchg
fs
mov
xor
enter
mov
push
insb
pop
lret
popa
leave
mov
lret
js
push
imul
and
repnz
jb
inc
int
cli
mov
push
js
in
add
and
mov
fistl
cmp
fldcw
sbb
cmp
ret
pop
ficompl
hlt
add
xor
xor
in
pop
mov
mov
mov
rclb
jmp
loopne
push
out
or
and
push
cli
add
rcrb
push
jb
outsb
je
lcall
call
pop
cs
ja
jne
repnz
cs
lock
insb
je
push
mov
pop
push
xchg
push
add
xor
inc
or
imul
inc
mov
cmp
scas
hlt
inc
loopne
xchg
fsubrl
sbb
dec
xor
shll
fmull
add
pop
jns
bound
std
jmp
push
pop
inc
xor
push
pushf
or
inc
cmp
das
inc
and
in
or
or
sbb
sti
fildl
push
pusha
cmp
mov
mov
fucomip
mov
in
xchg
call
and
cmp
and
fldl
or
fiadds
xlat
mov
repnz
push
clc
inc
in
test
mov
aam
or
pop
fstpt
mov
push
adc
dec
xchg
or
jne
xor
push
and
and
jnp
lds
push
jmp
sub
inc
push
cmpsb
test
mov
pop
lcall
popa
dec
shll
es
dec
shll
aad
dec
shll
and
shll
jb
and
dec
shll
and
shll
and
jae
bound
bound
fs
xor
cmp
push
shll
jo
sub
xor
shll
shll
and
push
and
push
xor
repnz
sti
dec
add
cmp
xchg
mov
sbb
negb
cmp
mov
pop
and
rclb
push
fcompl
adc
add
addr16
iret
jb
nop
jmp
addr16
adc
call
dec
mov
pop
xor
jecxz
out
loop
pop
scas
or
and
popa
add
and
add
inc
sbb
fstpt
aam
shl
cmc
data16
sar
sbb
dec
add
sub
test
shr
pushf
data16
pop
cli
or
lea
and
push
pushf
andl
shlb
into
mov
neg
cmc
sbb
rcll
cwtl
fldpi
outsb
icebp
and
add
das
jbe
add
or
and
sub
push
call
mov
or
sbb
popf
fcompl
lock
and
pop
jne
cld
stos
idivb
jge
jbe
mov
ds
jae
add
add
mov
cltd
idiv
mov
test
jne
adc
mov
div
add
xor
push
cld
call
les
inc
cmp
scas
imul
dec
adc
push
je
movsl
mov
xchg
les
xor
push
sbb
inc
sub
sub
cmpb
out
daa
pop
adc
jg
jmp
mov
mov
or
or
popa
jl
test
push
mov
push
add
xor
push
js
jbe
cmpsl
mov
or
cmp
mov
push
push
push
dec
rcr
dec
pop
and
cmpsb
iret
orb
cmp
mov
clc
pushf
xchg
cmc
jmp
and
xchg
iret
sti
shrd
daa
call
clc
push
clc
add
mov
jno
cld
test
inc
mov
push
aas
inc
out
mov
inc
pushf
push
gs
jmp
cmp
mov
push
cmpb
and
mov
ss
push
jmp
pop
scas
mov
push
sarl
xor
pushf
push
adc
pop
mov
or
outsl
icebp
cmp
mov
decb
repnz
call
mov
push
mov
dec
clc
xor
or
mov
rcr
jge
rcl
enter
or
and
or
arpl
mov
cmc
pusha
lods
add
xchg
jg
pop
imul
in
lea
xchg
loopne
pop
clc
or
push
jae
dec
mov
lods
mov
insl
int3
in
xchg
add
mov
cmp
or
dec
pusha
pushf
jge
inc
push
dec
iret
or
pushf
or
bound
pusha
xchg
cmp
pop
dec
movsl
loopne
rcl
cwtl
jnp
decl
pushf
mov
stc
stc
pop
push
call
test
repnz
ret
clc
into
data16
maskmovq
stc
sub
outsb
push
xor
int
sub
or
adc
jmp
push
in
sbb
mov
mov
insl
xor
cmp
xor
ret
outsl
jmp
loope
jl
repz
push
jnp
mov
mov
mov
test
add
stc
call
in
shrl
adc
or
std
cld
adc
adc
inc
loope
and
cli
and
jp
and
mov
lea
sbb
test
adc
mov
loop
fcomps
inc
pop
iret
xchg
int
mov
sub
outsb
xor
xchg
cli
sub
jge
call
sbb
sub
cmp
negl
ja
ss
sti
sub
sti
movsb
stos
lock
cld
jae
and
mov
push
ficoms
jo
shlb
cvttps2pi
xor
xchg
test
push
cmc
pusha
adc
cmpl
add
xor
mov
fisttps
add
leave
xchg
sbb
xchg
cmp
jle
mov
fwait
inc
clc
or
push
sub
mov
mov
ret
jmp
sub
add
mov
cmc
mov
aam
xor
sbb
ret
jmp
div
add
cmp
jmp
outsl
xchg
jl
or
cmp
sbb
shl
push
js
add
pop
cmp
sbb
inc
or
xor
inc
add
cmp
add
cmp
data16
xor
ja
mov
les
bound
add
sub
icebp
lock
mov
rclb
dec
push
push
sahf
sub
dec
call
sub
or
or
cld
push
push
jne
stc
sub
or
rol
adc
ss
lahf
iret
ja
sbb
ret
sahf
mov
leave
mov
or
jp
or
mov
mov
dec
popa
push
push
mov
ds
enter
xor
or
test
adc
call
add
or
pop
js
sub
out
sahf
sub
jo
int3
into
js,pn
xchg
shll
inc
add
aas
inc
andb
clc
outsb
mov
fsubp
les
push
int3
push
mov
adc
pop
iret
pusha
scas
loop
jp
adc
push
call
roll
aaa
int3
xor
sbb
adc
push
sub
mov
mov
add
addr16
fcomps
and
and
in
out
jge
push
in
jns
fidivs
and
cltd
pop
adc
jnp
xor
stos
fstps
enter
and
cmpsb
leave
pop
inc
ds
xchg
jle
std
cli
into
leave
xchg
dec
push
inc
dec
jle
pushl
push
int
ret
push
call
fisttpll
or
cmc
call
jo
test
fidivrs
sub
sbb
push
lcall
pop
cwtl
sbb
icebp
enter
mov
xor
mov
add
test
clc
pop
loope
out
sbb
sbb
lcall
movl
sti
sbb
pushf
xor
imul
mov
cmpsl
xchg
xlat
int3
negl
jne
and
xor
or
xor
test
inc
mov
add
hlt
xchg
gs
mov
pop
outsw
outsb
je
inc
gs
jae
dec
sahf
xchg
fsubrl
lret
inc
arpl
mov
pop
or
int3
push
sbb
in
cmp
adc
lods
aaa
jo
std
fdivp
fisttpl
gs
mov
cmp
call
cmp
mov
ljmp
and
and
outsb
insl
addr16
addr16
xor
xor
or
shrb
gs
js
call
add
pop
inc
out
in
xchg
int3
rolb
sbb
xor
mov
sub
mov
mov
adc
je
ss
and
and
in
fistpl
xor
mov
insb
out
jne
push
pop
ret
inc
adcb
xchg
lret
decl
adc
mov
call
or
adc
xor
sarb
cmp
call
stc
dec
hlt
xchg
call
je
push
shll
add
adc
nop
push
inc
outsl
mov
jb
cmp
je
aam
mov
push
pop
pop
sti
add
lcall
cmp
push
push
dec
fdivrs
fidivs
dec
or
arpl
push
out
pop
shll
and
push
adc
or
enter
add
mov
pop
push
je
cltd
mov
and
in
push
bound
sahf
mov
add
add
add
call
push
sti
in
dec
or
push
lock
or
scas
stos
out
add
mov
mov
pop
cmp
add
mov
lret
int3
rcl
fcomp
in
scas
or
pop
add
and
lret
test
adc
inc
inc
inc
sbb
jo
mov
push
inc
aaa
mov
jno
ficoms
movsl
cld
inc
cvtps2pi
cmpsb
dec
das
scas
stc
sahf
in
add
push
pop
adc
push
adc
enter
or
push
and
arpl
dec
lds
pop
les
dec
inc
lock
data16
fisubs
push
pop
pushf
mov
or
mov
loop
into
idivl
das
repnz
imul
ret
movsl
and
mov
jne
sub
adc
inc
in
and
xchg
call
je
cmp
sbb
gs
push
fnsave
sbb
push
ret
cmp
in
jne
mov
or
mov
pushf
js
inc
mov
push
xor
push
xorl
dec
dec
pushf
dec
shll
fs
xchg
sub
addr16
mov
insb
jne
dec
pop
xchg
cs
insb
mov
add
call
xlat
sub
gs
push
jb
mov
pop
mov
cmpsb
pop
cmpsl
lss
lret
test
test
lods
gs
mov
les
jo
lret
mov
dec
jo
outsb
push
fwait
sub
mov
jno
gs
shll
mov
inc
inc
aam
mov
mov
mov
nop
inc
xchg
gs
cmpsb
xchg
xchg
xchg
xchg
sub
push
cwtl
js
lcall
je
inc
fs
push
inc
loop
imul
ds
mov
lcall
jb
xchg
fdivs
mov
or
mov
mov
mov
inc
sarl
mov
enter
or
mov
sbb
in
mov
lock
aad
pop
outsb
clc
lret
jo
add
or
inc
sbb
jmp
mov
adc
mov
sahf
sbb
inc
xor
and
repz
shrd
je
jbe
mov
mov
dec
rcrb
mov
push
jecxz
push
inc
addr16
adc
adc
fadds
imul
cwtl
je
or
sti
leave
cmpsl
fldenv
or
movsb
or
repz
xor
orl
ja
push
mov
pushf
test
or
pusha
leave
or
popa
or
add
add
lock
cmpsl
mov
jne
push
js
inc
test
enter
xchg
lret
in
cmp
mov
push
aas
jno
mov
adcl
aad
xlat
or
bound
insl
hlt
inc
xor
add
std
aam
cltd
adc
sbb
or
pop
push
mov
mov
jp
or
sahf
movsl
lea
iret
lds
mov
and
mulb
mov
out
cmp
sub
push
lahf
cmp
jnp
mov
adc
push
subl
je
jecxz
sbb
sub
cmp
sahf
sub
dec
mov
and
xor
mov
fsubr
pushf
xor
jmp
jle
and
push
dec
jbe
sub
pop
xor
gs
mov
push
addr16
sbb
call
sbb
xor
dec
loope
jp
push
leave
shrl
push
imul
add
cmpsb
repnz
lret
mov
je
outsl
jae
add
lret
mov
cmp
push
pop
cld
push
jg
jmp
or
xchg
sbb
or
insl
pop
cmpsl
pop
xchg
push
cmp
inc
enter
sbb
fsts
pop
pcmpeqd
cld
push
pop
jmp
inc
or
inc
test
sbb
add
testb
sbb
or
pop
je
xchg
ret
sub
and
or
add
leave
repz
sbb
mov
sub
and
daa
sbb
mov
add
jl
dec
adcb
cmp
ljmp
push
out
and
sbb
sbb
pop
adc
stc
cmp
pop
out
sbb
in
xor
test
in
add
stos
and
jo
aam
adc
lret
jb
inc
mov
es
mov
outsb
cmp
mov
pop
hlt
insb
cmc
imulb
imull
nop
cmpsb
imul
movsb
xchg
mov
popa
sbb
js
or
jne
scas
push
jne
mov
arpl
imul
xor
fldcw
adc
jle
or
pop
fs
shlb
daa
cmp
adc
int3
pop
or
loope
daa
cld
pop
clc
push
pop
subb
push
das
cs
sahf
add
add
add
int
lock
bsr
push
sub
sub
dec
jbe
mov
in
lcall
inc
cmpl
push
call
and
loopne
orl
add
idivl
jb
cmp
push
push
out
inc
adc
das
cmc
jne
xchg
call
add
add
bound
shrb
xor
dec
push
pop
add
mov
hlt
aas
popa
arpl
outsl
outsb
cmp
bound
popa
and
imul
add
cmp
insl
dec
mov
pushf
sub
mov
imul
mov
arpl
je
mov
lret
imul
subb
fidivrl
popa
pop
dec
xchg
arpl
cmp
fs
frstor
jb
jns
push
out
cmp
xor
call
sub
xchg
pop
sub
pop
shll
jp
sbb
dec
outsb
stos
inc
movsb
outsl
outsl
jo
je
add
jns
pop
fcmovne
jmp
or
jmp
mov
and
movsb
int
std
lock
sahf
mov
loope
add
mov
sub
sbb
add
inc
sahf
dec
lcall
push
out
push
pushf
sbb
outsl
cmp
sub
inc
pop
das
adc
xor
and
cmpsb
imul
mov
lock
sbb
call
mov
cld
in
sbb
push
pop
push
mov
xchg
divl
cmp
jp
sbb
cmp
in
imul
adc
and
lcall
fmull
sbb
push
cmp
shrb
pop
jle
mov
mov
push
incl
scas
adc
ja
jge
push
call
push
pusha
xchg
bound
mov
sub
jb
sub
orb
mov
pusha
pop
call
cs
popa
fildl
add
jl,pn
and
adc
inc
call
or
bound
pop
mov
daa
xchg
or
mov
dec
nop
cmp
and
inc
fwait
es
and
loopne
cmp
aas
adc
sbb
xor
loopne
int
imul
outsl
jae
gs
xchg
je
bound
jne
inc
cmp
lds
jo
push
cmc
adc
push
ss
enter
add
jg
enter
cld
in
mov
movl
shll
outsl
imul
mov
push
fs
xor
pushf
hlt
pop
inc
sbb
mov
and
add
dec
push
mov
setb
mov
sbb
outsb
pop
or
pop
mov
sbb
lcall
bound
mov
call
cmp
sub
and
mov
jg
loopne
mov
jbe
movl
loopne
jmp
pop
aas
cwtl
mov
and
jmp
inc
mov
aaa
jne
push
jnp
aaa
fidivs
fadds
dec
or
jmp
gs
testb
jne
sbb
pop
nop
xchg
inc
pop
add
jle
cmp
jg
sbb
int
add
sbb
data16
sahf
xchg
decl
or
inc
stos
and
mov
arpl
cmc
mov
mov
mov
add
test
std
pop
mov
xor
adc
jns
movsb
add
add
xchg
clc
cmc
shlb
cmp
pop
adc
push
icebp
push
pop
popf
sarl
sbb
xchg
push
imul
push
fsubs
mov
adc
lea
loopne
mov
sbb
push
sbb
into
pop
imul
adc
cmp
outsb
loope
jmp
dec
dec
dec
xor
pop
sub
cmp
add
cmp
call
jbe
mov
ds
imul
test
push
sar
pop
aam
aad
shlb
into
call
clc
push
mov
leave
jae
lea
push
shl
xchg
cmp
or
orl
and
xor
inc
inc
lcall
clc
fldt
das
sbb
das
xor
sbb
sbb
sub
and
and
fs
inc
and
ret
clc
add
cli
or
push
fldenv
pop
push
ljmp
pushl
xor
jge
adc
inc
out
fdivr
dec
pop
jns
add
cld
andb
or
mov
daa
ljmp
push
sub
mov
add
daa
cld
ret
xorb
je
sub
push
das
enter
insb
mov
or
mov
dec
es
xor
push
repz
in
das
xor
sbb
rcr
out
popf
mov
pop
dec
push
push
inc
aad
mov
stos
add
lea
cmp
pop
imul
jns
sub
adc
sbb
mov
pop
notb
jbe
add
push
mov
stos
fstps
push
push
cltd
push
fisttpl
mov
xchg
inc
cmp
jb
decl
add
movsb
jb
inc
in
dec
mov
push
xchg
pushf
lds
mov
insb
sbb
addr16
nop
and
sub
nop
sbb
xchg
and
out
sub
pop
add
or
insb
testl
jbe
fcompl
xor
fmuls
out
jp
data16
sub
mov
push
aad
pop
mov
or
xor
mov
mov
pop
mov
pop
mov
cmp
cmp
lahf
pop
and
and
cli
jmp
cmp
fcmovu
cmp
push
lcall
push
mov
outsb
pop
pushl
mov
or
mov
inc
inc
xabort
hlt
push
push
fisubrs
lock
inc
pop
push
jbe
mov
out
push
mov
or
jne
xor
mov
sbb
pop
mov
movb
int
ljmp
push
mov
sbb
ja
xor
mov
lret
pop
xor
cs
mov
pop
jb
xor
rcr
cmp
jbe
arpl
fmull
outsw
insl
jne
in
cmp
xor
xchg
call
mov
push
inc
jp
loop
add
push
push
ljmp
out
cmp
cmp
mov
mov
xor
js
nop
pop
pusha
cmpb
inc
fsubl
xor
cmp
imul
mov
cmp
les
dec
out
add
sub
xorb
add
cmp
js
adc
fidivs
xor
dec
and
sub
mov
and
push
shl
pop
lcall
push
push
push
fldcw
and
mov
push
jo
in
in
call
inc
mov
mov
inc
loope
push
loopne
xadd
mov
xor
pop
loopne
mov
loopne
enter
rol
pop
xor
push
sub
add
jb
mov
lcall
mov
push
xchg
js
hlt
and
movsb
pusha
cmc
jecxz
sbb
hlt
int3
xor
jecxz
out
push
sub
add
sahf
sbb
and
nop
and
je
mov
push
cmc
push
xchg
inc
push
sub
in
add
je
rorb
dec
push
pop
clc
mull
enter
ds
out
and
and
inc
shrl
shrb
fstpl
clc
add
outsb
scas
push
inc
mov
cmpsb
imul
cmpsb
imul
dec
mov
insb
fldl
inc
fs
or
pop
xchg
in
jb
dec
outsb
sbb
pop
aad
inc
add
dec
push
icebp
jne
and
adc
cwtl
orl
xchg
xchg
xchg
xchg
inc
outsl
roll
cli
outsl
jne
sbb
es
scas
pushf
orl
inc
inc
push
sbb
xchg
sbb
xchg
bound
and
popa
add
adc
sbb
cmp
add
stc
adc
pop
add
pop
add
adc
popf
loop
adc
outsb
dec
inc
and
sbb
or
movl
pop
in
push
cmp
lods
push
push
imul
rcll
jle
fadds
cwtl
lds
into
push
das
cwtl
jnp
cmp
cmp
leave
xchg
fnstenv
inc
mov
adc
cli
lcall
xchg
out
insl
fsts
lea
stos
push
mov
or
jb
insb
sbb
pop
add
rcll
jae
js
stos
vmwrite
imul
adc
inc
lods
adc
jmp
lret
mov
lahf
push
outsl
data16
lret
leave
push
pop
ja
gs
mov
lret
mov
imul
jne
mov
adc
fs
ja
mov
jae
push
in
push
xor
dec
outsl
sub
ror
push
popa
subl
sub
mov
push
dec
inc
popa
repnz
lret
arpl
sbb
add
mov
adc
mov
js
insb
push
int3
add
mov
rcll
cwtl
lea
and
les
cs
xor
cltd
mov
dec
sbb
js
sbb
insb
leave
cwtl
adc
subl
fnstcw
mov
sub
mov
cmpb
jmp
aaa
dec
stos
dec
cmp
lcall
add
pop
add
cmp
subb
add
push
push
mov
pop
mov
shlb
into
pop
ljmp
adc
or
test
add
add
shrb
imul
leave
jecxz
je
cs
sub
out
out
call
sbb
into
jmp
and
es
std
std
lret
cmpsl
adc
inc
or
mov
fnstenv
inc
gs
jmp
fucomp
sub
in
leave
in
sub
in
or
mov
fstpt
lock
sbb
fnstenv
rorl
xor
shlb
outsl
aam
enter
stc
pop
stc
xlat
stc
mov
jb
stc
fyl2xp1
push
adc
stc
stos
iret
imull
pop
jo
into
call
and
lret
adc
clc
fdivr
repnz
xchg
cmp
cld
aam
aad
and
inc
dec
fdivr
fsincos
lods
fdivrl
insb
inc
cmp
and
and
enter
or
test
sti
dec
movl
mov
test
in
enter
idiv
stos
mulb
negb
mov
fisubrs
scas
mov
movsl
cmp
mov
into
dec
sbb
imul
in
mov
dec
xchg
outsb
pushf
mov
sahf
dec
insl
dec
xchg
out
fs
mov
dec
dec
dec
into
dec
mov
fs
xchg
xchg
aad
in
in
in
xchg
or
xchg
dec
in
in
xchg
cwtl
cltd
lcall
test
imul
mov
mov
in
in
mov
out
fwait
std
testl
je
enter
cld
popa
aam
dec
filds
hlt
sbb
divl
jb
pop
mov
mov
xor
and
popa
nop
pop
test
mov
pop
or
push
pop
pusha
test
adc
push
mov
popa
daa
lods
inc
icebp
clc
fcomps
mov
jne
clc
add
add
sub
or
dec
les
gs
sahf
push
enter
xor
addr16
mov
sar
sti
lds
rcrl
dec
push
mov
fisubrl
xchg
xorb
xor
jb
aaa
adc
add
mov
xchg
subl
dec
rol
jo
cmp
das
push
js
xor
jns
shll
arpl
dec
shll
xor
xor
shll
insl
cmp
xor
xor
aaa
xor
js
shll
popa
fs
shll
imul
xor
jae
int3
mov
jl
cmp
imul
stc
push
test
sti
xor
je
pop
scas
jmp
dec
mov
out
aas
sbb
mov
xchg
daa
cmp
mov
and
leave
cmpsb
imul
imul
cmpsb
imul
lcall
lcall
xor
das
xor
subl
cli
sti
cld
push
repnz
in
xor
jne
xor
lods
inc
or
sbb
push
jmp
xchg
or
pop
cmpsb
imul
imul
imul
imul
inc
cmc
inc
call
push
and
push
out
add
add
xor
or
add
scas
or
sbb
call
pop
inc
les
mov
call
jb
adc
push
cs
add
rclb
push
push
int
pop
cmp
inc
add
add
cs
jle
sbb
push
adc
call
xchg
aaa
negl
jbe
out
add
stos
jo
mov
push
mov
sub
pop
and
mov
sti
in
sbb
push
mov
sub
adc
pop
push
cltd
pushf
jmp
add
cmp
pop
pop
in
adcb
or
inc
cmp
enter
push
sbb
adc
popf
mov
iret
push
push
push
dec
sahf
iret
push
jge
add
xor
fwait
insb
sbb
mov
loope
and
adc
mov
sti
and
inc
xchg
jo
add
push
mov
jnp
rclb
call
mov
pop
dec
je
movsl
dec
pusha
cmpsb
jmp
or
mov
inc
cmpsb
imul
adc
movsl
in
cltd
dec
mov
add
mov
jno
fs
mov
addr16
dec
mov
mov
dec
mov
pop
or
or
xor
push
lea
push
cli
mov
fnsave
and
jne
pushl
cmpsl
mov
je
xchg
mov
xlat
or
inc
gs
push
leave
sub
mov
imul
ret
inc
outsb
xor
push
adc
in
jl
jns
int3
push
outsl
aad
sti
pop
or
addr16
lcall
fabs
fnstsw
add
aam
or
xchg
imul
push
mov
test
ret
pop
fdivrp
call
pop
cmp
or
push
iret
lea
in
lea
cmpsb
imul
leave
adcl
xchg
movsl
and
adc
mov
enter
push
or
ja
mov
int3
int
into
iret
pop
rolb
call
sbb
push
enter
push
fmull
cwtl
mov
add
clc
call
sti
and
mov
push
dec
mov
or
mov
insb
fildl
cmp
push
lret
mov
lret
push
mov
mov
mov
push
subl
es
arpl
mov
enter
xchg
gs
xchg
lea
push
push
fdivs
add
add
mov
xchg
jge
mov
arpl
pop
push
lock
pop
mov
arpl
push
icebp
cmp
scas
sub
adc
enter
ds
mov
cmp
lds
add
mov
mov
inc
add
in
adc
push
add
stos
mov
cwtl
stc
mov
or
inc
mov
push
and
shlb
sbb
add
push
popf
sbb
into
push
lea
push
ss
out
add
insl
xchg
push
or
push
scas
xlat
arpl
ret
mov
mov
je
mov
xor
push
mov
repz
pop
mov
aam
or
insb
add
les
xchg
adc
xchg
mov
int3
cmc
cmovae
repnz
pusha
test
pop
push
push
xchg
rolb
jo
sbb
pop
dec
enter
dec
and
aas
cmp
leave
cmp
andl
insb
adc
cmp
push
push
int
push
or
and
jp
dec
shll
lea
push
push
loopne
pop
sub
js
mov
push
aam
movsb
inc
or
push
daa
jno
push
fwait
push
push
jb
jnp
ficoms
adc
push
aas
adc
nop
adc
negl
pop
inc
xchg
mov
andl
lock
outsl
push
rcr
rcll
or
add
call
out
push
insb
shlb
mov
sbb
movsb
sti
enter
addr16
push
fs
mov
lds
add
iret
jge
call
mov
lock
add
mov
push
unpckhps
adc
sub
imulb
clc
iret
adc
jo
fcompl
mov
loopne
add
mov
push
jnp
push
mov
mov
or
movsb
rorb
testl
mov
mov
mov
adc
ja
and
or
mov
icebp
je
inc
cmpsl
xor
pop
push
mov
inc
sbb
pop
mov
daa
mov
add
mov
add
fidivrl
ret
out
fneni(8087
mov
add
mov
mov
popf
enterw
mov
xor
test
test
or
dec
mov
rolb
cmp
mov
lds
subb
mov
in
int
cmp
test
adc
adc
orl
int3
adc
pop
pop
mov
mov
dec
xchg
inc
outsb
popf
lret
mov
cmp
add
adc
inc
mov
push
mov
or
daa
cmp
add
mov
inc
mov
enter
mov
fs
lds
and
cltd
mov
push
and
mov
cmp
cmp
pushf
xor
push
stos
sbb
xor
lods
cld
and
fmul
scas
and
cmp
pop
adcb
stos
jecxz
repnz
lcall
adc
jp
inc
mov
sub
pushf
mov
mov
adc
mov
adc
inc
or
sub
pop
icebp
cmp
arpl
imul
das
and
mov
sub
sub
push
ja
pop
or
jb
adc
sub
leave
xchg
lods
sub
cmovae
xorb
sbb
xor
cmpsb
mov
insb
outsl
sbb
dec
jle
or
mov
or
jl
cmp
inc
cmp
jb
mov
fimull
dec
inc
in
shlb
inc
js
push
loope
mov
mov
sti
dec
add
jge
pop
jl
repnz
sbb
add
pop
sub
add
fsts
add
jns
js
call
jo
add
mov
dec
add
mov
adc
sbb
ret
cmp
mov
fidivrs
jns
mov
sbb
dec
pop
repnz
lods
mov
add
mov
mov
xchg
lret
in
fmull
ficomps
adc
adc
xchg
xchg
push
push
movb
stc
pop
cmp
clc
stc
adc
into
mov
or
mov
int3
ss
in
addr16
int3
orl
mov
ss
popf
rcll
rcl
pop
push
inc
adc
int
aad
call
mov
mov
test
add
popa
mov
mov
push
push
movsb
call
int
jge
and
call
push
insl
sbb
cld
faddl
dec
mov
in
subb
inc
mov
out
lock
call
mov
mov
mov
call
or
lcall
pop
push
or
xor
ret
adc
test
push
in
inc
mov
sub
sub
mov
sub
sbb
js
cli
xchg
inc
sahf
orl
dec
enter
inc
inc
or
inc
enter
rolb
sbb
enter
pusha
mov
mov
pushf
pusha
int3
mov
or
and
sbb
or
dec
push
repnz
hlt
or
xchg
inc
rorb
pop
insb
lcall
add
int3
popf
or
nop
lret
imul
or
das
mov
or
inc
cmp
insb
jno
scas
scas
sbb
es
add
push
pop
mov
outsb
jae
mov
lods
outsl
out
push
cmp
fsts
call
scas
dec
fs
lods
lods
and
push
mov
push
nop
and
inc
xchg
cmp
nop
and
nop
and
sub
or
xchg
cmp
or
and
and
add
xchg
cmp
dec
test
and
nop
and
repnz
and
push
mov
push
or
fdivrl
nop
and
and
adc
pop
dec
or
leave
mov
push
and
add
push
add
add
pop
repnz
add
add
insl
push
mov
dec
lods
lock
movsl
mov
rolb
imul
adc
andl
mov
int
int
roll
cwtl
icebp
mov
and
enter
or
mov
les
lea
aad
jne
push
add
fucomp
push
lods
xchg
or
cwtl
pop
push
sbb
fisttpll
jecxz
cmp
add
js
adc
scas
in
cwtl
pop
sub
add
pop
adc
ret
pop
adc
sub
or
mov
jge
xor
or
sub
push
ret
sub
and
test
sub
or
push
sub
inc
jg
sahf
push
loope
ss
outsb
mov
mov
xchg
bound
push
inc
les
fisubrl
pop
pop
jb
cmp
push
dec
dec
and
adc
push
dec
push
xor
and
add
mov
pop
and
mov
out
add
push
mov
push
adc
repnz
lahf
mov
xchg
add
pop
inc
test
push
dec
mov
add
mov
lahf
sub
std
and
les
jl
cmp
mov
out
push
push
lock
sub
jp
mov
push
ret
call
add
cmp
stc
aam
ds
and
and
and
and
imul
and
mov
and
sbb
push
jae
addr16
popa
push
sbb
mov
in
ds
jb
shlb
gs
mov
and
js
xor
xor
popa
jns
loop
inc
mov
repz
pop
push
xchg
cs
sub
shll
push
movsb
stos
and
jbe
nop
stos
push
push
jae
push
mov
cmpl
dec
xlat
push
stos
add
xlat
mov
cmp
cmp
cltd
std
loopne
inc
ja
sub
mov
test
in
mov
xchg
lods
dec
cmp
fsubl
das
mov
xlat
xor
cmp
sub
inc
push
mov
in
add
jbe
gs
mov
test
pop
bound
cmp
cmp
andb
imul
push
lret
gs
nop
sub
and
lcall
xchg
or
sbb
les
insb
cmp
mov
xor
decb
enter
or
leave
insl
mov
repz
sbb
lds
cs
loop
aad
or
mov
mov
jl
orl
in
cmp
and
or
dec
push
mov
dec
push
arpl
push
dec
and
int3
idiv
std
and
push
mov
lahf
testb
rcrb
mov
jmp
mov
mov
jb
xchg
xor
fs
pop
mov
movsb
sarb
push
in
ds
mov
mov
jecxz
mov
inc
dec
mov
push
les
sbb
fbstp
enter
cltd
sub
add
enter
int3
add
test
xchg
xchg
mov
repz
testb
xchg
ds
iret
out
xchg
xor
dec
sub
or
add
sub
sbb
int3
xchg
and
dec
jbe
and
daa
lret
add
fcompl
or
cmp
xor
fwait
lret
or
adc
or
adc
jo
cmpb
add
nop
sti
mov
jmp
nop
mov
fisttps
push
add
xor
push
jnp
mov
jo
les
pop
mov
mov
push
adc
arpl
and
outsb
mov
adc
insl
stos
subb
sub
rorl
je
inc
jns
imul
or
and
test
inc
js
pop
add
push
fnstenv
fwait
and
imull
adcb
orb
nop
mov
push
fnstsw
mov
add
subl
clc
add
push
add
sub
add
push
gs
jmp
je
bound
jae
sub
and
jnp
xchg
push
addl
xchg
loope
xchg
and
fldz
push
imul
rcl
insl
push
outsl
dec
xor
inc
mov
mov
inc
adc
sqrtps
jb
cmp
ja
inc
inc
inc
je
imul
jns
add
ds
jns
fbld
arpl
movb
mov
negb
jbe
xchg
movl
fidivrl
pop
add
push
sub
imul
adc
inc
fmuls
mov
or
push
lcall
sarb
sbb
xor
dec
jae
fidivl
sub
movsb
mov
fists
push
insl
fs
push
jecxz
pop
mov
xchg
xor
add
add
insb
popa
rcr
sbb
push
inc
sbb
gs
xorl
push
sbb
movsl
add
inc
fisubl
and
leave
mov
mov
push
shll
fiadds
movsb
jecxz
lods
adc
gs
mov
xor
fmull
imul
xchg
in
pusha
sbb
jns
add
je
sbb
arpl
push
jb
insl
js
lret
sub
pop
and
dec
cwtl
inc
and
lea
outsl
sbb
mov
add
jae
add
push
jo
mov
inc
insb
sub
adc
push
movsb
jne
xchg
testb
add
mov
rcrl
mov
jnp
divl
inc
lock
jb
cmp
adc
int3
loopne
addr16
outsb
jne
push
adc
mov
mov
and
dec
inc
and
mov
mov
mov
inc
mov
pop
adc
cmp
jp
add
dec
xchg
leave
sub
popa
stos
or
cld
mov
jns
notb
xlat
faddl
jo
sub
adc
das
mov
push
lds
inc
pop
push
add
fsubs
inc
pop
mov
arpl
nopl
sbb
push
pop
sti
and
or
adc
mov
adc
in
or
loope
pop
jbe
fcom
lods
mov
xor
or
cmp
mov
mov
mov
mov
sqrtps
push
dec
insl
loop
add
jnp
fldt
adc
add
lods
jo
push
push
js
mov
add
sarb
xor
push
popa
jbe
adc
add
fildll
cwtl
mov
es
inc
dec
push
jne
push
test
sub
popa
hlt
fsubrs
stos
pushf
cmp
jg
ficoml
push
andl
rcrb
fucomp
scas
insb
jmp
inc
add
pusha
ror
mov
xor
jmp
mov
mov
push
call
adc
pop
das
adc
jmp
testb
mov
adc
and
sbb
sbb
add
mov
sub
mov
push
jb
lret
adc
add
test
mov
inc
notl
and
mov
dec
aad
enter
add
cmpb
roll
sahf
xchg
mull
in
xchg
icebp
sar
lcall
shlb
lcall
lds
xor
leave
mov
lock
and
jmp
pop
subl
mov
sbb
lock
push
mov
mov
js
mov
mov
and
or
cmpsb
jg
add
xchg
ret
push
rcrl
outsl
pop
mov
mov
int3
push
lahf
inc
out
dec
jmp
roll
push
adc
adc
ret
dec
inc
addb
xor
inc
xor
std
nop
rcl
mov
inc
add
inc
imul
push
push
ja
or
call
rol
mov
jmp
popf
fists
call
mov
into
sti
xor
dec
xor
daa
jecxz
cmc
dec
cmpsb
mov
test
add
clc
outsl
inc
cld
sub
jle
cmp
bt
inc
shll
adc
mov
add
or
jmp
testb
bsf
add
ficoms
and
cwtl
test
ror
push
mov
in
xorb
sbb
mov
clc
or
maskmovq
pop
sar
adc
test
sub
call
mov
popa
mov
pop
and
call
mov
jg
add
push
cmp
mov
out
fucomp
call
cmc
dec
pusha
jmp
sar
mov
pop
lret
shl
not
cmc
xor
pop
push
call
jae
inc
call
mov
ja
fists
cwtl
shr
dec
sar
mov
aaa
push
cmc
test
lea
clc
sub
inc
decl
das
cmp
shr
sbb
rcr
and
pusha
scas
std
decl
out
enter
fstp
mov
pushf
pushf
xchg
mov
lea
fucomp
or
push
jge
movsbl
mov
lea
pushf
std
xchg
in
mov
xlat
pushf
add
and
mov
shr
insb
adc
and
test
data16
and
dec
popf
mov
jmp
ja
mov
imul
or
and
fistpl
mov
int3
call
cmc
stc
cbtw
stc
jmp
insl
push
sbb
add
loope
in
dec
sub
sub
jb
jmp
push
shlb
roll
clc
fwait
lds
rcll
inc
shld
rol
xor
mov
icebp
pop
rcr
leave
lret
xor
mov
jne
sti
pop
or
or
inc
mov
adc
or
push
loop
je
shll
mov
adc
ret
dec
shl
inc
mov
mov
push
call
and
rorb
mov
mov
popa
popa
jae
jb
lret
add
ret
jmp
ret
jnp
fcmove
out
add
sub
xor
or
inc
cmp
enter
loope
sub
aas
xlat
inc
jmp
js
aas
sub
insb
shll
sbb
nop
jnp
fisttps
pop
mov
test
in
data16
cmp
push
lret
loope
test
add
cld
xchg
inc
cld
mov
sti
mov
and
cld
pushf
rep
push
shl
xor
sub
fisttpll
pop
mov
dec
sub
lds
aaa
je
xchg
push
popf
cmc
add
adc
cli
rcl
icebp
call
xchg
pusha
aam
cmp
mov
repz
scas
cmp
pusha
sarb
and
or
mov
or
jne
mov
scas
loope
pushf
stc
pushf
mov
call
add
sub
test
cmc
xor
mov
jmp
or
or
or
clc
add
lods
pushf
addr16
dec
daa
sub
jns
add
inc
ljmp
adc
and
fmull
inc
dec
cmp
jmp
mov
movsl
fcmovnu
pop
mov
dec
push
pop
sbb
sbb
sarb
add
or
add
push
pop
fcomps
popa
test
enter
test
jnp
push
sbb
dec
adc
daa
sbb
addr16
mov
mov
xor
sbb
push
lea
ljmp
xchg
into
push
fistl
xchg
sbb
fucom
fiadds
mov
pop
lock
jmp
xchg
es
mov
push
push
or
or
push
or
enter
mov
jmp
add
inc
mul
loopne
hlt
popa
rcll
cmp
push
pusha
mov
aaa
dec
cwtl
mov
xor
jmp
xor
call
mov
sub
xchg
adc
dec
outsl
shl
adc
xchg
pushf
call
rcll
xor
xchg
nop
jl
mov
call
leave
jbe
rorb
jecxz
pop
jo
stc
shl
sahf
das
push
pushf
add
sbb
pushf
iret
inc
cmp
dec
outsb
pusha
divl
in
cmp
mov
pusha
out
inc
stos
adc
clc
clc
call
sbb
jmp
xlat
push
pop
mov
mov
stc
pop
repnz
pushf
or
push
aad
mov
xchg
xlat
addr16
mov
test
inc
fidivl
jne
rcl
cli
push
div
cmp
lock
mov
test
in
out
fdivrp
mov
xchg
or
sbb
add
clc
bnd
push
mov
sub
xor
dec
fmulp
jne
ret
push
pusha
push
push
out
test
loopne
xlat
inc
mov
or
xor
iret
xchg
inc
ret
jg
sahf
mov
dec
hlt
ljmp
mov
sbb
packsswb
dec
and
sbb
inc
mov
or
imul
jle
adc
les
pop
cmp
rep
ja
cmp
rcl
dec
aam
adc
shl
mov
cli
clc
xor
sub
stc
shr
fnstsw
mov
daa
aad
out
jl
push
shlb
cmpsl
out
pushl
rcll
mov
filds
mov
push
sbb
mov
fldl
or
dec
outsl
inc
out
rcrb
shlb
xchg
mov
push
je
imul
out
stc
xlat
fadds
scas
jg
sar
test
adc
sbb
outsl
sbb
cwtl
jmp
or
ret
dec
pavgw
xchg
leave
sub
fstpt
mov
dec
sub
sarb
lret
adc
add
adc
mov
inc
push
lret
dec
call
pop
mov
push
push
push
xchg
cmpsb
out
sbb
sbb
or
data16
pop
fstpt
add
in
pop
push
bound
xchg
rclb
jne
orl
xchg
pop
jg
push
fists
clc
int3
adc
jbe
addl
vpsubw
inc
fdiv
lds
loop
mov
sub
rol
add
in
sub
jo
or
pop
outsl
sub
inc
pop
mov
ret
repnz
mov
aad
mov
in
lea
testl
in
pushf
mov
out
sbb
outsl
cmp
mov
shl
setp
je
mov
call
testl
mov
lods
or
inc
stc
sub
jb
divl
jg
mov
adc
loope
add
lret
fildll
out
pop
pop
filds
dec
xchg
mov
adc
fldcw
std
incb
mov
outsb
mov
lahf
cmpsb
aas
add
jb
mov
out
xchg
pop
neg
in
mov
rclb
mov
mov
cmp
adcb
pop
pop
int3
cmpsb
lar
fistps
jnp
xchg
pop
mov
pop
jno
add
stos
fldcw
or
push
xchg
movq
xchg
addr16
or
outsl
divb
outsl
ret
pop
aaa
fs
mov
pop
xchg
mov
jmp
dec
jle
mov
adcb
es
dec
add
es
call
pop
outsl
or
xor
sbb
jg
lock
push
mov
mov
pop
jmp
pop
dec
or
lock
pop
iret
and
lahf
fstp
out
or
pushl
js
movsb
out
imul
neg
cmp
scas
pop
movntps
aaa
xchg
jecxz
pop
pop
neg
fwait
in
mov
das
pop
fsubp
mov
adc
lock
xchg
arpl
mov
negl
mov
pop
jnp
fsubp
and
fwait
ret
js
mov
jecxz
cmp
fwait
jmp
fwait
xor
mov
ja
sti
mov
icebp
ficomps
arpl
flds
jno
or
fnstcw
jo
sub
mov
sbb
fidivrs
ja
adc
sti
pop
neg
jnp
stos
ret
daa
lcall
xchg
daa
ret
push
mov
movsb
aaa
test
es
push
mov
mov
cmpsl
fistps
inc
out
xor
mov
pop
sbb
mov
mov
call
clc
dec
cmp
sbb
add
pop
cld
ljmp
jbe
or
loopne
dec
mov
leave
xchg
bound
data16
jb
inc
test
call
test
and
outsl
loop
sbb
jp
repnz
pop
pop
fists
call
js
mov
test
sti
jg
pop
xchg
sub
cmc
das
xchg
fdivs
nop
test
and
push
ret
pop
test
cwtl
je
loop
pushf
push
cld
ss
movsl
mov
push
push
add
out
dec
in
movsl
mov
jmp
outsl
aaa
push
jmp
xchg
dec
sbb
orb
fnstsw
into
adc
filds
push
je
fucomi
movsb
cmc
ror
clc
and
adc
mov
shl
push
stc
pop
scas
sbbl
xor
inc
push
pop
mov
and
sbb
das
shl
lahf
ds
push
or
repz
dec
insl
cmc
add
mov
fidivs
ret
ror
mov
aaa
daa
arpl
enter
pop
popa
int
leave
inc
sub
leave
add
sub
or
fprem
jne
mov
mov
lret
mov
inc
int
push
or
test
scas
dec
mov
xchg
lock
pop
pop
inc
mov
push
adc
into
pop
push
and
enter
cld
jnp
xchg
add
push
pop
dec
lods
clc
xor
xor
or
jle
ret
aaa
in
pop
pop
sbb
ja
jmp
sbb
es
mov
out
fucomi
mov
push
ret
lods
push
movsb
loop
pop
fnstcw
xor
loopne
ds
aam
imul
call
xchg
aaa
cltd
mov
push
imul
push
fdivrl
cmp
filds
sub
mov
adc
ljmp
mov
fldt
rcrl
xor
adc
and
cmp
ljmp
cwtl
call
adc
inc
shl
insb
clc
mov
mov
test
cmp
jbe
jmp
ret
xchg
push
push
jnp
fwait
pop
fistl
cli
or
add
loope
ret
push
stc
mov
sub
mov
and
ret
jmp
call
mov
loopne
add
push
xor
pusha
pusha
mov
std
lea
iret
call
loope
push
in
add
addr16
stc
push
test
int
cwtl
mov
test
repz
call
scas
popf
aam
push
ja
cld
or
push
jmp
adc
jne
mov
fwait
cmp
ja
jbe
jmp
ret
dec
cli
mov
pop
pop
inc
sar
add
int
shrb
jo
xor
stos
movsl
cs
inc
xchg
negb
xor
nop
call
fcompl
mov
cmp
cmpsl
lock
push
orb
addb
adc
and
inc
cli
xchg
sti
jg
das
ss
sub
insl
setno
or
insb
sbb
pushf
andb
mov
call
aaa
push
adc
fists
or
call
mov
ret
xor
and
jae
fdivrl
xchg
clc
das
mov
adc
push
mov
push
adc
or
fcomps
repz
scas
js
es
es
lea
mov
push
dec
adc
mov
add
sahf
fs
loope
adc
test
jg
mov
mov
cld
mov
rcl
sbb
pop
aad
rdtsc
pop
shr
pop
xchg
popf
mov
pop
add
cwtl
pop
pusha
pop
insl
std
xlat
mov
dec
fistpl
dec
sbb
mov
pushf
or
xchg
push
not
mov
sub
pop
lea
pushf
and
pop
aam
mov
loopne
dec
std
jns
js
jmp
outsb
cmp
aas
ret
outsb
fdivs
fld
mov
imul
jno
inc
cli
or
push
daa
or
std
stos
or
mov
insl
fnsave
lock
ret
xlat
cld
incb
pop
push
dec
repz
sub
stc
add
xchg
clc
add
out
inc
mov
lock
lret
stos
shl
jbe
sbb
pusha
enter
ficoms
arpl
or
sahf
or
sub
aad
mov
sub
popf
or
sbb
call
pushf
push
test
in
mov
mov
ret
enter
cmp
pusha
xchg
sub
push
leave
cmp
cmp
jbe
call
inc
out
jo
int3
fnsave
jmp
add
mov
fisttpll
lock
pushf
add
jo
outsb
imulb
call
lods
sarb
aam
sub
in
stc
or
dec
inc
cmp
jae
enter
jmp
loopne
xchg
cli
inc
mov
adc
cmp
inc
outsb
popl
push
mov
mov
sbb
xor
daa
enter
rol
mov
sub
es
jp
mov
and
or
mov
aaa
mov
fwait
push
iret
inc
mov
dec
clc
jne
imul
adc
adc
push
aas
mov
mov
mov
jno
cmc
stos
shr
daa
icebp
jo
mov
outsb
test
lock
add
cmp
mull
cwtl
in
xchg
sub
or
adc
mov
bound
mov
xor
in
adc
dec
stos
jbe
mov
jbe
pop
in
adc
jmp
aam
adc
jmp
and
call
call
pushf
mov
adc
orb
fstpt
icebp
dec
gs
mov
loopne
inc
mov
insb
cwtl
and
inc
jge
ss
dec
insb
xchg
lahf
sbb
dec
js
call
pop
adc
or
cmp
inc
xor
pop
loope
sets
sbb
fldl
cwtl
jge
test
adc
fistps
icebp
stc
cs
cwtl
imulb
and
and
aaa
ja
test
psubsw
jmp
sbb
or
fs
shlb
xchg
xlat
testb
cli
aad
push
shrb
movsl
add
mull
or
dec
add
push
sbb
add
sbb
bound
adc
mov
scas
mov
dec
mov
jge
int
test
sub
addr16
adc
cwtl
js
call
or
out
outsb
or
and
adc
rcr
add
push
pusha
jnp
call
push
push
lret
rcrl
leave
push
lea
aad
add
ds
out
pushf
jle
popa
lcall
dec
adc
rol
mov
into
call
add
out
rcr
pop
insl
add
cmp
jmp
add
repnz
inc
push
cmp
dec
fstl
mov
mov
jne
rorl
push
std
push
sub
adc
and
out
inc
pop
jmp
adc
pop
mov
adc
mov
dec
sub
pusha
fnsave
out
test
jl
pop
sub
or
push
icebp
mov
in
not
pop
mov
out
leave
lcall
push
adc
scas
incb
in
test
clc
scas
push
pop
neg
shl
out
push
cltd
or
push
shlb
inc
jmp
jmp
cmp
mov
dec
ja
scas
sbb
mov
mov
adc
mov
mov
and
shlb
cwtl
gs
cmp
inc
pop
mov
dec
xchg
cmpsl
and
inc
lcall
xabort
or
les
out
dec
or
faddl
in
decl
pop
and
and
or
xor
bnd
in
cwtl
or
cli
fbld
mov
in
push
ljmp
xchg
pop
in
aas
dec
inc
arpl
mov
jecxz
add
dec
pushf
fwait
xor
test
int3
xor
loopne
aaa
mov
jle
or
xor
cld
call
jg
and
aad
sub
cmp
cmp
sbb
lcall
call
mov
add
test
loop
mov
movsb
pushf
dec
xchg
outsl
hlt
pushl
xchg
fimull
sarb
jl
lock
pop
xchg
push
lcall
cli
xchg
shll
mov
xor
or
xchg
lcall
jl
call
scas
mov
dec
mov
sbb
xchg
in
pop
clc
jmp
jae
fwait
clc
repz
test
dec
pop
mov
and
lcall
jbe
push
insl
and
cmp
xor
jns
rcr
xor
lcall
adc
dec
in
outsb
mov
adc
test
ljmp
mov
pop
jecxz
mov
sbb
lods
fistps
xor
sbb
pop
mov
cmp
mov
or
sub
addb
and
les
mov
or
ljmp
lock
xlat
jae
shll
test
mov
rcrl
icebp
pushf
cld
ljmp
fs
aad
stos
les
sub
mov
xchg
mov
cmp
cs
cld
rcr
adc
stc
js
mov
dec
adc
arpl
push
sub
fs
xor
js
ss
mov
jmp
sbb
and
jp
add
adc
in
fsubs
sub
xadd
dec
cld
call
pop
shr
add
sub
jecxz
test
dec
shrl
fadd
xchg
shl
lret
mov
les
inc
dec
je
add
std
push
dec
in
mov
je
call
jmp
pop
fs
adc
mov
inc
xor
dec
inc
jo
xchg
xor
cli
pushl
loopne
nop
sub
test
and
scas
dec
push
outsl
adc
mov
call
jg
jg
dec
push
in
pusha
mov
sub
dec
push
aad
sub
jmp
xchg
addr16
scas
xchg
pop
jl
in
mov
or
pop
fs
mov
dec
push
cmp
sti
xor
mov
and
mov
sbb
dec
int
mov
sub
mov
dec
fcos
decl
in
mov
cmp
sub
inc
testl
adc
jne
fwait
xchg
ja
push
out
test
pushl
jp
xchg
cmpsb
fucomi
mov
mov
test
sbb
sar
pushl
push
js
fs
mov
gs
mov
fs
notb
decb
and
pop
jae
or
xchg
imul
mov
imulb
fwait
jae
lock
pop
or
sbb
or
jae
mov
ja
mov
mov
dec
std
jle
xchg
int
sbb
mov
push
pop
adc
addr16
lret
dec
pushf
sti
jp
inc
xchg
fdivr
fldl
outsb
int3
out
dec
call
fsubrs
push
pusha
cmp
scas
sbb
sub
adcb
sbb
cmp
xor
jle
or
xor
pushl
cli
lock
out
push
insb
aad
dec
int
cld
jmp
sbb
lcall
jmp
push
xchg
test
je
je
daa
hlt
repz
pusha
cltd
decl
xchg
push
mov
mov
xchg
pop
mov
sub
push
gs
call
push
mov
jne
xor
hlt
sub
mov
and
adc
jb
in
sbbl
in
mov
outsl
mov
mov
test
loop
ja
shll
daa
call
popa
inc
pop
pop
mov
and
cmp
inc
sbb
orb
jg
fidivs
push
in
push
jl
pop
test
lcall
inc
pop
pop
cmp
jp
fstps
jmp
inc
jle
pop
push
push
test
rclb
cmp
insb
stos
xchg
cs
lret
mov
pop
jne
incl
xor
in
je
stos
xchg
bound
shrb
pop
insl
pop
out
ljmp
cld
and
jo
push
iret
test
mov
les
xchg
jp
mov
add
sbb
and
mov
incl
lret
mov
notb
jmp
and
negb
in
incl
popf
sub
xlat
jnp
jno
daa
or
jle
sub
add
incl
outsb
sbb
push
jge
adc
inc
cld
push
or
push
sbb
jo
repnz
rolb
push
unpckhps
sbb
xchg
pusha
inc
mov
inc
adc
incl
fiadds
rcrb
subl
repnz
mov
push
adc
lcall
xchg
sti
lods
aad
dec
in
popa
pop
sub
pop
fidivrs
push
push
cli
outsl
jl
ret
loopne
fwait
push
jmp
pop
in
mov
sbb
mov
or
ljmp
scas
iret
movsb
mov
popa
ljmp
push
and
es
cmp
cmp
fists
pop
cwtl
cmp
cmpsb
aad
sub
ljmp
ljmp
out
movsb
xchg
mov
mov
sub
js
out
fisubrs
loop
mov
push
push
mov
jl
ret
es
icebp
call
mov
sub
push
fcom
js
in
rorl
xchg
stc
dec
daa
or
jnp
test
xor
mov
adc
mov
ds
xchg
mov
test
cli
mov
enter
mov
imulb
rcrl
push
cmp
cld
dec
iret
lret
insl
jp
cmpsl
and
ljmp
cld
ljmp
fisttps
cmpsl
cmp
fs
inc
sbb
je
pushl
inc
mov
jge
jbe
loope
sub
jb
cmp
mov
call
xchg
add
cmc
sbb
aaa
test
sub
mov
jmp
xor
jl
cmp
sbb
in
fisttps
xchg
pushl
xor
push
mov
pop
cmp
sahf
jle
xchg
inc
push
or
lcall
inc
repz
sbb
icebp
std
sbb
insb
jne
out
sbb
pop
mov
stc
andl
or
dec
inc
jmp
pop
mov
jg
mov
mov
int
ljmp
int
sahf
fdivrp
jmp
xchg
mov
xchg
mov
pop
and
adc
pop
mov
xchg
sbb
in
rcrb
incl
pop
push
and
pop
out
repz
call
push
jecxz
fdivrs
call
sbb
mov
jl
out
bound
push
leave
stos
push
push
xor
call
in
mov
leave
adc
in
xor
sub
jb
cwtl
mov
icebp
mov
sbb
in
movsl
ljmp
cmpsl
js
inc
daa
cmp
call
sar
xchg
psubq
in
movsl
xchg
xchg
loopne
in
std
push
pop
dec
pop
pop
sbb
cmp
push
xchg
or
push
adc
mov
push
push
mov
into
pop
dec
hlt
push
cmp
pushl
std
rcrb
dec
cmc
sub
or
test
outsl
adc
mov
and
xchg
test
adc
or
cmp
mov
imul
ficoms
sub
cld
pop
mov
imul
xchg
rcr
outsl
xchg
cmp
mov
mov
push
dec
ss
filds
fidivrl
sti
mov
lds
adc
mov
adc
jp
sbb
dec
and
xchg
lods
into
add
fcmovb
jecxz
arpl
mov
outsb
sub
decl
sbb
xchg
rclw
loope
scas
in
mov
and
cmpl
inc
ja
sbb
push
mov
cmp
aas
sti
sbb
jae
push
cmpsb
mov
mov
dec
cs
xchg
adc
outsb
pushf
in
mov
or
inc
lock
call
lds
in
lret
ljmp
popf
repnz
add
xchg
xchg
or
jp
jle
sbb
lret
fwait
and
mov
and
xor
and
movsb
jle
xchg
std
test
inc
cmp
stos
jo
call
or
out
das
xchg
jg
fwait
sub
aas
mov
pop
daa
mov
aaa
scas
cmpl
jecxz
test
adc
in
sub
dec
pop
addl
mov
xchg
sbb
inc
dec
jae
or
xor
lret
call
ret
mov
jg
stos
data16
out
sti
loop
mov
mov
mov
jg
or
lret
push
sub
mov
pop
call
fiadds
cmp
xor
pushf
mov
clc
cli
scas
test
mov
hlt
fistps
mov
nop
xlat
shrb
xor
sub
stc
push
sti
fmul
push
iret
les
dec
outsl
sbb
movsb
pop
pushf
cmp
push
outsl
jge
call
loop
test
mov
inc
inc
gs
mov
mov
jecxz
ljmp
dec
mov
sbb
mov
jge
adc
inc
sub
outsb
dec
inc
pop
xor
outsb
sub
shlb
das
adc
lahf
nop
pop
clc
inc
fdivrs
aaa
rclb
out
sbb
pushl
adcb
and
mov
jmp
in
aam
jg
fucomip
jg
stc
push
cmp
push
mov
pop
out
dec
xor
ret
lret
addr16
pop
ljmp
sub
sub
pop
les
pop
repz
aad
or
lea
xor
fdivrp
decl
in
xor
repz
pop
lahf
xor
lret
pushf
scas
dec
mov
por
incl
push
mov
mov
fcmovnbe
stos
ret
testl
jg
xchg
rclb
adc
jmp
movsb
sarl
popa
repz
sbb
xchg
cmpsl
jg
enter
add
imul
pop
call
ljmp
loop
adc
cmc
mov
cld
mov
outsl
mov
push
mov
shrb
adc
add
and
ficompl
pop
mov
adc
cld
out
fisttps
movsb
pop
mov
lods
cmp
call
cmpsb
call
sub
in
mov
push
ss
das
mov
sti
xchg
sub
insb
inc
in
mov
push
push
push
mov
imul
add
outsl
ja
fstpl
lds
or
or
cld
mov
jg
movsb
jne
mov
inc
mov
leave
push
push
push
fisubl
aad
out
pop
inc
pop
cld
jg
push
pop
mov
mov
addr16
jg
pop
push
xchg
mov
sub
outsl
cmc
jge
cltd
leave
mov
test
bound
bound
inc
pushf
pushl
pushf
xor
lock
inc
cmpsb
add
jns
jns
idiv
imulb
stc
xor
mov
jg
mov
dec
mov
mov
sub
cmp
adc
sahf
push
loope
add
inc
sar
mov
mov
and
adc
mov
int
lcall
addb
mov
xchg
jae
pop
dec
xor
xor
push
pop
sbb
stc
lcall
clc
loope
lock
and
cmpb
jns
stos
inc
jp
sub
out
push
pop
push
stc
jle
loope,pt
mov
or
dec
xchg
mov
xchg
mov
jge
add
mov
jns
aad
outsb
push
push
push
push
xor
pusha
test
inc
in
mov
pusha
jae
mov
sti
mov
jp
jb
loop
dec
xor
inc
dec
aas
mov
mov
arpl
or
fnstenv
das
pop
aam
xchg
jb
fbld
clc
popf
js
call
jo
mov
shll
fiadds
nop
adc
push
xor
or
push
cmp
int
jae
mov
fsubrs
push
rorl
dec
scas
inc
or
and
or
sub
mov
add
int3
cmpsl
add
clc
jl
xor
mov
xor
jecxz
fnstsw
incl
pop
push
sbb
sbb
sahf
jae
jl
jo
mov
sbb
call
adc
mov
add
orb
outsb
mov
mov
enter
fwait
inc
iret
and
dec
pop
cmpsl
jb
movsl
jnp
jmp
pushf
adcl
mov
jmp
cmp
cs
mov
sbb
mov
hlt
lcall
pop
fcomps
rcr
push
push
or
sarb
outsb
mov
xor
push
dec
lock
pusha
push
push
pop
sub
pop
pusha
dec
hlt
and
rcr
mov
incl
mull
mov
fcompl
adc
pusha
push
jo
dec
mov
push
arpl
pop
sub
mov
fldcw
sbb
repz
jecxz
push
pushf
lds
pop
lcall
dec
out
pop
mov
js
xor
mov
jmp
ljmp
in
mov
xor
dec
fmuls
push
popa
lcall
fidivl
sbb
mov
sbb
push
push
roll
mov
pop
cld
cltd
nop
shlb
mov
sub
mov
test
push
rolb
jle
jae
sub
push
lods
outsl
mov
sub
and
add
icebp
in
cld
dec
cmc
xchg
mov
mov
jmp
add
inc
rorb
jno
jg
popa
shlb
cmc
mov
hlt
fidivrl
mov
jns
int
aad
outsb
and
sar
call
fistps
xor
lods
lds
cmp
adc
push
xor
add
and
leave
cmp
test
aas
call
test
pop
aam
jl
add
mov
test
lcall
adc
lods
mov
sbb
cmp
aam
insb
xchg
and
fwait
push
std
cmp
jl
shrl
lret
jg
mov
repz
mov
int
sbb
mull
pop
clc
ffree
push
xchg
dec
pusha
repz
call
pop
fmull
xlat
cmp
xor
ret
mov
lcall
jecxz
call
ljmp
xchg
test
mov
negl
mov
inc
lods
push
pop
fisttps
cli
cmp
jns
push
repz
test
or
sub
outsb
jne
shll
dec
jb
rorb
lcall
adc
iret
cmp
sahf
pop
inc
loop
push
inc
and
sbb
cld
cmp
pop
adc
push
dec
icebp
push
rorl
bound
inc
and
pop
aaa
clc
lea
in
out
lahf
or
sbb
fucomip
pushl
jne
sub
dec
ret
cmp
or
adc
sbb
jmp
aas
jmp
int
addr16
adc
mov
fsubs
pop
lret
repz
mov
mov
jge
std
shlb
fwait
je
push
mov
and
jns
add
jno
push
aad
jg
movsl
test
ret
dec
cmc
mov
int
stos
test
movzbl
int3
daa
je
dec
xchg
insb
pop
inc
jmp
mov
popf
cltd
popa
inc
loopne
sar
adc
imul
inc
xor
pop
adc
lcall
inc
out
lcall
xchg
cmp
push
pop
pop
shlb
mov
xor
jge
pop
cs
pop
pop
pop
inc
xchg
add
cmp
and
cmp
jg
jl
cmp
pop
lret
ret
clc
xor
mov
mov
test
jbe
inc
adc
aaa
ss
movsb
mov
repnz
rcl
lahf
sti
ljmp
test
cld
outsl
cmc
cmc
cli
jno
mov
orl
call
add
ljmp
cmp
dec
pop
mov
nop
lock
or
add
and
lea
push
or
inc
and
mov
pop
push
adc
or
adc
or
leave
lock
dec
pop
subb
push
jecxz
movsb
clc
ja
int
ret
dec
push
fsub
mov
js
lcall
repnz
pop
mov
mov
pop
lock
mov
pop
pop
scas
sbb
je
lods
pop
cmp
xor
int3
test
aaa
xchg
roll
call
xchg
popa
inc
jg
cmpsl
cld
jmp
xchg
jne
adc
jp
repnz
js
mov
es
scas
push
cwtl
add
sub
push
or
dec
aam
xor
insl
add
xchg
cmpsl
in
test
out
cmp
sti
insb
fwait
cmp
les
ja
pop
loop
pushl
mov
xorb
jns
lock
xchg
adc
dec
shl
push
das
sub
add
add
or
stc
push
into
out
mov
cmp
sahf
sbb
sahf
sbb
in
das
hlt
pop
jle
mov
and
and
cwtl
jg
push
pop
push
out
add
hlt
jns
jp
fs
iret
fsubrs
xchg
mov
out
ret
ljmp
xor
sub
dec
jecxz
jle
mov
jmp
int
ljmp
and
sbb
lock
into
inc
sbb
mov
xchg
pop
xor
lret
sarl
das
inc
das
cmc
out
mov
into
mov
popa
sahf
pop
inc
js
std
fistpl
stos
in
pop
arpl
cvtps2pi
mov
jmp
je
ljmp
scas
repz
in
std
fldz
orl
rep
jnp
adc
ljmp
mov
das
pusha
je
add
jl
lret
addl
mov
fisubrs
cmp
jg
fadds
arpl
xchg
xor
pop
ljmp
push
shll
mov
fs
pop
pop
dec
gs
popf
mov
xor
jmp
adc
inc
pop
or
pmaddwd
jb
mov
dec
add
push
mov
fdivr
add
cmp
and
sbb
jg
push
inc
adc
mov
jae
xchg
clc
decl
int
xor
xchg
push
nop
ljmp
scas
and
rcrl
or
js
icebp
ljmp
mov
filds
fiadds
cmp
les
lods
jmp
add
add
jg
jle
sub
xchg
mov
mov
cld
stos
mov
and
test
clc
jg
lahf
fistpl
jne
fnsave
in
in
scas
in
outsl
hlt
pushl
popa
stc
xor
push
adc
pop
sar
cld
push
mov
into
call
cld
dec
fistpll
mov
imul
test
lea
ljmp
mov
and
mov
jno
adc
addr16
cmp
mov
addr16
pop
mov
shlb
push
dec
aaa
dec
inc
adc
sbb
cmpsb
xchg
call
or
adc
and
bound
sbb
sbb
mov
not
cmp
dec
out
aaa
inc
ja
out
and
in
test
pushl
cwtl
mull
jp
mull
xor
mov
sbb
arpl
loope
push
lods
push
les
popf
xchg
inc
pop
add
testb
jle
lock
cmp
les
aad
out
jl
and
mov
cmp
mov
jo
mov
std
jnp
addr16
incl
std
pop
roll
lods
or
lcall
das
mov
js
dec
adc
sub
leave
mov
jmp
mov
xchg
mov
jno
adc
mov
mov
je
inc
and
out
popf
sub
in
loop
add
js
inc
xchg
test
cld
imul
sub
aam
icebp
das
and
fdivrs
push
mov
ja
fisubl
add
sub
idivb
pop
ficoms
aaa
imul
mov
mov
or
lahf
out
mov
into
sbb
pushl
jg
adc
sti
xor
movb
test
add
add
sub
ljmp
shl
test
lahf
or
and
xchg
push
aad
dec
adc
jl
cli
ds
sub
mov
xchg
mov
test
call
mov
cmc
lcall
sub
movsb
pop
cmp
xor
push
dec
ret
lock
call
and
sub
and
push
xor
out
pop
dec
loopne
adc
call
pop
pop
inc
seto
repnz
andb
adc
mov
aaa
pushl
inc
repz
ret
jmp
mov
ds
mov
push
stos
incl
cmp
push
adc
pop
adc
inc
push
sbbb
add
jg
push
inc
sub
popa
mov
cmp
jp
aad
xchg
mov
dec
les
jnp
ljmp
jg
push
negb
ret
xor
mov
adc
hlt
push
inc
xor
or
pop
call
incl
adc
jnp
shll
lret
lret
mov
fildl
incl
clc
mov
mov
xchg
rcrl
xor
dec
mov
mov
decl
cld
pop
pop
jns
adc
xorl
sub
enter
aaa
incb
pop
jo
aam
pop
dec
dec
loope
std
ret
insb
je
sbb
call
adc
outsb
divb
lds
and
repz
push
cld
lcall
jb
pop
int
int
out
int3
leave
fdivs
cmp
cld
xchg
testb
inc
scas
int
leave
test
inc
dec
cmc
notb
push
out
xor
push
dec
mov
jecxz
xchg
mov
fimull
cld
repnz
imul
clc
call
ljmp
aaa
mov
insl
mov
jb
mov
cmp
dec
inc
sub
xorb
popf
das
mov
ds
aam
movsl
lcall
push
dec
jae
push
nop
stc
inc
ljmp
cmp
add
jbe
and
cmp
call
int3
test
orl
lret
or
mov
push
jecxz
lcall
stos
mov
movsb
mov
fptan
div
shl
lret
je
jl
cmp
fstl
dec
sbb
loope
add
call
add
cltd
adc
pusha
push
mov
sbb
call
insl
inc
loop
hlt
test
imul
icebp
aas
sub
sub
mov
xchg
in
in
movsb
fwait
pop
bnd
lock
into
rclb
out
jmp
dec
dec
gs
jp
clc
outsl
jo
add
sbb
mov
push
dec
rcl
inc
pushf
and
fucomip
jg
xor
mov
push
xchg
jo
repnz
stos
sbb
pop
xchg
incl
inc
xchg
into
das
add
movsb
shll
mov
lret
push
shrb
push
addl
stos
xlat
xor
mov
in
cmp
hlt
mov
fcmovnu
xor
jne
call
jl
enter
mov
jmp
sbb
out
shl
mov
es
jg
cs
jno
and
add
jp
cmp
out
push
xchg
outsb
adc
test
add
shld
fs
add
jmp
in
fidivrs
je
jl
test
or
jg
incl
sub
sbb
cmpsb
rorl
outsl
shlb
in
inc
std
incl
and
xchg
ret
sbb
iret
cmp
inc
imul
add
or
mov
out
fndisi(8087
inc
pushf
push
push
pop
rolb
decl
call
lcall
lcall
cld
fbstp
pop
insl
mov
int
in
adc
int3
mov
ljmp
pushl
push
shl
aam
mov
adc
into
mov
jno
daa
mov
test
cli
test
shr
test
jle
dec
mov
pop
ljmp
dec
lret
inc
fldl2e
mov
loopne
ret
cmp
inc
and
iret
adc
fnstsw
decl
ret
scas
clc
popa
jl
fsubr
cmp
jp
nop
sub
orb
and
mov
std
xchg
push
dec
lahf
sbb
out
or
add
mov
and
decl
stos
jg
or
jle
cmp
cmp
add
inc
rcrb
mov
incl
std
mov
cltd
inc
xchg
int3
xor
shlb
pop
loop
ljmp
mov
in
int3
fucomip
xor
mov
roll
lock
fildl
push
dec
or
mov
sub
fwait
test
xchg
das
dec
xlat
rolb
jecxz
mov
cwtl
mov
pop
loop
fsin
add
std
ljmp
xor
mov
mov
out
jg
fldl
mov
inc
inc
popa
xchg
cmp
jno
pop
ljmp
fdivr
and
sub
addr16
ds
jg
je
test
icebp
add
adc
mov
cmpsb
pushf
out
incl
je
enter
das
test
pop
jmp
or
iret
dec
aad
cmpsl
out
daa
test
in
out
ds
int
pop
call
popa
xor
or
push
in
pusha
xor
cli
fldt
cld
call
test
push
arpl
sbb
sub
int
pushl
fwait
aas
shrb
push
fs
arpl
inc
stos
outsl
pushl
clc
fsts
ret
adc
jecxz
dec
int3
mov
ret
mov
inc
or
int3
jg
jg
test
cmpsl
or
mov
add
call
lock
ljmp
popf
in
pop
insl
cmc
push
fisubrs
sub
cmpsb
leave
push
test
out
imul
mov
jb
insb
imul
pop
mov
mov
call
incb
div
mov
inc
mov
imul
cmp
fiadds
pushl
negl
and
add
mov
nop
call
sahf
mov
cmpsb
mov
out
test
idiv
call
jb
or
jb
inc
test
adc
jns
subl
dec
rolb
cld
mov
out
pop
mov
movsl
xchg
dec
sub
pop
std
jle
xchg
adc
pop
gs
fstpl
xlat
ljmp
jmp
adc
cld
mov
mov
inc
rcll
jecxz
push
adc
loop
incl
dec
pop
mov
lret
or
insb
dec
in
mov
mov
xchg
sar
call
add
cs
push
loope
outsl
lock
enter
lcall
sbb
mov
jbe
std
lahf
cli
roll
cltd
mov
jmp
and
mov
inc
int3
sbb
incl
jge
add
bnd
jb
push
mov
lea
mov
or
cmp
popf
xor
adc
jnp
out
fisttpll
sub
arpl
or
outsl
mov
inc
aas
and
pop
loop
out
daa
xchg
lock
fbld
les
sub
xchg
daa
outsl
outsl
lock
aam
push
sub
dec
jae
imul
mov
les
fstl
cli
xor
movb
inc
cmp
or
xchg
aad
xor
loopne
enter
and
adc
out
push
ret
mov
rorl
roll
mov
sub
clc
ja
or
out
mov
pop
dec
pop
pop
mov
push
push
pusha
push
jmp
push
sbb
or
iret
jmp
mov
add
push
je
mov
hlt
rorl
std
addl
subb
and
lret
and
xchg
dec
push
inc
mov
aad
cld
hlt
mov
add
cld
adc
push
sbb
pop
clc
sub
lock
std
std
mov
mov
ret
jb
fs
fildl
mov
mov
pop
jb
xlat
mov
aas
imulb
pop
cli
in
sbb
push
aam
pop
enter
test
call
and
test
jge
inc
inc
cs
mov
xchg
xchg
in
aaa
pop
cli
sub
jne
push
movsb
iret
test
decl
ror
jmp
dec
insl
andl
ret
jg
das
lret
decl
jecxz
sarb
inc
pop
and
loope
stc
das
dec
dec
jge
jnp
in
inc
lret
aam
pop
shr
aaa
jmp
clc
popf
sub
sbb
addl
xchg
push
imulb
lds
add
js
rolb
inc
fildl
mov
push
mov
ret
je
jne
int3
ret
pop
sbb
pop
pop
das
pushl
fnstsw
fxam
orl
aam
push
int
fldt
call
test
jge
adc
insl
add
inc
cmp
jne
jg
lret
lcall
push
pushf
adc
dec
mov
xchg
imul
xor
arpl
iret
lahf
std
sub
dec
add
addb
fs
in
fsubrs
and
aam
pop
call
cs
xchg
jno
sahf
scas
add
cs
jbe
cld
dec
dec
adc
mov
xchg
cmp
jl
fmuls
incl
addr16
xchg
mov
ret
jb
jo
lret
int
sbb
in
xchg
add
jl
lock
pop
pop
add
cld
add
in
fildl
aam
push
shlb
dec
adc
and
popf
xor
std
je
insl
mov
scas
mov
aad
inc
xchg
xchg
clc
mov
fildl
fisubrl
and
mov
push
ret
data16
mov
sbb
add
sbb
cmp
jo
mov
sub
mov
dec
pushf
jbe
xchg
add
jno
xor
fld
push
cmp
ljmp
pop
scas
mov
sbb
add
push
and
mov
aad
shlb
andl
cs
daa
cmpsb
cltd
or
mov
call
xchg
insl
add
inc
xchg
or
imul
das
jg
ja
mov
sbb
jge
leave
in
inc
std
and
aam
jg
in
loopne
and
cwtl
lcall
xchg
mov
sahf
hlt
add
daa
movsb
inc
idivb
cld
decl
fs
mov
js
ret
sbb
dec
in
inc
andl
jo
inc
lret
outsl
jge
stc
pop
iret
jge
add
sub
pop
pop
mov
in
call
push
aam
pop
call
lcall
sub
mov
mov
mov
mov
ljmp
gs
enter
inc
xor
jmp
mov
ret
jne
add
ret
iret
outsl
std
sub
pop
jnp
mov
loopne
aas
jl
jge
pop
in
or
imul
insl
in
ljmp
cmpsw
test
xor
std
pushl
cmpsl
movsb
jne
subl
repz
das
cmp
filds
xchg
imul
jne
cmp
jnp
inc
mov
lret
lahf
stc
jg
repnz
pop
dec
cwtl
pop
xor
pop
or
test
push
cmp
pop
pop
into
sub
jg
sub
fcmove
nop
and
outsb
std
add
in
inc
out
fdivr
jmp
aam
push
mov
dec
addr16
push
push
flds
lret
shlw
movsb
cs
ja
outsb
jp
loope
xor
ljmp
loope
sub
rcll
lret
movsb
cmpsb
in
jp
stos
lret
mov
loope
inc
cmpl
add
mov
jne
rclb
sahf
lds
call
icebp
fucomip
sub
inc
scas
cmp
popf
dec
out
push
lcall
bswap
pop
jg
xorb
cs
push
daa
ret
xor
pushl
mov
cmp
xor
movsb
cmpsl
loopne
inc
stos
xchg
ret
neg
dec
jb
das
testl
mov
fwait
dec
adc
push
out
xchg
xchg
adc
shrb
dec
fsub
mov
inc
icebp
lret
incl
dec
push
enter
pop
femms
ljmp
and
mov
outsb
iret
loope,pt
cmp
imul
xor
jbe
xchg
xchg
dec
pushl
clc
popa
inc
push
jmp
into
daa
in
sbb
jno
stc
ljmp
xorb
push
add
lcall
xor
pop
cmp
popa
mov
fcmovne
mov
dec
push
push
iret
pop
ficoms
jge
push
lahf
mov
js
std
fldenv
cmp
lcall
push
mov
dec
xchg
jbe
xchg
subl
test
movsb
lods
in
cli
lods
ret
fistpll
in
xchg
mov
jns
cwtl
mov
lods
gs
pop
dec
mov
mov
cld
out
xchg
shll
rclb
test
mov
ja
repnz
mov
ficomps
fcomp
sbb
enter
shrl
jg
jmp
jae
mov
mov
dec
or
xchg
je
in
lret
test
fimull
pop
lret
cld
jmp
cmpsl
cmp
cmp
adc
out
daa
and
mov
rcr
push
test
jb
pop
cs
idivb
sbb
insb
inc
ja
jg
xchg
rcrl
iret
push
sbb
xor
ljmp
leave
outsb
xor
jl
stos
shll
xchg
sub
gs
fidivl
decl
inc
stos
xor
pop
pop
stc
pop
sbb
cmp
cmp
sbb
pop
mov
push
popf
pop
scas
vpsubsb
xchg
fcmovne
mov
jo
jbe
dec
iret
imul
pushfw
mov
pop
push
jp
sub
pop
outsl
sub
pop
loopne
shll
dec
lcall
mov
jbe
xchg
push
push
push
mov
ret
push
int3
call
lret
iret
mov
mov
mov
insb
aam
orl
inc
stc
call
pop
fcompl
pop
aas
cs
out
mov
pop
incl
push
rclb
xchg
pop
hlt
ret
jae
or
fildll
mov
and
adc
jbe
xchg
adc
cmc
insl
scas
fidivrl
movsb
dec
jmp
xor
xlat
int3
dec
int3
insl
xor
cmpsb
int
rclb
call
add
fcoms
repz
xchg
sahf
fdivrl
mov
repnz
pop
push
lds
mov
outsl
ja
in
inc
das
clc
mov
test
mov
ret
cmp
xor
mov
dec
mov
rep
cmc
outsl
push
fidivl
inc
stos
clc
rclb
pop
mov
mov
or
mov
xchg
test
in
pop
incl
movsl
cs
mov
aad
dec
outsl
js
addr16
pop
call
sarb
xchg
scas
mov
adc
or
sub
iret
or
dec
cld
lret
jg
sub
push
and
adc
mov
out
sub
dec
lods
xchg
loope
push
sub
sub
jg
lods
in
mov
in
push
mov
pop
andl
push
and
fmuls
add
cli
jg
test
cmpb
aas
mov
aas
aam
sbb
aas
call
mulb
pop
mov
adc
sbb
and
sub
inc
xor
jp
int3
xor
xor
incl
xor
xor
xor
xor
mov
scas
xor
xor
xor
xor
push
xor
jmp
je
jg
test
xor
xor
xor
xor
xor
es
xor
jg
outsl
std
xor
xor
xor
xor
xor
pushl
inc
ss
ss
ss
mov
mov
or
inc
aaa
push
aaa
gs
insb
aaa
mov
pushl
aaa
call
cmp
cmp
cmp
cmp
cmp
cmp
pop
ljmp
cmp
cmp
imul
mov
and
mov
je
xor
ss
aaa
cld
xor
mov
mov
cmpsl
cmp
cmp
cmp
cmp
cmp
outsb
cmp
add
or
ljmp
bound
out
pop
cmp
cmp
cmp
jae
sarb
xchg
sbb
sarl
rorb
loope
jmp
cmp
cmp
sahf
cmp
cmpl
icebp
ds
aas
mov
shrb
andb
add
jae
ud0
jg
jge
dec
xor
test
mov
lret
xor
xor
xor
xorb
xor
mov
xor
xor
xor
xor
xor
pop
mov
mov
xor
add
adc
sbb
sub
and
jle
xorl
mov
ret
ss
ss
fdivs
adc
cmp
aaa
jo
xchg
incl
pushl
pushf
aaa
cmpsl
aaa
scas
aaa
mov
aaa
les
or
cmp
cmp
rorl
cmp
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
xchg
nop
cmp
cmp
cmp
cmp
cmp
cmp
loopne
lods
cmp
cmp
ds
aas
and
aas
mov
sbb
aas
int
fxam
rorb
push
inc
add
pushl
xor
xor
xor
xor
xor
std
or
orb
dec
xor
jg
rol
in
outsb
mov
leave
ss
ss
aaa
dec
aaa
xchg
aaa
test
incl
mov
jp
test
stos
cmp
loopne
outsl
clc
fistpll
out
in
xchg
add
adc
dec
int
cmp
inc
mov
xchg
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
lcall
jo
mov
cmp
stos
cmp
add
xor
imul
jge
lea
xchg
lods
ds
loopne
loopne
orl
cld
xor
sbb
mov
xor
xor
insl
xor
xor
inc
xor
mov
xor
js
xchg
int
and
xor
mov
fildl
pop
adc
pushl
pop
aaa
insl
aaa
js
jg
cmpsl
or
jns
aaa
xlat
arpl
mov
mov
mov
cmp
mov
inc
cmp
imul
xchg
in
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
dec
mov
cmp
das
ds
ds
ds
ds
cwtl
ds
ds
ds
add
sbb
sub
aas
pusha
aas
ja
test
mov
xchg
lock
jmp
and
push
xor
xorb
xor
xor
xor
xor
xor
push
xor
jg
lcall
jae
test
nop
xor
xor
jns
lods
xor
xor
xor
xor
xor
xor
clc
decl
push
xor
xor
xor
ljmp
icebp
add
xor
sub
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
decl
xor
out
xor
daa
xor
aas
ss
ss
jg
ss
mov
mov
aaa
sub
cmp
inc
aaa
inc
aaa
xchg
mov
loopne
inc
lods
aaa
mov
popf
cmp
popa
cli
call
cmp
xchg
cmp
cmp
insl
cmp
mov
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
inc
fwait
dec
mov
xchg
pop
scas
jg
cmp
cmp
cmp
cmp
pop
sub
cs
xchg
mov
call
and
in
add
sub
aaa
icebp
xor
jg
mov
sarl
cld
cmp
cmp
cmp
cmp
mov
and
sub
xor
cmp
push
jg
jle
call
xlat
mov
fcmovnbe
cmp
cmp
push
scas
fnsave
in
cmp
sarl
fidivrs
jecxz
mov
jmp
inc
cmp
mov
ret
sub
cmp
cmp
out
jp
inc
aad
cmp
aaa
movsb
cmp
incl
lret
cmp
sbb
inc
in
ds
and
out
test
jns
mov
lcall
shr
ljmp
push
fcomip
sub
xor
cmp
dec
aas
push
aas
pop
aas
outsb
aas
jbe
cmpl
inc
std
outsl
loopne
mov
ret
aas
lret
aas
fidivrs
out
std
aas
lock
mov
adc
rolb
and
daa
clc
fildll
jl
xor
dec
xor
pop
xor
jne
das
hlt
sbb
cmpsb
xor
ret
xor
xor
xor
xor
fwait
outsb
xor
xor
xor
iret
adc
xor
jb
js
jge
xor
xor
xor
xor
xor
xor
xor
xor
mov
dec
inc
xor
push
xor
xor
ja
xorl
lcall
mov
xor
xor
xor
xor
xor
xor
es
inc
loope
xor
add
push
fildll
addr16
push
outsl
xor
jp
xorl
decl
cmpsb
xor
ret
xor
xor
cld
jmp
jecxz
in
xor
xor
xor
xor
outsl
xchg
adc
and
xor
xor
inc
jns
loop
sbb
xor
xor
sbb
movsl
xor
int3
xor
clc
xor
jg
sbb
ret
or
adc
and
inc
aaa
pop
aaa
cwtl
mov
cld
aaa
icebp
aaa
aaa
or
sub
cmp
cmp
jno
out
pusha
mov
lahf
cmp
cmp
cmp
cmp
ljmp
cmc
and
pop
cmp
mov
in
movsl
jge
cmpl
cmp
outsl
cmp
cmp
cmp
cmp
pop
cmp
cmp
push
lea
movsl
cmp
cmp
cmp
cmp
cmp
cmp
test
mov
sbb
inc
add
inc
out
or
popa
loope
inc
aas
popa
aas
imul
icebp
shll
les
or
xor
xorl
ljmp
xor
dec
xor
xorl
test
incl
je
icebp
xor
xor
xor
orb
and
xor
arpl
aaa
je
imul
jge
pop
scas
xor
lock
ljmp
xor
xor
adc
ffree
xor
popf
mov
mov
xchg
das
mov
xor
aas
hlt
xor
les
sub
mov
adc
pushl
loop
call
ss
add
adc
sbb
push
aaa
and
sub
mov
pusha
shll
aad
aaa
adc
je
or
xor
adcb
and
xor
dec
cmp
sbb
mov
xchg
or
jns
mov
or
fsubr
push
sti
scas
rolb
pop
popf
rcrl
paddd
out
cmp
popf
fstps
cltd
cmp
cltd
ds
inc
pusha
out
aas
and
mov
stc
lret
xor
or
add
add
jnp
repnz
fsubl
outsb
pop
and
pop
js
pop
xor
in
push
inc
jmp
add
test
and
loopne
cs
mov
sbb
jmp
leave
pusha
test
fs
and
add
mov
loop
cmp
jnp
or
and
push
push
inc
jae
arpl
repz
xchg
lea
daa
inc
into
push
loope
out
adc
mov
mov
stos
and
adcb
js
and
repz
inc
and
in
in
add
jl
and
pop
cmpb
add
inc
pop
lock
jl
push
add
stos
sbb
nop
and
repnz
add
hlt
dec
inc
sub
pop
xchg
pop
notb
and
and
adc
push
push
push
outsl
pop
pop
loope
xchg
test
push
sub
xor
dec
and
add
cmp
inc
and
and
inc
sahf
push
add
cmp
add
cwtl
adc
pslld
jo
and
fdivp
sub
jl,pn
and
cltd
xchg
dec
sbb
ds
dec
loope
inc
and
add
xchg
inc
out
adc
fsubr
or
add
repz
and
xor
sbb
adc
data16
add
or
addr16
fwait
xor
adc
and
and
out
in
push
push
loope
xor
xchg
pop
repnz
add
add
pop
pop
jle
xor
inc
inc
and
daa
in
xor
adc
or
push
adc
xchg
adc
xor
orb
das
and
mov
adc
and
add
add
push
repnz
adc
add
adc
jns
repnz
add
xor
add
inc
dec
adc
and
dec
mov
add
addb
push
xchg
cmpsl
sub
pop
inc
and
xchg
and
insb
mov
xchg
inc
cmp
push
rep
or
jp
or
sbb
mov
xchg
inc
pop
sbb
mov
test
adc
rdpmc
or
adc
mov
mov
add
add
mov
leave
or
les
pop
jae
mov
mov
fcoms
cmp
loope
cmp
popf
inc
ja
sbb
xlat
cmp
jae
test
push
mov
jmp
inc
dec
lock
add
jne
sbb
shr
fwait
mov
pop
pop
push
int
idivl
jne
sbb
pusha
or
jno
and
fstps
gs
lods
sub
xchg
mov
fs
xor
notb
xchg
adc
and
cld
inc
or
aaa
cmpl
inc
outsb
shll
int
out
shll
xchg
mov
popa
sbbl
sbb
add
in
pop
and
decb
dec
and
les
pop
stos
mov
repnz
hlt
imul
xor
mov
insb
ss
dec
xchg
gs
insl
insl
jae
loopne
orl
push
clc
insb
dec
dec
inc
fistps
addr16
xor
rclb
jb
pusha
mov
loopne
ss
xor
loope
jecxz
cwtl
cmpsb
imul
imul
add
fwait
mov
dec
push
faddl
shll
test
pop
inc
add
push
movb
jl
ljmp
lea
dec
sub
sbb
sbb
aaa
dec
call
popa
jbe
sbb
popf
aas
mov
cmp
scas
lea
push
fs
jae
push
out
xchg
inc
sbb
xor
in
or
inc
xchg
das
jns
sbb
jmp
push
push
jno
orl
dec
sbb
add
mov
inc
int
lods
inc
or
negb
pop
jno
fistps
push
and
out
enter
outsl
clc
lods
xor
sub
js
or
popa
or
inc
cwtl
cmp
in
lcall
adc
add
jnp
cli
jne
ret
rorb
nop
repz
or
xchg
xchg
leave
adc
lcall
and
ljmp
hlt
adc
es
and
pop
repnz
inc
and
inc
and
or
call
data16
fildl
and
or
daa
jg
aad
xchg
mov
cmpsb
repnz
mov
mov
add
test
mov
outsl
outsb
gs
lret
mov
je
gs
gs
es
aad
insb
xlat
popa
sub
mov
jp
outsb
arpl
lcall
loope
flds
test
enter
cmp
bound
fs
sti
or
xchg
and
sbb
rorl
mov
adc
hlt
sub
rol
jae
mov
dec
gs
popf
ror
leave
leave
lret
int3
pushf
lds
adc
push
into
jp
pushf
pushf
pushf
pushf
rcl
rcl
imul
jge
or
sar
imul
gs
test
popa
aas
std
in
addb
dec
cmp
pop
push
std
mov
sub
or
into
jns
std
inc
std
das
mov
data16
ja
xor
icebp
push
aad
jne
add
loopne
les
std
mov
mov
sti
mov
mov
mov
push
inc
xchg
lods
and
xor
or
jp
dec
push
stos
mov
ss
inc
shrb
je
jns
jne
in
and
ret
mov
pop
call
mov
mov
push
push
adc
imul
dec
push
decl
jne
in
enter
out
and
push
outsl
mov
push
call
pop
inc
in
inc
inc
and
jmp
mov
fimull
inc
setl
bound
xchg
xchg
xchg
xchg
inc
enter
xchg
mov
lcall
pop
xchg
push
and
and
mov
xlat
mov
nop
push
and
cmp
std
xchg
std
xchg
bnd
std
xchg
std
lret
mov
cs
lret
movsl
jnp
js
jo
insb
mov
pop
mov
mov
mov
icebp
add
mov
cltd
loopne
inc
and
fwait
mov
add
and
xor
mov
xchg
or
es
or
leave
push
adc
cld
std
lcall
xor
inc
aam
inc
push
out
lcall
repz
hlt
cmc
mov
mov
push
add
and
inc
add
insl
adc
lock
pop
or
cli
lret
mov
sbb
fs
outsl
pop
inc
in
add
outsb
mov
je
jns
mov
dec
outsb
insb
gs
xchg
gs
jne
arpl
dec
add
mov
and
mov
jno
add
cs
sub
or
sbb
dec
xchg
imul
xchg
gs
cs
mov
or
bound
mov
cs
out
call
pop
push
add
pop
out
and
add
add
int
and
fldenv
lds
pop
push
scas
jmp
rclb
fwait
ljmp
mov
jmp
jge
insb
out
sbb
add
pop
inc
push
dec
iret
shll
leave
mov
lds
or
out
sbb
push
xchg
scas
pop
xchg
xchg
mov
loop
inc
push
stc
mov
or
mov
add
sub
out
sbb
adc
jne
adc
cmp
jno
ret
add
sbb
jle
dec
repnz
cltd
xchg
push
aam
add
fmuls
pop
adc
or
or
adc
data16
pop
or
int
insl
xor
call
enter
push
mov
data16
inc
mov
add
push
fstps
enter
add
cmp
jnp
rcrb
mov
fsubs
push
test
aaa
dec
mov
adcl
mov
fdivl
ficompl
dec
sete
or
push
loope
rcrl
leave
pop
mov
into
cltd
stos
push
js
push
lret
neg
or
mov
or
jo
add
xor
xchg
mov
pop
pop
or
inc
sbb
push
add
inc
and
push
adc
sbb
aaa
leave
push
sbb
loopne
adc
dec
inc
jo
or
repnz
mov
inc
loopne
sub
pop
push
mov
cmp
inc
nop
or
stc
inc
add
push
push
or
pop
repnz
push
add
pusha
inc
and
add
cli
movsb
hlt
cs
ret
cmpsb
sbb
push
test
sbb
psubusb
bound
enter
lcall
int
mov
cmpsb
enter
and
add
jle
sub
add
int3
or
xchg
orl
and
cmpsb
imul
imul
mov
out
inc
fmulp
ret
dec
shll
jmp
fs
jae
xchg
add
jle
cmp
jmp
insb
xchg
dec
stos
pop
add
insl
lcall
pop
xor
jb
mov
mov
aaa
shr
inc
cmp
xor
push
dec
dec
dec
jo
mov
and
push
add
fadd
mov
mov
outsl
pop
or
mov
outsl
and
dec
loopne
dec
popa
jns
jne
jae
xor
fstpl
popa
dec
push
push
subb
imul
iret
mov
dec
jae
push
mov
and
dec
sub
cmp
adc
add
dec
adc
mov
inc
insb
xchg
xchg
pop
inc
inc
adc
in
push
xchg
push
xchg
sbb
imul
inc
enter
push
xchg
lods
cmp
stos
mov
dec
adcb
cltd
inc
sub
mov
mov
dec
das
imul
adc
xor
pop
iret
cmp
pop
packsswb
and
dec
sub
sbb
mov
adc
add
add
xchg
and
adc
jno
movsl
addb
sbb
push
or
hlt
es
mov
outsb
insl
rorb
pop
mov
addr16
ds
sub
and
sbb
push
mov
push
outsb
jb
mov
jbe
and
mov
inc
outsl
js
sub
and
cltd
dec
mov
inc
adc
add
lds
and
adc
lea
mov
mov
in
pop
sbb
or
mov
std
push
jle
sub
dec
insl
insl
dec
jae
and
add
std
pop
pop
sbbl
in
inc
add
or
pusha
add
popa
add
jns
fs
in
dec
es
and
sbb
cld
aaa
pop
xchg
testl
cmpsb
imul
lcall
enter
fwait
cmpsb
imul
shll
xor
jge
add
add
add
add
push
adc
pop
xchg
mov
adc
add
adc
fwait
dec
ss
imul
out
ret
dec
scas
pop
adc
and
add
or
pop
or
daa
adc
pop
test
loop
bound
lcall
icebp
clc
push
in
fnstenv
jp
cmp
jne
or
shlb
sbb
adc
jnp
mov
dec
or
inc
push
add
jnp
popw
add
push
dec
mov
mov
movq
jae
jo
mov
outsl
pop
jns
pop
mov
xor
adc
cmp
adc
mov
je
stc
cmovno
mov
in
movsl
imul
jns
add
mov
and
xor
fs
incb
adc
lret
insl
gs
mov
push
ret
push
fistpl
xor
or
push
fsubrs
add
fldlg2
cld
mov
jae
nop
outsb
sbb
add
pop
or
or
dec
mov
adc
addr16
pop
jecxz
mov
jns
and
mov
cmp
xor
jecxz
inc
jmp
insl
add
outsb
inc
jae
and
mov
popa
jns
popa
and
ss
cmp
add
addr16
xlat
jne
jg
inc
imul
xchg
or
notl
sbb
sub
add
push
jmp
gs
jb
cmp
fnstenv
xor
popa
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
pop
adc
xchg
xchg
outsb
jae
pop
xor
xor
cmpsb
fcmovnu
gs
push
sub
shll
insb
or
daa
dec
dec
sub
fs
xlat
outsb
xchg
mov
jl
in
push
daa
jbe
mov
ret
fs
outsl
pcmpeqw
lret
je
and
xor
inc
push
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
fildl
add
mov
es
and
sub
lock
inc
xor
cli
xor
lods
call
lea
stos
sub
pop
mov
mov
add
pop
xor
xor
xor
xor
xor
and
fcmovnbe
xor
xor
xor
xor
filds
xchg
xor
dec
stc
jg
mov
jg
cli
fwait
ss
aaa
xor
aaa
mov
cmp
cmp
push
cmp
test
call
add
sti
incl
jp
cmpl
cmp
lods
aam
hlt
mov
cmp
cmp
cmp
inc
mov
out
cld
cmp
clc
jo
cmp
ljmp
xchg
xchg
xchg
xor
xor
xor
xor
jne
jg
mov
lahf
xor
xor
xor
xchg
sub
fimull
in
adc
or
ss
rol
iret
jg
out
out
divb
and
aaa
mov
cmp
cmp
add
push
sarb
faddl
and
sub
add
sbb
xor
xor
subb
adc
add
in
or
pop
dec
shlb
jae
push
mov
loopne
xchg
add
popa
adc
adc
cmovo
inc
or
lcall
pop
mov
test
jb
add
or
aad
or
or
add
sub
stos
mov
xor
test
mov
loopne
adc
mov
jb
pop
dec
movlps
nop
es
add
xor
and
xchg
fsts
addb
lods
sahf
ret
and
popf
mulb
cmpsl
popa
popf
cld
add
rolb
add
cmpsl
flds
dec
jp
stos
cwtl
mov
orb
add
add
sbb
mov
fcomip
inc
push
cli
sidtl
add
aaa
pop
jns
insb
into
icebp
and
loopne
adc
or
and
std
rorb
xchg
push
pop
add
add
imul
push
pushf
sub
call
add
and
adc
inc
add
rclb
xchg
sub
push
daa
nop
add
add
and
add
pusha
or
and
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
