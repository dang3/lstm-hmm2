insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
in
pusha
outsl
cmp
xor
sbb
ss
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
ja
xchg
rclb
repnz
adc
outsl
mov
roll
test
push
or
or
lds
daa
repz
cmp
stc
into
mov
inc
push
imul
stc
push
inc
add
in
clc
cld
dec
adc
gs
mov
push
or
pop
sbb
mov
adc
add
in
fwait
pop
add
or
cmp
adc
push
and
ja
enter
add
xor
idivb
ret
bound
pop
hlt
sbb
add
popa
je
insb
orl
adc
cs
orl
push
pop
sar
daa
mov
jb
insb
outsl
arpl
cmp
daa
or
test
pushl
add
dec
rcll
sub
mov
cli
lods
add
aam
stos
nop
lods
and
dec
shll
mov
xor
fildl
push
add
ds
shll
mov
xor
fsubr
clc
or
cmp
push
sub
dec
shll
test
xor
shll
aam
in
cli
shll
add
push
cmpsb
imul
mov
lcall
mov
movsb
mov
mov
les
mov
pop
fiadds
out
cli
xor
out
add
outsl
add
cld
jmp
dec
negb
or
adc
imul
imul
cmpsb
imul
imul
add
pop
imul
push
fstp
scas
add
into
lods
cmp
push
add
lcall
add
push
imul
je
je
or
std
fs
orl
adc
popa
fs
divb
dec
je
jo
jne
jns
outsw
inc
aaa
mov
negl
jo
outsb
push
jb
adc
adc
out
notb
dec
add
jl
insb
xor
add
fstps
or
add
add
xchg
add
aaa
sbb
pusha
add
add
add
mov
pop
add
adc
adc
add
and
fbld
insb
add
inc
popa
mov
add
xor
adc
add
insb
fldcw
add
and
xchg
pop
leave
or
add
pop
or
ljmp
insb
testb
in
adc
dec
sbb
inc
test
mov
sbb
xchg
pop
lret
push
fstps
fistl
ret
xor
ret
sub
cmpsb
jb
pop
nop
pop
das
xor
or
and
pop
xor
ud2
push
call
imul
add
adc
push
packsswb
je
jne
jb
gs
sbb
mov
push
sub
add
lcall
sarb
push
inc
jb
push
and
ja
or
push
mov
jg
das
jae
pop
and
addr16
xor
std
test
rorl
shll
pop
sti
fisubrl
and
pop
aas
add
dec
out
sub
cmp
add
call
and
pop
push
jb
inc
jne
pop
test
jb
nop
loope
add
insb
mov
je
or
bound
jb
fs
and
outsl
jne
jae
adc
ja
push
and
push
push
repz
add
adc
inc
sbb
push
js
sub
jno
std
push
jbe
pushf
xor
jo
imul
xchg
sbb
lahf
jne
lahf
sub
jo
je
sbb
outsb
or
pop
imul
jne
mov
insb
imul
pop
lret
arpl
insb
fisttpl
push
mov
cmc
cmp
jbe
nop
cmp
and
gs
or
into
mov
std
or
aad
mov
xbegin
int
lcall
in
shlb
mov
mov
movsl
ret
mov
lret
ret
test
mov
mov
in
mov
ret
in
clc
mov
mov
jl
ror
pop
add
les
mul
cmpsl
mov
mov
mov
rol
lret
jmp
sub
loope
sub
scas
out
sub
fmulp
mov
stc
test
and
loop
icebp
sub
es
push
mov
pop
lret
mov
iret
mov
repnz
cli
sub
mov
mov
sbb
iret
sub
lret
shl
sub
fistps
lret
xchg
lret
fistpl
cli
mov
mov
shlb
mov
fistpll
aam
mov
xchg
std
mov
or
mov
aam
in
sub
lock
xor
pop
jae
sbbb
add
rcl
pop
jbe
jb
mov
mov
fwait
sti
out
out
add
movsl
cs
inc
fs
stos
sub
mov
sub
mov
sar
int3
in
jmp
fsubrs
aad
fisttpll
neg
popa
push
shrl
aam
sub
xlat
pop
mov
sub
pop
ret
ss
fstpt
into
in
popf
fildl
mov
sahf
mov
out
or
lods
mov
leave
icebp
mov
mov
iret
call
aas
lret
shll
ret
into
sub
aam
shll
mov
sti
leave
enter
mov
into
jb
cwtl
xor
mov
or
cmp
outsl
inc
out
into
call
dec
daa
insb
fwait
lahf
sbb
mov
shl
sbb
sub
jmp
nop
mov
imul
mov
add
push
push
inc
add
movsl
mov
xchg
out
add
insl
push
pop
inc
fs
add
dec
add
lcall
add
dec
dec
inc
outsl
repnz
lods
add
jae
das
mov
out
jmp
aaa
pop
xchg
lret
dec
cmp
xchg
xchg
mov
add
jg
in
sbb
pushf
fstpl
push
add
push
push
inc
movsl
add
mov
call
in
cmpsl
push
aas
add
gs
push
fistpll
push
mov
rorl
mov
adc
push
or
clc
aaa
mov
push
push
push
call
in
add
sti
das
js
mov
sub
sub
mov
movb
inc
or
movb
jbe
add
sti
push
push
call
stos
arpl
imul
out
push
hlt
testb
jmp
test
mov
xor
push
lock
sbb
push
xchg
imul
or
fisttpll
add
pop
inc
cwtl
je
or
outsb
jbe
in
mov
xor
xor
into
je
fstpl
push
movzbl
roll
sub
adc
mov
andb
mov
outsl
loopne
mov
or
push
aas
in
xchg
pop
cmp
dec
add
negb
mov
dec
jle
adc
popl
add
add
dec
and
add
xchg
pop
add
xor
adc
adc
adc
xchg
pop
enter
int3
adc
rolb
xchg
wbinvd
add
mov
add
add
xchg
sbb
add
and
and
add
aas
or
add
push
push
push
sbb
or
xor
push
in
inc
sbb
xchg
sbb
out
push
and
push
ret
cmpw
jne
xor
cmp
lret
jno
leave
inc
push
xchg
pop
push
xor
adc
out
in
add
dec
push
adc
sub
add
xor
adc
data16
add
adc
in
jne
or
rolb
jns
outsb
pop
fistpll
test
or
divl
adc
pop
cmp
fucomi
jne
ja
jge
add
or
jae
repnz
mov
idivb
mov
mov
cmp
out
jmp
cmp
jb
sub
test
fists
sub
decl
jnp
jmp
int
adc
jmp
lret
test
or
push
movsl
push
cmp
mov
mov
mov
adc
and
das
cmpb
pop
inc
fildl
insl
push
push
push
and
pop
mov
dec
ret
movsl
ret
or
fnstcw
dec
fistps
sub
pop
orb
push
popa
ret
or
or
mov
mov
lock
add
mov
or
movsl
movsb
mov
divb
lods
jo
mov
mov
movsb
repz
sbbb
movsb
arpl
dec
or
int3
or
ss
mov
fmull
dec
pop
mov
in
pop
test
xor
add
cmp
sarl
push
mov
lods
pop
mov
add
notb
sbb
flds
pop
or
sbb
adc
jmp
insl
jecxz
add
lds
nop
sbb
add
pop
add
adc
clc
adc
sub
mov
pop
or
sub
daa
outsb
mov
pop
jbe
out
pop
push
or
add
stos
adc
lock
test
jbe
loop
and
push
pop
call
sub
adc
lock
insl
lods
jecxz
mov
inc
inc
inc
jmp
fstpt
ds
vmulss
cmp
jne
xor
insl
fisttpl
rorl
adc
fucomi
ficoml
adc
andw
mov
xor
adc
insl
add
in
decl
jb
mov
push
push
push
lret
imul
add
std
push
sub
sbb
xor
jne
add
cmp
insb
sub
add
xchg
out
mov
aaa
lea
cmp
jne
and
jmp
mulb
mov
push
inc
push
add
lret
into
insl
ss
cltd
out
call
jge
lcall
push
jo
adc
in
push
call
pop
or
movl
and
call
out
or
sub
in
daa
nop
pslld
add
insb
xor
adc
xchg
pop
leave
add
test
add
xorb
adc
sub
cmp
dec
repnz
jl
add
js
add
je
add
cmp
cmp
in
mov
add
sub
inc
pop
add
mov
add
mov
cmpl
cmp
hlt
pop
pmulhuw
fcompl
jecxz
cmp
xor
fildl
pushf
inc
jne
push
pop
mov
push
adc
adc
loopne
rcll
sub
adc
adc
imul
or
shlb
jmp
xor
lret
and
outsl
rcr
mov
aam
add
push
int3
ficomps
scas
mov
outsl
aaa
push
jmp
mov
inc
into
adc
xor
icebp
shr
loope
lea
push
push
xchg
mov
mov
cmpsb
sub
pop
inc
idiv
adc
push
loope
call
inc
jmp
andb
mov
jmp
xor
in
andl
mov
xor
adc
push
orl
call
call
adc
adc
or
ljmp
mov
adc
adc
xor
cmp
inc
mov
pop
mov
mov
and
ret
xlat
ret
fs
ja
xor
mov
cmpb
loope
movsl
sub
inc
or
inc
sub
mov
imul
add
andl
std
outsl
test
inc
sub
and
mov
and
add
sub
add
icebp
inc
jge
movsl
fsubrp
arpl
mov
mov
call
cmp
jmp
aas
cmp
jae
incl
lret
shr
add
stos
mov
icebp
inc
push
mov
mov
sbb
mov
dec
push
pop
jne
adc
sbb
std
fldt
mov
mov
mov
add
loop
or
adc
or
add
add
jne
xor
push
test
loope
mov
add
ss
lods
pop
xchg
xchg
inc
bound
sbb
pop
pop
jbe
or
cmp
mov
sti
not
and
push
jl
and
or
add
lea
and
shr
mov
or
add
push
repnz
not
and
cld
in
outsl
sub
testl
mov
arpl
insl
sub
out
push
js
repnz
fnstsw
or
fisubs
fimull
add
in
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
inc
outsb
lods
cld
mov
pop
lock
and
not
cmp
add
repz
mov
shrl
std
jmp
or
add
dec
daa
pop
jg
push
add
xchg
sbb
mov
push
lods
in
ror
cli
mov
jle
hlt
mov
mov
fcomip
shlb
push
or
shlb
sti
xchg
hlt
adc
movb
jecxz
addr16
test
sbbb
xlat
pop
fiaddl
aaa
popa
xlat
or
mov
pop
ret
mov
adc
test
roll
mov
jge
adc
or
pop
sti
test
xor
add
add
bnd
out
xor
add
sbb
xchg
ja
and
les
repz
fdivrs
fstpt
sbb
add
mov
ret
insb
rcr
das
pusha
adc
sbb
mov
inc
mov
iret
xlat
jle
pop
les
subb
add
addr16
cmpsb
pop
push
loop
movups
add
push
fcom
add
or
fdivrs
mov
xlat
mov
mov
nop
imul
xchg
out
nop
out
fmull
or
mov
cmp
jno
std
stos
lods
es
lods
sub
push
cld
and
fidivrs
cmp
enter
das
push
mov
cmpsb
subb
pop
mov
xor
imul
or
cmp
lcall
outsl
pop
or
popa
adc
add
or
lods
inc
mov
mov
mov
push
mov
bound
pop
mov
add
shlb
clc
jg
or
cmp
inc
ror
jbe
pop
or
fadds
hlt
push
and
fldl
daa
clc
jb
repz
pop
pop
es
mov
xchg
adc
repnz
rcll
out
and
lods
shll
lock
mov
xor
imull
mov
int
hlt
pop
adc
call
xlat
lods
mov
fdivs
mov
adc
add
mov
lods
and
in
pop
and
imul
jge
pop
mov
mov
shl
jg
jmp
mov
mov
fbstp
int
and
sbb
das
mov
ret
inc
enter
xlat
mov
ret
mov
push
fbstp
inc
fimuls
xchg
sahf
hlt
adc
adc
or
call
stc
out
pop
inc
loop
shr
or
xlat
repnz
mov
add
sbb
and
add
loope
mov
clc
mov
daa
jle
push
push
and
sub
aad
flds
outsl
addr16
data16
push
movl
push
dec
fisttps
sub
adc
or
xor
test
fiadds
cli
jmp
add
test
xchg
fldt
xor
mov
xor
int
adc
pusha
jns
lea
lds
popa
popf
insl
adc
fisubrs
inc
sti
xor
mov
repnz
or
in
rcr
lret
call
in
leave
repnz
inc
inc
ljmp
dec
in
mov
xchg
mov
fimuls
cltd
lods
xchg
pop
fnstenv
repz
icebp
in
pop
pusha
dec
mov
cli
mov
xchg
rcrb
mov
pop
add
or
jl
mov
jle
sub
jae
loope
push
mov
rcrb
lock
cli
daa
mov
cmp
fidivl
cmc
test
jmp
jae
adc
fidivs
sub
ret
or
fcmove
repnz
cmp
or
push
scas
lock
aas
sbb
cmp
rcl
fstps
xchg
out
jbe
les
in
jae
bnd
divl
idiv
ss
xchg
in
mov
jl
pop
je
loope
mov
dec
pushl
or
aam
pop
mov
mov
cmp
cli
leave
rcl
mov
mov
stos
mov
adc
stos
rcrb
sbb
push
or
ret
je
ret
sbb
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
sbb
or
stos
mov
jb
pop
mov
out
cmp
adc
xor
aas
enter
cmp
pop
pop
gs
sbb
mov
sbb
int3
or
xor
lret
or
ja
repnz
adc
rorb
hlt
out
call
out
fcmovne
unpckhps
sbb
jmp
test
dec
faddp
inc
jae
jg
call
outsl
pop
fcmovne
insl
jecxz
jp
sbb
int
xchg
pop
add
loopne
sub
sbb
jp
ret
mov
ljmp
fdivl
jmp
add
dec
mov
pop
out
sbb
xlat
sbb
ficompl
mov
fdivs
lret
or
ret
xor
aam
rcl
sbb
pslld
ret
repz
rclb
xor
hlt
xchg
lods
jno
xor
out
xlat
pop
add
pop
pop
mov
add
inc
or
or
mov
xor
das
inc
mov
mov
mov
mov
pop
mov
pop
cmp
jl
js
adc
push
push
push
push
jmp
lret
data16
xor
cmp
adc
mov
pop
fidivrl
lea
sbbb
aad
test
nop
iret
pop
pop
mov
mov
repnz
fbstp
adc
adc
add
sbb
test
faddl
cmp
jne
xchg
sbb
add
jo
sub
xor
stos
dec
cld
pop
push
pop
cmp
mov
int
push
cld
call
sub
mov
aaa
mov
inc
inc
jmp
testb
out
or
testb
mov
sbb
or
les
fdivrp
pop
adc
test
add
pop
jnp
int3
push
loopne
xchg
insl
mov
add
fsubr
or
xchg
jmp
mov
sbb
iret
out
scas
test
out
add
jl
lahf
addr16
gs
das
lock
jo
cmp
repz
gs
divl
lock
pushf
mov
mov
cmp
fisttps
mov
out
mov
js
rep
call
sbb
mov
adc
or
mov
and
inc
lods
outsb
les
sub
mov
fmull
inc
push
jge
jae
pop
sbb
pop
or
call
add
in
adc
fistl
push
pop
test
push
cmpsb
inc
add
subl
out
push
mov
xchg
inc
pop
mov
mov
dec
xor
daa
mov
jmp
or
xor
mov
add
repz
ss
inc
push
xor
push
sbb
insl
mov
sarl
pop
int3
add
orb
lods
cmp
mov
dec
jne
call
pop
sbb
and
sti
push
push
or
add
incb
clc
cmp
imul
je
in
test
imul
cld
das
sbb
or
xor
sub
test
push
pop
xor
xchg
or
push
notb
push
mov
or
je
push
dec
fmull
jns
or
into
jmp
sub
or
mov
sub
aaa
xor
adc
adc
subb
and
add
cmp
je
dec
dec
cmpw
jne
pop
inc
mov
mov
cmp
je
add
mov
cmp
in
xor
lahf
orl
push
mov
push
aad
lock
or
pop
jbe
cmp
mov
addl
pop
dec
adc
push
fwait
ret
push
or
push
mov
pop
xchg
cmp
testb
mov
enter
add
je
cmp
jne
push
dec
in
mov
sahf
push
outsl
lds
mov
adc
or
jbe
ja
call
popf
xchg
mov
xchg
push
mov
xchg
add
loopne,pt
loopne
cmpsb
xchg
cmp
rsqrtps
cmp
or
andb
faddl
mov
inc
jmp
ds
dec
sbb
test
stos
in
mov
xor
std
mov
sbb
sbb
push
cwtl
dec
fs
leave
fsubp
add
mov
cmp
repz
and
mov
sub
pusha
mov
in
ss
popf
sbb
mov
dec
cmpsl
pusha
cmp
mov
call
push
xor
sub
mov
cmp
jnp
leave
adc
sub
mov
das
push
shrb
lods
std
and
negb
loop
lods
fadd
call
orl
cmp
jnp
sbb
mov
or
rcrl
mov
cmp
and
cmpl
cmpl
scas
or
push
jo
mov
jo
fsubrs
sub
mov
jp
add
pop
sti
fwait
stos
into
mov
js
in
sbb
pop
adc
lods
jnp
pop
pop
pop
call
call
shrl
mov
cmpb
iret
or
inc
je
jmp
jbe
xchg
popw
mov
push
ss
cmp
push
jmp
dec
mov
sbb
and
movsb
add
ss
mov
mov
add
mov
push
sub
pusha
sti
push
mov
jo
push
stc
gs
negb
xor
fldt
mov
mov
mov
lret
in
mov
mov
mov
mov
pop
cs
gs
mov
fstpt
fs
mov
lret
mov
gs
insb
outsl
int
sub
jb
jb
and
fidivl
gs
dec
dec
test
jbe
mov
loop
jecxz
pop
in
push
out
subl
dec
out
call
xchg
cmpsb
imul
lcallw
rcl
insl
xlat
insb
xchg
ret
les
dec
shll
lds
mov
leave
lret
lret
cmp
int3
hlt
xchg
push
xchg
xchg
adc
xchg
push
cwtl
cltd
aaa
insb
lods
pop
mov
fwait
pushf
adc
mov
fistpl
inc
mov
insl
mov
movsb
inc
add
test
xor
mov
push
test
notl
stc
hlt
cli
jns
aam
add
mov
stc
cmp
je
cmpsb
or
ljmp
rcrb
aaa
in
insl
xchg
imul
pop
pushf
popf
fadd
aaa
inc
in
pop
push
jae
int
int3
jmp
leave
gs
clc
ds
orl
and
fldt
and
pop
dec
rolb
pop
xchg
jae
hlt
in
imul
adc
das
mov
mov
jg
out
shrb
sar
xor
inc
jge
sti
push
test
adc
push
jae
fsubs
shl
and
imul
and
cmpsb
out
pushf
pop
cli
inc
and
sbb
daa
jnp
lds
inc
sub
adc
pusha
aaa
xor
ret
les
ret
ret
jmp
sub
jmp
mov
nop
repnz
in
xchg
or
hlt
cli
call
mov
xor
lret
std
push
hlt
cld
outsb
mov
mov
cmc
fsubrs
clc
std
push
dec
enter
cltd
cmp
and
stos
pop
mov
push
xchg
mov
push
repz
add
xchg
adc
push
imul
jl
lock
sub
outsl
rcl
push
cld
mov
test
fs
and
adcb
adc
and
test
push
pop
push
aas
js
ss
inc
call
or
or
out
adc
cmp
out
dec
notb
sub
sbb
and
pop
ljmp
sbb
pop
shll
jmp
dec
sahf
test
sbb
shr
adc
sbb
mov
cmpsb
mov
adc
add
xorb
outsl
mov
call
mov
sub
fidivl
xchg
leave
ret
cmp
ja
outsb
jne
push
add
adc
int3
fisubs
cltd
enter
cmc
push
out
cmpl
ljmp
fucomi
fldenv
jle
fs
in
pop
hlt
push
dec
popa
xchg
adc
loope
mov
enter
push
xor
and
push
xchg
cmp
jle
cltd
xchg
push
rclb
adc
xor
mov
mov
je
mov
inc
or
andl
xchg
mov
add
lcall
loopne
fsubrs
cli
add
mov
sarb
adc
push
sbb
xchg
lds
push
add
push
adc
adc
cmp
pand
and
push
xlat
or
shll
jmp
mov
scas
dec
xchg
fs
loope
adc
mov
scas
cmp
andl
mov
push
stos
movl
leave
leave
add
pop
outsb
adc
gs
push
ret
xor
and
pusha
mov
inc
imul
xchg
jmp
mov
insb
insb
popa
push
dec
int
imul
fs
pusha
shrl
ja
fildl
fstp
jae
dec
mov
xlat
fbstp
xor
xor
or
jae
cs
sti
lods
fldenv
cld
std
insl
jmp
lcall
fwait
cmpsb
jmp
mov
mov
xlat
sub
mov
lcall
push
outsb
shlb
imul
sub
jbe
leave
pop
pop
lret
xchg
gs
xchg
popa
js
push
mov
inc
jb
add
xchg
icebp
repnz
jns
jo
or
push
push
test
push
mov
iret
icebp
or
xchg
pop
inc
dec
push
mov
push
pop
test
mov
and
pop
push
ret
or
nop
insl
pop
push
hlt
dec
mov
nop
add
in
ss
int
fists
subb
pop
jmp
fsubl
andb
inc
sbbl
daa
adc
xor
shll
je
imul
outsl
ja
test
je
sahf
rorl
pop
push
shll
stc
enter
bound
les
orb
sbb
xor
pop
in
rcll
int3
arpl
and
inc
or
sbb
pop
add
ror
out
cmp
cmp
xor
shrl
or
rol
push
add
pop
xor
xor
ret
xchg
les
clc
lret
idiv
xchg
clc
lock
jge
mov
fsubs
jns
rorl
jl
and
in
mov
lret
pop
dec
fnstenv
fcoml
inc
inc
or
mov
push
or
mov
sub
push
pop
push
pusha
shl
adc
dec
in
push
or
popf
test
and
jne
shr
add
test
cmp
mul
es
inc
aas
test
jmp
jbe
and
dec
mov
mov
mov
je
sbb
gs
and
cmp
mov
inc
cmp
negb
mov
sbb
dec
sbb
mov
mov
xchg
adc
pop
das
mov
cmp
pop
cmp
jle
mov
lock
out
adc
cmp
cmp
pop
adc
cmp
adc
adc
outsl
inc
xchg
add
cmpb
pop
jl
mov
sbb
sbb
or
jo
inc
call
push
pop
add
sub
mov
es
add
test
push
fcompl
mov
cmp
or
push
jne
clc
mov
test
pop
add
push
fdivs
mov
xchg
xchg
or
lahf
into
push
subb
or
je
mov
add
push
mov
jg
cs
or
pushl
inc
xor
sbb
add
and
push
fiaddl
jmp
adc
inc
lods
je
inc
mov
cmp
jl,pn
adc
iret
lea
sbb
fsubrl
mov
inc
loope
push
ds
scas
cltd
mov
fstpt
sahf
movl
push
iret
add
inc
push
or
leave
mov
rolb
fnstenv
sub
mov
add
dec
jno
sub
mov
inc
pop
sub
fcmovb
fnstcw
imull
pop
sub
imul
pop
std
xor
add
xchg
addb
push
inc
fcompl
enter
jl
adc
pop
xor
pop
or
cmp
push
mov
imul
stos
popl
in
xchg
xchg
clc
std
fs
pop
push
sbb
xchg
mov
repnz
es
in
lret
clc
pop
negb
dec
mov
adc
sbb
and
pop
std
jnp
xchg
imul
dec
jle
pop
inc
push
lock
es
and
xor
mov
pop
sbb
add
mov
subb
push
stos
call
out
adc
dec
jb
ss
mov
cmp
or
scas
xor
pushf
push
ret
and
mov
movsl
sbb
xchg
push
add
andl
mov
pop
gs
sbb
inc
ljmp
std
fwait
and
inc
dec
push
push
jg
add
pop
lahf
in
fwait
call
lods
push
rep
or
mov
dec
jmp
repz
pop
fistl
insl
shlb
loope
inc
hlt
pop
xchg
test
mov
add
adc
xor
dec
jnp
add
dec
xlat
cltd
sub
add
aam
icebp
movb
cmp
mov
push
lods
xchg
cld
flds
in
adc
add
gs
je
inc
cwtl
in
fs
fcompp
cmp
pop
pop
push
icebp
sbb
in
inc
push
cmpsl
hlt
mov
or
xchg
push
mov
mov
dec
dec
mov
jge
mov
mov
sbb
or
or
sub
daa
sub
dec
testl
and
pop
mov
sub
bound
push
mov
dec
jae
fsubs
inc
sbb
cmc
xor
es
adc
or
testl
and
and
fs
or
insl
es
add
cmp
push
test
xchg
add
mov
insb
insb
insl
dec
lcall
outsb
jae
pop
xchg
test
xor
dec
pop
cwtl
gs
inc
fs
mov
fmuls
mov
sub
dec
insl
insl
inc
je
xchg
sub
dec
dec
inc
insb
cwtl
xorb
call
mov
pop
mov
push
mov
test
shl
scas
in
loopne
aas
adc
inc
cmp
lea
cs
out
add
aaa
dec
mov
rorb
xor
cmp
test
lea
push
addr16
insl
shlb
cli
sub
out
jno
outsb
popa
pop
pop
arpl
idivb
pop
leave
sbb
orb
pop
pop
add
jne
mov
jmp
loopne
mov
test
xor
push
std
repnz
mov
stc
cmpsl
sbb
push
push
mov
shlb
and
aas
ljmp
stc
add
pop
mov
inc
lds
cmp
jecxz
pop
fstl
xchg
cmp
mov
push
sbb
nop
mov
pop
push
ljmp
push
pop
inc
sub
cmp
lock
fsubr
movsb
push
push
push
fdivrs
fidivs
push
jb
dec
push
push
imul
aad
scas
clc
lock
lock
add
mov
add
pop
rcll
push
data16
mov
inc
int3
negl
sbbb
insl
test
push
fs
push
push
out
iret
pusha
cmp
sub
mov
das
int
adc
pop
adc
scas
push
push
mov
daa
and
jo
add
xor
lds
imul
mov
fldt
rcl
fsubs
in
call
xor
mov
rcll
loope
movsb
jp
negb
es
add
testl
ficoms
loop
inc
test
pop
das
xor
mov
lods
xor
or
pop
cli
test
jp
jb
xchg
test
stos
mov
add
outsl
mov
mov
push
aaa
insb
mov
add
idiv
popa
loope
call
cmp
and
lods
or
loope
xor
add
mov
insb
sub
and
shll
add
in
xchg
aaa
push
ss
lods
jnp
push
ret
add
mov
push
sub
call
xor
sub
mov
push
push
dec
dec
dec
mov
lret
mov
inc
push
cs
fnstenv
lret
insb
insb
movsb
addr16
xchg
and
jne
push
pop
xchg
gs
insb
jnp
mov
subl
pop
xchg
outsb
je
push
jb
mov
or
cmpsb
pop
cmpsl
scas
imul
push
lret
mov
lret
lods
lods
pop
dec
je
sub
mov
jo
jo
outsb
mov
lret
inc
cmp
jno
mov
mov
das
roll
aam
shll
mov
ret
lcall
xchg
gs
mov
xchg
xchg
xchg
inc
push
cwtl
js
imul
jmp
fcmovnu
push
fstl
fists
xor
sar
gs
gs
mov
mov
mov
int
imul
int
fsts
mov
mov
data16
arpl
mov
sbb
mov
mov
inc
ja
adc
cmp
dec
sbbb
jg
std
mov
cld
notl
shrl
int3
add
xlat
mov
adc
cmc
or
jne
push
push
aam
pop
repz
mov
add
lea
idivb
popa
xor
mov
jmp
push
pop
inc
stc
sbb
int
xchg
das
scas
pop
pop
andps
outsb
addr16
mov
negl
lock
imul
xor
add
cmp
imul
fwait
dec
and
movsb
or
cmpsb
and
xor
push
sbb
stos
mov
push
mov
aad
or
and
or
imul
pusha
mov
addl
and
decl
or
in
enter
mov
negb
loopne
rcrb
push
aas
rorb
inc
ljmp
mov
jp
or
jnp
adc
push
in
pop
imul
ret
call
or
lock
or
mov
jnp
mov
push
les
sbb
inc
incl
mov
add
add
mov
push
xor
push
mov
ja
enter
pop
in
mov
cs
fs
out
insb
jb
arpl
in
or
arpl
call
insl
jne
and
mov
pop
cmp
mov
inc
add
sbb
pop
ficompl
fildll
jnp
popa
jbe
mov
int3
call
enter
aaa
test
mov
add
aam
lods
mov
cmp
and
push
out
mov
inc
popa
jmp
push
adc
sub
loopne
out
sub
jecxz
pop
outsl
call
fdivl
xchg
std
jbe
mov
or
jne
jne
sti
xchg
jb
sbb
pop
aaa
int
xor
loopne
sbb
jne
add
and
sbb
push
pop
loope
mov
iret
pop
jns
shll
sbb
out
jmp
and
les
loopne
movsb
imul
je
cmpsb
imul
jo
push
lcall
clc
lcall
and
cmpsb
imul
cmp
and
je
scas
testb
fucomip
icebp
andb
std
jno
jb
std
leave
decb
xlat
cmp
cmp
iret
std
fwait
and
aas
arpl
je
dec
shll
outsb
cmp
dec
shll
outsl
jae
jne
inc
lcall
push
aas
in
dec
aaa
jnp
cwtl
sbb
hlt
lds
dec
push
in
movsb
add
pop
sub
cli
lds
daa
neg
sbb
add
and
shlb
mov
cmp
test
adc
fs
test
xor
xchg
inc
inc
inc
sbb
int
pop
aas
push
loopne
add
cmp
ret
sbb
push
sub
je
xor
jae
je
xor
shrl
imul
mov
pusha
ret
mov
call
cmp
pop
loopne
int3
jmp
pop
je
cmpl
or
mov
adc
jecxz
lcall
cmp
inc
xor
shlb
in
in
in
dec
and
lea
jg
stos
stos
imul
mov
sbb
add
addb
jmp
enter
pop
pop
xchg
and
fs
sub
pop
xchg
dec
cmc
rolb
inc
add
adc
xchg
xor
xor
pop
adc
loopne
pop
adc
out
xor
mov
shr
or
in
jbe
cld
lret
sahf
loope
and
int3
mov
pop
jmp
rcrb
loope
test
adc
sub
lahf
add
aam
addb
loope
push
pop
out
test
xchg
lods
or
test
push
mov
adc
dec
sbb
mov
fdivrl
cld
sub
cmc
cld
inc
enter
fdivrl
mov
fistpll
or
das
add
std
add
fidivs
adc
es
call
inc
jl
cld
stos
clc
xchg
stos
cmp
ret
and
or
std
cwtl
inc
lcall
dec
cltd
lcall
popf
sahf
lahf
mov
mov
jb
movsl
jne
jb
cmpsb
imul
xor
rcl
pop
stos
dec
lods
lods
scas
scas
imul
mov
cmpsb
imul
in
lcall
rol
ret
imul
lcall
lret
int3
gs
xchg
lods
dec
and
mov
arpl
outsb
cmp
fs
jb
inc
lcall
fisttpl
dec
les
dec
xor
add
data16
push
dec
shll
outsb
mov
mov
push
std
and
dec
mov
adc
mov
or
jmp
push
pop
repnz
cwtl
pop
int3
cmp
cwtl
mov
pop
pusha
ss
jp
add
add
push
cwtl
fmul
xor
sbb
cmp
jne
call
negl
icebp
stc
in
push
xor
xchg
cld
xchg
cld
lds
cwtl
loop
int3
hlt
shrb
aas
sub
mov
push
and
sub
movsb
lods
and
cmp
cli
les
fs
dec
xchg
jae
arpl
dec
xchg
in
cmp
xor
movsb
imul
dec
rcl
fcomp
fiaddl
sbb
sbb
bnd
xor
xchg
sbbl
sub
pop
add
in
scas
sub
test
xchg
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
jb
arpl
xor
xor
outsl
popa
jb
mov
sbb
arpl
sbb
in
fs
ljmp
je
out
jns
out
ja
push
sbb
pop
cmp
push
adc
lock
mov
imul
lods
push
pop
jmp
and
push
fnstsw
sbb
xor
xlat
pusha
push
leave
pop
gs
lret
mov
insl
xchg
push
enter
pop
shl
call
add
sbb
lds
adc
or
cld
cmp
mov
and
insl
fidivs
jne
repz
mov
mov
loope
jo
sbb
pop
push
ljmp
mov
mov
adcl
or
cmp
std
fxch
imul
or
addl
add
push
movl
cli
mov
jl
add
push
push
cltd
test
andb
cmpsb
out
add
or
ret
jbe
dec
and
jns
push
push
mov
cmp
cmp
mov
shr
out
popa
push
push
aad
in
xor
rcrb
add
in
sbb
movl
and
fsubp
push
dec
cmc
xor
mov
mov
and
imul
pusha
or
jg
loopne
pop
mov
ljmp
test
in
in
out
ja
mov
lock
sbb
xchg
jae
lcall
je
in
xchg
movsl
outsl
loopne
cld
pop
loop
mov
jb
cld
in
in
out
sub
mov
xchg
loop
pop
and
je
call
cwtl
mov
popf
clc
stos
sub
mov
push
repnz
push
in
fadds
cmp
adc
add
sub
fdivr
notl
adcb
jmp
mov
and
or
lret
dec
je
sbb
cmp
push
push
arpl
add
imul
outsl
cmp
jns
cld
fmull
push
call
cmp
jg
movl
sbb
jne
push
call
xor
je
ljmp
mov
call
jne
mov
dec
bound
push
mov
sub
or
mov
mov
cmp
pop
scas
push
shrb
gs
xchg
mov
lea
pop
xchg
sub
test
int3
mov
int
into
clc
add
and
outsl
or
int
lea
shrb
pop
xchg
jo
add
xchg
insb
xor
pop
push
pop
mov
dec
rcl
and
rcl
xchg
pop
jmp
inc
rol
jbe
xchg
jge
inc
call
sbb
or
mov
mov
hlt
push
hlt
xchg
int
fcomi
or
negb
add
xchg
pop
enter
or
inc
out
outsb
add
adc
push
enter
sahf
inc
shll
add
enter
test
jbe
test
call
gs
add
sahf
push
pop
cltd
mov
call
mov
jmp
in
in
push
lea
ret
xor
sbb
mov
or
mov
rcl
xchg
fsts
xlat
lret
fsubs
jbe
mov
insb
mov
mov
xchg
adc
loopne
in
jmp
loope
loop
push
jecxz
in
and
in
ret
movsl
or
lcall
push
lods
lods
imul
rcl
mov
push
mov
mov
cmpsb
mov
test
sub
pop
add
mov
push
je
pop
add
or
mov
cmp
mov
mov
pop
je
push
push
sbb
sub
iret
int3
and
push
fwait
sbb
sbb
sub
xchg
push
enter
aam
fsubs
in
fisttps
xchg
test
mov
cmp
cmp
daa
cwtl
xchg
aad
jbe
xchg
cld
or
pop
ss
fdivs
cld
into
fsubs
xchg
add
adc
pop
jl
lods
mov
nop
sbb
mov
add
cmp
test
and
negb
sbb
pop
or
lds
push
mov
sarb
inc
aam
cmp
mov
loope
mov
xchg
inc
mov
add
mov
jbe
outsb
filds
xor
mov
cmp
xor
ret
nop
paddb
dec
jno
rorl
xor
out
mov
daa
mov
dec
faddl
sub
mov
lds
pusha
je
cmp
fs
add
in
mov
pop
daa
and
sub
sub
mov
jp
testl
shlb
pop
mov
sub
mov
push
cmp
icebp
adc
pusha
sub
and
lock
fidivl
test
loop
mov
fwait
push
nop
sbb
or
es
std
int
movsbl
add
mov
fldl
mov
mov
insb
jb
daa
repnz
aaa
pop
imul
and
bnd
and
and
cmc
adc
and
hlt
mov
iret
xor
pop
aad
or
enter
mov
sbb
std
in
fwait
mov
lea
push
add
push
push
push
aad
jbe
and
and
ljmp
add
fdivr
and
push
mov
adc
push
jo
jecxz
adc
orps
inc
stos
iret
dec
dec
push
push
push
inc
mov
pusha
inc
mov
pop
loopne
lret
mov
lret
jne
gs
popa
pushf
insb
shlb
pop
jb
mov
in
gs
sub
inc
xchg
gs
gs
mov
lret
jb
imul
ficoms
mov
or
scas
lock
pop
xorb
jl
jmp
adc
loope
lcall
inc
mov
cmp
mov
in
fstpt
dec
jg
mov
add
xor
cmp
in
sbb
xlat
xor
sub
out
push
rcrb
lea
sub
mov
not
pop
and
push
and
jnp
inc
mov
sarl
pop
adc
xor
mov
test
sbb
sbb
pusha
or
fmull
sub
push
fstps
xor
imull
cmp
cmp
rcrl
mov
aam
cs
cmpsl
jmp
cmp
pop
insl
cmp
pop
and
mov
xchg
pop
scas
jb
mov
cmp
dec
repz
je
movsb
mov
sbb
icebp
jne
addl
adcb
out
sbb
enter
iret
add
loopne
mov
mov
push
imul
movsb
jg
in
push
mov
stos
call
mov
ja
je
jne
push
xchg
adc
mov
sbb
adc
sbb
stc
imul
mov
or
call
aam
fisttpl
ds
xchg
adc
and
and
xchg
cmp
jmp
add
adc
int3
or
sbb
adc
imul
lods
add
push
mov
popa
cmp
in
and
test
lcall
scas
fdivs
jo
xchg
gs
xchg
cmp
cmp
and
gs
xchg
gs
sub
and
push
rclb
scas
movsl
adc
jns
push
sti
add
add
mov
sbb
shlb
nop
push
fnstenv
enter
aam
aad
adc
bound
pushf
ret
sub
xorb
jo
rorb
ljmp
mov
cmp
and
cmp
pop
jae
imul
jae
arpl
cmp
imul
gs
inc
mov
xchg
add
sbbl
add
pusha
pushf
pop
adc
in
jmp
pop
test
pop
popf
add
and
mov
jle
mov
pushl
cmp
jnp
ja,pn
push
pusha
inc
lds
mov
sahf
or
js
loopne
das
sbb
scas
adc
adc
or
mov
sti
or
and
in
sub
sbb
aas
sbb
jg
push
je
push
xchg
sarb
aas
pop
enter
cmp
das
sbb
test
inc
outsb
fwait
inc
jmp
adc
ds
ds
jae
dec
pop
enter
pusha
fnsave
mov
mov
scas
cmp
cmp
shl
rolb
adc
pop
cmpw
jg
test
cmpl
rolb
clc
fdivl
adc
mov
cmp
loop
inc
mov
cmp
jl
je
push
icebp
push
jo
sbb
cmpb
subl
pusha
js
xor
pop
add
cmpl
outsl
adc
or
imul
push
jl
push
or
mov
jp
add
fildl
dec
jmp
inc
dec
sbb
xor
and
sub
int
popl
sbb
add
or
push
mov
push
lock
add
jmp
cs
filds
icebp
adc
jne
mov
sub
mov
fs
pop
lds
jmp
add
adc
pop
add
andl
or
jmp
jle
inc
mov
outsl
movzwl
mov
jne
daa
add
mov
shlb
cli
xor
xchg
push
fcmovnb
pop
adc
add
inc
lar
mov
jmp
or
jne
or
sub
adc
testb
mov
pusha
ss
mov
scas
mov
int3
outsb
adc
mov
test
subl
jl
add
jmp
mov
add
xchg
push
repz
jmp
jbe
jno
push
int
testb
push
pop
insl
ja
add
adc
iret
sbb
jle
add
je
and
mov
int3
cs
pushl
add
push
scas
clc
add
sub
mov
and
sub
loope
xor
adc
inc
push
and
adcl
sbb
xor
sub
mov
sbb
pop
lods
push
mov
call
sahf
inc
loope
adc
lcall
adc
push
push
mov
into
jae
les
addr16
jae
mov
sbb
mov
and
orl
mov
push
jge
test
loop
jg,pn
out
push
or
push
testb
je
pop
inc
sub
rolb
repnz
adc
pop
inc
mov
test
cwtl
xor
pop
sub
and
data16
mov
push
adc
mov
add
wbinvd
icebp
insl
xor
mov
inc
pop
dec
jp
pop
sarl
cmp
jne
nop
sbb
iret
or
adc
inc
lock
xor
pcmpgtw
insb
outsl
xor
xorb
js
orb
mov
xor
loop
jbe
sub
jp
lds
mov
and
arpl
or
mov
push
adcb
pop
sti
or
je
addl
mov
adc
ds
fwait
adc
nop
pop
push
decb
cmp
cmp
lods
mov
pop
rolb
int
cmp
scas
inc
adc
leave
jl
imul
lcall
iret
push
dec
cwtl
xorb
pop
mov
rorl
mov
dec
push
jbe
cmp
and
or
push
adc
jo
pop
movsb
add
dec
in
shl
lods
loopne
mov
es
push
scas
pop
sub
cmp
push
sbb
sbb
xor
jl
jecxz
cmp
cmp
push
and
inc
and
mov
sub
sbb
popa
ljmp
in
sub
in
jge
aam
mov
inc
pop
or
sub
and
push
ret
jmp
and
outsb
fmuls
cmp
shll
jbe
fcompl
adc
in
cmp
ficompl
pop
fnsetpm(287
push
imulb
pop
sbb
out
ljmp
inc
lock
pop
cmp
test
push
xor
out
call
cmp
aaa
jnp
and
mov
daa
pop
jl
dec
mov
and
fisttpll
lds
ret
jle
mov
sbbl
mov
lcall
ja
adc
pop
test
out
push
lea
fcomp
mov
mov
or
sbb
stc
pop
icebp
mov
lea
scas
ja
in
jg
cmp
jl
mov
push
into
test
or
inc
test
push
test
or
pop
lcall
imul
mov
adc
arpl
lds
imul
imul
xchg
lret
int3
int
aas
mov
pop
std
rolb
pop
sar
or
outsb
int
jne
ss
cmpsb
pop
call
test
pop
mov
cs
push
sub
mov
lret
test
je
popa
jns
lcall
imul
add
enter
or
sub
mov
mov
or
jne
popa
and
stos
adc
cld
lods
hlt
mov
cmp
and
jge
push
pop
ds
and
shrb
sbb
xchg
popf
test
fdivr
pusha
lret
mov
mov
adc
sahf
adc
mov
push
mov
xor
popa
and
sub
test
lea
inc
call
mov
cs
call
popf
mov
sar
add
pop
pop
add
push
inc
add
pop
xchg
xor
xor
inc
andb
adc
lret
mov
jo
outsl
jb
shrb
jb
gs
mov
pop
mov
rcr
or
and
push
cmc
add
xchg
addr16
or
mov
add
leave
sub
std
repz
sbb
mov
aam
cmc
cmpsb
into
cmp
push
pop
add
push
mov
icebp
js
repnz
push
add
push
repz
push
or
adc
push
adc
loop
add
jge
push
in
mov
sbb
aam
inc
mov
gs
lret
rclb
lds
jmp
jmp
xchg
pop
inc
jb
nop
je
inc
rol
jne
dec
rcr
fsubs
daa
inc
and
adc
mov
gs
jae
jmp
xor
cwtl
xchg
xchg
out
xor
js
ss
adc
jl
cmpb
mov
dec
aaa
sbb
clc
hlt
add
adc
or
sbb
xchg
add
cmp
xor
pop
subb
fstpl
push
add
in
scas
sub
rcrb
cmp
test
ss
adc
hlt
push
xor
mov
jmp
incl
add
imul
inc
jb
arpl
fnstcw
jp
gs
push
add
jbe
jae
fisttpll
add
pop
add
aad
xor
jno
pop
mov
aad
inc
inc
ret
outsl
arpl
jae
dec
imul
mov
insb
shlb
xor
popa
jo
push
mov
aas
xchg
push
imul
push
fadds
jnp
les
dec
ss
push
cmc
jmp
add
inc
insb
in
sbb
inc
fs
sbb
ljmp
jb
jb
inc
packsswb
mov
scas
add
push
fidivrs
fistpl
sbb
sbb
fs
adc
jg
gs
mov
add
jb
mov
dec
push
add
out
les
adc
or
mov
jo
xor
loope
and
and
jns
add
or
and
ss
cmp
popa
je
add
dec
insl
mov
test
or
add
enter
stos
sbb
aam
xchg
nop
jno
inc
outsl
jb
push
fisubrs
outsb
and
push
push
fwait
insb
pop
notl
insl
outsl
push
lods
int3
nop
lods
loopne
dec
sbb
push
adcb
dec
push
jge
fnstsw
aad
push
sub
push
mov
pop
mov
push
xchg
outsl
ja
inc
cmp
jbe
outsb
inc
pop
ret
andb
sti
mov
jno
dec
pcmpeqb
int
lods
inc
and
xchg
push
das
mulb
lods
dec
or
push
add
and
andl
fwait
shlb
mov
mov
cmpsl
sbb
sarl
lahf
ret
push
outsl
imul
hlt
sbb
cvtps2pi
mov
fnstsw
sub
adc
filds
ret
fldenv
push
inc
ss
test
pushw
inc
outsl
mov
fwait
inc
add
jns
fbld
xor
adc
aas
ret
iret
mov
sbb
or
pop
xchg
mov
ja
add
lret
mulb
insb
add
pushf
push
imul
insb
inc
addr16
sbb
mov
push
outsb
push
fisubl
test
and
cmovbe
push
dec
inc
rorb
fldt
lods
add
jo
je
inc
push
jmp
imulb
repz
insb
popa
xchg
and
stos
sbb
addr16
mov
popa
xor
pop
fstpl
add
inc
pop
pop
ss
gs
dec
jae
mov
aam
shlb
in
jno
fists
and
movsl
jae
cmpb
adc
or
in
adc
imul
add
sbb
dec
or
jno
addr16
outsb
push
push
push
div
push
jae
movsb
leave
out
or
add
repz
pop
push
sbb
add
sarl
arpl
hlt
jge
scas
adc
insl
fwait
sub
idivb
mov
fwait
mov
add
sbb
fadds
pop
add
push
mov
insl
push
aad
imul
cmc
add
adc
push
fsubrl
mov
jne
cmpsl
lods
xor
mov
pop
imul
add
or
xchg
mov
adc
inc
add
out
push
movsl
jmp
iret
jne
outsb
aaa
insl
mov
jae
pop
jo
inc
popa
arpl
mov
sub
dec
inc
inc
push
inc
addl
das
insl
iret
xor
mov
out
or
push
cs
add
insl
mov
xor
mov
lret
mov
pop
mov
xor
std
mov
jnp
add
pop
cmp
cltd
mov
add
mov
xchg
popa
addr16
arpl
ficoms
sbb
or
or
add
add
add
sbb
sub
pop
adc
mov
jo
push
outsb
jne
add
mov
and
xor
fucomi
lods
xor
push
add
loopew
jne
sti
lea
sbb
sbb
xchg
xchg
mov
xor
outsb
cwtl
in
int
testb
loope
jbe
xchg
data16
dec
add
fildll
cmp
js
push
push
decl
nop
subb
gs
jbe
mov
insl
testb
xor
mov
jecxz
dec
push
sbb
or
push
aaa
sbb
insb
xor
inc
xor
push
or
imul
leave
incl
jb
dec
inc
dec
push
dec
xchg
imul
cmc
pop
je
adc
adc
xlat
adc
xor
xor
xor
scas
jmp
mov
dec
cmovl
push
pop
mov
lahf
pop
jno
testl
fadds
add
fildll
inc
push
aam
xor
pushl
xchg
xor
xor
enter
fdivs
in
call
xor
xor
pushl
dec
xor
xor
xor
jno
jp
push
xor
insb
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
ss
pushl
xor
cmp
imul
xorl
mov
adc
inc
aaa
shlb
icebp
aaa
adc
cmp
cmp
cmp
cmp
xor
dec
cmp
cmp
cmp
fstpt
sbb
and
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
cmp
cmp
cmp
arpl
ss
aaa
sub
pop
cmp
in
ljmp
cmp
dec
cmp
mov
popf
cmp
mov
cmp
cmp
push
mov
mov
mov
cmp
cmp
incl
dec
cmp
xchg
mov
or
cmp
cmp
cmp
pop
cmp
scas
cmp
xor
push
fcomip
pop
inc
push
xor
xor
xor
xor
xor
xor
xorl
pushl
lock
xor
xor
xor
outsb
xor
mov
xchg
xor
clc
pushl
lock
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
ljmp
lcall
xor
xor
xor
xor
xor
cs
pushl
stos
xor
int
fdivs
add
adc
sub
xor
cmp
xchg
pushl
inc
ss
ss
ss
cmpsl
aaa
iret
aaa
loop
and
dec
cmp
jne
iret
ljmp
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
arpl
outsb
cmp
cmp
cmp
ljmp
imul
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
mov
fnstcw
cmp
ds
les
sarb
jmp
stc
or
mov
sbb
and
push
aas
insl
aas
jns
xchg
aas
mov
call
aas
loopne
out
cli
aas
dec
jo
ljmp
dec
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
in
mov
xor
jg
xchg
xor
sbb
repnz
cld
pushl
xor
xor
xor
xor
xor
xor
xor
xor
or
decl
ss
ss
cmp
cmp
cmp
cmp
popa
clc
mov
push
cmp
jae
xchg
cmp
cmp
add
ljmp
adc
pushf
cmp
cmp
cmp
cmp
imul
cmp
cmp
les
lret
cmp
cmp
cmp
out
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
xlat
cmp
jbe
jb
sti
inc
ds
cmp
cwtl
aas
mov
jmp
cld
dec
jns
xor
xor
xor
xor
xor
push
xor
push
pushl
nop
xor
xor
xor
xor
xor
xor
idiv
pushl
fdivs
fnsave
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
outsb
jl
sub
cmp
dec
repz
std
ss
pushl
std
pushl
mov
ss
fdivs
out
gs
aaa
dec
aaa
pop
aaa
arpl
aaa
pushl
push
je
xorl
aaa
mov
loope
out
adc
inc
cmp
lcall
dec
gs
cmp
cmp
cmp
cmp
jns
fdivrl
out
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jp
ljmp
mov
cmpsb
cmp
ret
cmp
loope
jmp
cmp
adc
push
and
xor
cmp
add
pop
ds
ds
sbbl
ds
mov
ds
sub
ds
ds
sub
int
sbb
aas
cs
xor
ds
inc
aas
dec
aas
pop
aas
popa
aas
outsl
mov
xor
decl
aas
lahf
aas
movsb
aas
scas
aas
mov
mov
aas
sarb
out
pop
aas
xchg
nop
and
xor
push
xor
mov
scas
xor
pop
cli
xor
xor
xor
loopne
in
jmp
divb
dec
xor
pop
xor
pop
clc
jge
xchg
xor
xor
xor
xor
xor
xor
xor
popa
xor
pushl
dec
xor
imul
xchg
xor
xor
add
fldt
push
xor
jo
xorl
cmp
xor
ss
shll
call
ja
mov
mov
aaa
lret
aaa
fdivl
jmp
push
aaa
add
or
sbb
and
xor
ss
cmp
pop
cltd
jae
test
cmp
mov
nop
cmp
cmp
ja
cmp
decl
cmp
cltd
cmp
cmp
pushl
push
cmp
cmp
cmp
cmp
cmp
imul
xchg
ds
ds
lds
fistpll
out
and
xchg
inc
aas
andb
aas
ret
mov
pop
add
sbb
aaa
xor
xor
fbstp
xor
jge
mov
stos
xor
xor
xor
xor
mov
jmp
xor
xor
xor
xor
xor
xor
xor
jo
ja
jle
addl
cld
pushl
mov
fwait
xor
xor
xor
pop
xor
scas
outsl
cli
scas
aad
xor
xor
xor
int
sub
xor
lds
sti
xor
sub
inc
xor
xor
mov
sahf
xor
mov
mov
add
xor
add
xor
dec
mov
jmp
xchg
scas
dec
push
enter
test
arpl
jl
mov
mov
jnp
adc
mov
je
jl
fnstsw
mov
jle
adc
xchg
out
decl
dec
adc
negl
adc
inc
push
cld
sub
enter
pusha
and
stos
or
jo
sbb
mov
add
out
mov
pushf
dec
mov
aaa
idivl
add
dec
or
push
inc
jl
sub
push
jb
jb
mov
mov
inc
and
sub
in
testl
ss
push
imull
dec
add
nop
test
pop
cmpsb
jae
cmp
pop
jle
pop
add
cmpsb
imul
dec
shrl
fmulp
mov
xor
sbb
add
cmp
ss
shll
es
pop
lret
dec
xlat
or
cli
arpl
sarb
adc
mov
xchg
pop
addl
outsl
mov
orb
stos
out
jb
add
add
dec
repz
push
ljmp
jae
sub
push
push
inc
and
cmp
add
add
xchg
inc
and
int3
and
and
jo
or
and
nop
inc
shlb
and
and
repnz
add
add
adc
and
cmp
inc
and
and
add
pop
and
sub
dec
dec
and
subb
and
sbb
xor
andl
add
movsl
sbb
mov
call
sysenter
and
fldpi
push
adc
mov
inc
std
push
xor
lock
or
xor
sub
xchg
pop
cmp
inc
sub
fwait
rolb
inc
cs
cmp
pop
xchg
scas
adc
stos
mov
out
or
insl
popl
lahf
in
dec
shl
pop
sub
clts
ret
dec
xchg
mov
or
dec
mov
pop
movsb
ljmp
inc
cmp
mov
push
cltd
lods
fstpt
dec
sbb
push
cmp
mov
and
or
cmp
add
cmpsl
in
and
inc
lea
nop
and
mov
mov
pushf
stos
or
mov
add
pop
jecxz
in
xchg
leave
adc
cmp
add
add
sbb
daa
push
nop
dec
fldenv
mov
fdivl
adc
and
sbb
and
add
cmp
jl
hlt
inc
mov
and
xor
mov
sbb
xchg
icebp
idiv
sbb
jmp
fnstcw
icebp
addr16
mov
xchg
ss
push
test
jne
pop
push
js
fs
mov
movsb
and
decb
fs
mov
add
fs
mov
imul
mov
pop
xlat
stos
inc
sub
shl
and
lods
cs
daa
scas
std
push
scas
cmp
insb
add
mov
mov
pop
mov
les
sbb
std
mov
mov
dec
mov
sbb
gs
xchg
mov
jb
shlb
xchg
jb
gs
stos
mov
aam
ret
mov
mov
xchg
mov
cmp
ret
js
push
mov
insb
dec
rol
pushf
jo
sbb
rcr
adc
add
mov
lret
mov
outsl
outsb
outsb
jb
sub
gs
js,pn
lret
adc
gs
outsb
insb
mov
lret
mov
jne
arpl
pushf
sub
gs
js
xchg
movsl
or
jno
addr16
dec
xchg
or
add
cmpl
insb
outsl
jb
arpl
inc
cltd
pop
test
and
mov
adc
hlt
xchg
sbb
jns
pavgb
clc
mov
sub
call
leave
pop
dec
and
push
xchg
ret
lods
mov
aam
mov
loop
push
or
clc
push
test
shl
sahf
inc
call
mov
adc
jne
push
jns
enter
xorb
add
xchg
cld
inc
push
pop
enter
xor
aam
add
pop
push
movsl
fdivs
cmpsb
pusha
mov
fisttpll
loopne
fisttpll
xorb
sbb
repz
lods
es
dec
and
mov
cwtl
add
inc
data16
add
insb
outsl
movsb
cmc
push
push
rcrb
mov
fiaddl
dec
sahf
ror
rclb
cmpsl
int
loop
push
arpl
movsb
cwtl
js
fimull
xchg
sbb
inc
sete
outsl
pop
push
stos
or
pop
xor
pop
in
pushf
sti
fmuls
add
mov
push
dec
or
jo
add
aaa
or
mov
pop
pop
add
dec
add
add
or
mov
sub
sbb
pop
and
and
and
nop
nop
and
nop
int
pop
dec
and
in
cmp
add
add
and
ret
mov
das
daa
or
shlb
pushf
adc
xor
and
xor
mov
pop
cmp
dec
and
mov
add
or
sub
dec
gs
adc
sub
pop
les
dec
xchg
push
lods
mov
inc
inc
xor
and
mov
sub
inc
and
push
adc
repz
sbb
lock
jno
add
mov
sub
add
jb
icebp
dec
les
mov
js
and
adc
inc
repz
dec
inc
ret
mov
xor
sub
push
imul
xor
push
add
insl
dec
jae
or
cmp
adc
leave
shll
les
xchg
dec
adc
inc
and
inc
ret
gs
and
adc
add
or
inc
mov
push
add
cmp
adc
fldcw
add
push
insl
sub
movsb
arpl
xor
fs
pop
push
sub
inc
jb
xor
stos
ss
pop
inc
int3
dec
xor
shll
pop
jmp
shll
mov
pushf
mov
sti
shll
sbb
je
dec
or
add
mov
push
repnz
rcll
mov
int
adc
or
sbb
mov
shlb
add
add
fdivl
inc
scas
or
dec
gs
mov
rcll
push
adc
add
jno
xchg
xlat
jnp
or
jbe
dec
stc
adc
sub
push
cmp
adc
jno
loope
sub
repz
xchg
push
dec
or
jnp
test
imul
mov
and
jo
mov
outsl
pop
jns
pop
mov
daa
or
push
or
pop
divb
lods
add
xchg
mov
inc
jno
add
imul
jns
add
in
flds
add
cli
sub
mov
add
add
scas
push
mov
add
or
js
push
xlat
pop
add
or
dec
add
cmovns
popf
jg
mov
jae
dec
mov
mov
or
outsl
add
jb
push
or
addr16
pop
push
out
je
into
gs
mov
cmp
xor
jecxz
inc
shlb
jmp
insl
add
outsb
inc
jae
and
jne
add
popa
jns
popa
and
insl
cwtl
jns
add
addr16
nop
jmp
jg
inc
imul
pop
lods
push
sub
mov
sub
inc
push
pop
mov
cmp
fnstenv
xor
adc
in
je
outsb
xchg
insb
popf
xchg
mov
adc
dec
or
lds
add
jge
addr16
mov
fisubrs
xchg
pop
xor
xor
fucom
mov
sub
fldenv
or
daa
dec
dec
leave
es
or
xchg
ljmp
jbe
mov
aaa
daa
fs
outsl
pcmpeqw
and
je
and
pop
ja
adc
pop
imul
push
outsl
gs
and
insb
cmpsl
xchg
out
adc
add
inc
stos
sbb
aas
shlb
xor
xor
adc
mov
insb
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
subb
xor
pop
ss
cmp
inc
aaa
insl
pop
incl
scas
aaa
mov
aaa
or
cmp
lcall
in
cmp
cmp
outsl
cmp
mov
xchg
cmp
cmp
or
test
cmp
cmp
cmp
pop
fidivrs
cmp
cmp
rolb
ds
cmp
inc
inc
pop
shrl
dec
and
and
xchg
or
fldl
mov
xor
outsl
and
pop
and
mov
dec
aad
sbb
outsl
psubsb
inc
mov
add
movb
sub
pusha
add
les
scas
test
sbb
sub
add
jae
out
daa
add
jbe
mov
or
test
outsb
add
mov
jl
dec
or
mov
add
or
add
xchg
jne
cltd
add
mov
xchg
push
sbb
popf
add
rcll
sbb
mov
adc
imul
insb
dec
int
and
mov
adc
mov
cmp
testb
cmp
xgetbv
jp
nop
add
inc
add
add
and
fs
mov
mov
inc
fs
pop
add
push
into
fs
lcall
daa
mov
dec
add
or
add
add
add
and
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
