sbbl
mov
iret
jns
cld
imul
aas
sub
fs
mov
lret
fwait
test
cmp
cld
addr16
mov
pop
dec
aaa
sub
cltd
fsubrl
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
into
leave
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
mov
idivl
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
lahf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
repz
mov
out
jecxz
fistpll
and
daa
xor
daa
inc
ss
sub
add
in
stos
in
int
test
or
push
xchg
ret
ret
jns
lret
mov
out
jne
cmp
jb
mov
add
popf
jp
pushf
addl
mov
pop
jmp
adc
jb
lahf
dec
scas
stc
pop
fcmovne
repz
jecxz
fldt
mov
aas
sub
inc
pushf
rorb
mov
lods
push
leave
jg
shr
xor
cltd
out
sbb
pop
add
gs
out
gs
push
fbld
stc
jnp
push
int3
and
mov
int
pop
imul
lret
jg
bound
pop
pop
aaa
dec
stos
jecxz
jb
pop
inc
stc
pop
rolb
mov
jmp
add
and
dec
xlat
mov
icebp
loopne
sti
adc
pop
xchg
xor
ljmp
or
ret
mov
lock
faddl
and
jnp
inc
out
idivl
pop
cli
testb
or
push
dec
ja
inc
cld
mov
insb
out
adc
in
xor
pop
mov
add
dec
out
je
jns
mov
and
pop
fwait
rclb
fstl
popa
adc
mov
jl
cmp
lds
inc
or
test
dec
sub
fadd
sarb
test
mov
or
mov
ret
pop
jp
mov
js
add
and
sub
hlt
jle
pop
test
cmp
movsb
lock
test
mov
add
jbe
adc
sbb
push
mov
es
call
call
xchg
dec
iret
scas
int3
imul
sti
dec
adc
pop
call
dec
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
ljmp
mov
notl
xchg
std
pop
stos
adc
loope
jmp
daa
pop
iret
loop
sub
cli
push
push
mov
cmpsb
sub
jmp
in
cli
pop
add
fists
je
pop
mull
out
sbb
out
daa
and
lahf
lock
movsl
cmpsl
push
pop
mov
fmul
out
movsl
pop
in
repz
jg
jns
clc
stos
js
jo
jl
and
mov
das
cmpb
js
cmp
jmp
ret
adc
cli
lds
lods
pop
ret
in
cmp
adc
aas
test
out
repnz
pop
mov
push
sub
and
shlb
xor
cmp
imul
lahf
xchg
pop
sar
fwait
pop
cmp
jbe
clc
sbb
fwait
nop
shll
or
pop
mov
xor
dec
xchg
lea
xor
lcall
inc
dec
shl
lret
xchg
lret
and
cwtl
cld
and
and
pop
lret
push
and
sub
sbb
int
outsl
add
add
ret
call
divl
scas
cli
daa
scas
mov
inc
jl
jmp
das
pop
sbb
pop
xchg
notb
jmp
cmp
das
sbb
clc
xor
lods
lods
cld
push
and
adc
aad
push
out
xchg
jmp
jns
dec
idivl
mov
cmp
subb
or
jl
sub
ljmp
xchg
push
repnz
je
adc
sti
cltd
jle
and
ret
insb
xchg
push
push
testb
shl
sarb
pusha
jbe
adc
ret
jl
mov
lock
adc
xchg
pop
or
je
xchg
fdivs
add
jl
lea
jp
mov
mov
aam
loope
dec
xchg
mov
je
cld
mov
scas
mov
xchg
pop
je
je
in
aad
xchg
mov
pusha
add
sahf
in
idiv
jl,pt
std
scas
and
pop
inc
or
jl
sti
jl
adc
sbb
cmp
mov
mov
jbe
mov
and
push
mov
repz
cli
je
ja
sub
cmp
jl
out
jno
mov
dec
add
lahf
jb
imull
adc
adcl
or
lock
ds
mov
or
imul
out
cltd
outsb
mov
cltd
out
inc
mov
xchg
adc
cmc
cld
mov
imul
hlt
sti
mov
sbbb
mov
out
dec
leave
ds
fs
pop
imul
testb
inc
scas
pop
mov
mov
cld
xchg
aam
movzbl
push
xchg
mov
cmp
xchg
ret
sbb
mov
mov
mov
mov
stos
mov
and
add
mov
nop
pop
jp
cmpsb
out
sbb
je
add
add
cmp
push
pop
cld
mov
rcl
fstpt
xlat
add
mov
cmpsb
xrelease
jbe
mov
pop
jecxz
xchg
setno
or
shl
jl
jecxz
cmp
push
cmp
stc
pop
adc
loopne
jb
in
xor
enter
jnp
fildll
xor
pushf
cmp
xchg
cld
cmp
lods
arpl
out
xchg
outsl
cmp
cmp
loop
jae
xchg
sti
xchg
cltd
pop
clc
dec
lods
sbb
mov
insb
fisubs
inc
out
test
cmc
notl
scas
add
jnp
cmp
mov
cmc
dec
lods
xchg
fcmovnb
cmp
jno
in
mov
je
jns
je
ret
je
mov
or
movsb
mov
xchg
mov
mov
in
clc
sbb
out
inc
iret
je
and
pop
mov
or
cld
pop
cmc
cwtl
int3
xchg
fldl
mov
icebp
or
jmp
jmp
in
jbe
testb
or
cmp
push
sub
inc
lock
repnz
inc
repnz
inc
ret
arpl
jl
add
mov
cmpsb
adc
mul
push
xchg
jg
xlat
lcallw
xchg
adc
or
or
pop
push
push
hlt
std
int3
pop
push
add
mov
sti
mov
dec
mov
clc
loopne
jmp
notb
loopne
lcall
mov
push
movsb
fistps
and
xchg
dec
inc
incb
cli
xor
lahf
imul
hlt
ss
setg
inc
iret
mov
outsb
push
fisubl
add
jge
repz
ficoml
scas
fimull
pushf
pushf
mov
cli
inc
in
stos
cmpsl
das
aas
call
in
pop
daa
push
mov
lcall
rcl
in
cmpsl
sbb
in
mov
in
fdiv
fcoms
push
filds
mov
mov
pop
and
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
dec
add
jns
lods
std
mov
sahf
fwait
mov
popf
lea
sbb
enter
nop
fwait
mov
mov
lcall
mov
rol
cmpsb
repnz
cmp
fldl
xchg
mov
pushf
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
orl
ljmp
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
dec
xchg
movsb
mov
push
aam
lcall
in
cld
scas
dec
cmp
out
pushl
jb
xchg
nop
and
mov
testl
sub
adc
nop
or
sub
sahf
dec
mov
mov
lock
or
lock
jo
repz
inc
shlb
sub
xchg
and
cltd
stc
lcall
roll
hlt
xchg
xchg
repz
mov
popf
psllw
lahf
pop
jmp
jo
int
xchg
je
push
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
cmp
bound
cmp
ljmp
decl
les
dec
mov
shl
test
mov
lods
mov
jp
js
inc
push
std
fmuls
xchg
cmpsl
cltd
cmp
lods
in
call
and
xchg
lcall
mov
mov
xchg
test
jp
dec
shr
lret
mov
pushf
nop
mov
adc
sahf
sbbb
stos
mov
cltd
dec
or
xchg
nop
aad
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
xor
test
faddp
dec
mov
dec
outsb
jbe
xchg
mov
mov
in
data16
fisubrs
lret
xchg
lock
fsubrs
idivb
std
testb
shll
xchg
mov
push
daa
fdivs
mov
cmc
neg
pusha
filds
add
into
sbbb
ja
push
arpl
xor
pop
into
add
ljmp
add
pop
mov
mov
jne
pop
int
int
int
int
int3
ljmp
add
add
int3
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
add
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
add
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
add
scas
ret
jno
imul
ret
push
ret
or
mov
add
mov
or
cld
in
shrl
clc
daa
enter
ret
sub
rcrl
and
or
mov
pop
mov
push
xor
jle
nop
mulb
inc
pop
sub
outsl
adc
stos
pop
add
imulb
pop
fisttps
repz
jecxz
clc
fistl
jg
jp
arpl
or
adc
xchg
js
pushl
mov
outsl
add
aas
add
aas
push
adc
fcomps
cld
jno
fnsave
fsubs
xchg
gs
leave
fldln2
sti
cmovl
cld
aas
mov
push
hlt
gs
xchg
inc
gs
lret
mov
into
jns
jnp
push
or
gs
xchg
gs
mov
xchg
gs
xchg
imul
xor
add
mov
lods
popf
lea
add
push
lods
clc
das
cld
daa
sbb
gs
jbe
cld
idivl
cld
fxch
xchg
gs
xchg
mov
xchg
subl
push
aas
das
and
mov
dec
enter
scas
adc
pop
xchg
lahf
mov
mov
cld
pop
xchg
gs
xor
jae
aas
pop
xchg
gs
scas
jecxz
dec
fs
cwtl
or
cld
das
icebp
dec
xchg
gs
mov
add
inc
push
sti
call
imul
inc
cld
cmp
push
xchg
or
stc
fsubr
cld
in
xchg
gs
xchg
rol
mov
gs
lahf
xchg
mov
cmp
hlt
or
pop
cmp
dec
push
clc
arpl
in
sub
push
dec
clc
adc
leave
jg
mov
aaa
cld
sbb
cmpsl
jae
dec
mov
mov
stos
test
fwait
pop
test
xchg
ljmp
repz
mov
in
lcall
mov
and
mov
mov
mov
out
test
mov
mov
mov
lods
cltd
pushf
mov
inc
sahf
popf
cmpsb
lods
mov
stos
test
lods
mov
pop
dec
scas
lea
cltd
mov
mov
out
test
pop
jmp
cwtl
lods
inc
cs
mov
aaa
outsl
cld
jg
mov
negl
pusha
fsub
adc
cld
out
inc
in
gs
lahf
mov
stc
in
mov
lahf
pop
outsl
mov
mov
cmpsb
fbld
fbld
mov
pop
js
int
call
lods
idiv
dec
cld
jnp
dec
sahf
mov
shl
es
xchg
inc
std
fildll
stc
idiv
notl
cld
add
fstpl
aas
jns
incl
int
or
cld
mov
insb
mov
push
loopne
sahf
dec
es
negl
mov
push
repz
sub
in
push
int
fucomip
mov
int
lock
test
xchg
ljmp
inc
push
das
stc
and
pushf
sub
jb,pn
decl
loop
adc
sar
mov
loopne
aam
loopne
inc
lcall
lea
fbstp
pop
jmp
xchg
test
adc
lock
incl
in
iret
int
cld
fsubr
xchg
mov
cs
jmp
fldt
icebp
int3
insb
insl
mov
outsl
mov
add
hlt
adc
nop
lea
xchg
fistl
push
dec
nop
pop
mov
int
loope
xchg
iret
in
repz
pop
mov
repnz
loopne
cmpsb
stos
clc
mov
mov
shlb
movsl
in
xorl
cs
push
mov
mov
cld
nop
mov
adc
enter
scas
orl
mov
mov
lahf
sub
xchg
test
and
xchg
xchg
test
sahf
xchg
clc
mov
cmp
mov
out
jae
call
loopne
cwtl
fbld
add
cmc
jl
sti
test
jmp
mov
pushl
fldt
jb
mov
aam
andb
fistpl
jmp
pop
lods
scas
scas
push
xor
pushf
in
sti
je
scas
repz
cltd
scas
mov
mov
xchg
outsl
lahf
idivl
and
fsubrs
je
mov
cmpsb
mov
cltd
jle
stc
adc
shlb
lds
hlt
push
jb
add
loop
loope
dec
add
jl
iret
lock
or
cmp
lock
into
jns
sahf
jp
inc
add
pushf
mov
ljmp
mov
ret
lods
mov
ret
push
inc
int3
fmull
stos
dec
inc
nop
dec
fistpl
lods
jp
ss
js
jb
mov
mov
out
je
pushl
fsub
mov
fisubrl
pop
out
repz
cltd
notl
dec
jae
outsl
mul
ret
fisubs
out
or
repnz
xor
sub
xor
sub
clc
in
hlt
fdivrp
iret
faddl
add
int
lret
lret
mov
mov
push
inc
fnstenv
mov
mov
mov
sarb
movsl
cmpsl
mov
hlt
pop
adc
xchg
jns
lcall
fsubrs
mov
sbb
and
fistpll
cmp
outsl
adc
sti
cld
or
add
dec
sub
test
mov
sub
icebp
mov
pop
jecxz
imul
jl
pop
lahf
stos
fs
mov
cld
and
inc
ret
aam
mov
out
mov
mov
push
sahf
lock
dec
push
lock
hlt
jo
lock
dec
out
mov
dec
sbb
arpl
mov
jmp
pop
xchg
cmpsl
lcall
xor
aas
testl
xchg
mov
xlat
cli
pop
shll
ficompl
call
clc
push
pop
mov
push
mov
xchg
cs
cmp
icebp
cmp
dec
out
and
out
xchg
outsl
push
out
jno
fcmovne
insb
test
jle
into
lcall
xlat
stos
lret
pop
lods
xlat
inc
inc
lcall
sub
mov
scas
pop
pop
bnd
stc
cli
orl
test
mov
jb
in
addb
je
aam
jl
cli
jbe
cmp
repz
pop
repnz
and
add
xchg
lret
pop
mov
clc
and
out
push
pop
test
mov
leave
rcrl
push
dec
leave
lods
ret
enter
mov
inc
fistps
repnz
icebp
sub
and
jae
fiadds
out
dec
and
les
fcmovne
add
repz
inc
lock
jp
fstps
ds
inc
ljmp
mov
jne
and
and
jg
icebp
pushl
repnz
iret
loope
outsb
loopne
sub
inc
mov
cmpsb
addl
enter
xchg
cld
fdivs
cmp
cmp
scas
adc
mov
jge
pop
and
jns
mov
jmp
out
and
or
and
pop
outsl
mov
and
jg
mov
dec
imul
imul
mov
sbb
repz
call
cmp
lds
pop
or
add
push
insl
mov
cld
add
roll
in
jecxz
not
xchg
lcall
pop
push
pushf
mov
ljmp
shlb
aaa
test
jne
jne
add
push
cmp
cmp
jmp
fstl
cmpsl
inc
jecxz
push
pushf
fs
icebp
fucomip
adc
mov
jb
leave
jmp
mov
test
out
mov
pop
clc
popa
cmp
and
sbb
loopne
add
add
adc
inc
sbb
jb
cvtps2pd
cltd
pop
inc
das
repz
inc
out
pop
pop
inc
aas
pop
out
or
in
cli
andl
lock
jg
call
fidivrl
xor
pop
dec
mov
lods
inc
icebp
inc
dec
rorl
fcompl
pop
inc
lock
arpl
out
inc
stos
test
ds
mov
dec
jp
imul
jmp
in
push
mov
xor
pop
cli
call
push
cmp
jb
dec
sbb
xor
cli
push
outsl
and
repz
testl
clc
mov
adc
jb
xchg
es
pop
adc
out
mov
test
std
or
mov
loop
hlt
test
out
cmpsb
lea
pop
cmpsb
aaa
pushf
inc
scas
inc
les
mov
test
jno,pt
aaa
popa
sub
push
sub
testl
mov
orl
xchg
std
test
add
jl
andb
mov
cld
mov
adc
incb
jno
bound
mov
sahf
in
int3
jmp
xor
and
lock
and
add
cmp
nop
adc
enter
lds
push
pusha
xchg
stos
jecxz
pop
ficomps
inc
mov
jne
cld
mov
xchg
jbe
pop
imul
lea
movsb
sub
lock
jns
push
pop
into
sbb
adc
jb
cld
cmp
cmpsl
ljmp
inc
rorb
mov
jg
iret
jne
test
and
mov
xchg
imull
outsl
inc
aas
xchg
mov
push
cmp
cvtdq2pd
inc
xchg
hlt
out
sbb
inc
stos
iret
jecxz
cld
aaa
jnp
jg
cld
lea
iret
mov
jp
insl
iret
ret
into
ja
mull
cmc
mov
mov
sti
bound
in
sbb
mov
outsl
iret
pop
lods
or
mov
mov
clc
dec
mov
mov
addr16
cli
jle
jp
pop
lcall
negl
pop
subl
add
or
rolb
scas
cld
pop
inc
call
cs
sahf
mov
adc
lods
mov
dec
inc
xor
ljmp
outsb
jnp
int
sbb
mov
insb
ret
call
and
cmpsl
mov
aas
adc
in
jno
mov
add
push
sbb
mov
out
arpl
outsb
dec
mov
cmp
inc
and
repz
xchg
sar
cwtl
xchg
out
xchg
clc
rcrl
xchg
jecxz
mov
xchg
std
out
call
lods
shrl
aad
jmp
rcl
inc
lock
add
or
gs
cltd
or
adcb
push
fldl
xor
or
xchg
les
jg
xchg
xor
sahf
std
pusha
mov
xor
or
repnz
mov
fucomi
pop
xchg
iret
inc
ficomps
add
sti
and
push
push
fsub
stc
lret
push
pop
mov
mov
add
nop
push
mov
stos
mov
adc
out
stc
and
les
pop
jne
into
and
clc
mov
jnp
les
int3
jbe
nop
add
hlt
sarl
scas
adc
mov
add
xchg
add
je
les
mov
mov
adc
jae
adc
sahf
js
jl
jecxz
cwtl
andl
test
xlat
cltd
sbb
das
xchg
jbe
ret
mov
fildl
inc
aam
inc
add
loope
or
lock
mov
push
ja
mov
sbb
ret
mov
repz
jl
or
adc
push
jmp
fsubrl
aaa
ds
or
aaa
mov
ret
idivb
and
xchg
jnp
mov
aas
enter
pusha
push
push
sbbb
out
mov
cwtl
jg
stc
lcall
inc
data16
in
xor
xchg
add
cli
cmp
aam
into
sti
aas
pop
sti
mov
and
hlt
arpl
scas
mov
or
mov
dec
shll
mov
stos
hlt
pop
orb
je
out
mov
cmp
int
out
xchg
mov
out
ja
xchg
lahf
into
fucomip
loop
xchg
aaa
loop
jle
xchg
cmp
xchg
cli
jns
fists
in
sub
loope
xchg
mov
fsts
lea
mov
xchg
in
out
addr16
idivb
xchg
push
fucomp
inc
nop
mov
adc
jmp
cmpsl
pop
fiadds
add
sbbl
jg
fxch
mov
sti
into
cmpl
dec
add
pop
aad
je
xchg
sub
fdivrl
jbe
shlb
inc
imul
mov
int
fucomip
repz
sahf
in
std
fidivrl
mov
jmp
cmp
out
sbb
and
inc
ds
jb
jl,pn
rol
mov
add
ds
add
or
loop
mov
push
mov
dec
add
cli
jecxz
pop
mov
stc
call
push
enter
in
mov
out
add
sub
push
add
jne
aas
sti
ds
add
in
inc
popf
sti
mov
and
add
fwait
pop
repz
test
cmp
lahf
mov
outsb
mov
int3
je
adc
sub
add
sub
add
sbbl
out
fmull
add
out
jb
call
jne
addb
ds
sti
cld
or
cs
scas
or
hlt
or
cld
out
mov
jp
jb
enter
cmpsl
or
adc
or
xchg
or
shl
cmpsb
add
and
cli
cmpsb
jmp
and
adcb
ds
jmp
pcmpeqb
fmull
inc
adc
xor
and
lock
and
adc
inc
ds
jge
ds
hlt
or
or
mov
mov
inc
cld
and
in
and
or
orl
je
adc
add
dec
inc
jmp
stos
push
andl
inc
dec
shl
fisubrl
aad
js
and
and
sbb
jmp
jge
je
and
sahf
sub
and
push
push
mov
in
dec
das
rcr
faddl
ljmp
into
loope
xor
mov
push
adc
scas
inc
ljmp
jl
dec
ljmp
jl
dec
lret
lret
pop
daa
daa
addr16
adc
loop
xchg
dec
jmp
das
and
adc
push
or
dec
pusha
and
push
add
je
pop
mov
cmp
jg
aas
sti
dec
movsb
stos
mov
or
cld
aad
daa
daa
in
jl
sub
das
fisttpll
mov
mov
fildl
and
stos
cmp
fucomp
outsl
ret
mov
imull
lret
and
sub
and
add
push
jnp
push
dec
adc
stos
add
add
sub
xor
in
mov
cld
clc
std
arpl
jno
xchg
sbb
mov
xchg
jp
cli
pop
fcomi
js
nop
adc
aam
cmp
cmp
jmp
std
fdivp
push
cmp
je
ds
dec
adc
leave
and
sub
stos
je
popf
sub
xchg
adc
loope
adc
in
cli
hlt
sub
pop
cld
das
faddl
andb
repz
dec
ret
mov
jmp
and
dec
sub
fadds
lea
or
movsl
mov
push
push
in
icebp
or
dec
jno
and
sub
push
push
adc
dec
push
cs
dec
mov
inc
xchg
xor
push
or
jae
loope,pn
push
push
sub
js
dec
daa
sbb
jl
aas
jns
jmp
std
lahf
jo
mov
jo
fisubl
addl
daa
sub
icebp
pop
jp
mov
fsubl
es
movsl
es
dec
shll
sub
xorb
sbb
pop
push
push
dec
and
movsb
or
mov
dec
sbb
push
ficoms
outsb
pop
dec
inc
jb
xchg
cmp
cld
sub
enter
and
cmp
jo
in
cmp
mov
aas
shll
les
sub
icebp
jl
jmp
daa
fsubl
es
scas
dec
adc
je
jmp
mov
mov
mov
sub
andb
and
mov
xchg
jo
dec
cmovle
icebp
lcall
fstpt
aaa
or
je
add
or
es
nop
cwtl
sub
xchg
adc
xor
cmp
mov
jo
bnd
jne
aad
jae
adc
fs
mov
das
out
push
xchg
push
pop
das
mov
ret
sti
push
loop
inc
dec
add
int3
add
jle
gs
sbb
mov
jge
jge
roll
xchg
rcr
bound
leave
dec
out
mov
int3
lret
enter
repz
sbb
fildl
push
repnz
or
dec
adc
je
leave
cmp
mov
inc
iret
xor
in
push
xor
mov
lea
xchg
lcall
mov
arpl
xor
lahf
mov
or
mov
add
lods
cmpsl
dec
stc
add
popl
inc
inc
sbb
cmpl
sub
iret
cmp
or
or
cmp
pop
daa
push
cmp
adc
repnz
mov
cwtl
int3
and
sub
xchg
adc
and
sbb
shll
push
xchg
imul
pusha
cmpsb
inc
ja
adc
fcoml
sub
shl
mov
cmp
sbb
mov
push
and
inc
or
xor
add
lods
sbb
xchg
loop
adc
push
inc
push
adc
repz
lcall
xlat
imul
nop
int
xchg
xor
out
mov
xchg
in
das
in
push
stc
hlt
loope
xchg
pop
dec
push
out
int3
jg
dec
dec
ret
mov
mov
jnp
pushf
sbbl
push
pop
fsubrl
out
test
xchg
repnz
in
test
loopne
pop
insb
add
adc
ljmp
sbbl
cmp
movsb
lcall
sbb
lcall
insl
xor
jo
mov
jp
xor
and
lcall
adc
lock
or
loop
out
adc
mov
jns
sbb
adc
mov
push
inc
jl
and
push
nop
mov
stc
xchg
dec
or
shlb
add
pop
sbb
add
cmc
test
out
outsb
and
les
pop
adc
or
mov
loopne
out
divl
mov
subl
sub
sub
daa
pop
lret
xchg
adc
adc
daa
pop
xor
and
sub
aad
in
ds
cmpb
das
sbb
outsb
sub
adc
into
lods
add
jbe
movsb
adcb
mov
push
stos
movsb
pop
jbe
outsl
stos
mov
repz
repz
mov
mov
stc
je
aaa
das
sarl
mov
jg
add
cmp
xchg
xchg
xchg
pop
mov
cwtd
rorb
cmpsb
xchg
sub
notb
xchg
mov
and
sub
mov
ljmp
mov
xor
imul
les
mov
and
out
rcrl
xlat
adc
scas
xor
adc
push
clc
fs
fsubs
pop
lods
and
icebp
xabort
aam
test
and
std
orb
mov
mov
jecxz
sub
sbb
xchg
or
pop
ljmp
je
sub
jb
pop
cmpsb
in
pushl
std
mov
and
inc
xchg
mov
inc
std
inc
aas
cmp
mov
mov
lods
scas
fs
in
add
sti
jecxz
test
lret
xlat
cmp
int3
add
xchg
cmc
cmp
aas
mov
cmp
movsl
test
iret
sub
orb
repnz
adc
in
adc
imul
lods
test
loopne
lods
popf
push
mov
jne
xchg
sub
out
lods
out
cs
mov
sbb
or
out
sub
dec
das
xchg
mov
or
and
xchg
cli
sub
xor
daa
lcall
pop
lcall
stos
sbb
nop
ret
call
jnp
inc
mov
cmc
pop
inc
fidivrl
jbe
mov
add
lahf
nop
imul
inc
or
mov
sub
mov
add
mov
add
leave
movsb
sbb
dec
xchg
imul
popf
mov
test
mov
push
pop
cwtl
mov
pop
cmpsb
clc
xor
mov
loope
faddp
ljmp
and
lret
imull
cmc
mov
inc
fs
sbb
sub
pop
jg
jmp
pusha
les
xchg
jg
cmp
lret
sub
hlt
jp
or
add
sti
lahf
push
adc
notb
jb
repz
jp
lods
scas
aam
hlt
cltd
loope
sbb
fstpl
jmp
inc
sbb
popa
adc
mov
cmp
dec
mov
push
inc
adc
adc
int
sub
push
test
cld
test
idiv
sub
cld
xor
adc
std
lret
lahf
out
pop
or
out
sub
or
mov
sub
add
out
cltd
loope
lea
lds
add
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
aam
dec
leave
mov
xchg
xor
mov
mov
push
es
sbb
inc
sbb
push
sahf
cmc
lock
addr16
adc
pop
mov
mov
xchg
jns
pusha
cmp
inc
jb
popa
test
mov
mov
jno
mov
jb
add
jne
std
ret
mov
mov
xchg
and
aaa
or
lock
pop
push
or
call
xor
fildl
mov
push
leave
ficomps
push
test
outsb
jmp
andl
xchg
mov
aaa
lret
jle
addr16
mov
stc
cli
pop
movsb
sbbb
add
test
stos
and
js
fwait
sub
idivl
in
pop
aas
dec
xchg
std
jp
dec
sahf
in
jno
dec
xor
out
cmc
orl
mov
stos
dec
and
lock
mov
jecxz
fxch
sub
icebp
push
cs
or
adc
in
les
jge
xor
fwait
add
jne
filds
in
cmp
and
in
fdivs
fisubl
pop
mov
movb
les
dec
pop
lret
imul
aam
hlt
leave
in
aas
mov
iret
add
dec
inc
rorb
inc
adcb
jb
test
ss
sbb
jnp
daa
xor
rcll
mov
filds
push
or
and
repz
arpl
dec
ret
sub
dec
clc
cmove
fimuls
clc
sti
mov
pop
jge,pt
mov
hlt
outsl
xchg
hlt
call
leave
rcrb
mov
mov
cwtl
insb
mov
pop
mov
jo
dec
iret
mov
sbbb
in
mov
pop
jno
adc
pop
xlat
comiss
mov
inc
ret
adc
out
notb
inc
add
aam
mov
call
sbb
dec
out
test
adc
mov
cmpsl
out
je
lods
jae
add
filds
jecxz
andl
ret
inc
dec
cmpl
jl
sub
add
icebp
xchg
fs
jno
xorb
sub
adc
push
sbb
xor
lea
push
mov
xchg
dec
cwtl
dec
test
push
mov
mov
lea
inc
mov
inc
hlt
inc
mov
lea
inc
test
inc
xchg
ja
inc
xor
xchg
push
lcall
rcll
xchg
xor
lcall
xor
out
mov
scas
sahf
xchg
and
shll
mov
cli
pop
xchg
push
xchg
pop
push
inc
adc
adc
femms
or
inc
sub
sub
cmpsl
mov
decl
ds
cs
lcall
iret
lds
xor
sub
jne
pop
push
bound
cli
imul
and
inc
das
jb
xlat
inc
pop
fdivrs
test
out
cld
cmpsl
sbb
cmpsb
enter
std
adc
dec
test
inc
push
arpl
test
pop
rcrb
aas
mov
aaa
mov
add
jp
call
stos
aaa
sbb
out
mov
jbe
push
sub
jne
dec
test
ja
add
int
jo
dec
sbb
movsb
incl
lret
aam
cs
lock
mov
xor
xchg
sub
mov
cs
sub
pop
xchg
clc
fiadds
cld
arpl
sub
xchg
mov
scas
test
lahf
or
push
push
adc
enter
jmp
loope
pop
jnp
mov
cmp
shr
les
inc
stc
adc
iret
movsl
lret
inc
pop
push
js
dec
jmp
adc
data16
mov
and
clc
fcmovnbe
mov
add
cld
lods
imul
cmp
mov
iret
add
roll
ret
out
mov
daa
or
xlat
or
imul
call
push
push
mov
icebp
push
dec
cmp
test
or
cmp
and
scas
pop
ja
and
jno
aaa
or
popf
adc
aas
test
jp
repnz
mov
jge
inc
jne
inc
ficoml
shrl
repz
sbb
adc
cmpsb
inc
cmp
aad
test
push
mov
cmc
std
ret
pop
inc
xchg
cld
xchg
scas
add
rcll
xchg
mov
dec
daa
cltd
ljmp
xor
int
out
cwtl
add
stc
and
cld
movsl
dec
mov
dec
lahf
mov
icebp
mov
lret
mov
xchg
cmp
test
loope
cli
in
jnp
or
mov
cltd
and
sbb
std
cmc
pop
lret
and
jl
jnp
cli
adc
paddd
pop
lcall
mov
andb
cmpsl
in
pop
loop
pop
ljmp
fistpll
out
jl
in
mov
fists
push
std
mov
dec
push
insl
cli
into
in
jg
mov
clc
movsb
sbb
jmp
out
hlt
cmpl
xchg
jb
leave
stos
aad
loopne
aas
jo
outsl
xchg
xor
jl
pop
add
scas
test
dec
sub
sti
int
cli
in
mov
xchg
in
cmp
out
pop
cli
jnp
loop
and
int3
lods
mov
shll
mov
sti
js
jnp
sti
loopne
notb
push
mov
out
xlat
xchg
mov
loop
lahf
jl
insb
mov
xchg
adc
jge
sbb
sub
jecxz
call
sub
xchg
std
mov
ljmp
addr16
inc
jb
xchg
orb
rcrb
or
or
push
mov
mov
ret
push
xchg
ja
mov
add
jl
in
js
ret
cld
fldcw
fnsave
rorl
xchg
fwait
sub
testl
int3
ljmp
mov
lock
stc
out
fs
or
or
sar
xchg
pop
mov
push
jne
enter
popf
mov
pop
cld
adc
pop
jbe
xchg
repz
adc
shll
mov
adc
pmuludq
sahf
or
or
lcall
mov
mov
push
rcrb
jl
lea
pop
push
cltd
out
loope
pop
repz
scas
in
pminsw
pop
fs
repz
data16
addr16
imul
adc
out
nop
mov
inc
lock
cmpsb
mov
mov
fstpt
fwait
outsl
mov
addr16
stc
out
js
lahf
mov
and
daa
jmp
in
cmp
dec
pop
rol
js
pop
add
loope
ret
loope
repz
das
gs
cs
leave
cltd
shl
lahf
fdivl
push
aas
cli
movsb
inc
cmp
mov
dec
std
push
xlat
mov
lea
mov
lret
adcl
xchg
shrb
mov
mov
mov
daa
cmc
out
aam
push
jmp
es
loop
lret
mov
adc
xchg
loopne
dec
xchg
enter
jb
imul
scas
push
pushf
sbb
jge
lds
dec
out
push
std
aas
adc
and
sub
sti
xchg
push
mov
adc
cmp
add
cmc
sub
std
and
ja
push
xchg
vmread
dec
loop
in
add
shll
pop
inc
sbb
jp
adc
imul
jmp
out
jl
icebp
test
popf
clc
pop
lds
sub
lret
sub
rolb
adc
pusha
adc
pushf
mov
scas
inc
jae
lods
pop
stos
jbe
aam
int3
mov
xchg
dec
mov
popf
cmpsb
in
test
cmpsl
cmc
pop
add
fisubs
mov
xchg
pop
cmp
repz
ret
ret
in
add
out
dec
icebp
lods
iret
repz
pop
out
mov
mov
sbb
mov
ret
xchg
pop
movsl
mov
jae
ss
mov
or
fnstcw
outsb
add
mov
clc
adc
and
incl
xor
inc
out
or
mov
nop
bound
xchg
out
jl
rcrl
or
sbbl
adc
xchg
jecxz
popa
out
frstor
fs
adc
sbb
out
or
icebp
in
adc
mov
fldl
cmpsl
les
lahf
loop
hlt
rcr
shl
test
or
xchg
mov
or
add
pushf
fcmovne
mov
pop
out
lahf
push
imul
hlt
fnstcw
inc
mov
imul
sbb
jmp
adc
movsb
mov
jmp
rclb
shrl
dec
sbb
xchg
leave
pop
stc
repnz
sbb
test
mov
push
scas
and
scas
fadds
adc
mov
adc
lret
sbb
push
mov
jl
mov
jb
cli
jnp
ss
inc
fldl2e
pushf
addr16
movsb
ja
inc
daa
mov
sarl
incl
imul
and
addr16
imul
fisubl
fldenv
inc
pop
adc
popa
in
pusha
pop
hlt
pop
in
pop
mov
lret
mov
cld
pop
in
pop
pop
pop
pop
lret
lret
in
push
push
push
push
sub
mov
clc
push
call
dec
call
dec
add
dec
dec
mov
movl
lahf
sub
inc
in
inc
xchg
call
inc
aas
ds
sub
in
cmp
cmp
mov
xor
inc
push
sti
xchg
ret
adc
push
in
xor
xor
adc
das
mov
hlt
sub
hlt
sub
daa
es
push
jl
and
and
and
dec
xchg
pop
rcrb
fnstenv
xchg
xchg
lret
mov
lret
int
fimull
xor
adc
inc
push
push
in
adc
ljmp
les
in
gs
pop
test
in
ret
push
lret
add
call
lahf
pop
lahf
cld
test
push
stos
jp
sar
jae
cli
sub
pushl
mov
in
inc
lods
jo
hlt
fdivrs
repz
add
test
and
js
loopne
loope
bound
xorb
scas
stc
das
jo
loopne
outsl
mov
repz
jb
jb
repz
cli
mov
aam
stc
mov
scas
scas
ss
dec
stc
jb
iret
mov
out
lock
pop
outsb
mov
mov
stc
into
pop
jmp
pop
add
jecxz
out
mov
xchg
movsb
insb
in
adc
pop
dec
test
ud1
inc
mov
test
xchg
mov
push
fldcw
mov
cld
push
jg
fistpll
jo
pop
mov
aam
mov
fidivrs
push
jne
and
inc
mov
push
pushf
insb
lods
xchg
mov
sbb
xchg
cli
test
ja
pop
mov
ljmp
pop
stos
mov
cmp
in
cmpsb
or
repz
and
cmp
imul
dec
jle
xchg
mov
leave
lock
in
or
in
test
mov
jl
mov
test
cld
frstor
icebp
icebp
std
das
pop
inc
je
rol
dec
in
jae
sarb
pop
outsb
je
cmp
inc
mov
aas
shll
scas
movsb
fisubs
leave
cmc
aaa
std
xor
shll
and
std
pop
jle
imul
std
cmp
mov
xlat
dec
or
jne
xor
dec
mov
dec
mov
jne
add
pop
pop
outsl
lret
pop
mov
mov
or
xlat
pop
cmp
loop
jae
fdivs
jae
xchg
pop
push
fisubrs
adc
and
cs
mov
jae
out
cmp
mov
sbb
data16
or
sarb
pushf
or
mov
in
cmp
or
aad
inc
cli
lahf
xchg
jmp
mov
add
mov
int
fadds
subb
test
jecxz
sub
lods
in
das
cmp
xchg
jmp
int3
insb
out
add
mov
add
test
and
xchg
gs
push
stc
lods
mov
mov
das
lcall
add
add
pop
inc
fnstcw
adc
inc
in
adc
rorl
in
in
xchg
dec
jno
or
xchg
pop
scas
clc
gs
xchg
xchg
mov
xchg
xchg
lcall
pop
xchg
mov
daa
gs
lcall
stc
mov
xorb
ds
lcall
lcall
jbe
mov
int
mov
je
push
adc
xchg
jae
cld
jb
jno
jo
outsl
mov
outsb
lcall
mov
repnz
push
imul
mov
stos
gs
mov
aaa
fbstp
inc
xor
mov
lcall
jl
adc
sbb
sbb
sbb
mov
pop
xchg
gs
mov
gs
xchg
mov
gs
lcall
test
cmp
dec
pop
aaa
hlt
fwait
fwait
fwait
fwait
ja
daa
das
cmpsl
das
in
dec
ljmp
popf
xor
mov
or
xor
add
add
fmull
int3
int
jle
add
pop
lods
inc
movl
mov
xchg
fwait
xchg
test
lds
add
mov
pop
cmpsb
or
lock
out
inc
scas
push
pop
sub
loope
scas
cmpsl
cmp
daa
lock
push
or
popa
mov
lods
sbb
ja
lcall
ret
loop
mov
dec
inc
xchg
cmc
dec
rcll
mov
mov
cmc
mov
iretw
bnd
or
test
inc
call
in
mov
test
mov
mull
cld
mov
out
jbe
cld
add
xor
push
hlt
cmc
and
xchg
adc
test
enter
cli
hlt
je
pop
push
add
out
inc
outsb
pop
or
clc
in
inc
mov
dec
lods
rorb
lock
aas
jle
sbb
cmp
aad
std
dec
xchg
mov
adc
stc
orl
shl
mov
jno
lea
iret
add
or
cmp
daa
cli
arpl
shlb
jg
icebp
mov
sti
loopne
das
cs
mov
pop
mov
int
int3
lds
lahf
rorl
mov
fldcw
insl
xchg
add
jmp
mov
lock
xor
pop
adc
cltd
jo
mov
les
gs
xor
add
add
pop
and
jmp
inc
ds
xor
ds
popf
push
fdivl
xchg
mov
xor
insl
enter
xorl
mov
cmp
std
adc
insl
or
adc
cmp
dec
fcmovnu
push
sahf
add
push
cli
pop
sbb
in
inc
dec
xlat
test
and
xlat
mov
fxch
and
pop
scas
aam
mov
push
loope
mov
jnp
pop
cmpsb
xchg
pop
mov
lret
and
pop
lea
inc
cmp
enter
pop
jne
adc
adc
pop
add
sbb
ret
pop
mov
sub
cmp
cmp
outsl
or
lret
arpl
fidivrl
dec
ds
adc
repnz
scas
repz
adc
mov
cwtl
arpl
mov
fbld
in
jle
pop
fldl2t
repz
cmp
pop
shlb
jecxz
bndldx
daa
mov
sbb
xchg
or
mov
rorl
pop
test
jg
cli
ret
xlat
xorb
in
push
pop
aam
pop
lret
inc
or
in
cld
mov
jl
mov
jnp
enter
ds
cli
sbb
dec
sbb
ficompl
scas
fs
sahf
cli
sbb
push
mov
fisttps
push
adc
adc
adc
in
clc
or
xchg
mov
lret
repnz
lds
mov
pop
sti
pop
fistpll
out
adc
add
sub
leave
fidivrs
sub
std
jge
fucomp
or
mov
pop
lcall
sbb
shl
sbb
push
flds
and
jmp
add
out
out
cmpsb
fstl
out
pop
fcmovu
fbld
xor
ret
adc
cmp
adc
nop
lret
xchg
idivl
mov
push
pop
pop
ud0
jecxz
cld
or
xchg
pop
inc
jns
jmp
in
or
or
pop
shrb
inc
push
push
in
add
pop
lahf
in
jnp
or
mov
sbb
test
dec
mov
pushf
mov
arpl
fidivrl
jae
aaa
sahf
mov
hlt
jno
mov
mov
mov
xor
or
test
push
loopne
rolb
xchg
sub
cs
test
int3
icebp
jae
lock
daa
or
mov
jle
pop
out
lret
mov
mov
push
roll
sub
rorb
fdivrl
lret
outsb
jg
add
xchg
mov
or
int3
jb
subb
push
xchg
das
movsb
test
pop
in
clc
imulb
adc
icebp
mov
notl
pop
mov
mov
fdivrp
out
xor
push
ss
add
mov
jg
jnp
outsb
inc
push
push
xchg
clc
mov
sahf
mov
stos
lret
xchg
inc
pop
cmp
cmpb
aas
mov
stos
fdivr
sbb
ljmp
filds
mov
and
inc
pop
xchg
xchg
or
movsl
ljmp
sbb
ljmp
call
mov
fildll
push
ljmp
pop
push
repz
push
mov
mov
int3
or
ss
inc
inc
and
clc
dec
cmp
sub
lock
jbe
add
outsb
and
mov
and
add
test
in
rcrl
inc
inc
ret
in
or
hlt
sub
sti
les
lea
lcall
mov
pop
mov
cltd
in
add
out
cld
fcomip
stos
rclb
mul
stc
xor
add
lret
loop
ficoml
add
sub
sub
mov
arpl
popa
sub
sub
mov
pop
mov
loop
sub
mov
rcrb
mov
fcomps
mov
mov
fcoms
push
lcall
ret
stos
sub
popf
dec
lds
mov
inc
lds
roll
sub
je
loopne
hlt
cmp
sbb
cmp
cmp
popf
repnz
adc
xchg
negb
sub
push
xchg
gs
sub
daa
es
adc
push
xchg
ljmp
and
and
and
dec
pop
xchg
jmp
pop
push
push
aam
jns
fimuls
sbb
arpl
cli
inc
or
jmp
xchg
call
test
imul
in
mov
mov
jle
lahf
inc
adc
icebp
das
adc
loop
clc
or
js
jo
xchg
lods
xor
cmp
sub
notl
and
mov
pushf
adc
xor
movsl
cld
loope
cmpb
aam
add
pop
iret
loope
lahf
push
xor
das
clc
push
mov
in
push
sbb
jg
jns
std
inc
cmp
mov
and
inc
cmp
cmp
ss
lcall
data16
xor
cmpsb
jmp
aam
cwtl
mov
repz
and
mov
and
pop
jecxz
loop
loope
jp
in
pop
fwait
pop
cmp
fstps
adc
push
lock
mov
adc
push
aad
or
jns
push
xchg
data16
loopw
or
fldcw
mov
or
adc
mov
pop
xchg
int
lret
cld
cmp
nop
sahf
lea
pushf
lea
aad
lret
xchg
fwait
lcall
rorl
cs
sub
leave
cmp
mov
xchg
mov
pop
xchg
xlat
int
jbe
sub
adc
mov
xchg
data16
scas
lret
jne
iret
testl
add
loop
jmp
jmp
push
xchg
shll
int3
xchg
ljmp
pop
xchg
fwait
push
and
xlat
push
pushf
mov
sub
cmp
add
incb
ja
hlt
out
in
lahf
iret
in
loope
rclb
lret
daa
into
adc
push
aas
lock
xchg
inc
and
push
dec
lahf
testl
out
sti
and
nop
repz
cli
roll
pop
xchg
adcl
adc
inc
jno
fwait
mov
lods
cmp
imull
pop
aas
fldenv
ljmp
ja
cmpsl
mov
enter
pop
jecxz
bound
push
xchg
jbe
fcomi
mov
mov
jl
cmc
and
test
sub
inc
xchg
testl
in
ja
ljmp
js
dec
mov
out
mov
popa
inc
cmp
sub
notb
cwtl
pushf
popa
sbb
pop
mov
lret
lods
inc
adc
enter
stc
xchg
outsl
sarl
pop
sbb
adc
rcl
or
dec
fwait
ljmp
cmp
inc
fucom
mull
push
jge
jge
hlt
pop
incl
pushf
mov
fs
rcll
inc
sbb
mov
mov
add
jmp
shrl
sbb
sub
scas
inc
cli
cld
mov
in
inc
jg
test
enter
imul
and
out
repz
clc
in
adc
push
lcall
mov
push
sbb
push
mov
sti
rclb
std
xor
lcall
call
xchg
iret
mov
imul
xchg
imull
mov
jge
js
mov
stos
push
inc
pop
mov
movsb
aas
add
in
ret
je
mov
fcomp
call
in
in
dec
ret
ds
cmp
fcomi
loope
adcl
inc
dec
fdivr
inc
iret
jge
fldl
lds
add
add
inc
sub
lcall
loop
push
cwtl
adc
repz
addl
in
ss
cmc
push
cmp
xchg
inc
cmp
fcomip
xchg
add
imul
xchg
lcall
mov
cmp
add
scas
repz
dec
mov
lods
add
insl
enter
stos
inc
stos
pop
add
jne
mov
add
ja
cli
insb
movsb
out
add
push
and
fwait
and
and
xchg
and
xchg
imul
mov
sbb
sbb
xchg
jle
add
loope
mov
xor
scas
stc
pop
xorb
ss
nop
xchg
lea
ss
jno
adc
jg
sti
adc
cmp
push
add
sub
inc
sub
mov
aaa
frstor
add
add
mov
and
adc
es
stc
sbb
ret
xchg
sbb
inc
add
aas
fidivrs
push
add
int3
xchg
inc
push
daa
add
cli
dec
stos
dec
repz
jg
lahf
jl
mov
iret
lods
mov
test
mov
loopne
sub
cli
lret
out
clc
mov
aas
mov
loop
xchg
aam
jnp
movsl
xor
cld
repnz
xor
cmc
cmp
push
adcb
sarl
xchg
je
test
testl
push
jp
je
mov
cld
aam
repz
in
cmp
pop
stos
lahf
xor
je
mov
xor
cmpsl
pop
bswap
push
mov
lret
out
xor
inc
clc
sahf
je
enter
je
dec
cli
push
int3
cs
cmp
daa
adc
lock
fcmovnb
mov
fsubr
stos
clc
sarb
jbe
sahf
mov
inc
fs
ja
jae
jb
xor
test
cmpsl
std
cmp
and
adc
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
mov
test
into
mov
cs
fldl
push
mov
adc
je
les
out
das
das
std
jnp
in
xchg
xor
inc
pop
rol
mov
in
jns
mov
jl
iret
ret
pop
jb
xor
movsl
pop
pop
jne
into
xchg
cmp
and
lods
test
xchg
repnz
aaa
jns
mov
inc
je
test
pop
in
lahf
dec
mov
stos
and
jb
xchg
dec
repz
mov
xchg
or
cmpsb
lret
jmp
fistpl
xchg
call
iret
push
mov
and
mov
lock
cmpsb
stc
je
xlat
fcmove
fucomip
lock
repz
leave
test
mov
mov
lea
test
add
dec
movsb
xor
jecxz
arpl
cmpsb
je
stos
jl
out
inc
add
xchg
stc
inc
pop
jbe
sti
jbe
je
out
je
je
inc
jb
lods
clc
test
cmp
nop
adc
push
mov
push
mov
outsb
mov
je
dec
xchg
adc
enter
inc
subb
inc
test
mov
test
in
cmp
shlb
leave
testb
hlt
rcll
dec
cmc
out
or
jnp
out
xlat
mov
in
sbb
add
pop
repnz
cmc
repnz
push
cwtl
pop
xchg
sub
cltd
mov
pop
mov
pop
ljmp
xchg
jmp
xchg
xlat
pop
pusha
out
dec
cmp
mov
pop
jge
jl
insb
cmp
aam
and
mov
subl
and
mov
stos
jmp
add
pop
pushf
cmpsl
cmp
mov
or
mov
mov
add
push
lock
ds
push
push
int3
adc
inc
andb
stc
mov
je
push
movsl
int
xchg
stc
push
push
xor
or
out
sarb
push
jmp
push
jmp
jg
and
fs
aas
in
call
and
dec
adc
fdivs
jbe
scas
cli
push
icebp
out
mov
adc
outsl
mov
mov
mov
cmp
cmp
les
int
fstpt
arpl
enter
fidivrl
mov
lods
mov
popf
cli
and
adc
or
push
inc
inc
fidivrl
jb
movsb
inc
mov
les
sahf
mov
aas
dec
out
or
icebp
adc
and
mov
ds
scas
sub
add
push
xor
andl
sti
call
enter
cmp
jb
cmc
cltd
orl
dec
sub
out
or
cmp
call
pop
les
mov
or
xor
mov
add
clc
ds
sub
cmp
aas
mov
push
call
mov
jnp
imul
jg
out
cmp
mov
test
jmp
out
xor
jmp
mov
test
lds
movsb
cmp
xchg
lret
cltd
scas
js
xchg
cmp
cmp
fs
lret
jo
dec
xchg
add
sub
jbe
pop
and
cmp
mov
or
jg
add
fs
hlt
cwtl
mov
adc
mov
stc
lahf
sbb
mov
and
cmpsl
in
and
mov
push
pop
adc
sbb
out
popl
out
test
and
mov
add
lahf
out
enter
xlat
xor
and
ret
sbb
inc
mov
xchg
mov
mov
or
push
dec
mov
mov
stos
icebp
pop
inc
mov
out
cmp
ret
mov
scas
lret
out
nop
mov
mov
sub
cmp
clc
push
loopne
decl
fsubp
hlt
scas
mov
insb
mov
in
mov
mov
pop
dec
pop
jp
das
and
fcoms
adc
push
jb
pushl
push
inc
sahf
xchg
add
jmp
repz
pop
sbb
xor
lods
mov
cmp
xchg
lcall
pop
inc
jnp
dec
stos
cld
sbb
imul
pop
pop
fisubs
inc
jmp
mov
sbb
jns
fs
inc
lods
ljmp
pushf
push
xor
clc
mov
ficomps
sbb
ja
add
cli
jge
mov
dec
inc
repz
out
sti
sub
add
inc
push
push
subl
rolb
lret
xchg
outsl
mov
xchg
jnp
jns
lahf
mov
popa
mov
cmp
lret
jle
inc
fs
ret
push
popl
int
mov
xchg
stc
xchg
dec
sahf
das
xchg
dec
mov
inc
aas
icebp
out
mov
jp
jnp
and
add
adcl
push
enter
enter
jbe
lret
ror
pop
enter
or
incb
pop
mov
mov
xchg
movsbl
sti
jb
call
push
pop
pop
testb
or
daa
pop
jmp
mov
iret
mov
sbbb
mov
pop
pop
mov
xchg
adcb
mov
adc
hlt
repz
stc
xchg
cmp
push
cltd
pop
jnp
in
and
pop
hlt
xchg
fistpll
fdivr
out
lret
xor
inc
enter
inc
and
jbe
xor
out
jbe
out
add
xchg
sbb
pop
push
movaps
or
cmpsl
aaa
frstor
std
pop
sub
movsb
repnz
and
in
addb
hlt
cmpsb
jbe
fwait
mov
call
popa
mov
fwait
pop
inc
inc
repnz
jmp
cmp
adc
add
adc
xchg
andb
pop
sti
jmp
addb
fs
sbbb
and
das
push
and
inc
pushf
movsb
int3
popa
mov
roll
mov
js
pop
adc
ret
test
test
push
inc
outsb
test
mov
jnp
leave
sub
test
jmp
jno
lods
adc
mov
pop
jge
ljmp
mov
pop
xchg
adc
mov
lahf
xchg
scas
mov
sbb
xchg
ja
repnz
stos
es
push
ror
ficomps
out
test
test
cmp
into
adc
add
fisttpll
in
loope
mov
dec
lahf
aad
stos
imul
sahf
leave
clc
xchg
insb
or
push
testl
adc
jp
push
jnp
sti
dec
or
pop
mov
mov
daa
das
mov
adc
dec
scas
pop
cli
cli
pop
leave
pop
cmpsl
adc
cli
sti
mov
add
inc
cwtl
out
or
int3
out
ljmp
mov
push
mov
and
stos
lret
aas
adc
les
push
in
out
mov
fdivp
xchg
out
mov
cmp
xchg
nop
fisttpll
adc
jl
movsl
adc
adc
mov
into
mov
movsl
mov
inc
xchg
jp
sbb
mov
push
add
push
mov
or
je
hlt
mov
std
mov
cmpsl
jg
mov
and
xchg
rcll
cmpsl
icebp
adc
jmp
ja
ja
dec
inc
ja,pt
cli
cmp
jg
inc
test
lcall
dec
jle
sub
je
in
sti
hlt
out
or
lret
iret
jecxz
mov
xchg
stos
ffreep
jmp
lock
cli
cmc
sbb
inc
fisttpll
repnz
pop
and
notl
mov
or
inc
pop
push
das
cmc
mov
in
pusha
pop
pop
xor
xor
cmp
push
add
jl
mov
jmp
aad
pushf
clc
out
sahf
cltd
sarl
jg
mov
inc
js
lock
je
cmc
and
and
mov
lods
loopne
clc
negl
stos
arpl
jne
xor
cmp
out
leave
or
or
repnz
inc
mov
lahf
inc
imul
cmp
repz
fstpl
dec
sbb
ficoms
repnz
and
push
adc
push
xor
lahf
pop
mov
cmpsl
std
test
pop
daa
mov
pop
js
xchg
insb
mov
fadd
fsubrl
pushf
or
push
fucomip
add
jbe
jg
cli
inc
push
push
mov
pop
out
cld
xchg
repnz
sub
jae
mov
pushf
cltd
outsl
out
xchg
mov
jp
adc
out
lahf
mov
icebp
test
loopne
lret
inc
or
cli
call
jb
add
pop
jecxz
pop
sti
pop
add
xchg
ds
sub
fiaddl
lods
jne
or
push
idivl
mov
xchg
xchg
push
xchg
xor
aam
mov
push
dec
jg
cli
ret
mull
jg
sub
fsubs
lahf
mov
rcrb
stos
fcmovnu
add
outsl
jge
cmpsl
popl
inc
mov
mov
ja
pop
fists
lock
sbb
sub
out
std
lock
ja
in
test
sbb
mov
xor
inc
mov
jae
xchg
out
ror
lahf
xlat
push
mov
nop
pop
mov
cli
repnz
rol
daa
cs
xchg
cli
and
cmp
sub
mov
jecxz
cmpsl
sbb
xchg
stc
clc
sbb
out
int3
add
fisttps
pop
mov
fcmovne
outsl
call
not
scas
aaa
test
out
std
xchg
push
push
sub
sbb
iret
mov
iret
daa
iret
or
xor
jg
test
push
fcomi
testl
pop
xor
insl
cld
mov
dec
inc
pop
push
mov
aas
dec
out
out
stos
mov
idivl
aas
cmp
test
or
fcmovne
negl
cmp
iret
or
into
mov
lahf
mov
cmpsl
mov
ds
pop
fcomip
mov
jns
adc
jp
jmp
cltd
nop
jmp
xor
das
sahf
push
mov
xchg
mov
xchg
jle
daa
stc
inc
jg
sahf
stc
xchg
push
ljmp
imul
fld
dec
push
repnz
pop
out
jno
out
cmc
adc
xlat
fstps
pop
jne
mov
hlt
mov
hlt
sti
sbb
fnstenv
cmpsl
call
repz
outsl
ja
inc
sub
lret
cmc
sbbl
ss
pusha
ror
add
scas
lahf
stc
in
int
in
mov
cli
xor
insb
pop
loop
outsl
cli
decl
test
leave
fcoml
cli
sub
sbb
adc
fadd
inc
or
xchg
sahf
scas
inc
in
ja
push
xchg
pop
cmpsb
push
jg
repz
fidivs
mov
pop
rcrl
mov
pop
xor
test
add
sti
sbb
arpl
add
in
pop
sub
mov
fucomp
adc
out
xchg
dec
movsb
sub
jl
xchg
adc
imul
sbb
jp
cmp
mov
insl
je
ffreep
fsubrp
push
cmp
mov
jecxz
sar
sti
outsl
ret
into
cmp
or
rclb
stos
pop
in
sbb
push
push
negb
stos
in
scas
pop
jns
fucomip
and
jg
jg
dec
outsl
ret
push
xlat
jnp
jne
loopne
inc
fcoms
and
test
pop
out
xchg
cwtl
push
jb
in
add
xchg
hlt
cmp
out
xorl
jecxz
mov
pop
jnp
mov
mov
sar
push
pop
cmpb
mov
clc
or
into
cli
sti
pop
fildl
push
out
mov
ljmp
fnstcw
fimuls
mov
int3
pop
pop
mov
sbb
ror
add
pop
ljmp
std
stc
jmp
test
notl
mov
std
cmp
add
xlat
mov
outsl
add
lcall
lods
std
cltd
sti
in
and
push
lods
xchg
incl
test
mov
out
arpl
add
in
std
adc
mov
mov
aaa
add
mov
inc
jb
scas
sbb
mov
in
mov
decb
pop
jbe
xchg
dec
lahf
test
pop
mov
dec
mov
cld
and
scas
pop
cmp
jp
je
jle
push
sti
jp
shrb
lret
cmpsb
andb
sub
xor
cmpsb
cmpsb
test
xchg
hlt
aas
dec
call
mov
sbb
aas
outsl
mov
inc
inc
mov
or
and
fwait
mov
jmp
inc
outsb
adc
lret
jne
xor
cli
and
xor
outsl
imul
test
outsl
dec
mulb
sarb
jno
cmp
lock
pop
into
sbb
int
out
xchg
mov
out
sarl
mov
pop
aaa
push
in
inc
lcall
xlat
das
inc
sti
fsubrs
inc
decb
rcr
daa
push
in
imul
icebp
sbb
rol
negl
stos
les
in
jmp
cltd
aas
mov
inc
in
mov
fadds
lods
sub
int
test
std
movsl
mov
mov
add
scas
shl
aas
scas
std
mov
sahf
mov
xor
mov
cli
pop
int3
cli
fucomi
cmc
mov
pusha
jns
cli
mov
ficomps
mov
ret
mov
pop
std
std
fucomp
psubb
out
negl
enter
push
or
in
push
jne
mov
ljmp
xchg
xchg
push
xchg
fistl
cmc
cmpsl
mov
mov
std
hlt
jmp
lahf
push
sub
sub
push
stos
nop
mov
lds
psraw
lods
sbb
cmp
js
shrb
stos
out
lods
lcall
push
mov
aad
imul
mov
mov
push
ss
jl
push
lods
js
js
mov
std
mov
sbb
subb
mov
shrb
sahf
pushf
jno
cli
jnp
std
rol
push
mov
outsb
mov
imul
xchg
inc
dec
dec
nop
popl
dec
sub
icebp
mov
in
data16
xchg
out
mov
pop
in
xchg
out
mov
push
inc
addb
push
jb
xchg
mov
into
sti
leave
jae
enter
test
movsb
xchg
in
lcall
decb
lahf
repnz
out
enter
push
std
fwait
mov
mov
cld
mov
ss
lods
sahf
or
sti
idivl
out
fsubrs
lahf
nop
lcall
mov
test
lcall
mov
ficompl
nop
jp
fcos
mov
xchg
mov
call
in
lcall
arpl
adc
pop
sahf
cwtl
mov
std
sti
dec
mov
mov
in
scas
movsb
mov
outsl
jge
jg
out
mov
mov
lods
out
out
mov
fdivp
sub
sahf
add
in
xchg
dec
aad
xchg
pop
jnp
cmpsb
ficompl
cli
call
testl
jb
mov
iret
movsb
sbb
ja
xor
repnz
aas
jmp
cltd
xchg
fucomip
jns
pop
fdivp
mov
mov
xchg
ficoms
cmp
lcall
out
jge
aas
jg
out
jp
adc
in
into
xchg
push
lret
mov
pop
inc
jp
in
xchg
xchg
jb
std
cltd
in
xchg
pushf
outsb
mov
pushf
adc
sbb
test
idivb
ds
xchg
jp
and
cwtl
sub
repnz
imulb
mov
rorl
cmpsb
rorb
cmp
mov
ror
mov
movsl
lock
cwtl
push
int3
and
jb
out
out
out
fs
insb
push
lret
hlt
sbb
xchg
sub
or
idivb
mov
jns
xchg
movsb
negl
pop
std
lea
mov
lret
mov
das
std
mov
mov
mov
mul
mov
ficoml
sti
ds
out
adc
loopne
cmp
lock
fwait
xor
mov
adc
nop
jle
sub
call
out
push
std
in
icebp
xchg
pop
shll
and
mov
ja
sbb
sub
sub
mov
cmp
mov
jb
mov
dec
stc
adc
mov
mov
jl
cltd
repnz
lods
adc
test
lock
xchg
out
cmp
cli
ljmp
ljmp
les
jg
mov
cld
scas
jl
pop
leave
scas
pop
inc
dec
scas
mov
lret
in
mov
lock
mov
out
notl
repnz
stc
push
jo
test
sar
add
sti
rcr
ret
shlb
dec
shlb
xchg
mov
push
adc
ret
iret
mov
into
push
into
dec
into
inc
into
cmp
mov
into
sub
daa
into
sbb
or
pop
into
mov
add
int
int
int
int
int
int
int3
inc
mov
lret
faddl
add
ljmp
lret
gs
add
add
push
lret
add
std
leave
into
leave
mov
leave
push
leave
and
sbb
pop
leave
or
std
enter
add
add
iret
enter
enter
enter
enter
hlt
movl
add
add
pop
movb
sbb
test
mov
lds
lds
lds
add
add
icebp
les
inc
clc
ret
out
fcmovnb
int
mov
ret
cmp
push
ret
insl
ret
add
pusha
ret
sub
adc
sti
shr
popf
rorl
iret
rcrb
imul
daa
add
shlb
sbb
sbb
add
nop
sahf
xor
mov
lods
les
les
rol
mov
ret
cmp
add
out
add
add
incl
das
ret
add
rcl
mov
dec
shr
add
dec
sarl
cmp
push
roll
add
mov
pop
jmp
add
iret
fwait
iret
jle
popa
iret
sub
fldl
pop
adc
and
adc
xchg
int3
push
int3
cs
and
aam
inc
jmp
lret
mov
lret
pop
lret
icebp
movb
out
or
push
lret
call
leave
or
add
fs
inc
leave
inc
leave
adc
cmc
enter
enter
add
enter
enter
enter
enter
enter
enter
enter
enter
add
add
in
leave
mov
mov
push
aas
daa
and
sbb
add
cmc
out
add
add
call
into
mov
mov
push
push
xor
cs
mov
jne
push
les
and
in
pop
inc
loopne
aad
ret
test
xor
sub
daa
ret
sbb
adc
add
pop
add
ret
lret
ret
sbb
shl
ljmp
rol
add
add
pop
rorl
shrl
add
jmp
rcl
mov
scas
shrb
aaa
rorb
jle
cmc
loopne
das
lods
iret
hlt
iret
out
add
add
iret
ret
into
clc
int
int
int
int
int
int
int
int3
ret
int3
lahf
int3
cwtl
int3
outsl
int3
push
add
add
int3
aaa
int3
sbb
add
cli
lret
dec
lret
xor
and
cli
fcom
lret
jb
cmp
daa
add
add
lret
or
enter
enter
in
or
insl
dec
add
and
aaa
xor
add
push
loope
fadd
pop
push
dec
movb
es
sbb
push
mov
add
cld
lds
lds
dec
lds
lds
lds
lds
lds
add
add
lret
les
les
repz
push
ret
dec
ret
rol
xor
cs
outsl
shll
pop
add
adc
or
fwait
sarb
xor
jmp
add
add
jmp
iret
dec
iret
inc
iret
sub
iret
pop
iret
add
nop
into
jge
jb
imul
into
push
into
inc
pushf
jle
inc
xchg
cs
bswap
in
sub
sbb
adc
or
sti
lret
test
cmpb
shlb
lret
dec
lret
fistpll
add
add
ljmp
leave
sahf
leave
cltd
leave
xchg
or
leave
sub
and
sbb
adc
leave
add
ds
sti
shrb
add
add
enter
enter
out
dec
xor
jno
add
mov
outsb
lcall
push
jg
in
ret
mov
add
ret
adc
or
fcmovnb
leave
sar
shll
rclb
add
arpl
int
jg
and
or
mov
add
iret
mov
xchg
iret
mov
mov
lods
int3
insl
int3
push
int3
inc
add
int3
sbb
clc
lret
sbb
add
cwtl
lret
iret
leave
mov
or
add
movsb
leave
popf
leave
xchg
dec
jge
imul
and
add
push
add
insb
pushf
loopne
or
dec
mov
xchg
jle
je
push
or
add
pop
enter
enter
enter
inc
inc
stc
repnz
jmp
scas
sldt
fadd
rol
ret
mov
stos
movsb
fmuls
jae
fs
pop
dec
movl
sbb
or
and
and
lock
fsubl
mov
cmpsl
lahf
xchg
movb
and
and
push
push
add
cs
and
or
add
ret
add
lds
mov
lds
lds
push
enter
cmc
out
out
jle
insb
les
pop
lock
les
add
les
cmp
xor
sub
and
push
les
les
les
enter
pusha
stos
ret
pushf
ret
xchg
ret
mov
add
ret
push
ret
inc
ret
sub
or
add
les
fadd
leave
ret
mov
scas
mov
ret
lcall
ret
jne
outsl
ret
pop
ret
dec
jmp
cs
dec
ret
cmp
xor
ret
hlt
shr
loop
fsts
add
rcll
jbe
roll
xor
and
cmp
rcrb
jns
pop
add
jo
shlb
iret
xchg
subb
dec
into
xor
add
repnz
push
into
test
int
int
int
int3
stc
int3
repnz
mov
jnp
jne
imul
lret
mov
sahf
lret
or
lret
popa
lret
test
rcrb
pop
ss
pushf
leave
mov
mov
leave
or
fistpl
mov
mov
call
enter
enter
enter
cmc
fs
enter
push
ja
xchg
add
das
and
idivl
push
nop
je
sub
shufps
fadd
xchg
lds
lds
jns
jae
insl
xchg
pop
nop
xchg
jo
sbbb
or
add
inc
scas
jle
out
loope
les
out
cmp
ljmp
jg,pt
add
icebp
ud0
pop
mov
orl
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
sahf
xor
xchg
lock
push
loope
cwtl
push
mov
std
lahf
lcall
fcomi
mov
pop
movsb
fisttps
ror
push
cld
xchg
cmp
iret
cld
pop
decl
ds
enter
mov
dec
pop
pop
adc
ljmp
leave
daa
rorb
fsub
jl
ds
lock
pushf
dec
std
and
loope
pop
cmp
mov
or
cmp
popf
dec
shrb
adc
mov
mov
pop
push
mov
jl
cld
jg
shrb
ror
lcall
jle
jge
pop
cld
push
fistps
gs
mov
mov
inc
clc
xchg
lret
mov
mov
and
in
into
loopne
mov
mov
mov
inc
cmc
lahf
mov
arpl
out
xchg
dec
push
jns
cmc
mov
sbb
sahf
xchg
in
or
test
mov
lcall
mov
add
test
mov
in
xlat
add
lcall
mov
std
push
jl
push
dec
jg
push
stos
lahf
stc
cmpsb
inc
pushl
adc
mov
repz
repz
inc
sti
das
mov
jmp
div
fucom
std
xchg
xor
mov
adc
mov
scas
std
sub
std
adc
cmpsl
stc
das
push
ja
repz
push
inc
jg
mov
lods
mov
out
push
push
xor
je
notl
mov
xlat
mov
xchg
ljmp
jmp
repnz
xchg
leave
xchg
call
add
adc
dec
jmp
adc
dec
xor
std
fwait
addr16
ret
mov
push
dec
push
adc
jecxz
pop
dec
jne
jg
fistpll
dec
dec
mov
mov
pop
cmpsl
or
dec
push
sub
push
mov
add
int
orb
lock
or
paddusb
jne
dec
mov
cmp
adc
icebp
adc
int3
and
inc
outsb
jns
icebp
cmp
popf
inc
daa
notb
stc
subb
mov
loop
mov
shll
adc
pop
add
fdivrl
xchg
mov
cmp
pmuludq
sar
or
xchg
repz
jmp
pop
cli
mov
pop
xchg
hlt
jmp
out
rcll
jmp
dec
cmp
cld
sbb
dec
jnp
xchg
mov
jle
sub
adc
adc
popf
jnp
xchg
cmp
mov
cmp
and
mov
fistps
mull
push
loopne
cld
sbb
jg
push
mov
mov
mov
xchg
sub
je
rclb
loopne
mov
outsb
mov
gs
xchg
add
decb
xorb
je
pop
fistps
cwtl
pop
ds
std
mov
jmp
sub
add
les
adc
jl
mov
or
pop
jmp
icebp
jmp
mov
lds
test
xchg
movsb
cwtl
movsl
sti
es
in
dec
adc
ja
jecxz
aaa
jecxz
int3
jb
dec
test
std
pusha
xchg
arpl
jb
scas
mov
lgs
mov
mov
negb
lahf
popa
jle
xchg
ja
push
es
jl
ret
lret
fiadds
out
jne
in
add
xchg
stos
int
test
jg
repnz
into
into
mov
lds
pop
pop
or
ljmp
sahf
mov
mov
in
lods
cmpsb
cmc
jmp
std
icebp
call
cmc
iret
out
mov
sbb
and
mov
scas
popa
sbb
jecxz
lods
lahf
ljmp
jge
insl
mov
fcomp
stos
clc
in
scas
jmp
push
jne
jbe
clc
push
icebp
pop
aam
repnz
je
lods
dec
ja
jge
mov
push
mov
inc
insl
cld
mov
scas
mov
mov
mov
mov
out
mov
rol
in
shll
lahf
cmp
push
subl
decl
cli
mov
jmp
fisubl
ffreep
pop
cli
mov
mov
and
inc
cld
stos
inc
stos
shrl
jp
sbb
xchg
pushf
das
ds
xchg
stc
dec
sub
sti
fmull
jmp
ljmp
sti
cwtl
fisttpll
add
and
inc
inc
cld
popf
xchg
push
inc
inc
repnz
mov
gs
fildl
push
add
idivl
dec
stc
jecxz
lea
dec
add
dec
add
jge
jb
repnz
dec
shl
push
std
xchg
push
cmpsl
and
add
movsb
dec
test
fcoml
ds
out
push
push
fs
test
push
stc
push
add
iret
fcompl
imull
lods
sub
imul
lods
and
shr
out
mov
and
and
jp
icebp
xchg
movsb
xlat
xchg
in
loopne
loopne
mov
fistpll
call
inc
imull
inc
jecxz
sub
fistpl
mov
push
test
cmp
pop
cmp
test
repz
lods
cmp
mov
jns
out
xor
mov
xor
push
lock
gs
enter
shll
pushf
inc
xchg
lods
cmp
inc
xchg
call
enter
xchg
das
rcl
pop
mov
aaa
mov
add
mov
aam
lcall
daa
lock
mov
lcall
fadds
jb
jbe
dec
pop
rcll
fsubrl
out
or
fstp
jb
jns
dec
jge
pop
into
shr
cmp
addr16
cli
imul
cmc
and
aas
clc
sub
jb
scas
cmc
xchg
mov
pop
aad
jmp
in
lds
inc
cmc
xchg
in
cmc
sahf
pop
inc
loopne
inc
sub
jg
jge
out
in
stos
or
fisttps
jmp
jge
xor
sbb
je
out
mov
repnz
or
clc
xchg
incl
shrb
inc
jge
outsb
xchg
stc
daa
daa
jne
stos
pop
data16
sub
mov
call
icebp
fnstsw
sub
lods
jb
arpl
cmp
mov
jbe
loopnew
into
jge
test
mov
stos
inc
xchg
loope
mulb
jmp
xor
fdivrp
ljmp
push
push
test
sti
lret
iret
push
push
repz
ljmp
scas
sti
jo
mov
push
test
jbe
pushf
cmp
scas
sbb
aas
inc
testb
jbe
scas
cli
and
add
out
or
je
cmpsb
mov
xor
cmc
sti
repz
int
cld
jmp
cld
jae
out
mov
xlat
fimull
aas
out
inc
pop
adc
sbb
fdivrp
loope
pop
cmpsl
aad
in
fistpll
xchg
jg
xchg
stos
repz
aad
cmpsb
scas
repz
pop
inc
dec
inc
in
sti
mov
push
iret
in
popf
aas
sbb
sbb
xchg
aas
xor
sti
fdivs
gs
fcomps
ds
mov
push
jnp
lods
mov
cmpsl
in
popf
out
ret
lahf
out
or
mov
outsb
in
jne
repz
loop
pop
neg
jmp
or
out
std
mov
hlt
mov
into
ja
add
iret
int3
rolb
push
test
call
std
repnz
lea
adc
into
gs
aam
mov
cmp
std
stos
xchg
inc
in
stc
push
out
mov
mov
out
fisubrl
popf
ljmp
call
cmp
out
ja
pop
stos
pushl
out
ds
mov
push
mov
out
out
ja
mov
lret
std
cmpsl
scas
fdivs
out
mov
mov
sub
fildll
sar
adc
int3
push
in
pop
dec
jmp
cld
mov
daa
sarb
inc
cld
les
js
fdiv
sub
lret
clc
test
sub
outsl
jns,pt
cld
ss
jnp
add
test
lret
mov
aad
ret
inc
aaa
mov
lret
mov
pop
movsb
adc
repz
cld
xchg
hlt
into
clc
std
xor
push
jbe
pop
mov
repnz
jl
aad
icebp
stc
or
lret
or
pop
stc
repnz
ljmp
pop
dec
shlb
out
lock
jle
test
daa
lcall
fdivl
pop
xchg
mov
mov
mov
mov
js
adc
int3
mov
mov
cmc
in
popf
xor
or
jns
push
sahf
xchg
mov
pusha
jb
push
in
test
cmp
mov
xchg
popfw
mov
jmp
nop
lods
iret
popf
dec
mov
fmul
je
inc
repnz
inc
repnz
lds
movsl
mov
jp
ljmp
aad
jmp
sub
inc
out
xchg
dec
subb
in
jg
mov
call
int
mov
cmp
std
scas
mov
mov
fsubs
cli
lret
lods
divb
mov
cli
mov
adc
test
mov
nop
les
hlt
movsb
sar
fidivrl
ljmp
sbb
pop
cwtl
mov
sbb
movsb
adc
repnz
sbb
inc
adc
jo
cld
lret
popf
dec
sbb
mov
push
xchg
lcall
push
dec
call
pop
sahf
fmull
xchg
cwtl
mov
xchg
xchg
pushf
orb
inc
inc
rorb
xchg
insb
loopne
stos
xlat
ljmp
dec
ljmp
ljmp
mov
into
es
iret
cli
inc
es
jg
and
hlt
adc
int3
xchg
push
inc
shrb
mov
mov
cwtl
out
popl
decl
mov
in
xlat
push
je
dec
movsb
int
cmc
xlat
mov
stos
sar
fwait
lock
clc
lahf
js
daa
hlt
xchg
fdivs
daa
xchg
jo
xchg
push
dec
scas
fmuls
mov
nop
xchg
fwait
loopne
lock
std
daa
jnp
fneni(8087
lret
mov
mov
xchg
jbe
xchg
adc
pushf
mov
inc
add
push
xchg
test
lcall
jnp
xor
dec
sti
jmp
cld
aas
into
xor
ljmp
int
int
ja
add
cmp
or
fmul
mov
int3
lret
mov
push
icebp
lret
xchg
lret
push
leave
pop
add
cmpsb
cmp
dec
leave
enter
aad
sbb
push
enter
enter
mov
pop
jp
gs
sub
adc
cmp
add
lds
mov
ret
adc
xchg
pop
out
ret
iret
in
mov
ja
ds
ret
div
add
shll
rcrl
rorl
push
dec
stos
mov
push
addr16
test
mov
out
xor
lcall
adc
dec
fxtract
out
lock
xor
jmp
fidivl
mov
cltd
lock
enter
stc
outsl
decl
mov
inc
insl
adc
adc
adc
in
aas
jg
call
ficomps
std
out
outsl
push
xchg
in
aas
jle
mov
jecxz
mov
jmp
out
cld
and
idiv
xor
shl
mov
mov
xchg
out
icebp
out
lcall
lods
stc
fisubrl
or
push
les
loope
dec
mov
fs
or
iret
daa
cmp
iret
pop
mov
out
fwait
incl
inc
rcrb
bnd
cmp
dec
lock
push
sbb
stc
cltd
loop
pop
jg
jnp
mov
ss
dec
out
fucomp
negl
sbb
rcrl
push
loope
std
mov
fs
out
pushl
iret
sub
fmul
jmp
cmp
cld
mov
jecxz
mov
insb
ljmp
mov
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
