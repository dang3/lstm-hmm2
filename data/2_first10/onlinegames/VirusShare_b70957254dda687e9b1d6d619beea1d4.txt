int3
pusha
add
add
add
cmp
add
mov
add
or
add
add
add
call
popa
add
imul
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
add
jo
add
test
add
add
dec
pusha
add
pusha
pusha
add
jo
add
test
add
add
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
pusha
add
hlt
pusha
add
add
add
or
add
xor
add
pop
sub
or
pop
sub
push
add
daa
push
add
sub
adc
adc
sbb
pop
or
ud2
sbb
inc
sub
or
pop
push
pop
sub
or
adc
or
ud2
sbb
inc
sub
pop
or
sub
or
add
or
daa
or
push
sbb
push
cmp
add
daa
or
push
add
pop
add
push
sbb
sub
adc
push
or
or
adc
adc
adc
or
add
sbb
or
adc
sub
sub
or
or
adc
sbb
daa
adc
sbb
sub
or
or
or
or
pop
sbb
pop
add
adc
sbb
sub
or
or
or
pop
sbb
pop
add
sub
add
or
add
sbb
push
sbb
or
or
or
sub
push
add
or
push
add
daa
or
or
or
sub
push
add
add
or
aas
sub
or
and
sbb
xor
and
and
or
add
push
sub
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
or
pop
jno
or
sbb
add
or
sbb
push
pop
push
sub
xor
sbb
add
push
adc
add
movlps
add
sbb
add
or
or
adc
dec
push
add
adc
add
add
sbb
add
cs
push
or
sbb
or
sub
sub
add
add
adc
adc
adc
adc
adc
sub
sbb
aas
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
es
push
cmc
add
pop
push
or
add
pop
add
add
sbb
add
add
outsb
push
add
or
push
add
daa
or
or
or
or
or
adc
sbb
sub
add
es
adc
or
add
push
pop
es
unpckhps
or
pop
sbb
or
daa
or
push
add
sbb
and
add
sbb
pop
add
dec
and
add
sub
and
adc
add
add
add
add
add
and
or
adc
or
or
daa
add
add
add
add
or
or
adc
add
add
add
or
add
add
push
sbb
add
adc
or
add
adc
sub
adc
or
add
adc
add
sbb
push
add
adc
or
add
add
sbb
add
pop
or
push
or
or
clts
pop
or
add
add
add
add
add
add
add
or
or
or
pop
push
adc
add
push
or
or
add
inc
push
add
push
sbb
adc
or
sbb
pop
sub
and
inc
add
or
adc
add
add
or
add
add
add
push
or
pop
add
or
add
cmp
add
add
push
adc
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
or
add
push
pop
push
pop
push
sbb
add
and
or
daa
add
add
pop
add
add
or
add
add
add
add
adc
or
sub
add
add
add
add
sbb
or
add
add
add
add
sbb
adc
add
sbb
adc
push
add
adc
pop
push
das
or
pop
push
add
add
or
add
pop
or
add
sbb
adc
or
add
sbb
add
push
pop
add
adc
add
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
cmp
cmp
or
add
adc
pop
or
add
add
or
adc
add
push
pop
push
add
add
add
add
add
add
add
add
add
add
adc
add
add
sbb
add
add
add
adc
add
or
add
adc
or
add
add
sbb
mov
add
incb
and
ljmp
xchg
jae
add
add
add
add
imul
adc
add
add
call
add
push
push
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
add
dec
inc
add
add
jg
aad
xchg
cld
inc
pop
add
xlat
bound
loop
mov
stc
in
incl
pop
dec
dec
aaa
sbb
jge
adc
les
cmp
inc
shl
mov
fadd
sub
add
icebp
aam
in
add
inc
mov
xlat
sbb
inc
and
out
lock
xchg
les
inc
aas
inc
or
std
pop
sub
shld
push
out
subl
rolb
push
test
lods
adc
xchg
inc
call
rolb
test
inc
enter
fwait
xchg
aam
inc
xchg
add
rclb
mov
pop
repnz
mov
adc
inc
movsl
sbb
xchg
cltd
sbb
pop
xchg
imul
inc
mov
inc
inc
imul
fs
xor
xor
jae
sbb
test
inc
sub
mov
clc
sub
inc
pop
loopne
daa
inc
leave
cmp
dec
mov
outsb
mov
dec
dec
push
or
xor
mov
inc
fisubl
and
mov
popl
adc
shll
ret
cmp
or
icebp
loopne
fnstenv
test
jb
dec
push
dec
imul
dec
movsb
fs
shlb
adc
fdivrs
loopne
xor
pop
daa
lea
test
inc
cld
sbb
push
stos
mov
in
loopne
adc
test
loope
popa
out
outsl
mov
test
xchg
lahf
roll
popa
dec
inc
add
jl
and
or
shll
out
into
mov
dec
js
aam
aaa
push
add
imul
push
pop
aaa
inc
loope
jo
js
mov
or
gs
mov
pusha
lods
adc
push
mov
ret
adc
rorb
and
or
ds
pop
in
xchg
and
sub
mov
stos
unpcklps
hlt
jecxz
jnp
cld
adc
dec
sahf
dec
cmpsb
sbb
test
mov
js
push
lahf
or
fmul
and
push
or
add
adc
mov
xchg
xchg
inc
add
pop
shlb
loopne
or
pop
loopne
adc
mov
dec
fsubl
xor
xor
mov
addr16
fdivp
subl
roll
in
add
je
pop
sub
lods
test
xchg
add
dec
push
js
insl
mov
and
xor
mov
ret
or
jo
nop
daa
iret
add
imul
dec
fwait
mov
nop
subl
push
mov
sub
jns
lods
icebp
js
rol
fbld
shlb
scas
pop
dec
add
inc
sub
lds
cmpsb
loop
jno
cwtl
movsl
add
jnp
nop
aas
lea
dec
sbb
pop
arpl
bound
nop
pop
push
and
sub
pop
lcall
dec
add
xor
pop
inc
pop
test
stos
es
test
push
mov
push
cltd
sub
pusha
into
sub
enter
mov
cli
xchg
pop
loop
mov
mov
jg
xchg
and
cs
pop
lret
lds
add
jno
add
dec
and
scas
sbb
sub
outsl
lret
jb
push
fidivs
adc
fadd
leave
add
lret
out
mov
lret
cmp
negl
fnsetpm(287
and
push
popf
and
push
push
pop
jo
push
jb
out
lret
rcrb
inc
test
mov
pop
int3
cwtl
ret
inc
scas
or
push
testl
push
sub
jg
sub
xchg
push
inc
lcall
stc
shr
mov
dec
shrb
mov
push
sti
cltd
sbb
jo
arpl
push
mov
in
test
mov
inc
rol
xchg
test
ret
sbb
lret
and
dec
add
xchg
adc
addr16
push
nop
push
add
hlt
out
in
xor
xor
sub
les
test
push
xchg
inc
jns
push
aad
xor
test
xchg
sub
inc
popf
push
pop
fs
mov
add
bound
push
mov
adc
xor
push
ret
in
lods
or
in
sbb
cmpl
sbb
cmp
or
int
cmpsb
loop
cld
push
cmp
sbb
rcl
sub
push
and
cmp
out
sub
shr
xchg
push
pop
jno
stos
adc
mov
mov
inc
sbb
sti
test
xchg
mov
insl
xor
jmp
or
test
mov
insl
enter
or
and
dec
cmc
xor
cmp
shll
jo
in
inc
fdivs
sysenter
pop
test
mov
loop
out
mov
mov
sub
jmp
lret
adc
sub
daa
mov
hlt
jbe
enter
rolb
shll
jb
lret
push
hlt
push
and
add
loopne
stos
mov
js
or
adc
xor
dec
addr16
insl
cmp
mov
pop
push
xchg
in
push
dec
movsb
mov
lret
pop
sub
xchg
iret
jl
cmp
repnz
lret
sbb
jp,pn
ljmp
rolb
push
mov
push
and
push
and
jne
fmull
sub
push
xor
cmpsb
jmp
pop
lock
adc
pop
or
bound
push
gs
fwait
bound
jp
fimull
and
subb
sbb
test
add
sub
imul
mov
test
lods
iret
fwait
scas
lret
repz
subl
ret
cmp
push
fwait
mov
inc
push
bound
in
mov
sub
inc
inc
imul
sbb
sub
sub
adc
fcom
jns
jmp
jp
inc
ficomps
test
jg
and
mov
in
adc
pop
push
xchg
push
stos
mov
sub
std
gs
mov
bound
ret
ror
add
mov
adc
push
xor
mov
mov
mov
jae
mov
ret
adc
and
adc
lds
push
nop
movsl
dec
adc
or
add
inc
mov
adc
pop
neg
test
imul
cld
lea
imul
jmp
add
ss
lds
xchg
pushf
cmp
cli
sahf
subl
popa
inc
aad
push
pop
jno
sbb
mov
mov
test
scas
mov
mov
loop
lods
adc
push
sbb
mull
xlat
or
rcrb
pushf
xchg
adc
adc
mov
or
pusha
or
clc
adc
dec
scas
cmp
int3
out
ret
ja
cmc
xchg
adc
push
mov
je
addr16
xlat
shlb
and
sbb
je
push
mov
pushf
sub
dec
xchg
popf
cmpsl
adcb
ret
cmpb
or
inc
sahf
aas
add
out
mov
dec
inc
sarl
dec
dec
cmp
adc
jl
cmp
jmp
insl
lods
xor
sub
mov
and
push
sub
call
stos
dec
adc
fistpl
sbb
mov
adc
inc
push
lds
dec
sbb
xor
cmp
push
xchg
mov
stc
lret
cmp
xchg
aad
test
mov
push
xlat
cmp
mov
sar
int3
jecxz
inc
scas
mov
mov
or
push
xchg
mov
and
jne
ss
xchg
push
pop
adc
jo
out
js
inc
adc
xchg
inc
aas
pop
xor
sub
and
data16
loope
sbb
loop
mov
lcall
adc
scas
or
scas
mov
mov
pop
xchg
inc
cmp
dec
mov
jl
roll
das
ret
fsubrl
jno
cwtl
sub
mov
push
push
in
lret
mov
jno
inc
mov
and
push
dec
lret
cltd
pop
pop
cmpsl
mov
lcall
pop
push
mov
ret
mov
mov
lcall
mov
outsl
ss
dec
faddl
enter
mov
sbb
pop
cs
or
lahf
loop
jecxz
add
push
mov
dec
pusha
jge
lock
push
dec
sbb
fs
add
repnz
ret
pop
jne
inc
js
push
mov
fnstenv
stc
mov
lahf
test
aam
cld
into
jae
dec
inc
add
jns
mov
leave
clc
daa
sbb
sub
mov
cmp
mov
adc
push
or
pop
notb
adc
shr
jecxz
add
mov
lea
push
or
rcrl
inc
push
jbe
pop
fdivl
out
push
mov
out
mov
push
pushl
in
push
jmp
jmp
inc
mov
pop
test
mov
add
add
inc
and
mov
loop
ljmp
xchg
jg
ret
shll
lds
lret
jo
mov
sbb
int3
sbb
cmpsl
adc
push
aas
inc
pushf
push
push
out
push
xchg
xchg
adc
pop
xor
xor
pop
cmc
ret
sub
jae
fiaddl
fisubs
movb
cli
mov
jp
into
lea
movsb
xchg
mov
jg
mov
xchg
mov
jmp
cmp
fisubrs
cmpsb
mov
mov
aad
mov
mov
mov
hlt
pop
jne
sbb
pop
cmp
and
jecxz
sbb
into
popf
push
mov
les
mov
mov
outsb
and
xor
gs
faddl
fmuls
add
div
shlb
jge
call
dec
ficoms
or
mov
popa
xchg
popa
rcrl
scas
adcb
mov
flds
xor
jbe
dec
hlt
loopne
nop
loope
test
daa
sarl
out
sbb
or
jge
imul
shlb
pop
mov
mov
jge
in
es
int3
inc
lahf
mov
mov
cmp
add
jmp
loop,pt
and
xchg
daa
mov
test
mov
add
or
cltd
mov
ja
dec
dec
sarb
sbb
mov
adc
jb
pop
repz
nop
cmp
lahf
rcll
inc
add
jmp
sti
mov
jae
daa
int3
dec
scas
xor
add
dec
hlt
popf
mov
add
xor
and
pop
pop
movsb
or
mov
call
lahf
mov
xlat
inc
jge
out
adc
into
inc
cmp
mov
lahf
mov
sub
test
adc
add
dec
hlt
xchg
adc
shlb
add
addr16
xor
fucomp
xor
test
dec
out
mov
adc
hlt
xchg
cmc
or
add
adc
sarb
pushf
jae
les
dec
scas
mov
add
daa
mov
jne
dec
hlt
cmp
or
pop
movsb
jge
dec
popf
pop
and
or
jge
jmp
adc
lahf
mov
inc
sbb
lock
into
sub
mov
sub
xchg
dec
sub
jle
in
mov
mov
rcrb
cld
jp
adc
push
stc
test
mov
sti
add
add
popf
mov
add
loop
xlat
mov
xchg
inc
cli
clc
pop
fs
and
or
add
or
cs
aas
test
inc
add
jmp
nop
popa
in
das
mov
sub
mov
add
nop
mov
scas
cmp
mov
add
adc
pop
or
dec
xchg
ss
cmc
testl
bswap
sub
cmpsl
mov
mov
inc
cmp
mov
daa
rcrb
iret
pop
add
sub
das
mov
pop
xor
cmp
inc
hlt
popf
push
add
push
and
push
test
sub
in
add
js
dec
sub
sub
das
mov
pop
xor
push
add
push
mov
and
and
adc
and
dec
inc
jge
mov
mov
js
dec
inc
jge
cli
into
add
lahf
mov
les
push
xor
daa
adc
nop
stc
inc
add
mov
sub
xrelease
pop
inc
lahf
push
lahf
clc
push
repz
out
add
cmpsl
mov
int3
cmpsl
gs
ds
mov
add
cmc
mov
sub
adc
ror
sub
pop
shll
daa
adc
nop
stc
push
aam
mov
sub
and
leave
test
popl
pop
xlat
in
cmpb
mov
call
mov
daa
mov
sti
sub
das
repz
test
inc
fistpll
notb
pop
out
push
lahf
pop
pand
lock
mov
mov
xchg
pop
xor
sbb
pcmpgtb
or
mov
cmp
sarl
push
enter
pop
roll
nop
stc
mov
in
cmpsl
add
adc
jge
dec
add
cltd
dec
dec
lock
int3
cli
movsb
lahf
add
cli
outsb
add
xchg
cli
cli
cwtl
fadds
adc
xchg
inc
xchg
aam
std
scas
cmp
stc
sub
das
mov
lahf
jns
repz
add
push
push
lahf
hlt
mov
add
sub
xchg
ds
dec
aas
add
rorb
or
enter
pop
shll
daa
std
adc
nop
stc
movsb
add
mov
sub
repz
add
dec
dec
jge
cli
lret
lahf
add
jle
xchg
cli
cli
insb
add
add
and
popf
pop
xor
add
cmc
sub
das
mov
test
and
mov
pop
inc
pop
push
lahf
repnz
repz
out
add
cmpsl
out
int3
daa
add
jge
jge
dec
insb
add
insb
push
jle
ror
push
pop
rcll
cmpsl
cld
adc
nop
stc
aam
das
mov
sub
and
test
jns
repnz
add
xchg
push
dec
pop
sbb
mov
fucomi
clc
pop
xchg
push
mov
cmp
rcrl
out
xchg
push
shll
inc
cld
adc
pop
stc
in
daa
mov
sub
das
repz
insl
and
js
movsb
dec
jge
dec
lret
dec
add
and
sahf
cli
test
add
cmc
or
cmp
fs
mov
sub
jle
sbb
jl
pop
movsb
jge
dec
add
cltd
dec
push
lock
lret
lahf
add
xor
cltd
cmc
jmp
ds
inc
hlt
fldl
jmp
ds
cmc
hlt
xor
mov
stos
dec
negl
and
push
add
push
push
lahf
out
ds
out
add
jge
or
dec
push
jge
xchg
insb
add
ljmp
xchg
adcb
push
aad
sti
adc
nop
stc
and
das
mov
sub
repz
add
fists
push
fildl
shll
lahf
add
xor
xchg
pop
leave
ds
cmc
hlt
flds
xor
add
cmc
leave
call
or
mov
xchg
and
enter
jmp
repnz
out
add
cmpsl
out
int3
daa
add
jge
jge
dec
into
add
cli
stos
cli
fs
flds
xor
daa
sti
adc
nop
stc
push
aad
mov
sub
and
test
jns
in
push
add
push
push
mov
fldenv
stos
xchg
ds
mov
pop
loopne
sbb
and
pop
inc
fldenv
push
fbld
stos
mov
sub
das
repz
stos
dec
inc
fistpll
ljmp
lahf
pop
das
fildl
lock
scas
cli
push
lahf
xchg
pop
xor
pop
cmc
test
ds
mov
mov
push
enter
pop
roll
nop
stc
mov
aad
add
adc
jge
dec
add
cltd
dec
pop
lock
int3
cli
inc
lahf
add
jge
mov
cli
outsb
add
lock
flds
adc
xchg
inc
xchg
aad
cli
scas
cmp
stc
sub
das
mov
lahf
jns
repz
add
push
push
lahf
call
cmpsl
add
push
or
cmc
mov
add
rorb
or
enter
pop
shll
daa
cli
adc
nop
stc
movsb
add
mov
sub
repz
add
dec
pop
jge
cli
lret
lahf
add
jl
mov
cli
insb
add
lahf
add
and
popf
pop
xor
add
cmc
imul
dec
repz
xrelease
pop
inc
pop
push
lahf
out
repz
out
add
cmpsl
out
int3
daa
add
jge
jl
dec
mov
fs
mov
mov
repz
or
jge
jl
dec
add
fs
rorb
or
repz
lahf
out
fildl
xchg
mov
pop
cmp
mov
mov
shrl
aaa
fs
in
push
lahf
in
inc
xchg
out
xchg
pop
shll
daa
stc
adc
nop
stc
in
das
mov
sub
and
jmp
insl
dec
add
dec
pop
jge
cli
lret
lahf
add
and
test
xor
adc
pop
stc
hlt
aad
mov
sub
das
repz
add
movsb
pusha
jge
dec
lret
dec
add
and
sar
lahf
cltd
pop
xor
xor
clc
loopne,pt
hlt
sub
add
mov
xor
sub
loop
add
push
pop
lahf
mov
repz
lds
mov
adc
orl
adc
add
ror
adc
push
jl
push
enter
pop
shll
cmpsl
clc
iret
cmp
stc
sub
das
mov
fistpll
repz
add
rcrl
loop
fildl
lock
pop
cli
adc
add
xor
xchg
daa
or
pop
inc
lahf
insl
lahf
loopne
add
rcrl
mov
add
ds
mov
add
cmc
or
sub
fs
rorb
addr16
enter
pop
stc
inc
daa
mov
sub
das
repz
insl
and
js
movsb
gs
dec
lret
dec
add
and
lret
lahf
cltd
pop
xor
xchg
cmc
or
cmp
fs
mov
xor
adc
enter
jmp
add
shrl
out
sub
cmp
sub
cmpsb
xor
sarl
push
cli
insb
cli
hlt
sahf
add
xor
popf
daa
or
je
rol
sarl
cmpsl
mov
adc
cmpl
addr16
cli
int3
add
sahf
add
xor
popf
pop
aam
je
sahf
adc
pop
jo
mov
adc
add
cmc
add
push
imul
jl
lret
jecxz
call
mov
add
test
pop
push
shrl
xor
mov
pop
hlt
cmp
fbstp
out
adc
adc
insb
add
dec
ja
pop
xchg
ret
std
xchg
stos
test
push
lret
std
inc
in
movsl
add
jl
shll
cmc
jmp
mov
out
enter
mov
sarl
xchg
dec
jp
lock
test
ret
jmp
fs
in
add
mov
mov
rdtsc
shlb
int3
jge
or
jmp
ljmp
push
push
inc
sub
jg
jle
adc
push
ja
xchg
adc
lods
daa
adc
stos
ljmp
xchg
fsubl
je
rcrb
cmp
adc
xor
mov
xor
test
xchg
lcall
mov
sub
or
mov
push
pop
popa
sub
mov
insl
pop
adc
push
push
mov
gs
aam
loope
sbb
aad
add
rol
rcll
adc
loopne
inc
dec
mov
sub
jmp
inc
adc
fs
adc
and
push
and
sbb
enter
push
push
inc
mov
mov
addl
lock
insb
mov
inc
orb
lds
xor
pop
shrb
mov
add
je
out
in
sub
add
jle
lock
mov
fildl
adc
test
xor
inc
js
mov
pop
mov
push
test
subl
jae
or
loopne,pt
mov
push
mov
divps
sub
or
enter
add
mov
in
xchg
bound
inc
orl
bound
push
dec
mov
aam
push
rolb
xchg
mov
clc
and
gs
cmp
dec
mov
sub
rcll
ljmp
mov
das
adc
or
loopne
subb
leave
or
jae
jbe
inc
subl
aam
rclb
add
push
into
pop
pop
inc
dec
dec
jmp
and
pop
movsl
jns
decb
and
xor
xor
inc
lds
jecxz
sub
lods
test
sbb
cmp
mov
sbb
xchg
testl
out
and
bound
jp
dec
daa
shl
sbbl
outsl
test
into
mov
in
dec
lea
jp
pop
sti
lods
push
ret
stos
je
push
adc
imul
mov
dec
int3
adc
add
test
inc
sbb
mov
pop
push
lret
add
and
outsl
pop
sti
shlb
jns
ret
test
sbb
xchg
sub
sub
push
dec
or
sub
scas
adc
roll
pop
int3
add
icebp
xor
mov
and
inc
lds
popa
mov
es
jne
test
cmp
xchg
es
pop
and
out
ds
or
inc
xchg
add
mov
ljmp
mov
adc
adc
or
inc
xor
pusha
jle
cmc
xchg
xor
or
mov
shlb
dec
orl
push
sti
and
pop
das
dec
dec
xlat
out
lods
pop
pushf
lds
jl
adc
repnz
ret
jmp
test
jg
cmp
rcrl
push
xchg
and
bnd
pop
and
xlat
aam
cs
or
dec
pop
in
adc
ds
xorl
test
jl
cmp
xor
and
dec
fldl
mov
sub
lret
pop
sub
repnz
xchg
adc
push
jae
adc
fmuls
sub
adc
sahf
add
adc
sbb
jg
leave
mov
rcr
loop
clc
test
dec
sar
daa
xchg
sbb
mov
int
push
pop
orl
iret
stos
push
jl
mov
jg
sub
dec
cmp
xor
xchg
push
push
and
int3
pop
add
addl
addr16
adc
adc
push
sbb
pushf
out
xchg
mov
out
mov
lods
in
push
cltd
pop
std
sub
scas
pop
add
pop
call
xchg
sub
cltd
sbb
rcrb
or
xorl
sbb
aad
xor
scas
int3
arpl
in
int3
push
xchg
jg
push
arpl
add
dec
dec
mov
fldenv
pop
ret
dec
ret
sbb
pusha
mov
sbb
or
dec
sbb
xchg
bound
mov
test
jg
stos
jecxz
push
dec
loop
scas
add
rcl
in
mov
jb
out
popf
mov
pusha
xor
aaa
mov
push
aaa
test
daa
lds
imul
sti
or
mov
fstps
jno
pop
fwait
in
mov
jl
mov
xor
pop
ret
dec
lock
mov
mov
les
push
inc
push
roll
push
pop
pusha
jmp
cmp
push
in
mov
push
loop
rorb
mov
inc
sbb
mov
nop
pushf
add
inc
cmp
add
loop
addr16
shll
pusha
shlb
add
push
dec
sti
or
das
adc
cmpb
mov
push
dec
cmp
xor
mov
adc
xor
lock
sub
xor
inc
sahf
mov
sub
pop
jne
aad
in
pop
pop
push
or
jne
arpl
test
dec
aad
andb
dec
mov
or
mov
movsl
push
int3
pop
jmp
cmp
dec
xchg
inc
lock
mov
mov
cmp
out
dec
mov
xor
xor
or
sbb
push
aam
xorb
jb
mov
movsl
push
and
je
xor
popf
icebp
orl
mov
popf
push
repz
fisttpll
add
and
and
cmc
cmc
adc
sub
inc
ret
push
sub
cmova
andl
push
adc
sub
out
sarb
push
jge
mov
push
push
aad
sbb
mov
clc
adc
adc
push
outsl
pop
lcall
fwait
sti
push
adc
mov
test
add
xlat
lock
lea
or
and
aam
cmp
test
repz
stos
daa
pop
popa
cld
mov
test
jle
push
ss
je
mov
or
sbb
xlat
and
pop
cs
mov
imul
fs
jbe
cmpl
outsl
pop
cmp
mov
dec
xor
push
push
sub
arpl
add
outsb
mov
stc
nop
xlat
inc
lahf
mov
xor
push
sbb
inc
xchg
dec
sub
cmove
adcl
mov
adc
lret
jns
push
and
inc
or
lret
pop
insb
stos
fmull
ret
repnz
fcompl
and
dec
pop
in
dec
mov
jl
jne
notl
and
adc
or
sub
pop
push
loop
sub
mov
adc
sub
add
aas
add
push
adc
or
cmpsl
fsubs
inc
adc
pushf
mov
imul
dec
mov
xchg
scas
sbb
fisttpll
sbb
sbb
mov
fucom
mov
stc
scas
mov
hlt
push
aaa
loope
inc
xchg
repz
mov
sbb
icebp
cmpsl
pusha
push
ja
push
inc
push
cmp
jle
fisttps
sbb
and
xor
push
xor
in
repz
ja
or
mov
add
dec
stos
mov
adc
cltd
fwait
jnp
outsb
data16
aad
jl
inc
push
loop
insl
mov
cmc
xchg
mov
into
mov
adc
mov
inc
jno
loop
icebp
jle
fistpl
xchg
in
mov
lcall
test
and
addl
mov
loop
push
rorb
xor
dec
dec
iret
clc
dec
mov
inc
fistpll
jecxz
hlt
mov
sti
cwtl
push
pusha
and
lock
aas
cwtl
pop
mov
roll
jno
pusha
or
xor
pop
outsl
loop
cmp
negb
fldl
xor
pop
push
add
jmp
stos
testl
std
scas
call
bound
sub
int3
hlt
cld
and
mov
add
int3
mov
add
jo
jl
movsb
xor
dec
mov
dec
aad
test
pop
fcmovne
ds
dec
iret
dec
shrl
ret
pop
sub
mov
push
add
es
clc
push
outsl
cmp
xchg
xor
dec
add
add
adc
in
repnz
and
repnz
les
add
adc
and
push
dec
dec
and
dec
or
dec
sub
push
dec
test
adc
das
adc
and
dec
mov
dec
enter
push
das
push
push
dec
daa
rorl
ror
call
lds
lcall
scas
dec
scas
test
pop
mov
or
or
push
mov
jp
imul
addb
mov
cs
ret
mov
sahf
dec
push
push
or
dec
stos
and
sub
aad
stos
and
ficompl
pop
xor
popl
test
call
or
pop
mov
addl
xchg
mov
add
cmpsl
ret
cwtl
lcall
sub
pop
rcrb
xor
fnstsw
rol
adc
sahf
xchg
xchg
mov
xchg
gs
xchg
js
add
shrl
dec
mov
push
jno
sub
dec
movsb
and
jl
push
cld
test
pushf
call
jge
enter
cmc
sbb
orb
rcll
rolb
mov
cwtl
jmp
push
adc
xor
test
or
add
shlb
sbb
push
fs
dec
inc
adc
push
xor
lea
rolb
addb
mov
adc
js
adc
lds
inc
dec
divl
pusha
adcl
ljmp
ret
sbb
out
jo
dec
dec
adc
loopne
nop
jne
and
inc
mov
jp
bound
jp
jg
jecxz
popf
jmp
out
sub
mov
test
aad
push
push
mov
shlb
sbb
xchg
imul
push
loopne
dec
add
xchg
inc
xchg
out
std
push
lret
lds
testb
fwait
mov
push
ret
lds
ja
sbb
add
push
inc
lods
pop
sub
mov
test
jp
fldcw
icebp
outsl
xor
jbe
mov
mov
mov
popa
inc
push
xor
in
dec
and
hlt
aaa
push
and
push
lret
ss
mov
xchg
pop
or
orps
sbb
pop
jb
jle
pop
jp,pn
sub
ja
push
mov
mov
add
addr16
stos
imul
jb
sbb
mov
cmp
dec
outsl
mov
sub
xor
xchg
cmp
jno
iret
mov
ret
mov
ljmp
cmp
in
dec
sbb
xor
sbb
jmp
dec
xor
jmp
daa
push
inc
sub
jns
xchg
xchg
inc
insl
pop
ja
movl
jb
jmp
mov
push
and
and
xchg
push
idivb
fdivr
repnz
push
pshufw
inc
adc
cmp
mov
and
std
in
cltd
cld
push
les
pop
push
mov
daa
mov
aas
pop
inc
adc
add
lret
mov
test
dec
clc
loope
pop
mov
cmpl
jecxz
cmp
mov
rcll
into
mov
idivl
imul
pop
ja
std
sub
mov
or
pop
push
test
fs
andb
inc
or
dec
push
stos
inc
adc
xlat
jle
clc
subl
popa
popf
or
sub
inc
push
adc
inc
add
xchg
or
mov
pop
add
add
add
stos
xchg
xchg
push
ds
push
adc
lret
fadd
xor
outsl
lahf
xor
mov
mov
int
rorl
dec
shrb
and
daa
mov
sahf
and
or
pushf
cmp
sub
inc
lret
sbb
xor
mov
add
les
adc
xchg
and
andb
mov
dec
mov
cli
mov
xchg
xchg
insl
pusha
negb
aam
and
lea
bound
mov
lds
push
scas
aaa
leave
pop
mov
xor
adc
push
mov
add
icebp
push
rclb
inc
cli
xchg
bswap
sub
je
inc
shlb
xchg
paddsw
movsl
cmpsb
mov
jnp
cltd
xchg
sub
or
cmp
dec
cmc
mov
mov
push
cli
pushf
fsubrp
adc
shll
sub
mov
jmp
xchg
or
xor
pop
repz
push
mov
add
jge
push
cmc
sahf
gs
mov
xchg
mov
add
lahf
fnstsw
dec
mov
gs
loopne
or
popa
iret
mov
pop
outsl
scas
jb
lcall
or
xchg
xchg
adc
cmp
sub
mov
lock
shll
outsb
jnp
push
jbe
mov
sbb
sub
mov
jge
test
in
and
mov
inc
test
inc
adc
xor
roll
data16
jle
into
pop
push
cltd
push
test
rol
hlt
pushf
push
dec
jno
inc
or
cmp
push
mov
cld
repz
push
loopne
and
xchg
and
sbb
call
xchg
jne
lea
stc
and
fdiv
stos
arpl
push
pop
stos
loop
pop
aad
sbb
addr16
and
ret
sbbb
shlb
bound
inc
inc
mov
sbb
pop
or
and
and
inc
dec
xor
sub
nop
arpl
and
sbb
ret
test
fildll
sub
out
push
or
sub
push
or
int3
push
push
jge
add
xlat
push
mov
loopne
fs
test
mov
repz
mov
xchg
push
pop
clc
pop
pop
in
jl
sub
inc
fwait
in
push
andb
shrl
pusha
push
add
fdivrl
adcb
pop
lods
cmp
rcrb
mov
stc
in
jno
push
and
push
mov
ja
sub
add
mov
xchg
jmp
push
out
test
sub
pop
jno
xlat
loope,pt
or
jae
add
orl
dec
mov
and
adc
sbb
mov
test
je
adc
inc
fdivr
fst
push
mov
push
add
and
outsb
add
mov
stos
push
movsb
dec
ljmp
push
push
mov
out
xchg
and
cmpsb
jnp
jnp
das
subb
pop
push
imul
cmpl
add
xchg
ret
lds
decb
in
rcll
and
imul
nop
fisttpl
xor
pop
jp
cld
sub
test
xchg
outsl
push
jo
jbe
syscall
out
je
dec
rcll
inc
inc
jp
mov
cli
sub
inc
enter
sbb
movsb
sub
aas
mov
adc
inc
inc
pushw
inc
daa
sahf
cld
in
cmp
jno
xor
mov
movsl
inc
mov
add
push
xchg
adc
sbb
add
dec
mov
fmul
inc
cmpsb
jnp
sbb
mov
push
dec
xchg
mov
ficoml
inc
out
or
sub
out
mov
repz
dec
pop
push
stc
jns
stos
int
push
int
mov
push
rcrb
notl
jle
mov
add
add
cld
sbb
dec
rcrb
xor
cmpsb
cmpsl
test
or
mov
test
or
or
sub
jb
push
ret
xchg
mov
in
inc
sarb
imul
push
mov
and
stos
pop
xor
add
jo
mov
pop
adc
mov
pusha
loopne
push
sub
lods
loopne
popa
pmullw
enter
xchg
ret
loopne
lods
pusha
inc
mov
pop
negb
inc
inc
into
jmp
push
pop
dec
mov
es
pop
xlat
or
sub
outsl
adc
scas
cld
popf
cs
mov
mov
scas
sbb
bound
das
shlb
aad
xchg
inc
or
xorb
sub
test
or
mov
data16
xor
mov
and
xor
fidivrl
and
lds
and
sbb
test
push
xchg
test
leave
xor
jne
mov
pop
inc
test
fsts
sbb
aas
nop
sahf
iret
js
mov
cmpsb
mov
ficoms
testl
mov
in
xchg
out
jo
xor
xor
push
scas
fistpll
adc
lahf
test
push
lods
add
cmpl
sub
xchg
mov
mov
xchg
mov
mov
add
rol
imul
push
ljmp
add
and
sub
inc
xchg
stos
enter
push
cmp
or
pop
das
imul
mov
daa
cli
inc
loopne
lds
mov
dec
nop
push
enter
inc
add
adc
inc
adc
and
dec
sbb
jb
loope
cs
fidivs
lahf
sbb
cmpsl
push
sub
xchg
pop
push
push
pop
pop
int3
dec
call
lods
pop
in
inc
sbb
fimull
adc
or
pusha
shrl
jge
inc
loope
add
stc
iret
push
cmc
mov
cmc
lahf
jae
jg
sbb
pop
enter
mov
das
jne
orl
add
add
xchg
lahf
je
xchg
sub
xor
aam
push
popa
scas
lret
hlt
dec
aad
mov
push
inc
popf
jp
cmp
in
scas
mov
aaa
inc
add
fstpl
outsb
ljmp
or
pop
jmp
sarb
js
adc
inc
xchg
push
shlb
jae
or
dec
sub
loop
adc
stc
sbb
adc
in
addr16
ret
les
pusha
clc
adc
cmp
sub
mov
mov
insl
lods
mov
and
push
lds
in
nop
push
dec
mov
jns
push
pop
adcl
inc
add
rorl
fldcw
pop
call
out
xor
bswap
mov
sub
loop
test
sbb
sub
mov
mov
in
inc
lahf
sub
and
lcall
inc
xchg
addr16
mov
fs
cli
mov
lds
scas
push
dec
stos
push
es
pop
mov
fcoms
adc
and
rolb
test
push
jecxz
push
xchg
lret
mov
ds
pop
push
push
mov
xchg
sub
sub
test
adc
pop
inc
mov
bound
clc
sarl
ss
ljmp
sub
sbb
xchg
jo
xchg
mov
loope
rcr
cld
ljmp
mov
cwtl
negl
dec
push
pop
mov
in
inc
leave
mov
outsl
mov
push
adc
sbb
gs
data16
add
mov
daa
and
scas
jne
test
cmp
sbb
and
jns
or
test
mov
rol
rcl
jmp
cmp
or
sbb
hlt
add
icebp
jnp
lods
xor
dec
push
push
test
mov
nop
jne
sbb
sbb
int
dec
insl
lret
or
fbld
dec
cmp
dec
mov
push
je
mov
cwtl
test
jecxz
adc
sbb
int3
jns
loope
adc
icebp
aaa
lcall
fisubrs
les
rorl
decl
jbe
jne
pusha
dec
jp
sbb
mov
or
and
test
sbb
mov
repnz
mov
test
xchg
fmull
hlt
dec
cli
iret
and
in
cld
pop
sbb
nop
xor
sarb
xchg
inc
mull
mov
je
push
jg
dec
clc
add
mov
xor
mov
push
hlt
mov
adcb
xor
mov
adc
pop
pop
gs
pop
maxps
add
out
mov
mov
lds
xchg
pop
sub
dec
adcl
scas
dec
gs
xchg
test
icebp
xor
lcall
push
out
mov
push
add
cmp
test
and
sbb
adc
xchg
sbb
jmp
xchg
pop
popa
xchg
daa
and
mov
cmp
dec
enter
nop
les
rorb
adc
dec
jno
fs
lahf
lret
repnz
mov
cwtl
inc
jnp
or
sarb
popa
push
inc
div
aad
mov
mov
mov
add
imul
inc
cmpsb
sbb
mov
mov
gs
in
add
mov
and
push
adc
sub
cmpsb
mov
stos
daa
fadds
adc
addb
addr16
in
fmuls
push
push
jne
mov
and
pop
inc
xorl
mov
aam
mov
xlat
mov
push
hlt
mov
mov
add
adc
mov
dec
cmp
sub
lds
sarb
inc
xchg
dec
inc
dec
andl
mov
bound
push
dec
xor
and
scas
push
loope
mov
xor
xor
call
pop
xchg
adc
jmp
pop
ss
push
inc
adc
adc
mov
jns
and
xchg
aad
cmpsl
jbe
sub
mov
bound
jmp
daa
aam
mov
adc
inc
cs
jbe
gs
push
pop
lock
add
pop
lock
int3
pop
cmc
lds
icebp
shl
or
or
rcr
mov
and
adc
jno
xor
or
or
mov
adc
add
push
sbb
push
push
ficompl
dec
test
out
fsub
loope
les
fst
sbb
push
inc
jge
mov
adc
mov
push
jmp
out
repnz
aas
out
dec
ret
jne
dec
lret
mov
inc
jns
cmp
or
add
lods
repnz
dec
jmp
push
sub
shll
test
fildl
mov
mov
add
and
push
cmpsl
lods
mov
shll
xchg
and
and
popa
stos
hlt
out
mov
inc
add
push
adc
shrl
ds
les
jp
subl
dec
jp
jg
cmp
pop
mov
push
add
nop
xchg
enter
int3
adc
insb
xlat
fwait
ds
testb
inc
jno
push
inc
test
stos
test
dec
int
xchg
jbe
xor
pop
cwtl
or
ret
adc
or
jae
out
pop
cmp
mov
cmp
sahf
inc
les
fcompl
jp
outsb
push
sbb
loop
jns
jecxz
inc
sbb
pop
cmp
in
mov
sub
test
stos
push
mov
sbb
pop
bound
adc
mov
dec
jne
sbb
cmp
inc
movsl
lret
pop
fwait
inc
mov
pop
jae
jle
push
add
outsb
loope
lock
stos
rcll
shl
mov
sbb
sub
sub
push
out
mov
scas
je
jge
roll
push
mov
repnz
test
mov
adc
add
insl
out
jecxz
popf
push
sbb
ja
jb
stos
add
pop
popa
and
sub
call
or
cmpsb
daa
in
test
push
add
in
jne
insl
adc
aam
jecxz
mov
scas
mov
dec
into
into
int
or
push
add
sub
add
xchg
movsb
lods
fcomi
orb
aad
in
pushf
mov
adc
popa
addl
jb
push
jae
loope
in
rcll
adc
and
push
loope
in
sbb
or
sub
scas
je
in
insb
lock
test
ljmp
add
sarl
ficoms
lock
js
scas
cli
dec
jl
in
mov
mov
movsb
jo
enter
push
cltd
cmp
imul
call
mov
sub
push
sub
pop
sbbl
popa
fistps
pop
fists
pop
ret
fs
test
mov
sti
jb
mov
invd
inc
cmp
jmp
jg
call
lret
lret
xor
rolb
xchg
pop
sbbl
xchg
cld
adc
adc
mov
dec
inc
pop
aad
mov
adc
xchg
dec
push
pop
sbb
adc
aam
inc
and
jns
cmc
xor
sub
xchg
imul
es
mov
xor
adc
push
loop
scas
sahf
xchg
sub
mov
aad
xchg
cltd
cwtl
dec
push
dec
jns
adc
push
pusha
add
shrb
mov
jl
enter
inc
and
adc
loope
jp
pusha
inc
inc
inc
dec
lea
test
push
dec
push
cmp
pop
es
sub
shll
jns
xchg
xchg
mov
lods
movsb
push
xor
mov
inc
mov
dec
and
gs
fs
pop
inc
jo
gs
push
in
nop
mov
xor
adc
sub
outsl
jmp
mov
stos
dec
test
dec
fstps
ja
and
insb
into
lds
xchg
sti
add
add
out
jne
sbb
je
nop
or
push
push
pop
aam
clc
push
jmp
add
imul
std
sub
dec
data16
mov
jmp
lock
cmpsl
clc
dec
pop
sbbl
xor
fwait
xor
cmpsl
sbb
stos
fwait
jp
push
divb
add
in
push
jmp
mov
push
and
pop
mov
add
nop
push
cmc
add
and
push
jle
pushf
add
pop
xchg
xor
insb
lods
sahf
imul
test
addb
pop
mov
push
adc
ja
push
or
adcb
loop
cmp
mov
mov
push
js
sbb
and
ljmp
mov
add
cmp
or
stos
cli
mov
mov
mov
sub
lods
sub
in
jl
dec
mov
lods
pop
jns,pn
shll
xor
idiv
sub
mov
sub
or
and
and
shl
push
lods
pop
pop
add
cli
pop
sbb
add
push
pop
dec
dec
push
pop
add
jno
out
push
aad
cmp
ds
lods
rcrb
test
mov
insl
pushf
rcll
push
add
jecxz
dec
in
addr16
out
stos
and
cmp
sub
and
stos
cltd
cli
dec
lret
mov
mov
xor
lret
cmp
filds
leave
repnz
inc
xchg
inc
mov
sbb
dec
jne
iret
in
sub
arpl
add
movb
popa
in
ljmp
xlat
mov
lcall
adc
xchg
xlat
cmp
push
sub
push
mov
fidivl
stos
shl
lods
inc
push
push
inc
nop
mov
lock
stos
bound
sub
cmp
in
in
push
jl
dec
rorl
cmpsb
test
sbb
sub
and
lcall
or
xor
lea
dec
and
inc
cwtl
fwait
xchg
or
repnz
xor
xchg
sbb
inc
pop
push
adc
mov
xchg
rol
cld
sub
push
mov
jmp
dec
mov
rorb
mov
bswap
nop
in
adc
mov
cmp
filds
pop
stos
inc
sar
test
mov
xor
subb
je
lods
push
cltd
les
mov
int3
add
jp
test
pop
jmp
push
or
sbb
fildll
xchg
gs
stc
ja
into
pop
inc
inc
dec
or
xor
and
icebp
adc
repz
jns
hlt
inc
mov
lret
jne
add
push
fs
pop
xchg
dec
outsl
fsub
arpl
icebp
mov
mov
pop
adc
push
mov
xorl
mov
cmp
into
movsl
mov
push
lret
scas
int3
cwtl
xchg
inc
aas
test
sub
ja
movsb
dec
push
xchg
in
test
sub
xor
push
xor
push
adc
inc
mov
mov
stc
mov
cmp
js
shrb
ja
into
or
mov
dec
je
call
inc
clc
lea
iret
add
bound
stc
or
add
iret
add
fcomps
shll
inc
push
mov
sbb
mov
adc
imul
pop
adc
xchg
ret
fisttpll
mov
pop
push
xor
add
mov
sbb
aaa
mov
or
and
and
inc
cmp
inc
fcomp
arpl
inc
sbb
pop
mov
sbb
inc
inc
mov
jecxz
fistpll
mov
imul
dec
cmp
shlb
mov
sub
pusha
inc
xchg
inc
sbb
mov
subl
movsl
orb
mov
add
pop
add
cld
cmpsb
mov
cwtl
jge
or
adc
adc
xchg
pushf
cmp
xor
push
es
clc
pop
xor
scas
pop
pop
inc
dec
push
and
test
popl
pop
ss
sub
mov
lds
push
aad
pop
pavgb
xchg
or
ja
sbb
mov
lret
dec
jo
cld
or
icebp
rcll
popa
shl
xchg
lret
or
mov
movsl
mov
or
pop
mov
fists
aaa
mov
xor
dec
mov
lcall
pop
pop
push
aam
lret
scas
addb
inc
add
out
xchg
lret
xor
out
pop
outsl
mov
mov
pop
sub
and
lea
lret
out
pusha
in
pop
push
sbb
mov
xchg
add
push
fwait
je
push
cmp
scas
js
xchg
pop
divb
aaa
push
pop
mov
xchg
scas
sub
loopne
cmp
sub
and
mov
cmpsb
adcb
ss
fs
ja
loop
xchg
cmp
pop
mov
arpl
pop
jnp
xchg
xchg
movsb
imul
push
mov
sub
lods
es
mov
push
xor
xchg
add
insl
pop
lock
fcoms
and
and
cmp
out
xchg
mov
cmp
sub
or
inc
test
inc
xchg
inc
jg
push
push
dec
push
cmc
mov
xlat
shl
aad
test
shr
inc
push
rcll
fiadds
xor
mov
or
jp
xchg
fs
nop
xor
or
inc
loopne
in
mov
mov
sub
xchg
std
loopne
mov
in
mov
mov
pop
sub
lret
lods
bound
adc
jge
xor
pop
arpl
fdivrs
dec
popf
xchg
add
hlt
jo
daa
xor
out
bound
out
or
sbb
cmp
sbb
test
repnz
js
cltd
test
test
scas
jp
inc
dec
movsb
cmp
cwtl
mov
or
cmp
lret
sbb
scas
push
icebp
mov
arpl
out
inc
dec
inc
inc
sbb
inc
outsb
add
or
add
movb
mov
fs
test
dec
sbb
lea
test
mov
xor
loope,pn
push
mov
jg
ds
jo
data16
sub
fimuls
loopne
incl
mov
mov
add
add
add
add
dec
inc
add
add
add
add
and
adc
stos
xchg
inc
inc
dec
pop
orb
adc
mov
fwait
and
and
sub
inc
test
add
subb
dec
mov
fisubrl
xchg
je
mov
inc
cmp
adc
inc
xchg
mov
and
xchg
dec
rolb
orb
adc
mov
push
and
or
add
and
adc
test
and
mov
sbb
adc
mov
cs
xchg
push
test
inc
shlb
xchg
dec
mov
mov
dec
push
test
adc
xchg
dec
and
subb
push
mov
sub
adc
or
subb
adc
dec
shlb
xchg
or
cmpsl
adc
and
add
and
mov
push
xchg
sub
sub
stos
test
stos
dec
adc
xchg
push
test
sub
sub
adc
push
stos
dec
and
mov
xchg
push
test
inc
stos
dec
pop
jno
sub
adc
push
stos
test
sub
push
push
inc
stos
dec
and
adc
push
pop
test
sub
sub
stos
test
stos
dec
adc
xchg
pop
test
sub
add
sub
mov
add
pop
mov
pop
xchg
lods
and
jns
je
push
fnstsw
inc
xlat
enter
lea
jo
xor
imul
and
jno
lock
push
pop
fcompl
inc
xlat
popf
jo
imul
inc
sbb
dec
push
add
xor
sti
mov
dec
push
fmull
aad
add
leave
popa
test
push
fwait
mov
add
lret
into
subl
cmp
pop
jecxz
pop
adc
inc
push
cmp
jns
ret
jge
xorl
es
add
xchg
insb
sub
mov
adc
repnz
mov
fistpl
lea
int3
lcall
sbb
pop
mov
ss
fildll
add
dec
bound
ret
adc
mov
mov
pop
leave
inc
inc
mov
or
mov
ficomps
cmp
in
push
push
push
int3
and
mov
mov
pop
xchg
inc
pop
dec
push
jge
xchg
sarl
jp
push
mov
dec
pop
or
aam
dec
lcall
mov
mov
mov
xchg
add
cmp
movsl
xchg
xchg
lds
push
rclb
orl
or
lret
dec
pop
pop
jae
cmpsb
add
sub
cmp
push
inc
pop
lret
adc
sub
movsl
and
popa
mov
test
jb
inc
xor
xor
clc
push
mov
mov
and
pusha
push
in
mov
push
mov
addb
shll
and
inc
sti
aaa
ljmp
stc
inc
int
inc
movb
jge
icebp
pop
out
ficomps
xorl
sub
mov
mov
or
shlb
mov
rorl
sub
and
daa
into
fwait
adc
movsl
xor
gs
jo
dec
call
xchg
testl
jno
inc
lret
push
insb
add
dec
pop
push
movsb
pop
inc
ret
push
xlat
lock
cmp
xchg
lock
cmc
sbb
add
inc
xchg
inc
insl
insb
pop
loop
sub
stos
mov
lea
adc
popa
jmp
dec
mov
fwait
xchg
les
pop
loop
int
adc
dec
push
sub
cmc
dec
pop
jne
push
push
loopne
aam
imul
adc
push
adc
push
adcl
push
inc
notl
sub
mov
popf
shr
shll
xchg
js
dec
lds
jo
or
adc
pop
gs
movsl
mov
xchg
ret
rclb
loope
incb
add
and
add
add
inc
add
dec
inc
add
add
add
add
in
cli
and
adc
ja
idivl
mov
lods
inc
mov
sub
ja
pop
adc
icebp
mov
clc
mov
cmp
jle
sbb
mov
aas
sub
mov
dec
dec
mulb
or
dec
mov
inc
dec
push
aam
push
iret
cmp
iret
ds
xlat
bound
ret
pop
test
shrl
jl
pop
int
sub
lods
cmp
cmc
ret
lea
ja
icebp
adc
sbb
dec
mov
pushf
mull
aam
push
xchg
lock
mov
pop
testl
push
hlt
jecxz
sbb
mov
es
sbb
sub
aas
imul
in
ds
sbb
imul
jno
int3
mov
push
js
and
ret
lds
loope
icebp
sbb
mov
iret
scas
or
pop
jg
ja
xor
popa
mov
pop
xchg
dec
cmp
sub
push
push
cmp
mov
cmp
cwtl
sahf
addr16
push
mov
jae
std
mov
int
das
sub
xor
fimuls
mov
daa
pop
sub
xor
and
cli
cs
push
inc
jne
mov
cmpsl
in
pop
std
out
pop
mov
inc
sahf
repz
movsb
aad
pop
imul
lret
jecxz
adc
lock
rcr
dec
scas
mov
push
push
movsb
jp
repnz
hlt
outsb
aas
jne
mov
cld
mov
loopne
lods
sbb
ret
inc
fisttpl
mov
jle
mov
and
fdivrs
mov
andl
cmc
adcb
addr16
out
loope
stos
push
outsl
inc
cs
shlb
cmc
mov
lods
xor
jne
jbe
push
and
pop
in
repnz
sbb
jge
xchg
push
jge
stc
dec
clc
aas
icebp
repz
fdivl
sahf
mov
in
jp
les
xor
push
aaa
in
enter
sbb
popf
in
insb
sbb
nop
in
fmull
xchg
xchg
aad
fildll
lods
rorb
es
iret
push
dec
xorl
jno
leave
repz
ljmp
jbe
hlt
imul
jl
mov
cmp
cmc
leave
sub
cwtl
aaa
out
xor
shrl
dec
inc
jnp
loopne
xchg
push
scas
into
push
sti
std
pop
dec
roll
pusha
aam
test
je
xchg
fstps
jg
push
mov
mov
mov
ljmp
mov
mov
xor
stos
push
cmp
jle
fstpl
pushf
mov
popf
cltd
inc
dec
stc
fs
aam
std
cmp
push
les
in
or
push
or
mov
mov
cmp
jle
push
daa
mov
outsb
sbb
dec
jbe
mov
mov
pop
xchg
je
mov
pop
js
xor
fidivrs
loop
je
sub
cmpb
cmc
push
inc
lahf
lret
icebp
xchg
jbe
push
paddusb
xor
jae
xor
xchg
inc
leave
sahf
sub
scas
xchg
scas
xchg
xorb
ror
mov
fs
inc
aam
jecxz
scas
xor
movsb
imul
xchg
fwait
cmp
jae
stos
mov
pop
mov
pop
je
jb
fidivs
aas
inc
mov
insl
popa
lods
pushl
jns
in
add
fldt
loope
ret
pop
pop
cld
and
mov
out
notb
stos
adc
pop
insl
and
xchg
sti
movsb
fistpl
loop
repz
dec
cwtl
outsb
aam
inc
insb
bnd
popa
pop
mov
sbb
insb
mov
push
outsb
jne
mov
lock
push
fucomp
pop
cmp
in
xlat
out
dec
xor
and
icebp
mov
test
mov
push
xlat
xchg
cmc
sbb
or
pop
stc
int
outsb
sbb
cltd
arpl
out
or
xrelease
iret
mov
push
cld
pop
stos
push
aas
cld
stos
cmpsb
cmp
pop
mov
inc
outsb
fildl
nop
dec
mov
outsl
arpl
in
repnz
ret
jns
int3
push
mov
setb
lods
das
sti
in
lock
fld
sahf
sbb
pop
xchg
jnp
lahf
faddp
and
push
fsts
ret
inc
xor
fwait
outsb
push
pop
mov
rcr
shrb
imul
arpl
fildll
mov
stos
cld
addr16
mov
jge
mov
dec
mov
push
out
pop
repnz
adc
mov
repnz
jmp
mov
in
cmp
stos
rcl
jb
mov
add
fdiv
xchg
dec
cltd
stos
outsw
lahf
insb
push
aad
xchg
cmp
sar
int3
enter
sub
push
lahf
jns
push
xor
test
loopne
push
fidivrs
test
adc
ss
jmp
arpl
mov
cwtl
jne
fstpl
push
pop
sbb
push
xchg
pushf
mov
dec
pushf
jb
into
cmpsl
and
jb
ret
dec
xor
fdivrp
sahf
sti
or
fistpl
leave
cld
mov
leave
decl
icebp
sti
xor
xlat
fcoms
sbb
hlt
fsts
aam
daa
push
out
lock
loope
inc
cwtl
out
movsl
xchg
pushf
jb
sbb
jmp
dec
push
xor
jp
xchg
xor
pop
sbb
push
lock
pop
mov
push
cmp
out
les
out
iret
das
inc
mov
ljmp
xchg
cltd
sbb
mov
jmp
loop
jae
cltd
cmp
push
fcomps
bound
sti
out
les
imul
lods
imul
jge
pop
or
adc
addr16
fnsave
jmp
arpl
frstor
jns
popf
bndstx
fcmovne
or
jns
mov
iret
push
xchg
adc
imul
in
fucom
int
cmc
pop
call
lods
les
sbb
sbb
icebp
and
or
int3
ljmp
xchg
mov
scas
fldcw
scas
mov
inc
adc
es
popf
cltd
lahf
fadds
mov
xchg
outsl
lret
xchg
mov
push
rcrb
lods
push
xor
loope
out
mov
adc
popa
push
pcmpeqd
sbb
aad
cmp
fsts
or
sahf
dec
popf
sbb
mov
fs
adc
out
test
jecxz
push
jmp
mov
std
xor
adc
xchg
mov
mov
xor
mulb
fwait
pop
dec
xor
push
inc
in
mov
stc
mov
add
in
in
fchs
sbb
fistl
jge
xchg
adc
add
aas
mov
dec
aaa
aas
cmpsb
out
mov
pop
mov
xchg
jno
mov
jnp
es
pop
shrb
dec
in
movsl
test
mov
in
jle
xor
jg
adc
in
insb
jns
into
cmc
dec
adc
pop
js
jecxz
sub
or
xor
movsl
outsb
daa
hlt
out
or
addr16
mov
add
insb
or
and
cmp
pop
icebp
push
testb
gs
push
loop
jecxz
mov
ja
jnp
sbb
cmpsb
mov
lods
cltd
out
lahf
jae
aad
xchg
adc
pop
xor
jns
dec
scas
jo
ret
jmp
loop
sub
push
mov
rcrl
sahf
imul
cmc
loope
jg
hlt
xor
sub
icebp
dec
pop
mulb
push
in
jp
lock
xchg
in
cmp
push
mov
aad
loopne
xor
mov
outsl
loop
inc
jge
hlt
dec
cltd
stc
adc
ds
sub
ret
xor
maxps
mov
push
test
sub
pusha
ss
lcall
cmpl
daa
cmp
xchg
out
mov
push
or
pop
gs
adc
xchg
cmp
dec
fistpl
negb
inc
dec
sub
jl
lock
lret
jb
cmpsl
mov
mov
push
mov
jmp
dec
sarl
daa
out
jl
stos
jl
cmp
rcll
cltd
push
ret
pop
out
sub
xlat
pop
test
xchg
mov
aas
inc
pop
xchg
pop
js
imull
out
hlt
push
loope
inc
cli
outsl
mov
daa
cmp
test
jl
call
rorl
jae
popa
jnp
pop
mov
outsb
mov
push
xchg
pop
adc
aam
test
mov
mov
into
sahf
icebp
push
mov
and
rol
mov
or
scas
xchg
push
mov
dec
mov
ja
fisubs
aaa
push
clc
sbb
or
xor
jb
loop
inc
xor
in
pop
test
jno
lret
scas
lret
jle
fisttpll
call
les
mov
mov
gs
in
inc
xor
pop
xchg
cld
cmp
pop
cmp
popf
fcoms
in
jae
loopne
bsr
ljmp
nop
aas
arpl
cmc
mulb
mov
lahf
cmc
fdivr
cmp
xlat
stos
orl
lret
push
sbb
cld
popf
xchg
mov
test
or
sbb
jl
xlat
mov
cmp
and
pusha
lods
mov
je
push
xchg
mov
xor
jno
inc
lods
movsl
jnp
mov
mov
push
mov
test
jg
insl
fsubs
sub
les
jg
arpl
data16
dec
and
jmp
leave
inc
jg
in
adc
test
hlt
sbb
inc
repz
lcall
mov
loope
lea
mul
dec
sub
push
call
imul
lahf
cmp
fisttps
jno
in
jns
inc
int3
leave
imul
mov
out
cmpsl
ljmp
pop
inc
pushl
mov
xchg
pop
stc
out
mov
cltd
js
pop
mov
xor
dec
dec
scas
rcr
mov
push
xor
out
ja
xchg
leave
adc
pop
bound
inc
out
lods
sub
call
sub
and
xor
mov
sahf
lods
lds
sub
mov
in
and
jge
iret
bound
dec
push
es
das
int3
fdivs
jge
xchg
outsb
std
in
or
and
fmulp
cmp
jg
popf
popa
mov
adc
ja
xchg
out
pop
sub
shrl
dec
fldt
sahf
insl
scas
test
enter
jbe
jne
sar
stos
jp
fmull
and
in
je
adc
fwait
pop
scas
push
cmp
cli
cmpsb
data16
aam
jle
jg
xchg
daa
insl
pushf
mov
out
jbe
mov
test
sbb
das
push
fimuls
fcmovbe
jno
dec
ds
in
popf
xchg
sarl
leave
enter
jnp
push
mov
adc
call
es
scas
xchg
xchg
cmpsb
icebp
and
fs
lods
jg
push
movsl
out
cmp
mov
stos
xchg
mov
jp
and
mov
push
popa
lahf
hlt
cmp
add
lea
pop
in
push
sahf
scas
shl
shl
icebp
xchg
test
lds
cld
mov
filds
mov
push
sbb
rcrl
jae
ret
iret
mov
dec
mov
loopne
adc
hlt
xchg
cwtl
adc
pop
imul
fstps
aad
stc
out
xchg
std
mov
repz
lret
xchg
addr16
mov
cli
in
mov
ss
sbb
insb
std
mov
push
inc
shlb
mov
loope
fs
push
dec
xorl
or
mov
push
loope
mov
std
sahf
jo
cmp
imul
mov
pop
fs
inc
add
xlat
adc
dec
jnp
jmp
dec
fstps
xchg
mov
repnz
daa
cmp
in
push
push
fwait
mov
outsl
sbb
jl
cmp
jmp
aas
stos
enter
or
jl,pn
icebp
bound
xor
dec
cwtl
cli
popl
xor
mov
mov
cmp
shlb
mov
and
lcall
mov
cmpsl
add
rcll
cs
fdivl
lcall
mov
push
icebp
mul
shr
outsb
pop
movsl
xchg
pop
sbb
mov
jnp
mov
std
xor
jecxz
push
push
xchg
fsubr
xchg
mov
xchg
mov
mov
lcall
pop
dec
rcrb
push
mov
popf
xchg
pop
das
jp
push
cmpsl
push
aas
jge
icebp
in
sbb
jecxz
arpl
push
pop
jge
sbb
inc
ret
sbb
or
outsb
ljmp
cmp
lock
fsub
aas
pop
out
push
insb
dec
cmp
lahf
dec
aam
cld
scas
sub
jge
mov
inc
lahf
or
dec
jle
dec
pushf
jg
sub
cmc
popa
fwait
sbbb
jl
movsb
jmp
call
aaa
jge
fprem1
cmc
lret
sub
hlt
stc
cltd
cmp
xor
aaa
and
int
insl
inc
repnz
inc
ret
int
fistpl
jle
sti
pop
dec
lahf
out
lods
mov
lcall
sti
iret
pushf
jl
popa
mov
lcall
into
or
movsl
mov
minps
iret
fwait
mov
jnp
inc
fwait
mov
mov
cmc
sbb
ror
lea
data16
out
repz
xor
push
jno
lock
aas
sub
shrl
inc
int
aas
outsl
mov
dec
ficomps
jp
pop
xor
sub
push
sub
imul
mov
and
cld
push
imul
jnp
test
aad
cmp
fucomp
or
repnz
dec
jl
mov
loop
inc
or
adc
and
mov
in
jl
pop
shrl
out
into
push
mov
ja
mov
pop
jb
lret
out
dec
out
cmp
test
mov
shrl
sbb
mov
iret
mov
ret
mov
insl
faddl
fsubr
aam
sbb
add
jae
cmc
dec
sbb
idivl
mov
repz
stc
imul
inc
xchg
imul
sbbl
insl
or
xor
not
mov
pop
aaa
fucomp
sbb
pushf
pop
inc
xlat
out
mov
out
xor
mov
pop
sbb
imul
rolb
out
div
sbb
cwtl
popf
jae
stos
fbstp
inc
stos
les
cmp
jge
int
xor
mov
movsb
sub
jecxz
stc
data16
inc
addr16
ficomps
lahf
repz
fs
mov
out
mov
mov
aas
dec
sarl
sub
in
mov
jmp
fcoml
dec
dec
jg
loope
addr16
dec
push
xchg
inc
aas
mov
lea
mov
popa
addr16
jp
repnz
jo
push
cld
cmp
lea
lret
xchg
out
rcll
std
out
fistpll
out
jnp
add
loope
xlat
out
aaa
cmp
faddl
mov
test
jle
loop
xor
cmpsb
int3
mov
les
push
cmp
cltd
cwtl
lret
ret
ficomps
das
std
sbb
pop
pop
mov
adc
iret
xchg
outsb
xchg
mov
fdivrs
pop
or
dec
in
lahf
push
mov
xchg
xchg
inc
sub
xor
sbb
mov
sub
dec
xchg
mov
icebp
dec
jnp
fwait
and
mov
lcall
in
into
pop
hlt
pop
fdivrp
sbb
adc
adc
cld
jl
mov
iret
loop
mov
pop
mov
pop
ja
mov
je
lret
mov
jnp
jge
movl
jl
aas
loope
in
pop
std
and
shlb
movsl
in
pop
lods
mov
jne
jl
arpl
adc
shll
mov
ret
std
cmpsb
mov
jno
mov
cmp
pop
cmp
inc
xchg
sahf
test
ja
div
mov
data16
rcrb
jecxz
adc
stc
bound
dec
adc
ss
fisttpl
mov
jge
xor
sub
xchg
aad
stc
ljmp
bnd
pop
cmp
sbb
mov
daa
je
fwait
push
xchg
pop
negb
test
jl
cmp
repz
sub
cli
dec
mov
test
shlb
in
inc
push
fs
mov
out
mov
push
mov
fcmovb
push
pop
mov
imul
shl
push
inc
pushf
mov
xchg
insl
das
test
idivb
inc
mov
cld
or
mov
pop
test
cmp
lods
cmp
inc
shrb
leave
insl
movsl
xchg
aad
sub
enter
jnp
push
stc
lret
into
std
in
arpl
mov
enter
push
shl
ficompl
add
sub
int
aaa
inc
movsl
mov
cs
push
iret
orb
jmp
xchg
insl
sbb
cmp
push
imul
in
ror
stos
dec
ss
test
mov
aas
lds
add
jle
mov
push
and
jp
loop
xchg
mov
xlat
ret
addr16
std
mov
data16
add
mov
sbb
mov
mov
jg
inc
jbe
js
jbe
xchg
sbb
jp
jge
out
adc
mov
aam
dec
xlat
pop
pop
pusha
add
orb
and
add
add
add
in
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
lods
sub
add
add
add
js
and
stos
push
in
loope
ds
mov
push
ds
add
dec
or
shr
jg
pop
sbb
push
cmp
jg
das
push
dec
shrb
sbb
fsub
clc
out
jb
rdtsc
pop
fcomps
inc
test
push
sbbb
andb
jmp
push
filds
or
push
and
je
outsl
add
vpackssdw
cmpsb
dec
scas
push
ret
stos
popf
adc
shll
mov
mov
mov
jne
shrb
data16
mov
das
xor
ljmp
cmp
jo
and
enter
fucompp
decl
inc
jae
xor
in
mov
mov
out
fsubrl
lds
scas
pop
ss
adc
cmpsl
pushl
ds
mov
fsubl
fisubrl
mov
imul
inc
pushf
lahf
stos
aad
adc
test
and
roll
or
in
pop
xlat
or
dec
add
scas
fiadds
in
out
ret
mov
pop
jle
add
iret
bound
jnp
mov
jne
mov
stos
xor
xor
or
aaa
pop
incl
sbb
orb
inc
mov
or
loop
repnz
adc
ljmp
inc
testl
cmp
pop
decl
lock
and
mov
mov
adc
orb
scas
in
mov
lcall
pop
cli
jg
rcrb
pop
imul
sub
mov
ret
sbb
stos
push
and
out
das
mov
loopne
out
xlat
pop
sti
jns
mov
cmpsl
in
inc
enter
clc
test
push
push
pop
pop
das
adc
add
or
mov
pop
adc
repnz
jge
cmp
dec
add
cmp
mov
nop
jge
bound
sub
clc
cltd
jae
or
pop
add
aaa
out
daa
lret
add
cmp
inc
cmpsb
sbb
mov
mov
stc
inc
cmpsb
jg
aas
lods
or
sub
sub
mov
imul
mov
sbbl
fnstenv
lds
sti
adc
add
cltd
test
pop
clc
add
adc
or
dec
mov
push
mov
pusha
inc
sub
lret
outsl
adc
cmp
add
pop
es
and
cli
nop
adc
mull
add
jne
mov
loop
into
stc
pop
mov
dec
movb
ret
insl
mov
rorl
shrb
leave
cwtl
cmp
cmp
mov
xor
sub
cmp
mov
sub
aad
xchg
shlb
cmp
mov
shll
ljmp
push
sbb
iret
add
pop
and
sbb
dec
shrl
sbb
lods
sahf
shrl
faddl
sub
psllq
mov
cmc
push
push
nop
mov
fbld
gs
mov
sbb
jne
mov
push
lods
fucomi
out
lcall
jl
pop
sbb
jmp
rdpmc
cmp
loopne
dec
addr16
add
jl
inc
and
rcll
add
stos
mov
pushf
rclb
adc
xor
insl
outsb
push
repnz
sti
mov
and
mov
sub
sahf
shr
xorl
jb
ficoml
sbb
adc
jl
mov
in
outsl
push
xor
xor
cmp
adc
and
aam
mov
push
xchg
lret
jne
insb
dec
mov
cmpsl
lea
cmp
jg
dec
xchg
lea
sarb
dec
sarl
jp
mov
add
xor
push
cltd
pop
bound
sbb
pop
jno
or
mov
sub
mov
xchg
mov
push
in
sub
outsl
mov
test
or
aam
mov
jno
mov
cld
arpl
inc
stc
sti
sbb
out
xor
inc
sahf
mov
cmpsb
dec
stos
sub
xor
hlt
push
shll
int
mov
sbb
das
inc
jp
lods
cmpsl
aaa
cli
das
es
clc
mov
nop
adc
mov
mov
ljmp
loopne
mov
clc
and
mov
lcall
mov
lods
pop
ljmp
lret
cmp
aaa
push
pop
insl
sbb
push
xchg
cmc
or
fcmove
add
cmpsb
lods
lods
xchg
push
sbb
and
push
lcall
dec
jl
or
mov
mov
jg
lods
mov
pop
xor
mov
mov
jmp
push
out
xchg
inc
fsubrl
adc
out
pop
loop
inc
sub
lods
push
sbb
ror
jp
mov
mov
jo
inc
push
lock
xchg
mov
mov
notb
lret
mov
pop
xchg
fistps
in
shll
mov
gs
test
mov
ret
and
cmp
stos
mov
psubb
sub
lea
cmpsb
and
jle
adcl
shlb
cmp
mov
and
sub
sahf
daa
jg
fwait
push
jp
movl
mov
or
lds
rcrb
repz
mov
pushf
sti
cmp
movd
sahf
mov
xchg
mov
int3
pushf
shrl
mov
iret
adc
push
mov
mov
aad
in
push
outsb
test
adc
mov
movsb
mov
lock
and
xlat
lea
shll
lds
mov
iret
sbb
rorb
jl
scas
push
movsb
xor
frstor
cmp
leave
dec
bound
or
and
push
iret
cmp
shl
je
add
leave
aam
test
pop
jecxz
jmp
clc
out
dec
mov
or
testb
push
xchg
cmp
xor
mov
add
rcrb
fs
sar
pop
adc
or
mov
sahf
push
icebp
fldl
jg
fistpl
inc
jg
movsl
icebp
jb
imul
mov
lahf
lods
mov
xor
aam
xchg
and
push
and
cld
popa
cltd
sti
xchg
sahf
cwtl
push
movsl
cmp
mov
cmp
pop
push
inc
mov
fimull
xlat
jecxz
and
xchg
mov
imul
pusha
ja
stos
int3
pop
mov
bound
and
fdivrs
mov
rorl
jne
pop
cld
push
sub
jle
mov
repz
mov
lds
pop
adc
mov
xchg
sbbl
or
loop
dec
cmp
xor
lahf
pop
inc
std
pop
push
int
test
xor
add
xchg
icebp
or
int
les
stc
push
lods
in
ret
mov
mov
lea
xchg
lret
call
sbb
push
mov
dec
pop
iret
sub
aas
aam
icebp
pop
mov
sbb
call
adc
dec
loope
cs
es
loope
loop
mov
sub
das
stos
jb
or
mov
cwtl
les
lea
pop
mov
cmpb
in
icebp
orl
push
and
xchg
gs
jae
xchg
jg
mov
jge
mov
mov
popa
xchg
sarl
mov
dec
movl
int
mov
mov
scas
push
push
lods
sub
cmp
movsl
adc
cs
aaa
int
mov
aad
scas
jl
in
inc
jb
push
adc
or
sub
or
or
xor
int3
orb
mov
shll
jp
mov
xchg
gs
imul
mov
jnp
add
sbb
lahf
test
test
mov
mov
not
cmp
xor
icebp
mov
dec
stos
xchg
dec
pop
scas
std
jp
testl
cmp
popa
pop
push
push
jae
les
add
or
in
clc
fcmovbe
inc
repz
jo
inc
in
push
std
aam
xor
aaa
xor
mov
test
push
loopne
sarl
push
repnz
mov
dec
jg
repnz
pop
repz
sbb
sub
or
or
inc
and
ror
sbb
shlb
xor
xor
insb
movsb
sub
pop
int3
mov
mov
push
int3
stos
outsl
jge
and
fsubl
adc
push
push
in
cmp
and
add
and
xchg
rcrb
in
adc
clc
imul
push
test
and
sbb
inc
push
lret
out
insb
lcall
lea
jp
cmp
xchg
in
outsb
dec
pop
jl
rorl
jns
loope
add
xor
sbb
dec
shl
arpl
mov
and
dec
in
std
jae
jo
std
cmpl
jae
in
fcoml
adc
jbe
cwtl
jecxz
ficomps
xchg
and
dec
rorl
cli
or
rolb
lock
cmc
jbe
add
fimuls
stc
repz
sbb
pushf
stc
pop
xor
test
les
adc
or
sbb
arpl
mov
scas
add
xchg
sbb
int
andb
arpl
jo
ret
incb
in
mov
cmp
pop
mov
test
jl
repnz
inc
pop
push
fs
pop
push
into
xchg
lds
mov
stos
cmc
mov
cmp
xor
dec
sbb
cmpsl
xlat
pop
cmc
pushf
pusha
lds
sub
dec
dec
pop
orb
jne
jecxz
shll
adc
out
js
jmp
pop
adc
push
mov
enter
push
pop
pop
mov
pushf
sub
aad
aam
and
insl
sub
les
hlt
sub
iret
adc
in
mov
pop
in
cld
shlb
call
push
dec
dec
pop
mov
lcall
sahf
je
cmp
mov
dec
loopw
ret
add
dec
lret
or
scas
and
arpl
scas
fists
mov
lock
xlat
hlt
jns
sarb
in
rcrb
sub
sub
pushf
les
jnp
xchg
jg
xchg
pushf
divl
adc
push
in
fiadds
outsl
aam
mov
jmp
cmp
and
xchg
cmpsb
xor
cli
in
pop
ljmp
idivl
inc
or
imul
inc
sbb
mov
into
scas
sahf
xchg
lods
stos
mov
bound
rorl
fldl
std
loop
and
lret
mov
das
xlat
adc
out
cld
roll
jbe
mov
sub
mov
jp
addb
mov
repz
cld
rorb
xchg
xor
sti
rclb
pop
adc
mov
jmp
testl
and
bswap
jge
cmpb
loope
xchg
lock
loope
neg
inc
inc
push
and
rcll
mov
xchg
stos
adc
pusha
mov
inc
inc
sub
inc
stos
leave
sbb
mov
inc
push
cmpb
dec
jns
mov
sub
mov
push
scas
push
pop
sbb
adc
or
sti
sbb
jmpw
inc
and
test
push
aaa
aam
sbbb
aam
pushf
fimuls
mov
ret
gs
lret
inc
sahf
arpl
cmp
dec
pop
and
adc
and
push
mov
push
push
pop
sbb
sbb
inc
jle
add
rcl
aad
imull
inc
cmp
ret
cmpsl
jae
fwait
xchg
leave
jl
sar
fcompl
mov
cmp
add
fcmovbe
inc
sub
push
mov
sbb
or
leave
inc
jno
stos
and
out
add
mov
lods
push
pop
add
pop
add
xlat
inc
lahf
insl
pop
repnz
dec
into
fldl
xchg
movsb
stos
in
mov
js
iret
stos
cwtl
xchg
xchg
cli
push
cmp
imull
jg
cmp
jmp
bound
push
adc
pushf
push
pop
or
out
dec
and
cli
into
ss
cmc
rorb
out
in
mov
sub
imul
stos
xor
cmp
into
sahf
scas
and
dec
pop
or
mov
int
in
mov
jecxz
leave
dec
push
pop
jle
fcmovnbe
sub
or
mov
mov
jge
mov
and
pushf
insl
mov
js
adc
pop
mov
sub
shll
aaa
inc
adc
addr16
in
xchg
jg
xchg
imul
jo
or
cmpsl
daa
stos
jmp
cs
mov
cwtl
sahf
dec
ret
pop
cmpsb
dec
lods
jo
jecxz
nop
mov
sarb
fbstp
sarl
mov
rclb
paddw
sbb
inc
icebp
cmpsl
daa
mov
orl
and
fnstenv
int3
roll
fnstcw
inc
pusha
xchg
ret
pop
fdiv
pop
jbe
outsb
push
out
stc
aas
jmp
sti
xbegin
jnp
dec
movsb
ficoms
xchg
lahf
jb
loope
paddw
push
push
inc
mov
shll
in
mov
hlt
bound
push
pop
xchg
mov
mov
pop
mov
fmulp
mov
sub
xchg
test
repz
cmpsl
pop
rcll
mov
clc
sbb
mov
dec
cli
mov
adc
xchg
mov
stc
rcll
xchg
inc
dec
cmovl
jbe
rcr
popa
repnz
push
sub
popf
je
cs
sbb
mov
push
add
inc
sub
jge
gs
and
insb
imul
shlb
jae
pop
push
out
inc
pop
pop
push
enter
subb
inc
add
movsb
call
mov
push
adc
shr
mov
mov
in
or
mov
aaa
notl
adc
add
bound
insl
mov
mov
sub
push
pop
sbb
sub
clc
adc
mov
out
mov
jo
rcll
lock
pushf
pop
mov
mov
das
addl
push
popa
dec
iret
dec
popf
add
cmpsb
pushf
sub
push
lcall
cmc
icebp
pop
jg
jge
fucomip
jbe
and
std
xchg
xor
add
inc
adc
inc
rorb
fdivrp
cmpsb
xchg
sbb
sarl
push
lods
cmpl
push
mov
push
lds
sarb
lods
push
inc
mov
sbb
inc
mov
cld
jle
roll
lcall
sub
das
mov
jge
dec
push
xchg
pop
out
xor
xchg
cmp
pop
xchg
sbb
mov
jnp
clc
and
xchg
ljmp
inc
inc
pop
cltd
pop
inc
cs
jg
lds
in
lea
test
jns
std
je
inc
popf
in
dec
outsl
push
lea
mov
push
mov
sub
push
push
stos
pop
sti
adc
mov
aas
je
sub
jne
out
jae
xor
xor
inc
aad
out
sarb
jne
pop
aas
test
cmpl
dec
repnz
cs
and
mov
scas
lods
sub
add
test
add
pop
inc
sbb
stc
pop
mov
inc
int3
and
or
add
cmp
cmpb
lcall
sbb
xor
mov
int
ljmp
add
nop
or
jle
add
lahf
mov
jge
add
and
push
out
push
lods
pusha
jge
leave
xchg
jle
mov
stc
lret
jecxz
mov
cmp
xor
dec
sub
adc
inc
or
dec
jmp
sub
mov
adc
cmove
ficomps
add
mov
push
stos
xor
es
jne
xchg
push
mov
imul
lret
mov
push
rcl
mov
js
movsb
push
in
mov
shll
sbb
mov
adc
pop
pop
shrl
int3
hlt
rcrb
jb
or
mov
mov
mov
jmp
lds
push
add
insl
inc
mov
cwtl
push
adc
add
jmp
cmp
mov
jmp
in
pop
stos
pop
cld
jp
lock
mov
push
test
lret
pop
or
inc
inc
pusha
cmp
insb
mov
fnstcw
aad
imul
add
pop
cmp
mov
mov
inc
sub
mov
push
xchg
fnsave
cmp
mov
nop
ds
cmp
jmp
lods
jp
jmp
movsb
int3
xchg
loopne
stc
popa
or
pop
xchg
xchg
cmpl
fdivl
jno
leave
inc
aaa
xchg
push
loope
xchg
scas
test
push
in
shl
test
js
std
aam
out
pushf
cmc
cld
imul
pop
addr16
addl
lods
and
mov
mov
stos
scas
jle
sbb
in
movsb
addr16
jno
pop
add
jecxz
jne
shrb
xchg
imulb
cmp
jecxz
cltd
stos
inc
ret
mov
ret
int
push
inc
cltd
mov
mov
pop
mov
mov
addl
stc
pop
arpl
js
pop
xchg
lret
ds
sbb
adc
aad
sub
icebp
mov
pop
clc
int3
pop
jmp
push
dec
sti
repz
lods
push
inc
shrl
int
push
ljmp
dec
push
mov
push
andb
cltd
jge
iret
pop
mov
bound
outsl
les
pop
pop
leave
loopne
jno
dec
cmp
movsb
add
jmp
sbb
ja
lods
aad
movsl
pop
in
ljmp
mov
insl
push
pop
popf
mov
push
mov
pop
fs
adc
adc
cltd
das
sub
shrb
add
scas
aas
aaa
cmp
jnp
sbb
mov
in
xchg
ds
stc
loopne
or
push
std
jo
adc
mov
sub
sbb
arpl
aam
adc
or
arpl
xor
enter
fidivrl
xor
inc
jl
push
orb
dec
jmp
cmpsb
cmp
in
jge
dec
push
andl
lods
jle
nop
std
fsubr
sti
movsl
push
jbe
cmc
std
bound
sbb
sbb
pop
mov
subb
xchg
ret
stos
dec
in
dec
xchg
iret
aad
jns
mov
dec
pop
mov
sbb
andl
das
minps
cwtl
jecxz
ja
nop
jle
pop
std
inc
xor
mov
pop
cmp
pop
mov
mov
or
clc
shlb
pop
sbb
into
dec
xchg
push
clc
shll
shlb
jmp
jecxz
imul
xor
jb
aad
loop
mov
pop
testb
lahf
xor
faddl
push
add
imul
arpl
shl
ret
pop
int3
sub
and
lods
sub
xchg
ss
mov
xchg
mov
dec
in
jno
stos
dec
mov
insb
add
mov
loopne
test
ss
add
jb
sub
sub
push
je
dec
shl
insb
jp
test
pop
jl
out
push
cmpsl
mov
jmp
push
fistl
in
jge
gs
jb
in
aam
idiv
out
call
scas
mov
bound
into
fstpl
inc
dec
mov
mov
int
cmp
loopne
cmpsb
pop
sub
test
ss
dec
pop
icebp
aam
addb
or
test
pop
orb
xchg
js
lcall
repnz
js
popf
and
hlt
xor
enter
jno
xchg
jle
jle
inc
in
call
js
movsl
inc
aam
xchg
scas
lea
imul
cmp
fcoml
push
fdivp
stos
pop
inc
mov
sub
stos
jmp
icebp
xor
stos
mov
cs
sub
outsl
cs
push
mov
add
mov
mov
stos
out
add
push
movsl
dec
roll
cld
xor
pop
getsec
cmp
aas
push
lods
pop
pop
pusha
push
icebp
dec
outsl
ret
mov
stos
hlt
cld
test
aad
and
daa
stos
ss
adc
idivb
cmc
call
sub
das
call
mov
push
dec
mov
outsl
popf
sti
pusha
cld
pop
cmp
inc
dec
pop
cs
push
add
jb
push
std
mov
fbld
and
jbe
out
mov
inc
hlt
test
xchg
ljmp
repz
and
xor
xchg
in
cli
push
movsb
shlb
in
out
dec
lret
pop
pop
in
jne
jbe
sbb
repnz
imul
icebp
lds
in
cmp
xchg
outsl
xchg
test
pop
out
mov
sub
sahf
pusha
gs
jl
mov
popf
outsl
xor
outsl
cld
mov
ljmp
mov
pop
into
pop
or
cmp
mov
jnp
mov
xchg
mov
sub
adc
add
pop
ja
sub
and
sbb
sub
cmp
cmpl
push
stos
out
mov
imull
clc
mov
leave
xchg
and
mov
jno
or
aas
mov
loop
lea
jne
and
and
sahf
add
fcomps
xor
mov
push
out
mov
jno
pop
cld
inc
cmpsl
inc
emms
mov
sub
pop
xlat
inc
and
subb
mov
jb
xlat
pop
mov
push
repnz
fst
shl
xchg
fstpt
daa
pop
bound
push
xor
pop
mov
or
dec
pop
idivl
jb
out
mov
xlat
not
adc
bound
lds
and
or
popf
cmpsl
das
ds
inc
scas
movd
push
sbbl
shlb
pop
inc
sahf
push
cld
loopne
movl
aam
out
mov
cld
adc
leave
mov
fdivp
or
mov
inc
pop
lock
xchg
pop
hlt
xchg
fcompl
mov
aad
inc
cmc
adc
cmp
mov
pop
jae
or
ljmp
xchg
mov
jne
scas
aad
pop
add
cmp
je
test
test
mov
cmp
jns
fbstp
imul
adc
lds
push
cmp
leave
xchg
das
das
mov
push
test
bound
mov
imul
sub
pop
mov
bound
push
jp
out
jnp
fsubp
loop
pop
mov
icebp
gs
int
xor
lods
lea
jp
jnp
xchg
movsl
mov
imul
test
jmp
out
mov
outsb
pop
in
jle
repz
call
lahf
mov
dec
lock
lcall
clc
mov
or
mov
adc
push
cwtl
xchg
push
push
sub
mov
jne
xchg
cwtl
or
mov
sahf
jmp
cli
or
fdivrl
mov
mov
cmc
push
aaa
pop
fsubrl
popf
xor
jg
sbb
inc
mov
xchg
out
out
add
jno
jbe
mov
mov
scas
cmp
out
sbb
lock
pop
imul
dec
int
fdivrp
std
int3
push
and
aad
xchg
jp
push
out
push
add
xchg
or
jne
mull
test
push
rol
std
xchg
in
xor
push
cltd
std
dec
ss
or
inc
imul
repz
lcall
mov
andb
out
scas
pop
aam
xor
push
jnp
aam
jecxz
mov
push
repnz
add
call
cs
xchg
push
int3
sub
xlat
imul
sub
cli
imul
inc
arpl
loope
jge
in
cmp
jb
lret
jp
scas
in
pop
stos
test
push
pushf
inc
mov
jne
jg
fsubrp
dec
jmp
xchg
lock
cmp
call
xchg
or
ds
cmp
xchg
sbb
arpl
push
jle
pop
idiv
hlt
pusha
hlt
or
rorl
cmc
loopw
and
push
lock
nop
adc
dec
pop
or
xchg
das
hlt
pop
mov
imul
push
int3
dec
popf
jmp
push
stos
jb
mov
pop
xchg
imul
sbb
xchg
incb
rorb
push
xchg
rcr
pop
adc
mov
in
cmpsb
ror
sub
insl
repnz
outsb
or
push
dec
iret
in
xor
mov
mov
push
mov
mov
mov
test
ss
mulb
pop
add
adc
dec
push
mov
sub
sarl
into
jmp
pop
scas
jg
outsb
test
int
loop
xchg
insb
xchg
fdivrs
pop
leave
xchg
push
loope
or
sahf
inc
shlb
pop
sbb
mov
call
mov
ljmp
dec
pop
test
int3
out
loope
mov
adc
clc
pop
cmp
pop
push
divl
enter
mov
xchg
mov
fildl
ficoms
dec
stos
out
out
xchg
scas
push
add
push
div
push
mov
push
push
subb
out
test
jmp
xor
or
or
inc
scas
pop
insl
xchg
dec
sub
icebp
sub
mov
push
inc
cmp
scas
stos
dec
dec
sbb
sbb
and
inc
sub
lock
xor
pushf
mov
cmp
mov
xor
das
stc
outsb
dec
push
cli
fucom
mov
loope
jmp
xor
push
mov
clc
clc
fnstsw
dec
icebp
insl
jne
xlat
sbbb
jno
lods
das
stos
clc
dec
cmc
in
jp
rcll
stos
push
jmp
xor
loope
aad
mov
repz
sub
push
aad
sbb
or
add
ss
jg
lods
and
orl
repz
push
das
lods
sbbl
mov
shll
aas
ret
ja
mov
mov
dec
cmp
jp
cmpsl
mov
fbstp
mov
fisubrl
xor
out
mov
sub
push
pop
enter
stos
mov
ss
arpl
add
movb
icebp
lret
jp
sbb
ljmp
js
fcoms
je
mov
xor
lock
lcall
jg
ret
cld
and
cmc
cmp
and
dec
std
aam
jo
pusha
adc
adc
add
cwtl
sahf
movsb
frstor
movsl
mov
pop
push
and
inc
sbb
gs
xor
mov
andl
leave
push
pop
fstpl
mov
lcall
lret
and
mov
hlt
stc
call
jmp
fdivp
lret
loope
data16
scas
mov
sbb
mov
data16
pop
sti
mov
mov
lods
lret
movsb
cmp
fidivrs
movsl
aam
sar
xchg
pop
adc
das
scas
push
jge
sbb
jp
sub
lds
adc
das
lcall
lea
xchg
push
dec
or
inc
sbb
sub
aaa
adc
cwtl
addl
push
and
hlt
sub
rcrl
or
stos
inc
orl
mov
dec
pusha
clc
jge
mov
subb
ficompl
pop
addl
add
popa
lock
mov
mov
push
sti
scas
pop
mov
shll
imul
cmp
repnz
jo
inc
cs
lods
sbb
sub
or
test
jp
test
lods
pop
test
push
loopne
mov
daa
fwait
rorl
xchg
ret
rcrb
or
cmpb
lea
xor
test
shlb
lret
mov
pop
lret
and
mov
lret
pushf
pop
adc
pmulhuw
jnp
pop
mov
mov
push
subb
popa
mov
add
fneni(8087
sahf
pop
bound
add
andl
aas
dec
movsb
les
repz
adc
rolb
bt
inc
leave
data16
xor
push
iret
fwait
add
js
sub
add
add
icebp
rorb
fisttpll
sahf
sub
test
pop
pop
push
cmp
mov
pop
mov
xor
inc
js
into
cmpsb
push
cmp
mov
jno
lock
xor
test
push
rcrl
in
out
mov
and
jb
imul
xor
loope
cwtl
mov
push
shll
ficoml
add
test
inc
mov
out
ss
xor
jmp
rol
pop
mov
add
inc
cld
jg
daa
pop
mov
ficoms
adc
test
or
stos
sub
daa
push
mov
hlt
cwtl
fnstsw
scas
dec
insb
rcr
push
ror
pop
jle
das
push
mov
sarl
popa
data16
mov
loop
push
jp
shlb
mov
dec
jg
pusha
fsubrl
lds
cmpsb
stos
stos
jl
jle
sub
lcall
xchg
dec
insb
lea
out
cmpsl
or
insl
mov
push
mov
pop
ficoml
pushf
es
rcll
mov
aam
push
dec
mov
or
lea
mov
mov
imul
mov
enter
cmp
fucom
cmp
jle
fsubl
xchg
lds
lahf
xor
mov
ljmp
dec
insl
jns
sbb
cmp
fisttpll
int
rcrb
cli
cmp
call
dec
insl
fdiv
sbb
std
je
inc
fadd
fwait
imul
push
cmp
adc
lcall
jl
scas
jg
or
adc
fsubrp
filds
xchg
sbb
jae
dec
ror
cmpsl
push
int3
adcb
mov
pop
push
add
mov
inc
outsb
inc
jp
rcrb
and
adc
out
xor
or
xchg
xor
xor
dec
push
addr16
jno
int
add
jnp
mov
dec
mov
fstp
pop
dec
push
xchg
jecxz
push
test
sub
stos
sbb
jge
sbb
lods
cmp
xor
pop
xchg
cmpb
fnstenv
push
or
mov
cwtl
stc
push
dec
iret
adc
lahf
mov
cmc
lock
les
insl
loop
movsl
xlat
mov
sub
popa
mov
pusha
cli
push
std
jmp
xlat
jg
popa
cmpsl
ss
mov
cwtl
sbb
push
dec
xor
pushf
jg
mov
in
adc
mov
mov
stos
xchg
fimuls
dec
pop
inc
sub
push
sbb
or
pop
arpl
pop
dec
in
mov
in
loop
adc
fldenv
jmp
outsb
mov
ss
loop
sub
lcall
pop
in
push
push
aas
jb
ret
ja
pop
fs
ja
stos
sti
xlat
xor
jb
mov
andl
nop
test
adc
xchg
add
sub
daa
xchg
cmp
sarl
test
xchg
mov
std
pop
jg
pop
add
lahf
rcll
jne
mov
cmp
mov
fwait
mov
mov
lcall
push
pop
inc
movsl
out
mov
xor
sub
xlat
movsl
push
mov
fnstsw
pop
jge
mov
push
int
jns
ret
ret
xor
lret
fiadds
stc
insl
les
xchg
inc
outsl
push
leave
pop
jno
xor
shlb
xchg
push
mov
xor
inc
cmp
test
dec
jb
or
xor
mov
cs
push
mov
xor
push
out
rdpmc
icebp
push
jg
and
cmp
js
icebp
dec
shlb
sarb
aad
popa
nop
lods
xor
stc
push
inc
xchg
mov
insl
insb
stc
lret
outsl
aam
xchg
xor
xchg
mov
inc
pop
test
pop
arpl
call
in
jns
les
cwtl
or
jg
scas
or
fcmovnb
mov
scas
jo
add
pop
movsl
int
mov
movsb
loopne
inc
mov
mov
mov
movsb
je
jnp
push
lods
xchg
movb
out
jmp
cmpl
clc
mov
xchg
sbb
mov
sub
lcall
shrl
and
dec
or
jl
push
cmpsb
xchg
shrb
adc
mov
push
xchg
adc
or
pop
lahf
mov
mov
jae
gs
or
loop
bound
movsl
mov
inc
mov
test
icebp
pop
loop
add
inc
pop
mov
ljmp
mov
mov
add
lret
es
mov
xor
push
ficoml
sub
stc
mov
movsl
xchg
jno
inc
sub
cmp
push
addb
xchg
mov
aaa
adc
sbb
shrl
fwait
and
xchg
jmp
inc
sbb
ds
add
icebp
cld
and
incl
mov
fidivrl
push
or
shll
roll
or
inc
loopne
icebp
ja
mov
imul
jns
test
scas
push
jecxz
ds
sub
sahf
jmp
xchg
xor
pop
leave
and
mov
xchg
rcl
cmp
pusha
mov
out
xchg
lods
pop
sbb
push
jnp
dec
or
pop
push
jb
stos
sbbb
mov
jae
jns
loopne
ja
fwait
dec
xchg
loopne
repz
inc
add
cwtl
sbbl
stos
xor
mov
repz
mov
popa
out
push
fcom
jbe
mov
nop
adc
in
cmp
inc
pop
push
int3
sbb
ret
push
int3
lods
dec
push
iret
xchg
pop
mov
test
lret
xchg
jo
int3
nop
push
cli
dec
xchg
push
jp
movl
es
push
shll
mov
push
push
testl
mov
or
mov
or
sahf
xchg
dec
add
lods
inc
mov
jnp
jae
dec
stc
je
pop
adc
inc
out
aas
or
shll
movsl
sbb
fnstenv
imul
pop
adc
add
pop
je
iret
test
pushf
repnz
xchg
push
test
sbb
nop
sarl
adc
mov
pop
sbb
mov
test
outsb
pusha
sar
adc
jnp
xchg
cmp
imul
dec
testl
adc
and
cmpsl
sbb
lods
mov
jmp
in
stos
adc
popf
sahf
les
pop
decl
add
mov
or
gs
mov
and
test
push
aaa
nop
pop
jecxz
sarb
cmpsb
hlt
mov
cli
stc
lahf
xor
scas
cmpsb
out
xor
ret
mov
pop
add
or
cs
int3
popa
test
popf
cmp
sbb
jnp
sub
adc
jns
mov
insb
mov
pop
out
adc
iret
adc
fwait
mov
fnstcw
in
imul
xor
sbb
ret
push
adc
jnp
int
daa
xchg
mov
cvtps2pd
inc
insb
sbb
dec
fldcw
pop
lret
mov
test
xor
mov
jne
xchg
mov
aas
dec
push
outsl
cmp
lods
mov
mov
imul
cmp
sub
add
inc
outsb
xchg
adc
xchg
jl
rclb
dec
cltd
mov
push
mov
xor
adc
jl
leave
and
movsl
add
pop
sub
je
jmp
and
test
push
fisubs
dec
popa
or
adc
cld
jnp
cmp
dec
sbb
sbb
or
inc
lcall
loop
mov
mov
sahf
push
iret
pop
call
aaa
mov
xchg
pop
ljmp
sti
iret
pop
cwtl
test
dec
push
ljmp
push
test
xor
xor
cwtl
icebp
scas
inc
push
or
fucom
popa
mov
movsb
popa
aaa
xor
sbb
push
repnz
repz
imul
insb
push
xchg
xor
sub
popf
or
testl
les
mov
xchg
pop
pop
in
sarl
jns
xlat
or
jb
push
aam
jmp
daa
cld
pop
sbb
dec
clc
pop
fcmove
lcall
mov
incb
or
pushf
clc
js
mov
in
mov
sub
insl
and
call
scas
in
sbb
adc
xor
pop
inc
or
inc
test
and
xlat
test
je
pop
mov
leave
xchg
gs
adc
xchg
pop
dec
mov
stos
ds
cli
mov
int
cmp
cmp
mov
add
fstpt
fldenv
fistpll
sbb
out
in
dec
jge
nop
nop
je
int
in
add
mov
stc
int3
mov
mov
insl
xor
sub
add
add
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
aad
or
sbb
push
pop
xor
mov
dec
or
outsl
cmc
leave
mov
nop
test
xor
cmp
ret
and
aad
pop
bound
aaa
sub
in
sub
popl
inc
call
add
jmp
call
add
jmp
call
inc
mov
adc
pop
inc
inc
adc
cmp
or
push
xor
dec
adc
adc
pop
and
arpl
add
das
and
pop
add
adc
sbb
adc
insb
cmp
dec
and
and
inc
pop
adc
or
and
pop
and
sub
cmp
or
and
pop
inc
push
and
or
add
cmp
or
inc
or
sub
push
and
sub
sbb
adc
and
adc
add
sub
pop
dec
or
cmp
sub
inc
aas
xchg
scas
pop
ja
adc
and
arpl
sub
sbb
pop
or
add
or
lcall
