int3
add
add
add
add
cmp
add
mov
add
or
add
add
add
call
add
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
add
jo
add
test
add
xchg
add
add
add
pusha
add
add
add
test
add
xchg
add
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
add
add
add
add
add
add
adc
adc
add
pop
sub
or
pop
sub
push
add
daa
push
add
sub
adc
adc
sbb
pop
or
ud2
sbb
inc
sub
or
pop
push
pop
sub
or
adc
or
ud2
sbb
inc
sub
pop
or
sub
or
add
or
daa
or
push
sbb
push
cmp
add
daa
or
push
add
pop
add
push
sbb
sub
adc
push
or
or
adc
adc
adc
or
add
sbb
or
adc
sub
sub
or
or
adc
sbb
daa
adc
sbb
sub
or
or
or
or
pop
sbb
pop
add
adc
sbb
sub
or
or
or
pop
sbb
pop
add
sub
add
or
add
sbb
push
sbb
or
or
or
sub
push
add
or
push
add
daa
or
or
or
sub
push
add
add
or
aas
sub
or
and
sbb
xor
and
and
or
add
push
sub
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
sbb
or
or
jno
or
sbb
add
or
sbb
push
pop
push
sub
xor
sbb
add
push
adc
add
movlps
add
sbb
add
or
or
adc
dec
push
add
adc
add
or
or
pop
cs
sub
and
sbb
or
sbb
lsl
add
adc
adc
adc
adc
adc
sub
sbb
aas
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
es
push
cmc
add
pop
push
or
add
pop
add
add
sbb
add
add
outsb
push
add
or
push
add
daa
or
or
or
or
or
adc
sbb
sub
add
es
adc
or
add
push
pop
es
unpckhps
or
pop
sbb
or
daa
or
push
add
sbb
and
add
sbb
pop
add
dec
and
add
sub
and
adc
add
add
add
add
add
and
or
adc
or
or
sbb
add
add
add
or
push
adc
sub
adc
add
add
add
or
add
add
push
sbb
add
adc
or
add
adc
sub
adc
or
add
adc
add
sbb
push
add
adc
or
add
add
adc
or
add
adc
or
add
pop
add
add
pop
clts
pop
or
add
add
add
add
add
add
add
or
or
or
pop
push
adc
add
or
or
sbb
add
add
inc
push
add
push
sbb
adc
or
push
adc
sub
and
inc
add
or
sub
or
add
add
add
push
or
or
add
and
push
add
push
sbb
add
add
add
add
add
add
add
add
add
add
pop
add
adc
add
xor
or
add
push
pop
push
pop
push
sbb
add
and
or
daa
add
add
pop
add
add
pop
or
push
push
or
pop
add
add
sbb
adc
add
sbb
adc
push
add
adc
pop
push
das
or
pop
push
add
add
or
add
pop
sidtl
push
and
adc
or
push
pop
or
add
add
add
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
cmp
cmp
or
add
adc
pop
or
add
add
or
adc
add
push
pop
push
add
add
add
add
add
add
add
add
add
add
adc
lds
add
sbb
add
add
add
adc
add
or
add
adc
or
add
add
sbb
sbb
add
jle
add
sbb
incl
add
add
add
add
add
shlb
add
push
push
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
add
dec
inc
add
add
add
add
jg
aad
xchg
cld
inc
pop
add
push
sbb
jle
xor
nop
xchg
xchg
test
or
push
inc
loop
add
mov
or
mov
inc
jp
mov
jle
add
cli
jbe
and
push
add
std
int3
stos
and
pop
mov
and
test
and
mov
sahf
pop
adc
pop
sbb
pop
sub
adc
sub
int3
sbb
add
push
pop
test
out
or
xlat
ja
or
add
and
xchg
and
mov
mov
and
push
test
dec
andb
jns
push
cmp
xlat
xchg
xor
push
mov
in
dec
mov
and
push
mov
add
test
sbb
and
enter
adc
push
mov
lock
inc
pop
loopne
daa
inc
leave
push
ret
lcall
dec
loope
or
dec
mov
mov
xor
mov
and
push
sub
fidivrl
add
jnp
dec
movsl
push
mov
push
xor
nop
shll
pop
push
dec
imul
movsb
cmp
cmpsl
adcb
movsl
adcb
adc
cmpsb
es
movsb
shr
mov
sub
fbld
loop
push
imul
xor
dec
adc
cmp
jl
std
cmp
loopne
xor
and
rcll
or
jne
pop
int3
cmp
mov
lock
pop
mov
xor
jne
push
in
in
cmpb
movsl
jmp
or
add
lret
mov
mov
adc
arpl
pop
pop
out
mov
inc
adc
mov
mov
jge
movsl
lock
insb
jno
adc
adc
enter
lret
and
fcomps
aad
inc
or
fwait
mov
loop
stc
push
nop
and
push
imul
lret
push
nop
js
pusha
pop
nop
rolb
movsb
adc
sarb
xchg
and
fdivrs
jmp
int3
add
xchg
jbe
or
add
and
lock
push
inc
push
sbb
subb
jae
dec
cwtl
movsl
jmp
lcall
sbb
push
push
inc
lea
outsl
cmpsb
or
outsb
push
jbe
xchg
jge
mov
scas
add
in
loopne
or
dec
sbb
pop
fcompl
sbb
repz
mov
push
push
loop
or
lds
xchg
add
xchg
scas
sbb
lret
dec
and
scas
xor
jo
and
inc
xor
push
mov
mov
outsb
mov
daa
movsl
inc
mov
jecxz
sub
mov
movsb
xchg
lds
dec
mov
ja
test
sub
mov
mov
mov
inc
aad
lock
lock
cmp
sub
add
test
pop
incb
pop
and
scas
pop
aas
cmp
cmp
or
mov
in
sub
inc
dec
imul
jecxz
popa
jl
inc
cld
mov
subb
test
cmp
jle
in
push
mov
push
jns
and
js
mov
sbb
jns
inc
addr16
sbb
mov
sbbb
push
add
sub
sub
test
push
mov
push
dec
and
addr16
cltd
bound
adc
add
jno
push
gs
inc
in
popf
jno
push
or
xchg
cmp
cmpsb
mov
pop
sbb
inc
icebp
mov
dec
cmp
imul
cmp
cmp
dec
mov
mov
dec
push
push
in
shll
ret
inc
inc
mov
xchg
xchg
dec
sbb
mov
dec
adc
mov
sub
data16
jne
xchg
lahf
sub
hlt
push
push
cwtl
mov
and
lods
mov
push
inc
mov
stos
lds
dec
xor
in
push
push
addr16
adc
and
mov
push
inc
imul
mov
mov
sbb
rclb
and
fistpl
xor
jns
push
mov
pop
add
aas
lock
push
and
jae
sbb
fildl
popl
adc
lret
push
sub
loopne
jecxz
and
adc
jg
lods
mov
dec
andl
inc
push
xorl
std
dec
loop
cwtl
and
push
scas
into
inc
daa
jp
lret
rolb
lret
icebp
xchg
cs
push
add
and
add
xor
and
rorl
enter
xor
inc
iret
mov
rorb
push
mov
xor
aad
push
sbb
fdiv
cmp
sbb
sbb
fdiv
push
ret
and
lret
push
pop
pusha
inc
mov
stos
sub
add
sbb
jp
sub
out
adc
add
adcb
add
mov
jmp
and
push
dec
cmpsb
sub
mov
out
ffreep
push
test
add
push
leave
pop
test
out
enter
jns
mov
psubsw
lahf
test
scas
push
in
adc
sahf
xor
or
inc
pop
push
cmp
dec
scas
xor
pop
cmpsl
dec
sub
inc
aam
dec
sbb
cmp
je
jp
xchg
mov
out
mov
test
lret
lds
push
aam
lret
sub
cmc
lds
mov
mov
pop
lret
mov
and
test
ljmp
or
cwtl
and
sbb
xor
in
xlat
repnz
xlat
inc
aam
popa
dec
jg
adc
int
adc
push
stos
pop
loopne
push
push
movsl
test
xlat
jb
pop
jo
adc
xchg
mov
mov
or
mov
push
sar
insb
loop
xchg
cmc
cwtl
pop
and
cmp
sub
mov
fisubrl
adc
adc
sub
or
adc
pop
mov
mov
pop
pop
pop
lods
stos
sub
in
add
xor
sub
mov
test
push
test
sbb
bound
pop
dec
and
pop
loope
mov
and
scas
or
sub
sub
add
mov
dec
sub
jns
xorb
shll
mov
dec
mov
sti
insl
push
xor
xchg
pop
pop
inc
inc
aas
sbb
cli
fsts
mov
and
scas
dec
sub
leave
aaa
addr16
jg
push
das
bound
sbb
lret
jno
xchg
mov
and
scas
xorb
insb
lea
or
cmp
adc
test
std
test
push
movsb
loope
vunpcklps
sbb
lods
repnz
xchg
inc
inc
inc
test
adc
mov
jle
inc
fninit
jo
xchg
sub
mov
leave
xchg
cli
popf
inc
lcall
jo
aaa
pop
lret
xor
test
mov
and
dec
pop
sbb
and
or
iret
pop
insb
add
dec
cmp
daa
mov
enter
sub
or
popa
in
inc
xor
outsb
sub
pushf
jb
rorl
std
into
mov
pop
push
pop
scas
shlb
cmp
mov
das
sub
mov
push
and
stos
adc
mov
push
outsb
inc
push
mov
adc
sub
cltd
sub
add
cmp
lock
dec
sbb
mov
stc
xchg
sahf
xchg
adc
test
pop
mov
aad
cmp
push
scas
je
les
sarl
in
das
dec
or
inc
scas
xchg
mov
and
push
ss
mov
pop
adc
dec
lcall
js
xchg
mov
inc
pop
xor
aas
xchg
and
sub
jle
popf
shlb
xchg
adcb
iret
loop
pushf
mov
mov
popf
in
push
or
or
jns
adc
sbbl
rclb
filds
das
mov
scas
mov
xchg
aam
sbb
push
jae
mov
mov
cltd
dec
pop
js
aam
sub
sub
ret
ret
push
mov
dec
pop
pop
and
jmp
fcoml
push
mov
push
jae
adc
xlat
jb
xor
lea
sbb
add
cmp
pop
jp
out
sub
ds
push
loope
push
stos
outsb
lds
aad
popa
sahf
cmp
sub
or
adc
ljmp
cmp
xor
jno
fs
aas
popa
inc
test
jg
out
push
xor
jb
sub
dec
aas
xchg
mov
mov
dec
dec
cmp
mov
movsb
dec
and
add
sbb
and
mov
cmpsw
mov
es
icebp
testb
mov
mov
test
out
movsb
jns
sub
into
lds
insb
fnsave
inc
or
xchg
fs
cmp
std
iret
subl
cld
mov
mov
sub
mov
cltd
xchg
insb
adc
inc
fisttpll
mov
jmp
cwtl
xchg
mov
lret
adc
mov
stos
dec
lahf
hlt
add
subb
ja
xchg
pushf
ret
sub
xchg
inc
inc
push
jno
inc
stos
lcall
cmp
fs
subb
sti
mov
js
inc
sbb
fisubrl
clc
mov
cmp
push
jmp
fmull
leave
mov
dec
inc
mov
pop
cs
xor
cmpsb
dec
fldl2e
icebp
fcmovnbe
fsubl
ret
jae
xchg
sahf
sti
lods
mov
fs
mov
sub
mov
cmp
out
mov
in
aaa
and
fildll
add
sub
cwtl
sbb
incb
out
les
sbb
movhps
mov
xchg
push
jmp
cmpsl
bound
add
scas
push
fs
rcrl
ds
or
and
enter
testl
pop
and
outsb
inc
jl
pop
adc
dec
pop
push
lahf
xor
cs
jmp
sti
add
jae
pusha
lahf
dec
scas
mov
add
daa
mov
mov
cli
jne
dec
hlt
cmp
ds
lods
or
dec
pop
movsb
sbb
popf
pop
loope
or
jge
jmp
adc
lahf
mov
inc
or
mov
xchg
loope
push
into
or
inc
inc
and
and
jge
out
hlt
or
pop
mov
inc
sarb
es
int3
jo
push
cmp
inc
in
adc
cmp
rol
sub
mov
xchg
js
add
and
sarb
add
adc
shll
sti
test
jmp
out
mov
dec
shl
addr16
jno
adc
ds
or
and
daa
sarb
jae,pt
push
hlt
dec
scas
mov
and
outsl
lock
add
stos
and
sub
ja
dec
hlt
pop
andb
cmp
inc
mov
enter
in
adc
rcll
sti
add
jmp
scas
mov
jae
daa
les
adc
add
dec
hlt
popf
and
shll
dec
cmp
pop
popf
pop
pop
cmc
or
popa
add
hlt
xchg
test
cmpb
mov
xlat
sub
out
and
into
inc
adc
bnd
push
add
xchg
dec
lahf
push
insl
and
add
pop
dec
lahf
push
push
repz
out
add
cmpsb
out
int3
daa
add
jge
jge
dec
push
mov
dec
repz
jns
push
push
add
rorl
mov
repz
cmpsl
lahf
js
jge
jge
dec
add
cltd
dec
inc
and
imul
loop
inc
pop
jns
push
push
add
adc
mov
repz
cmp
daa
mov
xorl
inc
jge
and
sub
jl
ljmp
adc
nop
stc
adc
das
mov
sub
and
sub
lahf
sbb
add
xchg
push
dec
pop
inc
ficompl
test
in
xchg
pop
xor
add
cmc
leave
call
or
mov
xchg
shll
enter
pop
stc
xor
daa
xchg
ss
add
cmpsb
in
int3
cmpsl
add
jge
jge
dec
int3
add
cli
fistl
mov
sbb
xchg
jbe
pop
fs
adc
adc
push
fsubs
or
lahf
mov
inc
hlt
xchg
pop
test
ds
mov
xor
push
arpl
ror
and
pop
shll
cmpsl
adc
nop
stc
push
aam
xchg
cmpsb
add
jge
or
dec
inc
jge
cli
int3
add
lahf
mov
aam
popf
pop
xor
add
cmc
test
add
mov
test
mov
nop
xor
leave
das
mov
sub
and
leave
test
inc
lahf
jns
sbb
inc
out
push
mov
xor
mov
xor
cmc
mov
sub
arpl
rorb
addr16
enter
pop
stc
je
daa
mov
sub
das
repz
and
js
movsb
dec
jge
dec
lret
dec
add
and
nop
cli
les
add
cmc
mov
cmp
fs
mov
dec
ljmp
pop
and
push
lahf
push
mov
add
jge
or
dec
dec
jge
cli
into
add
lahf
xchg
cli
mov
rolb
xor
cmpsl
lds
nop
stc
movsb
add
mov
sub
repz
add
lahf
push
lahf
push
push
repz
out
add
cmpsb
mov
int3
cmpsl
gs
ds
imul
sub
psrlq
ror
pop
ljmp
sbb
jb
fcmovbe
mov
and
rorl
cli
movsb
fcoms
bound
aam
lds
add
mov
lahf
jns
repz
add
adc
adc
repz
out
add
mov
or
cmc
dec
xor
rorb
or
enter
pop
shll
daa
lds
nop
stc
aam
das
mov
sub
repz
pop
movsb
cs
dec
add
dec
dec
jge
mov
sub
add
dec
dec
jge
cli
int3
add
lahf
pushf
cli
xchg
hlt
popf
pop
xor
add
cmc
sub
movsl
or
hlt
test
and
jmp
push
lahf
adc
inc
out
add
cmpsb
out
int3
cmpsl
add
jge
jge
dec
imul
jge
push
bound
ror
sub
rcll
cmpsl
les
nop
stc
add
das
mov
sub
and
or
lahf
adc
inc
in
push
push
or
sub
test
and
xor
xchg
cmc
or
add
rorb
or
enter
pop
shll
daa
les
nop
stc
and
rolb
and
test
addl
push
jge
cli
int3
add
movsb
cli
inc
hlt
popf
pop
or
add
cmc
hlt
jno
or
imul
pop
inc
rcll
ds
out
add
push
xor
mov
mov
movsb
cmpsl
ret
push
pop
push
sti
inc
aad
inc
xchg
mov
sbb
daa
stos
js
jge
jge
dec
add
cltd
dec
push
lock
int3
cli
je
add
xor
popf
cmc
jmp
ds
mov
mov
xchg
add
repz
jns
push
push
add
push
push
lahf
mov
repz
sbb
cmpsl
stos
adc
cmpl
dec
push
jge
mov
add
ror
mov
xchg
popa
or
mov
stos
ljmp
mov
pop
shll
daa
ret
adc
nop
stc
add
mov
sub
repz
xor
cltd
dec
push
jge
cli
lret
cwtl
add
xor
cltd
pop
leave
xor
cmc
mov
cmp
xchg
popa
or
enter
jmp
add
adc
or
repnz
out
add
jge
or
dec
pop
jge
cli
into
add
lahf
mov
push
jb
push
popa
ret
mov
xchg
aad
mov
sub
das
repz
and
push
add
push
push
lahf
mov
add
ljmp
imul
fs
mov
shr
push
popa
addr16
enter
pop
shll
nop
stc
sub
das
mov
cmp
repz
movsb
jge
dec
add
cltd
dec
pop
lock
lret
cwtl
add
xor
cltd
lahf
mov
pop
lods
sbb
mov
divb
mov
inc
mov
scas
adc
inc
push
and
jno
mov
sub
fs
or
mov
adc
addr16
enter
pop
stc
aad
mov
sub
das
repz
insl
and
js
movsb
pop
jge
dec
lret
dec
add
and
mov
pop
xor
jne
mov
cmp
fs
mov
repnz
pop
push
jmp
add
in
xchg
push
inc
pop
insl
and
push
add
xchg
push
lahf
mov
repz
or
daa
scas
adc
sbbl
dec
pop
jge
cld
imul
cli
ljmp
adc
pop
shl
aad
ror
nop
stc
sub
das
mov
fistpll
repz
add
adc
push
sbb
dec
pop
cli
xor
add
xor
xchg
cmc
imul
add
shll
push
enter
pop
shll
daa
rcll
sti
adc
inc
adc
mov
or
add
jge
jge
dec
int3
add
cli
ret
cwtl
popf
pop
xor
mov
dec
xor
mov
push
dec
subb
and
dec
lods
pop
inc
pop
jns
add
add
xchg
pop
mov
or
mov
adc
jge
dec
add
cltd
dec
arpl
jge
push
or
lret
jl
jmp
rcll
enter
pop
stc
xor
daa
mov
cmp
das
and
xchg
movsb
jp
cmpsl
rclb
add
inc
enter
mov
add
daa
add
jge
jge
dec
int3
add
cli
enter
popf
pop
xor
xchg
cmc
sub
test
fs
mov
mov
subl
lods
pop
inc
pop
jns
add
inc
out
pop
mov
add
cmpsl
mov
adc
jge
dec
add
cltd
dec
data16
push
or
lret
jge
jmp
stos
or
mov
xor
adc
push
enter
pop
shll
shr
nop
stc
sub
das
mov
inc
insl
and
js
movsb
jge
dec
add
cltd
dec
addr16
lret
test
push
enter
pop
shll
daa
rclb
stc
je
das
mov
sub
xchg
and
xor
icebp
das
mov
sub
or
jge
jl
dec
add
fs
rorb
or
jge
and
pop
lahf
pop
repnz
out
add
movsl
out
int3
cmpsl
add
jge
jge
dec
into
add
cli
aam
hlt
xchg
aam
xor
cmpsl
mov
movsb
das
mov
sub
and
dec
lods
pop
inc
lahf
jns
push
add
xchg
pop
mov
std
movsl
add
ds
add
cmc
jmp
pop
or
mov
rcl
addr16
enter
pop
adc
dec
aam
jb
sbb
or
push
cli
in
and
mov
push
cmp
stc
les
das
mov
sub
xrelease
pop
inc
lahf
pop
lahf
cld
push
repz
out
add
movsl
mov
int3
cmpsl
gs
ds
das
add
cmc
mov
sub
xchg
pop
or
enter
pop
shll
daa
mov
aam
das
mov
sub
and
leave
lods
movsb
dec
insl
dec
add
dec
outsb
jge
mov
lods
scas
add
jge
jge
dec
int3
add
cli
fdivr
aam
popf
pop
xor
mov
or
hlt
icebp
dec
jge
add
repz
jns
cli
push
add
rcrl
mov
repz
movsl
add
adc
jge
dec
add
cltd
dec
jo
jge
push
or
lret
jl
jmp
rcll
enter
pop
stc
add
cmpsl
mov
sub
das
repz
and
push
add
push
pop
lahf
push
push
sub
xlat
and
xor
xchg
pop
mov
add
cmc
mov
xor
adc
ror
mov
pop
shll
daa
mov
and
rolb
movsl
add
jge
or
dec
jb
loop
int3
add
lahf
in
hlt
popf
pop
xor
add
cmc
mov
or
hlt
scas
dec
jl
jns
repz
lahf
clc
push
repz
out
add
in
xchg
mov
push
cmpsb
jp
fidivrl
inc
xlat
cmpsl
inc
xchg
mov
in
mov
inc
int3
daa
mov
sbb
dec
je
and
int3
add
call
pop
imul
aad
hlt
mov
or
test
jns
repz
add
push
pop
lahf
idivb
repz
out
add
jge
or
dec
jbe
fidivl
and
xchg
pop
or
mov
call
or
enter
pop
shll
daa
mov
xlat
das
mov
sub
and
jmp
insl
dec
add
dec
ja
sar
lret
xchg
add
and
cltd
pop
xor
add
cmc
dec
call
or
mov
xchg
and
enter
jmp
repnz
out
add
movsl
out
int3
daa
add
jge
jge
dec
into
add
cli
repnz
xchg
xchg
push
push
pop
lahf
push
pop
mov
scas
cmp
stc
sub
das
mov
lahf
jns
repz
add
push
pop
lahf
repnz
add
push
or
cmc
sub
add
rorb
or
enter
pop
shll
cmpsl
mov
movsb
add
mov
sub
repz
add
dec
jnp
and
lret
xchg
add
xor
cltd
pop
mov
pop
loopne
test
mov
enter
mov
test
daa
inc
push
and
sub
fs
mov
loop
adc
push
enter
pop
rol
xlat
daa
mov
sub
das
mov
pop
insl
and
js
movsb
jge
dec
add
cltd
dec
jge
and
lret
xchg
add
xor
cltd
cmc
or
add
rorb
or
enter
jmp
add
xchg
pop
lahf
pop
insl
and
xchg
pop
lahf
out
ds
out
add
jge
or
dec
jg
mov
ror
jge
rcrl
push
enter
pop
inc
adc
out
push
repz
out
add
movsl
out
int3
cmpsl
add
jge
jge
dec
imul
dec
lret
and
rcrl
ror
add
pop
rcll
cmpsl
mov
xchg
les
movsl
add
adc
jge
dec
add
scas
dec
subl
pop
mov
enter
pop
rcll
daa
mov
adc
das
mov
sub
repz
pop
inc
fbld
in
push
fiaddl
xchg
mov
pop
lds
lock
xchg
pop
leave
cs
testb
or
enter
pop
shll
daa
mov
xor
rol
mov
movsl
add
jge
or
dec
cmpl
int3
add
xor
xlat
pop
pop
shll
cmpw
and
jmp
lahf
ljmp
or
pop
sub
push
xlat
and
xor
xchg
imulb
ds
mov
xor
push
pop
or
enter
pop
shll
cmpsl
mov
push
sub
mov
movsl
add
jge
subl
cli
int3
add
lock
popf
pop
test
ds
hlt
shrl
leave
mov
je
nop
shl
add
mov
sub
repz
add
lahf
popa
lahf
call
xchg
add
movsl
mov
int3
cmpsl
gs
ds
mov
add
testb
or
enter
pop
shll
daa
mov
je
das
mov
sub
and
or
dec
add
dec
mov
cli
lret
xchg
add
and
cltd
pop
xor
add
testb
or
mov
in
rorl
inc
jae
pop
fs
push
bound
int
add
jge
sbbl
cli
into
add
add
xor
push
adc
xchg
inc
movsb
fsubs
stc
sub
das
mov
lahf
jns
repz
add
xchg
bound
out
add
scas
mov
int3
loopne
xchg
imulb
add
rorb
or
enter
pop
shll
lds
fnstcw
and
xlat
and
rcrl
push
xchg
pop
mov
fsubs
mov
sub
das
xrelease
and
push
add
adc
mov
add
mov
addl
pcmpgtb
or
mov
push
xchg
pop
addr16
enter
pop
rcl
fsubs
mov
sub
das
mov
outsb
insl
and
js
movsb
jge
dec
add
dec
mov
jge
orl
cli
int3
add
add
xor
popf
pop
sub
add
div
icebp
lods
or
jmp
jns
repz
add
shll
loop
repz
out
add
jge
or
ds
jl
adc
mov
mov
sub
or
jge
jl
dec
xor
fs
mov
mov
push
pop
fistpll
repz
add
dec
xchg
jge
jno
or
jl
in
adc
push
push
enter
pop
stc
adc
daa
mov
sub
das
repz
and
push
add
xchg
fs
pop
in
inc
add
mov
and
add
xchg
pop
xor
dec
testb
xor
fs
mov
xchg
in
adc
enter
pop
shll
daa
mov
mov
shll
js
jge
jge
dec
add
cltd
dec
xchg
lock
int3
cmpsl
pop
xchg
add
pop
shr
xchg
bound
adc
ficomps
jp
and
adc
xchg
pop
xor
inc
fldenv
mov
sub
das
xrelease
and
push
add
push
gs
pop
jmp
inc
add
mov
sub
hlt
xchg
xchg
pop
xor
push
fldenv
or
sub
das
mov
fistpll
repz
add
xchg
gs
fsubrp
fiaddl
lock
pop
sti
in
add
cli
push
in
add
xor
cltd
pop
leave
sub
pop
testb
or
enter
jmp
add
shll
fdivrl
add
jge
or
dec
xchg
jge
cli
into
add
lahf
xor
in
xlat
push
xor
daa
mov
cmp
stc
test
das
mov
sub
repz
pop
inc
lahf
data16
fcoml
inc
out
add
movsl
push
aam
cmpsl
inc
push
mov
lods
sub
fs
mov
lret
pop
addr16
enter
pop
rcll
nop
stc
sub
das
mov
jp
and
js
movsb
jge
dec
add
cltd
dec
lcall
xchg
add
xor
cltd
imulb
ds
push
pop
or
enter
jmp
add
shll
mov
add
jge
sub
sub
xor
rcrl
dec
insb
sub
xchg
test
imul
cltd
dec
add
and
cmp
les
add
testb
or
mov
ljmp
jl
push
jmp
add
push
addr16
mov
add
adc
jge
dec
add
cltd
dec
popf
lock
into
sti
les
cmp
cli
call
xchg
cli
in
cmpsl
push
sbb
adc
pop
shl
fldenv
stc
sub
das
mov
fistpll
repz
add
dec
sbb
cltd
ror
jge
rcrl
jns
repz
add
pop
sbb
cltd
dec
add
and
sar
mov
ja
enter
pop
roll
cmpsl
mov
ss
stc
mov
lods
movsl
add
adc
jge
dec
add
cltd
dec
mov
sti
mov
add
xor
popf
testb
and
add
sub
add
pop
push
inc
out
add
movsl
out
int3
cmpsl
add
jge
jge
dec
insb
add
adc
pop
or
enter
pop
rcll
daa
mov
adcb
iret
cmp
push
add
repz
mov
inc
fistpll
aam
add
shrl
pop
pop
fistl
inc
sti
movsb
hlt
xchg
pop
xor
testb
pcmpgtb
rorb
inc
mov
sub
push
imul
inc
test
push
enter
pop
rcll
cmpsl
mov
cmp
stc
inc
add
mov
sub
xrelease
pop
inc
fildll
rclb
inc
out
mov
pop
or
dec
sti
inc
hlt
xchg
pop
sub
xchg
testb
or
enter
pop
shll
cmpsl
mov
adcb
ret
movsl
add
fiaddl
add
movsl
out
int3
daa
add
jge
jge
dec
into
add
cli
dec
sti
test
xchg
inc
cli
js
mov
adcb
scas
cmp
push
jmp
jns
xchg
push
add
cltd
dec
cmpsl
lock
into
sti
test
push
inc
cli
mov
mov
adcb
scas
cmp
push
or
and
push
add
adc
mov
add
les
lods
inc
push
fs
testb
or
enter
pop
shll
cmpsl
mov
adcb
out
cmp
sub
and
dec
mov
add
dec
stos
jge
cli
lret
xchg
add
and
cltd
pop
xor
imul
call
or
mov
shl
bound
enter
jmp
repnz
out
add
movsl
out
int3
cmpsl
add
jge
das
insb
int3
push
xchg
lea
sub
cmc
mov
cltd
xor
test
cli
lret
xchg
add
xor
cltd
pop
leave
sub
loopne
ds
mov
cmp
xchg
pop
or
enter
jmp
add
push
imul
movsl
add
jge
or
dec
lods
jge
cli
into
add
lahf
pop
sti
fs
xchg
inc
cli
fisubl
cli
in
rcll
cmpsl
mov
adcb
iret
cmp
sub
and
leave
mov
inc
fistpll
lret
inc
out
imul
fistl
pop
sti
push
hlt
xchg
pop
xor
imulb
pop
or
mov
push
shll
enter
pop
stc
add
cmpsl
pop
sub
nop
add
mov
pusha
sti
push
xchg
xchg
pop
xor
shl
sub
pcmpgtb
or
mov
sub
pop
ja
enter
pop
rcll
daa
mov
mov
cli
mov
inc
adc
fdivrs
xchg
jge
or
dec
mov
and
int3
add
lahf
sti
inc
hlt
popf
pop
xor
testb
das
mov
mov
sub
repz
add
pop
insb
lahf
enter
out
add
movsl
out
int3
daa
add
jge
jge
dec
insb
add
pushf
adc
ror
lcall
mov
adcb
iret
cmp
xchg
cmp
out
lods
jge
mov
int
test
mov
lods
cmpsb
mov
adc
mov
arpl
and
push
add
adc
ds
out
add
jge
or
dec
mov
sbb
and
rcrl
push
enter
pop
rcll
cmpsl
mov
cmp
stc
push
add
mov
sub
repz
insl
lahf
push
fildl
xchg
mov
pop
sub
pop
lahf
insb
sti
cli
push
cltd
xchg
add
and
cltd
pop
xor
testb
pcmpgtb
rorb
gs
add
jmp
repnz
out
add
movsl
out
int3
cmpsl
add
jge
jge
dec
into
add
cli
jo
and
flds
xor
daa
mov
adcb
scas
cmp
bound
add
repz
lahf
les
inc
out
outsb
mov
test
fcoml
mov
lods
inc
pcmpgtb
in
mov
sub
push
pop
or
enter
pop
shll
cmpsl
mov
cmp
stc
xchg
add
mov
sub
repz
pop
movsb
lcall
mov
add
add
xor
cltd
pop
sub
testb
or
enter
jmp
add
shrl
ret
inc
out
add
jge
or
popa
in
pop
in
lods
push
xchg
popf
adc
dec
dec
pusha
sub
mov
mov
adc
add
cli
lret
xchg
add
xor
cltd
testb
add
rorb
or
enter
jmp
add
push
outsl
lahf
mov
add
jge
addl
dec
mov
add
add
xor
flds
adc
xchg
inc
in
cmpsl
scas
sbb
mov
push
outsl
lahf
ds
inc
out
add
movsl
out
int3
daa
add
jge
jge
dec
insb
add
cld
rcll
ror
cli
in
pop
rcll
lahf
ds
inc
out
outsl
lock
add
xor
popf
imul
sub
mov
adc
or
and
push
add
dec
sarb
int3
add
xchg
add
enter
pop
shll
daa
scas
adc
mov
adc
mov
jns
enter
loopne
adc
jge
dec
add
cltd
dec
shl
cli
int3
sti
in
add
xor
popf
test
or
sub
das
repz
mov
and
jo
mov
repz
jns
add
jge
xor
dec
ret
jge
sbb
add
ror
sbb
xchg
push
push
push
enter
pop
shll
daa
scas
iret
cmp
stc
cmp
das
mov
adc
sub
imul
xchg
cmpsb
mov
and
mov
lahf
mov
adc
mov
repz
add
adc
jge
dec
add
cltd
dec
lds
jge
insl
push
or
lret
jl
out
push
rcll
enter
pop
stc
push
fsubl
pop
sub
das
repz
jns
mov
xchg
jno
pop
dec
fildl
lock
mov
les
lock
push
les
mov
inc
hlt
cltd
testl
call
or
enter
jmp
add
shll
mov
add
jge
and
dec
jge
cli
into
add
xchg
add
xor
fiaddl
adc
xchg
inc
test
daa
scas
scas
cmp
stc
sub
das
mov
lahf
jns
repz
add
adc
mov
movsl
add
aam
mov
stos
inc
push
mov
call
or
mov
rcl
addr16
enter
pop
stc
xchg
fsubl
pop
sub
das
repz
mov
and
js
movsb
lret
dec
lret
dec
add
and
xchg
sti
mov
cltd
pop
xor
sub
imul
or
mov
pop
out
rcll
sbb
jl
push
jmp
add
shll
mov
add
adc
jmp
add
sbb
mov
mov
mov
mov
inc
mov
out
imul
inc
push
and
xor
dec
call
or
mov
xchg
shll
enter
pop
stc
fsubl
mov
sub
das
repz
insl
and
js
movsb
int
rorb
add
cli
lcall
lahf
add
testl
or
mov
jb
xchg
push
imul
jl
push
jmp
add
xchg
jae
jge
or
dec
into
jge
cli
int3
add
pushf
sti
inc
hlt
popf
pop
sub
add
div
icebp
mov
sub
das
mov
mov
and
push
add
shll
mov
repz
out
add
jge
or
dec
sarb
sbbl
mov
or
push
call
adc
stc
add
cmpsl
shll
mov
add
repz
adc
push
je
push
insb
sub
test
and
xor
lret
sub
testl
or
daa
lods
adc
mov
and
jmp
add
daa
jmp
inc
int3
dec
add
mov
jge
jge
sbbl
cli
into
add
sub
testl
add
pop
sub
repz
lahf
mov
jns
out
add
lahf
idiv
shl
xor
mov
push
data16
aam
push
pop
mov
inc
frstor
pop
mov
inc
int3
daa
ljmp
dec
add
cwtl
dec
aam
adc
xorl
sti
and
into
add
sub
idiv
pop
fildl
sub
sahf
inc
test
cmp
repz
add
push
jne
scas
lahf
jns
out
add
cmpsl
ljmp
dec
add
mov
jge
fidivl
xchg
ds
xchg
push
or
jge
inc
hlt
aad
xchg
push
or
daa
stos
adc
mov
fstpl
shll
dec
push
sub
adc
jmp
ss
add
sub
xlat
jge
jge
sbbl
cli
int3
add
sub
test
push
or
xchg
adc
mov
jbe
lods
push
insl
mov
adc
mov
je
xchg
xor
mov
inc
and
push
push
pop
cltd
aas
push
jne
or
sbb
lds
mov
sbb
xchg
push
sahf
push
xor
hlt
push
or
add
lds
dec
nop
and
jmp
push
lret
std
inc
in
movsl
add
jl
shll
cmc
jmp
pop
pop
sub
call
xor
cmp
sarb
adc
or
js
mov
push
pop
xchg
lcall
push
popf
clc
pop
push
xor
adc
and
incl
or
xchg
stos
cmp
mov
pop
and
jbe
mov
add
add
aad
loopne
cmc
add
fwait
jecxz
shrl
jle
or
push
or
je
rcr
cs
add
rclb
sub
and
inc
inc
test
sbbb
ljmp
dec
sarb
or
sub
addl
sti
orb
loop
adc
push
sub
xor
mov
mov
out
dec
adc
cltd
shrl
or
mov
pusha
mov
repnz
mov
lock
loopne
push
and
sbb
enter
push
push
inc
mov
mov
mov
ret
cmp
mov
sub
inc
cmpsl
mov
mov
push
xor
adc
push
popf
xchg
xorb
pushf
mov
and
mov
add
and
inc
inc
mov
jl
andl
adc
lds
aas
mov
mov
test
push
xor
dec
pushf
arpl
inc
mov
rclb
ljmp
xchg
daa
or
xor
addb
shll
inc
les
fdiv
dec
push
dec
or
and
mov
xor
gs
sbb
add
dec
mov
and
lret
lds
add
fld
and
addl
dec
push
jne
sub
inc
xchg
imul
or
subl
les
test
shrb
mov
in
cs
inc
shll
data16
scas
mov
cmp
dec
jae
cli
xor
jle
xchg
mov
sarb
cmpsb
and
mov
mov
popf
adc
imul
int
fstpl
movsb
push
inc
xor
std
scas
bnd
out
cld
inc
in
jbe
and
or
ds
rcr
sbb
stos
and
lock
cmp
xor
adc
cmp
sub
cmpsl
in
push
xchg
ss
daa
fwait
or
xchg
cmpsb
mov
push
orl
or
movsb
pop
in
mov
outsl
data16
mov
mov
or
ret
or
push
adc
or
cltd
adc
sbb
adc
aam
in
xor
add
jge
pushf
shll
in
sar
icebp
int3
add
mov
push
push
stc
daa
xchg
add
or
add
and
in
jns
dec
es
test
mov
imul
add
mov
mulb
adc
push
push
inc
jmp
xchg
inc
sub
pop
or
leave
mov
mov
lods
sub
pcmpeqb
cltd
pop
test
push
aam
pop
int3
jo
fs
xchg
inc
sbb
dec
dec
jl
lock
stc
xchg
lds
sbb
mov
push
xchg
pusha
cmp
mov
or
popl
lret
inc
jecxz
inc
push
enter
mov
and
xchg
mov
push
out
inc
mov
rcrl
fnstenv
push
loope
or
fcoml
sar
ss
fiaddl
int3
lahf
shrl
push
lcall
sbb
test
jmp
jns
dec
or
mov
js
lods
das
and
push
and
sbb
inc
push
cmc
push
leave
insl
jge
and
sti
push
pop
insb
mov
jge
and
push
stos
push
shrl
int3
xor
cmpsl
mov
sbb
sub
push
jbe
into
or
loopne
fwait
sbb
jl
dec
test
mov
das
mov
mov
mov
and
addb
jb
cmp
cmp
fidivrl
and
pop
test
add
scas
repz
scas
mov
pop
dec
loope
push
xchg
push
lods
mov
and
cmp
sub
push
aam
mov
in
mov
pop
pop
test
scas
cmpsb
push
stos
aas
sarb
test
pop
loopne
in
sbb
daa
mov
add
xchg
cmc
pop
and
xor
test
mov
mov
xchg
or
dec
mov
pop
add
xchg
out
sub
push
xor
inc
xchg
sbb
pusha
or
lahf
orb
mov
jne
or
sub
sub
out
cmpsl
popa
in
fadd
shr
lods
das
movsb
xor
cmpsb
insb
movsl
sub
mov
test
lcall
dec
cmpsb
fcomp
cs
loop
jo
mov
or
xor
pusha
xor
lcall
mov
stos
or
fsubr
add
mov
xchg
pop
push
repnz
lock
inc
adc
xchg
mov
adc
test
ljmp
leave
add
in
popa
sub
js
push
xchg
nop
and
xor
push
dec
push
add
aas
mov
sub
inc
jo
leave
sub
jg
mov
imul
ficoms
push
add
mov
fisttps
stos
add
push
sbb
mov
xor
insb
stos
sub
push
sbb
push
jne
or
cmp
addr16
mov
mov
pop
popf
and
lock
shrl
popf
xor
sub
sbb
cmpsb
orb
mov
js
push
sub
mov
mov
xor
test
mov
add
aam
sti
pop
rolb
xchg
fidivrl
cmp
sti
push
sbb
pop
nop
jle
dec
push
je
jge
mov
cltd
xchg
fwait
icebp
and
leave
lods
test
jmp
fsubrl
adc
mov
push
push
cmpsl
pushf
mov
push
rorl
jo
pop
xchg
xchg
mov
rorl
jg
push
roll
dec
loopne
cmp
imul
dec
icebp
ret
xor
test
dec
xchg
shll
pusha
je
mov
cmp
mov
mov
notb
mov
xchg
mov
or
or
les
gs
ficompl
test
jp
mov
unpcklps
add
fwait
arpl
pop
xchg
lret
in
gs
popa
jecxz
xchg
cmp
cmp
ror
adc
dec
and
out
add
in
sete
leave
jle
lret
lret
ret
movsb
or
mov
test
mov
push
cmpsb
mov
or
pop
test
inc
ret
push
adc
mov
movsb
shrb
sbb
adc
roll
pop
and
es
and
adc
lret
add
cmp
add
icebp
cmp
adc
push
je
imul
lret
push
subb
jnp
lods
push
roll
push
push
jp
ss
push
adc
jmp
das
in
call
xor
push
in
xchg
icebp
push
or
add
jns
pusha
xchg
fcoms
ret
jecxz
and
mov
sbb
adc
fwait
push
ficomps
and
fldcw
popa
divb
negb
rolb
jge
ficompl
mov
xchg
dec
sbb
adc
scas
dec
mov
mov
enter
mov
test
pop
mov
fisttps
filds
daa
out
add
or
push
addr16
add
dec
jecxz
insb
mov
into
out
inc
dec
push
test
pop
dec
and
movsl
mov
xchg
or
bound
mov
aas
mov
aad
mov
data16
sub
testb
iret
or
pop
xor
imul
mov
add
xor
mov
add
addr16
xor
xchg
cmp
mov
rorb
lods
es
pop
ret
mov
call
inc
fimull
push
inc
sbb
ja
test
ja
lahf
imul
gs
fs
xchg
push
xor
mov
push
out
ret
xor
dec
mov
jae
aam
add
pop
dec
or
push
xchg
pop
jo
gs
push
mov
frstor
sbb
bound
dec
sub
inc
cli
sti
adc
inc
pop
add
int3
or
pop
mov
mov
fcoml
dec
add
dec
mov
mov
push
in
jae
push
inc
sbb
push
into
pushf
enter
test
fcompp
int3
lahf
movsb
cmpsb
push
lea
movsl
pusha
inc
lods
clc
divb
ret
cmp
adcb
or
push
sbbl
lret
mov
cmp
inc
xor
inc
mov
scas
inc
xor
lahf
inc
sub
mov
adc
test
adc
test
test
aad
inc
adc
test
adc
test
adc
test
test
popf
test
jne
inc
adc
test
fisttpl
or
mov
xor
mov
data16
out
inc
fistl
xor
aaa
in
mov
add
loopne
les
daa
xlat
jo
out
dec
push
sahf
push
mov
shrl
sub
inc
fmull
adc
and
imul
subb
xchg
pop
push
leave
test
insb
sub
cmp
adcb
rol
fwait
inc
mov
xchg
inc
add
xlat
sbb
add
mov
stos
xchg
inc
add
std
inc
sbb
xor
jbe
inc
dec
xor
lret
adc
xchg
xchg
sub
adc
and
inc
xchg
sub
icebp
dec
cmp
add
clc
inc
dec
or
adc
mov
xchg
test
sbb
das
cltd
adc
push
ljmp
scas
out
or
cltd
xchg
scas
mull
dec
adc
scas
push
stc
and
dec
daa
xchg
sbb
add
dec
shlb
and
push
fs
lcall
or
pop
fcmovne
test
xor
ret
imul
out
mov
push
cmp
mov
gs
add
ret
ds
clc
push
mov
fwait
andl
push
enter
loope
mov
mov
mov
sbb
inc
mov
hlt
push
sub
aam
shrl
push
shll
or
enter
daa
xor
cs
inc
std
adcl
push
jp
clc
scas
add
loopne
mov
testb
fwait
mov
mov
mov
inc
fcompl
popa
cltd
xchg
dec
push
inc
cmc
shlb
mov
lahf
leave
lret
mov
mov
or
stos
mov
mov
mov
push
xor
lret
push
sub
sub
movsb
mov
gs
cmpsb
adc
in
mov
xchg
fcomps
ficoms
pop
ja
dec
xchg
repz
jnp
pop
imul
mov
popa
push
jo
bound
mov
adc
stos
jecxz
pop
lret
lahf
and
shrb
movsl
aaa
fisubrl
lret
loope
movsl
mov
dec
sbb
clc
pop
sbb
imul
xor
mov
leave
pop
lahf
stos
push
jno
bound
lcall
mov
pop
shr
pop
shrw
cmp
cmp
int3
and
call
pop
push
jns
lcall
mov
aam
mov
mov
sbb
xchg
add
pop
js
push
fsubl
scas
fstl
test
mov
xchg
aam
lahf
xchg
leave
test
stos
add
add
fidivs
xchg
mov
dec
lds
sti
orl
out
mov
repz
popa
roll
push
push
mov
faddl
sbb
pop
jno
jge
pop
aad
jge
and
mov
jg
ret
mov
push
gs
test
mov
pusha
and
add
mov
adc
xlat
or
or
xchg
pop
fcompl
inc
inc
push
adc
pop
or
cwtl
inc
test
xchg
mov
daa
push
daa
add
and
jae
pop
add
movsb
jp
insl
sti
push
loopne
xchg
add
mov
xchg
ffree
inc
mov
cmp
std
cmp
pusha
mov
inc
push
lcall
movsb
mov
dec
xchg
fs
lret
xchg
pop
adc
jo
jb
js
ss
in
in
rorb
inc
or
xchg
pusha
jae
jb
daa
mov
lea
enter
push
and
int3
add
stos
pop
ja
popf
mov
shll
lret
pushl
insb
push
or
pop
adc
test
andb
push
imul
mov
push
push
jmp
xor
sub
sbb
mov
push
lcall
mov
pop
loopne
cmp
jo
lds
inc
xchg
mov
pop
fidivrs
ja
in
jl
btr
jne
inc
imul
es
test
jo
dec
pop
push
inc
ljmp
ret
lahf
push
pushf
pop
popa
jg
aas
mov
mulb
mov
ret
jmp
pusha
js
les
pop
mov
sbb
scas
into
xor
mov
idiv
jl
ljmp
aam
scas
jmp
fldenv
mov
add
mov
ja
cltd
inc
push
xchg
test
sahf
adc
add
sar
pop
pop
dec
add
xchg
cmp
inc
add
pop
push
push
rclb
outsw
xchg
and
or
ret
add
mov
mov
ficoml
mov
pop
shlb
jge
int3
add
or
sub
pop
adc
pop
daa
sub
xor
inc
inc
push
push
dec
and
push
mov
sub
or
fwait
adc
mov
mov
or
sbb
pop
aad
adc
rorl
xor
cmp
fildl
clc
pop
sbb
rolb
mov
ds
and
scas
sbb
lds
sbb
shrl
pop
push
mov
cltd
pop
std
push
imul
fstl
adc
fld
call
add
pop
leave
rclb
cmp
ret
sbb
jmp
fisttps
ds
das
pop
fs
test
dec
mov
rclb
xchg
pushf
mov
rcll
jo
cmpsl
adc
popa
les
mov
test
jns
in
mov
or
jne
jns
push
xchg
push
enter
shrl
inc
push
add
push
pop
inc
or
push
pop
lods
push
pop
push
or
cmp
movsb
fsubs
mov
pop
mov
lods
mov
cmc
lds
xchg
push
cwtl
sbb
sbb
adc
test
cmp
scas
adcl
or
jmp
cmp
push
jb
sub
aaa
mov
nop
add
mov
sub
xchg
add
loope
xchg
adc
in
xchg
lahf
push
add
sbb
inc
cltd
js
mov
push
mov
sbb
sbb
popl
cmp
mov
sbb
push
push
xchg
push
fistl
lods
popa
inc
mov
subl
cs
xor
pop
lds
addr16
or
xor
adc
xor
stc
loop
and
std
xor
jge
sbb
mov
cwtl
and
test
ret
push
stc
cmp
lds
dec
push
and
inc
lods
pushf
lods
adc
xor
and
add
mull
test
pop
xchg
fbld
xor
jge
xor
adc
jg
or
adcb
jb
push
cmp
nop
test
ret
sub
outsb
movsb
sub
aas
mov
adc
inc
inc
pushw
inc
daa
lock
sub
pop
xchg
shlb
dec
mov
push
mov
das
and
inc
adc
mov
clc
push
sub
rorl
push
sbb
mov
mov
loopne
aam
shlb
aam
inc
out
std
mov
mov
gs
out
js
js
jge
lret
xchg
sub
mov
lahf
daa
push
or
lock
and
stos
sub
leave
stos
js
and
or
mov
lahf
imul
mov
hlt
sbb
shrl
push
cwtl
ja
xchg
lea
mov
add
ret
decl
sub
adc
je
jmp
mov
repz
stos
cwtl
cwtl
and
mov
push
orb
mov
pop
or
aaa
xor
scas
pop
out
lock
jecxz
mov
mov
decb
js
in
adc
mov
and
push
dec
scas
or
fbld
jmp
lods
jmp
dec
test
lahf
dec
and
negb
jmp
xorl
dec
mov
insb
sbb
sub
mov
arpl
dec
dec
adc
xlat
je
push
popl
and
aas
xchg
and
push
pop
adc
mov
xor
shll
pop
lahf
dec
in
xchg
jmp
in
mov
es
test
sub
out
mov
inc
jae
jnp
jns
imul
mov
lret
loop
pop
rorb
add
xor
adc
sbbb
cmpsl
dec
lret
adc
arpl
in
push
adc
inc
xchg
popa
sub
push
sbb
pop
test
mov
push
stos
jnp
and
pop
mov
mov
mov
jns
test
jne
sbb
jb
cmc
pop
mov
push
subl
xchg
lret
pop
pop
inc
cmp
scas
in
ret
frstor
aas
xchg
sarb
scas
lds
cli
outsb
add
add
push
or
roll
push
adcb
mov
push
mov
mov
sbb
test
or
mov
mov
inc
xchg
jge
push
test
mov
inc
cli
inc
pusha
jge
lds
mov
dec
nop
push
add
or
fildll
push
aaa
lret
mov
dec
fdecstp
cltd
ss
daa
inc
adc
out
aam
enter
push
xchg
inc
cmpsb
aad
jbe
xchg
in
psubq
xchg
or
fs
loopne
jmp
cmpsw
decl
push
sub
out
and
ss
inc
nop
add
cmp
mov
jb
daa
test
inc
jle
push
stc
jo
sarl
jmp
daa
sub
mov
sbb
inc
xchg
push
add
add
mov
adc
rorl
inc
push
stos
movsb
adc
or
mov
test
pop
leave
cmp
mov
daa
adc
aaa
sbb
mov
sub
xchg
dec
pushf
pop
mov
xor
mov
push
jmp
into
insb
pop
cld
push
mov
inc
add
and
cmp
data16
lods
inc
mov
loopne
jo
aas
push
sbb
adcl
adc
jnp
sub
inc
ror
cmp
cli
mov
pop
cmp
xchg
or
outsb
inc
int3
inc
sub
jno
push
xchg
inc
dec
call
sub
sub
shrb
lds
mov
outsl
sub
test
ret
add
mov
dec
fwait
dec
pop
test
stos
loop
sbb
push
cmpsb
sbb
xchg
cmc
test
sbb
pop
add
dec
and
pop
ja
add
sub
pushf
xchg
mov
nop
in
jns
das
sbb
jle
mov
adcb
out
lea
mov
sub
xlat
imul
scas
lds
dec
out
mov
push
sub
lcallw
loopne
jle
jns
test
sbb
in
jmp
jg
mov
lods
push
xchg
pop
adc
dec
xor
mov
lahf
dec
xchg
jne
sbbb
fisubl
and
ds
or
xchg
repnz
add
pusha
mov
or
aas
lods
inc
mov
mov
pop
inc
xchg
ret
stos
xor
enter
push
dec
ret
mov
sub
cs
sbb
mov
or
gs
in
jge
nop
and
arpl
add
pushf
xor
dec
dec
jmp
mov
push
pop
test
jnp
cmp
aas
adc
lret
rcrb
lods
lds
mov
and
mov
pop
adc
pop
push
push
push
je
adc
inc
or
mov
push
push
fildll
in
add
aaa
test
mov
add
mov
push
in
inc
hlt
cltd
aam
or
xcrypt-cbc
cmpsl
aad
pusha
lds
lea
pusha
cmp
out
dec
push
xor
jg
and
and
loope
or
sub
clc
sbb
push
xor
inc
pop
outsl
xchg
icebp
adc
arpl
jo
es
repz
jae
adc
mov
add
inc
sbb
movsl
xchg
insb
push
xor
push
mov
movsl
mov
sub
add
out
xchg
dec
pop
pop
and
popl
shrb
push
les
sahf
or
pop
mov
test
cmpsl
sbb
out
adc
inc
mov
movsl
xor
inc
daa
mov
gs
xor
out
xchg
aad
adc
push
test
cli
jnp
hlt
aad
or
loop
pop
pop
fimuls
and
mov
mov
xor
or
nop
pop
push
pop
mov
pusha
inc
push
sub
inc
test
mov
cltd
or
ds
dec
fcoml
jo
xchg
xchg
sbb
or
iret
shlb
xchg
jmp
mov
dec
inc
jb
jno
or
mov
pop
or
inc
mov
inc
cmp
cmp
sub
pop
test
adc
jl
cmp
add
sub
push
inc
ja
inc
push
cmp
loope
pop
mov
mov
call
or
mov
jp
test
xchg
in
ret
mov
jle
pop
xlat
mov
mov
add
xor
mov
cmp
xchg
lret
lcall
xchg
add
outsb
inc
dec
int3
mov
lods
push
outsb
cs
jbe
in
jle
xor
push
xor
ja
mov
and
sbb
push
mov
stos
xor
or
jns
loope
les
iret
lds
and
and
fwait
mov
fucomip
ret
test
mov
or
sbb
xchg
or
fisubl
pop
and
cmp
into
inc
fwait
cmp
or
add
daa
mov
cmp
add
push
fistps
xor
std
jno
push
ds
rorb
xchg
mov
jl
hlt
les
xor
mov
jp
sti
jbe
xchg
lds
hlt
mov
jbe
adc
lds
es
sub
pop
dec
inc
and
pop
std
jbe
rolb
sarb
push
xchg
sub
xlat
repnz
test
add
adc
stos
loop
ja
jp
sbb
jns
jns
ja
les
dec
mov
sbb
loopne
cs
xor
xorb
mov
dec
ret
and
dec
sub
lret
xor
xchg
xchg
lods
sub
iret
std
mov
mov
out
fistpll
jp
lods
mov
ja
pop
clc
and
sub
mov
pusha
out
inc
mov
shlb
push
jge
into
cmp
sub
bound
xor
and
xchg
or
addr16
and
jmp
jnp
adc
push
ret
fmull
clc
pop
clc
sub
pop
mov
gs
lret
sbb
pusha
mov
shll
rclb
out
fildl
xor
outsl
lret
out
ret
adc
cltd
push
ljmp
adc
test
mov
adc
orl
mov
fwait
imul
dec
dec
mov
xor
cli
iret
push
fdivp
scas
dec
rcll
push
push
sbb
sub
adc
and
jbe
popf
mov
adc
lret
add
je
mov
cmpsb
xor
mov
repz
xchg
or
lahf
sbbl
xchg
mov
jo
es
adc
addb
in
sbb
add
lret
jno
ret
push
gs
scas
outsl
nop
fsubs
jbe
pop
cmovo
negb
mov
add
outsb
xchg
push
mov
pop
pushf
push
test
jmp
inc
pop
shl
push
test
or
loope
mov
adc
enter
roll
pop
add
es
pop
icebp
stos
jp
pop
test
sbbl
jecxz
xorl
sub
cs
xor
xchg
mov
mov
adc
daa
rorb
gs
sub
mov
lods
dec
sub
stos
lds
outsb
mov
push
icebp
push
sub
and
pusha
sub
xorb
gs
ss
test
cltd
xor
xor
xchg
add
js
pop
je
sub
lahf
shrl
or
xor
pusha
xchg
cmp
aam
add
scas
xor
addl
mov
arpl
mov
cmp
stos
add
mov
mov
lods
std
xchg
or
cltd
or
jg
stos
sbb
aas
dec
fnstcw
xlat
out
flds
jb
and
and
cmp
aas
loopne
and
cs
mov
xchg
add
push
sub
jp
push
pop
push
jbe
jge
scas
aad
push
pop
add
shl
rolb
repz
mov
out
int3
add
push
test
flds
shl
dec
inc
or
aaa
shr
gs
call
or
int3
xchg
repnz
adc
scas
aaa
push
pop
lods
adc
add
or
jle
fldenv
loopne
add
and
outsb
or
mov
ret
ljmp
shll
push
mov
adc
and
jmp
mov
rclb
syscall
xchg
and
jne
inc
add
cmp
xor
jp
pop
test
pop
sub
xchg
sar
jbe
and
push
imul
in
add
jno
jg
push
lods
adc
popa
jle
leave
scas
xor
xchg
xchg
mov
dec
jg
aaa
cmp
js
or
shufps
push
pop
out
sub
sbb
sahf
leave
in
fisubrl
pusha
jae
lahf
mov
jl
and
sub
push
and
mov
add
ljmp
mov
stc
jae
dec
popf
mov
pusha
setp
movsl
das
dec
and
push
or
add
or
sbb
popf
sub
mov
out
aad
scas
cmpsb
jno
int
xor
repnz
call
dec
shll
lcall
adc
out
push
xor
int
inc
pop
push
shlb
push
dec
in
lea
mov
mov
sbb
inc
or
mov
fs
sbb
test
mov
insl
mov
push
imul
jns
fstps
sub
movsb
into
outsl
lea
sbb
sarb
xchg
sub
std
inc
dec
imul
adc
je
stos
leave
mov
pushf
rolb
sub
jb
adc
add
jo
sbb
cmc
shlb
push
loopne
inc
repnz
add
push
xchg
cld
mov
mov
add
push
out
mov
mov
into
imul
sbb
sbbl
in
add
push
mov
stos
jb
clc
xchg
in
test
inc
push
push
xchg
clc
aaa
and
cmc
loop
mov
ret
daa
xchg
jnp
cmp
mov
add
fists
movsl
out
outsl
fstpt
out
fwait
push
addr16
xor
jl
add
xchg
pop
sbb
cmpsb
lea
loopne
xorl
lahf
scas
lock
push
cld
adc
inc
inc
inc
ret
pop
add
xchg
add
adc
sbb
mov
std
jns
bound
int3
leave
xchg
push
pop
das
push
nop
xor
jno
out
inc
and
sbb
cwtl
arpl
sub
push
or
gs
push
adc
scas
cmpsb
mov
sub
clc
imul
add
cmp
adc
fmul
mov
mov
scas
or
dec
add
aam
jecxz
data16
sbb
ss
in
mov
sub
clc
das
pushw
sbb
enter
inc
mov
shrb
mov
in
sarb
xor
mov
xlat
fidivs
loopne
or
mov
loop
pop
shl
sar
adc
test
pop
adc
sti
push
jo
outsb
inc
fucomp
sbb
aaa
and
adc
push
aad
sbb
movsb
inc
dec
lea
rorl
sbb
xor
inc
sub
pusha
adc
xchg
inc
fisttpll
movsb
xor
and
in
shrb
arpl
add
inc
adc
or
mov
xor
mov
xor
mov
sbb
push
scas
xchg
sub
dec
ljmp
mov
mov
xor
fnsave
fdivrl
sbb
mov
icebp
mov
lods
jb
cmpsb
int3
leave
stos
sbbb
test
cmpsb
fcomp
jg
cmp
xchg
inc
popf
testb
mov
pop
pop
movsb
orb
test
and
add
xor
idivb
cli
and
loope
sbb
sar
jle
nop
popa
fists
sbb
imul
add
jnp
jl
loopne
js
xchg
add
sub
dec
mov
les
enter
sbbl
test
add
jp
mov
pop
movsb
and
scas
xchg
add
push
jnp
test
dec
jp
and
lods
sbb
jecxz
popl
movl
jl
or
testl
mov
divb
pop
aaa
mov
xor
arpl
and
add
pause
cli
jnp
inc
insl
sub
les
inc
mov
jae
push
fldl
dec
gs
in
sub
hlt
add
es
lds
xchg
push
int
out
dec
xchg
sbbb
lods
or
jb
jae
pop
mov
test
dec
in
sub
jno
push
test
fiadds
lods
mov
aam
mov
push
xor
lock
xor
sub
and
add
shlb
inc
xchg
in
out
inc
jl
repnz
loope
xor
cmpsb
arpl
pop
stc
jo
jg
sbb
cmp
adc
pop
dec
mov
jo
mov
cmp
dec
aaa
xlat
xchg
adc
push
int
fsubr
and
and
cmp
out
fmull
movsb
ss
push
mov
xor
adc
mov
sbb
call
mov
aaa
cmpsl
add
int
aad
rclb
dec
imul
lods
mov
dec
testb
and
pop
push
add
dec
jno
xchg
sub
into
xchg
pop
jbe
call
paddd
stos
cli
cmc
push
rcr
out
pop
and
lea
fcoms
pop
inc
mov
xor
dec
or
shrl
cmp
popa
cld
mov
inc
or
lock
je
loop
xchg
sbb
xor
jle
mov
mov
adc
aad
push
popa
pop
imul
nop
xor
in
mov
test
cmc
pusha
daa
inc
fdivs
sbb
data16
xor
pop
icebp
jb
cmp
mov
imul
add
in
lock
and
inc
jl
mov
popa
subb
sbb
rolb
lea
fimull
sbb
xorb
rcl
or
outsb
test
pop
arpl
mov
push
add
mov
sbb
pusha
adc
adc
add
add
add
add
adc
add
add
add
add
test
and
les
adc
cs
xchg
push
call
enter
xchg
dec
mov
pushf
adc
xchg
and
movsb
push
and
or
jbe
and
subb
dec
mov
sub
adc
or
subb
adc
dec
shlb
xchg
or
mov
dec
sub
and
adc
xchg
pop
subb
push
mov
nop
and
mov
inc
and
mov
cs
xchg
dec
shlb
adc
mov
movsb
and
and
sub
inc
test
sub
adc
mov
push
xchg
je
mov
inc
dec
and
mov
and
or
xchg
add
inc
xchg
sub
mov
push
xchg
sub
dec
push
movsl
mov
push
inc
stos
test
stos
dec
adc
rclb
and
dec
pop
movsl
xchg
sub
adc
push
stos
dec
and
mov
rclb
movsl
mov
stos
dec
pop
jne
sub
adc
push
stos
test
sub
push
pusha
movsl
mov
stos
dec
and
adc
push
pop
test
sub
dec
movsl
mov
push
inc
stos
test
stos
dec
adc
rcrb
and
dec
push
inc
adc
push
stos
dec
and
mov
rcrb
movsl
mov
stos
dec
insb
mov
sub
adc
push
stos
test
sub
pop
jo
mov
stos
dec
and
xchg
sub
mov
pop
test
sub
dec
je
mov
push
inc
stos
or
aad
push
movsb
mov
mov
scas
push
xchg
sub
mov
and
xchg
repnz
sub
mov
push
inc
shrb
push
xchg
inc
stos
dec
adc
dec
adc
xchg
cli
repnz
xchg
sub
adc
inc
stos
dec
and
rolb
adc
xchg
inc
adc
dec
adc
inc
stos
test
or
push
movsb
mov
xor
push
xchg
sub
les
adc
xchg
adc
push
movsb
mov
push
inc
push
imul
push
dec
adc
xchg
sbb
push
movsb
xchg
sub
adc
inc
stos
dec
mov
mov
inc
adc
inc
stos
dec
and
leave
sub
test
inc
stos
sub
push
xchg
sub
adc
inc
stos
test
xor
push
movsb
mov
lret
push
xchg
sub
int
inc
adc
xchg
cmp
push
movsb
mov
push
inc
ljmp
dec
adc
dec
adc
xchg
inc
or
push
inc
adc
inc
stos
dec
and
rorl
adc
xchg
inc
sub
push
dec
adc
inc
stos
test
push
dec
adc
push
inc
dec
sub
stos
dec
adc
inc
adc
xchg
pop
dec
sub
push
inc
push
mov
xchg
inc
stos
dec
adc
dec
adc
xchg
pusha
mov
push
inc
adc
inc
stos
dec
and
fldcw
adc
xchg
inc
stos
sub
push
dec
adc
inc
stos
test
jo
adc
push
inc
lret
push
xchg
sub
fstl
adc
xchg
js
sub
push
inc
ljmp
dec
adc
dec
adc
xchg
orb
push
movsb
xchg
sub
adc
inc
stos
dec
and
loope
dec
adc
xchg
inc
sub
push
push
xchg
sub
adc
inc
stos
test
nop
dec
adc
push
inc
dec
cs
dec
adc
inc
adc
xchg
cwtl
dec
cs
movsb
mov
push
inc
push
mov
dec
adc
dec
adc
inc
mov
mov
dec
adc
dec
adc
xchg
cmpsb
mov
sub
adc
inc
stos
dec
and
jmp
dec
adc
xchg
push
ret
shlb
add
outsb
cmp
in
and
jae
fimuls
push
sub
and
or
cmp
mov
xor
repnz
adc
mov
popa
jecxz
or
fisttpll
xchg
test
sub
xchg
mov
stos
mov
mov
enter
adc
mov
jmp
loopne
in
pop
enter
or
adc
xor
dec
xor
test
and
lret
fisubl
mov
ror
rcl
push
inc
push
add
shlb
push
mov
dec
js
push
insb
jae
sbb
movsl
jno
jae
adc
data16
testl
mov
add
xchg
adc
sti
popa
mov
outsl
pop
xor
mov
push
cmp
scas
add
mov
fistl
mov
adc
mov
rclb
jno
out
pop
mov
int
dec
and
leave
push
fcomps
rolb
push
ljmp
xorl
pop
dec
test
xchg
mov
push
stos
push
mov
add
inc
cwtl
pop
mov
mov
imul
sub
and
mov
subb
xchg
inc
mov
sub
ret
xor
cmpsb
push
xchg
lahf
enter
add
aam
faddl
push
xchg
arpl
adc
lock
sub
ficoms
lods
rclb
xor
lods
test
nop
imul
mov
insb
or
mov
mov
and
outsl
jecxz
test
jae
cli
mov
pop
push
insb
lods
jne
in
ljmp
mulb
adc
mov
lock
sbb
bound
xchg
add
push
and
xor
insl
movsb
mov
pushf
aaa
shlb
dec
rolb
cmpsb
nop
mov
or
jnp
gs
jl
lods
mov
lea
sarb
inc
inc
mov
and
sahf
xchg
test
sbb
sbb
in
or
jo
and
push
pop
stos
inc
mov
mov
andb
jo
insl
sbb
adc
aam
or
jno
sahf
in
jb
add
mov
popa
outsl
rol
xchg
push
ljmp
mov
push
jne
dec
sbbb
adcb
cmc
lods
shll
aad
imul
das
or
stos
rcll
ds
push
dec
push
cmpsb
xchg
mov
or
adc
pop
mov
push
outsb
or
or
or
cmp
orb
add
add
rolb
adc
add
add
add
add
in
cli
and
test
pop
pop
clc
out
test
mov
lods
stos
gs
xor
in
in
lcall
divl
mov
sub
jo
xchg
in
dec
in
jg
dec
mov
loopne
dec
addl
lock
pop
inc
in
cli
aaa
scas
push
push
jno
adcl
pop
cs
ficoms
das
cmp
scas
sbb
into
mov
sbb
lods
pop
sbb
fwait
sub
btc
cmp
xor
stos
inc
pop
mov
cmc
call
out
sbb
sbb
and
call
mov
push
lods
dec
or
push
rorl
ja
jmp
in
mov
mov
imul
jmp
pop
xor
jecxz
cmp
jns
sbb
cld
fildl
movsb
ret
pop
cmpsl
mov
mov
xor
jbe
out
pop
stos
fisubrl
jae
mov
pop
negl
cltd
loop
pop
aaa
fldt
std
lods
into
xchg
lds
imul
jl
inc
sbb
jecxz
mov
vandpd
out
into
cli
mov
cli
sub
lcall
test
push
mov
fisubrs
pop
mov
mov
mov
int
xlat
je
push
loop
pop
scas
sbb
ja
lcall
insb
test
stc
leave
adcl
sbb
mov
cld
out
jb
stos
out
aas
cmp
aas
out
shrb
sub
fucomip
mov
fistpll
int3
mov
pop
fs
jae
mov
add
pop
xor
cmc
mov
jb
into
ret
loope
out
outsb
mul
lea
inc
pop
dec
imul
test
jb
fcmovbe
cli
outsl
sub
xlat
cmpsl
ret
cmp
or
in
fiaddl
mov
daa
mov
pop
popf
dec
mov
xchg
ds
sti
int3
pop
je
sbbl
xchg
sub
push
or
enter
fistps
xchg
in
not
jae
sub
cmp
and
pop
call
jg
lds
imul
jmp
push
and
lea
push
mov
lret
cmp
in
aas
ds
mov
add
push
cld
inc
jmp
xchg
xchg
mov
jp
cmpsb
dec
dec
stc
jnp
cmp
sub
dec
pop
int3
cwtl
gs
mov
xchg
sahf
mov
lahf
push
std
cmpsb
fs
icebp
in
mov
jp
nop
lock
arpl
sbb
dec
scas
movsl
mov
or
dec
push
dec
popa
ja
mov
testl
push
inc
mov
js
sti
repz
negb
dec
fstps
mov
add
xchg
sahf
cmp
pop
pop
and
cltd
push
xchg
dec
and
and
xor
pop
pop
decl
and
sub
int
cmp
xchg
aas
mov
hlt
jmp
negl
shll
imul
sbb
cwtd
xchg
sbb
in
lahf
add
bound
adc
inc
pop
loope
push
sahf
sub
jmp
test
sbb
pop
sub
lea
cltd
fisubs
test
int3
int3
frstor
xorl
mov
cmp
aam
std
in
fbld
pop
scas
lods
inc
outsb
xchg
fists
cli
ljmp
sub
in
xor
mov
out
adc
ret
dec
xchg
cld
ds
cltd
sub
ret
into
fnstenv
jle
sub
popf
xchg
mov
xor
jmp
jmp
arpl
in
clc
push
popf
dec
push
xchg
int
jbe
inc
jge
mov
stc
nop
hlt
notl
and
lds
loop
jmp
ja
jb
mov
cmp
jb
sbb
pop
dec
mov
jno
jne
subl
mov
outsb
xor
mov
sbb
popf
popa
das
into
insb
jg
mov
stos
pop
pop
push
cmp
es
cmp
cs
mov
mov
mov
xchg
lcall
xorb
mov
sbb
jg
and
nop
xchg
mov
push
shld
pop
push
movsb
dec
mov
daa
mov
shrb
fnsave
lea
adc
popf
cmpsb
rorb
mov
pop
push
cld
testb
jne
pusha
out
push
mov
sub
insl
fwait
jmp
mov
xchg
dec
sahf
and
push
mov
sbb
aaa
imul
cwtl
std
dec
inc
lahf
fs
lahf
fstl
sub
sarl
xlat
pusha
push
pop
mov
nop
cld
push
int3
jo
jp
popf
fisttps
mov
in
orl
inc
dec
loop
inc
out
shrl
push
jg
pop
sbb
and
lret
mov
mov
pushf
mov
lcall
insl
jg
lahf
in
mov
test
jp
pop
popfw
add
sub
sbb
fisubrs
lret
sahf
jl
cmp
fmul
push
dec
fwait
push
popa
cmp
jecxz
inc
pop
sti
stc
insl
andl
shll
or
mov
adc
push
xlat
lret
popf
js
ds
sbb
push
pop
jae
jge
cltd
xchg
mov
movsb
adc
mov
pop
rcl
mov
shll
ja
jne
aam
das
in
testl
jle
add
xchg
cmpsb
cli
dec
imul
fstl
leave
cmpsb
pusha
xor
lahf
mov
mov
loop
cmp
rcl
xchg
ljmp
inc
jno
cld
sbb
lahf
cs
leave
cmpsb
insb
pop
dec
mov
adc
jnp
stc
adc
inc
jae
sub
cmc
or
outsb
mov
sub
jne
adc
call
scas
jl
dec
mov
lock
sti
mov
dec
lret
mov
mov
imul
or
enter
movsl
lea
mov
jge
jp
mov
rcr
lret
dec
push
leave
pop
adc
jg
xchg
pop
push
mov
fadd
shrb
inc
ficomps
jle
mov
mov
xor
fucomp
mov
jns
scas
adc
hlt
mov
hlt
lret
aam
loop
mulb
in
mov
scas
inc
aam
xchg
fmuls
mov
jmp
and
outsb
js
psubw
sbb
stos
popa
imul
sbb
inc
push
mov
inc
loopne
xchg
lods
jnp
mov
jmp
sub
ja
in
ja
cmc
jmp
scas
scas
mov
cwtl
fisubrl
push
clc
mov
mull
fimuls
pushf
into
xlat
data16
lds
rcll
push
and
cmpsl
movsb
cmp
jg
out
xor
jb
out
adc
fidivl
test
jae
fsub
pop
mov
sbb
or
shrl
mov
jp
int3
test
dec
jle
shll
aaa
push
cmp
push
in
cmp
nop
andl
outsl
idiv
jge
lea
jmp
xchg
scas
ljmp
pop
sarb
mov
outsb
loopne
and
pop
or
xchg
pop
push
aaa
dec
mov
xor
ja
mov
sub
cwtl
into
push
cli
cltd
jae
pop
loopne
movsl
lods
jg
rep
test
adc
in
and
in
mov
jl
pushf
and
sbb
hlt
dec
inc
jecxz
out
sti
addr16
stos
out
into
scas
dec
lahf
popf
push
aas
mov
jns
gs
mov
cld
and
sub
movsb
jo
leave
les
stos
cmp
inc
inc
das
andps
ds
stos
dec
sbb
testb
cli
hlt
stos
nop
sub
sub
lock
mov
mov
iret
mov
scas
xchg
stos
cltd
or
cmp
enter
hlt
hlt
imul
std
jae
mov
pop
cmp
xlat
mov
jmp
lock
movsb
dec
jl
cmpsb
push
sbb
mov
jecxz
jno
jecxz
lea
mov
cmp
dec
dec
jno
mov
pop
repz
dec
sub
cli
bound
dec
mov
mov
mov
mov
jge
ljmp
dec
test
iret
dec
cwtl
je
fldt
das
shr
pushf
into
xchg
and
cmpsb
mov
std
popf
inc
push
pop
testl
sti
rcrb
js
xchg
loop
fdivr
lret
mov
movsl
pop
rorb
mov
pushf
dec
push
out
out
test
push
fcmovbe
xchg
push
dec
lcall
push
fxch
lcall
cmp
addr16
out
jl
scas
cmp
inc
jb
mov
repnz
dec
sbb
mov
pop
arpl
fstps
fbstp
jecxz
fiadds
ret
leave
sbb
popl
fidivs
mov
inc
xchg
lahf
gs
imul
pop
in
mov
mov
jb
xchg
dec
fdivrl
scas
jge
add
ljmp
pop
inc
jle
pushf
mov
test
push
inc
pop
mov
sub
mov
mov
outsl
or
pushf
nop
idiv
repnz
ja
sbb
pop
xchg
jo
pop
mov
mov
mov
cmpsb
or
cltd
stc
cmc
mov
cmp
mov
ret
pop
pop
jl
std
addr16
xor
out
mov
aas
rclb
les
loop
or
mov
pop
nopl
ret
mul
cmp
xchg
cmpsl
je
pusha
loopne
addr16
lret
mov
lahf
push
fnstsw
adc
mov
inc
lahf
stos
shl
jnp
jg
fadd
mov
test
jmp
xor
idivb
hlt
scas
add
inc
out
pop
arpl
ss
dec
ret
cmc
add
stos
cmpsb
cmp
dec
sbb
arpl
dec
movsb
call
aas
movsl
int3
sub
sbb
jb
jmp
into
scas
rcll
stos
out
push
call
xor
mov
dec
je
ja
lds
jo
mov
mov
xor
out
jmp
cmp
xchg
cmp
push
jp
cmpsb
out
jae
jmp
loop
jle
push
fnstcw
xlat
imul
push
fst
aas
pop
mull
movsl
fdivrp
sarl
rcrl
loop
pop
std
mov
loope
add
mov
pop
mov
out
dec
fnstsw
sub
xchg
xor
push
lahf
jle
dec
mov
mov
fs
aam
mov
or
dec
ret
push
outsl
popf
mov
mov
xchg
pushf
leave
dec
ficompl
xchg
mov
push
into
xor
sti
addr16
pop
push
cli
push
mov
ss
loope
nop
ret
jb
insl
es
mov
std
mov
fsts
cmp
ljmp
push
out
notl
fidivrl
test
std
inc
add
push
pop
mov
push
lahf
stos
stos
movsb
push
bound
fnstcw
mov
decl
mov
insb
or
jno
dec
dec
mov
dec
test
add
repnz
xchg
xchg
lcall
dec
icebp
movsb
push
rolb
mov
in
je
pushf
push
cs
ret
mov
or
and
sub
outsl
js
inc
bnd
insl
mov
push
repnz
adc
cld
fwait
ljmp
and
xor
rol
gs
jns
out
cli
pop
mov
xchg
mov
fldt
cmp
fists
imul
push
bnd
addr16
xlat
dec
enter
cmp
sub
cmpsl
xchg
jmp
into
enter
jle
mov
inc
dec
sbb
sub
add
xchg
sahf
jb
shlb
jb
dec
pop
xlat
out
add
sub
rsm
mov
aaa
loope
push
or
lret
add
jae
les
cmp
mov
jnp
test
sti
pop
jle
add
sbb
into
dec
ja
xchg
lds
js
push
mov
mov
dec
push
mov
mov
sub
scas
nop
inc
inc
out
mov
push
inc
ret
stos
je
sub
stc
lea
mov
or
add
sub
pop
lahf
mov
jp
aas
ret
sarb
inc
add
psubsb
mov
push
push
out
idivl
pushf
pop
cmp
lock
test
jne
es
fmull
gs
gs
loop
mov
lret
pop
cmp
stc
dec
jmp
inc
sbb
inc
cmpsb
out
sti
fsubrs
push
cmp
addr16
add
aaa
pop
xchg
cmpsl
xor
push
fdivrl
lods
and
test
lock
call
mov
enter
sub
cltd
imul
push
inc
add
out
jecxz
sbb
mov
pop
fidivrl
xchg
scas
sti
and
outsl
lret
inc
inc
lret
mov
mov
aaa
aam
xchg
imul
repnz
fbld
dec
jmp
mov
pop
jno
xor
jb
mov
xor
and
cmp
jmp
cli
int
lahf
jg
push
insl
mov
lahf
adc
cmp
popf
std
addr16
jo
lcall
sti
insl
inc
std
cld
mov
sbb
das
push
ret
jns
pushl
popa
fidivl
mov
arpl
adc
fstl
sti
pop
and
cmp
scas
and
out
mov
das
sahf
ja
dec
jecxz
jbe
adc
mov
jl
stos
js
loop
cmp
dec
inc
adc
int3
loope
mov
mov
ja
mov
xchg
aad
xchg
cli
push
push
jl
xchg
lods
ja
dec
fdiv
cmc
pop
mov
jp
idiv
dec
fidivs
aam
sbb
sub
mov
sub
lods
aaa
mov
lcall
cmpsl
sbb
fsubrl
xor
xchg
adc
test
cmc
xor
sbbl
sarb
lcall
ss
repnz
or
push
outsl
fnstcw
inc
cmp
cmp
mov
cwtl
mulb
jbe
cs
or
ss
imul
push
stos
out
mov
or
cmc
xor
push
cmc
cld
ret
inc
add
imul
shlb
fstp
sub
push
dec
fwait
in
mov
mov
sti
stos
xchg
xor
loop
fcmovbe
test
cmc
ja
aad
ficomps
mov
roll
aaa
xchg
jnp
dec
aam
inc
hlt
iret
pop
es
push
dec
fcompl
in
jmp
mov
mov
ljmp
loope
je
xor
notb
mov
out
stc
mov
sbb
fimull
fisubl
stos
pop
sti
aaa
xor
mov
in
out
icebp
dec
add
ja
fisttpl
mov
cmpsb
scas
jae
cwtl
dec
cmp
sub
lea
sbb
les
sub
dec
jle
scas
rclb
hlt
imul
and
mov
fbld
jg
imul
nop
sub
mov
add
scas
stc
and
mov
pop
mov
pushf
popf
lahf
sbb
jmp
xor
jmp
pop
push
sbb
repnz
mov
out
pop
fsubp
lods
or
push
jecxz
cmp
scas
jbe
inc
test
sbb
pop
and
jge
jge
cmp
cmpsl
or
fstpt
push
daa
aaa
sub
and
jmp
repz
pop
mov
and
push
in
jae
push
arpl
in
add
cmp
jno
and
sub
sti
into
cmp
rcr
lcall
cmp
shr
push
aaa
dec
dec
repz
shrb
xlat
enter
sub
ja
pop
mov
out
cmp
jmp
cmova
je
cmp
test
ja
aad
pop
es
cli
shlb
sar
push
scas
pop
xor
jnp
outsl
pop
out
push
rcl
cld
fimull
xchg
dec
and
or
js
shll
out
and
cmp
int3
sub
repz
and
gs
xchg
std
jle
imul
fbstp
stc
hlt
insl
popf
or
int
movsb
jo
sbb
ret
shlb
dec
repz
lret
jno
es
mov
je
xchg
jns
mov
or
mov
sarb
mov
in
stos
pop
ret
fs
jge
cli
sub
jg
addr16
aas
fldt
fwait
je
outsb
lahf
push
loopne
adc
pop
mov
ljmp
dec
ret
dec
iret
mov
out
out
lret
pop
lret
push
sbb
outsl
sete
pop
sub
add
jb
pop
cmc
xlat
sti
cld
rclb
xchg
sbb
push
mov
int
sahf
jle
lcall
jbe
pop
pop
xor
mov
xchg
scas
mov
mov
jecxz
mov
jb
push
jp
iret
fldl
mov
lods
jae
cltd
jbe
or
fcomps
not
inc
jle
pop
push
mov
jno
je
std
clc
out
sti
mov
stc
rol
inc
in
lcall
js
mov
jl
mov
das
outsb
stos
aaa
or
jmp
daa
cli
call
in
fldcw
jp
sbb
dec
xlat
jns
jg
cmpsb
push
cld
or
int3
jne
mov
mov
scas
les
scas
lods
adc
sub
push
clc
loope
xchg
ss
rorb
cmp
scas
bound
sti
into
stos
pop
xor
popf
and
cmp
sub
mov
xchg
aad
clc
mov
data16
pushf
mov
pop
ficompl
movsl
imul
outsb
adc
push
cmpsb
mov
hlt
clc
xchg
adc
inc
repz
mov
iret
xchg
ljmp
cmc
outsl
cmp
mov
cli
inc
cld
pop
xchg
mov
xor
ljmp
popl
pop
ffree
or
and
push
mov
lods
js
imul
or
stos
cmp
cmp
mov
xlat
cmc
lahf
cmp
xchg
sahf
sahf
push
pop
cmp
inc
pushf
in
in
sbb
lock
inc
xor
cld
xchg
mov
ljmp
xlat
dec
cmp
sbb
je
scas
xor
in
cli
cld
dec
dec
cld
out
cs
mov
mov
hlt
ficoml
xchg
loope
and
mov
mov
pop
jle
and
jp
jbe
mov
aas
js
das
es
mov
es
ficoml
adc
jp
cwtl
imul
pop
mov
mov
cmp
mov
dec
into
out
idivl
popf
xchg
add
xor
enter
rolb
dec
sub
pop
push
fwait
cli
xchg
stc
sti
fistpll
stos
xchg
lcall
fldcw
mov
mov
sahf
cltd
stos
xchg
cmp
push
test
push
sti
xchg
mov
mov
or
bound
push
out
dec
jecxz
push
mov
xlat
mov
hlt
push
aas
out
fwait
xor
stos
popf
and
jb
in
jecxz
adc
pushf
xchg
jge
rcr
popa
sub
push
test
mov
out
adc
mulb
mov
mov
sub
loope
cmp
xor
xchg
xchg
or
mov
in
mov
mov
movsb
pop
stos
int3
lcall
jl
neg
push
aas
test
jb
lret
lcall
cmp
arpl
pop
xchg
mov
cmp
and
inc
push
cmpsb
in
mov
sub
jnp
jne
push
jns
scas
jae
nop
shll
dec
jns
iret
pop
repnz
mov
mov
push
push
cld
push
mov
xor
push
xchg
sbb
dec
mov
aaa
cld
sti
inc
pop
out
cli
std
in
inc
ja
repz
movsl
mov
aaa
cld
pop
scas
enter
aam
cmp
sarb
sarb
les
dec
sub
add
insb
xchg
aas
sbb
rorl
mov
jle
in
mov
in
sbb
dec
xor
jp
ss
mov
jb
repnz
cmpsb
push
sti
cs
mov
mov
imul
and
cmp
out
fstpt
mov
les
inc
fwait
iret
sbb
cmc
fld
lea
imul
inc
push
mov
xchg
push
jae
mov
ret
push
push
in
loop
xor
popf
dec
fsubr
mov
unpckhps
outsl
sbb
sarl
imulb
orl
sbb
push
sti
aam
xchg
lcall
pop
mov
cwtl
lea
scas
fisttpl
inc
mov
in
fldl
cmp
mov
cld
push
and
jae
mov
iret
dec
clc
jecxz
in
cmp
mov
ret
inc
cs
pop
sbb
xchg
pop
dec
dec
push
loopne
xor
mov
jg
xor
or
je
sar
push
mov
jo
ficompl
fbstp
pop
push
mov
cmp
ds
rcll
mov
test
outsb
xchg
cmp
fcmovnu
orb
push
sbb
mov
aam
call
jno
sbb
xor
push
sahf
mov
cltd
les
mov
push
pop
jae
xchg
test
loope
xor
aaa
mov
std
push
in
insl
jge
mov
cmp
mov
fs
iret
in
sti
lds
push
in
xchg
sub
jle
in
jle
fdivl
push
pop
stos
push
xchg
pop
ret
mov
cli
mov
sub
bound
call
jnp
scas
mov
inc
pop
imul
mov
jbe
jo
mov
adc
in
daa
pop
mov
repz
lea
pop
mov
dec
mov
pushf
in
inc
bound
sbb
outsl
xchg
xlat
dec
xchg
mov
sahf
sti
idivb
fsubrp
iret
int
cmpsl
enter
xchg
inc
in
mov
jo
push
pop
xrelease
out
jne
daa
int
mov
cmp
stos
repz
inc
xchg
cmp
popa
rol
mov
fwait
cmpsl
pop
fidivrl
or
js
sarb
mov
imul
repz
cmp
or
mov
cli
cmp
inc
hlt
mov
jle
int3
sub
mov
outsl
mov
insb
sub
mov
loope
imul
mov
out
xchg
dec
jnp
mov
insb
cmc
add
jg
add
insl
iret
jmp
mov
test
test
mov
in
scas
adc
dec
jmp
sub
es
xorb
das
icebp
push
jns
std
pop
fistl
outsb
in
inc
scas
xchg
or
adc
mov
loope
pop
loopne
and
pop
lret
pop
js
inc
sbb
stos
test
out
pop
cmp
das
push
sarl
cltd
push
ror
pushf
jl
sub
push
push
inc
fidivl
xchg
push
cmp
xchg
sbbl
stos
int
pop
xor
mov
out
sub
mov
jno
mov
stc
shr
push
and
in
mov
push
and
cmc
sbb
and
jno
lea
cli
sub
jge
ds
outsl
sbb
jecxz
sub
jae
stc
rep
cwtl
and
push
mov
mov
mov
inc
decl
push
jbe
or
shlb
mov
jnp
sbb
insb
mov
outsb
mov
dec
scas
pop
int3
lret
xchg
sarl
in
fwait
pop
jnp
mov
popf
mov
dec
aad
arpl
fildll
inc
mov
rcl
test
stc
jle
rol
scas
fdivrs
jecxz
push
addr16
push
dec
in
mov
jnp
push
pop
or
inc
push
outsl
sub
xchg
mov
sbb
jns
cmpsl
icebp
out
nop
pusha
add
fstpl
shll
mov
sbb
mov
mov
sbb
jnp
mov
data16
fiadds
jge
aaa
jbe
pushf
mov
lea
sbb
stc
frstor
cmp
orps
jp
adc
push
push
mov
cmp
cwtl
fidivs
data16
jmp
or
in
pop
mov
aas
test
gs
add
insb
popf
out
out
jae
cmp
mov
hlt
repnz
jb
popf
idiv
or
pop
cmp
aas
pushl
stc
arpl
push
stos
cmp
cmp
outsl
ljmp
mov
xlat
cmp
leave
std
aam
int3
sbb
nop
out
mov
dec
sub
cmc
jecxz
mov
or
xchg
sub
in
or
stc
mov
jle
lods
sub
jno
push
jg
aad
cmpsb
shrl
xor
xor
cmp
xor
mov
fwait
out
xlat
adc
xchg
decb
in
jbe
cmpsb
cld
sub
cmpsb
lods
xchg
or
ja
xor
push
in
or
popf
inc
outsl
js
sbb
mov
push
test
std
les
cmp
es
dec
pop
sahf
cwtl
ss
pop
mov
leave
mov
push
stc
jb
cmp
sahf
mov
cmpsl
out
sbb
push
mov
sar
roll
xchg
pop
mov
hlt
or
mov
mov
jae
out
adc
call
mov
scas
aad
ficoml
cmpsb
ds
xor
xchg
js
pop
out
mov
inc
mov
dec
xchg
xlat
aad
popa
bound
sub
cmpsl
popa
xchg
pushf
scas
pop
mov
repz
mov
or
shlb
mov
mov
mov
mov
push
aas
lahf
cmp
icebp
cmpsl
dec
pop
in
divb
into
cmp
stos
adc
jnp,pt
pop
adc
push
nop
in
mov
jmp
cmp
imulb
push
mov
or
jle
and
out
pop
sbb
xchg
jo
idivl
icebp
fcmovnu
pop
add
push
lea
insb
fucomp
jbe
iret
in
rcrb
frstor
popf
sub
cmp
mov
mov
rclb
stos
fnstsw
aaa
jmp
jae
mov
stos
gs
repz
lock
in
cmp
jge
mov
push
mov
jbe
test
sbb
xor
add
repz
sub
ja
jp
jl
jne
addr16
jno
stos
test
jne
cmc
aaa
xchg
leave
push
sub
sar
fcmovnu
inc
repnz
fistpll
gs
push
and
mov
out
xor
xchg
repnz
lahf
fs
adc
xchg
sub
test
push
cmp
daa
mov
pop
sbb
inc
mov
leave
or
jmp
insb
cli
out
adc
int3
or
cmovg
push
test
sbb
jle
sbb
loope
and
mov
push
ja
inc
iret
mov
jle
jne
je
call
add
popf
pop
ss
in
dec
push
mov
dec
lods
sbb
mov
jp
pushf
cld
fiaddl
jno
inc
cmp
out
jmp
cwtl
mov
push
clc
mov
and
inc
movswl
xchg
lcall
jp
or
mov
sbb
movsb
push
xor
int
mov
sub
rolb
pop
cmp
mov
lret
mov
mov
cmp
test
push
push
popf
fwait
insb
rorl
dec
inc
mov
adcb
das
adc
aas
mov
lcall
lock
mov
cmc
out
xchg
jnp
inc
pop
lods
fdiv
rol
push
jmp
pusha
dec
mov
dec
inc
loop
ljmp
call
push
es
clc
and
mov
sub
mov
pop
mov
dec
pop
jp
mov
in
arpl
movsl
push
hlt
cmp
push
mov
mov
dec
mov
loopne
jge
jae
push
jmp
lcall
mov
jecxz
xchg
or
int3
in
mov
xor
push
dec
sbb
mov
out
mov
imul
out
cmpsb
cmp
lea
lock
out
stc
xchg
mov
cs
movsl
dec
ftst
lret
lret
jp
and
mov
jo
aas
mov
mov
cli
shlb
fdivs
fidivrl
in
sbb
in
xchg
mov
int3
ret
call
mov
cmp
cmc
mov
lcall
mov
jl
je
out
mov
in
pop
push
imul
jnp
inc
popf
out
arpl
clc
jne
call
pop
outsl
xchg
cmp
js
repz
in
lods
and
sbb
dec
into
adc
adc
outsb
mov
sub
mov
cltd
shll
mov
imul
push
fs
push
popf
insb
aaa
idivb
shlb
pop
mov
pop
aaa
test
in
aam
clc
jnp
out
out
sbb
pop
out
aam
shl
in
sub
xor
mov
test
dec
sbbl
lahf
out
and
in
pop
in
mov
aad
push
fdivrl
jo
mov
mov
sbb
lcall
dec
adc
push
or
inc
adc
lock
mov
cli
call
xchg
mov
dec
je
lret
cmp
std
push
ljmp
daa
dec
pop
mov
mov
insl
xor
stc
push
dec
adc
popa
cmp
fstl
addr16
out
dec
xlat
insl
pusha
stos
ret
jg
cld
jecxz
fbld
jmp
xchg
pop
adc
gs
vmovdqa
lea
mov
dec
std
movsb
pop
insl
test
aas
fimull
dec
fimuls
test
sbb
fnop
lds
fstpt
stc
aad
in
jp
lock
jp
xchg
push
repz
lahf
std
decb
popf
and
rcl
pop
pop
stos
stos
inc
sub
cmp
fcmovnu
int3
cli
das
sub
cmpsb
aam
int
cmp
imul
push
out
fistpll
ds
ror
imul
and
ja
pop
or
ss
mov
cltd
enter
cmp
push
popa
fimull
repnz
push
scas
imul
lods
sub
dec
sbb
gs
mov
and
les
jb
hlt
stos
faddp
imul
mov
daa
fsubrl
insb
xchg
test
push
std
lret
xchg
daa
fcmovne
sbb
loopne
mov
daa
xor
adcl
cmp
dec
xchg
or
adc
fbld
jo
push
das
jne
jne
cmc
cmp
call
xor
aas
push
in
mov
loopne
mov
sti
shrb
lods
insb
pop
mov
cld
push
arpl
pop
lcall
aas
and
sahf
in
aad
adcl
jae
fnstsw
cmp
data16
sbbl
lcall
push
and
fsubl
adc
mov
mov
aad
sub
insb
int3
xor
mov
pop
ljmp
xor
jno
mov
daa
push
hlt
movb
and
std
mov
arpl
lods
rep
mov
shlb
cltd
test
xchg
dec
add
add
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
repnz
add
add
add
jecxz
and
loopne
fwait
scas
imul
loope
test
clc
and
mov
fs
adc
imul
add
cld
adcb
add
cmp
lea
jno
cwtl
mov
push
pop
and
int3
clc
add
push
repnz
xor
test
mov
mov
js
enter
stos
ss
sbb
or
sbb
push
ret
push
roll
inc
ret
pop
mov
and
hlt
lea
mov
sub
push
or
loopne
rclb
sahf
mov
cld
in
push
jge
aad
jnp
and
ss
push
mov
hlt
movl
sub
jecxz
pop
adc
and
or
roll
cld
xchg
inc
sbb
or
jge
dec
aad
fisubrl
loop
test
inc
insl
xorb
popa
mov
xchg
imul
cwtl
cmp
scas
shl
mov
cmpsl
xchg
add
and
roll
xor
fcomip
xchg
push
jg
adc
push
pop
push
push
repnz
add
aas
jns
cmp
pushf
movsl
aam
sarl
adc
lea
fimull
and
sbb
cmp
int3
fildl
xchg
xorb
ds
mov
inc
inc
daa
jl
push
push
test
rorb
cmp
push
mov
pop
add
loop
andl
push
xchg
dec
ljmp
and
jg
repz
mov
scas
es
add
lcall
rcrb
dec
cld
cmp
rcl
lods
lods
cmp
fdivrs
sub
rol
mov
jne
int3
xchg
test
push
lea
inc
jno
loope
adc
testl
adc
push
jp
pop
sbb
fwait
mov
cli
xorb
fnstcw
mov
xor
mov
jmp
fdivrl
dec
sub
sbb
pop
mov
jmp
andps
or
push
inc
adc
js
lcall
in
push
xor
sarl
bound
jnp
pop
add
sub
es
inc
dec
jp
xor
scas
xchg
inc
sahf
xor
push
clc
je
and
loope
addl
sbbl
sub
mov
or
jb
jb
cltd
cli
rol
into
pop
fdivrl
sbbb
clc
adc
shrl
lahf
cli
pop
clc
push
fisubs
into
in
enter
xchg
rcr
cwtl
sarb
sti
cld
dec
out
je
mov
icebp
mov
cmovle
out
aaa
leave
pop
leave
cli
lea
sbb
jmp
stos
sbb
sub
xchg
add
mov
mov
ss
jmp
daa
inc
repz
fsubs
sarb
inc
cmpl
push
movsb
mov
mov
dec
ret
shl
bound
sbb
or
dec
mov
xor
icebp
inc
mov
and
and
jp
bnd
adc
rcrl
adcl
mov
jne
push
jb
rorl
js
mov
xor
pusha
out
mov
das
jp
mov
adc
and
and
es
fimull
mov
xor
cmp
adc
movl
jge
imul
cmpl
mov
out
addb
aam
cmpsl
jmp
push
pop
adc
sbb
data16
fidivs
outsb
or
ret
xorl
addb
aas
inc
push
setl
jg
mov
js
dec
loope
pop
fdivrp
cmpsl
push
dec
xorb
mov
mov
sbb
pop
or
sti
cmp
pop
fcompl
xchg
out
pop
sub
das
aas
ja
sahf
fs
clc
mov
sbb
mov
inc
js
lcall
mov
mov
sbbl
aaa
add
and
cwtl
pop
dec
mov
inc
fwait
sbb
into
in
xorb
stos
cmp
push
loope
pusha
sbb
inc
adc
mov
inc
out
or
dec
test
jb
mov
adc
pushf
dec
mov
loop
adc
inc
fists
repz
sub
dec
dec
loopne
lcall
mov
movb
push
lret
or
push
push
cmp
es
cwtl
sub
gs
push
pop
hlt
lahf
andl
xor
lcall
stos
inc
out
jb
cmpsb
push
sub
pop
js
rorl
xchg
in
je
adc
cmpsb
push
sar
jo
les
js
add
das
iret
das
sub
shrl
sub
stc
pop
je
iret
xchg
adc
mov
sbb
sbb
and
mov
cmp
mov
mov
outsb
stc
adc
dec
sbb
jns
fisubl
or
test
xor
loopne
movd
cmp
adc
xchg
adc
add
gs
pop
orl
xorl
jl
mov
jmp
popa
icebp
es
mov
fbstp
rcr
dec
call
sub
call
and
jnp
ljmp
cmp
push
pop
das
test
lahf
jmp
push
add
rorb
pop
mov
lcall
mov
cmpsb
sbb
shlb
push
jle
push
pusha
std
mov
jbe
adc
inc
pop
pop
scas
out
int
dec
loopne
iret
and
push
in
inc
dec
push
mov
lret
stos
orl
in
push
ret
loope
and
ret
repz
pop
jl
mov
adc
call
fdivl
xchg
int3
cmp
test
mov
mov
mov
add
sahf
or
push
les
repnz
jmp
add
and
xchg
mov
call
sbb
in
or
jno
pop
or
and
sub
mov
jge
push
jae
sbb
ja
repnz
or
imul
pop
scas
xor
gs
jmp
jp
in
fidivrl
mov
dec
push
rolb
mov
mov
aad
scas
xchg
mov
adc
dec
call
pop
mov
fistpll
lods
inc
jp
scas
mov
es
or
ds
faddp
inc
push
pop
lret
dec
stc
loop
sub
sbb
push
cmpsb
inc
cmp
jno
mov
cmp
mov
mov
test
jno
loope
sarb
negl
pop
loopne
or
add
cwtl
movsl
sti
loop
orl
ja
mov
pop
xchg
scas
movsl
adc
ljmp
mov
push
arpl
div
pop
mov
add
sbb
sbb
jecxz
push
pop
sbb
cmpsb
mov
mov
les
ret
or
orl
test
insb
in
repnz
jno
lods
dec
out
popa
aam
push
sub
jmp
mov
lea
xor
enter
bound
pusha
int
dec
push
inc
mov
ljmp
imul
jp
in
jne
test
fisubs
call
cmp
pop
sbb
fbstp
sarb
aad
lahf
mov
mov
push
cmp
pop
ljmp
inc
sub
arpl
mov
addr16
or
pop
mov
jecxz
sub
insb
popa
cmp
push
mov
jnp
outsl
sti
loop
out
imul
push
adc
jp
cmp
int3
aad
and
mov
mov
ficoml
std
inc
ss
outsl
loop
dec
mov
shlb
inc
dec
mov
movsl
mov
mov
out
mov
loope
insl
adc
pusha
rorl
ret
das
mov
bound
mov
cmpsl
xlat
mov
inc
cmp
sub
stos
sub
hlt
pop
cmc
and
int3
mov
add
mov
stos
jo
push
loope
jmp
lcall
adc
test
jecxz
mov
jge
mov
mov
imul
jle
test
jnp
into
lods
xchg
sub
jnp
adc
clc
and
fmuls
mov
mov
daa
outsl
test
and
jecxz
fcoms
mov
dec
mov
add
pushw
adc
xchg
xor
inc
sahf
ds
wrmsr
jp
lods
ds
push
add
xlat
xchg
pop
or
dec
stos
or
ss
pop
test
sub
adc
out
insb
mov
mov
push
pop
shll
or
lock
mov
lods
push
fstpt
outsl
sbb
and
in
mov
xor
int3
sub
and
stos
inc
pop
test
aas
jb
jbe
push
xchg
call
stos
mov
inc
loopne
gs
popf
mov
gs
fnstcw
push
lock
push
dec
out
xchg
daa
pop
aaa
sbb
pop
aam
std
outsl
cwtl
call
xchg
sahf
add
call
jnp
mov
ljmp
rorb
dec
shl
push
push
cmp
add
mov
inc
mov
push
push
andl
jg
in
adc
jae
sub
lahf
fs
sbb
pop
aad
jnp
aas
adc
sub
mov
pop
roll
fldl
sbb
dec
daa
movsl
pop
lock
sub
pop
inc
jle
jle
insb
pop
dec
pop
mov
dec
fwait
mov
outsl
ret
push
jl
inc
fsts
sahf
fwait
xor
dec
and
nop
push
sub
out
bnd
jg
mov
lahf
mov
loope
mov
roll
jg
call
xlat
outsl
jmp
insl
lcall
dec
mov
mov
xor
jns
call
sbb
adc
addr16
sub
loopne
icebp
add
mov
push
xchg
loopne
ret
or
jb
mov
mov
jae
cmp
adc
inc
pop
call
cmp
lods
jmp
lock
shlb
sarb
lahf
push
mov
cli
loope
and
push
icebp
mov
inc
sbb
jp
lods
mov
mov
stos
movsb
pop
adc
adcb
cltd
cmp
sub
mov
leave
mov
jb
mov
inc
jecxz
cwtl
sbb
std
fbstp
imull
lret
fidivl
aas
pop
inc
rcll
adc
insl
rorl
xchg
add
sti
inc
dec
hlt
negb
ja
mov
in
pop
insb
mov
inc
fs
std
cmp
sub
mov
repnz
loopne
xchg
gs
sbb
sarl
ljmp
cmp
adc
jno
in
sbb
ficoml
or
mov
or
sub
inc
outsb
pop
aaa
xchg
jmp
and
lods
jb
jge
dec
test
pop
adc
adc
les
int3
cmp
test
fcmove
adc
and
dec
adc
call
mov
push
imull
jo
mov
cmp
popa
jp
pop
xchg
xchg
add
shl
hlt
push
in
test
sub
rcll
xchg
dec
cld
xchg
shll
mov
dec
int3
fcmovu
and
mov
cmc
lret
pusha
jp
iret
pop
daa
pop
stos
movsl
push
pop
mov
bound
push
xchg
lret
pop
mov
das
out
inc
bound
les
lods
push
mov
mov
testl
or
sub
jmp
sti
addl
mov
pop
ds
int3
aas
icebp
ret
mov
inc
mov
fdivr
ds
add
sbb
or
inc
scas
int3
cmp
sbb
mov
lcall
mov
bound
lock
xchg
xchg
aam
stos
fstpl
or
sbb
loop
adc
adc
pop
push
sub
inc
dec
imul
push
xchg
bound
pop
mov
stos
scas
jp
nop
lock
aas
stc
jno
pop
cltd
packuswb
daa
push
pushf
aaa
inc
cmp
pushf
imul
sbb
pop
int3
xchg
cmpsb
xlat
mov
or
lea
push
imul
arpl
enter
xchg
and
jns
adc
dec
dec
hlt
insl
mov
hlt
test
cltd
jmp
pop
sbb
or
or
mov
mov
fistpl
hlt
push
and
push
aam
out
pop
mov
dec
ret
shlb
test
jl
lds
dec
jmp
aaa
sbb
and
and
lahf
ljmp
adc
vdivsd
cmp
jno
daa
test
xchg
insb
mov
in
add
ss
adc
fisttps
add
push
test
aam
repnz
iret
inc
cli
inc
mov
das
mov
repnz
sahf
or
adc
sbb
andl
inc
out
icebp
sti
xor
iret
jb
dec
dec
mov
lods
mov
cli
jg
outsb
icebp
das
jp
add
jmp
test
sbb
mov
daa
xor
clc
lds
icebp
xlat
pop
xchg
pop
pop
test
andb
popa
pop
push
stc
cmc
ds
pop
aam
xor
jb
push
mov
jecxz
repz
or
jno
icebp
lahf
adc
mov
aad
sub
xorl
dec
aad
sub
ficompl
adc
fcmove
adcl
rorl
lret
inc
in
pop
clc
jbe
shlb
pushf
in
sbb
jae
movaps
sbb
pop
test
js
shr
jno
in
aad
out
cmp
neg
mov
adc
mov
and
mov
xchg
xchg
mov
out
sub
imulb
in
test
lds
sbb
pop
in
sarl
adc
loopne
in
inc
leave
cli
xor
in
sbb
insl
and
scas
rcrb
jmp
sbb
shrl
jp
mov
stos
lods
ret
call
faddl
addl
push
aam
pop
ret
andb
inc
mov
sbb
cmp
shll
in
clc
clc
cmp
cmp
icebp
mov
dec
ds
out
lock
in
adc
pop
jb
hlt
xor
jle
sahf
pushf
mov
cs
aad
inc
roll
dec
out
mov
mov
addr16
inc
mov
data16
stc
push
xor
mov
out
cmp
mov
xor
les
push
adc
push
jl
dec
aaa
pushf
jns
stos
out
leave
lret
dec
or
push
loopne
mul
nop
jnp
lods
cmp
enter
cld
adc
pop
or
adc
fwait
mov
popf
cmpsb
mov
and
mov
ret
pop
sub
mov
fistps
and
mov
fsubrl
mov
pop
pop
rcrb
bound
xchg
pop
or
movzwl
mov
lret
sub
pop
jg
sbbl
bound
xchg
inc
aad
or
loopne
repnz
push
jl
mov
xchg
addb
in
pop
dec
xchg
or
ret
jl
incl
push
mov
xor
cmp
xchg
inc
sub
push
stc
hlt
and
push
stos
jne
pop
cmp
jl
add
scas
sahf
mov
subb
and
out
fildl
xor
sbb
inc
mov
addr16
jmp
xchg
jle
decb
inc
repnz
mov
or
insl
cli
xchg
inc
jbe
cmp
test
mov
es
push
push
out
jmp
cld
mov
and
es
sub
mov
pop
xchg
repz
xchg
push
scas
sbb
push
xchg
cli
sub
fst
push
movb
pushf
mov
inc
push
je
mov
loop
mov
mov
fisubrl
shr
push
imul
lods
jmp
adc
xor
pop
aam
pop
jo
sbb
idiv
lods
in
cmpsb
mov
sarb
add
int
insb
xor
adc
or
pop
cli
int3
or
mov
xor
popa
or
imul
mov
es
popf
push
aad
enter
pop
clc
fldenv
outsb
push
dec
dec
ds
rolb
hlt
leave
cwtl
aas
mov
fldl
js
dec
lods
scas
mov
jmp
shlb
cmc
test
add
lock
call
lcall
ljmp
sub
inc
mov
push
pop
lea
cmp
xor
or
jnp
jmp
inc
inc
aam
mov
lea
cs
mov
fucomp
out
cld
lret
xor
aas
outsl
les
hlt
or
push
lret
xlat
pop
push
cs
nop
loop
mov
fcmovnbe
mov
pop
in
ljmp
scas
pusha
int
jnp
insl
xchg
push
stc
xchg
pop
mov
adcb
xchg
lock
xchg
imul
pusha
dec
das
mov
push
mov
gs
push
pop
cli
jge
pop
xor
in
mov
or
into
xor
lds
insb
mov
dec
testl
push
aam
push
push
adc
add
out
test
push
icebp
into
into
lea
pop
cmp
retw
dec
stos
inc
sbb
or
inc
sbb
divb
dec
gs
cmpsl
test
adc
mov
jge
subb
fildll
loope
cmp
inc
out
pop
inc
adc
jb
fldcw
adc
jge
mov
add
pop
aas
shll
xlat
je
movsb
add
pop
inc
mov
push
fisubrl
inc
mov
xchg
xlat
or
movsb
pusha
cmp
fucomi
jmp
pushf
outsl
aad
mov
jp
or
cmp
lahf
push
out
mov
pop
jne
push
push
adc
pushf
add
pop
scas
mov
xchg
pop
sbb
pop
mov
pusha
xchg
into
js
add
icebp
mov
pusha
mov
leave
xor
inc
push
fwait
inc
xchg
dec
sbb
ret
pop
lock
lods
dec
hlt
pop
sbb
gs
sbb
dec
adc
mov
xor
inc
ss
ds
into
lret
xor
push
dec
test
and
cld
fstpt
xor
xchg
scas
outsb
push
loop
test
mov
push
out
icebp
pop
jns
push
test
jge
inc
or
or
and
das
mov
testb
icebp
scas
adc
lea
mov
cmp
mov
sbb
ds
pop
fisubrs
sbb
in
sbb
sbb
js
fistpll
cmpsb
clc
psadbw
lahf
popf
or
out
fmuls
pop
sbb
jbe
pop
movsl
test
cmpsb
xlat
or
sti
inc
js
pop
int3
cmp
rol
loope
imul
xchg
pop
fnstcw
inc
sub
pusha
or
ss
bound
cli
fwait
lds
mov
outsl
ret
cld
sahf
mov
sub
rcrl
cwtl
fwait
sahf
gs
jge
push
lods
bound
mov
out
jg
sub
jp
aaa
cmp
std
jecxz
mov
imul
pop
divb
and
mov
aas
push
je
loop
cmpsb
ljmp
sti
inc
and
lods
push
jecxz
cwtl
sbb
enter
scas
std
rorb
sub
nop
jl
mov
xchg
xor
mov
adc
shll
hlt
dec
add
jns
sbb
push
and
mov
or
sub
pop
xor
mov
pmullw
fldl
jecxz
mov
movsl
xchg
sub
out
fsts
jns
test
in
and
arpl
addr16
dec
shll
dec
add
cmc
push
dec
imul
lods
cld
enter
inc
jecxz
mov
inc
mov
clc
inc
js
fcmovne
int3
les
cmc
cmp
jg
push
sbbb
dec
mov
jae
lret
in
mov
jg
lods
cli
out
lret
jo
test
mov
out
sbb
pop
stc
pop
cltd
sub
adc
mov
fucomip
mov
push
popa
adc
in
pop
iret
fdivr
or
imul
aad
repz
mov
iret
xchg
and
push
sbb
or
cwtl
das
inc
fnstsw
mov
add
xor
cmp
or
or
pop
mov
jmp
pop
xchg
mov
xchg
pop
test
imul
jo
mov
cli
cmp
adc
imulb
sub
insl
inc
fwait
xchg
cmc
daa
fldt
fst
dec
push
cmp
arpl
fildl
test
mov
andb
jno
pop
movsl
movsl
imul
dec
pop
cli
loope
gs
inc
shrb
add
xchg
in
cmp
dec
repz
mov
data16
lods
shr
bound
pop
mov
fcoms
cmpsb
scas
xchg
cmc
xchg
lahf
sahf
icebp
lret
sarb
and
mov
outsl
ja
insb
pop
imul
aam
test
sti
das
scas
shl
pop
xchg
jno
xor
jle
sahf
stc
sbb
mov
push
stos
nop
push
rolb
adc
sbb
lds
stos
mov
insb
cmpsb
stc
xchg
leave
call
inc
jns
xor
outsb
fsubrl
jbe
add
sub
push
pop
or
mov
mov
test
lods
xchg
pop
inc
jl
rol
jge
pusha
mov
imul
sub
cld
out
popa
pushf
je
push
iret
inc
jbe
pop
xor
jns
jge
mov
stc
test
outsl
xor
push
jb
jecxz
push
es
push
xchg
push
fsubs
xchg
xchg
aad
aaa
int3
call
inc
add
dec
push
dec
outsl
scas
xchg
test
mov
add
dec
inc
mov
jg
xchg
shrl
jne
ficomps
mov
repnz
aaa
push
inc
subl
mov
adc
imul
gs
lods
out
or
lea
cmp
ret
jb
mov
ja
pop
andb
pop
cld
mov
jns
in
out
push
lea
inc
push
push
fildl
stos
or
mov
cmp
test
jmp
sub
stc
sbb
in
xor
jb
dec
mov
mov
pop
add
ds
loope
fstl
fs
out
aad
jmp
lahf
sub
xor
lret
inc
jnp
call
ja
add
aaa
dec
mov
adc
je
xchg
pop
push
mov
sbb
mov
jns
xor
fistpll
jge
hlt
loopne
out
adc
xchg
xchg
dec
lret
push
outsb
dec
ss
pop
jge
inc
lahf
stos
mov
pop
dec
pop
std
icebp
sarb
ss
mov
scas
and
cmp
ja
dec
das
push
jecxz
faddl
bsr
push
add
dec
jmp
out
push
das
dec
mov
dec
filds
mov
push
lods
dec
add
notb
in
jnp
fiaddl
ja
sbb
das
push
dec
xor
in
push
icebp
mov
pop
and
mov
mov
xor
into
test
sarl
cld
pop
mov
iret
fldl
pop
bound
fwait
test
jmp
cld
push
cld
repnz
sub
mov
inc
and
mov
testb
jbe
mov
in
mov
fsubs
cmp
or
inc
and
push
clc
aaa
push
loop
outsb
sub
add
sub
out
adc
sar
test
mov
outsl
jo
cmpsb
push
pop
pop
or
clc
and
mov
push
pop
mov
mov
scas
mov
inc
mov
enter
mov
inc
sub
fwait
movsl
outsb
movsb
movsl
cmp
push
mov
stos
lcall
cmp
cmpl
movsl
xor
daa
fnstsw
mov
xchg
sub
pop
add
add
inc
loopne
adc
xlat
sbb
add
jge
xchg
shll
push
retw
pop
ds
add
aaa
pushf
arpl
loop
cmpsl
mov
aad
inc
lcall
lods
adc
stos
mov
shll
cmp
adc
mov
dec
xchg
and
inc
or
or
sub
sti
push
dec
push
push
xchg
adcb
fstpl
cwtl
sub
push
adc
jns
sub
outsl
adc
mov
lahf
jnp
pop
mov
and
xchg
in
xor
inc
fsubrl
mov
shll
mov
push
mov
jle
test
mov
push
sti
ret
jge
js
stos
inc
leave
dec
dec
add
xchg
icebp
movsl
dec
hlt
adc
adc
dec
loopne
stc
mov
sahf
pusha
cmp
xlat
testl
sti
lods
and
cltd
pop
hlt
les
lds
shll
adc
xchg
adc
dec
mov
push
cmpsb
popa
xchg
sbb
pop
bound
outsb
mov
fdivs
les
mov
sti
inc
jns
call
repnz
je
es
in
adc
inc
push
psrld
aas
jg
aas
scas
or
mov
push
jae
mov
pop
ja
mulb
stc
outsb
mov
dec
sub
xlat
cmp
fwait
dec
imul
scas
movsb
sbb
aas
std
leave
lea
push
jns
stos
mov
scas
pop
hlt
xor
dec
test
push
dec
pop
int3
lret
mov
call
push
scas
in
loop
mov
xchg
push
lods
leave
call
ss
leave
push
fwait
pop
jge
dec
or
hlt
movsl
movsl
lret
adc
and
aas
repz
push
out
stos
mov
testl
shr
mov
jmp
pop
orps
and
iret
or
xlat
jne
movsb
jns
insb
add
ja
hlt
sti
psrld
insb
clc
mov
mov
fwait
mov
or
dec
mov
xchg
loopne
mov
jge
loope
ljmp
clc
test
pop
cmp
lods
cld
imul
lods
sub
xor
adc
mov
testb
into
push
sub
xor
jle
pop
inc
lret
pop
pop
or
loopne
sbb
jmp
push
or
lds
jp
repnz
xor
stc
or
push
das
aas
shrl
orl
stos
sbb
loopne
js
add
ret
jle
xor
test
cltd
roll
inc
insb
push
out
test
add
pop
loop
outsl
fsts
xchg
push
call
jp
push
ds
inc
jge
sahf
or
xchg
icebp
cs
dec
loope
push
or
add
call
fwait
add
stos
dec
xchg
test
inc
and
adc
xchg
stos
push
nop
rcrb
or
push
adc
inc
sbb
jle
mov
das
insb
dec
pusha
clc
jge
mov
subb
ficompl
push
add
clc
pop
cmpl
and
je
cmp
and
arpl
cmc
jmp
ret
mov
mov
mov
cld
sbb
mov
jecxz
or
add
scas
push
inc
or
movsl
sub
cs
pusha
adc
test
int
pop
jmp
orb
dec
add
dec
add
rorl
inc
add
rorl
inc
mov
repnz
sub
pop
or
adc
adc
jecxz
mov
xchg
or
js
dec
or
pop
sbb
lahf
add
cmp
adc
ret
add
xchg
sarl
daa
push
push
pop
mov
ret
add
sub
dec
fisubrl
fnstenv
pusha
jns
and
ljmp
mov
xor
add
add
jmp
inc
ljmp
push
jb
add
dec
movsb
jmp
mov
mov
jmp
jecxz
push
out
cs
adc
cmp
xchg
inc
fsubrl
xchg
dec
mov
outsl
jae
jge
rcrl
inc
mov
scas
push
xor
push
mov
adc
jl
fs
jbe
out
sub
xchg
jge
add
cmpsb
iret
xchg
rcl
test
xchg
mov
or
andb
pop
add
add
dec
mov
lods
or
mov
and
stos
push
xchg
loop
cmc
hlt
push
sub
addr16
xor
cmpsb
stc
mov
mov
rorl
push
xor
clc
add
jge
mov
push
pop
ret
and
fdivp
xor
jno
push
movsb
mov
xchg
push
daa
mov
adc
or
xor
xor
push
jo
cltd
aas
out
scas
outsl
mov
xor
loopne
aas
ja
cwtl
dec
push
push
jb
sbb
icebp
and
and
negl
xor
mov
mov
push
xchg
adc
les
xchg
push
outsb
jno
mov
push
cmpsb
lahf
push
mov
inc
mov
pop
jnp
ss
jno
stos
adc
xor
sti
stos
dec
sahf
push
inc
jne
and
stos
pop
sti
and
mov
mov
cmp
aaa
rorl
dec
pop
aas
jne
leave
jb
dec
imul
fdivs
dec
mov
aaa
mov
pop
sub
xor
stos
pop
shll
xchg
inc
fs
push
clc
into
lret
ds
mov
add
cwtl
mov
stos
dec
leave
sahf
mov
clc
and
pushf
dec
cmp
and
adc
cmp
jne
push
cmp
scas
sbb
xchg
loope
mov
lods
pop
inc
cmc
imul
in
mov
xor
xchg
loope
ficompl
rcrl
ficomps
cmp
out
rorb
scas
inc
arpl
push
push
fs
lret
dec
pop
mov
dec
out
cmp
inc
jbe
aas
test
inc
loope
pop
sub
xorl
je
sbb
out
aas
jge
fisubrs
fstl
xchg
and
ja
push
cld
aam
mov
test
leave
cmp
lret
xchg
pop
fwait
mov
mov
pop
sub
push
stos
cs
movsl
insl
idivb
lds
xchg
scas
xchg
jmp
mov
mov
enter
pop
test
outsl
dec
push
cs
mov
xor
pop
fcoml
dec
adcb
inc
cmpsl
xor
cmp
xchg
fists
xlat
lahf
mov
xor
out
jb
fildl
in
dec
adc
nop
mov
insl
gs
js
mov
pusha
mov
mov
loop
mov
and
lods
mov
mov
in
cmp
out
into
cmpsb
mov
pop
cmp
mov
inc
repnz
xchg
cli
jbe
jecxz
aaa
cltd
cwtl
cld
dec
push
lock
sbb
test
pop
mov
jl
lods
mov
dec
fnsave
inc
test
ss
imul
mov
add
subb
mov
std
mov
jbe
pop
scas
xchg
add
cli
jl
mov
es
repz
mov
ja
mov
dec
jne
cmp
pop
cwtl
lahf
in
mov
and
lock
les
cmp
xchg
xor
inc
push
cmp
int3
jecxz
push
mov
jp
xchg
inc
ss
cltd
pop
pop
cld
sub
dec
push
in
add
out
leave
mov
outsb
sti
ljmp
lods
jae
insb
fwait
test
jbe
das
ds
clc
push
jo
adc
iret
fs
sub
jnp
xor
int
mov
push
sbbb
nop
popf
cmp
push
sub
push
jmp
stos
repnz
mov
fistps
sub
icebp
or
lds
add
in
lret
sbb
mov
insb
dec
fimuls
sahf
dec
pop
fs
lret
jl
cmc
cli
mov
out
push
ret
test
mov
movsl
test
lret
inc
xchg
push
mov
push
scas
push
pop
subb
add
cmp
and
lea
into
leave
in
out
cmpsl
mov
push
clc
sub
mov
sub
outsl
inc
mov
sbb
jbe
jnp
jle
aaa
dec
lcall
cmp
les
cmp
push
push
movsl
push
divl
sbb
sbb
xor
sbb
mov
jle
add
dec
cwtl
shll
imul
mov
sub
std
ret
mov
out
cmp
mov
cmp
mov
repz
lahf
cmp
nop
mov
inc
adc
xor
xor
jg
add
push
push
jns
cwtl
lea
and
pop
shr
pop
push
rclb
xchg
dec
test
out
stos
inc
or
test
dec
inc
subb
dec
ja
mov
pop
push
jbe
add
mov
push
nop
xor
pop
popa
fadd
inc
aas
enter
int3
aad
int
test
addr16
popa
ficompl
pushf
xchg
xchg
cmc
aaa
jmp
test
add
out
jno
sub
pop
in
ficoms
pop
mov
clc
inc
mov
int3
jo,pn
mov
das
shl
arpl
in
inc
pusha
enter
mov
sub
sub
pop
pop
add
imul
lds
cmp
stos
pop
cmp
cmp
loopne
mov
lea
xor
ljmp
push
sub
fisubs
ds
lahf
rclb
and
adc
mov
and
fwait
inc
dec
addr16
aam
push
mov
push
sbbb
and
or
and
xchg
sbb
pop
fisubl
sub
mov
jns
ds
pushf
lret
ficoml
or
imul
fcomp
jns
jg
and
xchg
jns
xor
add
or
add
mov
add
sbb
in
fimuls
push
cmp
pop
push
imul
out
and
adc
mov
jge
movsb
in
sahf
daa
shrb
repz
popf
jle
or
sbb
push
sarl
in
xor
js
cmpb
mov
cmpb
and
stos
fldpi
insl
fwait
add
jne
dec
cs
dec
fsubrl
frstor
cmp
mov
lea
stc
mov
xchg
push
aaa
mov
dec
ljmp
fsin
repnz
pop
shl
jbe
dec
test
mov
iret
xor
xchg
dec
sbb
lret
cld
push
or
or
ficomps
push
cmc
lods
sar
xchg
xor
inc
repnz
cmpb
push
outsb
aas
jns
xor
out
push
xchg
call
cmp
mov
pop
notl
ret
inc
jp
test
add
sbbb
mov
mov
cmp
sub
mov
jg
test
out
cmpsl
std
inc
xlat
dec
aaa
or
jmp
mov
aaa
xchg
dec
adc
sub
ds
push
push
jbe
repz
mov
jle
dec
stos
sbb
cmpsl
or
sbb
dec
cmp
lcall
add
lahf
xor
mov
xor
jmp
push
fwait
push
sbb
sub
fistl
and
sub
push
sti
insb
cld
pusha
mov
lcall
fbld
mov
push
push
daa
pushf
rcrl
inc
add
xlat
push
ficompl
dec
in
stc
mov
test
popf
js
into
mov
dec
mov
inc
xchg
addr16
inc
in
xor
cmp
in
dec
arpl
push
decl
test
cmpsb
pusha
mov
repnz
pusha
test
mov
lock
xchg
popf
or
push
scas
jae
dec
ret
cltd
sarl
repz
push
ret
movsb
mov
pop
xchg
adc
fcomps
out
ss
mov
data16
and
xchg
pop
mov
mov
popf
pop
and
xor
mov
mov
mov
cmpsb
sahf
push
cltd
sti
popf
test
mov
push
loop
sbb
cmp
mov
pop
push
cmp
mov
movsb
push
mov
nop
xchg
sbb
pop
in
pop
shlb
jb
dec
sbb
lds
lcall
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
cmc
sbb
notb
dec
xchg
gs
lea
insb
les
xchg
call
scas
sti
add
mov
add
mov
sub
frstor
jle
and
jmp
incl
jmp
call
add
jmp
call
fisttpll
sbb
pop
das
pop
pop
dec
sub
or
sbb
push
pop
and
push
inc
cmp
push
and
ja
add
push
and
sbb
pop
cmp
daa
or
adc
add
add
pop
push
adc
push
sub
cmp
sub
sbb
or
and
inc
sub
cmovno
xor
sbb
and
or
xor
push
push
and
imul
pop
pop
or
push
adc
or
dec
dec
inc
sub
sbb
pop
and
or
sub
sub
sub
or
imul
fidivl
mov
cmovs
cmp
or
dec
or
es
add
or
add
or
lcall
