mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
pop
add
xor
add
add
add
add
add
add
add
push
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
clc
mov
cld
xchg
out
xor
or
in
insl
mov
ret
cmpb
xor
dec
cmpb
push
repz
into
xor
std
adc
mov
sub
div
ds
pop
and
mov
mov
bound
clc
mov
jmp
into
ret
scas
or
xchg
int
int
mulb
adc
adc
ds
pusha
fbstp
mov
ficomps
or
cmp
jns
dec
nop
cmpsl
mov
mov
add
push
sbb
xor
sub
pop
fwait
sbb
fisubrs
push
sarb
mov
pop
xchg
int
xchg
xor
mov
test
xor
lret
sub
add
neg
jnp
lods
mov
push
adc
rcrb
push
inc
fsubs
fsub
jg
mov
xchg
jle
cmp
mov
pop
repz
aad
ret
int
or
pop
repz
sysexit
int3
scas
dec
dec
fwait
insl
mov
and
mov
mov
int
or
xchg
insb
fs
ficompl
sarl
inc
data16
lock
add
or
adc
mov
inc
out
movsl
mov
mov
lret
out
and
add
push
scas
xchg
mov
dec
out
push
lds
xchg
push
adc
aad
in
out
jns
aam
xchg
sbb
iret
lahf
pop
test
xchg
cmp
lcall
dec
cmp
and
inc
lret
and
lcall
frstor
clc
dec
jbe
nop
addb
xchg
imul
or
xchg
or
and
ljmp
pop
add
cmc
mov
sub
push
mov
lahf
add
or
cltd
cmp
push
sub
daa
sbb
mov
inc
push
orl
loop
cmp
push
jmp
lea
mov
jne
imul
lcall
leave
fisttpll
loopne
mov
mov
dec
pusha
adc
incb
je
ds
lods
nop
pop
mov
.byte
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
clc
mov
cld
xchg
out
xor
or
in
insl
mov
ret
cmpb
xor
dec
cmpb
push
repz
into
xor
std
adc
mov
sub
div
ds
pop
and
mov
mov
bound
clc
mov
jmp
into
ret
scas
or
xchg
int
int
mulb
adc
adc
ds
pusha
fbstp
mov
ficomps
or
cmp
jns
dec
nop
cmpsl
mov
mov
add
push
sbb
xor
sub
pop
fwait
sbb
fisubrs
push
sarb
mov
pop
xchg
int
xchg
xor
mov
test
xor
lret
sub
add
neg
jnp
lods
mov
push
adc
rcrb
push
inc
fsubs
fsub
jg
mov
xchg
jle
cmp
mov
pop
repz
aad
ret
int
or
pop
repz
sysexit
int3
scas
dec
dec
fwait
insl
mov
and
mov
mov
int
or
xchg
insb
fs
ficompl
sarl
inc
data16
lock
add
or
adc
mov
inc
out
movsl
mov
mov
lret
out
and
add
push
scas
xchg
mov
dec
out
push
lds
xchg
push
adc
aad
in
out
jns
aam
xchg
sbb
iret
lahf
pop
test
xchg
cmp
lcall
dec
cmp
and
inc
lret
and
lcall
frstor
clc
dec
jbe
nop
addb
xchg
imul
or
xchg
or
and
ljmp
pop
add
cmc
mov
sub
push
mov
lahf
add
or
cltd
cmp
push
sub
daa
sbb
mov
inc
push
orl
loop
cmp
push
jmp
lea
mov
jne
imul
lcall
leave
fisttpll
loopne
mov
mov
dec
pusha
adc
incb
je
ds
lods
nop
pop
mov
mov
and
test
icebp
es
sub
jle
xchg
xor
inc
psubb
xor
pop
xchg
loop
ret
icebp
xor
mov
addr16
xor
aaa
pop
mov
cmp
and
dec
subl
hlt
sbb
jns
xor
addr16
cmp
pop
aaa
out
cmp
xchg
xor
jmp
hlt
jb
or
mov
sbb
insl
and
test
ss
outsl
cltd
out
pop
inc
aad
fbld
push
push
adc
mov
mov
adc
pop
and
jle
lea
neg
sbb
es
icebp
outsl
jnp
clc
in
jmp
flds
push
stos
andb
or
inc
fidivl
std
pop
sub
cmp
clc
jb
push
mov
mov
leave
cmp
in
lods
push
inc
sbb
aad
mov
inc
enter
das
xchg
sbbb
jecxz
fcmovbe
pop
inc
mov
fdivs
lds
std
jmp
xor
mov
jg
pushf
jns
xor
and
inc
adc
pushf
sub
fwait
and
jecxz
inc
out
bound
pop
pop
cmp
or
fldenv
andb
popf
fwait
les
mov
push
out
and
push
sbb
daa
cmp
and
mov
add
adc
ret
sub
fidivrl
call
ds
enter
mov
cmpsl
das
stos
mov
mov
stc
sti
push
gs
testb
test
insb
cs
popa
loopne
jns
dec
daa
adc
or
xchg
xchg
loopne
adc
xchg
push
in
add
outsb
mov
fstpt
out
shl
call
das
sub
insb
mov
in
test
mov
mov
sbb
hlt
adc
cmp
mov
lods
pcmpgtd
jbe
stos
xor
mov
fsubl
cwtl
gs
mov
out
stos
in
sbb
sub
mov
sbbl
ja
nop
dec
and
in
jp
sbb
into
or
jmp
cmpsl
mov
orl
add
add
aam
dec
xlat
inc
xchg
jnp
push
mov
test
push
mov
mov
pop
es
mov
lahf
adc
pushf
mov
mov
inc
dec
icebp
aam
pop
jecxz
pop
sarl
adc
or
mov
rorb
bound
xor
rcl
or
ljmp
clc
leave
in
lock
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
clc
mov
cld
xchg
out
xor
or
in
insl
mov
ret
cmpb
xor
dec
cmpb
push
repz
into
xor
std
adc
mov
sub
div
ds
pop
and
mov
mov
bound
clc
mov
jmp
into
ret
scas
or
xchg
int
int
mulb
adc
adc
ds
pusha
fbstp
mov
ficomps
or
cmp
jns
dec
nop
cmpsl
mov
mov
add
push
sbb
xor
sub
pop
fwait
sbb
fisubrs
push
sarb
mov
pop
xchg
int
xchg
xor
mov
test
xor
lret
sub
add
neg
jnp
lods
mov
push
adc
rcrb
push
inc
fsubs
fsub
jg
mov
xchg
jle
cmp
mov
pop
repz
aad
ret
int
or
pop
repz
sysexit
int3
scas
dec
dec
fwait
insl
mov
and
mov
mov
int
or
xchg
insb
fs
ficompl
sarl
inc
data16
lock
add
or
adc
mov
inc
out
movsl
mov
mov
lret
out
and
add
push
scas
xchg
mov
dec
out
push
lds
xchg
push
adc
aad
in
out
jns
aam
xchg
sbb
iret
lahf
pop
test
xchg
cmp
lcall
dec
cmp
and
inc
lret
and
lcall
frstor
clc
dec
jbe
nop
addb
xchg
imul
or
xchg
or
and
ljmp
pop
add
cmc
mov
sub
push
mov
lahf
add
or
cltd
cmp
push
sub
daa
sbb
mov
inc
push
orl
loop
cmp
push
jmp
lea
mov
jne
imul
lcall
leave
fisttpll
loopne
mov
mov
dec
pusha
adc
incb
je
ds
lods
nop
pop
mov
mov
and
test
icebp
es
sub
jle
xchg
xor
inc
psubb
xor
pop
xchg
loop
ret
icebp
xor
mov
addr16
xor
aaa
pop
mov
cmp
and
dec
subl
hlt
sbb
jns
xor
addr16
cmp
pop
aaa
out
cmp
xchg
xor
jmp
hlt
jb
or
mov
sbb
insl
and
test
ss
outsl
cltd
out
pop
inc
aad
fbld
push
push
adc
mov
mov
adc
pop
and
jle
lea
neg
sbb
es
icebp
outsl
jnp
clc
in
jmp
flds
push
stos
andb
or
inc
fidivl
std
pop
sub
cmp
clc
jb
push
mov
mov
leave
cmp
in
lods
push
inc
sbb
aad
mov
inc
enter
das
xchg
sbbb
jecxz
fcmovbe
pop
inc
mov
fdivs
lds
std
jmp
xor
mov
jg
pushf
jns
xor
and
inc
adc
pushf
sub
fwait
and
jecxz
inc
out
bound
pop
pop
cmp
or
fldenv
andb
popf
fwait
les
mov
push
out
and
push
sbb
daa
cmp
and
mov
add
adc
ret
sub
fidivrl
call
ds
enter
mov
cmpsl
das
stos
mov
mov
stc
sti
push
gs
testb
test
insb
cs
popa
loopne
jns
dec
daa
adc
or
xchg
xchg
loopne
adc
xchg
push
in
add
outsb
mov
fstpt
out
shl
call
das
sub
insb
mov
in
test
mov
mov
sbb
hlt
adc
cmp
mov
lods
pcmpgtd
jbe
stos
xor
mov
fsubl
cwtl
gs
mov
out
stos
in
sbb
sub
mov
sbbl
ja
nop
dec
and
in
jp
sbb
into
or
jmp
cmpsl
mov
orl
add
add
aam
dec
xlat
inc
xchg
jnp
push
mov
test
push
mov
mov
pop
es
mov
lahf
adc
pushf
mov
mov
inc
dec
icebp
aam
pop
jecxz
pop
sarl
adc
or
mov
rorb
bound
xor
rcl
or
ljmp
clc
leave
in
lock
ljmp
fcompl
in
mov
or
enter
add
sarb
bnd
int3
stos
pop
outsb
xor
sbb
pop
cmp
push
aaa
fwait
add
fwait
outsl
jmp
xchg
add
inc
jecxz
ds
mov
out
pop
xor
or
push
loopne
lock
or
imulb
mov
sub
les
mov
jmp
jecxz
mov
call
data16
push
jbe
shrl
mov
xor
aam
int3
sbb
add
pop
ja
sahf
and
xchg
dec
das
mov
jb
lahf
jge
out
jmp
loope
aad
gs
or
jae
ret
xchg
andb
dec
jg
xchg
pop
mull
jae
js
fnstcw
popf
enter
loope
idivl
pushf
and
fcompl
stos
fs
decl
inc
xor
dec
out
lods
push
repz
ja
cwtl
jge
icebp
push
pop
cmp
dec
adc
jp
add
call
das
fisttpll
push
test
aaa
push
adc
dec
jb
ret
shl
stc
out
push
data16
sbb
enter
and
jg
push
mov
iret
ficoml
fdivl
icebp
inc
or
xchg
out
cmc
sub
mov
jmp
icebp
sub
test
ficoml
loope
in
xor
pop
add
push
shl
orl
inc
in
and
adc
push
and
mov
and
mov
inc
xchg
xchg
adc
repnz
dec
cld
inc
aam
clc
mov
cmp
ret
fwait
mov
inc
mov
adc
sub
fildll
add
mov
or
sbb
mov
mov
cmp
pop
and
in
outsb
dec
adc
mov
adc
sar
lea
ds
gs
shrl
push
mov
pop
mov
jge
stos
shll
pop
fcmovb
mov
dec
std
lock
and
add
loope
push
mov
mov
cld
jno
repz
jmp
cli
push
ja
sub
icebp
gs
adc
adc
pop
mov
cmc
aam
sub
mov
clc
scas
jno
int3
insb
orl
or
push
mov
jne
or
fdiv
js
std
jo
push
outsb
movsb
rorl
sub
call
gs
mov
cmpsl
dec
mov
rcll
outsb
mov
rol
outsl
dec
sahf
test
dec
test
jns
xchg
fiadds
sbbl
push
mov
xor
test
adc
cwtl
push
sar
xor
lahf
adc
push
imul
adc
lahf
shlb
inc
iret
push
push
mov
into
pop
ret
dec
add
dec
daa
scas
push
mov
adc
jmp
cmpsb
setbe
fidivrs
lret
movsl
sahf
and
mov
data16
ja
push
je
xor
mov
sbb
jp
lods
push
je
adc
nop
adc
lods
loopne
push
enter
cs
xor
pushf
out
and
js
xorb
xchg
cmpb
push
push
into
adc
std
xchg
scas
inc
cmpsb
jb
mov
fbstp
pop
xor
xor
xor
mov
jb
out
or
fidivrs
inc
mov
ret
pusha
sbb
and
popf
lret
insl
adc
inc
sbb
cmp
pop
mov
loopne
jl
les
add
add
sub
push
add
out
pop
pop
rclb
imul
pop
xor
lcall
sub
rcll
das
sub
jmp
and
push
lods
insb
lods
push
inc
mov
cmp
xchg
xchg
push
loop
stos
cmp
repnz
jmp
add
xor
out
iret
xchg
pop
stos
das
jl
fisubl
int
inc
ret
jp
lret
push
push
cltd
xchg
and
in
test
xchg
pop
cs
push
out
xor
addr16
mov
push
xor
mov
xor
inc
lcall
push
outsb
xor
pop
aad
movsl
sub
mov
iret
leave
sub
pop
imul
test
push
lds
mov
lret
pop
cld
adc
sub
xchg
mulb
pop
lcall
and
sbb
out
ret
in
xor
cld
mov
out
stc
imul
or
rolb
cmpsl
imul
sti
cmp
jle
orl
add
mov
mov
fldcw
pop
xor
imul
aad
fisubrl
addps
das
sahf
in
xlat
and
sub
xchg
or
clc
fwait
aam
stos
mov
mov
loopne
push
jns
in
push
mov
call
xor
jb
pop
push
cmc
xchg
out
cmpsb
out
adc
es
cmp
test
mov
xorb
in
std
ret
cli
inc
mov
dec
es
pushf
roll
int
ljmp
push
lock
mov
jns
add
sbb
cld
xchg
mov
scas
lcall
les
inc
pop
lret
dec
push
out
outsb
mov
decb
mov
pop
repnz
cmp
iret
mov
push
sbb
pop
cmp
mov
sbb
sub
das
mov
stos
pop
insb
xchg
and
mov
mov
das
sub
call
xor
jns
jns
aad
cmp
and
pop
lret
mov
cmp
repnz
push
mov
jbe
mov
in
aam
mov
popa
andb
jecxz
adc
adc
mov
out
ret
stos
add
ret
pop
into
stos
cmpsb
sbb
mov
and
pop
aad
add
sub
ret
xchg
add
mov
xchg
sahf
sub
cli
nop
stc
ret
hlt
call
pop
pop
and
clc
pusha
movsl
or
jmp
sahf
sub
in
push
mov
adc
or
xchg
mov
mov
inc
cmpsb
aad
add
test
shll
gs
or
ret
dec
push
sar
stos
mov
mov
mov
roll
aas
mov
decl
test
mov
in
mov
les
dec
add
aad
fcmovnbe
popw
xlat
shr
cmc
jae
cltd
sub
addb
out
out
and
loope
jmp
dec
rclb
sub
ds
enter
and
popa
popf
aam
imul
push
addb
xchg
push
in
mov
inc
rorb
aad
fldl
jb
call
inc
aam
cwtl
idivl
fists
pop
int3
jmp
mov
sarb
icebp
out
mov
hlt
icebp
lcall
xchg
lcall
sbb
outsl
sbb
xlat
subl
aaa
jbe
push
fs
mov
inc
xor
adc
mov
add
test
jecxz
add
mov
push
repnz
pop
mov
mov
pop
xchg
fldenv
push
mov
mov
mov
sti
mov
lds
insl
push
xchg
jl
adc
dec
push
fsub
push
mov
loope
lods
mov
pop
fadd
push
dec
push
in
scas
push
mov
inc
xchg
jb
mov
fistpll
icebp
insb
xor
scas
popa
negl
je
jne
cmp
mov
sti
xor
int3
lea
int
lret
outsl
ret
enter
add
rorb
stc
sbb
sbb
sub
gs
cmp
faddl
cmpsb
sub
xchg
popf
dec
test
sbb
and
testl
xlat
or
mov
xor
dec
or
loope
adc
push
pop
jle
pop
pop
lret
mov
pop
in
fcmovne
mov
notl
inc
jp
adc
push
sub
aad
mov
test
mov
and
icebp
pop
movsl
xchg
out
mov
clc
frstor
out
push
aad
cmc
cmp
imul
xchg
mov
bound
jle
or
and
call
cmp
mov
pop
pop
sub
testl
pop
mov
mov
insl
imul
cmp
jae
add
outsl
and
aad
or
pop
adc
aaa
xor
and
sbb
shll
push
mov
push
call
movsb
fistpll
adc
clc
in
fdivrl
and
popl
inc
xchg
jge
xor
test
push
icebp
leave
mov
mov
leave
sbb
rcl
dec
push
mov
lods
outsl
mov
xchg
lock
sbb
insl
mov
scas
push
and
mov
pusha
shl
lahf
leave
push
fnsave
push
inc
jae
pop
scas
pop
outsl
ret
hlt
loop
xorl
push
ljmp
js
push
sub
mov
call
int
adc
inc
repnz
test
enter
cld
mov
call
cld
int
dec
mov
in
add
ret
lods
rcl
xor
idiv
repz
ret
je
movsb
or
mov
enter
lcall
test
push
imul
sahf
mull
js
call
add
pop
and
iret
adc
mov
notl
cmpsb
repz
mov
je
bndstx
clc
mov
outsb
aas
jno
add
cld
pop
lock
adc
adc
jo
dec
adc
sti
xor
fsubp
test
ret
mov
jle
scas
sti
and
sbb
es
stos
sbb
lods
mov
rol
test
faddp
push
rcrb
ret
shrl
and
cmp
sub
jmp
push
cmc
cs
and
aad
fistl
jp
int
dec
loope
mov
rol
iret
sbb
push
scas
enter
adc
xchg
pop
mov
adc
lods
push
pop
mov
dec
and
mov
bound
mov
out
inc
aad
push
mov
leave
mov
repnz
push
inc
cmpsl
push
or
xchg
jp
popa
add
clc
test
and
lcall
xchg
scas
mov
adc
jmp
or
sub
test
dec
and
movsb
int
int3
mov
cmp
hlt
call
dec
jo
and
fwait
jns
push
xchg
lock
dec
nop
adc
mov
jmp
in
iret
inc
loope
jne
lea
adc
mov
xor
and
xchg
mov
cwtl
sbb
dec
inc
sbb
test
ret
loope
imul
fwait
dec
push
pop
mov
arpl
inc
scas
nop
xor
std
out
push
lcall
push
ficompl
mov
pop
mov
sub
push
add
rclb
pop
pop
push
frstor
fsubl
gs
cmp
cltd
pop
xchg
cwtl
out
ds
pop
adc
pop
adc
leave
xchg
push
pop
add
xchg
xchg
xchg
imul
pop
cmp
fstps
dec
inc
popa
xchg
imul
jg
aam
sub
lock
mov
mulb
xor
inc
push
adc
jno
sub
jb
ds
repz
and
mov
jbe
sub
add
out
pop
in
dec
sub
pusha
outsb
lods
cmc
inc
imul
mov
insw
jge
add
jno
pop
data16
sub
xchg
lret
and
inc
push
sub
mov
nop
mov
pushl
mov
not
imul
and
or
adcb
xor
je
jne
jmp
in
icebp
loope
into
and
push
push
push
loopne
jp
adc
pop
dec
rcpps
dec
int
add
pop
push
addl
cmp
mov
into
jo
push
mov
pop
or
sti
ja
mov
leave
push
data16
pop
std
ds
in
mov
inc
filds
push
stc
xchg
mov
inc
ljmp
or
int3
popa
aaa
jne
popa
fsubrs
bound
dec
sub
mov
dec
push
cmp
push
and
rolb
test
and
mov
fcoml
xchg
mov
rcrl
daa
aad
repz
mov
cld
xor
jge
pop
int
cs
rolb
mov
sbb
insl
stc
xchg
das
mov
std
jae
fistpl
fcomps
cmp
popa
push
lcall
lea
sarb
outsb
mov
lods
jne
mov
int3
loopne
cli
jge
cmp
push
dec
loopne
inc
push
mov
pop
and
xor
mull
movsb
mov
cli
mov
jp
stos
adc
inc
arpl
cld
decb
mov
mov
xchg
cmpl
xchg
cmp
pop
dec
addb
hlt
dec
jo
cwtl
lds
inc
push
lods
bound
jle
fsubr
push
mov
loopne
fs
in
jns
mov
mov
add
rorb
lcall
add
and
insl
and
out
and
push
inc
mov
cmpl
sbbb
fldt
cmp
or
and
mov
dec
mov
add
hlt
cmp
rclb
lock
int
js
bound
xor
mov
rcll
pop
sar
jo
stos
adc
lock
push
or
lds
mov
mov
jecxz
pop
push
mov
mov
jg
cmp
inc
popa
jae
push
je
sbb
sbb
jge
inc
push
inc
mov
out
jl
push
fdivrs
jg
pushf
pop
xchg
cld
lods
and
xor
int3
jle
sbb
pop
and
mov
sbb
es
cs
or
js
jp
add
cmc
fistpl
fstl
dec
push
mov
jns
mov
ret
inc
pop
push
shll
sbb
cmp
aam
lret
add
sbb
jecxz
push
faddl
pop
add
lcall
cmp
fs
stos
dec
cwtl
movsl
or
inc
mov
aaa
mov
sahf
in
sub
cmp
lds
jecxz
arpl
sub
push
mov
and
mov
lock
mov
pushf
daa
jb
jl
out
pop
stc
pop
out
test
stos
mov
jbe
xchg
insl
jg
pusha
mov
add
add
out
or
outsl
into
mov
lds
cltd
dec
hlt
fiaddl
xchg
push
int3
inc
aaa
pushf
push
pop
ss
sub
imul
packuswb
push
iret
test
shr
idivb
jno
mov
xor
dec
push
rcr
jne
xor
fisubl
aad
pushf
lds
es
and
lret
in
fadds
data16
mov
test
jl
test
mov
call
pop
xchg
push
mov
fmull
shll
sub
aam
popf
ficoms
and
sbb
sarb
push
mov
testb
lock
orl
xchg
mov
jns
lcall
add
inc
addr16
int
mov
pop
movsb
and
imull
cld
scas
xor
mov
mov
out
lret
rcl
inc
lret
popf
adc
pop
repz
dec
daa
and
movsl
and
and
push
mov
and
roll
push
dec
or
lret
mov
aas
xorb
push
sub
int3
movsb
jnp
call
sub
xchg
jno
inc
xor
imul
adc
lock
mull
xlat
scas
mov
mov
out
push
xor
mov
push
inc
out
lahf
xchg
stc
adc
outsl
movsb
dec
daa
dec
and
sub
jb
xchg
pusha
sub
jne
dec
dec
lcall
cmc
stos
leave
jnp
xor
cmpsb
rolb
adc
cltd
mov
adc
dec
push
adc
insl
insb
mov
mov
dec
sbb
xchg
cmpsl
sahf
lret
shrb
mov
add
inc
shlb
jmp
push
lahf
mov
mov
adc
flds
mov
bound
popf
addr16
in
jl
lock
xchg
xor
lods
xchg
sub
fisttps
sbb
sub
and
lods
incb
mov
or
jle
iret
cmc
out
add
dec
add
pop
nop
push
dec
rcl
dec
sarl
jecxz
sub
stos
cmp
inc
das
mov
inc
xchg
add
imulb
xor
dec
ret
insl
push
lret
jmp
sub
push
pop
fwait
icebp
cmc
test
stos
mov
bound
cmp
aas
fcomp
mov
fcmovnb
js
test
cmp
xchg
insb
in
aas
mov
mov
stc
dec
jb
movb
push
push
mov
lods
xor
add
xor
or
pop
cwtl
sahf
inc
cwtl
test
and
xchg
aam
mov
sbb
aas
pusha
xchg
cmc
cmpsl
mov
cmpsb
addr16
sahf
push
or
adc
pop
mov
popa
mov
repnz
xchg
or
and
stc
loop
leave
pop
sbb
loop
scas
xor
mov
jg
sub
cmp
dec
in
stos
das
imul
mov
sub
dec
adc
decb
sbb
cmp
jne
jns
or
pop
push
mov
loop
push
and
mov
cmpl
pop
sub
fnstenv
xor
jg
sti
xchg
pop
fsubrl
imul
testl
xchg
movsb
shrl
sbb
mov
les
push
dec
mov
scas
fxch
cltd
fisubs
loope
xor
xor
cmp
pushf
dec
test
xchg
outsb
out
movb
std
iret
pop
jp
outsl
mov
clc
arpl
dec
xchg
xor
arpl
int3
sub
mov
jns
mov
xor
popa
aas
icebp
sbb
cs
lret
scas
add
adc
jo
xchg
in
inc
in
sbb
fwait
xor
scas
outsl
testl
xchg
stos
sbb
and
pop
lahf
mov
xor
and
jmp
lea
adc
out
xorb
and
mov
xchg
xor
cltd
cld
push
or
loop
out
dec
stos
adc
jb
mov
loop
jge
jbe
add
push
fucom
dec
stos
gs
pop
loop
xchg
xchg
popf
inc
jg
aas
add
dec
insb
xlat
dec
loope
cmp
fldl
push
mov
lahf
iret
mov
sbb
shlb
xchg
mov
inc
in
icebp
inc
pop
fsubrl
mov
jb
mov
pop
cwtl
dec
push
xor
mov
bound
hlt
cmp
lret
inc
pop
lcall
in
push
mov
hlt
xlat
fsubr
push
xchg
and
mov
cld
jmp
push
jmp
nop
imul
loopne
xchg
test
mov
into
mov
add
arpl
sahf
stos
ror
dec
sar
mov
ss
ret
cmp
aam
mov
sti
xlat
shlb
loopne
shll
xchg
mov
push
nop
jae
jb
xor
nop
lret
inc
lret
stc
mov
aam
insl
pop
lcall
pushf
push
lock
mov
pop
ja
outsb
repz
push
out
lods
adc
fsincos
dec
test
sub
fstl
xchg
cmp
mov
jecxz
xor
stc
push
inc
jp
shll
cwtl
pop
ds
mov
imul
jmp
fildll
xor
loope
data16
cmp
sbb
jp
xorl
leave
shll
cmpsb
test
outsb
ljmp
pop
mulb
push
or
in
cltd
loop
lods
int3
iret
fs
sarl
cmp
ret
aad
mov
jne
inc
mov
icebp
jo
sub
sbb
scas
mov
mov
pop
js
sub
outsl
mov
lret
aaa
movsb
loopne
movsb
xchg
scas
outsb
repz
add
xchg
mov
dec
aam
repnz
lock
sub
mov
leave
mov
mov
cmp
jge
call
sbb
mov
loop
pop
ja
fsubp
lds
and
mov
pop
pop
inc
sub
or
xor
jmp
and
push
xchg
mov
xchg
jp
icebp
or
fyl2x
std
shufps
dec
inc
insb
in
jae
pop
in
inc
pop
fs
aad
inc
insb
fbld
mov
fbld
push
popl
inc
pop
cmp
inc
fldl
jmp
lods
pop
aas
adc
imul
cmpsl
pop
xor
in
mov
lods
jno
mov
mov
adc
dec
daa
fdivl
mov
xchg
lock
and
sbb
inc
pop
cs
xchg
sub
ret
lcall
and
cmpsb
mov
loop
loopne
jge
xor
mov
outsl
mov
test
lret
outsb
repnz
rdtsc
pop
les
mov
test
mov
and
lret
xchg
pop
shufps
loope
adc
aad
ret
add
fldcw
and
fdivrl
scas
ret
mov
gs
iret
inc
insl
mov
clc
jnp
ja
insb
insb
lock
stos
xor
mov
imul
push
fnstenv
repz
and
inc
mov
push
fdivrs
out
pop
pop
mov
push
repnz
mov
pop
dec
cwtl
jecxz,pn
mov
ja
push
sbb
in
mov
cld
shlb
cmc
in
lock
decl
add
test
sbb
pushfw
cmp
imul
xor
adc
fisttpl
sub
adc
fdivl
call
dec
imulb
dec
dec
loopne
inc
outsb
adc
inc
cmp
in
add
jbe
subb
mov
xor
sub
scas
inc
mov
mov
mov
sbb
push
add
bound
push
mov
addl
mov
outsb
in
loope
std
pop
xchg
mov
ret
js
sub
sub
pop
lret
push
add
sbb
in
push
push
popf
sbb
dec
sub
roll
push
push
push
inc
cltd
and
inc
test
sbbb
xor
sbb
sbbl
lea
stos
imulb
xchg
jecxz
cmp
cs
sub
jae
mov
add
dec
dec
jecxz
jl
sti
testl
mov
popa
pop
xchg
out
inc
mov
es
cmp
mov
daa
out
call
and
lock
dec
xor
xor
lea
push
cmc
xor
scas
shrb
jle
mov
insb
add
lcall
and
aaa
add
mov
add
pop
andl
int3
lcall
adc
xor
cmpsl
lret
and
and
dec
aas
clc
stos
loop
into
mov
push
test
mov
cwtl
ljmp
xchg
cmp
les
or
mov
or
mov
xlat
cmpsl
cmp
sbb
mov
mov
lds
cmp
pop
mov
nop
and
add
push
push
mov
push
aas
push
cmp
xor
xchg
dec
mov
cmp
lock
icebp
push
mov
xor
aad
rcr
cmp
push
cmp
shrl
dec
ljmp
cmp
jge
jne
icebp
mov
push
add
pop
and
cs
mov
aam
lock
stos
loop
jns
inc
imul
cwtl
and
add
lods
aad
ljmp
inc
ljmp
inc
pop
aaa
lcall
ljmp
pop
xchg
adc
jle
iret
data16
sub
je
mov
pandn
fwait
imul
dec
mov
inc
xor
jl
js
add
lahf
pop
add
xchg
mov
ljmp
bound
test
mov
inc
rolb
and
adcl
dec
fsub
rclb
bound
inc
popf
je
repnz
sahf
bound
clc
les
xchg
push
stos
dec
or
fistpll
test
push
jae
sbb
imul
data16
out
movsb
xchg
adc
jo
scas
mov
push
sbb
andl
jg
divb
lahf
adc
mov
insb
ret
mov
lret
push
pop
sbb
push
xchg
cmp
xchg
scas
ret
jo
push
push
clc
inc
pop
andl
lds
adcb
lret
dec
int
out
jecxz
adc
test
cmp
lret
out
push
and
ret
out
mov
push
inc
push
and
or
dec
int3
jne
pop
push
mov
mov
adc
mov
sahf
and
out
jl
mov
or
test
aad
jae
lea
nop
lds
xlat
push
push
icebp
fwait
mov
popa
xor
inc
bnd
rorl
xor
dec
cltd
push
push
adc
call
cltd
lcall
outsl
loopne
push
cmp
jmp
out
cli
xor
pop
push
ljmp
flds
mov
jecxz
jge
scas
adc
push
nop
sub
xor
xor
incb
sbb
mov
sub
in
xchg
icebp
addl
lds
mov
jno
mov
in
pop
mov
test
aam
jae
out
inc
adcl
nop
and
xor
sbb
push
stos
bound
in
xchg
and
sub
lahf
movsb
sbbb
jnp
call
es
pushf
push
mov
mov
pop
sub
daa
xor
mov
mov
ret
test
out
fdivr
or
dec
jae
cli
jg
js
mov
out
or
sbb
lods
mov
loope
mov
dec
inc
test
and
nop
gs
mov
es
xor
jg
mov
xchg
and
adc
popf
push
mov
pop
sbb
add
aas
cmp
jo
mov
inc
fsubrs
fmuls
int3
test
push
sub
and
xchg
push
mov
mov
or
ljmp
pop
cmpsl
xor
mov
mov
lret
mov
fcompl
xchg
insb
xchg
jbe
lcall
mov
cld
flds
mov
shrb
xchg
loopne
test
mov
js
data16
or
xchg
das
mov
or
mov
push
orb
cwtl
adc
mov
mov
pusha
call
popf
push
sub
dec
cmp
adc
orb
add
xchg
jno
fs
sub
xchg
mov
cmc
cmp
xchg
or
and
fsubrl
jne
sbb
aaa
jle
iret
and
ljmp
iret
cmp
sbb
arpl
call
icebp
inc
lods
idiv
inc
xchg
inc
fcmove
inc
cmp
xchg
cmp
jp
and
jno
sbb
fdivr
pop
push
pop
and
push
mov
jle
inc
cmovp
jno
movsb
outsl
mov
movsb
push
cmpsb
add
and
rorb
xor
iret
in
cmp
int3
scas
pop
and
jg
out
in
pop
mov
orb
cmp
mov
jmp
lahf
into
mov
cmc
sub
sub
ret
sbb
pop
lcall
cmp
adc
test
sti
mov
inc
push
leave
mov
out
pop
rclb
pop
inc
stos
cmpsb
pop
fwait
mov
push
push
dec
xlat
dec
inc
mov
imul
sti
lret
dec
mov
xchg
or
jae
mov
bound
gs
jns
lahf
sub
xchg
mov
push
aam
add
and
mov
jns
daa
and
jecxz
in
and
adc
xor
xchg
jno
xchg
scas
ss
lds
cmpl
sbb
mov
jl
dec
cmc
inc
outsb
xchg
inc
mov
pop
xorl
jg
adc
popf
iret
and
inc
pop
push
sbb
mov
les
push
sub
push
push
pop
jae
adc
pop
iret
xor
cltd
es
ljmp
adc
jg
jnp
pushf
push
mov
in
xlat
movsb
icebp
xchg
sub
push
xchg
sbb
cmc
out
pop
lret
inc
xchg
jg
adc
jecxz
jns
in
popf
iret
sub
bound
xchg
add
inc
pushf
pop
cld
loop
dec
xor
dec
xchg
fwait
mov
cmp
mov
ds
xchg
sbb
jne
cmc
push
int
ja
std
mov
dec
add
mov
mov
int
xor
jl
sbb
and
pop
ljmp
mov
mov
jmp
adc
xchg
mov
outsb
insl
scas
aam
adcb
adc
lods
xchg
add
jl
adc
push
mov
cmp
into
and
in
into
icebp
inc
or
xlat
or
mov
ficoml
dec
addr16
jb
sbb
insl
sbb
xchg
or
cmp
fdiv
or
jp
dec
xor
fisttps
enter
dec
sub
inc
mov
fisubrl
pop
mov
adc
sub
pop
lods
xchg
shl
cli
clc
push
ljmp
test
dec
hlt
sbb
lods
fldt
out
cmp
cmpsb
test
sub
push
adc
fcompl
das
cmpsb
out
ljmp
pushf
lods
aas
xchg
mov
push
fs
test
and
lahf
pop
orl
and
jae
inc
mov
in
mov
lods
push
jo
imul
xchg
scas
add
es
aam
xlat
dec
or
mov
xchg
sarl
pop
cmp
sbb
rcrb
pushf
mov
inc
inc
movsb
popa
jmp
lods
or
test
jecxz
ss
lds
sbb
push
push
adc
push
repz
and
xchg
pop
mov
cmp
xor
int
lret
cld
popf
hlt
fiaddl
data16
daa
in
mov
or
and
das
cmp
cli
mov
sub
icebp
push
stos
clc
fdivrl
cmp
mov
sbb
ds
in
xor
mov
je
xor
pushf
fwait
adc
xor
adc
mov
push
cmp
fwait
stos
cmc
repz
push
or
sub
outsl
xor
out
mov
adc
lret
das
mov
or
add
fdivs
in
shlb
into
ja
dec
lods
pop
or
push
lds
push
mov
dec
fsubrs
jne
add
aas
shrl
and
jb
rcr
repnz
fsubp
jbe
sbb
xchg
xchg
jle
enter
fildl
push
cmpsb
and
push
mov
adc
addr16
int
mov
cmp
outsb
icebp
jge
nop
popa
jne
testb
push
cmp
inc
arpl
xchg
mov
pop
mov
mov
sub
xchg
pop
cmp
cmp
imul
sbb
nop
repnz
cli
data16
dec
push
jmp
ret
shll
shll
mov
and
add
imul
cwtl
push
pop
dec
test
ss
and
dec
mov
xchg
inc
aaa
jecxz
dec
arpl
aad
and
sbb
fsubs
or
sub
aaa
xchg
gs
dec
xor
xchg
cmpsb
ss
subb
adc
mov
add
inc
add
pop
mov
dec
fsubs
fisttpll
out
jl
mov
or
xlat
pushf
dec
mov
add
sub
xor
stos
pop
xlat
and
ds
aad
jmp
dec
stos
test
and
push
push
sub
in
bnd
scas
rcl
adc
enter
outsl
sub
int3
inc
cwtl
dec
jo
scas
mov
inc
mov
mov
mov
mov
dec
negb
adc
fldt
push
pop
lock
jnp
popf
pop
cli
into
dec
movsl
lock
int3
lods
loop
adc
setl
testl
dec
inc
or
lret
jge
xlat
and
fsubrs
mov
sub
pushf
nop
pop
mov
aad
je
sahf
pop
test
jo
pop
cli
aaa
popa
xchg
rorb
ret
jl
out
addl
nop
das
outsl
les
movsb
push
add
lret
inc
adc
sahf
lahf
add
insl
sbb
sub
bound
dec
js
stc
je
cltd
jecxz
adc
push
cmp
fmull
inc
pop
mov
leave
mov
in
pop
ret
adc
shrb
fsubrp
sub
frstor
in
push
ret
xor
int
and
lock
stos
mov
xlat
imul
jle
in
sub
and
in
or
jp
jo
sarb
jb
in
or
adc
ret
sub
dec
adc
in
addr16
mov
repnz
mov
mov
das
test
cmp
jl
imul
lods
idiv
jmp
sub
mov
shl
cld
inc
enter
add
out
cmp
sub
movsl
cmp
aas
repnz
jp
cmp
push
push
inc
rcrl
mulb
mov
pop
int3
jae
stc
cmp
and
push
popf
xchg
jecxz
fs
xor
enter
push
jno
lret
aad
fisubs
outsl
sahf
sub
cmp
int
call
mov
pop
mov
jno
orb
shlb
cmp
add
and
sub
das
and
fidivrs
nop
test
dec
insl
fwait
pop
in
xlat
lret
clc
test
sbb
jmp
jbe
pusha
jns,pt
or
fs
scas
inc
jecxz
add
mov
mov
cld
cmpsl
adc
push
mov
out
xchg
mov
lea
fcmovne
pop
add
stos
sbb
imulb
xchg
popl
hlt
das
lcall
mov
mov
xor
lock
in
insb
inc
mov
sbb
std
lcall
fistl
mov
sub
cmovp
adc
jnp
xchg
fwait
sub
mov
cmc
push
push
jno
cmc
cmp
scas
jb
sub
fists
iret
incl
frstor
push
in
push
mov
jmp
pusha
stc
stos
lahf
lds
inc
lret
int
insl
add
cmp
mov
fsubrs
sub
ret
lcall
or
aas
inc
loope
cmpsl
add
sub
push
cmpsb
adc
xor
aas
add
mov
das
inc
sbb
lahf
test
add
ljmp
jae
popa
mov
icebp
cwtl
js
pusha
inc
push
les
adc
repz
mov
xchg
lcall
popf
push
dec
popa
mov
push
scas
roll
mov
cmp
add
scas
pusha
nop
bound
shrl
sahf
push
sbb
push
inc
filds
enter
or
or
pop
or
or
jmp
xor
xchg
movb
mov
add
sbb
movsb
pop
xchg
cmc
sbb
stos
jns
fwait
and
sbb
or
push
jbe
pusha
popa
js
and
daa
add
fmuls
ficoml
jae
xor
mov
fcomip
lds
xchg
dec
push
sbb
inc
sahf
icebp
orl
push
imul
imul
test
and
in
or
enter
sbb
push
and
mov
stc
stc
pop
or
mov
xor
fildll
stos
dec
jecxz
and
scas
sti
scas
test
mov
cmp
pop
add
daa
in
xor
nop
subl
xchg
jae
popa
int
and
push
movsl
fldcw
outsl
fstp
or
stos
sahf
pusha
mov
das
out
movsl
push
sahf
cwtl
mov
mov
cmp
mov
cmpb
or
mov
mov
dec
push
push
xchg
arpl
mov
js
cli
hlt
add
sbb
ficoml
cli
mov
out
sub
repnz
mov
mov
cmp
adc
das
inc
inc
fsubr
push
mov
dec
test
cmp
rcrb
xor
lea
jge
dec
lret
sub
movsb
sbb
bound
and
int
adc
mov
ljmp
add
insl
jae
lods
das
data16
xor
lods
xor
movsb
mov
xchg
jnp
adc
faddl
outsb
push
cwtl
je
or
movsb
rorl
adc
mov
mov
fnstsw
xchg
dec
outsb
mov
dec
lret
jnp
mov
or
jecxz
jae
mov
pusha
sub
loope
stc
and
lcall
mov
inc
sub
mov
mov
pop
and
fwait
mov
jnp
push
inc
in
lds
lea
mov
shll
mov
call
cmpsl
pop
das
xchg
andb
nop
lahf
jns
mov
pop
cmc
add
pop
outsl
sbb
jle
in
mov
out
into
push
insl
xlat
test
out
sub
icebp
testl
push
lret
sbb
adc
cmp
movsb
repz
insl
add
mov
mov
push
stc
push
ror
loop
cli
sbb
jmp
mov
out
mov
das
mov
adc
cmp
fcmovnb
stc
sarl
mov
add
push
sub
or
sbb
mov
pop
push
movl
leave
jns
push
lcall
in
mov
gs
lret
out
aas
mov
push
add
or
fstps
push
in
dec
movsb
xor
or
fwait
push
dec
sub
mov
cwtl
rcrl
roll
movsb
cltd
insl
andb
dec
xor
negl
ss
test
out
inc
sahf
push
xor
jae
xchg
cltd
sbb
stc
cltd
mov
or
dec
mov
fxch
xlat
adc
pop
jb
add
inc
sub
lods
sbb
adc
sub
aas
jae
loop
cmp
mov
xchg
pop
stc
push
sub
adc
ja
jno
ja
mov
cmp
jl
and
popf
push
jg,pt
in
punpcklbw
or
aad
sbb
add
ss
adc
lcall
shl
mov
and
les
jns
cmp
dec
mov
popf
mov
rclb
test
mov
pop
stos
fimull
outsl
lods
daa
jae
cmp
aas
sub
dec
aad
loope
dec
add
mov
jmp
popa
les
fidivs
loopne
xor
lret
cmp
mov
cmp
sub
rorl
xchg
sub
ficompl
decb
sbb
stc
xchg
pop
nop
mov
jno
in
pop
in
outsl
mov
and
call
ljmp
inc
and
rcr
sahf
pop
insb
les
push
cmp
xor
pop
add
and
mov
imul
fbld
outsb
in
jno
out
pop
sub
aas
fisttpll
mov
lcall
sbbl
mov
inc
orb
push
shr
mov
mov
pop
adc
inc
cltd
mov
out
cld
push
in
dec
sub
jge
xchg
fldl
or
scas
add
pusha
stc
in
dec
xchg
jle
sbbl
xorl
jmp
clc
mov
arpl
ljmp
push
in
add
cmp
loop
xor
inc
aaa
jmp
mov
lcall
in
mov
cmp
mov
cmp
or
shrl
dec
subps
dec
xor
enter
push
push
std
jle
sbbb
cmpl
cmp
sub
jno
sti
aaa
mov
adc
xor
jmp
sbb
insb
ljmp
lcall
stos
popa
adc
fmuls
xchg
add
push
inc
in
cmc
pop
mov
or
in
adc
push
jne
jp
and
js
dec
test
es
fucomip
jge
mov
mov
dec
push
and
lods
mov
mov
push
sub
loopne
push
jns
add
lods
bswap
ficoml
sti
fdivrl
loope
fs
adc
jge
xchg
xchg
jnp
cwtl
popl
ret
push
mov
jo
mov
push
or
call
sahf
add
mov
push
imulb
sub
add
sbb
incb
mov
mov
imul
addr16
pop
and
mov
sub
dec
ja
icebp
imul
repnz
aad
pop
idivl
les
push
icebp
cmp
mov
jle
cld
or
flds
pushf
mov
in
out
dec
loop
arpl
pop
inc
fldcw
adc
xor
jbe
inc
inc
sbb
push
sub
mov
mov
or
sbb
dec
xchg
pushf
ds
push
sub
leave
push
sub
nop
lods
mov
or
nop
insb
dec
lcall
xlat
movsb
xchg
repnz
imul
movsl
push
lahf
xor
pop
int3
inc
jae
es
lods
cmc
push
xor
inc
int3
xchg
aaa
inc
mov
mov
sub
sti
add
out
push
adc
cmp
pop
push
pop
fdivrs
cwtl
dec
jbe
sbb
stos
leave
adcb
mov
int
mov
js
adc
cli
sub
adc
movsb
sbb
pusha
and
xchg
pop
sbb
aad
dec
and
inc
fsub
clc
xlat
cmp
loop
xor
stc
sahf
pop
sub
cmpsb
sbb
push
cmpsb
jmp
adc
in
push
xor
rclb
test
pop
xor
push
mull
mov
aaa
scas
mov
lock
test
pop
sbb
add
cmp
neg
ret
test
flds
popa
in
pop
or
das
pop
mov
xchg
push
loope
ret
dec
insb
adc
jne
and
mov
lock
mov
xor
fmulp
sbbl
hlt
shll
cli
sub
fimull
sub
xor
movswl
inc
loopne
jmp
adc
push
in
xor
pop
loop
lods
mov
dec
cld
sarb
rorb
stos
mov
jb
dec
enter
sbb
adc
push
dec
stos
add
ret
inc
dec
and
int
popf
xchg
scas
fldt
or
xor
xor
adc
orb
into
mov
jmp
out
cmp
movsl
insb
test
notb
dec
jb
cli
test
xor
movsb
jg
daa
push
cmp
xchg
cs
lcall
das
push
sbb
shlb
or
pop
cmp
xchg
mov
push
test
cli
jle
inc
add
cld
cwtl
jmp
mov
add
mov
lret
insl
dec
adc
mov
sti
mov
movsb
out
pop
adc
xor
enter
cmp
imul
arpl
jg
faddl
push
sbb
cmp
jecxz
pop
xchg
push
mov
fsubr
cmp
int
inc
out
stos
insb
popf
arpl
out
mov
mov
push
jo
jg
addr16
sahf
gs
mov
lea
movsl
adc
lcall
mov
dec
daa
and
ret
bound
xchg
sbb
inc
mov
nop
gs
jae
mov
in
add
movsb
adc
sbb
aas
lret
inc
pushf
cmpsl
sbb
mov
mov
push
enter
add
iret
mov
pop
mov
movsl
jbe
icebp
sub
mov
pop
stos
test
pop
dec
testb
bound
shl
jge
int
inc
lret
pop
pusha
pop
cmp
insl
mov
ja
or
adc
pushw
cmpsl
xchg
fstpt
xor
or
stos
pop
cmp
imul
sbb
pop
dec
jmp
movsb
cli
fsubrs
dec
and
push
mov
lcall
xor
jo
inc
push
cmp
test
scas
sub
mov
icebp
dec
rclb
test
xlat
xchg
test
iret
or
mov
lret
pop
xchg
inc
rclb
ja
aam
pusha
pop
cld
dec
hlt
or
xchg
into
jg
lods
jno
mov
in
ret
hlt
lods
int
addr16
pop
jae
mov
inc
mov
mov
fdivr
inc
pop
sub
stos
lds
ja
daa
jbe
jb
and
mov
xor
clc
mov
cmc
les
lock
cmp
cmp
cmc
ret
popa
fdivl
cltd
push
xor
in
xchg
xor
testl
out
pop
pop
gs
cli
pop
jp
cmp
imul
imul
sub
mov
mov
mov
pop
push
sar
bound
xor
pop
outsl
dec
xchg
dec
adc
push
rcll
aas
adc
xchg
lret
mov
xchg
testb
jle
adc
ja
xor
test
mov
sbb
int
sar
cs
and
out
mov
arpl
sbb
dec
clc
imul
cmp
mov
insl
fdivrp
push
loope
add
insl
fsubr
shrb
into
mov
mulb
out
add
pop
lcall
dec
stos
subb
cmpb
adc
movsb
movmskps
sbb
ret
sub
repnz
or
stos
cmp
mov
std
movsb
call
mov
out
fwait
and
xorl
pop
call
xor
jb
out
cmp
loopne
ljmp
or
pusha
sub
xchg
mov
xchg
repnz
adcb
xchg
lret
imulb
mov
dec
das
outsl
fadds
cmp
pop
lret
cmc
adc
jbe
xor
in
adc
andl
test
sbb
mov
adc
add
jns
ror
adc
pop
cmp
rcll
push
pop
lods
insb
ljmp
sub
jnp
sar
imull
push
mov
aad
cltd
test
test
mov
out
and
fisubs
test
int3
push
scas
ret
addr16
push
adc
cli
sub
inc
ljmp
jbe
xor
sahf
mov
and
xchg
iret
fidivl
pop
or
push
and
outsb
and
push
addr16
popa
in
shll
add
inc
jbe
aaa
sarb
xchg
xchg
mov
cmp
pop
insb
fwait
lock
xor
jno
add
jb
sub
stos
in
in
inc
imul
dec
subl
jge
jecxz
in
dec
jnp
das
jno
popf
jmp
push
lcall
popf
push
repnz
xchg
cmp
mov
xchg
lock
add
inc
cmp
out
adc
xchg
lods
sub
and
mov
hlt
jae
ficomps
inc
mov
gs
dec
xchg
adc
jle
les
and
xor
adc
out
xchg
inc
in
into
pop
cld
pop
mov
gs
cmpsl
jae
insl
ljmp
sbb
add
mov
int3
jo
insb
inc
jno
imul
xor
mov
ss
dec
shlb
cmp
cmc
clc
ljmp
sub
adc
cli
fsubr
push
inc
dec
shlb
call
cmp
pop
mov
pop
je
mov
popf
mov
scas
pop
add
cwtl
sub
pop
mov
sahf
add
test
les
adc
xor
push
mov
and
push
ret
push
fsubs
in
xor
aaa
mov
jge
ljmp
jb
clc
pop
push
dec
mov
lret
daa
cmp
mov
add
mov
imul
cld
push
leave
icebp
call
out
jl
scas
sub
inc
aas
pusha
xor
push
jl
dec
mov
insb
xchg
sysret
sub
pop
push
test
mov
and
adc
pop
outsb
loope
and
cmp
inc
nop
sub
mov
mov
dec
inc
cld
mov
add
decl
adcl
lods
insl
push
adc
lea
lods
xorl
inc
pop
or
push
pop
xchg
push
rcrl
les
ficompl
inc
adc
idiv
jne
pop
sbb
add
sub
pop
lret
imul
or
dec
lods
add
xor
mov
inc
xor
mov
test
push
sub
sub
xchg
adc
inc
and
jo
cmp
pop
pop
imul
push
jp
and
cs
dec
adc
pop
jne
adc
out
dec
push
mov
mov
sbb
insl
pop
cli
outsb
cmc
scas
jo
push
jb
pop
jae
stos
int
push
pop
mov
fidivs
sub
or
mov
imul
ret
push
leave
dec
sahf
and
rcl
xchg
in
cmp
sbb
test
jecxz
addr16
fsubrp
addl
hlt
sub
fcmovu
test
lcall
ds
jnp
dec
and
add
jb
popa
insl
sub
imul
and
lret
push
xor
xor
cs
xchg
cmc
movsl
loop
jg
fisubl
ja
lcall
movsb
cmpsl
sbbl
mov
sbb
rclb
nop
mov
fistpll
dec
sub
cmpb
ret
xchg
inc
jg
cmpb
mov
xor
cmp
add
pop
mov
test
insb
sahf
les
outsb
cmp
fmuls
daa
mov
inc
jnp
jne
sarb
pop
mov
sti
lods
adc
enter
pop
jecxz
xchg
pop
cmp
mov
xor
ficoml
cltd
notl
lret
imul
into
stc
jb
out
lods
stc
arpl
incb
test
sbb
jmp
inc
cmp
stos
xchg
insl
ret
fidivrs
ret
lea
mov
rolb
stos
push
pop
xor
mov
sqrtps
dec
clc
jmp
push
inc
jns
mov
jp
mov
mul
in
adc
or
sarl
loope
add
or
cwtl
pop
fdivrs
jg
enter
leave
fwait
cmp
test
mov
into
cmp
sahf
ja
push
repz
cmc
or
out
add
add
mov
hlt
dec
push
fstl
fmull
mov
inc
sub
or
out
push
push
mov
mov
pop
pop
int3
jecxz
and
lock
clc
das
adc
aas
iret
xchg
push
into
sub
not
add
xchg
jle
shr
stos
jb
adc
divl
or
cmp
xchg
dec
test
out
bound
imul
xchg
pop
pop
pushf
sub
push
cmpsl
mov
adc
cld
mov
aas
loope
or
or
fcmovnbe
stos
mov
data16
jge
loopne
sub
cmp
movsb
xor
mov
cmp
sbb
xor
out
jno
fistps
cmp
xchg
adc
or
inc
movsl
dec
scas
testb
les
aas
adc
out
mov
add
push
push
or
xchg
and
xor
out
fwait
jg
cmp
leave
lret
sub
mov
sarb
mov
add
pop
nop
loop
dec
pop
rcl
ret
xchg
inc
xchg
lcall
mov
lcall
mov
xor
jp
or
push
add
addl
push
fidivrs
mov
and
jbe
inc
jmp
mov
ret
aaa
dec
or
fdivl
sbb
cmp
adc
mov
dec
push
and
rolb
jb
fst
pop
sub
adc
mov
xchg
push
jg
add
fisttpl
enter
sub
enter
mov
int
insl
or
cwtl
loop
pop
fs
sub
jp
sarb
notb
enter
inc
lds
frstor
fdivl
aad
addr16
dec
pop
ret
fcmovnb
cmp
mov
fucomp
outsl
pop
jg
imul
mov
das
adc
je
rcrl
sarb
jb
add
arpl
and
int3
cmp
jp
pop
popf
mov
add
incl
cmp
ss
lret
and
clc
and
imul
xor
pop
push
out
mov
mov
scas
sub
jmp
xchg
stos
aaa
andl
mov
aad
mov
inc
lods
xchg
jl
ljmp
subl
ljmp
cmp
mov
mov
inc
inc
jo
pop
insl
sti
in
stos
gs
fisubrl
mov
fsubl
negl
xchg
push
jl
ja
ret
mov
jmp
ret
cmp
jae
and
mov
lods
or
ds
xchg
movsl
shlb
cli
lods
fwait
cmpsl
mov
and
mov
mov
and
sbb
push
cwtl
iret
in
mov
cmp
mov
repnz
into
and
or
xchg
addb
push
xor
mov
xchg
iret
adc
aas
jnp
add
sbb
repz
and
adc
fcomps
inc
outsb
jb
fisttpl
mov
xchg
es
pushf
gs
int
mov
mov
aas
jge
lret
lret
ror
aad
adc
rorl
xchg
ret
xchg
sbb
mov
inc
and
pusha
jp
test
inc
ja
imul
inc
xlat
lea
stc
fwait
shlb
xchg
leave
xlat
add
mov
dec
xchg
adc
adc
jno
sahf
repz
push
fs
dec
inc
mov
pop
repz
inc
add
add
test
push
inc
dec
std
lret
dec
ret
data16
or
lods
rcrl
outsb
sub
xchg
repnz
fcomps
es
mov
lods
dec
test
xor
dec
jo
add
lds
inc
inc
pop
aam
rcll
or
clc
jle
loop
cmp
fimuls
adc
inc
mov
and
outsl
jmp
mov
and
add
jecxz
lret
pop
ffreep
lret
or
add
std
sub
fwait
push
dec
or
into
mov
dec
lret
sub
push
imul
mov
nop
mov
sub
div
inc
aas
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
clc
mov
cld
xchg
out
xor
or
in
insl
mov
ret
cmpb
xor
dec
cmpb
push
repz
into
xor
std
adc
mov
sub
div
ds
pop
and
mov
mov
bound
clc
mov
jmp
into
ret
scas
or
xchg
int
int
mulb
adc
adc
ds
pusha
fbstp
mov
ficomps
or
cmp
jns
dec
nop
cmpsl
mov
mov
add
push
sbb
xor
sub
pop
fwait
sbb
fisubrs
push
sarb
mov
pop
xchg
int
xchg
xor
mov
test
xor
lret
sub
add
neg
jnp
lods
mov
push
adc
rcrb
push
inc
fsubs
fsub
jg
mov
xchg
jle
cmp
mov
pop
repz
aad
ret
int
or
pop
repz
sysexit
int3
scas
dec
dec
fwait
insl
mov
and
mov
mov
int
or
xchg
insb
fs
ficompl
sarl
inc
data16
lock
add
or
adc
mov
inc
out
movsl
mov
mov
lret
out
and
add
push
scas
xchg
mov
dec
out
push
lds
xchg
push
adc
aad
in
out
jns
aam
xchg
sbb
iret
lahf
pop
test
xchg
cmp
lcall
dec
cmp
and
inc
lret
and
lcall
frstor
clc
dec
jbe
nop
addb
xchg
imul
or
xchg
or
and
ljmp
pop
add
cmc
mov
sub
push
mov
lahf
add
or
cltd
cmp
push
sub
daa
sbb
mov
inc
push
orl
loop
cmp
push
jmp
lea
mov
jne
imul
lcall
leave
fisttpll
loopne
mov
mov
dec
pusha
adc
incb
je
ds
lods
nop
pop
mov
mov
and
test
icebp
es
sub
jle
xchg
xor
inc
psubb
xor
pop
xchg
loop
ret
icebp
xor
mov
addr16
xor
aaa
pop
mov
cmp
and
dec
subl
hlt
sbb
jns
xor
addr16
cmp
pop
aaa
out
cmp
xchg
xor
jmp
hlt
jb
or
mov
sbb
insl
and
test
ss
outsl
cltd
out
pop
inc
aad
fbld
push
push
adc
mov
mov
adc
pop
and
jle
lea
neg
sbb
es
icebp
outsl
jnp
clc
in
jmp
flds
push
stos
andb
or
inc
fidivl
std
pop
sub
cmp
clc
jb
push
mov
mov
leave
cmp
in
lods
push
inc
sbb
aad
mov
inc
enter
das
xchg
sbbb
jecxz
fcmovbe
pop
inc
mov
fdivs
lds
std
jmp
xor
mov
jg
pushf
jns
xor
and
inc
adc
pushf
sub
fwait
and
jecxz
inc
out
bound
pop
pop
cmp
or
fldenv
andb
popf
fwait
les
mov
push
out
and
push
sbb
daa
cmp
and
mov
add
adc
ret
sub
fidivrl
call
ds
enter
mov
cmpsl
das
stos
mov
mov
stc
sti
push
gs
testb
test
insb
cs
popa
loopne
jns
dec
daa
adc
or
xchg
xchg
loopne
adc
xchg
push
in
add
outsb
mov
fstpt
out
shl
call
das
sub
insb
mov
in
test
mov
mov
sbb
hlt
adc
cmp
mov
lods
pcmpgtd
jbe
stos
xor
mov
fsubl
cwtl
gs
mov
out
stos
in
sbb
sub
mov
sbbl
ja
nop
dec
and
in
jp
sbb
into
or
jmp
cmpsl
mov
orl
add
add
aam
dec
xlat
inc
xchg
jnp
push
mov
test
push
mov
mov
pop
es
mov
lahf
adc
pushf
mov
mov
inc
dec
icebp
aam
pop
jecxz
pop
sarl
adc
or
mov
rorb
bound
xor
rcl
or
ljmp
clc
leave
in
lock
ljmp
fcompl
in
mov
or
enter
add
sarb
bnd
int3
stos
pop
outsb
xor
sbb
pop
cmp
push
aaa
fwait
add
fwait
outsl
jmp
xchg
add
inc
jecxz
ds
mov
out
pop
xor
or
push
loopne
lock
or
imulb
mov
sub
les
mov
jmp
jecxz
mov
call
data16
push
jbe
shrl
mov
xor
aam
int3
sbb
add
pop
ja
sahf
and
xchg
dec
das
mov
jb
lahf
jge
out
jmp
loope
aad
gs
or
jae
ret
xchg
andb
dec
jg
xchg
pop
mull
jae
js
fnstcw
popf
enter
loope
idivl
pushf
and
fcompl
stos
fs
decl
inc
xor
dec
out
lods
push
repz
ja
cwtl
jge
icebp
push
pop
cmp
dec
adc
jp
add
call
das
fisttpll
push
test
aaa
push
adc
dec
jb
ret
shl
stc
out
push
data16
sbb
enter
and
jg
push
mov
iret
ficoml
fdivl
icebp
inc
or
xchg
out
cmc
sub
mov
jmp
icebp
sub
test
ficoml
loope
in
xor
pop
add
push
shl
orl
inc
in
and
adc
push
and
mov
and
mov
inc
xchg
xchg
adc
repnz
dec
cld
inc
aam
clc
mov
cmp
ret
fwait
mov
inc
mov
adc
sub
fildll
add
mov
or
sbb
mov
mov
cmp
pop
and
in
outsb
dec
adc
mov
adc
sar
lea
ds
gs
shrl
push
mov
pop
mov
jge
stos
shll
pop
fcmovb
mov
dec
std
lock
and
add
loope
push
mov
mov
cld
jno
repz
jmp
cli
push
ja
sub
icebp
gs
adc
adc
pop
mov
cmc
aam
sub
mov
clc
scas
jno
int3
insb
orl
or
push
mov
jne
or
fdiv
js
std
jo
push
outsb
movsb
rorl
sub
call
gs
mov
cmpsl
dec
mov
rcll
outsb
mov
rol
outsl
dec
sahf
test
dec
test
jns
xchg
fiadds
sbbl
push
mov
xor
test
adc
cwtl
push
sar
xor
lahf
adc
push
imul
adc
lahf
shlb
inc
iret
push
push
mov
into
pop
ret
dec
add
dec
daa
scas
push
mov
adc
jmp
cmpsb
setbe
fidivrs
lret
movsl
sahf
and
mov
data16
ja
push
je
xor
mov
sbb
jp
lods
push
je
adc
nop
adc
lods
loopne
push
enter
cs
xor
pushf
out
and
js
xorb
xchg
cmpb
push
push
into
adc
std
xchg
scas
inc
cmpsb
jb
mov
fbstp
pop
xor
xor
xor
mov
jb
out
or
fidivrs
inc
mov
ret
pusha
sbb
and
popf
lret
insl
adc
inc
sbb
cmp
pop
mov
loopne
jl
les
add
add
sub
push
add
out
pop
pop
rclb
imul
pop
xor
lcall
sub
rcll
das
sub
jmp
and
push
lods
insb
lods
push
inc
mov
cmp
xchg
xchg
push
loop
stos
cmp
repnz
jmp
add
xor
out
iret
xchg
pop
stos
das
jl
fisubl
int
inc
ret
jp
lret
push
push
cltd
xchg
and
in
test
xchg
pop
cs
push
out
xor
addr16
mov
push
xor
mov
xor
inc
lcall
push
outsb
xor
pop
aad
movsl
sub
mov
iret
leave
sub
pop
imul
test
push
lds
mov
lret
pop
cld
adc
sub
xchg
mulb
pop
lcall
and
sbb
out
ret
in
xor
cld
mov
out
stc
imul
or
rolb
cmpsl
imul
sti
cmp
jle
orl
add
mov
mov
fldcw
pop
xor
imul
aad
fisubrl
addps
das
sahf
in
xlat
and
sub
xchg
or
clc
fwait
aam
stos
mov
mov
loopne
push
jns
in
push
mov
call
xor
jb
pop
push
cmc
xchg
out
cmpsb
out
adc
es
cmp
test
mov
xorb
in
std
ret
cli
inc
mov
dec
es
pushf
roll
int
ljmp
push
lock
mov
jns
add
sbb
cld
xchg
mov
scas
lcall
les
inc
pop
lret
dec
push
out
outsb
mov
decb
mov
pop
repnz
cmp
iret
mov
push
sbb
pop
cmp
mov
sbb
sub
das
mov
stos
pop
insb
xchg
and
mov
mov
das
sub
call
xor
jns
jns
aad
cmp
and
pop
lret
mov
cmp
repnz
push
mov
jbe
mov
in
aam
mov
popa
andb
jecxz
adc
adc
mov
out
ret
stos
add
ret
pop
into
stos
cmpsb
sbb
mov
and
pop
aad
add
sub
ret
xchg
add
mov
xchg
sahf
sub
cli
nop
stc
ret
hlt
call
pop
pop
and
clc
pusha
movsl
or
jmp
sahf
sub
in
push
mov
adc
or
xchg
mov
mov
inc
cmpsb
aad
add
test
shll
gs
or
ret
dec
push
sar
stos
mov
mov
mov
roll
aas
mov
decl
test
mov
in
mov
les
dec
add
aad
fcmovnbe
popw
xlat
shr
cmc
jae
cltd
sub
addb
out
out
and
loope
jmp
dec
rclb
sub
ds
enter
and
popa
popf
aam
imul
push
addb
xchg
push
in
mov
inc
rorb
aad
fldl
jb
call
inc
aam
cwtl
idivl
fists
pop
int3
jmp
mov
sarb
icebp
out
mov
hlt
icebp
lcall
xchg
lcall
sbb
outsl
sbb
xlat
subl
aaa
jbe
push
fs
mov
inc
xor
adc
mov
add
test
jecxz
add
mov
push
repnz
pop
mov
mov
pop
xchg
fldenv
push
mov
mov
mov
sti
mov
lds
insl
push
xchg
jl
adc
dec
push
fsub
push
mov
loope
lods
mov
pop
fadd
push
dec
push
in
scas
push
mov
inc
xchg
jb
mov
fistpll
icebp
insb
xor
scas
popa
negl
je
jne
cmp
mov
sti
xor
int3
lea
int
lret
outsl
ret
enter
add
rorb
stc
sbb
sbb
sub
gs
cmp
faddl
cmpsb
sub
xchg
popf
dec
test
sbb
and
testl
xlat
or
mov
xor
dec
or
loope
adc
push
pop
jle
pop
pop
lret
mov
pop
in
fcmovne
mov
notl
inc
jp
adc
push
sub
aad
mov
test
mov
and
icebp
pop
movsl
xchg
out
mov
clc
frstor
out
push
aad
cmc
cmp
imul
xchg
mov
bound
jle
or
and
call
cmp
mov
pop
pop
sub
testl
pop
mov
mov
insl
imul
cmp
jae
add
outsl
and
aad
or
pop
adc
aaa
xor
and
sbb
shll
push
mov
push
call
movsb
fistpll
adc
clc
in
fdivrl
and
popl
inc
xchg
jge
xor
test
push
icebp
leave
mov
mov
leave
sbb
rcl
dec
push
mov
lods
outsl
mov
xchg
lock
sbb
insl
mov
scas
push
and
mov
pusha
shl
lahf
leave
push
fnsave
push
inc
jae
pop
scas
pop
outsl
ret
hlt
loop
xorl
push
ljmp
js
push
sub
mov
call
int
adc
inc
repnz
test
enter
cld
mov
call
cld
int
dec
mov
in
add
ret
lods
rcl
xor
idiv
repz
ret
je
movsb
or
mov
enter
lcall
test
push
imul
sahf
mull
js
call
add
pop
and
iret
adc
mov
notl
cmpsb
repz
mov
je
bndstx
clc
mov
outsb
aas
jno
add
cld
pop
lock
adc
adc
jo
dec
adc
sti
xor
fsubp
test
ret
mov
jle
scas
sti
and
sbb
es
stos
sbb
lods
mov
rol
test
faddp
push
rcrb
ret
shrl
and
cmp
sub
jmp
push
cmc
cs
and
aad
fistl
jp
int
dec
loope
mov
rol
iret
sbb
push
scas
enter
adc
xchg
pop
mov
adc
lods
push
pop
mov
dec
and
mov
bound
mov
out
inc
aad
push
mov
leave
mov
repnz
push
inc
cmpsl
push
or
xchg
jp
popa
add
clc
test
and
lcall
xchg
scas
mov
adc
jmp
or
sub
test
dec
and
movsb
int
int3
mov
cmp
hlt
call
dec
jo
and
fwait
jns
push
xchg
lock
dec
nop
adc
mov
jmp
in
iret
inc
loope
jne
lea
adc
mov
xor
and
xchg
mov
cwtl
sbb
dec
inc
sbb
test
ret
loope
imul
fwait
dec
push
pop
mov
arpl
inc
scas
nop
xor
std
out
push
lcall
push
ficompl
mov
pop
mov
sub
push
add
rclb
pop
pop
push
frstor
fsubl
gs
cmp
cltd
pop
xchg
cwtl
out
ds
pop
adc
pop
adc
leave
xchg
push
pop
add
xchg
xchg
xchg
imul
pop
cmp
fstps
dec
inc
popa
xchg
imul
jg
aam
sub
lock
mov
mulb
xor
inc
push
adc
jno
sub
jb
ds
repz
and
mov
jbe
sub
add
out
pop
in
dec
sub
pusha
outsb
lods
cmc
inc
imul
mov
insw
jge
add
jno
pop
data16
sub
xchg
lret
and
inc
push
sub
mov
nop
mov
pushl
mov
not
imul
and
or
adcb
xor
je
jne
jmp
in
icebp
loope
into
and
push
push
push
loopne
jp
adc
pop
dec
rcpps
dec
int
add
pop
push
addl
cmp
mov
into
jo
push
mov
pop
or
sti
ja
mov
leave
push
data16
pop
std
ds
in
mov
inc
filds
push
stc
xchg
mov
inc
ljmp
or
int3
popa
aaa
jne
popa
fsubrs
bound
dec
sub
mov
dec
push
cmp
push
and
rolb
test
and
mov
fcoml
xchg
mov
rcrl
daa
aad
repz
mov
cld
xor
jge
pop
int
cs
rolb
mov
sbb
insl
stc
xchg
das
mov
std
jae
fistpl
fcomps
cmp
popa
push
lcall
lea
sarb
outsb
mov
lods
jne
mov
int3
loopne
cli
jge
cmp
push
dec
loopne
inc
push
mov
pop
and
xor
mull
movsb
mov
cli
mov
jp
stos
adc
inc
arpl
cld
decb
mov
mov
xchg
cmpl
xchg
cmp
pop
dec
addb
hlt
dec
jo
cwtl
lds
inc
push
lods
bound
jle
fsubr
push
mov
loopne
fs
in
jns
mov
mov
add
rorb
lcall
add
and
insl
and
out
and
push
inc
mov
cmpl
sbbb
fldt
cmp
or
and
mov
dec
mov
add
hlt
cmp
rclb
lock
int
js
bound
xor
mov
rcll
pop
sar
jo
stos
adc
lock
push
or
lds
mov
mov
jecxz
pop
push
mov
mov
jg
cmp
inc
popa
jae
push
je
sbb
sbb
jge
inc
push
inc
mov
out
jl
push
fdivrs
jg
pushf
pop
xchg
cld
lods
and
xor
int3
jle
sbb
pop
and
mov
sbb
es
cs
or
js
jp
add
cmc
fistpl
fstl
dec
push
mov
jns
mov
ret
inc
pop
push
shll
sbb
cmp
aam
lret
add
sbb
jecxz
push
faddl
pop
add
lcall
cmp
fs
stos
dec
cwtl
movsl
or
inc
mov
aaa
mov
sahf
in
sub
cmp
lds
jecxz
arpl
sub
push
mov
and
mov
lock
mov
pushf
daa
jb
jl
out
pop
stc
pop
out
test
stos
mov
jbe
xchg
insl
jg
pusha
mov
add
add
out
or
outsl
into
mov
lds
cltd
dec
hlt
fiaddl
xchg
push
int3
inc
aaa
pushf
push
pop
ss
sub
imul
packuswb
push
iret
test
shr
idivb
jno
mov
xor
dec
push
rcr
jne
xor
fisubl
aad
pushf
lds
es
and
lret
in
fadds
data16
mov
test
jl
test
mov
call
pop
xchg
push
mov
fmull
shll
sub
aam
popf
ficoms
and
sbb
sarb
push
mov
testb
lock
orl
xchg
mov
jns
lcall
add
inc
addr16
int
mov
pop
movsb
and
imull
cld
scas
xor
mov
mov
out
lret
rcl
inc
lret
popf
adc
pop
repz
dec
daa
and
movsl
and
and
push
mov
and
roll
push
dec
or
lret
mov
aas
xorb
push
sub
int3
movsb
jnp
call
sub
xchg
jno
inc
xor
imul
adc
lock
mull
xlat
scas
mov
mov
out
push
xor
mov
push
inc
out
lahf
xchg
stc
adc
outsl
movsb
dec
daa
dec
and
sub
jb
xchg
pusha
sub
jne
dec
dec
lcall
cmc
stos
leave
jnp
xor
cmpsb
rolb
adc
cltd
mov
adc
dec
push
adc
insl
insb
mov
mov
dec
sbb
xchg
cmpsl
sahf
lret
shrb
mov
add
inc
shlb
jmp
push
lahf
mov
mov
adc
flds
mov
bound
popf
addr16
in
jl
lock
xchg
xor
lods
xchg
sub
fisttps
sbb
sub
and
lods
incb
mov
or
jle
iret
cmc
out
add
dec
add
pop
nop
push
dec
rcl
dec
sarl
jecxz
sub
stos
cmp
inc
das
mov
inc
xchg
add
imulb
xor
dec
ret
insl
push
lret
jmp
sub
push
pop
fwait
icebp
cmc
test
stos
mov
bound
cmp
aas
fcomp
mov
fcmovnb
js
test
cmp
xchg
insb
in
aas
mov
mov
stc
dec
jb
movb
push
push
mov
lods
xor
add
xor
or
pop
cwtl
sahf
inc
cwtl
test
and
xchg
aam
mov
sbb
aas
pusha
xchg
cmc
cmpsl
mov
cmpsb
addr16
sahf
push
or
adc
pop
mov
popa
mov
repnz
xchg
or
and
stc
loop
leave
pop
sbb
loop
scas
xor
mov
jg
sub
cmp
dec
in
stos
das
imul
mov
sub
dec
adc
decb
sbb
cmp
jne
jns
or
pop
push
mov
loop
push
and
mov
cmpl
pop
sub
fnstenv
xor
jg
sti
xchg
pop
fsubrl
imul
testl
xchg
movsb
shrl
sbb
mov
les
push
dec
mov
scas
fxch
cltd
fisubs
loope
xor
xor
cmp
pushf
dec
test
xchg
outsb
out
movb
std
iret
pop
jp
outsl
mov
clc
arpl
dec
xchg
xor
arpl
int3
sub
mov
jns
mov
xor
popa
aas
icebp
sbb
cs
lret
scas
add
adc
jo
xchg
in
inc
in
sbb
fwait
xor
scas
outsl
testl
xchg
stos
sbb
and
pop
lahf
mov
xor
and
jmp
lea
adc
out
xorb
and
mov
xchg
xor
cltd
cld
push
or
loop
out
dec
stos
adc
jb
mov
loop
jge
jbe
add
push
fucom
dec
stos
gs
pop
loop
xchg
xchg
popf
inc
jg
aas
add
dec
insb
xlat
dec
loope
cmp
fldl
push
mov
lahf
iret
mov
sbb
shlb
xchg
mov
inc
in
icebp
inc
pop
fsubrl
mov
jb
mov
pop
cwtl
dec
push
xor
mov
bound
hlt
cmp
lret
inc
pop
lcall
in
push
mov
hlt
xlat
fsubr
push
xchg
and
mov
cld
jmp
push
jmp
nop
imul
loopne
xchg
test
mov
into
mov
add
arpl
sahf
stos
ror
dec
sar
mov
ss
ret
cmp
aam
mov
sti
xlat
shlb
loopne
shll
xchg
mov
push
nop
jae
jb
xor
nop
lret
inc
lret
stc
mov
aam
insl
pop
lcall
pushf
push
lock
mov
pop
ja
outsb
repz
push
out
lods
adc
fsincos
dec
test
sub
fstl
xchg
cmp
mov
jecxz
xor
stc
push
inc
jp
shll
cwtl
pop
ds
mov
imul
jmp
fildll
xor
loope
data16
cmp
sbb
jp
xorl
leave
shll
cmpsb
test
outsb
ljmp
pop
mulb
push
or
in
cltd
loop
lods
int3
iret
fs
sarl
cmp
ret
aad
mov
jne
inc
mov
icebp
jo
sub
sbb
scas
mov
mov
pop
js
sub
outsl
mov
lret
aaa
movsb
loopne
movsb
xchg
scas
outsb
repz
add
xchg
mov
dec
aam
repnz
lock
sub
mov
leave
mov
mov
cmp
jge
call
sbb
mov
loop
pop
ja
fsubp
lds
and
mov
pop
pop
inc
sub
or
xor
jmp
and
push
xchg
mov
xchg
jp
icebp
or
fyl2x
std
shufps
dec
inc
insb
in
jae
pop
in
inc
pop
fs
aad
inc
insb
fbld
mov
fbld
push
popl
inc
pop
cmp
inc
fldl
jmp
lods
pop
aas
adc
imul
cmpsl
pop
xor
in
mov
lods
jno
mov
mov
adc
dec
daa
fdivl
mov
xchg
lock
and
sbb
inc
pop
cs
xchg
sub
ret
lcall
and
cmpsb
mov
loop
loopne
jge
xor
mov
outsl
mov
test
lret
outsb
repnz
rdtsc
pop
les
mov
test
mov
and
lret
xchg
pop
shufps
loope
adc
aad
ret
add
fldcw
and
fdivrl
scas
ret
mov
gs
iret
inc
insl
mov
clc
jnp
ja
insb
insb
lock
stos
xor
mov
imul
push
fnstenv
repz
and
inc
mov
push
fdivrs
out
pop
pop
mov
push
repnz
mov
pop
dec
cwtl
jecxz,pn
mov
ja
push
sbb
in
mov
cld
shlb
cmc
in
lock
decl
add
test
sbb
pushfw
cmp
imul
xor
adc
fisttpl
sub
adc
fdivl
call
dec
imulb
dec
dec
loopne
inc
outsb
adc
inc
cmp
in
add
jbe
subb
mov
xor
sub
scas
inc
mov
mov
mov
sbb
push
add
bound
push
mov
addl
mov
outsb
in
loope
std
pop
xchg
mov
ret
js
sub
sub
pop
lret
push
add
sbb
in
push
push
popf
sbb
dec
sub
roll
push
push
push
inc
cltd
and
inc
test
sbbb
xor
sbb
sbbl
lea
stos
imulb
xchg
jecxz
cmp
cs
sub
jae
mov
add
dec
dec
jecxz
jl
sti
testl
mov
popa
pop
xchg
out
inc
mov
es
cmp
mov
daa
out
call
and
lock
dec
xor
xor
lea
push
cmc
xor
scas
shrb
jle
mov
insb
add
lcall
and
aaa
add
mov
add
pop
andl
int3
lcall
adc
xor
cmpsl
lret
and
and
dec
aas
clc
stos
loop
into
mov
push
test
mov
cwtl
ljmp
xchg
cmp
les
or
mov
or
mov
xlat
cmpsl
cmp
sbb
mov
mov
lds
cmp
pop
mov
nop
and
add
push
push
mov
push
aas
push
cmp
xor
xchg
dec
mov
cmp
lock
icebp
push
mov
xor
aad
rcr
cmp
push
cmp
shrl
dec
ljmp
cmp
jge
jne
icebp
mov
push
add
pop
and
cs
mov
aam
lock
stos
loop
jns
inc
imul
cwtl
and
add
lods
aad
ljmp
inc
ljmp
inc
pop
aaa
lcall
ljmp
pop
xchg
adc
jle
iret
data16
sub
je
mov
pandn
fwait
imul
dec
mov
inc
xor
jl
js
add
lahf
pop
add
xchg
mov
ljmp
bound
test
mov
inc
rolb
and
adcl
dec
fsub
rclb
bound
inc
popf
je
repnz
sahf
bound
clc
les
xchg
push
stos
dec
or
fistpll
test
push
jae
sbb
imul
data16
out
movsb
xchg
adc
jo
scas
mov
push
sbb
andl
jg
divb
lahf
adc
mov
insb
ret
mov
lret
push
pop
sbb
push
xchg
cmp
xchg
scas
ret
jo
push
push
clc
inc
pop
andl
lds
adcb
lret
dec
int
out
jecxz
adc
test
cmp
lret
out
push
and
ret
out
mov
push
inc
push
and
or
dec
int3
jne
pop
push
mov
mov
adc
mov
sahf
and
out
jl
mov
or
test
aad
jae
lea
nop
lds
xlat
push
push
icebp
fwait
mov
popa
xor
inc
bnd
rorl
xor
dec
cltd
push
push
adc
call
cltd
lcall
outsl
loopne
push
cmp
jmp
out
cli
xor
pop
push
ljmp
flds
mov
jecxz
jge
scas
adc
push
nop
sub
xor
xor
incb
sbb
mov
sub
in
xchg
icebp
addl
lds
mov
jno
mov
in
pop
mov
test
aam
jae
out
inc
adcl
nop
and
xor
sbb
push
stos
bound
in
xchg
and
sub
lahf
movsb
sbbb
jnp
call
es
pushf
push
mov
mov
pop
sub
daa
xor
mov
mov
ret
test
out
fdivr
or
dec
jae
cli
jg
js
mov
out
or
sbb
lods
mov
loope
mov
dec
inc
test
and
nop
gs
mov
es
xor
jg
mov
xchg
and
adc
popf
push
mov
pop
sbb
add
aas
cmp
jo
mov
inc
fsubrs
fmuls
int3
test
push
sub
and
xchg
push
mov
mov
or
ljmp
pop
cmpsl
xor
mov
mov
lret
mov
fcompl
xchg
insb
xchg
jbe
lcall
mov
cld
flds
mov
shrb
xchg
loopne
test
mov
js
data16
or
xchg
das
mov
or
mov
push
orb
cwtl
adc
mov
mov
pusha
call
popf
push
sub
dec
cmp
adc
orb
add
xchg
jno
fs
sub
xchg
mov
cmc
cmp
xchg
or
and
fsubrl
jne
sbb
aaa
jle
iret
and
ljmp
iret
cmp
sbb
arpl
call
icebp
inc
lods
idiv
inc
xchg
inc
fcmove
inc
cmp
xchg
cmp
jp
and
jno
sbb
fdivr
pop
push
pop
and
push
mov
jle
inc
cmovp
jno
movsb
outsl
mov
movsb
push
cmpsb
add
and
rorb
xor
iret
in
cmp
int3
scas
pop
and
jg
out
in
pop
mov
orb
cmp
mov
jmp
lahf
into
mov
cmc
sub
sub
ret
sbb
pop
lcall
cmp
adc
test
sti
mov
inc
push
leave
mov
out
pop
rclb
pop
inc
stos
cmpsb
pop
fwait
mov
push
push
dec
xlat
dec
inc
mov
imul
sti
lret
dec
mov
xchg
or
jae
mov
bound
gs
jns
lahf
sub
xchg
mov
push
aam
add
and
mov
jns
daa
and
jecxz
in
and
adc
xor
xchg
jno
xchg
scas
ss
lds
cmpl
sbb
mov
jl
dec
cmc
inc
outsb
xchg
inc
mov
pop
xorl
jg
adc
popf
iret
and
inc
pop
push
sbb
mov
les
push
sub
push
push
pop
jae
adc
pop
iret
xor
cltd
es
ljmp
adc
jg
jnp
pushf
push
mov
in
xlat
movsb
icebp
xchg
sub
push
xchg
sbb
cmc
out
pop
lret
inc
xchg
jg
adc
jecxz
jns
in
popf
iret
sub
bound
xchg
add
inc
pushf
pop
cld
loop
dec
xor
dec
xchg
fwait
mov
cmp
mov
ds
xchg
sbb
jne
cmc
push
int
ja
std
mov
dec
add
mov
mov
int
xor
jl
sbb
and
pop
ljmp
mov
mov
jmp
adc
xchg
mov
outsb
insl
scas
aam
adcb
adc
lods
xchg
add
jl
adc
push
mov
cmp
into
and
in
into
icebp
inc
or
xlat
or
mov
ficoml
dec
addr16
jb
sbb
insl
sbb
xchg
or
cmp
fdiv
or
jp
dec
xor
fisttps
enter
dec
sub
inc
mov
fisubrl
pop
mov
adc
sub
pop
lods
xchg
shl
cli
clc
push
ljmp
test
dec
hlt
sbb
lods
fldt
out
cmp
cmpsb
test
sub
push
adc
fcompl
das
cmpsb
out
ljmp
pushf
lods
aas
xchg
mov
push
fs
test
and
lahf
pop
orl
and
jae
inc
mov
in
mov
lods
push
jo
imul
xchg
scas
add
es
aam
xlat
dec
or
mov
xchg
sarl
pop
cmp
sbb
rcrb
pushf
mov
inc
inc
movsb
popa
jmp
lods
or
test
jecxz
ss
lds
sbb
push
push
adc
push
repz
and
xchg
pop
mov
cmp
xor
int
lret
cld
popf
hlt
fiaddl
data16
daa
in
mov
or
and
das
cmp
cli
mov
sub
icebp
push
stos
clc
fdivrl
cmp
mov
sbb
ds
in
xor
mov
je
xor
pushf
fwait
adc
xor
adc
mov
push
cmp
fwait
stos
cmc
repz
push
or
sub
outsl
xor
out
mov
adc
lret
das
mov
or
add
fdivs
in
shlb
into
ja
dec
lods
pop
or
push
lds
push
mov
dec
fsubrs
jne
add
aas
shrl
and
jb
rcr
repnz
fsubp
jbe
sbb
xchg
xchg
jle
enter
fildl
push
cmpsb
and
push
mov
adc
addr16
int
mov
cmp
outsb
icebp
jge
nop
popa
jne
testb
push
cmp
inc
arpl
xchg
mov
pop
mov
mov
sub
xchg
pop
cmp
cmp
imul
sbb
nop
repnz
cli
data16
dec
push
jmp
ret
shll
shll
mov
and
add
imul
cwtl
push
pop
dec
test
ss
and
dec
mov
xchg
inc
aaa
jecxz
dec
arpl
aad
and
sbb
fsubs
or
sub
aaa
xchg
gs
dec
xor
xchg
cmpsb
ss
subb
adc
mov
add
inc
add
pop
mov
dec
fsubs
fisttpll
out
jl
mov
or
xlat
pushf
dec
mov
add
sub
xor
stos
pop
xlat
and
ds
aad
jmp
dec
stos
test
and
push
push
sub
in
bnd
scas
rcl
adc
enter
outsl
sub
int3
inc
cwtl
dec
jo
scas
mov
inc
mov
mov
mov
mov
dec
negb
adc
fldt
push
pop
lock
jnp
popf
pop
cli
into
dec
movsl
lock
int3
lods
loop
adc
setl
testl
dec
inc
or
lret
jge
xlat
and
fsubrs
mov
sub
pushf
nop
pop
mov
aad
je
sahf
pop
test
jo
pop
cli
aaa
popa
xchg
rorb
ret
jl
out
addl
nop
das
outsl
les
movsb
push
add
lret
inc
adc
sahf
lahf
add
insl
sbb
sub
bound
dec
js
stc
je
cltd
jecxz
adc
push
cmp
fmull
inc
pop
mov
leave
mov
in
pop
ret
adc
shrb
fsubrp
sub
frstor
in
push
ret
xor
int
and
lock
stos
mov
xlat
imul
jle
in
sub
and
in
or
jp
jo
sarb
jb
in
or
adc
ret
sub
dec
adc
in
addr16
mov
repnz
mov
mov
das
test
cmp
jl
imul
lods
idiv
jmp
sub
mov
shl
cld
inc
enter
add
out
cmp
sub
movsl
cmp
aas
repnz
jp
cmp
push
push
inc
rcrl
mulb
mov
pop
int3
jae
stc
cmp
and
push
popf
xchg
jecxz
fs
xor
enter
push
jno
lret
aad
fisubs
outsl
sahf
sub
cmp
int
call
mov
pop
mov
jno
orb
shlb
cmp
add
and
sub
das
and
fidivrs
nop
test
dec
insl
fwait
pop
in
xlat
lret
clc
test
sbb
jmp
jbe
pusha
jns,pt
or
fs
scas
inc
jecxz
add
mov
mov
cld
cmpsl
adc
push
mov
out
xchg
mov
lea
fcmovne
pop
add
stos
sbb
imulb
xchg
popl
hlt
das
lcall
mov
mov
xor
lock
in
insb
inc
mov
sbb
std
lcall
fistl
mov
sub
cmovp
adc
jnp
xchg
fwait
sub
mov
cmc
push
push
jno
cmc
cmp
scas
jb
sub
fists
iret
incl
frstor
push
in
push
mov
jmp
pusha
stc
stos
lahf
lds
inc
lret
int
insl
add
cmp
mov
fsubrs
sub
ret
lcall
or
aas
inc
loope
cmpsl
add
sub
push
cmpsb
adc
xor
aas
add
mov
das
inc
sbb
lahf
test
add
ljmp
jae
popa
mov
icebp
cwtl
js
pusha
inc
push
les
adc
repz
mov
xchg
lcall
popf
push
dec
popa
mov
push
scas
roll
mov
cmp
add
scas
pusha
nop
bound
shrl
sahf
push
sbb
push
inc
filds
enter
or
or
pop
or
or
jmp
xor
xchg
movb
mov
add
sbb
movsb
pop
xchg
cmc
sbb
stos
jns
fwait
and
sbb
or
push
jbe
pusha
popa
js
and
daa
add
fmuls
ficoml
jae
xor
mov
fcomip
lds
xchg
dec
push
sbb
inc
sahf
icebp
orl
push
imul
imul
test
and
in
or
enter
sbb
push
and
mov
stc
stc
pop
or
mov
xor
fildll
stos
dec
jecxz
and
scas
sti
scas
test
mov
cmp
pop
add
daa
in
xor
nop
subl
xchg
jae
popa
int
and
push
movsl
fldcw
outsl
fstp
or
stos
sahf
pusha
mov
das
out
movsl
push
sahf
cwtl
mov
mov
cmp
mov
cmpb
or
mov
mov
dec
push
push
xchg
arpl
mov
js
cli
hlt
add
sbb
ficoml
cli
mov
out
sub
repnz
mov
mov
cmp
adc
das
inc
inc
fsubr
push
mov
dec
test
cmp
rcrb
xor
lea
jge
dec
lret
sub
movsb
sbb
bound
and
int
adc
mov
ljmp
add
insl
jae
lods
das
data16
xor
lods
xor
movsb
mov
xchg
jnp
adc
faddl
outsb
push
cwtl
je
or
movsb
rorl
adc
mov
mov
fnstsw
xchg
dec
outsb
mov
dec
lret
jnp
mov
or
jecxz
jae
mov
pusha
sub
loope
stc
and
lcall
mov
inc
sub
mov
mov
pop
and
fwait
mov
jnp
push
inc
in
lds
lea
mov
shll
mov
call
cmpsl
pop
das
xchg
andb
nop
lahf
jns
mov
pop
cmc
add
pop
outsl
sbb
jle
in
mov
out
into
push
insl
xlat
test
out
sub
icebp
testl
push
lret
sbb
adc
cmp
movsb
repz
insl
add
mov
mov
push
stc
push
ror
loop
cli
sbb
jmp
mov
out
mov
das
mov
adc
cmp
fcmovnb
stc
sarl
mov
add
push
sub
or
sbb
mov
pop
push
movl
leave
jns
push
lcall
in
mov
gs
lret
out
aas
mov
push
add
or
fstps
push
in
dec
movsb
xor
or
fwait
push
dec
sub
mov
cwtl
rcrl
roll
movsb
cltd
insl
andb
dec
xor
negl
ss
test
out
inc
sahf
push
xor
jae
xchg
cltd
sbb
stc
cltd
mov
or
dec
mov
fxch
xlat
adc
pop
jb
add
inc
sub
lods
sbb
adc
sub
aas
jae
loop
cmp
mov
xchg
pop
stc
push
sub
adc
ja
jno
ja
mov
cmp
jl
and
popf
push
jg,pt
in
punpcklbw
or
aad
sbb
add
ss
adc
lcall
shl
mov
and
les
jns
cmp
dec
mov
popf
mov
rclb
test
mov
pop
stos
fimull
outsl
lods
daa
jae
cmp
aas
sub
dec
aad
loope
dec
add
mov
jmp
popa
les
fidivs
loopne
xor
lret
cmp
mov
cmp
sub
rorl
xchg
sub
ficompl
decb
sbb
stc
xchg
pop
nop
mov
jno
in
pop
in
outsl
mov
and
call
ljmp
inc
and
rcr
sahf
pop
insb
les
push
cmp
xor
pop
add
and
mov
imul
fbld
outsb
in
jno
out
pop
sub
aas
fisttpll
mov
lcall
sbbl
mov
inc
orb
push
shr
mov
mov
pop
adc
inc
cltd
mov
out
cld
push
in
dec
sub
jge
xchg
fldl
or
scas
add
pusha
stc
in
dec
xchg
jle
sbbl
xorl
jmp
clc
mov
arpl
ljmp
push
in
add
cmp
loop
xor
inc
aaa
jmp
mov
lcall
in
mov
cmp
mov
cmp
or
shrl
dec
subps
dec
xor
enter
push
push
std
jle
sbbb
cmpl
cmp
sub
jno
sti
aaa
mov
adc
xor
jmp
sbb
insb
ljmp
lcall
stos
popa
adc
fmuls
xchg
add
push
inc
in
cmc
pop
mov
or
in
adc
push
jne
jp
and
js
dec
test
es
fucomip
jge
mov
mov
dec
push
and
lods
mov
mov
push
sub
loopne
push
jns
add
lods
bswap
ficoml
sti
fdivrl
loope
fs
adc
jge
xchg
xchg
jnp
cwtl
popl
ret
push
mov
jo
mov
push
or
call
sahf
add
mov
push
imulb
sub
add
sbb
incb
mov
mov
imul
addr16
pop
and
mov
sub
dec
ja
icebp
imul
repnz
aad
pop
idivl
les
push
icebp
cmp
mov
jle
cld
or
flds
pushf
mov
in
out
dec
loop
arpl
pop
inc
fldcw
adc
xor
jbe
inc
inc
sbb
push
sub
mov
mov
or
sbb
dec
xchg
pushf
ds
push
sub
leave
push
sub
nop
lods
mov
or
nop
insb
dec
lcall
xlat
movsb
xchg
repnz
imul
movsl
push
lahf
xor
pop
int3
inc
jae
es
lods
cmc
push
xor
inc
int3
xchg
aaa
inc
mov
mov
sub
sti
add
out
push
adc
cmp
pop
push
pop
fdivrs
cwtl
dec
jbe
sbb
stos
leave
adcb
mov
int
mov
js
adc
cli
sub
adc
movsb
sbb
pusha
and
xchg
pop
sbb
aad
dec
and
inc
fsub
clc
xlat
cmp
loop
xor
stc
sahf
pop
sub
cmpsb
sbb
push
cmpsb
jmp
adc
in
push
xor
rclb
test
pop
xor
push
mull
mov
aaa
scas
mov
lock
test
pop
sbb
add
cmp
neg
ret
test
flds
popa
in
pop
or
das
pop
mov
xchg
push
loope
ret
dec
insb
adc
jne
and
mov
lock
mov
xor
fmulp
sbbl
hlt
shll
cli
sub
fimull
sub
xor
movswl
inc
loopne
jmp
adc
push
in
xor
pop
loop
lods
mov
dec
cld
sarb
rorb
stos
mov
jb
dec
enter
sbb
adc
push
dec
stos
add
ret
inc
dec
and
int
popf
xchg
scas
fldt
or
xor
xor
adc
orb
into
mov
jmp
out
cmp
movsl
insb
test
notb
dec
jb
cli
test
xor
movsb
jg
daa
push
cmp
xchg
cs
lcall
das
push
sbb
shlb
or
pop
cmp
xchg
mov
push
test
cli
jle
inc
add
cld
cwtl
jmp
mov
add
mov
lret
insl
dec
adc
mov
sti
mov
movsb
out
pop
adc
xor
enter
cmp
imul
arpl
jg
faddl
push
sbb
cmp
jecxz
pop
xchg
push
mov
fsubr
cmp
int
inc
out
stos
insb
popf
arpl
out
mov
mov
push
jo
jg
addr16
sahf
gs
mov
lea
movsl
adc
lcall
mov
dec
daa
and
ret
bound
xchg
sbb
inc
mov
nop
gs
jae
mov
in
add
movsb
adc
sbb
aas
lret
inc
pushf
cmpsl
sbb
mov
mov
push
enter
add
iret
mov
pop
mov
movsl
jbe
icebp
sub
mov
pop
stos
test
pop
dec
testb
bound
shl
jge
int
inc
lret
pop
pusha
pop
cmp
insl
mov
ja
or
adc
pushw
cmpsl
xchg
fstpt
xor
or
stos
pop
cmp
imul
sbb
pop
dec
jmp
movsb
cli
fsubrs
dec
and
push
mov
lcall
xor
jo
inc
push
cmp
test
scas
sub
mov
icebp
dec
rclb
test
xlat
xchg
test
iret
or
mov
lret
pop
xchg
inc
rclb
ja
aam
pusha
pop
cld
dec
hlt
or
xchg
into
jg
lods
jno
mov
in
ret
hlt
lods
int
addr16
pop
jae
mov
inc
mov
mov
fdivr
inc
pop
sub
stos
lds
ja
daa
jbe
jb
and
mov
xor
clc
mov
cmc
les
lock
cmp
cmp
cmc
ret
popa
fdivl
cltd
push
xor
in
xchg
xor
testl
out
pop
pop
gs
cli
pop
jp
cmp
imul
imul
sub
mov
mov
mov
pop
push
sar
bound
xor
pop
outsl
dec
xchg
dec
adc
push
rcll
aas
adc
xchg
lret
mov
xchg
testb
jle
adc
ja
xor
test
mov
sbb
int
sar
cs
and
out
mov
arpl
sbb
dec
clc
imul
cmp
mov
insl
fdivrp
push
loope
add
insl
fsubr
shrb
into
mov
mulb
out
add
pop
lcall
dec
stos
subb
cmpb
adc
movsb
movmskps
sbb
ret
sub
repnz
or
stos
cmp
mov
std
movsb
call
mov
out
fwait
and
xorl
pop
call
xor
jb
out
cmp
loopne
ljmp
or
pusha
sub
xchg
mov
xchg
repnz
adcb
xchg
lret
imulb
mov
dec
das
outsl
fadds
cmp
pop
lret
cmc
adc
jbe
xor
in
adc
andl
test
sbb
mov
adc
add
jns
ror
adc
pop
cmp
rcll
push
pop
lods
insb
ljmp
sub
jnp
sar
imull
push
mov
aad
cltd
test
test
mov
out
and
fisubs
test
int3
push
scas
ret
addr16
push
adc
cli
sub
inc
ljmp
jbe
xor
sahf
mov
and
xchg
iret
fidivl
pop
or
push
and
outsb
and
push
addr16
popa
in
shll
add
inc
jbe
aaa
sarb
xchg
xchg
mov
cmp
pop
insb
fwait
lock
xor
jno
add
jb
sub
stos
in
in
inc
imul
dec
subl
jge
jecxz
in
dec
jnp
das
jno
popf
jmp
push
lcall
popf
push
repnz
xchg
cmp
mov
xchg
lock
add
inc
cmp
out
adc
xchg
lods
sub
and
mov
hlt
jae
ficomps
inc
mov
gs
dec
xchg
adc
jle
les
and
xor
adc
out
xchg
inc
in
into
pop
cld
pop
mov
gs
cmpsl
jae
insl
ljmp
sbb
add
mov
int3
jo
insb
inc
jno
imul
xor
mov
ss
dec
shlb
cmp
cmc
clc
ljmp
sub
adc
cli
fsubr
push
inc
dec
shlb
call
cmp
pop
mov
pop
je
mov
popf
mov
scas
pop
add
cwtl
sub
pop
mov
sahf
add
test
les
adc
xor
push
mov
and
push
ret
push
fsubs
in
xor
aaa
mov
jge
ljmp
jb
clc
pop
push
dec
mov
lret
daa
cmp
mov
add
mov
imul
cld
push
leave
icebp
call
out
jl
scas
sub
inc
aas
pusha
xor
push
jl
dec
mov
insb
xchg
sysret
sub
pop
push
test
mov
and
adc
pop
outsb
loope
and
cmp
inc
nop
sub
mov
mov
dec
inc
cld
mov
add
decl
adcl
lods
insl
push
adc
lea
lods
xorl
inc
pop
or
push
pop
xchg
push
rcrl
les
ficompl
inc
adc
idiv
jne
pop
sbb
add
sub
pop
lret
imul
or
dec
lods
add
xor
mov
inc
xor
mov
test
push
sub
sub
xchg
adc
inc
and
jo
cmp
pop
pop
imul
push
jp
and
cs
dec
adc
pop
jne
adc
out
dec
push
mov
mov
sbb
insl
pop
cli
outsb
cmc
scas
jo
push
jb
pop
jae
stos
int
push
pop
mov
fidivs
sub
or
mov
imul
ret
push
leave
dec
sahf
and
rcl
xchg
in
cmp
sbb
test
jecxz
addr16
fsubrp
addl
hlt
sub
fcmovu
test
lcall
ds
jnp
dec
and
add
jb
popa
insl
sub
imul
and
lret
push
xor
xor
cs
xchg
cmc
movsl
loop
jg
fisubl
ja
lcall
movsb
cmpsl
sbbl
mov
sbb
rclb
nop
mov
fistpll
dec
sub
cmpb
ret
xchg
inc
jg
cmpb
mov
xor
cmp
add
pop
mov
test
insb
sahf
les
outsb
cmp
fmuls
daa
mov
inc
jnp
jne
sarb
pop
mov
sti
lods
adc
enter
pop
jecxz
xchg
pop
cmp
mov
xor
ficoml
cltd
notl
lret
imul
into
stc
jb
out
lods
stc
arpl
incb
test
sbb
jmp
inc
cmp
stos
xchg
insl
ret
fidivrs
ret
lea
mov
rolb
stos
push
pop
xor
mov
sqrtps
dec
clc
jmp
push
inc
jns
mov
jp
mov
mul
in
adc
or
sarl
loope
add
or
cwtl
pop
fdivrs
jg
enter
leave
fwait
cmp
test
mov
into
cmp
sahf
ja
push
repz
cmc
or
out
add
add
mov
hlt
dec
push
fstl
fmull
mov
inc
sub
or
out
push
push
mov
mov
pop
pop
int3
jecxz
and
lock
clc
das
adc
aas
iret
xchg
push
into
sub
not
add
xchg
jle
shr
stos
jb
adc
divl
or
cmp
xchg
dec
test
out
bound
imul
xchg
pop
pop
pushf
sub
push
cmpsl
mov
adc
cld
mov
aas
loope
or
or
fcmovnbe
stos
mov
data16
jge
loopne
sub
cmp
movsb
xor
mov
cmp
sbb
xor
out
jno
fistps
cmp
xchg
adc
or
inc
movsl
dec
scas
testb
les
aas
adc
out
mov
add
push
push
or
xchg
and
xor
out
fwait
jg
cmp
leave
lret
sub
mov
sarb
mov
add
pop
nop
loop
dec
pop
rcl
ret
xchg
inc
xchg
lcall
mov
lcall
mov
xor
jp
or
push
add
addl
push
fidivrs
mov
and
jbe
inc
jmp
mov
ret
aaa
dec
or
fdivl
sbb
cmp
adc
mov
dec
push
and
rolb
jb
fst
pop
sub
adc
mov
xchg
push
jg
add
fisttpl
enter
sub
enter
mov
int
insl
or
cwtl
loop
pop
fs
sub
jp
sarb
notb
enter
inc
lds
frstor
fdivl
aad
addr16
dec
pop
ret
fcmovnb
cmp
mov
fucomp
outsl
pop
jg
imul
mov
das
adc
je
rcrl
sarb
jb
add
arpl
and
int3
cmp
jp
pop
popf
mov
add
incl
cmp
ss
lret
and
clc
and
imul
xor
pop
push
out
mov
mov
scas
sub
jmp
xchg
stos
aaa
andl
mov
aad
mov
inc
lods
xchg
jl
ljmp
subl
ljmp
cmp
mov
mov
inc
inc
jo
pop
insl
sti
in
stos
gs
fisubrl
mov
fsubl
negl
xchg
push
jl
ja
ret
mov
jmp
ret
cmp
jae
and
mov
lods
or
ds
xchg
movsl
shlb
cli
lods
fwait
cmpsl
mov
and
mov
mov
and
sbb
push
cwtl
iret
in
mov
cmp
mov
repnz
into
and
or
xchg
addb
push
xor
mov
xchg
iret
adc
aas
jnp
add
sbb
repz
and
adc
fcomps
inc
outsb
jb
fisttpl
mov
xchg
es
pushf
gs
int
mov
mov
aas
jge
lret
lret
ror
aad
adc
rorl
xchg
ret
xchg
sbb
mov
inc
and
pusha
jp
test
inc
ja
imul
inc
xlat
lea
stc
fwait
shlb
xchg
leave
xlat
add
mov
dec
xchg
adc
adc
jno
sahf
repz
push
fs
dec
inc
mov
pop
repz
inc
add
add
test
push
inc
dec
std
lret
dec
ret
data16
or
lods
rcrl
outsb
sub
xchg
repnz
fcomps
es
mov
lods
dec
test
xor
dec
jo
add
lds
inc
inc
pop
aam
rcll
or
clc
jle
loop
cmp
fimuls
adc
inc
mov
and
outsl
jmp
mov
and
add
jecxz
lret
pop
ffreep
lret
or
add
std
sub
fwait
push
dec
or
into
mov
dec
lret
sub
push
imul
mov
nop
mov
sub
div
inc
aas
ret
mov
nop
push
inc
jne,pn
xlat
add
ficomps
add
sti
std
aaa
jns
outsb
jmp
push
cmc
repz
jecxz
fildl
jle
fsubrl
mov
stos
and
movsb
jge
push
and
repnz
pop
repz
or
addr16
and
jb
mov
pop
inc
das
mov
cmc
push
mov
mov
push
jp
or
out
test
push
popl
div
inc
pushf
hlt
int
repz
arpl
or
mov
jo
xor
pusha
jecxz
adc
testl
adc
test
dec
xchg
or
testb
sbb
cmp
lret
aaa
lret
loopne
mov
push
dec
mov
call
mov
stc
negl
cli
test
mov
rol
sbb
ja
aad
push
outsb
jae
negl
mov
mov
andl
mov
int3
push
sub
repz
cmp
jae
pop
scas
adc
cmpsb
cmpsl
xor
adc
inc
mov
sti
es
insb
fiaddl
je
test
fstpl
sbb
pop
pop
rorl
fwait
test
aaa
mov
push
xchg
punpckhdq
daa
fisubrl
jae
pop
jns
add
je
je
cwtl
into
out
xorl
shlb
imul
aad
xor
add
bound
sbb
fsubrp
mov
dec
sub
data16
mov
sub
test
fadd
sub
jb
and
rolb
or
fidivrs
scas
add
mov
test
enter
aad
add
inc
inc
popf
sbb
lret
mov
add
sbb
loope
pop
bswap
cmpsl
or
pop
fwait
pop
push
icebp
mov
adc
insl
cmp
sub
adc
fs
testl
enter
into
adc
inc
je
bound
scas
push
sbb
and
std
repnz
cli
sbb
or
into
stos
adc
jnp
pop
add
xor
mov
bound
adc
les
inc
cmp
cs
push
mov
adc
popf
adc
mov
push
cmp
jl
je
xchg
stc
movsb
pop
sbb
add
push
in
xlat
hlt
xchg
outsl
mov
fistpl
int3
push
dec
mov
cmpsl
mov
push
push
or
push
pop
arpl
fstp
and
adc
int3
mov
popa
jp
js
insl
add
xchg
pop
mov
insl
aaa
lret
ss
out
cmp
out
aam
cmc
in
xor
nop
sbb
xchg
mov
add
roll
lret
pop
jge
fstps
xchg
orl
cmp
jno
xchg
ret
ljmp
negl
out
mov
or
fimull
push
add
push
fimuls
xchg
jne
and
addl
adc
test
lock
inc
xchg
push
add
or
lret
pushf
fldt
popf
cmp
inc
push
icebp
icebp
inc
ficompl
psllw
or
lods
jmp
sbb
jl
lret
cmp
pop
inc
cli
pop
out
xor
or
arpl
sub
imul
imul
and
mov
aad
adc
rclb
xor
std
add
cmp
xchg
mov
xlat
mov
aam
addr16
fdivs
test
xchg
cmpsl
jmp
fiaddl
jl
outsb
aas
sti
jl
das
push
mov
int3
stos
mov
or
fsubs
xchg
in
cld
into
push
loop
push
xor
int3
push
shlb
push
push
sub
out
fcomps
orl
add
sbb
sbb
fdivl
cs
jns
lahf
lret
loope
loope
arpl
adc
xor
xor
inc
push
pop
les
getsec
fcoml
idivl
push
xlat
repz
out
out
aaa
rcrl
cmpsb
in
jb
jo
aaa
jmp
push
jecxz
in
je
inc
push
rcll
jl
in
iret
inc
mov
and
adc
xchg
mov
push
pop
mov
jns
enter
cmpsb
push
pushl
lret
cmp
sbbb
push
add
roll
or
lcall
sbb
aam
xchg
imulb
and
dec
movsb
bound
inc
aas
lods
mov
and
ss
ljmp
pushf
push
mov
sub
movsl
push
lret
jecxz
mov
stc
cwtl
mov
dec
lret
sub
shrb
aas
cmp
outsl
in
pop
sahf
mov
icebp
xor
mov
xlat
sbb
sbb
in
ljmp
hlt
test
fisubrl
loopne
jmp
test
and
sbb
sbb
add
pop
and
sub
mov
in
pop
mov
mov
cmp
popl
stos
jo
ja
stos
sbb
push
ror
ja
out
jl
daa
stos
test
push
clc
xchg
in
aaa
or
inc
sub
push
lret
icebp
stc
lahf
les
cmp
jb
xor
cmp
sub
pop
dec
inc
mov
add
cld
mov
js
inc
mov
outsb
pop
pop
pop
faddl
lret
sbb
push
mov
cmp
and
cltd
leave
loop
add
ficoml
xchg
pop
add
icebp
pop
mov
aad
mov
inc
or
mov
sti
xchg
into
pop
jno
cmp
or
mov
dec
cwtl
jg
hlt
cmc
lds
pop
fidivl
sub
pop
jno
in
xchg
lahf
push
xlat
sti
add
xorl
cmpsl
sub
icebp
lock
dec
andl
push
inc
test
push
outsl
dec
jae
push
sub
outsl
shlb
pop
fiadds
clc
lahf
das
mov
sub
and
and
adcl
add
jns
adc
sub
popf
fisttpll
fnstcw
in
inc
push
jnp
pop
xor
into
lods
push
or
fld1
popa
pop
lods
outsb
lock
push
pushf
loop
adc
out
fnsave
inc
test
and
mov
or
loopne
jle
xor
jb
fmull
jnp
xchg
xor
adcb
push
dec
push
dec
jno
lahf
cmpsb
fcmovb
mov
dec
in
jle
enter
mov
daa
jg
xor
lods
add
shrl
movsb
dec
cwtl
cs
sbb
and
lds
xor
xchg
cmpsb
jno
mov
mov
pop
push
arpl
mov
push
iret
inc
mov
jmp
inc
outsb
dec
jnp
lea
dec
pop
out
dec
xor
mov
out
or
icebp
mov
lea
test
mov
jno
adc
push
sub
sub
stos
mov
loop
gs
jo
clc
adc
sub
and
lods
push
rclb
jae
call
cli
pop
jmp
mov
or
subl
adcl
lock
cmc
and
push
and
insl
jmp
in
fst
sbb
mov
cmp
cs
inc
sub
outsl
hlt
in
imul
mov
mov
sbb
data16
jle
adc
sub
and
fwait
mov
decl
mov
push
test
addr16
ds
std
xchg
adcb
pop
adc
mov
es
add
xchg
adc
xor
xor
andl
sub
pop
lds
jmp
push
call
and
push
data16
mov
lods
mov
dec
shlb
pop
xchg
cmp
sbb
fwait
popa
cmp
mov
loopne
mov
jge
pop
and
and
jecxz
mov
clc
loop
js,pt
mov
sbb
sub
and
sbb
into
or
inc
lods
rcr
mov
xor
xchg
or
in
in
mov
movsl
xchg
pop
cli
inc
insl
stos
dec
popa
clc
and
push
and
psadbw
stc
xchg
or
inc
jmp
sbb
jae
mov
cmp
js
repnz
adc
push
shl
mov
sbb
xlat
imul
inc
fnsave
shlb
inc
push
pop
gs
test
jns
inc
insb
cmp
adc
mov
cmpb
outsl
fsubrs
and
jp
rcrb
xchg
inc
mov
rcll
xchg
mov
xlat
or
dec
aas
iret
adc
jmp
test
sub
adc
cld
std
mov
addr16
ret
xchg
imul
addl
xorl
cmp
nop
mov
mov
and
sbbb
jp
mov
jmp
in
cmpsl
stc
cmp
add
sub
jmp
push
sbb
lahf
push
push
out
add
push
ds
aad
pop
sbb
subl
bound
sbb
jl
repnz
daa
and
mov
mov
pop
movsl
pop
xchg
xchg
lret
jge
mov
out
xchg
or
add
xchg
xor
cltd
test
push
push
fistpl
cmpb
mov
movsl
inc
outsl
repz
das
jmp
dec
inc
add
mov
cmp
push
sbb
cmc
cmp
dec
pop
aad
or
pop
mov
jae
cmp
xchg
outsb
hlt
sti
fnstenv
add
cmp
adc
lods
sbb
and
mov
or
cmpsl
mov
xor
cli
or
or
dec
sub
into
iret
push
mov
int3
mov
fs
mov
icebp
pop
ljmp
mov
mov
inc
push
iret
je
sti
jbe
mov
insb
xor
adc
cmp
mov
adc
mov
dec
movsl
sbb
jne
sub
push
jb
inc
ja
sbb
push
xor
sbb
insl
hlt
push
xchg
in
xor
fcomp
fs
xor
mov
fldl2e
jg
arpl
push
jecxz
mov
xchg
inc
jle
outsl
movsb
mov
mov
jmp
add
lds
les
fisubrl
inc
xchg
test
icebp
data16
mov
xor
add
sbb
ret
mov
jb
pop
fildll
or
xor
js
fwait
cld
pop
push
scas
ja
test
sub
cli
push
mov
inc
xchg
sub
outsb
cmp
adc
lods
mov
mov
aam
fwait
out
rcl
icebp
push
push
lods
adc
lock
sub
cmpsl
pop
xor
push
mov
mov
mov
pop
cmp
scas
loope
xchg
adc
andl
repz
xlat
jae
or
jle
outsb
adc
fs
jb
sahf
je
cltd
aas
add
popa
pop
insl
add
bound
adc
mov
jbe
xor
sbb
pshufw
les
or
and
cmp
addr16
cmp
nop
mov
testl
aam
adc
movsb
pop
pop
cmpsl
mov
add
add
jne
sahf
je
ficoml
add
shll
shlb
shll
add
aad
cmp
dec
jne
fildl
xor
pop
and
jno
inc
out
pop
shl
inc
test
push
nop
jmp
xchg
push
sahf
fcoml
stos
les
push
adc
jmp
dec
nop
ss
sbb
mov
adc
lret
mov
adcl
pop
fbstp
repz
fsubrp
sahf
push
out
cwtl
adc
push
push
lret
cs
in
out
push
push
stos
ret
jbe
jmp
es
sub
std
pop
pop
lea
or
sbbl
push
xchg
cmpsb
lods
ljmp
shrl
push
popf
adc
popf
in
shlb
push
fisubrl
or
add
rcrb
je
pop
loopne
icebp
push
lret
jmp
sti
sbb
aad
or
gs
in
inc
or
add
insl
xchg
aad
mov
adc
add
xchg
adc
add
mov
aam
push
mov
jecxz
jno
cwtl
mov
aad
packssdw
out
xor
es
push
xor
fdivrp
cmp
aas
jbe
inc
jne
push
shr
adc
cmp
push
pop
jbe
cmp
push
aaa
loopne
push
js
xchg
jmp
mov
test
pop
push
mov
test
jmp
mov
xor
mov
dec
int
mov
sbb
push
push
rcrl
enter
pop
jmp
push
pop
inc
shr
lcall
and
inc
sbb
aas
pop
jecxz
or
popf
pop
sub
sbb
mov
mov
ss
arpl
push
adc
fsubl
adc
cmp
sub
pop
mov
shll
loop
ja
sbb
fcomip
mov
dec
or
fwait
dec
loopne
shll
push
ljmp
mov
in
stos
lret
adc
mov
mov
jb
fsubrs
inc
xchg
test
mov
add
movsb
fwait
mov
xchg
pop
push
jge
icebp
xchg
mov
push
clc
inc
mov
adc
aad
push
mov
xorl
arpl
cmp
fcmove
pop
insl
cmp
xlat
xlat
insb
imul
push
mov
out
inc
cmp
jle
mov
fwait
mov
xchg
push
add
adc
inc
sbb
movsb
pop
lea
adc
movsl
ljmp
pushf
mov
sub
xchg
mov
sahf
fidivl
push
dec
jl
fwait
cli
jo
sub
add
rcl
idivb
mov
mov
jb
lahf
iret
mov
sahf
jp
xchg
lret
enter
clc
jmp
jmp
sub
jae
data16
sub
push
mov
mov
inc
add
adc
int
pop
jb
inc
outsb
adc
lcall
xchg
inc
mov
mov
jne
fs
ja
lods
and
add
sub
xchg
into
push
jns
add
insb
mov
pop
sub
pop
sarb
mov
push
and
xlat
sbb
sahf
dec
dec
or
xchg
inc
cld
inc
dec
leave
sub
inc
cli
sbbl
or
dec
gs
push
insl
fmul
icebp
and
test
dec
cmp
mov
fdivrs
nop
shl
jne
jb
dec
aaa
inc
mov
xchg
mov
mov
pop
fucomi
lods
clc
mov
inc
test
popf
xor
roll
pop
sub
mov
loopne
gs
jns
aaa
mov
iret
add
push
mov
and
sub
jmp
cmpl
fmul
push
data16
mov
movsl
test
movsb
push
cmp
add
jecxz
lds
ret
cmpsb
sub
xchg
cmp
push
sbb
cmpsl
mov
mov
add
inc
lret
popa
ret
jle
xchg
ljmp
add
push
dec
cld
es
pop
cmpsb
dec
xor
xchg
inc
xchg
lret
push
add
pop
push
push
and
addr16
lret
je,pt
lods
and
rorl
out
daa
add
insb
fs
dec
and
ljmp
xchg
in
es
jbe
popf
dec
cmp
mov
cli
jno
jp
movsb
push
adc
mov
lods
cmp
dec
xor
push
adc
out
xor
hlt
imul
pop
gs
and
popf
sbb
push
pop
aas
js
cmp
sub
dec
mov
mov
test
je
mov
push
icebp
xchg
pop
sahf
out
mov
cmp
mov
cld
fiadds
dec
lods
out
fwait
bound
dec
push
jbe
add
push
inc
enter
cmpsb
mov
sub
and
pop
into
mov
es
lcall
lods
xlat
leave
cmc
adc
mov
xchg
jmp
aad
mov
cmc
push
adc
sub
xchg
iret
imul
push
and
inc
mov
xor
shll
js
jl
repnz
add
out
or
js
rorl
cmp
js
sbb
mov
mov
aad
or
out
adc
iret
jle
or
cmp
cld
imul
xor
imul
mov
cli
xor
add
movzbl
test
push
icebp
fsubs
sti
push
mov
jne
sbb
jae
adc
mov
sbb
notb
and
sarb
mov
pusha
sub
adc
mov
ds
jle
adcb
in
fwait
mov
ljmp
sub
psubusb
call
fisubs
addr16
xchg
push
inc
ret
movsb
call
jb
inc
in
mov
cmpsl
pop
adc
fiaddl
repz
mov
stc
adc
stos
dec
push
xchg
imul
fs
lds
cltd
mov
insb
sti
sar
jno
into
inc
jns
push
cmp
lea
clc
push
cwtl
addl
std
dec
sub
je
sub
pusha
lock
das
and
sti
jle
ja
mov
sbb
pop
scas
mov
mov
popf
mov
jecxz
aam
mov
mov
clc
pusha
pusha
mov
nop
stc
sbb
push
jmp
xchg
jno
ljmp
sbb
adc
out
dec
iret
rorl
iret
fadds
adc
push
adc
mov
movsb
jg
mov
mov
pusha
shll
not
loope
test
push
test
mov
sub
jp
ljmp
shlb
lods
data16
add
daa
out
ljmp
inc
fbstp
pushf
push
hlt
dec
data16
jno
aaa
jae
leave
mov
fstpt
fsub
mov
out
mov
xor
mov
in
xor
ljmp
insb
mov
inc
jae
cwtl
cltd
outsb
mov
icebp
mull
pavgw
xor
jne
xor
cmc
mov
xchg
popa
sub
mov
push
xchg
lds
cwtl
andl
ja
mov
lcall
rcrl
and
mov
sbb
jp
and
sbb
cmp
xor
xchg
pop
out
int
les
sub
lea
std
jb
add
pop
inc
in
popf
adc
cmpsl
cmp
inc
mov
mov
ret
or
xor
pushf
mov
jle
pop
add
jge
xor
inc
outsb
cli
pusha
inc
xchg
cmp
fucomp
inc
and
push
xchg
loope
xchg
xchg
cld
xor
icebp
mov
xchg
dec
lods
mov
fmull
mov
jmp
dec
incb
icebp
mov
inc
adcb
pop
aad
jo
sbbl
push
mov
sbb
inc
ror
jge
pop
add
lahf
in
pop
clc
rcrl
std
scas
test
out
call
sub
mov
and
sub
and
and
ja
test
sbb
sahf
mov
in
out
add
aad
pop
dec
stc
cmpsb
mov
dec
and
jg
nop
insl
clc
push
scas
mov
cmp
cmp
push
mov
sbb
lods
push
pop
inc
mov
lods
push
sahf
out
mov
jns
push
adc
aas
dec
movsl
cwtl
hlt
cs
and
xchg
and
lret
loope
inc
inc
mov
pop
cwtl
clc
test
shlb
test
cmp
mov
push
enter
mov
jge
repz
jle
ret
nop
fldt
fdiv
push
ljmp
mul
add
cmp
xlat
inc
repnz
push
add
push
aas
insb
in
push
push
inc
arpl
dec
rorl
popf
mov
jb
and
jnp
js
std
outsb
sbb
or
pop
xor
cmp
and
inc
movsb
add
sub
into
lea
xchg
mov
jnp
and
add
jmp
adc
fildll
pop
push
loop
or
sbb
mov
push
sbbl
inc
cmp
out
enter
inc
sar
mov
sbb
lods
arpl
leave
test
pop
test
sub
loopne
mov
rolb
fldt
psubd
add
out
cltd
lahf
jns
rcl
inc
mov
jl
repnz
mulb
dec
iret
loope
push
push
out
add
push
pop
lcall
fmul
repz
mov
in
fmuls
iret
inc
sub
push
push
and
lret
push
cli
inc
pop
lahf
mov
or
mov
and
jnp
adc
popf
add
int
mov
pop
xchg
sub
ja
iret
in
mov
adc
clc
push
ret
dec
dec
push
faddp
call
movsl
popa
orb
inc
inc
jl
mov
outsl
jge
fistpl
fs
xchg
xchg
jecxz
cmp
fisubs
inc
sbb
cmp
sti
mov
jbe
mov
pop
ljmp
cltd
sbb
add
pop
jp
push
dec
insb
ja
mov
inc
loope
popa
jp
sbb
push
sbb
fsubl
addl
clc
out
or
cmp
es
dec
mov
xor
faddl
lock
xchg
add
icebp
mov
and
fxtract
jmp
push
or
cmpsb
jbe
mov
orb
jecxz
add
imul
push
or
xor
xchg
jae
das
jmp
iret
cmpsb
jne
js
cmp
mov
sub
push
leave
aaa
ds
lret
insb
fisttpll
jmp
mov
cltd
rorl
mov
in
mov
sub
lret
imul
push
in
mov
jmp
pop
leave
push
cmp
push
out
fcoms
leave
mov
adc
push
pusha
sub
fsubrs
fsubl
inc
or
xor
stos
out
outsb
idivl
out
ret
lods
cmp
jge
inc
or
orb
mov
shll
aad
icebp
push
dec
add
add
pop
jb
push
push
lret
pushw
stos
ds
js
ds
dec
mov
nop
lret
test
fists
pop
jge
imul
inc
inc
mov
cmp
outsb
lret
mov
ja
push
xor
stos
testl
fcompl
jb
jmp
aaa
jg
push
inc
jge
fiaddl
jle
mov
cld
xchg
push
cmc
xchg
daa
or
mov
xor
lods
vcmpss
ret
pop
neg
sti
insb
out
aaa
pop
pop
dec
adc
mov
fwait
nop
cmp
or
loopne
sbb
shlb
outsb
sub
enter
rolb
iret
push
and
ds
sub
sti
fs
dec
jns
mov
xchg
push
xor
shlb
test
push
sbb
jne
sub
jmp
or
aad
xor
sti
mov
or
ficoml
push
jno
inc
test
filds
sbb
