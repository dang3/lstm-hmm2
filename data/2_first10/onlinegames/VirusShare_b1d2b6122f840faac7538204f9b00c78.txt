imul
call
in
sub
push
push
lea
push
xor
push
mov
add
sbb
ss
int
jmp
jo
insb
in
jne
dec
mov
out
jae
out
cs
es
mov
int
push
call
mov
cmp
je
shlb
inc
push
push
insb
lahf
out
xchg
ret
inc
push
lds
data16
je
dec
enter
lret
in
jnp
cs
inc
push
int
into
arpl
outsl
fldt
jbe
shrl
shlb
shll
call
jg
mov
ret
pop
mov
js
movsb
movsb
iret
repz
movsl
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
repz
repz
mov
mov
fnstcw
iret
mov
mov
xchg
mov
xor
mov
mov
idivb
loope
jmp
lea
push
push
cld
push
call
pushl
dec
pop
loopne
mov
xchg
jge
sbb
cld
dec
dec
cmp
xor
and
popa
adc
rcrb
inc
add
cmp
fdivrp
fistpll
jb
jmp
mov
imul
add
lea
movsl
add
ja
dec
fiaddl
lea
cmpsb
sub
pop
leave
ret
pop
testb
sub
in
movl
add
dec
push
fldcw
xchg
jne
jae
gs
jb
sahf
data16
xor
xor
repz
repz
imul
outsb
push
in
in
out
and
out
call
ja
std
xchg
je
inc
inc
gs
js
cmp
or
or
add
inc
push
push
dec
mov
fistl
push
lret
sarb
data16
push
rorb
ret
sbb
xchg
adc
or
inc
mov
push
mov
loopne
aaa
mov
incl
mov
jge
sub
cmp
cmpsl
std
lock
cmpb
adc
mov
out
imul
push
push
adc
clc
sbb
rcrb
mov
je
mov
aas
push
ds
das
mov
and
int3
in
cld
push
sub
jp
pop
add
loopne
add
imul
addr16
data16
sahf
out
sahf
xlat
fcomp
fcmovu
fcompl
nop
out
fstp
mov
mov
test
or
sahf
mulb
imul
sarl
jne
jbe
sarb
je
int
lcall
aaa
jge
mov
jle
cmpsl
adc
inc
int
shrl
addb
insb
ss
inc
xchg
push
mov
inc
push
sbb
mov
test
cld
mov
nop
push
adc
popa
xchg
jbe
gs
repz
xchg
xchg
xchg
cwtl
in
sarl
out
fwait
inc
outsb
pushf
popf
insb
into
sahf
lret
lcall
repz
lcall
mov
mov
leavew
jne
lret
int3
je
int
jge
sti
into
jb
iret
shlb
shll
shl
shlb
mov
jge
mov
imul
jae
scas
ljmp
push
in
xor
cmp
lea
in
push
inc
push
jecxz
stos
fnsave
clc
sbb
push
push
sti
jge
scas
mov
data16
or
mov
lret
push
jne
adc
test
addr16
cmpsl
repnz
pop
pop
inc
das
pusha
push
imul
imul
mov
stc
or
lea
loopne
movsl
mov
adc
ja
insl
jae
sbb
mov
addl
mov
rep
inc
out
xor
dec
mov
clc
add
in
or
imul
sub
ljmp
sbb
fcomip
popf
imull
out
mov
cld
cmp
mov
pop
je
dec
push
mov
cld
aas
adc
or
cmp
jg
or
ret
enter
pop
mov
jmp
cld
mov
jo
pushl
lock
sbb
and
movsb
repnz
call
gs
in
fdivr
in
sbb
dec
mov
fs
loopne
test
out
and
or
shl
popa
cmp
dec
mov
addr16
or
mov
lock
or
lea
push
aam
mov
fnstsw
push
jne
rcl
mov
lahf
addr16
xchg
jne
mov
lahf
mov
stc
dec
cs
cli
sti
insl
cld
pop
jle
loope
sahf
jne
pop
mov
lea
push
das
push
into
jl
pop
bnd
jo
push
movl
inc
push
dec
cmp
in
mov
mov
aaa
nop
mov
cmp
pop
mov
push
faddl
mov
pusha
mov
mov
xor
sub
mov
mov
xor
pop
je
cmp
lock
add
shr
jne
add
ds
dec
jne
je
outsb
repz
fcmovnbe
cld
pop
xchg
mov
mov
pop
unpcklps
mov
dec
cmp
jae
xor
mov
mov
mov
sti
fwait
rclb
dec
je
xor
scas
adc
fdivs
mov
jnp
mov
add
xchg
lds
mov
pop
mov
inc
aas
mov
bound
jne
push
cmp
jmp
rorl
or
or
inc
add
cltd
testb
mov
gs
fildl
outsl
fstpl
fbld
jb
jne
sbb
fs
iret
mov
push
loopne
pop
push
aam
outsb
jmp
push
aam
data16
cwtl
call
data16
push
inc
addr16
inc
popl
es
push
push
je
hlt
in
adc
adc
pop
jne
les
cmp
adc
pop
cltd
mov
in
ss
sbb
xchg
add
int
jle
push
mov
xchg
or
lcall
push
insb
in
dec
mov
sub
out
sub
push
test
cmp
in
dec
cmp
inc
fwait
jl
jbe
push
inc
jl
aam
xor
movl
mov
outsl
out
pop
mov
or
or
das
cmp
std
nop
or
add
jmp
push
hlt
loope
inc
and
push
inc
mull
sarb
xor
cmp
je
and
and
or
push
dec
or
dec
rcrb
mov
popf
inc
sub
insl
ja
xlat
push
xorb
mov
lock
cmp
mov
dec
aam
popf
xor
pushl
jae
lahf
dec
dec
rorl
out
xorps
je
sub
xchg
mov
push
imul
iret
rcrl
cs
int3
int
out
ds
xor
rcl
sarb
repz
aam
aad
xlat
jns
iret
repz
fidivrl
fcmovnu
mov
sahf
out
loopne
ss
iret
repz
loop
in
out
mov
imul
jmp
jns
out
jl
fs
xchg
out
cmp
cmc
imul
jnp
out
fs
stc
cli
mov
xor
cld
ss
cmp
jae
dec
add
cmp
cmp
outsl
pop
pop
stos
mov
jne
cmpl
cmp
and
or
enter
inc
mov
jg
cmp
js
ret
dec
xor
dec
hlt
mov
push
test
repnz
cmp
inc
clc
imul
stos
push
jae
dec
and
sub
gs
pop
mov
mov
cmpsb
imul
imul
cmp
gs
mov
jo
lcall
mov
jne
mov
inc
sub
call
scas
outsl
lock
in
add
xor
ret
pop
xor
push
mov
inc
mov
sub
sbb
xorb
jno
mov
icebp
stos
inc
mov
repnz
std
dec
movsl
gs
movsb
test
test
lea
push
das
push
inc
bound
insl
mov
movsb
ficoms
stos
push
movsl
fldcw
cmpsb
je
inc
test
test
cmpsl
stos
stos
lods
outsb
lods
scas
push
scas
imul
mov
jae
mov
mov
and
fs
mov
push
jb
xchg
lcall
push
jb
lcall
jae
cmp
xchg
jbe
gs
dec
mov
iret
imul
aad
sahf
out
test
xlat
fcomp
fiaddl
jnp
out
faddl
inc
orb
xchg
sbb
pop
or
cmp
jne,pt
mov
jb
mov
roll
out
sahf
ret
enter
jns
movsb
and
mov
cli
sbb
push
push
push
call
lcall
and
nop
imul
jae
xchg
or
jmp
nop
stc
or
in
mov
mov
xchg
incb
iret
repz
mov
imul
jecxz
in
lea
pusha
data16
clc
fdivr
add
and
adc
adc
rol
cmp
call
push
std
outsl
jmp
sbb
neg
sbb
inc
inc
xchg
ds
in
sub
dec
jnp
push
cmpsb
cmpsl
popa
test
test
shrl
jo
sbb
xor
jle
adc
mov
daa
jb
jl
inc
ret
jne
andl
push
pop
inc
push
loope
aaa
andb
int3
sub
fdiv
in
xchg
mov
ret
fcomi
jno
addb
adc
jnp
je,pn
add
xlat
push
popa
icebp
or
jo
or
lock
mov
cld
sahf
adc
or
movsb
arpl
enter
ficomps
fldcw
loopne
and
mov
cmp
and
xchg
cmp
mov
mov
shr
pop
or
or
or
daa
je
mov
mov
xor
ret
les
inc
ljmp
lock
in
mov
in
dec
ss
insb
out
or
and
push
or
adc
mov
cmp
mov
push
loopne
push
sub
mov
and
mov
es
hlt
push
ds
int
hlt
cmc
inc
notb
mov
add
mov
pop
add
insb
push
repnz
enter
or
fcomi
cmc
fxch
clc
lret
orl
lret
xor
rorb
scas
inc
pause
jg
push
inc
fcoml
xor
inc
fimuls
filds
loopne,pn
loope
in
fldcw
jecxz
mulb
cmp
clc
clc
push
push
or
js
push
jle
jns
cwtl
cwtl
push
pop
pop
pop
and
cmp
enter
sbb
xor
cmpxchg
sbb
push
dec
pop
lahf
sbb
cmp
bound
lahf
jge
dec
out
pop
push
mov
pop
fimuls
pop
mov
jmp
aas
lods
xchg
cmovs
cmp
jp
add
call
rolb
xchg
nop
ljmp
jb
in
push
cmpl
and
jnp
jecxz
loopne
mov
js
jo
jnp
arpl
cmp
cwtl
addl
nop
enter
push
in
hlt
test
int
adc
mov
pop
pop
ret
pusha
mov
je
addr16
shr
inc
push
pop
outsb
mov
outsl
cmpb
clc
mov
jne
shr
out
fsubrl
jo
dec
push
jmp
add
pushl
mov
or
rorb
out
cmp
jbe
xor
fldt
test
jbe
lea
cmpb
adc
adc
iret
in
ja
mov
or
sbb
psllw
into
jb
xor
popa
jmp
ja
or
sub
xchg
or
add
and
je
cmp
sti
lea
fidivrl
pop
mov
clc
or
out
and
sub
push
push
in
int3
out
lcall
ja
pop
aam
mov
ljmp
test
add
push
push
daa
xchg
xor
je
test
out
mov
add
jnp
imul
sub
push
sub
out
add
fadd
adc
lock
jl
arpl
sbb
and
or
pop
out
sbb
mov
pusha
sub
push
lcall
not
sbb
push
outsb
pop
push
outsl
clc
push
gs
pusha
es
and
sbb
and
test
popa
notb
add
cmp
cmp
imul
cmp
sarl
cmp
cmp
ja
cmp
inc
cmp
sarl
inc
jb
sarb
imul
jge
or
dec
outsb
add
cmovo
mov
jmp
insb
outsl
cmpsb
imul
adc
push
cmpsl
fldenv
imul
imul
enter
imul
imul
mov
xor
sahf
out
lcall
xor
inc
sti
ss
cmp
and
int
sbb
and
dec
and
int
add
and
daa
xchg
and
inc
sub
sub
sub
outsl
movsb
loop
cs
inc
das
xor
xor
xor
xor
shlb
icebp
int
mov
inc
pusha
in
inc
out
inc
out
push
lock
gs
repnz
add
ss
testl
or
or
or
sbb
inc
or
push
sahf
out
adc
adc
xor
xor
insb
push
rcll
push
sbb
pusha
ss
sbb
rolb
push
arpl
test
adc
xchg
mov
into
clc
xor
mov
mov
mov
mov
les
xchg
repz
repz
xchg
xchg
xchg
cwtl
lock
in
cltd
dec
cs
cmpsb
xchg
pop
or
divb
xchg
imul
push
sub
nop
push
punpcklbw
call
xor
andl
popa
bound
dec
xor
arpl
fs
rorl
xor
fs
xor
push
imul
and
outsb
xor
shll
jae
jb
rorw
cs
scas
loope
sub
nop
loop
hlt
jle
lcall
outsb
cmpsb
imul
scas
mov
lret
in
js
inc
jo
bswap
in
cltd
mov
je
sbbb
insb
push
jne
das
xchg
lret
jb
inc
js
popf
dec
inc
scas
push
dec
rsqrtps
dec
dec
aad
lods
push
mov
push
push
leave
push
pusha
arpl
push
sub
push
int
lods
pop
aaa
pop
addr16
outsl
pop
adc
sbb
mov
pop
lock
mov
sub
clc
sub
push
cmp
test
outsl
cmpsl
mov
cmp
jecxz
inc
ret
cld
je
repnz
adcl
pop
add
shll
hlt
and
outsl
jp
lock
or
movsb
inc
loopne
or
mov
shl
xchg
jmp
lcall
adc
and
ret
push
push
inc
clc
fidivs
cmp
lret
lea
push
lea
addr16
dec
mov
sbb
push
pop
sub
roll
lcall
mov
add
sub
shlb
sti
push
daa
jo
mov
push
push
lahf
lods
xorl
adc
pop
pop
jl
and
xor
adc
mov
test
sub
jns
sub
inc
mov
cmp
loope
push
push
cmp
and
inc
insl
notb
push
sti
xor
pop
jmp
pop
push
scas
aam
inc
call
cmovo
pop
add
in
test
popa
or
sbb
das
cmp
in
movsb
or
test
enter
hlt
push
lret
test
add
idiv
ja
cmpl
sub
add
inc
ret
push
mov
faddl
push
movsb
push
mov
push
cmp
cmpsl
push
cmp
shl
imul
mov
dec
data16
je
cmp
jb
dec
dec
cmpw
jne
push
es
sbb
test
pop
loop
jne
dec
sub
test
stos
or
mov
test
dec
adc
andb
jb
pop
nop
mov
jl
inc
mov
in
dec
into
adc
push
push
mov
sbb
addl
push
sub
add
mov
xor
push
andb
imul
add
lcall
je
outsl
imul
and
jmp
dec
shll
in
out
out
sub
icebp
push
jne
rorb
mov
cmpsl
and
orb
add
or
rorb
cmp
xchg
pop
push
ret
lock
inc
sub
push
fs
push
shlb
lods
cmp
ja
push
fwait
cmp
inc
pop
jno
cmpsl
ljmp
mov
push
test
loope
test
push
rorl
mov
pusha
cmc
fcmovnb
loope
fwait
hlt
push
bound
fnstsw
mov
scas
xor
mov
stc
jne
inc
jmp
push
adc
test
sub
clc
push
push
xor
stc
xchg
in
scas
adc
mov
pop
fsub
and
fiaddl
pop
add
insb
push
jns
inc
stc
clc
sub
cld
lock
in
adc
in
pop
les
pop
lret
push
inc
je
popw
sbbl
clc
test
fiadds
pop
jmp
and
jo
add
jb,pn
jo
clc
and
fdivrs
test
inc
inc
cmp
or
push
cmc
and
mov
adc
stos
addl
add
sub
stos
dec
cmpsb
imul
lcall
imul
repz
fs
js
ljmp
icebp
loopne
jne
arpl
gs
pushf
push
push
into
je
push
pop
or
xor
pusha
popa
xor
cmpsl
ret
or
pushf
push
addb
mov
mov
jbe
cmpsb
sbb
push
mov
jbe
fstl
jp
fs
mov
jle
dec
call
loopne
dec
jp
fsubrs
aaa
clc
inc
push
psrad
xor
or
orb
out
std
js
pop
add
lods
dec
mov
je
mov
mov
ja
xor
fstl
loopne
push
cld
fwait
adc
add
js
out
xor
push
and
dec
dec
sub
out
xchg
dec
inc
push
cwtl
xor
shll
cld
std
incl
cmpsb
or
dec
outsb
je
cmpsl
stc
push
lods
scas
push
scas
es
mov
fnstcw
imul
inc
mov
or
mov
mov
lcall
dec
jo
andb
outsb
push
jno
jne
leave
jae
gs
lods
xchg
cmpsl
jge
out
xchg
xchg
xchg
cwtl
push
jl
sahf
out
lahf
lcall
lahf
insb
lahf
out
mov
xchg
movsb
js
push
shll
inc
ret
xchg
testl
lcall
subb
je
dec
dec
xor
add
jb
imul
outsl
iret
roll
outsb
outsb
arpl
lret
jl
loopne
fdivs
xor
sbb
pop
lcall
cmp
and
pop
cmp
aas
push
sar
lds
add
movl
or
aam
lcall
icebp
icebp
xor
adc
enter
mov
call
cwtl
xchg
and
in
pop
push
push
ljmp
cmp
jbe
cmp
jne
addb
mov
ljmp
loopne
add
out
mov
and
les
pop
shrl
and
xor
xchg
adc
int
jno
rcrl
or
adc
push
and
arpl
cmpsl
sbb
xchg
negb
adc
idiv
xchg
sbb
cmp
je
std
push
mov
arpl
adc
inc
cmp
jl
push
and
gs
loopne
or
inc
lea
push
bound
add
jge
adc
inc
or
mov
jmp
in
push
in
pushf
or
push
xchg
bnd
push
push
xchg
mov
sahf
sbb
adc
sbb
imul
jae
outsb
paddusb
xchg
lods
mov
xchg
scas
pop
pop
stos
add
and
pop
jmp
sbb
stos
jl
sbb
xchg
mov
data16
push
mov
xor
xchg
je
pushf
sub
addl
adc
xor
adc
inc
inc
push
add
in
inc
movsb
add
jb
inc
add
cmp
mov
or
xor
sbb
fwait
ja
out
push
pushf
push
sbb
pop
jbe
jo
in
outsb
dec
inc
das
shll
lret
lcall
lcall
push
dec
push
imul
imul
xor
and
jae
cmpsb
imul
cmpsb
imul
dec
shll
push
iret
repz
xlat
xor
fcmovu
fdiv
sahf
idivb
push
mov
xor
pop
inc
pop
push
push
inc
imul
imul
imul
inc
into
mov
mov
xor
es
lcall
xchg
xchg
data16
cmpsb
imul
les
into
iret
pop
pop
xchg
mov
andb
addl
pop
push
and
mov
xlat
das
sub
xor
jns
sub
dec
dec
clc
push
loopne
and
and
popf
or
sub
jle
add
mov
sub
adc
or
jnp
cld
cmp
pop
ja
jb
fwait
test
fdivl
dec
shr
loopne
fmuls
mov
fmuls
adc
imul
aaa
daa
sahf
add
inc
xor
pop
lcall
dec
cmp
out
pop
or
pop
jb
lea
push
sub
repnz
jo
xchg
cmp
and
xchg
mov
or
cmp
jmp
inc
lds
pushl
push
sbb
xor
cli
gs
ja
inc
cmp
pushf
push
and
jo
sbb
daa
lea
sbb
adcl
daa
test
enter
push
nop
pop
test
mov
aaa
pop
and
aas
popa
call
dec
je
outsl
outsb
cmp
and
outsl
arpl
xor
imul
cmp
mov
cmp
sub
sub
xor
dec
fstpt
xor
xchg
gs
addl
imul
pusha
dec
mov
xor
dec
fs
testb
mov
dec
jo
outsb
shlb
xor
jb
outsl
arpl
xor
push
call
mov
pop
imul
je
push
jb
out
lcall
fwait
mov
adc
das
shrb
loopne
xchg
inc
shll
jb
outsb
cwtl
aad
dec
je
jb
int3
nop
add
repz
dec
cmpsl
sub
fnsave
test
xlat
pop
nop
pushf
pop
sbb
pop
and
push
insl
push
sbb
push
dec
fisttps
or
sub
leave
jp
mov
cli
dec
int
popa
jl
or
or
jl
cmp
inc
cmp
jb
stos
and
sbbl
jmp
mov
stc
faddl
adc
push
and
rcl
adc
mov
stc
xor
sbb
jne
inc
nop
push
sbb
add
aad
xlat
jle
sbb
adc
stos
cmpsl
fisttps
or
loopne
lea
scas
popf
into
lds
pop
push
sub
add
push
or
stc
add
sbb
jp
add
js
incl
loop
insb
jns
pop
ljmp
pusha
mov
cmpl
idiv
imul
das
insl
popa
jne
adc
je
imul
addr16
out
jne,pn
push
jl
add
aam
repz
jns
pusha
outsl
push
jne
popa
outsb
addr16
adc
mov
jne
adc
or
lret
jne
stc
inc
xorl
in
push
sub
pop
jb
pusha
push
sbb
cmc
dec
push
jecxz
xor
shrl
aaa
loop
push
test
pop
je
andb
test
ds
orb
xor
loopne
push
stos
jne
std
sbb
movsb
or
negb
sub
and
lock
stos
fadds
mov
ds
enter
les
push
mov
push
mov
shrb
jb
cmp
add
insb
mov
sub
jbe
or
sub
push
sbb
dec
adc
ds
gs
pop
adc
adcl
mov
xor
add
outsb
mov
jb
sub
jg
rcl
sbb
add
fmulp
test
add
hlt
cmp
scas
add
push
ds
mov
cmp
jbe
outsl
fwait
jecxz
mov
adc
add
jae
sub
add
sub
popa
mov
jns
inc
jnp
and
cwtl
xchg
in
int
adc
bts
pushf
jne
push
push
fistpl
test
or
jge
flds
sbb
incl
add
push
fwait
testl
sub
sbb
iret
adc
pop
jecxz
nop
or
xchg
or
das
cmp
call
adc
adc
xor
mov
add
sub
mov
xchg
push
xchg
fs
jb
pop
mov
pop
jne
cmp
ret
inc
aas
lcall
or
cmp
or
sub
add
jge
sbb
push
movsb
push
inc
cmp
xor
faddl
inc
call
mov
out
ss
sbb
add
test
xchg
xlat
mov
outsb
cld
cmp
xor
fsts
inc
lods
jg
push
shll
xor
adc
adc
add
movsb
push
jp
sar
test
push
orb
fistpll
inc
xorb
jmp
icebp
xor
pop
sub
adc
push
mov
dec
rcrb
sub
pop
inc
hlt
inc
pop
inc
cmp
ds
mov
mov
lock
fisubl
cmp
sbb
out
clc
push
mov
mov
cmpb
or
mov
mov
add
insb
lret
pop
fmull
mov
je
ret
fisttpl
outsb
stos
hlt
div
ss
mov
or
movsb
aam
test
loope
mov
in
mov
sbb
adc
rep
popf
and
cmp
incl
add
cmp
jl
popa
shl
bound
pop
mov
or
jno
fwait
subb
jp
aam
in
loopne
je
add
and
adc
shrb
mov
rcll
outsl
je
ret
and
fisubrl
push
push
lock
outsl
in
enter
cmpsb
adc
fadd
lea
push
push
jg
sahf
pusha
pop
out
pop
mov
push
push
sub
jg
pop
inc
fisubrs
ret
sub
mov
movb
aas
jo
cmp
inc
add
push
push
je
mov
enter
mov
xor
mov
dec
cmp
movsb
mov
popa
sub
lahf
jmp
sbb
sarl
and
dec
xlat
mov
and
adc
ror
cli
push
clc
testb
sbb
jbe
mov
lea
lods
push
rcrl
push
add
and
test
outsl
je
cmp
clc
add
test
mov
mov
hlt
inc
hlt
sbb
sahf
dec
inc
adc
mov
mull
mov
je
push
push
cs
out
dec
push
jns
pop
pop
add
pushf
or
push
sbb
cmp
xchg
mov
xchg
mov
popa
mov
ja
sysret
orb
mov
outsl
add
in
sbb
cmpsb
cwtl
mov
push
clc
arpl
cmpsb
imul
lcall
or
push
ret
xchg
xchg
inc
loopne
movb
xchg
pop
jne
stos
mov
xor
imul
jnp
pop
mov
bnd
sub
sarl
and
mov
call
push
mov
insb
bound
dec
pop
mov
dec
imul
pusha
and
mov
pop
fs
xchg
pop
sbb
push
imul
rcrb
mov
nop
lds
jg
and
popa
dec
mov
lods
addl
arpl
lcall
outsl
lods
aam
inc
mov
int
mov
mov
cmp
adc
sbb
pop
repnz
push
xchg
push
ret
pop
mov
notl
push
shlb
xor
push
in
inc
gs
push
and
imul
add
in
fcoms
enter
xchg
or
and
push
push
or
arpl
jae
cmp
adc
jne
adc
fidivs
add
push
pop
rorl
or
or
xchg
push
faddl
out
std
jns
xor
shrl
popa
or
outsl
add
insb
push
mov
push
sahf
outsb
adc
sbb
jae
mov
shlb
outsl
arpl
jae
xor
jnp
rolb
in
cs
outsb
lock
cmp
repz
repz
cmc
negb
clc
stc
dec
adc
or
xchg
cld
je
push
int
ret
mov
and
mov
mov
inc
daa
jbe
cmp
or
add
enter
shlb
fisttps
dec
xchg
or
mov
cmpsl
movsl
test
adc
mov
pop
inc
inc
fiaddl
jnp
mov
adc
sbb
and
inc
dec
faddl
shll
imul
xor
out
sti
cmpsb
or
fdivr
jb
test
jmp
push
outsl
imul
imul
inc
lcall
mov
cmpsl
mov
mov
push
stc
insb
shlb
outsb
ret
lods
les
shll
adc
push
push
dec
shll
je
outsl
add
cmpsb
mov
test
lcall
sbb
push
mov
sub
cmp
movsb
mov
mov
es
int3
test
xchg
jns
sbb
repz
je
jne
jb
int
shrb
jb
push
sub
arpl
fnstenv
add
push
push
imul
xchg
loopne
mov
jl
push
nop
jne
loopne
mov
imul
or
jcxz
dec
push
and
push
adc
push
je
daa
faddl
mov
add
arpl
xor
sbb
lcall
push
and
test
jne
ret
cmpw
jne
mov
add
cmpl
mov
push
ret
inc
cmpsl
rolb
mov
mov
outsb
cmp
iret
je
push
cmp
je
and
je
cmp
ja
aaa
or
jge
adc
jae
fdivl
push
or
fstpt
cmp
movb
cmp
jb
pop
sbb
or
je
xchg
sbb
or
dec
sbb
inc
and
int
or
or
bnd
add
mov
negl
xor
adc
add
pop
mov
adc
test
divb
shrb
enter
or
cmp
jae
mov
mov
xor
insb
jge
jl
add
adc
push
fcompl
adc
pusha
shrb
mov
sbb
repz
dec
outsb
je
jb
rclb
daa
je
dec
jo
dec
dec
das
cs
icebp
ret
inc
sub
je
je
je
out
mov
push
imul
iret
rcrb
lcall
push
jne
cmp
outsb
test
je
inc
dec
lcall
gs
cmpsb
sbb
popa
fs
or
jp
mov
cmp
repz
dec
outsb
je
jb
cmp
rep
gs
insb
shll
iret
outsl
jae
gs
lea
fs
bound
and
push
sbb
and
dec
cmp
push
roll
cmp
sbb
pop
xlat
rorl
popa
enter
enter
mov
in
in
out
lret
inc
and
dec
cmp
push
aaa
fcoml
pop
cld
adc
inc
cmp
adc
jmp
dec
jnp
cwtl
insb
cmp
adc
or
lea
scas
aad
sbb
int3
inc
xor
jb
shld
mov
or
add
pop
dec
or
ljmp
pop
shlb
ret
test
je
mov
inc
inc
jmp
andb
inc
pop
je
loopne
rclb
or
test
je
fcoml
inc
movb
out
push
jge
movzbl
inc
cwtl
mov
mov
push
push
inc
xchg
cli
add
cmpb
jmp
insl
xlat
dec
inc
sub
add
sub
jmp
cmp
pop
mov
and
jmp
push
insb
inc
push
cmp
lock
clc
jge
clc
lcall
pop
xor
data16
sti
sub
mov
cmp
mov
or
xor
adc
jmp
add
dec
test
mov
je
ret
adc
call
add
clc
push
mov
mov
inc
inc
test
jne
pop
pop
scas
mov
ret
shr
adc
lds
xchg
gs
xor
push
cmp
inc
stos
icebp
cmp
imul
lcall
imul
inc
lcall
jae
pop
adc
testl
lea
and
push
jmp
mov
add
pop
mov
pop
pop
adc
daa
push
jmp
push
jecxz
inc
xchg
adc
pushf
jns
and
rcll
inc
imul
outsl
jb
inc
jb
and
iret
leave
out
pop
inc
xchg
or
add
imul
mov
jnp
mov
icebp
inc
cld
jp
fistl
loope
inc
cmp
mov
mov
gs
idiv
fwait
pop
sub
jae
mov
adc
sarl
ret
mov
rorl
cwtl
jp
ss
sbb
iret
cmp
jbe
mov
xor
iret
add
pop
out
test
test
cmp
add
inc
sbb
jmp
mov
mov
pop
sti
test
add
mov
orl
in
add
cmp
jae
cmp
jb
push
mov
aaa
pop
and
sub
push
mov
repnz
add
cmc
xor
sub
sbb
push
in
shlb
inc
int
es
pusha
movsb
cmp
jno
mov
inc
push
jmp
ret
movsl
push
and
ret
dec
fcomp
mov
outsb
push
sbb
or
push
ror
clc
or
fisttpl
jmp
push
dec
adc
jge
pop
add
cmp
imul
or
ret
cmp
mov
or
lods
lods
repnz
lret
or
xor
popf
sbb
das
test
test
push
or
adc
or
lods
je
add
loopne
xchg
cmp
jo
in
ljmp
or
lcall
jecxz
shlb
pusha
popa
sbb
shlb
jmp
pop
dec
add
out
call
add
push
lods
pop
sub
cli
in
inc
lcall
lods
mov
dec
call
mov
xor
sbb
sbb
add
xchg
sbb
dec
sbb
inc
cmp
push
pusha
xchg
push
push
add
push
add
sbb
movsl
xlat
test
outsl
dec
and
test
sbb
je
fimuls
ds
inc
jecxz
incl
sti
aas
and
testb
sbb
push
mov
sub
push
test
or
lcall
mov
or
add
adc
add
out
push
or
shr
xlat
in
and
fsubr
add
daa
jns
loope
pop
push
mov
sub
dec
adc
fsubl
push
push
jl
pop
lock
push
sarb
lret
mov
fnstsw
andb
or
mov
addb
lahf
bound
cs
cwtl
adc
in
pop
in
cs
cmc
or
stc
mov
je
nop
sub
clc
pushf
mov
shrl
sbb
add
pushf
xlat
aam
pop
sub
cli
loopne
add
add
push
inc
xor
shll
shlb
imul
aas
int3
dec
or
push
in
mov
inc
data16
jae
sbb
push
xorb
xor
sub
pusha
hlt
or
outsl
cmp
push
cmp
push
ficoml
sbb
or
sbb
popa
and
sbb
add
push
mov
xchg
inc
lahf
jl
mov
xor
rorl
push
shll
outsl
ja
sub
jb
xor
arpl
or
push
sbb
jecxz
pop
or
dec
push
movb
cmpl
cltd
fistpl
enter
mov
xchg
iret
jae
jmp
insb
insb
imul
push
sub
pop
or
sbb
cltd
mov
test
inc
add
roll
pop
arpl
call
popf
stos
stos
sub
pop
add
cmc
outsb
or
cmc
sbb
ret
lods
shlb
pushf
inc
cmp
jl
popf
cs
dec
mov
cwtl
repnz
dec
dec
mov
int
sbb
and
mov
test
xchg
std
push
sbb
push
pop
dec
mov
inc
sub
xor
dec
jno
aas
roll
push
pop
lods
sbbl
stos
int
dec
push
mov
outsl
jo
inc
orb
cmc
mov
inc
mov
inc
imul
cmpsl
mov
inc
daa
lods
inc
sbb
insb
dec
aam
xlat
cs
mov
fiadds
clc
dec
shrl
inc
jbe
gs
dec
shll
insb
xchg
sti
lcall
test
cmp
jno
and
dec
aaa
call
mov
push
popf
or
jb
divb
jg
aaa
add
jnp
cmp
adc
push
sub
push
lods
out
xor
jo
sti
aaa
add
push
adc
inc
clc
movsl
rol
fsubrs
icebp
inc
subb
testb
pop
or
pop
imul
incl
inc
fmuls
pop
push
mov
mov
imul
push
push
add
aaa
push
mov
mov
mov
xchg
jle
cmpsb
push
sub
dec
js
outsl
arpl
add
pop
push
pop
push
push
add
push
cmp
push
cmp
fcmovnbe
push
clc
push
mov
bound
call
mov
mov
lods
push
add
pop
or
lret
popa
jmp
or
or
sbb
jbe
add
add
rcr
jmp
cmpl
mov
add
push
or
mov
adc
pop
dec
inc
fistpll
mov
push
movsbl
roll
mov
adc
jnp
sub
je
cmp
mov
icebp
pop
sub
mov
jl
and
adc
add
adc
jge
pop
and
imul
andb
push
mov
or
sbb
inc
lock
mov
mov
mov
incb
dec
enter
inc
push
outsl
insb
call
jmp
loopne,pn
cmp
and
das
rolb
mov
jnp
or
inc
inc
fs
mov
xor
outsb
fs
sbb
mov
test
sub
add
jae
lcall
mov
xor
push
bound
mov
loopne
mov
pop
imul
or
jbe
mov
hlt
dec
stos
mov
adc
xor
mov
jge
lock
leave
adc
outsl
pop
fcoml
cmc
or
sahf
add
adc
push
sub
test
sbb
shll
xor
lods
ljmp
push
data16
sarl
mov
and
push
inc
dec
or
or
jmp
xor
shll
inc
add
insb
cmpl
add
xchg
or
fsts
lahf
fwait
push
stc
icebp
pop
fstps
fs
cmp
push
dec
lods
mov
adc
pop
addl
js
pop
and
leave
cmp
mov
sub
out
std
fnstenv
das
jns
pop
or
and
pusha
jb
movsl
std
lods
data16
js
shl
leave
test
clc
clc
js
addb
adc
cmp
aam
cmpsb
cmp
push
jnp
adc
pop
fnstcw
sub
je
push
push
test
push
andb
lea
out
loopne
je
or
lea
mov
xchg
push
xlat
push
rolb
mov
andl
cmp
push
ret
rol
inc
fwait
dec
jge
push
cmpsb
add
xor
je
adc
jmp
arpl
xor
pushl
dec
rcll
or
mov
and
aam
lods
repz
addb
int3
jge
adc
movsb
add
mov
fldt
dec
jmp
in
fadd
mulb
push
repz
int
add
mov
push
hlt
dec
or
imul
sub
insb
xor
sbb
gs
jae
test
dec
shll
gs
popa
mov
bound
or
lcall
add
or
add
hlt
je
adc
mov
outsb
test
shrb
add
dec
jp
and
and
xor
or
pop
popa
imulb
andl
fisubrl
jne
cmp
je
and
push
ficoml
adc
movsb
test
hlt
sbb
inc
or
fs
pop
or
xchg
int3
cld
pusha
test
popa
or
xchg
lret
notl
hlt
or
call
mov
int3
int3
add
outsb
push
mov
jge
xlat
dec
pop
mov
push
push
ret
int3
add
repnz
push
push
pop
jmp
push
fsubr
lret
xorl
adc
bound
iret
inc
push
mov
add
add
sbb
pop
push
pop
pop
cmp
ja
cmp
inc
jecxz
out
stc
or
inc
insb
push
jo
popa
inc
in
push
mov
pop
ficoml
push
mov
add
bound
stos
or
inc
adc
cmp
mov
mov
mov
stc
jg
outsl
es
out
out
out
fcmovnu
mov
jns
testl
call
lahf
out
iret
iret
imul
and
dec
push
fwait
les
jg
out
in
bound
mov
add
insl
dec
adc
repnz
scas
mov
imul
jbe
fldl
daa
arpl
mov
sub
rcr
outsb
sbb
daa
sbb
popf
and
outsb
test
cld
pop
pop
cmpl
jae
leave
daa
xchg
dec
fwait
daa
jo
mov
jg
daa
jne
std
loope
mov
loopne
outsl
cmpsl
mov
sbb
jo
leave
mov
push
cmpsl
scas
es
repz
outsb
xor
push
jge
mov
out
lahf
addr16
filds
int
scas
cmp
in
aas
std
add
dec
fs
stc
das
mov
out
out
xchg
js
mov
ja
mov
pop
add
push
add
add
mov
jnp
es
mov
je
sub
scas
loop
inc
mov
sbb
mov
fimuls
sub
mov
test
repnz
add
mov
lahf
push
emms
testl
mov
pop
fsubrp
xor
jbe
pop
lcall
mov
inc
insl
add
push
call
and
pop
andl
sbb
mov
lods
popf
popf
cmp
sti
jb
mov
add
ret
sbb
shlb
jae
jg
out
inc
out
dec
push
push
jge
scas
hlt
mov
adc
mov
ret
sub
lds
fbstp
sub
dec
out
mov
jnp
sahf
ret
inc
fistl
fwait
jl
sarl
xor
popa
nop
add
std
pop
sti
xchg
ja
cwtl
dec
xor
out
dec
xor
inc
ret
mov
dec
in
ja
out
mov
mov
outsl
xchg
pop
aaa
out
inc
fninit
xchg
in
jb
es
loope
orl
es
std
imul
mov
add
sub
es
and
add
stos
push
pop
mov
jae
mov
add
lret
and
xchg
push
or
mov
call
jmp
out
scas
or
push
and
lret
dec
push
add
fcoms
mov
pop
sbb
pop
xchg
scas
int3
iret
dec
es
lock
xor
aas
fistps
inc
xchg
sub
mov
lea
das
and
fisubrs
and
imul
lcall
add
leave
imul
lock
sahf
cmp
jmp
orb
decl
loop
xchg
xorl
inc
test
add
push
das
out
lahf
pushl
testl
add
xor
lcall
fildll
pop
xor
lock
sti
xor
fsubl
pop
dec
cld
xorl
cld
jnp
shll
add
sbb
jae
aas
lahf
leave
or
xchg
cltd
sbb
aaa
or
sub
sbb
lahf
aas
xor
iret
jle
mov
leave
in
jmp
sub
jl
incl
xor
add
addb
loop
add
mov
leave
sar
cmp
mov
dec
mov
dec
iret
and
push
gs
imul
in
gs
jne
je
gs
gs
js
xor
xor
xchg
jg
jae
popa
arpl
outsb
cmp
outsl
data16
es
incl
mov
mov
into
icebp
mov
enter
mov
and
aaa
daa
push
push
dec
cmp
cs
out
sti
fstps
adc
push
call
mov
das
aas
dec
add
gs
and
or
inc
insl
jns
gs
cmpb
push
dec
ret
out
scas
call
inc
andps
push
popa
data16
arpl
addb
jo
ja
jae
jne
fs
enter
fmuls
outsb
gs
xor
sbb
outsb
mov
outsl
or
imul
jbe
incl
call
je
push
push
ss
inc
cmp
outsl
pop
dec
popa
pushf
sbb
fwait
loope
mov
into
dec
cwtl
je
push
push
dec
push
pushf
mov
pop
or
je
jbe
fdivl
xor
or
push
jbe
in
cmp
inc
addr16
add
neg
outsl
mov
popa
das
xor
xor
inc
arpl
jo
inc
outsb
arpl
dec
inc
addr16
and
shll
lods
popa
jne
mov
fcmove
inc
xchg
sub
imul
insl
pop
data16
js
js
imul
loope
jo
cmp
imul
cmc
das
jbe
insl
jae
xchg
sahf
insb
or
pop
bound
sub
jb
pop
mov
adc
mov
jo
cmp
das
sub
rorl
and
xor
xor
fisubl
pop
testl
cli
cmp
mov
rcrl
int3
insl
ljmp
sbb
test
fs
cmp
sub
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
subb
stc
jg
and
add
fs
push
dec
jne
je
inc
jns
ljmp
mov
imul
bound
jae
daa
push
gs
jo
ficomps
push
cmp
dec
sbb
popa
outsl
xor
out
dec
push
fs
or
data16
stc
mov
addr16
push
push
gs
inc
jne
jb
outsb
je
xor
jae
fs
outsl
dec
shlb
mov
scas
or
inc
jb
adc
jmp
fildll
mov
gs
popa
outsb
fs
xor
mov
fidivl
dec
jo
insb
inc
arpl
loopne
insl
mov
fs
jo
xlat
in
add
fldenv
clc
subb
outsb
inc
adc
jns
jnp
jns
push
mov
adc
xor
inc
imul
dec
bound
xor
add
inc
in
inc
outsl
inc
or
mov
es
dec
insl
clc
das
sbb
fldl
and
jae
xor
xchg
rcrl
outsb
jo
je
pop
int
aaa
addr16
imul
and
popa
je
in
idivb
fdivs
ja
xchg
pop
jne
adc
imul
pop
inc
js
mov
insl
or
xlat
in
cmp
adc
insl
push
mov
divl
mov
aas
xor
inc
pop
push
add
pop
mov
pushf
sahf
push
popaw
out
adc
jae
nopl
ret
or
xor
gs
jb
or
ds
data16
notl
hlt
sbb
push
faddl
aad
pop
xor
fwait
loopne
je
je
push
insl
shr
cmp
bound
rclb
push
push
iret
pop
imul
insb
insb
arpl
pushf
xor
arpl
jo
clc
iret
cmpsl
add
and
outsb
push
loopne
mov
adc
js
and
shll
jbe
dec
cmp
inc
cmpsb
inc
ret
inc
fildll
dec
out
mov
insb
inc
pushl
jne
jbe
scas
lods
pop
mov
xor
imul
push
ja
fstl
add
imul
mov
jo
or
adc
push
pop
or
and
sub
or
push
lcall
sbb
xchg
xor
or
or
pop
sbb
adc
push
cmp
or
aaa
add
push
or
or
push
xor
adc
push
sub
or
adc
push
sbb
or
adc
add
jle
adc
add
pop
adc
es
or
dec
pop
fstpt
mov
and
cmp
sbb
rdpmc
sbb
push
jns
xlat
das
or
or
xor
and
sub
in
in
adc
or
push
pop
or
pop
pop
mov
add
adc
outsl
lahf
aaa
mov
push
adc
and
pushl
inc
add
lock
pop
or
lock
add
pop
push
add
gs
pop
and
pushl
add
sub
or
pop
sbb
cmp
movsb
rclb
cmp
add
push
cmpsb
adc
adc
adc
xor
adc
aaa
mov
adc
adc
into
or
pop
or
pop
loopne
notb
push
or
lock
pop
movsb
sbb
inc
and
push
or
mov
jno
sbb
add
or
cmovns
sub
or
mov
jle
pop
add
push
sbb
push
or
sbb
xchg
repz
pop
push
adc
sbb
sbb
pop
insl
jge
data16
cmp
add
addl
xchg
ret
sti
fwait
loop
and
mov
adc
adc
adc
insl
add
dec
or
popa
or
test
pop
add
loop
cs
lock
push
add
or
push
rcll
and
jno
mov
pushl
xorb
push
daa
inc
or
dec
adc
adc
or
inc
xchg
cmp
jo
add
mov
mov
loopne
out
cmp
or
push
adc
inc
pop
jl
pop
inc
sbb
inc
pushf
lock
add
sub
adc
jmp
add
add
adc
fists
add
or
lock
adc
inc
dec
add
mov
add
and
xor
data16
ljmp
mov
adc
add
packssdw
cmp
xor
lea
adc
bound
lahf
add
jnp
cmp
xchg
pop
jo
addl
cmpb
je
imul
or
inc
fimuls
dec
pusha
inc
add
dec
dec
xchg
cmp
jae
xor
or
repnz
shrb
insl
popa
outsl
push
aad
push
add
mov
gs
shlb
leave
repz
es
ret
sbb
repz
add
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
