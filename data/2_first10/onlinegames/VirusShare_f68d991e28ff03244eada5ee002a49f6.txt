jmp
into
ror
int
or
sub
sub
sub
sub
sub
sub
sub
sub
or
inc
dec
and
arpl
popa
bound
imul
jb
je
arpl
outsb
and
jae
gs
and
sub
inc
jb
popa
je
and
and
and
jae
outsb
sub
xor
cmp
and
sub
sub
and
push
cmp
push
das
das
jp
insb
gs
outsb
popa
jb
fs
das
and
sub
sub
sub
insl
popa
imul
js
inc
push
imul
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
or
insb
sub
jns
jne
outsl
je
je
imul
sub
bound
and
jae
ja
insb
insb
and
and
insb
and
jne
addr16
cmp
or
xchg
jmp
js
add
pop
arpl
loope
inc
pushl
mov
adc
fisubrl
stc
lret
adc
imul
xor
mov
cmp
add
mov
cmpsb
call
bound
adc
fisubrl
mov
inc
sbb
adc
sbb
push
pop
mov
adc
sbb
lea
imul
nop
jmp
adc
and
inc
xor
sub
mov
insl
pushl
lea
mov
into
inc
xor
inc
test
cmp
mov
inc
sti
mov
arpl
jb
imulb
test
pushf
inc
sti
mov
push
test
hlt
pop
xchg
mov
mov
mov
sub
mov
scas
mov
mov
inc
add
mov
mov
into
inc
xor
cmp
jp
pusha
int3
jno
stos
xor
and
inc
xor
sub
mov
insl
pushl
lea
mov
into
inc
xor
dec
push
pop
push
sbb
inc
add
in
outsl
dec
ret
and
clc
rcrb
inc
jecxz
mov
pop
or
sub
shlb
icebp
bound
daa
aad
dec
mov
sub
cmp
stc
out
dec
jmp
push
in
push
scas
sbb
mov
clc
cld
adc
mov
ljmp
xorb
xchg
or
and
dec
sti
loope
loop
out
xchg
and
mov
cmp
mov
add
mov
aam
stos
fsubrl
dec
imul
mov
sub
leave
cmp
lds
lods
pop
xchg
movsl
scas
dec
ds
xor
aad
pusha
dec
sbb
sbb
inc
mov
test
jl
xchg
nop
pop
mov
aas
movsb
xchg
lock
lret
in
dec
and
popf
fsub
push
lds
inc
pushf
sbb
jmp
inc
push
dec
in
adc
and
jmp
mov
in
pop
ja
nop
cld
mov
leave
xlat
cltd
and
aas
mov
ficoms
or
dec
and
add
in
add
lods
insl
and
jae
adc
sahf
xchg
lock
xor
fisubrs
lahf
jnp
mov
out
adc
test
mov
inc
jg
dec
and
mov
sarb
adc
movsb
or
out
cli
cltd
xchg
fs
sub
dec
or
xchg
in
sti
inc
insl
call
mov
jl
mov
mov
arpl
lret
jo
popf
repz
cmpb
pop
imul
inc
aam
scas
in
call
adc
or
aaa
mov
in
loopne
jl
aad
jmp
into
cmpl
mov
cmp
jecxz
outsl
fnsave
pop
jb
clc
dec
sbb
inc
dec
push
pop
out
or
add
jnp
mov
xchg
mov
lods
cmpsb
das
or
mov
push
pop
sarl
or
add
inc
xchg
pop
js
mov
pusha
adc
cwtl
movsb
dec
cmp
mov
inc
xor
xor
xor
daa
add
loop
sbb
fildl
cs
cmp
jbe
psrad
test
ljmp
xchg
cmc
or
mov
orl
cmp
vmulps
outsb
pop
loopne
cmp
shrb
nop
gs
mov
add
lret
not
test
xchg
scas
pop
insl
push
in
mov
mov
orl
cmpsl
push
cltd
jmp
call
push
fildl
or
push
mov
sub
idivl
in
or
and
sub
mov
dec
or
mov
roll
xchg
orb
stos
or
bound
and
inc
shlb
jnp
push
cmp
popa
popf
add
inc
insb
mov
scas
inc
and
adc
jnp
mov
hlt
test
xor
dec
mov
sub
daa
sbb
push
add
mov
pop
adc
roll
fidivrl
rcl
fwait
movsl
add
fsubr
sub
ljmp
inc
rorb
mov
or
popa
popa
fwait
sbb
fcoms
pop
cmp
push
dec
das
lods
arpl
in
jbe
fmuls
xor
into
lock
sti
sbb
inc
adc
out
inc
add
pop
je
sub
jmp
cmpsb
cli
mov
das
adc
enter
mov
divl
cmpsl
test
mov
jnp
lods
movb
shl
mov
ret
adc
adc
adc
stos
xor
pop
gs
and
movsl
shrl
dec
popa
sbb
mov
or
jb
bound
pop
inc
or
jmp
into
fcomi
hlt
lret
imul
or
imul
lea
jmp
scas
dec
pusha
xchg
xchg
clc
lret
mov
loope
cltd
int3
or
jnp
imull
fsts
mov
outsb
inc
push
rcrl
shr
and
int3
popa
daa
push
inc
movsl
push
cmpsb
pop
in
xor
or
add
push
sbb
and
inc
clc
jb
sub
jecxz
bound
mov
out
push
dec
adc
dec
dec
arpl
xor
shll
push
divb
sub
scas
inc
inc
mov
adc
pop
fldcw
arpl
out
mov
call
dec
and
aam
sub
sbb
jge
xchg
aad
imull
mov
mov
or
out
popf
xor
int
sbb
shl
adcb
dec
sub
inc
icebp
lock
lods
mov
inc
and
scas
rcrb
arpl
mov
pop
cmpsl
cmp
aaa
pop
out
cltd
sub
into
dec
mov
scas
mov
movsb
pop
lods
add
shl
pushf
lret
fsubr
push
movsb
and
iret
sbb
sbb
inc
ss
pop
icebp
dec
or
cmpsl
fsubrl
lcall
divb
sar
sub
iret
and
sub
mov
inc
jg
mov
pop
add
dec
roll
test
mov
sub
stc
xchg
pop
cs
cmp
or
push
cmpsl
mov
push
xor
rclb
icebp
mov
imul
xchg
adc
into
test
fisttpll
xor
push
pop
jp
xor
and
sbb
sbbl
pop
iret
cld
push
mov
fsub
add
hlt
and
xlat
std
stc
cwtl
dec
jp
int
mov
das
ds
xchg
addl
scas
and
das
mov
pop
push
cmpsb
xchg
cli
out
popa
cmpsb
sub
push
inc
fwait
xchg
xchg
sub
push
ljmp
cli
imul
addr16
lahf
in
pop
aas
lods
pop
dec
mov
adc
loope
cmp
cmp
icebp
cmp
mov
xchg
mov
stc
mov
adc
shll
and
push
mov
or
rcrb
jb
jns
mov
outsb
ds
xchg
or
es
cmp
into
push
daa
sbb
sub
sub
and
mov
shlb
fiaddl
jp
int
sahf
jnp
test
dec
jmp
sbb
pop
scas
stc
test
mov
es
ds
test
or
lods
sub
out
jne
mov
and
in
rcrb
jmp
jo
insl
cmp
repnz
int
mov
cmp
fs
sub
push
addb
mov
cmpsb
cltd
aaa
fwait
xchg
push
jnp
cmp
int
push
or
cli
mov
imul
push
push
inc
aaa
xchg
lock
or
shll
jg
mov
dec
in
clc
xorl
fsts
mov
xchg
pusha
sahf
add
pop
push
stos
ret
sub
dec
in
popf
and
xor
jecxz
push
jmp
mov
mov
inc
test
cmp
sub
lock
cltd
mov
cmpsb
repnz
data16
or
mov
iret
pop
movsl
xor
add
mov
cwtl
test
and
fs
dec
sbb
mov
bound
gs
adc
xor
or
cmpsl
inc
mov
out
inc
aaa
stos
js
push
pop
loope
cli
in
jmp
daa
mov
xor
sub
icebp
out
inc
push
lret
test
xor
les
fs
mov
shrl
cmp
scas
jg
or
sub
loop
cmc
cld
sar
push
aas
cli
xor
push
stos
pop
xor
aaa
sub
dec
mov
inc
test
enter
ds
aaa
mov
lahf
cmp
sbb
push
or
mov
cmp
mov
mov
push
push
js
clc
lret
jge
mov
mov
push
fmull
in
sub
or
xchg
pop
jecxz
fmuls
xchg
sub
fbld
mov
hlt
dec
and
push
les
negl
inc
pushf
sti
andl
xchg
shll
xor
fadds
mov
fs
adc
sub
push
clc
in
dec
and
fistps
insl
lods
xor
mov
dec
mov
mov
es
cmpb
das
xchg
ret
inc
clc
lods
mov
dec
out
adc
add
rclb
arpl
xor
iret
push
fs
decl
sub
mov
test
mov
xchg
pusha
sbb
lcall
icebp
xor
insb
inc
std
test
cltd
or
lock
lods
aam
pop
mov
outsl
push
sub
negl
or
fimull
push
sti
fisttps
jns
cmp
sub
or
add
jb
fidivl
imul
int3
int3
aam
lret
fwait
mov
mov
mov
cld
call
dec
aaa
iret
mov
xor
aaa
jl
sbb
pushl
jge
testl
cs
dec
and
subb
mov
jl
data16
xchg
pop
lock
push
lret
mov
push
ret
inc
mov
in
jecxz
out
out
xchg
jp
sub
fldenv
xor
iret
out
add
cmp
flds
and
scas
mov
lea
sbb
mov
sub
scas
lods
pushl
std
fadds
add
lret
daa
into
push
mov
push
dec
push
divl
shlb
mov
outsl
and
daa
es
adc
out
arpl
insl
test
cmp
test
dec
pop
cmc
push
inc
pop
stos
inc
insb
sbb
pop
test
pop
sahf
jp
pusha
data16
jecxz
jae
iret
adc
xor
scas
js
mov
pusha
pusha
pop
addb
or
jmp
mov
call
sarb
ss
push
push
fcmovnb
int3
ds
jb
subl
addr16
add
daa
es
cs
bound
push
jle
roll
ret
stos
mov
inc
in
clc
pusha
inc
shrl
dec
out
pop
mov
push
aaa
add
mov
bound
arpl
dec
std
shr
pop
popf
jmp
test
and
fcompl
push
mov
lock
jno
and
jbe
pop
push
mov
scas
ljmp
lahf
clc
dec
xchg
cmpsl
xor
pop
adc
add
push
repnz
repz
lcall
iret
add
adc
inc
in
sub
mov
add
mov
sti
add
shr
sti
mov
enter
pop
dec
mov
mov
jnp
cmpsl
pusha
pop
inc
clc
cmp
sar
mov
icebp
add
imul
cli
dec
mov
mov
shll
std
loopne
cmp
mov
mov
adc
out
insb
icebp
out
mov
xchg
cmp
outsl
mov
stos
inc
insb
sub
pop
test
pop
sahf
cmp
sub
aaa
out
push
arpl
ja
leave
into
cmp
lock
jb
xchg
movsb
out
ds
push
pusha
in
lea
or
and
aam
outsb
iret
ret
adc
fisubs
pop
jno
movsb
addb
xchg
and
sub
sbb
and
and
stos
fsub
movsb
add
sarl
mov
jne
adc
shrl
ret
stos
sub
xchg
sub
add
mov
std
dec
aaa
pop
xchg
cmp
gs
jp
sarl
mov
test
rorl
pusha
xor
jl
mov
adc
mov
pop
mov
fcmovnu
pop
sub
addr16
fidivrl
mov
dec
sub
sub
dec
mov
les
pushf
ds
repnz
gs
adcl
jl
mov
daa
aas
clc
jp
inc
in
mov
ret
in
out
fcomps
pop
add
ret
jl
mov
push
adc
jg
or
shll
data16
in
xor
pop
pop
mov
xchg
lock
test
lret
aaa
fildl
or
jmp
dec
sub
xlat
jecxz
jle
mov
aad
cmp
jmp
jae
dec
and
push
mov
test
repz
in
loope
inc
adc
inc
mov
dec
dec
dec
mov
push
lea
mov
outsl
sbb
repnz
lcall
push
xlat
lret
jo
popf
notl
sar
imul
int3
outsb
sbb
jl
sub
lock
cmp
subb
std
fadds
fildl
int
testl
outsb
rcll
adc
in
mov
mov
es
ljmp
cmp
je
test
movb
rolb
ret
stos
inc
xchg
mov
cltd
loopne
and
xchg
sub
push
fs
pop
xor
xchg
and
into
xchg
or
jp
cli
addb
lret
lret
ja
adc
das
sbb
push
clc
mov
lock
clc
pop
lret
mov
std
pop
jno
icebp
add
imul
cli
pop
mov
xchg
inc
testb
cld
es
movsb
and
sub
push
or
jb
push
stos
mov
push
sbb
mov
push
dec
mov
daa
ret
inc
pop
roll
pushf
mov
shlb
cmpsb
dec
scas
cmpsl
or
sbb
movsl
push
add
ret
jle
and
jle
mov
pop
adc
aam
and
adc
xchg
lods
sarb
jne
cmp
xchg
cltd
jecxz
out
js
jb
cs
cmp
and
outsl
out
push
adc
sub
adc
mov
js
mov
mov
lds
pop
gs
stos
xchg
stos
add
adc
xchg
fidivl
push
sub
lret
inc
lcall
les
bound
ds
pop
loopne
mov
popf
pop
adc
adc
mov
mov
mov
dec
or
test
jp
and
div
adc
imul
inc
dec
outsb
mov
cmp
dec
hlt
imul
iret
push
insl
pop
cmp
mov
stos
mov
rolb
mov
outsl
cmp
dec
popa
mov
jo
mov
rcrb
pusha
adcl
inc
push
or
sbb
adc
cli
call
neg
popa
mov
sbb
stos
push
adc
dec
lret
pop
lea
clc
mov
lret
xchg
or
pusha
and
gs
mov
stos
pop
pop
push
inc
cmp
sub
loope
and
adc
nop
cmp
test
movsl
mov
push
inc
cli
es
mov
mov
and
pop
cmp
insl
addr16
cli
jl
mov
cltd
shl
adc
and
cli
xchg
jb
jmp
inc
ret
in
mov
cltd
ret
sahf
mov
fldt
sahf
inc
xor
das
das
xor
mov
sbb
mov
push
dec
sub
repnz
out
iret
push
lods
sbb
push
cmc
jl
test
data16
test
sbb
cmp
xchg
mov
std
fldt
pusha
fadds
mov
inc
aaa
lea
lock
clc
xchg
jle
jle
loopne,pt
lods
pop
push
out
loopne
mov
jmp
or
neg
inc
in
in
ss
pop
or
cmpsl
add
jbe
scas
lahf
or
bswap
test
pop
iret
cld
or
aaa
cltd
inc
in
jl
in
rclb
pop
jo
cwtl
repz
cmc
mov
mov
xchg
adc
stos
adc
pusha
inc
rorl
cli
clc
pusha
push
mov
jecxz
jae
iret
adc
jb
add
mov
fs
lods
add
cmp
and
mov
test
xchg
dec
mov
insl
fisubs
sahf
jp
inc
pusha
mov
sar
adc
dec
push
push
sub
mov
dec
and
mov
loop
das
lds
xchg
loope
fwait
mov
sub
or
add
cltd
stos
rcrb
adc
das
aad
push
stos
xor
xor
dec
clc
add
test
lods
mov
mov
pushf
lret
aam
movsb
cld
clc
aad
mov
push
cld
cmp
pop
test
jp
dec
addr16
fcom
pop
push
mov
adc
xlat
push
jno
jmp
and
cmp
je
shrl
push
mov
lcall
dec
sub
bound
fadd
cld
mov
pusha
sbb
pushf
insb
repz
push
or
sub
pop
dec
xor
sti
popa
xchg
fstps
cli
mov
inc
sub
cmp
pop
push
dec
cmp
dec
lret
ja
out
pop
enter
xor
push
fmull
xchg
jnp
mov
and
push
sub
mov
inc
das
bound
les
cmc
inc
ss
push
popa
aas
and
int3
mov
and
shlb
sbb
dec
mov
xchg
and
xlat
ss
iret
sub
and
add
loopne
mov
int3
out
popl
cmp
mov
inc
fnstsw
fcompl
and
jmp
push
data16
es
bound
cmp
inc
movsl
add
pop
ret
lcall
push
sub
fwait
ja
sub
or
fstl
push
cmp
int3
jo
data16
cmp
pusha
inc
lret
sub
inc
ss
in
sbb
pop
pop
movsb
stos
xchg
lock
sub
mov
test
xor
lret
leave
inc
push
mov
sbb
rorl
fisttpl
xor
xchg
lea
test
mov
imul
scas
sbb
rcrb
inc
xor
sub
mov
insl
sbb
xlat
mov
mov
insl
sub
cli
pop
dec
es
push
pushf
jo
or
mov
adc
xchg
lods
adc
das
adc
leave
clc
sbb
int
jg
inc
push
repnz
dec
leave
mov
adcb
lret
push
fmuls
pop
adc
inc
adc
jle
insl
mov
pop
xor
mov
int3
hlt
les
and
scas
inc
mov
andb
or
push
cmp
jo
clc
addb
dec
push
loopne
test
mov
push
sub
ja
adcl
fmull
mov
out
jp
mov
popf
out
in
aad
mov
xchg
jle
dec
faddl
subl
pop
fisubl
jle
xchg
andb
fsubrp
or
insl
movsb
cld
cwtl
bound
repz
fldcw
bound
sbb
cltd
cmp
dec
xchg
jmp
xor
iret
out
test
cmp
sbb
hlt
lock
fs
cmpsb
dec
push
dec
je
sbb
scas
xor
pop
cmpb
inc
rol
aaa
fmull
pop
dec
xor
mov
js
xchg
add
ja
inc
push
sub
nop
iret
and
aaa
fwait
xor
xor
sti
rclb
mov
xchg
in
dec
and
gs
out
inc
inc
aas
test
adc
mov
sub
dec
mov
es
std
clc
test
xor
aas
push
inc
pop
out
std
fmull
xor
ret
mov
jl
aam
pop
xor
sub
cmpsl
xor
loopne
rorb
sub
add
xor
and
and
push
movsb
pop
cld
and
xor
mov
mov
push
xor
fwait
bound
cltd
inc
insb
or
leave
mov
lcall
xchg
ss
cltd
lods
rcr
lcall
push
jg
dec
aas
mov
xchg
fs
adc
pushf
lret
popf
in
pop
inc
das
mov
inc
into
test
mov
enter
mov
and
sbb
sub
pcmpgtd
dec
cs
clc
scas
rcrb
dec
fmull
mov
lcall
fstps
inc
push
xchg
jl
fwait
push
test
sbb
adc
mov
inc
mov
pop
popa
mov
sub
sti
mov
xor
cmpsl
clc
cmp
mov
scas
enter
mov
cld
dec
sbbb
sti
push
std
xchg
jmp
xchg
les
cmc
aaa
mov
pop
jno
movsb
addb
push
addr16
push
jp
or
cs
loopne
xor
jae
xor
or
dec
ret
pop
ljmp
sbb
and
iret
stos
mov
mov
sbb
mov
mov
push
xchg
jecxz
jl
stos
xchg
or
xchg
cmp
std
push
inc
jne
mov
mov
jle
sbb
jnp
lea
inc
repz
sbb
pop
xor
insb
imull
sahf
loop
aam
and
jl
sub
aaa
cwtl
pop
jecxz
pop
xor
pop
jle
mov
adc
jl
lahf
xlat
mov
dec
popa
jae
ret
inc
jns
ds
int
sbb
ja
jns
sub
aam
xor
lock
sbb
out
adc
mov
fistpll
mov
xchg
cmc
jbe
or
lock
mov
push
mov
in
addr16
mov
cli
push
cmp
ja
dec
outsb
jno
or
push
xor
outsl
scas
in
mov
sbb
xor
cwtl
adc
std
xchg
ljmp
pop
mov
jne
xchg
push
inc
insb
sub
add
or
push
xor
iret
sahf
scas
ja
xor
push
adc
jl
gs
shl
sbb
outsb
shll
incb
xchg
lock
mov
mov
mov
out
cwtl
push
lret
clc
scas
mov
sbb
xchg
and
dec
and
mov
inc
fwait
mov
mov
jmp
test
cli
test
inc
sbb
pop
cs
bound
inc
mov
lods
loope
inc
xchg
lcall
sbb
xor
nop
sub
aam
fistpll
xchg
cmpsb
int
test
and
movsl
arpl
sbb
pushl
stc
mov
jno
fidivrl
fcomi
inc
aad
orb
out
and
sbb
adc
xchg
popf
in
addr16
xor
enter
in
mov
pop
sub
sbb
rcrb
insb
mov
mov
adc
aaa
cs
mov
push
ror
push
add
xchg
or
aam
push
xor
es
or
enter
icebp
nop
push
lods
push
testl
xchg
fidivrs
cmp
inc
xchg
xor
lds
jecxz
and
in
jbe
shlb
insb
sbb
andl
in
int3
popa
jg
int3
cmp
sub
xchg
in
jecxz
insb
pusha
xchg
push
cli
mov
and
and
aad
sub
pop
mov
pop
fcmovne
push
aam
aas
bnd
xchg
decl
inc
rcr
out
cld
pop
icebp
jb
pop
cwtl
xchg
fidivs
jnp
lahf
jl
dec
mov
test
loop
sbb
cmpsl
add
mov
cwtl
sahf
xor
cmc
lahf
pop
jae
std
gs
mov
popa
mov
ret
inc
cltd
test
js
adc
xchg
ja
push
aaa
aad
push
int3
jmp
xor
pushf
jmp
or
mov
and
sub
adc
cmp
mov
aaa
cld
jl
je
pop
xchg
pop
adcl
dec
mov
scas
clc
in
and
xor
in
or
data16
sub
mov
negb
sub
pop
arpl
enter
outsl
or
sbb
mov
clc
pop
repz
arpl
xchg
xorb
subb
jl
icebp
ret
cld
leave
stos
mov
fisubrl
mov
mov
push
pop
icebp
cmp
xchg
and
or
or
adc
and
cmpsb
mov
and
xor
adc
dec
sub
mov
push
xor
dec
add
fwait
vpinsrd
mov
loopne
xchg
fimull
jae
push
fstpl
das
lret
jecxz
add
mov
xchg
insl
add
adc
imul
cli
mov
pushl
test
push
les
jno
pop
js
push
add
jae
jge
cmp
dec
inc
loopne
and
add
loop
sub
cmc
add
xchg
outsb
out
xchg
sbb
repz
mov
je
cltd
bound
sarb
enter
pop
in
mov
mov
cmp
xor
mov
add
pusha
sub
mov
pop
or
in
imul
dec
add
mov
popf
mov
sbb
push
lods
icebp
shlb
mov
lcall
leave
shl
stos
sti
dec
hlt
mul
iret
push
outsb
js
cmp
std
arpl
je
fcoms
dec
mov
fldenv
stos
icebp
cmpsl
add
lret
out
sahf
daa
ss
test
jecxz
fwait
jnp
cltd
mov
repz
rcll
mov
pusha
xor
xchg
sti
or
ljmp
push
pop
movsb
cmp
dec
rcr
ds
pop
icebp
lcall
or
mov
mov
sub
sti
dec
lock
iret
mov
mov
adc
mov
adc
lcall
fcomi
sub
cmp
mov
loop
mov
mov
dec
pop
jns
loop
stc
xor
sbb
leave
jae
roll
pusha
mov
or
jmp
popf
push
inc
fadds
rcrl
test
pushl
rcl
mov
fucompp
jp
loopne
ljmp
sbb
loop
sub
cli
dec
lock
iret
sbb
lahf
ret
xor
loopne
enter
imul
dec
xor
jae
fstps
repz
and
cli
add
xchg
jp
jbe
cltd
pop
push
mov
push
gs
loop
mov
sub
stos
bound
leave
mov
call
pop
push
incl
stc
pop
jno
pop
js
inc
add
jae
jge
cli
popa
pop
dec
inc
loop
and
add
mov
inc
mov
fistps
clc
xchg
call
adc
jnp
and
stos
stc
cmpsb
add
jp
jp
imul
popf
push
cmp
adc
xor
pop
loope
cli
mov
add
add
pop
jl
mov
loopne
repnz
adc
jp
icebp
cmp
mov
test
sbb
incb
mov
or
add
fcomps
loopne
lds
mov
loopne
cmp
clc
outsl
add
stc
dec
test
push
addr16
inc
jg
aad
dec
sub
shll
jp
or
aaa
lods
cmp
insb
sbb
cmp
ja
mov
jl
mov
popf
lods
pop
dec
loope
adc
pop
jne
or
cmp
xor
push
movsb
ljmp
xchg
cwtl
add
rclb
jmp
xor
dec
pop
or
xchg
std
ljmp
scas
lahf
inc
outsl
lcall
lods
inc
mov
sbb
fnstsw
jle
lahf
fsubrs
mov
es
xor
adc
nop
sahf
inc
xchg
xchg
dec
popa
sbb
dec
inc
mov
mov
call
sbb
cmp
inc
add
inc
out
lret
je
jo
push
aaa
dec
out
pop
lods
data16
or
and
cmp
pop
das
xchg
sbbl
lcall
cmp
stos
push
and
mov
sub
sub
arpl
sub
sbb
icebp
push
or
lods
fstp
adc
icebp
pop
sub
bound
shl
cmpsl
jns
daa
ja
jmp
pop
fisubrl
rcl
mov
cmp
lock
pop
xor
xorl
inc
and
or
movsl
fildl
cmpsl
jbe
xor
outsl
cltd
or
inc
add
mov
mov
xor
push
fmuls
in
adcb
fsubs
fbstp
add
hlt
ja
xchg
xchg
repz
and
push
cld
leave
mov
pop
dec
mov
inc
out
lret
je
scas
adc
outsb
dec
mov
push
hlt
int
and
hlt
loop
pop
iret
push
test
clc
pop
or
test
mov
xor
popfw
pusha
dec
sub
push
xor
bound
or
idiv
push
inc
lret
jmp
cltd
jmp
adc
movsl
cmp
mov
sbb
mov
jmp
mov
mov
imul
or
test
xchg
lock
loop
cmp
int
add
mov
dec
test
stos
test
gs
test
push
insb
and
pushf
int
sarl
xor
inc
loop
scas
in
or
arpl
ror
and
je
cs
icebp
shll
roll
pop
or
add
add
mov
repz
jl
jecxz
popa
popa
mov
fnstsw
lcall
imul
popa
bound
inc
pop
fidivrl
jnp
hlt
fsubp
inc
xor
cmc
cmc
pushf
cmp
in
jmp
insb
mov
daa
mov
jnp
mulb
jnp
add
mov
testb
ss
scas
push
lods
shrb
xchg
push
mov
scas
xchg
ret
pop
lahf
ljmp
enter
out
loopne
push
cli
fisubrs
lret
call
ja
mov
std
pop
mov
inc
and
int3
lock
nop
in
mov
std
stos
out
fldl
xchg
xor
popf
jb
dec
xor
cmp
lcall
adc
xchg
popa
push
imul
xor
adc
lea
pop
lock
pusha
cmp
jo
push
add
leave
cld
into
mov
lods
mov
cld
dec
mov
or
movsl
sub
faddl
adc
jp
addr16
pop
hlt
and
in
lcall
xchg
sub
bound
xchg
sarb
lock
jmp
dec
xchg
mov
icebp
mov
les
push
adc
mov
or
adc
xor
loopne
or
jns
sbb
inc
sub
add
test
aad
jo
xor
popa
popa
or
inc
ljmp
mov
test
notb
punpckldq
rolb
icebp
pop
hlt
popa
jne
in
insb
or
xchg
xchg
test
xchg
or
fisttpll
fldl
inc
ret
sub
nop
outsb
jecxz
or
sub
es
or
in
mov
loopne
xor
cltd
push
inc
pusha
les
ret
outsl
test
in
push
ror
xor
ret
push
mov
sub
xor
mov
movsb
push
inc
sbb
test
jne
inc
fidivrs
cvttps2pi
sub
cmpsl
lahf
icebp
jecxz
sub
cmpsb
xchg
jbe
clc
sbb
inc
repz
dec
inc
outsb
loopne
mov
dec
fistps
pop
insl
pop
les
jae
mov
jle
adc
dec
adc
cmp
adc
add
sbb
adc
cmpsb
lea
push
fcmovnbe
xchg
dec
dec
pushf
cmp
sub
push
dec
cwtl
fidivl
mov
fsubrl
inc
mov
loopne
jae
jmp
cmp
push
stos
lea
jle
stc
dec
adc
sti
inc
xor
lds
mov
xchg
test
shrl
push
jge
inc
push
adcl
cmp
test
push
mov
mov
xor
bound
mov
and
xchg
mov
loope
popa
mov
fisttpll
sbb
and
jae
fnstenv
cmpsl
popf
pushl
arpl
push
mov
lret
mov
in
rolb
popf
das
push
jnp
shll
mov
test
je
mov
pop
or
push
sub
test
insb
and
js
xor
xchg
mov
or
cwtl
jne
ja
loop
push
inc
jb
fidivrl
dec
push
ljmp
dec
mov
lock
rcrb
inc
int
stc
ja
sub
pop
jmp
stos
aas
pop
and
ja
inc
inc
lock
lret
add
dec
stc
pushf
xor
icebp
ljmp
test
pop
loop
repnz
dec
push
add
dec
and
ret
inc
cmp
add
imul
push
mov
jecxz
sbb
sub
xor
adc
mov
mov
aam
sbb
xchg
arpl
fisttps
clc
pop
mov
xor
cmp
pop
popf
mov
lahf
pop
cmpsb
leave
or
push
stc
mov
inc
mov
pop
int3
sub
inc
out
mov
xor
daa
pop
pop
adc
mov
mov
cmp
in
loopne
add
mov
imul
or
sub
and
add
pusha
xchg
mov
in
in
nop
xlat
mov
insl
pop
int
mov
cmp
out
push
inc
cmpsl
cmp
shlb
push
jo
push
movsb
test
push
daa
xchg
lock
mov
call
add
aaa
xchg
dec
or
sub
pop
cmp
mov
lock
sub
jmp
add
mov
jecxz
stos
imul
mov
in
pop
out
sar
outsb
inc
stos
cld
jb
loopne
mulw
push
add
adc
add
ja
mov
cld
icebp
cmp
fisubrs
and
jp
jle
pop
jnp
stos
jno
mov
cmc
or
cmp
and
xchg
insb
pop
fsubs
sbb
pushl
cs
add
stos
bound
mov
enter
xor
push
dec
movsb
fldcw
mov
push
fisttps
push
cli
imul
or
adc
jb
mov
lock
or
jns
fdivr
jg
or
movsl
lea
dec
nop
add
popa
dec
in
loopne
insl
mov
or
adc
sarl
mov
mov
cs
out
mov
xchg
and
adc
outsl
orb
sub
das
out
out
add
jne
mov
je
add
and
outsl
xchg
pop
pop
cmp
lods
lock
das
popf
add
push
dec
push
daa
dec
out
push
lods
and
pushf
das
stos
push
mov
sub
push
pop
xchg
ljmpw
sbb
inc
jecxz
mov
insb
es
popa
cmc
aaa
sbb
cld
aam
mov
adc
pop
ret
ss
xlat
in
jbe
es
add
mov
dec
mov
push
add
out
hlt
adc
repz
shr
clc
mov
stos
jns
mov
push
negb
and
das
lcall
inc
repz
lea
out
call
dec
hlt
leave
push
push
loope
xchg
mov
cmc
adc
ja
and
push
dec
jno
shr
push
sub
sub
insb
test
sub
lret
inc
lcall
push
cwtl
imul
stos
dec
xchg
dec
and
jnp
add
mov
inc
arpl
popf
sbb
cmp
mov
sub
loopne
sub
cmp
mov
imul
mov
mov
cmp
inc
inc
adc
dec
hlt
cmc
andl
lds
loope
cmovl
push
xchg
add
negb
jl
jp
shl
cli
mov
fistl
sbb
push
xor
iret
out
mov
decb
add
jl
push
stos
mov
insl
push
push
mov
mov
jns
ja
push
negb
shll
sub
stc
in
sub
or
lcall
push
cltd
add
pop
hlt
popa
ja
jecxz
mov
daa
ljmp
js
xor
and
daa
and
pushf
int3
out
sbb
outsb
in
mov
jp
adc
scas
mov
std
sarl
sub
jns
fs
shll
hlt
and
and
insb
pop
push
aaa
dec
cvtdq2ps
pop
out
and
negb
out
push
out
decl
jg
add
in
push
das
test
push
rolb
addr16
jmp
lahf
outsl
jno
and
lods
sub
sbb
mov
pushf
cmp
fimuls
jnp
sub
je
pop
scas
in
dec
and
mov
lds
pop
xchg
pop
dec
mov
xchg
pop
les
sbb
sub
inc
loopne
pop
fsubs
lds
inc
jbe
daa
cs
lock
and
std
dec
std
mov
je
lds
pop
jmp
std
lods
clc
cld
outsb
in
or
je
arpl
cmp
pop
mov
pop
aaa
xchg
pop
and
daa
xchg
xor
pop
adc
inc
jg
lods
dec
and
mov
loop
sbbb
jns
pop
inc
push
xchg
xor
rcr
cmp
push
xlat
ficomps
lods
icebp
test
mov
xor
mov
aam
pop
jle
loop
mov
sbb
cmp
ja
jecxz
pop
adc
ret
lock
repnz
ret
decl
lea
mov
mov
jp
or
xor
pop
push
insb
add
or
fwait
stos
dec
gs
and
jl
add
loopne
lcall
in
sbb
pop
cltd
ljmp
in
bnd
leave
fdivrl
lods
or
mov
jmp
xchg
scas
or
inc
mov
rorl
xor
lds
pop
jmp
in
lods
outsl
add
sbb
popa
mov
nop
sub
xlat
test
mov
pop
repnz
xor
cs
arpl
push
push
adc
aas
pop
pusha
imul
out
cld
jmp
ret
call
or
and
mov
ljmp
pop
pop
mov
je
lods
rorb
sub
iret
stos
xor
jecxz
add
xchg
mov
adc
or
mov
dec
imul
shrb
cli
lds
jp
add
cltd
int3
xor
sbb
movlps
push
jb,pt
lods
pop
mov
scas
inc
mov
fcmovnb
notb
dec
dec
test
pop
mov
lods
jno
test
xor
xchg
lea
aam
inc
or
sub
sar
outsb
fidivl
add
clc
int3
data16
fnstsw
jno
dec
and
mov
jecxz
stos
js
inc
in
clc
fs
shrl
dec
cmpsb
push
push
jecxz
insb
and
in
push
pop
ljmp
lea
push
push
clc
popa
jmp
in
mov
gs
mov
out
mov
cmp
imulb
xchg
imul
push
pop
add
sub
mov
mov
push
inc
and
xchg
jg
daa
mov
mov
test
adc
adc
xor
bound
mov
cli
xor
xchg
jp
imul
push
jecxz
xor
iret
xor
dec
jmp
cli
jmp
mov
mov
jo
jl
mov
mov
pop
test
cmp
aas
cmp
pop
jno
out
addr16
jle
or
push
dec
cs
push
sub
mov
xor
inc
stos
xor
int
loope
jmp
out
and
mov
xor
cmp
cli
cmp
xchg
jp
imul
push
jecxz
xor
iret
xor
or
cli
leave
ja
mov
push
movsb
lea
mov
mov
fsubrs
cmp
aas
dec
stc
pop
jno
out
addr16
mov
inc
jle
or
push
dec
cs
sub
jbe
xor
movsb
stos
xor
cmc
or
cwtl
testl
add
fwait
bound
aaa
ret
stos
fldenv
cli
add
xchg
jp
imul
pop
jecxz
xor
iret
xor
lret
ljmp
xor
lea
mov
jnp
fidivs
lock
pop
stc
pop
jno
out
addr16
jle
or
push
dec
cs
sub
outsl
xor
test
adc
repz
cmc
sub
insl
xorb
bound
ret
stos
stc
and
dec
fs
cli
or
xchg
jp
imul
pop
jecxz
xor
iret
xor
mov
cli
or
mov
movsb
lea
mov
jnp
fbstp
lock
stos
cmp
aas
insb
stc
pop
jno
out
addr16
mov
inc
jle
or
dec
cs
sub
imulb
loop
stos
xor
in
loope
incl
adc
insl
add
fwait
bound
mov
cli
adc
xchg
jp
imul
pop
jecxz
xor
xor
dec
ljmp
adc
lea
mov
jnp
fdivl
lock
jl
pop
jno
out
addr16
jle
or
push
sub
mov
xor
les
adc
sti
test
cmc
sub
mov
ss
mov
in
ja
ja
jge
sub
push
xor
into
cmp
ljmp
add
lea
mov
jnp
fnsave
lock
stos
cmp
aas
mov
pop
jno
out
addr16
mov
pop
jle
or
push
dec
cs
push
sub
jbe
xor
and
xor
xchg
or
cwtl
movl
add
fwait
bound
xor
stos
pop
mov
cli
fs
jp
imul
inc
jecxz
xor
iret
xor
lret
jmp
scas
mov
or
lea
scas
pushf
jnp
shlb
lock
pushf
stc
pop
jno
out
addr16
jle
or
push
dec
cs
push
sub
outsb
xor
add
xor
popf
or
cwtl
ret
test
cmc
xor
insl
xorb
bound
ret
stos
jns
inc
in
mov
insb
jnp
jp
imul
inc
jecxz
xor
iret
xor
mov
cli
mov
mov
add
lea
lods
pushf
jnp
shll
lock
test
lods
stc
pop
jno
out
dec
aad
shll
add
cmc
push
sub
imulb
loop
stos
xor
test
cwtl
iret
test
cmc
aaa
test
adc
insl
add
fwait
bound
mov
cli
je
xchg
jp
imul
inc
jecxz
xor
iret
xor
dec
jmp
scas
mov
sbb
lea
stos
pushf
jnp
shlb
lock
mov
out
addr16
jle
or
push
dec
cs
push
sub
mov
out
inc
inc
inc
jl
dec
in
shlb
dec
loopne
jg
out
xor
mov
xor
stos
cmp
cli
jl
xchg
jp
imul
inc
jecxz
xor
iret
xor
or
cli
leave
jbe
mov
adc
lea
test
mov
fsubrs
cmp
int3
stc
pop
jno
out
addr16
mov
push
jle
or
push
dec
notb
jg
dec
and
xor
movsb
stos
xor
mov
loope
xlat
test
cmc
cmp
dec
out
std
adc
lods
pop
or
outsl
inc
insb
or
cli
inc
jnp
jp
imul
dec
jecxz
xor
iret
xor
lret
call
scas
mov
sub
lea
cmpsl
pushf
jnp
mov
pop
scas
xchg
lock
fdivr
pop
jno
out
addr16
jle
or
push
dec
notb
push
dec
and
outsb
xor
test
adc
roll
adc
insl
xorb
bound
ret
stos
stc
mov
cli
dec
jnp
insl
pop
repz
ret
out
into
cmp
jbe
mov
and
lea
movsl
pushf
jnp
xlat
mov
fsubrs
cmp
in
stc
pop
jno
out
addr16
mov
push
jle
or
dec
notl
jg
dec
and
outsb
xor
in
xor
movsl
or
cwtl
filds
adc
insl
add
fwait
bound
mov
cli
push
jnp
jp
imul
dec
jecxz
xor
xor
dec
call
scas
fs
push
nop
int
cmp
cmp
pushf
jnp
aam
adc
xchg
lock
cld
stc
pop
jno
out
addr16
jle
or
push
sub
mov
xor
les
adc
fildl
adc
insl
xorb
mov
fs
cli
pop
jnp
jp
imul
dec
jecxz
xor
into
cmp
call
scas
mov
xor
lea
mov
mov
fstpt
lret
sub
or
ljmp
mov
testb
adc
cs
push
sub
jbe
xor
and
xor
push
or
cwtl
cmpsl
test
cmc
add
insl
add
ret
stos
pop
mov
cli
movsb
jnp
jp
imul
ja
push
xor
iret
xor
lret
out
cli
test
mov
mov
cmp
in
lahf
pushf
jnp
lret
pop
mov
cmp
cmp
pop
jno
out
addr16
testb
loop
xorl
shrl
pop
sti
cmpsl
sub
lcall
test
push
add
insl
cmpb
stos
jns
inc
in
or
cli
lods
jnp
jp
imul
jne
push
xor
iret
xor
mov
cli
mov
mov
les
in
popf
pushf
jnp
lret
mov
fsubs
cmp
cmp
pop
jno
out
addr16
testb
adc
cs
push
sub
imulb
loop
dec
sar
shrb
cs
loope
out
clc
push
or
cmp
sub
and
mov
gs
cli
mov
xchg
jp
imul
jae
push
xor
iret
xor
dec
out
cli
jmp
mov
mov
xor
in
fwait
pushf
jnp
enter
mov
cmp
cmp
pop
jno
out
addr16
testb
adc
cs
push
sub
mov
xor
inc
stos
xor
dec
or
cwtl
stos
test
cmc
add
mov
cmpl
dec
cmpsl
adc
cmp
xchg
nop
push
xchg
sbb
sub
xchg
jno
push
xor
iret
xor
or
cli
leave
jne
mov
aam
lea
cltd
pushf
jnp
leave
mov
fsubs
cmp
cmp
pop
jno
out
addr16
testb
push
push
dec
cs
push
sub
jbe
xor
movsb
stos
xor
jne
loope
mov
out
or
insl
add
fwait
bound
xor
stos
fldenv
cli
test
jp
imul
loope
rol
push
jp
add
in
fxch
in
fcoml
fiadds
inc
fadds
adc
mov
lock
pop
clc
pop
jno
out
addr16
testb
pop
push
dec
cs
push
sub
ss
xor
test
adc
mov
out
or
insl
cmpb
bound
ret
stos
stc
mov
cli
mov
jp
imul
jge
push
xor
iret
xor
mov
cli
or
mov
in
lea
xchg
pushf
jnp
iret
mov
fsubs
cmp
cmp
pop
jno
out
addr16
testb
adc
dec
cs
push
sub
imulb
loop
stos
xor
gs
cwtl
mov
test
adc
insl
add
fwait
bound
mov
cli
xchg
jnp
jp
imul
jnp
push
xor
xor
dec
out
cli
imul
mov
and
in
xchg
pushf
jnp
int3
mov
pop
mov
daa
sub
jl
pop
jno
out
addr16
testb
adc
push
imul
mov
dec
cmpsb
idivl
cwtl
mov
test
adc
insl
sbbb
inc
repnz
inc
in
insb
gs
cli
mov
push
idivl
push
xor
into
cmp
out
pop
cli
daa
jne
xor
xchg
mov
xchg
in
jl
into
and
dec
mov
cmp
cmp
dec
icebp
in
cmpsb
bound
jl
or
sbb
dec
push
std
lret
sub
cmc
dec
and
xor
and
xor
xor
fs
adc
mov
mov
fwait
bound
xor
stos
pop
mov
inc
out
les
xchg
fidivl
push
pop
pusha
add
sbb
leave
cmp
in
cli
test
mov
mov
in
and
je
insl
mov
fnsave
repnz
pushf
clc
pop
jno
cmpsb
pop
jae
mov
inc
jnp
push
mov
dec
jbe
push
das
add
dec
and
insb
xor
add
xor
sbb
fs
adc
outsl
jl
or
stos
jns
inc
in
mov
cli
in
jnp
jo
dec
pop
mov
mov
xor
jne
xlat
cli
int3
je
ds
xchg
mov
sbb
jl
lea
fsubs
lcall
icebp
aaa
mov
ja
jp
mov
stos
clc
push
int3
scas
cmp
pop
jb
sub
and
mov
add
out
inc
jmp
in
adc
push
xor
sbb
int
or
mov
mov
push
mov
cmp
call
xchg
ja
push
xor
iret
xor
dec
jg
cli
jmp
pushf
mov
pop
cmp
jl
dec
pop
sahf
imul
dec
movsb
loope
xlat
adc
xchg
jae
jbe
ja
das
jne
decb
mov
push
cs
cmc
dec
and
stos
xor
insl
or
cwtl
mov
mov
cmp
push
add
mov
adc
out
iret
mov
in
cmp
cli
leave
je
mov
mov
jle
movsb
lock
push
mov
movsl
xchg
fs
cmp
mov
clc
fcoms
jle
dec
fwait
jne
outsb
mov
push
jle
push
popa
hlt
dec
push
insb
xor
cwtl
stos
xor
cmp
adc
test
repnz
mov
cmp
stos
in
sarb
push
outsl
arpl
push
insb
jecxz
ss
iret
sbb
into
cmp
je
daa
sbb
xchg
or
cwtl
out
adc
xor
pop
nop
cld
xchg
or
psubsw
out
into
outsb
jno
hlt
test
ret
or
sbb
add
adc
xchg
sahf
add
movsl
mov
jb
dec
mov
mov
mov
int
fisubs
cmp
popa
pop
je
ret
inc
icebp
stc
and
in
cli
pop
shrb
sbb
sbb
mov
mov
insl
mov
lcall
jb
pushl
inc
loope
push
mov
and
inc
mov
dec
pop
and
pop
ljmp
das
pop
nop
lcall
jbe
test
mov
xrelease
aas
sbb
fdivp
shl
pop
into
pop
jb
and
ret
out
popa
lods
mov
sbb
mov
jnp,pn
mov
je
or
and
xchg
push
sti
inc
push
fwait
mov
xor
inc
push
pop
lock
mov
ret
sbb
test
dec
sbb
xor
pushf
out
cmp
push
sbb
mov
and
mov
sti
pop
clc
sbb
xor
fcmovnbe
jnp
sbb
add
xor
mov
xlat
pusha
add
sub
iret
pop
xor
xchg
dec
cs
sarl
pop
lcall
cs
lds
mov
test
pop
push
push
mov
pop
mov
pop
gs
push
pop
jne
push
mov
pop
mov
ret
add
pop
int
add
add
add
push
int
add
add
mov
add
cwtl
int
add
add
add
add
add
push
dec
inc
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
xchg
add
add
adc
