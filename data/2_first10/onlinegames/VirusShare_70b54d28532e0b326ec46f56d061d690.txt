das
pop
push
mov
sub
push
nop
mov
mov
and
out
fists
push
push
push
movl
sub
inc
add
test
add
cmp
fisttpll
push
push
and
mov
or
test
or
pop
scas
mov
mov
xor
push
push
or
outsl
aaa
fcmovnu
call
inc
cmp
sub
push
in
gs
in
inc
in
push
jmp
sub
in
pushw
cmc
lea
mov
mov
push
hlt
mov
sbb
mov
loop
push
jge
in
fisttpll
fisubl
push
lret
enter
push
xor
outsl
mov
add
push
clc
outsb
cld
dec
add
pop
push
push
jbe
dec
mov
dec
adc
push
aam
push
sbb
enter
add
jge
add
test
mov
cmp
lea
or
scas
or
fcmovnu
call
in
rorl
and
sub
push
inc
push
xor
and
aaa
mul
pusha
jnp
call
pop
inc
lea
jno
inc
test
rep
stos
lds
sbb
std
pop
stos
sbb
push
bound
ja
icebp
xor
lea
cmp
ret
mov
movsb
jne
lea
std
pop
je
pop
pop
pop
mov
pop
ret
nop
add
into
std
ss
inc
and
sub
bswap
in
out
mov
and
ret
push
mov
cmp
sub
dec
and
ret
xchg
sbb
cmp
lea
fcmovu
in
jne
mov
push
pop
add
rorl
aad
std
mov
out
mov
test
jne
pop
pop
pop
adc
outsb
mov
mov
xchg
add
mov
jo
or
push
lods
push
xchg
mov
ret
push
inc
jl
jae
imul
xorb
mov
adc
mov
jbe
push
xor
sbb
mov
andl
mov
je
cmp
inc
stc
adc
jl
dec
dec
sqrtps
mov
sub
push
push
mov
mov
inc
mov
push
or
add
outsl
sti
inc
clc
cltd
nop
shlb
fucomi
jl
adc
minps
je
stos
pop
jne
pushf
and
fnstcw
mov
fadds
inc
into
mov
inc
sbb
mov
push
inc
inc
sub
prefetcht0
loope
in
insl
das
inc
pop
or
or
aam
int
mov
testl
push
insl
les
push
and
jl
sti
out
clc
and
stc
pcmpeqb
cli
shr
rep
mov
and
push
jl
jae
rep
mov
testl
dec
sub
cs
je
cmp
inc
cmp
sub
loopne
test
jnp
movsl
into
enter
mov
mov
popa
pushaw
jg
xchg
sbb
add
pop
test
and
popa
xchg
pop
pop
inc
xor
bound
cmp
push
sahf
and
mov
ss
das
xchg
rcrl
outsl
jecxz
inc
xlat
leave
push
push
pop
push
pop
cmp
pop
fsubl
pop
aad
push
push
ret
arpl
jns
loop
jae
pushf
movsl
or
nop
pop
jo
outsb
xchg
xchg
mov
inc
inc
push
mov
andb
sbb
mov
mull
sbb
notb
test
push
mov
or
orb
repnz
popa
add
xor
sbb
in
icebp
push
and
lods
sub
shll
nop
nop
cmp
rcr
cmp
and
dec
mov
je,pt
xchg
js
outsl
fstl
adc
adcl
xor
arpl
ljmp
add
xor
adc
addr16
test
aas
ret
scas
jnp
xchg
add
add
and
insl
outsb
and
insb
jo
loopne
add
ss
xchg
push
insb
push
out
adc
cwtl
cmp
fs
in
mov
or
mov
movb
loopne
and
fistpl
dec
push
add
push
adc
enter
dec
repz
xchg
mov
or
xchg
leave
or
mov
push
mov
aas
loope
sbb
jne,pn
adcb
mov
xchg
push
push
push
xor
shrl
and
imul
subl
je
mov
insb
nop
inc
lcall
sub
inc
adc
mov
fwait
xchg
mov
sbb
inc
mov
and
push
or
jl
pop
enter
loopne
and
orl
lea
fiaddl
out
sbb
cmp
sbb
cmp
int3
fs
loope
sarl
cmp
fucomp
push
mov
cmp
mov
mov
fdivs
rorb
je
lea
xor
popa
pop
lea
enter
shll
outsb
mov
mov
jne
arpl
out
or
jge
cwtl
adc
xchg
int
push
push
stos
sbb
push
mov
test
push
mov
or
int
push
push
mov
dec
mov
rcrb
inc
dec
and
push
xchg
call
mov
leave
dec
das
dec
lods
mov
pop
mov
fsts
test
inc
cli
ds
and
push
adc
adc
sbb
jl
inc
scas
inc
testb
aaa
das
push
jae
push
outsb
bound
pusha
and
mov
pop
sbb
mov
popf
fldenv
inc
add
insl
mov
insl
data16
push
sbb
inc
aaa
je
adc
and
sbb
pop
cmp
and
sub
push
cmp
je
xor
fldt
add
insb
xlat
cmp
cs
mov
xor
iret
repz
cmp
sbb
sbb
sbb
es
jbe
pop
xor
stos
jne
cmp
pushf
add
std
mov
gs
sub
sub
jecxz
cmp
pop
push
inc
inc
mov
mov
inc
in
add
push
xor
inc
sbb
push
push
jmp
sub
sbb
int
push
jecxz
sti
and
mov
sub
cmp
jne
mov
add
sub
mov
data16
rol
adc
and
add
out
ror
jl
pop
arpl
sub
push
je
sbb
adc
and
arpl
add
notl
cmpsl
enter
pop
popa
js
je
ret
jl
rcrb
inc
add
jmp
add
push
adc
rclb
aaa
or
cmp
lock
push
sub
fsts
push
jb
add
ljmp
or
push
hlt
adc
js
shrb
and
loopne
dec
dec
hlt
adcb
adc
lock
popf
mov
xor
mov
pop
lods
icebp
add
adc
pop
mov
sti
test
mov
jecxz
push
lcall
leave
dec
ja
sub
inc
and
push
push
adc
and
jae
add
pusha
fs
mov
jg
imul
ljmp
test
add
mov
and
pop
sub
add
pop
fdivl
pop
add
or
ds
push
sar
int3
or
sti
cmp
mov
enter
or
mov
jge
adc
cmp
push
insb
hlt
into
rcrb
or
inc
daa
mov
mov
lea
inc
xor
aas
sub
push
add
xor
sti
mov
xor
insb
and
mov
mov
mov
cmpb
jne
inc
or
add
or
stc
adc
jbe
aam
dec
movsb
mov
testb
je
movzwl
jmp
sub
jbe
outsb
lea
jmp
push
pop
xchg
xchg
and
jne
xor
or
inc
in
mov
mov
and
or
inc
pop
pop
ret
mov
pushl
hlt
movb
test
lods
add
jae
add
sub
mov
add
aam
jae
inc
gs
and
outsb
inc
sub
andb
push
enter
arpl
in
incl
inc
popa
insl
gs
add
je,pn
jo
clc
arpl
cld
imul
insb
insb
jae
jae
jb
ret
cmpsb
mov
sub
data16
popa
jb
pop
dec
imul
push
imul
outsl
ja
pop
push
push
push
outsl
dec
sbb
fldt
add
and
arpl
jbe
popa
cs
ljmp
jae
xor
push
or
jns
inc
imul
and
jae
outsl
outsb
and
or
pop
dec
dec
inc
pop
pop
dec
dec
lret
incl
dec
pop
dec
inc
inc
dec
dec
dec
inc
fs
inc
push
push
inc
push
inc
jg
pusha
mov
and
pop
inc
jne
bound
dec
sbb
mov
and
jo
outsb
gs
inc
dec
dec
jae
cmp
out
and
gs
cmpsl
outsl
sti
mov
and
imul
mov
jo
pop
arpl
insl
popa
dec
aas
aaa
and
push
add
dec
inc
xchg
pushl
push
sbb
jne
inc
js
jae
mov
cmovae
dec
gs
dec
jl
push
loope
sahf
sbb
jbe
jo
xor
nop
cmp
ss
cmp
xor
xor
jns
add
fs
pop
in
pop
push
push
mull
imul
or
or
and
jae
ret
and
or
add
inc
push
add
stc
mov
add
sub
push
mov
add
add
mov
inc
clc
add
pop
mov
push
add
dec
push
push
jb
addr16
insl
and
outsb
outsb
outsl
idiv
je
bound
jb
outsb
and
inc
dec
push
and
fs
out
psubq
stc
outsb
shl
imul
mov
xrstors
mov
mov
adc
rclb
arpl
in
mov
stos
pop
xor
repz
mov
movsb
mov
inc
das
stos
mov
arpl
mov
jge
aaa
add
sahf
or
and
add
imul
adc
in
jnp
adc
add
pop
outsl
rolb
sub
add
inc
dec
imul
cmp
pop
mov
call
fs
or
sub
je
js
bound
out
outsl
cs
adc
jb,pn
popa
je
push
sub
xchg
or
and
sub
push
in
inc
dec
shlb
outsl
arpl
add
leave
fsubs
pusha
inc
cmpsb
xchg
sub
inc
add
inc
inc
add
dec
push
test
add
push
add
call
sbb
mov
pop
pop
ret
mov
data16
loop
adc
pop
clc
push
or
add
xor
sub
jl
pop
mov
mov
jo
inc
or
or
lret
mov
addl
cli
addr16
adc
or
mull
add
adc
sub
xorb
adc
daa
mov
adc
notb
aad
add
mov
and
adc
je
push
call
insl
xlat
jge
jp
fidivs
adc
adc
fldt
call
adc
mov
jnp
mov
push
push
call
jo
lret
je
sub
dec
cmp
std
lock
push
call
pop
or
pop
and
lea
mov
add
push
and
or
mov
mov
mov
mov
add
pop
or
or
fisubs
aaa
mov
cmp
or
mov
jle
push
or
push
cltd
out
test
sbb
push
fsubl
insl
outsb
push
or
jl
or
add
sub
sub
push
hlt
push
loopne
mov
inc
dec
adc
jge
mov
iret
mov
adc
or
testb
push
imul
in
push
fmul
mov
push
push
mov
js
add
push
push
mov
sub
push
push
push
or
xor
jecxz
lea
push
mov
cmp
push
dec
int
rcr
add
test
adc
mov
call
add
imul
fdiv
fstps
sbb
fcoms
mov
push
push
call
sti
push
stos
mov
fcomps
rolb
ret
dec
sbb
movsb
inc
mov
sbb
and
mov
sub
lods
adc
cmp
push
xor
mov
rorl
jg
sbb
pop
inc
lods
or
pop
dec
add
dec
call
sbb
add
enter
lods
pop
mov
aaa
ret
pop
adc
pop
pop
sub
test
adc
or
ret
xchg
iret
ret
call
cmp
fldt
inc
xlat
mov
or
push
daa
mov
mov
push
jne
push
out
clc
push
aas
mov
sbb
inc
mov
mov
mov
cmp
and
pop
rorb
xchg
push
addb
push
dec
push
call
adc
push
jp
pop
mov
and
fstpl
shl
pop
sbb
xlat
jge
mov
fimull
and
sbb
or
fmulp
sub
call
inc
push
ret
cmpsl
sbb
pop
cmpsl
pusha
dec
aaa
leave
and
xor
dec
dec
lcall
xor
inc
lcall
pusha
push
in
jae
and
pop
sbb
sbb
and
in
add
std
push
inc
aaa
add
rclb
xorb
xor
rorb
xchg
or
mov
jo
adc
repz
fdivrs
pop
adc
sub
push
inc
in
mov
lock
lea
pop
sti
fisttpl
push
or
and
mov
mov
insl
push
nop
and
jne
outsl
xchg
mov
add
push
jle
sub
popf
popf
dec
add
add
or
arpl
lea
sbb
fstps
push
mov
jge
add
push
inc
mov
cwtl
hlt
and
fcomp
xchg
fldenv
pushf
add
ret
push
cmp
scas
cli
fs
jo
adc
aaa
xchg
xor
and
aam
or
in
mov
lods
and
addr16
aas
mov
inc
fisttpl
add
lock
and
fdivl
stc
enter
sahf
iret
int3
stc
sar
lea
and
gs
test
cmp
lea
pusha
call
jmp
push
and
cmp
mov
inc
pop
push
adc
mov
stos
add
jne
sbb
inc
mull
xor
push
int3
dec
pop
into
dec
insb
mov
notl
sub
and
in
and
mov
cmp
dec
inc
pop
lds
cli
push
add
je
pop
sub
xor
pop
mov
lret
mov
mov
imul
mov
mov
push
mov
dec
xchg
movsl
movsw
movsb
mov
pop
insb
mov
sub
je
in
push
push
jge
mov
pop
ret
mov
sti
ja
mov
aas
mov
mov
jae
iret
das
sti
mov
in
add
mov
inc
pop
inc
jmp
mov
lea
cmp
sti
sahf
int
jbe
push
inc
pop
das
or
jo
dec
jo
test
sub
jo
mov
cmp
jne
call
mov
les
mov
into
or
mov
pop
inc
fcoml
and
lock
xor
add
lods
sti
insl
push
xor
and
add
lea
mov
push
pop
scas
pop
test
sbb
sub
into
adc
lods
xchg
ds
jbe
jne
mov
scas
xor
aaa
add
jns
repnz
cmp
mov
mov
int3
enter
clc
lea
je
pusha
insl
mov
push
or
sbb
mov
jb
jnp
pop
push
sub
xchg
cmp
int3
dec
push
test
das
fstps
lret
mov
jmp
repz
ret
inc
div
ret
enter
adc
icebp
je
es
push
mov
push
push
jne
push
das
loop
xchg
pop
cmp
pop
jne
cmp
cs
add
out
add
cmp
xor
ret
into
pop
add
adc
bound
lahf
sbb
fs
push
sub
mov
add
or
mov
idivl
rolb
nop
adc
add
movsb
push
dec
jb
pop
push
push
es
sti
mov
mov
adc
push
divl
mov
sbb
and
adc
pop
rcll
add
push
daa
inc
or
jne
cmpl
cld
outsb
lret
cmpsb
jmp
cmp
jne
cmp
je
add
fdivp
mov
jne
movl
or
mov
and
pop
sbb
adc
and
or
push
pop
pop
jmp
or
pop
shll
sbb
pextrw
mov
push
push
es
xor
sub
and
jbe
outsb
push
mov
mov
add
int
jg
mov
dec
add
outsl
xor
dec
and
jecxz
adc
push
dec
jae
mov
push
icebp
mov
add
daa
pop
sub
inc
int
or
in
adc
push
aaa
and
adcb
pop
jae
jmp
add
pop
add
jge
or
lock
aam
clc
mov
arpl
push
mov
mov
jle
mov
mov
adc
mov
call
dec
fs
imul
inc
xor
shlb
pop
add
lds
sbb
js
lret
pushf
je
push
dec
mov
sbb
cmp
cmp
pusha
lods
aam
sub
mov
jbe
push
orl
jecxz
leave
jle
add
adc
add
ret
sbb
sbb
sarl
mov
push
cmp
fdivrl
sub
xchg
jmp
jne
rorb
or
loopne
jne
dec
pop
mov
mov
aas
dec
shlb
sub
test
ss
add
xor
jo
inc
dec
jne
jmp
shlb
mov
icebp
mov
jl
sub
mov
jmp
movl
push
jge
sbb
pop
pop
ret
cmp
outsb
ret
xchg
test
push
push
mov
mov
add
lock
or
out
or
push
inc
out
jecxz
ret
sbb
popf
inc
mov
xor
adc
push
mov
call
xchg
rol
jne
mov
icebp
incb
ret
push
imul
insb
xchg
or
jo
adc
pop
cmp
out
mov
adc
add
sbb
aas
and
push
or
push
push
sbb
jl
mov
and
fdivs
mov
je
dec
or
adc
push
push
fimull
pop
sbb
lret
add
js
sbb
or
insl
xor
or
and
bound
ja
xor
mov
lea
test
push
and
mov
call
push
and
push
imul
xlat
in
add
stos
push
shl
outsl
outsl
mov
lea
dec
jl
jg
pop
scas
sub
mov
test
imul
insb
insb
imul
jbe
pop
jae
jo
sub
dec
or
sub
pop
cltd
leave
cmpsl
ret
shlb
or
mov
xchg
fmul
sbb
sbb
outsl
sub
enter
cmp
push
jg
dec
es
mov
cwtl
adc
xor
fs
lods
xchg
pop
dec
pop
shrb
lds
dec
pushf
insb
pop
dec
mov
loop
and
jne
outsb
rcl
sub
shlb
daa
dec
or
fadd
mov
ja
test
scas
popa
data16
ja
push
shr
cmp
das
mov
add
andl
sbb
idivb
sti
sbb
sbb
adc
mov
das
hlt
mov
sbb
lea
pop
loopne
js
in
push
push
in
js
and
icebp
vmread
or
paddw
push
sbb
movsb
in
xor
dec
mov
shlb
xchg
mov
por
test
mov
xchg
add
call
pop
jmp
mov
inc
dec
fwait
jno
rol
andl
mov
lret
movb
movsb
test
or
xor
lcall
adc
enter
cltd
lods
in
pop
mov
push
push
rolw
add
jmp
cmpsb
jmp
adc
aaa
pop
cmpsl
push
hlt
aam
or
clc
add
nop
push
adc
add
loop
add
inc
or
dec
adc
dec
lock
pop
nop
ja
aaa
testl
dec
or
movsb
sbb
inc
fdivr
rorb
inc
or
add
movsb
fisttpl
sub
pop
mov
sub
cmp
push
mov
push
push
sub
mov
mov
inc
push
jmp
mov
nop
mov
jl
inc
push
call
pop
fcomp
gs
jno
sub
dec
mov
mov
enter
and
inc
mov
add
ljmp
pop
dec
push
call
into
or
adc
mov
adc
dec
cmp
ret
test
jle
aaa
xor
sub
adc
push
lea
push
adc
repz
add
pop
push
sub
and
mov
adc
jne
in
cmp
in
and
pop
sub
in
jg
cmp
push
push
mov
and
adc
loop
jbe
push
rorl
insb
add
cmpsl
nop
cld
jno
negl
adc
lds
out
sbb
lret
imul
scas
adc
pusha
mov
scas
inc
mov
xchg
dec
mov
jne
mov
jae
mov
ljmp
add
push
lock
loopne
cli
loope
push
xchg
sarl
pop
lea
loopne
add
mov
loopne
aam
fldl
pop
je
xchg
cmp
push
cwtl
iret
in
mov
cmp
les
push
cmp
dec
mov
ret
push
test
jg
test
lea
inc
push
in
in
mov
ret
push
fwait
sub
movsb
lcall
push
fcom
int3
and
es
push
xchg
or
push
mov
addb
ss
clc
nop
hlt
jp
cmpsl
jmp
bound
pop
xchg
jge
sbb
jae
sahf
pop
outsb
je
mov
pop
in
mov
in
jp
iret
call
or
out
insb
add
adc
jecxz
stc
push
maxps
jp
or
jbe
mov
filds
jmp
mov
dec
adc
xor
ret
cmp
lods
in
sub
call
push
popa
sarb
or
adc
fldcw
movb
or
mov
fistpll
mov
push
mov
sub
and
mov
adc
or
nop
mov
xchg
dec
xor
pop
sbb
and
fistpl
cmp
xor
scas
insb
inc
stos
and
push
test
or
push
mov
mov
mov
add
push
push
sbb
pop
or
iret
lds
mov
add
or
rcrb
ljmp
jle
push
hlt
enter
mov
pop
rclb
mov
outsb
sbb
fcmovu
push
push
aad
or
mov
dec
adc
lcall
push
add
inc
ret
daa
movsl
push
inc
inc
mov
iret
ret
adcb
mov
and
cwtl
das
jl
test
push
mov
xchg
fnstenv
inc
fadds
in
loopne
push
mov
pop
aam
rolb
jmp
fs
outsl
inc
mov
scas
jae
je
and
jle
push
add
shlb
ret
jle
fistpll
cmp
cmp
jae
cmc
popf
mov
dec
pusha
inc
idivl
dec
sbb
sub
cmpsb
push
sub
adc
push
hlt
sbb
mov
sbb
jl
mov
fsubs
dec
sub
xor
stos
adc
mov
rclb
sbb
movb
movb
add
jmp
or
sub
sub
mov
ja
or
mov
xor
dec
cli
mov
into
sbb
arpl
dec
popa
loop
stos
xor
jmp
add
mov
cld
sbb
das
insb
and
inc
or
mov
lea
je
add
fadds
loope
or
add
push
or
outsb
call
mov
cmp
call
dec
mov
mov
jb
jmp
sub
mov
sub
fcoml
in
dec
xor
xchg
xor
sar
xchg
mov
xor
pusha
mov
push
push
mov
mov
sbb
inc
add
mov
add
je
frstor
pop
inc
push
addr16
inc
insl
add
nop
xor
dec
lds
fiaddl
pop
push
stc
sub
cs
inc
lcall
sbb
or
sbb
fldcw
inc
push
pop
push
and
inc
fwait
cmpsl
jmp
and
pop
and
and
out
divl
sub
fs
add
icebp
mov
call
pop
fs
sbb
out
or
add
jbe
sub
mov
add
pop
xchg
mov
or
mov
sti
pop
jae
or
inc
inc
mov
shlb
sbb
xor
xchg
pusha
daa
xchg
dec
or
or
sbb
and
and
add
hlt
push
out
and
and
insb
or
dec
pop
pusha
and
enter
cmp
sti
enter
adc
push
and
repz
lock
cli
mov
es
popa
and
sbb
mov
or
jo
jg
movsl
cmp
fisttpll
add
and
insb
jg
add
xchg
jne
pop
mov
sub
add
mov
push
dec
int3
and
push
sbb
or
aaa
sbb
pop
mov
inc
ss
ss
adc
or
xor
movsb
mov
cmp
push
cmp
add
adc
decl
inc
jne
fnsave
or
enter
fwait
clc
idivb
mov
jmp
andl
outsb
jecxz
mov
gs
add
mov
jbe
call
pop
jmp
arpl
es
loopne
jmp
and
jno
fcoml
mov
out
mov
push
fs
ljmp
andl
add
adc
xchg
fisubrl
aad
loopne
or
jge
jae
sub
pop
pop
add
es
sbb
je
add
jne
mov
push
fwait
shlb
fidivl
call
push
xchg
jae
cvtdq2ps
test
shlb
adc
cmp
sti
imul
es
incb
and
cmpl
adc
cmp
xlat
push
add
pop
pushf
jns
jl
xchg
mov
jg
inc
or
or
sub
xor
xor
sbb
and
xor
xor
xor
cmp
xor
xor
dec
dec
xor
xor
pop
nop
mov
lea
jmp
inc
adcb
and
mov
add
xor
or
inc
nop
lcall
addb
inc
add
xor
shll
test
dec
rcr
call
cmpsb
imul
scas
jmp
push
adc
add
inc
cmp
inc
imul
add
or
dec
aam
add
lcall
pop
ja
imul
add
mov
rolb
lock
pop
aaa
dec
rcl
push
push
push
xor
add
shll
xor
add
or
xor
add
je
jae
mov
sbb
push
add
lcall
jae
imul
add
cmp
sub
add
ret
and
outsb
das
mov
pop
scas
daa
cld
call
cs
pop
sbb
pushf
fstpl
push
add
or
and
inc
in
mov
mov
pushf
inc
pop
sarb
inc
adc
pop
mov
enter
adc
rcrb
sub
or
shlb
call
add
jbe
or
mov
or
or
pop
in
dec
jne
je
inc
jns
gs
outsl
push
imul
xchg
add
and
add
je
popa
insb
inc
jb
add
inc
mov
inc
imul
ss
add
lcall
popa
fs
sbb
popa
daa
inc
rol
mov
in
div
pop
add
push
jns
pop
insl
inc
sbb
mov
push
sbb
jge
imul
dec
aaa
push
add
insl
pop
dec
or
ds
testl
movsb
jb
stos
add
jbe
scas
imul
arpl
push
mov
sub
inc
mov
push
das
out
fstpl
mov
dec
inc
fiadds
adc
mov
cs
add
xor
or
push
mov
dec
bound
add
push
push
in
in
inc
add
pop
add
add
mov
arpl
sahf
imul
insw
je
popa
aad
dec
js
mov
and
dec
outsl
mov
inc
push
mov
ret
aaa
mov
scas
sbb
nop
add
ret
cmp
test
lea
dec
imul
adc
inc
push
dec
inc
dec
push
pop
dec
xchg
jge
gs
push
push
cmove
daa
or
mov
aaa
push
test
imul
out
and
je
push
xlat
dec
gs
arpl
pop
push
pop
push
xchg
ret
adc
jae
and
call
insl
xor
popa
in
push
push
mov
push
outsl
arpl
adc
lods
loope
int
sbb
add
je
stos
mov
fiaddl
inc
outsl
insl
jo
push
into
adc
dec
aas
insl
popa
jo
and
mov
movsb
sbb
jne
inc
dec
je
mov
lock
add
outsb
push
fnsave
or
push
jb
leave
outsl
push
mov
popa
adc
ja
or
outsb
pop
push
dec
dec
add
pop
loope
pop
jbe
outsb
or
sbb
add
aas
xor
inc
push
inc
pop
dec
inc
pop
sub
mov
bound
mov
xchg
add
mov
pop
mov
dec
arpl
lret
mov
add
mov
mov
scas
xor
mov
lcall
addr16
cmp
xor
inc
js
iret
fdivl
dec
push
push
into
mov
flds
movsb
xchg
cmp
enter
stc
insl
add
dec
pop
data16
int
adc
pop
fwait
adc
jo
pusha
loope
inc
dec
movsl
shll
add
pop
jge
adc
push
cmp
xor
xor
sahf
pop
adc
mov
loop
push
push
insl
ss
cltd
dec
cmpsb
sub
ja
dec
daa
jmp
fnsave
push
sbb
outsw
mov
xor
or
xor
mul
inc
dec
sbb
push
adc
inc
dec
push
dec
xchg
and
shrl
sbb
sbb
sub
popf
cmpsl
addr16
ret
jns
ja
out
mov
data16
lods
cmp
adc
js
cmpsb
imul
decb
les
jecxz
cmp
add
fnstenv
xlat
shrb
pop
pushw
jae
adc
pop
jb
fmul
or
adc
inc
adc
ret
and
or
lods
hlt
sbb
or
ret
pop
mov
jns
leave
and
adc
pop
outsl
push
inc
dec
or
pop
andb
mov
pop
arpl
add
das
sub
aas
dec
incb
or
cmp
xor
xor
xor
fsubs
shrl
lea
sub
test
mov
ja
cmp
outsb
out
cmp
mov
xor
iret
mov
pusha
inc
mov
add
push
push
xchg
pop
popf
and
push
push
das
xor
xor
inc
arpl
jle
pop
insb
push
mov
sub
fcomp
lret
lea
sbb
lods
mov
das
nop
bound
xor
push
push
cmp
xor
xor
jle
dec
add
je
adc
subb
xor
inc
sub
outsb
outsl
sub
out
adc
dec
or
std
xorl
test
push
das
jno
push
pop
mov
or
and
jg
cmp
dec
inc
inc
inc
add
mov
xor
cmp
fs
push
es
and
and
data16
pop
outsl
mov
pop
dec
dec
pop
imul
sub
add
jae
popa
add
jge
iret
repz
insb
jbe
es
sahf
mov
lea
add
jae
sti
sbb
add
pop
mov
jb
add
push
popa
mov
pop
sbb
lods
outsb
xor
stos
cs
cld
ret
je
pop
test
mov
fnsaves
push
adc
inc
and
push
mov
mov
int3
adc
push
lea
and
mov
push
add
push
jg
inc
adc
and
daa
mov
jo
incb
push
dec
cmp
ja
daa
mov
mov
loopne
lds
mov
pusha
mov
ret
xorb
adc
ljmp
xor
xor
xor
insl
xor
xor
mov
nop
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
pop
xor
add
xor
xor
xor
xor
inc
xor
xorl
pushl
scas
xor
xor
jge
nop
xor
xor
xor
xor
xor
fwait
xor
pushl
les
iret
sub
mov
in
pushl
cmp
pop
cmp
adc
and
inc
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
xchg
cmp
mov
push
ja,pt
mov
lahf
ds
sarl
ds
fstpt
or
sbb
sub
dec
aas
push
aas
mov
ret
cmp
pusha
xor
xchg
xor
xor
call
xor
xor
xor
xor
xor
xor
repz
loop
cli
xor
pushl
push
xor
xor
jo
test
nop
xor
xor
xor
xor
pushl
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
pushl
aam
call
ss
ss
ss
ss
ss
ss
ss
call
aaa
sub
aas
aaa
push
aaa
insl
aaa
xorl
mov
aaa
icebp
aaa
divl
add
pop
cmp
lcall
cmp
cmp
cmp
jno
jl
cmpl
fwait
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
call
test
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
dec
xor
cmp
idivl
out
pop
fdivr
mov
sub
xor
xor
push
xor
jns
sbb
sahf
xor
daa
add
sub
xor
dec
xor
jb
decl
xor
xor
xor
sub
xor
xor
cmp
inc
xor
decl
push
xor
pusha
xor
je
jl
xorb
xor
xor
xor
xor
call
xor
xor
xor
xor
xor
xor
cwtl
xor
into
xor
xor
xor
xor
xor
in
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
cmp
jmp
or
xor
mov
out
mov
mov
xor
xor
push
pusha
xchg
enter
add
sbb
add
fwait
add
imul
js
gs
jne
arpl
xchg
push
imul
add
insb
adc
outsb
sbb
sub
push
or
ds
dec
add
stos
and
push
xchg
or
push
pushf
and
push
outsl
outsl
insb
jl
cs
mov
push
push
outsb
jg
outsl
sbb
push
add
add
inc
xor
mov
add
push
add
add
stos
dec
ja
daa
mov
js
sbb
push
sub
push
and
mov
push
mov
cwtl
add
push
js
ret
inc
je
pop
aam
ja
jne
jae
inc
outsl
jo
enter
pop
push
inc
repz
cmpb
pop
rolb
pusha
push
xor
ss
cwtl
ret
pop
or
or
pop
mov
add
fadds
pop
daa
xchg
mov
push
mov
outsb
or
xchg
pop
addr16
jb
cld
mov
sbb
jae
mov
xor
and
add
into
pop
xchg
xor
insl
jae
sub
adc
nopl
aaa
faddl
aaa
and
push
xchg
insb
rcl
loopne
daa
xor
mov
sbb
call
xchg
cmp
dec
and
or
xchg
in
mov
lret
inc
add
sahf
in
mov
cld
xor
jmp
sbbl
adc
sarb
xchg
xchg
adc
in
add
xor
xor
xorb
hlt
clc
mov
insl
or
dec
jae
add
mov
mov
dec
sub
add
mov
ret
add
adc
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
