imul
call
in
sub
push
push
lea
push
xor
push
mov
add
sbb
ss
int
jmp
jo
insb
in
jne
dec
mov
out
jae
out
cs
es
mov
int
push
call
mov
cmp
je
shlb
inc
push
push
insb
lahf
out
xchg
ret
inc
push
lds
data16
je
dec
enter
lret
in
jnp
cs
inc
push
int
into
arpl
outsl
fldt
jbe
shrl
shlb
shll
call
jg
ficomps
ret
pop
mov
js
movsb
movsb
iret
repz
movsl
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
repz
repz
mov
mov
fnstcw
iret
mov
mov
xchg
mov
xor
mov
mov
idivb
loope
jmp
lea
push
push
cld
push
call
pushl
dec
pop
xor
mov
xchg
jge
sbb
cld
dec
dec
cmp
xor
and
popa
adc
test
pop
je
inc
add
cmp
fdivrp
fistpll
jb
jmp
mov
imul
add
lea
movsl
add
ja
dec
cs
or
pop
pop
pop
leave
ret
pop
testb
sub
in
movl
add
dec
push
fldcw
xchg
jne
jae
gs
jb
sahf
data16
xor
xor
repz
repz
imul
outsb
push
in
in
out
and
out
call
ja
std
xchg
je
inc
inc
gs
pop
pop
cmp
or
or
add
inc
push
push
dec
mov
fistl
push
lret
sarb
data16
push
rorb
ret
sbb
xchg
adc
or
inc
mov
push
mov
loopne
aaa
mov
incl
mov
jge
sub
cmp
cmpsl
std
lock
cmpb
adc
mov
out
imul
push
push
adc
clc
sbb
rcrb
mov
je
mov
aas
push
ds
das
mov
and
int3
in
cld
push
sub
jp
pop
add
loopne
add
imul
addr16
data16
sahf
out
sahf
xlat
fcomp
fcmovu
fcompl
nop
out
fstp
mov
mov
test
or
sahf
mulb
imul
sarl
jne
jbe
sarb
je
int
lcall
aaa
jge
mov
jle
cmpsl
adc
inc
int
shrl
addb
insb
ss
inc
xchg
push
mov
inc
push
sbb
mov
adc
test
cld
mov
nop
push
adc
popa
xchg
jbe
gs
repz
xchg
xchg
xchg
cwtl
in
sarl
out
fwait
inc
outsb
pushf
popf
insb
into
sahf
lret
lcall
repz
lcall
mov
mov
leavew
jne
lret
int3
je
int
jge
sti
into
jb
iret
shlb
shll
shl
shlb
mov
jge
mov
imul
jae
scas
ljmp
push
in
xor
cmp
lea
in
push
inc
push
jecxz
stos
fnsave
clc
sbb
push
push
sti
jge
scas
mov
data16
or
mov
lret
push
jne
adc
test
addr16
cmpsl
repnz
pop
pop
inc
das
pusha
push
imul
imul
mov
stc
or
lea
loopne
movsl
mov
adc
ja
insl
jae
sbb
mov
addl
mov
rep
inc
cmp
mov
rorl
repnz
in
jnp
push
jns
std
mov
shll
jmp
xor
filds
mov
lret
push
js
loopne
ds
pop
je
dec
stc
jg
or
and
cmp
jg
sub
jl,pn
or
mov
jmp
sbb
test
pushl
ss
or
fs
push
mov
leave
sar
movsb
push
mov
xor
mov
je
jo
in
stos
stos
ss
add
xor
or
in
popa
cmp
in
cmp
dec
mov
or
mov
lock
adc
or
aam
fldl
push
add
test
xor
jl
pop
jg
sub
mov
lahf
dec
sub
cmp
jae
dec
cs
cli
pop
sbb
sti
insl
cld
sahf
xor
ja
jne
pop
push
lea
push
das
push
add
mov
pop
push
push
movl
pop
rorl
mov
push
sahf
xchg
dec
gs
std
insb
pop
je
xchg
and
movsl
mov
lock
dec
ret
or
adc
cmp
mov
mov
fidivrs
mov
xor
pop
je
cmp
je
inc
shr
jne
add
ds
dec
jne
outsl
mov
add
cld
pop
xchg
mov
jg
loopne
mov
push
mov
dec
cmp
jae
insl
sar
xor
mov
mov
mov
dec
je
xor
adc
adc
fdivs
mov
or
xor
pop
mov
add
xchg
pop
mov
sti
sub
inc
add
push
shl
add
fmuls
lcall
or
inc
gs
fildl
lock
fisubs
fbld
jb
movsb
imul
scas
push
iret
mov
push
aam
mov
jmp
data16
push
dec
data16
outsb
mov
popl
jne
push
outsb
or
je
sbb
and
iret
dec
dec
jne
fsubrl
push
mov
pop
cltd
ss
sbb
insl
jne
xchg
dec
jle
push
mov
in
enter
dec
sti
cmp
push
lcall
or
mov
push
push
js
test
cmp
pop
inc
stc
pop
in
push
mov
inc
jl
pusha
mov
add
push
xor
sbb
loop
clc
pop
mov
stc
jnp
jge
or
or
std
jo
cmp
add
push
add
and
addr16
dec
push
sarb
xor
cmp
je
and
adc
inc
pushf
add
or
push
into
mov
fmull
pop
ret
mov
orl
mov
push
sbbb
shlb
lock
mov
sub
xor
sbb
andb
aas
jae
rorl
xor
dec
out
or
jnp
je
lcall
xchg
xor
rcrl
cmp
imul
xor
rorb
jns
rcl
rcl
xor
lcall
fidivrl
fstpt
out
loopne
repz
mov
loope
loop
in
out
ds
out
call
out
mov
es
fs
jns
jae
cmp
cmc
jnp
out
div
fs
stc
cli
mov
cmp
sti
xor
cld
std
jae
dec
test
scas
mov
push
add
outsl
inc
xchg
inc
lds
imul
pop
jle
adc
mov
mov
add
sub
jg
std
js
push
mov
mov
push
test
ret
jne
repnz
imul
rorl
jae
dec
les
lods
lock
sub
gs
iret
push
push
fs
mov
rorl
popa
arpl
shll
outsl
outsb
cmp
xlat
cmpsl
fsts
sbbb
pushf
pop
popf
es
sahf
jne
mov
scas
mov
scas
outsl
lock
or
sub
in
adc
js
pop
xchg
clc
pop
ss
nop
ret
pop
ret
lea
sbb
lds
dec
cmpsl
sub
clc
xorb
enter
push
out
std
lcall
repnz
sti
cli
push
or
test
add
sub
das
push
inc
mov
adc
lea
ficoms
mov
insb
or
je
inc
idivb
test
lods
outsb
ss
negl
es
ss
mov
orb
jae
mov
dec
and
fs
in
pop
in
mov
xor
js
jb
xchg
add
xor
rorl
jns
dec
shll
jbe
gs
jns
out
insl
imul
jnp
je
aad
xlat
fcoms
cmp
repz
fcmovnu
pop
inc
inc
aaa
add
orb
imul
inc
cmp
fidivrs
inc
mov
cmp
iret
repz
ret
lret
repz
enter
rcr
loopne
push
push
call
sbbl
push
mov
cld
jae
loopne
or
add
or
fs
jl
or
jp
scas
push
sahf
sub
push
inc
clc
insl
ss
orl
jg
mov
mov
and
adc
ss
add
pop
dec
shll
arpl
cmp
dec
fs
jne
mov
fildl
mov
in
sbb
jne
or
mov
neg
sbb
inc
jmp
mov
xor
frstor
dec
ror
aas
push
xchg
repz
mov
mov
mov
inc
ja
push
lret
test
lods
mov
daa
mov
scas
int
popf
idivb
cmp
push
cmpsl
xchg
into
fs
mov
lods
jns
hlt
in
add
enter
lret
idivb
xchg
mov
call
mov
xlat
test
or
lock
or
shr
or
mov
ljmp
push
push
mov
dec
sub
mov
mov
and
jns
in
pop
push
cmpsb
mov
push
pop
divb
notl
ja
shrb
jmp
imul
lcall
movsb
mov
pop
xor
xchg
push
subl
jl
dec
shr
out
dec
ss
lock
xor
adc
repnz
push
jp
repz
mov
mov
dec
mov
mov
and
adc
add
rcll
insb
push
repnz
cmc
inc
pop
enter
adc
mov
sahf
dec
sub
ds
aad
and
push
xchg
dec
mov
dec
sub
ror
lret
int3
daa
test
inc
dec
dec
push
repz
or
or
fcoml
fdivl
fldl
mov
ficoms
filds
and
stos
loope
loop
dec
in
add
fsubrs
jbe
xor
outsb
movsl
push
addr16
add
pop
pop
push
js
or
test
jp
jns
push
pop
hlt
aaa
es
jmp
pop
in
and
mov
jns
int
movsb
jbe
sbb
push
mov
cmp
imul
stos
stos
test
xchg
fcoms
push
xor
lret
sarl
in
push
aas
mov
dec
idivl
fdivs
orl
std
int
inc
inc
in
mov
nop
add
pop
insb
mov
xor
int3
dec
dec
push
in
adc
inc
ss
adc
xor
shlb
xchg
loop
pop
jb
and
rolb
enter
or
cmp
nop
aam
int
xor
add
pusha
mov
iret
cmpl
push
pop
loopne,pn
pop
push
xor
out
pop
mov
sbb
clc
dec
sbb
cmp
jmp
jo
dec
pop
pop
mov
mov
add
or
rorb
pop
xor
cmp
jbe
xor
test
jbe
lea
cmpb
mov
xor
mov
mov
xchg
outsb
sub
jne
decl
add
inc
cmp
jb
xor
jmp
pop
and
pusha
mov
add
inc
sub
ror
sbb
lea
clc
jle
mov
jmp
in
rclb
aam
push
ja
pop
in
or
cmp
jge
adc
add
xor
sar
hlt
mov
dec
mov
mov
push
add
push
popf
xor
sub
adc
stos
push
xor
or
daa
and
loop
shr
pop
cmp
pop
cld
ror
push
jp
pop
test
pop
mov
or
ljmp
out
cmp
clc
push
outsb
jo
lret
push
popa
pusha
or
aaa
fcomp
and
decb
and
test
lods
push
rorb
lret
cmp
sarl
cmp
cmp
cmpsl
jns
cmp
cmp
cmpsl
ja,pt
cmp
cmpsl
jns
inc
inc
push
inc
jb
jns
cmpsl
jns
inc
jbe
imul
jge
or
dec
cwtl
das
and
dec
mov
popf
dec
xor
push
or
gs
insb
shll
jb
dec
xor
dec
gs
dec
push
mov
shlb
popa
je
roll
adc
dec
aam
loop
lods
lcall
popa
imul
mov
mov
data16
movsb
xor
xor
mov
stos
cmp
and
and
push
and
testb
rorl
and
int
xchg
dec
repz
inc
daa
sub
leave
cmpsl
jns
popa
sub
test
sub
cmp
int
xor
sub
shll
xor
xor
jp
inc
inc
push
xor
push
and
mov
add
adc
testl
out
fimuls
or
or
lcall
push
cmp
adc
popa
movsb
jns
xor
xor
movlhps
pop
push
sbb
cwtl
lea
ret
sbb
push
add
push
arpl
test
lds
xchg
xchg
mov
inc
addr16
mov
mov
jb
mov
mov
les
xchg
jns
out
xchg
xchg
xchg
xchg
cwtl
clc
imul
pushf
popf
call
cmp
addb
jbe
enter
in
nop
cmc
add
dec
repz
adc
inc
popa
jae
xor
arpl
fs
lea
and
fs
imul
jge
mov
xorl
insb
insl
bound
xor
mov
jb
mov
scas
loope
subb
imul
lcall
gs
mov
lcall
fldl
jo
subps
xchg
sub
jb
jne
in
mov
stc
jb
or
jns
js
popf
frstor
push
dec
rsqrtps
xor
imul
add
push
leave
push
pusha
flds
arpl
push
or
push
lods
pop
aaa
pop
addr16
outsl
and
shrl
sub
loopne
xorb
pop
mov
gs
cmp
je
adcb
mov
cmp
xchg
lea
and
je
xor
pushf
insb
push
mov
pusha
pop
or
pop
rcrb
push
hlt
mov
add
and
popf
mov
out
jnp
push
dec
lcall
pop
movsb
jge
pop
lcall
nop
ss
ret
sbb
cmc
jne
push
das
cmp
scas
shl
or
lea
shlb
mov
xor
pop
ljmp
call
lods
push
dec
inc
les
adc
popa
xor
dec
cmpl
xor
mov
push
ljmp
xorl
adc
orl
mov
jl
and
jnp
mov
stc
je
and
adc
xchg
scas
lock
sub
inc
mov
mov
hlt
loop
xchg
lods
xor
xorl
lret
fidivs
enter
xchg
andb
sti
add
fstp
nopl
aam
cs
mov
imul
test
enter
jg
enter
add
push
mov
mov
pop
jmp
cmpl
mov
mov
jne
push
mov
add
movsb
push
mov
test
jae
inc
mov
cmpsl
lds
int3
shl
imul
inc
push
mov
mov
cmp
je
cmp
jb
dec
dec
cmpw
jne
push
es
sbb
pop
or
les
dec
sub
je
push
movsb
sbb
push
sahf
sbb
push
jge
adc
ret
add
mov
test
dec
stc
or
popf
sub
adc
sbb
clc
cld
je
push
add
ret
xchg
cmp
inc
pop
sub
fldenv
pusha
mov
test
push
cmp
pop
scas
lock
dec
shll
xor
add
and
stc
cli
xor
shll
inc
gs
outsl
shll
jb
lcall
jmp
lcall
pop
aam
sbb
cld
mov
dec
ret
and
sarb
mov
sbb
je
push
xchg
xorb
inc
inc
pop
ss
das
sub
sbb
outsb
stos
sbb
xchg
shlb
cmpsl
cwtl
jmp
mov
mov
test
push
cmp
insb
mov
shll
hlt
push
call
fcomp
mov
pop
push
imul
xor
negl
test
push
cmp
or
jg
lahf
subb
stc
rcrl
dec
jb
mov
data16
xchg
fs
fldenv
icebp
cld
dec
pop
sbb
adc
mov
enter
stos
add
or
adc
push
inc
je
mov
int
xor
adc
clc
test
loope
mov
and
jnp
in
lea
pop
in
clc
and
fidivs
inc
das
add
and
adc
mov
add
fmuls
es
rorl
cmp
mov
je
dec
shll
push
outsb
push
and
xor
jno
lock
pop
repz
fs
js
mov
outsl
icebp
loopne
jne
arpl
jl
jne
into
je
sbb
dec
xchg
popa
xor
pushf
cmpsb
test
js
push
mov
mov
mov
push
stc
outsb
jnp
jb
adc
jp
inc
adc
add
jle
pop
mov
loopne
sub
clc
inc
push
paddw
inc
push
mov
out
std
and
pop
mov
fldcw
je
mov
xor
adc
fwait
adc
repz
imul
fistl
push
repz
iret
dec
dec
dec
xchg
dec
inc
cmpsb
test
cld
std
roll
mov
dec
outsb
je
push
lods
scas
push
scas
ds
sarl
push
mov
imul
insb
mov
mov
pushf
mov
roll
jo
xor
rorl
outsb
push
in
inc
xor
dec
gs
repz
jmp
pop
xchg
test
sarl
cwtl
push
jl
lcall
iret
repz
sahf
lahf
mov
iret
mov
js
cmpsb
loope
mov
mov
push
push
test
mov
hlt
mov
xor
shll
add
push
sarb
outsb
and
sbb
or
jb
outsb
je
dec
shll
outsl
outsb
outsb
arpl
and
test
lret
int3
addr16
add
jl
je
sbb
inc
xchg
cwtl
in
cs
lcall
mov
add
lds
sub
cld
pop
les
or
inc
push
xor
shrl
fs
aam
and
rcr
in
icebp
in
js
adc
insb
lods
push
call
pop
jbe
cwtl
xchg
and
xchg
push
push
xchg
sbb
and
mov
insl
jne
addb
push
mov
inc
mov
insl
movsb
inc
lods
orb
inc
inc
push
mov
mov
dec
in
scas
add
and
and
les
icebp
leave
or
int
bound
fcoml
or
mov
push
and
arpl
or
xchg
negb
xchg
dec
mov
sbb
cmp
je
xchg
fistpll
fstl
arpl
adc
cmp
jl
lock
jl
and
gs
shrb
dec
lock
bound
adc
add
mov
mov
testb
add
sbb
in
pushf
xchg
test
push
add
ja
push
push
xchg
mov
inc
dec
cmc
enter
mov
mov
push
jae
aad
add
and
xchg
add
push
lods
mov
and
add
jmp
stos
jl
sbb
cmp
data16
push
lret
pop
lods
ja
xor
xchg
je
in
xor
or
mov
xor
or
andb
leave
sub
or
jge
pop
push
cmp
xor
dec
ret
fwait
ja
adc
push
pushf
push
dec
mov
jbe
jo
inc
push
outsb
dec
inc
jb
xchg
imul
int
outsl
jp
insb
insb
xor
shll
push
dec
push
imul
outsl
ja
adc
xor
insb
popa
jae
mov
inc
xor
xor
gs
shll
inc
jb
insl
imul
dec
popa
idivb
ret
fcmovbe
xor
jns
fcomp
fcmovu
cmc
jns
jnp
xor
lea
mov
sbb
push
push
inc
shll
insl
gs
dec
shll
xor
and
shll
pop
sahf
into
sbb
mov
mov
push
ja
add
sbb
inc
gs
xor
inc
outsl
jb
push
mov
dec
jb
jl
dec
shll
into
iret
rorl
and
fists
inc
mov
addb
arpl
orl
xlat
test
inc
movsb
dec
xor
das
jns
sub
lcall
mov
rorb
ret
andb
lock
add
dec
sub
das
push
cmpsl
addb
rcr
adc
shl
pop
or
xor
fimuls
jg
clc
adc
xchg
and
add
sub
andl
ja
loop
mov
loopne
fmuls
lahf
mov
xor
movsl
jge
fisttps
jbe
movsbl
lcall
cwtl
dec
inc
dec
cmp
pop
jb
lea
push
daa
int
inc
repnz
in
push
cmp
in
mov
and
xchg
push
lahf
push
jbe
mull
jl
and
fucomip
adc
push
rclb
outsl
adc
je
pop
mov
pusha
or
and
add
gs
xor
push
and
push
pop
rolb
or
jo
xchg
or
mov
push
or
sub
nop
pop
pop
scas
xor
mov
aaa
pop
and
inc
popa
int3
arpl
shlb
jae
xor
xor
imul
shll
es
test
and
mov
cwtl
jnp
sub
ret
jecxz
ja
xor
push
push
jo
dec
xchg
enter
inc
cwtl
mov
xor
or
adc
movsl
mov
movsl
mov
inc
aas
cwtl
cmpsb
pop
sub
jnp
xchg
clc
mov
cwtd
shll
sti
adc
mov
outsl
arpl
call
shll
outsb
popa
dec
shll
outsl
arpl
lock
mov
sbb
inc
xchg
inc
ret
imul
push
push
jb
int3
enter
pop
arpl
cmpsb
or
inc
cmp
add
push
ljmp
dec
aaa
xor
sbb
or
sub
test
cmpsl
leave
jp
mov
cli
popa
jl
or
jmp
out
jle
xor
jg
inc
cmp
jb
shlb
addr16
ret
mov
rcr
sub
dec
and
stc
pop
jo
adc
lea
and
sarl
sarb
adc
adc
xor
push
mov
mov
test
jne
inc
nop
push
inc
inc
adc
mov
inc
cmc
mov
or
loopne
lea
pop
pushf
and
cmp
subl
popa
sub
add
push
or
mov
add
sbb
jp
add
and
sub
pop
jae
xchg
sbb
push
test
call
push
add
cmp
imul
das
insl
popa
jne
adc
aaa
jg
je
imul
addr16
push
jl
add
cmp
jle
mov
inc
outsl
fstpt
stc
push
jne
popa
outsb
addr16
adc
adc
or
cltd
mov
pop
jne
stc
int3
dec
pop
fldenv
pop
jb
pusha
push
push
js
mov
insb
or
mov
rcrb
pop
andb
int3
ret
sbb
mov
cmpsl
inc
cmp
icebp
aaa
sbb
or
negb
sub
shrb
inc
lds
stos
inc
addb
ds
enter
mov
xchg
push
mov
push
mov
sbb
cmp
sub
or
or
cmp
inc
into
sub
adc
push
push
stc
je
inc
pop
adc
jne
pop
pop
mov
ljmp
stc
or
fdivrl
rclb
sub
add
sahf
test
nop
fmulp
fs
push
jl
pop
ss
inc
mov
lret
int
jnp
lret
cmp
jbe
mov
adc
outsl
loope
add
jae
sub
add
mov
loopne
or
and
rol
push
aas
jo
int
adc
add
fnstcw
mov
sub
aam
js
in
add
cmpsb
xchg
mov
mov
push
add
lahf
sbb
call
adc
or
jecxz
dec
and
into
adc
incl
das
mov
dec
adc
add
push
xor
outsl
dec
sbb
arpl
xor
cs
in
jb
pop
test
movsl
popa
pop
jne
mov
js
je
aas
adc
test
rcr
sbb
mov
jne
stos
dec
or
jge
jle
sub
sbb
push
mov
clc
lea
xor
fs
call
fmull
mov
cmp
mov
insl
out
inc
lock
cld
xchg
fcompl
jp
xlat
mov
enter
add
pop
neg
push
sub
push
pop
sbbb
movsb
add
cmpb
arpl
scas
mov
jp
sar
test
fistpll
stos
ja
push
xorb
div
xor
shlb
lock
bound
dec
pop
inc
hlt
inc
pop
inc
cmp
jl
jecxz
push
lods
sbb
orl
test
pusha
push
movb
and
aaa
in
mov
xchg
xor
enter
jg
lret
mov
je
std
loopne
pop
stos
hlt
div
ss
mov
or
lods
cmp
sub
ret
sbb
js
mov
or
push
repz
shl
int
popf
pop
incl
add
cmp
jl
or
pop
mov
jo
pop
dec
jg
cli
xor
dec
mov
int
in
loopne
and
xor
mov
imul
cmpsb
imul
inc
test
sbb
push
push
sub
add
sbb
push
push
cmpsb
adc
ja
in
fadd
lea
push
push
jecxz
dec
xor
fdivr
push
push
mov
push
movb
sub
sub
mov
cmp
movb
mov
add
push
push
sahf
lea
pop
or
cmp
cmp
in
mov
movb
popf
ret
jbe
daa
fidivl
jge
adc
sbb
mov
aam
cmp
mov
mov
adc
push
clc
xchg
mov
testb
call
in
adc
popa
and
push
rcrl
push
adc
stos
jmp
and
test
push
clc
add
mov
push
cmp
push
rorl
hlt
sbb
or
adc
in
mov
fsqrt
jmp
cmp
je
push
loope
lock
pop
pop
cmpsl
sbb
loopne
clc
ficoms
push
xor
mov
adcl
mov
mov
or
adc
subb
add
dec
in
es
lcall
push
sahf
arpl
cmpsb
imul
xlat
movb
or
push
call
inc
push
clc
test
dec
xchg
dec
dec
lcall
and
xor
cmpsb
imul
out
icebp
bnd
sbb
orl
pop
jmp
sbb
sub
push
dec
pop
jb
cmp
imul
pusha
jne
sub
push
pop
jo
mov
lahf
pop
push
and
adc
xchg
cli
aam
out
or
inc
sbb
xor
or
or
inc
mov
pop
mov
insl
mov
aam
xor
push
lcall
mov
out
and
cwtl
lock
mov
mov
ffreep
pushf
cmp
aas
add
stos
adc
fisttps
xchg
pop
push
sub
notl
push
xchg
cmpsb
test
inc
xor
imul
push
sbb
jp
ret
sbbl
mov
iret
push
in
js
loopne
push
push
lret
sbb
add
or
or
lds
jne
inc
adc
fidivs
add
push
rol
or
or
movsb
or
faddl
xor
std
jns
lcall
gs
je
andb
outsl
dec
shll
jo
dec
xor
inc
outsb
popa
lcall
outsl
je
sbb
push
dec
push
outsl
arpl
jae
xor
inc
out
out
inc
dec
in
cs
outsb
lock
sahf
out
sahf
repnz
cmc
div
xor
hlt
jns
stc
dec
mov
fnstcw
dec
and
mov
inc
xchg
daa
rcr
push
inc
daa
jbe
je
scas
add
xlat
jmp
scas
shlb
xchg
adc
dec
js
pushf
mov
cmpsb
cmpsl
movsl
test
sub
jmp
mov
inc
fidivrl
jp
jmp
xor
mov
cmpsb
dec
xchg
mov
inc
hlt
test
shll
imul
xor
mov
cmpsb
or
dec
test
jmp
push
outsl
imul
imul
inc
lcall
mov
cmpsl
mov
mov
push
stc
insb
shlb
outsb
ret
lods
les
rcll
inc
fs
push
dec
shll
je
outsl
add
cmpsb
subb
push
test
lcall
sbb
push
andb
or
lea
mov
jecxz
movsb
mov
mov
ljmp
cmp
nop
enter
repz
je
jne
jb
int
shrb
jb
push
sub
arpl
fcomp
mov
ret
enter
sub
jecxz
imul
aas
movsb
and
jne
loopne
mov
imul
or
jcxz
mov
and
push
mov
scas
cmp
faddl
mov
add
arpl
jno
sbb
lcall
push
and
test
jne
ret
cmpw
jne
mov
add
cmpl
mov
push
ret
pop
cmpsl
rolb
test
jae
cmp
outsb
add
iret
je
push
cmp
je
and
je
cmp
ja
aaa
or
pop
jge
adc
jae
fdivrl
mov
fcmovnu
mov
cmp
movb
cmp
jb
pop
sbb
or
je
xchg
sbb
or
dec
sbb
out
and
int
or
or
bnd
add
mov
negl
flds
adc
leave
add
pop
mov
shl
pop
add
adc
add
dec
ret
outsb
jle
shll
adc
insb
jge
jl
add
adc
push
fcompl
adc
pusha
shrb
cmp
iret
repz
dec
outsb
je
jb
rclb
daa
je
dec
jo
dec
dec
das
cs
icebp
ret
inc
sub
je
je
je
out
mov
push
imul
iret
shlb
dec
lcall
push
jne
sub
outsb
test
je
call
cmpsb
outsb
je
gs
cmpsb
sbb
popa
fs
or
jp
mov
cmp
repz
dec
outsb
je
jb
cmp
rep
gs
insb
shll
iret
outsl
jae
gs
lea
fs
bound
and
push
sbb
and
dec
cmp
sbb
roll
cmp
sbb
pop
xlat
ror
popa
enter
enter
sub
lods
mov
and
dec
cmp
push
aaa
fcoml
movsb
cld
adc
inc
inc
cmp
adc
push
dec
sti
and
insb
std
ret
adc
or
lea
scas
aad
sbb
jb
shld
mov
or
add
pop
dec
or
ljmp
pop
shlb
ret
test
je
mov
inc
inc
jmp
andb
inc
pop
push
push
or
test
je
fcoml
inc
movb
out
push
jge
movzbl
inc
pop
mov
mov
push
push
inc
xchg
cli
add
cmpb
ljmp
jmp
or
add
sub
jmp
cmp
pop
mov
and
jmp
push
insb
inc
push
cmp
lock
clc
jge
clc
lcall
pop
xor
data16
sti
sub
mov
cmp
mov
or
xor
adc
jmp
add
push
test
mov
je
ret
adc
call
add
clc
push
mov
mov
inc
inc
test
jne
pop
bound
out
push
fimuls
pop
clc
loop
add
dec
andb
out
sbb
inc
imul
shlb
imul
inc
imul
inc
insb
jae
jbe
or
sbb
movsl
iret
js
lea
jnp
adc
js
add
push
daa
ss
mov
pop
push
inc
jecxz
dec
mov
repz
jae
insl
inc
imul
arpl
jns
cmp
add
inc
int
popl
out
pop
int3
sbb
cmp
push
jnp
loop
clc
jno
jp
fistpl
push
ret
je
cmp
mov
mov
sub
das
push
ljmp
sbb
dec
push
adc
popa
jle
std
sarl
ret
mov
cwtl
std
mov
and
sbb
mov
in
xor
mov
into
add
or
sti
pop
test
or
xor
inc
sbb
jmp
mov
or
mov
mov
dec
movzwl
mov
orl
mov
cmp
jae
cmp
jb
push
mov
inc
push
cmp
push
mov
add
and
andb
or
cmc
xor
sub
sbb
cltd
mov
inc
xor
andb
test
push
jmp
ret
popf
sub
ret
ret
mov
outsb
push
sbb
popa
cwtl
fdivrp
or
push
ror
mov
and
jmp
push
push
mov
or
dec
mov
in
jb
push
pusha
bnd
jl
push
call
pop
in
lret
or
mov
xor
cmp
pop
dec
cmpl
push
sub
xchg
bound
stos
or
sbb
shll
test
inc
test
mov
add
scas
dec
lahf
in
repnz
popa
sti
jb
mov
push
mov
outsb
cmp
xor
lret
pushf
shrb
jmp
mov
mov
call
adc
lea
decl
inc
decl
jne
xchg
adc
add
imul
add
aam
xchg
imul
mov
inc
or
adc
shrb
mov
and
fists
pop
mov
je
or
dec
scas
push
push
add
push
imul
sub
cmp
inc
mov
lret
idivb
push
mov
testb
sbb
push
sbb
sub
mov
xchg
or
lcall
or
jbe
sbb
sbb
mov
in
repz
in
jecxz
sbb
or
in
adc
xor
or
enter
loope
dec
inc
mov
cmpsb
sbb
sarb
mov
cmc
sbb
das
and
cmp
popf
fnstsw
andb
sbbb
lahf
bound
xchg
cmpsb
imul
or
mov
pop
cmc
or
leave
push
jb
stc
clc
leave
rol
fwait
shrb
jo
pushf
mov
pop
xchg
stos
sbb
add
jecxz
sub
rcrb
repnz
push
shll
ffree
push
inc
bound
xor
jne
push
jb
jbe
xor
xor
insb
addr16
rol
and
mov
shlb
jae
mov
jne
loopne
push
cwtl
sahf
mov
jp
sbb
sub
xor
dec
push
cmp
call
and
adc
add
sbb
jmp
rolb
and
lahf
jl
dec
daa
push
into
mov
push
inc
gs
shll
push
imul
outsl
ja
inc
imul
xor
jns
icebp
sub
test
aad
sub
lret
stc
cltd
sub
negb
mov
lds
pop
stos
icebp
cmp
inc
insb
insb
inc
bound
pusha
movsb
imul
xor
push
sbb
mov
test
push
sbb
mov
dec
cli
loope
add
pushf
xchg
orl
pop
fs
sbb
ret
lock
cmp
add
pop
cmp
xor
dec
xchg
insl
pop
mov
sbb
enter
pushf
pop
inc
test
xchg
std
sbb
insl
das
mov
inc
push
push
mov
inc
sub
int
mov
mov
jno
aas
jo
shrl
pop
xorb
out
mov
cld
rcll
pusha
int
call
xor
jns
imul
call
imul
insb
gs
imul
lods
inc
aam
xlat
dec
les
push
xor
xchg
jne,pn
xchg
sbb
xchg
xor
and
inc
jbe
gs
xor
insb
je
inc
imul
xor
pop
fimull
or
bound
popf
or
xchg
jns
xor
aaa
add
sub
jg
add
pop
stos
mov
sub
pop
sarl
pop
or
cmp
jle
imul
fimull
add
inc
outsb
ret
xchg
mov
adc
inc
pushf
or
mov
ficompl
inc
or
push
push
add
aaa
jbe
icebp
in
push
mov
mov
mov
push
sub
dec
fcmovnu
sti
sbb
pop
push
pop
push
push
add
sbb
jbe
push
cmp
push
rcll
push
mov
inc
sbbb
bound
imul
mov
mov
push
add
pop
or
lret
popa
mov
fwait
jecxz
ljmp
add
sub
fsubrs
mov
hlt
nop
mov
mov
fiadds
jne
add
push
or
push
adc
lock
sbb
sub
mov
and
jl
in
or
je
or
je
cmp
dec
shlb
jmp
sub
inc
sbb
andb
adc
jge
mov
dec
pop
and
daa
add
mov
mov
sbb
lock
mov
js
pop
or
mov
jb
jl
mov
enter
inc
push
arpl
jo
xor
xlat
jmp
cmp
and
mov
cmpb
sarb
add
cmove
subl
cmpb
jns
jbe
andb
lock
insb
insb
sub
add
int3
xor
outsb
sbb
imulb
sti
popa
lock
mov
data16
push
outsl
cwtl
dec
and
add
mov
ret
in
hlt
mov
or
push
mov
hlt
push
adc
or
push
clc
adc
arpl
push
push
mov
jge
inc
push
and
and
aam
outsl
mov
sbb
inc
add
aad
mov
push
xor
fdivs
jl
mov
stos
cli
std
shrb
inc
rolb
mov
fadd
shrl
mov
sub
and
mov
push
push
sub
outsl
lock
pop
cmpb
inc
loope
push
lds
int
sbb
add
add
push
lahf
out
and
inc
jecxz
stc
mov
jno
lret
ficomps
dec
inc
pop
pop
jg
int3
push
insb
in
pop
cmpl
xor
add
sub
mov
xor
xor
cs
call
or
jb
movsl
int
pop
xchg
std
mov
notl
clc
clc
punpcklwd
sbb
add
cmpb
sbb
aam
jnp
adc
sub
je
push
push
sub
hlt
push
andb
lea
ss
adc
cmp
loopne
sub
sbb
push
push
fs
jbe
test
sub
xor
inc
xchg
icebp
and
data16
pop
push
cmpsb
add
mov
adc
jmp
lcall
pushl
cmpsb
pusha
ja
or
mov
and
dec
cmp
repz
ret
jecxz
fsubrp
adc
mov
andb
aaa
insb
imul
mov
test
sub
repz
popa
sub
sub
dec
add
dec
or
lcall
xor
mov
lcall
mov
imul
bound
push
add
adc
lcall
movb
sub
hlt
je
add
jmp
outsb
loope
jo
inc
mov
aaa
in
leave
or
jp
or
sub
ss
rcrl
ljmp
xor
into
divl
cmp
int
insb
insl
je
and
mov
push
imul
out
outsb
rcrb
popa
roll
hlt
scas
test
dec
fs
int3
shlb
lods
std
jbe
popa
adc
clc
int3
add
hlt
or
lret
in
call
add
xchg
push
push
imul
dec
add
insb
adc
push
push
ret
lahf
cs
lret
mull
or
pop
shll
pop
pop
pusha
push
lock
lock
call
adc
add
add
pushl
mov
pop
push
pop
pop
cmp
push
fisubrs
mov
pop
cmp
inc
aaa
push
cmp
cmpb
rol
scas
insb
fcomip
inc
cmp
adc
and
or
add
int3
adc
loopne
inc
or
inc
or
cmpsl
ret
stc
jg
mov
outsl
es
out
out
out
fcmovnu
mov
cmp
sub
addl
lahf
out
dec
iret
imul
js
dec
push
fwait
les
mov
add
bound
mov
add
insl
fdivs
jg
adc
mov
mov
pop
jbe
fldl
daa
push
pushf
cld
xchg
arpl
insl
sub
rcrb
xchg
popa
daa
sbb
popf
and
pop
cmpl
jae
leave
daa
test
xchg
dec
fwait
daa
jo
jg
ffree
mov
clc
std
loope
mov
mov
mov
leave
call
sbb
cmpl
fildll
scas
es
vmovd
push
mov
andb
rcrl
mov
daa
jb
fnstcw
std
cmp
das
scas
add
dec
fs
out
out
xchg
js
xorl
mov
pop
add
push
add
dec
add
je
out
sti
jnp
es
sub
inc
mov
dec
scas
add
inc
push
inc
push
fsubp
mov
push
mov
dec
mov
ljmp
push
emms
testl
fsubrp
push
stc
mov
dec
jge
mov
mov
mov
sub
pop
pop
insl
add
push
call
pop
mov
in
out
push
pop
or
dec
sbb
mov
lods
popf
popf
cmp
jb
and
xchg
mov
jo
push
dec
mov
int
push
ja
jg
out
inc
push
push
jge
out
hlt
scas
hlt
mov
jl
dec
or
daa
pop
aas
or
idivb
adc
sbb
mov
filds
sub
leave
ror
mov
out
mov
inc
jl
rol
fistl
mov
popa
nop
add
ja
cwtl
jmp
sti
dec
xor
out
dec
inc
ret
mov
xor
dec
in
ja
out
mov
je
xor
les
jge
mov
mov
repnz
fninit
xchg
xchg
roll
outsb
fs
sti
ds
out
sub
xor
lahf
xor
add
sub
sbb
pop
imul
aad
in
push
xor
mov
add
lret
jns
in
and
sub
sub
es
fcoms
mov
call
scas
or
jl
pop
sub
and
push
add
sbb
loopne
out
dec
gs
pop
jbe
imul
int3
iret
dec
es
aaa
pushf
inc
les
sti
std
mov
aas
fistps
dec
push
push
push
mov
fisubrs
push
pop
and
pop
dec
add
out
inc
pop
ja
xor
insb
xchg
xlat
dec
std
sahf
cmp
dec
sub
or
subl
cmp
lahf
jmp
add
imul
loope
pop
ja
xchg
loope
dec
cs
sti
xor
jg
mov
dec
cld
es
mov
add
adc
aaa
mov
ss
or
jge
or
xor
ja
and
lock
mov
jle
cld
aas
jg
fcmovne
in
jmp
sub
test
in
xchg
loope
outsb
mov
fdivr
adcb
clc
cmpsb
pop
and
ljmp
incb
cmp
mov
dec
iret
and
lcall
je
outsb
add
popaw
jne
je
gs
gs
scas
std
cs
js
xor
xor
jae
popa
arpl
outsb
cmp
outsl
mov
es
es
rol
iret
mov
mov
insb
lods
mov
shl
mov
divb
dec
cmp
cs
pop
hlt
adc
push
call
add
das
das
aas
dec
lret
pop
add
gs
or
inc
cmpsl
xchg
insl
jns
gs
mov
fistps
jne
push
dec
add
sub
pshufw
shll
jae
jne
fs
mov
pop
lcall
fiadds
outsl
incl
outsl
pop
shlb
imul
mov
jb
popa
je
outsb
outsl
cmp
push
push
cmp
outsl
rcr
sbb
dec
popa
pushf
sbb
push
dec
cwtl
je
out
int
sbb
push
push
pop
or
sbb
dec
je
jbe
je
sub
outsb
or
push
add
sub
mov
jp
insb
popa
das
xor
xor
fiaddl
sti
inc
arpl
jo
inc
outsb
arpl
push
inc
pop
fdivrl
jo
and
cwtl
inc
inc
in
data16
lods
popa
jne
mov
sub
ss
xor
and
adc
xchg
jo
test
fnstenv
cmp
imul
mov
clc
push
jae
mov
or
push
in
outsl
jb
pop
and
xchg
je
sub
sub
xor
mov
mov
pusha
in
xor
push
jns
cmp
pop
ja
sub
jb
sbbb
call
sub
stos
test
adc
sbbl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
rcll
adc
and
add
popa
fs
jmp
imul
push
dec
jne
je
inc
jns
sub
ljmp
mov
je
imul
push
gs
jo
popa
je
ds
inc
sbb
cs
pop
push
imul
push
push
popa
or
sub
fcmovnu
outsb
addr16
push
push
gs
inc
jne
jb
outsb
je
inc
imul
mov
dec
and
jb
ljmp
pop
jns
inc
jb
mov
gs
popa
outsb
fs
push
aad
outsl
movsb
shlb
jae
imul
inc
insb
inc
arpl
mov
fstpt
jae
bound
mov
popa
push
jae
fildl
push
dec
outsl
fisubrs
shll
and
dec
je
outsb
inc
adc
jns
xchg
add
arpl
imul
inc
insb
push
sub
lock
int
inc
inc
outsl
outsb
or
sbb
fisttpll
push
insl
ss
inc
inc
sub
fistpl
xor
adc
clc
js
jmp
outsb
into
cs
stos
adc
jo
popa
pop
jbe
outsb
cltd
sbb
je
push
outsb
jne
adc
sub
and
outsl
insb
outsl
ja
pop
inc
js
ror
pusha
mov
popa
insl
or
scas
xchg
mov
adc
insl
pushw
xlat
gs
mov
aas
aas
xor
inc
pop
push
add
pop
sbb
das
ret
jbe
movd
ja
jae
cmpps
inc
xor
and
sub
mov
ja
or
ds
data16
outsl
add
das
aad
andl
xor
pop
push
xchg
xor
insl
bound
outsl
rclb
jo
mov
gs
insb
arpl
cmp
movsb
dec
pop
xchg
imul
pop
jo
shlb
outsb
lahf
ret
int3
icebp
push
loopne
loopne
inc
js
lds
cmp
jbe
ret
inc
pop
inc
dec
cmp
inc
sti
insb
popa
xor
inc
dec
out
stos
divl
pop
lock
push
insl
ja
mov
xor
adc
and
pop
aam
ja
fstpl
incl
or
jae
ljmp
add
jo
or
adc
push
pop
or
and
decl
sub
or
push
sbb
or
pop
sbb
adc
cmp
or
aaa
add
mov
push
push
xor
adc
push
sub
or
adc
push
sbb
mov
adc
adc
add
add
add
pop
adc
outsb
jmp
cs
or
dec
pop
and
mov
inc
jbe
push
sbb
jg
adc
push
dec
or
or
or
xor
and
xor
sub
adc
or
pop
nop
lods
fs
add
or
or
rolb
aaa
test
fistl
mov
jg
adc
adc
or
inc
add
lock
pop
or
lock
add
pop
push
idiv
incl
and
pop
and
sbb
or
pop
sbb
cmp
movsb
shlb
fdiv
adc
lock
data16
mov
adc
xor
adc
sbb
test
or
or
out
fdivrs
or
pop
or
pop
adc
push
or
lock
movsb
sbb
fcomip
or
inc
and
push
or
daa
jno
sbb
add
loope
push
and
dec
pop
sub
or
and
and
lock
filds
push
push
sbb
push
or
sbb
pop
push
adc
sbb
fistps
pop
insl
jge
cmp
add
addl
inc
sub
push
or
dec
or
add
jg
lock
adc
sub
dec
or
popa
or
jmp
aaa
cld
test
pop
add
loop
add
pop
xchg
push
add
add
jle
push
rcll
and
jno
mov
xor
sbb
or
xchg
jae
adc
or
cmp
outsb
add
add
mov
mov
fimuls
sbb
push
adc
inc
pop
jl
pop
mov
sbb
inc
pushf
lock
add
push
adc
sub
hlt
mov
lock
push
add
add
add
or
lock
adc
icebp
das
pop
cs
inc
or
add
xchg
fimull
rcll
loopne
push
and
xor
pop
data16
fstpl
fstpl
imul
fdivl
popa
sbb
imul
mov
cltd
jb
add
incb
test
cmp
add
je
push
repnz
and
push
dec
enter
cs
add
test
testl
outsl
inc
inc
add
dec
dec
enter
xchg
cmp
orb
push
outsl
push
repnz
aad
push
add
dec
ss
out
gs
push
insb
and
fistpl
repnz
js
es
inc
dec
xchg
lock
hlt
xchg
mulb
add
add
add
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
