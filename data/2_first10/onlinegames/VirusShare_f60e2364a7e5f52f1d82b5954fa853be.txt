fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
xor
lahf
add
pop
sbb
xor
subl
rolb
faddl
out
std
loopne
mov
xor
lea
push
mov
push
or
sub
frstpm(287
lds
gs
popa
enter
int
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shrl
aam
aad
xlat
pop
insl
xlat
xor
aaa
fisttpl
push
pop
pop
mov
lcall
in
and
lret
insl
shll
out
call
imul
in
pop
in
aaa
lock
repnz
div
mov
stc
dec
pop
cli
sti
js
je
mov
fnstsw
xlat
sub
mov
pop
jmp
arpl
adc
mov
xor
mov
jne
mov
or
add
rorb
jge
cmp
jne
aaa
mov
xor
jmp
lea
add
pushl
fstpt
je
sbb
outsl
outsl
int
pop
adc
jne
push
or
mov
sbb
iret
enter
das
incl
pop
inc
cmp
or
lds
mov
pop
pop
pop
leave
ret
mov
fisttpl
push
xchg
adc
push
push
imul
or
inc
mov
push
push
sub
mov
inc
push
clc
add
in
push
and
push
push
sbb
js
push
fisttpl
jae
add
add
push
pop
insb
pop
outsb
jecxz
push
mov
adc
push
stos
mov
jg
lock
cmp
je
push
adc
pop
or
or
arpl
sbb
cmp
adc
push
push
fnstcw
pop
inc
cmp
sbb
jbe
insl
and
sbb
movsl
adc
out
mov
jecxz
pop
in
adc
xchg
add
mov
fisubl
cmp
xchg
xor
ficompl
jo
push
push
scas
inc
shlb
or
push
adcl
insb
and
mov
mov
mov
out
cmp
cmp
daa
adc
push
jmp
addb
push
sbb
xor
add
pushl
dec
int
jge
inc
cmp
mov
add
bound
mov
and
jo
sub
inc
test
je
adc
call
mov
loop
pushf
xor
push
outsb
xchg
in
rcll
or
gs
inc
testb
movsb
dec
xor
cmp
aas
xor
mov
sbb
imull
sbb
icebp
out
fcmovnu
push
lds
jno
insb
mov
bound
adc
lcall
push
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
sbb
xchg
xor
xchg
test
push
jecxz
sbb
mov
mov
add
inc
cmpb
inc
fadds
test
xchg
push
mov
and
aad
pop
clc
inc
and
or
mov
mov
into
in
sub
daa
push
mov
ljmp
sub
pop
pop
sbbb
mov
sbb
mov
in
les
out
inc
pop
or
jbe
clc
lock
push
in
inc
mov
mov
sub
and
or
out
pop
push
daa
cwtl
pop
les
adc
mov
outsl
xor
sub
negl
pop
movsb
imul
shlb
add
std
add
dec
sbb
stc
sbb
out
outsb
je
repz
lea
andb
sti
add
lea
clc
jge
stos
stos
mov
loopne
adc
neg
fdivrl
pop
add
xor
test
adc
fdivrp
loope
sbb
push
sahf
mov
pop
call
mov
push
xor
lret
pusha
into
dec
lock
push
inc
scas
xlat
inc
into
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
jo
or
adc
sbb
rcl
push
stc
ds
sar
out
int
insb
add
lret
rcrb
cs
shrb
arpl
outsl
rcrb
sbb
insl
mov
push
repz
sbb
sti
adc
sti
cld
mov
sbb
sti
fdivr
mov
loop
cld
std
dec
push
mov
out
lahf
imul
xchg
mov
dec
mov
jae
pop
cld
mov
inc
into
fsubl
lds
fstps
add
cmp
xlat
movsb
push
insb
rcl
or
xor
xor
cs
movsl
pop
lcall
popf
fsubr
sbbl
pop
dec
mov
mov
push
mov
enter
shrb
loope
out
jl
rorb
push
ss
pop
xchg
int
inc
adc
and
cmc
dec
jmp
fld
fisttpll
mov
ficompl
or
popf
outsl
outsb
ds
je
jae
adc
cli
pop
sti
mov
pop
in
insb
mov
pop
jnp
lss
mov
mov
scas
pop
or
inc
fwait
int
mov
lods
or
aaa
movsl
xchg
adc
or
lods
mov
sub
outsl
testb
mov
or
mov
aaa
sti
cmp
call
push
bound
enter
bound
clc
addr16
sar
push
repnz
sti
jmp
sar
test
push
mov
or
repnz
dec
push
adc
cmp
inc
das
mov
pop
popf
push
xor
shll
jo
outsl
jb
mov
shlb
or
out
and
inc
loopne
sbb
hlt
cmp
adcl
hlt
cmp
jecxz
enter
xor
fnstenv
pop
pop
xchg
and
hlt
lock
fisubs
mov
xchg
ret
aaa
gs
adc
sbb
mov
es
arpl
adc
and
or
outsl
fs
pushf
sbb
push
cmp
lea
adc
jmp
std
mov
fs
jae
sub
mov
or
loope
popa
fldl
pop
push
inc
faddp
dec
movsb
inc
xchg
sbb
and
mov
repnz
nop
adc
mov
jecxz
rorl
push
dec
inc
dec
dec
in
stc
add
pop
push
push
dec
inc
dec
add
push
dec
cs
outsl
lds
add
sbb
add
mov
add
adc
add
add
ss
nop
add
enter
mov
inc
loopne
push
pop
mov
incl
mov
int
mov
imul
popa
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
pop
sti
cs
imul
aas
jb
jmp
dec
ljmp
cmp
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
mov
mov
and
add
or
cld
idivl
pop
adc
add
pop
xchg
mov
add
push
outsl
pusha
xor
pop
push
add
or
clc
push
fs
inc
popl
andl
pusha
iret
imull
bound
movsb
inc
adc
cmpsl
cmp
popa
je
rclb
adc
mov
mov
outsl
arpl
inc
and
lret
daa
inc
decl
cmp
mov
in
jb
xor
push
xor
movsb
xor
data16
in
dec
shll
add
sbb
ss
pop
xor
shll
jl
pushf
movsb
shll
dec
shll
pop
sbb
cs
pop
lcall
fs
inc
dec
xlat
popf
insl
xor
mov
andb
pop
outsb
xor
dec
enter
xor
lret
addb
js
or
sbb
and
and
mov
jb
idivb
mov
fs
add
xor
mov
pop
cmpl
and
adc
and
adc
and
adc
inc
out
mov
add
fadds
leave
scas
in
add
cmp
add
cmp
add
cmp
and
adc
stc
and
add
xor
add
sub
add
enter
movsb
and
adc
add
or
cli
push
sub
call
sub
sbb
mov
fmull
jns
lcall
cmp
std
gs
adc
push
insb
mov
cmp
jne
push
pop
jmp
adc
mov
dec
out
cmp
add
orl
sbb
mov
pop
lea
mov
push
sub
sbb
std
decb
inc
adc
sub
je
fldenv
fisttpl
and
xor
enter
jl
adc
push
or
and
or
push
jge
mov
pop
sub
pop
pop
leave
push
xchg
or
fwait
inc
sub
cs
int3
xor
loop
push
sbb
pushf
stos
xor
mov
dec
cmp
or
xor
xor
subb
popa
das
jbe
enter
or
jne
scas
loop
aas
cmp
dec
mov
adc
adc
inc
nop
mov
scas
dec
je
fabs
call
push
and
fwait
xchg
add
cmp
jl
jb
mov
add
or
lock
mov
in
or
sbb
je
outsl
mov
addr16
mov
xchg
pop
pushf
push
jno
int
dec
jne
pop
call
jmp
push
jmp
push
adc
cmp
mov
testl
jno
test
dec
mov
cwtl
inc
inc
jmp
ss
fildl
mov
push
xorb
jp
outsl
jo
push
jo
mov
push
insl
testb
mov
sbb
sbbb
mov
pop
or
neg
pop
repnz
sub
or
je
in
shll
xor
lahf
add
add
sub
adc
fisubrs
or
add
inc
icebp
adc
int3
xchg
aaa
push
inc
jp
sub
ret
fisttpll
call
cmpsl
push
fcomps
xor
outsb
and
sbb
mov
add
and
fisttpll
rcr
pop
inc
aam
mov
pop
fidivrs
pusha
jl
or
test
adc
sbb
rorl
adc
hlt
or
jb
mov
jecxz
adc
dec
out
xchg
xchg
jg
or
cmp
int
cwtl
cmp
sub
adc
rclb
adc
data16
mov
testl
cmp
jo
lds
setbe
xchg
lret
push
pusha
push
adc
mov
mov
xor
mov
dec
xchg
fnstenv
gs
insb
jb
xchg
gs
gs
gs
jb
popa
gs
mov
xor
ja
imul
fcmovnu
frstor
fisubs
sub
loope
pop
js
xchg
jecxz
nop
cld
mov
je
pop
rclb
push
add
xor
mov
mov
sahf
test
inc
inc
xor
lret
or
and
int
cmp
push
jmp
sub
scas
sbb
push
test
pop
xchg
imul
pop
inc
loopne
popa
pop
jb
push
mov
frstor
dec
jo
jmp
add
push
pop
js
mov
jns
dec
lock
or
xchg
cmpw
test
cmp
cmp
or
and
imul
sub
rorb
popa
cmp
cmpl
test
fidivrs
cmp
sub
cmpb
js
pushl
pop
sub
jo
daa
cmpl
jb
dec
or
leave
pop
dec
int3
cli
je
add
push
aas
or
add
sub
fisttps
dec
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
sub
cld
or
roll
mov
add
sub
xchg
sub
in
adc
pop
sti
jg
jne
mov
sub
mov
lods
inc
cmpl
loope
lahf
add
cmpl
jmp
gs
and
lea
sar
outsb
sti
mov
jle
movzwl
mov
jne
daa
add
ljmp
mov
cli
add
push
or
adc
divl
lar
data16
lock
jne
or
pop
cmp
sub
add
aam
insl
clc
or
shl
or
cmpsl
xchg
xor
or
inc
mov
jecxz
inc
cmp
xchg
add
jmp
add
and
imul
push
repz
jbe
push
dec
mov
jno
push
inc
dec
xorb
push
jmp
mov
add
lcall
jle
and
mov
pushl
add
push
scas
clc
add
sub
sbb
mov
pop
or
push
mov
mov
jl
outsb
xor
jnp
pop
inc
xlat
xor
lea
sbb
mov
pop
lods
pop
push
call
cltd
in
imul
inc
aaa
pushl
lcall
xor
push
add
bound
fwait
mov
les
push
imul
mov
imul
int
wrmsr
je
xchg
and
cld
mov
or
push
xorl
dec
jge
adc
xor
movsb
jg
dec
mov
mov
xchg
inc
cmp
testb
je
mov
es
inc
sub
sahf
lea
sbb
jmp
push
mov
pop
add
sbb
mov
test
test
push
push
xchg
leave
pop
sub
mov
jl
add
dec
mov
xlat
mov
pop
mov
mov
adc
sbb
dec
jnp
push
sub
pop
jmp
and
or
sbbb
out
sub
xchg
gs
outsl
jb
lock
xchg
jb
gs
je
push
ror
sub
mov
mov
and
loopne
mov
push
cld
or
fcompl
pop
or
or
adcl
mov
mov
add
test
mov
mov
test
jle
jne
push
in
and
sbb
call
adc
jg
or
dec
testl
inc
imul
mov
adc
and
int
add
xor
add
mov
aas
lods
inc
push
inc
adc
cs
xor
int
aaa
jnp
sub
adc
orb
adc
das
sub
pushf
mov
sti
incl
outsl
jae
dec
popa
outsb
fs
cmp
inc
decl
jb
arpl
fs
jne
add
fs
imul
popa
jb
inc
and
fs
inc
fstpt
outsl
pop
dec
popa
insl
gs
xor
out
fstp
pop
cmp
push
popa
je
and
scas
insl
lock
arpl
sub
push
cmp
outsb
ja
rorb
add
push
fcmovne
sub
test
push
or
inc
ds
js
nop
add
outsl
fcmovnu
popa
imul
and
push
arpl
ja
cltd
pop
push
gs
outsl
add
mov
fistpl
orb
cmp
imul
int
mov
insb
outsb
xchg
dec
jo
mov
fbld
repz
push
xchg
outsl
ja
inc
xor
push
test
mov
jne
outsb
pop
xlat
pop
inc
jno
dec
pcmpeqb
and
push
das
lods
shlb
or
push
pushw
mov
test
gs
pop
jo
ret
or
mov
in
insl
jo
or
dec
fwait
bound
or
pusha
xor
inc
int
lock
mov
sub
push
outsl
outsl
insb
dec
imull
push
jo
push
outsb
popa
jo
push
dec
cwtl
test
subl
cmpl
imul
mov
cmp
hlt
fcmovnb
cmpl
inc
es
push
push
lods
add
jo
pop
retw
jbe
popa
in
push
push
sbb
pop
add
jne
popa
push
sbb
lahf
imul
leave
insl
arpl
shrl
jo
jo
or
test
aas
fcoms
inc
out
sub
arpl
popa
jge
fsubrl
daa
rolb
mov
dec
outsb
data16
imul
out
outsl
sub
arpl
xchg
std
jns
inc
arpl
jo
inc
popa
arpl
filds
sub
int
rcr
gs
inc
push
mov
add
mov
cltd
xor
outsb
test
sub
cltd
add
insl
mov
fdivs
rorb
lds
inc
mov
add
in
push
adc
ja
xor
dec
test
int
stos
inc
push
push
jno
lcall
je
and
xor
jnp
mov
sar
pushl
xchg
xor
pushl
adc
xor
xor
jno
mov
jmp
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
pushl
mov
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
jg
lcall
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
pushl
pop
aaa
fs
jp
jg
or
adc
and
xor
pop
cmp
imul
cmp
cmp
ljmp
cmp
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
mov
mov
sub
cmp
jg
xchg
decl
test
test
repz
jg
mov
clc
test
dec
cltd
cli
test
frstor
jge
lcall
bound
mov
incl
seto
add
sbb
clc
push
sbb
xorb
add
mov
xchg
cmpl
or
pop
add
cmp
inc
xchg
ljmp
ftst
xor
push
jb
aad
daa
sar
nop
sub
cmc
or
cmp
jge
sbb
in
jl
insl
nop
or
push
pusha
imul
insb
lcall
sbb
xor
sub
push
pusha
jo
xor
xlat
je
orb
xor
rol
shl
hlt
or
lcall
xchg
test
jns
imul
ss
mov
jns
jns
add
xor
data16
ss
cmpsb
imul
insb
lcall
and
in
mov
xchg
lods
add
jl
push
and
sub
xchg
add
add
push
xorl
jg
push
leave
adc
dec
je
jo
jne
gs
insl
push
jns
inc
aaa
sbb
push
inc
adc
adc
dec
add
out
sub
int
nop
dec
push
mov
or
or
inc
add
xchg
add
aaa
sbb
pusha
flds
shlb
inc
add
jl
mov
add
mov
test
add
add
inc
fmul
push
sbb
mov
inc
fldenv
add
add
popa
fsubs
test
add
mov
mov
and
ja
inc
pusha
stos
test
mov
aas
add
pop
sbb
push
popa
rorl
in
add
fldcw
adc
sbb
mov
inc
inc
xchg
adc
pop
mov
lods
mov
inc
fldt
dec
and
fs
fwait
test
fnstsw
jae
and
sbb
adc
add
inc
outsb
mov
inc
pop
sub
enter
iret
dec
push
push
repz
pop
jno
sub
sub
pop
jae
je
mov
aad
mov
jb
jns
ficompl
loop
cld
ja
inc
jno
cmp
imul
jns
outsl
and
ds
js
ja
xor
shr
iret
sbb
dec
dec
daa
dec
jbe
repnz
pop
sbb
imul
iret
xor
test
jae
jne
repz
insb
or
sti
sti
pop
in
jns
pop
inc
push
addr16
fiadds
cmp
cmp
popa
jae
push
icebp
fildl
mov
stos
add
mov
mov
xor
ja
push
mov
xlat
xor
sbb
stc
scas
repnz
in
add
jl
das
mov
xor
cmp
jbe
add
lret
add
stos
nop
pop
and
push
cmp
xor
jbe
push
lods
subb
rcll
sbb
lea
add
adc
sub
add
in
ss
incl
jo
cmp
in
add
movb
mov
sub
sub
jbe
push
std
mov
movb
xor
movb
stos
mov
lock
push
push
call
div
cmpsb
imul
mov
nop
fsubrl
inc
in
pop
mov
cwtl
push
sbb
or
or
int
or
adc
and
push
insb
and
gs
sub
movzbl
rcll
inc
insb
jae
cs
in
insl
in
jne
mov
andb
mov
or
push
aas
mov
inc
pop
cmp
pop
jl
push
stc
in
pop
mov
sahf
subl
scas
test
add
pusha
xor
adc
stc
leave
cmpsl
lods
xor
adc
adc
adc
jne
repnz
int3
adc
mov
push
leave
xchg
sbb
add
or
mov
fimuls
arpl
xor
adc
aas
sbbb
ret
cmpw
cmp
lret
adc
inc
push
ret
cld
iret
dec
pop
repnz
add
mov
or
adcl
out
adc
mov
ret
mov
or
inc
je
sub
outsb
push
or
divl
adc
pop
cmp
ja
jge
add
jnp
add
or
jae
repnz
loopne
in
outsl
xor
or
inc
jmp
cmp
jb
sub
je
push
mov
add
dec
sbb
imul
or
jmp
xchg
mov
xchg
mov
fldt
and
mov
xchg
mov
sbb
cld
idivb
sub
or
int
push
call
in
jge
movsl
add
mov
movsb
mov
fstpl
loopne
mov
mov
std
add
pushf
adc
mov
mov
or
mov
mov
push
mov
movsb
pop
dec
pop
mov
test
rcrb
add
and
add
sbb
add
add
inc
xor
dec
push
leave
inc
xor
leave
add
cmp
xor
les
mov
xor
xchg
pop
and
xor
adc
xchg
pop
repnz
xor
xor
out
adc
xor
repnz
push
cmp
xor
and
in
xor
push
xor
in
cld
fcoms
add
xor
inc
pop
imul
fdivp
add
ret
add
lds
popf
and
je
lea
call
int3
xor
nop
jg
mov
aaa
push
jmp
adc
add
xor
and
xor
lea
push
inc
negl
ret
call
sub
idiv
adc
mov
ss
inc
inc
jmp
andb
push
sub
adc
add
mov
jb
push
ds
ds
add
je
add
jo
inc
and
xor
adc
repnz
mov
sub
add
push
call
repnz
fcoml
add
insb
xor
adc
lock
adc
cwtl
pop
aas
xor
jmp
inc
mov
jecxz
fimull
mov
clc
fs
ja
xor
mov
cmpb
movsl
shl
add
add
jl
cmp
jb
in
push
cld
decl
icebp
mov
imul
add
andl
cltd
or
in
jg
inc
sub
and
or
imul
outsb
int
insl
adc
and
push
add
ret
or
inc
jge
and
pop
fdivr
push
mov
roll
jecxz
aas
cmp
jae
incl
inc
neg
pop
lret
shr
add
dec
out
pop
test
push
loopne
push
mov
sbb
clc
fisttps
mov
dec
push
pop
jne
adc
sbb
fcmovb
mov
jo
mov
add
loop
or
adc
or
mov
add
jne
xor
gs
aam
add
xor
inc
jmp
inc
sbb
addr16
jbe
incl
jno
sbb
mov
not
and
push
jl
subl
incb
adc
xlat
sub
shr
mov
in
jo
add
repnz
not
and
testl
lea
test
insl
outsl
dec
je
js
repnz
aam
cs
in
test
inc
fisubs
fimull
add
lea
mov
out
xadd
adc
pop
inc
sub
mov
and
in
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
ljmp
mov
fildll
sub
xchg
sbb
fstpt
mov
push
lods
loop
mov
push
sub
push
hlt
mov
not
and
sub
and
adcb
sub
xchg
rcr
mov
sub
jecxz
sbbb
xlat
in
pop
loope
sbb
fidivrl
adc
sbb
inc
xor
roll
fisubl
filds
jle
imul
xchg
inc
std
sbb
mov
stos
out
xor
add
in
popf
mov
jne
les
repz
out
fcmovb
add
fcomp
cwtl
subb
addl
repz
xor
and
not
fisubrs
pusha
into
das
insb
adc
pop
scas
testl
fcmovnbe
mov
pop
les
subb
lcall
push
loop
ud2
loop
adc
push
fsubrs
ret
add
ja
fidivrs
pop
mov
rcrl
les
adc
inc
out
or
xor
popf
aaa
lret
ja
rorl
fcoml
or
loope
lods
cwtl
add
mov
sub
fidivrs
xchg
pop
imul
das
push
mov
cmpsb
pop
int
imul
inc
cmp
sub
mov
or
cmp
and
or
mov
outsl
in
popa
adc
add
or
mov
sarl
pop
add
and
aad
aam
popa
imul
pop
bound
sbb
mov
shlb
clc
jg
adc
xchg
out
dec
cmp
inc
rclb
push
fadds
test
lcall
jb
sub
mov
pop
es
adc
repnz
adc
inc
shll
and
lock
call
lock
push
ret
mov
mov
hlt
pop
adc
call
xor
ret
xlat
lods
mov
jbe
arpl
pusha
adc
inc
add
mov
fimull
in
pop
and
clc
cmp
into
icebp
pop
jge
cli
fnstcw
xor
shl
jg
or
add
mov
mov
mov
out
loope
jle
lcall
ret
inc
enter
pop
add
pop
aaa
or
mov
push
fistps
popl
mov
cltd
pop
mov
mov
aad
adc
cmp
xor
dec
gs
call
mov
adc
inc
loop
shr
or
xlat
movq
faddl
sbb
add
sub
lock
aam
pop
cmp
mov
daa
mov
sbb
and
sub
aad
push
adc
ja
xor
xchg
dec
fisttps
sub
adc
or
in
ret
fwait
insl
shrb
jmp
add
fldt
xor
mov
sahf
pop
cmpb
divb
adc
mov
fadd
and
insl
adc
inc
sti
xor
mov
repnz
fxch
fwait
enter
std
mov
fcompl
mov
inc
ljmp
jbe
pop
add
mov
fimuls
sub
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
gs
jno
cli
xor
loopne
rorb
mov
or
sub
mov
jle
sub
jo
mov
testl
cwtl
fidivrs
imul
out
ja
pop
cs
fimuls
test
imul
adc
fidivs
shll
js
pop
out
in
fs
cmp
or
push
push
clc
imul
sarb
cmp
aam
cltd
js
movsl
jae
out
jbe
les
in
mov
divl
idiv
ss
rclb
jp
jl
pop
je
lock
xor
fiadds
push
lods
les
cli
fs
imul
jge
stos
pop
fdivs
fisubs
stos
rcrb
sbb
push
or
test
ret
sbb
jl
jecxz
repnz
inc
or
inc
push
or
adc
lea
mov
xchg
out
xchg
stos
adc
lock
jecxz
mov
mov
fldt
xchg
or
mov
xor
cmp
pop
pop
gs
sbb
rcrl
mov
outsl
xchg
int3
or
push
or
mov
sbb
jge
out
call
unpckhps
sbb
jns
in
rcrl
test
sub
sbb
dec
xor
call
scas
dec
jle
outsl
jecxz
jp
sbb
int
dec
fldt
mov
sbb
out
jecxz
jp
ret
std
pop
xchg
mov
add
jbe
ja
mov
aaa
xchg
sti
jp
jle
test
sbb
ja
mov
xor
jb
shll
fiaddl
xchg
out
aam
rcl
sub
pslld
ret
icebp
fwait
sub
xchg
roll
imul
mov
pop
jge
out
mov
add
pop
movsb
mov
inc
or
push
mov
out
push
call
push
mov
mov
fs
cmpb
ror
jg
jl
js
sub
push
push
push
add
adc
lods
mov
insb
js
and
xchg
adc
mov
outsb
lea
in
dec
mov
lahf
inc
pop
inc
test
nop
iret
pop
pop
fcomi
lods
lock
mov
into
ljmp
add
sbb
cmp
jne
lods
pop
rol
or
push
shl
cli
inc
pop
push
daa
mov
xchg
inc
mov
inc
cltd
fistl
hlt
cld
ljmp
xor
out
sub
jo
pop
push
stos
add
sahf
xchg
adc
push
psubsb
repz
cli
mov
pop
cmp
fisttps
push
lock
mov
or
inc
adc
and
mov
insb
or
mov
cmpb
sub
or
rcll
mov
ljmp
out
adc
dec
sbb
mov
adc
mov
je
ljmp
je
call
adc
cmp
leave
push
lock
adc
negl
fs
cmp
jl
jns
aam
inc
int3
mov
jbe
out
pop
add
xor
push
mov
adc
push
pop
cmp
mov
add
ffree
jmp
mov
pop
notb
adc
jmp
cmp
out
add
fdiv
mov
push
push
lret
cwtl
adc
ss
pop
push
inc
ror
loopne
loop
pusha
jle
inc
mov
adc
inc
inc
clc
int
mov
pushf
adc
cmpsl
pop
adc
and
filds
or
adc
rcrl
inc
add
cmp
mov
jo
nop
xchg
je
shr
test
call
iret
mov
call
mov
fwait
xchg
mov
sbb
push
mov
in
xchg
pop
in
stc
mov
jl
sbb
call
data16
pusha
jnp
jle,pt
adc
push
push
and
adc
push
arpl
ficompl
pop
ja
push
in
adc
outsl
loopne
fmuls
fwait
push
push
push
dec
push
in
psubusb
fidivs
push
push
mov
dec
dec
stos
push
repz
mov
sbb
sub
je
stos
push
ljmp
pop
mov
pop
inc
dec
mov
popf
push
add
adc
fcomi
push
test
add
cmp
imul
adc
xor
push
psrad
xchg
xchg
and
mov
sbb
aas
lds
insl
xchg
in
push
push
push
clc
insb
fwait
and
or
add
mov
lret
mov
aam
fsub
lock
in
and
xchg
add
out
sbb
or
mov
in
je
push
mov
ja
mov
adc
pop
xor
clc
mov
leave
aad
out
test
jbe
scas
and
or
iret
push
push
xchg
mov
sbb
insl
pop
mov
inc
cmp
mov
pop
adc
inc
mov
sbb
dec
pop
nop
pop
adc
jl
nop
sbb
mov
frstor
cltd
mov
idiv
push
jle
sbb
sub
aas
cmp
mov
xor
add
inc
mov
stos
je
add
mov
sub
push
jmp
rcrb
ss
push
ret
sbb
sub
and
in
subb
js
pop
xchg
and
fistl
push
dec
dec
push
dec
inc
push
cs
xchg
mov
insb
insb
mov
sub
test
in
shll
insl
in
jne
out
jae
lock
mov
repz
data16
pushf
popf
outsb
add
pop
mov
push
jb
mov
push
cs
pop
cmpsl
push
gs
pop
stos
stos
push
lods
lods
push
les
mov
pop
lds
enter
pop
mov
leave
lret
dec
int3
push
or
xlat
jne
mov
jno
iret
rorb
rcrl
xchg
insl
roll
aam
mov
mov
mov
jbe
xchg
gs
pushf
js
xor
mov
xchg
xchg
xchg
xchg
xchg
mov
lret
insl
xchg
inc
push
cwtl
js
lcall
fcmovu
fcompl
fstl
xor
xlat
xor
loopne
loope
loop
sub
dec
shl
in
ds
mov
ss
shll
lgs
mov
adc
shrl
scas
mov
arpl
inc
shlb
mov
or
enter
mov
xchg
mov
mov
inc
leave
dec
cli
pop
lret
mov
cld
pushf
jmp
prefetch
mov
pop
imul
mov
adc
pop
jb
mov
fchs
cmpsb
cwtl
jne
push
nop
in
jne
mov
push
push
lret
repz
push
adc
mov
imul
push
sbb
mov
fstps
out
addr16
add
inc
pop
in
adc
in
cltd
outsb
mov
inc
add
mov
shrl
sbb
movsb
or
repz
or
pushf
add
push
mov
jne
push
cmp
adc
jne
aas
cmp
jmp
pop
push
bound
inc
jg
mov
call
add
fidivrl
test
aad
mov
mov
lsl
sbb
cmc
subl
mov
clc
ret
or
push
arpl
sbb
nop
jbe
jmp
mov
cltd
test
or
add
mov
push
arpl
jbe
inc
cmp
jb
inc
incl
pushf
add
add
add
cld
test
cmp
movsl
gs
xchg
gs
xor
stos
imul
insb
insb
mov
arpl
pop
dec
push
jae
arpl
jnp
clc
xchg
insw
jne
enter
xlat
loope
je
in
cmc
adc
cmp
add
pop
je
jecxz
pop
inc
clc
lds
popa
mov
push
lds
lcall
pop
xor
xchg
inc
lods
in
popa
xor
dec
or
and
mov
inc
popa
jmp
shr
mov
mov
fisubs
sub
pop
daa
cmp
call
fdivl
jbe
aad
mov
testb
mov
sbb
xchg
jle
push
jne
jb
inc
and
rcr
aaa
sbb
iret
push
inc
jmp
and
std
add
and
stc
cmpb
decl
xlat
or
or
mov
inc
jb
xor
dec
push
loopne
call
in
jae
aas
jmp
arpl
lcall
imul
mov
jne
and
fnstcw
inc
adc
cltd
dec
jle
lds
in
in
mov
jae
negl
outsl
es
dec
insb
and
in
inc
shrl
in
sbb
pop
decb
mov
shll
pop
mov
test
stos
cltd
dec
jo
es
ljmp
in
lods
xchg
dec
xor
mov
sbb
int3
pop
push
idivb
lods
int3
sub
loope
movsl
sub
lcall
je
imul
pusha
lcall
and
sbb
shrl
rcrb
enter
ror
mov
pop
je
cmpl
loopne
iret
mov
ret
das
ja
repz
test
push
jge
xor
fcmovne
stos
into
fadd
xor
sbb
fcmovnu
stos
stos
imul
rcrb
or
jmp
hlt
add
xor
nop
sub
dec
inc
fmuls
inc
pop
pop
xchg
and
add
cmp
inc
inc
xor
das
push
lahf
mov
repz
jge
mov
outsl
pop
xadd
cwtl
mov
adc
sarb
pop
or
cwtl
or
and
dec
push
loopne
call
push
shlb
sbb
sbb
adc
cwtl
jnp
test
mov
dec
loope
adc
xor
lock
lods
or
test
daa
xchg
int3
rorl
mov
mov
mov
push
cld
sub
mov
cld
mov
fdivrl
in
cmp
lea
or
add
jb
gs
mov
jae
call
mov
adc
jg
loop
pop
pop
ret
push
inc
jp
cltd
std
cwtl
inc
cwtl
and
xchg
dec
cltd
lcall
imul
mov
movsl
cmpsb
imul
test
and
mov
shll
or
bound
imul
rol
ret
ret
lcall
enter
cmpsb
imul
pop
xchg
gs
jae
popa
arpl
mov
outsb
cmp
imul
xchg
cmpsb
jns
cmp
push
ret
ret
lds
jb
jp
add
jmp
orl
dec
mov
adc
dec
out
imul
adc
push
shlb
pop
enter
jmp
cwtl
xor
lods
roll
js
rclw
lcall
or
xor
rorb
divl
cmp
sbb
mov
call
push
adc
xchg
cld
xchg
cld
pusha
es
rolb
push
jb
mov
mov
dec
aaa
loop
pop
movsb
jg
inc
sahf
adc
xchg
les
push
enter
lret
jb
sub
imul
daa
je
jo
outsl
cmpsb
imul
fcomp
std
adc
cmp
fldlg2
or
xchg
cmp
add
xlat
fs
lods
inc
in
mov
jnp
scas
sub
divb
loope
imul
popa
cwtl
sbb
shll
imul
popa
arpl
stc
shrl
subb
jb
loope
shll
push
lret
mov
jae
je
test
push
out
pop
clc
sub
bound
rcrb
mov
lock
mov
popf
lea
cmpsl
push
pop
jmp
and
imul
dec
push
xor
jmp
mov
jp
imul
push
ss
add
lret
jns
arpl
push
je
insl
call
mov
enter
lods
rcl
call
cmp
fistpll
add
jle
mov
fcompl
jl
sbb
dec
dec
push
jge
jne
push
adc
shll
mov
jo
daa
int3
unpckhps
insl
jge
or
adcl
shr
insl
add
sarb
jl,pn
sbb
or
dec
js,pt
ss
jo
fcoml
push
movl
cli
imul
stc
popa
out
sub
mov
les
mov
repnz
add
push
sub
push
sub
pop
aad
mov
enter
in
push
out
insl
movl
std
ds
push
sbb
in
andl
push
inc
insl
push
gs
aad
pop
mov
outsl
jmp
xor
in
leave
int
mov
out
jnp
mov
fstpt
lock
sbb
fnstenv
fstp
fcoms
cld
mov
push
sbb
jb
loope
pop
loop
jecxz
in
fsubl
inc
mov
cld
out
push
out
cmp
cmc
stos
movsl
xchg
test
jo
or
into
in
xchg
fdivs
call
xchg
or
add
cld
cmpb
repz
or
faddl
jmp
js
adc
dec
movsl
out
cmp
push
xchg
std
push
divl
xor
imul
dec
sarl
gs
or
hlt
jmp
loope
call
outsb
fiadds
sub
adc
or
sbb
and
fincstp
sbb
test
lea
push
mov
xchg
testb
jb
fldpi
sub
inc
inc
or
ret
jbe
pusha
mov
pop
dec
push
push
xlat
pop
add
pop
clc
test
push
lcall
rorb
mov
add
lock
xchg
outsl
or
test
test
mov
sbb
decl
push
push
imul
push
sahf
div
sub
fcomip
das
mov
add
mov
or
dec
add
mov
jl
jl
and
mov
jnp
lret
fsubrs
insl
pop
outsb
fcmovnu
mov
add
add
movsb
shlb
filds
loopne
in
pop
shll
inc
jo
and
sbb
xlat
ret
inc
push
cmp
loopne
adc
sbb
dec
mov
push
push
mov
pop
mov
jbe
push
rcl
xor
lahf
out
out
fucomp
push
push
hlt
mov
push
push
jge
mov
insb
fists
test
sub
adc
std
sti
cmp
cmpsl
cmp
je
lret
inc
or
repz
pop
nop
shlb
xchg
sbb
ss
dec
into
nop
sbb
rcrb
pop
mov
addl
xor
or
mov
push
push
aaa
jno
dec
pushf
das
call
fmul
xlat
jg
xor
pushf
pusha
lods
pop
sti
xchg
xor
jge
jle
cmpl
sub
add
ja
inc
jns
aad
or
cmpl
push
mov
cs
pop
pop
adc
fiadds
add
pop
add
cli
push
loope
mov
stos
mov
jbe
xchg
in
pop
rcrb
push
or
int3
sub
fsubrs
mov
sbb
sbbl
jne
filds
sbb
mov
mov
push
add
push
gs
rdmsr
inc
imul
js
test
stos
gs
push
jnp
mov
or
push
int
mov
mov
mov
ja
ret
mov
lods
shll
push
pop
mov
xchg
mov
push
xchg
or
or
rol
in
jmp
sarb
and
fsubrl
outsl
notb
xchg
call
push
mov
or
je
shll
aaa
pop
cmp
in
inc
ja
in
jmp
sub
fwait
test
sub
cwtl
jl
mov
jo
pushf
adc
push
push
outsl
call
jmp
lcall
mov
or
jns
mov
loopne
push
jne
push
sbbb
jp
adc
adc
call
or
adc
pop
sub
lods
mov
xor
and
push
adc
jle
xchg
jle
push
add
add
jne
lahf
inc
insl
pop
pop
pop
inc
pusha
sbb
xchg
mov
enter
mov
mov
mov
mov
or
js
xor
xor
jns
daa
jl
or
xchg
add
xor
ss
xor
pop
nop
pop
jl
jo
push
and
mov
leave
sub
push
xor
test
push
stos
xchg
add
test
jb
bound
cmp
dec
jle
add
add
int
cmp
xor
xor
xor
cmp
or
mov
or
dec
inc
inc
xchg
jo
movsb
pop
xor
xor
outsb
je
pop
sti
mov
hlt
jo
sbb
cmp
add
aad
adc
and
pushf
rorl
ret
in
scas
add
mov
stos
fcomi
sub
test
mov
es
adc
adc
hlt
stc
pop
ja
aaa
sbb
xor
jl
jecxz
cmp
xchg
out
pusha
xor
xchg
push
adc
pop
add
adc
sbb
call
lahf
fdivrs
jae
push
or
cli
fisubl
xor
ss
lret
clc
or
ja
xchg
enter
sbb
aaa
jbe
fmull
mov
mov
sub
fnsetpm(287
outsb
popa
call
mov
loop
mov
repnz
add
push
add
add
adc
les
in
push
and
mov
shr
and
or
inc
add
pop
stos
outsl
imul
and
inc
mov
rcrb
fcmovnu
sub
sbb
icebp
aaa
pop
inc
cmp
jl
mov
push
cmc
int3
add
or
pop
push
xchg
lcall
add
and
cmp
fcompl
or
and
push
cmpb
and
pop
xchg
aam
int
mov
call
scas
call
decb
cmpsb
mov
or
sub
adc
inc
mov
inc
aad
xchg
sub
inc
jecxz
js
jb
inc
mov
gs
in
mov
ja
push
sbb
xchg
mov
mov
mov
jl
std
leave
std
or
and
adc
pusha
dec
push
dec
pop
addl
sti
mov
push
je
jbe
pop
mov
adcb
push
push
sub
and
lds
pop
mov
js
mov
nop
mov
ret
add
xor
shlb
sbb
inc
sbb
pop
add
sub
xor
loop
lea
or
adc
and
inc
mov
dec
or
lret
sub
sahf
jl
mov
jns
cmp
hlt
ja
arpl
insb
jge
int3
js
out
int
jo
fadds
jl
inc
and
repz
and
cmp
add
sub
arpl
cmp
jo
add
jbe
movl
inc
cltd
pop
add
and
les
inc
iret
xchg
or
and
mov
inc
cmp
ss
add
shlb
sbb
sub
ret
xor
outsb
in
or
dec
sbb
inc
jns
push
imul
jo
cltd
xor
push
jecxz
mov
sub
push
push
push
shl
push
or
cmp
adc
andl
cmp
in
add
outsl
imul
enter
fwait
xchg
sub
inc
inc
push
sbb
sbb
insl
fsubl
jbe
push
fucomip
xchg
lods
leave
inc
jno
inc
inc
dec
add
and
jb
cmp
ret
cmc
pushf
inc
imul
mov
in
jae
adc
insb
sbb
dec
loope
test
aaa
fiadds
add
dec
es
clc
fdivrs
addr16
and
push
inc
inc
dec
or
fidivrl
sub
and
xchg
inc
xchg
and
or
pop
mov
fisubrl
mov
or
inc
imul
arpl
inc
xchg
popa
sbb
jg
add
adc
jns
imul
lods
xlat
xor
xor
insl
add
outsl
imul
and
aas
aas
xor
mov
and
inc
pop
dec
inc
pop
psraw
jae
dec
mov
add
iret
andb
add
jle
jb
insb
jae
lret
aaa
jne
mov
adc
adc
bnd
xchg
dec
add
call
push
je
sbb
inc
push
sar
pop
dec
adc
mov
dec
push
inc
sbb
sub
mov
das
adc
cmp
cmp
cmp
cmp
cmp
aaa
cli
incl
inc
cmp
cmp
cmp
cmp
cmp
cmp
idiv
pushl
ds
lods
sarb
idivb
or
xor
add
test
xchg
aas
cltd
jmpw
aas
enter
in
aas
idivl
cld
aas
xchg
inc
insb
mov
xor
xor
xor
xor
xor
xor
xor
jg
xor
xchg
xchg
xor
jmp
hlt
xor
adc
and
xor
imul
xor
adc
pop
xor
xor
mov
and
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
cli
insl
push
lcall
mov
xor
xchg
xor
xor
xor
sbb
xor
xor
xor
xor
push
xor
pushl
jl
xchg
mov
icebp
xor
xor
xor
xor
popa
xor
outsb
xor
loope
stc
xor
pushl
or
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xor
lcall
aaa
xchg
aaa
mov
aaa
add
or
sbb
sub
decl
cmp
cmpsb
cmp
cmp
push
cmp
aaa
sub
pop
cmp
jno
jnp
xchg
cmp
cmp
mov
cmp
pop
cmp
jge
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
sbb
pop
cmp
leave
cmp
popa
cmp
cmp
cmp
cmp
cmp
int3
cmp
aaa
cld
jbe,pt
jge
cmpb
movsl
ds
mov
aas
push
aas
pop
aas
pop
aas
jne
mov
aas
cmpb
aas
xchg
aas
mov
adc
popf
jg
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jge
pushl
out
out
xor
xor
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
jg
pushl
addr16
mov
mov
xor
xor
insl
sbb
dec
pushl
addr16
xorl
les
adc
and
jp
mov
mov
rclb
cmp
cmp
cmp
cmp
pop
cmp
outsl
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
xchg
mov
cltd
cmp
cmp
cmp
cmp
cmp
lcall
out
repz
cmp
cmp
test
mov
cmp
cmp
cmp
decl
mov
cmpl
mov
cmp
cmp
cmp
loope
ljmp
and
ss
sti
add
inc
in
call
aas
sarl
loop
clc
mov
fbld
xorb
xor
xor
xor
cmp
mov
xor
xor
ja
sbb
push
cmp
lea
clc
xchg
clc
xor
xor
xor
arpl
push
leave
xor
xor
xor
jg
call
mov
ret
xor
xor
xor
xor
sbb
lock
cmp
xor
repnz
mov
dec
ss
xorb
ss
divb
cld
add
or
push
incl
mov
sub
bound
jb
js
xor
xor
or
xor
xchg
adcl
sbb
adc
mov
nop
mov
neg
aaa
jno
mov
je
dec
pop
shrb
cmp
fildll
sti
mov
mov
cmp
adc
dec
fs
add
cmp
mov
int
add
pusha
loopne
and
lods
push
nop
test
pusha
mov
sub
in
mov
jb
add
adc
sti
jae
arpl
ret
bndldx
jb
add
inc
xchg
add
call
bswap
jbe
and
mov
xor
dec
mov
sbb
out
shll
mov
xor
mov
xchg
adc
subb
stos
mov
insb
cmpl
outsl
aam
cmp
js
dec
shll
push
push
inc
sub
rcrw
inc
adc
push
dec
dec
inc
and
mov
and
rolb
ja
pop
and
inc
outsl
add
fdivs
pop
dec
gs
outsl
popa
jb
and
outsl
jne
jae
xor
cmp
push
scas
add
or
lds
push
sub
ljmp
dec
dec
and
mov
imul
push
push
inc
and
stc
adc
add
or
mov
push
rep
or
cs
int3
and
add
pop
flds
push
popf
pop
inc
movl
push
in
mov
mov
mov
jne
lods
mov
mov
mov
or
mov
into
adc
dec
sbb
fisttps
stos
pop
sbb
js
lods
std
rcrb
add
xchg
in
popa
data16
cwtl
in
cmpl
cmp
pop
gs
insb
outsb
mov
pop
in
jne
sbb
loopne
fs
sbb
idivl
rolb
adc
gs
rclb
iret
mov
xor
xchg
xor
popa
or
add
mov
in
or
dec
test
pop
pop
mov
and
rcr
jg
sbb
ret
nop
xchg
and
scas
scas
cmp
xor
leave
and
and
or
dec
bound
inc
mov
les
pop
push
sub
add
mov
in
imul
push
lret
mov
aam
insb
insb
inc
lret
mov
sub
insl
dec
mov
pushf
insb
xlat
outsb
je
insb
mov
add
inc
inc
bound
push
es
mov
mov
mov
push
inc
or
loopne
jb
sub
dec
insl
insl
inc
je
xchg
sub
dec
dec
inc
insb
cwtl
xorb
mov
sub
mov
adc
aad
test
shl
push
jle
jg
xchg
adcb
cmp
mov
loopne
cmp
xor
ror
aaa
dec
call
outsb
cmp
push
and
lret
iret
mov
push
addr16
dec
nop
cmp
out
sbb
lret
and
in
jl
js
insl
push
and
fs
and
gs
scas
jne
jnp
push
push
mov
jmp
leave
call
jb
sbb
pusha
cli
out
clc
addr16
xor
push
pop
ds
xchg
xor
push
mov
push
jmp
and
lea
inc
inc
push
inc
push
cmp
jo
xchg
pop
add
xor
in
icebp
js
adc
in
sub
cmovge
test
xor
ss
mov
mov
mov
inc
and
push
xchg
dec
add
mov
pushf
sub
push
sub
adc
sbbl
test
inc
mov
push
and
push
adc
mov
cmp
and
pusha
xchg
xchg
pop
leave
out
add
lock
pusha
add
and
and
cmp
add
push
push
pop
add
js
in
and
xchg
cmpsb
call
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
cltd
mov
out
jl
inc
daa
jl
lods
std
scas
std
jnp
push
hlt
scas
sbb
push
and
sbb
std
mov
mov
mov
mov
mov
stos
pop
loope
mov
cli
mov
data16
pop
mov
push
test
imul
lods
lds
arpl
push
mov
dec
xchg
mov
sub
push
loopne
jb
jb
mov
lret
cs
xor
add
push
mov
lret
sub
sbb
fildl
add
ss
por
and
insb
pusha
mov
or
shlb
dec
xlat
ret
lock
jb
add
popa
addr16
mov
subb
gs
lret
mov
je
gs
pop
ss
outsb
insb
gs
xchg
in
outsb
arpl
je
pop
xchg
jb
gs
jno
daa
lret
push
sbb
imul
pop
xchg
gs
insb
inc
dec
xchg
outsl
jb
sbb
loop
mov
mov
in
xor
test
out
xchg
dec
xchg
in
test
mov
mov
inc
pop
adc
jbe
sete
inc
inc
je
imul
cmp
lea
or
or
clc
insb
and
shlb
outsb
stc
jnp
mov
clc
lret
cmc
xchg
loop
sbb
sbb
fimuls
push
mov
or
pop
repz
ret
jbe
pop
mov
push
test
shlb
push
aam
add
fcomp
lods
adc
or
or
mov
imul
clc
dec
and
mov
mov
dec
pop
add
rcrb
cwtl
push
mov
or
adc
mov
fisubrs
nop
mov
pop
push
pop
test
jp
mov
jge
adc
or
shrb
movsb
add
sbb
mov
sete
xor
fsubrs
in
xor
pop
mov
arpl
inc
add
fstpt
pop
lea
or
mov
or
jo
js
push
cmp
sbb
cmc
or
jne
or
or
push
add
or
insb
sub
add
and
mov
and
mov
xchg
cmpl
push
add
mov
push
sbb
jmp
testl
or
lcall
addr16
adc
jae
cmpsb
mov
add
and
and
and
and
adc
das
stos
xchg
inc
movsb
out
push
xor
ror
add
rorb
sbb
push
cltd
ret
adcb
mov
jno
stos
xor
rcrb
or
rcrl
push
adc
cs
clc
dec
xor
pop
in
push
gs
xchg
ja
jmp
sti
lods
jne
jae
push
mov
push
outsb
jb
or
jbe
mov
js
rcrl
adc
fsubrs
cwtl
dec
pop
adc
in
add
jnp
add
call
shlb
push
mov
sub
mov
jb
imul
test
icebp
xor
and
icebp
andnps
dec
insl
insl
dec
jae
lods
pusha
pop
shrl
lods
xchg
jnp
push
and
mov
bound
mov
shrb
push
insl
add
pop
sbb
cmp
xor
push
add
xor
shrl
mov
dec
lcall
into
push
imul
xor
pusha
ret
cmp
leave
fcom
sub
gs
or
cmpsb
dec
shll
enter
shll
pop
out
clc
or
imul
xor
jge
add
adc
xchg
leave
add
bound
push
repnz
scas
xchg
lods
adc
push
fbstp
adc
bound
es
jns
mov
sub
outsl
insl
jo
arpl
or
push
jne
pusha
mov
mov
sub
jbe
and
adc
sbb
xlat
adc
fnstenv
pop
jno,pn
loope
sbb
adc
xchg
add
dec
or
sbb
jnp
imul
and
jns
jae
cltd
bound
xor
xchg
ret
jp
pop
jns
pop
adc
lret
out
shrl
je
popa
test
xor
int3
push
mov
adc
loop
mov
inc
imul
dec
outsl
sbb
flds
mov
push
pop
cmp
add
xchg
pop
xchg
push
add
lods
push
repz
add
xor
or
dec
inc
cmovns
into
aas
xlat
add
add
imul
stos
add
pop
pop
inc
adc
or
add
mov
imul
jecxz
insl
cmp
or
ficomps
jmp
xor
jecxz
insl
scas
jmp
inc
and
xor
jae
xlat
xor
add
movsl
popa
and
inc
add
addr16
jmp
arpl
inc
imul
ss
push
sub
push
adc
int3
xor
and
and
xor
add
xchg
insb
popf
mov
ret
xchg
pop
dec
or
lds
jge
jo
popf
addr16
dec
adc
xchg
pop
xor
int
pop
idivl
add
sub
mov
imul
dec
sbb
imul
push
daa
jbe
mov
inc
shll
fs
outsl
insb
inc
push
je
and
out
sub
lods
xor
adc
mov
arpl
fmulp
js
and
fstp
jmp
xchg
or
mov
icebp
inc
add
push
aaa
shlb
repz
jg
decl
adc
xor
push
xchg
xor
xor
xor
xor
pusha
mov
mov
ja
lcall
pop
fisttps
xor
xchg
xor
and
pop
ss
jmp
mov
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
aaa
or
pop
cmp
jg
subb
cmp
cmp
cmp
cmp
les
into
mov
pop
and
fidivrs
jmp
cmp
cmp
cmp
js
clc
pop
mov
sbb
cmp
add
call
or
cmp
pop
ds
lcall
mov
rol
push
inc
nop
pop
adc
jle
outsl
mov
xor
out
add
call
dec
shll
outsl
or
psrad
sub
add
mov
incb
lret
mov
add
mov
add
rol
clc
add
or
push
cmc
ret
js
add
add
add
jbe
je
inc
jo
sbb
adc
xchg
ss
sbb
jo
repnz
fildl
push
or
fiaddl
sahf
xchg
test
or
mov
rcrl
or
add
stos
mov
sbb
jecxz
xlat
add
imul
insb
dec
int
and
add
sbb
push
je
mov
icebp
add
mov
into
add
pop
cmpb
invlpg
test
into
inc
add
out
cmp
andb
push
rcrb
fs
push
cmp
xchg
jbe
nop
sbb
xor
cmp
ret
pop
enter
xchg
mov
enter
rolb
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
