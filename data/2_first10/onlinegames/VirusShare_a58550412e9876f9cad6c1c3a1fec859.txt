in
call
push
push
push
push
call
mov
mov
and
push
aas
fistl
pop
and
test
jne
pop
pop
pop
pop
pop
ret
push
adc
insb
xchg
rclb
and
call
filds
sbb
push
mov
push
mov
insl
divl
add
add
jne
fistl
or
sarb
dec
and
ret
imul
push
adcl
adc
mov
sti
popf
sbb
add
adc
push
jne
push
fidivs
mov
mov
je
ja
es
adc
outsb
xlat
jmp
out
mov
test
dec
push
push
lret
fsubrl
sbb
mov
jns
jnp
xchg
je
dec
cmp
xchg
aaa
fwait
cmp
mov
mov
mov
jmp
mov
sbb
mov
or
fs
or
fcoml
push
cltd
xlat
xchg
sbb
pop
sub
mov
add
mov
in
into
insl
pop
lahf
add
stos
mov
push
push
jno
in
fstpl
xor
push
inc
ret
out
or
es
push
call
mov
xchg
pop
je
cs
lock
outsb
pop
int3
adc
scas
lock
and
mov
jge
or
or
add
push
push
and
push
je
mov
xlat
mov
in
sbb
push
push
daa
pop
fwait
mov
or
in
or
dec
stc
pop
xchg
out
add
adc
cld
add
xchg
arpl
adc
fstpt
mov
mov
mov
dec
or
fwait
cmp
mov
mov
lock
sbb
xchg
or
and
cmpsl
pop
xor
lahf
cmp
je
fstl
xchg
cld
cmp
push
outsl
sbb
sbb
lcall
or
push
insb
jbe
jmp
pop
inc
xchg
adc
ffreep
dec
push
add
scas
mov
pop
pop
in
push
push
pop
sub
int3
iret
lea
inc
sbb
mov
xchg
test
push
pop
push
popa
jmp
pop
push
mov
rorl
add
mov
add
push
mov
dec
in
daa
aas
push
mov
rorl
rcrl
insl
cmp
sbb
sub
icebp
mov
jmp
push
dec
and
add
out
popf
lcall
add
mov
xlat
or
adc
pop
add
movb
jle
jle
push
push
lea
mov
mov
mov
cmp
imul
sar
mov
shr
add
mov
and
jne
mov
add
dec
mov
jg
aaa
cwtl
sti
insb
push
sbb
outsl
push
test
mov
push
sbb
xlat
mov
jbe
loope
pop
and
push
pop
push
adc
mov
xor
dec
pop
push
loope
dec
mov
movl
cmpsb
ss
xor
mov
and
es
loopne
xor
mov
push
xlat
and
dec
push
je
pop
imul
sbb
pop
das
pop
lahf
sub
push
addr16
sbb
push
pop
push
push
test
or
ds
jle
adc
je
pop
dec
pop
inc
fcmovb
pop
stos
sbb
mov
out
push
lock
ljmp
or
xor
mov
cmp
jl
jbe
clc
or
jg
call
pop
cmp
jl
xchg
jecxz
ljmp
sub
and
lock
jno
cmp
test
mov
mov
aas
add
xchg
test
stos
rorb
iret
leave
mov
stos
and
jns
ja
push
mov
out
lock
jg
adc
pop
add
leave
sbb
sub
sub
lea
sub
adc
outsl
inc
rorl
rorl
lret
add
jo
stos
sub
sub
jae
dec
iret
and
add
jnp
add
insb
xor
ret
test
rorb
test
adc
adc
lret
subl
aas
cmp
sbb
adc
push
xlat
push
je
pusha
shrb
outsb
or
rolb
sbb
mov
cmp
jle
inc
push
push
mov
cmp
punpckldq
outsl
inc
sbb
xchg
cmc
sbb
sub
push
cmp
lcall
and
push
mov
cmp
inc
add
aaa
sti
outsw
test
mov
ds
or
inc
pop
inc
add
pop
cmpsb
jmp
cltd
ja
int
mov
fimuls
xchg
movsl
push
or
or
cvtdq2ps
add
adcb
xlat
insl
adc
and
int3
call
mov
mov
xor
push
pop
dec
lds
and
dec
xchg
jecxz
sbb
push
lea
jecxz
pop
fldcw
sbb
cltd
mov
push
fld
adc
fdivl
mov
mov
out
popa
out
xor
push
mov
inc
sub
push
xor
xchg
out
or
push
sbb
sbb
push
mov
cmp
xor
test
out
mov
pushf
cmp
pop
cmpw
xorl
push
lahf
adc
mov
dec
or
add
jns
mov
mov
mov
or
in
sub
or
fs
test
pop
push
mov
lds
pop
cmp
repnz
or
fldl
sub
loope
push
jle
mov
lds
jg
adc
popa
and
data16
push
jbe
mov
test
stc
mov
or
cld
data16
lahf
roll
pushl
add
mov
pop
das
outsb
js
xchg
insb
mov
shlb
mov
addr16
movsb
clc
insl
enter
clc
push
insb
mov
mov
mov
xchg
popa
sbb
mov
test
adc
dec
push
jne
push
mov
xchg
and
xor
in
je
push
ret
mov
lahf
jmp
dec
sub
mov
imulb
mov
lock
aam
jp
mov
ret
xor
shl
testb
adc
cmp
fs
mov
mov
mov
lcall
sbb
shll
jp
lcall
bound
out
fldenv
and
jmp
and
movsb
sub
in
inc
cwtl
and
mov
dec
pop
leave
push
and
xchg
lods
nop
push
mov
stos
mov
jmp
nop
add
inc
dec
dec
xor
cs
insb
repnz
or
out
cld
dec
inc
dec
push
dec
outsl
outsb
pop
push
cs
jbe
ja
pushl
imul
or
push
inc
push
push
out
iret
mov
xor
jae
jae
push
mov
idivl
arpl
and
arpl
and
adc
fcompl
popa
sbb
inc
jbe
arpl
outsb
sub
in
cmpsb
dec
push
xor
addr16
shll
push
add
sbb
pop
mov
add
movsb
inc
cmp
mov
movsl
jae
xor
addr16
xchg
pop
outsb
insb
popa
arpl
cs
gs
gs
outsb
pop
int3
jge
je
add
inc
insb
imul
std
ja
jb
pop
dec
cmpsb
jb
jae
pop
push
cli
outsl
ja
pop
push
mov
test
push
outsl
popa
insl
sbb
push
lods
rolb
push
ret
lods
lcall
imul
negb
xchg
arpl
mov
cs
pop
pop
jbe
insl
or
add
and
je
pop
ja
push
test
xor
popl
add
add
push
add
dec
pop
nop
add
add
enter
mov
fucomp
add
pop
mov
int
mov
imul
or
jmp
popa
insl
and
outsb
outsb
outsl
je
bound
arpl
imul
inc
dec
push
and
fs
ja
testb
mov
add
or
es
mulb
fcompl
in
adc
enter
mov
jae
cmp
ret
es
es
jns
sti
enter
arpl
stos
push
inc
sti
psubq
add
mov
add
or
or
lcall
imul
pop
add
add
es
pop
xor
add
pop
push
mov
dec
aam
adc
add
movups
lcall
xchg
mov
les
jge
push
clc
pushl
and
leave
xchg
daa
inc
xor
and
daa
shrb
cmp
jmp
or
dec
sub
mov
in
mov
mov
pusha
cmc
push
mov
mov
push
call
ret
int3
int3
ud0
repnz
push
mov
adc
mov
mov
or
or
lcall
decl
push
sbb
sti
filds
adc
pop
ret
add
sub
sbb
jge
cld
decl
je
xor
jmp
jmp
push
in
pop
lret
sbb
data16
jnp
in
and
je
push
call
pushl
mov
sub
sub
inc
lods
mov
jb
je
popf
subl
jmp
mov
shll
push
pop
sbb
pop
or
adc
sub
inc
pop
mov
in
sub
and
jne
push
push
and
mov
or
pop
push
incl
or
imulb
mov
fwait
hlt
inc
daa
or
in
fnstcw
hlt
fcompl
in
jmp
dec
jnp
pushl
push
clc
add
in
mov
cmp
push
mov
add
test
outsb
mov
decl
push
jo
add
ret
ret
das
test
add
xor
outsl
inc
call
mov
push
ss
and
aas
sti
jo
sbb
std
jmp
or
or
jmp
xor
repnz
add
pushl
js
jo
fistpll
in
aam
fcoml
icebp
popl
add
inc
and
neg
lea
push
outsl
inc
incl
push
pushf
loop
mov
pop
loope
arpl
mov
call
or
xchg
add
mov
das
sti
sub
cmp
adcb
inc
loope
imul
adc
jg
pushl
jmp
jmp
xor
jmp
and
sti
fsubs
sbb
dec
push
lcall
pop
mov
in
dec
es
mov
pop
sub
sbb
popl
push
sar
xchg
mov
lea
xor
push
push
into
ljmp
mov
test
out
shll
mov
cmp
mov
ss
push
mov
add
xchg
adc
fnstenv
inc
mov
adc
imul
and
clc
xchg
dec
and
add
ljmp
call
test
inc
pop
xchg
jbe
test
jno
lahf
add
add
jno
push
sub
add
or
add
cmpl
inc
mov
in
lods
call
pop
add
data16
aaa
adc
adc
addr16
addb
call
push
xor
mov
mov
rcr
jae
cmp
jne
xor
lock
loop
decl
hlt
pop
mov
jl
or
push
xorb
add
jle
test
add
lcall
stc
adc
mov
in
insb
adc
sbb
dec
mov
add
idiv
jns
dec
cli
push
jne
jno
jae
enter
pop
or
outsl
in
dec
imul
adc
xor
fnstsw
das
add
inc
push
flds
inc
cld
incl
fsts
mov
xor
push
adc
popf
nop
test
rcll
fsubrl
std
and
inc
pop
sbbl
and
mov
ret
cmp
incl
sbb
or
ss
adc
call
add
push
pushf
mov
sbb
and
lcall
mov
test
push
and
push
sbb
imul
mov
inc
jne
inc
pop
adc
imul
pop
fldl
fwait
mov
mov
in
and
or
movb
enter
mov
pushf
add
idivb
xchg
mov
ja
js
ja
imul
pop
cs
jg
incl
and
repnz
jne
pop
and
cmp
or
sub
push
jne
stc
lret
jmp
jl
push
push
call
push
out
inc
insl
dec
mov
dec
aad
ds
outsb
xchg
decl
mov
fidivl
push
mov
popl
cmp
push
out
pop
movsb
std
pop
in
sbb
and
push
jne
cmp
pushf
das
pop
cs
das
ss
jmp
fucom
inc
mov
hlt
es
out
outsl
xchg
adc
stos
sub
or
in
inc
push
lcall
clc
mov
stc
push
jno
push
and
xchg
mov
xchg
push
aas
xor
pop
xchg
mov
cmp
cmp
adc
adc
int3
cs
decl
push
add
gs
je
jb
pop
out
push
imul
cs
lret
rep
hlt
ja
fldl
or
cli
inc
sti
js
inc
mov
fwait
pop
std
mov
in
push
jb
mov
ret
mov
popf
mov
mov
mov
call
push
mov
sub
bound
hlt
lcall
jae
pop
xor
mov
push
pop
je
jb
in
adc
inc
repnz
cwtl
push
mov
jl
inc
jb
insl
mov
call
cmc
mov
mov
jbe
fildll
test
call
mov
sbb
cmp
sti
inc
push
xchg
and
cwtl
xchg
insb
mov
pushw
push
mov
and
mov
ljmp
mov
mov
sbb
xor
xchg
xchg
and
cs
or
cli
sub
mov
xchg
mov
ljmp
cli
jmp
xchg
jb
in
mov
data16
movsb
push
fistpll
pop
test
inc
jg
inc
lods
xchg
sub
add
mov
and
and
lods
outsl
cld
call
add
mov
dec
cmp
rcrb
cmp
sbb
mov
pop
fsubl
test
int3
cmc
insb
pop
pushf
call
call
sbb
inc
clc
mov
daa
popf
pop
cwtl
test
mov
and
jo
mov
inc
aam
ljmp
andb
xchg
pop
arpl
xchg
push
insb
sub
push
pop
flds
fnstcw
inc
adc
or
popa
xchg
pop
jb
decl
in
call
xor
xchg
dec
cld
lods
add
cmp
cmovns
jmp
clc
popf
fldcw
scas
xor
xlat
push
push
loopne
ja
sti
aad
or
cmp
popa
xor
fdivs
ret
push
add
outsb
hlt
lcall
or
add
imul
sbb
xchg
out
pop
clc
aaa
shrb
hlt
cmpsl
cli
push
push
inc
xor
add
xor
incl
lcall
push
lods
sub
inc
push
fcoms
cmp
cmp
call
xor
out
lods
or
imul
jne
cmp
mov
lcall
mov
add
cmp
notl
mov
gs
in
sub
pop
mov
fdivr
int
dec
sbb
sar
or
lcall
mov
push
fdiv
cld
mov
divl
or
and
add
xchg
cli
in
mov
loop
mov
pop
test
pop
imul
mov
ljmp
adc
sahf
pop
push
negb
xchg
mov
lods
adc
pushl
inc
adc
test
xchg
cld
adc
daa
push
cld
test
lcall
repnz
jmp
xchg
pop
out
mov
mov
xor
lcall
adc
xor
adc
and
rcll
or
pushl
mov
xor
push
inc
cwtl
inc
shlb
int3
sbb
pushf
jmp
cwtl
or
and
or
in
cmp
shl
ljmp
or
daa
inc
add
pusha
add
icebp
sub
add
rclb
jae
cld
clc
and
xchg
jmp
pop
loop
shll
or
pop
clc
bound
cmp
call
push
call
add
sbb
or
push
insl
call
fisubs
in
sub
or
sbb
ja
shrl
pop
sub
or
loopne
outsl
fucomip
cmp
jnp
mov
cld
movb
pop
lods
jo
cltd
sub
jg
jmp
ss
inc
int3
cmp
iret
scas
mov
sub
jl
loop
inc
dec
adc
mov
les
je
shrl
cli
pop
pop
or
lcall
mov
fmuls
and
fld
add
or
cs
fdivr
sbb
adc
inc
sbb
aad
push
pusha
shll
push
mov
pop
push
mov
mov
adc
cmc
pop
call
cmp
jns
fs
rclb
nop
push
decl
cld
pushl
push
je
daa
and
xchg
cmp
jp
sbb
lock
jmp
add
and
mov
xlat
mov
pop
dec
adc
mov
pop
sbb
mov
dec
movb
lcall
sbb
ss
clc
lock
imul
in
jge
pop
into
xchg
push
out
mov
mov
mov
das
mov
sbb
mov
jmp
adcb
mov
lahf
ljmp
hlt
cmp
mov
out
push
loope
jge
mov
mov
pushl
jl
out
or
lods
xchg
cmp
data16
and
cmc
das
aam
call
orb
pop
movl
jmp
adc
add
decl
adc
add
jae
adc
jp
mov
cmp
js
pop
jg
mov
push
je
cld
fwait
popa
fnstcw
mov
or
iret
dec
push
or
jg
inc
jne
inc
lock
or
enter
mov
fstp
push
mov
test
add
jmp
mov
je
mov
sbbl
enter
outsb
dec
loop
pop
outsl
or
jbe
jecxz
pop
outsb
sub
outsb
dec
repz
jbe
xor
das
cld
jg
sarb
ja
mov
jns
add
and
and
pushl
or
enter
xor
and
cmp
xchg
cmp
adc
xchg
dec
sbbb
mov
cli
shl
jecxz
xor
cmpsb
add
mov
cmp
adc
test
mov
rorb
push
and
adc
fs
sbb
sbb
mov
and
fadds
xor
or
sbb
inc
cmpsb
nop
sub
sub
cltd
push
push
cwtl
or
lea
add
stos
mov
push
mov
inc
enter
jg
mov
add
or
popf
lret
mov
inc
mov
test
stc
mov
lret
mov
loop
flds
push
cmp
insl
mov
roll
lcall
push
sbb
cld
or
sub
repnz
loopne
movsb
xchg
sbb
test
test
fs
mov
pop
and
idiv
pop
add
adc
test
pop
sbbl
mov
xor
add
mov
push
push
in
add
popa
mov
cmp
test
add
cmp
outsl
jecxz
mov
mov
outsl
mov
int3
enter
jmp
hlt
adc
add
cmpsb
ret
pop
hlt
insl
xor
mov
ret
loop
outsb
inc
cmp
or
dec
imul
or
pushf
mov
push
dec
add
enter
fbstp
nop
ljmp
mov
xchg
adcl
in
enter
jne
cld
pop
loopne
sub
sub
push
sub
sub
add
je
je
add
jge
pop
push
add
add
inc
inc
in
mov
add
inc
push
adc
in
push
add
sub
adc
xor
xor
mov
jg
into
imul
and
je
jg
in
sbb
adc
mull
or
pop
movsb
xchg
stos
mov
ljmp
data16
mov
xorb
xlat
push
push
cmpb
das
jno
jmp
xchg
lahf
dec
les
and
add
add
pushl
lahf
in
in
xchg
sahf
mov
jae
lock
ljmp
sub
cmp
pop
inc
rol
and
int3
xchg
mov
lcall
sbb
std
mov
push
cmp
or
outsl
cmp
fisttps
and
push
push
dec
repnz
mov
mov
sbb
xor
and
pop
mov
mov
mov
jg
add
int
pushl
clc
pop
bnd
cld
fisubrs
test
js
ja
inc
nop
sub
cwtl
fwait
into
sbb
cltd
sub
add
shl
int3
gs
call
lods
pop
test
test
inc
cs
push
lea
decl
decl
mov
mov
insb
or
je
xchg
dec
adc
pop
in
aaa
pushl
cmp
xor
push
sub
jb
or
push
data16
pop
call
ret
mov
fbstp
je
jg
dec
sbb
jns
test
or
adc
cmpsl
sub
data16
int3
sub
decl
inc
and
pushl
mov
jmp
rcr
rep
movsw
movsb
xor
xor
es
jbe
mov
add
pop
add
or
push
mov
shlb
les
fnstsw
lcall
lods
lock
les
and
mov
cmpsb
sbb
and
xchg
cmp
mov
mov
xchg
in
push
adc
push
xchg
scas
and
adc
push
mov
xor
inc
sbb
jae
adc
sbb
sub
jae
mov
filds
pop
clc
mov
seto
orb
sub
clc
cmp
mov
adc
addr16
shl
and
jmp
or
hlt
jae
sub
inc
fstl
leave
dec
loopne
xor
push
cmp
inc
sbb
imulb
icebp
ljmp
add
inc
jbe
add
jo
sbb
ljmp
or
mov
clc
mov
sub
and
ret
std
jmp
pop
inc
pusha
imul
daa
fwait
and
inc
fs
lcall
mov
sbb
push
xor
lock
mov
rcll
cld
pop
push
out
test
xor
out
shrl
pop
jl
fst
movsb
sbb
fistpl
rolb
test
arpl
or
sbb
xchg
insb
jb
ret
ja
jg
jmp
dec
sti
inc
mov
lea
scas
pop
pop
repnz
std
ljmp
push
sarl
leave
pop
mov
test
mov
outsl
hlt
lods
fisubs
ss
push
sbb
pop
outsb
sbb
or
std
std
leave
push
xchg
sub
jns
popa
lods
popa
loopne
cld
ljmp
call
pushf
sub
rol
popa
push
popa
call
or
xchg
ljmp
je
mov
hlt
or
enter
arpl
inc
call
sbb
add
xlat
mov
push
xor
and
decl
gs
out
movsb
jno
sbb
add
enter
decl
scas
rorl
js
jae
leave
pop
lea
mov
rorl
jg
mov
and
aad
in
push
xchg
addr16
cmp
aaa
clc
pushl
mov
repnz
sti
cld
cli
fists
dec
mov
mov
push
ljmp
lock
cmp
mov
and
xor
push
cltd
mov
fwait
in
mov
jno,pt
mov
mov
stos
pushl
cli
nop
or
jg
out
cmp
scas
sub
xor
cs
call
cmp
sahf
cmp
shrb
test
test
sub
push
sub
movsl
push
incl
les
or
xchg
int3
into
sahf
cmp
jl
outsb
jl
dec
or
cmc
sbb
sub
incl
mov
repz
adc
aaa
clc
sbb
stos
sub
pop
xchg
jmp
decl
call
fs
test
or
jns
or
in
add
call
decb
or
push
inc
sub
add
ret
dec
push
sub
push
out
aad
shlb
jp
notl
mov
jno
call
mov
lods
sbb
aam
jne
jne
and
mov
lret
cmp
sbb
mov
ficomps
mov
sbb
std
jg
jg
mov
and
pop
mov
setle
push
jns
sbb
jmp
fimuls
addb
cmp
addr16
inc
xchg
js
mov
mov
inc
xchg
cmp
incb
aaa
fadds
into
adc
cmp
call
cmp
sub
cmpb
fldenv
mov
std
call
bound
jbe
addr16
cmp
ds
shll
mov
stos
dec
cmp
leave
cmp
rolb
loopne
shrl
ljmp
decl
add
jmp
jb
sbb
or
mov
lcall
nop
and
sbb
jp
jno
mov
fs
lcall
xchg
incl
add
std
int3
lea
lock
inc
or
mov
fscale
outsl
add
and
jne
xchg
nop
xor
or
cmp
ret
std
incl
jmp
sarl
or
or
or
sbb
ds
fcmove
fs
and
mov
es
call
popf
xchg
and
movsb
or
lods
push
movsb
cltd
cld
and
cmp
cld
ljmp
mov
pop
pop
or
cltd
out
fistl
push
sub
push
pusha
cmpsl
mov
decl
orl
into
cmpb
paddsb
or
cld
push
outsl
hlt
decl
in
sti
lahf
sub
je
inc
stc
pop
xchg
in
pop
adc
cld
or
inc
push
lods
stc
fcmovu
ja
lcall
out
push
outsl
in
mov
push
fdivrs
adc
adc
pushf
mov
out
fs
jg
ljmp
xchg
nop
leave
sub
call
and
ficoms
ficoms
mov
insb
pusha
outsb
fstps
and
lret
xchg
pop
jbe
sar
inc
jo
test
push
fildl
bound
iret
movsl
lds
mov
in
add
dec
lods
decl
in
dec
insl
jp
xor
inc
push
dec
in
dec
or
mov
or
adc
jnp
xor
fsts
push
fs
xor
jg
insb
inc
shrl
repnz
xchg
cmp
inc
jp
jp
repnz
cld
decl
in
mov
mov
jp
or
adc
unpcklps
inc
xchg
jb
stc
lret
xor
inc
test
mov
add
mov
icebp
and
cmp
mov
or
or
clc
js
add
scas
jo
adc
mov
jmp
rcrb
cmp
push
test
adc
lret
push
jg
or
cmp
adc
rorl
ja
xchg
sub
push
mov
xchg
testl
cmp
and
mov
movl
pop
or
call
movsb
sub
fdivl
pop
outsb
adc
movsb
sub
dec
and
jns
testb
call
loopne
mov
and
dec
js
or
jg
or
outsl
fucom
ret
push
test
jns
sar
or
push
repnz
subps
int
cmp
mov
adc
pop
or
jg
leave
les
divl
xchg
aam
mov
or
enter
xor
jnp
shl
lock
mov
mov
test
or
es
lods
push
mov
ja
negl
cwtl
ds
mov
popl
std
dec
cmp
mov
push
pop
adc
shl
loope
pop
nop
pop
jg
lods
movsl
adc
dec
rclb
jmp
push
or
clc
jns
xor
sbb
jg
incl
and
xchg
lds
fsubr
and
mov
adc
or
call
jl
notl
push
and
in
rorb
jne
xor
adc
and
ljmp
cld
and
clc
out
inc
fs
mov
or
push
push
jno
sub
imul
fs
xchg
incl
fbstp
fsubl
ret
in
aas
dec
and
movsb
int
push
ljmp
out
stos
xchg
data16
pop
sub
dec
notb
daa
out
jge
fs
out
lcall
fcomp
sub
xchg
push
jge
mov
jl
sti
movsbl
jne
and
test
call
clc
or
inc
orb
insl
jbe
pop
arpl
mov
loop
inc
cwtl
aam
xor
or
mov
outsl
aam
add
lods
and
xor
add
mov
lods
scas
pop
ljmp
les
lret
sbb
cmpsl
ljmp
mov
jle
mov
loopne
je
cmp
es
dec
out
not
loop
call
mov
movsb
sub
cmp
and
cmp
lcall
inc
pusha
add
stc
decb
cmpsb
std
or
imul
adc
roll
adc
int
test
testb
mov
mov
inc
mov
push
pop
lods
test
cmp
std
jmp
push
dec
jo
jp
adc
das
lock
cld
jne
std
jno
mov
inc
loopne
cmp
jbe
sub
aas
aad
inc
mov
aas
cmp
cmp
mov
call
loope
rolb
inc
cltd
mov
jo
mov
cs
xlat
fmuls
rcrb
popf
mov
in
and
mov
pop
imul
call
fnstsw
lret
dec
add
dec
rorb
pop
decl
jne
repz
pop
push
aaa
mov
addl
decl
cs
cmp
push
adc
neg
lea
and
pop
movsl
fstps
jae
jg
lcall
fs
popa
mov
push
pop
push
pop
mov
lods
pop
pop
arpl
incl
pop
aaa
pop
mov
pop
dec
pop
outsb
pop
cmp
cmp
pusha
push
lcall
jbe
gs
data16
imul
cwtl
push
mov
je
pushf
mov
adc
fildl
test
test
inc
fidivrl
inc
fistl
fsubl
outsb
ficoms
int
fbstp
loope
loop
or
fsub
decb
in
in
bound
pop
fiaddl
lea
jnp
or
lock
ljmp
sbb
sbb
jl
sub
lret
mov
repnz
or
inc
call
xor
pop
enter
aas
loopne
enter
insl
aas
or
in
dec
lock
mov
in
jl
and
aas
pop
mov
jl
aas
mov
hlt
das
sbb
nop
lods
in
push
and
jmp
inc
flds
sti
and
xchg
jle
adcb
push
mov
jg
push
mov
adc
pop
mov
inc
test
ljmp
pop
mov
fs
sub
dec
dec
sbbb
testb
ficompl
push
cmpps
mov
jbe
lcall
rcll
or
aad
or
fwait
inc
add
and
and
call
scas
decl
inc
insb
pop
and
nop
loopne
dec
or
sub
pop
inc
mov
leave
orps
out
testb
or
or
nop
or
fmul
push
fdivrl
cli
ja
aam
mov
mov
call
pop
lock
and
cmp
jp
and
lcall
mov
cmp
cmp
roll
cmp
pop
aaa
sub
sbb
pop
call
mov
fs
test
js
mov
test
push
pop
clc
pushl
mov
inc
sub
xor
cmp
jns
and
rcr
jmp
push
aas
xor
mov
iret
adc
mov
lds
jg
pushl
inc
push
xchg
xor
hlt
mov
mov
leave
xchg
dec
fdivs
xchg
pop
clc
fisubrs
scas
cmp
sar
jl
cmpsb
adc
loope
adc
outsl
das
hlt
adc
dec
cli
jbe
std
xor
mov
add
adc
arpl
hlt
call
popa
push
mov
in
mov
stos
cltd
and
mov
lret
xadd
xchg
sub
jns
mov
mov
aam
mov
mov
xchg
push
sbb
jne
or
push
rclb
mov
icebp
mov
mov
ffree
cwtl
cmc
and
test
pop
or
cmp
lods
ljmp
sub
add
nop
sbb
and
sbbb
shlb
mov
das
std
jmp
add
fsubrl
pop
pop
cwtl
movsb
adcl
pop
call
imul
mov
mov
mov
dec
test
jg
sbb
decl
dec
int3
test
and
rcl
add
or
loopne
ljmp
sub
mov
sbb
push
fnsave
push
mov
mov
mov
nop
jl
dec
lods
outsl
add
das
sub
std
int3
and
in
push
mov
jg
jg
out
mov
int3
mov
mov
cltd
and
add
mov
cmp
add
push
ret
add
add
subl
in
fcmovnb
jge
adc
or
sub
mov
push
add
test
mov
jo
out
and
add
push
xchg
ljmp
push
rcrb
xor
sub
nop
push
xchg
dec
or
push
decl
std
xor
lds
ss
push
cmp
sbb
insb
lds
sbb
insb
cwtl
push
or
repnz
jo
sub
dec
aam
inc
in
mov
std
test
in
dec
cmpsb
shrb
push
decl
dec
out
ljmp
inc
sbb
push
sarb
push
sti
or
clc
push
lea
sbb
jne
ss
popf
or
pop
loop
fs
fcmovne
enter
pop
push
movsl
xor
cwtl
imul
dec
mov
jae
lea
push
pop
call
in
sti
mov
mov
mov
in
mov
jae
jg
enter
ss
mov
mulb
or
cmp
clc
mov
nop
mov
fs
xchg
js
jo
aaa
cmp
js
mov
in
das
js
js
xchg
incb
psubusw
sbb
mov
and
rclb
sbb
add
pop
cld
std
and
mulb
push
sti
std
es
and
in
test
sub
lea
scas
xor
arpl
pop
std
hlt
cmp
ss
sub
cld
inc
add
pop
into
lcall
dec
insb
push
sub
push
push
mov
insb
stc
js
std
push
fcompl
mov
cmp
ds
sbb
pop
js
cld
mov
jmp
lods
inc
int
push
nop
insb
jb
je
fbld
xchg
mov
sub
test
subl
les
js
loopne
pop
lods
or
inc
mov
or
pop
mov
out
in
adc
test
insb
cli
lods
sbb
ja
insl
lock
out
sub
test
shlb
or
add
sub
lret
scas
enter
js
xor
push
js
cmp
jne
pop
push
or
test
mov
pop
push
or
cmp
inc
in
push
mov
in
dec
leave
pop
sbb
and
and
sbb
clc
lock
dec
mov
sar
adc
jmp
add
enter
sbbb
jno
scas
pop
mov
mov
sarb
sub
ja
inc
sbb
add
out
ljmp
push
int3
movsb
aaa
test
scas
sbb
pop
ljmp
xor
push
inc
xchg
pusha
push
jb
popf
and
mov
xor
push
pusha
mov
add
enter
les
test
cmc
pop
cld
incl
cmp
cmpsb
gs
cmp
push
mov
cwtl
xchg
add
lods
pushl
cmp
pop
je
nop
xchg
xor
sub
loope
pop
cmc
add
inc
sahf
sbb
incl
add
pushf
and
push
sub
movsl
lods
addl
daa
enter
mov
xorb
subl
add
sbb
lock
dec
sub
mov
xchg
dec
rorl
movl
push
sub
call
ret
out
jno
orl
or
mov
or
dec
mov
xchg
sbb
incl
das
icebp
jp
pop
imul
int3
sar
pop
leave
sar
cld
push
mov
jbe
jbe
jp
sub
jbe
add
xchg
decl
xchg
and
adc
add
jl
jns
lea
pushf
mov
push
push
fucomip
lcall
pop
adc
sbbl
bound
or
aaa
jo
pop
test
cmp
add
insb
sbb
stc
mov
dec
enter
sub
imul
sub
pop
mov
push
push
pop
mov
cli
or
sbb
inc
js
mov
decl
mov
xor
arpl
cld
jg
fnstsw
rclb
xor
fbstp
aaa
cmp
addr16
cmp
xor
aad
pusha
inc
push
dec
andl
inc
adc
sbb
lcall
xor
sbb
dec
test
arpl
mov
outsl
call
clc
push
jmp
jne
mov
push
jnp
cmpl
dec
xchg
mov
call
in
mov
lea
jno
decl
jg
inc
popa
das
add
mov
das
aad
xor
sub
and
ljmp
jnp
lea
mov
cmp
add
cmp
push
call
inc
dec
sub
sub
test
cmp
sub
rorb
cli
sbb
pop
adc
cmpsl
or
call
add
add
xchg
sub
xchg
sahf
dec
aaa
mov
clc
mov
lea
mov
xchg
xor
xor
and
loopne
loopne
fsubrl
cmp
jae
add
das
icebp
mov
or
test
test
jmp
fadds
push
fadds
and
and
int3
pop
cmpsb
jbe
in
pop
lea
sub
lcall
in
sub
sub
and
inc
test
repnz
xchg
and
clc
mov
sub
and
scas
movsl
outsb
clc
inc
mov
incl
stc
in
push
test
fisubrl
cmpb
jle
loopne
fcomps
jmp
xchg
inc
mov
cmp
dec
sub
mov
jne
dec
and
xchg
push
test
jno
addb
mov
cmp
call
mov
mov
jns
pusha
cmp
and
push
pop
loopne
mov
add
or
pop
sub
pop
pop
pop
and
sbb
or
mov
mov
pop
hlt
dec
aam
jmp
mov
jmp
sahf
or
scas
xchg
mov
or
sarb
das
push
add
decl
jl
negb
mov
jns
pop
and
fdivrl
mov
xchg
dec
or
in
adc
and
or
js
mov
mov
rorb
and
mov
push
or
add
jg
pop
cmp
dec
test
cwtl
lds
or
jbe
insl
decb
shrb
mov
dec
cmp
enter
cmpsl
lods
incl
lcall
push
adc
xlat
pusha
lods
inc
xchg
es
dec
int3
push
loope
dec
add
ret
test
call
scas
js
mov
adc
mov
loop
add
add
or
pop
xor
inc
or
inc
int
arpl
enter
mov
lock
jge
decl
pop
mov
aam
jae
fildll
test
cmc
pop
xchg
lahf
sbb
cli
mov
jecxz
mov
inc
push
fwait
lods
clc
sub
insb
mov
jmp
iret
faddl
sahf
xor
jmp
data16
fdivs
pop
daa
jecxz
data16
aas
mov
cmp
dec
repz
mov
push
or
repnz
jnp
push
loopne
add
dec
sbb
into
or
out
cmpsb
das
cld
call
xchg
nop
adc
cmpsb
cld
decb
lret
js
mov
cmp
or
incl
out
mov
push
leave
js
sub
je
xor
decl
sbb
add
inc
loope
arpl
inc
ljmp
jecxz
jbe
icebp
outsl
aad
mov
or
test
push
xchg
cld
sub
paddsw
mov
inc
inc
dec
out
pop
sbb
xchg
nop
stos
into
mov
das
icebp
or
aam
jne
lcall
outsl
std
call
push
inc
pop
idivl
inc
push
cmp
jb
sub
sub
mov
in
je
les
loope
xchg
mov
insl
inc
inc
xchg
mov
incl
aas
add
das
sbb
pushf
fstpl
mov
add
adc
add
cmp
decl
ret
decl
inc
jb
insl
inc
or
jg
outsl
dec
outsl
jb
in
and
push
imul
and
push
outsl
jo
addr16
add
stos
mov
xor
add
dec
aaa
sub
xor
xchg
clc
incl
mov
rdpmc
and
or
scas
fnstenv
pop
pop
xor
mov
rclb
mov
ror
mov
mov
jb
testl
loop
adc
sub
inc
movsl
js
fimull
ljmp
push
push
inc
xchg
jne
arpl
arpl
outsl
outsb
and
decl
jnp
out
pop
pushf
inc
jge
xor
ja
jge
ljmp
pop
push
jae
pop
fwait
std
out
aas
jae
jne
jno
pop
std
ljmp
inc
fs
jo
sbb
mov
dec
clc
shlb
dec
gs
js
aaa
decl
jmp
scas
jge
pop
pop
push
jne
jns
popa
insb
push
and
push
gs
pop
sar
mov
bound
pop
add
cmp
jbe
dec
jo
pop
pop
push
xchg
cli
xchg
cli
jb
xor
xor
and
mov
push
mov
jno
jae
out
testb
sti
push
popa
xchg
and
mov
ret
inc
popa
fs
imul
out
imul
or
inc
lahf
popa
inc
push
sub
movaps
ljmp
jmp
pop
ret
mov
shlb
insb
adc
lahf
and
sub
push
push
ljmp
in
sbb
add
jne
rol
out
imul
outsl
je
ffree
out
or
and
in
mov
cwtl
das
or
idivb
outsl
add
sbb
push
pop
leave
jae
incl
jne
outsb
cmc
mov
or
xor
aas
jne
es
mov
incl
je
sub
and
insb
mov
imul
insl
sub
shrb
outsl
jne
mov
insl
or
fistps
sub
pop
xor
jae
movd
xorb
cmp
pushl
xor
notb
cs
int3
jge
inc
jg
insl
popa
addr16
jg
imulb
jo
fildl
imul
dec
inc
pop
xorl
bound
mov
insl
movsb
fs
xchg
sub
decl
rorl
push
push
das
xor
xor
push
cmp
add
popa
call
ret
bound
ss
push
popa
lea
push
jo
fnstsw
ret
push
ljmp
dec
push
push
pop
imul
test
mov
pop
or
cs
fistpl
das
std
sbb
pop
inc
dec
push
push
dec
inc
pop
pop
hlt
jo
inc
jecxz
fwait
push
pop
call
aaa
push
inc
shlb
outsb
shlb
call
fs
and
adc
jo
outsl
sub
ljmp
mov
aad
mov
mov
ret
pop
bndldx
push
dec
cld
pop
call
pushl
xor
scas
or
lret
scas
mov
dec
mov
and
pop
sbb
rol
xor
es
aaa
push
fiaddl
fucomip
incl
cli
inc
std
ja
inc
cmp
sbb
leave
dec
jb
pop
push
sbb
arpl
lcall
and
pushf
and
lret
fnstcw
or
and
pop
jo
testl
push
repnz
lods
arpl
ljmp
fiadds
mov
in
mov
ja
inc
ss
push
adc
insb
fs
ja
int3
cld
mov
mov
adc
bound
lock
clc
sbb
fbld
push
je
dec
fidivs
stos
bound
sbb
mov
addl
mov
add
arpl
jo
sub
das
sub
arpl
call
mov
adc
pushf
xor
xor
mov
loopne
call
sub
inc
inc
in
dec
dec
dec
dec
dec
dec
dec
mov
mov
lock
dec
sbb
test
arpl
das
pop
imul
mov
jne
ja
jns
jmp
cs
sub
ss
decl
cmp
daa
daa
sub
int3
sbb
cmc
jae
add
pop
pop
xchg
jge
cld
call
ja
add
lods
cwtl
sbb
mov
jg
cmp
jmp
jp
popa
or
cs
or
or
pushl
or
pusha
das
fldlg2
sub
testl
gs
mov
mov
sub
in
lods
mov
mov
pushl
cs
jb
enter
div
add
imull
int3
mov
mov
add
aam
sub
in
into
cli
mov
rol
mov
xor
xor
mov
stos
cmp
aam
mov
iret
sub
out
into
call
outsl
lcall
or
aad
daa
mov
jecxz
movsl
movsb
mov
sub
mov
sub
call
iret
rorl
std
in
in
enter
mov
into
sub
aam
icebp
leave
shll
pop
mov
inc
mov
push
xlat
mov
outsl
push
lcall
jg
ret
outsl
pop
cmp
mov
lcall
mov
jb
stos
into
in
fcmovne
cmc
sub
pop
mov
sti
jmp
shll
pop
loop
mov
stos
jmp
stos
pushf
out
pop
add
int
outsl
add
in
jae
aad
lock
jb
cmp
pushl
clc
dec
push
outsb
mov
loop
les
in
vlddqu
rcl
ljmp
sti
mov
in
aaa
inc
lret
in
jmp
or
ficompl
outsb
fnstcw
mov
test
mov
xorl
lock
lock
fistpll
ret
sar
xor
enter
sub
ret
in
adc
sub
lods
cmpsl
aad
mov
in
lods
mov
jg
mov
mov
cmp
mov
mov
aam
int
mov
push
shrl
or
testl
mov
xor
out
jg
ret
lret
insl
xchg
mov
sub
stos
push
inc
mov
pop
popf
mov
cmp
idiv
mov
notl
sahf
fstpt
stos
test
clc
inc
inc
jg
mov
or
stos
add
fcmovnu
xchg
sbb
jg
bound
mov
sysret
sub
mov
mov
lds
mov
lea
xchg
popl
imul
das
adc
push
pop
fwait
cltd
int3
les
nop
int3
pusha
adc
enter
pop
mov
stc
lret
lret
lret
lret
mov
lret
out
fidivrs
mov
cld
decl
mov
and
mov
nop
int
das
jbe
int
aas
fidivrs
adc
ljmp
aaa
adc
addr16
push
mov
jg
add
add
inc
cmpb
cs
mov
imul
xchg
adc
cmp
xor
mov
in
xchg
or
mov
out
cltd
and
clc
mov
mov
xchg
pop
insb
mov
addr16
mov
in
mov
inc
repnz
mov
add
inc
dec
push
jo,pn
bound
nop
mov
or
xchg
pop
jg
mov
popa
daa
fstl
add
adc
popa
xchg
insb
adc
aaa
aaa
xorl
incl
push
sbb
leave
cmpb
nop
outsl
and
rorb
mov
out
jg
add
pop
rcll
lock
andl
jno
push
aaa
call
mov
pop
imul
inc
inc
pop
inc
sbb
dec
insb
xor
gs
test
jnp
or
and
clc
or
das
inc
test
cmp
dec
ss
push
xchg
bound
and
mov
sub
sarb
push
dec
cs
push
or
add
test
out
adc
and
or
jb
gs
sub
xchg
mov
adc
mov
xorb
incl
subb
push
adc
mov
xchg
int
cmp
insb
pop
arpl
mov
inc
or
xchg
inc
or
add
aam
mov
repz
imul
pop
lahf
sub
and
sub
decl
cmp
add
outsl
dec
sub
adcb
in
mov
pusha
and
loopne
push
orb
sbb
adc
loop
jg
jmp
xor
ja
jge
cltd
outsl
mov
jbe
mov
outsl
pop
clc
outsl
adc
adc
fcomps
mov
dec
popa
insl
aaa
ss
cmp
popa
out
inc
jb
ret
jae
dec
sub
xchg
or
sbb
test
sub
lret
fdivrs
std
mov
arpl
gs
pop
push
sbb
jbe
aas
fadds
es
fbld
loopne
sub
inc
sbb
jb
shrb
push
call
insl
adc
jo
push
outsb
jle
cs
iret
sbb
std
rorl
imul
in
fbstp
adc
lds
or
inc
test
sbb
xor
in
sub
push
inc
push
outsb
cld
aaa
cli
in
jbe
jne
out
xchg
jo
and
jg
incl
bound
pusha
out
jno
cmp
sub
cmp
out
sub
bound
jne
inc
inc
xor
jo
ret
mov
loope
sbb
call
push
xor
push
mov
clc
and
jp
cmova
pusha
jae
fistpl
or
xchg
push
enter
cmp
adc
lcall
sub
arpl
fidivs
adc
ret
insb
pushl
xchg
popa
pop
jo
ja
roll
into
inc
and
pop
test
sbb
pop
mov
stos
aad
sbb
popw
adc
outsb
adc
ret
orl
decl
push
mov
mov
dec
inc
dec
sbb
inc
pop
add
out
mov
decl
mov
cltd
aam
insl
cmp
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
or
xor
lea
imul
push
ja
fucomip
jmp
xchg
pop
clc
fidivl
out
add
fnstsw
xor
push
inc
inc
inc
add
inc
pop
lret
inc
push
mov
jecxz
xor
movsl
shrl
cli
add
mov
cmc
dec
in
fisubrl
das
cltd
jae
or
insb
inc
leave
sbb
xor
jo
dec
gs
jnp
lcall
insl
add
cwtl
insl
cmpsl
sbb
je
or
cmp
dec
aam
incl
cmp
scas
je
sub
test
aaa
mov
test
sbb
imul
push
add
lcall
outsl
cli
addr16
xor
add
xchg
or
flds
mov
decl
mov
test
sbb
mov
lods
fsubs
dec
and
inc
sbb
pushl
add
mov
xor
adc
add
orl
call
dec
adc
pop
xchg
add
and
pop
paddsb
or
xchg
jbe
lods
push
das
dec
push
sub
fdivrp
jmp
pop
clc
mov
sbb
mov
mov
push
pop
inc
or
dec
popf
neg
fildll
hlt
add
add
or
or
or
jg
and
or
add
pop
sbb
in
outsl
iret
add
sbb
pop
xor
cld
in
decl
sbb
sbb
pop
or
xor
pop
inc
and
ljmp
push
clts
sbb
cmp
mull
or
jecxz
mov
pop
adc
cmp
or
mov
sub
add
call
push
push
std
and
mov
adc
sub
add
and
pushf
mov
add
and
or
xor
or
sub
push
sbb
inc
push
movsl
clc
call
push
xor
outsl
xchg
daa
and
and
sti
prefetch
test
outsl
hlt
pop
lahf
es
es
cmp
push
add
sbb
in
incl
pop
clc
call
or
xor
pop
sub
pop
xor
or
sub
or
push
sub
or
es
pop
xor
or
or
xchg
inc
sbb
incl
incl
std
mull
and
adc
sub
std
std
sbb
adc
sbb
mov
or
sbb
jg
mov
push
ss
or
adc
lret
das
adc
mov
push
inc
adc
or
adc
and
adc
mov
clc
ret
jg
mov
adc
sub
das
mov
mov
and
push
jg
jg
mov
and
and
cmp
or
add
idiv
adc
sbb
les
nop
out
cmp
mov
jns
add
xor
in
fildl
or
das
add
incl
or
add
iret
std
push
push
push
sbb
push
mov
ljmp
not
adc
sbb
.byte
outsl
in
call
push
push
push
push
call
mov
mov
and
push
aas
fistl
pop
and
test
jne
pop
pop
pop
pop
pop
ret
push
adc
insb
xchg
rclb
and
call
filds
sbb
push
mov
push
mov
insl
divl
add
add
jne
fistl
or
sarb
dec
and
ret
imul
push
adcl
adc
mov
sti
popf
sbb
add
adc
push
jne
push
fidivs
mov
mov
je
ja
es
adc
outsb
xlat
jmp
out
mov
test
dec
push
push
lret
fsubrl
sbb
mov
jns
jnp
xchg
je
dec
cmp
xchg
aaa
fwait
cmp
mov
mov
mov
jmp
mov
sbb
mov
or
fs
or
fcoml
push
cltd
xlat
xchg
sbb
pop
sub
mov
add
mov
in
into
insl
pop
lahf
add
stos
mov
push
push
jno
in
fstpl
xor
push
inc
ret
out
or
es
push
call
mov
xchg
pop
je
cs
lock
outsb
pop
int3
adc
scas
lock
and
mov
jge
or
or
add
push
push
and
push
je
mov
xlat
mov
in
sbb
push
push
daa
pop
fwait
mov
or
in
or
dec
stc
pop
xchg
out
add
adc
cld
add
xchg
arpl
adc
fstpt
mov
mov
mov
dec
or
fwait
cmp
mov
mov
lock
sbb
xchg
or
and
cmpsl
pop
xor
lahf
cmp
je
fstl
xchg
cld
cmp
push
outsl
sbb
sbb
lcall
or
push
insb
jbe
jmp
pop
inc
xchg
adc
ffreep
dec
push
add
scas
mov
pop
pop
in
push
push
pop
sub
int3
iret
lea
inc
sbb
mov
xchg
test
push
pop
push
popa
jmp
pop
push
mov
rorl
add
mov
add
push
mov
dec
in
daa
aas
push
mov
rorl
rcrl
insl
cmp
sbb
sub
icebp
mov
jmp
push
dec
and
add
out
popf
lcall
add
mov
xlat
or
adc
pop
add
movb
jle
jle
push
push
lea
mov
mov
mov
cmp
imul
sar
mov
shr
add
mov
and
jne
mov
add
dec
mov
jg
aaa
cwtl
sti
insb
push
sbb
outsl
push
test
mov
push
sbb
xlat
mov
jbe
loope
pop
and
push
pop
push
adc
mov
xor
dec
pop
push
loope
dec
mov
movl
cmpsb
ss
xor
mov
and
es
loopne
xor
mov
push
xlat
and
dec
push
je
pop
imul
sbb
pop
das
pop
lahf
sub
push
addr16
sbb
push
pop
push
push
test
or
ds
jle
adc
je
pop
dec
pop
inc
fcmovb
pop
stos
sbb
mov
out
push
lock
ljmp
or
xor
mov
cmp
jl
jbe
clc
or
jg
call
pop
cmp
jl
xchg
jecxz
ljmp
sub
and
lock
jno
cmp
test
mov
mov
aas
add
xchg
test
stos
rorb
iret
leave
mov
stos
and
jns
ja
push
mov
out
lock
jg
adc
pop
add
leave
sbb
sub
sub
lea
sub
adc
outsl
inc
rorl
rorl
lret
add
jo
stos
sub
sub
jae
dec
iret
and
add
jnp
add
insb
xor
ret
test
rorb
test
adc
adc
lret
subl
aas
cmp
sbb
adc
push
xlat
push
je
pusha
shrb
outsb
or
rolb
sbb
mov
cmp
jle
inc
push
push
mov
cmp
punpckldq
outsl
inc
sbb
xchg
cmc
sbb
sub
push
cmp
lcall
and
push
mov
cmp
inc
add
aaa
sti
outsw
test
mov
ds
or
inc
pop
inc
add
pop
cmpsb
jmp
cltd
ja
int
mov
fimuls
xchg
movsl
push
or
or
cvtdq2ps
add
adcb
xlat
insl
adc
and
int3
call
mov
mov
xor
push
pop
dec
lds
and
dec
xchg
jecxz
sbb
push
lea
jecxz
pop
fldcw
sbb
cltd
mov
push
fld
adc
fdivl
mov
mov
out
popa
out
xor
push
mov
inc
sub
push
xor
xchg
out
or
push
sbb
sbb
push
mov
cmp
xor
test
out
mov
pushf
cmp
pop
cmpw
xorl
push
lahf
adc
mov
dec
or
add
jns
mov
mov
mov
or
in
sub
or
fs
test
pop
push
mov
lds
pop
cmp
repnz
or
fldl
sub
loope
push
jle
mov
lds
jg
adc
popa
and
data16
push
jbe
mov
test
stc
mov
or
cld
data16
lahf
roll
pushl
add
mov
pop
das
outsb
js
xchg
insb
mov
shlb
mov
addr16
movsb
clc
insl
enter
clc
push
insb
mov
mov
mov
xchg
popa
sbb
mov
test
adc
dec
push
jne
push
mov
xchg
and
xor
in
je
push
ret
mov
lahf
jmp
dec
sub
mov
imulb
mov
lock
aam
jp
mov
ret
xor
shl
testb
adc
cmp
fs
mov
mov
mov
lcall
sbb
shll
jp
lcall
bound
out
fldenv
and
jmp
and
movsb
sub
in
inc
cwtl
and
mov
dec
pop
leave
push
and
xchg
lods
nop
push
mov
stos
mov
jmp
nop
add
inc
dec
dec
xor
cs
insb
repnz
or
out
cld
dec
inc
dec
push
dec
outsl
outsb
pop
push
cs
jbe
ja
pushl
imul
or
push
inc
push
push
out
iret
mov
xor
jae
jae
push
mov
idivl
arpl
and
arpl
and
adc
fcompl
popa
sbb
inc
jbe
arpl
outsb
sub
in
cmpsb
dec
push
xor
addr16
shll
push
add
sbb
pop
mov
add
movsb
inc
cmp
mov
movsl
jae
xor
addr16
xchg
pop
outsb
insb
popa
arpl
cs
gs
gs
outsb
pop
int3
jge
je
add
inc
insb
imul
std
ja
jb
pop
dec
cmpsb
jb
jae
pop
push
cli
outsl
ja
pop
push
mov
test
push
outsl
popa
insl
sbb
push
lods
rolb
push
ret
lods
lcall
imul
negb
xchg
arpl
mov
cs
pop
pop
jbe
insl
or
add
and
je
pop
ja
push
test
xor
popl
add
add
push
add
dec
pop
nop
add
add
enter
mov
fucomp
add
pop
mov
int
mov
imul
or
jmp
popa
insl
and
outsb
outsb
outsl
je
bound
arpl
imul
inc
dec
push
and
fs
ja
testb
mov
add
or
es
mulb
fcompl
in
adc
enter
mov
jae
cmp
ret
es
es
jns
sti
enter
arpl
stos
push
inc
sti
psubq
add
mov
add
or
or
lcall
imul
pop
add
add
es
pop
xor
add
pop
push
mov
dec
aam
adc
add
movups
lcall
xchg
mov
les
jge
push
clc
pushl
and
leave
xchg
daa
inc
xor
and
daa
shrb
cmp
jmp
or
dec
sub
mov
in
mov
mov
pusha
cmc
push
mov
mov
push
call
ret
int3
int3
ud0
repnz
push
mov
adc
mov
mov
or
or
lcall
decl
push
sbb
sti
filds
adc
pop
ret
add
sub
sbb
jge
cld
decl
je
xor
jmp
jmp
push
in
pop
lret
sbb
data16
jnp
in
and
je
push
call
pushl
mov
sub
sub
inc
lods
mov
jb
je
popf
subl
jmp
mov
shll
push
pop
sbb
pop
or
adc
sub
inc
pop
mov
in
sub
and
jne
push
push
and
mov
or
pop
push
incl
or
imulb
mov
fwait
hlt
inc
daa
or
in
fnstcw
hlt
fcompl
in
jmp
dec
jnp
pushl
push
clc
add
in
mov
cmp
push
mov
add
test
outsb
mov
decl
push
jo
add
ret
ret
das
test
add
xor
outsl
inc
call
mov
push
ss
and
aas
sti
jo
sbb
std
jmp
or
or
jmp
xor
repnz
add
pushl
js
jo
fistpll
in
aam
fcoml
icebp
popl
add
inc
and
neg
lea
push
outsl
inc
incl
push
pushf
loop
mov
pop
loope
arpl
mov
call
or
xchg
add
mov
das
sti
sub
cmp
adcb
inc
loope
imul
adc
jg
pushl
jmp
jmp
xor
jmp
and
sti
fsubs
sbb
dec
push
lcall
pop
mov
in
dec
es
mov
pop
sub
sbb
popl
push
sar
xchg
mov
lea
xor
push
push
into
ljmp
mov
test
out
shll
mov
cmp
mov
ss
push
mov
add
xchg
adc
fnstenv
inc
mov
adc
imul
and
clc
xchg
dec
and
add
ljmp
call
test
inc
pop
xchg
jbe
test
jno
lahf
add
add
jno
push
sub
add
or
add
cmpl
inc
mov
in
lods
call
pop
add
data16
aaa
adc
adc
addr16
addb
call
push
xor
mov
mov
rcr
jae
cmp
jne
xor
lock
loop
decl
hlt
pop
mov
jl
or
push
xorb
add
jle
test
add
lcall
stc
adc
mov
in
insb
adc
sbb
dec
mov
add
idiv
jns
dec
cli
push
jne
jno
jae
enter
pop
or
outsl
in
dec
imul
adc
xor
fnstsw
das
add
inc
push
flds
inc
cld
incl
fsts
mov
xor
push
adc
popf
nop
test
rcll
fsubrl
std
and
inc
pop
sbbl
and
mov
ret
cmp
incl
sbb
or
ss
adc
call
add
push
pushf
mov
sbb
and
lcall
mov
test
push
and
push
sbb
imul
mov
inc
jne
inc
pop
adc
imul
pop
fldl
fwait
mov
mov
in
and
or
movb
enter
mov
pushf
add
idivb
xchg
mov
ja
js
ja
imul
pop
cs
jg
incl
and
repnz
jne
pop
and
cmp
or
sub
push
jne
stc
lret
jmp
jl
push
push
call
push
out
inc
insl
dec
mov
dec
aad
ds
outsb
xchg
decl
mov
fidivl
push
mov
popl
cmp
push
out
pop
movsb
std
pop
in
sbb
and
push
jne
cmp
pushf
das
pop
cs
das
ss
jmp
fucom
inc
mov
hlt
es
out
outsl
xchg
adc
stos
sub
or
in
inc
push
lcall
clc
mov
stc
push
jno
push
and
xchg
mov
xchg
push
aas
xor
pop
xchg
mov
cmp
cmp
adc
adc
int3
cs
decl
push
add
gs
je
jb
pop
out
push
imul
cs
lret
rep
hlt
ja
fldl
or
cli
inc
sti
js
inc
mov
fwait
pop
std
mov
in
push
jb
mov
ret
mov
popf
mov
mov
mov
call
push
mov
sub
bound
hlt
lcall
jae
pop
xor
mov
push
pop
je
jb
in
adc
inc
repnz
cwtl
push
mov
jl
inc
jb
insl
mov
call
cmc
mov
mov
jbe
fildll
test
call
mov
sbb
cmp
sti
inc
push
xchg
and
cwtl
xchg
insb
mov
pushw
push
mov
and
mov
ljmp
mov
mov
sbb
xor
xchg
xchg
and
cs
or
cli
sub
mov
xchg
mov
ljmp
cli
jmp
xchg
jb
in
mov
data16
movsb
push
fistpll
pop
test
inc
jg
inc
lods
xchg
sub
add
mov
and
and
lods
outsl
cld
call
add
mov
dec
cmp
rcrb
cmp
sbb
mov
pop
fsubl
test
int3
cmc
insb
pop
pushf
call
call
sbb
inc
clc
mov
daa
popf
pop
cwtl
test
mov
and
jo
mov
inc
aam
ljmp
andb
xchg
pop
arpl
xchg
push
insb
sub
push
pop
flds
fnstcw
inc
adc
or
popa
xchg
pop
jb
decl
in
call
xor
xchg
dec
cld
lods
add
cmp
cmovns
jmp
clc
popf
fldcw
scas
xor
xlat
push
push
loopne
ja
sti
aad
or
cmp
popa
xor
fdivs
ret
push
add
outsb
hlt
lcall
or
add
imul
sbb
xchg
out
pop
clc
aaa
shrb
hlt
cmpsl
cli
push
push
inc
xor
add
xor
incl
lcall
push
lods
sub
inc
push
fcoms
cmp
cmp
call
xor
out
lods
or
imul
jne
cmp
mov
lcall
mov
add
cmp
notl
mov
gs
in
sub
pop
mov
fdivr
int
dec
sbb
sar
or
lcall
mov
push
fdiv
cld
mov
divl
or
and
add
xchg
cli
in
mov
loop
mov
pop
test
pop
imul
mov
ljmp
adc
sahf
pop
push
negb
xchg
mov
lods
adc
pushl
inc
adc
test
xchg
cld
adc
daa
push
cld
test
lcall
repnz
jmp
xchg
pop
out
mov
mov
xor
lcall
adc
xor
adc
and
rcll
or
pushl
mov
xor
push
inc
cwtl
inc
shlb
int3
sbb
pushf
jmp
cwtl
or
and
or
in
cmp
shl
ljmp
or
daa
inc
add
pusha
add
icebp
sub
add
rclb
jae
cld
clc
and
xchg
jmp
pop
loop
shll
or
pop
clc
bound
cmp
call
push
call
add
sbb
or
push
insl
call
fisubs
in
sub
or
sbb
ja
shrl
pop
sub
or
loopne
outsl
fucomip
cmp
jnp
mov
cld
movb
pop
lods
jo
cltd
sub
jg
jmp
ss
inc
int3
cmp
iret
scas
mov
sub
jl
loop
inc
dec
adc
mov
les
je
shrl
cli
pop
pop
or
lcall
mov
fmuls
and
fld
add
or
cs
fdivr
sbb
adc
inc
sbb
aad
push
pusha
shll
push
mov
pop
push
mov
mov
adc
cmc
pop
call
cmp
jns
fs
rclb
nop
push
decl
cld
pushl
push
je
daa
and
xchg
cmp
jp
sbb
lock
jmp
add
and
mov
xlat
mov
pop
dec
adc
mov
pop
sbb
mov
dec
movb
lcall
sbb
ss
clc
lock
imul
in
jge
pop
into
xchg
push
out
mov
mov
mov
das
mov
sbb
mov
jmp
adcb
mov
lahf
ljmp
hlt
cmp
mov
out
push
loope
jge
mov
mov
pushl
jl
out
or
lods
xchg
cmp
data16
and
cmc
das
aam
call
orb
pop
movl
jmp
adc
add
decl
adc
add
jae
adc
jp
mov
cmp
js
pop
jg
mov
push
je
cld
fwait
popa
fnstcw
mov
or
iret
dec
push
or
jg
inc
jne
inc
lock
or
enter
mov
fstp
push
mov
test
add
jmp
mov
je
mov
sbbl
enter
outsb
dec
loop
pop
outsl
or
jbe
jecxz
pop
outsb
sub
outsb
dec
repz
jbe
xor
das
cld
jg
sarb
ja
mov
jns
add
and
and
pushl
or
enter
xor
and
cmp
xchg
cmp
adc
xchg
dec
sbbb
mov
cli
shl
jecxz
xor
cmpsb
add
mov
cmp
adc
test
mov
rorb
push
and
adc
fs
sbb
sbb
mov
and
fadds
xor
or
sbb
inc
cmpsb
nop
sub
sub
cltd
push
push
cwtl
or
lea
add
stos
mov
push
mov
inc
enter
jg
mov
add
or
popf
lret
mov
inc
mov
test
stc
mov
lret
mov
loop
flds
push
cmp
insl
mov
roll
lcall
push
sbb
cld
or
sub
repnz
loopne
movsb
xchg
sbb
test
test
fs
mov
pop
and
idiv
pop
add
adc
test
pop
sbbl
mov
xor
add
mov
push
push
in
add
popa
mov
cmp
test
add
cmp
outsl
jecxz
mov
mov
outsl
mov
int3
enter
jmp
hlt
adc
add
cmpsb
ret
pop
hlt
insl
xor
mov
ret
loop
outsb
inc
cmp
or
dec
imul
or
pushf
mov
push
dec
add
enter
fbstp
nop
ljmp
mov
xchg
adcl
in
enter
jne
cld
pop
loopne
sub
sub
push
sub
sub
add
je
je
add
jge
pop
push
add
add
inc
inc
in
mov
add
inc
push
adc
in
push
add
sub
adc
xor
xor
mov
jg
into
imul
and
je
jg
in
sbb
adc
mull
or
pop
movsb
xchg
stos
mov
ljmp
data16
mov
xorb
xlat
push
push
cmpb
das
jno
jmp
xchg
lahf
dec
les
and
add
add
pushl
lahf
in
in
xchg
sahf
mov
jae
lock
ljmp
sub
cmp
pop
inc
rol
and
int3
xchg
mov
lcall
sbb
std
mov
push
cmp
or
outsl
cmp
fisttps
and
push
push
dec
repnz
mov
mov
sbb
xor
and
pop
mov
mov
mov
jg
add
int
pushl
clc
pop
bnd
cld
fisubrs
test
js
ja
inc
nop
sub
cwtl
fwait
into
sbb
cltd
sub
add
shl
int3
gs
call
lods
pop
test
test
inc
cs
push
lea
decl
decl
mov
mov
insb
or
je
xchg
dec
adc
pop
in
aaa
pushl
cmp
xor
push
sub
jb
or
push
data16
pop
call
ret
mov
fbstp
je
jg
dec
sbb
jns
test
or
adc
cmpsl
sub
data16
int3
sub
decl
inc
and
pushl
mov
jmp
rcr
rep
movsw
movsb
xor
xor
es
jbe
mov
add
pop
add
or
push
mov
shlb
les
fnstsw
lcall
lods
lock
les
and
mov
cmpsb
sbb
and
xchg
cmp
mov
mov
xchg
in
push
adc
push
xchg
scas
and
adc
push
mov
xor
inc
sbb
jae
adc
sbb
sub
jae
mov
filds
pop
clc
mov
seto
orb
sub
clc
cmp
mov
adc
addr16
shl
and
jmp
or
hlt
jae
sub
inc
fstl
leave
dec
loopne
xor
push
cmp
inc
sbb
imulb
icebp
ljmp
add
inc
jbe
add
jo
sbb
ljmp
or
mov
clc
mov
sub
and
ret
std
jmp
pop
inc
pusha
imul
daa
fwait
and
inc
fs
lcall
mov
sbb
push
xor
lock
mov
rcll
cld
pop
push
out
test
xor
out
shrl
pop
jl
fst
movsb
sbb
fistpl
rolb
test
arpl
or
sbb
xchg
insb
jb
ret
ja
jg
jmp
dec
sti
inc
mov
lea
scas
pop
pop
repnz
std
ljmp
push
sarl
leave
pop
mov
test
mov
outsl
hlt
lods
fisubs
ss
push
sbb
pop
outsb
sbb
or
std
std
leave
push
xchg
sub
jns
popa
lods
popa
loopne
cld
ljmp
call
pushf
sub
rol
popa
push
popa
call
or
xchg
ljmp
je
mov
hlt
or
enter
arpl
inc
call
sbb
add
xlat
mov
push
xor
and
decl
gs
out
movsb
jno
sbb
add
enter
decl
scas
rorl
js
jae
leave
pop
lea
mov
rorl
jg
mov
and
aad
in
push
xchg
addr16
cmp
aaa
clc
pushl
mov
repnz
sti
cld
cli
fists
dec
mov
mov
push
ljmp
lock
cmp
mov
and
xor
push
cltd
mov
fwait
in
mov
jno,pt
mov
mov
stos
pushl
cli
nop
or
jg
out
cmp
scas
sub
xor
cs
call
cmp
sahf
cmp
shrb
test
test
sub
push
sub
movsl
push
incl
les
or
xchg
int3
into
sahf
cmp
jl
outsb
jl
dec
or
cmc
sbb
sub
incl
mov
repz
adc
aaa
clc
sbb
stos
sub
pop
xchg
jmp
decl
call
fs
test
or
jns
or
in
add
call
decb
or
push
inc
sub
add
ret
dec
push
sub
push
out
aad
shlb
jp
notl
mov
jno
call
mov
lods
sbb
aam
jne
jne
and
mov
lret
cmp
sbb
mov
ficomps
mov
sbb
std
jg
jg
mov
and
pop
mov
setle
push
jns
sbb
jmp
fimuls
addb
cmp
addr16
inc
xchg
js
mov
mov
inc
xchg
cmp
incb
aaa
fadds
into
adc
cmp
call
cmp
sub
cmpb
fldenv
mov
std
call
bound
jbe
addr16
cmp
ds
shll
mov
stos
dec
cmp
leave
cmp
rolb
loopne
shrl
ljmp
decl
add
jmp
jb
sbb
or
mov
lcall
nop
and
sbb
jp
jno
mov
fs
lcall
xchg
incl
add
std
int3
lea
lock
inc
or
mov
fscale
outsl
add
and
jne
xchg
nop
xor
or
cmp
ret
std
incl
jmp
sarl
or
or
or
sbb
ds
fcmove
fs
and
mov
es
call
popf
xchg
and
movsb
or
lods
push
movsb
cltd
cld
and
cmp
cld
ljmp
mov
pop
pop
or
cltd
out
fistl
push
sub
push
pusha
cmpsl
mov
decl
orl
into
cmpb
paddsb
or
cld
push
outsl
hlt
decl
in
sti
lahf
sub
je
inc
stc
pop
xchg
in
pop
adc
cld
or
inc
push
lods
stc
fcmovu
ja
lcall
out
push
outsl
in
mov
push
fdivrs
adc
adc
pushf
mov
out
fs
jg
ljmp
xchg
nop
leave
sub
call
and
ficoms
ficoms
mov
insb
pusha
outsb
fstps
and
lret
xchg
pop
jbe
sar
inc
jo
test
push
fildl
bound
iret
movsl
lds
mov
in
add
dec
lods
decl
in
dec
insl
jp
xor
inc
push
dec
in
dec
or
mov
or
adc
jnp
xor
fsts
push
fs
xor
jg
insb
inc
shrl
repnz
xchg
cmp
inc
jp
jp
repnz
cld
decl
in
mov
mov
jp
or
adc
unpcklps
inc
xchg
jb
stc
lret
xor
inc
test
mov
add
mov
icebp
and
cmp
mov
or
or
clc
js
add
scas
jo
adc
mov
jmp
rcrb
cmp
push
test
adc
lret
push
jg
or
cmp
adc
rorl
ja
xchg
sub
push
mov
xchg
testl
cmp
and
mov
movl
pop
or
call
movsb
sub
fdivl
pop
outsb
adc
movsb
sub
dec
and
jns
testb
call
loopne
mov
and
dec
js
or
jg
or
outsl
fucom
ret
push
test
jns
sar
or
push
repnz
subps
int
cmp
mov
adc
pop
or
jg
leave
les
divl
xchg
aam
mov
or
enter
xor
jnp
shl
lock
mov
mov
test
or
es
lods
push
mov
ja
negl
cwtl
ds
mov
popl
std
dec
cmp
mov
push
pop
adc
shl
loope
pop
nop
pop
jg
lods
movsl
adc
dec
rclb
jmp
push
or
clc
jns
xor
sbb
jg
incl
and
xchg
lds
fsubr
and
mov
adc
or
call
jl
notl
push
and
in
rorb
jne
xor
adc
and
ljmp
cld
and
clc
out
inc
fs
mov
or
push
push
jno
sub
imul
fs
xchg
incl
fbstp
fsubl
ret
in
aas
dec
and
movsb
int
push
ljmp
out
stos
xchg
data16
pop
sub
dec
notb
daa
out
jge
fs
out
lcall
fcomp
sub
xchg
push
jge
mov
jl
sti
movsbl
jne
and
test
call
clc
or
inc
orb
insl
jbe
pop
arpl
mov
loop
inc
cwtl
aam
xor
or
mov
outsl
aam
add
lods
and
xor
add
mov
lods
scas
pop
ljmp
les
lret
sbb
cmpsl
ljmp
mov
jle
mov
loopne
je
cmp
es
dec
out
not
loop
call
mov
movsb
sub
cmp
and
cmp
lcall
inc
pusha
add
stc
decb
cmpsb
std
or
imul
adc
roll
adc
int
test
testb
mov
mov
inc
mov
push
pop
lods
test
cmp
std
jmp
push
dec
jo
jp
adc
das
lock
cld
jne
std
jno
mov
inc
loopne
cmp
jbe
sub
aas
aad
inc
mov
aas
cmp
cmp
mov
call
loope
rolb
inc
cltd
mov
jo
mov
cs
xlat
fmuls
rcrb
popf
mov
in
and
mov
pop
imul
call
fnstsw
lret
dec
add
dec
rorb
pop
decl
jne
repz
pop
push
aaa
mov
addl
decl
cs
cmp
push
adc
neg
lea
and
pop
movsl
fstps
jae
jg
lcall
fs
popa
mov
push
pop
push
pop
mov
lods
pop
pop
arpl
incl
pop
aaa
pop
mov
pop
dec
pop
outsb
pop
cmp
cmp
pusha
push
lcall
jbe
gs
data16
imul
cwtl
push
mov
je
pushf
mov
adc
fildl
test
test
inc
fidivrl
inc
fistl
fsubl
outsb
ficoms
int
fbstp
loope
loop
or
fsub
decb
in
in
bound
pop
fiaddl
lea
jnp
or
lock
ljmp
sbb
sbb
jl
sub
lret
mov
repnz
or
inc
call
xor
pop
enter
aas
loopne
enter
insl
aas
or
in
dec
lock
mov
in
jl
and
aas
pop
mov
jl
aas
mov
hlt
das
sbb
nop
lods
in
push
and
jmp
inc
flds
sti
and
xchg
jle
adcb
push
mov
jg
push
mov
adc
pop
mov
inc
test
ljmp
pop
mov
fs
sub
dec
dec
sbbb
testb
ficompl
push
cmpps
mov
jbe
lcall
rcll
or
aad
or
fwait
inc
add
and
and
call
scas
decl
inc
insb
pop
and
nop
loopne
dec
or
sub
pop
inc
mov
leave
orps
out
testb
or
or
nop
or
fmul
push
fdivrl
cli
ja
aam
mov
mov
call
pop
lock
and
cmp
jp
and
lcall
mov
cmp
cmp
roll
cmp
pop
aaa
sub
sbb
pop
call
mov
fs
test
js
mov
test
push
pop
clc
pushl
mov
inc
sub
xor
cmp
jns
and
rcr
jmp
push
aas
xor
mov
iret
adc
mov
lds
jg
pushl
inc
push
xchg
xor
hlt
mov
mov
leave
xchg
dec
fdivs
xchg
pop
clc
fisubrs
scas
cmp
sar
jl
cmpsb
adc
loope
adc
outsl
das
hlt
adc
dec
cli
jbe
std
xor
mov
add
adc
arpl
hlt
call
popa
push
mov
in
mov
stos
cltd
and
mov
lret
xadd
xchg
sub
jns
mov
mov
aam
mov
mov
xchg
push
sbb
jne
or
push
rclb
mov
icebp
mov
mov
ffree
cwtl
cmc
and
test
pop
or
cmp
lods
ljmp
sub
add
nop
sbb
and
sbbb
shlb
mov
das
std
jmp
add
fsubrl
pop
pop
cwtl
movsb
adcl
pop
call
imul
mov
mov
mov
dec
test
jg
sbb
decl
dec
int3
test
and
rcl
add
or
loopne
ljmp
sub
mov
sbb
push
fnsave
push
mov
mov
mov
nop
jl
dec
lods
outsl
add
das
sub
std
int3
and
in
push
mov
jg
jg
out
mov
int3
mov
mov
cltd
and
add
mov
cmp
add
push
ret
add
add
subl
in
fcmovnb
jge
adc
or
sub
mov
push
add
test
mov
jo
out
and
add
push
xchg
ljmp
push
rcrb
xor
sub
nop
push
xchg
dec
or
push
decl
std
xor
lds
ss
push
cmp
sbb
insb
lds
sbb
insb
cwtl
push
or
repnz
jo
sub
dec
aam
inc
in
mov
std
test
in
dec
cmpsb
shrb
push
decl
dec
out
ljmp
inc
sbb
push
sarb
push
sti
or
clc
push
lea
sbb
jne
ss
popf
or
pop
loop
fs
fcmovne
enter
pop
push
movsl
xor
cwtl
imul
dec
mov
jae
lea
push
pop
call
in
sti
mov
mov
mov
in
mov
jae
jg
enter
ss
mov
mulb
or
cmp
clc
mov
nop
mov
fs
xchg
js
jo
aaa
cmp
js
mov
in
das
js
js
xchg
incb
psubusw
sbb
mov
and
rclb
sbb
add
pop
cld
std
and
mulb
push
sti
std
es
and
in
test
sub
lea
scas
xor
arpl
pop
std
hlt
cmp
ss
sub
cld
inc
add
pop
into
lcall
dec
insb
push
sub
push
push
mov
insb
stc
js
std
push
fcompl
mov
cmp
ds
sbb
pop
js
cld
mov
jmp
lods
inc
int
push
nop
insb
jb
je
fbld
xchg
mov
sub
test
subl
les
js
loopne
pop
lods
or
inc
mov
or
pop
mov
out
in
adc
test
insb
cli
lods
sbb
ja
insl
lock
out
sub
test
shlb
or
add
sub
lret
scas
enter
js
xor
push
js
cmp
jne
pop
push
or
test
mov
pop
push
or
cmp
inc
in
push
mov
in
dec
leave
pop
sbb
and
and
sbb
clc
lock
dec
mov
sar
adc
jmp
add
enter
sbbb
jno
scas
pop
mov
mov
sarb
sub
ja
inc
sbb
add
out
ljmp
push
int3
movsb
aaa
test
scas
sbb
pop
ljmp
xor
push
inc
xchg
pusha
push
jb
popf
and
mov
xor
push
pusha
mov
add
enter
les
test
cmc
pop
cld
incl
cmp
cmpsb
gs
cmp
push
mov
cwtl
xchg
add
lods
pushl
cmp
pop
je
nop
xchg
xor
sub
loope
pop
cmc
add
inc
sahf
sbb
incl
add
pushf
and
push
sub
movsl
lods
addl
daa
enter
mov
xorb
subl
add
sbb
lock
dec
sub
mov
xchg
dec
rorl
movl
push
sub
call
ret
out
jno
orl
or
mov
or
dec
mov
xchg
sbb
incl
das
icebp
jp
pop
imul
int3
sar
pop
leave
sar
cld
push
mov
jbe
jbe
jp
sub
jbe
add
xchg
decl
xchg
and
adc
add
jl
jns
lea
pushf
mov
push
push
fucomip
lcall
pop
adc
sbbl
bound
or
aaa
jo
pop
test
cmp
add
insb
sbb
stc
mov
dec
enter
sub
imul
sub
pop
mov
push
push
pop
mov
cli
or
sbb
inc
js
mov
decl
mov
xor
arpl
cld
jg
fnstsw
rclb
xor
fbstp
aaa
cmp
addr16
cmp
xor
aad
pusha
inc
push
dec
andl
inc
adc
sbb
lcall
xor
sbb
dec
test
arpl
mov
outsl
call
clc
push
jmp
jne
mov
push
jnp
cmpl
dec
xchg
mov
call
in
mov
lea
jno
decl
jg
inc
popa
das
add
mov
das
aad
xor
sub
and
ljmp
jnp
lea
mov
cmp
add
cmp
push
call
inc
dec
sub
sub
test
cmp
sub
rorb
cli
sbb
pop
adc
cmpsl
or
call
add
add
xchg
sub
xchg
sahf
dec
aaa
mov
clc
mov
lea
mov
xchg
xor
xor
and
loopne
loopne
fsubrl
cmp
jae
add
das
icebp
mov
or
test
test
jmp
fadds
push
fadds
and
and
int3
pop
cmpsb
jbe
in
pop
lea
sub
lcall
in
sub
sub
and
inc
test
repnz
xchg
and
clc
mov
sub
and
scas
movsl
outsb
clc
inc
mov
incl
stc
in
push
test
fisubrl
cmpb
jle
loopne
fcomps
jmp
xchg
inc
mov
cmp
dec
sub
mov
jne
dec
and
xchg
push
test
jno
addb
mov
cmp
call
mov
mov
jns
pusha
cmp
and
push
pop
loopne
mov
add
or
pop
sub
pop
pop
pop
and
sbb
or
mov
mov
pop
hlt
dec
aam
jmp
mov
jmp
sahf
or
scas
xchg
mov
or
sarb
das
push
add
decl
jl
negb
mov
jns
pop
and
fdivrl
mov
xchg
dec
or
in
adc
and
or
js
mov
mov
rorb
and
mov
push
or
add
jg
pop
cmp
dec
test
cwtl
lds
or
jbe
insl
decb
shrb
mov
dec
cmp
enter
cmpsl
lods
incl
lcall
push
adc
xlat
pusha
lods
inc
xchg
es
dec
int3
push
loope
dec
add
ret
test
call
scas
js
mov
adc
mov
loop
add
add
or
pop
xor
inc
or
inc
int
arpl
enter
mov
lock
jge
decl
pop
mov
aam
jae
fildll
test
cmc
pop
xchg
lahf
sbb
cli
mov
jecxz
mov
inc
push
fwait
lods
clc
sub
insb
mov
jmp
iret
faddl
sahf
xor
jmp
data16
fdivs
pop
daa
jecxz
data16
aas
mov
cmp
dec
repz
mov
push
or
repnz
jnp
push
loopne
add
dec
sbb
into
or
out
cmpsb
das
cld
call
xchg
nop
adc
cmpsb
cld
decb
lret
js
mov
cmp
or
incl
out
mov
push
leave
js
sub
je
xor
decl
sbb
add
inc
loope
arpl
inc
ljmp
jecxz
jbe
icebp
outsl
aad
mov
or
test
push
xchg
cld
sub
paddsw
mov
inc
inc
dec
out
pop
sbb
xchg
nop
stos
into
mov
das
icebp
or
aam
jne
lcall
outsl
std
call
push
inc
pop
idivl
inc
push
cmp
jb
sub
sub
mov
in
je
les
loope
xchg
mov
insl
inc
inc
xchg
mov
incl
aas
add
das
sbb
pushf
fstpl
mov
add
adc
add
cmp
decl
ret
decl
inc
jb
insl
inc
or
jg
outsl
dec
outsl
jb
in
and
push
imul
and
push
outsl
jo
addr16
add
stos
mov
xor
add
dec
aaa
sub
xor
xchg
clc
incl
mov
rdpmc
and
or
scas
fnstenv
pop
pop
xor
mov
rclb
mov
ror
mov
mov
jb
testl
loop
adc
sub
inc
movsl
js
fimull
ljmp
push
push
inc
xchg
jne
arpl
arpl
outsl
outsb
and
decl
jnp
out
pop
pushf
inc
jge
xor
ja
jge
ljmp
pop
push
jae
pop
fwait
std
out
aas
jae
jne
jno
pop
std
ljmp
inc
fs
jo
sbb
mov
dec
clc
shlb
dec
gs
js
aaa
decl
jmp
scas
jge
pop
pop
push
jne
jns
popa
insb
push
and
push
gs
pop
sar
mov
bound
pop
add
cmp
jbe
dec
jo
pop
pop
push
xchg
cli
xchg
cli
jb
xor
xor
and
mov
push
mov
jno
jae
out
testb
sti
push
popa
xchg
and
mov
ret
inc
popa
fs
imul
out
imul
or
inc
lahf
popa
inc
push
sub
movaps
ljmp
jmp
pop
ret
mov
shlb
insb
adc
lahf
and
sub
push
push
ljmp
in
sbb
add
jne
rol
out
imul
outsl
je
ffree
out
or
and
in
mov
cwtl
das
or
idivb
outsl
add
sbb
push
pop
leave
jae
incl
jne
outsb
cmc
mov
or
xor
aas
jne
es
mov
incl
je
sub
and
insb
mov
imul
insl
sub
shrb
outsl
jne
mov
insl
or
fistps
sub
pop
xor
jae
movd
xorb
cmp
pushl
xor
notb
cs
int3
jge
inc
jg
insl
popa
addr16
jg
imulb
jo
fildl
imul
dec
inc
pop
xorl
bound
mov
insl
movsb
fs
xchg
sub
decl
rorl
push
push
das
xor
xor
push
cmp
add
popa
call
ret
bound
ss
push
popa
lea
push
jo
fnstsw
ret
push
ljmp
dec
push
push
pop
imul
test
mov
pop
or
cs
fistpl
das
std
sbb
pop
inc
dec
push
push
dec
inc
pop
pop
hlt
jo
inc
jecxz
fwait
push
pop
call
aaa
push
inc
shlb
outsb
shlb
call
fs
and
adc
jo
outsl
sub
ljmp
mov
aad
mov
mov
ret
pop
bndldx
push
dec
cld
pop
call
pushl
xor
scas
or
lret
scas
mov
dec
mov
and
pop
sbb
rol
xor
es
aaa
push
fiaddl
fucomip
incl
cli
inc
std
ja
inc
cmp
sbb
leave
dec
jb
pop
push
sbb
arpl
lcall
and
pushf
and
lret
fnstcw
or
and
pop
jo
testl
push
repnz
lods
arpl
ljmp
fiadds
mov
in
mov
ja
inc
ss
push
adc
insb
fs
ja
int3
cld
mov
mov
adc
bound
lock
clc
sbb
fbld
push
je
dec
fidivs
stos
bound
sbb
mov
addl
mov
add
arpl
jo
sub
das
sub
arpl
call
mov
adc
pushf
xor
xor
mov
loopne
call
sub
inc
inc
in
dec
dec
dec
dec
dec
dec
dec
mov
mov
lock
dec
sbb
test
arpl
das
pop
imul
mov
jne
ja
jns
jmp
cs
sub
ss
decl
cmp
daa
daa
sub
int3
sbb
cmc
jae
add
pop
pop
xchg
jge
cld
call
ja
add
lods
cwtl
sbb
mov
jg
cmp
jmp
jp
popa
or
cs
or
or
pushl
or
pusha
das
fldlg2
sub
testl
gs
mov
mov
sub
in
lods
mov
mov
pushl
cs
jb
enter
div
add
imull
int3
mov
mov
add
aam
sub
in
into
cli
mov
rol
mov
xor
xor
mov
stos
cmp
aam
mov
iret
sub
out
into
call
outsl
lcall
or
aad
daa
mov
jecxz
movsl
movsb
mov
sub
mov
sub
call
iret
rorl
std
in
in
enter
mov
into
sub
aam
icebp
leave
shll
pop
mov
inc
mov
push
xlat
mov
outsl
push
lcall
jg
ret
outsl
pop
cmp
mov
lcall
mov
jb
stos
into
in
fcmovne
cmc
sub
pop
mov
sti
jmp
shll
pop
loop
mov
stos
jmp
stos
pushf
out
pop
add
int
outsl
add
in
jae
aad
lock
jb
cmp
pushl
clc
dec
push
outsb
mov
loop
les
in
vlddqu
rcl
ljmp
sti
mov
in
aaa
inc
lret
in
jmp
or
ficompl
outsb
fnstcw
mov
test
mov
xorl
lock
lock
fistpll
ret
sar
xor
enter
sub
ret
in
adc
sub
lods
cmpsl
aad
mov
in
lods
mov
jg
mov
mov
cmp
mov
mov
aam
int
mov
push
shrl
or
testl
mov
xor
out
jg
ret
lret
insl
xchg
mov
sub
stos
push
inc
mov
pop
popf
mov
cmp
idiv
mov
notl
sahf
fstpt
stos
test
clc
inc
inc
jg
mov
or
stos
add
fcmovnu
xchg
sbb
jg
bound
mov
sysret
sub
mov
mov
lds
mov
lea
xchg
popl
imul
das
adc
push
pop
fwait
cltd
int3
les
nop
int3
pusha
adc
enter
pop
mov
stc
lret
lret
lret
lret
mov
lret
out
fidivrs
mov
cld
decl
mov
and
mov
nop
int
das
jbe
int
aas
fidivrs
adc
ljmp
aaa
adc
addr16
push
mov
jg
add
add
inc
cmpb
cs
mov
imul
xchg
adc
cmp
xor
mov
in
xchg
or
mov
out
cltd
and
clc
mov
mov
xchg
pop
insb
mov
addr16
mov
in
mov
inc
repnz
mov
add
inc
dec
push
jo,pn
bound
nop
mov
or
xchg
pop
jg
mov
popa
daa
fstl
add
adc
popa
xchg
insb
adc
aaa
aaa
xorl
incl
push
sbb
leave
cmpb
nop
outsl
and
rorb
mov
out
jg
add
pop
rcll
lock
andl
jno
push
aaa
call
mov
pop
imul
inc
inc
pop
inc
sbb
dec
insb
xor
gs
test
jnp
or
and
clc
or
das
inc
test
cmp
dec
ss
push
xchg
bound
and
mov
sub
sarb
push
dec
cs
push
or
add
test
out
adc
and
or
jb
gs
sub
xchg
mov
adc
mov
xorb
incl
subb
push
adc
mov
xchg
int
cmp
insb
pop
arpl
mov
inc
or
xchg
inc
or
add
aam
mov
repz
imul
pop
lahf
sub
and
sub
decl
cmp
add
outsl
dec
sub
adcb
in
mov
pusha
and
loopne
push
orb
sbb
adc
loop
jg
jmp
xor
ja
jge
cltd
outsl
mov
jbe
mov
outsl
pop
clc
outsl
adc
adc
fcomps
mov
dec
popa
insl
aaa
ss
cmp
popa
out
inc
jb
ret
jae
dec
sub
xchg
or
sbb
test
sub
lret
fdivrs
std
mov
arpl
gs
pop
push
sbb
jbe
aas
fadds
es
fbld
loopne
sub
inc
sbb
jb
shrb
push
call
insl
adc
jo
push
outsb
jle
cs
iret
sbb
std
rorl
imul
in
fbstp
adc
lds
or
inc
test
sbb
xor
in
sub
push
inc
push
outsb
cld
aaa
cli
in
jbe
jne
out
xchg
jo
and
jg
incl
bound
pusha
out
jno
cmp
sub
cmp
out
sub
bound
jne
inc
inc
xor
jo
ret
mov
loope
sbb
call
push
xor
push
mov
clc
and
jp
cmova
pusha
jae
fistpl
or
xchg
push
enter
cmp
adc
lcall
sub
arpl
fidivs
adc
ret
insb
pushl
xchg
popa
pop
jo
ja
roll
into
inc
and
pop
test
sbb
pop
mov
stos
aad
sbb
popw
adc
outsb
adc
ret
orl
decl
push
mov
mov
dec
inc
dec
sbb
inc
pop
add
out
mov
decl
mov
cltd
aam
insl
cmp
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
or
xor
lea
imul
push
ja
fucomip
jmp
xchg
pop
clc
fidivl
out
add
fnstsw
xor
push
inc
inc
inc
add
inc
pop
lret
inc
push
mov
jecxz
xor
movsl
shrl
cli
add
mov
cmc
dec
in
fisubrl
das
cltd
jae
or
insb
inc
leave
sbb
xor
jo
dec
gs
jnp
lcall
insl
add
cwtl
insl
cmpsl
sbb
je
or
cmp
dec
aam
incl
cmp
scas
je
sub
test
aaa
mov
test
sbb
imul
push
add
lcall
outsl
cli
addr16
xor
add
xchg
or
flds
mov
decl
mov
test
sbb
mov
lods
fsubs
dec
and
inc
sbb
pushl
add
mov
xor
adc
add
orl
call
dec
adc
pop
xchg
add
and
pop
paddsb
or
xchg
jbe
lods
push
das
dec
push
sub
fdivrp
jmp
pop
clc
mov
sbb
mov
mov
push
pop
inc
or
dec
popf
neg
fildll
hlt
add
add
or
or
or
jg
and
or
add
pop
sbb
in
outsl
iret
add
sbb
pop
xor
cld
in
decl
sbb
sbb
pop
or
xor
pop
inc
and
ljmp
push
clts
sbb
cmp
mull
or
jecxz
mov
pop
adc
cmp
or
mov
sub
add
call
push
push
std
and
mov
adc
sub
add
and
pushf
mov
add
and
or
xor
or
sub
push
sbb
inc
push
movsl
clc
call
push
xor
outsl
xchg
daa
and
and
sti
prefetch
test
outsl
hlt
pop
lahf
es
es
cmp
push
add
sbb
in
incl
pop
clc
call
or
xor
pop
sub
pop
xor
or
sub
or
push
sub
or
es
pop
xor
or
or
xchg
inc
sbb
incl
incl
std
mull
and
adc
sub
std
std
sbb
adc
sbb
mov
or
sbb
jg
mov
push
ss
or
adc
lret
das
adc
mov
push
inc
adc
or
adc
and
adc
mov
clc
ret
jg
mov
adc
sub
das
mov
mov
and
push
jg
jg
mov
and
and
cmp
or
add
idiv
adc
sbb
les
nop
out
cmp
mov
jns
add
xor
in
fildl
or
das
add
incl
or
add
iret
std
push
push
push
sbb
push
mov
ljmp
not
adc
sbb
imulb
and
idiv
sbb
sbb
add
sbb
push
jo
or
mov
lea
xor
insb
push
dec
adc
or
add
or
lcall
add
lahf
or
cmpsl
adc
inc
push
pop
pop
push
push
imull
fildll
xor
adc
sbb
ljmp
das
push
jae
xor
push
dec
mulb
dec
xlat
fildll
sub
adc
inc
adc
adc
pop
or
decl
or
cmpsl
bswap
or
add
rorb
fstpt
xorl
jne
add
or
pop
repnz
push
pop
push
sub
inc
mov
cli
div
ljmp
add
test
add
decl
xor
orb
or
dec
flds
pop
add
daa
sub
rorl
movsb
add
pop
push
leave
mov
ljmp
stos
in
mov
or
or
popa
nop
ljmp
and
jb
std
das
fmull
andl
xchg
and
push
mov
mov
fmull
gs
fistpl
or
xor
sub
mov
sbb
xchg
out
adc
addb
adcl
and
add
test
mov
mov
lea
aas
notb
adc
mov
inc
add
jne
mov
sub
adc
jb
fildl
cmp
adc
rorb
add
in
out
jne
push
jae
xor
jne
or
cs
je
lds
or
adc
or
and
dec
aaa
push
cld
or
add
add
adc
cmp
jbe
mov
inc
xchg
dec
jne
jmp
mov
add
jne
std
decl
sub
ja
add
jmp
idivl
add
mov
add
cmpb
jne
mov
dec
add
shr
rol
lcall
adc
jmp
bound
add
cld
loopne
mov
or
je
mov
lea
out
fcomi
push
pop
or
xchg
mov
xchg
dec
or
out
int3
testb
push
adc
cs
mov
add
jmp
popa
xor
mov
mov
ja
neg
sbb
cmp
ja
add
mov
jo
jo
jmp
fcompl
ret
and
mov
or
scas
xchg
inc
cli
push
push
jle
mov
push
push
orl
and
push
lds
sub
adc
loop
inc
std
incl
jne
sub
jmp
outsl
fstpt
pusha
pushf
jmp
incl
mov
xchg
mov
popa
pop
push
jmp
nop
add
add
sub
and
fadds
adcl
test
xor
jne
xor
mov
cmp
mov
pop
pop
je
pop
loop
stos
loop
jge
adc
adc
hlt
jmp
nop
sbb
out
pushf
mov
movsb
sbb
dec
lcall
or
jb
adc
sbb
daa
mov
cs
dec
adc
xor
pusha
pop
bound
cld
and
dec
inc
popf
inc
icebp
ja
inc
dec
dec
add
dec
push
stos
aam
dec
jae
dec
push
idivl
or
and
dec
hlt
call
push
jne
popa
and
jns
or
shll
fstps
inc
arpl
xchg
mov
inc
cmp
popf
jb
popl
je
insb
and
adc
outsl
dec
mov
xor
ficoml
outsb
or
iret
mov
filds
cli
aad
scas
sbb
pop
add
adc
wrmsr
add
rcrb
add
add
dec
shll
ds
pop
add
pop
lcall
push
add
add
leave
mov
mov
adc
imul
xchg
sbb
push
inc
lods
subb
nop
jle
outsl
jno
popf
xor
add
sbb
dec
outsl
sub
outsl
jne
lahf
ss
xchg
in
or
outsb
inc
push
mov
add
dec
popa
aad
subl
adc
inc
and
push
outsb
or
pop
and
and
sarb
fwait
cmp
mov
sbb
pop
lods
out
add
add
insb
xor
jb
imul
mov
in
adc
push
pusha
sbb
outsb
popa
jo
outsl
xor
in
rolb
sbb
gs
sbb
aam
push
jns
insl
sbb
mov
cmpl
fldl
pop
push
add
cmp
jle
xorb
inc
jns
dec
xor
loop
es
outsb
insl
imul
stos
gs
data16
js
mov
repz
and
dec
adc
jbe
outsl
mov
or
hlt
outsb
addr16
or
popa
movsl
inc
cmp
lods
js
js
pop
inc
je
in
mov
dec
adc
inc
or
xor
push
jae
or
add
or
xor
fnstenv
jbe,pt
sbb
dec
and
ljmp
arpl
add
push
int
push
mov
ss
add
mov
push
imul
testl
outsl
jbe
cmp
jno
jo
cmp
fld
aaa
xor
or
arpl
push
fisubrs
mov
xor
int3
push
push
jmp
in
loopne
ja
inc
nop
lahf
sbb
mov
add
xchg
lods
bound
invlpg
iret
fldenv
mov
add
and
add
push
inc
shlb
leave
push
add
dec
js
sbb
ds
cs
je
cmpl
nop
adc
icebp
pusha
cmpsl
adc
test
add
es
push
jnp
hlt
test
pusha
lea
dec
jae
or
ret
pop
jo
decb
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jg
incl
cmp
xchg
add
add
nop
push
push
add
pusha
pushf
inc
cld
mov
mov
mov
cmp
jne
jmp
dec
lcall
inc
add
mov
mov
xor
addl
sub
jmp
xor
mov
movb
loop
cmpsb
push
gs
push
cmpsb
push
inc
push
push
mov
add
mov
mov
mov
nop
nop
nop
nop
jmp
