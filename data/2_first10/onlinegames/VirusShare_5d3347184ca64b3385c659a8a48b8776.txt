mov
in
xchg
add
test
push
push
push
and
mov
or
push
movl
and
inc
lock
dec
ja
testb
insb
add
push
push
and
mov
jae
xchg
insl
sub
sbb
add
and
insl
idivl
sbb
addb
push
or
sub
outsl
xchg
lahf
sbb
test
and
shlb
rorb
shll
adc
or
in
mov
dec
sbb
lea
or
lods
mov
sub
push
cmp
jbe
mov
cmp
nop
pop
push
sbb
bswap
sbb
push
lea
push
mov
and
shll
dec
add
pop
data16
sub
jne
push
or
sub
pop
push
je
and
jo
push
push
pop
or
ret
push
or
and
mov
sbb
lea
psllq
mov
fdivrs
push
inc
push
cwtl
outsb
jae
jl
xor
push
das
sbb
pop
test
jne
jmp
ret
pushl
pop
pop
add
inc
add
jo
mov
push
xor
imul
pop
stc
mov
jno
mov
ret
enter
sub
sti
lods
mov
or
mov
mov
jo
mov
xor
mov
pop
cmp
lds
add
xor
sbb
dec
bound
xchg
jbe
lea
or
jae
sbb
ss
sbb
mov
enter
jge
cmpsl
sub
cs
je
xor
pop
mov
mov
inc
cmp
das
cwtl
or
jmp
xchg
and
jmp
mov
dec
sbb
sub
inc
jae
fucomip
jae
scas
not
sub
mov
mov
mov
adc
mov
int
shr
rep
pop
sub
stc
and
enter
sub
cmp
in
inc
jecxz
push
xor
cld
inc
mov
call
lock
popa
add
test
add
sbb
pop
jge
push
xchg
adc
cmp
fcmovne
inc
xlat
sub
pushf
and
push
push
cld
cmp
adc
push
push
sub
push
add
pop
xor
pop
ss
add
cmp
mov
rolb
mov
xchg
push
add
mov
xor
push
adc
adc
lea
push
cwtl
xor
popa
mov
cmp
inc
or
js
in
push
cmp
loop
jnp
xor
je
lea
in
xchg
aad
adc
adc
fwait
lods
mov
aaa
or
adc
nop
add
leave
leave
push
movsl
push
push
inc
in
sbb
or
push
rolb
sub
test
push
mov
and
outsl
pop
ss
test
add
dec
mov
ret
xchg
jge
movb
mov
fidivrl
test
in
push
add
push
mov
insb
in
call
jmp
cmp
stos
mov
add
icebp
pop
jge
cs
fldt
add
cs
imul
ss
pop
out
insb
sbb
jae
cmp
fxch
mov
mov
xor
insl
xchg
lea
adc
out
cli
in
insl
jo,pt
lea
icebp
fstl
adc
dec
cld
push
push
int
add
add
or
jne
pop
adcb
adc
inc
fidivrs
shlb
cld
enter
test
in
imul
addr16
push
js
cmp
xlat
jb
or
sbb
cmp
push
jmp
sbb
sub
xor
mov
or
cli
push
mull
jl
mov
pop
idiv
and
fildl
mov
daa
cwtl
lret
add
mov
loope
cmpsl
and
or
gs
jno
pop
push
add
pop
orl
int
mov
jl
lods
or
and
fisttpl
mov
out
sbb
mov
cmp
xorb
jae
dec
jo
insb
push
or
out
shll
mov
int
inc
xor
mov
add
pop
sbb
jge
add
add
and
fs
std
ljmp
mov
cmpb
jne
inc
or
add
or
jl
add
jbe
aam
dec
movsb
fdivrp
fbstp
testb
je
movzwl
jmp
sub
jbe
rolb
push
pop
dec
push
outsb
dec
and
add
cwtl
mov
mov
pop
orl
ret
mov
sti
mov
pushl
pop
pop
xchg
and
out
cmp
sub
lock
ret
int3
add
test
push
xchg
cltd
mov
ljmp
mov
sbb
push
xchg
sub
stc
inc
and
inc
and
and
arpl
mov
stc
pushl
outsb
fs
insb
xor
cs
and
push
bndstx
scas
insl
out
dec
add
pop
add
cmp
gs
std
mov
pop
or
adc
and
and
imul
or
and
and
out
pop
cmp
add
lock
inc
push
add
add
dec
pop
nop
add
push
add
mov
add
add
pop
mov
int
mov
call
jae
jo
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
cmp
mov
imul
insl
outsl
fs
adc
dec
jo
jmp
and
jecxz,pn
and
jecxz
jge
xchg
pop
cmp
sub
push
es
mull
aaa
fists
sbb
aas
and
cmp
and
pop
arpl
xor
pop
arpl
sub
pop
push
popa
out
imul
dec
add
jl
out
sbb
add
and
add
xchg
scas
jnp
or
adc
dec
add
punpcklbw
mov
in
add
add
pop
add
or
add
pop
or
imul
enter
and
pop
and
adc
mov
je
js
pushf
inc
nop
jmp
inc
mov
aaa
pop
and
jb
popa
je
ds
lods
mov
inc
cs
inc
lcall
fdivs
gs
outsl
arpl
into
andb
push
push
xor
inc
inc
or
cmpl
jae
cld
pusha
add
mov
jo
push
push
mov
incb
mov
in
mov
ss
les
fucomp
pop
push
push
add
or
out
test
and
sub
push
sbb
call
jb
out
add
or
add
in
or
in
fs
xchg
add
inc
adc
add
pop
testb
or
mov
aaa
mov
push
mov
cli
push
call
adc
lods
push
call
jg
cmp
adc
jne
pop
cmp
imul
sub
pusha
xor
mov
mov
cmc
dec
aad
das
sbb
and
push
mov
call
push
add
orb
jmp
add
or
adc
xchg
and
enter
push
fs
adc
push
flds
jle
cmp
loopne
mov
and
outsb
mov
add
repz
or
fmul
jo
pop
call
push
mov
cli
xlat
test
push
mov
pop
rorb
int3
insl
dec
cmp
pushl
xor
in
xor
lea
fcmove
lock
push
sub
xchg
adc
mov
js
pop
add
add
movsl
push
cs
or
or
mov
cli
mov
lret
inc
cmp
frstor
sbb
jl
mov
scas
cs
outsb
mov
insl
mov
push
dec
xlat
add
test
cwtl
jp
ret
mov
jbe
mov
xchg
sbb
out
into
add
data16
push
call
aaa
jae
fs
pushf
cmp
fisubs
push
sbb
mov
nop
mov
pusha
pop
ds
aam
pop
rcrl
jno
insb
mov
sub
push
cmp
or
outsb
lods
or
cltd
push
add
inc
inc
repz
xchg
push
stos
push
out
add
push
xor
jo
pop
insb
mov
imul
scas
mov
scas
lods
or
pop
and
mov
ss
mov
call
sub
xchg
ss
push
sbb
pushl
ja
add
cmp
push
outsl
pop
sahf
push
push
mov
js
cmp
xchg
aas
cmp
fistl
inc
lcall
push
loopne
pop
ljmp
mov
dec
cmp
or
jns
js
xor
cmp
popa
daa
xor
js
movsb
int3
push
shl
js
into
push
insb
mov
xor
push
xor
cmp
and
popa
mov
xchg
xlat
push
insl
fmull
fwait
movsb
xchg
iret
loopne
iret
pop
and
sub
dec
mull
mov
roll
inc
inc
dec
mov
rolb
test
jb
inc
in
rolb
inc
popa
fstpt
jb
mov
adc
scas
js
sbb
and
sbb
mov
xchg
mov
daa
lock
dec
mov
lock
mov
scas
shrl
stos
push
sbb
dec
aaa
dec
adc
sub
xchg
cmpsb
dec
in
inc
push
push
inc
leave
adc
test
inc
mov
xchg
mov
enter
cld
jbe
add
xchg
iret
and
aaa
pusha
xchg
cmp
or
xor
nop
addr16
xchg
sbb
repnz
movsb
jmp
or
stc
in
shl
and
pusha
lods
stc
add
adcb
add
mov
rorb
aas
push
mov
or
xor
mov
sbb
mov
jbe
jecxz
push
push
push
xchg
mov
sub
sbb
lods
femms
mov
sahf
sub
push
add
mov
in
mov
das
add
push
jmp
mov
inc
ret
mov
insb
jb
pushf
mov
fsubl
or
jns
mov
bound
xchg
pop
xor
faddl
push
adc
or
or
adc
push
je
sti
add
icebp
push
inc
jae
imul
jbe
cmp
out
pop
adc
mov
pop
mov
dec
lds
sub
push
push
dec
aaa
adc
lods
nop
cmp
or
sbb
imul
outsl
mov
mov
fcompl
out
fucom
adcb
clc
mov
outsb
icebp
xchg
mov
xchg
pop
cmp
aaa
push
mov
lock
pusha
call
mov
adc
int3
add
test
adc
and
inc
clc
clc
mov
cmp
jne
dec
ss
ret
xchg
jne
push
sbb
sbbb
in
pop
xchg
pop
jns
in
dec
jp
imul
pop
mov
pop
fs
and
inc
jle
sbb
mov
sbb
inc
inc
jnp
stos
xchg
cmp
adc
jae
fstps
adc
test
pop
cmp
inc
loopne
mov
inc
mov
insb
inc
mov
jnp
sbb
test
hlt
fcoml
mov
test
lcall
out
pop
arpl
mov
leave
adc
mov
or
mov
add
mov
mov
xor
pop
dec
inc
mov
dec
inc
sbb
dec
dec
jmp
fcmove
test
inc
bound
and
imul
add
xchg
ss
fisttpll
mov
mov
movsb
pop
mov
xor
je
and
jbe
jnp
jne
cwtl
adc
mov
je
xor
lret
fwait
mov
mov
or
ss
out
inc
adc
sbb
xchg
daa
and
sub
sbb
push
inc
fidivrs
add
repnz
sahf
in
add
pop
mov
stc
leave
dec
jle
pop
mov
mov
add
pop
pop
add
jg
repz
call
aad
push
in
add
into
repz
jo
sbb
mov
or
je
shrl
pushf
insb
loopne
js
mov
adc
push
sub
push
xorl
stos
movntps
inc
or
fisttps
jge
add
add
addb
sub
adc
sbb
ja
fcoml
addl
pop
or
arpl
subl
and
sahf
jnp
stos
dec
pushf
clc
and
xor
mov
xor
jno
xor
jnp
adc
scas
jo
mov
cmpsb
call
push
ds
push
jb
ret
push
mov
hlt
pusha
das
mov
je
fisubs
push
shl
fisubs
add
adc
ret
mov
sbb
push
push
push
cmp
in
mov
push
add
iret
data16
hlt
inc
mov
aas
xor
or
xchg
cmp
lods
adc
pop
mov
mov
mov
pop
mov
mov
or
push
xchg
push
clc
insb
fsts
and
fcomps
sub
inc
out
imul
mov
clc
fcmovu
and
push
lret
jmp
addr16
xor
or
mov
sbb
fsubs
and
xor
mov
int
inc
loop
or
push
push
call
inc
push
insb
pop
sbb
movzwl
push
call
add
mov
icebp
fstps
adc
jbe
adc
push
push
push
call
fnstsw
sbb
neg
sbb
add
xor
aam
mov
push
mov
shll
aam
into
adc
cmp
xor
roll
xor
fisttpll
pop
inc
pop
dec
add
dec
call
scas
jae
aad
enter
in
lods
rorb
outsb
ret
pushl
inc
adc
add
push
enter
push
sub
loopne
leave
inc
ret
lcall
aas
inc
push
mov
adc
mov
jge
pop
je
pusha
inc
push
dec
push
inc
xorb
test
lock
jo
cwtl
push
lea
popa
lock
xchg
or
pushf
jae
addl
mov
in
insl
mov
jo
sbb
repnz
in
jl
xchg
sub
inc
ss
xchg
popf
aam
add
mov
lea
fs
mov
loopne
cmp
sub
sbb
fcompl
dec
add
cmp
ret
xchg
cmpb
hlt
sbb
movsb
sbbl
push
push
mov
pop
sbb
dec
cmpsb
push
cmp
int
incl
push
inc
pop
sbb
std
push
push
lock
add
push
negb
imul
mov
lods
cmpsb
xor
jmp
mov
adc
insl
shrb
push
mov
out
loope
idiv
popf
popa
and
pusha
icebp
leave
in
jo
inc
cld
mov
and
sar
jb
sub
sarb
je
sbb
mov
xor
mov
mov
lods
into
lea
push
ss
xchg
insb
mov
clc
push
fsubrs
xchg
pop
pop
pop
add
shl
push
inc
sub
xchg
or
xchg
push
and
adc
mov
cmp
cmp
jb
sub
mov
test
cmpl
fldl
dec
test
mov
ss
cmpsl
gs
loopne
jecxz
sti
imul
shll
mov
xor
clc
in
in
inc
daa
inc
sub
fstpt
mov
adc
mov
cli
out
fdivl
mulb
mov
push
frstor
or
fmull
xlat
fidivl
fimuls
dec
movsb
aaa
jge
out
int3
inc
push
cmc
sub
loopne
adc
cli
jae,pn
dec
loopne
and
ror
or
mov
std
popf
inc
mov
lea
and
push
mov
add
add
and
pusha
mov
mov
rol
inc
ja
and
and
pop
fnsave
or
adc
inc
fists
or
decb
xor
add
add
pop
mov
mov
cmp
jne
call
jle
jge
jmp
fisttpll
out
cld
xchg
pop
lods
push
jne
jp
mov
mov
mov
fisubrs
push
and
data16
add
enter
imul
lock
bswap
adc
insb
data16
pop
data16
push
outsb
hlt
sbb
xor
popa
dec
mov
mov
call
sbb
mov
cmp
scas
stc
outsb
cmp
cmp
mov
pusha
divl
and
xor
sbb
inc
mov
filds
add
lods
rclb
cmp
push
dec
push
rcrl
mov
popa
mov
push
call
lcall
out
push
insl
push
movsl
aas
and
test
repz
and
js
sub
scas
jg
call
test
pop
jne
test
jne
test
jne
adc
xor
push
scas
adc
ret
sub
mov
lods
mov
jle
cltd
push
lea
imulb
fiadds
sbb
mov
ficoml
je
jg
nop
xor
fdivs
sub
push
hlt
xchg
cmp
fildl
and
sbb
jnp
andnps
mov
and
inc
add
cmp
jb
jnp
arpl
idivb
lcall
bound
notb
push
push
and
lret
mov
mov
mov
inc
add
or
decb
dec
or
test
mov
cmp
mov
inc
xchg
add
xchg
add
mov
fidivl
or
jecxz
dec
jb
repnz
clc
push
aas
aam
xor
in
sbb
and
repz
push
pop
mov
xor
jmp
push
cmp
call
xchg
sbb
xchg
and
ret
and
pop
jmp
dec
add
fisttpl
jne
outsb
push
fstps
or
out
mov
dec
and
and
call
je
sbb
xor
dec
imul
fs
push
addb
push
pop
call
movsb
cmp
and
aam
loope
enter
xlat
adc
mov
enter
or
leave
or
fdivr
incl
enter
repnz
incl
ljmp
nop
cwtl
mov
scas
int
push
cmp
or
faddp
cmp
sub
mov
or
lods
call
or
sbb
sbb
popf
outsb
repz
ret
and
movaps
cs
icebp
add
dec
roll
add
lahf
adc
fcomps
pop
gs
dec
and
xchg
out
movsb
ret
fs
and
cmp
and
lahf
int3
jo
add
test
cltd
movsb
mov
mov
cltd
mov
test
int3
sahf
pop
jb
test
test
movsb
pop
inc
mov
or
cltd
adc
dec
cmpl
push
and
int
mov
mov
cltd
fistpll
dec
pop
mov
xor
and
cmp
cmp
hlt
pop
call
mov
jbe
xor
sbb
xchg
cmp
shrb
shlb
nop
push
repnz
insb
pop
pop
pop
sbbb
nop
iret
and
pop
mov
or
cmp
pop
pop
pop
dec
test
and
pop
cmp
fs
pushf
inc
push
repnz
pop
cmp
pop
pop
push
lea
sub
and
push
jb
jno
cmp
inc
and
daa
nop
incl
jb
or
sub
add
iret
or
sbb
dec
pop
scas
sbb
ds
jns
sbb
pop
mov
dec
pop
jns
xchg
daa
dec
pop
insl
sbb
jl
and
jne
pusha
addr16
sbb
jl
sub
inc
pop
pusha
addr16
ds
xchg
xor
add
inc
pushl
add
jg
gs
cltd
pop
pop
cld
jbe
mov
add
les
lret
add
test
pop
cmc
pop
lds
fisttpl
cmp
sub
sahf
iret
rep
les
nop
mov
sbb
hlt
lock
je
and
or
out
mov
leave
out
nop
add
push
out
into
dec
push
push
fs
cmp
push
jb
cmp
je
mov
add
adc
sbb
pop
std
pop
stc
mov
mov
push
stos
sub
add
add
xor
xor
je
subb
fisttpl
fidivl
mov
es
jbe
cmpsl
sbb
adc
outsl
jne
data16
and
outsb
and
inc
cmpsl
sbb
ja
sub
xchg
push
mov
mov
jl
lea
push
push
and
mov
lcall
in
out
jle
test
jle
mov
pop
xor
sbb
shlb
ret
je
ds
inc
and
sarl
popa
test
push
dec
rcrb
les
sub
mov
dec
dec
dec
inc
int
insb
gs
dec
mov
test
mov
loope
lcall
es
sub
or
shrl
jbe
test
mov
test
jae
mov
insb
sbb
js
cs
imul
cmpsl
popa
push
insl
je
and
inc
or
popa
or
inc
frstor
imul
inc
xor
jns
jbe
sub
sub
mov
je
xor
pop
xor
inc
push
ss
cmp
cmp
outsl
cmp
sbbb
cmp
cmp
data16
adc
clc
mov
call
cmp
jg
aam
cmovns
push
adc
and
test
push
push
xlat
adc
add
push
fcoms
mov
inc
aad
or
imul
leave
mov
popf
mov
icebp
or
push
sarb
loopne
in
add
sub
inc
push
push
scas
iret
xor
mov
dec
pop
je
pop
mov
push
adc
test
dec
enter
add
mov
cmpl
cld
sbb
je
aaa
divb
inc
and
push
pop
stos
loop
dec
cmp
mov
xor
out
adc
or
push
push
lea
mov
inc
mov
add
add
shr
pop
or
inc
inc
sbb
push
scas
rolb
mov
push
orb
adc
cltd
pop
nop
mov
xor
push
daa
pusha
mov
out
aam
data16
xlat
jmp
test
jne
inc
cmp
jae
inc
sbb
add
mov
jmp
mov
addl
jb
or
pushf
sub
test
push
lods
add
inc
fs
xor
repnz
btc
shl
jg
mov
into
adc
or
movsb
fnstsw
and
or
lea
ret
push
lahf
cwtl
cmp
addb
adc
imul
cmp
je
in
adcb
out
sbb
into
ret
and
jp
mov
sub
pop
or
fsubs
shlb
in
pop
subl
leave
daa
fnstsw
decl
adc
mov
push
xor
inc
pcmpeqw
je
mov
rclb
repnz
aas
fs
and
das
mov
fidivs
out
dec
loope
push
adc
in
xor
xchg
out
adc
mov
and
mov
lock
sub
xchg
or
sub
mov
mov
insb
loopne
das
push
stos
test
cmpsb
mov
push
xchg
and
cmp
andb
test
sti
push
adc
pop
push
loop
inc
sbb
dec
je
mov
pop
mov
dec
ds
sub
scas
stos
sbb
out
enter
pop
xchg
cmovs
lock
mov
rorl
cltd
in
sbb
sbb
xor
inc
leave
nop
sbb
cwtl
add
pop
in
or
fnstcw
inc
mov
or
nop
add
sbb
aam
jb
inc
or
and
sahf
aaa
jecxz
mov
xor
insb
mov
xor
xor
xor
and
mov
xchg
stos
push
and
adc
dec
cwtl
or
inc
add
or
mov
stos
and
mov
mov
add
mov
into
push
push
leave
cwtl
and
mov
fwait
addb
in
jo
sti
mov
cmpsb
and
push
jle
push
pusha
pop
test
jl
xchg
and
sbbl
xor
cmp
je
jnp
mov
add
mov
jae
cmp
push
push
sbb
dec
imul
rclb
fs
testl
push
push
add
lahf
lret
outsl
pusha
push
xor
data16
rcrl
jl
test
and
cmp
stos
add
adc
jnp
mov
insb
adc
ret
call
lcall
fists
mov
add
insb
outsb
push
call
mov
add
adc
insl
push
arpl
pop
sbb
mov
add
xchg
push
in
push
add
push
pop
adc
push
push
xchg
shll
and
scas
pop
mov
adc
xchg
in
push
in
add
sarb
pushl
mov
push
add
or
add
adc
mov
sbb
dec
dec
pop
xor
push
sbb
dec
sub
sub
lods
jmp
adc
lock
pop
xor
repz
cmp
inc
test
or
loope
daa
push
push
add
aad
push
out
outsb
aaa
ret
mov
mov
sbb
inc
aam
enter
aaa
sub
inc
push
lret
les
push
add
mov
imul
dec
xchg
es
js
int
adc
pop
mov
mov
inc
loopne
mov
fistpl
mov
in
clc
push
js
movsl
pusha
fs
pop
je
dec
inc
push
cmp
jnp
mov
rcrb
daa
aam
shl
ret
or
sub
add
scas
or
daa
mov
subb
xchg
or
xrelease
push
sbb
fnsave
fucomip
sbb
call
or
jbe
dec
ret
call
xchg
push
xor
pop
mov
les
dec
adc
add
in
incl
and
movl
push
or
fdivrl
xor
xchg
or
jbe
or
inc
jno
je
int
push
mov
ret
xchg
lret
aas
cmp
mov
adc
incl
mov
sarl
shr
fistpl
int
adc
movsl
das
test
jl
sbb
lea
scas
es
fucomip
lret
push
std
lea
jo
cmp
pop
js
cmp
jae
xchg
sbb
rcll
inc
sbb
nop
sbb
fucomi
sbb
add
jmp
pop
ret
and
popa
lea
data16
inc
pop
and
mov
xchg
or
out
fisttpll
jae
mov
std
outsl
mov
jb
mov
or
and
out
mov
xchg
fs
push
or
jb
lahf
dec
insl
sub
sbb
push
or
push
ret
mov
jo
outsl
inc
pop
or
and
adc
mov
mov
mov
push
lock
fnsave
dec
pusha
not
mov
and
and
lea
rcl
mov
xchg
add
jno
js
mov
add
in
shl
sbb
sub
and
sbb
and
or
lret
add
hlt
jbe
jl
push
mov
call
cmp
add
fidivl
cld
aaa
push
jmp
and
or
dec
sbb
add
mov
adc
jo
fwait
rcll
or
add
std
outsl
and
and
not
and
or
incl
frstor
adc
push
pop
out
into
mov
push
shr
or
and
hlt
push
push
testl
movsl
out
fmuls
and
push
add
mov
sbb
scas
cmc
in
in
mov
rol
popf
loopne
add
and
leave
neg
xchg
add
ret
movb
lret
adc
mov
sub
int
out
lods
xchg
and
adc
test
inc
dec
xchg
movups
ret
pop
repz
rolb
inc
std
loop
leave
scas
mov
mov
je
adc
fcom
lahf
popf
mov
imul
add
cli
icebp
enter
fisttpll
std
sub
shl
mov
in
pop
lcall
cmp
les
adc
jnp
and
ret
or
arpl
hlt
mov
loope
lret
mov
add
mov
lods
fwait
sub
popf
inc
pop
in
popf
lcall
nop
imul
lret
mov
inc
rclb
data16
or
ljmp
adc
les
bnd
adc
fbld
ret
pop
and
or
sub
push
loope
and
mov
mov
imul
loopne
es
add
mov
adc
mov
icebp
sbb
push
divb
xchg
repnz
sbb
mov
lret
inc
rolb
mov
mov
or
lret
repz
enter
pop
adc
stos
xchg
scas
adc
enter
cltd
adc
jmp
sbb
cli
aaa
sahf
mov
jg
sbbl
das
sbb
dec
inc
shr
les
inc
xchg
xchg
inc
add
pop
or
fdivs
les
movsl
xchg
sbb
push
mov
dec
pop
xlat
popl
mov
outsb
out
inc
je
icebp
into
aaa
mov
sti
shl
movsl
mov
leave
enter
mov
xor
cmp
xor
add
out
loope
sbb
stc
dec
into
sti
mov
cmp
outsl
xor
mov
jns
mov
fwait
sbb
mov
jns
xchg
push
lret
inc
inc
imul
fidivl
xor
jl
cmp
xchg
in
adc
inc
movsl
or
and
enter
mov
jmp
scas
xor
dec
into
and
cli
fldt
dec
movsl
into
clc
mov
std
cltd
data16
pop
or
les
fistps
mov
flds
outsl
les
push
scas
sbb
fistps
xor
xor
leave
inc
mov
movsl
ret
mov
xchg
xor
xor
shl
inc
cmp
jge
shr
add
rolb
jle
pop
stos
xor
xor
jbe
loope
adc
movsb
lret
or
popa
popf
insl
outsl
mov
sbbl
stc
cli
xor
or
adc
mov
lods
or
in
enter
ja
aaa
xor
xor
add
mov
int
lcall
loopne
xor
sahf
pop
imul
sub
test
sahf
jg
hlt
sbb
xor
xor
shlb
popa
imul
loop
push
cltd
lea
mov
lret
push
adc
int
mov
xor
cmp
sub
ja
sbb
ja
xor
push
sbb
mov
daa
mov
or
clc
cwtl
sub
mov
xor
aam
adc
push
lcall
sub
sbb
mov
ffreep
ja
xchg
adc
rcl
popa
ret
ret
fisttps
int3
je
in
mov
sub
repz
sahf
ja
mov
mov
mov
xor
jmp
ret
lods
flds
rorl
jae
jmp
addb
jmp
ja
test
jp
add
es
notl
push
or
xorl
xchg
stos
arpl
rorb
cli
cwtl
and
xchg
out
daa
cmp
sbb
mov
or
enterw
pop
sbb
lcall
int3
or
push
or
sbb
out
call
unpcklps
mov
loop
lcall
dec
jle
outsl
sbb
lcall
out
push
or
aaa
inc
sub
add
fwait
and
or
jnp
int
shlb
and
arpl
sbb
cmp
xor
imul
push
or
pushf
lcall
rcl
sub
lock
fwait
push
cs
xchg
roll
xchg
xchg
lcall
xor
add
sbb
push
jo
pop
mov
cmpsl
lcall
cmpsl
jl
or
fcomp
in
inc
add
repnz
add
mov
cld
mov
mov
adc
or
add
jmp
xlat
jb
pop
pop
push
push
push
test
jbe
outsb
xchg
dec
xchg
or
mov
outsb
mov
rorb
mov
lods
mov
or
adc
jno
outsl
mov
or
cld
lea
jb
cmpsb
sahf
test
into
dec
pop
jns
mov
pop
xor
sbb
sbb
sub
cmp
sbb
sbb
dec
push
sbb
sbb
pop
pop
js
sbb
sbb
fs
sbb
xorb
inc
mov
adc
inc
inc
inc
movb
insl
inc
inc
mov
imull
enter
adc
jmp
aad
jecxz
add
jae
sub
or
loope
ja
adc
push
ret
pop
rcrb
enter
mov
cmp
decl
pop
push
and
adc
mov
ljmp
mov
jo
add
andw
mov
add
mov
insb
push
call
pop
jmp
add
mov
or
ljmp
add
adc
pop
call
push
sub
jmp
and
fildll
adc
pop
pop
push
pop
add
mov
push
int3
lret
pop
or
jne
das
rcrb
mov
dec
or
es
pop
loop
incb
incb
jne
mov
push
push
in
add
or
adc
lret
lsl
xor
mov
push
lods
icebp
pop
push
inc
add
test
mov
jge
cmpl
xchg
jg
adc
cmp
add
inc
stos
pop
pushf
push
aam
add
int3
add
inc
add
shrl
adcb
bound
insb
aas
add
add
loopne
sbb
fldcw
shlb
fs
or
cmpsb
imul
jmp
nop
mov
cmpsb
imul
add
lcall
lcall
shrb
cmpsb
imul
imul
cmpsb
imul
cmpsb
jmp
xor
inc
add
lcall
pushf
mov
lods
jmp
cmp
xor
jae
add
addb
or
xor
shll
pop
adc
fstps
add
lcall
mov
shlb
sbbb
lret
ret
fdivl
add
mov
repnz
sbb
inc
sbb
sub
sub
arpl
imul
dec
fwait
add
cli
sub
mov
add
xor
cmpsb
mov
cwtl
arpl
in
inc
mov
cmp
fwait
data16
fsubs
sub
in
xchg
popa
add
xchg
push
xor
dec
cmp
xorb
adc
mov
call
push
insb
gs
sahf
add
jb
imul
outsl
fsub
mov
jae
testl
jne
outsb
je
stc
jg
jg
add
jb
jo
inc
inc
sbb
inc
insb
outsl
jae
dec
popa
outsb
fs
mov
add
sub
push
push
jnp
incl
sub
imul
imul
gs
outsl
jb
pop
add
inc
sub
arpl
add
dec
imul
and
outsl
fs
inc
imul
adc
out
push
sbb
jns
outsl
push
imul
mov
mov
in
sub
add
jmp
push
test
cmpsl
cltd
sbb
jp
out
jge
xor
jns
imul
mulb
outsl
imul
mov
push
popa
insb
mov
mov
scas
lods
std
pop
and
push
outsl
adc
outsl
or
add
xor
dec
jnp
add
mov
adc
sub
cld
sbb
fidivl
xor
outsl
outsl
insb
push
insl
jo
push
jno
jae
outsl
sbb
outsl
mov
into
or
fsubp
outsl
jbe
inc
js
or
fisttpl
push
sbb
or
gs
push
or
movsb
fistl
mov
subl
push
dec
inc
dec
addr16
loope,pn
filds
insl
cld
add
fisubrs
sub
das
sti
cmove
pop
jne
jnp
int
out
sub
cmpsl
ja
mov
pop
xlat
dec
add
jb
data16
mov
xchg
aaa
push
add
jae
ds
add
jae
cmp
dec
inc
sub
insb
fstpt
inc
mov
fisubrl
gs
push
mov
or
push
test
dec
bound
add
add
inc
xchg
stc
sbb
add
je
mov
and
push
inc
push
push
mov
rclb
imul
and
sbb
arpl
pusha
aaa
fwait
inc
dec
je
add
addr16
lock
push
dec
gs
or
jne
jae
xlat
xchg
jno
loop
or
push
jbe
sbb
cmp
xor
adc
mov
mull
arpl
addr16
arpl
imul
out
push
imul
push
inc
cwtl
je
jl
adc
arpl
insb
test
push
popa
jbe
mov
sbb
and
adc
mov
mov
push
sbb
or
xchg
aad
les
lds
cmp
add
insl
dec
inc
dec
push
dec
out
add
push
js
pop
outsb
xor
sbb
rol
lods
loope
je
je
imul
ss
cmp
outsb
jbe
inc
jnp
jbe
adc
xchg
insb
dec
pop
outsl
adc
ja
mov
xchg
aad
dec
dec
add
pop
mov
mov
xchg
or
add
aad
je
push
pop
jb
sub
add
push
or
aas
aas
xor
lds
dec
inc
pop
lods
shll
dec
loope
incb
fstpl
xchg
add
insb
jl
push
sti
int
add
out
mov
push
and
mov
or
jo
dec
push
push
inc
push
mov
add
sbb
imul
pop
imul
cmp
inc
sbb
push
dec
dec
push
dec
cmp
fwait
xor
ja
add
mov
mov
xlat
sub
data16
pusha
inc
mov
xchg
dec
call
xchg
pop
mov
lcall
and
add
cld
sbb
lcall
sbb
insb
std
ja
add
inc
add
add
int3
std
inc
scas
popa
addl
enter
push
mov
jo
inc
or
mov
inc
mov
adc
adc
adc
lret
xchg
and
or
fldcw
push
and
push
xchg
adc
dec
pop
and
jo
adc
jae
push
xchg
push
insb
push
jbe
sub
adc
sbb
sbb
outsb
add
cmpb
ss
push
push
dec
lods
adc
sub
popa
bound
and
adc
mov
lea
cmpsb
outsb
sbb
aad
imul
inc
mov
push
adc
sbb
xor
and
in
pop
cwtl
je
es
jl
outsl
and
popa
push
jne
jo
idiv
cmp
insb
jbe
and
insl
bound
insb
sbb
pop
mov
arpl
jns
adc
xor
pop
fsincos
pop
xor
xor
cmp
cmp
xor
fcoml
jae
add
add
test
mov
outsb
adc
negl
or
mov
mov
xor
das
ret
scas
mov
sub
div
cmp
xor
xor
xor
or
mov
or
add
cmp
cmp
lret
sub
movsb
cmp
outsb
jnp
and
rcrb
aas
and
cmp
insl
lcall
jmp
popa
fmuls
scas
in
loop
fnstenvs
and
adc
inc
lea
sub
mov
arpl
mov
pop
andl
aaa
xor
pop
dec
pop
fsubrs
lahf
or
add
push
pop
das
jo
das
scas
bound
add
jne
addr16
cmovno
push
imul
das
push
addr16
das
sub
push
dec
push
push
jle
dec
push
push
lock
xor
xor
ja
ja
out
pop
int
lods
mov
dec
mov
inc
iret
cmp
inc
xorb
insb
imul
cmp
das
mov
nop
mov
mov
in
push
mov
xchg
lret
lods
rol
inc
xchg
add
add
fs
scas
pop
outsb
cs
xor
notl
shlb
inc
insl
outsl
gs
cmp
xor
cs
insb
add
sub
insb
int
xor
push
push
add
pop
mov
pop
or
insl
fs
insl
leave
sbb
pextrw
je
sub
or
inc
inc
test
pop
lods
js
xor
pop
dec
popa
cltd
sti
jmp
in
jb
xlat
aam
scas
mov
int3
shl
dec
pop
mov
mov
dec
mov
or
ss
pop
push
xor
dec
dec
outsl
push
outsl
mov
xor
inc
add
mov
popa
xor
xor
or
and
testl
fimull
fldt
int
push
iret
pop
add
sbb
sbb
mov
xor
mov
mov
mov
adc
dec
or
add
adc
pop
xor
xor
xor
push
xor
jns
test
xchg
xor
pushl
in
hlt
xor
xor
xor
xor
cmc
xor
xor
xor
xor
pushl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
filds
aas
xor
xor
xor
ja
mov
xor
xor
jmp
xor
xor
xor
xor
xor
out
sub
jae
jge
mov
ss
ss
ljmp
ss
ss
in
ss
ss
ss
aaa
sbb
and
ljmp
aaa
mov
stos
aaa
mov
shlb
aaa
in
aaa
aaa
push
cmp
cmp
cmp
decl
outsl
cmp
jp
jg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jne
cmpb
mov
sahf
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
fs
cmpb
cmp
mov
cmp
cmp
push
adc
push
ds
sub
cmpb
sarl
sarb
std
adc
sbb
aas
inc
aas
pop
aas
pusha
aas
gs
outsb
aas
jae
jns
jg
test
xchg
aas
cltd
aas
lahf
aas
movsl
aas
stos
aas
mov
mov
aas
ret
aas
aam
out
aas
cld
aas
adc
jg
call
data16
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
ss
or
pop
imul
in
and
cmp
cmp
pop
push
cmp
test
mov
jns
cmpl
scas
cmp
cmp
jge
nop
cmp
idiv
cmp
cmp
cmp
cmp
cmp
cmp
negl
cmp
ret
ds
int
std
aas
je
mov
cmpsl
mov
xor
xor
xor
repnz
pushl
icebp
xor
xor
xor
xor
lcall
xor
aas
divl
pop
xor
xor
xor
xor
xor
xor
xor
xor
ss
loop
jmp
mov
push
aaa
xchg
aaa
pushf
aaa
iret
aaa
xor
cmp
and
cmp
cmp
cmp
cmp
std
mov
int3
cmp
cmp
cmp
jae
or
cmp
cmp
cmp
cmp
cmp
cmp
jns
inc
cmp
cmp
cmp
cmp
out
stos
lock
mov
test
scas
inc
jg
push
or
wrmsr
mov
xor
decl
xor
xor
xor
xor
xor
jg
xor
cmp
add
ds
ds
ds
bound
push
jp
cld
cmpb
mov
xchg
ds
ds
movsb
ds
ds
mov
mov
pop
jmp
in
ljmp
cmp
ds
dec
aaa
cld
fcomip
aas
push
aas
pop
cmc
jb
jp
mov
lea
xchg
aas
xchg
cmp
ret
or
jmp
adc
pop
or
pushl
jo
mov
xchg
xor
mov
nop
xor
xor
xor
xor
xor
and
mov
inc
bound
push
xorb
or
add
add
add
xor
xchg
stos
fs
arpl
gs
jne
arpl
inc
in
cs
imul
aad
sub
outsl
cmovnp
sbb
add
js
arpl
pop
adcb
sbb
mov
add
add
daa
fwait
add
jae
inc
or
xor
outsl
inc
sub
push
add
adc
pop
arpl
in
mov
mov
popa
arpl
outsb
or
push
mov
mov
insl
scas
dec
dec
mov
stos
ja
sbb
mov
mov
cmp
pop
jo
arpl
int
sbb
mov
push
iret
add
jo
incb
pop
add
mov
shrl
nop
sbb
addl
add
rolb
nop
and
inc
add
pusha
frstor
add
adc
pusha
nop
rclb
adc
or
dec
and
adc
add
dec
and
nop
and
xor
jae
xchg
cmpsb
sbb
inc
dec
mov
mov
and
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
