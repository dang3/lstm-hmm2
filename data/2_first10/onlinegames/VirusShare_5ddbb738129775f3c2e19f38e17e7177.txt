push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
je
js
pop
ss
jl
dec
sbb
pop
subl
pop
push
dec
bound
arpl
sbb
inc
add
xor
and
or
cmp
and
nop
inc
push
cmp
hlt
lock
push
sbb
in
sbb
aam
fs
inc
ror
enter
push
les
shl
push
sbb
mov
pop
fcomp
lret
add
sbb
push
incl
jnp
mov
push
push
and
sbb
add
shl
push
in
mov
ret
push
cmp
cmp
out
pop
test
je
call
add
mov
jmp
enter
jne
xlat
insb
aas
mov
test
je
test
je
push
mov
and
cmp
in
popf
insb
sbb
cmp
push
mov
adc
push
out
popf
jnp
lea
mov
mov
push
push
mov
fidivl
mov
cmpl
mov
xor
ja
or
and
adc
jo
xor
mov
mov
and
or
in
in
mov
mov
jp
ret
push
push
push
cmp
jno
mov
shll
shlb
pop
mov
mov
add
sbb
jecxz
cmp
je
push
mov
mov
ja
lea
lea
std
rep
mov
es
sub
cmp
ja
and
sbb
imul
sarl
rep
cld
dec
sar
lods
insl
in
add
or
pop
out
or
mov
push
ja
adc
mov
test
add
push
cmp
jbe
cmpb
jne
cmpb
add
out
in
mov
jmp
cmp
nop
outsb
mov
xor
xor
add
popa
or
leave
cmp
jne
xor
es
ja
pop
pop
ja
mov
mov
push
push
cwtl
mov
mov
xor
jmp
decl
jmp
cmp
adc
mov
mov
inc
gs
fs
or
pusha
loope
sub
addr16
jmp
xchg
mov
decl
call
push
push
clc
or
lea
push
push
fisttps
std
ffreep
pop
adc
clc
mov
mov
or
add
or
je
jle
dec
jmp
push
or
pop
cmp
jb
cmp
ja
sub
fwait
xchg
sbb
xor
mov
les
jno
mov
cmp
xor
sti
clc
pop
add
mov
je
jge
sbb
pop
cwtl
mov
jnp
add
jnp
add
pop
movl
push
sbb
fldt
mov
xlat
push
add
mov
or
jge
mov
xchg
lea
lea
add
jo
imul
cs
jne
fwait
add
outsl
fwait
push
pop
add
inc
mov
outsl
or
es
push
inc
jbe
jns
or
jmp
and
rorb
lcall
add
dec
sete
out
pop
sub
xlat
cmp
add
addr16
jno
push
mov
outsl
push
adc
add
lds
or
and
or
xor
or
sbb
xchg
out
negb
int3
movl
daa
pop
inc
xor
pop
movsb
add
out
int
push
and
and
cmpb
jne
testl
push
xchg
rclb
inc
js
inc
dec
adc
ja
mov
cmpl
and
decl
fstpt
add
pushl
and
inc
and
adc
mov
push
push
sbb
lret
jnp
sbb
lea
pop
push
sti
in
dec
push
test
mov
enter
push
sbb
dec
inc
jmp
push
dec
sub
mov
or
jmp
lea
mov
or
iret
xor
push
mov
mov
les
mov
or
jmp
cmc
rcl
je
into
mov
into
mov
and
adc
add
sub
push
pop
sbb
or
sbb
ljmp
fstl
imul
mov
mov
or
loopne
test
data16
insw
push
pop
mov
cs
pop
jg
adc
adc
pop
mov
call
dec
jnp
andl
cmp
and
and
mov
add
mov
sahf
or
sbb
jb
xor
adc
mov
xor
fwait
mov
cmp
jbe
mov
mov
inc
inc
and
jmp
xchg
test
daa
jo
pop
shl
add
pop
mov
push
pop
push
test
add
addl
cwtl
jnp
and
js
or
push
or
ljmp
fwait
add
sub
je
mov
cmp
jae
testw
mov
mov
je
cmp
je
inc
mov
insb
rorl
sbb
jb
jle
mov
movb
incl
jmp
pop
mov
mov
pop
orl
mov
adc
rorb
pop
dec
mov
es
mov
roll
push
sti
pop
outsl
call
jl
mov
inc
cmp
adc
out
jmp
adc
jne
dec
sub
mov
jl
cmpb
aaa
test
je
adc
mov
mov
and
pop
mov
cmp
ds
adcl
add
inc
sti
or
or
lock
cld
sub
cmp
decl
aaa
jge
pop
insb
mov
push
daa
aaa
or
mov
xor
push
loope
out
iret
push
ret
push
cmp
divb
insl
sbb
jne
adc
add
fildl
sub
iret
jae
sar
shlb
shrb
mov
xor
div
add
das
pop
push
outsb
icebp
and
add
pop
sti
std
ret
sub
and
cmp
sub
jle
xchg
add
mov
adc
inc
sbb
mov
inc
dec
jne
add
or
mov
or
lock
shlb
bound
mov
loop
push
inc
sub
je
mov
push
sub
je
pop
jle
pop
and
je
pop
je
xor
add
adc
dec
or
in
fucomp
add
sub
or
cmp
ja
lea
mov
xchg
add
add
sub
dec
je
imul
or
addr16
js
pop
sub
jmp
arpl
sub
stc
mov
je
insl
sbb
and
mov
xor
adc
or
aas
testb
incb
mov
xlat
fninit
fldcw
or
xlat
mov
inc
faddl
inc
jmp
add
repz
js
iret
lret
mov
fstpl
add
test
std
jne
es
lock
clc
fs
jae
insl
scas
add
or
icebp
inc
shl
or
mov
stc
call
das
insb
insb
js
std
xlat
stos
xchg
fsubs
shr
and
rolb
dec
lods
pop
lods
jnp
insl
orl
pop
movsl
pop
mov
outsl
cmc
add
sbb
in
cmp
je
pop
mov
int3
or
scas
adc
mov
nopl
sbb
mov
daa
push
pop
mov
mov
ljmp
jbe
cld
push
insl
jmp
lcall
ja
jle
test
push
add
repnz
push
push
jbe
pop
testb
lcall
je
cld
pop
dec
mov
outsl
sbb
fidivl
or
sub
mov
popf
add
xor
xlat
std
or
add
loope
loop
out
cs
insl
push
std
jl
push
hlt
mov
das
std
adc
mov
add
jbe
inc
or
mov
pop
inc
ret
jmp
xor
xchg
or
aas
mov
push
cld
mul
xor
cmovl
adc
push
clc
outsb
mov
and
jg
ficomps
jge
pushf
adc
xchg
ja
cmp
sbb
add
fldt
in
push
insl
xchg
add
mov
push
mov
in
xor
mov
pop
add
fdivr
mov
add
pop
push
push
mov
ljmp
xchg
cmpb
je
cmp
jne
movsbl
inc
inc
jmp
ljmp
rcrl
dec
cmp
test
loope
pop
mov
xchg
mov
adc
loop
ret
xchg
add
add
push
pop
sarb
cmp
push
push
sbb
je
cld
lods
sub
iret
adc
rolb
out
loop
mov
push
add
cmp
cli
out
stos
aaa
test
ret
xor
adc
push
cs
jmp
jl
and
add
add
cmp
jp
jg
jl
insb
xor
cmp
jbe
adc
push
pop
or
push
cmp
je
cwtl
push
jo
dec
add
push
cmp
faddl
cld
xchg
imul
mov
fsts
mov
jg
fbstp
add
add
inc
add
insl
clc
fldl
jo
adc
neg
pop
mov
nop
pop
inc
or
je
fs
xchg
movsl
push
in
cmpsb
es
mov
inc
add
pop
cmc
cmp
push
cltd
push
movsb
call
jae
add
pop
aaa
xor
xor
jnp
pop
or
pusha
add
ja
mov
or
je
sbb
movsl
insl
mov
adc
mov
push
cld
pop
or
mov
ljmp
pop
inc
int3
jmp
inc
roll
mov
inc
or
push
pop
mov
jo
add
dec
mov
inc
fiadds
fucomp
call
adc
pop
fcmovnbe
xchg
cwtl
lock
add
call
leave
ret
cmp
jle
mov
inc
mov
add
call
inc
sbb
mov
pop
mov
movsb
xor
push
mov
pop
sub
aam
xchg
add
lret
imul
rol
add
std
insl
icebp
lcall
mov
loope
jno
sbb
movb
insl
mov
jecxz
xchg
inc
loop
mov
inc
call
pushl
add
mov
insl
ret
mov
or
or
fstpt
es
push
sub
cmpl
adc
and
jne
mov
cmpb
mov
cmpl
jl
lds
dec
adc
data16
fidivl
adc
sbb
and
mov
push
push
adc
mov
ljmp
pop
iret
shlb
cmpsl
jl
int3
mov
cmp
or
jo
adc
or
push
mov
or
push
mov
push
or
and
sahf
jmp
lahf
test
clc
ud0
arpl
clc
jb
xlat
mov
popa
iret
and
sub
movl
xor
fildl
daa
and
inc
jg
sbb
adc
mov
or
xor
imulb
xchg
dec
jmp
inc
divb
jle
xlat
adc
xchg
mov
imul
add
dec
mov
inc
add
add
or
mov
adc
je
lds
xchg
stc
sub
cmp
int
fwait
xor
std
sub
fisubrs
fsubr
loopne
inc
or
lret
pop
ret
dec
leave
mov
push
jns
jl
cmp
cmp
or
inc
in
insl
popa
add
inc
add
testb
in
jmp
push
push
mov
inc
or
aaa
clc
pop
mov
scas
jne
not
in
rcrl
outsb
mov
mov
jb
cmp
jl
mov
xlat
push
test
mov
mov
add
mov
andb
sub
rcl
jns
ja
add
push
inc
das
push
adc
movb
xor
mov
mov
cmp
je
cmp
push
lcall
aam
cmp
push
cli
cld
add
test
sub
dec
mov
mov
mov
aam
bound
dec
mov
scas
dec
clc
inc
lock
jo
lret
mov
arpl
mov
xor
adc
push
push
or
jmp
insl
in
cld
cmp
adc
dec
mov
insl
aas
mov
test
mov
jmp
mov
push
inc
pushf
sbb
insb
xchg
into
orb
leave
out
mov
or
mov
jno
fstpl
pop
lea
jmp
mov
or
cli
pop
push
decb
cld
ja
add
push
shr
es
testb
mov
dec
je
in
mov
loopne
push
or
add
or
imul
add
pop
and
and
fldt
lret
cmp
cmp
jne
push
adc
ret
loope
cmp
jne
ja
jmp
pusha
jmp
push
adc
mov
jg
shr
or
fwait
ja
sti
push
clc
inc
mov
lar
add
aaa
xchg
ret
pop
xlat
sbb
popa
pop
or
dec
mov
in
or
out
jecxz
xor
adc
pop
sub
mov
jl
cmp
jge
sub
mov
jg
add
sbb
sahf
js
iret
adc
in
dec
mov
xchg
jmp
adc
pop
or
mov
and
lcall
xor
mov
pop
jle
movsl
mov
jle
and
stc
add
jnp
call
daa
inc
push
pop
and
fwait
push
cwtl
xchg
xor
mov
push
into
dec
js
mov
inc
dec
test
adc
cmpsb
das
out
cltd
sbb
cmp
fcomp
add
sub
clc
push
dec
ja
pop
and
jle
adc
cmpl
loope
add
sub
ret
adc
mov
jo
stos
jmp
mov
jecxz
jae
xor
push
pop
dec
sbb
icebp
test
pop
push
cli
dec
xchg
iret
push
mov
push
xchg
mov
push
aad
cmp
and
pop
xor
dec
jg
mov
cmp
loop
sub
push
xor
mov
faddl
cmp
je
cmp
je
dec
pop
cmp
fisttpl
js
cvttps2pi
mov
jbe
add
or
add
or
adc
push
or
sbb
mov
mov
dec
and
sbb
sub
add
adc
sbb
xchg
mov
jne
or
ja
xlat
ljmp
call
movsb
dec
xor
pop
mov
repz
adc
push
call
adc
test
jmp
pusha
mov
jl
cmp
ret
xchg
and
jo
das
mov
and
dec
and
data16
add
rol
inc
dec
ret
and
mov
stos
add
add
xchg
add
out
jne
shl
adcb
ljmp
mov
sbb
and
pop
dec
or
shlb
fists
mov
decl
daa
repnz
mov
jmp
and
push
je
fimuls
sbb
adc
and
into
sbb
mov
adc
icebp
jnp
or
shrl
fwait
push
imul
fcmovb
stc
cmc
push
roll
rcr
aaa
mov
or
jbe
incl
call
add
jge
pop
lea
push
pop
cld
std
xor
clc
pop
ret
subl
pop
mov
stc
loop
xchg
mov
add
pop
fldcw
xlat
or
mov
mov
mov
lret
and
inc
inc
xchg
push
sahf
sub
popl
fnclex
orl
jl
imull
andb
jle
adc
or
jmp
push
mov
bound
pop
sub
pop
adc
sub
mov
cmp
sub
fwait
mov
fcmovnb
mov
push
icebp
lods
in
leave
xor
insl
or
mov
pop
mov
sti
in
insb
fs
addb
xor
dec
mov
fsubrs
cmp
int
js
xlat
jo
push
imul
mov
sub
sub
aaa
or
dec
test
enter
jmp
mov
or
pop
push
adc
roll
inc
in
mov
gs
pop
sbb
das
xchg
enter
nop
pop
mov
test
enter
insb
or
enter
pusha
xor
and
and
and
cmp
or
enter
sub
xor
and
enter
and
and
loop
push
sbb
adc
pushf
sbb
nop
add
clc
loope
xor
and
and
and
aam
inc
fistl
int
loop
shl
or
sub
cmp
in
sub
mov
nop
pushf
mov
repz
mov
inc
inc
dec
push
imul
pop
dec
pushf
sbb
add
arpl
jne
add
push
xor
add
addr16
jle
imul
push
cmp
fimull
inc
pop
cmpsl
add
and
in
pushf
xchg
in
mov
mov
mov
xor
push
sbb
adc
and
mov
cmp
xchg
scas
das
adc
cwtl
nop
pushf
mov
mov
nop
out
test
lods
add
in
mov
enter
mov
xor
sbb
and
xor
and
add
sbb
push
int3
shlb
fsubrl
sbb
stc
add
or
pop
cld
jg
gs
gs
xor
cs
insb
aas
inc
jb
popa
je
push
outsl
outsl
in
sti
outsl
fldt
jo
push
outsb
popa
jo
push
sbb
mov
ja
dec
imul
cmovle
je
ss
pop
sbb
dec
mov
jg
push
adc
arpl
jae
gs
outsl
jb
add
ss
mov
push
pop
push
fs
ds
pop
dec
outsl
and
jne
nopl
xchg
mov
xchg
js
sahf
or
leave
or
xor
inc
sar
nop
pop
push
xor
jb
adc
xor
xor
addb
sub
and
mov
xor
sbb
cltd
xchg
jo
inc
cmp
jb
incb
popa
insl
and
and
dec
jne
insb
xlat
imul
adc
lock
js
jb
pop
jno
pop
dec
popa
imul
fists
adc
outsl
data16
imul
sbb
jge
outsl
inc
jb
xor
xor
outsb
outsb
inc
jae
das
cmp
loopne
sbb
fs
jb
xor
cmp
sub
rdmsr
xor
push
lea
push
push
mov
outsl
xchg
int3
inc
or
fcompl
add
jmp
sub
stos
test
or
test
pushf
test
movb
in
js
jg
mov
pop
pop
mov
in
push
sti
iret
out
xor
mov
push
clc
mov
mov
or
lock
ja
insb
xchg
xor
jbe
and
popf
push
mov
mov
test
add
scas
sti
std
outsb
stos
push
jle
mov
lea
aam
adc
jbe
fisttpl
jg
push
cld
mov
repnz
mov
mov
sti
push
repnz
mov
jg
cmp
test
imul
add
jle
mov
cmp
mov
cltd
mov
pusha
mov
lods
shrl
ljmp
in
mov
jg
call
xor
jge
push
mov
clc
mov
and
jl
dec
jbe
push
mov
mov
imul
lea
dec
jge
sarb
and
iret
insl
lock
stc
mov
cmp
mov
outsl
jo
push
sbb
push
add
push
add
je
mov
lea
iret
int3
divb
push
fnstcw
ror
ljmp
and
sbb
hlt
mov
mov
pushf
pop
push
or
mov
mov
sbb
push
xchg
call
call
fmul
enter
pop
fdivl
enter
loopne
mov
pop
fsubrs
ror
int
lret
rcl
aam
mov
jb
icebp
add
les
push
pop
enter
or
dec
xor
sarb
mov
mov
xor
enter
lods
pop
jb
enter
mov
and
jb
int
movsb
pushf
mov
mov
xchg
cwtl
leave
and
mov
in
fiadds
mov
sbb
popa
in
cmpsl
add
jl
cmp
addb
imul
cmovb
nop
lds
ss
fisttpll
xor
dec
insb
test
xor
xchg
insb
sbb
and
fs
iret
pusha
cwtl
pusha
rolb
xchg
xchg
add
pop
pop
in
out
pop
push
test
in
inc
mov
cmp
mov
dec
inc
inc
dec
sbb
inc
inc
inc
cmp
inc
jns,pn
cmp
add
xor
cmp
xchg
cmp
xor
xor
pop
xor
scas
sub
sub
iret
leave
and
mov
gs
jb
enter
sbb
adc
cld
sbb
pop
xor
adc
inc
es
pushf
or
cmp
mov
jae
add
or
add
add
xor
mov
cmp
iret
clc
cld
cld
hlt
mov
mov
jg
inc
in
mov
lock
call
jle
iret
cli
push
and
sarb
stc
push
push
iret
jae
cwtl
fisubrs
mov
add
and
or
and
dec
ja
jae
mov
xlat
movsl
mov
push
psubw
and
mov
testl
arpl
jne
inc
xchg
cld
leave
pop
jae
jns
gs
insl
cld
xor
pop
add
add
sub
xchg
out
xor
incl
popa
lods
daa
outsl
insl
outsb
imul
nop
imul
sbb
enter
sub
adc
xchg
aaa
popa
outsb
pop
jns
and
mov
xchg
sbb
add
xchg
iret
in
shlb
clts
out
pop
mov
add
inc
das
aas
add
ljmp
shl
int3
mov
jmp
loopne
rcl
out
push
mov
or
lock
rol
xor
pop
xor
sbb
les
dec
roll
adc
adc
ret
push
lds
pop
mov
add
and
inc
sub
mov
pop
cli
mov
sub
rep
mov
movsb
fdiv
adc
pop
xchg
xchg
ret
sbb
pop
push
sub
push
or
lds
add
jo
pop
mov
mov
clc
xor
int3
les
xor
filds
rolb
mov
iret
adc
hlt
aad
pop
or
sub
push
add
push
out
inc
jae
dec
adc
push
mov
mov
icebp
mov
scas
push
rcll
lods
cli
dec
sbb
jne
jne
inc
clc
fsubr
push
movsb
push
add
int3
mov
inc
or
leave
popf
push
sbb
sbb
pop
dec
dec
sub
lret
cmp
nop
fiaddl
adc
out
mov
adc
lea
xchg
dec
outsl
popa
fs
imul
adc
xchg
pop
mov
push
andb
lods
or
jl
jae
or
stos
or
sub
jne
xchg
xchg
push
inc
pop
ds
ret
sub
push
push
fucomi
push
inc
in
movb
adc
mov
xor
inc
pop
pop
rcl
mov
or
xchg
dec
sahf
in
aas
sarb
pop
sub
shlb
jbe
mov
adc
nop
ja
cmp
mov
dec
lea
mov
popa
jmp
adc
add
adc
leave
push
mov
mov
push
fwait
mov
repnz
mov
sbb
mov
nop
push
push
mov
dec
inc
cmp
mov
or
sti
push
lds
or
xchg
scas
xor
je
push
orb
lea
mov
xchg
cs
and
cwtl
cmp
enter
xor
lret
sbb
std
bts
mov
jl
ljmp
jne
stos
inc
mov
dec
loopne
cmp
pop
and
push
inc
cli
out
mov
xchg
push
push
das
das
mov
add
xchg
popa
or
mov
mov
xor
in
out
fisttpl
fadds
aam
shlb
mov
inc
hlt
lock
xchg
xchg
mov
popf
adc
inc
push
frstor
xor
lock
cmpl
jb
ljmp
jg
cltd
fwait
xor
push
lea
adc
test
jnp
adc
inc
cli
paddb
cmp
jge
xor
mov
pusha
mov
mov
sti
xorl
mov
mov
incl
cmp
je
mov
inc
inc
jmp
popa
pop
shrb
sbb
cmp
or
adc
add
ljmp
test
ret
jae
in
or
push
les
in
xor
push
jae
outsb
int3
fildl
inc
das
in
leave
out
or
shrb
or
in
or
loopne
mov
out
adc
and
push
test
scas
sbb
ljmp
mov
sbb
push
sub
add
nop
movd
jns
inc
imul
orl
xchg
push
cmp
jb
testl
inc
movb
cmp
and
add
xchg
adc
test
cmp
mov
sbb
jo
das
adc
jp
ret
cs
inc
iret
and
and
es
sbb
out
iret
cmp
sti
jnp,pn
cmpb
inc
mov
mov
icebp
dec
jns
jo
fisttps
mov
inc
arpl
push
and
das
sub
dec
push
push
push
das
xor
std
sub
test
push
dec
push
push
pop
outsl
outsb
je
jno
pop
mov
shlb
outsb
fildll
cmpsl
je
adc
add
mov
insl
sub
outsl
fs
leave
jne
or
jns
mull
xor
mov
inc
dec
insl
ret
lds
jg
push
push
dec
add
cmp
loope
pop
mov
call
mov
pop
sub
sub
jbe
add
mov
sub
jmp
mov
fistpll
jne
xor
add
push
mov
sub
push
mov
cmpb
mov
repnz
sub
and
shlb
pop
or
nop
push
fcoml
flds
fcom
ror
adc
stc
mov
clc
aad
inc
sub
push
shl
mov
xor
cmp
push
enter
sub
adc
pop
pop
adc
in
popa
sub
test
add
sbb
addr16
enter
jmp
cld
in
enter
std
in
mov
out
scas
out
push
xadd
movsb
dec
fidivs
cld
jns
push
loop
jne
orl
nop
add
aam
add
cmp
sar
cmp
dec
add
jns
enter
mov
insb
mov
push
jl
sbb
cli
cmp
jmp
adc
nop
in
jo
jb
xor
push
jne
ds
adc
jno
dec
imul
xchg
sub
xchg
aad
push
rolb
cmc
insb
test
pop
add
les
movsl
pop
cmpsl
mov
or
or
mov
ljmp
cmp
fcom
je
add
mov
fcoml
pop
sub
icebp
jmp
in
inc
xor
pop
andl
int3
jmp
idiv
jg
hlt
mov
mov
add
jne
test
jl
mov
inc
adc
lea
popf
cld
mov
cmp
fcmovbe
push
insl
jmp
jmp
add
push
inc
decl
jne
cmp
divb
jmp
das
dec
cmp
jl
sbb
push
sbb
rclb
pop
jl
pop
cmp
jle
dec
adc
inc
call
mov
push
sbb
rorb
fucomp
inc
je
inc
jle
add
std
mov
push
adc
push
movsb
push
sbb
adc
and
or
js
bound
shrl
push
mov
mov
xchg
in
xchg
add
loop
or
jge
sti
xor
rcll
call
lock
xor
mov
lret
insb
jp
in
jbe
lahf
or
mov
sbb
ss
push
hlt
inc
jecxz
js
mov
push
mov
rsqrtps
xor
sub
dec
imul
stc
loopne
inc
dec
jae
lret
mov
fsub
cld
mov
sub
loop
movsl
loopne
add
aaa
icebp
xchg
loop
push
mov
cmp
inc
add
push
dec
jle
fidivs
xchg
or
add
sar
in
out
mov
enter
jne
cmp
fs
jbe
movsl
jmp
or
xchg
out
dec
loopne
mov
xchg
push
loopne
mov
orb
dec
dec
loopne
xchg
and
push
dec
fneni(8087
xchg
insb
dec
call
in
aaa
sub
cmp
jmp
mov
adc
sbb
jge
xor
pushf
mov
jle
sub
jb
add
dec
jne
jl
dec
sub
mov
pop
stos
dec
mov
add
mov
rcrb
xor
add
dec
hlt
mov
xchg
push
cmp
pop
add
dec
push
push
add
in
pop
repnz
call
addr16
in
mov
dec
cmp
mul
inc
ret
inc
jbe
sub
cwtl
icebp
cmp
jp
adc
xchg
mov
cli
sub
in
xor
add
movsl
inc
xorb
push
jbe
in
popf
add
sbb
xor
lahf
or
pushf
cmp
dec
mov
inc
add
sub
call
gs
int3
dec
push
dec
push
cmp
dec
sub
mov
jbe
jb
aam
xchg
pop
jb
or
and
sbb
in
dec
adc
dec
or
inc
mov
cmp
insb
add
push
fadds
sub
mov
rorl
or
dec
cmp
xor
aam
add
dec
mov
pop
mov
and
outsb
in
out
dec
jb
fisubs
or
dec
inc
push
and
push
pop
jmp
xor
pop
fs
sti
or
adc
imul
dec
dec
xorl
push
lock
es
mov
into
inc
jne
je
insl
inc
imulb
and
dec
ja
and
in
dec
adc
dec
inc
push
loope
das
jmp
pop
ja
pop
push
outsl
fnstenv
rorb
inc
pusha
fldl
ljmp
out
and
pop
add
xchg
jae
test
xor
mov
test
add
test
dec
or
inc
add
sbb
in
sbb
test
xchg
adc
dec
pop
push
xor
idiv
add
mov
cmp
jge
mov
lea
mov
fildll
add
push
push
mov
push
mov
pop
sar
xchg
fisttps
xor
add
cmp
std
popa
push
outsl
cmp
sub
jb
in
outsb
outsl
outsl
pop
dec
add
pop
mov
jmp
and
or
mov
mov
or
or
add
mov
cmpl
pop
mov
out
shlb
push
jg
mov
cmp
add
pop
stos
cwtl
push
mov
or
fcomps
js
pop
ret
cmp
repz
dec
lds
in
scas
xor
add
je
mov
cltd
jnp
inc
pop
mov
push
add
adc
jg
cmpsl
push
fnstsw
or
jb
jmp
jl
outsb
ja
jmp
jbe
loope
or
shll
fs
xchg
inc
loope
adc
in
mov
ljmp
push
aam
push
jg
lea
push
jmp
mov
or
pop
pop
rorb
cmp
mov
pop
in
inc
les
xor
lods
jge
clc
cmp
and
or
mov
adc
xchg
xor
push
dec
jae
addr16
shrb
sub
movsl
and
sbb
and
outsl
sbb
call
cltd
mov
cmp
out
adc
lds
shll
fnstenv
fdivr
sub
je
sbb
sbb
test
or
sbb
pop
and
mov
into
mov
in
push
cmp
or
orb
cltd
add
sbb
xor
add
mov
in
or
daa
inc
or
ret
in
pop
push
ficomps
push
repnz
cmp
pop
cmp
jae
cmp
jmp
std
pushf
stos
lods
add
jne
stos
jbe
lods
pop
adc
or
sub
imul
mov
es
dec
inc
in
insl
xor
hlt
hlt
inc
push
ret
xor
add
cmpsb
sub
adcb
and
and
shlb
rorl
sbb
pop
inc
sbb
adc
sbb
add
nop
sub
mov
mov
and
arpl
xor
xchg
es
pop
xchg
sub
cmp
out
dec
dec
int3
add
adc
and
mov
jl
jmp
arpl
sbb
imul
inc
cmp
inc
inc
mov
adc
int
mov
xor
mov
enter
mov
add
mov
and
ja
inc
test
testb
call
loopne
test
push
lock
add
fdivl
lock
fisttpl
or
ss
jne
lds
rclb
inc
loopne
adc
pusha
notb
xchg
or
ret
cmpb
repz
mov
jbe
ret
mov
mov
pop
or
jl
inc
xor
and
pusha
daa
jo
ret
cmp
or
repz
ja
clc
push
add
dec
or
cmpsb
jnp
test
jl
sub
mov
mull
pop
cmp
cmp
es
pusha
ficoms
idiv
out
cs
adc
or
push
adc
testl
clc
mov
popa
test
insl
xchg
fisubs
and
dec
sti
push
scas
cwtl
mov
lret
push
add
mov
xchg
mov
shrb
dec
outsb
ds
or
or
push
pop
jmp
insb
and
or
jg
dec
mov
adc
and
test
std
orb
js
test
add
mov
fs
add
in
or
test
or
in
pop
aas
push
mov
ja
cmp
adc
or
dec
adc
shrl
adc
repnz
cwtl
mov
sub
rclb
mov
inc
sarl
fildl
mov
cmp
shll
jp
loopne
adc
pop
je
pop
adc
lret
xor
jmp
pop
xlat
and
add
sbb
pop
pmaddwd
les
pushf
mov
loope
fisttps
outsb
je
cmp
xor
add
mov
and
out
jle
add
jle
xlat
insl
mov
ret
lods
adc
rcl
mov
lds
fimull
fists
dec
repnz
pop
call
xchg
xchg
aad
aas
push
pop
call
jae
add
xchg
in
aad
rcrb
enter
fistps
incl
or
sub
inc
imul
test
enter
sti
push
cld
fistpl
or
movl
pop
fcomps
sub
movsb
inc
inc
or
dec
sbb
sbbl
stc
in
flds
pop
ss
xchg
or
test
outsb
enter
cmpl
add
jg
lea
push
add
mov
rol
ljmp
adc
lea
sub
or
adc
pop
push
xchg
sbb
and
mov
inc
add
xor
cld
pop
or
dec
and
and
pop
cs
lods
setle
mov
cmp
or
iret
and
inc
cmpsb
and
inc
cs
jne
popa
dec
xor
popa
ficoms
cs
repnz
add
xor
jle
pop
add
loope
call
mov
push
mov
and
dec
mov
jl
sub
popw
sbb
lret
ss
sbb
add
jmp
mov
popf
push
dec
adc
xor
mov
dec
test
mov
sub
pushf
xlat
js
inc
test
jmp
mov
mov
faddp
test
fwait
ljmp
mov
push
roll
in
loop
push
popa
sub
jo
loopne
cwtl
mov
sbb
or
or
mov
ja
clc
adc
clc
or
jg
cmp
sub
mov
or
pop
jp
fisttpll
mov
push
dec
in
jno
testb
add
js
movb
rcr
mov
mov
xchg
mov
add
xchg
test
xor
mov
in
push
bound
jne
push
test
jle
dec
dec
or
in
ja
sub
lcall
in
cmp
pusha
jne
jl
mov
jbe
add
add
mov
fcomp
loopne
icebp
dec
mov
movsl
xchg
and
insb
xchg
xchg
sbb
xchg
mov
push
fsubs
inc
lcall
push
das
cli
cld
sti
jnp
cmpsl
lock
jecxz
sub
mov
mov
jg
neg
add
pop
shr
sarb
and
imul
push
mov
call
and
sbb
adc
or
fadds
add
ret
mov
fcmovbe
mov
add
or
or
add
or
call
mov
sub
icebp
sub
rorb
scas
jb
in
push
mov
or
lock
call
dec
inc
pop
mov
inc
sub
mov
or
push
mov
and
nop
dec
addr16
xchg
pmulhuw
aam
aas
into
and
sbb
je
insl
inc
scas
dec
sahf
sub
outsl
push
clc
lods
mov
jmp
addl
xor
dec
fdivl
and
inc
sbbl
insl
add
sbb
xor
fdivl
jnp
jbe
fisubs
pop
loopne
mov
sub
mov
ret
mov
pop
push
or
sub
dec
add
sub
sahf
xlat
mov
dec
jo
add
js
pop
dec
jne
mov
aam
call
jne
enter
inc
sti
adc
push
aam
in
or
vpaddsw
add
test
push
sar
cmp
fldt
mov
mov
data16
pop
mov
sub
lcall
mov
push
fisubl
movsb
cmc
outsl
or
sub
out
loopne
mov
dec
imul
nop
mov
push
in
push
and
push
and
inc
add
push
cli
fimuls
ret
inc
push
fs
push
adcb
lret
jge
push
shl
shll
lea
imull
and
push
lock
sub
lahf
loope
movsb
inc
add
and
push
int3
int
gs
add
or
outsl
pop
mov
pop
push
inc
adc
in
adc
imul
sbb
and
cmp
idivl
add
dec
push
add
cmpsl
add
mov
sti
adc
outsl
push
or
jb
pop
hlt
adc
inc
popf
pop
or
mov
loopne
sbbl
lea
inc
jno
or
cmp
psubusb
popa
fistl
adc
or
loopne
fdivrs
sub
add
ret
aaa
push
mov
inc
mov
mov
xor
mov
fnstenv
lods
push
stos
dec
shlb
push
cmp
and
into
fsubs
lea
fmuls
pop
add
arpl
push
addr16
leave
dec
add
aam
jg
xor
add
sbb
dec
jp
jl
jno
or
mov
and
xlat
and
pop
leave
push
push
clc
sub
dec
scas
dec
dec
inc
je
arpl
push
leave
pushf
arpl
andl
mov
cmp
sbb
mov
mov
dec
ss
in
push
xor
or
cmp
jo
test
rolb
add
ret
insb
mov
fs
xchg
sub
ret
fs
lahf
add
fs
das
dec
dec
or
xchg
mov
dec
adc
sti
inc
mov
add
inc
mov
dec
mov
lds
ret
cld
ljmp
sbb
xor
faddl
mov
pop
leave
aaa
pop
inc
cld
xor
jo
adc
gs
xchg
pop
pop
ljmp
cmp
cmpl
push
sarb
dec
sahf
jbe
gs
in
mov
or
jae
sahf
aad
fdivr
mov
push
inc
sub
mov
push
fsubl
gs
and
mov
in
push
enter
movsb
daa
daa
sbb
loop
loop
into
mov
lcall
dec
dec
dec
dec
push
dec
dec
inc
add
test
mov
jo
test
push
cmp
add
push
or
dec
push
cmp
or
adc
and
push
push
sbb
mov
lods
fmuls
add
jp
enter
cmp
push
or
je
cmp
and
xchg
mov
mov
fcoms
lea
inc
out
pop
sbb
xchg
in
je
pop
leave
push
pusha
mov
mov
cmp
out
sub
dec
and
inc
repnz
push
adc
sbb
mov
xchg
loope
jecxz
jae
mov
lret
and
or
pop
call
or
xchg
xchg
or
data16
and
lea
jae
popa
jae
adc
mov
sub
adc
outsl
jp
insb
insb
popa
das
xor
xor
sub
mov
mov
mov
cmp
push
dec
inc
and
imul
outsl
ja
and
adc
jns
sub
and
add
xor
pusha
mov
outsl
jae
mov
inc
add
jnp
jne
jle
js
fiadds
fs
jbe
push
jne
inc
cmp
incl
arpl
fs
xchg
pop
fwait
cmp
arpl
pop
inc
test
gs
push
fsincos
divb
insb
push
outsb
outsl
sub
lahf
fldcw
add
xchg
adc
enter
push
cli
insb
je
rclb
lock
hlt
adc
test
es
test
add
add
xor
cmp
pop
dec
adc
lock
insb
sbb
mov
mov
pop
push
adc
add
adc
mov
cs
jmp
jg
push
push
cmp
mov
sub
cli
fdivl
fidivrs
and
push
sbb
xorb
or
aaa
js
mov
adc
xchg
sbb
lock
int3
imul
loopne
or
cmp
imul
test
and
mov
mov
and
mov
cs
das
xor
pusha
pop
sbb
fs
loopne
sub
push
inc
mov
and
mov
and
add
out
std
push
sub
sub
inc
add
cli
mov
insb
js
adc
push
inc
or
inc
js
xchg
mov
cs
inc
arpl
pusha
inc
add
pusha
dec
push
sbb
pop
add
pop
nop
pop
push
jecxz
mov
ret
jge
sti
adc
dec
cmp
add
xchg
inc
test
and
fnstcw
insb
pop
std
add
nop
sub
mov
repz
cs
sub
in
shrw
fsubrs
fcoml
lcall
ljmp
mov
fwait
cmp
adc
fs
or
call
jecxz,pn
jg
inc
lea
pop
test
int
cmpsb
sahf
mov
sub
dec
push
adc
push
adc
mov
inc
loopne
jo
xor
inc
mov
loopne
outsb
mull
pop
mov
mov
adc
pop
push
and
mov
ret
fucomi
ret
in
sbb
leave
inc
xchg
mov
int3
call
mov
enter
imul
jns
aas
inc
aas
hlt
mov
sub
jo
mov
mov
or
jnp
push
ret
test
das
gs
inc
mov
inc
xlat
jb
frndint
cs
dec
mov
push
add
das
jl
fwait
mov
mov
xchg
test
mov
pop
mov
aad
into
adc
nop
call
mov
push
sbb
clc
inc
repnz
das
fsubrs
sarb
adc
mov
pop
mov
mov
mov
das
mov
pusha
pop
xor
dec
mov
or
bound
pop
jns
fisttpl
insl
gs
and
outsl
and
imul
rorl
inc
inc
adc
push
outsl
arpl
pop
jae
mov
sub
dec
sbb
sarl
sbb
ret
outsl
jno
and
mov
adc
pushf
repnz
sub
add
xor
mov
mov
jb
mov
das
enter
mov
cld
mov
mov
mov
mov
clc
js
push
fs
clc
sub
dec
divb
mov
fs
ret
popa
test
xchg
lahf
les
pop
shll
pop
iret
sar
mov
enter
cs
adc
jae
dec
loopne
mov
inc
xor
sub
and
lods
jae
cld
or
bnd
mov
xchg
inc
xor
negl
mov
stos
jnp
jns
decb
mov
hlt
test
add
adc
aam
sub
pop
adc
mov
xchg
pop
scas
sub
fucomp
xor
push
insb
leave
subb
mov
cmp
pop
pop
xor
add
dec
add
add
sbb
mov
or
sbb
push
fwait
sub
inc
pop
sub
cmp
and
flds
repnz
sbb
sub
add
je
enter
das
mov
pop
or
mov
jns
inc
add
je
add
aas
xchg
add
imul
pop
dec
mov
pop
jne
insl
cmp
shll
mov
enter
leave
inc
add
pop
in
adcb
xchg
addr16
fs
jbe
fistpll
adc
jle
sbb
push
shlb
in
call
popf
sub
or
push
adc
mov
nop
lock
push
lock
int3
or
ret
pop
ss
lock
cmp
in
dec
add
adc
push
add
cmp
pop
loop
ja
cmpl
lret
sbb
sub
push
mov
nop
test
mov
test
dec
push
mov
outsl
mov
mov
mov
xor
lock
lcall
jl,pt
push
mov
xchg
hlt
pop
call
xor
sbb
pusha
in
mov
xor
xor
push
ja
add
sbb
adc
add
and
iret
push
jb
mov
pop
or
xchg
push
gs
dec
dec
sbb
fildl
push
cmp
jns
or
cld
sbb
bound
cld
out
sbb
or
arpl
inc
mov
fs
int3
sbb
or
and
xchg
bound
adc
mov
pop
push
add
xor
pop
aam
in
in
mov
in
lock
xchg
and
push
rorb
mov
gs
enter
dec
xchg
and
pop
loopne
std
jbe
sbb
mov
pushl
xor
mov
mov
cmp
iret
enter
int3
cs
test
andb
add
mov
jmp
cmp
pop
pop
aam
aam
mov
mov
push
scas
fdivrl
inc
mov
xchg
in
jns
pop
jo
cmp
xchg
or
or
gs
out
popf
daa
jecxz
add
imul
mov
xor
popa
das
in
insb
addr16
jns
dec
addr16
xor
add
mov
data16
push
mov
pushf
pop
jno
xchg
in
xor
jbe
add
enter
ja
rclb
mov
pop
je
aam
inc
or
pop
sbb
dec
cmp
ss
push
mov
xchg
mov
pushf
int
fnstenv
fsubrs
add
mov
mov
pavgb
adc
pop
rcrb
ss
aam
je
add
mov
xchg
inc
cmp
dec
and
dec
outsl
data16
dec
add
sbb
bound
mov
aas
mov
sub
add
xor
xor
outsl
pop
mov
push
or
jge
or
or
sub
sbb
je
loopne
adc
pop
mov
call
repz
in
add
in
xchg
aam
loopne
and
ss
adc
sub
xor
xchg
cmp
mov
jb
inc
fdivrs
xchg
push
arpl
and
push
mov
xchg
push
pop
xor
jle
add
rclb
rorb
dec
sbb
int3
popa
pop
xor
int3
aas
cmc
pop
xor
enter
enter
push
xor
jge
jmp
adc
outsb
insl
insl
add
mov
jae
outsl
push
xchg
jp
roll
adc
jge
mov
pop
add
or
and
jae
xchg
insl
repnz
sldt
addr16
jg
js
xor
int3
enter
enter
fmul
loopne
jecxz
in
rcrb
in
incl
add
dec
inc
adc
adc
adc
adc
fbld
test
adc
stos
adc
ljmp
addb
bound
jne
jae
xor
popa
data16
xor
jl
add
ljmp
jbe
pusha
xor
jl
and
sbb
and
outsl
xchg
mov
adc
or
xchg
repnz
xor
pushf
mov
adc
or
xor
xchg
pop
xor
addb
sbb
rcrl
pop
adc
xor
adc
dec
ss
in
pop
push
or
cwtl
addr16
mov
test
or
inc
ret
in
dec
and
inc
lcall
ret
mov
push
cmp
popa
pusha
jno
or
mov
shl
add
sbb
xchg
push
and
and
xor
sbb
sbb
adc
aaa
inc
lea
pop
lcall
xor
in
aaa
ja
std
incl
cltd
rclb
push
and
lcall
out
int
bound
push
jb
dec
and
pop
lcall
push
jge,pn
dec
cmp
mov
and
push
xchg
adc
roll
inc
cltd
lret
xchg
push
adc
push
xchg
ljmp
int3
movsl
lret
dec
roll
xor
sub
jg
test
xchg
shlb
lcall
in
pop
or
sbb
adc
mov
adc
out
addr16
lret
cltd
sbb
mov
or
ja
dec
sub
pop
sub
or
sub
inc
outsb
mov
fdivr
add
js
cmc
movsl
lods
pop
lahf
pop
push
push
sahf
push
push
roll
pushl
xchg
icebp
movsl
in
insl
xchg
das
push
push
sbb
xchg
cltd
les
leave
insl
jns
call
cli
sbb
addr16
aaa
mov
xchg
jmp
outsl
cmc
out
sbb
rcrb
sbb
xor
mov
mov
push
call
clc
pushl
push
inc
sub
adc
dec
ret
and
xchg
jge
and
fisttps
call
xchg
jmp
xor
outsl
push
jne
inc
sub
data16
test
lcall
and
lahf
outsb
sub
out
loope
stc
jle
pop
test
or
clc
gs
push
adc
and
gs
shrl
ljmp
cmp
cmp
loope
out
pop
shr
adc
dec
leave
enter
ljmp
sbb
dec
shrl
jae
adc
push
adc
xor
push
je
jmp
int
pop
mov
je
cmp
adc
dec
ljmp
popa
push
xchg
ljmp
adc
adc
or
mov
xchg
leave
cmp
int
enter
decl
call
je
mov
leave
in
scas
repnz
fwait
push
sub
js
lahf
sbb
xchg
and
incl
sbb
aad
sbb
scas
mov
cmp
or
mov
jns
or
inc
push
cltd
popa
movsb
in
push
and
iret
sbb
pushl
push
ss
inc
inc
push
mov
adc
rcrb
hlt
in
das
mov
lcall
aad
into
cmpsl
inc
lds
and
jl
frstor
inc
inc
and
in
loopne
aam
dec
in
push
aas
mov
pop
adc
cmp
es
or
test
stos
jbe
push
push
pop
dec
sahf
cmp
pushl
fbld
adc
xorb
popa
cmp
pop
sbb
jp
call
roll
lahf
push
pop
inc
push
dec
in
cmp
sbb
fwait
test
xchg
ror
ljmp
ss
pop
push
xor
push
xor
add
test
movsl
aas
xchg
push
popa
adc
mov
ljmp
vmwrite
dec
fwait
lock
jb
test
jp
jmp
dec
pop
inc
movsl
jmp
popa
jns
scas
adc
sbb
mov
std
js
pop
cmp
in
jne
xor
pop
xchg
fs
stc
das
lahf
xchg
add
int3
in
ficompl
or
push
daa
push
lods
out
movsb
loop
call
sbb
in
pop
push
pushl
decb
daa
js
leave
outsb
stc
out
sub
mov
jle
incl
incl
or
inc
mov
enter
popf
mov
inc
and
ds
clc
push
std
lahf
xor
cmc
iret
mov
add
or
sbb
mull
pushl
sbb
mov
bound
outsb
mov
lahf
inc
pop
dec
mov
aaa
cli
lea
fs
mulb
test
pop
push
mov
sti
mov
sbb
adc
stc
or
iret
jle
loopne
stc
add
das
decl
stc
add
das
test
add
inc
xchg
pusha
ror
pop
rcrb
gs
jmp
in
ret
fnstsw
sub
adc
hlt
ljmp
loopne
fistpl
jg
pushf
gs
or
mov
mov
jo
scas
mov
decl
pop
aad
enter
repnz
fwait
lock
test
mov
sbb
mov
popa
daa
orl
jbe
lds
pushl
hlt
inc
sti
dec
leave
adc
push
int
movsl
insl
data16
cltd
push
push
push
adc
cmp
sub
insl
adc
dec
inc
inc
decb
in
inc
push
mov
dec
dec
stc
enter
test
pop
push
sub
incl
fnstcw
push
insb
jbe
push
and
sbb
pop
leave
ret
fdivrs
adc
cmpsb
aaa
jns
mov
sbb
leave
icebp
mov
aas
sti
leave
in
in
xchg
dec
or
sti
cmc
inc
pushw
bound
sbb
std
fs
push
stc
adc
or
mov
adc
mov
inc
inc
js
scas
repz
cmp
dec
jle
cmpsl
je
fisttpll
xor
dec
mov
icebp
or
rcrl
repnz
in
inc
ss
push
push
adc
or
push
aad
push
pop
cmp
popa
jge
jmp
inc
cltd
js
arpl
in
ret
dec
xor
dec
in
fildll
cltd
inc
sbb
insl
and
loope
adc
pushf
sbb
inc
aas
pop
sbb
jge
pop
das
mov
inc
mov
arpl
sub
and
and
cmp
data16
aas
cmpl
add
sub
out
sbb
xor
addr16
pop
in
mov
pushl
xor
or
rcrb
fsubl
lret
enter
lret
stc
bnd
jl
notl
fsubs
inc
push
cmp
jns
ljmp
sub
sbb
jg
jg
adc
mov
les
repnz
push
adc
jp
sbb
xchg
incl
push
cltd
test
xchg
movsl
dec
push
xchg
sub
and
movsl
dec
or
push
call
lods
je
jb
cld
xor
jmp
movsl
sbb
iret
cltd
pop
xor
lods
adc
cltd
pop
sub
add
inc
push
fwait
xchg
push
cmp
gs
ljmp
call
ljmp
push
out
sbb
jecxz
cmp
loopw
jp
outsl
cld
lcall
mov
sbb
lods
sbb
mov
dec
ret
bound
call
sbb
in
test
scas
cli
in
movl
dec
call
in
jmp
clc
mov
aad
out
and
push
shrl
out
insb
adc
cld
push
fwait
aas
inc
mov
lcall
xchg
ret
aaa
dec
jo
push
cltd
lods
mov
lahf
iret
test
push
and
inc
mov
jecxz
cld
and
fs
cltd
mov
xor
inc
test
sti
call
push
jge
mov
outsl
stos
sbb
int
pop
addr16
lahf
push
stos
pop
cmpsb
fistpll
movhps
mov
push
mov
pop
daa
and
xchg
outsl
push
aam
dec
cmp
pop
sbb
int
mov
sbb
pop
test
adcb
in
mov
rol
add
xchg
in
les
adc
push
xchg
inc
ja
sbb
ljmp
addl
outsb
mov
cmp
popf
inc
adc
adc
pop
cmp
lret
sar
enter
sbb
cmp
xchg
xor
xor
rclb
dec
pop
jge
aaa
incl
inc
add
adc
into
sbb
sar
outsl
loopne
in
ret
pushl
xor
daa
and
cmp
add
fs
xor
lock
add
jae
out
int3
or
dec
cmp
xchg
sub
pop
sahf
pop
mov
fs
data16
pop
lods
and
bound
add
lcall
push
add
xchg
popw
adcl
cmpsl
movsl
das
addr16
inc
sub
sbb
or
and
movsb
sub
or
daa
mov
lret
inc
dec
jmp
add
mov
sbb
ljmp
and
ret
mov
test
jmp
aad
or
pop
outsb
sbb
lcall
dec
test
push
ljmp
cmp
fwait
rcrl
aad
out
rorl
push
pop
addr16
or
xor
push
insl
or
into
in
push
fdivrp
fistpl
jmp
cmpsl
stc
shlb
aas
cs
icebp
xchg
adc
repnz
je
arpl
adc
dec
jp
adc
add
sar
decl
sbb
popf
inc
out
pop
ljmp
cmp
mov
cwtl
iret
sub
sbb
loop
aam
jecxz
add
es
sub
xchg
inc
sub
fnstsw
decl
sbb
sub
fists
adc
dec
dec
xchg
cmp
cli
push
adc
jmp
or
cltd
inc
dec
lds
mov
idiv
ret
dec
mov
mov
dec
or
sub
popl
lahf
test
out
cltd
inc
out
adc
sti
jg
outsl
add
cltd
pop
add
in
jg
add
int
dec
mov
shr
sub
lcall
add
dec
movsb
dec
sub
mov
cli
jge
cmp
pop
push
rcrl
out
adc
jl
inc
aad
mov
idiv
fs
call
dec
jg
loope
in
mov
int
in
pop
ljmp
cmp
or
test
push
inc
loop
mov
mov
sbb
inc
sti
sbb
mov
push
out
sub
add
pop
addr16
pop
push
in
dec
clc
jg
std
fs
stos
inc
adc
jmp
push
loop
aas
push
aam
mov
fwait
loopne
insl
jno
hlt
adc
nop
pop
addr16
mov
insb
rorb
lcall
in
repnz
cmp
dec
push
call
popf
frstor
or
cld
ljmp
add
sar
lea
dec
enter
or
pop
popw
notb
scas
lcall
or
stos
pop
xchg
aam
aad
lock
sbb
push
dec
xchg
lock
or
cmp
gs
fsts
sub
addr16
add
lcall
xor
stc
push
jmp
adc
dec
and
aas
push
sar
add
stc
add
jmp
or
js
fmull
ljmp
ljmp
mov
hlt
arpl
or
mov
jg
jecxz
jne
fs
sbb
pop
push
mov
movsl
sbb
gs
lcall
mov
inc
aas
cltd
dec
out
fbstp
outsb
or
enter
rcll
test
pop
aaa
clc
adc
adc
pop
or
xlat
jnp
sbb
negl
jg
or
es
int
push
fwait
insb
aad
mov
pop
cltd
pop
out
inc
insb
pop
push
cwtl
adc
fucomip
push
stos
sub
lret
sbb
mov
popa
push
decb
cmp
pop
clc
mov
xchg
adc
cs
clc
popf
scas
loopne
pop
gs
xor
cli
js
jge
push
movsb
js
sbb
repnz
leave
dec
rcrl
fwait
repz
out
aam
decl
cld
stc
cmp
iret
add
push
popf
and
ljmp
pop
jecxz
jbe
pushf
clc
call
push
sub
sahf
insl
ds
pop
sarl
fdivr
ss
fwait
enter
xchg
int
popf
lcall
mov
mov
sbb
sbb
std
jns
push
or
jecxz
inc
jg
pushl
nop
sbb
lret
cmp
mov
push
mov
mov
and
mov
and
add
das
xor
push
xchg
and
movsb
inc
movsl
inc
pop
loopne
decl
sbb
adc
in
inc
inc
jp
add
xor
movsb
mov
add
andb
xor
loop
xchg
xchg
or
xor
fcomps
push
stc
ljmp
int
lret
cmp
popa
sub
je
fistps
xchg
mov
pushl
xchg
jge
fidivl
pop
loop,pn
out
imul
lods
std
inc
js
pop
ss
stos
push
test
into
adc
add
sti
in
sub
outsb
dec
lock
lsl
adc
pop
push
push
mov
pop
int3
pop
fildll
in
dec
or
push
add
ljmp
std
inc
cmp
aas
pop
outsl
aaa
mov
jbe
or
call
ds
test
test
cltd
cwtl
pop
inc
bound
xchg
fistl
jbe
cld
lea
cld
ds
test
insb
fisubrs
and
test
jg
dec
mov
jno
jle
push
push
sbb
mov
jbe
jno
ljmp
adc
cltd
pop
je
data16
outsl
jne
loop
sbb
outsb
ret
jl
in
daa
ud0
ljmp
sub
pop
and
jnp
outsb
adc
push
jne
aaa
jbe
mul
add
mov
add
mov
push
mov
in
mov
idivb
adc
jns
adc
adc
stos
cmpsb
or
mov
pop
push
mov
or
inc
mov
push
lcall
jg
pop
sbb
adc
dec
jnp
cmp
push
ljmp
xchg
mov
aaa
add
xchg
adc
add
mov
imulb
xor
mov
fstl
push
mov
xor
adc
or
mov
jge
stos
jb
bound
orb
fidivl
mov
test
mov
or
aad
movsl
movsb
mov
ja
jl
jle
and
lock
pushl
jle
in
leave
in
push
pusha
ja
data16
jge
jle
add
inc
jl
lcall
or
mov
jmp
pop
jnp
push
jnp
push
sbb
pop
jmp
call
jmp
inc
pop
jbe
pusha
jge
mov
popa
popa
pop
ja
aas
or
pusha
imul
and
test
jg
sub
dec
mov
sub
sub
aas
jmp
or
jle
sbb
mov
repnz
xchg
sbb
jae
bound
sahf
jb
and
push
ficompl
add
add
outsl
push
loopne
addl
push
inc
int3
adc
fcomip
xchg
clc
or
add
xor
push
idivb
xor
incb
jecxz
pop
mov
xchg
mov
xchg
push
adc
xor
popa
ficoms
popa
add
mov
xor
cld
rcr
dec
ss
outsb
mov
lods
pop
cld
call
sahf
sbb
push
jl
lea
decl
pop
mov
push
ja
jb,pn
das
push
jae
pop
pop
cli
pop
clc
jae
ja
add
jle
adc
pushf
push
push
cmp
das
xor
incl
inc
pop
jl
mov
ljmp
adc
jg
imul
jnp
pushl
fidivrl
xor
les
inc
addr16
movsl
shrl
jnp
call
pushl
push
or
inc
sub
loope
jns
bound
mov
fcoms
inc
lods
cmp
jnp
pop
xlat
or
xchg
dec
daa
adc
repz
ss
inc
add
mov
lret
cld
decl
popa
cmp
push
adc
mov
cmp
adc
xchg
sbb
jp
pop
clc
sbb
fdiv
rclb
mov
loopne
icebp
cli
adc
cli
outsl
icebp
mov
sub
adc
or
test
dec
mov
xchg
cld
xor
popa
dec
pop
scas
test
mull
pushl
arpl
cli
and
lods
xor
inc
insl
dec
sahf
stc
popa
inc
mov
ljmp
push
sbb
inc
es
cli
outsl
lock
cltd
ljmp
cwtl
push
or
xor
mov
adc
push
xchg
neg
xlat
imul
dec
mov
or
out
shl
xchg
stos
out
lret
into
dec
test
pop
stos
addl
jg
mov
xchg
push
movsl
xor
sbb
xchg
jmp
xor
inc
xchg
fidivs
ljmp
sahf
int3
lahf
xchg
pusha
add
xchg
push
ljmp
or
xchg
decl
decl
cs
xchg
jae
sbb
popa
mov
stos
push
and
in
iret
add
sbb
incl
dec
mov
sbb
addr16
and
push
jg
faddp
in
int3
add
repnz
cs
enter
xor
fsubl
and
pop
popa
push
and
test
cmpsl
std
lahf
lahf
idivl
cmp
lds
adc
fprem1
out
xchg
loop
repnz
sub
jge
jl
mov
decl
pushf
dec
stos
adc
or
je
insb
repnz
ljmp
sti
leave
mov
pop
addr16
loopne
aam
jbe
out
jo
ss
push
dec
cli
dec
mov
and
filds
shlb
xchg
mov
cwtl
ss
push
push
aam
or
jmp
sbb
test
incl
and
mov
ficoml
sbb
xchg
cs
mov
inc
jmp
ljmp
daa
repnz
pushf
mov
sub
lret
cmp
mov
mov
stos
fwait
xchg
testb
mov
mov
xchg
arpl
sahf
gs
outsl
xor
add
jmp
int3
in
xchg
add
lcall
loop
xchg
sbb
insb
cmp
test
jp
cltd
fdivrl
push
aad
ljmp
adc
mov
sti
mov
leave
fucomp
sbb
sub
insl
or
cli
cmp
std
and
lods
out
xchg
mov
inc
popf
loop
mov
cltd
aaa
or
das
cld
mov
stos
ss
xor
ljmp
pushf
pop
sbb
call
mov
out
lret
fnstenv
fisttps
lods
mov
imul
test
ljmp
sbb
negb
sbb
fsts
or
out
cs
push
cwtl
loop
or
cmpb
xor
jne
inc
push
xorb
sahf
jg
inc
jbe
rcll
fistpl
ficoml
bound
fldt
jmp
and
dec
mov
jge
jmp
add
mov
push
xchg
mov
pop
js
decl
jns
dec
sbb
lahf
das
rcl
das
cld
lcall
dec
shr
push
movsb
test
sbb
push
addb
sub
dec
jbe
sbb
pop
cmp
stos
ljmp
xor
int3
pusha
sbb
xchg
push
xor
pop
push
lods
mov
push
add
lcall
sbb
rorb
mov
pushl
ss
aaa
sbb
adc
dec
mov
jbe
xchg
rorb
xchg
mov
xchg
bound
neg
sbbl
fucomip
xchg
aaa
or
or
dec
xchg
pop
pop
ret
push
fs
pusha
adc
inc
adc
pop
ror
push
and
push
xchg
icebp
fcomip
add
pop
shll
addr16
repnz
movsl
or
ja
or
into
push
add
add
adc
mov
lods
jnp
cmp
jge
pushf
sbb
push
pop
sub
or
cmp
out
xchg
outsl
pusha
xor
xor
mov
mov
movsb
gs
mov
sbb
sub
outsl
cld
test
jbe
adc
sbb
cmp
sub
push
sbb
sub
adc
std
fwait
idiv
call
mov
adc
fwait
aas
or
shrb
sbb
addr16
in
rclw
ljmp
mov
push
jb
iret
in
jge
jbe
imul
adcb
ljmp
xchg
popf
or
adc
repnz
mov
movsl
jg
or
call
and
dec
ljmp
fidivl
aas
lcall
jo
dec
dec
mov
stos
addr16
xchg
sbb
or
add
fbstp
sahf
inc
sbb
lcall
outsb
stos
es
push
cs
add
push
fbld
ss
scas
ficoml
cmp
mov
xchg
xchg
lcall
mov
in
push
inc
adc
and
addr16
mov
jmp
cmc
xor
adc
mov
add
adc
adc
sbbb
fisubl
cld
inc
fcmovnb
push
fmul
lret
enter
int
repz
notl
ret
and
lcall
cltd
xchg
fs
jge,pt
add
or
fimull
dec
xchg
mov
cld
or
call
adc
adc
push
adc
pop
adc
in
lods
mov
outsl
hlt
pop
fldcw
pop
sub
nop
shl
ss
adc
fstl
adc
mov
xchg
inc
out
add
incl
jb
adc
inc
push
sbb
pusha
sbb
dec
push
pop
lret
mov
jl
pop
jge
mov
out
inc
jo
jae
push
pop
mov
push
jbe
lods
jmp
stos
lret
jmp
jbe
xor
push
jl
push
test
dec
dec
or
aas
lret
aas
mov
daa
aad
inc
cmpsb
push
pop
jbe
pop
jae
imul
adc
lea
imul
mov
ret
jbe
mov
sub
in
cmpsl
inc
sub
xor
insb
sbb
xchg
insb
ljmp
gs
in
mov
mov
inc
data16
push
int
sbb
fnstsw
pop
xor
jge
inc
imul
adc
inc
inc
mov
addr16
xchg
mov
push
push
and
sbb
xchg
outsl
cld
ljmp
add
add
cwtl
fstps
test
insl
jmp
rorl
pop
push
adc
dec
in
add
lcall
add
or
add
xor
or
pop
pop
xor
jmp
loop
adc
adc
jmp
add
inc
adc
insb
cmp
sbb
out
pushl
or
scas
push
sub
add
add
hlt
fisubrs
cmc
incl
add
sbb
cmp
adc
add
in
ljmp
cmp
or
push
adc
xchg
adc
repz
push
incl
adc
pop
sbb
out
pop
testb
in
add
xchg
sbb
or
add
outsl
decl
pop
leave
lods
fldlg2
adc
pop
add
adc
loop
call
xor
push
cmp
in
iret
pop
xchg
adc
ficoml
and
and
xor
push
push
xor
enter
insl
sub
incl
push
or
pushf
adc
pop
sub
mov
out
sbb
sbb
inc
add
push
pop
sub
sbb
pop
pop
cmp
loop
clc
sbb
fsubrl
mov
sbb
pop
ja
call
ljmp
sbb
adc
xor
adc
in
or
adc
pop
inc
cmp
lret
das
jnp
inc
and
add
pop
jg
adc
jge
adc
mulb
incl
pusha
sbb
sub
sbb
sub
hlt
push
adc
inc
jb
ds
incl
xchg
pop
push
push
mov
cmpb
pop
test
fbstp
push
push
inc
inc
incl
in
cld
movb
inc
xchg
rorb
ljmp
xchg
cmp
adc
call
jae
jb
xor
decl
pop
jmp
bound
fcoms
test
lea
and
xchg
aam
or
int
jge
nop
add
inc
jne
pop
mov
push
xchg
stos
pop
mov
sbb
jb
adc
xchg
inc
xchg
ljmp
inc
sti
fucomip
stc
pop
addb
lcall
cltd
or
cld
sbb
add
pusha
ljmp
sub
sarl
push
popa
idivb
test
pusha
pop
shl
sbb
jnp
push
insb
xlat
das
fisttpl
xor
fbld
popa
and
xchg
out
adc
jg
mov
xchg
xchg
ret
adc
fs
cld
fcomip
adc
sbbb
adc
dec
addr16
gs
pop
push
dec
fwait
in
ljmp
jmp
cwtl
sub
cli
push
gs
sub
adc
incl
rcl
add
cli
sub
lods
sti
pop
lcall
sbb
data16
mov
xchg
lods
mov
loope
pop
add
pop
pop
test
sbb
mov
inc
pop
loopne
inc
adc
cs
neg
out
repz
rcl
push
adc
sub
mov
fistps
xor
std
add
rcrl
adc
lock
ret
and
je
jp
or
mov
pop
push
jnp
test
aaa
fsubrs
adc
jmp
lock
call
insl
dec
adc
lahf
shl
das
lods
xchg
js
sub
addr16
jne
in
iret
jne
add
rclb
sbb
int3
push
pop
adc
dec
and
addr16
pop
sbb
cwtl
push
dec
add
sbb
jnp
out
push
add
mov
xchg
add
jo
cli
sbbl
pop
push
pop
mov
pop
inc
sub
pop
push
jae
push
outsl
push
cmp
lret
xchg
xchg
mov
mov
inc
stos
addr16
rclb
jno
push
jne
sub
dec
shrl
mov
out
lahf
jmp
addb
rorb
je
outsl
lcall
add
add
jbe
psrld
pop
push
push
pop
push
add
add
cmp
cld
in
cwtl
dec
cmp
pop
pusha
movsl
mov
iret
pushf
std
outsl
mov
push
call
stc
cmp
int3
dec
dec
pushl
lods
rclb
movl
stc
cmpsl
cmpsl
maskmovq
mov
jne,pn
pop
jns
fildl
icebp
imulb
add
pop
push
gs
mov
mov
sub
sub
lret
add
adc
add
add
inc
add
sub
andl
xchg
add
addb
add
push
adc
push
add
add
inc
add
es
add
leave
pushl
mov
pop
fwait
cmp
add
scas
mov
add
popa
mov
loopne
push
or
imul
adc
call
jb
jne
insb
push
jne
sbb
cmovno
arpl
mov
push
pop
insl
jmp
pop
sti
mov
je
push
outsl
push
adc
cmovno
bound
and
sub
add
adc
dec
jo
dec
dec
outsl
jbe
xchg
adc
testl
jp
inc
scas
push
mov
push
jnp
push
imul
popf
bound
lds
jb
gs
ret
cmpsb
push
jns
lea
outsl
push
add
sti
pop
addl
jb
mov
adc
sahf
imul
jb
in
daa
imul
lcall
gs
dec
push
scas
sbb
sub
push
or
add
fwait
cmp
or
scas
xor
cmp
outsl
jo
adc
insl
ret
sbb
jae
lock
mov
mov
add
je
fildl
ja
popa
dec
incl
jb
mov
mov
xchg
push
adc
adc
pop
push
ss
jo
pop
out
iret
outsb
push
ret
sub
aaa
push
je
inc
sub
lock
popa
imul
ret
ret
testl
pop
adc
icebp
mov
mov
outsl
insl
insl
or
sbb
jb
or
xor
sbb
push
add
mov
in
gs
popa
insl
adc
add
adc
xorb
push
pop
jp
pop
inc
adc
aad
xor
nop
insb
mov
cmp
or
sbb
insb
cmp
xchg
inc
push
roll
sbb
pop
mov
pop
pop
inc
pushf
jns
test
mov
rclb
push
mov
fs
xchg
jmp
pop
fildll
ret
mov
dec
mov
addr16
fdivs
jo
adc
and
xchg
or
dec
jae
loopne
cwtl
lds
ret
cmp
jne
movsb
xchg
in
xor
test
movsb
scas
xchg
jp
arpl
mov
or
addr16
sbbb
imul
adc
adc
and
inc
cmp
push
xchg
jmp
dec
xchg
fcmovb
shrl
outsb
inc
in
imul
mov
test
adc
push
pop
xchg
dec
sbb
push
mov
rcrl
adc
setg
aaa
jnp
and
pop
sub
inc
inc
subb
or
cmpsl
je
mov
jnp
mov
lcall
jns
jae
adc
lods
jmp
pop
outsl
sub
add
iret
int
push
arpl
jg
adc
add
dec
add
add
pop
inc
sub
xchg
in
loopne
popl
add
and
adc
jb
sub
inc
or
add
mov
das
add
fldcw
xor
xor
or
or
dec
or
js
add
and
sbb
inc
dec
inc
inc
jecxz
pop
add
mov
outsl
pop
and
pusha
inc
inc
push
inc
sti
jnp
nop
outsb
and
je
rolb
jbe
sbb
data16
shrb
sbb
push
shlb
or
mov
fs
sub
dec
mov
jb
or
add
mov
inc
push
jae
arpl
js
lods
fs
mov
add
add
and
add
add
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
call
dec
inc
add
