fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
pop
imul
arpl
bound
xor
or
cmp
sbb
xor
mov
in
push
add
std
mov
mov
jl
inc
add
add
or
jb
faddl
lds
gs
popa
enter
outsb
fwait
leave
lret
lret
outsl
int3
int
pop
mov
push
jo
xor
xor
xor
push
aad
xlat
in
mov
jae
aaa
fisttpl
push
imul
pavgw
in
and
add
inc
call
imul
lock
lcall
cmc
div
xchg
int
imul
sti
js
je
fidivrs
cmp
xlat
sub
mov
pop
fbld
adc
mov
xor
mov
adc
or
add
rorb
jge
cmp
mov
pushl
xor
jmp
lea
add
sti
notl
call
sbb
lods
fsts
mov
pop
jne
push
or
mov
sbb
data16
iret
das
incl
pop
inc
cmp
loope
mov
jne
or
pop
pop
leave
ret
mov
mov
mov
xchg
adc
push
push
imul
loope
add
mov
push
push
lret
xchg
or
mov
inc
push
clc
pop
jnp
mov
in
push
sbb
js
sti
leave
data16
push
lock
add
push
pop
insb
int3
insl
jl
pop
push
mov
adc
push
stos
mov
and
lock
cmp
je
push
adc
pop
push
loope
lods
or
sbb
cmp
adc
push
push
sub
mov
sub
push
sbb
into
mov
sbb
movsl
adc
fnsave
jnp
jecxz
pop
in
adc
mov
fcomps
mov
pop
fisttpl
clc
inc
xchg
xor
sbb
jo
push
push
scas
neg
inc
push
pop
or
push
adcl
insl
imul
mov
mov
adcl
xchg
or
clc
push
dec
addb
push
sbb
cmpsb
mov
push
jno
mov
inc
cmp
mov
add
pop
ja
mov
and
jo
notl
inc
test
je
adc
call
mov
ljmp
jnp
cld
push
in
xchg
cmp
or
gs
fimuls
add
leave
cmp
jae
cmp
aas
xor
pop
xor
and
sbb
out
sub
cmp
pop
jnp
push
lds
test
mov
adc
decl
adc
test
psrld
mov
inc
inc
dec
dec
test
jne
sub
jae
pop
jmp
lds
jo
test
ret
mov
push
mov
add
inc
cmpb
inc
fadds
test
rol
testb
and
aad
pop
clc
inc
mov
sbb
add
jl
mov
add
daa
push
sbb
out
mov
sub
xor
mov
pop
pop
mov
jecxz
push
push
in
les
out
inc
pop
fimuls
jbe
push
in
inc
mov
fstpl
and
or
sahf
jmp
push
daa
cwtl
pop
les
adc
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
push
fwait
jnp
mov
pop
xor
test
adc
fidivrs
jl
ret
pop
push
sahf
mov
data16
pop
call
ss
xor
lret
int3
cltd
dec
lock
ret
xlat
inc
into
xor
mov
in
std
adc
data16
lods
pop
cmp
pop
pop
pop
jl
int
negb
cld
pop
jmp
cmp
rcrb
or
sbb
std
imul
outsl
ljmp
pushl
imul
imul
imul
jne
insb
inc
sarb
or
clc
test
and
sbbl
mov
fs
push
test
add
int
jne
add
xchg
add
and
pop
loop
sbb
je
push
hlt
push
xchg
outsb
adc
sbb
fcomps
notb
ds
sar
pop
lcall
push
leave
imul
outsb
lret
int3
je
movsl
pop
lcall
sub
jecxz
shrb
popf
sar
sub
outsb
gs
inc
sar
sar
mov
sbb
sti
pop
ss
pushf
fdivr
cld
std
dec
push
mov
divl
adc
cli
cmp
out
dec
pop
cld
mov
enter
arpl
pop
adc
fldenv
movsb
add
dec
out
iret
movsb
push
insb
rcl
xor
mov
or
cs
dec
mov
gs
js
sti
cmp
fdivs
clc
cwtl
mov
adc
call
lods
test
push
pop
loop
push
js
push
iret
add
mov
mov
int
inc
adc
and
out
push
dec
jmp
mov
neg
fwait
pop
data16
jmp
outsb
ds
je
add
in
jae
pop
sti
mov
popf
insl
jbe
xor
jg
rcrb
imul
mov
jne
or
mov
pop
mov
xlat
xor
push
in
in
data16
xchg
adc
mov
data16
jmp
xchg
dec
int
nop
out
cld
pushf
or
out
jmp
mov
addr16
std
push
call
push
add
bound
clc
addr16
sar
inc
ds
sar
clc
sar
ficomps
xchg
push
push
mov
or
mov
adc
cmp
call
popf
cmpsb
imul
inc
lcall
and
fdivrl
out
xchg
call
adcl
hlt
cmp
f2xm1
push
test
sbb
js
pop
xchg
and
hlt
mov
or
sbb
out
adc
ret
aaa
gs
adc
dec
scas
cli
mov
roll
push
or
pop
xchg
and
or
insb
add
push
cmp
lea
adc
jmp
push
loopne
fs
jae
sub
mov
or
loope
pop
pusha
mov
dec
movsb
inc
xchg
add
rorb
fwait
repnz
xor
adc
jecxz
clc
addl
dec
in
jg
fcomps
push
dec
inc
dec
and
cmpsb
and
dec
cs
outsl
lds
lods
push
adc
add
mov
add
mov
nop
add
push
add
cmpsb
mov
add
nop
add
enter
mov
inc
loopne
push
movsl
loop
lcall
mov
int
mov
imul
popa
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
jmp
outsl
fs
imul
out
scas
jmp
dec
ljmp
mov
out
cli
jmp
sub
push
imul
out
inc
add
loope
notb
dec
mov
and
add
or
cld
mov
sub
pop
add
push
add
in
or
adc
push
add
and
inc
inc
nop
insb
add
push
fmuls
in
stc
ds
movsb
inc
adc
addr16
add
fs
je
rclb
adc
imulb
gs
outsl
arpl
inc
dec
dec
fldenv
sbb
inc
ljmp
inc
adc
outsb
fwait
cmpsb
in
push
xor
movsb
xor
add
imul
cmpsb
imul
imul
scas
imul
sbb
cs
shll
cmpsb
pop
mov
jp
push
jmp
xor
mov
mov
lcall
xor
or
push
lahf
je
jg
rclb
add
and
inc
arpl
add
add
pop
jb
idivb
aaa
adc
mov
fs
add
xor
mov
dec
cmpl
and
adc
and
adc
and
or
jl
sbb
add
add
fsubrs
stc
xchg
jl
and
adc
add
mov
and
adc
lahf
in
add
xor
add
sub
add
jns
and
adc
inc
filds
sub
fnstsw
adc
mov
fmull
pmulhuw
rorb
insl
popa
out
std
gs
adc
int
notb
add
adc
cwtl
jmp
jne
adc
cmpl
add
mov
inc
push
xchg
arpl
cmp
std
decb
ret
sub
je
punpcklbw
sbb
jl
adc
popa
rcrl
or
push
paddusw
jne
or
pop
mov
xchg
or
mov
lds
inc
mov
stc
adc
stos
xor
mov
dec
cmp
or
xor
inc
sbb
dec
mov
fmull
push
enter
aas
cmp
push
mov
mov
xor
adc
mov
inc
cmpb
das
scas
scas
xor
jl
call
push
jg
mov
and
test
add
cmp
jl
dec
and
mov
cmp
imul
add
mov
and
xchg
icebp
idiv
sbb
out
sti
insl
xor
addr16
mov
xchg
pop
and
dec
jne
pop
call
fucomp
call
add
out
or
adc
cmp
mov
testl
mov
test
sub
or
inc
inc
jmp
test
je
or
fildl
mov
mov
and
out
out
jp
outsl
pop
mov
push
int
dec
sub
ret
and
rcl
mov
hlt
inc
lock
in
inc
jno
neg
pop
dec
test
mov
orl
popf
int3
lock
xor
or
add
sub
adc
fwait
in
lock
add
inc
icebp
adc
loope
pop
sbb
sarb
add
push
mov
adc
addr16
aam
push
call
add
cmp
fstl
sbb
shlb
add
and
fisttpll
cmp
pop
inc
aam
mov
pop
fidivrs
and
pusha
jne
cmp
jne
adc
add
adc
or
hlt
or
jb
imulb
adc
dec
out
xor
jo
jg
or
cmp
push
mov
cmp
sti
push
mov
push
mov
sub
int3
or
mov
notl
popa
push
insb
pop
push
mov
cmp
cmp
jo
lds
adcl
test
mov
push
aam
aaa
into
mov
add
sub
xor
jo
lret
mov
lret
jb
jb
gs
outsb
das
sub
cltd
mov
xor
ja
imul
addr16
fisubrs
inc
xlat
fists
loopne
loope
or
mov
in
cld
mov
mov
jp
push
enter
push
adc
or
inc
testl
test
push
push
and
lret
jb
shl
add
and
jle
popa
les
jmp
sub
scas
sbb
pop
xchg
dec
lds
inc
jl
in
and
push
mov
mov
orl
jmp
add
or
vmwrite
je
into
or
and
push
mov
fbstp
dec
cmp
cmp
or
xor
sbb
popaw
cmp
cmpl
fstpt
je
inc
cmp
sub
cmpb
fildll
imul
jge
jo
daa
cmpl
jb
dec
jmp
pop
decl
iret
push
aas
or
add
dec
shrl
sub
fisttps
mov
dec
jmp
inc
dec
sbb
mov
mov
adc
xor
test
popa
sbb
or
roll
mov
loop
add
sub
in
outsb
imul
adc
jne
mov
sub
mov
lods
inc
int
insl
out
cmpl
mov
cmp
mov
gs
and
fildll
divb
shr
jle
movzwl
mov
jne
daa
add
ljmp
mov
cli
add
push
or
adc
fidivs
push
xchg
inc
lar
data16
lock
jne
insl
fisttpl
or
sub
add
clc
or
shl
or
cmpsl
xchg
xor
mov
cmp
clc
inc
mov
add
cmp
xchg
add
jmp
test
shr
add
imul
push
repz
inc
jmp
jno
push
inc
dec
subb
adc
insb
je
outsb
outsb
inc
adc
iret
lcall
je
and
mov
pushl
add
push
scas
pop
pushf
clc
add
sub
ficoml
push
outsb
sbb
loope
or
push
mov
mov
rorb
push
loop
xlat
xor
lea
pop
jb
sbb
pop
lods
pop
push
call
adc
lcall
xor
push
inc
mov
aam
push
pop
fwait
rcl
aaa
mov
nop
inc
pop
or
test
add
push
out
sbb
shll
sub
and
cld
mov
or
push
andl
jge
andl
dec
aaa
fidivs
xchg
inc
cmp
testb
outsb
out
pop
and
inc
sub
push
imul
adc
push
pop
add
push
gs
mov
jo
and
inc
xchg
fstps
ja
test
push
adc
stc
inc
test
call
imul
cwtl
mov
or
loop
outsb
add
dec
lds
pop
jmp
and
or
or
in
test
mov
sub
mov
jo
outsl
jb
mov
cs
je
push
fcomps
mov
jl
adc
push
cld
cmpl
ret
or
call
pop
jne
lret
mov
mov
add
or
or
aam
sub
xor
scas
add
in
and
add
movups
cmp
jg
inc
sub
xchg
aas
push
inc
mov
adc
and
insb
aaa
add
mov
enter
push
je
lods
inc
lret
cmp
xor
mov
sub
adc
leave
pop
cs
or
xorb
stos
push
pop
outsb
jg
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
mov
push
jb
arpl
fs
jne
add
fs
insl
decl
jb
jb
inc
and
fs
inc
fisttpl
or
gs
xor
pop
sti
bound
cmp
push
popa
je
add
arpl
sub
pop
outsb
ja
rorb
add
fistpll
pop
sub
test
push
or
inc
ds
js
cld
insl
jnp
nop
add
imul
and
push
arpl
aas
jae
pop
push
gs
outsl
add
mov
sbb
orb
insb
int
mov
addb
jns
push
notl
int3
lea
xchg
dec
jo
out
cmp
xchg
outsl
ja
inc
xor
push
test
mov
in
jmp
dec
jne
inc
jno
dec
pcmpeqb
jne
and
pusha
push
das
fcoml
dec
or
push
data16
jo
pop
jo
ret
or
mov
jge
jo
or
dec
fwait
bound
add
inc
int
ds
outsl
jb
outsl
outsl
insb
jmp
jo
push
outsb
popa
jo
push
or
dec
nop
test
andl
cmp
mov
pop
js
cmpl
inc
mov
ret
lods
add
jo
pop
data16
cmp
ffree
push
push
sbb
pop
add
jne
add
test
es
shrl
jo
add
pop
inc
test
pop
inc
out
sub
arpl
popa
lock
mov
rolb
mov
dec
outsb
data16
in
in
mov
insl
out
outsl
sub
arpl
mov
sbb
jns
inc
arpl
jo
inc
popa
arpl
filds
sub
pop
or
gs
inc
push
mov
add
xchg
test
pop
lods
adc
cltd
add
mov
mov
mov
and
aaa
ja
or
mov
adc
ja
xor
dec
adc
push
push
jno
pop
subl
push
jnp
mov
xchg
xor
pushl
adc
xor
xor
jno
pushl
mov
cmpsl
xor
xor
xor
xor
jno
lahf
xor
xor
pushl
xor
xor
xor
xor
xor
xor
pop
xor
xor
adc
sbb
das
hlt
pushl
arpl
sahf
ss
ss
ss
ss
pop
ss
sbb
and
sub
ss
incl
push
aaa
pop
aaa
fs
jp
jg
or
adc
and
xor
pop
cmp
imul
cmp
in
cmp
addb
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
test
scas
cmp
xor
push
mov
in
push
iret
test
add
add
mov
lret
cli
add
add
push
stc
out
xchg
jle
add
incl
pop
cmc
pop
cmova
aam
repnz
cmp
subb
stos
arpl
jns
daa
inc
nop
movsb
ja
enter
inc
mov
rolb
testl
dec
cmp
fdivl
sub
lods
pcmpeqd
pop
mov
jp
stos
fiadds
rorb
aaa
cmpsl
add
mov
add
mov
fstp
cmpsb
imul
shll
xor
mov
sahf
insb
and
test
cmpsb
mov
dec
mov
add
shll
lcall
sub
ljmp
lahf
and
inc
imul
imul
fnstenv
sbb
sub
popf
add
lcall
loopne
mov
movsb
mov
fisttpl
lret
scas
imul
xor
pushf
je
xor
roll
sub
js
cmpsb
imul
imul
scas
imul
or
push
and
cs
add
imul
xchg
lret
dec
push
addb
and
dec
xlat
cmp
push
loopne
enter
add
and
mov
je
je
adc
xchg
add
sbb
dec
je
jo
jne
lret
mov
inc
aaa
int
popa
scas
aam
cmc
adc
adc
xor
add
xchg
es
negb
add
add
or
add
insb
outsl
xchg
add
aaa
sbb
xorb
fistpll
push
push
pop
pop
add
add
ds
and
test
cmp
or
xchg
add
sub
add
mov
cwtl
pop
aas
mov
aas
add
pop
and
rorl
incl
and
add
sbb
xchg
dec
xchg
add
sub
enter
pop
imul
sbb
add
inc
xchg
ret
dec
cmp
inc
dec
cmpsb
fwait
out
insb
pop
das
xor
xchg
xor
adc
push
push
mov
imul
ss
ja
adc
sbb
je
jne
punpcklwd
pop
inc
or
push
sub
incl
pop
add
push
inc
jb
push
and
ja
or
push
pop
lock
mov
jae
and
addr16
pop
mov
xor
push
sbb
pop
add
add
inc
incb
pop
pop
cs
add
pop
mov
inc
lret
jb
arpl
or
push
push
inc
push
inc
dec
adc
outsl
cmp
dec
push
or
ss
ja
jb
inc
popa
jb
push
ja
jge
aas
dec
push
dec
pop
dec
xor
adc
mov
out
arpl
add
std
inc
icebp
push
insb
js
mov
je,pn
mov
mov
xor
gs
push
enter
gs
test
jo
fdivs
inc
les
fcoms
in
jne,pn
js
loop
dec
arpl
dec
mov
pop
outsl
mov
push
cmp
test
sbb
dec
push
pop
sti
call
jmp
inc
add
dec
or
sub
jo
movq
sbb
jb
ds
add
cmp
jb
cmp
ret
pop
adc
inc
sbb
loopne
addr16
outsl
lds
inc
sbb
push
jg
ljmp
sbb
inc
or
adc
sbb
pop
push
sti
mov
aam
call
into
mov
stos
pop
push
adc
enter
inc
fbld
sbb
add
mov
mov
cmp
sbb
sbbl
and
pop
rcrb
pop
pop
pop
jb
leave
and
test
test
mov
in
sbb
pushf
fstpl
push
add
arpl
adc
xor
pop
clc
bound
test
pop
push
jne
inc
sub
add
sbb
aad
call
lea
imul
xor
ret
or
push
push
pop
lods
add
jg
in
add
movb
mov
sub
sub
mov
movb
and
movb
sti
push
push
imul
imul
jne
inc
pop
pop
mov
mov
addb
test
bound
mov
aas
mov
or
dec
ror
or
adc
and
dec
and
scas
pop
insb
and
sar
jbe
sub
push
movzbl
shll
sarl
push
pop
inc
add
mov
std
mov
adc
inc
or
aas
mov
pop
icebp
outsl
inc
pop
cmp
pop
jl
stos
aaa
pop
mov
xchg
dec
cld
or
xor
adc
xor
adc
xor
adc
adc
adc
and
enter
int3
adc
sub
test
je
add
mov
add
xchg
or
leave
daa
adc
add
mov
ljmp
clc
and
cmpl
lret
stos
js
add
ret
sub
in
das
dec
xor
cmp
inc
push
test
add
adc
sub
addr16
sub
pop
xor
sbb
fistpl
test
add
add
sub
icebp
jge
push
loope
call
xorl
sub
ret
hlt
ss
loopne
or
add
push
push
pop
sbb
sahf
out
lret
dec
mov
pop
sub
out
cltd
loope
mov
sti
testb
movsl
mov
movsb
mov
mov
loopne
pusha
sbb
push
jle
mov
rep
sbbb
js
cld
pop
and
gs
mov
push
mov
mov
pop
dec
pop
mov
in
push
sbb
mov
dec
xchg
test
andb
mov
jle
jo
mulb
push
or
sub
mov
jbe
mov
inc
mov
outsb
sti
frstor
add
jne
sub
sub
jae
cmp
xor
and
push
pop
mov
in
adc
faddl
pop
imul
mov
inc
inc
decb
jge
outsl
adc
xlat
addr16
enter
jae
pop
mov
push
add
mov
xchg
mov
or
addr16
adc
andl
mov
push
or
subl
dec
cld
pop
jb
add
pop
es
pop
sbb
push
add
sub
xor
shl
mov
inc
std
push
mov
or
adc
adc
push
out
or
sub
sub
decb
aaa
cmp
jne
and
jge
sbbl
mov
std
mov
cmp
ja
inc
push
pop
cld
call
iret
cltd
jb
cld
gs
cmpsb
clc
xor
lsl
push
jo
loope
cmp
or
ds
or
movl
jp
and
outsb
add
daa
or
pslld
push
xor
adc
subb
cmpl
xor
xor
and
in
xor
insb
xor
enter
xorb
add
mov
pop
repnz
pop
repnz
add
cli
push
notl
and
inc
mov
mov
add
mov
push
in
sbb
xchg
xor
das
mov
adc
cmpb
adc
clc
jle
xor
loopne
clc
cmp
jle
dec
xchg
dec
sbb
in
ja
rcr
pop
outsb
call
adc
je
test
shrb
push
mov
inc
hlt
outsl
call
adc
sub
daa
incl
mov
cmp
jne
jbe
int
xor
inc
clc
xchg
cmp
cmpsl
daa
adc
jo
testb
add
cmp
sahf
inc
cmp
mov
adc
cmc
mov
add
fcoms
add
mov
cmp
cmp
dec
outsl
jnp
shlb
aaa
ret
add
into
bound
ljmp
mov
push
lods
pop
and
pop
cmc
and
cs
push
jmp
adc
add
xor
push
or
add
xchg
stc
mov
push
mov
fbstp
cltd
pop
inc
idiv
adc
jg
sbb
mov
lahf
andb
sub
xor
enter
xchg
enter
or
add
lods
xor
adc
adc
dec
test
add
dec
stc
dec
push
rclb
push
call
jg
inc
fcoml
add
movsb
xor
adc
add
xor
push
imul
lock
adc
jb
xchg
jmp
xchg
push
inc
xchg
jno
test
xlat
rorl
fs
ja
xor
mov
cmovae
es
mov
test
jl
movsb
jb
in
mov
icebp
mov
imul
add
andl
mov
insl
mov
ljmp
or
ja
std
and
add
push
addl
adc
mov
mov
rol
cmp
loopne
cmp
add
inc
pop
lret
shr
add
dec
stos
pusha
loopne
inc
pop
inc
push
mov
push
sbb
movsl
sbb
pop
mov
dec
push
pop
jne
adc
mov
lea
sbb
rorb
jmp
stos
adc
shl
or
adc
or
outsl
loop
dec
jne
xor
push
jbe
push
add
outsb
add
xchg
inc
aad
mov
repnz
jno
mov
cmp
xor
not
and
push
mov
mov
jl
and
or
add
lea
popa
clc
add
shr
mov
divb
add
repnz
not
and
testl
lea
test
fcmovnu
push
call
push
aam
or
fucomi
fwait
inc
fisubs
fimull
add
lea
jg
fstpl
out
xadd
adc
pop
inc
sub
mov
and
mov
sarl
inc
fiadds
psllq
sub
rorl
push
shr
or
add
dec
mov
pop
jg
push
lea
scas
cmc
sbb
cli
mov
je
ljmp
shlb
push
jo
in
sub
adc
movb
lret
fidivl
add
loopne
fisubrl
pop
popa
xlat
or
mov
imul
sbb
inc
xor
loopne
imul
subl
mov
sbbb
add
pop
pop
mov
add
out
xor
add
repnz
push
sbb
les
rep
fwait
ja
rolb
fcomp
cwtl
subb
addl
repz
sub
rcr
das
pusha
arpl
pop
mov
shrb
pop
scas
testl
insl
mov
pop
les
subb
int
loope
add
pop
push
loop
jne
sub
push
xchg
addr16
nop
fcom
add
cmp
mov
pop
mov
rcrl
les
adc
and
or
xor
into
fwait
in
or
or
xchg
jno
std
sbb
lods
in
add
adc
fidivrs
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
xor
inc
cmp
sub
lods
mov
or
cmp
lods
mov
add
or
mov
out
mov
push
and
aad
fidivl
mov
bound
sbb
or
lock
and
jg
pop
sahf
pop
cs
jge
cmp
inc
rclb
push
pop
imul
fadds
hlt
push
and
clc
mov
out
push
jb
repz
pop
pop
es
adc
pop
inc
add
repnz
shll
and
add
andl
out
call
fisubrs
insl
mov
adc
jnp
lcall
xlat
lods
mov
or
mov
pusha
adc
inc
add
test
and
cmp
insl
in
pop
and
int3
cmp
jge
cli
fldenv
clc
in
mov
shl
jg
or
dec
daa
inc
push
stos
mov
mov
imul
int
and
sbb
loopne
ret
jge
sub
pop
aaa
or
mov
mov
fbstp
pushw
fcomps
aad
adc
mov
push
test
aaa
outsl
sbb
mov
adc
inc
loop
rcr
je
out
or
fcmovbe
fdivs
aaa
add
sbb
pop
add
mov
xlat
mov
daa
lret
repz
int3
aad
flds
outsl
adc
jae
movl
iret
cmp
mov
cmp
or
data16
repnz
xor
test
pushl
int
pusha
sbb
test
xor
mov
call
divb
adc
push
fadd
jbe
lret
repz
insl
adc
inc
sti
xor
mov
repz
repnz
or
in
mov
push
fcomip
xor
mov
xchg
nopl
xchg
mov
push
adc
cltd
jb
das
lods
fdiv
fmuls
pusha
dec
insl
pop
mov
jno
cli
xor
rcrb
mov
pop
outsl
js
sbb
or
xlat
mov
jle
fisubrs
pop
mov
aam
out
testl
fcompl
xor
imul
out
xchg
or
xor
xor
fstpl
sbb
aam
xchg
jae
adc
fidivs
test
pop
xor
cmp
or
pop
cmp
push
aas
sbb
cmp
rcl
fldl2t
fdiv
adc
jbe
les
das
jle
in
mov
popf
aaa
je
ss
in
clc
jl
pop
int
xorl
or
mov
inc
gs
lods
les
sbb
sti
mov
mov
aaa
sbb
sub
lea
shl
ret
sbb
jl
sahf
pop
mov
push
xchg
ljmp
inc
push
or
mov
jns
enter
and
fidivrs
jb
hlt
cmp
xor
xor
xor
cmp
pop
pop
gs
sbb
sbbb
push
rcrl
pop
sahf
aaa
xchg
int3
or
push
or
pop
bound
dec
jge,pt
out
je
pop
sahf
call
unpckhps
sbb
cmp
in
rcrl
test
sub
push
and
jg
call
scas
dec
jle
outsl
jecxz
jp
sbb
int
dec
xchg
sbb
out
jecxz
jp
ret
incb
inc
fsubs
add
mov
adc
dec
mov
cmpb
lds
jp
xlat
sbb
ja
mov
xor
mov
loopne
mov
ret
repz
rcl
sub
pslld
ret
clc
int
and
pop
rclb
xor
dec
mov
pop
jge
sub
xchg
xlat
pop
add
pop
movsb
mov
in
decb
or
aas
xor
rolb
add
js
cmp
push
mov
dec
cld
call
enter
cmp
jl
js
sub
push
push
push
fcompl
sub
enter
insb
js
adc
inc
inc
insb
xlat
pop
fisubrl
fldl
lea
cmp
loope
xchg
test
nop
iret
pop
pop
mov
mov
into
ljmp
adc
adc
add
sbb
cmp
sbb
jne
xchg
sbb
pop
push
adc
push
xor
fstpt
pop
outsb
pop
cmp
xchg
cli
mov
cmp
jbe
lea
aaa
xor
add
sti
je
inc
add
cmp
jb
jmp
imul
add
lea
out
push
call
mov
pop
adc
aad
mov
add
test
push
loopne
pop
int3
cmp
mov
rolb
aam
call
dec
pusha
lret
mov
and
mov
imul
lcall
add
mov
gs
das
lock
jo
hlt
subb
mov
mov
lods
and
mov
and
fisttps
mov
mov
outsl
pop
cmpb
add
and
inc
xor
lods
mov
fmull
mov
inc
lods
outsb
shll
push
fimuls
fmull
inc
push
pop
xor
insl
xor
pop
and
push
or
adc
push
dec
adc
sbb
je
faddl
in
dec
out
push
out
push
das
dec
add
mov
pop
repz
dec
mov
mov
push
push
cmp
mov
stos
sbb
mov
mov
dec
push
cltd
insl
and
push
push
mov
xchg
pop
push
xchg
andl
adc
imull
fcomps
cmp
push
push
push
inc
adc
push
mov
stc
mov
fwait
test
clc
xor
cmp
or
cmp
divb
inc
cmp
cld
mov
sub
adc
push
lock
rclb
push
adc
dec
push
sub
add
mov
movhps
mov
push
mov
sbb
pminsw
jns
sub
cltd
por
xor
push
sbb
push
mov
inc
jge
or
and
movsb
push
clc
jne
fldt
adcb
mov
and
jmp
cmp
mov
cmp
je
dec
dec
cmpw
jne
inc
sti
mov
mov
cmp
je
add
mov
push
sub
ds
lcall
int
popa
gs
mov
push
aad
fistpl
data16
inc
lret
jnp
mov
mov
xchg
movl
jbe
fwait
ret
push
or
faddp
out
nop
push
je
xchg
cmp
testb
fisttps
dec
mov
cmp
je
cmp
jne
push
in
pop
xor
xor
push
outsl
cli
jbe
lods
adc
or
ret
jbe
ja
loopne
ret
or
mov
imul
test
enter
adcl
movq
inc
test
adc
aam
outsl
pusha
cmp
subb
inc
mov
xchg
leave
add
xorb
insb
cwtl
ss
mov
mov
mov
mov
fistps
push
stc
repnz
push
push
nop
insl
xchg
dec
je
aas
pop
loopne
mov
ret
adc
mov
addb
mov
insb
mov
xor
insl
sbb
mov
mov
pushl
rclb
mov
push
insb
or
cmp
jae
add
mov
xor
sub
and
in
imul
fdivrl
std
and
mul
addr16
je
xor
mov
add
cmp
sahf
sti
in
push
mov
or
rcrl
mov
cmp
jbe
sti
fnstsw
mov
lock
xchg
stos
mov
jo
mov
ss
jo
push
push
pop
dec
mov
or
pop
jp
xor
aaa
push
popf
sbb
std
in
xchg
in
mull
pop
adc
pop
pop
call
call
xor
pop
mov
cmpb
addb
insl
xchg
dec
out
or
mov
mov
add
inc
insb
sarb
dec
mov
daa
aaa
add
movsb
add
shlb
mov
mov
mov
push
push
outsb
mov
lret
pusha
sti
mov
or
decl
xchg
cmp
gs
nop
scas
mov
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
mov
mov
cs
mov
push
movsl
xchg
outsb
mov
gs
mov
lret
js
insb
outsl
jb
ss
sub
cs
fcmovu
imul
dec
test
loop
fdivl
mov
popa
pop
in
push
out
dec
out
cmpsb
subl
jmp
insl
lcall
imul
sub
xor
insl
xlat
insb
ret
rol
add
xor
jbe
shll
enter
lret
cmp
jb
cmp
hlt
xchg
push
xchg
xchg
mov
push
cwtl
cltd
lcall
fwait
lods
xchg
cld
mov
mov
mov
mov
mov
mov
cmpsb
xor
test
push
test
cmpsb
imul
stc
hlt
rolb
lea
add
rorb
cmpsb
or
pop
loopne
pcmpgtd
aaa
mov
imul
sbbl
mov
sbb
fs
jbe
data16
mov
mov
xchg
pop
dec
rolb
lret
xchg
jae
hlt
pop
mov
dec
test
cmc
adc
pushf
testl
out
xchg
ljmp
sub
sar
and
int
jge
sti
xor
adc
pop
loopne
mov
mov
and
imul
mov
sbb
pushf
pop
cli
inc
xchg
fs
outsb
ret
sbb
daa
mov
lds
inc
sub
nop
jmp
aaa
xor
pop
cmp
insl
mov
movsl
jmp
sbb
or
ret
jmp
mov
jmp
mov
nop
repnz
xchg
sbb
hlt
cli
call
inc
mov
repnz
pop
hlt
cld
cmp
inc
adc
sbb
mov
push
lret
xchg
mov
and
frstor
xrelease
fmuls
ja
imul
movsb
lock
sub
out
push
cld
mov
and
rcr
pushf
popf
cmp
sbb
and
adc
pop
notb
jo
pop
or
out
test
aas
or
or
out
adc
xor
inc
es
xchg
fwait
sub
sbb
sbb
pop
shrb
push
cmp
inc
adc
in
js
test
sahf
fmull
js
jae
sub
ret
adc
xorb
outsl
mov
call
mov
sbb
pop
add
xchg
or
fstpt
outsb
jne
push
add
adc
fstl
inc
popf
cmp
fisubs
dec
les
shl
jp
testl
insl
imulb
push
jl
in
pop
push
cmpsl
mov
hlt
adc
sbbl
lods
aaa
push
push
mov
jb
xchg
cmp
push
jecxz
xchg
sub
xchg
mov
xor
scas
icebp
sbb
fisubs
cld
cmpb
mov
jae
mov
sub
push
call
inc
adcb
enter
negb
sarb
add
test
ss
cmp
or
cmpsl
sub
popa
inc
inc
adc
add
lock
sbb
and
lods
push
pop
lods
push
and
xlat
jmp
mov
pusha
clc
push
js
fs
loope
xor
ret
sub
pop
jp
in
andl
call
les
leave
add
fsubr
dec
outsb
adc
pop
mov
ret
cmp
adc
add
test
xchg
gs
or
jp
cmpsb
imul
imul
dec
mov
fidivl
fildl
fstp
xor
jb
jae
fbstp
xor
sub
dec
shll
jae
xor
orw
cld
std
insl
icebp
lcall
mov
mov
mov
mov
mov
sarl
outsb
inc
lcall
xor
enter
pop
lret
gs
xchg
dec
popa
js
push
pop
outsb
xor
pop
inc
push
xor
nop
jb
icebp
repnz
popa
shlb
mov
mov
adc
cmp
and
mov
push
pop
push
sbb
sbbl
xlat
pop
push
add
push
sbb
or
hlt
dec
inc
xchg
add
in
mov
sbb
xor
mov
in
pusha
jmp
loop
and
cmc
and
inc
add
loope
shll
je
imul
scas
js
sbb
andb
and
sbb
xor
rorl
mov
mov
sub
push
call
push
mov
addr16
xor
or
add
adc
andb
fdivs
bound
pop
push
mov
rclb
pusha
mov
cmp
push
out
pusha
pusha
cmpl
add
adc
call
cwtl
test
in
mov
cld
gs
fwait
mov
xchg
clc
lock
jge
add
or
or
jg
xlat
jo
jb
or
mov
outsl
rcrl
repz
xchg
in
add
push
and
aam
pop
xchg
pop
push
out
pusha
jnp
fistl
push
adc
dec
in
push
or
int3
jo
icebp
jne
xor
and
ljmp
out
test
aaa
in
out
push
int3
push
mov
lcall
cmp
aas
dec
clc
lea
push
movsl
movsb
cmp
out
inc
test
hlt
pushf
nop
and
int
insb
pop
cmp
adc
jl
lea
add
push
loop
bound
mov
fs
xchg
push
add
pop
mov
add
pop
loopne
subb
mov
push
sbb
div
fcomps
inc
cmc
inc
aas
shlb
andb
inc
cmp
or
idiv
shrb
andb
clc
add
sbb
add
shll
jo
insb
mov
jo
imul
int
cmc
fs
insb
repz
cmpsb
jmp
test
popa
cmpsb
imul
mov
outsw
ret
subb
sub
in
mov
cltd
adc
push
sbb
xchg
xchg
xchg
js
test
mov
pop
popa
inc
in
sbb
push
dec
push
sbb
xchg
inc
xchg
ret
xchg
cmp
or
xchg
adc
adc
arpl
call
stc
ficomps
mov
imul
add
gs
in
push
adc
sub
addr16
inc
in
sub
xor
ss
in
jl
stos
push
cmp
sub
add
ret
push
lcall
dec
mov
adc
pop
lods
xchg
or
push
push
pusha
out
fldcw
cmp
fsts
mov
lock
sbb
mov
cmpsl
xchg
push
dec
mov
pop
enter
push
xlat
lea
and
out
push
ret
jmp
adc
loop
stos
or
dec
aaa
and
jns
push
xchg
xor
jle
fadd
and
xor
es
mov
out
pop
jbe
push
inc
testb
xor
cmp
jle
mov
mov
lret
and
insl
push
test
inc
pop
adc
pop
rcl
lret
xchg
cmp
pop
das
mov
mov
sbb
out
aas
add
lods
cmp
lahf
mov
mov
push
das
mov
lea
call
icebp
push
sub
decb
imul
lret
or
jmp
sbb
add
std
dec
mov
std
xchg
sti
in
xchg
xchg
sti
mov
mov
aas
movq
fstl
lcall
push
push
js
add
adc
adc
push
add
fcmovnu
fdivl
daa
add
push
mov
adc
fcomp
or
out
sbb
data16
or
pop
adc
mov
xchg
sub
fmuls
lret
sub
and
fisubl
pop
cs
popa
cmp
jae
shll
lahf
mov
mov
cmpsb
jo
test
gs
push
test
cmp
gs
es
cmp
lcall
cmp
cmpsb
imul
cmpsb
imul
push
fs
das
enter
xchg
outsb
leave
lret
int
lcall
rcl
shrb
adc
or
pop
xlat
aaa
xor
imul
xor
shrl
and
or
xor
and
shll
and
shlb
jae
outsl
and
jae
inc
inc
cmp
and
mov
mov
push
and
arpl
call
sbb
xchg
mov
adc
push
or
add
push
xchg
or
ja
adc
jne
rorb
sahf
clc
jge
mov
push
rolb
nop
insl
mov
mov
push
or
cwtl
lea
insb
sub
jecxz
mov
dec
pop
into
leave
push
dec
fwait
mov
dec
repz
add
sti
xchg
pop
sbb
inc
sar
movsb
xchg
xchg
adc
scas
push
loop
mov
sbb
push
rorl
testb
stc
fsubl
js
or
sbb
insb
loop
adcb
pop
inc
pop
push
xchg
and
les
jno
jne
mov
rolb
mov
pop
popf
push
pop
hlt
dec
adc
lock
andl
fdivrs
push
sbb
push
push
imul
jo
sbb
push
push
and
add
mov
adc
sbb
aam
sti
mov
sub
jae
sbb
popf
push
lods
loope
sbb
movsl
mov
testl
lea
ret
push
pop
jae
push
packsswb
xor
call
xor
leave
adc
add
vpcmpeqd
pop
push
clc
sub
mov
mov
stos
or
add
sarb
fcomp
in
call
outsl
andl
dec
push
inc
jecxz
clc
ljmp
es
fists
sti
sub
mov
mov
repnz
add
mov
mov
fucomp
sub
jle
stos
test
or
les
add
jp
jb
dec
mov
int
jmp
les
adc
jl
nop
sbb
test
mov
idiv
push
jle
cmp
add
stos
and
lods
jne
imul
xor
add
inc
xlat
mov
lock
jne
sbb
xchg
dec
cltd
mov
adc
jmp
sbb
push
ret
add
lods
fisubl
adc
cltd
hlt
push
xor
lret
mov
inc
mov
sub
mov
dec
inc
push
cs
inc
addr16
add
sbb
jne
xchg
gs
jae
fs
insb
inc
sub
mov
shll
je
jb
shll
jb
xor
shll
gs
imul
rorb
imul
imul
add
inc
inc
aam
cmpsb
imul
test
xor
mov
shrl
cld
pushf
js
xchg
xchg
jb
xor
xchg
xchg
xchg
xchg
inc
push
cwtl
js
dec
pop
int
lcall
and
cmp
inc
loop
in
cmpsb
imul
push
mov
mov
xlat
insb
fwait
mov
jb
mov
or
sub
inc
mov
mov
imul
movsb
sub
mov
or
test
xchg
mov
add
adc
cmp
xchg
lret
lret
std
stos
xor
loop
stos
adc
fimull
out
push
rcl
int
cmpsl
fwait
add
jne
add
push
push
icebp
int3
add
mov
cmp
repz
lahf
lea
clc
popa
addb
test
add
pop
aas
xchg
das
pop
sub
mov
sahf
mov
sbb
add
pusha
pop
imul
loope
inc
push
mov
mov
andl
sbb
stos
mov
mov
mov
or
add
pop
cli
inc
mov
add
add
aam
dec
andl
push
jmp
sub
mov
call
add
dec
xchg
sbb
loop
sbb
jge
push
aas
dec
lsl
and
inc
mov
rolb
bound
sti
mov
or
hlt
adc
adc
or
pop
mov
jbe
ja
fsubs
loopne
mov
push
push
xor
sbb
out
out
in
jb
inc
incl
pushf
add
shlb
pop
sbb
cmpsb
iret
enter
ja
xor
xor
pop
xor
sbb
insb
sbb
add
daa
arpl
jb
inc
sub
xor
push
pop
insl
jne
lods
push
orl
pop
inc
fsubp
mov
stos
mov
sbb
push
ret
push
popa
mov
cmp
sub
cmp
mov
push
mov
mov
fs
push
lods
or
cmp
hlt
stos
leave
and
hlt
mov
jmp
jo
xchg
or
fimuls
js
sub
ffree
or
jmp
jbe
xor
xchg
pop
jo
add
iret
jo
push
jne
jb
outsb
ret
push
pop
push
movsb
fnstenv
sbb
repnz
and
loopne
inc
cmpl
aaa
loope
mov
bound
jns
rorl
mov
or
and
roll
loopne
inc
lcall
je
imul
mov
insl
clc
cmpsb
imul
imul
inc
and
pop
aas
inc
sbb
aam
pause
add
std
std
leave
in
push
jns
xor
jne
fistpl
std
ret
and
jae
popa
arpl
or
cmp
shll
jo
jae
insb
and
jne
xchg
xor
outsb
je
pop
sub
sbb
pop
mov
dec
add
andb
sub
sbbb
inc
jnp
stc
pop
je
neg
sbb
add
fs
add
std
sbb
xor
cmp
sub
inc
imul
push
outsb
pop
mov
js
and
mov
insb
or
movq
jmp
xor
adc
push
je
shll
outsl
arpl
bound
dec
es
inc
call
sar
rclb
loopne
int3
loopne
aas
enter
push
cmpl
loopne
test
pop
adc
lahf
add
jns
mov
push
ljmp
inc
lds
lea
jg
stos
stos
into
stos
fmul
imul
add
dec
test
jmp
pop
sbb
shr
lcall
gs
pop
mov
push
pextrw
xor
inc
add
mov
xor
jge
mov
les
sub
sbb
xadd
adc
adcb
xchg
jns
or
loopne
push
mov
enter
pop
xchg
mov
push
and
int
loop
adc
fldenv
dec
adc
loope
cmp
lods
or
test
jb
popa
scas
mov
inc
xor
mov
lret
cmpl
mov
in
cmp
inc
cs
mov
or
mov
dec
or
add
fidivs
gs
mov
jae
call
mov
stos
clc
rcll
out
rorb
mov
sbb
jg
std
cwtl
inc
cwtl
and
jmp
mov
lret
mov
je
outsl
outsb
lret
mov
lret
cmp
imul
mov
insb
imul
dec
lods
scas
scas
push
mov
imul
imul
lcall
or
jo
ret
les
imul
jne
sub
xchg
int3
sarb
gs
xchg
gs
arpl
xchg
gs
xchg
outsb
cmp
xchg
xchg
gs
jb
jns
cmp
fwait
fwait
mov
ret
and
jb
xor
shrl
outsb
sub
insl
push
std
and
dec
mov
mov
dec
jl
dec
jne
or
jmp
push
and
enter
sbb
jmp
inc
mov
cwtl
cmc
inc
gs
out
aas
adc
stc
stos
inc
insb
push
popa
and
xor
sbb
xor
loopne
call
negl
push
arpl
movsb
jo
lods
call
lds
sarb
pop
sub
mov
cmpsb
and
fs
add
les
cli
les
fs
dec
xchg
jae
arpl
dec
xchg
in
cmp
lea
movsb
imul
rclb
fs
les
sbb
cwtl
xchg
in
jl
sbbl
aad
jb
add
imul
mov
pop
scas
std
divb
cltd
popa
cwtl
imul
divl
clc
popa
cmpsb
imul
fcomps
outsl
popa
fs
push
mov
je
jb
cli
xor
sub
push
mov
fildl
jmp
repnz
jns
cwtl
aad
out
sbb
pop
cmp
xchg
les
in
or
outsl
out
push
jmp
and
scas
popa
arpl
cmc
sbb
push
lods
je
mov
xchg
mov
mov
cmp
call
scas
dec
enter
ljmp
sbb
aas
push
mov
add
mov
sbb
push
clc
js
cld
jl
in
jmp
rolb
jle
sbb
add
adc
pand
pop
fidivs
call
notl
pop
cli
mov
sarb
jl,pn
add
in
sbb
jl
mov
push
fcoml
push
push
pop
faddp
add
cli
cmpsl
jge
or
mov
dec
xchg
add
jg
push
lret
push
mov
cwtl
insb
sbb
push
add
mov
imul
sbb
sbb
cmp
loop
in
sbb
sbb
out
call
insl
lret
test
std
loope,pt
inc
inc
push
xor
leave
add
mov
mov
push
int
push
gs
jne
outsl
and
ss
xor
add
and
xor
jnp
lock
outsb
int
insl
sbb
fnstenv
frstor
fdivrp
mov
arpl
cld
mov
push
loope
pop
cmp
enter
cld
in
in
jp
call
out
cld
sbb
jae
fcoms
call
push
xchg
inc
out
test
clc
or
aaa
mov
push
sbbb
add
jno
loop
xor
or
dec
push
cmp
sbbb
test
xor
adcl
adc
cmp
push
call
xor
enter
mov
sbb
xor
xor
scas
nop
push
test
pop
ljmp
cld
and
pop
adc
pop
add
insb
pop
dec
xor
and
sub
add
sbb
out
sbb
xor
xor
xor
and
les
xchg
aaa
mov
test
jo
hlt
flds
andb
outsl
outsb
je
pop
fcoms
aam
pop
jmp
xor
pop
call
dec
xchg
push
je
and
movsb
mov
dec
adc
jo
shld
jne
push
stos
inc
jno
pop
insl
das
sti
int
push
out
jne
push
pop
or
cld
pop
push
sbb
xchg
xor
jl
jecxz
cmp
inc
daa
ffree
and
shlb
repz
pop
pop
or
js
shll
mov
pop
mov
test
cmp
mov
xor
push
push
fimull
popf
test
or
sahf
pusha
fcompl
add
lret
jb
fldenv
call
mov
iret
jp
and
lds
in
xor
in
xor
sub
mov
cmp
push
push
add
sub
stos
add
mov
and
cmp
add
fisubrs
adc
inc
aas
xor
xchg
pop
inc
cmp
call
mov
push
and
or
lcall
ret
adc
jnp
push
repnz
push
and
add
inc
test
nop
and
sbb
jns
jnp
xor
clc
pop
in
psubw
and
and
add
pusha
sbb
fsubl
sub
jae
jle
ja
mov
pop
push
test
add
lea
push
add
push
orb
ret
andb
ret
xchg
sub
inc
jb
js
jb
inc
mov
gs
in
ljmp
dec
inc
pop
and
adc
add
leave
std
or
and
or
cwtl
dec
push
dec
pop
add
cltd
sti
mov
xchg
jbe
pop
mov
adcb
push
push
mov
lods
or
pop
jp
mov
mov
sbb
or
cmp
jl
xor
fdivrs
shlb
sbb
push
and
cmp
add
jle
add
or
cmp
jl
shr
outsl
ljmp
pop
jl
test
jg
movsb
inc
lock
dec
ud1
push
call
leave
xlat
rcll
push
add
or
adc
pop
xchg
dec
aaa
and
mov
add
cmp
ja
into
mov
push
adc
in
mov
pushf
ds
lcall
sbb
mov
xchg
ja
mov
and
mov
mov
sti
add
mov
mov
fcoms
push
repz
sbb
stc
dec
repnz
mov
xlat
cld
and
mov
mov
sti
mov
sbb
hlt
aad
pop
stc
or
cmpsb
dec
lods
mull
inc
sub
add
fstl
daa
push
push
add
jbe
push
xor
xor
or
fwait
inc
cmp
fwait
hlt
mov
mov
push
mov
xchg
mov
sbb
data16
add
sub
inc
mov
mov
mov
in
fs
or
ret
cmp
and
pushf
push
call
mov
dec
and
ljmp
add
push
jnp
sbb
fsubrs
sbb
ret
lret
mov
xchg
je
pop
push
popa
es
mov
jae
ja
cmpsb
imul
outsl
flds
pop
ss
cmp
gs
jb
insl
mov
add
in
fs
mov
lret
imul
pop
mov
imul
popa
addr16
scas
fnstenv
fcmovne
jbe
rcl
dec
pop
rcl
or
or
fcmovnbe
addr16
aad
or
inc
std
adc
or
and
xchg
lock
lret
and
sub
mov
test
inc
push
call
push
rol
and
pop
sbbl
xor
rolb
sub
insl
mov
cmp
ret
sub
call
lret
aas
mov
pusha
sbb
or
adc
mov
repz
sbb
js
clc
dec
and
mov
and
dec
jle
jbe
add
xchg
push
repz
cmp
pop
jne
mov
mov
xor
inc
cmp
jns
out
inc
add
adc
arpl
int3
divb
mov
out
mov
out
xor
adc
add
mov
or
insb
sbb
cmpl
dec
add
sub
gs
or
in
es
mov
lcall
nop
int3
sti
hlt
shlb
and
push
mov
pop
repnz
push
pop
push
inc
push
pop
push
inc
pop
repz
fnsave
push
cmp
pop
add
cmp
in
inc
fdivs
mov
or
mov
push
movb
inc
gs
add
je
imul
pop
mov
mov
sbb
into
mov
mov
sub
popf
push
sub
pop
test
push
inc
pop
add
je
je
jbe
out
and
adc
lods
add
lret
inc
popf
je
cmpl
cltd
pop
cmp
inc
mov
cmpsb
ljmp
cmpsb
sbb
jns
jbe
imul
inc
enter
dec
xor
pop
jns
cmp
rcl
sub
aad
pop
gs
xchg
gs
outsb
fs
popa
sub
push
xchg
insl
gs
push
gs
lret
mov
gs
outsl
insb
scas
jmp
lret
gs
ss
inc
les
fnstcw
push
clc
stc
jmp
sbb
dec
push
cld
push
std
in
push
mov
fs
inc
stos
pushf
addr16
or
dec
adc
pop
xchg
test
or
xchg
and
mov
jbe
mov
dec
shl
mov
mov
xchg
lds
add
xchg
fisttpl
jl
inc
pushf
inc
add
in
mov
or
add
adc
dec
and
idiv
aad
xor
push
je
cwtl
ja
mov
push
push
mov
call
out
paddsb
fdivs
ret
sub
test
mov
fiaddl
shlb
addr16
sub
add
pop
push
fidivrl
mov
mov
mov
cwtl
lods
rcrl
jecxz
mov
leave
lock
test
mov
test
push
pop
push
pop
jle
mov
mov
sub
mov
jmp
shrb
ret
xchg
fsubrp
cld
mov
subb
pop
call
sbb
sub
sbb
fmull
mov
xchg
sub
pop
add
jmp
add
xor
aam
jbe
popa
fstps
imul
push
adc
imul
sub
push
fsubrs
mov
xchg
or
cltd
mov
fdivrl
hlt
insb
add
push
andl
mov
pop
xchg
mov
mov
mov
shld
test
mov
sbb
add
mov
shlb
pop
xor
xor
xor
insb
xchg
inc
jne
nop
movsb
fwait
mov
loopne
fs
insb
faddl
enter
add
call
jns
shll
dec
xor
mov
in
adc
adc
lods
xor
push
jle
sub
jns
xchg
xchg
hlt
dec
mov
mov
cmp
mov
push
push
aam
inc
push
and
andb
aad
and
pop
inc
jb
push
push
jmp
arpl
lret
add
dec
gs
dec
fldenv
push
jecxz
inc
or
jae
pop
xchg
inc
xor
jnp
out
mov
mov
fadds
dec
ss
add
or
adcb
jg
xor
or
add
sbb
dec
es
outsl
mov
inc
jns
add
or
stos
xor
adc
sbb
outsb
mov
push
sub
mov
aaa
sub
mov
test
js
sbb
push
push
outsl
imul
xor
mov
fstpl
push
and
loope
inc
imul
push
cmp
sbb
pop
add
jns
mov
stos
pop
imul
dec
ja
and
xor
imul
outsb
push
xchg
fidivl
add
mov
push
add
add
imul
add
inc
mov
inc
fsubs
adcb
pop
mov
in
shlb
stos
jae
lods
adc
imul
insl
insl
movsb
dec
cmp
ret
xchg
xlat
push
in
neg
pop
imul
insb
popa
cmpsb
adc
iret
sbb
addr16
mov
popa
xor
adc
pop
cmp
sub
in
gs
mov
fcmovb
jae
call
push
jmp
popa
addr16
aad
and
cmp
or
add
dec
or
pop
sbb
add
or
leave
or
stos
jnp
jo
jb
insl
sub
sbb
test
movsl
pop
and
int
fsub
jae
sub
lea
dec
mov
add
push
sti
pop
add
mov
gs
or
pop
xor
jb
cmp
stos
es
adc
inc
outsb
jne
push
aad
mov
cmc
push
dec
stos
dec
int
stos
pop
pop
sbb
mov
add
jae
push
pop
arpl
rcll
cwtl
sbb
ret
sub
add
dec
lret
out
push
xchg
popa
filds
arpl
jecxz
imul
dec
filds
aad
rcll
insl
lods
xor
dec
adc
fimull
add
or
and
xor
inc
pop
push
mov
inc
pop
jno
mov
insl
pop
sbb
xchg
lahf
bound
jnp
and
or
insl
fnsave
xchg
dec
add
xchg
add
add
sti
adc
gs
insl
imul
fbld
adc
add
lods
jno
push
push
fiadds
xchg
sti
mov
inc
fcoml
add
inc
sub
lcall
adc
inc
dec
push
dec
xchg
stos
pop
int
pop
movsl
loopne
adc
adc
lret
xlat
jne
mov
call
aaa
popa
inc
cmp
setno
rcrb
adc
bound
jg
add
popa
add
add
push
xchg
cld
add
add
add
dec
jbe
push
cmp
cmp
cmp
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
jbe,pt
jnp
stos
ds
aas
cmpl
ljmp
cwtl
sub
lret
xor
xor
xor
xor
pushl
cmp
popa
xor
test
mov
ret
xor
xor
xor
sub
jbe
movsb
xor
fsubp
pushl
leave
xor
xor
xor
xor
xor
xor
xor
cmp
and
xchg
fisttps
xor
xor
xor
xor
push
xorl
shlb
pushl
addr16
lods
ss
ss
lret
aaa
fidivs
jp
mov
cltd
cmp
cmp
lcall
cmp
cmp
cmp
cmp
push
cmp
add
ss
xor
leave
xor
divl
fists
ss
xorb
ss
ss
ss
aaa
inc
aaa
dec
aaa
insb
aaa
jno
lcall
sub
add
and
daa
xorl
jg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
fs
cmp
popf
arpl
cmp
or
and
aad
jmp
repnz
mov
xchg
aas
int3
aas
hlt
jmp
push
add
xor
insl
xor
sti
test
call
xor
xor
xor
xor
xor
xor
and
sbb
and
add
add
jg
xor
arpl
outsb
xor
xchg
adc
call
xor
xor
xor
xor
xor
dec
xor
call
add
shlb
out
cli
xor
xor
xor
ret
and
cmp
inc
xor
xor
xor
xor
xor
and
pusha
xor
jecxz
cli
xor
sbb
ss
incl
shlb
ss
ljmp
aaa
daa
aaa
cmp
aaa
mov
aaa
test
stos
aaa
mov
mov
cmp
push
cmp
or
jg
test
in
decl
cmp
cmp
cmp
pop
cmp
pop
cmp
mov
cmp
cmp
inc
add
cmp
cmp
cmp
cmp
cmp
aaa
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg,pt
loopne
inc
std
ds
aas
mov
enter
fiaddl
out
or
daa
hlt
lret
xor
cmp
push
xor
adc
fbstp
sub
xor
js
fwait
xor
xor
add
xor
xor
pop
xor
jnp
mov
aaa
cld
lcall
ja
xor
xor
xor
xor
xor
xor
jno
mov
pop
fdivrp
xor
adc
daa
ss
ss
ss
imul
ss
ss
aaa
adc
and
es
ds
dec
aaa
push
aaa
pop
aaa
dec
mov
pushl
aaa
mov
aaa
lds
xlat
aaa
in
add
fidivrl
cmp
cmp
cmp
in
pop
cmp
cmp
bound
cmp
decl
decl
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
out
sub
cmp
cmp
and
out
aas
dec
js
aas
push
aas
pop
aas
pusha
aas
push
outsl
aas
cmpb
aas
mov
icebp
repz
fists
xor
xor
xor
outsl
cld
aaa
jne
mov
xor
xor
xor
fidivl
inc
xor
fwait
cmp
dec
xor
push
xor
push
xchg
movsl
xor
xor
xor
xor
xor
xor
xor
xor
test
sti
mov
and
sub
pusha
fildl
cmp
cmp
mov
cmp
cmp
cmp
push
cmp
lds
loopne
add
cmp
pop
ret
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lahf
cmp
fstpt
and
movsl
lods
ds
ds
and
inc
fbstp
aas
dec
or
pop
sti
outsb
aas
je
jle
cmpl
aas
nop
aas
lcall
aas
cmpsb
aas
lods
pop
rcll
or
adc
push
or
xor
loopne
divb
xor
add
xor
jg
jo
xor
adc
sbb
xor
xor
push
je
xorb
xor
xor
xor
xor
xor
xor
xor
xor
shl
fcomp
daa
push
xor
mov
xchg
aam
in
add
getsec
pop
aaa
and
inc
jl
mov
lea
xor
cwtl
inc
pushl
cmp
aaa
aaa
int3
aaa
hlt
aaa
pop
cmp
cmp
in
cmp
outsl
cmp
ljmp
mov
mov
cmp
cmp
cmp
adc
sbb
push
cmp
or
mov
cmp
cmp
lcall
cmp
cmp
das
or
xor
and
popa
jmp
sbb
adc
aaa
push
pop
nop
mov
mov
aaa
fistpll
je
dec
pop
shrb
sti
mov
mov
cmp
jno
add
iret
incl
js
add
idivb
sub
pusha
push
fisttpl
loopne
and
cs
mov
push
fadds
add
adc
mov
add
adc
push
jae
outsb
ret
add
push
cmp
sbb
adc
inc
mov
add
add
lcall
fidivl
in
in
push
mov
push
pop
xor
imul
shll
subb
xor
pop
dec
ds
imul
sub
aam
add
jmp
add
inc
sub
ljmp
dec
inc
xchg
push
cmc
mov
test
scas
add
stos
cld
push
push
bound
dec
test
imul
pop
or
outsl
lods
std
outsl
push
mov
dec
popa
jns
jne
jae
xor
push
push
scas
mov
adc
adc
movhlps
orb
push
dec
dec
adc
sbb
adc
pushl
sub
push
push
inc
and
xor
icebp
push
add
negb
mov
push
rep
or
cmpsb
loop
int3
and
sub
pop
ss
adc
sub
push
ficoms
push
mov
mov
sbb
mov
jo
inc
mov
enter
push
mov
out
fiadds
ds
or
mov
sub
pop
les
clc
aam
inc
mov
cmp
push
xor
add
push
fldenv
aaa
adc
add
gs
inc
cwtl
in
fs
lahf
int
ficomps
push
jne
xchg
xchg
test
sbb
scas
mov
inc
rolb
adc
xchg
sub
scas
loopne
jnp
jmp
cmpl
jbe
or
lock
dec
cwtl
cld
sub
out
cmpl
sub
negl
bound
push
mov
sub
pusha
adc
inc
sbb
cwtl
imul
jnp
lret
pop
and
or
sub
dec
decl
les
sbb
test
stos
hlt
imul
insl
cmp
mov
insb
xchg
and
aaa
dec
insl
insl
pop
push
mov
pop
je
sbbl
dec
filds
cmpb
fcomps
jae
mov
rorb
and
xchg
fldcw
inc
xchg
gs
dec
je
dec
inc
cmpsb
imul
test
jne
xchg
push
fsubl
inc
dec
clc
shl
inc
inc
or
push
jge
and
jle
lea
dec
add
inc
sub
cmp
dec
arpl
shr
push
pop
adc
sahf
add
cmp
je
cmp
je
loopne
pop
es
test
out
sbb
in
inc
jmp
jo
mov
bound
add
dec
add
dec
mov
dec
sbb
ljmp
insb
add
sbb
mov
bound
dec
inc
inc
stos
sbb
pusha
pop
pop
dec
cli
push
xor
push
pop
ds
add
push
rolb
pop
cmp
fcompl
negl
mov
xchg
dec
push
inc
inc
cs
jns
or
mov
aaa
pop
add
add
into
lahf
dec
sbbb
in
sub
push
xor
cmovge
xlat
add
mov
sub
push
shll
adc
inc
jecxz
push
shrl
sti
mov
in
and
or
cmp
jb
pop
cmp
push
orl
leave
ds
push
adc
xchg
cld
and
cmp
push
and
dec
leave
pusha
xchg
add
and
jge
dec
call
rcrb
orl
push
pop
add
icebp
and
loop
and
and
mov
mov
and
and
mov
mov
pop
xor
and
dec
fcoms
out
jl
ljmp
std
scas
mov
imulb
mov
push
mov
mov
testb
std
mov
mov
push
adc
mov
lret
mov
sub
imul
stos
stos
dec
xchg
outsb
stos
lods
dec
lods
movsb
pop
stos
ss
arpl
sub
push
faddl
mov
xchg
movsl
imul
mov
gs
cs
dec
test
js
xor
pop
lcall
add
inc
outsb
add
popa
andb
fnstenv
adc
xlat
and
fdivl
push
or
rol
pop
xor
ret
lock
jb
adc
lret
mov
subb
gs
lret
mov
je
gs
xchg
movsl
add
outsb
insb
xchg
gs
arpl
xchg
gs
gs
js
mov
adc
jno
addr16
mov
add
cmp
gs
push
and
js
insb
inc
and
outsl
jb
mov
mov
pop
add
dec
inc
cs
in
mov
adc
jl
pusha
xchg
inc
sub
xchg
dec
imul
or
cmp
inc
fs
clc
insb
divb
inc
lds
push
pop
push
or
imul
lret
cmc
aas
and
cli
pop
sbbb
mov
or
mov
cmp
push
jns
in
or
sub
mov
ret
push
int
add
pop
sub
push
adc
outsl
out
xor
aam
add
fcomp
out
sub
mov
or
or
orl
xchg
mov
subl
outsl
es
dec
and
mov
data16
cmp
test
loop
shrl
out
sub
orb
roll
lea
mov
lcall
mov
rcll
adc
pop
data16
jo
xor
inc
clc
add
xchg
shlb
xor
pop
mov
arpl
inc
add
jbe
add
mov
or
jo
fimuls
cmc
or
ret
add
or
add
repz
insb
enter
sub
mov
inc
enter
adc
add
xchg
mull
add
add
and
cmpsl
and
add
push
jno
fs
cmp
rcrl
or
adc
jbe
mov
xor
insb
lcall
cmp
add
fdivrl
adc
push
xchg
lret
pop
mov
and
or
inc
lret
test
sbb
xor
push
mov
lahf
lds
xlat
movb
or
mov
add
test
inc
mov
pop
in
cmp
out
push
sbb
negb
clc
inc
jnp
add
nop
jae
bound
mov
push
mov
push
outsb
jb
and
or
inc
outsl
js
adc
leave
leave
and
jno
push
sbb
inc
pop
pop
mov
adc
jb
and
imul
xor
jg
icebp
push
add
insl
dec
jae
dec
and
lods
dec
adc
adc
jg
and
jmp
lret
pusha
add
add
adc
add
in
inc
push
mov
xchg
addl
xor
fsubrs
ret
sub
cmp
leave
and
fs
adc
add
xchg
int
sbb
lock
or
imul
imul
sub
clc
or
and
or
pop
jge
shll
add
or
add
inc
xlat
push
repnz
mov
mov
adc
mov
dec
adc
push
ficoml
xor
push
add
add
or
dec
das
inc
icebp
rcll
sbb
mov
sbb
setb
adc
pop
inc
jbe
stc
cmp
icebp
adc
ljmp
adc
jno
loope
push
pop
enter
pop
fadd
sbb
dec
or
enter
jnp
push
xor
imul
fcoms
adc
jns
in
jo
fisubrs
cmpsb
xchg
jns
pop
push
mov
or
int3
or
pop
jnp
sub
adc
sbb
stc
add
pop
sub
imul
jns
add
add
mov
sbb
pop
add
movsb
xor
dec
mov
pusha
int3
add
lods
sub
pop
pop
add
sub
or
dec
inc
cmovns
jbe
dec
mov
jae
xorb
add
pop
or
pop
jo
sub
add
jb
out
inc
addr16
pop
jecxz
jmp
mov
or
mov
outsl
movsb
xor
jecxz
inc
and
pop
mov
insl
add
outsb
inc
jae
and
pop
xlat
cmp
add
movsl
popa
and
add
or
mov
inc
imul
push
test
sub
push
pop
out
lret
lds
jne
xor
jb
cmp
fnstenv
xor
mov
or
xor
insb
popf
xchg
mov
dec
or
lds
add
dec
adc
fisttpll
xor
jle
add
ss
popa
inc
push
sub
mov
push
fwait
or
daa
dec
dec
dec
fldcw
xlat
outsb
xchg
mov
lahf
sbb
push
daa
jbe
mov
mov
daa
fs
outsl
pcmpeqw
mov
mov
jmp
mov
xor
pop
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
add
xor
adc
cmp
xor
repz
jg
outsl
imul
pop
xor
xchg
xor
xor
xor
xor
mov
mov
xor
xor
fisttps
xor
and
xchg
mov
xor
fs
mov
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
and
mov
aaa
or
pop
cmp
lcall
and
into
cmp
cmp
pop
and
fidivrs
jmp
cmp
cmp
cmp
cmp
cmp
and
xor
mov
xchg
shr
cmc
cmp
pop
ds
lcall
cmpsb
dec
mov
xor
sub
adcl
addb
push
gs
jne
das
loop
mov
add
pop
add
add
xchg
bswap
or
sub
mov
adc
add
add
pusha
inc
or
add
sub
pusha
add
ret
test
dec
mov
mov
and
ret
std
xor
es
add
jbe
add
call
xchg
jo
xchg
sbb
pop
or
add
adc
or
and
and
inc
test
push
fcmovnu
inc
or
mov
add
add
shrl
adc
test
add
mov
or
sub
mov
add
add
ljmp
insb
dec
int
pop
adc
and
inc
mov
adc
or
push
jns
pop
push
mov
add
inc
iret
push
loopne
movsb
sbb
add
adc
add
into
pop
andb
push
rol
subl
xchg
jbe
nop
sbb
mov
xchg
xor
in
cmpb
rolb
movb
or
add
or
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
