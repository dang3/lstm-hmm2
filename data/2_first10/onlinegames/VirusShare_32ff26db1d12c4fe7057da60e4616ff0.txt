out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
xor
jmp
xor
cmp
inc
bound
push
jb
jbe
insb
gs
jae
fstpl
gs
xor
pop
or
adc
pop
sar
pushw
gs
outsl
imul
fs
adc
adc
punpckhbw
data16
std
push
and
imul
insl
fs
imul
aaa
stos
xor
cmp
mov
movsb
or
add
adc
push
test
mov
push
dec
inc
dec
repnz
fs
insb
insb
inc
push
push
dec
inc
dec
and
nop
pusha
sbb
loop
inc
dec
push
inc
sbb
inc
xor
adc
add
add
dec
pop
nop
inc
and
mov
add
add
pop
mov
int
mov
call
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
std
push
jne
and
inc
dec
push
and
fs
push
mov
clc
push
adc
add
add
testb
push
lcall
test
push
xchg
add
stc
fs
add
mov
dec
push
imul
and
cs
add
popf
aam
dec
loopne
and
out
in
or
push
or
add
add
cmc
add
add
mov
daa
add
xor
and
xor
ss
pop
push
pusha
add
aas
dec
mov
mov
pop
and
add
bound
cmpl
mov
cs
je
lods
jne
jbe
cld
fs
loopne
inc
push
push
pop
repz
in
in
adc
cld
jp
shrb
jae
xor
imul
sti
mov
gs
outsl
arpl
sti
nop
dec
push
or
lcall
sub
jle
outsb
pop
dec
xor
xor
and
mov
icebp
decl
jb
mov
sarl
dec
shll
adc
and
push
data16
shll
xchg
dec
ror
fsubrp
push
cmp
dec
shll
inc
push
fs
shll
adcb
rol
shl
out
or
aas
dec
shll
jo
je
shll
pushf
inc
addr16
sub
dec
rcll
add
rol
pop
shll
orb
push
stos
lcall
add
dec
imul
cld
shll
sbb
sub
shll
pop
data16
shll
addb
xchg
aam
pop
pop
cmpsb
enter
and
jmp
hlt
cmpl
addb
arpl
jg
dec
outsb
je
jb
gs
inc
insb
jle
mov
dec
jne
sbb
push
gs
fs
enter
sub
dec
jo
outsb
push
jb
inc
adc
cld
xchg
inc
daa
dec
dec
dec
dec
inc
push
and
jl
and
push
data16
fildl
mov
inc
push
push
inc
push
inc
pop
dec
insb
jb
outsl
jmp
je
push
imul
pop
inc
jne
shll
push
pop
jae
outsl
outsb
sbb
sbb
fs
fs
int
add
in
and
mov
or
inc
add
add
xchg
add
aaa
sbb
pusha
lret
cmpsb
add
add
jnp
test
pop
add
and
add
es
and
add
inc
fmul
push
sbb
mov
inc
fldenv
add
add
popa
fsubs
test
add
mov
mov
and
ja
inc
pusha
stos
test
mov
aas
add
pop
sbb
push
popa
rorl
in
add
fldcw
adc
sbb
mov
inc
inc
xchg
adc
pop
mov
lods
mov
inc
fldt
dec
and
fs
fwait
les
sub
sub
das
jae
and
out
push
addr16
and
repnz
bt
mov
jmp
sti
outsl
movw
call
mov
call
std
inc
xor
arpl
push
add
push
push
test
mov
jb
sbb
xchg
in
add
sbb
xor
sub
test
mov
pop
push
dec
push
push
dec
dec
jmp
call
jno
gs
dec
test
xor
outsl
je
ja
jns
rcll
xor
xor
imul
jl
or
flds
aas
mov
daa
cs
insl
loope
and
jne
inc
test
xor
lcall
push
jg
xor
xorl
gs
popa
insl
pushl
inc
add
ja
jb
inc
popa
jb
cmovbe
add
call
add
incl
pusha
jmp
fwait
roll
out
inc
outsl
insb
mov
insl
popa
pop
data16
adc
mov
jnp
jae
pop
jo
je
into
mov
cmp
sub
insb
add
xor
pop
pop
add
imul
addr16
pop
push
cmp
in
and
push
punpcklwd
lahf
dec
dec
add
fwait
sbb
mov
mov
movsb
in
dec
cs
pop
jmp
pop
in
outsb
call
push
push
push
adc
push
adc
in
adc
push
mov
andl
lea
outsl
jmp
push
push
mov
push
mov
push
mov
rorl
mov
adc
hlt
xor
push
push
push
call
jl
inc
mov
lea
mov
sub
mov
imul
divb
sub
sub
inc
add
sti
push
push
int
lea
xor
les
imul
sti
outsl
fistps
dec
cld
ljmp
in
or
mov
fnstenv
or
shrb
mov
call
or
add
push
jle
mov
in
adc
adc
push
call
xor
sbb
push
mov
mov
movzbl
rorl
cs
pop
fstpt
adc
mov
andb
mov
or
push
mov
aaa
fstpt
test
pop
cmp
pop
jl
push
aaa
xor
add
nop
dec
and
xor
pop
add
inc
pop
add
and
xchg
add
adc
add
add
aaa
jmp
push
sub
add
push
cwtl
jge
rclb
push
push
pop
addl
je
inc
add
cwtl
sub
ss
test
xchg
push
test
fldl
pop
push
and
test
jne
ret
cmpw
jne
dec
cmp
lret
mov
jne
mov
stos
into
sbb
and
mov
adc
adc
pushf
sbb
nop
dec
subl
outsb
mov
push
xor
or
xor
mov
fldt
jg
cmp
je
mov
cmp
je
or
divl
adc
insl
mov
jne
ja
jge
add
or
jae
cmc
neg
outsl
mov
mov
cmp
ljmp
jb
sub
std
fcmovnb
sbb
add
je
decl
decl
decl
lea
or
xor
jmp
xchg
xor
ss
cwtl
jmp
or
push
add
mov
mov
mov
call
mov
cmp
jg
add
jge
push
in
jecxz
sub
sbb
stc
adc
push
push
push
and
push
mov
dec
ret
lahf
sar
mov
sbb
call
push
add
xchg
jne
adc
js
lods
imul
dec
or
xchg
sub
in
pop
or
movsw
mov
jnp
xor
movsl
movsb
mov
jo
mov
pop
sbb
inc
fists
dec
dec
mov
or
orl
pop
in
incl
testl
mov
xor
add
cmp
lcall
not
jle
push
mov
add
not
xor
xor
inc
cmp
or
sbb
jmp
push
fs
xchg
imul
ja
inc
inc
push
ret
adc
adc
rcll
and
mov
div
rorb
mov
push
push
jae
push
and
xchg
mov
push
sub
outsl
mov
jb
pop
pop
pop
push
or
push
adc
inc
and
rolb
lea
pop
lods
mov
lea
and
pop
nop
pop
and
sldt
pusha
nop
nop
nop
dec
leave
and
pop
nop
and
scas
mov
loopne
lea
nop
and
push
nop
and
push
nop
and
cld
inc
and
xchg
and
fs
and
sbb
adcb
sub
push
leave
and
add
nop
cld
mov
lea
popa
xor
insb
cmp
shll
test
dec
mov
jo
push
mov
in
in
fs
jne
pop
jmp
adc
pop
cs
add
push
jo
movsl
or
adc
ja
add
in
cmp
and
adcb
jnp
cmp
lock
mov
lock
adcb
xchg
jecxz
push
cmp
ds
pop
pop
mov
push
arpl
addb
add
xor
clc
popf
push
adc
mov
rdmsr
adc
lret
repz
sahf
push
jae
int
insb
push
cmc
data16
popf
insb
int
pop
clc
outsl
and
cli
shrb
fs
insb
jnp
fmul
std
lret
enter
xor
mov
xor
jnp
ja
cli
loope
xchg
sbb
int3
sti
push
pop
adc
mov
xlat
and
dec
add
daa
push
mov
push
bound
mov
xchg
andl
jecxz
push
adc
pop
ja
jne
mov
ja
rorb
testb
add
xlat
jmp
or
dec
add
add
mov
shlb
add
pop
push
push
add
dec
fmuls
mov
cmpb
movsb
and
not
subl
push
jmp
adc
add
xor
clc
insl
mov
or
xchg
jns
pop
jmp
sub
pop
inc
idiv
adc
jg
mov
inc
inc
jmp
andb
mov
jmp
xor
repz
leave
pop
repnz
and
test
xor
je
push
sub
and
mov
inc
jle
rclb
adc
fucomp
call
pop
repnz
leave
cmp
incl
es
or
push
clc
pop
outsb
stos
and
add
adc
pop
dec
jbe
cmpb
aaa
movb
inc
cmp
jb
mov
mov
rorb
subl
andl
or
sti
shrl
ja
xor
and
or
imul
adc
out
outsb
add
push
add
arpl
sub
aaa
inc
cmp
jecxz
push
add
shr
lea
loopne
cmp
jae
incl
lret
mov
jmp
imul
push
mov
fisubs
or
pop
or
inc
mov
mov
jne
test
sbb
dec
mov
out
fistpll
pop
icebp
rorb
rolb
or
rcll
adc
mov
roll
fdivrl
pop
xor
jmp
xor
js
mov
mov
bound
push
xchg
pop
fidivrl
or
cmp
xlat
and
push
fneni(8087
fcmovnu
jl
and
or
add
lea
sar
mov
sbb
out
or
mov
add
divb
cli
not
and
testl
mov
outsl
out
sub
adc
out
push
js
add
push
aam
in
test
or
fisubs
fimull
add
out
das
call
lea
shr
shl
push
pop
inc
ja
in
sub
mov
and
not
cmp
add
mov
mov
mov
shr
or
mov
dec
daa
pop
jg
push
mov
sbb
mov
push
lods
loop
jg
sti
cli
mov
push
push
hlt
mov
not
and
sub
in
sub
adc
movb
lret
fidivl
add
loope
sbb
popa
xlat
or
mov
xchg
adc
sbb
inc
xor
jo
add
pop
fcomp
push
or
xor
add
mov
sbb
add
out
jns
sub
xor
add
sbb
int
jbe
les
repz
fcomp
cwtl
subb
xchg
xchg
mov
addl
repz
not
fdivp
or
xor
pusha
adc
pop
scas
testl
sti
mov
pop
les
mov
lock
sub
add
idiv
loop
jge
pop
add
sub
in
sbb
add
int
fdivrs
pop
mov
rcrl
les
adc
enter
or
xor
repz
push
or
or
xchg
jno
std
mulb
mov
add
and
mov
fidivrs
pop
jle
mov
mov
cmpsb
pop
mov
mov
mov
aaa
and
neg
mov
xchg
or
and
or
popa
adc
fsin
mov
add
or
mov
ret
out
push
and
aad
aam
pop
bound
mov
out
sbb
shl
add
test
jecxz
and
jg
jge
dec
cmp
inc
shlb
in
or
fadds
hlt
push
and
outsb
mov
fdiv
push
pop
pop
es
inc
xor
adc
repnz
shl
xorb
out
and
or
pop
imul
call
insl
fcomi
imull
mov
jl
pop
adc
call
xlat
lods
mov
fdivs
push
adc
add
das
jbe
rorb
insl
sbb
in
pop
and
icebp
aam
push
clc
cmp
mov
lret
outsl
fnstcw
enter
jg
or
shrb
scas
add
lcall
int
and
sbb
loopne
ret
jle
mov
inc
enter
aaa
or
xchg
scas
jne
mov
push
fbstp
cltd
sbb
xchg
dec
pop
mov
cmp
gs
fldcw
xor
fsubrp
mov
adc
inc
loop
shr
inc
call
xlat
fdivs
outsl
add
sbb
add
mov
sbb
pop
enter
daa
xchg
out
scas
sub
aad
flds
outsl
adc
out
movl
sahf
ja
mov
cmp
or
int
in
xor
xor
test
lods
xor
add
test
sahf
pop
jb
xor
mov
xor
sahf
mov
pop
js
sub
mov
popf
insl
adc
inc
sti
into
fwait
fbstp
or
in
sbb
fcomip
xor
ss
fdivrl
add
pop
test
adc
cltd
jb
pushf
mov
sub
fmuls
stc
ss
out
jno
cli
loopne
iret
mov
xchg
rcrb
mov
imul
xlat
mov
lret
jo
jle
sub
imull
outsb
lods
jns
xor
imul
lret
add
dec
fimuls
ret
fidivl
cmc
test
xchg
cs
fwait
outsb
jae
adc
fidivs
test
push
or
cmp
insb
lods
popf
sub
rcll
sbb
outsb
stc
or
fstps
fists
mov
in
jle
ja
sbb
xlat
sub
ss
in
clc
jl
inc
fxch
mov
fistps
mov
aam
gs
lods
les
imul
ljmp
or
jge
stos
mov
stos
inc
xlat
or
rcrb
sbb
push
or
in
sbb
das
or
int3
or
inc
push
mov
jle
mov
jns
and
sbb
jb
hlt
cmp
sub
fistps
mov
ret
pop
pop
rorl
rcrl
gs
lock
int3
or
push
or
inc
jae
fbstp
jno
int
iret
das
dec
jge,pt
out
call
unpckhps
push
mov
in
rcrl
test
xor
xchg
cs
jg
out
jl
call
outsl
jecxz
jp
jo
mov
xor
insl
jle
dec
fistpl
loopne
sub
jecxz
jp
incl
fsubs
add
out
fdivl
mov
mov
jle
test
int3
ja
mov
shlb
loopne
mov
faddl
mov
mov
ret
repz
rcrb
pop
pop
cld
xchg
roll
dec
mov
pop
outsb
dec
jg
jge
xlat
pop
add
pop
movsb
mov
mov
push
mov
xor
pop
cli
xchg
sub
mov
mov
je
push
pusha
mov
cld
sub
rcrl
jge
cmp
jl
js
sub
push
push
push
in
adc
inc
or
push
cmp
cmp
xor
inc
outsb
dec
xlat
adc
sbb
pop
fisubrl
jle
fistl
fstpt
inc
pop
inc
addr16
iret
sti
push
clc
inc
jb
adc
or
mov
pop
sbb
cmp
sub
add
jne
pop
mov
sbb
cmpsl
pop
fidivs
cmc
push
cmp
mov
jmp
cmp
je
in
jg
je
adc
mov
cmp
je
movsbl
add
idiv
fldt
sti
jne
inc
cmp
jne
cmp
push
add
pop
sub
add
xor
or
add
pop
inc
ljmp
div
inc
scas
inc
jl
add
jg
adc
sub
cmp
shll
add
je
decb
mov
pop
rclb
mov
andb
flds
cmp
jnp
jle
aaa
mov
adc
lea
inc
js
mov
sarl
ljmp
jmp
and
rep
or
or
dec
fidivl
insl
sub
jne
push
lea
adc
add
je
pop
cmp
add
stos
nop
mov
mov
add
mov
aaa
dec
mov
decl
jno
and
in
add
daa
mov
mov
mov
outsl
inc
sub
or
lods
xchg
xor
out
shr
xchg
or
out
daa
inc
shrb
sub
lock
arpl
rclb
push
sbb
jne
pop
mov
sub
adc
sbb
les
dec
jmp
and
les
fdivl
addb
or
mov
inc
push
cmp
arpl
sbb
add
mov
out
jns
or
xchg
xlat
and
and
adc
lock
push
sub
adc
enter
fcomps
add
out
xchg
fcmovu
mov
mov
xchg
pop
pop
clc
std
call
add
sub
cwtl
add
addr16
pavgb
xor
inc
es
pop
mov
xchg
cmc
sub
push
mov
ficoms
mov
in
mov
or
inc
lods
aas
add
lret
scas
cmp
adc
xor
mov
mov
mov
jae
imul
xor
mov
rol
lcall
xchg
dec
mov
addr16
lret
int3
lcall
into
iret
rcl
jmp
rcll
aam
aad
scas
imul
shll
fstp
sbb
loopne
jecxz
in
pop
out
dec
shll
call
jmp
lcall
out
out
lock
mov
push
hlt
sbb
pop
outsb
fwait
divb
clc
inc
add
inc
cli
cmp
or
mov
xchg
mov
cmp
add
mov
adc
cld
jae
xor
shl
lods
imul
sub
sbb
inc
in
dec
sti
and
sub
fcoms
imul
inc
popl
sbb
mov
enter
sub
cmpsb
sub
loopne
cli
xchg
ret
add
and
inc
sbb
adc
xlat
les
lods
cmpl
pusha
lea
jmp
mov
cmp
and
shld
or
or
stos
dec
mov
and
inc
xchg
call
mov
push
push
dec
call
sub
mov
nop
lock
add
and
add
adc
push
stos
cmp
call
shrb
cmpsl
add
pop
sbb
lods
push
dec
cld
inc
ljmp
and
xchg
cmp
jbe
lock
mov
das
test
push
lods
mov
cltd
idiv
lret
daa
cld
lret
mov
idivl
xchg
out
cmpsb
fildl
push
cld
call
mov
in
xchg
add
inc
cmp
scas
aas
dec
out
pushw
scas
lea
cmp
lahf
xchg
movl
mov
aad
xor
mov
fcmovbe
loop
mov
push
add
mov
jmp
add
adc
mov
xor
add
sbb
push
fimull
daa
lock
dec
test
mov
cmpb
jne
outsb
rol
pop
dec
jne
repnz
jmp
mov
clc
lods
out
mov
aam
push
outsl
pop
and
xchg
lahf
mov
setns
pushf
or
in
faddp
xlat
nop
mov
iret
dec
mov
mov
add
add
frstor
or
lahf
adc
stc
mov
cmpsl
jg
rorb
pop
outsl
inc
push
icebp
jge
add
sbb
or
pop
js
or
stc
mov
clc
ret
sarb
mov
xchg
xor
push
push
mov
cmp
pop
jo
or
mov
fisubl
pushf
call
into
cmp
pusha
or
sub
pop
idivl
pop
lret
mov
sub
push
jno
addr16
mov
xor
pushf
mov
mov
cmc
into
outsb
pop
bound
jmp
shll
pop
call
push
mov
stos
push
out
sti
xchg
push
pusha
adc
mov
cltd
popf
rcr
mov
call
pop
push
and
jb
test
std
pop
push
push
sub
jnp
in
jmp
stos
sbb
inc
fidivs
push
popf
adc
cwtl
mov
mov
repz
fiadds
or
cmpsl
dec
adc
jle
aam
neg
pushf
test
or
pop
xor
push
inc
cli
pop
data16
outsb
in
cmpsl
repnz
out
fimull
scas
add
sti
add
inc
mov
or
sub
mov
test
or
hlt
adc
xor
inc
out
aas
std
pop
adc
jns
pop
cmpsl
dec
stc
clc
mov
aas
ret
cmc
cli
adc
in
pop
sbb
jp
test
mov
xchg
inc
mov
or
loop
jmp
inc
pop
push
push
sub
sbb
jmp
cli
sub
fildll
mov
inc
stc
pop
psubsb
repz
xchg
shlb
pushf
call
sahf
inc
stc
std
sti
clc
std
add
sub
sti
negl
mov
call
pop
mov
push
jp,pn
cwtl
sarb
cmp
and
ret
jg
mov
cmp
fs
xor
push
rolb
nop
and
testb
js
clc
mov
xchg
and
jg
or
cmp
or
sahf
clc
inc
sti
add
mov
into
andnps
jl
jmp
adc
inc
ds
nop
add
es
dec
out
pop
jmp
and
fsubs
sbb
mul
jle
push
inc
fidivrs
inc
add
or
out
fnstcw
xchg
cmp
jne
or
or
inc
and
ret
enter
pop
sbb
andl
push
sub
test
push
sub
and
xor
lock
jae
push
or
cld
push
push
mov
or
mov
mulb
call
sbb
and
mov
mov
push
jmp
adc
mov
inc
fistps
push
mov
xor
pop
mov
push
sti
ficomps
stos
sbb
xchg
jecxz
mov
cmp
sti
inc
xchg
hlt
hlt
call
hlt
push
lcall
push
inc
sbb
aas
inc
clc
outsb
sbb
inc
es
clc
push
mov
push
push
fcomip
xchg
clc
loop
cwtl
mov
and
push
sbb
xchg
pusha
inc
xor
mov
aam
js
les
dec
jmp
push
daa
cs
add
mov
fcomps
and
movsb
mov
orb
push
cltd
mov
add
jge
mov
sbb
jl
adc
adc
js
or
sbb
push
jmp
sub
or
dec
jne
mov
add
xchg
in
cltd
xchg
adc
std
fs
xor
stos
lahf
insb
fwait
pushf
icebp
mov
adc
jp
pushf
sbb
lahf
xchg
dec
jle
std
xchg
loop
sbb
cmp
push
push
inc
outsb
jge
push
or
or
ret
push
call
dec
or
inc
andb
icebp
ljmp
mov
mov
stos
aam
fwait
mov
fdecstp
test
add
or
outsb
cmp
mov
xor
sti
mov
out
add
test
cmp
pushl
push
push
sub
test
repnz
inc
sti
sbb
pushf
xor
daa
push
fmul
push
lock
int
out
mov
or
xor
xor
movsl
test
pop
cs
pop
stc
movsw
pop
mov
sti
pop
sbb
inc
fwait
std
pop
push
and
and
adc
lods
hlt
xor
fsts
jo
mov
jo
or
fists
ret
negb
adc
lods
aaa
xchg
adc
mov
gs
mov
add
call
xor
pavgb
xor
xor
outsl
outsb
insl
addr16
repz
xor
xor
or
shrb
gs
js
xchg
pop
out
pushl
lcall
push
leave
push
loopne,pn
rclb
sub
mov
pop
xor
mov
adc
je
add
fs
and
jmp
push
fistpl
xor
clc
mov
push
insb
rsm
pop
pop
ret
stc
inc
addb
stc
adc
das
sub
and
or
repz
and
push
je
rcrl
sub
fdivrl
xor
jo
mov
testl
inc
movsb
pop
push
add
pop
jbe
dec
sub
test
nop
push
inc
sbb
jb
cmp
je
pop
test
push
push
pop
pop
hlt
outsl
push
jae
xchg
insl
xchg
call
pusha
addr16
push
dec
fdivrs
fidivs
dec
jo
fsubs
cmp
faddl
and
push
mov
pop
andb
or
dec
push
add
sti
mov
pop
push
je
add
fimull
mov
out
mov
nop
pop
inc
xchg
add
imul
bsr
shrb
jno
cs
lods
cmp
and
les
sar
movl
sub
int3
rcl
les
in
call
mov
pop
add
or
add
adc
inc
sbb
adc
fistl
stc
lea
loopne
fadds
imul
or
clc
call
push
in
add
push
pop
adc
push
adc
push
enter
fs
sahf
mov
dec
inc
bound
and
pop
les
lahf
and
inc
lock
adc
loop
xor
call
add
mov
mov
mul
jle
push
or
cmp
and
mov
xor
add
pop
dec
xlat
inc
and
xor
jg
dec
lock
frstor
lret
ss
push
ret
out
je
add
jecxz
push
mov
or
or
arpl
jl
xor
sub
icebp
cmpsb
or
fistl
push
dec
dec
rol
mov
dec
pushf
dec
inc
push
xor
xor
fs
insb
adc
int
call
sbb
jo
xor
jb
in
jne
out
jae
lock
int
push
shl
repz
movsl
pop
outsb
fwait
push
lcall
push
jb
mov
or
sub
pop
xlat
cmpsb
pop
cmpsl
push
gs
xlat
stos
push
lods
lods
mov
gs
xchg
gs
jo
jo
gs
xchg
outsb
push
gs
xchg
insl
aaa
pop
gs
roll
aam
insb
fwait
cmpsb
imul
pop
rorl
xchg
gs
dec
mov
inc
pushf
js
xchg
xchg
xchg
lret
insl
shll
cwtl
js
sub
inc
xor
decl
je
cmpsb
fwait
pushf
inc
push
fnstsw
cmp
imul
in
out
imul
fdivs
mov
jb
mov
or
scas
imul
arpl
inc
shrl
mov
enter
mov
or
mov
enter
fsubr
mov
lock
lret
sbb
clc
jne
jo
add
mov
adc
inc
sbb
xor
adc
pop
cs
xchg
cmp
xor
sub
pop
icebp
int3
addr16
insl
mov
mov
lods
add
dec
jbe
mov
sub
das
mov
sahf
in
je
push
adc
pop
out
xor
adc
imul
push
cmp
add
inc
adc
push
test
testb
cmp
movsb
or
repz
adc
mov
mov
inc
loopne
aam
mov
jo
call
fmuls
sub
or
add
and
mov
jne
pop
sub
xor
test
mov
xchg
test
mov
mul
cmp
xchg
jge
or
push
aas
sub
add
jo
cmp
incb
shrb
or
push
inc
lock
jb
mov
xlat
lds
scas
jne
call
or
adc
cld
jp
test
xlat
test
pop
mov
push
int
mov
and
data16
jbe
sub
and
mov
jnp
cmp
adc
pop
jae
je
subl
xor
jecxz
sbb
mov
push
rorl
sub
push
sub
add
clc
mov
cmp
jmp
ror
fisubs
arpl
inc
pop
pop
stos
scas
cmp
push
fldcw
popf
pop
inc
jg
mov
aas
outsb
lods
mov
xor
stos
or
or
popa
loope
je
adc
push
and
and
mov
or
sub
mov
sub
lret
pop
ret
shlb
jne
pcmpeqb
sbb
in
mov
add
jl
xor
in
push
jle
adc
adc
xchg
sbb
push
push
mov
sarb
and
sbb
out
aas
adc
cmp
out
adc
scas
sbb
in
jle
sbb
lods
in
andb
xor
loopne
imulb
mov
push
mov
pop
xchg
in
imul
xchg
je
je
outsl
inc
pop
xchg
arpl
jne
push
cwtl
enter
jae
cmp
jg
jmp
adc
sub
sub
dec
pop
jne
scas
push
bound
sub
pop
and
xor
mov
adc
adc
es
cmpsb
cmpb
inc
ror
andb
push
js
cltd
jp
int3
movsb
sbb
push
push
or
pop
cld
pop
clc
push
mov
test
pop
push
dec
add
dec
cs
pop
lahf
shll
dec
jno
dec
shrb
loope
imul
faddl
pop
inc
mov
mov
std
or
pop
push
push
adc
les
push
aad
jmp
push
mov
mov
and
mov
rorl
aaa
push
push
cwtl
add
jb
daa
repnz
or
int3
xlat
sub
lea
imul
mov
pop
test
mov
stos
sbb
dec
xchg
call
test
dec
cs
add
movsl
popa
imul
sbb
sub
mov
scas
gs
jne
jb
mov
mov
mov
and
mov
mov
mov
aam
mov
popa
leave
mov
lret
arpl
outsb
lret
mov
lret
gs
gs
sub
mov
imul
jmp
aad
imul
fldt
insb
xchg
int
fsubl
fidivs
loopne
imul
imul
dec
aaa
mov
arpl
insb
je
ret
outsb
imul
outsb
cmp
xor
jb
jp
outsb
xor
xor
cmp
jo
je
add
fdiv
and
mov
sbb
aam
adc
or
mov
push
adc
mov
or
mov
shrb
jp
add
sub
cld
pop
push
add
lcall
fdivrl
inc
sahf
dec
fstp
test
push
jl
pop
jmp
and
sub
cmpsb
mov
fdivr
mov
add
inc
je
jb
shll
sti
cld
inc
adc
popa
negb
cmp
popf
xchg
xchg
int
mov
cld
push
or
fdivr
xchg
leave
insb
ret
jbe
stos
add
sub
in
xchg
xchg
faddl
fmul
sbb
sbb
or
xchg
inc
or
leave
fcoml
dec
cld
push
cltd
je
mov
je
or
fbstp
add
mov
adc
into
sbbl
lods
adc
xchg
cmp
jmp
fs
sub
mov
jle
mov
add
daa
mov
mov
cld
jbe
pusha
or
call
popa
dec
adcl
or
add
jmp
pop
or
addr16
jmp
adc
add
orb
cmp
hlt
xchg
cwtl
aad
push
mov
pusha
mov
les
inc
inc
push
add
jg
xchg
gs
inc
cld
in
inc
shrl
je
dec
shll
jo
xor
shll
jns
jb
xorb
shr
arpl
mov
rcll
pop
mov
and
sbb
dec
push
adc
test
or
fcompl
insl
adc
xor
adc
mov
mov
adc
bound
ljmp
jge
call
aam
push
add
add
dec
loope
sahf
xchg
adc
adc
mov
rolb
loope
add
xlat
xor
dec
mov
jge
mov
jmp
ret
jl
lods
pop
push
sbb
sub
sbbb
adc
imul
jne
pop
add
jns
sbb
jle
and
nop
add
sub
mov
jnp
sbb
test
cmp
clc
movsl
stc
sbb
inc
sub
cmc
or
push
mov
jg
and
xor
sbb
cmp
push
inc
test
fucomp
mov
xchg
popl
xchg
popa
mov
cmc
or
adc
push
out
imul
mov
mov
lret
and
in
jge
xor
push
fsubs
xor
sbb
mov
incl
jg
scas
es
add
rclb
nop
ret
in
loope
jnp
jmp
dec
jnp
xor
xchg
dec
xor
cmp
cmp
jmp
adc
outsb
sbb
pop
dec
jbe
xor
mov
push
std
addl
push
call
cs
incl
ljmp
daa
mov
imul
pushl
lea
push
shl
add
mov
lea
into
cld
and
movsb
sbb
push
mov
dec
and
loope
das
sbb
insb
mov
mov
xor
and
sbb
and
rcrb
xchg
cmp
mov
push
dec
and
mov
int3
out
gs
aad
aad
cmc
cmp
pop
into
cmp
push
gs
cli
sbb
stos
jecxz
mov
push
push
clc
fdivr
add
int3
cld
andb
daa
fldt
ljmp
and
add
mov
and
out
nop
and
xchg
clc
pushl
ret
push
cmp
fs
pop
add
jmp
jb
dec
xor
loope
scas
fs
push
jnp
out
insl
imul
sbb
rcrb
mov
or
push
push
mov
lahf
sti
push
adc
pop
fstpl
and
pop
call
into
sbb
sub
jg
std
mov
jbe
das
pop
divb
int
sbb
mov
stos
clc
and
or
lods
or
scas
add
test
fadds
cmp
call
mov
cmp
push
add
xor
cmp
sub
sbb
and
js
insl
out
inc
xchg
inc
sbb
lods
insl
add
jb
cmp
jbe
outsl
mov
fdiv
sbb
cmp
or
and
jmp
mov
sub
fcomps
push
pop
mov
mov
lock
pop
xchg
mov
sbb
aam
jecxz
sub
pop
cmpl
push
mov
cld
fcomip
stc
mov
cmp
or
cli
jmp
cmp
fstl
pop
and
dec
les
in
or
mov
mov
cmpsb
pop
pushl
addr16
or
jmp
jge
sub
bswap
push
push
enter
inc
movl
loop
sbb
mov
push
jne
fimull
cmp
jb
pop
aam
add
loop
cmp
js
lcall
jecxz
push
pop
xchg
subl
xor
lret
in
xor
add
fs
pop
insb
clc
jb
stc
gs
arpl
jbe
lcall
pop
push
outsb
push
outsl
insl
jne
in
mov
insb
cmp
clc
call
jo
sbb
pop
cmp
inc
jp
aad
or
add
push
inc
sarb
push
inc
mov
cmp
mov
mov
dec
pop
xor
enter
cltd
adc
sbb
pusha
cmpb
cltd
fbld
shlb
inc
sbbl
lock
sti
ljmp
sub
xor
mov
loope
add
add
sbb
hlt
adcl
inc
nop
xchg
xor
nop
dec
and
fsubl
inc
push
xor
pop
iret
xchg
pop
js
jne
push
push
push
cwtl
mov
push
rcrb
add
and
and
push
push
iret
fmull
mov
hlt
ds
addr16
movsl
movsb
sar
out
loope
ret
jae
dec
pop
and
movsl
js
push
fistpl
mov
std
adcl
mov
push
add
sbb
fs
aad
inc
ret
push
stos
fcmovu
pop
jmp
fsubrs
out
stos
jg
pop
clc
notl
push
sbb
cmc
push
push
pop
mov
andb
int3
add
xchg
hlt
sub
mov
clc
test
jmp
sbb
xor
rcl
pop
dec
jo
insb
shll
imul
fs
insb
or
mov
lret
gs
fs
xor
push
lret
je
lret
dec
daa
pop
dec
shrl
outsl
sub
inc
jmp
ljmp
icebp
sarb
add
enter
xchg
xchg
xchg
hlt
push
pop
xor
pop
mov
push
pandn
push
dec
fs
inc
xchg
inc
xchg
sbb
or
ds
push
push
push
adc
mov
out
cmp
xor
outsb
in
cmc
inc
cmp
add
stos
inc
pushf
pop
cwtl
pop
or
test
test
in
fstl
fcompl
mov
lret
in
push
mov
clc
add
hlt
add
repz
mov
imul
push
cmp
int3
pop
int3
dec
cmp
fnstcw
pop
ss
xor
lock
sbb
int3
fs
gs
mov
xchg
xchg
dec
cmp
mov
or
lea
xlat
lea
or
inc
mov
sub
add
xlat
jne
sub
and
add
cwtl
nop
add
loope
add
enter
andb
cmpsb
push
mov
ror
outsl
data16
pushf
sub
je
ja
jge
gs
mov
dec
fisubrl
arpl
outsl
jae
data16
andb
outsb
gs
xchg
gs
ja
pop
push
imul
cmp
scas
push
outsl
popa
insl
pop
xchg
gs
pop
dec
push
dec
inc
inc
pop
xchg
gs
arpl
in
cmp
inc
pop
sbb
inc
mov
test
data16
ret
push
int3
add
cwtl
xchg
or
inc
iret
int3
inc
and
jmp
and
or
ss
dec
lds
pop
out
ds
xor
cltd
mov
lea
xchg
mov
dec
add
dec
jb
iret
adc
and
adc
in
or
jne
xor
aaa
mov
pop
mov
les
dec
mov
add
adc
and
dec
fiadds
lcall
add
stos
sarb
adc
or
pop
rolb
add
pop
push
outsb
and
imul
pop
ljmp
pop
push
les
movb
mov
nop
loopne
ds
mov
std
mov
jno
loope
xchg
dec
fcmovnbe
enter
mov
enter
jne
and
add
add
ljmp
es
in
out
out
lds
addl
ds
lock
rcrb
sarb
xor
je
outsl
aam
stc
pop
and
sbb
stc
xlat
stc
fdivr
fnstcw
push
stos
fucom
pop
mov
vunpcklps
inc
dec
repnz
clc
leave
clc
fdivr
and
cmp
aam
aad
push
cmpb
sti
fsincos
fmul
ret
cmp
and
idivb
jo
rorl
adc
outsb
fistps
sti
dec
neg
sbb
add
dec
mov
aaa
movb
stos
xor
stos
jne
outsb
daa
dec
ja
and
mov
mov
je
insb
mov
mov
sub
fxch
mov
push
mov
jb
pushf
sub
shlb
ja
mov
mov
rorb
insl
lahf
fxch
rcrb
mov
leave
mov
popf
sub
nop
das
imul
popf
popf
or
xchg
dec
xchg
lea
test
leave
rcrb
xchg
push
jo
pushf
pushf
pushf
pushf
mov
add
in
pusha
pop
ja
adc
clc
and
cmpl
cli
bnd
enter
sti
jmp
pop
test
and
pop
or
in
in
andb
push
fs
iret
test
push
in
mov
pop
stc
bound
fstps
stc
push
inc
or
inc
cmp
inc
xor
stc
or
add
pusha
test
mov
jge
or
push
lods
xlat
or
add
out
xchg
and
or
cmp
adc
push
push
or
sub
inc
shlb
nop
aam
push
imul
cmpsb
das
jns
jns
lcall
xor
cmp
cmpsb
imul
cmpsb
imul
inc
lcall
imul
xchg
jae,pn
call
push
add
bound
jns
leave
sub
pop
jmp
test
jbe,pt
fwait
pop
enter
jl
icebp
ja
sbb
shll
das
das
xor
shll
insb
jb
shll
jne
dec
shll
insl
cmp
dec
shll
xor
xor
int
sti
cld
rol
add
es
jne
pop
inc
cmpsb
and
dec
push
jno
adc
xor
push
xchg
lret
je
les
call
push
xchg
or
sub
mov
mov
pop
out
fildll
std
mov
jle
xor
in
xlat
scas
mov
cmpb
lcall
xchg
push
mov
cmpsb
imul
gs
mov
adc
sub
jne
cmp
push
bound
lea
mov
scas
cmp
pop
push
push
dec
dec
push
push
js
dec
shrl
dec
sub
pop
cld
inc
xchg
mov
fnsave
dec
and
mov
shl
repnz
push
pushf
lcallw
jbe
mov
pushf
stc
add
hlt
push
xlat
dec
xlat
xor
mov
xchg
divb
call
or
pop
test
pop
push
push
jne
xchg
scas
jl
notl
mov
andb
pushf
xor
out
movsl
lock
cwtl
subl
push
sub
les
test
idivb
mov
add
push
mov
int
imul
push
mov
dec
xorb
loopne
xchg
sbb
mov
insb
mov
js
test
sub
dec
popf
sbb
lds
push
add
jp
ljmp
test
pusha
adc
in
aam
fstps
push
xchg
mov
dec
or
adc
fmull
notl
cwtl
lds
mov
mov
adc
jns
aaa
inc
push
aaa
leave
lcall
pop
testl
lret
repnz
pushl
fbstp
pop
incb
jecxz
cmc
jbe
movl
les
jnp
dec
ret
sbb
lret
mov
outsl
mov
call
ret
mov
iret
and
inc
mov
mov
xchg
rcrl
mov
mov
push
aam
adc
cmp
ss
adc
or
mov
cmp
cmp
mov
xchg
cmpl
push
add
subl
inc
cmp
jl
outsl
add
cmp
xchg
jb
inc
in
js
add
jo
add
cmpl
add
jb
dec
or
imul
push
dec
jge
mov
or
or
rorb
add
mov
adc
mov
add
push
inc
dec
sbb
mov
add
test
add
addr16
dec
or
roll
loop
mov
add
add
jmp
mov
mov
adc
jne
xchg
mov
adc
lods
fs
dec
jno
add
dec
ja
cmp
mov
pop
andl
fistpll
jno
shr
jle
movzwl
mov
jne
daa
add
cld
pop
adc
je
cmp
jne
pop
jp
add
add
paddusb
scas
jno
jne
adc
lock
jne
or
push
jnp
push
sub
mov
mov
ss
lcall
int3
outsb
adc
mov
shrl
cltd
inc
inc
cmp
jl
add
pop
sbb
push
push
loop
mov
xchg
push
add
sbb
pushl
jno
push
dec
test
push
dec
adc
sub
mov
adc
iret
sbb
test
mov
mov
iret
lods
push
sub
push
scas
clc
mov
and
cltd
jbe
cmp
cmp
inc
mov
push
mov
jno
or
push
add
adc
out
lea
andl
jle
sbb
ret
pop
lods
push
mov
call
mov
ds
inc
aaa
pushl
lcall
cmpsl
scas
xchg
push
popf
hlt
andb
pop
pop
xor
add
push
push
out
testl
jecxz
mov
fldcw
push
cmp
mov
in
mov
add
or
inc
xor
and
inc
sub
outsl
inc
shr
or
fimull
xchg
sbb
pop
cmp
ret
insb
orb
inc
xchg
pop
jecxz
cltd
test
push
push
xchg
adc
adc
mov
or
mov
mov
pop
inc
jge
sub
jmp
aaa
push
sub
mov
shlb
adc
in
shr
pop
loope
adc
movsl
rcrb
xchg
gs
xchg
gs
insb
outsl
in
mov
js
or
inc
repz
push
sub
fadds
sub
push
mov
pushf
push
inc
or
fcompl
in
or
pusha
jae
arpl
mov
or
push
dec
mov
or
insl
addl
add
aad
arpl
loopne
mov
into
adc
stc
xchg
mov
lds
lods
ds
add
and
mov
sti
lcall
dec
mov
nop
push
mov
sbb
cwtl
or
adc
xchg
and
pop
and
ret
and
enter
dec
and
add
or
xchg
popa
fsubrl
mov
jne
fisttpl
scas
mov
ja
idivl
sbb
sbb
jl
jecxz
pusha
xor
cmp
add
cwtl
xchg
adc
dec
pop
sub
add
push
inc
mov
push
sub
add
add
movsl
fadds
aam
pop
pop
push
or
pop
pushf
push
ret
and
fisttpl
outsb
fsubs
inc
lock
mov
loop
sahf
inc
test
push
jnp,pn
test
stos
movsb
xchg
bound
ds
fisubrl
imul
jp
pop
les
call
mov
mov
and
cmp
cmp
fisubl
insl
push
mov
daa
rolb
inc
mov
fisttpll
fbld
inc
ret
jle
jge
fldcw
jl
test
mov
pop
mov
push
pop
jbe
int3
insl
mov
add
std
mov
mov
addr16
lds
ds
sub
sbb
lods
cmp
inc
cmp
jl
adc
js
mov
shlb
or
movsl
adc
loopne
push
and
push
popa
and
and
test
shlb
and
outsb
imul
and
gs
shlb
mov
sahf
mov
xchg
jae
loope
rorb
in
jne
push
out
popf
in
xor
das
ss
jae
popa
gs
xchg
in
or
xor
gs
xor
std
outsb
pop
addr16
cs
jne
add
add
add
push
fiadds
dec
mov
add
inc
cs
mov
mov
or
roll
add
js
adc
mov
es
pop
dec
or
mov
push
mov
call
rcr
xor
xor
inc
mov
ss
and
inc
push
mov
ljmp
sti
jle
pop
jg
fisubrs
cli
and
jmp
inc
pop
sbb
test
add
mov
dec
xor
insl
jmp
pop
lcall
loope
jecxz
gs
pop
adc
data16
insb
rolb
xor
sbb
adc
in
mov
adc
mov
enter
enter
sarb
inc
mov
test
dec
xchg
xor
mov
into
or
mov
mov
or
sbb
push
gs
test
adc
mov
fistl
xor
sbb
add
add
cli
rclb
or
fdivrl
sbb
mov
mov
push
sub
lock
sbb
cmp
xor
cmp
sbb
sbb
jo
mov
lods
sbb
add
movsb
mov
jnp
mov
add
cmove
cwtl
adc
mov
nop
pop
andb
sbb
push
dec
sub
add
mov
push
loopne
pop
xlat
mov
arpl
add
add
pop
xor
and
pop
stc
inc
add
incb
mov
arpl
jae
fs
ljmp
popa
je
push
outsl
outsl
insb
push
xor
popa
insl
out
jg
jo
push
add
jb
jne
insb
and
insl
mov
adc
jo
adc
pusha
mov
insb
movsb
cwtl
add
mov
mov
inc
dec
gs
xchg
cmovbe
jbe
aam
aas
arpl
imul
push
jnp
inc
add
dec
outsl
fs
adc
mov
rolb
pop
add
lret
mov
imul
jg
xlat
neg
mov
adc
add
push
mov
dec
and
imul
or
and
mov
fs
add
push
xor
in
mov
push
je
jnp
mov
nop
ja
inc
outsl
jb
outsb
and
lock
bound
push
push
gs
outsl
outsb
push
or
mov
xchg
into
push
addb
pop
jo
jae
jno
fnsave
push
add
mov
push
push
or
inc
inc
cmp
pop
fstpt
inc
pop
ret
andb
ret
pop
arpl
daa
dec
pcmpeqb
fsubrl
and
pusha
xchg
push
das
filds
lods
fadd
push
add
sub
push
lret
push
sbb
push
gs
je
mov
sub
and
xchg
adc
xchg
ss
push
cmp
gs
addl
push
rcll
dec
push
mov
push
imul
dec
push
pop
sbb
outsl
imul
andl
dec
dec
push
jns
dec
mov
fwait
test
add
jns
mov
cmp
imul
push
popa
pop
outsl
insb
jl
sbb
push
and
popa
mov
mov
scas
aad
mov
mov
pop
add
sbb
adc
inc
ret
xchg
pop
add
sbb
pushf
imul
xor
stos
add
inc
ret
sbb
push
add
ret
add
insl
sbb
insb
jae
arpl
imul
push
jmp
in
adc
aas
mov
push
dec
inc
dec
mov
add
jo
je
cmp
xchg
xchg
jae
popa
addr16
packssdw
push
cmp
je
dec
or
add
jne
fildl
fcomip
mov
outsb
test
enter
push
test
bound
mov
xor
mov
fimuls
add
push
dec
gs
mov
sti
or
inc
out
jge
mov
adc
iret
and
outsb
jne
push
sbb
orl
push
mov
cmp
and
cltd
add
insl
adc
xchg
or
mov
ret
lret
pop
inc
jb
adc
add
or
cld
mov
jg
pop
adc
ret
es
imul
xchg
sub
cltd
mov
bound
inc
mov
bound
imul
mov
sub
frstor
mov
mov
or
xchg
pusha
aas
fcompl
inc
pop
push
add
rdmsr
ficomps
pextrw
xor
loope
jbe
outsb
insb
out
push
shll
jb
pop
mov
arpl
or
daa
pop
dec
add
imul
mov
sub
adc
sub
imul
cld
mov
addl
sub
mov
push
cmp
xor
or
mov
loopne
sub
cmp
sbb
jmp
jne
mov
call
mov
jge
jo
or
push
mov
dec
imul
mov
xlat
jl
and
fcmovnb
dec
movsl
push
sbb
cmc
movsb
test
adc
inc
mov
and
push
xchg
or
and
adc
je
icebp
imul
jnp
cmp
or
aas
mov
loopne
setbe
xchg
call
mov
jne
sub
pop
mov
mov
mov
fimull
cmpsl
call
cmp
xchg
in
pop
push
pop
mov
mov
mov
lcall
fdivrp
movsl
icebp
jmp
dec
push
add
fs
ss
xor
sub
in
jae
ljmp
xchg
mov
mov
or
into
cmp
lods
push
fwait
push
or
mov
aas
aas
or
ljmp
les
aad
aam
push
sahf
lret
jnp
sbb
insl
cltd
imul
movsl
lahf
xor
decl
aad
nop
xor
mov
add
pop
and
icebp
sbb
push
adc
jmp
mov
stos
xor
andl
push
repz
xor
and
jp
out
adc
mov
sub
inc
aad
rcr
jge
int
jne
lahf
les
lods
ljmp
and
xchg
cmp
and
test
mov
jecxz
lds
jo
adc
outsl
add
mov
in
or
add
dec
jmp
jg
fstpt
neg
pusha
mov
mov
push
jecxz
test
cmc
bt
leave
push
sub
dec
push
push
push
mov
push
jmp
jg
dec
stc
test
test
test
add
stc
cmc
inc
mov
push
xchg
sti
add
in
mov
movsbl
xchg
xchg
mov
movzwl
add
xchg
ret
pusha
repz
add
sbb
std
outsl
or
inc
xor
not
xchg
rcr
and
call
dec
repz
dec
cmp
mov
or
clc
or
fistpll
pushf
shr
push
push
jmp
sub
call
call
cmp
xor
inc
mov
adc
cmp
and
and
mov
push
dec
shl
add
jmp
aaa
inc
mov
pop
jl
and
push
sbb
loop
adc
pop
call
cmpsb
loop
push
cmp
mov
jbe
fisttps
xor
pop
les
in
mov
cmp
dec
jmp
fdivr
xchg
jb
prefetchwt1
sub
sti
adc
into
clc
and
jmp
loope
mov
lock
call
sti
mov
push
jmp
insb
jmp
jge
xlat
shl
repnz
and
or
mov
push
or
jg
add
adc
enter
cs
subl
push
jmp
in
imul
ret
pusha
sub
mov
in
outsb
call
jbe
push
call
aam
pop
enter
inc
lea
ret
mov
sub
pop
stc
push
in
mov
outsb
cmp
jge
mov
mov
call
mov
popa
mov
and
lret
movb
push
call
mov
mov
pushf
xor
sarb
adc
xor
icebp
outsb
mov
movsb
pusha
out
in
pushf
inc
in
fdiv
out
pop
adc
cmp
emms
xlat
loopne
pop
adc
in
xchg
fsubrl
fdivrl
pushl
ret
push
les
pop
xchg
ret
aaa
daa
test
jbe
sti
out
xchg
ret
mov
pushf
bswap
push
stc
xchg
test
pusha
nop
mov
fistpll
shr
movzbl
push
ljmp
lret
or
fcomps
arpl
scas
fdivrp
fstpt
pusha
ror
or
adc
pusha
shr
mov
ror
mov
inc
sbb
mov
in
jg
sub
inc
bound
adc
jno
sbb
ss
sbb
pop
stos
in
fnstsw
adc
push
jmp
adc
fucomi
lea
mov
mov
fiadds
in
sarb
loope
stc
xchg
outsl
mov
push
and
enter
rcr
or
rcl
fidivrl
in
cmpsl
dec
sbb
push
negl
adc
mov
je
pop
movsl
sub
xchg
adc
add
insl
xchg
jmp
nop
lret
ficoms
scas
ret
fld1
lds
push
loope
out
mov
dec
test
rorl
push
xor
sbb
pop
mov
xchg
xor
fildll
aaa
mov
lods
cld
mov
xor
jg
faddp
call
mov
push
lock
shl
aam
loope
call
xchg
daa
pusha
movsl
sbb
mov
sub
jl
push
sbb
outsb
clc
jmp
fisttps
sbbl
jmp
sbb
inc
pop
into
mov
stos
fs
cmp
inc
leave
fisttpl
out
out
jbe
aad
fs
pushf
jl
or
mov
pop
and
int
clc
or
push
sub
ret
sbb
stc
shlb
pusha
aad
out
cmc
les
shl
adc
data16
fistps
sub
adc
push
decl
mov
push
lods
mov
jecxz
call
out
ja
test
arpl
popf
mov
mov
inc
push
movb
mov
rcrl
mov
into
lret
cmp
adc
repz
dec
mov
xchg
jbe
lret
sbb
push
adc
aaa
jg
dec
jmp
flds
push
aad
cmp
test
pushf
mov
jo
cmp
imul
pop
sbb
xchg
and
testl
sbb
clc
xor
stos
cmpsb
jno
push
jge
adcb
incb
add
cmp
out
jmp
popl
pushf
sub
test
jne
std
push
dec
orb
out
movl
fists
fsubrs
adc
cmpsb
test
jmp
in
or
test
push
aaa
pop
mov
and
loopne
sti
xchg
jnp
xchg
sarl
mov
pop
sbb
push
es
stc
jmp
or
xorl
mov
push
push
dec
sahf
push
pop
jmp
outsb
js
mov
fs
scas
sub
jmp
add
sbb
mov
mov
xchg
fwait
shrb
addb
out
xchg
into
push
jbe
sub
sahf
pushf
ss
ret
inc
jmp
testl
push
mov
scas
xchg
xchg
xchg
or
push
xor
sbb
mov
ret
pmullw
push
jo
icebp
movsl
cmp
es
xchg
sti
and
jns
decb
out
jmp
stc
push
sub
pusha
lcall
or
sub
inc
insb
cld
mov
out
lds
sbb
push
or
ja
shlb
jecxz,pn
adc
adc
or
mov
adc
mov
call
lahf
jmp
cmp
mov
adc
rolb
insl
fucomi
xchg
mov
adc
rcl
fcmovbe
push
mov
call
pusha
xor
add
shr
insb
shlb
add
fisubrs
in
std
pop
mov
inc
add
cmp
push
xchg
or
out
scas
or
call
jnp
mov
sub
lds
jbe
jl
aad
cmpsb
jg
imul
stc
mov
adc
outsb
pop
push
cmp
test
cld
or
fdivr
xchg
ds
ret
adc
out
jne
adc
sbb
fidivrl
xor
incl
sub
fisubs
inc
inc
shlb
ds
push
xchg
clc
test
scas
adc
out
inc
sub
imul
or
mov
mov
or
clc
adc
and
cmpsl
mull
not
push
add
les
cli
pusha
arpl
pop
sbb
jmp
mov
mov
sbb
iret
push
lea
repz
outsb
or
xor
jmp
xchg
jmp
loope
int3
pop
or
push
aas
lahf
loop
adc
sub
std
pusha
jl
enter
inc
jnp
std
add
icebp
add
inc
cmpsb
mov
jecxz
divb
out
call
std
or
push
ret
sbb
inc
mov
loopne
fucomip
mov
hlt
in
shr
sub
stc
add
cmp
cmp
mov
fmull
fnstcw
adc
popf
loopne
sub
mov
sbb
push
cmp
cli
aam
faddp
xor
xchg
sarl
sub
das
add
sub
push
negl
jns
movb
or
repz
out
leave
push
dec
cld
mov
push
pop
test
mov
ffree
jo
or
jmp
jge
jp
insb
cltd
mov
sbb
insb
std
jbe
pop
pop
push
mov
psubsb
hlt
sbb
rorl
movsl
jmp
das
xchg
stos
jle
lret
push
repnz
cmp
stc
pop
lea
adc
bound
repnz
lcall
push
stc
pusha
dec
sub
jo
push
stc
and
jl
xchg
cld
pop
icebp
dec
fldcw
shrb
clc
inc
inc
ret
dec
test
jp
fildl
dec
pop
jmp
aam
call
pusha
out
pop
cs
push
pop
sbb
mov
pop
and
or
test
popf
repz
jmp
jmp
or
call
inc
js
orl
loopne
mov
test
push
ffree
out
int
ret
aam
mov
fneni(8087
mov
add
jno
icebp
rclb
pop
dec
push
push
xchg
mov
xchg
aaa
and
or
in
sbb
push
mov
jns
mov
jo
or
xchg
and
arpl
adc
sub
fistpl
xor
ret
cmp
stc
in
jo
out
mov
add
mov
push
jnp
sti
push
mov
or
mov
int3
lret
std
jno
push
jmp
mov
and
lret
add
loope
push
je
js
fiadds
sub
jp
mov
call
leave
lea
pop
rorb
aam
cmp
ret
in
fxch
mov
push
dec
and
stos
fsubp
inc
fs
jl
xchg
fdivrl
push
and
sbb
jmp
mov
fwait
rcrb
repnz
rol
pop
sti
shld
outsb
fldcw
fldl
aam
aam
testl
lahf
jb
pop
aad
shll
clc
inc
or
ret
xchg
push
xchg
dec
cmp
push
mov
pop
cmp
jno
push
cwtl
call
or
test
or
xor
sbb
push
jmp
adc
mov
testl
xor
push
mov
ljmp
push
mov
push
pushf
out
xchg
or
mov
les
mov
ficompl
pop
mov
loope
xchg
iret
mov
das
mov
std
push
and
mov
pop
jmp
adc
add
add
adc
outsb
stos
pop
popf
lock
adc
loope
jno
and
gs
inc
cmp
jle
jmp
sub
fdivl
add
loopne
jbe
inc
mov
mov
mov
xor
in
mov
je
repnz
inc
mov
jg
sbbb
push
pushf
mov
outsb
lods
jns
jmp
sub
dec
insb
ret
cmp
mov
call
jp
sarb
sub
sbb
xchg
stos
push
aaa
and
sti
or
fsub
sbb
js
outsb
push
cltd
jmp
and
xor
xchg
lock
or
xchg
scas
int3
fldl
pushl
jnp
sbb
sbb
clc
inc
xchg
or
cli
lds
inc
pushf
outsl
sar
mov
jns
loop
aaa
xchg
pushaw
movsb
lea
arpl
rclb
push
jo
sbb
loope
rcrb
movsb
rclb
push
lods
fmuls
shl
mov
in
sub
bnd
in
rclb
inc
push
lcall
push
lcall
mov
loope
mov
ficoms
call
cmp
inc
cmp
add
sbb
cmpsl
jecxz
pop
xchg
sbb
rcrb
push
in
test
adc
sbb
adc
jne
pop
cmp
or
mov
inc
mov
inc
or
movsl
push
rorl
sbb
dec
outsb
pop
or
push
into
push
decl
sub
lds
push
push
fisttps
subb
stos
fstp
cwtl
hlt
stos
cmpsl
xor
das
mov
fwait
sbb
cld
fcmovnb
adc
adc
aad
subb
das
inc
and
loop
clc
shlb
add
cwtl
sub
cmp
icebp
les
cvttps2pi
xchg
push
xor
add
shlb
mov
rorb
lock
cmc
outsb
jo
sub
call
mov
sbb
dec
add
xchg
clc
rclb
lds
mov
fnstcw
cli
pushf
dec
pop
or
xor
faddl
jae
cwtl
cmp
push
test
dec
jo
cmp
pushf
inc
xchg
push
fldl
push
and
lock
inc
insb
pusha
cmp
cmp
push
sbb
aas
cmp
dec
call
jo
into
jbe
fwait
jmp
mov
or
mov
mov
jb
jbe
sar
rcr
or
xor
pop
cmc
ljmp
sarb
or
stos
jp
fisubs
test
xlat
adc
inc
push
addr16
rorl
sahf
push
push
mov
push
les
scas
and
jne
lock
repnz
xor
dec
fistpl
shll
push
or
cmp
popf
pop
pop
xchg
jne
pop
push
call
mov
movsb
rcr
push
neg
fs
cmc
into
rorl
jbe
das
dec
mov
test
jmp
shll
jno
outsb
lock
outsb
add
xor
out
or
fiadds
inc
lds
es
mov
inc
jmp
cwtl
fimuls
xchg
dec
sbb
imul
mov
test
xchg
fdivrp
test
clc
dec
mov
insb
push
cmp
push
inc
mov
jp
xor
imul
insl
mov
jb
push
jnp
inc
decl
push
int
push
call
mov
ja
lock
stc
stc
push
loop
std
mov
pop
push
jmp
fstp
rorl
fists
rcrl
shrb
repnz
mov
xchg
icebp
or
pusha
jnp
mov
adc
scas
adc
or
arpl
pop
adc
xor
push
inc
adc
cmp
or
jmp
adc
mov
sub
cmp
and
clc
lock
data16
add
cmp
arpl
mov
cmp
cmp
call
out
fstl
add
and
xor
cmp
xor
gs
add
mov
inc
mov
out
inc
out
add
ret
iret
imul
and
lock
lret
ret
mov
call
pusha
mov
nop
sbb
or
test
pop
or
jmp
ds
clc
jbe
mov
inc
mov
push
hlt
adc
std
repnz
mov
pushl
mov
mov
ljmp
add
mov
fidivrl
cli
lea
mov
scas
pusha
inc
add
cli
add
or
dec
call
mov
int
fiaddl
out
or
cli
stc
movsl
stos
fdivl
push
test
cmp
add
mov
dec
mov
loope
add
sahf
jne
xor
hlt
mov
xchg
pop
pusha
call
femms
sub
add
push
stos
pop
cli
inc
push
push
scas
jbe
pop
or
sbb
add
add
ret
sbb
fidivl
mov
sbb
xor
xbegin
loopne
fistps
pop
test
pusha
stc
cli
clc
pusha
jmp
aad
pop
leave
mov
stos
dec
je
in
push
cld
push
cld
mov
pop
addl
cmp
push
mov
repnz
ljmp
inc
sub
aad
mov
shr
lahf
xchg
dec
inc
call
sarl
xor
mov
inc
movsb
xor
sbb
lock
lahf
pop
hlt
add
frstor
iret
add
sbb
movsb
bound
aad
fldl
adc
movl
cmp
divl
aaa
stc
fbstp
inc
orb
data16
out
clc
sti
cmpsl
repz
or
add
mov
jne
shll
in
and
sbb
imulb
sarb
leave
in
fimuls
mov
in
movsb
arpl
xchg
jmp
add
inc
mov
or
ret
test
lret
or
jmp
jnp
movsl
or
ljmp
sbb
xchg
push
call
and
mov
ds
mov
popa
test
call
cmp
cmp
daa
cltd
push
dec
outsb
decb
xor
mov
lds
lds
call
dec
cmp
dec
push
ficompl
pusha
cmp
sbb
sbb
or
addl
sbb
adc
inc
jae
mov
mov
add
mov
jecxz
jae
sub
or
sbb
rorl
mov
push
push
push
adc
mov
out
jle
push
es
jne
push
push
jae
sbb
imul
insb
push
adc
stc
pusha
mov
je
loopne
mov
stos
aam
inc
push
xchg
call
js
int3
mov
cmp
call
sbb
dec
cmp
and
jge
loope
psubb
add
add
inc
enter
mov
cwtl
sub
mov
pop
hlt
sbb
push
clc
dec
cld
icebp
xor
cmp
adc
mov
sbb
inc
pop
scas
imul
dec
jno
inc
packssdw
or
or
insl
stc
leave
shr
xor
lock
jmp
stos
jmp
lret
movsl
aas
rol
mov
jo
add
dec
and
arpl
in
loop
inc
ljmp
xor
adc
mov
and
ficoms
and
or
insl
mov
lock
pop
je
stos
pop
jmp
int
inc
test
and
mov
cmp
jo
push
inc
fdivs
cmc
lret
xlat
jb
mov
adc
push
mov
and
cmp
cmp
cld
insb
stc
mov
mov
sub
sbb
sbb
cmc
or
adcl
add
sub
pop
pop
sub
sub
jge
ljmp
or
xchg
push
dec
sarl
add
mov
cmp
jb
and
sbb
sbb
dec
cmp
lret
insl
xlat
lods
das
xchg
sub
push
xor
sbbb
jb
pop
jmp
mov
push
mov
sub
dec
pop
aaa
inc
mov
mov
and
fstp
scas
gs
out
sub
cmp
pop
pop
arpl
pop
mov
mov
dec
cmp
cmp
in
mov
add
sub
int
outsl
imulb
xor
mull
out
arpl
pop
xchg
ja
mov
jle
idivb
divps
jnp
mov
fnstcw
mov
push
jg
loope
aaa
cmp
das
dec
push
movntps
jo
idiv
xor
add
push
lret
into
stos
and
aaa
aas
sub
jmp
seta
in
aaa
in
jnp
outsl
sbb
ret
outsl
sbb
add
cmp
sub
jnp
xor
xchg
cmpsl
add
pmovmskb
dec
sbb
push
xchg
sbb
out
cmp
pop
lock
sbb
daa
maxps
fxch
out
jmp
xor
cmp
pop
leave
out
and
pop
out
cmp
fisubs
mov
arpl
daa
jg
pshufw
pop
adc
dec
out
lock
or
movzwl
add
sbb
sub
mov
push
pop
jae
dec
sub
pop
sub
mov
inc
xor
ret
cmp
or
cmp
out
lock
out
daa
lahf
mov
sub
ret
mov
or
inc
lcall
neg
jecxz
jecxz
mov
lahf
outsl
negl
sbb
icebp
jnp
js
ja
or
shlb
aaa
mov
fldcw
loope
rcll
inc
ror
add
dec
out
leave
mov
xchg
in
sti
loopne
hlt
rolb
dec
call
mulb
movsl
or
mov
scas
sub
ror
mov
lds
mov
jmp
repz
add
movsb
sbbl
add
push
mov
jne
test
mov
rolb
neg
pop
je
call
test
cltd
push
loopne
out
dec
in
cwtl
call
sub
hlt
xchg
xor
ljmp
mov
adc
rolb
out
aam
pop
inc
and
sti
int
loopne
mov
jmp
pop
pop
mov
cld
lock
pop
cmp
call
repnz
das
fwait
pop
loop
or
or
jmp
and
mov
loope
xchg
add
jmp
mov
cmc
stc
pusha
add
sbbl
cmp
or
mov
or
inc
or
lret
xlat
push
nop
out
mov
push
sbb
rcll
jp
movsb
inc
cwtl
stc
aas
cmc
sbb
jns
mov
mov
push
lahf
cmc
fld
and
jo
insb
in
inc
sub
sti
insl
fiadds
xchg
cmp
sub
pusha
lods
rorb
lock
pop
add
or
stos
shlb
pushl
orb
mov
add
cmp
jne
pushl
push
sub
ret
pop
mov
ljmp
mov
push
mov
sub
cli
and
lea
idivl
test
pop
inc
fildll
xchg
loopne
loope
jnp
flds
cmp
sub
mov
inc
and
clc
into
sbb
bound
ret
data16
fiaddl
sbb
jp
add
mov
cwtl
das
push
cltd
mov
mov
stos
sti
sub
jns
flds
push
push
idivb
mov
pop
loop
stos
and
mov
add
movsl
inc
shll
cmp
pop
cld
lcall
insl
aad
or
adc
push
cmp
hlt
in
pusha
pop
cmp
stos
outsl
cmpsb
cmc
mov
in
jp
inc
jg
sub
cmp
sbb
enter
int3
jno
inc
fmul
faddp
sti
pop
jnp
pop
pop
dec
and
movsl
pusha
scas
adc
sbb
lods
int
inc
cmpb
sbb
jae
dec
lcall
lock
dec
add
cli
das
push
popa
sub
jg
or
fadd
popf
push
call
loop
pop
sub
bound
popf
adcb
sbb
push
or
lahf
orb
scas
pop
jg
dec
add
mov
mov
inc
cli
inc
jns
rcrl
fwait
out
fistpl
push
shl
loopne
mov
push
lcall
dec
pop
stos
jp
jle
cmp
iret
xor
cmp
xchg
push
lods
lcall
adc
xchg
and
push
adc
mov
jae
int3
mov
ja
pop
push
xchg
xchg
xchg
cmp
and
pop
cmp
cltd
mov
mov
shll
fsubrs
es
push
pop
jno
cli
ret
inc
jae
xor
cmpl
jp
jg
incl
mov
sbb
aam
pop
or
jg
dec
jl
in
je
jnp
mov
ret
adc
testb
aas
dec
jl
add
jbe
jne
ljmp
jmp
fidivrs
mov
xchg
cmp
inc
pop
gs
clc
jmp
adc
das
add
call
rol
roll
pop
jecxz
clc
out
rorl
lret
adc
adcb
out
movsl
popa
in
movsl
jg
scas
in
ja
in
psllq
icebp
loope
ss
fdivrs
fnstsw
scas
jg
cmp
push
jmp
pop
fbstp
je
sbb
add
sbb
das
cld
out
fstl
in
int3
loopne
jae
repnz
push
xchg
mov
push
jae
jnp
imulb
icebp
and
xchg
fidivl
fs
in
das
iret
rclb
shll
fmull
adc
daa
mov
xchg
adc
stc
leave
adcb
inc
jecxz
shrb
sub
mov
add
and
data16
out
or
dec
sub
push
adc
xlat
xchg
xor
rclb
imul
jmp
and
inc
adc
faddl
outsl
push
mov
dec
lcall
cmp
cmpsl
dec
push
fwait
and
pop
cmc
cld
xor
nop
add
movsl
sub
jg
mov
gs
mov
iret
inc
leave
fcoms
inc
int3
sar
jae
dec
mov
jmp
pop
ret
bound
xchg
xor
repnz
sbb
pop
clc
inc
imul
ret
and
xor
adc
jns
mov
gs
mov
loope
test
pushf
adc
arpl
inc
xchg
sbb
aam
cmc
ljmp
cli
jmp
aam
jns
in
call
imul
je
sti
ljmp
js
fld
push
mov
loop
xorl
cmp
inc
pushl
cmpb
enter
loope
push
cmpsb
shll
test
insb
mov
call
push
ret
and
cs
test
lock
pop
pusha
jmp
sbb
call
out
add
mov
gs
in
icebp
mov
jg
incl
dec
add
jae
mov
mov
out
cwtl
es
xor
shld
mov
pop
cmc
imul
ss
shl
pushf
and
icebp
push
inc
jae
in
data16
in
es
std
push
out
decl
mov
or
popf
add
xchg
es
mov
add
lea
add
pop
push
lods
push
jo
aad
or
fwait
repnz
xor
imul
clc
jne
hlt
pop
movsb
outsl
xchg
test
sub
push
shlb
inc
incl
rorl
push
aas
cmpsb
outsb
sti
pop
loopne
cmp
cld
int
xlat
decl
shlb
icebp
push
jmp
in
jle
pop
lcall
cmp
aaa
cld
out
out
fldl
lcall
in
ret
push
enter
sbb
mov
movsl
pop
loop
sahf
mov
cli
out
jmp
call
cmc
mov
icebp
in
cmpsb
insl
xor
sub
in
cmpsl
or
mov
std
lods
iret
xchg
test
mov
addr16
arpl
and
aad
lock
sbb
jo
jo
fcomp
xlat
pop
sub
mov
jo
pop
push
cmpsl
pop
and
sbb
push
pusha
test
cli
mov
sbb
mov
test
repnz
pop
fistps
push
in
xchg
test
lret
test
cmp
pop
lret
mov
decl
icebp
rep
enter
jne
hlt
add
cmp
mov
sbb
mov
in
aas
ret
out
cmp
nop
push
adc
sbb
sub
cmp
jno
xchg
lock
ljmp
sub
mov
dec
mov
cmp
cwtl
adc
fistpll
push
mov
ja
xchg
or
push
repz
mov
mov
sub
test
xor
fldl
xchg
mov
icebp
pop
and
mov
jnp
in
cmp
fcmovu
xchg
or
xchg
push
xor
in
mov
jg
outsl
xchg
or
pop
add
bnd
cld
jg
sub
jne
push
mov
inc
aam
aam
jno
popf
sub
mov
xchg
xor
testb
scas
jp
dec
ja
adc
in
fisubs
int3
mov
std
push
aad
push
std
decl
divb
push
iret
sbb
or
jbe
ficomps
enter
sbb
je
inc
sub
cmp
jne
das
in
adc
xchg
pop
and
xor
mov
jae
daa
cwtl
mov
and
sbb
fcmovnbe
jns
fistps
sub
loop
or
ss
adc
ljmp
sbb
test
mov
cmpsb
lods
jg
insl
mov
sti
out
fisttps
or
sub
sub
call
push
sbb
ljmp
cmp
sbb
mov
mov
add
and
mov
cmpsl
xchg
daa
addr16
fstpt
in
sub
out
xchg
inc
cmc
xor
sbb
mov
ljmp
arpl
jecxz
adc
sar
cs
add
mov
icebp
dec
std
aaa
mul
inc
aas
jbe
mov
pop
bound
inc
pop
decl
clc
ja
pop
rcll
sbb
iret
mov
das
stc
in
inc
add
gs
test
cmp
sub
or
sub
scas
sbb
xchg
cmc
fidivrs
jmp
jge
jp
sbb
inc
leave
clc
mov
inc
or
cmpsl
cmp
lods
sahf
cld
popf
fistps
mov
hlt
ret
cli
push
sbbl
filds
ret
loop
adc
imul
jo
fdivr
push
fs
movzwl
jb
jp
xor
mov
fildll
lret
push
sbb
inc
out
mov
insb
js
jle
rcr
pop
sbb
loop
gs
fucomip
xchg
xchg
popa
mov
pop
or
icebp
xchg
adc
inc
xor
xor
xchg
call
clc
incl
sbb
xor
or
xor
roll
jl
bound
ljmp
das
jle
pop
lods
enter
and
inc
fimull
xlat
cs
inc
pop
push
mov
pop
lea
mov
imul
sbb
pop
clc
xor
lods
lds
ja
lret
out
and
dec
call
pop
clc
sub
pop
mov
and
ja
mov
cmpsb
add
test
sub
mov
aas
or
rorl
mov
leave
gs
jae
ds
sbb
mov
mov
pop
jl
aaa
pushf
ljmp
ljmp
mov
lret
or
jmp
adc
mov
push
add
mov
dec
repnz
sbb
mov
and
cmp
dec
sub
bnd
jno
das
xchg
add
or
nop
inc
jmp
lds
sbb
dec
lahf
pusha
scas
adc
adc
mov
pop
mov
icebp
rolb
mov
decl
mov
xor
fsubs
icebp
dec
xchg
mov
mov
sbb
test
mov
jb
outsb
mov
shrb
lcall
jns
push
popa
inc
fisubrl
mov
mov
sbb
lods
mov
ss
and
jbe
fadds
fs
and
mov
mov
mov
int
addr16
inc
icebp
fldcw
dec
scas
mov
out
jge
filds
popa
xor
loope
shr
movsl
jmp
inc
lods
push
lret
jle
jp
push
or
mov
mov
aad
and
loopne
lahf
pusha
mov
sbb
cmpsb
sbb
cmp
jb
outsl
mov
cld
mov
inc
mov
cwtl
push
mov
shrl
lcall
int3
fsubl
imul
dec
sub
jle
mov
ret
xchg
ffree
jge
mov
loope
or
mov
adc
shr
lahf
xchg
inc
leave
mov
add
in
jo
push
fisttps
call
call
popa
sbb
mov
jg
pop
decb
cmc
pop
jmp
das
mov
ss
xchg
cltd
cmp
lcall
push
rorb
mov
xor
lods
xchg
popf
xor
mov
ud0
outsl
call
add
mov
popf
popf
dec
adc
cmp
and
jmp
push
rcl
jg
dec
arpl
loopne
rclb
xchg
insb
roll
cmp
mov
xchg
push
dec
fdivs
jp
neg
push
in
iret
pop
mov
outsb
lret
pop
sub
adc
sbb
add
adc
pop
xchg
cmp
pop
idiv
loopne
iret
sub
adc
and
out
ja
push
push
or
push
xor
pop
pop
add
cld
js
stos
mov
mov
popf
rcll
xchg
adc
std
ljmp
icebp
test
push
jne
stc
out
pop
mov
aad
cmp
aas
xchg
push
adc
xchg
adc
push
das
jge
dec
clc
stos
lods
push
mov
mov
mov
xlat
sti
flds
std
rolb
mov
rclb
jmp
das
mov
ds
pop
iret
xchg
push
dec
dec
xor
mov
and
sbb
shll
cmc
incl
inc
sbb
out
scas
mov
cmp
aad
mov
ljmp
jmp
bound
in
sub
mov
mov
movsl
fldcw
daa
in
inc
test
mov
lds
dec
stos
aas
mov
incl
cmp
push
gs
lcall
sti
hlt
fld
cli
scas
jp
arpl
or
lret
add
rcr
mov
inc
fcomps
xchg
sub
jns
imull
call
mov
pop
sbb
pop
in
jns
mov
ret
cs
outsb
push
test
call
stc
add
mov
shll
std
js
repz
mov
push
lds
adc
jmp
std
iret
outsb
adc
test
push
fsubrl
mov
push
popf
loopne
push
lea
or
pushl
xchg
imul
cmpb
cmp
cmp
xchg
icebp
jg
mov
nop
jns
repz
fwait
aad
mov
out
mov
pushl
mov
sbb
in
push
sub
xchg
push
cmp
in
insb
mov
add
testb
popf
add
call
jg
add
and
sbb
aam
cmp
mov
movsl
and
hlt
jns
push
std
jg
sub
or
cmp
xor
imul
roll
decl
xor
out
add
movb
stc
lds
xor
xchg
aam
push
scas
jne
int
repnz
push
jmp
jmp
fldl
xor
iret
addb
mov
data16
aas
iret
cmc
xor
data16
aad
ljmp
mov
jp
out
fsubs
mov
dec
mov
fbld
mov
push
aad
lcall
fsubs
sub
pushl
orb
mov
inc
jbe
push
nop
pop
fldcw
xchg
mov
loope
dec
aas
add
mov
ljmp
scas
add
call
mov
loope
lcall
add
dec
sub
in
scas
pop
mov
bound
lret
loope
sar
ljmp
pop
js
pusha
adc
nop
mov
test
mov
cmp
jg
lea
sbb
je
jle
leave
or
fst
cmpsb
movsl
jbe
call
cmp
mov
and
mov
fwait
sub
testb
mov
into
lahf
inc
shufps
sbb
arpl
sub
into
xchg
pop
jmp
mov
dec
inc
lods
ud0
ljmp
pop
mov
idivl
test
inc
jle
jae
mov
or
xor
incl
stc
push
jne
adc
and
ret
lods
push
inc
mov
in
jl
mov
push
mov
cmp
mov
rcr
pushl
in
push
or
repz
inc
call
orl
jmp
push
out
rorl
adc
movsb
or
btc
and
jp
stc
ja
cmp
push
pop
out
inc
loope
subb
shrl
mov
cmc
sbbl
out
cmp
mov
xor
inc
mov
out
mov
movsl
fcompl
outsb
ds
das
mov
mov
mov
mov
icebp
push
in
or
aas
push
fbstp
pop
xor
or
adc
call
jg
incb
pop
sbb
das
jg
jb
nop
mov
inc
fstl
rorl
out
and
decl
rcr
lcall
mov
cs
and
and
outsl
mov
xchg
jb
in
dec
sbb
xor
mov
cmpsb
lock
sbb
out
subb
idiv
incl
clc
sbb
push
jmp
mov
inc
jg
ds
fld1
jb
cmp
inc
xchg
test
dec
call
xchg
mov
dec
pop
insb
js
mov
push
cli
imul
push
shlb
flds
sbb
sarl
clc
fisttps
aas
hlt
inc
jb
movsb
or
out
int3
jb
cmpsl
jle
add
decb
fsubl
dec
jo
push
adc
test
mov
ret
sub
jnp
rcr
fisubl
out
test
lahf
sbbb
mov
psllw
shll
es
xor
lods
scas
or
jmp
call
mov
ja
movsb
xor
stos
decb
sarl
cs
mov
pushl
cmp
jg
cs
mov
pop
cltd
mov
in
das
jl
push
bnd
mov
std
movsl
pop
mov
cli
test
add
mov
pop
in
mov
clc
incl
fs
out
inc
or
hlt
testl
je
outsb
add
repz
xchg
mov
and
inc
mov
stos
mov
js
lock
xchg
out
mov
jne
xor
incl
icebp
icebp
sbb
push
cmp
mov
jo
pop
ljmp
jo,pn
mov
or
cwtl
pusha
inc
loop
dec
lds
push
jo
fldt
loope
ja
mov
xchg
int
jge
int
lcall
rcr
cli
pushf
cmpsb
pop
popa
lahf
pop
dec
xorl
jno
ffreep
jnp
loopne
mov
push
aas
movsb
push
and
cmpsl
push
pushf
push
sub
clc
pop
xlat
xlat
insb
push
ss
fninit
dec
pop
xor
out
es
adc
jnp
adcb
and
movsb
inc
add
in
mov
call
inc
test
test
push
out
cmp
incl
jg
dec
ljmp
scas
stc
mov
pop
adc
xor
scas
push
xor
das
push
in
xchg
xchg
sbb
jbe
jmp
jg
aam
rclb
lcall
push
stos
add
push
dec
repnz
psubsw
cmpsb
sub
push
rolb
xchg
cmpsb
cmp
aad
in
ljmp
in
and
shl
or
sbb
mov
sahf
and
movl
fs
xchg
inc
roll
sbb
mov
xor
sub
jecxz
dec
xchg
in
outsb
je
xchg
ds
cmp
sbb
pop
hlt
imul
jg
mov
loop
shr
iret
inc
sbbl
cmpsl
out
xchg
push
fwait
lock
jg
cltd
cwtl
cmp
in
jecxz
push
and
mov
or
mov
jle
push
mov
cmp
scas
cmp
push
fdivrs
fwait
and
jb
ja
pushl
pusha
push
pushf
inc
push
fmulp
push
mov
orb
cmc
pop
push
add
add
lea
sbb
popf
jg
sbb
shrb
fsts
fnstenv
pop
mov
ja
mov
mov
test
movsl
lret
ret
ds
ret
ljmp
lods
mov
loop
pinsrw
call
dec
mov
test
pop
in
xor
add
mov
in
mov
mov
xchg
mov
ljmp
inc
aaa
nop
or
mov
mov
jo
addr16
mov
add
mov
inc
mov
or
and
int3
cmp
jg
inc
pop
scas
popf
and
push
mov
push
jmp
lcall
out
cmp
push
and
out
pop
and
mov
xchg
or
loopne
push
int
into
push
pusha
xlat
scas
sbb
ljmp
pop
mov
sti
push
jmp
mov
stos
rolb
inc
ljmp
loop
and
in
pop
mov
adc
faddl
shl
repz
jle
test
xchg
clc
ljmp
std
enter
xor
mov
dec
ret
cs
movsb
arpl
jg
aaa
inc
push
std
into
insb
scas
xchg
sub
dec
in
xor
mov
or
ss
mov
and
or
or
insb
inc
fs
imul
add
subl
mov
jae
test
add
loop
add
ja
cli
ljmp
stc
jne
push
cmpsb
test
add
jmp
push
sbb
xchg
lahf
xor
test
pop
or
mov
nop
insb
hlt
pop
xor
popa
data16
cld
imul
cmp
das
xchg
call
pop
jno
add
loop
dec
loopne
lds
lea
sub
xchg
sbb
dec
push
fdivrl
loop
shlb
dec
shrb
cmc
sahf
rcrl
incl
push
xchg
stos
push
out
clc
les
sub
or
ljmp
cltd
arpl
call
test
pop
or
out
mov
xchg
sub
pop
xor
out
fisttpl
jge
cmp
mov
mov
dec
mov
or
std
je
jae
lret
mov
lcall
std
imul
stc
fcmovnb
cli
in
sub
and
loop
sar
pop
sub
sub
pop
out
jnp
std
scas
sahf
and
cmp
or
mov
pushf
dec
pop
loopne
int3
aas
and
ljmp
mov
xor
and
dec
mov
jecxz
push
add
call
pop
adc
pushl
fsub
add
cmp
inc
adc
inc
pop
clc
cmp
fists
lock
mov
mov
push
stos
ljmp
jmp
pop
loop
xchg
outsb
push
out
movsl
rcrl
lret
pop
push
lret
adc
rcrb
rcrl
pop
xchg
sub
sbb
jge
loopne
pop
cwtl
mov
stos
push
shll
int
xor
pop
lock
sarb
movsb
loopne
mov
daa
std
add
add
mov
sub
lods
mov
es
cld
push
call
pop
and
adc
mov
incl
das
xor
stc
xor
sbb
bound
cmc
inc
dec
rol
nop
pop
std
push
fmuls
lods
or
dec
push
cmp
pop
sbb
scas
nop
sbb
inc
pusha
iret
js
movb
or
fimuls
loopne
lods
or
repnz
or
movsl
sub
sub
data16
lcall
xchg
stc
cmp
jmp
scas
cmpsl
add
cld
popa
dec
pop
pop
push
cmp
push
add
dec
sbb
pushl
cs
call
in
xchg
adc
sub
add
sub
jp
decl
dec
or
sbb
sbbb
clc
in
mov
jle
cmpsb
nop
cwtl
mov
cli
shl
pop
xor
add
adc
outsb
call
pop
and
inc
inc
vmwrite
stos
inc
ss
cmp
inc
xchg
jg
and
cmp
insl
mov
and
xor
sbb
jbe
xchg
push
decl
sti
push
iret
movsl
fisubl
push
mov
popa
sbb
cmp
adcb
pop
cli
mov
xor
sbb
aaa
mov
rcrb
pop
push
icebp
outsb
jmp
int
push
std
incl
pop
mov
mov
pop
inc
inc
aas
jp
movsl
xchg
xchg
mov
mov
ljmp
lods
cltd
mov
outsb
mov
sbb
movsb
sub
loope
std
pop
inc
xchg
mov
pop
stos
ss
push
mov
pop
mov
xchg
call
das
mov
out
push
orb
sbb
pushl
shlb
cmc
pop
pop
xor
adc
shll
aad
fs
neg
sub
or
cltd
mov
mov
mov
mov
adc
imul
adc
ss
andb
cltd
mov
mov
adc
mov
and
stos
ret
pop
cli
push
shl
lods
cli
xchg
inc
adc
mov
rcll
cmpsl
rclb
sti
fwait
xchg
push
ljmp
push
je
std
xor
ficoms
dec
fs
add
pop
rorb
fxch
inc
insl
dec
jae
sbb
insl
loopne
dec
sub
pop
mov
call
adc
stos
cmp
loope
mov
cmp
les
sbb
mov
adc
adc
sub
xchg
sbb
rcr
and
incb
rclb
inc
or
test
in
rolw
push
pop
xor
call
loopne
add
or
movsb
movsb
lock
mov
push
lret
test
push
pop
push
rorl
push
push
out
lock
pushf
xchg
in
cmp
sbb
nop
xchg
pop
js
dec
mov
repnz
adc
cltd
test
arpl
push
scas
in
test
dec
fldenv
ljmp
push
popf
push
stos
and
sub
sarl
inc
out
push
sub
pushf
mov
jno
movzbl
stos
inc
sbb
cmp
js
sbb
dec
push
inc
cwtl
cltd
cmpsb
ficoms
lds
test
lods
cmp
dec
mov
shl
ja
lods
popa
push
ljmp
mov
icebp
dec
aad
enter
adc
mov
dec
js
sbb
dec
outsl
add
dec
mov
shr
aad
cs
push
adc
xor
outsl
inc
stc
ror
push
jo
out
dec
in
loop
es
jecxz
stos
out
jmp
dec
xchg
jmp
das
jg
sub
mov
pop
fcoms
test
scas
idiv
mov
jp
add
cld
sub
cmp
outsb
in
icebp
or
outsl
ljmp
cmc
or
pop
adc
out
xchg
lret
mov
aad
xor
decb
cmp
loope
aam
pop
cmp
in
inc
or
outsl
mov
lock
addr16
mov
call
inc
lret
xchg
sbb
hlt
in
subb
fisubrl
sbb
cld
fsubrp
outsl
test
mov
mov
mov
mov
sub
shrl
dec
xchg
aaa
cli
ljmp
sahf
in
dec
aas
leave
daa
cwtl
loopne
push
idivb
outsb
test
mov
ret
pop
in
ficompl
in
cs
or
mov
mov
fs
les
mov
fnstcw
mov
hlt
imul
or
xlat
jmp
cmc
lret
dec
das
jg
incl
lret
mov
mov
sbb
out
popf
sbb
cmp
jg
pushl
cli
pop
mov
mov
out
sbb
dec
jmp
xchg
jle
lcall
aaa
bound
fsubs
push
aad
enter
dec
mov
loopne
cmpsl
cmp
call
pop
in
sarl
test
sbb
and
imul
fistps
inc
lahf
fsubrl
cmp
pop
cld
sbb
adc
ljmp
inc
dec
push
outsl
push
mov
ja
cld
jg
imul
jne
jmp
pop
les
out
das
jge
pop
lock
sub
ret
leave
ljmp
shll
mov
push
xor
shlb
mov
inc
pop
lock
inc
cli
push
daa
push
pushl
stos
xlat
mov
in
xchg
test
rcrl
xor
pusha
std
jns
xchg
lods
xor
incl
out
cmpl
js
push
mov
std
pop
std
jg
xchg
pusha
pop
repz
or
inc
add
add
dec
fidivs
lds
lock
movsl
xor
xor
xor
ror
gs
push
push
pop
fs
idivb
jecxz
cmpsb
sbb
sbb
into
sub
add
sahf
gs
pop
ljmp
mov
scas
push
mov
or
fmuls
cltd
cmp
jecxz
jp
ficomps
addb
dec
ljmp
add
add
scas
mov
mov
sbb
subl
sub
movsb
cmp
adc
popl
push
fildll
std
sub
mov
xor
pop
cmp
in
dec
fnstsw
cmpsb
add
dec
sti
cwtl
icebp
call
scas
sub
rol
jl
inc
ja
loopne
imul
cmp
push
clc
jg
fbstp
jne
movb
lret
push
out
push
mov
xchg
pop
out
push
or
mov
scas
dec
ficomps
xor
cmp
lock
inc
daa
int
fimull
xlat
addl
mov
stos
aam
fs
sbb
inc
sti
mov
adc
xchg
xor
ret
jnp
lods
jge
enter
outsl
pop
inc
push
cmp
adc
mov
xchg
xchg
ljmp
inc
and
pusha
and
and
repnz
push
call
inc
jge
jle
cmc
ss
adc
scas
call
mov
sbb
cmpsb
push
movl
push
pushf
add
hlt
or
ds
call
movsb
sahf
movsb
dec
and
ret
push
xor
iret
inc
in
or
pop
push
xchg
mov
inc
scas
fcmovu
mov
pop
jnp
add
inc
clc
jg
mov
add
adc
lods
xchg
add
repnz
push
call
shlb
imul
pop
adc
push
std
jg
and
dec
adc
adc
pop
scas
pop
and
pop
xor
dec
pop
lds
repz
in
xchg
pop
cli
call
aaa
lods
dec
movsb
xchg
iret
dec
mov
mov
adc
cld
divb
mov
rcrl
push
mov
std
subb
mov
fwait
ret
jge
out
int
lods
daa
imul
or
adc
pop
loopne
xor
lods
jg
or
inc
rorb
and
decl
cld
in
aam
pop
in
in
das
adc
mov
clc
add
loop
inc
es
mov
push
scas
or
pusha
enter
fdivr
pushl
xchg
arpl
jbe
ljmp
les
sub
xchg
jg
gs
pop
mov
pop
jge
sub
sarl
xor
and
aam
push
int3
out
aad
adc
test
pop
xchg
push
icebp
pop
inc
add
movsb
das
jg
inc
xchg
xor
mov
or
and
das
cld
mov
xchg
outsl
cs
adcl
enter
addr16
jnp
mov
mov
aaa
aas
dec
popf
jge
stc
in
mov
lret
lret
mov
push
push
leave
loope
daa
xchg
xchg
test
rorb
inc
dec
popa
add
mov
xor
mov
in
add
push
mov
pop
mov
fisubrl
adc
pop
push
push
jp
cmp
mov
sub
adc
rorl
mov
pushl
xchg
popf
insl
jne
mov
loop
dec
stos
mov
xchg
mov
pushl
sti
xchg
setnp
xchg
cmp
jo
mov
jle
mov
xchg
aad
sbb
mov
mov
cltd
push
mov
mov
xchg
addr16
nop
jo
pop
int3
and
pop
cmp
pop
add
jl
jge
imul
or
ljmp
int
pop
push
jmp
das
mov
hlt
popf
xchg
popa
add
add
mov
push
push
inc
cmpsb
xlat
mov
std
mov
into
mov
inc
sbb
jmp
adc
xor
dec
push
in
mov
repz
or
xlat
pop
jne
pusha
push
cld
dec
jge
or
loope
cs
clc
dec
and
mov
fstpt
lcall
test
movsl
sbb
sbb
and
movsb
inc
es
inc
pop
pushl
int3
call
mov
mov
xchg
movb
xchg
sarb
lret
into
fistps
sub
aas
rolb
mov
jge
dec
in
enter
and
aam
push
into
jecxz
sub
cmpsb
inc
test
fmuls
and
add
insl
data16
hlt
cmc
mov
gs
mov
js
bound
cmp
fisttps
jg
andl
popa
ret
jno
push
in
les
in
sahf
add
outsl
mov
sbb
iret
icebp
mov
aam
pop
enter
lcall
lahf
jno
out
cs
leave
aam
ret
fistl
pop
cmpsl
sbb
mov
call
fcoml
fisttpl
gs
lret
bnd
jg
pop
fadd
lret
mov
add
mov
bound
enter
and
push
ret
mov
xchg
out
test
dec
popf
loope
pop
ljmp
arpl
cmp
and
cld
fistpll
andl
inc
icebp
jge
imul
mov
nop
xor
sbb
icebp
or
hlt
and
cli
jmp
repnz
push
shr
mov
add
push
cmpsl
lods
pop
mov
arpl
scas
les
mov
xchg
pop
sub
xchg
rorb
inc
testl
call
xchg
mov
lahf
popf
fdivs
in
icebp
mov
int
jecxz
xor
int
decl
mov
dec
jae
xchg
outsb
push
cmp
cmp
cmpsl
pushf
jns
iret
decl
xchg
mov
mov
xchg
jbe
dec
nop
push
cmpsl
decb
gs
pop
xchg
fsubrl
lahf
in
adcl
mov
cs
dec
pop
or
mov
push
ret
jmp
jno
mov
and
adc
outsb
fdivrs
jne
das
push
and
mov
ljmp
outsb
out
xor
mov
addr16
lcall
xorb
add
mov
in
call
lcall
in
cs
dec
pop
fisubrs
dec
out
in
dec
daa
in
call
mov
data16
out
arpl
js
mov
shrb
in
mov
imul
jno
xchg
jbe
sahf
mov
bound
cmp
lcall
stos
sub
xchg
out
ret
xchg
hlt
or
pop
data16
rclb
lret
fptan
inc
mov
lret
push
jmp
mov
sub
shl
jg
test
pop
pop
jbe
fidivs
pop
adc
lds
aas
loope
xor
in
fnstsw
lret
mov
mov
outsl
mov
jecxz
inc
stos
lods
mov
mov
pushl
sub
jmp
ds
call
add
jae,pn
out
fisttpl
flds
mov
xchg
stc
add
push
jl
fdivl
xor
pushl
lret
outsb
fidivrs
jae
adc
xor
jbe
nop
popf
bound
into
stc
out
jb
jecxz
dec
stos
jnp
push
pop
xor
cmc
ss
mov
hlt
and
stc
jmp
ret
mov
es
lds
cmpsl
xchg
aad
xorl
scas
aam
jmp
jl
pop
shrl
js
or
dec
clc
inc
mov
xchg
es
pop
jb
xor
jne
mov
and
mov
jbe
fwait
mov
push
fidivl
movsb
cmpsl
in
push
stos
je
mov
lret
mov
rolb
lods
or
and
jle
aad
aas
stc
jmp
add
cs
push
mov
xlat
stc
sbb
ljmp
mov
xlat
sahf
push
mov
cltd
mov
sub
repnz
sub
xor
imul
pop
xchg
push
push
scas
in
push
gs
mov
decb
and
adc
sbb
ljmp
out
cs
dec
in
cs
lcall
jmp
and
test
jle
fmuls
or
pop
xchg
mov
dec
pop
push
lahf
inc
add
xor
lea
xor
sub
in
mov
icebp
dec
and
xchg
push
outsb
push
and
clc
lea
mov
fcmovb
cmpsl
jl
ds
scas
insl
aas
stc
mov
xchg
add
lods
jo
dec
pop
scas
mov
call
mov
cs
das
es
mov
lock
and
jmp
jbe
and
lods
and
call
clc
mov
repnz
pushf
jp
inc
inc
frstor
dec
pop
pop
mov
shlb
aaa
test
lods
inc
inc
dec
mov
ljmp
cmpsb
push
mov
jbe
movsb
inc
inc
xchg
mov
fsubs
push
movsl
push
jg
jecxz
fisttpl
inc
pop
push
xchg
push
ret
out
mov
scas
or
outsb
ljmp
call
cmp
sub
loope
cmp
frstor
dec
stc
jbe
lcall
and
movsb
stos
in
inc
stos
or
dec
orl
out
incl
repnz
rclb
push
push
cmc
dec
xchg
sarb
jo
cs
cmpsb
test
rcr
cmp
aaa
mov
cmp
cmp
push
cmp
push
pushf
cmp
mov
cmpl
cmp
pop
mov
ljmp
aas
mov
aas
add
adc
push
xor
xor
xor
xor
sar
jmp
xor
imul
xor
xor
cmp
inc
pushl
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
test
mov
in
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
pushl
xor
xor
ss
pop
aaa
adc
xor
inc
lcall
xorl
xor
xor
movsl
xor
xor
xor
push
mov
xor
xor
xor
aaa
and
loope
jmp
mov
data16
jae
jl
test
sarb
cmp
mov
sbb
and
popf
cmp
pop
cmp
out
sbb
pop
outsl
loopne,pt
in
ds
jl
mov
or
aas
stos
aas
mov
shlb
call
pop
xor
xor
xor
xor
jl
mov
xchg
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
jne
xchg
scas
xor
imul
xor
pushl
xor
xor
xor
xor
xor
cmp
xor
lcall
push
ss
enter
push
aaa
mov
aaa
fwait
aaa
movsl
aaa
mov
cmp
cmp
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
decl
xchg
xchg
cmp
cmp
cmp
mov
aad
add
or
aas
pusha
imul
aas
imul
aas
ja
lea
jns
aas
scas
aas
hlt
aas
fdivr
mov
ljmp
scas
xor
xor
add
cld
xor
shlb
xorb
xor
and
lcall
xor
dec
add
fcomip
call
xor
xor
xor
xor
xor
imul
mov
xor
test
outsl
lock
dec
ss
call
mov
outsl
sub
les
fidivs
pop
cmp
xor
inc
cmp
aaa
mov
cmp
xchg
mov
push
cmp
jae
jp
pushl
stos
sarl
idivl
cmp
inc
cmp
pop
cmp
mov
pushf
cmp
cmp
cmp
mov
stc
cmp
cmp
cmp
and
das
cmp
cmp
jbe
add
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
imul
pushf
cmp
cmp
ds
ds
jmp
imul
ds
fdivrl
add
sub
xor
cmp
pop
aas
test
mov
mov
inc
inc
loopne
dec
xchg
clc
mov
mov
xor
xor
xor
dec
xor
and
add
ja
cmp
cmp
cmp
and
cmp
cmp
cmp
pop
ds
pushl
insl
loop
out
stc
ds
or
adc
adc
aas
inc
aas
dec
aas
push
jno,pn
sarl
popa
mov
rorb
in
sarb
hlt
or
and
daa
xor
sbb
dec
xor
pop
xor
jge
xchg
xor
xor
xor
xchg
fnsave
cld
pushl
xor
push
xor
jp
nop
xor
push
xchg
jg
inc
shll
lret
xor
popl
int
repnz
aaa
lds
ss
lds
fbstp
out
inc
aaa
push
outsl
sub
push
ret
and
cmp
int
incl
cmp
cmp
ja
jg
mov
mov
mov
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
inc
cmp
clc
ljmp
imul
xchg
cmp
cmp
cmp
cmp
cmp
outsl
mov
cwtl
cmp
adc
mov
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
imul
mov
gs
xor
std
aas
jnp
testl
loopne
scas
aaa
cmp
shlb
pusha
out
mov
add
push
add
in
jg
xor
jns
mov
cltd
add
mov
cltd
aas
pop
pop
popf
rcrl
pmulhuw
cltd
cmp
popf
fstps
cltd
cmp
add
out
aas
leave
inc
add
jl
add
mov
sbb
or
add
mov
loopne
daa
pop
loope
or
pop
js
pop
xor
cmp
mov
pusha
pop
cmp
push
xor
add
cs
cmpb
or
nop
jmp
jge
push
cltd
or
packuswb
and
add
cmp
jnp
scas
add
jae
mov
ret
jb
inc
add
jae
daa
jo
mov
adc
inc
lcall
test
mov
sarl
and
loopne,pt
and
add
jno
and
push
add
in
nop
add
push
enter
inc
and
add
add
xchg
add
ds
add
add
and
or
inc
repnz
and
cmpsb
in
pop
imul
add
pop
shll
xchg
shrb
pop
xor
in
sub
jl
and
and
push
inc
and
adc
add
cwtl
adc
and
add
inc
jo
and
inc
and
enter
jl
and
and
jb
aas
ror
xchg
sub
add
mov
adc
add
xchg
pop
repnz
rclb
add
sarl
insl
push
data16
insb
sub
push
pop
or
xor
adc
call
xor
out
inc
sahf
pushf
ret
xor
iret
or
add
add
xor
inc
sbb
lret
lret
inc
and
xor
in
adc
fs
xchg
add
jnp
adc
sbb
xor
xchg
adc
sbbb
or
repz
movsl
sub
mov
es
jle
and
add
and
mov
and
in
lahf
push
add
xor
adc
jle
and
and
ficoml
add
jns
in
addb
inc
and
jns
and
and
lahf
les
push
pop
mov
mov
or
movsl
or
sahf
pop
pushaw
jp
pushl
jno
and
add
popa
data16
lret
adc
adc
and
sahf
sub
push
popa
clc
leave
or
out
fcom
in
adc
pop
jae
movsl
mov
fcoms
add
ret
mov
ja
movsl
sub
push
xlat
fidivrl
jae
test
jmp
imul
fcomi
xor
push
sbb
shr
mov
dec
pop
pop
push
ds
pop
lock
sbb
pusha
push
loopne
clc
sub
hlt
xor
add
popa
xchg
push
jno
mov
jmp
lcall
xchg
adc
and
cld
inc
or
addl
pop
push
in
mov
rcr
pusha
out
bound
loopne
sbb
jnp
ss
ficomps
andl
mov
sub
leave
and
and
decb
sbb
les
ja
add
add
bound
imul
push
xor
fs
and
dec
mov
xchg
gs
insl
jae
xchg
gs
ret
je
insb
sbb
dec
into
bound
icebp
inc
jg
mov
xor
or
rorb
in
loopne
loop
dec
shrl
inc
cwtl
gs
dec
shll
insb
gs
xor
dec
popa
insl
gs
sub
mov
faddl
das
out
aad
fldenv
shl
pop
inc
jns
incb
push
cmpsb
mov
cmp
cmp
cli
and
sub
or
and
dec
call
lds
or
sbb
cmp
jno
lea
push
nop
cmp
mov
jmp
mov
and
mov
and
nop
in
or
jp
nop
in
es
fdivrs
lea
dec
aam
add
sbb
adc
mov
int
lods
or
negb
pop
jno
les
fistps
pop
dec
xor
enter
lods
xor
sub
pop
pop
or
and
or
dec
inc
inc
xor
jnp
cmp
sbb
sbb
rorl
leave
ret
and
xchg
xchg
jp
clc
std
inc
push
int3
shlb
mov
pop
or
mov
mov
sbb
inc
inc
xchg
push
icebp
push
std
push
and
in
ljmp
dec
enter
mov
pop
mov
cmp
jecxz
xor
cli
aaa
inc
add
cmp
jl
out
lock
ja
cmp
inc
and
hlt
and
scas
or
imul
lret
mov
jl
pop
mov
adc
fisttpl
mov
mov
sub
jb
outsl
outsb
outsb
and
je
insl
pop
push
mov
icebp
repnz
aad
adc
insb
xlat
popa
cli
jne
lret
mov
outsb
arpl
fstps
loopne
loop
hlt
xlat
xor
mulb
idiv
dec
stc
inc
sub
cld
insl
cli
je
sti
xor
call
insb
mov
lahf
addr16
mov
adc
hlt
sub
dec
pop
iret
dec
mov
dec
gs
leave
jbe
daa
daa
lret
int3
adc
push
addr16
push
into
jp
jae
jb
rcl
rcl
stos
cmp
sub
inc
shll
sar
imul
add
aas
std
sub
jae
enter
test
bound
ss
std
mov
sub
or
pop
jns
std
inc
std
js
pop
insb
das
mov
pop
pushf
pop
loop
jne
add
jmp
mov
jns
in
sti
mov
sti
mov
fbld
push
push
inc
sub
pop
dec
dec
xor
push
insl
push
adc
dec
push
jge
es
cmpsl
rolb
mov
sbb
add
jne
or
jp
mov
lds
pop
ljmp
push
adc
jmp
sbb
dec
push
decl
jne
decl
add
adc
sub
mov
in
push
call
sbb
inc
inc
and
jmp
fs
test
mov
pushf
gs
xchg
mov
xchg
dec
adc
mov
enter
lcall
pop
xchg
push
and
inc
inc
inc
mov
arpl
push
cmp
fcoms
xchg
std
xchg
std
sub
xchg
std
lret
mov
in
mov
mov
mov
mov
lret
mov
mov
xor
shrb
sub
push
mov
addb
push
mov
dec
xor
sbb
inc
pop
sbb
xchg
or
xor
test
adc
fstpl
std
in
mov
xor
push
out
push
mov
addr16
xor
xlat
pop
repz
hlt
cmc
div
call
pop
nop
mull
jmp
jmp
xor
lret
lock
dec
mov
cmp
fs
xchg
xchg
shlb
xor
cltd
outsb
add
mov
ss
cs
or
push
fs
xchg
outsb
insb
popa
jne
xor
pop
xchg
arpl
or
mov
mov
jno
dec
rorl
imul
js
fists
gs
outsl
add
gs
lret
inc
push
iret
sarb
sbb
fs
out
call
in
out
std
push
xchg
push
add
jnp
out
pop
add
movsb
add
add
xor
out
in
add
les
xor
lret
call
xor
xchg
mov
rclb
fwait
cmp
inc
je
push
mov
mov
jge
xor
mov
inc
rcl
xor
arpl
je
or
or
movsb
imul
push
fmul
loop
sbb
repnz
pop
cwtl
or
out
sub
sbb
adc
fbld
jns
jo
pop
mov
sbb
repz
cmp
jle
dec
repnz
fisttps
aam
add
fmuls
adc
or
loopne
add
or
or
fsubrs
insl
fwait
sbb
add
es
enter
mov
shlb
testb
add
push
xchg
enter
sbb
rcrb
sbb
adc
dec
cmp
subb
adc
roll
push
stc
out
int3
jg
inc
mov
adc
cmp
sete
adc
pop
sti
in
cld
sbb
leave
pop
mov
push
stos
js
in
mov
mov
or
jo
add
cvtps2pi
xchg
mov
pop
pop
or
push
in
sti
inc
sbb
push
cmp
dec
and
inc
and
mov
and
stc
dec
xor
inc
and
cltd
adc
add
dec
adc
push
in
jns
inc
and
adc
push
mov
sbb
xor
mov
xchg
and
sahf
rolb
inc
and
pop
movsb
add
jbe
cmp
dec
ljmp
leave
xor
ret
xor
lods
data16
mov
mov
add
adc
arpl
or
jae
sub
mov
or
mov
js
loope
mov
push
pop
cwtl
inc
movups
and
add
xor
add
repnz
adc
push
inc
dec
shll
push
pusha
insb
xor
shll
test
dec
rorl
shl
lock
fisubs
ret
lcall
jb
inc
jae
dec
shll
jbe
dec
aaa
pop
shll
bound
stos
dec
shll
xor
add
add
mov
pop
xor
mov
xor
cmp
xor
pop
jnp
dec
jo
adc
xor
and
mov
insb
cmp
pop
or
xchg
sub
pop
out
outsl
mov
mov
popa
jns
jne
jae
xor
lods
or
jge
popa
dec
call
push
js
imul
mov
rcll
push
dec
inc
push
jg
jae
sub
push
push
dec
sub
xchg
dec
xchg
rorb
ret
and
mov
divb
sub
inc
adc
leave
test
xchg
sbb
xchg
dec
jae
xchg
movsb
inc
enter
cwtl
and
sbb
lods
sbb
pop
sbb
sbb
xchg
jecxz
rcll
or
add
adc
adc
pop
inc
and
xchg
add
lods
lods
or
sarl
jo
mov
or
sub
int
inc
or
cmp
addl
add
ss
movsl
sbb
push
rcr
mov
outsb
outsw
es
mov
lods
dec
sbb
pop
xor
pusha
pop
push
addr16
jl
mov
lret
lcall
les
push
mov
push
outsb
jb
pop
adc
add
inc
outsl
js
push
inc
lret
adc
jno
stos
pusha
add
and
movl
or
push
nop
and
lods
adcl
push
in
fcmovnb
shrb
dec
insl
insl
dec
jae
and
js
dec
frstor
pusha
adc
in
inc
add
je
pusha
add
punpcklbw
mov
popa
add
jns
popf
insb
mov
dec
es
and
or
cld
aaa
pop
xchg
test
mov
adc
pop
cld
add
xor
mov
dec
sbb
xor
cmp
enter
lcall
dec
and
imul
jge
add
and
or
mov
addl
mov
mov
add
popa
jecxz
add
ss
scas
inc
imul
push
push
add
pop
aam
ret
dec
adc
and
and
mov
bound
cmp
mov
and
inc
jbe
pop
xchg
add
adc
jp
in
adc
jne
or
sbb
sbb
adc
mov
adcb
inc
push
adc
dec
int3
jnp
addr16
dec
fadd
fmuls
jae
jo
fisubrs
cmpsb
xchg
outsl
pop
jns
pop
mov
shll
insb
js
repnz
hlt
or
pop
mov
jecxz
je
pop
out
stc
cmovno
imul
outsl
sbb
jae
sub
add
xor
add
insb
adcb
xor
or
lret
pop
pop
nop
jnp
xor
or
add
xlat
adc
cmovns
cmp
dec
mov
jae
movsb
fildl
pop
or
outsl
add
pop
out
pop
dec
inc
addr16
pop
jecxz
mov
or
or
jnp
movsb
jmp
cmp
xor
jecxz
pop
mov
scas
inc
and
xor
jae
and
cmp
jo
popa
jns
popa
and
xchg
push
addr16
outsb
lods
arpl
inc
imul
and
pop
push
loope
jb
mov
add
push
pop
mov
cmp
fnstenv
xor
fldenv
fisttpl
xor
insb
popf
xchg
mov
dec
or
lds
add
pop
adc
shrb
jnp
pop
xor
xor
je
mov
pop
fs
fsubs
or
daa
dec
dec
and
xlat
outsb
xchg
mov
lea
adc
dec
fcomps
fs
outsl
pcmpeqw
test
dec
je
and
jne
pop
dec
xor
pop
imul
arpl
in
push
mov
jmp
outsb
push
insb
cmpsl
xchg
out
add
add
add
mov
outsl
aad
es
xor
xor
xor
xor
mov
mov
push
xor
jle
lea
stos
xor
xor
xor
xor
mov
sub
xor
xor
pop
lods
lea
cli
lea
xor
insl
rol
mov
aam
out
divb
xor
xorb
push
mov
ss
jg
mov
inc
pop
mov
fistps
mov
cmp
fists
xchg
jmp
cmp
cmp
cmp
cmp
cmpl
cmp
lods
outsl
inc
cmp
cmp
cmp
lret
cmp
cmp
out
cld
sub
clc
cmp
clc
jo
cmp
dec
loop
jp
xchg
xchg
xor
push
std
outsl
inc
pop
xor
jne
jg
mov
lahf
xor
xor
xor
inc
mov
xor
fnstenv
outsl
mov
push
ss
ss
ss
divb
and
aaa
mov
fwait
jmp
sub
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
xor
add
xor
xor
add
fmul
mov
adc
faddl
xor
add
popa
sub
movsb
xor
xchg
sbb
xchg
push
arpl
and
lods
std
cmp
pusha
add
ss
mov
mov
mov
jb
sbb
in
outsl
pavgw
andb
add
dec
call
dec
add
ret
mov
test
or
jbe
flds
jp
pop
pop
dec
push
mov
and
adcb
dec
adc
test
inc
addb
fsts
xor
dec
cmp
popf
add
add
add
adc
cwtl
fs
xchg
push
push
mov
or
add
mov
test
and
mov
mov
cmp
aaa
fs
les
pop
and
inc
add
push
leave
and
or
xorb
and
add
nop
xor
xchg
adc
dec
mov
push
or
jb
cmp
add
push
test
sub
add
es
mov
dec
add
rclb
xor
sbb
clc
pusha
mov
andb
mov
add
add
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
