insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
sbb
xor
cmp
push
sbb
xor
daa
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
clc
add
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
xor
inc
mov
jl
outsb
mov
ja
mov
and
dec
mov
dec
dec
arpl
mov
inc
mov
daa
sbb
mov
popf
dec
dec
mov
mov
push
imul
mov
add
negl
dec
loopne
push
and
add
jl
and
movsb
scas
add
add
mov
or
and
fcomps
pop
push
test
les
pop
shlb
and
and
pusha
pop
out
enter
add
bound
jg
rcr
sbb
push
add
fs
je
push
mov
ss
in
xchg
outsb
adc
and
cs
push
push
pop
shlb
ss
lcall
xor
imul
data16
lahf
daa
xor
add
and
sub
gs
outsl
arpl
pop
sub
xchg
xor
ja
out
out
push
sbbb
popl
shll
clc
sarb
lcall
sahf
shll
or
dec
inc
mov
xchg
dec
xor
shl
or
imul
cmpsb
imul
insb
lcall
cmp
push
dec
rorl
cmpsb
pop
ss
loop
add
sbb
lcall
bound
imul
xor
cmpsb
mul
mov
shll
push
inc
imull
sub
clc
mov
dec
xlat
insb
cmp
and
pop
cwtl
test
mov
xor
shll
fsub
lock
sub
data16
ret
or
das
rol
cmp
xor
aam
call
popf
scas
adc
add
inc
xor
shll
push
pop
push
fstpt
movsb
cmpsl
in
mov
jmp
jle
cmpsb
imul
in
fmull
rolb
mov
add
jge
cmpsb
mov
subb
xor
out
hlt
push
es
xchg
add
lcall
out
adcl
je
insl
or
jmp
idivb
notl
fs
sub
dec
je
jo
jne
fdivrl
fstpt
outsw
inc
aaa
dec
jo
outsb
push
jb
adc
adc
dec
add
jl
inc
inc
hlt
and
outsl
daa
mov
add
xchg
pop
or
add
rep
add
aaa
sbb
pusha
add
xor
add
and
jnp
push
pop
pop
add
xchg
inc
add
rolb
add
filds
ret
sbb
and
lret
add
or
push
and
add
mov
xchg
int
add
xor
pop
and
xchg
mov
add
pop
rcr
adc
in
data16
and
add
lret
mov
dec
es
xchg
lea
pop
xchg
mov
xchg
pop
inc
fildl
or
add
and
and
fsts
pop
and
int
das
xor
mov
pusha
adc
ud2
push
add
fucom
inc
mov
ja
mov
mov
arpl
je
jne
jb
gs
sbb
jmp
js
push
gs
pop
sarb
push
inc
jb
push
and
ja
addr16
jg
testb
push
jae
and
addr16
xor
shlw
sbb
mov
add
sub
and
sub
jp
pop
cs
add
pop
sub
aam
gs
popa
insl
xchg
cli
test
push
push
inc
push
inc
dec
adc
outsl
data16
imul
outsl
ja
and
inc
jne
jb
je
sub
jae
outsl
outsb
dec
stos
ja
jb
inc
popa
jb
push
aas
push
fbld
pop
jle
gs
jo
imul
insl
insl
and
lea
dec
popa
or
sub
push
or
dec
inc
and
add
push
ljmp
inc
add
or
out
lea
and
outsl
jne
jae
adc
push
andl
push
sbb
add
pop
fwait
dec
push
push
lea
jp
xchg
lahf
cmpsl
jno
mov
out
insl
push
cwtl
mov
xor
xlat
stos
pop
shrb
out
mov
mov
fwait
je
lahf
push
xchg
sbb
push
and
inc
cmp
outsl
jmp
shl
int3
mov
jns
mov
mov
idiv
mov
sub
mov
mov
lea
into
shl
mov
dec
es
mov
mov
or
ret
fiadds
adc
or
fcmovnu
fisttps
and
mov
aaa
stc
call
movb
mov
mov
push
and
fistps
fildll
push
mov
outsl
sub
sbb
lock
lea
push
push
push
inc
add
cs
cmp
and
adc
movsb
sbb
adc
or
lret
or
or
adc
and
adc
or
filds
ret
mov
mov
pop
out
out
out
fcmovnu
mov
mov
daa
sub
addl
in
cmpsb
stc
add
imul
je
daa
push
fwait
cmp
insl
ja
fwait
cmpsl
mov
adc
repnz
insl
daa
adc
mov
pusha
sub
jbe
or
cmp
frstor
fucom
adc
mov
repnz
insl
insl
sub
rcr
cmp
es
adc
out
popf
and
outsb
sahf
inc
clc
addr16
mov
roll
mov
leave
mov
daa
jo
mov
repnz
jne
std
loope
mov
and
push
mov
or
mov
mov
xor
mov
cwtl
mov
cmp
mov
repz
insb
ja
addr16
pop
filds
int
adc
mov
sbb
add
daa
fs
enter
out
fistl
outsb
dec
mov
sub
mov
arpl
in
dec
add
jnp
pop
sbb
stos
add
movsb
loope
add
mov
xchg
outsb
cmp
mov
ja
pop
adc
mov
cmp
ja
add
dec
inc
mov
mov
dec
jge
mov
mov
mov
inc
movl
repz
hlt
dec
sbb
div
push
mov
mov
sbb
lods
lods
popf
popf
cmp
xchg
je
dec
mov
repz
mov
add
mov
arpl
cmp
icebp
popa
fnstenv
idivl
sub
mov
mov
adc
mov
or
out
inc
arpl
cmp
mov
cltd
jno
ret
inc
fcmovne
adc
or
out
or
mov
std
sub
jge
pop
daa
xor
mov
xor
mov
in
cmp
test
fists
arpl
dec
sbb
getsec
ja
shl
imul
jecxz
cmp
loope
xorl
mov
repz
lahf
xor
lods
imul
jmp
pop
arpl
sbb
xchg
and
sbb
outsl
add
stos
push
pop
mov
or
insl
outsl
add
fisttpl
insb
daa
es
test
mov
mov
fisubrl
jmp
out
scas
push
lods
mov
push
add
test
add
jo
and
fnstsw
jbe
imul
iretw
daa
bound
adc
sbb
std
ljmp
das
fistps
pusha
lret
and
jge
xchg
insb
out
sub
and
addb
lcall
add
jnp
out
js
cmpsl
std
dec
cmp
addr16
mov
or
cmp
fisttpll
cmp
fs
sarb
daa
bound
add
loope
add
cmp
sbb
jp
sbb
mov
adc
adc
leave
aaa
in
mov
cld
jnp
loopne
into
js
ret
dec
popf
inc
aas
mov
fs
jge
inc
in
and
pop
pop
pop
popa
sbb
fstpt
mov
adc
jmp
mov
and
jg
aad
aam
mov
ret
data16
fcmovnbe
rclb
into
xlat
cmp
and
test
mov
mov
into
and
mov
stos
ja
dec
jmp
xor
push
xor
adc
xor
lds
jmp
stc
mov
jmp
test
inc
add
push
add
lret
cmp
add
or
or
cmp
sbb
add
push
cmp
adc
add
lret
xor
fs
aas
or
aaa
push
sub
and
aam
pop
xchg
sbb
cmp
xor
xor
sub
sub
xchg
fildl
enter
add
dec
arpl
arpl
mov
dec
lahf
in
mov
sub
add
cli
sub
mov
xchg
cmp
iret
push
mov
cmc
test
and
mov
sub
mov
andl
orb
out
push
insb
call
push
mov
sarl
push
inc
fistl
add
mov
cmpsl
in
push
push
call
mov
add
movb
mov
scas
sub
fstp
push
movb
inc
mov
inc
add
in
mov
nop
push
inc
inc
call
lds
inc
imul
stos
ficomps
ret
jmp
push
ret
mov
insb
fcmovne
mov
xor
push
lock
sbb
mov
divb
or
call
or
mov
add
insl
and
dec
je
fstpl
push
movzbl
rcrl
call
add
mov
andb
insl
mov
or
push
aas
test
pop
inc
mov
adc
adc
mov
popa
adc
outsb
and
xor
adc
and
pop
repnz
dec
sbb
and
les
add
enter
in
add
int3
adc
push
and
xchg
mulps
mov
add
jo
inc
mov
and
aas
or
and
mov
cmp
or
jl
cmp
push
in
scas
gs
push
mov
negb
jo
mov
ret
cmpw
jne
jo
add
dec
cmp
lret
xorl
addb
xor
adc
pushf
into
jno
and
mov
adc
push
pusha
adc
xor
adc
enter
add
pusha
jne
or
jno
push
sbb
cmp
fimuls
xchg
in
push
adcb
jg
add
jge
push
push
mov
or
push
sbb
fldcw
push
push
push
ret
or
pop
and
pop
mov
sub
or
sub
xor
xor
sbb
sub
push
aad
adc
sbb
cwtl
cld
pop
inc
push
fdivs
jge
movsl
add
mov
in
int
movsl
movsb
mov
mov
fimuls
add
adc
rep
subb
xchg
jno
movsb
ror
mov
inc
mov
cmp
movsb
pop
dec
pop
mov
repnz
call
xor
rolb
or
sarl
push
mov
das
std
mov
add
mulb
xor
inc
cmp
or
sbb
stos
icebp
push
lock
nopl
aas
cmp
ja
inc
loop
adc
lods
test
imul
or
add
add
mov
xchg
add
sbb
popa
test
divl
pop
pop
pop
or
cmp
inc
lock
fmuls
or
test
pop
testl
dec
adc
sarb
cmp
adc
insb
insb
sbb
jbe
mov
mov
cwtl
mov
jne
sub
sub
jbe
jmp
pop
call
adc
dec
fcmovnbe
jne
dec
lock
popa
inc
inc
inc
inc
lcall
das
cmp
pop
jb
jbe
pop
fdiv
testb
cmp
jne
xor
add
mov
mov
fistl
add
into
insb
movsl
ficoms
andw
lods
popf
jne
cld
subl
dec
cld
pop
jb
add
xlat
movsb
push
jb
mov
call
sub
std
push
sub
int
dec
adcl
out
movlps
mov
std
xchg
out
mov
lea
jbe
pop
mov
repz
and
xlat
out
fcoml
and
cmp
dec
out
fildl
cld
call
pop
sarl
or
setle
mov
jo
adc
or
movsl
and
add
adc
jbe
push
and
fucomp
inc
call
out
or
sub
and
leave
daa
nop
pcmpeqb
and
pop
xor
adc
lahf
xchg
pop
mov
and
mov
and
stc
push
shrl
mov
nop
dec
repnz
xor
adc
cmp
cmp
xor
adc
mov
xchg
xor
adc
mov
cbtw
cmp
adc
jno
push
clc
gs
imul
xor
push
mov
movsb
mov
pop
jmp
adc
cmp
rcrl
addb
push
popa
cmp
push
cld
add
jle
xor
cmp
jle
outsl
lea
xchg
dec
sbb
in
ja
or
cld
dec
call
adc
je
test
cmp
push
mov
inc
hlt
mov
push
in
in
pop
push
jne
cmpl
daa
test
add
inc
cld
jne
xor
fmull
inc
clc
xchg
cmp
hlt
cmpsl
inc
inc
fsub
jmp
andl
outsl
mov
sbb
addr16
inc
cmp
mov
sub
adc
enter
inc
dec
enter
adc
adc
fs
cmc
pop
fiadds
add
pushf
shlb
aaa
ret
add
into
bound
mov
movsl
jbe
push
and
outsl
push
add
push
jmp
and
les
xor
jp
call
add
xchg
fbstp
ss
mov
out
sub
pop
inc
idiv
adc
icebp
push
or
jg
sbb
jmp
and
stos
mov
add
sarb
enter
add
adc
nop
adc
leave
jg
idivb
cmp
adc
ret
or
stc
fcoml
add
xor
xor
loopne
into
scas
lock
adc
or
inc
mov
xor
mov
fistps
and
cmp
fs
ja
xor
mov
cli
test
jbe
cmpb
aas
movb
inc
movsb
jb
aas
cmp
in
fdivp
mov
imul
add
mov
sub
add
ljmp
mov
jmp
leave
popa
adc
and
test
mov
adc
inc
jge
mov
adcl
rol
lea
jg
das
fneni(8087
aas
cmp
jae
incl
lret
shr
add
adc
leave
je
inc
push
mov
push
sbb
jecxz
imul
mov
mov
jne
adc
sbb
rcl
mov
in
jo
mov
add
loop
or
adc
or
outsl
loop
dec
jne
xor
push
xor
push
mov
sar
pushf
stos
pop
cs
inc
fstpl
or
jbe
or
mov
mov
cmp
and
push
jl
and
or
stos
mov
mov
adc
xlat
sbb
shr
mov
add
std
in
ja
repnz
not
and
testl
mov
pop
js
cli
test
push
js
mov
sub
mov
or
fisubs
mov
or
lea
shr
shl
call
mov
sub
mov
and
not
jle
psllq
mov
or
or
add
dec
daa
pop
jg
jg
insl
fildll
mov
sbb
aad
mov
push
lods
loop
mov
push
push
push
call
fcomip
shlb
push
jo
and
adcb
sub
xchg
rcr
mov
pop
ficoms
add
loopne
fiaddl
pop
popa
xlat
or
mov
jo
cld
sbb
inc
xor
fisubl
imul
fistps
sbbl
test
jle
int3
xor
add
add
mov
xor
add
sbb
in
popf
adc
jne
les
repz
pop
fidivs
out
fcomp
cwtl
subb
addl
repz
imull
pop
rcr
das
pusha
adc
into
das
das
pop
scas
testl
ret
repz
cmpsb
pop
les
subb
add
push
lcall
movups
test
sub
sub
fcom
add
or
fdivrs
dec
push
xlat
mov
outsl
mov
adc
cmp
stc
xor
or
or
lock
fcoml
lods
es
fisttpl
and
fidivrs
cmp
enter
das
push
mov
cmpsb
loopne
sti
loope
mov
xor
dec
sbb
xchg
pop
call
ficomps
popa
adc
add
or
cs
loopne
ljmp
cmp
and
aad
aam
pop
bound
cs
sbb
shl
add
and
cld
inc
test
dec
cmp
inc
shlb
pop
or
fadds
hlt
push
and
rcrb
clc
jb
repz
pop
pop
es
and
lcall
and
and
sub
sub
stos
mov
add
out
call
sbb
icebp
imull
mov
repz
pop
adc
call
xlat
lods
arpl
fcmovb
mov
pusha
mov
push
adc
add
insl
sbb
and
pop
and
lcall
jge
outsl
addr16
mov
fnstcw
out
cmp
xor
adc
push
stos
int
lods
pop
mov
mov
mov
out
loope
out
lret
outsl
pop
repz
loopne
ret
inc
enter
mov
pop
aaa
or
mov
push
fbstp
inc
fimuls
xchg
xchg
out
aad
adc
test
cmp
call
jns
adc
inc
loop
shr
or
xlat
lea
flds
fdivs
test
pop
mov
lock
aam
pop
in
mov
mov
daa
sub
aad
flds
outsl
pushf
mov
push
movl
xchg
dec
fisttps
sub
adc
or
xor
test
aaa
inc
cmp
jmp
add
test
in
pop
jbe
cli
mov
xor
mov
adc
pop
sahf
ja
js
lds
popa
popf
insl
adc
aaa
sbb
fbstp
or
in
mov
popf
std
mov
mov
mov
mov
mov
add
sti
in
insb
xchg
mov
fimuls
cltd
imul
mov
loop
fmuls
jl
int3
pop
pusha
dec
mov
outsl
lahf
imul
xor
push
jo
pop
lret
sarb
or
pop
mov
mov
jle
sub
jae
sub
fisubrs
mov
add
sbb
lock
cli
daa
mov
fsubp
sbb
fidivl
cmc
test
cwtl
fstpl
jae
adc
fidivs
test
js
pop
out
cmp
pop
sahf
add
or
push
aas
repnz
cmp
rcl
fstps
jmp
les
in
mov
divl
idiv
ss
in
mov
aaa
jp
jl
pop
je
dec
aaa
jl
xchg
pushl
or
aam
gs
lods
sbb
cmp
cli
mov
aaa
sbb
sbb
adc
pop
mov
sub
push
or
in
mov
or
int3
or
mov
push
or
bnd
inc
mov
stos
adc
lret
lock
hlt
add
push
fidivrs
mov
adc
xor
xor
sbb
mov
gs
sbb
rcrl
or
lock
int3
or
push
mov
pop
pop
or
ja
jno
sahf
pop
rorb
hlt
out
call
pmaxub
fwait
adc
in
rcrl
test
and
out
jmp
dec
xor
cmp
push
dec
jle
outsl
jecxz
pusha
jnp
push
jp
sbb
int
cld
xchg
stos
xor
sbb
out
jecxz
jp
inc
aaa
xchg
fcmovnb
cmp
mov
push
adc
add
mov
mov
jle
test
lret
jp
xlat
sbb
fstps
xor
cmp
loopne
mov
fiaddl
mov
and
lret
adc
repnz
repz
cs
int
xchg
roll
dec
mov
xchg
mov
pop
jge
xlat
pop
add
pop
movsb
mov
adc
or
rcrl
lods
xor
pop
out
sarb
xor
js
cmp
nop
mov
cld
cmpb
sarl
lods
mov
push
push
push
in
jle
jmp
pop
enter
push
insb
js
enter
adc
lea
insl
call
insl
cmpb
pop
inc
test
nop
iret
pop
pop
mov
insl
fbstp
into
ljmp
add
add
push
dec
jne
xchg
les
adc
sbb
sub
pushf
push
xor
or
add
lret
pop
inc
fistps
or
cld
call
sub
push
mov
push
push
into
lods
fstpt
or
dec
cmp
out
or
testb
mov
adc
xorb
mov
xchg
paddsw
int3
push
pop
mov
loopne
pop
int3
rolb
aam
call
out
lcall
lods
xchg
adc
bound
into
push
dec
popa
jl
or
jl
lahf
iret
call
gs
das
lock
int3
repz
bnd
hlt
gs
imull
jmp
lods
lock
pushf
mov
mov
mov
mov
dec
adc
call
scas
mov
jnp
ds
ss
mov
lods
mov
roll
mov
inc
lods
outsb
les
fimuls
xchg
inc
push
pop
mov
add
push
xor
push
subl
push
ds
push
out
inc
xchg
lret
lods
inc
add
dec
out
push
out
push
loopne
lret
mov
dec
inc
pop
mov
jge
clc
orb
xor
push
data16
les
jbe
cld
push
cmp
inc
jae
repz
cmp
pop
sub
push
push
sbb
inc
aas
rcrb
push
and
or
mov
and
jl
hlt
call
sbb
out
fisttpl
dec
push
push
adc
adc
leave
scas
mov
stc
dec
clc
loopne
add
xchg
je
sbb
xor
cld
or
cld
das
sub
push
jo
xor
les
adc
jnp
xchg
pop
push
mov
push
test
js
out
push
dec
add
mov
mov
jmp
jno
hlt
inc
mov
adc
push
sti
adc
cmp
and
jmp
sbb
adc
push
je
dec
dec
data16
popf
sti
cmpl
jne
pop
push
arpl
inc
add
cmp
add
mov
push
mov
je
mov
mov
push
jae
ret
dec
aad
sbb
aad
fiadds
pop
jbe
cmp
inc
addl
push
mov
faddl
fwait
ret
push
or
ss
repz
je
xchg
cmp
repnz
ljmp
dec
or
inc
add
je
cmp
jne
push
xchg
scas
cmp
in
pushf
sets
push
or
add
fldln2
and
jbe
ja
loopne
fs
xchg
ret
mov
adc
xchg
xchg
add
loopne,pt
add
xor
dec
inc
ljmp
cmp
jne
inc
mov
push
faddl
xchg
push
ja
xchg
insb
sub
xchg
insb
imul
in
mov
xchg
xchg
ret
mov
scas
mov
dec
push
scas
sbb
jae
mov
inc
fsubp
add
mov
cmp
pop
push
and
pop
mov
and
rorl
xor
jne
mov
pop
cmpsl
jo
pushl
sub
shll
sub
int
adc
cmp
add
adc
vpunpckhwd
inc
mov
add
fsubl
jg
std
and
imulb
xor
pop
cld
call
cmp
cmpl
push
mov
cmp
jae
inc
push
decl
jo
sti
out
int3
cmp
mov
mov
jg
fisubrl
cmp
jae
cmp
je
ret
pop
sbb
sub
int3
ds
cwtl
or
fistps
pop
mov
rclb
pop
adc
pop
pop
call
call
mov
insb
mov
cmpb
or
push
je
jmp
xor
shrb
mov
jecxz
mov
push
out
jmp
dec
fcompl
mov
pop
push
cmp
ss
mov
test
subb
faddl
jb
and
cs
sti
arpl
push
push
push
jo
push
pop
push
sbb
fwait
add
jb
fmull
scas
insl
mov
mov
mov
pop
cs
lret
mov
mov
mov
mov
mov
jbe
jb
mov
mov
sub
mov
xchg
gs
xchg
gs
insb
outsl
jb
mov
pop
gs
and
fidivl
gs
xchg
dec
test
mov
mov
loop
jecxz
pop
in
push
out
dec
sbb
inc
call
xchg
insl
xor
shll
jo
imul
sub
outsb
mov
ret
les
lds
imul
leave
lret
xchg
hlt
xchg
push
xchg
xchg
mov
push
cwtl
cltd
lcall
pop
pushf
adc
mov
insl
xchg
mov
mov
insl
mov
movsl
cmpsb
xor
test
push
test
es
cmc
div
clc
ds
or
hlt
cli
jns
lea
inc
add
pcmpeqb
rcl
or
or
pop
loopne
xor
xchg
adc
push
in
pop
aaa
sbbl
mov
add
loopne
clc
inc
leave
cwtd
ds
decl
mov
andl
dec
xchg
in
and
rolb
imul
enter
in
pop
push
xor
out
shrb
jge
lea
rcl
rcll
fs
jge
sti
pusha
ds
push
mov
push
mov
dec
out
mov
and
imul
mov
inc
push
xor
ret
insl
dec
mov
sbb
xchg
outsb
lds
inc
sub
pop
and
aaa
xor
test
les
ret
ret
jmp
sub
jmp
mov
nop
repnz
in
xchg
or
hlt
cli
cltd
aas
shll
add
lret
std
mov
sbb
clc
std
add
inc
sbb
jmp
cmp
xchg
sub
pop
push
xchg
mov
movsl
test
xor
hlt
hlt
push
ljmp
mov
shld
call
imulb
mov
mov
shl
aaa
mov
adcb
adc
and
adc
aam
inc
pop
pop
jle
fmull
cmp
sub
inc
mov
test
dec
or
out
adc
adc
or
cld
out
sub
sbb
xor
or
or
inc
adc
sub
mov
fnstcw
inc
adc
lds
or
inc
sbb
shr
adc
and
mov
ret
adc
add
or
mov
cmp
jl
jns
out
sub
ret
cmp
insb
out
jne
push
add
stc
or
lret
push
aam
dec
push
loop
mov
testl
fs
fwait
add
push
fs
outsb
mov
jl
in
pop
hlt
adc
cmc
or
adc
jmp
gs
outsb
push
xchg
cmp
cld
pop
xor
push
cld
je
mov
test
cld
cmpb
mov
jae
jp
clc
cs
and
and
push
insl
sub
sbb
in
cmp
and
cltd
adc
inc
int
jecxz
or
cmpsl
sub
stos
adc
inc
adc
adc
push
orb
sbb
and
orl
jmp
mov
decl
scas
outsl
scas
fs
loope
xchg
stos
cmpb
inc
mov
in
andl
call
les
add
mov
adc
sub
sti
cs
insl
mov
cmp
fs
ud1
xlat
cld
int3
cld
aaa
dec
outsl
imul
lods
imul
fdivl
lret
fsubs
ja
fildl
int
orl
jae
fbstp
xor
dec
shll
xor
orl
xor
sti
cld
std
insl
icebp
cmpsb
imul
mov
mov
mov
lcall
xor
mov
lcall
pop
pop
xor
jne
pop
enter
pop
lret
xchg
lods
les
js
jmp
outsl
outsb
xor
pop
xor
nop
cmpsb
inc
jb
icebp
repnz
shlb
jo
cmp
mov
push
scas
jmp
adc
sub
pop
pop
push
sbb
test
mov
and
push
xchg
pop
inc
mov
add
pop
push
hlt
xchg
add
mov
in
lock
xor
pusha
adc
mov
icebp
daa
clc
jmp
loop
andb
push
rolb
shl
dec
ret
jb
shrl
shlb
dec
shll
outsb
outsl
ja
inc
pop
mov
leave
or
xor
adc
mov
or
or
push
in
je
sub
int
je
dec
hlt
push
fs
xor
and
push
cmpsb
rorb
pusha
or
arpl
adc
ds
xor
or
imul
or
mov
add
call
rolb
shl
ret
call
pop
loopne
lock
jge
lds
and
jg
xlat
or
mov
rcrl
xchg
repz
retw
push
push
stc
inc
in
cmpsb
sbb
fs
lret
inc
and
adc
mov
pop
push
adc
dec
xchg
or
jne
xor
push
and
mov
xlat
lds
xor
pop
mov
push
inc
adc
add
and
repnz
icebp
lock
repz
lea
push
movsl
movsb
cmp
hlt
jo
add
pushf
nop
and
sub
xchg
std
dec
mov
test
scas
inc
adc
add
popa
push
mov
add
movsl
mulb
ja
push
add
pop
push
loop
mov
xchg
pop
add
jge
adc
movzbl
enter
div
cmc
ja
movsl
xor
test
push
push
and
push
cmpsb
pusha
adc
cld
and
lods
add
clc
add
add
out
push
dec
jo
fwait
in
push
icebp
popa
pop
repnz
in
fcomi
imul
div
insb
push
shll
inc
je
dec
shrl
jbe
shll
outsb
data16
adc
ret
sub
push
jne
add
out
adc
cwtl
xchg
xchg
jecxz
inc
push
xchg
xchg
jae
mov
outsl
jne
in
test
pop
dec
push
inc
push
pop
dec
inc
xchg
xchg
lcall
shll
and
adc
pop
lea
xchg
ss
inc
fucomp
push
push
popf
add
jo
sub
ret
rorb
sbb
sub
in
lods
lods
fcomps
clc
outsb
js
xor
cmp
push
dec
mov
mov
es
mulb
push
push
aaa
repz
cmp
cmp
insb
arpl
xchg
fs
sub
sbb
push
xor
ja
cmpsl
xchg
xchg
dec
jl
mov
sub
lea
mov
fnsave
and
pop
inc
ja
xchg
sbb
inc
iret
push
stos
cmp
in
aas
mov
or
dec
jne
jp
and
mov
ret
mov
fcompl
xor
and
push
shlb
push
negb
xor
jle
mov
mov
leave
or
test
insl
ss
pop
adc
pop
shll
nop
cmp
mov
mov
sbb
xchg
inc
add
xchg
and
rcrl
dec
push
inc
fadds
pop
mov
sub
cmp
jl
sub
fbld
or
call
sbb
or
adc
and
pop
and
cmp
or
adc
adc
cmp
push
aas
lret
je
imull
xchg
inc
jne
aas
mov
call
jg
inc
rolb
lock
fistl
sarb
jge
pop
aas
stos
or
mov
push
shll
push
xor
mov
jbe
cmp
adc
in
scas
and
imul
ds
and
inc
adc
dec
in
incl
cld
lods
into
sub
pop
add
rcrb
jo
inc
ljmp
ds
sbb
xor
sbb
inc
cmp
call
dec
xchg
fisubl
mov
inc
test
xor
enter
lea
aas
mov
adc
jge
aas
pop
sub
aaa
ret
fiaddl
mov
js
mov
ljmp
push
add
pop
fidivl
stos
arpl
in
or
inc
ficoml
adc
in
aaa
fistl
ljmp
sub
movsbl
addl
popf
dec
sti
sub
ss
or
sub
nop
xchg
cmp
xchg
and
xchg
popa
xchg
xchg
dec
shll
cwtl
cltd
lcall
pushf
popf
sahf
lahf
mov
mov
mov
jb
scas
imul
mov
les
fs
lret
mov
insl
bound
xor
jae
bound
bound
fs
xchg
mov
pop
outsb
lret
mov
inc
cmp
jo
lret
mov
imul
xor
jae
arpl
xor
shll
shll
and
dec
es
inc
cmp
cmp
pop
mov
mov
push
add
fdivs
xchg
sar
rcl
add
not
mov
jmp
jbe
pop
mov
or
jns
les
outsl
adc
mov
bswap
pushf
jmp
jbe
cmp
sub
or
es
lret
mov
xchg
mov
push
cmp
adc
add
xchg
ja
sti
decl
adc
and
jmp
sbb
call
mov
push
xchg
test
lods
rcrb
lea
add
movb
pushf
and
repnz
mov
movsb
cmc
mov
sar
in
fwait
out
pop
pusha
cmp
call
xchg
adc
add
insl
xor
dec
push
mov
jnp
push
das
lock
clc
push
push
push
mov
adcb
jp
xor
jmp
mov
xchg
jb
pusha
mov
jbe
ja
mov
or
movsb
adc
cmp
jb
ja
mov
inc
inc
jmp
mov
loopne
outsl
mov
pop
sub
shl
mov
cmp
cli
mov
hlt
cmp
sbb
cmp
add
sbb
jb
sbb
add
adc
popaw
dec
xorl
jl
stos
nop
sahf
dec
arpl
daa
jmp
jbe
xor
pop
pop
xor
pop
test
leave
sbb
popa
xchg
fdivs
xor
push
xor
inc
and
test
pop
or
add
test
jbe
add
pop
xchg
push
push
mov
mov
add
int
insl
mov
aam
adc
adc
call
or
pushl
inc
inc
mov
fiaddl
push
jmp
xchg
cmp
adc
inc
mov
mov
push
lock
cwtl
push
iret
lea
cmp
or
push
rcrl
dec
out
addr16
fstpt
sahf
movl
push
iret
add
iret
inc
push
xchg
testl
pop
shlb
mov
mov
mov
shll
cltd
push
mov
add
xchg
aam
gs
ret
sbb
cmpsb
push
divl
pop
inc
xchg
mov
and
dec
mov
xor
or
std
jae
popa
inc
fldcw
fsubs
fsubrp
and
xor
add
or
push
out
sqrtps
test
or
or
out
sub
mov
mov
das
clc
std
stc
pop
cltd
and
pop
adc
xchg
mov
daa
xchg
sbb
clc
mov
ds
lahf
rolb
jecxz
das
into
sahf
ljmp
inc
add
ljmp
xchg
cmp
sahf
dec
add
mov
push
iret
lret
jmp
dec
hlt
data16
mov
cwtl
push
add
ds
jae
mov
jb
cmp
test
sarl
push
fnsave
push
jae
scas
inc
jno
push
ret
lea
cmpsb
movsl
sbb
scas
cs
add
push
push
jp
add
and
orps
sbb
fsubrl
pop
sbb
push
lea
adc
push
in
mov
pop
mov
push
rep
or
imul
sub
enter
dec
xchg
mov
jecxz
jae
lods
xchg
push
out
loope
mov
or
add
jo
inc
mov
mov
inc
orl
call
add
aam
cmpsl
inc
idivl
test
lods
cmp
and
int3
ss
je
inc
cwtl
in
into
jbe
in
cmp
pop
pop
aam
insb
out
push
jne
sbb
push
cmp
lock
popf
cli
and
scas
inc
xchg
pop
fnstenv
jmp
out
mov
std
lock
mov
and
cld
sub
fadds
mov
shrl
push
mov
insb
inc
nop
decb
inc
sbb
pop
xadd
ss
es
jnp,pt
and
out
push
pop
and
xor
mov
dec
les
adc
leave
add
aad
sbb
sub
imul
adc
insl
insl
cs
shlb
cmp
jno
mov
insl
jae
je
mov
sub
jnp
insb
dec
rolb
sub
inc
push
fs
les
call
mov
push
xchg
add
sub
dec
insl
insl
inc
je
xchg
sub
dec
dec
inc
insb
cwtl
xorb
ljmp
inc
xchg
das
in
fdivl
or
loopne
inc
inc
adcl
push
xor
mov
cmp
lea
cs
cmp
and
jmp
adc
mov
rorb
mov
lea
push
addr16
leave
lods
pop
insl
loopne
out
pop
in
cmp
ret
ds
pop
inc
mov
xchg
sub
push
jne
mov
test
pop
dec
add
inc
push
xchg
test
cli
jge
mov
repnz
push
sbb
andb
stos
mul
inc
lock
test
test
or
xchg
sub
test
cmp
adc
cmp
push
sbb
stos
out
push
jno
mov
je
cltd
addb
or
pop
xor
sub
ret
lock
add
push
push
push
fdivrs
fidivs
push
test
xor
dec
pop
push
orb
inc
lock
add
cmp
loope
cmp
add
adc
out
jl
sbb
inc
add
cld
sub
popf
push
dec
sub
push
jns
icebp
js
jo
mov
mov
shlb
cmp
adc
push
pop
clc
adc
faddl
inc
into
xor
popw
dec
lds
lret
add
stos
or
mov
lret
mov
int3
rcl
fcomp
mov
call
pop
dec
orl
shr
sub
je
es
out
inc
xor
adc
pop
xor
mov
stc
sub
mov
jp
mov
sbbl
mov
xchg
push
jne
mov
jbe
inc
lea
jp
jb
fildl
xor
rcr
pusha
or
pop
adc
xchg
data16
inc
mov
movsb
cld
push
pop
xor
cltd
mov
idiv
jle
dec
hlt
cmp
imul
stos
and
loope
xor
mov
sub
clc
ss
ljmp
sbb
movsl
or
aaa
push
ss
mov
ret
push
lods
adc
push
adc
add
inc
js
hlt
pop
mov
rclb
pop
push
dec
gs
xchg
gs
dec
dec
inc
push
pop
pop
xchg
cs
insb
movsb
insb
adc
insb
mov
lret
mov
jae
fs
rclb
int3
insb
jnp
sub
mov
lahf
dec
outsb
je
jb
sub
mov
gs
pop
lcall
pop
test
sbb
lods
inc
dec
je
sub
mov
jo
jo
shll
jno
mov
mov
das
roll
aam
shll
mov
lret
adc
mov
and
sbb
lcall
inc
push
cmpsb
pop
lcall
fstps
fcmovnu
push
fstl
fists
xor
add
gs
gs
push
mov
xor
mov
jb
mov
xor
mov
mov
mov
add
rcl
icebp
pop
arpl
mov
xor
xor
fisttpll
mov
pop
out
jns
push
clc
add
cld
mov
mov
test
hlt
and
xchg
daa
and
faddl
push
dec
inc
xlat
jne
push
cmp
cli
adcl
lahf
lea
call
push
inc
inc
test
push
pop
shrb
fcoml
rolb
pop
sti
je
push
adc
or
pop
out
adc
imul
jle
ss
mov
jbe
fistpll
movsb
or
repz
mov
or
pop
inc
loopne
sbb
jne
test
mov
add
je
add
lret
shlb
sbbb
or
test
idivb
push
je
add
or
push
aas
repnz
movsb
ds
lsl
sub
stos
xlat
or
test
cmp
or
bound
pop
lcall
ret
call
lock
sbb
pop
or
xchg
push
or
cmp
out
fimuls
incl
les
mov
ljmp
div
and
ja
imul
in
jb
mov
cs
fs
mov
arpl
pusha
cmp
cmc
jb
jbe
adc
insl
jne
and
pop
call
inc
shll
inc
mov
sbb
jb
mov
push
popa
in
mov
imul
lcall
pushl
test
mov
scas
pop
andb
in
cmpb
dec
or
and
lds
jmp
testb
jmp
js,pn
jo
sub
dec
js
inc
jle
aaa
sub
jbe
mov
jbe
mov
pop
cli
sbb
push
jne
jb
sbb
into
out
push
sub
jmp
shl
jne
loopne
push
pop
loope
push
out
and
sahf
jns
xlat
data16
test
jge
dec
dec
inc
cmpsl
sub
loopne
and
aas
arpl
dec
outsl
outsb
cmp
dec
shl
je
outsl
jae
pop
aam
dec
jne
and
or
lahf
testb
nop
in
sbb
jae
negl
dec
add
add
in
movsb
add
mov
pop
adc
neg
sbb
add
xor
adc
xor
cmp
aad
das
ret
ss
xor
adcb
js
int
pop
push
loop
add
mov
ret
sbb
push
sub
dec
or
add
jae
je
dec
shll
outsl
arpl
shll
pusha
test
sbb
sar
rcrb
in
mov
cmc
mov
push
cmpl
xor
pusha
and
lds
ja
xchg
mov
in
in
pop
cwtl
xor
stos
stos
imul
mov
xlat
jmp
mov
sahf
sbb
dec
inc
js
pop
pop
xchg
and
fs
pop
stc
adc
add
xlat
inc
add
sbb
xor
xor
and
mov
imul
xadd
adc
pop
mov
rcrb
or
clc
pop
cmp
push
mov
cmp
cmp
push
jmp
adc
cmpl
xchg
subb
loope
cmp
inc
orl
shrb
mov
lods
inc
cmp
dec
leave
enter
mov
or
fdivrl
adc
sub
inc
inc
outsb
fdiv
cld
mov
and
and
cmp
shll
xlat
add
jge
in
jb
adc
cmp
inc
lock
and
adc
jg
pop
mov
push
scas
or
dec
iret
inc
push
or
std
cwtl
inc
mov
push
in
cwtl
and
lret
mov
lret
popa
arpl
outsb
mov
outsb
daa
bound
mov
xlat
xor
cmpsl
insb
test
and
push
stos
dec
lods
lods
scas
scas
lcall
and
lcall
outsb
mov
lea
gs
xchg
gs
imul
es
int3
lret
mov
dec
mov
arpl
cmc
outsb
cmp
fs
jb
xorl
fldt
addb
sub
pop
out
xor
add
data16
push
dec
shll
outsb
mov
xchg
fcoms
dec
ss
mov
adc
xlat
sub
jne
out
in
jmp
push
inc
ds
jmp
mov
or
cwtl
xchg
ficoms
seto
cmp
push
insb
push
jl
add
xor
sbb
xor
loopne
call
clc
pop
add
mov
call
rorl
push
in
push
dec
shrl
movsb
jg
sti
mov
cmp
cltd
add
les
mov
cmp
arpl
cmp
addr16
jo
outsl
add
pusha
jne
sti
and
add
xlat
jne
cmp
jl
sbbl
popf
lods
or
inc
in
scas
ss
xor
cwtl
sbb
clc
cmpsb
imul
imul
outsl
gs
sbbb
call
sub
push
pop
in
pop
mov
ljmp
mov
out
fisubrl
cmp
xchg
mov
xchg
jb
lock
arpl
pop
jmp
and
imul
dec
push
xor
jmp
mov
xor
push
imul
push
ss
add
lret
jns
arpl
push
je
insl
call
stos
inc
enter
out
psubsb
hlt
arpl
sbb
jg
loopne
add
mov
xor
and
push
and
sbb
and
jne
mov
add
xor
jle
addb
mov
mov
call
and
jle
fildl
cmp
jmp
addr16
call
add
add
sti
xor
or
cli
cmpsl
jge
sahf
push
cmpsl
popf
and
inc
xchg
xchg
or
clc
jbe
out
pop
cltd
xor
or
rcll
imul
imulb
fs
add
and
test
in
mov
call
shlb
mov
mov
or
or
pop
pop
cmpl
jne
or
pushl
call
push
in
sahf
mov
adc
repnz
roll
mov
daa
fstp
dec
fisttps
xor
outsb
loopne
loope
loop
mov
daa
jecxz
jbe
cs
cmp
out
out
push
fwait
xchg
pop
pop
xchg
mov
andb
jp
inc
daa
adc
and
cld
adc
mov
jge
adc
mov
aaa
pop
pop
cmp
add
lods
cmp
gs
adc
mov
adc
jne
sarl
cld
in
fadds
mov
dec
popa
fisubrl
xor
mov
push
fnsave
outsl
mov
dec
mov
jns
dec
loope
dec
ja
loop
jecxz
jae
in
jae
je
inc
out
je
lods
mov
daa
jmp
sub
adc
orl
fildl
sub
arpl
xor
mov
imul
jae
dec
ja
cs
or
lds
mov
mov
cmpb
outsb
jp
mov
daa
jnp
data16
and
dec
gs
pop
jg
insb
fmuls
enter
insl
fcmovnu
fmulp
lret
jo
and
daa
daa
addr16
into
pop
iret
rcl
cmovne
cmp
shll
scas
mov
and
sbb
aas
xor
enter
sbb
sbb
and
inc
cmpsb
sbb
and
and
ja
xor
mov
push
imul
mov
popa
insb
jb
addr16
dec
ja
adc
outsl
jo
jno
jb
je
jns
jae
xchg
into
js
jne
push
adc
pop
mov
fs
cmp
mov
and
mov
ret
sarb
ret
imul
dec
ud0
outsl
sbb
in
or
or
enter
outsb
cmpsl
push
call
pop
incl
pushf
pop
decl
lcall
lcall
sti
sbb
adc
lcall
cmpsl
pusha
inc
mov
movsl
cmp
popa
bound
or
data16
mov
push
outsl
ja
mov
dec
popa
pop
mov
jmp
mov
pop
mov
or
lea
rcll
push
dec
push
fiaddl
bnd
sbb
aam
std
pop
fdivr
je
lea
roll
sub
push
sbb
mov
inc
mov
dec
aam
leave
test
cwtl
or
push
sbb
cmp
jmp
sbb
jb
inc
pop
sbb
mov
sub
push
adc
push
pop
push
call
add
mov
add
cwtl
movd
add
adc
xchg
push
push
das
xor
xlat
or
rcrb
stos
xlat
push
sub
xor
arpl
clc
sub
testl
push
add
push
pop
pop
dec
sbb
push
faddl
stos
xchg
jae
push
push
push
and
adc
push
or
push
imul
sub
cs
sbb
hlt
or
push
sbb
sub
mov
or
cmp
cmp
sbb
sbb
imul
jbe
imul
cld
cld
shll
inc
outsb
mov
jp
xor
sub
fsubrl
cld
iret
int3
roll
mov
iret
push
arpl
xchg
js
ja
xor
jns
push
mov
jnp
sub
lret
xchg
sub
js
sbb
pop
xchg
gs
mov
and
sbb
sbb
shlb
or
ss
mov
or
lock
insb
loopne
or
lods
cmp
rcpps
xor
dec
ja
xor
xor
lcall
stc
cmpsb
imul
adc
call
cmp
aaa
pop
pop
or
outsl
or
subl
cmc
cld
mov
repnz
pop
cmp
push
push
addl
cmc
push
ret
pop
test
loope
lret
out
test
out
cli
sbb
lock
or
or
add
shrl
loope
loopne
xchg
add
arpl
dec
rol
fstp
stos
call
in
mov
fstps
je
jmp
sbb
inc
lcall
ds
xchg
xchg
mov
dec
jae
xchg
xchg
xchg
xchg
je
outsl
insb
jbe
xchg
xchg
cs
out
mov
pop
inc
int
call
sahf
xor
je
call
pusha
scas
and
call
mov
mov
or
add
test
add
jecxz
adc
lods
add
pop
popa
xchg
lock
jle
cwtl
mov
cmp
fiaddl
jecxz
mov
dec
sahf
mov
ror
call
pop
mov
ljmp
xor
inc
or
xlat
push
out
fstpl
push
call
push
fmull
sti
adc
scas
pop
rclb
cld
pop
cmpsb
loopne
std
sub
sbb
dec
aas
adc
pop
stc
mov
add
push
mov
mov
xor
mov
jl
mov
test
mov
ss
lods
fcomps
into
mov
mov
outsb
mull
sub
rolb
sub
push
lret
loopne
mov
cltd
mov
outsl
sbbl
lret
push
mov
mov
sbb
jge
pop
cmpsb
mov
sbb
sub
xchg
mov
mov
push
rorl
dec
mov
iret
and
cmp
push
xchg
cld
mov
dec
cmp
mov
es
pop
arpl
int
mov
push
or
dec
and
jns
lcall
rclb
push
mulb
lcall
ret
inc
push
or
dec
loopne
sarl
inc
ret
jmp
mov
dec
shrl
sahf
mov
cmp
pop
mov
xlat
push
add
xor
push
js
or
inc
fwait
sbb
dec
cld
pusha
pushl
and
push
outsb
mov
push
jne
hlt
fsubl
ds
mov
rorb
xor
cmp
in
not
inc
loopne
and
mov
lcall
push
push
stc
adc
push
push
out
mov
sub
cmp
stos
cltd
push
push
andb
loope
fisttps
daa
adc
test
jbe
and
mov
pop
add
rolb
add
jg
inc
cmp
jb
pop
cmp
mov
mov
jb
les
lods
mov
pusha
add
ss
push
mov
dec
data16
int
imul
or
and
iret
sub
add
movsb
push
mov
push
jns
mov
or
push
ds
aam
and
in
xor
sbb
daa
testb
push
mov
mov
mov
inc
mov
inc
sti
clc
or
inc
shll
dec
aad
cmp
add
les
cmp
push
mov
cmpl
mov
push
sub
mov
mov
shl
push
push
out
call
sub
std
push
push
dec
push
fwait
inc
bound
test
sbb
adc
mov
adc
popa
in
add
mov
cmp
add
pop
data16
push
xor
pop
lock
outsb
outsl
shll
cmp
clc
adc
mov
rclb
repz
in
xor
or
fmul
add
xor
lea
insb
out
adc
jmp
add
repnz
bnd
sti
pop
push
ja
xor
cmp
jne
mov
and
sub
jne
jg
mov
imull
fldl
push
add
inc
cmp
cld
insl
jl
pushf
lea
mov
aaa
fsubrl
ss
or
outsl
ficompl
or
mov
das
icebp
inc
mov
or
fimull
enter
jae
push
xchg
enter
pop
add
js
push
jne
pusha
cvtps2pi
rclb
cmp
jne
and
loop
fsubrp
and
movl
pop
and
movsbl
mov
and
inc
movsl
loope
ret
add
ja
lock
mov
mov
inc
mov
aas
ja
pop
ret
in
lods
cmp
inc
in
addl
or
or
std
mov
popf
cmpb
mov
or
cmc
jne
mov
mov
lahf
cmp
out
jne
push
add
or
shll
inc
loopne
mov
js
fidivrs
dec
cwtl
lds
mov
int3
or
jg
push
mov
cmpsb
or
mov
jne
ljmp
push
ljmp
movsb
ret
push
sbb
mov
push
xor
lcall
push
dec
lcall
jg
xor
push
and
data16
add
inc
push
sahf
sub
mov
scas
inc
mov
sub
sub
xlat
call
push
jae
out
gs
dec
jle
mov
test
inc
jl
inc
nopl
iret
xchg
dec
add
mov
mov
dec
push
inc
ret
sub
mov
jo
movsb
scas
or
pop
mov
insl
packsswb
xchg
adc
loopne
jne
into
adcb
jp
xchg
mov
sub
mov
es
dec
add
xor
dec
daa
subb
arpl
add
add
jne
sahf
and
push
sub
hlt
test
lret
scas
subl
cmp
inc
xor
sahf
push
push
lahf
mov
lea
sub
jmp
cmp
and
or
test
dec
outsb
xchg
std
or
jbe
movsb
ds
mov
add
cmp
cmp
pop
addr16
cmp
jl
cmp
jg
test
call
pop
jb
cmp
inc
cmp
inc
stc
pusha
ret
dec
mov
cmp
cmp
add
add
add
frstor
push
and
dec
sub
push
push
popf
add
sub
mov
lds
add
dec
dec
adc
inc
pop
inc
sbb
fadds
add
xchg
fsubs
mov
ret
inc
unpcklps
push
loopne
std
inc
stc
leave
lret
cmpl
or
add
inc
lds
cld
push
mov
inc
cmp
jl
je
fiadds
xor
cmpb
js
mov
jge
jo
add
cmpl
mov
adc
add
imul
push
inc
adc
pusha
stc
push
loope
add
jge
add
mov
add
push
inc
dec
sbb
lock
mov
filds
hlt
into
inc
adc
shll
ret
add
add
shlb
outsl
inc
push
jns
adc
jne
mov
sub
mov
cmc
imul
mov
jae
jae
add
adc
orb
add
andl
or
jmp
mov
outsl
movzwl
mov
jne
daa
add
lea
rclb
mov
or
adc
add
out
push
fistpl
cmova
data16
lock
dec
out
stos
pop
or
sub
bound
push
add
jo
psllw
jge
int3
inc
mov
cld
inc
inc
movsb
jl
add
jmp
inc
xchg
cmpsl
clc
push
subb
sti
push
repz
mov
adc
add
pop
mov
dec
adc
mov
mov
adc
iret
lahf
cld
sbb
inc
xor
je
and
mov
pushl
add
push
lea
inc
inc
xor
aas
sub
add
inc
push
mov
dec
or
sub
push
movsb
lock
imul
call
add
add
aam
sbb
adc
ret
cs
call
xchg
adc
lahf
inc
aaa
ljmp
xchg
cltd
test
lcall
xor
push
push
cwtl
push
cmp
adc
add
cli
or
sub
push
scas
mov
les
movsl
out
or
push
andl
jge
cld
push
lds
pop
mov
jle
dec
in
lret
and
inc
cmp
testb
je
inc
in
out
pop
inc
sub
add
loop
xchg
subb
in
dec
xchg
sub
in
test
push
and
mov
out
pop
movsb
andb
data16
mov
push
adc
mov
and
dec
or
cmc
das
push
mov
push
lods
xor
cmp
cs
mov
adc
call
and
into
adc
sub
mov
gs
insb
mov
pushf
pushf
jb
popa
mov
push
push
mov
mov
inc
bound
pusha
cmp
or
and
mov
sbb
dec
cmpsb
jae
data16
test
cmpsb
imul
std
sbb
add
lret
jno
mov
mov
je
or
out
popa
xor
sub
adc
cmp
loopne
xor
adc
jbe
loop
xor
xchg
mov
inc
hlt
or
lcall
call
sub
inc
or
pop
outsw
add
jae
mov
js
jo
push
insb
out
push
fwait
mov
xchg
into
adc
push
pop
pop
loopne
mov
repz
push
movsb
add
lea
stos
inc
icebp
mov
addb
mov
inc
xchg
nop
mov
je
arpl
or
sub
fdivrs
adc
xchg
push
adc
adc
add
and
sub
mov
push
shrl
adc
and
cmp
sti
inc
pop
push
or
xor
xor
pop
cmp
jo
scas
fwait
cmp
adc
je
sahf
jbe
xchg
jl
adc
push
das
nop
es
mov
pop
push
testb
xchg
pop
mov
hlt
cmp
cld
push
dec
sub
sub
pop
jle
cmp
push
nop
fadds
inc
or
in
push
fxch
outsb
testb
and
fisttpll
fcoms
lock
ret
jle
dec
cltd
roll
mov
call
or
xchg
test
fisttpl
lcall
cmp
inc
jl
jl
sbb
xorl
inc
mov
xchg
sub
movl
sbb
sbb
or
hlt
bound
call
sub
ja
mov
and
fiaddl
stos
jns
lea
sub
inc
add
mov
outsl
lock
mov
and
movsb
sbb
test
fs
int
aas
arpl
rcrl
ret
mov
or
lds
out
ss
push
push
cmpsb
xor
lds
sbbb
push
repz
je
sub
mov
popa
jns
shrb
js
arpl
or
and
or
and
sub
or
or
inc
insb
xorb
cmp
enter
cld
mov
adc
cmpsb
pusha
hlt
cmp
loopne
fs
xchg
or
mov
dec
int
je
add
push
xor
push
ret
or
adc
repz
test
int
mov
int
and
xor
fcomps
dec
scas
sub
loope
adc
ljmp
adc
inc
call
mov
push
mov
call
add
push
pop
adc
outsl
mov
adc
add
and
aam
push
mov
mov
pop
xchg
gs
js
insb
outsl
jb
pop
xchg
gs
gs
adc
add
test
cmc
jle
rcrl
push
xor
mov
mov
std
leave
std
fwait
or
std
mov
add
xor
ds
daa
push
jae
les
push
mov
dec
or
addr16
rcll
shll
jbe
mov
push
pop
in
js
test
pop
leave
rolb
sbb
jmp
fsubs
or
pop
push
sub
mov
xchg
out
xor
push
inc
dec
or
adc
push
aas
pop
sbb
pop
inc
js
pop
enter
xor
xor
enter
push
dec
iret
out
enter
inc
xor
xor
inc
add
adc
xchg
xchg
fst
or
sbb
fdivs
sub
dec
cs
xor
xchg
rorl
push
fwait
mov
xor
mov
cltd
dec
ss
add
xor
fsubs
xchg
in
hlt
mov
xchg
lock
std
jmp
add
imul
inc
jb
arpl
push
arpl
add
jbe
gs
inc
add
pop
add
add
add
aad
inc
or
jb
mov
outsl
arpl
jae
fs
pop
adc
push
outsl
outsl
insb
lock
add
xor
popa
jo
push
mov
cmpsl
add
jb
jne
and
mov
inc
cmp
ss
fwait
mov
add
inc
insb
hlt
mov
sti
inc
fs
jae
push
mov
sbb
popa
jb
inc
packsswb
pop
add
add
push
ficomps
js
insl
das
adc
jne
adc
popf
add
adc
xchg
pop
add
jb
xor
fmul
xchg
xor
push
or
pop
mov
imul
mov
inc
jns
add
or
and
mov
into
add
cmp
ds
aas
add
or
xchg
fidivl
stos
sbb
xchg
gs
js
jno
inc
outsl
jb
psadbw
jbe
and
push
push
push
gs
fsubs
outsl
push
lods
int3
xchg
dec
sbb
push
orb
jo
dec
push
jge
mov
repz
push
sub
push
push
pop
add
mov
inc
cmp
pop
ret
cmpb
insl
popa
mov
arpl
daa
dec
int
push
mov
and
pusha
xchg
pusha
insl
lods
fwait
push
das
dec
or
mov
add
fadds
loopne
fwait
mov
xlat
mov
daa
mov
and
push
outsl
imul
add
sub
loopne
fbstp
filds
mov
pop
push
inc
ss
sarb
shll
divb
or
add
jns
mov
rorb
outsb
pop
test
sub
fbstp
outsb
mov
dec
call
imul
pop
cmpsl
arpl
or
data16
mov
mov
imul
jecxz
rorl
dec
test
fistps
mov
and
dec
subl
gs
push
outsb
push
cmpl
insb
jo
fisubrs
inc
push
dec
inc
pop
js
push
lods
add
jo
dec
pop
mov
push
push
or
insb
icebp
sbb
pop
sbb
xor
jb
fs
inc
ret
push
mov
cmp
inc
lret
mov
pop
pop
and
int
xchg
add
push
bound
jno
mov
jb
push
inc
out
movsl
jae
adc
rorl
cmp
xchg
push
aam
pop
cs
push
pop
outsl
mov
add
xor
popa
movsl
aad
loope
mov
push
push
push
or
push
cmpsl
mov
push
pop
push
adc
repz
cmp
movl
scas
xor
or
enter
jne
insl
iret
sub
pop
and
mov
add
sbb
cmp
fwait
lea
dec
mov
add
push
add
imul
xor
jne
dec
sub
jne
fndisi(8087
lods
notb
or
pop
add
jbe
dec
outsl
inc
and
jnp
xor
jge
mov
adc
and
xchg
jae
jecxz
and
outsb
jne
mov
xor
fisttpll
and
shll
pop
jo
sbb
das
add
pop
push
mov
push
jp
push
and
xor
and
sub
testb
add
or
sbb
mov
add
insl
push
arpl
or
lret
sahf
xor
gs
jb
mov
mov
xor
lret
add
es
xlat
outsb
xor
roll
imul
roll
data16
xchg
popa
mov
xchg
adc
jne
or
or
dec
jae
mov
cmp
mov
sub
lahf
adc
add
aas
pop
in
add
mov
ret
ljmp
inc
pop
push
add
addr16
lea
sbb
sbb
mov
pop
dec
sbb
push
and
jnp
cwtl
in
or
repz
lods
adc
sub
fildll
rcrb
mov
arpl
push
xlat
xchg
mov
lcall
lods
dec
insl
cmp
addr16
aas
sbb
dec
and
sbb
cmp
push
push
add
push
push
mov
xor
and
fcoml
adc
or
scas
push
inc
sub
inc
enter
dec
push
dec
pop
daa
imul
insl
pop
je
in
aas
ss
lgs
mov
add
mov
cs
cld
sub
or
mov
call
fiadds
stc
mov
fistps
mov
jmp
dec
ljmp
je
add
sbb
and
mov
lret
sub
scas
pop
add
xor
lea
add
xchg
add
push
pop
test
add
sbb
inc
add
add
les
add
or
out
adc
push
hlt
cmc
add
xor
ds
jge
scas
test
mov
add
push
add
cmp
add
fcmovne
mov
jl
test
xor
mov
mov
std
sub
jg
stc
push
not
mov
or
call
add
mov
inc
aam
inc
inc
cli
push
pusha
imulb
cmc
clc
sub
inc
sti
in
and
inc
or
pop
das
and
insl
sub
adc
adc
pushf
push
push
adc
jmp
or
or
mov
sbb
cltd
pop
pop
inc
sbb
ss
sub
out
sbb
data16
fwait
pusha
dec
xlat
xchg
call
add
xor
ja
decb
inc
gs
sub
add
fwait
subb
cmp
pusha
lea
jmp
fcmovnu
negb
sbb
lods
lret
dec
adc
mov
sbb
push
dec
cmp
fmuls
out
sbb
mov
ret
std
cmp
clc
adc
movsl
cmp
xchg
arpl
xlat
jge
popf
data16
push
cmp
lahf
insb
add
xchg
sub
fimuls
rcrb
mov
mov
inc
or
int
inc
inc
or
inc
jb
fsubrl
lock
pandn
inc
cmp
es
push
pop
and
add
jmp
fldt
aas
mov
mov
jle
lahf
dec
xchg
add
cld
inc
pop
loope
sti
mov
add
adc
dec
jae
lret
scas
in
outsb
pop
add
daa
fldl
cmp
jnp
popf
ja
bound
or
inc
xchg
das
sub
mov
outsl
or
bound
pop
dec
psubusb
jb
lea
push
mov
idivb
ja
daa
inc
test
idivl
sbb
pop
jnp
mov
add
cmpsl
pop
sbb
mov
ja
fidivrs
arpl
fildl
out
adc
testl
outsl
fmuls
out
pop
jecxz
fdivrs
cs
mov
dec
push
cwtl
inc
sbb
pusha
outsl
dec
repz
inc
inc
orl
lret
fisubs
push
dec
cmpsl
cmp
ret
ret
dec
cld
inc
xchg
in
lock
sub
lahf
sub
outsl
mov
mov
adc
ret
fwait
lock
mov
jecxz
adc
fidivrs
mov
sbb
loope
push
dec
imul
fisubs
dec
aaa
maxps
out
lock
mov
testl
dec
and
lahf
ja
imul
lret
jae
adc
mov
rol
inc
dec
neg
arpl
mov
jnp
cltd
xchg
test
mov
fidivrs
scas
fbld
ficomps
das
ja
or
fildll
imul
stos
jnp
js
mov
cli
fsubp
or
clc
xorl
out
test
xor
mov
clc
xor
push
insl
sti
sbb
sub
add
pushf
pusha
std
mov
pop
call
test
add
add
scas
sbb
jb
cmpsl
mov
xchg
iret
mov
jmp
scas
out
cli
stc
ror
pusha
scas
inc
call
and
add
call
not
or
add
mov
stc
outsb
call
mov
std
pop
stc
pushf
call
add
out
cmp
pop
movsl
pushf
in
or
sub
push
shrb
push
pop
xchg
insl
std
mov
rorb
xchg
and
icebp
mov
icebp
cmp
lea
arpl
imul
dec
cmp
scas
jae
int
repz
or
mov
pusha
stos
and
into
push
lret
call
ja
test
push
mov
sti
jg
in
mov
push
push
jmp
sbb
ret
push
mov
mov
movsl
lret
mov
add
call
sar
rcl
pusha
mov
cmp
mov
fcomps
inc
xchg
sbb
sbb
add
bound
jno
cmp
ret
push
pushf
push
push
in
cmp
inc
sub
cmp
sbb
outsb
clc
ret
insb
dec
jmp
and
lods
iret
inc
inc
inc
test
decl
stos
mov
scas
shl
add
sarl
mov
mov
sbbb
xlat
arpl
repz
pop
cmpsb
pop
ret
aas
xlat
push
dec
mov
decl
xchg
mov
std
dec
add
push
cmp
stc
lods
or
daa
dec
cs
call
xchg
add
xchg
push
insl
fwait
cs
pop
inc
dec
std
bound
hlt
lock
ljmp
sarl
shlb
and
mov
pop
dec
scas
and
xchg
hlt
iret
js
imul
jmp
sub
fistl
adc
mov
pop
sbb
int3
and
pop
ds
call
and
insb
call
test
test
or
testb
jns
call
xsha1
cmpsb
scas
lods
imul
ret
out
les
cmc
divb
jne
in
inc
cmp
push
pop
adc
mov
lds
fnstcw
movsbl
btc
movzbl
inc
frstor
test
dec
push
icebp
jg
ret
aam
shl
mov
test
sbb
adc
xorb
sub
push
jmp
inc
xor
push
or
out
sbb
ds
push
bt
sub
test
pusha
jbe
push
ja
call
push
jmp
in
and
call
add
sub
in
push
ror
inc
jp
adc
cmp
shl
add
sbb
xchg
ret
ret
cmc
ror
cmpsl
add
push
jo
jae
lds
insl
stos
out
or
push
in
aam
mov
mov
add
xor
mov
jp
ret
clc
cmp
ret
clc
push
sub
lret
mov
inc
in
stc
cmp
sbb
mov
fstl
mov
inc
stc
add
clc
cmc
into
out
lret
jb
jg
fidivs
jmp
push
cmp
mov
mov
and
incb
xchg
ja
cmc
cmc
sub
jno
or
sar
jle
adc
mov
sbb
or
aas
add
mov
and
or
jne
or
in
mov
pop
jae
push
mov
lock
aam
add
jmp
cmp
scas
cld
fildll
clc
clc
mov
xor
stc
cmc
pushf
push
jbe
les
push
fwait
pusha
mov
fstl
xlat
inc
mov
or
adc
mov
jmp
ror
call
add
es
xchg
push
add
stos
mov
test
xchg
call
ds
rcrl
ffree
loopne
add
daa
inc
imul
rol
inc
lock
negl
aam
incb
or
push
imul
mov
pop
call
mov
or
std
jmp
icebp
push
call
call
call
test
mov
cmp
sbb
ds
mov
fisubl
sar
jmp
pop
or
fidivrs
push
push
mov
rcl
pop
decl
pop
cwtl
pop
or
in
aam
cmp
push
out
divps
ficompl
aam
aam
pop
clc
aam
pop
cltd
cld
shl
pop
mov
add
inc
inc
cmp
sub
push
pusha
mov
sub
or
fcompl
addr16
rcrb
jbe
xchg
mov
cltd
test
or
xchg
inc
push
or
cwtl
fsubrl
jge
idivl
push
jmp
fdiv
push
inc
loope
xchg
sbb
jl
popa
leave
xlat
fsubrl
outsb
and
push
fstpl
ficoms
psrad
call
jp
jno
jle
xlat
dec
add
es
loopne
cld
pusha
call
lock
out
out
js
xor
pushf
adc
imul
push
jmp
sub
sahf
call
out
xchg
mov
add
push
mov
call
adc
adc
incb
add
inc
test
mov
sub
lret
push
arpl
push
mov
stc
fidivs
jmp
scas
enter
pop
sar
andb
in
dec
cmc
subb
enter
fldl
jo
mov
or
inc
sub
aas
in
inc
and
dec
int
mov
insl
jmp
fisttpl
cmp
jge
xor
ljmp
jmp
and
das
std
jle
xor
adc
stc
clc
bswap
jmp
xor
ja
arpl
mov
int
ret
jmp
xor
in
ljmp
sti
scas
ja
mov
outsb
xor
cmp
and
insl
pop
ret
cmp
mov
push
cmp
push
or
push
cld
data16
js
fsubrs
or
daa
seto
inc
mov
xor
push
sar
mov
out
push
xlat
dec
xor
mov
pop
xchg
xlat
test
xchg
and
leave
dec
out
sbb
mov
cmp
dec
push
jbe
arpl
sub
cmp
idivl
dec
aaa
cmp
lods
cmp
stos
stos
sbb
pusha
mov
js
sarb
or
jb
leave
push
pop
xchg
fisubrl
jns
int
hlt
push
cs
cld
mov
sbb
sbb
ret
sbb
jns
cmp
arpl
pusha
ja
test
and
jmp
mov
pop
mov
loopne
sbb
pop
fwait
test
roll
push
pop
aas
or
inc
jmp
shll
scas
or
mov
push
cmp
pop
mov
aaa
pop
jo
fprem1
imul
inc
je
faddl
aad
xchg
cmp
shr
repnz
adc
aad
push
rcl
mov
push
fildll
mov
ror
dec
mov
divb
pusha
arpl
int
lahf
or
xorb
js
add
or
pop
sbb
aam
stc
mov
shrb
add
pusha
xchg
mov
jno
and
pushf
dec
mov
cld
imul
mov
stc
sub
fcmovnu
mov
sub
mov
jbe
pop
or
data16
push
outsb
ja
push
ficoml
jmp
add
xor
push
ret
movsl
fsubr
ret
roll
sub
mov
in
cmp
movsl
inc
into
ret
fisttpll
jl
daa
adc
sbb
adc
lods
mov
test
es
popf
pop
jnp
sar
jmp
jae
mov
pop
lods
int
xchg
sbb
lock
and
scas
pop
aaa
xchg
jo
push
jmp
fiadds
dec
out
aas
insb
push
push
sub
fdivrs
mov
sbb
test
mov
mov
or
loopne
fidivrs
mov
loope
add
push
push
test
popa
call
test
outsl
mov
adc
push
repz
fldcw
outsb
push
mov
or
inc
imull
inc
mov
idivb
cld
clc
or
jl
lahf
push
lcall
jbe
sbb
ds
push
mov
adcb
add
loopne
mov
pop
lds
lea
push
clc
xchg
cmpsl
movsl
xor
jb
testb
jle
pop
rolb
mov
mov
mov
bound
pop
and
sbb
jo
loope
pop
mov
hlt
xchg
mov
dec
sbbb
into
cld
pop
and
sbbl
fmuls
mov
insl
idivb
fsubl
cmp
push
or
lcall
orb
push
test
adc
push
mov
sbb
inc
loop
mov
pushf
and
nop
lret
mov
pop
scas
jae
daa
dec
inc
test
sbb
stc
stc
ror
pop
cmc
or
rorb
push
pop
adc
dec
pop
dec
xor
in
movsb
jl
mov
adc
jae
xchg
inc
mov
shll
cli
test
fldt
std
rorb
adcl
add
push
in
call
jno
inc
jmp
fmuls
hlt
xchg
popf
fisubs
pop
lock
xor
lea
fsub
shl
js
xchg
pop
and
inc
sub
lock
cmp
pop
js
sub
sbb
sbb
iret
aam
mov
ret
cld
jns
loop
adc
pop
fsubp
fistpll
lock
repnz
sub
shr
inc
add
sub
sub
fsubrp
shl
xor
pop
push
jmp
imul
andb
cli
pushf
cli
movsl
inc
aad
in
dec
ss
inc
addl
mov
mov
call
rolb
or
pop
loop
dec
lret
test
mov
shlb
adc
mov
clc
out
push
dec
dec
cmc
xor
pop
and
stos
push
loopne
cmc
mov
push
movsl
fsubr
dec
js
jno
jmp
xorb
pusha
mov
mov
loop
and
in
aam
xchg
insl
mov
or
xbegin
add
int
dec
std
rolb
or
jmp
xlat
cmc
ljmp
movsl
add
sbb
mov
adc
pop
dec
cmp
sub
sub
enter
movsb
fs
inc
push
and
mov
push
insl
js
sbb
stos
or
hlt
xor
xlat
into
cmpsl
push
clc
call
stos
ror
inc
cmp
cmc
push
outsb
lods
orl
cld
ss
lock
test
aad
sti
inc
femms
mov
cwtl
and
cmc
jmp
ja
aas
call
sar
push
icebp
inc
jmp
mov
test
data16
fwait
mov
mov
add
pop
call
loope
mov
jp
cmc
neg
push
out
add
mov
out
loop
ret
lea
les
int
pusha
xchg
std
repz
add
pushf
pushl
btc
xchg
not
setns
lea
lods
push
adcl
pop
pop
cmp
cltd
pop
ljmp
and
shrb
jne
aad
mov
inc
rcl
js
insb
and
sarl
mov
outsl
xchg
jbe
cmp
test
push
sub
sub
mov
stos
cli
loop
loopne
or
inc
push
and
aas
sbb
jge
in
rcl
mov
outsl
cmc
jge
jp
push
cmp
addr16
mov
rcll
cmc
and
outsl
mov
ret
adc
ret
mov
aam
stos
leave
add
out
bsr
cld
repnz
mov
stc
and
cmc
loop
mov
mov
push
or
and
push
mov
imul
inc
jp
pushf
jno
aad
xor
cwtl
pop
inc
lods
loop
mov
insl
mov
jbe
in
push
sets
rcrb
inc
arpl
clc
stc
push
icebp
and
pop
les
and
pushf
rcl
inc
xor
cmc
add
test
shll
mov
cmpb
xlat
rcll
pop
cltd
cmp
and
mov
mov
outsb
push
mov
sub
ffreep
inc
mov
push
push
shll
pushf
push
out
inc
iret
sub
pop
in
rorb
aas
push
push
or
into
aam
cmc
test
in
mov
lahf
push
in
test
int
call
or
int
rolb
jecxz
div
push
out
subl
mov
add
dec
push
pop
fidivrl
loopne
inc
push
cmc
cmp
pusha
ja
js
ficomps
mov
cmp
rep
clc
add
mov
pop
mov
mov
add
clc
das
movsl
dec
pop
ja
add
mov
orb
andb
lods
es
scas
loop
xchg
adc
jmp
test
call
inc
cmc
fwait
xchg
sub
aaa
cmp
mov
popf
push
pushf
pop
cmp
cld
sbb
into
jo
daa
adcl
popf
pushf
cmp
test
sbb
xchg
mov
cmp
cli
xor
mov
jle
cld
out
jmp
je
sub
cmp
sahf
pop
jl
jmp
call
push
insl
daa
sbb
mov
test
rorb
push
mov
pop
sub
pop
mov
lock
call
push
dec
fnstcw
cmp
push
or
icebp
add
jo
rcrb
lahf
or
scas
subl
add
mov
incb
mov
je
jns
scas
xor
pusha
or
movsl
mov
adcb
icebp
adc
sti
mov
testl
xchg
xor
mov
add
out
mov
movswl
push
or
sub
test
mov
dec
test
pusha
mov
setno
je
pushf
xchg
pusha
pop
repz
pop
adc
sbb
push
fistps
add
push
call
push
fistps
mov
adc
jns
xor
test
cwtl
call
repz
cmp
sbb
lock
jp
iret
insl
shll
xchg
std
imul
lea
pushf
adc
dec
cmp
sti
daa
xor
or
jecxz
cli
cmp
sub
jl
sub
sbbb
ret
jmp
dec
movsl
fcoml
int
std
xchg
xlat
mov
loopne
mov
nop
xor
aas
test
stos
cmp
lock
push
xchg
lcall
or
call
sbb
enter
ret
inc
sub
test
incl
inc
leave
cli
xchg
inc
mov
push
aad
mov
mov
push
mov
push
push
jecxz
jmp
push
jg
decl
adc
lock
add
xor
sub
push
in
loop
icebp
cmp
jp
adc
cmpsl
jecxz
adc
xchg
jno
xchg
sbb
sub
jae
inc
mov
dec
test
lcall
push
stos
cmp
pop
pop
jae
push
sub
ljmp
and
pop
movsb
sub
and
sti
xchg
or
loop
out
incl
imul
inc
rcll
xchg
addl
cmp
aaa
lods
and
ja
test
pop
in
push
mov
mov
test
call
pop
outsl
jmp
xor
outsb
push
in
jmp
jge
mov
orb
fstpt
jg
push
adcl
adc
scas
and
sub
insb
push
call
rcll
leave
imul
enter
enter
addr16
adc
into
rcr
xchg
and
cmp
inc
pavgw
loopne
out
clc
xchg
lea
ret
sbb
inc
int3
pop
ljmp
xor
decl
cmpsl
sub
pop
out
test
addl
and
pop
pushf
push
jg
ds
fstp
adc
push
jae
jb
sarb
sahf
outsb
adc
xchg
lcall
push
hlt
gs
jl
fdivl
sbb
cwtl
pop
inc
scas
inc
mov
or
jmp
jae
add
idiv
ret
cmp
and
sub
mov
inc
inc
stos
sbb
in
sub
mov
xchg
sub
in
test
mov
sub
mov
cmc
mov
lret
push
xchg
cli
outsb
repnz
fidivrs
push
sarb
cmc
mov
xor
inc
mov
leave
leave
outsb
pop
pop
jno
mov
ljmp
cwtl
xchg
sbb
ja
jb
mov
movsl
or
es
and
jl
scas
out
leave
push
or
pop
mov
int3
int
ljmp
mov
imul
jne
xchg
add
adc
jns
push
push
repnz
pop
fmull
ds
mov
pop
outsb
cmpsb
xor
addr16
mov
pop
adc
enter
add
dec
mov
fwait
push
pop
fcomp
lock
pop
jmp
mov
jg
lods
mov
out
jne
ds
fistpl
mov
sub
sbb
call
or
mov
ja
lcall
subb
fdivl
das
call
push
dec
inc
dec
and
pusha
add
xor
cmp
pop
pop
jmp
cmp
lret
cmc
push
aad
or
lahf
or
pop
mov
xor
mov
mov
loopne
add
jp
insb
popa
xchg
or
stc
dec
repz
sahf
popf
adc
incl
out
xor
mov
shll
rcll
pop
inc
jg
decl
sbb
xchg
xor
xchg
jo
cmc
shll
in
ds
inc
jmp
mov
mov
jbe
out
nop
xchg
xor
outsb
lock
mov
pop
leave
inc
movsl
xor
push
jp
dec
hlt
and
jae
jecxz
mov
sbb
jae
sub
sub
ljmp
sub
inc
vpunpckhdq
cmp
pop
rolb
cmpl
pusha
aad
jecxz
fnstenv
ficomps
dec
or
xorl
push
xchg
adc
aad
jmp
enter
je
jmp
inc
fidivrl
fldcw
rcl
jae
inc
inc
push
pop
shrl
xchg
das
std
cmp
or
xchg
bound
pop
ja
out
enter
stc
sbb
incl
adc
loopne
pop
pop
leave
inc
ret
sbbl
pop
xlat
push
dec
adc
ret
jg
pop
enter
shll
mov
movsl
push
lock
dec
sub
pop
into
mov
pop
rcl
jne
loop
fistpll
xchg
cmp
rcrb
rcll
xor
out
jnp
xchg
out
jb
outsb
push
push
mov
mov
insl
ljmp
lcall
push
mov
and
adc
sti
fwait
xchg
lret
in
lcall
vcvttsd2si
jns
pop
out
push
pop
out
push
fisubs
inc
insl
repz
pop
xchg
sbb
aaa
cld
pop
xlat
cltd
fcmovbe
ljmp
inc
mov
or
int
rep
jmp
xor
push
incl
lock
inc
lods
or
outsb
lods
add
and
jge
and
xor
pushl
loope
mov
js
pop
and
push
out
or
cmp
cmc
fsubl
fwait
cmp
outsb
fisttpl
jne
adc
xor
sub
dec
dec
adc
jl
popf
mov
cmp
aaa
sub
outsl
insb
xchg
lods
sbb
daa
roll
loopne
lods
inc
sti
push
ljmp
daa
pusha
arpl
leave
push
adc
outsb
inc
hlt
les
mov
pop
ret
push
adc
push
pop
sbb
push
xor
pop
pushf
or
pushf
sbb
repz
pop
jecxz
scas
clc
or
mov
movsb
pop
lods
lock
lock
mov
jno
sti
xchg
pop
inc
inc
mov
std
push
ljmp
push
loop
adc
xchg
daa
cs
sub
lcall
cmpsl
xor
mov
dec
loope
divl
test
stos
scas
popa
push
fisubrs
mov
fildll
mov
cmpsl
or
lret
fdivr
incl
cmc
jns
popf
add
imul
adc
insb
jl
push
adc
mov
into
pushf
rcrl
push
repnz
ss
mov
mov
and
mov
sbb
mov
call
lds
xor
sbb
jg
cmp
lret
pop
inc
out
lret
push
popa
lret
mov
loopne
or
jg
aaa
and
repnz
fcmovnu
jae
cmp
clc
jg
or
pop
dec
mov
pop
in
in
and
aaa
outsl
xchg
mov
add
scas
jecxz
cli
xchg
adc
push
cmpsl
add
ss
scas
sbb
or
cld
xchg
add
or
add
ds
loop
hlt
xchg
cld
repz
hlt
or
xor
xor
loop
outsb
fmuls
xchg
lahf
sar
decl
jle
sub
clc
jp
pushl
jnp
xchg
ficompl
negl
pop
adc
xchg
pop
cli
stc
xchg
out
lret
push
ljmp
jl
movsl
repnz
xchg
stos
xchg
inc
xor
notl
or
xchg
std
mov
int
out
sub
sbb
test
dec
xor
mov
mov
stos
xor
adc
ss
inc
test
hlt
sbb
pushl
loope
sarl
jl
jp
popa
xor
popf
divl
xlat
std
cli
jmp
adc
les
mov
jg
gs
insl
loop
dec
and
lahf
xchg
pop
decl
sub
xor
inc
mov
lods
cmp
fwait
xor
sub
xchg
mov
mov
orb
iret
push
icebp
stos
inc
mov
pop
or
lcall
or
lods
pop
test
aad
fistl
inc
mov
in
ljmp
jbe
stos
arpl
stos
cmc
jp
push
mov
xor
inc
jbe
dec
dec
mov
jmp
std
xchg
clc
cmp
shlb
jp
je
mov
lock
mov
movsb
xor
imul
pop
push
xlat
test
cmp
fisttpll
ja
imul
pop
jnp
fwait
or
inc
inc
lret
pop
out
pusha
mov
clc
sbb
sbb
fstpt
xor
out
orl
cli
das
rolb
nop
andl
sbb
xchg
sbb
push
call
push
repz
repnz
movsb
adc
flds
dec
adc
push
lcall
ret
fldt
mov
mov
xchg
cld
inc
shl
pop
loop
movb
sbb
mov
pop
clc
dec
sub
jnp
ljmp
jb
add
bound
bound
adc
xor
pop
mov
sti
inc
adc
cmp
ret
fsubs
mov
ljmp
or
divb
pop
ffreep
les
jo
stos
loope
inc
mov
minps
das
nop
das
mov
inc
mov
push
ret
xor
push
push
call
lods
ret
test
loopne
mov
add
and
or
dec
les
rcrb
sar
fstpl
mov
idiv
adc
stos
inc
in
sti
js
dec
enter
add
jge
inc
ss
stc
lcall
pop
jnp
testl
xchg
popa
cmp
outsl
cld
jecxz
cmp
xchg
pop
adc
js
mov
add
push
adc
incl
adc
test
add
xchg
add
xor
adc
mov
outsl
testb
push
outsl
or
mov
call
fildl
pop
xchg
adc
push
dec
clc
lret
xchg
addb
out
lcall
dec
mov
sub
push
loop
add
hlt
pop
icebp
movsb
dec
outsb
out
mov
pop
std
std
mov
mov
cmp
inc
xchg
ffreep
lcall
mov
pop
pop
ss
decl
in
mov
inc
dec
dec
aaa
lods
aam
jg
pop
stos
ret
add
jecxz
daa
adc
dec
xchg
lcall
jmp
das
jae
xchg
push
push
cmpsl
hlt
and
push
jmp
push
clc
outsl
cld
flds
fisubrl
adc
fisubrs
add
or
sbb
pop
mov
clc
xchg
cli
and
adc
xchg
push
cmp
jns
mov
sar
pushl
mov
fidivrl
movsb
lods
out
dec
stos
jns
inc
sbb
rorb
mov
outsl
xor
into
or
std
jg
iret
pop
cs
call
sbb
mov
cs
cltd
xchg
fstps
dec
xchg
mov
lahf
lret
mov
mov
call
dec
pop
jecxz
es
fisttpll
leave
mov
int3
es
mov
push
fbstp
or
rorl
dec
mov
ljmp
lods
and
push
aas
aas
loope
cmc
pushl
pop
pusha
push
mov
dec
shll
xchg
out
movsl
fs
fimull
mov
decb
sbb
xchg
cmp
mov
mov
add
nop
loope
push
pop
push
cs
cld
adc
or
sub
shlb
stc
fidivrs
aam
clc
push
repz
jg
cli
sbb
andb
lcall
iret
push
lods
sbb
popa
dec
sbbl
ljmp
popa
jmp
loopne
inc
sbb
lret
in
sub
or
lcall
jns
pop
pop
nop
movsb
out
dec
sbb
xchg
enter
and
aam
pop
into
lcall
in
fcomp
xchg
mulb
fwait
mov
mov
stos
jl
lcall
gs
or
test
pop
push
fcompl
faddl
ret
adc
fisubl
mov
mov
scas
fldt
in
and
iret
outsb
jne
loope
xor
push
mov
cmp
sahf
mov
insb
cmp
cmp
mov
push
mov
faddl
incl
xor
cmpsb
mov
jle
mov
call
addl
xchg
jge
xlat
imul
shll
mov
outsb
repz
decb
cld
jmp
or
stos
adc
jl
scas
inc
adc
iret
pop
cmpsb
out
ss
jp
out
push
jge
jns
pop
mov
lret
das
mov
jmp
gs
pop
push
shlb
jl
jge
cmp
mov
dec
inc
shll
jg
adc
push
pop
ret
and
test
mov
pop
inc
add
add
jmp
divb
adc
test
jp
test
call
pushf
adc
inc
out
jmp
adcb
jnp
jo
in
in
lret
scas
pop
sub
mov
xor
imul
js
ljmp
dec
mulb
aam
push
enter
sub
sbb
cmp
add
stc
lcall
jae
scas
test
mov
inc
outsb
xor
lcall
dec
bnd
jo
push
cmp
into
pop
mov
pop
xchg
and
xchg
pop
xchg
ja
mov
int3
int
jbe
in
jg
dec
inc
sub
aam
pop
int3
insl
out
es
test
xchg
ds
lcall
ds
xchg
and
xchg
fsubrs
pushf
lock
jl
sbb
dec
xchg
mov
ret
ja
loop
leave
sar
fprem
out
or
or
pop
in
jmp
bnd
jmp
inc
and
push
leave
fisubl
ja
pushl
decl
nop
sbb
out
and
inc
es
ret
lods
xchg
xor
mov
mov
or
mov
sbb
jns
dec
ret
jno
pop
pop
enter
imul
fsubrl
pushl
lods
leave
sbbl
lcall
fsubl
adc
test
repz
stos
add
mov
adc
movsl
adc
movhlps
push
or
mov
sbb
dec
leave
dec
xlat
mov
ss
call
inc
outsl
jecxz
cmp
or
fstpt
call
lret
ss
push
jbe
xchg
mov
fidivrl
ljmp
dec
stos
es
xchg
mov
dec
ds
xchg
push
xchg
and
push
dec
jecxz
aas
stc
out
mov
call
pushf
adc
inc
pop
fldl2t
cmp
out
jg
shll
mov
push
inc
adc
mov
mov
outsb
ret
aad
dec
mov
or
jmp
cmpsb
loop
mov
or
xchg
push
into
pop
jbe
jns
adc
iret
outsl
std
clc
xor
outsb
inc
cmp
pop
gs
aaa
sub
pushl
cwtl
imul
fidivl
movsb
movsb
mov
call
addr16
insl
icebp
das
aad
mov
fisttpl
movsb
out
inc
sahf
rcrb
loop
jns
add
aad
dec
cs
mov
call
pop
dec
and
sarl
mov
imul
pop
out
xchg
mov
mov
sub
jne
in
cmpsb
ds
jg
insl
cmp
xor
incl
inc
mov
jg
aas
sbbl
pop
or
cmp
pop
mov
add
add
jbe
lcall
mov
cwtl
fidivl
mov
lret
xchg
aas
push
test
in
lcall
es
outsb
ds
jns
rcll
js
xchg
dec
push
push
ffree
mov
fwait
decl
stc
push
cmc
inc
jb
in
lea
mov
ljmp
xlat
lret
int3
sub
dec
cmp
scas
and
sbb
mov
xchg
xchg
mov
mov
repz
jg
lret
pop
sub
out
mov
pop
adcb
test
dec
into
and
aam
pop
lcall
outsl
xor
dec
cltd
test
push
into
ret
add
hlt
inc
push
xchg
sarl
jg
and
aam
xchg
mov
int3
add
adc
dec
pop
push
xlat
pop
push
iret
and
call
add
sbb
sub
imul
frstor
pushw
mov
mov
pusha
add
in
fimull
lahf
leave
ja
imul
shrl
in
lea
stc
or
dec
xchg
pop
xor
inc
xchg
fisubs
fiaddl
xchg
push
scas
fistpll
fidivrl
jno
shlb
popa
pop
cmc
dec
fbld
push
stc
ljmp
xchg
and
mov
and
cs
cmpsb
jecxz
inc
xchg
jg
mov
in
mov
ret
jle
add
lret
mov
dec
flds
mov
push
or
mov
and
jmp
in
aam
pop
shl
sub
inc
add
ja
rorl
clc
rcll
push
xor
stc
bnd
test
call
jl
xlat
inc
inc
out
aaa
pop
fistps
lds
sub
dec
aaa
mov
mov
cmpl
cmp
addr16
mov
dec
xchg
fwait
push
jbe
xchg
movsl
push
call
or
ljmp
mov
mov
pop
sbb
adc
lret
inc
imul
xor
jg
ljmp
pop
inc
jbe
fsubr
mov
test
fcmovbe
mov
cmpsb
rol
not
dec
push
lock
test
mov
pop
iret
push
and
dec
jp
mov
cmpsb
loope
stc
jp
dec
xchg
call
enter
push
jne
test
mov
rolb
xchg
lret
inc
mov
cmp
pop
xor
xor
mov
mov
das
call
scas
popf
mov
jg
cmp
cmpsl
fisubrs
add
fmul
adc
xchg
out
jns
xchg
call
push
mov
mov
arpl
fdivrp
lcall
inc
imul
dec
sub
dec
sub
rorl
cmp
pop
mov
dec
test
les
mov
pop
aad
mov
fwait
sub
mov
outsb
stos
xor
cli
aam
jg
mov
mov
out
sahf
inc
outsl
xchg
outsl
mov
xor
leave
aaa
dec
sub
mov
lods
push
cmp
pop
aas
into
decl
scas
xchg
or
rcrl
lahf
cs
jle
stc
fld
lret
add
es
cmp
mov
insl
icebp
push
pop
mov
movntq
out
int
mov
ss
mov
jl
or
repnz
cmpsb
out
imul
lock
js
sarb
bound
addr16
das
or
mov
dec
push
jg
cld
and
aam
pop
iret
jecxz
cmp
je
xchg
rol
daa
add
lret
cs
mov
lsl
pop
jle
iret
fdivrs
stos
mov
lret
stos
jo
pop
aad
call
jecxz
pop
pop
je,pt
nop
jmp
lods
ds
add
sbb
add
pop
aaa
mov
mov
dec
aaa
aam
fdivs
in
call
aaa
add
or
cmp
cmp
push
cmp
cmp
push
incl
xchg
cmp
or
mov
cmp
ljmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
jmp
cmp
adc
xchg
cmp
in
adc
loop
test
lret
idivb
sarl
in
xchg
push
push
jmp
sub
xor
pushl
xor
xor
das
xor
push
xor
xor
popa
xor
xor
xor
cld
pushl
dec
xor
jae
xorb
xor
shll
cmc
cmp
lds
inc
lret
push
xor
jp
pushl
test
pushf
xor
xor
xor
xor
xor
xor
xor
in
xor
movsl
xor
xor
xor
xor
lds
aaa
cld
pushl
xor
xor
xor
xor
shlb
fdivl
and
decl
cmp
cmp
pop
cmp
jne
xchg
cmp
cmp
cmp
ret
fcomip
cmp
stos
daa
fidivrs
lock
cmp
sub
incl
jno
ja
mov
cmp
hlt
mov
jmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
das
mov
popf
inc
scas
cmp
cmp
sbb
clc
cmp
mov
cmp
test
pushf
mov
cmp
mov
push
aas
cmp
aas
cmpsb
aas
mov
in
ret
jecxz
dec
jo
hlt
add
jmp
jge
mov
xchg
xor
xor
pop
and
inc
xor
xor
call
mov
scas
mov
xor
xor
xor
xor
xor
xor
xor
arpl
mov
call
xor
xor
xor
or
pop
xor
xor
xor
xor
xor
xor
xor
jg
mov
lock
xor
mov
enter
push
ss
sbb
and
mov
ss
ss
ss
ss
ss
mov
fidivs
out
aaa
stc
aaa
pop
ret
aaa
cld
add
cmp
adc
push
add
push
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
std
mov
add
sbb
ds
popf
mov
ds
sarl
in
ds
ds
aas
pop
aas
sub
inc
aas
push
aaa
lret
idiv
aas
test
xchg
aas
cltd
aas
lods
aas
fidivrs
cli
repz
xor
icebp
jg
xor
jl
lret
xor
xor
xor
jg
xchg
xor
push
cld
pushl
repnz
xor
xor
xor
jo
lret
xor
xor
loope
fisttps
mov
xor
xor
xor
xor
xor
dec
cld
mov
out
xor
imul
test
fwait
ss
jg
decl
cmp
cmp
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmpl
call
xor
cmp
cmp
aaa
cltd
pop
cmp
jbe
jl
xchg
xchg
lcall
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
mov
sub
cmpb
std
push
aas
popa
aas
push
fstpl
aas
jecxz
aas
cmp
inc
int
and
fistpll
xor
insl
testl
xor
xor
fxch
xor
xor
xor
cmp
pusha
xor
shl
or
push
or
xor
mov
xor
mov
mov
xor
shll
mov
ss
inc
add
ss
ss
aaa
fs
imul
jg
xchg
aaa
cmp
cmp
cmp
int
sbb
cmp
or
out
cmp
rcll
push
cmp
cmp
jb
stos
push
pop
jg
cmp
adc
cmp
cmp
xchg
fcomi
ljmp
cmc
cmp
cmp
or
adc
inc
aas
outsb
aas
jae
dec
dec
shlb
scas
xor
xor
xor
pushl
aas
xor
xor
xor
xor
xor
xor
xor
xor
and
pushl
lock
xor
xor
xor
xor
sbb
cmp
aas
xor
ja
or
xor
outsl
xor
test
mov
or
xor
xor
xor
sbb
xor
xor
xor
xor
pushl
add
xor
xor
xor
xor
push
xor
xorl
mov
mov
cmc
lcall
sbb
xor
xor
xor
xor
xor
xor
std
fbld
iret
xor
xor
xor
xor
sub
dec
xor
xchg
pop
aad
movsl
xor
xor
divb
push
jg
ss
dec
ss
mov
xchg
gs
pushl
enter
push
aaa
or
aaa
inc
aaa
push
aaa
arpl
outsb
aaa
ja
mov
aaa
shlb
jmp
aaa
lock
cmp
cmpsl
push
cmp
pop
pushl
test
xchg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
cs
ljmp
push
mov
loopne
xchg
pop
cmp
jecxz
pop
push
ds
cmp
inc
ds
sub
fdivrl
clc
stos
outsl
push
aas
pop
aas
les
mov
je
lds
mov
lcall
pop
push
pop
xor
lcall
xor
xor
mov
xchg
xor
xor
xor
add
out
xchg
mov
xor
xor
xor
imul
add
xchg
cmpl
pop
sub
jno
jecxz
xchg
xchg
xor
pop
shlb
int3
xor
xor
xor
test
sbb
xor
imul
std
mov
adc
sbb
inc
jnp
adcl
ss
aaa
and
sbb
and
sub
bound
push
pushl
mov
mov
xchg
aaa
lcall
aaa
mov
mov
fxch
aaa
jmp
cwtl
sub
or
sbb
mov
adc
stos
push
cmp
pop
sub
sub
jmp
fstpl
idivb
adc
test
nop
ja
jge
test
stos
mov
je
dec
pop
sarb
fnstsw
mov
psllw
push
inc
testl
add
xor
add
and
pop
sub
out
add
add
adc
and
sub
push
mov
add
xor
push
and
and
add
enter
cmp
add
inc
cmc
in
imul
add
out
fcomps
jae
arpl
ret
inc
and
addl
xchg
daa
inc
xchg
mov
push
adc
lods
xchg
rclb
enter
int
sbb
clc
or
sbb
fldenv
xor
mov
mul
xor
cli
adc
rolb
es
shll
mov
cwtl
stos
mov
shll
pop
dec
ds
jae
lret
mov
add
xchg
dec
shll
enter
test
roll
sahf
outsl
insb
pop
mov
imul
pop
mov
add
add
inc
cs
inc
mov
add
dec
pop
incl
js
push
push
mov
repz
adc
js
aaa
add
insl
cmpsb
dec
dec
adc
imul
jae
sub
push
push
inc
and
mulps
add
adc
and
and
or
add
leave
int
fsubs
add
add
add
pop
and
and
or
enter
add
and
mov
add
add
add
adc
or
add
add
push
enter
or
add
add
or
cvtpi2ps
push
mov
cwtl
sahf
xchg
scas
mov
mov
add
pop
xchg
pop
dec
pusha
and
mov
xchg
add
enter
incb
rclb
les
imulb
add
dec
sbb
inc
lods
adc
or
mov
call
aaa
inc
and
xor
add
inc
jg
insl
imul
mov
out
xor
and
pop
cmp
fcompl
rorl
shl
mov
inc
inc
push
inc
or
ss
jne,pn
sbbl
add
bswap
cli
dec
cmp
mov
or
in
sub
outsl
adc
lret
jnp
or
or
jae
addr16
inc
xor
push
add
movd
push
add
daa
das
or
push
cmp
push
adc
xchg
cmove
add
pop
stc
or
pusha
and
push
and
push
and
jle
or
push
lds
adc
adc
fs
and
or
jns
mov
add
and
xchg
pushf
dec
jb
mov
pusha
adc
ds
call
pop
xchg
cmp
and
cmp
add
cmp
jl
jo
inc
mov
gs
push
lret
xlat
cld
fildll
xchg
or
pop
and
or
mov
mov
inc
inc
mov
adc
jb
outsl
outsb
mov
lret
jb
jae
cs
and
popf
xlat
popa
xor
fs
xchg
outsb
arpl
mov
lret
push
push
fnstsw
loope
leave
mov
lret
js
bound
fs
aam
je
sti
xor
test
movsb
popf
inc
shll
adc
mov
hlt
je
sbb
mov
dec
in
cmp
xor
jb
outsb
adc
add
int3
out
insb
xor
repz
xor
cs
addb
ds
test
add
pop
sahf
rol
dec
aad
mov
std
aas
and
dec
adc
dec
imul
jb
or
push
sub
repz
cwtl
fsts
cmc
into
int3
add
outsb
cmp
mov
jnp
adc
cli
jnp
leave
ss
in
adc
push
inc
sub
pop
pop
pusha
jg
xlat
push
fisttpl
push
jge
fists
mov
cmp
je
push
inc
mov
lods
mov
ret
hlt
xchg
add
out
xlat
std
bound
mov
push
adc
jmp
jg
int3
sbb
dec
push
decl
jne
lock
in
pop
mov
sub
jnp
test
sbb
sbb
jp
test
sbb
lods
lods
scas
scas
inc
inc
inc
mov
mov
pop
sbb
add
stos
int
in
icebp
sbb
movsl
push
cmpsb
imul
fs
test
sbb
stos
std
stos
std
lods
std
lods
xor
in
hlt
or
jo
insb
add
insb
cli
outsl
gs
push
mov
xor
aaa
js
stos
cmp
cltd
movsl
mov
add
mov
sub
push
jae
mov
push
in
mov
add
call
mov
mov
fadds
pop
xchg
sbbl
pop
xchg
outsl
outsb
outsb
gs
fimull
je
xchg
push
or
popa
jne
mov
push
xchg
gs
lret
mov
cmpsb
jno
insb
shll
dec
pop
lds
cs
sub
imul
jo
outsl
mov
gs
dec
xchg
addl
int
in
dec
inc
mov
out
or
aad
mov
jg
sbb
xchg
int3
jecxz
inc
cs
sub
dec
push
movups
or
js
adc
sbb
push
pop
je
daa
adc
cwtl
sbb
idiv
pop
sbb
decl
or
syscall
mov
repnz
call
jge
adc
adc
or
jl
jns
mov
or
sbb
cmp
sub
popa
pop
mov
or
filds
aam
add
fcomps
adc
mov
movsb
int
orb
adc
sub
es
insb
and
mov
mov
mov
inc
adc
push
jnp
data16
push
mov
mov
xor
cmp
rcrb
add
xor
sbb
xor
cmp
ljmp
mov
into
jge
mov
pop
xor
pop
mov
pop
movl
mov
jbe
or
lods
dec
or
jo
add
test
cltd
or
pop
pop
add
sbbl
dec
add
subb
data16
daa
stc
sub
add
add
adc
fildl
add
xor
add
in
or
cmp
add
push
and
insb
add
mov
das
movsl
xor
xchg
dec
and
fcmovnbe
and
test
jl
sub
xor
ss
xor
jbe
adc
mov
add
adc
sbb
jl
push
sbb
lock
mov
test
add
test
adc
lods
aaa
out
push
and
push
sub
mov
or
dec
push
dec
lea
adc
or
xchg
fldl
test
or
adc
adc
test
repz
xor
cmp
jl
cmp
lcall
mov
add
jb
aam
inc
in
and
js
mov
sub
push
or
mov
push
pop
rorl
insl
insl
dec
jae
iret
dec
aam
mov
mov
push
and
or
jmp
std
xchg
adc
aam
mov
mov
add
inc
sbb
xlat
push
insb
lcall
call
pop
sahf
inc
das
inc
push
xor
dec
and
mov
mov
pop
push
inc
add
mov
push
pop
and
sub
pop
dec
xor
shll
pop
jecxz
out
imul
scas
jmp
cmp
adc
jmp
lea
or
arpl
stos
addl
xchg
fsubp
push
pop
jmp
push
adc
or
stos
orl
and
mov
xor
loope
adc
and
mov
push
jne
jae
add
icebp
adc
nop
adc
int
pop
push
out
notl
sub
jecxz
aad
adc
jne
insb
sbb
jnp
sbb
adc
imul
ljmp
andb
adc
imul
lds
test
lock
push
data16
outsl
cmp
insb
pop
xor
add
xor
hlt
pop
xor
sbb
fdiv
adc
stc
incl
mov
outsb
imul
jns
add
mov
sub
adcb
aad
add
add
dec
push
pusha
int3
add
loope
test
dec
push
xor
mov
push
or
dec
push
cmovns
out
dec
mov
jae
ss
aas
jg
add
ss
aaa
and
add
jb
mov
dec
pop
mov
or
inc
lds
testl
xor
jecxz
fwait
jmp
pop
inc
and
xor
jae
int
rclb
and
popa
jns
popa
insl
cwtl
jns
and
add
addr16
gs
imul
es
push
sub
push
mov
or
adc
jae
gs
push
jb
cmp
cmp
xor
add
xchg
xchg
insb
popf
bound
mov
adc
dec
or
cmp
sti
lds
popf
addr16
sbb
mov
xchg
pop
xor
mov
sub
sub
pop
fs
or
daa
leave
orw
imul
push
daa
jbe
test
imul
or
dec
je
and
movsl
test
fs
imul
and
push
test
outsb
push
insb
cmpsl
xchg
dec
sub
pop
out
fisttpl
inc
cmpb
adc
add
jne
xor
adc
orb
jae
xor
xor
xor
xor
xor
xor
xor
stc
mov
pop
mov
mov
adc
jns
test
mov
test
shlb
test
gs
lea
test
iret
aaa
fnsave
icebp
aaa
pop
cmp
cmp
mov
cmp
cmp
sbb
cmpl
cmp
cmp
push
cmp
cmp
incl
or
cmp
iret
push
loop
pop
and
insl
aas
cmpb
aas
mov
mov
aas
mov
adc
lcall
test
xor
xor
dec
xor
test
mov
nop
xor
rcrb
sbb
or
dec
adc
add
push
adc
sbb
andb
in
adc
push
outsl
data16
int3
push
lret
rdmsr
or
test
add
and
push
add
sbb
push
add
add
nop
and
or
out
jge
test
jbe
mov
ror
or
addr16
popa
mov
decb
sbb
sub
cmovbe
andb
dec
add
ficoms
rcll
call
add
or
mov
adc
adc
loope
aad
mov
add
pandn
out
add
jmp
sbb
adc
inc
mov
stos
pop
push
adc
add
sbb
cs
in
adc
add
add
inc
ljmp
adc
xor
nop
jne
fs
add
sbb
nop
push
sbb
add
addr16
and
inc
ret
inc
mov
lods
jnp
pop
sbb
add
add
sbbb
push
add
inc
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
