push
call
ret
ret
sub
scas
xor
and
add
add
scas
fwait
ret
pop
adc
pop
push
add
cmpsb
mov
mov
cmp
adc
hlt
cmp
out
std
adc
inc
add
int
sub
sub
sti
cld
in
pop
xchg
bound
scas
out
les
bound
add
xor
out
movsb
mov
out
push
inc
pop
lcall
loopne
aaa
nop
cmp
ret
mov
push
fidivrl
mov
adc
inc
cli
std
adc
stos
es
dec
push
xchg
out
mov
sub
cmp
jmp
mov
and
fnstsw
jae
loop
pusha
mov
insb
in
outsb
xchg
outsb
cmp
les
popf
jo
lock
lret
scas
pop
fistpll
enter
mov
lds
pop
sub
insl
dec
or
in
arpl
movsl
jb
stc
mov
mov
jecxz
xor
ljmp
mov
bnd
push
in
or
cld
stos
sar
ret
pop
jg
out
cmp
fucomip
ror
xchg
or
push
outsb
xchg
addb
pusha
cwtl
push
or
cs
pop
and
repz
dec
sbb
mov
add
push
aam
xchg
pop
popa
mov
push
xor
pop
sub
xchg
and
pop
hlt
fwait
and
cld
cmp
das
ret
inc
add
mov
in
loope
adc
push
xor
xchg
insl
rorl
test
test
and
pop
mov
cwtl
arpl
mov
adc
mov
out
sub
loopne
mov
push
sub
imul
lods
dec
cmp
sub
rolb
fs
mov
aam
push
in
mov
ret
aaa
mov
dec
test
out
stc
pop
imul
mov
or
mov
mov
fisttpll
mov
pop
jbe
adc
sarl
ret
ja
icebp
mov
outsl
inc
ret
dec
call
xor
mov
cmp
in
mov
bound
insl
fstps
xchg
mov
inc
sahf
arpl
arpl
mov
xor
adc
xchg
and
add
push
sbb
fstpt
xorl
std
sbb
sub
lahf
into
sub
inc
sub
inc
fisubrl
xchg
cltd
fbstp
mov
into
inc
xor
ss
shll
inc
fldt
and
fsubs
pushf
mov
sbbl
mov
mov
xor
mov
and
jmp
int
jnp
ss
xor
inc
mov
adc
stc
push
insl
and
ret
repnz
leave
sbbb
cmpsb
or
pop
xchg
inc
mov
and
hlt
sub
popf
push
fstpt
ljmp
adc
inc
pop
push
addr16
cli
pop
and
or
dec
sbbl
mov
popf
mov
pop
dec
mov
cmp
orl
rcll
sub
inc
aaa
cld
xor
xchg
pop
jbe
sar
xchg
push
cld
pop
mov
loope
and
jno
xchg
test
mov
xor
push
mov
sub
jp
div
cld
jnp
and
std
xchg
push
sti
or
sbb
out
sbb
inc
in
inc
xor
mov
dec
jmp
out
out
lcall
jg
sub
xchg
jbe
cs
cmp
testb
lods
es
mov
mov
leave
mov
sbb
mov
adc
fidivs
adc
mov
je
cmp
cltd
sub
xchg
in
test
in
inc
icebp
push
adc
and
dec
sarb
xorb
daa
out
sub
lods
xlat
clc
mov
add
xor
push
mov
aaa
int
shl
xor
sbb
dec
inc
jae
imul
std
push
push
add
push
xchg
inc
mov
adc
test
lds
sub
lea
push
inc
xchg
in
negl
dec
dec
fiaddl
lods
sbb
lods
cs
xchg
pop
mov
lret
mov
gs
imul
mov
repnz
loopne
pop
fimuls
inc
repnz
out
jbe
pop
leave
jg
in
adc
cmp
fwait
or
cmp
push
xor
cmp
dec
cmp
lods
sahf
xor
dec
mov
cs
scas
pop
stc
fcmovnb
std
push
pushf
insb
movl
mov
mov
pushf
movsl
or
enter
xor
adc
sbb
jle
add
inc
fs
shrl
pop
hlt
sub
adc
ss
sub
push
test
xor
mov
jne
xorb
int
fstp
push
repz
test
xchg
mov
subb
in
adc
imul
dec
jg
lds
in
xchg
push
inc
rclb
xor
sub
movsb
xor
std
dec
inc
push
jne,pn
inc
imul
aad
mov
pop
mov
mov
popf
xchg
or
loope,pn
ljmp
pop
adc
and
test
and
ljmp
jl
and
mov
pop
out
pop
fs
aas
sbb
add
pusha
xor
arpl
fimull
inc
ss
jno
cltd
sub
ss
data16
leave
loop
adc
icebp
or
cwtl
sub
add
cmp
lock
xor
or
iret
sbb
test
bound
dec
lds
out
add
xchg
pop
or
test
imulb
imul
or
fistl
push
out
cwtl
out
cli
movsl
es
cwtl
insl
mov
loope
int
jmp
gs
mov
ficoml
cmp
dec
sub
rcrb
add
jne
fs
mov
ja
push
add
fistpll
push
icebp
arpl
aad
loope
adc
imul
ret
loop
push
rolb
jg
and
in
sbb
das
daa
cli
sbbb
aaa
int
push
roll
arpl
sbb
cmp
scas
pusha
popa
popf
adc
xor
dec
icebp
pop
inc
sub
cwtl
cmc
icebp
je
push
imull
pop
dec
cmp
inc
jp
push
lock
mov
movsb
mov
lret
jno
movsl
xor
add
lahf
mov
inc
xor
insb
cld
mov
adc
jmp
js
in
andb
pop
push
ror
mov
idiv
inc
xchg
and
push
loope
xor
inc
mov
stc
inc
sub
mov
bound
imul
xchg
sbb
push
gs
or
ret
jb
inc
cmp
inc
xchg
mov
inc
dec
mov
mov
fisttps
xor
sbb
push
sub
lods
xchg
add
stos
dec
lods
xchg
ret
xor
ds
out
mov
mov
or
pop
insl
data16
andl
sub
mov
add
push
cmpsb
xor
mov
xchg
mov
jecxz
mov
daa
outsl
daa
outsl
pop
loope
icebp
fbstp
sahf
decb
shlb
std
pop
int
xchg
sbb
rolb
mov
vfmsub132ss
cs
sbb
jp
push
adc
xchg
add
pop
or
xchg
iret
data16
push
mov
xchg
lahf
and
shl
inc
adc
jns
loopne
cli
dec
fimull
aad
pop
or
sbb
xchg
loope
lea
sbb
xchg
and
xlat
mov
mov
insl
mov
mov
sbb
ret
scas
scas
mov
movsl
scas
popf
loope
inc
push
xchg
daa
push
mov
mov
pop
mov
shll
fsubrs
inc
jg
mov
aaa
jae
mov
jp
mov
scas
push
popf
insl
iret
xchg
dec
push
adc
in
cmpsb
aad
mov
xlat
stos
mov
test
add
and
rclb
cld
movl
push
clc
mov
push
inc
movsb
xchg
ret
mull
dec
sbb
xor
xor
cltd
jp
les
sbb
movsb
inc
daa
adc
sub
leave
repnz
lock
pushf
out
mov
call
roll
repz
stos
scas
jno
ret
scas
jbe
icebp
mov
inc
pushf
pop
cmp
js
or
adc
gs
cmp
pop
mov
pop
xor
insl
pop
xchg
sub
push
cli
out
in
cmpb
mov
in
fiadds
js
jge
mov
ficomps
shll
inc
cmp
dec
mov
addb
movsb
lock
arpl
push
call
adc
lret
stos
in
mov
loop
out
push
jno
mov
mov
shrb
ret
loope
sub
sub
xlat
bnd
sub
movsb
add
add
sub
add
out
into
pop
aas
mov
fwait
sub
fucomp
fsts
lds
mov
or
scas
jecxz
hlt
outsl
ficoml
jne
fiaddl
rcrb
mull
jmp
int
jecxz
sbb
cld
faddl
scas
dec
dec
push
dec
jle
btr
push
jmp
inc
fdivrl
arpl
jmp
sti
testl
fbstp
jg
push
cli
lods
pop
cs
ja
sub
cltd
push
and
std
daa
xlat
inc
imul
or
in
or
xchg
into
shll
popf
bound
sub
leave
mov
inc
aam
jmp
mov
jg
jae
das
imul
push
push
ja
mov
cmpsb
nop
nop
sahf
daa
sbb
aaa
or
mov
fwait
mov
pop
adc
call
sbb
mov
lods
cmp
cmp
add
imul
pop
pop
push
cmpsl
popa
pop
sub
leave
and
mov
dec
in
and
scas
dec
fstl
cmpsb
jb
xchg
sbb
stos
pop
mov
add
sub
pop
jae
str
int3
xchg
jle
adc
into
je
dec
push
mov
aam
jmp
shll
cmp
roll
dec
sbb
sub
dec
or
cld
jb
push
ss
lahf
or
cmp
jb
aam
mov
adc
adc
dec
out
inc
sub
es
add
adc
test
loop
incb
lret
fisttps
adc
push
inc
lret
mov
test
add
mov
lcall
outsb
scas
mov
sahf
arpl
mov
xchg
jmp
mov
dec
inc
adc
inc
xchg
lcall
add
out
pushf
inc
sbb
rol
int
lds
movsl
shll
sbb
cmp
add
gs
loop
dec
nop
mov
sbb
cwtl
std
mov
inc
pop
dec
ret
xchg
shrl
test
sbb
push
pop
enter
mov
insl
pushf
adc
sub
iret
or
outsb
or
or
cmpsl
pusha
repnz
sahf
xchg
push
in
inc
rcll
rclb
data16
orb
cmp
dec
loopne
sti
fs
xor
sub
imul
or
and
cmpsb
punpckldq
test
mov
into
push
and
adc
mov
je
xor
xchg
xchg
dec
cmovg
test
jmp
jnp
dec
out
stos
lcall
mov
pop
lea
mov
std
xchg
mov
push
fwait
xchg
sti
mov
or
inc
aas
shl
or
fsubr
es
stc
aam
mov
ficoms
mov
lahf
outsl
or
inc
out
nop
loope
aam
push
int
inc
pusha
adc
sub
and
dec
mov
xchg
divb
int
or
mov
jmp
adc
movsb
dec
adc
ja
and
scas
push
fs
or
mov
ret
data16
insl
jno
mov
ja
sbb
cmc
push
dec
mov
in
rclb
and
sub
rolb
cmp
sti
test
ds
pop
jl
pop
inc
sar
scas
jnp
in
mov
xchg
xorl
jp
std
in
dec
jecxz
push
xor
pop
insb
lea
or
xchg
int3
xlat
test
inc
mov
inc
dec
jg
add
dec
xor
jbe
xchg
pop
sbb
insb
xchg
or
jecxz
jl
fistps
jmp
add
cmc
and
fs
mov
sbb
cli
je
xchg
dec
mov
jbe
loopne
inc
enter
popf
aas
in
clc
pop
push
out
aaa
jge
and
jbe
test
arpl
jns
insl
mov
inc
cmpsb
loop
mov
xor
inc
shrb
out
jl
sbb
in
jo
push
adc
scas
push
pop
add
push
mov
repz
push
jno
cmp
lret
daa
cmc
fistl
and
push
cmp
pop
adc
xchg
or
mov
xchg
in
push
xchg
sub
pop
fwait
mov
jbe
les
lods
xchg
out
out
lcall
shrb
dec
push
cmpsb
lcall
mov
jge
jg
mov
xchg
push
lods
int
lret
sbb
dec
inc
out
ret
xchg
cmc
scas
aam
loopne
jg
lock
or
xchg
fstl
xchg
push
or
addr16
push
out
xchg
mov
xchg
adcl
js
mov
adc
mov
push
dec
cmpsl
sbb
mov
lock
bound
mov
adc
pop
dec
test
mulb
cmp
add
xor
ss
mov
mov
fldenv
stc
out
xchg
adc
sti
cmp
cld
adc
stos
dec
test
push
insl
xchg
mov
cld
cmp
jmp
and
sbb
inc
test
pop
das
lea
xchg
pop
mov
out
and
bound
fldt
and
movsbl
popa
stc
push
cmp
add
lods
xor
and
pusha
xor
leave
idivl
dec
pop
pop
mov
cmpsl
jl
adc
pop
cmpsl
lods
push
push
decb
pop
cld
inc
mov
mov
ds
pusha
sub
xchg
shlb
imul
xchg
push
xchg
jmp
clc
mov
pushf
cwtl
orb
cmpb
mov
into
cmpsl
mov
stc
hlt
ret
mov
stos
cs
cmp
cmp
jae
hlt
inc
mov
push
jmp
sahf
and
jae
adc
jp
mov
out
fstps
xchg
pop
xchg
and
lds
lret
jno
jg
and
fistl
int
icebp
jg
jns
frstor
mov
mov
mov
push
or
adc
xchg
push
sbb
sarb
dec
mov
ja
pop
testb
mov
xor
mov
cmp
push
mov
mov
dec
mov
enter
cmc
jl
jl
sbb
cmpsl
adcl
sahf
inc
and
loop
je
inc
inc
lods
xlat
pop
ds
ds
pop
call
lds
stos
pop
fidivrl
loopne
push
subb
nop
xchg
lods
push
lock
push
add
jecxz
sub
call
dec
icebp
insl
imul
nop
pop
sub
stos
pop
ret
xor
test
and
test
repz
xchg
cltd
xchg
ficompl
rol
subl
pop
cmc
and
mov
push
and
adcl
lods
sbb
sbb
insl
adc
pop
mov
mov
jl
jmp
pop
mov
clc
cmpsl
add
xchg
inc
movsb
aas
stos
cs
insb
mov
dec
push
mov
add
add
xlat
jns
int
adc
arpl
test
push
enter
xchg
xchg
insl
jno
xchg
out
inc
ret
xchg
or
paddsw
dec
dec
out
xor
inc
lods
pop
jnp
jl
call
push
dec
ds
add
fisubrs
or
cltd
sbb
jmp
test
leave
jne
test
ja
mov
inc
sbb
inc
cmp
sarl
addr16
jbe
mov
jg
imul
add
add
rclb
dec
mov
jae
push
dec
push
arpl
mov
or
hlt
outsl
mov
popa
add
cltd
addr16
adc
cmp
pop
sub
es
rcrb
cs
push
loope
test
and
pop
pop
dec
pop
test
lcall
mov
fcos
pop
inc
sbb
jne
or
jecxz
shll
push
lret
mov
fdivs
jbe
pop
cmp
add
dec
dec
adc
out
jl
cmp
push
cmp
jmp
ffreep
cmp
js
jmp
divl
fcompl
adc
rolb
sbb
or
jle
lea
adc
sub
imul
data16
clc
cmp
in
lret
mull
inc
and
sub
shl
and
jg
and
xor
inc
jbe
insb
outsl
jge
dec
jge
jno
mov
sbb
hlt
lods
movsl
imul
pop
jne
jle
imul
jp
xchg
test
mov
xchg
mov
ss
in
ret
call
adc
or
lret
in
lcall
jmp
dec
mov
test
repnz
outsb
int3
popa
and
sbb
fstpl
insb
pop
scas
jo
lock
and
aam
mov
jecxz
and
fwait
loop
push
xchg
icebp
jmp
push
bound
sti
or
push
shll
bound
fistpl
pop
or
mov
pushf
out
ss
dec
cmpb
mov
sub
leave
shll
mov
mov
sub
call
das
cmpsl
loopne
mov
sbb
pop
pusha
outsb
and
shl
call
hlt
lret
adc
push
mov
inc
sti
sbb
jae
push
dec
mov
pop
loope
lret
xchg
sub
and
push
mov
jo
push
imul
scas
mov
test
jbe
fptan
insl
ljmp
in
push
pop
shlb
enter
or
ljmp
and
pop
jmp
js
cmc
inc
stc
dec
ret
out
sbb
xchg
cmp
lret
iret
push
push
mov
xchg
add
notb
sarl
scas
bndstx
jl
enter
loop
cmp
inc
loop
xchg
and
das
pushf
pop
sbb
mov
fistl
stos
cmp
pop
cmc
adc
ljmp
mov
cmc
add
pop
lret
add
add
dec
xor
movd
pop
xor
and
lahf
stos
mov
inc
shrl
aad
fnstcw
mov
mov
fmuls
outsl
loope
xchg
jb
dec
inc
mov
std
out
insl
inc
ja
and
clc
out
es
jne
add
clc
dec
add
jmp
je
pop
mov
clc
jbe
fcmovnb
cmp
jne
push
xchg
insb
inc
or
dec
xor
cmc
pmaxsw
jmp
popf
cmp
mov
out
stc
addr16
les
lahf
sbb
incl
fisttpl
add
and
add
jp
sbb
outsl
scas
and
cmp
jecxz
xchg
jno
in
cld
jne
push
mov
rcl
and
out
add
ja
mov
enter
add
das
mov
dec
and
dec
loopne
inc
xor
call
push
push
adc
xchg
inc
pop
in
push
popf
mov
in
dec
repnz
in
rol
mov
aam
adc
mov
les
mov
xlat
loop
int3
pushf
ljmp
sbb
mov
push
pop
sbb
ds
cmp
sbb
into
shr
pop
cmp
xchg
jl
push
sbb
push
sbb
cmp
enter
outsb
shr
aad
mov
enter
sbb
sbb
push
jnp
mov
mov
push
push
push
sub
or
mov
mov
or
jg
nop
mov
andl
or
jo
push
imul
xor
fdivrl
addl
lods
dec
jae
and
ljmp
je
std
cmp
mov
in
mov
xor
loopne
out
xchg
stc
aam
push
aaa
xchg
mov
shrl
in
jle
enter
xor
test
mov
fwait
pop
imul
sarb
out
or
cmp
sub
mov
int3
movsb
xchg
rolb
imul
jl
je
fcom
sbb
mov
imul
loopne
js
dec
push
inc
cmp
mov
pushf
xor
xchg
mov
out
jge
push
xor
and
cld
push
arpl
in
insl
mov
sub
lods
add
pop
sub
push
add
xchg
pop
loope
dec
jbe
cs
or
loopne
push
adc
mov
xchg
int3
dec
or
jg
or
arpl
add
das
sahf
test
stos
mov
icebp
jb
imul
insb
sbb
xchg
mov
xchg
dec
hlt
enter
dec
jle
or
std
xlat
inc
repnz
fnstenv
pop
imulb
int3
mov
xor
cs
stos
and
lcall
int3
mov
into
adc
stos
test
leave
nop
cwtl
mov
cmpsb
std
int3
sar
call
and
sbb
shll
cld
aaa
pop
std
shll
cmp
fsubrp
dec
xor
sbb
lods
xchg
dec
scas
mov
adc
in
mov
and
xlat
xor
xor
xor
pop
xor
or
cmpsl
add
ljmp
pop
pop
jo
push
in
cmp
imul
xor
int
pushf
xchg
or
je
pop
repnz
sbb
out
out
xor
push
pop
dec
jb
ljmp
mov
lock
iret
xchg
lea
into
mov
movsl
fwait
aas
xchg
jg
outsb
ljmp
mov
adc
das
and
push
jnp
out
pop
cmp
roll
imul
lcall
ja
push
pop
jnp
push
cmc
mov
inc
dec
popf
jno
push
push
mov
imul
mov
mov
lret
mov
add
add
push
adc
js
loopne
inc
jne
inc
dec
xchg
notl
lea
dec
lock
cld
lret
inc
ja
js
imul
push
adc
xor
std
mov
inc
inc
add
ds
or
or
xlat
flds
fld
cld
pop
stos
int
pop
mov
adc
adc
mov
rorb
jl
addb
push
inc
jge
sbb
int
in
xlat
xchg
jae
lahf
int
sti
mov
lea
movsb
jns
lods
sar
adc
xchg
push
sbb
cmp
ret
jecxz
push
stos
cmpsb
fnstsw
mov
mov
scas
inc
jnp
ljmp
leave
rcrl
mov
adc
push
sub
mov
in
into
cmp
or
shrb
out
mov
insl
adc
dec
shrb
add
sub
push
push
jmp
scas
out
jbe
sub
int3
popa
lahf
jle
out
mov
dec
mov
das
mov
push
test
out
sub
fcmovnb
inc
xchg
cmp
popf
mov
inc
shlb
xor
push
add
aam
lret
andb
xchg
loop
xchg
in
jg
or
dec
sub
sahf
dec
jge
pop
ss
and
jle
jnp
sub
add
lods
xbegin
pop
ja
into
jbe
ss
pop
sub
out
mov
pop
int3
dec
xchg
test
scas
adc
insl
inc
sub
sub
sbb
sub
pop
das
dec
xchg
test
mov
pop
sub
pop
jbe
dec
add
cltd
adc
addr16
mov
pop
push
or
jbe
sub
sub
ljmp
sub
cmpsl
adc
dec
pop
push
sub
dec
clc
add
mov
iret
adc
js
cmpsl
sub
mov
pop
cltd
xchg
mov
inc
sbb
sub
mov
imul
stc
pop
dec
push
mov
popf
lods
bound
sahf
pop
nop
movb
or
and
out
jo
xor
cmp
imul
test
xchg
enter
mov
outsb
push
arpl
or
inc
decl
jne
mov
lock
fists
add
push
loopne
mov
or
imul
mov
bound
mov
test
roll
ljmp
iret
push
pop
in
mov
adc
int
mov
insb
scas
adc
call
int3
pop
push
lea
mov
ljmp
test
cmp
out
lods
dec
mov
xor
iret
sbb
nop
push
jle
push
push
fisttpll
xor
ljmp
rcrl
pop
cmp
ss
xchg
inc
jg
inc
add
push
data16
sbb
xchg
mov
sub
jge
mov
jae
mov
inc
aad
pop
lods
mov
and
iret
mov
shrl
mov
sub
and
inc
jle
jae
gs
jb
shll
dec
pusha
mov
xchg
lea
leave
or
mov
dec
mov
lea
test
mov
pusha
mov
insb
stos
icebp
repz
mov
inc
call
mov
push
jecxz
mov
call
insb
mov
ja
sarb
sahf
xor
inc
arpl
inc
dec
pop
aaa
mov
xchg
jno
mov
test
shrl
xchg
push
ficompl
add
adc
ja
add
add
in
mov
in
mov
pop
cmc
je
push
mov
cmp
pusha
mov
sbb
xor
shll
mov
pushf
pop
sti
cltd
and
scas
adc
mov
pop
xchg
lds
and
lcall
or
out
push
out
xchg
aam
stos
je
jns
pand
das
jns
gs
cmpsl
xor
dec
fmuls
adc
test
lea
fldcw
xlat
hlt
and
push
pop
or
mov
inc
faddp
adc
test
adc
mov
hlt
jno
mov
mov
jl
dec
dec
push
xor
mov
sbb
std
sysenter
jg
shll
stc
ds
lcall
insl
mov
dec
add
dec
mov
cmpl
insb
std
in
jmp
nop
outsl
cmp
hlt
ds
pop
fucomi
in
test
ret
sbb
out
pop
xchg
xor
dec
and
mov
out
or
movsl
leave
xchg
push
push
dec
jl
jg
scas
in
dec
lret
rol
fists
cmp
mov
ljmp
push
daa
popf
cmc
sbb
out
jecxz
dec
outsl
add
push
push
arpl
inc
xor
arpl
leave
jl
fcmovnb
aad
cmpsb
iret
xchg
pop
imul
adcl
jg
out
adc
pusha
clc
in
movsb
sbb
xchg
shlb
adc
mov
sbb
adc
fcmovnb
out
cld
idivl
push
leave
adc
je
adc
ja
int3
popa
cld
jge
jnp
or
cmp
mulb
cmc
or
pop
jns
in
mov
icebp
ds
jbe
mov
movsb
xchg
push
push
push
pushf
pop
push
and
je
add
and
ds
into
and
sub
and
out
and
xchg
mov
mov
loope
dec
xlat
cmp
push
xchg
or
push
movsb
mov
sbb
test
cmp
add
dec
adc
mov
mov
fsubrs
mov
jmp
out
sbb
test
jno
mov
push
pop
lock
mov
movb
inc
pop
std
cld
lahf
mov
test
xchg
xor
idivl
pop
cmp
jbe
imul
mov
push
cwtl
lods
add
add
add
add
scas
xchg
pop
lock
decl
xlat
pop
sarl
mov
fmul
repz
cmp
mov
cmp
jns
sbb
sub
push
out
inc
mov
inc
inc
dec
hlt
push
loop
jne
rorl
lea
pop
arpl
fs
and
int
das
mov
das
cmpsb
cmp
mov
add
in
aaa
add
xlat
sbb
decb
cs
adc
mov
fnstenv
movsb
cs
ret
outsl
push
repnz
jmp
mov
es
xchg
mov
mov
and
cltd
orb
inc
xchg
out
loope
dec
fwait
nop
mov
in
arpl
rcl
enter
mov
sti
pop
cli
mov
cmp
out
sbb
andl
xor
mov
push
jg
clc
add
push
or
addb
xchg
pop
or
adcl
test
aas
loop
add
push
mov
mov
jb
enter
inc
ret
mov
pop
pop
pop
rcrb
ficomps
mov
js
in
lahf
popf
sbb
lret
pop
fisubl
pop
dec
ror
aaa
fisttps
sub
add
das
fidivrl
gs
xor
ja
lds
cmp
push
in
jle
lcall
xorl
cmp
xchg
cwtl
int
xor
add
sub
xchg
mov
inc
jl
leave
jp
cltd
pop
push
mov
lds
fcmovnb
jo
popa
jb
into
cmp
leave
mov
pop
jno
bound
jge
xchg
lret
cmp
hlt
mov
add
cltd
pusha
scas
sarl
dec
dec
xorl
mov
add
add
movsb
popa
test
add
add
add
add
rolb
cmpb
addb
add
pusha
add
orb
add
dec
add
adcb
add
xor
add
movsb
popa
test
add
add
add
add
add
add
test
add
movsb
popa
test
add
add
add
add
add
add
rolb
addb
add
movsb
popa
test
add
add
add
add
xor
add
add
addb
add
movsb
popa
test
add
add
add
add
add
add
add
andb
add
add
andb
add
add
subb
add
add
addb
add
movsb
popa
test
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
jo
add
add
add
movsb
popa
test
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
sub
or
hlt
add
add
add
add
add
mov
add
add
add
xor
add
mov
add
add
add
subb
insb
add
mov
add
add
add
aaa
flds
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
push
add
dec
add
add
subl
sbb
and
xorl
push
cmp
and
sahf
lret
jne
sub
scas
adc
mov
push
lea
cwtl
in
scas
std
lea
sub
xor
inc
xor
jp
cmp
jno
push
fstpl
stos
or
stos
aas
inc
xor
mov
and
int
jne
gs
lds
jge
mov
call
dec
sub
loope
test
pop
adc
mov
adc
movsb
xlat
push
jp
int3
mov
push
inc
jmp
movsl
int
outsl
cltd
ljmp
clc
cwtl
adc
jnp
sbb
jmp
je
xchg
push
dec
or
test
in
push
shrb
fimull
xchg
fsubrs
sahf
lods
lods
orb
push
int
out
pushf
jle
jle
test
and
sub
inc
dec
cmc
lret
shll
dec
stc
fmul
scas
test
movsl
sub
repnz
and
popf
loopne
jnp
dec
pop
mov
mov
enter
xchg
monitorx
mov
jnp
hlt
shlb
xchg
mov
cmp
outsb
and
pop
int3
pushf
xor
ss
jae
int
popf
cli
aaa
mov
scas
sub
dec
add
shrl
mov
stos
xorl
push
jnp
xor
cmp
ret
xchg
pop
sar
xchg
cmp
mov
mov
imul
fdivs
stos
xor
out
iret
xor
iret
fwait
cs
int
jne
insb
test
add
arpl
loopne
fs
xor
outsb
push
add
jecxz
aaa
push
mov
ds
scas
imul
and
mov
out
insb
and
xorb
jge
jo
ss
push
push
addr16
fwait
stos
xor
push
or
test
push
mov
or
sbb
jecxz
push
jae
in
lea
inc
imul
fucom
sub
cmp
or
mov
push
movups
xor
lock
xchg
mov
push
mov
outsb
icebp
cs
push
jo
sub
lret
call
pop
sub
test
sub
mov
pop
cmp
mov
add
sbb
jns
ss
xchg
ja
loopne
push
mov
pusha
mov
popa
ljmp
or
xchg
cmp
test
cmp
data16
xchg
cmp
fists
shrl
sbb
cmp
and
jp
imul
popf
mov
fucomip
fbstp
adc
cli
xchg
ret
cmp
inc
xor
sti
lds
adc
inc
mov
push
scas
mov
mov
sbb
mov
dec
mov
mov
sbb
push
cmp
jns
xchg
dec
xor
add
hlt
cmc
push
xchg
inc
jne
test
mov
lret
mov
cmp
iret
mov
rolb
repnz
jbe
popa
dec
sub
push
cli
sbb
movsl
cli
aaa
xchg
mov
dec
lea
sbb
adc
pop
aas
sbb
ret
xor
mov
lea
pop
cmp
popa
push
xchg
sbb
pop
add
and
jecxz
outsb
test
add
xor
popf
loop
bound
push
mov
out
push
stos
sub
movsb
cld
adc
subb
in
inc
dec
cli
cmp
out
inc
xchg
sbb
lret
xchg
mov
pop
jp
sbb
xchg
push
add
sub
sbb
sbb
and
jno
gs
jo
and
sub
std
or
xor
dec
mov
and
sbb
hlt
rcrb
sbbb
arpl
shl
pop
and
jmp
fs
xor
cmp
mov
sub
nop
in
les
int
inc
in
pop
inc
ja
mov
mov
dec
or
inc
repnz
stos
js
jns
mov
mov
testl
xchg
xchg
xchg
mov
outsl
xchg
mov
adc
pop
insb
fxch
fdivr
out
mov
rcr
xor
fbstp
scas
rclb
or
outsb
mov
or
das
cli
push
xchg
popf
cmp
sbb
jl
test
fsubrl
inc
cmpsb
mov
add
sbb
cmp
in
cmp
jae
xchg
cmc
in
dec
jl
push
nop
sahf
cmp
or
or
inc
sub
add
xor
int3
jl
icebp
or
adc
pushf
or
pushf
cmp
loope
call
cld
lret
xor
or
cmp
leave
mov
or
mov
inc
sti
push
pop
or
lret
ret
mov
fcomp
lret
inc
in
int3
mov
mov
jno
sub
fdivl
push
mov
or
int3
cmp
repnz
push
mov
add
jl
mov
push
test
jl
xor
sarl
push
test
add
out
mov
scas
sub
popa
ss
cmp
inc
jl
mov
ret
adc
sbb
sub
pop
inc
repz
pop
and
rcrb
xchg
outsb
mov
loop
xchg
add
mov
call
sub
shlb
pop
xor
sub
sbb
aaa
cmpb
mov
in
lock
lods
mov
es
mov
xor
repz
inc
inc
je
iret
jmp
and
pop
sbb
mov
cmp
rolb
mov
shl
inc
std
mov
cmp
adc
mov
adc
inc
in
dec
ss
or
mov
sbb
push
adcb
dec
fs
dec
push
jmp
iret
sti
xchg
sub
sbb
cld
lcall
lahf
xor
pop
push
int3
sub
pop
fs
or
rorl
push
pop
loope
inc
addb
cmc
inc
jecxz
and
sbb
adc
mov
push
test
stos
mov
inc
inc
test
loope
inc
inc
les
scas
mov
and
pop
outsb
aam
or
mov
andl
adc
jecxz
mov
pop
je
cmovle
add
scas
int3
sbb
jnp
sub
dec
imul
test
and
or
dec
jo
xchg
pop
push
mov
loope
repnz
xchg
mov
popl
xchg
test
push
push
jle
lods
xor
lea
xchg
shrb
leave
scas
arpl
xchg
nop
push
pop
and
outsl
test
lock
cltd
cmp
cmp
rolb
push
addr16
push
lea
xor
movb
dec
out
sbb
insl
adc
test
lcall
push
push
jnp
inc
fs
mov
push
push
push
adc
int3
daa
jae
daa
stos
push
hlt
fistpll
mov
xchg
stos
sbb
sub
fwait
add
ja
mov
push
aas
mov
sbb
mov
mov
or
sub
in
and
pop
into
inc
jge
mov
jle
sub
cmpsb
mov
jecxz
mov
jae
ret
and
mov
aaa
aam
popa
loope
pushf
add
sub
into
mov
in
pop
pop
pushl
cmp
xchg
cmp
push
int3
bnd
insb
nop
decl
ljmp
and
or
loop
jl
mov
cmp
mov
aas
jns
out
sti
iret
jb
xchg
dec
and
pop
out
inc
push
fcoms
xor
cmpsl
xlat
cwtl
fadds
inc
cmpsl
xchg
sbb
xor
cli
cs
sub
add
jne
pop
pop
pop
out
inc
sub
xchg
sub
inc
das
xchg
test
les
jo
xchg
outsb
cmc
cld
enter
movsl
mov
jae
rorb
add
fs
out
popf
mov
dec
or
js
scas
cmp
mov
iret
inc
mov
addl
arpl
xlat
outsl
shll
mov
mov
in
addr16
sub
xor
pushf
xchg
jnp
push
sub
in
dec
jo
or
lock
mov
scas
pop
sbb
lea
pop
dec
jne
repz
daa
or
cmp
bound
pop
loop
in
iret
int3
pop
or
es
call
into
out
push
in
mov
or
inc
dec
cmp
les
inc
aam
aad
jb
das
sti
je
or
inc
sub
adc
mov
pop
inc
sub
jle
dec
notl
mov
imul
iret
test
inc
insl
mov
or
mov
mov
ds
addr16
jb
adc
ljmp
insl
push
rcrl
mov
mov
mov
mov
pusha
shrl
divb
push
inc
add
enter
into
es
push
or
push
rclb
enter
push
and
mov
scas
push
adc
cwtl
mov
xchg
xor
adc
pop
adc
inc
addr16
or
sub
add
lds
lods
jle
mov
lret
mov
and
icebp
jl
cmp
ljmp
mov
lea
xlat
psrlw
gs
orl
das
scas
sbbb
jge
dec
and
lret
movsl
lret
xor
jnp
xchg
mov
sbb
push
add
dec
outsb
mov
lea
push
and
sbb
aam
or
cmp
or
insl
jg
dec
mov
xchg
in
aad
mov
std
xchg
adc
mov
rcll
loopne
and
popf
lahf
fstpt
pop
les
std
mov
ret
scas
fnstcw
ljmp
es
lret
mov
jmp
sub
or
mov
cmp
enter
lret
xlat
mov
or
push
sti
add
mov
in
xchg
lods
inc
popf
cmp
or
pop
dec
push
xchg
add
cs
xchg
xor
sub
pushf
push
cmc
jp
loopne
daa
xor
mov
aad
or
mov
aas
mov
cmp
sti
or
pushf
add
addr16
lahf
scas
je
push
adc
out
hlt
xchg
sbb
jne
sub
jo
jg
add
xchg
mov
in
jg
inc
add
cmp
hlt
ss
daa
xchg
jmp
push
pop
push
mov
cmp
mov
popa
out
mov
push
dec
fwait
cmp
push
imul
or
leave
fildl
scas
pop
sti
lods
or
or
pop
sub
xor
rclw
cltd
sbb
pop
mov
jbe
sar
add
pushf
cwtl
push
mov
test
jg
dec
aaa
mov
arpl
push
mov
rcll
mov
mov
push
or
movsl
iret
push
and
xlat
cmp
pop
call
push
sub
sbb
scas
xchg
inc
xchg
clc
shlb
js
mov
out
jg
das
sbb
mov
fnstenv
push
and
push
ja
nop
test
pop
insl
xor
mov
and
scas
pushf
jo
outsl
fnsave
lods
lods
jl
fwait
adc
dec
out
xor
jno
cmpsl
inc
es
out
leave
pushf
rcrl
dec
adc
xchg
rorl
xchg
or
dec
bound
insl
mov
in
loopne
xchg
test
mov
jmp
ficoms
cmc
insl
incl
arpl
dec
adc
cmpb
pop
mov
jbe
sahf
mov
es
popf
in
adc
cmp
or
push
enter
scas
pop
dec
mov
add
in
pop
clc
scas
and
xchg
cmpsl
inc
fs
pop
or
stos
jecxz
ret
data16
sbb
mov
xchg
and
rcrl
add
fs
pop
jne
and
dec
pusha
jb
test
mov
out
mov
mov
sub
and
frstor
into
mov
in
push
pop
jp
jp
xchg
sbb
ret
push
push
call
mov
fcomi
dec
dec
addr16
sti
push
pop
push
adc
mov
dec
push
adc
out
ljmp
inc
sub
mov
mov
mov
stc
or
jecxz
push
movl
dec
ds
xchg
push
lret
stos
cmp
pop
ret
fildl
cmp
lea
xchg
js
shrl
dec
je
adc
hlt
sbb
mov
insb
mov
inc
push
and
sub
lcall
out
push
adcb
in
insl
xor
sub
mov
jno
jecxz
jmp
sub
stos
movsb
leave
in
nop
fwait
repnz
add
sti
filds
adc
rolb
ret
hlt
inc
adc
xchg
dec
pop
xchg
add
inc
stos
shl
dec
addr16
mov
sub
jge
inc
lods
sub
sbb
divb
test
mov
and
cmp
lret
cmp
fnstsw
adc
imul
jg
fildl
mov
xchg
repnz
mov
cli
loopne
rorl
mov
adc
sub
lret
lds
cmovs
adc
mov
dec
inc
mov
push
movsl
push
dec
imul
mov
pop
fistpll
mov
test
add
das
fwait
pop
cmc
add
add
jbe
sub
pop
pop
fcompl
es
lods
mov
jl
lods
mov
push
ja
outsb
jo
mov
mov
push
push
and
lock
iret
cmpsb
mov
fstl
inc
mov
imul
pop
cltd
test
add
dec
enter
sub
push
lock
push
xchg
push
xor
sub
cli
sti
cmc
roll
push
push
pusha
ret
cwtl
sbb
push
je
pop
xchg
cmp
sbb
sbb
and
cmp
fdivs
xchg
js
lds
jmp
or
mov
outsl
mov
mov
jnp
aad
loope
rolb
inc
out
push
add
in
mov
aas
rolb
mov
push
jnp
fstl
jp
fucomip
mov
jae
aas
imul
adc
test
test
in
sub
push
cmc
adc
xchg
add
add
fsubs
or
mov
mov
cli
fldl
adc
in
nop
gs
lods
or
add
xchg
cmpsb
insb
xchg
cmpsl
pop
inc
out
mov
in
test
dec
fwait
es
bound
ret
adc
mov
xor
insb
aaa
mov
scas
push
sub
adc
push
mov
arpl
jbe
jbe
mov
aam
repz
fisttpl
addr16
push
push
cmpsb
scas
xchg
inc
xor
mov
filds
or
push
ja
out
xcrypt-ctr
cmpsl
pop
stos
and
les
cmp
pushf
push
jns,pt
mov
int3
out
cli
mul
or
jae
out
or
out
or
xor
sbb
faddp
aad
mov
fidivl
not
lods
data16
dec
xchg
rclb
ss
and
mov
add
cmc
lock
push
mov
add
jecxz
cmpsl
movsl
fnstenv
loope
pop
inc
jns
or
pop
aas
lahf
mov
mov
and
xchg
inc
sbb
mov
push
xor
fcoml
js
fcompl
mov
or
cmp
fnsave
inc
insb
or
jle
stc
nop
jmp
or
popa
in
xor
cmp
les
aad
push
fstpt
and
incl
jno
in
sti
jmp
sbb
push
cwtl
mov
xchg
ret
insb
push
pop
jnp
cmpsl
fldl
xlat
or
jmp
test
leave
xchg
sub
loope
xchg
push
jnp
aas
xor
jl
ss
das
push
and
xor
lds
movsb
shrl
ffree
ss
testl
rcl
mov
mov
jno
test
xchg
mov
add
or
iret
mov
getsec
mov
ficoml
in
cs
subl
pop
gs
dec
and
xor
gs
mov
or
add
cmp
ss
out
daa
xchg
inc
mov
ret
xchg
inc
js
xchg
adc
push
sub
add
lea
mov
mov
sub
or
les
lock
inc
rclb
test
sbb
inc
hlt
inc
mov
dec
push
mov
cmp
clc
and
push
jno
mov
mov
pop
dec
or
and
ret
test
xchg
jp
push
scas
cmp
pop
pop
fmul
xor
sbb
mov
mov
inc
ret
jecxz
roll
hlt
cwtl
lcall
fmull
add
jg
pop
mov
test
sbb
push
and
jmp
negb
mov
push
xchg
lahf
or
xchg
dec
jmp
aas
shrl
shrl
mov
jb
fs
cmp
lock
add
out
insb
stos
loopne
push
mov
mov
ret
cli
roll
pop
sbb
adc
or
xchg
sbb
int
xor
fisubrl
mov
jns
xchg
movsl
jbe
movsl
je
les
mov
jno
cli
testl
push
inc
stos
or
push
es
mov
scas
dec
addb
mov
fs
xorl
fdivrl
cmp
xlat
arpl
pop
pusha
test
cli
negb
in
jno
mov
xchg
and
xchg
sbb
imul
add
mov
cmovnp
cmp
cmp
outsl
jmp
add
addr16
out
shlb
mov
and
mov
ss
adc
jg
adcb
out
insl
push
imul
sub
cmp
dec
lods
lods
sub
dec
scas
rcrl
int
je
jbe
int
fsubrl
add
shlb
daa
mov
rcl
adc
out
lods
pop
dec
mov
mov
sub
xchg
out
aas
test
mov
pop
mov
jnp
shlb
cs
cmc
pop
jnp
ret
pop
sub
in
or
mov
cs
int
test
cltd
mov
inc
xchg
inc
add
stos
add
test
aas
or
das
outsb
mov
jb
pop
jae
jecxz
into
jp
sub
cs
cmp
sub
cmp
adc
in
cmp
or
adc
or
pop
lock
sbb
adcb
add
jle
fwait
hlt
pop
pop
fucompp
jp
jg
or
mov
daa
xor
cmp
js
mov
loop
test
iret
dec
stos
sbb
pop
sub
stc
xor
popf
mov
xor
push
pop
cmp
inc
sub
test
push
clc
xchg
mov
cmc
jne
mov
jg
cs
mov
and
mov
push
scas
lret
data16
jl
jg,pt
test
addb
dec
and
mov
jns
addr16
xchg
fnstcw
adc
xchg
jns
or
cmp
dec
ret
popf
mov
adc
imul
out
mov
pop
jecxz
inc
jle
sub
mov
push
lock
push
test
test
cmpsb
or
addl
jns
pop
in
scas
push
subb
popa
mov
scas
lods
jne
std
lea
mov
out
test
push
mov
ret
leave
test
inc
inc
adc
xchg
xchg
or
adc
jbe
test
xchg
rol
test
mov
or
daa
push
jge
add
stos
sub
insb
pop
pop
adc
out
adc
dec
ficompl
push
jb
arpl
stc
das
cmp
sub
lock
inc
test
ss
xchg
add
mov
out
stos
addr16
inc
or
in
faddp
sbb
push
mov
lret
or
test
fidivrs
xchg
movsb
out
dec
add
and
imul
or
mov
mov
sbb
sub
jmp
jb
sti
adc
pusha
mov
jb
pop
pop
lahf
loope
mov
cmp
movsb
mov
loop
js
lods
push
je
std
pop
lods
xlat
cmp
sub
or
stos
fmuls
mov
addr16
sbb
test
jb
push
pop
sbb
mov
dec
arpl
mov
jb
insb
xchg
add
repnz
cmp
jno
jge
cmp
add
lock
fistpl
mov
pop
rorb
aad
sub
lahf
test
loopne
jns
mov
sub
popa
mov
push
mov
jl
xchg
sub
stc
mov
push
idiv
sbb
imull
stc
leave
jmp
fists
out
mov
push
jecxz
outsb
xor
rorl
xor
xchg
mov
movsb
cmpsl
push
jp
notb
jne
or
pop
ja
rolb
bound
xchg
sbb
bound
ja
mov
jo
lock
fs
sbb
loope,pn
in
xchg
jbe
ja
xchg
lret
xchg
mov
rorl
out
xchg
mov
test
std
inc
inc
lret
sahf
dec
jo
test
xchg
jb
inc
push
mov
repz
movsl
mov
nop
pop
pop
inc
arpl
push
subl
mov
movsl
test
sub
dec
insl
push
sub
fucomp
push
pop
jo
aam
and
adc
or
or
dec
cmp
int
aam
mul
lahf
addr16
outsb
xchg
lahf
jne
pop
clc
adc
lods
mov
push
notb
mov
scas
or
es
push
loopne
jno
pop
pop
xor
das
lods
xchg
cld
add
stos
in
jae
mov
mov
lds
jmp
addb
loopne
lods
rcrb
ja
mov
sub
inc
jg
dec
loopne
mov
sbb
ret
xchg
idivl
xchg
aaa
dec
add
in
add
dec
xor
push
xchg
jbe
jb
cmpsl
lret
je
or
push
insb
push
and
xchg
inc
test
lret
sbbl
cmpsl
add
jbe
sbb
or
inc
adc
fstpl
dec
jge
jmp
jmp
mov
icebp
sub
pop
gs
sub
rcll
cli
sub
out
cli
ljmp
adc
in
mov
pop
ret
mov
or
push
cli
ss
repz
add
push
pushf
roll
jmp
mov
mov
jbe
jb
faddl
pop
or
fistps
lret
cmp
inc
inc
cwtl
jmp
cwtl
clc
sub
inc
jo
popf
je
shlb
lock
pushf
mov
and
push
mov
ss
cmpsl
sbb
out
mov
jmp
and
std
push
inc
testl
loope
pop
mov
add
das
dec
test
inc
mov
notb
ficompl
mov
leave
adc
jns
pop
or
div
shll
dec
and
lods
mov
fldl
cmpsb
cmp
lods
cli
icebp
inc
rcr
inc
or
movsb
andl
inc
mov
mov
jnp
and
in
fst
mov
cli
loopne
ss
bound
cwtl
ret
fcoml
jne
mov
iret
ljmp
arpl
aaa
test
sbb
add
pop
mov
nop
js
jp
cmp
push
cmpsb
stos
popa
roll
aas
loope
repz
rol
sub
dec
lret
cwtl
les
dec
mov
pushfw
les
and
scas
loopne
push
popf
xor
sub
pop
shll
mov
fsubr
loop
ljmp
push
jno
add
dec
jl
dec
jb
pandn
es
in
daa
out
pop
jne
pusha
mov
xor
add
orb
mov
jb
jns
movsb
loope
sahf
or
sbb
adc
add
sub
cmp
ja
xchg
incb
int
dec
cltd
gs
jae
cli
inc
push
ficompl
jle
sub
inc
mov
sub
pop
jbe
cmp
int3
mov
dec
roll
push
imul
movb
insl
lea
pop
das
push
add
jge
fadds
stos
addb
shlb
mov
in
xchg
jo
pop
inc
lahf
psubusw
out
fisttps
bound
add
mov
call
xor
loope
fcomps
rcrb
cmc
mov
leave
add
pop
fldt
in
mov
push
inc
in
pop
push
lock
mov
in
pop
lock
adcb
adc
loop
lcall
add
jnp,pt
add
shll
stc
pop
pop
mov
loope
jp
stos
xchg
xchg
cmp
test
cmpb
lds
xchg
push
xchg
sbb
mov
mov
insb
cwtl
mov
sub
adc
mov
push
jg
iret
notl
pop
loop
sbb
pushf
fdivs
pop
pop
add
adc
cmp
pop
test
fisubs
xchg
sti
in
fmul
addb
mov
test
lahf
cmc
adc
xchg
cmp
mov
adc
adc
int
xor
lock
test
mov
xchg
fs
cmp
stos
dec
xor
hlt
mov
or
cmp
xchg
push
loop
clc
rcll
shrl
pop
cmp
mov
jg
pop
push
test
push
addl
cmp
dec
pop
imul
inc
fsubrl
push
sub
into
ret
lret
repnz
or
sbb
leave
repz
push
and
mov
pop
or
xor
xor
pop
cli
xchg
leave
pop
stc
adc
bound
jmp
lds
bound
lds
jo
mov
mov
inc
push
and
hlt
xor
imul
insl
add
rcl
and
xorl
ja
fisubs
mulb
lods
adc
adc
lds
ret
cli
pop
icebp
sbb
inc
ja
nop
test
sub
adcb
sti
jl
sbb
aaa
pop
out
adc
fwait
rorl
out
dec
stos
rorl
mov
into
cmp
ss
pop
mov
dec
jnp
and
ss
stos
cmpsl
adc
pop
cmp
je
int3
setb
jo
sbb
in
cwtl
mov
ret
xchg
xchg
cld
or
iret
pop
jb
lds
ffree
sub
int3
xchg
mov
ja
pop
cltd
jns
inc
daa
das
cmpsb
dec
mov
cmpsb
cmc
sub
std
dec
jne
jb
xor
cwtl
and
jmp
popa
mov
push
adc
stos
xor
pop
mov
cmpsl
pop
fidivl
das
pop
loope
js
out
mov
sarl
push
popa
aaa
lock
sarl
dec
xchg
movsl
cmc
gs
pop
xor
mov
push
xchg
add
push
loope
js
mov
data16
add
xchg
cmp
push
ja
pop
jg
lcall
inc
jns
mov
adc
ja
dec
popa
faddl
mov
in
repz
loopne
or
sub
sub
mov
fdivr
mov
test
cmp
sar
ret
adc
or
lods
leave
and
adc
sbb
dec
ret
pushf
jge
mov
inc
xchg
into
pop
dec
fbstp
repnz
imul
repnz
outsb
enter
mov
fsubp
movsl
push
test
sets
stos
dec
and
adc
lcall
gs
or
jno
dec
and
sub
jae
rorl
lods
fidivrs
hlt
jno
movsl
xchg
add
adc
and
sbb
mov
loop
insl
jb
xor
push
mov
stos
adc
jnp
xor
test
add
iret
push
adc
inc
push
in
in
insb
mov
loope
pop
xor
mov
shl
int
enter
inc
and
lods
fimull
jne
and
lock
jle
dec
fsubrl
seta
mov
aas
xchg
pop
sub
pop
pop
loope
insb
lahf
cmp
insl
mov
shrl
pop
sbb
cmp
cmp
les
test
mov
push
cld
adc
cmpsl
pop
cmpsl
push
adc
sub
faddp
xchg
jecxz
out
repz
or
aaa
cmp
mov
adc
xchg
xchg
test
xchg
nop
cmpsb
mov
mov
sub
in
cmp
scas
mov
aad
dec
jle
negl
inc
xlat
jle
adc
dec
fsubs
pop
adc
mov
sbb
sub
inc
iret
xor
or
in
sbb
in
loop
mov
shll
sbb
mov
cmc
push
sti
movsb
ret
pop
push
cwtl
dec
stc
movsb
popa
sub
mov
cmpsl
les
mov
cmp
fs
orb
dec
lahf
or
incl
call
sbb
lret
subb
mov
and
ss
sub
jbe
pop
xor
inc
inc
inc
loop
repnz
push
aas
fadd
pop
dec
stc
outsl
sbbb
bound
fs
daa
rorl
jne
mov
in
inc
jp
lods
xor
jle
mov
lds
loope
xchg
pop
std
adc
std
cmp
ljmp
roll
inc
add
push
fdivrl
mov
cmpsb
xchg
ret
sbb
mov
testb
mov
stos
les
mov
aaa
jnp
nop
pop
icebp
cmp
nop
test
mov
or
fsubrl
push
mov
adc
ja
cs
jmp
pop
cmp
leave
scas
and
mov
mov
inc
sub
fldl
aam
mov
addl
comiss
pop
pop
cli
jbe
or
jge
sti
pushw
mov
aam
mov
addr16
sbb
xchg
pop
andb
or
sub
mov
mov
dec
imull
imul
pop
repnz
mov
add
insb
lock
mov
jle
pop
adc
ja
mov
mov
rorl
sbbb
inc
push
arpl
repnz
mov
jp
int
stos
sahf
ljmp
shrb
cltd
repnz
les
mov
push
push
jns,pn
inc
lods
sbb
out
dec
jp
xchg
fdivl
pusha
testl
mov
les
loopne
popa
lods
icebp
sar
xor
fidivs
pop
arpl
inc
xchg
fstl
cli
pop
arpl
sbb
dec
cli
jmp
lds
xor
sub
pop
mov
jns
mov
movsb
ret
les
je
sub
repz
cmp
pop
cmpl
sti
in
sarl
repz
mov
mov
inc
fstps
scas
fcoml
push
sub
dec
push
mov
stos
dec
ss
dec
sub
mov
mov
jnp
ret
fistpll
xchg
cwtl
xchg
lret
pop
ficoml
cli
adc
adc
ja
and
cmp
out
popf
cmp
add
mov
pushf
push
insl
imul
jno
mov
arpl
push
or
inc
adc
scas
ret
xchg
jo
jnp
xorb
and
fld
cmc
idivl
ds
loope
dec
daa
or
lea
inc
cmp
cmp
or
andl
stos
pop
aas
popf
jae
test
loopne
jno
pop
mov
lret
lods
nop
call
in
inc
in
xchg
cmpsl
lcall
rcr
int3
sub
idivl
shlb
xlat
add
mov
js
dec
sahf
das
xor
imul
testb
sub
lds
xchg
push
enter
rolb
call
inc
sahf
inc
mov
xchg
icebp
dec
add
pop
shll
cmc
pop
add
dec
push
dec
add
mov
mov
dec
sub
adc
mov
cmp
movsl
sub
or
mov
inc
push
loop
lock
xchg
aam
bound
mov
test
scas
leave
pop
dec
loopne
and
xchg
dec
das
dec
push
mov
mov
jns
std
inc
inc
inc
add
and
cmpsl
scas
scas
sbb
and
pop
pop
out
push
adc
mov
dec
adc
mov
out
sbb
jmp
js
push
mov
ja
mov
notl
push
sarb
lcall
out
dec
add
lcall
shrl
js
xchg
sti
adc
or
divb
push
cmc
push
jp
push
rclb
mov
mov
cmp
cwtl
pop
inc
imul
push
lea
xchg
xor
fildll
negb
cmpsl
mov
pop
fisttpll
xorl
push
inc
add
inc
inc
subb
lds
dec
bound
icebp
and
pop
in
andb
sbb
lods
mov
mov
pop
aas
jmp
and
fs
push
andl
add
xor
fwait
fwait
in
and
or
pop
xchg
mov
dec
pop
sbb
dec
cs
inc
test
cmp
imulb
scas
cmp
fldcw
movlps
mov
mov
or
stos
fisubrs
add
hlt
fs
popa
pusha
aam
and
dec
stos
adc
rclb
and
repz
imul
dec
jno
dec
sub
sub
jbe
jo
pop
sbb
and
js
xor
dec
sahf
pop
lea
lods
sub
sahf
cltd
ret
out
stos
clc
aad
pop
cld
mov
in
mov
mov
rcll
sub
push
mov
arpl
mov
xlat
mov
scas
add
cmp
pop
cmp
xchg
xlat
in
rcr
add
sahf
repz
cmp
mov
outsl
lods
jl
inc
cli
stos
cli
outsl
pop
pop
jns
notl
push
mov
ret
rcl
outsl
stos
adc
orl
out
rcrb
std
dec
mov
fidivs
mov
cmp
jne
mov
pop
insl
jb
and
dec
inc
pop
pop
das
xchg
xor
mov
cltd
add
mov
xchg
mov
mov
call
data16
jle
fimuls
jle
fcmovnbe
xor
mov
push
ret
std
out
inc
xor
lods
add
jg
dec
dec
insl
pop
aad
jo,pn
fwait
add
lret
lea
pop
bound
fldcw
mov
pushl
mov
in
jbe
mov
mov
jno
xor
inc
xor
vandps
popf
pop
mov
jo
fstpt
shrb
sbb
push
lcall
jp
jb
pop
mov
mov
cld
or
adc
push
push
jge
push
jle
aam
add
adc
outsb
mov
aaa
pop
movsl
sub
adc
hlt
shr
pusha
jne
push
adc
xor
sbb
and
subl
push
bound
lcall
fstp
mov
jmp
cmp
int3
stos
movsb
jle
std
or
add
and
mov
adc
loop
daa
mov
ljmp
xor
icebp
pop
dec
inc
out
rcrl
cwtl
enter
jnp,pn
pop
cmpb
scas
inc
mov
xor
stos
add
out
pop
inc
sub
mov
loop
cmpl
cmp
xor
scas
inc
cmp
pop
dec
cmp
or
setl
and
arpl
xor
cmp
imul
js
shlb
add
das
jnp
and
dec
addr16
js
cmp
xchg
fists
inc
fnstenv
jns
push
add
jns
push
or
testl
test
loope
xchg
imul
sub
inc
mov
test
divl
or
push
test
sub
ds
pop
inc
cli
roll
aam
mov
scas
lods
test
jge
icebp
jg
mov
jmpw
shl
bnd
scas
cmp
push
shrl
cmpsb
daa
cmp
in
jb
das
mov
jg
jnp
call
dec
push
sbb
xchg
into
xor
fidivrs
jmp
jl
inc
orl
fidivrs
std
in
dec
jae
sbb
in
dec
push
int
or
imul
mov
sti
in
dec
dec
inc
int3
adc
add
popl
in
xchg
addb
insl
loop
movsb
ljmp
imul
stos
push
sub
fnstsw
xchg
ljmp
jne
call
mov
xchg
imul
jl
mov
pop
xchg
mov
jnp
int3
icebp
jbe
adc
inc
sbb
xchg
pushf
movsl
mov
inc
fstl
loopne
dec
inc
leave
adc
lret
jg,pn
insl
sub
xchg
shl
sub
mov
in
mov
ret
ss
xchg
cltd
jne
insb
jg
mov
adc
dec
std
jae
popa
addr16
mov
into
repnz
dec
fninit
cltd
stc
cmp
into
loopne
jmp
push
jb
push
push
xlat
xchg
jns
xchg
int
loopne
aaa
jb
out
std
popf
cmpsl
cltd
ja
add
push
xor
mov
dec
bound
mov
pop
dec
jge
pop
es
or
lea
cmovno
hlt
in
dec
sbb
ja
jp
and
mov
pop
lret
imul
xchg
adc
lret
nop
xor
aas
mov
mov
cwtl
push
hlt
mov
repz
and
ror
in
and
scas
mov
mov
les
fstps
test
aam
xor
push
fadds
and
pop
divl
fidivs
dec
and
adc
inc
pop
mov
push
or
inc
inc
and
int
jbe
sub
je
rorl
addr16
adc
add
or
mov
xor
mov
push
jae
add
repz
in
inc
push
cmp
mov
mov
pusha
out
sarl
dec
ljmp
data16
je
sbb
lods
push
jae
ds
das
cmp
test
mov
stos
enter
cld
ja
test
add
inc
pop
lods
stos
or
out
cmpl
cli
jno
mov
mov
daa
push
jmp
sbb
dec
movsb
int
les
jl
sub
fcmovnb
xlat
jnp
cmp
lret
mov
pavgb
xlat
mov
ljmp
inc
sbb
xchg
icebp
add
sbb
pusha
cwtl
mov
jbe
jo
aas
pop
sub
in
jg
mul
jne
xor
sti
dec
jne
pop
pusha
je
push
sbbb
shl
xor
shrl
aad
bound
call
mov
rcrb
cmovae
adc
inc
dec
subb
int3
sub
adc
sbb
ret
xor
cmp
xchg
hlt
mov
cmp
loope
movsl
jne
test
leavew
movsl
pop
pop
jecxz
push
fisttpll
mov
int3
ret
dec
das
jae
mov
jmp
xor
enter
push
push
xor
aam
jecxz
daa
push
subl
pop
loop
divl
mov
cli
xor
push
pop
pop
xchg
icebp
jmp
pop
jae
xor
jns
push
mov
cmp
hlt
mov
sub
push
mov
clc
xlat
add
rcrb
sub
arpl
mov
jae
out
mov
sbb
sub
in
push
imul
jne
cmpsl
and
test
fists
jp
cli
mov
jmp
cltd
cltd
lret
cmp
push
xchg
push
pop
outsb
inc
or
or
or
andl
jmp
fidivrs
and
add
pop
sbb
pop
mov
push
in
cltd
jb
repz
scas
add
and
jecxz
xchg
lahf
das
popf
mov
call
push
dec
je
mov
loop
jae
adc
and
shl
dec
mov
sbb
es
cmpsl
pusha
lock
movsb
into
sti
bound
inc
cmp
mov
jae
pop
xchg
sbb
aas
flds
adc
lea
add
pop
out
test
mov
jmp
into
jbe
repnz
mov
fsubrl
outsb
add
mov
xchg
cmp
inc
aad
sub
jne
pop
jmp
adc
push
mov
mov
nop
aaa
pop
sar
shlb
cltd
xor
jp
in
pop
and
xchg
lods
shl
shl
jb
or
int
or
cmp
cmpsb
sbb
mov
out
aaa
dec
test
cli
sbb
push
jecxz
mov
fisttpll
add
outsb
dec
jbe
push
ja
xor
fstp
dec
jmp
push
outsl
push
dec
pop
ds
jl
pop
addl
les
fadd
icebp
je
cld
adc
cwtl
pop
xchg
push
ja
clc
ja
bound
and
sbb
flds
cmpsl
dec
mov
loopnew
ret
jecxz
test
adc
enter
dec
lods
ja
addl
xor
cld
mov
fwait
outsl
push
popa
ret
cmp
mov
xor
out
sbb
or
loope
cmp
sbb
mov
lods
outsl
rcrl
test
fistpl
or
std
ret
test
incb
ret
cmpsb
js
push
aad
cltd
test
pop
cmp
lret
push
ja
mov
test
gs
xchg
push
mov
jp
test
pop
mov
jae
jnp
cmpsl
or
pop
out
ret
adc
in
sbb
or
rol
adc
cmc
push
inc
inc
mov
jl
sbb
or
and
push
xor
into
adc
xchg
dec
mov
mov
adc
mov
dec
in
scas
sbbl
sti
xchg
xchg
pop
test
jecxz
dec
out
bound
cmp
xchg
iret
jne
test
dec
xchg
push
notl
cmpsb
jecxz
sahf
or
and
sahf
int3
filds
dec
scas
sbb
mov
adc
cld
xchg
or
xor
and
out
mov
adc
rcr
dec
or
ds
je
adc
mov
lret
sbb
jmp
mov
mov
inc
xchg
inc
mov
aam
xchg
repz
pop
and
lock
outsl
jbe
push
jecxz
jne
lcall
jle
mov
jmp
in
fcoml
movsb
insb
outsl
jecxz
sahf
jmp
sti
in
or
xchg
aam
fnstsw
fldpi
sub
xchg
mov
adcb
mov
push
push
incl
sbb
stos
ds
mov
sbb
xor
mov
mov
mov
inc
mov
lods
ds
pusha
mov
mov
adc
inc
xchg
sbbl
das
bound
popa
push
mov
sti
es
pushf
add
dec
outsl
and
cld
loopne
adc
out
pop
inc
test
mov
cmp
xlat
js
mov
subl
movsl
je
lahf
outsb
lock
enter
clc
push
sub
js
ljmp
lret
testb
lret
inc
jmp
pop
imul
mov
dec
call
in
mov
int
stos
or
popf
cwtl
jno
pop
mov
cmpsb
rolb
pop
scas
gs
shlb
int
das
xchg
test
insl
mov
push
lret
les
dec
aad
xor
cmp
ja
add
jmp
xor
adc
movsl
pop
jns
mov
cltd
and
faddl
stos
mov
test
push
dec
jmp
stos
int
inc
adc
incl
add
push
adc
in
xlat
adc
fdivrs
pmuludq
repz
outsl
xchg
mov
xor
inc
in
inc
inc
dec
mov
lahf
mov
das
mov
mov
xor
mov
fwait
jp
incl
mov
xor
pop
fisubrs
jle
ret
insl
fsubl
sbb
jo
push
or
mov
inc
icebp
mov
imul
adc
xchg
add
xchg
test
int
sub
jl
mov
rcll
lods
and
dec
pop
add
cmpsb
sbb
js
pop
sub
inc
push
arpl
push
es
lahf
rclb
xor
xor
sarl
movsl
js
aam
mov
mov
jae
sbb
divl
and
cs
stos
sub
aas
xor
int3
pushf
ss
sbb
js
adc
lret
pop
xor
add
add
outsl
mov
stc
hlt
adc
je
insl
inc
pop
cltd
ret
dec
lods
test
cmc
leave
xlat
pop
xchg
jmp
jns
in
xchg
movsl
popa
rcr
aad
mov
cmp
aaa
gs
ret
test
sti
dec
test
adc
or
stos
in
cs
out
push
call
xor
inc
fldenv
sti
lret
out
or
decl
ret
mov
jns
aam
lea
aas
insl
and
xchg
mov
loope
fcmovu
push
clc
pushf
imull
xor
lret
xor
aaa
sub
clc
mov
mov
das
loop
addb
lods
adc
push
mov
mov
inc
int3
outsb
fldt
adc
ja
scas
dec
int
bound
pushf
leave
adc
push
in
cmp
test
mov
xchg
cmp
test
xor
adc
sbbb
jge
mov
sbb
sbb
insl
and
andb
mov
xor
fisttps
and
push
popa
outsl
push
es
pop
dec
cmp
icebp
mov
movsl
addr16
rcll
cmp
pop
cmpsl
add
repz
push
aas
mov
aad
dec
or
adc
rclb
push
sub
add
cltd
cmp
inc
jnp
mov
cmp
or
out
lods
add
xor
flds
imul
sub
add
pop
jno
lcall
pop
push
inc
add
pusha
mov
pop
mov
stc
jge
adc
data16
or
into
mov
imul
aam
and
xchg
ljmp
pop
push
call
stos
add
imul
es
dec
and
push
mov
dec
sbb
das
mov
sbb
lods
cmpsb
and
jae
pop
xchg
cltd
and
push
decb
mov
mov
mov
inc
xor
sbb
cmp
or
in
subl
and
stos
std
test
lods
xor
sub
mov
cli
push
inc
jo
pop
aaa
scas
ss
jo
mov
pop
cld
push
inc
dec
mov
jl
mov
push
jb
add
push
movsb
inc
jg
xchg
addr16
or
ret
jnp
adc
and
icebp
mov
jmp
mov
loope
jno
outsl
in
jbe
mov
cld
add
addb
add
and
in
and
push
push
das
push
push
mov
mov
xor
sbb
mov
sbb
inc
mov
scas
aad
fistps
xchg
or
xor
stos
xor
lahf
clc
mov
scas
fcmovnb
cmp
sub
cltd
cs
paddd
jmp
xchg
loope
ljmp
mov
fsubr
lea
pop
test
push
cmp
inc
gs
out
dec
insb
jecxz
pop
sub
addb
push
shlb
loopne
or
cmp
mov
mov
xor
fcompl
fs
repnz
push
ror
xchg
mov
in
leave
cmc
cmpsb
sub
jo
pop
sahf
sar
push
lea
scas
cmc
inc
out
and
and
loopne
pop
loop
data16
call
in
mov
cmp
cmp
adc
pop
mov
ja
sbb
call
and
xchg
lea
cmp
xor
push
mov
mov
mov
fsubs
lret
xor
hlt
xor
into
cmpsl
repnz
xor
mov
mov
out
fisubs
xchg
movl
inc
leave
divl
jae
lods
push
repz
push
xchg
xchg
push
sbbb
outsb
mov
inc
mov
ja
mov
roll
sub
dec
cmp
cmp
je
pop
mov
mov
fiaddl
insb
pop
mov
pop
jo
loopne
lahf
pop
andb
jp
dec
add
xchg
dec
pusha
mov
outsl
test
jp
or
lock
bound
cli
pop
xor
pusha
sub
push
ljmp
fwait
inc
fcmovbe
mov
add
sub
test
add
mov
push
jae
mov
test
cld
sub
jle
dec
insl
dec
sub
jp
xchg
js
or
sub
xor
push
mov
andb
jge
sub
dec
xor
mov
pop
cli
jg
in
and
lahf
jecxz
cmp
test
lcall
add
xchg
push
inc
pushf
lods
imul
std
das
xchg
pusha
xor
insl
adc
sbb
or
nop
cltd
rcr
cmp
sbb
sub
aam
outsb
cwtl
cli
daa
ret
mov
inc
insl
inc
adc
mov
sbb
in
adc
loop
lcall
loope
dec
shrl
pop
xchg
outsl
mov
test
in
out
sub
push
mov
mov
mov
push
popf
jb
dec
dec
dec
jle
bound
mov
cmp
mov
xchg
daa
adc
stc
sbb
push
les
fmul
jg
lcall
sub
push
jnp
push
daa
repz
add
lret
mov
add
dec
bsf
adc
cs
scas
pop
lcall
push
dec
push
mov
aam
xor
adc
or
or
and
push
mov
push
cmovae
enter
lea
xor
psraw
adc
push
inc
les
jne
nop
mov
add
pop
shlb
clc
jge
fwait
into
mov
xchg
les
vpshuflw
arpl
lock
mov
cwtl
rol
std
push
jmp
mov
sub
inc
test
int
inc
leave
jle
pushf
scas
dec
dec
loopne
cmpsb
mov
add
call
add
jnp
mov
jb
loop
jmp
loopne
pop
push
lods
push
pop
mov
fisubl
sbb
push
imul
xchg
cltd
mov
idivl
xchg
mov
push
lret
fistpll
mov
icebp
add
push
mov
dec
mov
outsb
xchg
mov
outsl
push
fldt
jle
or
and
rclb
inc
cmp
mov
mov
or
mov
test
mov
sahf
adc
in
popa
pop
inc
mov
and
aad
or
das
cmovns
mov
push
jp
enter
out
fcomp
or
cmpsb
jecxz
imul
cmp
xor
and
xchg
movsb
stos
nop
ret
xchg
push
jl
push
and
das
push
cwtl
inc
or
pop
rclb
push
imul
mov
scas
pop
shlb
out
movsl
cli
mov
jge
inc
lret
push
lock
jbe
pop
js
jmp
outsl
push
dec
jg
jne
cli
dec
loop
in
mov
repnz
mov
repz
pusha
movsl
dec
out
bound
and
icebp
xchg
push
scas
cmp
or
sbb
mov
in
gs
movsb
nop
jecxz
rolb
inc
xchg
ljmp
jp
jmp
jno
xor
iret
adc
rcr
add
xchg
movb
movl
fiaddl
lods
xor
sub
divb
loop
fsubrp
jl
dec
pop
sbb
mov
jmp
mov
jns
loop
lock
sub
cmp
xorb
cmp
mov
daa
scas
inc
adc
xlat
lods
shrl
in
pop
pop
push
cmp
outsl
je
out
xchg
shrb
scas
adcb
push
ret
out
or
mov
add
shlb
and
nop
pop
loop
imul
lret
leave
aaa
add
mov
jo
fs
pushf
pop
or
push
mov
dec
jle
xchg
stos
or
iret
xchg
cmp
push
adc
pop
add
imul
mov
leave
repnz
mov
sbb
out
lahf
je
pop
adc
sarb
push
sub
rorl
in
xchg
mov
fisubrl
xchg
dec
sbb
and
lds
or
hlt
ds
shlb
aaa
mov
mov
aad
into
push
dec
mov
mov
int3
mov
in
lods
jl
test
pop
stos
in
cmp
xchg
push
mov
mov
sbb
fists
fmul
lea
push
mov
scas
inc
icebp
out
add
push
xor
je
es
repz
adc
push
in
xor
sbb
pop
cltd
dec
addr16
gs
mov
jge
push
xor
adcb
mov
andb
sub
jo
mov
bound
xchg
pusha
ljmp
into
test
sub
popf
push
pop
push
hlt
pop
xchg
xchg
test
push
mov
mov
loope
cld
jge
sbb
push
adc
push
out
es
iretw
push
daa
and
jbe
sbb
divl
add
lock
push
shrb
mov
push
push
pop
pop
jmp
shrl
add
inc
dec
repz
xor
jne
jmp
xor
mov
in
adc
add
lea
ret
or
inc
insb
add
pop
sahf
repnz
int3
adc
and
fstpt
lods
dec
or
ret
mov
sub
sbb
test
mov
out
xlat
jmp
jg
das
and
xor
movsb
mov
mov
and
cli
jge
out
and
or
sbb
stos
jmp
daa
subb
sbb
rcrb
push
jecxz
cmp
xorl
cmc
not
les
mov
adc
xchg
fdivs
pop
cmp
pop
jae
ss
pusha
arpl
push
in
and
imul
push
sub
cmpb
xchg
push
cmp
int3
cmpsl
mov
mov
and
imul
push
std
xchg
adc
push
xchg
mov
and
jmp
fdivrs
xor
call
inc
dec
jl
and
repz
mov
ret
popf
xchg
loope
inc
mov
pop
movsl
mov
jo
mov
pop
jge
mov
fld
jbe
ds
jmp
sahf
out
push
out
inc
add
in
js
push
inc
dec
sub
jmp
adc
xchg
insb
mov
push
or
in
hlt
pop
and
mov
sbb
divl
in
jg
push
es
xchg
stos
adc
lods
cs
xor
jp
jecxz
repz
pop
mov
xchg
xor
push
fsubrl
jl
enter
jl
iret
inc
nop
sahf
mov
inc
fists
inc
dec
jo
mov
sbb
mov
lret
incl
jno
add
out
jmp
cmpsb
flds
pop
add
cli
push
ss
fmul
xchg
mov
mov
push
fisttpll
outsb
ret
mov
mov
jns
adc
sbb
ljmp
mov
sub
add
inc
outsb
rol
jmp
push
adc
adc
sub
lcall
pop
gs
popf
jns
je
sbb
adc
loope
and
xchg
outsl
pop
jno
dec
mov
inc
dec
adcl
mov
jmp
lret
scas
mov
dec
enter
fildl
mov
into
gs
cwtl
lcall
sub
jb
fstps
xchg
xor
push
mov
pop
jae
cmc
fdivp
stc
adc
fnop
out
mov
add
mov
inc
fs
mov
test
inc
das
jle
mov
xor
aaa
mov
inc
push
in
xchg
mov
add
cmp
insl
xchg
pop
mov
jns
test
add
pop
mov
pop
es
out
outsl
scas
rolb
jno
test
ss
mov
lock
sub
aaa
lahf
push
stos
inc
adc
in
arpl
fcoms
cltd
jp
das
add
push
inc
js
mov
scas
cwtl
outsl
inc
cmp
adc
xor
int
fs
sbb
popf
push
imul
mov
mov
lds
ljmp
push
jle
push
xorb
sbb
xlat
push
adc
inc
scas
fcoms
sub
mov
les
repnz
dec
gs
adc
mov
cwtl
push
call
loope
mov
push
mov
pop
jl
andb
mov
adc
dec
push
adc
sbb
shlb
inc
and
js
fwait
cmpsl
in
and
ficompl
push
cs
cs
lods
sar
ret
jecxz,pn
sbb
rcll
jno
fisubrs
xchg
nop
loope
cmc
cmp
pop
push
enter
subb
push
fs
nop
fwait
cld
add
pop
push
lahf
and
jns
addb
in
jg
pop
xchg
js
jno
xchg
cmp
sti
scas
mov
xchg
je
pop
inc
add
and
jo
je
and
xchg
insl
or
add
xor
out
scas
push
in
cs
fldl
jecxz
cmp
cli
insl
icebp
scas
hlt
xor
dec
mov
mov
xor
and
push
pop
dec
repnz
fidivrs
enter
inc
jp
in
or
and
insb
mov
mov
in
sti
sti
into
addr16
inc
je
and
jmp
sub
cmp
out
stos
shrl
rcrl
jle
popa
cmp
jecxz
sahf
and
xor
rcl
arpl
and
bound
inc
jle
mov
dec
push
idivl
xor
mov
cmp
adc
sbb
mov
inc
ret
inc
and
sti
ret
imul
push
xchg
repz
push
test
jb
xor
ret
adc
push
xor
sbb
jmp
fnstenv
icebp
push
rcrl
pop
fwait
mov
mov
insb
mov
add
lock
inc
xchg
inc
call
and
out
ljmp
test
dec
int
arpl
out
push
dec
xchg
rcr
xor
fidivrl
mov
repz
mov
sub
pop
add
shll
aas
nop
orl
push
adc
push
mov
xor
add
mov
cltd
inc
std
fldcw
push
jne
lcall
jmp
pop
jae
les
or
adc
dec
imul
sbb
out
dec
mull
dec
xor
jae
jmp
pop
cmp
andl
das
out
lret
ficoms
jne
insb
mov
jbe
stos
cwtl
aaa
lahf
test
inc
lret
cmpsb
aam
jle
mov
mov
lahf
sahf
dec
dec
push
pushl
cmp
xchg
add
fidivl
sti
push
mov
fistl
fcoml
rcrl
mov
les
fsubr
addl
addr16
leave
jo
test
lock
lret
loopne
xor
call
subb
sub
cld
xchg
mov
ret
test
inc
mov
lahf
mov
add
xchg
fisubs
out
sbb
imul
cmpsb
dec
out
insl
lret
aad
inc
xor
test
jle
popf
jno
push
pop
add
and
dec
inc
insb
fnsave
stos
dec
sub
inc
mov
rolb
rcll
neg
sub
mov
call
testl
mov
lods
scas
bound
jmp
int
xor
xor
nop
or
cmpsb
dec
lods
xchg
push
jne
adc
push
popf
gs
arpl
aam
je
sub
mov
aam
loopne
out
fnstcw
into
sbb
sbb
lret
fsubrl
nop
les
decb
aas
mov
imul
mov
jns
jmp
push
dec
fdivrs
decl
notb
nop
fcompl
frstor
ds
mov
cmpsl
fcoms
cmp
dec
popa
mov
fidivl
addl
sub
into
lcall
xchg
mov
int3
scas
mov
mov
or
insl
fstpt
adc
or
cmpsl
stos
std
pop
sti
rcll
and
xor
cwtl
sub
jnp
or
push
and
leave
fnstsw
xchg
add
scas
jle
negl
push
jae
mov
xlat
out
cmp
arpl
push
dec
push
mov
jnp
fadds
icebp
leave
push
adc
repz
mov
jbe
into
cltd
or
push
js
dec
push
cmp
je
mov
mov
jmp
out
mov
mov
cmp
jo
dec
jb
movsb
mov
jae
lcall
cmpsl
in
push
stos
xchg
pushf
fcomps
cmp
dec
adc
adc
ret
stos
adc
test
and
pop
imul
pop
fcompl
add
fndisi(8087
xor
bound
das
ror
ffree
jecxz
lret
mov
dec
movsl
in
pcmpgtw
adc
mov
pop
xchg
leave
loope
mov
dec
call
xor
int
mov
xor
add
lds
dec
loopne
or
push
push
adcl
cmp
ret
fcmovnu
and
test
pop
addr16
pop
lret
jbe
push
mov
addb
or
mov
jne
mov
adc
icebp
push
aaa
jnp
push
ret
xor
mov
hlt
mov
jle
subl
pop
daa
fimull
mov
cmp
pusha
mov
pop
cmpsl
vpshaw
mov
xor
dec
pop
and
push
cmpl
orl
std
push
jecxz
pop
pop
lahf
mov
js
jg
cmpsl
aas
push
hlt
or
mov
mov
cld
sbb
loopne
insb
cld
adc
bound
clc
sbb
jo
iret
inc
in
iret
out
pop
push
xlat
nop
test
pop
pop
push
adc
sbb
xchg
mov
rorb
jecxz
or
es
shlb
push
jmp
lock
idivl
shl
push
les
insl
inc
lahf
lea
nop
push
rolb
push
and
xor
sub
mov
mov
cli
iret
inc
xlat
imul
mov
jg
mov
fldl2e
xchg
ret
hlt
xchg
out
lea
xchg
loop
fwait
sti
jae
push
or
xor
mov
mov
ds
cs
xchg
clc
jns
adc
mov
imul
cmpsl
push
jns
fidivrs
add
insb
hlt
into
cmpsb
popa
imul
dec
xchg
mov
pop
mov
inc
aas
lret
stos
cmp
aaa
push
xchg
in
rorb
dec
test
pop
daa
or
icebp
out
mov
std
data16
inc
inc
inc
push
popf
mov
dec
pop
mov
mov
dec
fwait
push
out
iret
testl
fdivl
xor
ror
movsb
dec
loope
loopnew
jne
pop
ret
cvtpi2ps
mov
bound
xor
pop
cltd
scas
mov
fiaddl
xchg
fwait
or
jg
dec
pop
sarb
cmp
fwait
movsl
out
pushf
mov
or
or
cmc
ffreep
les
sbb
mov
mov
mov
sarl
xor
mov
clc
cmp
cs
divl
filds
in
lods
lods
xchg
and
mov
int3
mov
ja
pop
je
int
jno
inc
int
imul
icebp
add
dec
popa
pushf
loopne
mov
sbb
adc
in
lahf
ror
push
popf
ficomps
inc
and
xor
mov
xor
aas
sub
stc
mov
xchg
lock
jae
ret
in
int
test
out
xor
xchg
jb
movsb
lods
outsb
cmp
popf
xchg
and
jno
imul
iret
cmp
add
in
fidivs
inc
push
js
and
ds
out
outsb
nop
dec
out
scas
nop
pop
mov
stos
popf
cmp
lea
sub
mov
stos
xorl
sarl
lret
ds
cmpsl
push
es
ret
adc
ljmp
fwait
lret
sbb
or
and
les
mov
xor
in
jmp
and
cmp
in
lock
cmc
adc
sbb
lea
cmp
pop
out
jl
xchg
sbb
jge
cmpl
rol
cmc
push
jne
dec
test
xchg
and
jecxz
fbld
fisttpll
pop
and
mov
stos
cmpsb
mov
jne
mov
loopne
pusha
loope
mov
pop
add
andb
idivb
cmpsb
mov
lds
icebp
leave
add
sbb
shll
neg
mov
in
fistl
mov
add
and
pop
pop
cmp
add
in
mov
out
enter
mov
pop
mov
mov
test
incl
frstor
sub
stos
xchg
or
mov
pop
ficoml
push
adc
icebp
xchg
cmp
out
xchg
movsb
cltd
and
div
idivl
subl
jns
movsb
dec
paddsw
mov
rolb
pop
dec
mov
test
popf
in
sbb
mov
add
lcall
cmp
repz
jg
push
or
jne
inc
cld
pop
fisttps
std
cmp
adc
pop
add
flds
xchg
cmp
popf
jp
leave
jecxz
cli
adc
fwait
popa
mov
pop
rcr
xchg
fcmovb
mov
and
jl
out
sub
repnz
ljmp
mov
jl
out
jnp
or
cmpsl
mov
je
inc
cmp
nop
push
out
xor
loope
and
xlat
or
outsl
scas
push
mov
push
hlt
test
stos
add
nop
cltd
loopne
mov
lods
inc
jle
test
cmp
lds
sbb
out
sbb
int
call
lcall
push
inc
mov
test
dec
aam
fisubrs
mov
int3
xchg
lret
inc
lods
jge
mov
add
dec
pop
lods
movsb
repz
sbb
add
pop
ficomps
add
mov
pop
scas
out
nop
push
pop
faddl
fisttpl
out
pusha
test
aaa
pop
lea
les
sbbl
pop
cmp
scas
stc
mov
adcb
pop
sbb
stos
ret
jb
pop
push
in
and
lds
xor
and
sbb
push
cmp
ja
dec
cli
fdivrl
fisubs
faddl
sbb
arpl
xlat
aam
loop
inc
xlat
repnz
dec
mov
xchg
mov
push
jae
leave
inc
pop
sub
jbe
ss
rcrb
popf
mov
or
rorl
rcl
add
inc
mov
dec
add
mov
out
addr16
gs
icebp
sub
xchg
icebp
and
cs
aad
adc
cmp
cmpsl
clc
mov
mov
push
rorl
fisubl
pop
sbb
int3
push
xchg
nop
scas
inc
jp
mov
iret
xchg
insb
add
push
mov
push
xchg
and
popf
mov
jmp
inc
mov
insl
push
mov
cmp
push
dec
mov
and
repnz
and
out
xchg
maskmovq
notl
mov
push
in
jmp
jmp
pusha
es
jg
inc
aam
mov
hlt
fiadds
xor
fldenv
push
sub
aam
jp
add
pop
jl
scas
or
pop
rolb
test
add
jecxz
shlb
outsl
popa
push
mov
mov
push
arpl
ds
bnd
mov
into
out
sub
cs
rclb
jg
or
pop
sbb
mov
mov
mov
xlat
imul
pop
sarb
jle
leave
ds
popa
xchg
inc
scas
aas
stc
jmp
rorl
jb
out
jnp
test
enter
outsl
aaa
jge
or
sub
adc
cmc
inc
pop
and
or
loop
xchg
xchg
xchg
aad
test
cs
jg
cmp
lahf
pop
into
outsl
push
ret
lahf
and
stos
pop
or
dec
sbb
mov
and
inc
nop
xor
push
es
mov
fmuls
pop
mov
fwait
xchg
fdivp
mov
insl
cmp
xor
push
ret
dec
sahf
negl
idivb
push
ja
jmp
mov
in
mov
lods
jecxz
std
sar
data16
jns
mov
jns
jmp
dec
mov
mov
mov
decl
cmp
push
jbe
sub
sbb
stos
test
mov
pop
pop
inc
inc
popa
dec
out
xor
jmp
xchg
dec
ret
imul
add
xor
mov
lock
imul
pop
cmpsl
call
mov
mov
in
sahf
pushf
pop
lods
push
insl
mov
mov
jo
addl
push
inc
sub
call
ret
icebp
imul
jo
xchg
ds
fdivrs
sbb
int3
mov
sbb
or
lds
mov
addr16
sar
fcomps
pop
jo
and
icebp
pop
xlat
sti
pop
mov
nop
cli
clc
and
and
in
test
insl
jo
xchg
cwtl
jg
push
pusha
hlt
jae
jge
or
sbb
scas
xor
lods
gs
push
leave
push
push
arpl
mov
mov
sub
push
and
jmp
pop
cltd
fs
addl
outsb
push
dec
aas
rorb
rol
and
repz
inc
fdivrl
dec
mov
rorb
pop
adc
in
mov
cli
nop
mov
aas
jns
mov
addb
jmp
imul
sub
mov
leave
mov
dec
pop
cmpsl
pop
inc
xor
enter
data16
call
out
testb
int3
mov
push
cmp
mov
daa
pop
xorb
divl
push
ds
and
jmp
mov
push
mov
xor
loope
lods
lcall
ret
loope
adc
stos
addl
js,pn
iret
inc
mov
add
jae
push
int
and
gs
add
sub
and
cwtl
xor
sub
mov
mov
mov
lock
dec
mov
daa
pop
xchg
repnz
pop
rcr
jp
pop
aad
dec
int
stc
mov
test
fidivrs
add
daa
iret
sbb
clc
into
adc
jl
sub
adc
jns
adc
add
decl
pop
cmp
movsb
mov
mov
cmp
insb
mov
in
inc
out
dec
or
aaa
mov
jmp
mov
xor
dec
and
cmp
jmp
xorl
push
cmp
int
cmp
jp
pop
or
or
cld
or
fmull
ds
cmp
lods
jo
and
sub
outsb
sahf
push
js
shlb
outsl
sbb
fs
pop
int3
lock
call
pop
subb
sub
fmull
sbb
outsl
cltd
fsubrp
mov
lret
and
mov
add
adc
mov
repz
jae
dec
dec
jg
cli
mov
push
aaa
mov
out
mov
push
push
enter
mov
xchg
ficoms
or
pop
jne
and
pop
xor
and
adc
fisubl
dec
movsl
push
mov
out
mov
stc
mov
rolb
mov
popf
fsubp
pop
aad
add
xor
xchg
mov
mov
cli
dec
sbb
mov
je
sub
jecxz
mov
or
xchg
xchg
push
jne
sub
and
inc
jl
insb
int3
or
inc
jg
lods
mov
int
pop
repnz
ficoms
call
pop
scas
aad
pop
fisubs
jns
xor
rol
cmc
inc
push
jg
mov
dec
jnp
aas
cmp
pusha
cmc
pop
mov
push
add
or
add
pslld
shl
subl
jg
xchg
jl
pop
in
xlat
pop
popa
fdivs
push
cs
test
movsb
fcoms
movsb
sbb
push
jge
icebp
lahf
xchg
cltd
je
mov
pop
aaa
mov
inc
inc
and
xchg
outsl
dec
aam
mov
jno
pop
sbb
nop
push
jmp
fs
test
sub
add
dec
xor
mov
mov
sbb
xor
jbe
push
xchg
and
mov
mov
fisttpll
in
and
xchg
mov
pusha
das
rcl
mov
xchg
xchg
and
sub
movsl
inc
mov
in
pop
jg
xor
xchg
cmpsl
movsl
stos
add
fnstenv
sti
cltd
imul
in
js
rol
ljmp
dec
inc
add
ss
dec
and
dec
add
sub
test
ds
mov
xchg
sti
loope
jmp
mov
mov
cmpsl
sti
mov
xor
push
pop
xchg
mov
icebp
sub
sti
hlt
xor
mov
mov
mov
push
jl
pop
pop
xlat
fisttpl
outsl
iret
jo
add
xchg
or
and
sub
push
rcrb
inc
jle
orb
cmc
sub
xor
xor
jno
shlb
inc
dec
push
loopne
test
gs
push
fsub
inc
push
xor
cmpsb
dec
insl
sarl
mov
sahf
subb
pop
mov
popf
mov
inc
or
push
idivl
xor
pop
push
xchg
push
xor
mov
mull
sbb
adc
stc
cmp
xor
cmp
nop
lret
add
imul
imul
push
clc
cwtl
adc
xchg
in
sbb
push
mov
leave
in
fnstenv
ds
xor
cmc
inc
adcb
stos
clc
adc
ljmp
xor
lods
test
shll
sbb
ficoms
push
push
les
mov
fbld
xchg
imul
lcall
out
mov
add
nop
shrw
aad
enter
xor
push
cmpsl
scas
xchg
mov
js
push
adc
das
das
outsl
loope
gs
cld
dec
mov
push
xchg
fsts
mov
or
aad
dec
push
xor
call
xor
mov
xchg
cmp
mov
and
jnp
fs
push
pop
shl
add
mov
and
out
loopnew
pop
adc
sub
ja
or
dec
xlat
test
stos
enter
add
jge
insl
xchg
ss
jnp
clc
insb
nop
jno
stos
cmp
mov
fwait
jl
sbb
ja
dec
arpl
push
idivl
mov
xor
inc
inc
icebp
fsubs
dec
sarl
std
mov
inc
stos
shrl
and
test
inc
lods
cmp
repnz
int3
bound
in
cmp
je
jp
or
inc
adc
inc
inc
pop
scas
dec
lock
jl
add
xchg
int
adc
mov
pop
movsl
rclb
enter
add
push
jns
inc
jl
and
jbe
or
out
xchg
push
int3
test
mov
mov
shr
jecxz
fwait
xor
sub
add
xor
sub
je
daa
in
mov
jno
mov
or
add
mov
xchg
aas
mov
bound
pop
jge
std
mov
or
loope
and
sub
xor
dec
and
mov
mov
int3
icebp
inc
and
push
ret
and
mov
sub
xor
lret
loope
pop
aad
jo
pop
pop
popa
sbb
or
mov
or
sbb
rol
mov
dec
negb
add
call
jns
stc
inc
sbb
mov
sbb
mov
adc
push
lea
out
add
lds
cmpsb
lea
sbb
pop
push
scas
pop
outsb
dec
or
outsb
jbe
cmp
imull
lods
incb
ljmp
and
and
repnz
imul
push
std
mov
insb
inc
sub
stos
cmpsl
test
sub
sbb
xor
xlat
jns
ss
xchg
mov
fsub
or
aam
sbb
xor
lret
mov
mov
xor
pop
ss
aaa
add
sbb
ss
mov
lods
not
aam
jno
or
dec
mov
xor
inc
ja
jmp
mov
push
clc
shrl
hlt
xchg
mov
inc
imul
jne
sti
or
xchg
cwtl
jl
pop
jle
es
xor
ja
sbb
and
push
cmp
cmp
mov
adc
leave
cmp
pop
stos
movsl
adc
insl
jno
sti
lret
xchg
adc
push
and
setl
lods
repz
fiaddl
je
subl
sub
xchg
cmp
ret
scas
xchg
fxam
sbb
pop
aas
xchg
adc
aaa
mov
pop
cmp
xor
jg
inc
xor
sbb
sbb
lret
mov
push
mov
jae
jns
clc
sub
push
sub
xchg
add
leave
sub
jae
sbb
test
fldenv
jl
ljmp
lret
push
dec
roll
dec
int
jecxz
inc
jb
inc
xor
cmp
inc
pushl
xchg
cmp
ljmp
xchg
insb
inc
sub
insb
out
xchg
out
aaa
pop
and
cmp
and
mov
cwtl
fs
and
decl
les
gs
push
popf
rorb
and
mov
sarl
imul
pop
das
pusha
imul
push
sti
sarb
and
push
sti
xchg
jae
pop
cld
lods
push
cmpsb
enter
adc
icebp
in
je
push
mov
sahf
fldcw
ljmp
cmpsb
dec
dec
lcall
in
outsb
scas
icebp
xor
or
outsb
jp
pushf
int
cmp
pop
popf
out
andb
rclb
xorb
cmc
add
cmp
ja
sub
mov
mov
and
scas
ja
sub
adc
xchg
cmp
add
mov
int
test
out
mov
dec
cli
loopne
xchg
adc
fstl
push
js
sub
enter
dec
jb
dec
cmpsl
inc
lret
repnz
cmp
and
fs
adc
sub
movsl
icebp
dec
icebp
into
sub
out
mov
imul
cwtl
mov
xchg
rcl
add
les
inc
rcr
lcall
mov
add
sbb
jle,pt
jle
imul
test
in
jge
sti
gs
mov
addr16
dec
mov
mov
into
in
mov
and
cld
inc
mov
fldenv
enter
inc
je
shll
fidivrl
push
dec
nop
mov
in
cmp
xchg
fsubrs
sbbb
xor
lcall
xlat
ret
insl
and
rcrl
ret
cmpsb
addr16
jge,pn
cltd
ja
clc
hlt
inc
push
mov
fisttps
testb
jns
push
mov
dec
test
cli
sbb
fiadds
pop
xchg
xchg
rolb
xchg
adc
lds
pop
mov
xchg
xchg
push
arpl
shrb
fstpl
fdivs
sarl
jg
push
mov
push
jg
cli
push
pop
inc
add
ss
lret
inc
xchg
push
push
xchg
xor
fs
and
push
or
and
sti
pop
cld
push
lahf
loop
mov
aaa
mov
mov
and
dec
popf
jp
push
jge
sub
repz
mull
adc
push
fmull
inc
test
bound
push
imul
in
cltd
inc
mov
loop
dec
out
or
inc
jno
or
nop
lods
cwtl
and
flds
add
idiv
cmp
std
cld
lods
stos
xor
je
push
mov
incl
dec
or
fwait
add
mov
pop
mov
adcb
loopne
das
push
cmp
mov
orl
arpl
push
imul
jp
inc
stc
add
repnz
xchg
fadd
xchg
sub
insb
testb
push
leave
popf
and
pusha
mov
jns
mov
cmp
inc
adc
div
gs
fistpll
mov
adc
mov
jne
imul
fcmovne
mov
popa
mov
ljmp
sbb
out
inc
fisubl
aad
push
inc
xchg
push
dec
sti
insl
pop
mov
mov
jo
push
push
fistps
repz
jmp
add
mov
push
rcl
jns
lock
fidivrs
scas
inc
fcoml
stc
and
xchg
sub
sbb
es
xchg
xor
cmpb
add
xchg
lods
mov
push
lahf
rcl
pusha
lods
mov
inc
sub
jge
xchg
sbb
xor
in
or
pop
xor
mov
rcl
test
cmp
cmp
push
push
mov
cmp
subb
xchg
adc
sbb
pop
xchg
push
shrb
sub
mov
xchg
add
add
jne
and
sub
jmp
adc
add
mov
test
fwait
pop
mov
addl
and
cwtl
pop
addl
addr16
out
in
push
jecxz
jl
stos
mov
add
pop
fmull
inc
mov
in
pushf
xor
gs
ja
cwtl
clc
subl
mov
xor
test
mov
outsl
inc
xor
ja
nop
add
sub
jns
mov
fisubrl
cmp
cs
pop
or
inc
mov
mov
adc
xor
pop
repz
faddl
mov
fmull
push
cmp
sbb
pop
jnp
aad
je
push
jg
cmc
or
scas
stos
cmp
sbb
sbb
call
push
hlt
mov
es
les
mov
std
loopne
and
aad
sbb
mov
ret
aas
aaa
push
lds
into
fidivrs
jl
xchg
out
dec
mov
in
mov
shr
lahf
mov
fs
in
inc
das
iret
inc
xchg
movsb
ret
lock
mov
jmp
out
outsb
cmpsb
mov
arpl
cmp
jno
mov
mov
lcall
dec
clc
fwait
stos
jg
imul
pop
gs
mov
scas
cmp
test
in
std
or
fcomps
dec
out
sbb
adc
data16
pop
into
mov
pop
pop
subl
or
jle
mov
test
push
jp
ds
cmpsl
mov
movsb
cmp
shrl
addr16
inc
mov
bound
add
xor
mov
mov
xchg
and
dec
lock
lret
cwtl
cmp
aam
dec
arpl
ss
loopne
stos
movsb
pop
add
notl
jle
push
divl
sbb
cmp
xor
int
fcoms
push
inc
fmull
mov
push
movsl
add
cs
cld
jle
call
aam
sbbb
mov
outsl
dec
and
cli
pusha
add
mov
push
jns
mov
addr16
lods
hlt
inc
in
rcrl
pushf
jl
adc
out
sub
xrelease
shll
cmp
insb
xchg
xchg
jns
jae
rcl
js
sbb
mov
sbb
je
sub
call
xchg
mov
jb
push
leave
movsl
mov
and
inc
fwait
xchg
or
dec
sbb
sbb
dec
xchg
out
jmp
call
insb
xchg
mov
adcl
dec
adc
insl
cmpsb
push
mov
inc
insb
jge
mov
push
xchg
fcomip
mov
into
add
xor
mov
mov
or
inc
subl
mov
icebp
ss
and
movsb
aam
fisttpll
mov
cmpsb
lods
in
xchg
out
ds
stc
orl
addr16
adc
dec
ret
pusha
push
shr
lcall
mov
pop
jb
dec
imul
testb
sub
dec
xchg
pusha
stc
jbe
js
dec
mov
or
pop
orb
and
movsl
xchg
jns
sbb
xchg
pop
sbb
int
lcall
clc
mov
mov
cwtl
imul
addr16
cmp
lea
out
dec
jns
push
ficoml
mov
testl
clc
arpl
mov
and
or
clc
sbb
push
mov
arpl
shl
push
mov
push
pop
xchg
cwtl
clc
or
xor
insb
cs
loop
push
cmp
shr
mov
mov
in
subl
icebp
inc
test
ss
mov
jo
sahf
test
fxch
aaa
pop
push
or
cli
out
xor
in
leave
faddp
xchg
fadd
cmp
inc
dec
lret
fdivs
dec
jo
outsl
in
cld
xor
push
or
cmp
jecxz
push
sub
or
and
dec
push
dec
mov
sub
lahf
loopne
jbe
mov
or
pop
dec
or
test
lcall
inc
sti
in
sbb
loope
add
mov
mov
pop
push
test
test
push
mov
sti
adc
cltd
shrb
fnstcw
lret
and
xchg
jns
js
cmp
push
mov
adc
cs
popf
leave
out
dec
out
push
fcoms
lds
jno
or
mov
mov
dec
je
rol
test
and
popa
jne
sbb
mov
xchg
jae
cwtl
dec
lahf
adc
mov
data16
add
arpl
jecxz
lcall
shrb
push
sbb
ljmp
jp
das
pop
mov
add
jle
in
mov
mov
sbb
test
insb
cmpsb
cltd
inc
push
js
incb
sub
cmp
cmp
sub
jecxz
jmp
lds
sub
lret
mov
sbb
daa
sbb
pop
cmp
sbb
jo
popa
rclb
mov
mov
and
jns
xchg
xor
andl
fwait
or
in
push
sub
cmpb
test
mov
lods
push
mov
ret
movsl
dec
pop
lret
push
or
aaa
inc
pop
cs
fs
inc
xor
push
movsb
bound
clc
jmp
ret
mov
stos
push
rcll
gs
adc
js
mov
cmp
jo
sub
fmuls
mov
pop
fsub
mov
dec
and
jae
sub
stos
mov
mov
and
inc
inc
pushf
inc
aad
jno
push
xor
xor
sbb
xchg
push
inc
ret
pop
aas
sub
and
mov
aad
out
or
xchg
push
imul
int
inc
setns
fildl
sub
bound
sub
test
dec
mov
add
not
cmp
mov
and
jae
pop
jne
jl
rclb
test
jle
pop
stos
mov
in
ljmp
dec
pusha
cmpsl
shlb
and
jecxz
inc
mov
fdivs
outsl
lret
hlt
and
dec
call
xchg
pop
and
outsl
pop
leave
loopne
sub
call
aam
movsb
jne
inc
xchg
sbb
testb
loope
sub
and
xchg
xchg
add
pop
mov
mov
lret
adc
mov
cmp
in
fnstsw
dec
add
and
movsb
outsl
xchg
xchg
outsl
aad
insl
movsl
iret
fists
xlat
ficompl
fwait
push
inc
aas
and
and
insl
jmp
cmp
inc
mov
push
test
ss
lcall
ljmp
add
adc
and
cld
fsubrp
dec
nop
cmp
xchg
loopne
and
sub
fs
sbb
lods
sahf
jg
mov
dec
fsubs
decb
and
testl
stos
dec
cmp
aad
mov
pop
inc
popa
inc
push
push
pushf
cld
or
xor
dec
shlb
mov
pusha
xchg
movsb
cld
loop
sub
and
ljmp
or
pushf
loopne
ss
pop
sbb
pop
sahf
and
pop
mov
mov
mov
gs
repnz
out
stc
jl
fwait
cmp
pushw
stc
imulb
movsb
ss
pop
iret
scas
rcrb
pop
cltd
jae
mov
negl
inc
cmpsb
mov
mov
cmp
sti
lret
stos
jb
push
mov
xor
jae
out
lea
xor
dec
mov
daa
lods
daa
into
out
cltd
popf
sub
test
flds
call
sbb
xchg
push
fsts
mov
xor
int
pushf
loopne
out
xchg
mov
jmp
jno
pop
inc
lods
arpl
fsubrl
adc
call
daa
push
inc
scas
jge
adcb
mov
add
notl
inc
mov
mov
sbb
aaa
cmp
cmpl
add
push
add
add
or
mov
int3
pushf
aaa
lret
xor
loop
popf
testl
jne
jno
aam
sti
mov
dec
add
fs
popf
xchg
arpl
xor
test
xor
repz
mov
les
push
lods
sub
push
push
xor
icebp
inc
inc
and
and
movsl
ds
pop
add
or
adc
mov
mov
and
jge
pop
jo
lods
xchg
das
addr16
cmp
in
repnz
fisttpl
xor
sti
push
pop
push
pushl
insb
sub
mov
sahf
xchg
and
js
arpl
in
inc
mov
sar
outsb
and
imul
filds
outsb
out
mov
pop
imul
sarl
sub
jp
pop
inc
push
out
add
mov
mov
mov
push
mov
clc
pushf
outsl
cmp
jle
push
and
sbb
cmpsb
pop
jb
jmp
cltd
lret
sub
scas
sub
add
mov
and
sarl
mov
xchg
add
xchg
in
sti
sbb
jo
sub
cld
mov
jl
test
test
sub
leave
mov
cs
dec
cmp
test
xchg
mov
and
scas
and
inc
out
aam
push
call
push
xor
jge
push
xchg
or
cmp
cmpsb
sub
je
pop
mov
cmp
js
push
sub
shll
icebp
cmp
mov
mov
sbb
pusha
inc
push
out
mov
arpl
push
xchg
pop
movb
clc
mov
pop
pop
js
mov
in
add
test
jle
cmp
and
rorb
ss
sbb
inc
in
insb
dec
adc
push
fisttps
out
adc
xor
mov
sub
enter
cld
pop
push
pop
add
mov
sub
loope
xor
or
xor
sar
pop
or
rcrl
mov
xchg
loopne
xor
lahf
shr
or
dec
xorl
add
negb
cmc
popl
and
scas
addr16
mov
loop
mov
xor
cmp
pop
jge
cmp
clc
and
cmpsb
mov
mov
mov
shrb
cmpsl
push
sub
imul
adc
xor
jbe
aad
xchg
mov
punpckldq
cmp
xchg
xchg
out
cwtl
into
enter
insb
pop
jno
in
push
imul
dec
arpl
addr16
pop
fmull
push
scas
addr16
sub
mov
sahf
adc
xor
mov
mov
repz
cmpsl
push
int3
pusha
bound
lret
fisubrl
fmulp
rol
repz
xchg
dec
sub
insb
lcall
scas
inc
mov
jne
movsl
int
lods
mov
sti
cmp
mov
insl
repz
pusha
lahf
filds
sarb
mov
cld
pop
loop
push
shlb
out
sbb
imulb
loop
fnstenv
int3
inc
mov
or
and
lret
pop
mov
xchg
adc
xchg
repz
push
std
sbb
sbb
add
and
out
aad
out
mov
mov
sahf
add
inc
test
and
push
lret
xor
aam
cmc
jne
and
out
adc
ds
cmc
mov
jne
fdivrl
lods
insb
push
inc
xchg
fcmovu
mov
lret
dec
or
xor
imul
adc
mov
adc
mov
sbb
orl
pop
lret
into
or
sub
adc
dec
hlt
jbe
test
test
mov
sub
cwtl
test
push
push
sbb
jge
push
lret
daa
ja
out
mov
lds
pop
fidivl
inc
xchg
cmp
adc
icebp
das
mov
inc
fs
in
push
mov
mov
ret
cmovs
int
pop
jle
or
es
xchg
adc
std
std
sbb
cwtl
cld
outsb
push
ljmp
not
adc
aam
stos
pop
mov
push
mov
daa
je
jp
add
jns
das
pop
and
xor
pop
mov
cmpsb
or
push
or
mov
clc
cmpsl
aam
sub
popa
adc
mov
loop
in
jecxz
and
mov
subb
stc
aad
pop
push
pop
dec
pusha
mov
and
cmp
mov
ret
inc
movsl
mov
int
movsl
or
mov
cmp
sub
stos
lods
and
idivb
enter
pop
cld
push
jle
movsl
xchg
xor
sbb
inc
fiaddl
adc
mov
adc
inc
loope
adc
in
dec
push
outsb
lcall
sbb
bound
mov
xchg
cwtl
ror
xorl
push
and
mov
sbb
mov
add
push
rorl
imul
push
addl
cli
movsl
xor
mov
and
mov
lea
hlt
in
cwtl
ret
xor
pop
subb
cmp
loopne
imul
mov
lock
push
pop
das
in
push
test
sbb
cli
and
fprem
mov
push
cmp
scas
sbb
mov
js
addr16
jbe
cmc
shll
lods
xchg
xchg
push
mov
jns
cmc
add
push
test
and
jg
in
cmp
ret
mov
sub
enter
mov
mov
sbb
xor
mov
jb
sub
dec
xor
sarl
test
mov
lret
fs
rcll
or
out
mov
push
ja
sub
out
add
mov
xchg
sar
fimuls
dec
inc
jo
dec
orb
pop
mov
push
outsb
add
or
aam
jbe
mov
xchg
xchg
ja
div
mov
and
aas
sub
das
movsb
test
xor
fsts
jmp
lahf
sub
jl
sub
mov
das
inc
dec
scas
xor
dec
push
dec
rorb
lods
dec
lock
sub
mov
sbb
add
iret
jp
jo
imul
loopne
fistl
nop
or
in
rcrb
pop
cmp
outsl
dec
or
cmp
xchg
mov
cwtl
pop
repnz
mov
hlt
jge
subl
pop
mov
jbe
popa
fnstsw
mov
push
cmp
enter
frndint
add
jnp
xor
in
ja
cwtl
call
mov
push
enter
repnz
pop
inc
jge
sahf
iret
cmp
mov
cmpsb
stos
or
not
das
mov
popa
test
leave
sbb
ja
jae
addl
imul
adc
push
stc
je
xor
aaa
loop
inc
faddp
mov
pop
ljmp
jmp
mov
adc
fdivs
push
add
into
or
xchg
pop
js
lret
cmpsl
adc
notb
xlat
cmc
imul
stos
jp
inc
push
bound
les
pop
and
add
fwait
pop
mov
mov
mov
lret
mov
jmp
call
sub
pop
scas
push
in
and
fadd
xchg
decb
cld
cmp
fstpl
push
push
sub
mov
jge
xchg
mov
push
mov
ficompl
movsb
in
inc
in
cmpsb
pop
aaa
push
arpl
and
iret
lret
push
jp
cli
hlt
in
lods
add
stc
xchg
nop
stos
sub
out
xchg
sbb
das
xchg
addr16
rcr
inc
jl
pop
pop
xchg
add
cs
or
mov
and
cli
js
rorl
hlt
idivl
xchg
loop
fmulp
sbbb
xchg
clc
ljmp
in
xor
dec
insb
push
mov
mov
je
jl
cld
ret
js
lea
movsl
fiaddl
repz
dec
xchg
fisubs
pop
mov
mov
pop
sbb
dec
lahf
addl
lahf
push
mov
mov
adc
mov
push
mov
mov
ret
out
scas
dec
pushf
in
rcrb
in
mov
and
mov
outsl
cmp
pop
test
xchg
shlb
xchg
daa
add
dec
js
je
sbb
jmp
push
int
scas
push
mov
and
sub
outsb
jle
rol
pop
jle
incb
and
push
into
stc
ds
push
jne
mov
mov
cli
push
or
push
inc
jle
arpl
jmp
lea
xchg
adc
jmp
mov
and
xor
ss
pop
jmp
or
jbe
fdivl
jmp
push
idiv
pop
mov
std
mov
push
inc
cli
gs
xchg
jae
push
fsubrs
inc
sub
iret
sbb
outsl
or
popf
jg
pop
pop
pop
in
addl
and
icebp
cltd
fbld
mov
jecxz
and
ficoml
cmp
cwtl
lahf
movsl
popa
sbb
sti
xchg
lock
sti
adc
or
test
jge
xchg
dec
test
sbb
xor
fldl
dec
in
enter
sub
and
in
jl
fcomip
cmpsl
dec
ss
and
clc
mov
mov
andb
sub
mov
cmpb
movsl
xor
rclb
mov
mov
xor
fstl
cs
es
rcrb
loop
push
aad
incl
jmp
cltd
adc
mov
repnz
xorl
movsb
sub
push
addr16
ljmp
addr16
incb
shlb
mov
sub
je
sahf
mov
jge
push
mov
clc
cli
inc
insl
pop
movsl
sbb
mov
sbb
test
inc
iretw
sbb
add
aam
jge
mov
adc
cltd
push
cltd
rcrl
inc
shll
add
jb
test
mov
inc
xchg
mov
incl
test
daa
push
gs
mov
or
js
bound
push
mov
imul
icebp
orl
stos
jo
cmp
mov
adc
sbb
push
cltd
cmpb
pop
repnz
movsl
push
loope
lods
add
or
into
push
mov
adc
push
push
je
mov
mov
aaa
sub
ja
pop
arpl
out
daa
scas
out
sbb
movsl
aas
mov
mov
sbb
pusha
jecxz
inc
pop
insl
test
xchg
push
jbe
cltd
std
jmp
adc
addl
mov
jp
orb
or
test
test
inc
popf
jge
lods
outsl
xor
call
faddp
subl
popl
fcomip
fs
hlt
mov
cmp
hlt
les
mov
sbb
neg
jge
sbb
testl
int
in
addb
lods
leave
add
ret
psubsb
add
sbb
cmp
pop
rcll
xchg
sbb
or
xchg
prefetcht0
or
bound
data16
add
inc
mov
pop
or
jo
repz
movl
sbb
cmp
out
orl
dec
sbb
jne
cltd
das
fadds
data16
xor
sub
pop
nop
enter
xor
jle
adc
fcomp
mov
orl
ret
in
adc
cmpsl
jge
mov
fcoml
ja
adc
dec
xadd
cld
xchg
cmp
jo
insl
push
repnz
xor
push
pop
sbb
divb
cmp
or
pop
insb
push
cltd
lcall
push
repnz
pop
push
fists
in
xchg
push
ret
mov
les
les
test
lock
jmp
mov
popf
or
imul
mov
cmp
loop
popa
repnz
scas
test
loope
testl
iret
add
xchg
inc
pop
fmuls
lret
adc
xor
daa
push
into
fcmovnbe
add
fnstcw
pop
sub
fisubrs
movsb
gs
movsl
ret
adc
jp
insb
mov
inc
and
scas
das
push
popf
bound
les
mov
and
push
push
mov
pop
daa
pop
dec
pop
in
fdivrs
push
jo
or
and
mov
mov
mov
and
shlb
sbb
sub
repz
in
faddl
std
add
mov
leave
lock
aam
in
call
std
or
icebp
arpl
push
mov
scas
add
add
bnd
mov
jae
roll
stc
sahf
cmpsb
lret
sub
lahf
aaa
cmc
push
test
jge
into
imul
cmp
mov
insl
lcall
push
loop
jp
fistpl
jmp
jnp
out
dec
sbb
insl
clc
or
mov
in
fwait
xlat
stos
lcall
cmpsl
xchg
xchg
nop
out
les
lods
clc
in
cs
xchg
in
and
jp
pop
sahf
or
cli
xchg
jecxz
out
sti
bound
ja
int3
les
roll
sub
jbe
scas
fwait
adc
incl
cld
sub
mov
cmp
mov
ret
adc
add
push
arpl
out
or
arpl
cmp
repz
pop
push
loopne
ljmp
mov
test
dec
mov
mov
and
ror
xor
dec
lods
out
pop
jge
lcall
jo
and
imul
notl
into
das
add
rclb
mov
loopne
test
mov
push
jbe
jmp
bound
fcomip
aas
push
mov
pusha
xor
stos
fcompl
subl
inc
xchg
out
outsb
push
sub
rol
aaa
mov
push
inc
repnz
mov
add
adc
test
sub
adc
mov
dec
fisubrs
or
popa
and
sbb
or
stos
push
adc
aas
inc
jl
pop
mov
xchg
in
pop
jp
cmp
lds
or
in
push
repz
ret
daa
lods
fcoms
in
pop
in
fwait
mov
pop
sbb
mov
in
ja
stos
lahf
out
in
popa
xchg
and
or
xor
dec
mov
jl
push
xor
adc
mov
loop
and
jae
ss
sbb
dec
clc
fdivl
loopne
rcl
sbb
jne
mov
mov
int3
sub
jl
aad
adc
and
mov
add
cmp
mov
adc
xchg
xorl
xor
aad
loopne
int3
push
lods
orb
pop
push
cmp
jb
int3
push
in
lahf
push
mov
hlt
lcall
lea
notl
bound
jge
xor
jge
and
or
stos
mov
divl
out
es
adc
scas
rorb
mov
jo
mov
fs
fidivrl
inc
inc
push
inc
fmuls
aad
or
jl
xchg
ljmp
rol
xchg
inc
xor
inc
and
dec
push
ret
xor
push
cmp
fnsave
push
and
add
dec
jns
add
and
ffree
jecxz
arpl
push
push
cmpsb
movsl
mov
mov
sbb
ss
mov
mov
jbe
lahf
pop
je
fbstp
sbb
pop
add
xor
inc
fisubl
adc
mov
inc
shlb
dec
mov
in
sbb
mov
insl
imul
stos
mov
xchg
jl
repz
cwtl
ret
sahf
stc
and
inc
imull
mov
mov
out
divb
add
sbbl
fisubrl
aad
add
out
xor
xor
jp
inc
mov
cmp
cwtl
add
and
dec
mov
lret
dec
xchg
jne
jb
mov
cmpl
repnz
cwtl
sbb
dec
fsubs
cltd
sbb
xor
dec
xchg
iret
popf
lret
lock
fistpll
adc
xlat
adc
cmc
and
lahf
xor
xchg
jp
mov
ds
mov
jo
pop
outsl
xchg
sbb
bound
in
scas
mov
cmp
pop
xor
mov
iret
pop
xor
push
xchg
int3
or
aad
iret
adc
lcall
xchg
jbe
push
scas
mov
pop
push
js
into
mov
dec
ret
jge
leave
mov
sub
fstpt
push
jne
add
adc
movsl
push
push
js
cli
mov
sbb
jnp
stc
push
lock
loop
roll
xchg
cmp
not
lcall
pop
fcompl
or
mov
cmc
in
lods
testb
or
xlat
mov
pop
push
sub
jg
add
mov
jae
lods
hlt
enter
mov
cmp
mov
xchg
jnp
jge
inc
ret
and
je
sub
enter
cmp
hlt
cli
mov
xchg
ss
mov
cmp
mov
push
jp
fbld
je
sbb
mov
or
dec
push
daa
add
repnz
iret
jne
mov
jge
push
jecxz
xchg
pop
mov
sarl
mov
push
jmp
jns
out
mov
out
xor
gs
or
push
adc
xor
push
xor
test
sbb
addr16
out
addr16
jns
xor
aaa
rcrb
pop
lods
shrb
mov
add
or
aaa
rclb
jo
fcoml
dec
movsb
test
inc
pop
jae
popf
or
or
add
test
lret
lret
movsb
pop
int
inc
mov
push
fsubrs
push
push
mov
jne
or
sub
mov
aaa
xor
loop
cmc
cmc
adc
jne
rorl
in
or
xor
sbb
nop
popa
orl
lds
faddl
fs
adc
ret
mov
dec
mov
out
popf
cltd
outsl
sbb
decb
enter
std
andnps
insb
shl
jp
dec
cmpsb
cwtl
or
aas
mov
insb
out
xlat
pop
daa
in
out
daa
es
mov
pop
push
loopne
movsl
sti
dec
or
or
sub
cmp
ds
add
js
gs
sbbb
in
and
or
xlat
or
fndisi(8087
das
inc
arpl
pop
xor
in
insl
ficompl
pusha
pop
out
rol
mov
mov
cmpsl
cli
roll
jl
dec
jo
popf
cwtl
imul
mov
das
lods
adc
pop
pop
leave
sub
xchg
jnp
dec
adcl
dec
in
mov
arpl
xchg
sub
je
rorl
popf
in
neg
push
xor
int
cmp
aad
das
mov
aaa
shrl
jne
mov
popa
movsb
push
lock
daa
add
dec
add
or
repnz
mov
shrl
xchg
scas
int3
xchg
rorl
or
xchg
stc
mov
xorb
scas
aad
fstl
in
leave
pop
ret
xchg
imul
cmp
std
loop
jne
adc
sub
xor
lahf
and
mov
pushf
fsubl
push
cmp
cld
mov
dec
imul
add
mov
pop
je
mov
mov
jle
cmc
pop
xchg
pop
mov
dec
pushf
jae
or
cs
fistpl
inc
loope
cwtl
cmc
enter
xor
mov
verw
daa
mov
lods
out
add
fwait
add
or
in
in
stos
xchg
and
mov
test
pop
xor
sub
loop
test
or
and
inc
lds
jns
js
out
outsl
stc
fisttpl
xchg
or
mov
lock
xor
mov
fwait
cmpsl
mov
push
or
xorb
push
or
mov
fbld
es
and
pop
inc
push
mov
fdiv
adc
or
loopne
lret
into
pop
mov
daa
mov
and
sub
mov
and
mov
in
push
mov
lret
adc
adc
imul
test
mov
add
sbb
pop
cli
shrb
aaa
sub
and
loopne
or
gs
xchg
inc
lods
je
push
mov
inc
mov
push
mov
cmp
adc
inc
loope
enter
or
decl
mov
fcompl
cmp
aaa
jne
jne
xchg
mov
push
dec
cmp
out
lcall
test
cld
mov
mov
pop
pushf
popf
or
insb
cmp
push
add
testl
or
hlt
mov
lahf
imul
fidivl
mov
add
scas
nop
push
ret
mov
aas
divb
movsl
mov
mov
gs
lea
scas
adc
cmp
cld
loopne
mov
aad
fldcw
xor
dec
hlt
and
mov
scas
cmpsl
pop
xor
call
in
mov
out
stos
loop
inc
fsubs
cmp
push
test
or
mov
aaa
fdivrs
icebp
nop
add
hlt
cli
mov
fwait
mov
sub
popf
and
mov
inc
mov
cmp
push
mull
ljmp
cmp
push
lahf
and
dec
ljmp
popf
add
pop
inc
xchg
adc
cmpsl
add
loop
xor
dec
cmp
cs
push
push
and
in
jl
repz
ret
xor
incl
mov
insb
mov
ficompl
jnp
mov
jae
sbb
iret
xor
xchg
mov
daa
repz
stos
and
inc
inc
jb
sar
lock
popa
or
add
mov
sbb
iret
jne
mov
jnp
jge
dec
pop
xchg
sbb
push
aam
ret
push
add
xchg
push
cmpsb
xor
jns
xor
adc
add
pop
aaa
insb
call
rol
jbe
shlb
push
add
mov
fcomp
sub
add
adc
push
leave
jo
and
inc
sub
in
inc
or
mov
dec
mov
jb
inc
std
mov
mov
loopne
and
sub
push
loope
push
imul
cltd
inc
in
lea
test
push
xor
shrb
mov
and
test
mov
pop
leave
roll
inc
out
jne
mov
data16
push
pop
daa
leave
iret
pushf
aaa
jo
add
nop
das
xchg
or
sbb
mov
pop
sar
dec
into
into
lret
pop
in
and
sbb
sub
test
test
addr16
shll
mov
xchg
and
mov
pusha
add
insl
dec
push
mov
sbb
fstp
xor
movsb
loop
mov
xchg
pop
sbb
lds
clc
stos
jae
mov
fidivrs
test
sub
loopne
mov
leave
push
lcall
scas
icebp
jl
sbb
out
mov
cmp
outsb
shrb
cmp
das
inc
jmp
cmp
mov
push
dec
cmc
iret
push
jecxz
fsubrs
inc
mov
mov
sahf
imul
inc
cmc
popf
add
lret
ret
push
into
out
sarl
mov
xchg
ror
cmp
filds
loop
test
sbb
sub
cmp
push
loop
dec
aam
xchg
pusha
mov
cmpsl
jg
mov
cmp
inc
push
or
xor
xchg
adc
jnp
loop
or
outsb
mov
xchg
push
sbb
add
cmp
loope
xchg
cmp
mov
enter
inc
inc
adc
rclb
subl
pop
mov
icebp
iret
and
jle
lea
mov
add
jns
outsl
pop
dec
add
adc
jae
sub
lea
cmp
mov
sub
mov
ja
xor
sub
mov
xor
add
addr16
mov
inc
scas
fstpt
ljmp
js
pop
adc
xor
pop
pusha
mov
adc
mov
lock
fistpll
lret
std
aad
cltd
outsl
sbb
stos
and
sbb
pushf
repnz
pop
cld
nop
xor
repz
pop
addr16
xchg
ret
push
test
or
sar
lcall
push
aam
int
popa
repz
outsl
jne
cmp
xorl
or
repnz
and
push
mov
lods
or
sub
jl
push
and
xor
pop
and
mov
negb
push
push
pop
es
xor
cs
sbb
fldl
mov
ret
in
xchg
int
in
inc
inc
movsl
pop
sbb
outsb
stos
jle
push
push
cmp
xor
cmp
les
dec
bound
dec
add
mov
cmp
sarb
mov
daa
aaa
dec
push
inc
xlat
adc
add
hlt
mov
add
mov
aaa
xor
mov
rcrb
cmpsl
loope
push
cmp
lahf
cmp
or
add
outsb
das
jne
mov
fsts
call
mov
int
loope
addr16
mov
imul
push
push
xlat
sahf
adc
mov
or
and
bound
and
and
dec
sbbb
ss
jb
divb
xor
cltd
jle
fs
or
rol
sti
sub
inc
cmp
lea
rcr
pushf
and
sbb
dec
ljmp
mov
std
cmpsl
sub
add
mov
or
nop
mov
and
sbb
and
rorl
js
inc
adc
and
outsl
mov
mov
mov
sbbl
sbb
dec
dec
cmpsb
xchg
pop
cltd
adc
scas
test
cmc
enter
mov
jbe
adc
sub
cmp
loop
notl
mov
add
cmc
divps
cmp
adcb
and
addr16
xchg
in
mov
xchg
jmp
cmp
iret
call
adc
es
pushf
aaa
rorl
jno
inc
push
nop
leave
lret
cli
push
in
jmp
mov
iret
ret
inc
clc
cli
cmpl
mov
rcr
out
and
lret
test
cmp
mov
stos
je
inc
not
jbe
cmp
ljmp
push
insl
out
sar
mov
leave
popf
cmpsb
adc
scas
andl
lret
std
push
rcr
ljmp
jo
cmpsb
sub
sbbb
das
push
inc
push
test
sub
mov
out
fdiv
push
andb
in
sahf
enter
mov
in
push
sbb
lock
ja
dec
inc
lahf
jo
mov
imul
sub
pop
movsl
ss
fcompl
hlt
inc
xor
dec
data16
rolb
insb
pop
mov
in
dec
cmpsb
push
pop
xor
rcrb
xor
popa
hlt
adc
pop
out
mov
adc
popa
insl
push
sahf
ss
inc
popa
les
lret
mov
daa
sarl
stos
lcall
adc
sub
mov
xchg
add
or
loope
push
cmp
leave
mov
cmp
leave
dec
int
push
jae
pop
mov
hlt
cmpsl
fiadds
add
movsl
cli
ror
test
je
cs
add
xchg
add
cmp
stos
fisubl
mov
mov
push
out
mov
fidivs
mov
insl
into
add
pop
jge
jno
jnp
cmp
incb
sbb
addl
mov
xchg
jmp
cwtl
add
xchg
ja
lret
jnp
out
push
ret
stos
push
sbb
stos
mov
lret
cltd
xchg
mov
out
mov
mov
mov
xchg
inc
xchg
cmp
les
aam
sbb
add
xchg
jmp
or
loope
inc
out
cmp
sti
pop
cmp
dec
mov
decb
push
cs
fisttps
and
int3
stos
xlat
push
mov
and
pop
rcr
inc
outsb
test
jne
pop
repnz
sub
mov
dec
sub
xor
lret
subl
je
add
shrl
loop
sub
les
outsb
fdivs
dec
inc
in
enter
lahf
pop
fsubrl
lods
mov
cwtl
xchg
aas
cmp
xchg
xchg
fwait
addr16
push
loop
mov
shrb
pop
pop
mov
lret
jne
cmp
cld
push
sarb
das
cmc
das
cvtpi2ps
jge
cmpsb
arpl
cli
or
lods
mov
mov
sbb
testl
sub
adc
bound
js
insb
into
push
aaa
shll
push
mov
dec
jl
cs
jnp
hlt
pop
outsl
lods
fstpl
inc
and
mov
fiadds
xlat
inc
mov
lret
cmp
fidivrl
jnp
or
mov
inc
mov
insb
inc
cwtl
jnp
sti
jecxz
popa
adc
stc
adc
scas
ret
xchg
lahf
pop
mov
popf
test
repnz
in
in
imul
add
mov
repz
adc
sti
enter
mov
pop
jbe
xchg
aam
jns
pop
std
movsl
sub
loope
adc
cmp
popw
pop
pusha
jno
push
cmpsl
mov
or
daa
push
xchg
and
mov
scas
fidivrl
xchg
pop
popa
push
lret
mov
and
icebp
movsl
ss
fs
leave
daa
add
inc
mov
mov
inc
rcrb
jo
sbb
aam
inc
pop
push
in
shr
inc
adc
inc
inc
mov
in
push
sarb
lods
stos
adc
push
sbb
lret
stc
movsb
cmp
sub
mov
and
cmp
xchg
jae
scas
jno
lods
mov
add
lret
lcall
loop
and
add
and
das
ret
pop
pop
call
cli
test
push
es
and
xor
das
shr
and
in
std
mov
ss
push
push
mov
mov
and
or
fsubs
aad
push
dec
jg
push
cmp
sbb
scas
xchg
add
push
mov
inc
movsl
lret
ss
xchg
cmp
xchg
outsb
loop
mov
lret
dec
in
into
scas
add
ret
and
pop
loop
lahf
arpl
out
es
sahf
pop
inc
or
and
sbb
insl
or
adc
inc
add
mov
add
aaa
mov
and
cmp
sbb
add
outsl
inc
sbb
inc
jnp
fs
xlat
mov
lods
ja
call
sbb
addb
icebp
mov
out
and
out
inc
testb
mov
in
push
sub
dec
xor
loop
xchg
loopne
ss
pop
and
inc
pop
add
add
xor
mov
and
int
add
push
push
test
mov
sbb
or
mov
leave
push
dec
ss
mov
lods
mov
nop
mov
xchg
mov
xchg
shr
mov
call
les
lock
movsl
jle
lret
or
or
push
dec
loopne
or
cltd
je
pop
jmp
xchg
xchg
mov
and
cmpsl
cmpb
push
ja
xchg
insl
outsb
insl
in
gs
call
fwait
mov
outsb
mov
addb
clc
bound
notl
fimuls
cmpsb
mov
push
pop
aaa
jl
xchg
mov
popa
stc
ret
rcrl
xchg
cmove
adc
dec
xor
nop
testl
jp
or
sbb
pusha
ret
xchg
sti
sahf
inc
jae
jecxz
push
sahf
cmp
lret
xchg
mov
pop
in
mov
or
aaa
int3
movsl
push
mov
push
mov
lcall
lds
rcl
push
mov
into
roll
fiadds
push
in
mov
cmpsb
jb
sbb
in
adc
push
call
imul
sub
pop
or
bound
mov
add
xchg
xchg
out
push
mov
xchg
mov
jnp
inc
mul
add
call
mov
insl
stos
addr16
test
clc
xor
cmc
jae
outsl
je
aas
dec
loope
popf
mov
cmp
add
xchg
add
push
jmp
fdivrs
sub
sub
xchg
and
pop
sahf
scas
rorb
dec
add
push
add
js
sar
jne
fs
in
int
jg
mov
stos
and
mov
out
pop
pop
push
adc
push
loop
aas
jg
sbb
xchg
jge
xchg
test
pop
xchg
rcl
cmp
jb
frstor
int
andl
cmpsl
rolb
pop
fnstsw
or
jle
test
cld
xchg
out
scas
fwait
out
ret
scas
jae
in
or
xor
push
inc
ficomps
fadds
iret
pop
jnp
int
imul
push
fstpl
inc
pop
pop
sbb
jmp
xchg
sti
and
scas
ss
out
sub
pop
xor
dec
pop
out
sub
mov
sbb
frstor
cmpsl
out
and
xlat
jo
out
jmp
iret
or
xchg
fsubrs
jmp
es
xor
xchg
pop
orl
pop
es
push
movsl
push
repnz
adc
jl
ja
push
xor
push
dec
lds
jle
cmpsl
adc
int
stos
gs
inc
xchg
mov
mov
stos
aaa
les
in
pop
pop
cmp
adc
mov
and
inc
les
pop
jnp
dec
pushf
movsl
aaa
push
and
jge
je
xchg
push
inc
push
and
roll
mov
pop
xchg
retw
test
mov
xchg
add
ja
mov
std
mov
jmp
and
test
inc
and
into
sub
pop
mov
repz
int
xorb
adc
mov
or
lock
adc
je
loope
jecxz
jecxz
ja
xor
mov
call
iret
cltd
arpl
lds
sbb
push
adc
pop
xchg
iret
xchg
xchg
lcall
mov
ja
inc
lret
jge
mov
push
sti
imul
adc
arpl
push
repz
mov
lret
pusha
test
lods
jl
setge
add
add
in
or
jb
testl
jecxz
dec
xor
pop
xchg
or
sub
sub
xchg
data16
cmp
das
mov
mov
jge
mov
cmpsb
scas
mov
cmpsb
stos
mov
push
popa
or
adc
daa
mov
mull
nop
mov
push
nop
push
inc
dec
mov
setae
dec
arpl
cmp
mov
je
inc
mov
and
jns
out
push
insl
in
popa
dec
icebp
adc
sub
pop
jecxz
popf
into
shll
or
je
or
or
xchg
adc
pop
imul
pop
cmp
xchg
sub
insb
movsl
xchg
sub
fcoml
adc
cmp
stos
das
repnz
dec
cmp
loope
stos
and
les
jo
outsb
shl
pop
jnp
xchg
pop
pushf
xchg
fwait
lds
dec
xchg
cmp
push
jle
mov
fmuls
sub
aam
lock
fnstenv
pop
adc
addb
mov
push
push
icebp
stos
pusha
jp
in
sub
adc
cs
lahf
adc
mov
mov
pop
sbb
test
out
sbb
xor
icebp
xor
rorl
les
dec
dec
in
mov
and
dec
jae
and
out
sbb
popa
test
sarb
mov
push
and
aaa
mov
data16
jmp
fnstcw
into
push
cli
fdivrs
mov
imul
std
inc
stos
xorl
lahf
inc
sarl
out
pushf
jl
hlt
ret
cmp
mov
pop
mov
pop
add
pushl
mov
xchg
xor
std
push
das
pop
lods
outsb
sub
xchg
into
xor
push
std
aam
sub
cmpsb
sub
sub
jbe
nop
add
pop
or
sti
sub
sbb
aas
cmc
xor
int3
addr16
call
imul
dec
adc
jno
or
xchg
mov
lret
xchg
outsb
dec
dec
dec
jo
xlat
arpl
imul
cwtl
mov
xchg
inc
push
out
add
xchg
pusha
push
push
cltd
out
xchg
lods
add
in
mov
sub
repz
roll
scas
xchg
hlt
ret
adc
es
ret
addr16
mov
repz
das
pushf
les
clc
imul
pop
and
ja
js
jns
mov
jno
stc
mov
or
stos
sbb
mov
push
mov
inc
shrb
pop
push
mov
sub
scas
mul
add
data16
fdivs
pop
jle
in
movl
aad
mov
sub
inc
push
cmpsb
cmpsl
push
xor
addl
inc
mov
and
and
adc
mov
mov
stos
jbe
xorb
insl
sbb
and
hlt
cmp
sarl
or
push
cmc
in
sti
clc
lcall
push
into
enter
jae
mov
movsb
cmc
and
xchg
popa
sub
test
xchg
test
mov
cli
aad
push
repz
cmp
xor
icebp
push
in
rcrb
sbb
notl
cli
dec
inc
mov
push
pop
pop
popa
rclb
inc
inc
push
gs
sbb
cmp
not
jo
lods
in
dec
jae
fistl
dec
sbb
inc
inc
fnstenv
mov
stc
cmp
test
popa
fstps
rcll
leave
inc
call
gs
jmp
add
add
int
in
sbb
insb
sbb
ljmp
mov
ljmp
xor
movsl
sbb
repz
flds
lahf
inc
inc
or
in
adc
dec
mov
cmp
xchg
inc
cli
jne
pop
out
jmp
in
mov
pop
xchg
aas
dec
and
cwtl
inc
jp
sbb
aad
out
sub
popf
and
mov
sub
or
repz
sahf
movl
test
ljmp
fisubrl
sbb
dec
cs
pop
push
lock
xor
iret
jb
fwait
sarb
cmp
in
into
lods
xchg
call
hlt
sub
test
ret
add
outsb
in
popa
sub
and
sbb
daa
les
xor
ret
popf
sub
fisubl
scas
inc
jl
in
sbb
mov
scas
mov
add
movsl
mov
test
lret
and
repnz
and
dec
jp
call
dec
sub
inc
negl
pop
nop
int3
add
push
or
sbb
in
movsl
pop
fadds
std
mov
and
pop
push
add
push
pop
and
loope
aad
dec
je
outsl
out
push
or
testl
xchg
push
mov
xor
das
test
aad
add
jle
cmpsw
mov
jp
aaa
int3
fimuls
or
mov
and
jp
int
test
repz
es
cmp
mov
sti
add
mov
sti
mov
adc
cmp
pop
aas
aam
js
mov
inc
pop
fisubl
push
xchg
in
out
outsb
push
xor
xchg
imul
test
aad
hlt
es
jne
pusha
or
ffree
in
sbb
xchg
pop
xchg
mov
cltd
cmpsl
adc
and
pop
and
rorl
mov
aas
or
xchg
pop
add
fidivrs
mov
nop
cmpl
rcl
add
jg
jmp
sbb
setge
mov
xchg
push
sbb
aad
loop
lahf
sbb
push
loop
test
pop
movsl
fstl
jne
iret
lods
cmp
jns
mov
push
cmc
mov
outsl
push
int3
clc
notl
sbb
push
sti
or
jnp
ret
aam
stc
lahf
mov
sub
imul
arpl
jp
adc
movsl
roll
iret
jnp
jl
xor
cmp
mov
and
mov
mov
js
mov
shr
jmp
xchg
int3
and
mov
mov
jecxz
fists
hlt
movsb
stos
mov
addb
insb
mov
dec
xor
mov
mov
sarl
ja
pop
sbb
lcall
adc
cmp
push
dec
mov
dec
jge
and
out
xchg
mov
inc
rcll
cmpsl
imul
into
orb
jns
xchg
sub
pop
inc
loopne
mov
lock
mov
daa
pop
mov
mov
call
js
cli
cmp
test
rorl
mov
sub
inc
iret
cltd
loope
cwtl
dec
cld
cld
scas
ret
call
xchg
sbb
mov
sbb
or
shl
fcomps
sbb
imul
mov
mov
jg
insl
pop
adc
bound
cs
sti
clc
sub
loope
pop
pop
fs
dec
mov
into
aad
call
shlb
dec
repz
std
dec
shlb
jmp
imul
mov
std
or
loop
and
lret
mov
andb
out
xchg
mov
dec
cltd
das
es
test
icebp
add
mov
int3
mov
subb
sub
and
repnz
loope
xorl
rorb
jnp
rol
fs
mov
fistl
adc
mov
lock
les
sarb
and
test
pop
mov
ljmp
movsl
pop
inc
test
jo
ret
adc
push
cmp
jecxz
inc
addr16
mov
pop
icebp
dec
adc
dec
leave
mov
mov
jae
push
push
iret
push
cmc
ljmp
insb
adc
fwait
sub
pop
mov
add
sub
dec
frstor
test
lods
push
lret
mov
add
mov
outsl
ss
dec
addr16
mov
dec
outsl
xchg
cmp
in
sbb
mov
cli
stos
dec
mov
data16
jo
mov
dec
divl
mov
push
popf
lret
fcmove
xchg
outsb
adc
and
xchg
je
lcall
iret
pop
mov
cs
outsl
sub
mov
into
xchg
into
outsl
or
xlat
cmp
sbb
dec
fistpl
xor
dec
fisttps
push
out
sbb
sub
pop
imul
push
inc
pop
inc
cmp
adc
jnp
mov
into
out
into
aas
and
ret
imul
pop
push
mov
pop
inc
xor
fisttpl
int3
push
lods
daa
int3
xor
sub
movsl
out
fidivs
stos
cmpsl
xchg
movsl
pop
mov
scas
lahf
and
into
dec
call
mov
dec
hlt
or
dec
in
mov
repnz
mov
xor
lret
pop
std
movsl
push
clc
les
lret
sbb
jge
dec
into
adc
xchg
or
stos
repz
push
jl
lahf
in
divl
add
stos
nop
sub
addl
cmpsb
popf
aam
add
imul
xchg
test
and
mov
xchg
xor
dec
lods
add
push
jne
sub
pop
aad
add
in
in
not
mov
mov
ss
adc
cld
aad
jno
or
loope
arpl
push
fs
and
push
aam
lcall
inc
ljmp
sbb
sub
mov
pop
push
out
lods
out
sub
jp
shll
inc
mov
mov
out
cmp
ficoml
xchg
sbb
mov
xlat
xor
xlat
js
mov
push
out
push
popa
adc
repz
pop
inc
in
sub
aam
cld
jno
fwait
sub
in
pop
popf
int3
mov
scas
into
sub
scas
jl
pop
je
std
cli
adc
cwtl
repz
and
lret
adcb
int
out
popf
scas
lods
mov
shlb
aas
data16
into
add
mov
and
mov
in
mov
mov
mov
jns
sbb
das
int
pcmpgtb
sub
xchg
rorb
xlat
adc
ds
mov
mov
out
rorb
sbb
into
dec
mov
pop
mov
cwtl
mov
and
dec
int3
jo
pushf
int3
fildll
push
loope
scas
push
cli
mov
jle
pop
mov
jns
jns
mov
test
cmp
xchg
aas
and
imul
adc
pop
std
pop
lods
cmpsl
outsl
mov
iret
mov
imul
mov
loope
xor
idivb
jecxz
jnp
ja
and
iret
in
jmp
pop
and
testb
pushf
mov
xor
pushl
cs
outsb
arpl
ficompl
arpl
xchg
out
jg
mov
mov
jge
pushf
js
rclb
jg
addr16
pop
popa
inc
ja
andb
pop
xchg
xchg
sbb
cmp
fucom
out
sbb
es
orl
adc
mov
mov
sti
push
scas
push
push
inc
dec
inc
adc
ret
data16
inc
stos
in
sahf
jmp
leave
cmp
lret
aas
and
mov
movsb
aas
lods
adc
jb
lock
pop
xor
ds
pop
enter
arpl
pushl
mov
sti
ret
pop
pop
jo
jne
mov
nop
cmpsl
push
push
cli
and
or
pop
adc
sbb
ljmp
mov
or
addr16
int3
mov
scas
jg
adc
fistpl
lret
push
push
out
inc
and
cwtl
xchg
mov
pop
xor
test
out
fdivrl
sub
sub
pop
dec
data16
mov
sub
jb
fisubs
push
push
jle
mov
popf
xchg
sub
xchg
sbb
insl
inc
movsb
sub
pop
or
mov
push
xor
sbb
pusha
sahf
add
mov
into
stos
jmp
aas
and
lahf
xchg
lret
adc
adc
or
cs
xchg
sbb
dec
stos
adc
getsec
mov
cltd
sbb
pop
addr16
mov
imul
jmp
fdivr
aad
pop
adc
dec
and
xor
outsb
push
mov
push
cmpsl
call
jge
lcall
cld
mov
sarl
pop
ljmp
pop
inc
push
ficomps
inc
xor
push
or
cld
fwait
popa
lods
fsubrl
mov
push
lds
test
push
pop
insl
push
sbb
inc
test
push
xchg
cs
sbb
pop
scas
les
rcrb
jl
sbb
fisttps
sbb
adc
and
push
sub
mov
pop
loope
sarl
clc
adc
mov
add
frstor
outsl
std
lret
or
fsubl
sub
xor
push
xchg
lahf
jo
pop
push
xchg
cmpsb
pop
ss
jbe
ret
shlb
jg
mov
mov
mov
xor
sbb
pop
push
es
lock
jge
insl
js
xchg
push
inc
xor
add
lods
cld
mov
andb
mov
sbb
fidivrs
sbb
fistl
sub
ds
cld
mov
in
mov
cmp
lcall
outsl
sbb
jb
mov
inc
dec
fnsetpm(287
xor
inc
xchg
mov
or
xor
push
mov
adc
outsb
xchg
xchg
fildll
imul
pop
scas
push
ficoml
shl
aam
push
jle
idivl
mov
inc
stos
gs
cli
sbb
out
sbb
stos
shrl
repz
xchg
scas
xchg
and
pop
test
sbb
and
outsl
fsubr
mov
push
xchg
repnz
gs
aas
negl
inc
inc
mov
push
xor
add
add
cli
scas
fdivs
fcoms
inc
push
pop
xchg
test
enter
test
notl
adc
and
push
or
sahf
out
lods
cltd
lcall
scas
sbb
lock
sub
sub
bound
and
scas
sbb
divb
out
adc
fsubrs
push
lcall
fs
and
jno
or
loope
mov
fsubrs
insl
cmp
jne
cmp
add
cmp
or
add
add
or
ret
inc
mov
or
mov
int
je
mul
popa
test
lds
inc
mov
rclb
push
das
mov
jbe
or
or
pop
lods
add
sbb
adc
pop
cld
jp
ds
das
movsl
aas
sub
xchg
sub
decb
and
mov
push
adc
insb
mov
icebp
sbb
insb
mov
add
sub
jb
sub
cmp
or
cmp
jne
clc
add
mov
mov
and
jp
das
mov
xchg
mov
sbb
cmp
or
sub
pushf
ror
adc
sub
ljmp
divl
lods
adc
das
add
es
scas
and
xchg
cmp
dec
in
repz
inc
es
bts
cltd
add
sub
jg
arpl
outsb
fsubrp
in
incl
orl
dec
orb
xor
rclb
jb
mov
jne
aaa
sub
xchg
lcall
js
rcrl
rolb
aaa
sarb
cmp
mov
cltd
jb
pop
or
dec
aas
jno
or
mov
fidivrl
pop
or
inc
mov
sti
sbb
les
stos
leave
cmp
dec
mov
adc
pushf
mov
and
xchg
f2xm1
insl
mov
cmp
add
call
and
daa
pop
adc
test
cmp
or
dec
sub
pop
sahf
loop
movsb
push
rclb
dec
mov
scas
es
outsl
icebp
push
mov
cmpsb
fs
sub
push
xchg
push
xor
sbb
lods
flds
aad
pop
cmp
leave
icebp
inc
mov
pop
js
dec
lahf
pushf
inc
mov
lock
dec
mov
pop
pusha
movsl
push
dec
in
call
push
test
cmc
mov
sub
push
idivb
lds
dec
mov
xchg
jno
aaa
dec
fincstp
das
sbb
or
or
shll
sbb
cmp
sub
push
test
adcl
sub
rolb
push
xlat
js
sub
outsl
in
inc
sub
leave
repz
call
xor
popa
pop
es
leave
inc
aas
test
pop
arpl
into
pop
aad
cmpsl
outsl
cmp
les
nop
adc
jo
mov
popa
jne
push
call
adc
push
out
loop
add
rolb
mov
push
out
aad
cmp
mov
fisubl
ret
test
stos
or
xchg
fstpl
jle
add
mov
mov
adc
lods
xchg
loope
inc
dec
sub
cwtl
inc
push
mov
or
andl
xchg
mov
out
das
in
scas
lcall
dec
mov
loope
xor
cs
adc
pusha
mov
inc
push
sbb
out
adc
or
inc
jge
mov
cmp
cmpsl
repz
push
movsb
test
xchg
push
sub
fdiv
and
sbb
outsl
add
pop
and
xchg
pop
loopne
lret
fnsave
popf
adc
decl
xchg
hlt
push
nop
andb
fsubr
mov
sbb
sub
xchg
inc
push
ljmp
jmp
push
mov
les
jle
mov
fdivrl
jo
xchg
fxch
xor
and
hlt
dec
sbb
sahf
testl
popf
mov
ja
xor
fucomp
imul
ret
mov
mov
sub
iret
sbb
ret
adc
inc
cmp
fisubrl
fiaddl
stc
mov
and
aad
cmpsl
loopne
in
xor
cmp
jo
rcr
out
cs
jl
std
adc
mov
dec
jge
jns
repz
pop
iret
aad
daa
mov
xchg
or
or
add
dec
andl
frstpm(287
shlb
bound
and
std
sbb
les
push
sub
mov
pop
lcall
adc
or
inc
adc
dec
xchg
imul
mov
dec
ljmp
xchg
leave
dec
inc
insb
cld
xchg
cmp
push
std
in
push
je
in
cs
pushf
or
jb
mov
nop
hlt
negl
repnz
fisubl
scas
sbb
jno
or
cli
add
xor
dec
xchg
inc
test
dec
sub
mov
fwait
inc
mov
subb
in
jmp
mov
mov
lods
fcompl
fcmovnb
sahf
imul
xchg
cmc
xlat
das
push
lds
jp
movsl
jl
or
push
xor
negl
mov
adc
in
pop
push
or
aam
in
xor
setl
push
push
pop
pop
gs
pop
sbb
mov
testl
mov
rclb
mov
mov
ss
mov
mov
bound
jl
xchg
pop
mov
lcall
push
dec
mov
mov
mov
xchg
dec
std
mov
fdivl
les
movsb
daa
add
add
popa
ss
je
jle
xchg
pop
in
xchg
roll
jmp
mov
into
lock
pop
cmpl
scas
push
lcall
adc
icebp
in
rorb
pop
stos
into
fcmovnbe
cmp
fcmovbe
cmp
cmp
pop
in
lcall
stc
xchg
sti
fadd
ljmp
xchg
xchg
pop
sbb
div
cmp
ret
cs
and
leave
adc
inc
lret
mov
pop
mov
adc
cld
in
outsl
jnp
pop
jo
sub
cmpb
dec
mov
xor
repz
ja
sub
xchg
shlb
push
or
mov
fidivl
fsubl
push
inc
in
scas
and
cmpsb
cmp
pop
mov
ret
imul
pop
sbb
lods
xlat
outsb
flds
lret
test
outsb
push
xor
jl
insb
push
out
sbb
dec
cmc
push
mov
std
in
push
push
xlat
lods
test
ds
sub
xor
pusha
and
insl
pop
xor
mov
and
fimuls
stos
les
pushf
js
scas
pop
movsl
pop
cmp
add
outsb
sbb
mov
jge
aam
adc
mov
test
jne
push
push
test
in
aas
jg
xchg
les
push
jno
push
mov
push
dec
adc
adc
lahf
inc
xor
mov
xchg
inc
aad
inc
pop
cmp
ljmp
cli
inc
sahf
repz
sub
push
or
mov
jmp
adc
xchg
xchg
daa
or
jle
jb
in
adc
nop
arpl
insl
jg
pop
gs
cmp
pop
ljmp
mov
jae
imul
arpl
xor
lret
inc
pop
repz
bound
add
xor
lret
jle
cld
nop
xor
loop
mov
sub
mov
adc
jle
and
ljmp
pop
fldenv
rcll
aaa
inc
iret
fistl
jne
stos
xor
ror
pushf
movb
js
mov
outsl
cmp
popa
xchg
sahf
mov
or
loope
cmpsb
mov
push
jno
mov
xchg
cmpb
daa
xor
mov
mov
lahf
or
or
sbb
test
lahf
mov
cld
roll
add
ffree
add
lahf
lahf
fistpl
int
jno
push
test
cltd
hlt
aam
hlt
fld
and
cmova
cmp
push
stos
popf
mov
cltd
imul
arpl
mov
mov
mov
mov
and
mov
js
dec
mov
movb
ljmp
or
bnd
dec
push
sub
mov
pop
arpl
mov
push
mov
xor
cmpsl
push
add
adc
xchg
rcrb
mov
dec
shlb
dec
mov
pop
pop
orb
in
cld
rolb
add
inc
inc
jl
aad
xchg
ret
popa
retw
mov
aad
fldz
fs
mov
loopne
insl
insb
lea
xor
mov
dec
insb
add
jno
nop
jp
dec
cmp
or
fcmovb
jp
repz
movsl
faddp
jo
jns
mov
sbb
into
xchg
push
dec
cmp
ss
stos
sbb
in
repnz
and
push
imul
fs
xchg
pop
sbb
sub
jg
xor
daa
jne
mov
sbb
dec
ja
lods
out
dec
mov
mov
aad
cmp
mov
pop
jecxz
dec
or
adc
mov
jns
movsl
xchg
inc
push
push
std
dec
out
aam
scas
rorl
or
inc
sbb
hlt
add
adc
or
xor
movl
ss
cmp
sbb
repz
mov
pop
insl
aad
push
mov
and
cli
fucom
or
mov
xor
mov
lds
mov
push
and
loopne
sub
jmp
call
in
loope
jecxz
mov
mov
xchg
adc
subl
aas
clc
jge
out
mov
das
sub
cli
mov
in
loopne
sub
push
xchg
sub
inc
fidivs
adc
ret
xor
jb
add
cmp
in
arpl
nop
pop
inc
mov
xchg
in
or
mov
cwtl
icebp
idivl
icebp
jo
pushf
lret
lock
and
lahf
or
lret
bound
dec
sbb
rolb
jae
xor
pop
or
jae
movsb
fistps
pop
cmp
jle
push
rorl
sub
aam
xchg
or
daa
jge
movsl
scas
inc
xor
mov
sbb
sti
mov
pop
adc
jg
mov
dec
orb
loopne
repz
sbb
sar
repz
mov
addl
xlat
adc
xchg
add
mov
shl
jb
mov
outsb
mov
aam
roll
dec
pop
sbb
ss
jmp
lret
jbe
in
cmp
mov
mov
inc
loope
push
jecxz
insl
test
inc
sub
test
sub
lret
xchg
mov
cltd
cmpsl
jae
addb
adc
sahf
fcomps
mov
lods
mov
shll
rorl
js
jge
push
cltd
inc
push
dec
test
lahf
lcall
adc
mov
std
loope
fisubrs
inc
scas
test
daa
out
dec
lahf
dec
xchg
adc
test
mov
jp
popf
into
in
add
verr
bound
mov
mull
jmp
inc
lcall
outsb
or
jmp
iret
push
mov
cmc
cmp
jne
popf
mov
dec
or
inc
xor
push
or
pop
push
xor
das
sti
jmp
in
xor
mov
sbb
int
dec
cwtl
add
popf
jge
add
xchg
jg
mov
add
inc
fisubs
inc
jl
adc
fisubrl
push
call
loop
or
imul
out
fsubrl
lahf
or
cmpb
mov
testl
adc
fwait
xchg
push
pop
push
lret
loop
ja
rcrl
loope
and
test
add
shl
jne
sti
mov
push
sahf
test
loopne
test
fsubrl
call
dec
push
jno
xchg
outsb
movl
mov
push
and
outsb
push
stos
add
dec
add
fwait
pop
lods
and
jbe
inc
lret
or
push
insb
push
xchg
pusha
ja
aam
jo
out
dec
in
jnp
and
xchg
ja
push
cmpsb
inc
dec
aas
in
adc
imull
fnstsw
stos
fadd
push
dec
clc
int3
pop
orb
xchg
sarb
fwait
jne
inc
sbb
sbb
push
push
daa
inc
fstl
dec
pop
push
out
xor
xchg
push
in
adc
std
sub
jp
jmp
popf
pop
xchg
xor
pop
jbe
test
call
stc
shl
out
call
xchg
sub
les
jns
out
scas
ja
pop
push
and
mov
push
stos
bound
jno
jb
ret
sbb
cmpl
imul
lds
push
cmpsb
cmp
fimuls
xchg
cmp
stos
inc
add
and
jle
inc
shrb
adc
push
mov
std
imul
nop
jno
and
adc
hlt
or
ss
sbb
push
data16
or
or
cs
hlt
sub
daa
cmpsw
fdivl
sub
mov
rcr
nop
cmpsl
inc
xchg
aas
jp
adc
xor
mov
fwait
push
aaa
and
adc
pop
push
test
mov
test
ja
mov
jmp
inc
cli
mov
mov
mov
clc
dec
js
sub
test
sti
test
sub
sub
add
xchg
mov
loopne
xchg
mov
xchg
jbe
hlt
pop
loopne
jne
mov
xor
pusha
lods
cld
lret
mov
mov
mov
sub
lods
push
push
mov
adc
jge
inc
cmp
call
jl
push
outsb
aaa
lret
and
cmpsl
aas
add
mulb
dec
add
adcl
mov
dec
mov
jp
jle
dec
or
mov
sbb
inc
dec
lret
push
leave
cmc
shll
add
or
adc
ds
hlt
add
jns
push
jbe
movsb
mov
stos
scas
mov
lods
pop
xor
pop
and
mov
scas
xchg
cltd
mov
push
adc
int
roll
loope
or
sub
shl
shlb
in
lret
mov
xchg
gs
sub
daa
mov
in
add
push
sub
popa
dec
mov
mov
push
or
sbbb
mov
inc
shlb
add
ljmp
push
adc
popf
adc
in
pop
outsb
dec
or
mov
iret
mov
stc
fcmovb
loopne
stos
mov
sbb
outsb
or
cmp
jnp
sub
xchg
out
jmp
fdivl
pop
hlt
sbb
rol
dec
pop
out
movsl
popa
mov
ret
mov
in
push
xor
push
dec
fldenv
lods
push
mov
mov
add
mov
push
aam
and
push
push
cmp
jmp
mov
cmp
or
pop
lahf
imul
add
cmp
mov
test
lret
addr16
std
loop
or
sub
hlt
push
mov
clc
xchg
andl
in
push
in
outsb
xchg
jge
fwait
inc
cmp
push
or
in
pushf
pusha
jge
jecxz
insb
push
and
push
jne
addb
add
imul
inc
pop
rcrb
push
pusha
lods
xchg
push
fistpll
shr
aam
add
imul
or
pop
faddp
fists
sub
or
fcompl
sbb
or
pop
int
jnp
les
stc
daa
out
pop
dec
or
scas
pop
cmp
pop
fmuls
fisubrs
jecxz
cmpsb
nop
lret
sbb
cmp
fidivs
aad
xor
sbb
mov
cmp
pop
mov
mov
rcrb
aam
mov
push
xor
cmp
xchg
movsb
jl
mov
or
jo
pop
mov
gs
xchg
hlt
imul
pop
rcl
adc
orb
movsl
daa
adc
mov
sub
or
or
fstl
inc
cmp
mov
inc
syscall
jmp
pusha
or
lods
popf
ja
push
andb
sbb
push
out
jns
xchg
js
rolb
push
fs
stc
pop
in
es
aaa
outsl
xor
popf
xor
iret
stc
jo
or
outsb
fstps
jne
out
arpl
divl
mov
xchg
push
mov
mov
and
jnp
ficoms
cmp
adc
jo
je
and
xor
mov
dec
mov
mov
cmp
or
cli
js
icebp
sbb
pusha
mov
add
ds
into
mov
shl
or
mov
adc
cmp
daa
adc
inc
les
adc
pop
and
mov
test
push
xor
sub
xchg
loope
aas
xlat
mov
lcall
and
fwait
outsl
adc
lea
xchg
and
mov
push
jno
dec
inc
sbbl
mov
ss
adc
add
xchg
repnz
fisubs
and
jno
dec
inc
and
and
inc
or
andl
lcall
pop
pop
xlat
and
mov
jecxz
mov
jae
insl
dec
ret
or
repz
inc
sub
fmull
mov
in
dec
dec
fstpt
inc
insb
lret
inc
out
fisubl
dec
xor
add
orb
sbb
seta
jo
outsl
cmp
inc
pop
jp
ret
and
inc
fs
pushf
cmp
mov
lahf
lods
mov
push
jnp
rclb
arpl
cmp
sbb
test
pop
adc
dec
stos
mov
jge
push
cmp
out
clc
shrb
leave
push
xchg
mov
sbb
sti
pop
xor
sbb
mov
and
std
hlt
push
addb
lcall
cmp
sahf
loop
shlb
out
mov
repz
push
lret
call
or
negb
push
addl
fadd
jmp
gs
sub
out
xor
and
jae
xchg
xchg
jp
hlt
jno
xchg
notl
inc
ja
in
cmpsl
stc
fadds
sbb
adc
add
adc
adc
lcall
cmpsb
shrl
jne
mov
rclb
bound
popa
jno
aam
mov
add
adc
data16
jno
pop
push
inc
lahf
clc
push
pop
mov
jecxz
js
pop
jne
jnp
jo
push
or
mov
mov
push
jno
fcmovb
add
adc
int3
push
or
or
bound
adc
mov
xchg
std
aad
ffree
xor
insb
mov
aam
adc
insl
jecxz
mov
sbb
cltd
xchg
ret
and
cmp
addr16
xchg
inc
icebp
repz
pop
mov
popf
pop
dec
jns
lahf
mov
jns
ss
mov
xor
ret
in
icebp
pop
dec
mov
mov
xchg
sub
xchg
and
push
roll
push
aas
imul
mov
mov
dec
shl
push
jecxz
xor
scas
dec
mov
xor
loopne
lods
movsb
mov
fld
sub
xchg
jle
push
das
ret
push
cli
repnz
mov
popa
inc
xchg
mov
inc
mov
enter
pop
add
enter
fldcw
hlt
push
pop
cmp
outsb
mov
push
mov
sbb
fwait
mov
es
lret
or
sbb
xor
jbe
mov
sbb
add
xchg
jecxz
test
cli
add
fidivrs
push
pop
bound
jb
jae
mov
jb
lahf
dec
int3
fs
popf
subb
gs
fsts
cmp
cmpsb
jle
jnp
negb
mov
shlb
sub
call
pop
mov
imul
jnp
add
inc
xorb
leave
jb
shlb
test
or
adc
mov
jmp
push
mov
mov
pop
pop
lds
in
push
xlat
and
stc
xchg
loop
gs
sub
cltd
sub
in
push
or
pop
sti
jp
scas
mov
xchg
icebp
dec
sub
pop
insb
andb
xchg
push
mov
cmp
scas
and
jae
aaa
xor
sahf
clc
lods
sbb
cmp
cmp
imul
clc
sbbl
stos
rolb
stos
sub
lock
sbb
adc
aaa
cmp
cmp
loop
ss
leave
lock
lea
es
pop
stc
sub
inc
fsts
and
aaa
cmp
xchg
mov
adc
lret
in
jg
popf
loop
jnp
ljmp
push
sbb
push
mov
xchg
addr16
outsl
dec
inc
hlt
insl
and
adc
pusha
inc
cmp
push
hlt
rcrl
and
jns
cmp
scas
sub
inc
lret
mov
ret
dec
mov
cmp
aam
or
out
stos
mov
das
loope
and
out
in
ljmp
call
pop
imulb
and
pop
scas
adc
loop
mov
sbb
pop
pop
js
sbb
ret
and
push
fnsave
ret
cmp
inc
pop
mov
push
and
sub
or
mov
js
dec
or
dec
mov
orl
sub
adc
xchg
shlb
pushf
leave
dec
in
shlb
imul
inc
cmpb
imul
into
sub
insl
fs
pop
jns
cmp
sbb
jbe
pop
rcrl
pop
inc
push
xchg
add
lds
ja
mov
in
mov
mov
cmp
fmulp
jae
es
cmp
out
mulb
push
lock
lods
mov
in
leave
or
mov
jp
cwtl
adc
pmaxub
lods
pusha
and
notb
or
iret
lods
sbb
or
xchg
stos
or
lcall
xchg
bound
mov
and
ja
orb
cmp
test
xchg
cmp
out
clc
cwtl
push
jns
adcl
vmaskmovdqu
leave
testl
mov
cli
add
std
cltd
ret
mov
mov
add
leave
push
mov
pop
xor
or
ljmp
pop
sti
sahf
cmp
sti
xlat
sub
push
or
pop
lcall
lret
cwtl
push
and
bound
xchg
outsb
push
jg
pop
sbb
addr16
int
fdivrl
adc
cld
out
sarb
xor
push
cmp
mulb
and
packssdw
js
stos
sbb
data16
insb
shrl
ds
xor
mov
imul
lea
mov
mov
cmpsl
ja
dec
data16
int3
lock
sahf
sbb
lock
cmp
xor
aas
scas
fwait
insb
mov
pop
add
mov
mov
inc
jbe
jne
jnp
stc
jnp
push
popf
icebp
int
jne
pusha
scas
sub
test
push
movsl
outsl
xchg
sub
in
pop
inc
imul
lods
inc
into
std
jbe
sub
hlt
pop
loop
out
les
call
mov
jecxz
stos
add
call
out
xor
or
mov
pop
mov
lods
add
cld
stc
xor
push
mov
in
je
ret
clc
pop
mov
add
popa
insb
xchg
add
sti
or
imul
mov
mov
add
dec
xor
xor
sarl
pop
cmp
pop
aas
inc
mov
inc
jbe
sbb
fld
testb
cmpsl
into
ds
xor
pop
adcl
sbb
sbb
dec
inc
pop
xchg
imul
dec
cmp
ljmp
loope
jp
ret
pop
icebp
mov
xchg
push
push
adc
inc
in
aas
pop
popa
mov
mov
sbb
loope
cmpsl
test
and
aas
pop
jo
inc
mov
or
lahf
pop
lds
mov
jnp
dec
xchg
sbbl
lock
mov
sbbb
shlb
scas
mov
sbb
js
out
loop
sub
shr
ljmp
pop
or
aad
xor
ret
fcomps
andb
testb
and
push
lea
jmp
rol
rclb
inc
mov
push
sub
roll
pop
popf
gs
fisubs
inc
inc
cmpxchg
imul
adc
pop
icebp
sbb
fisubrs
jmp
sub
nop
inc
insl
loopne
insb
insl
call
jnp
push
or
sbb
in
into
fwait
jae
push
jnp
push
dec
adc
popa
jbe
jmp
testb
mull
mov
out
mov
scas
sbb
call
inc
scas
adc
xchg
movsb
aas
lret
outsb
or
cwtl
scas
in
shlb
mov
enter
insb
mov
js
mov
xchg
punpckhbw
es
sub
push
adc
adcl
mov
pusha
loopne,pt
shrb
mov
push
test
push
sbb
int3
sub
icebp
push
jp
pop
mov
dec
add
lock
ds
hlt
jle
andb
testl
pop
cmp
push
rorb
jp
cmpsl
sub
sub
mov
mov
popa
lret
adc
addl
push
sbb
loop
sbb
inc
push
lods
jns
dec
or
pop
jbe
leave
jmp
sub
outsb
sub
das
sbb
mov
insl
sbb
xor
sbb
flds
cmc
aas
xchg
cmp
mov
or
mov
jmp
sub
dec
or
dec
arpl
repz
pop
pop
neg
fadd
lea
mov
out
xor
aad
jp
mov
sbb
test
test
sub
je
jp
inc
dec
dec
mov
sbb
jmp
cmp
gs
jg
dec
ja
pop
push
jne
sbb
clc
xchg
push
cmp
fbstp
and
sahf
cwtl
pop
bound
dec
sub
push
bnd
mov
dec
scas
shr
repnz
adc
dec
leave
sub
in
sub
push
cmpsl
lcall
or
stos
and
mov
mov
stos
pop
xor
adc
test
or
adc
pop
xchg
and
mov
testb
lea
mov
test
in
xor
sarb
sarl
mov
sub
cltd
inc
push
dec
cmp
push
into
cmp
pop
lock
lods
dec
jnp
cmp
jecxz
pop
jb
daa
xchg
mov
shrb
sub
cmp
or
sub
dec
aam
mov
xor
inc
adc
pop
xchg
push
mov
popa
sar
call
add
mov
or
shl
in
maskmovq
push
xor
jg
and
ja
cli
imul
inc
insb
jp
lock
sbb
fndisi(8087
js
rclb
popf
or
or
push
std
das
dec
rolb
mov
repz
push
sub
jecxz
ljmp
adc
push
popl
repz
or
pop
adc
mov
cli
repnz
push
idivb
xor
out
jbe
cmpl
test
push
pop
add
pop
insb
sbb
and
out
sbb
push
or
mov
mov
movsb
jns
inc
inc
dec
ret
dec
or
pop
jno
mov
xor
cwtl
add
dec
pop
push
jecxz
es
std
jle
stos
add
xor
clc
or
in
pop
cmp
out
dec
gs
or
dec
in
sbb
add
arpl
or
movb
and
xchg
xor
pop
ret
xchg
out
outsl
dec
sub
cltd
loopne
imul
divl
in
test
jne
cltd
stc
les
sbb
xor
call
and
clc
adc
sbb
jecxz
sub
fsubl
dec
xchg
push
ret
lods
pop
rorb
lret
call
push
sbb
rolb
leave
cmp
popf
fcomps
movsl
test
popa
mov
sub
cmc
mov
adcb
repz
jne
inc
cmp
jmp
lea
ljmp
test
lea
int3
add
mov
mov
xchg
xlat
xchg
jle
rep
mov
add
mov
pop
and
ret
pop
jne
sub
cld
lret
les
xchg
dec
inc
jle
scas
mov
jns
aas
inc
xor
jmp
scas
inc
xor
or
sub
xchg
outsb
sbb
out
sbb
mov
dec
xor
enter
les
aaa
xchg
fwait
mov
adc
cmpsb
loopne
cmpsl
and
dec
hlt
addl
outsl
cmc
mov
and
pop
pop
cmp
adc
jo
aad
dec
jecxz
scas
sub
push
jp
loop
leave
mov
pop
mov
mov
sub
hlt
cmp
cmp
pusha
les
xchg
pop
mov
pop
cld
jae
push
lods
mov
mov
roll
pop
rclb
cmc
pop
xor
xchg
mov
in
jne
scas
sub
sti
mov
xchg
in
dec
insb
add
scas
push
cmpb
adc
dec
push
das
notb
andb
cwtl
dec
cs
sub
fisubs
sbb
and
dec
and
push
mov
stc
cld
cmp
das
insl
mov
test
lods
pop
mov
shrl
stc
cld
std
xchg
jl
adcb
fwait
stc
or
sbb
in
jb
push
insl
popa
imulb
les
or
fidivl
xchg
hlt
sahf
xchg
push
push
dec
cmp
out
ss
sbb
add
loope
add
add
stc
cmp
xchg
pop
xor
jb
and
sub
inc
in
js
into
sbb
adc
ficomps
je
pop
xlat
cmp
cs
jbe
pop
mov
sahf
mov
dec
push
testl
sbb
jo
mov
xchg
cmp
pop
pop
fsubr
repnz
adc
or
mov
sub
push
dec
cmp
inc
clc
inc
leave
pop
lahf
gs
sub
add
iret
mov
sub
push
pusha
test
pop
xchg
fdiv
out
push
add
inc
fwait
fwait
add
pop
sbbl
mov
xchg
fnstcw
sarb
xchg
mov
mov
sub
or
scas
jno
fadd
in
cmp
xor
adc
pop
fsubrs
cmp
lods
jle,pt
loopne
movsb
mov
and
push
cli
add
sub
fwait
jl
pop
inc
leave
clc
xor
push
ljmp
mov
or
fsubrs
das
and
in
pop
add
inc
and
push
popa
movsb
int3
lret
cli
fidivs
cltd
not
mov
ret
pop
cmp
movsb
adc
repz
xor
dec
repz
in
push
ss
popl
arpl
and
into
std
sbb
mov
cmpsl
stos
je
je
pop
xor
enter
lahf
ret
cwtl
in
rcrl
enter
subl
xor
in
int
jbe
je
testb
sbb
cld
or
in
cmp
cmp
sarl
into
jp
cwtl
mov
fcmovb
pop
mov
xchg
and
les
pop
inc
push
inc
adcb
ljmp
lret
cmp
mov
push
pop
add
rcl
mov
clc
mov
test
mov
inc
xchg
mov
rolb
or
int
pop
stos
in
pop
or
ds
inc
sub
and
fidivs
adc
xor
movups
mov
add
mov
xor
jnp
movsb
xchg
xor
inc
cli
or
or
enter
sarb
mov
dec
mov
ja
or
movsb
in
add
push
cltd
pop
lea
sub
out
xor
std
fnstenv
mov
or
out
jge
push
clc
mov
xor
test
dec
test
dec
sti
repnz
sahf
sub
test
xlat
and
dec
notb
inc
or
push
loope
lret
mov
mov
leave
pop
test
dec
shlb
scas
shll
sub
loopne
imul
jo
or
mov
push
incl
jnp
inc
jb
xchg
mov
xchg
cwtl
aas
inc
or
pop
scas
inc
sub
pop
cwtl
sub
mov
aaa
cmpb
std
inc
stos
xrelease
push
out
mov
lods
xchg
aas
idivl
jo
jae
xor
icebp
test
mul
fs
dec
xchg
mov
cmc
adc
int3
mov
adc
sub
imull
sub
xor
aad
icebp
stos
test
rdtsc
jmp
frstors
adc
in
pop
mov
es
adcl
shrb
or
cli
dec
cmp
aam
dec
pop
xlat
dec
jp
fstpl
aaa
in
mov
popf
inc
push
inc
mov
sbb
bound
loop
ljmp
in
mov
in
aam
aam
adc
mov
jne
xchg
es
jnp
inc
xchg
lods
loop
sbb
push
sbb
stc
push
adc
push
and
cmp
inc
sub
out
pop
test
push
ja
jge
push
lret
push
jge
dec
lods
ds
subl
mov
and
adc
add
cli
push
imul
cmp
sbbl
shr
mov
aad
cwtd
out
mov
sbb
sub
pop
xor
out
out
sub
push
mov
cli
lods
mov
mov
cld
lock
nop
cmp
sub
fsubrs
pop
cmp
sub
dec
aas
test
mov
loop
or
pop
scas
test
stos
shrb
inc
jp
fildl
push
adc
push
push
roll
hlt
mov
push
or
loope
into
out
mov
pop
inc
fisttps
pushf
pop
mov
inc
into
shrb
fildll
cmp
sub
sub
dec
or
push
sub
mov
out
bnd
mov
mov
ret
lods
adc
pop
xchg
dec
lods
push
imul
xor
sti
push
jg
lahf
hlt
push
icebp
cmp
inc
jae
and
cmp
mov
jae
ja
pusha
sbb
pop
test
shll
sub
push
inc
push
insb
pop
adc
setl
rcr
xchg
hlt
or
mov
daa
push
adc
jbe
mov
pop
jg
aam
test
fwait
pop
aad
ror
stos
lock
mov
add
push
lret
sub
jo
lods
cmc
pop
insb
xchg
or
je
jp
test
cmp
add
lret
cmp
scas
add
push
adc
mov
imul
fstpl
fs
lods
or
imul
ja
out
cmp
iret
mov
js
repnz
xchg
ret
or
mov
stos
jne
mov
xor
fdivs
add
out
daa
inc
test
adc
pop
mov
out
into
dec
shl
mov
out
testb
and
arpl
pop
add
ja
mov
mov
inc
rclb
jl
das
in
dec
xor
mov
push
stc
pop
pop
icebp
movsl
aad
in
push
stc
cmpsl
sbb
mov
mov
ds
sbb
call
xchg
sub
insb
sbb
add
mov
sbb
test
or
addr16
dec
jnp
cmpsl
add
mov
leave
aas
orb
cmpsb
adc
sbb
mov
xor
push
out
push
xor
add
mov
pop
out
in
out
adc
imul
adc
inc
jecxz
hlt
cli
jns
lahf
jecxz
test
or
loopne
lods
mov
add
pushf
outsb
mov
movsl
adc
sarb
mov
jp
xchg
daa
mov
outsl
jbe
aaa
loopne
and
xor
and
dec
mov
push
xchg
mov
inc
les
dec
int3
push
ljmp
inc
ret
rcl
insb
and
popf
push
xlat
in
cmp
sbb
enter
add
push
jae
icebp
adc
call
xchg
test
and
xchg
jmp
repnz
int
fstps
mov
orb
std
sub
mov
insb
out
mov
xor
cmc
in
daa
inc
popa
pop
cmpsb
and
mov
loop
cld
and
repnz
jecxz
mov
repz
mov
xchg
pop
test
cmpsl
jmp
mov
imul
in
mov
xchg
jno
or
negl
mov
insl
adc
xchg
inc
push
xor
out
xchg
mov
inc
fildl
sbb
stos
outsl
outsl
movsl
scas
pop
dec
pop
lods
xchg
mov
adc
sbb
out
out
jge
mov
repz
cltd
sub
hlt
flds
call
mov
out
test
adc
jns
movsb
adc
dec
jle
cmpsb
mov
dec
test
fildll
and
inc
mov
insb
jecxz
mov
mov
push
je
stos
mov
aaa
push
out
icebp
lahf
div
ljmp
dec
lret
test
mov
mov
mov
lahf
adc
mov
imul
adc
cli
sub
adc
in
or
pop
cmp
imul
inc
orb
adc
imul
dec
push
adc
mov
out
addr16
outsl
ljmp
mov
adc
xlat
sbb
lret
cmp
sub
cmp
bound
enter
loopne
xchg
add
cltd
sbb
xchg
arpl
adc
loop
cmp
mov
xchg
ffree
pop
lea
out
arpl
push
div
lods
shll
push
jle
mov
xchg
mov
ret
xor
push
adc
cmp
lods
dec
rorl
fistps
dec
stos
adc
pushf
jg
inc
sub
adc
cli
dec
insb
mov
ljmp
out
insl
sub
shl
jmp
inc
leave
jge
ret
pop
mov
xchg
inc
ret
add
addb
lcall
mov
add
xor
mov
add
adc
push
mov
insb
mov
lea
push
scas
xchg
mov
int3
dec
int3
mov
fidivs
mov
cld
jecxz
xchg
es
enter
jle
sbb
addr16
aad
iret
add
ja
mov
fstpt
mov
adc
lret
push
jle
aaa
bnd
rcr
into
fwait
add
scas
enter
add
push
or
gs
push
mov
dec
and
pop
push
lea
shlb
aas
xor
sti
sbb
xlat
mov
stos
sar
inc
sub
or
imul
jecxz
fcomp
dec
in
xchg
push
xor
out
subl
adc
mov
int3
adc
push
cld
leave
into
and
push
and
cmp
inc
mov
outsl
add
movsl
loopne
aam
call
mov
daa
add
aaa
mov
sbb
int3
push
adc
inc
imul
or
xor
stos
xchg
loopne
popf
xchg
loop
div
jle
mov
loopne
push
xchg
or
sbb
and
push
push
or
pushf
and
sti
jge
push
xor
stc
inc
mov
outsb
sti
sub
sti
push
inc
ljmp
sbb
inc
std
xchg
jns
xchg
sbb
iret
pop
lds
push
jmp
imul
ficompl
rolb
add
cmp
ret
stos
mov
lret
test
arpl
in
dec
test
in
dec
dec
outsb
push
loope
nop
loopne
in
dec
flds
hlt
add
es
mov
jae
stc
sar
jg
call
daa
leave
in
mov
pop
adc
push
add
or
add
into
fsubl
or
and
adc
mov
mov
sarl
dec
in
rcrb
mov
stc
sbb
pop
jecxz
adc
les
cs
mov
xor
push
into
loop
pop
push
call
mov
insl
mov
jno
dec
mov
pavgw
popf
gs
pop
das
mov
fnsave
push
lret
jge
sub
stos
xlat
push
jae
inc
fsub
xor
les
jne
dec
jno
inc
dec
int
and
xchg
cmp
fwait
rcrb
sub
pop
shlb
movsb
xlat
or
orl
fndisi(8087
xchg
das
lds
rorb
add
aaa
adc
dec
sbb
in
test
cmpsb
insl
movsl
rcll
loop
cli
adc
push
dec
or
sbb
dec
ret
jmp
jb
les
daa
out
shlb
nop
pushf
mov
mov
cs
std
xchg
jbe
sbb
lret
popf
push
adc
cltd
or
add
mov
xor
ja
repz
xchg
insl
inc
mov
int
stc
sub
dec
outsl
or
enter
gs
mov
xor
enter
and
imul
ja
stc
hlt
hlt
in
int3
push
pop
pop
out
cmp
aam
sub
addr16
int
test
adc
mov
ds
loope
or
mov
mov
nop
xorb
mov
addr16
lahf
imul
cmpsb
dec
jnp
inc
jbe
pop
popa
and
sbb
xlat
lds
add
addr16
xchg
mov
in
push
cltd
pop
xor
jle
inc
test
xor
pop
dec
push
mov
adc
fisubrl
out
jecxz
lea
ljmp
adc
push
or
leave
xlat
xor
sbb
daa
add
mov
mov
sti
mov
jmp
int3
ljmp
cmp
inc
fmull
ja
out
nop
daa
add
jecxz
dec
mov
push
sub
leave
rorl
loop
and
lds
aas
aam
sbb
mov
nop
mov
repz
adc
add
popa
and
ret
shll
shlb
or
cmc
lds
pop
inc
arpl
daa
fiaddl
out
adc
shl
jb
dec
sub
rcr
xor
cmp
movsb
or
sbb
aam
insb
add
dec
mov
ret
inc
aaa
cmp
fisttpl
andl
ljmp
add
or
xor
xor
xlat
mov
mov
jp
popa
dec
jmp
int
add
mov
scas
insl
adc
mov
inc
dec
mov
push
xchg
mov
dec
lret
jl
jl
cmpsb
mov
mov
dec
push
inc
sub
adc
test
imul
inc
inc
loope
sbb
stos
jno
xor
fnstenv
scas
sub
test
fcmovnu
scas
xor
or
or
add
insl
leave
mov
scas
clc
shl
or
xor
mov
xchg
push
aam
fidivl
rolb
iret
jecxz
loop
cld
mov
imul
pop
into
outsb
call
inc
push
int3
idivl
mov
int
insb
cmpsb
push
ds
je
inc
cli
in
lret
stc
or
je
hlt
mov
mov
jnp
mov
xchg
loopne
mov
out
xchg
addb
test
add
js
push
addr16
int
jmp
into
call
std
push
into
pop
cs
push
imul
int3
inc
sahf
add
add
dec
or
fisubrl
adc
lea
icebp
frstor
sar
fdivl
aad
mov
lods
lret
fidivs
jmp
adcb
sub
dec
inc
dec
push
outsl
aam
push
push
mov
pop
jb
outsb
dec
gs
push
sbb
in
or
xlat
and
push
js
pop
or
cli
pop
out
daa
pop
cs
pop
out
xchg
lods
inc
and
cmp
lret
sahf
imul
fs
leave
xor
cld
sti
jno
and
mov
mov
jp
or
mov
or
or
xor
fwait
roll
mov
dec
cmp
jp
push
das
inc
xor
aas
fidivs
xchg
pushf
xor
outsl
or
cmp
sub
xor
add
push
lea
jg
push
fmulp
test
ret
je
sbb
and
inc
and
sti
add
fiaddl
lods
xor
lret
push
repz
cmc
int
and
sub
pop
in
sbb
push
inc
cmp
mov
mov
xchg
les
add
jo
cmp
hlt
lret
loope
ficomps
out
outsb
aad
push
icebp
jnp
stos
sarb
pop
repz
inc
cld
clc
xor
sbb
sbb
pop
xor
bound
popa
andl
dec
ljmp
mov
faddl
xchg
imul
mov
in
mov
add
shll
add
inc
das
mov
dec
ficompl
add
fucomi
push
pusha
jecxz
dec
sbb
and
push
fiadds
or
jno
aad
notl
fldt
call
pop
stos
jbe
stos
nop
lea
adc
adc
addr16
fadds
stos
inc
sub
popa
sub
xor
xor
mov
push
adc
jnp
sub
je
or
jne
sarl
insl
xchg
xchg
pop
ja
mov
push
push
sti
push
int
cmp
and
dec
pop
jae
lcall
ja
lret
dec
push
mov
int
lret
add
cld
push
ds
lods
shl
sub
out
adc
jb
pop
inc
pop
cs
and
add
cmp
outsb
adc
xchg
or
jb
aas
notl
cmp
sub
in
add
pop
test
loopne
in
pop
inc
xchg
scas
testb
icebp
les
and
push
ret
in
mov
and
scas
sarb
inc
jbe
pop
movl
dec
jmp
inc
rcr
dec
in
adc
jle
fstpl
fidivl
arpl
or
iret
fistpll
jns
jmp
cmp
jns
test
mov
jnp
cwtl
std
jnp
xchg
pusha
sub
loop
sub
in
fcompl
mov
ret
leave
fsts
sbb
cltd
sbb
add
mov
ret
insl
sti
inc
movsb
iret
pusha
dec
jmp
dec
popa
lock
jns
xrelease
int3
sarb
push
test
aad
mov
mov
rclb
cmpsb
mov
mov
dec
into
xchg
adc
mov
jecxz
js
mov
jae
nop
sub
dec
and
repz
sub
push
jno
ss
insb
cmp
cmc
fistpll
sbb
push
pop
push
cmpl
push
das
pushf
jo
lahf
dec
popa
in
fwait
jne
mov
jecxz
pop
and
subb
shll
pop
cltd
jmp
out
sbb
cmp
adc
lret
addb
dec
aas
push
fcomps
sahf
jno
and
call
enter
rcrb
scas
test
jmp
mov
jecxz
dec
es
mov
repz
mov
and
aas
inc
jmp
pop
fldcw
scas
pop
mov
dec
outsb
sti
repnz
adc
ljmp
int
sbb
call
xor
popf
dec
das
add
and
icebp
stos
inc
adc
loopne
aam
jge
xlat
dec
xorl
cmp
mov
aas
jno
es
cmp
pop
andps
add
lods
outsb
lds
add
and
pop
mov
sub
test
in
mov
ret
cs
adcl
jb
mov
sub
into
stc
cmp
cwtl
mov
hlt
test
mov
sub
jb
or
jns
ljmp
mov
sub
inc
cli
pop
inc
adc
idivb
jle
movsl
lock
xlat
cmp
dec
std
mulb
jmp
inc
or
repz
jge
pop
nop
add
jne
imul
addr16
fisttps
scas
cli
fnclex
lods
adc
or
pop
cld
cmpb
dec
or
decl
adc
test
add
cmp
roll
xchg
gs
mov
sub
jmp
cmp
in
and
or
mov
pop
leave
or
movsb
cmpb
je
xor
test
cmpsb
pop
inc
rorb
sbb
stos
lods
sar
mov
je
mov
cmp
imul
or
pop
sub
sub
das
cmp
mov
lods
mov
xorl
aaa
add
stos
pop
dec
lret
push
cmpsl
or
mov
pop
loopne
je
or
push
loop
test
mov
add
sub
mov
cli
cmp
insb
mov
stos
pop
fisttpl
adc
test
popf
aas
aam
pop
xchg
repnz
jnp
test
out
mov
int
push
adc
bound
aaa
loope
inc
sbb
or
and
loope
push
mov
movsl
int
lea
add
mov
and
jbe
xchg
mov
xchg
into
popf
push
pop
test
aam
aam
inc
and
out
fnstsw
mov
lahf
jmp
dec
pop
stos
jnp,pt
gs
aaa
aam
nop
add
and
in
and
adc
push
add
popf
mov
shrl
icebp
test
movsl
pusha
push
jns
add
loope
fcompp
push
add
jmp
push
adc
out
pop
gs
fldcw
xchg
out
test
outsb
xchg
and
push
and
lret
sti
xchg
inc
sysexit
popf
filds
bnd
add
aam
dec
cmp
adc
fs
es
push
xor
xlat
mov
mov
fwait
mov
push
loope
pop
mov
js
sub
ss
xchg
popf
xchg
push
sbb
adc
sahf
inc
xor
sarb
in
lcall
into
divb
push
loopne
cmp
pusha
stc
and
in
pop
push
mov
mov
pop
mov
xchg
sub
and
lahf
cmp
pop
roll
sub
pop
sub
or
xchg
xchg
jle
or
pop
imul
sub
cld
add
call
or
sbb
jmp
cli
jg
sub
leave
add
adc
pop
loopne
jnp
js
aam
mov
mov
into
jge
ds
jne
fistpll
mov
jp
cmp
and
fdiv
movb
ljmp
imul
and
mov
jns
rcrl
out
fisubl
sahf
rolb
jmp
add
xchg
popa
dec
popf
call
xchg
sbb
in
stos
sbb
cmp
cmp
push
addr16
sarl
out
addb
push
fistpl
sbb
adc
or
dec
mov
push
bound
loop
pop
stc
sub
jle
fwait
jo
aam
shrb
in
scas
mov
stc
ret
add
imul
mov
xor
out
push
ljmp
and
mov
and
jno
cmp
test
fmul
loop
pop
jns
lss
ja
int3
jmp
jg
mov
ret
jno
dec
int3
add
adc
jbe
ss
or
jb
pop
mov
scas
fcomip
add
sub
push
jns
ret
push
bound
sbb
sbb
mov
jg
stos
cmp
mov
lret
mov
fmull
inc
clc
xor
iret
sub
outsb
cli
pop
jmp
enter
cld
jae
xchg
sub
push
mov
pop
add
shrl
mov
ds
lea
xchg
or
out
fwait
loop
jns
rcrl
xchg
pop
jg
insb
cld
movsb
test
fiaddl
or
dec
ja
jmp
mov
out
and
mov
xor
ret
push
jmp
add
add
lds
les
in
and
pop
pop
pop
movsb
loop
pop
sbb
add
call
push
inc
lahf
hlt
inc
push
fsubl
pushf
add
inc
test
jbe
lret
xor
xor
call
mov
into
pop
adc
outsl
sbb
frstor
or
gs
ret
mov
jnp
addl
and
mov
or
add
in
and
xor
arpl
pop
add
xchg
outsb
mov
jp
xchg
fstps
negb
cmp
arpl
or
or
movsl
icebp
or
mov
adc
pushl
movsl
mov
hlt
fisubs
mov
jg
xor
scas
sbb
in
push
jns
leave
add
inc
enter
int
sbb
icebp
fldl
dec
in
jle
rolb
sahf
jmp
mov
mov
pop
mov
cs
xor
ljmp
pop
cmp
jle
xor
inc
pop
mov
pop
xor
stos
in
test
pushf
xlat
mov
rcll
mov
inc
mov
stc
inc
pop
mov
and
push
sbb
leave
and
daa
out
stos
popa
repz
inc
leave
push
cwtl
out
jecxz
mov
stos
sub
or
ficompl
lahf
sahf
lret
xchg
dec
cmpsl
mov
loope
inc
mov
pop
rcrl
negl
xchg
pop
out
clc
sub
int
ja
cmp
dec
mov
fimull
mov
orb
imul
repnz
sbb
shll
sbb
sti
jnp
ret
subl
sbb
ja
testb
fimull
les
mov
popf
imulb
je
sbb
nop
xchg
out
jp
push
sub
cmp
icebp
test
adc
ss
or
pusha
loope
pop
adc
repz
add
push
or
nop
cmp
je
push
repnz
in
push
mov
jmp
mov
pushf
mov
into
inc
mulb
outsl
movsl
or
test
push
xor
or
push
ret
dec
lret
nop
sbb
mov
stos
or
mov
lret
mov
jmp
sarb
add
push
xchg
cmpsw
adc
mov
sbb
xor
repnz
or
jp
xlat
testl
push
int3
and
pop
sahf
sahf
and
and
sbb
js
mov
rorb
push
lcall
das
sbb
inc
fld
nop
notl
sub
call
sub
xor
aam
cltd
mov
mov
nop
pop
outsb
mov
sbb
pop
aas
fnsave
addl
and
popa
mov
icebp
xchg
push
icebp
add
out
add
cmp
orb
xchg
mov
aaa
imul
adc
sbb
push
addr16
push
cmp
pop
mov
ficomps
pop
pop
mov
test
jmp
out
addr16
test
mov
fwait
cwtl
out
into
ficoms
push
popf
sbb
sbb
push
rolb
mov
outsl
mov
lock
sub
addr16
fnstsw
insb
icebp
loopne
icebp
loopne
dec
push
push
push
test
iret
push
shlb
xchg
leave
jle
xor
repnz
fildll
mov
lds
lahf
inc
jmp
xchg
mov
adc
cltd
mov
pop
mov
add
inc
push
jo
cs
add
rcrl
xor
inc
insl
and
cmpsb
mov
cmp
popf
inc
cmc
jns
adc
xor
cmp
push
out
cs
out
xor
jle
xchg
inc
mov
push
jo
jecxz
jb
loope
mov
cmp
pop
sub
or
int
out
stos
lds
shrb
dec
dec
pop
enter
daa
jg
pop
cmp
mov
inc
add
sub
jbe
roll
push
cmpsb
adc
pop
pushf
push
sub
cmpsl
cmpl
fs
mov
lds
push
xor
jg
inc
icebp
lods
int3
std
mov
pushf
loopne
xor
or
movsb
mov
fdivp
rcrl
sbb
add
enter
std
mov
daa
icebp
jo
lods
lock
sub
aaa
mov
repz
sbbl
add
add
xchg
nop
cli
pusha
lret
inc
dec
popa
loop
push
pop
mov
jb
mov
lock
loop
pushf
or
shlb
cmpsb
popf
xor
inc
cmp
cmp
mov
push
dec
lret
lea
sub
cld
adc
sti
mov
jbe
imul
dec
push
lahf
pusha
into
jmp
incl
sbb
ds
and
fsubrl
leave
pop
arpl
mov
dec
mov
cmp
cltd
aad
cmp
ret
in
pop
dec
aam
loop
fcomps
adc
out
sbb
sbb
jg
sub
outsb
dec
daa
cmp
cmp
loope
mov
jo
fdivs
xchg
and
insl
cmp
cmp
lock
cmpsb
or
pop
mov
adc
in
repnz
mov
movsl
scas
std
gs
imul
mov
adc
cmpsl
adc
aaa
mov
add
xor
ror
sub
leave
cli
sbb
fsubrl
ret
arpl
std
lret
in
mov
cmp
pop
fs
ret
xor
or
mov
cmp
and
cld
mov
decb
jmp
test
outsl
inc
add
or
pop
pop
xor
mov
inc
inc
fidivs
sub
pusha
lret
setae
adc
jne
adc
loop
daa
fcoms
es
int3
sahf
int
mov
xor
jp
mov
inc
jg
test
jne
insl
cmp
inc
mov
mov
imul
push
xor
sub
rolb
push
xor
sbb
add
xchg
sbb
dec
jle
cmpsb
jno
andb
cmc
pop
in
inc
mov
mov
scas
addl
test
inc
aam
mov
and
push
push
jbe
sub
rol
mov
or
cltd
sub
add
mov
push
fsubrl
faddl
jl
jmp
jae
lahf
imul
rorb
loope
or
or
testb
mov
aaa
lret
jb
fdivs
cmp
movsb
cmp
mov
adc
add
adc
xchg
stos
nop
filds
push
lcall
jecxz
outsb
inc
lds
lret
jbe
das
dec
mov
je
es
dec
push
cmp
mov
mov
leave
test
sbb
jp
dec
push
imul
insb
cmpsb
or
pushf
xchg
pop
jmp
mov
je
ljmp
lea
lahf
repnz
xor
out
cmp
test
stc
xchg
or
jge
and
push
gs
cmp
clc
cmpl
inc
pop
sbb
jle
imul
subb
mov
dec
xor
push
mov
push
add
xor
mov
cmc
mov
push
and
insl
jge
ljmp
xor
mov
scas
int3
sbb
shll
aaa
fucomi
mov
jb
cmpsl
pop
int
sahf
sub
insl
jmp
pop
cld
pop
mov
fistl
inc
pop
xchg
inc
mov
dec
lea
jle
imul
sti
clc
and
push
xlat
inc
fdivl
into
leave
sub
add
imull
jmp
xor
ja
jne
add
or
dec
inc
inc
jge
aam
iret
stos
sub
daa
aas
sbbb
repz
movsl
daa
int3
sub
loopne
cltd
gs
inc
leave
or
addr16
push
sbb
jno
inc
ret
arpl
pop
pop
lods
ja
and
push
push
sbb
mov
push
cltd
fdivrl
lahf
aad
mov
popa
dec
xchg
and
lret
aaa
push
aad
push
pop
push
or
cli
outsl
repnz
jle
adc
jmp
mov
push
mov
rorl
and
dec
mov
xchg
movsl
ja
jbe
or
inc
ret
test
popa
rorl
adc
loopne
inc
or
popf
mov
aaa
xor
mov
and
push
popa
mov
outsl
xchg
xchg
lret
loopne
fdivrl
ja
out
fs
dec
clc
jecxz
bound
outsb
outsl
lret
sbb
popf
xchg
and
das
lahf
add
shrl
cs
dec
mov
ss
ret
adc
mov
jb
jge
in
in
or
call
incb
sub
mov
lock
add
xchg
shll
lds
add
movsl
loopne
xor
or
repz
cmp
push
out
or
add
lock
dec
mov
rcr
fstp
ja
or
adc
jnp
pop
and
and
mov
xchg
sub
inc
push
push
in
cmc
movsb
pop
iret
add
ror
mov
decb
repnz
dec
jecxz
push
and
inc
jl
mov
or
push
fistpl
push
xchg
cmp
or
cmc
cmc
in
pop
xor
jnp
push
pop
rcll
hlt
gs
xor
leave
shr
and
mov
lock
sar
mov
and
inc
mov
in
push
push
sbb
sbb
push
loopne
ja
stos
ja
or
pop
insl
insl
dec
loope
das
cmp
rclb
cmc
popa
xchg
aaa
mov
adc
xor
cmp
xchg
jae
popf
movsb
in
mov
setbe
cmp
test
xor
sbb
dec
sub
pop
insl
inc
xor
pop
dec
or
mov
and
mov
mov
inc
cltd
xchg
dec
add
nop
inc
es
bnd
or
xchg
xor
rcrl
sbb
loopne
mov
aad
jae
xchg
cmp
xchg
aas
lahf
jne
mov
mov
aad
cmp
mov
lods
in
lea
jmp
dec
lods
and
cld
mov
add
fdivs
lcall
mov
cmp
cmpsl
or
mov
mov
push
cltd
adc
ljmp
xorb
push
push
mov
mov
adc
pop
mov
xchg
cmp
sub
push
sahf
ljmp
mov
test
test
add
mov
test
xchg
jmp
sbb
rorl
sbb
inc
test
es
or
mov
xlat
daa
sahf
cmp
rcrb
pop
cmp
sbb
arpl
insl
adc
ss
loop
sahf
ffreep
iret
lcall
in
repnz
js
imul
int
cmpsb
daa
or
pusha
xchg
das
jo
cmc
imul
lea
mov
fdiv
adc
jno
out
pop
call
sub
addr16
mov
aad
push
test
mov
mov
aad
sbb
aas
sbb
inc
int
fnsave
jb
test
ljmp
outsl
rcll
addr16
jge
mov
push
xchg
sub
add
sub
stc
out
jno
sub
push
pusha
outsl
ret
sahf
out
xor
xchg
jg
or
lock
cmp
stos
pop
fwait
sub
ret
cmc
andnps
testb
test
lods
and
mov
imul
repz
sub
clc
leave
jbe
lcall
aas
push
popl
sub
jle
test
insl
ret
mov
ljmp
cmc
jge
fsubs
xorl
push
lds
clc
fistpl
pop
jl
sbb
int3
out
mov
adc
addb
sbbl
rcrl
subl
xchg
pop
xchg
orl
loopne
pushf
jno
loopne
fstpl
test
ret
incl
mov
adc
inc
ret
push
fidivs
loope,pt
aad
dec
mov
in
es
daa
sbb
mov
sbbb
mov
in
lret
and
pop
sbb
jg
cli
jns
lcall
loop
adc
mov
mov
push
sbb
jo
je
pop
and
cmp
popa
shll
jo
pop
pop
lahf
loopne
xor
incl
sub
lods
pop
js
pop
je
int3
add
cld
mov
sub
pop
xchg
xchg
stc
sub
xor
xor
cmc
mov
roll
push
in
int3
or
add
push
loop
mov
aas
cld
mov
lret
cmpsb
inc
arpl
add
pop
scas
mov
in
je
sbb
jns
aam
and
addr16
out
mov
push
imul
in
movsl
jmp
das
stc
data16
and
or
mov
movsb
aad
sbb
imul
add
mov
fnsave
xor
cmp
dec
rorl
aad
inc
jmp
mov
scas
frstpm(287
xchg
ja
shrl
and
jge
push
pop
jmp
add
sbb
pop
add
and
mov
pop
push
add
in
mov
mov
bound
xor
xchg
jb
jg
notb
fcoms
or
push
pop
xlat
push
mov
ss
dec
test
test
mov
shl
outsl
mov
sub
bnd
daa
add
mov
loop
iret
sbb
lret
gs
fcoml
sbb
je
mov
xchg
ja
stc
dec
inc
insb
xchg
pop
add
jne
lret
je
repz
cmpb
jmp
pop
cmp
push
inc
movsb
andb
jns
jne
mov
and
std
add
bound
ret
bnd
nop
inc
jl
scas
or
mov
push
cltd
loopne
cmp
add
dec
jb
inc
jbe
in
lea
ficomps
or
out
sarl
pop
pop
xchg
add
frstor
xchg
sarb
fsubr
out
inc
push
popa
sti
fdivs
adc
ret
pop
sbb
pop
sbb
cld
cmp
in
rorl
leave
repz
std
dec
xchg
ja
movsb
aas
sti
cmp
aad
inc
sbb
outsl
int3
shrb
xchg
pop
mov
inc
add
mov
xor
jle
dec
cmpsb
aam
mov
push
addr16
push
sub
and
push
dec
or
or
inc
inc
scas
int
sbb
push
lret
cmp
xor
mov
mov
xchg
sbb
mov
in
mov
mov
and
mov
repz
push
or
xchg
hlt
ss
shrb
xchg
sub
or
mov
cs
std
xchg
mov
dec
and
and
mov
popf
out
sub
push
push
jae
add
addr16
mull
jle
xor
fsubrl
lods
push
stc
lahf
xchg
jl
mov
test
cmp
jo
mov
pop
pop
mov
push
mov
mov
dec
xchg
scas
daa
push
mov
jecxz
add
pop
cmp
in
sub
ja
iret
pop
mov
outsb
out
xlat
orb
jmp
mov
xchg
iret
adc
jg
addl
xchg
mov
cmp
sub
push
mov
adc
dec
jge
movsl
sub
scas
dec
ds
sbb
push
adc
popa
lock
outsl
mov
loopne
push
xchg
sbb
xchg
lock
add
add
jbe
dec
push
mov
cli
in
pop
mov
in
xor
jle
xchg
sti
dec
dec
ror
das
out
rolb
jmp
loopne
ret
pop
lock
sub
xor
hlt
cmp
push
or
pop
add
cmp
mov
pop
je
jle
xchg
and
aaa
mov
and
xchg
pop
xor
sbb
fldcw
dec
lcall
pusha
xor
cwtl
xor
xor
lods
dec
sbb
push
and
cmp
ret
jae
test
dec
in
add
pop
mov
fwait
cmc
cmpsl
lock
and
pop
sbb
jb
inc
mov
mov
outsl
inc
out
clflush
push
pop
xchg
js
pusha
mov
and
mov
pop
jns
jp
rorl
orl
fnstcw
mov
stos
lret
xor
and
scas
xchg
and
pop
pop
cmp
xchg
push
lds
mov
hlt
loope
xchg
arpl
lods
adc
faddp
cmpsl
push
and
mov
sti
mov
mov
cmpsl
add
rcrb
scas
push
fsubrl
mov
add
les
in
incb
dec
data16
insb
lods
inc
or
xchg
push
enter
or
push
movsl
outsb
dec
dec
in
add
jge
sub
mov
and
outsb
cmp
mov
popf
pop
lea
ljmp
cld
adc
add
outsb
shl
je
in
sub
call
push
les
fsubs
mov
xchg
xor
xor
out
scas
int3
psrlw
divb
xor
notb
fcomps
addr16
jno
dec
sub
sbb
scas
cmpsb
push
xchg
or
cs
ljmp
jl
sub
sbb
jo
or
cld
dec
xchg
stos
sbb
lahf
jae
dec
aas
stos
dec
scas
fisubs
movsl
out
movsb
pop
jmp
push
push
add
cs
xor
jmp
xor
push
icebp
cmpl
mov
xlat
push
lds
pusha
fsubr
dec
mov
scas
pop
inc
shr
hlt
lds
jns
mov
popa
popf
add
fidivrs
mov
xor
jb
add
pop
jne
cs
call
jno
sahf
sahf
fbstp
push
subb
addr16
xchg
jecxz,pt
push
pop
push
mov
add
adc
movsb
sarb
dec
xchg
and
fdivrs
aam
jl
add
mov
mov
add
add
aas
jno
dec
adc
int3
fdivs
xchg
push
inc
leave
cli
xchg
ljmp
sbb
clc
or
mov
popf
imul
popf
jecxz
int
jge
cmp
aam
call
mov
in
lock
sete
xchg
shlb
xor
inc
jmpw
fs
xlat
mov
fdivrl
insl
inc
cs
push
inc
mov
pop
jae
mov
pushf
mov
dec
je
sub
lock
pop
cmp
inc
mov
int
mov
cmc
lahf
cltd
sub
inc
iret
loope
out
xrelease
sub
fstl
int3
cli
push
pushf
lcall
inc
pop
fwait
stos
out
cli
push
mov
dec
sti
mov
std
xor
daa
popa
sub
lods
mov
pop
push
lock
aam
jbe
pop
push
sbb
shll
xor
icebp
stos
mov
mov
adc
rcrl
inc
sbb
test
scas
jg
push
sbb
into
out
pop
jnp
jl
cmpsl
outsb
xlat
push
jg
enter
jnp
stos
inc
fidivrs
or
add
es
add
out
popf
out
xlat
inc
inc
add
in
repnz
test
aas
repnz
mov
pop
data16
xor
into
outsb
push
xchg
lret
es
jns
cmp
aas
ja
mov
push
pop
fwait
add
and
stos
aaa
lods
shr
cs
fs
lcall
mov
cli
hlt
roll
cmp
or
xor
js
pusha
mov
leave
sub
dec
xchg
xchg
not
pop
mov
nop
scas
aaa
adc
scas
loopne
push
mov
clc
mov
cmp
or
es
add
mov
push
faddp
inc
inc
sub
push
mul
xchg
gs
pushf
fdivrp
imul
jae
jl
or
push
inc
ljmp
imul
jp
xor
mov
push
pop
xor
inc
mov
nop
xchg
mov
pop
daa
pop
pop
scas
nop
add
push
adcb
push
sar
sahf
fstpt
lret
dec
loopne
pop
and
cmp
pop
jbe
fistpl
mov
sub
xor
push
or
or
aas
int3
insl
cwtl
add
loope
icebp
add
leave
jmp
push
std
stc
jb
lods
push
dec
add
mov
cmc
fiaddl
in
out
push
push
mov
and
mov
xchg
rcrb
dec
pop
pop
push
sbb
in
icebp
mov
add
jle
push
lea
insb
push
pop
mov
or
cli
rcr
movsb
inc
outsl
xor
mov
jbe
xor
movsl
dec
push
ret
cli
ljmp
push
out
ficoml
outsl
cltd
pop
jl
mov
sbb
aam
cmpl
sbb
push
mov
das
outsb
mov
roll
inc
mov
hlt
out
xor
leave
pop
iret
mov
mov
push
jmp
dec
add
or
fistpl
into
fwait
adc
mov
out
push
movsl
jno
aaa
and
cmpsb
sti
pop
push
or
jo
xor
loopne
in
jmp
mov
in
mov
pushf
mov
jae
xchg
sbbl
addr16
sbb
in
ret
dec
push
ja
pop
outsl
xorl
outsl
xor
jge
pop
push
pushl
push
xor
daa
xchg
add
arpl
push
sti
in
orl
mov
mov
sub
rcll
lea
xor
insl
fisttps
mov
pop
loop
into
cmc
xchg
lock
cmpsl
rorl
lea
push
pop
dec
pop
ret
push
data16
inc
cmpsl
or
das
sub
jo
jne
inc
cmpsb
cmp
sbb
scas
xchg
iret
mov
pop
lret
movsb
dec
arpl
sub
test
pop
jne
movsb
nop
mov
cwtl
bound
mov
xor
out
mov
sarl
std
sbb
jg
cltd
incb
mov
fisttpll
xlat
add
add
mov
add
mov
into
mov
push
adc
dec
push
pop
lret
or
in
icebp
or
test
mov
mov
push
xchg
or
movsb
mov
imul
and
or
subl
dec
add
jae
adc
js,pt
xchg
adc
movsl
sbb
push
adcl
stc
jp
cmp
dec
push
dec
stc
mov
xchg
filds
dec
or
sbb
mov
push
xlat
out
mov
pop
stc
adc
jnp
in
and
sub
push
jle
test
jae
mov
or
push
stos
mov
mov
and
imul
icebp
xor
fcomip
mov
xchg
and
pop
movsl
pop
mov
jecxz
adc
ss
fs
aas
sbb
jge
jnp
sahf
sbb
jle
jmp
outsb
movsb
notb
add
add
sub
es
ret
sets
sahf
aas
aas
xor
jg
mov
push
scas
shl
ret
fdivs
mov
inc
sub
popa
daa
push
out
or
les
xor
fiadds
sub
adc
pop
cli
int
in
xchg
ret
jmp
mov
inc
cmpl
mov
sbbb
xor
adc
push
push
scas
sub
xor
fwait
add
or
das
cmp
adc
out
icebp
xchg
outsb
stos
push
mov
push
jecxz
sbb
fidivrs
push
outsb
inc
rorb
jle
daa
ficomps
test
cmc
stc
xchg
mov
cwtl
cmp
ja
bnd
jl
jnp
xor
add
add
imul
and
and
pop
xchg
aas
daa
sub
inc
enter
pop
testb
sub
repnz
adc
imul
or
stc
repnz
cmp
popa
roll
and
jns
mov
mov
fistl
test
pop
popa
div
mov
pop
dec
mov
imul
test
jecxz
andb
movsl
rolb
scas
add
popf
stos
mov
fwait
cwtl
lahf
int3
jecxz
cmc
cmpsb
adc
sbb
test
imul
leave
outsb
inc
push
and
test
icebp
in
push
xlat
pop
je
js
sbb
dec
and
adc
in
inc
test
insb
cmp
stc
or
xor
adc
mov
inc
mov
out
cmp
add
pop
imul
shrb
xor
loopne
lods
test
add
cli
shll
jae
mov
shrl
loopne
adc
in
jbe
dec
div
jne
cmc
fisubs
imul
xchg
jmp
fldt
mov
sbb
test
jne
xor
cmp
lds
push
cmpsl
jae
lds
into
cltd
or
sahf
and
adc
nop
push
cli
popa
jne
fsts
fiadds
jns
cmp
icebp
cmc
test
jno
shrb
loope
xchg
fcmovnbe
cltd
pop
insb
jmp
adc
orl
and
pop
out
stos
in
sbb
and
mov
imul
test
int
cmpsl
aad
ret
fidivs
dec
dec
andb
and
gs
cltd
pop
push
fadds
jae
or
adc
adc
push
enter
xchg
stc
gs
clc
adc
dec
imul
mov
add
aaa
cmp
popf
scas
mov
xchg
sti
repnz
pop
xchg
sub
mov
cmp
orl
notb
aam
adc
pop
jl
push
mov
cmc
fisttpll
outsl
sbb
dec
lcall
dec
mov
push
xor
andl
imul
into
sahf
xor
out
pop
jle
imul
sbb
xchg
xchg
imul
shll
cmp
and
cwtl
hlt
mov
call
and
lcall
push
mov
jmp
nop
les
push
mov
dec
add
mov
xor
pop
stc
js
push
adc
cli
mov
stc
ret
repnz
cwtl
stc
add
inc
loopne
dec
stos
dec
lret
test
sub
xchg
mov
push
aam
adc
inc
jne
dec
cli
jno
inc
add
enter
pop
inc
lea
cmp
xor
fisttpl
imul
outsb
dec
xorb
push
mov
pop
push
cmp
push
xchg
lods
pop
cmpl
jle
sahf
andb
xchg
lret
sub
gs
jbe
sahf
int3
inc
in
cmpsl
dec
daa
sub
jge
divb
filds
sbbl
mov
and
inc
call
adc
outsb
adcb
add
popa
dec
les
sub
inc
int
fmull
xor
xchg
loopne
jb
pop
xor
shll
push
add
sbb
sbb
bound
or
or
adc
test
int3
cmpsb
and
push
pop
adc
pop
mov
jmp
in
aas
jbe
xor
cmpsl
xchg
push
fcoml
popf
lahf
mov
in
scas
cmp
fs
sbb
cmc
mov
scas
cmpsb
xchg
add
pop
push
xchg
dec
int
mov
push
xchg
mov
shr
cltd
jo
ljmp
ror
sub
je
or
cmp
add
cmp
int
mov
sbb
lock
aad
adc
lret
ljmp
inc
and
lds
int
popa
dec
pushf
dec
mov
jl
ret
xor
cltd
adc
loopne
xchg
hlt
jo
aad
repnz
add
popa
push
dec
or
mov
jo
and
push
pop
push
fisubl
iret
aad
rclb
add
lock
add
test
nop
repnz
sbb
movsl
mov
lock
sub
dec
jno
inc
adc
sbb
xor
je
jmp
jb
jo
jbe
dec
out
incb
mov
xchg
mov
dec
repnz
xchg
jo
ret
push
sahf
cwtl
mov
cmp
xor
adc
roll
rcll
pop
jb
jmp
iret
sbb
lea
push
clc
fnstcw
jnp
mov
pop
mov
adc
sbb
pop
out
shl
pop
mov
jg
adc
fadd
out
sub
xchg
loopne
js
jbe
cltd
lcall
xchg
inc
out
mov
sub
daa
pop
setnp
cs
test
dec
xchg
dec
ret
mov
mov
hlt
adc
dec
xchg
mov
fs
leave
addr16
aas
add
sbb
cmpsb
xor
daa
and
arpl
lret
jno
rcrl
adc
movsl
and
jl
adc
sub
jb
ffreep
cmp
insl
mov
ss
enter
lds
mov
jnp
leave
xchg
movsb
outsl
xor
jb
pop
and
insl
aas
pop
jbe
mov
inc
scas
fsubrl
push
mov
jne
pushf
ja
jnp
sub
ret
daa
insl
dec
cltd
es
and
push
insb
xchg
push
cli
fcmovu
je
dec
aad
jle
xchg
cld
or
sbb
jbe
imul
icebp
cltd
or
dec
aam
xchg
insl
jae
in
cli
arpl
out
out
inc
jno
mov
xor
sbb
sub
movsb
push
sbb
int
or
sub
cs
inc
in
cmp
sub
push
std
mov
or
pop
mov
insl
outsl
jo
stos
sbb
pushf
rolb
xorb
orl
push
rclb
jp
dec
test
push
mov
rorb
cltd
lock
aam
lahf
mov
out
mov
push
out
in
and
insb
and
std
lea
movsl
insl
add
mov
cmpsb
mov
mov
sub
mov
sub
xor
push
leave
rcll
xchg
sub
push
or
nop
pop
fnstsw
and
ds
insl
nop
outsb
stos
and
outsb
push
cmp
add
jmp
rol
or
lods
and
loopne
add
add
outsl
shlb
scas
push
ret
clc
push
sbb
and
mov
inc
jg
pop
dec
shll
icebp
dec
mov
push
repz
and
ja
out
shlb
int
call
idiv
aas
jns
push
out
push
aad
ret
stc
rcrl
lahf
adc
pop
imul
ret
loopne
push
push
aam
imul
cmpsb
adc
popf
add
pop
daa
and
add
jo
push
call
loope
xor
sub
xor
sub
enter
cltd
dec
adc
fisttpl
sahf
adc
mov
mov
movsl
cs
aas
lahf
xchg
mov
xchg
mov
or
push
xor
jno
pop
pop
mov
lods
cmpl
pop
jo
ret
jp
movsb
pop
and
jne
jp
lret
jns
add
inc
repnz
enter
ljmp
push
xchg
movb
add
xchg
outsl
test
test
mov
orb
lock
daa
dec
mov
jae
dec
repnz
daa
test
ja
sub
add
mov
cltd
insb
call
xor
xor
mov
sahf
jbe
addb
mov
rcl
jmp
mov
xchg
add
push
loope
addl
fstpt
sub
idivl
or
mov
incl
push
adc
daa
sub
sbb
lods
test
and
je
pop
shrl
add
cld
pop
xor
mov
cltd
and
push
jp
dec
adc
lods
push
popf
jb
mov
pop
scas
mov
dec
sub
out
sub
hlt
mov
dec
stos
lds
test
mov
sub
push
ret
add
andl
cmp
outsl
sub
cltd
adc
jbe
xchg
pop
sub
jmp
jmp
push
insb
or
aam
addr16
xchg
sbb
andl
sub
pop
inc
cmp
jnp
jae
ljmp
ret
cltd
sbb
insl
ret
stos
jle
xor
outsl
push
mov
cmp
cmp
xlat
test
and
clc
clc
pop
mov
jmp
es
ret
negl
add
xchg
loop
push
seto
fs
mov
push
mov
sbb
je
jns
mov
in
stos
sbb
notl
lods
push
mov
lret
mov
dec
mov
cld
dec
mov
inc
inc
xchg
jg
dec
enter
add
test
outsl
mov
shll
stos
pushf
orl
jne
enter
dec
sbb
xor
enter
mov
ret
loopne
cmp
hlt
aad
add
sub
rclb
adc
xchg
scas
cmp
dec
dec
adc
xor
cmp
std
push
xchg
add
cmpsb
rol
mov
pop
xchg
ss
cmpsb
xor
icebp
dec
add
out
loopne
jno
sub
jge
cmp
lahf
sbb
in
nop
jmp
push
sbb
aad
fiadds
cmp
pop
cmp
in
jmp
mov
sub
add
pop
and
pop
adcb
pop
loope
or
aad
push
sub
out
shl
or
pop
mov
lods
adc
and
loop
dec
sub
lea
lods
fstps
scas
pop
sub
xchg
mov
adc
pop
xchg
in
into
addr16
cmpsb
leave
int3
dec
xchg
sub
mov
cmpsb
sar
pop
imul
xchg
ljmp
dec
sub
es
inc
addb
lcall
cli
adc
int3
ret
mov
fwait
push
cmc
mov
hlt
fisubl
cs
stc
addr16
push
test
mov
lcall
xchg
les
mov
imul
pop
inc
xor
push
mov
frstor
repz
push
adc
inc
inc
inc
fs
jb
or
mov
imul
push
jge
inc
xchg
push
jns
lret
push
jp
or
jae
fs
adc
sbb
mov
pop
sbb
xor
xorl
ds
jo
push
std
iret
lea
adc
sbb
inc
pop
push
cmp
repz
push
imul
std
insb
xor
icebp
out
decb
mov
inc
jns
pop
insl
dec
les
inc
cmp
xchg
in
icebp
int3
fnstcw
mov
imul
sbb
in
cmpsl
int
arpl
jo
pop
adc
jnp
pop
inc
cmp
ljmp
mov
xlat
push
push
push
popf
loop
cmp
les
dec
and
in
inc
push
pushf
mov
in
sahf
fldcw
lds
cmpsb
cmc
adc
push
jle
test
and
enter
inc
pop
mov
push
mov
repnz
dec
pop
popf
jmp
incl
dec
xor
push
mov
pop
movsb
sub
out
and
xchg
push
lds
lret
jb
dec
fidivrs
push
rclb
push
lahf
adc
pusha
mov
cli
lods
add
xchg
test
call
cltd
stc
mov
lods
xlat
test
inc
sbb
mov
jo
mov
mov
nop
mov
xchg
xchg
xchg
mov
lahf
out
test
add
out
in
xchg
scas
lret
pusha
imul
aad
sbb
add
jns
movsl
or
cmp
jae
xchg
lcall
fs
cmp
dec
movsl
dec
ret
outsl
out
clc
mov
shll
mov
pop
mov
pusha
push
js
movsl
ret
dec
gs
inc
add
sbb
sqrtps
xchg
add
xor
test
movsl
add
dec
pop
in
push
and
push
out
inc
mov
rorl
mov
ljmp
cmpsl
popf
leave
fildl
cmpb
xor
movsl
xor
rorl
mov
pop
cmp
xchg
mov
mov
stos
mov
dec
push
jp
mov
mov
das
push
test
push
pushf
or
and
and
cld
inc
sbb
pop
js
adc
scas
adc
mov
adc
dec
leave
xlat
test
ficoms
loopne
fstpt
dec
shll
xlat
push
cmovge
in
fbstp
rolb
xlat
icebp
and
test
xchg
push
movsb
cmp
inc
xor
xchg
mov
xor
int3
mov
jg
stc
repnz
lock
in
orb
lret
data16
pushf
js
jbe
inc
pop
pop
dec
push
stos
iret
loope
nop
aam
ja
push
fdivp
adc
jno
pop
jp
cltd
jle
lds
bswap
cmpl
cld
xchg
idivl
ljmp
adc
outsl
lea
out
pop
rolb
bnd
xchg
mov
sbb
adc
ja
in
sbb
lret
push
mov
dec
adc
adc
gs
add
adc
repnz
jle
outsl
xchg
push
fstl
cli
mov
aad
cmp
int
cltd
movsl
rol
out
inc
sub
in
push
xchg
xchg
sbbl
inc
lret
adc
jl
rol
ret
sub
call
cmp
mov
test
dec
sarb
xor
jnp
xchg
dec
outsl
shll
mov
cmc
orl
cltd
movsb
sub
xor
pop
mov
cs
lret
mov
cmp
cmpsb
cmc
push
and
mov
mov
in
popf
clc
cmp
xorb
mov
dec
fisttpl
inc
cmp
fs
loope
xor
mov
add
mov
leave
int3
sahf
xchg
test
pop
or
mov
out
sub
icebp
inc
dec
notl
adc
sbb
jmp
add
gs
mov
test
pushf
mov
xchg
inc
dec
icebp
fdivrl
inc
mov
les
push
repnz
repz
cmp
sahf
insb
fmull
cmp
out
and
sub
es
stc
mov
xor
mov
cmp
dec
cvttps2pi
pushf
xchg
pop
push
add
cmpsb
ljmp
leave
xchg
loopne
nop
cmpsl
clc
mov
cltd
cmpsl
int
aaa
subb
int
xor
inc
mov
pop
dec
jns
in
daa
mov
popa
aad
sbb
ror
dec
xchg
inc
aas
int3
add
cmp
mov
shll
movsb
adc
mov
fdivp
jo
stos
js
add
insl
shrb
insl
pop
jg
negb
sbb
push
cmp
sub
mov
lret
das
test
ss
popf
fwait
pusha
xor
inc
stc
addb
sub
pop
push
cmp
or
scas
mov
push
stos
cli
popa
shrl
repz
dec
lahf
ds
mov
xor
dec
xlat
repnz
sti
mov
out
in
cmp
int3
mov
loop
lcall
leave
nop
or
or
outsl
stos
pop
in
jecxz
icebp
cmp
pop
adc
aam
scas
lods
jo
mov
arpl
dec
into
sub
push
sbb
cmp
in
cmp
xchg
pop
push
adc
sbb
fnsave
jp
test
adc
loope
insb
repnz
fwait
movd
sar
add
jecxz
or
push
gs
shlb
hlt
push
cmp
mov
call
lea
pop
es
mov
fcoms
add
outsl
and
and
mov
xor
jae
push
add
lret
sub
ljmp
and
das
fucomip
lret
jp
mov
pusha
and
clc
jp
imul
jge
lcall
dec
jns
orb
xchg
loope
jmp
lahf
sub
shll
add
imul
fcoms
xor
push
xor
test
jbe
inc
push
call
out
sarl
js
lahf
je
pop
adc
data16
mov
and
cmpsb
negl
push
jns,pt
sub
sub
movsb
aam
inc
jl
jle
adc
jle
mov
fnstsw
cmp
mov
fadd
ja
test
lret
or
sub
inc
pop
lcall
push
mov
or
ret
mov
pushf
dec
nop
rcrb
lahf
push
or
push
mov
ljmp
lock
incl
shrb
stos
mov
inc
jne
es
orl
mov
cmp
enter
gs
test
pusha
add
movsl
cld
inc
jae,pt
pop
mov
inc
mov
mov
cmp
movsb
pop
push
clc
mov
insl
and
int3
xchg
in
add
sub
call
mov
andb
sbb
cwtl
out
push
loopne
inc
push
sbb
or
addr16
rcl
dec
lods
imul
ds
ja
mov
nop
shrl
sub
jbe
sbb
sti
lds
imull
int3
lcall
loopne
mov
inc
fstpt
or
cs
sbb
push
dec
loop
mov
imul
pop
push
push
shll
mov
cmpsl
pop
int
or
sbb
mov
data16
xchg
xor
lret
mov
mov
or
cmp
sbb
xor
mov
pcmpeqb
arpl
jne
and
lret
jle
ret
inc
rcr
test
pop
and
incb
mov
xor
mov
je
shlb
shlb
aad
push
leave
mov
xor
jb
lret
and
les
inc
mov
cmpsb
cwtl
mov
fcompl
lret
insl
imul
adc
fwait
imul
or
mov
sahf
add
popf
mov
cmpsb
repnz
daa
lock
and
hlt
mov
ds
sbb
sbb
loope
mov
icebp
xor
mov
inc
jae
mov
xor
adc
xchg
in
inc
mov
fiaddl
push
push
fwait
mov
stos
push
les
es
loope
mov
mov
cltd
adc
ret
cltd
mov
push
xor
mov
loope
mov
xor
inc
bound
cmp
add
inc
loop
or
sarb
xlat
out
inc
jnp
mov
mov
mov
push
arpl
gs
in
shlb
out
subl
xor
insb
or
add
js
enter
xorl
repz
mov
movsb
adc
or
or
and
jo
cmc
movsl
dec
mov
ror
cwtl
testb
leave
clc
repnz
scas
cmp
in
cmp
sbb
sti
scas
jnp
jae
mov
cmpb
cli
loop
mov
dec
add
mov
push
je
stc
fsubs
aaa
scas
in
sbb
dec
pop
hlt
xlat
cltd
enter
push
push
mov
lcall
iret
loop
xor
mov
dec
add
adcl
mov
inc
jb
jns
jno
xchg
lcall
mov
stc
andb
pop
or
or
sbb
add
aad
daa
push
daa
leave
and
sub
add
mov
arpl
int
pop
pop
pushf
dec
fldl
xorl
and
jb
aaa
mov
pushf
das
hlt
cmp
push
lea
scas
call
pop
xor
sti
and
push
aam
enter
inc
movsb
inc
jbe
adc
mov
pop
ret
lret
dec
mov
mov
or
ds
sbb
mov
jns
shlb
js
ret
les
mov
cli
xchg
sbb
ljmp
or
mov
ljmp
decb
cld
mov
jne
sub
jne
adc
mov
sti
cmpsb
adc
in
push
add
mov
cmpsb
inc
cmp
call
xor
xchg
push
gs
cmp
lock
or
gs
or
jbe
add
fidivl
xor
rcrb
hlt
or
repnz
xor
fcmovbe
mov
ret
loopne
mov
or
ja
mov
push
mov
rcrl
imul
pop
pop
push
daa
mov
add
lret
movsl
in
std
inc
out
push
rol
arpl
out
mov
mov
dec
push
out
lret
clc
xchg
adc
sbb
idivl
and
pushf
and
pop
push
jg
dec
and
sub
mov
test
es
xchg
push
and
sarb
fxch
stc
ss
lret
xor
scas
jns
or
leave
lahf
push
fstl
pop
push
jmp
aaa
mov
pop
std
xchg
mov
lret
lahf
mov
sbb
jmp
lock
cld
dec
out
jmp
mov
fstl
or
roll
xchg
pusha
shlb
cltd
jb
xor
lds
test
push
aam
jmp
inc
xchg
push
insb
jp
xor
jl
fcoms
fimull
cltd
in
mull
pop
inc
cltd
fisttps
stos
aaa
sub
jl
loopne
sbb
adc
mov
jmp
sbb
pushf
xchg
jns
xchg
fwait
mov
test
clc
loopne
inc
inc
pop
repnz
or
cmpsb
mov
test
dec
pop
and
sbb
mov
fimull
mov
pop
push
jmp
pop
xchg
lods
rorb
dec
cltd
lahf
xor
popf
fmul
movsl
cmp
xchg
aam
adc
lods
and
es
mov
cmc
je
repnz
xchg
inc
jle
push
lcall
mov
sbb
stos
jp
xchg
shlb
sbb
aaa
repz
add
mov
pop
ds
test
or
xor
mov
popa
mov
loope
das
loop
sbb
leave
inc
pop
xor
jecxz
dec
inc
add
mov
cmp
cmp
loope
inc
movsl
test
add
mov
loop
jmp
out
adc
mov
insl
imulb
add
sub
sub
fidivs
mov
outsb
pop
and
insb
cmc
push
add
popf
sbb
add
sub
jge
ss
push
dec
lds
nop
xor
sti
dec
lods
pop
add
push
test
jno
sarb
ret
and
in
add
int3
cmpsb
xchg
fisubs
lods
movsb
lcall
sbb
push
mov
inc
sbb
mov
mov
add
test
xchg
test
inc
jecxz
xor
outsb
dec
cltd
sbbl
cmc
push
scas
sahf
mov
aas
dec
test
mov
mov
enter
movsb
sbb
imul
arpl
jge
sub
repnz
cmp
fcmovnb
mov
enter
in
cwtl
out
filds
mov
adc
movsl
out
xchg
push
fnstenv
testl
out
fnstenv
ret
movsb
dec
jbe
pop
sub
out
inc
mov
jecxz
frstor
mov
cltd
and
sbb
lock
out
pop
sbb
push
popl
js
sbb
pop
pop
mov
push
adc
les
test
in
call
jmp
xor
fwait
loope
divl
sbb
xchg
mov
data16
sbb
mov
sub
or
inc
repnz
mov
jp
jp
sbb
loopne
sbb
icebp
mov
jno
dec
pop
xlat
call
outsl
test
insl
call
dec
out
adc
sbb
aad
cmp
mov
lcall
gs
jge
loop
adc
pusha
mull
mov
xorb
mov
lret
out
push
xlat
pop
mov
cmp
or
aad
rorb
leave
out
loope
fwait
lret
push
mov
sbb
push
pop
pop
and
dec
mov
out
cmc
pop
arpl
int3
mov
cmp
cmpl
cmpsl
test
xor
sti
std
inc
push
stos
xchg
jle
into
ds
xchg
mov
fsts
mov
inc
jmp
adc
adc
add
mov
adc
int3
sub
mov
dec
jge
push
mov
fxch
adc
movsl
orb
xchg
mov
inc
xor
aas
push
jae
xor
cli
mov
ret
sahf
xchg
xor
flds
into
sub
and
sbb
jge
or
arpl
mov
imul
sub
jg
in
mov
or
mov
js
lret
hlt
iret
pushf
jmp
or
pop
push
cmp
pop
adc
mov
mov
pop
cmp
icebp
mov
cmp
mov
push
fldl
int
mov
xlat
or
bnd
push
repz
pop
sub
sarl
lods
mov
gs
rcll
sub
xor
mov
add
push
pop
and
cmpsb
int
fsubrs
jl
fnsave
jno
mov
int3
fwait
add
push
loop
xchg
mov
push
repnz
adcl
and
scas
or
push
mov
jle,pn
sub
jno
mov
enter
clc
stc
adc
or
cmp
adc
stos
or
fcomip
mov
call
lods
jns
jbe
enter
iret
and
push
fistpl
bound
lahf
lods
mov
mov
jbe
in
sub
es
mov
sbb
and
movsl
addr16
mov
pop
jno
hlt
adc
pop
add
nop
jp
scas
inc
mov
dec
dec
lds
inc
push
je
sbb
jb
clc
pop
dec
scas
fmuls
jns
adc
cs
in
add
cwtl
and
cmp
push
dec
cmp
lahf
or
lods
inc
push
inc
es
mov
popa
xchg
mov
mov
mov
rolb
mov
or
dec
mov
shlb
lock
in
iret
mov
ret
mov
xor
sbb
inc
mov
test
xor
lret
es
es
xchg
rol
popa
imull
jbe
pop
pop
std
pop
xchg
cmp
add
xlat
cmp
adc
or
jbe
popa
scas
idiv
inc
jbe
cli
je
mov
popf
ljmp
jno
fwait
xlat
ret
test
xchg
ret
mov
xor
and
pop
sti
inc
inc
jl
cmpsl
int
xchg
cmp
movsb
push
lock
ss
loop
insb
inc
push
test
fwait
dec
or
mov
lcall
mov
jl
mov
mov
loop
sub
cld
jecxz
xchg
xchg
lock
lds
xchg
mov
aaa
xchg
or
es
dec
daa
mov
pop
lret
stos
jp
sbb
adc
cltd
or
insl
mov
inc
in
sbb
icebp
mov
xor
fistpl
mov
xchg
aad
ss
xchg
nop
addr16
inc
pop
popf
mov
xchg
aaa
scas
sub
xchg
cltd
imul
enter
fdivrs
cmp
mov
mov
fbstp
fs
add
stos
test
adc
xor
sahf
frstor
jmp
cwtl
xchg
cmc
pop
scas
fs
jb
push
pop
lahf
cs
push
push
xchg
xor
mov
adc
mov
add
sahf
subl
int
inc
mov
xchg
nop
imul
mov
cli
movsl
sub
dec
subb
call
inc
push
repnz
test
mov
loop
dec
outsl
lods
mov
out
push
push
sub
ja
pop
test
imul
popf
mov
pop
adc
outsb
and
inc
arpl
mov
outsb
mov
mov
mov
sti
outsb
ret
outsb
je
loopne
outsl
in
sub
fimuls
push
or
mov
fimull
pop
fisttps
fadd
fs
jp
push
inc
push
or
fsubs
pop
subl
iret
pop
sbb
shll
mov
scas
jmp
adc
mov
repnz
mov
es
test
inc
or
clc
cmp
lret
dec
js
pop
out
ja
dec
add
mov
xchg
fsubrs
call
push
adc
lods
aam
inc
pop
add
add
adc
push
test
mov
scas
jnp
test
mov
pop
enter
lret
and
pop
add
xor
andb
xor
inc
sahf
aam
add
inc
out
sahf
adc
cmp
shrb
pop
dec
cmp
lods
mov
out
lock
nop
and
xchg
lds
pop
pusha
sbb
ret
dec
cmpsl
test
mov
and
xchg
movsl
adcb
testb
mov
push
mov
sub
add
leave
rcrb
mov
call
mov
mov
lret
fwait
mov
jecxz
mov
mov
inc
jg
popf
cmc
mov
adc
dec
mov
arpl
pusha
loope
sub
adc
add
stc
shlb
mov
pushf
std
sarb
add
xchg
int3
add
daa
repnz
popa
imul
inc
nop
jge
fcompl
mov
xlat
add
out
cmpsb
in
stos
rorl
rolb
jns
adc
in
xchg
push
push
mov
add
leave
aam
add
or
loopne
testl
scas
sti
mov
outsb
dec
mov
or
and
and
sub
cmp
mov
rorl
movsb
inc
jmp
div
jne
cmc
dec
dec
pop
cmpsl
movsl
xchg
jg
iret
push
rcrb
jb
sbb
pop
sbb
inc
pop
test
and
adc
cmp
outsb
mov
xchg
stc
imul
loope
loope
hlt
je
jmp
int3
test
sub
mov
dec
sahf
lods
sub
push
movsl
movsl
xchg
xor
sbb
test
adc
aad
out
xor
es
jg
lds
icebp
insb
mov
andb
sub
cmp
sti
decl
ret
sahf
adc
sbb
xchg
mov
sub
sub
pop
int3
push
mov
jbe
add
mov
gs
mov
in
adc
ds
aam
adc
sbb
push
nop
inc
jge
stos
ret
xchg
out
movsb
pop
and
sub
bnd
add
dec
or
in
fnstcw
sbb
adc
adc
call
jecxz
cmp
js
adc
fidivrs
or
inc
mov
cli
push
rol
jmp
sbb
adc
rcrl
sbb
jne
test
jp
dec
popf
jbe
or
out
xchg
adc
mov
xor
rcll
xchg
aam
cmp
cmp
dec
inc
fidivs
push
mov
mov
add
pop
jp
mov
jb
jmp
stos
sub
stos
jb
ficomps
adc
xchg
mov
jbe
ds
aam
pop
push
cmp
mov
js
adc
jae
leave
sub
sbb
dec
xor
or
arpl
add
lds
shl
xlat
je
xchg
mov
pop
push
mov
ret
shrl
lock
aas
lds
mov
adc
test
int3
cmp
pop
push
das
ljmp
or
cmp
aas
mov
sbbl
stc
mov
stos
clc
stc
pop
test
insl
nop
sbb
xchg
cmp
xor
iret
sbb
or
bound
rolb
rolb
ja
jge
and
pop
daa
fs
cld
dec
aam
test
stos
jle
xor
or
fimull
lcall
addl
out
aas
jns
pop
jg
sub
sti
or
jmp
xchg
gs
outsb
sub
popf
cwtl
je
pop
aam
outsb
call
lret
sub
mov
mov
xlat
stc
and
mov
in
sarb
or
aas
scas
add
das
mov
out
inc
push
inc
sbb
sbb
std
lock
cli
loope
fsubrs
inc
daa
and
aaa
sbb
or
lods
sbb
sub
or
sub
movlhps
out
popf
jnp
test
loopne
or
ljmp
aaa
and
or
arpl
push
xlat
inc
stos
dec
cmp
xchg
out
les
dec
mov
sti
mov
fs
xor
test
insl
ds
jb
stos
aas
jb,pt
lea
sub
sarl
movsl
sar
lahf
mov
gs
add
push
xchg
xor
out
or
xchg
jle
sub
sahf
loope
js
pextrw
adc
push
mov
cmc
xor
mov
or
xchg
or
jae
shrl
clc
inc
pop
xor
testl
pop
and
push
mov
lret
and
inc
aaa
sub
movsb
lods
jbe
jo
cmp
mov
pop
add
jb
icebp
test
test
sbb
out
cmpb
test
add
aam
into
add
cmc
scas
cwtl
push
jns
jne
mov
mov
lret
pop
fidivrs
jb
in
frstor
out
shll
js
fs
and
adc
inc
cli
push
push
mov
stos
pop
pop
cmpl
addr16
cwtl
pop
adc
push
xor
fcomi
fwait
inc
push
sub
stos
push
mov
jmp
lret
mov
pop
out
xchg
lret
out
xchg
sti
cmp
fidivl
mov
idivb
cmpsl
aam
pop
xchg
sti
or
aaa
jb
jbe
xchg
adc
clc
xchg
xor
sbb
xchg
movsb
int
pushf
cli
mov
fwait
cmp
xorl
pop
cmpsl
pop
inc
jp,pt
mov
xchg
push
add
hlt
cltd
test
loope
mov
or
xorb
cli
mov
out
inc
sbb
inc
push
in
cmp
lods
fisttpll
fstps
rcrl
lods
sti
inc
mov
fcomip
pop
sub
mov
bnd
xchg
enter
pushf
mov
pop
jbe
push
pusha
outsl
in
cwtl
popa
pop
or
cmp
pop
xchg
fstps
mov
popa
popa
js
lock
mov
int
lcall
mov
je
and
mov
mov
xchg
pop
lds
ss
mov
data16
outsl
pushf
sub
adc
outsb
and
mov
sbb
add
sahf
hlt
push
mov
fimull
repz
or
stos
inc
imul
pushf
decl
imul
imul
push
jmp
iret
jp
cmpsb
xcrypt-ctr
cmpsl
cltd
xor
mov
adc
stos
test
ja
les
popf
inc
inc
loope
inc
das
xchg
cli
sub
add
or
lods
addr16
pushf
pop
popf
push
sbb
add
in
jns
cltd
sub
hlt
addr16
xor
movsl
add
sub
adc
mov
jge
fdivrl
pop
mov
pop
mov
dec
decl
lret
aad
into
sbb
andl
cmc
ret
pop
aam
rcll
add
jae
jle
push
jbe
and
pop
cltd
ficomps
call
push
xchg
push
setbe
ret
adc
sub
or
test
push
ret
inc
push
push
orl
mov
fs
out
stos
jnp
mov
test
aam
xor
pop
je
clc
rol
ja
cmp
jne
lds
leave
out
add
xchg
add
popa
or
jg
push
cmp
mov
enter
inc
rorl
int
add
scas
mov
jne
push
mov
in
pop
or
dec
mov
stos
fcoml
pop
inc
adc
icebp
test
ja
pop
in
mov
and
xchg
addr16
scas
and
jns
add
je
lret
and
lret
lods
daa
add
outsl
movsl
outsl
mov
mov
mov
push
dec
sub
fcoms
out
outsl
test
jno
mov
adc
stos
cli
or
push
jmp
imul
dec
lods
adc
inc
xchg
sbb
inc
ret
cmp
xor
das
test
jo
fildl
std
std
add
ljmp
cmp
xchg
mov
jae
aas
pop
sub
ljmp
ss
scas
movsb
jl
iret
cmpsb
or
lcall
adc
int3
adc
stos
jae
mov
popa
inc
jae
into
mov
xchg
fildll
jbe
call
aas
inc
pop
and
aaa
inc
xchg
and
xor
lods
pop
mov
jo
bound
push
mov
sub
popf
or
sbb
ljmp
xchg
cmc
cmp
lret
test
mov
insl
pop
jne
cmp
inc
sub
xor
push
sahf
lea
jge
das
mov
dec
lahf
fs
mov
cli
idiv
jbe
push
clc
push
xor
mov
test
push
in
inc
repz
std
or
les
or
mov
aaa
hlt
scas
call
scas
mov
pushf
inc
and
out
int3
inc
mov
imul
loope
xchg
cmc
lret
cli
test
mov
rol
dec
sub
stos
sub
bound
stos
data16
mov
cmp
and
lods
wbinvd
std
inc
push
mov
insl
push
sti
in
lcall
das
ss
xchg
rcrb
sub
sbb
sub
mov
mov
inc
rorl
xor
insl
cmp
push
rcll
xchg
mov
testb
icebp
cmp
xor
mov
lods
or
sbb
or
andb
jae
jg
jmp
mov
dec
inc
pop
xchg
mov
lock
adc
inc
mov
mov
popa
and
sub
add
mov
dec
outsl
jbe
pop
shlb
xchg
dec
xlat
filds
jp
xchg
push
addr16
loopne
pushf
adc
leave
mov
lret
and
or
lret
loop
sub
and
divl
hlt
inc
dec
sbb
cld
lcall
cmp
das
fldl
lods
jle
sbb
dec
xchg
cld
fistps
cmpsb
vmovntps
jnp
push
iret
cmp
push
lret
mov
repz
sbb
sub
push
mov
scas
and
mov
xor
xor
cmp
pop
in
lods
test
mov
dec
scas
decb
or
sbb
sub
adc
inc
fwait
cli
adc
cmp
cmp
sahf
push
inc
jmp
mov
mov
and
sbb
mov
lahf
call
push
jmp
ljmp
mov
outsb
sbb
scas
nop
adc
lds
lahf
addr16
xor
scas
mov
dec
lahf
pop
hlt
mov
stos
add
not
push
mov
std
lcall
not
ffreep
mov
das
sub
xchg
push
sub
das
inc
xor
mov
leave
loope
mov
popa
adc
cmpl
stos
mov
fs
lock
jg
fidivrs
es
test
mov
inc
negl
dec
cld
lds
and
out
xorb
pop
call
dec
pop
sub
testl
mov
push
sub
or
insb
addr16
aad
rcrb
pop
sbb
push
cld
enter
cmp
test
or
push
shll
lea
bound
dec
xchg
pop
push
punpckhbw
push
cmc
movsb
jns
mov
shrb
push
outsl
out
enter
xor
xchg
cli
adc
xchg
pushf
test
out
out
jo
out
cmp
mov
pusha
daa
adc
ds
icebp
jmp
std
cmp
dec
std
or
lea
fwait
push
fists
jne
call
and
aam
lods
or
popa
lods
push
fimuls
loope
fldenv
mov
jp
adc
dec
sbb
cmp
and
pushf
out
int
and
push
ret
pop
mov
mov
and
cmp
mov
in
je
sub
cwtl
dec
pop
icebp
sbb
mov
cmpsl
bound
xchg
cmp
ljmp
mov
gs
push
add
push
inc
cmp
rcll
mov
pop
fnsave
fwait
xchg
test
push
sub
or
inc
cmp
mov
scas
daa
pop
filds
rorb
loop
mov
aaa
cmp
test
in
cmp
adc
lds
and
stos
test
scas
xchg
outsl
adc
imul
aaa
add
or
or
and
cmp
ret
push
into
xorl
mov
mov
push
roll
in
add
push
xor
push
adc
jecxz
push
fimull
out
test
xor
jp
movsl
imul
cmpl
mov
mov
xchg
push
bound
stc
jnp
push
addr16
mov
cmpsl
mov
adc
in
data16
xor
mov
outsl
loopne
adc
sbbb
movsb
fistps
sbb
arpl
jne
or
pop
xor
repz
jmp
dec
pop
xchg
xchg
fs
pop
iret
pusha
mov
or
or
sbb
enter
in
xchg
test
in
mov
add
and
into
xchg
movsl
inc
push
sbb
fldl
mov
sbb
stc
or
enter
loopne
flds
mov
pop
add
push
sbb
orb
push
dec
mov
inc
lods
or
aad
dec
leave
pop
jl
cmp
aam
or
inc
add
xchg
or
jo
ljmp
mov
cmp
cmpsl
xchg
dec
pop
sti
xor
cmpsb
add
cmc
pop
push
or
lods
pop
sbb
or
add
mov
and
mov
xor
sahf
jecxz
lods
iret
iret
cmp
push
movsl
ret
add
outsl
fs
add
out
in
pop
xchg
cwtl
lods
sub
movsb
xchg
pop
ret
mov
sbb
jae
aas
jb
hlt
mov
pop
xchg
xlat
shll
xchg
xor
jns
in
out
in
popf
into
movsbl
movsl
jno
filds
int
sub
xchg
sbb
pushf
mov
int3
push
push
ja
hlt
lahf
lods
fs
les
int
jo
filds
lcall
ret
cmp
cmp
aad
rcll
xor
lods
outsb
xchg
das
test
arpl
sti
or
jno
je
mov
adc
cs
addl
insl
xor
daa
add
rolb
loopne
enter
call
jbe
scas
mov
cli
ficomps
jle
jge
dec
pop
shrl
test
or
inc
mov
incb
cmpb
repz
js
test
cli
xor
mov
setno
fidivrs
sbb
jnp
or
jnp
mov
lods
je
out
jno
push
inc
mov
cmp
icebp
rolb
addr16
pop
js
push
roll
fstl
add
cld
outsb
mov
sahf
cli
xlat
int3
and
lret
test
fmull
cmpsl
or
fdivr
push
adc
je
or
popa
mov
or
sub
enter
adc
adc
enter
fwait
or
mov
scas
and
into
inc
adc
stc
arpl
cmp
sbb
gs
repz
lcall
out
in
jbe
ljmp
and
aad
stc
data16
mov
push
enter
fbld
lods
add
out
inc
and
mov
or
lock
sahf
sub
add
pop
mov
dec
negb
cltd
dec
cmp
push
out
inc
or
mov
fcmovne
cwtl
sub
cmp
adc
addr16
inc
xchg
xchg
dec
sahf
sahf
loop
data16
js
fldenv
stos
lret
jmp
xchg
mov
mov
mov
pop
and
inc
cmp
sbb
arpl
cld
lods
scas
sbb
adc
lock
popa
iret
popa
jecxz
mov
adc
and
jb
jge
out
mov
pop
xchg
pop
add
negb
dec
leave
fstpl
add
aam
add
inc
pushf
jb
in
push
jecxz
sbb
test
aaa
sbb
das
mov
imulb
dec
pop
stc
pop
dec
push
insl
mov
inc
xchg
mov
inc
fisubs
cmp
xlat
and
loop
lods
sub
xor
int3
jnp
xor
sbb
int3
fsub
rolb
jmp
lretw
mov
dec
cmp
push
xor
ret
add
xchg
push
jo
push
gs
ror
jns
mov
stos
xchg
cmpsb
int3
sbb
mov
xor
or
add
sbb
dec
jno
pushf
add
xor
pop
adc
mov
cli
sbb
mov
push
xchg
dec
aaa
mov
leave
nop
xchg
and
push
popa
mov
scas
sahf
push
push
push
add
xor
mov
fsubrl
and
push
andb
lock
xchg
daa
lret
fstl
push
sbb
xor
lods
aaa
xchg
pop
dec
rcll
add
out
repnz
jnp
data16
dec
xor
xorb
mov
gs
pop
fs
repnz
cmc
cmc
bound
mov
dec
pop
push
cmp
jne
push
mov
or
push
push
aam
fmull
push
jnp
mov
push
rcrb
inc
mov
outsb
movsb
push
pop
sahf
add
sub
sbb
add
xor
add
adc
in
jl
insb
pushf
shlb
adc
xor
and
fwait
pop
jnp
repz
xor
fsubrl
xchg
xor
push
sbb
jmp
push
inc
pop
push
fmuls
mov
leave
mov
jge
sbb
ljmp
int
inc
insl
pop
dec
clc
fisubl
popl
loop
mov
je
cwtl
pop
or
addr16
cwtl
jp
bound
movsb
cmp
les
in
sarl
sbb
sub
sbb
push
loop
insl
rol
inc
out
outsl
out
xchg
jmp
fcomp
mov
cmp
imul
xor
xor
test
sti
mov
jbe
sti
mov
pop
cwtl
int3
negb
and
add
mov
and
or
and
iret
aam
aam
test
popf
in
and
pop
jl
push
cmp
xor
dec
sub
xchg
cmp
push
mov
jmp
sbb
enter
jne
jecxz
mov
sbb
pop
cmp
mov
movsb
mov
imul
es
or
fisubrl
xchg
xchg
cmp
sbb
xchg
pusha
clc
fisttpl
stos
loope
adc
add
pop
dec
jecxz
ljmp
xlat
lods
jbe
dec
mov
mov
call
jbe
in
mov
or
test
sti
out
pushf
adc
push
je
mov
add
daa
dec
push
sbb
sbb
shrb
jmp
mov
push
inc
jmp
aad
sub
popf
dec
in
pop
inc
mov
mov
mov
mov
mov
jne
sbb
cmpsb
jno
test
xor
in
loop
imul
mov
mov
cld
cmc
push
pusha
leave
cmp
adc
aaa
jbe
rcrl
outsl
shlb
sub
pop
addr16
add
jl
jbe
mov
rclb
clc
mov
cmp
cmp
insb
hlt
das
push
pop
lods
add
cmpb
mov
add
xor
mov
aas
mov
xor
sub
xor
pop
mov
sub
jo
jle
sbb
pop
mov
lods
pop
shrd
jo
mov
lock
sub
data16
aad
cmpsb
xor
jecxz
sarl
mov
fisttpll
pmullw
jnp
repnz
mov
pop
aas
ds
push
adc
les
cltd
mov
and
movb
jle
dec
ret
shrd
aam
movsl
inc
enter
mov
sbb
adc
repz
xchg
inc
fimull
call
stc
mov
stos
outsb
idivl
mov
pop
in
rorl
cmp
push
xor
jecxz
pop
push
lods
cmpsl
add
mov
stc
push
sub
popf
nop
mov
jge
ret
jo
fwait
in
xchg
sub
test
inc
vpunpckhdq
outsb
xchg
ret
adc
adc
fistpl
xchg
fs
or
inc
mov
cmpsb
test
adc
mov
shll
fs
stos
ror
jmp
loope
xchg
cmp
lods
adc
gs
ret
fsubrl
xchg
call
mov
fstpl
sub
xchg
shrl
scas
pop
shlb
es
inc
shlb
mov
loopne
mov
and
pop
xchg
scas
ret
lods
adcl
in
dec
xchg
outsb
adc
mov
out
mov
inc
mov
fmuls
fs
add
jle
adc
cmp
pslld
repz
inc
add
dec
cmpsl
pop
push
popf
ja
scas
add
insl
lret
xor
mov
inc
aad
loope
xor
sbbb
cltd
xor
push
je
bound
mov
popl
imul
push
xor
adc
mov
adc
mov
loope
mov
push
mov
and
aaa
aam
xchg
or
push
xor
adc
jecxz
shll
sub
inc
dec
inc
les
sbb
ret
call
sahf
cltd
jecxz
shrb
add
cmc
xor
ljmp
ds
movsl
aas
negl
cmp
insb
pop
adc
mov
pop
pushf
push
sbb
lret
dec
bound
adc
out
push
incb
jle
cmc
movsl
xor
push
gs
mov
inc
repz
idivl
inc
xchg
arpl
pop
imul
bound
mov
lret
mov
xchg
xchg
add
movsl
fucomp
fs
popf
xor
jl
inc
mov
in
adc
dec
clc
inc
sub
or
mov
mov
sub
add
inc
mov
dec
dec
and
addr16
in
inc
lods
clc
ret
pop
or
pop
fimuls
cs
sqrtps
repz
enter
ja
pushf
push
xor
out
loop
sub
push
dec
int3
push
sub
cmpsl
lret
push
rcrl
jnp
inc
xchg
mull
movsl
mov
iret
loope
push
sbb
sbb
xchg
imulb
in
xchg
std
sbbl
inc
add
in
jg
pop
jns
in
sbb
sub
sarb
xchg
cmpsb
sti
and
jp
cmpsb
push
stos
cwtd
jl
iret
das
popf
mov
cmc
xor
push
sbb
sti
js
inc
nop
nop
rcll
pop
cmp
or
nop
ret
lods
pop
add
std
inc
dec
mov
mov
sbb
adc
out
lock
fwait
xchg
add
fists
imul
faddl
ret
or
add
loope
int
push
cmpsb
mov
ss
pop
add
cs
rolb
push
add
leave
lret
or
out
and
test
mov
in
and
loopne
lds
pop
push
ret
mov
sub
insl
out
fists
fimuls
orl
rol
jne
daa
jp
sbb
mov
das
ffree
in
dec
push
jnp
dec
push
insl
outsl
data16
cwtl
cvtpi2ps
inc
dec
inc
mov
es
int3
inc
adc
mov
xchg
idivb
lock
bound
cs
cmc
xchg
js
scas
sbb
faddp
clc
mov
xorl
dec
call
lcall
mov
push
lock
lds
out
pop
cld
out
dec
add
push
or
cmp
sbbl
jecxz
pop
or
mov
movsl
enterw
int3
ss
add
es
push
inc
icebp
test
sub
and
xor
add
mov
sub
mov
cs
gs
aas
pop
in
outsb
push
mov
std
or
jae
popa
inc
cmp
push
out
jp
jno
rclb
pop
pop
movsb
fucomip
jecxz
mov
jge
adc
xor
cwtl
sub
jmp
insl
jmp
jns
mov
jmp
iret
adc
ret
mov
call
in
pop
cltd
inc
jecxz
inc
test
sbb
imul
test
xor
push
pop
push
divb
stos
cmp
in
fucomi
pop
cmpsb
xchg
jae
leave
dec
or
xor
mov
out
mov
imull
mov
jmp
dec
jg
push
jnp
in
and
movsl
xchg
jecxz
push
movsb
hlt
cmc
lret
mov
hlt
dec
lcall
pop
ret
cld
mov
xchg
adc
pop
xchg
iret
or
stos
je
iret
dec
stc
mov
and
jg
mov
sarl
sahf
inc
cltd
xchg
cmc
repnz
movsl
inc
and
fbstp
pop
adc
imul
test
ljmp
lahf
and
cmp
sbb
jns
or
jl
cld
xor
inc
mov
loopne
aaa
popf
push
inc
mov
pop
xor
mov
xchg
pop
sbb
outsb
add
mov
add
imul
incb
mov
orb
fmuls
xchg
rcrl
sbb
shlb
stos
xorb
lds
or
jo
cmp
aad
dec
sbb
xor
jae
mov
mov
nop
bound
fnsave
adc
push
int3
mov
sub
int3
mov
in
sub
dec
pop
push
or
push
add
mov
mov
cli
jg
pop
inc
inc
add
outsl
dec
inc
dec
insb
mov
mov
arpl
test
sbb
push
adc
mov
inc
push
insl
xor
stos
pop
push
rorl
insl
mov
cmp
je
dec
pop
mov
pop
std
movsl
xchg
ret
pushl
sbb
xchg
dec
test
stc
das
cld
mov
jge
js
dec
cld
jecxz
mov
iret
das
and
inc
decl
adc
cmp
fsubrp
sub
mov
adc
mov
mov
pop
int3
mov
in
pcmpeqw
int3
xor
sub
mov
sbb
out
lret
add
mov
lcall
call
push
stos
pop
xchg
mov
inc
mov
jmp
add
jae
and
cld
out
and
shl
and
xchg
in
mov
pop
lea
jp
sarl
iret
lcall
or
dec
hlt
stc
pop
adc
sahf
jo
and
leave
lahf
mov
pop
adc
insb
mov
xchg
dec
sub
sbb
enter
jle
inc
fists
dec
mov
xor
sbbl
ja
shlb
adc
mov
data16
sub
scas
inc
xchg
inc
clc
mov
jge
movsb
pop
push
mov
jl
lock
lock
lahf
popf
addb
sbb
lcall
ret
mov
add
in
jb
sub
repz
sar
mov
mov
mov
add
inc
cmp
cmp
mov
jb
mov
mov
movsb
mov
pop
shlb
mov
jbe
and
inc
into
je
xchg
daa
and
daa
sub
fs
and
ret
lret
aam
xor
push
ss
cmp
cwtl
push
es
aas
std
push
mov
jecxz
shrl
mov
sbb
jecxz
and
xchg
mov
pop
movsl
mov
inc
adc
fnsave
cmp
sti
dec
push
clc
js
mov
push
test
sub
mov
xor
out
mov
hlt
xlat
lret
mov
outsl
xchg
dec
xchg
ljmp
mov
rsm
jbe
dec
push
mulb
xor
clc
rcl
fldl
mov
or
xor
push
aas
test
fadd
imull
mov
int
push
lret
push
js
adc
or
out
dec
lret
cmpsb
pop
call
test
pop
add
push
inc
adc
jb
dec
pop
testb
add
stos
ljmp
and
sub
cs
adc
test
ret
add
jno
mov
cmpsb
dec
and
imull
jmp
xor
js
jb
cltd
out
mov
xlat
mov
fwait
arpl
cmp
lret
sarl
xchg
aaa
pop
adc
addl
and
mov
fldenv
mov
sbb
cmp
dec
jle
ficoms
adc
dec
sbb
inc
mov
and
pop
sub
fstps
into
mov
lret
pop
fwait
sub
cld
scas
inc
mov
push
outsl
or
cli
push
lods
stos
sar
outsb
sti
or
fstpl
cmp
mov
mov
cmp
mov
mov
xorl
sub
dec
and
test
push
jecxz
iret
fdivl
xorl
dec
dec
and
mov
imul
fwait
fwait
pop
stos
cli
sbb
dec
scas
or
leave
fcoms
or
add
sbb
daa
mov
rcll
js
jne
mov
dec
aam
jmp
sahf
fs
daa
cmc
mov
adc
sub
mov
insb
stos
mov
jg
roll
mov
mov
shlb
ds
js
mov
mov
and
add
and
in
mov
mov
xchg
xchg
loop
test
xchg
data16
fxam
mov
jle
pushf
sub
push
or
enter
imul
fwait
pop
jae
cmpsb
push
daa
add
cmp
cli
jae
xor
fists
and
add
mov
mov
icebp
dec
pop
xor
movsl
in
jg
fdivl
imul
pop
lret
dec
sbb
fldenv
nop
sub
cmp
inc
sub
and
pop
icebp
ss
imull
sub
push
test
js
jg
aaa
rcrl
add
cld
aad
dec
inc
lds
xchg
jge
jo
inc
outsb
int
jae
mov
push
jbe
repz
and
push
jg
and
aam
test
push
mov
leave
int
push
stos
in
mov
data16
orb
push
xor
fdiv
pop
and
pop
in
sbb
and
pusha
pop
jl
mov
add
mov
mov
stos
repz
fwait
inc
aam
adc
fucomp
and
lds
mov
cmp
stc
ret
add
dec
insb
fstpt
ds
add
pop
fldl
popa
jno
xchg
jae
dec
jg
repnz
leave
dec
mov
mov
cltd
push
sti
popf
pop
mov
mov
inc
mov
cmp
pop
loope
dec
outsl
aaa
mov
dec
into
adcl
add
rorl
cmp
mov
fsubr
es
pop
jl
outsl
cltd
outsl
pop
ss
sub
push
rol
jl
cmp
and
mov
dec
insl
rcrb
cli
dec
dec
pop
sbb
mov
mov
scas
pushf
add
pop
stos
xlat
mov
int3
shl
adc
sub
jg
cmc
inc
lahf
sub
mov
call
xor
mov
lods
imul
mov
sbb
into
sbb
das
test
pop
sub
dec
aam
pop
lods
push
xor
outsl
mov
sbbl
movsb
xor
test
jg
add
push
clc
loope
nop
fs
dec
dec
pop
jbe
repz
and
sbb
aad
fists
jp
in
inc
pop
xor
ss
pushf
fsubl
jle
xor
xlat
inc
stos
push
insl
int3
and
lahf
addr16
inc
loopne
and
mov
and
inc
sbb
add
sbb
dec
incl
fsubrl
push
push
ret
sub
add
mov
outsb
xchg
std
push
sub
movsb
bound
call
push
sub
mov
divb
fwait
or
popf
cwtl
data16
sub
les
test
mov
sub
xchg
mov
mov
cmp
stc
push
cmpsb
fldl
scas
inc
popf
movsb
adc
sahf
xlat
adc
repnz
test
ss
pusha
loop
outsl
pop
test
and
jecxz
mov
ja
mov
push
push
fldcw
jo
xchg
mov
sub
sbb
mov
mov
and
push
ror
fdivrs
lea
les
adcb
jne
lds
sti
jp
sub
aaa
sub
and
lea
popa
adc
pop
jecxz
aaa
and
cmp
loop
neg
aas
add
aad
cmp
and
mov
andl
push
xlat
mov
arpl
ret
jl
sbb
mov
pop
cmpsb
inc
xor
popf
add
adc
loopne
cmp
jno
jge
shrb
sbb
outsb
dec
mov
sub
fcom
mov
xor
xchg
gs
push
xchg
or
sahf
inc
sub
adc
ret
or
xchg
add
cli
cmp
test
inc
pushf
in
roll
mov
pop
mov
std
pop
clc
or
insb
xor
aaa
shll
xor
aam
mov
jb
mov
push
jbe
inc
mov
popl
test
xorl
mov
add
dec
xor
xchg
out
and
push
fsubs
lret
dec
in
mov
iret
shll
outsl
pushf
push
movb
mov
pop
gs
nop
push
pop
lret
inc
sahf
lahf
scas
or
sbb
sub
sbb
cmpsl
imul
iret
mov
sub
js
sahf
mov
cmp
jne
add
pop
bound
dec
mov
repz
sahf
add
je
add
nop
cmpb
xor
es
dec
ja
pop
cmp
hlt
pop
outsl
test
dec
rolb
in
lret
sti
insl
xchg
push
push
pop
xchg
fistpll
adc
jg
inc
xchg
cmovbe
pop
mov
push
push
sbb
add
out
pop
pop
xchg
lcall
or
scas
pusha
or
xor
testb
faddl
ret
push
mov
imul
bound
fmull
xor
lret
popf
lret
loope
aad
sahf
stos
out
aam
insb
inc
push
mov
mov
mov
push
ret
enter
or
jbe
dec
sahf
add
push
hlt
pop
and
push
je
lret
jnp
call
nop
xor
bound
xorb
sub
dec
sbb
es
sub
or
repz
jnp
sbb
mov
cmpsl
sub
push
inc
jnp
add
cmpsb
outsb
pushf
mov
das
jp
bound
iret
jns
mov
cmp
stos
ss
jno
rorl
push
in
sbb
jmp
mov
sub
leave
jo
xlat
pusha
jo
xor
and
scas
push
mov
test
sub
pusha
into
bound
cs
std
add
stc
arpl
mov
je
or
xchg
mov
mov
jl
data16
roll
mov
std
fisubl
out
jmp
add
leave
jno
push
rol
add
clc
mov
lahf
iret
cmpl
cmp
ja
mov
push
dec
int
xlat
sahf
popa
add
mov
lcall
out
cmpsl
loope
aam
js
inc
inc
lret
lcall
xlat
xchg
xchg
and
xchg
pop
inc
leave
pop
lods
push
int
ja
mov
lret
test
dec
or
xchg
mov
out
xchg
cltd
sub
aaa
mov
fldt
mov
mov
mov
adc
int3
push
movsl
div
lcall
add
inc
xchg
dec
decl
jge
sub
popa
cld
data16
and
loopne
rcr
xchg
xchg
sub
leave
push
gs
divb
inc
clc
lods
into
dec
mov
lea
mov
movsb
xchg
sbb
add
ret
xor
xor
das
sbb
iret
aaa
dec
mov
andb
jmp
inc
cmp
sbb
dec
jp
cld
ret
xchg
enter
add
xor
aam
and
imul
hlt
jo
mov
stos
and
xlat
fidivs
xchg
mov
mov
in
and
lcall
in
arpl
int3
iret
pop
outsb
std
mov
lods
lcall
fisubl
dec
stc
aad
xor
and
cld
cld
loope
std
adc
adc
or
push
dec
cmpsl
sub
jbe
add
int3
pop
stc
jo
cltd
pop
or
test
xor
in
nop
je
call
jmp
add
fcoms
pop
sbb
sub
cmp
mov
xchg
in
das
fldcw
enter
push
ds
sbb
jne
xchg
imul
push
fs
and
adc
adc
mov
pop
nop
clc
push
loop
lcall
sbbb
inc
loop
adc
and
jecxz
lret
test
cmp
dec
jge
and
mov
nop
clc
mov
dec
cmp
push
dec
ds
add
pushl
or
mov
jns
adc
mov
jl
xchg
int
pop
addb
add
mov
fsubrl
xchg
dec
mov
lcall
pop
sub
bound
test
andb
dec
lret
push
in
pop
and
dec
jnp
pop
pop
mov
lcall
fildll
jo
in
adc
js
movsl
mov
sbb
sub
repnz
call
add
and
pop
add
negl
push
stos
mov
sbb
adc
xchg
into
daa
sbb
add
cmp
pop
insl
cmp
negb
js
cmp
shl
and
add
xchg
inc
inc
lods
and
inc
xlat
push
mov
and
das
orl
xchg
ret
lds
mov
push
jp
dec
clc
repnz
sbb
rcrb
ss
js
dec
dec
lods
sub
roll
lcall
or
mov
pusha
mov
out
jnp
and
and
push
and
pop
shrl
imul
je
or
push
mov
jecxz
cmp
cmp
mov
leave
xchg
and
lea
xchg
imul
mov
or
jge
icebp
call
pxor
and
cmpl
scas
jge
clc
leave
stos
in
and
subb
lahf
negl
ret
cmpsb
and
pusha
adc
enter
xorl
dec
adc
lahf
inc
fildll
add
push
repz
dec
push
or
iret
cmpsb
or
addr16
cmpb
mov
inc
sbb
sub
dec
les
and
cltd
add
adc
mov
mov
lods
dec
mov
pop
add
imul
adc
out
xor
in
push
jnp
scas
inc
cmpsl
aaa
dec
pop
add
fldt
hlt
scas
pop
and
mov
mov
mov
sub
prefetchnta
jge
sub
orb
inc
sub
lretw
loope
ret
aas
mov
test
cmp
adc
pushf
mov
sbb
and
lods
cmc
aaa
dec
es
out
add
adc
cwtl
xor
inc
lods
jl
mov
mov
xchg
call
out
jmp
outsl
fwait
iret
loopne
and
arpl
daa
mov
test
adc
mov
mov
insl
jbe
sub
mov
call
ljmp
iret
test
data16
xlat
ret
fisttpll
pop
test
dec
adc
cld
leave
je
pop
xchg
jne
or
sub
outsl
cwtl
fsubl
repnz
and
andb
jmp
out
push
cmpsb
jns
ret
in
andb
in
lods
sub
mov
std
dec
stos
jae
test
fdivrs
sbb
inc
sub
dec
pop
pop
mov
and
push
jbe
jne
xchg
cmpsl
fnstcw
mov
cmp
cltd
je
popf
jg
movsl
mov
pop
mov
inc
mov
cmp
jg
push
adc
int
loopne
in
add
dec
out
mov
pop
or
add
or
dec
xor
insb
mov
inc
clc
mov
mov
nop
fs
fstpl
mov
inc
fistpl
std
sub
aas
imul
mov
hlt
outsb
adc
fwait
xchg
repnz
cmp
add
jmp
cmp
push
sldt
mov
jnp
imul
sub
sarb
test
inc
sub
jmp
jl
mov
out
clc
lods
cwtl
sbb
cwtl
xor
mov
mov
mov
dec
add
bound
std
lods
enter
pop
stos
sub
cmpsl
dec
enter
xchg
insl
inc
bound
stos
cli
stc
jmp
xchg
sub
pop
or
fstl
lock
mov
cli
daa
xor
sub
or
out
jbe
in
lods
cmp
push
jo
adc
pop
lods
lods
mov
scas
xor
and
or
hlt
push
in
rcl
add
shlb
cmp
and
fs
adc
orl
fidivrl
jmp
mov
jo
lods
sahf
out
mov
int3
mov
adc
jmp
mov
mov
and
lds
test
adc
imul
out
mov
xchg
xor
ret
jbe
or
outsb
je
into
hlt
jecxz
cmp
mov
push
or
test
inc
xchg
cld
push
jl
std
pop
aas
jno
mov
into
dec
xlat
pop
add
inc
xor
mov
cmpsl
aaa
movq
push
cmpsb
xor
mov
fwait
movsb
adc
aas
push
mov
sti
xorb
mov
cmc
cmc
imul
subb
stos
shrb
pop
xor
subl
outsb
lret
movsb
add
addr16
rorb
mov
pop
icebp
sbb
test
fsubl
mov
push
push
pop
bound
and
movsl
add
add
adc
ret
call
mov
push
jnp
xchg
inc
lcall
pop
cmp
sub
xchg
pop
inc
cmp
mov
dec
ret
popl
mov
xchg
xchg
adc
insl
mov
xor
loop
mov
test
cmp
sbb
loopne
push
cmp
xlat
xchg
push
sub
or
jae
sbb
test
push
dec
add
xor
loopne
ret
int
dec
add
sub
sub
jl
add
bound
sub
insb
xchg
outsl
sub
mov
cmpl
sbb
inc
sbb
mov
cmp
push
mov
lret
mov
sbb
int
leave
aad
cmpsl
or
lds
cld
pusha
rclb
rorb
fdiv
sub
aam
cmpsl
jg
or
push
out
or
mov
cmpsl
fdivrp
inc
xor
popf
inc
adc
sub
into
roll
inc
jo
push
inc
mov
mov
rcr
fistpll
push
push
test
sbb
cmpsl
mov
shll
cwtl
pushf
jnp
aaa
sbb
stc
int
cli
dec
popf
jge
jno
in
xor
add
nop
ret
pop
jmp
xor
mov
aaa
lds
bound
cmp
xor
ja
add
addr16
js
dec
mov
dec
inc
mov
icebp
push
mov
std
ljmp
mov
pop
orb
das
loop
aad
lock
sub
mov
dec
pop
pop
pushl
icebp
scas
mov
mov
mov
scas
imul
adc
into
jbe
arpl
jns
ror
rcpps
push
jbe
sahf
aam
hlt
or
add
xor
and
stos
pop
push
dec
dec
ljmp
mov
or
dec
mov
jge
movsb
jo
xlat
fidivs
lea
push
jnp
clc
mov
pop
popa
jne
cltd
pop
ror
xor
inc
addr16
dec
das
lods
mov
or
or
roll
adc
adc
es
call
jae
cmpl
sub
nop
dec
jb
and
scas
add
mov
inc
es
xor
jno
leave
xchg
push
mov
mov
out
int
f2xm1
dec
xchg
mov
mov
das
cwtl
mov
std
sahf
hlt
sub
mov
mov
mov
cmp
dec
cmpsl
add
xchg
mov
jne
jl
icebp
cmp
add
adc
and
and
pop
adc
push
xor
gs
jle
push
gs
ja
xorl
daa
fnsave
sub
lcall
addr16
insl
clc
imulb
sub
mov
jmp
and
push
inc
cmp
and
sbb
push
and
sub
mov
xor
pop
push
imul
pop
iret
mov
mov
sub
mov
out
insl
sbb
imul
out
fistpll
std
jae
je
jp
jo
add
cs
mov
aaa
pop
es
xor
jo
repnz
rolb
clc
mov
xchg
xchg
fwait
ja
aaa
mov
sbb
fsubrl
lcall
cmp
cmp
pop
call
add
mov
push
add
loopne
dec
sbb
push
mov
xorl
lock
aam
cwtl
orb
inc
in
dec
scas
aas
inc
rol
jecxz
add
cmp
pop
ret
imulb
mov
xchg
adc
or
push
inc
dec
sbb
in
and
out
in
push
adcb
out
ja
jb
mov
or
push
test
std
xor
push
jb
or
adc
mov
rcr
clc
out
push
outsb
fwait
pextrw
pop
push
les
stos
dec
cmp
lods
pushf
xchg
lcall
push
nop
out
pop
lock
push
sub
shl
ja
dec
jo
pop
jnp
rcr
dec
cmp
xor
pop
mov
inc
les
pop
push
pop
lcall
lods
dec
push
sbb
jg
or
and
cmp
out
flds
mov
cmp
out
xchg
xor
jg
mov
push
jp
das
jns
add
popf
js
ret
outsb
jne
int
in
lret
enter
outsb
jp
mov
icebp
push
es
lahf
loopne
aas
jmp
in
pop
xchg
mov
xor
rcrl
sub
mov
pusha
fstps
mov
cmpl
outsl
adc
imul
je
fsubrl
sbb
xchg
je
mov
enter
out
mov
test
xchg
mov
sbb
jl
popa
hlt
cmpsb
aas
xchg
xlat
xor
out
push
pop
or
into
les
mov
je
sub
pop
cmovs
loop
dec
hlt
jecxz
out
pop
iret
std
sub
xchg
push
push
les
jno
xlat
aam
sbb
or
inc
fcompl
cwtl
dec
adc
loope
cmovbe
lds
js
pop
repz
xchg
cmp
je
pop
orl
and
stos
icebp
pop
mov
inc
or
insl
mov
add
clc
je
aaa
push
xor
lcall
out
cld
pop
and
ret
daa
imul
jae
out
fistpll
fs
stc
fst
dec
int3
mov
mov
das
scas
mov
jge
add
jp
fmuls
inc
out
sbb
sbbl
cmp
mov
insb
mov
leave
pop
push
test
jnp
push
imul
dec
xor
mov
adc
xor
ret
or
pop
push
add
shlb
sub
and
cmc
mov
inc
inc
jle
jbe
ljmp
xchg
mov
pop
repz
mov
pop
in
test
das
in
inc
movsb
mov
mov
rorl
js
outsl
mov
pop
mov
mov
inc
std
cmpsl
pop
ret
pop
jo
pop
jp
data16
test
das
ja
xchg
xor
sbb
addr16
mov
rolb
add
cmp
push
in
fildll
pop
loopne
xchg
shr
movsl
cmp
cmp
push
inc
sub
popa
iret
test
push
add
inc
stc
fistpl
sbb
push
pop
push
arpl
fsubl
insl
inc
fsubrp
cmp
loopne
dec
bound
cmp
rcrb
mov
movsl
pop
mov
sbb
pop
xchg
cmpsb
add
movsb
cmpsl
inc
pop
bound
nop
jmp
xor
outsb
sub
std
into
jbe
dec
int
add
and
or
loope
or
xchg
lret
cmpsb
pop
mov
pop
aas
jno
sub
jecxz
jb
fistpl
adc
mov
jmp
adcl
popf
add
push
cmp
adc
inc
stos
ds
and
sar
ja
pushf
stc
xchg
pop
fnsave
jg
filds
add
or
dec
loopne
mov
mov
js
mov
insb
out
dec
das
xchg
lmsw
idiv
int3
scas
dec
pop
jl
mov
jae
movups
gs
bnd
mov
nop
dec
dec
cwtl
adc
fisubrl
xchg
xchg
dec
test
add
inc
and
call
std
dec
mov
mov
in
xor
xchg
jle
pmulhuw
in
insb
movsl
sub
and
push
pop
fs
int
pop
in
lea
pusha
fidivrl
or
pop
test
dec
mov
mov
mov
xchg
cld
mov
and
add
stos
jge
add
lahf
lret
jmp
clc
inc
dec
add
push
inc
sbb
xchg
lods
push
arpl
sbb
xchg
cld
sub
push
outsb
jle
xor
call
or
push
mov
fucomi
in
mov
test
mov
cs
test
and
icebp
mov
dec
shll
test
inc
cltd
jbe
pop
mov
cltd
aad
xchg
or
adc
gs
xchg
lahf
jo
inc
test
sub
or
and
aam
sub
jecxz
cmp
pop
pop
mov
xchg
movsl
push
xlat
cli
lock
pmuludq
and
jae
inc
mov
fdivrl
adcb
and
in
cmp
dec
mov
inc
dec
mov
data16
sahf
inc
aas
add
pop
clc
push
insb
jbe
insl
and
inc
mov
cmp
ss
fcoms
push
cltd
jae
je
ret
call
scas
mov
roll
roll
lods
or
cs
cmp
das
cmp
in
jge
pop
aaa
inc
hlt
ljmp
inc
push
adc
adcb
outsb
arpl
jno
sub
shlb
mov
sub
jae
outsl
out
in
inc
lock
jle
mov
cwtl
jle
mov
aaa
or
sub
push
dec
in
add
lahf
mov
es
repz
mov
mov
fimull
or
test
jl
cld
add
mov
mov
cs
xchg
cmp
ret
dec
and
cmp
add
in
in
cmp
jo
pushf
cmc
mov
out
adc
ret
xor
out
imul
imul
mov
test
popf
loopne
jbe
pop
imul
es
or
add
push
shrw
ss
daa
sbb
xor
pop
fs
pop
adc
cmp
leave
dec
jmp
into
and
das
add
mov
add
or
cmpsb
and
lock
jbe
mov
jbe
sub
fcomip
xchg
sub
dec
test
icebp
add
lret
push
clc
add
movsb
xorl
cs
push
cmp
mov
mov
fwait
test
divb
sub
mov
and
stos
add
push
mov
cmp
sbb
mov
pushf
cltd
and
mov
repz
or
gs
es
pop
clc
cs
fwait
ret
bound
repz
dec
push
pop
xchg
jae
push
dec
mov
cmp
or
xchg
jae
pop
stc
loopne
pop
test
jmp
je
scas
fstpl
sub
shrb
arpl
dec
in
sahf
mov
stc
pop
inc
pop
add
adc
cld
pop
pop
outsb
mov
and
inc
mov
outsl
pop
roll
xchg
push
jns
cmp
test
push
pop
add
movsb
xor
mov
mov
mov
xor
adc
xchg
mov
ficomps
fistpl
mov
mov
fwait
push
jo
sbb
sbb
fdivrs
arpl
test
jno
leave
inc
jle
mov
into
ret
lods
lret
lods
mov
add
insb
mov
pop
mov
pop
inc
xchg
stc
movsb
int
ficoml
clc
pushf
push
insl
sbb
push
js
ret
sub
addl
dec
aad
or
test
ja
and
inc
mov
pushf
test
call
mov
pop
xlat
mov
inc
sbb
dec
ja
add
jnp
dec
ljmp
in
in
repnz
jnp
fsubrs
cltd
adc
lods
decb
les
push
mov
dec
aas
ja
jns
mov
jge
inc
mov
movb
cmp
stos
add
mov
add
pop
fisubs
imul
lock
pop
int
jo
loopne
mov
cmp
dec
cmpsb
aas
mov
imulb
divl
pop
add
adc
jb
xchg
sbb
je
push
inc
lcall
mov
sbb
push
sbb
pop
mov
xchg
sub
das
aad
lock
xorl
stos
fstpt
dec
adc
jo
cmpsl
fmuls
pop
xchg
inc
and
mov
fcomps
ret
or
fisubrl
jmp
fildl
daa
rol
pop
out
and
cmp
lds
leave
dec
imul
adc
call
push
cld
pop
out
data16
xorb
add
mov
ljmp
dec
jb
imul
sbb
data16
push
insb
cmp
mov
cmp
cmp
int
push
popf
push
scas
xchg
xchg
xchg
lods
pop
sbb
xor
cmpb
cmp
and
mov
push
lods
sub
xor
xchg
sarl
sahf
fwait
add
hlt
xchg
inc
inc
subl
xchg
out
adc
lds
mov
flds
rorb
lea
aaa
pop
and
or
adc
or
rcrl
jo
mov
cld
and
or
vmovntps
xchg
dec
pop
imul
imul
mov
push
xchg
lods
dec
enter
ja
pop
daa
std
mov
outsb
jp
cmc
sub
inc
mov
add
dec
or
test
pop
xlat
or
pushf
js
or
pop
jns
push
mov
add
or
pop
cld
out
push
pop
clc
lods
mov
mov
int3
aam
adc
adc
sbb
dec
ja
push
outsl
sbb
lcall
rorl
sbbb
mov
test
shr
adc
push
pop
cmp
popf
lods
mov
xchg
out
pop
arpl
inc
imul
jbe
lods
ds
scas
mov
pop
jl
ja
cmp
in
lods
mov
jmp
push
add
mov
mov
lods
fmull
or
into
data16
or
dec
mov
mov
push
sbbl
cld
cld
in
jge
repz
sbb
cmp
cs
fmulp
xchg
xchg
fists
leave
pop
jle
mov
orl
push
sub
mov
cmc
mov
jg
inc
inc
es
int
xchg
js
or
and
out
add
xchg
lea
or
faddl
shll
mov
out
or
add
ds
ss
adc
sub
push
push
fwait
idivb
cmpsb
mov
jecxz
add
imul
add
jb
inc
xchg
xor
or
jg
nop
mov
ficompl
cli
lds
push
test
push
push
fdivs
imul
jg
push
pop
rolb
pop
cmc
push
jo
add
movsb
jae
xchg
lcall
divps
shrb
sub
aaa
jl
shll
mov
mov
mov
test
pop
stos
fdivs
mov
pop
lea
fistpl
std
pusha
push
scas
lods
je
mov
rclb
cmp
cli
push
inc
pop
cmp
pop
sbb
jecxz
dec
push
fiaddl
push
sub
sbb
in
mov
outsb
icebp
inc
mov
sbb
pop
or
jge
imul
lods
dec
daa
loop
mov
test
or
and
add
and
ds
cmp
lds
adc
sarb
push
ret
xor
pop
mov
jne
xlat
mov
dec
and
das
adc
inc
aaa
mov
arpl
inc
int3
ss
push
popa
mov
pop
lret
adc
leave
add
sbb
sar
mov
jge
sarl
or
and
adc
or
rep
push
xor
ffreep
jne
sub
int3
dec
lret
xor
mov
fld
repz
or
sub
add
fcoml
xchg
out
loope
leave
hlt
xor
pop
jbe
dec
xor
in
inc
add
ds
push
cmp
hlt
jge
arpl
jne
cmpsl
jne
jbe
pop
lods
bound
dec
mov
es
push
popf
pop
aad
lea
lcall
sbb
xchg
mov
fcomp
push
push
addr16
push
pop
xor
sbb
mov
sbb
push
dec
in
mov
cmpsl
sbb
scas
outsl
mov
ret
ja
int
jbe
popa
in
and
lahf
mov
mov
pushf
cmp
aas
incb
movsl
jge
filds
push
mov
dec
or
mov
fstpl
sbb
cltd
or
imul
in
faddp
dec
push
test
int
dec
js
mov
xor
inc
mov
dec
inc
inc
int3
push
test
out
xor
outsb
pop
or
lret
adc
add
stos
push
repz
lret
cmpsb
dec
shl
jmp
ja
push
loopne
js
dec
xchg
add
enter
sub
bound
push
adc
adc
mov
out
nop
mov
xor
jo
stc
ss
fstpt
scas
movsb
push
add
add
sub
loopne
inc
pushf
cld
js
addl
aas
cmpsb
aas
loope
add
pop
divl
jecxz
std
repz
jno
call
pop
stos
xor
popa
cmp
and
cmp
sub
mov
fs
or
cli
mov
jne
xchg
data16
ret
cmc
sahf
xchg
dec
in
roll
mov
clc
add
push
fdiv
mov
push
mov
and
xchg
jl
lret
popf
xor
add
in
inc
cmp
pusha
fstpl
js
arpl
mov
cmp
jnp
ror
inc
or
cli
push
nop
lret
out
aaa
pop
sbb
jb
out
test
aam
insl
push
jae
sbb
sbb
xor
cltd
and
xor
cwtl
mov
lds
je
out
dec
cmpsl
dec
pop
sarl
mov
push
inc
das
dec
movsb
push
pop
fsubs
adc
pop
push
adc
lahf
imul
push
ret
mov
sti
push
or
aad
lods
mov
mov
pop
aaa
or
xor
loope
adc
dec
adc
add
push
outsl
adc
or
push
or
test
mov
icebp
fadd
adc
sarb
jmp
dec
mov
inc
inc
jo
lds
jno
or
sbb
mov
outsb
cmp
xor
fdivrp
push
ljmp
or
jae
rolb
insl
mov
imul
jno
xor
mov
addl
fsts
xchg
xchg
push
roll
xchg
stos
mov
imul
dec
xor
lcall
fucomi
or
fst
shll
and
sarb
ret
or
push
jae
hlt
and
popa
aam
cltd
xchg
push
xor
add
inc
rcll
or
push
xor
lcall
cmp
aas
or
sbb
addb
fldt
call
jae
stos
test
enter
mov
xor
cmp
lretw
test
aam
push
dec
cmpsl
ss
xchg
imul
pop
xor
fwait
jno
push
repnz
stos
jnp
mov
mov
ficoms
and
ret
sbb
jecxz
cmp
jb
jl
dec
scas
mov
add
fsts
xchg
pusha
movsl
aad
ss
inc
fsubs
fwait
int
sub
push
jg
adc
mov
dec
mov
sbb
inc
inc
or
jmp
mov
stos
push
inc
push
sarb
out
push
jmp
and
push
pop
or
sbb
cmpsl
cmp
cltd
popf
dec
jge
andl
push
out
add
lods
daa
xchg
push
pusha
cmp
lods
mov
mov
mov
or
add
test
pop
adc
jnp
add
cmp
pop
inc
inc
mov
pop
sub
xchg
insb
cmp
ljmp
or
xchg
stc
pop
jmp
cmp
xchg
jno
fs
push
xor
int
xor
jg
lret
sti
pop
xchg
movsb
cmpl
pop
in
push
loopne
insl
scas
pop
inc
fidivs
xchg
fsubs
mov
mov
stos
inc
pop
cmc
test
push
pop
adc
js
cmp
mov
popf
sub
push
aaa
xchg
push
mov
sbb
add
cmp
pop
call
lods
push
out
pop
imul
xor
xchg
push
loop
ja
loop
lahf
xor
adc
mov
les
out
push
fs
mov
mov
shrb
loop
jle
push
aaa
pop
or
in
dec
push
and
cmp
push
mov
loope
fidivrl
jmp
add
ljmp
clc
addb
dec
cmp
inc
daa
jg
mov
dec
insb
int3
in
int3
rclb
js
loopne
mov
out
inc
mov
xor
scas
jo
test
push
xchg
xchg
push
pusha
push
mov
sahf
pop
or
dec
dec
jbe
pop
cmp
movsl
loop
jl
cli
or
pushf
pop
or
leave
or
xchg
add
addr16
sbb
pop
aam
xor
push
adc
lods
xor
mov
mov
loop
pop
jne
cld
sbb
push
in
jecxz
fstl
les
lea
rorl
jne
adc
sarl
sti
xlat
movsb
cmp
mov
jp
aam
lods
cwtl
js
gs
jb
mov
pop
sub
outsl
test
shrl
adcb
dec
and
sbb
ds
stos
hlt
mov
cmp
pop
inc
xchg
shlb
nop
jecxz
rcrl
pop
xlat
lahf
loopne
sbb
lret
movsb
mov
push
lcall
xor
cmp
sbbl
xor
dec
aad
dec
insl
push
imul
andl
pop
sar
mov
push
adc
out
cmp
adc
idivb
jl
adc
jno
sub
mov
dec
rclb
sub
pop
push
mov
xor
jle
sub
es
adc
dec
pop
mov
addl
push
push
adc
or
jecxz
sti
std
pop
les
push
mov
or
insb
and
fimull
pop
adc
adc
mov
jmp
lock
lahf
into
push
shrb
rcrl
sub
in
push
dec
sub
enter
cmc
mov
mov
mov
ja
scas
incl
and
or
sbb
inc
insb
xchg
fdivl
mov
dec
jnp
aad
lods
push
mov
dec
notl
pop
adc
push
xchg
sub
add
nop
sub
add
mov
cwtl
stos
lea
sbb
jnp
or
iret
mov
mov
bts
test
mov
push
and
out
cmp
movsl
pop
leave
shll
jp
dec
ljmp
clc
jne
jge
mov
inc
mov
push
or
sub
rcrl
movsl
pop
cmp
and
pusha
in
fs
repz
sbb
daa
jmp
xor
into
out
pop
xchg
mov
push
mov
in
and
mov
add
jae
aaa
pop
inc
jb
pop
dec
movsl
dec
or
mov
sub
loop
dec
ss
mov
xchg
pop
mov
insb
popa
push
orb
xor
xor
sbb
pop
lahf
sarb
inc
and
aaa
and
ret
sbb
inc
pop
inc
sub
pop
mov
dec
add
dec
dec
and
out
inc
sahf
popf
cmpl
leave
ficoml
std
mov
or
pop
jb
cmp
call
jl
mov
mov
push
movsl
mov
lods
cmpsl
enter
fwait
cmp
dec
das
in
scas
cmpsb
shl
inc
ds
pusha
dec
and
lea
shlb
push
xlat
or
lods
jns
xchg
sbb
jo
xorl
fidivrs
fs
in
cmpl
lods
sub
movb
inc
sub
enter
test
add
ljmp
in
bound
cmp
ss
push
push
xchg
add
rorl
jbe
fnstsw
fdivrl
loop
mov
test
xchg
fisubs
add
push
sahf
sub
out
les
lds
pop
dec
mov
lahf
xor
dec
call
mov
pushf
test
inc
test
push
scas
fsubs
daa
outsb
fs
fisttpll
or
sbb
popf
mov
scas
div
jl
or
fs
xchg
daa
jno
dec
jno
pop
mov
test
stc
jge
ret
shll
cmp
xchg
or
mov
scas
dec
lea
movsl
arpl
pushf
xor
add
lret
in
add
mov
pushf
xchg
add
shlb
cmp
mov
cmp
dec
mov
mov
xchg
popa
fs
or
pop
jno
iret
inc
jl
dec
mov
lock
adc
pop
xlat
in
lahf
sbb
dec
scas
test
jmp
ds
xorb
mov
aad
stos
nop
inc
xchg
xchg
dec
out
divl
jo
adc
push
add
mov
rcrl
or
jl
aam
adc
mov
call
inc
data16
in
es
mov
mov
inc
mov
movsl
lods
mov
push
decb
pop
mov
mov
add
jp
popf
inc
dec
push
idivl
xor
test
add
fisubs
shl
fistpll
mov
imull
inc
lcall
sub
lods
insl
sub
orl
cmp
rcrb
shll
cmpl
adc
pushf
jb
aas
and
nop
pop
mov
in
xor
cmp
mov
xor
int3
enter
mov
std
mov
in
mov
outsb
and
push
fidivl
or
mov
sti
fadd
mov
or
lods
sbb
mov
pop
jbe
stos
mov
test
lds
xor
mov
cwtl
arpl
add
mov
xchg
dec
cmp
les
test
mov
dec
jnp
cld
idiv
cmpsl
addr16
es
insl
add
jno
addr16
mov
outsl
sub
dec
push
insl
sbb
push
jg
leave
add
adc
pop
clc
repz
inc
fldenv
xchg
lds
pop
jl
pop
insl
jns
les
out
mov
xor
addl
jae
rorl
lock
mov
scas
jmp
es
and
je
mov
cmp
cmpsb
ja
insl
jmp
add
lock
adc
jge
mov
lock
add
stc
pusha
or
push
dec
push
sbb
push
jge
xchg
mov
cmp
leave
insb
insb
mov
daa
push
inc
jge
insb
int3
inc
inc
mov
and
push
fcoms
sti
imul
jns
loop
push
xor
mov
imul
cmp
mov
in
or
xchg
popf
push
ret
loopne
icebp
pop
mov
cmp
sahf
mov
stos
add
lcall
out
int
cmp
in
cwtl
cli
subb
dec
das
xchg
fisubs
hlt
aam
clc
sbb
and
xor
stos
pop
cmp
aad
cmp
jnp
fstpl
xchg
cmp
andb
sahf
scas
add
cmp
sub
leave
ss
pop
xor
sti
inc
pop
sbb
ret
inc
pop
scas
mov
pusha
jb
dec
jp
xor
push
dec
ficomps
scas
push
movsl
into
xor
inc
sub
loopne
int
sub
mov
mov
xchg
jle
sahf
movsl
bound
adcb
adc
leave
aad
mov
or
loopne
push
out
pop
jno
dec
adc
test
sti
shll
js
cmp
jno
sub
sub
cmp
movsl
outsb
dec
les
mov
sti
in
and
stc
cmpsb
mov
mov
outsb
and
mov
incb
or
jl
sbb
fists
fstps
or
test
add
cli
imul
sbb
push
dec
addb
into
test
sahf
cmp
dec
movb
pop
xor
psubusb
fsubrl
insl
stos
add
sahf
lahf
out
or
dec
pop
jge
ss
mov
add
insl
push
or
pop
mov
sahf
add
jecxz
aas
lea
mov
dec
insl
shr
cwtl
pop
stos
dec
ret
mov
mov
insl
add
xchg
mov
dec
sbb
sahf
test
adc
mov
jge
sbb
sub
push
dec
mov
adc
inc
notb
std
shlb
xchg
lahf
dec
daa
in
push
inc
mov
add
mov
test
pop
lods
adc
out
jae
pusha
adc
mov
clc
out
or
lret
orb
mov
jae
cwtl
xchg
shll
daa
mov
mov
decb
jb
movsb
std
shlb
stc
mov
and
int3
mov
clc
pop
jle
add
push
push
repnz
cmp
in
call
loop
rcll
sub
cmp
adc
xor
aaa
mov
mov
inc
mov
xlat
xlat
out
mov
or
outsl
inc
jb
dec
out
mov
arpl
gs
ljmp
inc
dec
daa
ljmp
jno
mov
and
jg
scas
cmp
bound
stos
imul
cltd
into
cmpsl
sub
mov
in
stos
aad
adc
inc
add
daa
jge
jp
subb
mov
lret
rcrl
or
push
sahf
push
clc
fadd
mov
adc
mov
fbstp
aaa
mov
cmp
repnz
pop
movsl
push
insl
dec
or
pop
aaa
leave
jle
mov
push
es
ja
data16
cmp
and
insb
lods
xchg
das
cli
lahf
mov
adc
jmp
dec
movsb
hlt
aam
popf
mov
fstpt
out
push
push
mov
subb
lret
pop
pusha
sti
mov
mov
pop
movsl
dec
dec
test
mov
int3
pop
in
mov
call
cwtl
mov
imul
push
cs
outsb
pop
push
xor
mov
pop
fwait
sub
mov
xchg
frstor
lods
adc
das
mov
out
ja
movsl
sarl
jecxz
push
pop
adc
pop
jno
lods
push
test
stos
sbb
loop
fisubl
gs
aas
mov
cmp
testb
je
push
dec
mov
test
test
sub
arpl
sbb
call
mov
clc
daa
push
inc
int
cmp
mov
or
mov
jbe
mov
or
outsb
dec
pop
jnp
testl
movsl
xchg
repz
negl
gs
outsb
js
or
movsl
mov
mov
cmp
daa
and
cmc
sbb
sub
xorl
xor
inc
je
daa
mov
rcll
pop
iret
lods
cltd
xchg
inc
push
testb
fldl
popf
dec
fistpll
dec
adc
js
xlat
lret
add
jae
in
or
fs
fildl
cltd
or
stos
adc
vmovddup
pop
testb
movb
int
stos
andl
adc
dec
out
and
pop
fucomip
sbb
mov
mov
xchg
dec
push
push
push
stos
mov
xchg
and
adc
adc
and
mov
adc
cmp
pop
sub
loope
sti
pop
loop
push
rclb
movhps
or
jg
inc
mov
push
ss
repnz
xchg
fildl
in
cmp
xor
lahf
mov
push
lahf
jnp
inc
adc
popf
and
gs
pushl
xor
jno
je
je
pop
fwait
or
jg
xor
shrb
fldt
ds
adc
adc
pop
inc
bound
lds
push
sahf
pop
das
fwait
ja
pop
outsb
mov
lret
shrb
ret
mov
and
inc
push
xor
inc
pop
jecxz
rorl
mov
jmp
cmp
dec
adc
cmpsl
lahf
add
pop
fsubs
filds
ret
xor
leave
pop
into
mov
xor
jbe
lods
cmp
fildl
adc
xchg
imul
adc
push
into
xchg
mov
mov
mov
mov
rorl
popa
pop
mov
pop
mov
ret
pop
push
icebp
dec
mov
mov
scas
mov
mov
inc
outsb
sub
jge
les
adc
hlt
add
mov
xchg
push
xchg
push
or
les
lock
add
push
adc
js
jno
sbb
sbb
pop
in
and
pusha
test
aad
rolb
std
dec
lods
xchg
in
pop
aad
sbb
add
lds
push
hlt
pushf
push
sub
push
pop
repz
dec
jne
dec
xchg
cmp
pop
ficompl
jo
dec
push
sbb
hlt
cs
lods
mov
in
shrl
push
push
jg
addr16
addb
arpl
add
in
sbb
mov
jg
and
jp
xor
mov
outsl
push
jp
cmp
dec
das
movsl
xchg
imul
cmp
aam
cmc
xchg
jo
fidivrl
test
loope
fucom
bound
ja
lahf
mov
lret
call
push
inc
xorb
fs
sti
and
lret
sbb
add
cmp
cmp
out
push
lret
add
cwtl
add
cmpb
out
pop
js
insb
aas
cmp
arpl
or
fstp
data16
mov
add
mov
xlat
inc
aas
cmovle
outsb
xchg
cmp
dec
loope
lea
mov
add
push
jmp
adc
push
add
addr16
leave
loop
mov
cli
int3
push
lahf
inc
sub
mov
sbb
pusha
out
lcall
imul
aas
sub
cwtl
fs
mov
jp
jne
sbb
xorb
and
popa
cwtl
or
or
mov
mov
push
dec
into
xor
lds
stos
push
int3
jp
es
repnz
mul
jle
insb
mov
outsb
movsl
nop
incl
pop
or
push
jmp
ret
push
lret
fwait
jnp
lds
cli
push
xchg
jne
xchg
xchg
sahf
std
push
test
jge
xchg
pop
arpl
addr16
xchg
jo
sbb
cmp
in
nop
xor
pop
insb
rorl
ljmp
and
pop
inc
jo
and
aaa
mov
jge
shr
std
and
push
inc
popa
pop
rclb
pop
fwait
add
fstl
push
add
lods
aas
push
cmpsb
mov
mov
add
xchg
stos
or
fistpl
and
mov
test
data16
add
iret
mov
mov
movsb
mov
loope
adc
dec
sub
ret
aad
scas
lods
sbb
xor
gs
inc
cmpsb
dec
xchg
xchg
xchg
sahf
imul
ret
mov
jno
push
test
cs
adc
or
mov
adc
insb
push
xor
out
bound
cmp
push
mov
fcmovne
lahf
cwtl
xchg
loopne
aam
sti
cmp
xor
jle
dec
adc
into
adc
enter
xchg
lahf
xchg
sub
xchg
mov
ja
push
imull
cwtl
xchg
jp
repnz
ret
stos
mov
inc
sbb
inc
jp
stos
inc
stos
xor
shlb
mov
and
sti
push
inc
jg
xor
stos
mov
xchg
fildl
in
mov
shll
pushf
push
lock
mov
dec
dec
cwtl
frstor
cmpsb
push
xchg
jl
mov
mov
cmp
popf
mov
clc
sbb
adc
mov
cmp
lods
push
int3
inc
pop
mov
xchg
mov
jo
mov
popa
xor
addr16
iret
jbe
and
or
rolb
adc
sub
jb
add
repnz
aad
mov
pop
rcrl
outsb
push
les
in
or
jmp
sbb
loop
inc
addr16
pushf
in
push
mov
nop
fwait
out
data16
rolb
and
scas
dec
sti
loope
add
and
imul
mov
pop
outsb
sub
mov
inc
sbb
push
add
adc
ds
cmpsb
insb
dec
jns
enter
and
hlt
test
fistps
rcll
pushf
and
mull
mov
xor
mov
pop
add
push
cwtl
rcl
loope
dec
in
nop
or
popa
cli
loopne
mov
popf
jp
mov
dec
pop
daa
test
into
ss
popf
cmp
adc
add
in
and
adc
fwait
sbb
jge
pop
pop
sub
jg
cmp
pop
cmc
xor
or
jbe
dec
jg
mov
in
pop
add
sbb
adc
stos
push
inc
filds
sub
shl
sbb
sbb
fwait
and
pop
addl
outsl
pop
lods
adc
sub
pop
loope
adc
pop
jmp
jg
jmp
add
daa
cli
jle
sub
scas
cli
bound
push
popa
lods
push
mov
js
divb
or
inc
push
out
jbe
xchg
stos
outsb
pop
enter
push
and
push
repnz
imul
cmp
push
mov
popa
and
test
mov
loope
out
in
mov
pop
dec
repnz
lret
sub
roll
pop
inc
popf
in
imul
and
mov
mov
insl
outsl
cltd
mov
enter
lock
add
add
stc
rcrl
ds
ss
mov
xchg
push
and
and
leave
push
and
push
push
ljmp
adcb
dec
out
or
mov
or
sub
jne
js
sbb
or
jo
xor
sahf
jle
adc
roll
mov
add
and
enter
lods
sub
dec
mov
pushf
jae
xor
cmp
cmp
inc
clc
addr16
xor
mov
out
fidivl
mov
rolb
inc
iret
imul
or
dec
or
mov
push
adc
fidivrs
push
mov
jbe
lret
leave
je
mov
in
outsl
jb
orl
pop
push
push
adc
push
mov
arpl
jne
add
xor
sub
and
mov
mov
movsb
sbb
jae
gs
add
rcrb
imul
mov
pop
mov
jne
mov
mov
cmp
inc
add
adc
dec
jne
sti
push
mov
lcall
mov
dec
outsb
lret
sub
xchg
mov
outsl
xchg
ficompl
sarb
xor
pop
addb
mov
cmp
and
sbb
icebp
sar
aaa
and
xchg
push
xchg
ja
mov
out
or
cmp
xchg
loope
outsl
mov
sbb
xchg
adc
shrl
es
sbb
mov
mov
mov
mov
dec
push
and
ljmp
inc
enter
cmp
push
adc
dec
lds
mov
jo
sub
lret
adcl
test
std
xchg
fidivrl
mov
mov
mov
or
shll
jbe
ret
out
shlb
insb
sarl
lcall
cmp
daa
out
pop
loope
mov
sbb
push
add
fists
jns
push
cld
xor
sbb
cltd
adc
mov
xchg
jmp
mov
orb
aas
add
xorb
ss
dec
mov
arpl
mov
imul
das
lods
nop
mov
fidivrl
mov
or
xchg
arpl
aas
mov
jecxz
stc
or
push
push
das
fmulp
xchg
addr16
push
lods
out
je
stc
jl
add
imul
jns
mov
pop
ljmp
pop
nop
mov
lahf
or
inc
cltd
and
sub
into
test
punpckhwd
add
int3
call
fldenv
hlt
lcall
sub
ss
push
je
inc
jb
mov
mov
jmp
and
dec
push
lahf
loope
mov
adc
outsl
cwtl
cli
enter
lret
js
cmp
addr16
insb
pop
iret
mov
test
xchg
fstl
sbb
pop
loopne
and
imul
push
in
divl
sbb
mov
mov
jp
dec
jmp
stc
or
into
mov
jge
mov
jge
or
add
adc
enter
rorb
subl
adc
xor
adc
fdivs
mov
adc
push
dec
adc
lock
sub
mov
aad
out
sbb
xor
adc
dec
aad
in
jo
outsb
leave
fadds
mov
shll
and
and
shlb
sub
push
in
mov
push
dec
mov
enter
in
int3
xchg
pop
xor
or
pop
or
mov
sbb
outsb
xor
and
jge
xor
std
push
pop
aaa
xchg
outsl
push
jmp
filds
pusha
xchg
pop
cltd
into
dec
fstpt
mov
add
xor
lret
add
iret
aad
in
mov
insl
xor
cmp
cs
push
jbe
mov
test
inc
test
mov
les
in
js
mov
fisttpl
pop
xor
mov
pop
pop
aad
xchg
mov
push
es
add
out
scas
jnp
ret
or
jecxz
cmp
sbb
xchg
mov
xor
push
imul
pusha
std
mull
sbb
enter
xlat
cmc
ret
sub
mov
inc
in
jl
mov
mov
cli
pop
inc
jbe
inc
jnp
sti
scas
cmp
mov
ja
sbb
and
aas
fnstcw
sbbl
hlt
push
add
pop
lds
cmpsl
and
pushf
enter
push
lcall
sbb
adc
inc
in
lods
rorb
jne
mov
adc
popa
xchg
pusha
pop
dec
push
scas
hlt
arpl
repz
xor
nop
and
mov
mov
dec
shll
jmp
das
and
into
inc
mov
jb
ficompl
and
add
dec
push
adc
addr16
or
mov
int3
mov
cmpl
stc
jg
sub
gs
mov
nop
sub
or
push
fwait
cwtl
pop
repnz
adc
xchg
pusha
xchg
mov
dec
sub
mov
cwtl
jp
sub
fmuls
into
mov
adc
pushl
mov
jmp
add
dec
loopne
xlat
cmpb
jbe
rcl
add
gs
in
fwait
cmpsl
hlt
mov
pop
inc
retw
push
test
sbb
xor
cmp
insl
lods
popf
les
ret
and
stos
imulb
push
fs
es
adc
dec
cmp
add
sti
fdiv
rcl
int3
or
add
xchg
add
mov
enter
adc
jg
push
sahf
cli
and
cli
mov
fiadds
push
inc
cli
jns
jne
sahf
shl
daa
lods
sbb
xor
or
fwait
test
push
jb
and
mov
sbb
sub
cmp
xor
sbb
mov
in
xchg
pop
dec
dec
test
mov
cld
pop
jne
out
jnp
lret
jno
fs
ja
mov
xchg
pusha
mov
cmpl
xor
mov
rcr
cld
addr16
add
adc
dec
movq
push
pop
popa
dec
push
nop
aaa
scas
lods
pushl
xchg
test
lods
fadds
jns
mov
xchg
or
aas
in
fcompl
add
leave
in
test
xchg
cmp
mov
pop
cmp
fdiv
fwait
cmc
add
fwait
dec
enter
std
sub
mov
fxam
arpl
adc
or
cmc
dec
xor
cli
xor
add
jae
cmp
cmc
inc
cmpsb
add
das
hlt
aad
xchg
adc
stos
mov
addb
add
incl
mov
fcomps
ss
sbb
cmpsb
push
sti
clc
push
add
out
jae
loope
add
dec
jl
inc
lcall
or
adc
popa
sti
push
sti
dec
mov
xchg
push
sarl
or
ret
enter
cs
and
xor
shll
mov
cmp
adc
aam
fnstenv
mov
nop
movsb
add
push
inc
mov
mov
inc
dec
and
ss
in
dec
sub
in
add
pop
clc
xor
xchg
xchg
cmp
je
jo
pop
dec
push
sbb
rcrb
mov
and
adc
sbbl
mov
mov
lods
in
mov
stc
fidivl
xchg
mov
push
in
iret
sbb
inc
xor
jns
inc
cmpsl
je
imul
mov
mov
and
sub
mov
jmp
pop
cmp
jl
sbb
jns
lcall
movsl
cwtl
imul
and
mov
xchg
loopne
inc
loopne
pop
dec
mov
rcrb
xor
push
int
sub
je
adc
pcmpeqb
or
mov
enter
jae
lea
jmp
std
loope,pn
inc
movsb
or
loop
stc
mov
pop
add
call
sbb
xchg
sub
push
xchg
mov
pop
mov
cld
jnp
insb
xchg
push
ror
mov
adc
sbb
nop
push
das
clc
sbb
or
add
test
jmp
inc
mov
outsb
fimuls
inc
mov
std
sbb
xor
jno
inc
pop
jns
mov
mov
mov
or
fnstsw
mov
sub
cld
cmp
loop
fimuls
pusha
mov
fdivl
repz
or
das
add
dec
push
xchg
ljmp
mov
sti
push
scas
fldt
bound
pop
add
push
cmp
mov
rol
or
push
in
xor
repnz
or
push
jo
mov
loop
loop
pop
mov
lret
in
popa
sub
int3
sbb
into
sub
push
add
insl
sbb
mov
jo
jecxz
xor
dec
mov
cmp
loopne
cmp
bound
sub
std
sti
popf
and
xchg
aam
push
jecxz
xchg
mov
mov
cmp
or
test
bound
das
aam
mov
test
cs
add
xor
lods
dec
xchg
adc
sub
rorl
mov
clc
pop
repnz
or
pop
mov
hlt
xchg
jp
lods
out
sbb
jae
inc
inc
test
add
xchg
js
mov
push
mov
sub
jle
xlat
test
push
mov
loop
sbb
out
adc
fildll
jnp
movsb
xchg
in
movhlps
or
mov
fmuls
pop
pop
mov
mov
iret
out
loop
sub
lds
mov
daa
jno
adc
push
imul
mov
popf
mov
repz
test
inc
xchg
fucomp
cmp
scas
jnp
sti
mov
repnz
adc
iret
pop
jns
push
or
nop
insb
gs
pop
sub
dec
fdivrs
out
idivl
ljmp
outsb
mov
dec
outsb
mov
movsl
mov
cmp
sub
push
lret
sub
scas
pop
or
dec
testb
loope
mov
inc
lods
dec
ljmp
popa
shrb
sub
loopne
cli
in
cmp
rclb
add
xor
scas
mov
add
mov
dec
subl
xchg
mov
movsl
pop
dec
mov
xchg
xor
movb
roll
or
push
and
cld
xor
and
xor
and
adc
repz
addr16
xor
mov
push
mov
lcall
shrb
push
fs
imull
jge
in
negl
les
pusha
push
cmp
mov
and
cmp
mov
ds
pop
out
gs
loop
dec
stos
into
data16
xlat
sbb
movsb
jle
jmp
cli
adc
movsl
cld
jns
lcall
orl
aas
or
sub
mov
xchg
mov
mov
fmull
neg
jmp
add
nop
and
cmp
inc
xchg
xchg
push
in
dec
xchg
pop
and
dec
out
mov
sarb
movsl
popa
and
adc
sbb
pop
fldenv
or
insl
xchg
fstpt
inc
xchg
lock
addr16
aad
add
mov
in
mov
mov
loopne
fwait
or
aas
xor
pop
fistpl
xor
push
lods
lahf
sbb
in
push
add
loopne
nop
cmp
rcr
outsl
lahf
in
pusha
pop
mov
sbb
add
or
sbb
jb
in
or
fdivrs
cmpsb
into
and
daa
mov
sahf
adc
cli
xchg
adc
sbb
mov
jmp
pushf
repz
cmp
xchg
shlb
iret
fwait
mov
or
cmc
mov
call
mov
out
mov
daa
pushf
add
cmp
outsb
inc
sbb
push
jmp
int3
into
jns
mov
insb
push
imul
test
inc
ljmp
mov
nop
dec
lcall
iret
push
std
mov
je
add
and
enter
cmp
pop
mov
mov
or
icebp
push
and
cmc
sub
pop
call
cld
dec
je
bnd
jns
sbb
inc
out
push
out
xchg
mov
imul
dec
xor
stos
fmuls
js
xor
bound
sub
in
mov
lods
test
mov
leave
mov
enter
pop
mov
mov
int
adc
stos
mov
jbe
adc
rcrb
adc
call
or
hlt
adc
insb
stos
pop
and
cmp
sbbl
movsl
dec
nop
xchg
adc
add
in
std
inc
outsl
icebp
inc
pop
sbb
or
sbb
sub
mov
fldcw
cmpsb
jg
call
inc
sbb
jle
pop
outsb
cmp
rclb
mov
movsl
aas
push
xchg
or
cltd
out
je
jne,pt
cs
jecxz
out
mov
stc
mov
mov
xor
jge
jge
decb
dec
lea
into
or
mov
fwait
aad
notb
inc
icebp
pop
adc
cli
dec
mov
cmpsb
testl
in
out
out
out
mov
int
or
sbb
ficomps
xor
cmp
fistl
scas
jge
adc
xchg
fstpt
xchg
ja
and
mov
add
jmp
jnp
and
xor
mul
test
int3
xchg
and
clc
insl
pop
dec
mov
std
mov
icebp
push
das
outsl
mov
test
aad
mov
lret
or
cs
mov
clc
jns
repnz
jb
jno
ja
fldenv
and
fdivrp
mov
jno
fcompl
xchg
fs
pop
testl
aad
sahf
dec
xchg
inc
pop
andb
addr16
lret
out
ja
cli
mov
dec
lock
rcrl
test
lds
shrb
and
mov
and
jae
adc
fst
pop
push
jg
mov
cwtl
in
movsb
push
fmull
sti
lods
and
scas
jecxz
adc
pop
hlt
pop
cmp
push
mov
pop
je
fists
out
bound
jo
and
insb
sbb
add
jo
jno
mov
mov
daa
negl
mov
or
out
or
enter
sti
repz
call
outsl
fidivs
inc
adc
push
xchg
sbb
arpl
fsts
es
lock
fdivrl
pop
call
pop
jnp
dec
dec
into
movsb
lods
pop
mov
lahf
fisttpl
aad
adc
fwait
ljmp
pop
cltd
aad
xor
lret
mov
mov
ret
dec
mov
outsb
les
pop
and
cmp
call
cwtl
das
sbb
cld
xchg
mov
xor
sub
pop
cmc
mov
mov
pop
lahf
in
es
xlat
in
cld
test
push
adc
or
insb
xchg
inc
in
test
js
movl
das
sub
int
add
insb
jge
ds
movsb
pop
jp
mov
xchg
cltd
test
iret
mov
sub
lahf
xor
xchg
stos
addr16
leave
cmp
repnz
repnz
movsl
shll
jle
mov
sbb
mov
cwtl
es
ror
mov
dec
mov
sbb
ss
dec
std
stc
out
out
es
in
fbstp
sbb
shlb
cmc
mov
pushf
push
jnp
sti
sub
mov
pushf
outsl
pusha
aad
sbb
iret
pop
xchg
sub
push
in
movsl
cmp
pop
dec
es
pop
test
push
mov
fisttpl
push
bound
rorb
jae
push
sbb
xchg
aad
and
out
stos
adc
xor
fisubrs
sbb
xorb
and
sbb
in
xchg
imul
mov
and
loope
sbb
pop
clc
mov
cmp
fwait
and
adc
aaa
mov
andb
mov
outsl
out
adc
jle
addr16
dec
ret
lahf
movsb
jmp
cmpsb
cwtl
push
or
xchg
xor
insb
pop
pusha
or
dec
call
adc
xchg
lcall
cmpsb
dec
inc
sub
jo
pusha
xor
push
push
cmp
pusha
xchg
push
es
fwait
ret
lahf
in
xor
outsb
ljmp
xorb
push
imul
popf
clc
into
dec
jb
cs
out
pop
fstpt
insl
ret
popa
insl
mov
loop
aad
sbb
adc
and
inc
ret
and
jnp
scas
mov
dec
push
nop
jns
stos
and
mov
inc
loope
jb
and
mov
sbb
inc
and
sbb
and
sahf
push
cmp
xlat
add
lret
push
mov
lds
fcmovnu
loope
push
sub
cmp
jnp
aaa
inc
sti
lret
mov
add
ss
mov
lret
and
pop
sub
mov
in
imul
int3
repnz
xchg
jp
sbb
inc
jecxz
mov
ror
inc
sbb
cmp
fdivl
test
mov
inc
dec
jmp
xor
mov
arpl
mov
xor
shrl
mov
mov
dec
jecxz
mov
shlb
nop
add
sbb
movsl
bound
mov
add
cli
inc
push
jecxz
add
mov
cwtl
mov
pop
adc
push
push
adc
pop
and
push
push
add
mov
clc
lret
cs
clc
adc
into
mov
cltd
push
sub
inc
xchg
mov
es
cmp
jl
imul
stos
je
ljmp
insb
add
push
dec
stc
dec
in
jbe
cmp
xor
sbb
je
bound
cmpb
popa
mov
push
push
fiaddl
push
add
outsl
into
loop
push
cmp
out
push
pop
cmpsb
cmp
int3
outsl
adc
adc
popf
jno
je
mov
pop
mov
mov
push
push
in
adcb
js
xorl
sarb
pop
jnp
xchg
or
mov
js
negb
mov
inc
pop
pop
js
add
fldt
bound
xlat
rcrl
mov
in
xchg
sbb
lods
std
sbb
mov
adc
and
jmp
fimull
sub
dec
fidivrs
push
jae
mov
sub
dec
enter
xor
cs
ja
sti
mov
fisubrl
bound
call
loopne
xor
or
jns
xchg
ljmp
inc
popf
jp
dec
lret
hlt
xorl
mov
sub
mov
pop
cli
mov
dec
xor
push
outsb
rorl
or
rcrb
mov
int3
int3
inc
lahf
js
sbb
inc
je
jl
or
jmp
jae
test
push
jmp
mov
push
loop
mov
repz
add
push
push
inc
outsb
mov
cmpsb
mov
data16
add
jg
push
sub
xchg
outsb
mov
iret
pop
mov
loopne
data16
jle
loope
enter
push
scas
sub
and
aad
cmp
jecxz
cltd
jb
gs
outsb
out
mov
or
stos
xor
addl
ret
fnsave
scas
sbb
pop
cmp
mov
pop
loopne
push
push
repnz
imul
paddsw
xor
loope
xor
mov
dec
sbb
jae
sub
push
mov
xchg
divb
jp
mov
hlt
ljmp
add
es
push
sbb
daa
sarb
fs
and
outsb
scas
mov
loop
lret
in
gs
jecxz
enter
push
add
push
jnp
pushf
jb
adc
cltd
mov
xor
call
jmp
repnz
mov
test
pop
push
in
fwait
sbb
inc
roll
mov
jge
stc
xchg
push
shrl
subl
xor
and
fdiv
jmp
mov
mov
jge
insb
test
jno
push
inc
push
fwait
xor
jle
xchg
pop
dec
jno
sub
xchg
jg
add
popf
lods
sbb
rol
movsl
ja
fisttps
imul
aam
dec
and
inc
call
fisubrs
movsb
push
test
and
mov
push
push
jns
xor
add
cli
bound
scas
stos
xlat
sbb
xor
push
clc
pop
mov
shrl
hlt
inc
repz
mov
mov
mov
xor
addl
and
dec
or
out
sbb
loope
mov
cmp
ds
pusha
xchg
inc
add
repz
and
sub
addr16
sbb
jns
fcomps
into
mov
lods
push
dec
push
loop
bound
add
loopne
or
add
inc
add
mov
add
mov
adc
ljmp
notb
movsb
int
cmp
jecxz
sahf
sarb
xor
xchg
das
xchg
inc
xor
or
daa
inc
mov
mov
dec
pop
mov
push
sarl
insb
cmc
sbb
xor
xchg
daa
jo
inc
ror
fbstp
stos
xchg
push
lock
jl
mov
movsl
stos
lock
and
dec
int3
xor
loope
sbb
or
lret
or
lcall
filds
xor
push
imul
movsl
shll
push
xchg
ds
pop
cmp
fdivl
mov
xor
es
pop
cmp
cmp
jecxz
loop
repz
mov
fnstsw
pop
sub
dec
lods
int
ljmp
cmc
das
jbe
insb
lcall
ja
inc
dec
and
into
or
inc
sbb
hlt
jb
sahf
call
enter
mov
mov
bsr
enter
gs
call
mov
inc
dec
int
test
adc
andb
popa
jae
nop
pop
pop
sub
add
movl
add
cmpb
mov
pusha
mov
adcl
push
xchg
jnp
fs
add
clc
cmp
or
out
xlat
repz
fcmovbe
or
aam
mov
sbb
int3
fs
xchg
mov
loop
cwtl
lock
push
test
addl
addl
push
mov
in
jne
dec
add
jmp
ror
ret
imul
xlat
fldenv
pushl
xchg
ds
iret
test
loopne
sub
gs
cmp
and
cmp
sbb
xchg
call
mov
add
data16
aad
jnp
pusha
mull
in
push
mov
jno
add
fistpll
divl
sub
rorl
daa
cli
push
test
sub
lods
adc
push
inc
lret
jno
cwtl
pop
mov
push
daa
sub
out
call
inc
popf
iret
pushf
inc
stc
mov
xchg
test
daa
cmp
sub
out
xchg
lock
mov
mov
in
es
dec
aas
inc
std
pop
lods
sub
dec
cmp
inc
mov
mov
and
and
mov
pop
pop
cs
out
out
scas
xchg
push
icebp
int
and
jecxz
out
mov
test
call
jp
pushf
test
idiv
and
xchg
lret
mov
sub
loopne
cmp
aad
jae
gs
insb
cs
in
lods
sub
adc
adc
xorl
cld
xchg
or
cmc
lock
push
ja
push
pop
pop
inc
stc
mov
lahf
icebp
inc
and
and
push
scas
int
sub
fndisi(8087
jecxz
and
cmc
and
pop
int3
fadd
shr
inc
jbe
popa
bnd
cmpl
mov
inc
adc
mov
and
xchg
xchg
shrb
div
add
mov
dec
cmp
mov
icebp
xchg
mov
and
call
xchg
pop
add
enter
loopne
sub
fwait
sbb
lret
lahf
gs
and
jnp
cmp
mov
cwtl
push
mov
mov
adcl
mov
jl
jl
jo
lret
addr16
movb
mov
jns
imul
sub
jne
aam
pop
push
or
mov
or
test
enter
inc
fsubrl
into
xchg
mov
adc
outsl
push
sub
adc
outsl
repnz
lods
test
test
dec
jecxz
fisubrl
fstl
addr16
aam
add
mov
hlt
or
pop
mov
rorb
cmp
dec
cmpl
movsb
or
jne
testl
pop
out
pop
sub
mov
xchg
movsl
and
pop
and
js
das
stos
push
inc
addb
xor
sbb
adc
fwait
js
in
call
xchg
loop
stc
aam
sbb
divb
mov
mov
inc
and
fsubrs
push
call
or
outsb
mov
push
inc
add
sub
ljmp
push
xchg
cs
mov
inc
lret
and
mov
andl
add
or
push
mov
sub
mov
mov
out
cmp
addr16
filds
ror
add
or
and
lds
fildll
in
sbb
push
jno
loopne
inc
push
pushf
lods
ficoml
xchg
jae
mov
jle
jmp
out
push
lea
test
dec
xchg
mov
mov
aam
add
cmp
pop
ljmp
add
aas
enter
scas
imul
jmp
jb
int3
pop
scas
jns
mov
popf
iret
dec
pop
pop
jecxz
shl
jecxz
loop
js
jbe
adcl
je
test
movsl
add
test
mov
adc
sbb
popf
or
cli
xchg
xchg
bound
lods
sub
in
std
jg
dec
mov
movsl
xchg
jge
mov
push
test
jge
fdivl
adc
mov
mov
int
jb
pop
dec
insb
shll
push
mov
mov
jp
ror
xor
xor
sbbb
lahf
dec
xor
inc
push
mov
and
xor
pop
cmpl
test
pop
mov
fcomp
scas
cltd
mov
filds
sbb
push
and
test
or
popf
inc
push
ja,pn
mov
xor
pop
ret
sub
push
inc
sub
je
add
pop
lret
xchg
js
fadds
notl
and
jae
sub
inc
xor
cmp
add
clc
outsb
addr16
sbb
cmp
push
addb
sbb
jbe
jl
ljmp
popf
int
out
bswap
jno
dec
mov
xor
push
adc
dec
mov
xchg
aas
loopne
pop
and
or
push
test
pusha
add
xor
or
cmp
pop
cwtd
jge
dec
sbb
cs
pusha
mov
jo
addr16
mov
cmpsb
cmp
dec
xor
jl
and
loopne
jae
adc
push
push
mov
mov
fisubrl
ds
fs
fwait
aam
mov
inc
add
dec
pusha
jp
jo
sbb
mov
repz
aam
xchg
dec
and
adc
sub
arpl
push
les
fsubrs
sub
popa
fs
dec
loopne
push
repz
xchg
xor
cmc
sub
xorl
sbb
shlb
pop
push
mov
stos
cmp
cwtl
std
mov
pop
shrl
fistpl
cmpsb
sbb
ret
mov
xchg
test
xchg
push
out
fwait
jbe
mov
lahf
insb
push
push
les
data16
lret
push
lahf
les
ljmp
cmovb
repz
cmp
je
mov
push
hlt
popf
push
pop
rorb
aaa
js
icebp
jmp
sbb
stos
xchg
xchg
aad
popa
mov
push
ret
sahf
pop
lahf
sbb
fildl
mov
dec
pop
or
mov
cli
int3
sub
adc
dec
dec
stos
loope
sbb
gs
outsl
sub
mov
addr16
lods
sbb
jmp
daa
sub
leave
in
push
out
dec
daa
adc
xchg
mov
sub
sbb
orl
outsl
mov
push
mov
js
cld
mov
cwtl
subb
or
add
mov
ret
push
inc
testb
popa
sbb
adc
lret
adc
adcl
or
mov
fnstenv
call
leave
je
insb
pop
cmp
es
scas
ror
lea
and
addr16
out
scas
adc
jno
fldcw
fistl
push
sub
mov
and
sub
es
push
xchg
sti
jne
lods
loop
cltd
or
push
in
pushf
sahf
inc
sub
xlat
sbb
das
mov
inc
sbb
xchg
je
sbb
adc
pusha
ret
mov
sub
or
cmp
or
js
out
mov
shlb
sub
or
andb
cltd
cli
dec
sub
fwait
test
mov
sbb
mov
outsl
shl
call
inc
inc
out
mov
imul
dec
and
mov
add
pop
mov
xchg
mov
cmp
arpl
shlb
jno
repnz
icebp
fcompl
pop
inc
test
lret
inc
insb
push
sbb
hlt
pushf
lds
lea
jne
pop
ja
mov
std
or
xchg
or
inc
sbb
cmp
popf
test
adc
ror
icebp
call
lock
lock
nop
in
jmp
cmp
push
inc
xchg
push
std
mov
lods
dec
in
pop
lcall
sub
sbb
mov
fs
sbb
dec
sbbl
and
popa
ss
lcall
dec
lcall
or
cmpsl
addr16
pop
jp
sahf
lcall
and
cmc
imul
mov
xchg
insb
and
push
mov
pop
xor
pop
in
clc
lods
clc
pop
push
jno
mov
inc
inc
cltd
imull
mov
xchg
xchg
ds
data16
sub
xchg
mov
fwait
insl
mov
mov
adc
cmpsb
or
xor
shll
sahf
mov
inc
out
stos
inc
mov
mov
add
jns
pop
and
mov
cmp
mov
add
pop
ljmp
insl
push
iret
xchg
data16
add
push
jns
movsl
pop
dec
stos
add
xor
nop
xchg
icebp
mov
outsl
mov
shlb
es
insb
movsl
xor
outsb
and
mov
aas
aaa
inc
push
dec
push
popa
pop
sbb
cli
pop
xor
push
in
xor
int
xchg
sbb
test
xor
arpl
jge
cli
cmp
movsl
push
pop
and
loop
dec
xchg
cs
popa
out
mov
jnp
lahf
hlt
imul
mov
imul
mov
dec
jle
lock
sub
adc
or
sbb
loopne
lret
shlb
fdivs
stos
or
mov
jne
mov
mov
fstp
push
jb
or
jle
mov
cltd
test
pushf
push
lods
xor
cmp
shrl
cmpsl
inc
push
sbb
cltd
ds
cwtl
cmp
add
add
in
or
cmc
cmp
std
and
xorl
rcll
push
shlb
mov
mov
jae
mov
pop
push
out
jl
sahf
pushl
lahf
push
je
out
lods
pop
push
mov
jno
sarl
jecxz
cmp
push
mov
mov
inc
sbb
and
ret
pop
jns
and
xor
push
cmp
and
ja
in
mov
cld
lea
enter
movsl
adc
icebp
pop
scas
lahf
sahf
rorb
jns
pop
lds
fucomi
mov
jle
pop
mov
jp
iret
lea
dec
fcmovb
lret
jb
cmp
adc
dec
cwtl
mov
cs
stos
inc
cwtl
sub
or
mov
adc
into
lods
fcomip
sub
jg
dec
cli
pop
sub
mov
pop
add
push
andl
add
xchg
xlat
cmpsb
jnp
insb
popf
mov
mov
lock
push
shll
inc
aad
in
stc
or
outsl
mov
pop
into
xchg
test
cltd
ret
xor
popf
insl
add
aaa
inc
mov
pushf
mov
and
int
or
xor
insb
sub
out
sbb
xor
divl
rdtsc
call
lods
add
mov
xchg
inc
aam
jl
push
mov
lahf
jge
xor
inc
fidivl
imul
mov
cmpsl
loope
enter
or
ss
std
shl
sti
and
mov
push
cltd
fldt
inc
pusha
cmp
push
fcomip
dec
mov
or
stc
add
popf
cmp
js
das
or
loopne
add
jg
stc
pop
mov
xor
adc
aas
lock
addr16
iret
es
mov
inc
and
cmp
lock
and
or
out
push
loope
decb
mov
test
or
dec
jae
sahf
imul
pop
movsl
je
sbb
mov
data16
in
push
mov
xor
push
scas
push
xchg
or
push
clc
leave
adc
sub
shl
jae
push
outsb
sbb
test
sub
push
popa
insb
mov
pop
fdivrs
jle
add
cmp
je
es
test
rcrb
dec
mov
adc
dec
mov
push
xchg
and
add
jle
cmc
sbb
nop
and
xchg
pop
mov
imul
mov
cmp
or
xor
outsb
or
jnp
pop
adc
jae
inc
mov
jmp
pop
push
lods
dec
fsubrs
roll
add
adc
test
sub
push
dec
pop
popf
xor
mov
mov
inc
mov
lods
sub
xor
jge
outsl
fstl
sbb
bound
or
xchg
repnz
mov
push
push
sub
jb
test
mov
ja
mov
inc
imul
cmp
dec
mov
sub
mov
jmp
add
cmc
lcall
sub
cs
dec
add
iret
insb
call
xor
sub
and
adc
es
xchg
inc
lock
sbb
nop
pop
inc
gs
add
and
sub
lods
inc
sti
cmp
stos
pop
les
or
lret
add
daa
inc
dec
add
int3
cld
mov
xor
loope
outsl
sub
out
pop
pusha
pop
ljmp
in
mov
ljmp
inc
xchg
fsubl
iret
loop
jl
jb
lock
and
pop
push
jl
push
mov
add
jb
jle
dec
ds
xor
stos
jnp
and
inc
jmp
mov
in
loope
popf
ja
push
mov
pusha
fldl2t
das
shll
hlt
addr16
add
in
push
shll
push
mov
sbb
adc
mov
in
mov
in
int3
lock
popa
and
pop
test
stos
jecxz
mov
pop
lock
into
movsb
lods
and
mov
and
mov
sub
dec
in
addl
push
or
movsl
les
ss
ss
xchg
sqrtps
fcoms
cli
inc
orb
in
cld
xlat
push
into
and
mov
lock
dec
dec
call
cmp
dec
push
dec
stc
inc
es
popa
adc
dec
out
or
fnstsw
insl
xor
push
xor
stos
jl
sbb
aam
aas
lcall
xor
stos
push
dec
sbb
mov
dec
push
mov
test
xlat
rorb
popf
push
push
popa
jmp
sbb
out
bound
call
aaa
cmp
mov
fdivrs
push
addr16
sub
push
clc
sub
js
push
movsb
mov
inc
jge
pop
movsl
jnp
jecxz
pusha
adc
movsb
mov
jae
inc
aas
mov
pop
push
movsl
pop
outsb
mov
arpl
pushf
setno
repz
push
popf
out
notl
or
lcall
jnp
loope
popf
add
xor
add
xchg
in
xor
aad
movsb
cltd
xchg
movsl
arpl
aad
mov
fisttpl
jp
outsb
or
mov
sub
sub
out
jmp
hlt
jp
test
sahf
fistpl
xor
xor
imul
xchg
imul
insl
cld
sahf
out
xchg
lods
sbb
stc
jns
sbb
lret
movsl
hlt
jp
out
jl
xlat
test
xor
add
mov
cld
leave
aam
cmp
cwtl
stos
xor
dec
push
cmp
sub
shrl
lret
clc
jecxz
or
cmp
outsl
push
or
add
xchg
jmp
lahf
dec
jae
fstpl
movsb
in
mov
mov
cmp
mov
imul
mov
call
std
add
mov
sub
movsl
pop
ja
jle
dec
pop
jae
imul
jle
aad
dec
lods
ss
enter
mov
inc
push
out
xor
jmp
mov
pop
sub
mov
sbb
fisubrl
loope
sub
dec
mov
pop
mov
adc
jno
idivl
adc
outsl
jmp
out
mov
hlt
add
fdivs
mov
jne
inc
pop
mov
xor
xchg
test
dec
cmpb
hlt
ja
cmpsb
repz
dec
xchg
cwtl
lock
fucomp
mov
ja
pop
sbb
arpl
inc
out
scas
sub
inc
ja
mov
lret
shl
sub
out
mov
add
xor
dec
inc
pop
call
data16
popf
pop
in
adc
dec
leave
sahf
arpl
pop
jae
cmp
mov
or
xor
push
pop
mov
ret
cli
ficoml
mov
fbstp
fwait
out
sub
call
xor
adc
pop
shrl
and
daa
cmp
pop
push
mov
int
mov
mov
pop
pop
push
scas
repz
mov
push
jb
rorl
test
add
out
ss
push
outsl
test
mov
lret
adc
jle
xor
daa
cmp
repnz
fcmovnbe
aam
push
mov
lahf
and
aam
inc
sub
dec
xor
cmpsl
sub
xchg
inc
cmpsb
jl
cli
jmp
pop
xor
pop
aaa
adc
cwtl
pop
jo
mov
adc
add
push
lret
out
out
xchg
dec
push
mov
adc
push
jmp
xchg
xchg
inc
inc
pop
pushf
xor
xchg
dec
icebp
push
loop
pop
mov
jnp
in
das
ss
std
dec
pop
sbb
or
inc
add
repnz
push
enter
jno
outsl
nop
insb
pop
add
sbb
call
inc
push
pop
push
jne
arpl
inc
sarb
cmp
sbb
loopne
mov
xor
mov
adc
cli
sub
stc
in
jge
inc
std
sarb
cmp
or
cmp
loop
ficompl
push
fldln2
pop
jno
push
sahf
pop
test
imul
push
sub
jp
push
dec
insb
or
sub
push
add
jnp
xlat
fists
jno
mov
jns
pop
cld
aad
sbb
add
push
mov
dec
xchg
jmp
add
out
out
push
lock
sbb
or
aam
mov
es
sub
ja
adc
call
jno
jnp
pop
dec
sub
sbb
sti
add
imul
pop
xchg
aas
stc
aad
adc
je
adc
outsb
into
push
dec
jmp
mov
mov
and
iret
mov
call
gs
pop
or
or
mov
fisttpl
pop
mov
mov
out
jae
mov
dec
xorl
lods
cwtl
add
push
add
mov
aas
rcrl
divl
cmpsb
arpl
lods
lock
das
sbb
mov
repz
sub
and
hlt
inc
test
test
sub
add
push
jp
push
or
dec
scas
dec
ljmp
lret
add
inc
fwait
iret
pop
lock
stos
lret
call
mov
sub
xchg
adc
inc
push
repz
sub
ljmp
sbb
or
lea
sbb
pop
pop
dec
sbb
ljmp
fstp
subl
mov
or
nop
mov
rolb
dec
addr16
outsl
insl
mov
icebp
aas
dec
test
sbb
push
shr
and
cmp
sarl
mov
orl
and
cld
pop
popa
cmp
mov
fstpt
loopne
sbb
cs
dec
popa
jo
adc
bound
ljmp
mov
pop
jecxz
mov
andb
movsb
insl
or
push
push
in
adc
push
gs
or
das
fiaddl
sbb
scas
leave
hlt
mov
jle
rcr
or
adc
repnz
out
xchg
lods
jbe
icebp
xchg
push
and
push
cli
sbb
aad
fucomi
sahf
sbb
add
mov
bsf
repz
clc
popf
mov
pop
xchg
push
shr
ret
inc
jmp
lock
xchg
imul
nop
lcall
enter
out
inc
xchg
stos
dec
dec
xchg
stos
incl
sub
inc
sbb
lahf
and
in
ss
fildl
sbb
subl
fstps
sti
cmpsb
dec
dec
test
push
mov
lahf
cmp
clc
out
dec
negl
fs
das
push
enter
fucom
mov
add
fidivrs
adcl
cmc
stos
and
out
add
bound
cwtl
xor
mov
adc
popf
xchg
inc
dec
xor
pop
mov
leave
imull
rcr
loop
lock
int3
pop
faddp
scas
lret
mov
adc
inc
ffreep
std
into
cmc
xchg
jge
pop
arpl
lock
mov
enter
xchg
shrb
dec
inc
pop
pop
and
gs
pusha
lret
mov
push
imul
xor
jne
push
and
leave
adc
inc
mov
rcll
cmp
mov
add
outsl
mov
fnstenv
int
pop
loop
ja
sbb
jno
and
mov
das
sbb
nop
out
test
and
adc
mov
adc
mov
jge,pt
cmp
call
ja
imul
xorb
cmpsb
das
and
in
ror
xchg
shll
push
testb
dec
push
test
sub
sub
jbe
adc
cmp
cmp
data16
loope
pop
data16
getsec
mov
leave
xchg
das
xor
lock
sbb
cmp
out
cli
dec
sbb
dec
mov
ds
popf
loopne
fistpll
mov
and
adc
add
jecxz
sbb
inc
mov
into
lods
inc
add
lea
jle
push
push
xchg
mov
pusha
sbb
mov
pop
mov
fnsave
mov
fcompl
add
loope
repnz
fidivrl
and
cmp
pop
mov
insl
sbb
mov
lds
cmp
mov
pop
push
shll
cmc
ds
mov
add
data16
imul
es
xchg
push
in
ss
cmpsl
stos
bound
shrb
sub
xor
jb
movb
flds
mov
in
enter
cmp
dec
lock
add
imul
inc
jge
dec
or
mov
pop
sbb
xchg
in
rep
ror
leave
stc
test
sbb
pop
dec
and
or
fwait
dec
push
add
push
popa
enter
jb
shr
roll
je
sub
push
fisubrl
xchg
int
fildll
inc
addr16
sbb
mov
enter
mov
sahf
leave
sbbl
rorb
negb
iret
sub
mov
mov
int
stc
and
int
inc
cmp
mov
jb
push
sbb
movsl
and
push
push
ret
mov
and
dec
lock
in
lock
test
mov
add
push
push
sahf
cltd
push
jge
push
pop
pop
sbb
and
jae
sti
adc
push
or
jecxz
int
adc
arpl
loope
xor
in
xor
pop
sti
lret
sbb
in
mov
xchg
out
loope
mov
das
jns
mov
sub
inc
sahf
xchg
push
inc
jno
mov
mov
sarl
add
pop
inc
lahf
fildl
stc
cltd
mov
push
jbe
lods
or
mov
inc
adc
push
test
or
shrl
push
int
sbb
ror
adc
xlat
push
nop
sub
dec
idivb
bnd
xchg
add
jno
repz
jne
inc
mov
dec
rcll
or
or
mov
push
stos
lcall
cmp
test
out
loopne
mov
sbb
and
adc
sub
push
mov
push
in
push
insl
xchg
rcl
xorb
leave
inc
hlt
dec
faddl
sub
cwtl
mov
lcall
and
scas
addr16
add
inc
stc
mov
jmp
dec
mov
rorb
std
cmp
into
cltd
js
mov
add
int
sbb
out
clc
and
shrl
sti
test
cmpsb
in
aad
mov
movsl
dec
add
mov
cmpsl
ret
mov
sub
push
enter
aaa
repnz
pop
jno
push
cltd
iret
adc
data16
pop
pop
lea
jecxz
scas
mov
xor
mov
ja
inc
mov
ljmp
repnz
push
mulb
push
jge
fsubl
in
or
div
jbe
jnp
inc
clc
ret
mov
hlt
jbe
mov
mov
xor
out
xchg
sub
pavgw
nop
inc
fldpi
add
push
add
adcb
loopne
xor
stos
xor
imul
out
loop
lea
dec
testb
jp
mov
mov
adc
pusha
lahf
jp
inc
mov
xor
mov
loope
ficoms
data16
stos
mov
lds
ds
mov
xor
es
pop
dec
outsb
testb
xchg
mov
cmpb
lcall
outsl
sub
icebp
sarb
jb
xchg
rcl
inc
sbb
outsb
call
aad
add
roll
pop
or
cmp
mov
fstpl
mov
jp
push
ljmp
lea
mov
xchg
fs
aas
pop
dec
mov
sub
pusha
out
hlt
pusha
inc
shlb
rcll
adcl
pop
jle
pop
jo
fisttps
pop
stc
ss
stos
std
sbb
ljmp
sbb
cmp
loopne
sub
xor
xchg
push
fs
and
ds
lods
sbb
and
mov
and
fsub
cmp
sbb
pop
jecxz
out
adc
sbb
dec
fcomi
adc
inc
cli
jo
out
ljmp
cmp
lea
mov
cwtl
mov
es
add
mov
jg
mov
adc
outsb
sub
repz
cmp
push
sbb
mov
xchg
mov
dec
je
add
inc
sahf
js
sub
mov
fistpl
xlat
xor
pop
cmp
xchg
into
aaa
icebp
and
jae
mov
sbb
xor
xor
xor
sbb
and
jne
sbb
icebp
mov
push
cmp
or
gs
xchg
add
or
mov
rorl
push
jne
in
aas
inc
sub
imul
sub
add
loop
inc
and
adc
mov
cmpsl
lret
scas
xor
pop
push
adc
aam
cs
insl
nop
pop
icebp
iret
shll
test
fiaddl
leave
mov
xchg
push
jnp
ljmp
pop
enter
mov
jl
cmpl
mov
inc
shrl
int
int
ds
rcrl
call
mov
pop
std
repz
imul
push
sti
cmpsb
int3
fwait
pop
insb
or
dec
fcomps
add
push
outsl
xor
stc
mov
test
lahf
pop
lock
xor
call
jno
mov
pusha
aam
xlat
adc
sub
sbb
ds
cmpsb
push
ljmp
add
repnz
jae
sub
fisubl
bound
xor
movntq
add
lret
cltd
mov
in
mov
into
es
sub
scas
nop
lahf
inc
lds
jp
mov
sbb
dec
pop
dec
in
and
sti
xor
adc
int3
fistpll
cmp
in
push
repz
shlb
arpl
add
in
dec
or
jnp
stos
add
pop
and
out
or
pop
mov
aad
mov
in
cs
stos
xlat
imull
call
sbb
lcall
loop
xchg
mov
inc
xchg
shl
sub
jnp
xor
xchg
mov
roll
insb
xchg
aaa
in
and
popl
cli
outsb
pushf
jmp
adc
subb
das
push
lahf
push
ret
dec
inc
in
test
mov
push
adc
pusha
pop
or
les
xchg
mov
lods
and
ss
rcll
mov
mov
mov
jae
call
fisubl
mov
xchg
movsl
push
dec
fldenv
icebp
sub
or
cmp
push
push
stc
mov
adc
mov
mov
jge
popa
cli
call
in
jne
pop
sub
int
mov
ret
or
rcl
int3
inc
and
xor
mov
jns
hlt
call
sysenter
clc
mov
addl
clc
xchg
mov
pop
arpl
fidivs
xchg
daa
dec
inc
aas
inc
test
cmp
or
fdivs
xchg
les
mov
cmp
mov
sbb
add
aas
into
mov
push
dec
xchg
pop
xor
movsl
sbb
inc
sahf
out
cld
dec
push
push
or
pop
mov
stos
lret
fs
dec
mov
adc
sbb
rcrb
dec
xchg
jmp
int3
mov
rolb
cltd
shlb
in
xchg
popf
lods
and
sub
gs
sbb
lds
fidivs
rcll
and
xor
push
lds
jb
jg
xchg
add
adc
test
daa
mov
and
jge
jne
cltd
sub
push
mov
or
jo
imul
inc
push
cld
jle
pop
outsb
call
ret
pusha
rol
in
add
lret
sbb
jnp
jbe
pop
aas
fbstp
fistl
jae
jns
lahf
inc
out
cmp
loope
popa
in
add
popf
or
or
inc
stos
fldcw
mov
dec
cs
leave
push
ficoms
loope
sub
inc
push
push
movsb
add
fimull
xor
mov
xchg
pop
lret
and
cmp
scas
das
fmul
je
inc
adc
push
lea
mov
lahf
stos
imul
into
or
cmp
lds
xor
outsb
movsb
in
mov
and
xor
daa
mov
jne
push
lahf
jne
movsl
xorb
sahf
or
jl
loop
cmpsb
sub
out
add
cmp
arpl
inc
mov
xchg
aaa
lea
pop
fisttpl
dec
add
push
shl
in
sbb
xor
shll
xor
push
loopne
add
xorb
jp
push
lods
cmp
dec
cmp
pop
adc
stc
movsl
dec
push
adc
sti
sbb
lcall
insl
dec
pop
out
inc
ret
lea
xor
repnz
xor
jecxz
decb
inc
jmp
cmp
inc
xor
mov
lds
sub
negb
mov
push
loop
jmp
adc
cmp
clc
out
push
mov
out
xchg
add
jne
lcall
cld
mov
fimull
ror
ljmp
notb
clc
cmp
sub
cmp
mov
mov
push
add
shlb
cmp
fnsave
cmp
flds
out
mov
xor
add
jmp
cmp
sub
xorb
mov
cmp
xor
fabs
std
xor
mov
dec
leave
mov
and
pop
lahf
pop
scas
mov
inc
sbb
sbb
sub
sub
dec
adc
pop
mov
leave
add
ret
rolb
push
mov
sti
adc
pop
shll
mov
add
out
jmp
rcrl
ds
fsubp
call
aad
aad
dec
in
push
out
outsl
dec
inc
sub
stos
mov
fwait
pop
lret
dec
pop
scas
mov
daa
call
add
movsl
andb
cmp
dec
ja
mov
mov
xchg
xchg
lret
inc
insl
ja
inc
add
mov
pop
mov
cld
adc
sti
add
pop
in
inc
test
jp
dec
enter
mov
mov
mov
repnz
sbb
and
lret
ds
inc
jnp
xchg
in
fwait
outsb
inc
test
add
inc
mov
xchg
sbb
add
sbb
fsubrp
jp
jnp
ficomps
mov
fsts
mov
sbb
xchg
int3
pop
rorl
mov
sbb
mov
adc
xchg
fs
or
sbb
out
push
push
shl
adc
mov
pop
cltd
xchg
fsubrl
mov
adc
cmp
and
pop
out
ja
mov
in
popl
ja
pop
xchg
jne
and
lahf
test
dec
das
push
test
push
insb
lods
pop
jns
call
movsb
movsl
jp
rcl
dec
ror
dec
jl
lret
aaa
lret
sbb
mov
jae
or
arpl
pop
fisttpll
sub
mov
mov
inc
repnz
mov
cmp
mov
popf
int
xor
pop
addb
scas
fs
data16
pop
dec
icebp
dec
popf
outsb
and
mov
fwait
gs
pusha
sbb
pop
pop
pop
and
mov
mov
ljmp
jle
popa
mov
fs
add
jbe
std
cmpsl
insb
test
repnz
ljmp
fcom
cs
adc
cmpsb
or
jmp
push
xor
push
sub
lds
imul
sbb
mov
das
pop
mov
rorb
outsb
int3
stc
rolb
mov
cltd
add
mov
pop
aam
mov
mov
shll
int
and
pop
inc
pop
in
rcrb
std
pop
rcll
lods
and
rcr
loopne
test
fs
aam
mov
clc
out
out
push
add
mov
mov
add
aas
push
xchg
mov
cmp
loopne
dec
xor
nop
idiv
inc
mov
jbe
lcall
xor
pop
jne
mov
lret
test
sub
mov
sti
mov
repnz
sbb
ljmp
xor
jmp
adc
leave
pop
loop
dec
cmp
fstps
scas
xor
insb
sbb
xchg
dec
pop
cmpsb
cmpsl
xor
inc
je
cmp
rolb
ror
out
xchg
jl
clc
bnd
sub
inc
cmp
pop
fbld
or
mov
sub
ss
fldt
pop
scas
inc
pop
mov
imul
mov
sbb
push
std
fs
call
imul
mov
outsl
hlt
popa
popa
cmc
iret
in
jbe
pop
mov
sahf
push
cmc
pop
jnp
push
mov
mov
outsl
pop
sbb
push
push
sbb
mov
add
leave
lods
and
and
mulb
adc
mov
daa
add
test
and
out
jbe
lods
out
push
leave
flds
stos
adc
push
mov
icebp
cmp
cmpsl
inc
adc
mov
call
mov
daa
mov
neg
lock
loopne
mov
cmp
mov
jp
bound
mov
stos
daa
jnp
xchg
mul
jge
add
xor
pop
xchg
or
jmp
rcrl
push
push
ret
and
out
lods
addr16
adc
cmp
popa
jge
dec
adcl
sub
cmp
dec
xor
in
addr16
fdiv
repnz
pop
cmovae
jbe
mov
cmp
or
mov
ss
bound
cmp
out
pop
mov
mov
sub
inc
mov
icebp
aam
jmp
stos
loope
inc
inc
xor
and
pop
jp,pn
repz
js
jle
mov
into
mov
xchg
into
and
rolb
scas
rol
fs
iret
xchg
jae
int3
jae
mov
xchg
fmull
mov
pop
dec
or
jae
cmpsb
shr
mov
cmpsb
fsubp
int
jno
testl
push
addr16
repnz
arpl
dec
dec
add
aas
push
std
bound
push
repz
add
inc
repz
push
add
mov
xchg
mov
lods
mov
mov
jne
sub
dec
js
mov
push
pop
sub
pop
adc
xchg
out
call
nop
xchg
mov
xor
mov
push
and
mov
jle
out
js
in
lret
push
gs
lock
add
test
inc
jne
stc
movsl
inc
pop
enter
jecxz
mov
out
xchg
cmpsb
cwtl
js
push
sub
fisttpl
inc
push
mov
out
aaa
lahf
jno
dec
das
xor
icebp
xlat
fdivrl
pop
data16
cmp
dec
xor
jmp
lea
jg
popf
dec
inc
xchg
movsb
mov
hlt
nop
int3
std
out
sti
inc
loope
fisubrl
jle
and
outsl
push
mov
lcall
mov
ljmp
jg
pop
ss
or
sub
ret
mov
mov
jg
dec
iret
jbe
loope
sti
cmp
sub
or
jge
add
jae
fimull
push
cmpsb
orb
push
leave
aad
mov
ds
sbb
mov
sbbl
lock
push
jle
mov
mov
rolb
mov
repz
mov
rol
pop
dec
cmp
in
pop
and
movsl
mov
orl
std
xchg
jp
aaa
icebp
push
jmp
sub
adc
and
add
mov
jg
jge
push
bound
push
dec
xchg
mov
cmp
jae
into
lods
or
movsb
roll
jo
or
xor
add
mov
das
int3
mov
faddp
aas
ret
not
cmc
sbb
outsb
xor
movsl
jmp
outsl
push
xor
cmp
sub
xor
icebp
push
popf
test
pop
adc
aad
sti
aam
in
xchg
push
andb
aad
pop
into
aas
sbb
loope
sub
dec
repz
push
or
mov
scas
push
mov
stos
xchg
inc
in
xchg
sahf
movl
int
inc
dec
push
push
mov
pusha
call
pusha
fsubl
into
mov
outsb
in
into
jp
scas
xor
jl
ss
inc
jmp
aas
mov
das
push
daa
jns
jmpw
mov
and
ret
jmp
dec
movsl
int
and
gs
xchg
shll
pop
mov
mov
fildll
sbb
icebp
cs
adc
mov
adc
int3
fidivrl
mov
ss
push
das
and
sub
cmpsb
out
mov
mull
xchg
lds
imul
push
cli
fsubrs
sub
int3
mov
and
ja
test
test
or
xor
sub
lahf
pop
hlt
fs
adc
push
adc
adc
movsl
sub
pop
or
cmovae
mov
shlb
pop
jg
aad
add
push
inc
aad
aas
dec
pushf
cmp
inc
lds
xor
sbb
jb
outsb
jecxz
push
push
jne
cmp
and
ljmp
mov
mov
stc
sub
and
enter
into
push
movsb
movsl
loope
cmp
pop
dec
pop
push
or
out
sbb
adc
cmpsl
sbb
or
andb
pop
add
ret
nop
loop
rolb
stos
insb
addr16
sub
cmpsl
in
xchg
xchg
cmp
clc
dec
in
mov
or
sub
pop
mov
in
sub
loopne
nop
jbe
cld
cmp
xchg
arpl
mov
ja
pop
enter
xchg
inc
pop
fs
lods
add
repz
xor
fdivs
scas
fucom
in
out
cmp
lret
or
push
xchg
xchg
es
je
outsl
sahf
cmc
and
sbb
cmp
or
mov
sahf
or
sbb
push
xchg
mov
imul
fwait
adc
xor
cmc
popf
push
jecxz
je
jb
clc
aaa
sub
mov
inc
jl
fsubrl
pop
mov
int
cmpsl
jg
add
scas
stc
push
push
mov
push
pushl
bound
jg
nop
fidivrl
pusha
mov
imul
iret
sbb
rolb
aaa
mov
lock
jbe
test
jno
cmpsb
cld
mov
ret
inc
push
iret
xchg
fldenv
pop
cs
cmp
xlat
call
add
push
add
or
loop
xor
mov
dec
dec
daa
pop
adc
mov
cwtl
jle
bound
add
mov
in
jo
jp
adc
sub
dec
add
jae
out
dec
push
mov
es
nop
xchg
add
adc
push
sbb
inc
lahf
popf
test
cltd
inc
outsb
rcrl
mov
arpl
ljmp
xchg
jmp
daa
loopne
in
out
mov
sbb
mov
mov
subb
add
and
sbb
xor
inc
lret
mov
dec
mov
aad
add
jg
ss
mov
push
and
mov
jl
and
stc
sub
dec
mov
or
fildl
mov
xor
and
or
pop
mov
out
leave
rcl
mov
insb
mov
das
xchg
shl
xchg
testl
mov
vshufpd
arpl
loop
aas
and
mov
insb
pop
push
es
pop
divb
sub
lcall
jnp
std
cmp
cmpb
repz
pop
shll
in
test
fisubrl
push
jl
cli
lods
test
jbe
lea
inc
subb
jo
test
and
jl
into
inc
insb
dec
sub
dec
jge
fs
adc
mov
xchg
cmp
push
jns
test
ja
mov
mov
push
push
fs
add
add
dec
fwait
mul
xchg
and
andl
xchg
and
push
adc
gs
jae
ja
xor
test
xchg
scas
fwait
test
jle
ret
mov
dec
mov
arpl
rorl
loopne
cmp
dec
insl
movsl
sbb
pusha
add
inc
mov
jno
pop
sbb
fdivrl
or
inc
shll
dec
aas
pop
adc
xchg
scas
arpl
adc
inc
cld
pushf
adc
pop
cmp
fisubs
jnp
addr16
sbb
stos
jbe
into
arpl
scas
lds
lea
adc
cmp
xchg
dec
mov
mov
lock
shlb
insl
aaa
jbe
push
imul
frstor
cmpsl
sti
adc
insb
adc
dec
or
add
dec
pop
shll
sub
int3
add
in
mov
mov
mov
ret
insb
pop
inc
dec
jb
jge
push
mov
decb
mov
dec
movsb
xlat
jns
pop
mov
ja
xchg
outsb
shlb
pop
cmc
and
scas
mov
mov
add
fiaddl
hlt
mov
test
push
adc
pusha
sub
add
push
mov
dec
popf
and
lcall
push
jmp
fcmovb
out
dec
pop
xlat
add
mov
inc
dec
test
jb
dec
lcall
sbb
pop
lds
sbb
fsqrt
out
push
cltd
push
les
subl
test
inc
xchg
leave
sbb
inc
pop
repnz
cltd
lahf
mov
nop
fwait
inc
cltd
add
cmp
dec
jl
daa
sarb
xor
sbb
jno
or
xchg
inc
dec
insb
xlat
aad
into
xor
jle
ficomps
lahf
lahf
jnp
ficomps
sbbl
add
movsb
rclb
scas
div
enter
mov
mov
out
xor
jg
lock
sub
lahf
sub
cmpsb
daa
jne
jg
jl
xor
cs
in
jno
fcompl
imul
hlt
jae
jns
loop
rcrb
push
call
inc
adc
add
adc
xchg
call
adc
fwait
daa
bound
sub
inc
jns
jp
sub
xor
repnz
mov
shll
push
jae
cmp
rorb
scas
ffree
fstpl
fmuls
and
sbb
or
arpl
loope
xchg
dec
xor
inc
ret
scas
fsubs
mov
mov
xchg
dec
push
add
lods
cltd
les
jge
lret
xlat
cmp
and
adc
aaa
sbb
out
sbb
jno
mov
out
lods
test
fyl2xp1
notl
movsb
rolb
pop
movsb
movsb
pushf
cltd
movzwl
lds
in
je
inc
fadds
outsb
out
or
sub
mov
cmp
lret
mov
shr
call
xchg
leave
repz
stos
push
xlat
adc
cmp
sahf
call
push
data16
popl
xor
out
add
jnp
insb
mov
cli
arpl
scas
nop
std
sbb
pop
dec
stos
roll
lods
icebp
roll
or
cmp
push
ja
mov
sahf
jp
pop
xrelease
cmp
mov
mov
inc
mov
xlat
enter
dec
pushf
mov
out
mov
cli
stos
fcoml
jae
subl
mov
out
sub
sbb
xchg
dec
push
imul
xchg
rolb
into
cmp
data16
inc
dec
xlat
outsb
inc
inc
jnp
mov
sub
sarl
jo
sub
push
jecxz
sti
jns
scas
in
xchg
ljmp
dec
aaa
adcl
sbb
or
scas
jge
fldcw
lret
sar
push
adc
loop
pushf
sub
arpl
cmp
jle
jmp
mov
mov
imul
dec
std
mov
sarb
or
xchg
cmovnp
cmp
push
sti
es
ss
ljmp
loopne
out
js
jns
sti
sbb
push
fimuls
sbb
xchg
lret
ljmp
imul
nop
aas
rol
adc
xor
mov
mov
rcll
out
push
test
icebp
enter
jecxz
mov
test
mov
dec
push
lcall
lret
les
push
loop
or
jbe
mov
sub
xchg
add
xchg
add
and
loope
ljmp
lret
push
movsl
push
je
sub
push
adc
sbb
mov
hlt
adc
jle
and
sub
mov
mov
hlt
pushf
push
ja
inc
dec
aas
push
cmp
data16
ja
cli
insl
je
int
lods
in
mov
inc
bound
or
loop
mov
test
mov
je
loope
mov
jmp
mov
outsl
mov
in
cs
shlb
xor
leave
inc
pmaxsw
mov
outsl
push
mov
fisttpl
outsl
lcall
xchg
xor
fbstp
push
pop
pushf
mov
add
das
std
push
jb
popf
clc
test
xlat
pop
pushf
xor
rolb
push
lret
mov
outsb
insb
mov
add
icebp
aaa
int3
daa
in
pusha
les
ret
dec
enter
xchg
pop
dec
and
cmpsl
stc
loopne
jo
xchg
pop
mov
stos
add
inc
popf
mov
dec
add
je
les
daa
sbb
out
push
mov
imul
pop
scas
add
mov
pop
psubsw
movsb
push
adc
pop
in
push
xchg
or
push
cmpsl
pop
stc
add
mov
add
call
sbb
fistl
lcall
sbb
mov
xchg
jg
xchg
lods
xor
cmp
adc
ret
jno
int
fadds
push
jbe
mov
or
es
dec
leave
sbb
ljmp
xchg
cwtl
aad
dec
sbb
pop
adc
sbb
sub
in
int
pop
cmp
outsl
and
xchg
bound
jbe
sub
arpl
jecxz
js
loopne
arpl
sub
scas
inc
mov
adc
cmp
js
insb
fisubrl
xor
out
or
and
mov
cld
mov
sbb
sbb
jnp
or
xor
and
mov
jge
jp
outsb
leave
inc
push
jmp
push
addb
push
push
adc
lea
cs
pop
je
push
mov
aas
jg
mov
xchg
jo
fildl
xchg
sub
push
outsl
fdivp
test
ret
xchg
lods
or
dec
and
xchg
sbbb
sub
lret
fsubr
scas
mov
dec
sbb
or
and
loope
loopne
adc
orl
push
not
pushf
xor
outsl
rcr
add
pusha
fidivrl
sub
and
pop
push
inc
out
jns
inc
xchg
adcb
cmp
loope
test
xlat
cmp
jmp
xchg
mov
xor
pusha
cmpsl
mov
pop
aaa
dec
outsl
das
cmp
jbe
jno
js
xor
push
imul
mov
push
movsb
and
dec
jecxz
add
lcall
add
and
fisttpll
das
mov
xchg
lea
inc
mov
rcll
aad
fs
mov
insl
or
leave
je
insb
aas
rcl
xchg
ffree
adc
push
das
mov
lods
test
or
push
jb
scas
lcall
bound
mov
xchg
xlat
mov
lahf
push
mov
subl
inc
aas
test
dec
push
lock
sub
div
mov
dec
xchg
in
push
sub
in
out
data16
xor
pop
lods
dec
dec
lcall
sbb
cmp
into
jne
xor
lods
lock
jbe
jae
cmp
jge
imull
lods
mov
cmp
out
cmp
sahf
flds
cmp
adc
loope
ja
xor
rcr
loope
ja
cmp
in
test
test
bswap
insb
fstpt
sbb
mov
xor
inc
cs
imul
loopne
movsb
mov
into
inc
out
or
jg
mov
push
xchg
mov
sub
sahf
add
movsl
push
sub
push
mov
mov
pop
sbb
adc
stos
sbb
sahf
mov
movsl
adc
pop
adc
add
sub
jecxz
pushf
xor
test
ds
cmp
sbb
mov
xchg
jns
ret
ret
and
dec
les
mov
jge
lock
and
ds
or
insb
sbb
mov
sbb
mov
and
dec
push
pop
outsl
or
fildl
adc
std
pop
lods
movsl
aaa
and
mov
scas
js
call
or
out
cmpsl
mov
in
inc
and
push
out
out
cmc
or
xchg
jg
mov
jno
test
in
push
fnstenv
into
xchg
add
mov
jne
pop
cli
lret
in
or
adc
aas
fs
jl
lea
imul
enter
mov
call
pop
pop
pop
insl
mov
divl
xchg
and
rcrl
xor
sub
cs
sub
sbb
adc
rclb
jecxz
or
push
jmp
or
push
je
fnsave
enter
pop
add
cmp
and
loope
push
outsb
fiadds
cltd
mov
cmp
inc
insb
push
cmc
add
ret
loop
push
cld
repz
push
pop
les
lret
cmp
mov
jl
hlt
roll
xlat
mov
mov
mov
push
or
or
loope
jo
fistl
imul
sbb
add
mov
leave
jmp
out
dec
test
out
fmull
inc
xor
ret
arpl
in
sbbl
enter
cmp
and
shll
les
mov
xchg
jo
or
aad
in
xchg
loopne
pop
pusha
arpl
ds
in
mov
push
lods
scas
sbb
xchg
pop
inc
movsb
cmp
jl
in
mov
jl
mov
and
pop
mov
jns
inc
cld
cmc
cmc
insb
aam
and
xchg
out
cmpb
jno
and
adc
stos
std
jle
and
push
in
js
fdivrl
mov
lcall
clc
dec
jp
icebp
or
add
mov
ret
jbe
loopne
icebp
inc
pop
fistpll
jne
mov
push
dec
ljmp
cmp
cwtl
out
repnz
or
aas
outsl
aas
adc
aas
stos
and
test
nop
mov
xchg
lret
xchg
fldt
mov
and
loop
mov
xor
mov
lock
adc
jae
mov
pop
dec
fwait
or
cmpsl
and
mov
je
aas
pop
test
jmp
dec
sub
gs
or
lret
xchg
inc
scas
insb
imul
mov
sbb
push
aaa
jge
push
xor
orl
pop
push
mov
pop
fdivrp
mov
negb
dec
adc
mov
int
fs
xor
cmp
jmp
outsb
sbb
dec
inc
sub
add
in
sub
in
add
addr16
push
mov
dec
xchg
inc
pop
aam
cmp
sti
hlt
ret
mov
ljmp
int
mull
das
stc
cmp
int
xchg
xchg
scas
in
or
push
push
leave
decb
jecxz
fcoml
cmc
out
mov
lea
clc
jmp
sahf
sbb
aad
lock
sub
xchg
scas
fimuls
sahf
sti
fstp
andl
repnz
fdivl
mov
test
scas
cs
pop
lods
mov
add
and
xchg
pop
mov
dec
push
mov
repz
loop
sub
or
inc
gs
pop
dec
fists
xchg
mov
outsl
lock
frstpm(287
sbb
pop
mov
push
sbb
mov
lret
das
mov
mov
adc
pop
xor
jl
bound
bnd
pop
in
das
pop
call
arpl
sbb
inc
scas
mov
dec
jmp
push
jo
jl
dec
sub
cld
or
push
and
fidivrl
pop
scas
dec
mov
cli
xorl
sub
dec
sarb
sahf
pop
fisubrl
xlat
es
and
out
and
xchg
out
push
mov
xor
movsb
push
mov
xchg
sub
and
addr16
push
rorl
pop
dec
lcall
add
pop
scas
icebp
xchg
lahf
cmpsl
inc
stos
clc
lcall
dec
test
add
push
mov
or
or
cmp
inc
repnz
idivb
add
lahf
out
mov
mul
add
jl
ss
inc
rcl
fwait
jle
jecxz
imul
imul
sti
inc
xor
mov
stc
mov
push
jne
and
sbb
loopne
fcompl
pop
cmc
mov
lahf
or
xor
xchg
or
aad
lret
loopne
mov
notl
inc
xor
fsubrs
push
enter
imul
inc
cmpsb
push
cli
jo
pusha
or
lods
adc
ds
mov
sbb
fdiv
push
in
xchg
std
fs
lret
push
lahf
imul
jmp
xor
movd
testb
pushf
or
aaa
or
mov
out
cmp
decb
mov
lods
repz
mov
mov
push
sbb
push
mov
jecxz
cmp
sbbb
imul
mov
jmp
push
jle
pop
jmp
dec
in
out
mov
popf
mov
dec
lret
je
inc
inc
cmp
inc
ficompl
push
lcall
add
cmp
mov
test
and
mov
cld
cmp
out
sbb
pop
and
std
sub
filds
cmp
ret
pop
pop
into
setne
arpl
jl
mov
insl
pushf
aad
sbb
fisttpll
add
push
in
mov
inc
push
in
xchg
pop
xchg
push
jmp
and
jecxz
or
xchg
sbb
sahf
and
xor
push
xchg
sahf
sahf
fcoms
jno
pop
sub
jecxz
fcom
lds
jmp
or
imul
loopne
out
and
mov
xor
lock
std
inc
pop
xlat
popa
push
jecxz
adc
cld
or
loop
std
cld
cltd
adc
sub
xchg
push
shr
lds
dec
push
je
adc
movsl
in
jp
divb
dec
xor
push
add
lods
cli
stos
mulb
push
fnstsw
pop
int3
pusha
add
clc
rorl
add
add
mov
push
pop
outsl
out
fcmovne
push
scas
fmul
jb
adc
out
arpl
and
icebp
jl
outsl
push
inc
and
sub
mov
jmp
std
sub
stos
dec
aad
mov
aaa
xor
inc
lcall
mov
and
in
pop
lret
push
adc
lods
push
cmp
shrb
cmp
xchg
hlt
js
mov
fs
shll
mov
neg
addr16
pusha
mov
pop
fs
and
mov
lock
icebp
fimuls
mov
arpl
dec
mov
frstor
cwtl
sbb
xor
sub
div
cltd
call
mov
push
sbb
adc
jmp
mov
cmp
fistpll
mov
mov
jnp
mov
mov
dec
cld
sbb
push
fcompl
mov
mov
push
addr16
pop
mov
mov
mov
push
movsb
sbb
std
in
clc
or
int3
xor
mov
lcall
int
insl
in
out
int3
jbe
subb
loopne
int
jns
insl
pop
rcrl
out
stc
cmpsl
mov
sbb
or
mov
add
orb
enter
or
push
stc
mov
jmp
mov
cltd
inc
addr16
jb
inc
cmp
push
or
xor
and
sub
sbb
div
cmp
sub
cmpsb
or
addb
pop
add
lods
or
das
lret
xor
sti
insl
pop
fistpll
out
mov
ja
mov
jae
dec
push
fcomps
push
adc
arpl
mov
push
jnp
out
lahf
push
or
mov
cmp
and
scas
cmp
jmp
popf
ss
mov
mov
sbb
mov
xor
dec
adc
loope
xchg
xchg
out
xor
push
sbb
add
lds
jo
push
out
shlb
bnd
and
cmpsb
movsl
mov
add
push
nop
or
or
pop
jnp
push
lret
fsubrs
mov
dec
aad
mov
jp
dec
rorl
mov
sarl
popf
jecxz
pop
adc
stc
clc
push
xchg
sub
cmp
ss
aam
cmc
inc
xor
iret
lea
ja
xor
hlt
sets
mov
xchg
pop
loope
xchg
pop
loope
mov
scas
jb
mov
inc
jecxz
jl
jg
das
pop
or
mov
fs
mov
pushf
cmp
xchg
jno
scas
jecxz
lods
sbb
nop
jno
fwait
ja
stc
push
popa
pop
mov
loope
inc
xor
xor
dec
popa
aaa
dec
out
or
mov
mov
scas
std
fbld
and
ror
inc
ds
divl
fisubrs
cmp
dec
aam
cwtl
lret
fs
xchg
ljmp
and
push
jecxz
xchg
cld
pop
push
clc
sbb
lock
out
je
jne
les
or
shlb
loop
and
mov
adc
xchg
rorl
dec
mov
mov
or
rclb
jmp
xor
lods
in
mov
mov
aas
push
mov
inc
ds
out
adc
mov
adc
adc
jge
inc
in
mov
jbe
add
cmp
into
pop
out
addr16
mov
mov
inc
fnstcw
pop
xchg
cmp
push
rorb
int
lock
xor
push
aaa
shl
push
je
fstpl
sub
cmp
bound
xor
jecxz
leave
pop
or
aad
sbb
fdivs
out
cltd
and
or
std
xorb
adc
clc
mov
sbb
fs
jb
cmpsb
sub
imul
pop
loope
mov
lods
divl
dec
jle
cmp
sub
fildl
sahf
push
xchg
or
pop
adc
je
sbb
or
push
or
mov
movb
cmpb
das
retw
mov
movsl
cmp
popa
xchg
push
adc
das
mov
or
mov
rorl
add
and
ja
sub
inc
add
loopne
push
iret
sti
add
stos
and
and
lret
adc
jge
mov
scas
push
movsb
inc
sbb
xlat
adc
push
hlt
mov
mov
xor
lcall
jno
push
pusha
out
out
call
push
dec
das
lods
or
dec
into
push
inc
sahf
adc
push
jb
mov
aad
pop
hlt
aas
and
pop
push
adc
jns
std
popa
jno
pop
mov
clc
adc
xor
imul
xor
rcrb
xchg
jmp
and
addr16
loopne
dec
sbb
mov
mov
iret
mov
adc
ljmp
pop
cwtl
ficoms
xor
pop
mov
adc
inc
aad
push
iret
jmp
adc
lret
inc
pop
std
hlt
aam
cmpsb
int
test
mov
insb
cltd
cmc
pusha
out
outsb
sub
xor
arpl
cmp
mov
out
mov
jle
mov
xchg
dec
sub
jecxz
hlt
push
mov
jmp
push
hlt
adc
movsl
mov
test
inc
pop
push
mov
scas
movsl
inc
pop
test
or
orl
sub
jbe
jmp
adcl
movsb
jo
sbb
xchg
pavgw
jmp
lret
adc
rcrb
lahf
pop
in
sub
jo
mov
les
lds
jl
mov
or
int
xchg
inc
ja
adc
daa
std
mov
mov
push
lcall
mov
and
sbb
testb
test
pop
fsubrs
mov
out
adc
or
and
lret
dec
pop
lock
pop
stos
sbb
cltd
add
xor
sub
in
push
aam
cmc
cmp
fnstcw
sub
or
sub
lret
aad
lods
inc
scas
push
and
lock
push
push
stos
sub
mov
or
insb
lods
lret
sbb
outsb
mov
inc
xchg
sbb
call
aaa
popa
jl
adc
call
add
xchg
pop
sub
push
mov
fcomps
pushf
inc
pop
popf
into
jb
mov
adc
stc
fcomp
dec
out
aad
push
mov
xor
jae
sti
mov
lock
push
rcll
hlt
ja
or
push
mov
mov
xor
mov
stc
aam
ret
and
xor
add
ficompl
sub
out
les
sub
addb
jl
das
in
cmp
in
fwait
fs
or
ret
mov
mov
lods
fwait
mov
or
jge
cltd
fildll
lock
pushf
orb
xchg
xor
lcall
test
cmp
stos
xor
and
sbbb
mov
shlb
lea
fcmove
dec
jne
pop
popf
mov
push
scas
mov
mov
jecxz
cld
ss
sarl
mov
test
scas
popa
sets
sbb
xor
loop
inc
add
xchg
into
outsb
roll
mov
sbb
sub
imul
stc
mov
out
inc
lahf
push
push
dec
mov
xor
push
push
stc
inc
add
push
push
mov
adc
add
insl
out
mov
pushf
dec
dec
insl
jl
push
mov
pop
xor
sub
push
add
adc
imul
in
neg
in
xor
adc
sub
outsb
dec
lea
dec
inc
jge
mov
out
mov
mov
sahf
lcall
lods
and
sub
jbe
dec
jns
in
sbb
out
insl
out
adc
testl
inc
movsb
sub
insb
loop
data16
or
iret
cld
scas
stc
sbb
aaa
pop
ds
and
lret
add
ret
push
push
mov
pop
in
aaa
call
push
mov
clc
or
out
sbb
std
leave
mov
pop
push
aad
inc
sub
pop
fucom
jno
sbb
ljmp
bound
add
clc
fs
fyl2xp1
aaa
cmpsl
xor
and
loope
out
sub
loopne
inc
lds
fadds
sub
subb
ss
dec
in
push
add
jl
xchg
or
mov
cmp
test
daa
ljmp
popa
rclb
push
mov
add
jge
push
sub
out
mov
jl
fsts
mov
lds
cmp
imul
push
pop
pop
nop
pop
test
enter
push
sub
fldt
test
pop
stc
adc
sahf
inc
mov
and
xchg
or
lret
sub
loope
pop
xor
adc
pop
mov
sub
inc
xor
test
cmpb
xor
lcall
sar
mov
jnp
js,pt
xchg
sbb
out
pop
call
dec
in
lret
pop
xor
leave
into
sub
outsb
pop
adc
aaa
aam
and
aaa
in
lea
fisubs
in
and
xchg
inc
push
sbb
lock
imul
xor
inc
stos
xchg
cltd
cmpsl
and
fists
es
shlb
inc
popa
jl
jo
push
fwait
into
mov
mov
lds
jmp
adc
xor
adc
dec
dec
aad
or
popa
out
lcall
jmp
ljmp
or
inc
sub
int3
and
ljmp
sub
rorb
lock
inc
push
inc
movsb
sub
xchg
and
out
mov
repz
sbb
xchg
out
mov
je
xchg
pop
jno
stc
mov
lret
hlt
sbb
fwait
leave
les
or
in
shll
ljmp
addl
inc
mov
pop
or
cmove
dec
and
push
pusha
pop
in
mov
popl
cltd
je
cmp
jle
repnz
push
inc
pop
and
jmp
in
mov
clc
or
mov
pop
push
popa
and
fidivrs
dec
repnz
adc
inc
or
stos
mov
imul
repnz
xlat
xchg
scas
push
icebp
mov
adc
ljmp
and
mov
fadds
mov
pop
imull
fwait
ds
neg
or
jbe
or
jo
or
xchg
push
mov
fmul
fwait
inc
je
mov
jne
fsubp
xchg
shrb
mov
cmp
inc
cmp
sbb
dec
cmpsl
mov
xor
dec
mov
mov
cmp
inc
jle
sub
sbb
sahf
cwtl
xchg
ja
cmp
repz
ret
lods
pop
je
icebp
stos
sub
adc
or
shll
xor
sub
fdivs
push
mov
cmp
aaa
jge
sbb
push
mov
jno
scas
fbstp
lret
xchg
and
jne
addr16
out
fidivs
mov
xor
mov
addl
out
rorb
data16
dec
xlat
outsb
pop
fidivrl
adc
xor
insb
mov
and
pusha
fcmove
fwait
push
mov
mov
fisubl
jmp
mov
mov
decb
fidivrs
push
sbb
mov
sub
ds
mov
cs
pusha
insb
scas
ss
sub
jg
fsubrs
jne
xchg
or
xlat
add
sub
loopne
aam
fwait
mov
dec
adc
popf
or
inc
push
in
sub
pop
aad
ror
and
inc
int3
cmpsb
jl
aad
sub
cmpsb
fwait
add
mov
js
xchg
sub
shlb
add
inc
sbb
std
out
jl
mov
pushf
lcall
mov
cmp
cmp
lods
das
inc
and
popf
adc
pop
fnstsw
loope
jg
mov
mov
add
xor
push
roll
pop
scas
icebp
int3
xor
pop
lret
adc
fs
lds
sub
hlt
sahf
pop
mov
int
mov
or
pop
xchg
push
push
outsl
jmp
imul
inc
sub
mov
cmp
cltd
outsl
sahf
ljmp
and
imul
jmp
mov
adc
icebp
ror
mov
push
cld
mov
sbb
xchg
mov
xor
lahf
ret
inc
pop
fildll
cmp
rcrl
xlat
loop
add
ror
shll
adc
lahf
adc
and
out
mov
dec
orl
std
push
push
imul
lahf
fcomps
push
mov
out
mov
out
pop
imul
fsubp
dec
aam
lock
dec
mov
in
mov
pop
mov
adc
add
sbb
js
test
mov
pusha
dec
mov
push
push
cs
mov
repz
pop
ret
aam
pop
daa
mov
mov
fisttps
mov
and
enter
and
ss
out
inc
aaa
mov
shll
ds
xlat
cmp
testb
out
and
pop
bound
xlat
jnp
cmpl
dec
jnp
cmpsl
sbb
dec
cmp
mov
add
rcrl
xchg
cltd
adc
mov
jmp
or
in
lock
inc
movsb
jle
fcomps
cmp
sub
addb
sarl
divb
jge
cs
ficoms
sbb
pop
fdivrl
mov
mul
int3
mov
add
cli
push
dec
ljmp
adc
xor
sbb
pushf
adc
lds
pop
xor
fdivp
lret
xor
and
mov
xrelease
cwtl
mov
cltd
push
dec
enter
mov
mov
xor
dec
mov
test
in
jl
imul
jecxz
push
test
enter
inc
scas
mulb
xchg
inc
push
push
push
push
sbb
lods
sub
cmp
jg
mov
push
cmp
mov
xchg
test
push
sub
cwtl
add
repz
icebp
adc
popa
xchg
sbb
stos
or
fwait
push
rcr
xchg
icebp
push
or
call
out
or
popa
imul
mov
stc
push
push
dec
pop
loopne
or
jl
cmp
fldt
fldenv
or
and
mov
jne
jmp
jg
ss
mull
adc
mov
ret
xchg
imul
and
mov
aam
sbbb
test
mov
or
xchg
mov
pusha
inc
jbe
aam
movsb
icebp
jns
dec
mov
clc
stos
jns
mov
in
mov
out
out
xchg
jo
xor
sub
add
xchg
push
and
mov
cli
push
xchg
add
cmpsb
sbb
push
push
mov
xchg
lods
flds
ljmp
dec
jno
dec
popa
mov
mov
cmp
inc
les
pop
jbe
xchg
orl
xor
xor
andb
shl
out
fcmovnbe
xor
cwtl
sbb
sub
dec
rcll
pop
cmp
pop
ds
mov
lahf
data16
scas
sub
pushf
movsl
jl
xchg
push
add
popf
mov
aas
flds
jge
xchg
mov
jo
mov
mov
insb
cmpsl
lods
test
pop
adc
or
pop
inc
cmp
dec
inc
cs
daa
mov
pop
jge
inc
sbb
outsb
leave
ja
sub
and
lea
icebp
pop
cmc
dec
adc
push
ds
xor
adc
cmp
sub
jno
pop
repnz
jns
pop
je
cmpl
jnp
insb
sbb
mov
out
aaa
mov
xor
inc
repnz
imul
mov
inc
cwtl
pop
stos
shrl
inc
addr16
sbb
xor
mov
xchg
fisubrl
cmpsb
or
insb
jmp
rorl
xor
in
outsb
xchg
push
mov
cmp
xor
sub
pop
and
mov
dec
call
scas
sahf
jo
xor
rclb
pop
dec
mov
jbe
cmc
mov
lods
shlb
out
movsl
bound
pop
mov
sbb
out
mov
enter
mov
movhps
out
dec
cltd
inc
test
stos
or
mov
dec
jne
ljmp
inc
outsb
mov
imul
adc
sub
dec
inc
push
sub
in
icebp
fistps
lcall
test
inc
cli
push
in
sub
pop
and
or
ret
fwait
push
adc
xchg
mov
lret
fimuls
bnd
out
and
mov
stos
pop
inc
xor
adc
xor
js
jecxz
jne
icebp
lds
and
repz
repnz
lods
ss
test
push
pusha
cmp
xor
sbb
jle
faddl
icebp
enter
pop
notl
lcall
cmp
xchg
mov
in
mov
leave
inc
xchg
dec
int
fists
sub
test
cwtl
pop
insb
cli
jno
xor
stos
fwait
pusha
cmp
or
in
cmp
push
mov
lea
mov
dec
les
arpl
out
mov
push
into
sahf
mov
ljmp
dec
cs
sub
or
xchg
push
ss
sbb
mov
pusha
mov
and
push
push
cmp
mov
rorb
subl
mov
or
in
sub
leave
pop
in
hlt
rolb
add
into
ja
into
outsb
out
std
sbb
sahf
movsl
dec
sub
adc
arpl
jnp
dec
ljmp
sbb
push
and
shrl
lahf
in
lahf
jge
aam
pop
push
dec
inc
mov
mov
pop
mov
mov
push
clc
or
or
outsb
popa
pop
outsb
rcrl
jo
push
hlt
orb
das
cmpl
or
repnz
ffree
xlat
inc
sub
or
clc
movsl
fstpt
lret
in
ljmp
in
stc
cmpb
xchg
inc
jl
scas
jmp
lcall
inc
sti
sbb
cld
gs
stc
repz
xor
jmp
jg
rcll
sti
push
repnz
jge
mov
push
mov
mov
aaa
jge
mov
les
icebp
and
sub
or
inc
and
dec
movsl
and
in
cwtl
sbb
mov
pop
rcll
lcall
cmp
subb
push
pop
push
dec
mov
rcl
xor
insl
enter
inc
adc
xor
mov
adc
stos
xchg
pop
xor
pop
mov
push
int
repz
push
sbb
push
sub
loopne
pop
push
clc
lds
xchg
cmp
out
in
xor
cmp
xor
mov
mov
adc
push
stos
mov
nop
into
cltd
dec
mov
mov
xlat
inc
divb
push
add
add
pop
outsb
or
fpatan
add
cmp
push
popa
loope
and
loop
daa
or
mov
xchg
jecxz
ljmp
outsl
xchg
pop
push
call
fcmovnbe
arpl
out
xor
cltd
xchg
and
mov
push
push
mov
xchg
das
cmpb
or
popa
out
mov
dec
mov
xor
push
cmp
js
test
sbb
adc
sub
fmull
sbb
pusha
cltd
jmp
out
cld
sbb
xchg
adc
cmp
idiv
xor
lahf
mov
mov
mov
inc
add
loop
movsl
sbb
jae
fsubrl
inc
js
fisubl
lret
das
mov
shl
mov
push
inc
cwtl
jae
sti
mov
js
out
sbb
mov
int
pop
dec
pop
add
lods
leave
call
cmp
arpl
ffreep
pop
pop
inc
mov
seto
in
mov
cli
clc
cmpsb
es
jle
repnz
andl
rcll
sbb
outsl
loope
add
iret
iret
push
in
add
jle
mov
test
jne
cmc
sub
dec
and
sbb
mov
jp
or
and
ja
jne
rcrb
mov
push
cmp
jno
jbe
movsb
lcall
nop
mov
cmp
aam
repnz
filds
pop
push
lcall
mov
repz
mov
daa
fcompl
test
test
jecxz
jmp
pop
dec
pop
cmpsb
cli
aam
sar
pop
mov
xchg
repnz
jb
cmp
ss
mov
test
sbb
push
testb
jno
lahf
pop
push
add
stos
xor
push
cmp
mov
icebp
mov
rol
fadd
push
das
jg
in
addr16
mov
add
push
imul
cmp
leave
lret
fs
pop
mov
cmpsl
test
fcmovnu
or
dec
fwait
in
hlt
inc
rorl
cltd
leave
push
ss
mov
test
xlat
and
inc
stos
and
add
push
inc
or
sti
fsub
mov
mov
sub
jle
sahf
mov
mov
push
jp
jg
repnz
loopne
mov
adc
mov
and
imul
add
mov
dec
push
xchg
mov
inc
fsubr
lcall
je
sarb
mov
test
sahf
xor
cmp
and
daa
mov
lea
dec
mov
sub
adc
jle
add
mov
addl
faddl
mov
fwait
insb
ror
mov
dec
popa
add
xchg
jge
cmpsb
sbb
lods
cmp
mov
addr16
int
add
lods
or
xchg
push
dec
int
push
mov
scas
outsl
add
mov
cmp
pop
subb
out
xor
push
pushf
rcrl
rorb
loop
adc
jae
cli
rcll
pop
mov
jg
mov
add
fcmove
rcll
lcall
out
adc
or
repz
mov
push
mov
sbb
mov
sbb
dec
jmp
lds
sub
push
sbb
leave
imul
rcrb
jb
jnp
out
testb
mov
in
push
movb
jp
xchg
xor
into
popa
jnp
lcall
pop
or
incl
inc
shlb
ficoml
add
sti
mov
hlt
sub
sub
adc
out
lds
sarb
test
adc
jno
sbb
mov
cltd
les
mov
push
loopne
fcomp
push
push
jge
jo
sub
hlt
iret
add
arpl
mov
sarl
pop
notl
mov
fimuls
loopne
call
jmp
xor
pop
loope
es
fucom
mov
test
sub
xlat
or
fldt
push
mov
lcall
jnp
pushf
pushf
mov
inc
jg
filds
mov
add
xor
aaa
cs
dec
js
fs
scas
fimull
js
push
add
dec
ja
mov
out
xor
mov
mov
fisttpll
or
inc
inc
sub
out
sbb
ret
icebp
js
cmc
add
dec
inc
or
and
xor
ss
int3
jne
test
push
sti
inc
scas
cmp
sti
adc
dec
mov
xchg
and
gs
and
loop
inc
push
cmp
mov
and
sub
dec
inc
stc
add
xlat
sbb
sti
fs
add
adc
mov
fcomp
dec
jbe
and
mov
adc
and
jae
push
dec
pop
lods
mov
repz
loope
andl
and
inc
dec
je
daa
push
bswap
mov
movsb
mov
leave
ret
or
cmpsl
sbb
inc
into
xchg
jge
push
aaa
fxch
out
in
add
sub
lahf
mov
jns
adc
cmp
mov
nop
dec
push
xor
test
mov
sub
and
fiaddl
mov
fs
push
mov
loopne
jecxz
jmp
repnz
clc
xor
mov
les
inc
addl
mov
int
arpl
lcall
in
xor
int3
push
xchg
jp
mov
pop
test
fwait
bound
push
push
mov
sarl
sub
es
fisttps
cmpsl
xor
inc
gs
mov
cs
xor
pop
mov
stos
push
push
sub
addr16
icebp
mov
jle
cltd
fcomi
outsb
mov
clc
arpl
rolb
jmp
sbb
and
dec
les
les
sbb
inc
or
jno
xchg
ljmp
xchg
sub
lods
aaa
cmc
ljmp
pop
xor
mov
sub
push
frstpm(287
xchg
adc
pop
icebp
pop
imul
stos
xor
cmpsb
mov
xchg
jle
ret
xchg
nop
paddw
xchg
xchg
adc
jb
and
xchg
xchg
leave
stos
in
movsb
jnp
jmp
push
test
mov
inc
pop
inc
sub
sub
cld
sti
ja
lret
bound
mov
sub
xchg
dec
scas
test
jo
cld
mov
cwtl
daa
cltd
out
lods
divl
cmp
movsl
lret
jae
int
cmp
push
ljmp
adc
or
bound
mov
mov
inc
mov
push
cmc
mov
jo
cmp
cmp
add
inc
ljmp
iret
push
mov
jp
in
add
div
mov
out
insl
xchg
inc
or
pop
repz
and
or
adc
and
outsl
in
jo
sub
cmpsb
aam
push
jecxz
pop
xchg
stos
add
dec
sub
dec
les
push
mov
cmp
pop
orl
mov
pusha
add
adc
xchg
add
out
scas
adc
mov
outsl
xchg
and
mov
bound
mov
pop
xchg
cmp
xchg
int
fnstsw
and
sub
maskmovq
testl
push
mov
push
clc
dec
push
call
fcompl
jne
push
mov
sub
add
mov
fidivs
sbb
popf
push
jno
movsl
fmull
push
cmp
and
rcr
dec
inc
lock
jns
mov
push
jb
fcomip
push
jmp
mov
add
pop
cld
hlt
pop
inc
es
mov
mov
daa
aam
and
push
addr16
dec
or
push
movsl
mov
or
mov
mov
cli
sbb
aas
add
mov
pop
ret
pop
sub
xchg
inc
xchg
nop
push
sub
stc
testb
push
pop
daa
cmp
adc
insl
cmp
cs
jae
movsl
ret
pop
xor
jns
je
push
sahf
shrb
inc
call
and
push
fnstcw
sub
inc
mov
cmc
or
inc
push
das
lahf
into
cs
sub
cwtl
jmp
sti
dec
dec
rcll
int
icebp
mov
lds
xchg
adc
dec
sarl
add
pop
mov
stos
dec
push
sti
stos
jbe
mov
cwtl
add
rclb
aas
xorb
add
push
cmova
mov
inc
or
scas
push
popl
call
jo
insb
pop
lds
pop
cmpsb
cmp
ss
movsb
push
pop
or
pop
mov
adc
add
sti
aad
inc
test
pop
add
les
std
push
sbb
popf
lods
inc
push
out
xor
iret
fisttpl
push
mov
daa
sbb
jbe
add
test
cmp
adc
aas
mov
push
roll
int
icebp
into
and
xor
arpl
cld
xor
out
je
jle
fwait
imul
push
cmp
xchg
repnz
xchg
ret
jnp
insb
repnz
dec
rcrl
pop
cmc
mov
mov
insl
or
xchg
fistpl
xchg
fucomip
mov
std
shrb
add
jle
out
pop
into
hlt
ja
push
dec
sub
add
xchg
int
and
mov
add
test
sub
sbb
jbe
dec
stos
jb
aad
and
xchg
pop
mov
add
pop
sbb
dec
out
jno
xchg
test
jecxz
stos
je
mov
add
jecxz
xor
sbb
xor
lods
cmp
mov
push
add
test
out
jecxz
mov
leave
jnp
dec
iret
movzbl
push
fistpl
or
push
mov
dec
pop
into
push
mov
xchg
cmpb
insl
lldt
and
dec
mov
xchg
fdivrl
leave
shlb
nop
cmpsb
hlt
sub
inc
and
and
inc
and
add
dec
add
std
add
push
mov
mov
mov
pop
jl
xchg
jmp
into
out
mov
aam
add
lods
and
punpcklwd
fiaddl
or
pusha
arpl
dec
adc
sahf
ss
inc
or
mov
and
or
add
mov
xchg
add
sahf
mov
mov
mov
cli
movsb
xchg
xlat
dec
sub
or
cmp
pop
dec
push
movsb
sub
ror
popl
sub
fdivs
jns
fmuls
int3
mov
dec
dec
lcall
add
sub
cmc
add
pusha
fiaddl
cmp
call
or
and
xlat
sbb
jmp
subl
loope
lods
loope
lcall
xlat
xlat
les
pop
xchg
loop
pop
ds
sub
fistl
push
sub
imull
pop
adc
mov
fdivp
repnz
stos
popf
xor
cmpl
stos
ja
add
ja
pusha
mov
stc
sub
jnp
pushf
adc
mov
jle
push
repnz
mov
mov
or
mov
mov
add
enter
cmp
insb
icebp
cmp
into
std
das
dec
xor
or
movsb
outsl
mov
mov
decl
mov
fwait
push
cmp
les
lret
fdivl
dec
lahf
add
inc
cmp
xchg
pop
fwait
icebp
leave
pop
cmc
popa
mov
xor
in
xchg
js
mov
lret
mov
jmp
mov
lock
pop
xor
jae
mov
iret
xor
rorl
fimuls
xchg
in
add
xchg
or
out
inc
test
mov
xor
push
mov
cwtl
adc
test
jl
repz
jmpw
stos
stos
push
mov
mov
fnstenv
test
push
cmp
xchg
shlb
xchg
scas
adc
popa
inc
push
fimull
adc
hlt
popa
mov
push
sti
in
pop
mov
dec
xchg
mov
dec
push
in
fidivrl
cltd
out
xchg
mov
adc
cld
imul
pop
jg
insb
lods
push
push
mov
jl
mov
jns
jg
dec
adc
movsl
test
mov
outsb
scas
cmp
dec
out
push
test
icebp
jbe
sbb
dec
ljmp
test
mul
popa
cmp
daa
je
mov
add
or
xor
and
fiadds
call
mov
mov
ja
mov
ja
cmp
ret
or
sbb
mov
les
xor
outsb
daa
in
xchg
cmp
mov
xchg
pop
movzwl
adc
jl
add
lods
push
sbb
adc
lret
push
xchg
xchg
xor
scas
testb
ljmp
xchg
jne
mov
movsl
push
arpl
enter
cmpsl
fcmove
mov
push
cwtl
pop
popa
lods
insl
es
pop
ja
add
pushf
mov
sbb
push
jae
scas
fstpl
shlb
add
cs
shlb
or
stc
popa
bound
jg
aad
icebp
add
dec
pop
or
mov
xor
mov
mov
cli
cmp
pop
inc
mov
test
inc
jo
dec
imul
arpl
push
gs
test
dec
std
pop
dec
fcoms
stos
test
mov
cltd
das
addr16
aas
and
mov
test
push
arpl
adc
jae
add
mov
int3
rclb
pop
test
xor
push
or
dec
loope
push
loopne
popf
push
lcall
inc
ret
jle
pop
mov
mov
daa
cld
jne
out
push
imul
imul
dec
bound
jne
mov
sub
mov
subb
push
jne
mull
sub
or
xorl
xchg
mov
or
jbe
orb
stos
mov
test
push
adc
sbb
jle
jno
xor
and
mov
jmp
test
ljmp
xor
hlt
sbb
mov
xchg
add
push
incl
out
in
add
dec
or
mov
dec
out
and
mov
lods
mov
rorl
clc
out
dec
sub
mov
int
pop
xchg
sbb
dec
fwait
xchg
sub
jecxz
xchg
rdtsc
out
and
bound
into
repnz
push
mov
mov
dec
push
out
test
inc
sbb
lods
insl
sbb
adc
mov
fidivl
icebp
in
inc
out
xchg
cmp
cwtl
test
in
data16
mov
jle
push
cmp
mov
cld
lahf
mov
lcall
test
faddl
mov
ds
das
mov
lea
insb
or
push
xor
popa
or
imul
ja
sbb
pop
jne
cld
mov
lret
shlb
out
loopne
xchg
push
in
and
jb
jns
jle
jnp
leave
in
mov
sbbb
cmp
xchg
daa
jno
rolb
xorb
push
and
fistpll
repz
add
sub
sub
sbb
divb
pop
sbb
jno
ja
and
test
lock
mov
sarb
dec
xchg
mov
movsb
add
out
pop
push
lcall
mov
stos
inc
lods
dec
out
aam
add
imul
idivl
test
sbb
push
cmp
cmpsb
test
pusha
fldt
cltd
int
pop
push
mov
leave
add
mov
mov
mov
hlt
push
test
cmp
incl
push
shll
mov
std
jge
mov
lock
push
jmp
orb
imul
dec
jmp
adc
ss
dec
test
mov
ret
popl
jno
mov
pop
aas
pop
out
jl
repz
outsl
sub
adc
icebp
push
xor
or
cmp
cs
sbb
fistpll
mov
xchg
dec
out
test
in
push
daa
enter
sub
xor
cmp
movsl
adc
add
shll
fs
gs
mov
pop
xchg
push
mov
sub
or
lahf
insb
test
cmp
mov
push
sub
lock
push
mov
cmc
gs
pop
mov
xor
add
pop
iret
lods
je
cmc
add
and
jl
pusha
out
adc
aam
out
jg
and
jno
inc
inc
cmp
out
cmp
fcmovb
or
lret
ret
mov
stos
jge
dec
pop
sar
into
lahf
or
pop
adc
repnz
popa
shlb
andl
mov
adc
scas
sbbl
jge
cmp
mov
mov
add
iret
fsubl
loopne
dec
push
rcrb
fiadds
repnz
in
mov
movsb
adc
lock
movsb
jmp
push
pop
dec
xchg
arpl
pop
inc
add
jl
dec
dec
sbb
xchg
ficompl
test
cwtl
inc
cld
inc
push
xor
int
fwait
insl
setl
xchg
xchg
fisubrs
mov
cli
pusha
push
pop
xchg
cmp
push
sub
ret
mov
push
pop
test
pop
pmaxsw
inc
addb
push
mov
inc
sub
shlb
mov
mov
es
leave
shlb
or
jmp
rcl
adc
hlt
cmp
push
inc
call
aaa
fisubs
xor
inc
out
push
arpl
cmp
subb
adc
out
in
aam
mov
mov
out
mov
xor
stc
sub
lcall
or
inc
pop
inc
xor
aaa
adc
popf
pop
mov
xchg
je
dec
cmp
push
xlat
pop
pop
jge
xchg
lahf
add
and
add
aas
daa
cmc
sbb
clc
test
addb
inc
sub
xor
mov
push
daa
roll
jmp
dec
xor
jg
nop
push
push
xchg
int3
pop
or
int3
pop
cmp
aam
mov
popf
hlt
filds
mov
cmp
pop
dec
xor
outsb
inc
mov
mov
fisttpl
js
hlt
lahf
or
mov
inc
pushf
stos
mov
mov
xlat
les
loop
mov
pop
mov
out
shlb
push
mov
xchg
mov
sub
insl
xchg
lds
jle
ss
jne
xchg
mov
inc
dec
lcall
mov
les
xchg
mov
mov
pop
pop
adc
cwtl
icebp
mov
out
and
push
adc
push
int
mov
sahf
add
nop
jecxz
jbe
cmc
lods
inc
frstor
out
xchg
push
and
xchg
call
push
lahf
in
mov
cmp
test
in
sbb
or
mov
sbb
cmp
cmp
stos
jp
inc
jmp
out
in
out
mov
mov
jno
lods
faddl
lea
mov
push
sub
xchg
dec
pop
sti
sub
shlb
dec
ja
jne
push
lods
insb
cmpl
or
out
jae
sub
shrd
or
insb
jb
aas
mov
cs
or
inc
cmpsb
inc
bound
insb
sbb
sbb
push
cmp
leave
xchg
popl
cmc
fwait
jecxz
inc
sbb
cli
dec
lea
cld
push
push
dec
cmp
and
mov
lock
or
arpl
insb
ret
jmp
jbe
mov
jnp
mov
sar
sub
loopne
dec
fcom
push
sti
ret
push
pop
mov
jp
test
and
adc
xchg
mov
mov
mov
clc
push
inc
ds
scas
and
sub
dec
pusha
roll
adc
xchg
xchg
gs
adc
fadds
and
mov
popf
repz
test
sti
lods
aad
jo
sbb
push
push
sbb
shrb
arpl
jae
in
stos
loop
mov
insl
addr16
out
inc
xlat
mov
and
aas
mov
dec
xchg
inc
push
inc
sub
sub
fcomps
jge
xor
sti
call
aas
aad
add
aas
popf
sar
add
dec
xor
push
inc
sahf
adc
shll
sub
imul
dec
out
popf
sub
pushf
cmp
sbb
mov
nopl
cmpsb
xchg
pop
loope
jne
mov
push
jmp
add
mov
push
pop
mov
lret
add
in
dec
int
cmp
cmp
fwait
xchg
loop
add
cmp
sbb
fcmovu
dec
or
add
or
adc
xor
and
iret
loop
fsubr
addl
pop
jl
push
in
fistl
push
repz
bound
inc
pusha
out
jae
and
pop
pop
lret
dec
mov
repnz
out
sub
jnp
gs
inc
jnp
insb
pop
cwtl
dec
jp
pop
ss
inc
popa
sbb
ja
cmp
mov
cmp
fwait
out
dec
pop
or
dec
in
cmp
leave
sti
adc
sbb
mov
xchg
and
cmp
adc
lods
cmc
imul
fwait
adc
popf
stos
in
sti
and
mov
and
inc
sub
xchg
imul
pop
add
stos
push
ss
sbb
rclb
mov
push
cmp
jg
arpl
xor
cmp
jecxz
sub
or
bound
and
xlat
jo
sub
jae
aam
xchg
push
lds
pop
cmp
mov
hlt
pop
pop
icebp
inc
push
fwait
ljmp
out
jl
xor
sti
orl
loopne
mov
das
clc
ret
aas
mov
jmp
jp
js
cwtl
cmp
push
arpl
sbb
mov
jbe
add
rcrb
jno
inc
xchg
jmp
and
add
jno
outsb
sahf
int3
sub
inc
jo
sub
push
mov
xor
pop
push
dec
xchg
xor
in
lcall
jp
aaa
lods
lods
xchg
fidivl
or
popf
pushf
dec
in
inc
mov
jmp
rcll
push
dec
mov
mov
std
ja
vandps
dec
test
xlat
pushf
and
add
shlb
stc
fucomi
mov
xor
inc
minps
or
inc
mov
add
mov
repnz
xchg
scas
mov
mov
pop
imul
pop
cmc
inc
mov
ss
popl
add
aaa
pusha
adc
or
pop
das
add
or
iret
sub
xchg
pop
js
push
shrl
mov
inc
mov
loop,pt
push
movsl
pop
and
adc
push
mov
add
xchg
adc
inc
stos
jbe
ret
mov
repz
jmp
or
adc
lock
scas
xchg
ss
fsubs
mov
outsb
mov
push
mov
ljmp
adc
subl
ljmp
pop
mov
sbb
cwtl
lcall
xchg
xchg
lods
shlb
outsl
push
idivl
nop
and
dec
iret
dec
cmc
mov
lahf
mov
dec
inc
cmp
lock
mov
xor
scas
push
pop
lea
cmp
sarb
mov
mov
scas
in
push
xchg
mov
das
shll
cmp
cmp
push
add
lret
jle
loopne
loope
jo
in
ja
rsqrtps
loop
xlat
push
enter
popa
inc
ret
stc
and
test
lock
out
mov
inc
add
clc
mov
dec
jg
in
test
stos
add
sub
push
leave
mov
rcr
dec
test
push
sbb
in
pop
ficomps
mov
inc
or
ret
mov
jo
lret
dec
fsubp
xchg
and
xchg
movb
jmp
scas
aaa
mul
xchg
xchg
lret
shll
imul
mov
dec
adc
mov
mov
loopne
push
mov
or
std
stos
xor
data16
ljmp
test
add
je
cmp
subl
aam
mov
scas
pop
rorb
push
mov
enter
les
pop
jecxz
pop
setb
and
decl
dec
xchg
pop
not
fs
or
ja
je
loop
and
push
jmp
setg
das
rorl
xchg
enter
xor
sarb
sbb
leave
aaa
out
jno
enter
xchg
test
das
mov
push
and
sub
jmp
test
ljmp
ret
test
pushf
sub
ds
jp
in
adc
test
sbb
lahf
pop
jg
pop
cmp
mov
pop
or
cltd
les
aas
fildl
mov
pushw
negl
sub
cmp
push
fnstenv
sbb
fcompl
push
int
mov
rorl
mov
add
lods
jp
sahf
es
pop
in
xchg
xor
clc
inc
pop
daa
jo
xor
mov
repz
fisubrs
sub
imul
mov
inc
in
mov
fimull
pop
jl
ret
daa
out
inc
ficompl
add
fstpt
pop
sbb
dec
inc
xchg
jbe
jns
insb
pop
add
xchg
lahf
push
jle
dec
cld
xchg
xchg
nop
dec
mov
mov
inc
lcall
sub
mov
push
jbe
xchg
movsl
push
xchg
pmulhuw
ds
lods
ljmp
ljmp
pop
stc
jnp
xchg
pandn
or
or
cmp
in
sbb
repz
xchg
sbbl
mov
cmpsl
sub
xor
adc
test
mov
ja
adc
xchg
adc
push
es
jmp
lret
xchg
xchg
pop
lcall
and
push
dec
mov
cwtl
gs
sbb
mov
push
and
and
inc
aam
dec
enter
addr16
cmpsb
fwait
cmp
xchg
sbb
cmpb
jo
in
mov
aas
test
dec
mov
sub
fcoml
imul
subb
out
lods
fsubs
pop
lea
and
dec
xchg
push
xor
out
mov
lds
add
adc
xor
push
push
dec
mov
testl
sbbb
dec
lret
pop
or
mov
jo
adcl
int3
push
js
or
test
in
xchg
not
leave
nop
push
lret
enter
adc
or
jecxz
cltd
aad
stos
sbb
adc
xor
sbb
sbb
and
push
aas
cmpsb
movsl
or
hlt
and
insl
lea
arpl
stos
jg
lods
in
in
dec
and
mov
adc
cmp
sbb
ret
xlat
insb
push
xor
cmpsl
mov
inc
sub
ficompl
mov
xchg
sahf
into
scas
ficomps
mov
jb
rcl
xchg
cs
bound
in
cmpsl
test
fmuls
xor
test
and
movsl
enter
out
sub
jae
rsqrtps
pop
scas
cmpsb
cltd
fsubrs
push
addr16
cwtl
fstpt
mov
mov
mov
xchg
sbb
dec
mov
push
xor
mov
xchg
jbe,pt
jecxz
inc
lcall
sahf
popa
in
mov
lods
push
ljmp
subb
gs
pop
jne
std
pusha
mov
insb
jne
filds
ljmp
and
test
dec
in
xorb
sbb
out
insb
xorl
sahf
test
cmp
pop
rcrl
adc
lret
xor
mov
add
sbb
xor
mov
cmp
xor
inc
jmp
xor
das
test
outsb
jbe
mov
outsb
sbb
pop
xlat
in
jp
xchg
js
adc
xchg
ret
mov
popf
adc
sub
or
sub
call
mov
mov
cmp
outsl
xchg
mov
sbb
mov
ss
push
sub
cwtl
mov
xor
fsubr
xorl
sbb
adc
bound
das
lds
dec
stos
xchg
cli
mov
popa
stos
or
pop
insb
mov
pop
inc
jae
xchg
fwait
fwait
and
int3
and
and
cltd
dec
xchg
pop
inc
mov
loopne
adc
mov
jne
fcoms
and
aam
dec
xor
dec
push
dec
cmp
in
dec
sub
jmp
cs
mov
rcrl
cmp
int3
lods
pop
xor
mov
xchg
jns
es
xchg
scas
adc
shll
in
shll
icebp
mov
out
jo
push
sti
movsb
inc
inc
cmp
js
dec
cltd
fucom
cmp
out
push
sub
or
addb
inc
mov
mov
jbe
adc
dec
test
adc
jnp
mov
and
scas
jp
mov
mov
cs
pop
scas
out
roll
xor
xlat
mov
scas
mov
adc
add
or
cltd
test
cmp
xor
adc
jge
or
push
mov
sub
cmc
xchg
test
jne
jmp
jns
outsl
faddl
cltd
dec
lcall
fidivs
leave
mov
mov
jle
add
es
jne
jnp
push
inc
ljmp
xor
xchg
int
cmp
les
std
icebp
lret
fisubs
sub
aad
adc
std
out
leave
pop
jecxz
jg
adc
inc
inc
jns
inc
mov
mov
gs
inc
clc
mov
pop
lret
popf
inc
stos
add
mov
adc
icebp
lock
sbb
jbe
ss
sub
ja
stc
push
add
jo
mov
push
xchg
cld
and
mov
jmp
pushf
scas
xchg
xor
push
jnp
movsl
mulb
pusha
inc
insb
jg
push
test
jmp
nop
je
sti
lret
push
mov
enter
cltd
push
or
cmp
sbb
into
mov
xor
fwait
lock
sub
lds
das
xorb
mov
and
mov
loope
jmp
xchg
mov
clc
xor
add
mov
cmc
adc
xor
or
push
adc
xchg
mov
lods
inc
or
pusha
add
cmc
xor
popa
subb
xlat
cvttps2pi
push
jecxz
xor
lcall
jecxz
dec
scas
mov
inc
xor
sub
adc
jno
ja
and
icebp
mov
insl
and
out
mov
mov
push
popa
push
cmp
es
pop
mov
adc
fadds
sbb
or
push
loope
jle
dec
xchg
es
into
test
jae
adc
int
sbb
jecxz
lahf
in
cs
cs
dec
loopne
call
mov
repnz
fnstsw
aam
push
mov
out
data16
cmp
adc
fildll
rep
push
xor
xlat
mov
in
data16
test
push
outsb
jb
pop
xchg
test
push
rorl
adc
inc
mov
jbe,pn
fimull
inc
testb
dec
xchg
f2xm1
pop
lods
mov
sub
mov
sbb
sbb
sub
ljmp
jecxz
cwtl
add
cmpsb
adc
mov
out
mov
or
out
jmp
nop
pop
mov
and
mov
movsb
int
sbb
dec
push
xlat
inc
clc
adc
loop
fdivr
push
lds
loop
in
fcoml
insb
int3
rorl
aad
mov
ficoml
push
cltd
add
incb
fcomps
jae
or
add
or
sub
ja
mov
xlat
pusha
dec
push
mulb
push
mov
push
push
and
inc
daa
push
in
iret
adc
xchg
dec
push
or
fnstenv
ds
mov
je
pop
js
xchg
push
icebp
cmp
ljmp
inc
fsts
test
test
or
repnz
add
cltd
ja
lock
jmp
aaa
inc
out
xchg
xchg
sbb
cmpl
fcompl
dec
int
xchg
subl
mov
push
cmp
lcall
int3
mov
xlat
xchg
push
in
cltd
adc
or
mov
mov
scas
mov
ss
fdiv
sub
lahf
imul
cli
dec
sbb
xchg
xchg
and
jge
mov
dec
mov
push
shll
out
ret
and
push
lods
mov
shr
pop
faddl
das
cltd
jp
mov
je
cmc
push
bound
add
sub
mov
movsb
sub
cmp
and
jmp
pop
jno
orl
cs
aam
push
dec
leave
mov
cs
pop
pop
and
into
rcrb
xor
cmp
sub
sahf
lahf
pop
sti
xchg
stos
lods
push
mov
pop
shlb
cltd
inc
mov
fadd
ja
std
jp
mov
mov
mov
and
rcll
gs
xchg
mov
mov
xor
decl
mov
cltd
lret
imulb
dec
fsts
shll
arpl
test
xchg
dec
pop
and
popa
cmp
in
or
ret
sbb
and
cmp
pop
loope
dec
inc
and
fcoms
test
out
jae
aad
dec
and
cmp
jmp
adc
mov
jo
outsb
or
cmpsb
dec
push
lret
aam
jmp
movl
xchg
or
loope
push
outsl
jbe
mov
add
and
sub
scas
or
aad
xor
test
jbe
adc
in
int
push
mov
mov
mov
cmp
outsl
add
or
inc
cltd
repnz
das
daa
jp
movl
mov
xchg
imul
xchg
insl
bswap
push
xchg
push
lods
cmpsb
mov
dec
cmpsb
lcall
int3
int3
mov
fwait
cmc
add
jge
mov
cli
incl
adc
scas
or
mov
dec
mov
or
add
mov
pop
ret
mov
mov
push
mov
rcrb
mov
cmpsb
cltd
sbb
xchg
xchg
sbb
push
orl
cmpsl
iret
sbb
inc
xor
xchg
clc
sbb
fdiv
jge
das
inc
xchg
rorb
hlt
mov
ror
and
inc
dec
mov
lcall
inc
mov
mov
leave
loope
adc
push
data16
mov
push
add
jle
mov
pop
push
jmp
xor
movsl
pop
mov
or
in
fiaddl
movsl
ret
pop
adc
cltd
jp
xchg
movsb
lret
andnps
and
out
divb
lea
fiadds
jp
jno
adc
int3
scas
push
cmc
lea
loop
sbb
inc
inc
gs
mov
cmp
call
mov
aas
ror
or
test
adc
rcl
xchg
loope
lcall
call
pop
popf
mov
pop
dec
sub
shll
or
xchg
dec
bound
scas
stos
ret
rclb
into
sti
cmp
fisubs
xchg
mov
mov
add
mov
lret
add
jle
xlat
mov
xchg
aad
std
in
mov
xor
pusha
inc
cltd
icebp
sub
mov
fldt
sbb
fildll
push
push
stc
in
adc
int3
stos
cmp
aas
shlb
ret
pop
lods
ljmp
add
mov
ja
jne
mov
lret
sti
arpl
div
xchg
pop
xchg
and
pop
aaa
fisttps
xchg
push
pushf
mov
xor
testb
xor
or
ljmp
mov
push
or
data16
out
test
dec
jg
arpl
cmp
add
sub
mov
xor
inc
lods
and
inc
test
inc
mov
jecxz
fidivrl
xor
addr16
xchg
mov
mov
push
or
stos
jnp
cli
shlb
mov
dec
jge
out
push
pop
mov
out
pushf
mov
add
lock
and
mov
pop
into
inc
mov
xchg
scas
xor
cli
shl
stos
mov
pop
pusha
jp
jle
loope
xor
lret
mov
jne
test
dec
rcrl
ret
pop
pop
mov
adc
or
and
jno
cli
sbb
out
daa
dec
shl
mov
shlb
mov
out
leave
or
ja
je
pop
fstl
and
jecxz
rcll
xor
ret
jnp
cmp
dec
in
push
cs
notb
push
xchg
or
mov
jmp
push
dec
sbb
adc
daa
sarl
mov
std
inc
sub
ror
cmpsl
cmpsb
cmpsb
fisubs
ljmp
xor
cli
and
and
fnstcw
fcmovbe
mov
movsl
hlt
outsb
dec
add
push
fidivs
pop
xor
cli
cwtl
filds
mov
mov
jg
xchg
popa
xor
cmc
int3
aam
popl
adc
out
fstps
cmpsl
mov
pop
adc
or
push
xchg
ljmp
bound
adc
sti
jp
jbe
sub
push
push
mov
mov
mov
lcall
jae
out
xor
push
pop
push
hlt
mov
bound
insl
enter
xor
jns
ja
adc
in
cmpsb
std
scas
push
xchg
jno
test
push
je
lahf
xchg
cmp
push
aam
adc
inc
cli
mov
decb
pushf
or
dec
hlt
push
jae
int
jg
int3
jle
jo
adc
icebp
fucom
inc
pop
cmp
or
push
dec
push
lahf
push
cs
xchg
adc
int
insb
les
cltd
lods
imul
int
push
add
mov
fsubrs
pop
sub
imul
cli
push
fwait
pop
cmc
and
sub
leave
cmp
jl
ja
negl
cmp
daa
fisubrs
mov
cmpsl
or
push
fildll
jle
adc
mov
push
out
dec
dec
sbb
inc
push
sbb
test
cmp
cmp
adc
cld
neg
or
xor
hlt
mov
push
insb
xchg
iret
js
cmpsl
divl
daa
mov
imul
cmpl
cmp
and
ljmp
nop
dec
cmp
fisubl
stc
out
int3
aad
mov
dec
fimull
jo
je
mov
fistps
sub
das
lret
add
add
movsl
mov
mov
add
mov
xchg
mov
cltd
mov
sub
test
jnp
loop
ja
int
nop
insl
push
dec
cmp
pop
dec
sti
pop
xorl
dec
adc
sbbb
sub
out
cmp
lods
popa
cmp
imul
aaa
xor
push
mov
mov
push
xor
pop
dec
popf
jl
mov
cmp
and
pushf
inc
sti
insb
pop
or
xor
dec
dec
notl
push
mov
ds
jne
movb
dec
ja
jns
xchg
hlt
mov
mov
cmpsb
shl
xor
adc
ja
cmp
daa
cmc
and
mov
gs
inc
pop
loop
fimull
andl
cmp
ss
dec
lret
fistpl
push
ficoml
jns
mov
pusha
and
jmp
push
cmpsl
scas
and
lcall
mov
lahf
mov
or
les
inc
jbe
je
mov
pop
adc
int3
and
jecxz
test
arpl
rcll
test
pop
or
leave
shll
add
enter
test
sub
rorl
jns
and
ret
mov
mov
popf
mov
push
cli
fdivr
int3
stos
or
dec
mov
jg
xor
lock
jl
popa
mov
or
pop
adc
leave
ficoml
test
or
ss
push
fcmove
mov
testb
int3
xor
cmp
lcall
cltd
xor
fcoml
sbbl
movsb
lret
jg
je
sub
scas
sarl
push
mov
or
cmp
mov
mov
or
fcompl
mov
mov
ret
popa
ds
in
shr
push
push
shrb
fmuls
cs
ret
pop
out
mov
mov
repnz
rcl
and
xor
aad
push
aas
faddp
xchg
subl
or
jg
movsl
scas
mov
movsl
loopne
or
and
int
shl
mov
in
or
mov
sub
jmp
pop
jg
jp
pop
mov
sub
push
mov
and
adc
push
ja
cmpsl
or
test
mov
inc
cmc
jb
scas
scas
insl
sti
ss
testl
push
jb
loopne
leave
pop
sub
outsb
mov
test
fsts
add
and
popf
or
idivb
loop
jecxz
ss
mov
jne
repnz
add
dec
jo
xchg
popf
mov
sub
imul
lods
aad
pop
in
jnp
sarl
push
leave
xchg
and
cwtl
sahf
lahf
inc
xchg
push
addb
xor
out
xchg
jg
adc
int
out
adc
mov
mov
add
mov
xchg
jmp
pop
or
movsl
popf
dec
lods
loop
xchg
psllw
xor
dec
adc
cwtl
in
and
pop
lcall
clc
dec
push
push
jne
jle
or
inc
jnp
leave
sbb
outsl
ds
jle
fdivs
int3
jp
push
fabs
cmp
cmp
movsb
popf
mov
mov
rorb
push
adc
in
test
push
iret
push
mov
fcmovbe
pop
mov
lret
adc
mov
stos
and
outsl
inc
or
ret
movd
fisubl
pop
fwait
and
sub
aad
scas
or
xor
mov
add
jne
add
sub
jo
cld
pop
inc
cmp
jge
ficompl
repnz
jl
or
fadd
arpl
orb
jecxz
aaa
nop
lea
lds
divb
jge
inc
fisubrs
mov
loopne
jbe
jg
call
pop
cmpsl
xlat
and
mov
inc
pop
rcrb
add
dec
xchg
xchg
fldl
popl
sbb
ud1
addr16
pop
ljmp
lahf
and
jge
mov
mov
mov
pop
inc
popa
sbb
mov
cmp
or
jg
cld
push
dec
dec
in
mov
inc
scas
mov
sub
sub
mov
sub
lret
popa
mov
inc
or
insl
cmovno
adc
push
cmpl
in
jg
scas
test
pop
repz
int3
dec
rcrl
push
mov
inc
ret
pop
mov
jp
in
mov
shll
shll
lock
js
push
push
cmp
flds
stos
les
or
push
cmp
xchg
mov
repz
shlb
xchg
jnp
pusha
outsl
outsb
aaa
xor
adc
xchg
les
jecxz
jb
mov
jl
in
push
inc
dec
xor
sbb
mov
dec
icebp
dec
ficompl
les
loop
xchg
les
pop
adc
test
bound
fidivl
out
les
push
aam
xchg
cmp
push
inc
repz
jle
sbb
cmc
pop
mov
cmpsb
test
cmp
jnp
les
cwtl
jmp
test
out
scas
lock
or
pop
dec
push
dec
xor
test
add
aad
dec
dec
sbbb
aam
sub
shlb
jp
pop
stos
sbb
lea
dec
mov
xchg
addr16
xor
sub
sub
addr16
popf
les
fs
push
pop
insb
inc
push
and
mov
add
adc
lahf
sbb
es
add
push
pushf
jle
cmp
nop
dec
pushf
xchg
sub
sbb
js
cmp
push
popf
jo
push
adc
mov
inc
bound
cmp
xchg
cmp
push
inc
pop
or
rorl
add
dec
sub
dec
xchg
aas
dec
dec
adc
dec
dec
cmp
cmp
mov
std
repz
dec
xor
aam
cmp
ds
in
gs
cmp
inc
aaa
test
idivb
mov
xchg
xor
and
pop
adc
inc
aaa
xorb
sub
mov
in
lcall
or
test
mov
and
add
mov
or
dec
lret
out
or
aam
fbld
adc
stos
mov
xor
insl
mov
int
fucomi
scas
adc
out
scas
dec
add
cmp
push
stos
inc
int
push
in
rol
cmp
addr16
push
cltd
xor
adc
aam
pop
xor
cltd
aas
cmp
xorl
fstpt
mov
sar
das
push
popa
add
popa
in
test
sarl
faddp
xor
add
and
sub
ja
pop
push
movsb
mov
sub
inc
jp
lods
xchg
lea
push
or
pusha
std
lcall
adc
lcall
sbb
mull
jne
shll
inc
xchg
loopne
in
jmp
lods
or
pop
in
push
dec
mov
fdivrl
cwtl
fists
lods
mov
mov
dec
mov
mov
andb
jo
fdivrl
cld
sbb
mov
adc
dec
sub
stos
fwait
daa
adc
lret
push
les
jp
negb
cli
dec
sub
lods
or
mov
int
xor
imul
mov
and
sbb
add
sub
cld
and
jbe
push
popf
arpl
inc
mov
mov
daa
pop
mov
mov
sub
test
push
sarl
fldl2t
les
push
std
std
inc
pop
pop
add
gs
popa
ret
or
sbb
lret
fildll
push
push
or
sub
je
incb
dec
loop
in
mov
adc
fiadds
add
add
mov
mov
inc
mov
adc
fcoml
xchg
push
sahf
inc
hlt
add
popf
arpl
sub
sub
push
dec
adc
test
mov
je
add
lcall
lret
ror
jl
mov
loopne
fdivrl
xchg
mov
mov
dec
xor
xchg
cmp
lret
mov
cwtl
sub
nop
inc
sub
sub
aas
adc
mov
sub
push
out
jg
and
ja
mov
popa
movsb
int
inc
aas
and
cmpsb
push
sbb
lock
or
inc
xor
pop
fs
mov
pop
sub
stc
adc
push
loope
test
leave
sti
ss
mov
rclb
fldl
out
lea
mov
xchg
out
mov
fcompl
lcall
enter
fnstsw
into
lds
jmp
sbbb
jl
mov
bound
stos
xchg
fcoml
push
std
inc
pop
lods
jl
stos
jbe
rcl
jge
pusha
xor
sub
fs
cmpsl
mov
push
mov
imul
cmp
lcall
ds
inc
cmpsl
push
cmpsl
pushf
mov
push
add
loop
call
pop
jge
lock
jge
jmp
rcll
fdivrs
lret
js
pusha
shl
cmc
cli
lea
inc
xchg
into
sub
adc
or
xchg
xlat
push
mov
mov
pop
push
cmc
aam
mov
lret
repz
xlat
fcoml
adc
xor
les
push
lock
xchg
pop
add
das
std
dec
test
arpl
cwtl
in
jno
sub
imul
loopne
xchg
sbb
repz
or
inc
shl
xchg
std
shlb
xor
fldl
loope
mov
fisubrl
jp
dec
fs
and
push
sbb
inc
xlat
sbb
sahf
mov
adc
icebp
movsb
pop
or
aas
loop
push
out
sub
fadds
sub
in
push
adc
dec
stos
mov
pop
or
popf
sbbl
pop
in
lret
pusha
ljmp
pop
mov
inc
push
cmp
adc
stc
mov
pop
out
pop
rcr
daa
enter
into
hlt
jnp
imul
jl
mov
dec
sbb
sub
cmp
sbbl
or
jbe
mov
jle
dec
mull
push
test
xchg
dec
arpl
pop
out
adc
rorb
push
aad
aaa
popf
je
xor
out
mov
cltd
aas
and
daa
jns
inc
jecxz
inc
push
jecxz
adc
pop
sub
stos
or
aad
repnz
out
rcll
jns
mov
test
cmc
popf
int
into
mov
mov
lock
mov
pop
pusha
add
cmp
dec
pushf
or
lret
roll
imul
es
clc
test
dec
xchg
jno
fstps
or
into
lods
stc
enter
add
mov
fdivs
add
xchg
cmpsl
test
das
out
sbb
pop
or
pop
jge
punpckhwd
dec
scas
and
dec
xor
ficompl
push
lahf
cmp
add
es
and
add
pop
dec
push
incl
xchg
mov
mov
push
sar
arpl
xchg
pop
pop
mov
sar
test
pop
out
push
adc
xor
lock
fisubrl
xchg
jne
in
push
icebp
test
adc
out
gs
add
insb
mov
sti
pop
aas
fcomi
and
mov
int3
lea
adc
push
xor
test
lea
lahf
or
rcl
hlt
mov
mov
sahf
stc
sub
or
adc
test
dec
or
sub
dec
jae
or
pop
push
mov
test
xchg
pop
adc
pop
mov
notb
stos
xchg
lcall
or
ja
mov
mov
jo
aas
icebp
daa
add
add
pop
loope
and
xchg
cmp
fwait
cmp
push
cmpsl
push
push
addr16
jmp
cltd
jns
sarl
flds
mov
imul
pop
test
cmp
cld
sarl
loop
das
push
je
fs
ja
flds
dec
aad
jbe
push
xchg
dec
aaa
push
fldt
xor
test
enter
jnp
pusha
test
jno
stos
pushf
test
int
das
dec
pusha
mov
cmp
mov
push
lods
fistpll
ficoml
jne
mov
add
mov
nop
icebp
pop
jge
push
xor
sub
mov
shrb
fnstenv
rcll
mov
mov
push
and
ret
insb
add
cli
or
xlat
or
xchg
mov
jp
in
adc
jge
push
cmc
jb
roll
cmp
adc
mov
popa
sub
adc
sbb
imul
std
mov
cmp
psubb
int3
mov
movsl
mov
addl
and
lret
out
or
repnz
push
mov
add
test
cli
push
or
lret
lea
sti
jle
lods
pop
divb
jle
jne
orb
or
aaa
mov
cmp
pop
test
mov
inc
fwait
sbb
test
ds
adc
pop
mov
adc
jne
int
push
cld
loopne
sbb
sub
sbb
pop
idivb
test
sbb
cwtl
icebp
or
int
adc
jae
mov
scas
sbb
sub
sbb
sahf
aam
xor
cld
jb
in
inc
and
add
scas
pop
pop
jge
or
fcmovne
push
push
daa
and
pop
jge
mov
lods
popa
fisubrl
das
shrb
loop
sarb
into
jl
outsl
in
ret
xchg
stos
mov
iret
fwait
mov
xor
xor
in
repz
test
mov
jle
notl
cmpsb
fdivrl
push
fxch
or
adc
mov
mov
mov
sub
fidivs
gs
lods
mov
jmp
in
mov
stos
mov
mov
cmpsb
adc
jp
lret
pushf
xchg
cmp
rcrb
sbbl
jg
mov
inc
fsts
jl
cltd
cmp
inc
and
push
mov
hlt
rolb
push
bound
push
jecxz
fdivl
aaa
ret
add
adc
add
inc
push
popf
sbb
test
adc
shrb
or
adc
pop
arpl
fcomp
scas
xchg
jns
adc
dec
outsl
push
in
cmp
mov
sbb
in
push
out
enter
mov
loop
cmp
xor
jbe
push
cld
ss
pop
jnp
les
xchg
jl
jb
and
mov
xor
int3
call
xlat
fiaddl
push
cld
jnp
bnd
push
ljmp
test
inc
fwait
cli
inc
cmpsb
cmpsl
dec
sub
lahf
shlb
jbe
push
into
jb
push
dec
pop
dec
xchg
sub
loop
movsb
sub
push
xor
pop
jecxz
rolb
adc
push
push
call
lcall
into
mov
jno
clc
xorl
xchg
mov
pusha
and
mov
jp
sub
fcoml
mov
ss
clc
mov
into
ljmp
lods
mov
jmp
aam
or
push
fdivs
ss
popa
fmuls
loope
add
cmc
repnz
push
popa
jmp
fwait
sub
rcrb
fiadds
cmpsl
stos
shrb
and
dec
and
xor
adc
mov
inc
std
lea
fists
mov
test
fisubs
jp
add
adc
lods
pop
setno
or
sarb
add
xor
and
xchg
cmp
jg
insl
and
add
lcall
cmp
sbb
dec
jmp
fidivl
inc
sub
lea
sbbb
cmp
or
iret
negl
out
fwait
and
mov
daa
mov
insl
lea
or
add
and
mov
movsl
xchg
das
dec
inc
test
fidivrl
adc
mov
add
outsb
sub
out
jnp
push
ret
outsb
pushf
push
lods
movsb
test
jbe
dec
inc
jbe
fcmovb
mov
loope
shl
add
int
pushf
sbb
bound
sbb
test
in
adc
in
pop
push
mov
sbb
cltd
xchg
add
adc
dec
shrl
cmp
out
jns
test
dec
sub
or
stos
xchg
subl
sti
test
arpl
mov
fsubrs
or
fldcw
movsl
add
or
ja
push
dec
jnp
out
add
cmp
mov
mov
mov
mov
add
arpl
pause
aaa
adc
mov
pop
fists
xchg
movsl
mov
jge
sbb
rorl
sbb
jg
ja
cmp
out
fwait
sub
daa
sub
dec
vfnmsubps
fldcw
adcl
xlat
jle
cmc
cmp
movsl
fisttpll
dec
cli
stos
rcll
iret
push
fstpl
repz
jb
inc
addb
js
pop
xlat
rcrb
xchg
lahf
test
inc
out
repnz
push
leave
mov
mov
les
pop
jmp
push
fstpt
and
adc
insb
push
lods
sub
lock
pop
adc
or
sbb
push
push
icebp
dec
pop
add
or
dec
lds
cmp
sub
mov
pop
subl
mov
stos
push
je
mov
add
mov
cmp
or
or
xor
jmp
movsl
dec
fwait
or
cbtw
inc
es
sub
rcrb
pusha
or
fistps
divl
and
imul
test
mov
jg
aad
sti
sub
pop
add
and
adc
mov
mov
ret
divb
shlb
pop
das
fbld
sub
push
imul
cmpsb
jbe
xchg
cmp
push
pop
in
je
test
add
test
cwtl
push
or
jno
jne
sub
push
cmpsl
push
mov
mov
and
xchg
add
mov
bound
mov
ret
and
or
nop
jecxz
pop
scas
ret
push
mov
adc
pop
arpl
lahf
push
leave
inc
sub
insb
dec
mov
fwait
sahf
cmp
cmp
ljmp
fiaddl
aaa
in
iret
loopne
les
scas
mov
dec
push
xchg
or
fmull
and
clc
pop
pop
xchg
cmc
cmp
adc
lods
jb
shl
inc
mov
addb
xor
xchg
cmp
push
test
sub
cs
push
mov
addr16
pop
add
sbb
jg
jmp
inc
out
test
mov
xor
mov
and
inc
push
or
gs
cmp
ret
push
cltd
stos
stos
jae
dec
jle
mov
mov
gs
notb
add
and
jmp
stos
or
mov
cmp
pop
push
mov
adc
iret
jge
insl
addb
jno
add
inc
add
mov
add
int
pushf
mov
pop
add
or
int
bound
xchg
and
and
loope
xor
jnp
cmpsb
push
cmp
leave
add
test
jmp
int3
std
xchg
mov
movsb
js
aad
scas
in
aaa
mov
lods
in
sbb
lods
sar
sub
out
mov
arpl
es
xor
shrl
gs
shrb
idivb
nop
or
pop
aaa
test
fwait
xchg
pop
in
push
movsb
popf
subl
stos
mov
push
mov
and
cmp
sbb
pop
dec
add
adc
ja
and
inc
xchg
pop
or
aam
es
mov
xchg
dec
jae
nop
sbb
mov
cmp
jo
rolb
and
jns
xchg
cmp
sti
das
xlat
xor
jmp
pop
ret
xor
leave
outsl
xor
mov
dec
aad
call
xchg
lea
fimuls
into
pop
mov
xchg
repz
mov
lahf
ljmp
daa
call
test
negl
decb
sbb
prefetch
or
mov
mov
mov
and
das
lret
test
int
test
mov
mov
inc
nop
scas
incl
aad
test
addr16
jb
push
sub
insb
aad
cmpsb
inc
xchg
jne
test
ljmp
cmp
or
stc
cs
lret
in
mov
mov
pushl
xchg
xchg
adc
push
mov
or
pop
dec
call
je
fisubrl
mov
addb
push
jp
fldt
mov
sub
repnz
pop
xor
jo
or
jb
sbb
popl
movsb
and
addr16
outsl
icebp
xchg
ret
xchg
in
mov
fs
jo
popf
sbb
adc
fcmovb
test
lods
cltd
ljmp
cmp
cmp
aas
xchg
dec
out
xchg
out
add
jae
lea
mov
stos
mov
mov
jecxz
or
movsb
mov
fimull
shll
sarb
fldenv
sub
int3
sub
jge
push
sbb
jge
sahf
test
fwait
mov
jne
arpl
push
pop
mov
insb
popa
lods
push
call
pop
push
xchg
ret
xor
mov
cmp
sub
repnz
shl
bound
loop
or
dec
mulb
icebp
repnz
enter
xor
insb
out
inc
andb
or
add
std
imul
dec
repz
push
lock
adc
dec
js
sbb
flds
sub
cmp
push
jae
xlat
stc
dec
jo
cmp
test
mov
cwtl
loop
test
call
push
nop
pop
stos
dec
fisubl
lods
popf
sub
shlb
xchg
loop
push
mov
cmp
jbe
in
pop
sub
sbb
xchg
xor
mov
insl
pop
jno
pop
mov
sbb
aaa
mov
je
cs
xchg
sub
sahf
leave
xchg
pop
xor
push
cli
or
sub
shrl
mov
movsb
inc
sbb
cmp
lahf
adc
xor
stos
mov
dec
and
dec
add
mov
mov
mov
outsl
or
insb
fwait
stos
sar
pop
and
sub
popa
inc
xor
lret
inc
jl
fcom
pop
lods
mov
inc
outsl
bound
xchg
jl
incl
and
std
aam
dec
jmp
xchg
or
or
ffree
cmpsb
mov
inc
mov
mulb
push
sbb
ret
ds
dec
inc
dec
push
scas
xor
sbb
inc
push
xor
dec
and
mov
xchg
sbb
sbb
cli
stos
push
fstpt
dec
sahf
xor
test
push
sub
les
pop
dec
mov
inc
pusha
mov
es
mov
outsb
xchg
gs
scas
xchg
popa
pushf
mov
mov
into
mov
add
inc
cmpsl
inc
or
mov
jbe
xor
cmp
cmp
jecxz
jne
add
push
ja
jnp
lock
mov
hlt
pcmpgtw
xor
outsl
xchg
jmp
xchg
or
jne
imul
movsl
xor
leave
int3
je
jp
rcrl
or
mov
cmp
xor
loop
xchg
jae
fs
je
ja
xor
mov
push
xchg
inc
aad
sub
dec
xor
mov
dec
mov
pop
cmpsb
xor
jns
sbb
mov
mov
fnstenv
sub
xchg
dec
sbb
out
insb
outsb
enter
mov
dec
cmpsl
sub
fneni(8087
cmpsl
add
fcoms
xor
sbb
or
mov
and
xchg
in
push
mov
icebp
scas
nop
inc
mov
fldl
cmp
lret
dec
jbe
jmp
dec
xor
push
insb
dec
cwtl
das
cmpsl
pop
mov
jp
outsb
mov
mov
faddp
popf
test
mov
jae
dec
mov
xorl
jns
lock
insl
xlat
xchg
mov
cmc
jns
push
adc
pushf
mov
out
repz
out
sbb
dec
add
popa
mov
xchg
test
xchg
fdivrs
sbbb
dec
jns
sub
mov
lret
jne
in
in
js
mov
push
xor
repz
and
ret
mov
push
icebp
pop
aaa
data16
push
cmpsl
jle
fld
les
daa
bound
add
and
pop
aad
aad
dec
out
das
dec
in
jmp
pop
and
dec
repz
mov
mov
or
aaa
mov
mov
rcl
shrb
rolb
cli
dec
jl
inc
testb
inc
sub
cli
sbbl
and
cmc
mov
daa
push
lds
jnp
nop
jne
inc
adc
jno
sub
or
dec
cli
sub
pushf
and
xchg
fsubrs
mov
mov
add
mov
ret
shr
push
xchg
out
jb
mov
es
sbb
pushf
adc
sbb
sbb
push
test
pop
scas
sbb
nop
cmc
incl
lods
sbb
mov
loope
imul
lret
imul
addr16
loop
and
sub
lahf
adc
popa
dec
dec
mov
fmull
sub
mov
mov
add
into
push
repnz
jo
in
aam
faddp
bound
das
negl
movsl
xlat
int3
out
popa
enter
jne
std
shr
adc
lods
xchg
pop
call
sbb
int
test
push
pop
cmp
sub
test
or
pop
dec
pop
pop
fstps
addr16
sub
testb
mov
scas
sbb
loope
jno
xchg
jno
push
push
and
mov
rcr
sbb
rclb
push
cmpl
into
les
push
lret
or
pushl
test
bound
cmpsl
dec
adc
call
inc
fsubrl
pop
lret
push
fnstsw
out
pop
scas
mov
or
jns
jbe
gs
sbb
dec
in
mov
fs
push
shrb
xor
mov
mov
in
hlt
mov
stos
pop
adc
jo
scas
jns
add
and
jp
js
sarb
call
adc
int
sbb
mov
xor
mov
icebp
fwait
pushf
sysenter
pop
iret
test
cmp
fldenv
xchg
pop
mov
scas
sub
cld
mov
mov
pop
rcrb
paddw
jnp
push
dec
stos
sti
dec
adc
les
test
xchg
fisubrl
xlat
fs
insl
inc
sbb
stos
insl
test
jle
outsl
cmp
or
ljmp
imul
pop
jl
cltd
dec
insl
int
cmp
push
mov
jmp
cmp
jl
jne
xor
loopne
hlt
daa
fldl
push
mov
inc
int
cwtl
stos
and
adc
or
push
in
jmp
ljmp
insl
lcall
out
cmc
adc
rcll
adc
jmp
dec
outsb
jbe
adc
imul
jne
add
aad
sti
mov
lcall
mov
push
lret
mov
adcl
test
cmp
cli
sti
pop
adc
adc
mov
lock
lret
aam
pmulhw
lret
test
cli
repnz
push
and
fimuls
daa
cmp
jl
sbb
ret
nop
inc
sub
jle
in
sbb
dec
sub
test
imul
push
push
daa
sub
add
adc
jl
jnp
push
mov
imul
sar
or
push
inc
loope
mov
andl
push
mov
fcos
add
and
jg
cmp
das
movsb
xchg
mov
pop
push
cmc
test
int3
dec
jns
adc
inc
jecxz
push
int
xchg
aas
adc
dec
xchg
mov
lret
shlb
mov
ljmp
pusha
pop
lahf
inc
add
mov
xchg
pop
add
fsts
mov
fsubp
add
daa
out
xlat
mov
hlt
sub
in
pop
test
out
and
popl
and
lcall
js
mov
std
sbb
mov
dec
int3
pusha
pop
ja
adc
mov
mov
xor
int
test
inc
iret
dec
out
inc
push
iret
sub
cmp
imul
rorb
push
xchg
sbb
mov
push
cmp
pop
push
sbb
daa
leave
sti
aaa
inc
sub
cwtl
mov
je
cmpsl
inc
rcr
cld
jo
in
jge
pop
iret
cs
dec
sbb
iret
add
dec
enter
jae
mov
fcmovnbe
mov
xor
aam
shlb
push
jp
ljmp
cmp
gs
ficompl
xchg
xchg
pop
movl
pop
scas
inc
sbb
stos
or
cltd
lods
lret
push
push
xchg
jbe
in
and
aad
leave
pop
mov
xor
xchg
iret
pushl
xor
addr16
mov
or
and
cltd
add
faddl
test
aad
mov
into
dec
sbb
ret
push
xor
call
push
std
xrelease
xchg
aam
mov
or
call
mov
stos
sbb
mov
push
addr16
pushf
jnp
sub
mov
fcmovnu
xor
pop
js
ja
clc
add
leave
aad
int
pop
je
jg
jmp
orl
sbb
jno
pop
add
nop
out
mov
xor
xchg
jb
ja
cld
stc
les
es
roll
jle
jmp
iret
sub
lret
pop
jmp
repz
jae
pusha
dec
add
iret
sbb
push
inc
pop
cmp
mov
stos
pop
test
ret
push
fisubrl
and
scas
ret
push
sub
jno
push
sub
adc
add
jnp
int
sub
cld
outsb
arpl
mov
nop
loop
stos
push
jecxz
push
cmc
fcoms
fcoms
fisubrs
or
push
fxch
ljmp
fcoms
push
jno
dec
sub
call
sarl
adc
mov
mov
push
mov
dec
inc
cmp
in
into
rcrl
cmpsb
adc
sbb
jne
cmc
lods
mov
sbb
int3
mov
or
mov
in
popa
fs
jl
das
jbe
mov
pinsrw
sahf
sahf
cmp
mov
les
bound
cs
mov
test
rorl
mov
ret
dec
add
mov
inc
out
xor
dec
sti
xchg
aaa
mov
sbb
add
dec
mov
mov
jnp
or
fdivrs
inc
int3
mov
rcrb
popf
ja
loopne
jmp
xorb
call
adc
push
inc
imul
pop
jnp
pop
loopne
stc
sbb
cmp
mov
cmpsb
sbb
mov
sti
out
xor
mov
in
mov
mov
movl
in
rorb
addb
cli
ja
data16
dec
fdivl
mov
add
cmp
or
push
and
push
into
xchg
nop
mov
and
pop
pop
sahf
xchg
outsl
add
loop
scas
add
cmp
stos
cmc
or
or
outsb
add
mov
or
shrl
insb
loop
sub
pusha
lcall
inc
pop
adc
into
sub
movsl
aad
ret
in
dec
out
outsl
shrl
das
cmpsl
mov
xchg
mov
cmp
lret
sub
scas
lahf
add
ss
add
addr16
fwait
cmp
mov
and
sub
aas
push
mov
das
mov
mov
jge
adc
adc
fsubrs
stc
mov
inc
add
xor
js
pop
daa
add
dec
vmovaps
xchg
stc
rcl
sbb
jnp
xor
add
push
in
sub
inc
xor
push
inc
jecxz
and
push
test
or
aaa
popa
mov
cmp
pusha
int3
push
insb
sub
scas
mov
jle
mov
mov
xchg
enter
inc
mov
cwtl
add
lock
loopew
shll
lods
arpl
stc
xchg
mov
outsl
aam
dec
shll
dec
xchg
repnz
lea
adc
push
gs
or
lret
push
movsl
insb
push
mov
lret
mov
mov
or
sti
jae
mov
jae
fcoms
daa
xchg
insl
xchg
icebp
arpl
icebp
aaa
xor
lahf
sub
fs
adc
lret
aam
lds
pushf
sti
out
les
call
lret
sar
repnz
ds
mov
adc
jmp
sbb
es
jnp
out
jge
enter
xchg
iret
dec
movsb
sti
ds
jne
lods
xchg
hlt
xchg
mov
call
test
push
ret
sbb
gs
mov
jl
shl
loopne
xor
add
pop
pop
lods
clc
jns
cmp
xor
cmp
or
arpl
jnp
aaa
pop
dec
cmp
push
aas
lret
aas
push
jbe
push
js
addb
pop
cli
jb
fidivrs
jmp
xor
mov
scas
jns
mov
loop
call
dec
fxch
mov
pusha
lods
and
lret
mov
mulb
roll
daa
rcrb
adc
dec
mov
stc
shll
push
mov
test
shrl
cld
xchg
mov
jne
mov
dec
jmp
das
daa
inc
adc
mov
rcl
jle
sbb
mov
cwtl
iret
or
sahf
testl
adc
js
mov
pop
xchg
xorb
or
mov
push
inc
inc
test
push
fcmovu
pop
adc
data16
mov
movsl
in
mov
in
aaa
or
jb
lock
lret
sbb
fidivrs
in
xchg
or
ret
out
fcoms
sub
mov
js
flds
loopne
inc
xor
popf
cmp
mov
into
popf
inc
jmp
fstpl
cmp
mov
adc
aam
movlps
push
cmp
mov
arpl
mov
add
add
rorb
cmp
lea
divl
mov
pop
lds
mov
test
out
fiaddl
sarb
cmp
push
mov
sub
dec
repnz
test
pop
scas
xchg
push
rcrb
mov
jb
push
lcall
adc
xchg
loope
push
test
gs
push
push
and
ds
arpl
ds
pop
in
das
mov
jnp
test
xorl
sbb
add
lret
and
adc
add
inc
pop
add
iret
rclb
adcb
xlat
xchg
fldcw
xor
mov
in
pop
jecxz
push
pop
and
stos
ret
pop
ficoms
and
notb
sbb
fdiv
sbb
daa
mov
leave
adc
mov
add
adc
jp
push
ss
or
clc
fwait
jae
mov
lret
std
mov
xchg
fbstp
and
sbb
adc
inc
xchg
cmp
sub
mov
jnp
add
pusha
pop
inc
dec
out
scas
sbb
out
mov
std
mov
push
inc
sub
std
jnp
push
jo
and
and
xchg
sbb
outsb
aam
cmp
repnz
pushl
push
lahf
fisttpl
or
inc
in
addr16
inc
fwait
add
lret
cld
mov
popa
loopne
inc
mov
adc
adc
sub
inc
xchg
push
lods
ja
or
int3
ds
imul
xor
test
jg
mov
frstor
cmp
out
jo
mov
mov
shlb
and
popa
cmpsb
inc
and
dec
jo
sahf
lods
mov
push
gs
mov
out
xchg
jge
pop
mov
xchg
and
mov
or
int
pop
int3
movzbl
push
fdivrl
jl
xor
xlat
mov
mov
fwait
cmpsl
scas
frstor
pop
loopne
add
int
std
mov
or
shrb
fildl
push
pop
xchg
clc
mov
repz
fdivr
mov
mov
jbe
mov
or
insb
sub
add
lahf
mov
in
and
loop
jno
pusha
fmul
mov
clc
xchg
mov
or
cwtl
jae
fwait
and
lret
jmp
addl
xor
aam
pop
dec
icebp
jne
lret
sub
jge
pushf
iret
test
jb
cmp
sarl
dec
cwtl
dec
sbbl
push
into
jb
dec
xor
insb
cmp
fcomps
and
cmc
xchg
jno
inc
jg
les
or
cld
mov
ret
mov
cli
mov
jnp
repnz
cmp
jg
push
xchg
and
cwtl
push
push
cs
fcomps
daa
push
fcoml
jmp
add
cltd
mov
cmp
ret
dec
inc
and
and
or
lock
cmpsb
jl
daa
xor
lret
jg
mov
mov
mov
mull
jle
mov
xchg
push
out
idiv
push
das
adc
mov
fwait
adc
jnp
pop
or
mov
cmc
inc
mov
sbb
cli
mov
pusha
jns
sbb
dec
aam
mulb
or
sub
jb
pusha
and
lods
xor
xor
mull
inc
jge
sbb
fadds
shrl
mov
cltd
aam
jge
hlt
mov
mov
cmpsb
out
daa
xchg
aam
add
pop
fs
ja
add
js
mov
sbb
add
daa
sub
cld
jp
mov
dec
scas
and
dec
dec
cmpsl
pusha
dec
mov
aam
dec
push
and
xchg
sub
mov
std
imul
xor
pop
sub
ficomps
xor
movsb
ret
xor
pop
aam
sbb
in
mov
jbe
dec
aad
pop
sbb
mov
xchg
xchg
aam
dec
dec
arpl
sbb
adc
sbb
shl
mov
adc
cmp
out
jo
jle
inc
jp
mov
ja
imul
xchg
xor
fwait
lock
jae
ds
shlb
xchg
pop
mov
rorl
insb
adc
mov
fnstcw
aam
mov
shll
xlat
xchg
xchg
adc
hlt
cmp
rorb
adc
and
inc
cmpsb
mov
hlt
mov
xor
jno
cmp
mov
int
jbe
pop
test
pop
clc
xorb
mov
mov
jp
xchg
lret
or
repnz
addl
and
sahf
loope
add
inc
pop
add
cmp
sub
cld
pop
mov
sahf
xchg
arpl
flds
sarb
movsl
cs
mov
sub
sbb
push
shrl
imul
xchg
dec
and
into
ja
cs
mov
mov
jp
push
sti
jae
cmpb
imul
movb
iret
push
adc
movsb
sub
xchg
shrb
insl
dec
sbbl
mov
pop
cmp
add
insl
dec
sub
push
and
leave
and
fsts
cmovg
cmp
push
push
test
or
pop
daa
xlat
sbb
mov
aas
nop
xlat
sar
negl
popa
inc
test
and
cmp
or
pop
jmp
dec
popa
sarl
call
dec
popa
aas
mov
cmp
pop
mov
into
js
gs
sub
test
imul
fiaddl
sbb
and
divb
sbb
icebp
inc
mov
push
mov
icebp
ja
fisubrs
or
out
lds
xchg
mov
shrb
adc
add
stos
je
mov
leave
mov
icebp
cmp
lahf
in
fiadds
mov
dec
push
fdivrs
iret
rcll
scas
cmp
xor
push
cli
icebp
xor
fsubl
in
dec
adc
inc
pusha
mov
lock
jmp
in
inc
and
cli
push
rcrl
pop
pushf
pop
iret
movsl
dec
insb
add
cmpsl
out
loope
or
pop
insb
xor
mov
loop
loop
xchg
add
add
sub
xor
inc
pop
xor
sbbb
out
add
popa
psrad
outsb
mov
mov
inc
sbb
insl
fcomi
ljmp
inc
in
xorl
arpl
mov
fldcw
or
xchg
mov
or
mov
mov
bound
gs
ss
dec
fistpll
jecxz
lret
iret
out
sbb
fwait
adc
sub
cmp
push
xor
inc
lea
pop
sub
mov
insl
dec
dec
xchg
cmp
ret
stc
clc
mov
cmpb
jno
setbe
dec
dec
push
iret
adc
add
test
cmc
mov
orb
inc
xchg
call
arpl
pop
and
sub
ret
pop
movsl
loopne
ss
lret
jge
out
or
or
fwait
js
add
push
jg
push
mov
sahf
imul
aad
movb
mov
cmp
mov
mov
mov
adc
gs
mov
mov
sbb
xlat
fimull
mov
rcrb
neg
mov
dec
into
fnstsw
out
jno
pop
movsb
or
mov
bound
leave
les
cmc
cwtl
rcll
push
adc
lds
push
fwait
mov
xor
adc
mov
mov
dec
testb
divl
and
paddw
or
or
into
and
test
mov
int
test
mov
xor
push
int
adcl
push
push
and
add
imul
inc
outsl
stos
repz
cmpsl
fnstenv
mov
movsb
xchg
lahf
or
xor
mov
fs
cwtl
insb
sbb
sarl
jno
sbb
push
test
cmpsl
test
push
test
fdivs
leave
test
mov
push
or
dec
nop
insb
stos
jo
jb
ss
aam
mov
aad
data16
push
lcall
xchg
fidivl
sub
and
rcll
xchg
pop
pop
mov
cmp
mov
mov
xchg
inc
add
inc
imul
sub
stos
mov
add
or
adc
jns,pn
pop
xlat
adc
pushf
scas
xchg
xchg
and
jecxz
pop
inc
mov
nop
int3
test
pop
sub
js
mov
dec
imull
sub
std
sti
xchg
mov
xor
mov
dec
cld
adc
cmp
cmp
std
mov
data16
xchg
es
ja
imulb
stos
roll
sahf
neg
sbb
push
push
lods
fwait
xchg
pop
and
pop
xor
lcall
cld
xchg
outsl
rorb
mov
pop
xchg
test
jne
insl
jg
sbb
mov
stos
mov
sbb
jbe
xor
sub
arpl
loop
ds
xor
mov
mov
imul
and
add
nop
mov
mov
add
shrl
lea
push
and
lret
xor
and
inc
or
sub
or
sub
xchg
cmp
leave
popf
jmp
in
cmc
push
sbb
lock
fcoml
in
mov
push
mov
dec
inc
mov
push
mov
mov
mov
sti
stc
lods
mov
int
sbb
pop
pusha
xchg
and
mov
pusha
and
mov
pusha
rcrl
push
adc
push
shrb
aaa
mov
outsb
mov
add
push
add
xor
push
fs
pop
add
ja
adc
popf
fdivl
or
mov
pop
push
add
iret
push
imul
add
sar
dec
jae
incb
dec
cmp
mov
jnp
jae
jno
mov
out
fiaddl
sbb
inc
jne
mov
pop
mov
scas
scas
rclb
pop
leave
jge
pusha
test
not
cmp
push
adc
arpl
mov
stos
jnp
or
std
xor
mov
and
xchg
in
sbb
test
xor
adc
ljmp
emms
push
mov
ljmp
push
add
aad
sub
and
sbb
negl
push
mov
lcall
lret
sbb
imul
and
arpl
cmp
sub
mov
scas
ljmp
rcll
dec
jne
sub
xchg
mov
push
xlat
ljmp
sub
adcb
inc
daa
xchg
or
fistpll
jl
xor
loop
inc
mov
dec
icebp
jp
mov
or
pop
inc
jg
in
sbbl
aam
cli
add
data16
sbb
or
lds
mov
cmp
cs
cmpsl
ficompl
sti
dec
mov
add
out
or
mov
mov
bound
dec
addr16
dec
jnp
or
sub
clc
fwait
pop
and
and
inc
repz
mov
faddl
jae
cmp
pop
pop
add
pop
gs
fisubs
push
call
popa
daa
jge
cmpsb
iret
xchg
outsb
or
mov
xor
rolb
adc
js
push
xchg
test
addl
fidivrl
mov
or
push
or
cs
mov
ret
scas
stos
jge
adc
jns
in
repnz
andl
jge
xor
fstpl
ljmp
inc
inc
sahf
leave
mov
adc
mov
push
in
inc
mov
xchg
push
sbb
xor
push
lock
lahf
add
mull
jne
mov
insl
pop
popa
mov
aad
jns
out
cmp
xlat
xor
cmpsl
aaa
push
or
fimuls
mov
jg
or
cwtl
cmp
xchg
test
repz
mov
or
std
outsl
jno
dec
push
ds
xchg
in
cli
pop
inc
int
xor
out
lods
mov
test
lds
inc
push
mov
push
sbb
mov
addr16
xor
lcall
popf
jbe
jmp
orl
adc
jo
aad
cs
shl
pop
aad
repnz
xchg
sub
cli
add
sbb
fsubrl
rcr
aaa
push
scas
add
fstps
mov
push
inc
add
fmuls
je
inc
mov
aas
std
or
faddl
xchg
pop
and
sub
fdivs
lods
add
sub
jne
shrb
jnp
dec
pusha
adc
sbb
js
dec
xor
or
subl
add
dec
out
xor
xchg
push
jl
movsb
cwtl
pop
cmp
in
stos
sahf
add
fstpt
push
add
pop
sbb
cmpsb
sub
dec
pop
pop
iret
lret
xor
push
pop
sub
fisttpll
and
hlt
jecxz
aaa
push
push
push
inc
push
imul
or
sub
sub
ret
fdivl
dec
gs
jecxz
mov
mov
cmpsb
dec
add
cli
adc
and
mov
mov
sub
xor
pop
fcomps
stc
cwtl
in
jge
lods
pop
cli
std
sbb
call
sbbl
pop
mov
sbb
push
addb
fidivl
mov
orl
jne
das
jae
sbb
inc
test
mov
loop
sti
or
fsub
shl
xor
push
lcall
fwait
arpl
xchg
mov
std
sbb
lock
pushf
shl
sar
fisubs
iret
jne
jnp
xchg
lret
dec
adc
or
out
fwait
mov
jae
add
arpl
add
pop
jb
rcl
out
clc
stos
test
push
mov
cmpsl
mov
mov
cwtl
mov
mov
int3
jnp
shrb
enter
dec
dec
sarb
cmc
push
lcall
and
or
fsubrl
dec
das
cmp
add
dec
imul
mov
ret
insb
in
xchg
xchg
sbb
and
lea
std
xchg
or
inc
pop
daa
fwait
mov
cltd
cmp
pop
push
mov
add
test
testb
shlb
ret
mov
adc
mov
and
jo
push
cmp
arpl
fiadds
add
fdivr
fidivs
cmp
xchg
ret
dec
les
jl
mov
mov
push
pop
je
xor
push
addr16
xchg
imul
sbb
push
inc
mov
rcrb
jp
push
test
inc
imul
mov
and
and
and
xlat
mov
xchg
pop
sub
and
sbb
pop
mov
jbe
lea
lahf
in
add
mov
and
testl
stc
push
and
test
ds
jecxz
ja
ja
test
sub
outsb
nop
fildl
add
push
fbstp
pop
jle
jge
adc
leave
fildl
and
fcomps
aaa
loop
loopne
cmp
pushf
mov
fists
movb
xor
add
pop
push
test
add
pop
aam
insl
pushf
rcl
test
subl
push
inc
adc
sarb
sbb
test
mov
and
dec
int3
cwtl
popl
xor
sub
inc
ror
add
inc
inc
and
xchg
mov
out
fs
push
fmull
int
das
pop
and
lcall
test
loopne
popa
cld
dec
or
pop
pop
dec
jge
xchg
adc
roll
xor
fistpll
mov
jb
daa
cli
pop
das
out
es
mov
test
sub
idivl
pop
scas
insb
inc
fistps
xchg
mov
lcall
xchg
pop
outsl
fcomp
test
fisubl
sbb
es
or
test
pop
mov
sbb
mov
xor
int
jne
xorb
push
fcos
aaa
enter
add
adc
mov
mov
jmp
loop
mov
outsb
ret
xchg
mov
fsubrs
in
mov
rolb
mov
and
out
mov
mov
cmp
adc
xorb
jle
sbb
pop
mov
or
cmp
stos
inc
add
lods
movsl
mov
ljmp
push
stos
lret
inc
push
scas
pop
dec
push
push
jmp
pop
xchg
xchg
loop
or
loop
mov
cmp
sub
ja
enter
dec
mov
jae
cmp
pop
stos
loop
pop
xor
dec
sub
insb
dec
mov
lods
jge
adc
ret
and
fldenv
pushf
push
xchg
xchg
mov
stos
into
cmp
in
jmp
aaa
mov
loope
jne
mov
pop
mov
or
imul
outsl
xchg
leave
stc
popa
test
push
xlat
popa
std
xor
mov
sub
cmp
jne
sub
jmp
stc
adc
cs
adc
loop
cmp
mov
xlat
js
sbb
mov
std
mov
in
xor
cmp
mov
cwtl
test
cld
xchg
xchg
and
out
stc
lods
stos
dec
lds
fcomps
fstpt
sub
shlb
test
imul
push
ret
pop
xchg
iret
in
xor
cwtl
pop
ss
xchg
pop
dec
mov
cmp
aam
lcall
scas
sub
cmc
dec
imull
mov
sbb
mov
pop
mov
out
and
ljmp
sub
insb
xor
mov
pop
divb
repz
mov
pop
cmpb
incb
fidivs
add
inc
fsubr
jnp
test
mov
in
add
cli
dec
jmp
inc
out
inc
jge
lahf
cmpsl
enter
pushaw
test
ret
adc
lret
mov
mov
adc
mov
cmp
movsl
push
loope
sub
es
or
das
je
xchg
dec
ret
pushf
sbb
hlt
fcomp
pop
clc
sahf
movsb
or
in
andl
adc
pop
jb
inc
and
xchg
sarl
xor
push
jmp
mov
lock
shrb
inc
rolb
cmp
jne
xchg
mov
aas
dec
daa
cmpsb
imul
rcrb
sar
fildll
pushf
icebp
jl
sbb
mov
adc
mov
in
shrl
lods
not
sbb
push
aas
rclb
xor
sbb
push
push
jle
jg,pn
adc
pushf
xchg
pop
int3
jl
mov
ret
or
xor
push
add
pop
mov
pop
fisubrl
popa
cmpsb
out
cmc
inc
test
ret
lock
cld
popf
fisttpl
mov
aad
cmp
shll
mov
jp
pop
dec
jno
push
stos
lods
mov
dec
jo
cmp
leave
ror
bound
xchg
test
arpl
xchg
cmpsb
sub
adc
stos
ss
jnp
aam
stos
test
mov
filds
push
or
mov
stos
push
lret
cmpl
fsts
xor
pop
mov
mov
cmpl
sbbl
roll
mov
xchg
pushf
push
cs
dec
lret
add
sar
ss
ret
aam
cmc
js
jo
sub
test
scas
lock
inc
repnz
mov
popf
or
push
pop
jbe
jnp
das
jne
movsb
xchg
mov
cmpb
cmp
jmp
mov
addb
mov
sub
ret
push
push
cld
dec
mov
les
lahf
jl
jg
mov
sbb
sbb
push
iret
sarb
inc
jle
out
cmp
jbe
mov
lret
insb
cmp
inc
dec
pop
add
insb
pop
and
je
mov
jl
rclb
mov
xchg
aas
push
push
pop
adc
test
loopne
mov
inc
pushf
or
ds
lret
pushf
xchg
mov
mov
and
cmp
in
sub
add
and
adc
sbb
lcall
xor
insl
adc
lds
sub
in
cmp
jb
mov
shlb
addr16
dec
loope
dec
xchg
cwtl
test
hlt
std
xor
inc
fcmove
nop
clc
or
mov
dec
push
cmp
lds
pop
in
lods
ficomps
mov
add
int
adc
es
cmp
movsb
mov
sbb
dec
lods
aaa
lods
jb
lret
shll
pop
mov
lea
aad
adc
adc
add
inc
and
sub
stos
popf
dec
push
adc
sub
in
dec
aam
rcrb
sub
mov
sbb
adc
adc
sar
xor
add
pop
call
test
mov
fs
xchg
inc
outsl
xor
pushf
cwtl
xchg
mov
ficomps
push
cmp
xchg
fwait
pop
pop
lock
pop
push
adc
jge
jno
cli
mov
or
mov
xchg
mov
xchg
push
xor
movsl
jg
xchg
add
and
int
xchg
mov
sbb
cmp
jbe
lock
psllw
je
xchg
loopw
ja
push
push
divb
and
pop
xor
xor
and
add
inc
xchg
xchg
inc
repz
fldl
aad
push
mov
dec
push
les
pop
dec
sahf
lods
repz
sbbl
lret
mov
iret
add
push
hlt
mov
sbb
and
fistpl
outsb
loop
out
jg
lret
popa
mov
shl
mov
push
cmp
shlb
dec
jg
xchg
loop
or
dec
push
std
sbb
or
sbb
dec
leave
pusha
cmpsb
test
xchg
sub
jecxz
les
ss
pop
dec
test
outsl
in
pop
fimull
pop
bnd
sar
jl
stos
lock
and
fwait
push
push
out
inc
out
stc
cmp
adc
je
cmp
addr16
jne
mov
jne
push
pop
or
outsb
add
jmp
inc
mov
fiadds
call
inc
xchg
jae
push
pop
addl
and
xor
ficompl
cwtl
insl
mov
es
sbb
ljmp
jl
cmpsb
jo
sub
mov
pop
jns
lret
cltd
mov
lods
or
repz
lds
aaa
mov
push
gs
inc
sub
pushf
mov
dec
dec
in
sub
jl
add
jge
lds
int3
out
je
data16
pop
pushf
ja
pusha
stos
pop
cmp
mov
mov
pop
sbbb
pop
inc
aam
fstl
mov
jg
sbb
dec
jp
lock
cmp
cmp
mov
adc
adc
gs
xchg
insl
cmp
ds
fldl
popa
scas
sub
outsb
sub
jg
popf
lock
cmc
mov
test
inc
ficomps
push
rorl
xchg
mov
jmp
insb
mov
jecxz
iret
mov
inc
jmp
mov
fldcw
dec
or
es
push
hlt
jle
ficoms
jmp
push
repz
inc
jne
stos
sbb
xchg
sbb
out
inc
fs
sbb
xor
fisubs
inc
scas
imul
es
push
adc
xchg
mov
cmpsb
adc
test
push
popf
xor
dec
adc
js
fimuls
fcmovu
mov
stos
or
mov
lret
lret
xor
lea
stos
mov
aad
stc
sbb
jge
rclb
jno
dec
or
push
lret
clc
xor
ljmp
outsl
cmp
in
lahf
push
les
inc
push
push
mov
pop
in
hlt
mov
dec
out
and
sbb
mov
daa
sub
testl
bound
icebp
sarb
xor
push
and
mov
std
xor
inc
lods
cmp
leave
pop
lea
xchg
mov
xchg
out
add
push
xchg
push
push
xor
sarb
push
or
jg
test
sub
sbb
cmpsb
jge
lds
dec
dec
fstl
mov
subb
dec
xorb
test
cli
pusha
fmuls
cmp
adc
pop
js
addr16
mov
dec
lret
arpl
xor
insl
insb
arpl
ret
sub
in
data16
add
scas
xchg
fisttpll
mov
or
pusha
adc
in
iret
cmpsb
std
loop
enter
jmp
xorb
into
inc
cmp
insb
mov
aas
adc
and
mov
test
dec
jno
or
jb
lret
push
ret
push
fcoms
sub
inc
das
test
scas
fwait
cmp
pushf
add
cltd
test
lcall
push
stc
lret
orb
fwait
hlt
cli
inc
and
xchg
sahf
jp
mov
adc
test
fdivr
nop
rcrb
jne
repz
out
inc
xchg
mov
lahf
pusha
imul
push
lods
pop
cmpsl
pop
inc
inc
xchg
mov
mov
pop
nop
xchg
sub
dec
adc
movsb
lret
loopne
sub
jno
ljmp
push
or
adc
add
fiaddl
sub
mov
fwait
inc
push
test
call
bswap
decb
sub
scas
mov
sbb
nop
jmp
and
mov
cmp
mov
call
sbb
call
iret
fisubrs
in
out
and
push
inc
insl
mov
sbb
jne
popa
mov
dec
and
jno
or
xor
stos
loop
add
aam
sub
sbb
das
xchg
mov
cld
mov
ja
cmpsb
dec
mov
lods
outsb
xchg
prefetch
aam
mov
cmp
push
xor
sub
imul
pop
sar
pusha
addr16
in
adc
frstor
adc
stos
sbb
aaa
out
cmp
movsb
mov
fldt
cmc
mov
sbb
scas
mov
shll
imul
ret
cmp
cmpsb
xchg
xchg
repnz
pop
jns
push
outsb
pop
mov
and
xor
test
xchg
dec
xlat
aaa
ror
sub
xor
cmp
test
push
dec
call
add
xor
mov
mov
outsb
cmp
add
add
shl
jnp
mov
sub
das
xchg
jecxz
mov
cmpsl
sub
push
xlat
mov
subb
push
dec
inc
or
lea
arpl
mov
ljmp
jp
jg
scas
aaa
jmp
in
lds
neg
mov
fistpl
xchg
lret
movsl
xchg
pop
jle
jecxz
int
pop
stc
xor
popa
xor
frstor
xor
icebp
xchg
xchg
icebp
js
std
fdivrp
int3
clc
fs
nop
dec
imul
cmp
fisubl
or
test
inc
scas
jmp
add
add
push
dec
sbb
pop
jb
fimull
add
in
and
sbb
xor
pop
fwait
adc
insl
xor
loope
inc
sub
xchg
mov
je
adc
data16
and
dec
or
data16
pop
fwait
test
or
aad
pop
xor
and
xchg
xor
sub
in
inc
xchg
out
fistps
fnsave
inc
xchg
pop
and
add
mov
fdivr
mov
icebp
sub
out
lret
loop
sbbl
pop
xor
mov
add
cld
lcall
push
loope
dec
jae
mov
mov
sub
mov
pop
sub
add
xor
push
movsb
pop
dec
jmp
loop
xchg
inc
mov
adc
andb
ret
test
mov
daa
mov
mov
inc
shll
xchg
mov
mov
xchg
ljmp
sub
jae
and
pushf
push
pop
lcall
stc
xchg
out
jecxz
lock
aaa
fstpl
iret
jp
sbb
mov
cmpl
ss
mov
inc
and
pop
mov
cmp
xchg
insb
lret
xchg
xor
lret
ret
xchg
insb
into
xchg
pop
push
pop
ficoml
cmovo
add
or
jmp
repz
cli
insl
bound
movsb
dec
pop
mov
mov
cltd
repz
stos
rol
pop
jl
push
dec
adc
pop
push
xor
mov
push
ficoms
mov
lock
insb
rolb
movsb
mov
xchg
jmp
outsl
sbb
xchg
jb
add
xchg
xchg
xor
sbb
movsb
pusha
subb
mov
cmp
xchg
iret
adc
sub
cmpsb
unpckhps
sbb
movsb
cmp
sbb
adc
sub
push
cmpsb
push
out
lods
repz
cwtl
insb
cli
lret
into
sbb
test
pop
call
pop
pop
outsb
and
dec
add
inc
ret
loope
pop
stc
out
popa
adc
das
mov
mov
out
sbb
mov
je
repnz
and
push
insl
adc
cmc
mov
sbb
and
mov
sbbb
dec
mov
sbb
dec
in
cmpsb
imul
pop
dec
inc
bound
xorl
movsb
das
xchg
add
flds
cmp
inc
lahf
popa
mov
xchg
pop
lock
jmp
mov
lcall
cmp
mov
loopne
aad
jns
or
push
ja
xchg
mov
and
sub
push
in
jno
sbb
jl
ret
xchg
repnz
adc
xchg
hlt
mov
test
fldenv
sahf
sahf
mov
outsl
and
dec
pop
ret
or
pop
adc
int3
sbbb
mov
imul
lcall
fdivrl
cmp
lcall
and
xor
and
xchg
das
gs
sbb
mov
jmp
sbb
pop
out
push
xchg
adc
cltd
sar
pop
std
jge
dec
shl
push
les
pop
adc
movsb
leave
xchg
sahf
adc
pop
repz
cmp
jmp
movsb
fistpl
je
push
xor
add
sti
push
dec
mov
sti
movsl
int
aas
adc
jmp
loope
mov
movsl
mov
mov
cmp
ret
stc
insl
pop
lahf
pop
xor
shll
test
loop
add
push
sub
jge
jl
push
and
dec
sbb
add
sarb
jp
xor
inc
and
sbbb
jmp
xor
insb
jno
out
pop
jnp
sbb
rcll
xchg
fcompl
push
mov
or
shrb
mov
aad
xchg
into
addb
xor
jb
pop
jle
mov
cli
test
bound
xor
lods
mov
clc
mov
addr16
mov
jl
pop
adc
jae
and
loopne
insl
pusha
mov
cltd
jno
jne
stos
enter
movsl
mov
pop
fs
repz
test
mov
push
rclb
pusha
ds
mov
cmp
ds
fstp
sub
shrl
lcall
xchg
lahf
enter
push
xchg
out
dec
cmp
or
pop
enter
sbbl
mov
fcmovu
pop
outsb
loop
mov
sub
ds
and
sahf
pop
add
mov
stc
scas
jge
inc
push
xorb
inc
add
int3
pop
out
vmread
pop
fsubs
testl
adc
lret
in
fwait
cmpb
iret
outsb
sbb
push
xchg
lds
loopne
cs
out
mov
mov
jae
rclb
ja
test
pop
or
pop
mov
aad
dec
sbb
add
sbb
jl
jge,pt
sbb
adc
mov
outsb
jecxz
lahf
push
fdivp
ret
mov
into
sbb
mov
pop
push
sub
fwait
add
lods
lock
or
push
add
stc
jo
mov
xor
aad
cmp
push
das
inc
outsl
out
and
mov
insb
enter
inc
test
jp
test
adc
pop
xor
mov
in
xchg
mov
jl
es
jbe
repnz
in
jbe
xor
dec
or
and
mov
inc
fnstsw
add
pop
and
add
lods
es
dec
rorl
mov
xor
shrb
lret
pop
jbe
cmc
pop
adc
std
jmp
pop
or
insl
dec
lds
cli
clc
icebp
cmp
add
push
rcll
dec
inc
rorb
sub
xchg
inc
jne
movsl
dec
in
push
negl
cs
inc
cmpsb
rolb
dec
dec
mov
test
fs
mov
jl
xor
cmp
push
test
push
clc
inc
cmp
std
add
testl
mov
cmp
lret
insl
int3
inc
out
dec
xchg
dec
leave
jne
jb
fsts
jge
dec
lods
les
mov
pop
test
jb
cmpb
dec
sub
scas
test
and
add
out
ljmp
out
das
mov
lods
test
sub
jnp
xor
inc
std
mov
loopne
fisubs
pusha
ja
pop
shld
mov
pshufw
add
out
and
add
xchg
cli
je
adc
xchg
scas
aaa
shll
insl
sub
cmp
sbb
or
sbb
or
jno
leave
shlb
outsb
jg
jns
loop
add
and
inc
in
mov
and
sahf
cmp
rclb
adc
mov
fisttpl
mov
test
or
insl
mov
xchg
adc
aas
into
inc
inc
sbb
das
push
xchg
add
inc
imul
imul
jge
jl
or
mov
fs
mov
xchg
imull
jnp
xlat
in
insl
mov
js
out
sbb
inc
inc
int
jne
lret
scas
mov
xchg
pop
dec
rcrb
lcall
xchg
cmpsl
or
push
push
cmp
inc
fcmovnu
inc
xor
nop
out
pop
in
js
xchg
movsb
xchg
sub
and
cli
je
jbe
insb
add
incb
negl
in
rclb
push
scas
dec
movsb
imulb
je
mov
aam
fildll
in
sub
ss
cmpsl
test
jl
sub
and
mov
aad
and
xchg
mov
cmp
fiadds
lret
mov
test
sti
and
imul
inc
dec
mov
iret
xor
pop
xchg
add
xchg
mov
push
mov
inc
and
leave
pop
outsl
inc
add
ljmp
add
adc
call
hlt
dec
aas
sub
mov
jo
sbb
jbe
aaa
icebp
jge
in
xchg
dec
cmp
sahf
jnp
cmp
mov
xchg
sarb
xchg
pop
pop
adc
lock
popa
loopne
test
pop
test
js
push
inc
adc
pop
inc
push
imul
out
mov
loope
fs
out
cs
pop
jb
stos
mov
popf
xchg
je
sbb
je
outsb
lea
cmp
xor
sahf
push
dec
clc
mov
mov
mov
test
insl
fldl
push
int
push
outsb
rorl
mov
outsb
pop
stc
test
arpl
arpl
xor
push
cwtl
mov
cmp
gs
shrb
mov
arpl
adc
cltd
pop
rolb
push
or
fidivrs
aad
push
cmc
out
dec
adc
xchg
mov
sbb
div
pop
cmp
or
jp
sub
out
xor
call
pusha
out
xor
pop
and
pop
sbb
jle
jns
loopne
out
fmuls
fstl
stos
xchg
add
or
pop
jne
loope
adc
mov
lods
pop
inc
fisttps
fscale
inc
out
stos
jae
pop
jo
orb
std
mov
mov
or
rcrl
jp
pop
outsb
pop
cmpsl
lock
fs
lret
mov
cwtl
ljmpw
insl
mov
jge
jne
pushf
inc
cmc
jmp
cmp
fdivl
jbe
clc
sbb
rcr
cmp
inc
xor
cld
iret
mov
mov
cmp
aam
jmp
xorl
rcr
mov
push
xor
jbe
fisubrs
xor
insb
mov
push
loop
test
or
clc
mov
pop
test
pop
clc
out
inc
and
mov
push
fcompl
je
and
mov
out
jno
mov
cmp
and
nop
mov
push
push
push
push
jmp
xchg
pop
lret
inc
sub
rcrl
dec
or
xchg
rorb
dec
adc
cmp
mov
pop
xchg
inc
in
push
xchg
cmp
arpl
xchg
imul
sbb
sti
js
cmp
inc
add
pop
push
scas
mov
cs
loopne
pop
mov
dec
cmpsl
jb
push
push
shrb
ds
jbe
cmp
fisubrs
inc
xchg
jno
mov
dec
adc
cmp
mov
jno
push
repz
ljmp
lcall
loop
jbe
das
addr16
fsubrs
push
shll
sbb
sbb
or
nop
mov
rcrl
stos
cld
cmpsb
es
push
xor
inc
mov
and
test
fucomi
fmuls
mov
iret
in
mov
xlat
les
jg
jmp
mov
sub
out
roll
mov
lret
sbb
and
mov
cli
lcall
and
jne
incl
sbb
ss
sbb
or
xor
xchg
imul
aad
les
pop
add
scas
inc
add
movsb
push
insl
jge
or
mov
repz
les
jmp
shlb
pop
cmp
mov
xchg
mov
xchg
inc
jns
cmp
jo
not
jae
push
dec
rorl
xor
lods
mov
adc
int3
cmp
xor
sbb
jne
push
jmp
testb
xchg
sub
sub
pusha
and
cltd
add
xor
jmp
jl
lret
stc
out
xor
add
jg
ljmp
xchg
cld
jo
movsl
sbb
lret
fidivrl
aad
fiadds
mov
lret
sbb
jo
pop
ficoml
cmpsl
push
inc
mov
cmpsl
adc
sbbb
scas
in
minps
and
scas
or
leave
and
xchg
sub
mov
into
pop
pop
sub
sub
lock
add
testl
ds
and
and
xchg
shl
mov
insb
inc
and
and
mov
push
dec
or
push
push
sbb
add
adc
push
jmp
aaa
jae
push
lods
sbb
cmpsb
cli
xchg
daa
inc
je
mul
hlt
setno
lds
aas
adc
push
jne
mov
loope
cli
imul
xchg
jns
in
and
roll
mov
nop
repz
addr16
testb
mov
mov
leave
mov
mov
lret
rclb
stc
std
fs
inc
fnstsw
pop
jno
rorb
int3
adc
adc
out
leave
jbe
outsb
jg
insl
pop
adc
movsb
jo
push
mov
test
fiaddl
fldcw
jns
outsl
imul
or
adc
jne
int
adc
cld
int
nop
imull
imul
loope
pop
sbb
cmp
cmp
in
mov
pop
in
mov
into
add
mov
inc
cmc
push
cli
mov
negb
sbb
xchg
sub
adc
pop
inc
jno
imul
les
sub
sbb
mov
push
or
cmp
shlb
add
je
dec
flds
insb
repz
push
test
dec
mov
fcomp
push
dec
dec
adc
lret
jmp
outsb
rcrb
arpl
rep
sbb
dec
pop
pop
fstp
int3
icebp
arpl
out
and
out
mov
xlat
cmp
test
sbb
cmp
inc
fsts
dec
shll
popf
out
jecxz
xchg
nop
sbb
sbb
das
jl
shrl
xchg
xchg
sahf
add
cmp
pusha
xchg
mov
push
inc
fmuls
mov
xchg
inc
in
imul
cmpsb
jb
js
and
pop
and
inc
test
push
outsl
pushf
sbb
shlb
insl
clc
add
mov
xchg
xor
jo
inc
int
sub
pusha
and
xchg
test
add
in
xchg
sbb
pop
subl
out
aad
mov
sub
cli
adc
add
inc
out
inc
in
aam
or
dec
cmp
sahf
push
daa
add
add
push
cmp
mov
sub
rcl
cli
rcrl
jge
pop
cmp
fdiv
mov
cmp
add
fdivrp
in
dec
sbb
pop
dec
lcall
adc
fcomp
jae
jno
arpl
xor
adc
jl
mov
push
mov
cmp
lods
fcmovu
push
add
jecxz
bswap
xchg
pop
cmpsl
sub
xor
jbe
mov
jl
out
sbb
pop
add
mov
inc
or
insl
pop
adc
inc
pop
cmp
loope
mov
es
mov
sbb
cltd
roll
push
out
adc
inc
scas
clc
lods
jnp
aad
mov
cmp
inc
jns
lock
inc
in
fsubrs
or
int3
push
call
insl
jbe
mov
inc
out
clc
xchg
adc
jo
insb
and
out
jg
push
cmpsl
rol
push
push
cmp
mov
pop
add
testb
or
jmp
ret
cmpsl
hlt
sub
xor
adc
lret
jmp
gs
pushf
in
xchg
push
mov
pop
hlt
mov
in
sbbb
inc
aad
jb
and
in
push
ds
jle
mov
cmp
loop
daa
sbb
jmp
shrl
adcb
out
sub
notl
insl
lahf
loopne
inc
or
outsl
lods
dec
dec
cmc
or
add
mov
stos
dec
aam
clc
push
icebp
imul
sbb
and
pop
xor
adc
lods
cmpsl
repz
enter
fs
test
mov
push
rcrl
movsl
jnp
xlat
xchg
or
pop
movsl
in
rorl
sti
insl
push
mov
and
sub
pop
push
mov
sub
jle
ds
push
push
out
imul
dec
add
adc
xlat
lret
ss
or
pusha
cmp
scas
pop
mov
xchg
mov
mov
pushf
dec
pop
xor
icebp
pop
dec
sbb
or
insb
lea
and
lods
je
enter
out
push
aad
mov
add
lret
mov
mov
mov
pop
xchg
loope
adc
into
add
aad
sbb
cwtl
jmp
xchg
jge
jmp
inc
jae
roll
cld
fdiv
xor
aam
cli
ret
rorl
dec
mov
repz
adc
fsubrl
sub
mov
add
cltd
imul
pop
dec
or
in
and
and
add
or
cld
popf
push
jmp
fwait
into
dec
mov
or
jnp
adc
pop
add
inc
mov
jno
imul
je
mov
mov
inc
push
xchg
and
xchg
mov
clc
mov
pop
test
ja
fidivs
in
mov
fldenv
loope
xchg
cld
loopne
or
daa
addr16
pop
sti
jge
pop
shrl
aaa
inc
pop
cli
pusha
pop
gs
rcr
add
and
xor
sbb
ja
dec
sbb
ja
call
dec
sub
fdivl
fimuls
mov
enter
and
jecxz
flds
sbbb
lret
mov
push
pop
jo
sub
in
sbb
cmp
push
shll
adc
aam
push
cmp
scas
mov
push
push
pop
jo
jmp
pop
inc
cmp
or
mov
mov
leave
in
or
push
jmp
push
sub
push
rolb
outsb
add
inc
std
fdivrs
negl
cmpb
in
fnsave
mov
ret
jns
daa
out
dec
loop
daa
js
lret
lds
add
xchg
xor
mov
push
test
rcl
xor
push
adc
sub
mov
jno
pop
or
inc
lock
leave
in
push
rcrl
enter
pop
mov
pop
sub
jnp
push
loopne
and
add
sbb
fadds
imul
and
dec
lds
cwtl
rcl
hlt
adc
mov
and
sahf
or
mov
je
lcall
push
ja
nop
push
fnstcw
test
pop
mov
aaa
sarl
push
mov
pop
fwait
mov
repnz
shl
mov
mov
push
je
xchg
and
loopne
cld
mov
jg
jae
cld
les
sahf
mov
repnz
lret
jbe
loop
push
inc
add
std
shrb
hlt
mov
or
push
lods
sub
pop
pop
cmpsb
cmc
push
lds
mov
stos
lret
fwait
aam
adc
fdivrs
je
pusha
pop
dec
cli
lds
rcll
pop
inc
mov
sub
loopne
xchg
mov
pop
xor
dec
shl
mov
mov
sbb
mov
add
into
stos
sbb
dec
ds
adcb
jle
xor
in
mov
inc
dec
fmull
insb
dec
mov
or
cmc
xorps
repz
mov
rcl
call
sub
roll
cwtl
mov
rcrl
shll
xchg
jmp
adc
or
rorb
mov
ljmp
in
adc
push
mov
and
mov
aaa
pusha
mov
or
or
or
cmpsb
add
and
or
lret
adc
push
mov
push
sarl
or
sub
ds
xchg
jno
inc
jbe
mov
lret
int3
inc
stos
pop
lock
cmp
push
xor
dec
push
sbb
std
cmpsb
mov
outsb
lods
jle
scas
add
ret
jp
xchg
into
lds
out
dec
roll
test
mov
outsl
sub
stos
jbe
adc
test
lds
pop
xchg
push
stos
jne
mov
add
push
pop
dec
xor
jnp
in
cmp
and
scas
mov
jb
push
push
sbb
or
sbb
jnp
jl
fdivr
or
sbb
bound
sbbl
mov
xor
push
cltd
or
cmp
pop
lds
mov
ss
xor
xchg
outsb
call
outsb
inc
jmp
outsl
xchg
lock
inc
xchg
adc
nop
movsl
leave
insb
or
outsl
mov
insb
enter
xchg
dec
mov
push
enter
mov
das
mov
fisubl
xchg
test
call
inc
in
nop
adc
inc
xor
mov
xchg
addr16
push
ret
popf
and
popf
dec
arpl
gs
divl
cltd
xor
pop
sbb
sub
xchg
pop
xor
and
in
int3
lahf
pop
mov
push
loopne
addr16
cmp
pop
xor
shlb
pop
jmp
push
adc
adc
es
jns
out
mov
xchg
push
and
stc
mov
adc
and
mov
jl
and
leave
repnz
lea
jmp
sar
addr16
push
push
mov
ja
loopne
shrl
js
out
sti
xrelease
and
gs
cmp
xchg
xor
jo
pop
mov
hlt
cmp
ret
fdivrl
xor
dec
mov
hlt
dec
push
push
cli
pop
mov
cmp
pop
cmp
sub
test
push
das
sbb
out
aam
test
hlt
ret
adc
enter
inc
mov
jp
lods
pop
mov
fdivrp
add
rolb
mov
rcrb
int3
inc
cmp
pop
sub
cmp
fbld
lock
cmp
je
daa
mov
inc
jns
into
pushf
aam
mov
mov
push
xor
scas
xchg
ror
daa
jp
xchg
loop
cmc
and
test
arpl
push
testb
dec
aas
inc
mov
pusha
mov
mov
repz
cmp
inc
shll
call
arpl
out
xchg
dec
fbld
add
lods
push
scas
je
xlat
push
sarl
sub
dec
clc
mov
cwtl
lods
jo
fldpi
add
shl
gs
cli
inc
or
shlb
mov
enter
test
cmc
pop
fidivrl
in
jg
mov
dec
ljmp
mov
pop
adc
jp
mov
cli
pop
lds
cmp
xchg
jo
in
pop
clc
fwait
mov
mov
jnp
rorb
mov
xor
stc
push
pop
and
cmp
mov
cmp
sub
popf
fwait
or
dec
mov
scas
fdivl
sub
inc
or
ficoml
sarl
sbb
or
ja
cltd
in
push
sub
inc
repnz
mov
xchg
xor
adc
cwtl
mov
rolb
nop
mov
mov
jg
loop
lock
mov
loope
les
adc
ret
add
cs
fwait
repz
loope
shrb
jp
in
sub
push
jmp
pusha
mov
cmpsl
pop
mov
aas
pop
push
push
imul
lock
push
mov
cwtl
mov
fadd
fisttpl
inc
into
icebp
aam
pop
bound
jl
add
ljmp
mov
lods
mov
mov
stc
sbb
pop
xor
jmp
daa
inc
sbb
xchg
add
mov
mov
mov
pop
leave
cmp
into
mov
movsl
enter
adc
and
cltd
push
adc
xor
jae
repz
push
jne
shrb
roll
into
rorb
arpl
leave
add
push
enter
es
mov
scas
mov
mov
js,pn
push
pop
jp
pop
loop
and
mov
mov
mov
cwtl
cli
xchg
mov
or
stc
xor
mov
in
clc
cmp
clc
pushl
aaa
sbb
adc
data16
lret
shl
lcallw
add
cwtl
jge
insl
cmp
test
xchg
iret
test
cmp
jae
int3
sbb
sbb
add
loope
adc
nop
dec
mov
daa
fildl
sbb
sbbl
or
fstpl
cmc
dec
sub
or
mov
pop
std
xchg
cs
leave
mov
xor
outsb
in
jo
and
pop
cmpsl
loop
adc
ja
das
inc
fcomps
push
fbld
sbb
int3
add
adc
inc
xchg
stc
fcomps
and
pop
sub
outsl
adc
ss
incl
mov
push
and
dec
xor
test
cmpsl
jecxz
push
cwtl
data16
cmp
ja
xor
test
std
ficoms
sbb
enter
xor
cmp
jb
dec
and
push
mov
mov
dec
cmp
aaa
mov
mov
sbb
add
mov
imul
push
mov
outsb
int
repz
lret
int3
fdivl
jno
mov
dec
stos
movd
pop
jo
pop
mov
xor
arpl
xchg
mov
mov
push
fstpl
xchg
mov
jp
inc
stos
iret
hlt
sub
lods
jmp
adc
icebp
mov
cmp
mov
mov
or
fistl
enter
insl
lods
sub
mov
negl
in
and
movsl
xlat
daa
mov
adc
sub
lods
mov
xchg
in
jp
pop
in
mov
push
dec
adc
mov
addr16
fbld
sahf
cmpsl
jns
dec
cmpsl
mov
inc
sub
sub
loopne
fildl
jmp
mov
jge
mov
or
mov
pop
leave
les
js
sub
cmp
fsubrs
push
daa
push
inc
jae
inc
rep
clc
sbb
ret
out
int
in
xor
or
lret
and
push
inc
cs
mov
in
jle
mov
lea
sbb
jg
addr16
mov
mov
mov
or
jge
insl
sub
inc
and
hlt
fs
push
adc
add
cmpsb
scas
sbb
or
xchg
xchg
dec
loopne
or
popa
pop
inc
mov
aad
push
sbb
int
test
or
fdivrl
ja
daa
xor
out
xchg
jg
pop
aaa
aas
mov
out
pop
add
fs
xor
push
in
pop
mov
fcoml
fisttpl
xchg
mov
shrl
imul
ret
push
sbb
mov
lods
and
fstps
lock
js
cmpsb
inc
imul
clc
xchg
popa
pop
scas
or
imul
or
rcrl
cwtl
dec
lahf
fdivl
sbb
dec
or
dec
mov
stos
std
xchg
insb
js
into
insb
dec
cmp
mov
pop
adc
pop
mov
cmp
in
mov
jo
jmp
cltd
in
rolb
jp
sbb
or
mov
aad
cli
mov
sbbl
mov
ret
sbb
in
add
sub
sahf
jp
jnp
pop
jae
cmpsl
cmc
and
xchg
and
ret
push
xor
stos
hlt
mov
int3
pop
mov
and
xor
rolb
inc
cld
mov
xchg
jle
push
insb
pop
lret
lds
data16
into
jecxz
mov
fwait
push
xor
fsqrt
mov
jp
or
push
daa
cltd
nop
push
daa
roll
mov
and
aad
shlb
inc
sub
sub
test
mov
mov
outsl
decl
sbb
mov
aad
in
and
test
out
out
adc
fdivrs
push
sti
and
jmp
pop
adc
sub
inc
ss
jl
mov
jle
sbb
pop
dec
inc
xchg
pop
cs
aaa
sub
test
test
or
scas
pop
or
push
int3
jns
or
jb
dec
mov
mov
movsl
inc
add
inc
andb
imul
xor
lock
push
xor
xor
daa
adc
cmc
mov
mov
and
mov
mov
test
sbb
dec
xlat
sub
push
icebp
cmp
push
arpl
or
out
mov
popa
xchg
jb
mov
jo
ret
pop
lahf
aas
decb
add
cmp
out
sub
cmc
ret
cmp
loopne
adcl
pop
mov
or
sbb
test
imul
xchg
inc
mov
push
pop
mov
pushw
cs
jnp
mov
js
into
push
insb
sbb
jg
in
jge
mov
shrb
ja
pushf
add
inc
adc
xor
mov
sub
shr
inc
xchg
add
push
mov
dec
mov
movsl
fisubrl
pop
shr
cmpsb
fidivrl
add
mov
mov
adc
inc
mov
repz
stos
mov
xchg
cwtl
push
lret
addl
std
repnz
push
das
jg
in
mov
test
mov
cli
mov
pushf
inc
mov
push
jg
ret
jns
push
scas
add
push
dec
mov
repz
inc
idiv
xor
cmp
mov
sub
push
fcmovne
sahf
ds
sbb
pop
insb
imul
sub
loop
in
push
outsl
jno
arpl
lret
int
mov
and
mov
mov
or
in
push
lret
mov
test
sbb
cmp
aas
in
dec
sub
cmp
lcall
test
daa
jbe
imulb
aas
pop
lcall
lahf
fistl
inc
sub
lret
movsb
xor
popf
scas
out
lahf
mov
aaa
dec
lahf
jecxz
jb
cmp
movsl
rcl
adc
popf
cltd
pop
lret
fldcw
iret
xor
arpl
xorl
outsl
ljmp
jo
push
popf
mov
jg
and
enter
mov
push
or
ret
adc
dec
dec
stos
mov
sbb
clc
push
sub
into
inc
mov
xchg
dec
pop
ljmp
mov
in
dec
aaa
sub
jo
pop
push
test
mov
jmp
push
fnstcw
mov
es
cmp
ror
ret
inc
xor
ds
ds
sbb
negl
sub
jp
iret
aas
xchg
scas
push
movsl
xchg
mov
out
jg
push
inc
xchg
sub
cmp
imul
in
mov
fs
mov
test
pop
je
xor
cmp
and
jae
fdivrp
out
jb
adcl
dec
mov
pop
sahf
jae
jl
cmp
xchg
xlat
cli
push
incl
aam
sbb
sub
cmp
jg
nop
sub
idivb
cmpsl
mov
cmpsb
sub
bound
adc
mov
jne
sbb
mov
jno
mov
cmpsb
aam
das
rorb
vhsubps
jp
dec
movsb
sti
jle
nop
sbb
pop
or
sbb
js
dec
in
pop
imul
cmp
dec
outsl
iret
decl
jno
fidivrl
sub
cltd
dec
dec
jnp
pop
mov
outsb
pop
cltd
xchg
aad
pmaxsw
mov
mov
inc
movsl
test
imul
inc
ret
repnz
and
sahf
cmp
mov
or
dec
inc
jne
add
add
sub
jno
imul
inc
mov
push
adc
rcr
inc
sub
fidivs
cltd
loop
xor
es
clc
outsb
push
hlt
lret
and
ljmp
shll
div
pop
gs
inc
int3
inc
or
sbb
jbe
out
jo
cwtl
xlat
lods
jecxz
rep
ss
xchg
mov
test
sub
push
mov
out
imul
inc
push
mov
adc
xchg
fidivl
imul
hlt
xchg
fcmovnbe
sub
cli
mov
mov
loopne
loope
or
mov
sub
push
sub
adc
addr16
xor
mov
pop
ret
sbb
data16
push
xchg
xor
fimuls
pop
sti
sub
adc
sbb
push
pop
je
jge
add
daa
and
sub
outsl
mov
mov
addr16
nop
test
movb
arpl
addl
pop
loopne
test
fisubrs
push
jno
pop
mov
push
lock
inc
adc
in
mov
mov
dec
and
scas
testb
sbb
add
iret
xchg
cwtl
jle
add
mov
add
scas
adc
outsl
inc
or
es
lods
lahf
push
jp
dec
jp
pop
jp
loope
movsl
xchg
and
push
push
mov
adc
notl
fcmovnbe
cmpsl
push
stc
add
sub
enter
loope
enter
sbb
jg
cmp
fidivrs
dec
testb
aam
mov
aaa
adcb
or
enter
aaa
aas
out
addr16
ret
popl
adc
jmp
ficoms
mov
das
fidivrl
jo
pushf
lcall
outsb
stos
adc
mov
arpl
pop
imul
js
ss
movsb
and
in
or
sbb
dec
or
jge
scas
aaa
das
add
mov
mov
das
mov
test
pop
popf
dec
sub
fucom
les
xchg
mov
dec
test
mov
mov
mov
dec
gs
in
fwait
mov
and
jno
sti
xchg
sub
aas
call
lock
cmp
pop
cmovo
or
imul
inc
shll
mov
aad
adc
fwait
dec
negb
enter
sbb
xor
mov
nop
imul
movsb
dec
int3
mov
gs
faddp
rorl
dec
lods
dec
scas
mov
ja
call
xchg
mov
sbb
out
aad
mov
jne
jb
inc
rcl
xlat
or
xor
mov
sbb
in
jp
nop
lea
test
flds
dec
xchg
lds
ss
pop
fcoms
enter
mov
adc
mov
fwait
mov
mov
pop
imulb
sti
arpl
jo
pop
les
inc
push
cmpsl
cmp
in
sbb
leave
cmpsl
jb
adc
js
xchg
cmp
sbbl
and
sub
int
sbb
sub
dec
inc
inc
out
jg
aam
enter
aas
push
xor
mov
nop
sbb
cmpsl
movsl
or
imul
test
jno
cs
lcall
dec
push
aad
push
pushf
stos
inc
xlat
int
add
xchg
add
add
xchg
pop
mov
adc
jbe
and
loopne
push
test
jmp
mov
xchg
outsb
jge
rcrb
aad
mov
sub
mov
in
jnp
xchg
sar
fnstsw
xchg
test
push
outsl
xchg
lcall
mov
in
aad
leave
xor
xchg
cmpsb
sbb
push
push
pop
push
dec
sbb
stc
push
lods
sbb
test
push
stos
jge
fcompl
xchg
fadds
or
xchg
pop
sub
sarl
fwait
pop
inc
mov
add
sti
int
sbb
cs
xor
push
jae
mov
or
popa
and
clc
popf
jne
add
push
mov
enter
mov
adc
mov
stc
xor
out
adc
out
popa
push
jge
les
fisubl
mov
push
rorb
repnz
inc
and
dec
hlt
or
dec
mov
and
aas
push
pop
pop
xchg
push
or
lcall
pop
in
pop
outsl
cmp
sbb
adc
fucomi
push
jno
dec
push
cwtl
mov
daa
enter
mov
mov
lcall
test
jl
insl
jmp
pop
dec
inc
adc
mov
outsl
mull
add
push
pop
jne
ljmp
jp
mov
inc
sbb
fwait
jmp
data16
inc
jecxz
icebp
mov
sbb
or
mov
pop
jmp
adc
mov
negb
push
and
fldt
cmp
in
imul
cmpsb
fsubr
faddl
test
and
test
jnp
mov
sub
les
int3
lret
and
xchg
push
pop
jl
mov
cmpsb
adc
mov
pop
ljmp
jmp
push
cwtl
mov
sbb
sbb
jmp
cmp
lret
sbb
pop
sub
cmp
stos
lret
out
adc
rcr
or
or
pop
add
jmp
xchg
mov
xor
push
inc
push
sarl
pushf
test
aas
imul
mov
mov
lods
mov
xchg
mov
mov
push
jecxz
jo
fcmovbe
dec
sub
xor
or
push
shl
mov
xchg
in
fcompl
lock
inc
or
fcmovbe
mov
mov
sbb
jle
mov
or
fildl
add
mov
xchg
imul
and
inc
pop
xchg
pushf
imul
mov
mov
xchg
out
ss
mov
out
dec
fisubs
adcb
pusha
cld
out
cmpb
adc
jns
rorl
and
test
add
lock
cmp
sbb
and
outsb
lahf
insl
push
mov
test
inc
inc
popa
xor
pop
mov
push
je
addr16
sub
inc
xchg
jnp
inc
cltd
loop
aam
mov
or
jmp
aad
inc
mov
cmp
cwtl
pop
xchg
cmp
mov
imul
xor
xchg
push
scas
xchg
and
sbb
mov
jns
mov
nop
imul
loop
mov
rorl
push
xchg
rcrl
mov
pop
mov
dec
cmp
insl
jle
hlt
inc
std
cli
lock
bound
pop
cs
push
cmpsl
pop
cmp
and
call
sbb
push
sub
es
and
sbb
xorb
push
ljmp
xchg
lea
aad
test
xor
sub
push
push
bound
mull
fidivrl
xchg
popa
mov
lahf
and
push
dec
inc
adc
mov
movsb
icebp
jp
pop
arpl
and
add
push
cmp
mov
popa
int
stos
lods
or
popf
arpl
sbb
vmovntdq
divl
cwtl
xorl
jecxz
ret
rorl
shll
pop
test
cmc
or
shrl
sub
jp
pop
mov
mov
outsl
aaa
mov
lds
shrb
or
ljmp
adc
push
cmp
pop
sbb
fcompl
enter
mov
mov
sbb
xchg
clc
jmp
lock
sub
out
lret
cmp
stos
clc
dec
fisttpll
or
xchg
mov
mov
sub
test
push
movsb
adc
ja
mov
mov
xor
js
jne
adc
adc
out
cmpb
push
push
outsl
test
inc
std
xchg
cmp
push
dec
or
jp
inc
or
imul
insb
xchg
jecxz
and
push
imul
ret
cmp
or
cmpsb
dec
in
add
sub
cmp
push
xchg
aas
adc
mov
insb
stos
daa
xchg
das
fnstenv
ret
mov
inc
test
add
and
in
xchg
mov
imul
lock
jg
push
test
push
xchg
xchg
sbb
and
scas
dec
mov
and
test
cmc
xchg
imul
mov
inc
aam
jae
out
test
xor
lahf
scas
and
push
repnz
adc
mov
sub
stos
mov
add
shll
call
movsl
icebp
sbb
inc
cltd
dec
dec
cmp
xor
xchg
add
cmp
inc
call
xor
sub
and
mull
out
fildl
cmpsl
mov
sub
loopne
cmc
mov
xchg
js
shrl
and
mov
in
nop
lcall
mov
cltd
loopne
cmc
leave
cmp
enter
push
arpl
out
or
jne
sub
adc
lea
subb
mov
pop
test
jnp
aas
pop
call
jns
adc
jecxz
mov
pop
sbb
mov
outsb
movsl
addl
roll
mov
ficomps
sub
sub
add
add
out
loopne
sbb
jae
fwait
dec
leave
out
fstl
mov
jge
loopne
add
dec
and
imul
xchg
push
iret
jne
add
jo
call
jmp
clc
inc
dec
hlt
pop
subb
in
sahf
in
addr16
sbb
jg
enter
fs
outsl
pop
and
xchg
xchg
stos
inc
mov
clc
aas
outsl
lret
stc
out
hlt
cwtl
jle
lock
mov
jo
mov
inc
and
fisttps
mov
adc
mov
push
and
pop
cmp
push
jae
les
mov
int3
push
jle
mov
xchg
inc
xor
mov
jns
add
pop
loopne
xchg
push
push
jcxz
jecxz
fdiv
rcll
aas
xor
iret
mov
mov
push
and
push
push
stc
int3
lea
sti
push
mov
jb
outsl
repz
mov
insb
daa
adc
and
fldcw
and
mov
repz
insb
test
push
stos
mov
add
jl
jnp,pt
adc
inc
call
testb
mov
test
inc
cmpsl
inc
ljmp
jns
loope
sub
jae
xchg
xlat
movsb
or
push
jae
add
and
shll
loope
inc
insb
mov
adc
cmp
sbb
inc
pop
pop
jecxz
js
sbb
inc
enter
jnp
shll
ja
lret
cli
sarl
lds
mov
mov
lcall
mov
test
and
sar
test
inc
cli
cmp
mov
das
fildll
sbb
pop
mov
sub
stc
mov
test
or
mov
clc
cld
inc
in
mov
add
cmp
cmpsl
push
fldt
sti
divb
jb
out
cmp
add
xchg
jg
push
push
sub
dec
addr16
lret
jecxz
cmp
xchg
mov
xchg
sub
enter
lock
stos
sbb
jae
or
dec
movsl
jle
stos
nop
fists
into
loop
testb
cmpsb
cmp
sbb
out
lahf
cmc
pop
pop
loop
mov
rorb
test
divl
sub
pop
cmp
jp
int
daa
les
sahf
sbb
es
insb
push
adc
push
jecxz
sbb
cltd
xorl
int
jnp
je
pop
add
and
ffree
ret
std
jns
cmc
mov
fsubs
jl
push
push
mov
dec
nop
mov
mov
mov
pusha
or
scas
inc
xchg
xorl
xor
dec
fsub
in
xchg
adc
inc
cmpsb
mov
pop
mov
add
pop
and
xor
inc
add
insl
mov
in
aas
cmp
mov
cmpsb
sbb
je
jb
dec
pusha
stos
dec
lock
shlb
ficompl
xor
xor
out
loope
sub
scas
xchg
in
stos
cwtl
dec
and
mov
daa
xchg
js
adc
sub
aam
xchg
inc
pminub
mov
mov
jg
nop
les
iret
and
adc
push
minps
xor
mov
xor
cmp
cmpsb
mov
jns
xchg
or
dec
pushf
loope
insb
jns
aam
sbb
inc
mov
push
push
sbb
in
js
push
sbb
push
or
adc
rep
adc
cmpsb
ljmp
jge
aad
add
or
push
jmp
adc
bound
stos
and
push
inc
or
xchg
xor
imulb
fiadds
inc
icebp
repnz
into
mov
test
mov
pop
je
jo
repz
aad
xchg
popf
insb
sbb
xor
loop
pop
ret
xchg
jmp
sub
movsb
or
movsl
jg
mov
lahf
lea
or
push
or
sti
fs
mov
subl
es
mov
xor
iret
icebp
iret
loope
mov
add
mov
out
stc
jnp
outsb
pop
enter
mov
sub
outsl
xchg
xchg
lret
subb
jg
insl
add
xor
fistl
mov
sbb
insl
add
mov
outsl
and
nop
in
data16
push
fimuls
aam
jno
popa
dec
repz
cltd
xchg
jne
hlt
ficoms
sub
movsl
js
xchg
rcrb
in
arpl
cmp
push
jg,pn
or
lods
mov
sbb
jl
xchg
fnstcw
mov
mov
push
jno
mov
push
pop
rcll
inc
fisttpl
pushf
stos
lret
daa
lret
or
enter
push
pop
sti
lods
push
cmpsl
notl
sbb
sub
movsl
lods
jmp
ds
inc
and
cmp
push
mov
inc
mov
add
sti
xchg
stos
imul
jo
out
mov
ret
add
jnp
into
ds
sbb
nop
and
sub
cld
pop
mov
mov
mov
jle
shrl
nop
sub
push
test
insb
inc
iret
adc
je
sahf
les
fists
in
mov
xchg
cmp
data16
rolb
adc
sbbb
inc
test
mov
movsb
arpl
mov
fisubrl
jb
dec
movsb
jmp
in
test
add
js
fs
movsb
test
in
inc
aam
in
cltd
fnstcw
or
data16
icebp
jae
jb
popl
fdivrp
lretw
mov
mov
sahf
aaa
loope
adc
jns
and
cmp
gs
push
outsb
xchg
mov
adc
mov
movsb
clc
cmp
mov
sbb
test
test
cmp
sarb
out
negb
and
xor
fstpt
scas
sub
js
adc
enter
adc
arpl
jle
mov
imul
fdivrp
sahf
in
and
mov
xor
xchg
insb
mov
out
mov
push
ret
mov
mov
stc
xchg
xchg
cltd
js
adc
cmpsb
push
flds
or
std
ds
adc
sub
xor
mov
pop
bound
mov
rcr
outsl
adc
lea
sbb
xchg
outsl
shrl
push
sbb
jnp
insl
jnp
sbb
insl
lds
lods
adc
sbb
decb
test
das
lock
sub
insb
push
int3
sarl
mov
xor
inc
cmp
imul
insl
adc
or
jno
add
mov
mov
das
mov
fcmovu
lahf
mov
cmp
or
sbb
test
sub
mov
dec
jge
movl
jmp
test
lds
adc
enter
and
push
fs
jg
in
pop
inc
dec
dec
leave
test
clc
js
xor
cmp
enter
xchg
mov
mov
lret
pop
daa
xchg
push
cld
inc
push
pop
or
sub
cmp
andb
dec
stc
inc
mov
jg
mov
inc
cwtl
aad
mov
enter
out
mov
push
nop
pop
sbb
mov
loopne
and
cmc
pop
mov
fucomi
aaa
push
jbe,pt
into
ret
pop
imul
push
fs
inc
jg
in
ffree
cmpsl
rorb
push
pusha
inc
fnstcw
test
and
aaa
addr16
dec
mov
push
out
pop
in
leave
pop
and
lcall
daa
xorb
sub
lahf
in
in
adc
or
mov
sub
scas
xchg
pop
ljmp
lcall
add
push
in
lret
fdivl
xchg
gs
mov
jg
nop
mov
mov
fisubrs
addr16
aam
sbb
mov
or
cli
or
push
xchg
jl
jp
fcomi
sahf
das
in
mov
pop
push
add
andps
ss
setae
stos
lret
shrl
fsubp
fildll
dec
xor
push
jge
jbe
add
xchg
dec
or
dec
cmp
sahf
mov
cltd
movsl
ljmp
xchg
and
outsl
mov
inc
or
out
ficoms
or
push
sbb
mov
push
jge
ficoml
xchg
aam
or
mov
mov
roll
mov
imul
int
inc
jecxz
jbe
and
rol
or
pop
add
xor
xor
sbb
xchg
mov
and
mov
push
shrd
xchg
repnz
xor
mov
std
negl
sub
mov
stos
das
jnp
fucomip
mov
test
sub
fxch
sbb
mov
stos
dec
xchg
hlt
mov
xchg
imul
mov
sahf
lea
icebp
sub
clc
xchg
sbb
or
js
es
jb
js
and
mov
insl
and
ret
ret
push
sbb
mov
xor
add
ds
in
popa
rcrb
jmp
inc
in
jbe
mulb
rorb
sbb
lcall
shlb
cmp
aaa
das
data16
shrb
data16
andl
pop
jg
add
jg
sahf
sub
std
push
and
xchg
inc
mov
jp
pop
lahf
cmp
ds
out
xlat
gs
mov
mov
test
insl
mov
shl
fcmovnu
add
dec
and
mov
daa
mov
cs
rclb
and
es
shlb
xchg
sbb
ljmp
fstpl
sub
mov
cmp
shlb
into
add
out
sti
mov
inc
jge
jbe
cmpsb
ljmp
adc
das
sbb
lcall
fisttpl
loopne
xchg
pop
jae
sbbl
loope
ja
pop
lahf
in
mov
int
mov
nop
jbe
mov
cmp
lock
and
pop
in
pop
call
sub
sbb
lret
pop
jb
mov
lock
decb
or
imul
sbb
stc
or
pop
or
scas
mov
push
and
mov
pop
sub
icebp
xchg
fadds
xchg
sahf
in
push
pop
mov
push
pop
fnsave
jg
push
aas
pop
lret
fidivrs
ds
xor
jne
jne
pushf
mov
add
push
inc
push
sbb
das
mov
jp
fsubrs
sbb
mov
addl
inc
cmpsb
adc
in
test
add
lods
cltd
je
call
addr16
lahf
xor
mov
nop
mov
cld
push
sarl
sub
lret
cmp
adc
dec
sbb
test
in
lds
inc
mov
rsm
mov
pop
sub
inc
in
cltd
ja
js
pushf
inc
pop
lcall
jle
mov
mov
jle
imul
pushf
aaa
xor
mov
xor
mov
inc
add
stc
jl
and
mov
sbb
pop
mov
and
jl
movsb
fsubl
jle
pushf
xor
mov
dec
and
or
cmp
decl
dec
jle
push
rcrb
in
insl
sbb
insb
inc
xchg
mov
ja
jp
or
dec
or
les
adc
mov
or
jl
dec
dec
mov
mov
sbb
add
divb
mov
testl
jnp
aad
or
jmp
clc
pop
nop
rcrb
fisubrs
popf
mov
fprem1
or
adc
imul
insl
inc
insb
add
xor
push
xchg
test
je
push
pop
cmp
mov
sub
das
and
xchg
pop
add
mov
mov
fwait
inc
ja
pop
dec
mov
clc
and
out
mov
into
pop
sub
test
pop
test
dec
mov
rorb
aad
sbb
xchg
mov
test
add
mov
rclb
cli
jne
inc
mov
loop
jle
idivb
mov
nop
fidivrs
bound
mov
pop
inc
popa
jmp
setl
push
repnz
push
scas
lcall
mov
test
cmpsl
jbe
push
dec
cwtl
ss
stos
jne
xorb
out
enter
mov
xchg
inc
psllq
js
int3
ljmp
lcall
jecxz
rcr
and
cmp
lea
mov
sbb
fcoml
mov
neg
sbb
mov
lds
cmpsl
dec
push
rclb
sbb
lods
jae
bound
dec
sbb
fcomps
add
leave
pop
imull
sbb
push
cltd
outsl
jmp
insl
sbb
mov
push
sub
pop
jb
push
lret
fdivrl
push
mov
adc
mov
xor
movsl
mov
xchg
divl
loop
in
and
imul
in
sub
rdtsc
cmpsl
xchg
jns
mov
sbb
push
mov
xor
fdivrs
rcrl
fs
sahf
ljmp
inc
in
mov
out
jecxz
popf
mov
xor
sbb
push
imul
jl
daa
mov
xchg
sub
repz
in
ret
mov
sub
out
leave
mov
lea
push
pushf
or
inc
add
iret
xchg
sub
xchg
aad
fisttpll
lods
sub
add
dec
mov
or
jne
clc
ds
jl
and
lret
pop
cld
dec
jl
repz
mov
stos
cmp
adc
in
xchg
fisubrl
fs
xor
sbb
imul
pop
insl
add
ljmp
test
es
mov
mov
mov
and
out
int3
imul
mov
repz
or
cmp
ja
clc
mov
inc
cld
cmp
lods
jbe
lods
dec
repz
push
and
xchg
movsb
in
ret
mov
gs
in
pop
and
xchg
and
cmp
lea
sub
out
shrb
cld
filds
sub
or
mov
mov
js
out
scas
in
scas
pop
xchg
js
aad
mov
mov
cmp
adc
popa
addr16
pop
cmp
sar
ret
aad
xchg
jecxz
mov
leave
fstpt
adc
add
in
fwait
dec
ss
hlt
cmp
mov
loop
out
bound
enter
movsb
popf
cmp
popaw
jno
mov
and
rcr
jne
dec
les
ss
shrb
xchg
imul
xchg
lods
cmp
mov
jno
sub
mov
pop
sub
fstpl
lock
cmpsb
push
ror
ljmp
mov
push
scas
repnz
outsl
and
adc
jl
push
sbb
jo
into
loopne
shll
mov
mov
mov
or
jmp
aas
sbbb
lds
fwait
mov
jo
outsb
mov
call
mov
cmpsl
add
xchg
mov
les
idivb
fwait
and
and
pop
out
addl
jo
sbb
icebp
lds
mov
add
pop
mov
test
xchg
jge
ljmp
loope
cmp
mov
dec
cli
sbb
inc
lret
bound
push
imul
scas
and
inc
lret
test
jl
jle
mov
xor
xor
fcmovne
into
inc
sbb
sbb
sub
adcb
jbe
cmp
xlat
mov
lcall
subl
xchg
sub
jmp
mov
pop
mov
lret
ror
mov
test
bound
movsl
fiadds
inc
nop
push
lahf
xchg
arpl
or
mov
adc
ret
lock
cmp
mov
mov
pushf
push
in
out
out
jo
bound
sti
xchg
or
sbb
pop
dec
js,pn
push
inc
sub
mov
or
rcll
fnsave
mov
out
adc
dec
insb
mov
and
push
mov
cmp
test
andb
mov
jnp
jp
xchg
inc
in
mul
adc
lret
adc
cmp
mov
mov
bt
test
ss
xchg
insl
scas
jl
push
cmpsb
stos
pop
push
inc
leave
sahf
pop
or
mov
sahf
mov
mov
pop
into
sarb
push
and
and
rclb
jle
rorl
xchg
pop
sbb
data16
in
out
and
inc
aaa
add
loopne
int3
mov
jg
pop
pop
data16
inc
push
cltd
lahf
jbe
sub
adc
test
out
sbbl
in
outsl
and
push
cli
cmovg
xchg
cmp
stc
push
mov
sub
mov
pop
stc
int3
mov
jo
das
jno
cmc
jno
mov
cwtl
fnstsw
jmp
cmp
jecxz
adc
scas
mov
pop
bound
push
mov
pop
loop
in
scas
jmp
in
pop
mov
push
push
lods
pop
inc
or
out
xchg
xlat
fistpl
outsb
lret
addr16
mov
rcrl
fmull
out
sbb
adc
stos
rcl
ds
and
xchg
add
ja
dec
and
mulb
popa
ret
jnp
adc
xor
mov
inc
in
insl
add
scas
dec
pop
mov
int3
pop
aad
jae
or
or
sub
xchg
lds
repz
and
sbb
pop
inc
xor
and
out
sub
mov
inc
lret
inc
test
xor
inc
mov
cmp
jns
and
mov
sti
jg
sbb
nop
xor
push
cmc
stos
js
mov
loopne
mov
fistl
adc
aas
inc
dec
das
mov
inc
scas
inc
aas
loope
mov
jns
leave
imul
ret
sub
ja
jmp
leave
mov
mov
mov
insl
jno
cmp
dec
sahf
repnz
cwtl
push
adc
popa
and
dec
mov
pop
sbb
and
scas
push
and
js
sbb
mov
in
in
lds
jl
inc
adc
adc
dec
mov
outsl
hlt
jp
fwait
jnp
push
popf
add
adc
jns
clc
bnd
jmp
shrl
mov
sbb
sub
das
roll
mov
sarl
jo
fstps
push
or
pushf
es
cld
jae
xor
aaa
push
movsl
call
insl
iret
fadd
mov
loope
mov
inc
mov
lods
xchg
pop
cmc
cmc
insb
and
enter
or
adc
mov
adc
insb
das
push
fidivrs
push
pop
xchg
xor
fs
lcall
adc
stos
xor
push
subb
rolb
pop
loopne
ss
repnz
test
push
and
push
cmpsl
and
arpl
pusha
mov
xchg
add
shrb
iret
sub
inc
sbb
icebp
mov
fdivl
add
and
repnz
repz
jl
mov
loopne
in
add
sub
in
or
push
test
test
mov
and
and
imul
gs
aas
mov
dec
push
pop
sahf
fldl
aaa
xchg
add
xor
xchg
dec
pop
xor
imul
pushf
loop
xchg
sbb
jne
fsubs
cmpsl
cmpsb
loop
xorl
mov
mov
adc
mov
in
call
dec
data16
cmp
leave
xor
xor
stc
push
xor
sbb
lahf
lcall
es
hlt
pop
cli
jle
sub
ret
insb
inc
dec
pop
push
and
pop
jno
lahf
mov
dec
aad
add
loope
mov
adc
jmp
mov
push
aam
mov
fsubl
cmp
jg
je
or
or
mov
les
les
jmp
addr16
outsl
decl
hlt
push
pop
and
jl
fldenv
or
mov
or
test
pop
mov
mov
mov
scas
push
cs
and
sub
sub
mov
ret
mov
movsb
push
fwait
sarb
add
enter
push
xchg
pop
loope
mov
fisubs
nop
push
inc
jo
insb
jo
jnp
push
xor
fdivr
mov
sbb
xor
psubusw
lret
and
lds
jmp
inc
sbb
lahf
pop
sub
jg
pop
inc
call
jecxz
in
js
test
shlb
jbe
pop
xchg
stos
and
icebp
mov
mov
icebp
or
add
adc
pop
loopne
or
addr16
pop
scas
cmp
pop
mov
shrb
jno
xchg
repnz
mov
rorl
sbb
in
lds
sbb
jmp
clc
cmp
add
das
cmp
add
fwait
scas
pop
push
lcall
mov
out
xchg
std
clc
ss
mov
icebp
repnz
insb
xchg
xchg
xor
or
jne
pop
lcall
pop
cmp
out
jno
cmp
cmp
dec
sub
jecxz
inc
addb
jle
xor
mov
aas
in
and
pop
jmp
jle
stos
or
jmp
sub
mov
sbb
inc
and
sbb
fsubrl
cs
jecxz
not
movb
dec
mov
xor
lret
shll
test
sub
cmp
test
jnp
rcll
addr16
psubd
pop
lds
gs
lea
insl
mov
mov
lret
cmp
mov
cmpsl
fs
inc
scas
int
sub
cltd
popa
push
and
into
aam
or
xchg
pop
push
mov
cmpsl
movb
lret
ss
and
test
or
test
jb
jb
mov
pop
aaa
pop
push
sbb
mov
addr16
mov
mov
xor
mov
mov
jne
daa
fsts
pop
add
add
pusha
xor
cld
push
loop
lret
scas
andb
push
movsl
sub
sbb
ret
filds
gs
cmp
aas
cli
add
loop
adc
in
addr16
and
jae
fisttpl
dec
icebp
imul
ret
pushf
in
in
fs
lods
xchg
bound
push
call
sbb
cmp
loope
daa
addr16
dec
imul
lahf
push
sub
add
and
or
popf
pop
test
mov
add
subl
add
jp
fstpt
adc
in
lahf
push
add
stos
sub
enter
aaa
push
pushf
or
adc
dec
adcb
jmp
cmpsl
push
xor
and
lahf
pushf
jle
in
arpl
cmp
dec
mov
popa
xor
mov
sbb
rclb
cmpsl
das
xorb
fs
jno
mov
mov
ds
inc
add
out
mov
cmp
nop
stc
or
popl
adc
mov
mov
jmp
or
fimuls
insb
pop
shlb
inc
test
sub
pop
or
in
jbe
adc
xchg
repnz
or
push
out
in
bound
xchg
adc
pop
mov
repz
push
cmp
lret
xorl
xor
insb
jge
or
int3
out
jnp
mov
mov
adc
jmp
mov
jp
outsl
sbb
add
int3
cmp
push
jp
sarl
nop
bnd
inc
xor
divl
shl
shll
or
push
outsb
mov
jg
in
and
xor
repnz
call
cmpsb
mov
mov
jecxz
jbe
roll
mov
fisubrs
sub
out
dec
cmpb
movsb
pop
cmp
pop
xchg
add
or
add
sahf
ffreep
in
inc
arpl
sub
sahf
fimull
mov
dec
jl
cwtl
pop
xor
out
outsb
fprem1
scas
mov
push
and
sahf
and
pop
jbe
stos
add
lods
loop
or
push
lea
arpl
mov
xchg
sub
imull
outsb
inc
inc
sub
and
mov
push
jbe
das
pop
add
lret
or
inc
std
xchg
cli
sbb
rolb
lea
mov
jne
xchg
sbb
scas
pop
mulb
out
and
and
push
pop
out
cmp
cmpsb
out
dec
fldcw
xor
cmp
movsl
adc
push
lcall
call
fidivrl
push
fmuls
push
jo
dec
mov
xor
icebp
mov
scas
cmpsl
inc
jns
hlt
push
and
jbe
dec
sbb
fdivp
and
stc
dec
mov
lds
scas
fidivl
xchg
sbb
jb
xchg
cmc
sub
inc
mov
sub
incl
loop
dec
jns
cltd
inc
repz
les
mov
adc
push
sub
xchg
cmp
mov
cmpl
or
push
sbb
mov
xor
movsb
inc
jno
insl
leave
js
scas
mov
ret
xor
or
pop
sahf
mov
cli
cmp
std
jmp
stc
push
lods
push
cmp
roll
movsl
mov
inc
movsb
gs
pop
and
cwtl
inc
cmpsl
adc
test
and
ja
mov
outsb
lods
cmp
xor
push
shl
aaa
dec
imul
add
pop
push
xchg
inc
pusha
sbb
sbb
sbb
mov
outsb
nop
adc
adc
lods
jecxz
enter
xlat
sbb
lds
pop
mov
ret
mov
jmp
loop
test
sahf
push
scas
adc
sbb
dec
mov
je
or
cmpsb
xor
add
aas
mov
mov
cmpsl
out
jmp
adc
dec
mov
sub
mov
adc
jle
mov
aas
ffreep
packsswb
and
iret
call
shlb
pop
jp
out
adc
arpl
cmpsb
sub
das
mov
jge
inc
jg
adc
rcr
notl
iret
mov
mov
stos
add
cwtl
mov
bound
jne
out
les
sbbl
sub
rol
aas
and
nop
lret
push
cwtl
shrd
cmp
inc
les
mov
fidivrs
pop
pop
rcrb
cmpsl
jb
inc
push
and
lods
push
push
shlb
pop
imul
inc
scas
call
add
enter
cmovo
jmp
adc
push
fildl
aam
pop
sti
adc
nop
inc
insl
mov
notl
fidivl
or
pop
sub
xchg
mov
hlt
sub
mov
dec
mov
aad
xor
flds
jae
sub
fildl
dec
mov
inc
or
test
imul
mov
fbld
inc
mov
mov
aaa
inc
xchg
fs
lods
arpl
push
xchg
pop
jbe
iret
pusha
gs
shll
or
lahf
into
sbb
in
lret
icebp
icebp
das
and
shrl
push
push
mov
mov
push
xor
sbb
and
adc
inc
inc
sub
adc
cmpps
xchg
cmp
xor
or
daa
and
flds
filds
fisubl
aas
jae
aaa
cmpsb
cmpsl
mov
push
or
outsl
aaa
enter
push
pop
add
jecxz
rcrb
and
enter
psubw
ja
sbb
fiadds
aaa
jbe
cmp
mov
xor
push
jne
imul
push
push
adc
fst
pop
ret
loope
fs
push
lods
aas
inc
sbb
mov
rep
fimuls
call
xor
inc
out
loope
dec
xorl
sbb
and
std
add
out
shl
add
in
jo
aaa
adc
iret
adc
aas
push
cmp
clc
mov
aaa
xor
in
push
cmp
cmpsb
inc
lea
pop
pop
and
cli
stos
movsl
push
jle
jge
pop
mov
scas
push
adc
lahf
addl
mov
sub
nop
aas
int3
mov
clc
lret
or
or
stos
jl
xchg
add
mov
sahf
lahf
inc
xor
sbb
lods
mov
js
lea
fwait
adc
outsl
mov
ficoml
lods
adc
push
cmp
mov
ss
xchg
out
pop
testl
std
jp
pop
xchg
mov
jge
lods
stc
xchg
lock
or
int3
in
pop
jmp
xor
push
sbb
sub
sub
cmp
mov
fstp
out
or
jge
test
mov
mov
sbb
inc
cmp
adc
out
push
jae
aad
lds
mov
in
rcrb
mov
push
adc
dec
inc
loop
stos
push
loop
add
push
jns
jge
inc
sti
fucomi
or
shl
dec
cld
leave
clc
cli
xchg
push
out
rep
inc
inc
cmc
aas
inc
and
add
mov
test
xchg
ret
jmp
in
sbb
daa
outsl
pop
fimull
jae
shll
pop
and
jnp
adc
xor
cwtl
ds
ret
jbe
repz
add
jns
jp
in
add
pop
push
aaa
addb
or
push
push
pop
and
adc
das
pop
out
hlt
jb
iret
cwtl
lret
ss
in
bound
and
adc
sub
clc
aaa
cwtl
mov
inc
and
xchg
ds
mov
adc
icebp
imul
imul
fnstsw
adc
hlt
push
and
cmp
inc
test
jb
xchg
neg
rcll
jae
insb
sarb
jno
dec
cmpsl
enter
fs
push
into
mov
movsl
repnz
push
out
cwtl
adcb
fsts
and
jle
cmp
lcall
sub
add
cmp
std
ret
pop
mov
pop
inc
push
pop
loope
test
mov
aaa
mov
aas
pop
pop
xor
cli
popa
fdivrs
sbb
and
pop
or
xchg
stc
stos
sub
and
and
xchg
add
lcall
popa
inc
sahf
enter
les
hlt
int
xchg
fs
push
stos
filds
cmc
lret
adc
sbb
dec
adc
test
mov
mov
and
pop
xchg
cmp
cmp
and
fstpl
hlt
xor
std
push
movsb
outsb
jmp
shll
xor
jns
nop
adc
scas
shlb
pop
rcl
add
push
add
push
rcrl
adc
scas
jp
pushf
loop
xor
push
cs
popa
in
sbb
fistl
testl
out
dec
pop
and
jmp
popa
into
jmp
rcrb
outsl
out
push
sarb
mov
xchg
sti
repz
stos
repnz
lds
int3
push
out
and
in
mov
push
arpl
enter
sub
bnd
aaa
cmp
lock
mov
stos
ret
dec
adc
leave
xor
sub
jae
push
ss
xchg
scas
dec
xchg
popl
pop
rorl
fidivl
stos
aas
jno
idivb
fwait
shrl
push
sbb
xchg
jbe
mov
jnp
lret
std
leave
test
negb
xchg
add
int
cmp
cld
pop
xchg
dec
push
add
lcall
sbb
stos
incl
cmp
cld
sub
sub
mov
push
jo
shll
mov
pop
je
jne
sub
lods
dec
inc
jno
inc
adc
pop
pop
sti
push
cs
adc
bound
in
cmp
sbb
stos
lret
mov
sbb
jl
loop
pop
fwait
and
test
sbb
jno
jp
sub
xorl
dec
ret
call
jno
cmp
add
push
xchg
fmull
cmp
jle
das
mov
outsb
test
xor
ret
push
jp
dec
dec
cli
lret
push
adcl
adc
pop
rclb
sahf
pop
lods
lds
fisubrs
fucomi
push
std
mov
add
jmp
jg
insl
test
sub
lods
mov
fidivs
lock
insb
mov
jl
sub
mov
shl
aad
rcr
push
loope
xchg
pop
repz
test
inc
popf
enter
push
rorb
push
pop
popa
mov
ret
dec
add
mov
pop
fsub
mov
dec
dec
out
jns
pop
or
push
mov
scas
pop
into
cmp
add
in
xor
lods
lock
lds
outsb
in
pop
pop
loope
repnz
inc
or
insl
nop
lods
xchg
cmc
clc
xor
add
add
dec
jp
rcrl
out
sarb
jae
add
ss
mov
data16
ficompl
xchg
inc
enter
in
cmpsl
fnstcw
fsubrs
out
cmp
repz
mov
test
arpl
jl
sbb
or
dec
push
icebp
mov
push
mov
mov
or
cmp
into
cwtl
or
lods
cwtl
lock
aad
cmp
test
shr
sub
int3
rorb
test
or
jge
out
mov
push
sub
imul
out
ret
stc
and
push
into
mov
lods
in
mov
mov
das
dec
push
movsb
das
insl
mov
xchg
mov
cld
ret
jbe
test
dec
and
loopne
adc
xchg
out
xor
rorb
ret
lods
jl
fbstp
push
scas
pop
sbb
inc
popa
loopne
sahf
das
loopne
and
lods
or
push
sub
lcall
lea
add
fistps
push
cwtl
ret
loopne
xchg
sub
dec
or
push
dec
test
adc
push
dec
adc
push
test
adc
adc
push
dec
fimuls
mov
lcall
out
ret
scas
mov
int3
sarb
aaa
push
or
xor
mov
cmp
xchg
jno
repz
fimuls
sub
imul
ds
mov
cmpsl
xor
inc
adc
scas
roll
jg
testb
shll
xchg
push
jb
test
and
add
popf
movsl
pop
fwait
jecxz
aas
lds
cmp
and
push
inc
sarb
sub
clc
xor
mov
or
rcr
addr16
test
popf
fldt
fstps
movsb
xlat
sub
test
xor
daa
sahf
test
cmpsl
aas
jecxz
nop
out
xor
cwtl
inc
pusha
push
inc
mov
arpl
pop
outsb
lods
bts
outsl
mov
outsb
jb
jnp
mov
mov
sbb
int
and
push
mov
cmp
aad
filds
test
aad
fdiv
into
mov
ja
mov
fadd
pop
aad
lds
and
push
adc
clc
sub
pop
cwtl
mov
push
or
idivb
mov
mov
cmpsl
jo
cmpsl
mov
jb
cld
adc
aas
mov
out
cmpsb
push
add
outsb
cld
dec
mull
lret
sbb
mov
ficompl
adc
mov
dec
push
push
fadds
or
shll
push
pusha
and
and
push
mov
jo
xchg
and
add
outsl
xor
xor
adc
adc
sbb
xchg
push
jle
nop
or
scas
mov
test
aad
ss
jb
bound
lahf
push
xchg
mov
imul
sub
pusha
add
pop
push
cmp
xchg
add
cmp
test
xor
sub
dec
xchg
cld
dec
movsb
push
push
jg
mov
mov
mov
fisubl
push
mov
fstpt
sub
ja
cmp
ret
xor
cld
call
lahf
ss
cli
shlb
xchg
sub
lods
daa
sub
insl
cmp
jg
outsl
cmp
push
push
push
cmpsb
in
int
ljmp
ret
lods
out
es
cmp
ds
fmul
out
sarl
aaa
mov
jle
call
pop
xor
pop
xchg
out
les
ret
push
out
dec
shl
mov
repnz
add
imul
stos
add
and
subb
jnp
hlt
lcall
jae
movsl
xor
xchg
shlb
in
leave
cli
dec
mov
lret
sbb
aas
in
fwait
sub
bound
pop
push
add
stos
add
nop
add
aad
decb
in
loop
cmpsl
pop
andl
pop
jbe
ljmp
rclb
outsl
repz
call
mov
stos
cli
mov
mov
add
mov
daa
mov
cmp
ds
lret
push
pop
or
aad
ja
in
add
pop
movsl
sbb
cld
cmp
loope
leave
xorb
push
fisttps
push
inc
outsl
dec
popa
lret
adc
lods
sti
idivb
add
push
push
pop
mov
push
into
dec
cmp
adc
loop
cmp
stos
cli
dec
in
dec
cmp
mov
aam
je
jl
dec
fiaddl
stc
pop
enter
xlat
pop
mov
cwtl
mov
push
mov
popf
shl
pushf
sub
stos
sbb
xchg
sub
sbb
lods
js
xchg
jg
mov
xorl
js
lret
mov
pop
pop
fistl
or
jmp
mov
sub
adc
dec
daa
jnp
dec
pop
cmp
cmp
pop
xlat
jb
rcrb
jne
lea
mov
test
imul
push
mov
ss
scas
test
loope
dec
mov
pushf
sbb
pop
adc
sbb
lds
das
pop
cmp
xchg
cltd
jmp
shll
push
stos
aaa
mov
es
rcrb
sub
in
stc
out
test
pop
xchg
pop
stos
sub
in
dec
mov
xchg
ss
test
cli
movq
fdiv
pop
fcompl
in
sub
dec
jge
push
xchg
adc
push
xchg
push
inc
nop
test
movsl
inc
and
mov
std
sbb
mov
push
pop
mov
push
add
jl
stc
push
xor
mov
sbb
mov
sti
mov
push
cmp
out
imul
jns
jne
push
cltd
and
outsl
sti
xchg
push
xor
sub
divb
mov
mov
lods
jmp
or
ds
lods
jbe
mov
xor
xchg
jne
les
in
repz
std
or
jnp
mov
into
outsl
or
addr16
mov
fnstcw
and
leave
push
test
cwtl
std
xchg
mov
subl
aad
or
outsl
mov
sti
adc
mov
and
sbb
add
fldcw
jno
xchg
stos
lret
dec
int
xchg
sbb
int
sbb
adc
call
imul
ds
jl
dec
je
jns
mov
mov
adcb
dec
jge
daa
pop
imul
jb
sarl
mov
or
mov
inc
mov
adc
pop
mov
lock
xchg
repz
int3
xchg
mov
cmp
sbb
and
cli
sub
jg
cwtl
test
das
push
mov
mov
xor
aas
mov
stos
cs
mov
xor
or
cmp
int3
cmp
mov
das
cmp
repz
daa
push
add
jne
in
xor
dec
xchg
inc
adc
xchg
es
les
lock
movsl
inc
mov
shl
xchg
push
push
ljmp
rol
mov
jmp
lock
sub
push
sub
in
jns
mov
pop
daa
inc
repz
fists
adc
xor
mov
sbb
and
je
mov
pop
add
divb
push
and
mov
add
fildl
sbb
je
sbb
or
push
sub
and
mov
mov
jecxz
cmp
or
and
mov
stos
outsl
les
add
or
jecxz
je
or
cwtl
lock
jl
bound
sub
xchg
inc
pop
inc
or
mov
test
imul
aad
mov
push
mov
addr16
or
idivl
das
hlt
inc
fadds
jle
hlt
push
dec
xor
fisttpll
ret
dec
xchg
xchg
pop
jl
enter
mov
scas
arpl
pop
test
loop
lds
out
jae
push
pop
movsl
ss
das
inc
jno
int3
and
push
mov
scas
cmp
je
jnp
dec
leave
pop
std
sbb
mov
imul
call
dec
dec
xchg
add
test
xchg
jae
xor
mov
add
fnstenv
pusha
xchg
or
push
and
ss
hlt
aaa
push
pusha
xchg
xor
cli
outsl
outsl
sub
adc
mov
idiv
adc
cwtl
jns
fcomi
fistl
jge
cmp
push
mov
mov
push
popa
pop
stc
cmpsl
ret
sbb
adc
sarb
mov
sbb
jmp
enter
cltd
add
and
mov
fcoml
shrl
jnp
pop
std
push
adc
test
inc
bound
cmc
push
lods
and
sub
push
xor
mov
inc
sbb
aas
sbb
jae
pop
imul
pop
bound
sbb
ss
xchg
mov
sbbb
cmpsl
mov
xor
dec
jbe
push
jg
jmp
mov
pop
fists
mov
movsl
or
jb
mov
inc
jo
cmp
in
icebp
or
mov
adc
xchg
xor
repz
les
dec
out
adc
cmpsb
dec
add
dec
xchg
out
push
xchg
flds
dec
rcrb
jecxz
push
lds
shrb
mov
lret
pushl
xor
dec
js
ss
jg
cmp
fwait
and
jge
ljmp
and
push
div
adcb
fildll
orb
mov
sbb
sbb
fiadds
dec
add
fsubs
dec
adc
pop
xchg
arpl
mov
mov
lods
aas
sahf
rcl
scas
fnstsw
xchg
lods
cmp
sbb
pop
iretw
xchg
xchg
dec
lods
mov
fadd
adc
add
jae
pop
xor
or
mov
pop
lock
lret
mov
pop
jecxz
lods
push
std
in
push
sub
pop
enter
mov
sub
call
add
mov
mov
psraw
add
xchg
xor
sbb
xorl
mov
push
push
sbb
mov
clc
mov
dec
int3
add
nop
mov
pop
inc
jl
in
subb
inc
shrb
pop
daa
lret
push
imul
mov
stc
xchg
les
and
stos
in
jg
mov
pop
push
pop
mov
scas
xor
pushf
adc
mov
jo
jno
inc
loope
dec
cmp
int3
cmp
mov
icebp
pop
out
mov
sti
xchg
pushf
mov
je
jae
xor
sahf
js
movsl
push
repnz
ja
mov
pop
inc
pop
out
lcall
xchg
mov
mov
in
mov
jge
adc
outsl
jp
push
scas
shlb
lods
mov
mov
pusha
xor
xchg
push
and
push
or
cmc
lea
insb
xchg
into
pop
cld
pop
lret
cmp
xchg
paddsb
dec
jl
mov
add
cmp
orb
loop
popf
mov
cmp
imul
stos
lret
mov
inc
fcomps
dec
or
and
inc
aad
pop
xor
add
mov
gs
mov
jns
out
jae
xchg
in
neg
jns
or
out
in
addb
fs
add
pop
jmp
insb
cmp
loop
jb
rol
fbstp
movsb
mov
fstps
mov
push
cmp
and
cwtl
sti
inc
into
in
flds
imul
loop
and
imul
add
xor
out
sub
daa
loope
sub
xchg
and
lods
out
std
ds
jns
daa
mov
aaa
dec
roll
fdivrs
gs
jnp
mov
test
loope
add
mov
mov
or
xchg
int
pop
cmp
sbb
xchg
dec
inc
cmpsb
nop
jbe
jno
imul
bound
test
jae
cmc
cli
sub
mov
lock
cmpxchg
pop
testb
je
adc
movzbl
insl
cli
int
jl
xchg
ja
push
out
mov
fs
pop
dec
clc
lahf
data16
pop
pusha
jb
xchg
and
add
lahf
or
sbb
ds
jmp
push
shll
jp
and
inc
in
mov
in
cmc
inc
push
stos
xor
in
pop
xor
subl
and
xor
imul
xchg
push
test
ljmp
mov
shlb
fstpl
or
dec
sarl
fwait
or
pop
out
pop
jnp
outsb
jnp
mov
mov
push
aad
gs
sar
cld
adc
push
cs
out
leave
or
mov
testb
ja
sub
push
cmp
lret
xor
or
jge
movsb
inc
dec
pop
mov
fstpl
dec
adc
hlt
jb
push
cmp
mov
mov
lock
pushf
push
xchg
push
dec
mov
cmpb
pusha
sti
dec
xor
ss
pop
scas
sbb
incl
jne
pushf
adc
stos
inc
lea
add
stos
lcall
bound
popa
xchg
or
insb
xor
cwtl
jns
jmp
cmpsb
stc
aaa
fisttps
add
push
rclb
mov
inc
xchg
outsb
and
in
cmp
mov
add
fnstsw
and
xor
xchg
popa
loop
xchg
push
addr16
lods
xchg
scas
sub
jne
mov
ja
addr16
inc
insb
cmp
pop
pop
adc
xor
std
or
add
add
sbb
lret
clc
sbb
jb
cs
leave
out
mov
mov
cmp
cltd
mov
and
je
push
mov
jl
mov
dec
dec
lock
test
fiaddl
outsb
jno
push
sub
mov
push
inc
je
push
jae
dec
inc
dec
icebp
add
ret
test
jae
mov
pushf
gs
in
push
and
push
test
lcall
cmp
sbb
push
push
out
cmp
rorb
cwtl
cld
ficomps
pop
push
fcomi
aas
test
sahf
stc
xchg
nop
icebp
test
jg
or
subl
xchg
mov
aaa
xor
push
in
je
cmpsb
add
test
jmp
ret
mov
inc
jecxz
xchg
cmp
loop
or
push
dec
loope
jle
mov
jb
cltd
adc
dec
subl
mov
lods
jge
push
aaa
or
adc
fimuls
xlat
loopne
mov
ljmp
ret
sarl
jmp
add
icebp
fadds
je
loop
div
sub
xchg
test
and
and
fiadds
jl
lock
push
inc
pop
mov
cld
daa
xchg
sbb
xor
push
lret
lahf
mov
bnd
es
nop
inc
dec
jg
xchg
scas
pop
xor
mov
in
jl
lods
add
les
xchg
inc
xor
andb
pop
lods
lods
nop
xor
xchg
std
in
fs
outsb
xor
in
ficompl
stos
scas
inc
jnp
inc
push
cmp
add
push
repz
dec
test
or
jmp
stc
inc
enter
clc
ja
insb
add
je
dec
std
cmp
inc
pushf
push
fimull
mov
imul
inc
mov
testb
pop
mov
test
xchg
orl
push
mov
std
mov
add
cs
jle
inc
fdiv
and
push
and
lock
mov
inc
popa
push
cmp
std
jecxz
fucomi
lock
arpl
in
jbe
xor
jbe
sbb
and
push
lds
fcoml
jnp
insl
std
push
mov
add
ret
jnp
add
dec
movsb
ds
adcb
pop
cmp
mov
mov
cli
push
rcr
fisubs
icebp
xchg
insl
add
movsb
pop
push
test
cs
test
inc
jbe
movsl
out
cmp
unpcklps
xchg
push
push
mov
adc
xor
lods
cmc
jo
dec
mov
mov
not
lcall
dec
in
inc
arpl
pusha
fidivs
fistpll
add
shll
decb
mov
dec
adcb
cmp
outsl
lcall
xchg
or
pop
xor
inc
dec
fiadds
bound
push
aad
mov
sbb
call
jns
push
fstpl
ljmp
iret
xor
cmp
cmp
test
mov
movsl
loopne
fistps
insb
sarl
add
and
cmpsb
xchg
inc
mov
mov
insb
jg
inc
sub
and
inc
ds
pop
test
bound
out
push
add
ds
push
popf
xlat
inc
push
out
out
out
sub
out
and
xor
push
imul
lahf
clc
int
mov
pop
mov
cmpsl
inc
sbb
push
cli
jl
je
and
or
cs
nop
add
pop
jge
and
stos
pop
lcall
fimuls
jmp
out
outsb
int3
xchg
fimuls
inc
fld
mov
mov
lret
jge
popa
and
stc
lods
out
pop
dec
sahf
xchg
das
das
bound
push
mov
sub
adc
mov
out
or
hlt
leave
mov
pushf
es
or
xchg
and
pop
pop
adc
dec
or
dec
out
loope
mov
cmp
test
xor
push
sub
pop
popa
xor
xchg
in
or
mov
out
iret
xchg
mov
ja
jl
in
pushf
fldcw
ljmp
pop
fstl
sub
dec
sbb
insb
gs
pop
lods
mov
xchg
inc
jl
fwait
repnz
cs
fildll
loop
pop
rcl
int
sarl
push
push
jmp
xor
or
int3
add
cs
inc
and
xchg
insl
mov
inc
inc
mov
inc
sbb
cmc
mov
decl
fs
out
and
mov
inc
and
push
inc
sub
scas
xor
insl
ficoml
enter
pop
popa
mov
push
xchg
addr16
or
ret
arpl
inc
jae
or
dec
outsb
pop
das
pushf
loop
jnp
mov
cli
cmpb
iret
push
jecxz
push
in
out
icebp
lcall
dec
mov
push
fbstp
aaa
xor
inc
adc
inc
sub
inc
jb
adc
loope
sbbl
inc
cmp
adc
or
dec
add
arpl
dec
ret
push
pop
sub
mov
mov
mov
cmp
sub
pop
ss
and
adc
cli
jp
mov
xchg
inc
dec
inc
addb
lea
mov
pop
push
negb
scas
lea
nop
add
ljmp
sbb
negl
sarb
cwtl
xor
push
mov
rcll
cmp
mov
push
fcomi
cwtl
or
jo,pn
pop
jo
mov
fidivrl
shlb
fwait
xchg
scas
leave
cli
jo
adc
sbb
cmpsl
shrl
scas
pop
rol
add
push
call
jo
test
cwtl
out
int3
sbb
push
push
icebp
outsb
int3
pop
mov
push
xlat
mov
sub
aad
xor
xor
jg
insb
sbb
cs
add
push
mov
aaa
xchg
add
xchg
push
lcall
cwtl
push
adc
xchg
int
pop
mov
xor
jbe
daa
and
xor
ss
pop
jne
fnstenv
movsb
push
sub
je
pop
cmp
cmp
cmp
mov
movsb
mov
int
enter
enter
lret
aas
lahf
lock
push
pop
mov
in
int
mov
and
xchg
inc
in
lcall
out
or
mov
outsb
xchg
add
inc
jg
das
es
and
cwtl
aam
cwtl
xor
icebp
test
repnz
in
aas
cs
out
fisubs
add
int
and
push
xchg
jecxz
pop
mov
fidivs
mov
test
sub
pop
lods
jmp
insl
mov
insb
movsl
ss
loope
inc
adc
cmp
mov
jle
int
rclb
and
andl
sbb
inc
mov
dec
mov
jle
pushf
cmc
pop
and
cmp
lret
lock
icebp
pop
cli
mov
test
loope
xchg
sahf
call
jg
jo
jne
push
and
or
and
js
adcl
movsl
lods
js
mov
mov
sbb
mov
imul
shlb
jne
xchg
dec
push
jmp
enter
push
stos
pop
mov
xchg
je
fcomp
lods
fisubs
mov
inc
inc
addr16
sahf
xchg
pop
xchg
popa
imul
jecxz
imul
pop
lahf
bnd
xchg
es
stos
xchg
clc
mov
cmpsl
cld
ret
add
ja
int
sub
not
inc
push
shrb
jno
clc
int3
mov
add
sub
dec
out
push
inc
xor
out
jae
cmp
aaa
xor
and
out
xlat
xor
nop
push
pushf
jmp
and
stc
dec
or
test
lds
or
fwait
insl
push
mov
and
adcb
lods
mov
int
xchg
jle
jns
lret
add
add
xchg
push
xlat
cmc
int
lret
ja
jp
ret
push
loope
adc
ja
mov
outsl
adcl
push
mov
mov
aas
insl
movsb
fdivrl
adc
or
fdivr
sub
fmul
loopne
cmpsl
jo
rclb
pop
lcall
lods
mov
xchg
hlt
ret
into
aas
sub
inc
fmull
cmpsl
les
data16
inc
icebp
testl
insl
fldcw
fdivrl
rcl
in
add
dec
pop
pop
mov
in
add
bound
sub
mov
loopne
mov
xchg
mov
inc
orb
xor
add
xchg
enter
in
sti
jmp
dec
cmp
mov
pop
and
rorb
mov
sub
fdivl
jmp
mov
inc
dec
mov
mov
cli
cwtl
mov
bound
cmpsb
mov
sub
repnz
outsb
iret
jb
setns
dec
lahf
sbbb
dec
out
push
outsb
out
push
js
dec
dec
popa
mov
inc
cmp
mov
sahf
mov
cmp
add
loopne
andb
fwait
ret
shll
aas
loope
loopne
pop
fimull
push
and
push
rorb
rcrl
xor
jno
pushl
jnp
sahf
ja
inc
movsl
inc
mov
rcll
ja,pt
sarb
mov
sti
jge
imul
mov
daa
test
loopne
das
sub
loop
icebp
add
lds
gs
in
sub
test
pushf
dec
inc
aas
mov
jns
xlat
movsb
sub
pushl
rcr
bound
data16
int3
fidivs
test
push
pop
sahf
push
adc
cmp
int
data16
rcrl
sub
addr16
and
popa
in
push
mov
xor
dec
imul
loopne
xlat
pop
arpl
sbb
addb
jmp
in
and
decl
dec
stc
ja
daa
rcll
jbe
ja
xchg
jecxz
das
ds
xor
dec
lcall
dec
in
jae
push
push
push
jae
xor
shrb
sbbb
clc
leave
sbb
push
stos
push
push
adc
icebp
pop
fld
mov
or
xlat
imul
loopne
gs
lea
or
ds
push
pop
aad
and
jnp
or
inc
jmp
push
faddl
xchg
jecxz
mov
or
jae
push
jle
sti
push
mov
inc
aad
int3
insb
jbe
pop
push
adc
movsb
hlt
les
in
fists
out
mov
add
xor
mov
insb
mov
nop
rclb
mov
sbb
sbb
ljmp
addr16
xchg
das
jg
dec
scas
push
pushf
cld
xchg
mov
cs
lret
enter
std
jnp
xchg
insb
dec
mov
xor
inc
and
mov
out
push
shr
pop
xchg
pop
lods
jg
das
adc
inc
inc
cmpsl
push
enter
push
push
add
arpl
mov
imul
popf
rorb
test
outsl
push
inc
xchg
lret
and
or
jp
nop
in
dec
add
xchg
cld
stc
rcr
mov
test
sbb
mov
pop
cltd
inc
ret
jne
pop
les
mov
faddp
repz
stos
insb
mov
mov
or
int
imul
sub
sbb
dec
lock
and
inc
mov
je
mov
mov
data16
xor
mov
mov
inc
pop
mov
sbb
lock
and
arpl
push
aas
or
in
xchg
xchg
inc
in
mov
testl
mov
push
cmp
stos
out
cltd
jp
int
bound
mov
mov
and
add
sbb
adc
jle
test
mov
xchg
and
inc
in
jne
arpl
push
dec
outsb
push
xor
pop
dec
imul
jno
jnp
fs
aad
data16
sbb
mov
rcl
mov
fildl
inc
push
cltd
lock
ret
or
pop
mov
jge
mov
jp
mov
dec
dec
fs
xchg
sub
lock
lea
out
xor
fstpt
and
push
xchg
int
insl
add
aam
jo
lock
cld
xchg
orl
push
add
xchg
fmuls
jl
cmp
add
cli
lea
hlt
bound
add
sbb
loopne
add
cmp
lods
sub
imul
inc
fs
cmp
or
xchg
insl
jae
packsswb
mov
mov
out
and
dec
sysret
mov
sub
add
iret
outsb
aam
ja
lret
inc
leave
xchg
or
mov
leave
and
aad
push
loope
mov
mov
std
dec
adc
mov
xlat
icebp
les
repnz
lret
addb
adc
lcall
cwtl
inc
in
cltd
aad
push
and
shll
js
mov
fld
stc
lret
cwtl
mull
movsl
xor
stc
xchg
mov
out
in
mov
shll
jp
fs
jp
inc
out
sbb
mov
mov
das
fisttps
pop
adc
das
jns
sbb
xchg
outsl
rcll
outsl
mov
fcoml
jbe
sahf
icebp
pusha
ja
aam
add
and
jl
int3
pushf
xchg
test
ds
mov
lahf
mov
inc
test
xorb
pop
rclb
mov
mov
or
mov
or
sbb
gs
dec
je
pop
mov
xor
push
scas
cmp
sbb
xlat
cmpsb
and
sbb
andl
jae
mov
mov
pop
dec
dec
iret
fcomp
xchg
jp
push
andl
add
inc
out
mov
pop
mov
mov
jl
movsb
inc
sub
pop
fcoml
adc
inc
xor
aas
sbb
push
out
or
mov
mov
shrb
icebp
shll
jl
mov
mov
mov
shll
cmpxchg
mov
adc
aam
push
add
sti
cmp
jns
aad
mov
pop
data16
lahf
jne
cmpsl
gs
inc
jne
daa
aad
sub
lcall
fbstp
jp
ljmp
or
mov
movsb
adc
fidivl
mov
mov
and
sub
hlt
out
loope
enter
js
roll
iret
gs
push
mov
fimull
in
sbbl
loope
ja
call
sub
jl
jno
sbb
bswap
loope
xchg
dec
mov
jp
js
sbb
vmwrite
aas
sysret
fld
lcall
jge
cwtl
xor
mov
jbe
push
ss
cli
aaa
adc
inc
mov
lahf
jmp
sub
adc
jg
scas
push
ficomps
inc
gs
cli
addb
mov
or
push
mov
scas
sbb
xchg
cmp
pusha
pop
dec
outsb
and
sub
ljmp
andl
push
or
cmp
jne
mov
movl
sbb
or
xor
fistpll
pop
cs
jb
mov
dec
sub
xor
dec
testl
outsb
scas
test
mov
scas
fbld
mov
idivl
leave
pop
ss
mov
pop
shlb
sbb
imul
mov
dec
fwait
jge
jns
mov
inc
mov
pop
jbe
test
inc
in
iret
repz
rcll
iret
adc
int3
inc
mov
lock
bound
dec
sub
leave
fmul
nop
das
xlat
or
add
pop
subl
lret
xor
xchg
ds
daa
movsb
aaa
pop
lret
jp
fxam
insl
add
adc
pop
jno
stos
and
call
test
call
cwtl
fdivrs
jo
xchg
cmc
gs
mov
pop
jl
jo
roll
add
dec
cmp
add
lret
inc
and
popa
lods
loope
dec
test
loopne
and
mov
inc
sahf
adc
sub
out
inc
inc
sub
insl
or
cs
xchg
xchg
lcall
mov
mov
enter
or
pusha
dec
stos
call
pop
sub
adc
outsl
mov
fcoml
jb
ja
es
xchg
mov
jge
clc
sub
push
and
nop
mov
aas
or
and
out
les
into
mov
ret
cmp
nop
lds
push
xchg
xchg
sbb
jbe
les
aam
adc
add
jne
dec
sti
xchg
test
pushl
out
sub
xchg
sbb
daa
add
pop
test
inc
xor
scas
aas
imul
sbb
ds
cmp
dec
pop
adc
out
enter
and
loope
decl
xchg
mov
mov
cmpsl
shlb
mov
out
loop
lods
add
xor
push
jae
rcll
sub
scas
mulb
leave
or
cmp
inc
push
adc
clc
pop
mov
into
daa
mov
jge
daa
xchg
das
lea
push
dec
shll
icebp
test
push
sti
cmp
inc
cs
sbb
mov
add
les
fstps
add
jmp
adc
aad
jle
inc
inc
ret
lods
mov
iret
stos
jecxz
cmp
xchg
mov
rcr
sub
call
loopne
add
je
xor
aam
lds
inc
lods
sti
xor
cmpsb
push
inc
dec
add
dec
pop
jmp
call
movsb
hlt
pop
mov
jp
pop
into
in
insl
cmpl
in
or
pop
cs
push
mov
adc
and
sub
outsl
jae
jbe
scas
mov
gs
movsb
mov
jnp
jae
sbb
fsubs
lea
outsl
cmpsb
pop
mov
movsb
pop
mov
or
in
mov
cmp
xchg
jmp
and
xchg
in
push
pushf
call
jmp
lock
cmp
popf
test
in
in
iret
addr16
sbb
sarl
inc
in
adc
js
sahf
pop
dec
rorl
jno
stc
cld
push
xchg
repz
das
pop
mov
inc
mov
js
nop
pop
ret
pop
fstpt
adc
mov
jae
je
mov
sub
mov
jle
or
test
dec
adc
push
in
arpl
pop
jg
repz
out
jge
mov
fstpt
outsb
in
and
mov
sub
pop
pushf
test
lds
mov
rol
popf
and
frstor
shr
xor
sub
jp
xor
or
out
xchg
imul
mov
fs
xchg
pusha
mulb
es
repnz
dec
cwtl
mov
in
push
inc
dec
mov
in
mov
pop
jno
mov
mov
mov
clc
jns
cs
and
pop
pop
xor
lods
sahf
lock
pop
mov
dec
dec
and
push
jecxz
pop
stos
pop
jns
ss
test
das
push
push
or
rcrl
mov
mov
adc
iret
shrb
mov
inc
mov
out
mov
pop
cmp
stos
ja
jmp
cmpsl
cwtl
lret
arpl
pop
out
and
cmp
xchg
in
xchg
addr16
cmp
sbbw
mov
cmpsb
push
flds
shr
dec
out
js
lods
into
adcb
sbb
clc
cmp
xor
popa
out
mov
lret
leave
jecxz
addl
pop
and
cmp
bound
and
mov
jbe
out
xor
dec
dec
outsl
or
and
push
or
or
in
aad
push
push
cli
and
mov
dec
out
lock
push
xor
inc
jecxz
lock
fwait
imul
cli
sub
inc
sbb
push
mov
repnz
test
jp
pop
pop
popa
cmp
jp
arpl
inc
cmp
in
cmp
je
mov
popf
pop
imul
jmp
pusha
int
mov
arpl
decl
sarb
inc
cltd
push
ret
dec
out
nop
mov
aaa
popf
lock
mov
push
inc
jmp
scas
mov
push
cld
sti
hlt
mov
inc
mov
adc
cli
push
jecxz
jp
mov
mov
sahf
pop
std
sub
nop
dec
imul
mov
inc
cli
sub
test
dec
xchg
cmp
pop
mov
pushf
loope
add
add
xor
lods
pop
in
mov
ffreep
mov
and
or
addr16
jmp
into
lods
aas
ljmp
sbb
xchg
jg
psubsw
cmpb
fsubrl
pusha
es
xor
sub
sub
pop
and
adc
mov
inc
dec
mov
mov
mov
cmp
add
in
mov
mov
xchg
mov
adc
or
scas
adc
or
call
dec
mov
mov
pushf
jmp
test
lcall
insb
sub
or
mov
cwtl
xor
repz
sti
xor
lds
or
scas
adc
shll
call
les
sbb
repz
sub
mov
or
push
xor
stos
push
fisubrs
fiadds
push
imul
stc
lock
test
pop
jg
int
ret
loopne
xlat
cmp
cld
mov
pop
push
fisubs
es
je
out
lods
pop
outsb
adc
sarl
lods
std
sbb
inc
test
out
out
push
test
jo
mov
cmp
data16
dec
cmpb
push
jns
roll
fsubrs
jmp
sbb
mov
bound
into
movsb
mov
loop
push
mov
test
cmpsb
fbld
icebp
ja
nop
mov
and
jo
les
pop
sbb
lret
push
ljmp
fxch
imul
ret
sub
xor
frstor
dec
out
rcrb
imul
mov
sahf
dec
std
repz
inc
sbb
adc
outsb
pop
mov
cwtl
sbb
popa
cmp
dec
iret
in
xchg
sti
push
xlat
mov
lods
or
int3
mov
aad
cs
loope
sbb
sbb
mov
xorb
cmp
sarb
fstl
imul
dec
inc
xchg
aas
jns
ja
ficoml
xor
pop
out
push
mov
sti
xorl
sti
inc
or
inc
aad
cmc
filds
jno
mov
or
mov
jl
fwait
jno
sbb
xchg
testb
and
mov
out
push
movsb
lea
jge
std
test
xor
inc
mov
out
xchg
fs
mov
fwait
xor
in
pop
ljmp
adc
mov
ret
lret
sbb
jmp
jbe
xor
cmp
pushf
push
adc
movsl
jbe
lahf
sub
inc
gs
mov
shr
xor
push
test
jmp
loopne
sbb
sub
push
mov
push
clc
lods
pop
xor
adc
loope
sub
nop
addr16
mov
jecxz
adc
insb
jg
push
loope
loopne
addr16
mov
fwait
xor
scas
rolb
sahf
inc
aaa
test
imul
mov
iret
inc
shl
lock
nop
xchg
and
push
lahf
cmp
aam
sub
insb
daa
sahf
mov
or
mov
inc
adc
and
movb
or
loopne
cmc
aas
inc
sbb
or
outsl
pop
dec
push
inc
jmp
fcomps
dec
lods
mov
fs
out
fidivrl
lcall
sub
shrb
jg
ret
xchg
xchg
int
jge
pop
xor
adc
dec
mov
das
xchg
mov
pop
enter
jb
inc
addr16
loop
rclb
push
mov
jne
mov
push
sbb
pusha
test
adc
adc
xorb
push
lods
cli
push
lret
pop
jo
dec
sbb
sub
gs
mov
xchg
mov
popf
int3
aas
mov
subl
inc
inc
lods
mov
in
sbb
mov
mov
add
test
popf
loope
sub
pop
cmp
xchg
inc
or
push
jae
push
ja
jns
cmp
mov
cmpsl
sbb
mov
pop
pop
rolb
int3
or
cmp
push
outsl
xor
xor
out
xor
push
cmp
ret
out
xchg
and
jbe
mov
cmp
lods
mov
or
cmpsb
adc
pop
ja
std
in
gs
lahf
or
sbb
imul
mov
or
js
push
stos
lahf
dec
je
sahf
leave
aad
imul
adc
dec
lock
inc
push
add
stos
int3
pop
jmp
and
loope
mov
sub
xor
jmp
das
es
outsl
and
xor
push
xchg
adcb
mov
sub
and
int3
pop
push
mov
dec
mov
in
in
mov
jecxz
call
mov
popf
jnp
and
mov
ja
xchg
push
lods
jmp
mov
pop
push
dec
in
inc
fdivp
movsb
mov
test
or
fidivrs
sbb
or
inc
mov
and
adc
aam
and
jno
into
sub
aaa
xchg
push
fists
cmpsb
aaa
or
fdivs
inc
aad
shl
js
push
dec
mov
mov
movsl
sbb
iret
enter
xchg
inc
sahf
push
push
sub
loop
jno
mov
push
adc
dec
dec
or
stc
adc
jge
ds
shrl
mov
ds
push
sub
sbb
ss
lahf
pushf
mov
cmp
fldl
pusha
sub
js
inc
ss
sub
arpl
jns
shrb
clc
ljmp
and
xchg
imul
jo
and
lods
jno
jae
xchg
xor
loop,pn
dec
lret
or
aas
lcall
aaa
stc
xchg
xchg
sub
std
xchg
inc
fistps
fisttpll
mov
push
adc
jns
repz
adcb
mov
nop
xchg
pop
frstor
out
int3
push
and
mov
mov
push
ror
callw
lods
adc
daa
xlat
sbb
clc
pop
cmpsb
out
movsb
lock
add
pop
jp
outsb
cmp
movsb
ret
pop
mov
mov
push
pop
dec
mov
lds
fwait
pop
insb
cmp
lret
dec
dec
repz
sbb
dec
insl
add
les
jle
jae
inc
mov
popf
pop
stos
lcall
pop
or
xchg
fwait
pop
std
push
sub
orb
mov
dec
mov
xchg
das
jnp
out
mov
sub
jnp
pop
data16
mov
lock
push
out
jmp
icebp
out
bound
shrb
push
movsb
inc
xor
stos
dec
lds
pop
aas
xchg
frstor
dec
jl
add
sub
jle
outsl
aas
cmpsb
arpl
cs
lods
mov
pop
mov
mov
jle
mov
dec
jbe
ret
jecxz
lcall
mov
adc
shll
icebp
mov
adc
xchg
lcall
jl
add
loop
outsl
sbb
aaa
jns
jecxz
pop
pop
cmpsb
adc
mov
xor
mov
xor
pop
lods
sarb
lret
mov
xchg
push
sub
inc
fcoml
xor
clc
cmp
aas
jl
pop
fdivl
adc
fildll
out
add
xchg
fs
sub
pop
or
adc
push
or
jl
out
ljmp
es
inc
jno
sub
push
mov
clc
cmpsl
mov
and
js
out
cli
jmp
cmp
add
xchg
mov
cmp
push
xchg
pop
ljmp
cmp
push
pop
adc
adc
sub
mov
jg
inc
enter
mov
xor
mov
xchg
push
mov
jne
mov
push
mov
xchg
stos
call
loop
iret
add
lcall
cli
int3
repz
push
dec
adc
out
push
mov
aas
loope
ds
xor
fadd
repz
push
mov
xchg
inc
nop
jp
lods
adc
aad
jmp
out
pop
fyl2xp1
mov
push
jb
xor
std
and
pop
dec
inc
test
inc
jmp
movsb
add
lods
pop
lock
int3
das
into
xchg
xor
je
roll
dec
cmp
push
sub
dec
stos
aaa
js
xchg
push
add
push
or
jo
mov
cmp
inc
scas
aam
sahf
sub
sub
arpl
fldt
fdivrs
xor
aad
fimull
out
into
std
xor
and
mov
inc
pop
pop
ss
adcl
cmp
nopl
fs
mov
pop
and
jmp
hlt
in
mov
mov
xchg
dec
pop
xor
fimuls
add
inc
outsb
or
pushf
xchg
in
jmp
jge
sub
xor
out
lcall
les
jmp
dec
pushf
inc
pop
cmpsb
lcall
mov
test
xor
inc
sub
push
icebp
inc
jecxz
and
adc
and
int
test
repz
xchg
test
add
popl
test
fildl
cmp
mov
add
ljmp
dec
cmp
add
adc
lods
push
jno
sub
fbstp
in
jnp
jae
rcrb
aaa
jmp
jle
leave
push
xchg
clc
movb
je
jb
dec
ret
mov
mov
push
fs
in
xchg
and
mov
xchg
mov
outsl
and
sub
mov
dec
cmc
mov
mov
add
rcll
gs
xor
and
xchg
sarl
jb
out
ret
dec
loop
orb
rcrl
jb
push
or
mov
or
mov
push
lock
jns
adc
and
add
xor
hlt
and
mov
xchg
dec
bound
cmp
jl
push
xchg
imul
xchg
fwait
xlat
xor
jno
push
cmpsb
in
idivl
cmp
pop
xchg
xor
test
addr16
mov
fcomip
mov
jp
xchg
ljmp
mov
add
out
push
movsb
icebp
iret
mov
and
push
mov
imul
push
mov
andl
pusha
xchg
dec
adc
xchg
ds
sbb
ss
ljmp
adc
or
and
jle
cmpsb
sub
add
test
or
lret
cltd
ud2
loop
or
jmp
in
mov
scas
cmpsl
inc
test
popf
cmp
sub
add
ss
add
sbb
fisttpl
xlat
pop
pop
mov
push
ljmp
jb
jae
and
cmp
popa
shl
add
mov
fsubl
pop
lea
clc
repz
popa
fs
inc
mov
jmp
mov
ljmp
fisttps
sbb
ret
add
ret
std
adcb
jg,pt
int3
mov
mov
mov
in
xchg
insb
sbb
scas
xchg
adc
cld
lcall
mov
or
call
inc
lods
mov
daa
cmp
sbb
push
inc
aaa
xchg
xchg
mov
cs
xchg
ja
pop
pop
jns
push
mov
sub
xchg
push
push
jle
jl
lds
sarl
or
bound
jo
sahf
xor
dec
push
not
jge
add
mov
cmp
and
loop
mov
cmp
mov
mov
pop
sbb
sbb
push
and
cmpb
lahf
les
adc
call
inc
sbb
xor
ja
xchg
cmp
and
enter
push
cld
orl
mov
lods
mov
inc
out
adc
fdivrl
mov
lcall
mov
sub
in
jle
fs
and
mull
add
cmpsl
insl
add
ja
sub
mov
xor
ds
insb
mov
ja
out
sub
mov
cmp
loopne
call
cld
pop
lret
sti
or
or
movsl
jnp
or
in
call
cmpsb
add
cmp
inc
push
ds
and
lcall
jns
pushf
or
cld
mov
add
xchg
push
sub
pop
js
add
jae
jmp
jle
aaa
idivb
ja
mov
and
fstl
fwait
jle
push
sarl
lret
rorl
pop
inc
xchg
dec
aaa
jl
pop
scas
data16
mov
lods
mov
pop
icebp
xchg
fucomp
int3
arpl
mov
push
int
add
or
push
xor
dec
cmp
js
ja
xchg
cmp
lea
push
push
push
mov
cltd
and
sbb
rcll
loope
sub
faddl
cltd
sbb
cmpsl
movsb
paddq
mov
and
inc
int3
pop
iret
lahf
lret
loope
sub
ss
cmp
movsb
push
jns
mov
sbb
jp
out
xchg
cmp
or
cli
jno
or
jnp
mov
inc
or
sub
lea
dec
xchg
xchg
jae
test
adc
pop
and
xor
sub
nop
mov
jbe
cmp
jmp
mov
jge
mul
stos
insb
adc
pop
frstor
insb
add
das
ja
push
loopne
aaa
push
ja
pop
sbb
aaa
call
sbb
dec
bound
jle
cmp
sbb
call
or
fistps
out
sbb
addl
jb
cli
push
loope
mov
pushf
mov
mov
outsl
pop
or
add
sub
xor
decl
push
push
cmpsb
xchg
jae
and
call
icebp
ja
into
and
and
xchg
sub
jns
cmp
mov
xor
inc
jbe
mov
ljmp
push
gs
mov
xchg
push
es
xchg
pop
cmp
mov
shlb
iret
mov
or
cmp
fs
inc
xchg
push
cld
mov
fidivrl
cld
mov
out
jmp
xchg
stos
or
adc
xchg
outsb
test
or
dec
pop
add
imul
cltd
out
mov
lds
out
pop
inc
mov
dec
fnstenv
jge
and
or
jns
sti
andl
test
out
fildl
fistpll
or
jnp
cltd
decb
pop
jns
mov
jo
gs
mov
popf
lret
daa
inc
sahf
mov
inc
stos
jmp
sub
repz
test
adc
gs
adc
jle
pop
je
xchg
push
mov
sbb
ja
sub
insb
push
ljmp
lahf
or
fidivl
rorl
inc
insl
cmc
or
mov
popl
std
test
lret
aaa
pop
loope
daa
mov
adc
subb
lret
les
or
xchg
sub
imul
scas
loopne
ret
mov
jge
cmp
adc
mov
lock
mov
sub
jmp
jnp
shrl
iret
mov
imul
sub
test
loope
adc
stc
jp
jb
mov
shr
into
pop
mov
push
mov
add
rorb
inc
sub
int3
mov
jp
filds
sti
sub
insb
mov
test
adcl
test
xlat
jne
test
outsl
mov
stc
adc
or
loop
pop
adc
decl
xor
pop
xor
popa
gs
mov
sbb
ret
push
sbb
mov
stc
int3
fisubrs
es
xlat
push
pop
jle
mov
sbb
or
push
cmp
lahf
ljmp
sub
shrb
xlat
inc
loopne
rorb
add
cli
jge
xchg
lahf
pusha
data16
lods
inc
inc
pop
cli
sbb
loopne
mov
adc
test
div
fsts
inc
fisubrl
xchg
sub
sbb
add
push
xchg
mov
jge
cli
aam
or
ret
sbb
xchg
sbb
mov
mov
push
aaa
jns
movups
jle
dec
loope
in
leave
repz
ret
inc
insl
mov
or
mov
arpl
sti
mov
in
or
push
frndint
test
push
mov
out
cli
movsb
xchg
xchg
adc
xor
adc
outsb
sahf
add
or
xor
mov
and
pop
test
add
jnp
cmpsb
lahf
xor
in
in
jp
fs
fnstcw
bswap
lock
push
rclb
les
mov
inc
adc
push
mov
cmp
jle
sbb
xchg
mov
cmc
cmp
stc
lea
pop
stc
loop
mov
sub
sti
jno
adc
and
pop
pop
enter
mov
insl
movsb
jb
imul
or
inc
lahf
shr
inc
sub
mov
mov
lcall
xor
std
test
adc
xor
dec
pop
mov
std
fsubrl
cmp
mov
hlt
sub
sarl
cmp
leave
xchg
sub
ljmp
mov
mov
dec
mov
adc
testb
jle
xchg
lds
popa
push
mov
mov
lahf
std
mov
sbb
sti
mov
xchg
stc
out
dec
cmp
lods
sbbl
mov
pop
add
sahf
jmp
out
out
cli
jb
or
pop
in
sbb
fidivrl
repnz
add
mov
mov
sub
ss
jno
add
push
mov
fwait
mov
xor
mov
mov
imul
pushf
xchg
mov
clc
repnz
jbe
jno
adc
xchg
daa
fcoml
lods
adc
ret
xchg
push
push
jmp
aad
jecxz
fucomip
enter
test
ja
pop
xor
add
clc
insl
inc
and
pop
dec
xchg
stos
cld
in
mov
jnp
cmpsb
jp
insl
push
mov
lret
jp
push
inc
rcrb
sub
xchg
sarb
adc
fwait
ret
cli
cmpsb
xchg
xor
scas
jno
les
pushf
push
pop
add
mov
rcrl
lret
or
push
xchg
push
cmp
out
lret
sbb
lods
mov
add
xor
movsb
xor
sbb
das
sbb
and
sub
fucomi
pop
jecxz
inc
in
fwait
jge
fwait
addr16
push
sti
insl
sti
mov
cwtl
int
imul
mov
dec
mov
add
sub
pop
sahf
cwtl
popf
repz
out
push
sahf
daa
sarb
call
mov
sbb
jno
cmp
inc
push
notl
push
xchg
xchg
pop
jb
xchg
and
outsb
fneni(8087
not
stc
fwait
dec
add
adc
addr16
es
sub
xor
loope
dec
mov
cltd
add
mov
jo
mov
cmp
xchg
lods
mov
mov
cld
cmp
xlat
jecxz
in
mov
testb
addr16
enter
ja
test
xor
les
mov
cld
out
shl
xchg
pop
clc
loop
rcrb
mov
rcrb
mov
mov
repnz
xor
mov
dec
movsb
sar
dec
mov
and
sbb
in
add
mov
das
or
jle
xchg
popf
in
scas
push
sub
repz
mov
mov
push
push
add
xor
sub
fisttps
subl
dec
pop
add
add
pop
jge
cmp
paddsb
stc
jle
in
mov
sbb
sbb
clc
in
add
out
push
xchg
int3
mov
push
cmc
ss
lea
lds
popf
cmp
push
jmp
cmpsl
jnp
jmp
arpl
out
or
cmpsl
jae
enter
sbb
fs
out
rcll
fidivrl
in
aaa
jl
ret
aam
mov
push
imul
repz
mov
daa
push
and
pop
or
jecxz
nop
mov
loope
jl
mov
rcrl
mov
add
pop
jecxz
jne
and
clc
rcrb
int3
rcrb
nop
iret
fcmovb
gs
jge
lock
inc
popf
mov
xchg
rdtsc
fidivl
dec
inc
stos
add
in
mov
or
pop
mov
lahf
xchg
lret
inc
dec
inc
shrl
xchg
mov
fidivl
cmp
add
das
mov
test
clc
pop
leave
jb
mov
cwtl
jl
notb
cmp
test
sub
xorl
sub
mov
daa
clc
xchg
lahf
aaa
dec
cltd
mov
sbb
cmp
jmp
add
add
test
idivb
cmp
pushf
rolb
sub
lret
adc
mov
repz
pop
lods
xlat
movsb
sub
test
mov
cmpsl
imul
jecxz
in
mov
xor
hlt
clc
frstor
mov
popf
mov
push
sbb
aas
and
ds
jg
mov
bound
stc
lods
mov
cmp
dec
sbb
cmc
fistl
jmp
pop
rorl
sbb
cmp
cld
jo
lcallw
xchg
imul
dec
jecxz
inc
in
shlb
jle
mov
lds
add
sub
test
inc
mov
jns
dec
xchg
pop
and
mov
adc
push
mov
push
enter
pop
or
clc
adc
adc
add
iret
jl
stc
pop
leave
aas
sbb
lods
aad
inc
mov
mov
push
stc
push
pop
add
cltd
add
jg
pop
pop
xchg
repz
imul
mov
xchg
dec
and
cmp
shr
push
fdivl
in
rolb
cmpsb
and
jg
sti
inc
jge
mov
gs
rolb
xchg
out
mov
cltd
lret
jle
sahf
inc
sub
jp
filds
shrb
push
adc
add
ljmp
aaa
lcall
mov
inc
dec
sbb
push
add
js
inc
shlb
xchg
dec
mov
pop
push
pushf
xor
test
push
pop
pop
xor
fstps
sub
mov
cmp
adc
std
notl
pop
push
ds
jb
mov
negb
movl
add
test
pop
arpl
mov
push
xchg
add
adcb
mov
mov
jne
xchg
test
pop
add
pop
sub
push
into
mov
sbb
jmp
or
and
lock
push
ficomps
xchg
fadd
stos
push
cmpsb
jmp
pop
add
adc
dec
mov
iret
mov
sub
or
push
cmp
in
adc
hlt
mov
mov
sub
clc
sbb
cmp
enter
addr16
sub
pushf
pusha
insb
movsb
dec
repnz
hlt
jl
pop
dec
out
push
lret
jge
in
stc
das
lods
int3
jns
mov
adc
adc
mov
xchg
push
hlt
fsubr
and
mov
pop
sti
mov
pop
ss
add
daa
hlt
lahf
mov
and
enter
mov
mov
push
outsb
decl
xchg
dec
orb
jmp
add
adc
int3
jmp
mov
shrb
cmpsb
js
add
notl
inc
add
cmpsl
or
psubusb
sbb
cld
cmp
mov
fcmovnu
fwait
mov
sti
ret
jbe
sbb
and
aas
cmpl
stos
adc
loop
sbb
call
dec
xor
jb
pushf
out
and
jl
xor
jno
xchg
push
and
mov
insb
sub
daa
inc
push
daa
dec
imul
ja
leave
jge
jnp
adc
in
mov
cmp
inc
or
xchg
adc
add
or
or
das
xchg
cmc
mov
out
js
mov
and
ret
mov
ret
pop
inc
mov
mov
mov
imul
jp
pop
xor
cld
xchg
push
lcall
insb
mov
push
scas
out
jmp
jp
dec
xchg
pop
xor
xlat
cmp
ret
lods
inc
in
addr16
popf
sbb
movsl
push
outsl
idivl
pop
fsubs
shlb
insb
stc
jl
outsb
xchg
xchg
mov
dec
mov
mov
jmp
xchg
popf
jl
sub
or
outsl
mov
sbb
dec
dec
mov
pop
lods
push
shlb
add
sar
mov
bound
sub
dec
pop
inc
imul
rcrl
sahf
repz
or
addr16
pop
push
jge
sub
mov
adc
mov
adc
movsb
jl
sub
mov
inc
jl
xor
ds
test
xchg
dec
cmp
dec
mov
jecxz
stc
sbb
mov
xor
xchg
inc
imul
mov
stc
in
jecxz
icebp
ljmp
fdivs
inc
mov
cmc
dec
cli
pop
enter
ds
xchg
pusha
fisubl
imul
sahf
inc
in
or
inc
call
jae
in
mov
add
in
in
ds
mov
and
insb
lahf
or
je
jo
pop
sti
flds
dec
push
mov
stos
stos
and
mov
mov
sti
push
cltd
cmp
in
and
xor
push
out
mov
lea
loop
lods
cmp
lods
mov
lahf
xchg
jnp
das
rorl
daa
into
cwtl
push
lret
sub
leave
fisubl
adc
call
mov
dec
sub
pop
insb
xchg
or
mov
sahf
push
cld
cmpsb
adc
out
addr16
jns
cmp
out
ljmp
mov
es
inc
hlt
push
dec
xor
dec
dec
xchg
dec
loopne
and
mov
pop
movsl
insb
sahf
lcall
mov
xchg
xchg
mov
rol
cltd
xor
movsl
dec
in
les
lahf
dec
shrl
mov
cld
push
lret
sub
orl
xchg
lock
jg
fs
dec
jbe
sub
repnz
fidivrs
ljmp
rcr
les
dec
lahf
dec
mov
test
inc
je
mov
pop
sub
sub
cltd
sbbl
test
cli
jne
out
out
clc
out
fisttpl
sub
cmp
mov
daa
push
pop
shrl
mov
jbe
mov
ss
xlat
imul
ljmp
xorb
pop
aas
clc
sbb
fistps
xor
cmp
cmpsl
and
cmpb
cmc
add
pop
cld
dec
fcmove
lea
out
jae
stos
inc
xlat
push
std
andb
cmpsl
mov
test
pop
addr16
pop
cmc
or
push
loopne
mov
cld
xor
mov
repnz
mov
cmp
loop
mov
sbb
jmp
push
movsb
fwait
sbb
xor
stos
sbb
aad
repz
sbb
dec
aaa
add
xchg
push
jge
aad
repz
aaa
xchg
cmp
cmp
xchg
lods
int
sahf
outsb
dec
lock
popa
insb
shrb
cli
mov
sbb
mov
jne
xchg
ret
rcll
pusha
push
xor
xchg
pop
jae
out
sbb
mov
pop
cs
jecxz
push
jp
pop
sub
sbb
out
pop
xchg
and
jns
std
test
mov
jmp
sbb
fisubl
dec
xor
pop
scas
addr16
ja
mov
push
xchg
movsl
sbb
pop
test
sub
push
icebp
hlt
jnp
nopl
outsb
add
lock
fsts
fs
arpl
ficomps
or
pop
out
imul
jmp
jmp
adc
push
lock
xor
mov
push
movsb
aaa
and
cs
clc
icebp
sub
rcrl
xlat
pop
adc
ffree
shl
sahf
dec
rol
push
mov
pop
add
insl
bound
ficoml
pop
cs
mov
push
xchg
add
jl
insl
dec
int
and
or
inc
sub
and
pusha
out
aam
pop
vaddss
icebp
and
push
in
popa
inc
cmc
cmpsl
and
loop
jmp
xchg
je
adc
and
enter
cmp
mov
mov
jecxz
xorb
push
daa
mov
adc
mov
xor
push
sbb
hlt
stos
xchg
lea
sti
outsl
ret
cmc
mov
iret
jmp
mov
mov
dec
cs
fwait
add
sbb
add
mov
mov
into
mov
fidivs
dec
inc
aad
jmp
inc
pop
popa
lea
dec
mov
mov
jb
xchg
fs
dec
test
push
dec
ss
push
xor
cmc
mov
xlat
fcoms
push
fdiv
xchg
sub
call
and
cmc
addr16
mov
hlt
jns
int
jbe
sahf
xor
cli
or
dec
idivb
adc
jl
in
pop
sub
outsb
enter
mov
and
sub
sti
xchg
cmp
dec
rorb
mov
imul
out
into
ljmp
push
andl
sbb
and
fdivs
sub
mov
fisubrl
or
push
movsl
inc
push
pushf
insl
loopne
jg
xor
jp
jbe
lcall
daa
mov
xor
cmp
mov
dec
repnz
xor
aaa
out
ret
idivl
add
adcl
dec
xor
js
mov
gs
scas
mov
test
dec
mov
addr16
iret
sbb
dec
and
jp
mov
lods
stc
mov
inc
std
mov
sub
inc
sti
pop
outsl
mov
lods
icebp
lods
outsl
ret
pop
test
jmp
adc
mov
mov
pop
mov
and
push
inc
cmpsl
shl
sub
hlt
sub
xchg
pop
icebp
or
mov
add
and
arpl
test
mov
stos
or
mov
into
les
dec
loop
jp
mov
popf
cwtl
orps
in
push
add
popa
sti
flds
test
sbb
call
sbb
sbb
lock
xor
jno
dec
imul
ja
nop
fnstenv
bnd
movsl
nop
pop
das
lea
xchg
icebp
cltd
cmp
pop
hlt
xchg
xlat
test
sbb
int
sbb
adc
cltd
into
adc
shrl
test
adc
out
push
inc
loope
sbb
xor
rorb
lea
or
aad
cmpsb
jnp
popa
aaa
cmp
inc
lret
inc
mov
loop
mov
dec
scas
insb
imul
mov
fisubrl
mov
lock
xchg
fcoml
pop
leave
push
lods
enter
mov
pop
addr16
inc
ficoml
lock
fucom
push
xor
movaps
out
rolb
aaa
and
push
mov
ret
push
xchg
int
sub
aaa
dec
cmp
inc
mov
imul
dec
xchg
ds
fwait
add
push
mov
xlat
loop
sbb
mov
mov
dec
int
xchg
pop
or
add
enter
jb
loop
jo
imul
ds
sti
loope
out
stos
out
in
pop
test
push
or
xor
ret
push
cltd
push
xor
or
fists
shrb
jg
push
jno
ljmp
jl
jnp
push
shrl
bound
lret
lret
jl
shrb
pop
pop
add
ds
lcall
mov
stos
lock
pushf
push
mov
mov
out
lock
xchg
ret
sub
mov
or
xchg
mov
mov
shll
mov
mov
xchg
std
inc
inc
sbb
stos
lret
repnz
pop
pop
fldl2t
push
xchg
pop
cmp
jno
dec
or
jmp
rcr
pop
shrl
sub
and
in
ret
jb
add
xchg
mov
fstpt
into
movsb
sub
jne
test
fbstp
jo
and
neg
movsl
xchg
pushf
mov
xor
inc
call
insl
jecxz
add
movsl
loopne
jns
stos
sub
sti
outsl
jge
dec
mov
cmp
pushf
and
out
jbe
jae
movsl
xor
sbb
insb
add
aad
mov
add
movsb
in
xorl
push
in
jb
xchg
push
orl
pop
cli
push
sbb
xor
inc
xorb
mov
cmp
cmp
dec
hlt
xor
inc
mov
and
xchg
adc
cmp
popa
cmp
loop
subb
mov
mov
out
mov
nop
dec
popa
mov
xchg
mov
dec
or
mov
js
imul
inc
mulb
and
xor
cmpb
rcrl
rorl
cmp
aas
dec
push
xchg
clc
mov
pop
arpl
jbe
aaa
mov
fistl
cmpsl
push
stos
ror
or
pop
sub
jle
dec
dec
shlb
andl
js
mov
outsb
insb
xor
sub
sbb
inc
stos
cs
sbb
jle
mov
and
xchg
and
lds
sub
pop
inc
pop
dec
popa
mov
mov
test
mov
es
push
dec
and
inc
pop
xor
fucom
jmp
mov
push
mov
mov
xor
sub
mov
cmpsb
or
dec
mov
or
scas
call
adc
xchg
cmp
xchg
cld
pop
push
mov
mov
stos
mov
les
xor
scas
test
xchg
and
dec
int3
fdivrp
or
jp
rcrl
inc
xchg
out
mov
iret
pusha
cs
int
and
iret
sbb
cmc
inc
push
lcall
push
je
movsb
fmul
dec
jne
into
and
hlt
xchg
lret
scas
mov
push
pop
cltd
fistpl
inc
inc
cli
inc
aas
arpl
jo
sbb
scas
loope
ret
jp
pop
add
ficomps
das
jne
jecxz
xchg
sub
push
aaa
andl
lods
pop
mov
fwait
sbb
add
jae
into
pop
jns
in
add
cld
test
movsl
sub
jb
mov
shlb
ja
add
and
sbbb
into
in
xchg
add
lcall
or
mov
pusha
inc
cmc
inc
or
push
loope
sbb
clc
in
sbb
sub
sbb
inc
dec
mov
and
int3
in
imul
aam
fildl
pushf
mov
or
or
xchg
dec
scas
hlt
insl
mov
pop
mov
js
lea
lcall
mov
shlb
and
mov
imul
push
fisttpll
test
cmp
push
or
jnp
cmp
sbb
mov
imul
adc
inc
adc
loope
and
mov
call
pop
leave
inc
aam
mov
dec
sbb
jno
outsl
add
leave
test
sbb
out
mov
jge
pop
pop
movsb
nop
push
inc
fwait
int3
leave
xorb
jl
adc
mov
push
je
inc
jo
hlt
lahf
push
inc
into
out
dec
mov
pop
mov
lcall
dec
and
cmp
imul
pop
dec
dec
les
cltd
rol
cli
ljmp
div
fcmovnu
sbb
les
jae
dec
mov
aaa
ficoms
xor
dec
add
fcmovbe
push
sti
movsb
mov
jg
xchg
mov
cmp
cltd
mov
push
test
push
add
pop
xor
pop
lock
lods
xchg
jp
fcompl
jmp
lods
ss
gs
subl
sbb
scas
pop
in
test
subl
mov
mov
out
stc
mov
loopne
daa
jecxz
sbb
jnp
inc
fwait
xor
cmp
aam
loope
clc
mov
sbb
in
sbb
jns
rorl
ror
push
xor
sbb
cmc
lahf
dec
in
mov
inc
movsl
lods
push
test
adc
mov
push
sar
pop
ljmp
fldcw
xchg
cmp
sbbl
leave
or
sub
push
call
xchg
add
outsl
loope
icebp
pop
inc
cmpsb
das
xor
cmp
and
adc
iret
adc
lds
fldl
xchg
pop
lret
sbb
mov
mov
aas
jp
clc
pop
xchg
sub
xchg
nop
mov
lods
test
repnz
dec
cmp
jns
and
xchg
lret
pop
in
imul
xor
loope
adcb
jo
add
arpl
aad
xor
movsb
fs
add
lds
insl
mov
inc
xor
in
les
dec
xor
xchg
or
sarl
pop
enter
nop
das
mov
je
scas
ret
fstpl
mov
mov
pop
je
lret
xlat
jnp
scas
mov
fs
xor
adc
fbstp
stos
andl
sahf
add
mov
jmp
cmpb
out
lahf
pop
mov
ret
jns
mov
adc
cmp
sbb
lret
adc
jle
mov
mov
loopne
xor
adc
int
and
inc
xor
push
lea
mov
xchg
ds
cmpl
add
int3
dec
push
test
aaa
jne
scas
sub
out
daa
dec
sub
xchg
das
lock
or
sahf
rclb
insl
nop
in
cmc
jae
mov
je
ffreep
test
cmp
jnp
in
rorl
mov
cwtl
faddp
enter
fiaddl
aad
movsl
xor
push
or
test
xchg
cli
insl
push
mov
jmp
cli
and
daa
fisubrs
pop
daa
scas
mov
and
sub
mov
dec
jle
inc
mov
idivl
pushf
out
or
cmc
inc
cmp
add
xchg
mov
testl
dec
cmp
mov
rorl
stos
sub
mov
cmp
ss
xchg
add
sbb
xchg
gs
add
ss
fisubrs
or
loope
mov
jmp
or
sub
xchg
add
and
fldcw
lock
jg
test
pop
xchg
sti
jle
shlb
add
loopne
jl
or
cmp
and
xchg
addr16
negl
fisttps
mov
fsubrl
bound
mov
lret
push
push
mov
push
in
inc
es
aaa
lods
adc
iret
mov
pop
sub
insl
ja
push
push
nop
jns
fucomp
data16
jmp
mov
sub
stos
pop
push
sbb
xchg
ret
negb
lret
pusha
out
push
outsl
push
pushf
xor
mov
add
ja
ds
in
sub
out
je
xchg
and
sub
mov
out
int
sahf
adc
sub
jmp
outsl
fidivl
clc
cmpsb
js
dec
iret
and
and
pop
outsb
icebp
and
sbb
sub
lock
and
inc
xchg
push
mov
push
add
lods
insl
mov
and
and
ss
lods
stos
sub
mov
jae
or
das
lret
int3
or
jecxz
cmp
pop
push
adc
lds
jge
xchg
dec
lods
lods
pop
test
lods
dec
pop
lods
or
xor
adcb
fdivrs
jl
negb
push
nop
or
sbb
pusha
mov
sbb
sahf
out
shll
sbb
imul
mov
sar
cmc
xchg
xchg
pop
sub
jmp
inc
inc
bound
adcb
sarl
adc
inc
and
aam
mov
rcrb
jle
int3
scas
cmp
inc
stos
nop
xchg
loopne
fwait
stc
aas
adc
and
cwtl
inc
lea
mov
popf
sarl
shrl
test
sbb
push
arpl
idiv
push
or
stos
rcrl
mov
sbb
pop
xor
fidivrs
iret
push
push
add
pop
xchg
or
fs
mov
xor
out
cs
xchg
aaa
and
lahf
js
test
inc
and
inc
inc
fs
in
push
test
out
mov
pop
mov
jns
call
push
xor
inc
mov
sub
test
mov
popa
push
sub
jne
in
xor
test
pop
push
push
mov
shrb
pop
or
out
lret
insl
sub
mov
sub
fwait
in
faddl
into
cmp
jmp
push
sbb
xor
scas
jno
mov
cmp
and
ss
subl
jns
mov
jmp
outsb
ret
daa
cmp
fbld
xor
sahf
test
pop
jp
lods
pop
xor
and
iretw
shrb
fisubrs
in
sbb
inc
add
shlb
inc
pop
push
stc
and
cwtl
dec
and
ret
sub
push
and
in
xchg
inc
sub
sbb
or
jno
stos
icebp
mov
adcb
jnp
or
test
in
mov
pusha
cmc
jb
imul
addr16
or
divl
loope
mov
mov
inc
mov
mov
or
bound
jbe
stc
lods
xor
ds
lods
lret
int3
mov
pop
mov
inc
imul
call
into
and
gs
jno
scas
int3
lock
xor
and
xchg
call
mov
loop
jmp
leave
mov
mov
andb
sahf
rcl
stc
mov
mov
mov
cs
xor
mov
jae
nop
push
in
ljmp
and
jle
lds
aas
fs
in
inc
movsb
dec
push
enter
push
and
lret
push
add
push
push
sub
mov
mov
hlt
test
scas
add
fs
cs
and
adcl
xchg
mov
pop
adcl
xchg
das
sbb
push
adc
lods
imul
fwait
and
mov
sub
jno
addr16
add
addr16
jge
aas
push
mov
ret
sbb
pop
sub
jecxz
adc
subb
movsb
fstl
inc
test
daa
cmp
bound
push
daa
pushf
out
std
sub
in
adc
por
push
dec
sbb
mov
test
jne
dec
outsb
and
pop
cmpsl
cmc
rclb
cmp
lds
rclb
xchg
mov
movsl
movsb
ret
pop
cs
dec
bound
lret
dec
ret
rol
ljmp
aas
out
das
cmp
pop
pop
mull
testb
loop
test
out
repz
inc
nop
inc
mov
inc
clc
push
lea
mov
xchg
xor
mov
faddl
in
es
sub
sub
jmp
int
sub
test
stos
lahf
mov
inc
or
ret
adcb
aad
xlat
jo
popa
or
sub
es
and
pop
aam
vpaddsw
sbb
stos
insl
data16
out
jb
rcl
insl
decl
mov
shl
daa
test
add
test
shrl
xor
stos
cmp
push
dec
jl
aad
mov
int
fidivs
notl
xchg
adc
aas
mov
movsl
cmp
aad
std
xlat
loopne
dec
cwtl
dec
push
jo
mov
fwait
xchg
dec
test
adc
jno
mov
notl
sbb
movsl
es
mov
data16
xchg
sbb
add
and
ja
sahf
mov
and
jmp
rclb
lock
mov
sub
out
pusha
pop
flds
rorb
and
decb
in
xchg
xlat
or
add
mov
fldt
lret
adc
or
and
repnz
movsl
xchg
test
stos
push
in
pop
dec
cwtd
clc
or
shlb
mov
pop
push
std
pusha
ljmp
or
je
mov
rol
jmp
jnp
or
sbb
fmuls
jecxz
mov
push
ss
cmpsb
jb
cwtl
push
dec
aam
jo
mov
jle
mov
mov
pusha
xchg
cmp
or
and
jecxz
cltd
divl
adc
cmp
push
psllw
lahf
dec
xchg
jne
push
pusha
aad
or
es
sub
push
mov
mov
add
lock
shr
mov
push
jo
fcmovnb
sub
adc
aas
stos
inc
inc
xchg
pop
cmpb
rcll
and
mov
shll
shr
sbb
ja
mov
in
ss
jbe
sbb
test
mov
xchg
jle
fisubrl
dec
push
sbb
inc
insl
mov
fists
add
stos
setns
add
out
in
mov
adcl
cmp
jbe
pop
dec
fcoml
inc
add
pop
sbb
push
repz
xchg
xchg
popf
xor
adc
lcall
cwtl
mov
sub
fisubs
and
dec
test
mov
loope
cli
push
sub
arpl
cld
cmp
mov
mov
test
sar
movsl
in
rorb
sar
cld
dec
mov
das
les
or
lret
or
lods
add
fstpt
subl
bound
sub
jne
dec
imul
lds
jo
xchg
sub
aad
pop
ss
movb
and
sbb
jnp
js
push
test
adc
sub
in
push
fs
push
mov
lock
fisubs
xor
xchg
mov
or
icebp
push
or
lods
rcrb
and
outsl
mov
sbb
pop
nop
mov
daa
cmpl
jne
sbb
mov
mov
xchg
jo
pusha
mov
xor
push
inc
stc
mov
aaa
sahf
insl
mov
roll
mov
push
sbbl
pop
lock
or
shll
push
cmpsl
and
push
in
cmpsl
sbb
std
popf
bound
sti
pop
jo
jecxz
mov
and
lods
xor
jnp
jbe
mov
and
cmc
test
lods
mov
mov
inc
jmp
ljmp
pop
or
xchg
fwait
mov
ds
test
push
or
movsl
push
pop
out
or
mov
sahf
dec
add
jae
fs
pop
repnz
nop
adc
mov
das
sbb
call
loop
sahf
adc
clc
loope
dec
inc
jg
cs
hlt
add
pop
pop
dec
ljmp
sbbb
or
jno
popf
lock
and
push
popa
lret
add
jns
ret
jl
cmpsb
js
jp
popa
sbb
cltd
inc
loopne
ret
out
adcb
insb
dec
testb
xor
mov
std
pop
xchg
xchg
adc
xor
push
imul
mov
cli
mov
or
gs
mov
push
and
xchg
lret
lock
sbb
stos
daa
xlat
and
mov
out
mov
jns
sub
adc
sbb
outsb
data16
testb
orb
sbb
fldt
outsl
clc
ret
lock
pop
data16
stos
daa
test
inc
das
outsl
push
mov
es
imul
mov
mov
push
xchg
cmp
and
fstl
adc
movsl
cltd
xchg
or
andb
xor
cmp
in
add
push
addr16
es
movsl
push
repz
jae
in
in
daa
jmp
adc
subl
aas
sub
mov
xor
mov
adc
inc
jnp
pop
mov
push
jle
push
insl
loopne
dec
or
mov
test
cs
loop,pn
pop
iret
out
pop
jnp
mov
into
mov
fadds
xchg
adc
test
sarl
push
or
pop
cli
cmp
pop
ljmp
loopne
out
lods
hlt
lcall
lret
dec
shlb
cmpsb
aad
lods
sarl
into
dec
and
mov
and
gs
int
push
aam
sbb
frstor
int
lods
jecxz
jmp
sbb
out
lahf
push
jo
inc
into
push
sub
int3
or
sub
das
insl
sarl
xchg
aaa
pop
mov
outsl
rcr
in
adc
sub
xlat
mov
sbbb
outsb
mov
sbb
xchg
jae
push
subb
inc
mov
mov
pop
stc
out
or
inc
jmp
cmp
xchg
mov
dec
dec
mov
jg
push
add
push
loopne
out
dec
mov
movsb
fwait
stos
sub
pop
mov
mov
jb
sbb
add
inc
add
jae
mov
arpl
test
cmp
xor
test
pop
in
insb
adc
push
mov
dec
fdivrp
subb
lret
and
inc
scas
jns
cmp
xor
mov
jb
das
ret
cmp
sub
adc
out
pop
push
jne
sbb
jecxz
inc
and
adc
pop
inc
xchg
mov
or
cwtl
pop
in
pop
and
leave
pushw
xor
outsl
sbb
shrl
mov
add
cmp
cld
cs
rorl
shrb
xlat
push
push
scas
cs
mov
push
cmp
pop
icebp
mov
fistps
es
push
cmp
lods
mov
mov
push
fdivs
lcall
add
loop
aad
jbe
sbb
stos
nop
fisttpl
loope
clc
mov
push
test
test
jo
mov
and
and
lret
push
jmp
xchg
lret
jle
mov
push
adc
inc
inc
push
mov
inc
mov
mulb
out
sti
test
pop
jge
test
std
lret
sbb
fcompl
cmp
push
scas
sahf
das
dec
push
imul
adc
sub
mov
out
push
sub
jo
and
sub
push
in
lods
stos
jp
test
loop
push
push
insl
push
les
add
mov
sub
mov
inc
mov
fisttps
mov
xor
in
out
daa
fldcw
mov
sbb
bound
clc
xchg
lea
xchg
pop
orl
and
and
inc
xchg
fs
push
fisubrl
xchg
into
test
mov
or
pop
aad
cmp
ja
dec
push
inc
sti
adc
lods
insl
xchg
jecxz
icebp
fnsave
std
and
add
fs
js
or
pop
sub
mov
es
xor
xor
popf
imul
xchg
jmp
add
push
pop
sbb
add
mov
cmp
out
inc
test
or
xchg
popa
mov
xorb
addb
out
push
pop
and
movsl
mov
addl
fwait
das
mov
inc
addr16
mov
loop
in
mov
mov
fsubl
sub
pop
add
loop
test
xchg
gs
xor
inc
sub
mov
imul
lods
pop
inc
incl
and
mov
pop
lods
scas
xchg
inc
rcr
cmpsb
insb
bound
and
loope
push
shlb
aas
xchg
sub
or
mov
pop
jb
data16
or
outsl
jo
decl
std
iret
xchg
repz
xor
addr16
hlt
jbe
sbbl
jns
jl
iret
fisubs
mov
sub
mov
jle
or
rcr
cmp
and
test
shl
ja
fdivl
dec
inc
jg
mov
mov
xchg
push
jae
xor
dec
sub
mov
stos
pop
jae
imul
arpl
pop
cmp
mov
push
andl
mov
loope
mov
insl
stos
dec
out
lds
andb
pop
cltd
xchg
pop
hlt
cltd
fimuls
push
incb
and
out
adc
and
cmc
test
adc
sbb
mov
aas
sbb
adcb
mov
cmp
rolb
cmp
pop
outsb
ficompl
pop
fists
adc
fs
ljmpw
repnz
or
std
mov
jmp
scas
cmp
mov
fmull
cmpb
and
inc
or
mov
cmp
mov
std
pop
xorb
pop
ret
mov
mov
sbb
dec
pop
pop
repnz
ds
imul
sbb
cwtl
pop
push
cmpsb
and
or
add
pusha
xchg
dec
cmp
cmc
dec
pop
test
pushl
dec
nop
rcr
out
nop
mov
outsb
xchg
mov
outsb
adc
jge
adc
pop
or
sub
je
pop
addr16
jge
cli
aas
bnd
xor
clc
mov
jmp
gs
or
mov
push
inc
xchg
push
sti
std
data16
push
jp
int
mov
or
adc
out
pop
mov
inc
inc
lods
iret
mov
test
mov
js
aam
xchg
fdivl
cmp
push
xchg
cli
mov
push
test
mov
lahf
jmp
lock
xchg
add
adc
je
sub
add
out
jecxz
insl
pop
push
sub
mov
sbb
adc
pop
fcomps
mov
sub
lahf
test
push
push
mov
add
popf
lret
je
stos
jle
aaa
out
add
out
insl
mov
stc
out
push
test
xchg
mov
arpl
push
cmp
shl
in
push
iret
out
test
cmpsb
mov
fsubrs
lods
push
push
out
push
add
dec
inc
mov
jg
lcall
mov
push
or
fcmovne
lds
bound
pop
mov
jbe
adc
inc
inc
xor
adc
out
or
jno
out
ret
das
dec
je
movsl
push
pop
dec
mov
sub
lahf
cli
xlat
mov
js
sbb
mov
pop
iret
add
enter
ja
repnz
push
sahf
push
dec
jno
dec
enter
adc
ret
iret
clc
stos
pusha
jp
cmp
ficomps
fstps
mov
lret
insb
dec
rclb
cld
push
cmp
inc
rcll
flds
ds
scas
xor
cmp
ret
mov
jnp
sbb
push
orb
mov
jecxz
mov
xor
loope
jp
lcall
and
insb
cmp
imulb
pop
cltd
dec
sbb
rcrl
notb
test
jmp
stc
out
sub
repnz
mov
shrl
je
clc
loopne
leave
mov
decb
and
sbb
push
push
icebp
jb
sub
mov
jecxz
inc
jae
jbe
lea
js
ret
fcompl
fwait
lods
inc
xor
pop
jp
jecxz
push
sub
clc
jmp
in
insl
iret
add
mov
xchg
stc
and
outsl
sub
push
andl
mov
and
bound
sub
insl
lahf
push
mov
inc
sbb
push
ljmp
ljmp
jno
push
test
and
mov
stc
addl
add
popf
test
sahf
xchg
movsl
jne
divb
xchg
pop
fwait
daa
repnz
mov
popf
ds
nop
push
stc
lock
imul
dec
adc
sub
adc
pop
dec
lods
and
push
popa
xor
cmp
sbb
insl
lret
lret
cmp
nop
xchg
sbb
xchg
pop
cmp
js
sbb
ds
push
int3
xor
test
adc
aaa
xchg
fiaddl
lods
mov
pushf
test
fs
push
scas
iret
loopne
jge
fidivrs
rolb
pop
push
fnstenv
mov
add
and
enter
sub
ljmp
popl
inc
stc
adc
nop
lods
test
daa
loopne
inc
repnz
sahf
into
daa
or
mov
fbstp
sbb
inc
cmpsl
jns
pop
in
arpl
cmp
sti
mov
imul
pusha
pop
fsubrl
dec
movzwl
xor
into
sti
inc
sbb
cmp
xor
lods
cmpsl
mov
pop
popf
in
daa
jmp
mov
test
xor
sub
imul
add
jecxz
fistps
repnz
aad
fcmovbe
sub
out
cmp
stos
push
adc
leave
xchg
push
out
sbbl
pop
mov
mov
inc
ds
push
sub
lret
movsb
dec
pusha
je
in
cli
inc
inc
push
xchg
push
shl
cld
inc
icebp
test
shlb
nop
stc
mov
iret
xor
mov
xor
mov
cmp
int
fildl
in
popf
das
imul
pop
mov
lea
outsl
filds
neg
inc
lods
jbe
iret
sarl
scas
rcll
ss
dec
lahf
aad
lea
push
pushf
mov
inc
sti
xchg
pop
pop
lret
dec
stos
repnz
lcall
cmp
into
xlat
fcompl
hlt
and
aam
mov
mov
shll
fistpl
xchg
inc
cmp
ja
les
imul
push
sub
sub
cmpb
sbb
lcall
adc
mov
fidivrl
mov
cltd
leave
out
lcall
test
push
popa
xor
iret
enter
jb
fildl
sbb
mov
fimuls
and
sub
shll
or
cli
mov
int3
insl
xor
pop
sub
sbb
sbb
icebp
js
sub
leave
ds
push
mov
enter
mov
pushf
push
jle
or
add
mov
xchg
pop
lcall
repnz
add
js
push
jg
test
outsl
movsb
mov
xor
out
add
push
or
xor
xchg
adc
es
add
repz
xor
sub
pop
sbb
pop
mov
sbb
mov
movsl
imul
aaa
loope
and
pop
out
xorb
or
nop
mov
fwait
or
push
cmpsb
jl
xor
daa
fstp
mov
fisubl
lahf
mov
pop
fwait
loope
inc
inc
int3
out
lret
mov
inc
inc
bound
test
out
call
aaa
das
mov
cmp
mov
into
inc
cmc
push
imul
mov
jne
cwtl
mov
stos
pop
shlb
test
insl
in
add
leave
mov
mov
cmc
cli
fistl
ret
fists
repz
jecxz
sub
sub
mov
stos
xor
mov
std
ja
dec
cmp
push
jne
cmp
pop
add
int3
cmc
lret
pop
jg
ret
cmpl
imul
push
mov
out
ret
out
sub
sbb
cltd
pop
pushf
jge
inc
ret
cmp
cli
call
cmp
iret
add
lret
cmp
push
mov
add
mov
pop
test
cwtl
fwait
mov
cmp
push
les
fxch
mov
es
mov
or
jge
mov
in
int3
cmp
jnp
sbb
sub
push
jmp
sbb
loopne
stos
movsl
mov
lret
int
mov
xlat
inc
pop
push
bound
mov
psubusb
das
inc
jmp
and
dec
pushf
jne
jle
nop
xchg
test
mov
mov
js
mov
add
inc
xchg
cmpsb
dec
adc
les
push
sarl
iret
mov
pushf
insb
scas
fistps
push
xlat
push
jns
cmp
frstor
movsl
outsl
cli
adc
dec
cwtl
or
js
inc
aam
mov
dec
aad
push
sub
cmp
sbb
std
pop
jbe
xchg
jo
fwait
dec
mov
push
xor
data16
dec
xor
push
arpl
and
or
sahf
add
or
and
lods
lret
aas
js
adc
cmp
sub
mov
testl
mov
or
jne
shr
leave
aas
mov
fcoml
loope
xor
nop
imul
sarb
psubusw
imul
data16
aad
mov
loope
mov
push
push
lods
ret
push
iret
mov
mov
jmp
sbb
test
xor
imul
push
jge
shlb
repz
adc
lock
shlb
dec
out
pop
inc
inc
in
add
je
pusha
decl
dec
lret
inc
ss
pop
add
ret
or
cmc
adc
hlt
push
ret
jno
xchg
xor
push
lret
enter
imul
mov
lock
scas
sub
dec
mov
pop
add
push
fidivs
sbb
cmp
decb
in
and
hlt
pusha
mov
pop
xlat
pop
cmp
test
scas
jns
add
pop
cmp
adc
add
add
jmp
rorb
xor
aaa
ss
push
xlat
push
jne
xchg
clc
cmp
pop
mov
jne
sbb
mov
stos
push
ret
gs
cwtl
mov
movsb
inc
pop
fldt
add
in
inc
add
and
int3
out
xor
insb
aam
pop
add
inc
imulb
popf
loopne
inc
pop
in
ret
inc
lods
inc
popa
inc
mov
repz
stc
pop
mov
cmp
insb
mov
ret
addr16
ds
incb
sbb
ret
or
add
cmp
lods
mov
jl
iret
lea
int
sub
bound
aas
push
test
aas
in
mov
popa
add
bound
pop
nop
jmp
push
adc
iret
andb
sbb
push
mov
lock
or
xchg
outsb
jp
test
into
ljmp
pop
fdivs
pmulhw
jb
movsb
xor
mov
loope
das
and
mov
arpl
cmp
sbb
sbb
call
pusha
mov
mov
push
les
sub
push
push
fcoml
pop
das
pusha
sub
sub
aad
ja
pop
hlt
faddp
xchg
xchg
add
and
mov
jne
cmpsb
shl
push
shrb
cld
repz
lahf
or
cmpsb
pop
mov
aaa
cmp
pop
flds
jb
loop
fnstenv
inc
rorb
lock
popw
js
fists
call
mov
scas
stos
adc
jmp
inc
icebp
ds
xor
and
jnp
add
xchg
mov
or
jle
push
adc
dec
rcll
mov
shlb
stc
scas
shrl
ds
lret
lea
fildll
cli
sub
jge
bound
pop
jnp,pn
push
mov
out
add
mov
fidivl
cmp
pop
push
add
xor
mov
add
push
into
ss
or
inc
addl
jno
or
inc
ja
inc
adc
test
cs
loop
cmp
test
pop
cmpb
jle
mov
in
mov
add
das
gs
cmc
sub
jne
add
in
sub
js
faddp
mov
pop
or
movsl
addr16
push
sub
dec
mov
push
icebp
test
mov
pop
pop
push
ja
jecxz
xchg
jmp
jo
out
ljmp
ljmp
mov
inc
orl
and
arpl
mov
and
punpckhdq
hlt
push
or
test
adc
nop
cwtl
pop
dec
jbe
testl
stc
call
ss
pop
xchg
adc
or
movsl
mov
mov
push
insl
add
scas
sub
out
adc
mov
lods
lods
in
push
clc
adc
mov
adc
cwtl
xchg
pop
inc
xchg
sti
lahf
lods
xchg
or
adc
xor
cmp
ret
push
inc
sub
insl
outsb
sbbb
lahf
loopne
mov
adc
stos
mov
push
aam
and
and
pop
jne
in
jp
jno
fsts
jp
add
addr16
or
mov
mov
leave
push
fidivl
arpl
scas
jmp
push
mov
jge
lea
ja
inc
icebp
xlat
or
jne
test
outsb
repnz
stos
testb
sub
ds
stc
jmp
xchg
mov
lds
cmp
xor
jmp
into
mov
std
jmp
shrl
aaa
inc
imul
xlat
xchg
xchg
fmulp
fdecstp
cmp
insl
adc
jl
aaa
ds
in
pop
or
iret
sahf
sbbb
jnp
adc
mov
fistpl
mov
jae
inc
dec
xchg
jns
sub
push
xor
stos
lock
and
movsb
and
jl
xchg
or
dec
jbe
or
mov
jmp
xchg
subl
adcl
call
pop
and
and
and
xor
jle
push
lret
pop
call
pop
adc
fcomps
pop
dec
mov
test
pop
mov
jmp
and
das
aam
sbb
mov
mov
jmp
pop
movsl
popf
shrl
mov
jo
add
mov
jecxz
iret
fdivl
or
inc
imul
adc
mov
push
cmpsl
in
sub
xchg
loope
dec
fisubl
pop
and
inc
sub
aam
inc
and
imul
loopne
push
mov
pushf
xor
cmp
mov
imul
jmp
add
push
jns
push
cmp
mov
popf
lahf
in
dec
fsubl
mov
stos
xor
sahf
pop
sub
inc
adc
push
pop
push
hlt
mov
jecxz
push
les
pop
lods
enter
and
cmp
aas
lahf
cmp
adc
adc
ja
pop
out
lods
push
fwait
sub
leave
inc
xrelease
jmp
sub
jge
rcl
das
dec
into
mov
mov
pop
add
sbb
repz
ret
or
mov
mov
add
mov
es
outsl
outsb
jecxz
mov
jnp
jb
add
mov
into
into
nop
dec
xchg
add
xchg
rclb
fdivr
add
subb
mov
push
call
push
xor
cwtl
add
sbb
pushf
push
and
add
sub
les
xor
pop
cwtl
cmpsl
adc
add
pop
push
dec
orb
jnp
pop
fcompl
ljmp
shll
testb
dec
mov
in
pop
jg
test
lds
add
or
pop
sub
sbb
mov
jne
push
shl
pop
xor
mov
push
addb
clc
sbb
cmp
jmp
aaa
std
xchg
loopne
in
hlt
cmp
std
xchg
ljmp
sbb
xchg
sub
out
ljmp
push
push
idivl
cwtl
loop
sub
push
cs
xchg
xlat
xchg
sub
jmp
jmp
sbb
cmp
push
xchg
mov
pusha
out
sub
push
stc
stos
xorb
movsb
arpl
sbb
pop
mov
mov
fst
jae,pt
ljmp
cmp
mov
jnp
pop
outsb
stc
aaa
out
add
or
xchg
mov
mov
icebp
sub
mov
pop
xorl
mov
xlat
cld
or
xchg
push
hlt
in
scas
fdivs
shll
xchg
sbb
cmc
or
pop
or
lock
lahf
xchg
xchg
imull
mov
adc
icebp
inc
mov
call
test
les
repz
lcall
dec
jmp
cmpsl
adc
mov
jg
out
stos
add
adc
dec
data16
mov
mov
dec
pop
incb
cmpsl
sbb
ja
mov
fwait
ljmp
repnz
xchg
jp
scas
les
rcl
loop
sti
pushf
or
sub
cmpsb
sub
xor
mov
xor
mov
jg
jge
leave
in
mov
aam
pop
mov
or
mov
adc
or
push
sub
xchg
xlat
out
cmp
aaa
xchg
add
aad
and
imul
cmpsb
sarl
mov
mov
mov
sub
jbe
mov
xor
cmpsl
adc
jl
jns
xor
push
mov
mov
loop
mov
jns
pop
pusha
iret
and
cld
xlat
mov
pop
adc
jnp
push
jl
mov
mov
roll
in
ss
int3
xchg
or
jg
shrb
lds
xchg
rolb
and
cmp
inc
ja
je
test
repz
xor
inc
jns
es
and
fisubs
test
iret
pop
stc
push
mov
lahf
test
ss
cmc
insl
sub
xchg
sub
sub
imul
roll
fistl
push
sub
mov
and
addr16
jb
std
lea
aam
lock
adc
ret
daa
ljmp
aam
test
jnp
mov
jnp
push
push
push
out
lcall
jno
cltd
mov
js
inc
lcall
cmp
sub
aad
cmp
sub
stc
lcall
lds
add
mov
cmp
mov
push
jnp
sbb
hlt
mov
push
popa
xchg
mov
stc
and
push
sub
push
jle
mov
cmp
sub
test
fwait
mov
mov
cmp
aaa
dec
pop
cmp
lds
adc
jnp
adc
xchg
lahf
ret
leave
mov
lsl
fnstcw
jae
jno
idivl
mov
adc
xchg
mov
pop
xchg
aaa
xchg
push
cmc
lret
pop
sub
adc
lock
adc
in
andb
cld
dec
scas
xor
sub
daa
notb
icebp
jmp
pop
inc
xchg
cmp
bound
xchg
dec
push
test
sbb
add
nop
jecxz
inc
lock
adc
int
cmpsl
dec
loop
ja
rcr
mov
xchg
mov
cmc
sub
dec
mov
fdivrs
sarl
shl
or
xchg
ss
fwait
mov
movsl
push
or
xorl
or
dec
pop
repz
and
inc
jae
out
movl
pop
cli
jmp
push
in
jb
push
push
sub
cwtl
shll
das
sub
sbbl
lret
push
cs
jle
and
pop
push
fiaddl
jecxz
dec
ficomps
fdivs
push
mov
cmp
stos
xor
cwtl
xor
dec
pop
jl
cli
add
mov
loop
jns
out
mov
nop
xor
push
les
and
jecxz
pop
aad
push
inc
clc
lcall
xchg
pop
mov
inc
sahf
or
push
lcall
lret
xchg
lret
mov
mov
addl
lods
mov
imul
or
add
pop
stos
push
rorl
push
shrl
dec
mov
jnp
jno
xchg
sbb
add
push
or
or
lret
dec
mov
mov
push
lea
sahf
fstpl
mov
daa
and
cmp
into
addr16
test
pushf
mov
mov
pop
add
cmc
push
mov
add
mov
add
xlat
cli
shrb
call
in
test
into
push
cmp
xlat
sbb
mov
fldl
mov
les
push
or
clc
in
push
xchg
jno
pop
mov
lret
ss
lods
sub
insl
ds
ja
lods
icebp
repnz
mov
pop
ud1
ret
hlt
sub
icebp
push
pop
ret
cs
fcomps
pop
push
gs
sub
cmp
arpl
je
insb
subb
inc
dec
outsb
sbb
jno
sti
pop
push
xchg
push
or
mov
adc
add
call
push
or
adc
mov
jo
stc
outsb
inc
es
addr16
test
das
ficompl
dec
push
iret
mov
in
lahf
enter
mov
xchg
add
cmpsl
sbb
mov
lods
repnz
xchg
jnp
cld
rorl
cs
add
mov
inc
adc
fidivrs
outsl
in
das
pop
add
aaa
call
jmp
xor
jne
es
push
clc
into
scas
ret
pop
pop
push
cmp
bound
mov
jnp
adc
jl
in
push
dec
dec
push
subl
cmpsb
sahf
dec
inc
pusha
orl
addr16
dec
pop
mov
mov
sbb
lret
mov
jle
sarb
fsub
test
lea
push
sarl
mov
cltd
jmp
add
in
cmp
xor
repz
sahf
xor
mov
xchg
and
inc
sbb
cmp
fdivrl
add
out
hlt
test
and
inc
add
or
adc
sbb
and
sub
movd
loope
or
xor
jbe
sub
in
mov
xor
jns
loope
adcb
jo
push
ds
test
or
shll
pop
pop
jecxz
roll
jl
add
aad
or
cs
gs
stos
shr
dec
push
push
insb
adcl
movsl
int3
and
jns
inc
xchg
jmp
hlt
movsl
js
in
mov
ficoms
push
cmp
or
cwtl
or
in
ret
sahf
add
mov
in
or
sub
rolb
mov
mov
jae
cltd
mov
jge
sub
lea
sbb
or
jbe
cmp
and
lods
out
int3
push
je
jb
mov
add
mov
addl
add
or
mov
jnp
push
shlb
leave
jle
outsl
mov
movsl
xchg
dec
fwait
int
dec
mov
push
mov
mov
sarb
movsb
idiv
xchg
xchg
sub
jmp
jnp
pop
push
push
mov
push
rclb
cmp
call
or
cli
xchg
jmp
sub
enter
dec
mov
jmp
mov
rcl
fisubs
data16
dec
push
cmp
dec
mov
imul
mov
sbb
lret
test
sbb
fisubrs
clc
jne
ljmp
mov
mov
and
push
pop
xor
push
das
pop
xchg
adc
xor
jg
cmp
push
add
les
lods
jg
mov
sub
call
xor
lock
imul
jp
pop
and
popl
mov
ljmp
popf
xor
cmp
add
xchg
push
xchg
fbstp
sahf
and
dec
xchg
fldt
or
xchg
mov
out
xor
or
mov
addr16
pusha
push
mov
jne
fsubrl
add
or
fs
imul
fistl
pop
sbb
sbb
gs
mov
imul
mov
loopne
and
push
push
jbe
adc
pop
stos
dec
outsb
and
inc
pop
dec
mov
add
aam
mov
mov
jle
mov
arpl
push
cmp
cmc
jae
sub
shlb
imul
jae
inc
scas
rclb
out
mov
bound
push
inc
mov
mov
adc
xlat
sahf
push
and
fistl
pop
or
push
lea
jg
mov
cmp
push
aaa
jne
ja
xor
xorb
sbb
xor
push
mov
xchg
add
es
dec
mov
lret
inc
mov
mov
js
cmp
mov
or
dec
inc
xchg
xor
push
add
xchg
in
dec
mov
mov
jbe
push
or
out
pop
arpl
push
xlat
sbb
fst
xlat
xor
mov
push
dec
xorl
and
out
das
cli
xor
cmpsl
xchg
lock
or
xchg
sbb
jns
fidivrs
ja
or
mov
inc
sbb
sub
lahf
pop
idivl
mov
fbstp
adc
pop
sub
fisttpl
aas
leave
stos
rcrl
les
clc
mov
sbb
decb
pop
pop
mov
jecxz
and
out
jecxz
rol
pushf
mov
sbb
sbb
lahf
arpl
lcall
mov
jnp
ficoms
pop
dec
pusha
dec
sub
addr16
lods
pusha
stos
xchg
inc
in
imul
xor
dec
push
push
leave
cmp
adc
xor
jae
popf
fstps
jae
xorl
mov
lahf
jg
xor
mov
sbb
mov
jg
push
lock
test
aas
lret
xchg
stos
inc
push
xchg
incb
jne
sub
sub
jmp
push
mov
call
jmp
mov
mov
pushl
xchg
ficomps
xchg
sbb
mov
dec
aas
mov
adc
dec
pushf
mov
in
add
gs
aas
std
mov
jnp
push
adc
jae
mov
push
test
ljmp
xchg
fwait
std
shlb
dec
mov
xchg
sahf
arpl
pop
adc
push
and
movsl
cmp
cltd
mov
fidivrs
aas
add
xchg
mov
loopne
xchg
shld
sub
pop
dec
arpl
xor
jo
aaa
ds
cld
shlb
enter
stos
cwtl
stos
or
sbb
ss
ja
int3
or
push
dec
in
xor
xchg
cmp
jge
sbb
cmc
mov
pop
lret
lcall
out
outsl
shl
mov
lret
je
data16
or
or
mov
mov
loope
je
fimuls
adc
or
pop
dec
or
mov
sub
ret
and
jg
xlat
ret
mov
loope
cltd
movsl
jmp
or
aas
sbb
mov
and
clc
mov
mov
mov
add
fimull
test
mov
cmp
cmp
jne
mov
ljmp
push
cltd
out
test
and
in
inc
inc
cmp
rcr
inc
ret
adc
jmp
mulb
rep
push
scas
out
jns
pop
inc
xchg
jl
nop
sbb
mov
cmc
xchg
repnz
cli
cmpsl
imul
lods
insb
in
mov
imul
inc
insl
shrl
jne
mov
mov
push
sbb
cmp
lret
addb
mov
lock
push
mov
lds
mov
int
mov
mov
push
mov
adc
out
mov
test
subb
int3
mov
pop
sub
mov
sub
push
std
int3
inc
test
imul
std
daa
dec
nop
pop
mov
shr
fisubl
jae
dec
fisttpll
jle
dec
xor
add
insb
cltd
addr16
xchg
out
mov
push
sbb
fxtract
outsb
in
sbbl
sub
ljmp
addb
pop
cs
out
fdivrs
push
push
sbb
cmp
inc
inc
ja
jge
scas
mov
cmp
jne
jo
sub
adc
std
shlb
pop
lds
ret
das
out
test
dec
stos
xor
fisubrs
jl
sbb
xchg
fstps
sub
dec
outsw
xor
loopne
or
mov
rcrb
inc
mov
mov
in
mov
iret
push
sbb
mov
xlat
andl
xor
fs
xchg
scas
or
xchg
add
adc
ljmp
lret
leave
xor
outsb
push
mov
inc
test
gs
mov
divb
inc
fidivl
mov
clc
xchg
dec
lret
mov
nop
jno
mov
inc
sub
push
push
jne
sub
shrl
dec
ds
sbb
orl
aas
cmp
sbb
out
fwait
popa
arpl
jge
cli
les
stc
insb
dec
sbb
pusha
xchg
sbb
lahf
fnstenv
and
push
mov
mov
pop
jmp
lds
inc
scas
es
sub
aas
pop
loop
mov
dec
adc
lret
addl
movsb
aaa
pop
test
xchg
mov
fists
xorb
push
xchg
and
sbb
jge
ljmp
mov
xor
cmp
in
add
les
scas
subb
int3
inc
mov
xchg
std
stc
sbb
mov
pushf
inc
add
add
cmp
in
inc
std
xchg
push
push
insl
sti
int
stos
mov
aas
adc
test
xchg
mov
scas
std
test
loope
sub
pop
push
cmc
aam
lcall
mov
xchg
pop
xorl
jle
pop
add
mov
popa
jg
insl
addr16
adc
cwtl
push
or
cld
aas
lahf
scas
or
add
test
fldl
dec
xor
and
adc
sbb
mov
sbb
adc
mov
popa
out
mov
lods
mov
or
subb
scas
cmp
leave
or
push
fcmovb
pop
mov
lret
int3
add
adc
iret
xchg
in
rolb
inc
hlt
outsl
sub
gs
add
pop
lods
mov
add
je
imul
scas
pusha
rclb
adc
je
xor
mov
int3
jle
mov
jns
inc
aas
lret
mov
mov
dec
mov
cmp
pop
nop
addb
ret
insl
push
cmpl
mov
stc
xor
mov
dec
xchg
aas
in
push
fs
mov
out
shll
loope
lea
xchg
test
push
hlt
out
stos
jo
mov
mov
xchg
fcoms
sti
sbb
cmp
roll
adc
data16
fucomi
ljmp
dec
enter
cmpsb
mov
mov
into
inc
aad
ret
test
lods
lods
xor
mov
adc
lods
and
repz
call
and
imul
rcr
addb
push
fstpt
js
push
and
or
xchg
xlat
mov
inc
loope
idiv
ss
and
sub
xchg
sbb
leave
mov
adc
popa
pop
je
mov
xchg
add
lcall
or
cld
ss
movsl
andl
scas
loopne
inc
sbb
out
fwait
repz
out
dec
mov
stos
mov
loopne
mov
std
adcb
jl
mov
xchg
sub
mov
push
aam
pop
xlat
imul
xchg
jbe
push
scas
pusha
repz
aad
cmp
pop
push
stos
lea
dec
xchg
out
in
mov
enter
mov
je
inc
pop
pop
test
push
cld
mov
fcoml
inc
mov
sub
lods
iret
sar
push
jge
les
bnd
rclb
test
cltd
adc
xchg
lret
fistl
popa
sbbl
sbb
loope
movsb
pop
dec
sbb
hlt
mov
clc
push
out
jmp
cmpb
sahf
mov
test
ljmp
addr16
push
ret
xlat
mov
mov
sub
and
movsl
add
hlt
pop
push
push
push
push
jg
ret
arpl
das
stos
mov
test
stc
jle
fucomp
stos
lods
testl
jl
js
sub
cmp
ret
jno
dec
lods
and
loope
mov
shlb
xchg
dec
sub
xchg
mov
shll
fdivl
outsb
pop
ret
lock
daa
repnz
add
movsl
rcrb
sahf
mov
inc
add
out
cmp
pop
in
js
int3
mov
jmp
inc
pop
ss
das
rclb
in
test
ljmp
xor
sub
mov
mov
jno
mov
jge
inc
cmp
push
adc
dec
iret
jns
stos
repz
outsb
js
pop
dec
cltd
mov
std
ficoml
push
push
fs
xor
sbbl
jae
in
fisttpl
addr16
arpl
push
and
hlt
push
ss
mov
and
mov
fisttpll
divl
out
leave
inc
jae
jmp
aam
aad
pop
jl
notl
jnp
out
mov
ds
xor
out
out
inc
add
lret
mov
xor
pushf
push
add
lods
mov
mov
xchg
push
jle,pt
into
int
ljmp
pop
or
aad
sbb
add
imull
jbe
inc
cld
test
out
push
fistps
push
shlb
sti
add
rclb
fcompl
fadds
jae
jno
jbe
jns
mov
xor
rol
repnz
ror
dec
add
and
clc
sbb
out
mov
cmpsb
cwtl
add
xchg
sti
lods
add
movsl
out
out
adc
inc
inc
mov
mov
xchg
dec
scas
data16
cmp
js
dec
jge
outsl
sarl
cmp
loopne
xchg
ja
mov
inc
pop
xchg
fsubrl
pop
push
mov
enter
out
lods
pusha
les
and
inc
data16
lods
push
sarb
and
popa
filds
fsubrl
aaa
insl
push
inc
mov
dec
test
inc
push
sbb
jae
sbb
scas
cmp
adc
addr16
push
add
loop
xlat
icebp
enter
loopne
and
pop
ret
adc
add
jbe
mov
pop
mov
xchg
outsl
nop
push
cmp
outsl
or
push
pop
mov
shr
adc
lahf
adcl
mov
cmp
xor
push
lret
push
and
mov
pop
dec
pop
mov
into
lods
dec
cs
sub
sub
fbstp
cmpsb
xchg
outsb
sbb
jge
ss
xor
sbb
popf
lret
out
cmpb
push
jo
mov
adc
ljmp
xchg
ret
dec
mov
stc
pop
xchg
repz
sub
xchg
push
hlt
loope
aaa
std
pop
ds
into
scas
jg
imul
add
or
mov
dec
enter
imul
dec
xchg
in
leave
aad
or
sbb
inc
mov
sbb
mov
pop
xorl
dec
int3
test
sub
mov
inc
aas
fisttpl
aam
das
and
adc
out
xchg
push
mov
pop
xor
cmp
push
ror
test
cmpl
add
rcll
lods
cmp
fsubl
dec
push
cmp
push
jecxz
lcall
fldl
loope
cmp
add
jg
push
cmp
jb
int
ror
pusha
xchg
xchg
ds
stc
push
int3
or
ja
mov
push
sub
mov
lret
mov
outsl
and
imul
outsb
and
aad
and
pop
mov
inc
popf
push
faddp
cmp
mov
mov
inc
fisttpll
xorl
xchg
push
push
dec
insb
pushf
mov
inc
ss
jge
pusha
jge
dec
shl
data16
or
mov
and
xchg
imul
aaa
test
daa
sbb
aaa
ret
mov
push
insl
mov
jecxz
cmp
mov
imul
or
out
mov
mov
cmp
mov
cltd
idivl
sub
dec
cmp
in
cmp
lea
js
ret
xchg
sbb
roll
clc
dec
sub
xlat
call
jle
push
cltd
sahf
lcall
and
loop
cs
stc
pop
int
mov
frstor
pushf
adc
sub
pop
mov
aaa
arpl
outsb
fscale
push
and
mov
imul
popf
push
aad
sbb
inc
fwait
adc
int3
push
cli
dec
leave
insb
sub
cmc
inc
xor
mov
fcomps
ret
mov
jb
int3
jg
js
andb
leave
aam
cmpsb
std
les
jbe
mov
mov
jne
scas
in
and
cmpsl
push
push
mov
jle
fisttps
mov
and
sbb
pop
adc
add
adc
sahf
clc
into
inc
inc
xor
or
loop
fmuls
push
imul
xor
stos
ss
cmc
and
or
call
sbb
xor
loopne
pusha
jle
xor
inc
lret
int
or
xor
stc
lods
std
adc
push
mov
subb
sbb
pop
push
stc
aas
orb
xchg
push
call
repz
rep
out
xchg
mov
movsb
mov
fnstsw
push
lea
xor
neg
sarl
pop
lods
cld
and
cmpsl
std
add
cld
mov
and
pop
dec
pop
mov
mov
pushf
lcall
lret
call
sub
jne
cmp
or
sub
pop
cld
push
out
lcall
pop
xor
fcoml
loope
test
fs
dec
je
mov
dec
leave
sub
xchg
dec
xor
jle
fucomip
dec
or
cli
fdivr
mov
jl
rorl
push
mov
mov
or
push
push
movsl
lret
jmp
setle
insb
scas
mov
or
mov
cltd
cmp
hlt
pusha
jnp
les
jno
add
jp
xchg
lods
inc
scas
gs
sbb
and
std
lds
pop
int3
jmp
idiv
adc
lret
cmp
jb
and
xchg
xchg
adc
neg
sub
or
enter
mov
lds
ljmp
mov
in
sbb
sti
and
dec
mov
pop
outsb
fisubrs
aaa
lock
xlat
jbe
hlt
mov
jae
mul
out
jl
mov
sar
into
in
mov
ljmp
pop
push
insl
ljmp
jo
outsb
gs
out
aad
pop
lods
ret
inc
xchg
out
add
sbb
pop
cmp
inc
sbb
icebp
addr16
insb
jp
aas
cmpsb
lcall
cltd
and
sub
pop
je
inc
dec
jbe
jg
aas
ret
bnd
mov
mov
stc
enter
lcall
orb
arpl
pop
pop
or
pusha
pop
out
jecxz
les
push
xor
popf
mov
xchg
into
and
xor
je
cmp
and
xlat
pop
test
or
rcrb
fisttps
inc
mov
ljmp
cmpsl
adc
stos
mov
sub
mov
inc
aam
sbb
sub
mov
lods
mov
addb
ss
ret
test
push
pop
repz
lret
mov
push
mov
mov
fdivrl
sbb
and
call
inc
push
xor
inc
xchg
je
aas
mov
lea
fbstp
int3
cmpsl
adc
xchg
jle
push
and
push
inc
flds
inc
cmpsb
in
push
and
aas
jge
cmc
fsubrp
popf
aas
lret
pop
push
filds
fs
inc
fsub
push
aam
push
pusha
jae
out
xchg
mov
daa
test
push
into
ret
dec
out
adc
cmp
sti
inc
repnz
pop
adc
push
aas
dec
pop
fsubrp
sbbl
dec
in
sbb
push
xchg
popf
jmp
bound
shlb
mov
loopne
inc
shll
rol
xor
pop
sub
and
subl
test
cmp
inc
ss
dec
pop
dec
mov
add
jle
push
xchg
aaa
xchg
mov
inc
inc
pop
jg
js
aaa
fstps
dec
or
rcll
jg
stos
xlat
dec
nop
xor
cmpsl
cs
jl
fwait
not
cmc
push
lods
sub
call
jecxz
xchg
cld
xorb
inc
mov
daa
sub
scas
lock
lahf
negb
push
test
mov
je
mov
or
fistps
add
into
aad
inc
out
sbb
in
sbb
mov
testb
xor
mov
mov
cmp
sub
sbb
and
or
inc
push
mov
xor
fnstsw
fwait
mov
les
mov
push
stos
mov
mov
mov
into
scas
cmp
dec
mov
cmp
stos
loop
adc
fisttps
xor
lods
pusha
out
mov
cmp
inc
cmp
popa
pop
rolb
sbb
cli
test
sahf
daa
add
in
mov
push
or
js
jecxz
mov
pop
adc
cmc
adc
mov
stc
add
pop
ret
adc
xchg
inc
xor
aas
in
mov
dec
ror
xchg
loop
insl
adc
idivb
inc
syscall
jo
xor
push
add
mov
stc
aad
and
out
mov
sub
inc
js
adc
inc
and
jne
fmul
cld
hlt
test
adc
std
test
in
out
aas
and
test
lock
or
mov
loopne
clc
xchg
xchg
aas
fistps
or
jae
fcompl
ret
xchg
mov
movsb
inc
mov
loop
lods
mov
cmp
push
cmp
dec
and
rcrb
mov
addl
stc
add
subl
sub
mov
pushw
push
iret
andl
shl
adc
ret
and
mov
clc
aam
mov
sbb
rcll
ret
test
dec
ljmp
dec
jle
pop
xor
or
and
and
add
jns
iret
cs
les
sar
xchg
adc
test
inc
jnp
std
mov
xor
xchg
lcall
sub
add
out
add
inc
std
gs
loopne
aaa
hlt
imul
lods
hlt
adc
add
mov
jb
add
inc
filds
out
loope
je
dec
aad
or
mov
xchg
xchg
mov
lds
mov
xor
arpl
fists
insb
jp
mov
sub
lret
or
push
xchg
lcall
dec
rcrl
xor
mov
movsl
jp
movsb
cmp
arpl
mul
loopne
xchg
sub
sub
scas
adc
or
lock
or
nop
aaa
jecxz
in
inc
sbb
loope
cmp
rorl
in
pop
mov
stc
gs
and
xor
xor
out
jb
adc
push
xchg
lcall
add
mov
into
dec
out
mov
jmp
into
mov
add
add
push
mov
sub
adc
popl
mov
sbb
test
add
xor
adc
cmpl
imul
clc
push
sahf
adc
push
rolb
dec
add
aam
scas
pop
adc
imul
cmc
imul
daa
sub
aaa
repnz
xchg
out
ds
insl
fisubrs
mov
xor
int3
stos
jbe
sbb
popa
dec
jmp
add
inc
stc
cmp
aam
and
cmp
cmp
xchg
sbb
lcall
push
jl
push
push
push
and
out
nop
inc
addr16
jmp
add
sbb
addr16
and
push
shr
xchg
dec
mov
sub
xchg
xchg
daa
std
dec
inc
mov
andl
iret
sbb
lods
scas
cltd
pop
inc
arpl
andb
lock
inc
push
pop
mov
fidivrs
add
outsb
sbb
and
lret
jae
js
xlat
pop
dec
rcrl
mov
mov
inc
loop
sub
stc
ljmp
mov
push
cmp
icebp
jmp
mov
aas
in
push
and
jg
lds
notl
sub
pusha
outsl
fisubrl
arpl
gs
and
rolb
or
fadd
push
popa
inc
rclb
call
jo
ja
popf
nop
das
nop
ret
movsl
dec
out
push
cltd
xchg
bound
mov
cmpsb
xor
push
arpl
sbb
sub
and
jmp
mov
ss
scas
xlat
sub
xor
pop
mov
add
idivb
leave
into
in
xchg
mov
scas
dec
jbe
out
jnp
leave
or
dec
or
nop
mov
jmp
add
mov
xchg
jp
adc
inc
pushf
rclb
push
or
mov
mov
jmp
lock
idivl
stos
inc
jbe
imul
imul
sub
jp
into
clc
xlat
mov
imul
cmp
push
inc
sbb
outsb
mov
movsb
mov
in
fwait
data16
adc
sbb
daa
pusha
pushf
aam
jmp
push
add
mov
xor
jl
mov
sub
cmp
mov
push
cmp
adc
les
push
sub
test
xchg
or
adc
dec
adcb
outsl
add
jp
adc
in
clc
dec
jno
add
loope
lds
pop
jecxz
outsl
jne
dec
push
hlt
mov
push
mov
test
rclb
fs
xchg
lahf
xchg
in
cltd
fsub
icebp
push
ret
je
jg
addr16
sub
in
and
or
mov
jb
clc
lahf
dec
dec
fwait
aam
lret
mov
dec
xchg
mov
fstps
jb
iret
xor
imul
faddp
js
push
call
adc
daa
fadds
loopne
or
sub
xor
mov
push
lcall
add
sarb
jnp
stos
mov
xor
aam
cmp
and
aad
adc
jp
pop
scas
pop
mov
or
arpl
and
or
pop
out
and
fadd
adc
dec
insl
adc
dec
mov
leave
inc
fwait
jecxz
add
loopne
jnp
call
enter
or
lcall
cmp
std
ljmp
out
hlt
daa
icebp
pushf
or
mov
daa
out
call
iret
fs
shr
sbb
xor
pushf
add
xchg
mov
adc
mov
xor
shll
cmp
mov
in
sbb
inc
in
dec
fdivrl
mov
mov
sbb
adc
mov
cld
push
mov
jbe
inc
lock
pop
rorb
sbb
xchg
push
mov
sar
xor
movsl
lretw
adc
and
xor
add
and
lods
pop
and
inc
addr16
dec
insb
add
movsb
cld
hlt
push
sbb
fs
scas
rcrb
movsl
sbb
jne
fistpll
in
repnz
push
ret
lret
aad
sahf
dec
cmpsb
adc
das
mov
fwait
outsl
push
nop
jns
sbb
popf
sbb
push
adc
xchg
jo
inc
lea
hlt
mov
aas
mov
mov
clc
test
xchg
pop
dec
fs
add
cmpsl
mov
sub
xchg
les
mov
mov
lret
in
pop
mov
popf
sub
fsubs
stos
add
mov
ret
adc
xchg
push
xor
push
arpl
mov
cmp
les
dec
cli
push
orb
int
aas
lcall
mov
mov
aam
xor
mov
inc
cmpl
or
push
inc
xor
and
mov
aad
adc
aam
mov
jmp
or
faddl
movsl
addr16
aad
mov
adc
shrb
and
push
xor
adc
cli
je
mov
mov
push
adc
lds
cli
fcom
sub
pushf
sub
fs
cmpsl
icebp
and
call
testl
sbb
mov
mov
cmpsl
jg
pushf
xor
mov
xchg
fmull
jne
insb
mov
cs
mov
jl
rcll
lods
mov
test
dec
iret
push
je
pop
inc
jle
icebp
iret
inc
out
lret
adcl
jns
cwtl
xchg
pushf
dec
jbe
adc
cmp
pop
add
mov
and
ds
xchg
sub
orb
loop
pushf
cmc
sub
in
jmp
call
mov
adc
test
mov
bound
xchg
pop
inc
jmp
addb
jp
movb
daa
mov
cltd
insb
shll
imul
iret
orl
adc
inc
cmp
xor
xchg
push
hlt
lods
mov
pushf
lar
ljmp
outsl
insl
inc
cmpb
add
out
sub
inc
mov
and
sbb
popa
jle
inc
mov
mov
jl
fs
cmpsl
xchg
adc
iret
xor
pop
outsl
jmp
es
sbb
arpl
sbb
sbb
stc
cmp
scas
inc
mov
dec
dec
sbb
cmpsb
adc
out
xor
insb
jl
mov
lods
sbb
popf
sahf
and
fnsave
push
pop
insb
inc
jp
jl
sub
enter
adcl
push
push
add
and
addr16
sub
cmp
or
add
inc
ljmp
push
pop
movsl
xor
subb
repnz
mov
pop
cmc
mov
jbe
stos
lret
mov
ret
es
aad
outsl
dec
fs
out
lcall
scas
aaa
jno
out
loope
mov
mov
and
dec
cmp
inc
sub
xchg
lods
mov
jb
and
leave
sarl
popa
negb
movsl
dec
lea
dec
cmp
jle
imul
in
fdiv
sbb
mov
je
adc
fadds
aam
push
jbe
dec
inc
jge
xorb
pop
sbb
pop
cmp
pop
mov
mov
clc
vmovss
fistl
scas
jns
loopne
xor
les
cmp
mov
ss
push
push
sbb
sub
test
cmpsb
cmpsb
xchg
sti
sbb
cmp
scas
setne
push
fdivr
stc
or
jbe
std
dec
lret
jmp
in
sbb
pop
dec
test
xor
lock
jno
rcll
out
adc
push
cwtl
arpl
rorl
push
shll
pop
lahf
and
mov
dec
sub
and
test
sub
insb
xor
pop
out
dec
int3
sub
aam
bound
out
and
out
faddp
dec
rclb
div
sub
repz
cmpsb
mov
xchg
not
fisttpl
out
cmc
in
push
fdiv
es
sub
pop
xorl
cmc
mov
xor
aad
push
cmp
pop
and
nop
xor
push
stos
sbb
sbb
adc
pusha
mov
lods
rolb
dec
jle
jmp
pop
mov
push
push
arpl
fyl2xp1
jbe
scas
jp
gs
adc
pop
loope
int
std
pop
push
testl
in
add
fs
adc
stc
mov
pop
mov
lock
xchg
inc
std
and
aas
xchg
inc
movsl
fsubr
sbb
imulb
inc
pusha
adc
mov
decb
adc
cli
dec
out
mov
fs
xor
jge
xlat
ret
xor
mov
ficompl
data16
jle
dec
movl
and
shll
mov
mov
inc
push
lods
clc
jmp
inc
stos
push
dec
or
or
arpl
jns
stc
lods
fsub
adc
lea
dec
repz
add
and
mov
sbb
cmp
dec
xlat
sub
enter
mov
pop
pop
push
sbb
inc
sbb
imul
scas
xor
adc
sbb
push
push
fldl
xor
cwtl
pop
aas
adc
orl
jle
pusha
xchg
mov
lahf
bound
jg
js
add
or
cmp
or
je
xor
mov
ret
fdivrl
xor
adcb
inc
lea
dec
push
testb
pop
cmpl
call
sbb
mov
test
jmp
pop
leave
mov
dec
jns
inc
sub
gs
push
adc
notl
aam
pop
cmpsl
pop
fimuls
mov
mov
stos
sarl
mov
aad
int
mov
xchg
imul
cmp
mov
sbb
repnz
inc
xchg
cli
pop
lcall
fadd
das
xor
nop
pop
xor
mov
sub
call
cld
dec
gs
js
add
xor
out
pop
jp
push
shr
hlt
dec
sbb
mov
mov
jp
cmpsl
cltd
push
xchg
inc
imul
out
inc
cmp
push
mov
das
js
push
fimull
mov
add
jecxz
div
lea
rcll
les
jp
cmp
add
sub
and
popf
test
bound
out
test
shr
adc
sbb
pop
adc
scas
test
sbb
and
jb
ds
lahf
mov
sub
sub
add
stos
cmp
sbb
inc
rcll
fadds
lret
xchg
std
ds
out
xchg
jb
call
test
icebp
cwtl
cwtl
imul
cld
or
adc
xchg
push
jae
mov
cmpsl
sbb
loopne
xor
mov
aaa
ja
fstpl
mov
xlat
cld
jle
push
pop
and
test
or
dec
inc
loope
mov
mov
jecxz
scas
lcall
pop
addl
sbb
cmpsl
mov
jae
and
popa
sbb
or
xchg
pop
int3
and
sub
cmpsl
ret
lea
mov
dec
shl
xlat
and
push
cmc
cmp
pop
pusha
or
imul
scas
and
test
mov
mov
out
xor
xchg
andl
add
add
ljmp
fdiv
mov
js
xchg
addr16
mov
add
loope
orb
push
mov
je
outsl
dec
fldl
push
out
fistl
gs
in
repz
xchg
inc
ret
shll
js
outsb
mov
stos
int
aad
push
pop
jo
mov
cmp
jle
push
mov
leave
mov
cmpl
out
cmp
je
icebp
outsb
sahf
js
into
pushf
adc
pop
mov
popf
cmc
add
dec
shl
jns
fisttpll
mov
sub
pop
or
test
stos
lcall
jbe,pt
fmull
inc
dec
and
sbb
mov
mov
cs
pusha
xchg
addr16
imul
and
movsl
cmc
mov
insb
movsl
mov
push
dec
arpl
pusha
push
cld
mov
lods
add
fists
mov
out
push
mov
jnp
dec
orl
std
fisubrs
sbb
test
xchg
add
mov
push
fdivl
and
lods
sub
mov
adc
test
enter
lods
lock
pop
ss
jnp
outsb
dec
xchg
scas
and
jno
jbe
inc
insl
xor
and
lds
xor
cmc
dec
pushf
mov
paddq
fucomip
pop
jl
adc
dec
sub
xchg
adcb
dec
scas
outsl
hlt
ret
inc
inc
lahf
jle
jg
icebp
aam
leave
dec
lcall
mov
push
sub
idiv
push
add
or
or
faddl
xor
xchg
xor
xor
push
push
dec
or
js
stos
inc
imul
imul
and
mov
repnz
sbb
in
cmp
push
movsb
inc
jl
or
dec
push
and
pop
out
cmc
loop
push
popf
nop
mov
mov
fbstp
add
and
cmp
cmp
add
sub
and
out
test
dec
push
jb
daa
leave
sub
addr16
add
push
adc
dec
pop
mov
or
aas
sbb
mov
in
mov
test
jne
loopne
rolb
cmp
jl
sub
mov
xor
in
loope
test
sub
fldcw
out
arpl
dec
adcb
repz
pop
in
mov
add
hlt
cmp
les
xchg
addr16
add
shr
shlb
mov
push
pop
into
lahf
inc
sub
mov
dec
add
jle
gs
cltd
cld
adc
cs
pop
aaa
scas
mov
cmp
xchg
dec
mov
aad
loop
outsb
out
xchg
xchg
cmpsb
divl
jecxz
jb
mov
mov
inc
movsb
add
fisubl
xchg
out
sub
mov
cli
scas
call
jl
subb
and
sub
sbb
jbe
inc
xlat
mov
jecxz
push
sbb
ret
cmpsl
stos
cmp
stos
inc
roll
orl
push
das
and
movsl
test
ret
fcoms
pop
jge
and
data16
jg
jmp
and
out
xor
adc
das
add
and
sbb
sbb
dec
xchg
imul
les
cwtl
or
call
add
fsts
aam
pop
mov
jecxz
pop
ds
aaa
nop
cmp
xchg
fisubs
push
xor
jecxz
cwtl
fistl
mov
nop
fstl
and
push
aas
push
push
push
std
sub
addl
push
push
and
lcall
subb
loop
xchg
pusha
aaa
pop
les
or
scas
xchg
cmp
jb
movsb
aad
jnp
cltd
xchg
int3
js
push
arpl
and
adc
sub
hlt
icebp
push
pop
jge
jne
pop
stc
leave
cmc
in
mov
pop
cs
fisubs
loop
and
push
insl
adc
add
int3
or
rorb
stos
jbe
xchg
pop
inc
punpckhwd
mov
addr16
mov
sub
xchg
add
aad
ljmp
test
fdivl
mov
popa
in
mov
adc
add
int
xlat
dec
fdivs
sub
lahf
ret
mov
lret
sahf
push
inc
mov
cmp
jp
cltd
mov
in
rcll
adc
mull
std
xor
mov
mov
mov
lds
pop
fwait
lods
and
mov
pop
and
inc
lea
les
push
call
shl
stc
add
das
sub
int
inc
imul
push
lret
fs
push
rolb
in
jne
lret
std
jo
clts
sar
or
push
pop
mov
mov
dec
sbb
or
mov
add
ds
inc
mov
push
cmpb
sahf
fiadds
mov
fimull
lahf
pop
ret
and
out
imull
mov
sub
sub
or
mov
data16
mov
sbb
imul
pop
lret
pop
sub
ljmp
and
ljmp
pop
in
ret
mov
xchg
fstps
fnsave
fisubs
pop
js
call
jne
mov
pusha
xor
ja
cmc
mov
jno
cmp
push
cltd
add
jg
mov
or
push
lahf
sbb
jbe
dec
scas
insl
pusha
push
pop
bound
in
jae
add
jmp
mov
adc
mov
pop
sahf
fs
cwtl
cld
inc
idivl
outsb
mov
loope
repnz
xchg
push
nop
pop
push
out
cld
push
gs
fwait
ds
mov
push
push
scas
and
adc
ss
cmpsb
mov
mulb
sbb
cmp
cmpsl
lahf
loopne
jne
sub
jge
fidivrs
jnp
jae
inc
clc
hlt
out
subb
jbe
lods
and
pop
push
push
mov
mov
add
mov
dec
gs
fistpl
aas
inc
or
lahf
pop
xchg
das
les
addr16
leave
xchg
pop
sbb
jle
jl
test
testb
or
outsb
push
fdivrp
lods
pop
je
imul
pop
cmp
insb
repz
lret
jb
inc
push
movsl
xchg
sbb
gs
mov
ljmp
neg
xor
das
pop
sarb
inc
rclb
fstl
jno
int3
sub
test
jae
xor
aaa
jne
aad
fldenv
sub
mov
roll
mov
mov
decl
sub
sarb
negb
ljmp
cmp
mov
stc
repz
xor
sub
mov
in
dec
sbb
dec
outsl
out
sbb
out
cmp
xchg
sbb
lcall
inc
mov
or
sub
cli
sub
mov
push
lret
sahf
adc
xchg
repnz
inc
cmp
mov
inc
or
popa
ja
add
mov
inc
add
dec
lods
testl
in
xor
loop
cmp
cmp
xor
xchg
add
or
jl
dec
and
gs
pop
mov
jne
in
test
xor
xchg
push
iret
push
imulb
mov
mov
mov
insl
push
cmp
lods
push
push
mov
push
bts
incb
iret
sub
std
add
cmpl
sti
add
test
jnp
stos
add
push
jno
xchg
or
cmp
fldz
xchg
jp
xchg
daa
and
rorb
stc
cltd
sbb
inc
push
push
lods
sub
push
or
mov
cld
pop
cmpxchg
adc
test
shl
ret
fldl
push
add
mov
sub
jp
leave
jne
mov
and
daa
adc
sbb
aam
xchg
stos
incb
clc
mov
aam
mov
in
shl
jmp
or
je
xor
xchg
fs
and
cltd
popf
mull
mov
dec
push
nop
dec
cwtl
add
out
loop
mov
lock
add
and
outsb
mov
xor
adc
mov
aaa
and
pop
mov
out
insl
sub
xchg
add
cmovle
ja
dec
inc
pusha
loopne
es
xor
push
adc
mov
fists
jne
out
xchg
or
pop
lret
sbb
pushf
jb
scas
fdivl
xor
lret
adc
ret
out
lds
jne
cld
je
loopne
lahf
cmp
test
add
cmp
push
xchg
das
mov
xchg
sbb
jae
jbe
popa
popa
cltd
idivl
adc
ret
push
mov
mov
test
outsl
popf
cltd
mov
pushf
pusha
fsubrl
fldl
and
inc
inc
popl
xchg
ljmp
push
jae
cmc
add
fwait
xchg
push
mov
sbb
fs
outsb
sbb
mov
arpl
aad
aas
mov
ds
or
mov
add
cmp
sti
data16
imul
xchg
and
daa
dec
je
stc
ja
movzwl
push
xchg
std
xor
sbb
xchg
mov
insl
pop
pop
jno
das
popa
dec
lods
xchg
mov
mov
push
cwtl
lods
inc
jecxz
inc
popf
or
mov
cli
mov
mov
push
arpl
incl
dec
sbb
sub
cwtl
jl
dec
sub
adc
pop
imul
sbb
and
in
dec
pop
std
adc
xor
out
jnp
inc
or
mov
dec
stos
clts
jae
xor
cmp
loop
add
adc
icebp
sub
ss
popl
orl
out
dec
and
cmpsl
add
cmpsl
xchg
dec
jecxz
add
xchg
and
out
test
or
sbb
pop
jbe
adc
pop
in
lds
jns
bnd
clc
cld
pop
pop
ret
cmpsl
fdivrs
fmuls
inc
add
adc
aaa
insl
cwtl
test
mov
mov
push
fwait
push
mov
rolb
outsb
call
adc
jnp
sub
jge
sub
lods
shl
add
cmpsl
adc
xchg
nop
cmc
cld
aad
roll
dec
rolb
sbb
xchg
inc
movsl
mov
add
push
mov
loop
outsl
aam
add
movsb
addb
push
adcb
mov
sub
js
mov
fwait
xchg
ror
push
ret
push
jns
in
scas
xchg
inc
movsb
jns,pt
std
pushf
pop
int
fbld
aaa
enter
sub
clc
movsl
roll
inc
out
mov
mov
dec
popa
outsl
push
repnz
fdivl
roll
xchg
scas
push
dec
pop
stos
lods
pushf
stc
pop
push
lahf
or
in
add
sub
mull
fisubl
mov
pop
jo
fimull
mov
dec
pop
add
xor
and
or
cmc
jns
fstpl
inc
cmp
int3
cmc
jo
jle
sbb
jo
sub
das
sbb
pop
aam
xchg
cli
sub
pop
push
sbb
dec
lods
arpl
jle
and
ja
subl
pop
or
dec
xor
mov
std
mov
shlb
fcompl
xor
inc
adc
xor
mov
sbb
mov
mov
dec
in
xor
sub
inc
shrl
pop
adc
shrl
mov
xchg
jle
in
push
aam
jl
out
mov
jecxz
ss
push
stos
movsl
movsl
and
mov
sbb
int
adc
test
push
adc
int3
adc
out
push
cmp
mov
repz
cmp
mov
jmp
lock
gs
or
mov
sub
jmp
sbb
adc
sti
mov
sub
loopne
loope
test
in
int
in
mov
dec
out
mov
lret
sbb
and
xchg
sbb
addr16
fmull
cli
jle
push
shlb
xor
into
mov
or
mov
mov
cwtl
stos
out
xor
fidivs
xchg
jo
or
pop
in
mov
mov
add
imul
sub
pushf
xorl
repnz
jbe
loopne
inc
fs
ret
jg
dec
gs
add
repnz
enter
shr
mov
xor
repnz
mov
jl
sbb
cmp
in
bound
xor
ror
dec
es
aas
jns
push
rcrl
imul
mov
push
dec
mov
add
cmp
das
nop
inc
stos
movsl
sub
xchg
shlb
mov
and
andl
negl
cmpsb
xchg
test
cmpsl
rorl
mov
xor
shll
fstl
cltd
push
loopne
jge
ds
cmc
or
push
mov
rcll
out
or
lods
add
sti
pop
out
mov
or
xorb
add
popa
or
pop
pop
shlb
sub
mov
ret
xor
mov
adc
pop
xchg
pop
adc
dec
int
jbe
gs
fsubl
idivb
outsl
jo
repnz
cmp
sarl
or
scas
sahf
sbb
adc
lret
clc
cmc
push
out
xor
ret
imul
movsl
sub
pop
clc
push
add
xor
or
shr
xlat
sbb
adc
push
jne
cmovge
movq
pushf
pop
ljmp
xchg
outsb
dec
sti
imul
jne
js
xor
pop
scas
jae
addr16
mov
icebp
test
dec
lock
dec
cwtl
leave
out
sbb
jp
repnz
popa
jae
pop
shr
fiadds
cmp
add
cmc
mov
inc
mov
mov
outsb
adc
adc
mov
je
mov
and
aad
or
cli
leave
js
inc
or
lods
ljmp
dec
arpl
or
xchg
cbtw
leave
mov
adc
ja
add
pop
mov
je
stc
ljmp
pop
daa
or
mov
jp
mov
mov
push
jmp
test
scas
movl
cmc
testl
jge
mov
xor
dec
data16
inc
out
inc
jno
jg
add
stos
and
roll
fs
push
es
mov
mov
push
mov
test
sbb
mov
xor
out
mov
cwtl
and
lds
fidivrl
ljmp
adc
jmp
shlb
icebp
sub
mov
cmp
ret
fadd
sbb
jle
call
mov
rcll
pop
adc
call
scas
lret
rorb
scas
pop
sub
shrl
stos
push
or
xchg
cltd
add
mov
fmull
pop
inc
inc
pop
cmpsb
sbb
loop
mov
jns
sbb
mov
or
pop
shl
pop
int
jp
xlat
inc
sbb
push
mov
pop
dec
stc
mov
sarb
xor
lahf
jle
fists
xchg
.byte
sub
add
addb
mov
mov
jnp
int
or
adc
add
jns
mov
or
lret
xchg
mov
pusha
mov
sarb
mov
jge
sbb
xchg
mov
mov
lea
mov
int3
mov
scas
push
xchg
and
and
and
dec
jle
xchg
cmpl
add
jecxz
jns
mov
xchg
cli
xor
sub
sbb
cli
mov
test
and
shlb
mov
fcoms
aaa
push
rcr
adc
test
mov
push
ljmp
shll
popf
es
jo
scas
hlt
popf
mov
mov
xor
push
loop
aas
sbb
loope
push
cmc
and
dec
arpl
add
ja
vcmpps
jmp
jmp
mov
das
add
mov
adc
sbb
jns
and
movsl
dec
les
push
xchg
loop
xlat
aas
jecxz
xor
mov
push
cmp
bound
enter
mov
stc
dec
mov
call
xchg
aas
lahf
jg
xor
xor
mov
jmp
xor
pop
lcall
cmp
adc
sbb
fcmovnbe
daa
jb
std
pusha
xchg
shlb
rorb
cld
push
arpl
xor
mov
sub
dec
dec
cwtl
cmpsb
adc
je
jge
por
cli
loope
jb
mov
aad
fistpl
daa
xchg
sub
jl
leave
out
and
mov
stos
dec
bound
test
add
xor
sub
dec
inc
icebp
fxch
jnp
inc
nop
lret
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sub
call
push
mov
pop
lods
jne
jnp
or
add
push
inc
sub
scas
dec
fsub
sub
pop
pop
mov
add
xor
push
mov
pop
jae
jmp
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
ljmp
fsubs
fiadds
jbe
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
pop
sub
popl
call
call
cmp
jle
sub
mov
adc
pop
sub
or
cmp
jne
push
sub
pop
jmp
js
mov
and
inc
push
nop
mov
lret
mov
jmp
repnz
sar
lahf
in
mov
mov
test
xor
sub
or
cs
jg
dec
inc
sti
mov
ret
mov
mov
cmp
adc
into
cld
push
jmp
mov
add
cmp
std
pop
js
rorl
clc
pop
mov
xchg
sub
inc
in
arpl
in
mov
mov
or
into
sbb
lods
or
testb
dec
scas
pop
cli
add
push
std
mov
outsb
cltd
cs
repnz
lds
jecxz
mov
or
into
xchg
or
push
lods
inc
popa
scas
fsin
insl
lret
mov
into
lods
mov
inc
fnsave
jo
stos
outsb
push
and
test
cmp
mov
outsb
lock
in
mov
push
test
scas
add
and
mov
lea
and
cmp
xor
and
ljmp
fsubs
call
mov
loopne
and
mov
jmp
jp
add
rorb
test
jnp
in
mov
ror
xor
adc
jp
dec
mov
cmp
and
test
pop
test
xor
mov
sbb
sbbb
adc
or
in
fs
dec
pop
xor
fs
or
push
push
jne
pushf
imul
push
mov
mov
mov
or
and
test
push
cmp
inc
lds
js
push
adc
and
test
icebp
inc
fnsave
in
xchg
cmp
out
orb
push
push
ret
imul
and
mov
fs
adc
inc
and
fwait
xlat
mov
and
imul
inc
dec
nop
cmpsb
xchg
stos
mov
fisubrs
push
sbb
aas
push
mov
mov
pushf
xor
insl
mov
push
mov
aaa
xor
sbbb
mov
fucomi
pop
push
mov
cmc
scas
add
or
imul
out
mov
jmp
or
xchg
sub
fidivl
dec
push
ljmp
adc
mov
cld
mov
xor
or
add
sbbb
or
cmp
insl
push
clc
in
cmp
movsb
sub
iret
adc
cmp
xchg
in
scas
loope
imul
xor
adc
imul
xor
lcall
jno
fcmovb
lods
pushl
in
bound
or
jg
scas
or
fsts
and
popf
pushf
dec
nop
test
std
jne
xlat
jp
add
jp
add
jp
mov
std
jne
lock
loop
sub
pop
int
jne
iret
outsb
dec
or
shlb
cmp
add
xchg
or
lret
sti
jno
and
jne
cs
jno
jb
push
xlat
push
add
xchg
jno
and
jne
cs
jne
outsl
std
jne
outsl
std
push
push
mov
adc
adc
jbe
jae
mov
xchg
mov
or
mov
std
jne
dec
cltd
xchg
lahf
cmp
and
into
loope
jae
out
cmp
xchg
loopne
sbb
push
jo
jne
jb
mov
outsl
std
imul
addr16
outsl
std
or
add
es
jbe
outsl
std
nop
inc
movsl
add
fbstp
out
fdivl
jne
mov
jbe
outsl
std
je
test
jbe
add
add
sub
fsubrl
or
add
or
movhps
or
add
sub
or
add
sub
aaa
sub
jp
out
sub
xor
outsl
jl
scas
es
or
pushf
jp
je
std
jne
js
jbe
sbbb
xor
scas
rol
outsl
std
or
nop
shrb
je
dec
adc
pop
add
fistpll
jo
std
jne
es
nop
mov
ja
or
es
or
stos
std
jne
out
sti
push
add
push
vmwrite
sub
pop
imul
fildll
inc
mov
adc
xor
add
loop
js
mov
sahf
popa
push
jo
jbe
add
or
fildll
shl
outsl
std
jne
outsl
std
jne
es
push
out
xchg
mov
jns
push
sub
dec
loope
xchg
jno
mov
testb
jmp
shlb
cmp
and
outsl
std
jae
stc
testb
jmp
add
dec
lods
jnp
push
sahf
mov
mov
and
icebp
mov
pop
xchg
jno
mov
jle
stos
push
push
mov
lods
std
jne
lods
mov
fbld
icebp
mov
pop
xchg
jno
cltd
adc
scas
mov
fildll
out
mov
icebp
lret
xchg
jno
cltd
pusha
xor
fnstcw
dec
push
jmp
jae
je
xor
fdivs
add
dec
lods
jnp
push
sahf
mov
jnp
mov
fbld
adc
daa
jo
jbe
jmp
jne
mov
int
push
jmp
jb
je
js
std
ret
je
es
pop
fisubrl
testb
out
jecxz
icebp
adc
jp
out
es
pop
fiaddl
fdiv
mov
jg
add
rorl
cmp
loopne
divl
jo
cmpsb
loopne
add
std
lock
inc
or
pop
push
cmp
jp
xor
scas
and
nop
loopne
jo
je
std
jne
xor
jp
cmp
xchg
mov
outsl
std
sub
clc
adc
outsl
and
inc
movsl
add
cmp
fnstsw
movsl
loopne
std
mov
fiaddl
and
mov
fcmovnb
cmp
fucom
xlat
xchg
jp
mov
xchg
add
xor
in
lcall
dec
sbb
mov
mov
lock
sbb
inc
ret
js
stc
xchg
jmp
cltd
fst
mov
or
lea
jbe
scas
dec
fildll
jne
outsl
std
jne
outsl
std
jne
outsl
std
jne
outsl
std
jne
outsl
std
jne
outsl
std
jne
daa
add
mov
add
outsl
clc
jne
outsl
std
jne
outsl
std
xor
fildll
jne
outsl
std
jne
sti
ss
outsl
std
jne
outsl
std
jne
outsl
std
jne
outsl
std
jne
lret
mov
jne
outsl
cmp
dec
in
jge
in
lea
adc
lcall
push
sbb
xchg
sub
sbb
outsl
or
add
mov
mov
out
xor
jge
mov
js
cmpsl
insb
cmp
in
mov
sub
sub
leave
sbb
or
in
inc
mov
xchg
xor
adc
iret
mov
sub
push
int
mov
aas
cmpsb
ror
addr16
test
inc
pop
push
hlt
dec
fidivs
data16
je
shrl
testb
lds
cmp
mov
insb
jno
test
shll
and
or
push
mov
dec
dec
xor
rolw
cmc
sbb
jg
xor
scas
out
inc
jmp
notl
push
dec
aaa
inc
adc
sbb
enter
xor
adc
add
add
or
add
and
or
xor
or
inc
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
mov
sub
add
sub
add
sub
add
sub
add
sub
add
jbe
jbe
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
sub
add
add
add
sub
add
add
add
sub
add
add
add
add
dec
arpl
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
data16
jb
xor
cmp
xor
dec
jb
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
outsl
add
jne
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
arpl
arpl
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
arpl
arpl
add
js
add
add
add
add
add
and
add
add
add
jne
add
add
add
add
add
add
or
add
add
idiv
hlt
add
incl
out
add
idiv
add
sbb
adc
cli
add
incl
stc
incb
add
pop
add
cld
cli
add
std
incl
pop
add
jb
mov
add
stc
add
sti
cld
add
add
mov
add
incl
dec
dec
push
add
add
add
cli
add
add
add
cmc
incl
int
filds
add
pop
add
mov
es
xor
add
std
incb
std
cld
add
add
add
add
or
cli
add
std
clc
add
add
add
repnz
stc
testl
xchg
shl
add
sti
add
incl
sti
sti
add
mov
add
or
stc
clc
incl
add
or
out
incl
clc
std
hlt
add
cmc
clc
add
hlt
cli
add
incl
mov
incl
je
xchg
add
loop
add
incl
add
add
add
clc
stc
add
cmc
cld
add
add
add
incl
incb
cld
incl
js
fiadds
sub
and
add
incl
clc
std
incl
clc
sti
incl
add
or
cmpsl
mov
add
cli
stc
add
sti
cli
add
incl
xor
add
incl
cli
incb
cld
stc
add
stc
incl
idiv
sti
add
add
add
mov
ja
movb
std
testl
dec
xchg
mov
incb
std
incl
add
or
add
add
add
add
incl
loopne
incl
cld
cli
add
stc
add
add
add
cld
repz
add
add
stc
add
add
add
xchg
fwait
add
and
add
mov
add
sbb
add
jge
jb
mov
std
stc
clc
add
sub
add
add
add
xchg
mov
add
lock
add
incb
push
add
cld
cld
add
incl
xor
add
add
div
add
cli
cli
add
add
enter
jmp
mov
add
add
jbe
jne
xchg
add
sub
pushf
mov
incb
cld
incb
cwtl
sar
add
incl
sti
cld
cli
add
std
add
add
add
add
cli
clc
add
stc
incb
add
add
es
add
div
add
lock
mov
insl
je
jl
int
lock
out
add
or
fdivp
sti
add
cld
sti
add
incb
cld
clc
add
std
add
add
add
add
add
push
add
add
add
add
add
pusha
add
sti
incl
arpl
add
xor
outsb
add
std
add
add
add
movb
incl
nop
mov
incl
incl
std
incl
sti
incl
stc
incl
sti
sti
add
cmc
add
add
push
daa
cmp
hlt
incb
add
add
lret
rcr
add
add
icebp
incl
adc
add
pop
or
cld
add
std
cld
add
icebp
incl
sti
cld
add
mov
or
cltd
mov
testb
mov
add
inc
add
mov
xchg
adc
stc
add
incl
add
add
add
push
add
add
add
cld
stc
add
ljmp
incl
xchg
xchg
pushf
add
mov
jp
nop
add
add
std
testb
loopne
add
add
add
add
add
cld
testl
cmc
clc
testb
fiadds
jo
mov
add
addb
lea
add
clc
std
add
std
incl
hlt
cld
add
sti
repz
add
add
ret
ret
ret
ret
dec
rol
je
xchg
ret
ret
ret
ret
ret
ret
ret
dec
pushf
dec
dec
dec
dec
dec
ret
ret
ret
ret
ret
ret
ret
ret
ret
dec
movsb
add
ret
ret
ret
ret
ret
push
ret
dec
ret
push
and
xchg
mov
ret
ret
ret
ret
push
dec
ret
mov
ret
addr16
dec
pop
inc
in
mov
in
adc
aad
outsb
and
ret
push
adc
or
icebp
mov
pop
add
fwait
inc
addr16
push
ret
pop
mov
sub
ss
pop
sbb
leave
pop
jnp
adc
and
sub
push
ret
dec
cmp
icebp
fcoms
arpl
fisttpll
xchg
adc
push
test
ret
sbb
xor
arpl
lods
lods
fdivrl
int
mov
dec
ret
sbb
pop
inc
sub
leave
dec
ffree
dec
fnstsw
mov
mov
pushf
test
mov
fidivs
negl
dec
jg
pop
jmp
pop
xchg
mov
sbb
fiadds
rcl
je
mov
cmpl
jg
leave
xchg
mov
and
pop
pop
pop
mov
and
mov
and
arpl
mov
jg
js
dec
xchg
and
js
dec
leave
inc
sbb
adc
push
inc
mov
js
dec
mov
mov
mov
adc
arpl
jo
jnp
mov
fimuls
inc
dec
mov
inc
mov
iret
fcoml
add
pop
pop
mov
fmul
inc
sbb
lea
mov
mov
xor
mov
adc
xchg
in
dec
leave
mov
sbb
pushf
je
dec
xchg
mov
xchg
mov
mov
fisttpll
pop
leave
mov
test
ret
sbb
jg
pop
mov
cmpsl
test
pusha
push
mov
pop
push
ret
std
outsb
mov
mov
dec
push
inc
or
mov
out
cmpb
rcrl
mov
ret
popa
in
dec
push
int3
xchg
sbb
into
add
cmp
mov
les
ret
scas
mov
in
jbe
jmp
das
inc
jge
loope
sbb
mov
ss
pop
les
ret
inc
pop
xchg
or
cmc
cmpsb
test
sub
sub
in
roll
mov
scas
xor
ret
inc
or
xlat
add
mov
out
adc
lea
ret
ret
ret
inc
push
push
imulb
repz
testl
out
sarb
ret
ret
xchg
cld
push
push
sbb
mov
jo
cltd
and
bound
ret
push
ret
sub
loopne
clc
ret
sub
out
aas
cmpsl
xor
and
je
ret
ret
and
push
inc
inc
and
ljmp
stc
xchg
push
fadds
xor
fwait
push
and
ret
push
and
and
and
dec
lods
add
jbe
rcrb
mov
or
cli
ret
push
push
ret
and
ret
pop
pop
adc
and
and
pop
or
and
ret
push
push
push
push
ret
ret
and
in
or
aad
sub
test
pushw
push
push
push
push
push
dec
dec
cmp
or
dec
dec
test
sti
lds
pushw
dec
ret
movsb
cmp
add
popa
loopne
adc
add
lahf
add
add
push
pop
jo
xchg
adc
mov
adc
fisubs
push
adc
nop
mov
push
inc
nop
push
inc
or
outsl
and
inc
mov
mov
pop
enter
and
stc
lock
enter
scas
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
shrb
and
rolb
enter
cmpl
push
arpl
add
mov
mov
adcb
enter
jb
test
movsb
sbb
mov
add
cwtl
xchg
xchg
enter
add
cmp
sbb
jl
push
and
in
push
jo
insb
sbb
and
and
pop
enter
push
jb
cmp
dec
add
orl
and
xchg
add
inc
in
jb
cmp
xor
and
and
add
mov
les
push
add
and
pop
or
inc
hlt
sub
add
mov
pop
sbb
add
lods
or
cmp
gs
or
cmp
sbb
js
and
and
mov
adc
add
push
pushf
int3
push
call
add
leave
jne
inc
fistpl
lret
dec
inc
cmp
or
rolb
mov
add
in
repz
addb
fs
in
out
iret
adc
push
pop
add
add
pop
add
or
call
test
dec
dec
mov
push
add
add
jnp
add
int3
bound
xor
jo
add
jg
jle
add
adc
mov
nop
push
push
rorb
and
call
add
push
pop
add
nop
scas
cmp
inc
mov
push
or
push
jne
add
frstor
sbb
xchg
or
jmp
xchg
add
add
or
sbb
sahf
jmp
add
clc
jg
sub
pop
pop
pop
add
inc
je
repnz
add
xor
jb
inc
into
add
sbb
call
ja
pop
add
add
add
jnp
and
inc
inc
cmpsb
gs
jmp
or
divb
add
into
add
xor
iret
pop
sub
jmp
sub
and
add
aad
xlat
cmp
adc
add
sarl
test
loop
or
or
sbb
sti
cltd
mov
nop
stc
enter
in
xor
adc
pop
mov
cmp
out
adc
int
or
add
push
push
sbb
clc
mov
jne
add
mov
mov
adc
mov
cli
xor
pop
clc
stos
fs
push
pop
fsts
in
popa
push
pop
add
or
push
push
shlb
loop
add
xchg
and
sub
ja
movsl
fsubl
dec
adc
dec
in
sbbl
or
xchg
data16
push
nop
sbb
or
adc
add
repz
nop
out
ja
jns
and
add
out
xor
je
or
adc
jp
cmpsb
jne
add
xor
or
movl
pop
cmp
pop
jmp
pusha
ret
in
loopne
jl
jo
rcrb
shld
add
sbb
lods
adc
mov
xor
test
ljmp
mov
ret
push
dec
and
pop
inc
aam
dec
js
cwtl
dec
add
lds
inc
aad
xor
iret
cmp
pop
add
jle
add
rcll
fstpt
mov
cwtl
orb
pop
adc
cmp
push
adc
cmpsb
mov
movaps
orl
je
mov
test
xor
inc
sahf
jmp
sbb
leave
xor
sub
test
add
push
sbb
jae
ja
add
std
inc
int3
mov
daa
inc
mov
dec
loopne
rolb
cmp
ds
aas
dec
xchg
or
cmc
pop
pop
cmp
movq
add
xlat
fs
call
pop
ja
je
cmc
inc
add
mov
inc
leave
nop
stos
call
das
aas
and
mov
cmpl
pop
movsl
and
rorb
call
jns
pop
aaa
in
jmp
loop
add
aas
popf
xchg
xchg
add
mov
pop
es
or
popa
adc
mov
xchg
loopne
lea
sub
sub
test
lcall
xlat
sbb
or
pop
dec
leave
xchg
xchg
push
adc
loopne
mov
dec
mov
cmp
sbb
data16
decl
cmp
jmp
cmpsb
imul
pusha
stos
mov
dec
and
jp
adcb
cmpl
sub
dec
push
test
push
adc
or
pop
dec
cmpsb
lods
addb
dec
and
add
xor
add
lock
out
or
fiadds
jae
pop
dec
iret
je
sub
rorl
adc
mov
add
pop
ret
enter
out
add
adc
fdiv
adc
dec
repnz
cmp
inc
add
add
lea
sub
pushf
ljmp
andb
mov
ficompl
xor
cmpb
push
or
and
mov
push
stos
sbb
push
add
xor
inc
add
test
popf
pop
adc
add
xor
add
sbb
mov
mov
add
movb
add
push
jne
push
add
jmp
pop
in
test
pop
rol
jl
add
adc
test
aam
shr
push
bndldx
dec
enter
adc
xchg
add
push
clc
mov
hlt
add
adc
xor
cmp
out
sbb
sub
or
xor
cwtl
dec
jne
add
fidivrl
add
dec
in
fistpl
add
jl
orb
sbb
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
and
add
shll
add
or
push
cld
adc
or
jns
adc
cmc
mov
addl
clc
xchg
sbb
pusha
add
adc
movl
mov
ret
or
cmpl
cltd
inc
push
mov
add
ljmp
add
rolb
cld
cld
in
xor
add
nop
adc
popa
outsb
or
bound
xchg
add
add
push
sub
or
add
ret
and
mov
add
xor
test
je
sub
add
scas
enter
test
test
add
mul
push
push
add
cmpsl
jb
sub
sbb
push
adc
add
add
add
fdivs
shlb
or
inc
pop
xlat
clc
add
fsubs
test
jne
add
repz
xor
push
jae
add
xchg
clc
xchg
or
pop
mov
and
lods
fdivr
call
shl
push
jg
not
lahf
fs
pop
lds
nop
adc
imul
push
xchg
jb
cmp
rolb
outsl
mov
sbb
add
adc
sub
dec
add
and
in
mov
popa
xor
jae
lcall
adc
shr
aas
or
shll
mov
add
pop
pop
popf
dec
sub
pop
mov
sub
cld
xchg
add
adc
mov
test
jmp
add
nop
hlt
xor
adc
test
mov
pop
iret
sbb
cmp
jecxz
lret
adc
add
pop
fcomip
sub
jg
cmp
jl
nop
cmp
or
sahf
addl
mov
xor
cs
mov
add
dec
or
sub
nop
lahf
add
jmp
mov
cwtl
mov
sub
sub
test
aam
es
xor
js
imul
movsl
cmp
cld
sub
das
or
adc
ds
or
add
add
call
pop
mov
inc
add
ror
rep
add
aas
movb
sbb
xchg
ret
fsubs
mov
scas
pop
inc
xor
cmpsb
add
adc
xchg
jbe
add
mov
push
add
xor
mov
dec
add
gs
add
repnz
or
mov
jo
push
addl
dec
lods
xor
dec
cmp
orb
mov
cmp
xchg
add
push
addb
sbbl
int3
and
pop
mov
sbbb
ja
sub
add
inc
pop
loop
adc
jle
and
xchg
xor
movsb
mov
pop
cli
inc
int
pop
enter
add
push
es
xchg
add
dec
inc
dec
sbb
mov
jmp
add
dec
xor
mov
jo
inc
xchg
mov
add
fsts
add
mov
cwtl
mov
lret
call
xchg
dec
add
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
fmul
sub
pop
pop
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
test
xchg
push
int3
rorb
inc
adcb
aas
subb
or
mov
cwtl
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
outsl
pop
adc
jne
sbb
arpl
inc
adc
sbb
or
mov
or
jo
pop
or
inc
adc
push
or
mul
dec
push
int3
add
enter
dec
sub
add
inc
pop
sbb
data16
xchg
push
imul
cmp
sub
jno
push
add
xchg
or
jle
add
movsl
scas
faddl
add
je
je
add
and
add
aaa
orl
test
mov
add
push
cmpb
push
adc
or
or
icebp
adc
bound
roll
mov
and
add
lods
and
add
ret
add
dec
mov
add
xlat
pop
mov
mov
add
nop
enter
add
mov
sahf
fdivrs
jne
cmp
mov
sahf
adc
data16
aas
jge
push
sbbb
sub
adc
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
add
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
lcall
fiaddl
loopne
in
sub
sahf
movsb
add
push
sub
or
cmp
dec
pop
sub
cs
push
and
mov
xor
adc
cmp
ja
jmp
jmp
add
lods
je
add
jbe
loope
adc
cmp
addl
mov
rolb
dec
ss
sbb
add
into
in
and
sbb
add
cmp
adc
jp
add
or
jmp
pop
pavgb
mov
jo
inc
and
lahf
jo
or
adc
add
adc
test
test
pop
mov
fsubl
inc
dec
add
je
sub
sbb
enter
add
jne
mov
shll
cmp
push
fs
or
out
jp
cwtl
pop
loopne
adc
scas
add
call
or
xor
add
dec
add
jmp
lret
int3
add
leave
xlat
iret
mov
fadds
lret
sbb
loopne
jecxz
in
and
push
push
push
inc
cmpl
add
leave
push
test
push
popl
paddb
cwtl
or
nop
test
lret
add
mov
cmp
add
adc
sub
sub
jg
lock
cmp
movsb
mov
xor
xchg
jl
push
sbb
or
cmpsb
sbb
inc
cld
roll
or
add
add
xchg
push
and
aas
jmp
add
add
cmp
loope
cmc
fmuls
cmp
jnp
or
add
out
imul
sbb
inc
addb
add
test
lock
out
movsl
add
sub
mov
addb
add
or
pop
into
add
test
adc
dec
fisttpll
xchg
sbb
test
adc
xor
push
pop
lea
adc
mov
xchg
ja
cmp
jmp
incl
jo
pop
lods
mov
lea
push
add
jmp
cmp
cmp
mov
cli
pop
in
sbb
mov
inc
lock
lsl
repnz
scas
inc
add
add
imul
enter
add
add
mov
pop
sarb
or
addb
fwait
pop
pop
mov
mov
fstps
inc
sub
add
cmc
pop
and
sbb
sbb
cmpsl
es
sbb
or
and
shl
push
dec
nop
dec
jno
add
fidivl
shlb
adc
enter
not
push
pop
mov
inc
and
xlat
xchg
outsl
add
sub
jbe
in
lret
jmp
xor
mov
push
add
shr
fwait
loopne
and
and
hlt
into
imulb
adc
add
sbb
sbbb
psubusw
dec
loopne
mov
jae
lret
sbb
mov
pop
add
ret
xchg
loop
push
add
pop
and
je
mov
cmp
xor
add
dec
add
dec
iret
push
add
cmp
cmp
sar
stc
or
sahf
ja
adc
mov
add
je
pop
xchg
adc
shlb
or
stos
cmpsb
adc
stos
jne
add
adc
or
loop
push
mov
negl
push
dec
js
add
xor
iret
rorb
sub
pop
pop
push
fildl
or
sbb
clc
pop
arpl
idivb
add
ds
mov
or
addl
sub
sub
mov
mov
rorb
xchg
sub
dec
jne
testb
sbb
aam
addb
jmp
enter
push
fs
cmc
inc
pushf
mov
sti
and
loope
push
add
icebp
data16
and
js
popa
add
mov
out
sub
dec
or
add
or
xor
cmp
pop
shrb
lea
jo
shlb
add
or
dec
mov
aam
jl
adc
testb
and
cmp
jle
pop
js
mov
fiadds
add
mov
sysret
xor
xchg
xor
xchg
mov
jbe
adc
add
cltd
ret
or
add
pop
add
jmp
cli
push
add
cli
in
shlb
sub
add
jne
repnz
cmp
cmpsb
add
xchg
add
jae
jmp
add
ss
mov
sbb
push
adc
dec
cld
or
mov
add
xchg
lahf
mov
adc
add
mov
or
jo
shlb
add
push
sbb
and
nop
add
jmp
pop
add
insb
adc
add
icebp
add
and
cmpb
xchg
ds
pop
mov
mov
add
push
add
mov
int3
cld
push
fadds
push
push
mov
arpl
call
dec
mov
push
jae
push
sbb
loope
mov
clc
lret
loopne
imul
or
push
mov
adc
cld
or
out
mov
call
mov
jle
int3
and
ud2
add
ljmp
push
dec
sbb
push
push
add
inc
pop
inc
outsl
add
push
popa
outsb
fs
inc
add
jo
imul
add
push
push
dec
popa
jae
add
insb
jne
gs
imul
or
jo
xor
adc
cs
push
mov
adc
adc
sbb
sbb
je
rcrl
jne
ss
dec
fmull
push
pop
or
pushf
divb
cmp
mov
js
xchg
movlps
mov
call
push
testb
or
add
rcrb
add
mov
pop
loopne
pop
mov
scas
dec
cld
xchg
mov
add
stos
mov
sbb
inc
add
stos
sarl
call
fs
add
imul
and
jmp
cmp
aam
or
sbbb
cmpsb
add
jno
icebp
jnp
xorb
jg
add
mov
jo
into
leave
adc
sub
sarb
add
repz
mov
les
push
xchg
sbb
push
cltd
or
push
addl
add
add
fs
jno
add
pop
sub
xchg
add
adcb
push
add
and
or
push
rolb
cld
add
pop
adcb
pop
jmp
add
lock
push
divb
adc
pop
je
adc
jb
sbb
imul
or
or
pop
add
add
sbb
sub
inc
or
dec
push
nop
or
adcl
popa
pop
and
or
xchg
add
call
pushf
inc
test
add
jg
aam
jge
push
call
pop
cmpb
jbe
fists
cld
imul
mov
push
add
sbb
push
add
push
push
enter
inc
mov
xor
push
loopne
adc
add
push
add
mov
fs
rclb
rcrb
std
add
cmpb
popa
pusha
sub
or
jne
mov
pop
pop
ret
cmp
sbb
std
add
outsb
loope
add
inc
pop
dec
sub
mov
push
xorb
mov
push
jecxz
imul
idivl
out
andb
sbbl
dec
adc
loopne
outsb
cld
call
xchg
add
mov
lock
push
adc
out
add
cmpl
out
push
je
push
pop
add
and
sub
cmp
ja
insl
xchg
push
add
xor
xchg
add
stos
popa
xor
lret
or
push
or
ret
stos
push
jne
cmp
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
sbb
sbb
leave
sbb
mov
mov
fwait
dec
lcall
pushl
mov
push
mov
aad
add
movl
stc
rcll
jmp
jae
ss
xor
adc
add
sbb
mov
sub
outsb
pop
je
pop
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
sbbl
jno
cwtl
fadd
cmpsb
push
add
dec
pop
aas
pop
and
add
dec
add
jne
pop
fs
push
out
add
pushf
or
popa
into
je
and
imul
add
dec
mov
add
mov
adc
or
ficoml
and
sub
and
daa
add
insb
rolb
sets
mov
xor
lcall
add
xchg
xchg
add
pop
mov
loop
movsb
add
inc
test
in
mov
and
fdivrp
test
mov
dec
cmp
shlb
push
cli
push
add
push
das
add
jmp
xor
jl
add
inc
or
jnp
add
std
cmp
or
movsb
xchg
ljmp
mov
adc
adc
mov
sub
cmpsl
dec
push
cmp
xchg
fs
mov
add
pop
call
jmp
cmp
int
push
shlb
add
dec
test
add
lret
cmpsb
dec
add
add
push
add
pop
push
mov
cmp
add
and
add
cld
cmp
jmp
pusha
add
mov
sub
dec
add
cmp
adc
sub
int3
add
push
and
jmp
test
std
punpcklwd
push
mov
es
sub
enter
leave
cmp
xlat
mov
and
push
and
sti
rcll
fxch
loope
jmp
or
fprem
push
dec
add
roll
imul
test
pop
ret
jl
add
dec
inc
cmpsl
jmp
lods
cltd
add
sub
cmp
dec
lret
fs
xor
fimull
loopne
rorb
sbb
add
mov
fadds
cli
add
pop
cmp
and
mov
in
sub
cmp
cmp
dec
stos
and
or
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
add
pushl
cmp
jne
and
add
mov
sub
loope
add
jo
pop
add
inc
test
jle
ja
add
add
cli
xchg
rol
add
out
idivl
enter
loopne
mov
sarl
pop
loopne
pusha
test
iret
push
xor
sbb
mov
xor
adc
add
jle
sbb
sarl
sbb
jo
jg
dec
add
push
adc
lea
mov
movsl
and
lcall
sbb
movsb
or
dec
cmc
or
cmpl
nop
pop
mov
or
push
bnd
inc
or
inc
mov
pop
xchg
je
pop
incl
xchg
dec
aad
mov
inc
mov
push
or
add
or
add
hlt
rcll
sub
inc
call
inc
sub
lea
and
inc
lahf
push
push
stos
add
daa
out
mov
cmpsb
sbb
dec
and
shlb
push
movsb
sbb
xor
int
jl
add
andb
adc
inc
cmp
add
cmp
mov
add
mov
lcall
and
mov
push
pop
adcl
in
push
ljmp
add
ja
push
and
aaa
daa
add
dec
push
dec
pop
sub
fcomps
mov
or
mov
hlt
gs
sbb
xor
adcb
cmc
jne
push
cmpl
loopne
ficoml
mov
xchg
add
call
jne
add
sbb
inc
je
call
xor
orb
push
mov
mov
or
lods
mov
ds
leave
insb
adc
ror
mov
add
call
sub
pop
insb
imul
adc
or
or
add
lss
sbbl
shlb
sti
jb
cmp
jg
add
aad
dec
sub
push
push
sub
sub
mov
lret
ja
add
push
testb
pop
jmp
pop
push
outsl
jb
add
outsb
jae
inc
bnd
jnp
hlt
addr16
mov
sub
xor
cmp
sub
pop
pop
xchg
cltd
insl
outsb
mov
nop
mov
add
sbb
mov
add
adc
xor
cs
xchg
sub
mov
cld
lock
push
or
psubsb
push
pusha
push
pop
mov
push
adc
add
or
insb
ljmp
int3
push
and
inc
sub
cmc
inc
shll
add
cltd
sbb
in
pop
add
shrl
outsb
add
in
inc
sbb
inc
jle
sub
jo
sbb
push
add
xchg
or
mov
cld
ret
mov
add
inc
jmp
leave
mov
aas
add
scas
movl
xlat
sbb
es
xchg
inc
or
je
frndint
ljmp
shlb
and
addr16
jge
fnstcw
inc
sbb
or
push
andb
test
shlb
jp
add
mov
xor
dec
es
jecxz
cwtl
push
call
loope
inc
jb
cmpb
mov
mov
sub
push
and
cmp
xchg
dec
jnp
sbb
jg
inc
sarb
xchg
add
imul
out
roll
pop
sub
add
daa
cltd
and
push
xor
bound
or
int
pop
or
test
jmp
in
push
add
push
cmp
jo
movsb
cmp
mov
add
adcb
dec
xlat
push
pop
repnz
pop
add
rcrl
shl
pop
movsb
sbb
lret
jo
xor
inc
decb
sbb
cld
xorb
or
ret
mov
add
cmp
inc
imul
add
sub
jp
push
dec
add
adc
pop
pop
cwtl
test
scas
fisttpll
cmp
mov
jl
subb
inc
cmpsl
push
xor
inc
stc
rorb
sub
adc
pop
cmp
into
push
add
add
inc
outsb
jne
fisttps
add
mov
ja
cli
cmpsl
add
lret
pop
and
iret
dec
clc
cli
mov
push
jmp
mov
push
cmpsb
add
mov
adc
pop
dec
adc
dec
lds
iret
pop
pop
xor
mov
mov
fadds
subb
mov
lods
dec
les
add
and
std
loopne
flds
mov
inc
or
add
push
add
rolb
ret
shr
dec
push
add
pop
mov
mov
xchg
adc
cmovo
out
xchg
pop
mov
loopne
and
addl
xor
cmp
jp
sub
jecxz
and
add
push
xor
add
shrb
and
mov
adc
sub
push
clc
inc
mov
sub
and
add
mov
mov
xchg
mov
pop
dec
movsb
and
add
push
ds
add
int3
pop
mov
dec
clc
sbb
pop
cld
jo
andb
jl
cmp
fidivrl
and
add
inc
sahf
jg
inc
hlt
mov
xchg
mov
rolb
lcall
mov
bound
mov
nop
xor
dec
add
cmp
jle
add
sub
popf
iret
fwait
add
sar
repnz
add
add
dec
sti
push
lock
cli
add
xchg
daa
mov
mov
jp
add
push
dec
inc
jnp
add
inc
aad
mov
jl
cmp
repz
pusha
je
push
add
aad
jne
inc
jecxz
lret
add
mov
nop
xor
incl
fwait
dec
mov
scas
and
addl
outsl
push
jne
shr
clc
ret
cwtl
sbb
loopne
ja
cmp
mov
sbb
cld
add
sub
or
mov
cli
xchg
call
jl
je
and
push
jmp
test
pop
add
push
bswap
sub
repz
inc
add
ficompl
dec
ret
add
push
mov
in
push
add
loop
and
sbb
pop
sub
sbb
lcall
jne
pop
cmpb
scas
stos
mov
ret
mov
pop
addb
je
jmp
add
leave
shll
or
pop
add
push
movb
pop
js
add
pop
sub
sbb
xor
inc
pushl
sub
mov
pop
push
push
add
bound
sbb
call
icebp
push
adc
enter
add
cld
push
pop
mov
hlt
dec
test
scas
jl
push
add
cwtl
cmp
call
mov
add
push
insb
cmp
pop
out
push
add
lods
add
or
or
je
xchg
nop
mov
jle
pop
add
ss
push
mov
add
sbb
fidivrs
rol
add
lcall
sub
enter
or
adc
push
add
adcl
jno
jmp
shrl
xor
fmul
jae
cmc
cmpsl
dec
push
lock
inc
mov
add
pop
int3
test
xchg
cmp
stc
popf
inc
and
or
push
xchg
add
ret
add
pop
mov
jnp
data16
adc
mov
xchg
pop
pop
cltd
push
add
or
sbb
add
sub
movsb
sbb
cmp
push
aas
out
das
push
aas
or
sub
jl
sub
shlb
sarb
add
push
inc
les
cmp
aas
add
cmovp
outsl
cmp
and
test
cwtl
and
dec
add
in
stc
and
enter
cmp
fs
or
inc
add
adc
mov
mov
ret
xor
pop
pop
cli
xchg
mov
mov
movsl
and
xor
loopne
sbb
dec
popa
dec
scas
cli
push
or
jb
push
dec
push
addb
rorb
jl
sti
xor
push
mov
push
orb
lock
pusha
mov
add
pop
fiaddl
ljmp
or
xchg
pop
lods
or
ds
push
hlt
dec
push
push
int
jg
add
adc
cli
je
add
and
scas
xchg
mov
cli
jmp
jge
test
sub
lea
inc
xor
adc
pop
les
add
or
cld
dec
dec
cltd
rorb
inc
xor
mov
jmp
cmp
dec
sbb
add
or
movsb
pop
and
aas
mov
and
stos
cmp
add
dec
jne
push
add
add
cmpsb
movsb
ds
cwtl
dec
jmp
and
mov
dec
mull
inc
add
push
mov
jge
xchg
incb
pushf
xchg
ret
lcall
insb
jne
jg
adc
cwtl
pop
addl
mov
jp
cmpsb
lcall
test
dec
cli
cltd
lock
sbb
pushl
add
ljmp
ljmp
cmpsb
nop
xchg
lds
add
adc
pop
add
cmp
jmp
inc
data16
mov
push
push
adcb
nop
xorb
pop
add
imul
aaa
mov
fwait
lds
or
inc
fimull
and
movb
cld
cld
jae
add
scas
push
pop
mov
stc
ror
jp
add
push
clc
lcall
adc
incb
mov
fcoms
stos
add
mov
enter
sub
outsb
repnz
jge
adc
xchg
add
scas
sub
cwtl
push
push
xor
hlt
addl
dec
jno
mov
popa
inc
pop
add
icebp
inc
adc
scas
add
sahf
adc
int
mov
pushf
sbb
cmp
add
test
and
sub
lds
jne
lahf
cli
xorb
jmp
add
sbb
mov
jmp
sbb
pop
das
xchg
insb
jmp
pusha
enter
adc
mov
add
popa
cmp
orl
inc
std
test
or
daa
jmp
adc
adc
mov
divb
add
pusha
cmp
jae
cmp
sbb
ljmp
mov
jo
or
movd
add
xor
xchg
js
or
or
push
add
dec
mov
mov
aas
fs
xorb
sbb
out
pop
enter
in
cld
jge
push
and
add
xor
int
add
sbb
nop
cmpsb
sub
pop
xchg
push
xchg
pushf
lock
addr16
xor
push
or
cmp
and
divl
add
call
cmpsb
lods
mov
and
pop
cmpsl
loop
add
enter
cltd
add
ror
xor
movsl
aam
cmc
add
lret
adc
push
inc
fst
and
add
lods
sbb
add
into
or
clc
cmpsb
inc
or
cld
int3
sub
add
test
cli
daa
lods
push
add
dec
sarb
add
clc
add
std
mov
dec
dec
insb
pop
daa
test
add
mov
rolb
and
fcoms
outsl
xor
add
push
daa
dec
imul
aam
pusha
mov
add
fldl2e
cmp
fdivs
add
xor
mulps
add
sbb
cmp
or
aad
push
adc
add
xchg
xchg
pop
add
lret
xchg
xchg
ret
xor
add
sbb
rcrb
aam
shrl
and
or
add
adc
push
mov
into
ds
cmp
aad
gs
dec
mov
add
xor
mov
add
sub
add
jno
insl
cmp
xchg
pop
ss
jns
hlt
add
or
dec
adc
push
add
pop
in
inc
pusha
sbb
add
fiadds
and
popl
xor
adc
pop
push
add
dec
xchg
jle
inc
adc
dec
nop
xor
les
or
pop
jo
dec
repnz
add
jg
jl
jge
mov
dec
add
or
jp
dec
iret
pcmpeqd
jmp
gs
jnp
popf
ret
movsl
insb
add
adc
mov
inc
aas
add
cmc
add
call
push
arpl
xor
icebp
xor
divb
testl
jge
cmp
cltd
hlt
jmp
cmp
aas
push
push
add
or
lmsw
in
jp
loopne
decl
sbb
xchg
sbb
xchg
imul
call
lock
incl
adc
pop
loopne
push
in
jl
xchg
lods
jnp
jmp
cmp
or
fsubs
add
lea
sub
push
inc
dec
add
popf
cmp
leave
adc
sbb
lret
push
mov
arpl
and
lods
jmp
enter
test
test
sbb
loop
dec
cmpsl
cmp
pop
dec
and
cmp
cmp
push
sbbb
add
ret
cmpsb
push
add
cs
int
rolb
add
inc
mov
ret
sub
lea
hlt
push
pop
clc
ret
xlat
mov
shll
jne
mov
repnz
aam
scas
cmp
rolb
push
lcall
call
clc
xorb
dec
shll
je
add
push
or
add
sub
pop
sbb
and
mov
xor
xor
hlt
and
adc
adc
sub
punpckhdq
mov
das
inc
xor
pop
clc
push
add
adc
xchg
arpl
clc
imul
push
dec
jp
lock
add
inc
icebp
jne
push
mov
nop
pop
sbb
repnz
cmp
pop
mov
push
or
jp
or
or
jne
jg
data16
adc
hlt
out
pop
jmp
setbe
gs
jne
xchg
mov
inc
mov
jecxz
decb
sti
jo
push
add
adc
lahf
jl
je
clc
xlat
and
add
mov
hlt
inc
push
lahf
add
sub
pop
sbb
int
push
add
mov
adc
call
cmp
cmp
into
orl
js
leave
jne
adc
sub
inc
data16
dec
je
je
add
inc
xlat
inc
mov
sbb
repz
lea
lcall
mov
int3
inc
iret
repnz
rolb
inc
cmp
add
push
enter
add
xor
pop
dec
pushf
jecxz
jb
lret
push
addr16
movsb
mov
cli
pop
xchg
rolb
inc
cmp
dec
adc
test
add
inc
xchg
lods
inc
lock
aaa
jne
add
jo
fbld
incl
inc
rorb
mov
jb
out
push
add
xor
fs
inc
shlb
outsb
sbb
into
push
add
and
loopne
adc
dec
cmpsl
and
add
pop
inc
out
dec
cmp
loope
loopne
add
test
inc
leave
or
je
pop
out
or
adc
nop
jbe
jb
adc
call
push
mov
shll
pop
rorb
dec
aas
fs
lds
pop
sbb
dec
flds
or
push
cmpsl
addl
mov
imul
repz
jg
add
fisubs
and
mov
scas
hlt
jge
repz
stc
data16
or
loopne
lahf
xchg
add
imul
push
add
jb
add
cs
add
adc
mov
add
add
cmp
scas
push
push
jne
add
push
inc
sub
hlt
inc
add
imull
or
or
int3
push
push
xchg
dec
loopne
subb
ja
jb
gs
jge
and
pop
arpl
decl
pop
fcoms
hlt
mov
ret
add
and
add
cmp
sub
clc
xchg
push
add
loope
or
mov
popf
popa
cmp
pop
push
xor
inc
push
mov
js
scas
iret
push
test
and
xor
roll
or
cmp
inc
add
pop
mov
cmp
ret
or
jne
inc
aam
add
dec
ljmp
lret
popa
ficompl
pushf
mov
jle
and
add
push
inc
xor
mov
add
js
pop
add
jnp
cmp
clc
lea
add
decb
loop
iret
jns
xor
sti
lock
add
int
add
sbb
push
add
pop
mov
in
add
aam
mov
cli
rolb
notb
jo
or
push
lea
movsb
loop
and
and
xchg
leave
pop
add
hlt
ret
lds
sti
cld
scas
add
scas
repz
insb
push
xchg
push
mov
leave
pop
push
cwtl
adc
inc
aam
xor
or
inc
jmp
pop
sub
shll
cmp
add
sbb
hlt
xor
dec
mov
or
push
adc
shrb
or
and
lock
mov
imul
mov
inc
sbb
dec
mov
mov
and
pusha
or
add
cmp
xchg
mov
push
and
les
and
leave
dec
add
sqrtps
add
push
add
add
jmp
mov
push
cmpl
sbb
mov
add
ss
inc
inc
leave
sub
add
push
cmp
pop
xchg
shrb
dec
mov
inc
das
add
fmuls
add
subb
push
sbb
cs
and
inc
add
ret
je
leave
adc
add
push
and
nop
mov
pop
push
lock
add
je
mov
mov
outsl
dec
imul
add
sub
cli
inc
xchg
in
pop
ret
mov
imul
push
add
fistpl
iret
push
and
or
push
lret
data16
sbb
fcomps
cwtl
add
push
inc
bound
mov
jb
add
mov
mov
sbb
adc
or
pop
dec
jne
js
decl
mov
mov
cmp
xchg
ret
and
dec
scas
divl
mov
sub
push
and
pop
sbb
fsubrs
inc
ljmp
ja
sbb
loope
pop
and
adc
cltd
mov
cmp
add
stos
aas
pop
mov
add
and
ja
jecxz
je
icebp
inc
jmp
cmp
add
inc
clc
mov
xor
add
mov
pushf
scas
inc
inc
mulb
je
adc
fiadds
push
jbe
push
pop
and
mov
movb
sbb
add
data16
nop
das
add
mov
cmp
je
fwait
dec
fnstsw
cmp
cs
add
dec
mov
es
ret
mov
stos
lret
add
jl
mov
inc
push
clc
fwait
pop
adc
or
ret
inc
rorl
int3
xor
pop
or
adc
pop
add
aas
test
int
ret
les
ret
push
iret
ret
add
jg
add
test
insb
movl
lods
cmovs
pop
mov
dec
or
hlt
pop
mov
lock
in
and
mov
inc
or
add
mov
push
sbb
jo
pushw
pop
jbe
inc
mov
mov
pop
add
sub
or
inc
xor
orb
leave
adc
add
mov
inc
sarl
push
adc
aas
dec
add
je
rep
pop
shlb
pop
pop
jmp
fiaddl
jp
add
adc
clc
rolb
mov
rcrb
pop
dec
pop
dec
clc
add
pop
cmp
jno
mov
cmp
add
ljmp
mov
xchg
stos
cmp
cmp
or
or
ret
sbb
lret
cmp
sahf
and
into
sub
loopne
or
fimull
pop
add
mov
jmp
inc
push
pop
mov
aad
or
pop
mov
dec
adc
rol
daa
add
loop
lret
adc
adc
insl
pop
add
lea
push
jp
add
mov
movsb
pop
pop
test
sub
jb
rcr
scas
add
rorl
sbb
movsb
add
adc
xlat
sbb
mov
jl
dec
je
inc
cmp
lea
hlt
add
rcll
lret
fmulp
jl
add
push
jp
sbb
jg
les
cmp
push
inc
mov
ret
testl
stc
or
xor
jg
hlt
sub
out
out
scas
adc
addb
sbb
add
add
enter
add
mov
pushf
inc
or
nop
ret
psraw
hlt
adc
push
andl
fisubrs
imul
mov
add
mov
and
add
call
sub
call
xor
out
mov
or
jecxz
inc
test
inc
xor
lds
mov
pop
shlb
imul
je
mov
sub
mov
inc
bound
lods
inc
add
push
xlat
fadds
lods
add
js
xchg
xchg
add
push
push
in
add
into
sbb
cmp
mov
push
pop
mov
push
ror
movsl
sbb
nop
pusha
adc
dec
sbb
hlt
daa
lret
cmp
test
xchg
clc
js
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
add
les
dec
mov
cmc
and
out
pop
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
add
movsb
lahf
fiadds
adc
jecxz
sbbl
call
inc
aam
repz
loope
push
jp
add
mov
mov
ds
xchg
push
cmpsb
scas
cld
push
add
jecxz
adcl
int3
cmp
add
in
xchg
cmp
jo
add
pop
cmp
mov
lock
shld
popf
add
add
clc
repz
mov
fldl
and
leave
push
pusha
les
jo
lock
loopne
adc
jnp
sbbb
cli
ja
addr16
rorl
add
call
rcrl
add
mov
push
mov
cmp
or
mov
pop
or
shlb
pop
adc
jns
testl
add
insb
add
std
rorb
pop
orb
push
jb
sbb
shl
popf
add
sbb
std
clc
or
jbe
pop
repz
pusha
sbb
inc
loop
out
test
pop
pop
inc
sar
outsl
sbb
into
push
xor
jmp
push
mov
or
adcl
pushl
icebp
lret
repnz
add
dec
ret
mov
aaa
pop
add
add
sub
push
shrb
xchg
sub
sahf
add
repz
dec
pop
push
add
enter
lock
jb
hlt
cltd
test
repnz
out
add
dec
outsb
and
inc
das
lret
add
test
mov
dec
jl
icebp
or
insb
ret
pop
stos
sbb
loop
rdtsc
add
sbb
add
sar
mov
jae
add
cltd
sar
cmp
scas
aas
sbb
push
pop
cmp
jne
xchg
mov
test
xchg
add
daa
aaa
incb
mov
cmpsb
or
ja
or
or
add
add
clc
and
dec
add
js
add
mov
or
pop
scas
push
iret
sub
pop
mov
adc
data16
in
inc
cmp
xor
push
ds
add
aas
data16
shrl
mov
add
dec
xchg
or
loope
adc
int3
push
sub
pop
mov
shl
clc
inc
dec
add
cmpb
sbb
mov
out
push
mov
and
mov
popa
inc
scas
add
movsl
cvtps2pi
orl
sub
mov
add
movsl
xor
pop
or
fcoms
enter
or
or
add
dec
push
addr16
xor
add
cmp
jge
or
mov
add
sbb
inc
add
decl
dec
jbe
or
popl
jmp
push
mov
add
loopne
mov
lods
loop
jmp
call
inc
and
push
cmp
cmp
sub
jl
dec
and
pop
lock
pop
inc
loopne
sub
pop
sti
cmpsl
push
subb
add
or
add
cmp
adc
add
add
dec
pop
sbb
shlb
pop
add
out
mov
mov
sub
add
mov
sti
inc
add
adc
out
adcb
or
add
xor
aas
ds
cmpsb
outsb
or
jnp
add
mov
lock
call
add
js
mov
pop
loopne
mov
push
or
test
call
cld
xor
mov
and
hlt
add
and
cmc
pop
arpl
pop
fsubl
lea
adc
jg
add
in
cmp
and
push
xchg
xor
mov
xchg
bound
and
cmp
push
hlt
xchg
lock
je
add
cmpsb
adc
cmp
faddl
fdivs
cmp
sbb
mov
inc
les
mov
add
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
cmp
push
and
enter
push
jb
call
and
inc
das
xor
pop
rol
add
adc
call
test
lock
add
adc
sub
dec
daa
add
or
sub
add
mov
je
add
and
dec
ja
cmp
pop
iret
lock
or
icebp
cmp
sbb
movb
and
xchg
test
in
clc
jb
cmp
sbb
andb
and
xchg
fbstp
loopne
loope
loop
ret
cmp
out
out
call
jmp
iret
ret
paddsb
in
jb
cmp
rcrl
inc
sarl
aad
xchg
xlat
mov
jb
cmp
sbb
shlb
and
xchg
filds
enter
jb
cmp
and
add
and
xchg
enter
jb
lret
and
and
sub
add
sbb
add
mov
mov
or
mov
and
mov
cmp
movsl
aaa
call
pop
loopne
xchg
cmp
inc
sbbb
or
imul
and
lcall
push
out
arpl
push
fildl
pop
add
mov
xchg
rcrl
clc
out
iret
nop
lods
out
sub
mov
push
inc
sbb
pop
cmp
add
arpl
add
ss
cmp
mov
add
adc
and
lahf
add
iret
adc
nop
cwtl
jnp
std
cmp
lock
add
add
or
jb
add
pop
push
hlt
pop
mov
xchg
mov
or
mov
cld
dec
sbb
inc
dec
mov
je
adcb
movsb
pop
sbb
and
pop
rol
loopne
addr16
inc
cmpsl
pusha
push
or
push
mov
shll
adc
inc
imul
nop
mov
pop
and
rolb
popa
outsb
xor
push
popf
pop
inc
rorb
scas
adc
add
push
jo
or
jbe
dec
lds
roll
sbb
pop
sub
mov
sub
add
dec
jo
sbb
fidivrl
ja
mov
shlb
cmpsb
insb
sti
popa
jne
cmc
mov
or
pop
nop
int
inc
lea
jae
mov
push
outsl
add
jl
and
cmpsl
nop
sbb
je
jo
es
fidivs
jg
cmp
pop
mov
rclb
imul
inc
adc
ja
add
jae
lds
mov
jl
mov
fldenv
hlt
or
jns
pop
gs
nop
in
in
lret
cwtl
xchg
add
push
je
arpl
push
sbbl
add
jo
pop
loopne
jns
out
mov
enter
push
popa
or
cld
sbb
cmp
push
enter
gs
dec
inc
inc
popa
dec
outsl
mov
insl
xchg
dec
orb
bound
jnp
jae
pop
mov
mov
pop
imul
cmp
test
outsb
cmp
popa
and
les
add
incl
imul
lods
rcrb
ljmp
or
in
stc
xchg
add
lahf
add
mov
mov
push
call
or
add
and
push
ljmp
mov
popf
loopne
mov
mov
dec
cmc
pop
ds
adc
insl
push
add
movsl
addr16
daa
jo
add
pop
std
lcall
dec
sub
xlat
shrl
aaa
pop
adc
cmp
mov
rorb
jp
lock
and
sub
and
mov
mov
mov
outsb
in
rorb
push
out
mov
pop
rcrl
adc
add
repz
je
sub
inc
add
or
clc
jg
pop
sub
sub
cmp
je
add
movzbl
push
xlat
sbb
pop
rcrb
xchg
nop
and
mov
adc
sub
aaa
adc
ret
add
mov
cmp
jecxz
add
js
shlb
add
add
cmp
repz
sbbb
add
push
jge
mov
repz
sbb
dec
sub
adc
nop
jnp
into
sub
inc
mov
jg
arpl
repnz
ret
jno
xchg
or
out
xor
add
xor
imul
scas
fdivrl
adc
and
inc
xchg
add
mov
loope
and
pop
hlt
dec
mov
pop
pop
aas
test
add
lock
adc
add
fisttpl
adc
inc
mov
cmp
add
or
and
dec
aas
sbb
add
jp
mov
pop
mov
aam
inc
test
hlt
xchg
imul
ja
test
mov
push
pop
daa
or
push
add
loopne
arpl
pop
add
pop
or
lods
add
fidivl
aaa
xor
xlat
xor
ss
push
add
mov
inc
call
repnz
pop
rol
movsb
test
out
mov
dec
sub
sbb
in
das
ret
dec
pop
cmp
add
mov
adc
mov
mov
xor
xchg
push
mov
negb
subb
movsb
aad
push
sub
stos
xor
mov
frstor
aas
std
mov
push
dec
jo
sub
sub
stos
push
and
xchg
push
rolb
cmp
loopne
jmp
jae
fldl
sbb
ret
sbb
clc
aas
sub
sbb
iret
rcr
push
inc
sub
cmp
add
sub
fs
add
jge
or
xor
call
mov
and
sub
sub
cmp
flds
mov
push
jge
xor
cmpsl
fsubl
adc
movsl
adc
add
popf
dec
pop
jmp
mov
shll
fmull
pop
push
ljmp
adc
in
and
adc
add
in
dec
inc
repz
add
add
mov
lcall
add
adc
inc
add
mov
add
xor
daa
add
dec
ror
pop
jg
fdivr
xchg
add
inc
and
sarl
ja
add
lock
push
iret
imul
push
imul
out
inc
test
incb
popf
add
jne
push
mov
cmp
push
pop
roll
lods
pusha
or
addl
mov
push
add
add
add
jbe
push
inc
cs
cmp
lock
push
add
dec
push
xchg
leave
or
enter
jb
test
jg
jnp
mov
xchg
add
mov
fs
mov
xchg
jne
add
jg
call
inc
add
clc
mov
ds
repz
dec
aaa
inc
shl
loopne
dec
shl
cmp
movl
rclb
cmp
cmc
add
mov
inc
addb
or
add
sahf
popa
jns
add
loop
cmpsb
xor
xor
add
mov
testl
cwtl
data16
mov
loope
sbb
mov
pop
adc
shll
add
bnd
cmpsb
mov
ltr
pop
cmpsl
dec
iret
or
dec
add
sub
addr16
sarb
add
sub
ret
pop
fmull
pop
lcall
fstp
add
xchg
dec
sbb
or
and
icebp
xor
mov
in
mov
xlat
ret
mov
aaa
cli
xor
movsb
lret
push
adc
roll
adc
lock
stos
and
sbb
mov
mov
out
popf
add
dec
cmp
mov
cmp
jg
inc
int3
fwait
lret
clc
inc
cs
add
pop
push
fs
call
lods
das
xor
push
addl
stos
sub
pop
aam
mov
pop
dec
aam
pop
fiaddl
mov
rol
les
add
gs
movsb
push
subb
xor
clc
dec
rolb
pop
mov
mov
nop
daa
pop
inc
call
and
cli
cmp
in
ljmp
sbb
test
lret
jo
xor
fldenv
push
lods
jae
add
pop
inc
xchg
rcrb
arpl
rolb
add
push
push
pop
dec
add
push
push
sub
je
add
adc
icebp
add
sbb
addb
lods
dec
daa
adc
enter
add
lock
lea
or
jmp
stos
and
add
pushf
ljmp
add
aad
lret
push
lock
sbb
and
or
call
adc
fld
cltd
jo
jge
in
sti
pop
sbb
dec
add
dec
jmp
cld
and
dec
inc
fadds
std
stc
lret
push
rolb
jmp
push
cmp
sub
cmp
and
add
xor
nop
mov
aaa
testl
roll
rorb
add
test
add
pop
adc
inc
shlb
and
hlt
dec
lock
or
cmp
mov
lods
add
and
js
nop
aas
pop
sub
adc
dec
add
call
mov
in
gs
sub
fisubrl
ljmp
xor
and
les
in
mov
and
mov
mov
jne
push
push
lods
xchg
sbb
imul
add
jmp
or
lret
add
shll
movsb
sub
ud0
push
mov
pusha
jl
pop
arpl
add
cmp
clc
sbb
sub
xor
cmp
cmp
aaa
imul
ret
cmp
add
add
xor
popf
push
sti
or
add
test
addb
or
dec
mov
es
je
pop
xchg
lods
and
add
mov
mov
add
cmp
pop
test
jne
add
movzbl
add
dec
js
push
sbb
iret
jp
xlat
and
dec
mov
inc
jns
pop
xor
jge
fiadds
and
and
push
jl
call
mov
dec
fsubrl
lock
out
add
data16
adc
imul
adc
push
cmc
sub
pop
jne
rcrb
repnz
and
add
xchg
add
orl
pop
jecxz
push
imul
inc
dec
mov
ret
xchg
add
lea
cli
sbb
or
mov
negb
jns
pop
xchg
jnp
add
add
pop
push
dec
push
movsl
rorb
dec
sahf
mov
add
or
jne
lret
add
loopne
clc
movsb
jbe
cmp
push
js
orl
cli
test
adc
and
cmp
pop
add
push
mull
aam
xchg
cltd
movsl
jnp
orl
mov
test
pop
mov
das
loope
mov
ret
mov
xchg
cmp
jmp
add
leave
and
mov
test
lods
andb
loopne
add
push
cmp
sbb
mov
out
jmp
or
pop
jl
xor
mulb
movsl
add
dec
loopne
and
lret
sub
xchg
sub
jecxz
aaa
dec
cld
stc
mov
inc
push
and
movl
mov
push
add
cld
mov
add
loope
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
add
mov
popf
cmp
loopne
sub
lcall
inc
iret
call
dec
xchg
rcrl
lret
push
flds
mov
mov
add
adc
xchg
xchg
icebp
add
arpl
out
push
aas
incb
or
into
mov
inc
outsb
and
gs
shll
add
sbb
xchg
xchg
pop
cmpsl
pop
imul
loopne
cmc
xor
movsb
clc
xor
cmpb
mov
inc
ljmp
sub
in
add
adc
pop
jecxz
add
xlat
outsb
add
lea
test
out
stos
cwtl
jnp
jmp
or
scas
rorb
pop
ret
add
add
jle
inc
sbb
push
dec
dec
cmpsl
dec
daa
or
jge
test
sub
cld
arpl
cmp
imul
xchg
sbb
mov
imul
inc
dec
aaa
mov
push
loopne
ret
xor
movsb
inc
push
fdivrs
jae
aam
pop
push
push
test
push
out
insb
pop
cmp
jo
sub
and
push
out
int
and
fmuls
ljmp
dec
adc
dec
ja
cmp
jmp
or
addl
daa
mov
xchg
clc
push
call
jle
add
in
sbb
dec
or
or
inc
add
jle
addb
pop
cmp
cltd
imul
jns
pusha
fadds
xchg
add
push
rorl
mov
adc
jo
in
roll
fdivs
testb
fstpl
arpl
and
or
int3
fstl
mov
cmc
pop
jge
imul
iret
hlt
in
in
and
insl
or
adc
sub
rclb
dec
pop
jo
cmp
cld
add
hlt
mov
pop
clc
pop
push
es
leave
inc
jno
dec
call
add
push
or
xor
push
add
mov
add
das
mov
adc
mov
and
cmpsb
or
iret
daa
add
call
push
pop
negl
add
and
add
pop
and
or
mov
sub
testb
nop
add
jg
sbb
jmp
inc
clc
popa
insb
cli
pcmpgtd
push
xchg
adc
xchg
loopne
lea
out
jle
or
mov
orb
shlb
daa
cmp
jle
es
popa
jb
or
add
xor
insb
cld
add
clc
cmp
pop
lret
add
push
mov
add
lahf
xorb
pop
dec
mov
cltd
mov
icebp
pop
insl
lds
add
mov
sbb
pop
sub
inc
fwait
mov
cmp
int3
add
orl
loope
fistl
std
je
inc
add
pusha
xchg
fcoms
jg
test
sarl
outsb
xchg
jl
ds
inc
xor
cmp
call
sub
cmp
fimuls
mov
add
in
add
push
test
jg
pushf
pop
add
pop
pop
aad
or
hlt
imul
out
loopne
xor
jno
orb
pop
xor
dec
lahf
repnz
stc
sbb
cmp
cmp
jl
or
and
pusha
imul
xor
mov
cwtl
or
mov
lcall
add
push
cmp
cs
imul
and
sub
nop
aaa
js
add
cld
lock
loopne
add
dec
mov
out
add
push
pop
ret
push
adc
adc
inc
mov
aas
data16
enter
dec
mov
mov
push
adc
jb
xchg
sbb
sub
fcoms
cmp
or
addl
push
inc
hlt
xor
mov
aad
stos
dec
sub
mov
pop
inc
and
mov
scas
add
fs
sub
loop
mov
sub
ret
int3
dec
loopne
sbb
dec
sbb
jecxz
dec
imul
or
sub
xor
lret
add
push
mov
add
call
add
mov
fldenv
xchg
or
lock
dec
add
push
xchg
xor
pop
mov
cltd
cld
cli
scas
cmp
loopne
fisubl
cmpsl
in
or
xchg
xchg
sbb
inc
lea
movsb
lret
scas
enter
add
push
cwtl
sbb
mov
insl
add
fldt
pop
jno
pop
pop
inc
lock
sahf
xchg
repnz
test
loopne
stc
test
in
mov
call
jmp
add
mov
lock
lcall
mov
add
cltd
or
incl
in
mov
lcall
add
mov
out
pop
mov
push
push
addb
jne
and
cld
cld
arpl
sbb
sbb
out
add
dec
dec
bnd
jno
aad
movb
add
add
or
sti
adc
aas
and
test
xchg
mov
add
shl
sub
je
sbb
and
push
push
lods
add
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
aad
add
push
test
mov
cld
xchg
jns
add
or
jmp
xchg
aas
pop
and
sarb
mov
pop
sbb
test
xor
push
mov
add
call
add
push
add
and
pop
sbb
push
das
test
ss
jne
rolb
sub
mov
adc
pop
aas
mov
mov
out
loopne
loop
adc
sbb
mov
mov
sbb
add
imul
add
enter
push
jmp
cmp
cmp
repnz
insb
outsl
and
inc
dec
sbb
and
push
push
push
cmp
cmp
clc
jno
imul
inc
pusha
mov
jp
or
xor
xchg
push
addb
cmp
add
push
inc
inc
or
dec
sti
cmpb
dec
test
add
xor
add
fistpl
pop
sbb
adc
add
add
clc
push
add
and
inc
lahf
loopne
jp
pop
jo
push
and
nop
sbb
test
jmp
adc
addb
mov
mov
sub
mov
sbbb
sti
or
xor
mov
in
dec
subb
sbb
movsl
jae
es
lahf
popl
sub
add
int3
ljmp
or
add
cmp
jne
pop
cmp
sti
dec
mov
mov
mov
dec
lods
add
cmp
xchg
inc
addb
cmpsb
jmp
shrb
negb
or
fadds
mov
adc
adc
or
push
xchg
ljmp
andb
mov
pop
adc
add
add
or
call
das
lock
dec
and
push
mov
dec
sbb
pop
and
mov
mov
cld
mov
add
and
dec
add
cmp
and
sbb
jae
adc
add
test
xchg
icebp
add
dec
pusha
mov
clc
sbb
jmp
mov
push
pop
mov
test
pop
les
inc
or
pop
add
jmp
jecxz
inc
pusha
push
addr16
add
imul
or
call
mov
add
pop
and
mov
in
pop
mov
dec
frndint
andb
mov
adc
popa
mov
orb
ss
mov
or
imul
sbb
dec
jg
inc
je
inc
loop
arpl
into
or
test
pop
out
xchg
jmp
pop
bndstx
pusha
rcll
add
in
sbb
ja
ljmp
shr
adc
inc
lock
jne
enter
pop
adc
sbb
or
mov
test
push
rclb
ljmp
push
or
iret
lock
call
add
fbld
push
das
or
mov
xor
adc
add
hlt
cwtl
popf
call
xor
xor
ret
fsts
clc
mov
xchg
add
in
jns
add
test
pop
movsb
rolb
das
insb
push
jne
addb
ljmp
cmp
push
jns
pop
orl
jnp
hlt
cmp
dec
mov
add
add
ljmp
mov
xchg
add
mov
into
push
enter
jno
or
add
jp
dec
inc
dec
or
shr
mov
lahf
aas
push
sti
mov
fcom
insl
pusha
daa
cmp
push
sbbb
orb
loop
or
and
dec
mov
xchg
movsl
dec
movsb
cld
je
test
cmc
addb
jmp
pop
add
adc
stos
add
dec
mov
pop
adc
adc
mov
pop
xlat
inc
cmp
xor
push
sbb
pop
dec
addb
sub
mov
adc
imul
cmp
or
sub
faddl
and
pop
daa
pushf
inc
aam
ja
inc
dec
das
add
mov
push
add
adc
add
fcoml
and
mov
jns
test
push
cld
pop
gs
std
and
int
ret
xchg
and
jmp
add
test
cs
xchg
js
mov
pop
push
jmp
movsb
add
outsl
or
jge
push
aas
je
addl
xor
fstl
pop
lods
add
lock
cmp
push
jmp
je
std
mov
adc
sbb
testl
jne
add
xor
jmp
pop
mov
or
add
add
ljmp
mov
sbb
inc
xor
or
or
jp
lock
mov
cmp
sbb
jne
push
dec
adc
sub
int3
xor
std
add
lcall
cmp
push
orb
dec
add
into
and
mov
cmp
lock
cmp
mov
dec
pop
repnz
nop
pop
rclb
add
clc
sub
lret
and
add
mov
or
clc
cmpsb
outsl
xchg
lods
divps
push
mov
loope
add
in
xchg
adc
jecxz
movsl
add
push
cmp
add
jae
in
jo
mov
pop
stc
inc
lods
sarb
add
add
fildll
je
jae
add
js
lahf
push
nop
clc
or
push
cwtl
jmp
mov
or
roll
push
sbb
js
lock
pop
pop
clc
add
jle
ffreep
jne
cld
cltd
pop
add
jmp
xor
imul
add
add
and
xchg
xor
add
call
mov
mov
mov
incb
sub
dec
sub
cwtl
and
push
mov
or
orb
imull
dec
faddl
jl
and
cmp
arpl
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
fdiv
dec
movsb
add
daa
add
pusha
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
outsb
add
adc
inc
add
cli
and
in
or
inc
bound
jg
shl
leave
xchg
push
adc
lods
sub
xor
pop
inc
sbb
push
jae
mov
adc
sub
add
pop
pop
repz
cmpsl
imul
movsb
xor
cmpl
jle
or
xchg
mov
lock
hlt
test
pop
or
jno
xor
test
add
mov
out
les
pop
add
andb
add
jmp
lock
add
sub
jb
cwtl
inc
dec
and
cmp
cmp
es
fidivs
adc
hlt
and
scas
add
or
jmp
sbb
cmp
jns
hlt
or
mov
push
and
es
es
add
sub
dec
movsl
daa
push
out
popa
invlpg
dec
add
jmp
jo
jecxz
stc
mov
movsl
and
mov
push
add
sub
loop
and
test
xchg
jge
add
clc
push
mov
jbe
cmp
or
and
jae
dec
das
and
xchg
add
add
sub
add
movsb
lahf
adc
push
cmp
jnp
cmp
je
cltd
cwtl
pushf
xchg
test
fildll
add
xor
mov
mov
xchg
adc
push
lea
ds
and
add
inc
ror
fdivl
in
cmp
cli
xchg
jb
adc
jecxz
in
sbb
mov
je
leave
push
fsub
cmp
xchg
mov
cmp
mov
push
cli
push
jl
dec
add
mov
nop
pop
bound
pop
cltd
pusha
add
sub
mov
pop
gs
add
mov
adc
stos
add
and
cmc
lret
in
call
test
incl
or
out
cltd
pop
movsb
jnp
add
mov
adc
dec
jmp
inc
sub
or
mov
sti
add
or
xchg
js
imul
jl
movsl
mov
inc
or
pop
pop
push
test
mov
rcr
xor
add
and
xchg
or
ss
inc
mov
push
add
push
push
cmp
sbb
and
jg
xchg
add
adc
test
pop
daa
cmpsl
mov
mov
pop
jl
add
stos
or
or
loop
and
and
orb
sub
aas
andb
dec
add
or
sbb
jle
add
int3
lea
push
sbbb
in
inc
jl
mov
add
inc
rclb
adcl
stc
jle
fcoms
sbb
sbb
cwtl
adc
inc
xchg
xchg
pop
mov
fsubl
xchg
mov
add
loope
fnstsw
add
aam
cs
movsl
repnz
jle
hlt
add
pushf
adc
leave
icebp
clc
pop
insl
popf
fwait
or
and
dec
loope
jle
cmp
rolb
cltd
fdivrs
mov
or
add
loope
test
jne
adc
fsts
add
add
mov
jnp
das
jbe
fmul
fcom
mov
dec
ljmp
es
add
cmc
lock
add
loopne
add
mov
in
lods
outsl
fs
insb
nop
pop
jns
push
stos
add
inc
xor
add
mov
xor
push
mov
mov
out
add
icebp
rorb
inc
dec
call
mov
hlt
push
les
nop
lock
mov
stos
imulb
hlt
xor
adc
jmp
popa
mov
nop
pop
pop
aad
loopne
cmp
pop
sbbl
pop
add
mov
mov
jno
dec
add
mov
or
pop
movmskps
xchg
sahf
adc
or
push
inc
inc
dec
mov
jmp
xchg
loopne
sub
jmp
jle
je
les
xchg
cmp
mov
dec
clc
mov
leave
into
or
adc
mov
jp
testb
cltd
test
dec
in
and
add
push
adc
add
add
mov
sbb
and
add
mov
adc
popa
push
in
aam
add
cmp
xlat
push
push
push
ds
popl
cmp
cmp
add
push
add
push
and
les
lods
inc
cmp
dec
sbb
hlt
rol
mov
add
jne
cmp
sub
add
lcall
test
cmp
mov
mov
adc
fwait
add
push
fmull
or
cwtl
ret
cltd
push
cmpb
decb
xchg
add
jg
cmp
cmp
loopne
add
inc
hlt
sbb
call
mov
hlt
das
add
sub
jle
xchg
je
add
or
xchg
pop
and
and
jge
mov
xor
lcall
mov
hlt
rolb
ja
sub
dec
add
xor
jmp
ljmp
and
inc
and
aas
mov
push
sub
loop
jbe
nop
dec
sub
pop
pop
and
add
aaa
cli
adc
lock
lock
mov
dec
je
add
lock
aaa
jle
faddl
sbb
cwtl
xlat
add
jmp
mov
cwtl
fwait
push
add
scas
adc
add
mov
jmp
adc
test
add
add
fimull
fldl
and
pop
call
dec
cmpl
add
mov
aam
and
insl
and
cmp
out
adc
dec
mov
in
mov
adcb
mov
xor
sub
repz
add
and
mov
lahf
add
push
arpl
popf
adc
add
adc
jae
sub
mov
add
mov
out
into
add
ljmp
ret
jg
jge
add
das
out
inc
cld
mov
insl
stos
adc
bound
mov
nop
hlt
mov
cwtl
enter
inc
push
or
das
lods
adc
rcll
mov
push
sti
xchg
mov
mov
lahf
add
xchg
add
ds
nop
mov
lea
push
dec
icebp
lahf
out
and
pop
mov
pop
imul
aam
xchg
add
jbe
add
or
xlat
sbb
icebp
pusha
shrl
pop
cwtl
mov
loopne
inc
add
xchg
mov
adc
push
pop
jmp
push
xchg
jns
lock
jmp
adc
scas
data16
or
dec
dec
in
cmp
mov
nop
xlat
mov
xchg
add
lea
cmp
add
sub
nop
add
push
shl
jb
sahf
cmp
mov
or
add
imul
add
and
sahf
push
test
lahf
pushf
mulps
add
loopne
aas
xchg
sbb
xchg
int3
sahf
cmc
pop
popl
pop
les
add
out
aas
sbb
sbb
mov
imul
add
or
imul
repnz
add
cwtl
add
fucomi
cmp
push
sub
lock
push
jg
push
cld
xlat
fldl
in
clc
popf
jne
push
pop
adc
lock
mov
mov
add
jmp
mov
insl
add
sub
mov
push
or
adc
pop
xor
enter
sbb
leave
push
adcb
add
into
push
xadd
adc
and
pop
and
sar
pop
es
add
dec
add
sahf
movsb
jge
fmul
jb
add
jbe
fs
sti
lret
push
enter
cld
pop
jbe
add
xor
or
dec
shl
fbld
je
pop
in
ret
pop
add
jmp
push
add
or
inc
add
push
adc
sub
dec
mov
fdivl
into
inc
add
loopne
aad
dec
inc
cmpsl
shll
pusha
sub
add
insl
loope
push
mov
and
roll
shrl
repz
popf
pop
mov
inc
xor
insl
mov
inc
add
push
in
cmc
into
add
or
push
adc
add
ds
add
xor
aaa
enter
sbb
xchg
adc
jmp
mov
push
add
add
andl
aas
inc
pop
pop
orl
push
or
or
push
test
js
jns
mov
nop
inc
pop
xchg
sbb
sbb
or
mov
in
mov
pop
jb
cmpl
jg
add
es
jno
add
push
popf
adc
inc
add
sub
les
mov
and
dec
test
pop
mov
add
cmpsb
in
and
or
test
add
mov
push
lea
mov
xchg
cs
hlt
cmpsb
add
inc
mov
cmp
arpl
push
movsbl
sarb
les
cltd
stos
cmp
aas
int3
jge
mov
or
ds
popf
mov
lea
adc
lock
rolb
fsubr
pop
cmpsb
xchg
inc
pop
xchg
and
and
test
leave
xor
mov
and
sbb
inc
adc
cli
xchg
sub
out
inc
mov
cmpsl
xchg
xor
arpl
mov
push
mov
jg
mov
sarl
cltd
shl
add
dec
or
movsl
sbb
jae
and
mov
push
call
shlb
ss
sbb
test
lock
jge
pop
test
ret
cld
loop
lret
push
add
lret
movsb
and
lock
repnz
add
das
jl
outsl
dec
and
aam
movsl
test
add
cmp
pop
fildl
dec
inc
fcmovb
icebp
out
add
aam
imul
and
jg
or
add
loop
mov
pusha
push
jge
push
inc
test
and
clc
mov
cmp
add
movsl
lahf
sbb
sub
add
inc
add
stos
or
xchg
bound
jb
adc
lock
clc
add
lcall
mov
stos
and
test
add
jle
hlt
sbb
insb
ljmp
xchg
pushf
ret
call
pop
aad
and
mov
or
or
fmuls
mov
push
adc
add
mov
mov
mov
xor
xchg
data16
cmp
jp
das
pusha
pop
or
addb
and
shlb
testl
test
mov
or
and
jb
xor
mov
jnp
jns
dec
orl
incb
test
sub
mov
push
mov
pop
pop
and
pop
inc
adc
je
jge
inc
dec
lock
add
xor
push
add
pop
push
adc
out
shll
inc
jle
xlat
add
test
xchg
loope
sub
idivb
addb
add
and
sub
sbb
incl
xor
add
inc
xorb
add
daa
hlt
ret
push
idivl
add
mov
jmp
add
mov
and
mov
add
loope
or
rclb
mov
adc
outsb
icebp
add
cmp
fwait
cmp
xlat
mov
add
push
leave
dec
mov
aas
mov
int3
add
shll
jne
sbb
jo
sub
loopne
jp
scas
inc
inc
and
or
or
aam
imul
add
mov
sub
add
mov
es
pusha
adc
lret
cli
cmc
ja
add
mov
je
stc
jns
push
cmp
mov
dec
sti
sub
std
inc
in
xor
cmpsb
pop
jnp
add
je
jl
in
call
add
mov
or
cwtl
pusha
aad
arpl
mov
aas
test
in
in
add
mov
pop
add
lret
add
sbb
gs
sub
ja
add
pop
cmp
add
add
mov
sub
adc
cli
jbe
imulb
movsl
cmp
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
repnz
push
add
pusha
inc
test
les
add
loopne
adc
in
inc
jecxz
dec
mov
jne
cs
loopne
int
mov
leave
mov
add
std
call
icebp
inc
nop
out
or
pop
sgdtl
mov
pushw
pavgb
xchg
add
aad
roll
pop
push
mov
push
adc
xchg
out
decb
nop
sub
sbbb
sbb
push
xchg
shrl
cmpsb
inc
add
and
jae
mov
fdivs
inc
mov
rol
stos
repz
mov
add
pop
repnz
nopl
jp
mov
and
test
dec
add
cmc
mov
add
jns
dec
rolb
jae
loope
outsb
mov
add
mov
imul
in
add
inc
addl
mov
sbb
clc
ss
mov
xchg
and
add
jo
insl
jmp
popa
xor
push
aaa
mov
cli
repnz
adc
cs
push
xor
dec
in
outsb
sbb
mov
xorb
aaa
inc
cmc
and
cld
lods
and
pop
inc
or
movsb
rorb
int3
inc
clc
mov
shll
fimuls
mov
sub
mov
add
mov
or
mov
int3
iret
loopne
sub
icebp
sti
enter
dec
repz
cmp
push
lret
in
push
fcomp
mov
inc
lret
pop
sete
sbb
aas
enter
push
and
dec
rolb
bound
mov
in
lds
gs
cld
ss
adc
add
mov
bound
pop
sub
lea
lock
jp
add
idiv
enter
ss
mov
jb
fs
cmp
and
sub
inc
pop
mov
add
rorb
jo
add
repz
bound
push
and
or
rcr
movb
into
movsl
test
scas
push
sub
add
cmp
add
pop
mov
lret
jmp
rcrb
inc
inc
xor
out
roll
icebp
mov
add
and
cmp
add
xchg
adc
xchg
enter
jae
inc
add
in
jo
popa
arpl
or
js
mov
inc
in
ret
dec
stos
add
adc
rolb
mov
lret
hlt
lock
add
dec
sbb
aas
mov
add
xor
cwtl
adc
clc
and
mov
sbb
rolb
jo
faddl
pusha
pusha
push
cld
xchg
pop
and
dec
inc
push
xor
out
mov
cltd
add
and
adc
and
sub
jp
jl
ret
dec
adc
cmpb
mov
push
cwtl
or
shlb
in
mov
push
and
movsl
or
mov
loopne
xor
add
fdivr
add
jb
and
xchg
dec
xchg
rcl
sub
int3
mov
add
and
cli
push
cli
shl
aas
inc
mov
repz
repz
inc
mov
sti
jno
inc
adc
movsb
xchg
nop
xor
push
adc
dec
pushf
mov
cwtl
std
cld
mov
nop
decb
orl
test
fucom
sbb
and
and
inc
and
aas
into
jo
adc
sti
mov
add
sti
xor
cmp
lock
cltd
js
pop
int3
dec
xor
sbb
or
push
aas
cmp
pop
cmp
cwtl
sbbb
add
adc
lahf
mov
aas
aas
out
add
adc
inc
xchg
rol
es
sbb
nop
mov
push
adc
sub
inc
pop
adc
jge
mov
add
xchg
arpl
push
lret
cmp
add
cmpb
jb
cmp
mov
add
push
cmpsl
jl
std
cld
clc
lds
adc
jg
push
jae
xchg
sbb
lea
mov
jge
add
movzbl
pop
adc
inc
or
or
mov
movsb
add
popf
xor
mov
clc
cltd
pop
add
loopne
or
push
mov
mov
add
jnp
pusha
ret
test
out
add
cmp
xchg
aas
cwtl
dec
and
test
jg
add
cmp
jl
or
clc
sbb
add
xchg
test
cmp
jnp
add
fldenv
sahf
mov
pop
xchg
je
mov
clc
pop
sbb
and
or
push
pop
rcll
mov
push
xor
sub
or
mov
dec
fcoms
sbb
or
xor
pop
out
mov
clc
adc
xchg
cmp
loop
add
andl
push
jo
mov
stos
xchg
push
mov
add
and
or
inc
dec
or
adc
xchg
sub
fdivr
and
jae
ret
cli
adc
jb
je
cmpl
jmp
sub
xor
and
roll
mov
add
repz
add
mov
or
add
push
ljmp
jecxz
jae
dec
lock
jne
stc
sub
jl
mull
mov
xchg
movsb
and
or
and
cmp
rcrb
cli
jae
fisttpll
add
mov
add
push
leave
and
sub
dec
sub
call
jg
push
mov
inc
loop
imul
cmp
test
dec
cld
jb
clts
pop
ret
and
inc
add
fstpt
or
pop
frstor
sub
sub
cmc
sub
add
dec
cli
sbb
inc
jp
add
cs
insl
adc
jae
cli
fildl
adc
xor
jne
fldl
xor
gs
pop
add
flds
imul
popa
sub
push
shll
pop
scas
mov
or
mov
mov
xlat
sbb
loopne
call
inc
add
pop
es
jg
adc
mov
mov
and
aaa
dec
fimuls
pop
or
stc
int3
add
shll
and
push
jle
push
sbb
adc
out
movb
scas
and
xchg
sbb
add
int3
dec
xlat
je
fidivrl
pop
mov
ljmp
sti
lock
jne
jecxz
pop
lods
cmp
daa
je
inc
and
add
out
loop
jne
pop
sbb
dec
pushf
add
and
dec
ret
rolb
lods
cmp
dec
shlb
sbb
imul
out
ljmp
add
mov
data16
mov
js
add
push
hlt
mov
call
add
pop
sub
jl
xor
shll
cmp
xchg
icebp
inc
orl
xor
filds
in
sti
cmp
push
in
shll
add
movsb
jno
add
cmpsl
xchg
sub
mov
mov
roll
sti
jmp
pop
in
test
push
sbb
dec
test
dec
sub
adc
iret
cmp
mov
push
imul
ret
cmp
dec
addb
add
sarb
pop
gs
popa
sub
jmp
xchg
sbb
lock
lea
ret
add
and
jne,pn
add
inc
out
push
mov
adc
and
dec
push
ds
mov
out
cmpsb
and
add
xor
js
add
or
stos
enter
mov
sbb
stc
add
inc
add
mov
out
mov
loopne
int3
add
inc
xor
pop
mov
lret
ficoms
mov
sbb
std
xstore-rng
cmpsl
pop
decl
jne
imul
or
xor
push
in
jle
lods
inc
je
jg
or
or
ret
xor
loope
add
insb
pop
jmp
mov
cmp
pop
inc
addl
mov
push
repnz
in
push
mov
xor
int3
rcrl
mov
mov
add
stc
jp
sub
test
add
cmpsl
gs
or
lea
mov
and
add
data16
testl
sbb
or
addb
je
add
cmp
inc
jo
jmp
cs
add
adc
push
inc
mov
pop
mov
inc
loopne
mov
add
cld
pop
fldt
fsubs
fldl
inc
cli
add
or
mov
clc
add
jne
lea
mov
fwait
mov
in
ffree
sbb
verr
xor
mov
and
or
lea
cmpb
or
pop
cmp
adcl
and
aam
xor
inc
fmull
add
js
push
adc
cmp
or
jmp
subl
xchg
dec
and
and
mov
outsb
cmp
shr
add
ret
push
push
sbb
mov
cs
enter
lret
mov
jo
jns
mov
call
xor
add
iret
dec
testb
add
mov
orb
cmpsl
sbb
add
movsb
push
rolb
and
or
pusha
js
filds
inc
insl
xlat
push
mov
ret
fidivl
repnz
mov
testb
les
in
add
dec
in
jmp
add
cmpsl
and
inc
and
leave
inc
cmp
cmp
dec
adc
mov
sub
pop
je
cli
aas
add
push
idivl
comiss
leave
loopne
sti
scas
aad
pop
call
rcrl
in
pop
loopne
scas
stos
mov
out
call
sarl
pushl
lds
inc
ljmp
stos
push
xchg
cmp
subb
push
adc
pop
cmp
into
je
mov
fisttps
sbb
and
add
test
ds
out
pop
cmp
ljmp
add
loopne
ds
aas
jmp
neg
call
test
sahf
mov
test
pop
and
add
lods
mov
lret
rol
jg
add
add
jae
fimull
nop
cmp
push
test
push
ljmp
cmovns
sub
es
es
cli
hlt
rol
ljmp
call
add
xchg
mov
add
jne
sbb
lock
add
push
aas
add
sub
notb
mov
mov
push
addr16
mov
pop
adc
pop
cmp
test
pop
out
sbb
je
and
repnz
shrb
add
cld
out
adc
clc
loopne
pop
add
lock
inc
and
dec
pop
rcrb
aad
cwtl
add
add
sbb
hlt
add
mov
sti
add
pop
and
leave
lret
pushf
xor
sbb
add
jo
iret
add
pop
xchg
pop
inc
push
sahf
sub
mov
mov
lods
and
xor
adc
shlb
add
push
push
ret
jo
dec
or
push
xor
push
inc
or
xchg
cmc
xchg
sub
add
rolb
xchg
fdivrs
dec
hlt
add
fninit
push
not
mov
add
inc
pop
sbb
mov
or
loopne
add
jno
jbe
push
repz
cmp
mov
push
popa
mov
shl
lods
push
js
out
stc
das
pushf
popa
fisttpl
jl
add
lea
imul
rcrb
sar
mov
mov
ret
rclb
add
daa
andb
jmp
or
add
loopne
add
out
outsb
lahf
add
clc
cmp
ja
mov
aad
jae
adc
adc
ja
add
dec
call
mov
add
push
sbb
lds
cmp
pop
add
int3
add
popf
or
add
xchg
mov
jae
call
add
sub
ret
jp
mov
jmp
and
cmp
pop
sbbb
inc
aaa
add
lea
inc
hlt
addl
call
cmp
push
add
test
jbe
inc
add
xor
int
add
add
adc
adc
inc
iret
sub
add
add
add
xor
or
jo
add
jne
aas
movsl
inc
adcb
jbe
cmp
scas
addb
mov
or
sbb
and
insl
mov
adc
clc
test
jo
nop
inc
decb
js
jmp
hlt
rcll
scas
adcl
xor
scas
or
decb
mov
push
pusha
mov
mov
movsl
push
aas
jne
add
subl
sub
movsb
add
mov
test
inc
add
sti
or
jne
call
push
mov
loopne
js
dec
inc
add
icebp
enter
sbbl
xor
adc
cmp
inc
dec
jne
fsts
lret
cmp
icebp
hlt
mov
divb
add
add
mov
nop
mov
or
xor
addb
aam
mov
sarb
inc
xchg
cmp
clc
add
add
loope
lcall
add
flds
sbb
loop
or
sbb
mov
loopne
pop
mov
sbb
xchg
xor
pop
cs
movups
and
add
xor
scas
push
sub
xor
pop
ja
cli
add
sub
in
xor
arpl
pushl
aas
dec
add
das
xchg
nop
jb
mov
jns
xchg
adc
and
movsl
div
outsl
leave
loopne
xchg
out
add
dec
mov
nop
add
adc
add
jne
xlat
pushf
rorb
les
jnp
bound
jle
cmpsb
add
cmp
mov
push
mov
sbb
js
add
sti
fcomp
push
add
jae
lds
sar
add
out
int3
aas
add
daa
jp
test
dec
outsb
shlb
or
dec
xchg
aam
add
mov
and
xchg
jge
stc
cmp
adc
je
clc
cld
push
into
jl
dec
xor
and
mov
inc
inc
inc
inc
inc
inc
loopne
add
dec
dec
dec
dec
dec
add
dec
push
push
push
push
push
push
inc
push
mov
pop
pop
add
arpl
addr16
push
insb
insl
outsb
pop
outsl
pop
add
jae
jne
ja
js
jns
xor
xor
xor
loopne
add
cmp
sub
cmp
add
pop
pop
jnp
sub
cmp
sub
and
sbb
or
or
lcall
sbb
push
ficoml
xchg
push
push
or
adc
mov
out
cld
mov
cs
decl
movsl
in
lahf
lcall
push
push
mov
insl
clc
dec
inc
add
add
cld
and
shlb
je
mov
add
cmp
mov
cmc
cmpsl
rcl
test
std
add
or
fmuls
lods
jb
mov
mov
add
cwtl
push
and
jge
mov
sahf
ds
mov
xorb
push
je
push
sub
subl
aaa
cs
shrb
jl
das
dec
ja
imul
adc
mov
or
inc
or
jne
out
cs
add
dec
inc
aas
mov
add
or
aas
push
insb
and
daa
sarl
add
rorb
lahf
jg
push
mov
into
and
add
mov
add
add
frndint
js
mov
inc
stos
mov
push
lock
str
xor
out
or
dec
sub
sti
add
add
repz
icebp
pop
add
ljmp
nop
dec
push
adc
cmp
ljmp
repnz
popf
jl
inc
jne
loope
lret
lea
pop
jmp
loop
pop
leave
ja
add
popf
rcrb
aam
add
mov
add
jne
add
adc
pop
insb
or
ret
add
jmp
mov
add
call
mov
adc
std
inc
fxch
shll
xchg
jmp
fmull
lock
pop
sahf
cmc
xchg
sbb
lds
add
les
add
mov
mov
add
cmp
pop
sbb
in
jmp
jg
les
int
jp
push
push
adc
push
add
xchg
cld
add
lods
inc
mov
adc
xchg
daa
cpuid
enter
pop
dec
fidivs
shl
jge
in
push
add
int3
and
lods
ja
mov
add
mov
sbb
push
xor
or
cmp
xor
inc
mov
icebp
add
pop
pop
and
push
adc
pop
and
icebp
jg
cmp
or
sbb
xchg
push
add
adc
mov
jg
sbb
cs
imul
out
mov
push
out
cmp
dec
cmp
mov
cmp
add
in
push
sbb
rcrl
mov
jge
jb
mov
sbb
jno
inc
ja
add
enter
ret
mov
add
xchg
sub
aas
mov
ret
lock
std
loope
mov
pushf
test
and
add
iret
xor
mov
push
jmp
push
add
test
mov
inc
ja
pop
xchg
ja
dec
shl
adc
xor
sarb
mov
inc
inc
ljmp
pop
cbtw
add
xchg
mov
sub
add
das
mov
clc
loop
xlat
pop
xchg
mov
xchg
jne
das
jg
mov
leave
cmp
add
subb
in
add
loop
ja
xchg
lret
add
fwait
insb
cwtl
jle
mov
in
inc
jle
lds
or
mov
add
rorl
jnp
xchg
add
xchg
inc
jo
or
add
or
ss
mov
push
mov
lcall
and
movups
hlt
xchg
add
adc
popa
or
popf
pop
add
in
push
push
js
out
test
ret
pop
fs
lock
sub
mov
ja
push
inc
sub
xor
mov
dec
xchg
out
push
add
dec
ss
cmc
imul
jg
inc
loope
jecxz
jb
dec
xor
ss
out
add
inc
inc
xchg
mov
jo
xor
xchg
add
cmpsb
jno
aad
mov
pop
cmp
add
es
scas
das
ficoml
fsubs
or
mov
add
inc
call
xlat
add
and
ja
push
jns
add
jne
xor
leave
add
jecxz
push
sub
cmp
dec
pop
addb
pop
adc
lret
cmp
sbb
adc
jmp
ja
jecxz
push
out
in
dec
mov
sti
add
data16
fsubrs
xor
xchg
add
inc
fs
xchg
push
cli
pop
inc
popa
nop
addb
jl
stos
mov
cmp
adcb
cmpsl
sub
int
dec
add
push
add
push
lea
add
sbb
andb
call
push
rclb
clc
fwait
roll
cmp
and
dec
mov
mov
mov
sbb
repnz
fstpl
fwait
sub
add
push
out
lea
dec
mov
jle
ss
adc
in
add
fistl
cmp
sub
pop
xor
or
inc
in
sub
loopne
ja
push
aad
sub
fs
inc
pusha
iret
xor
push
mov
fcmovnbe
dec
and
jne
add
xor
pop
add
addr16
pop
add
sub
adc
ret
loopne
imul
sub
pop
add
pusha
jge
add
cld
xor
dec
or
add
movb
xor
mov
jmp
mov
or
rolw
or
xor
xor
pop
into
jne
xor
and
jl
add
pop
negl
pavgw
add
loope
popa
jne
add
push
pop
add
jmp
into
sub
lods
add
inc
divl
mov
orb
sbb
inc
lret
add
add
mov
sub
push
loop
jp
roll
dec
cli
faddl
add
and
and
call
mov
pusha
loope
add
in
daa
and
jecxz
jne
push
out
test
pop
arpl
push
add
pop
push
jnp
xchg
push
push
mov
notb
pusha
push
into
add
pop
inc
inc
cmp
adc
icebp
add
rcrl
xor
into
lahf
addr16
cltd
dec
add
rcr
cli
mov
mov
sbb
add
or
or
rolb
xor
mov
test
add
inc
adc
jecxz
or
sbbb
shll
scas
das
add
movsb
cli
lret
add
les
mov
out
xor
mov
cmp
add
mov
les
sub
push
jne
ret
mov
jl
and
mov
pop
jle
es
les
lcall
into
add
and
iret
aas
mov
xor
insl
nop
cmp
pushf
add
or
scas
xchg
mov
mov
mov
xor
scas
aad
dec
cmpsb
mov
adc
pushl
aas
into
add
adc
adcl
stc
js
lock
add
repnz
in
inc
xor
out
cmp
push
inc
pop
or
push
add
call
cmp
stos
adc
shlb
mov
sbb
fcoms
fadds
cmpsl
loop
mov
clc
test
or
cmp
mov
push
mov
movsl
add
repnz
popf
push
and
lock
sub
jge,pt
mov
test
sbb
xor
loope
add
xchg
int3
xchg
lea
pop
ret
mov
push
lret
dec
in
arpl
out
adc
addr16
out
or
pop
add
pop
xchg
lret
sahf
fldpi
add
lahf
out
cmp
enter
div
mov
enter
cmp
and
imul
ret
dec
orb
sub
int3
test
popl
mov
push
orb
dec
push
adc
es
xor
mov
jns
rorb
test
xor
mov
jge
imul
or
dec
xchg
cmp
add
ja
add
bnd
or
add
sahf
inc
add
arpl
jmp
lret
jo
or
popa
stc
dec
add
sub
insb
js
sbb
lea
nop
or
enter
movsb
xor
repnz
mov
cmp
shlb
aaa
mov
or
enter
mov
movsb
incb
and
fiaddl
lds
sub
loopne
inc
cmp
xor
ds
mov
add
cmp
call
mov
pop
and
rcl
inc
cmpl
add
pop
add
add
and
pop
das
jle
cmp
xchg
sub
and
inc
mov
mov
dec
loopne
movl
lods
pop
fwait
and
mov
in
push
loopne
or
mov
std
and
pusha
testb
mov
xchg
loopne
push
sbb
sahf
cltd
faddl
cli
mov
adc
push
mov
fildl
aas
movsb
sbb
inc
xor
fmull
pushf
daa
cmpsl
hlt
subb
xchg
xchg
jge
push
out
inc
push
hlt
xor
jg
testb
fstpl
adc
add
scas
push
or
cld
xlat
add
aas
xchg
fisubs
sbb
add
pop
mov
test
leave
clc
cmpsl
jle
ds
adcb
push
add
ds
inc
add
les
pop
lods
leave
mov
pop
inc
push
mov
icebp
or
pusha
or
mov
fisttpll
mov
mov
add
pushf
sarb
pop
push
adc
fmuls
dec
imul
inc
insl
jae
test
jo
adc
mov
ds
test
jmp
add
std
clc
rcrb
cltd
lds
add
adc
or
mov
repz
out
test
adc
pusha
xor
ret
mov
stc
outsb
mov
shlb
jb
add
adc
xchg
push
adc
enter
ret
pop
les
jb
mov
pop
jg
sbbl
in
mov
mov
dec
or
cmp
xor
cld
inc
flds
add
lods
dec
mov
dec
mov
hlt
inc
or
lock
loopne
and
in
fiaddl
js
arpl
pop
cmpb
sub
out
add
push
inc
cmpsb
push
sub
and
test
inc
dec
fcom
add
mov
cli
out
repnz
pop
mov
clc
pushf
mov
push
unpckhps
shll
pop
sub
xor
add
jbe
rorb
mov
inc
mov
xlat
sub
sbb
sbb
mov
xchg
xor
hlt
bound
sub
mov
adc
xor
lods
add
shlb
cwtl
mov
add
in
xor
test
adc
test
icebp
dec
cwtl
das
or
rcll
into
fwait
add
mov
rorb
add
out
sbb
push
lds
mov
mov
lods
loop
ljmp
es
pusha
cwtl
mov
clc
add
jmp
xchg
movsl
mov
sbb
shl
cmp
mov
pop
jae
add
inc
mov
add
fwait
shll
fnstenv
stc
sub
add
push
dec
and
pop
xor
fcmove
rcl
aas
or
ja
mov
dec
jne
jp
sti
in
pcmpeqw
lods
add
xchg
adc
adc
cli
lods
add
lods
dec
or
clc
paddusb
aaa
mov
mov
insb
fisttpl
int
sub
sar
mov
mov
push
hlt
mov
add
mull
push
inc
cmp
mov
popa
sub
loope
fcomps
dec
mov
mov
mov
aas
cmpsl
inc
adc
enter
push
xchg
out
push
aad
sahf
add
out
loop
dec
enter
push
inc
and
dec
fwait
add
cmp
add
std
mov
popf
add
in
movsb
test
lods
inc
ds
pop
fs
mov
test
xor
dec
and
and
test
xor
testb
nop
or
call
dec
xlat
xchg
aad
rcl
in
addr16
sub
dec
jb
loopne
or
dec
nop
shrb
test
enter
pushf
dec
and
or
fldl
enter
mov
mov
add
ret
jae
dec
sub
add
popa
hlt
adc
push
mulb
xchg
fs
dec
add
cmovnp
not
cmp
in
inc
fstpl
js
add
jle
adc
mov
loope
dec
add
into
fldl
jb
add
mov
pop
jge
or
adc
pop
add
adc
clc
dec
fwait
add
int
mov
adc
repz
xchg
cmp
pushf
movl
cmp
add
das
push
add
out
xchg
ss
pop
add
and
in
mov
jnp
xchg
mov
inc
jo
sub
aam
mov
cli
lea
and
add
push
clc
cld
sbb
adc
pop
enter
mov
sub
leave
xchg
clc
das
add
adc
movsl
call
bound
add
jle
in
dec
add
or
jg
adc
mov
jne
add
sbb
fadds
das
add
pop
xchg
dec
subb
dec
jne
aad
filds
jnp
and
xor
mov
mov
aam
inc
add
jno
leave
sbb
inc
imul
in
lock
mov
add
loopne
sbb
push
mov
add
nop
or
repnz
jl
xchg
push
in
fcomip
push
lock
loope
jecxz
es
movups
push
divb
pop
dec
xchg
xor
lock
adc
sub
cmc
jmp
mov
imul
add
or
in
jo
inc
cwtl
rorl
pop
push
jmp
lcall
repz
cld
push
and
fmul
cs
in
xchg
out
add
loop
aam
and
or
in
gs
imul
xchg
jb
xor
mov
pop
std
mov
scas
sbb
out
push
and
push
lea
jne
mov
inc
pop
jp
nop
jb
push
gs
loop
aaa
xor
sub
clc
push
pop
les
cmp
cltd
arpl
scas
cwtl
aam
lret
add
lret
add
cmpsl
aam
jg
add
stos
int
push
lock
or
mov
or
dec
dec
pop
je
push
mov
int3
fistpll
pop
data16
sahf
and
jne
inc
orb
xchg
ljmpw
pop
jo
jnp
pop
mov
sbb
mov
rcll
pop
push
fs
es
mov
dec
xchg
imul
add
shlb
jne
or
lcall
sbb
lods
sarb
stos
and
and
lret
xor
xchg
xchg
inc
loope
clc
out
dec
sbb
mov
pop
push
orl
insb
rcl
daa
add
mov
add
push
mov
cmp
sub
lret
mov
call
insl
call
and
xchg
and
in
adc
jl
pushf
stos
jns
sbb
test
xchg
mov
popa
jns
add
adc
repz
add
mov
add
mov
cs
add
pushf
movsb
mov
dec
add
mov
cmpsl
rolb
jbe
inc
pop
movb
add
cmp
shll
imul
lock
add
and
cmp
mov
adcb
push
add
hlt
lea
pop
push
mov
mov
mov
mov
and
jecxz
mov
lcall
dec
into
mov
pop
pop
fmuls
jp
test
add
or
sbb
fcmovnbe
jecxz
in
mov
adc
adc
add
mov
jmp
dec
jno
mov
push
sbb
mov
or
push
xchg
fistl
inc
jne
fiaddl
sbb
push
or
nop
mov
or
data16
adc
loope
adc
pop
rcll
mov
pop
sti
add
sub
adcb
add
pop
lods
push
add
hlt
pop
mov
sbb
add
les
pop
dec
add
mov
add
sub
push
nop
add
mov
insb
gs
pop
data16
out
xchg
or
adc
add
pop
jg
jmp
clc
data16
or
mov
push
mov
push
adc
pop
rol
or
out
add
in
push
sub
mov
inc
adc
xor
mov
xchg
cli
xchg
pusha
emms
sub
xchg
test
pop
push
push
push
add
inc
push
or
add
je
pop
addps
pusha
jmp
or
out
sub
nop
adc
mov
test
mov
sub
add
inc
add
mov
ja
mov
fildl
add
dec
mov
add
push
xor
hlt
sub
mov
test
icebp
cs
dec
fldcw
scas
in
adc
hlt
xchg
add
sub
xor
and
adc
push
sub
dec
adc
add
dec
add
push
add
ret
mov
cs
xchg
add
adc
mov
pop
and
nop
ret
int3
adc
or
subb
daa
inc
xor
inc
push
or
dec
xor
mov
repz
pop
xchg
out
and
repnz
into
jb
lcall
add
mov
sub
inc
rcpps
inc
cmp
and
or
frstor
sbb
decl
or
clc
stos
pop
add
mov
rorb
add
cmp
add
jmp
adc
movb
lock
cmpb
mov
add
or
xor
cmpsl
faddl
jl
addr16
imul
adc
sbb
sbb
test
jl
fldenv
inc
and
push
movsb
xchg
inc
push
inc
scas
into
ljmp
push
in
and
movsl
sarb
or
sbb
xor
push
ja
fsubs
jne
add
sbb
movl
jge
and
add
sub
leave
add
nop
es
and
mov
add
mov
adc
movb
fdivrs
enter
add
or
dec
dec
xor
jbe
xor
sbb
imul
pop
or
movsb
fmul
and
out
push
cwtl
sarb
inc
sbb
pop
lock
lods
push
adc
push
sub
jge
push
add
shll
aad
lods
xorl
mov
add
call
cmp
inc
push
add
mov
pop
sahf
mov
adcb
add
mov
cmp
add
jne
mov
pop
sbb
sub
movsl
push
cmp
lods
inc
in
mov
in
xchg
push
lock
add
pop
cld
push
pop
lock
add
push
jns
pop
sub
daa
cmp
mov
push
lock
push
rolb
and
test
add
pusha
repz
add
cmp
test
cmp
or
cmp
push
add
jae
outsl
insl
dec
add
imul
shrb
call
scas
dec
add
cmp
clc
mov
add
or
cmp
xchg
inc
out
xchg
jmp
fbstp
mov
sub
add
incl
sbb
push
push
xor
dec
rcrb
fstl
mov
add
mov
dec
mov
imul
ja
xor
or
jb
std
add
mov
rol
pop
jg
cmp
mov
das
pop
fsubrl
add
nop
or
sbbl
pop
rclb
mov
add
pop
jns
out
mov
pop
ja
adc
pushl
jmp
push
pop
jle
sbb
add
mov
or
add
or
es
aaa
add
lahf
out
pop
xor
out
jno
ret
ficoms
andb
sub
dec
mov
jmp
outsl
cmp
lods
fistpl
rclb
test
add
jmp
add
xchg
int3
shrb
lock
jbe
mov
cmp
pusha
stc
pop
inc
dec
aas
adc
ja
shlb
sti
mov
sbb
xchg
stos
ret
xor
inc
in
mov
or
jp
add
decb
xor
sahf
les
add
xchg
fwait
ja
add
and
adc
push
sbbb
jmp
dec
mov
test
aas
lods
jg
dec
xchg
mov
mov
xor
and
xchg
ret
mov
xchg
adc
call
pop
repnz
ja
arpl
aas
aas
pushf
cmp
cld
adc
test
test
jnp
pop
sub
shrb
sbbb
ss
sub
pop
jge
fsubl
mov
push
cld
push
adcb
inc
sbb
sbb
call
add
outsl
insb
lods
add
inc
jp
lret
pop
inc
ja
repnz
jg
addr16
cmpl
sbb
dec
xor
push
push
dec
pop
repnz
fcoml
clc
add
xor
add
mov
sub
pop
xchg
mov
jbe
jle
dec
cmp
daa
dec
and
mov
hlt
in
jno
add
fldenv
out
add
popf
push
ss
add
xchg
cmp
stc
pop
add
push
pop
hlt
stos
jecxz
xchg
pop
push
mov
test
loope
testb
and
adc
cltd
lds
or
in
cmp
popf
pop
movsl
push
xchg
cmp
test
xchg
sub
mov
clc
push
pop
and
stc
jle
cli
adcb
sbb
cli
add
add
pusha
negl
mov
jo
adc
inc
int3
add
sbb
mov
and
nop
roll
add
enter
js
cmpsl
lock
add
or
and
clc
in
int3
jns
sub
adc
or
inc
cwtl
add
mov
je
in
mov
cmp
jo
sub
xchg
add
stc
jecxz
and
add
mov
sbb
add
mov
mov
pop
pop
push
dec
push
xor
push
movsl
mov
jnp
and
pop
adc
push
xchg
sbb
outsb
add
into
pusha
in
xchg
add
ret
bswap
clc
nop
jp
add
push
add
add
movsl
mov
ret
xor
jne
pop
lock
cmp
dec
lds
ret
movsb
pop
cmc
push
clc
mov
add
mov
filds
movsl
xor
out
push
mov
push
aas
ret
leave
pop
jge
es
roll
lcall
add
test
mov
xor
pop
cmp
add
fnstcw
jbe
pop
jns
sbb
push
or
jo
inc
inc
push
clc
and
sti
cli
jmp
not
sub
out
add
add
mov
in
int3
jmp
xor
in
pop
rolb
out
or
add
jp
int
cmc
clc
pushf
cmp
pop
push
call
sbb
and
pop
or
jns
jmp
and
neg
xchg
loopne
xor
out
adc
icebp
lods
jmp
add
insb
fists
add
or
push
lret
or
cmp
sbb
add
in
rcrb
inc
cmp
push
aas
cmp
mov
test
enter
popa
cli
xor
sbb
test
mov
or
xor
add
push
inc
in
mov
in
cmp
or
test
add
cmp
or
std
cwtl
inc
fisubl
add
add
pop
or
push
jg
add
out
iret
xchg
dec
in
mov
int
push
adc
aam
enter
add
inc
jmp
ret
jbe
cs
jl
sub
sub
pop
add
mov
je
mov
xor
mov
ficomps
xor
adc
push
adc
sbb
add
mov
shlb
and
pop
fildl
xor
addb
adc
rcrb
sbb
mov
sarl
or
mov
bound
test
flds
and
or
adc
loop
jmp
sbb
mov
stc
sarb
sub
add
cmp
fldenv
xor
inc
call
sub
cmpsb
add
sarl
faddl
add
jno
dec
jle
jne
add
xor
mov
jecxz
clc
lock
cli
jmp
adcb
mov
dec
adc
loop
cmp
fnstsw
insb
xor
adc
cwtl
mov
or
add
loop
in
subl
fiadds
call
in
pop
dec
add
xchg
test
cmp
and
lds
and
push
jmp
clc
xor
push
in
add
push
jmp
loope
loop
or
mov
loop
dec
push
dec
add
pop
inc
dec
adc
test
ud1
dec
insl
mov
daa
aam
adc
and
or
clc
dec
add
xor
push
dec
add
add
incb
fdivrl
and
jo
cwtl
les
loope
inc
ret
pop
testl
decb
fs
int
loopne
push
loopne
add
push
or
jae
lock
les
inc
loopne
aas
movb
add
addb
call
outsl
sub
lea
and
divb
jp
mov
pushl
pushw
orb
shl
scas
jns
inc
or
insb
mov
xor
les
push
inc
jb
aad
sbb
cltd
or
add
ja
outsb
inc
xchg
in
aas
add
cli
scas
inc
xor
add
cmp
jge
or
and
fsubl
sub
test
rorl
cmp
sub
out
add
add
mov
add
xchg
clc
shlb
ljmp
jge
sbb
lds
add
icebp
shr
adc
add
mov
movsb
push
cwtl
call
imul
pop
movl
out
cltd
loope
push
jp
push
or
mov
inc
or
mul
stc
out
jmp
sbb
and
imul
adc
paddb
push
stc
cli
stos
pusha
into
cs
fisubl
dec
shll
push
or
lsl
pop
lahf
scas
add
scas
cmpb
pop
and
test
xor
jb
loopne
add
xchg
icebp
stos
mov
xor
or
inc
xor
mov
add
xchg
sbb
adc
test
jo
fcomps
cwtl
subb
sbb
mov
inc
ljmp
adc
push
mov
lcall
es
pop
mov
inc
adc
hlt
xor
mov
cmp
loop
push
icebp
sub
inc
incl
and
xchg
jno
std
ret
loop
dec
lock
cmp
mov
cmpsb
and
add
fmull
mov
dec
fldl2t
mov
cmp
add
bound
call
mov
mov
loope
xchg
shrb
loop
xlat
sub
movsl
mov
cmc
add
push
pop
pop
es
pusha
les
add
rorb
jmp
mov
sbb
jle
add
xor
add
sti
adc
push
or
mov
add
das
inc
call
dec
subb
inc
add
fs
mov
psubw
scas
hlt
mov
adc
xchg
xor
shll
cwtl
enter
add
mov
xor
daa
cmp
xchg
add
loope
fildll
mov
pop
aaa
ret
add
lock
xrelease
push
xchg
ficoms
testl
in
adc
inc
aad
xor
xor
add
add
pusha
sbb
cmp
add
mov
jle
aas
mov
cmp
sbb
and
inc
add
xor
mov
cli
rolb
and
cmp
add
sub
repz
mov
push
ror
divb
push
xchg
adc
in
mov
addb
add
mov
popa
setge
xor
adc
add
cmp
or
in
push
sbb
inc
and
and
add
popa
test
add
adc
enter
call
lcall
cmp
mov
hlt
mov
cmpsl
pop
fwait
inc
incb
xlat
out
add
sbbl
push
cmp
bound
add
aam
cmp
cmp
shl
and
out
and
cmp
aam
flds
adc
mov
add
and
iret
add
mov
inc
nop
rolb
clc
jl
pop
add
sarb
or
gs
lods
les
add
stc
push
out
and
popa
add
inc
xchg
int3
out
add
mov
test
xchg
ljmp
add
inc
mov
in
xchg
adc
sbb
cmp
add
jo
or
pop
adcl
ret
inc
adc
ret
mov
cs
push
add
call
les
adc
add
pop
cmp
adcb
mov
test
nop
or
xchg
int3
rorb
or
sub
jge
out
ud0
xlat
cmp
inc
rcrl
add
xor
loopne
test
outsl
and
push
adc
shl
incb
and
sbb
fiadds
add
pop
adc
mov
inc
rolb
std
popl
imul
mov
mov
rcl
sub
sbb
adc
nop
ret
xchg
add
mov
clc
mov
popa
ljmp
arpl
mov
xchg
not
daa
mov
add
cs
sbb
pop
push
add
push
pop
std
jl
dec
pop
cmpsb
aas
cld
sahf
call
and
imul
mov
add
sub
pop
jg
add
ds
xchg
dec
xlat
add
daa
je
add
loop
push
stos
out
inc
add
mov
call
dec
xchg
addb
cmp
test
or
ljmp
inc
dec
incl
adc
xor
adcl
cmp
push
add
pop
mov
sub
jmp
js
fisttps
out
mov
pop
rcr
inc
cmp
mov
adc
mov
rorb
and
add
pop
fcomp
jmp
imul
push
xlat
out
icebp
or
add
mov
push
mov
cwtl
insb
sub
out
push
adc
mov
out
push
add
ss
cli
add
jge
sbb
sbbl
icebp
or
test
aas
and
add
add
scas
push
repz
repnz
jbe
xor
add
dec
int3
insb
outsl
insl
xchg
add
enter
or
ljmp
mov
and
test
jmp
cmc
jno
aaa
xor
pop
or
xchg
sti
xchg
and
cmp
lret
fldt
or
jle
add
repnz
aam
dec
aaa
sub
xchg
mov
inc
or
or
add
notl
jp
add
addr16
dec
fmuls
mov
inc
cmp
add
int3
aaa
dec
or
sbb
cltd
in
xor
pusha
into
or
cld
fiaddl
pushf
and
or
push
adc
adc
xchg
out
add
lds
addr16
jmp
jg
add
shrb
enter
clc
sub
xchg
add
sbb
sub
or
jle
and
les
js
pop
adcl
sbb
jo
dec
jmp
sti
call
sbb
or
adc
mov
mov
xorb
decb
jmp
out
nop
push
adc
or
add
jno
cs
pop
add
or
cmp
call
jmp
les
sub
add
inc
jne
xor
push
bound
call
push
jae
add
and
or
cmp
cmp
sub
cld
lret
call
xor
or
sbb
aas
rclb
ret
jae
add
loop
sbb
push
inc
xor
push
sbbl
inc
add
repnz
and
out
inc
or
dec
movd
test
xor
nop
sbb
adc
add
sbb
bnd
fmuls
cli
js
mov
cmp
pop
mov
mov
aaa
das
jno
cld
verr
pop
out
and
out
add
cmc
xor
inc
movsb
adc
in
sbb
jns
call
pop
push
push
mov
jp
dec
xchg
jnp
data16
and
inc
mov
aaa
movsb
adc
test
and
dec
xor
adc
scas
ja
pop
les
dec
mov
lods
add
jno
push
loopne
adc
jns
jg
or
les
loop
cmp
push
add
js
subb
add
pop
mov
lea
cmp
and
bound
mov
les
jns
cmp
mov
addr16
shl
cmp
hlt
mov
orb
test
xor
lds
iret
add
aas
xor
outsb
roll
add
punpcklbw
pop
adc
mov
add
test
add
push
nop
add
cmpsb
orb
mov
call
xchg
aam
jno
fcomp
adc
jmp
repnz
cmp
xor
jl
inc
or
adc
cmp
inc
push
cmpsl
daa
popa
xlat
jle
sub
ss
leave
or
inc
inc
lcall
fcoms
ud1
test
mov
and
add
and
test
ds
sbbb
sub
cmpsb
repz
aas
movsb
ret
push
pop
cltd
loopne
and
xlat
adc
test
subb
hlt
out
rcpps
mov
push
pop
mov
in
xchg
add
icebp
sub
js
and
lret
enter
cli
mov
jbe
or
fiadds
xchg
push
pop
xchg
or
xor
out
add
dec
clc
aad
add
dec
add
imul
jmp
sub
add
leave
sbb
push
xor
das
add
pop
mov
jb
call
pop
lea
shl
test
unpckhps
rcr
scas
arpl
pop
int3
or
jnp
add
xor
pop
jmp
sti
add
nop
jns
dec
aad
jnp
cli
jle
addl
idiv
add
lea
aam
xor
add
sub
fucom
sbb
sub
add
nop
sub
add
sub
sbbb
in
xor
jmp
adc
fcomps
mov
adc
dec
pop
push
add
aad
mov
in
sub
scas
aaa
mov
sbb
lds
jne
mov
add
jns
pop
cmp
les
add
mov
push
jl
test
aam
cmp
cs
pop
push
and
sbb
pop
or
xchg
adc
in
cmp
sbbb
inc
cmp
and
pop
and
cmp
sahf
jl
add
and
shll
inc
jg
out
iret
add
pop
xchg
lret
xchg
shrb
cmovnp
pushf
js
xchg
popl
fisttpl
xor
push
push
pop
cmp
loopne
sbb
repz
mov
sldt
push
push
adc
xor
jnp
cmp
pop
xchg
adc
sbb
sub
add
fdivr
jecxz
test
cld
mov
xor
push
pop
add
sub
lods
incl
jb
test
adc
daa
in
roll
mov
jp
mov
and
movsl
jns
arpl
into
push
lcall
pushf
cmp
leave
les
imul
dec
into
jmp
adc
pop
mov
ljmp
aas
ds
pop
xchg
or
inc
rorb
add
or
movsl
flds
dec
movsl
mov
std
adc
jmp
add
inc
pushl
adc
adc
les
inc
in
jns
filds
mov
outsl
out
sbb
mov
jl
xchg
xchg
adc
add
adcl
jns
add
jae
loope
loopne
push
adc
shrl
fimull
push
and
cwtl
aad
lret
sbb
or
adc
pop
or
push
hlt
mov
les
add
cmp
mov
jecxz
and
adc
pop
in
push
and
jo
imul
xchg
or
add
les
mov
arpl
pop
mov
adc
mov
fisubrs
pop
aas
and
push
inc
xor
inc
test
enter
and
mov
adc
or
clc
cld
pop
aas
mov
add
or
orl
cltd
les
and
jle
adc
mov
cmpsb
or
adc
push
jp
and
inc
icebp
pop
rorb
pop
pop
lcall
adc
out
mov
repnz
xchg
jmp
pusha
out
sahf
xor
das
lock
xchg
pop
lahf
shl
idivb
mov
pop
jle
pushf
pusha
pop
push
add
add
sub
in
pop
push
xor
addr16
cmc
add
add
fnstenv
popa
inc
hlt
xor
fcomip
mov
mov
das
add
mov
in
push
and
jl
add
push
scas
adc
fcmovnb
and
or
add
push
add
adc
es
mov
dec
ret
xor
ficoms
clc
mov
or
dec
es
popa
cmp
add
add
add
push
ds
xlat
and
sbb
xor
lret
orb
and
push
or
cmp
dec
std
add
sbb
mov
push
pop
push
aam
andl
sbb
adc
add
push
mov
xor
leave
pop
cmpl
add
orb
xchg
fidivl
add
mov
push
dec
stc
mov
aas
add
das
bswap
dec
adc
stos
pop
cmp
je
sbb
inc
cmp
xor
add
rcll
add
pushf
sbb
out
jno
mov
adc
push
sub
mov
add
or
adc
sub
inc
sbb
mov
jbe
cmp
add
add
push
nop
add
sti
xor
dec
xchg
add
test
add
add
repnz
loop
add
pop
mov
and
jl
xor
stc
xor
leave
clc
jo
adc
icebp
fisubrs
loopne
shl
repz
mov
ja
movsb
pusha
adc
lods
push
cmp
out
add
add
sbb
je
mov
sbb
mov
repz
add
call
xchg
mov
adc
and
test
mov
shl
movsl
into
imul
sbb
inc
faddl
out
in
push
sub
jge
xor
cmp
add
inc
xor
enter
push
add
clc
mov
std
or
cli
lods
push
add
jb
pop
xchg
xor
stos
mov
ljmp
sub
hlt
icebp
push
stc
daa
mov
lock
add
xchg
xchg
outsb
enter
mov
and
and
adc
fs
dec
divb
ds
cli
iret
clc
sti
jge
cld
cmpsb
sbb
jmp
pushf
push
mov
pop
dec
call
das
push
and
add
add
add
loopne
movsl
jno
movsb
cmp
inc
lods
sarb
imul
inc
adc
push
enter
icebp
add
loop
stos
inc
push
movb
andb
sbb
jb
add
xchg
and
mov
pop
jno
test
stos
adc
pop
sarb
shl
les
sub
jl
add
pop
int3
push
mov
adc
and
rclb
out
nop
andl
nop
enter
lahf
dec
popa
add
out
adc
add
adc
inc
in
or
add
out
daa
add
cmc
shrb
in
cmc
push
mov
inc
add
dec
inc
cmp
cmp
add
push
repnz
mov
jl
add
mov
mov
call
add
test
stc
adc
lock
xor
and
cmp
test
mulb
sub
xor
les
mov
andb
push
inc
inc
mov
cs
jae
fs
sbb
add
inc
fisubrs
and
cwtl
xlat
clc
enter
mov
aam
mov
mov
mov
cmp
roll
ljmp
dec
and
push
rclb
repz
loop
mov
daa
data16
push
and
dec
nop
jecxz
push
idiv
jg
push
es
add
inc
dec
jne
testb
cld
ja
mov
add
or
add
je
jcxz
and
mov
sbb
ret
add
aad
xchg
das
xor
pop
pop
jecxz
mov
jmp
pop
xor
insb
xchg
addb
xlat
jo
addb
jns
push
jg
js
dec
pop
mov
lds
int3
andb
orb
ror
or
jmp
or
pop
leave
rorb
orb
enter
sbb
sbb
fchs
sbb
rcr
fidivrl
inc
sbb
push
je
jo
sub
pop
sbbb
faddl
adc
aam
sbb
inc
adc
pop
adcb
inc
lock
mov
lret
rcl
int
rcl
shl
sbbb
xor
loopne
add
repz
jb
je
jo
add
add
shlb
loopne
add
cld
cmp
inc
add
cmpb
loope
leave
cmp
cmp
sti
clc
cmp
add
stc
cmp
loopne
or
sbb
inc
jmp
shrb
sub
loope
in
call
sub
sub
mov
into
or
repz
shll
mul
jecxz
outsb
and
shlb
and
cmc
mov
cmc
mov
mov
or
sub
cmpsb
xchg
shl
out
cmp
pop
insb
shrl
add
outsb
inc
scas
call
imul
stos
add
test
push
cmp
sarb
jg
jg
jg
jbe
sbb
jo
add
mov
jl
mov
je
sbb
ja
mov
sbb
jb
mov
mov
jae
inc
mov
out
jo
inc
mov
push
rcll
xchg
rolb
cmp
cmp
sbb
add
xchg
adcl
pop
sbbl
enter
push
sbbl
loopne
sarb
aas
inc
cwtl
mov
dec
aas
mov
dec
into
mov
push
dec
xchg
arpl
dec
inc
mov
inc
roll
shlb
inc
inc
xchg
sbb
loopne
sbb
cmpl
cmp
call
jecxz
in
pushf
mov
pop
rcrl
popf
movsb
push
shlb
mov
inc
and
and
push
add
nop
mov
mov
cmp
pop
popf
mov
pop
pop
pop
jle
inc
or
sbb
or
mov
call
mov
mov
add
jle
fs
pushf
add
adc
push
xchg
or
mov
mov
add
sbb
xor
add
sub
arpl
add
shrd
data16
sbb
pop
loopne
push
push
cld
add
cmp
or
add
ret
shr
add
pusha
mov
sar
jne
dec
or
add
call
pop
clc
sub
clc
cld
lds
pop
adc
add
jmp
jl
hlt
jg
jae
pop
inc
cld
imul
pop
inc
shlb
lods
cmp
cmp
pusha
add
jo
add
xorb
notl
add
mov
xchg
pop
and
xor
movl
jbe
lahf
lock
rcl
push
add
jne
imul
cwtl
mov
xchg
add
push
jp
stos
inc
pop
mov
jg
cs
add
lret
mov
pop
add
mov
stos
add
lret
sbb
add
inc
xorl
or
out
add
and
clc
aad
jno
add
push
pop
jle
and
insb
inc
mov
sub
fiadds
repz
and
pop
daa
and
add
pop
aad
add
add
ret
xlat
add
in
stc
cmp
sub
add
cmp
rcr
sbb
or
mov
push
adc
repnz
jno
add
xchg
arpl
into
rorl
pop
or
dec
ret
adcb
mov
sbb
fdivrp
loopne
ljmp
stos
mov
dec
outsl
mov
and
notl
mov
sbb
adcb
movsl
icebp
ret
nop
adc
and
sub
call
popl
test
addl
rolb
mov
sarb
cwtl
sub
xchg
jbe
add
mov
push
push
push
cli
mov
mov
arpl
stc
lods
rolb
and
xchg
pop
adc
out
pushf
aam
add
fsubs
ret
mov
es
push
lods
inc
dec
sub
inc
adc
and
inc
push
inc
movsl
xchg
hlt
xor
rclb
or
and
and
xor
inc
jmp
sbb
or
xor
adc
dec
dec
lods
testl
add
add
or
in
jb
push
push
lock
add
in
leave
repnz
inc
xor
adc
add
xchg
mov
mov
in
pop
mov
push
fs
xchg
jno
mov
arpl
sub
scas
fs
push
aas
popf
dec
sbb
test
xor
add
pop
iret
and
sbbl
stc
inc
cmp
dec
pop
and
inc
push
cs
aam
inc
dec
es
or
icebp
pop
push
test
sub
mov
ss
xor
repz
or
inc
repz
lret
lock
xchg
mov
icebp
mov
adc
sbb
rol
adc
add
dec
test
test
les
and
push
loopne
sbb
cld
and
inc
lret
inc
repz
mov
sub
or
adc
and
jns
pop
add
pop
jl
push
dec
dec
or
push
or
shrb
movsb
mov
dec
add
xchg
inc
iret
push
jmp
andb
je
push
add
ljmp
add
repnz
dec
mov
mov
imul
add
shr
in
jbe
pop
sbbb
inc
mov
add
int3
xor
dec
add
mov
int3
add
ret
mov
mov
test
cld
dec
popf
push
jnp
pushf
pop
aas
dec
jno
sbb
pusha
into
test
test
and
add
ret
xlat
in
add
cmp
in
add
push
std
pop
xor
and
add
aas
lods
clc
adc
push
push
push
add
je
jno
aas
jo
add
lret
mov
xlat
pop
sbb
adc
nop
push
or
pop
push
mov
in
pusha
inc
inc
sub
ds
mov
adc
sbb
push
ret
sbbb
or
leave
rep
in
cmpb
jae
adc
pop
lret
clc
inc
fldl
in
jo
ficomps
sub
jmp
iret
push
dec
in
cmp
pop
out
les
dec
sub
xlat
xchg
mov
add
pop
aam
dec
or
ud0
aad
add
push
mov
cmp
sahf
pop
pop
clc
movsb
loop
mov
pop
jns
add
xor
or
stos
shl
icebp
and
ss
clc
insl
cmc
and
in
push
push
push
lcall
adc
cmp
cli
les
lock
mov
xchg
ljmp
xchg
mov
cmp
repnz
add
dec
jg
psllq
jecxz
mov
mov
nop
cmp
and
je
inc
dec
inc
pop
cmp
xorl
xchg
jl
movzbl
push
sbb
mov
add
stc
pop
sbb
jl
jg
test
hlt
inc
cmp
gs
jne
add
push
sar
fmuls
rol
mov
sub
jns
lods
and
out
mov
mov
sarl
push
call
into
insb
sub
dec
add
pop
push
inc
enter
test
push
roll
ljmp
mov
add
lea
mov
nop
add
jne
pop
push
xor
cld
add
adc
std
inc
rclb
fsubs
mov
test
cli
jae
les
pop
adc
das
add
sti
xchg
cmp
jne
inc
xchg
mov
lcall
xor
add
out
stos
xchg
mov
and
inc
popf
shl
xor
decl
mov
pop
mov
add
mov
shlb
jae
dec
add
cmpl
test
mov
adc
stos
adc
or
lahf
addr16
add
adc
add
testl
fdivrl
and
add
xor
cmp
mov
mov
adc
daa
add
cld
cmovns
lcall
jp
push
cmp
dec
enter
add
pusha
leave
addb
inc
out
mov
mov
and
xor
mov
pop
int3
sub
ljmp
push
pusha
rolb
ret
cmp
out
or
lret
aas
add
sbb
and
inc
push
xchg
dec
decb
mov
xlat
and
mov
add
push
fidivl
inc
and
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
jle
mov
iret
mov
cli
push
sti
add
jno
mov
add
cltd
stos
sub
cmp
mov
fimuls
pop
iret
movsl
cmp
dec
or
dec
push
mov
std
add
stos
cmp
add
int3
push
arpl
ret
adc
jns
sbb
inc
outsl
mov
lret
mov
jne
push
cmp
add
das
dec
out
sub
push
push
pop
adc
add
mov
arpl
lock
pop
lret
push
and
add
and
fsubrl
mov
pop
or
pop
push
leave
call
push
sbb
lock
out
pop
mov
sbb
or
out
neg
push
shlb
paddusb
dec
js
add
out
test
mov
add
xor
lea
mov
add
daa
fs
pop
xlat
pusha
mov
and
movsl
hlt
lods
and
sub
add
ret
mov
movw
sub
push
repnz
cmp
incb
neg
ja
add
mov
adc
adc
push
dec
sub
mov
ljmp
add
or
loopne
add
mov
adc
cmpsb
or
out
dec
push
mov
add
mov
rorb
je
mov
cmp
pop
inc
add
mov
pop
add
daa
repnz
add
and
push
imul
cli
inc
add
cmpsl
jne
jmp
loop
loopne
or
mov
add
inc
jl
push
fsubl
or
shlb
mov
addr16
mov
push
scas
jbe
pop
add
mov
add
insb
inc
jb
add
dec
xor
pop
cmp
test
pop
cmp
inc
frstor
adc
loope
out
jo
movb
fcmovnu
or
inc
mov
ficompl
fnstcw
jle
xchg
add
icebp
dec
adc
int3
add
decb
cwtl
pop
jne
fists
mov
add
inc
mov
lock
sbb
inc
in
add
sahf
or
sub
inc
out
rorb
femms
call
scas
jne
xchg
or
loopne
pop
mov
pusha
pop
add
mov
repz
xor
lods
aam
leave
mov
push
dec
int3
fstpt
xor
filds
out
shlb
or
mov
add
inc
stos
out
adc
dec
add
fwait
xor
movzwl
push
or
cmc
movb
aas
pusha
adc
push
xor
push
add
rolb
add
mov
pavgb
push
sahf
push
jae
call
xor
inc
cmpsl
and
adc
sbb
arpl
inc
movl
lock
adc
xor
mov
or
push
add
jne
push
pop
push
add
dec
add
mov
push
pop
add
sbb
adc
add
pavgb
cli
push
lret
clc
push
aaa
add
in
subb
push
in
jg
dec
js
sbb
lods
add
pop
push
testl
out
lahf
test
add
cmp
adc
mov
iret
add
xor
jg
add
mov
inc
aaa
xchg
shrb
add
test
push
or
paddb
in
test
push
inc
xor
push
jo
add
iret
jb
and
mov
aas
lea
push
xchg
jno
add
cmp
add
pop
dec
ja
xlat
dec
scas
mov
jo
add
mov
imul
das
push
sbb
jmp
std
add
and
int
cli
sub
sti
inc
xchg
adc
std
shrl
xor
outsl
fs
andb
pop
insl
pop
sti
dec
loope
sbb
mov
fdivrs
pop
rorl
and
and
hlt
ljmp
add
call
xchg
mov
xrelease
add
andb
rol
leave
push
jne
je
and
xor
inc
pop
or
shrb
add
roll
ret
nop
add
cmpsl
fcoms
add
enter
inc
cmp
mov
jbe
pop
out
jb
nop
jo
add
sti
cmpsb
and
movsl
add
mov
loopne
in
outsl
push
lock
cmp
jnp
fs
sub
fdivrl
lods
pop
inc
gs
jl
or
pop
adc
test
pop
adc
inc
repz
nop
mov
into
les
lock
mov
and
xchg
jl
imul
gs
add
xorb
push
mov
rorb
ret
jmp
call
add
ja
cli
nop
mov
scas
add
sub
push
or
je
or
push
push
ret
jg
sbb
into
add
dec
pop
sbb
out
int
fsubrl
insb
xor
or
inc
push
mov
xor
or
arpl
in
pop
pop
jns
test
stos
pop
sbb
or
push
mov
and
rolb
xor
add
push
jne
jle
mov
or
xchg
loopne
pop
clc
lret
rcl
dec
add
add
das
stos
sub
sbb
pushf
xor
or
adc
loopne
inc
mov
pop
sarl
push
jb
add
js
mov
add
xlat
dec
cld
sbb
sub
pop
idiv
sbb
pusha
push
add
shlb
iret
inc
add
jmp
xlat
clc
jne
movb
call
aam
add
adc
clc
popa
xchg
aaa
movl
hlt
test
cmpsl
dec
or
mov
lahf
jbe
cmovae
fdivs
jae
and
loop
dec
testb
movsb
or
mov
mov
add
cli
test
inc
dec
dec
cltd
jbe
inc
add
and
sarl
jo
add
pop
mov
inc
call
pop
dec
je
push
xchg
sub
inc
imul
add
or
add
sbbb
push
call
add
ret
push
repnz
cmp
lods
mov
add
lds
xchg
repnz
pop
push
sub
iret
pusha
mov
add
xor
leave
add
add
jge
push
mov
dec
or
pusha
add
ret
movsl
js
je
jle
and
imul
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
ljmp
dec
add
inc
pop
lret
sbb
xor
xchg
xchg
inc
fadd
out
call
mov
dec
mov
add
add
pop
push
sbb
ret
xor
nop
addb
sub
inc
pushf
adc
xchg
mov
or
cmp
inc
jb
mov
or
pop
scas
hlt
or
fs
inc
rolb
add
decl
add
leave
xchg
jnp
addl
or
rolb
dec
sbb
fisttps
fimuls
in
cmp
add
and
sbb
test
movsl
mov
mov
negl
sbb
les
lock
add
add
pop
flds
ret
cmc
inc
arpl
adc
lea
aam
jmp
mov
sti
repz
pop
arpl
es
inc
mov
pop
cmp
test
js,pn
cmp
mov
inc
add
out
or
add
rolb
addl
adc
stos
fcompl
add
push
mov
inc
dec
xor
aas
sarb
add
add
fistl
clc
or
add
push
in
mov
inc
add
out
je
or
push
movsl
sbb
je
cmp
xor
inc
das
and
or
add
jae
or
testb
not
cmp
pop
add
enter
test
adc
pop
flds
cmp
push
cmpb
add
mov
pop
adc
add
dec
push
push
aam
loop
pop
adc
dec
lahf
dec
cmp
scas
cmp
imul
cwtl
imul
or
cmp
adc
scas
and
addb
add
or
pop
mov
inc
sahf
lret
adc
test
fs
add
das
cmp
add
xchg
xor
pop
aad
test
push
xor
pusha
mov
adcb
lret
mov
pop
ret
inc
jae
add
push
or
jl
cwtl
cmp
cmp
cltd
xchg
push
hlt
add
dec
lods
mov
xor
xlat
dec
repz
pop
test
shlb
out
loopne
add
push
pop
cmpsb
add
lret
dec
scas
sbb
out
mov
xor
lea
inc
fcoml
and
adc
dec
jne
popf
repz
adc
sbb
and
push
cld
ljmp
int3
rcrl
popl
sub
xor
dec
cli
jns
je
inc
lock
inc
add
push
and
out
sub
xchg
push
enter
inc
stos
mov
je
sub
movb
or
cmp
cmpl
bound
mov
add
adc
add
add
insl
and
cld
icebp
xchg
pop
xchg
push
or
sbb
sbb
mov
adc
clc
subb
loop
add
testb
push
rorb
pop
xlat
add
push
lock
cltd
lret
add
sbbl
inc
sbb
or
adc
dec
jbe
movsl
add
inc
pop
outsb
and
scas
add
inc
mov
mov
add
cmp
inc
xchg
push
pop
jne
in
sbb
cli
sub
jo
sub
les
or
dec
leave
test
add
mov
mov
push
ds
shrb
dec
sub
mov
adc
mov
inc
scas
jb
or
je
xchg
fnstenv
adc
push
add
push
call
pop
cmpsb
adc
int
mov
xor
cltd
mov
add
pop
push
ret
popf
jo
add
sti
push
and
pop
fists
cmp
sbb
js
push
add
pop
mov
and
rolb
push
and
inc
pop
push
add
lret
jne
fwait
push
inc
add
loop
push
sbb
or
add
pop
imul
lock
cmp
xor
push
mov
jle
xchg
sbb
adc
nop
cmpb
shrl
hlt
mov
movsl
sbbl
fadd
pop
test
or
xchg
or
mov
mov
sbb
jecxz
xchg
ret
sbb
add
and
hlt
mov
repnz
adc
inc
jo
add
cs
add
int
mov
xor
push
cs
lcall
mov
stos
shr
testl
inc
sti
cmp
xchg
push
nop
xchg
lock
add
repnz
jb
add
push
sub
push
mov
out
add
rol
loopne,pt
cmp
jl
aas
fadds
xorl
rcr
cmp
call
push
add
sub
mov
and
or
mov
roll
rorb
add
data16
stos
xchg
jp
lret
je
in
add
ror
fsub
jmp
or
add
pop
dec
cmp
jge
andl
add
push
push
add
dec
fs
mov
lcall
imul
movsl
jae
adc
mov
pop
adc
xor
add
or
sbb
and
xor
stos
test
add
mov
mov
push
jecxz
lahf
push
cmc
lock
mov
add
xor
mov
outsb
aas
and
gs
jae
xor
mov
xchg
js
ljmp
sbb
andb
mov
mov
push
mov
call
dec
cltd
push
add
dec
adc
pop
pop
pushf
sub
inc
add
test
pop
ss
loope
mov
loop
add
sbb
push
adc
add
pop
adc
ja
add
test
add
outsb
push
leave
adc
sbb
dec
jbe
cmp
es
int3
adc
mov
pop
pushf
xchg
inc
shll
and
arpl
les
add
or
loopne
inc
jg
add
repnz
pop
clc
out
arpl
add
add
pop
jg
add
inc
push
mov
add
cmp
shll
shlb
sbb
push
outsb
xor
push
or
and
add
add
add
stos
add
mov
add
iret
pop
xor
xlat
nop
mov
loopne
stos
xor
pop
rolb
add
xor
mov
add
inc
mov
bnd
in
testb
aam
push
cmpsb
pop
jb
mov
push
pop
adc
stos
out
add
cmpsl
push
test
add
subl
cli
pop
cli
pop
pop
in
loopne
sub
repz
mull
dec
stc
movsb
in
lahf
add
pop
lods
pop
sbb
pop
aas
shrb
or
lds
add
inc
adc
fldl
lret
les
pop
adc
scas
sbbb
add
jg
arpl
in
add
test
int3
add
and
inc
or
cmp
push
add
adc
push
push
notl
jo,pn
push
cmp
adc
insb
lea
testl
xor
fs
adc
mov
adc
stos
popa
arpl
fnstenv
rcrb
mov
data16
mov
pop
fs
or
div
loopne
cmc
ds
add
popl
push
mov
repz
push
ror
clc
in
push
and
enter
sub
je
add
stos
mov
add
xchg
add
push
sbb
pop
aaa
test
xchg
adc
push
add
pop
add
pop
nop
sbb
sbb
cltd
push
sbb
mov
add
xor
cmp
or
test
sbbb
xorl
mov
pop
or
sbb
or
test
pop
add
mov
sbb
inc
adc
pop
jge
push
sub
fs
cmp
xchg
inc
test
stos
push
dec
lds
popa
sbb
push
add
inc
inc
xor
add
mov
aam
stc
add
ret
or
push
sti
adc
fadd
add
jmp
and
push
cld
push
or
cmp
addb
cltd
unpcklps
jmp
xchg
jo
psubd
sub
daa
lahf
shlb
jbe
push
pop
pusha
test
mov
adc
sbb
pop
sub
dec
xor
mov
xor
arpl
jnp
sub
or
icebp
pop
inc
and
add
mov
push
lret
pop
push
add
dec
cld
mov
sub
outsl
jbe
sub
xchg
push
fisttpl
mov
inc
pop
and
fildll
add
rolb
jns
xor
cli
fdivrl
cld
or
jnp
cmpsl
push
add
leave
jp
aaa
ret
and
xor
add
and
les
sbb
add
cmp
sbb
in
xchg
mov
adc
pusha
and
pop
dec
addr16
xlat
push
aas
mov
mov
and
rcrb
testl
push
test
and
ss
ljmp
lods
cmp
sbb
popa
push
test
insl
sahf
in
push
std
add
test
iret
sbb
sub
add
or
pop
sub
inc
sbb
lar
and
jge
jb
inc
xor
iret
aad
leave
sbb
mov
in
dec
add
cmp
aas
xchg
sub
pop
sbb
mov
and
or
push
test
mov
push
stos
cmpsl
add
or
inc
divl
hlt
fidivrl
sub
mov
test
cmp
add
cmp
pop
fcoms
aaa
test
into
add
mov
sbb
jbe
mov
outsb
test
cmp
jbe
andb
rcll
mov
and
imul
jle
call
les
pusha
imul
jbe
xchg
mov
sbb
mov
rcr
lock
add
adc
sbb
mov
cmp
add
adc
cmpsl
loopne
add
dec
mov
rcll
das
nop
jl
and
ficompl
mov
and
cmpsb
orb
adc
scas
movsl
xchg
add
xchg
push
adc
xchg
aaa
add
add
outsl
daa
add
push
dec
aam
or
pop
cmpb
mov
mov
je
jns
sbb
das
es
lcall
lods
add
daa
cli
mov
and
ljmp
lahf
push
adc
call
pop
imul
popa
sbb
adc
aad
inc
xchg
pop
lcall
lds
add
movsb
mov
inc
pop
xchg
add
xchg
ja
mov
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
jns
js
nop
adc
int3
cmpsb
subb
leave
mov
daa
iret
ret
shrl
mov
adc
mov
fdivrs
jnp
adc
imul
or
add
movsl
fnstsw
fstps
fcoms
mov
adc
popf
add
or
add
movsb
pop
fimull
sub
insl
xor
mov
push
enter
pop
jp
cwtl
xchg
fs
jge,pn
fidivl
out
fdivrs
add
sbb
mov
fbld
push
pusha
aas
jnp
dec
or
pop
dec
jp
mov
fwait
inc
cmp
inc
push
jns
push
add
loope
push
pop
mov
pop
jle
insl
adcb
push
movsl
add
add
stos
push
or
sahf
enter
add
or
mov
and
inc
enter
add
icebp
mull
add
dec
or
or
pop
add
cld
push
cmp
icebp
xchg
adc
and
sbb
cmp
jl
mov
mov
push
inc
addr16
push
jmp
cmpsb
add
gs
cmp
and
cmp
push
push
add
sub
pusha
adc
jge
pop
and
xchg
cmp
popa
cmp
gs
lcall
inc
outsl
pop
jns
popf
inc
lret
fiadds
sub
sub
fildl
test
lret
ljmp
repz
add
cli
cmpsb
adc
add
add
sbb
jecxz
movsb
mov
lea
stos
repnz
add
push
idivl
loop
cmp
nop
jmp
jne
jno
jg,pn
test
add
xchg
lods
cmp
or
xor
xor
in
sub
or
jae
add
ja
push
iret
loopne
inc
sub
add
push
arpl
popa
inc
jge
ja
push
jbe
outsb
addr16
add
dec
push
add
call
add
cmp
sahf
imul
push
imul
jge
push
pop
jl
nop
jp
push
outsb
xor
cld
bound
clc
js
pop
pusha
inc
mov
gs
push
jg
arpl
imul
jns
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
popa
jb
jbe
pusha
add
data16
test
push
jno
add
arpl
jl
sub
outsb
data16
dec
push
jbe
ja
add
mov
inc
shll
subl
outsl
cmp
bound
sbb
inc
push
nop
ja
jo
and
inc
test
cmp
jb
pop
addr16
popa
loopne
push
bnd
test
mov
mov
imul
add
fs
inc
decb
add
dec
gs
imul
sti
and
xchg
pusha
add
outsb
dec
push
add
xchg
sbb
inc
adc
adc
inc
addr16
jbe
mov
ds
cmp
bound
insl
data16
jp
mov
and
sub
iret
loopne
aaa
loop
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
adc
addl
sub
lock
loope
pusha
inc
adc
add
test
push
xchg
ss
popa
cwtl
push
cmp
fmull
fiadds
cwtl
or
add
daa
xchg
in
call
add
mov
add
jae
or
inc
pushf
mov
pop
mov
inc
and
add
xor
sbb
or
jae
add
push
dec
das
xor
xor
test
cmpb
outsb
inc
std
add
mov
insb
add
or
leave
or
and
out
add
push
call
and
cli
pop
add
arpl
cmpb
aam
sub
ret
jg
and
push
int3
add
or
js
jle
xor
push
lock
inc
jne
jp
cmp
mov
bswap
fstps
cmp
out
and
loop
ds
lods
pop
mov
pop
hlt
xor
loopne
inc
enter
rol
cmp
jmp
pop
push
push
mov
pavgb
push
dec
or
addl
sti
lret
jle
cld
iret
mov
mov
push
add
xor
add
fsubrp
fistl
adc
cmp
scas
adc
inc
mov
mov
mov
add
cmp
and
inc
adc
add
jl
mov
push
add
and
mov
pusha
inc
pop
mov
out
sub
add
test
repz
and
pop
jge
mov
je
xor
and
data16
out
and
or
add
dec
xchg
sar
adc
sbb
and
sub
sub
xorl
inc
add
cmp
enter
dec
out
add
pusha
imul
movsl
xchg
push
cmp
sbb
subb
repnz
in
lcall
cmp
movsl
mov
pusha
ljmp
outsl
and
insb
ljmp
loop
aaa
xchg
jl
mov
lahf
push
ss
mov
mov
mov
lods
xchg
sarb
xchg
mov
out
out
clc
add
or
int
fstl
mov
xlat
sub
rcl
xor
into
cli
add
call
enter
and
ret
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
push
call
cs
adc
ja
mov
jo
and
rolb
lds
lock
call
mov
add
ja
jge
pop
mov
push
lods
inc
je
cli
sub
test
sarb
enter
add
sbb
inc
sbb
loop
aas
cmp
push
sub
xor
pop
xor
and
lds
mov
jp
call
roll
cltd
pop
add
or
das
rcrb
add
daa
xchg
ds
pop
rcrb
fistpll
lea
in
stos
int3
test
adc
inc
pop
or
add
rcrb
movsb
loope,pt
mov
adc
cmp
jle
xor
rolb
jg
add
and
incl
in
or
xchg
sbbb
mov
add
ljmp
push
fnsave
xlat
shrb
sar
jae
cmpsb
and
fdivs
jne
add
push
divb
jle
add
pop
sub
shll
fcomps
mov
in
icebp
sbb
xchg
mov
jae
stos
push
mov
ds
mov
cmc
xchg
cmp
in
out
xlat
test
test
inc
cltd
cmp
or
jne
inc
inc
or
jmp
add
add
cmp
mov
push
mov
aam
das
lds
cmp
adc
icebp
push
push
xor
cmpb
xchg
jmp
cmp
cmp
sub
mov
lret
xchg
les
add
cmp
pop
or
pusha
loope
insl
xchg
adc
add
cmp
insb
sbb
push
add
mov
jbe
add
jb
lcall
push
mov
add
add
jmp
sub
je
mov
and
inc
jle
ret
adc
loope
add
nop
mov
cmp
mov
cmp
inc
mov
stos
adc
xchg
mov
add
xor
or
push
add
add
je
or
aam
xor
pop
les
add
sub
pusha
pop
mov
nop
xchg
ret
mov
cmp
pop
outsb
fs
outsl
jne
or
add
mov
enter
add
cmp
sub
popa
fadds
jae
or
push
int
mov
sti
jbe
add
dec
xlat
sarb
clc
ljmp
add
push
jns
loopne
fmull
cmp
out
je
filds
lcall
push
cmpsb
iret
pop
test
rolb
test
in
je
add
lret
inc
loopne
loopne
movq
mov
mov
incl
aad
or
mov
bound
add
dec
cmp
cmc
paddusb
inc
or
leave
and
nop
repnz
clc
mov
add
sti
cli
rolb
or
push
inc
xchg
sub
fcmovb
or
jecxz
mov
add
add
cmp
hlt
xchg
xchg
movsb
push
ja
add
adc
cmp
rorb
push
pop
jmp
sbb
les
sub
pop
add
cmp
ret
fcoms
mov
loopne
pop
add
push
outsl
mov
fstpt
inc
ret
pop
into
pop
pop
addr16
jecxz
jg
and
adc
scas
rcll
shlb
jae
push
lods
rcrb
mov
leave
loope
fwait
clc
add
out
add
daa
cmp
xorb
add
shl
dec
add
daa
outsl
repz
mov
push
dec
push
add
subb
orb
add
imul
inc
pusha
mov
adcb
je
mov
loopne
and
ret
fistps
in
xchg
lock
xchg
pop
dec
int3
in
mov
cmc
inc
cld
xchg
push
push
rol
cs
add
push
mov
jo
cli
daa
decb
pop
add
xor
inc
stc
pop
cmp
dec
test
subb
addl
mov
decl
fs
push
rcl
pop
bound
stc
push
aam
inc
ja
pop
cmp
push
mov
push
les
sbb
and
es
mov
int
jbe
add
pusha
xchg
adc
push
mov
cmp
pop
in
ljmp
inc
sar
sbb
xchg
packsswb
out
and
repnz
lock
mov
sbb
nop
aad
push
add
sbb
cmp
adcb
lret
and
in
enter
xchg
xchg
sub
mov
cs
imul
in
ret
cmp
sub
add
div
test
xchg
hlt
out
xchg
in
sub
add
xchg
outsb
rorl
and
inc
jle
sbb
cmp
ret
push
xlat
jo
push
call
addb
jmp
jg
jnp
mov
sub
cmp
call
adc
push
cli
shll
add
imull
add
add
in
shll
lds
ret
xor
pusha
loop
add
test
pop
call
loopne
aam
add
std
push
mov
add
inc
mov
pop
pusha
dec
mov
pushf
inc
cmp
pop
andb
je
add
jle
xchg
lock
add
mov
addl
or
in
fs
sbb
bound
jnp
mov
les
pusha
adc
pop
loopne
sbb
jmp
xor
shlb
jmp
aam
addb
cmp
ffreep
sbb
add
lock
cmc
adc
shr
add
mov
dec
cmpsl
call
jne
cmp
jae
inc
add
loopne
nop
add
bswap
sub
enter
je
and
insb
add
dec
fincstp
sarl
sub
fisttps
push
jb
lds
fidivrs
mov
add
lret
xor
hlt
or
push
ret
pop
cmp
mov
or
aaa
add
lret
jbe
dec
mov
mov
test
mov
test
rcl
fdivrs
cmpsl
adc
mov
addb
pusha
jg
mov
sub
daa
push
sub
or
xor
subl
call
jbe
pop
and
shlb
hlt
stos
add
push
and
inc
movl
push
aas
mov
add
xor
dec
or
inc
out
jmp
add
sbb
inc
add
inc
lret
dec
adc
es
repz
mov
dec
dec
sbb
mov
xchg
cld
add
hlt
jns
pop
sub
dec
out
add
sbb
add
shlb
aas
push
pop
pop
lock
add
es
push
add
add
enter
jg
nop
jle
jp
test
shl
popa
dec
fisubl
add
dec
xor
pop
pushf
jg
sbb
xorb
rolb
sbb
nop
add
js
mov
ja
pop
hlt
fnsave
sbb
bound
je
jle
add
scas
leave
mov
adcb
and
jmp
add
jge
mov
add
out
sbb
dec
sarl
data16
adc
orb
mulb
sbb
push
lock
add
jle
sahf
pop
daa
seta
add
push
push
add
push
in
pcmpeqw
mov
lret
dec
call
inc
xchg
mov
xor
or
out
jle
ds
mov
std
dec
movsb
aaa
int3
cmp
add
dec
rolb
cmp
jae
add
addb
or
jne
cmp
add
test
lret
inc
addr16
push
ret
popf
dec
pop
inc
fld
add
mov
or
sub
sub
mov
add
push
adc
add
jp
jbe
rol
test
jecxz
ds
cmp
dec
jl
vmwrite
sub
xchg
nop
sub
xchg
adc
dec
cmpb
out
add
push
aam
add
xchg
ja
je
or
int
loop
test
fstps
mov
scas
repnz
add
pop
stc
ljmp
mov
add
push
push
pop
push
xchg
mov
rolb
test
scas
mov
add
testb
add
mov
push
xor
add
add
adc
mov
sarb
jbe
or
aad
loop
hlt
in
jmp
inc
das
add
jne
sbb
or
add
aam
xchg
dec
or
pop
pushf
adc
dec
movsb
popl
cli
imul
mov
jp
cmp
in
mov
sub
sbb
mov
xchg
ffree
or
dec
inc
stos
dec
inc
lock
nop
cwtl
push
lahf
hlt
rol
in
add
gs
loope
pusha
and
and
add
fiaddl
inc
je
inc
lcall
cmp
js
inc
je
nop
call
mov
test
add
xor
scas
rorb
mov
cmp
xchg
dec
add
sub
mov
add
test
or
inc
ud2
mov
out
add
cmp
pop
add
cli
mov
mov
push
xor
xor
dec
ret
or
outsl
push
cltd
jecxz
cmp
arpl
add
lods
or
sub
mov
ds
dec
add
sub
push
sbb
jecxz
arpl
loopne
loopne
jb
psubusb
push
jmp
lock
pop
mov
mov
and
nop
add
shr
loop
pop
lods
repnz
inc
es
cmp
sbb
add
push
xor
bnd
outsb
sarb
xchg
test
call
ss
cmp
add
xlat
popf
add
add
xor
in
sub
or
cmp
jae
xchg
fsubr
js
add
out
jb
adc
cli
ja
dec
add
mov
add
xchg
cmc
test
pop
mov
push
lock
out
loopne
sbb
sbb
ss
pop
push
mov
insb
rolb
ds
dec
fisubrl
orl
jo
inc
icebp
popa
das
inc
mov
aad
sub
or
push
dec
add
jmp
add
rolb
rolb
jne
fnstcw
sarb
jmp
mov
nop
xchg
mov
dec
push
jo
xlat
int3
push
mov
mov
jmp
mov
call
imul
xor
add
dec
push
push
mov
scas
inc
sbb
aam
mov
xchg
pop
dec
and
xorb
pop
mov
sbb
mov
jg
and
out
mov
or
and
imul
shll
gs
cmp
sbb
fidivrl
xchg
hlt
loop
cmp
je
pop
sub
insb
inc
movsb
dec
inc
adc
push
adcl
jmp
push
add
in
add
push
add
inc
push
sti
jae
aas
push
lcall
push
subl
repz
in
repnz
mov
xchg
mov
pop
add
andb
imul
iret
push
inc
xchg
xor
sub
sarl
sbb
push
push
or
add
shl
push
leave
sub
mov
xor
xor
push
negl
adc
cwtl
jge
aam
sub
mov
into
cmpsb
test
sbb
repz
repnz
test
push
adc
pop
movb
cmpl
add
jmp
xor
sbb
cmpsb
lods
sbbb
jbe
add
pshufw
sub
xchg
dec
sbb
or
jae
mov
andb
adc
lret
mov
add
jb
cmp
add
stos
mov
mov
sub
leave
out
test
in
lret
and
cltd
movsb
lock
add
repz
cmp
mov
mov
push
or
dec
pop
popf
dec
add
repnz
test
or
call
cmpsb
jne
add
xchg
and
rclb
movl
inc
shr
xchg
dec
add
inc
dec
jne
push
or
ret
pop
movsl
and
add
dec
nop
push
out
mov
xchg
push
lods
in
test
ja
shr
jbe
cld
jb
add
loopne
fsubr
mov
ja
dec
xchg
or
sti
mov
lahf
cld
les
out
jb
cs
push
shlb
or
call
fs
add
hlt
or
mov
movsb
mov
push
xchg
sub
cld
leave
add
daa
inc
mov
mov
adc
cmp
sub
adc
xchg
add
lcall
int
test
and
movsl
and
add
imul
jb
push
jmp
add
repnz
or
inc
xor
add
popl
jmp
dec
test
jb
or
add
add
xchg
ss
dec
rcrl
mov
rolb
les
add
xor
push
dec
mov
imul
add
adc
inc
fsubl
loopne
inc
xchg
daa
jg
add
sub
adc
dec
adc
shrb
aas
xchg
and
addr16
pusha
cmpsb
call
xchg
or
bsf
add
repz
or
in
push
add
mov
mov
lds
loopne
or
cmp
push
cli
gs
sbb
add
add
dec
and
cs
jns
je
addb
cwtl
push
push
inc
xchg
je
cmp
repnz
enter
inc
addl
insb
es
and
pop
push
leave
dec
xchg
inc
mov
add
and
add
xchg
mov
arpl
add
jo
rolb
add
push
enter
add
sub
pandn
pop
add
mov
lret
movsl
adc
jno
mov
and
xor
add
hlt
push
rcrl
ss
bound
add
push
cmp
mov
cmp
lds
lods
pop
test
mov
sbb
push
dec
jl
add
bound
jp
jb
cltd
clc
aam
dec
js
jnp
addr16
xor
jno
add
add
pop
cmpb
and
les
mov
add
nop
pop
gs
mov
outsl
cmp
cld
lret
call
mov
dec
sbb
ss
cmpsl
pop
loopne
mov
add
sbb
xor
push
add
adc
out
sbb
mov
or
jo
loopne
jo
dec
adc
pop
add
shll
add
push
sbb
sub
clc
repz
add
xlat
xchg
sbb
test
add
cmp
gs
out
hlt
add
jge
adc
sub
or
jp,pn
push
add
pop
dec
xchg
sub
jb
fwait
pusha
add
add
loop
or
das
jmp
add
xor
xor
xchg
adc
and
xchg
xchg
adc
pop
adc
mov
aas
or
out
aas
adc
mov
add
test
arpl
in
cld
add
int
popa
test
add
dec
loope
out
outsl
pop
push
mov
mov
inc
ret
mov
cmp
jmp
call
sbb
inc
mov
sub
sbb
dec
cld
adcb
add
out
xor
cmp
insb
movsb
add
pop
adc
add
jl
push
cld
negb
jae
ljmp
subl
int3
push
adc
fldl
in
orb
in
ficompl
xor
insl
shlb
sub
jne,pt
and
adc
mov
in
ret
xchg
jo
xchg
mov
add
shl
inc
xchg
or
add
xor
jb
inc
roll
out
test
mov
lods
mov
adc
test
jg
jmp
pop
ljmp
cmp
adc
jg
add
in
jmp
dec
mov
xchg
mov
das
out
int
fisubrs
fdivs
jo
xor
cmp
cs
cmp
lcall
pop
jbe
xchg
mov
xchg
xchg
pusha
pop
push
imul
stos
and
xor
mov
das
jne
shlb
add
cltd
fists
sahf
add
ljmp
aaa
cmp
outsl
cltd
notb
aas
bound
cmp
ljmp
enter
dec
add
in
bound
add
mov
push
add
int3
test
push
add
lret
or
push
push
add
pop
inc
or
push
adc
mov
pop
hlt
sub
mov
push
outsb
mov
add
adc
call
inc
mov
push
or
mov
sub
add
movb
inc
rclb
push
or
cmp
sbb
adc
in
les
xor
pop
in
add
mov
jne
sbb
xchg
xor
inc
popa
jae
xor
outsl
dec
push
dec
outsb
je
push
aas
fidivs
ja
dec
push
push
imul
js
arpl
dec
popa
cwtl
daa
add
mov
les
sarl
jbe
adc
adc
sub
cmp
add
fiadds
jne
mov
sbb
pop
mov
fimull
add
xor
fucomip
dec
pop
decb
dec
xlat
enter
cmp
add
sub
fimull
mov
add
cmp
and
xor
inc
push
sbb
mov
sub
iret
sarb
insl
add
xor
inc
dec
jne
call
sub
iret
push
jb
inc
pop
add
xlat
les
psrld
xor
mov
sbbl
mov
push
lock
mov
and
mov
or
lea
les
mov
xchg
fstpt
idivb
fcoms
mov
shlb
cmp
jl
sahf
xor
insb
daa
sub
ret
jge
jg
dec
hlt
inc
pop
lods
sahf
loop
jne
ret
fsubr
jmp
push
jg
cmp
and
lods
pop
pop
push
out
adc
lock
inc
subb
test
call
cmp
ret
add
mov
jb
rorb
jbe
movb
jo
adc
roll
lods
jb
cmpl
jbe
mov
dec
sub
sub
jmp
ss
sarb
repz
push
repnz
add
adc
add
cmpb
xor
inc
add
imul
xchg
push
loopne
and
inc
out
push
enter
lret
out
cli
fcompl
int3
lock
pop
add
mov
testb
pop
mov
hlt
fsubrs
addb
jecxz
jb
rclb
ss
out
and
leave
roll
addb
push
push
call
fdivrl
movsb
pop
jno
mov
pop
scas
add
outsl
push
mov
add
adc
push
inc
add
add
add
or
inc
or
and
lahf
cld
loopne
dec
cmpsb
jle
imul
adc
add
dec
inc
rcrb
dec
fadds
andb
call
adc
push
push
fsubs
add
and
repnz
jno
and
jae
pop
push
dec
dec
arpl
rolb
imul
fisubl
or
fucomp
or
stc
pop
pushf
dec
add
loopne
add
jecxz
or
out
adc
pop
xchg
push
xchg
mov
and
ret
mov
les
popf
mov
aam
aam
sbb
push
dec
sub
cmp
pop
pop
xchg
push
inc
fwait
cmp
leave
push
jle
or
sete
fildl
mov
int3
loop
test
adc
xchg
sbb
jns
out
mov
add
fmuls
mov
and
test
iret
out
push
add
pop
mov
sbb
and
daa
pop
testb
pop
les
cmp
sub
je
inc
in
loopne
gs
lods
dec
add
shrl
dec
or
push
pop
jl
add
lcall
pusha
incl
jl
mov
mov
push
cmp
lea
div
mov
pop
or
cmp
pusha
add
dec
jp
jmp
add
pop
jg
cmp
shl
cltd
or
cmc
jo
lcall
inc
ljmp
jne
loop
add
push
mov
or
xchg
pop
movzwl
pop
mov
sub
fiaddl
add
mov
adc
and
sbb
jbe
sbb
sub
dec
add
mov
mov
push
and
fsub
and
pop
cli
lret
add
ljmp
in
xchg
add
and
mov
fldt
test
and
arpl
mov
jnp
cli
ret
cmp
idivb
les
xor
or
cli
sub
inc
add
call
lcall
xlat
pop
les
aad
and
nop
fnsave
in
push
fmuls
dec
add
jl
xor
mov
inc
lods
aad
in
inc
mov
aaa
add
repnz
daa
adcl
and
add
add
js
pop
add
add
or
adc
add
pop
and
add
or
movsb
out
add
cmpsl
test
sbb
and
cltd
bound
pop
loopne
pop
sbb
sbb
or
add
add
and
pop
add
or
incl
dec
jg
jp
pop
nop
add
rclb
stos
daa
pop
les
fiaddl
rolb
lea
add
test
add
inc
pop
rcrl
mov
add
mov
std
add
cmpsb
push
lahf
mov
lcall
fmuls
sub
scas
rolb
into
sarl
mov
jnp
add
inc
fptan
cmc
cwtl
or
pop
in
mov
nop
pop
add
mov
jl
pop
inc
sar
movsl
adc
lock
cmc
lock
fisttpl
add
enter
notl
add
in
fisubrs
imul
xchg
pop
out
leave
jle
sbb
mov
add
add
int3
add
test
pop
mov
inc
add
pop
sbb
or
cmp
orb
frstor
add
dec
add
adc
adc
adc
mov
adc
jmp
add
push
vmread
cmpsl
and
addr16
cmp
push
mov
xor
xchg
pop
lret
add
mov
stos
fldenv
inc
jmp
cmp
mov
push
add
mov
lods
jmp
cld
js
pop
sbb
rclb
add
mov
popf
mov
cs
mov
add
cwtl
add
push
fsub
popl
add
std
xchg
push
inc
push
enter
add
sbb
int
add
push
test
add
in
jge
orb
pop
lock
inc
rolb
pop
fadd
mov
push
pop
pop
add
sbb
mov
dec
lcall
push
push
pop
jnp
adc
mov
das
add
out
lea
movsb
add
fmull
lret
add
push
cmp
lret
mov
dec
shrb
loop
fldl
jo
xchg
and
add
cmp
pop
push
repnz
add
popl
jecxz
shld
mov
pop
add
cmpsb
mov
add
lods
in
push
mov
btr
push
scas
inc
test
jbe
inc
mov
repz
test
mov
ret
adc
and
cmpsl
fsubp
push
movl
cld
adc
in
and
mov
int
jle
pop
push
or
mov
add
jno
ret
mov
out
out
jae
dec
mov
cltd
cmp
push
jo
push
mov
inc
cmp
testl
add
mov
cs
push
pushl
pop
jle
or
adc
out
aam
ret
and
inc
enter
jno
mov
or
jo
data16
xor
loopne
push
push
and
dec
push
dec
sarb
pop
int3
adc
adc
loop
dec
sti
aad
scas
mov
clc
add
lds
push
roll
dec
pop
jno
pop
mov
mov
adc
iret
add
pop
lret
add
cmp
push
dec
nop
inc
add
fists
adc
aas
add
daa
mov
sbb
push
popf
imull
or
fsubs
nop
adcb
push
dec
add
movsl
dec
mov
sub
inc
sbb
jmp
scas
fwait
add
sbb
adcl
roll
mov
ja
or
pop
add
sbbb
jns
add
stc
ficoms
dec
jge
add
mov
or
pop
pop
clc
push
aaa
or
iret
sbbb
jae
mov
sbb
add
pop
stos
inc
mov
xor
add
nop
ljmp
mov
push
stos
lea
pop
loop
sbb
cmpsl
test
mov
or
push
jmp
xchg
add
jne
inc
push
cmpsb
jecxz
mov
ja
imul
adc
inc
pusha
test
jg
add
loop
xchg
enter
out
add
xlat
pop
jne
scas
rcrb
inc
and
cmp
add
and
add
mov
xchg
sbb
add
in
pop
xor
cmpb
sbb
clc
pop
icebp
std
add
mov
mov
rolb
jb
add
push
mov
and
sub
or
xchg
lret
mov
sbb
pop
loopne
mov
push
inc
sbb
add
imul
je
popa
jo
push
push
dec
push
rolb
stc
outsl
add
sbb
jne
sub
dec
add
aas
or
jecxz
add
add
pop
int3
cmp
cld
cmp
push
inc
add
je
xchg
or
mov
add
mov
call
push
mov
mov
add
jle
movl
or
sub
adc
pushf
and
adc
jo
add
push
jg
add
test
lods
sub
push
mov
les
jle
andl
jo
addb
add
ror
or
inc
push
add
sbb
jmp
xchg
stos
in
add
insl
mov
cwtl
cli
inc
jp
shrb
adc
and
hlt
out
add
sub
or
divb
movsl
sbb
adc
hlt
in
add
dec
scas
int
jg
jae
mov
push
dec
mov
add
in
adc
dec
sbb
inc
mov
stos
insb
add
mov
es
shlb
adc
jb
xor
dec
add
inc
cld
cmp
mov
js
outsb
out
subl
xchg
les
mov
inc
in
pushf
add
pop
in
shr
lods
repnz
mov
xchg
mov
out
or
sub
hlt
jmp
repz
mov
add
jnp
mov
add
ret
add
ljmp
stc
lods
hlt
jecxz
pushf
cmpsb
cmp
sbb
add
clc
add
xchg
lods
and
add
and
hlt
push
fbld
add
sbb
and
mov
inc
mov
add
mov
add
dec
xchg
mov
in
sub
push
mulb
or
in
mov
sti
add
add
xchg
mov
nop
sub
hlt
push
push
mov
out
clc
add
adc
dec
stos
add
cld
hlt
lock
mov
add
adc
add
sbb
push
movsl
ja
sbb
add
xchg
jae
sub
cmpsl
push
jo
mov
int3
lea
or
jbe
call
push
loope
fsubs
sarb
add
sub
jle
dec
xchg
add
dec
sub
add
mov
xchg
jle
jnp
jge
add
inc
out
not
dec
jmp
mov
mov
fstpl
fsubl
add
sbb
pop
repz
push
pop
jae
stos
es
add
jne
mov
add
push
hlt
add
cmp
clc
aad
ja
xchg
rorl
jno
add
fcoms
cmp
dec
and
add
pop
add
jge
add
inc
mov
xchg
add
sti
jb
jbe
out
addl
leave
lds
orb
lret
das
mov
mov
add
js
roll
adc
cmp
lea
mov
sub
and
pop
ret
call
mov
xorb
push
movl
out
mov
or
data16
aaa
mov
rcl
mov
mov
xlat
int
sub
dec
ret
test
cli
add
cld
pusha
repz
movsb
push
aas
push
inc
rol
adc
mov
push
insb
lret
mov
jl
dec
sbb
je
or
je
sub
pop
add
and
cltd
or
icebp
dec
add
jge
jae
lret
data16
mov
push
filds
pop
add
mov
push
mov
mov
add
jne
add
add
std
or
xchg
sarl
add
in
rorb
xor
js
xor
push
add
push
jmp
inc
mov
cmpsb
jo
add
out
rcll
and
add
cmpsl
mov
call
xor
mov
or
inc
ret
ret
sub
add
popa
ja
xchg
xchg
push
inc
add
inc
loope
or
inc
mov
push
out
xor
push
mov
mov
add
xor
or
fs
dec
cmpsb
cmp
sub
mov
arpl
jae
sbb
jecxz
ja
addl
xor
xchg
lods
sub
adc
xchg
sbb
enter
pop
out
js
pop
add
push
and
repz
movsb
cwtl
inc
adc
add
icebp
cli
pavgb
sub
sti
add
popf
inc
jb
push
pop
dec
std
addr16
movb
sbb
lea
movsb
and
cmpsl
or
imul
rolb
out
scas
enter
cmp
and
aam
mov
add
push
mov
xchg
jno
push
enter
insb
pop
add
add
out
mov
cwtl
xor
cld
adc
add
push
ret
shl
sub
push
mov
repnz
push
lret
test
sub
jnp
test
mov
loope
cmp
cmp
shlb
mov
call
add
mov
mov
adc
or
and
add
inc
movsb
jae
add
add
push
jns
aas
cmc
stos
push
je
jb
hlt
arpl
pop
pop
xor
lret
popa
dec
in
int3
mov
lcall
fcomp
sbb
add
sbb
xor
cmpsl
xlat
ret
lret
and
add
mov
dec
add
mov
repnz
popl
lcall
enter
fs
aaa
aad
mov
or
push
ud2
jne
ja
push
mov
popf
sbb
push
addl
sbb
cmp
mov
xchg
mov
mov
int3
sub
sub
add
or
cmc
ljmp
cli
jno
in
pop
pop
sbb
jne
add
mov
bound
xchg
mov
adc
add
mov
sub
insl
cmc
es
roll
mov
pop
lods
lea
in
push
jb
test
jp
pop
fbstp
xchg
aad
xor
rolb
inc
push
rorb
jae
push
add
dec
push
push
fs
dec
add
jo
inc
add
inc
jl
pop
in
sub
add
pop
push
adc
outsb
dec
jne
sbb
ja
add
pop
sub
and
inc
add
dec
xor
add
jmp
sub
cmp
sub
xchg
shrb
push
ljmp
sbb
push
inc
out
fsts
jno
xor
xorl
add
loopne
jg
mov
adc
popf
js
add
pop
xor
rclb
mov
loopne
add
jmp
lods
inc
pusha
sub
xchg
cld
or
xor
or
or
sahf
fwait
pushf
inc
pop
xlat
cmp
call
dec
sbb
adc
insl
jne
bound
xchg
add
fs
pop
movsb
push
adc
aad
mov
aas
cmp
add
xchg
add
add
or
push
push
push
adc
adc
adc
push
sbb
pop
sbb
sbb
sbb
push
pop
cmp
and
and
daa
add
sub
sub
sub
add
push
idivb
push
cmp
rorb
clc
dec
pop
inc
icebp
dec
jp
subl
and
cmp
xor
cmp
adc
flds
inc
pop
push
sbb
or
add
sub
cmp
push
and
jnp
jge
cmp
mov
pop
fstl
repz
setno
stc
add
jne
add
sbb
add
jmp
pop
xor
mov
shrb
scas
scas
cld
xor
mov
mov
mov
mov
mov
rolb
push
ret
mov
sbb
lret
int3
add
into
iret
rcl
rolb
rcl
add
xlat
fcomp
add
nop
in
fstp
jl
shl
add
in
out
lea
jmp
in
and
xor
mov
lret
hlt
clc
cli
sti
cld
sbb
push
incl
add
add
lods
adc
and
add
jno
sbb
and
fdivl
dec
sub
add
stc
pop
pop
xchg
add
out
mov
orb
js
ja
sub
jnp
pop
pop
loopne
add
addb
mov
cwtl
mov
xchg
add
lcall
add
out
movsl
sub
cmpsb
lock
lea
mov
mov
jle
ds
roll
pop
lret
lcall
jb
dec
xchg
add
sti
add
lds
shl
add
out
shl
icebp
ljmp
clc
sti
es
incl
enter
or
push
or
or
adc
or
cmp
sbb
loopne
pop
or
push
andb
mov
mov
mov
xchg
xchg
add
dec
pushf
addl
movsb
sbb
or
inc
ret
repnz
fnsave
addl
add
and
dec
hlt
mov
stc
mov
sbb
orb
adc
xor
loop
inc
mov
jp
add
mov
cld
mov
icebp
xchg
mov
ss
mov
mov
sub
into
out
add
or
dec
pop
loopne
jmp
add
dec
outsl
adc
adc
sbb
cmp
test
mov
mov
incb
mov
addl
xor
add
push
xchg
les
sbb
loopne
inc
mov
in
xor
cmp
sub
inc
test
add
addl
xlat
aad
push
xchg
lds
add
mov
mov
xor
or
inc
enter
dec
xchg
inc
jo
popf
insl
andl
adc
cmpb
xchg
add
xlat
shl
jo
jecxz
pop
out
xor
cmp
pusha
pop
addr16
mov
das
and
roll
xchg
aam
dec
jmp
adc
mov
cmp
inc
rorb
dec
push
lods
add
movl
leave
and
loopne
add
sub
xor
add
test
jp
dec
ljmp
inc
push
pop
add
add
incb
cld
or
pop
jmp
loopne
add
pop
leave
insl
mov
or
cld
rcrb
orb
inc
push
pop
andl
jl
xor
add
aaa
sub
inc
lock
or
lock
push
push
ud2
inc
mov
dec
in
and
jno
or
gs
add
jge
add
insl
push
mov
hlt
loopne
sbb
push
mull
out
add
inc
or
ja
shll
add
in
lret
les
push
add
daa
sbb
jg
fmuls
stos
or
dec
and
ret
xchg
pop
adc
ljmp
jnp
add
add
add
add
fiadds
or
rcll
mov
sbb
push
repz
shlb
pop
adc
sti
loopne
jno
lcall
mov
push
push
pop
sti
sbb
xorl
rolb
mov
dec
repz
adc
push
loop
test
fisubrl
mov
pushf
cmp
sub
add
bound
pop
dec
add
cwtl
jns
adc
repz
fsubrl
orl
add
inc
mov
incl
int3
stc
mov
pop
add
rcrb
dec
and
dec
or
bound
adc
pop
jae
jle
loop
mov
push
stc
xor
jb
push
xchg
jno
imul
les
mov
popl
lods
cwtl
loop
shl
iret
shll
cmp
pusha
dec
dec
pop
aaa
movd
pop
test
sbb
push
sub
adc
loopne
addl
add
add
jecxz
movsb
loop
shll
add
jno
add
subb
push
sub
fmull
ret
imul
xor
add
testb
add
test
cwtl
mov
mov
leave
mov
out
incb
int3
cmpsl
mov
sub
popa
pop
jnp
jo
dec
iret
adc
cmpsb
cmpsl
out
mov
cmpsb
add
adcl
mov
push
hlt
add
arpl
fsubl
repz
xorb
inc
mov
cmp
sub
cld
leave
faddl
push
and
fdiv
sbb
push
roll
dec
mov
add
repz
pop
call
bound
cmp
lods
pop
jmp
mov
pop
imul
andb
fs
mov
lods
ret
movsl
add
add
scas
psubusw
xor
iret
push
jp
adcl
add
dec
cs
sub
hlt
adcb
pop
add
lcall
mov
into
sub
je
shr
cmpsb
pushf
lock
add
lcall
sbb
mov
lahf
lret
rcll
sbb
jbe
add
xchg
adc
add
out
add
or
insl
mov
add
mov
inc
inc
add
sub
adc
and
clc
outsl
aas
push
add
cmc
xrelease
pop
sbb
movsb
add
mov
jmp
mov
out
lods
add
pop
push
addr16
sqrtps
pop
ja
mov
ljmp
mov
and
sub
push
scas
rolb
sbb
ds
out
add
cltd
aad
lods
xor
adcl
inc
fwait
into
sbb
add
or
jmp
jb
fs
int
aaa
push
inc
test
push
and
or
mov
sti
cmpb
push
jl
test
daa
dec
stos
repz
mov
add
and
in
pusha
dec
cmp
xlat
in
push
jp
orl
andb
out
sahf
add
bound
cld
jae
fwait
push
rolb
sbb
jns
push
std
aaa
mov
loopne
add
sahf
movsb
out
sbb
jne
cmp
roll
pop
incb
ret
imul
into
lods
shrb
in
pop
add
pop
ror
sub
inc
loopne
cmp
add
fbld
and
aaa
mov
jne
in
in
push
add
cmp
add
test
push
call
in
outsb
adc
sub
xor
add
cmp
push
fiaddl
cmp
mov
push
aam
add
out
or
mov
in
xchg
add
out
cmp
stos
bound
pop
call
add
es
fnstsw
loopne
add
add
inc
clc
inc
cmp
push
add
lea
add
rcll
add
sbb
loopne
inc
push
adc
aas
inc
jge
pop
mov
mov
cld
push
sbbl
add
pushf
add
aam
or
cs
xchg
lcall
sub
hlt
loop
mov
sub
mov
cmp
dec
mov
aaa
mov
nop
push
add
popf
rcrb
xor
sti
mov
aaa
pop
xchg
xorl
ja
jle,pt
inc
and
add
jmp
movb
adc
jp
xor
or
push
mov
dec
insb
lret
or
adc
inc
lcall
cltd
js
andl
inc
push
add
loopne
adc
movsb
or
fnstsw
xchg
sub
ret
add
bound
test
add
lcall
add
call
xchg
sub
ss
add
push
inc
add
pop
add
inc
add
pop
mov
stos
nop
dec
adcb
mov
push
cltd
popf
ffree
push
mov
jmp
jl
and
sub
dec
test
mov
mov
add
push
sub
or
sbb
adc
jnp
nop
rorl
add
pcmpeqw
jns
adc
mov
mov
and
cltd
mov
adc
dec
repz
dec
add
push
test
add
and
jbe
sub
pop
data16
imul
je
add
adc
fcom
jns
sbb
jno
inc
fisubs
loope
pop
mov
lock
pmaxsw
adc
add
or
add
pop
add
mov
add
in
ljmp
cld
and
cmp
xor
aas
mov
insl
clc
rclb
scas
or
push
pop
or
je
add
mov
push
xchg
push
lods
out
mov
add
and
loop
xor
sub
rolb
pop
cmp
pusha
test
push
mov
pop
mov
jge
add
mov
decb
push
push
push
or
rorl
jbe
mov
sbb
sbb
add
cmp
dec
push
cld
xor
and
xor
add
icebp
jbe
pusha
adc
add
and
pop
out
add
lock
testl
jo
pop
hlt
mov
push
add
mov
inc
xlat
lahf
jl
add
es
add
pushf
xor
pop
inc
add
jecxz
enter
call
and
xor
cmp
xor
imul
or
push
lcall
loopne
outsb
sub
add
ss
push
lea
push
scas
adc
inc
rorl
or
repnz
inc
stos
ss
add
adc
mov
cs
add
mov
jle
neg
add
lods
inc
push
mov
hlt
push
cmp
scas
fisubl
add
xor
adc
lock
in
push
add
imul
add
push
dec
mov
lock
add
in
or
scas
gs
add
cmp
mov
jne
popl
push
push
dec
test
fisttpll
cmp
fs
cld
mov
push
push
cwtl
std
add
or
mov
add
out
sub
fsubrp
or
sub
fsubs
push
adc
shlb
dec
add
test
mov
push
out
sbb
fistpl
pop
and
push
cmp
add
add
xor
enter
stc
shlb
outsb
ds
inc
mov
push
push
or
add
push
lret
cmpsb
call
cmp
ljmp
or
and
mov
mov
ret
push
push
or
sbb
loop
xchg
mov
adc
or
and
mov
ljmp
loopne
mov
insb
push
and
cli
cmp
push
negb
test
lcall
int
hlt
inc
loopne
je
clc
pusha
sbb
push
jl
shrb
rorl
push
test
add
and
fldl
push
pop
jbe
in
sub
xor
push
inc
ds
add
jne
data16
cmpsl
add
xor
add
in
and
add
clc
add
mov
add
cmp
aaa
xchg
pop
xor
mov
push
sbb
adc
dec
andb
cmp
and
add
add
inc
cld
push
mov
mov
gs
outsl
call
push
xor
adc
pop
ss
jmp
mov
inc
xchg
out
scas
jo
cwtl
in
add
and
add
push
or
pop
bound
inc
pushf
dec
das
mov
add
outsl
or
add
push
std
sub
in
xor
push
adc
mov
push
push
dec
dec
sub
nop
aad
xchg
push
test
mov
dec
dec
pop
adc
pop
repnz
scas
inc
loopne
dec
cld
bswap
test
or
adc
jbe
loopne
aas
out
ds
mov
inc
mov
push
or
mov
lahf
adc
int
xor
dec
cmp
or
mov
loop
push
sbb
pop
nop
rolb
inc
xchg
dec
das
and
jnp
mov
dec
cmp
mov
lret
xorb
add
call
add
addr16
push
mov
add
push
ret
test
adc
out
add
jae
cmp
aaa
fisttps
add
xor
xchg
rcr
add
cmp
ja
xorb
stos
mov
aad
jecxz
icebp
xor
insb
mov
mov
pop
stc
xchg
sbb
inc
dec
enter
sbb
push
fwait
jns
mov
push
outsl
add
cwtl
mov
cmp
je
lahf
xor
lret
in
pop
add
ret
popa
outsb
arpl
add
lcall
cmp
imul
mov
add
data16
or
push
mov
adc
inc
jb
mov
xchg
jge
jbe
add
pop
dec
hlt
cmp
pushf
add
sbb
in
stc
cmc
jbe
and
inc
inc
movzwl
clc
sti
int3
and
jne
add
sbb
lock
pusha
mov
dec
dec
xchg
icebp
xor
push
shl
mov
add
repz
pusha
mov
sti
add
push
subb
adc
jl
hlt
pop
add
inc
dec
in
or
jmp
add
cmp
hlt
or
add
sbb
push
pop
mov
push
sub
ljmp
jle
sbb
jl
jbe
ret
push
rorl
movswl
sbb
call
hlt
mov
movb
cmpb
das
inc
sub
rcll
sbb
jne
lea
in
es
dec
orb
jl
lldt
xlat
adc
roll
je
push
push
pop
lahf
fidivl
dec
repnz
mov
xor
cmp
and
sarb
loope
sub
in
clc
addl
ret
cmpb
cmp
sub
rorb
mov
mov
sbb
mov
and
dec
inc
mov
int3
add
mov
sub
pop
outsb
add
rdtsc
mov
cwtl
adc
imul
cltd
inc
les
xor
fnstcw
inc
faddl
xchg
xor
add
mov
insb
daa
mov
testb
call
test
hlt
loopne
popa
push
roll
mov
rorb
pop
add
jbe
adc
xchg
out
add
mov
mov
test
mov
call
mov
mov
imulb
cmpsl
jl
inc
test
add
xchg
lods
cmpl
je
push
jecxz
mov
adc
xchg
nop
call
daa
imul
pop
push
add
sub
addb
xor
pop
dec
sub
mov
hlt
sub
cli
push
mov
add
out
jb
fbstp
or
sbb
pop
jg
or
xorl
sub
enter
loopne
call
or
mov
add
adc
sbb
push
loopne
cwtl
inc
push
pushf
sgdtl
fdivs
fdivrp
jne
pop
rcl
cld
andl
mov
lock
aam
add
mov
fisttps
xchg
int
dec
repnz
sub
jne
faddl
add
mov
mov
sbb
test
cmpb
add
sub
add
mov
xchg
dec
data16
push
push
enter
dec
add
test
add
bound
mov
cwtl
dec
fsubrl
in
sub
pop
jae
jmp
dec
out
add
or
pop
add
or
rol
sbb
lds
jno
adc
sbb
push
test
push
add
rcl
lds
imul
test
and
gs
add
and
jnp
cmpsl
psadbw
jbe
inc
mov
inc
add
mov
fs
mov
push
xor
aad
add
cmpb
sub
mov
push
or
aad
sub
add
stc
add
andb
or
and
inc
outsb
mov
push
adc
dec
add
sbb
jp
ret
sub
adc
dec
pop
in
orb
mov
call
loop
mov
jl
or
enter
out
andl
add
or
jmp
mov
dec
push
nop
clc
arpl
mov
dec
aaa
or
fs
or
addl
pushf
xor
loope
fsubs
push
lea
cmpb
ret
arpl
jmp
rolb
and
mov
inc
and
loopne
add
or
add
loopne
inc
leave
pop
lods
cld
or
xor
testb
or
dec
adc
aam
cltd
test
sub
decl
insl
push
inc
pop
lds
add
add
minps
sub
cmp
test
jmp
or
add
push
mov
ret
ja
or
add
cli
pop
daa
adc
and
pop
data16
mov
pop
movsl
mov
inc
mov
insl
jl
je
push
xorb
jmp
push
mov
aad
gs
push
mov
add
adc
mov
lret
add
push
jbe
jecxz
add
xchg
gs
xor
sbb
push
push
add
leave
add
adc
bound
icebp
dec
fcoml
js
repnz
add
push
and
add
push
or
adc
cwtl
push
add
and
xor
ss
pop
imul
inc
push
test
scas
cld
jo
lret
jns
aas
test
xchg
idivb
imul
arpl
inc
outsb
push
movsb
hlt
lods
sbb
xor
in
add
call
dec
add
in
xor
cwtl
out
cmp
lock
inc
inc
mov
outsb
mov
insl
shlb
add
lods
dec
xor
mov
adc
js
add
sub
and
xchg
xor
fdivrs
lods
push
lods
push
push
jo
xchg
rcr
cld
pusha
mov
or
inc
cmp
in
mov
pushf
push
sahf
mov
pmaxub
inc
pop
jb
dec
jo
add
adc
or
push
lea
add
mov
mov
jnp
add
or
stos
pop
push
add
in
repnz
adcb
add
inc
add
and
fdivl
test
out
xchg
inc
jl
push
js
mov
push
inc
jns
xor
dec
dec
mov
xor
popa
es
add
pop
sub
jae
hlt
int
ja
add
dec
pop
loopne,pn
pop
cld
les
add
xchg
mov
in
and
int3
add
ror
pop
hlt
aam
cmc
or
lds
rol
xor
adc
push
jge
dec
ljmp
sbbl
mov
add
jp
add
psubsb
sub
push
and
in
call
mov
repz
das
clc
inc
and
push
dec
test
xchg
xchg
cwtl
add
sub
push
cmp
push
adc
sbb
fs
cmp
test
sub
add
jns
stc
mov
add
inc
dec
inc
inc
pop
mov
mov
push
sub
cmp
jb
sbb
push
push
sub
xor
push
repnz
in
push
das
xchg
icebp
xchg
mov
cmp
popf
add
shll
xor
fnstenv
add
push
outsb
imul
cmp
add
jno
jmp
push
inc
push
cmp
and
dec
push
and
mov
cltd
cwtl
jne
roll
das
adc
or
push
jge
dec
add
clc
jne
outsl
testl
and
push
incl
adc
stos
sub
pop
fs
xor
push
movsl
test
push
ljmp
outsl
popl
or
cld
js
flds
adc
jae
cmovne
pusha
and
lock
push
push
push
int3
push
push
or
mov
shl
je
sub
add
xor
push
mov
add
xchg
cmpl
add
imul
xchg
add
jo
and
jmp
lahf
dec
inc
enter
les
mov
mov
jmp
xchg
fmull
dec
popa
pop
jns
xor
mov
pop
push
sub
add
jmp
addb
clc
add
xchg
in
add
loope
adc
rolb
repnz
mov
add
and
add
pop
cmp
add
xor
xchg
add
adc
or
dec
nop
and
add
js
int
lret
pop
jmp
aam
flds
adc
add
addr16
test
pop
mov
xor
sbbb
push
xor
jne
data16
cmc
rclb
test
fisttpll
push
mov
test
adc
pop
mov
add
and
insl
add
jmp
inc
jle
fildl
or
movsl
notb
add
stc
inc
out
roll
pop
in
fsubrs
xchg
sub
adc
pop
mov
sub
inc
add
push
pop
cmpsb
or
mov
mov
mov
cmpl
ret
and
pop
into
inc
add
push
push
cmpsb
dec
pusha
data16
shr
leave
add
hlt
pop
sbb
mov
sbb
mov
sarb
call
test
pop
pusha
lods
ljmp
hlt
sub
loop
sub
jo
imul
pop
cmp
data16
add
mov
mov
push
mov
dec
add
scas
hlt
add
or
push
sti
ja
popa
add
mov
scas
mov
mov
add
jmp
jnp
popf
xor
add
loopne
add
lock
hlt
or
in
mov
adc
xchg
mov
lds
mov
es
mov
out
xor
xchg
sbb
data16
loopne
leave
push
js
jae
outsb
adc
dec
add
add
cmp
aas
mov
add
les
and
mov
leave
sub
sbb
dec
dec
push
mov
sub
mov
cmp
and
mov
sub
rorb
or
xor
fildl
addb
mov
push
sbbl
pop
pop
movsb
roll
aas
pop
les
add
mov
ret
aam
lds
stc
cmp
into
dec
popa
add
or
data16
or
inc
sub
sbb
cmp
sub
xchg
push
and
outsl
vmread
xor
jg
pop
and
clc
cmp
pop
jo
hlt
and
je
js
pop
or
push
adc
pop
out
xchg
sub
cmp
push
andb
andl
pushf
cmp
cmc
mov
adc
scas
je
push
das
cwtl
jl
pushw
inc
fs
and
mov
mov
or
dec
mov
cs
inc
pop
add
cmp
and
add
dec
scas
adc
push
dec
mov
jl
push
or
add
ds
pop
sarb
xchg
jo
ret
lea
add
std
shl
cmp
shll
mov
cmp
cwtl
daa
jmp
ltr
jne
add
sub
jb
test
and
xor
setb
sbb
mov
mov
inc
stc
call
outsb
dec
mov
add
mov
pusha
add
rolb
mov
and
mov
scas
xor
lahf
mov
adc
sbb
sub
add
inc
mov
jmp
or
adc
mov
add
sbb
movl
jmp
pop
cmp
jl
add
inc
jns
push
add
jp
ss
or
call
xor
movsb
lods
sarl
or
sbbb
into
rsqrtps
pop
dec
push
add
fldcw
les
roll
int3
jb
add
xadd
rclb
cmp
mov
in
and
mov
pop
cmpb
in
or
pop
or
sbb
jg
int3
repz
push
or
push
out
dec
mov
mov
lea
jmp
scas
mov
dec
mov
cli
lret
fs
lods
add
orl
add
leave
jne
inc
xchg
add
addl
jg
dec
in
dec
add
stos
jp
add
add
add
xchg
cwtl
adc
nop
push
out
add
gs
or
mov
fimull
imul
push
and
sub
push
or
int3
inc
mov
sub
std
inc
jne
add
adc
aam
shr
add
inc
mov
xchg
push
add
push
cld
cmpb
je
sbb
sub
add
leave
add
loopne
inc
movsl
testb
pop
mov
pop
push
popa
jb
cs
lret
les
jno
rclb
inc
cwtl
in
dec
bound
pop
jmp
add
aas
xchg
data16
sub
jecxz
push
into
stos
mov
hlt
dec
pusha
cmp
adc
sub
nop
rcl
cwtl
push
mov
scas
cld
jl
adc
lcall
or
clc
mov
xor
roll
fcompl
adc
xchg
inc
nop
cmp
lods
loopne
cmpb
add
sub
lea
pop
fwait
repnz
or
push
jg
add
test
adc
sub
cmpsb
subb
fs
dec
adc
pop
roll
in
stc
loopne
sub
xchg
pop
sbb
das
lret
lahf
cmpb
xchg
adc
and
imul
cli
cmpsb
mov
insb
insb
push
test
add
add
inc
outsl
insl
xor
cmp
add
bound
add
jns
mov
mov
rclb
mov
aam
push
adc
sbb
cmpl
pop
incb
inc
arpl
adc
xchg
sbb
xchg
mov
add
hlt
mov
add
adc
pcmpgtw
xchg
shlb
and
xor
je
and
add
dec
gs
test
jo
icebp
lret
subb
xor
test
sahf
fs
insl
add
adc
jae
mov
aaa
dec
add
nop
cmp
add
mov
xor
shlb
call
les
jbe
cmp
mov
call
mov
inc
jne
dec
xorl
and
loopne
leave
js
mov
inc
push
add
stos
push
pusha
xchg
xor
add
or
add
push
sbb
add
mov
and
in
xor
sub
lahf
mov
dec
pushf
or
adc
add
fs
mov
xchg
lock
add
and
bound
popa
xlat
call
add
testb
cld
xor
push
into
lock
add
call
out
adc
fucomi
stos
das
add
pop
or
cmp
jo
push
pop
add
push
cmc
incl
lds
push
xchg
sbb
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
inc
cmp
mov
fwait
add
cmc
push
push
int
ss
push
jmp
xor
pusha
add
lret
lock
jnp
fsubl
aas
add
cmpsl
pusha
pushf
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
roll
inc
mov
xor
add
add
loop
popa
ret
or
push
jne
pop
pop
add
push
mov
add
ljmp
jae
addl
adc
jb
popa
mov
xor
and
inc
and
add
or
add
add
mov
sbb
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
add
ret
inc
je
dec
pop
shrb
xor
rol
andb
inc
or
add
ret
jne
cmp
je
shl
in
add
int
fadds
inc
cmp
cltd
jne
or
inc
aad
sahf
andb
push
adc
negb
enter
jp
loop
pop
add
mov
lock
nop
push
pop
add
cmp
jp
or
jmp
or
jnp
add
mov
cli
jo
je
add
rolb
add
test
mov
mov
call
and
sbb
insb
pushf
notl
shlb
les
pop
mov
ret
push
test
or
cmp
adc
ret
xor
je
jp
ljmp
aaa
test
dec
icebp
lret
xor
loope
in
add
or
sub
add
add
mov
sbb
hlt
fwait
outsl
int3
or
adc
cwtl
aas
add
xchg
fisttps
int3
movsl
call
sbbl
add
rcrb
xchg
adc
aas
add
jae
dec
add
cmp
pop
or
adc
cmpsb
adc
mov
ud0
dec
add
lret
aaa
xchg
test
pop
movsl
sti
adc
incl
add
fs
pop
out
cmp
out
movsb
sbbb
adc
testl
lock
jno
add
ja
add
sub
push
inc
sbb
nop
and
pusha
push
inc
pushl
or
inc
dec
popf
cwtl
and
dec
or
jo
add
add
lds
and
xchg
pop
add
or
daa
or
pop
loopne
add
dec
fs
ret
sbb
jl
add
push
decb
je
add
push
out
add
push
hlt
add
in
cmp
and
scas
shlb
dec
inc
jle
pop
sbb
mov
xlat
sbb
fsubrp
nop
push
fdivrs
push
movsb
push
je
subl
hlt
jne
and
add
mov
test
lods
andps
sub
pop
jns
jbe
inc
and
or
rolb
into
or
shll
or
jp
inc
add
add
or
add
pop
lcall
cmp
ja
jne
xlat
push
ret
mov
out
pop
xorl
pusha
push
mov
icebp
xchg
add
jmp
hlt
mov
aas
add
xorl
jecxz
sub
les
mov
mov
jle
sbb
xchg
cli
pusha
and
cmp
scas
jno
pusha
mov
add
push
lods
push
sub
or
rolb
jg
pop
repnz
xor
incl
mov
out
mov
jmp
xlat
add
lcall
and
add
mov
adc
xor
add
fst
pusha
hlt
lods
add
and
xchg
mov
fs
fcmovu
loopne
shlb
mov
mov
movsl
pop
or
in
roll
push
mov
push
jo
rolb
add
pop
pusha
cmp
daa
or
clc
incl
or
sarl
mov
in
and
mov
add
jmp
xchg
adc
je
jl
add
inc
sbb
push
jo
sbb
pusha
add
sub
jno
add
das
xor
mov
push
jmp
push
or
add
stos
pop
jl
mov
sub
scas
es
std
adc
ja
add
stos
and
sub
aam
mov
jne
xchg
hlt
rorb
add
arpl
cli
jb
add
dec
fcoms
jo
push
ds
add
pop
sbb
add
or
sbb
lock
scas
cmp
add
cli
pop
mov
or
sub
and
add
aad
cwtl
cmpsb
push
xor
shrb
imul
mov
andb
loopne
push
in
enter
cmp
push
sbb
xor
adc
pop
insl
add
cmp
fmul
xchg
pop
sbb
aam
mov
test
rclb
pop
add
or
xor
int3
out
loope
loop
pusha
sub
out
mov
mov
rolb
pop
lea
pop
fisttpl
js
or
xorb
lods
dec
mov
jns
add
push
pop
mov
add
push
test
or
jl
add
xchg
mov
stos
lcall
popa
add
imul
jno
add
jne
ret
rolb
jp
stc
hlt
jmp
pop
and
lret
js
adc
lcall
push
test
or
adc
add
adc
cmpsl
dec
add
ret
lods
inc
mov
add
xchg
xor
add
sbb
dec
add
or
cmp
loop
jecxz
pop
aam
outsl
sbb
in
sub
or
ds
in
push
add
scas
inc
and
jbe
out
test
mov
scas
mov
call
push
xchg
test
pop
pusha
repnz
add
popa
and
mov
push
push
hlt
mov
bound
add
cmpb
jne
pop
stos
or
mov
jle
in
loop
lds
lods
adc
add
subl
jo
sbb
mov
pop
mov
xor
jp
pop
fimull
adc
out
repz
mov
adc
add
add
imul
daa
push
incl
pop
jl
jo
icebp
and
pop
sub
clc
hlt
test
inc
hlt
or
jmp
rcl
inc
int3
and
enter
jecxz
mov
jb
mov
lods
sbb
xchg
andb
imul
std
add
daa
stos
sub
or
add
shlb
mov
addl
cld
andb
jne,pn
outsb
loop
add
dec
jmp
fwait
add
scas
mov
xor
jmp
adc
mov
add
and
divl
mov
repz
pop
test
xorl
sbb
rorb
mov
add
dec
jne
mov
imul
add
pop
inc
out
pushf
dec
dec
dec
add
enter
push
add
jbe
bound
push
icebp
lcall
pop
push
add
add
sbb
push
add
lea
cmp
aas
in
add
inc
or
es
lods
sbb
sbb
adcb
jnp
add
movsb
aaa
xor
sub
jle
add
and
add
push
mov
push
jb
or
inc
push
adc
push
push
cwtl
aad
add
xor
jge
es
adc
xor
orl
add
adc
inc
add
mov
xchg
jl
lahf
adc
jnp
cmp
xchg
stos
xor
add
movsb
lock
mov
jne
rorl
xor
mov
ljmp
aaa
mov
add
adc
ljmp
jl
adc
add
add
xlat
add
int3
dec
inc
pop
and
shlb
test
sbb
jmp
enter
jbe
sete
sbb
inc
add
or
cmp
push
push
add
test
add
pop
and
add
into
cwtl
xor
gs
xchg
movb
test
adc
mov
adc
js
lahf
shlb
dec
in
icebp
pusha
and
movsb
fnstcw
addb
pushf
mov
mov
xchg
sarl
push
fadd
inc
add
sbb
pop
inc
inc
popf
jecxz
add
out
add
sti
xorb
sub
fs
pop
inc
arpl
ds
sub
loope
lds
inc
xor
nop
add
and
cmpb
add
out
mov
repnz
pop
pop
inc
add
cmp
test
adc
out
adcb
jge
aam
and
es
std
adc
pop
sbb
loope
dec
mov
and
inc
xchg
mov
jl
add
cmpb
je
sbb
rolb
adc
add
adc
insb
push
add
loop
cwtl
sub
xor
push
adc
mov
pop
aam
mov
cld
loope
add
mov
add
push
daa
ja
add
xor
aas
jmp
add
jo
sub
lea
rcrb
add
lret
add
xchg
dec
push
test
and
int3
add
mov
sahf
add
sbb
add
jle
mov
mov
push
cwtl
jp
cmp
or
mov
push
sbb
out
loop
pop
incb
stos
cmp
sub
inc
add
test
shll
outsl
je
shll
jne
push
adc
inc
int3
dec
add
inc
dec
dec
and
add
cs
imul
dec
mov
cld
inc
add
out
sub
call
pushf
fiadds
outsb
sbb
mov
nop
cmp
add
mov
add
cmp
mov
and
daa
sub
push
dec
cmp
pop
mov
jge
in
push
lahf
inc
jp
add
push
cmp
cmp
loope,pt
jl
cmc
add
push
xor
and
push
adc
jnp
test
fsub
xchg
adc
dec
add
inc
rorb
add
add
inc
push
dec
ret
cmp
adc
les
jmp
push
add
push
and
dec
cmp
add
repz
out
mov
lcall
inc
aas
rcl
add
sbb
xchg
xchg
cli
jne
pcmpgtw
sub
stos
hlt
lock
push
ret
cmp
movsl
sbb
rcr
inc
imul
ja
scas
out
lea
mov
movsl
cwtl
data16
hlt
jg
or
addl
repz
fdivrl
inc
add
mov
push
insl
cmovp
imul
pop
dec
pop
push
jne
xchg
pop
inc
sub
out
push
into
lock
sub
xor
das
nop
insb
pop
popa
imul
lods
jb
and
cmpl
cmp
xor
add
pcmpgtd
fcmovne
inc
call
add
mov
pop
bound
push
adc
dec
add
stos
pop
ljmp
test
mov
mov
sbb
xchg
lods
lock
es
sub
push
add
in
sbb
jl
pop
imul
add
xchg
inc
mov
fldl
adcb
rcrb
mov
sbb
add
add
xchg
sub
idivb
xor
and
incb
sub
rcrb
test
xor
jb
shlb
sbb
outsb
sub
xlat
cwtl
sbb
data16
pop
add
sub
mov
call
add
sbbb
push
loopne
cmp
pop
cmc
testl
imul
cmp
testb
dec
outsl
xorb
in
push
adc
js
out
add
enter
testl
shll
push
mov
push
gs
jb
cmp
inc
sub
add
inc
lods
lock
pop
or
notb
add
popf
call
inc
ja
test
das
add
adcl
and
rclb
outsl
add
imul
fsubrl
push
or
test
std
adcl
add
mov
mov
lret
pusha
in
pop
push
mov
xchg
push
shlb
lea
subb
pop
adc
das
push
aaa
add
aad
dec
mov
dec
xchg
call
in
add
lock
push
out
sysret
test
xor
mov
int3
jge
enter
inc
add
add
add
sahf
xchg
leave
stos
add
cwtl
test
imul
popa
les
add
xchg
ss
inc
add
or
sbb
enter
shlb
push
xor
mov
adc
xor
add
cltd
pop
cmpb
fs
aas
cwtl
pop
pop
add
or
pusha
xor
clc
push
lods
adc
and
add
and
jne
cmp
add
mov
adc
ja
test
dec
shlb
std
add
ficompl
jno
sub
xchg
sbb
outsb
add
in
add
dec
adc
inc
repz
movsb
cmp
sub
jnp
lret
add
pop
or
and
inc
enter
add
cvtpi2ps
cmc
fs
mov
jne
pop
inc
inc
add
xor
pop
lahf
in
fnstcw
or
mov
jle
ret
push
lods
jl
call
pop
mov
or
inc
push
push
pusha
adc
jae
test
cmpb
lahf
mov
fdivrl
xchg
xchg
xchg
mov
add
pop
adc
movsl
push
add
gs
test
mov
pop
repnz
shrb
inc
scas
jl
jno
jmp
loopne
and
add
push
data16
insl
add
fs
xchg
add
and
leave
xor
xchg
mov
inc
sbb
mov
ret
push
push
inc
xor
cmpsl
scas
test
in
sahf
add
xor
imul
andl
sti
mov
sbb
shlb
les
add
dec
test
cmp
rclb
adc
and
inc
pushf
add
in
call
pop
xor
push
lock
test
or
pop
jge
popf
sub
jno
fmuls
aas
test
adcb
imul
dec
js
jns
clc
cmpsb
or
inc
arpl
adc
jae
enter
icebp
popf
es
insl
or
std
adc
mov
hlt
pushf
cmp
push
jle
push
or
push
call
xchg
stos
add
or
rolb
mov
dec
rcrl
hlt
add
fldcw
add
bound
sbb
sub
add
movzbl
jbe
push
das
in
add
sub
jne
mov
mov
inc
in
push
push
jmp
inc
xchg
jmp
inc
enter
add
or
or
inc
cmp
insl
jno
imul
aas
xor
sub
shrl
mov
add
sarb
push
xchg
pop
push
fidivs
hlt
inc
mov
add
adc
addl
sub
and
push
push
and
xchg
push
shrb
mov
or
adc
clc
mov
ret
cmp
fwait
and
rcll
dec
adc
and
adc
adc
mov
mov
xchg
call
add
cmp
test
push
imul
nop
imul
aam
adc
cld
mov
and
push
shrb
scas
add
jl
pop
nop
mov
xchg
pop
sub
addl
mov
inc
sbb
xchg
faddl
jg
pop
dec
sarb
mov
or
jnp
or
add
cs
add
sub
adc
popw
jle
add
test
xchg
lret
mov
jno
add
adc
push
cmpsl
sbb
jle
add
sbb
xchg
sub
and
fs
add
xchg
inc
mov
add
les
enter
and
xchg
shlb
or
fldl
pop
add
xchg
push
aam
pop
scas
xchg
add
cwtl
iret
cmp
pop
test
mov
sub
dec
xor
ds
push
fmuls
cli
mov
jg
push
pop
cmp
test
lcall
or
mov
addb
push
fs
cmp
add
setg
loop
jmp
inc
lcall
sarb
pop
and
jg
std
cli
adc
adc
mov
jae
insl
pushf
dec
xchg
add
push
hlt
cwtl
nop
pop
test
add
shr
inc
sbb
add
clc
movsb
or
lahf
test
out
or
push
push
mov
push
jge
std
out
pop
xor
cmp
ja
push
jns
test
clc
pushf
add
dec
add
aam
mov
mov
or
xchg
pop
add
cmp
cs
pusha
and
cmpb
in
das
and
push
xchg
aad
and
in
mov
add
mov
mov
adc
adc
movsl
sar
sub
rclb
js
popf
in
add
add
ds
lods
add
adc
add
xor
adc
add
mov
sub
cmp
mov
push
cmp
dec
leave
fldt
insb
mov
or
mov
add
hlt
mov
add
push
in
add
xor
outsl
test
mov
test
or
data16
dec
in
mov
mov
in
add
dec
mov
imul
pop
dec
or
dec
jae
mov
ss
push
adc
add
inc
repz
pushf
dec
add
cmp
sbb
mov
cld
loopne
xor
sbb
dec
sub
cmpl
je
and
push
jo
inc
bound
fs
sub
shrb
scas
sbb
lds
das
js
adc
outsb
add
xchg
push
bound
js
jnp
in
sbb
notb
add
xor
add
inc
push
mov
jl
dec
out
repnz
and
sub
ficoms
mov
fstl
cmp
xor
loop
sarl
andl
xorb
es
bound
imul
and
pop
dec
add
outsl
shrb
mov
add
les
andl
hlt
pmuludq
mov
jle
add
imul
add
and
add
pop
adc
add
push
outsl
push
mov
mov
into
push
xor
add
imul
je
add
jnp
pop
sub
cmp
dec
orb
sbb
pop
xchg
inc
pop
stos
push
lahf
inc
popf
pop
cmp
push
add
mov
push
sub
mov
dec
push
cmpsb
cmp
add
dec
jne
adcw
jge
add
push
imul
dec
inc
adc
dec
adc
das
inc
testb
sub
and
add
mov
nop
lahf
sub
pop
lods
xor
addb
dec
aas
sti
and
movsl
adc
adc
push
mov
adc
add
ds
lldt
push
inc
or
push
add
xchg
mov
or
sub
add
nop
mov
aad
jmp
sub
add
orb
push
jo
mov
lret
and
mov
mov
sbb
mov
subl
cli
pushf
test
stc
repnz
out
inc
idivb
sub
mov
test
aas
push
xor
lock
push
rcrb
dec
cmp
loopne
xchg
hlt
push
xchg
mov
mov
rcrb
adc
xor
add
sbb
rcl
pop
add
ror
rorl
shlb
int3
in
andl
fdiv
rolb
add
push
lret
xchg
addr16
add
push
push
jnp
dec
xor
in
scas
int3
push
clc
in
adc
mov
mov
loopne
mov
je
adc
or
mov
shl
lock
mov
and
sub
push
pop
pop
cli
into
sub
jmp
rorl
sbb
jo
xor
sbbl
sbb
and
dec
push
pop
push
femms
xchg
stos
les
clc
enter
test
cmp
bound
add
push
pop
aaa
pop
mov
mov
adc
lahf
xor
out
rolb
or
pop
add
dec
add
xchg
pushf
mov
das
sbb
sbb
pop
add
mov
mov
imul
in
cmp
sub
mov
add
cwtl
dec
xchg
sbb
das
movl
sbb
sti
and
clc
cmp
jb
mov
enter
inc
add
call
add
les
inc
add
fidivrs
aam
sub
pop
pusha
in
push
push
pop
insb
adc
jns
adc
cmovp
cmpsb
testl
nop
mov
repz
mov
inc
repnz
cmp
ret
cmpsl
fnsave
mov
call
sbb
pop
lods
mov
fnstenv
jnp
cmovs
sbb
cmp
dec
dec
inc
pop
inc
cmp
adc
or
sub
inc
dec
cmp
mov
inc
or
lret
add
cmp
popf
leave
dec
or
xor
xorb
add
mov
add
adc
cmovb
cld
mov
or
in
sub
add
ret
test
add
movsb
icebp
mov
jmp
adc
mov
push
aas
add
hlt
adc
cwtl
iret
mov
sub
add
jmp
push
add
inc
fldl
mov
jne
pop
sahf
mov
jmp
mov
pop
dec
mov
rclb
mov
pop
ds
pop
adc
cmp
push
add
dec
test
shll
mov
jo
test
aas
jb
or
sbb
add
fdivp
dec
popa
inc
add
cwtl
jmp
daa
dec
jp
out
clc
add
add
cmp
add
push
mov
or
sbb
xchg
sbb
in
pop
ljmp
inc
ja
addb
lret
pop
hlt
pop
adc
add
clc
cmp
add
mov
add
lock
add
sub
sub
testl
add
es
lret
sbbb
fldl
add
dec
sub
loopne
pop
loope
jns
das
or
mov
lods
add
jo
add
sbb
cmpsl
add
sub
sbb
push
xor
arpl
popf
jg
inc
xor
or
add
add
cmp
ja
push
add
fnstsw
imul
jge
sub
inc
xchg
add
je
push
dec
ret
arpl
mov
add
push
adc
sbb
jo
add
push
xchg
pop
inc
sbbb
rep
jle
push
testb
stc
inc
loope
incb
sub
cmp
sahf
imul
xchg
sbb
js
repnz
lock
aaa
mov
cmp
xchg
fs
in
push
imul
sarb
loope
pop
adc
incb
fs
lds
test
and
or
pop
sub
cmp
mov
jne
pop
add
sbb
movsb
add
adc
push
pop
mov
push
add
movsl
cmpb
sub
jmp
add
inc
adcb
fwait
popa
sahf
cmp
pop
rdpmc
int3
push
and
add
lret
push
cmp
pop
and
cmp
insb
iret
loopne
adc
or
sbb
pop
lret
subb
xor
pusha
inc
sbb
sahf
jne
cmp
add
out
sbb
ret
pop
cmc
dec
je
pop
add
in
scas
sub
add
mov
dec
push
shrb
mov
test
pop
jno
in
into
popa
cmp
or
ljmp
add
lods
enter
div
add
js
cmpl
inc
xchg
lea
add
std
in
add
xor
fdivs
fiadds
jle
push
repz
pop
adc
add
cli
ljmp
and
xchg
xchg
and
out
xorb
cmp
das
je
add
imul
add
mov
cld
loopne
add
test
push
dec
push
aam
pusha
cwtl
out
sbb
repnz
add
add
decb
sub
rep
test
add
ret
daa
aaa
pusha
push
pop
jb
or
push
mov
pcmpeqd
inc
jne
mov
mov
mov
inc
mov
or
pop
fsubrl
add
cs
inc
jl
loopne
clts
push
sub
jle
bound
jmp
arpl
sarl
add
push
mov
enter
rcrl
add
mov
inc
add
jmp
dec
sbb
sbb
sub
and
je
add
or
add
adc
jmp
jg
incb
push
add
leave
negb
add
mov
add
pop
push
sub
mov
cld
add
enter
cmp
fstp
aam
icebp
add
jge
sub
jno
fdivrs
jb
pop
aaa
cmp
cmp
adc
inc
add
pop
push
add
orb
add
and
into
add
cmp
mov
sbb
add
mov
sbb
inc
jne
mov
pop
aam
call
push
adc
push
mov
sbb
dec
lahf
mov
adc
jae
pop
mov
adc
rcrb
prefetch
and
and
add
xchg
dec
fcoml
mov
jp
add
sub
dec
clc
adc
ret
insb
jmp
push
lock
add
repz
xor
jnp
add
push
insl
adc
mov
mov
dec
out
jno
lds
dec
dec
int3
and
inc
mov
sub
fdivl
add
popa
outsb
xchg
addr16
mov
inc
add
add
ja
mov
inc
jg
int3
push
jne
mov
mov
flds
dec
ret
cmp
add
sbb
or
out
cmp
addr16
cmc
gs
iret
add
or
or
loop
mov
cmp
push
movsl
jp
test
pop
mov
loopne
xlat
push
repnz
decl
jmp
or
hlt
mov
add
xchg
lds
adc
call
mov
pop
jbe
and
add
rorb
add
inc
pop
and
mov
call
loopne
fwait
dec
iret
xlat
gs
add
xor
pop
add
repz
xchg
nop
stc
add
ljmp
or
add
das
icebp
jmp
scas
leave
or
cmpsb
xor
bound
cmp
sbb
jo
or
mov
andl
call
fdiv
addr16
xor
dec
add
dec
jbe
test
inc
pop
mov
xor
mov
xchg
push
add
adc
cmp
sbb
jns
add
or
and
push
or
sub
xor
jns
add
push
shl
dec
hlt
jo
jae
adcb
cwtl
sarb
sbb
xor
add
jae
fs
mov
nop
test
jecxz
loop
repz
sbb
dec
lods
add
shlb
xchg
cwtl
pop
rolb
out
loop
rolb
mov
or
push
hlt
jg
add
rorb
and
pop
fadds
dec
test
in
adc
jp
rclb
jle
sar
les
xchg
sbb
je
lidtl
out
dec
pop
adc
add
mov
mov
cmovl
inc
dec
dec
icebp
out
outsl
cmp
ds
pop
sbb
sub
fadd
dec
dec
out
pop
push
inc
leave
pushf
loope
adc
rolb
inc
jp
fidivs
clc
ja
add
adc
inc
or
mov
std
aad
inc
or
cmp
xchg
push
bound
mov
inc
sbb
nop
or
or
and
mov
rclb
repnz
and
push
jnp
add
adc
push
lods
lahf
pop
mov
and
adc
orl
push
add
xchg
jo
xor
lcall
jle
cmpsb
test
push
inc
pminsw
loopne
js
xchg
sbb
push
mov
inc
shr
xorl
or
and
push
mov
or
mov
ss
enter
stc
push
scas
add
sub
setb
cmp
add
mov
faddl
imul
or
flds
cmpsl
and
pop
arpl
adc
ret
pop
cld
iret
pop
movsl
jae
cmp
cmpl
fidivs
pushf
add
add
mov
andb
inc
sarb
mov
lret
add
aad
or
push
decb
dec
jp
sub
std
pusha
push
adc
xchg
jle
add
in
jmp
add
sub
cmp
sti
push
dec
adcb
dec
movsb
outsb
jge
scas
sub
mov
inc
inc
sub
loopne
mov
lcall
fidivl
les
nop
sub
rcll
outsb
jno
add
and
mov
loop
sbb
cmp
add
inc
imul
add
add
dec
adc
aad
loopne
and
stos
xchg
fidivl
enter
ret
mov
lods
insl
add
add
mov
add
adc
insl
lods
movsb
fnstenv
mov
cld
and
sbb
mov
inc
clc
mov
push
jge
je
push
push
and
pusha
lret
jb
lds
xchg
add
pop
fldt
rclb
mov
push
xor
push
add
sbb
adc
xchg
mov
nop
cmp
jo
fstpl
lcall
add
out
pop
add
loopne
add
xor
loope
mov
cmp
rol
loop
sahf
mov
or
add
or
pop
rcrl
mov
sub
pop
pop
iret
mov
insl
add
movsl
std
sbb
xchg
daa
rcl
cld
sbb
or
add
pop
mov
test
inc
push
loop
mov
and
lret
adc
cmp
ss
push
dec
or
add
aas
jnp
aad
add
and
arpl
cmpsb
hlt
jo
add
mov
aam
mov
ficoms
cltd
add
add
rcrb
dec
add
aaa
pop
ds
mov
testb
add
dec
and
out
lahf
clc
stos
add
push
fimuls
cmp
push
xorb
jno
shr
nop
pop
jge
es
outsb
add
popf
cld
mov
inc
and
imul
jl
sbb
dec
lds
mov
jmp
jne
add
fidivrs
daa
inc
in
add
push
dec
aad
sub
cmp
jge
pop
adc
inc
add
jae
xor
rcrb
stc
lcall
inc
mov
pushl
pop
pushf
shlb
inc
mov
call
pop
das
add
ja
adc
sub
repz
in
test
cmp
sub
lcall
repz
pop
add
loopne
cmp
lock
cwtl
xchg
ljmp
or
sub
inc
adc
inc
and
mov
enter
clc
and
jmp
and
arpl
fstpl
fwait
aad
nop
orb
mov
cmp
push
sub
lods
jne
mov
add
sub
pushf
push
rolb
sbb
mov
push
xor
ds
or
enter
ret
jg
add
adcb
pop
mov
add
mov
fcmovnu
push
rolb
fwait
pop
jmp
pop
jmp
nop
sbb
add
cli
push
mov
cltd
mov
push
add
stc
add
inc
add
or
pop
add
icebp
in
fisttps
mov
xlat
lea
mov
xchg
stc
pop
stc
enter
pop
add
sub
add
adc
push
pop
sbb
pop
add
push
fs
ret
mov
or
roll
subl
push
flds
mov
fcmovnbe
mov
or
mov
subb
mov
repnz
fisttpl
faddp
fsubs
jecxz
fsubrl
sahf
ja
sub
push
pop
dec
sub
out
jb
xor
inc
xchg
cmpb
inc
jo
push
add
stos
rorb
aas
rolb
or
add
mov
push
add
call
nop
push
cmc
adc
dec
adc
mov
mov
cmp
rorb
add
jnp
out
adc
shlb
loop
push
add
or
sbb
adc
cmpsl
aas
dec
leave
nop
sbb
loopne
add
lea
inc
add
add
pop
or
pop
cmpsl
push
lea
movsl
in
aad
sub
mov
lret
xchg
cmp
adc
fisttps
sbb
dec
loop
lds
add
fistpll
outsl
xchg
andb
jg
int3
pop
add
or
dec
sub
add
inc
sbb
push
outsl
test
and
icebp
adc
fwait
les
lcall
cmc
and
sbb
push
jns
scas
or
and
add
mov
cmp
rolb
mov
mov
add
xor
pop
jo
xor
pop
repz
lcall
rolb
mov
pusha
test
lds
or
mov
andb
sub
filds
pusha
in
fdiv
adc
add
in
aam
push
and
sar
pop
mulb
out
cld
popl
aam
inc
add
inc
sarb
popf
inc
fidivrl
lds
add
ja
bound
adc
xchg
loopne
add
cmpsl
out
cmp
push
ret
fstpl
out
incl
jp
cmp
jecxz
pushf
ret
icebp
push
add
inc
mov
out
xchg
shrb
sub
lcall
outsl
add
sahf
or
popa
icebp
add
mov
sbb
popl
dec
xchg
xchg
cmp
add
les
pop
fstl
add
mov
nop
sub
push
sbb
cli
add
mov
jnp
and
push
pop
jo
imul
xor
mov
add
cmp
xchg
push
add
hlt
daa
jo
add
pop
stos
sbb
jge
push
inc
or
insl
sbb
lcall
in
popa
in
ljmp
les
enterw
pop
cmpsb
imul
add
push
cmp
cwtl
push
xchg
lret
push
cmpb
punpckhbw
mov
cld
lock
jo
cs
test
mov
shrl
xchg
aad
sbb
add
xorb
xor
add
mov
and
add
jbe
jo
jmp
icebp
stos
dec
jl
jecxz
mov
cs
push
inc
into
pop
loopne
rolb
dec
jg
or
test
enter
fadd
out
es
cmpsl
push
stos
fsubrl
xor
jo
add
cs
scas
dec
cmc
add
rorb
jle
nop
add
leave
pop
ds
inc
cmpb
pop
jp
movb
sbbl
add
add
push
mov
add
int
jecxz
mov
add
ss
adc
addl
pusha
push
outsb
jb
gs
imul
and
clc
call
dec
add
add
leave
imull
add
stc
mov
cltd
inc
push
lock
clc
cmp
test
cmpsl
mov
sti
imul
mov
ds
mov
adc
jne
setbe
add
gs
and
add
adc
push
mov
add
cmpb
add
clc
pop
xchg
jo
xor
add
fwait
inc
pop
add
adc
and
and
add
lahf
add
xchg
jne
mov
push
hlt
orb
mov
sbb
mov
xorl
popl
das
fldenv
ss
lods
scas
add
loopne
adc
sbb
hlt
mov
out
adc
arpl
mov
xor
mov
add
inc
fsubs
mov
ss
pop
push
add
mov
mov
jo
add
cwtl
and
ds
inc
shl
add
sbb
fidivrs
mov
verw
pop
je
push
mov
add
sub
mov
adc
dec
or
mov
sub
pop
mov
or
jbe
lea
hlt
inc
add
pop
loope
imul
jmp
push
loopne
xchg
jns
lsl
xor
add
outsb
push
jp
pop
rorb
cmp
sti
add
loopne
jns
push
xor
in
sub
sbb
adc
fsubl
sbb
hlt
movsl
add
loopne
mov
pop
add
or
sbb
filds
int3
jg
xlat
sub
jnp
jmp
add
adc
arpl
pusha
add
and
adc
nop
pop
movsl
add
daa
das
andl
xor
jmp
add
scas
mov
repnz
xchg
jle
push
ljmp
cmp
in
xchg
add
inc
xchg
jnp
cltd
ss
scas
enter
inc
incb
or
mov
in
data16
inc
and
add
fwait
pxor
cmp
fucom
std
pop
xchg
push
push
in
out
add
out
jbe
psadbw
add
cmp
mov
push
add
xor
rcrl
ret
add
sub
jp
or
sub
pop
mov
dec
xor
in
rorb
mov
movl
clc
add
jmp
jl
pop
xor
cltd
cmc
add
push
lods
das
cmpsb
fldl
xlat
fwait
shlb
std
add
into
pop
add
in
out
or
jl
add
out
jb
mov
add
push
or
jns
dec
mov
fld
fdivrs
add
mov
cwtl
nop
push
pop
push
dec
arpl
push
cmpsb
push
xchg
push
pop
add
cld
dec
sub
and
cmp
cmp
rolb
add
cmp
cmp
stos
pop
cwtl
roll
lds
lahf
in
cwtl
adc
add
add
pop
lcall
cmp
add
or
sbb
add
push
dec
add
push
cmp
dec
sub
out
enter
inc
add
rolb
pop
cmp
mov
aam
icebp
mov
jo
add
push
loopne,pn
pushf
lret
sbb
jne
cs
ja
xor
jg
nop
and
add
add
inc
cmp
add
or
mov
sbb
cwtl
hlt
stos
and
pop
addb
sbb
ret
fsubl
add
mov
out
sub
jge
fldenv
xor
fs
arpl
xchg
cmpsb
mov
add
lret
mov
lea
mov
cmp
jb
sbb
faddl
sub
out
mov
sbb
push
and
mov
leave
pop
pusha
push
xor
inc
pop
xchg
dec
xor
aad
test
test
xchg
sbbb
add
cltd
rcrb
mov
cmc
and
dec
pop
adc
inc
mov
aad
add
mov
hlt
loopne
pop
enter
dec
add
repz
adc
pop
jo
stc
push
push
rolb
cmp
xlat
in
add
cli
shl
adc
xchg
mov
lret
add
aam
addb
int3
add
or
cwtl
adcb
mov
push
loope
test
add
das
add
cli
xor
movsb
pop
mov
sub
leave
rolb
sbb
lds
inc
xchg
inc
add
loope
or
leave
xchg
add
mov
popl
imul
jb
add
outsl
dec
fiaddl
jmp
repnz
sub
pop
in
aam
in
int3
mov
ret
inc
scas
andb
or
add
in
sbb
adc
cmc
sub
cmp
add
mov
adc
add
or
mov
cmp
mov
mov
push
cmp
cwtl
or
mov
xchg
sub
xor
fildl
inc
jne
cld
add
fisttps
push
insb
stos
into
enter
dec
icebp
xchg
outsl
xchg
add
cmp
add
xor
mov
inc
and
jle
repnz
lret
fwait
or
jle
sbb
xchg
mov
outsb
cli
adc
rcl
icebp
inc
mov
cmp
add
add
mov
add
or
stc
inc
or
push
push
std
dec
jge
add
sahf
imull
in
movl
inc
imul
sbb
add
add
add
pop
pusha
add
mov
jmp
jmp
add
mov
fwait
mov
cli
fdivr
nop
and
das
loope
push
add
stos
mov
or
push
jg
insl
add
pusha
and
mov
dec
mov
inc
divl
out
ret
dec
cmp
test
neg
add
ret
mov
and
push
add
push
popa
adc
setge
xorb
pop
cld
adcb
icebp
test
adcb
gs
inc
add
sbb
inc
das
add
je
pushl
lock
add
mov
cs
dec
mov
pop
add
in
sub
pop
jmp
inc
clc
scas
adc
out
rolb
sbb
test
das
mov
adc
jne
add
cltd
sahf
cmp
clc
add
or
inc
jbe
in
cli
add
sti
addl
or
std
adc
lcall
or
mov
xor
adc
cmpb
dec
pop
test
sarb
mov
pop
sti
sbb
pop
in
mov
or
or
loopne
pop
nop
prefetch
andb
mov
add
imulb
pushf
test
add
fnstenv
mov
xchg
mov
test
outsb
popa
nop
xchg
or
add
jne
lcall
inc
dec
dec
test
mov
jnp
les
cmp
cwtl
adc
fs
add
shlb
mov
add
movsb
push
add
daa
in
adc
aad
add
dec
push
add
adc
pusha
add
lret
mov
mov
clc
push
push
out
add
das
xor
push
lea
ja
and
incl
ss
jmp
aas
rcrl
cmp
adc
lret
xor
repnz
aas
dec
mov
xor
mov
outsl
cmp
mov
stc
or
hlt
std
in
pop
sub
and
shlb
in
lods
push
mov
pop
sbb
add
jl
push
inc
xor
cmp
movl
mov
cmc
into
insb
cwtl
ret
enter
dec
mov
str
adc
add
push
pusha
cltd
mov
inc
dec
jmp
data16
mov
add
push
and
xor
sbb
push
pop
call
shlb
lods
test
orb
pop
and
dec
add
ret
movsb
clc
adc
xlat
adc
add
ljmp
dec
stos
push
mov
mov
pop
push
adc
fsts
add
cmova
int3
dec
xchg
cwtl
push
sbb
push
add
cmpsb
insl
rcrb
push
sbb
movsl
add
add
arpl
add
jmp
dec
xchg
and
mov
sahf
xor
add
enter
test
jmp
loopne
shl
jo
add
int
cmp
hlt
or
xchg
dec
out
jb
xor
lret
add
or
jnp
mov
mov
test
add
inc
pop
iret
shrb
ficoml
or
fsts
addr16
cmp
scas
cs
sub
add
outsb
jecxz
enter
add
fimuls
fucomi
mov
add
add
xorl
xchg
mov
pop
cli
push
fisubl
sub
add
mov
mov
repz
add
cmovp
push
sub
add
and
add
xor
movl
dec
push
or
adc
sti
lahf
pop
add
imul
mov
add
add
js
add
sbb
push
roll
aas
fmul
repnz
jo
add
inc
clc
adc
adc
sbb
push
cwtl
mov
adc
sbb
pushf
add
sbb
cmp
mov
and
push
sbb
out
add
ss
insl
sbb
cmpsl
daa
arpl
rcl
adc
data16
add
hlt
xor
sub
or
es
rolb
xor
cmp
or
add
pop
cmp
mov
scas
rorb
jno
add
xchg
int3
sbb
lcall
xchg
xor
jle
mov
cmp
js
dec
or
jne
movl
imul
or
fidivl
add
roll
data16
mov
push
cltd
pop
add
loopne
or
orb
fs
add
jns
add
sub
daa
adc
push
subb
sbb
es
cltd
sbb
out
inc
lods
mov
addl
or
xchg
push
mov
adc
jg
mov
add
repz
cwtl
adc
adc
out
les
inc
mov
push
jl
or
add
sub
loopne
add
decb
fcoml
mov
dec
cld
and
outsl
fiadds
sbb
fsubl
lahf
mov
test
sbb
add
ja
cmp
xor
sbb
pop
sub
or
inc
sub
mov
cmpb
sub
bound
jge
add
push
lcall
leave
pusha
pop
or
add
pushf
out
add
lahf
inc
lcall
push
mov
xor
and
bound
pusha
dec
add
jge
icebp
sarb
add
inc
add
adc
lods
add
adc
icebp
add
mov
lea
xor
adc
add
lret
inc
cmpb
jg
in
cmp
or
add
add
push
xor
orb
andb
add
lea
cli
push
int
add
xor
add
mov
sub
cltd
xchg
jge
cmpl
push
in
xchg
sahf
test
std
int3
leave
add
and
scas
fs
or
add
sub
xchg
lret
ret
add
out
lea
and
jg
or
sbb
jne
push
cwtl
jle
mov
xchg
sbb
adc
add
and
movsl
add
popa
adc
lret
add
stos
or
repz
je
popf
push
js
add
fisubs
pop
add
daa
popa
push
add
std
fimull
inc
mov
or
das
test
adc
add
cld
test
inc
imul
js
jle
arpl
in
add
xor
jne
lods
es
add
or
push
xchg
int3
add
jmp
bswap
sub
mov
fs
sahf
push
test
add
xor
loopne
loope
fstpt
push
pusha
out
pop
pop
xor
jb
je
cld
adc
loopne
lahf
push
or
add
cmpsl
addr16
daa
outsl
imul
or
add
jne
inc
ds
and
xchg
xlat
xchg
rol
sbb
or
and
test
fistpll
jbe
mov
push
scas
sub
lock
pop
add
mov
add
popf
insb
push
sbb
mov
hlt
sbb
sbb
jle
cmp
and
add
mov
pop
int
mov
adc
sbb
sbb
aam
pop
ja
jge
movsb
mov
or
push
push
imul
fnsave
je
push
mov
jg
add
outsb
xchg
cli
mov
test
cmpsl
repnz
mov
xchg
adc
orb
sub
lock
stos
sub
sbb
add
int3
arpl
add
pop
mov
jge
fimull
nop
loope
xor
cmp
add
push
xlat
sub
gs
sbb
nop
mov
imul
int3
std
xorb
dec
mov
dec
jp
loopne
dec
push
adc
movsb
mov
or
dec
test
out
insl
scas
sub
push
jae
add
inc
int3
jo
add
nop
out
push
cltd
mov
jno
sbb
jecxz
pop
push
add
jl
jns
jl
push
push
and
inc
mov
call
xchg
mov
hlt
in
shlb
clc
rorl
lods
xor
pop
push
ret
add
dec
push
mov
ja
sbb
je
lcall
sub
and
mov
xchg
xchg
in
xor
pop
mov
jb
add
outsb
mov
mov
jmp
lds
daa
adc
int
das
mov
int3
inc
dec
dec
push
and
add
insl
movsl
dec
test
add
inc
pop
cmp
lret
outsl
cltd
lods
leave
movsl
and
lods
aaa
test
xor
lea
and
je
rolb
movsl
cld
insb
dec
arpl
nop
mov
das
add
xchg
pop
xlat
dec
popf
add
add
iret
insb
ret
movsl
stc
mov
inc
loopne
in
popa
add
pop
or
das
adc
jo
shrl
and
push
sbb
daa
jbe
roll
mov
push
sbb
mov
call
into
andl
sbb
pop
add
test
pop
test
and
les
aam
addl
fnstcw
loopw
xor
loopne
ljmp
ljmp
adc
fsubrl
xchg
lahf
movsl
or
xorb
mov
clc
dec
xchg
inc
pop
push
and
loopne
sbb
rclb
je
add
push
inc
clc
cmp
test
jmp
ljmp
inc
hlt
adc
pop
or
std
dec
pop
sbb
add
sbb
in
add
sbb
or
insl
add
call
in
add
xor
popa
add
and
mov
sub
popf
jne
and
push
mov
add
jle
sub
bound
push
sarl
mov
adc
cmp
add
xchg
sbb
adc
clc
xchg
jns
add
stos
subb
mov
pusha
and
mov
movsl
jge
lahf
or
test
ret
inc
incl
sarb
pop
in
add
inc
divl
mov
test
call
ja
fadds
and
rol
mov
or
les
add
sarl
pop
or
xorb
add
stos
and
add
mov
pushf
push
xchg
pusha
les
jp
mov
or
xchg
xor
pop
push
add
or
nop
xchg
mov
push
xchg
mov
dec
jne
add
mov
jae
clc
insl
add
dec
mov
lahf
rorb
add
ja
jo
cmp
push
lock
push
xchg
jae
add
pusha
xchg
sti
mov
mov
pop
cmpsb
ret
scas
imul
lret
cwtl
push
mov
stc
push
inc
mov
jg
push
roll
pushf
jbe
and
test
call
or
outsb
aaa
sub
std
add
insb
mov
jnp
add
dec
add
add
ss
add
xchg
out
imul
mov
addl
sbb
jge
shld
sarl
dec
sbb
cmpl
adc
inc
mov
xchg
xorb
das
pop
arpl
sbb
xchg
adc
jne
outsl
test
sub
xor
push
push
pop
mov
movsl
lock
cld
push
loope
sub
cmp
cs
test
inc
xor
mov
lret
push
rorb
dec
add
xchg
cmp
ret
push
cmp
add
cmp
test
add
loope
jne
adc
call
fbstp
or
xlat
int
add
xchg
cwtl
or
mov
fadds
dec
jne
jnp
add
mov
cld
cmp
adc
clc
adc
add
imul
cmpsb
mov
or
int3
xchg
inc
stos
or
test
cmp
push
jae
pop
mov
sub
lea
mov
ja
pusha
popf
outsb
add
movsb
popa
int
mov
fldt
lock
xor
fdivs
je
add
dec
mov
add
scas
es
in
lret
out
popl
add
adcb
jbe
push
insb
add
xchg
icebp
cmp
sub
rcrb
cltd
ja
lcall
cs
bound
push
and
adc
lcall
push
cmc
sbb
test
xor
repnz
adc
jg
mov
lds
pop
inc
sbbb
test
jno
scas
add
xchg
mov
xchg
repnz
mov
cmc
sub
mov
lock
mov
lock
insb
verr
lea
add
push
lcall
getsec
xchg
or
add
stos
ffree
push
mov
pop
pop
xchg
push
inc
ja
or
jmp
aaa
lock
lret
adc
imull
btr
emms
jne
sbb
fs
xchg
xchg
std
add
out
lds
sti
ud1
in
inc
in
out
or
cmp
inc
push
lds
stos
and
cmp
inc
xchg
orb
pop
dec
pop
add
punpckhbw
aam
mov
mov
mov
aaa
mov
push
sbb
add
and
lret
call
daa
and
dec
out
push
add
cld
es
push
jmp
roll
movsb
clc
jp
scas
add
mov
push
sbb
es
dec
sbb
je
push
mov
fimuls
sbb
cmpsb
rolb
jmp
cli
loope
jp
adc
or
movsb
and
imul
or
cmpsb
xor
add
orl
jae
mov
test
sub
push
add
cld
ja
cmp
fwait
and
jmp
insb
jne
add
je
xchg
cmp
add
push
sub
leave
sub
and
inc
out
js
icebp
sbb
je
test
cs
aam
test
insb
mov
lock
jnp
and
or
dec
shl
add
xchg
aam
sbb
inc
mov
repnz
test
je
push
or
pusha
lea
aam
jp
sub
inc
pop
cmpsb
dec
mov
ds
shrb
jnp
add
cmp
mov
jmp
adc
add
inc
mov
sub
jl
xor
or
into
outsb
sbb
bound
mov
adc
add
dec
xor
push
mov
cmp
push
je
or
jno
jge
ds
or
push
and
cmp
nop
sahf
add
divl
dec
add
jge
add
movsb
out
jbe
xchg
cs
popf
push
int
jo
ds
inc
and
jo
pop
fs
cld
pop
add
cmp
fidivrl
cli
stos
or
cmpsl
data16
js
jge
xchg
pop
pop
push
rclb
ja
shrl
add
cld
xchg
lods
adc
notl
test
or
test
pop
add
cmpsl
inc
out
aad
add
adc
cmp
push
popf
int3
add
mov
add
mov
add
mov
sub
xchg
mov
out
adc
inc
jle
pushf
movsb
lods
push
movsl
clc
mov
shrb
imul
call
repz
xor
sbb
or
ror
pop
jae
lock
xor
push
test
jbe
add
mov
adc
rcrb
jge
jmp
mov
mov
test
add
test
sub
add
jae
adc
nop
sbb
stc
adcb
push
mov
sbb
ja
adcb
test
montmul
cmpsb
add
rcll
repz
andb
mov
std
inc
hlt
enter
inc
add
or
add
jnp
test
push
cmp
inc
push
cmp
inc
loop
jo
adc
enter
mov
and
cwtl
clc
in
adc
inc
addl
jg
mov
pushf
dec
clc
add
xor
cmp
inc
addl
or
hlt
movb
cs
sbb
add
mov
jnp
inc
inc
lret
jo
stos
add
dec
stos
iret
or
insb
pop
and
cmpl
imul
outsb
rcl
pop
add
xorb
add
adc
add
mov
and
es
insb
xchg
push
mov
add
rorb
dec
xor
push
mov
push
mov
roll
mov
sbb
pop
int
add
add
dec
adc
and
mov
in
inc
push
push
scas
mov
xchg
and
push
das
mov
loopne
pop
cmp
adc
inc
out
mov
gs
pop
sti
add
iret
push
push
pop
icebp
and
add
test
mov
cltd
dec
scas
adc
aam
add
jo
cs
push
enter
lds
jg
xchg
dec
inc
lods
scas
test
filds
push
xchg
mov
out
and
pop
stos
call
add
push
jne
xchg
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
fwait
gs
push
cmp
add
xor
add
fs
jno
bound
xchg
and
ljmp
push
mov
add
and
push
push
push
stos
shlb
dec
aad
sub
in
and
das
nop
test
in
xchg
addb
adc
pop
xor
add
cmp
test
in
movsb
iret
jecxz
test
test
mov
add
dec
mov
cmp
cwtl
add
imul
subb
mov
add
insl
mov
movsl
add
jno
dec
add
cmp
js
lea
xor
cmp
in
test
sbb
jge
mov
loopne
pop
xor
jle
push
adc
dec
ds
inc
jae
movsb
add
pop
add
mov
sub
pop
jge
push
lret
lahf
sub
mov
out
mov
test
cwtl
iret
leave
js
add
out
imul
add
outsl
mov
mov
cli
clc
je
add
js
jo
dec
cmp
add
cmp
jo
add
scas
or
jge
sbb
mov
or
jl
fcoml
in
pop
add
popa
lods
cmpb
add
cmc
nop
xor
std
and
sbb
and
push
xchg
addl
pop
cmp
in
sbb
add
pop
nop
rclb
insb
mov
and
jns
sysret
aad
dec
mov
iret
lock
pshufw
in
or
dec
mov
and
cmp
int
or
dec
popl
into
jo
add
mov
add
push
lods
frstpm(287
mov
sub
add
mov
inc
mov
testb
add
pop
shrb
add
shrd
mov
add
xchg
xor
add
inc
sub
lss
in
call
add
cmp
js
mov
fisttpll
cmp
add
hlt
rol
xchg
sub
and
add
add
leave
imul
push
and
pop
add
jo
add
movsb
dec
pop
push
lret
mov
add
pop
ret
add
pop
add
gs
lock
lahf
or
insb
ja
aam
and
rolb
mov
pop
aas
add
or
pusha
out
cmp
sub
adc
pop
mov
dec
nop
or
and
les
cwtl
or
je
imul
push
xor
cmp
das
xchg
add
subb
cmp
cmp
sbb
xchg
inc
add
mov
inc
mov
sub
adc
and
add
jle
xchg
jo
add
cwtl
xchg
add
push
pop
and
jp
int
repz
cltd
cld
xchg
mov
jae
fwait
test
pop
hlt
pop
add
sbb
or
jns
movsb
or
add
lcall
loopne
imul
add
shl
cmp
dec
lret
sub
push
lahf
and
in
inc
add
mov
push
lock
data16
dec
mov
xor
popa
pop
push
shr
jae
cwtl
inc
add
mov
add
jnp
push
dec
ror
lock
lret
pop
mov
jbe
push
repnz
mov
call
cmp
jnp
loopne
add
push
sub
scas
inc
andb
jl
add
rol
xlat
cld
mov
add
into
test
mov
ss
hlt
push
ljmp
pop
insl
inc
xor
adc
add
popa
rol
pop
cmpsb
push
xchg
sbb
push
jnp
add
add
inc
stos
add
in
pop
call
xor
sbb
movb
mov
inc
arpl
in
scas
add
mov
stos
jecxz
pop
lock
icebp
movsb
add
outsb
mov
sbb
mov
mov
nop
sti
add
mov
psraw
add
inc
loopne
pop
cmpb
nop
aas
dec
pop
js
add
dec
pushf
jecxz
inc
es
jbe
add
test
cmc
cmp
xor
dec
daa
pop
add
je
add
sub
pop
jnp
sbb
pop
data16
std
add
xor
fsub
mov
add
addr16
imul
push
add
mov
rcr
fsubs
push
add
fistpll
and
or
rclb
in
add
adc
pcmpgtb
lea
rcrl
ret
sub
roll
lods
je
pop
cmp
push
adc
test
icebp
lock
xchg
jno
xchg
add
inc
add
add
or
subl
add
fildll
push
add
mov
add
xor
or
add
add
pusha
jnp
cld
imul
stos
movl
adc
adc
pop
fiadds
jmp
or
sbb
repz
sar
addl
sti
jl
aas
adc
lock
subb
cltd
in
dec
add
pop
popf
in
ret
lds
ja
xchg
iret
lods
push
mov
mov
fdivrl
test
decb
lahf
movsl
jne
pop
pop
sbb
ret
mov
jo
push
or
push
pop
pusha
jnp
mov
loop
add
cmpsl
add
dec
xor
add
mov
aas
sub
sub
jne
mov
mov
pop
loopne
add
jl
dec
sbb
push
add
mov
lock
dec
add
andl
imul
ljmp
call
shll
push
or
dec
jo
cld
sti
xchg
pcmpeqb
adc
or
dec
loope
mov
jecxz
loopne
mov
je
jmp
sub
in
ds
jmp
add
scas
adc
popa
mov
lcall
inc
dec
je
adc
and
xorb
jecxz
pop
push
lret
push
or
ror
sbb
fdivs
jae
mov
out
add
scas
jb
jno
add
leave
div
insb
lods
jmp
in
loop
inc
add
inc
add
add
or
loopne
xchg
add
std
mov
sbb
jae
dec
mov
frstor
mov
and
jmp
xchg
add
or
jg
sub
cmp
cmp
jge
sub
iret
ret
mov
jno
jmp
push
aad
jo
pop
jb
paddsw
xchg
mov
mov
ja
add
pop
imul
mov
adc
lods
jne
pop
cmp
cmp
clc
xchg
push
ret
daa
mov
jmp
jge
ret
pop
pusha
fldt
xchg
inc
movsl
cmp
jp
je
push
pop
xor
inc
add
fisttpl
mov
sub
ljmp
sub
add
mov
push
rclb
das
mov
push
adc
repnz
xchg
mov
add
call
push
pop
mov
adc
inc
cld
jg
aas
inc
sbb
dec
fnstcw
jae,pt
test
mov
adc
shrb
sub
add
push
push
sti
xor
jmp
into
or
out
mov
dec
push
sub
jae
add
cmp
sahf
fstpl
cmpb
sub
ja
add
push
jns
jbe
cs
mov
sarl
xchg
out
jecxz
adc
pop
lods
inc
inc
jp
sbb
insb
pop
ja
subb
test
mov
mov
and
lret
add
xchg
mov
sub
jne
adc
dec
sti
ror
jns
add
repnz
imul
cmp
xor
insb
dec
add
dec
dec
xor
add
jnp
xchg
adc
adc
cmpl
or
and
insb
cmp
cli
adc
and
in
jbe
add
mov
xchg
and
pop
call
xchg
lock
test
xchg
pop
scas
rcrb
mov
add
ja
push
call
movsb
add
mov
outsb
add
or
or
cmc
or
not
addl
addb
mov
xlat
xor
or
dec
xchg
xchg
adc
sarb
subb
orl
xchg
test
test
add
repnz
ja
adcl
hlt
mov
in
loopne
les
lret
add
mov
insl
add
test
cwtl
test
int3
cld
cmp
jnp
push
and
jo
mov
add
mov
xor
xchg
repz
adc
xchg
cmc
daa
and
or
and
cmp
sbb
adc
adc
add
lret
call
add
dec
add
pop
mov
mov
add
lods
ret
mov
add
int3
dec
lret
push
leave
add
fsts
in
adc
mov
rcll
fmull
fistpl
adc
dec
xor
outsb
in
clc
lret
enter
add
shlb
add
inc
dec
int
stc
add
or
mov
mov
and
mov
add
in
jg
scas
adc
fxam
cli
ja
inc
add
mov
hlt
pop
xor
mov
ret
xchg
add
leave
inc
push
sti
enter
add
add
lea
aad
pushf
test
lret
xor
clc
stc
add
inc
mov
mov
cwtl
push
cmp
add
sub
jae
add
add
add
scas
or
push
pop
mov
addb
adc
push
sub
push
push
and
xlat
rorb
popf
imul
jb
movb
lock
dec
sbb
mov
or
cmpb
rorl
adc
pop
jne
insl
frstor
add
jae
xchg
xchg
push
push
cmp
fisubrl
add
inc
add
mov
outsl
push
mov
shr
pop
push
mov
jl
xor
add
stos
adc
jae
mov
xchg
daa
sub
xlat
movsb
in
mov
and
shll
inc
int
dec
cwtl
bound
arpl
jmp
repz
add
add
lea
sbb
push
adc
ret
cmp
fildl
fucomip
and
mov
ljmp
call
cli
fdivl
imul
in
pop
adc
dec
dec
sbb
cmc
loop
aad
incl
jl
js
lock
mov
sub
inc
leave
add
mov
jne
lcall
adc
xor
cmp
subl
add
imul
in
add
push
movsl
mov
dec
mov
lock
movsb
mov
cmp
aad
mov
insb
repnz
hlt
and
clc
inc
fadds
test
jbe
addr16
clc
mov
inc
dec
jecxz
push
jb
jmp
or
add
jne
dec
shlb
add
into
xchg
aam
mov
mov
enter
add
int3
sub
cmp
mov
add
add
out
push
lock
mov
inc
mov
je
mov
xchg
adc
pop
lret
inc
jne
pusha
push
mov
add
mov
js
js
add
sbb
pop
adc
cli
add
pop
xchg
inc
icebp
lock
xchg
dec
add
mov
xor
adc
test
jle
add
cmc
outsb
mov
nop
sub
dec
int3
add
inc
adc
icebp
mov
sbb
adcb
add
clc
inc
jl
cmpsl
or
adc
add
sub
fiaddl
mov
jmp
movsl
add
sarb
or
fistps
jne
pop
sub
push
pop
aad
xchg
in
shll
jae
scas
flds
inc
cmp
and
sub
pop
out
daa
nop
andb
jo
outsb
lods
add
or
insb
xchg
add
and
in
add
cwtl
lock
add
lds
and
mov
les
inc
dec
xorl
addb
or
mov
out
aas
add
mov
mov
jnp
add
mov
dec
push
xlat
or
pop
add
jne
jle
mov
push
mov
call
add
push
mov
pop
out
lcall
loopne
test
sbb
iret
mov
nop
push
mov
cmp
movsl
repz
mov
aas
cmc
add
and
adc
lods
in
push
pusha
sbb
pushf
cmp
push
add
cmpsl
cmp
cmp
shrb
xor
add
or
jo
ja
mov
pop
in
add
add
aas
xchg
or
inc
ja
hlt
incl
mov
rol
xchg
add
loope
loopne
addl
leave
jmp
ret
nop
cmp
ja
pop
lea
out
lret
nop
sbb
stos
push
sbb
sbb
or
vprotd
add
inc
in
sti
andb
movsb
or
out
or
mov
fs
cmp
or
int3
cmp
icebp
add
mov
test
lods
adc
adc
adc
daa
mov
add
outsl
int
in
inc
pop
push
or
add
sbb
push
popf
test
dec
mov
add
or
in
mov
add
inc
cmpl
add
outsl
add
int3
push
notb
adc
jno
scas
daa
inc
test
and
dec
adc
add
test
add
mov
jl
push
sbb
add
adc
leave
cs
aaa
mov
repz
or
stc
add
push
lds
sub
fidivl
adc
cmc
cli
out
pop
inc
push
cmp
dec
call
and
mov
out
cmp
and
insb
add
cmp
mov
test
mov
fisttps
add
push
rolb
jge
mov
push
cmp
push
sti
xchg
adc
dec
push
hlt
pop
lods
adc
xchg
pop
jecxz
dec
cmpb
jb
dec
pop
clc
test
pop
xchg
movsl
or
jge
push
or
test
nop
jp
and
dec
mov
adc
jmp
outsb
dec
add
dec
loopne
and
add
inc
lret
pop
rcrl
push
xor
add
mov
pop
cmp
push
jl
enter
push
sbb
sahf
mov
add
sub
jmp
or
test
imul
add
add
fnstsw
add
loope
add
fucom
psrad
fisubrs
pop
jle
mov
add
xor
or
test
test
mov
cltd
stos
ss
xchg
outsl
mov
dec
add
ljmp
call
pop
dec
inc
pop
paddq
cmp
dec
dec
fwait
aaa
push
add
inc
add
sbb
stos
push
inc
push
clc
mov
std
add
movsb
dec
fwait
adc
cld
add
jmp
mov
mov
xchg
stos
pop
andl
inc
fdivr
xor
adc
in
out
aam
inc
fisubl
lods
cs
int3
add
shrb
pop
in
aas
dec
adc
pusha
out
ja
add
fs
cmp
add
div
ljmp
scas
add
lock
push
cli
icebp
nop
addb
out
mov
add
pop
in
in
add
add
test
jmp
mov
mov
add
jl
mov
cwtl
insl
jo
js
pop
dec
imul
dec
push
dec
int
and
cmp
xorl
imul
add
jmp
out
add
ret
pop
in
push
push
fsubr
jecxz
sbb
js
cmpsl
jb
add
xchg
addl
ror
mov
pop
in
mov
push
pop
movsb
nop
test
sbb
sbb
push
push
or
pop
pop
or
pop
push
jle
push
push
add
aas
jae
movntq
out
or
push
enter
add
add
xor
pushf
popf
in
add
fimuls
test
dec
push
repz
out
add
outsl
add
cwtl
les
jno
add
shlb
xchg
lcall
out
ljmp
add
jle
or
push
push
cmc
push
icebp
jge
add
test
shll
mov
pop
add
test
mov
mov
addr16
test
inc
pop
cli
fldt
pop
pop
xor
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
add
cmp
xchg
cmp
pop
je
jge
cmp
sub
cs
jno
add
aam
mov
xor
add
mov
mov
add
jns
and
jbe
jb
mov
pop
movzbl
pusha
mov
sbb
dec
dec
jo
inc
push
in
add
push
or
push
push
add
mov
in
dec
incl
ja
outsl
jmp
sbb
int3
pop
add
lcall
in
out
sbb
pushf
sub
sbb
ljmp
add
inc
cmpsl
mov
ss
and
add
sbb
js
faddl
pop
push
fs
pop
ret
jbe
pop
out
pop
pusha
in
lahf
stos
push
into
add
inc
mov
les
push
clc
mov
mov
test
cltd
mov
bound
jns
add
gs
add
addr16
fstps
cmp
cmp
test
jns
jle
xchg
cwtl
xchg
add
test
push
dec
pop
in
outsb
add
jb
add
mov
push
xchg
ljmp
add
xchg
lcall
add
jns
mov
and
mov
inc
in
sbb
push
dec
add
cmp
clc
cmp
mov
push
add
add
cmpsl
jmp
lock
mov
aam
add
jle
mov
int
add
aaa
dec
pop
cld
sahf
add
arpl
cmp
dec
xlat
add
nop
out
jmp
shrb
int
push
mov
push
in
pop
mov
mov
rolb
loopne
or
loop
add
lret
sbb
push
cmp
cmp
and
dec
dec
jp
fcompp
cmp
xchg
mov
repnz
add
ljmp
call
int3
pop
inc
stos
out
inc
mov
sbb
mov
jg
dec
or
push
pusha
insl
call
arpl
rolb
stos
mov
insl
push
enter
jbe
adc
les
gs
pop
push
add
lock
mov
and
add
fsubl
add
adc
cld
xchg
xor
fwait
pushf
movsl
test
loopne
add
adc
add
fs
mov
filds
les
test
push
mov
xlat
daa
rcl
pop
adc
ret
les
outsl
jae
pusha
mov
call
pushf
sbb
pop
xor
andl
loop
addb
add
ss
inc
or
icebp
ffreep
mov
sub
movsb
popl
into
aad
in
mov
aas
stos
or
ja
cmc
test
shlb
add
fcmovu
jns
shl
add
mov
push
dec
add
cmp
pop
cwtl
add
pusha
stc
or
fs
cld
add
gs
fnstenv
mov
nop
aad
fsubs
inc
push
add
pmaxsw
add
and
in
or
xchg
daa
imul
or
mov
cmp
mov
jge
out
sub
lret
mov
add
outsl
scas
pop
mov
enter
mov
in
ret
ret
add
je
loopne
cltd
lcall
test
add
adc
add
pop
insl
xchg
jmp
sbb
mov
loopne
lret
or
in
enter
mov
dec
add
test
in
add
and
add
dec
jnp
inc
loopne
cmp
insl
add
je
jne
jl
push
and
adc
rolb
mov
cmp
add
movsl
stos
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
mov
xchg
xchg
mov
jo
inc
stos
add
sub
mov
xor
mov
adc
adc
loopne
lock
xor
add
jae
sub
dec
or
rcll
push
add
mov
xor
jecxz
pop
in
jp
add
lods
leave
lret
mov
hlt
mov
rorl
add
lea
loop
xorb
mov
push
push
add
cmp
arpl
shlb
jo
add
xor
stos
add
jo
lods
addr16
dec
add
pop
push
pusha
cmp
jbe
mov
out
add
xor
loop
xchg
test
std
test
cmp
cld
bnd
cmpsl
lcall
add
dec
dec
dec
or
add
add
imul
xor
and
lock
cmc
aam
cwtl
xchg
out
movl
cltd
jnp
jo
add
xor
cmc
and
lods
add
dec
aad
repnz
mov
sub
and
add
push
dec
adc
push
add
enter
push
mov
xchg
push
lds
add
inc
push
add
and
xchg
push
aaa
lret
aam
data16
enter
out
add
jne
lods
or
cmp
xor
mov
add
out
fnstsw
lods
pushf
add
ja
mov
dec
add
push
jb
fmuls
roll
lret
mov
jp
js
mov
in
cmpb
stos
pop
scas
dec
movb
add
aas
ljmp
add
les
dec
gs
add
xor
xchg
mov
fwait
movsb
jle
mov
xchg
adc
mov
clc
sub
add
fadd
or
test
ja
cmp
or
ljmp
mov
stos
pop
add
leave
or
test
add
jge
and
cmpb
mov
out
ds
add
imul
lds
gs
adc
pop
or
out
in
incb
add
inc
inc
dec
test
inc
inc
cwtl
or
cmp
out
imul
mov
push
add
push
pop
pop
pop
es
int3
xor
push
dec
xchg
nop
xchg
add
int3
and
pop
jne
dec
in
xor
dec
test
add
sbb
loope
lahf
adc
push
sbb
pop
dec
add
call
add
fisubl
lock
push
push
push
insb
cmp
lds
in
mov
add
outsb
out
add
adc
stos
or
cmp
aaa
jno
xchg
test
dec
insb
addb
push
insl
adc
mov
je
rolb
and
dec
xor
add
dec
jno
sti
out
pop
out
out
pusha
scas
iret
xorl
fcomp
int3
sti
add
js
mov
or
mov
add
popf
mov
add
push
xorl
ljmp
xor
jmp
leave
rol
and
icebp
idivb
das
xor
call
jmp
jo
pop
addl
test
out
les
add
aam
mov
add
and
mov
add
pushf
addb
imul
jmp
ret
xlat
lret
add
fsubp
mov
push
adc
dec
sbb
cwtl
cmp
aad
xor
repz
dec
add
sbb
sub
jmp
out
movl
fisttpl
addl
out
push
pavgb
jo
outsl
mov
sbbb
das
jmp
push
mov
test
scas
xchg
add
inc
out
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
and
jg
popf
inc
bound
push
aas
xor
pop
dec
hlt
jae
sti
popa
ss
enter
mov
pop
adc
hlt
add
test
mov
adc
dec
or
pop
and
mov
lahf
and
cmp
sub
add
test
xchg
push
push
stos
pop
mov
dec
sub
lcall
xor
clc
sub
ds
push
add
or
fstpt
sub
dec
jle
adcl
test
add
dec
add
fcomip
lock
movsb
or
mov
lds
or
mov
rcll
fldl
pop
inc
sub
ss
fadds
sbb
sbb
lods
sub
pushf
mov
sbb
adc
xchg
jae
ja
scas
add
cmp
add
push
or
rcrl
rcl
mov
lods
pop
add
mov
insb
adc
pop
xchg
add
xchg
xor
jo
aam
bswap
push
loopne
sbbb
shrb
xor
add
pop
scas
add
add
adc
lsl
fsubl
stos
clc
mov
addr16
mov
mov
pop
add
jno
or
pusha
jne
jns
add
cmp
dec
ja
sub
xchg
mov
add
pop
add
addl
push
fmull
or
mov
or
call
add
or
add
push
std
in
movsl
jo
lds
cmp
push
and
and
je
inc
cmp
push
inc
add
dec
pop
add
cmp
sbb
idiv
add
push
add
xchg
ljmp
arpl
add
xchg
sub
jmp
push
sti
add
mov
push
xchg
out
mov
pop
pop
in
push
outsb
mov
sub
loopne
leave
dec
call
not
xor
push
pop
movl
mov
into
add
jge
pop
add
rorb
sub
add
mov
or
shll
fistps
pushf
jge
add
inc
clc
popf
add
pop
idiv
jne
push
sbb
dec
mov
add
out
or
jle
pop
mov
mov
and
sbb
xlat
jge
push
inc
arpl
jbe
jnp
add
add
add
inc
xchg
addb
addr16
or
jns
xchg
add
ja
decb
das
pmuludq
mov
push
pop
add
aaa
call
dec
sub
mov
loop
addb
sub
push
or
sarl
dec
outsb
arpl
jb
gs
shlb
out
dec
and
dec
pushf
jbe
inc
push
push
nop
jbe
test
xchg
cld
insl
sub
aad
xchg
inc
sbb
jns
sub
je
add
push
lret
pop
push
sbb
push
mov
in
pop
aam
scas
add
or
lods
push
mov
sub
inc
add
cld
xchg
test
pop
xor
push
fmul
adc
ret
xor
popf
sub
rclb
mov
add
adc
js
testb
pop
ja
mov
sbb
mov
and
jo
repnz
cmp
jae
popa
jecxz
in
xchg
data16
imul
push
clc
jae
call
cmp
std
add
jno
and
sub
daa
jae
mov
sub
pop
fldl
cmpsb
lock
pop
cmp
jb
xchg
insb
jl
add
push
sub
push
cs
int
lock
jnp
add
jne
dec
mov
push
lahf
pop
pop
fwait
lret
shlb
negl
dec
push
add
sbb
add
sbb
push
lods
and
add
xchg
jo
jmp
frstor
add
imul
mov
add
add
lea
mov
jne
mov
test
push
sbb
out
adc
jmp
cmpl
lret
call
jle
add
shl
test
pop
in
mov
lods
cmp
in
cli
aad
mov
inc
add
inc
loopne
fsubl
add
mov
push
cmp
in
imul
xchg
mov
addl
mov
adc
pop
fildl
xorb
adc
mov
cld
gs
test
sti
les
stos
popl
cmp
hlt
sbbl
aas
add
vmovq
inc
lea
es
inc
add
cwtl
aaa
dec
xchg
mov
scas
orb
lock
xlat
push
stos
hlt
push
popf
push
inc
xor
adc
pop
jl
and
pushf
add
xchg
jne
push
sldt
aaa
std
adc
aam
in
imulb
sbb
sbb
lock
add
and
or
jp
mov
mov
push
and
outsb
clc
add
movsl
fwait
and
sbb
push
rclb
push
fwait
icebp
ja
mov
add
shrb
addr16
push
add
or
cli
add
lds
fadd
push
fsubrs
xchg
adc
stos
and
lock
add
adc
inc
popf
loop
testl
mov
jmp
cmp
add
test
aaa
stos
add
jl
sti
or
add
inc
adc
jae
add
add
pushf
push
into
call
pop
loopne
leave
mov
orl
pusha
in
jmp
push
sti
call
fs
aaa
das
add
in
add
or
cmp
cmc
rcrl
cmp
xor
or
mov
jge
js
cmp
adc
jns
sbb
js
lock
xor
imulb
and
jne
nop
fildl
add
cmp
cltd
lock
out
jo
add
push
push
and
loop
ds
inc
leave
lret
jb
daa
jo
ljmp
or
add
fdivrs
add
and
or
or
movsb
sti
cmp
dec
ds
jmp
sarb
add
adc
lds
loope
gs
addr16
inc
add
add
mov
cmp
jae
lea
xor
roll
popa
push
jnp
jmp
cmp
add
or
in
adc
dec
addr16
mov
xor
jns
cmp
adc
and
hlt
ret
rclb
iret
pop
add
es
lahf
jg,pn
dec
inc
adc
xor
add
xchg
scas
sub
dec
sbb
sub
test
enter
lock
add
ds
loopne
dec
xor
popa
ljmp
add
lahf
sbbl
inc
cmp
repnz
mov
ret
dec
add
testl
and
add
sub
popl
jl
add
jno
adc
and
adc
cmp
cmp
sub
or
nop
pop
add
xchg
shrb
mov
add
stc
nop
incb
add
sub
filds
sbb
dec
fiaddl
lds
fsubrl
loope
sub
test
js
pop
pusha
cmp
bnd
repnz
add
sbb
add
and
leave
sarb
pop
mov
fistl
xor
mov
add
orb
push
add
iret
dec
ljmp
insl
stc
jnp
pushf
add
add
push
inc
mov
scas
add
and
pop
add
ror
in
in
aaa
pop
mov
pop
rcrb
push
loope
push
test
jg
add
or
mov
add
add
pop
cmc
movzbl
xlat
jge
int
pusha
inc
cmp
dec
push
xor
test
mov
or
add
outsb
sbb
add
mov
daa
jnp
push
ss
pop
add
ret
dec
call
inc
movsb
dec
jge
and
cmpsl
mov
pop
loopne
add
aad
loope
xorb
leave
add
cli
xchg
inc
pushf
mov
push
add
and
cmp
test
pop
inc
mov
ljmp
add
mov
dec
xchg
push
add
rolb
cmpsl
pop
mov
lock
and
fbstp
loope
add
push
push
imul
xchg
mov
orb
adc
mov
es
mov
and
mov
pop
and
add
out
jp
and
sbb
push
add
or
xor
lock
lock
push
add
mov
pop
int3
add
leave
negl
lock
cmpsb
or
mov
aad
loopne
sbb
cmc
cmpsl
add
lods
std
sub
xchg
call
popa
sub
out
jo
add
sub
push
xor
add
xor
xor
shl
sub
push
fistps
adc
popf
cmp
sbb
inc
sub
push
pop
add
add
ds
shll
add
pushf
push
out
vpunpcklwd
aaa
movsl
sub
cwtl
mov
mov
call
add
jb
and
add
mov
adc
mov
add
cmpsb
andb
or
dec
add
push
xchg
repz
xlat
add
mov
inc
adc
mov
jg
mov
and
movsb
fsubs
sub
add
dec
popf
rolb
mov
pop
addb
inc
jae
scas
repz
jae
sbb
mov
mov
shlb
sarb
jg
pop
into
add
and
add
pop
fcoml
add
push
push
pop
xor
js
push
pop
xor
dec
add
mov
pop
popa
jnp
clc
inc
jo
out
add
imul
sub
iret
jp
add
pop
lds
add
push
movsb
dec
inc
out
icebp
or
lods
add
aam
loop
loopne
add
scas
rorl
cmp
rolb
in
sub
aam
push
push
add
or
rorl
sbb
js
mov
add
popl
push
cwtl
push
cmpsl
add
mov
outsl
nop
jle
sti
add
pop
cmp
mov
jbe
push
cmp
xlat
inc
mov
add
mov
jns
and
flds
xchg
inc
fsub
add
iret
inc
sti
hlt
push
ret
add
add
push
aam
aad
add
xchg
sub
add
add
mov
shll
or
mov
or
fisttpl
xchg
nop
outsl
aam
jle
jmp
jge
add
xor
mov
add
adc
cwtl
popf
mov
repnz
test
sub
sbb
nop
mov
cmpsb
dec
dec
lret
xchg
ret
push
out
ficompl
lahf
add
aam
pushf
inc
sbb
cmp
xchg
add
inc
rolb
addb
pusha
out
pop
add
cld
adc
mov
orb
imul
aas
add
fs
push
mulb
shlb
add
sub
xchg
mov
push
fcoml
ret
inc
cli
add
dec
pop
jbe
pop
mov
in
jae
sbb
or
add
mov
pop
call
xor
add
mov
or
loop
xchg
add
faddl
shr
ss
loope
cli
mov
sub
cmp
pusha
add
sub
leave
add
icebp
fldl
cmp
sbb
hlt
add
mov
into
test
jl
dec
inc
xchg
push
out
adc
pop
lods
dec
bound
mov
xor
ret
push
rcr
jns
and
mov
test
or
jae
sahf
jbe
xchg
comiss
insb
pop
loopne
add
dec
test
add
and
xchg
aas
stos
shlb
insb
dec
test
dec
inc
jbe
mov
imul
add
or
test
testb
inc
enter
int3
jo,pt
add
pusha
leave
hlt
and
or
cmp
push
xorb
or
jo
add
pop
movsl
mov
daa
loopne
add
push
pop
leave
cmp
jo
repnz
aad
int
in
jae
add
js
jl
rorb
add
shlb
hlt
add
outsl
mov
shrb
add
mov
push
sbb
pop
insl
add
cmpsb
cmp
cli
scas
loop
mov
add
sub
mov
aam
pop
add
mov
cmp
sbb
stc
push
dec
sahf
clc
add
and
mov
in
add
mov
sbb
fld
clc
pop
add
inc
push
addb
sahf
cltd
add
add
add
stos
mov
out
cmp
popa
pop
loope
mov
mov
sub
and
jno
jp
or
mov
dec
subb
push
sbb
sub
add
out
sarl
ljmp
jmp
push
inc
xchg
pop
pop
lock
daa
cmpb
cmc
cs
pop
iret
add
mov
or
ror
jne
add
mov
int
call
mov
inc
test
push
sti
sbb
jno
xor
cmp
sbb
call
jne
push
test
inc
outsl
fiadds
roll
repnz
les
adc
dec
out
push
addr16
add
mov
xor
int3
stc
pop
ficoms
pop
cmp
clc
test
push
jo
out
sar
call
lock
pop
test
push
scas
mov
stc
cmpsl
xchg
adc
or
push
jbe
daa
call
pop
sub
adc
mov
jmp
add
cld
insb
mov
and
sarb
loop
pop
call
popf
lods
add
cmp
add
push
daa
sub
sub
mov
pushf
xor
dec
inc
sbb
in
mov
rclb
mov
add
mov
sub
pop
push
test
les
inc
sub
std
into
mov
xor
xchg
pop
add
add
mov
push
push
jno
pop
ret
fmull
aam
out
cltd
mov
and
in
add
faddl
and
pop
jae
jecxz,pt
xlat
out
add
inc
decb
imul
jg
loopne
daa
jle
adc
ret
inc
or
inc
add
push
jne
mov
push
add
sub
sbb
lea
add
ret
andl
or
jmp
shlb
dec
xor
jl
nop
add
sbb
push
pcmpeqb
pop
add
add
scas
das
ss
js
fmulp
inc
jo
iret
ja
sbb
cmp
in
popa
or
inc
loopne
in
adc
jbe
stos
shlb
add
popl
lea
add
daa
ja
icebp
aas
push
jp
enter
pop
int
mov
insb
cmpsl
and
pop
adc
aad
hlt
adc
imul
les
pop
jp
jne
push
in
add
cwtl
outsl
cmp
add
cmp
dec
mov
add
mov
xor
mov
popf
mov
adc
daa
pop
aam
subb
cld
mov
cltd
hlt
sbb
movsb
ss
add
mov
jb
xlat
lods
pop
add
jp
inc
aam
mov
mov
iret
add
dec
mov
or
add
fnstsw
cmp
mul
pop
add
cmp
jb
popf
add
fiadds
fucomip
cmpsl
adc
addr16
xchg
movb
int3
pop
sarl
mov
xor
clc
dec
xchg
dec
add
jg
lahf
push
dec
add
adc
xlat
add
lock
out
bswap
gs
sarb
adc
pushf
aad
aaa
cwtl
xor
add
test
loopne
pop
jmp
cmpsb
and
mov
and
fstpl
cmp
dec
add
adc
mov
dec
ret
mov
add
jb
sbb
adc
ret
add
jmp
and
xlat
orb
int
sbb
inc
ret
pop
je
xchg
movsl
nop
inc
jmp
lea
mov
sti
das
add
pop
or
add
sbb
sbb
or
add
lds
into
ret
int3
pop
add
sbb
add
daa
xor
js
dec
mov
add
int
out
inc
mov
sub
push
add
mov
clc
xor
lods
xor
jb
xchg
sub
punpckhdq
add
mov
jne
mov
cltd
jl
add
int
mov
push
sub
sbb
stos
cmpsb
mov
cmp
loopne
clc
pop
inc
lahf
or
adc
out
shlb
add
inc
cmp
mov
out
add
sbb
sti
add
test
inc
or
xor
rclb
pop
jnp
inc
mov
xchg
push
sub
add
add
pop
pop
add
jne
shrl
pop
movsb
mov
and
les
scas
fs
and
cmp
ret
lcall
js
and
stos
dec
add
addr16
add
loope
int3
xor
enter
aas
inc
into
adc
push
mov
in
sbb
inc
hlt
test
mov
daa
sub
out
mov
ret
add
cli
fdivrs
adc
add
xchg
adc
sbb
push
or
dec
xchg
xchg
lock
mov
dec
sub
out
mov
push
dec
inc
push
dec
lcall
jnp
jge
push
adc
add
push
dec
xchg
sbb
inc
gs
shll
jae
and
push
cmp
stc
pop
inc
js
arpl
adc
daa
adc
outsb
sub
mov
xor
xchg
mov
in
orl
clc
add
lods
out
mov
xchg
ljmp
lock
pop
in
push
fs
js
jge
mov
enter
rclb
fdivrs
cmp
add
loopne,pt
dec
fs
xchg
or
insb
cmpb
shll
pop
adc
jbe
add
loope
aas
adc
and
xacquire
scas
add
xor
mov
add
fists
xchg
fisttpll
jl
xchg
addl
dec
push
arpl
das
mov
cmp
nop
xchg
add
test
sbb
xchg
sub
push
cmpsl
in
out
add
daa
inc
mov
push
jg
rolb
je
rcl
sbb
xor
or
xorps
or
pop
xchg
jg
add
push
decb
cmc
hlt
add
daa
inc
add
sub
jecxz
sbb
inc
add
call
in
add
or
pop
arpl
inc
push
push
imul
loop
sti
loope
cld
mov
xchg
jne
sbb
shr
xor
decl
add
mov
sbbb
or
lock
add
inc
outsl
lret
cmp
xor
test
cli
rorb
das
adc
adc
add
adc
inc
stos
dec
add
xchg
push
add
test
cmp
inc
ror
mov
push
add
push
jb
mov
ja
xor
leave
pop
push
repz
add
sti
jp
stos
fildll
add
cwtl
adc
rol
and
rcpps
loopne
dec
sbb
loop
add
pop
mov
inc
jl
add
pop
rcrl
add
add
pop
pop
movsb
add
nop
push
pop
mov
dec
pusha
test
jge
push
add
hlt
jle
add
divb
push
add
ds
sub
xor
add
popf
xor
loopne
pop
aam
test
pop
add
cmc
adc
insl
shll
push
xor
sahf
loop
xchg
sub
stos
add
push
push
jp
sbb
mov
or
and
jne
add
mov
add
int
dec
mov
pop
cmp
add
and
or
adc
mov
clc
sahf
aad
mov
sbb
lea
adc
loope
stos
mov
adc
push
pop
pop
mov
sbbl
mov
sub
add
mov
adc
in
add
jl
pop
sbb
pop
jge
aas
lock
mov
pop
data16
add
lods
sbb
add
roll
jge
inc
pop
iret
in
inc
add
and
int
sahf
pusha
icebp
in
jle
cld
add
xor
push
sbb
pop
adc
fstpl
testl
es
pop
mov
jge
pop
adc
jns
add
fbstp
lock
jnp
call
cmp
dec
sbb
lods
mov
lock
cltd
sbb
xchg
cwtl
les
adc
es
movsl
testb
loope
mov
stos
add
adc
mov
movsl
inc
or
imul
js
dec
or
cmp
mov
push
lret
inc
cmp
sti
mov
or
push
repz
loope
push
add
addl
mov
cmp
je
push
dec
add
mov
push
or
add
jge
stos
pop
sbbb
loopne
mov
mov
mov
aas
push
xlat
sbbb
dec
cmp
adc
movsl
sub
add
push
into
and
das
loopne
in
add
imul
add
dec
sti
shlb
je
outsb
adc
gs
push
out
leave
cmc
xor
jo
xor
mov
testb
mov
dec
cmp
inc
icebp
add
inc
mov
sarl
dec
cld
nop
mov
rolb
add
ds
or
sub
dec
es
les
mov
inc
and
xor
cmp
inc
lea
add
ret
push
hlt
pop
aaa
jne,pt
add
mov
inc
push
add
jmp
popa
jno
pop
ds
jl
inc
jno
jne
int3
mov
add
js
jge
xchg
mov
push
cmp
add
cwtl
sbb
lret
loopne
lock
aas
cmpsb
movsb
add
and
cmp
pop
sbbb
mov
cmpsb
jne
je
jp
push
das
rorl
shr
or
test
and
mov
mov
cmp
mov
and
loop
cmp
popf
test
rcrb
pop
sub
pusha
adc
fsubr
add
in
inc
and
je
push
or
flds
addr16
xchg
jne
jl
shrb
add
les
mov
int3
xchg
out
sub
dec
xchg
enter
sbb
out
lret
negb
cmp
adcb
sub
dec
mov
xchg
and
outsb
jg
or
sub
aad
in
jne
fiaddl
mov
iret
cs
roll
test
pop
inc
lock
je
mov
xor
fstl
jle
out
xor
pop
into
mov
ret
orb
imul
arpl
por
cli
scas
mov
xchg
dec
dec
jb
or
add
mov
xlat
add
fs
ds
scas
add
dec
xchg
insb
push
out
mov
xchg
push
xchg
jno
add
or
stc
cmp
add
push
and
jbe
mov
jecxz
mov
inc
daa
push
and
add
mov
or
sub
sti
pop
mov
dec
in
sub
mov
or
rolb
icebp
and
fs
subb
pop
add
add
mov
or
pop
outsb
mov
jnp
rcrb
jle
inc
add
lods
mov
roll
or
add
inc
out
pop
inc
jmp
inc
cmpsl
sub
push
add
daa
pop
in
adc
into
call
jae
adc
stos
fildl
or
jl
pcmpgtb
fdivl
inc
in
mov
dec
mov
sub
les
inc
roll
sbb
data16
fdivr
sub
sub
mov
or
xchg
sbb
mov
je
jge
xchg
fsubr
add
inc
mov
fisttpll
loopne
cld
scas
add
mov
inc
add
mov
lods
aas
das
in
js
add
sbb
mov
inc
cmp
sub
in
sub
lods
stc
add
sub
inc
add
mov
xchg
cmp
rcrb
cmp
mov
or
cmpsb
push
pop
popf
roll
add
pop
out
loopne
jnp
pushf
and
xor
add
loopne
dec
or
add
fstpl
faddl
add
sbb
popa
add
add
mov
mov
dec
mov
sbb
add
sbb
fiadds
inc
sub
mov
daa
add
cmpsb
dec
inc
call
aad
mov
add
mov
fisttpll
pop
add
test
cmp
lock
add
mov
jns
out
sub
sarl
mov
mov
imul
xchg
push
dec
add
adc
and
notb
loopne
sysret
pop
jbe
jno
xor
jo
mov
and
xchg
sbb
add
push
or
xor
push
jl
ja
scas
push
adc
test
mov
and
cmp
adc
inc
sub
dec
fsubl
lods
cli
push
daa
inc
push
adc
loope
jne
movsl
sbb
and
cmp
or
out
fisubl
and
call
cmp
enter
add
and
decl
aad
adc
adc
inc
sbb
iret
push
xor
sub
mov
cmp
sbb
or
jne
dec
cmp
rolb
scas
clc
inc
pusha
cmp
xorb
insb
or
push
add
xor
jp
push
shr
push
jecxz
xchg
cmp
cwtl
cmp
add
and
rorl
loopne
and
mov
or
cli
movzwl
jg
fcmove
daa
shl
add
in
sbb
mov
pop
pop
popa
mov
arpl
adc
ja
inc
xor
out
es
xor
aad
push
rcll
fidivl
inc
jg
adc
cmp
call
ss
jmp
inc
sub
pop
subb
andl
adc
adc
jle
inc
lock
sbb
pop
lsl
hlt
fisttps
dec
or
sub
fdivr
pop
add
mov
and
or
jmp
shlw
sbb
sub
jg
mov
push
in
pushf
push
inc
xchg
push
inc
adc
adc
jb
adcb
pop
add
stc
je
mov
rol
xor
adc
addl
jne
mov
nop
popf
add
test
jmp
add
pop
xlat
mov
shr
test
sub
incb
dec
shlb
sbb
aaa
inc
es
adc
ljmp
pop
add
lods
and
inc
cmpsb
sti
push
test
hlt
or
xchg
loopne
stc
pop
mov
loop
icebp
ljmp
in
mov
daa
and
push
and
sbbb
sbb
ja
hlt
in
rorl
add
rorb
cmp
mov
xlat
and
sbb
fisttps
sbb
inc
out
adc
nop
out
addl
or
jge
imul
pop
mov
dec
cli
loop
add
jne
shr
je
add
xlat
jmp
adc
mov
mov
xor
xchg
add
cld
sub
dec
nop
add
mov
add
sbb
popa
pop
cwtl
adc
adc
dec
or
jle
add
les
test
in
je
add
or
mov
jmp
add
pop
adc
lret
add
mov
adc
add
push
fidivs
pop
sbb
pop
or
inc
pop
jns
outsb
inc
ret
xor
call
inc
inc
rolb
mov
sbbl
sub
add
or
call
inc
add
movsb
dec
fwait
mov
aad
inc
loop
xchg
inc
les
adc
xor
xor
add
jns
jnp
inc
lcall
in
push
jge
mov
add
push
into
sahf
imul
add
addr16
icebp
pop
das
add
popf
in
inc
pop
add
lea
in
and
xchg
pop
in
push
js
inc
add
mov
add
push
push
sub
rcr
add
cmp
dec
adc
inc
dec
and
adc
ss
and
test
loopne
push
adc
xchg
xchg
or
cmp
add
add
or
dec
jne
add
or
aas
je
cmp
mov
cmp
jne
mov
lar
and
mov
test
cwtl
sbb
gs
stos
sbb
xchg
insb
push
subb
ja
pop
gs
mov
and
pop
inc
sub
jnp
xor
inc
jp
pop
cld
mov
stos
add
add
mov
sbb
enter
push
popa
mov
add
adc
push
iret
jmp
sarb
aam
jmp
imul
loopne
sbb
in
add
cli
xchg
sub
add
adc
pop
stc
mov
cmp
stc
cmp
arpl
add
movsb
das
add
ret
rcrl
andl
jp
add
jmp
cltd
add
mov
sub
sbb
push
xchg
xor
mov
rcrb
test
inc
cltd
xchg
pusha
sbb
add
not
ljmp
and
fcmovb
or
push
adc
xchg
push
lret
mov
incl
or
add
imul
negl
insb
mov
xor
add
push
mov
cld
cmp
in
push
inc
aas
xor
mov
sbb
dec
shrb
mov
in
cli
adc
fists
cmp
add
stos
or
lods
add
xor
mov
jmp
add
mov
push
add
stc
add
pop
mov
mov
jo
stc
orl
es
pop
call
mov
aas
sub
jne
add
and
fildl
mov
hlt
xor
lcall
jg
add
je
mov
mov
jo
add
jmp
add
sarb
add
bswap
xchg
push
sub
mov
mov
xchg
das
mov
pop
adc
push
in
std
or
cmp
push
mov
or
fisttps
roll
dec
push
add
sub
mov
xchg
add
add
and
push
loope
mov
cld
leave
adc
and
dec
sub
lahf
in
cmpsl
add
shl
add
push
push
push
xchg
pop
push
or
mov
je
testb
dec
scas
leave
jmp
and
add
test
and
clc
cmpb
ljmp
ds
add
push
jecxz
idiv
mov
adc
pop
cmp
not
adc
and
and
mov
daa
mov
push
mov
inc
add
leave
mov
adc
nop
imul
and
pop
cmp
dec
mov
lea
data16
je
lahf
pop
icebp
sbb
out
in
andl
lea
dec
mov
fcoml
sub
ret
add
bndldx
or
cmp
sub
jp
outsb
push
dec
jo
int
andl
test
aaa
fs
cmpb
scas
aam
add
mov
pusha
or
nop
ficompl
loop
test
ret
push
in
cmp
pop
shl
push
mov
push
add
insl
xchg
bound
pusha
dec
pop
add
mov
repnz
dec
mov
mov
jno
sbb
sub
cmpsl
popf
das
mov
push
sub
lock
and
add
adc
xchg
arpl
lret
ror
pop
adc
adc
jmp
ss
add
fnsave
sub
aas
ficoml
adc
push
shlb
dec
jns
repz
rcrl
xlat
lods
add
and
jl
add
aad
fnstsw
ljmp
cwtl
popl
out
mov
pop
inc
sbb
pop
testl
xchg
mov
ja
jne
add
ja
fdivrs
hlt
out
pop
adc
xchg
lods
lock
int3
add
mov
mov
popf
popa
push
pop
hlt
and
inc
add
roll
orb
xchg
lods
in
dec
movsb
jge
sbb
push
scas
and
add
mov
mov
adc
and
movsb
pop
in
ja
in
ss
push
dec
push
xor
fcom
mul
xchg
dec
hlt
ret
add
mov
inc
data16
or
add
xchg
iret
popa
dec
jae,pn
add
and
mov
dec
and
pop
push
js
cld
or
add
xchg
sub
mov
xchg
cli
lea
lods
xchg
mov
and
xchg
add
push
xchg
addr16
mov
pop
jns
add
jns,pn
dec
mov
pop
leave
into
cmp
adcl
test
jge
shll
push
xchg
fwait
ret
dec
addl
ror
xor
call
notb
sti
shlb
cld
cmp
add
push
ds
xchg
add
dec
or
cli
jne
sahf
jns
faddp
mov
xchg
loope
ljmp
adc
cmpsl
loopne
fldpi
rolb
cmp
push
pop
dec
imul
mov
add
add
dec
dec
inc
and
stos
repnz
push
fidivl
test
mov
testb
jns
lods
hlt
enter
xor
push
repnz
addr16
add
mov
aam
daa
add
inc
adc
repnz
rclb
int3
add
and
adc
dec
add
lret
dec
dec
sbb
adc
lcall
push
out
xor
add
stc
cmc
adc
push
fs
cmp
add
inc
xchg
test
adc
and
cs
stc
sub
add
add
xchg
mov
xlat
add
xor
je
push
push
dec
shll
in
mov
out
imul
xchg
add
and
enter
aas
mov
cmp
sahf
es
addb
mov
loopne
mov
and
idiv
call
add
dec
or
int3
pusha
es
out
pop
or
dec
je
add
idivb
add
dec
jno
test
jne
add
jb
das
add
adc
pop
adc
hlt
cltd
jae
dec
shlb
into
add
lret
movsb
les
adc
xchg
sbb
aaa
add
push
jne
add
in
shll
push
adc
sarb
add
ds
fdivrl
in
xor
into
add
xchg
cmp
adc
xchg
jecxz
cmp
pop
add
cli
add
daa
lea
xchg
adc
cmp
inc
push
or
add
mov
lock
xlat
adc
jecxz
test
fadds
pop
and
addb
incl
pop
push
iret
cmp
flds
mov
jb
pop
mov
adc
jmp
lret
roll
cld
roll
dec
cmpsl
jmp
sbb
test
lret
arpl
dec
scas
lods
pop
in
jb
jo
push
add
movb
adc
inc
pop
xor
xchg
scas
and
addl
pop
outsl
into
pop
out
lcall
out
dec
lods
pop
adc
and
add
call
push
ret
add
xor
pop
pop
sti
inc
fwait
or
movsb
or
js
pop
xor
sbb
push
lods
adc
jbe
in
inc
faddp
jno
sbb
hlt
push
add
aam
clc
imul
ret
inc
subb
add
mov
test
lea
jle
or
and
icebp
inc
nop
push
dec
push
mov
push
adc
daa
push
pop
adc
inc
fnstsw
lods
add
cmp
adc
test
xchg
fs
xchg
sbbb
mov
push
addl
dec
test
daa
shr
inc
xchg
inc
ljmp
lcall
xchg
jg
add
mov
and
outsl
loop
sub
scas
dec
and
lock
faddl
fists
into
xor
imul
add
pop
pop
add
fsubl
mov
push
push
addb
lea
test
insb
xchg
enter
jb
mov
movsb
shlb
rcrb
fmuls
mov
test
push
add
push
push
mov
or
fcoms
lahf
enter
push
std
inc
sub
add
dec
shll
pop
fadds
adc
lds
add
jecxz
and
mov
add
or
mov
int3
cmc
pop
rcr
xor
push
rolb
or
add
push
aam
inc
arpl
jl
sbb
xchg
insb
add
sub
add
fcomps
inc
add
pop
repnz
iret
adc
sarb
pop
jle
inc
lds
add
jmp
xchg
mov
or
sbbl
or
lock
add
jg
mov
push
out
inc
in
call
lods
test
sti
sbb
rcr
sub
roll
cld
xchg
jecxz
nop
push
mov
mov
xor
dec
sbb
pop
and
mov
sub
out
shl
hlt
lods
les
popf
xchg
lret
push
icebp
xchg
xchg
ja
jnp
adc
ss
mov
push
push
xchg
mov
call
movb
scas
in
imul
push
cmp
adcb
or
dec
lock
add
adc
inc
add
inc
call
jp
add
mov
jne
cmp
test
xor
or
inc
mov
call
hlt
mov
mov
lods
xorb
in
cmpsb
arpl
test
pop
and
add
cmp
lods
add
sbb
cmpsl
add
je
scas
pusha
movsl
aas
add
add
mov
add
mov
jno
jecxz
add
xchg
loope
add
aaa
in
jle
incl
cmp
add
iret
mov
shl
js
pushf
arpl
pop
fs
or
enter
push
jnp
shlb
fildll
repz
repnz
out
pop
add
outsl
mov
and
add
cmpsb
xor
sbb
test
sub
adc
dec
inc
jns
pop
test
add
adc
movl
and
adc
aas
sbb
push
mov
repnz
pop
cld
inc
or
add
xchg
sbb
xchg
sub
bound
je
aaa
in
adc
jno
ret
aas
inc
add
adc
out
ja
mov
aas
hlt
mov
aaa
ljmp
push
and
subl
out
ljmp
dec
repnz
inc
ffreep
add
and
jle
mov
mov
mov
inc
jns
aad
push
and
in
xchg
jg
add
cmp
and
xchg
xchg
add
and
mov
and
out
mov
inc
add
cs
imul
add
inc
mov
cmp
clc
mov
push
pop
pop
xlat
add
push
push
sub
or
jne
mov
cmp
cmc
pop
jo
cmp
add
icebp
bound
and
ret
sub
inc
cmp
cmp
fwait
pop
int
pushf
dec
pop
sub
cmp
push
icebp
mov
bnd
lret
or
and
mov
cwtl
jp
fadds
pop
cld
mov
pop
aas
clc
call
and
js
add
or
add
push
lret
decl
pop
fdivrl
add
loopne
add
and
cmp
add
sbb
push
stos
add
jo
mov
dec
jmp
add
and
mov
cmp
test
data16
adc
sub
repnz
jmp
inc
out
dec
mov
add
sub
pop
cmp
orb
lahf
push
dec
pop
in
add
loop
pop
es
push
or
lcall
adc
mov
or
icebp
or
inc
ds
testb
scas
sbb
and
xlat
inc
cmc
jmp
or
mov
sub
fs
scas
dec
and
faddl
cmpb
mov
int3
mov
sbb
es
push
in
jp
mov
push
cmp
lret
push
leave
hlt
push
pop
or
shr
stc
jl
add
test
and
dec
jne
jge
nop
xchg
inc
adc
and
add
dec
jno
scas
adc
sub
sbb
push
imul
hlt
mov
add
adc
add
or
pusha
lret
or
dec
push
push
push
add
xchg
out
repz
add
adc
jnp
rcrb
stos
mov
push
xchg
cmpsb
and
pop
sahf
cmp
add
lock
clc
imul
jo
fldl
inc
es
xchg
adc
outsl
mov
add
dec
xchg
mov
sub
cmp
incl
push
mov
inc
cmc
aas
and
xor
mov
sbb
mov
stos
loop
xchg
dec
add
sub
add
mov
xchg
fdivr
mov
or
add
xchg
test
out
mov
cmp
add
push
or
and
xor
mov
js
arpl
xchg
jnp
xchg
xchg
lahf
cld
stos
adc
mov
mov
cli
xsha1
cmpsb
cmova
and
icebp
sti
push
adc
inc
add
and
jbe
or
add
push
inc
dec
and
je
add
arpl
divb
sbb
sub
ret
mov
lret
jo
xor
shlb
cmpl
xchg
mov
push
fdivrs
fstps
add
jp
xor
ret
push
inc
test
add
sbb
add
xor
pop
or
sub
push
je
adc
cmp
roll
iret
jmp
and
out
xchg
add
filds
enter
jns
adc
xor
rcrl
or
in
add
add
mov
lea
js
dec
and
add
jne
sbb
push
lret
jmp
cmpl
add
and
les
or
add
and
or
add
add
dec
pop
xchg
xchg
and
push
and
and
cmpsl
clc
mov
add
bound
add
xor
dec
mov
dec
and
adc
popl
fidivrs
adc
test
adc
cld
movl
or
daa
sti
stc
pop
scas
mov
push
pusha
push
push
jae
dec
push
push
xchg
repnz
rclb
push
pop
dec
les
test
or
stos
and
mov
call
lret
lods
shrl
xchg
add
add
cmp
or
sbbl
mov
add
test
xor
add
loopne
xor
add
aas
ss
xor
jp
shld
addr16
pop
add
cmp
jnp
sub
inc
add
rorl
push
xor
mov
int
clc
cmp
and
in
lret
test
inc
mov
inc
add
enter
adc
adc
mov
loopne
incb
stos
push
daa
push
fisttps
push
push
jno
inc
rorb
pop
add
push
data16
push
movsb
and
daa
clc
xchg
cmp
fcompl
sar
inc
add
jg
xor
rcll
pop
dec
push
popa
add
fisubrs
and
jmp
xor
imul
in
or
add
int
mov
not
and
add
imul
andb
push
adcl
in
dec
arpl
lods
sbb
mov
xchg
int3
imul
mov
enter
lea
sub
sub
rolb
out
sbb
popf
outsb
push
jae
pop
push
and
sub
dec
add
push
insl
sbbb
inc
test
jp
add
popf
arpl
hlt
sub
jp
icebp
hlt
or
mov
jo
xchg
sbb
jmp
adc
loop
cmp
add
xor
fmul
add
cltd
jno
dec
popl
sbb
or
rcl
daa
xsave
test
sub
leave
adc
add
xor
jmp
jo
jge
dec
shr
jne
dec
sbb
xchg
cld
jb
das
xor
pop
add
pop
and
add
sub
int
xor
ja
pop
mov
xchg
popf
jp
vmread
push
add
xor
rclb
inc
sbbl
hlt
sbb
push
pop
and
and
or
in
add
dec
hlt
mov
cmpsl
jmp
push
xchg
pop
repnz
mov
es
je
pop
mov
xor
outsb
fcomi
and
push
inc
jne
insb
insl
jae
add
xchg
shr
outsl
add
or
pop
add
mov
lods
push
in
clc
orb
call
mov
push
sbb
imulb
xchg
mov
mov
add
adc
add
adc
mov
add
sub
add
dec
dec
pop
bound
lds
mov
std
adc
add
cmp
out
push
add
lret
and
and
add
incl
add
mov
add
mov
das
pop
subb
pop
mov
add
add
cmp
cmp
mov
cmp
jne
sub
sub
push
pop
add
inc
rcrl
pop
into
push
cmpsl
data16
mov
mov
sbb
out
cwtl
push
cmp
add
xchg
scas
mov
pop
xchg
add
sar
mov
push
sub
and
jle
aad
push
sbbb
jae
add
xchg
xor
pop
add
adc
mov
rolb
hlt
push
add
leave
daa
pop
sbb
or
jmp
pop
add
adc
pop
lcall
cmp
mov
pop
add
mov
lock
cmc
ljmp
roll
jae
or
jb
int3
fistpll
js
unpcklps
add
aam
in
add
int3
mov
push
into
push
idivl
pop
sbb
or
sbb
xchg
in
adc
xor
ds
inc
das
call
out
iret
rclb
fnstcw
mul
addr16
data16
les
or
scas
adc
add
cmp
xbegin
add
out
jmp
dec
cmp
rorb
cmp
pop
add
roll
lret
mov
add
add
add
push
rolb
mov
dec
sbb
ljmp
sub
add
mov
mov
mov
pop
jb
add
mov
cmp
rorl
daa
push
into
insl
sbb
dec
inc
push
lock
add
stos
sub
dec
sbb
sub
jno
mov
xchg
jl
add
das
and
lret
push
add
std
dec
rclb
aas
jae
adc
xchg
add
ja
mov
jge
push
jno
jbe
decb
loope
repnz
subl
add
jmp
or
add
cwtl
aad
cmp
xchg
add
jne
xor
in
or
cmpsb
xor
lcall
pop
addb
or
hlt
jns
push
lcall
mov
lods
scas
addl
or
adc
push
dec
shrl
adcb
pop
xchg
add
adc
sub
and
add
sbb
adc
roll
inc
xchg
ja
mov
aam
jge
mov
mov
mov
call
out
cli
repnz
je
push
in
lret
add
mov
sbb
cmpsb
xchg
or
in
or
lcall
ret
dec
je
lds
cld
mov
enter
shrl
xor
popf
imul
add
pop
push
push
mov
icebp
shrb
mov
cli
out
pop
jmp
push
das
lods
jb
add
and
cmp
mul
jmp
loop
jns
pop
jle
inc
add
pop
sahf
cltd
ret
jmp
push
sub
add
add
cmc
pop
push
rorl
push
test
mov
adc
jnp
daa
mov
sub
lahf
rolb
mov
mov
lods
xor
nop
ja
cs
loop
add
lcall
add
inc
and
or
cld
or
add
pusha
inc
adc
jg
add
add
rolb
or
mov
mov
inc
hlt
add
jg
out
inc
cmp
aam
push
lcall
popf
mov
repz
call
dec
add
lcall
pop
xchg
insl
jp
push
cmp
aad
repnz
insb
add
test
sbb
cwtl
dec
pop
orb
add
add
lods
psubb
and
dec
add
inc
and
jl
push
xchg
lods
push
jle
add
push
shr
cs
adc
not
insl
int
mov
sub
loopne
outsl
mov
add
aam
pop
pushf
inc
xchg
sti
bsr
hlt
add
adc
lea
mov
and
push
mov
stos
cli
in
int3
jne
in
push
add
cmpsb
mov
add
movsl
shl
xchg
mov
ds
adcb
leave
add
dec
aaa
outsl
jb
mov
mov
or
daa
or
rol
ljmp
movsl
sub
add
lret
sbb
adc
sbb
gs
adc
cmp
shrb
loope
test
or
xor
mov
inc
and
add
push
push
xor
pop
adc
sbb
sub
ret
int
inc
dec
cvtdq2ps
jbe
lods
enter
push
shlb
adc
sub
hlt
or
cmp
imul
and
mov
fs
lods
sub
add
das
push
dec
dec
add
insb
push
aam
cmp
add
mov
add
adc
sbb
dec
push
test
loope
cmpsl
out
add
dec
in
in
or
mov
shrb
xchg
call
bound
sub
mov
xor
fldl
rcl
or
or
inc
xor
xchg
pop
add
push
jnp
mov
mov
adc
adc
adc
js
dec
add
push
ja
add
mov
push
ds
xchg
mov
in
xor
add
xchg
inc
mov
sub
inc
aas
sbb
pop
adc
adc
add
sub
imul
dec
jns
add
aaa
lock
out
cmp
popa
dec
mov
outsb
add
dec
nop
xchg
mov
mov
out
cmc
inc
add
or
xchg
pop
testb
mov
jae
mov
out
add
sbb
test
add
inc
iret
adc
mov
das
sbb
xchg
xchg
mov
stos
jbe
out
sub
add
roll
mov
jne
pop
and
jnp
fisttpll
xchg
or
add
xchg
stc
xor
lret
hlt
pop
and
or
adc
add
pop
add
push
aam
lock
push
dec
mov
pushf
stos
sub
jecxz
inc
push
add
ret
cmpsl
loope
add
xchg
std
mov
or
jb
jmp
test
fmull
push
repz
aas
aam
xchg
add
and
or
push
and
mov
add
and
lret
loope
ja
jp
cmp
inc
lret
fcmovnb
mov
jle
add
jbe
imul
and
test
addr16
xor
add
adc
aad
clc
add
mov
xchg
ds
inc
mov
je
rolb
adcb
ds
scas
pop
insl
push
sub
shlb
jmp
test
pop
add
push
lahf
cld
sub
insl
mov
cmp
dec
ljmp
movsb
pusha
mov
aam
add
mov
push
in
cmp
inc
je
sbb
leave
push
sub
pop
cmp
jecxz
and
pop
pop
test
adc
xchg
mov
add
add
fcoms
jmp
jo
or
xchg
gs
test
mov
add
sbb
push
subb
notl
xchg
cs
push
add
repnz
or
add
mov
sub
movsb
incl
dec
and
ret
movsl
add
mov
and
pop
sbb
and
flds
mov
and
daa
inc
fsubl
add
pop
imul
add
lock
add
in
sbb
and
sahf
jecxz,pn
add
sub
add
adc
and
mov
inc
dec
pop
adc
sub
loopne
push
mov
ret
add
repnz
sub
mov
and
cmp
or
xor
in
mulb
jmp
lods
sbb
in
push
sbb
cmp
nop
pop
les
sbb
inc
add
aas
js
xor
or
nop
sbb
inc
paddd
in
xor
adc
push
movsb
push
jnp
sbb
pop
ljmp
nop
enter
add
andl
mov
dec
mov
push
add
mov
or
pop
xchg
aas
arpl
jecxz
pop
and
sub
pop
adc
mov
push
loope
subl
xchg
cmp
pop
dec
inc
shlb
les
xchg
cmpsl
xor
jo
push
into
mov
jp
or
add
je
shl
call
add
out
shr
sar
test
push
shrb
push
add
cwtl
push
xchg
mov
addb
add
or
js
pop
or
ljmp
lds
mov
lahf
js
xor
xchg
shlb
xlat
sbb
or
sub
rcrl
cld
and
sub
mov
push
bsf
push
loope
mov
inc
int3
outsb
dec
add
jbe
xor
adc
insb
orl
call
pusha
rcrb
pop
xchg
dec
push
ret
push
pop
jne
mov
dec
test
iret
pop
cmpsl
cmp
push
adcb
and
dec
out
mov
add
jmp
mov
push
adc
or
pop
and
adc
and
sarb
adc
or
inc
add
sub
shrl
fstps
mov
cwtl
adc
jne
or
add
push
adc
cmp
idivb
cli
or
sbb
out
pop
cmp
leave
push
push
xchg
cld
mov
jge
les
mov
idivb
sbb
popa
add
or
sbb
shlb
icebp
add
lea
out
out
into
int3
imulb
inc
jp
mov
js
mov
ss
adc
and
sub
add
jne
out
clc
mov
or
sbb
pop
pop
mov
mov
lea
add
pop
loop
fs
add
ss
pop
push
mov
and
add
mov
addl
dec
jne
xor
push
push
pop
push
loop
xor
xchg
xor
dec
das
pop
clc
sub
cmp
or
add
push
in
lock
div
andl
or
pop
cs
mov
or
cmp
mov
pop
xlat
add
push
stos
cmp
add
add
pop
scas
and
pop
adc
cwtl
addb
js
negb
add
dec
or
inc
add
mov
add
inc
dec
jne
sbb
ja
xor
pop
mov
std
pusha
xchg
mull
cld
jo
xor
aas
add
add
add
jne
push
mov
rcll
jae
add
xchg
lea
or
sub
and
add
mov
add
jns
clc
stc
cld
nop
or
adc
dec
and
test
sub
pusha
imul
lret
ret
push
out
and
popf
or
xchg
adc
mov
repnz
push
add
test
in
add
xor
push
hlt
jg
jno
add
cs
pop
out
sarb
push
add
mov
and
xlat
or
inc
int
add
fs
stos
or
cmpsl
mov
sub
inc
push
shll
enter
cmp
and
add
inc
mov
sbb
xor
loop
pop
add
inc
sub
add
fwait
mov
add
test
or
and
arpl
aas
add
popf
test
sti
cli
push
add
in
aam
cmp
jg
sbb
inc
rcll
pop
add
aaa
fildl
dec
push
clc
andb
out
ja
subl
addl
inc
xchg
add
call
mov
ret
lcall
add
in
push
pop
add
and
inc
sbb
or
inc
sti
lods
dec
call
das
or
sbb
popa
pop
or
shl
add
adc
push
loope
fstpl
out
mov
scas
add
lcall
push
clc
and
cmp
stc
mov
fcomip
sbb
arpl
xor
test
cmp
arpl
xor
push
jae
sahf
pop
mov
sbb
test
mov
or
sbb
mov
push
mov
ret
jle
inc
lret
mov
fistpll
fdivrl
and
xor
and
mov
sub
cmc
lock
adc
loopne
and
mov
out
pop
xor
mov
or
xor
adc
daa
adc
pop
cld
out
pop
push
jl
stc
or
cs
test
scas
mov
out
lret
in
pop
mov
dec
fmul
or
adcb
add
and
sub
jb
das
mov
jg
pop
cmp
call
add
push
inc
aad
loope
sbb
mov
lea
push
sarl
xor
outsl
or
call
adc
or
subl
add
scas
cwtl
jle
sbb
and
pop
dec
pop
sub
je
adc
verw
mov
jge
mov
add
mov
xchg
or
add
jmp
lods
mov
ret
pop
push
add
sub
sbb
in
xorb
cmpsl
fs
xor
lock
and
add
or
mov
mov
imul
sbb
roll
cld
cmp
je
or
es
das
addb
xor
fdiv
xchg
push
aam
decb
std
inc
xchg
mov
psubb
mul
sti
pop
xor
in
hlt
cmp
loopne
push
leave
pop
repnz
and
test
popf
sti
in
js
inc
xor
mov
add
cmp
xor
or
in
in
mov
jo
push
inc
jmp
call
fbld
or
pop
push
test
mov
jg
jle
add
mov
cmp
filds
ret
cs
rclb
testb
fdivs
xor
insl
subb
cmp
in
out
jg
out
out
into
js
lret
lock
repz
orb
clc
or
movsb
mov
fldl
mov
cld
lcall
shrl
je
subb
enter
xor
or
add
mov
enter
sub
jmp
adc
gs
jmp
idivl
clc
scas
ja
inc
mulb
mov
stos
lahf
xor
cmp
cmpsl
imul
dec
xchg
repnz
adc
icebp
mov
cmp
xchg
and
mov
adc
fsubrl
cmc
and
cld
mov
sub
cmp
pusha
pop
and
pop
loope
sbb
popa
imul
pop
sti
ucomiss
ds
xchg
aam
scas
or
fwait
cs
sub
or
inc
jns
js
jmp
data16
mov
cwtl
scas
add
divl
or
loop
add
fcmovb
mov
sbb
or
or
fidivs
repnz
add
bound
add
mov
add
lret
sub
mov
jmp
les
shrl
fxch
les
add
movsl
shlb
add
inc
xchg
dec
ret
shlb
or
out
or
je
xchg
xor
or
repz
movsl
jb
inc
push
dec
mov
jns
or
js
test
dec
subb
push
movsl
dec
test
or
add
dec
xor
push
mov
and
pop
mov
stos
mov
test
insb
push
add
fbstp
sbb
fiaddl
sbb
pop
xor
xor
cwtl
xor
stc
or
scas
or
sub
cwtl
adc
lods
cmp
adc
push
into
xchg
push
shl
xor
enter
cwtl
pop
add
jmp
popf
push
popf
and
mov
push
ret
dec
mov
pop
or
jle
loopne
cltd
pop
or
and
enter
add
loope
or
clc
jge
fdivrs
div
jnp
loope
mov
push
cltd
js
icebp
add
push
test
in
push
xor
add
imul
lock
xor
divb
loopne
cmpsl
or
ret
pop
test
mov
and
mul
pop
iret
xor
ret
mov
dec
in
dec
movsl
xchg
stos
dec
mov
ficoms
mov
or
pop
out
push
or
jnp
xchg
and
push
or
clc
punpcklwd
jl
adc
adc
and
lret
aaa
sbb
mov
or
or
jle
sbb
cmp
xchg
xor
adc
inc
add
mov
adc
dec
add
fs
push
mov
fldl
jns
dec
mov
loopne
ljmp
push
and
jmp
add
dec
jmp
mov
adc
bound
scas
sbb
call
dec
stc
xchg
xor
push
and
jge
cmp
mov
fsubl
add
sbb
dec
push
outsl
lds
add
xchg
js
repnz
add
arpl
cwtl
sbb
in
adc
and
clc
add
inc
pop
add
pop
or
and
movsb
pop
mov
aas
jg
mov
scas
mov
jecxz
and
jmp
pavgb
and
add
out
pop
inc
and
sbb
nop
and
add
in
dec
stc
repnz
cmp
or
addr16
test
scas
in
and
mov
inc
mov
and
test
adc
add
push
cmovno
fsubs
sbb
cmp
xor
xchg
insb
xchg
rorl
jmp
xor
call
mov
loop
xchg
fldenv
test
push
push
clc
jecxz
pop
test
dec
sub
cld
jmp
xor
dec
push
data16
mov
jo
push
es
or
pop
add
outsl
shrb
into
mov
push
xor
test
sbb
xchg
shrl
shr
sahf
scas
add
cmp
popa
xchg
lcall
adc
add
mov
jg
mov
cmp
adc
push
mov
das
arpl
dec
or
xor
sbbl
add
mov
hlt
pop
add
jecxz
pop
imul
leave
and
rorl
adc
mov
push
inc
jecxz
es
fiaddl
pop
or
or
test
add
jg
loope
cmp
push
aas
dec
add
pop
mov
push
sbb
shrl
sub
loope
movsl
or
dec
mov
aas
inc
ret
add
loope
add
or
lahf
subb
jmp
in
and
cmp
mov
mov
sub
dec
cwtl
js
pop
sub
popf
sti
ret
mov
mov
outsb
xor
or
push
mov
or
push
mov
sbb
adc
pop
in
jmp
inc
imul
xchg
aam
adc
add
pop
push
cmp
cli
loope
and
dec
std
mov
imul
sbb
mov
fcomps
dec
popf
pop
imul
int
call
xor
stc
jno
add
push
sub
test
jno
sbb
movsl
xor
fsubl
call
add
in
pop
inc
push
pop
jns
or
out
fs
pushf
mov
push
cmp
push
sbbb
push
adc
push
xchg
xchg
test
jo
lock
jo
sahf
adcl
inc
hlt
aam
mov
adc
lret
sub
mov
xor
xchg
inc
loop
aaa
loopne
iret
cmp
or
cmp
inc
cmp
pop
cmpl
inc
fiadds
fidivl
add
test
rorb
dec
loop
add
es
jb
mov
inc
dec
add
sbb
add
mov
mov
data16
add
rcl
leave
fistps
cmc
adc
sbb
out
jl
add
pusha
test
lahf
mov
stc
lods
sbb
leave
dec
push
in
cmp
in
jb
sbb
adc
addb
jle
xchg
lods
push
adc
sbb
mov
andb
add
clc
mov
jb
add
and
push
jnp
je
jne
dec
movsl
sbb
fistpl
mov
lahf
in
cli
ja
mov
nop
push
jl
adc
sub
jae
inc
sub
or
xor
jnp
pusha
std
sbb
sahf
jl
ror
adc
push
test
and
dec
mov
dec
fists
mov
adc
leave
inc
shrl
pop
and
lret
mov
or
out
testb
or
add
arpl
cmp
or
imul
cld
add
jno
jecxz
dec
xchg
adc
mov
add
mov
les
add
jp
sbb
stc
xchg
mov
repz
gs
leave
jg
cld
daa
in
lea
ret
push
and
loope
roll
es
dec
inc
rcrb
and
lods
dec
adc
or
test
dec
xchg
sub
in
push
or
popa
fwait
or
loopne
test
ficoms
or
mov
dec
fmull
repz
jge
rcrl
mov
xchg
jmp
push
stc
fadds
cmpsl
int
repnz
dec
out
sub
xchg
cmpsb
movsl
jns
jnp
cmp
pop
adc
adc
and
dec
fs
pop
out
add
sbb
add
or
cmpsb
or
jne
xchg
dec
test
mov
mov
loope
and
push
cwtl
mov
mov
movsl
mov
mull
pusha
nop
jnp
push
nop
lods
add
jns
mov
mov
and
cmc
nop
mov
adc
push
stos
jae
add
into
dec
sub
ss
add
rcrl
insl
sub
out
jle
sub
pop
inc
inc
pop
enter
mov
xchg
js
jle
xchg
dec
les
sbb
fisubl
sbb
int3
jne
add
fnstsw
mov
add
stc
inc
mov
xchg
les
mov
and
jns
shll
dec
add
push
pop
mov
repnz
inc
dec
fsts
lea
clc
loopne
push
loope
add
js
or
jnp
roll
outsb
ds
jnp
jno
sbbl
xor
push
mov
xchg
sbb
mov
addr16
popf
test
fmull
outsb
mov
cmp
movl
and
insb
stc
lcall
movsl
mov
pop
sub
xor
mov
daa
lea
pop
je
out
and
jecxz
leave
in
push
out
add
and
add
andb
inc
and
mov
adc
pop
dec
push
decb
add
inc
or
add
or
adc
cmp
popf
xlat
inc
into
ja
in
dec
or
mulb
ret
xchg
pop
out
mov
daa
pop
js
pop
loopne
mov
arpl
add
fdiv
and
cld
test
or
push
cmp
pop
orb
lods
fisttpl
sbb
cmp
call
and
je
out
add
or
dec
pop
cld
test
ja
add
push
adc
sub
imul
push
int
cli
inc
mov
dec
add
ja
jne
pop
push
push
cmpsl
jl
jle
and
jo
cmpb
push
stos
adc
std
out
sub
pop
xor
outsb
cld
push
and
or
std
sub
add
roll
push
divl
and
cmp
cli
or
add
sahf
or
sbb
js
push
fisttpll
cmp
and
sbb
or
sbbb
ror
repz
or
loope
out
cli
add
cld
outsb
dec
clc
cmc
mov
mov
cld
mov
in
bound
sub
and
add
adc
push
orb
lret
popa
add
fiaddl
clc
cmpsl
ljmp
adc
xchg
add
inc
scas
mov
dec
aad
imul
test
mov
nop
fsub
out
add
stos
cmpsl
in
xchg
adc
mov
add
xor
or
pushf
stos
ret
scas
sbb
add
aaa
sub
adc
add
inc
popa
outsb
pop
daa
je
cmp
fs
out
aas
nop
jo
pop
dec
ret
in
add
push
or
inc
sbb
sbb
lea
icebp
pop
mov
jmp
pop
lock
xchg
mov
push
std
cli
loopne
lcall
gs
add
testb
addb
int
jp
push
add
das
adc
add
add
push
jmp
jns
cwtl
mov
sbb
rclb
dec
add
mov
or
xchg
add
cmpl
add
mov
and
mov
sahf
loope
add
jle
adc
test
add
cltd
fldcw
pop
sub
add
add
test
xor
jg
xchg
rcr
xchg
sbb
inc
sub
push
call
xlat
jns
mov
fistpl
xchg
dec
popf
inc
mov
rol
cmpsb
pop
xor
sub
outsb
rcrl
or
loopne
rolb
sbb
in
xchg
test
out
inc
bound
call
fidivrs
mov
sub
js
add
jmp
xor
fs
jl
das
add
cmp
pop
push
ret
mov
inc
push
xchg
xor
scas
cmc
sbb
mov
rorb
mov
fdivrl
icebp
sarb
dec
add
jmp
cld
dec
add
test
cmpl
add
xchg
xchg
mov
or
pop
xchg
inc
std
push
test
inc
inc
aam
inc
bound
das
adc
scas
dec
mov
adc
add
arpl
inc
mov
lock
sub
call
cmp
je
xor
add
je
add
push
and
mov
les
mov
add
adc
add
ja
dec
pop
iret
lock
mov
call
clc
inc
cmc
sub
add
inc
mov
andb
adc
pop
dec
sti
mov
jb
add
adc
enter
int3
or
repz
stos
lods
dec
dec
adc
mov
push
jno
push
hlt
sarb
jo
add
jae
enter
stos
mov
sub
cmp
ljmp
jne
push
add
daa
push
adcl
in
sbbl
mov
in
clc
sub
add
js
adc
or
jecxz
test
push
aam
and
fadds
dec
cwtl
loop
add
jle
xchg
and
int3
lods
stos
movsl
mov
add
cs
cmp
es
pop
add
and
mov
adc
xor
nop
popf
add
out
inc
xor
pusha
stos
stc
add
sti
sub
sarb
mov
adc
sbb
jne
sbb
mov
mov
fcoml
rolb
sbb
aas
push
pusha
push
or
or
sub
jns
idivb
imull
dec
push
jg
add
xor
cmc
scas
cltd
das
mov
cmc
inc
test
sbb
std
ret
xor
add
aad
scas
repnz
lcall
add
test
sbb
push
xor
cmp
movsb
test
sbbb
sbb
push
dec
jno
pop
ficompl
mov
push
rcrb
cmc
bound
or
inc
insl
shrb
add
dec
movsb
scas
add
sub
cwtl
imul
add
pop
lds
call
add
movsb
orb
rolb
insb
loop
sbb
jo
add
push
je
movsl
leave
ss
dec
add
inc
xorb
call
cmp
inc
add
addb
sbb
or
mov
testb
mov
call
sahf
test
inc
jno
andl
lea
jo
xchg
pusha
dec
jbe
jg
inc
add
push
pop
fldt
loope
mov
xchg
jo
add
jnp
pop
push
jne
xchg
pop
dec
leave
or
add
cli
mov
mov
add
mov
or
loopne
mov
add
sbb
add
sub
popf
test
sbb
inc
sbb
nop
cmp
mov
push
subb
inc
mov
pop
cs
sbbb
das
mov
ja
push
mov
popf
mov
sbb
sub
pop
cmpsb
movsl
addl
or
call
test
xor
xor
aam
hlt
pop
mov
xor
mov
clc
repnz
inc
cld
cmp
loope
pop
es
jae
add
fidivrs
lock
push
test
popf
add
sarb
add
dec
mov
mov
xchg
ret
mov
fsub
js
adc
sahf
or
adc
mov
or
imul
pop
add
inc
pop
or
in
and
and
les
loopne
call
mov
and
adcl
faddl
jmp
cmc
xchg
xlat
pop
and
lock
xchg
inc
sarl
add
ja
xor
mov
jne
fisttps
shll
and
divb
out
in
hlt
inc
add
adc
leave
mov
or
mov
inc
jne
repz
sahf
add
stc
sbb
cmpb
bsr
xchg
jg
rcl
add
dec
andb
mov
je
inc
mov
faddp
dec
pop
add
push
mov
add
push
jle
jmp
daa
in
dec
pop
cli
cmp
cmp
cmp
add
push
jmp
add
push
sbb
ret
ja
and
lret
iret
adc
not
sub
mov
xor
add
dec
add
add
jb
push
sarb
push
clc
xor
and
cltd
add
cmp
mov
xchg
push
movsb
repz
jle
roll
push
stos
and
cld
cli
adc
cwtl
mov
test
mov
dec
add
lcall
adc
lock
and
lock
push
pushf
add
inc
lcall
stos
sbbb
jl
xor
sub
add
jg
add
out
dec
pop
sbbb
jne
stos
xchg
jo
add
clc
imul
sbb
pop
add
ljmp
push
subps
cs
rorb
xchg
push
inc
dec
call
hlt
or
or
subb
add
rclb
adc
mov
addb
cmp
filds
rorb
add
xchg
data16
cmp
pop
add
mov
loope
jae
jb
sub
sbb
popf
adc
leave
push
jl
call
add
sar
adc
scas
fcomp
pop
ljmp
cli
scas
pop
sbb
xor
inc
pop
or
cmovg
call
add
push
enter
aas
add
adc
loop
nop
lret
push
cwtl
lods
cmp
pusha
stc
jne
dec
loopne
pop
add
adc
xchg
sub
les
and
cmp
adc
add
ja
and
add
mov
add
and
push
hlt
cmpsl
sbb
add
ds
jge
add
subb
dec
les
popf
add
in
jno
divb
jne
jg
add
cs
stos
into
inc
or
mov
mov
ds
test
sbb
jle
aam
pop
add
and
cmp
inc
mov
mov
gs
or
repz
jne
add
mov
leave
pusha
cmp
mov
sbb
addl
add
add
add
inc
iret
mov
sbb
pushl
sub
add
pop
push
pop
add
dec
dec
out
xor
imul
cmp
dec
rol
lock
lret
sbb
cli
lret
add
cmp
cwtl
and
pusha
add
dec
hlt
dec
es
sbb
flds
mov
jae
insl
orb
lahf
fadd
push
add
stos
sahf
arpl
pop
xlat
add
loop
xor
cmp
lock
ret
pop
inc
enter
pop
addr16
mov
add
scas
test
mov
jl
subb
push
add
xlat
mov
inc
add
push
sahf
aam
sub
add
jle
or
fidivrl
add
adc
adc
popa
call
and
mov
inc
mov
mov
add
pop
fwait
mov
jno
add
mov
pop
or
add
dec
lock
cmp
jo
add
sarl
sub
sbb
jnp
add
enter
add
inc
xchg
jno
inc
pop
push
mov
jbe
decl
push
repnz
dec
cmp
add
test
leave
out
mov
jg
dec
xor
scas
add
or
and
push
inc
mov
int
push
mov
clc
push
add
xor
mov
rcr
lret
xchg
ds
roll
adc
jge
mov
pop
mov
sub
push
pop
andb
shlb
add
in
orl
mov
xchg
push
and
add
movsl
xlat
je
add
test
cmp
ret
mov
roll
push
fcoml
mov
int3
add
xchg
cmpsb
sbbl
out
xor
stos
add
sbbb
xor
add
or
add
cmp
cld
or
stc
bound
dec
mov
push
xchg
je
andb
cli
fnstenv
sbb
loopne
mov
les
mov
xchg
andl
pop
mov
jne
adc
sbb
and
jmp
fmull
lea
xor
inc
or
pop
dec
push
cmp
mov
xor
jne
pop
xor
pop
mov
nop
ljmp
pushf
add
xchg
jp
push
int
xor
out
ret
adc
push
test
push
in
jp
add
sbb
sbb
cmp
inc
dec
je
or
test
ds
jno
cmp
pop
in
sbb
and
add
addl
cld
jl
lods
jo
lock
push
jmp
test
dec
jne
outsl
ljmp
pop
cmc
cmp
addb
pop
fadd
jmp
je
mov
jnp
xchg
fsts
enter
adc
jl
add
pop
add
jg
clc
jge
push
cwtl
jae
dec
ja
or
xor
push
sbb
add
jae
movsl
outsl
stos
xchg
clc
push
jne
pop
add
fdivs
fdiv
dec
pop
jns
add
jmp
cld
push
nop
jno
add
pop
stos
out
cmp
mov
lock
std
cmp
add
mov
mov
adc
subb
xor
dec
inc
sub
inc
add
push
insb
pusha
dec
adcb
mov
sti
add
pop
leave
add
test
add
inc
test
dec
jne
daa
add
adc
popa
add
jmp
jo
lcall
lods
xlat
fwait
add
aad
jge
rol
pop
xchg
dec
jne
lods
les
fldenv
popf
pop
roll
or
mov
or
pop
pop
jno
rol
les
mov
push
or
or
in
rcr
xchg
fcoms
lods
shll
cli
mov
mov
mov
stc
les
add
in
out
faddl
decl
pop
stc
add
into
sub
add
inc
int3
jno
pushf
sub
add
ret
or
ja
add
adc
adc
callw
add
pop
cmp
je
add
ljmp
add
dec
mov
ret
xlat
xchg
cmp
addb
repnz
or
add
outsb
mov
xor
mov
xchg
dec
hlt
mov
movsl
mov
dec
add
xor
mov
mov
dec
mov
adc
xchg
add
data16
dec
or
mov
jae
push
addr16
add
cmpl
ja
stos
add
lcall
es
add
and
push
add
mov
or
pop
cld
fs
ret
mov
sub
add
idivl
das
push
inc
pop
add
and
imul
jge
push
dec
sti
pusha
cmp
pop
sub
scas
adc
jge
mov
cmpsl
add
inc
iret
pop
bound
call
lret
and
addb
add
jg
push
add
push
mov
inc
pop
dec
jmp
aaa
out
leave
push
jl
add
pop
std
xchg
js
add
lret
inc
cmpsb
movsl
adc
or
add
push
jno
pop
adc
loope
cmp
faddl
fcoms
in
cld
in
repnz
xchg
dec
cmp
adc
jne
jle
push
stos
aam
lcall
inc
andl
sub
add
div
adc
subb
xchg
pop
add
loopne
fdivrl
inc
stos
cs
add
jns
and
data16
clc
mov
fdiv
mov
mov
cmp
push
outsb
loopne
adc
jecxz
shlb
or
rcrl
fwait
or
les
mov
jge
mov
nop
loop
inc
fwait
pop
mov
xor
or
cmpl
xchg
adc
adc
inc
mov
mov
or
stos
stos
sbb
ficomps
loopne
loope
cmp
xchg
jne
outsb
std
and
mov
in
pop
in
mov
ja
add
fsubs
add
pop
or
jb
add
xchg
adc
mov
leave
xlat
xchg
dec
jb
in
outsl
es
and
sbb
mov
das
add
add
les
test
sbb
ss
xor
adc
in
into
add
jecxz
push
or
and
push
xchg
in
pop
lahf
add
cmp
sldt
push
inc
popf
pop
push
call
xchg
sbb
pusha
add
dec
add
mov
rorb
lahf
jge
add
push
arpl
sbb
out
imul
lcall
add
icebp
es
push
add
cmp
or
sbbb
aam
cmp
rclb
sub
cmp
jne
push
mov
jbe
sbb
mov
repz
add
ljmp
popl
add
cmp
pop
lret
cmpsl
clc
test
push
add
push
ret
test
mov
aam
loope
fsubrs
or
cmp
scas
enter
loope
adcb
cmc
or
pushw
fs
cmp
icebp
add
loope
test
dec
cmc
add
cltd
popf
jne
add
mov
add
les
add
xor
add
dec
loopne
fsubrl
mov
fwait
adcb
movsb
ds
push
xor
mov
scas
inc
daa
add
aad
ja
cld
jge
add
and
xor
sbb
and
adc
add
jae
add
push
cwtl
jp
pop
add
sub
gs
xchg
or
xor
jmp
xor
clc
sub
adc
faddl
push
lock
imul
mov
in
mov
xorb
das
or
adc
pusha
xchg
adc
lock
out
add
arpl
je
das
repnz
rolb
pushf
aas
cli
roll
lea
adcb
not
sub
das
pop
fidivrl
std
adc
roll
pop
dec
aas
movsb
rcrb
imul
jecxz
push
sub
nopl
jl
lahf
ret
sahf
sar
out
hlt
jle
add
adc
add
in
inc
add
mov
cmp
sub
mov
mov
aad
adc
jb
sbb
push
jo
add
test
cmp
add
aad
adc
loop
jne
add
cmpsl
inc
popf
ret
test
imul
add
mov
stos
add
and
pop
out
cmp
add
xchg
or
add
mov
sub
inc
mov
test
push
add
outsl
mov
enter
cmpsl
incb
inc
pop
and
insb
sub
lods
add
mov
push
sub
mov
push
int3
lods
add
cmp
daa
fildl
push
dec
jg
fwait
mov
mov
pushf
scas
orl
mov
lahf
or
mov
and
sub
or
test
add
adc
mov
inc
push
pop
mov
mov
daa
or
cmpsb
lahf
dec
jle
mov
rclb
cmp
jl
add
daa
adc
imul
cmp
sub
mov
push
and
data16
icebp
add
out
push
inc
cmp
add
lds
add
dec
fildll
enter
fisttpll
push
mov
stos
and
andl
and
and
mov
push
add
and
cmp
sbb
add
adc
mov
xchg
cld
push
lahf
nop
pop
into
adc
add
push
das
mov
adc
add
js
xchg
or
mov
and
xor
mov
pop
cld
or
pop
pop
lea
xor
aad
imul
or
sbb
test
je
rcrb
pop
test
incb
add
dec
xchg
mov
push
add
nop
cmpb
add
ret
pop
xchg
aad
pusha
sub
jmp
sbb
inc
pop
inc
call
xor
test
mov
push
scas
fadds
stc
arpl
add
cmpl
add
lahf
rorl
out
ds
add
add
push
mov
test
and
pop
mov
test
mov
add
xor
enter
je
xchg
or
push
fs
lcall
in
xor
add
fsts
adc
cs
push
sbb
dec
in
add
add
dec
xor
jae
cld
lret
sub
jmp
pop
fdivrl
mov
xlat
mov
add
cmp
add
cmp
sub
lcall
add
inc
test
push
xchg
out
scas
add
adc
dec
cmp
aaa
push
test
inc
xchg
jge
add
or
sub
ja
jmp
adc
add
pop
fstpt
sbbb
out
lret
push
mov
add
mov
adc
dec
enter
inc
add
in
out
lods
clc
mov
or
add
sub
jae
push
xor
outsl
add
es
push
and
sbb
clc
cwtl
rclb
ja
add
mov
mov
add
mov
lea
incl
push
mov
enterw
mov
add
push
xor
push
add
add
in
mov
push
add
mov
ror
test
call
and
nop
les
or
cmp
pop
add
adc
ret
insb
loopne
les
mov
sub
push
cmp
add
jbe
enter
sub
add
lock
stos
inc
adcb
adc
and
and
add
shlb
add
push
add
dec
cmp
cmp
adc
stos
mov
test
add
and
and
mov
jno
add
sub
test
popf
cmpb
mov
push
mov
test
call
add
fidivl
xorb
pop
mov
mov
push
and
push
dec
add
scas
stc
loope
aaa
or
xchg
movb
inc
or
mov
inc
adc
xchg
gs
pop
dec
hlt
mov
testl
jmp
std
ret
jg
hlt
ds
add
call
imul
xor
lcall
add
add
and
mov
push
add
push
sub
lcall
inc
call
sbb
jns
add
jl
xor
add
ja
add
out
fsubr
or
sub
pop
ret
orl
lock
sarb
xor
mov
lods
push
push
add
lea
pop
adc
mov
push
imul
pop
pop
inc
jne
in
add
loop
shlb
add
push
xor
cwtl
add
pop
lods
push
std
pop
lock
adc
dec
inc
push
inc
rorl
inc
dec
push
inc
or
nop
adc
add
xor
cmp
shlb
add
cwtl
sub
push
data16
sarb
inc
xchg
add
jmp
enter
cmpsb
pop
adc
cli
add
cltd
ror
out
pop
xor
and
adc
mov
test
inc
test
xchg
push
add
adc
dec
add
enter
js
push
add
outsl
lods
callw
pop
and
push
jae,pn
adc
cld
mov
jbe
add
int
sub
popf
jl
lret
incb
push
dec
leave
add
add
out
xchg
pop
jmp
xor
test
stos
dec
dec
sbb
addl
mov
add
and
push
cld
inc
add
push
sbb
pop
nop
enter
mov
stos
shrb
lea
add
cmp
add
into
inc
add
dec
andl
dec
jo
sbb
jg
pushf
rcll
mov
jb
aam
push
push
push
or
test
cmp
inc
add
out
adc
push
js
sbb
shlb
xor
das
add
or
fistl
xchg
loopne
add
jl
rolb
sub
sbb
mov
and
jb
movsb
test
fcomi
mov
repz
shrb
jo
xchg
add
shll
add
xor
into
js
rolb
add
mov
in
cmp
rcrb
dec
sbb
add
xchg
xchg
das
add
cmp
jno
add
jecxz
sub
rolb
popl
add
pop
lods
pop
mov
scas
cmp
pop
push
mov
inc
sbb
ljmp
adc
aas
cmp
scas
jne
addl
jns
mov
and
add
test
icebp
out
mulb
ds
add
es
or
push
test
in
jg
mov
fwait
test
xchg
sbb
add
pusha
mov
jg
int
int3
dec
lcall
sti
and
adc
push
push
xorb
es
in
add
dec
stos
cwtl
repz
adc
add
aaa
enter
xor
insl
loopne
test
add
mov
or
scas
add
mov
cmpsl
jb
clc
fcoml
or
xor
lahf
pop
cmp
pcmpeqb
jo
pop
pop
add
mov
iret
inc
or
sti
out
clc
lahf
sahf
xor
cmp
and
mov
xchg
pop
or
mov
cmpsb
mov
push
cli
cmp
or
pushf
add
inc
or
addr16
pop
push
mov
push
cmc
lock
dec
dec
xor
mov
in
cmp
xchg
sbbb
pop
adc
add
sub
mov
add
mov
cwtl
repnz
adc
or
pushl
sbb
sub
push
hlt
add
iret
ja
add
dec
scas
cmpsb
add
xor
in
ret
add
add
pop
jns
icebp
add
inc
add
add
mov
daa
mov
xor
gs
subb
jle
dec
jl
xor
add
inc
xchg
addr16
sbb
lea
or
dec
je
jecxz
and
jo
test
add
call
pop
in
push
pusha
je
add
mov
add
pop
jmp
popa
sbb
shlb
pop
mov
sbb
cmp
les
sub
mov
stos
test
cli
sbb
sarb
movsl
push
add
push
shr
loopne
add
fsubr
shlb
add
fnsave
jo
add
xor
sub
pop
add
sbb
mov
add
rolb
xor
pusha
add
andb
insl
into
pop
pop
clc
xchg
add
jecxz
in
push
aad
xchg
add
sbb
loopne
clc
push
push
add
push
mov
pusha
push
pop
and
cli
cmpsl
mov
mov
xlat
pop
xchg
jo
or
js
andl
sti
subb
jo
push
add
out
inc
push
dec
jns
repz
add
inc
xor
mov
ljmp
push
push
xchg
push
mov
pop
icebp
or
jae
mov
mov
push
lods
add
pop
aam
stc
add
pop
scas
add
lock
clc
adc
push
push
add
mov
and
loopne
add
push
cmp
pop
add
add
lods
mov
add
in
pop
jo
add
leave
jns
ja
into
ret
fisttps
add
cmpb
pop
add
mov
jge
add
mov
enter
mov
adc
jo
incb
pop
mov
lea
fistpl
sub
sbb
adc
pop
add
push
ret
jbe
cmpsb
jns
lds
and
or
imul
add
nop
arpl
mov
rol
push
nop
fisubs
fidivs
testb
or
test
stos
xor
fistl
add
dec
mov
mov
pop
sub
add
or
jl
iret
fs
mov
dec
pop
sti
xor
or
and
sub
push
fcomps
shlb
hlt
pop
mov
repnz
push
cld
and
adc
mov
nop
cmp
fisttpl
add
je
js
lods
cmp
call
jge
jne
jp
ss
mov
add
out
sbb
cmpb
loopne
mov
add
push
add
jne
in
sub
rol
sbb
fadds
lock
enter
add
pop
repz
add
test
lods
movsl
xchg
pop
push
rcrl
sub
push
loopne
jbe
out
ss
sbb
movsl
sahf
inc
adc
cmp
push
add
add
pop
enter
jmp
not
rolb
pop
lret
jp
push
sahf
add
hlt
andl
sbb
mov
ss
add
add
adc
add
mov
push
cmp
loop
orb
ds
popa
xchg
arpl
push
loopne
jns
pop
add
adc
sbb
pushf
lahf
add
lock
mov
cmpsb
push
cmc
cwtl
es
aam
or
nop
add
lahf
or
loopne
add
mov
inc
dec
adc
in
mov
and
sub
jmp
iret
adc
inc
in
sti
pop
push
pop
push
add
jnp
nop
add
call
push
add
add
sbb
lods
add
xor
out
mov
fstpl
daa
push
cs
shlb
insl
or
jmp
sbb
stos
lods
add
sbb
icebp
mov
cmc
bound
jp
add
fidivl
jo
add
lea
mov
add
push
out
shr
add
std
push
or
add
js
mov
adc
inc
mov
addl
mov
aaa
pop
push
cmp
jo
add
out
in
loop
pop
xor
cli
add
cmc
sbb
inc
and
shrb
lock
mov
or
xchg
mov
add
out
push
and
pop
xor
mov
rol
or
add
inc
mov
jns
or
jle
mov
adc
or
push
add
ffree
outsl
push
jnp
sbb
into
jb
rcrb
fstps
inc
cmpsl
int3
add
mov
sarl
mov
in
dec
in
scas
pop
clc
cld
mov
pop
mov
insb
cmp
add
sub
dec
popf
xchg
sbb
xchg
cmp
int
add
or
pop
scas
imul
or
pop
ret
mov
add
xchg
bound
jge
add
in
xchg
das
add
pop
add
icebp
ret
lock
and
push
add
popa
xor
xchg
mov
cmp
sub
dec
or
add
sub
push
adc
jae
bound
jecxz
cmp
xchg
in
and
push
inc
xor
dec
adc
xchg
es
jno
rcll
ret
lock
push
cmp
and
loop
add
or
lods
or
mov
or
mov
jg
add
sahf
jne
push
mov
jae
sti
push
dec
lods
add
jp
or
xchg
das
fadd
or
add
xor
data16
pop
jp
xor
addr16
add
pop
add
pinsrw
pusha
mov
loope
imul
leave
add
adc
ret
pop
pop
pop
call
shl
loop
lods
popf
lds
lods
cwtl
push
add
pop
shlb
sub
add
cmp
stc
adc
sti
add
and
repnz
jp
loope
mov
xchg
mov
mov
add
iret
jmp
add
in
stos
pop
pop
scas
test
dec
add
out
pop
mov
nop
outsl
mov
add
add
movb
sub
fcmovu
and
adc
unpcklps
cmpsl
xchg
lock
pusha
inc
outsl
mov
add
jp
pop
outsb
xchg
pop
jmp
adcl
fnstsw
testb
in
xchg
aad
ja
shrb
rclb
mov
sti
fiaddl
mov
add
int
stos
cmpsl
pop
xchg
add
sarl
popf
add
addr16
repz
test
xchg
sub
jg
lods
and
pop
hlt
outsb
test
mov
ret
test
dec
addl
mov
stc
mov
loopne
dec
and
pusha
fwait
add
add
lock
adc
jbe
pop
xor
mov
cmp
fwait
jbe
ljmp
iret
xlat
inc
sbb
push
ret
sbb
insb
add
data16
out
add
imull
loopne
mov
add
imul
pop
mov
movsb
aam
xor
sbb
push
sbb
cmp
les
outsl
inc
cmp
testl
loopne
adc
pop
incb
adcb
jp
jmp
add
add
out
dec
pop
pop
adc
hlt
mov
mov
add
aad
inc
xlat
pop
pusha
popa
adc
jle
loop
sahf
sbb
adc
push
add
testl
aaa
xor
jo
xchg
xor
dec
sbb
leave
dec
movsb
subb
out
push
and
ret
cli
out
loop
add
xor
rolb
adc
subb
jle
mov
add
mov
mov
ljmp
jecxz
add
jb
or
daa
sbb
or
jge
mov
add
xchg
imul
xor
mov
jl
mov
cltd
pop
xor
add
mov
lcall
popf
shlb
add
incb
push
arpl
mov
inc
pop
pop
sub
loopne
add
dec
jmp
jo
scas
cmp
mov
sbb
sub
fildl
repnz
push
mov
xchg
stos
rolb
scas
and
pop
fs
mov
fidivs
push
push
adc
and
xchg
ja
addb
loop
pushl
adc
pop
cs
in
cmp
or
arpl
cmp
out
xor
add
add
sbb
dec
add
out
aad
push
subl
daa
inc
leave
les
mov
pop
aad
add
dec
sbb
cmpsl
mov
out
adc
push
jne
mov
add
les
mov
test
cmpsb
das
mov
jne
jge
in
add
jle
dec
stos
call
cmp
fs
mov
mov
add
jb
adc
pop
adc
orl
inc
sub
and
in
js
pop
out
sbb
mov
jb
data16
cmp
push
and
add
and
ja
and
jnp
inc
je
sbb
jl
in
inc
inc
mov
fwait
shr
pop
inc
loope
add
test
pusha
mov
jge
cmp
lret
add
cmp
or
pop
clc
cmpsl
add
std
push
add
add
popf
arpl
and
icebp
or
cmpb
pop
xor
adc
inc
adc
jp
push
pop
scas
mov
add
mov
sbb
sub
push
xor
inc
and
xchg
pop
adc
add
aad
cmpb
add
add
jns
out
scas
mov
in
pushf
or
add
stos
sbb
mov
push
dec
dec
pusha
push
daa
cmp
sbb
and
loopne
sub
adc
adc
movsb
dec
xchg
add
in
xchg
lds
add
test
nop
add
das
test
insb
push
jae
add
pop
cmpsl
fadds
test
xor
jmp
adc
aaa
js
inc
xor
sbb
insl
ds
mov
das
mov
or
push
jns
add
sub
lods
sub
cmp
xor
add
ret
popa
add
push
mov
outsl
aas
inc
sub
clc
cmp
xor
seta
test
push
out
int3
jno
add
xchg
cmc
inc
stc
add
lods
sbb
push
xchg
rorb
cwtl
lret
fsubl
adc
add
iret
or
in
jb
push
mov
adc
add
dec
mov
or
pop
loopne
cmp
add
mov
xor
add
cmp
je
adc
push
jmp
jnp
int3
add
or
pop
cs
jmp
push
lea
call
out
add
popf
bound
mov
loopne
or
mov
shll
and
sti
dec
shlb
push
jmp
js
mov
xor
or
lahf
add
push
push
jbe
dec
jne
outsb
cmp
test
and
inc
pop
xor
dec
mov
mov
cwtl
add
les
enter
ljmp
in
mov
inc
sbb
test
shl
bound
pop
aas
mov
adc
cmp
xor
pop
in
in
push
push
std
add
add
dec
push
sbbb
or
inc
adc
dec
dec
sbbb
movsb
push
adc
or
inc
or
dec
or
roll
scas
pop
aam
push
add
mov
enter
jle
push
sbb
push
push
mov
pop
mov
cwtl
or
push
pop
adc
cltd
add
jb
xchg
jo
dec
imul
mov
popf
add
nop
inc
and
sbb
sub
cmp
adc
add
in
daa
or
push
xchg
or
das
ret
add
xlat
popf
lret
movl
xchg
or
cld
popl
add
add
adcl
idivl
sub
and
add
jmp
jae
add
pop
mov
fucomi
in
jo
ds
cmp
add
or
or
push
lea
mov
sub
and
adc
mov
addl
outsl
sub
popa
sub
je
add
and
fisubrs
or
scas
add
xor
lret
pop
movsl
add
mov
adc
dec
cs
sub
jecxz
mov
fstps
out
jnp
das
pop
add
mov
pop
adc
mov
icebp
inc
mov
dec
jnp
cmp
pop
push
jmp
cltd
mov
or
scas
jo
add
loopne
pop
lods
xchg
loopne
or
roll
and
stos
jg
roll
andb
add
sbb
hlt
mov
shlb
loopne
add
std
xchg
add
add
popf
iret
or
loop
sbb
dec
add
pop
and
sahf
mov
inc
cmp
and
jp
aas
stos
push
insl
addr16
jle
add
push
cmp
movsl
or
fidivrl
sub
jge
mov
scas
shl
subb
add
cld
jnp
je
cmp
and
pushf
int
add
inc
inc
xchg
xchg
shlb
stos
test
push
hlt
add
clc
or
jo
add
aam
xchg
dec
jb
and
pop
cwtl
xlat
pop
jecxz
jg
das
add
cwtl
push
cld
mul
insl
add
or
and
push
push
sbb
mov
or
scas
loop
and
add
sbb
lods
lods
add
push
hlt
outsl
add
add
jo
add
int
test
call
addb
inc
out
adc
xor
les
test
mov
xchg
jo
add
pusha
out
adc
popf
add
add
push
adc
cmp
mov
addl
ja
scas
or
add
insb
sub
loope
imul
add
lods
mov
and
pop
mov
add
shlb
fcoml
sbb
mov
jge
mov
jl
jmp
mov
lods
arpl
jp,pn
adc
mov
shll
aas
orb
inc
std
push
add
adc
add
xchg
loopne
pop
mov
popf
pushf
lret
xor
lcall
push
dec
add
or
pop
sbb
cwtl
repnz
mov
movsb
sub
enter
push
add
adc
or
xor
ret
add
cmc
leave
push
addb
mov
adc
mov
cmpsb
cwtl
or
jne
shll
rol
add
adc
push
cld
leave
pop
roll
jge
inc
daa
cmpsb
negl
fcomps
xchg
adc
out
sbb
out
cmp
shrl
push
mov
adc
aam
add
push
lahf
stos
add
pushf
jb
push
pop
add
cmp
xchg
mov
mov
add
cmp
mov
cmp
arpl
insb
loopne
mov
sbbb
out
dec
adc
inc
faddl
add
inc
mov
jge
xlat
add
bnd
data16
add
or
mov
adc
adc
scas
add
dec
in
movsl
pushl
in
mov
or
add
mov
in
in
xchg
iret
or
aad
dec
gs
mov
lods
dec
xchg
and
mov
jl
imul
movsl
or
jg
lods
cmpsb
cmp
sbb
jne
mov
xor
add
add
daa
out
js
les
cmp
jno
push
add
xor
clc
and
mull
add
mov
mov
jmp
pop
sbb
adc
and
loop
les
push
or
outsl
shlb
mov
sub
xor
pop
fsubrs
aam
xor
call
js
jb
push
fcomi
mov
push
add
or
and
add
test
cmp
mov
ret
pop
popf
inc
popf
int
and
adc
add
sub
icebp
xor
pop
imul
in
addb
xor
or
es
sub
fwait
add
push
sub
inc
xchg
add
fnsave
addb
in
adc
repz
loop
mov
test
pop
mov
pop
popa
das
push
pushl
stos
sbb
add
mov
cmp
cvtdq2ps
pop
ficomps
aaa
adc
arpl
shrb
inc
ja
dec
pusha
and
stos
pop
add
push
pop
push
dec
mov
add
cmpb
add
pop
stos
inc
add
popa
add
test
mov
movsb
and
sbb
pop
mov
push
pop
adc
push
sbb
dec
dec
pop
sbb
add
mov
leave
pop
and
add
xchg
mov
dec
lcall
enter
fwait
pop
ret
sti
gs
adc
dec
call
mov
sbb
add
xchg
in
sbb
push
shrb
jge
mov
movups
dec
push
sbb
ss
cmpsl
add
mov
push
xchg
add
fbld
push
lock
push
and
sub
nop
sub
sbb
add
adc
mov
sub
or
add
jbe
push
add
mov
adcl
mov
add
jns
mov
add
cld
pop
sub
xchg
xchg
mov
scas
add
stos
add
pop
outsl
movsb
aaa
psubsb
dec
jmp
pop
push
sbb
add
jmp
push
push
add
or
add
cld
pusha
cli
xchg
add
sbb
add
adc
shlb
jnp
dec
out
push
push
mov
leave
cmpsl
insb
add
popf
dec
testb
adc
rcll
mov
rcrb
add
dec
leave
test
out
jne
in
add
pusha
lea
push
and
iret
test
dec
or
add
xchg
addb
mov
add
adc
sbb
sub
pusha
xchg
inc
add
jo
mov
dec
add
dec
add
adc
adc
mov
adc
or
push
pop
jo
add
add
push
mov
push
cmp
jb
push
add
mov
shrb
mov
pop
lods
mov
das
inc
or
add
and
loopne
addb
mov
das
mov
shll
and
daa
add
sub
shr
add
loop
lret
and
sbb
arpl
pop
pop
jbe
mov
ret
loope
test
iret
loop
aam
int3
pop
andb
add
les
inc
push
sub
cwtl
adc
push
mov
and
lahf
into
mov
add
lds
cmp
out
mov
and
jbe
xor
mov
or
mov
pop
mov
sbb
or
inc
inc
add
lds
add
mov
sub
add
inc
ret
adc
adc
add
lea
push
adcb
xor
rorl
add
add
sbb
les
xchg
js
pop
xor
inc
push
pop
cmp
ret
addl
ds
addl
decb
ficomps
out
sbb
add
and
add
add
test
xchg
add
dec
dec
mov
add
jmp
push
add
and
and
repz
sbb
push
inc
dec
scas
lds
aam
fwait
xchg
cwtl
add
push
mov
sti
cmp
add
rcrb
imul
fistps
loop
inc
rcrb
cmpb
and
lret
add
cmp
add
loop
lea
and
cmp
or
xor
fs
scas
and
add
cmovle
or
xor
inc
mov
pusha
push
sti
in
dec
imul
push
shl
jge
add
or
push
mov
ret
mov
not
cmp
stc
add
jae
daa
addr16
punpckldq
lret
cltd
sarb
and
aam
andb
pop
in
enter
lock
fimuls
shr
mov
inc
sbb
or
sub
add
xchg
pop
addr16
add
pop
stos
mov
and
xor
or
pop
mov
inc
or
cs
mov
test
cli
add
mov
ret
int3
out
call
add
mov
pop
test
pop
mov
add
lcall
clc
push
mov
out
and
popa
roll
jecxz
into
jg
xchg
cmp
dec
out
xchg
shll
add
sbb
mov
lea
or
jb
add
and
inc
rolb
dec
add
add
jmp
sbb
push
mov
insl
add
dec
cmp
cmp
inc
or
outsl
push
add
mov
push
add
dec
clc
pop
movsb
add
adc
lcall
push
daa
repz
adc
arpl
push
add
int
mov
leave
test
xor
add
lret
push
stos
add
add
mov
popf
add
push
add
mov
repz
sub
pop
add
xchg
leave
or
sbb
ret
insb
adc
mov
sub
inc
push
mov
in
jg
loopne
sets
xor
inc
jmp
jne
push
decl
je
mov
jle
add
push
add
dec
and
adc
jmp
add
adc
sub
pop
pop
push
or
add
loop
movb
pop
sub
inc
or
mov
rcrb
jae
add
push
push
stos
mov
mov
push
lock
and
lock
int
push
inc
and
out
shlb
add
cmpb
or
push
orb
pop
movsb
push
sbb
gs
rorb
aas
add
dec
jne
imull
inc
push
inc
call
pop
nop
pop
test
or
pop
mov
sub
dec
mov
mov
push
mov
popa
sub
inc
hlt
std
add
push
dec
cltd
sbb
cmp
inc
or
add
cmpsl
loop
and
fs
or
rorb
lock
pop
inc
add
call
shr
lea
pop
outsb
mov
addps
mov
lods
inc
add
or
cwtl
pusha
jmp
xor
and
int3
cs
ss
xchg
sub
test
or
hlt
out
fsubl
xor
jle
sub
ror
xchg
aam
or
fdivs
in
insl
movsb
xchg
add
push
xor
or
adcb
add
mov
pushf
and
xchg
ds
sbb
or
cli
je
cmp
jb
add
sub
pop
pop
mov
push
add
adc
loop
data16
inc
mov
dec
add
xor
adcl
xlat
push
push
xchg
pusha
orb
inc
xchg
jo
enter
shr
or
inc
or
xchg
mov
add
negb
adc
add
xorl
cmc
sbb
add
push
fcmovnbe
mov
cld
flds
push
adc
fdiv
add
jae
mov
ret
loop
mov
jmp
sbb
enter
xchg
pop
mov
pop
push
in
add
bound
enter
inc
lea
xchg
jae
out
push
inc
add
or
loop
and
cwtl
jnp
xchg
or
push
adc
in
pop
into
cld
rorb
and
sub
add
std
xor
loopne
fadds
adc
movsl
lcall
add
mov
push
jbe
xor
pop
add
arpl
sub
pop
fstpl
fwait
push
lahf
roll
ja
pop
ret
add
loop
push
adc
ja
add
lcall
cmp
pop
jl
dec
jo
jge
and
addb
scas
sub
add
and
clc
or
cmpb
pop
subb
cmp
push
fs
add
and
dec
pop
mov
sbb
rcrb
js
mov
shlb
xorb
xor
lds
lret
add
lret
sbbl
pop
xorb
negb
inc
test
mov
pusha
jno
mov
cmpsl
enter
and
add
inc
fs
or
cltd
test
push
mov
adc
loopne
push
or
enter
js
pop
push
fnstenv
add
adc
stc
pop
xor
pop
pusha
mov
lock
cmpb
push
mov
adc
and
arpl
fs
inc
lods
or
mov
and
xor
xor
ret
cmpsl
add
mov
mov
loopne
and
sub
add
xor
dec
push
sbb
dec
add
adc
pop
nop
add
mov
orb
and
inc
mov
mov
add
sbb
sbb
add
mov
insb
xlat
and
cmp
add
imul
aam
cmp
cld
in
jmp
add
sub
sarb
mov
dec
add
inc
aam
rcrb
adc
mov
cld
dec
lea
hlt
xlat
and
jmp
xchg
jns
stc
and
xchg
sahf
pop
lea
add
fmul
xor
xor
jle
paddusb
add
cmp
adc
rcr
or
test
xor
xor
enter
inc
and
test
movsb
andb
add
mov
pop
jns
add
or
mov
or
int
aam
mov
shlb
loope
xchg
push
inc
sbb
or
int3
pop
or
or
xor
sbb
mov
dec
add
aam
and
pop
lods
add
rorb
sbb
fimull
inc
adc
mov
sbb
or
mov
rclb
outsb
je
insl
gs
jb
loop
out
addl
clc
ljmp
inc
sbb
inc
mov
jg
out
push
and
in
or
pop
mov
or
xor
lods
adc
cwtl
jo
pop
add
or
ljmp
aad
clc
xor
pop
jo
sbb
or
pop
add
add
lock
outsb
clc
pop
sbb
xor
adc
adc
xor
pop
mov
outsl
pusha
outsl
push
arpl
mov
std
test
mov
mov
sar
fdivr
loopne
call
mov
adc
sbb
add
mov
and
push
pop
or
mov
andb
inc
rcrb
in
jno
push
xor
inc
imul
mov
xor
adc
cld
jno
data16
mov
outsb
jns
add
mov
inc
dec
out
stc
mov
cmpb
hlt
push
add
inc
dec
cmp
add
arpl
push
insb
insl
aam
jno
jae
je
js
jp
add
popa
imul
adc
clc
push
sbb
xchg
insb
and
lcall
jmp
nop
test
xor
cwtl
mov
sub
xchg
das
add
dec
jmp
xor
dec
adc
fsubl
ret
lock
or
add
call
pop
or
int3
jo
into
shrb
push
sub
je
ljmp
mov
aaa
add
dec
loopne
hlt
pop
cmp
jmp
xchg
add
and
js
add
push
pop
fwait
jo
push
dec
push
pop
pop
sbb
dec
rolb
jl
add
aas
add
stc
movsb
aas
and
sbbb
sub
or
mov
pusha
shrl
ret
call
aam
and
xchg
add
rol
incl
add
jns
add
cmpb
es
popl
sbb
add
sbb
push
add
aam
inc
aad
inc
add
mov
incl
pop
nop
dec
int
add
subb
add
ljmp
mov
inc
push
stos
jnp
add
dec
sbb
pushf
sbb
xor
pusha
repnz
jo
rcl
pop
add
lds
add
out
or
add
or
push
es
inc
shlb
jl
xor
xor
jns
add
and
lcall
popf
in
or
clc
sahf
add
lahf
xor
mov
cmpsb
mov
sbb
push
cmpsl
adc
scas
inc
pop
std
add
add
jae
sub
call
sbb
xor
pop
nop
loop
jp
test
mov
or
xor
pop
cmp
add
add
repnz
mov
bound
enter
je
pop
roll
add
add
mov
in
or
mov
adcb
and
jle
pop
pushf
rolb
inc
mov
lods
rcrb
pop
push
hlt
add
fs
lock
ds
mov
inc
adc
sbb
pusha
mov
sahf
mov
daa
cltd
add
inc
pushf
movsb
inc
loopne
dec
mov
add
js
cmp
cmp
int3
fs
pusha
pop
pop
xor
or
pshufw
inc
sbb
dec
pop
shl
in
movsl
jo
cmp
and
push
iret
cld
mov
dec
enter
addr16
ret
jns
out
rcll
cwtl
xchg
repz
jo
xchg
pusha
xor
adc
cmp
fs
int3
sub
sub
xchg
addr16
jl
and
sahf
cwtl
bound
stos
shlb
jl
lock
loope
xlat
rcrb
jmp
mov
or
sub
jns
fsub
nop
sahf
fmul
cmp
adc
jl
add
add
push
hlt
pop
or
dec
dec
in
xor
bound
xor
xchg
mov
add
cltd
adc
repnz
lcall
pop
add
mov
lods
add
rclb
mov
cmp
add
pusha
push
add
add
xchg
add
sbb
add
adc
out
cli
aam
icebp
cs
add
ds
mov
adc
and
dec
clc
fiaddl
pushf
xorb
mov
and
jl
mov
mov
cli
test
cli
mov
ljmp
push
xor
adc
pushf
xchg
lods
and
stc
mov
int
in
xchg
pop
add
dec
xor
outsb
orb
mov
out
into
loopne
inc
call
push
xor
cmp
jo
and
pop
mov
lcall
mov
in
cld
push
and
xchg
je
movsb
mov
jo
testb
stos
xor
int3
add
dec
call
hlt
or
je
mov
dec
sbbb
mov
dec
mov
add
xchg
adc
cltd
xor
aas
or
cmp
inc
jb
outsb
mov
sub
adc
add
sbb
sub
mov
add
jbe
xchg
negl
mov
fwait
adc
and
push
inc
inc
push
adc
xchg
adc
in
and
shl
or
movsl
pop
and
and
mov
out
clc
adc
stc
outsl
adcl
jnp
push
jb
cwtl
add
dec
mov
adc
add
push
mov
jl
add
xchg
bound
je
add
or
sbb
es
add
inc
xor
hlt
add
push
and
dec
insb
xchg
jbe
push
add
gs
shl
add
cs
mov
lahf
inc
cmp
add
outsb
jae
add
or
fs
push
add
fbstp
xchg
imul
mov
out
mov
int3
xor
cmp
pop
add
sbb
dec
fldt
and
jp
cmp
jne
jb
jne
inc
in
jecxz
push
push
sub
pusha
outsl
arpl
push
hlt
sbb
in
sbb
push
sub
push
gs
jns
adc
fs
mov
push
pop
insb
add
inc
jns
add
or
cs
sub
je
fisubrl
inc
cmpsb
sbb
jns
ret
sahf
jmp
cmp
bound
rcll
js
and
cltd
pop
sbb
rclb
dec
add
outsl
inc
and
push
add
ds
add
arpl
std
pop
xchg
dec
popa
outsb
jl
inc
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
add
mov
aas
push
push
cmp
and
push
je
or
or
dec
adc
inc
pop
dec
dec
ja
add
movb
and
stos
sbb
push
faddl
xor
or
cmp
add
jp
dec
inc
jns
repz
insl
push
add
je
cmpsl
loop
jo
inc
add
fldpi
or
dec
add
adc
jb
add
and
inc
cli
lcall
test
dec
dec
incl
popa
pop
inc
inc
outsl
js
dec
cmc
xor
dec
fildl
xchg
jo
loopne
or
add
and
in
sub
loopne
shlb
push
mov
insl
and
mov
add
fidivl
xchg
jp
pop
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
adc
jbe
xor
daa
push
neg
add
loop
push
int
and
cmovge
dec
push
inc
lea
jl
xor
movsb
mov
stos
adc
inc
outsl
sbb
push
adc
add
xorb
icebp
jne
add
xchg
xor
mov
dec
clc
int
or
scas
add
cmp
sbb
add
imul
in
loopne
enter
push
popa
pop
add
inc
xchg
xorb
outsl
fnstcw
xor
fsubrs
or
pop
add
jno
lret
jns
push
cwtl
inc
pop
jne
add
cmp
mov
inc
aam
outsl
sub
repnz
cwtl
mov
std
rcrl
dec
cmp
sub
cs
push
mov
push
ja
add
shl
cmpsb
sub
xor
lock
test
jns
inc
sbb
jae
add
dec
xor
add
cmp
add
mov
jbe
xchg
pop
add
lcall
call
jb
sarb
pop
testb
inc
stos
xchg
inc
daa
jae
mov
test
popa
arpl
es
inc
pop
mov
stos
cmovns
test
mov
sub
cli
aad
fsubrs
mov
sbb
push
jo
push
cmpsb
add
outsb
and
imul
add
cmovg
subb
outsl
adc
add
push
or
arpl
dec
aam
shlb
pop
add
adc
inc
add
mov
and
add
fs
jge
add
stos
pop
enter
outsl
pushf
shrb
or
sub
ret
push
sahf
inc
mov
dec
push
mov
cli
and
jo
rcll
dec
lea
daa
sub
push
add
xchg
fwait
push
pop
pop
or
dec
push
adc
fmuls
jle
fisttpl
andb
arpl
add
lcall
inc
or
arpl
fmul
sbb
mov
addr16
pusha
sub
movsb
and
mov
mov
pop
das
push
pop
xor
hlt
dec
sub
and
cmp
js
dec
jp
inc
jne
addr16
dec
sahf
push
mov
scas
sbb
sbb
cmp
add
push
js
inc
movsb
pop
insb
nop
inc
clc
xchg
hlt
sub
sbb
sub
aaa
and
mov
add
out
out
lods
jecxz
add
mov
loopne
fs
sbb
fsubl
jo
sbb
fldcw
fimuls
fcoml
or
adc
push
test
add
push
add
ljmp
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
call
push
and
es
add
mov
pop
pcmpgtb
jnp
sbb
add
sbb
xor
popf
cmp
add
jle
mov
add
xchg
xor
daa
adc
and
cmpb
xchg
out
fwait
je
jbe
js
jp
jl
add
loope
xor
leave
mov
add
xor
das
jbe
js
dec
mov
aas
mov
push
fwait
aaa
mov
xlat
mov
inc
cmp
mov
rolb
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
dec
call
negl
inc
mov
rolb
xor
adc
or
xchg
pop
dec
add
bsr
jecxz
add
xor
lret
xor
in
adc
xchg
add
js
jp
jl
mov
popf
sub
jo
and
pop
and
inc
mov
mov
sahf
aas
xlat
popf
loopne
out
stos
inc
daa
pop
cmp
xorb
cmpsl
xchg
es
inc
xchg
lds
iret
dec
icebp
cmp
pop
ss
leave
push
shrl
fldcw
dec
icebp
adc
pop
fildll
repz
add
add
xor
cmp
push
dec
aaa
subl
xor
lock
les
sbb
cmp
popf
push
test
sahf
stos
ds
cmp
pop
cmp
cmp
aas
cltd
sub
sbb
push
cmp
add
mov
movsl
sbb
or
cmp
outsb
add
shrb
xor
popf
xchg
sbb
xor
mov
cmp
scas
aas
mov
shlb
loopne
cmc
in
or
pop
inc
sub
xor
repnz
dec
je
jbe
js
jp
jl
add
adc
in
call
hlt
sar
out
incb
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
call
lcall
cmp
sub
pop
subb
jb
je
jbe
js
jp
dec
les
aas
jecxz
lock
add
or
add
sub
cmp
scas
cmp
push
cmp
cmp
jb
jp
or
loop
lcall
iret
mov
cmp
cmp
ljmp
aas
or
mov
inc
sub
xor
cmp
repz
cmp
push
cmp
cmp
jb
mov
ja
lret
out
out
out
out
loopne
sti
andl
add
or
xor
xchg
test
sub
dec
out
in
pop
lret
aas
xor
add
cld
js
jp
jl
jle
mov
cwtl
dec
mov
mov
rcrb
call
in
lret
add
je
jbe
js
and
lret
iret
inc
add
dec
cltd
or
and
jo
jl
sbbb
lahf
mov
adc
mov
pop
or
and
and
sub
pusha
xlat
cmp
lahf
inc
pop
int
push
cmp
cmp
jo
sahf
or
mov
cwtl
js
add
shl
in
call
call
or
pop
xor
and
decb
subb
nopl
mov
mov
clc
enter
sar
fsubrp
lock
add
jbe
add
jp
jl
jle
xor
cmp
dec
dec
insb
dec
aas
js
jl
xorb
jecxz
repz
repz
enter
aam
fdiv
fsubl
ret
and
lahf
in
enter
adc
and
sub
xor
popl
out
cmp
cmp
add
andb
je
jbe
js
jp
jl
push
mov
push
in
test
cld
subb
push
cwtl
fs
push
mov
iret
movsb
iret
test
lods
iret
mov
jmp
loopne
shr
adc
daa
or
xchg
inc
push
ret
pop
punpcklbw
je
xchg
fnstenv
push
jl
sub
cmp
or
adc
repz
and
inc
dec
jp
fsubl
jle
push
movsl
ret
jae
shrb
mov
mov
pusha
repnz
add
add
add
jbe
dec
adc
mov
pop
mov
pop
mov
inc
pusha
xchg
insb
jo
je
js
mov
lods
out
out
loopne
fs
cmp
enter
sarb
add
or
adc
sahf
sbb
and
xchg
xor
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
pusha
mov
leave
push
mov
stc
fmuls
mov
iret
in
call
cmp
dec
sub
sub
iret
xor
xor
imul
pop
lcall
xor
dec
divl
in
rorl
pushf
in
mov
js
add
repnz
mov
fs
lock
hlt
popf
clc
add
cmp
jg
inc
roll
dec
xor
push
lock
add
les
imul
xor
add
lret
call
add
mov
sarb
mov
adc
push
mov
loopne
and
add
add
xor
lahf
roll
out
push
xor
pop
cmp
aaa
mov
inc
movb
out
hlt
sar
cld
jb
je
jbe
sti
loope
and
repnz
idiv
cli
stc
clc
pop
cmp
cmp
sbb
pusha
cmp
push
add
cmp
into
rcr
ds
bound
mov
mov
nop
out
call
and
testb
pop
xor
leave
out
fcomps
add
push
cmp
cmp
aas
test
iret
mov
mov
stc
int
rorl
add
cmp
pop
addr16
or
clc
add
sbb
cli
xchg
inc
je
dec
mov
loopne
add
dec
invd
jae
add
dec
testb
push
add
push
cmp
jns
jb,pt
adc
or
lea
unpckhps
rolb
add
daa
add
push
add
cld
and
imul
push
xchg
hlt
mov
mov
mov
dec
add
shll
ljmp
cwtl
cmp
cmp
fstpt
movb
stos
xchg
add
in
call
lock
cmp
jne
add
outsl
cmp
jle
in
jle
daa
add
inc
mov
push
pop
add
add
cmp
add
icebp
pusha
push
xor
pop
in
xor
hlt
sahf
cmp
jmp
rolb
rolb
and
fcos
sub
sbb
add
dec
loopne
and
jmp
add
inc
sbb
pop
xor
rolb
imul
jecxz
repz
jno
or
xor
in
or
dec
jb
push
xchg
dec
leave
cltd
add
stos
fnstcw
aaa
cmp
cmpsb
mov
in
enter
push
xor
mov
outsl
out
cmp
cli
dec
andnps
pusha
shlb
pop
adc
jbe
addl
mov
xor
repz
lock
add
mov
mov
sub
aas
out
pushl
pop
add
mov
iret
ljmp
addb
adc
dec
and
pusha
sub
ds
fs
add
in
repz
adc
leave
xor
inc
cmp
jmp
sub
ror
pusha
or
cmp
sub
inc
lock
lcall
push
bound
jne
add
orl
enter
jmp
fdivrl
in
cld
frstor
xor
mov
pop
cld
lahf
and
xchg
sub
jb
je
jbe
pop
inc
ds
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
sub
je
insb
sub
and
stos
inc
xchg
jmp
cmp
aad
lods
pop
clc
xchg
pop
notb
in
call
rcl
dec
inc
add
or
sbb
hlt
sbb
mov
mov
js
add
mov
out
test
inc
jmp
aas
jb
out
sarl
int3
lahf
loopne
in
in
nop
movsb
hlt
pop
cld
adc
adc
push
add
sub
xor
mov
inc
in
add
push
xchg
jl
into
rcrb
add
pop
cmp
cmp
xchg
mov
mov
hlt
adc
xchg
fldl
pusha
add
cmp
jb
sbb
add
arpl
test
cltd
fdivs
scas
fisubrs
xlat
mov
in
cld
mul
add
cmp
or
push
mov
test
mov
pushf
pop
cmp
cmp
jnp
test
mov
rcl
into
ret
int3
fpatan
push
and
das
mov
pop
inc
add
push
jl
in
push
es
dec
pop
sbb
push
sub
test
stos
rcl
add
sbb
xor
test
push
lods
push
int3
lcall
mov
push
lcall
add
lahf
add
jne
test
pop
ret
js
dec
add
push
cmp
fcomp
add
adc
sub
sbb
xor
sbb
movl
clc
test
pushf
shl
add
out
push
ss
insb
xchg
cmp
sbbl
mov
fwait
repnz
mov
daa
sbb
loope
cmp
sbb
inc
je
insl
lock
push
pop
js
dec
cmp
mov
add
scas
xchg
jne
lcall
mov
je
jbe
pop
xchg
jo
add
and
inc
or
cmp
insb
loopne
addr16
jbe
pop
mov
addl
mov
add
mov
cmpsl
inc
aad
movb
jne
outsb
jmp
inc
cmpb
push
mov
icebp
mov
test
mov
out
test
loopne
fucomp
add
aaa
and
decb
dec
sub
add
push
xchg
xor
lock
stc
jb
add
fcoms
push
or
cmp
or
jnp
and
mov
sub
xor
orb
gs
in
mov
fadds
in
into
adc
pushf
cmp
out
or
dec
aas
addr16
scas
xlat
inc
loop
lock
mov
push
xor
and
dec
jo
or
or
push
push
add
js
pop
mov
jge
rdmsr
cmp
daa
outsl
punpcklbw
bnd
add
xor
xchg
daa
rcrb
dec
add
jp
rcrb
xor
xor
movb
outsb
rorb
movsb
jl
dec
mov
je
stos
iret
mov
rclb
xchg
push
js
mov
adc
gs
jp
xchg
push
subb
je
jl
jnp
movsb
add
pop
mov
pusha
xor
mov
sbb
rcrb
adc
in
add
or
mov
mov
jle
mov
rorb
xor
add
adc
adc
ret
mov
mov
add
mov
ljmp
jecxz
jle
and
bnd
lock
inc
and
rcll
dec
xchg
mov
dec
or
das
xadd
orl
sbb
pop
inc
push
cmp
and
jle
out
mov
push
xchg
xchg
sub
add
lahf
cmp
dec
mov
cmp
inc
int
add
outsb
loop
pop
addb
xchg
addb
cmp
mov
fsubl
add
into
loope
add
fxch
hlt
jmp
jmp
loop
imul
xchg
shlb
pop
out
fimuls
jo
pop
je
dec
push
ret
add
roll
pop
cld
and
daa
inc
gs
rol
clc
add
xchg
rcrb
add
stos
push
hlt
push
jmp
clc
xchg
es
dec
add
jb
adc
sub
clc
dec
dec
popa
jl
cmp
test
xchg
cmp
add
mov
jo
add
clc
dec
push
jo
cwtl
mov
stos
xchg
fisubs
inc
adc
fsubr
add
push
mov
add
add
or
push
add
nop
sub
sub
mov
add
sbb
xor
popf
fiadds
add
jno
mov
jns
add
sbb
loop
loopne
add
in
sub
outsb
dec
jb
lock
add
xchg
mov
mov
sbbb
add
pop
in
call
test
or
out
mov
pop
popf
mov
mov
fcomps
popl
cmp
inc
push
push
cmp
inc
orb
add
dec
aas
push
dec
test
nop
xchg
lds
or
mov
test
push
cmp
add
xor
sub
pushf
push
out
add
cwtl
int
adc
push
cld
mov
mov
lea
mov
jne
call
pop
add
push
push
cmp
cli
and
sub
das
add
inc
mov
add
cmp
ret
or
push
arpl
pop
push
xchg
js
or
dec
test
repnz
repnz
xor
call
add
or
xor
rolb
push
jbe
dec
inc
adcl
jecxz
repz
xchg
into
add
faddl
or
sub
adc
sub
adc
push
push
dec
sbb
add
sub
dec
repnz
js
negb
je
push
adc
pusha
je
sbb
mov
pop
in
mov
and
xor
add
dec
xor
push
cmp
jp
xchg
jle
xor
add
mov
clc
hlt
xchg
add
test
inc
xchg
or
add
lcall
pop
shrb
mov
mov
data16
fcomps
jle
sub
xchg
jg
sbb
push
xor
pop
and
popa
icebp
mov
pop
popf
mov
add
pusha
jo
mov
imul
ficoms
mov
cmp
in
test
daa
xorb
cmp
cmpsl
repnz
int3
lods
cld
pop
and
ja
inc
sahf
mov
add
mov
xchg
sub
pushf
fadds
movsl
add
or
add
stos
ret
sbb
xor
push
lcall
adc
jb
pop
in
pop
or
lret
fs
xor
clc
out
sbb
ror
aaa
push
shrb
inc
stc
mov
es
add
sub
pop
push
nop
mov
pop
cwtl
jo
jle
and
mov
shr
nop
add
pop
cmp
test
cmpl
mov
dec
fmull
adc
push
jo
jbe
push
add
mov
add
add
loopne
sub
cmp
add
inc
test
and
push
xchg
xchg
sbb
push
xor
mov
je
daa
fldenv
nop
jmp
and
add
and
jp
js
pop
pop
sbb
iret
loopne
out
mov
mov
aas
shrb
test
cmp
lahf
pusha
add
xor
mov
dec
dec
out
add
cmp
rcl
rolb
xor
in
and
stos
add
ret
xor
jo
pop
mov
fildl
cld
adc
ss
cmp
popa
add
add
or
inc
dec
shlb
add
fadd
sahf
mov
jp
ret
mov
lock
or
push
popf
sub
pop
nop
mov
xchg
adc
rcrb
or
addl
or
setae
adc
add
lods
dec
imulb
das
mov
jbe
cld
mull
pop
inc
popa
addr16
jns
mov
xchg
out
out
out
out
loopne
lcall
xchg
daa
add
push
push
push
fwait
cs
in
push
cmpsb
cwtl
pop
scas
sarb
pop
ret
subl
cmpl
js
jb
je
cmp
push
aaa
andb
add
mov
mov
clc
adc
cmp
incb
sar
aas
clts
sbb
iret
rcrl
fstpl
loope
in
lahf
add
cmp
mov
push
nop
ret
add
rclb
push
cwtl
or
into
jo
pusha
insb
sbb
iret
out
leave
cli
das
jp
popf
dec
sbb
andl
loop
add
inc
and
je
add
popf
cli
add
bnd
adc
addl
mov
cmp
cmpsl
add
enter
dec
cmpsb
pusha
inc
incb
inc
mov
xchg
shrb
into
in
out
lahf
pop
inc
adc
sti
lock
jp
add
or
psubusw
rclb
cmp
mov
out
mov
stc
pushf
add
xor
and
pop
sbb
jne
cmp
pop
mov
sub
xchg
jne
ret
push
popa
pusha
jbe
ret
in
add
xlat
xchg
cmpl
loope
pop
pushf
ret
notl
add
or
aad
fdivrs
cld
cwtl
sbb
jle
dec
push
hlt
mov
mov
ret
aas
shl
adc
fimuls
adc
jp
add
push
mov
mov
ss
pop
adc
mov
xor
cwtl
add
adc
js
jmp
mov
pusha
xor
cld
xorb
push
add
add
xchg
pop
popf
lea
add
cmp
movsbl
inc
mov
insl
add
pop
add
adc
scas
xor
cld
mov
popf
clc
push
push
dec
and
pop
bound
mov
or
mov
stc
test
cmp
lods
jbe
cmpsb
sub
js
add
cld
mov
xor
dec
add
or
fsubp
push
pusha
pop
xchg
or
xchg
decb
mov
mov
mov
faddl
es
mov
add
jo
ss
aas
dec
es
xchg
mov
fimull
mov
adc
and
je
pusha
ss
push
dec
jbe
js
add
mov
inc
add
popa
sub
ds
add
xchg
cmpsl
jmp
push
xchg
pop
dec
xor
add
xchg
mov
leave
and
pop
shll
mov
addl
in
xchg
call
repz
add
lds
mov
inc
add
ror
push
mov
lock
test
add
dec
xchg
add
dec
mov
push
popa
jo
mov
pop
cli
inc
aas
pop
and
sub
xchg
loope
sub
lcall
pop
aas
shlb
add
les
ret
call
xor
in
cmp
lds
and
adc
ret
daa
bound
popa
test
icebp
cmpsl
lock
ss
dec
pop
or
fadds
inc
movsl
les
ret
aaa
sbb
dec
xor
jp
pop
pusha
mov
dec
add
dec
lret
push
inc
out
pop
push
imul
into
aas
out
sti
daa
frstor
std
sbb
inc
mov
xchg
sbb
data16
jbe
pop
dec
mov
mov
cmp
mov
hlt
inc
add
shl
das
movsbl
push
inc
add
cld
loopne
pop
jb,pt
dec
jle
add
add
sbb
lahf
aas
dec
push
leave
test
pop
test
sub
add
jl
out
add
cwtl
inc
pop
cld
daa
mov
sbbl
sub
and
add
inc
adcb
pop
pop
add
ret
aas
push
lret
popf
andb
xor
movsb
aam
sahf
sti
adc
xchg
xchg
mov
ret
xor
ss
pop
rsm
repz
or
incl
pusha
push
push
add
jb
pop
and
in
cld
inc
or
out
pop
or
add
mov
aas
cmpsl
daa
or
and
std
clc
je
and
leave
add
fiaddl
jle
pop
jno
aas
andl
loopne
and
dec
add
lcall
push
cmp
mov
lods
in
add
icebp
outsl
dec
jo
jnp
add
dec
subl
fs
outsb
and
add
mov
in
add
or
fadds
push
add
lea
inc
daa
push
xchg
add
xor
add
mov
jl
add
xor
popf
outsb
sbb
push
rcrb
cmp
or
dec
lea
aam
jae
pop
add
mov
leave
xchg
add
mov
idivb
adc
dec
xor
inc
lcall
add
and
aad
adc
push
daa
add
inc
inc
gs
mov
loope
jecxz
out
insb
outsb
add
adc
and
jb
cmp
dec
inc
dec
lock
cmp
popf
add
sbb
bound
subps
add
add
mov
or
cltd
adcb
dec
and
rcrb
add
xor
clc
xorb
mov
call
jle
adc
dec
mov
wbinvd
incl
cmp
movsb
js
pop
cmp
cmp
jo
dec
add
push
mov
cmp
lods
xchg
pop
sub
loope
cmp
je
lcall
xor
imul
push
add
mov
lds
push
addb
in
xchg
xchg
repz
fdivl
sbb
push
enter
xchg
xchg
add
clc
xlat
xor
jl
add
aaa
add
or
lock
add
pop
call
imul
and
pop
sbb
in
sub
sub
xor
add
inc
xchg
inc
cmp
repz
je
and
clc
roll
xchg
mulb
mov
and
mov
pop
paddq
addb
mov
pop
test
mov
xor
outsl
add
das
jp
outsb
push
movsl
rcrb
add
mov
fcoml
cmp
sbb
xor
add
push
xor
ret
jmp
jp
push
int
pop
xlat
mov
fs
inc
sbb
add
sub
push
add
cmpsl
or
sbb
clc
cmpsb
pop
mov
repnz
fcmove
push
mov
mov
mov
push
pusha
orl
int3
sub
mov
cwtl
call
add
fadds
sub
dec
xchg
and
and
push
jb
subb
add
sbbb
dec
add
ret
aam
mov
jo
andb
lahf
loop
loope
add
nop
out
hlt
sbb
dec
cmpsb
and
sbb
push
xchg
aas
fucom
inc
in
addb
movsl
sub
out
push
adc
daa
push
popa
xorb
pop
add
outsb
loope
jle
pop
int
ret
sbb
dec
pop
push
or
clc
addr16
xchg
nop
test
inc
sbb
push
leave
gs
mov
xor
and
jns
cmp
cld
fnsave
mov
pop
add
pop
notl
fs
lret
add
lock
cs
and
cmp
sbbl
pushf
sub
and
icebp
cmp
rolb
enter
cmp
push
cmp
pushf
dec
mov
in
stc
mov
cmp
out
shll
js
inc
adc
popa
add
fsubrs
aas
jbe
add
dec
cmc
jl
adc
xchg
push
lock
and
cmp
subb
add
cmp
in
or
icebp
stc
add
jnp
add
mov
iret
and
cmpsb
add
pusha
clc
scas
aas
fdivl
add
jle
mov
xchg
add
lcall
aad
iret
hlt
add
aas
dec
pop
add
rclb
movsb
das
testl
pop
add
ds
adc
ret
js
mov
pop
roll
cmc
lcall
xor
add
testb
cmp
mov
in
pop
outsl
or
pop
fwait
add
sahf
mov
add
test
sti
xchg
loop
pop
sbb
cli
pusha
fistpll
mov
push
cmpsb
js
iret
test
popf
mov
jle
repnz
adc
loopne
inc
out
inc
add
pop
fs
sub
sbb
push
rorl
pop
dec
mov
cmp
push
add
mov
mov
call
movsb
and
add
and
xor
fstps
dec
mov
daa
xor
push
inc
adc
cmp
push
sbb
xor
cmpsb
mov
nop
shr
cmp
push
add
sbb
cld
popa
xor
scas
cmpsb
push
mov
or
inc
inc
loopne
sub
hlt
and
cmp
xchg
and
lock
dec
add
fsub
std
mov
pushf
push
pop
fstpl
jmp
clc
addr16
add
mov
lahf
loopne
in
and
popa
adc
leave
pop
rcrl
and
and
pop
daa
clc
sub
das
and
adc
inc
mov
xor
xchg
add
adc
mov
ljmp
enter
cld
add
dec
xor
loop
sbb
test
aas
and
push
pop
jle
pop
inc
arpl
add
stc
ja
hlt
push
jns
jl
addb
jmp
adc
cmp
pop
addb
or
movsb
push
push
add
aam
fstps
mov
nop
rolb
add
rclb
loopne
les
fprem
cmp
add
pop
stc
cld
dec
std
sbbb
add
mov
imul
cmp
cmp
cmp
daa
pop
add
in
lock
das
pop
std
sub
roll
and
adc
lahf
cltd
ret
pop
mov
add
repnz
rcrl
mov
test
ret
xor
adc
sbb
mov
cli
pop
ljmp
xchg
daa
lcall
sarb
in
push
or
clc
push
dec
jo
add
jecxz
inc
cmp
dec
bound
fmuls
add
out
rorb
jb
data16
in
loopne
insb
sbb
rcrl
add
fiaddl
mov
xchg
les
jno
mov
sahf
dec
pop
add
mov
push
rclb
mov
cmp
inc
das
xchg
inc
int3
sbb
push
icebp
xchg
mov
push
add
cmc
fwait
std
lock
and
cmp
outsb
mov
jbe
enter
pusha
pop
rorb
add
aaa
leave
pop
and
push
aad
xchg
mov
pop
inc
fcoml
dec
cld
sub
mov
xor
cmp
push
mov
sarb
or
testl
cmp
inc
mov
mov
lcall
leave
sub
inc
push
push
dec
or
push
dec
sbb
stc
sub
js
aas
ss
call
cmp
clc
les
jg
adcl
mov
popl
mov
js
jp
jl
dec
pushf
jg
add
lods
call
mov
add
ret
nop
xchg
and
testb
sub
mov
cmp
das
cmp
enter
cld
adc
enter
push
cmp
cmc
and
cmp
or
pop
sbb
and
dec
and
fdivrp
sbb
cmpsl
inc
pop
test
aas
lods
xor
inc
push
dec
daa
dec
add
dec
movsl
addb
sbb
out
roll
cld
aad
add
add
mov
addb
pushf
and
pop
ss
sub
scas
push
cmc
add
loopne
adc
stos
loope
shrb
leave
push
jo
push
in
nop
ljmp
add
test
ss
add
cmpl
sbb
pop
notb
add
or
mov
add
cmp
and
add
push
mov
add
dec
pop
or
cmp
jno
jo
leave
cmp
fadds
jbe
call
lock
fdivrs
add
cmp
mov
push
jp
add
or
or
clc
sub
int3
inc
and
sub
insb
add
xor
insb
out
lock
pushf
add
jo
out
cmp
aaa
xchg
and
add
daa
pop
inc
mov
jg
add
mov
add
test
add
orl
xchg
sub
adcb
adc
test
into
xchg
add
xor
mov
ds
xchg
add
add
cmpl
adcb
lcall
lds
adc
and
lock
or
cmp
pinsrw
dec
bound
pop
xorl
sahf
inc
lods
pusha
mov
mov
cld
or
popa
mov
jns
add
movsb
pop
out
ja
jnp
movlps
and
push
mov
add
sub
and
fcompl
sub
test
daa
fwait
out
ficompl
mov
ljmp
adc
cmp
rcll
repnz
ret
in
add
shll
and
jg
add
dec
inc
dec
iret
push
leave
add
fs
jl
sbb
es
mov
lret
xlat
lock
dec
sub
mov
imul
jg
mov
mov
adc
and
shld
mov
push
add
icebp
in
loopne
push
lahf
xchg
push
jmp
nop
shll
pop
adc
movsl
enter
jo
test
clc
mov
or
xor
sub
mov
out
add
pop
jecxz
insb
testl
movsb
xchg
scas
js
add
loopne
incb
insb
pop
or
sbb
add
int3
xchg
test
aad
inc
stc
shlb
out
outsb
dec
cvtpi2ps
leave
add
sub
xchg
daa
inc
add
test
aas
add
jp
into
sahf
lret
fmul
shll
add
clc
xchg
sub
and
call
cmp
test
lock
or
dec
inc
push
cmpsb
mov
hlt
divl
pop
sbb
inc
or
add
mov
rcrb
add
mov
xchg
adc
sahf
rcrl
xchg
sbb
mov
clc
mov
clc
mov
aam
fnstcw
ucomiss
push
push
cmp
pop
dec
into
sbb
jg
sahf
loop
inc
call
lock
popa
and
mov
pusha
jbe
cmp
add
daa
std
test
es
add
ja
mov
push
lcall
int
pop
xchg
call
adc
add
push
or
push
dec
es
add
push
add
aam
lret
mov
mov
cmp
xlat
cmp
add
clc
push
xor
pop
add
mov
dec
icebp
or
push
outsb
sbbb
lock
mov
mov
popf
inc
stos
fildl
stc
loop
push
cmp
mov
push
dec
sahf
mov
aas
sub
in
mov
shl
cld
pop
loope
or
push
add
xchg
add
arpl
imul
es
stc
mov
xchg
dec
je
dec
dec
or
xchg
das
movsb
sarl
ret
xor
jbe
dec
inc
arpl
nop
pop
leave
pop
push
loope
hlt
subb
pop
test
insb
in
repz
repnz
leave
sbb
and
dec
add
push
pop
push
lahf
jnp
xchg
mov
sarl
lcall
pop
je
jbe
pop
js
push
or
dec
rolb
sarb
push
jbe
in
mov
push
lock
mov
test
add
xchg
or
add
cmpsl
addl
mov
ret
out
pushf
shrb
sbb
lahf
pop
mov
dec
pop
clc
pop
imul
mov
jnp
daa
aam
movsb
clc
test
jle
lock
xor
add
sahf
or
int3
pop
adc
pop
add
inc
dec
dec
push
cmp
pop
cmpb
sbb
cmpb
cmp
xorb
mov
mov
add
mov
loop
mov
loopne
mov
dec
jns
add
int3
xchg
rcl
sub
pslld
fsubrs
in
in
push
repnz
and
mov
jb
mov
outsl
adc
test
or
sbb
cmp
jb
je
push
xor
add
jmp
clc
dec
in
add
clc
pop
test
push
and
insb
movups
mov
jnp
mov
nop
and
xchg
cmpsb
add
dec
lods
repnz
aam
repz
jne
call
in
mov
hlt
popf
add
push
push
xchg
dec
xchg
rorl
mov
inc
inc
sub
dec
stc
push
cli
fprem
pop
cmp
mov
mov
jbe
mov
movsb
orb
add
sbb
add
and
mov
leave
push
push
mov
pusha
stos
and
insb
add
mov
test
xchg
fs
or
adc
pop
popf
xor
xor
adc
dec
in
inc
jns
push
pop
pop
sbbb
inc
repnz
mov
and
add
adc
add
jp
mov
xchg
nop
shl
xchg
pop
add
inc
pop
push
pusha
enter
out
or
push
pop
filds
out
cmpb
add
rcrb
and
add
add
mov
scas
sub
jbe
add
cwtl
lods
add
mov
jle
add
ret
push
hlt
repnz
jne
pop
inc
pop
and
sub
dec
xor
xor
shlb
movsb
repnz
add
add
aas
jle
add
daa
or
mov
add
mov
loopne
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
nop
shl
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
in
add
adc
push
fmul
and
mov
sub
cmpsb
sub
lods
add
loopne
mov
ud2
add
je
inc
add
sbb
adc
cmp
roll
dec
add
xchg
push
cltd
mov
ljmp
add
push
add
call
mov
jne
sub
test
mov
add
push
mov
add
pop
ret
aam
imul
push
divb
fcmovnu
adcb
sbb
cmp
rorl
or
add
dec
jmp
add
push
cmpl
add
dec
filds
out
sbbb
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
lds
shll
cltd
lods
data16
shr
repnz
xor
add
stos
push
pop
add
mov
das
and
add
add
cli
sbb
nop
inc
jae
add
lea
loop
mov
popa
mov
repnz
pusha
add
inc
push
jge
ret
fadd
in
inc
xor
push
push
inc
lock
add
xor
push
int3
jnp
jp
sbb
pop
sbb
jle
sbb
sub
movsb
mov
adc
jne
stos
ficoml
stos
push
sahf
add
jg
mov
push
sub
mov
jne
and
pop
mov
sub
xor
dec
add
and
fmul
aaa
mov
arpl
and
pop
rorl
loop
inc
in
wbinvd
xchg
lock
loopne
je
repnz
add
adc
and
jmp
push
sbb
dec
mov
pop
xorl
scas
cld
push
in
mov
add
inc
sbb
pop
fsin
loopne
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
push
xchg
lea
adc
push
shll
push
sbb
and
sti
int3
daa
xor
ss
mov
jbe
rolb
xor
sbb
pusha
pop
loop
push
xchg
mov
push
pop
fists
xchg
cmpsl
mov
or
push
addr16
add
cmp
sub
add
jmp
outsl
sahf
add
and
add
dec
js
mov
repnz
imul
stc
jle
pop
in
inc
add
push
dec
jp
pusha
stc
pslld
std
out
cmp
sub
push
test
andl
adc
and
dec
js
ljmp
cwtl
pop
out
dec
xchg
add
loop
xor
push
jl
sbb
std
and
add
mov
add
mov
pop
rolb
xchg
sbb
icebp
shll
mov
and
cli
stos
and
rcrb
loopne
xchg
js
add
lock
test
sub
add
push
add
jl
loope
cmc
pusha
dec
add
imul
popl
add
xchg
cmc
ret
add
stc
dec
leave
cld
sar
es
in
sub
push
mov
add
adc
add
sub
movsl
aam
filds
mov
in
movsb
cmp
cmp
add
fimull
push
mov
jo
add
clc
imul
xchg
out
pop
into
adc
inc
stos
mov
add
mov
sahf
add
dec
pop
movb
jno,pn
xor
push
rcrb
pop
xchg
loopne
in
mov
arpl
rcrb
test
add
jecxz
stos
push
sub
xchg
xchg
pop
or
push
pop
or
psubsb
cmpsl
cmp
inc
dec
aas
sub
std
jle
in
addb
out
adc
fwait
out
je
dec
inc
fldenv
add
imul
aas
cmp
andb
sbb
pop
outsb
add
je
adc
stc
add
inc
shrl
adc
mov
jb
and
add
and
xor
cmp
mov
xchg
sub
call
jne
inc
jbe
mov
push
add
cmp
or
and
pusha
rolb
add
jge
aam
out
add
xor
inc
rolb
push
sub
pop
dec
lods
pop
jecxz
sahf
rorl
push
push
push
add
mov
pop
hlt
mov
pop
xor
dec
jno
clc
inc
test
add
mov
mov
sub
xor
js
in
mov
bound
loop
mov
add
adc
push
pusha
lcall
loope
pop
sarb
imul
das
xor
cmp
scas
add
in
inc
loopne
pop
adc
mov
cli
push
hlt
add
cmpsl
xchg
jb
cmc
sub
cmp
scas
sub
das
aad
adc
cltd
mov
mov
xorb
iret
push
cs
inc
fcmovb
xlat
add
or
mov
loope
xor
mov
sub
ret
push
mov
pusha
pop
or
cld
cli
fdivrs
cmc
xchg
adc
out
xchg
or
ret
pop
aas
scas
movntps
rorb
je
pop
push
sub
or
pop
mov
add
in
jb
ljmp
and
mov
sub
rep
pop
sbb
pop
incl
dec
shrl
or
pop
cmp
jae
push
add
inc
inc
lock
adc
xchg
shlb
push
je
adc
mov
sbb
out
jnp
nop
es
cmp
popa
adc
or
lret
imul
cmp
jne
rclb
je
jne
xor
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
addr16
lods
inc
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
pop
jne
fs
outsl
shrb
popa
insl
loop
cmp
mov
std
insl
icebp
arpl
or
mov
push
fs
mov
xlat
xchg
nop
push
movsb
add
rorb
in
inc
sbb
decl
std
pushl
dec
outsl
sarl
arpl
inc
arpl
dec
outsl
fildll
mov
data16
movsb
mov
add
xor
aas
and
add
mov
stc
iret
xor
fdivrl
lds
sub
out
rclb
fisubl
inc
sahf
sub
sbb
or
rorl
imull
lahf
push
xchg
sub
add
pop
inc
push
data16
xchg
lcall
incb
xor
inc
stc
test
sbb
adc
pop
lock
pop
and
push
pop
ljmp
das
mov
fcom
lahf
inc
sbb
dec
shrb
lods
push
mov
push
mov
aas
push
pop
mov
jbe
out
inc
add
out
jae
dec
fs
test
dec
mov
jle
jbe
arpl
mov
dec
adc
sub
iret
into
add
ds
sbb
bound
ret
fcom
sbb
ret
add
pushf
imul
xchg
jbe
mov
enter
std
mov
mov
mov
and
pushf
sub
and
shll
mov
lahf
push
arpl
xchg
clc
pop
jae
int
push
mov
inc
cmp
xor
sbb
arpl
and
insl
mov
popf
lret
jnp
xchg
xchg
ljmp
xor
jecxz
pushf
mov
sub
movsl
or
pop
test
mov
pop
mov
push
adc
inc
mov
es
xchg
loop
inc
int3
ljmp
neg
mov
xlat
dec
ljmp
loop
add
loope
jnp
jmp
pop
dec
push
mov
out
insl
add
outsl
ret
push
mov
jle
push
outsl
popa
scas
testl
xor
stc
xchg
sbb
jg
push
or
inc
xor
pushf
cmp
das
mov
mov
in
sub
rcrb
and
shrl
and
xlat
enter
or
test
clc
cmp
mov
jmp
sbb
jnp
fnstcw
xchg
pop
in
dec
insb
movsl
cmp
xchg
or
cmp
xorb
cmp
rcll
or
lock
das
and
mov
adc
pop
mov
cli
mov
xor
xchg
fs
lods
sub
push
inc
sub
jns
cmp
pop
adc
ficomps
mov
cld
pop
add
fadd
bound
push
cmc
adc
test
pop
xchg
add
and
fwait
test
movsb
pop
add
stos
fcoms
or
loopne
test
pop
ret
mov
out
dec
and
int
aam
shll
add
sti
lea
mov
mov
mov
dec
stos
jns
xor
es
dec
mov
add
adc
out
aas
adcb
jp
push
push
into
pop
outsl
push
sbb
push
push
jnp
xor
ret
inc
lds
or
popa
nop
fisubl
rclb
mov
push
or
mov
hlt
arpl
lods
add
mulb
dec
sahf
cs
repnz
sbb
mov
cmp
mov
jne
fcomps
ja
mov
push
lds
into
and
sbb
sbbl
push
sub
mov
pushf
push
jno
out
das
inc
stos
sarl
lcall
cmp
jmp
mov
xchg
sbb
sbb
fidivs
out
fldenv
bound
mov
inc
dec
sbb
fdivrp
daa
out
test
sbb
bound
popa
cld
mov
es
shrl
push
xor
mov
int3
sub
mov
inc
mov
loop
das
imul
add
punpcklwd
add
mov
out
repz
hlt
push
loop
movsl
sub
dec
push
ja
and
cmc
pop
js
rcll
test
push
mov
jo
pushl
ret
and
push
mov
loopne
sbb
orb
daa
jns
sub
fistps
xchg
mov
lds
cli
inc
mov
mov
cmp
add
cmp
sbb
fbld
push
mov
sub
out
lea
push
adc
stos
negl
aad
into
cmp
aam
int3
or
inc
dec
loop
push
std
mov
or
mov
or
into
mov
stc
and
mov
testb
in
mov
mov
xor
mov
in
jmp
fiadds
push
pop
add
test
cmpl
push
xor
add
push
adc
mov
ror
inc
pop
hlt
inc
je
outsl
add
rorb
stos
cmp
mov
fimull
cltd
int3
or
jb
and
mov
out
cmp
sub
push
ja
lcall
out
xchg
pop
imul
pop
mov
jecxz
adc
out
mov
hlt
pop
dec
push
shll
cli
or
pop
decb
les
dec
pop
xor
out
jmp
in
mov
fsub
movsb
out
mov
fs
jmp
xor
mov
hlt
ret
mov
pop
test
mov
xchg
sbb
jmp
fdivl
stos
and
mov
jae
mov
dec
mov
xchg
mov
testb
int3
sahf
shlb
jp
push
mov
mov
orb
fisttps
adc
pop
push
xor
pop
cmpsl
mov
rcr
jae
cmp
pop
iret
iret
ja
xor
jecxz
jle
mov
test
jge
outsb
out
pop
loop
or
push
jnp
inc
pop
iret
dec
jmp
mov
or
xchg
aas
loopne
xchg
cmpsl
in
js
lds
in
negl
mov
iret
fwait
ret
sub
dec
xchg
testb
mov
negb
dec
shlb
push
jne
out
aas
xor
push
lret
mov
hlt
mov
repnz
out
and
ficoml
sub
pop
and
out
enter
andb
int3
mov
inc
xor
bound
and
cmpsb
divl
in
pop
push
outsl
mov
dec
pop
jle
inc
xchg
jne
shll
cmpsb
cli
mov
ret
rcll
xlat
cltd
mov
lods
jg
notb
push
enter
jmp
adc
stos
jmp
testb
icebp
sub
adc
inc
aaa
insl
push
push
dec
cwtl
mov
int
orl
insb
pop
inc
push
adc
das
pop
xor
jmp
lods
ljmp
das
mov
push
push
leave
jns
sbb
mov
lcall
jno
out
or
jg
aas
outsb
or
cmp
imul
je
test
xor
dec
mov
xor
mov
adc
push
push
ret
lea
cmp
in
dec
ja
cltd
dec
leave
dec
and
aaa
je
xchg
in
movsb
inc
xchg
out
insb
sbb
icebp
jp
add
repz
cmpsl
or
fs
fbstp
mov
movsb
or
cmc
test
mov
xchg
mov
and
lods
cmpsl
orl
in
mov
in
lcall
dec
inc
mov
shr
adc
das
sbb
mov
mov
push
pop
insl
mov
daa
es
jl
in
mov
and
hlt
vxorps
xchg
jmp
add
adc
pop
pop
lret
jecxz
inc
push
xchg
sub
fsts
mov
mov
and
cmp
jecxz
add
and
dec
lret
sti
adc
mov
sar
test
xor
int
jecxz
subb
addl
inc
ds
fdivs
imul
jl
dec
stos
jge
mov
mov
jecxz
lret
js
mov
movsl
sub
mov
bound
pop
push
mull
cmpsb
jg
cltd
xchg
dec
movsl
mov
mov
ret
add
cmp
dec
dec
mov
lret
mov
aam
mov
xchg
ss
imul
dec
jns
mov
rep
cmp
loope
mov
sti
pop
lds
outsl
mov
jnp
dec
and
scas
or
jl
popf
or
mov
ret
mov
fnstsw
add
push
sbb
aas
pop
cmp
push
adc
mov
cmp
and
mov
mov
add
sahf
mov
jmp
rcrl
insb
mov
xor
lods
pop
or
cmc
mov
sbb
cmp
dec
mov
cs
dec
out
aas
lods
adc
in
loope
or
sbb
jbe
cmc
mov
cmc
cmp
mov
cmp
add
sar
test
es
add
fdivl
lret
jo
fwait
jge
insb
push
push
jecxz
mov
push
dec
int
movl
pusha
or
movsl
loope
mov
dec
sbb
and
sub
mov
loope
clc
repnz
loopne
add
mov
adc
ja
addl
add
push
sbb
push
repz
mov
cmc
xchg
push
frstor
and
fdivs
sbb
sub
mov
cmp
icebp
hlt
sub
inc
out
into
orb
test
adc
rorb
das
shrl
popf
inc
lods
outsl
add
ljmp
fucomip
push
push
shll
out
inc
leave
jp
scas
faddl
stc
pop
sbb
in
and
aam
push
loope
mov
outsb
stc
mov
std
mov
lds
add
or
inc
outsb
addr16
push
dec
sahf
ficoml
hlt
ret
fxch
cmp
or
xchg
ds
nop
fs
orl
popa
icebp
arpl
dec
rcll
popl
dec
push
and
scas
mov
int
imul
dec
stos
xchg
ss
xchg
dec
push
mov
and
adc
pop
mov
push
cs
jle
mov
out
mov
or
sbb
push
rclb
in
stos
lea
sbb
addr16
dec
mov
sub
sbb
jle
mov
add
pop
orl
jle
jg
xchg
in
push
add
divl
lds
in
fs
jo
mov
mov
es
jb
inc
scas
idivl
xchg
aad
sub
lods
mov
into
rcrb
sub
or
movsb
mov
loop
loope
and
shl
mov
cmp
lahf
push
inc
imul
gs
pop
xchg
sbb
in
mov
and
imul
mov
pop
mov
arpl
mov
sbb
mov
cmpsb
cmp
clc
mov
loope
mov
xchg
enter
jne
dec
dec
push
sub
xlat
sbbb
std
and
lret
je
xchg
sub
mov
clc
push
dec
push
mov
and
cmp
or
cmp
ljmp
mov
adc
cmp
test
imul
fstpl
mov
push
jno
dec
jb
cmp
mov
xor
addr16
and
jmp
xchg
data16
jns
icebp
and
in
mov
cmp
mov
mov
push
xlat
into
add
dec
addr16
int
add
mov
mov
add
hlt
movsb
cli
xlat
hlt
aad
sub
add
fsts
jge
jl
xchg
nop
loope
and
mov
sbb
cmp
add
pop
sbb
sub
xchg
xor
insl
cmp
push
or
jbe
mov
push
out
mov
mov
mov
clc
sti
fistpl
fistps
and
ljmp
out
jns
sbb
popa
mov
mov
movsb
xor
in
jno
stc
cmp
addb
jns
aam
jne
xor
sbb
push
xorb
stos
add
jle
xor
mov
fisubrs
sti
jae
mov
punpckldq
rorb
leave
push
jecxz
addl
push
dec
jb
das
fsubl
aam
or
insb
or
test
mov
in
bound
jno
ja
push
mov
pop
enter
test
pushl
dec
add
sti
rcrl
mov
popa
jne
insb
cmp
stc
pop
stos
push
mov
cmp
ja
cmpsl
outsl
fsubrl
add
lret
orb
push
pop
shrb
sbb
repnz
pop
push
rcr
adc
mov
test
mov
pop
dec
pop
mov
cltd
cmp
xor
adc
bnd
push
push
push
scas
xor
les
adc
cmp
jle
dec
dec
push
movsb
pop
addr16
js,pt
xchg
stos
imull
imul
push
lcall
stos
push
mov
adc
into
test
sbb
mov
pop
int3
sti
lock
insl
lret
push
xorl
popf
xchg
aas
mov
pop
sbb
inc
mov
sbb
inc
cmp
sbb
gs
push
sbb
in
ss
sti
aas
outsl
mov
popa
add
nop
jle
or
xchg
mov
mov
mov
push
inc
ror
movsl
fnstsw
inc
rcll
stos
xchg
inc
ljmp
and
or
sbb
cli
nop
dec
jnp
xchg
mov
cld
jecxz
and
xlat
inc
add
es
fldt
mov
push
mov
xchg
mov
xchg
cli
xchg
andb
add
into
test
fistpll
test
sbb
lods
sbb
mov
pop
ds
fwait
mov
xlat
ret
aam
cmpsb
leave
sti
xor
mov
out
jb
sbbl
faddp
cmp
inc
loope
and
xchg
jns
and
mov
into
aam
stos
sbb
fstps
mov
or
dec
movsb
push
ja
push
loopne
push
cmpsb
sub
pop
cmp
mov
jge
sub
or
or
fbld
jns
stc
jne
int
cmp
xlat
mov
add
inc
dec
push
push
sbbl
pop
jg
fbstp
and
test
mov
mov
push
paddsw
aad
lret
add
orl
xchg
push
and
repz
or
cmp
push
ret
es
dec
fld
leave
cld
xlat
or
inc
hlt
stos
inc
xor
loope
sbb
iret
jae
test
or
in
dec
xchg
mov
cmc
outsl
jno
cmpsl
cmp
jns
loop
sub
cmpsl
mov
pop
ja
mov
ds
or
mov
shrb
cld
imul
outsl
movsl
repnz
cmpb
pop
imul
inc
gs
cmp
dec
jmp
mov
shr
movsb
xor
daa
xchg
ds
push
push
add
xor
pop
inc
in
adcl
shll
pop
push
push
imul
mov
sarb
cmp
dec
lcall
hlt
loope
xchg
icebp
and
imul
cmp
mov
jo
sub
add
jbe
and
push
dec
jnp
pop
rol
mov
cli
es
mov
ret
icebp
xor
sbb
xchg
xor
adc
lock
out
or
ds
test
sub
sub
and
cmp
test
jno
or
sub
repz
into
mov
enter
dec
mov
clc
adc
dec
push
and
fstpl
shll
push
test
pop
repz
mov
inc
sub
pusha
repnz
ja
rorl
out
mov
xor
lods
inc
dec
sbb
xor
and
inc
testb
mov
cmpsl
dec
shlb
xorb
hlt
jno
sub
inc
dec
add
jb
inc
insb
int3
push
xchg
xor
fs
sub
leave
ret
push
in
lahf
xor
cltd
sbb
mov
inc
jmp
pusha
das
leave
inc
push
mov
loopne
das
orb
push
xchg
loope
mov
cmpsb
xor
mov
movsl
cmpb
scas
adc
jmp
pop
test
sti
stos
inc
je
inc
cmp
pop
popf
jmp
mov
test
add
popf
adc
sbb
sub
fsubrl
jb
loopne
addr16
lds
or
cmp
mov
mov
jo
mov
jecxz
push
pop
push
mov
gs
push
lret
pop
lods
lea
aam
mov
push
xchg
movsb
ret
cmp
fwait
sbb
jg
push
das
push
leave
shlb
lods
mov
mov
xor
in
movsb
scas
cmp
pop
sbb
and
inc
fadd
aad
nop
xor
push
jle
jmp
adc
or
jl
push
xlat
pop
mov
jmp
mov
dec
mov
mov
adc
adc
int
jnp
inc
push
aaa
pop
mov
es
loopne
adc
fstpl
arpl
cmp
in
bound
sub
cmp
dec
in
jp
push
jle
stos
test
clc
cmpsb
aam
or
jle
add
pop
outsl
scas
in
shll
xchg
mov
addr16
and
arpl
jp
push
movsl
push
adc
les
and
ror
pop
movsl
outsl
bound
movlps
into
pusha
pop
push
jge
jno
repz
ret
int
idiv
cmp
pushf
and
xchg
mov
pop
pushl
add
ret
jmp
mov
lcall
push
scas
jae
sub
mov
insl
test
mov
or
pop
xor
mov
fisubrs
add
ret
sar
mov
mov
and
movsl
mov
fmuls
mov
push
push
jecxz
lcall
lock
pop
jae
push
xor
dec
in
insl
pop
insb
mov
movsl
sub
fcoms
sbb
mov
mulb
adc
dec
dec
jmp
xchg
dec
jecxz
cwtl
test
cmpsb
clc
mov
push
jbe
cmp
in
mov
lds
jno
lahf
inc
mov
pop
scas
addr16
addr16
pop
pop
push
mov
dec
push
or
paddsw
cmc
out
or
js
mov
sti
lret
xchg
test
cmc
xchg
add
xchg
lcall
out
mov
jge
jle
mov
in
xchg
fldt
jge
int
nop
scas
cwtl
xor
push
lods
imul
out
and
adc
xchg
mov
jmp
dec
scas
in
xchg
addr16
lds
jg
popf
leave
lock
out
fwait
inc
inc
pop
xor
aaa
inc
pop
inc
test
adc
das
repz
aad
push
fidivl
cmp
test
popa
arpl
xchg
xchg
cld
in
push
mov
add
push
dec
push
lods
js
mov
cli
fists
cmp
mov
fsts
pop
sbb
xor
es
ss
popf
loopne
pop
mov
xchg
or
ret
mov
aad
xchg
enter
iret
sahf
js
inc
sub
fildl
rorb
fisttpl
gs
or
add
adc
pop
aad
cmp
sbb
jp
push
lock
js
adc
mov
std
neg
popf
jbe
lock
cld
lret
nop
je
xor
mov
or
lds
mov
fdivr
js
push
sub
hlt
pop
push
adc
insb
aaa
lcall
outsb
push
push
sahf
xchg
or
out
insl
insb
popa
jl
jmp
push
cmp
jle
pushf
cmp
or
aas
xchg
mov
ds
inc
jge
imul
movsb
imul
xchg
xchg
jg
xchg
in
icebp
mov
testl
js
inc
sbb
pop
pop
mov
sbb
inc
cmp
add
das
or
lret
and
js
xor
lock
push
mov
mov
rep
push
pop
xorl
mov
or
pop
pop
sbb
outsl
xlat
lahf
jmp
mov
or
mov
rcrb
cld
mov
scas
mov
push
jge
pushf
push
push
adcb
sar
cltd
push
mov
loop
movsb
test
push
mov
mov
mov
jb
dec
adc
dec
dec
cmp
fs
cld
adc
leave
jmp
outsl
sub
sbbb
xor
cli
mov
xchg
adc
lcall
jae
lds
out
or
rolb
add
loopne
xchg
push
in
pop
loope
mov
in
sub
push
test
pop
div
aas
dec
fwait
loopne
ds
addr16
mov
push
sbb
dec
rolb
or
loope
arpl
js
sbb
imul
hlt
lea
in
jmp
add
pop
or
fistps
data16
dec
shr
add
dec
fs
enter
xor
xchg
cltd
pop
or
movsl
mov
call
inc
ffreep
insl
adc
lock
and
push
sub
xlat
test
adc
or
stos
arpl
cmpsl
cmp
mov
in
lea
and
or
jnp
adc
mov
pop
stos
stos
fidivl
popf
mov
lds
movsl
lahf
xchg
mov
pop
mov
inc
fstl
repnz
sub
xor
xor
adc
jne
in
mov
add
jmp
xor
fistpll
pop
cli
or
add
or
sbb
loopne
sti
je
std
cmc
iret
js
mov
xorb
push
sub
ds
sbb
addr16
mov
xor
xchg
inc
and
xchg
ficomps
add
xor
and
add
cmp
daa
loope
fisubs
ljmp
stos
or
iret
mov
jl
fisubs
push
loopne
push
or
push
outsb
addr16
or
stos
cmp
mov
daa
sbb
mov
js
push
jne
js
jbe
test
sub
stos
dec
pop
lock
push
xlat
and
test
xor
cwtl
add
rolb
rcrb
xor
idivb
sbb
mov
in
test
push
and
ds
shrl
cltd
mov
xor
sar
stc
aas
xchg
hlt
nop
lock
pop
lcall
jle
mov
leave
mov
sar
scas
icebp
push
xchg
dec
out
mov
cmp
std
dec
ja
repnz
inc
inc
adcl
and
fwait
push
in
aas
sbb
cmp
add
sub
mov
ja
sahf
scas
push
push
xchg
gs
xchg
sbb
jle
jbe
jbe
inc
insl
test
jnp
test
mov
dec
xchg
cs
mov
mov
adc
clc
sub
sbb
cli
xor
icebp
sbb
jns
stos
mov
push
or
xchg
stos
fstpt
jle
mov
lcall
pop
jo
and
add
push
fists
xor
pop
sub
cwtl
andb
push
pop
dec
je
loope
add
ror
loopne
mov
stc
dec
lock
scas
mov
sarl
std
push
gs
cmc
lea
pop
inc
rcr
lret
fwait
rcll
lods
cld
je
aas
cmp
test
lret
jmp
mov
push
or
dec
and
mov
imul
xor
lcall
jg
sbb
std
mov
shrl
movsl
jne
and
push
dec
inc
and
xchg
ss
cmp
cmpsl
push
and
mov
mov
insl
cmc
xchg
loopne
jno
mov
cmp
cs
jmp
movsl
sti
inc
xchg
mov
push
push
xor
das
mov
push
fimull
inc
and
mov
ret
mov
orl
push
ds
in
jecxz
add
testb
insl
dec
xchg
xor
mov
rcl
xchg
push
sbb
adc
ret
out
add
sarl
pop
push
xchg
lcall
dec
push
aam
or
sub
dec
dec
push
push
mov
adc
fdivrl
in
mov
repnz
cmp
dec
or
add
addr16
adc
in
pop
mov
lret
mov
cs
jnp
jno
outsl
pop
and
sub
imul
jmp
inc
or
mov
dec
mov
mov
inc
adc
pop
lret
and
fidivs
dec
inc
cmp
popa
cmp
cmp
cwtl
sub
sbb
rcrl
imul
xor
or
iret
int3
rdpmc
loope
iret
and
and
imul
out
sub
or
fldl
loopne
pop
les
add
dec
dec
push
mov
push
pop
test
jnp
mov
lahf
daa
sbb
out
mov
adc
loopne
cmp
xchg
inc
dec
pop
cli
pop
dec
xchg
or
test
mov
pusha
xor
cmpsl
add
mov
xchg
in
push
cmovo
out
add
out
cwtl
push
mov
mov
test
cld
outsb
bound
cmp
xchg
sbb
jbe
test
movsb
pop
add
inc
mov
fnstsw
and
inc
fistpll
fnstenv
cmp
push
loope
xchg
lds
orl
xchg
hlt
pop
inc
pop
dec
rcrl
xchg
movsb
sbb
imul
and
outsb
push
sbbl
ret
push
test
cld
mul
push
inc
div
dec
inc
rcrl
jp
cmp
movsb
cmpsl
loopne
inc
movb
ds
imul
jno
out
xchg
scas
fiadds
loope
inc
roll
sbb
dec
mov
jae
enter
and
aad
and
dec
push
push
sti
test
insl
movsl
shlb
jmp
xchg
adc
mov
xlat
and
jmp
push
jmp
loop
pop
xor
push
lcall
cld
loope
inc
imul
push
aam
mov
cmc
pusha
out
jp
pusha
mov
shll
adc
and
imul
call
loop
std
mov
pop
dec
ss
xchg
cld
pop
xor
mov
add
mov
lods
rorb
fcmovnbe
insb
mov
inc
jmp
test
pusha
sub
sarb
lods
or
mov
pop
push
or
jne
xor
add
push
pop
arpl
lds
sub
outsb
fimuls
jl
sub
xor
and
rol
sub
sub
test
jl
mov
push
lcall
push
popf
shrb
loopne
lods
shlb
mov
cld
jb
pop
das
push
xchg
adc
xlat
in
fcomps
js
loopne
adc
icebp
imul
into
mov
cltd
jbe
xchg
add
loop
ret
das
xor
push
pop
jb
adc
pop
xor
pop
insb
pop
sbb
out
lret
pop
adcb
push
lcall
lret
pop
sub
jo
mov
and
jne
sbb
sqrtps
addr16
dec
dec
cs
lods
imul
popa
push
push
cmc
les
mov
bound
adc
lret
jo
test
jecxz
xchg
dec
pushf
test
fsubp
movsl
or
ja
cmpl
push
scas
push
push
inc
sbb
out
pop
aaa
cmp
mov
xchg
cli
dec
inc
push
or
mov
cmp
mov
outsl
int
lea
lock
out
vpunpcklqdq
mov
push
insl
mov
sub
outsl
hlt
not
das
sub
mov
sub
lahf
push
mov
pop
add
cmp
shll
call
dec
sarb
fsub
lock
lret
mov
scas
movsb
stos
in
mov
jne
or
ds
and
inc
cwtl
gs
adc
add
cmpsb
fs
sub
aaa
cmc
push
xor
push
pop
movsb
sub
adc
cmp
pop
icebp
cmp
pop
push
inc
lcall
mov
jns
sbb
dec
adc
sbb
lret
sbb
dec
leave
dec
adc
aaa
xchg
xor
xor
add
lds
je
mov
dec
nop
inc
jp
jnp
outsl
loopne
mov
sarb
mov
rorl
or
jecxz
sbb
scas
ret
inc
lahf
ret
es
call
push
pop
pop
pop
mov
dec
hlt
push
test
inc
pop
les
cltd
cmpsb
sbb
dec
xlat
xchg
cmp
push
and
sub
mov
adc
add
lods
mov
jb
adc
or
scas
inc
sbb
xlat
or
test
jno
pusha
xor
cmp
jp
jo
out
jp
sbb
cmpsb
sti
scas
in
das
xor
rclb
pop
negb
je
out
pop
jns
pop
xchg
outsb
jo
rorb
in
and
in
adcb
enter
cli
pushl
xchg
hlt
xchg
sbb
outsb
rcll
aad
pop
testb
push
aad
shufps
add
jns
int3
mov
movsl
mov
xlat
sub
mov
lahf
jns
and
mov
jns
test
popf
push
int
ja
jmp
mov
jg
or
sbb
xchg
movsb
das
pusha
add
sub
icebp
ret
mov
sub
adc
xor
or
mov
insl
xchg
mov
lds
mov
out
lods
push
call
mov
loopne
call
push
mov
pop
das
cmpsl
mov
pop
inc
test
jns
pop
and
add
mov
mov
push
in
and
sub
adc
xchg
popf
ss
pop
andb
inc
loop
fsubs
rolb
in
mov
cwtl
jae
inc
sbb
scas
mulb
rolb
sbb
mov
mov
movsl
jmp
mov
cld
cmp
adc
pushf
cld
cmp
dec
movsb
sub
imul
rclb
xchg
mov
mov
mov
push
xchg
jle
adc
xlat
enter
bound
inc
push
pop
xor
out
lock
mov
scas
add
fwait
lock
outsl
aaa
out
aaa
inc
cmp
mov
mov
shlb
int
adc
pop
jbe
test
sub
push
add
mov
decb
mov
rcll
or
mov
cmp
jbe
test
repnz
adc
dec
test
lock
sub
inc
insb
test
adc
cmpl
loope
xchg
imul
dec
in
ss
pop
pop
dec
rclb
dec
adc
cli
and
cmp
stos
xor
sub
inc
enter
jns
test
mov
push
pop
and
sbb
out
mov
adc
adc
in
in
mov
sbb
xchg
sub
mov
hlt
fisubrl
mov
jnp
repz
andb
jmp
lea
pop
sbb
fwait
jnp
js
cli
jmp
lret
adc
pop
lods
fdivrl
divl
dec
jbe
loop
xchg
shlb
in
jns
test
cmc
jb
loopne
lods
dec
repz
add
pusha
push
leave
ret
inc
fimull
mov
shlb
das
pop
mov
bound
cmp
sub
dec
test
fimuls
lods
dec
push
pop
pushf
mov
jl
mov
sub
add
call
xchg
or
cld
adc
aaa
dec
das
add
cmp
push
aam
iret
hlt
mov
leave
nop
loope
pop
mov
frstor
cmp
push
and
jb
cmc
mov
jmp
enter
loopne
mov
xchg
sarb
jg
sub
mov
scas
add
in
shlb
inc
xor
xchg
mov
cmp
gs
icebp
sub
js
fsubrl
aad
mov
enter
add
ss
fmul
or
lds
mov
pop
and
stc
mov
rol
add
mov
inc
xor
mov
mov
add
lock
je
scas
repz
testb
sub
test
pop
scas
pusha
pop
jne
mov
mov
sub
cmp
testl
shll
cmp
cmpsl
outsb
imul
cmp
stos
xor
mov
movsl
mov
negl
xchg
jecxz
inc
shlb
xchg
call
sub
pop
repnz
andb
ror
cmp
mov
mov
pop
dec
or
add
sub
and
pop
jno
cmp
movsl
add
inc
pop
insl
mov
pop
push
stos
sbb
add
xchg
add
gs
popf
subb
mov
out
inc
add
mov
clc
sbb
ljmp
sub
pop
std
sbb
add
test
mov
cmp
fdiv
cbtw
jl
mov
shlb
cmpl
dec
fistpl
and
inc
imul
fists
dec
mov
mov
popf
add
fs
cmpsb
mov
ficomps
inc
or
addl
sahf
shrl
mov
lcall
nop
cmc
xor
and
outsl
outsl
popa
gs
inc
xchg
lcall
sbbb
inc
adc
outsl
sbb
in
pop
adc
cmp
daa
jmp
test
sbb
push
stos
pop
xchg
pop
sbb
push
or
xor
sahf
sub
in
sbb
cmp
xor
pop
and
inc
test
cmp
or
dec
mov
and
dec
push
cmp
cmp
test
mov
cmp
out
and
lcall
add
xchg
sbb
push
and
dec
inc
mov
rorb
add
inc
lahf
xchg
mov
lret
jle
test
fisubs
stos
repnz
arpl
push
or
dec
stos
push
push
add
add
mov
add
lahf
iret
mov
inc
fs
jle
jb
mov
mov
inc
dec
sub
cli
ja
or
andb
mov
or
lock
lahf
daa
fiadds
out
sbb
sub
inc
stc
cmp
rorb
mov
aad
xor
js
adc
mov
jo
xor
into
xchg
dec
push
sbb
xor
or
loop
xchg
shrl
repz
adc
enter
into
jb
inc
pop
iret
inc
push
mov
rolb
mov
outsl
not
sbb
push
mov
fdivrs
mov
fistpll
mov
and
cmp
cmpb
lcall
or
xor
imul
mov
inc
lds
fwait
cmpsl
fs
and
ss
lret
lds
push
xchg
adc
pop
stc
cltd
adc
fldl
sub
ljmp
mov
fs
stos
cmp
xchg
push
fwait
jecxz
jg
or
int
inc
shlb
mov
aaa
pop
sbb
das
xchg
out
scas
xlat
or
ja
lods
jbe
add
std
cwtl
or
mov
stos
pop
into
dec
xchg
dec
pop
dec
popa
ds
ret
test
cwtl
pop
loop
mov
or
mov
enter
lods
hlt
rclb
jns
mov
jnp
mov
adc
aas
rorl
jbe
mov
jo
jg
cmc
jl
enter
js
add
inc
out
loopne
div
add
dec
lret
jo
ljmp
jge
push
push
adc
pop
dec
shll
cmp
dec
and
cmp
ret
std
and
and
add
pushf
mov
dec
sbb
jo
lret
xchg
int3
repz
clc
or
sbb
pushf
sub
cmp
fs
sbb
int
dec
push
lods
loop
das
loop
push
pop
data16
jg
loope
addb
pop
inc
aaa
jmp
call
pop
mov
cmp
shl
nop
pop
aaa
daa
es
and
nop
and
out
int3
data16
aaa
pusha
adc
cmc
sub
ret
mul
bound
jne
and
adc
sbbb
mov
cmc
jae
jp
add
hlt
loope
jge
and
jnp
ja
adc
xchg
push
fimull
pop
push
fisttps
cmp
out
imul
xor
mov
jmp
add
insb
addr16
xchg
ja
or
dec
rcr
sub
stos
rorl
mov
out
mov
lret
clc
popf
inc
cmpsl
in
or
in
imull
sub
fdivl
movsb
shrb
stc
lds
cltd
sbb
clc
pushf
cmpl
or
lods
xor
xchg
add
push
add
cmpsl
arpl
stos
js
lock
cmpsl
es
push
lret
xor
repnz
or
xchg
mov
arpl
lea
sbb
jge
jae
lods
jecxz
or
iret
and
insb
loope
test
push
mov
hlt
lcall
lods
and
out
dec
js
inc
inc
std
inc
out
jp
fwait
pop
and
or
js
cmp
mov
cs
daa
jbe
dec
mov
leave
mov
fidivl
mov
mov
or
mov
dec
mov
push
push
push
and
jb
push
pop
dec
out
sub
inc
in
aad
sub
fs
arpl
int
insb
dec
outsb
dec
aas
lock
lcall
cli
adc
push
ret
lahf
pop
imul
xor
movl
cli
xchg
dec
or
scas
push
pop
mov
clc
pusha
outsb
fdivs
fistps
mov
sub
or
xchg
pop
clc
cmp
subl
ds
push
into
test
pop
add
xor
cld
pop
std
xchg
dec
push
inc
pop
add
adc
lret
xchg
push
jns
jne
and
push
out
repz
add
in
pop
jg
xor
adc
in
stc
mov
push
out
popf
fdiv
jp
push
sbb
add
pusha
fwait
mov
mov
rcll
jecxz
xchg
xor
sahf
lock
sub
mov
adc
ja
into
xchg
sub
mov
mov
cmpsb
jmp
in
pop
pop
jne
adc
popa
sbb
pop
loop
inc
adc
pop
xchg
scas
aas
sub
or
iret
outsl
pop
mov
pop
cmp
rorl
or
ret
insl
lea
in
mov
filds
popf
mov
pop
jp
icebp
cmpsb
jecxz
jno,pt
adc
sbb
add
pop
lret
adc
gs
scas
inc
sbb
cmpsl
insl
push
sbb
xor
js
push
loopne
ss
insb
mov
insb
xor
out
inc
mov
popf
enter
inc
in
cli
lret
out
xor
dec
call
mov
icebp
mov
cmp
inc
int
repz
and
lea
jno
add
shrb
or
adc
icebp
cmpsb
inc
jae
xchg
xor
add
dec
xlat
pop
dec
sub
stc
addr16
sbb
push
and
fpatan
and
mov
add
or
lret
and
jbe
push
pop
jge
push
nop
call
fcomip
adc
cmp
ret
ficoms
sub
insl
jo
call
pop
jmp
pop
push
out
fiaddl
adc
xlat
jp
mov
loopne
xchg
sbb
int3
xchg
cltd
dec
pop
mov
ja
cmp
adc
mov
and
insl
pop
sbbb
xlat
push
pop
aad
sub
aam
xor
sub
lret
add
adc
xor
dec
sbb
les
jecxz
sbb
or
mov
sbb
cmpsl
pop
mov
notl
jbe
les
add
pop
stc
jns
mov
jl
fwait
push
mov
adc
arpl
push
aam
js
rorb
dec
jcxz
cmp
push
ljmp
lock
and
clc
movsb
xchg
and
mov
mov
jo
ljmp
popa
lds
inc
xchg
xor
iret
call
xchg
xor
pop
or
leave
mov
mov
mov
mov
jns
nop
cs
stos
jno
subl
jns
imul
add
sbb
out
repnz
fsubl
iret
clc
dec
out
cltd
add
aas
mov
dec
out
add
push
test
adc
sub
fwait
cmc
mov
bound
add
mov
test
xor
xor
xor
cmp
push
scas
sub
sbb
and
imul
gs
xchg
adc
push
and
cltd
xchg
hlt
lods
icebp
iret
xor
sar
inc
mov
push
xor
xor
xchg
push
into
xchg
push
sub
sub
outsb
jne
repnz
sbb
xchg
and
lcall
mov
jno
xlat
pop
imul
movsl
xchg
add
xor
mov
ja
inc
inc
aas
sbb
hlt
sbb
inc
shlb
fcomip
or
sbb
mov
cwtl
mov
xchg
pop
outsl
js
movsb
push
jae
outsl
mov
inc
push
push
push
pop
fmulp
cltd
sbb
sbb
insb
enter
xchg
jb
or
adc
pop
mov
cmp
pop
cmpsb
xor
adc
addr16
out
out
xor
mov
sub
gs
cmp
mul
mov
adc
bound
nop
adc
sbb
lods
sbb
pop
adc
insb
adc
inc
inc
xchg
or
lock
cli
mov
je
fidivrs
mov
adc
test
movsl
jbe
rorb
aad
cld
inc
xchg
add
repnz
xor
mov
push
cmp
push
insb
mov
jle
adc
push
fld
neg
add
aaa
cmp
adc
sub
nop
sti
xor
or
mov
or
pop
and
pop
int3
cltd
cld
xor
adc
aad
insl
sub
notl
xchg
ss
outsl
xlat
test
daa
sbb
lcall
jno
jne
jbe
add
jns
sti
pop
outsl
out
sub
xor
movsl
in
mov
sbb
xor
out
test
inc
or
pusha
mov
mov
data16
adcl
fistps
enter
mov
test
push
xor
mov
and
inc
and
xchg
ret
js
mov
rcl
movsb
or
fiaddl
enter
cmp
xchg
loope
push
inc
mov
int3
dec
insb
mov
mov
xchg
mov
shl
sub
test
cmpsl
sub
ja
push
int
pop
push
addb
lahf
inc
and
or
pop
popa
fsubl
stos
loopne
push
inc
sbb
push
sbb
sbb
out
mov
cmpsl
pusha
push
fldenv
scas
mov
mov
data16
ficoml
aaa
fwait
sub
movsl
cmp
xchg
cmpsb
mov
adc
lret
jge
jb
or
xor
mov
bound
daa
xor
pop
jae
push
pop
and
jno
cmp
das
mov
sbb
dec
sub
pusha
bound
cmpsb
sbb
jmp
insb
into
lcall
fcmovu
lret
add
outsl
std
dec
mov
in
dec
stc
xchg
pop
fidivrl
xchg
nop
add
cmp
pop
adc
pop
fidivl
jecxz
xchg
jb
fildl
jno
sbb
push
inc
lret
lret
lcall
mov
fnstsw
mov
mov
or
lods
sub
les
hlt
and
stc
dec
mov
jnp
mov
push
mov
cltd
stos
ret
scas
fs
shrb
repnz
push
and
jae
inc
outsb
rolb
out
cwtl
imul
or
push
mov
cmpsl
fcmovnu
aam
sbb
hlt
outsl
xor
icebp
call
cwtl
and
mov
das
add
out
rorl
cli
push
fs
pusha
xlat
ljmp
cmp
out
xchg
jecxz
idivl
pop
xchg
ja
cmp
je
pop
dec
push
scas
inc
lods
incb
out
jecxz
dec
sti
daa
stos
flds
sub
sahf
scas
int3
sub
call
jae
mov
push
adc
rclb
dec
add
xor
xchg
pop
jbe
insl
addb
xor
fnstsw
cmp
pop
cs
addr16
popa
mov
jnp
gs
ret
mov
pushf
in
mov
xchg
outsb
rolb
out
or
aam
xor
frstor
jle
sub
lods
pop
push
pusha
loope
loope
call
loopne
lahf
out
pop
lock
cmp
cltd
mov
in
loopne
ret
movups
ds
jns
mov
push
cld
cmp
lock
add
int
aad
mov
and
sbb
call
pop
mov
nop
pop
cmp
jbe
pushl
lods
pusha
sub
mov
cmc
call
lret
cli
pop
rorl
push
sub
mov
enter
sub
jp
mov
lea
pop
dec
add
aas
mov
rcrl
push
lret
rolb
jge
cmp
popa
cmpsl
enter
sar
mov
je
jle
xlat
mov
mov
inc
mov
movzwl
cltd
dec
rcll
fsubs
fsubrp
sbb
adc
mov
aas
addb
push
jb
jge
xchg
fldt
pop
fnstcw
aam
jnp,pt
xchg
pop
and
lahf
pop
cmpsl
in
das
ljmp
or
sub
jl
cmp
lock
fsubr
jle
jbe
sub
adcb
mov
lret
jo
inc
jecxz
jb
add
int3
cwtl
pop
push
push
adc
cmp
xchg
les
and
ret
mov
movb
ret
in
inc
std
bound
sub
fcomps
call
mov
adc
hlt
fs
hlt
jo
sbb
iret
insb
je
aaa
or
imul
sbb
and
out
dec
cs
sub
jge
sub
div
mov
aad
mov
mov
jl
pop
ljmp
andb
in
bound
lock
cltd
pop
insb
fstl
ficomps
mov
lahf
jmp
or
sub
jb
movsl
arpl
outsb
fstl
repnz
mov
sbb
cld
aad
iret
les
in
xor
test
xchg
aaa
push
movsb
mov
dec
add
popa
scas
jbe
xor
imul
test
addr16
je
shld
gs
rorb
pop
add
pusha
iret
pop
pushf
nop
adc
mov
shrl
sahf
pushf
push
jb
rolb
pusha
cmp
add
mov
out
test
cmc
or
in
loop
loop
xlat
ja
stc
cmp
daa
jl
into
sub
sub
push
jl
imul
jmp
mov
jge
xlat
jmp
clc
data16
sub
push
or
imul
scas
jmp
mov
or
jno
xor
inc
jmp
sbb
sub
pop
pop
icebp
dec
jle
repz
mov
ficomps
into
arpl
lods
push
mov
xlat
loop
xchg
add
xchg
mov
push
and
outsl
stos
sti
pop
cld
out
loope
decb
into
rorb
cs
lahf
imul
cmc
dec
clc
std
xor
repz
pop
stos
mov
pop
jno
aas
cltd
es
es
jnp
xchg
pop
inc
pop
xor
or
test
sub
xchg
gs
xor
add
xor
scas
repz
popa
inc
arpl
pop
jl
subb
stos
ja
rclb
out
shll
sahf
push
adc
push
dec
daa
or
sahf
iret
out
cli
movsb
sbb
outsl
icebp
sub
cmp
jp
scas
or
fcompl
mov
bound
in
mov
xchg
inc
fstpt
cmp
sti
orl
push
add
sbb
inc
loopne
cmp
movsl
mov
xor
das
out
fcmovnbe
pop
ret
jmp
call
xchg
aam
insb
pop
jne
or
movsb
loope
push
pop
adcl
xor
cli
mov
or
jns
cmp
cmp
jecxz
add
pop
jb
xchg
hlt
sub
mov
and
add
js
adc
rorl
mov
inc
mov
out
mov
or
cltd
fwait
mov
mov
pusha
daa
mov
sahf
iret
jae
xchg
idivb
xchg
popf
and
push
daa
cmp
mov
xchg
int
arpl
lret
dec
imul
clc
add
jp
lea
ja
jbe
out
daa
imul
xor
addr16
divb
lods
xor
push
jbe
fisubs
sbb
js
push
inc
sbb
push
inc
jg
out
fdivrl
pop
popf
mov
inc
or
dec
dec
scas
test
lahf
stos
and
xchg
into
punpckhdq
cmc
mov
and
mov
lods
outsl
adc
mov
push
xlat
add
ret
xchg
pushl
das
pop
push
sub
mov
shlb
addr16
pop
iret
shlb
inc
jp
rcll
bound
shrl
aam
cwtl
sti
inc
push
cs
ja
rclb
loop
iret
jbe
lret
ffreep
out
mov
test
int
jle
lahf
inc
cmp
mov
add
fwait
lds
push
je
xlat
repz
mov
inc
insb
cli
and
jge
in
arpl
icebp
push
mov
or
mov
cli
aaa
lods
pop
cmp
xor
imul
fs
ret
xchg
cmp
mov
and
pop
mov
jne
cli
dec
fbld
mov
inc
sub
inc
or
lret
aam
add
sbb
fistps
jo
hlt
in
fisubrl
cld
loopne
pusha
lock
xorb
dec
fsubrl
mov
js
mov
cmp
cld
inc
and
jecxz
inc
insb
sbb
push
cwtl
pop
mov
loope
insl
repz
pop
adc
in
addr16
test
pop
jl
pop
ss
jmp
call
push
sub
sbb
fdivr
sbb
mov
mov
inc
shlb
xor
arpl
ja
mov
hlt
sbbl
insb
sbb
sti
dec
push
mov
dec
inc
aad
test
fst
mov
ja
mov
lock
or
pusha
dec
aas
push
or
xor
inc
andl
cltd
mov
scas
push
popf
pop
jbe
add
push
xchg
mov
add
repz
xor
mov
ret
subl
sub
pusha
ud1
enter
scas
loopne
lods
jo
xchg
dec
xchg
inc
popf
scas
pop
outsb
ror
cmp
cli
sub
push
xorl
bound
cmp
stos
xor
jo
sub
add
lods
dec
fucom
mov
inc
xchg
rorl
das
xchg
xchg
mov
inc
mov
sbb
js
cmpsb
cmp
ja
fstps
in
mov
es
mov
arpl
push
gs
mov
stos
sub
int
sbbl
lahf
jle
fdivs
int
sbb
and
fdiv
ds
int3
push
addr16
push
not
roll
push
push
mov
xchg
cli
repnz
and
aad
inc
cmp
hlt
adc
fwait
mov
adc
test
stos
inc
or
push
orb
ds
sub
adc
rcl
rcrb
mov
pop
jne
mov
or
cld
stos
dec
rclb
or
lahf
in
repz
jmp
pop
pop
inc
fidivrs
lds
dec
jne
lret
mov
cwtl
lcall
ljmp
fwait
or
stos
test
shl
pop
or
push
push
hlt
mov
jae
aad
outsb
gs
xchg
mov
pop
aam
xor
push
in
push
shll
mov
adc
mov
jmp
add
inc
xor
jecxz
js
repnz
sahf
sub
and
dec
mov
negb
sbb
int
stos
sub
sbb
cltd
clc
adc
outsb
out
in
mov
pop
fidivl
incb
fstpl
das
dec
sti
shlb
ss
xorb
and
adc
or
adcl
imul
movsb
and
fstpl
scas
pop
pushf
lcall
aas
js
out
int3
inc
fbld
fstpt
push
rcr
popa
arpl
pop
lods
pop
pop
subb
adc
mov
mov
call
push
or
je
xor
call
push
rcrb
fdivrs
sub
loopne
call
iret
dec
ljmp
xor
adc
mov
inc
repnz
xchg
movsb
mov
inc
mov
mov
push
arpl
popf
call
mov
mov
lods
mov
cmp
addr16
call
xchg
jb
and
es
jb
fs
shl
pop
push
leave
xchg
sub
cmp
stos
pop
popf
mov
repz
aas
cli
mov
pop
dec
mov
push
inc
data16
loope
cli
mov
arpl
and
js
mov
push
les
shlb
cmp
and
jno
fisttpll
rcrl
das
jge
fcomps
icebp
pushf
mov
inc
scas
jns
mov
xchg
aad
loopne
push
test
jmp
mov
arpl
das
pop
test
jge
cmp
mov
push
lahf
fidivrl
xchg
aas
mov
andb
push
cs
mov
repnz
ss
in
push
test
jg
pop
out
inc
imul
or
jae
in
jge
lds
ret
das
jns
popf
push
orl
das
inc
dec
inc
mov
cltd
fstps
lcall
pop
jg
sub
and
jge
ret
and
test
outsl
aad
movsl
enter
fcoms
and
shrb
lret
pop
popa
xchg
in
data16
jge
jle
mov
lds
inc
dec
lock
xor
sbb
dec
jmp
xchg
js
push
xor
xchg
pop
and
cmpsb
les
aad
and
jb
or
fisttps
mov
mov
inc
aad
inc
sub
popf
jmp
cmp
mov
inc
gs
and
enter
loopne
pop
mov
jne
popa
xlat
enter
mov
aam
fiaddl
mov
mov
add
mov
loop
mov
cmpsl
insb
mov
xchg
inc
in
mov
int
mov
xor
outsb
je
fs
loop
test
push
or
ss
stos
out
xchg
xchg
loop
out
add
push
cmp
jnp
scas
jbe
daa
xor
add
pop
andl
cmp
stc
leave
add
cmpl
jae
adc
loop
sti
movsl
call
pop
adc
in
jae
mov
ss
mov
shrl
or
bound
lods
mov
outsl
jne
insl
cmp
mov
xor
out
lret
std
dec
out
ret
adc
popa
ja
fstl
push
nop
test
lock
xchg
xor
mov
fstpl
mov
jb
rcll
mov
and
xchg
fwait
test
cmp
or
pop
nop
mov
and
loopne
mov
sbb
jno
mov
outsl
jge
add
push
ja
and
dec
arpl
xor
xchg
rorb
dec
mov
adc
pop
mov
imul
loop
jp
inc
pop
loopne
xor
test
stos
mov
orl
xlat
push
sub
mov
loop
jno
sbb
mov
shlb
test
xchg
push
push
xor
lods
imul
mov
xchg
xchg
sub
outsl
cmp
jl
dec
je
push
sub
xchg
frstor
pop
fidivl
cmp
push
in
bound
jbe
imul
jp
sub
mov
fidivs
sbb
dec
cld
xchg
sbb
dec
xchg
add
imul
dec
into
rorb
fwait
aas
nop
mov
rcr
jnp
into
jecxz
pusha
fimuls
push
int
bound
lret
stc
movsb
cmp
add
inc
out
test
in
shlb
cltd
popf
jbe
cmp
inc
faddl
jl
mov
fs
jne
imul
ljmp
loop
push
outsl
cmc
cmp
xor
pop
adc
shrl
add
mov
xor
and
insb
sub
add
pop
imul
movsb
cld
mov
bound
fcmovne
inc
and
add
pop
jg
in
xchg
or
inc
adcb
pop
shl
gs
or
push
sub
das
test
mov
ret
popf
notl
imul
repnz
adc
push
out
aas
mov
add
adc
hlt
dec
push
dec
jns
in
aad
xchg
xor
je
mov
jb
sub
loopne
ficoml
fwait
cmp
negb
sbb
rcrb
imul
push
imul
and
lret
stos
in
out
xlat
hlt
ljmp
mov
xchg
pextrw
xchg
orl
pop
popl
arpl
repz
lret
in
in
mov
loop
adc
adc
je
cmp
outsb
sub
cmpl
xchg
pushl
in
pop
inc
pushf
cld
inc
push
out
xchg
fidivs
push
pop
mov
imul
xlat
jg
call
fisttpll
lds
adc
push
and
cwtl
or
rcrb
jns
push
push
jecxz
loope
inc
or
or
add
pop
xor
mov
push
jnp
stos
or
mov
adc
dec
cmpsb
push
out
shll
aaa
mov
adc
jns
mov
outsl
or
dec
and
ret
loop
ror
inc
dec
aaa
sarb
push
pop
rcr
mov
adc
dec
jle
loope,pn
xchg
sbb
dec
sub
pop
aaa
out
or
sbb
rcll
mov
push
pusha
and
std
popf
mov
and
dec
lds
sbb
enter
dec
das
push
xchg
pop
xor
mov
cwtl
out
xchg
dec
xchg
std
daa
fbstp
mov
int
repz
jmp
fwait
inc
xchg
pop
mov
dec
mov
loope
aad
dec
xor
sbb
sbb
mov
lods
fdivs
mov
push
lods
scas
inc
repnz
in
lret
aad
and
mov
jle
aaa
testb
cmp
push
std
mov
in
lea
fs
mov
and
xor
aad
mov
testb
add
icebp
fs
fnsave
repnz
in
add
inc
test
xchg
xchg
movsl
or
repnz
sbb
mov
and
jae
xor
in
push
push
cmp
leave
shr
in
pop
or
hlt
shll
jg
add
mov
aad
add
loopne
push
push
jmp
lea
lock
hlt
in
fwait
movsb
hlt
push
jne
xlat
inc
mov
in
sub
jo
addr16
adcl
and
mov
jnp
pop
push
push
mov
in
add
fs
lea
mov
jle
xorl
or
dec
lea
mov
push
mov
mov
scas
xor
ror
and
cltd
fstp
scas
inc
mov
int3
jle
xor
je
ficompl
ljmp
mov
mov
fcom
xor
add
inc
cmpsb
add
scas
out
stos
sahf
jp
call
and
pop
mulb
push
enter
xchg
rol
cmp
jne
in
movsl
mov
xchg
inc
cmp
sbb
in
mov
fcmovb
rorl
mov
jno
ja
jecxz
xchg
gs
hlt
movsl
ljmp
jg
incl
lea
daa
enter
jge
daa
je
cmp
cmpsl
cmp
or
inc
mov
xchg
inc
push
push
push
dec
and
popf
pop
jg
cmpb
outsl
out
je
es
mov
insl
in
shl
xor
mov
push
inc
and
ljmp
sub
sti
jmp
fucomip
xchg
js
or
cmp
test
pop
xchg
and
adc
adc
adc
repz
aad
test
xchg
mov
dec
repz
lods
aad
or
inc
dec
jno
mov
sarb
movsl
sub
stos
imul
dec
cltd
int3
inc
rorl
sahf
aaa
int3
mov
mov
mov
call
into
or
cmc
mov
cld
jo
fstp
loope
dec
mov
mov
dec
test
xchg
adc
pop
fdiv
mov
sub
fidivrl
add
xor
repnz
roll
sub
mov
ret
xorb
dec
notb
movsb
aam
jp
cmp
bound
rcrl
clc
subl
pop
push
cmp
sub
jg
and
jg
and
mov
testb
test
mov
sbb
mov
jge
dec
jmp
xchg
popa
int3
fidivrs
jecxz
dec
iret
jbe
or
push
rclb
mov
jns
jns
mov
cltd
xchg
xchg
aas
mov
arpl
testb
jg
sub
shlb
gs
and
lcall
mov
popf
pop
xlat
xor
xchg
push
cli
adc
mov
std
mov
dec
xchg
gs
jecxz
mov
outsl
sub
out
and
ret
mov
sahf
mov
call
push
push
out
mov
sbb
dec
addb
scas
pusha
add
inc
dec
pop
in
cwtl
inc
inc
rcrl
icebp
inc
fwait
mov
sub
add
aad
das
movsb
pop
repnz
xchg
ljmp
fsubrs
sbb
aaa
add
jae
xchg
stos
je
call
scas
je
adc
cli
add
inc
and
mov
add
dec
or
shlb
aad
xchg
out
or
and
ffreep
stc
scas
hlt
push
cltd
sbb
xchg
test
jle
loope
and
testl
pop
mov
popl
mov
mov
xchg
orl
and
lcall
iret
pop
test
pop
add
int
test
pop
push
fistl
iret
pop
pop
jb
orb
aad
xor
mov
inc
inc
sar
pop
iret
pusha
mov
imul
jne
push
push
in
cwtl
dec
mov
or
jne
mov
and
shl
and
inc
js
lods
test
jb
or
sti
insb
psrlq
jge
lret
xchg
test
sbb
hlt
inc
mov
out
push
fidivl
mov
cmp
lret
je
lea
loopne
add
adc
mov
in
xchg
push
mov
push
mov
int
fsubr
add
xchg
fimuls
cmp
pushf
and
push
xchg
je
scas
push
cmpsl
ss
clc
xor
push
cmpsl
in
or
lahf
mov
stc
jecxz
xor
lods
sbb
push
push
decb
testb
bound
push
mov
push
or
shll
xchg
mov
pop
sbb
pop
inc
adcl
enter
sbb
mov
jo
mov
mov
mov
or
std
pop
adc
mov
loope
pop
mov
mov
pop
mov
or
bound
jecxz
sbb
scas
jmp
fbstp
mov
mov
dec
mov
xor
stos
cmp
xor
inc
or
lret
fbstp
adc
test
cs
xor
in
mov
sbb
loopne,pt
mov
gs
mov
adc
jo
out
push
ret
inc
mov
pop
jecxz
andl
lret
xchg
dec
jl
cld
add
or
mov
aad
dec
fwait
data16
or
data16
push
push
xchg
roll
das
sahf
mov
mov
xchg
mov
add
mov
adc
push
push
cmpsl
adc
pop
movsb
inc
lods
fadds
scas
rcrb
fwait
adc
in
add
dec
sub
and
mov
pop
jae
sub
pop
or
adc
in
jmp
test
stos
lods
test
cmp
int
in
cmp
add
push
cmc
or
xchg
icebp
repnz
xchg
add
xor
sbbl
test
add
fidivs
in
push
popf
mov
dec
int3
mov
vpmulhuw
aaa
fwait
dec
mov
shr
sub
inc
xlat
mov
cmp
test
cmc
call
out
int3
mov
mov
movsl
or
cmpsb
nop
fildl
xchg
dec
out
inc
dec
push
fcos
ffree
add
cmpsb
dec
out
mov
adc
adc
mov
dec
inc
cmp
shrl
lcall
loop
cmp
shll
pushf
leave
mov
xor
insb
aam
movsl
cmp
mov
xchg
outsb
pusha
shrl
aad
les
out
stc
arpl
xorps
cmp
jns
adc
test
shlb
inc
aas
sbb
jge
loope
dec
cmpsb
sub
sbbl
in
pop
fadds
mov
mov
mov
pop
fsts
mov
loopne
inc
mov
and
dec
es
loop
and
xchg
iret
sbb
orb
ss
add
cmc
mov
ret
flds
mov
inc
add
inc
inc
lds
xchg
mov
mov
shr
mov
mov
scas
mov
mov
add
dec
ss
andl
das
dec
sbb
push
insl
mov
pop
outsl
jbe
lods
dec
ljmp
popl
into
mov
cli
outsb
mov
sub
out
testb
in
dec
dec
inc
cs
arpl
xchg
push
or
mov
jecxz
daa
mov
pop
adc
addr16
out
ret
aaa
jns
lea
pop
js
sti
bound
lods
shrb
xor
or
xor
mov
pop
push
lcall
iret
cmc
inc
fcoms
push
add
jb
cmp
adc
cmc
sub
scas
in
fwait
sub
mov
push
sub
les
or
add
imul
loop
shl
cmp
or
mov
mov
test
out
mov
mov
xchg
mov
mov
je
cmp
mov
adc
in
jecxz
push
scas
je
jnp
adc
pop
mov
ret
xchg
cmpsb
mov
push
sbb
fs
mov
test
std
push
sub
or
jb
pop
xor
fadds
lret
push
inc
and
sub
sbb
add
mov
xchg
idiv
lcall
arpl
movsl
mov
ds
pop
int
jns
popa
pop
cli
das
push
rcll
sbb
push
iret
lret
add
aad
aad
pop
adc
addb
adc
xchg
test
cmpsl
data16
jmp
lea
xor
jmp
inc
lcall
iret
dec
or
orl
mov
mov
xor
nop
out
out
mov
dec
insb
movsl
lods
subl
mov
dec
xor
add
mov
push
loope
ret
mov
add
loopne
push
aas
push
dec
addr16
rorl
sbb
push
fdivl
scas
adc
pop
push
jne
jge
bound
jns
dec
loope
cmp
push
pop
lcall
jae
sbb
test
mov
ja
bound
add
pusha
sub
xchg
cmp
movsb
subl
sub
push
sbb
xchg
data16
out
xchg
and
cltd
add
inc
cmpsb
jnp
push
sahf
cmp
imul
cmp
jne
in
jl
jecxz
mov
stos
mov
mov
xor
loopne
sub
cmp
push
std
fmuls
sbb
mov
push
les
mov
dec
cmp
push
cmpsb
dec
negl
xchg
mov
imul
mov
xchg
mov
mov
mov
dec
int
sbb
adc
mov
sbb
push
rcrl
push
mov
jnp
orl
inc
bnd
mov
sub
xorb
add
jns
sti
jnp
vunpcklps
daa
xor
pop
stos
addb
stc
mov
pop
and
adc
sbb
add
cli
inc
mov
pop
scas
mov
gs
pusha
add
mov
sbb
xchg
out
insb
icebp
mov
scas
sbb
mov
out
jne
xchg
inc
cmp
push
xchg
mov
jo
loope
push
ljmp
loope
mov
out
jecxz
sbb
gs
push
push
sub
into
stos
sbb
scas
jmp
adc
pop
mov
out
mov
in
dec
gs
mov
mov
test
mov
xchg
subl
pop
add
xchg
cld
jge
mov
xchg
outsl
jbe
lock
in
leave
jecxz
andb
repnz
pop
in
lret
rorl
repnz
std
dec
xor
and
jnp
or
cli
jno
loop
pop
ror
pusha
inc
sub
rcll
aam
jg
add
movsb
inc
hlt
into
mov
mov
add
jns
or
mov
clc
mov
das
or
xorl
push
stos
xor
push
addr16
push
push
cmp
mov
lods
out
outsb
out
popa
ficompl
or
repz
jge
xchg
cmp
je
es
sub
sub
dec
pop
inc
hlt
xor
dec
sub
jmp
int3
insb
test
rolb
sbb
shrb
push
test
adc
mov
sti
inc
sub
push
lods
popf
js
mov
int3
pop
clc
lds
dec
mov
pop
xchg
inc
xor
sub
inc
test
xchg
dec
xor
idivl
adc
jg
je
and
arpl
jl
rclb
popf
or
fnstsw
mov
stc
leave
xor
or
jbe
repz
orl
mov
fmull
sbb
add
stc
fnstcw
sbb
mov
or
mov
lcall
xchg
shll
dec
loopne
ss
mov
test
repz
pop
push
add
fdivr
jnp
inc
xchg
inc
jp
ljmp
cld
call
inc
inc
aad
in
push
psllq
adc
mov
push
inc
js
stos
movsb
lret
or
test
cmp
lods
adc
mov
push
loopne
mov
in
sahf
jle
cmp
xchg
push
fld
push
cmpl
pop
jmp
jo
mov
stos
sbb
or
xchg
add
ljmp
jno
ss
dec
sbb
inc
sbbb
pop
jb
mov
leave
in
cltd
mov
js
cmp
jae
pop
out
xor
push
cmpsb
icebp
sbb
stos
sti
jbe
jo
int3
xchg
mov
stc
in
int
gs
lahf
stc
nop
and
sub
pop
divb
mov
test
dec
dec
push
adc
push
pushf
xchg
les
jae
xlat
xor
sbb
inc
into
jno
ret
xor
leave
mov
pop
inc
xlat
fldt
mov
sarl
push
push
pop
mov
xchg
iret
mov
jno
test
jno
and
inc
xchg
push
arpl
mov
mov
sbb
outsb
hlt
sub
lret
add
sub
fistpll
les
aam
jmp
ret
adc
icebp
cmpsl
jge
jmp
insb
mov
fcomi
adc
ret
dec
into
pop
pop
cmp
aam
sarb
mulb
js
add
mov
dec
pop
icebp
into
push
sbb
lcall
mov
cmp
insl
jecxz
neg
cmp
cmp
sbb
mov
imul
inc
fpatan
arpl
jecxz
cli
xorl
add
lods
addr16
xchg
pusha
cld
fs
jmp
mov
inc
int
jg
out
test
mov
xchg
xchg
mov
mov
lods
ret
aam
scas
scas
imul
rcrb
pop
xor
dec
idivw
fstpt
shr
mov
es
mov
sti
std
jp
pop
rorl
hlt
popa
lock
or
xchg
cmpsl
js
lods
mov
adc
cmp
inc
pusha
push
lar
das
sti
xor
or
jle
fwait
mov
insb
test
xor
cmp
push
cmp
xchg
lods
add
std
or
sbb
aad
sub
leave
add
sub
imul
leave
dec
clc
jae
cmp
sahf
cmp
outsl
xor
jbe
pop
adc
neg
mov
ja
cmp
sub
push
cmc
lcall
inc
repnz
cltd
clc
push
sbb
fs
mov
cmp
cmovo
loopne
and
test
xor
inc
lret
add
dec
inc
sub
push
and
push
lds
add
or
xor
ja
shrb
inc
dec
ret
ja
ror
les
leave
pop
cld
outsl
aaa
add
inc
and
pusha
adc
xchg
lds
adc
jo
adc
in
mov
movsl
mov
insb
or
icebp
cltd
ret
push
bound
mov
fstps
inc
xchg
inc
xchg
int3
adc
or
dec
mov
enter
js
pop
ds
das
aad
aad
sbb
fdivrs
xchg
lahf
repnz
aam
xchg
ret
jnp
mov
xchg
das
xor
or
lret
xor
popf
out
mov
cltd
sub
inc
jb
lcall
int
cli
std
mov
in
jp
loopne
xchg
inc
adc
push
xchg
fs
fisubs
cmp
xchg
or
scas
push
sbb
cmpsb
aaa
outsl
inc
jmp
dec
clc
add
cli
inc
mov
jle
jmp
sbb
aaa
add
cltd
xchg
xor
xor
xchg
push
subl
cmpsl
fldt
or
xchg
adc
cmp
stc
out
stc
sbb
je
mov
pusha
push
fimull
mov
in
lcall
cmpsb
dec
pop
cltd
xchg
cmpsl
jl
cmp
mov
leave
repnz
popa
pop
inc
mov
jae
test
dec
adc
jbe
or
stos
mov
adc
movsb
xor
loope
jmp
gs
leave
xor
sbb
pushf
push
inc
jae
cmc
repz
add
pop
inc
add
out
inc
pop
imul
clc
orl
add
psllw
sub
in
pop
lret
pop
cmp
mov
and
xchg
inc
sbb
scas
sbb
sub
cmpsb
arpl
gs
and
and
rcrl
test
adc
pop
adc
imul
lcall
adc
mov
add
nop
inc
adc
in
rcrb
mov
push
mov
rorb
scas
jo
lea
jno
pop
bound
ret
mov
ret
std
add
popf
mov
mov
sbb
movb
cmp
cmpsb
or
cmp
lcall
out
sbb
mov
pusha
jns
pusha
ficomps
inc
mov
fldcw
adc
in
shrl
int
aas
mov
fst
jb
lcall
adc
fldt
shl
repnz
pop
es
xlat
mov
adc
imul
inc
mov
mov
gs
rclb
movsb
ljmp
insb
xor
fmull
pop
repnz
pop
sub
xor
cmp
mov
mov
and
leave
adc
or
insl
mov
pop
and
mov
jmp
cwtl
push
nop
out
sti
imul
pop
rorl
call
inc
xor
lret
dec
roll
fsubrl
insl
jecxz
push
jecxz
push
inc
mov
adc
xchg
cmp
int3
les
daa
icebp
fadd
mov
push
cld
aam
shrb
lret
pushf
es
repnz
and
pop
lcall
roll
add
push
jl
or
fisttpll
xchg
jmp
loop
pop
rorl
xchg
add
and
and
dec
mov
xchg
adc
mov
inc
loope
ficomps
orl
and
inc
inc
jae
adc
xchg
lea
std
pop
xor
arpl
sub
push
into
push
jp
stos
fildll
jle
or
movsl
movsl
and
jmp
xor
nop
fistpl
and
adc
mov
xchg
popf
mov
push
push
int
ret
jecxz
mov
add
loopne
movsl
adc
cmp
lret
xchg
jo
insb
inc
pop
subl
mov
shrl
cmovo
cwtl
jb
cmp
mov
imul
pop
adc
and
fsubr
mov
out
das
mov
push
or
sarb
jb
sbb
cmpsb
pusha
push
push
sbb
or
imul
outsl
sub
popa
fwait
adc
jle
sahf
push
popa
xor
imul
std
dec
test
jbe
pushf
insl
es
arpl
shrb
add
cmpsb
jl
call
imul
mov
xor
pop
subb
int
call
push
cmp
fisttps
mov
or
push
mov
fdivl
rorl
jne
mov
xor
popa
mov
jge,pt
sub
cli
in
mov
jnp
and
mov
shrb
out
xor
xor
scas
jb
mov
into
dec
jle
xor
inc
sub
push
popa
and
sub
dec
out
das
sar
dec
test
xor
loopne
mov
xchg
out
pop
adc
mov
repz
sub
insb
xchg
sub
jp
mov
or
ret
sbb
fsts
sbb
pop
jge
in
sbb
inc
outsb
xchg
cmp
sub
mov
add
cwtl
add
mov
mov
mov
scas
sub
or
shlb
repnz
add
ljmp
jl
or
dec
aaa
setb
mov
xlat
fbld
out
fsubl
adc
jle
sub
jo
iret
lock
push
sbb
cmc
mov
mov
loope
push
imul
mov
xor
xchg
popf
sti
sub
fwait
addl
lret
mov
rclb
dec
sbb
adc
out
es
jl
mov
sub
data16
mov
push
add
pop
xchg
ss
cmc
rdtsc
and
inc
fiaddl
cmp
test
inc
lock
xchg
cld
das
cltd
adc
dec
out
pop
inc
pop
pop
aam
jo
sub
fidivrs
fimuls
or
ja
lahf
clc
frstor
sub
xor
aam
lahf
fnsave
mov
addl
orb
jle
jne
mov
jg
sub
sbb
cwtl
or
add
adc
gs
mov
xor
cmp
dec
addl
push
push
out
sahf
sub
into
jl
popf
stos
lret
push
inc
rol
jnp
in
pop
adc
fcomp
jno
les
fisttpll
inc
jae
push
ss
and
ds
jp
scas
sub
or
mov
cli
mov
mov
gs
sbbl
push
mov
mov
cwtl
pop
loope
sub
std
pop
rolb
mov
sti
lods
push
mov
jle
mov
xchg
pop
mov
xor
or
dec
or
sahf
adc
in
pop
xor
sub
stos
jg
or
inc
fstpt
push
cmpb
shrb
ds
into
pop
aam
repnz
ret
repnz
fadds
in
mov
ja
loop
dec
loop
loope
mov
mov
bound
mov
pop
in
inc
lret
enter
daa
jle
xchg
rcrb
jmp
mov
lods
std
inc
and
pushf
je
inc
in
or
nop
in
outsb
jmp
leave
sti
push
call
sub
clc
stos
mov
mov
sarl
mov
xchg
arpl
xor
jmp
lret
pop
fstps
push
in
mov
xchg
dec
cmp
or
cmp
mov
imul
pop
jecxz
cld
xlat
push
sbb
xchg
push
or
leave
pop
in
shr
lock
daa
push
test
push
jb
xchg
cmpsb
push
mov
push
icebp
ficomps
loopne
push
pop
mov
inc
pusha
mov
out
jnp
arpl
pop
push
mov
lods
pop
mov
fcmovnb
lods
repz
fildll
jns
sti
push
jp
aas
xlat
push
bound
sub
push
mov
stos
lret
fstpt
dec
inc
sbb
dec
mov
xchg
inc
mov
clc
mov
popf
xor
scas
jo
loop
test
dec
fisubs
fwait
dec
rolb
pop
adc
shlb
and
push
test
and
into
push
es
fwait
pop
cmpsl
mov
shlb
sbb
loop
mov
lcall
cmp
test
stos
pusha
bound
std
cmc
dec
jne
cwtl
popf
push
loopne
std
cmpb
xchg
fidivrs
movsl
add
and
cltd
jns
dec
add
mov
test
dec
inc
negb
pop
mov
sub
ss
idiv
mov
int3
bound
lret
push
ss
ret
sub
push
xchg
mov
xchg
sub
pusha
out
push
clc
mov
xor
cld
xlat
aaa
enter
cld
mov
notb
fcomps
sarb
pusha
loope
pop
jg
out
mov
cltd
popa
push
pop
iret
cmp
push
clc
mov
loope
mov
daa
sub
mov
dec
push
adc
inc
stc
cmp
sbb
addr16
in
fdivrl
lahf
clc
xchg
push
imul
mov
imulb
mov
jecxz
xchg
movsb
mov
pop
xchg
push
xor
test
and
xlat
into
sbb
mov
sub
repz
fwait
push
inc
pop
xchg
lcall
cld
aad
imul
sub
and
and
or
push
insl
int
lret
inc
push
int3
jle
cmpsb
inc
test
fcmovbe
leave
stos
rcl
rcrl
xor
jbe
jnp
and
cmp
dec
lods
xchg
push
rcl
cmp
fisttpll
xchg
out
arpl
les
bound
ja
xchg
out
sti
dec
and
es
mov
xchg
ret
xchg
jns
stc
xchg
lea
dec
mov
mov
bound
xchg
jae
adc
lods
or
stos
xchg
push
nopl
mov
add
dec
aaa
xchg
add
cmc
add
add
add
fsubrs
into
adc
test
mov
adc
adc
repz
popf
dec
dec
jb
adc
pop
icebp
fsubr
ror
push
add
push
sbb
orb
push
pop
pop
jp
mov
sti
push
cmpsl
jbe
hlt
sbb
lds
ljmp
and
loop
fisubs
lds
fldt
into
icebp
nop
loope
test
loop
leave
aaa
cmp
cli
and
js
jle
in
faddl
aas
cli
inc
and
outsb
in
xor
popf
loopne
cmovs
cmp
adc
push
inc
daa
aad
scas
mov
outsl
or
ds
jns
les
das
mov
aam
cli
out
dec
push
sub
addr16
mov
ret
mov
add
push
xor
out
mov
fsub
mov
push
lods
cmp
mov
adc
jge
fmull
dec
jl
lods
dec
add
mov
aaa
mov
nop
test
ja
inc
outsb
sub
insl
lahf
fs
sti
movl
movsl
adc
xchg
mov
pop
stos
ss
ss
ljmp
mov
cmc
push
into
push
add
dec
aad
gs
jns
or
divw
mov
pop
adc
pop
pop
notb
inc
xor
ds
dec
fbld
cmp
add
in
dec
push
inc
xor
call
movsb
aad
popa
in
push
xor
addl
test
push
scas
push
pop
in
insb
lods
or
lcall
movsb
inc
adc
jge
fnstenv
add
arpl
pop
add
inc
push
std
insl
and
stc
mov
in
cmp
cwtl
or
pop
pop
xchg
imul
movsl
outsb
pop
repz
push
pop
popf
cwtl
push
sub
cli
xor
jae
or
mov
popa
icebp
fadds
cmpsb
pop
push
dec
jae
in
cli
cmp
jbe
and
pop
nop
in
lock
pop
pop
les
gs
lock
addr16
sbb
dec
or
test
fdivl
jno
cmpl
mov
xchg
cmp
into
cmp
sub
or
ret
test
mov
cmp
and
inc
shr
jae
ret
dec
inc
call
push
arpl
pop
or
jecxz
add
adc
in
adc
cwtl
lcall
cmpsl
pcmpeqw
aas
addl
mov
out
repnz
ss
and
stc
sbb
or
movzbl
imul
or
mov
mov
clc
popa
add
add
lret
je
sarl
fnsave
xchg
cs
or
lock
iret
lock
pop
mov
or
iret
xor
lea
dec
pop
xchg
int
sbb
cmp
sub
mov
xchg
sub
aad
out
shl
and
inc
nop
sbb
test
push
push
xchg
mov
mov
mov
dec
rcrl
rcl
xchg
lahf
mov
loopne
data16
lds
pop
aam
pop
stc
jmp
pop
xor
dec
or
push
mov
or
or
repz
imul
cli
and
das
sub
mov
insb
fnstcw
daa
out
in
int3
jns
lds
stos
data16
hlt
ret
push
push
leave
jp
and
rolb
scas
mov
es
sbb
les
push
sbb
or
add
fidivs
pop
ja
lock
gs
roll
icebp
imul
pop
push
icebp
inc
enter
adc
inc
jle
fcoml
cmp
pop
pop
mov
xchg
xchg
add
mov
nop
lods
cld
sbb
aam
dec
jnp
cltd
xchg
pop
mov
and
lret
bound
xor
or
aad
outsb
mov
addr16
inc
in
je
sub
sbbl
or
ja
inc
outsl
lds
jp
inc
aad
mov
mov
xlat
js
pusha
and
mov
push
adc
ja
sahf
subb
sub
jne
lret
in
mov
lret
sahf
mov
push
and
add
jnp
arpl
test
xor
int
push
loop
aaa
pop
js
loopne
xchg
scas
xchg
push
xlat
add
scas
add
mov
clc
popa
push
cmp
gs
mov
pop
sub
lret
int
pop
mov
movsb
jmp
test
ss
leave
sbb
inc
pop
xor
add
mov
mov
xchg
adc
push
lds
and
bound
loopne
add
cwtl
pop
subl
and
push
into
test
orl
aas
in
mov
out
pop
je
jae
push
out
fs
mov
fsubl
daa
jl
imul
or
xchg
cmc
add
sbb
mov
mov
mov
dec
mov
pop
sbb
or
int3
repnz
pusha
mov
cmpsb
xchg
adc
in
rolb
dec
jne
loope
xor
sbb
push
jmp
call
inc
test
in
add
lcall
push
aas
mov
lods
or
lods
push
inc
sub
pop
push
aad
and
aam
ja
sarb
jl
popa
orb
scas
sbb
fwait
je
dec
sub
pop
outsl
jne
xor
xchg
adc
or
shlb
jnp
je
aam
dec
repz
insb
xchg
mov
dec
call
out
imul
mov
sbb
in
ds
xorb
sti
cwtl
push
sahf
add
push
push
lret
cmpsl
xchg
out
ds
outsb
cmp
sbb
cmc
xchg
decl
loop
arpl
cmc
mov
imul
leave
pop
xchg
mov
jl
mov
inc
dec
testb
test
jmp
loopne
sbb
mov
cmc
cmp
fldcw
addb
xchg
mov
icebp
sub
lret
add
cmpsb
int
push
stos
jo
or
lea
pop
mov
in
movsl
cmp
outsb
inc
xchg
fwait
add
movsl
or
xchg
pop
mov
inc
sbb
data16
sub
cmp
cmc
add
push
stos
mov
in
sbb
jns
or
pop
cltd
push
inc
cmc
or
dec
fcomi
shrl
add
mov
push
or
mov
jns
xor
ljmp
jns
sar
fs
movsl
add
cwtl
fsubrl
pop
jnp
pop
or
cmp
stos
jmp
adc
mov
movsl
hlt
sbb
add
std
xchg
stc
outsl
pop
sti
jne
jp
aaa
movsl
inc
je
fucomi
divl
sbb
dec
push
pop
mov
dec
push
adc
out
pop
ljmp
push
ds
xchg
fsub
fs
insl
mov
sbb
addr16
pop
rcrl
pop
sbb
aam
das
std
mov
or
out
into
fcomp
mov
test
ficoml
fwait
sbb
xor
mov
ds
in
js
arpl
sub
fnstsw
imul
outsb
fwait
aam
push
movsl
adc
jns
outsl
push
dec
dec
cmpsb
xchg
popf
sbb
sub
push
test
xchg
in
ret
sbb
pop
dec
dec
pop
mov
cmp
jbe
out
pusha
push
xor
repz
mov
xchg
inc
or
ret
fwait
rclb
xchg
push
imul
push
adc
insb
mov
int
in
dec
jmp
ss
cmpsb
les
xchg
xchg
mov
push
sbb
mov
or
out
lret
cmp
push
mov
mov
int
faddl
rclb
sub
mov
push
gs
mov
into
mov
fnstenv
sarl
push
mov
cmp
xchg
rcrb
xchg
mov
xchg
dec
jns
cmp
clc
dec
out
pop
insb
shrl
xchg
adc
cs
bound
sbb
xor
out
repz
gs
cmpsb
daa
out
std
adc
cld
pusha
mov
push
cmp
insl
mov
xor
rclb
dec
cmpsb
punpckhdq
pop
lahf
dec
or
xor
xor
dec
cwtl
cltd
jge
mov
xor
pop
jecxz
xchg
imull
sahf
add
push
jae
xor
mov
push
sub
xchg
add
mov
out
sub
leave
mov
add
sahf
std
popa
jo
jbe
dec
bnd
push
movsb
xor
mov
dec
insl
imul
cli
lahf
mov
into
cmpsl
mov
popa
mov
test
fbstp
jp
mov
pop
xchg
xor
aas
push
fcmovnu
mov
rolb
je
dec
push
xchg
add
ja
ja
sahf
stos
or
lock
mov
mov
popa
sub
dec
or
ret
pop
je
shrb
out
xchg
dec
js
in
push
std
shll
and
rcl
out
das
lods
mov
stc
push
sub
inc
test
inc
daa
arpl
sbb
pop
add
mov
cmp
xlat
rolb
gs
ret
jb
insl
faddl
push
shr
push
cltd
adc
std
push
fmul
jecxz
cld
sbb
jmp
sbb
iret
outsl
outsl
push
sbb
mov
scas
lock
loop
idiv
mov
inc
jbe
out
cmp
rcr
into
mov
mov
inc
mov
loop
sbb
inc
and
div
sbb
push
lods
add
mov
lret
inc
sbb
das
mov
cmp
nop
xor
insl
cwtl
sbb
mov
lods
sarl
les
out
xchg
cltd
inc
mov
xchg
sbb
sti
test
dec
push
pop
cmpsb
jo
cmpsb
movsb
jb
mov
add
jmp
aaa
xchg
cmp
push
std
inc
sbb
sbb
outsb
pop
mov
das
jne
pop
sbb
sbbb
loope
icebp
dec
or
bndldx
inc
or
lds
push
adc
xor
idivb
idiv
cmp
and
int
adc
mov
sbb
leave
imul
adc
mov
mov
mov
in
mov
adc
lods
clc
ret
cmp
adcl
ds
push
adc
lds
add
fwait
inc
cmp
or
xlat
hlt
or
mov
dec
and
movsl
inc
movsl
inc
and
imul
mov
dec
ljmp
cmpb
int3
daa
stos
mov
mov
sarb
dec
mov
xchg
jmp
pop
aad
sub
stc
xchg
lods
stos
jo
jp
lds
mov
lock
lret
jo
dec
call
lcall
pop
je
cmp
adc
jb
add
or
push
adc
jle
push
xchg
mov
push
insb
mov
pop
clc
push
cld
xchg
leave
xchg
dec
mov
addr16
sub
repz
push
rcrl
mov
stc
jo
push
mov
pop
fstps
adc
into
inc
sub
xor
stc
xchg
and
ljmp
shll
popa
leave
outsb
sahf
sahf
repz
mov
mov
clc
dec
xlat
xchg
adc
je
mov
mov
in
adc
xchg
jge
test
xchg
iret
push
mov
popw
adc
and
jg
mov
btc
sub
fcomps
in
jo
sbb
test
lcall
loope
imul
add
lcall
mov
and
adc
mov
cmp
inc
sub
in
ret
cwtl
jg
xorl
mov
and
cmpsb
jmp
sbb
inc
sub
push
sub
push
divb
out
imul
cmp
incl
jmp
out
mov
sbb
aaa
repz
lcall
lods
mov
aam
mov
ja
call
repz
scas
inc
and
xor
out
testb
xor
add
in
addr16
xchg
push
rol
sbb
adc
adc
in
jg
out
test
jge
xchg
mov
and
cmp
lods
fiadds
popa
aaa
xchg
lret
add
fimull
pop
dec
rorl
mov
sub
xor
add
adc
jae
mov
add
ljmp
fwait
lods
ret
jmp
out
inc
mov
loope
dec
mov
inc
dec
loopne
lret
cmp
mov
dec
call
and
pop
mov
cmpl
ret
dec
ror
mov
inc
fidivrs
icebp
mov
sbb
adc
cmp
stc
call
xor
daa
push
scas
jns
push
dec
sub
add
mov
jmp
repz
add
jne
cmp
loop
in
and
mov
fcmovnbe
rclb
inc
mov
insl
repz
jae
push
loope
pop
sahf
xor
movsb
sub
insl
sbb
dec
xor
scas
std
shlb
fnstcw
jle
testb
cmp
ja
inc
std
ss
stc
fcomps
scas
test
jb
pop
xor
jns
ret
and
xchg
in
push
popf
dec
and
std
out
mov
shl
sub
fldl
dec
mov
xchg
call
add
xor
mov
push
add
imul
js
loopne
adc
pop
xor
dec
nop
fwait
leave
jle
arpl
mov
xor
or
mov
mov
lods
roll
pop
sarb
dec
and
inc
stc
and
frstor
loope
aaa
clc
inc
hlt
rcl
jae
icebp
xchg
xchg
mov
iret
sbb
xchg
gs
shrl
loopne
and
sahf
mov
pop
dec
dec
rcrb
es
lcall
ss
ret
int
cwtl
sbb
aam
sbb
cltd
icebp
add
push
lret
or
cmpsb
insl
into
lcall
and
or
or
scas
cmpsl
cltd
sub
aam
ficoms
lahf
bound
dec
dec
out
jo
sahf
push
push
outsl
jmp
mov
out
iret
inc
jae
mov
mov
outsl
xor
ds
xchg
addl
ds
cltd
jb
ret
sub
push
insb
jp
ja
mov
add
and
pop
mov
nop
fidivs
inc
push
dec
lahf
adc
aas
pop
ds
jl
and
mov
shrb
or
cmpsl
mov
jns
jmp
mov
push
xlat
dec
out
rcrb
lea
pushf
push
cmp
push
sti
lea
jnp
loope
jno
cmpsl
sbbl
xor
gs
pop
je
shr
jnp
mov
arpl
and
into
and
in
cltd
std
leave
iret
mov
cmpl
and
adc
mov
mov
movsl
loop
jo
mov
insb
and
sarl
jbe
dec
aas
test
jle
push
fdivrs
push
xor
shr
mov
cltd
sub
rcrl
ja
bound
mov
rolb
adc
lcall
aaa
xchg
xor
mov
enter
xchg
out
loop
inc
lock
loope
sbb
push
xlat
bound
sbb
jb
sti
cmp
std
scas
sub
sub
adc
mov
fstl
inc
cmp
mov
xor
pop
pop
test
xchg
in
or
jnp
pop
sbb
xchg
data16
pusha
les
sub
fidivrl
xlat
xchg
cltd
popa
jp
xor
outsl
cmp
push
pop
js
popa
aas
popa
int3
mov
std
sbb
push
xchg
scas
xor
and
sbb
ffreep
loopne
rorb
mov
xor
roll
push
sub
lahf
add
ja
sub
pop
and
repnz
imul
mov
sbb
mov
mov
cltd
dec
and
push
xor
lock
das
adc
push
outsb
gs
jns
pop
insl
insb
pop
imul
inc
mov
das
inc
scas
rcr
shlb
lock
mulb
leave
jo
mov
icebp
mov
das
ljmp
mov
mov
cmp
or
popa
xchg
mov
xor
cmp
push
xor
and
and
in
insb
cmp
mov
dec
sbb
ss
jno
mov
jns
nop
xchg
mov
je
mov
cmp
push
mov
pop
xor
mov
das
xchg
lods
neg
sub
iret
punpcklbw
pop
rorl
pop
bound
test
xor
clc
imul
pop
test
push
jae
xor
pop
sbbl
jg
sarb
stc
hlt
xchg
sbb
push
jne
out
pusha
cmp
clc
jl
jecxz
and
and
lahf
xchg
or
cmp
mulb
mov
negl
roll
repz
sbb
in
push
dec
push
xchg
and
add
lret
cli
popa
mov
xor
in
aas
mov
fs
and
std
ss
incb
notl
adc
inc
mov
push
inc
push
xlat
push
into
movsl
push
lcall
xor
mov
xchg
lahf
arpl
cmp
sbbl
ret
pop
mov
clc
ficoml
in
aad
xchg
sub
inc
dec
scas
rcl
xchg
xchg
lea
std
ds
xchg
jbe
or
or
add
hlt
fidivs
xchg
std
dec
jbe
test
pandn
shrl
push
lods
stos
mov
sar
ficomps
mov
jo
add
imulb
sbb
sub
cmp
stos
fwait
and
cmpb
jge
xchg
xchg
cwtl
add
push
enter
insl
jp
pop
cvtps2pd
pop
enter
sub
aas
push
add
or
repnz
mov
insl
lds
inc
xchg
push
mov
xor
and
sub
cld
xchg
stos
sbb
cmp
cwtl
fmul
lret
scas
sbbl
out
jge
les
js
movsb
mov
inc
negb
xchg
cmp
fsubrs
mov
shrb
xchg
jge
xchg
das
and
test
testb
popa
aam
or
sbb
xlat
jmp
icebp
pusha
dec
js,pn
out
fcmovu
push
out
arpl
dec
inc
cmc
jmp
test
rdmsr
and
mov
lret
or
mov
mov
test
cmpl
popa
icebp
loope
stc
inc
aam
sbb
lods
out
xlat
jecxz
js,pt
push
out
stos
int3
dec
xor
lcall
xchg
adc
jb
pop
loopne
sbb
push
cld
push
divl
jns
add
cmp
add
leave
rcrl
push
pop
outsl
inc
jle
in
sbb
pop
add
jbe
mov
cmp
mov
and
repz
xchg
sub
add
dec
xor
add
sbb
mov
mov
pop
xor
sbb
cld
in
daa
or
std
inc
jae
xchg
adc
rorl
fildll
pop
push
jo
fwait
dec
cmp
pop
sbb
push
jp
push
push
jb
in
or
shl
adc
inc
fisttpl
int
stos
and
imul
mov
mull
ret
in
stos
aas
cmp
xchg
orl
inc
xchg
or
das
clc
xor
add
push
inc
jo
faddl
cmpsl
xorb
or
rcr
and
and
dec
je
or
inc
mov
xchg
ret
ret
dec
sub
scas
in
mov
jmp
cmpsl
inc
lods
mov
sub
sbb
adc
cmp
cld
lret
dec
xchg
shlb
pop
sub
ja
sarb
fstpt
test
jp
mov
xchg
jl
mov
pop
or
jns
dec
iret
rcr
jmp
inc
pop
add
mov
cltd
cmp
cwtl
inc
call
adc
sbb
jge
and
int
push
sub
xor
ja
repz
fcomps
test
adc
sbb
jmp
std
sub
insb
sub
mov
in
repz
adc
scas
mov
rolb
pop
fisubrs
xchg
xchg
lret
andl
and
adc
push
or
and
ja
cmp
andl
lods
scas
push
mov
fsubs
sub
aaa
push
sbb
aaa
cwtl
mov
lea
andb
xor
ss
imul
shlb
push
mov
push
lahf
stos
stos
xchg
sahf
es
out
xor
call
sub
sub
and
sbb
inc
jo
xchg
incb
lods
movsl
aad
lcall
pop
pop
pop
enter
push
adc
and
into
movsb
std
movb
fbstp
jmp
push
xchg
xchg
inc
daa
test
call
push
lret
incl
and
cmp
push
cmp
cmp
ljmp
ja
push
push
data16
xor
fwait
mov
cli
je
or
in
stos
test
shl
inc
fcmovne
insl
cmp
jecxz
addr16
inc
int3
inc
outsl
push
ret
cmc
insl
jecxz
pop
stc
cmc
jl
push
icebp
ffree
pop
ret
cmp
add
out
clc
inc
push
cwtl
pop
mov
testb
sahf
push
jecxz
add
fcomp
lock
jbe
test
les
pop
sbb
xchg
adcb
fdivs
cmp
insb
mov
sarb
daa
les
ds
out
jo
fadd
insl
jo
xor
sbb
test
cmp
cwtl
jecxz
mov
int3
aaa
or
and
push
out
popl
fcmovne
inc
push
push
pop
and
mov
arpl
xchg
into
es
xchg
repz
stc
jns
repnz
cltd
push
sub
inc
cmp
push
movsl
lea
mov
scas
add
movsb
xchg
out
xchg
cld
pop
mov
mov
jno
pop
fcomps
sbb
xchg
push
jbe
lret
daa
add
fidivs
inc
leave
rorl
mov
jecxz
lret
imul
popa
push
inc
ss
jecxz
jg
cmp
mov
sbb
xchg
inc
enter
test
fucomip
rcrb
aam
xor
call
mov
pop
dec
test
mov
push
ja
repnz
and
in
loope
mov
mov
xor
jg
xor
dec
xor
pop
icebp
jge
insl
int3
and
fisttpll
push
ja
ret
std
xchg
cld
push
out
mov
jnp
jg
stos
fdivrp
add
jo
add
pop
ds
adc
cli
xor
popa
ljmp
jb
out
adc
add
cs
cmp
mull
andl
shrl
pop
and
and
aaa
xor
and
js
neg
xchg
dec
add
jge
in
mov
popf
cltd
divb
mov
cli
rcrl
out
leave
nop
and
sbb
daa
arpl
push
add
mov
sub
dec
push
pop
pop
lods
xchg
sub
jge
adc
xchg
sbb
mov
jns
test
scas
daa
cmp
stos
pusha
pop
push
sbb
out
stos
stc
sbb
inc
enter
mov
mov
dec
cmp
hlt
push
mov
mov
adc
daa
jo
enter
mov
jg
or
sbb
or
call
xchg
rorl
insl
lret
adc
mov
repz
push
mov
fdivp
icebp
mov
movsb
inc
jbe
adc
das
ret
cli
aas
data16
outsl
out
xchg
sub
push
shl
mov
inc
test
sbb
inc
test
clc
push
movsl
gs
cs
or
data16
testb
shrl
daa
adc
xlat
rclb
push
adc
inc
mov
jmp
mov
sbb
pop
sbb
xchg
movsl
cmp
lret
pop
clc
outsl
jb
testb
shr
into
dec
enter
push
lahf
imul
sub
push
sbb
add
lahf
mov
ret
shlb
adc
scas
cmp
xor
push
mov
jo
xchg
adc
mov
lret
sbb
cmp
push
jns
insb
jo
add
loop
xchg
iret
xor
pop
test
movsl
into
add
mov
pop
jmp
fs
jg
jb
arpl
fsubrl
add
shr
xchg
adc
dec
push
pop
cmp
mov
ficompl
icebp
jg
imul
xchg
ja
and
in
aas
negb
jo
mov
mov
adc
imul
inc
imul
push
pop
sbb
popa
popa
outsl
xchg
inc
adc
out
mov
cwtl
adc
insb
ret
cmp
add
loop
pop
ret
add
test
stos
push
cmp
dec
cmp
push
loope
xor
inc
cmp
cli
in
insl
xor
push
push
add
inc
xor
ljmp
mov
pushf
cmp
sbb
pop
movb
push
or
out
cmp
lods
xor
push
or
or
cs
scas
push
push
mov
pop
mov
popf
xor
stos
popf
add
scas
dec
arpl
adc
jl
adc
shll
jmp
das
ud2
mov
mov
sbb
mov
popf
into
sbb
inc
std
dec
jnp
cmp
shlb
ljmp
imul
mov
mov
mov
cs
cmp
popf
mov
js
xchg
cmp
sub
mov
dec
pushf
call
and
xchg
insb
lods
mov
cs
pop
or
jecxz
inc
sub
dec
adc
inc
cmpsb
int3
mov
mov
jmp
push
add
addr16
outsl
cmpb
jg
add
xchg
mov
mov
das
xor
push
fldcw
imul
aas
sbb
pop
mov
movsl
push
or
and
xor
add
xor
stos
and
lock
adc
mov
stos
inc
inc
adc
testb
pop
xor
jns
scas
sub
jg
loope
pop
lock
aas
cmp
insb
insb
out
cwtl
dec
mov
jnp
cmpsb
xchg
cmp
outsl
ret
inc
rcll
cwtl
in
add
outsb
pusha
test
cli
and
popa
mov
iret
call
data16
mov
or
jae
pushf
mov
xchg
lcall
mov
push
jbe
out
pop
ss
mov
add
adc
cmp
or
inc
mov
push
xchg
pop
jle
mov
inc
repz
lock
jp
adc
and
mov
adc
loope
test
mov
stos
icebp
into
fistps
adcb
jmp
fs
clc
ds
dec
cmpb
fnstenv
sub
cmp
sarl
outsl
in
inc
dec
cmpsb
mov
sub
pusha
and
inc
loop
cmp
scas
cld
jnp
xlat
leave
adc
sub
fxch
mov
mov
gs
stos
cmovne
pop
aas
and
fdivp
cld
pushf
in
stos
mov
jge
mov
mov
xchg
cmpsb
push
jae
jae
inc
and
lcall
mov
jmp
mov
ljmp
mov
jl
xchg
cltd
repz
and
push
adc
push
inc
lock
jne
mov
popf
xchg
aad
adc
pop
sbb
repnz
or
pavgw
outsl
sub
fidivrs
and
sti
movsb
dec
dec
mov
leave
je
outsb
mov
lods
push
ljmp
ret
xchg
outsl
ret
xor
add
ja
pop
push
rorb
adc
pusha
push
std
ss
shlb
cmp
test
or
je
rcrb
cmpsl
mov
mov
shlb
or
in
mov
adc
incl
xor
xor
or
rolb
push
adc
cmc
push
xlat
mov
or
stc
mov
mov
or
fnstenv
cmpsb
sahf
xchg
icebp
lds
lcall
stc
rcrb
loopne
dec
addr16
mov
sar
pop
sub
sahf
loopne
mov
jne
mov
push
lcall
std
adcl
and
sub
lret
dec
mov
jp
jge
push
test
jg
jecxz
leave
mov
fs
jle
icebp
leave
jmp
loop
cmpsb
mov
sub
mov
xlat
jmp
mov
pop
stos
test
sub
xchg
decl
dec
add
pusha
ret
in
cltd
inc
imul
add
ja
pushf
fildl
cltd
lahf
jecxz
gs
loop
je
imul
dec
fsubrl
sub
cli
mov
xchg
inc
dec
mov
jne
inc
mov
xor
mov
cmp
dec
mov
dec
pop
cmpsl
jno
or
adc
int3
cmp
cld
fiaddl
scas
push
xor
push
popf
xacquire
pop
sub
jb
jbe
dec
je
pop
cmc
mov
sub
stos
mov
cmp
dec
into
fwait
in
inc
shr
xor
sbb
inc
cmp
iret
cld
or
aas
and
lea
xlat
aas
add
addr16
sub
mov
call
jle
adc
rorl
js
in
test
adcl
and
testl
fisubrl
test
push
je
mov
ret
ds
cld
pop
jb
sbb
sbb
jo
inc
mov
add
mov
jnp
push
flds
push
adc
mov
xor
shr
sub
mov
repnz
pop
imul
jp
popf
or
outsl
in
int3
mov
adc
bound
js
arpl
test
es
mov
pop
pop
pop
push
popf
pop
orl
jmp
sbb
push
mov
dec
sub
es
scas
xor
cmp
xor
sbb
pop
jnp
jno
lods
sub
movsl
or
in
jg
out
or
push
cld
outsb
jmp
aas
and
xor
cmp
sbb
out
jge
pop
push
xor
push
dec
inc
xchg
sbb
jmp
sbb
shrl
ja
mov
aaa
dec
in
mov
jbe
imul
cmp
lods
and
mov
sub
cmp
fwait
sub
fs
shr
pop
pop
or
jle
push
imul
std
mov
test
xor
ja
mov
faddl
inc
push
aad
mov
mov
aad
pop
pop
jo
jnp
push
lret
cld
cmp
out
jbe
pop
les
in
in
shll
jg
pop
das
and
inc
cltd
push
cmp
xor
stos
es
je
jae
repnz
adc
sub
in
or
popf
insb
dec
sbb
xchg
fs
inc
add
or
cmp
fisubl
movsb
or
arpl
lods
sub
clc
sbb
pop
call
sbb
and
movsl
jbe
push
test
lds
in
sbb
push
xchg
add
ret
mov
imul
insl
mov
cmp
cmp
cwtl
and
add
test
iret
push
push
add
test
inc
push
aaa
outsl
add
loope
xor
fidivl
mov
in
adc
inc
sbb
mov
inc
ret
imul
pop
dec
insb
jle
pop
popf
xor
iret
xor
add
cmp
lds
repz
inc
mov
callw
mov
pushf
xchg
fcmovne
jns
lret
push
pop
cmp
test
jne
push
jbe
lea
inc
sahf
test
jecxz
push
xor
cmp
mov
push
notb
jecxz
stos
lret
clc
push
testb
push
lret
push
xchg
arpl
xor
sub
or
mov
mov
pop
enter
pop
ljmp
imul
adc
out
outsb
mov
adc
lods
repz
inc
in
mov
add
and
test
cmp
movsl
push
and
enter
rolb
push
jbe
pop
cmp
je
xlat
js
lret
inc
aad
jne
push
roll
jle
ret
lret
sub
lea
scas
xor
xchg
inc
popf
idiv
cltd
mov
std
ret
add
push
lock
inc
pusha
test
imul
xchg
mov
mov
test
movsb
or
loop
into
movsb
in
xchg
sahf
pop
adc
repnz
push
fcom
loope
mov
push
mov
pop
pop
movsb
xchg
add
xchg
es
mov
mov
pop
inc
sub
roll
fwait
mov
mov
sbb
jo
in
enter
xor
cmp
icebp
ja
sub
mov
mov
negb
adc
xchg
cmp
inc
sbb
and
dec
push
push
cli
hlt
outsl
pop
sarb
cwtl
hlt
mov
xchg
movl
inc
jae
mov
push
mov
push
xor
int3
fsubr
jbe
push
pop
or
cwtl
incl
iret
loopne
lds
or
xchg
mov
sbb
mov
fwait
scas
dec
pushf
fs
pop
imul
pop
xor
mov
xchg
sub
fimull
pop
stos
jae
inc
lea
int
daa
cmc
jp
test
inc
pop
push
sbb
loop
in
fcmovb
adc
push
sbb
xchg
inc
adc
movsb
rorb
pop
mov
imul
cld
sahf
and
repnz
fwait
imul
xchg
xor
ficomps
imul
mov
pop
or
jle
jle
shr
fsubs
loopne
mov
ljmp
xchg
mov
jne
mov
cmp
adc
mov
stc
xor
ds
loope
xchg
mov
call
fnstsw
jecxz
dec
dec
adc
and
dec
leave
xchg
out
stos
sbb
lods
jb
aas
hlt
pop
loopne
xchg
jae
es
sbb
out
lcall
sahf
mov
inc
xor
popa
jno
test
aad
dec
inc
dec
bound
cmp
jecxz
orb
jne
pop
push
in
loop
add
add
addr16
pop
push
mov
ljmp
fisubrs
mov
mov
adc
aad
mov
cmp
inc
push
mov
ss
fs
sub
shlb
into
cmpsb
add
lds
pusha
and
enter
cmp
xchg
inc
movsl
gs
mov
mov
sub
filds
mov
inc
jl
mov
sbb
push
xchg
push
mov
fcoml
push
mov
aad
pop
insb
into
mov
fs
xchg
sub
push
add
mov
lods
and
clc
mov
rep
inc
dec
jp
repz
pop
dec
push
shll
test
arpl
sub
inc
xor
sti
mov
jle
aam
stos
sahf
push
mov
mov
mov
pop
das
mov
leave
sub
xchg
movsb
push
aas
push
imul
sarl
sarb
xchg
mov
out
pop
pop
mov
das
cmpsl
mov
outsl
stos
shrb
push
sbb
sub
out
xchg
sahf
daa
les
insl
call
mov
nop
cld
push
aas
sub
push
cmp
aad
sbb
sbb
loop
xchg
ret
push
mov
xor
mov
adc
rcll
inc
and
pop
sti
xchg
bound
jo
and
xor
xor
mov
test
loope
call
cmpsl
xor
rorl
cld
inc
jb
xchg
lods
rcll
repnz
rcr
jb
push
push
pop
xor
jl
mov
bound
fisttpl
ret
sbb
mov
pushf
stc
test
insb
imul
mov
push
add
sub
adc
movb
mov
xor
jg
lock
test
mov
fimull
lahf
enter
shr
rcl
sub
cmp
icebp
sahf
loopne
ja
clc
stos
xor
sbb
jns
std
pusha
scas
dec
das
mov
sub
push
aam
mov
xchg
push
iret
xor
mov
lds
lret
dec
and
aam
adc
iret
mov
in
ds
and
adc
xchg
mov
xchg
popa
dec
xorl
push
jb
dec
and
push
repz
out
nop
sub
insb
loop
in
mov
sub
sub
repnz
and
mov
cmp
call
scas
and
aam
jnp
and
mov
iret
jbe
ljmp
or
loopne
push
push
cmc
inc
cmp
pop
sub
inc
inc
mov
jp
cmpsl
mov
mov
mov
push
xchg
lods
sub
push
lret
enter
fisubs
int3
cmp
xlat
push
mov
xchg
lods
fcoml
mov
and
lret
xchg
mov
lcall
sub
dec
sub
xlat
pop
sbb
fcoml
xchg
xor
sbbl
ja
mov
pop
sub
push
lret
bound
lret
je
lahf
push
cmpsb
dec
popa
mov
sub
icebp
adc
outsl
pop
sbb
test
inc
lret
mov
push
dec
fcoms
adc
xchg
sub
jnp
hlt
sub
push
sub
jb
in
dec
push
cmpsb
and
push
push
push
sub
enter
mov
sbb
fldz
jecxz
lock
push
dec
js
out
adc
iret
mov
and
xorl
mov
movsb
mov
push
jbe
popa
data16
xchg
mov
inc
fwait
and
fdiv
xor
cmc
jp
and
push
jne
dec
repz
icebp
std
enter
xchg
loop
pop
js
push
lea
mov
subl
jo
test
sbb
fmuls
fldenv
jbe
dec
xchg
mov
pcmpeqb
xor
ds
es
scas
xlat
addl
mov
pop
mov
scas
and
negb
xor
pop
fisttps
adc
xchg
call
sbb
adc
cmp
imul
push
xchg
imul
mov
lock
and
mov
fisubrl
cmp
or
jle
js
jae
ja
inc
inc
lcall
cmp
aaa
cmp
std
jp
fidivrs
add
sar
sub
cwtl
enter
sahf
and
mov
mov
jecxz
pop
iret
repnz
mov
loope
test
add
pop
popa
cmpsl
rcrb
pop
test
sub
cmpsb
jae
or
sub
lret
insl
in
shl
cltd
xchg
cld
inc
test
pushf
repnz
fnstenv
icebp
sbb
or
sub
lret
nop
xchg
dec
lcall
enter
jns
pop
cmp
mov
and
and
or
xorb
jb
ljmp
mov
dec
in
arpl
sti
dec
jno
and
mov
push
call
cmp
jae
sbb
sub
subb
cli
daa
jnp
cs
jne
ljmp
test
cmp
mov
outsb
out
xor
jae
idivl
sub
push
mov
jne
sti
loopne
sti
push
and
dec
add
xor
shrb
push
cmp
movsb
xor
gs
sbb
ja
jo
in
xor
push
push
jns
or
push
xor
outsl
cmpsl
mov
pop
in
add
cmp
mov
xchg
and
pusha
shrl
ss
ja
cmp
lea
mov
xorl
mov
mov
movsl
dec
scas
outsb
fsubs
dec
push
cli
test
adc
popa
iret
fstpl
adc
mov
lea
icebp
add
dec
inc
adc
fadds
bswap
mov
std
xchg
mov
imul
pop
loop
out
pushf
movsl
mov
sbb
fcoml
aam
push
out
mov
stc
inc
sub
stos
or
rcrb
push
scas
outsb
outsl
lea
mov
xor
push
sub
fsubs
out
into
jno
jbe
xchg
jg
push
in
pusha
inc
cmp
dec
mov
aas
mov
sar
pop
inc
stos
lods
jnp
std
out
mov
ljmp
in
mov
je
pop
iret
add
sub
sbb
in
loop
cmp
fnstcw
jae
push
pop
out
test
mov
adc
lods
js
dec
fisubl
lods
and
ror
popa
xorb
ret
andb
dec
rcl
jb
sbb
add
jmp
loop
ja
insb
jmp
xor
es
adc
or
push
sub
xlat
or
dec
push
sbb
pop
jp
in
outsl
outsb
mov
pop
sub
imul
jecxz
push
jb
hlt
scas
lods
imull
inc
stos
leave
sbb
out
lods
pop
imul
push
iret
gs
mov
or
cmp
and
and
inc
loop
js
push
out
mov
and
stos
fisubl
sbbb
mov
adc
ja
adc
push
xor
stos
stc
pop
and
mov
shrb
insb
cmpb
mov
gs
cwtl
jmp
clc
loope
je
xorb
lods
dec
push
pop
lods
xlat
mov
fmuls
icebp
stos
out
insl
fs
es
cmp
aad
clc
xchg
enter
fildll
push
mov
mov
jnp
dec
call
imul
out
push
ret
aad
negb
shll
mov
call
lods
cmp
push
xlat
lock
fbld
add
mov
clc
xchg
add
rcll
and
inc
imul
xchg
fs
add
jno
jecxz
cld
popa
loopne
and
inc
lret
loop
mov
inc
push
push
mov
icebp
mov
mov
xchg
mov
scas
jle
ret
xor
or
aaa
inc
sbb
rcrb
mov
mov
sub
xor
and
loope
repnz
mov
in
cwtl
fldcw
mov
out
xor
push
mov
add
mov
jnp
pop
add
pop
xchg
dec
cmp
mov
mov
jl
sub
add
ds
fildl
mov
ret
ficompl
popf
xor
mov
nop
push
pop
jecxz
and
popf
dec
inc
jns
xchg
mov
jge
out
in
mov
sbb
xor
loop
hlt
dec
pop
mov
repz
push
jl
imul
fmull
loopne
push
xchg
mov
xor
ja
ret
movsb
adc
sti
sub
cmp
cwtl
mov
inc
sti
xchg
hlt
lock
leave
adc
xchg
dec
inc
pop
popa
and
fstps
inc
mov
testl
maskmovq
divl
mov
mov
into
and
cmpsb
lods
sti
jnp
and
mov
push
mov
popa
adc
icebp
repz
addb
push
sbb
and
adc
mov
adc
pop
je
cli
jle
aaa
cmp
xor
lahf
lds
movsb
lret
dec
andl
shll
add
jne
int
inc
cmp
xor
aad
imul
in
ljmp
movsl
dec
movsl
jns
xor
mov
rolb
xor
lea
xchg
sub
lods
cli
rcl
stos
aas
mov
dec
data16
and
cs
mov
decl
xchg
cmp
mov
mov
cld
push
es
sbbb
and
movl
cld
lock
push
pop
mov
enter
arpl
and
int
mov
fisttps
or
xchg
insb
jl
push
lods
test
xchg
and
inc
in
cmp
enter
xchg
and
adc
pop
sub
jne
xchg
fbld
jae
xor
xchg
out
lret
int
jb
jne
add
mov
in
push
sarb
fcoml
jp
aas
stc
xor
bound
xor
stos
xor
mov
hlt
lret
or
sbb
or
mov
imul
add
pop
cld
addl
jne
pop
enter
xchg
mov
sbb
mov
test
rcrb
push
fdivl
popa
mov
push
adc
sub
lods
sbb
inc
insl
add
test
movsb
cmp
clc
stc
or
add
idivb
xchg
pop
adc
or
mov
pushf
jp
and
xchg
fmull
int3
xchg
aam
sub
jb
lret
ljmp
scas
sahf
or
dec
jae
add
sub
and
mov
xor
stos
mov
int3
inc
orb
push
lahf
inc
clc
fs
mov
test
subb
fdiv
xor
push
inc
pop
sbb
xchg
pop
mov
subl
orb
dec
dec
adc
mov
jae
test
mov
cmc
dec
mov
scas
cmpsb
push
sbb
sbb
imul
xchg
ret
fwait
add
and
pop
mov
shll
xlat
xchg
add
cmpsb
cmc
js
push
push
xor
ret
mov
scas
push
ret
jbe
mov
jp
sahf
in
and
outsb
push
fdiv
inc
out
lcall
cld
in
lods
out
sub
cmpsl
cltd
mov
out
sti
adc
or
dec
out
ja
xor
sub
sti
mov
xchg
jnp
push
xor
sbb
inc
inc
cli
sub
sub
imul
adc
loopne
cmp
push
shr
cmp
je
xor
inc
mov
mov
jb
aaa
xchg
pop
movsb
dec
xchg
fsubrs
js
sbb
sbb
mov
aas
ficomps
pushl
shlb
push
nop
aad
lds
add
push
ja
push
in
int
push
sub
inc
loope
adc
push
add
push
mov
push
push
xchg
xor
mov
dec
pop
mov
popa
stos
pop
inc
loop
pusha
sub
shl
sub
adc
das
inc
neg
jge
jecxz
cmp
imul
out
lods
cmp
out
call
fwait
lret
rolb
clc
sub
in
and
int
mov
mov
sub
aaa
mov
push
or
sub
mov
sarl
ds
inc
lea
push
xchg
xchg
test
or
jno
mov
jbe
jae
stos
push
push
sbb
pop
loope
aaa
orl
xchg
fisttps
inc
mov
ljmp
call
push
sahf
pop
adc
xor
push
mull
aam
sub
inc
pop
xchg
iret
pop
fst
unpcklps
add
iret
push
xchg
ljmp
inc
out
jmp
pop
xchg
fstpl
jb
pop
dec
or
cs
cmp
mov
pop
push
mov
or
push
out
rorb
jb
sub
enter
sub
sbb
jmp
push
testb
dec
or
and
inc
push
adc
repnz
adcl
out
inc
rcr
shll
gs
out
fisttpll
push
popa
mov
pop
xor
sbbb
nop
inc
and
lcall
inc
sbb
xchg
mov
inc
cmp
push
jae
les
stos
jg
subb
push
sbb
inc
fldpi
or
bound
jmp
mov
repz
loope
push
sbb
ds
or
mov
pop
into
xchg
mov
xor
push
xchg
or
mov
pop
jb
sbbb
or
xor
jno
mov
pop
pop
and
lods
cmpsb
mov
mov
in
mov
and
jnp
add
dec
scas
inc
jne
fscale
fistps
lea
lock
jae
mov
mov
sub
imul
jp
xchg
cli
aam
push
inc
rcr
or
xor
cs
jbe
inc
hlt
lods
xlat
lds
fnstsw
jb
aam
jmp
rcll
mov
addl
leave
xor
movntq
fsubrl
cltd
sbb
xor
call
aad
xchg
fsubrs
stos
cmp
xchg
adc
cwtl
push
lea
call
cmc
aas
jmp
xor
ret
xor
inc
mov
xchg
push
ja
scas
lea
repz
inc
ss
aad
sbb
push
outsb
mov
repz
mov
test
shlb
pop
xchg
sbb
jnp
mov
in
call
or
mov
mov
popl
adcb
insl
gs
cmpsb
jmp
xlat
inc
jae
std
dec
jl
pop
mov
fs
jl
cmp
inc
cmp
daa
fucomip
sarl
pop
movb
sbbb
mov
adc
cld
std
nop
clc
fwait
loop
xor
loope
shrl
mov
mov
call
out
testl
push
ret
cs
sbb
stos
sbb
jp
insl
xor
mov
cmp
fucomip
popa
fs
movsl
fwait
mov
lods
scas
mov
or
mov
rcr
and
sbb
pop
fmulp
sbb
sti
add
jne,pn
jmp
jnp
nop
jecxz
push
mov
xor
xor
mov
ret
add
mov
ret
xchg
imul
xchg
xchg
push
push
push
cmp
mov
add
loop
sub
mul
outsb
mov
push
sub
inc
lmsw
clc
jl
or
cmc
jnp
ja
and
mov
mov
push
mov
mov
add
ret
imul
xor
pop
jbe
das
jp
pop
ljmp
mov
cwtl
test
mov
lahf
add
je
mov
push
cmpsb
jle
jecxz
xor
in
adc
cmpl
xchg
xchg
in
in
test
adc
mov
xor
lret
loope
pop
or
jle
loop
ret
cwtl
sbb
mov
mov
mov
cmp
cltd
mov
sahf
loope
sbb
pop
pop
mov
push
shlb
inc
or
pop
unpckhps
fidivl
and
fninit
js
pusha
jb
fimuls
ss
dec
mov
dec
add
mov
add
xchg
xor
push
pop
or
fstps
cld
adc
xor
mov
mov
cwtl
mov
sub
inc
jg
std
test
sti
push
cmc
push
xchg
adc
insl
test
push
inc
sbb
nop
ljmp
stos
push
nop
xor
in
mov
dec
test
movsl
mov
popf
subl
je
popf
mov
inc
leave
push
outsb
stos
fisubl
test
clc
push
xor
adc
insb
hlt
mov
push
dec
arpl
lret
dec
ficomps
xor
push
adc
pop
inc
inc
sub
inc
sbb
sbb
mov
xchg
sub
mov
divl
lock
mov
mov
sub
sti
aam
and
shlb
adc
incl
mov
lret
mov
cmc
jne
stc
rcrb
mov
jge
dec
mov
or
lock
mov
dec
dec
jecxz
jno
jb
outsb
push
push
mov
pop
addb
adc
add
rcll
cli
pop
jae
inc
sub
and
cli
test
push
bound
out
mov
add
call
lock
psubusb
jno
mov
sbb
adc
jnp
jle
mov
inc
icebp
sub
outsb
mov
aaa
enter
stc
test
test
dec
mov
xor
jbe
sqrtps
mov
lods
mov
in
aam
mov
cmp
inc
sbb
push
ljmp
sub
cmpsl
or
mov
cli
or
push
stos
and
ds
and
sub
hlt
notl
pop
test
fdivrl
mov
sbb
push
shrl
cmp
scas
out
xor
xor
jmp
jnp
in
mov
outsl
mov
xchg
cltd
xchg
mov
mov
dec
fdivrl
cltd
sbb
jmp
mov
imul
push
daa
adc
aad
or
push
out
cmp
inc
insb
imul
out
xchg
bnd
fdivrs
fldt
mov
imul
pop
lret
jb
or
pop
and
push
insb
jnp
dec
dec
mov
testl
mov
xchg
rcrb
aaa
and
bound
mov
add
fdivl
in
xor
add
insl
and
out
ret
pop
mov
mov
and
inc
ret
dec
jnp,pt
stos
push
jg
xchg
movsb
popf
xchg
test
mov
dec
xchg
jmp
push
inc
jg
xorl
push
aam
scas
mov
lret
out
xchg
ja
int3
jmp
stos
sti
jo
sbb
fdivl
mov
pop
out
sub
rcr
adc
push
push
gs
stos
inc
cmc
mov
out
mov
adc
pop
fldcw
xor
xor
aas
jbe
pusha
xchg
xchg
mov
dec
cmp
push
leave
xchg
sti
inc
mov
jmp
mov
mov
orb
add
in
pop
and
sbb
imul
lods
mov
fucomp
add
sbb
test
sbb
push
jl
andb
call
icebp
fiaddl
nop
push
xor
sbb
in
out
adc
in
mov
push
dec
cmc
mov
call
mov
cmpsb
jns
pop
cmpsb
jns
rcll
aaa
mov
xchg
ja
ret
push
jb
cmpsb
scas
mov
xor
push
lret
out
repnz
xor
stc
or
push
sub
es
add
jle
lods
loopne
in
sub
or
adc
sub
add
lods
rcrb
jno
push
jbe
or
and
outsl
cmp
cmpl
pop
jbe
push
ret
je
das
jge
leave
push
shl
popa
in
xchg
mov
xor
pop
fwait
xlat
lret
rol
jmp
lods
psllw
xchg
sbb
adc
push
test
movsb
popf
sub
lock
push
movsl
ret
cmc
imul
fldcw
xorl
lock
in
iret
jmp
jbe
adc
inc
mov
mov
sub
aad
lret
rorl
stc
hlt
or
daa
stos
movsl
test
fst
negb
inc
add
push
fisttpl
in
fwait
in
adc
sbb
adc
pop
cld
out
call
mov
or
mov
dec
mov
inc
bound
dec
or
cmp
sub
cmp
jp
pop
xchg
ret
imul
in
lds
rcll
or
cmp
in
clc
lret
bound
subl
or
add
mov
add
sbb
inc
loop
and
sub
fimuls
ds
mov
jnp
aad
mov
sub
filds
push
dec
lcall
ret
pop
scas
mov
rorl
xchg
sbb
sub
ss
cltd
inc
lret
lods
test
push
daa
jno
xchg
mov
outsl
scas
lock
popa
mov
sbb
cmp
aaa
adc
cld
imul
mov
out
or
pop
mov
add
xor
aam
mov
and
or
push
push
or
ffree
roll
xchg
xchg
fbstp
mov
mov
clc
or
test
push
into
jg
add
or
rorb
jge
cwtl
shr
jg
sbb
dec
xchg
or
and
xchg
popa
push
mov
in
cmp
es
and
push
bound
mov
outsl
dec
dec
or
cmpb
int
xor
and
jnp
jg
push
test
push
mov
in
mov
mov
in
les
xor
lret
lret
daa
pushf
inc
mov
push
inc
jle
cmp
sahf
dec
int
inc
test
pop
dec
mov
mov
add
nop
push
sbb
clc
inc
add
and
jecxz
sub
pop
in
push
push
mov
int
xchg
mov
nop
or
push
mov
mov
inc
inc
cld
pop
adc
mov
test
mov
ret
pushf
loope
int3
test
mov
lods
xor
inc
shl
enter
movsl
jno
push
jl
stos
mov
cld
cwtl
inc
icebp
rcr
gs
cltd
or
sbb
or
cmc
fnstenv
scas
imul
lret
mov
jge
stos
mull
push
fwait
scas
mov
cmc
enter
icebp
stc
adc
js
ret
sub
cld
cwtl
lahf
push
dec
js
and
push
pop
pop
jmp
push
sti
shll
mov
xor
pop
lea
inc
int3
fcomps
data16
loopne
sahf
repz
inc
into
das
mov
xor
mov
sbb
cmp
mov
mov
cwtl
pop
pop
cwtl
mov
mov
sbb
sbb
test
adc
cmp
push
or
mov
arpl
sbb
or
sbb
mov
loope
lea
mov
xchg
popf
addr16
adc
or
repz
xor
ljmp
pop
jp
mov
push
in
call
nop
cmp
lret
mov
jp
andl
popa
mov
jno
mov
jl
pop
xchg
cmpsb
push
push
push
sub
or
mov
ret
push
andl
dec
fisubl
and
mov
xor
fucomip
mov
ficompl
pop
adc
dec
loop
push
test
dec
jmp
test
add
mov
xchg
and
mov
jle
andb
sub
fstps
je
repnz
sub
push
jmp
lods
or
cmp
or
mov
dec
pop
imul
mov
icebp
lods
imul
or
push
dec
xchg
loopne
aas
pop
cmpsl
pop
push
cwtl
or
ret
sbb
sbb
ss
sbb
sbb
call
repz
jo
movsb
in
mov
out
cmp
or
mov
popf
shlb
loop
cmp
in
dec
daa
outsl
ljmp
inc
mov
clc
xor
enter
imul
stc
scas
pop
in
lods
aad
jl
jns
popf
negb
push
ds
outsl
pop
dec
cmp
xchg
dec
inc
cmp
popf
pop
xor
scas
bound
mov
add
insl
mov
iret
add
fists
unpcklps
outsb
nop
gs
fs
es
mov
pop
and
jmp
outsl
into
inc
imul
sbb
mov
inc
lock
cmc
mov
pop
insl
loope
adc
jnp
and
sbb
xor
paddsw
sbb
inc
js
stos
mov
xchg
mov
mov
pop
push
not
int3
cmc
imul
fcmove
test
ss
in
cmp
add
jg
out
mov
imulb
sub
inc
insl
fwait
movswl
push
mov
loop
jae
xchg
movsl
xchg
in
ja
pop
movsb
mov
mov
or
in
xchg
das
mov
push
dec
arpl
sbb
cmpsb
xor
sbbb
jmp
mov
jmp
testb
mov
inc
jecxz
jg
js
cmp
scas
add
fdivrl
rolb
xor
cld
and
mov
xor
sbb
dec
sub
add
sbb
mov
adc
fsubrl
movsb
mov
fmull
out
add
xchg
xchg
insb
gs
sub
cmp
dec
shll
push
outsl
lea
push
lods
jbe
xchg
in
fs
adc
mov
mov
lea
ret
mov
and
ljmp
mov
push
and
inc
pop
or
out
inc
push
cli
dec
std
lcall
mov
mov
pop
mov
lds
loop
xchg
mov
sbb
lods
sarb
out
and
test
cmp
sub
inc
std
fistpll
ljmp
aad
call
sahf
mov
fidivl
popf
loope
sbb
insb
rol
repnz
sti
lods
in
push
sub
jb
bnd
les
mov
mov
dec
lcall
insl
rorl
fcomps
or
dec
jge
mov
dec
pusha
nop
push
ds
ljmp
cmp
mov
add
adc
bound
xor
jb
pop
fs
ret
aas
cmp
cmc
adcb
in
rorl
pop
mov
and
cmpl
out
xchg
mov
arpl
cmp
mov
adc
adc
xchg
dec
lock
pop
pop
cwtl
cmp
push
push
inc
movaps
sbb
inc
push
ret
aaa
ss
rcrb
sbb
add
xor
fucomp
out
pop
xchg
push
inc
pop
push
xor
cli
jo
ds
sub
push
xchg
inc
cmpl
jns
sti
dec
pop
fs
ret
pop
jne
test
int
pop
push
lahf
notl
push
jecxz
xor
outsl
mov
aas
in
inc
icebp
mov
movl
test
clc
xor
icebp
stos
test
xchg
xor
jmp
push
lcall
js
and
add
xor
add
cmp
arpl
dec
out
cmpsl
xchg
adc
test
je
or
add
fiadds
mov
fldt
xor
lcall
mov
cmp
pop
jg
fwait
xlat
sti
ficomps
mov
jb
xchg
fninit
les
loop
shlb
loop
mov
pop
mov
jne
and
and
loope
adcb
sub
icebp
es
cmp
out
mov
inc
insl
ds
mov
jnp
pop
push
aad
add
fcoml
out
fwait
stc
or
scas
ljmp
mov
ror
es
in
jl
cmpsb
insl
push
shrl
sti
daa
aaa
sub
mov
aas
nop
push
pusha
xchg
jne
sbb
and
or
scas
and
or
xchg
dec
dec
sti
cmp
in
push
roll
out
sbb
mov
cmp
std
fdivl
sub
enter
inc
iret
push
test
adc
hlt
cs
ret
mov
hlt
lock
mov
and
arpl
xchg
fisttpll
xchg
call
inc
mov
xor
adcb
cltd
dec
dec
push
dec
push
pop
dec
dec
jbe
add
notl
jmp
xor
cmp
jne
sub
in
stc
jnp
stos
push
cli
je
mov
aaa
mov
stos
pop
std
jnp
lahf
enter
ret
sub
aam
jae
cvttps2pi
outsl
adc
scas
sub
push
or
fmul
scas
scas
push
jle
dec
rolb
popa
pop
push
or
and
xchg
sahf
add
enter
inc
add
or
lret
js
mov
xlat
xor
iret
iret
in
add
mov
jns
lahf
pop
xchg
outsl
aad
notb
das
in
push
mov
inc
mov
js
ljmp
loopne
and
addr16
aad
fs
mov
cmc
sahf
inc
jne
xchg
call
adc
ftst
xchg
shrl
rol
mov
push
xchg
ja
daa
sbb
out
sub
pop
xchg
cmc
outsl
mov
or
dec
mov
jl
mov
mov
addr16
test
in
push
lahf
pop
mov
mov
dec
xchg
pop
mov
pop
jg
sahf
loope
shl
xchg
add
lret
mov
add
mov
ss
test
ret
jne
sarb
outsb
ret
ds
nop
cld
lcall
mov
sbb
fmuls
push
push
insb
dec
adc
pop
imul
fucompp
dec
and
iret
js
jecxz
jne
lods
push
outsb
das
mov
mov
and
mov
xorl
inc
or
pop
xchg
dec
out
nop
mov
and
cwtl
in
inc
jb
mov
mov
shlb
add
sbb
pop
xchg
call
push
pop
int3
in
into
jne
jbe
icebp
sbb
cltd
popa
arpl
jno
inc
aaa
sbbl
cmp
mov
inc
lock
scas
jle
enter
xchg
ljmp
fldl
pusha
lret
cltd
mov
iret
and
pop
ds
xorb
push
test
mov
jno
dec
sbb
xchg
push
sub
and
mov
arpl
mov
nop
and
out
popf
test
movsb
push
inc
push
ret
and
mul
push
push
stc
cmc
int
inc
cld
inc
subl
fists
shl
arpl
cs
sahf
xchg
imul
movl
cmp
addl
mov
mov
inc
rorl
in
lahf
data16
pop
out
mov
lds
inc
cmp
hlt
out
add
pop
push
notl
dec
repnz
popa
ss
pop
faddl
je
test
inc
or
cmp
mov
mov
jge
add
cmpsb
adc
mov
push
out
cmpsb
out
in
and
or
mov
ret
call
or
jecxz
rclb
loope
push
lds
adc
dec
pop
sub
adc
sbb
sti
cmp
dec
call
adc
sbb
insl
push
dec
popf
pushf
or
call
cmpsb
sub
push
cltd
push
ss
stos
loope
push
jo
mov
sub
jge
jno
aas
mov
dec
mov
dec
jns
rcll
inc
xor
sti
xor
push
xor
pusha
xchg
inc
into
loop
mov
and
dec
sbb
bound
or
mov
loope
cli
mov
mov
push
sahf
mov
icebp
mov
add
mov
adc
sbbl
or
cmp
and
mov
dec
jns
push
dec
fwait
mov
add
push
pusha
lds
pusha
call
sbb
frstpm(287
dec
shlb
xchg
lret
sub
data16
enter
aam
add
add
pop
iret
shll
pop
test
imulb
mov
fstpt
pop
loop
sub
xchg
cmp
lahf
mov
push
push
jle
fwait
cmpsb
ficoms
nop
inc
push
ror
xor
adc
sti
inc
fimuls
imul
popf
adc
sbb
dec
dec
fstpl
inc
test
lods
or
pop
cmp
es
cld
add
jns
push
or
xchg
jns
push
ret
pop
xchg
and
cmovg
filds
dec
out
shl
sbb
mov
xlat
jb
inc
push
imul
fnstenv
hlt
mov
repnz
mov
push
pusha
and
mov
fnstsw
sub
mov
add
daa
mov
scas
int
test
icebp
popf
and
in
sub
test
and
icebp
jnp
jmp
cmp
jge
movsl
out
sbb
add
jmp
lret
push
pop
das
xor
and
push
fsts
sub
cwtd
adc
lret
rcrb
push
or
stc
dec
hlt
fnsave
inc
cltd
bound
inc
xor
inc
fstpl
xor
dec
mov
daa
pusha
inc
sub
sub
mov
pop
lret
sub
mov
push
andl
mov
and
fs
fldenv
clc
mov
push
jg
xor
imul
ret
push
or
mov
pop
fsts
sbb
cmp
inc
outsl
cmp
or
pop
pop
stos
lahf
sbb
stc
jp
or
mov
dec
xchg
xchg
icebp
inc
insl
out
mov
in
sub
xor
out
dec
sub
cld
mov
push
in
lods
push
or
out
dec
in
adc
cmpsl
xchg
ljmp
xchg
mov
cmp
dec
mov
bound
icebp
push
icebp
filds
hlt
addr16
loop
nop
outsb
addl
wrmsr
cmp
ds
fwait
mov
int3
dec
mov
sub
add
jle
in
fldt
mov
mov
ror
push
fwait
lock
js
mov
test
movsb
adc
push
ficompl
in
mov
fiaddl
jae
addr16
cs
and
sub
shrb
or
mov
jmp
dec
lods
sbb
pop
int3
rcrb
push
push
out
jp
mov
dec
aad
outsb
int3
test
jp
or
jp
popf
lea
into
fistpll
imul
pop
xorl
mov
hlt
push
push
jg
into
roll
les
or
and
mov
xchg
mov
jmp
popaw
arpl
call
arpl
and
jb
mov
loope
mov
mov
bound
imulb
pop
mov
popa
ljmp
int
xchg
das
xchg
and
lret
mov
lods
lret
push
mov
adc
pop
mov
xchg
adc
cmp
sbb
flds
jecxz
imul
test
aas
jge
imull
nop
xchg
cmpsb
add
mov
lock
scas
aad
jmp
pop
arpl
pop
push
mov
test
cmpsb
or
add
pop
scas
outsb
inc
stos
jmp
mov
lret
fists
ret
xor
adc
inc
xor
cmp
stos
xor
les
ljmp
mov
and
adc
sbb
stos
and
xchg
xor
mov
in
outsb
dec
test
lods
and
jl
push
fwait
aad
lock
into
dec
xchg
dec
test
lahf
insl
jp
enter
ret
mov
xchg
xchg
out
lretw
in
jo
out
js
sub
lret
add
sbb
fmull
fcom
outsb
inc
das
push
mov
dec
jns
mov
and
or
aaa
das
mov
cmp
jl
clc
jp
adc
pushf
dec
jne
sbb
outsb
sbb
aas
xor
xchg
pop
sub
ja
mov
dec
jecxz
test
push
xchg
fdiv
popa
mov
jns
push
or
lret
push
add
jle
xchg
out
shlb
mov
mov
outsl
or
jnp
or
cmc
fst
cmp
inc
xor
jecxz
test
pop
mov
in
test
xor
and
sub
jns
adc
mov
outsb
cmc
or
mov
push
cltd
es
mov
insb
mov
mov
in
mov
jno
loope
adc
push
xor
jb
push
push
mov
fildl
repnz
mov
pop
mov
gs
testl
mov
mov
mov
dec
loop
test
and
xor
nop
mov
mov
push
xchg
int
fcoms
out
outsb
xchg
inc
sbb
out
xchg
ret
icebp
add
popa
lea
das
test
and
sti
sarb
cmp
es
maskmovq
notl
pop
dec
imul
pop
outsl
into
push
sbb
sbb
loopne
rcll
cmp
fidivs
mov
cmp
add
scas
push
bnd
mov
fistpll
push
fwait
and
in
stos
test
iret
hlt
push
inc
les
push
fnstsw
ficomps
into
pop
xchg
lahf
cltd
imul
adc
inc
adc
scas
jge
xor
popf
imul
dec
ret
rclb
or
mov
je
push
jmp
pusha
pop
xchg
mov
cmpsl
pop
mov
pop
loopne
imul
pop
decb
adc
dec
push
or
sahf
das
xor
cli
outsl
jno
mov
movsl
mov
movsb
jno
inc
imul
cltd
in
leave
xor
sti
adc
xor
add
xor
stc
mov
cmp
fists
or
jb
dec
pop
in
jmp
hlt
xchg
test
mov
mov
add
cmp
or
dec
mov
jmp
js
push
mov
adc
and
jb
push
fdivrl
insb
insl
and
push
stos
mov
mov
lret
push
xchg
jnp
inc
and
inc
cld
push
and
mov
popa
inc
mov
adc
test
mov
xor
mov
xor
dec
lds
or
in
mov
add
daa
inc
arpl
jle
cmp
lea
push
add
popa
lea
frstor
push
pop
lea
add
xchg
scas
mov
sbb
into
dec
das
xor
vpmacssdqh
jnp
mov
es
inc
daa
cmpsb
popfw
inc
xchg
and
leave
insl
jl
ss
ret
and
lds
xchg
xchg
out
mov
jnp
xchg
pop
sbbl
imul
mov
xlat
push
stos
mov
mov
sbb
ljmp
lods
xchg
loopne
mov
add
xchg
push
jg
lret
jecxz
test
orl
push
xchg
jnp
lea
push
mov
push
pop
outsb
clc
xchg
mov
ficoml
mov
push
push
lds
adc
push
mov
les
sbb
adc
stos
sbb
lahf
or
out
pop
mov
pop
inc
add
dec
push
jno
iret
test
rolb
xchg
mov
mov
mov
mov
inc
lret
aaa
lock
aam
ret
pop
dec
pop
cli
xor
mov
int3
adc
sub
test
stos
in
mov
pop
fldl
addr16
outsl
mov
push
cli
in
and
cltd
jae
xor
pusha
lea
mov
cmc
in
cmp
push
pop
xchg
addr16
test
or
int3
lods
movsl
call
add
xchg
out
fsubrs
xchg
cmp
and
push
ss
sbb
push
sbb
xor
ss
sbbb
out
add
adc
idivb
out
push
out
mov
or
loopne
scas
mov
aaa
pop
inc
jo
pop
iret
aas
int
test
mov
xor
dec
into
fcomps
in
sub
into
out
push
push
outsb
call
aas
imul
xlat
ret
and
adc
or
push
test
loop
andb
dec
inc
addr16
jg
shlb
push
cmpsl
jb
fwait
aad
mov
insb
adcl
out
nop
sbb
dec
jnp
adc
lahf
and
mov
mov
leave
xor
das
jecxz
loopne
fsubl
add
into
and
push
mov
push
pop
orb
rclb
fucomi
fs
mov
pop
sub
lods
dec
and
mov
push
push
mov
test
clc
and
sub
push
pop
pop
mov
js
mov
or
aad
out
daa
movsl
mov
sbb
lcall
or
clc
in
dec
cmp
lret
test
sbb
sbbl
lret
mov
cmp
adc
dec
jo
mov
pop
das
ret
sti
ss
scas
aaa
add
mov
mov
enter
pusha
fs
lcall
sahf
std
sbb
cwtl
mov
jmp
add
cmpsl
mov
adc
push
jle
daa
jle
stc
sub
movsb
push
not
push
test
mov
sub
cld
sbb
cld
xor
adc
arpl
push
roll
cs
into
or
add
stos
jg
xchg
es
into
leave
jle
cmp
ljmp
iret
add
lds
in
pop
adc
cmp
inc
sub
movsl
out
stc
mov
xchg
jns
fsubrl
mov
cld
xor
test
sbb
push
sbb
ficomps
sub
nop
cld
cmp
push
cmp
dec
add
add
and
push
mov
popw
jl
mov
stc
cmp
rcl
fxch
ja
ja
mov
jns
int
out
and
fs
hlt
dec
mov
orb
test
and
add
outsl
arpl
scas
pushw
push
sbb
mov
mov
lret
inc
or
add
rorb
adcl
pop
cmpsb
pop
push
adc
ret
pop
push
leave
cmp
jl
push
xor
and
imul
int
mov
inc
jo
repz
xor
mov
dec
mov
jecxz
inc
xlat
test
bound
insb
rorl
enter
push
test
add
es
cli
std
rclb
out
jecxz
xchg
sti
xchg
jmp
pop
stc
les
in
sbb
jns
xor
pop
out
out
fiaddl
adc
pushf
push
sub
mov
lret
psubd
loope
testl
xor
push
push
sub
out
mov
and
or
outsb
sbb
mov
mov
mov
cld
cli
fadds
xor
test
iret
mov
int
call
out
mov
pop
shll
nop
sub
fcomi
hlt
adc
adc
loope
call
push
fistl
mov
dec
mov
notb
xchg
in
inc
bound
scas
dec
jecxz
js
fstpt
es
addb
jmp
in
xchg
pop
sbb
xor
cmp
sub
push
addr16
mulps
jecxz
das
lcall
adc
arpl
inc
cwtl
je
mov
popf
and
push
imul
icebp
shr
out
insb
pushf
sbb
mov
jbe
sbb
dec
mov
in
cld
mov
xorl
lahf
orb
pop
xchg
shl
fsts
pop
nop
fucom
xor
lods
fbld
call
ljmp
cmp
addl
cli
cmp
or
mov
xor
je
sub
outsb
stos
adc
mov
and
and
mov
imul
xchg
in
or
movb
push
lock
add
dec
inc
mov
xor
cli
test
mov
push
nop
jo
sub
dec
cld
xor
loopne
mov
cmp
mov
shr
inc
scas
sub
push
sub
loope
adc
jle
inc
fistps
add
adc
lods
pop
int
das
hlt
lahf
xchg
aad
das
inc
dec
cmp
ds
mov
loope
push
and
dec
pop
bound
mov
in
inc
mov
jno
in
pop
pop
das
fsubl
inc
mov
cpuid
loope
and
adc
lea
and
mov
mov
or
fcomi
add
cmp
in
mov
icebp
movsl
inc
or
adc
jbe
push
pop
aaa
mov
push
add
xlat
jl
lret
push
jb
int3
sbb
or
movsb
xchg
dec
loop
mov
stos
clc
lock
xchg
icebp
xchg
scas
pop
bound
shrb
lods
decb
popa
out
test
jmp
ret
jnp
dec
push
mov
xor
mov
add
push
sbb
lret
pop
ret
push
push
jo
daa
aad
add
mov
inc
mov
in
lock
cmp
mov
into
aam
test
orb
or
shll
dec
or
test
sbb
int
dec
xor
push
mov
out
fbld
cli
std
add
js
ja
fsubs
insb
bound
inc
outsl
test
push
in
outsl
in
xor
pop
xor
mov
cli
in
fs
mov
aad
mov
addb
leave
arpl
push
cmp
out
mov
and
or
dec
mov
or
adc
jae
jb
xchg
pop
push
sbb
aaa
push
shrl
out
jmp
jbe
sub
mov
bound
aad
psubw
repz
dec
ret
mov
jo
shl
sbb
lcall
adc
fptan
lods
inc
lret
push
pop
aas
dec
out
push
inc
jl
movsl
fcomip
addr16
push
mov
movsb
and
cmp
lds
cmpsb
add
js
hlt
mov
mov
pop
push
cwtl
clc
inc
xor
sahf
test
sub
mov
sti
fcompl
sbb
inc
mov
iret
pop
or
out
push
mov
ret
stc
pop
es
xlat
rcl
push
cltd
cmp
pop
xor
pushf
sub
mov
jb
loopne
call
in
sub
xor
int3
adc
out
add
jg
or
insl
push
xor
mov
dec
mov
lea
test
push
mov
shrl
mov
and
cmp
pop
mov
mov
nop
jbe
mov
adc
push
rcrb
or
jae
adcb
sbbl
fs
fidivrl
mov
mov
std
cmc
mov
mov
pusha
in
fs
mov
cltd
add
push
sub
fs
push
bound
push
popa
aad
js
mov
popa
mov
repz
jne
cld
jmp
sub
mov
sub
scas
xchg
mov
dec
mov
cmp
and
push
retw
dec
push
inc
inc
js
lret
and
xchg
dec
not
or
xor
int
lret
js
cltd
cld
jns
rol
cmpl
rclb
sub
daa
mov
sbb
ret
inc
inc
push
inc
dec
fstps
test
int
sarl
inc
xchg
lcall
xchg
roll
push
in
fwait
sbb
sti
mov
xor
pop
repnz
mov
pop
stos
shl
xorl
jns
fwait
lret
pop
in
enter
int3
scas
jp
ret
ret
add
flds
xor
and
pop
leave
push
mov
add
stc
inc
std
push
pusha
pop
repnz
mov
jb
jmp
add
xchg
xor
or
fiadds
push
fnstsw
jnp
nop
and
lahf
call
mov
iret
push
adc
lret
cmp
fcoml
shrb
add
pop
add
adc
pop
xchg
out
mov
test
fistps
fists
inc
jle
push
pop
lods
jg
aas
ljmp
jmp
cmp
and
sub
mov
adc
jge
add
mov
stos
cmp
stc
xchg
jnp
push
sub
jns
dec
push
mov
adc
xor
pop
cmp
push
shrb
sub
lds
inc
xchg
mov
test
push
outsb
sbb
and
add
js
aad
jecxz
jae
push
push
inc
mov
adc
jae
jno
dec
insb
icebp
movsb
pusha
popf
arpl
iret
xchg
xchg
or
out
lret
dec
sbb
arpl
or
cmpb
mov
jmp
xchg
ss
xor
dec
pop
jl
nop
das
sahf
xchg
repnz
pusha
jb
pop
test
cs
and
pop
mov
dec
lahf
xor
push
notb
push
dec
daa
mov
dec
mov
mov
test
cmp
js
stos
cwtl
cmp
ljmp
mov
adc
aam
inc
dec
xchg
push
mov
pop
hlt
push
or
mov
jnp
popf
aad
lret
sub
lcall
jne
sbb
adc
in
lcall
mov
mov
sarl
push
in
inc
push
pop
mov
js
jno
out
das
mov
js
or
jle
iret
sub
add
fidivrl
test
je
popf
loop
add
add
mov
cmp
insl
sbb
sarb
jle
fisttps
into
mov
mov
mov
inc
lods
mov
mov
imul
movsl
jb
cmpsl
or
fisubl
dec
push
lret
jo
xchg
scas
and
fsubrs
imul
cmpsb
push
pop
mov
cmp
pop
mov
inc
sbb
cmp
dec
loope
cwtl
xchg
popa
mov
out
clc
fcomps
js
jne
add
or
xchg
lret
sti
adc
out
and
xchg
in
js
pop
xchg
push
inc
es
cmpsb
add
shr
mov
pop
insl
cmp
xor
out
ljmp
dec
pusha
fsin
jae
ror
jecxz
repz
gs
outsb
rol
rolb
mov
out
inc
cmp
xor
sub
xchg
cld
icebp
in
outsl
mov
mov
addb
lods
lods
cltd
js
ret
xchg
rclb
popf
loopne
push
mov
xchg
stos
or
sbb
cs
inc
push
adc
mov
jo
sar
jo
mov
movsb
push
imul
and
ljmp
std
rorb
sub
push
scas
xchg
or
and
pop
jnp
aas
cmp
add
nop
inc
das
adc
push
mov
push
and
push
repz
mov
bound
ds
aas
ljmp
pop
notl
out
rcl
xlat
sub
neg
xchg
mov
out
aas
xor
dec
mov
and
dec
sbb
inc
inc
or
adc
dec
and
popa
dec
push
jno
movsb
stos
mov
sub
sti
mov
and
mov
inc
sti
test
lea
lahf
sti
nop
inc
or
xor
push
cs
cmpsl
pushf
popa
in
xchg
andb
jns
xchg
pop
das
push
sahf
dec
push
daa
adc
cld
inc
mov
out
pop
scas
lods
int3
pop
adcl
inc
cmpsb
repz
mov
stc
pop
incb
mov
popf
sbb
out
mov
insl
mov
mov
ljmp
jnp
and
scas
mov
pushf
add
dec
jp
pop
test
jne
insb
pop
mov
xchg
lods
lods
sbb
fbstp
sbb
lea
mov
popf
pop
out
rcrl
cmc
xchg
jecxz
pushf
mov
mov
push
and
jbe
int3
jns
leave
push
xcrypt-ecb
cmpsl
mov
xor
jno
sub
xchg
aaa
pop
mov
lds
das
aas
inc
mov
fidivrl
cld
fcomps
mov
xchg
cmpsb
xchg
cmp
fmuls
inc
je
call
addr16
add
in
loope
dec
test
out
aaa
fistps
test
js
stos
stos
cltd
push
fildll
push
mov
jp
add
pop
xlat
mov
gs
stos
xor
into
outsb
inc
in
bound
cmpsl
fnstsw
sti
popf
push
lea
shrb
imul
lret
fsubrl
mov
outsl
int
cmp
sahf
cs
or
pop
inc
mov
hlt
jae
jo
arpl
or
cli
ret
call
gs
xadd
sbb
repnz
fs
daa
lcall
data16
mov
cmp
mov
fiadds
out
jns
insb
push
dec
test
mov
imul
fstps
imul
test
add
pusha
aaa
mov
dec
es
jl
int3
sarb
inc
repz
stos
push
shl
repz
or
popf
fsts
into
aad
stc
add
jae
push
jmp
xchg
sbb
daa
mov
test
xor
loope
mov
sbb
or
mov
xor
lret
push
outsb
test
aad
test
push
cld
xchg
jne
mov
mov
je
or
nop
or
pop
faddl
dec
mov
cmp
jmp
or
jbe
stos
mov
inc
fwait
scas
or
or
jns
mov
je
xor
sarl
scas
jmp
loop
mov
sar
ja
test
ret
jno
mov
jno
cmp
jnp
xor
or
inc
mov
les
ljmp
add
mov
sahf
sbb
cmpsb
dec
lret
xor
addr16
mov
cld
test
daa
pop
popf
mov
xlat
dec
lea
loopne
je
jns
jle
sub
or
xor
mov
jge
fidivrs
iret
adc
add
ss
insb
mov
es
add
xor
std
pop
sub
insb
imul
xchg
pop
pop
adc
and
and
mov
out
pusha
sub
cmp
and
sub
dec
repnz
xor
dec
outsl
pop
add
mov
adc
stos
mov
xor
repnz
jecxz
mov
push
jno
test
xchg
cmp
pop
xchg
jae
inc
insb
mov
arpl
inc
pusha
mov
rcl
les
xchg
and
jno
dec
push
jmp
in
cmp
fs
cmp
inc
scas
xchg
mov
rcrb
bound
icebp
cmp
or
pop
jbe
sbb
mov
or
mov
mov
add
shlb
jg
jg
sti
mov
jle
lock
mov
mov
pop
jl
mov
lcall
sub
fstpl
call
ss
inc
jmp
lods
jb
cmp
xchg
js
pop
cmp
mov
mov
cwtl
xor
and
push
dec
mov
push
movsl
fwait
lahf
mov
dec
push
std
xchg
adc
xor
add
dec
sub
jge
insl
inc
lds
scas
nop
int
hlt
sub
mov
pop
test
shll
jmp
or
xchg
cmpsb
imul
mov
adc
mov
nop
mov
mov
lret
xor
inc
cwtl
jle
push
mov
mov
ja
cmp
outsl
dec
cmp
movsb
iret
mov
add
addb
or
imul
mov
jne
gs
sbb
push
pop
jp
cmp
inc
and
sub
add
xchg
fwait
clc
xchg
mov
popf
call
fsubrl
jno
jecxz
add
dec
xlat
jecxz
pop
popf
lret
pop
adc
nop
xchg
mov
push
adc
add
lret
cmp
add
pop
jb
int
and
xor
enter
lods
mov
ds
aas
push
push
stc
cmp
fdivrs
cmc
mov
push
mov
mov
pop
dec
push
lahf
push
sbb
cmpl
push
jb
or
jne
lds
out
sub
xor
outsb
mov
pop
and
or
mov
xchg
lea
pop
cmc
push
fstl
mov
mov
sub
xor
dec
das
mov
addr16
test
xor
dec
sahf
stc
test
or
sahf
mov
or
das
mov
jle
cwtl
into
mov
sub
inc
cs
jecxz
ror
scas
mov
ds
xor
push
loope
test
jne
pop
inc
lret
cltd
repnz
adc
xchg
rcr
dec
in
insb
sub
pop
imul
imul
push
push
xlat
sub
in
or
dec
push
xorl
jb
test
icebp
or
or
sub
push
ds
jbe
lahf
ds
or
add
orl
cwtl
sbb
xchg
xorb
aas
ja
pop
test
mov
adc
bswap
gs
fcomps
pop
push
mov
cmp
scas
ss
adc
repz
and
leave
mov
test
xchg
jmp
push
mov
sbb
out
sub
sbb
rcrl
push
push
mov
gs
sub
loop
xchg
movsl
inc
mov
mov
in
xor
icebp
ss
lods
arpl
dec
sub
sub
enter
push
xor
lds
push
mov
lret
pop
push
mov
gs
test
call
and
or
and
fldt
stos
add
test
scas
outsb
jg,pn
mov
imul
inc
cmc
push
mov
das
loop
mov
sbb
fs
pop
push
movsl
inc
bound
lock
jae,pn
and
in
add
cs
in
adc
inc
pop
mov
ffree
mov
stos
jmp
mov
inc
aaa
adc
jg
add
mov
lds
in
out
pop
cmc
popf
fbstp
xchg
movsb
inc
ljmp
or
orl
sub
es
int
or
sub
cmp
sub
pop
xorl
xchg
jp
pop
daa
stos
fsubrl
cmpsb
adc
and
jecxz
cmp
push
push
mov
insl
mov
xor
cmp
mov
jmp
jae
mov
cwtl
xor
scas
add
or
dec
outsb
outsb
xchg
mov
mov
fnstenv
dec
pop
loopne
lock
cltd
dec
mov
insl
sahf
cld
xchg
mov
xchg
imul
jne
sbb
pop
dec
addr16
gs
and
pop
inc
mov
ficompl
pushf
or
insb
mov
dec
in
add
add
adc
fcoms
jae
jecxz
leave
pop
xchg
nop
pop
cmp
and
popf
push
xchg
push
and
fstpt
dec
test
stos
xchg
fldz
or
mov
sub
in
and
push
test
xlat
pop
test
jnp
mov
cs
or
adc
imul
out
loop
xchg
push
mov
sub
mov
xor
or
movsl
divb
mov
mov
inc
pop
mov
ret
lret
into
jecxz
and
cmc
add
xchg
mul
fists
or
cmc
add
push
insl
cwtl
sub
cmp
and
jecxz
mov
out
push
bnd
dec
fldt
jle
out
fdivp
jle
movsb
cld
sbb
mov
setp
imul
stc
push
inc
cmp
aam
pushf
sbb
lahf
imul
pop
inc
arpl
sbb
ja
into
push
dec
ss
xchg
pop
mov
sbb
adc
sbb
shlb
adc
mov
add
xchg
lahf
in
xchg
mov
sbb
jg
cwtl
mov
or
mov
push
nop
mov
fists
sbb
je
fxch
xor
mov
lock
fwait
scas
lahf
jl
xor
xchg
gs
or
inc
jmp
pop
mov
pop
xchg
adc
adc
xor
lock
add
incl
scas
jl
mov
stos
imul
into
flds
aam
fstl
cmpsl
test
mov
dec
fprem
ljmp
add
jb
test
jne
sbb
mov
push
into
ja
inc
adc
add
rcrb
push
add
and
add
fidivs
lods
xchg
test
repnz
xchg
dec
mov
xchg
loopne
rcrb
xchg
adc
scas
mov
push
mov
hlt
mov
repz
mov
loop
test
sbb
cmpsl
daa
jns
xor
xchg
push
aaa
xor
iret
adc
and
add
sub
cld
out
cmp
scas
int
mov
jmp
adc
dec
repz
sbb
lds
mov
nop
or
rcll
mov
inc
sbb
cmp
popa
test
idivb
mov
adc
mov
fsubrs
jmp
imul
addb
mov
call
test
pop
pop
sbb
aad
mov
adc
insl
pop
push
test
int
cwtl
pop
inc
insl
mov
sub
mov
ja
rcll
fcmovnu
gs
call
ja
in
dec
fmull
stos
and
xor
cmpsb
sarb
jbe
or
sar
outsl
fldt
or
out
or
add
jae
and
and
pop
and
incb
divl
push
rolb
sarb
mov
mov
test
sub
dec
aaa
lods
add
loopne
imul
mov
jns
incb
ja
pop
push
or
gs
add
jg
add
test
lods
std
dec
push
popf
jae
mov
adc
pusha
cltd
daa
sbb
xor
pop
fstps
enter
ret
clc
iret
xlat
stos
push
mov
std
mov
in
xor
and
xlat
int
dec
imul
repz
xchg
xchg
es
mov
clc
cld
sub
push
insb
adc
sub
dec
push
or
and
pop
shll
push
xor
xor
popf
jno
movsl
js
lret
lahf
movsb
xor
testb
sbbl
lahf
call
adc
push
aam
and
mov
dec
inc
jne
jno
fdivrp
xchg
and
pop
jecxz
loope
call
pop
xchg
cmp
pop
xor
sbb
jle
dec
imul
sub
inc
jmp
jmp
jno
add
sarl
pop
bound
pop
and
add
cltd
push
push
mov
dec
inc
xchg
jno
test
inc
adc
dec
and
ret
mov
es
sbb
dec
push
xchg
cmp
jp
shrl
pop
mov
cmp
jne
dec
das
pop
sahf
mov
std
dec
dec
dec
test
mov
in
insl
mov
call
idivb
lods
rcr
sub
sarb
xchg
hlt
aam
mov
mov
ret
push
rorl
sti
movsl
push
outsb
in
inc
adc
push
rcrl
mov
test
jp
jb
xor
cmp
ret
jg
mov
pop
mov
pop
and
pop
xor
add
jnp
fsubrl
int3
ljmp
sub
repz
into
jmp
rcrb
fsubrl
adc
mov
in
sub
jo
xchg
shlb
mov
pop
pusha
jnp
xlat
mov
outsb
jle
dec
and
and
dec
jl
dec
mov
xor
shl
dec
addr16
xchg
sub
pop
inc
sbb
mov
fists
push
jmp
and
mull
andps
in
fidivrs
mov
imul
add
enter
in
cmpsb
arpl
jg
loopne
adc
les
rep
push
pop
xchg
jnp
outsl
add
mov
and
xchg
test
mov
xor
cltd
decb
ss
jl
push
ret
fwait
or
mov
mov
mov
and
dec
mov
loop
cmp
pop
sub
pop
sub
addl
js
or
sub
mov
mov
mov
loop
add
test
js
jp
pop
inc
insb
jne
enter
jg
mov
push
pop
and
lret
jmp
jge
adc
cltd
push
pop
push
or
adc
sti
cmpsb
inc
gs
push
jmp
and
arpl
push
push
fldt
mov
cmpsb
push
or
inc
sub
data16
fidivrs
sti
xlat
fwait
lods
sahf
imul
pop
mov
push
pop
out
nop
roll
in
jle,pt
mov
jg
jae
lea
mov
or
adc
jb
cs
flds
pop
sbb
mov
lds
or
icebp
mov
popf
add
dec
mov
les
mov
es
movsb
out
dec
mov
dec
push
push
leavew
mov
lods
push
pop
in
pop
stos
or
fs
add
sub
lcall
ds
mov
mov
xchg
bound
push
fildll
outsb
mov
push
dec
lods
push
adc
insb
or
sbb
ja
scas
cwtl
jmp
ss
leave
fwait
test
jp
xchg
or
inc
ficoml
or
fbstp
mov
mov
mov
movsb
popa
test
jae
mov
and
mov
mov
out
in
in
imul
push
push
hlt
inc
in
jb
jmp
dec
pop
test
dec
test
js
in
push
mov
shr
adc
lcall
inc
lock
std
jb
push
push
pop
lret
dec
pop
jbe
bound
test
cs
lret
call
hlt
adc
lcall
aam
mov
stc
clc
sub
cmpsl
sub
lret
sbb
cmp
jmp
imul
sub
ficoms
mov
fadds
fcmovnu
mov
add
cmp
cmp
pop
outsl
mov
into
xchg
lret
call
or
mov
int
lock
jmp
sub
xor
mov
scas
repnz
jo
xchg
out
mov
cmp
jbe
iret
mov
lea
mov
imul
mov
xchg
int
cltd
out
mov
fisttpl
movaps
icebp
test
pop
sbb
out
iret
insl
js
xchg
mov
cmp
inc
add
aas
and
in
push
mov
lret
mov
lret
add
stos
mov
xlat
cmc
jns
jb
adc
jno
xor
push
mov
pop
stos
out
ffreep
stos
jne
xor
roll
stc
pop
jnp
sub
sub
or
movb
mov
imul
push
add
mov
test
pop
imul
test
int
out
mov
mov
jnp
lret
mov
mov
fcmovnb
mov
jl
mov
jb
out
xchg
jbe
pop
or
gs
repz
xchg
or
fldl
cmovae
jo
adc
add
xor
mov
adc
xor
dec
push
std
daa
or
jl
lods
mov
sub
out
lcall
out
xchg
xchg
aaa
fadds
sbb
fcmovu
dec
sbb
outsl
push
ja
test
inc
sub
jbe
les
xor
inc
dec
mul
xor
jge
xor
cli
add
nop
arpl
nop
insl
cmp
addr16
inc
xchg
shll
pop
jmp
cmpsb
mov
and
repz
dec
mov
or
push
fwait
dec
je
stc
xchg
xchg
stc
cmpsl
mov
mov
fsts
pop
mov
icebp
jle
mov
mov
subps
jno
cmc
jl
or
lcall
lret
pop
push
lret
cmp
adc
popa
gs
push
pop
mov
ror
movsb
xchg
inc
and
divl
movsl
cmp
jge
fsubrp
xchg
pop
inc
in
sbb
lea
mov
or
jecxz
cs
xchg
push
or
fs
sub
adc
daa
inc
sbb
cld
dec
imul
lret
aaa
mov
inc
mov
add
inc
mov
cmp
ss
xchg
dec
lods
mov
in
xchg
cmpsl
xlat
sbb
les
xor
out
jmp
addr16
daa
ret
push
jge
xor
push
scas
xlat
or
rol
mov
sbb
push
sub
cmp
fistps
mov
stc
cwtl
sbb
cwtl
push
cmp
incl
loopne
lock
js
mov
mov
push
test
sti
or
xchg
push
test
imulb
stc
xor
negl
sub
xchg
jge
add
cmpsl
cld
fnstsw
pop
fdivs
aad
xor
pop
pusha
nop
ret
js
push
fwait
dec
sbb
repnz
fisubs
in
dec
inc
cmpsl
call
push
dec
shlb
cmp
sub
xchg
mov
mov
pop
add
xchg
sub
push
add
adc
adc
lds
and
mov
into
decl
std
xor
cmp
sbbl
inc
cmp
jmp
clc
in
loop
movsb
lods
nop
loopne
mov
fs
pop
jle
shr
mov
pop
ja
xor
and
xchg
mov
push
loop
xchg
loop
sub
filds
xor
jl
jne
aaa
pop
adc
ljmp
outsl
jle
outsl
clc
out
xchg
push
inc
aad
xor
xchg
pop
setnp
popf
pop
leave
adc
mov
pcmpgtb
mov
xor
adc
inc
lods
adc
out
pop
pushf
mov
ror
xor
mov
cmp
stc
loop
sarb
mov
push
and
arpl
push
sarl
xchg
jno
sub
bound
sub
xchg
insb
lret
mov
jno
out
pop
xchg
mov
lret
test
ret
push
push
add
or
adc
lds
pop
xor
lods
in
insb
es
scas
sub
fidivs
cmc
cmp
or
or
add
popa
add
testb
cmp
jbe
jge
lea
les
xlat
stos
fs
sbbb
mov
nop
rolb
sbb
icebp
inc
add
dec
ljmp
mov
andb
out
lret
mov
and
mov
add
push
loope
or
inc
popa
imull
dec
lods
ds
sub
jmp
sub
cmp
hlt
dec
nop
mov
test
lods
or
leave
mov
add
btc
push
ljmp
imul
call
mov
sarb
pop
push
js
mov
sahf
dec
jg
jnp
dec
orb
mov
adc
test
sbb
stos
outsb
xchg
outsb
or
dec
das
sbb
mov
stc
jno
xor
leave
dec
test
jmp
nopl
dec
mov
sub
dec
je
loope
out
fidivrl
add
jg
cmpsl
clc
sub
add
test
jmp
sbb
pop
push
and
popf
jnp
imul
sbb
enter
loop
outsb
cmp
jp
in
shrb
mov
xlat
sti
cld
pop
xor
lock
xor
jmp
mov
add
lea
fcoms
mov
or
ds
addl
dec
jb
ss
pop
mov
fsubrl
fdivr
adc
add
lods
xchg
jp
push
lea
cmc
sub
ljmp
jns
cmp
fstl
insl
jl
inc
in
nop
in
fdivrl
push
mov
fldt
mov
and
aad
repz
scas
popa
sarl
adc
mov
jo
loopne
movsl
paddsb
xor
inc
xchg
lret
pop
fistl
fs
or
insb
lds
jns
lahf
adcl
ds
and
je
mov
jl
xchg
shlb
add
out
mov
cmp
sub
cmp
inc
add
push
and
pop
push
movsb
cmp
push
cmp
jg
dec
jecxz
add
mov
mov
ret
fldlg2
pop
incl
cmp
arpl
hlt
add
inc
lods
outsb
dec
add
imulb
jge
adc
dec
mov
sub
pusha
jle
mov
loope
adc
mov
cmp
aas
popf
cmp
cmc
jbe
sbb
lock
lock
aad
call
scas
mov
dec
bound
mov
sahf
imul
das
and
push
and
test
jb
test
dec
addb
add
fmul
fidivl
aad
inc
std
int3
mov
iret
arpl
lea
mov
and
fwait
jg
push
cltd
inc
add
ljmp
add
pushf
es
pop
repnz
aad
xchg
jo
sbb
push
pop
nop
inc
sub
push
pop
shll
bound
loopne
add
les
repz
and
je
adc
sbb
imul
fistl
arpl
adc
xor
pop
xor
xor
jno
mov
sbb
addr16
pop
push
daa
cltd
bound
mov
dec
enter
or
dec
pop
add
cmp
pop
aad
mov
cmp
mov
int
xor
xchg
int
outsl
add
sahf
pop
in
jmp
cmp
popa
sub
xchg
xorb
das
jno
call
mov
xchg
shrl
daa
push
jle
push
imul
jno
sbb
cwtl
xchg
sbb
or
arpl
jl
loope
punpckldq
jno
pop
sti
adc
dec
dec
jle
adc
adc
fstps
mov
sub
pop
jns
out
ffree
sarl
mov
xor
sti
jno
or
xchg
dec
sbb
sbb
cs
and
add
orb
shr
xor
repnz
sub
xchg
lds
inc
adc
or
lods
jbe
dec
or
mov
mov
jae
and
ss
mov
or
mov
mov
pop
xchg
cmpsl
cmc
pop
movsb
iret
cmc
fisubrs
loope
or
imul
add
adc
pop
es
jmp
lods
popa
icebp
rorb
sub
lods
das
sbb
inc
pop
cld
mov
lret
dec
lock
imul
dec
daa
les
outsb
pusha
add
int
push
inc
dec
cmp
fnstsw
adc
cltd
arpl
mov
pop
sbb
test
sbb
or
outsb
push
in
in
push
call
iret
xor
mov
cli
sbb
fiaddl
sbb
insb
shrl
in
arpl
push
add
js
jle
pop
jne
ffreep
addb
std
pop
je
popf
mov
fadds
cmp
and
rolb
test
pop
shll
jmp
pop
fstpt
dec
das
sti
fldcw
scas
mov
lods
outsl
jecxz
icebp
sbb
aaa
pusha
and
sbb
fcomip
mov
push
adc
add
subb
dec
aam
loop
sub
sbb
xor
mov
and
sbb
ljmp
ja
out
cmp
add
xchg
push
iret
gs
iret
fbld
lds
stos
aam
and
arpl
les
shlb
sbb
pushf
sbb
pop
sub
test
mov
js
jp
or
push
or
lods
jmp
outsb
pop
push
sbb
cli
gs
cmp
push
or
cmp
ljmp
imul
sbbb
adc
shlb
mov
mov
insl
sahf
imul
imull
xchg
sbb
les
sub
into
loop
add
insl
mov
mov
mov
xchg
mov
add
mov
push
push
lahf
out
inc
mov
dec
jle
xor
sub
ret
xchg
push
hlt
and
or
pop
scas
adc
repnz
ja
sub
in
out
cmp
movb
lods
into
adc
test
dec
cmpsb
cmpsb
xchg
pushf
loopne
fsubr
inc
push
aas
inc
adc
add
pop
enter
testb
stos
es
pop
dec
jae
pop
les
xlat
cs
ljmp
push
add
scas
xor
cmp
pop
testl
mov
lahf
push
and
pusha
sbb
lods
ret
cmc
imul
jecxz
mov
movsb
push
mov
sarl
popf
call
inc
imul
pop
cld
rcll
insb
jmp
mov
sahf
cmp
push
lcall
xchg
into
pop
or
inc
adc
mov
mov
mov
mov
xchg
sbb
cwtl
xor
mov
fiadds
insl
jp
jg
mov
mov
sbb
dec
cmp
xchg
push
nop
lods
dec
aas
dec
lock
push
pop
add
cmp
repnz
testl
and
rcll
xchg
inc
jl
imull
xchg
je
aad
push
jb
arpl
mov
inc
jmp
mov
ret
shl
shll
lds
dec
sub
les
das
addr16
scas
add
repz
adc
stos
push
push
and
cmp
mov
loop
mov
jle
push
and
mov
mov
sbb
rolb
pop
outsb
mov
dec
mov
mov
xor
in
pusha
stc
int3
adc
inc
mov
add
out
jne
xor
cld
mov
popf
lds
inc
adc
inc
data16
seto
into
das
loopne
lret
ss
jno
arpl
cmc
lds
test
scas
cmp
out
shll
add
fwait
out
bound
aas
mov
sub
jp
hlt
pop
sbb
ja
lods
jg
jg
andl
inc
cmp
adc
inc
sahf
add
lea
out
std
xchg
sbb
fbstp
insb
int3
sub
sub
into
pusha
mov
jecxz
addl
or
faddp
rorb
pop
movsb
das
int3
mov
test
dec
cmc
or
push
pop
sbb
jg
and
or
xchg
ss
sbb
add
popf
cmp
sti
int
incl
mov
cmp
loop
add
adc
and
jns
inc
sbb
add
mov
les
push
fdiv
pop
inc
addl
call
mov
adc
push
out
push
pop
sbb
movsl
sbb
jg
nop
sbb
dec
sub
clc
inc
int
mov
jle
jmp
pop
aaa
adc
pop
inc
insb
ror
mov
nop
aaa
aaa
test
xchg
icebp
neg
mov
push
mov
test
cltd
aam
mov
cmp
sub
add
adc
push
sbb
clc
dec
and
cli
cmp
cltd
mov
rorl
std
ret
mov
dec
mov
fcomps
pusha
lret
insl
bound
int
sbb
cmp
lahf
cmp
setno
testl
add
push
dec
mov
push
sbb
cmp
ljmp
test
je
add
mov
xchg
sbbl
data16
jecxz
ja
mov
xor
ja
ret
stos
sub
pop
aas
movsb
scas
mov
sbb
sub
lock
ret
clc
add
xchg
sahf
leave
jbe
pop
sub
pop
dec
xor
mov
lock
test
inc
lret
or
incl
sub
gs
jmp
repnz
lock
jmp
ficoml
push
cmp
data16
push
xor
out
xor
fcmovu
sbb
imul
mov
xchg
cmp
push
int
mov
xchg
pop
cs
dec
ret
lds
push
or
je
mov
xchg
cld
es
add
fdivp
or
and
sub
push
xchg
cwtl
pop
and
push
pop
xchg
imul
test
or
xchg
jecxz
mov
mov
adc
fcmovbe
cwtl
insb
repnz
pop
sub
jp
or
mov
out
cmp
xor
inc
mov
and
stc
push
and
jle
mov
sbbl
sbb
mov
add
mov
ds
jo
mov
add
jge
fs
nop
outsb
xor
add
and
roll
mov
inc
sbb
nop
dec
mov
cmpsl
xor
loope
mov
ja
adc
push
pop
pop
loop
mov
xor
mov
hlt
imul
fcompl
xor
sbb
push
push
pop
ljmp
xchg
add
loopne
out
push
mov
stos
push
popf
and
dec
sbb
pop
mov
inc
test
loope
in
stos
insl
and
loop
mov
lock
cmp
arpl
jae
jmp
mov
data16
mov
xchg
jge
jg
js
sub
xor
clc
mov
cmpsb
nop
xor
xchg
xchg
mov
sbb
int3
or
or
mov
rclb
push
popf
or
imul
xor
push
dec
inc
mov
inc
into
sbb
movsb
dec
js
dec
or
xlat
xchg
push
dec
sbb
xchg
jb
add
xchg
arpl
stos
inc
les
popa
loope
iret
adc
mov
xor
dec
inc
dec
push
fdivrp
jge
int
andl
jle
inc
mov
stos
mul
jp
push
sub
fstpl
movsb
repnz
cli
movl
cmpsl
inc
dec
dec
lods
daa
sar
and
pop
pop
mov
and
sbb
inc
loop
mov
dec
pop
pop
in
and
cli
dec
sub
test
add
rorb
sub
out
popa
adc
sub
fldcw
addps
jns
in
aam
mov
pop
adc
inc
in
jno
inc
imull
cmp
movsb
in
inc
adc
subb
cld
rcll
notl
cwtl
imul
stos
nop
imul
popf
frstor
adc
and
cmp
adc
add
in
sub
jne
or
test
dec
fcmovnbe
sbb
dec
andb
and
add
sub
inc
stos
hlt
out
mov
sub
xlat
or
sub
in
mov
sahf
nop
jecxz
aad
sahf
sub
mov
push
xchg
mov
and
push
cmp
je
int3
testb
stos
rcrl
mov
mov
test
repnz
addr16
xchg
movsb
test
jle
filds
lds
les
in
cmc
pop
mov
jmp
cld
mov
mov
lret
dec
mov
jge
mov
push
push
mov
or
addr16
mov
test
inc
fdivr
ss
cltd
lcall
add
hlt
imul
mov
in
aam
inc
mov
push
xchg
fdivrs
or
dec
es
push
jb
imul
push
fdivrl
je
aaa
mov
shll
mov
and
mov
out
int3
testb
cmpsl
sbb
pushf
mov
insb
outsl
add
gs
in
mov
std
hlt
sarb
aaa
dec
dec
jne
fsubrs
mov
insb
fsubr
adc
out
mov
mov
cli
mulb
fld
ja
mov
adc
gs
inc
enter
cmp
mov
shll
sbb
iret
inc
mov
sbb
loop
orl
cmpsl
mov
lock
adc
repz
bound
mov
subb
jnp
push
dec
cmc
imul
mov
inc
mov
in
push
cmp
lds
ret
xor
or
dec
pop
pop
pop
bound
mov
int3
mov
call
pop
imul
lcall
aas
pop
and
fildl
cld
ja
leave
add
pop
dec
ficomps
and
pop
cwtl
mov
add
call
addl
arpl
std
cmp
jbe
adc
enter
lcall
repnz
pop
adc
dec
rclb
sub
bound
mov
xchg
icebp
or
pop
dec
pushf
cmc
cmpsb
or
and
inc
pop
jmp
xchg
pop
stos
fwait
mov
adcb
out
idivb
bound
clc
pop
mov
shrb
jp
mov
lods
pop
push
pop
pop
cld
adc
cs
pop
sub
jle
cli
fldl
sub
rcl
push
sahf
fmul
mov
sarl
fwait
jmp
repnz
cmp
sub
icebp
bnd
pop
ja
xor
call
xchg
nop
ret
push
cs
loopne
xlat
es
loope
jl
mov
pop
inc
mov
xchg
popf
push
jbe
and
lahf
push
mov
enter
mov
movsl
fidivrs
dec
or
shr
add
incl
mov
push
dec
aam
push
cmp
or
adc
shrl
add
pop
jmp
dec
int
leave
lcall
xlat
jecxz
repz
ds
xor
mov
outsl
xchg
test
pushf
ljmp
fsubl
nop
xchg
int3
shrb
xlat
ja
jp
sbb
fwait
lret
mov
sub
test
lcall
les
and
repnz
decb
sbb
in
dec
int
add
xor
pop
hlt
movsl
mov
scas
and
adc
stos
or
pop
out
adc
jle
pop
or
sbb
test
pop
add
jns
pop
out
or
adc
adc
mov
jl
call
push
lea
pop
xchg
lock
add
or
es
push
or
les
jp
sbb
inc
insb
cmp
pusha
adc
ret
ja
icebp
push
cmp
sahf
aaa
cmp
lods
xor
shlb
add
pushf
mov
pop
fidivrl
pop
fadd
push
pop
fldt
call
xchg
aaa
cmc
xor
xor
iret
xchg
lds
jae
mov
iret
mov
in
test
pusha
fldcw
pop
cmp
out
push
xlat
nop
sbb
sbb
icebp
out
imul
sub
pop
je
cmpsl
cmp
ss
lret
aam
mov
pushf
ret
aas
pop
test
dec
sahf
mov
jns
push
mov
ja
xchg
pop
std
xor
dec
insl
jno
pop
call
and
iret
xchg
loop
mov
inc
sub
add
outsb
mov
arpl
mov
out
dec
cld
ficoml
data16
push
in
icebp
pop
xor
aad
xchg
fcoml
das
adc
xchg
pop
sbb
sbb
push
mov
pop
sti
sub
clc
sbb
dec
sbb
outsb
or
pop
inc
repnz
sub
out
jo
movl
out
xor
leave
in
dec
or
xchg
insl
cmp
cmp
adc
pop
jb
mov
jge
jbe
inc
fcompp
sub
fmul
push
jbe
push
mov
fwait
sub
cmp
outsb
iret
dec
aad
out
dec
push
inc
je
and
pop
ret
jle
iret
repz
data16
mov
scas
xchg
sub
movl
push
in
inc
sub
leave
pop
adc
xlat
dec
test
in
scas
into
xchg
xor
push
leave
es
hlt
cmp
mov
add
jno
fwait
aaa
in
insl
dec
mov
cmp
fsubrl
shll
aas
push
lods
out
xchg
shll
sbb
or
ljmp
call
jecxz
cmp
dec
lret
into
and
subb
mov
xchg
mov
adc
and
shlb
loopne
fwait
aaa
js
inc
leave
pop
addb
mov
inc
cmpsb
push
mov
loopne
ss
or
mov
mov
leave
ja
jns
cmpb
jo
inc
test
imul
xchg
pop
mov
das
cpuid
test
lods
iret
xchg
pushf
loop
les
stos
add
jp
aas
cmp
cld
out
cmpsb
fcomps
mov
add
ds
sti
mov
sbb
fnsave
lret
loope
int
xor
or
inc
jns
jo
sbb
cmp
cmp
fmuls
roll
les
ds
fs
xchg
addr16
jns
xor
aam
push
or
or
sbbl
cmp
ret
jle
popa
or
popf
push
shll
mov
das
mov
nop
add
jne
in
ds
incb
rcr
xor
pop
je
jb
xchg
mov
sub
push
aam
push
push
sahf
int3
jbe
add
sbb
shlb
pop
push
stos
fwait
pop
test
jecxz
push
rcr
mov
or
push
loop
jle
fildll
jns
divl
pop
pop
dec
addb
xor
cmp
cmp
ja
fsubrl
adc
dec
or
mov
rcll
in
push
sub
push
mov
cmpsl
jno
xchg
pop
mov
sbb
dec
or
repnz
iret
das
xor
mov
pusha
fiadds
or
or
test
dec
mov
mov
inc
add
das
xor
cmp
jmp
iret
sbb
dec
push
push
push
cli
and
mov
loopne
mov
mov
mov
dec
popa
insl
insl
clc
out
lods
test
stos
lahf
mov
int
mov
jne
mov
pop
lods
adc
adc
pop
fcoml
pop
dec
fsubrl
test
in
data16
addb
inc
push
jne
xor
adc
dec
pop
lock
xchg
xor
and
ds
lcall
lahf
enter
cltd
pop
mov
ret
xlat
int3
jmp
sub
imul
push
add
pop
gs
pop
ljmp
and
inc
popa
dec
test
rorl
ficoms
xchg
or
push
das
jae
jns
rcll
ljmp
sub
imulb
jle
mov
mov
mov
jo
pop
pushf
data16
fisubs
outsb
mov
push
adc
pop
filds
std
scas
push
jmp
inc
cwtl
xor
and
idivl
or
jbe
add
fmull
mov
jo
mov
jne
push
sahf
in
jnp
lret
lcall
inc
bound
scas
xchg
and
nop
imul
jg
sbb
jnp
jno
lret
dec
repz
jae
dec
push
jno
sub
cmpsl
pushf
mov
pop
push
lods
data16
pop
movsb
push
mov
hlt
add
sub
jo
mov
sub
lret
stos
decl
pop
aad
and
jle
jmp
bound
mov
xlat
insl
lahf
mov
inc
sbbb
int
sarb
push
ja
or
idiv
add
xor
std
mov
add
ja
xchg
in
out
adc
aas
rcrl
xchg
sub
sub
popa
push
sbb
call
sti
inc
cmpsb
sti
and
aas
mov
jno
cs
out
fnsave
mov
mov
mov
mov
add
jne
jnp
adc
lret
add
inc
push
leave
pushf
ret
mov
add
hlt
movsl
out
mov
std
mov
rcll
jnp
mov
scas
and
js
shl
test
popf
mov
aaa
push
mov
repnz
add
loop,pn
cmp
mov
les
fisttpl
notl
ss
arpl
mov
mov
mov
lret
xchg
mov
xchg
cmp
icebp
jg
nop
rol
mov
mov
enter
imul
test
mov
push
scas
lds
fwait
xchg
testl
xchg
pop
loopne
fisubs
cmp
jg
dec
pop
pop
out
or
lods
or
inc
in
dec
sahf
ljmp
fdivl
lcall
mov
repnz
dec
lahf
push
cs
mov
fwait
in
cmp
js
cmp
cmp
push
popf
xor
jl
addr16
out
fs
dec
and
stc
rcrl
lods
sbb
cmp
pop
xchg
jnp
adc
stos
jne
add
mov
fs
dec
mov
adc
scas
ljmp
add
xor
sub
dec
lcall
fnstcw
adc
inc
out
sub
cmp
stos
push
and
xor
dec
sub
add
mov
push
lds
mov
xchg
fildll
pop
negb
test
cmp
imul
inc
mov
je
out
loope
mulb
ljmp
jmp
popf
andl
fldenv
cmp
dec
out
je
push
test
mov
shrb
mov
add
cltd
scas
movsl
bound
dec
push
jbe
push
jnp
push
push
ljmp
cmp
pop
sbb
inc
jne
sub
nop
cmp
lock
in
ret
xchg
cmpsl
mull
jmp
jl
test
mov
adcb
jl
gs
mov
mov
ds
data16
pusha
xchg
outsl
push
lds
lcall
or
jmp
in
sbb
xchg
sarb
gs
xor
pop
inc
addr16
dec
sub
aad
mov
dec
pop
cmp
xchg
rolb
and
inc
jnp
shll
jmp
mov
dec
xchg
dec
lds
jnp
push
add
adc
mov
icebp
ret
inc
ss
scas
in
lret
imul
jns
mov
adc
je
mov
clc
sub
mov
and
leave
dec
jno
scas
movsl
popf
ljmp
ja,pt
push
xchg
out
stos
adc
adc
and
lock
mov
jmp
jne
push
sub
cli
add
in
jp
bound
or
mov
fs
sbb
hlt
and
divb
xor
sbb
jg
or
pop
shll
shl
sub
jae
pop
jbe
shl
and
sub
or
jecxz
xchg
sbb
or
scas
pop
push
loop
and
fildll
add
lret
rolb
ljmp
iret
popa
lods
xlat
xor
xchg
jo
push
xchg
pop
je
dec
sbb
cwtl
jg
sahf
pop
aas
jns
out
jns
xor
mov
sbb
pop
mov
sti
push
add
dec
popl
andb
cmpb
movsb
ljmp
movsb
push
mov
repnz
push
xchg
dec
jg
sbb
and
dec
or
lods
lcall
bound
mov
mov
sahf
arpl
push
rcrb
sub
mov
and
push
je
jp
push
cld
out
adc
mov
test
pop
imul
pop
arpl
stc
stc
or
je
sbb
fidivrs
xchg
je
push
pop
add
adc
ja
xchg
mov
xor
pop
xor
sub
lock
test
cmp
mov
fucomp
in
dec
dec
or
push
sahf
jnp
inc
push
xchg
dec
or
mov
aaa
nop
add
jnp
add
push
lahf
stos
jg
pop
insb
cld
mov
ss
lahf
idivb
xor
mov
lock
stos
push
sahf
xor
cmp
fldcw
movb
dec
pop
jns
adc
adcl
jp
xor
js
sub
into
repz
nop
nop
lea
jb
mov
mov
aaa
aad
sbb
dec
std
jo
sbb
jge
xor
mov
ficoms
sbb
xchg
jl
push
adc
decl
xor
adc
test
into
inc
shrl
lds
dec
jo
stc
xchg
outsb
loop
cmp
shl
jecxz
and
pmaddwd
or
jmp
movsb
mov
imul
repz
into
cmp
dec
xchg
mov
adc
lds
inc
roll
ss
inc
negl
push
pop
sbb
lea
icebp
stos
clc
loope
add
add
push
dec
jbe
sarl
in
sub
xor
inc
push
hlt
aad
dec
shr
or
add
jae
ss
in
loop
mov
imul
ret
je
adc
mov
mov
es
popa
mov
jne
xor
push
insb
mov
mov
ret
ret
lds
movsb
movsl
bound
xor
and
pop
xchg
sbb
scas
adc
fistpl
or
loope
insb
add
cmp
adc
adc
inc
ss
push
jecxz
mov
call
jmp
stos
and
jns
push
lcall
cmp
lret
ss
stos
clc
sbb
adc
jle
and
pop
jp
leave
mov
mov
cmp
cmpsl
es
add
mov
sub
test
scas
nop
push
push
cltd
mov
aaa
push
xor
mov
fsts
scas
nop
pop
sbb
sbb
ret
xor
add
xor
insb
cltd
inc
dec
out
rol
imul
enter
adc
fs
dec
inc
lcall
test
lock
push
cltd
cmp
pop
mov
mov
arpl
decl
adc
sbbb
sub
nop
mov
fistps
cmp
cwtl
xor
in
mov
sar
fstl
test
sbb
lahf
cmpsl
jecxz
add
popa
in
mov
mov
imul
fwait
mov
popa
pop
dec
sbb
xchg
out
sub
sbb
mov
js
dec
xor
scas
or
dec
pop
repnz
jmp
psrlw
jle
add
popa
push
jl
sub
pop
sbb
pop
and
push
popa
pop
in
adc
pop
lock
insb
std
dec
andb
jns
out
pop
xchg
jnp
or
jmp
or
jecxz
fcmovnu
aaa
and
jae
xchg
and
jno
mov
shrl
push
push
xor
fwait
outsl
dec
add
cmp
jae
js
lea
push
loope
gs
pop
neg
stc
sub
repz
cmp
les
and
or
insl
sub
stc
ret
in
jp
ret
cmpsl
push
pop
pop
aam
mov
push
xchg
xchg
stos
push
jb
lret
lea
and
jp
xchg
ljmp
fcompl
inc
push
inc
push
push
ja,pt
sbb
push
cmpsl
pop
pop
rcrb
shr
ret
es
scas
push
xchg
clc
dec
dec
loopne
adc
movsl
scas
loope
lods
sub
movsb
push
or
std
iret
fldenv
mov
test
mov
mov
jp
addr16
ret
popa
mov
xor
jno,pn
ljmp
sub
pop
mov
lds
adc
mov
shrb
ss
push
pop
cmpsl
lret
pop
cmp
dec
xor
pop
push
jl
sub
pop
adc
xchg
pusha
loope
adc
cmc
xchg
mov
fadds
mov
xchg
stos
clc
shl
pop
divl
pop
push
pop
shlb
imul
mov
cld
arpl
fwait
mov
jns
mov
rclb
mov
inc
sbb
fldz
jnp
notl
shl
xor
lahf
pop
mov
cmpsl
cmpsb
xor
insl
mov
push
out
push
adc
dec
adc
dec
outsl
pop
push
cmp
sbbl
lds
int3
out
or
repnz
and
xor
add
cmp
out
into
mov
fnstsw
sbb
mov
dec
nop
add
nop
cmpsb
out
cltd
js
cmovbe
loop
dec
jp
bnd
outsl
test
push
sub
or
sbb
lahf
fstl
sub
or
aam
push
inc
mov
pushl
daa
out
lea
dec
negb
movsl
aas
xchg
dec
jno
xor
adc
add
mov
fmull
arpl
push
ljmp
xor
rorl
pusha
nop
adcl
add
rclb
adc
stc
dec
fbld
and
fiaddl
mov
sbb
jbe
stc
pop
and
push
mov
mov
fistps
sub
push
daa
dec
sub
in
pop
scas
in
and
in
jg
adc
mov
test
roll
rorb
pop
inc
pop
mov
int
mov
out
push
sbb
fwait
inc
pop
mov
pop
sbbl
pop
lret
nop
fcmove
in
inc
incw
or
and
mov
daa
xor
inc
test
xchg
mov
cmp
mov
dec
xchg
push
mov
iret
test
stos
or
or
aad
dec
pushf
or
xchg
insl
cmp
mov
mov
fnstcw
into
fidivs
mov
sbb
jb
dec
xchg
xchg
lahf
pop
es
xchg
insl
xchg
testl
mov
movsl
jmp
sti
jno
mov
push
xor
idivb
cmp
and
xchg
movsl
popa
ret
outsb
inc
leave
into
addr16
mov
mov
jns
jge
ja
xchg
leave
sbbb
daa
or
add
mov
fdivrl
pop
xor
movl
jno
mov
pop
iret
mov
xor
sbb
sti
ja
cmp
lea
xor
in
shrl
aad
mov
bound
rcrb
fs
rol
or
stos
mov
lret
jo
out
daa
jae
ret
pop
inc
es
fsubrl
or
loop
sub
xchg
cmp
fbstp
cwtl
sub
imul
mov
adc
or
mov
ret
popf
test
test
lods
cltd
xchg
inc
sbb
push
leave
lcall
mov
xlat
cld
pop
sbb
jbe
sub
cmp
repnz
or
jno,pt
addr16
mov
mov
pop
lahf
lods
testb
jae
pop
cmp
movsl
stos
jne
cmp
fs
ret
es
jl
sub
js
leave
repz
cmp
test
sbb
mov
dec
pop
loopnew
stc
jmp
pop
push
inc
sub
pusha
mov
pop
push
or
pop
pusha
xlat
bound
adc
inc
fstpl
lea
push
sahf
pop
into
in
sub
out
pushf
mov
cwtl
mov
fisubrl
jp
inc
stos
and
shlb
lahf
jecxz
rolb
sbb
cmp
subb
cli
xor
inc
sub
jmp
rol
aad
xchg
push
inc
fimuls
andb
push
push
push
sub
andb
in
pop
sar
out
xchg
sbb
sbb
into
xchg
pop
jae
add
lods
jno
imul
mov
mov
cmp
int
jns
cs
inc
push
subb
mov
fisubrl
or
add
sbb
bound
insl
push
push
shll
fildll
fisubrl
mov
pushf
test
das
jge
xlat
cmpsl
inc
out
jb
and
ret
dec
adc
je
push
arpl
outsl
adc
out
and
or
mov
sarl
call
sahf
mov
jbe
aad
cmc
or
call
out
fstpt
xchg
xor
fldenv
sahf
jnp
jns
mov
sbb
xchg
adc
cmp
xor
dec
lock
cli
fstpl
call
rcl
add
call
enter
fwait
data16
mov
pop
addr16
sar
loope
ret
lds
xor
in
inc
xchg
iret
ffree
push
fcoms
fistps
repz
push
pop
repz
sub
xchg
popa
xor
inc
lret
es
stos
inc
ret
add
jns
pop
xchg
and
icebp
xchg
push
nop
cmpsb
and
bound
mov
xchg
mov
or
daa
jnp
popa
out
and
testl
sub
rorl
adc
sti
inc
sbb
dec
or
push
adc
dec
sbbl
in
imul
sti
sbb
mov
ret
mov
jl
sub
add
int3
dec
and
push
mov
mov
mov
push
mov
stc
inc
push
in
sub
icebp
lods
dec
mov
xorl
pop
jg
ljmp
ret
dec
cld
and
or
decl
xchg
lods
mulb
inc
fisubl
sbb
je
test
xor
int
into
fwait
imul
dec
cli
cmp
cmp
notb
xchg
out
daa
mov
das
pusha
test
mov
mov
pusha
fsts
jns
lret
xor
imul
imull
lea
orl
pop
cmp
mov
mov
loope
test
enter
mov
aad
mov
jne
hlt
lahf
dec
cmp
icebp
dec
push
xlat
pop
dec
lret
int3
cmpsl
in
arpl
mov
out
lret
repz
sti
loop
jmp
aaa
in
adc
shlb
inc
jecxz
in
mov
mov
pavgw
rcll
mov
aas
push
repnz
adc
mov
int
outsl
pop
push
mov
out
fnstsw
push
int3
inc
and
mov
sarb
loope
dec
dec
lods
xchg
xor
ret
and
cmpsl
js
lahf
shlb
inc
cwtl
mov
adc
sub
dec
dec
lret
inc
xchg
and
fwait
xchg
mov
clc
mov
out
jne
idivl
es
xchg
dec
add
jmp
das
nop
inc
addr16
dec
addr16
leave
xchg
xlat
pop
lods
es
mov
mov
jns
cmpsb
fnstenv
imull
add
jp
jl
mov
int3
clc
push
xchg
out
shl
or
dec
jmp
shlb
or
dec
fnsave
fsts
scas
rcrb
inc
inc
cmp
enter
cmpsl
sbb
xchg
lds
out
mov
mov
pusha
add
inc
in
fsts
nop
and
cld
movsb
push
mov
cltd
cmp
jp
and
xchg
lahf
and
gs
xor
loop
adc
push
adc
out
int3
sub
dec
cmp
out
push
mov
inc
fisubrs
mov
sbb
test
xchg
ret
nop
xchg
sbb
ret
sbb
mov
push
or
mov
and
popf
and
loope
outsl
jmp
es
inc
xlat
or
xlat
and
mov
sub
or
mov
jne
push
test
xchg
push
repnz
in
test
add
out
sub
push
enter
sbb
mov
dec
ud1
mov
pop
in
pop
or
pop
jne
rcr
outsl
loope
dec
or
sub
and
rcr
inc
mov
pop
pushf
jg
sbb
xor
test
orb
int
mov
inc
or
or
jbe
lcall
jne
jmp
pop
punpcklwd
pop
sbb
in
inc
pop
enter
mulb
cld
mov
mov
mov
outsl
movsb
jle
in
lods
jb
fidivs
sub
dec
jnp
in
call
jecxz
nop
sbb
push
add
or
imul
adc
jbe
leave
lahf
orw
aas
xor
stos
std
inc
inc
daa
mov
dec
gs
sbb
stos
xor
es
xorl
maskmovq
idivl
push
iret
dec
mov
xchg
mov
cmp
jb
mov
fmul
cmc
lcall
loopne
rcrl
jbe
mov
cmpsl
fs
loope
xchg
in
lea
push
sub
in
mov
mov
loopne
mov
les
lahf
or
sahf
and
pop
fs
push
imul
add
pop
imul
es
dec
cmp
repz
into
cld
or
cwtl
inc
sbb
inc
dec
mov
lods
std
dec
and
xchg
bound
or
pop
repnz
and
test
inc
cmpsl
adc
mov
pop
xchg
repnz
cwtl
in
enter
add
ret
cmp
mov
inc
aas
data16
fwait
add
jmp
push
ljmp
pusha
cmpsl
inc
jle
sbb
sbb
inc
xchg
mov
sub
ss
mov
and
ja
or
loopne
iret
jnp
xor
std
sbb
out
ljmp
mov
shr
test
les
dec
push
sti
hlt
leave
outsl
sahf
stos
xchg
ja
cvtdq2ps
mov
cmc
std
repnz
sbb
test
add
fldcw
inc
shr
ret
shl
in
push
enter
scas
or
std
imulb
ja
mov
mov
rol
xor
mov
nop
xor
out
test
xchg
dec
push
jge
mov
xor
iret
xchg
bound
push
inc
lret
out
in
sbb
jp
cmpsb
je
rolb
test
jge
xchg
movsl
int
pop
pop
sub
inc
leave
adc
jb
popf
push
addl
mov
pop
stos
ret
or
dec
ds
aad
sbb
bound
imul
and
dec
loope
dec
jmp
push
and
dec
movsl
and
ljmp
cmp
shlb
scas
xchg
sub
jbe
mov
movlps
daa
enter
push
ds
scas
inc
cmpsl
dec
movsl
cmp
or
push
or
shlb
jno
mov
outsb
jle
scas
loopne
pop
andb
pop
popa
leave
orb
std
cld
xchg
fstpl
lcall
daa
sub
cltd
out
popa
out
xchg
arpl
out
into
int3
in
cmp
inc
push
int
xchg
decb
and
in
nop
mov
sbb
xchg
sbb
shrl
and
mov
stos
in
insb
mov
aaa
mov
pushf
sub
mov
cs
fwait
adc
aad
mov
insl
movsb
jno
jae
leave
lret
mov
cltd
xchg
or
out
pop
pop
xor
pop
push
scas
popf
mov
pop
jg
jbe
andl
insl
inc
lods
lea
pop
push
xor
dec
jb
idivl
outsb
nop
pop
xchg
aas
xor
mov
push
mov
cltd
imul
xchg
int
inc
push
inc
jecxz
daa
movsb
mov
push
jb
sbb
cltd
push
gs
loop
rcrb
or
dec
jne
or
fwait
jge,pt
movsl
xor
scas
jne
or
and
call
loop
test
jecxz
pop
pop
mov
sahf
insl
addr16
xor
cld
adc
stos
lea
loope
outsb
or
adc
push
dec
lods
xor
test
in
xor
or
add
shrd
popf
pop
outsl
push
jg
mov
add
push
cmp
stos
pop
out
stc
xchg
push
jo
push
sbbb
aaa
inc
inc
xchg
and
sbb
aam
sbb
int
push
jl
adcl
push
or
dec
cmp
movsl
imul
jp
and
xlat
xchg
popf
cli
sbb
nop
jmp
movsl
rclb
cmc
jae
sarb
add
idivl
sti
inc
mov
mov
test
sahf
lds
lods
shrb
je
shll
pushf
mov
and
mov
mov
mov
stc
cmc
mov
push
adc
jae,pt
cmc
sbb
test
adc
mov
sub
adc
inc
or
fdivl
vaddsubps
imul
sti
cli
test
insl
or
divb
hlt
push
dec
movsb
pop
mov
cmp
in
dec
ja
call
mov
push
pop
ja
jnp
lahf
enter
pop
inc
andl
mov
iret
aad
mov
clc
fists
pop
cmp
test
push
jbe
adc
int
jb
adc
or
dec
jns
fwait
mov
popa
and
jl
inc
adc
add
xchg
inc
sub
sarl
fstp
xor
add
mov
xor
int3
sub
aas
stc
xchg
in
nop
jge
addb
or
and
loop
sub
addr16
jg
push
push
inc
push
outsl
fsubrl
add
popf
lock
and
cmp
fcompl
pop
scas
insl
lcall
and
push
stc
dec
outsb
inc
add
add
arpl
data16
call
xchg
iret
jno
push
pop
pop
xchg
aad
sbb
mov
not
push
int3
rclb
mov
jle
xchg
and
pop
sub
lahf
mov
fwait
push
add
test
mov
int
enter
xor
mov
cmpb
rorl
loop
sub
mov
filds
nop
mov
pushf
sbb
fwait
cmp
imul
xor
or
and
repz
rorl
sub
test
dec
mov
mov
lock
std
push
inc
mov
out
fsub
cld
lahf
mov
arpl
repnz
adc
xchg
mov
and
test
sbb
or
les
mov
scas
sbb
push
mov
pop
pop
xchg
ja
mov
push
ret
sub
int3
mov
enter
enter
xor
sbb
je
popa
sub
adc
mov
insl
lahf
aad
and
xchg
lods
cs
add
push
xor
push
pop
out
add
lock
add
loope
inc
mov
mov
sbb
shll
repz
pop
mov
mov
scas
push
push
cld
ficompl
pop
je
test
add
jg
inc
push
lock
xchg
mov
dec
sub
push
dec
push
fsub
jmp
shrb
ror
int
pop
dec
call
inc
push
sahf
ret
test
cmp
push
mov
mov
or
outsl
mov
xor
adc
lcall
das
pop
cmp
sbb
imul
fsts
aam
not
mov
adc
xchg
pop
xor
mov
pop
fimull
out
aaa
mov
lcall
adc
das
jnp
xchg
adc
mov
test
ret
sbb
test
ljmp
cwtl
imul
cmc
xchg
les
pop
insb
sahf
mov
in
jno
xchg
mov
jl
jecxz
xchg
popf
pop
fwait
loop
cmpsl
push
lods
dec
xlat
mov
push
pop
jecxz
shll
xchg
jmp
hlt
pushf
in
das
cs
hlt
jns
outsl
add
pop
insb
out
popf
mov
inc
lock
mov
mov
xor
dec
stos
stc
push
add
adc
sbb
mov
iret
push
test
insb
js
cmp
cmpb
jp
hlt
lock
clc
rcrl
lret
and
sub
icebp
loope
outsb
inc
mov
sub
in
jb
dec
xchg
gs
ss
xchg
call
and
stos
sbb
sti
mov
mov
aas
loope
ficompl
jle
outsl
fisubrs
mov
push
ds
dec
mov
ds
dec
loope
sub
add
xchg
adc
pop
or
mov
jg
pop
push
xchg
jno
mov
xchg
mov
mov
cmp
decb
in
hlt
loopne
cmpsl
bound
ss
cli
xchg
inc
loop
nop
inc
and
lret
mov
pop
xrelease
mov
mov
xchg
mov
shl
and
inc
ffree
sub
mov
cmc
int3
or
imul
cmp
aam
and
pop
pop
xchg
cmc
mov
pop
push
test
pop
das
sub
inc
mov
push
xchg
out
sarl
pop
sahf
dec
inc
jmp
sti
sti
push
mov
pop
es
mov
bound
jo
xlat
jbe
ja
aas
subb
pushl
fmuls
push
lret
add
sbb
jo
aam
mov
adc
sbb
dec
or
fwait
cmp
mov
fistps
push
mov
ljmp
dec
bound
push
cmp
mov
lret
scas
movsl
push
icebp
fsubs
sbb
int3
cmp
test
iret
jmp
in
pop
mov
mov
sbb
and
outsl
adc
push
fildll
test
xlat
repz
cmpsb
stos
les
inc
lret
adc
pop
mov
cmp
dec
mov
xchg
or
stc
mov
and
aad
xor
adc
adc
hlt
push
sub
xchg
add
les
shrl
imul
fimuls
outsl
movsl
fs
mull
nop
xor
mov
jmp
pop
xchg
cltd
jl
pop
and
movsl
mov
arpl
stc
lods
rolb
inc
je
insl
cmp
push
imul
mov
lret
xchg
add
lock
test
sarb
mov
lret
fcmovnu
mov
jbe
outsl
mov
ljmp
out
jl
mov
dec
mov
push
inc
imul
aaa
add
cmc
xor
dec
rorb
pop
sub
daa
mov
fimuls
call
ja
fcompl
test
out
frstor
pusha
fwait
js
or
push
cs
popf
sub
and
out
out
gs
cmc
pop
sbb
sti
adc
imul
jnp
mov
lock
jge
jecxz
mov
lahf
imul
bound
cmp
loopne
pop
mov
or
mov
dec
cld
push
je
outsb
das
cmpsl
aas
shr
icebp
or
pop
jecxz
cmc
mov
in
loop
lods
in
jo
je
pop
push
data16
dec
push
cmp
aam
clc
mov
xchg
adc
frstor
dec
add
es
mov
repnz
insl
or
mov
int3
nop
int
rcll
mov
mov
inc
dec
push
cwtl
das
incb
movsb
push
fstl
sub
out
add
inc
jns
fs
push
in
scas
rcrl
gs
cmp
cld
outsl
test
dec
outsb
lcall
sahf
mov
pop
fcoml
push
pop
xor
int
jmp
ret
jae
stc
push
or
push
imul
in
repnz
xor
and
lods
mov
cli
or
dec
outsl
leave
mov
testb
stos
pop
dec
or
clc
sbb
cmpb
dec
push
aad
test
jl
jmp
add
test
nop
ret
cli
xlat
fimuls
mov
cmp
adc
xchg
pop
in
ret
sub
pop
out
push
insl
js
xlat
mov
cmc
fwait
and
push
mov
out
lock
fstpt
out
push
inc
rcrb
jb
cs
mov
jp
inc
mov
push
mov
mov
fimuls
fs
arpl
and
icebp
aam
fimull
loopne
icebp
push
repnz
mov
or
cld
jae
mov
xor
pop
mov
loope
and
popa
es
jns
adc
cmp
leave
push
mov
lock
frstor
orl
movsb
in
fidivl
repz
repz
cmp
dec
xchg
jg
sub
inc
ljmp
cwtl
mov
cld
dec
jle
xor
lods
lret
sahf
ret
sbb
add
or
mov
loopne
jmp
iret
and
and
mov
fsubrs
std
mov
xorl
pop
cmpsl
xor
push
shl
pop
popa
or
xchg
jbe
out
mov
fninit
lret
imul
pop
cmp
jbe
int
cmc
cmc
shl
jb
cwtl
testl
push
inc
lret
stc
mov
fstpl
orb
mov
jae
ss
ljmp
jns
stc
loope
loop
fimull
imul
xchg
call
lahf
inc
mov
dec
fimuls
add
dec
adc
dec
xor
or
add
push
mov
rcrb
dec
adcl
movsl
jnp
mov
jns
das
mov
mov
add
mov
inc
adc
das
mov
je
pop
int3
jns
js
mov
lds
repz
and
mov
dec
loope
int
sbb
bound
mov
xlat
and
cmp
sub
stc
movsb
and
outsb
out
xor
inc
add
or
jb
push
xchg
dec
loopne
lock
xchg
mov
imull
sbb
adc
iret
repnz
fbld
pop
jecxz
das
push
in
aad
or
cmc
jnp
or
std
jo
lret
sub
push
push
add
dec
mov
mov
fwait
repnz
dec
nop
int3
movsb
repz
sbb
or
outsb
sub
decl
mov
and
data16
imul
sbb
jecxz
and
jmp
jmp
pop
pop
rol
movsl
jmp
jns
mov
inc
loop
ror
mov
mov
adc
in
xchg
popf
push
cmp
dec
aad
mov
inc
divb
sbb
push
xchg
inc
mov
sbb
les
addr16
pop
dec
pop
hlt
movsl
rclb
cld
sub
mov
and
out
addb
iret
fwait
xchg
dec
gs
leave
fsts
lahf
mov
rcl
cmpsl
in
jne
mov
mov
leave
and
dec
std
shll
push
adcl
cmp
push
andl
ret
leave
mov
dec
sarb
fstl
inc
xor
sbb
dec
pop
add
xchg
test
imul
fcomps
mov
jg
push
add
loop
adc
push
adc
mov
ret
call
and
lock
push
inc
inc
add
popa
dec
mov
cmp
jl
fs
loop
sbb
push
and
cmp
xchg
cmp
dec
dec
sbb
out
sub
lahf
jo
push
xchg
add
and
and
rorb
adc
test
cwtl
mov
jp
xor
push
adc
and
mov
lret
mov
cwtl
sbb
dec
cmpl
mov
pop
mov
push
out
xor
or
in
push
test
repz
sti
jns
cltd
imul
or
push
mov
insb
enter
imul
cltd
ss
popf
ret
xor
or
lcall
cmp
sti
mov
xor
cmpsb
adc
mov
sarb
pop
stos
fstp
mov
mov
fs
mov
mov
and
stos
lret
push
pmuludq
push
sbb
adc
outsl
ret
mov
xchg
push
inc
mov
lods
in
adc
fstl
push
arpl
mov
mov
repz
ja
push
and
sub
xor
jge
pusha
ja
mov
popf
push
inc
movsl
negl
sub
shl
or
sub
add
lods
mov
add
xor
scas
insb
and
negb
addb
test
lds
mov
fstl
jcxz
int3
sti
jmp
repz
ds
repz
jne
sti
and
xchg
into
cwtl
mov
lahf
jb
mov
adc
or
mov
lcall
or
mov
mov
adc
and
sbb
mov
jbe
mov
or
and
push
xor
pop
cmp
or
in
jmp
sbb
mov
out
dec
je
pushf
lcall
outsl
push
bound
add
test
xchg
adc
aaa
clc
lret
ret
aam
push
xor
sub
and
ss
pop
pop
xor
jne
mov
mov
dec
subl
sbb
or
aaa
cmp
push
ret
xor
or
fisubrs
and
jp
or
pop
adc
adc
pop
fistpll
mov
sub
xor
mov
out
pop
arpl
push
fisubs
hlt
insb
mov
aaa
fidivl
dec
scas
icebp
push
shll
ret
daa
lods
out
mov
shlb
cmp
adc
andb
cltd
xor
xor
or
inc
mov
pop
xchg
scas
popa
arpl
add
xchg
or
jl
enter
inc
cmpsb
push
daa
and
xor
pop
gs
jbe
in
mov
addl
jle
pop
enter
es
aad
testb
xchg
stc
mov
jmp
js
fimuls
movsb
adc
vmovupd
out
rorl
dec
movsl
test
cwtl
mov
add
daa
push
fs
mov
sahf
insl
jns
sti
dec
xchg
xchg
mov
lret
ret
lret
pop
or
insb
fnstsw
test
inc
mov
push
lahf
fwait
mov
in
mov
adc
push
cmp
pop
jb
pop
rolb
push
gs
scas
pop
imull
mov
call
ljmp
data16
out
bound
movsl
ds
clc
out
mov
mov
fs
or
mov
and
xchg
adc
and
lods
xchg
push
movl
push
out
loope
into
lods
fwait
push
push
lcall
lods
fwait
ds
add
into
dec
loope
and
les
adc
mov
xchg
punpcklbw
test
jb
sub
jmp
and
sub
sub
or
icebp
sbb
mov
dec
push
call
jnp
imul
sbb
sub
test
js
jnp
cli
stos
xchg
adc
bound
adc
enter
cmp
inc
ja
mov
or
or
movsb
ljmp
pop
stc
dec
add
and
jnp
adc
inc
inc
loop
xchg
loope
mov
mov
sbb
xchg
or
add
dec
jle
and
bound
flds
mov
xchg
dec
jmp
push
cld
jne
add
mov
fadd
lret
cwtl
mov
pop
or
pusha
fnsave
out
mov
dec
rclb
popf
ljmp
nop
out
out
iret
and
mov
adc
xor
aam
mov
dec
mov
inc
jmp
movsl
push
imul
mov
sub
or
xchg
xchg
push
push
fwait
mov
pop
dec
mov
ret
dec
cmp
sarl
and
jle
sbb
pause
sarl
xchg
ror
mov
pop
pop
lds
pop
xor
stc
sbb
cmp
cmp
inc
lret
int
sarb
aas
into
leave
divl
dec
outsb
pop
das
adc
daa
je
arpl
xchg
mov
jmp
push
adc
test
test
shrl
cwtl
mov
pop
pop
in
in
and
adc
inc
jne
rorb
pop
int
sbb
mov
adc
fs
mov
rorb
outsb
stos
sub
xor
mov
jmp
xlat
pop
jo
fidivl
add
push
fisubrl
inc
enter
aaa
sub
repz
jg
std
daa
sub
psrlq
mov
push
cli
fisubl
jnp
dec
popa
idivb
pusha
lahf
out
pop
xor
pop
cmpsl
push
and
add
push
adc
mov
adc
fadd
dec
add
shlb
out
ja
vmaxsd
arpl
jg
mov
inc
repnz
notb
jae
xorl
rclb
add
scas
mov
jecxz
dec
ljmp
lcall
daa
jl
stos
ss
pop
mov
or
jmp
sar
lcall
imul
push
or
popa
es
add
mov
inc
push
lods
mov
sbb
loope
inc
call
or
push
pop
or
add
inc
sub
sahf
jae
jnp
lahf
shrl
lods
rcll
cltd
mov
test
jae
cmp
adc
inc
lods
adc
lea
movsb
xor
pop
iret
mov
ret
inc
mov
fiaddl
sub
test
dec
imul
mov
and
or
add
fmuls
mov
jmp
mov
xchg
dec
jae
jmp
jecxz
lret
arpl
repnz
inc
push
sbb
sbb
cld
bound
lock
and
cmp
xor
push
jne
movsb
test
fwait
pushf
les
sbb
mov
rol
mov
push
arpl
mov
mov
mov
popf
loop
dec
sbb
addl
je
daa
push
idivb
insl
mov
sub
rcrb
loop
fsubp
in
shl
arpl
filds
arpl
mov
adc
out
push
stos
xchg
mov
mov
jne
jno
popf
in
adc
mov
rolb
mov
ja
push
mov
jbe
sti
cmp
gs
push
testb
bound
sbb
sarb
dec
sbb
ds
lock
mov
call
int3
add
jmp
leave
xchg
xor
addr16
dec
add
stos
pop
lcall
cmp
sar
adc
loopne
fdivl
push
sub
sahf
inc
stos
and
aam
sahf
imull
inc
jbe
icebp
pusha
and
add
fstps
xchg
push
cmp
decl
call
hlt
dec
jp
cmpsl
icebp
mov
inc
pop
mov
fdivrl
into
sbb
push
mov
in
xchg
push
movsl
jbe
push
cld
fwait
mov
push
xor
add
adc
ret
fisttpl
mov
xor
sahf
mov
xchg
push
cmp
arpl
push
ljmp
inc
xor
daa
sbb
pop
ds
add
jns
jo
push
inc
pop
pop
push
rolb
pusha
cmc
push
mov
lods
dec
sbb
sub
push
cltd
push
icebp
nop
mov
sub
ja
daa
repnz
dec
pusha
shll
scas
inc
push
clc
insl
into
rcrb
out
pop
jne
adc
dec
outsl
pop
and
popa
test
aam
loop,pn
imul
fstp
insb
test
arpl
lock
xlat
ds
jle
sti
mov
mov
popf
pop
add
addr16
push
lock
cs
inc
xorl
aaa
dec
lret
dec
add
rorl
xlat
js
imul
mov
in
rcll
or
push
ret
pop
inc
fidivl
push
gs
es
mov
mov
call
xor
lock
adc
dec
mov
fisubrs
ret
and
push
test
and
mov
outsb
je
adc
xchg
nop
mov
pop
or
cwtl
stc
pop
sub
and
sbb
pop
cli
jbe
adc
pop
sub
add
push
mov
addr16
and
nop
sub
insl
insb
dec
repz
jbe
jmp
fisubrl
adc
ljmp
dec
sbb
cmp
xchg
movl
shrb
push
lds
dec
das
mov
xchg
cmc
loope
sbb
inc
sahf
jmp
repz
fisttpll
sbb
stos
out
add
push
shll
fstl
adc
push
stos
popf
fs
mov
and
out
mov
mov
add
dec
movsl
out
mov
out
dec
add
pushf
out
lret
ss
lods
cwtl
push
ja
xor
pop
pop
daa
cwtl
int
mov
mov
xchg
mov
popf
pop
adc
je
std
cwtl
jl
push
cmpsb
rorb
xor
cmp
mov
rcll
das
xorl
mov
mov
sarl
pop
iret
xchg
loop
add
icebp
sbb
les
fs
sub
jmp
fdivl
cmp
dec
ret
into
mov
std
xchg
and
dec
mov
loope
stos
xor
test
subb
sbb
adc
xor
push
scas
or
mov
movsb
into
mov
insb
daa
inc
mov
icebp
and
ss
push
sbb
sbbb
jmp
imul
es
inc
in
mov
jbe
cltd
pop
orl
mov
push
sub
jnp
insb
xchg
push
pop
or
sub
leave
xchg
es
cmp
push
fcmove
cmp
loope
stos
push
mov
push
add
pushf
xor
push
and
jecxz
cs
fnstcw
and
mov
push
enter
call
pop
inc
add
mov
out
push
sar
ljmp
mov
mov
ret
test
ss
mov
sbb
pop
mov
das
pop
mov
jno
pop
cmp
push
inc
push
outsl
lock
pop
cmp
sarb
jmp
out
pop
mov
dec
cmp
adc
jns
inc
repnz
repnz
leave
insb
lods
in
movsb
jp
add
lea
lret
push
ljmp
int
pop
sar
cltd
and
imul
or
and
jecxz
xor
insl
xchg
xchg
and
push
sub
dec
sub
jo
cmp
push
sub
adcl
sub
pop
cmpl
aaa
pop
dec
outsb
lcall
mov
cli
pop
fmul
sub
pop
mov
movsl
fldl
dec
mov
std
push
test
addl
rolb
inc
outsb
mov
fistpll
movsl
mov
divb
arpl
or
dec
add
mov
jb
mov
lret
mov
mov
sbb
mov
out
and
xchg
js
push
call
cmp
push
jns
pop
push
add
add
push
xlat
popf
pop
repnz
push
inc
call
maskmovq
divl
cmpsl
ja
sbbl
in
xlat
dec
push
sbb
daa
in
popa
or
test
nop
scas
loope
sbb
dec
mov
dec
inc
jnp
sub
cld
jle
push
pop
test
scas
shrb
jo
je
int3
addr16
fs
inc
mov
jb
cmp
mov
cltd
xchg
mov
mov
lds
call
imulb
fsubrp
xchg
ss
iret
inc
push
ss
xor
cmp
mov
push
mov
insb
cmp
lahf
scas
push
mov
sbb
les
mov
outsl
repnz
arpl
pop
das
bound
xorl
pop
jne
je
dec
add
mov
das
sti
andb
mov
fists
cmp
mov
loope
out
iret
sbb
mov
jbe
out
push
rclb
xchg
ja
sbb
rcll
mov
insl
jne
leave
fcomip
cwtl
jge
mov
popf
aam
mov
leave
ljmp
jo
repz
aam
call
insl
xchg
pushf
mov
shl
inc
rorb
xlat
sub
pop
cs
pop
sbb
clc
jo
loope
ja
cmp
sub
push
inc
stos
cmp
sahf
sbb
xchg
mov
shr
push
cmp
mov
stc
sub
lds
iret
mov
push
fisttpl
jae
fwait
inc
mov
loopne
subb
sub
xchg
std
jae
adc
fiaddl
mov
sahf
jge
mov
xlat
sbbl
shr
jae
push
or
pop
pop
jno
xorb
imul
into
jg
mov
les
inc
jne
ret
sbb
dec
subb
dec
sbb
movsl
into
add
jno
paddq
pop
xlat
shl
call
movsl
clc
int
out
xchg
sub
dec
jl
ret
out
adc
aaa
mov
sbb
xor
xor
mov
test
popa
jno
cs
push
mov
pop
mov
test
rorb
inc
mov
subl
scas
sbb
out
and
jnp
sub
daa
push
cmp
adc
xchg
inc
cmp
adc
iret
xchg
pop
outsl
ljmp
test
out
mov
dec
sbb
stos
addl
sub
push
lods
cmovp
cs
dec
add
arpl
aam
mov
and
push
int
sbb
rcl
xor
ficomps
dec
push
or
sub
dec
je
mov
or
imulb
popf
push
js
add
mov
scas
movsb
into
push
imul
inc
in
xchg
push
mov
cmp
or
aaa
pop
bound
in
rorb
ja
add
dec
scas
stc
gs
fstps
push
daa
xchg
sti
jp
xor
loop
and
pop
aaa
dec
popf
sub
mov
scas
lcall
xchg
aad
push
adc
ds
inc
dec
dec
add
in
aaa
insb
sub
sub
push
sar
xorb
add
mov
ss
pop
mov
mov
lock
icebp
mov
loop
cmp
or
xor
test
add
lods
and
adc
xchg
pop
loopne
mov
cmp
enter
cmpsb
addb
push
cmp
jo
mov
add
dec
pop
sub
jne
in
push
jge
enter
and
and
daa
xchg
mov
inc
in
pop
push
popf
cwtl
sbb
fadds
jmp
or
or
divb
ficoms
mov
inc
push
mov
mov
xchg
add
repnz
in
test
xchg
pusha
add
ljmp
into
aaa
fidivrl
addr16
and
xchg
xlat
push
ret
pop
xchg
adcl
or
loop
pop
cmp
shl
ljmp
mov
lea
bound
sbb
dec
lds
test
enter
fbstp
lret
popf
mov
xlat
xchg
inc
push
addb
int3
inc
lcall
aaa
in
jbe
mov
mov
ret
pop
not
xchg
mov
and
sbb
push
gs
sar
fimuls
jae
push
mov
ja
ss
cmp
js
push
push
cmpsl
inc
add
push
cltd
shll
loope
pop
adc
dec
lds
jns
leave
pop
lds
mov
mov
sbb
and
xor
out
movsl
ficompl
test
lds
xchg
xor
pop
sbb
rcrl
mov
jmp
jno
lret
ss
push
rorb
in
and
aad
xor
xchg
cli
js
lds
shlb
jo
dec
popa
sahf
or
in
fdivrl
cmp
cli
jmp
lods
dec
xchg
icebp
testl
mov
scas
push
jbe,pt
lahf
add
notb
jno
out
push
ds
xor
lods
mov
gs
xor
out
popa
imul
jnp
loopne
lds
add
movsl
adc
pushf
jge
mov
inc
cmp
jnp
mov
and
enter
mov
push
jle
adc
xlat
icebp
mov
popa
pop
jne
fwait
aas
push
jae
out
dec
popf
dec
roll
mov
dec
mov
imul
jecxz
sub
mov
arpl
test
test
ss
mov
ja
popf
inc
dec
shlb
add
adc
push
xlat
push
stos
rcll
in
sbb
aam
or
pop
dec
leave
xchg
mov
out
sub
je
scas
notb
lahf
pop
fwait
add
cmpl
lcall
out
sbb
adc
movsb
sbb
jbe
mov
in
xor
jbe
xor
dec
loope
loope
inc
add
cmp
jecxz
popf
daa
push
inc
push
push
adc
dec
addr16
pop
jge
push
in
dec
shll
ret
sbb
sbb
dec
scas
pop
pushf
int
clc
fsubrs
ds
out
mov
ficoms
insb
stos
lahf
mov
mulb
push
or
stos
std
mov
mov
mov
jbe
lahf
mov
xor
mov
jge
leave
dec
aam
adc
or
dec
jecxz
cmp
scas
addr16
pop
mov
push
adc
jge
fisttps
add
movsb
aam
pop
xchg
test
add
jg
dec
mov
ja
or
mov
jp
jge
testl
iret
repz
mov
aaa
repz
push
test
test
xor
xchg
insb
push
imul
aam
sbb
jecxz
xchg
idiv
xor
push
pushf
xorl
mov
fldenv
shrb
dec
fbstp
pop
xchg
lock
sbb
mov
js
dec
adcl
jmp
data16
or
jp
xor
push
test
xchg
cltd
jge
jns
lret
pushf
pop
lock
sub
push
hlt
jecxz
dec
imul
sub
xor
jle
or
dec
cmp
aad
cmp
loop
sub
aam
mov
lret
inc
test
push
inc
push
and
mov
outsl
xlat
pusha
dec
mov
mov
ljmp
sub
jge
insb
mov
jo
mov
adc
out
js
jg
movsb
xchg
ss
push
arpl
push
aad
lods
push
inc
inc
mov
jg
mov
mov
cs
nop
lret
das
lock
les
mov
sbb
out
pop
cmp
adc
dec
sti
jge
out
clc
or
xor
icebp
pushf
add
cld
ret
mov
dec
sub
and
mov
push
push
jb
enter
mov
xchg
xor
push
dec
push
xor
test
or
pop
or
dec
add
loop
ds
inc
ljmp
adc
cltd
push
enter
lods
adc
xchg
mov
aad
add
or
jno
and
aaa
icebp
mov
fidivs
idivb
cmc
pop
rcrl
or
dec
add
andb
pop
dec
add
test
xor
lds
pushf
xor
enter
stc
ljmp
xchg
add
pusha
cmpsb
into
pop
push
pop
stos
cmc
pop
repnz
or
fsubr
aas
push
xor
cmp
test
add
dec
cmp
cmp
rcl
cmpsl
jbe
imul
daa
lahf
lea
imul
arpl
dec
push
rcrb
movsb
push
push
xchg
movsb
outsl
icebp
lahf
push
mov
push
adc
jecxz
adc
sbb
pop
outsb
andb
cwtl
stos
adc
mov
sub
xchg
jl
sbb
mov
mov
mov
fisttpll
pushf
aas
dec
add
in
dec
rorl
mov
cltd
mov
pop
inc
in
dec
ds
ret
ret
sahf
jns
dec
xchg
enter
iret
in
nop
inc
stos
sbb
jle
popa
rolb
loop
adc
mov
mov
mov
in
xor
sbb
sbb
push
jg
and
or
mov
insb
xor
negb
add
jno
daa
xlat
cmp
leave
cmp
push
and
test
dec
in
test
das
je
fadd
repz
in
bound
add
out
pop
imul
push
fists
cmp
or
addr16
jecxz
pop
ficoml
fsubs
push
mov
lods
outsb
lahf
in
js
call
ret
rorl
stos
mov
sub
mov
stos
sub
data16
pusha
and
scas
insb
idiv
xchg
sbbb
inc
adc
jo
aad
fs
fistps
push
pushf
xchg
jb
mov
mov
aaa
int
xchg
out
sbb
mov
push
cmpsb
arpl
xor
leave
outsl
stos
ja
add
fmull
scas
sbb
xchg
shl
inc
dec
or
xor
in
and
ret
pop
je
or
dec
mov
mov
mov
or
loope
repnz
les
sbb
aad
lret
stos
enter
xchg
fsubs
mov
sti
lods
sbb
es
add
arpl
out
pop
inc
mov
adc
fdivrs
ret
jle
fsts
fildll
fcmove
cltd
push
adc
cmp
or
outsl
mov
test
push
push
xchg
popa
popa
repnz
dec
jle
add
jae
iret
repnz
mov
insb
or
mov
mov
dec
mov
fstl
dec
jle
mov
daa
movsl
pop
cmp
loop
rcl
pop
mov
xlat
mov
repz
in
fldcw
jmp
ljmp
jnp
gs
push
push
cmpsb
sti
jp
push
mov
ret
mov
and
xlat
lcall
add
mov
jg
adc
dec
xor
pop
imul
adc
mov
lret
in
mov
pop
adc
jl
push
cmc
out
add
test
outsb
dec
imul
daa
lds
rol
adc
mov
mov
das
jge
lds
pusha
inc
lahf
jg
push
cwtl
jb
mov
inc
mov
jge
leave
and
push
stos
mov
and
fdivp
ret
loope
mov
mov
roll
cmp
in
data16
push
fs
out
pop
pop
fsub
in
daa
or
jecxz
xchg
aad
push
mov
add
cli
sub
add
je
inc
sbb
out
cmp
rclb
rcrb
test
arpl
push
icebp
imul
pop
mov
or
aam
fwait
xchg
dec
adc
scas
rcl
cmc
xor
mov
push
sbb
out
sbb
ret
and
jp
jmp
inc
xchg
mov
mov
mov
pop
inc
jl
stos
cmp
and
xor
cmp
xchg
ficompl
or
xchg
loope
and
add
outsb
stos
sti
push
pop
arpl
jns
jp
pop
mov
movsl
fistpl
idivl
roll
pushf
push
mov
pop
mov
dec
sahf
icebp
lock
and
sbb
popa
rol
pop
push
push
xchg
jl
mov
fcmovu
xor
mov
sub
jmp
mov
lea
and
jmp
xchg
cmp
in
add
scas
negl
dec
out
scas
and
sbb
rcrb
adc
cli
pop
push
out
mov
add
pop
clc
adc
pop
lcall
jno
jns
pop
aaa
mov
das
jno
daa
addr16
testl
mov
mov
loopne
jae
je
js
insl
movl
les
js
pop
movsb
addr16
pop
inc
sahf
stos
stos
mov
pop
mov
std
adc
adcb
cld
lds
xor
sub
out
xor
sbb
int3
dec
and
pop
mov
push
fmuls
cltd
fistpll
fs
cmp
pop
xchg
shll
push
fnsave
ljmp
scas
test
mov
push
in
dec
out
xchg
pop
sub
popa
dec
add
bound
cld
repz
mov
xchg
nop
in
loop
icebp
leave
test
inc
into
push
inc
hlt
out
stos
rcrl
ret
sarl
jecxz
push
ds
out
rolw
aad
mov
cmc
ja
lods
jae
sbb
gs
sub
jbe
xchg
mov
or
lahf
add
push
xchg
jmp
push
imul
sbb
mov
mov
jecxz
mov
sub
mov
jp
mov
sub
mov
in
push
mov
add
push
in
push
lret
and
push
inc
jbe
push
fwait
test
mov
pop
add
xchg
imul
add
in
mov
push
mov
ss
negb
pop
and
stos
aaa
jbe
mov
mov
sbb
test
stos
cmp
fdivs
sbb
movsb
dec
cmpsl
xchg
jne
stc
push
dec
mov
cld
add
inc
imul
sbb
pop
shrb
mov
dec
or
test
cwtl
xchg
push
adc
mov
shl
mov
adc
mov
popf
adc
leave
leave
or
adc
inc
push
fwait
mov
pusha
call
or
shlb
and
cmp
clc
shrb
test
inc
mov
test
sahf
leave
adc
mov
jle
xor
into
add
cmc
push
add
cmp
int3
out
mov
pushf
out
mov
mov
loope
mov
enter
inc
arpl
adc
pusha
shrl
jle
push
push
ret
std
or
insb
mov
sbb
mov
int
mov
iret
and
arpl
mov
mov
xchg
fucomip
das
sbb
cmpsl
xor
jne
push
and
stos
inc
out
cld
inc
mov
lock
dec
daa
inc
ret
or
gs
cmpsb
sub
fs
lahf
std
gs
repz
out
aas
mov
xchg
lods
xor
fbld
andb
in
fstpl
movsb
fcmovnb
ret
cmp
pop
adc
clc
out
mov
imul
nop
push
addr16
imul
stos
push
xor
mov
cmpsl
fldcw
out
or
push
cli
push
jns
mov
movsb
cmp
mov
mov
mov
negl
movsb
popl
movsl
sahf
mov
push
les
and
ret
arpl
test
or
hlt
jno
push
ret
enter
add
mov
aam
rorl
pop
mulb
sarl
outsl
adc
lret
pop
jp
pop
sub
mov
test
test
xchg
outsl
jmp
sub
aas
xchg
imul
or
xlat
xlat
xor
xlat
inc
dec
jmp
fcompl
add
pop
cmc
push
cwtl
or
sbb
insb
andl
jge
or
or
adc
mov
fucomi
in
mov
xchg
add
fbld
ror
pop
pop
mov
popf
fnstenv
adc
inc
or
fdiv
bound
daa
pop
sbb
pushf
movsl
lret
inc
cwtl
xor
sbb
pop
add
jle
lods
adc
sbb
xchg
dec
cltd
pop
dec
orb
push
lods
lea
shll
dec
xchg
jmp
or
movb
sub
aam
and
stos
mov
mov
or
mov
out
hlt
repz
pop
test
push
addr16
lods
repz
xchg
add
jno
mov
push
inc
lods
fmuls
cmovge
or
hlt
xchg
in
sarl
movsl
lcall
add
or
dec
shlb
pop
add
add
hlt
pop
cwtl
dec
fiaddl
repnz
shll
jb
pop
mov
pop
jnp
in
stos
les
lret
push
jb
mov
and
xchg
int3
push
adc
mov
xor
inc
jmp
pop
in
sbb
mov
dec
aad
push
pop
aad
mov
dec
sbb
mov
leave
push
fs
mov
xchg
mov
push
or
fcoml
in
jmp
andb
sub
iret
xor
mov
mov
test
addr16
js
mov
arpl
out
ficomps
pop
cs
xor
push
mov
xchg
or
push
mov
inc
or
jle
das
enter
int
pop
stc
in
add
jnp
pushf
adc
pop
stos
addr16
js
pop
mov
mov
mov
xor
sbb
repnz
or
mov
nop
mov
add
pushf
pop
sti
sahf
das
xchg
shll
lds
arpl
pop
push
jbe
sarl
add
fadds
xchg
or
mov
mov
ds
pusha
shl
in
cmp
and
pusha
call
icebp
mov
push
aaa
xor
filds
repz
mov
data16
inc
inc
push
xchg
lahf
das
movb
movsl
mov
add
lock
jbe
adc
decl
insl
cmpsl
imul
ljmp
mov
cwtl
icebp
or
lds
andb
mov
add
sub
cmpsl
arpl
enter
xchg
es
sarb
call
mov
pop
pop
sti
aaa
mov
and
mov
jmp
fsubl
push
dec
je
cmpsl
shl
sub
mov
and
jmp
notl
pop
enter
cmp
xor
ss
mov
out
xor
or
fcompl
lcall
cmp
dec
icebp
jns
adc
xor
shr
out
popa
es
or
cmp
insl
mov
insb
mov
sbb
xor
pop
or
imul
sti
push
pop
shrb
mov
daa
mov
dec
and
in
ljmp
xor
in
adc
xchg
repnz
mov
dec
inc
xor
int
jle
outsb
xchg
push
mov
mov
mov
ror
cmovbe
in
jle
inc
fmull
dec
dec
aam
push
cmp
arpl
cwtl
test
adc
and
lret
sti
inc
lds
ss
dec
xor
andb
lcall
aad
xor
and
adc
gs
rcrb
sub
data16
shlb
jmp
cmpsl
idiv
adc
fcoml
and
fstpt
mov
mov
ss
bound
scas
dec
jmp
jns
lds
mov
lahf
sbb
scas
scas
les
cli
neg
sbb
xor
xchg
xchg
add
jge
sar
inc
and
lock
jb
ds
nop
dec
mov
into
pop
inc
mov
sbb
pushw
bound
adc
jb
jne
cmpsb
rclb
push
xchg
fisubs
aaa
hlt
out
scas
clc
lret
adc
stc
xor
or
add
fwait
jle
mov
adcl
xchg
aas
loop
adc
jl
data16
fiadds
ret
in
jne
mov
jl
int
loop
xor
movsl
push
pop
ret
mov
gs
hlt
std
test
mov
sbb
rol
js
push
sub
dec
outsb
cmpsl
or
xor
sub
andl
les
pop
xor
rcrl
pusha
stos
fcmovnbe
cmp
jmp
lgs
push
mov
inc
jmp
pushf
stc
jbe
xchg
sub
inc
add
mov
sbb
xchg
pop
xor
fwait
movsl
out
sbb
jbe
mov
cld
iret
push
jae
cmp
stc
add
int
imul
mov
fs
ljmp
dec
mov
add
pop
lret
clc
mov
je
jle
stos
mov
cwtl
jnp
mov
out
dec
inc
filds
mov
sarb
pop
aad
outsl
fdivr
adc
jge
cltd
jne
sbb
inc
icebp
fs
or
mov
pushf
mov
insl
bound
mov
mov
push
decl
rol
mov
mov
fcmovnb
pop
lods
xlat
pop
imul
pushf
mov
pop
aaa
shrb
dec
addr16
push
hlt
ljmp
xor
ljmp
dec
pushf
xchg
mov
rcll
loop
pop
pop
mov
xchg
test
and
xor
rolb
fistl
push
fcomi
pushf
xchg
add
or
movsb
pop
pusha
stos
cmp
pop
inc
xchg
inc
sub
lods
mov
add
add
jl
lret
call
jnp
inc
sub
lods
jno
mov
push
insl
mov
dec
std
sti
mov
aad
mov
or
out
pop
or
add
jle
xchg
faddl
aas
add
popf
std
ret
outsl
pop
jecxz
jmp
push
and
lods
andl
push
push
outsb
out
shrb
jl
cmp
xchg
jecxz
and
push
pop
push
rclb
xor
mov
adc
add
jecxz
aam
mov
rcll
scas
out
mov
nop
ds
addr16
dec
jnp
decl
cld
enter
enter
hlt
inc
cltd
iret
sbb
inc
mov
and
jne
out
loop
push
lahf
test
bound
insl
sbb
ljmp
cmp
jge
lods
push
mov
sbb
inc
fstl
mov
push
add
or
mov
fidivrs
scas
inc
lea
push
sbb
jnp
ffree
test
xor
xchg
lods
pop
cmp
jnp
fnstenv
leave
out
cld
mov
xchg
and
ret
pop
adc
mov
scas
fistps
test
cmp
int3
xor
repz
gs
or
nop
fmuls
push
mov
lods
test
jmp
stos
jle
push
adc
xor
rcll
cltd
mov
mov
shrb
enter
xchg
inc
icebp
push
aad
roll
aas
fldt
iret
mov
outsb
push
adc
rcrl
push
push
loop
dec
int
adc
pop
adc
adc
push
push
lods
test
jecxz
sahf
push
mov
or
cs
or
sahf
jge
xchg
mov
ret
push
fdiv
mov
xor
pop
shll
pop
pop
rcr
mov
push
xchg
mov
and
pop
lret
jmp
shl
xor
mov
jmp
pop
xchg
aam
ds
jmp
lea
gs
loopne
xor
sbb
lahf
adc
cmp
sbb
loope
lret
out
inc
inc
inc
pop
sti
insb
adc
lds
fldt
jns
daa
lods
add
pop
mov
cmp
push
add
ss
das
sub
add
js
add
mov
or
or
lock
scas
addr16
adc
fisubl
stc
mov
and
mov
add
ret
imul
inc
pop
les
iret
push
test
and
add
daa
mov
xchg
orb
stc
sbb
jmp
pusha
dec
push
sarb
ror
lret
jnp
scas
into
inc
je
lods
lahf
mov
into
aam
adc
hlt
in
xchg
sub
cmp
push
push
add
jb
add
and
shlb
out
pusha
mov
xlat
lock
sub
dec
mov
insb
iret
push
outsl
or
sbb
dec
sbbb
lods
jle
stos
icebp
es
rolb
pop
pusha
addr16
sbb
enter
xchg
xor
stos
sti
and
lret
pop
cltd
loop
cli
inc
dec
sub
sahf
insl
jg
and
adc
outsl
xlat
iret
push
sbb
jbe
jle
xor
mov
in
adc
aaa
fildl
shrb
sub
jne
mov
mov
dec
xlat
addr16
adc
test
pop
inc
popa
mov
and
sbb
lret
add
pop
lahf
mov
or
negl
dec
dec
xchg
or
fistl
push
mov
lods
test
mov
add
sbb
pop
aas
jle
lret
mov
sub
cmp
sub
lret
push
shll
outsb
movsl
adc
call
xlat
test
mov
data16
and
aas
inc
inc
and
fs
into
sbb
int3
pop
jle
add
fstpt
cltd
mov
imul
mov
clc
fsubs
unpcklps
cmp
cmpsb
iret
push
bnd
inc
jecxz
mov
lea
cltd
shrl
test
push
ljmp
mov
ret
leave
jno
fwait
test
test
mov
cs
into
int3
lret
push
cmp
add
es
jmp
mov
cwtl
sarb
cmp
add
xchg
movsb
hlt
faddl
call
mov
ret
sti
sbb
dec
rcrl
fcmovnu
inc
and
popa
jmp
cltd
push
xlat
les
cmp
push
ret
adc
or
cltd
add
stc
cmp
jae
adc
sahf
loop
leave
or
add
mov
and
popf
lds
dec
push
lahf
lret
add
les
mov
lcall
jb
xchg
cs
orl
loop
push
lcall
pop
stos
rorl
out
clc
mov
pop
xor
xchg
cld
xor
and
gs
mov
mov
mov
add
add
neg
sub
push
add
fiadds
jg
stos
mov
pushl
mov
int
aad
inc
test
mov
pop
mov
pop
ficomps
push
jge
mov
fnstsw
xchg
shrl
mov
jle
and
mov
ret
lcall
nop
fdivr
dec
mov
xchg
dec
scas
mov
mov
sbb
adc
push
sbb
mov
dec
out
jle
gs
lcall
mov
sti
cli
in
pop
mov
sti
sbb
insb
mov
pop
out
add
jecxz
stos
xor
mov
ja
ss
lods
fnstenv
mov
cltd
dec
mov
ffreep
pop
mov
sbb
call
aas
dec
mov
pop
mov
icebp
sbb
jb
lock
test
mov
aaa
jne
push
mov
popa
fiaddl
xchg
cmpb
sbb
daa
jnp
xchg
jb
lea
dec
cltd
push
jbe
insl
cmp
cli
cwtl
xchg
jl
test
push
adc
cmp
shrb
rolb
fsubl
imul
mov
ss
pop
add
adc
inc
sub
pop
cmpsb
jge
sbb
imul
movsb
or
push
dec
sub
sub
pop
outsl
stos
jecxz
repnz
fwait
mov
pop
cs
jl
test
int3
jb
jno
jb
sub
jge
pop
jp
cmp
or
sbb
loope
xchg
les
clc
jo
and
xor
repz
ja
js
inc
inc
mov
pop
out
in
mov
push
push
call
xchg
xor
jl
or
inc
mov
pop
andb
lahf
ljmp
inc
int3
dec
inc
cmp
dec
ljmp
pusha
or
stc
sarl
test
sub
je
sub
lods
fimuls
xor
xchg
xchg
mov
aad
push
cmp
jmp
sti
push
jae
js
data16
in
dec
lds
lret
xlat
and
jmp
inc
call
inc
or
mov
and
inc
in
outsb
jns
in
jle
jno
sbbb
inc
test
movsb
inc
loope
aas
cmp
in
loopne
roll
xlat
sub
or
fsubrs
mov
icebp
pop
xchg
xorb
push
mov
shll
jnp
push
ficoms
fs
sbb
mov
nop
and
test
lret
pop
lahf
ss
iret
cmc
fwait
sub
and
push
add
and
dec
fisubs
ss
jne
adc
push
ljmp
inc
test
mov
pop
and
sbb
pop
push
test
adc
jno
test
dec
mov
inc
int3
in
fmul
push
lods
icebp
icebp
jo
dec
mov
mov
ret
leave
adc
jbe
xchg
xchg
mov
mov
mov
xor
mov
jmp
fadds
aam
jecxz
das
cmp
push
add
cltd
dec
mov
js
arpl
adc
mov
dec
push
mov
cs
repnz
ja
jg
cmp
mov
rolb
icebp
insb
mov
mov
pusha
xchg
popaw
aas
adc
and
or
sub
test
movsl
popa
xchg
jg
or
sbb
jecxz
xor
ljmp
jno
or
lock
and
outsb
push
loope
dec
mov
jnp
or
imul
ja
dec
out
inc
es
inc
pop
inc
orl
sub
or
push
sbb
mov
jmp
movsl
jle
das
cmp
add
mov
mov
dec
and
mov
jbe
js
jecxz
std
imul
nop
das
ds
aad
insb
adcb
pop
daa
rcrb
and
sub
cs
mov
inc
push
out
roll
out
xchg
subb
cld
add
sti
int3
add
sub
int3
out
jge
sbb
jns
mov
inc
and
and
add
push
sub
repnz
mov
mov
test
insl
lahf
cmpsb
enter
ret
cmp
push
rorl
pop
loopne
dec
aam
movsl
push
sbb
subb
sti
icebp
cmpsb
lods
call
fsts
push
adc
push
mov
iret
mov
test
xlat
inc
push
arpl
dec
mov
div
mov
loope
les
mov
fs
rcll
fiaddl
call
popf
and
cmp
pop
xor
add
adc
andb
enter
sbb
xor
or
lock
mov
lahf
adc
js
fidivrl
outsl
push
adc
dec
push
mov
xor
mov
cmc
int
nop
cwtl
mov
cmp
movsl
inc
mov
ja
pop
jl
or
mov
rclb
scas
pusha
adc
sub
cld
int
mov
xchg
cmp
inc
mov
sti
addr16
xor
mov
inc
xor
push
xchg
aas
jns
lods
in
call
push
or
out
clc
xchg
push
movsb
lret
push
xchg
aaa
movsl
movsb
jle
js
push
loopne
mov
jl
mov
pop
xchg
lret
adc
aam
out
shl
sbbl
cmp
fcomp
cmp
iret
xor
cltd
mov
cltd
cltd
lods
test
stc
imul
mov
flds
cmp
test
sub
jnp
pop
cmpsb
pop
inc
dec
and
inc
sbb
clc
or
push
ret
jns
rolb
dec
jo
call
out
repnz
adc
xor
arpl
fsub
jmp
xchg
lea
rolb
mov
orl
xchg
imul
adc
popa
pop
movsl
cmc
ds
mov
aas
ds
rorb
xchg
cltd
jae
jge
lods
xlat
sub
andl
or
insl
sbb
fisttpl
in
jecxz
mov
xchg
ss
push
std
fwait
mov
stos
popa
stos
pop
test
hlt
aam
clc
inc
fwait
outsb
cwtl
cmc
xor
adc
out
mov
mov
js
or
aaa
not
ds
pop
int
mov
sbb
and
jae
jb
sbb
gs
mov
push
lds
lahf
or
stc
and
lods
mov
shll
jo
fs
cld
push
mov
mov
xchg
mov
dec
add
aad
inc
js
lret
cmp
orl
test
imul
or
push
out
jmp
stos
mov
xchg
pop
cs
in
daa
into
fiadds
adc
sub
sbb
jno
push
sbb
push
or
fs
xchg
into
pop
mov
jge
pushl
std
enter
jle
pop
dec
subl
addl
imul
loope
and
sbb
shlb
pop
nop
test
inc
jge
nop
ljmp
loope
and
inc
mov
aam
test
jle
test
xlat
mov
and
xchg
push
adc
push
xchg
or
push
decl
xor
xchg
jp
push
sbb
aad
stos
hlt
mov
mov
jmp
fisubs
std
cmpsl
popa
cmc
test
jp
frstor
ss
test
stc
push
adc
push
leave
imul
sbb
lcall
test
pop
sub
xchg
cwtl
lret
fwait
js
gs
mov
stos
fmuls
xchg
mov
lods
and
fsubrp
push
fisttpl
lods
insb
jmp
and
cld
dec
loopne
cld
cmpsl
push
mov
and
adc
sub
imul
mov
sbb
insl
sub
lret
dec
rol
fildll
mov
inc
and
mov
jmp
pushf
inc
test
add
push
dec
or
popa
add
bound
jno
lahf
subl
and
pop
into
xchg
sbb
pop
mov
lods
mov
vpmaxsw
xor
sub
cmp
cmpsl
sahf
push
jae
push
cli
fstl
jp
or
adc
jge
inc
outsb
mov
push
rcrl
adc
loop
push
test
cmp
out
mov
and
jne
mov
add
xchg
cmpsl
push
testb
and
fsubr
mov
jno
mov
loope
mov
add
mov
xor
pop
sbb
or
cmpl
and
pmulhuw
sar
add
jmp
mov
ss
lea
or
fldpi
imul
lret
cwtl
jbe
scas
push
add
push
push
in
sbb
loop
cmp
out
dec
push
mov
icebp
repnz
icebp
fyl2x
or
lret
mov
dec
inc
sbb
fildll
ret
inc
ja
stos
sbb
jbe
dec
pop
dec
test
clc
gs
or
jnp
aam
and
pmulhuw
jge
sub
cmp
jl
mov
les
in
sti
jb
stos
dec
ja
sub
xchg
sub
stc
aad
call
outsl
test
lea
and
dec
andb
loope
inc
imul
ret
mov
push
add
pop
mov
adc
std
dec
cli
mov
sub
pop
push
push
mov
fcmovne
jecxz
popf
movsl
testb
and
inc
cltd
inc
int
repz
icebp
int
fistpll
xor
mov
sub
push
adcb
mov
pop
sti
add
adc
jnp
dec
popf
sti
mov
adc
dec
mov
add
pop
shll
sahf
rclb
jecxz
xlat
pop
iret
out
push
arpl
xor
inc
dec
lea
in
cltd
pop
std
mov
test
adc
add
xchg
std
mov
xor
out
andb
loopne
sub
shll
xor
pop
scas
mov
mov
clc
and
xchg
sub
hlt
cwtl
pop
insl
add
cld
pop
in
int3
fsubrl
or
div
out
fchs
movsl
sbb
aaa
xor
lods
adc
mov
int
data16
sbb
pop
shrl
mov
xor
scas
subl
inc
data16
and
ds
cli
xor
aaa
scas
imul
dec
xchg
mov
aas
mov
pushf
rcll
shl
xchg
addl
cmp
jbe
inc
loopne
mov
adcl
and
dec
dec
mov
sbb
data16
cmc
push
fs
test
sbbb
insb
jecxz
ffreep
push
pop
xlat
outsb
sub
and
push
or
jl
mov
sbb
fdivrs
cmpsl
scas
dec
fwait
sbb
rolb
fnstsw
mov
push
mov
push
add
pop
jp
add
int3
enter
out
fdivrl
inc
jp
lret
fcomip
push
rcl
inc
insb
add
xchg
sahf
add
dec
leave
xchg
js
addl
mov
call
les
jbe
inc
pop
sub
in
pop
in
les
pop
xchg
mov
pusha
sbbl
rclb
test
xchg
jbe
mov
jns
cmp
sbb
mov
int3
cld
pop
movsb
stc
dec
push
test
cmpsb
mov
cmpb
jb
cmp
out
sub
push
jge
les
and
lea
cmc
push
add
pop
fnstenv
popf
lods
push
gs
dec
push
mov
imul
sbb
stc
sar
mov
sbb
adc
sbb
push
dec
fimull
jnp
xlat
push
and
movsb
rcrl
movsb
in
mov
inc
in
cmpsl
push
push
dec
push
adc
fildl
inc
cld
lcall
jo
outsl
test
lret
inc
and
adc
push
aad
jne
adc
in
rep
mov
into
xchg
stc
into
pop
mov
sub
cltd
cmp
loop
mov
cmpsb
popf
push
cmp
xchg
repz
inc
sub
xorb
ss
pop
xor
in
mov
ret
jge
push
cmp
movsb
sub
push
ret
xor
sbb
ljmp
xchg
roll
dec
mov
je
into
and
es
fmull
clc
xor
lret
les
stc
add
movsb
mov
mov
fstl
or
stos
aas
inc
push
cmp
std
aad
and
xorb
mov
pop
into
out
shll
aas
jno
push
clc
pop
imul
repz
pop
ljmp
mov
mov
pop
adc
add
inc
mov
popa
jne
testb
push
mov
mov
fs
dec
dec
and
pop
mov
xchg
push
imul
push
cmp
jb
pusha
xor
sub
mov
fsts
xchg
jmp
mull
lods
sub
inc
inc
dec
cmp
mov
xchg
clc
jecxz
mov
inc
cmpsb
dec
rep
push
push
std
inc
mov
push
shll
jns
sahf
test
add
int
loop
int3
aas
jmp
mov
shll
icebp
loope
mov
cmpsb
cmc
push
sahf
cmp
mov
cmp
fucomp
mov
and
mov
negl
aad
xchg
ljmp
imull
loopne
movsl
ret
std
dec
enter
mov
repz
std
sub
clc
xchg
int
cli
mov
push
dec
cmpsb
jecxz
insb
leave
test
repnz
outsb
push
jb
or
push
clc
adc
dec
push
cmp
pusha
cli
jg
sbb
js
popa
pop
lods
mov
pop
sbb
cmc
pop
push
mov
call
aaa
mov
std
and
loopne
sahf
push
les
movsw
and
imul
dec
mov
mov
pushf
pop
sub
pop
andl
jl
sub
dec
pushf
cmpsb
lcall
stos
repnz
and
xchg
inc
fcomip
je
pop
rolb
rolb
cmpsb
xchg
imul
pop
cli
movsl
xchg
or
inc
add
pop
mov
mov
mov
adc
scas
cmpb
fmuls
push
in
roll
push
xchg
test
jae
jae
adc
sarl
test
mov
push
adc
lods
sbb
cmp
mov
sub
jecxz
test
sub
xchg
repz
shl
dec
jne
stos
xor
pop
cmovbe
cmp
pop
jp
andl
push
fcomps
cmp
mov
sbb
repnz
mov
insb
cli
inc
sbb
sahf
ret
jmp
bound
inc
shrb
jg
jge
cmp
sbb
aam
inc
stc
or
push
into
mov
sbbb
loopne
or
cmc
and
lcall
orl
add
dec
std
je
hlt
pop
mov
mov
jb
lret
test
push
nop
push
sbbl
add
cwtl
cltd
add
adc
lods
pusha
stc
mov
sub
jmp
and
aaa
lret
xor
sub
jne
sbb
imul
insb
jnp
ds
inc
or
dec
pop
in
adc
in
add
xchg
sub
xor
dec
xor
cld
mov
add
out
jle
hlt
adc
inc
add
aam
decl
das
out
loopew
leave
clc
jne
cltd
sub
in
sahf
jmp
sub
in
stc
and
arpl
push
xor
aad
movsb
out
in
imul
mov
sub
popa
inc
rorb
push
jbe
sub
push
jbe
stos
push
test
mov
lods
adc
pop
dec
and
mov
outsb
mov
gs
aad
cmp
mov
mov
or
lret
push
pop
leave
push
or
scas
imul
cltd
push
daa
xchg
push
xchg
xor
jp
fsubl
xchg
ja
xchg
rol
test
inc
add
out
mov
cmc
rclb
inc
adc
in
mov
and
pusha
scas
jae
jne
gs
pop
push
adc
or
aam
orb
out
push
dec
enter
fisubs
ret
fidivrl
outsb
xor
subb
mov
and
and
ret
pop
in
cmc
xchg
sub
sar
imul
jne
xor
push
stc
mov
lret
add
xchg
push
xchg
sub
cmc
stos
sarb
dec
fs
push
sub
das
sub
push
cmc
xchg
filds
rcll
js
imul
es
mov
dec
xchg
enter
mov
jecxz
fwait
scas
stos
mov
jo
mov
lock
xchg
pop
int3
popa
sahf
inc
bound
cld
and
orl
cld
arpl
xor
pop
sub
cmp
pop
out
int3
push
pop
jp
stos
pop
push
xor
leave
mov
push
jl
aaa
ss
and
cs
test
dec
dec
mov
inc
mov
ss
leavew
test
lahf
dec
repz
loopne
cli
lods
les
dec
jmp
sahf
xchg
or
stos
cmpsl
pushf
imulb
lret
roll
loope
bound
and
pop
xor
dec
mov
fnsave
shl
adc
mov
xchg
xor
mov
xor
or
sub
outsb
iret
out
dec
pop
and
in
mov
or
aam
dec
mov
xor
je
jmp
lret
outsl
stos
icebp
push
dec
aad
lods
lret
jnp
cmp
bound
stc
sarl
stos
int
fildl
adc
fstps
negl
lock
sahf
ss
outsl
mov
lea
push
cmp
pop
cmpsb
or
mov
inc
xlat
cs
in
mov
in
test
hlt
dec
pop
ljmp
add
leave
push
pop
mov
pop
pop
insb
imul
pop
iret
push
add
sbb
and
sub
mov
clc
pushf
jbe
lret
in
sub
add
push
fistpl
pop
sti
add
jle
add
xchg
cwtl
lret
ret
jg
cmpl
mov
pusha
jno
mov
lds
xorb
data16
inc
fistl
jl
jne
aam
mov
mov
fldt
push
in
xor
mov
divl
sbb
aaa
cmp
ja
scas
call
int
test
lahf
mov
mov
loope
ret
mov
out
dec
xchg
movsb
out
xor
fisttpl
lahf
sub
rolb
sub
cwtl
lock
clc
inc
sbb
jg
xchg
stos
adc
inc
pop
cmp
stc
push
push
nop
fcoml
repz
mov
fwait
sub
sbb
cs
fwait
mov
xchg
into
cmp
pop
sbb
cmp
mov
pusha
mov
mov
js
cmpsl
xor
push
jns
ljmp
cmp
lock
push
ds
mov
and
jb
xor
bound
mov
scas
shrl
push
in
xor
pop
rolb
iret
enter
pop
xorl
mov
dec
mov
xor
jge
popf
mov
repnz
pop
push
xor
xchg
mov
cli
jecxz
pushf
jae
pop
xchg
add
ror
lahf
mov
adc
jo
lods
jmp
add
mov
lock
fnstenv
dec
rorl
pushf
dec
lahf
out
clc
ret
ret
push
xchg
sti
or
test
xchg
xchg
idivb
push
leave
cs
xor
inc
xchg
sub
jecxz
sbb
sub
cltd
cmp
or
push
jnp
orb
fisubl
out
lea
popf
pop
stos
lcall
mov
std
in
inc
pop
ror
push
mov
push
sbb
push
jnp
mov
and
and
sbb
adc
es
cld
sbb
mov
lahf
hlt
mov
mov
insl
loope
mov
and
pop
fildll
repnz
pop
fucomi
jae
sub
push
dec
fldcw
mov
jae
inc
adc
mov
sub
pop
into
lods
cmp
mov
jmp
adc
dec
jb
jae
sbb
insl
leave
call
enter
cmp
mov
pop
pop
xor
inc
jg
int
pusha
or
xchg
cmp
cmp
and
jnp
out
or
xchg
aad
mov
add
mov
ret
or
int3
inc
lahf
addl
int
std
jg
jmp
scas
fs
mov
cmpsb
pop
dec
mov
mov
xchg
scas
mov
adc
dec
je
cld
fistl
cmpsb
mov
fnstsw
call
lock
das
sub
movsb
jb
nop
mov
jp
cld
lock
mov
hlt
repz
xor
inc
leave
pop
jmp
adc
addb
shl
dec
mov
sub
shlb
popa
ficompl
rorl
and
call
and
dec
rcl
out
int3
sub
fwait
push
stos
les
mov
pop
dec
dec
sbb
push
cli
sbb
xor
jg
out
rol
int3
jae
and
mov
mov
cmp
jae
loop
inc
hlt
adc
std
push
or
mov
and
jne
shrb
scas
mov
mov
cmp
dec
stc
lcall
ljmp
ffreep
mov
es
pop
es
xor
lahf
jae
push
push
xchg
pop
hlt
cwtl
mov
jbe
into
sub
shl
sbb
inc
dec
mov
dec
fwait
and
mov
lock
fs
jle
test
xor
push
xadd
inc
sub
inc
sub
pop
push
rcll
rorb
ret
addb
sarb
or
lock
mov
imul
adc
xor
cli
or
mov
sti
pop
fsts
sub
enter
ja
shlb
cmp
push
cmp
lret
inc
or
sub
jb
ljmp
insb
insb
jecxz
add
xor
sbb
jle
outsl
loopne
jle
jae
and
lret
pop
jecxz
sbb
inc
fs
dec
mov
add
inc
jae
and
push
xchg
or
push
faddl
push
ja
push
mov
sahf
push
out
cmc
xlat
loope
mov
push
repz
xchg
mov
daa
cmp
dec
out
mov
cmp
push
adc
movsb
mov
repz
or
sarb
mov
add
fwait
shll
add
sub
loopne
ror
mov
lcall
fsubs
imul
jcxz
incb
arpl
sarb
test
aad
imul
ds
pop
mov
shlb
imul
mov
in
mov
adc
inc
xlat
movsb
lock
out
jns
hlt
loope
and
pusha
mov
or
mov
mov
out
push
dec
jnp
data16
or
int3
out
xchg
jno
pmuludq
or
jmp
test
sarl
lods
push
jo
in
push
dec
push
pushf
in
adc
add
call
shll
pop
sbb
push
push
stos
test
aam
sub
adc
pop
dec
pop
xor
push
js
sbb
jp
push
mov
xor
push
std
add
pusha
add
jae
mov
mov
movsb
mov
xor
adc
and
xchg
popa
int
push
add
ss
cwtl
jne
push
fbld
outsb
or
push
popf
jl
mov
xor
sub
mov
and
push
test
es
pop
jp
jnp
pop
stos
into
cld
dec
test
mov
cmp
dec
les
mov
xchg
mov
stos
mov
loopne
push
mov
inc
test
xchg
cmc
ss
push
lcall
ret
in
scas
jp
xlat
jae
lods
outsb
aas
mov
jbe
dec
mov
insl
xor
or
mov
lods
adcl
xchg
lock
incl
or
pop
add
cmp
jno
xor
mov
stc
lahf
daa
cmp
lret
xlat
enter
inc
push
les
pop
insb
xchg
daa
sub
mov
lods
fdivr
loope
xor
pop
les
inc
das
cs
cli
out
jae
dec
jl
jo
fcomp
add
addb
cwtl
jo
in
pop
mov
add
ficomps
loop
imul
adcb
jns
shll
or
cmp
imul
or
arpl
push
lret
sub
stos
pop
mov
cmpsb
mov
or
dec
pop
xchg
cmp
mov
std
or
inc
dec
ror
int
mov
and
aad
lcall
sbb
gs
les
int3
ret
mov
push
add
pop
push
add
jp
std
scas
sahf
push
shlb
hlt
daa
jecxz
jl
fiadds
pop
and
mov
sub
aas
push
pop
push
jmp
xchg
inc
jbe
xor
add
daa
jb
aam
push
leave
or
mov
push
pop
rorb
call
xchg
pop
movsb
xchg
adc
push
pop
mov
in
fisttpll
test
push
xor
popf
lock
dec
dec
mov
imul
and
adc
icebp
push
xlat
mov
mov
adc
inc
sbb
adc
das
lods
and
mov
jge
or
push
push
inc
jp
pop
int3
dec
pop
enter
push
sub
test
cld
lds
movsb
repnz
daa
dec
xorb
outsb
cli
push
jp
jne
jecxz
outsl
and
xor
cmp
enter
pop
loopne
aam
cmp
cmp
sub
test
and
test
jmp
addb
sub
lret
cmp
push
clc
and
shr
aas
mov
int3
out
xor
push
adc
dec
push
sbb
sbb
rolb
sub
fs
xorb
lods
jo
leave
push
or
or
cld
lods
loop
movsl
xchg
mov
shrl
push
sub
and
xor
sub
adcb
inc
add
xlat
out
or
popf
xchg
and
pop
adc
xchg
and
sar
arpl
xor
fisttpl
adc
repz
stos
js
fistpl
loop
inc
fs
mov
adc
jbe
push
cmp
in
mov
daa
iret
sarb
mov
pusha
mov
jge
or
pop
mov
jge
out
movsl
add
ds
pop
mov
stc
loop
or
das
or
add
scas
dec
mov
hlt
aaa
xchg
fs
mov
inc
mov
out
stos
fcmovu
movsb
push
mov
sbb
icebp
mov
call
xchg
mov
xchg
lcall
daa
push
push
cmp
js
data16
data16
sub
sar
ret
mov
fsubl
andb
push
je
inc
mov
loope
lcall
push
pop
dec
repnz
fldl2t
imul
and
or
mov
sub
lret
lods
pop
sub
andl
cmc
inc
mov
out
mov
imul
mov
fwait
sub
push
or
bnd
fstl
adc
cltd
add
lret
outsl
loope
push
mov
and
loopne
sub
enter
mov
jae
loopne
inc
mov
call
xchg
dec
iret
test
cwtl
sbb
sbb
xor
cmpsb
fldl
jl
mov
subl
test
stos
push
dec
loopne
adc
int
pop
stos
push
lock
arpl
dec
test
jge
movsl
and
xchg
ss
fidivl
popf
fwait
mov
inc
cmp
or
mov
imul
dec
dec
or
jbe
mov
jae
cmp
xor
sti
dec
and
mov
ror
inc
push
pushw
cmpl
insb
xor
mov
mov
xchg
jmp
adc
dec
hlt
repnz
subl
out
xchg
push
test
mov
xor
fs
mov
mov
xchg
ss
lea
xchg
repz
mov
jg
loopne
int3
fcmovnu
xlat
in
push
lea
inc
jecxz
movsb
test
repnz
or
xor
or
imul
and
jle
mov
loop
ret
shlb
lret
js
and
xchg
jecxz
jl
add
popa
xor
std
test
or
sbbb
mov
repz
mov
mov
sbb
lds
cmp
mov
pop
mov
in
push
mov
je
and
xor
stos
cmp
xchg
xchg
inc
cmc
xor
jnp
mov
mov
ja
cmpsl
xor
xor
cmp
sbb
cmp
fstps
and
outsl
push
xchg
lret
gs
adc
jbe
or
sub
jne
mov
cmp
in
out
cld
call
and
add
sub
leave
pop
mov
mov
sbbb
jp
jns
fs
sahf
ljmp
adc
jnp
pushf
ds
cmp
cwtl
inc
jp
adc
jns
sarb
mov
sbb
xor
pop
gs
packuswb
ds
in
jbe
stos
shl
dec
push
out
cmp
or
clc
cmp
xchg
push
outsl
push
cli
sub
dec
and
into
mov
daa
lahf
cmp
clc
int3
fwait
shll
js
popa
clc
rcrb
push
or
bound
xor
dec
jnp
mov
and
in
mov
sbb
out
cmp
xchg
sub
or
xor
mov
sbb
dec
mov
cmp
lret
mov
adc
arpl
mov
jg
daa
repnz
push
nop
nop
pop
or
add
mov
mov
fcoms
mov
or
fdivrl
clc
stos
test
sub
jbe
fisubl
push
mov
repnz
cltd
imul
in
sbb
scas
out
lds
outsb
lds
lret
adc
orl
lcall
stc
je
adc
push
out
divl
out
int
sub
inc
adc
fstpl
pusha
mov
or
push
dec
mov
dec
add
xor
cmp
testl
pop
push
mov
test
xor
ret
inc
rorb
pop
push
dec
pop
mov
icebp
adc
fsubr
cs
push
and
popa
aam
test
mov
movsb
orb
movsb
enter
push
lcall
icebp
dec
je
push
mov
insl
insb
dec
mov
push
mov
jg
jae
leave
sbbl
xor
popf
shll
mov
sti
xchg
mov
add
rorb
pop
sub
arpl
pusha
cmp
cwtl
das
in
mov
test
iret
bound
shr
cli
stos
cwtl
mov
xchg
fadds
sub
fmuls
cmc
sbb
xlat
and
mov
test
jns
xorl
in
loop
dec
sahf
mov
jg
std
xchg
push
shlb
push
pop
pop
cs
xlat
cmpsb
ffree
sbb
ret
and
out
inc
push
or
push
jae
xor
dec
or
inc
aaa
jmp
je
sbb
jp
in
in
lea
adc
cli
xchg
cmp
stos
inc
mov
jecxz
cmc
mov
pop
mov
hlt
addr16
or
mov
aad
sbb
xchg
clc
test
dec
sbb
scas
call
loope
in
adc
xor
sub
aam
sub
xchg
xor
popa
mov
mov
jle
mov
push
mov
xor
mov
jp
jae
push
cli
ja
jne
orb
orb
mov
mov
sahf
mov
ret
cmp
and
mov
outsb
pushf
jp
in
or
insb
aam
enter
or
out
sbb
push
rolb
jae
dec
xchg
pop
jae
mov
sarl
sbb
mov
pop
outsl
add
rcll
call
mov
movsb
push
cmp
lods
insb
jb
fildll
imul
in
fdivrl
sbb
pop
push
pop
jo
ds
daa
cs
jae
cmp
aad
inc
mov
xchg
jge
pop
or
mov
sbb
adc
mov
sub
cmp
inc
cmp
jno
push
test
push
in
arpl
xor
aad
inc
movsb
add
repz
mov
fbstp
jb
test
lahf
mov
jle
mov
pop
aaa
hlt
loopne
xchg
jg
xlat
addr16
mov
lock
xor
call
scas
punpckhwd
cmp
cmp
xchg
out
fwait
lret
jp
jmp
aas
xor
xchg
or
inc
scas
movsl
fwait
loope
stos
repz
push
adcb
ss
cmp
mov
test
mov
sahf
mov
mov
or
insb
pop
pop
push
jle
sbb
pop
add
push
lcall
shrl
sbb
push
jl
faddl
pop
pop
in
push
fs
ja
fwait
jno
fcomps
fisttpl
sub
sbb
mov
jge
push
daa
sbb
lock
adcl
push
push
dec
insb
insb
sbb
push
mov
loopne
leave
push
jne
js
in
mov
xchg
sub
fsubl
lcall
pushf
mov
je
movsb
lods
add
sub
mov
movsl
aaa
adc
pop
xorl
gs
inc
inc
add
in
movsb
notl
les
movsw
pop
inc
xor
cmp
mov
push
cwtl
arpl
dec
pusha
mov
ds
in
mov
and
jne
fbld
mov
mov
mov
mov
pusha
dec
jno
pushf
ljmp
inc
lea
push
into
push
lds
je
seto
movsb
adcl
cli
add
lret
and
sbb
mov
imul
adc
lods
add
scas
push
jl
xchg
nop
repnz
inc
and
push
lods
imul
inc
pop
cmpsl
fiaddl
mov
inc
jecxz
test
cmpsb
dec
push
test
lcall
dec
cmp
and
cmpsl
rorb
in
jb
clc
ret
scas
jmp
test
aad
rcr
negl
ja
jo
dec
out
fisubs
dec
lret
push
or
xchg
lock
inc
int
das
aas
dec
cwtl
sbb
add
add
addr16
iret
mov
and
ret
sub
sahf
jb
or
ljmp
or
jmp
test
icebp
mov
fdivrl
dec
fiaddl
adc
les
pop
lcall
xor
push
hlt
outsl
lea
sbb
leave
rol
inc
sub
xchg
aam
insb
xor
pop
sti
cmp
cmp
add
test
enter
dec
out
cli
dec
push
push
in
lods
es
mov
jl
xor
xor
push
jne
movsb
enter
repnz
xchg
outsb
icebp
cltd
and
sbb
imul
icebp
push
push
cs
push
clc
arpl
push
out
and
inc
cltd
daa
sahf
test
into
repz
sbb
ret
inc
lret
add
lods
xor
hlt
dec
int3
push
xchg
push
ds
mov
mov
dec
in
cltd
test
aad
sysenter
push
sbb
sub
aam
mov
fwait
lret
roll
iret
lret
xchg
xchg
inc
jb
test
push
loope
ja
cmp
lret
sbb
xlat
add
loopne
jmp
push
push
fwait
or
cli
mov
divb
xchg
addl
xchg
pushf
adc
imul
sbb
inc
ljmp
or
js
lock
test
pop
stos
call
jno
aas
xchg
push
mov
mov
pop
movsl
xlat
xchg
push
lcall
lock
jo
xchg
xchg
cwtl
pop
mov
rcrl
je
popa
outsb
pop
adc
and
pop
adc
or
push
imul
sub
mov
ds
aas
icebp
aad
pusha
adc
clc
pop
mov
dec
mov
adc
stos
fstps
sbb
xchg
repnz
adc
add
jae
subl
mov
xchg
insl
ljmp
push
ja
mov
pop
dec
inc
pusha
adc
dec
pop
lods
rorb
insl
xor
push
jp
or
or
xor
inc
sahf
lds
mov
cwtl
pop
movsb
mov
jnp
out
push
sbb
mov
adc
test
mov
movsb
sub
cmc
call
dec
lods
orl
and
jle
mov
xor
int
fists
mov
outsl
loope
loope
pushl
jno
lods
xchg
push
nop
in
mov
jecxz
out
xchg
jae
test
and
xor
cmp
out
jge
idivw
xchg
in
jp
mov
xchg
mulb
sbb
cmc
sub
mov
add
js
fisubs
ret
scas
pop
imul
sbb
cli
and
mov
mov
test
mov
inc
mov
xor
in
in
test
cwtl
push
push
add
inc
int3
dec
divl
mov
int
mov
xchg
orb
jno
add
loopne
mov
dec
mov
jns
lods
shll
pop
push
cld
xchg
jg
push
mov
jge
rolb
mov
loop
pushf
pop
rorb
mov
outsb
sbb
mov
sahf
dec
xor
out
mov
movsl
out
cmpsb
lock
adc
xchg
lock
ss
lods
pop
bnd
das
cmpb
stc
inc
fnsave
movsb
or
and
fcmovb
jecxz
pop
daa
stos
push
fwait
add
test
imul
les
sub
adc
sbb
out
add
rolb
push
pop
mov
or
popa
sub
divb
in
push
push
dec
jb
jge
shll
mov
daa
stos
shll
lahf
fisubs
xchg
popa
ret
std
mov
pop
stos
dec
and
mov
std
adc
and
int
test
mov
adc
rolb
jne
fstps
pop
insl
push
into
xorb
fmulp
xchg
icebp
fisttpll
ljmp
mov
js
pop
popf
out
addr16
or
cmp
mov
mov
mov
loope
pop
push
xor
cmpsb
mov
div
xchg
mov
lock
jae
push
lcall
fidivl
adc
push
xlat
dec
mov
pop
push
ret
lods
push
in
add
adc
pop
pop
popf
xchg
or
add
inc
loopne
stc
mov
sbb
jns
fsub
pop
sti
inc
push
icebp
xor
push
popa
adc
pop
cmp
in
and
dec
stc
movsl
pop
adc
das
arpl
mov
jg
jb
imul
je
pop
call
enter
mulb
inc
xchg
scas
mov
lods
repz
push
mov
fwait
ret
insl
and
pop
shll
fndisi(8087
jle
cmp
into
ffree
outsb
orb
movsb
pop
or
sub
popf
or
jae
ss
out
mov
stc
push
pusha
imul
mov
xchg
dec
lahf
mov
lcall
mov
in
dec
mov
mov
icebp
iret
sub
pushf
mov
adc
repnz
jne
out
insl
arpl
js
mov
pushl
sbb
jl
add
cmp
sbb
pushf
std
test
mov
adc
addb
fisubs
sbb
dec
stos
das
dec
jle
mov
cltd
test
in
fdivs
cmp
cltd
push
cmp
mov
xchg
popa
xchg
je
xchg
add
scas
shl
fstps
pop
and
push
fstpt
mov
inc
popa
mov
data16
sub
lret
and
pop
cltd
loop
and
ret
lahf
mov
ss
das
dec
adc
push
jbe
call
jecxz
stos
in
xchg
mov
inc
inc
enter
cmp
mov
sub
cld
jl
cmpsl
lahf
lcall
mov
mov
push
lods
in
lods
sub
stos
sbb
in
pop
je
pop
arpl
out
js
cwtl
mov
scas
xchg
mov
fisubrs
mov
jne
pusha
into
bound
mov
or
mov
sbb
mov
push
int3
push
lock
outsl
push
outsb
divb
dec
aas
pop
jae
inc
jge
jno
movsb
pop
dec
pop
adc
dec
inc
adc
push
shlb
pop
repz
stos
xor
mov
xor
mov
xchg
jnp
movsl
repnz
loope
clc
dec
rol
out
lret
setns
inc
add
dec
and
ret
pop
daa
cmp
loop
je
sub
xchg
push
sub
adc
mov
jg
pusha
cmp
shll
and
sub
les
jne
lock
lods
xchg
pop
data16
cmp
test
adc
cwtl
hlt
into
pop
out
xor
std
idivl
xor
cmpsl
cmp
inc
jo
lret
lods
mov
iret
push
dec
test
dec
add
adc
jns
jmp
daa
mov
sub
les
pop
cmpsl
mov
mov
cmp
cmp
stos
mov
add
push
es
fistps
mov
stos
lds
xor
mov
mov
fidivs
push
sbb
fcoml
push
or
xor
sbb
push
cwtl
inc
bound
adc
or
pop
gs
jecxz
ss
imul
mov
popl
ss
and
sbb
sbb
aam
sub
aas
lahf
pop
pop
mov
xor
das
daa
outsl
imul
xchg
divb
jns
shl
enter
and
mov
mov
repnz
sbbb
scas
push
jp
adc
mov
lea
xchg
rep
push
mov
imul
popa
outsb
sbb
inc
sub
in
jne
insb
and
in
inc
andb
loope
mov
push
xchg
incb
fdivrs
sub
icebp
test
sbb
stos
hlt
add
inc
xlat
lcall
outsb
adc
xchg
and
fmuls
sahf
inc
jns
push
incb
sbb
or
dec
fadds
pop
repz
mov
jle
jae
dec
lcall
xchg
add
cmpsl
cmc
cmp
stos
mov
and
addb
mov
jmp
fs
fs
pusha
or
xlat
movsl
sbb
jno
sbb
movsb
adc
xor
out
dec
popf
loope
inc
xchg
scas
idiv
mov
lcall
mov
ret
seto
dec
pop
add
aas
outsb
xchg
lods
xor
cmpsb
push
fcmovnu
mov
or
and
enter
cmpb
jno
jge
bound
arpl
cmpsl
addr16
mov
dec
loop
mov
in
jb
mov
sbb
xor
mov
xor
cli
scas
jmp
mov
aad
lods
pop
aas
shll
das
xor
lods
mov
lods
jns
mov
rclb
faddl
pop
lods
mov
push
shlb
pop
cmp
mov
ss
lods
outsb
mov
shrb
inc
mov
xorl
pop
sub
es
inc
mov
jle
or
push
test
push
call
cs
push
insb
ficompl
mov
in
dec
inc
xchg
pop
add
xor
ret
or
pop
add
clc
shll
test
lds
jae
sahf
push
mov
xchg
xchg
push
popl
sbb
pop
ss
mov
sbb
or
mov
push
mov
hlt
in
dec
or
pushf
pop
shlb
pop
daa
flds
jne
mov
dec
and
inc
cld
cld
dec
dec
jp
cmp
jno
xor
lahf
or
mov
ss
xchg
mov
jo
adcl
inc
jo
ret
fisttpl
xchg
lds
lock
inc
mov
jno
dec
mov
dec
jle
xlat
dec
jns
pushf
mov
lea
mov
test
dec
push
aam
hlt
lods
xchg
sbb
or
push
insl
shrb
xor
xchg
sub
xor
call
add
pop
je
nop
jbe
jp
sub
movsl
pop
xor
mov
shr
xorl
sarb
cld
lcall
cltd
inc
adc
or
lret
mov
loope
jp
cmpsl
daa
xchg
std
loope
pop
push
sub
mov
fsub
mov
cmp
rcrb
test
push
in
and
sub
fldenv
and
push
inc
jae
cmc
dec
adc
pop
mov
sub
push
dec
cltd
mov
mov
sbb
push
loope
aad
sbb
xor
jo
sub
mov
inc
inc
push
push
mov
or
pop
xchg
lcall
movsl
push
mov
dec
inc
xor
cmp
in
pop
xchg
mov
adc
xor
aam
adc
adc
push
mov
xchg
test
cmp
jns
mov
lods
inc
cmp
push
imul
sbb
movsl
popl
inc
mov
pop
ja
jmp
rcrb
in
cmpsl
imul
mov
data16
mov
lds
in
fcoms
push
dec
lret
inc
fucom
mov
jno
sbb
data16
and
sub
lock
outsl
pop
xor
xorl
jne
pop
pop
adc
cmp
hlt
jl
push
inc
xchg
cld
cmpsb
sarb
lods
dec
sbb
mov
add
jns
inc
imul
in
sub
icebp
mov
lods
cmp
cs
pop
leave
ljmp
and
xlat
xchg
mov
or
out
xchg
leave
push
pop
das
jno
cwtl
add
xchg
mov
add
inc
rorl
jge
les
sbb
or
cmp
ds
mov
popl
or
outsb
popf
jae
out
dec
xor
mov
inc
ljmp
inc
jne
daa
ljmp
iret
and
stc
add
rcrl
mov
outsl
ss
lret
mov
loope
mov
test
test
add
das
lds
pop
pushf
mov
pop
xchg
outsb
push
add
adc
sbb
fwait
data16
in
in
pop
jae
fnstcw
outsb
sub
xchg
inc
sbb
fwait
clc
scas
xlat
fisubs
in
movsl
push
adc
dec
sub
sub
or
adc
push
es
fcoml
mov
sbb
int
add
std
lret
push
jp
dec
jbe
je
test
cli
sbb
insl
inc
cmp
es
cmpb
xchg
xor
push
jge
daa
cs
jg
sahf
repnz
sbb
stos
jg
inc
cs
lock
jmp
jne
sti
dec
stc
inc
out
std
orb
cwtl
fwait
mov
test
xchg
xlat
sub
pop
loope
inc
add
leave
mov
cmp
cmp
jno
popf
push
cmc
popf
das
out
orl
movsb
adc
int3
jo
sqrtps
lcall
dec
jle
out
push
in
leave
sub
mov
mov
fistpll
ds
fmull
push
push
sahf
pop
sub
aam
sub
xorl
push
adc
mov
mov
inc
cltd
pop
in
jns
or
mov
sub
cld
sub
push
cwtl
insl
scas
jge
aam
cmc
pop
pop
xor
in
movsb
lahf
fisttpl
loope
sub
arpl
fsubl
sahf
lret
xchg
xchg
and
push
xchg
xor
xchg
sub
jl
cmp
aaa
pop
repnz
push
dec
xor
cmp
adc
adc
or
push
mov
adc
adc
dec
bound
in
cli
stos
inc
aam
jp
cwtl
ficomps
pop
inc
dec
add
dec
and
cmp
dec
out
or
in
jmp
jg
jns
inc
loop
jbe
fdivs
or
or
out
fisubrl
cmp
test
lret
inc
test
dec
jg
loop
aam
fiadds
das
mov
or
inc
sbb
sub
sti
push
push
jmp
out
nop
out
xchg
add
mov
cmp
iret
data16
pushf
fisttpl
sbb
scas
ret
push
andb
jns
and
mov
xchg
sbb
nop
and
inc
cs
or
xchg
in
cwtl
daa
mov
js
dec
jnp,pt
cmp
adc
mov
sbb
mov
cli
inc
mov
xor
nop
mov
std
sub
movsl
pop
sbb
or
xlat
les
push
insb
imul
call
add
pop
mov
cmp
inc
xor
jp
mov
mull
loop
ss
add
pop
lea
push
arpl
mov
subb
push
pop
lret
jecxz
xorb
cmp
pop
xchg
sub
cmpsl
cmc
and
cmp
xchg
cmpsl
sub
shll
xchg
inc
mov
and
addb
bound
inc
cs
test
es
mov
lcall
daa
out
cmpsl
add
in
mov
in
imul
ja
enter
and
add
jge
xchg
lret
mov
cmp
pop
dec
pop
or
out
cmp
jmp
lret
lahf
xor
or
mov
aam
inc
or
ja
dec
jecxz
dec
add
fucomp
pop
int3
jb
xchg
and
push
loop
xor
adc
mov
xchg
in
fisubrl
fldt
add
push
push
cmp
pop
lock
fs
and
pop
movsb
cmpsl
add
xchg
add
scas
ja
arpl
ja
xchg
jo
pop
push
aaa
loopne
das
cmc
sbb
fucom
add
outsb
out
pop
call
scas
inc
addl
ljmp
push
jo
ds
sbb
fwait
inc
jo
imul
push
cli
in
addr16
inc
and
in
mov
push
jbe
mov
and
test
dec
dec
insb
and
mov
repnz
call
mov
loop
xchg
sbb
ljmp
sub
pop
lods
mov
enter
mov
idivb
aam
pop
stos
divl
iret
sti
dec
fsubl
outsb
xchg
cmp
fdivrs
jnp
pushf
jl
sub
lret
adc
push
push
dec
mov
fmul
xchg
push
test
movd
push
adc
fldl
gs
mov
faddp
pop
int3
sbb
int
outsb
into
xchg
push
in
lods
jnp
stos
xchg
aaa
adc
adc
add
stos
mov
call
jl
outsl
stos
mov
push
inc
enter
sbb
jp
sub
xchg
mov
sub
sbb
aaa
and
test
push
nop
stos
movsl
ljmp
pop
sbb
jg
adc
dec
push
lods
push
cmp
adc
add
pop
xchg
mov
sbbb
add
mov
add
pop
pop
rol
and
fs
and
fwait
mov
dec
stc
cmp
insl
insb
call
mov
mov
inc
inc
mov
call
mov
aam
cld
aad
sarb
add
aas
aam
pop
add
jg
dec
cmpsb
shr
jmp
xor
dec
imul
jp
adc
push
movsb
sbbl
mov
fnstcw
pop
dec
jmp
mov
scas
das
int
mov
mov
jecxz
jne
mov
xchg
jmp
xlat
loope
xchg
jp
rcr
xlat
pop
jne
cmp
xor
lcall
insb
pop
sbb
shlb
adcb
lods
cmp
fiadds
jecxz
daa
rol
scas
loopne
mov
adc
ljmp
int3
fcos
fldenv
movsl
rcrb
aaa
ds
sub
lock
lods
push
push
xor
ja
aam
cmp
mov
cld
subl
add
mov
sub
dec
xchg
fwait
ret
xor
divb
ret
mov
mov
and
gs
outsl
sbb
or
je
inc
out
xorl
lahf
inc
push
jge
int3
mov
fcmovnu
testl
enter
rclb
dec
stos
rolb
inc
or
inc
cmp
pop
adc
or
sbb
cwtl
lea
cmp
xor
inc
jns
lret
dec
je
outsb
jno
loop
ficompl
xor
test
push
mov
mov
sti
js
pop
xor
mov
sahf
push
sub
push
aaa
aaa
jg
add
adc
inc
clc
sub
mov
aaa
aaa
int
les
loop
pop
les
cmp
inc
fldl
and
das
pusha
or
push
inc
pop
rorl
xor
add
dec
mov
popf
data16
mov
mov
and
movsl
ss
out
ljmp
xchg
inc
pop
mov
or
mov
aaa
rclb
mov
in
repnz
mov
push
xor
push
loop
adc
push
fiaddl
pop
sti
sbb
mov
pop
xor
fisubrs
jl
xor
sub
das
adc
popa
stos
inc
dec
fstps
push
jb
outsb
add
or
xchg
nop
lcall
inc
dec
xor
mov
popa
push
jg
lret
out
inc
imul
cs
pop
mov
and
sub
jne
mov
hlt
int
or
xchg
insb
inc
push
jb
and
adc
jb
and
dec
mov
int
fimuls
add
fbld
mov
test
or
lret
fcmovnu
sub
xchg
dec
loopne
incl
xor
lret
xchg
sti
or
repz
lret
int3
xchg
mov
outsb
push
fldenv
cmp
in
imul
dec
mov
add
mov
push
inc
clc
pop
sbb
pop
push
xchg
xor
cmpsl
out
xchg
push
cmp
out
xor
pop
fstps
adc
stos
shll
testl
fstl
call
int3
mov
push
sti
dec
adc
cmp
sbb
xor
jp
cmp
add
lods
dec
xor
xor
lcall
adc
mov
xorl
adc
mov
dec
mov
mov
mov
dec
pop
push
push
jle
fs
xchg
in
idivb
roll
mov
pop
inc
sub
jo
faddl
xor
loopne
mov
ret
enter
jo
or
and
push
adc
popf
imul
test
jmp
lahf
outsb
xor
dec
aas
roll
sub
add
pop
ds
cmp
jnp
loopne
lahf
andl
sarb
arpl
xchg
enter
mov
pop
fs
cmp
cli
test
enter
ret
ljmp
movsb
push
addl
mov
std
popf
cmp
pop
mov
dec
mov
mov
sub
dec
dec
adc
cmp
aaa
in
mov
or
movsb
fsubs
push
jl
mov
jl
imul
mov
push
mov
jmp
sbb
mov
stc
aad
jnp
movsl
push
divb
jmp
jne
fmul
push
pop
mov
aas
mov
adc
sti
sarl
repz
cli
pop
jb
mov
bound
jb
cmp
lcall
push
mov
jl
je
fiadds
sbbl
push
cmp
test
sbb
push
outsl
cmp
leave
xchg
jmp
int
in
movsl
sti
jecxz
lock
rcll
push
jmp
mov
fidivrs
push
outsl
movb
sar
fwait
add
mov
fisubs
movsl
adc
adc
cmp
lret
out
aam
xlat
or
add
and
cmpsl
pop
and
lea
mov
adc
loopne
call
shrl
lret
pop
cmc
repz
repnz
pop
pop
and
pop
jl
or
pop
leave
int3
das
and
xchg
das
sub
lcall
mov
sub
es
and
pop
push
test
fcomip
or
cmp
jp
mov
adc
jns
rcl
in
cmp
push
xchg
lret
inc
inc
sbb
ficoms
insb
lret
mov
test
arpl
inc
out
negl
dec
repnz
add
mov
movb
pop
push
inc
mov
adc
mov
cli
push
nop
movsl
push
fisttps
jbe
jbe
or
or
mov
pop
out
add
xchg
and
cmp
fldl
mov
repnz
stc
mov
push
xchg
jno
pop
or
mov
jle
insb
bound
int3
dec
movsl
fisttpl
jle
pop
in
xor
aas
loope
sahf
and
call
add
test
mov
inc
mov
push
incb
xor
adc
xor
das
push
out
out
invd
jbe
aaa
popf
add
add
mov
mov
pop
xchg
iret
sbb
into
nop
jp
test
cltd
adc
sbb
xchg
fcoms
sar
in
lahf
mov
fildll
and
and
and
lcall
mov
xor
mov
aad
push
sbbb
and
or
mov
imul
scas
sbbb
nop
repnz
inc
js
push
adc
and
rclb
dec
add
sub
cmc
outsl
sahf
int
aad
pop
mov
pop
dec
fsubrl
sub
fdivr
inc
repz
mov
jmp
ss
adc
pop
js
popl
iret
fldl
out
dec
cvttps2pi
jb
sahf
popf
scas
dec
xchg
bound
xchg
repz
aam
aad
jmp
cmpsb
jne
push
std
repnz
mov
pop
stos
jns
push
jmp
inc
lock
pop
mov
scas
test
cmp
shrl
inc
jo
in
sub
push
in
outsb
and
out
or
inc
mov
pop
sub
lock
push
lret
inc
cld
lret
nop
arpl
into
loope
xlat
out
pop
jo
popl
or
das
push
push
or
xor
fildl
popf
xor
adc
inc
lcall
mov
push
sub
cli
data16
lods
sbb
push
fidivrs
sbb
jno
loopne
pop
clc
addr16
das
mov
decb
and
sbb
push
js
jmp
and
cmpsb
call
cmc
stos
xor
in
lea
fistps
jno
pop
jg
jbe
mov
inc
das
pop
mov
shl
flds
cwtl
push
shl
inc
cs
sti
xchg
inc
add
inc
sarb
pop
xor
cmp
lret
sub
je
cs
js
mov
mov
cmp
or
cmp
out
sub
xor
mov
or
cmc
cmp
jl
cmovl
in
jg
adc
jbe
cltd
dec
push
out
cmpsb
aam
ss
mov
xor
mov
push
cmpsl
cwtl
sbbb
xor
xor
jno
repnz
jbe
sub
ss
pop
gs
loopne
rorb
lea
sahf
mov
lds
arpl
dec
xlat
sahf
aad
out
sldt
iret
mov
xchg
hlt
mov
int3
jnp
and
pop
testl
sub
pop
aam
test
jg
jbe
fisttpl
out
fadds
push
dec
pop
fsubl
insl
or
adc
dec
or
mov
std
inc
int
outsl
dec
test
xchg
and
cmp
mov
add
ljmp
out
loope
cmc
repnz
outsl
sbb
mov
gs
mov
call
inc
mov
push
sbb
fcomip
sub
adc
cmc
mov
xchg
mov
ficoms
popf
icebp
je
inc
mov
inc
fldt
adc
in
sar
xor
rorl
dec
icebp
and
xchg
and
add
add
cmpsl
or
cli
outsl
sub
out
push
add
xchg
lods
cld
and
mov
rcr
mov
lods
mov
jecxz
imul
sbb
lods
ret
cli
sub
aam
dec
jecxz
jb
adc
mov
mov
push
fdivp
loop
mov
loopne
aaa
dec
ficoml
jge
imul
mov
in
xor
xchg
test
int
in
push
nop
adc
or
outsb
sbb
int
xchg
cmc
cmpsb
shll
push
dec
in
jo
xchg
ret
pop
stos
or
out
mov
mull
fwait
push
push
pop
xchg
aaa
ljmp
fcomps
push
stc
mov
sub
cmpsl
cld
lret
dec
lods
pushf
scas
xchg
mov
popa
iret
aas
xchg
sarb
or
inc
ret
jecxz
jge
incb
orl
imul
repnz
mov
or
sub
and
push
add
lds
jbe
xor
mov
pop
fmul
adc
stc
pop
mov
lds
lds
push
mov
loopne
stc
push
jb
xchg
mov
adc
mov
out
cwtl
outsl
ficomps
mov
dec
adc
nop
jp
addl
fcompl
bound
and
adc
xor
jecxz
xor
sub
mov
sbb
insl
add
push
add
lods
mov
xchg
filds
jno
xchg
mov
imul
or
sbb
adc
cmovge
clc
sub
lret
arpl
popf
rcll
xor
ljmp
fmuls
or
mov
pop
xor
xchg
cmc
negb
dec
ret
je
rorl
mov
and
jae
mov
jmp
mov
loopne
cmp
and
in
dec
cmpl
mov
add
mov
or
pop
fwait
xor
dec
or
cmp
cmp
or
sti
mov
inc
fiaddl
call
mov
sbb
in
and
xchg
movsl
iret
lretw
dec
in
jg
shll
lods
pop
cmc
jns
clc
notl
out
sub
lahf
xchg
dec
das
pop
or
inc
imul
test
es
addl
mov
out
xchg
andb
jo
fmull
lods
sbb
mov
pop
arpl
jg
into
idiv
popf
or
and
shll
jecxz
push
test
jmp
gs
test
jne
rorb
sub
jb
subl
orb
mov
les
rcr
lea
inc
pop
dec
fidivrs
andl
adc
shl
decl
push
es
sub
sub
xor
stc
inc
xchg
mov
dec
repz
pushf
enter
out
int
or
or
jne
pushf
jmp
data16
xor
pusha
cmpl
mov
or
inc
xchg
imul
pop
fsub
or
js
cmp
rclb
mov
hlt
push
push
fs
mov
loope
loope
and
add
mov
xchg
mov
aaa
push
xor
jne
dec
jle
movsl
xchg
xchg
test
pop
dec
daa
push
lock
dec
lods
jge
sbb
test
ds
mov
pushf
imul
pushf
cmpsb
xor
fadds
push
fucomp
imul
cmp
mov
mov
jae
cmp
or
add
cld
mov
sub
sahf
xchg
push
push
sbb
incb
imul
leave
test
mov
aaa
lret
sbbl
jb
add
andb
inc
fisttpl
in
push
aad
rcll
pop
xor
push
adc
xor
mov
sbb
xor
ss
ds
cmpsb
test
sub
call
inc
popf
add
test
cld
mov
jbe
jge
out
xchg
fstpl
push
lea
cmp
xor
dec
mov
pop
roll
mov
ret
push
inc
push
inc
xor
lcall
push
and
in
dec
dec
pop
or
xchg
lock
xor
or
lcall
mov
pop
mulb
jbe
jle
repnz
or
lret
dec
dec
dec
push
dec
mov
push
add
dec
xor
xchg
popf
aaa
or
in
xchg
inc
cmpsb
mov
ficoms
add
jmp
lea
sti
popa
adc
xor
imul
addr16
cwtl
jmp
jb
addl
and
inc
jl
dec
lcall
les
mov
xchg
scas
or
lea
shrb
movsb
movsb
jle
lcall
and
cltd
pop
jmp
pusha
in
sbb
mov
repnz
fldl
subl
xchg
cmc
xor
test
pusha
mov
jo
mov
sbb
pop
int
push
fwait
bound
dec
hlt
stos
sub
call
aas
jae
subb
in
jecxz
rcrl
cmp
inc
popf
push
out
popf
mov
lock
pop
pusha
imul
fwait
andl
scas
testl
xor
cltd
mov
sub
sbb
push
jns
jge
in
lret
push
mov
mov
mov
lods
xor
xor
and
or
mov
idiv
sahf
mov
sub
pop
sbb
cmp
pop
inc
xor
inc
xchg
cmp
pusha
stos
adc
xchg
lret
cmp
push
in
test
cmpsl
or
fisubrl
adc
jecxz
inc
enter
push
pusha
vpmacssww
or
fbstp
sbb
imul
jae
sub
or
inc
bswap
clc
xchg
adc
dec
int3
pop
scas
adc
mov
sub
or
repnz
jl
les
xchg
pop
jecxz
fisttpl
dec
pop
ljmp
lock
and
xchg
jno
lahf
lret
mov
scas
push
cmpsl
test
mov
andb
push
push
adcb
xor
data16
bound
aas
and
ljmp
les
mov
testb
loop
mov
xchg
xor
or
imul
pop
pushfw
mov
repnz
or
mov
js
cmp
push
jae
cld
and
loope
movsl
fsub
into
test
leave
add
sub
sub
mov
sbb
outsb
jo
fldt
cmp
pop
xchg
and
rclb
dec
mov
jp
dec
aam
xchg
sub
sub
mov
mov
jmp
jns
nop
adc
inc
sbb
mov
mov
cld
sbb
cmp
ja
daa
aam
loop
test
push
aas
pop
push
sub
or
cmp
cmp
xchg
cs
pop
adc
mov
lret
in
mov
mov
loope
fists
in
inc
jg
stc
mov
pop
mov
lcall
mov
inc
xor
adc
xchg
and
mov
arpl
leave
icebp
fcompl
in
loopne
pop
std
jmp
cmp
popf
jp
jmp
mov
ret
cwtl
in
inc
pop
fwait
in
sbb
sbb
popa
lds
daa
pop
xor
pop
jg
cs
cmpsl
mov
adc
sahf
jp
cmp
mov
repnz
lock
in
out
mov
jp
push
lahf
test
nop
jnp
out
outsl
fmulp
mov
jno
jp
xchg
cmpsl
or
cwtl
add
pop
outsl
ss
cmc
test
mov
iret
pushf
clc
in
aas
je
push
int
sti
pop
inc
push
mov
repnz
imul
test
pusha
dec
pop
int3
mov
mov
daa
sarl
cmc
data16
jnp
xor
repnz
stos
addr16
adc
sub
out
sti
xchg
jnp
aam
cmp
jnp
jns
scas
cmp
inc
outsb
push
sbb
push
aam
ret
pop
fistpl
bound
push
daa
mov
cmc
mov
lret
lret
js
pusha
jo
insb
rcrl
les
and
xchg
out
xorb
imul
decb
clc
mov
out
inc
xchg
popa
ljmp
jp
loope
or
stc
mov
mov
push
stos
imul
icebp
imulb
sbb
fwait
out
mov
mov
mov
mov
mov
mov
cmp
nop
sti
aam
sbb
pusha
adc
pop
inc
cmpsl
jge
mov
insl
adc
ud1
nop
xorb
or
xchg
pushf
push
sbb
inc
sti
jno
jg
xor
pop
mov
lea
test
lcall
inc
jno
jno
mov
inc
mov
fsubrs
les
fwait
lret
jp
test
idivl
rorb
mov
pop
mov
jne
ljmp
fcompl
aad
js
clc
ds
pause
mov
dec
lret
mov
pop
push
adc
icebp
cli
lods
or
scas
jmp
pop
stc
in
das
jbe
pushf
sub
inc
adc
cld
sbb
xorl
add
sub
jb
loopne
into
loop
movsl
jbe
mov
cmc
xchg
pop
sub
imul
dec
int3
daa
pop
int
xor
and
add
std
sbb
rorb
icebp
mov
lock
ret
inc
push
test
push
add
dec
imul
loope
sub
jb
dec
inc
adc
lock
movsb
push
sarl
xchg
lods
pushf
cmp
fs
sub
pop
fwait
jle
push
inc
mov
xor
push
adc
mov
xchg
inc
dec
jb
add
mov
jbe
xchg
aad
out
ret
and
ja
in
mov
mov
dec
daa
aaa
pop
negb
xor
inc
jecxz
lock
shll
push
js
ficompl
lods
cmpsl
xchg
xorl
adc
or
sbb
mov
mov
xchg
das
lcall
jno
cmp
or
shrl
jp
mov
clc
hlt
inc
movsl
stos
add
jo
mov
mov
roll
mov
test
test
xchg
in
push
pop
mov
movswl
mov
mov
and
inc
or
ss
xlat
lcall
fistpll
and
push
mov
sbb
inc
mov
push
jnp
cmovbe
sbb
or
or
fwait
add
fadds
das
sub
xchg
in
sbb
decb
imul
fidivl
int3
es
pusha
lds
sbb
jmp
ss
ljmp
jo
mulb
gs
dec
cmc
mov
cltd
arpl
add
mov
rolb
dec
mov
loope
int3
sub
or
je
jns
mov
pinsrw
mov
mov
push
xor
lahf
fdivr
push
sti
repz
movsl
pop
adc
test
push
mov
adc
sub
or
das
cmp
rorl
in
mov
rorl
xchg
xchg
pop
mov
mov
mov
sub
and
fwait
xchg
push
and
test
sub
push
inc
xchg
jbe
das
xchg
in
sar
xor
stos
dec
mov
popl
xchg
movsl
mov
cmp
pop
pushf
outsl
cs
nop
xchg
xchg
sub
xchg
inc
and
call
mov
inc
int3
cli
push
sub
and
repz
inc
shrl
push
lods
inc
push
xchg
xchg
xchg
ljmp
push
xor
stos
std
aaa
mov
inc
rorl
shlb
add
loop
add
lahf
in
sti
pop
sbb
scas
inc
data16
mov
sbbl
mov
mov
movsb
sarb
push
cmp
jecxz
or
or
bound
push
daa
inc
dec
stc
or
push
mov
push
sub
lock
std
pop
stc
pop
jb
in
jae
or
cmpsb
add
pop
push
add
scas
or
mov
stos
das
push
jle
inc
in
stc
into
outsb
mov
ja
mov
xor
sub
movsl
lahf
xor
fbld
xor
imulb
sub
sbb
xlat
mov
dec
dec
jg
xchg
mov
lret
inc
stos
shl
sbbl
mov
or
lahf
sub
push
or
aam
stc
or
inc
test
dec
je
jmp
sti
xchg
xchg
jbe
add
aaa
jmp
jle
fnstenv
rolb
insb
in
sbb
fcomip
mov
xchg
sarl
imul
inc
int3
inc
dec
in
movsb
pop
pusha
cmpsb
sahf
xchg
push
sub
std
jns
cmp
cmp
jne
shll
repnz
mov
pop
xor
and
inc
jg
movsb
mov
std
cmp
add
repz
popa
pop
cltd
dec
orb
sbb
lods
in
fs
mov
repz
lcall
cmp
xlat
jae
xchg
repz
mov
lock
mov
adc
inc
mov
leave
cmp
and
movsl
jg
dec
mov
or
cmpsb
mov
xor
mov
inc
dec
inc
cmp
push
cld
mov
idivb
imul
lods
mov
sahf
pop
xchg
pushf
add
out
sub
push
es
xor
loope
rcll
insb
in
xchg
out
push
cmp
icebp
pop
test
mov
push
fisubl
insb
pop
xchg
insl
fs
cld
aaa
shrb
jae
lods
stc
aam
pop
or
ljmp
add
or
cmp
arpl
shll
es
sarb
leave
cmp
sbb
sbb
out
xorps
and
and
mov
mov
lods
mov
mov
outsl
cmp
mov
cmp
dec
xchg
cs
jo
push
in
mov
int3
iret
xchg
xchg
cwtl
fidivl
mov
in
arpl
sbb
imul
aas
data16
xchg
and
mov
in
xor
mov
popl
jp
add
lock
in
xchg
mov
adc
mov
xchg
les
and
sbb
test
ret
popf
out
xorb
jo
scas
mov
lahf
push
mov
sub
inc
adcb
mov
int3
repz
aad
push
inc
cs
xchg
aam
push
xor
cmp
ja
cmpsb
fwait
pop
repz
push
das
inc
inc
leave
xor
lds
sbb
mov
mov
add
out
or
add
xor
fwait
addr16
out
in
mov
mov
add
sbb
cmp
and
mov
aam
hlt
je
mov
xchg
mov
cld
call
adc
mov
insl
xor
mov
sbb
cmp
cmp
fs
insl
popf
push
push
push
mov
adc
adc
rclb
xor
mov
pop
mov
inc
pop
sub
enter
adc
clc
mov
sti
les
pop
les
mov
push
fnstsw
pop
movsl
emms
fadd
jne
mov
or
scas
scas
gs
or
lret
adc
jl
pop
mov
addr16
test
inc
leave
inc
neg
aas
fildll
in
xchg
xchg
mov
xor
jb
lahf
divl
xchg
ret
popf
ret
mul
aam
mov
mov
and
stos
ficoml
pop
dec
aad
add
roll
aas
cmpsl
xchg
leave
jb
inc
repz
mov
sub
push
xor
pop
pushf
sbb
pop
mov
popf
mov
lahf
mov
mov
out
loop
cmpsb
lahf
divl
mov
cs
dec
lahf
add
and
popf
js
jae
mov
add
out
push
jb
mov
mov
test
mov
out
sub
jbe
ret
jecxz
push
sub
dec
cltd
dec
das
sarb
inc
loop
shrl
aad
mov
jno
imul
inc
sbb
mov
dec
add
cs
xorb
aad
cltd
push
mov
out
fldt
or
es
jecxz
jl
scas
notl
int
pop
mov
in
pop
sub
xchg
or
enter
imul
jno
call
add
jmp
sbb
pop
fstpt
adc
mov
push
dec
stc
mov
into
pop
adc
jnp
stos
enter
pop
push
mov
jle
mov
xchg
xchg
sub
ss
clc
mov
or
cwtl
jle
notl
imul
idivb
xchg
sbb
data16
mov
xorl
jp
mov
inc
adc
jge
dec
sbb
add
mov
xchg
in
xchg
xor
das
jnp
push
fisubl
es
mov
inc
adc
dec
inc
mov
cmc
xor
test
dec
test
ja
dec
into
xchg
jmp
arpl
add
mov
jle
les
push
jae
and
fmulp
fcoml
mov
lock
je
lahf
push
xchg
fwait
cmp
std
inc
push
mov
and
cmc
lods
adc
add
lock
mov
lahf
imul
rolb
mov
mov
jbe
clc
push
lahf
dec
jle
mov
in
jl
pop
add
sbb
loop
mov
jns
jnp
movsl
cmc
stc
adcb
stos
in
stos
sbb
rclb
cltd
ret
xchg
xlat
ljmp
or
jp
repnz
aam
inc
imul
loope
jecxz
je
popf
call
xlat
push
mov
mov
ljmp
pop
fdivs
xchg
test
cmp
push
jae
out
or
hlt
mov
add
test
lcall
or
jmp
lea
adc
dec
cld
shll
inc
and
inc
cli
fucomip
adc
pop
cmc
pop
xchg
cltd
aad
xchg
jns
push
push
push
sub
dec
fwait
mov
mov
out
rcrb
jno
jle
dec
push
pop
test
dec
out
pop
mov
jb
bound
pop
roll
sub
daa
inc
fcomi
inc
xchg
add
cwtl
ds
xor
pop
pop
aam
push
pushf
scas
fbstp
pop
push
aaa
cld
call
ret
aad
and
pusha
outsl
mov
and
nop
mov
icebp
cmp
call
xor
xor
in
adc
sub
pop
in
stc
dec
iret
adc
mov
push
push
push
dec
sarb
scas
add
sbb
stos
out
lahf
push
xor
adc
mov
imul
xchg
test
mov
mov
lret
jmp
std
rcll
push
xor
jecxz
cld
cmpsb
dec
mov
pop
or
push
mov
xor
mov
cmp
mov
aaa
push
outsl
add
dec
dec
aad
nop
push
shr
xchg
sbb
dec
fbstp
mov
or
pusha
ljmp
pop
dec
jnp
push
add
mov
jl
fadd
cmpsl
into
fadds
cmp
lahf
sub
adc
mov
ret
jbe
nop
loopne
mov
pop
sub
shr
push
jg
xor
mov
in
addr16
mov
fidivl
int
loopne
jl
test
cmp
decl
jbe
insl
gs
sbb
pusha
xchg
cs
pop
gs
aas
aam
cmp
inc
icebp
sub
cmc
subl
mov
lods
mov
pushf
and
cmpsl
and
rorl
cmc
mov
jae
inc
cmp
add
inc
nop
loop
scas
sti
hlt
ljmp
incb
inc
pop
movsl
outsl
in
jb
xchg
mov
addb
inc
sbb
jne
mov
test
pop
stos
mov
sbb
push
sti
sub
sahf
inc
mov
add
cmp
sbb
scas
or
shl
xor
dec
fdivp
or
inc
jg
into
xchg
mov
cwtl
rorl
lahf
call
das
mov
ss
gs
add
fisttpll
xor
ficoms
xor
adc
pop
dec
lret
int
push
lods
test
popa
jp
in
clc
fisubrs
pusha
adc
and
addb
call
jne
mov
mov
fnstenv
jg
mov
in
pop
adc
add
nop
mov
clc
lds
ficoms
xchg
in
fs
and
sub
cmpsb
es
dec
xor
inc
xor
lods
fwait
lret
inc
je
jbe
into
out
push
mov
push
mov
sbb
inc
inc
and
or
adc
mov
xchg
adc
outsb
push
adc
mov
fsts
test
test
mov
pop
adc
cmpl
sbb
test
push
fdiv
adc
dec
push
cli
pop
mov
or
rorb
test
pop
mov
je
icebp
mov
dec
sub
mov
pop
cmc
pushf
repnz
insl
test
push
xchg
fdivl
and
cwtl
popa
pop
xchg
sbb
xchg
rorb
sub
divl
mov
insl
push
ret
fisubl
sbb
pop
push
lret
lock
int3
stos
cmp
jns
sbbl
scas
jp
dec
fucomp
inc
je
jl
in
bound
vmovd
rorl
test
pop
and
inc
lods
xorb
xchg
xchg
jae
mov
fildl
mov
jmp
or
mov
icebp
mov
les
int
idivb
mov
pop
lret
jecxz
pop
daa
or
test
xor
loope
and
xor
pop
pop
pop
or
addb
ja
push
pop
and
int3
pop
daa
rorb
jbe
mov
sbb
fidivrl
xor
cmp
aaa
cmc
pop
jno
sahf
lock
inc
lds
adc
arpl
inc
adc
jg
pop
sahf
push
cmp
js
adc
gs
fnsave
mov
dec
test
mov
jmp
dec
fstl
jbe
movsl
lods
or
or
add
push
push
and
jno
insl
fcomp
jp
inc
fistpl
cmp
mov
or
mov
push
push
data16
test
nop
push
lods
pop
lea
push
sahf
jae
outsb
mov
jl
dec
pop
mov
adc
xchg
push
movsl
test
sub
inc
and
addl
pop
rorl
pusha
inc
sub
sub
xlat
loop
fs
popl
scas
stos
fbstp
add
fldt
push
push
cli
dec
xchg
xchg
xor
psrlq
or
fisubs
dec
push
je
fidivl
add
and
loopne
call
outsl
mov
jl
stc
dec
and
into
fwait
push
add
mov
aaa
and
pop
pop
iret
pop
mov
add
xor
adc
call
scas
movsl
push
das
stos
jb
pushfw
test
or
mov
add
bound
iret
bound
fistl
sbb
in
sti
dec
or
fs
xchg
outsl
loop
repnz
pop
fisubrs
pop
fwait
fs
push
imul
das
enter
adc
arpl
dec
cmpsl
leave
call
outsl
sarl
aas
out
sbb
sahf
mov
xchg
jl
and
xor
cs
adc
cs
mov
and
bound
pop
mov
pop
xchg
dec
sbb
pop
push
mov
jnp
pop
sti
imul
and
sub
cmp
out
fadds
mov
add
add
mov
cmp
sbb
add
bound
les
hlt
jne
mov
aas
add
mov
pop
shlb
test
add
leave
pop
ret
movsl
dec
stos
fnstenv
scas
xor
push
xchg
mov
jbe
inc
sbb
cmp
inc
fisubs
in
jp
jo
js
aas
dec
xor
mov
call
mov
xchg
mov
pop
in
jae
jmp
inc
push
mov
adc
push
add
dec
sti
pusha
xlat
push
or
dec
int3
jb
mov
adc
xlat
repnz
cmp
sub
inc
xchg
ret
push
jnp
lcall
pop
scas
mov
jecxz
and
or
daa
fldl2e
fisttps
hlt
and
pop
cmpsl
ljmp
dec
jo
cmp
inc
xchg
test
test
xchg
add
add
in
fldenv
mov
fwait
mov
or
mov
xlat
mov
jge
adc
outsb
bound
data16
cmpsb
sbbb
insb
loopne
mov
int3
jmp
insb
mov
inc
outsl
xor
fsubr
push
int
sub
cmp
icebp
jbe
jae
jp
cmp
jle
cmp
adcl
daa
ret
jne
popa
mov
jp
mov
or
fldcw
pop
mov
maxps
inc
mov
jmp
movsb
add
rcll
mov
inc
data16
push
adc
insl
decl
mov
sbb
aaa
mov
test
repz
movsb
jle
loop
xchg
pop
lods
call
sahf
inc
dec
cmp
inc
out
rolb
dec
inc
lods
mov
add
ja
xor
jl
out
dec
ss
loopne
mov
xor
inc
in
dec
scas
add
or
in
add
shlb
outsb
or
out
inc
jo
test
xor
mov
cmpsl
mov
cli
push
and
xlat
adcl
jmp
in
dec
mov
xor
out
les
xchg
test
push
mov
jns
js
clc
jp
push
repnz
fisubs
fcmovb
fcmovnb
bound
daa
aaa
jecxz
leave
in
js
hlt
push
mov
lock
xchg
pop
pop
mov
xchg
sbb
hlt
sbb
mov
xchg
imul
or
std
adc
out
stc
aas
insb
mov
clc
lods
jne
lret
insb
js
cmpsl
sbb
popf
pop
inc
or
cmpsb
jb
test
repnz
fadd
sbb
add
sarb
popa
mov
mov
loope
sub
cmp
cltd
inc
xchg
aam
nopl
cwtl
fdivrs
mov
and
jg
cmpsb
stc
popa
mov
mov
jns
or
cs
lret
loop
dec
in
repz
iret
loope
jb
mov
or
sahf
pop
lods
dec
test
lea
sahf
dec
cmp
fisubl
frstor
clc
pop
dec
and
dec
add
or
xor
pop
shll
inc
cli
aad
inc
jns
jbe
cmp
pop
sub
sbb
lods
inc
jg
jno
arpl
push
adc
sbb
lods
sub
xlat
mov
arpl
pop
out
inc
sub
adc
jecxz
pop
xor
orl
bound
xlat
xchg
dec
and
dec
in
push
sbb
push
jl
pop
lods
mov
push
mov
xlat
pop
cmp
xor
jmp
xchg
dec
cmp
aad
iret
insb
mov
cmp
imul
mov
or
fwait
mov
sub
cmpsl
aam
imul
enter
sbb
rolb
push
mov
cli
fdivl
jl
mov
aad
push
push
je
jge
shlb
and
out
fmul
loope
popa
xchg
dec
sbb
or
or
scas
push
movsl
sbb
push
add
push
xor
adc
lret
sbb
scas
shl
mov
ret
jg
inc
imul
decl
shrl
adc
push
pushl
mov
mov
xchg
jns
add
int3
adc
mov
aad
push
xor
or
mov
insb
lahf
cmp
movsl
fcoms
popa
adc
ss
pop
nop
xchg
sbb
ret
aam
cmp
dec
stos
mov
call
pop
dec
xchg
jns
cmp
repnz
lds
mov
cmpsl
popa
pop
xor
mov
ret
jg
or
jnp
xor
outsb
dec
inc
inc
pop
cs
and
nop
lret
roll
adc
bound
jmp
cmp
add
leave
jno
test
pusha
xlat
jae
jns
pop
leave
pop
test
mov
xor
cmp
fwait
cmp
and
cmpb
mov
lock
jecxz
push
add
cmp
shl
js
fcoms
jne
stc
ret
mov
add
sub
in
icebp
outsl
pop
fisubs
push
out
adc
xchg
dec
aad
mov
xor
into
ret
sbb
adc
push
mov
ljmp
in
in
rclb
out
pop
dec
in
mov
aad
add
in
pop
cwtl
sbb
gs
out
sbb
sub
pop
cmpb
lret
push
pop
addr16
adc
insb
sub
mov
jg
popa
cmc
lret
mov
add
bound
jo
push
or
cli
hlt
cltd
insb
fsts
xchg
inc
inc
and
add
stos
adc
or
ja
js
sbb
jmp
jbe
dec
dec
inc
and
cli
push
outsb
push
aas
loopne
add
data16
gs
sub
xchg
jecxz
and
ret
inc
mov
mov
out
adc
or
cmp
loope
addr16
hlt
adc
push
pop
in
push
nop
in
mov
inc
xchg
rcll
adc
jmp
push
outsl
inc
shll
pop
dec
out
in
mov
cmc
push
data16
jnp
lahf
jmp
subb
cmp
jle
xor
sbb
pop
cmp
divb
xor
mov
sub
fimull
xor
xor
xchg
aaa
and
es
jo
cmp
repz
jbe
test
push
loope
repz
fnstcw
xchg
xchg
popa
push
ret
in
mov
jp
in
push
fstpl
sbbb
jg
data16
push
mov
sbbl
and
push
cltd
aas
outsl
and
mov
push
pop
shr
xchg
cmpsb
or
divl
jle
jp
mov
push
pop
jbe
test
ljmp
pop
cmpl
dec
dec
test
es
lock
xlat
loope
inc
jg
mov
pop
sti
push
testb
sub
sbb
aad
ficompl
xchg
jg
cld
pop
or
out
dec
lea
sub
pop
das
cmpsb
jbe
dec
jl
pop
add
ret
inc
mov
mov
jecxz
jg
inc
fs
adc
mov
test
jo
jmp
iret
add
imull
fs
or
or
push
and
mov
sbb
mov
fs
out
loopne
xor
in
jns
cmp
xchg
cltd
and
sbb
jns
sti
xor
adc
les
xchg
out
jge
mov
push
mov
icebp
rcl
inc
icebp
mov
dec
xchg
popf
imul
stos
xchg
xor
dec
popa
pop
and
out
loop
divb
mov
mov
xchg
divb
loopne,pn
lea
cmpsl
mov
pop
ret
push
jecxz
xchg
mov
pop
jg
mov
sub
rorb
jle
add
movsl
in
inc
dec
ret
inc
out
hlt
out
inc
in
or
mov
jns
or
data16
xor
inc
out
xchg
lret
imul
stos
test
pop
add
xor
mov
dec
shrb
rorb
int
push
inc
rcrl
mov
pushf
xor
and
scas
or
pop
cmp
sub
dec
mov
fsubl
dec
xor
mov
icebp
push
mov
cmp
pop
rcll
sbbb
adc
jo
xchg
roll
jno
cmc
fisttpll
or
repz
in
xchg
push
inc
xor
dec
fmuls
cmpsb
into
pop
rcl
and
lcall
pop
jecxz
aad
fcomps
push
rcrb
xchg
sub
aas
mov
scas
aas
add
sub
pushf
call
xor
stos
lahf
mov
cmp
mov
sub
pop
adc
mov
xor
jecxz
push
int3
out
cmp
lock
adc
mov
jp
mov
imul
pop
xchg
arpl
hlt
and
std
cwtl
enter
jmp
add
mov
push
or
sub
jle
push
fisubrl
xchg
std
stc
jg
std
adc
cmp
lret
and
xor
icebp
ja
sbb
cwtl
sub
aaa
jg
sub
add
inc
xlat
mov
scas
add
adc
push
cli
sub
test
rcll
xor
mov
fistl
push
xor
in
leave
test
enter
xor
mov
cltd
cwtl
xor
dec
pushl
pop
hlt
rolb
outsl
xchg
rclb
jp
popf
push
mov
out
adc
jae
insl
outsl
jne
out
pushf
and
shrl
aaa
movsb
xor
test
push
add
and
notl
sub
aad
cld
and
cmc
cmc
pop
ret
mov
jno
pop
aas
out
int3
xor
mov
lock
sar
mov
ljmp
push
and
or
cmp
std
iret
test
mov
pop
mov
addr16
imul
ds
sbb
mov
std
dec
inc
mov
out
inc
sbb
pop
cs
fwait
out
sahf
push
movsl
inc
push
je
or
or
xchg
dec
add
xor
es
jecxz
gs
sbb
mov
xchg
pop
jnp
jns
test
mov
mov
adc
adc
loopne
and
sbb
into
xor
aaa
dec
jl
je
adc
iret
test
in
gs
test
mov
mov
push
ja
inc
cli
sbb
push
mov
fidivl
cwtl
jbe
fists
roll
sub
push
imul
js
cwtl
adc
mov
push
jecxz
out
out
or
fdivp
dec
js
push
sti
negl
test
data16
cmp
and
xchg
push
shrb
inc
push
das
fistpl
and
pop
xor
iret
aaa
divl
in
std
jle
hlt
push
cmp
or
clc
inc
and
inc
in
enter
pop
cmp
lds
xor
mov
lret
mov
test
stc
or
aam
orb
mov
dec
sub
mov
dec
xchg
mov
mov
fs
adc
icebp
scas
shl
dec
xor
xor
add
inc
jle
fmull
cmp
mov
sub
fmull
in
push
cmp
fldl
repz
rolb
jno
add
les
pop
dec
std
repz
cmp
mov
mov
cmpsl
jge
popf
sbb
mov
in
je
mov
in
call
or
mov
fdivrs
push
out
or
aas
xchg
jnp
fiaddl
outsb
sub
mov
mov
insb
enter
lea
cmp
xor
daa
lods
xchg
stos
add
xchg
leave
shr
push
dec
mov
std
out
scas
divb
mov
inc
cld
xchg
loop
and
ret
mov
divl
pop
test
adc
std
movsl
jle
or
mov
aas
pop
and
sub
dec
sbb
fnsave
pop
mov
mov
pcmpeqw
cmp
mov
mov
adcb
sub
pop
cmpsb
stc
lock
mov
pop
aad
rcrl
dec
xchg
cmpsl
push
mov
xor
xor
aad
pop
sub
les
ljmp
cmp
mov
js
adc
xor
inc
aaa
adc
jle
cmp
push
mov
jecxz
dec
mov
xor
and
push
les
sahf
popf
aam
jle
into
arpl
sub
popa
sub
movsb
mov
cmp
xchg
sbb
imul
cmp
mov
cli
adc
xchg
popa
pop
iret
cmp
test
cmp
movmskps
cmp
shlb
call
add
mov
sarb
inc
mov
mov
jbe
mov
mov
inc
dec
mov
inc
fidivs
js
add
js
popl
cs
mov
dec
inc
out
ret
in
fcmovbe
sahf
sub
mov
and
adc
sbb
aas
jno
andl
lods
jbe
cmp
bnd
and
lods
xchg
decl
add
add
cmpl
sbb
test
and
and
adc
loopne
ja
jbe
xchg
adc
in
lods
xor
and
aas
fistps
jp
or
mov
xchg
jne
scas
out
cmp
jbe
lahf
mov
call
pop
inc
and
lock
or
out
icebp
sbb
xor
inc
mov
pop
daa
loopne
adc
pop
out
inc
clc
stc
and
xlat
lock
dec
sbb
jmp
jne
sbb
idivb
xor
jae
cmp
addr16
xchg
push
and
andl
mov
mov
into
mov
loop
jg
xchg
xchg
dec
shrb
pop
cli
aas
xchg
pop
push
fsub
push
je
in
mov
mov
sub
mov
push
sti
test
adc
mov
je
fcmovnbe
mov
out
scas
xor
xchg
mov
dec
xchg
cmc
jecxz
fwait
lcall
sbb
inc
inc
test
out
pop
xchg
push
mov
pusha
mov
mov
fs
pop
insb
cwtl
repnz
and
int3
movsb
dec
cmc
movsl
sub
push
cmpsb
add
dec
push
inc
mov
and
sub
pop
xchg
and
out
push
in
idiv
shr
jo
mov
cmp
xorl
scas
jl
data16
out
int
or
xchg
in
jne
push
into
jmp
inc
mov
or
xchg
aas
imul
push
mov
ret
mov
push
mov
int
ficompl
mov
add
call
aam
cs
fdivrp
stc
adc
push
cmp
xchg
jle
adc
pop
xor
add
push
pop
cmpsl
cwtl
or
shr
call
push
push
dec
std
in
cmp
fistpl
cmpl
iret
pop
mov
mov
lret
pop
into
sub
mov
nop
insl
mov
mov
sub
addr16
iret
lcall
mov
lcall
out
sub
xor
jl
icebp
andps
jo
fistl
popf
arpl
pop
out
adc
push
push
mov
push
push
fwait
jne
aaa
add
leave
mov
addr16
and
in
rcl
or
les
add
dec
push
icebp
mov
cmpsb
mov
lahf
pop
rorl
lret
cmpsb
scas
int
int
sbb
sbb
jne
dec
and
xchg
dec
add
sub
dec
jmp
outsb
mov
lds
jne
loop
mov
jg
add
mov
dec
jmp
inc
add
movsl
pop
into
test
cmpsb
pop
dec
sbb
mov
add
xchg
ds
mov
cmp
ret
and
pop
adc
mov
inc
enter
pusha
push
mul
sarl
ljmp
add
in
or
push
cld
shll
stos
mov
xchg
repnz
adcl
movsb
push
scas
jae
mov
and
fcoms
mov
jl
add
mov
sbb
mov
pop
xlat
rclb
in
stc
das
pop
bound
pop
lret
shrl
or
lret
mov
inc
enter
scas
inc
pop
stos
mov
arpl
hlt
fidivrs
mov
bound
les
xor
xor
jns
mov
pop
pop
popa
sub
addr16
pushf
push
rolb
cmpsl
lea
loopne
fmuls
mov
mov
test
jnp
xor
imulb
inc
or
push
pop
aad
pop
jecxz
gs
mov
cmpsb
adc
inc
insb
mov
and
in
or
jo
or
and
pop
std
aam
repnz
mov
push
or
pop
jbe
cmp
mov
mov
pusha
and
pop
sub
cmpl
xchg
push
inc
add
jne
jnp
int3
subb
lock
imull
subl
fwait
aam
subb
cmp
mov
jne
repnz
jl
iret
jae
xor
out
sbb
sbb
scas
add
das
repz
xor
lret
adc
mov
and
in
ret
gs
lahf
mov
pop
xlat
lcall
push
xorl
lcall
aaa
test
test
in
mov
ficoms
inc
jnp
mov
xchg
lret
pop
repz
pop
jge
aas
sbb
sbb
push
cli
notl
fsubs
shrl
xchg
mov
mov
sbb
add
jo
sub
sub
cmpsl
adc
arpl
pop
push
add
test
std
cmp
push
cltd
daa
pop
loope
mov
cmpxchg
push
or
in
sub
jecxz
es
pusha
in
stos
sbb
pop
daa
push
insb
insb
push
nop
push
iret
jae
jbe
dec
repz
cmpsb
fyl2xp1
mov
fdivr
push
popa
xchg
jnp
jne
add
iret
pcmpeqb
out
sahf
mov
cs
pop
sub
ret
push
and
daa
and
sub
dec
pop
adc
sarb
pop
rcrl
sbb
cmp
hlt
sbb
cmpsl
jmp
or
add
hlt
mov
out
pop
mov
js
mov
out
add
adc
js
mov
ficoml
add
push
dec
pushf
mov
cmp
pop
fs
sub
notl
jge
ss
xor
xor
mov
int
scas
sbb
adc
movb
jbe
iret
fidivs
fcoml
push
dec
add
ljmp
ja
adc
iret
add
pop
cmpsl
push
cmc
jns
cmp
cli
lock
pop
dec
hlt
lcall
mov
sarl
lret
aas
mov
lods
icebp
sub
fidivl
jae
lahf
mov
dec
out
mov
add
daa
or
sbb
xor
inc
sub
es
add
mov
xor
insb
icebp
shll
push
js
outsb
ljmp
in
fwait
cli
xchg
sub
mov
aaa
pop
call
cmp
stos
mov
and
xor
in
jmp
movsl
lea
xchg
pop
sub
fsub
pop
xor
push
cmp
mov
or
xor
mov
ljmp
ffreep
mov
cmp
es
adc
dec
addl
pop
cmpsb
movsb
rcr
fdivr
or
out
stos
ret
mov
test
jg
cwtl
mov
or
cmp
out
hlt
inc
xchg
dec
lock
or
iret
in
daa
mov
les
shl
icebp
inc
fcomps
jno
inc
push
dec
pop
xor
data16
mov
mov
lock
jmp
dec
cltd
dec
clc
in
out
daa
outsl
push
jnp
mov
cmc
test
mov
add
nop
sbb
push
rorb
xor
jae
aas
mov
adc
clc
sub
lahf
decb
xor
xor
mov
push
mov
loop
mov
and
shl
cmp
ja
xlat
addr16
push
xchg
int3
mov
dec
mov
incb
cmc
xchg
les
adc
leave
or
std
mov
pop
hlt
hlt
push
std
cmp
inc
dec
and
add
push
add
lahf
sub
test
sar
cltd
clc
int
std
test
jbe
mov
enter
cltd
xor
scas
xchg
mov
sbb
inc
sbb
mov
pop
movsb
loope
aad
xchg
mov
sub
dec
fcoms
ror
adc
or
push
adc
lret
inc
cwtl
ret
jnp
call
xor
cmp
jge,pn
icebp
test
pop
push
push
xlat
divb
cs
fnstsw
shl
mov
lret
adc
out
loopne
ret
enter
das
std
std
jne
or
xor
xchg
mov
jb
adc
sub
cmpsb
mov
inc
dec
dec
dec
dec
jl
nop
shll
jmp
add
imul
push
xor
and
out
mov
je
and
cmpsb
push
pop
xchg
jp
mov
add
sub
test
pop
pop
and
push
jmp
adc
mov
xchg
jmp
and
pop
scas
sbb
call
sbb
aam
scas
test
or
rcrb
sahf
jp
xor
fidivl
or
notl
push
mov
cmpsb
rolb
pop
lret
sbb
adc
push
insb
or
mov
or
cmpb
mov
inc
in
inc
cmp
dec
sbb
leave
loopne
add
inc
repz
mov
pop
mov
xchg
lods
xor
in
xchg
add
rol
and
test
adc
dec
movsl
mov
jo
stos
popa
push
cmp
jbe
in
movsl
xor
mov
and
lods
test
adc
mov
add
aad
stc
dec
aad
iret
cmp
push
das
jns
jg
sbbl
bound
add
sbb
mov
loop
test
shlb
aaa
scas
push
clc
cltd
add
dec
sbb
xor
push
addr16
fildll
jno
mov
loopne
ljmp
in
xor
pop
xchg
flds
cwtl
ja
mov
pminsw
lds
in
das
ja
call
lret
aaa
cmp
push
push
pop
jne
fstpl
lock
int
push
push
sub
sbb
and
cmp
xor
test
sbb
jmp
lahf
mov
int3
mov
shl
and
cmp
cmp
ja
stos
out
push
push
mov
mov
xor
out
mov
cmp
in
inc
push
pop
cmpsl
sbb
add
stos
push
test
sub
fsubrp
or
sbb
int3
sbb
adc
in
cwtl
in
mov
mov
scas
popf
mov
rcr
xchg
xchg
movsb
xchg
mov
fiadds
push
xor
and
fisttps
inc
sbb
dec
mov
or
pop
insb
xchg
fst
sti
mov
inc
adc
xor
xor
int3
lock
adc
mov
pop
mov
mov
bound
mov
ja
lcall
push
loopne
jg
mov
scas
mov
jbe
pop
popa
and
mov
clc
mov
or
dec
mov
mov
pop
cltd
sarl
adc
aad
aaa
mov
lret
in
cli
dec
loope
mov
imul
cld
popf
repnz
fdivs
push
push
sub
bound
mov
test
in
lods
and
ret
js
and
outsl
pushl
or
rcrb
out
fstpl
mov
pop
mov
and
push
sbb
cmp
testb
xlat
mov
sbb
fistl
cli
xlat
loopne
inc
mov
or
ja
adcb
mov
pop
shl
push
ds
jecxz
and
js
jb
fcmovne
imul
add
mov
push
jmp
std
js
xchg
data16
adc
dec
pop
mov
dec
rolb
pop
sub
pusha
insl
scas
push
paddb
sbb
jmp
mov
or
ret
inc
in
adc
scas
sub
push
dec
cld
dec
and
out
push
mov
outsb
xor
inc
lods
mov
or
mov
push
stos
sub
cmp
imul
cmpsl
adc
notl
pop
xlat
dec
mov
or
repnz
imul
dec
aad
sub
xlat
repnz
jbe
or
mov
aad
mov
in
dec
icebp
add
fwait
adc
insl
jo
push
imul
add
mov
pop
jecxz
xchg
mov
fiadds
or
jecxz
xor
mov
int
jge
out
mov
mov
mov
sub
clc
in
cli
xchg
xchg
sub
vinsertf128
pop
mov
inc
xchg
cmc
push
add
popf
arpl
mov
addb
arpl
push
cwtl
and
movsb
int
jae
int
xor
lret
test
shll
mov
movsl
add
push
stos
das
jp
mov
out
enter
ja
or
adcb
add
mov
scas
pop
adc
jge
xchg
leave
push
mov
dec
negl
enter
dec
ss
sbb
mov
or
push
test
inc
adc
pop
fdivrl
shl
leave
insb
and
aad
jecxz
mov
aas
xor
cltd
pop
es
cmc
jp
mov
sbb
hlt
inc
push
jmp
push
pop
pop
lret
addr16
dec
dec
into
idivb
xchg
movsl
push
inc
and
pop
rorb
mov
je
stos
dec
mov
add
mov
int3
mov
xchg
inc
and
xchg
add
loope
adcl
fcoml
mulb
mov
ja
dec
xor
sub
push
daa
xchg
mov
outsl
adc
jecxz
add
int3
cmp
orl
daa
out
inc
push
ds
sub
lcall
lock
leave
icebp
in
shll
out
mov
mov
push
and
lods
add
xchg
rorl
sbb
xchg
sbb
in
std
lcall
or
cs
cmp
or
xchg
in
lods
rclb
test
out
cmpl
int3
push
xor
jle
inc
shl
sbb
inc
lcall
pop
ss
les
inc
sub
addr16
std
xor
ror
inc
mov
inc
inc
imul
mov
lret
test
loope
push
ja
popf
jg
adc
and
mov
fstl
fwait
lcall
sbb
push
imul
out
je
xchg
aam
pop
addb
cltd
sub
adc
out
test
loope
cmp
out
lahf
push
pop
cmp
jecxz
cltd
mov
test
inc
jecxz
adcb
outsb
cmp
xor
dec
test
ds
mov
aam
add
aaa
dec
test
push
adc
outsb
add
mov
enter
negl
mov
in
sarl
pop
pop
push
jb
in
fldcw
mov
adc
push
cltd
cmp
arpl
xchg
push
adc
das
or
sarb
test
fld1
inc
loope
addb
pusha
mov
popf
loopne
imul
aam
lea
imul
sbb
add
test
mov
xor
psubw
and
and
ds
push
mov
test
mov
ficoml
xor
fdivrs
ljmp
std
xchg
out
mov
cmc
test
mov
inc
jne
sub
add
inc
and
xor
pop
mov
dec
stos
shll
call
stos
add
push
je
mov
fiaddl
push
sarl
addr16
push
daa
pushf
push
shrl
inc
lods
inc
sub
popa
ja
add
cwtl
outsb
and
lcall
pop
test
push
cmc
add
jge
cmp
push
or
out
dec
ja
or
aaa
rcl
test
shll
and
pop
in
cmpsl
mov
pop
dec
push
and
jnp
sub
lock
aad
mov
push
fidivs
test
lock
pushf
ljmp
ret
gs
sub
into
lret
ret
push
pusha
jecxz
mov
inc
push
mov
sub
test
mov
adc
and
push
xchg
std
mov
outsl
into
push
jge
xor
mov
out
jg
adc
mov
mov
push
ss
pop
fadds
pop
inc
shll
xchg
es
inc
mov
or
sub
int3
test
mov
mov
mov
dec
jge
fldcw
gs
pop
push
pop
lret
adc
mov
mov
add
xlat
in
push
repz
cmpsl
popf
dec
in
insl
test
sub
pusha
inc
icebp
je
ds
js
cmp
stos
inc
dec
push
andl
in
shrl
enter
adc
fsubrl
aam
and
and
je
xchg
daa
dec
pop
fisubl
popf
arpl
sub
push
mov
dec
mov
mov
in
movsl
test
cltd
xchg
mov
inc
sub
aad
stc
cmp
cmp
jns
ss
jns
arpl
pmulhw
or
xchg
dec
lret
lret
icebp
adc
dec
nop
add
ret
xlat
fstps
repz
mov
pop
push
add
cmp
cmp
je
filds
mov
insl
fldt
push
loopne
das
bound
push
int
popa
jns
mov
shrl
aad
sbb
push
nop
pushf
xlat
mov
repz
insb
sti
adc
fiadds
insl
clc
dec
mov
call
outsl
sbbb
mov
fisubrl
dec
mov
jg
xor
ffreep
fmull
jl
fisttpl
mov
jb
mov
out
push
inc
inc
mov
mov
xor
outsb
movb
cmpsb
pop
rolb
out
adc
sub
fs
test
cmpsl
push
push
lods
subl
std
ficoml
scas
ret
nop
cmp
push
es
das
jne
hlt
sbb
or
jge
aas
roll
push
push
xchg
jo
in
push
in
int
int3
xchg
push
pushw
lahf
xchg
fisttpll
loop
or
sub
and
jge
loop
add
inc
inc
sbb
ja
mov
inc
dec
rorl
pushf
jg
scas
leave
shrl
test
jg
adc
pop
lock
out
ds
adc
add
int3
or
sub
push
xchg
cmpsb
orl
dec
rcrl
sub
xor
add
inc
fsubrl
sbb
ret
push
ja
jns
xor
jne
pushf
inc
sub
cmpsl
adc
arpl
xchg
sbb
adc
stos
add
out
repnz
push
bound
adc
adc
and
sub
int3
popf
pop
outsb
lods
add
inc
cmp
pop
or
push
testl
insl
adc
aas
dec
push
push
sub
mov
dec
mov
les
ret
std
iret
xchg
sahf
xlat
mov
pop
lcall
aam
les
sbb
clc
sub
cmp
subb
pop
mov
sbb
cli
dec
ljmp
and
add
push
cmp
mov
adc
lods
pushf
lods
mov
and
and
addr16
xchg
push
mov
mov
cmpsb
sbb
fmul
sti
xchg
and
jmp
divl
and
out
dec
scas
adc
sbb
fwait
in
mov
ficoml
popf
dec
stos
push
mov
cltd
xchg
pop
sahf
xorl
dec
xchg
cmp
add
movb
je
rorb
js
neg
mov
iret
jle
sub
pop
ror
mov
xchg
bsr
movsl
jg
iret
pop
xlat
repz
inc
pop
hlt
xor
and
xor
cmpxchg
xchg
cltd
jmp
lock
inc
sbb
ss
test
jecxz
or
add
arpl
mov
jnp
scas
cmp
lods
push
xchg
pop
in
jge
es
scas
push
dec
pop
mov
es
xchg
lcall
jne
dec
cmp
push
jb
test
sub
arpl
add
das
dec
adc
cmp
je
lret
cltd
outsl
rorb
lret
jno
stos
adc
mov
dec
fildll
pop
imul
sub
loope
fsubrl
enter
int3
and
jne
jmp
push
je
sbb
adc
cmp
mov
enter
dec
sbb
ja
jne
imul
mov
mov
sbb
je
ds
adc
jl
insl
add
imul
xor
mov
sbb
sub
orl
sbbb
shr
mov
rolb
sbb
cmp
enter
and
mov
adc
out
mov
pusha
std
jno
ret
sub
cmp
cmp
xchg
mov
ficompl
add
pushf
sub
mov
xor
add
jne
xor
sbbl
loope
loope
rorl
jecxz
decl
lock
xlat
mov
scas
push
push
jle
lret
stc
mov
dec
pop
fisubs
adc
test
icebp
jecxz
lahf
mov
bound
push
push
insb
sub
mov
mov
incl
rcrb
movl
testb
push
pop
stos
jmp
adc
daa
jg
fsub
mov
testl
push
push
lcallw
mov
scas
pop
imul
sub
lods
icebp
adc
xchg
lock
test
adc
mov
xchg
and
adc
stos
push
imull
sbb
push
and
insb
xchg
push
sbb
mov
jbe
pop
mov
pop
cmpsb
in
and
mov
rclb
or
mov
in
shlb
daa
mov
lods
decb
xchg
push
mov
mov
in
insl
pop
adc
shll
data16
lods
xchg
imul
lods
sbb
add
and
lea
out
adc
loopne
bound
lods
sub
mov
scas
fmuls
mov
daa
or
mov
call
into
pusha
sub
mov
and
dec
sbb
or
mov
stc
inc
mov
mov
or
enter
pop
imul
cmp
sbb
pop
cmp
mov
xchg
push
in
push
nop
out
jmp
pop
adcl
or
mov
push
mov
add
mov
cmpsb
scas
cmc
push
cmp
bound
or
lods
sub
int3
xor
add
jae
in
pop
cmpsl
sarl
jle
dec
dec
lds
and
pop
scas
cmp
stos
mov
pop
sti
fstps
pop
sbb
int3
mov
cld
jae
jmp
mov
and
cmpsl
imul
inc
cmp
inc
pusha
jmp
pop
mov
add
hlt
arpl
or
sahf
dec
lods
mov
pop
or
jg
shrb
or
add
les
ret
hlt
into
fmuls
test
mov
xor
mov
and
push
insb
pop
sbb
add
sbb
repz
push
jmp
out
scas
lea
jae
xchg
insl
dec
push
in
loopne
in
icebp
lahf
dec
in
aad
mov
jno
cld
cmpsb
hlt
test
mov
push
pusha
mov
mov
adc
cld
cmp
xor
mov
xor
xor
incb
cli
test
shrb
inc
addl
sbb
imul
inc
xchg
movsl
add
sub
and
xorl
adc
montmul
cmpsb
cmpb
xchg
andb
imul
mov
fdiv
push
addl
push
push
cli
inc
addb
imul
mov
mov
mov
rorb
movl
mov
xchg
cmp
or
int3
out
cli
arpl
jecxz
frstor
fwait
lods
xor
out
sub
pusha
lods
test
test
inc
jge
adc
fnstenv
data16
dec
push
data16
mov
pop
cmpsb
sbb
sbb
pop
fnstsw
push
je
cmpb
jmp
addl
inc
icebp
push
pop
ficompl
movsb
shll
jnp
push
sbb
notb
rcrl
sti
xchg
and
xchg
call
cmpsb
jg
push
sub
push
fnstenv
sahf
sub
mov
and
mov
std
scas
inc
pop
dec
pop
cmpb
jmp
dec
add
jae
mov
and
movsl
test
inc
mov
ljmp
inc
pop
jnp
js
xor
push
xor
or
pop
mov
fsubrs
hlt
addr16
adc
dec
iret
sub
or
gs
xor
adc
gs
dec
lods
xor
xchg
or
push
add
movsb
repz
sbb
fstps
scas
sbb
adc
loopne
test
xchg
cmp
sub
mov
rorl
ds
or
rorl
pop
sbb
mov
fs
rcrb
rcl
aaa
cmpsb
dec
cmp
add
ds
in
mov
cmpsl
ret
test
add
mov
mov
scas
or
sub
rcrl
cmp
add
jl
in
push
or
mov
call
cmp
mov
es
xchg
pop
xchg
in
mov
icebp
mov
das
lcall
rcrb
sahf
cli
jnp
lea
sahf
mov
rorl
mov
dec
fistpll
out
jbe
fsub
cld
dec
adc
or
stos
push
bswap
xchg
cmp
pop
shll
cs
xor
or
sbb
mov
movsl
jg
fimull
decb
fists
in
mov
and
arpl
and
inc
and
push
sbb
subb
insb
rorl
es
inc
cmpsb
jp
or
or
adc
and
xor
and
xor
mov
stos
stos
ret
movsl
out
push
or
adc
loopne
and
xor
mov
ljmp
cmp
inc
cmp
test
add
jb
dec
jne
pushf
add
sbb
jns
dec
push
and
icebp
push
popf
sbbl
aas
loopne
dec
pusha
loop
xchg
cmpsb
pmuludq
cld
mov
repnz
mov
roll
neg
pop
stos
xor
inc
in
shl
pop
mov
scas
dec
setg
outsl
xchg
pop
movsb
push
jb
jns
jno
inc
lahf
xor
adc
stc
bound
jae
pop
shlb
out
loope
lret
in
test
ss
sub
bswap
fs
push
orl
cltd
repnz
shll
movsl
cmp
repnz
scas
push
dec
fcmovu
xchg
push
in
shll
jl
bound
dec
jecxz
bound
je
outsb
inc
add
push
shlb
imul
mov
and
push
pop
repz
fsub
xlat
int
inc
pop
mov
fidivrl
ljmp
in
outsl
iret
test
mov
into
xor
fbstp
movsb
jae
pop
dec
and
add
icebp
bound
or
jnp
adc
adc
loop
mov
ret
push
pop
int3
imul
das
xor
cld
dec
cmpsl
jecxz
sub
jl
divb
push
test
pop
jmp
push
shr
cwtl
push
pop
mov
fwait
lea
xorl
push
arpl
lret
leave
jle
fmull
enter
mov
cmc
push
and
test
ss
in
or
aam
lahf
jo
xchg
mov
lret
or
flds
movsl
ret
loop
fsubrs
pop
mov
je
cmp
xor
mov
ss
add
rclb
shll
mov
lret
dec
lea
inc
push
daa
popl
or
and
lea
outsl
cmp
mov
mov
test
jle
cmpb
pop
xchg
jae
and
fucomip
mov
fadd
cmc
jne
sti
fsubs
xchg
jmp
pusha
ficoms
xor
imul
les
dec
cmp
push
int
add
pop
sub
int
test
ret
sbb
out
out
jbe
mov
call
ja
out
cmpsb
inc
pop
repz
inc
sub
mov
ljmp
lret
scas
and
mov
mov
hlt
lods
es
out
sti
sub
xor
mov
or
push
ficoms
xlat
and
mov
dec
pop
sub
inc
arpl
cmp
jecxz
test
jp
and
sahf
std
lret
fcompp
cwtl
and
mov
loopne
int
jl
dec
xlat
es
fistpll
push
cwtl
rep
rolb
cmp
nop
fcoms
xchg
out
xor
popf
jo
repnz
aaa
inc
mov
inc
xor
shrb
jmp
or
es
cmpsb
xchg
stos
and
ljmp
shl
add
movsl
jns
push
rolb
pop
lret
mov
or
xor
mov
cltd
cmpsl
icebp
or
or
add
push
test
mov
lcall
das
mov
jne
and
jmp
jl
repnz
add
xchg
jecxz
sbb
call
stos
mov
test
xor
add
shlb
push
mov
mov
sahf
mov
test
xor
nop
lods
outsl
sbb
test
mov
inc
clc
xchg
rclb
jo
cltd
jns
es
mov
iret
cmp
ss
adc
adc
cmp
cmpb
xchg
adc
cli
push
xlat
ds
inc
lock
sbb
add
add
pop
ret
xor
pop
xor
outsb
lock
xor
xchg
adc
jg
mov
rcr
je
pop
aad
sbb
push
pop
jge
stos
pop
loopne
sti
mov
push
popf
adc
cmp
leave
aas
sub
sub
add
jns
dec
or
loopne
inc
sbb
or
test
sbb
icebp
push
pop
xor
fldl
inc
dec
dec
int3
popa
mov
out
sarl
std
in
sub
jp
leave
das
jmp
or
push
cld
out
sti
jo
and
push
shl
or
xor
lret
das
in
js
dec
sbb
sbb
dec
insb
adc
push
pushf
loope
mov
jnp
jb
pop
loop
les
jns
in
sbb
inc
mov
insb
ljmp
push
aas
jne
jnp
into
xchg
lcall
push
mov
stos
mov
mov
pmaxub
xor
imul
stc
push
xor
scas
dec
mov
movsb
outsl
das
stos
scas
imul
loopne
fmul
pusha
inc
push
pop
rolb
xchg
call
push
mov
shrl
movsb
pop
sbb
mov
imull
es
and
out
cmc
pop
adc
addr16
fucomp
cmp
movsl
pusha
ret
addr16
loopne
mov
pop
push
sub
xchg
stos
xchg
or
pop
insb
insb
call
pop
shll
unpcklps
stos
push
or
push
and
push
mov
cmp
popf
cltd
mov
jge
push
shll
neg
mov
pop
ds
push
mov
pop
pop
call
ja
cmc
sub
mov
mov
xchg
movsb
xor
addr16
aam
mov
orl
pop
push
pop
add
sub
inc
ret
addb
jmp
ret
inc
xchg
notl
jne
aaa
mov
lds
sti
sub
xchg
inc
add
repnz
lds
sbb
push
xor
jns
pop
jg
in
jae
push
sub
dec
mov
add
cmc
loop
mov
lods
pop
in
xor
pop
dec
cmc
xchg
xchg
cmp
out
or
jl
cli
jne
pop
fwait
mov
leave
mov
cltd
movb
xor
jb
fstpt
stos
push
mov
sbb
out
and
stc
dec
xchg
jnp
js
leave
sbb
xchg
das
std
mov
lcall
inc
mov
or
adc
gs
dec
xchg
sub
int3
repnz
ds
fsubrl
popf
xor
mov
adc
nop
sub
adc
pop
in
leave
mov
adc
mov
pop
lahf
jmp
cmp
imulb
andl
movsb
add
xchg
mov
cmpsb
mov
pop
testb
lahf
add
xor
lcall
xor
andb
inc
pop
push
jle
in
mov
dec
imul
pop
bound
mov
and
inc
in
lea
ffreep
fmul
mov
ljmp
jae
frstor
dec
jne
inc
arpl
aaa
xchg
cmp
ret
mov
jmp
push
xchg
xchg
in
mov
jg
cld
ja
ret
scas
rolb
outsl
sub
cmpb
stos
inc
lea
rcl
mov
adc
repnz
or
daa
or
adc
pusha
test
clc
mov
enter
aam
push
dec
jmp
inc
push
ficoms
sbb
popa
in
cmpb
pusha
cld
lods
arpl
add
adc
jmp
adc
push
cltd
addr16
scas
ja
lods
dec
subl
imul
sbb
add
inc
aaa
hlt
neg
or
dec
inc
dec
insb
xchg
in
adc
lahf
sbb
jnp
xchg
inc
clc
jno
jmp
cld
pushfw
xor
or
xchg
mov
dec
adc
mov
das
fdivs
mov
push
inc
or
testl
push
addl
icebp
out
call
jne
loopne
jae
pop
and
lea
pop
jmp
mulb
test
or
xor
pop
cwtl
adc
jmp
call
add
push
fbld
outsb
push
dec
cld
loopne
add
cmp
cmpsb
and
loop
pop
fmuls
xchg
sbb
cli
adc
mov
xchg
fs
in
scas
arpl
sub
push
or
cmp
fsubr
inc
pop
jp
adc
and
jl
pop
add
sub
mov
cmp
loope
pushf
lret
andb
pushf
ja
lcall
popa
nop
lahf
push
xchg
jecxz
push
sbb
sub
outsl
sbb
push
inc
sbb
lahf
jmp
pop
xor
fldt
push
mov
push
stos
jbe
rclb
xorb
popa
xor
iret
movsl
popa
push
xor
xor
in
mov
push
jp
push
scas
ja
test
sub
loop
pop
push
mov
sti
incl
sarl
nop
stos
mov
outsl
mov
xlat
hlt
aas
popl
ja
sub
jae
loopne
sub
sub
xor
fistl
pop
stos
in
xchg
mov
mov
ret
dec
rol
call
push
xor
hlt
clc
andb
add
aaa
pop
in
mov
xor
dec
aam
pop
inc
sub
sub
ficoml
fwait
cmp
out
cmp
and
fisubrl
int
sub
cmp
fisttps
mov
faddp
pop
sub
add
je
inc
xorb
cli
aad
xchg
cmp
push
stc
dec
scas
lcall
and
das
add
push
add
sub
xor
add
imul
and
gs
add
addr16
pop
adc
sbb
mov
sub
icebp
stos
and
mov
jmp
loope
ret
xor
sub
rcl
addr16
xlat
insl
push
add
stos
push
cmp
and
jecxz
xchg
test
aas
mov
push
cld
mov
push
xchg
lret
adc
jae
arpl
daa
inc
xchg
sub
stc
and
pop
xchg
mov
das
fucomi
sub
jae
call
jnp
loopne
call
cmp
sar
rolb
les
pop
or
icebp
sbb
dec
sub
in
jmp
xchg
sub
mulb
leave
rorl
stos
gs
dec
inc
and
lea
push
push
roll
pop
mov
xchg
sbb
or
sub
xorb
jb
sbb
and
lds
cld
dec
stc
rorl
sbb
enter
cwtl
add
sub
and
out
lds
adc
in
movsb
loopne
icebp
sbb
jg
popf
sub
mov
adc
mov
gs
fnsave
sbb
mov
dec
jmp
pop
adc
jmp
dec
jle
rol
mov
push
jl
mov
jmp
ret
fistps
jl
aaa
pop
lds
jge
push
xor
sahf
bnd
push
popa
mov
and
sbbb
or
push
pop
shlb
mov
in
aam
adc
mov
jecxz
sub
dec
movsl
loop
in
mov
int3
stc
imul
xor
cmp
push
jle
ds
mov
mov
and
or
sti
mov
in
sub
cli
mov
imul
lret
ror
fnstsw
jne
add
xchg
nop
jecxz
mov
sub
mov
dec
push
cmp
test
push
mov
lods
or
inc
push
xlat
jo
test
xorb
adc
xor
rolb
cmp
or
mov
or
jns
xchg
mov
pop
mov
cmp
sub
inc
add
aaa
pop
testl
repnz
shr
or
cmp
imul
jmp
rcrl
pop
adcb
imul
in
cli
test
ret
jecxz
push
jmp
mov
and
test
fsubrl
nop
cmp
sbb
push
push
std
pop
or
jl
arpl
es
add
call
aaa
adc
shrl
xor
xor
loop
push
mov
pop
test
xor
into
push
cmpsb
jle
dec
mov
adc
push
popa
mov
dec
iret
sub
mov
fmull
call
xchg
jl
lock
ret
test
flds
lcall
bound
lea
push
xchg
int
das
sbb
pop
xor
lret
cmp
cs
lods
add
add
pop
xchg
xlat
cmp
mov
mov
out
jne
push
push
mov
andb
in
pop
mov
and
out
add
arpl
inc
stos
fmuls
pop
xchg
pop
push
ret
popa
sbb
jecxz
jae
jns
adc
aaa
adc
mov
inc
inc
jecxz
addb
hlt
scas
test
dec
push
push
iret
sub
test
ret
mov
lahf
adc
xadd
xor
xchg
mov
pushf
inc
cwtl
and
daa
xor
push
jmp
lods
imulb
fisubs
mov
mov
icebp
ret
cmc
shll
data16
ret
adc
jmp
mov
call
out
insb
xchg
sub
xchg
imull
leave
cmp
fsubrs
jle
stos
outsb
mov
aas
int
loop
enter
pop
movsl
daa
sub
and
sbb
outsl
push
xchg
js
nop
lcall
ret
adc
mov
hlt
inc
test
es
push
inc
jo
outsl
jnp
cmp
or
push
inc
or
pop
mov
lods
data16
adc
aam
and
inc
or
xor
cmp
mov
jg
push
mov
mov
sub
ds
and
jle
outsb
bound
mov
negw
cld
and
push
stos
std
adc
imul
cltd
dec
or
mov
stc
fidivs
mov
fs
outsl
push
lret
sahf
sub
xor
jmp
ret
jge
mov
das
push
aaa
inc
mov
cmp
mov
jno
mov
ret
sbb
xor
int
jg
dec
sub
fbld
cld
daa
jnp
les
and
lret
mov
add
sbb
sub
add
mov
inc
or
inc
jns
mov
jle
pusha
addr16
xchg
lahf
stc
and
cmp
fmul
aaa
cwtl
mov
mov
call
clc
or
and
inc
sub
shrl
push
mov
jns
mov
call
xchg
xor
cli
fimull
sbb
adc
inc
das
dec
lahf
aam
cs
pushf
and
outsl
pop
outsb
mov
adc
inc
sub
fs
pop
lcall
sub
lods
aam
sbb
cmp
adc
xchg
inc
xlat
cwtl
jle
add
xchg
adc
mov
push
or
add
or
outsb
jg
adc
pop
mov
out
add
test
cwtl
adc
xor
loop
dec
mov
sbb
ljmp
aam
jg
push
mov
sbb
pop
out
xor
sbbl
push
dec
jp
inc
insl
out
nop
pop
aad
xchg
in
adc
push
sub
clc
cmp
mov
clc
scas
push
int
dec
or
push
sti
jle
popf
or
mov
cli
and
pop
fimuls
repnz
cmc
xchg
xchg
sub
sbb
andl
mov
add
add
push
addb
dec
ljmp
jno
xor
push
and
lahf
fwait
iret
repz
mov
popf
or
sbb
jnp
rclb
mov
push
jmp
loopne,pn
pop
mov
cli
inc
mov
cwtl
sbb
das
popa
imul
mov
dec
jp
cld
addr16
jne
ret
decb
ja
inc
push
cmp
xor
bound
test
sahf
mov
sbb
sub
insb
jne
mov
iret
xchg
and
pusha
add
in
and
mov
mov
xor
movsl
and
xchg
repz
add
mov
jp
jae
jb
dec
hlt
repz
into
stc
mov
rcrb
xor
data16
push
jecxz
setle
lret
sub
lea
sub
inc
jns
lcall
aam
mov
dec
outsb
orl
dec
or
jmp
xor
js
mov
sbb
lret
jp
mov
mov
pop
cmp
dec
es
dec
sub
imul
xor
in
stos
inc
jl
aas
shr
negl
rorl
adc
xor
mov
push
inc
loopne
push
or
push
xor
outsl
mov
and
pop
stos
mov
out
leave
jge
mov
push
stos
add
test
lds
ficoml
jle
dec
jbe
and
mov
movsb
push
hlt
pop
divl
sub
jno
aam
daa
int
mov
cmpl
fcoms
cmp
fistl
mov
and
jmp
out
jl
sbb
shrb
loope
out
div
push
imul
mov
rcl
xchg
pusha
jno
movsl
test
cmp
mov
lods
aas
ljmp
dec
mov
push
jmp
jle
xchg
iret
dec
mov
cwtl
xor
mov
xchg
enter
push
lock
pop
dec
add
loope
nop
fildl
or
xchg
fdivl
add
mov
cmp
inc
jp
popa
inc
jl
push
mov
pop
jg
dec
sti
jo
sbb
pop
sbb
xchg
scas
imul
mov
add
jbe
pop
loope
in
jmp
xchg
cmp
nop
fstpt
enter
loopne
pop
mov
mov
repnz
adc
xor
sbb
adc
add
inc
scas
shl
sbb
sahf
sub
pop
iret
gs
repz
scas
into
fiadds
jb
in
sahf
cmc
dec
pusha
aas
lea
add
leave
out
fisubl
push
dec
pop
sbb
sbb
or
rep
sbb
sbb
fstp
bound
dec
sti
das
or
cmpsl
aas
inc
sub
jge
lahf
inc
push
xlat
xlat
fisttps
mov
cwtl
mov
call
xchg
jns
or
shrb
jmp
cmp
cmp
mov
pop
xchg
cs
or
mov
addl
pop
sub
jg
mov
mov
imul
in
fiaddl
xchg
movsb
xchg
or
sahf
inc
adc
popl
pop
sub
pop
add
mov
fldt
xor
test
ret
stos
pop
adc
add
lcall
sbbl
push
fcoms
cld
roll
mov
push
adc
mov
pop
xchg
sbb
cmp
mov
push
mov
push
aas
xchg
cs
leave
and
inc
repnz
ja
inc
loopne
stos
push
cmp
cmp
mov
and
jp
sbb
xor
adc
jle
das
xor
add
adc
inc
lret
shl
in
lahf
cmpsl
in
push
mov
or
sub
xor
mov
jno
rol
dec
mov
push
mov
jle
adc
push
je
or
jecxz
test
cmp
xchg
in
jmp
cmp
fwait
inc
ret
inc
jnp
xchg
push
icebp
subb
sbb
outsb
loope
pop
cmp
and
call
int3
inc
dec
push
fs
decb
dec
sti
daa
das
xchg
mov
sub
repz
xor
or
jl
shr
xchg
test
les
fstpt
dec
aaa
cmc
push
fsubrp
pop
sarl
xchg
inc
sarb
cmc
or
or
pop
sarl
pushf
movsb
fwait
daa
jmp
fcmovb
lahf
les
jbe
cmpsl
adc
mov
fldcw
popf
lcall
repz
fcompl
or
lods
push
cmp
jne
orb
add
into
loope
fmull
dec
fcompl
jnp
imul
inc
iret
xchg
cltd
popf
sub
sub
loop
and
cmp
popa
icebp
mov
ljmp
dec
mov
jg
lock
mov
or
scas
or
cmp
dec
push
jecxz
loopne
and
loop
mov
in
or
adc
bound
roll
stos
mov
xchg
faddl
dec
xchg
push
push
or
jbe
inc
mov
fisubrs
jne
hlt
testl
and
fwait
or
out
adc
push
add
lret
cmpsl
ja
and
lods
inc
or
in
push
test
push
std
mov
imul
pop
xchg
push
imul
test
mov
in
mov
and
or
jo
sbb
pop
clc
add
iret
push
scas
xchg
push
ja
jno
lahf
or
add
clc
bound
xor
pop
xchg
push
mov
jl
dec
mul
sti
leave
sar
xor
mov
mov
jmp
cmp
jmp
pop
mov
outsl
lcall
jl
js
dec
cmp
dec
mov
icebp
incl
insb
add
adc
jp
mov
sub
loope
aas
sbb
push
cmc
out
or
inc
sub
mov
jno
mov
cli
rcrb
stos
popf
pop
test
punpckhdq
add
jbe
mov
jns
mov
dec
lret
jno
xchg
or
add
push
pop
jnp
pop
jg
out
adc
lea
mov
jge
int
cmp
es
nop
or
push
jp
mov
mov
and
cwtl
add
mov
lds
sbb
cltd
mov
repnz
data16
add
dec
mov
adc
jno
not
and
sbb
and
add
sahf
xchg
popa
mov
lcall
inc
xchg
ret
xor
aam
xchg
dec
add
insl
aad
js
inc
dec
sahf
jg
xlat
xlat
cmpsb
jp
mov
adc
xor
cld
cmp
imul
aam
pop
sbb
pusha
mov
cmpsl
test
mov
stos
enter
inc
jp
dec
jecxz
stc
pop
mov
sub
leave
xchg
adc
pop
mov
call
cs
pop
lret
leave
loopne
xor
data16
fndisi(8087
lock
ror
sbb
call
loop
push
xor
stos
push
sahf
ffreep
loop
and
adc
sbb
inc
mov
inc
xchg
imul
stos
imul
out
xchg
sbb
xor
inc
test
shr
xchg
fnsave
push
adc
cltd
or
lea
outsb
xchg
lods
aad
or
int
ss
cli
outsl
pop
nop
sub
sub
jg
fwait
pop
loopne
repnz
movsl
adc
fidivrs
sbb
rcrl
int3
fisttpll
push
movsb
cmp
popf
arpl
dec
test
mov
shl
sub
add
mov
adc
pop
gs
mov
and
xchg
mov
loope
jbe
sti
lret
adc
into
or
divl
mov
xchg
push
mov
mov
and
mov
jg
lods
inc
sbb
outsb
mov
push
inc
pop
sub
rolb
dec
repnz
jecxz
popf
fimuls
xchg
mov
cwtl
dec
adc
mov
mov
xchg
iret
inc
inc
sbb
test
out
push
and
jecxz
mov
fnstenv
inc
lods
ja
xchg
jae
imul
pushf
mov
imul
inc
adc
andl
jne
sub
std
inc
lea
stos
test
push
sub
mov
mov
and
andb
test
leave
xor
fimuls
sbb
nop
cmp
leave
lret
test
je
stos
sbb
jns
cmpsb
jl
fdivrs
or
or
mov
jns
push
sbb
add
mov
mov
sarb
inc
push
lods
jo
dec
or
mov
mov
add
or
out
jns
jns
imul
ror
dec
mov
daa
inc
fdivr
jb
daa
ds
lcall
lcall
sub
out
loope
mov
mov
test
jnp
xor
inc
fmuls
cmpsl
test
xchg
jp
pop
imul
jae
insl
movl
cld
repnz
andb
jbe
cwtl
cli
dec
insb
test
iret
sub
adc
cmpl
inc
sbb
neg
test
pop
sub
pop
pusha
xchg
jnp
mov
mov
mov
xchg
xchg
sbb
adc
lret
sbb
cltd
mov
lret
mov
loop
add
fwait
es
pusha
mov
mov
outsb
fldt
mov
mov
jmp
sbb
xchg
sahf
push
gs
push
mov
ret
cmovno
or
dec
inc
daa
push
fs
fsubrs
jmp
lret
out
stc
loope
lods
lret
mov
xor
and
sbb
lds
inc
lret
movsb
sub
lret
daa
jns
lods
arpl
in
sahf
mov
js
xlat
lea
adc
jo
mov
lds
cwtl
and
push
movsl
or
cmc
jne
adc
sti
xor
cmp
xor
ret
jne
jbe
mov
pop
adc
pusha
or
push
sub
lods
jbe
push
mov
dec
je
add
mov
inc
scas
or
cwtl
shlb
dec
xlat
jecxz
test
mov
or
into
cli
ret
imul
imul
inc
cmp
push
pop
sub
sbb
mov
xor
jg
dec
int
leave
lods
cs
sbb
xor
add
sub
dec
mov
mov
stos
cmp
push
gs
push
add
outsl
leave
aad
rcrb
fldcw
push
shl
dec
push
inc
xor
clc
int
out
or
mov
out
add
dec
adc
std
lret
insl
cmp
leave
clc
iret
decb
out
movsl
ja
jl
lods
or
cmp
subb
and
sarl
xacquire
mov
iret
jmp
mov
dec
mov
or
out
movsl
push
shll
cltd
inc
mov
scas
imul
cmp
outsb
push
cmpb
ljmp
pop
cmp
bnd
pop
add
fs
pop
sahf
jmp
ret
sbb
xor
mov
repnz
push
jbe
sbb
xor
xor
add
inc
mov
iret
int3
test
lds
xchg
inc
sbb
push
cmpsb
subl
adc
xchg
pusha
lock
mov
mov
es
bound
mov
xchg
and
hlt
imul
jle
mov
mov
push
push
push
and
push
scas
add
insl
and
push
gs
pop
pop
or
fimuls
and
loope
inc
dec
mov
pop
jmp
jb
in
ss
mov
or
lret
lcall
ret
mov
lcall
sub
arpl
rorl
out
mov
in
xor
add
adc
push
bound
pop
add
subb
adc
mov
into
jecxz
aam
push
sbb
xor
test
pop
adc
add
imul
aaa
jo
sahf
nop
cwtl
jmp
arpl
pop
cmc
push
lods
jp
mov
cmc
sbbb
data16
xchg
mov
cmp
mov
insl
pop
jno
or
mov
push
leave
or
std
push
cwtl
decb
mov
or
ss
fstps
sub
fldlg2
and
mov
shl
int
stc
push
jae
mov
rcrl
adc
mov
popf
test
or
push
ret
lret
fbstp
nop
fnstenv
pop
sbb
jle
stos
pop
aad
into
fadds
cmp
dec
cmp
out
lods
inc
add
or
inc
xor
cmpsl
cmpsl
adc
adc
push
mov
cwtl
dec
sbb
ss
fsubr
sbb
aaa
jmp
pop
pusha
int
push
push
jno
jb
enter
fstpl
push
data16
xor
jbe
push
sti
jnp
pop
dec
add
lds
inc
sbb
sarb
int
cmpsl
cwtl
adc
pusha
int3
popa
pusha
in
push
push
cmp
rolb
stc
pop
lret
mov
mov
adc
mov
and
jo
ret
cwtl
daa
mov
test
xchg
or
mov
inc
inc
sbb
add
or
les
sub
sbb
sub
decl
and
cmp
scas
out
orl
ret
mov
sbb
fs
clc
mov
xchg
xchg
xchg
mov
mov
rcl
out
je
test
or
es
or
adc
mov
and
xor
inc
add
push
add
data16
out
mov
sbb
ss
fldt
or
sbb
repz
rcrl
lock
sub
jl
lods
and
inc
leave
dec
lahf
lcall
push
in
fbld
fidivs
inc
or
out
xor
popf
sbb
out
cmp
lock
push
inc
mov
cmp
fidivrl
std
pause
sub
jo
repnz
xchg
loop
cmpsl
fcmovnu
or
sub
push
xor
jb
mov
cmpsl
sub
sbb
js
push
sub
jl
or
test
push
sahf
sub
xlat
call
shll
mov
fdivl
test
iret
xchg
mov
jbe
outsb
jmp
jne
test
fdiv
dec
mov
les
mov
push
in
add
ss
rolb
mov
sbb
push
movsl
jbe
jo
inc
add
mov
cmp
pushf
andl
jae
aaa
mov
adc
insl
cwtl
inc
xor
test
mov
js
xchg
dec
push
rclb
mov
test
add
cld
fs
jg
mov
insl
mov
mov
scas
pop
sub
pop
sahf
imul
dec
mov
ret
aad
push
sub
inc
and
lret
mov
add
out
pop
sbbl
sarl
pushaw
xchg
xchg
aas
sub
mov
add
or
jmp
sbb
loopne
rolb
js
add
imul
in
mov
mov
and
cs
imul
orb
and
mov
aam
xchg
lea
in
stos
fnstenv
fdivrp
mov
aam
sti
mov
sbb
dec
imul
and
sbb
lock
jnp
adc
sbb
cld
outsl
sbbb
in
lds
push
push
mov
dec
pop
repnz
push
cmp
addr16
mov
pop
adc
pop
pop
add
mov
ret
xchg
enter
jo
out
cmp
call
test
sbb
xor
push
repz
or
adc
mov
call
js
mov
add
sbb
cmp
pop
mov
mov
cmp
jp
push
sbb
jbe
enter
cs
pop
loop
sub
sbb
lret
push
xchg
iret
dec
arpl
push
sbb
dec
add
inc
mov
sub
mov
and
lahf
popa
repnz
nopl
pop
mov
lock
repz
mov
icebp
jno
add
mov
dec
int
mov
cs
ss
cmpsl
fucom
cmp
and
lods
add
mov
sub
enter
dec
lahf
scas
sub
daa
lock
adcl
int3
jmp
cltd
call
test
jne
sub
cli
or
enter
popa
add
dec
adc
inc
jp
jns
mov
stc
push
sub
add
gs
aas
ret
int
icebp
enter
ret
gs
jae
enter
fldt
popf
jne
in
cmp
sub
push
loopne
cmp
pop
mov
cs
mov
rorl
mov
mulb
add
call
ret
mov
lret
stc
loop
subl
lret
push
stos
push
cld
xchg
push
icebp
mov
inc
sbb
movsb
dec
sub
bound
sbb
in
jae
pop
ret
inc
pop
jge
or
mull
incb
gs
or
clc
inc
jns
ret
out
adc
push
bound
xchg
scas
jle,pn
enter
repnz
out
mov
xlat
sub
pop
xlat
xor
push
clc
sub
sti
not
sbbl
mov
daa
jp
jnp
mov
mov
test
inc
xor
push
lea
shufps
sbb
xor
rcr
dec
xchg
sub
pop
mov
lcall
jp
gs
mov
sbb
lahf
mov
ja
adc
mov
sti
xor
mov
shrb
adcb
sub
push
mov
or
fsts
mov
sub
daa
into
cltd
push
testb
loope
xchg
jmp
loope
insb
test
sbb
gs
fsubrs
in
add
xchg
cmp
or
in
push
or
or
pop
xchg
lds
test
jmp
adc
aaa
popf
jge
out
in
sbb
stos
push
dec
cmp
imul
dec
mov
ror
jnp
movsb
jnp
enter
cmp
xchg
fwait
stos
jge
daa
bound
ret
mov
pop
xchg
loopne
sub
mov
mov
shrb
sub
mov
lock
test
leave
gs
jmp
cmp
dec
fnstenv
xor
cmc
mov
or
test
sub
adc
js
jmp
push
add
or
cltd
jno
iret
inc
mov
mov
pop
gs
sub
jne
cmpb
cmc
ret
leave
xchg
lret
inc
mov
jno
out
scas
les
cmp
pusha
jge
lahf
in
push
cltd
inc
loop
aas
and
adc
sbb
and
dec
scas
jmp
popf
test
mov
dec
xor
mov
adc
push
mov
mov
adc
cmp
dec
lahf
xchg
adc
imul
lock
sub
or
ficoms
test
cmovg
sub
rcrl
or
xchg
in
sti
imul
scas
and
fwait
imul
mov
imul
jb
mov
mov
xlat
repnz
stos
ret
xor
and
fistps
push
sub
sahf
loope
ss
jp
call
pop
jo
cmp
std
stos
mov
xchg
aam
xor
add
pop
fs
lods
and
xor
push
jmp
subb
pop
add
mov
leave
fwait
aaa
sbbl
or
test
loopne
pop
loop
insb
outsl
or
jnp
mov
lret
push
dec
add
sbb
add
in
add
inc
push
mov
xchg
inc
roll
push
das
add
jecxz
pop
or
in
loope
add
push
sub
imul
out
jae
adc
mov
jb
push
int3
push
and
jns
cli
push
rcrl
sbb
pusha
rcrb
lahf
test
jbe
scas
cmp
andl
add
push
shr
das
lret
jmp
aaa
ret
ficoml
inc
es
and
pop
jge
adc
stos
lahf
scas
adc
jmp
jle
jb
movb
jno
push
adc
mov
shlb
lahf
jle
popa
gs
sub
mov
outsb
icebp
and
mov
and
sub
or
lahf
loop
dec
inc
inc
arpl
cmp
cmp
stos
pop
jae
ret
mov
bound
test
out
insl
pop
jle
mov
and
or
adc
ljmp
sub
cmp
int
aas
jno
movsl
adc
out
adc
loopne
fsubrs
mov
and
inc
clc
dec
add
mov
in
inc
jecxz
cmovne
pop
pop
dec
jle
add
bound
push
hlt
xchg
pop
fidivl
bound
mov
mov
jecxz
dec
inc
test
push
cmp
addr16
cs
in
fisubrl
push
fldl
xchg
dec
inc
add
icebp
lret
jb
and
sti
mov
fdivs
out
jmp
or
mov
ret
repz
xchg
test
add
inc
and
outsl
fstpl
mov
sbb
push
es
add
stos
stc
adc
subb
cld
jmp
push
xchg
repnz
insl
mov
fistps
sbb
nop
xchg
outsl
xchg
add
repz
or
dec
mov
inc
and
xor
data16
nop
and
out
xor
adc
cmp
jo
shll
in
dec
stos
popf
sub
arpl
fildl
push
dec
mov
shrb
fwait
jmp
clc
mov
inc
ds
orb
rol
outsb
in
leave
push
rcrb
inc
jecxz
push
adc
rcrl
out
sbb
adc
repz
movsl
cmp
ljmp
icebp
test
or
ja
fucom
dec
sub
add
sub
outsb
loop
call
leave
mov
xlat
roll
fld1
addb
imulb
insb
jmp
push
pusha
ss
cs
lret
add
jns
ffreep
int3
sbb
clc
daa
pushf
xor
mov
dec
arpl
xchg
inc
adc
ss
sbb
pusha
inc
pop
movsb
mov
cmp
dec
out
jp
inc
jg
mov
push
jo
sub
pop
test
je
dec
sar
xor
dec
mov
inc
cmp
push
aam
cli
jp
out
mov
pop
cmp
sbb
mov
out
addr16
sahf
xchg
arpl
pop
aaa
subb
lahf
dec
dec
adc
popa
sub
jle
out
int
and
dec
sbb
and
xor
enter
sbb
adc
mov
insb
stc
out
pop
dec
inc
add
jno
adc
cwtl
shrb
adc
push
sub
ds
dec
loop
sub
or
push
repnz
pop
cs
add
outsl
adc
jo
push
int
mov
mov
iret
cmp
loopne
test
push
add
mov
lret
mov
sub
into
pop
pop
jo
mov
xchg
ret
xchg
and
ret
outsl
sub
mov
adc
sub
mov
mov
test
out
int
mov
dec
push
ret
mov
add
shrl
lahf
movsb
cmp
sbb
loop
mov
ds
mov
data16
sub
imul
mov
and
call
sub
loopne
test
push
mov
sub
inc
push
stos
aas
mov
iret
sbb
xor
cwtl
xor
cld
push
mov
cli
push
div
popf
repz
ljmp
int3
mov
cmp
lods
dec
fst
out
push
inc
fs
and
pop
or
sub
jne
mov
cltd
and
sub
mov
enter
jl
iret
jno
push
add
scas
rcrb
mov
inc
sub
pop
testl
jbe
nop
jmp
pop
fwait
jl
mov
je
cmp
popa
aas
mov
hlt
imul
cmp
imul
scas
sbb
cmp
sarl
mov
push
fxch
push
outsb
dec
and
inc
jno
add
jmp
mov
sti
cs
sub
jl
sbb
loope
cmpsl
mov
shrb
aad
or
xor
push
push
xchg
push
adc
pop
mov
add
fwait
inc
fsubr
push
mov
mov
adc
push
call
xchg
stos
mov
fsubrs
mov
and
dec
jg
insb
jmp
or
inc
incl
rclb
xchg
call
pop
xchg
push
adc
adc
or
pop
outsb
or
add
iret
sar
jl
cmp
clc
mov
je
int3
xchg
pusha
xchg
bound
insl
mov
jns
pusha
jp
data16
fidivrl
add
cltd
fldlg2
inc
push
inc
jg
mov
shl
push
fisubl
xor
fldl
ss
adc
cmp
inc
push
jl
rcrl
or
sar
movsl
fsubs
das
test
cwtl
insl
fadds
aaa
mov
mov
je
dec
jae
xlat
test
pop
xor
jo
pop
sub
push
js
pop
jbe
std
jns
xchg
in
icebp
or
and
push
outsb
or
outsl
xchg
push
jl
pop
adc
xor
out
aas
and
xchg
mov
lea
mov
mov
sbb
pop
sub
das
test
inc
or
pop
xchg
pop
jae
lock
pop
or
sbb
cli
jp
push
in
mov
xor
mov
cmp
sbb
push
fisubs
out
dec
ljmp
scas
ror
fistpll
loop
insb
repnz
adc
dec
sub
sbb
out
in
and
mov
enter
outsl
sub
aas
mov
adc
pop
inc
mov
sbb
cs
jno
nop
fisttpl
pop
pop
cmp
outsl
lds
jne
aaa
jne
pop
xor
pop
push
pop
mov
das
addr16
fstp
sub
mov
sub
enter
popa
pop
hlt
popa
sub
loop
mov
sub
mov
dec
ret
insl
lds
jne
dec
adc
lret
imul
mov
ret
fstl
mov
sarl
insb
mov
clc
add
pop
in
fildll
push
aad
pop
daa
frstor
in
bndstx
jge
dec
cmpsl
mov
outsl
add
int3
jb
shrl
lahf
mov
in
jbe
rcrb
clc
popf
lahf
inc
jne
cmp
xchg
mov
cmp
shl
xchg
mov
jmp
xor
aad
add
aad
add
pop
mov
call
das
inc
mov
daa
lret
fstpt
push
inc
repnz
into
xchg
in
pushf
je
xchg
dec
hlt
fimuls
lods
cmp
fwait
xchg
stos
arpl
adc
fistl
sti
mov
add
dec
jl
movsl
adc
stos
inc
rcrl
nop
ret
dec
hlt
pop
stc
je
xlat
aam
clc
data16
mov
mov
stc
xor
aam
xor
gs
lock
dec
and
adc
aad
mov
movsb
movsl
push
cmc
jbe
jle
xchg
or
cwtl
fwait
mov
repnz
mov
cmp
loopne
into
fwait
mov
push
mov
xor
jle
mov
scas
and
add
mov
jle
push
es
push
insl
test
les
xor
repnz
fldenv
lcall
in
dec
sarb
and
clc
push
sub
mov
imul
and
lock
jg
mov
ds
lea
mov
jp
lods
or
data16
in
push
aaa
inc
adc
cmp
inc
movsl
ret
jno
inc
in
mov
or
repz
jge
aaa
aas
jno
or
gs
in
out
repnz
mov
and
inc
adc
rol
or
rcrb
shrb
cmpb
push
aam
dec
addr16
daa
ss
jg
pop
data16
loope
cld
dec
sbb
clc
movsb
fcmovnbe
in
sbb
pop
and
addr16
inc
or
push
add
sub
test
cmc
std
lea
rclb
and
loop
das
outsb
push
jo
pop
xchg
sbb
sbb
add
xchg
pusha
sbb
xchg
inc
dec
dec
sbbb
ljmp
cld
xor
dec
xor
or
mov
xlat
sub
mov
movsl
pop
cs
dec
sbb
add
sti
mov
dec
jae
aaa
in
sbb
jl
fimuls
ljmp
loop
dec
jecxz
cmp
push
dec
push
dec
mov
aas
xchg
enter
cltd
iret
mov
xor
lods
pop
sbb
mov
xchg
test
xchg
jg
xchg
adc
popa
ret
jp
in
xor
inc
sbb
mov
imul
xchg
pusha
std
xor
sbb
leave
lods
in
imul
hlt
aam
cmp
jg
xor
xor
xlat
rcrb
sbb
fstl
mov
pop
xor
mov
popf
xchg
push
bound
jbe
inc
xchg
or
and
call
fadds
push
xchg
sbb
in
jb
mov
xchg
mov
jo
movsb
dec
pop
stos
pop
mov
sbb
adc
imul
rolb
outsb
in
aaa
sbb
fisttps
xchg
into
pop
adc
sbb
cmp
aam
mov
add
ret
nop
jae
out
sub
loop
push
cli
adc
sub
sbbl
xchg
add
mov
cmc
sbb
mov
xor
mov
add
in
ljmp
xlat
pop
bnd
je
scas
daa
test
mov
fsubl
ljmp
clc
pop
sbb
add
jne
mov
mov
loope
or
icebp
push
and
sti
out
outsb
sbb
arpl
cmpsb
aas
add
mov
xchg
ror
mov
arpl
leave
fistl
jge
lods
movsb
dec
push
mov
mov
loopne
scas
add
lock
sbb
outsb
lret
cld
pop
int
mov
data16
nop
dec
shrb
je
xchg
or
cmp
mov
cwtl
mov
xor
fs
dec
outsl
inc
shrl
stos
adc
and
adc
push
adc
movb
jae
sub
push
xlat
add
dec
inc
insb
sub
push
mov
push
or
pop
rolb
mov
testb
or
or
mov
stc
push
loop
mov
mov
mov
mov
mov
add
pop
stos
lahf
ds
mov
stos
nop
mov
dec
stc
sar
cltd
inc
mov
stos
sahf
movsb
fdivrl
outsl
jmp
mov
push
lea
cwtl
rol
add
inc
es
add
ret
and
xor
mov
stos
out
inc
popl
cmp
das
mov
mov
mov
xchg
mov
pop
std
xchg
adc
jmp
pop
jge
into
gs
mov
js
and
sbb
adc
popa
out
mov
aaa
insb
iret
push
mov
xchg
mov
dec
and
inc
sbb
lret
daa
sub
movsb
xor
adc
jns
aas
mov
cld
jp
push
shlb
mov
lds
notb
inc
fimull
push
dec
mov
fmul
and
jl
cltd
pop
lret
dec
mov
icebp
xor
mov
jbe
pop
push
inc
cwtl
adc
pop
test
cmp
jo
stc
subb
push
loopne
add
xchg
and
push
in
cmpsb
sbb
pop
jns
sbb
fdiv
pop
mov
ret
mov
jno
movsl
mov
test
sbb
or
daa
mov
jns
push
int3
push
jne
movsb
adc
ret
adc
dec
hlt
loopne
jno
aas
jecxz
add
aaa
dec
popf
mov
scas
mov
xchg
ret
int3
ret
test
xchg
nop
pop
mov
sbb
cld
or
sub
lock
ljmp
imul
adc
fwait
repz
and
int3
dec
mov
data16
push
cmc
jecxz
shrl
bound
sti
bound
pop
jo
jae
aad
loop
jnp
cltd
jg
andb
add
jp
jg
mov
add
arpl
dec
mov
cltd
test
cwtl
stos
inc
aaa
or
sub
leave
es
cld
test
out
pop
popf
clc
xor
inc
cmpsl
aam
pushf
jp
in
out
pop
lds
cmp
lret
sbb
ja
inc
sbb
cmp
fiaddl
adc
cs
ja
dec
and
sbb
or
xchg
std
fildl
ret
fcoms
ret
daa
sbb
stos
adc
pop
mov
cmp
add
add
push
js
scas
js
sub
sub
dec
fsub
xor
pop
pop
out
out
or
and
or
mov
add
imul
adc
mov
xor
aam
repz
xchg
insl
mov
mov
xor
test
fcmovb
inc
mov
int3
mov
jns
cmp
sbb
loopne
or
xchg
std
shll
enter
shrl
mov
jo
mov
pop
icebp
push
bound
mov
test
cmp
leave
or
inc
xchg
dec
jmp
loop
mov
push
mov
lahf
lcall
mov
test
ljmp
out
pop
repnz
rcll
lods
fwait
cltd
mov
adc
jae
in
jbe
nop
lea
cmp
pop
call
aaa
jmp
scas
xchg
aad
push
sti
sub
jle
cmp
mov
inc
pop
xchg
dec
es
xchg
das
cld
ss
ds
mov
out
fdivrs
jae
sbb
out
aad
insl
inc
adc
mov
adc
call
dec
pop
stc
ja
jb
pop
ljmp
aam
scas
xchg
xchg
pushf
push
cmp
std
cmc
mov
and
fwait
dec
pushf
xor
dec
jns,pn
loopne
fsubr
test
push
pop
rcrl
sub
sub
xchg
negb
jge
addr16
in
pushf
outsb
shr
sub
dec
cmc
outsb
shrl
jae
int
push
test
push
js
pop
adc
mov
lods
jae
xor
adc
sti
and
repnz
jecxz
pop
ja
cmpl
rorl
or
mov
orl
push
addr16
xor
fwait
daa
inc
lret
and
sub
or
xchg
lea
xchg
pop
or
push
dec
jns
and
pop
sbb
push
lea
and
pop
jns
mov
shrb
imul
sbb
mov
icebp
cli
sbb
insb
dec
outsb
xchg
cmc
imul
shll
xor
arpl
xlat
or
dec
push
ss
mov
add
mov
mov
xchg
mov
and
mov
cld
pop
sbb
jmp
mov
aad
imul
lahf
rcll
aaa
add
ss
int
in
cmp
pushf
inc
sbb
or
inc
inc
mov
clc
xchg
or
pusha
ljmp
cmp
mov
loop
add
aaa
jns
and
mov
jecxz
fdivrs
dec
int
clc
adc
sbb
adc
hlt
push
in
lock
outsl
adc
imul
iret
movsl
int
xor
xchg
cld
loop
decl
add
add
add
jne
rclb
out
fcoml
addb
int3
scas
push
mov
outsb
gs
les
out
ds
xorl
or
or
fbstp
jmp
xor
arpl
into
sbb
inc
cmp
push
es
pop
jae
or
lds
sub
push
pushf
arpl
xchg
jnp
sub
mov
jle
jno
cmp
mov
lock
cmp
xchg
adc
ficoml
dec
or
jbe
pop
mov
shl
or
stos
adc
or
jl
sbb
and
addl
cld
pop
stos
pop
scas
jp
mov
dec
dec
or
mov
pop
into
ds
inc
push
inc
lods
gs
enter
sub
sarb
sti
bswap
xchg
fldcw
fistpll
stc
and
mov
mov
mov
int
stos
cmp
fistl
mov
cmpsb
fmul
clc
mov
add
xchg
mov
jge
aaa
sub
sbb
cmp
sub
xor
outsl
dec
sbb
cmp
das
add
cmc
sbb
out
sub
repnz
jg
or
mov
push
lahf
orl
mov
and
adc
add
inc
xor
popf
dec
int3
inc
jp
xor
adc
mov
cmpsl
add
ret
jp
and
dec
add
jmp
cmc
xchg
cld
pop
orl
adc
ret
out
lret
lcall
aam
push
inc
test
push
pop
mov
dec
and
adc
jo
fisubrl
jno
xor
hlt
mov
xor
je
mov
jne
lret
addb
and
dec
mov
mov
jle
inc
push
jne
addr16
aam
cmp
lods
lret
mov
aaa
loope
mov
into
test
mov
add
lahf
roll
or
cmpsb
ljmp
mov
xchg
inc
mov
xor
cmc
mov
aad
fs
mov
xchg
push
inc
xchg
lods
add
xchg
xchg
dec
lret
or
mov
movb
cwtl
movsl
dec
stos
arpl
sub
shll
aaa
xchg
adc
adc
aas
cmp
scas
jmp
xchg
movsl
mov
cld
sub
loopne
push
data16
cmp
xor
mov
jb
xor
push
xchg
stos
push
sahf
sbb
xor
and
loope
and
ljmp
mov
ss
mov
daa
add
jp
cmp
inc
jne
lods
adc
movsl
cmp
fnstcw
xor
in
insl
cld
sbb
xor
dec
push
pushf
dec
push
push
cmpsb
shlb
pusha
cmpb
dec
ret
jo
pop
pop
xchg
lds
fs
sub
loopne
lcall
cmp
mov
loop
in
fdivl
in
in
ret
mov
jb
or
popa
addl
in
repz
cmp
std
jno
sbb
sub
sbb
mov
or
push
aas
mov
setp
and
cmp
in
sti
test
mov
mov
inc
push
loope
inc
pop
mov
jp
or
test
imul
mov
cmc
mov
sarb
ljmp
ds
inc
mov
xor
dec
dec
sbb
cmpsb
enter
xchg
mov
cmpsb
and
lahf
jns
pop
cmp
sti
add
arpl
and
or
cmpsl
cmp
or
ljmp
lds
andl
push
push
jg
ds
scas
arpl
and
or
movsl
clc
lret
xor
jns
sbb
pop
xchg
js
fs
push
daa
push
stos
stc
lcall
or
notl
sub
shlb
lret
inc
push
stos
jp
popf
jb
imul
and
mov
mov
fisubs
test
mov
jae
orb
cmc
sub
jns
cmpsl
jl
arpl
insb
and
fldpi
sub
inc
mov
xchg
sub
dec
cmpsb
frstor
push
xchg
mov
jmp
test
mov
mov
add
lock
fcmovb
das
inc
xlat
dec
add
mov
cs
mov
mov
sbb
add
mov
push
adc
mov
imull
testb
add
out
shll
pop
lds
adc
sbb
jae
lock
jmp
adc
or
loope
pop
sbb
pop
scas
mov
roll
cli
test
decl
xchg
sbb
adc
xchg
mov
hlt
sub
into
scas
aas
lock
sub
cmp
inc
push
dec
ja
pop
or
scas
std
lods
adc
out
loopne
mov
mov
mov
fisttpl
stos
call
mov
sub
vpsubb
jnp
gs
je
and
mov
sbb
aaa
outsl
cmp
lahf
add
add
les
insb
das
jl
ljmp
sti
sub
das
sub
ss
adc
mov
and
das
in
icebp
aas
aam
push
inc
scas
mov
push
enter
popf
pop
sahf
lret
cld
pusha
dec
xor
jae
push
xchg
push
mov
xchg
mov
xchg
cmp
xor
dec
cmc
bound
dec
sbb
add
sti
dec
int3
icebp
mov
xchg
jns
outsl
mov
pushf
push
pop
test
add
add
push
add
jo
push
sbb
lds
cmp
add
inc
loopne
pop
arpl
xorl
mov
mov
push
and
imul
mov
or
and
cld
sbb
dec
push
jo
sbb
or
push
lret
aaa
mov
shll
xor
adc
cmp
and
clc
into
cmpsl
in
xchg
loope
and
jmp
enter
push
xchg
lret
xchg
popa
cbtw
loop
pop
imul
xor
stc
mov
adc
daa
data16
push
sbb
inc
les
mov
lods
pop
ljmp
ficompl
dec
aas
arpl
mov
sub
xlat
fcoml
pop
add
add
add
jae
sbb
in
mov
test
adc
push
dec
mov
and
popa
out
push
xor
cmp
adc
shll
push
cmp
mov
push
pop
cmp
cwtl
push
movsb
dec
xchg
ret
les
pop
pusha
cld
pop
aaa
cmp
and
rol
push
roll
icebp
mov
cmp
pop
lods
inc
xchg
push
andb
pop
cmc
cmc
jecxz
into
ljmp
cltd
xlat
test
adc
orb
loop
jae
ret
inc
loope
fmull
mov
push
pop
arpl
imul
mov
andb
flds
loop
mov
adc
mov
gs
jo
mov
loop
add
xlat
inc
mov
imul
movsb
adcl
xor
jbe
mov
dec
or
jmp
mov
and
outsl
or
push
test
pop
mov
in
jo
shrb
int
push
push
ret
movsl
mov
test
xchg
pop
xor
ret
pusha
addl
xlat
sub
jb
mov
jns
negl
jnp
js
cmp
or
mov
sbb
inc
cli
pop
adc
pop
out
ror
or
add
inc
xchg
xor
lcall
imul
mov
push
cmp
adc
dec
cmp
pop
les
lock
in
fisubrs
out
dec
fwait
push
pop
das
dec
stc
mov
add
aad
clc
add
out
iret
int
ud2
sarb
pop
cmpsl
push
add
movsb
mov
jp
out
mov
dec
mov
cltd
arpl
test
mov
mov
mov
xor
mov
inc
fstl
hlt
jae
dec
cli
outsb
syscall
sub
test
push
scas
negl
xchg
insl
jb
cmp
nop
mov
push
or
push
ror
pop
mov
negl
pop
add
inc
xchg
aam
xor
push
stc
lock
inc
and
add
xor
cmpsl
outsb
ficomps
cmp
pop
mov
orb
xchg
fnstsw
inc
out
push
mov
jge
or
out
in
pop
or
fidivs
aaa
mov
mov
adc
lds
mov
stos
mov
mov
mov
je
jbe
adc
insl
leave
xchg
int3
xlat
pop
arpl
lods
imul
pop
add
xchg
out
add
xchg
sub
add
arpl
jns
fimull
mov
sbb
or
das
adcb
fwait
mov
out
das
ret
mov
repnz
mov
mov
and
cmp
mov
push
mov
fstl
xchg
inc
test
scas
jp
xor
or
xchg
aam
rorl
repz
aam
das
inc
mov
dec
xor
mov
push
pop
insb
iret
adc
nop
cmp
push
sbb
mov
push
test
test
sbb
cmp
add
setb
in
jns
adc
jg
je
ror
jne
add
jne
jno
sub
mov
or
jl
fcomps
push
dec
aam
dec
movsb
mov
push
mov
jae
stos
mov
and
or
out
dec
loopne
add
daa
dec
push
insl
enter
clc
rolb
ret
push
jmp
adc
pop
cli
and
leave
sti
lds
enter
ret
sarb
push
cwtl
mov
mov
aam
stos
xor
xor
lods
xchg
sar
pop
jne
mov
je
add
gs
inc
bound
lods
mov
arpl
incb
fsubr
repnz
jno
jnp
pop
mov
push
sbb
addr16
sti
inc
or
mov
jmp
jmp
mov
popa
or
push
sar
jge
xchg
xor
lds
and
push
dec
mov
movl
insb
mov
lock
mov
mov
je
cmp
insb
cmpsb
mov
push
xchg
imul
es
push
out
call
nop
in
out
fst
gs
dec
inc
xor
stc
out
dec
movsl
xchg
mov
cs
fcmove
int
mov
push
mov
inc
mov
jns
sahf
enter
xchg
int3
xor
xchg
pop
mov
shrl
dec
popf
pop
orb
imul
push
push
pop
inc
xchg
jg
sub
add
adc
loopne
shll
pop
lods
mov
enter
icebp
jle
pop
push
xchg
mov
xor
jge
dec
daa
mov
sarb
cs
cmpsb
imul
arpl
sub
shll
inc
push
push
pop
pop
ss
mov
jne
sbb
pop
jbe
or
mov
test
leave
mov
push
mov
inc
movsl
ljmp
push
add
cmp
jmp
lds
pusha
cld
aaa
cmc
pop
xchg
in
add
xchg
or
push
mov
sub
sti
out
sti
xchg
bound
adc
push
add
insb
loopne
add
das
pop
add
cmpsl
push
ja
mov
mov
leave
jp
jecxz
loopne
sub
jge
arpl
sub
stos
add
xchg
fisttps
jns
jge
or
in
cmp
imul
inc
cmp
mov
jp
mov
cwtl
lock
cmpsl
lcall
movsb
aas
xor
fidivrs
push
add
lods
sub
movsb
cmpb
adc
sbb
mov
cs
aad
lret
adc
cmpl
out
jle
xlat
xchg
add
jnp
push
in
xchg
aam
dec
mov
fcoml
adc
or
cmc
ficomps
gs
dec
inc
andl
or
cmp
loop
cltd
mov
xchg
dec
and
xchg
cmp
sbbb
inc
icebp
xor
rorb
lcall
fldl
or
test
and
jo
and
and
outsb
nop
test
outsl
cld
push
notb
fcoml
jb
jns
dec
inc
cmp
das
je
stos
push
mov
leave
push
pusha
adc
les
das
push
mov
sbb
aas
dec
inc
fwait
cld
add
cltd
stos
or
xor
or
arpl
insl
mov
repz
fisubrl
hlt
addr16
dec
adc
jbe
sbb
sub
or
pop
mov
sbb
roll
sub
xor
xor
sahf
inc
mov
add
jb
mov
into
es
pavgb
rcrb
das
inc
insb
ficoms
loope
dec
popf
xchg
sub
sarl
jp
mov
shr
inc
cli
scas
shrl
iret
in
mov
bswap
pop
into
jnp
mov
fisttpl
out
mov
mov
test
incb
jmp
out
mov
lock
xor
mov
jnp
aam
inc
sub
fidivrs
sbb
inc
push
mov
in
mov
ret
jp
pop
pop
jns
mov
xor
iret
ret
ja
cs
fiaddl
data16
sub
mov
push
ret
ja
push
push
insb
cmp
dec
xor
add
jbe
push
jle
dec
pop
or
push
adc
sub
pusha
mov
cli
cmp
movsb
cmp
push
mov
xchg
jb
mov
push
shlb
bound
fstps
mov
mov
pop
pushw
jb
movsl
or
aas
enter
in
pop
loopne
adc
callw
shrl
mov
and
cli
inc
lret
cmp
insl
push
xchg
out
or
aas
outsb
adc
cmp
pushl
mov
xlat
add
je
fldenv
sbb
sub
outsb
jle
addr16
add
jg
jno
imul
xor
inc
push
mov
cmpsl
xchg
pop
mov
aad
imul
lock
push
ja
ljmp
shll
jne
dec
testl
out
nop
push
es
lock
insb
ret
les
xchg
gs
shr
ds
cmc
lret
imul
int3
dec
jg
pop
aas
pop
aas
sub
lret
mov
mov
add
sahf
push
fwait
xchg
icebp
dec
xchg
add
or
fildll
test
outsb
and
add
and
mov
cltd
leave
mov
and
xchg
jnp
imulb
ds
or
fmuls
mov
pop
imul
ljmp
mov
imul
negl
ret
lock
in
push
cmp
inc
inc
in
ffreep
lret
fidivrl
sbb
cmc
es
xor
test
push
and
mov
dec
ja
cmp
repnz
xorb
das
inc
sti
mov
dec
cmp
ljmp
mov
xchg
stc
cmp
lahf
xchg
in
arpl
pop
mov
mov
ss
push
add
mov
mov
and
add
test
add
aaa
pop
push
pop
xor
jae
sub
jp
stos
push
dec
ljmp
mov
call
mov
out
mov
out
int
mov
loope
inc
fcmovne
or
xchg
fistpl
lret
in
xlat
mov
mov
dec
pop
addl
and
sti
neg
test
rorb
ret
out
subl
aam
test
jnp
mov
fsubs
mov
jmp
mov
pushf
out
fldt
xchg
imul
loope
push
cmpsb
ds
cmp
mov
jge
fwait
mov
and
pusha
mov
arpl
imul
xor
dec
push
xchg
push
shll
mov
fistpll
fistpl
aad
sbb
mov
adc
adc
sbb
xchg
cltd
and
repz
or
jge
jnp
fsub
divl
inc
push
mov
sub
inc
or
adc
mov
and
iret
xor
loopne
sub
mov
jle
stc
and
or
in
xchg
mov
andl
and
rcrl
mov
inc
int3
adc
sbb
jne
push
xorb
cld
pop
out
sub
mov
sbb
jno
lods
or
xchg
mov
mov
cmp
cmpsb
sbb
mov
int
lea
push
call
stc
outsb
outsb
sub
adc
sub
push
xchg
xor
pop
leave
sbb
adc
jl
decb
jp
addl
inc
cltd
mov
mov
mov
xor
and
into
test
test
xor
and
mov
jae
mov
xor
pusha
sti
subl
into
std
pusha
int3
sbb
cmp
pop
add
in
push
popa
mov
mov
add
add
dec
lods
push
dec
push
xor
enter
pop
test
fdivp
ss
lahf
shlb
or
xor
addr16
or
or
adc
pop
xchg
bound
stc
movsl
aam
jmp
push
dec
fisttpl
xchg
out
and
das
jge
mov
jne
adc
mov
xchg
out
scas
push
jbe
in
lods
imul
jge
cld
flds
push
fwait
xchg
xor
sar
lock
std
in
adcl
dec
xchg
mov
inc
mov
dec
mov
xor
nop
cmp
pop
jp
rorl
mov
push
fcoml
mov
pop
xor
ljmp
pop
pushf
push
rcll
push
inc
mov
pop
fdivrl
pop
sub
jg
adc
mov
mov
lret
addl
inc
lret
xor
lret
inc
and
and
push
pop
das
subl
add
test
in
xchg
loopne
pop
fwait
dec
mov
and
lcall
xchg
dec
inc
adc
clc
into
mov
inc
sbb
xchg
lcall
lds
fs
sub
mov
push
mov
push
pusha
int3
sbb
out
push
sarl
pop
mov
cmpsb
daa
out
adc
xor
aad
movsb
cmp
mov
jl
into
in
rolb
ljmp
jno
pop
xor
addr16
call
mov
decl
cmp
push
subl
push
add
enter
loope
in
leave
in
sub
jp
cmp
mov
daa
shll
je
mov
inc
push
ljmp
mov
push
cmpb
out
inc
sub
pop
jne
mov
dec
adc
in
test
xchg
test
bound
dec
lret
mov
add
xor
loopne
ss
adc
popl
mov
pop
sbb
or
pop
jge
sbb
rcrl
test
mov
mov
and
xor
ljmp
mov
jle
mov
pop
fdivrs
lret
push
dec
xchg
mov
mov
addl
loope
jp
and
rcrb
jne
add
sbb
push
mov
shlb
nop
dec
add
sbb
nop
pop
cmpsb
lock
insl
lret
xlat
arpl
rcll
pop
sub
loopne
add
mov
sbb
rep
sbbb
and
ss
mov
dec
mov
jb
mov
rcll
in
push
mov
lret
xchg
ja
mov
cmp
cmp
repz
aas
sub
std
insl
sub
pop
sar
arpl
call
push
aam
sub
pop
aaa
outsl
int
and
and
sti
ret
jp
inc
add
and
xchg
loope
andl
nop
aam
push
or
or
jno
ds
scas
sub
jecxz
lcall
in
sarl
add
fwait
adc
mov
mov
cld
int3
xor
shlb
je
sahf
std
push
jmp
push
sub
leave
into
pop
imul
les
pop
jecxz
testl
push
jg
std
jns
loope
outsl
xchg
adc
mov
xchg
jp
or
mov
bound
lods
mov
arpl
loopne
aas
push
jg
pop
push
or
mov
jno
cltd
lea
dec
and
xor
jb
and
xor
pop
add
push
sub
mov
xchg
loopne
sub
pop
mov
push
mov
arpl
push
lds
imul
dec
cli
lret
jno
jmp
mov
jno
lcall
imul
sahf
pop
cs
out
dec
aaa
stos
adc
fistl
filds
aas
inc
loop,pn
or
call
inc
cmp
or
jns
mov
lahf
push
dec
push
sub
jae
nop
push
jb
ret
push
inc
arpl
or
or
dec
push
test
shrb
or
dec
cmp
daa
xchg
lret
cld
adc
pop
clc
xchg
xchg
sub
testl
or
jnp
stos
fsts
iret
mov
fcomps
loope
test
in
cmp
pop
clc
cmc
mov
lods
lods
adc
leave
xorb
xor
stos
lds
out
scas
cmc
xor
rorl
mov
adc
mov
mov
fsts
pop
shrd
movsb
xlat
sub
in
pop
and
sub
sbbl
push
jno
fiaddl
cli
stos
sub
insl
inc
cli
sub
jno
aas
int
bound
pop
mov
dec
div
sbb
fistpll
int
mov
ds
in
add
cs
and
cmpl
xchg
xchg
cmc
xor
bound
mov
pushf
sub
daa
cltd
jle
mov
sub
fcompl
aaa
test
out
push
fwait
lret
lret
dec
adc
sahf
out
mov
out
test
mov
sti
push
mov
and
enter
hlt
dec
insl
pop
mov
xor
mov
add
jbe
inc
mov
ret
int3
mov
arpl
mov
jp
fcompl
sub
imul
ret
cld
mov
into
jns
pop
adc
xor
mulb
sub
jge
daa
leave
add
mov
repnz
movsl
das
push
inc
mov
fs
pop
dec
addr16
repz
mov
xchg
popf
mov
push
imul
scas
jl
jecxz
and
lcall
scas
enter
outsb
rorb
adc
push
cmpl
cmp
les
aam
sbb
popa
adc
push
mov
xchg
dec
mov
xor
loopne
adc
xchg
jns
add
push
ret
dec
sti
dec
inc
mov
pop
inc
into
test
xor
lret
push
aaa
or
out
movsl
outsl
dec
sti
popa
stc
popl
cmp
push
xchg
loopne
cmp
scas
inc
mov
jmp
outsl
push
jb
dec
push
repz
mov
and
and
lock
in
shl
sub
or
rcl
push
out
aas
lret
arpl
mov
mov
mov
cmp
push
xchg
or
xor
lcall
cmp
sub
or
loop
in
fs
xor
leave
mov
pop
sbb
push
jle
jge
or
arpl
std
or
test
sbb
dec
push
in
aad
lahf
lret
lahf
adcl
sub
mov
jo
xchg
mov
fimuls
loop
incl
pop
xor
aam
sub
mov
hlt
pop
inc
cli
and
xchg
sub
outsb
xor
jae
decb
or
dec
cmp
push
xchg
ffreep
repz
es
mov
mov
test
inc
jmp
push
mov
pusha
iret
mov
pop
das
sbb
lods
test
inc
pop
push
xchg
mov
mov
ret
push
and
call
jb
shlb
sar
or
lahf
lock
ss
xchg
inc
in
pop
mov
jecxz
inc
dec
xchg
push
ja
jl
cmp
sub
pop
ret
pusha
add
repnz
icebp
test
mov
lret
jns
imul
mov
lods
mov
sbb
push
push
jl
push
jge
cmp
xchg
xchg
out
adc
push
test
pop
fdivrl
popf
mov
ss
pop
adc
or
cmp
nop
push
sti
dec
clc
insb
sbb
aaa
pop
dec
push
jle
nop
add
jnp
ficoms
in
out
pusha
pop
dec
dec
pop
shlb
call
fidivrl
jo
mov
xchg
movsl
pop
nop
and
out
mov
in
stc
in
xchg
inc
cltd
pop
movntps
repz
js
mov
sbb
inc
inc
cmpsb
jecxz
cmp
inc
mov
mov
cmp
stos
or
pop
lahf
int
lods
sbb
and
push
je
popf
sbb
sub
inc
pop
das
fwait
mov
in
into
ljmp
xchg
outsl
movsb
jmp
popf
popa
dec
inc
mov
mov
or
xor
les
add
push
mov
mov
call
in
shrl
cs
stc
sti
mov
adc
push
out
cmp
xchg
jg
mov
sub
mov
scas
xchg
pop
fs
imul
insl
dec
sub
pop
mov
add
in
adc
lods
jb
pop
mov
int3
lcall
stos
pop
xchg
addr16
jne
sub
sbb
jae
enter
mov
test
fstps
dec
mov
or
adc
xor
xchg
das
mov
repnz
sbb
es
je
push
and
test
sbb
pop
ror
add
lret
xorl
out
and
jl
imul
jp
lahf
test
aad
jle
les
mov
push
pushf
ret
pop
add
push
popf
lret
lods
test
out
popf
jbe
rcrb
add
andb
test
in
mov
or
stos
mov
out
mov
test
mov
movsl
cmp
mov
mov
adc
subl
mov
pop
insl
xchg
cltd
inc
dec
lret
xchg
mov
imul
pop
cwtl
cmp
xlat
push
inc
inc
adcl
outsb
nop
mov
dec
pop
sub
mov
xor
jmp
dec
cmp
sbb
pop
ss
jne
movsb
dec
jno
dec
hlt
push
sbb
out
push
ret
dec
jmp
subb
mov
mov
repnz
pop
lret
push
xlat
xchg
lds
out
xchg
add
in
es
out
jo
daa
idiv
sub
ss
sbb
cmc
ja
scas
out
mov
jb
adc
mov
and
jbe
repnz
mov
clc
sbb
fchs
.byte
es
.byte
.byte
