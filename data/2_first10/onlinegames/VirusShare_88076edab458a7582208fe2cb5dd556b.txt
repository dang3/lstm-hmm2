imul
call
in
sub
push
push
lea
push
xor
push
mov
add
sbb
ss
int
jmp
jo
insb
in
jne
dec
mov
out
jae
out
cs
es
mov
int
push
call
mov
cmp
je
shlb
inc
push
push
insb
lahf
out
xchg
ret
inc
push
lds
data16
je
dec
enter
lret
in
jnp
cs
inc
push
int
into
arpl
outsl
fldt
jbe
shrl
shlb
shll
call
jg
and
ret
pop
mov
js
movsb
movsb
iret
repz
movsl
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
repz
repz
mov
mov
fnstcw
iret
mov
mov
xchg
mov
xor
mov
mov
idivb
loope
jmp
lea
push
push
cld
push
call
pushl
dec
pop
js
mov
xchg
jge
sbb
cld
dec
dec
cmp
xor
and
popa
and
rcrb
inc
add
cmp
fdivrp
fistpll
jb
jmp
mov
imul
add
lea
movsl
add
ja
dec
jb
or
pop
pop
pop
leave
ret
pop
testb
sub
in
movl
add
dec
push
fldcw
xchg
jne
jae
gs
jb
sahf
data16
xor
xor
repz
repz
imul
outsb
push
in
in
out
and
out
call
ja
std
xchg
je
inc
inc
gs
enter
fidivs
fmuls
or
add
inc
push
push
dec
mov
fistl
push
lret
sarb
data16
push
rorb
ret
sbb
xchg
adc
or
inc
mov
push
mov
loopne
aaa
mov
incl
mov
jge
sub
cmp
cmpsl
std
lock
cmpb
adc
mov
out
imul
push
push
adc
clc
sbb
rcrb
mov
je
mov
aas
push
ds
das
mov
and
int3
in
cld
push
sub
jp
pop
add
ficoml
movb
data16
sahf
out
sahf
xlat
fcomp
fcmovu
fcompl
nop
out
fstp
mov
mov
test
or
sahf
mulb
imul
sarl
jne
jbe
sarb
je
int
lcall
aaa
jge
mov
jle
cmpsl
adc
inc
int
shrl
addb
insb
ss
inc
xchg
push
mov
inc
push
sbb
mov
adc
test
cld
mov
nop
push
adc
popa
xchg
jbe
gs
repz
xchg
xchg
xchg
cwtl
in
sarl
out
fwait
inc
outsb
pushf
popf
insb
into
sahf
lret
lcall
repz
lcall
mov
mov
leavew
jne
lret
int3
je
int
jge
sti
into
jb
iret
shlb
shll
shl
shlb
mov
jge
mov
imul
jae
scas
ljmp
push
in
xor
cmp
lea
in
push
inc
push
jecxz
stos
fnsave
clc
sbb
push
push
sti
jge
scas
mov
data16
or
mov
lret
push
jne
adc
test
addr16
cmpsl
repnz
pop
pop
inc
das
pusha
push
imul
imul
mov
stc
or
lea
loopne
movsl
mov
adc
ja
insl
jae
sbb
mov
addl
mov
rep
inc
jle
xor
dec
mov
or
or
imul
sub
cmc
ljmp
sahf
fistps
xor
ror
out
sbbb
or
adc
mov
pop
je
dec
out
out
cmp
adc
jg
or
imul
jl
sbb
add
xor
pop
filds
je
sbb
pushl
or
fs
push
mov
jb
incl
movsb
push
mov
xor
mov
sbb
sti
stos
stos
ss
add
adc
and
or
push
repz
xchg
in
cmp
or
orl
or
mov
mov
or
and
push
fbstp
mov
cmpl
jne
cmpl
outsb
das
insl
popa
jne
adc
je
imul
addr16
cmp
mov
and
xor
and
addr16
cmp
cld
lahf
sbb
popa
outsb
jne
movl
pop
ret
xor
cmp
jmp
jne
hlt
js
repz
je
sbb
xchg
push
add
or
or
subl
pushf
arpl
fsubs
fnstenv
xor
fdivs
or
xchg
xchg
mov
and
cld
movsb
loopne
testl
in
push
or
ja
aaa
jge
hlt
push
mov
pop
test
fsts
pop
ret
div
add
jl
fsubs
or
dec
mov
sahf
push
push
push
je
push
or
pop
lahf
jge
inc
push
push
sub
dec
test
adc
lock
int3
out
inc
shl
fisttps
sbb
pop
mov
jecxz
subl
pop
sbb
adc
ljmp
nop
out
aad
and
push
outsb
pop
push
fistpl
mov
or
and
decb
ret
cmp
cld
decb
cmp
test
or
push
cmp
inc
cmp
lcall
ja,pt
int
jle
cmp
mov
inc
push
inc
xor
repnz
inc
inc
or
inc
jns
jmp
dec
or
repz
lcall
popf
dec
xor
rorl
and
jo
shll
jb
dec
add
dec
gs
dec
push
insb
dec
shll
popa
imul
cmpsl
inc
aam
call
mov
popa
imul
je
mov
fldcw
mov
movsl
xor
cmpsl
test
stos
ss
cmp
dec
repz
and
and
and
movsb
jns
int
dec
inc
daa
sub
int3
xor
sub
sub
and
shrl
sub
lea
xor
sahf
xor
xor
xor
loope
sbb
in
inc
jnp
int
out
inc
out
push
lock
repnz
rorl
adc
testl
and
cmp
sub
or
ds
lcall
insb
popa
sbb
rcpps
sub
out
push
jle
adc
xor
insb
xchg
rcll
push
pusha
sarb
ret
sbb
je
es
cmpsb
imul
sub
jb
xor
mov
in
loop
push
mov
xchg
repz
repz
xchg
xchg
xchg
xchg
in
sarl
iret
xchg
cwtl
cltd
dec
cs
add
popf
call
xor
mov
enter
in
adc
lcall
adc
inc
popa
arpl
arpl
xchg
data16
sbb
push
jge
sbb
insl
bound
or
push
scas
fnstenv
fwait
iret
rcr
fstp
fbld
sub
insb
loop
inc
hlt
imul
rorb
dec
and
les
rorb
xor
gs
lret
mov
in
mov
xchg
lret
gs
jae
jb
jne
mov
push
jne
pop
add
inc
js
popf
aaa
sbb
rdpmc
int3
inc
pop
push
mov
aad
lods
push
data16
leave
push
rorl
pusha
arpl
push
or
push
lods
pop
aaa
pop
addr16
dec
jae
fwait
outsl
pop
mov
pop
cmp
mov
sarb
sbb
xor
jo
je
lods
adc
lods
pushf
lea
xchg
fcomps
push
adc
mov
test
je
xor
sarb
inc
mov
push
pushl
hlt
and
insl
clc
jne
add
loopne
jle
mov
cmp
and
jmp
lcall
test
push
push
outsl
call
cmp
scas
lock
lret
ljmp
mov
pop
lea
flds
test
rcl
push
add
fbld
loopne
les
adc
xchg
xor
shlb
sti
mov
push
xchg
sbb
lahf
js
adc
arpl
call
sbb
jbe
call
pushf
int
cmp
or
sub
inc
pxor
fisttpll
cmc
push
imul
xor
insb
mov
xor
xlat
mov
inc
in
and
cmp
mov
nopl
aam
cs
mov
icebp
test
sbb
rclb
scas
enter
lcall
js
hlt
test
mov
add
cmpl
push
add
mov
jne
inc
fdivrl
push
movsb
push
mov
inc
mov
test
jae
cmpsl
popa
sbb
shl
imul
ljmp
das
jl
sti
out
dec
cmp
je
cmp
jb
dec
dec
adc
fdivrp
cmpw
jne
push
es
sbb
pop
jne
jmp
inc
xorb
or
jge
movsb
cmp
adc
push
inc
repnz
jb
rolb
inc
sbb
nop
mov
cmp
out
push
call
push
push
and
add
push
jns
shlb
add
or
fistpl
or
mov
subl
lcall
sub
into
repz
cmc
shlb
stc
cli
test
imul
inc
xor
xor
shrb
jb
xor
dec
shlb
ljmp
in
out
out
mov
cmp
rorb
mov
call
sarb
mov
adc
mov
push
fs
push
ret
movb
dec
sub
push
push
push
das
sub
sbb
mov
pop
jno
ret
ss
xor
mov
push
pushf
adcb
sub
gs
cmpl
pop
cs
cmc
std
shl
pop
hlt
or
bound
fnstsw
mov
scas
xor
mov
stc
jne
inc
jmp
push
adc
test
lods
mov
clc
push
push
xor
stc
in
stc
aas
test
adc
mov
data16
scas
fsub
adc
sahf
and
stc
clc
gs
push
cmp
in
adc
in
pop
in
mov
xchg
or
es
push
inc
je
push
or
test
clc
test
and
xorl
and
fs
ret
sub
xor
mov
push
pop
and
ret
test
pop
inc
das
push
cmc
add
je
lock
aaa
loop
xchg
mov
add
sbb
arpl
push
xor
repz
dec
je
jo
imul
mov
cmpsb
jno
jae
repnz
outsl
lock
hlt
js
mov
jne
fcomps
hlt
pop
arpl
mov
add
jne
test
je
pop
loopne
adc
int
cmp
cmp
sbb
dec
cli
sti
push
mov
pop
sub
fs
add
sbb
push
jp
inc
adc
mov
jle
xchg
or
sbb
loopne
fdivp
inc
fcomps
sub
je
push
movhps
xchg
adc
pop
adc
jnp
test
jae
ds
pop
sbb
add
je
mov
xor
and
fstl
loopne
adc
jge
rorb
subl
xor
push
pop
iret
repz
push
dec
dec
dec
xchg
dec
shrl
or
or
ljmp
xchg
cmpsb
push
outsb
gs
lods
jb
in
sarl
push
scas
es
mov
imul
ds
mov
mov
pushf
mov
xor
jo
cmpsb
add
sub
outsb
shlb
jno
dec
cmp
dec
gs
test
xchg
mov
repz
xchg
xchg
cwtl
push
jl
repz
repz
in
repz
lahf
mov
xchg
movsb
call
movsl
cmpsb
popl
push
jmp
fs
gs
pop
pusha
hlt
mov
jne
add
dec
shll
inc
int
lcall
pop
jb
rorl
outsb
sahf
cmpsl
lea
arpl
xchg
add
mov
imul
cs
mov
shlb
loopne
cmp
aas
ret
test
les
fiaddl
roll
dec
sarl
push
add
rcl
fsubs
dec
dec
rcr
in
icebp
aas
movb
push
mov
call
mov
cmp
cwtl
xchg
and
in
pop
push
push
mov
cmp
cmc
jecxz
imul
xor
jae
std
ljmp
dec
loopne
shlb
cmpb
scas
pusha
aaa
mov
and
cld
and
leave
or
xor
les
jmp
bound
popf
cmp
lret
pusha
pop
push
and
rorl
mov
mov
mov
mov
idiv
xchg
sbb
cmp
je
xchg
push
sahf
arpl
jl
jle
add
pop
inc
cmp
jl
push
and
lock
sub
inc
lea
push
cli
mov
adc
mov
test
mov
push
les
scas
fisubrl
sbb
in
pushf
or
or
push
push
xor
je
push
xchg
mov
jp
je
sbb
pop
mov
push
jae
loopne
fcompl
lods
mov
xchg
add
mov
andb
stos
jl
sbb
or
mov
sbb
push
test
xchg
mov
pushl
push
adc
mov
adc
xor
xchg
sbb
inc
push
xor
adcb
sub
inc
popf
push
cmp
mov
dec
ret
push
mov
or
push
pushf
jns
mov
push
push
jo
in
outsb
dec
inc
xor
xor
popa
insl
gs
outsl
jp
imul
imul
imul
mov
xor
lcall
jb
push
lcall
and
divl
in
sarb
shll
aad
ficompl
xor
fcmovu
fsub
cmp
xor
lea
mov
pop
inc
pop
push
push
inc
shll
insl
gs
shll
pop
xor
shll
xor
movsl
xor
mov
insl
mov
pop
movsb
imul
inc
lcall
imul
lcall
xor
sub
fists
mov
addb
imul
nop
xchg
bound
adc
adc
jnp
sub
sub
jns
sub
dec
xor
mov
push
rorb
push
push
push
fdivr
cmp
dec
scas
push
jae
jmp
xor
mov
xor
push
push
mov
rclb
outsb
push
bnd
jge
or
pop
sahf
push
test
jne
add
mov
mov
aas
iret
sti
cld
std
call
or
cmp
js
adc
icebp
mov
jl
movsb
adc
outsl
out
mov
aam
rcrl
dec
mov
dec
gs
rolb
and
mov
or
mov
add
cmp
mov
decb
aaa
mov
pusha
mov
mov
ljmp
cmp
push
mov
xor
pop
je
cmp
cli
add
shr
jne
add
ds
dec
jne
mov
les
mov
mov
adc
and
jae
xor
adc
decb
mov
rorb
adc
outsl
nop
adc
fdivs
mov
mov
scas
add
scas
shl
cmc
sub
add
push
lods
adc
jmp
push
sbb
scas
inc
lcall
jb
lcall
outsl
jne
adc
inc
fs
pop
lds
out
pop
aam
outsb
jmp
call
jge
test
mov
ljmp
sub
pusha
and
dec
popf
push
push
repnz
in
adc
adc
test
cltd
nop
push
insl
lret
inc
sbb
xchg
dec
jle
push
mov
xlat
repz
and
mov
inc
cmp
push
lcall
jnp
dec
repnz
and
lret
cmp
mov
sahf
push
inc
loopne
push
pusha
hlt
inc
mov
mov
push
push
std
mov
push
pop
mov
mov
jge
and
or
out
ljmp
movb
or
adcl
xor
divb
sbb
or
aaa
pop
ret
jmp
je
mov
mov
in
insl
ja
scas
push
shl
sbb
sub
loopne
iret
sub
mov
fisubs
decl
andb
aas
sbb
lahf
fs
ljmp
jo
sub
cmp
add
es
cmpsb
imul
lcall
cmp
dec
and
cmp
and
cmp
repz
and
cmp
cmp
imul
sbb
es
xor
cmp
stos
xor
xor
cmp
push
xor
xor
pushf
lods
adc
dec
adcl
push
dec
pop
and
pop
inc
mov
in
sahf
mov
std
bound
mov
add
dec
mov
repnz
sbb
dec
push
inc
pop
mov
and
push
jl
mov
test
jae
outsl
xor
push
test
popa
arpl
imul
cmp
lcall
jo
cmpsb
imul
sbb
call
scas
cmc
sbb
push
in
add
mov
sub
pop
ss
cwtl
frstor
lea
sbb
lds
lret
addr16
je
cld
clc
xorb
enter
push
out
std
lcall
repnz
cmc
lods
xchg
adc
cld
in
xchg
jae
inc
notb
call
mov
lods
dec
push
push
mov
lea
ficoms
pushf
inc
lcall
sbb
jb
dec
sbb
outsb
lods
scas
push
scas
cmpsl
jge
in
mov
ss
mov
jae
mov
mov
mov
and
fs
mov
rorl
xchg
out
sahf
mov
push
int3
out
sahf
jb
arpl
cmpsb
sub
push
xchg
jmp
push
gs
mov
jb
popa
fnstenv
sahf
out
test
xlat
fcomp
fiaddl
faddl
inc
adc
fsubr
adc
sbb
dec
pop
xor
lock
out
inc
mov
jb
roll
out
enter
mov
dec
movsb
out
leave
cmp
push
adcl
and
adc
push
mov
cld
wrmsr
sub
and
adc
loopne
sub
call
in
push
add
xchg
incb
mov
sahf
gs
jae
arpl
fs
push
andps
xchg
adc
or
jmp
push
adc
sub
push
dec
call
or
mov
push
ljmp
neg
sbb
inc
decb
pusha
sub
and
pop
mov
aaa
lcall
outsb
cmpsl
popa
shlb
fs
mov
pop
jmp
push
adc
mov
ds
sbb
imul
cmp
push
lret
inc
pusha
xchg
push
sbb
adc
fsubrl
xchg
xor
xor
push
movl
push
fchs
inc
loope
int
outsl
push
jl
mov
push
mov
addr16
out
inc
or
repz
or
mov
iret
ret
in
push
stos
push
dec
dec
rcll
setnp
out
into
movsl
add
xchg
or
xchg
sub
pop
pop
pop
dec
add
ljmp
cmp
and
mov
and
mov
inc
mov
aas
in
push
in
in
enter
jns
mov
mov
fwait
lods
out
stos
or
in
nop
xchg
aam
mov
popf
cmpsl
iret
dec
or
mov
fsts
sahf
dec
sub
enter
int3
iret
xlat
nop
xchg
or
jp
push
dec
jnp
ds
jl
push
sub
ds
mov
mov
leave
lds
in
mov
data16
lea
out
mov
cmp
mov
push
aam
pop
les
les
push
mov
inc
js
leave
dec
jno
fcmovne
inc
stos
lret
adc
jmp
ss
imul
inc
pop
test
insb
into
or
add
rorb
add
add
mov
fadd
movsl
push
cmpb
adc
pop
push
add
xchg
dec
js
push
mov
test
add
in
inc
ja
fsubr
adc
and
into
xor
push
xor
jecxz
push
xor
lret
cli
insb
rcrb
add
sarb
xchg
fsubr
stos
sahf
ljmp
nop
push
idivl
nop
xor
lea
inc
inc
jge
sub
push
xor
enter
mov
push
xorb
push
movsb
insl
xchg
movl
inc
mov
insb
push
in
inc
mov
nop
inc
dec
mov
es
and
nop
inc
push
pushf
pop
push
inc
enter
lock
enter
shrb
enter
icebp
mov
movsb
and
repnz
out
ret
pusha
mov
jle
test
push
inc
jmp
out
fdivrp
incl
cmp
jne
xor
mov
cmp
jne
push
inc
adc
shr
mov
add
leave
cmpb
adc
rorb
popf
sub
xchg
dec
jle
pop
sub
jne
sbb
into
jb
pop
sbb
xor
popa
jmp
adc
sub
add
test
test
je
jecxz
inc
cmp
pop
ja
jb
shrb
sub
fisttpll
fadds
subl
fadd
fneni(8087
dec
clc
adc
idivb
ja
dec
clc
movsbl
cltd
test
fwait
dec
call
dec
cmp
pop
jb
lea
push
rcr
inc
cmpsl
jae
ja
ficoml
lea
mov
or
incl
sub
fucomip
adc
clc
inc
cmp
lcall
push
sbb
sub
xor
dec
jg
lods
pop
mov
fsubl
add
and
push
cwtl
int3
cmp
add
inc
movsb
and
cwtl
or
stc
icebp
scas
movsb
pop
pop
nop
loopnew
pop
sbb
mov
les
push
aas
arpl
cmpsb
imul
data16
outsl
arpl
imul
mov
in
cwtl
fadd
dec
test
divb
fisttpl
cwtl
xor
cwtl
dec
ss
lock
adc
sub
icebp
sub
dec
dec
fs
mov
dec
and
jo
xor
add
outsb
mov
xor
shll
jae
loopne
cmpsb
imul
imul
out
in
in
out
out
lock
nop
aaa
sbb
inc
gs
negl
imul
ss
mov
fsubrs
repnz
pop
arpl
test
cmp
pushf
fs
adc
fcomp
lcall
and
or
sub
push
jge
faddl
popa
jl
or
aad
int
or
jl
cmp
lret
loope
push
mov
or
lcall
dec
stc
lahf
mov
adc
lea
std
add
xor
pop
sub
cmp
mov
lea
xor
push
jle
xchg
dec
add
ja
shl
add
mov
scas
lods
or
adc
sub
adc
addr16
xchg
shl
lods
out
xchg
jae
mov
ja
insl
dec
mov
cld
add
cmp
stos
imul
pushl
mov
ret
pop
ror
cld
cmpsl
push
je
inc
cmp
jb
mov
lret
jae
sahf
andb
dec
aaa
and
pop
out
adc
js
pushf
int
test
data16
rolb
push
push
sub
jb
mov
pop
push
das
pop
arpl
pusha
push
push
xchg
xor
mov
insb
and
das
std
das
push
push
pop
pop
andb
popl
lret
add
lock
jg
add
mov
cli
test
pop
jbe
cmp
jb
lea
xor
sbb
insl
mov
ja
add
pusha
pop
add
cld
push
mov
xchg
es
lcall
jb
mov
or
mov
cmp
addb
mov
sbb
or
sub
testb
push
adc
or
push
pop
inc
sbb
adc
dec
xchg
push
jbe
adc
or
sub
cmp
outsb
mov
test
fildl
push
jae
sub
add
xchg
mov
jne
clc
ret
sbb
xchg
xor
push
inc
add
or
inc
clc
and
pop
nop
daa
cld
adc
add
ret
sbb
lret
enter
mov
lock
sbb
movsb
lahf
sbb
cvttps2pi
test
dec
je
fbld
jae
push
mov
mov
sub
pop
sbb
cmpsl
dec
jnp
or
rolb
pop
and
fsubl
ret
pop
jo
dec
lock
into
and
subb
das
push
lret
dec
jmp
adc
pop
shlb
xor
add
dec
push
mov
xor
in
jb
add
inc
pop
cmp
scas
dec
movsl
je
daa
pop
cmp
mov
push
or
mov
pop
sbb
rorb
je
inc
pop
nop
xchg
fsubrs
push
adc
lock
sub
fs
test
xor
sbb
rcrb
inc
lock
cld
xchg
xlat
sti
jge
sbbl
enter
neg
push
sub
xor
add
enter
adc
xlat
add
repz
movsb
push
jp
sar
test
jo
or
cmp
push
pop
inc
xorb
div
xor
lods
or
ds
lock
scas
movsl
adc
bound
dec
pop
inc
hlt
inc
pop
inc
cmp
jl
flds
fisttpll
jbe
mov
sbb
out
clc
pusha
push
mov
cmpb
pop
and
jl
fdivl
icebp
popl
lret
mov
je
enter
stos
hlt
div
cmp
clc
or
cmp
test
mov
or
mov
mov
mov
adc
rep
popf
push
dec
pop
incl
add
cmp
jl
xor
sbb
lock
gs
loope
jo
ficomps
or
int
push
test
cmp
xchg
push
adc
inc
lcall
xor
rcll
outsl
je
mov
and
fisubrl
push
push
lock
dec
in
enter
cmpsb
adc
loop
lea
push
push
or
sahf
pusha
pusha
out
pop
mov
push
pushf
jg
and
inc
mov
sub
sub
mov
movb
xor
jbe
mov
add
push
push
xchg
loop
add
enter
or
in
mov
mov
or
adc
pop
mov
rorb
xor
sbb
loope
clc
sbb
imul
hlt
sbb
mov
inc
ret
push
out
das
subb
pusha
sbb
stos
push
dec
mov
xchg
stos
aad
adc
fistpl
push
rcrl
push
dec
loope
jmp
and
test
outsl
jge
add
imul
cmp
lock
inc
hlt
sbb
sbb
fptan
add
popa
scas
testl
icebp
jns
dec
push
jns
pop
rorb
sbbb
ficoms
push
sbbl
es
sbb
push
push
pop
xchg
cmp
cld
js
daa
push
lods
je
in
imul
and
push
mov
in
xor
lcall
insl
cmpsb
imul
cmp
pop
mov
jg
vmread
pop
jne
xchg
lock
and
adc
xor
xor
daa
icebp
jns
jns
icebp
repnz
jne
outsb
js
fs
xor
inc
and
sbb
add
pop
shlb
inc
cmp
daa
test
and
pop
jne
pop
in
mov
loop
push
add
cmp
adcb
inc
xor
xchg
mov
xor
pop
mov
lcall
mov
and
mov
xchg
push
enter
ja
xor
cmp
inc
mov
arpl
cmp
or
push
xor
adc
dec
add
fistps
test
inc
les
cmpsl
lea
xchg
mov
inc
in
mov
cmpsb
imul
icebp
dec
sub
fisubrs
mov
push
movb
pop
dec
xchg
leave
xchg
sub
cmp
pop
push
push
test
push
push
rclb
push
outsb
push
mov
inc
mov
xchg
clc
adc
fidivs
rorl
or
dec
lcall
adc
sbb
out
std
jns
xor
inc
jb
andb
push
outsl
shll
push
xor
jo
xor
add
jae
inc
sbb
rclb
cmpsb
imul
inc
lcall
outsb
lock
sahf
out
repnz
cmc
xchg
lock
div
clc
stc
dec
arpl
add
xor
cld
je
jno
testb
dec
and
aaa
xchg
int
aas
daa
rcr
xor
sub
push
inc
test
jmp
jo
icebp
shlb
xchg
or
les
jp
xor
movsl
orl
mov
adc
ss
mov
ss
lcall
popa
jo
imul
adc
xchg
jo
jmp
sbb
cmpsb
or
gs
lock
lcall
jne
push
mov
push
mov
mov
je
cs
popa
mov
ret
lods
les
cmpsb
imul
imul
dec
shll
push
xchg
jb
xor
gs
addr16
mov
arpl
shlb
cwtl
xor
push
sbb
mov
int3
test
cmp
xor
enter
cmp
out
jne
jb
lcall
outsl
arpl
lcall
xchg
lret
js
insb
xchg
push
push
jl
add
inc
pop
sub
into
enter
mov
jne
loopne
mov
jo
sbb
or
xorl
and
push
cmp
inc
notb
sbb
jne
mov
nop
mov
stc
add
pop
push
or
push
ret
clc
inc
test
hlt
call
jne
ret
cmpw
jne
mov
add
cmpl
popa
test
mov
cmp
cmp
xor
cmp
je
adc
divl
dec
loopne
and
je
cmp
ja
push
jge
adc
jae
mov
mov
adc
cmp
movb
fdivrp
jmp
cmp
jb
pop
sbb
or
je
decl
incl
and
int
or
or
adc
add
arpl
dec
test
adc
push
nop
rclb
jle
cmpsb
add
fmul
dec
or
enter
mov
jae
mov
mov
loopne
inc
push
xor
insb
add
adc
push
fsubl
or
mov
in
push
rcl
and
push
orb
inc
lcall
dec
cmpsl
pop
imul
xchg
cmp
cmpsl
icebp
ret
je
cmp
and
dec
jo
daa
iret
rep
push
insb
rclb
adc
inc
dec
je
dec
adc
jne
xor
jns
dec
outsb
shlw
je
jb
outsb
xor
enter
gs
mov
fs
cli
mov
jo
mov
out
outsb
je
jb
out
sahf
out
je
insb
outsl
cmpsb
imul
dec
popa
push
inc
inc
lcall
movb
sti
jp
sbb
js
shrb
lods
popf
jle
or
sbb
popa
lret
sbb
mov
mov
in
xor
push
clc
scas
int3
or
loopne
aaa
adc
cs
cld
movl
mov
jns
push
insb
shlb
loopne
xor
dec
inc
sbb
fucomip
mov
call
jb
movsbl
cmp
je
dec
jmp
xchg
repnz
push
pop
shlb
mov
decl
leave
je
mov
inc
inc
jmp
andb
inc
dec
rclb
pop
push
mov
hlt
lea
test
mov
adc
lcall
mov
push
push
inc
cmp
ljmp
shrd
jmp
lods
fwait
mov
or
add
sub
jmp
scas
lret
in
loopne
push
pop
mov
dec
push
or
xchg
pop
insb
inc
push
cmp
jge
shrb
andl
mov
sti
sub
mov
cmp
xor
mov
in
in
cmp
pop
jb
xor
push
pop
lock
mov
je
ret
adc
inc
jmp
push
jl
loopne
mov
mov
inc
inc
test
jne
pop
mov
adc
into
push
clc
adc
outsl
movsb
lds
lea
gs
inc
push
cmp
iret
repz
ss
imul
sub
jb
je
sbb
inc
imul
inc
imul
xchg
insb
jae
addr16
fmuls
add
sbb
add
pop
mov
pop
scas
mov
in
push
lea
in
shll
inc
imul
outsl
jb
mov
pop
andb
or
jnp
les
mov
xor
push
xor
cli
jnp
sbb
aas
scas
mov
xor
fmulp
leave
clc
decl
mov
mov
out
inc
aam
sbb
dec
int3
lahf
mov
push
adc
sarl
ret
mov
cwtl
jg
aad
jp
and
add
cmp
jbe
mov
xchg
pop
push
jp
pop
lret
or
inc
inc
pop
test
jg
or
xor
inc
sbb
jmp
mov
or
mov
mov
add
movzwl
mov
orl
push
add
cmp
jae
cmp
jb
push
mov
ret
repz
sub
push
mov
andb
hlt
iret
cmc
cmp
jmp
sti
sbb
xor
push
dec
sub
andb
mov
pushf
cmp
jmp
ret
dec
jbe
push
mov
div
outsl
add
outsb
push
sbb
or
push
ror
mov
and
mov
jmp
push
dec
adc
mov
push
sub
insb
lcall
repnz
iret
xchg
imul
push
sub
pop
xchg
aam
xor
dec
daa
pop
dec
enter
cmc
add
mov
mov
int3
add
or
mov
cmp
jo
lahf
in
mov
add
popa
iret
sahf
push
jp
mov
xchg
lods
pusha
popa
sbb
rorb
repz
call
mov
xchg
call
in
push
adcl
mov
sub
incb
call
mov
or
mov
hlt
cli
adc
and
imul
dec
cmpsb
xor
jecxz
lock
inc
pop
push
pop
or
scas
test
and
aam
jbe
jno
mov
mov
adc
adc
and
inc
je
dec
dec
inc
ds
mov
inc
dec
imul
ljmp
add
mov
ficompl
testb
sub
clc
push
cs
or
es
lcall
notb
inc
mov
push
jle
adc
inc
sub
mov
inc
lock
in
jecxz
dec
movsl
es
in
lock
in
inc
imul
daa
loope
loope
xlat
aam
adc
jle
rclb
jbe
mov
adc
push
and
fnstsw
andb
add
add
addb
xor
outsl
cs
xor
push
xor
in
pop
leave
sbbl
imul
aas
enter
pop
clc
clc
pushf
mov
imul
mov
sub
push
lods
sub
sub
repnz
imul
inc
cmpsb
imul
imul
xchg
gs
gs
or
cmp
dec
jae
data16
pop
sbb
jae
dec
pop
les
ss
mov
je
mov
jo
cmp
test
loope
add
fisubl
ret
cmpsb
or
test
jmp
rolb
xchg
pop
aam
inc
ret
push
je
loope
mov
push
inc
shll
imul
outsl
ja
inc
imul
jb
je
adc
xchg
rcrb
test
lret
stc
cltd
mov
pusha
pop
fistpl
mov
dec
cmp
xchg
and
inc
insb
insb
inc
or
cmpsb
bound
push
rorl
popa
je
mov
je
pusha
test
xchg
fs
movsb
xor
mov
stc
maskmovq
notl
popf
stos
stos
sub
aam
cs
mov
cmp
stc
add
iret
sbb
push
cmp
add
pop
cmp
mov
insl
imul
cltd
sbb
mov
mov
pushf
pop
inc
test
mov
std
mov
leave
pop
xchg
mov
inc
sub
mov
xor
mov
jno
fisubrl
pop
cli
jl
or
je
push
inc
lcall
outsl
jo
lcall
cmp
jl
cmc
mov
xor
xchg
repnz
js
daa
pusha
inc
cmp
inc
aam
or
rolb
repz
fiadds
lret
sbb
xchg
clc
inc
jbe
cmpsb
imul
inc
xlat
in
lcall
data16
popf
insb
scas
pop
jnp
out
out
dec
sbb
inc
call
or
push
jns
xor
aaa
pop
lds
add
add
pop
mov
mov
das
push
sub
imul
pusha
xor
add
pop
ret
push
in
rol
call
sub
jnp
inc
outsb
cwtl
shrb
adc
push
fwait
pop
ret
test
add
or
clc
pop
push
mov
jns
push
add
outsb
xchg
mov
xor
out
push
sub
sbb
ret
dec
xchg
add
pop
push
pop
push
push
sbb
jnp
sub
cmp
push
rcll
push
mov
jb
pop
mov
call
or
push
add
pop
lock
mov
cs
popa
jmp
or
pushl
shlb
push
filds
sub
push
pop
mov
mov
inc
fnsave
xor
push
test
loop
add
sahf
mov
addb
add
sbb
mov
mov
sub
je
cmp
loope
mov
loop
pusha
and
data16
jge
data16
jnp
pop
and
daa
add
push
adc
and
mov
push
mov
shll
mov
add
cmp
mov
enter
inc
push
xlat
pop
mov
xlat
jmp
cmp
and
xor
cmp
sarb
add
fs
pop
or
push
push
mov
add
fwait
sbb
jbe
andb
add
sub
add
cmpsb
cltd
adc
imulb
sti
or
adc
mov
dec
and
add
pop
pop
mulb
in
test
clc
add
fimuls
leave
lods
hlt
lcall
xchg
mov
mov
jge
popw
notl
test
xor
sbb
out
add
pop
add
push
and
and
je
aam
movsl
xor
leave
lods
imul
data16
sarl
les
push
push
sub
mov
cld
add
mov
jne
inc
sub
adc
dec
add
js
jge
cmp
jns
xchg
or
es
lahf
xor
stc
cmp
xor
push
cmp
sub
jbe
lods
stc
pop
jg
pop
orl
cmp
js
push
fwait
test
cmp
push
inc
pop
icebp
cs
test
pusha
jb
movsl
std
stos
cltd
jge
mov
push
jb
mov
clc
js
and
aam
push
arpl
or
cmpb
sbb
roll
jbe
mov
push
push
test
push
andb
lea
jle
frstor
shll
lea
test
sahf
rolb
mov
andl
cmp
push
sub
cmpsb
rol
es
shll
or
or
jmp
imul
pushl
fwait
cmpb
jnp
loope
push
aam
adc
jecxz
in
inc
or
cwtl
sti
dec
pop
jl
andb
fnsave
sbb
jbe
stos
jle
fdivrl
sbb
bound
lods
shl
add
enter
sbb
mov
sbb
xor
imul
cmpsb
mov
xchg
dec
shll
bound
adc
add
inc
dec
adc
cmp
mov
sbbb
mov
add
hlt
je
ja
mov
add
test
es
sbb
aaa
in
leave
mov
mov
mov
call
cmp
pusha
fwait
nop
rcrl
ljmp
xor
mull
mov
jne
cmp
je
and
mov
adc
adc
adc
pop
aaa
imul
inc
pop
sub
repz
call
pop
cs
popa
sbb
int3
add
mov
cld
or
sarb
lods
mov
add
inc
and
imul
push
ret
lahf
jo
insb
mov
pop
pusha
fs
and
jmp
mov
and
pop
bound
add
loop
lahf
cmp
add
pop
push
pop
pop
mov
fidivrl
cmp
push
pop
ret
out
inc
jl
sbbb
add
fcomip
adc
jge
jae
loope
fst
adc
add
bound
xchg
adc
pop
or
cmp
sbb
add
mov
xchg
ret
mov
es
jmp
daa
out
out
out
fcmovnu
mov
out
add
outsl
out
lock
dec
iret
imul
sti
add
out
repz
push
mov
les
bound
mov
out
add
insl
dec
adc
mov
pop
push
add
pop
jbe
fstl
fucom
daa
arpl
insl
sub
nop
int
ja
rcr
popa
daa
inc
insl
sbbl
popf
and
outsb
pop
cmpl
add
xchg
shll
dec
fwait
daa
iret
lods
jnp
jo
mov
clc
repnz
fnstsw
mov
pop
sbb
pop
sbb
cmpl
fildll
fildll
insb
repz
push
push
mov
push
out
lahf
das
mov
in
pop
filds
int
daa
jb
fcos
in
pop
aas
std
add
dec
fs
out
out
xchg
lock
das
daa
js
mov
pop
add
jb
push
add
add
rclb
pop
sub
popf
xchg
testl
cmp
inc
push
mov
pop
enter
mov
xor
ja
emms
testl
rorl
mov
dec
jge
mov
xchg
push
pop
lcall
and
out
icebp
inc
jno
call
out
push
pushl
add
pop
andl
mov
cs
in
lods
lods
popf
popf
cmp
xchg
outsb
pop
add
dec
scas
stc
mov
cmpsl
push
ja
jg
mov
inc
out
hlt
scas
hlt
scas
popa
leave
sarl
daa
clc
rcrl
sbbb
ret
out
inc
ret
jbe
mov
sub
stc
jbe
das
dec
out
mov
data16
cmp
fistl
mov
das
pop
out
xor
sbb
cmp
dec
xor
fdivs
repnz
out
dec
xor
dec
in
ja
xlat
pushf
push
sti
je
xor
cmpsl
mov
xchg
in
pop
inc
fninit
xchg
xchg
fisttpl
lods
pop
outsb
ja
loope
subl
xchg
cmp
xor
mov
xchg
xor
sbb
pop
xor
es
add
outsl
jae
stos
push
pop
mov
add
jns
in
lret
and
sub
sub
pop
mov
sub
adc
call
scas
or
pop
sub
push
and
push
add
testl
out
dec
gs
pop
pop
jbe
imul
int3
iret
aaa
pushf
inc
jns
les
sti
mov
ljmp
es
fistps
dec
push
push
push
mov
fisubrs
push
pop
and
pop
dec
add
out
inc
pop
ja
xor
insb
xchg
xlat
dec
std
sahf
cmp
dec
sub
or
subl
cmp
lahf
jmp
add
imul
loope
pop
ja
xchg
loope
dec
cs
sti
xor
jg
mov
dec
cld
es
mov
add
adc
aaa
mov
ss
or
jge
or
xor
ja
and
lock
mov
jle
cld
aas
jg
fcmovne
in
jmp
sub
test
in
xchg
loope
outsb
mov
fdivr
xorb
clc
cmpsb
pop
and
or
sarl
jae
and
push
dec
jns
or
or
out
fnstsw
inc
gs
pusha
sbb
gs
imul
insb
je
gs
add
das
pushl
xor
xor
aas
popa
arpl
outsb
cmp
outsl
data16
cli
fnsave
xchg
pop
rol
iret
mov
mov
into
icebp
adc
enter
pop
jmp
cmp
daa
push
push
dec
cmp
das
or
lods
or
xor
jns
gs
out
aam
mov
pop
push
push
dec
outsl
addr16
lock
clc
sti
inc
dec
inc
pshufw
jae
jne
fs
sub
mov
insb
xor
sbb
in
sbbb
gs
imul
insl
cmp
mov
je
push
push
insb
shr
cmp
outsl
dec
popa
pushf
sbb
push
mov
cwtl
je
mov
push
rorl
fistpl
or
dec
dec
je
jbe
out
shrl
add
dec
or
push
push
pusha
test
inc
addr16
add
or
std
insb
popa
das
xor
xor
inc
arpl
jo
inc
outsb
arpl
xchg
mov
addr16
and
dec
cwtl
int3
ss
jnp
inc
lods
popa
jne
mov
imull
jae
scas
imul
cld
adc
imul
xchg
pop
jo
cmp
imul
pop
das
jbe
insl
jae
mov
mov
jb
pop
shlb
inc
ja
or
cmp
das
sub
pop
in
jo
and
das
xor
scas
lods
cmp
or
cmp
pop
ja
sub
jb
push
sbb
jbe
dec
dec
inc
push
in
push
adc
sub
and
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
and
mov
pusha
mov
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
push
jb
jbe
repnz
popa
je
or
imul
jb
outsb
addr16
jne
jb
in
out
sti
iret
outsb
je
gs
dec
sub
imul
imul
gs
sbb
push
or
or
insb
outsl
jae
ljmp
arpl
je
bound
jae
daa
push
gs
jo
outsb
iret
in
imul
ret
cmp
dec
sbb
inc
outsl
insl
mov
lcall
adc
popa
jb
jo
fwait
jge
inc
jb
sbb
scas
push
outsl
js
testb
dec
data16
insb
repnz
push
sub
mov
push
or
stc
jge
popa
insl
jmp
imul
push
xor
jns
sub
sub
int3
insb
jae
insb
outsb
inc
adc
dec
cmpl
mov
std
adc
je
push
arpl
push
dec
lock
je
inc
outsl
decb
or
insw
dec
das
pop
mov
roll
jbe
arpl
jae
jns
imul
jae
insb
jo
xor
imul
loop
mov
xchg
pop
pop
jbe
outsb
jo
push
insl
repz
outsl
and
popf
pop
pop
inc
js
pusha
xchg
loop
loopne
xchg
and
out
xor
push
adc
insl
mov
insb
sti
mov
xor
inc
pop
push
add
pop
cmp
fcoms
mov
mov
or
jge
mov
sub
movd
ret
adc
jae
nopl
popa
gs
inc
pop
xor
imul
shll
or
cld
xorb
xchg
push
gs
fadds
xchg
pop
xlat
jle
xor
jns
bound
outsl
xchg
sub
scas
sub
imul
insb
insb
push
dec
add
mov
ret
loope
or
pop
out
xchg
clc
iret
cmpsl
mov
sub
push
outsb
push
iret
popa
out
int3
test
adc
js
rcl
mov
inc
adc
dec
sub
inc
inc
push
sub
lock
insb
inc
stc
sub
aad
fcmovu
xchg
inc
ja
dec
push
pop
imul
jo
push
xor
jge
fstpl
cmpsb
jge
add
or
jae
mov
add
jo
or
adc
push
pop
or
and
sub
int
decl
or
push
sbb
or
pop
sbb
adc
adc
push
or
adc
adc
or
inc
add
lock
pushl
lock
add
pop
push
add
gs
pop
and
sbb
decl
or
sbb
cmp
movsb
push
pop
adc
lock
adc
add
int
adc
adc
xor
adc
sbb
and
push
push
or
pop
or
pop
or
call
mov
or
lock
movsb
push
or
or
aaa
pop
cld
pushl
mov
push
push
xor
adc
push
sub
or
adc
push
or
lahf
mov
or
or
lock
insl
sti
mov
mulb
cs
js
dec
pop
and
and
cmp
jg
sbb
adc
push
or
push
xor
adc
push
adc
sub
xlat
sahf
fistps
sub
or
or
adc
push
adc
push
or
adc
lods
or
or
adc
xor
adc
push
or
or
jno
sbb
add
js
or
xor
xor
adc
das
daa
or
es
divl
jnp
sbb
inc
adc
sbb
notb
mov
movsb
xor
sub
pop
insl
jge
cmp
add
addl
or
inc
push
add
es
mov
mov
adc
sbb
dec
or
das
inc
popa
or
test
pop
add
loop
cs
pop
add
mov
fcomps
or
push
rcll
and
jno
mov
xor
sbb
loopne
fildl
or
jae
adc
inc
jg
jg
fdivrs
add
stc
add
mov
mov
fmuls
sbb
push
adc
mov
cmp
inc
sbb
inc
pushf
lock
add
push
push
fildl
or
add
add
pop
hlt
mov
sbb
clc
adc
sbb
add
xor
sub
loopne
adc
call
sbb
daa
iret
dec
or
and
pop
add
outsw
repnz
sbb
imul
jge
jb
inc
decb
add
jo
jl
je,pn
out
sub
push
xor
pop
inc
add
add
xor
call
pop
push
popa
idivb
or
imul
dec
dec
cmp
out
push
push
outsl
push
pop
dec
fdivrp
aad
push
add
out
gs
testl
mov
mov
inc
es
inc
sub
xchg
and
clc
mov
add
add
incl
add
cmpb
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
