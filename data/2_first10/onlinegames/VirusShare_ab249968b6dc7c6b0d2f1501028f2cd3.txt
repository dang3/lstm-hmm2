out
call
in
sub
andb
push
push
push
push
xor
pop
lea
repz
stos
sub
push
stos
stos
pop
xor
jmp
movb
or
loope
loop
cmpsl
jns
cmpsl
jecxz
in
in
cmpsl
jns
xor
cs
call
insb
jmp
push
or
call
pop
mov
xor
push
std
or
add
push
mov
push
push
call
mov
in
mov
cltd
dec
xor
or
mov
lea
push
push
hlt
or
inc
jne
call
fistpll
ss
adc
and
pop
pop
pop
leave
paddd
xchg
add
notb
push
or
sub
pusha
cmp
add
int3
jmp
cmp
sub
mov
inc
es
je
jo
cmpsl
or
pushf
pop
sub
adc
or
pushl
inc
pop
xorl
jmp
adc
mov
cld
sti
out
mov
incl
cld
push
push
push
add
push
jae
fcompl
or
mov
fcomps
push
cli
call
push
mov
in
rorb
adc
add
add
jge
pop
add
push
pop
cmp
shll
mov
adc
dec
outsl
dec
aaa
mov
xor
cmp
je
push
and
cmp
push
clc
cmp
pop
ds
call
pop
lcall
cmpl
xchg
mov
in
setne
cmp
fcompl
imul
adc
clc
mov
push
pop
and
pop
es
loopne
push
push
pop
push
push
fs
jp
iret
mov
pop
loopne
inc
push
adc
movsl
inc
je
push
inc
pop
test
xchg
cmp
push
push
sub
jp
insl
daa
es
push
pop
xorb
shl
push
ret
push
loop
rorl
mov
jge
add
inc
xorb
je
or
insb
loopne
sub
pusha
test
je
es
cltd
loopne
pop
xor
pushf
pop
pop
jecxz
lds
sbb
pop
fs
sub
sub
sbb
mov
leave
in
sbb
sarb
dec
adc
lcall
popf
sbb
rcr
push
and
adc
mov
sar
ret
in
mov
adc
test
je
mov
mov
ror
mov
loop
incl
inc
inc
dec
dec
test
jne
sub
jmp
imul
jb
not
scas
push
add
imul
or
ss
push
sub
mov
dec
xor
loopne
fbld
test
cmpl
jne
dec
push
fwait
push
mov
push
cwtl
jge
mov
cld
fs
andb
daa
push
adc
cmp
lahf
xor
jb
pop
inc
ret
pop
pop
push
push
addr16
add
sub
dec
rorb
inc
jo
or
lea
in
scas
rorl
or
push
push
sar
lcall
pusha
mov
push
pop
push
add
inc
cmp
xchg
inc
jnp
mov
sbb
rcl
jg
lahf
mov
lds
or
je
mov
inc
test
stc
sub
dec
sub
mov
and
mov
fstpt
decl
mov
test
je
enter
push
push
add
pop
mov
out
mov
cli
jne
andb
gs
cmp
je
inc
mov
jmp
push
mov
mov
inc
inc
test
jne
pop
pop
pop
roll
add
je
lods
add
pop
jle
cmp
test
mov
push
cld
push
or
imul
xor
push
add
je
jns
cmpsl
jns
add
add
lcall
push
data16
out
xor
or
mov
xchg
or
dec
test
shr
xchg
int
add
stos
mov
loope
cmp
add
add
scas
cmpsl
je
pop
fnstenv
mov
push
stos
sbb
je
push
add
sub
push
pop
out
int
xor
or
pop
fcomi
leave
std
mov
enter
add
lods
outsb
push
enter
movb
push
jo
push
std
dec
push
mov
cmp
in
sub
or
cmp
movsb
popl
shrl
cmp
imul
lret
rcl
or
mov
jno
sbb
sbb
xchg
xlat
hlt
push
in
repnz
mov
jge
add
cmp
icebp
mov
mov
xor
maskmovq
mull
shrb
pop
negl
fidivrl
pop
push
je
int3
or
cmp
int
adc
sbb
clc
mov
ss
outsb
push
cmc
push
jb
outsl
imull
clc
je
shrb
jae
pop
sti
xor
into
popa
mov
in
push
dec
cmp
add
ret
call
dec
lds
push
push
call
in
rorl
adc
add
lret
add
jmp
sbb
pop
fwait
rclb
push
dec
mov
mov
mov
push
icebp
xor
rcrl
sti
addr16
push
or
imul
sbb
mov
sub
negb
sub
mov
rcr
jbe
and
stos
adc
push
dec
sbb
xor
jl
in
cs
mov
pop
es
out
push
out
call
int
jb
gs
cs
in
mov
jbe
out
inc
out
mov
lock
mov
movl
cmc
mov
dec
cmpsl
adc
and
shll
pop
mov
cmc
sbb
mov
and
fistl
outsl
je
and
add
mov
ret
arpl
movsl
frstor
sub
add
mov
and
add
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
pop
int
and
adc
and
in
cld
repz
xor
adc
sub
iret
repz
dec
pop
push
cwtl
cmpsb
cmp
repz
int3
fsubr
out
dec
sti
divb
mov
xor
dec
pusha
lahf
out
sahf
jb
nop
sahf
mov
xor
repz
into
shlb
ss
add
testb
jge
aaa
sti
bound
outsl
arpl
in
std
pcmpeqb
insl
addr16
xor
xor
push
gs
bound
call
jbe
insb
gs
jae
jae
gs
xor
pop
add
inc
pop
pop
xor
jg
and
pushw
gs
outsl
imul
fs
add
push
sti
idiv
mov
cmp
imul
insl
fs
daa
cmp
outsb
push
xor
xor
mov
adc
dec
in
sub
mov
shll
dec
inc
dec
push
mov
fs
insb
adcl
inc
dec
or
int
push
pop
mov
add
stos
ror
incl
add
add
dec
pop
nop
xchg
xchg
xchg
out
mov
decl
push
pop
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
mov
in
call
insl
outsl
fs
orl
lock
push
inc
xchg
gs
scas
test
xchg
fcomip
notl
mov
gs
dec
aas
imul
gs
mov
push
imul
ja
inc
dec
add
add
pop
jbe
fadd
dec
daa
loopne
push
and
sbb
jp
loope
insb
repz
pop
or
add
insl
xchg
pop
add
sbb
dec
cmp
popa
adc
test
xchg
int
int
dec
mov
lock
fadds
loopne
add
fbld
bound
cmpsl
jns
adc
mov
cs
je
int3
enter
pop
fmul
inc
fwait
loopne
cld
loopne
inc
push
push
punpcklbw
into
dec
cmpsl
stc
stc
inc
shrb
jae
xor
gs
jo
aaa
and
pushw
shlb
jb,pn
insb
outsl
arpl
test
sahf
or
pop
dec
ret
iret
pop
inc
jb,pn
jb
xchg
xlat
add
pop
test
repz
push
subb
into
repz
sbb
shrl
push
add
push
push
mov
mov
pop
dec
out
addr16
hlt
cmp
outsl
test
push
movsb
int
jns
mov
dec
adc
repz
cmp
fs
cmp
repz
ds
fsubr
add
jle
sub
cmp
cmp
repz
inc
dec
pop
push
iret
repz
nop
mov
sahf
cmpsl
stc
cmp
add
sub
jns
out
push
pusha
jle
mov
scas
mov
out
cmp
xor
adc
lock
jl
jns
aam
mov
mov
jo
jns
mov
push
pop
push
push
dec
out
sahf
out
ss
sbb
mov
out
int3
loopne
hlt
sahf
out
out
or
incb
sbb
cs
out
cmp
push
js
mov
add
mov
lock
stc
mov
push
notb
sahf
out
sahf
les
out
jbe
dec
cmp
repz
out
or
push
out
fmulp
repz
rol
scas
lcall
pop
push
inc
sub
iret
repz
repnz
out
xchg
insl
fidivrs
pop
or
and
push
jns
in
into
addb
cld
push
into
push
enter
sahf
out
outsb
mov
xlat
call
pop
dec
outsb
je
jb
gs
mov
int3
pop
add
dec
popa
outsb
xor
push
gs
fs
mov
dec
dec
jo
outsb
push
jb
inc
daa
mov
mov
dec
dec
inc
push
and
incl
push
data16
popa
bound
in
incl
push
inc
push
inc
pop
dec
imul
pop
push
imul
lcall
jne
mov
outsl
outsb
cmp
push
loopne
cmp
adc
mov
cwtl
mov
dec
push
jnp
addb
or
rolb
sub
in
inc
or
adc
and
add
pop
enter
inc
mov
inc
test
push
cmp
pop
mov
xor
and
cmp
pop
and
or
das
add
or
out
aas
jg
or
push
jg
and
xchg
add
mov
adc
incl
inc
adcb
sbb
inc
rcll
sub
inc
orps
xchg
rorb
push
inc
add
xchg
paddusb
aas
iret
das
xor
pop
sti
lcall
xor
and
push
add
outsb
add
add
jae
fidivrl
fists
arpl
je
jne
jb
gs
cmp
inc
mov
sahf
notl
js
push
gs
gs
fcos
jg
push
inc
jb
push
and
ja
or
pop
out
das
out
lret
pushl
and
addr16
xor
sbb
mov
and
in
out
cmp
cmp
call
and
jmp
mov
sbb
rorl
outsl
call
pop
mov
push
lods
adc
je
jo
cmpsl
ss
pusha
jb,pn
xor
arpl
repnz
sbb
and
xchg
mov
test
xchg
jl
cmp
adc
push
pop
dec
insl
loope
lcall
push
gs
gs
inc
xchg
popa
outsl
je
test
jns
out
jo
imul
lods
or
imul
orb
jl
or
pop
pop
or
cmp
dec
daa
inc
jae
or
fsubrs
and
sbb
outsb
aas
pop
cs
movsl
add
jbe
arpl
orl
inc
dec
shr
ja
ja
jb
inc
popa
jb
mov
jns
dec
add
dec
fmull
mov
mov
lea
push
inc
mov
mov
add
les
roll
push
ret
shl
add
push
lea
push
call
and
or
leave
add
dec
lods
rcr
popa
mov
mov
les
add
fnstcw
pop
mov
mov
into
adc
push
mov
cld
outsl
es
lock
lea
push
push
push
xor
jno
pop
adc
enter
test
add
mov
int3
jne
cmp
fs
ret
sti
jg
mov
outsl
cs
out
out
out
fcmovnu
mov
out
ja
push
sub
addl
aas
iret
pop
dec
iret
imul
sbb
repz
push
fwait
les
ljmp
lret
bound
mov
add
insl
dec
adc
in
scas
mov
imul
jbe
fldl
daa
arpl
stc
push
push
insl
insl
sub
mov
loope
ss
push
popa
daa
sbb
popf
and
outsb
push
outsb
clc
adc
mov
out
in
adc
les
mov
daa
jne
std
loope
mov
mov
mov
cld
movhps
mov
pop
ret
add
es
out
xchg
lret
insb
repz
jb
sub
out
lahf
adcl
filds
int
daa
jb
fnstcw
xchg
push
add
dec
fs
out
out
xchg
cmp
xchg
js
mov
pop
add
push
pusha
mov
dec
add
pop
xchg
idiv
jnp
es
sub
insl
call
sbb
jb
push
dec
mov
push
mov
mov
xchg
std
int3
cs
add
out
push
faddp
dec
dec
stc
mov
dec
jge
mov
cmp
mov
pop
pop
mov
push
mov
mov
call
out
push
pop
call
dec
sbb
mov
lods
popf
jno
and
popf
cmp
xchg
fnstcw
add
pop
push
dec
imul
push
ja
jg
call
inc
out
hlt
scas
imul
hlt
mov
mov
loopne
aas
mov
adc
pop
inc
sub
filds
jbe
sub
dec
out
mov
ds
sahf
ret
inc
fistl
mov
pop
pop
out
xor
pop
jae
xor
mov
mov
xor
dec
in
ja
xor
mov
xor
jmp
mov
stc
js
inc
fninit
xchg
xchg
add
pop
loope
subl
jmp
sti
ds
lahf
bound
push
pop
and
push
sub
es
insl
outsb
add
stos
push
pop
mov
add
lret
and
sub
sub
mov
and
jmp
pop
sub
iret
scas
or
push
and
push
sbb
inc
mov
gs
push
loopne
pop
jbe
imul
int3
iret
dec
les
loopne
aaa
xor
es
fistps
push
mov
or
sub
fisubrl
and
xchg
add
out
pop
enter
lock
std
sahf
cmp
dec
sub
or
mov
mov
out
push
push
das
out
lahf
jmp
add
jge
ja
dec
loope
add
lcall
xor
fildll
hlt
sti
xor
pop
xlat
int3
aam
es
dec
cld
es
in
cld
jnp
roll
lret
inc
out
popf
xchg
rcr
xchg
aaa
inc
xchg
or
and
fisubs
ds
mov
jle
pop
bound
mov
leave
in
pop
jmp
mov
xchg
mov
jg
add
push
fildll
call
dec
clc
pushf
pusha
xor
call
jmp
inc
jle
jmp
fcmovbe
insl
in
call
iret
ret
mov
in
jmp
stos
mov
std
ss
jle
lock
xlat
cmp
ja
mov
pop
and
sub
repz
into
and
in
aas
jge
mov
stos
daa
xor
xor
push
xor
ljmp
and
xor
ffree
cli
mov
ret
fadd
jmp
test
in
or
ja
mov
pushl
pop
pop
js
outsb
outsl
ja
add
sar
out
faddp
fisttps
enter
jg
mov
popl
je
or
sbb
inc
inc
dec
iret
int
rcl
sub
and
decl
mov
movsb
iret
mov
mov
lods
push
std
or
data16
mov
push
shl
rcl
lds
test
daa
mov
int3
lods
jae
mov
loopne
das
xor
ss
push
push
push
dec
push
push
push
inc
push
dec
rolb
jg
mov
clc
rcl
mov
enter
iret
cmp
out
sbb
bswap
or
push
jcxz
aad
popa
insl
insb
gs
cli
fs
and
adc
out
paddw
ret
adc
pop
cmp
xor
xor
sub
add
push
out
sti
sub
stos
inc
adc
fcmovnb
dec
mov
leave
ffreep
sub
das
leave
insb
sbb
jo
pop
sbb
and
dec
jbe
dec
mov
in
sbb
pushf
fstpl
push
add
sti
push
push
mov
push
push
rolb
mov
mov
incl
mov
andl
lea
push
push
mov
outsl
decl
push
int3
push
mov
rorl
mov
sub
call
xor
inc
in
push
push
call
lea
cmp
scas
mov
sub
sub
mov
insl
sti
in
add
push
sbb
sub
sub
inc
add
push
out
jle
inc
add
sbb
pushl
mov
dec
mov
in
or
mov
push
xor
lock
or
inc
push
push
mov
mov
jl
sbb
or
push
adc
adc
mov
dec
push
call
xor
cmp
mov
pop
pop
jbe
mov
cmp
pop
out
scas
std
aas
adc
mov
andb
mov
adc
cmp
jle
inc
pop
cmp
pop
jl
push
outsb
rcrb
push
add
andl
das
in
push
sahf
add
js
inc
adc
out
xchg
pop
popf
add
add
outsb
jmp
push
pop
dec
clc
add
sti
push
movsb
push
push
push
push
in
stos
add
je
and
and
add
cmp
adc
pop
sub
aas
sbb
shlb
ret
cmpw
jne
popl
lret
bnd
mov
jl
adc
adc
dec
cmp
adc
inc
daa
sbb
sub
inc
adc
sbb
cs
lret
xor
adc
das
push
ljmp
cld
jbe
movsbl
pop
je
adc
call
js
cmp
pop
jb
push
mov
xchg
jbe
add
pusha
jne
sbb
fsubrs
xor
push
fwait
addl
call
mov
cmp
jg
or
pop
mov
mov
push
sbb
push
fucom
mov
add
or
out
xor
ret
xchg
repnz
sbb
call
push
adc
es
xchg
xor
daa
mov
pop
sbb
lock
add
mov
jl
fsubl
enter
fucom
pop
mov
lock
in
int
rcr
push
push
mov
dec
mov
sbb
mov
repnz
enter
mov
dec
pop
mov
jmp
and
xor
add
cmp
sarl
push
mov
pushl
mov
add
not
xor
xor
inc
cmp
or
sbb
fists
sti
jb
push
es
add
cmp
mov
inc
mov
scas
stos
clc
xchg
cmp
jbe
out
je
fsubrl
add
push
out
push
out
push
jbe
sbb
push
les
adc
cmp
jb
mov
xor
cmp
call
push
ret
add
dec
jle
nop
inc
adc
adc
pop
leave
scas
in
add
mov
inc
xchg
pusha
xor
sbb
or
inc
adc
pop
repnz
jl
inc
adc
inc
adc
leave
pop
nop
nop
inc
adc
push
push
and
and
pusha
in
and
xchg
nop
inc
adc
test
mov
mov
cwtl
jp
inc
lock
and
dec
pop
popf
dec
pop
or
jmp
movsb
fwait
adc
movsb
cmp
pop
jmp
jns
mov
and
and
pushf
imul
sbb
in
xor
and
adc
sarl
daa
jl
std
mov
fstps
jae
xchg
jnp
int
push
aas
add
into
xchg
sbb
xor
xorb
cmpsl
flds
add
push
iret
clc
popf
mov
adc
adc
test
push
int
cmp
jae
cmc
data16
inc
fcmovbe
cmp
clc
outsl
inc
stc
cli
repz
repz
sti
fs
insb
sbb
nop
popf
pop
pusha
movsb
loope
jp
repz
xor
cmp
xchg
in
cmp
orl
jne
xlat
inc
test
sahf
outsb
ja
movsb
lahf
push
cmp
mov
add
jle
jg
jmp
adc
push
mov
cmp
jmp
mov
mov
fidivrs
adc
je
test
jne
mov
adc
incl
mov
push
in
jne
cmpl
fcmovnbe
in
jg
incl
mov
cmp
jne
cmp
inc
clc
push
cmp
cmp
push
mov
push
and
add
add
popa
hlt
add
rcrl
jl
inc
cmp
jl
loopne,pt
cmpl
mov
sub
insb
and
mov
mov
orl
enter
cmpsb
mov
ja
jne
inc
repnz
or
adc
or
arpl
js
cli
sbb
mov
rol
add
add
jbe
scas
or
jbe
shlb
push
xor
pop
fisubl
jp
sub
push
pop
dec
push
clc
pop
mov
xor
and
sub
xor
and
xor
call
lea
inc
call
push
pop
fildll
inc
idiv
sub
xor
lahf
addb
mov
jmp
xor
lock
enter
repnz
inc
adc
nop
inc
adc
add
nop
inc
adc
adc
adc
fwait
inc
adc
xor
incl
xchg
jl
xchg
inc
adc
inc
adc
push
loopne
or
xchg
shrl
mov
ja
xor
lcall
pushf
cmp
ret
add
jl
cmp
jb
pop
jb
lcall
mov
imul
add
andl
mov
and
ljmp
xor
and
add
mov
std
dec
add
dec
adc
inc
ja
pop
xor
adc
fimull
or
call
decl
aas
cmp
jae
incl
lret
shr
add
andb
pop
inc
push
mov
dec
or
test
mov
mov
mov
jne
mov
dec
fs
std
in
pop
mov
pushl
rorb
rolb
or
shll
adc
mov
dec
jne
jo
push
pop
push
cld
jp
xor
cld
pop
push
decl
stos
pop
es
jae
inc
ds
negb
mov
mov
push
mov
mov
not
and
sbb
sti
fldt
adc
repz
add
lea
xor
shl
inc
incb
or
mov
add
push
repnz
not
and
testl
lea
mov
shr
shl
sub
or
repnz
insl
jnp
jbe
mov
pop
or
or
pop
or
decb
and
out
xadd
adc
mov
loopne
data16
lock
and
not
jo
fiadds
push
repz
or
fildl
out
into
mov
shr
or
add
lcall
out
cwtl
decb
adc
add
lea
out
dec
subl
loop
mov
stos
push
or
fistps
fcomip
shlb
push
rol
dec
cld
outsl
push
mov
add
hlt
adc
movb
adc
fmull
rcrl
add
loopne
fiaddl
mov
or
ret
fidivl
push
sbb
into
fiaddl
in
xor
dec
inc
inc
add
pop
sbb
adc
aaa
xor
int3
bound
add
jae
push
pusha
or
bound
add
out
pop
pop
xor
and
les
repz
add
mov
cwtl
subb
push
pop
xchg
and
not
mov
jne
add
pop
pop
scas
testl
sti
add
push
push
hlt
push
imul
out
fmuls
popa
les
movups
push
test
fcom
or
rol
cmpsl
fdivrs
mov
xor
or
fidivl
imul
or
cmp
jno
cld
imul
push
sub
push
insl
pop
dec
cld
pop
push
cld
inc
cld
mov
stos
fidivrs
and
add
outsb
pop
push
mov
out
push
lret
mov
inc
cmp
pop
cwtl
push
push
xor
lret
push
jo
pop
cld
pop
cwtl
sti
and
or
ret
sub
add
or
mov
fistl
ljmp
and
repz
push
pop
bound
shr
ffreep
sbb
or
mov
shlb
clc
incl
or
inc
rclb
sub
add
xor
or
mov
or
out
pop
pop
es
push
loopne
loop
repnz
mov
xor
lock
andl
jo
repz
lahf
add
pop
adc
call
xchg
mov
mov
fsubs
sub
jno
rclb
adc
add
loopne
or
rcrb
int3
dec
fcmovbe
push
mov
pop
and
orl
mov
push
pop
jo
insb
ds
call
subl
jnp
sub
pusha
fbld
iret
lahf
sbb
shl
int
and
sbb
loopne
outsl
ss
rol
pop
inc
enter
aaa
or
insb
stc
ret
mov
shr
and
push
add
inc
adc
xor
xacquire
jo
lds
imul
in
adc
inc
loop
shr
or
sbb
add
cmp
lock
aas
clc
mov
hlt
xor
dec
stos
inc
dec
push
int3
js
lret
sbb
add
adc
mov
lods
sub
cld
mov
sub
jmp
or
xor
and
pop
inc
cmp
ljmp
test
in
xor
xchg
scas
sbb
call
divb
adc
or
pop
aas
icebp
andb
popa
popf
insl
adc
jg
outsb
fiaddl
xor
dec
enter
std
mov
call
cmpsb
std
imul
shll
cmp
test
subw
loop
fmuls
pop
cmp
mov
lock
sbb
movsb
mov
jo
mov
out
inc
mov
sbb
fwait
sub
out
sbb
add
xor
lock
daa
mov
adcw
fimuls
aad
out
or
ffreep
jmp
adc
xor
leave
roll
movsb
test
mov
or
cmpsb
cmp
aaa
int
cmp
cmp
rcl
fnstenv
icebp
out
fistpll
push
in
mov
imul
out
insb
cmpsb
in
rcll
pop
call
rclb
push
shrl
jnp
je
ljmp
sti
push
cli
xor
rclb
push
shlb
repnz
or
ret
add
cmp
ret
xor
clc
add
sbb
test
sub
or
in
pop
or
repnz
and
adc
lock
stc
rcrl
cld
out
or
jecxz
xor
inc
je
fidivrs
pop
lcall
pop
sbb
rcrl
sbb
lock
int3
or
sti
popa
out
out
out
mov
cmp
sarb
int
jl
jge
out
lcall
out
out
mov
lock
jmp
in
rcrl
test
ret
sbb
ficompl
or
mov
lods
call
outsl
jecxz
hlt
lret
and
fwait
add
aad
mov
loopne
sub
jecxz
hlt
mov
and
ret
inc
aam
adc
add
out
pop
mov
fyl2xp1
xor
hlt
out
mov
ljmp
cmp
out
push
inc
or
fcomp
or
xor
jle
lret
mov
pslld
ret
aas
sbb
sbb
xchg
roll
bnd
sbb
lcall
pop
add
pop
int3
fisubrl
push
stos
mov
data16
outsb
xchg
mov
addr16
lock
pop
test
push
mov
mov
cld
add
jg
cli
pop
cmp
jl
push
pop
sub
push
push
push
lahf
js
call
int
mov
aas
ret
movzbl
and
xlat
mov
mov
fcmovu
lea
push
lahf
test
icebp
pop
faddl
iret
pop
pop
mov
mov
imul
mov
or
sbb
jbe
mov
jne
pop
jl
aam
pop
xor
push
cmp
ficomps
jne
shr
cmp
je
xor
in
pushl
fdivs
mov
sub
jne
inc
cmp
sbb
cmp
jmp
jmp
xor
sub
add
mov
push
pop
jl
fmull
ret
cmp
je
adc
pushf
sub
imulb
je
ficompl
shrb
ret
sub
cmp
jl
or
sbb
and
push
sub
or
stc
stc
shll
add
or
sub
rorl
pop
mov
lahf
out
mov
orb
add
cmp
mov
dec
or
jle
lea
roll
adc
mov
ror
ds
sub
ficoms
data16
add
rol
std
stos
xchg
lret
add
stos
pop
pop
lods
or
out
pop
mov
stc
ljmp
adc
test
inc
enter
cltd
sbb
sub
push
push
js
cmp
dec
orb
push
out
inc
dec
mov
mov
call
mov
push
jbe
lea
pushl
jge
cld
in
adcb
je
clc
dec
cmp
jb
jmp
imul
test
pop
pop
sbb
call
cmp
orb
add
mov
add
or
cmpsb
xor
push
pop
int3
rolb
dec
pop
or
fsubr
jae
xor
push
push
movsl
add
and
data16
jl
test
fdivrl
out
add
call
lods
ljmp
lock
out
push
pop
bnd
testb
movsl
loopne
jo
lock
pushf
inc
mov
fnsave
pushf
cli
or
mov
push
lods
out
ficoms
mov
add
mov
pop
mov
nop
xchg
push
mov
shll
push
enter
les
scas
into
shll
adc
or
push
mov
mov
fs
pop
insb
cmp
adc
lods
mov
push
push
or
dec
out
push
mov
push
lock
icebp
inc
repnz
mov
push
shld
cmpsb
insb
xor
fidivrl
or
push
push
dec
push
or
push
aad
sahf
inc
mov
rcrb
test
inc
jo
xchg
inc
adc
fstps
add
add
push
inc
adc
cli
lods
inc
les
repnz
movsb
fwait
mov
inc
call
mov
pop
mov
cmp
stos
inc
jbe
es
jp
imul
lea
mov
dec
sbb
inc
popf
clc
xchg
push
f2xm1
cld
pop
mov
out
pusha
popa
jp
and
sub
add
push
das
sub
jle
dec
je
lds
js
stos
pushf
je
test
subb
mov
inc
dec
and
setns
push
cmp
inc
pushf
icebp
xchg
pop
js
push
push
add
add
push
out
loopne
add
xor
push
add
je
out
orb
stos
pusha
push
mov
adc
cwtl
lock
cmp
dec
shrb
jle
lock
hlt
mov
imul
push
call
sbb
pusha
dec
negb
decl
hlt
xor
inc
inc
inc
inc
mov
cmp
pop
or
sub
cmp
enter
stos
add
sbb
push
in
or
mov
movhlps
sbb
fbld
inc
loopne
lock
sbb
sbb
push
cltd
cld
pop
jb
idivl
dec
les
lds
jp
push
push
adc
and
fdivrl
sub
inc
cmp
je
dec
dec
clc
xorb
cmp
push
sbb
outsb
inc
add
cmp
adc
or
and
pushf
mov
cmpsb
dec
adc
or
call
push
insb
aam
pop
imul
call
fsubs
out
ja
movl
mov
pop
pop
stos
int
xchg
cmc
cltd
xchg
scas
test
lods
jmp
loop
add
cmp
fisubrl
mov
cs
gs
test
pop
jno
xchg
push
mov
lea
mov
aaa
cmp
jne
add
notb
xchg
das
and
cmp
sbb
outsb
clc
inc
push
mov
jb
loop
sbb
xor
adc
das
dec
testl
add
call
pop
adc
or
or
movl
jle
inc
call
push
outsb
or
push
add
pop
mul
xchg
icebp
cmp
push
dec
sub
dec
adc
cmp
decl
inc
add
je
cmp
jne
push
cwtl
into
movsl
stos
and
sbb
es
aam
fists
and
jbe
push
pusha
xchg
in
sarb
call
mul
fdivrl
cmc
fwait
push
hlt
add
xor
inc
cmp
jae
mov
pop
int
lods
jnp
pop
cmp
fdiv
push
outsb
mov
dec
sub
inc
sahf
adc
ror
push
jmp
lds
nop
inc
push
add
inc
insb
add
das
xor
fisttpl
std
add
pusha
add
pop
mov
insb
add
std
loopnew
jge
push
push
sbb
pop
andb
pop
add
loopne
push
mov
mov
jg
mov
cmp
mov
push
cwtl
push
orb
mov
add
dec
mov
mov
push
int3
jae
mov
call
cmc
cmpl
ffreep
or
pop
jae
or
or
mov
inc
pop
cwtl
xchg
rcrb
std
pop
negb
add
xor
fcoml
mov
cmp
inc
mov
sbb
mov
sbb
or
fdivr
fdivrl
mov
mov
ja
cmpl
cmpl
scas
push
jno
in
mov
bound
cmp
je
loopne
push
or
fldcw
sbb
or
xor
xchg
sbb
adc
in
sbb
pop
adc
push
pop
call
sarl
call
mov
add
jb
cwtl
mov
or
jmp
das
jp
jno
dec
out
cld
adc
ja
outsl
push
jmp
lahf
mov
mov
insb
loope
adc
mov
call
xor
lods
push
push
cld
cmp
push
sbb
sti
sbb
push
fistpll
insb
sbb
lcall
xorb
nop
movb
int
fldt
push
insl
mov
mov
insb
ss
push
mov
mov
mov
mov
lcall
gs
stos
fwait
in
jnp
inc
mov
mov
int
imul
jo
insb
aam
imul
xlat
push
fsubrs
inc
fnstenv
fmul
loopne
loope
fcomi
mov
loop
popa
mov
je
out
jmp
jmp
insl
cmpsb
imul
cmpsl
cltd
je
rol
mov
fldcw
ret
cmp
les
jns
enter
lret
cmp
fsts
xchg
cwtl
cmp
lcall
fnstcw
insl
repz
mov
inc
imul
xor
test
lods
test
divl
jl
call
adc
dec
idivl
sbb
test
adc
in
jle
pop
adc
push
lea
inc
pusha
sbb
int3
push
jnp
lcall
xor
sub
in
ds
jmp
out
sub
inc
ds
dec
jge
xchg
in
xor
lcall
jne
mov
lcall
rcrl
enter
shlb
incb
out
rclb
imul
rcl
sub
push
test
pusha
sti
movsb
sarl
xor
and
es
movsl
push
adc
pushf
imul
fmuls
sbb
pop
cli
xchg
loopne
test
imul
nop
jmp
test
mov
cwtl
rorl
sbb
test
cli
add
cmp
dec
push
mov
les
pusha
nop
in
mulb
test
inc
arpl
leave
repz
mov
fnstsw
fnsave
dec
mov
loop
cmpsl
leave
sbb
mov
push
add
sub
fistpl
adc
adc
mov
mov
std
push
dec
lock
js
mulb
inc
fwait
in
sbb
xchg
insb
mov
fistpl
cmp
cmp
inc
sbb
push
cs
push
orb
adc
lods
inc
mov
ss
ret
decl
or
adc
adc
test
aas
or
call
shrl
incl
lock
dec
int
mov
push
jnp
sbb
jae
shlb
mov
xchg
sbb
cmp
pop
push
and
fistpll
faddp
mov
cmpsb
and
mov
mov
cmp
xor
add
sub
outsb
into
test
in
ret
push
push
adc
lret
cld
rcll
cwtl
cmpl
call
js
sbb
fs
jmp
or
iret
xlat
movl
pushf
clc
std
push
jp
pushf
out
cmpsb
push
sub
jp
push
xor
mov
sbb
jnp
cld
sbb
rclb
mov
or
pusha
add
jns
cmp
pop
mov
jae
push
inc
sbb
jns
pop
pop
inc
push
push
inc
sub
fnstcw
das
movsb
push
xchg
pusha
and
xchg
xchg
inc
stos
and
pop
add
int3
push
sub
mov
or
dec
cld
mul
xor
call
jmp
sbb
and
ficomps
mov
or
cmpb
call
scas
popa
ret
jb
jmp
andl
in
push
lock
shll
mov
dec
mov
mov
mov
adc
xchg
repnz
sub
test
movb
push
int
dec
roll
loopne
insb
popa
xor
dec
push
imul
fsubs
ja
fildl
mov
int
fstp
jae
jae
pop
loopne
xor
xor
pop
cli
inc
int
shrl
cld
std
insl
gs
cmp
imul
mov
mov
mov
adc
push
outsb
pop
imul
int
mov
mov
je
dec
in
js
data16
jl
je
push
xor
or
pop
inc
jb
stos
hlt
sbb
icebp
repnz
loopne
push
push
xchg
lea
repz
loop
outsl
je
inc
movsl
push
jb
test
popf
xchg
xchg
cld
mov
push
ficompl
mov
hlt
dec
mov
sub
xor
sbb
dec
loope
sub
jne
je
jmp
mov
andb
lock
or
repz
jb
outsb
je
imul
out
ja
jl
data16
bnd
xor
iret
repz
fs
insb
je
jp
lods
cmp
xchg
xor
xchg
mov
jne
sub
cmpsb
inc
cmp
or
je
mov
inc
in
in
mov
or
sub
repnz
push
aad
push
and
xor
fdivrs
in
sahf
jmp
mov
adc
pop
shlb
movsb
popf
or
push
cmc
push
cmp
jb
ds
or
xchg
adc
jmp
sub
adc
aad
xchg
fcoml
xor
clc
sub
cmp
jge
cmp
inc
mov
inc
and
jl
lods
xchg
fwait
scas
or
push
adc
xchg
in
jae
test
icebp
enter
and
push
push
pop
aaa
cwtl
je
xchg
dec
lock
jbe
lahf
push
ds
and
in
push
adc
je
sbb
mov
ss
stos
pusha
push
mov
fs
xor
push
call
push
pop
bound
cmpsb
test
inc
stos
aas
je
imul
es
mov
iret
repz
mov
mov
mov
mov
jo
jns
cmpsl
cs
jb
mov
into
enter
iret
shrl
leave
lret
int3
int
repz
mov
into
iret
rcl
shl
sahf
neg
shll
aam
aad
xlat
outsb
fsub
call
fucomi
fsubrl
sahf
cmpsl
stc
mov
jae
loop
jns
idivb
in
ds
call
jmp
popa
in
in
ss
lahf
out
out
fs
push
shrb
and
out
inc
inc
cmp
dec
mov
or
sub
pop
cmp
fadds
jae
stos
push
std
jl
mov
or
mov
lock
xchg
mov
mov
les
inc
push
and
lcall
mov
cwtl
imul
adc
rorl
les
xor
sbbb
add
jbe
fisubrs
dec
add
inc
sbb
sub
mov
jmp
addl
or
pushf
pushl
push
test
jmp
inc
adc
rcrl
mov
xchg
xor
mov
clc
call
test
and
dec
mov
jle
jge
and
push
stos
adc
and
les
jno
call
push
sbb
cmp
lods
push
pop
imul
xlat
and
repz
mov
imul
push
cli
mov
aad
inc
pop
aam
mov
cltd
idiv
mov
fsubr
mov
jp
shl
jne
adc
stos
mov
call
sbb
loope
mov
jb
and
stos
int3
xchg
scas
test
mov
mov
sub
shlb
sar
mov
and
add
stc
xor
cmp
cmp
in
jg
jnp
aad
cli
fisubl
mov
cmp
sub
jmp
and
or
pushf
out
mov
push
orb
sbb
sbb
lds
dec
fs
call
sub
subl
cmpb
mov
pop
push
push
push
or
int3
dec
push
push
lock
lret
ror
mov
pusha
inc
jecxz
pushf
xor
loopne
adc
sbb
mov
mov
pushf
mov
push
jmp
cmc
neg
xor
push
outsb
mov
pushl
lret
fiadds
ret
inc
sti
add
js
testb
mov
scas
in
testb
mov
inc
loope
ret
daa
push
sub
jg
clc
or
add
sbb
xadd
add
cmp
cmp
and
out
add
mov
out
cli
sbb
test
jmp
rcl
lret
sti
ud0
movsb
loop
and
rol
or
mov
pushf
clc
clc
xchg
push
pushf
add
dec
fisubrl
sti
addr16
adc
jne
mov
insl
je
mov
ds
jmp
or
jle
rcl
outsb
adc
xor
jmp
in
addr16
aad
test
fcompl
jl
adc
call
call
pushf
cmpsb
shrb
aaa
xchg
shl
stos
xor
shl
sbb
movsb
or
jbe
cs
inc
and
xor
xor
cld
jbe
dec
jo
add
cmp
pushf
call
cmp
movsb
lods
shlb
push
into
adc
pop
in
outsl
inc
xor
aam
cmp
dec
shl
or
pop
add
add
stc
rdtsc
setp
push
add
clc
lahf
add
mov
rcr
dec
aaa
fwait
xor
xor
mov
and
xor
inc
pushf
add
push
xor
pop
jne
or
xor
push
pop
jge
nop
ret
pop
cmc
mov
mov
nop
adc
inc
adc
cmpsb
daa
push
imul
pop
ret
sub
out
inc
rorb
xor
rep
je
lea
cmp
and
xchg
imulb
inc
pop
sbb
adc
popf
lret
xlat
xlat
hlt
cli
sub
pop
adc
cli
call
or
jmp
fwait
js
xchg
testl
repnz
std
cmc
sti
push
hlt
sti
fwait
sub
xchg
call
mov
or
push
add
or
cmp
cmp
jge
outsl
aas
hlt
sub
outsb
and
andl
push
adc
or
add
loopne
ret
mov
sbb
sbb
xor
inc
ja
xor
insb
fildll
fistpll
ds
clc
sbb
add
mov
push
lds
add
addr16
insb
add
inc
pop
push
ljmp
movsb
fisttps
cmpsl
call
jle
cs
insb
or
or
jae
nop
out
mov
cli
cmp
test
mov
add
dec
stos
cli
add
add
ds
mov
idivl
sahf
or
push
mov
test
and
aas
and
pop
xor
lods
ret
adc
rolb
jae
imul
or
jle
push
add
scas
jo
push
cmpsl
sahf
test
incb
push
into
ret
pop
cmp
jne
sti
mov
lret
daa
or
pop
iret
push
addr16
jg
or
decl
jmp
and
xor
js
fwait
sub
cmp
sbb
pop
and
inc
jnp
negl
sub
adc
pop
or
and
and
sbb
hlt
fcoml
and
fcoms
rcrb
lcall
pop
ret
imul
xor
sub
mov
push
mov
mov
mov
inc
fs
xchg
out
call
and
add
je
jo
pop
xor
call
aas
xchg
jmp
filds
sub
jmp
aas
lds
inc
andb
push
sbb
jnp
dec
push
add
add
xlat
clc
inc
add
inc
jl
and
int
subb
jns
jno
pop
fisubs
push
cld
xchg
sbb
push
mov
mov
push
filds
push
xorb
adc
pop
mov
sbb
repnz
ficomps
sub
add
xchg
mov
jl
mov
mov
sbbb
jo
aaa
inc
mov
push
pop
mov
test
fistpl
call
mov
sbb
mov
pop
test
out
rorb
mov
enter
inc
mov
dec
push
int3
test
ja
stc
std
mov
sbb
mov
jbe
imul
je
mov
or
icebp
sbb
arpl
lret
jne
lcall
ja
cmp
fsubs
pushf
addr16
jne
push
inc
popf
xchg
push
cmp
and
sahf
shrb
mov
dec
sbb
sbb
je
dec
add
popf
add
xchg
outsb
les
pop
jmp
lds
dec
arpl
pop
hlt
xchg
lret
mov
cmp
xor
jmp
mov
add
mov
aas
fmull
outsl
loope
outsb
andl
and
push
inc
inc
test
lods
lcall
mov
outsl
outsb
insl
and
xor
cld
lcall
gs
scas
mov
js
jmp
add
popl
lret
movsl
test
sbb
data16
mov
cmp
and
mov
adc
add
pop
cld
loop
jne
jmp
push
jns
mov
mov
loope
fisttpll
push
pop
ret
jl
and
jmp
mov
xchg
and
inc
adc
pop
mov
lock
or
fnsave
jns
push
sbb
call
sbb
ljmp
cmpsl
xlat
xchg
adc
cli
pusha
add
dec
aas
je
pushf
push
mov
cmp
and
xor
cmc
sub
in
cmp
je
mov
adc
or
outsl
mov
add
call
fdivrs
loopne
mov
push
xchg
push
cmp
jne
push
insb
je
xchg
push
or
sbb
or
mov
dec
and
jmp
inc
jl
shrb
xchg
cmpsb
lock
push
inc
testl
repnz
movsb
pop
sbb
rclb
pop
cs
cmpsl
cmp
test
cmpsb
xor
les
inc
mov
stos
adc
shll
aam
fmull
popa
add
mov
sbb
insb
sub
pop
add
int
sub
je
sbb
jge
mov
inc
cmp
add
adc
mov
aam
popf
and
gs
lcall
test
fdivrl
outsb
imul
iret
mov
dec
cmp
test
cltd
mov
inc
lock
and
mov
clc
and
testb
add
cltd
mov
idivl
jle
arpl
cmp
cs
stos
dec
and
jle
arpl
add
pop
inc
repnz
sbbb
add
sub
insb
cmp
push
push
roll
int3
cmpb
sub
adc
push
lret
jb
jecxz
adc
sub
xor
cli
push
xor
push
ficoml
dec
lcall
inc
push
add
insb
sbb
addr16
insb
xor
shll
test
stos
shrl
dec
mov
imul
gs
mov
imul
mov
fisubs
gs
mov
jl
lods
lods
mov
lcall
lcall
jno
gs
testb
inc
test
mov
mov
mov
test
pushf
out
sahf
lock
shrl
xchg
inc
stos
cwtl
js
lcall
je
inc
out
out
jns
fnstsw
je
mov
jecxz
ret
jnp
in
out
out
mov
cmp
mov
jb
mov
divl
out
push
mov
mov
mov
mov
mov
push
and
push
in
xchg
lret
in
in
mov
loopne
push
sub
mov
xchg
jg
std
cmp
icebp
sub
add
ret
insb
add
sbb
cmpsl
and
pop
cmc
adc
bound
pop
push
sbb
push
push
xchg
aam
push
mov
mov
pop
je
lea
push
push
mov
or
push
adc
rol
add
sti
push
scas
pop
lret
addr16
and
adc
sub
pusha
sbbb
shlb
imul
sub
push
daa
xchg
mov
repz
roll
push
push
sub
je
mov
xor
sbb
cltd
jo
fcoml
xchg
lcall
add
xor
loope
xchg
outsb
cmc
or
pop
sub
mov
xchg
es
pop
mov
jge
pushf
sub
fiaddl
cmpsl
jle
pop
add
or
cld
add
lock
add
adc
push
shrl
dec
out
sbb
mov
adc
xlat
mov
and
call
push
jmp
ss
addb
hlt
je
mov
sahf
inc
popl
lds
popa
jb
mov
inc
jecxz
mov
or
inc
fstpl
add
cmp
jge
jbe
out
je
sbb
push
push
pop
sub
loop
xor
jb
js
lock
sbb
cmpl
popl
std
clc
lods
jne
jbe
add
pop
pushf
xor
sub
arpl
add
jbe
adcl
cmp
jnp
jae
pop
push
ljmp
fmuls
cmp
call
inc
mov
mov
gs
push
push
imul
aas
dec
mov
sbb
call
mov
repnz
js
gs
outsl
imul
mov
cli
cld
subb
jmp
lret
xchg
xor
mov
xchg
shlb
shll
cmp
sub
jno
xor
pop
jb
and
or
jbe
jne
inc
or
std
add
repz
pop
inc
adc
fcomps
fmull
xchg
je
sahf
xchg
adc
outsb
mov
or
pop
je
and
or
or
je
rclb
adc
dec
cmp
je
dec
dec
in
cld
or
je
sbb
aaa
mov
push
adc
or
jle
adc
dec
aaa
pop
jg
mov
mov
call
sub
dec
and
jmp
jg
dec
lret
incb
jne
jns
push
pop
pop
add
in
in
push
lcall
lcall
je
imul
cmp
insb
cmc
negb
imul
iret
push
enter
sti
cld
stos
mov
jmp
sbb
movsl
fs
cld
mov
xorb
popa
mov
add
pop
add
and
cmp
mov
fnstsw
sbb
ret
jmp
dec
jl
loopne
jl
adc
mov
pop
push
or
mov
mov
icebp
push
fisttpl
mov
pop
push
rolb
outsl
mov
repz
nop
add
or
enter
mov
add
rcrl
mov
cmpl
andl
and
push
clc
adc
push
mov
andb
add
push
mov
mov
sbb
xor
sbb
dec
adc
cmp
das
setle
stos
xlat
daa
jmp
insb
jne
cmp
jae
call
mov
mov
lea
mov
into
push
dec
pop
sub
sbbl
pop
or
aad
xor
dec
push
les
popa
arpl
xor
inc
shrl
xor
cmpsb
jmp
imul
lcall
add
imul
popa
arpl
int
shrl
gs
shll
imul
es
rcl
xor
mov
je
xor
dec
imul
lcall
jns
shl
iret
in
out
call
mov
orb
sub
mov
jb
dec
shll
jp
outsb
fsubrp
adc
loopne
je
add
dec
jne
repnz
add
sbb
aam
adc
pushf
jl
jmp
movsb
inc
movsb
std
lock
js
push
cmp
mov
push
icebp
pop
test
icebp
and
push
push
lahf
lock
cld
cld
pop
cs
xchg
sbb
fdivrl
fmul
out
imull
pop
cmpl
incb
add
lods
xor
inc
add
pushf
pop
cmp
cli
pop
iret
jae
push
dec
addr16
jb
sahf
xchg
test
and
cld
loope
cmp
mov
fsubrs
add
cld
xorb
sbb
mov
shlb
negl
add
xchg
icebp
insl
pop
sub
push
xchg
cmp
cmp
adc
push
imul
xor
faddl
daa
ss
fcoml
stos
push
sub
push
inc
cmp
dec
clc
cmpsb
mov
push
jmp
and
mov
xlat
mov
inc
fdivl
inc
jnp
aas
push
jle
mov
mov
stc
out
inc
push
incl
out
call
mov
push
pop
es
clc
clc
dec
adc
and
or
xor
xor
sarb
add
jo
jp
shlb
mov
pusha
fdivr
shlb
mov
andl
add
add
icebp
cmp
sbbb
call
sbb
or
push
mov
scas
inc
rcrl
call
repz
roll
push
dec
movsl
xor
and
std
jg
jl
xchg
std
cld
in
inc
in
leave
dec
imul
imul
jo
popa
jns
cmp
repz
outsl
addr16
or
iret
imul
mov
and
and
loopne
adcl
incb
lock
in
pop
popa
push
pusha
jge
scas
jae
xor
shll
dec
es
xor
jne
and
cmpsl
pop
jl
sti
cld
std
jb
in
loopne
jb
sbb
xchg
dec
push
in
sahf
addr16
loopne
loopne
loop
repz
jecxz
pushf
imul
cmp
jae
dec
or
iret
repz
jne
es
cmp
repz
lret
enter
stos
repz
dec
shll
dec
xchg
inc
ja
es
shll
mov
bound
cmpsl
pop
pop
jb
repnz
pusha
push
leave
sbbl
test
mov
dec
push
adc
out
xchg
rorb
pushf
lcall
or
ja
cmp
bound
mov
and
fidivs
incl
push
dec
fs
add
call
jo
lods
test
jbe
movl
cmc
add
enter
mov
sbbb
xchg
jl
jns
sub
jnp
dec
jnp
sbb
rorl
sub
jp
jne
mov
sub
cmp
fdivrl
bound
sub
or
or
mov
adc
or
clc
jne
add
fsubrl
inc
movsb
pop
add
dec
cmc
sub
rclb
ficomps
in
lcall
pop
andb
gs
clc
cmc
mov
sub
test
mov
cmc
push
dec
sti
or
mov
out
in
push
fadd
movl
push
aas
xchg
xor
loopne
and
pop
ret
aaa
inc
jb
jnp
jmp
cwtl
cmp
cmpsb
jb
push
fadds
jmp
and
fwait
add
popa
in
and
aas
movsl
ss
cmpb
pop
test
pop
push
popa
hlt
pushl
iret
sub
test
jle
mov
sbb
incl
push
shl
add
add
jno
ja
pushf
mov
and
sbb
iret
dec
push
dec
and
movsb
push
or
pop
cmp
das
pusha
jb
cmp
in
and
sbb
and
adc
icebp
add
adc
daa
les
pop
add
lret
test
add
stos
cmp
pop
fnstenv
je
lret
jo
call
or
loopne
inc
loop
movsl
lret
clc
fdivr
add
dec
cmc
cld
andb
dec
aam
jb
dec
arpl
mov
cmp
lcall
lds
dec
push
pushl
ret
xchg
fisubs
sbb
rcll
insb
dec
fs
add
lods
in
push
jb
mov
pop
in
push
lods
or
and
and
sbb
pop
mov
jnp
cmp
or
punpcklbw
out
stc
dec
sbb
cmp
sahf
cmc
pop
outsl
imul
fucomp
test
mov
shrb
mov
jbe
pop
cs
lds
jbe
dec
leave
js
rorl
or
push
xchg
adc
or
sub
xor
into
shlb
ljmp
push
cmp
lods
fmuls
mov
dec
xchg
andl
lret
mov
sbb
cmp
and
pop
jnp
sbb
movsl
adc
sbb
ds
lcall
lock
mov
pop
mov
ret
dec
jle
dec
fimull
push
mov
in
cmc
lods
jne
gs
insb
jg
ret
dec
es
pop
and
push
aas
inc
xor
mov
dec
pop
mov
je
in
push
mov
cmp
add
jecxz
mov
cld
cli
cmp
imul
mov
jecxz
fistpll
cwtl
dec
xorb
xor
shlb
push
adc
std
and
shll
pop
mov
mov
xor
popf
movsb
call
lods
push
mov
hlt
test
mov
rorb
aas
int
mov
jbe
mov
mov
fbstp
mov
xor
js
into
jae
add
imul
pop
lcall
jae
pop
shll
cs
jb
arpl
xor
push
arpl
aaa
and
outsw
insl
jne
and
xchg
ficompl
iret
stos
mov
pop
push
sbb
decb
add
in
into
test
cmp
fcmovbe
mov
fcomip
out
int3
jnp
outsl
test
mov
add
cs
dec
pusha
pop
aaa
mov
jmp
and
insb
in
ds
jmp
mov
in
adc
push
jmp
push
cltd
testl
and
int3
jo
lods
adc
push
xor
pop
sbb
mov
push
xor
mov
jecxz
cmp
addb
mov
xchg
ljmp
and
and
add
add
dec
adc
test
mov
jge
push
movsl
movsb
mov
lret
fwait
jne
ret
mov
pop
dec
add
jnp
or
int3
daa
stc
loopne
pop
lahf
add
push
cmc
je
test
push
bound
cmp
adc
pop
decb
inc
movzbl
daa
scas
xchg
cmp
clc
div
mov
loope
popf
and
and
add
push
repz
andl
mov
mov
mov
lcall
insb
cmpsb
imul
push
fs
insb
jp
je
xchg
add
xor
push
lea
jb
dec
outsb
arpl
shll
das
add
pop
dec
loop
leave
pop
add
push
cwtl
ror
leave
xchg
xchg
xchg
xchg
rcll
clc
push
int3
dec
cmp
jne
sti
insb
xchg
out
push
cmp
xchg
xchg
xchg
xchg
xchg
sbb
popa
inc
xlat
and
loope
aaa
call
stc
faddl
jb
add
sbb
cwtl
xchg
xchg
sahf
sub
adc
add
push
and
jle
in
xor
mov
push
mov
push
xchg
push
cmp
gs
movl
adc
cmp
push
aad
in
fimuls
cmp
jne
rol
fwait
int3
mov
hlt
sub
and
lock
or
cmp
mov
cmpsb
inc
and
sub
dec
mov
push
lea
lods
cmpl
loopne
add
push
call
sbb
and
or
test
add
enter
pop
add
push
jmp
ficoml
push
shll
data16
ja
lcall
imul
lcall
push
xor
shll
jae
daa
iret
jae
push
fisubrl
insb
dec
mov
outsl
push
popa
lcall
dec
push
dec
inc
lcall
and
in
fistpl
add
mov
in
mov
or
call
pop
xor
add
jp
and
mov
fldl
or
cmp
es
inc
jns
ficompl
imul
and
mov
test
in
push
loop
and
and
xchg
daa
mov
mov
repz
int3
les
outsl
test
cli
or
mov
jl
xor
adc
shrb
mov
pop
dec
or
mov
or
loope
sbb
repz
rep
jecxz
in
scas
xor
dec
in
js
mov
jnp
add
fstps
or
add
add
repnz
std
fwait
add
std
int
adc
or
and
out
sahf
out
popa
and
jb
out
sahf
and
and
data16
mov
inc
sub
sub
cmp
dec
repz
pop
inc
iret
inc
imul
int
imul
mov
inc
pusha
movsb
jns
inc
sub
dec
sub
out
fs
stos
out
push
add
pop
dec
mov
inc
popa
and
sarl
bound
arpl
and
gs
movsl
sar
popl
xchg
inc
sbbb
inc
test
test
xchg
mov
es
mov
roll
stos
dec
pusha
orb
cmpsl
mov
es
imul
jb
inc
cmpsb
jns
rolb
out
ja
ret
in
enter
inc
cmp
lret
repnz
loope
pusha
rcll
and
sbb
mov
es
xlat
out
out
call
movsb
jns
imul
cltd
pusha
in
or
out
lock
sbb
xor
lahf
mov
lahf
add
inc
jl
addl
in
dec
or
sub
in
in
push
and
and
and
xchg
fxam
in
and
or
xchg
xchg
sub
sub
aad
out
xor
inc
inc
bound
and
mov
jnp
inc
inc
inc
adc
outsb
pusha
pusha
sbbb
xor
mov
inc
arpl
out
jb
gs
or
mov
lods
push
sarl
insl
and
push
adc
subb
xchg
sbb
loope
and
xchg
xchg
mov
nop
xchg
sbb
mov
xor
ja
xor
sarb
mov
xor
cmpsb
cmpsl
jl
rolb
adc
and
fwait
pusha
les
cwtl
imul
adc
leave
mov
mov
enter
int3
sub
popa
into
enter
pop
iret
rcl
les
test
ss
lea
loope
fs
in
in
out
gs
jmp
cmp
jg
inc
xor
lcall
out
in
add
inc
or
or
or
or
mov
das
decl
out
call
push
sub
out
fldt
call
xor
sub
cs
sub
dec
xor
sti
sti
lcall
lods
mov
data16
lods
pop
rorl
pop
mov
pop
pop
inc
sarb
int
pop
pop
jb
sarb
dec
bound
fwait
dec
xor
fs
cmpsl
lcallw
sbb
push
and
xor
insb
insl
mov
outsb
outsb
outsl
jo
jno
cmp
jae
push
je
sbb
push
or
jns
dec
jns
sbb
and
mov
jle
jg
imul
addb
test
jp
pop
cmc
pop
mov
mov
sub
hlt
shl
lods
cmp
xchg
test
repz
in
leave
test
aad
pop
jns
sub
stc
sar
sar
adc
fsubl
sbb
mov
or
jp
pop
fsqrt
fsub
les
test
dec
cmp
das
bound
mov
inc
cmp
out
in
les
push
cmp
daa
or
jno
inc
mov
inc
movsl
gs
dec
fidivrs
mov
fimuls
mov
pop
mov
inc
popa
into
xchg
jp
in
push
and
lods
push
jl
popf
js
mov
fdivr
ret
pop
sbb
push
dec
mov
sbb
shll
outsb
fs
xor
cs
insb
lcall
dec
mull
ja
aaa
sahf
out
cli
sti
cld
std
add
push
int
arpl
xor
out
pop
push
jecxz
in
lcall
jne
gs
out
push
xlat
fcomp
ficompl
lds
mov
enter
jns
cmpsl
fstps
lret
int3
int
imul
lcall
pop
lcall
cmp
imul
dec
popa
movsb
popa
popa
sbb
sbb
fs
scas
jbe
push
or
insb
fadd
cmc
clc
sahf
out
lcall
jns
out
lea
jns
out
xchg
xchg
xchg
xchg
sahf
out
sahf
xchg
cwtl
cltd
lcall
popf
sahf
lahf
xor
mov
cmp
mov
leave
in
sub
shl
and
push
dec
mov
push
dec
in
notb
dec
in
sar
insb
jp
fnstcw
out
call
mov
jl
fdivr
gs
sbb
pop
icebp
dec
pop
in
ja
test
cmp
mov
sub
ja
aaa
fstpl
icebp
push
iret
or
and
cmc
lock
dec
loop
xchg
cmp
mov
fnstcw
insl
mov
enter
push
jecxz
mov
je
and
fcompl
movsl
sub
inc
or
sbb
lods
imul
push
push
push
lret
frstor
pop
in
inc
addr16
push
add
xchg
mov
jne
out
sub
cld
hlt
insl
xchg
rclb
xchg
iret
jp
sti
cs
cs
iret
movsl
mov
and
stc
pop
imul
add
or
add
and
mov
sub
shlb
mov
mov
aas
in
cli
and
cmp
push
sbb
add
das
ljmp
push
ja
mov
daa
call
push
mov
cwtl
push
stc
pop
out
sbb
fnsave
add
es
mov
rcl
rcl
xor
out
jae
xor
sub
xor
cli
mov
dec
aam
and
data16
imul
mov
shll
icebp
and
popa
hlt
insb
loopne
push
in
nop
and
daa
mov
add
inc
mov
shrl
shll
jae
gs
shll
sub
mov
vpslld
sbb
pop
rolb
push
mov
add
add
call
pop
dec
push
pop
sub
pusha
push
nop
or
rorl
lea
stc
aad
push
inc
sbb
mov
test
mov
inc
pusha
cmp
gs
pop
jle
sub
and
add
cmp
add
in
rorb
aam
mov
cmp
loopne
jle
orl
adc
inc
jb
or
call
imul
je
cs
icebp
sbb
aas
xor
pop
out
out
insl
ds
lock
imul
rorl
shlb
aam
mov
stc
xlat
stc
pop
pop
pop
pop
fdivr
fyl2xp1
lods
or
stos
and
testl
sub
clc
and
jns
leave
clc
fdivr
nop
xchg
aam
aad
fdivr
inc
es
jb
sti
loop
lret
roll
std
stc
scas
ret
cmp
jl
imulb
outsb
sbb
shl
sub
cmp
fiadds
mov
cmpsl
cmp
fs
jae
jnp
cmpsl
jns
stos
jne
outsb
inc
sbb
dec
lods
scas
sbb
scas
mov
imul
jns
aaa
sbb
mov
inc
inc
lcall
sbb
inc
inc
mov
inc
lcall
lahf
mov
pop
mov
xor
xor
adc
sbb
xchg
mov
xchg
xchg
cwtl
leave
loopne
xor
insb
mov
push
push
xchg
mov
mov
orb
mov
mov
push
pop
loopne
cwtl
mull
jb
sub
cmp
sub
aam
es
jb
fsubs
mov
inc
add
pushf
or
test
mov
add
mov
int3
call
mov
pop
mov
scas
mov
test
sbbl
cltd
push
pop
idiv
cmp
sub
mov
push
fwait
ljmp
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
push
and
xchg
xchg
push
push
cmp
and
and
aas
inc
inc
inc
and
and
inc
inc
inc
inc
inc
inc
inc
xor
xor
inc
inc
inc
inc
xor
ss
mov
cmp
pusha
movsb
cmp
jbe
sbb
cltd
icebp
ja
jns
xor
sbb
jnp
mov
jle
in
xor
push
push
sbb
cltd
popa
push
or
sbb
sbb
pop
mov
in
xor
pop
pop
pusha
sbb
sub
sbb
sbb
imul
sbb
outsb
outsl
jo
mov
cmp
jmp
clc
in
sbb
and
jecxz
gs
push
sbb
add
mov
imul
inc
mov
xchg
aad
jmp
sbb
xlat
adc
add
rorl
sbb
stc
out
inc
jg
sbb
jmp
das
ljmp
sbb
pop
fbld
testl
mov
push
sbb
jo
xor
icebp
rcr
sub
sub
jne
sbb
fildl
outsl
mov
sub
daa
mov
cmp
jl
cmp
jle
cmp
push
addr16
cmp
jl
cmp
jg
pop
jle
jp
sub
ficomps
adc
arpl
jle
lcall
mov
mov
das
das
dec
shll
jno
shll
ja,pn
rorl
insb
push
xor
xor
shll
arpl
shll
xor
xor
dec
das
fdivrs
shll
fs
loop
dec
jae,pn
call
andb
push
stos
insl
xor
cmp
bound
xor
cmp
enter
int
iret
repz
repz
rcl
aam
repz
aad
xlat
fcomp
fidivrl
repz
repz
repz
loop
in
xor
iret
in
out
lock
xor
xor
xchg
cmpsb
imul
test
fnsave
arpl
sti
cld
addr16
jmp
inc
testl
push
aaa
dec
xor
and
mov
mov
and
mov
sbb
shll
jo
das
dec
shll
insb
lcall
imul
lcall
cmp
jae
data16
xor
and
repz
jae
lcall
sbb
mov
cltd
xchg
inc
test
daa
add
cmc
sub
sub
dec
lock
call
mov
push
add
mov
mov
xlat
std
adc
sbb
notb
addb
or
push
fmuls
mov
jne
fistpll
in
cmpsb
out
outsb
out
add
in
mov
sbb
push
mov
stc
test
adc
mulb
or
jge
mov
mov
xchg
mov
add
mov
mov
loopne
mov
cli
mov
lret
push
pop
mov
andb
sub
movsb
mov
dec
divl
xchg
aaa
and
fdivs
bound
and
xor
imul
in
mov
dec
addl
nop
xchg
ja
in
test
popa
sub
dec
cld
shlb
adc
sbb
jb
jns
jl
dec
daa
cmp
adcb
fnsave
lret
les
enter
ja
add
sub
xor
sub
test
push
clc
pusha
xchg
and
shlb
call
or
jmp
mov
add
mov
cmp
push
pusha
out
insl
mov
adc
scas
popa
sub
insl
jno
sub
or
lea
repz
loop
pushl
cmp
mov
adc
andb
push
xlat
jle
cmp
or
or
and
or
cmpsl
lds
addb
incl
in
mov
daa
sbb
pop
sub
das
test
pop
movsl
jp
sbb
add
fisttpll
roll
mov
jle
jne
xor
test
jbe
xor
outsl
lcall
push
pop
mov
cmp
jl
or
jg
inc
cmp
jb
sti
fildll
adc
add
cmp
jne
xchg
iret
mov
les
or
test
adc
pop
push
jne
push
cmp
push
insb
or
push
and
push
push
or
push
push
mov
mov
xor
lahf
add
imul
cmp
sbb
xchg
cmp
jne
lods
sub
pop
mov
movsl
add
or
outsb
and
sbb
mov
pushl
push
nop
iret
mov
cmp
inc
ret
cmp
call
sbb
jnp
push
mov
cmpsl
jae
inc
sbb
mov
add
mov
sub
scas
call
xchg
adc
push
adc
sub
movsb
and
jmp
mov
push
sub
mov
orb
xchg
push
push
push
mov
out
dec
pop
add
push
cmpsl
xor
sub
inc
lret
inc
ficoms
sub
sbb
add
pop
sbb
adc
addr16
xor
les
add
push
mov
pushf
xchg
dec
loopne
mov
and
or
into
gs
sbb
push
les
xchg
das
xor
mov
jne
cli
nop
pop
ljmp
add
pusha
movsb
fcoml
push
add
stc
out
or
jmp
cli
mov
pop
push
ja
xor
cmp
jne
pop
sbb
aam
add
mov
mov
sbb
or
cmc
daa
adc
add
inc
cmp
jmp
add
push
out
sti
mov
add
loopne
mov
pusha
jg
int3
mov
ret
sub
adc
adc
lods
rcl
loopne
call
hlt
inc
ror
pop
xchg
fldl
shlb
and
add
sbb
iret
and
add
xor
push
add
sbb
xchg
push
lock
xchg
push
sub
fldl
mov
cmp
cmc
sub
je
and
loop
jne
push
pop
int
adc
call
popa
mov
cmp
adc
aas
dec
js
imul
mov
lahf
test
mov
out
outsl
imul
fcompp
in
xchg
xor
out
add
cmp
sbb
add
add
cmp
xchg
out
add
and
movzbl
push
aad
add
cmp
out
call
shrb
sbb
mov
fcompl
pop
xchg
filds
push
cmpb
mov
dec
add
push
mov
adc
inc
or
sub
jle
insl
push
cmp
add
sbb
jecxz
lods
xor
insl
jne
push
ds
scas
jmp
mov
shll
out
or
jl
icebp
mov
pop
pop
popa
xor
pop
imul
clc
add
movsl
add
ret
push
imul
or
adc
cmp
xlat
or
cmp
jns
add
cmpsl
loop
test
popa
add
add
push
jbe
push
mov
push
mov
xchg
sbb
shlb
les
sub
jge
mov
loopne
and
pop
sub
inc
jg
mov
insb
fcomi
jl
push
sbb
call
ss
sbb
sbb
dec
in
push
cmpsl
lods
rorl
adc
pop
mov
cmpsb
add
and
out
jp
cmpb
pop
stos
call
outsb
rcr
push
movsb
mov
in
cld
cld
aaa
mov
js
out
dec
pop
push
or
add
xchg
addb
and
sbb
mov
add
popa
mov
or
leave
push
imul
add
lea
add
xor
and
pop
push
and
sbb
xor
add
cmpsb
mov
gs
mov
js
rclb
pushf
out
cmc
fcoml
mov
lcall
aam
lock
xorl
test
andps
jo
inc
les
jne
mov
test
push
jmp
cmpsb
inc
pusha
rep
jns
test
sub
arpl
outsl
adc
sbb
andl
inc
add
popf
mov
mov
rcll
fs
push
mov
les
fidivl
push
push
int3
mov
sub
push
push
xor
lock
sub
imul
sbb
sar
sar
jl
lea
pop
fcom
sub
xor
sahf
lods
mov
adc
ss
sub
pop
inc
movsb
sub
xlat
pushf
dec
loop
sbb
movl
mov
int3
out
mov
test
pop
lods
push
pop
xor
mov
fstpl
sbb
mov
push
or
stos
push
push
mov
cmp
sub
subb
inc
sbb
and
mov
inc
imul
aas
dec
pop
enter
mov
js
cmp
out
adc
rorb
or
cltd
add
lods
int3
mov
call
movsb
push
in
fdivrs
sbb
jmp
cmp
mov
jns
adc
cmp
imul
add
dec
call
loopne
dec
rorl
cld
in
hlt
in
and
add
popf
push
sub
cs
cs
das
mov
add
pop
ret
jae
in
inc
fisubrl
hlt
clc
lock
pusha
or
test
loope
outsb
popa
cs
push
dec
push
div
rorl
shl
outsb
test
or
sub
push
clc
xor
lret
cld
add
xor
mov
out
or
je
inc
scas
cmovo
adc
adc
sbb
outsl
mov
push
jmp
dec
shrb
leave
push
jo
in
mov
cmp
sarb
push
leave
js
test
push
cmc
mov
push
test
xchg
add
jne
mov
mov
adc
sub
sbb
jae
mov
jmp
jge
push
cs
scas
jecxz
test
sbb
ret
aam
addl
lock
jae
xchg
popl
push
stos
pop
adc
jbe
test
lret
mov
sub
push
cmp
add
xor
int3
inc
addr16
lods
rcrb
mov
loopne
out
das
xlat
cmp
jne
les
int3
dec
push
inc
ret
testb
add
in
jae
sub
push
and
dec
rcr
push
faddp
mulb
push
and
out
add
sbb
fldl
lods
test
adc
mov
call
ljmp
jo
fpatan
push
shr
add
add
ljmp
test
and
sub
jnp
xor
push
sti
mov
adc
inc
pushw
aaa
adc
push
push
gs
xor
dec
mov
jae
pop
push
push
mov
dec
mov
jns
test
sbb
sbb
mov
push
mov
loop
std
sti
xchg
and
into
dec
sbb
shlb
xor
dec
cs
testb
add
inc
outsl
xor
xor
gs
cmpsb
imul
inc
sub
jmp
push
jmp
cmp
scas
shll
mov
sub
inc
insl
mov
pop
xor
repnz
cmp
out
push
ret
int3
pushl
mov
push
push
rorb
mov
jnp
and
roll
lret
dec
loope
dec
and
cmp
movb
fisubrl
push
push
leave
clc
lock
js
push
cwtl
lea
fistpl
push
loope
inc
mov
ret
sub
mov
mov
sub
push
lcall
or
and
xor
add
daa
cmp
mov
cmp
inc
xchg
nop
mov
js
mov
push
insl
cmpsl
pushf
cmp
dec
pushf
cmp
and
aaa
rcll
mov
mov
in
add
js
lahf
rcl
aad
jge
lcall
push
push
clc
mov
outsl
inc
movsb
pushf
test
inc
mov
ds
addb
push
popa
mov
xchg
addb
and
jb
dec
dec
dec
and
nop
sub
hlt
pop
dec
dec
push
sub
imulb
dec
or
dec
jmp
movsl
or
jmp
push
push
and
cmp
cmp
addb
movsb
xchg
adc
sbb
pusha
jno
mov
add
pusha
sub
test
addr16
add
dec
adc
sub
jp
add
add
rcl
push
inc
gs
shll
mov
cmp
movsb
in
jae
and
sarb
aad
test
rolb
aaa
jbe
jo
pop
aas
xor
sbb
add
pushf
adc
mov
es
repnz
adc
rclb
daa
mov
pop
clc
cmp
mov
mov
and
and
inc
dec
mov
jo
je
leave
and
mov
pop
cmp
cmp
mov
mov
push
and
cmp
mov
ds
push
fsubr
push
pop
inc
xchg
push
mov
iret
xlat
adc
and
mov
pushf
dec
rcll
adc
lods
mov
icebp
lods
cmpsl
in
movsb
rcrl
sbb
add
ficoml
inc
push
mov
mov
daa
cs
jl
push
pop
fidivrs
mov
gs
xchg
xor
neg
cmp
adc
fs
addb
cmp
mov
cmp
in
add
mov
arpl
aaa
or
mov
push
push
xor
add
adc
or
clc
dec
and
cmp
sbb
pop
push
sbb
mov
cmpw
cmp
cmp
ret
sarl
ljmp
loopw
cmp
cmp
jl
je
and
sarb
sbb
sub
aaa
filds
pop
js
add
jo
add
cmpl
mov
js
test
imul
push
and
js
and
in
push
push
lods
mov
add
or
fisttps
mov
insb
xchg
sbb
bound
mov
push
jg
sub
arpl
dec
or
sar
cmp
add
movsl
mov
add
dec
mov
in
mov
adc
jne
scas
movsl
data16
add
sbb
pop
enter
mov
lahf
add
loop
cmpl
mov
std
add
rorb
jle
movzwl
mov
sbbb
add
ljmp
fsubrp
cli
add
cmp
adc
adc
jnp
jne
inc
cmp
jne
inc
cli
add
adc
sub
push
push
ss
imul
cwtl
fsubrl
adc
mov
push
inc
inc
insb
adc
add
jmp
mov
inc
or
shlb
push
add
push
pushl
loop
popa
clc
les
fcmovu
xchg
je
sub
loope
jbe
faddl
mov
xchg
push
iret
incb
or
jg
and
mov
pushl
add
push
pop
clc
add
mov
sub
jge
clc
xchg
add
mov
pop
fs
inc
clc
mov
inc
xor
idivl
andl
lea
xor
call
push
mov
call
sbb
aaa
pushl
int3
adc
push
or
xchg
jg
pop
inc
add
pop
inc
inc
xchg
pop
adc
cwtl
mov
stc
int3
roll
call
hlt
fidivrs
mov
pop
mov
call
jle
and
inc
cmp
testb
je
mov
sub
mov
int
mov
inc
xchg
loopne
out
xchg
or
pusha
pop
test
test
fs
fldl
push
data16
cmp
scas
sub
xchg
jle
or
pop
scas
jp
sub
xchg
sarb
push
push
sarl
inc
mov
call
aam
rorb
dec
and
cmp
push
shll
jo
xor
les
sbb
into
or
mov
je
ds
xchg
cmp
insb
pop
push
leave
mov
push
lock
xchg
or
repnz
loope
mov
popf
inc
and
mov
cmpsb
sbb
nop
pop
sub
jns
fadds
pop
push
add
ret
jne
lods
mov
clc
fdivs
and
pop
insl
pusha
ficoml
sub
xlat
mov
inc
mov
add
sub
adc
shld
add
sbb
add
les
and
outsl
adcl
adc
rolb
add
add
lock
and
push
rorl
test
lds
or
or
cmp
je
push
js
cmp
or
push
ret
add
pop
mov
sub
cmp
mov
or
daa
jge
or
adc
push
daa
add
jge
sub
mov
test
sahf
push
mov
mov
pop
xchg
pop
dec
insl
jo
sbb
push
or
stc
add
nop
nop
pop
add
outsb
lret
inc
scas
loop
mov
sbb
movsl
in
adc
orb
pop
movsl
lahf
pop
fwait
xchg
push
sub
sbb
sbb
frstor
add
call
jmp
mov
mov
ret
std
push
push
data16
mov
stc
push
push
cmp
cmpsl
std
fwait
sub
scas
inc
jge
and
cli
push
test
mov
ret
fs
mov
add
or
xchg
call
test
xor
daa
outsb
loop
movsl
and
out
decb
arpl
imul
addr16
jmp
pop
cs
in
in
out
and
add
jae
outsl
pusha
and
jl
mov
and
dec
rcll
ss
cmpsb
leave
cmp
xor
xor
cmpsb
imul
xorl
sbb
paddusb
or
repz
movsb
pop
cmp
mov
push
js
mov
or
push
mov
pop
or
add
cmp
mov
aaa
ss
xchg
das
and
loop
iret
es
and
fcoms
pop
push
sbb
sbb
pop
clc
call
imul
mov
scas
mov
ss
adc
orl
and
xchg
andb
pop
sub
push
dec
jl
loopne
test
jb
sub
inc
pop
sub
std
aad
movsb
imul
xor
jb
cs
lret
js
imull
lahf
xor
imul
pop
pushf
or
and
sbb
out
incl
shl
and
loope
mov
into
xchg
ljmp
pusha
xor
inc
jne
sbb
and
not
rcrb
aaa
lock
adc
inc
inc
dec
add
push
lret
popa
hlt
sbb
mov
mov
sbb
sbb
or
adc
rorb
jmp
sbb
pop
in
in
jb
adc
and
mov
in
add
sbb
call
lret
in
mov
pop
cs
lret
cwtl
mov
jb
mov
out
mov
dec
dec
neg
mov
xor
daa
int
int
xor
adc
adc
in
sarl
in
dec
daa
ret
inc
xor
sarl
daa
bound
xchg
out
xchg
nop
push
pop
movsb
inc
inc
les
xlat
xor
push
sbb
adc
add
inc
add
je
push
jb
arpl
jae
jmp
cmpsb
and
gs
outsl
outsl
insb
push
xor
popa
scas
fnstsw
jo
push
add
jb
jne
insb
pop
inc
arpl
mov
xchg
insb
jo
add
inc
insb
outsb
fldt
sbb
cwtl
add
push
pop
fwait
pop
xchg
pop
inc
nop
jae
arpl
adc
ret
test
jp
js
and
jge
dec
outsl
fs
and
push
jnp
loop
inc
add
fs
imul
popa
jb
push
jg
scas
movsb
add
jb
lea
imul
jnp
mov
inc
jns
add
pop
sub
or
sahf
fwait
inc
fs
sbb
sbb
test
jo
jle
add
pop
jno
imul
ficompl
popa
inc
outsl
jb
push
addr16
dec
bound
testl
push
gs
outsl
fsubrl
fs
mov
lods
and
jo
inc
lcall
testb
add
jo
insl
imul
jo
mov
ja
xor
mov
xor
fisubrl
int3
mov
insb
fnsave
dec
push
je
faddl
pusha
add
push
daa
cmp
stos
data16
push
das
test
sbb
push
push
inc
je
jb
jb
out
pop
push
sub
push
call
push
outsl
fisubrs
and
xor
xchg
push
adc
addl
or
xchg
fbstp
into
mov
add
xchg
nop
mov
scas
cwtl
sbb
mov
stc
popa
jnp
jne
jb
sbbl
imul
push
pop
xor
outsl
jo
std
popa
cmpb
fildll
imul
push
pop
inc
cmp
call
stos
jbe
lods
inc
pop
mov
add
mov
push
xor
sahf
lcall
sbb
inc
cmpsl
mov
or
adc
outsl
cmp
mulb
clc
xor
dec
jae
test
and
sub
aas
and
ret
add
arpl
js
jge
inc
dec
push
outsb
push
cmp
dec
xchg
xchg
mov
sub
push
dec
inc
lods
add
jo
je
outsb
fisttps
jno
aaa
fmul
ss
add
push
add
jbe
ds
outsl
bound
jne
dec
popa
fwait
or
hlt
mov
push
outsb
add
iret
push
or
xchg
pop
dec
push
lahf
sbb
cltd
pusha
xchg
add
sbb
xchg
ds
ss
pop
cmp
push
popa
addr16
addb
fndisi(8087
mov
insb
xchg
sub
mov
inc
leave
add
pop
dec
lock
xchg
out
xchg
add
fs
and
add
lea
mov
lret
bnd
mov
insb
or
or
pcmpeqd
sbb
mov
jae
sbb
popa
cwtl
enter
loopne
int3
outsb
mov
xor
adc
lods
out
sbb
xor
or
scas
outsb
sbb
add
jne
dec
lods
pop
movsl
loope
sbb
adc
push
xor
imul
js
sbb
push
cmp
call
and
aas
xlat
jnp
pusha
idivl
adc
sbb
scas
jecxz
sti
lcall
xor
push
push
mov
push
add
push
push
mov
add
add
inc
adc
movl
repnz
loop
shlb
pop
sub
stc
xor
data16
inc
mov
decl
mov
fmull
add
ss
adc
shl
sbb
jae
add
jmp
dec
jne
dec
inc
push
mov
fs
push
addl
inc
fdivs
into
pop
inc
imul
inc
inc
xchg
incb
inc
fs
push
outsl
imul
dec
sbb
xchg
jo
cmp
fimull
pop
push
lret
imul
gs
jnp
icebp
push
loopne
scas
rolb
jmp
sub
and
lret
addr16
outsb
jne
push
inc
or
push
out
inc
inc
push
inc
push
imul
add
hlt
mov
xchg
adc
jns
pop
gs
fstpt
jb
es
test
dec
adc
pop
cmc
cmp
push
sub
lock
add
popw
push
pushf
or
sahf
jo
scas
jmp
xlat
mov
shll
fnstcw
jge
mov
sbb
jo
push
data16
mov
outsl
imul
fstpt
aas
aas
xor
inc
pop
push
add
pop
jns
cmpsb
add
arpl
rdmsr
xor
pop
jmp
xor
xchg
out
bound
cmp
fistps
sub
jecxz
xchg
out
stos
mov
jg
out
push
push
cwtl
jg
in
adc
loope
pop
jbe
sarl
fs
ret
add
jle
ja
dec
add
mov
and
ror
xchg
mov
daa
ret
push
insb
ja
dec
push
push
or
xchg
stos
call
fs
adc
jmp
jle
cmp
adc
ss
mov
push
push
sub
sbb
mov
stos
outsb
and
mov
mov
in
arpl
and
fwait
sahf
pop
daa
jmp
ss
mov
inc
dec
push
dec
xchg
add
fs
push
mov
pop
hlt
iret
xor
push
pusha
int3
sub
mov
out
fadds
imull
sbb
jmp
pushf
shr
jmp
mov
dec
call
push
neg
mov
shl
mov
mov
clc
cmp
jmp
in
jnp
sub
test
push
adc
jecxz
push
cmp
inc
and
mov
dec
jecxz
pop
mov
fidivrs
push
lods
push
mov
pushf
sarl
mov
sbb
clc
add
mov
adc
push
jne
pop
dec
mov
inc
adc
test
test
or
mov
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
push
add
decl
loop
leave
jne
and
push
xchg
mov
mov
sbb
jl
jge
push
or
out
loope
bound
insl
jne
mov
jnp
nop
stos
pushf
test
inc
roll
push
mov
push
xchg
mov
sub
sbb
dec
sbb
mov
dec
jno
mov
sub
cmp
dec
lcall
cmpsl
mov
push
sub
insl
mov
pop
mov
xor
mov
sbb
sti
or
fisubrs
add
pop
sbb
or
loop
sbb
sbb
enter
std
cld
pop
push
dec
out
lret
pop
subb
in
jns
mov
push
mov
xchg
mov
call
pop
pop
mov
imul
jle
es
xor
aaa
mov
jecxz
jle
in
shr
cmc
or
mov
inc
sub
push
add
in
pusha
pushf
mulb
test
fmuls
xchg
add
add
roll
inc
sub
fildl
cmc
sub
jbe
and
jmp
push
and
aas
and
mov
or
pushl
mov
mov
test
daa
test
stos
and
neg
add
cwtl
loopne
xorb
int
or
or
cmp
xadd
neg
repz
fstl
cld
incl
jmp
xor
mov
clc
add
mov
add
and
adc
pushf
cmp
xor
dec
clc
call
in
mov
jmp
add
rolb
pop
mov
ljmp
xchg
movb
pushf
push
in
mov
fs
jmp
movsb
dec
xlat
psubb
decb
std
jg
adc
pusha
sub
mov
pusha
fildll
shr
xchg
movb
jmp
jmp
movsb
jg
mul
add
jae
leave
sbb
das
cmc
clc
test
sub
pushf
mov
mov
sbb
cwtl
add
repnz
outsb
sbb
push
out
add
adc
rorb
push
rcrl
insb
subb
pusha
not
stc
lods
aas
fcom
jo
loope
scas
mov
push
mov
or
imul
jmp
mov
pushl
ret
push
push
cld
rorb
mov
push
fstpt
test
cmc
push
lock
stc
call
mov
stc
push
xor
mov
loopne
outsl
sar
stc
sub
push
or
lea
rol
clc
or
jmp
add
cmp
aam
test
add
pushf
xor
cmp
call
adc
mov
cmc
call
aaa
push
jmp
std
in
or
btc
lea
mov
pop
mov
into
inc
lea
fs
lret
clc
mov
aam
mov
pushf
setle
jle
xor
sahf
push
inc
lret
nop
call
lcall
les
int3
xor
lahf
rcr
notl
push
scas
pop
jo
js
cmp
cmp
into
push
testl
shr
xchg
xor
stc
loopne
jnp
decl
or
ret
push
clc
xor
call
cmp
arpl
or
or
xchg
jbe
aas
scas
loopne
pop
cld
add
mov
movsb
sub
inc
xchg
push
push
mov
pusha
mov
bound
or
push
dec
aad
add
add
lds
clc
cmc
add
std
repnz
dec
pusha
call
or
mov
jmp
jmp
pop
add
jne
pushf
fdivrs
push
test
rcrb
lock
shll
pop
into
out
testb
jmp
push
test
inc
inc
and
scas
jp
jmp
pop
push
roll
cmc
sbb
out
clc
das
cli
sar
pusha
bswap
rorl
mov
nop
enter
push
outsb
aad
movsb
sub
push
mov
cmpsb
sub
sarl
js
adcb
xor
into
push
std
push
out
mov
daa
cmp
cmp
or
and
push
cmp
mov
jle
sbb
inc
mov
inc
jmp
jmp
sahf
mov
push
cmp
lods
fsubrp
cltd
jp
sahf
in
rcr
add
in
add
arpl
insb
cmp
test
jno
xchg
adc
call
or
lahf
lret
mov
inc
push
fidivs
jno
ret
fiaddl
into
add
jmp
pop
sbb
loop
cs
mov
mov
pop
lret
push
jmp
pop
pop
dec
add
adc
sbb
xchg
rcr
out
lock
dec
sbb
or
xchg
add
inc
jmp
inc
sbb
dec
add
pop
into
and
ljmp
push
imul
mov
jmp
jmp
or
mov
pop
and
lock
sub
cmp
push
mov
push
jmp
inc
jae
and
sahf
fsubr
jmp
mov
insl
into
adc
or
dec
or
les
clc
or
and
mov
and
dec
test
loope
jmp
mov
mov
pusha
hlt
loopne
jb
aaa
cld
cld
rol
jle
jb
lret
test
inc
jg
data16
iret
clc
dec
push
push
jg
clc
shl
sub
dec
add
stc
pusha
test
push
clc
ds
and
push
add
or
adc
outsb
out
enter
enter
push
xchg
aam
cmp
inc
jno
sbb
dec
pop
jmp
fstp
and
or
xor
pop
inc
cmc
out
clc
fwait
push
sub
push
ret
aam
inc
aam
outsb
imul
ror
sub
std
ret
sub
jmp
lret
jo
lock
shrl
adc
lods
or
sbb
stos
call
shl
in
cmp
loopne
add
cli
stc
not
mov
inc
data16
call
xchg
cwtl
mov
dec
jo
xsave
ljmp
incb
push
shl
xor
rcl
pusha
scas
pop
cmp
and
ret
add
ret
call
mov
mov
test
or
cld
out
call
mov
dec
insb
lock
icebp
pop
ss
repz
push
pop
dec
aaa
push
jmp
xchg
push
jnp
or
sub
pushf
cmpsl
push
call
push
rol
ja
shll
add
out
mov
push
mov
pushf
mov
incb
pop
cmp
cmp
cmp
inc
loopne
call
push
pmaxsw
fistpl
xchg
and
jmp
sub
push
dec
xor
js
cmp
pop
out
setnp
stc
aas
cld
pop
cld
lea
hlt
sbb
adc
rorb
loop
dec
jns
push
and
jmp
dec
jo
or
or
push
js
jge
lahf
loop
add
ficompl
push
ljmp
xchg
pop
aad
shr
and
jge
sub
push
iret
js
es
lock
sahf
mov
adc
out
jo
je
jae
add
cld
addl
rol
sete
mov
stc
dec
test
repnz
call
pop
pop
xchg
pop
push
pushf
or
mov
out
cli
mov
es
xlat
imul
add
pop
pop
outsl
clc
or
jns
xchg
pop
xchg
aad
sti
and
push
call
push
test
mov
push
rorb
sahf
shl
inc
clc
daa
fsubl
mov
ror
push
outsl
fildl
sub
adc
rorb
lods
dec
inc
out
stc
add
adc
aad
xchg
leave
xor
xor
lea
cld
jns
or
loope
mov
clc
aas
clc
add
repz
movsb
clc
mul
stc
mov
stc
jmp
or
add
rcr
sbb
xor
cld
jle
push
call
xchg
add
mov
and
pop
movsl
mov
cmp
sbb
add
mov
pushf
das
sbb
dec
loop
fucomi
lahf
daa
mov
push
adc
inc
pop
icebp
ret
notl
jmp
or
fsts
push
mov
or
pushf
push
dec
cmp
addb
cmp
fsubr
in
add
pop
jmp
std
call
xor
and
add
insl
cmp
jp
pusha
mov
iret
dec
testb
jmp
add
mov
mov
stc
stc
bswap
call
testb
and
mov
ljmp
adc
rol
sbb
add
sar
je
cmp
call
push
js
jmp
or
test
push
and
je
cmp
mov
stos
or
sub
xchg
xor
aad
mov
and
pop
idivb
inc
pop
mov
push
cmc
add
imul
pop
rol
popf
je
ja
jl
call
popf
sbb
or
sbb
cli
jnp
testb
cbtw
stc
outsl
or
push
fisttps
clc
cmc
jl
sbbl
lock
imul
adc
aad
rclb
test
sbb
outsb
mov
mov
inc
ret
mov
or
ret
xchg
pusha
sub
lock
out
movb
sahf
sbb
shll
inc
hlt
or
pop
cwtl
sbb
or
sbb
add
call
clc
jmp
call
nop
jl
xor
aas
push
mov
adc
dec
and
call
adc
call
dec
fdiv
mov
mov
sarb
in
into
push
lret
jecxz
inc
push
data16
clc
pop
jo
repnz
mov
std
pop
or
jmp
out
jmp
pushf
push
fsubs
sbb
sbb
sub
sbb
xlat
inc
inc
es
xlat
fwait
loop
les
inc
xchg
add
lock
cmc
stos
call
push
push
pop
data16
sbb
rcrl
aad
add
jl
xchg
jo
lea
out
push
inc
pop
incb
out
inc
ds
pop
gs
add
nop
pushf
adc
sahf
sub
fcmovnb
and
xchg
aaa
in
sbb
sarb
inc
xlat
mov
pusha
push
mov
lds
ret
mov
sub
push
or
inc
and
aam
andb
cmc
rolb
xchg
cmpsb
pusha
das
fcompl
out
cli
push
mov
jmp
pop
fisttps
std
mov
sahf
push
xor
mov
aas
jl
mov
pop
mov
jmp
popa
push
fldcw
lock
pusha
clc
lea
cmp
movl
stc
fnstsw
inc
fs
pusha
lea
pushf
rol
push
add
pop
loopne
dec
inc
sahf
ljmp
shll
lea
aad
mov
iret
lea
shr
and
bswap
clc
out
mov
loopne
or
test
ret
mov
repnz
mov
or
aam
push
push
loope
aas
sbb
test
call
das
paddb
xchg
pop
call
neg
fcom
or
cwtl
lock
test
sti
popa
mov
call
testl
xor
and
xor
lahf
loope
cmpsb
dec
neg
pusha
mov
and
add
fwait
rolb
xor
aad
and
push
mov
mov
fimuls
ret
mov
ret
or
imul
xor
jb
ds
jmp
xchg
setge
rdtsc
cltd
jl
lea
shrd
lret
push
sbbb
das
sbb
mov
adc
pop
and
call
cmp
push
call
adc
sub
mov
pop
jnp
js
sbb
and
loopne
test
stc
ja
add
in
shlb
andb
pop
pop
cltd
jl
or
xlat
pusha
in
push
pop
rcrb
cmc
mov
aad
test
xlat
mov
sub
or
int
inc
xor
pushl
mov
stc
sub
incl
adc
fsubp
setle
xlat
stc
shl
std
or
fimuls
lea
not
setne
rol
and
shll
mov
out
dec
mov
jmp
cld
call
lret
sbb
add
jne
rcr
adc
cmc
pop
sti
cmp
or
data16
leave
push
sbb
sub
xlat
cltd
jmp
arpl
dec
aam
fists
fisubl
in
in
shr
rcrb
mov
repnz
adcb
fiaddl
mov
and
jmp
push
lcall
or
jbe
jl
jb
bound
push
out
out
mov
push
xor
call
cmp
jno
ds
lahf
rorl
push
dec
push
loope
imul
cmp
sub
sbb
cmp
cmpb
test
or
or
jmp
ljmp
icebp
icebp
es
adc
pop
js
pop
dec
test
fnstcw
mov
out
std
inc
incb
sbb
mov
cmc
fistpl
lods
cmp
mov
push
clc
push
xchg
dec
call
int
iret
pop
aas
repnz
cmp
push
pmaddwd
roll
ds
fistl
cmp
jns
mov
dec
mov
insb
inc
cmp
aaa
imul
jl
or
lar
add
test
lret
in
inc
lahf
cmpsb
test
xchg
fcomi
mov
push
push
imul
data16
mov
mov
aas
outsb
or
xor
out
fdivl
decl
out
push
push
in
and
add
jns
pop
repnz
aas
test
lret
cmp
cmp
mov
pop
popl
ret
pop
pop
daa
cmpsb
xstore-rng
cmpsl
xchg
js
fwait
xor
push
push
pop
idivb
pop
push
outsl
mov
sbb
jbe
cld
imul
add
sbb
or
out
mov
jle
xor
pcmpgtd
adc
loope
inc
push
xchg
punpckldq
push
dec
addr16
push
pop
jo,pt
imul
dec
negb
cmp
out
daa
pop
cmpsl
fsubp
loopne
data16
ss
push
pop
out
icebp
out
loopne
aas
out
mov
adc
scas
cmpsl
pop
cmpsb
mov
push
iret
push
pop
lahf
orl
rcll
js
jo
das
jbe
scas
out
fstp
icebp
jo
scas
testl
out
xchg
jbe
push
dec
xchg
out
push
pop
jbe
mov
ja
ja
loopne
out
mov
js
icebp
ds
ja,pt
pushl
sub
xchg
xchg
mov
pop
lods
cli
xor
xchg
push
fistpll
jle
pop
lahf
xor
cs
scas
inc
mov
push
add
lar
fnsave
and
testb
xor
add
push
mov
add
inc
lea
lret
jmp
out
add
incl
rcl
mov
push
rcl
shl
pmaxub
adc
push
pusha
adc
ljmp
test
sarb
movsb
seta
mov
mov
mov
in
and
adc
sub
dec
jmp
outsl
or
sub
in
push
test
les
pop
lret
imul
fs
xor
testl
mov
test
push
push
jae
inc
mov
mov
in
leave
testb
flds
addr16
call
cmp
cmpsb
inc
cld
outsl
loop
mov
idivb
xlat
shl
pusha
ret
aaa
fisubs
in
clc
mov
enter
mov
sub
pushf
xchg
add
mov
mov
jo
mov
jo,pt
fidivrl
sub
test
adc
fdivrs
fistps
sahf
push
xor
outsb
out
mov
mov
into
adc
not
pushw
maxps
or
fsubrl
xor
popf
repnz
dec
cld
and
pusha
jmp
stc
add
cmp
inc
push
cmp
pushl
push
push
xchg
lret
adc
lahf
pusha
add
test
test
rcrb
call
mov
push
loop
pop
jl
cmpsb
jmp
cld
push
inc
das
mov
xor
decb
mov
mov
fidivrl
mov
and
mov
call
pop
mov
fstl
out
not
push
push
pop
mov
pushf
push
call
or
add
insl
pop
test
sbb
and
adc
and
or
mov
pop
jg
cmp
jmp
test
or
inc
test
xchg
pushf
into
xchg
pushf
shrb
je
jmp
mov
mov
cmp
mov
lcall
mov
push
mov
shlb
call
mov
mov
mov
mov
testb
mov
cmp
iret
mov
pop
lret
mov
jae
std
inc
stc
add
push
pushf
add
adc
adc
mov
test
xor
mov
add
stc
test
push
mov
push
fists
and
shl
mov
xor
test
jns
je
sbb
das
jmp
data16
mov
adc
sub
lods
clc
jl
fs
orl
stc
stc
cmc
mov
cmp
mov
pop
movsl
fwait
icebp
sbb
jns
jae
lahf
xchg
sub
pop
sbb
dec
test
imul
push
popw
shlb
fwait
mov
loopne
mov
pop
mov
push
gs
arpl
cmp
lock
insb
jg
cmc
lods
push
sbb
jecxz
scas
iret
je
xchg
scas
imul
dec
add
dec
mov
fsts
out
mov
ret
jns
sbb
jno
push
hlt
sbb
mov
cld
xor
cmp
cmp
jae
cmc
in
repnz
cmc
lret
jge
setl
or
out
loopne
push
mov
dec
jle
mulb
aas
faddl
xchg
add
dec
fiadds
clc
cmp
shrd
aas
dec
mov
or
mov
or
mov
push
iret
pusha
lea
mov
add
mov
xchg
push
ror
rol
cmp
or
add
repnz
mov
mov
dec
pop
shrb
lods
pusha
inc
mov
pop
inc
sahf
inc
cmc
cmp
ret
mov
dec
sbb
sbb
outsb
dec
pusha
inc
push
ja
mov
cmc
stos
inc
dec
lahf
sub
jmp
sbb
mov
mov
dec
dec
loopne
std
cmp
cmp
inc
dec
jg
call
repz
stc
fs
dec
fildll
jno
dec
adcb
push
lcall
mov
sahf
aad
mov
int
mov
fsub
sbb
xor
mov
cmp
gs
sub
add
mov
rol
add
jns
test
inc
cmp
sbb
sbb
xor
stc
cli
mov
lahf
jmp
pop
test
add
and
mov
incl
shlb
push
shl
mov
push
das
jb
sub
cli
fadds
out
clc
xchg
je
push
cmpsb
or
sub
repnz
mov
inc
cmpsl
je
mov
pushf
das
push
decl
js
push
add
and
call
cld
cltd
pop
sbb
or
mov
decl
cltd
iret
pop
lea
out
test
testl
jecxz
movsl
aaa
cmp
pop
sbb
push
in
pop
fmull
sub
and
add
insl
in
mov
lods
mov
out
enter
and
fidivrs
and
iret
sub
sbb
sbb
adc
add
repnz
stc
hlt
jle
fstl
push
dec
repz
clc
cs
pop
adc
xor
cmp
xor
test
leave
lcall
sub
and
mov
stc
adc
fisubrl
cld
dec
cmp
mov
outsb
pop
and
inc
test
cwtl
imul
inc
incl
lods
or
or
mov
xchg
push
xchg
xchg
js
inc
incl
cmp
jg
decl
sti
add
xchg
xchg
fcom
jo
xlat
mov
testb
inc
lock
and
sar
ljmp
jp
push
sbb
hlt
adc
ss
pop
in
and
jb
mov
sub
les
test
inc
rcrl
pop
out
out
rcrb
push
mov
add
call
in
lds
outsb
adc
push
push
popf
bound
out
test
leave
scas
push
pop
movsb
movsb
dec
push
sbb
loopne
mov
and
adc
and
aam
jp
fisubl
stos
jl
xor
repz
mov
into
out
ficompl
shl
cmp
lret
mov
jg
pusha
rcl
fwait
fs
mov
je
cmpsb
scas
pop
fs
xor
jge
xor
mov
lods
mov
movb
clc
in
les
fcomps
push
pushf
incb
mov
add
pushl
ljmp
test
push
test
dec
or
xchg
sbb
call
in
jecxz
daa
loope
in
aad
aas
and
dec
popa
outsl
loope
jo
cwtl
xchg
inc
push
cmc
imul
scas
xchg
mov
test
bswap
push
xchg
mov
inc
rorb
cmp
sbb
dec
sub
jnp
xchg
push
jmp
mov
pop
dec
gs
in
xchg
bound
sbb
pop
dec
popf
roll
cwtl
ret
ljmp
mov
out
mov
mov
sub
dec
mov
shr
mov
sbb
outsb
mov
fs
insb
popa
mov
icebp
inc
lea
jne
jl
lock
push
pop
cmpsl
mov
or
in
sub
xor
fadds
lret
xchg
sub
and
adc
adc
fld
or
int3
mov
cmpb
mulb
std
and
sub
shlb
test
sub
outsl
cld
jp
cwtl
push
jo
and
xchg
test
pop
push
sub
pop
scas
and
mov
cld
inc
es
out
cwtl
adc
fadds
loopne
or
push
adc
call
push
push
addr16
jnp
sub
je
cmp
mov
xchg
or
and
sub
pusha
pop
aam
fists
sub
or
xor
xchg
in
dec
cmp
js
jg
decl
je
adc
ja
std
xorb
and
into
mov
jns
inc
out
testl
pushf
xor
and
add
out
lods
mov
bound
inc
push
call
sbb
jmp
jbe
lock
push
cmpb
pop
scas
cmpsb
andl
rclb
pushl
mov
stos
jbe
scas
dec
or
xchg
sbbl
cmp
ret
std
ljmp
adc
xor
jae
lret
pusha
jmp
mov
neg
enter
and
aam
add
fildll
std
ljmp
and
jns
movb
mov
xchg
insl
shlb
mov
fisttpll
jg
mov
int
das
mov
pusha
mov
jb
out
roll
jb
mov
jg
xchg
jp
test
sti
pop
pop
jecxz
sbbl
push
xor
fdiv
inc
jl
shll
cmp
inc
je
cwtl
push
sub
push
fildll
cs
mov
out
mov
jmp
sub
jmp
xor
push
adc
daa
daa
dec
out
imul
push
out
repz
and
shlb
pushl
jbe
call
push
aaa
addr16
mov
jge
js
cmc
cmpsl
jbe
push
lock
ljmp
push
in
test
inc
fsts
stos
data16
mov
sbb
sub
call
incl
jg
enter
cs
pop
adc
das
inc
stos
movsl
rorl
jp
push
lea
pop
sbb
sbb
fbstp
push
adc
and
dec
loope
rcr
outsb
into
or
jmp
out
popa
push
mov
and
fsubrs
lcall
stos
jno
cmp
pop
or
mov
dec
cmp
pop
jge
das
in
imul
ficompl
xchg
dec
test
pop
mov
push
in
push
adc
pop
and
sub
in
pop
jmp
test
pop
inc
push
out
sbb
js
mov
adc
xchg
and
push
fidivs
mov
push
dec
push
dec
inc
xchg
jl
adc
jnp
adc
pop
jg
outsl
xchg
sub
sub
dec
inc
ja
enter
test
shrb
in
and
clc
call
and
push
loopne
pop
mov
xor
sub
mov
shlb
push
lock
xchg
ljmp
jecxz
pop
idivb
xor
pushl
and
jle
es
jmp
inc
push
push
in
cmc
fisubrl
pop
push
mov
lds
pop
hlt
xchg
pop
stc
call
jecxz
push
xor
xchg
mov
add
out
popf
or
push
or
roll
and
mov
ret
lcall
in
sub
nop
dec
test
orb
add
jp
cmp
jno
fistpll
mov
push
xchg
mov
icebp
mov
add
sti
dec
cmpsl
in
xchg
mov
sub
lret
int3
and
cmp
rcrb
xor
or
sti
cld
or
push
jle
jge
testb
mov
lahf
xor
sbb
repz
and
movsl
adc
pop
adc
pop
jno
jbe
sub
in
mov
jnp
sbb
fstpt
xor
aam
push
jae
sbb
mov
jle
jg
out
jg
inc
or
in
inc
cmp
mov
push
insb
and
loop
ljmp
add
loope
iret
addb
sbb
gs
fsubl
pop
xorl
call
xor
test
jle
cwtl
ret
mov
mov
jne
xor
out
inc
dec
mov
mov
jb
and
popf
addr16
jl
push
es
add
jecxz
mov
mov
ljmp
data16
icebp
fcoms
sub
jge
into
sbb
add
movl
cld
paddd
popa
fcmovnbe
inc
test
mov
lea
sar
int
in
dec
aad
and
add
fadds
or
cmp
call
es
cwtl
pop
jmp
sbb
aam
out
dec
mov
push
call
sub
add
in
jnp
xchg
add
inc
js
pusha
in
jge
jmp
pop
cld
roll
add
in
push
cmc
cld
mov
mov
jg
jmp
stc
or
inc
xchg
inc
mul
popa
shrl
imul
sti
inc
mov
fdiv
push
enter
insl
loopne
int
sahf
jge
jge
mov
ljmp
dec
mov
xchg
leave
xchg
iret
and
pop
pop
orb
push
outsl
sbb
popa
vunpcklps
pop
dec
adc
cmp
jnp
jge
inc
lret
popf
cmp
lcall
cmp
adc
mov
rcl
mov
shrl
aas
inc
aam
ljmp
push
repnz
sub
stc
xor
hlt
sub
sbbb
fwait
clc
clc
xor
inc
inc
fcmovne
roll
std
xor
inc
pusha
dec
inc
insb
ror
sbb
mov
mov
pushf
call
mov
incl
mov
mov
int3
mov
push
shl
jg
push
jp
mov
jne
mov
sub
call
shl
jg
test
jg
decl
fcmovu
rcrb
mov
out
sahf
insl
outsl
cld
jp
pop
mov
or
jns
push
out
dec
push
addb
insb
insb
cmpsb
cmp
jne
pop
imul
incl
and
pusha
push
mov
addr16
add
xor
cmp
cli
push
lret
sub
jg
loop
fwait
repnz
in
or
cs
je
dec
sub
in
jae
cld
add
mov
out
push
rclb
repz
fs
jmp
inc
mov
sub
cmp
jnp
push
mov
fdivrs
in
mov
movsl
decl
inc
sbb
jno
mov
mov
dec
data16
adc
mov
jg
incl
cmpl
jmp
dec
mov
sahf
xchg
mov
lcall
add
mov
and
lret
cmpsb
test
aam
sub
pop
inc
adc
inc
sar
lock
xor
es
cmpsl
lea
inc
pop
or
or
lock
adc
notl
inc
testb
insl
call
pop
loop
mov
in
fists
outsb
cmp
fcomi
in
lock
mov
stc
shrl
je
sbb
sub
mov
push
adc
fistpll
in
or
sbb
mov
bound
mov
cmp
int
jmp
movsb
mov
inc
jo
push
push
push
sub
pop
mov
rcll
lcall
into
jecxz
mov
pop
lret
pop
imul
insb
imul
xchg
adc
pop
pop
and
aam
test
and
pop
adc
popf
in
lret
and
mov
lcall
add
push
sub
es
pop
mov
push
mov
inc
xor
fsubl
sbb
incl
repnz
mov
dec
mov
or
cmpsl
test
std
xor
xchg
add
loope
fidivl
ja
pop
mov
ds
lahf
mov
cs
cmpl
rclb
and
push
push
xor
mov
test
sub
cmp
adcl
jb
call
adc
xor
xchg
and
cmpsl
and
ret
dec
and
pop
lods
aas
sar
roll
subb
or
ljmp
push
xor
iret
das
out
mov
fucomi
mov
or
add
insb
incl
pop
stc
add
or
in
outsb
mov
jae
xchg
cmpsl
adc
jmp
adc
repz
int
xor
xor
adc
cmp
mov
call
out
lods
inc
or
xchg
fcmove
test
mov
loop,pt
adc
sar
xchg
cmp
cltd
inc
adc
mov
movsb
sbb
push
jle
mov
call
fcmovb
pop
inc
sbb
test
rorb
and
or
xor
sub
out
xchg
cmc
cmpsl
cmp
in
ljmp
mov
xor
push
adc
sbb
or
call
adc
dec
mov
pusha
push
hlt
call
cli
sbb
xchg
aas
pushf
push
push
pop
dec
mov
sbb
sub
cld
adc
repz
mov
xchg
mov
push
mov
and
aam
aas
pop
and
push
xchg
pop
push
pop
inc
in
dec
dec
nop
mov
cld
stos
insb
notb
hlt
in
mov
imul
mov
push
jbe
les
sub
dec
or
push
call
daa
insb
fdivrs
and
loopne
pop
and
cld
inc
daa
and
xchg
sbb
aas
pop
mov
xor
decl
cli
ret
ds
or
pop
stos
inc
in
test
imul
push
cld
jmp
daa
mov
mov
or
pop
mov
rcrl
cmp
pushl
sbb
ret
movsl
sbb
add
mov
xchg
loopne
pop
test
decl
mov
pop
in
sub
xor
pop
inc
push
add
fsts
test
lcall
ficoml
mov
push
adc
pop
clc
cli
cmp
xor
pcmpgtb
jmp
mov
loop
iret
xlat
push
sub
fsts
daa
pop
shrb
mov
mov
pop
lock
ds
inc
movsb
fsubr
cmp
movsl
sbb
or
test
or
ljmp
xor
pop
push
mov
or
jb
arpl
sbb
mov
adc
pop
mov
aaa
std
cmp
shr
dec
lahf
int
sub
push
mov
jp
pop
clc
std
decl
adc
bound
cmc
cmp
insl
movsb
jne
inc
fwait
lds
push
test
cmp
xchg
ds
add
mov
cmp
inc
pushl
sbb
mov
clc
out
sub
xor
into
jp
mov
hlt
mov
jg
ja
jmp
pop
xchg
out
jecxz
fisubrl
into
inc
test
cmp
lcall
frstor
push
jb
lods
jnp
xchg
jne
inc
outsl
mov
add
nop
das
fbstp
push
sahf
rorl
xor
decb
mov
enter
jecxz
decl
sbb
push
call
xor
inc
push
sub
xchg
xlat
mov
rcr
adcb
jl
mov
mov
jle
jnp
push
mov
jmp
cmp
fcmove
outsl
mov
pushl
bound
or
inc
pushf
sbb
xorl
out
cmp
cmp
pop
int
lock
fmull
push
stos
movsl
sbb
or
iret
idivb
or
rcl
in
call
mov
sbb
inc
sbb
and
ret
cmc
pop
ret
mov
xchg
dec
sub
add
xor
dec
ficoms
add
popa
inc
stos
adc
bound
pop
sbb
js
mov
adc
fisubl
inc
inc
rcrl
push
bsr
insl
and
call
push
lret
pop
jg
push
cs
add
inc
cmp
jmp
mov
pop
lock
in
mov
test
sub
inc
call
pop
cld
decl
ss
inc
or
lea
mov
aaa
xor
sub
incl
mov
rorb
rclb
adc
push
add
cmp
xchg
imul
mov
outsl
mov
repnz
mov
inc
jne
andb
jp
pop
mov
enter
jecxz
sbb
inc
mov
adc
mov
sahf
push
push
pop
push
push
lcall
dec
addr16
icebp
mov
rolb
decl
mov
inc
ja
dec
jl
jmp
daa
jnp
std
fisttps
iret
inc
popl
popa
test
mov
inc
mov
mov
sbb
cmp
into
xor
incl
outsl
call
and
dec
sahf
stos
mov
mov
pop
hlt
pushl
pop
mov
nop
dec
in
pushf
and
ret
cltd
das
fcompl
fwait
xchg
jmp
lods
pop
dec
or
ja
in
cmp
sbb
bound
jae
pop
shrb
shlb
lahf
fistl
jg
jno
mov
push
lods
xor
mov
cmp
mov
jmp
call
xchg
cmp
lahf
mov
hlt
adc
ret
lret
in
adc
incl
mov
cwtl
in
lods
dec
jb
into
call
sub
mov
mov
ljmp
adc
sahf
push
adc
sbb
dec
loope
jb
movsb
add
pop
jl
pop
push
call
and
pop
jno
je
sbb
dec
popw
enter
ss
cwtl
lret
rolb
clc
imul
pushf
pushf
pusha
jo
ret
jecxz
pop
iret
icebp
sbb
jle
out
push
mov
in
fisubs
jae
incb
repz
test
adc
je,pt
movsb
sub
sbbb
jmp
movsl
and
insl
inc
mov
cmp
out
push
push
testl
mov
rolb
out
push
push
sbb
incl
cmpsl
iret
test
inc
xchg
add
sahf
dec
inc
ret
test
xor
mov
sub
ljmp
jbe
or
push
lods
mov
add
inc
pop
lea
mov
and
mov
shr
or
ljmp
sbb
fucomi
push
std
call
sub
add
dec
cmp
sbb
jnp
sub
leave
dec
test
jg
js
sub
test
stos
decb
lods
lahf
sbbb
rclb
jg
call
repz
and
lret
mov
ss
mov
xchg
jge
fs
or
mov
rcr
sub
ljmp
sub
frstor
or
lods
mov
or
sub
imull
xchg
adc
das
and
mov
sti
push
pop
lds
fldcw
pop
pop
pop
inc
dec
cmp
cmp
lret
aas
add
pop
dec
inc
cld
testl
dec
sbb
or
inc
decl
outsl
xor
repnz
mov
jge
in
inc
adc
jbe
cmc
mov
dec
rcll
loopne
xchg
sbb
jae
stos
cmp
ret
fldt
xchg
pop
xor
shll
push
cwtl
lcall
pop
jb
in
fs
xor
sbb
sbb
dec
sarl
sar
jmp
rorb
sub
sbb
rclb
fs
pop
shlb
pushf
push
dec
and
lret
cli
lcall
xlat
jmp
add
out
cli
cmpsl
or
ljmp
aam
hlt
or
sbb
insb
sub
movsb
icebp
stos
pop
cld
or
push
push
push
pop
inc
stos
ret
cwtl
stos
and
lret
push
or
mov
push
sahf
mov
out
and
jg
incl
add
mov
push
out
xchg
int3
scas
dec
fs
lods
pop
jb
bound
into
inc
decl
cli
or
cmc
sub
pop
sub
arpl
push
fsubrl
in
fstl
data16
pushl
sbb
repz
push
pop
cmp
nop
ja
xor
fbld
dec
incl
dec
jne
fdivs
dec
rolb
fldt
stos
mov
mov
pop
mov
mov
mov
cmp
sti
scas
pushf
mov
in
rolb
daa
es
dec
pop
movsb
lock
pusha
in
lret
stc
or
lcall
rcr
daa
push
aaa
and
xchg
and
sbb
pop
cld
mov
inc
push
imul
pop
adc
xchg
insb
ljmp
cli
dec
ds
adc
dec
push
test
and
mov
mov
and
inc
or
mov
iret
mov
stc
xchg
add
lea
sub
scas
lcall
repz
adc
out
enter
out
test
insl
mov
sbb
sub
movsb
fistl
or
push
inc
out
test
cmp
shl
and
testl
push
inc
pop
popa
mov
into
pop
fimull
pop
mov
ret
in
fdivl
pop
lock
lds
cmp
call
inc
xchg
mov
shr
inc
ja
or
lret
out
mov
sti
mov
outsb
mull
dec
stos
mov
pop
movsl
out
mov
decl
jns
xor
mov
rcll
mov
inc
xchg
and
xchg
inc
adc
call
inc
test
arpl
frstor
push
jno
ret
inc
scas
aad
std
xor
nop
mov
xchg
cli
jb
mov
fists
jle
cs
pop
loop
test
cmpsl
shrl
in
repnz
mov
mov
jg
pushl
jl
jns
or
sub
inc
sbb
dec
or
loop
mov
rclb
push
lret
daa
push
pop
lret
shll
pop
xchg
dec
jecxz
pusha
sub
push
sub
rorl
call
fmuls
out
mov
mov
out
ror
mov
inc
dec
repz
sbb
jmp
xchg
sahf
push
lcall
call
adc
mov
xchg
dec
rclb
sbb
lcall
insb
movsl
cmpb
ret
adc
pop
aas
xor
inc
sti
inc
out
lcall
sub
aas
ret
cmp
js
xchg
and
scas
sub
xchg
mov
lcall
add
xchg
sti
cmpsb
dec
cli
cmp
xchg
cmpxchg
jg
mov
jmp
gs
jl
push
ret
mov
outsb
jle
mov
roll
mov
dec
adc
aad
andb
lret
imul
aad
add
lcall
in
xor
imul
andl
das
dec
jns
das
cmp
call
cld
adc
addb
xchg
cmp
xchg
shlb
xor
lea
pop
and
pushl
xchg
push
iret
ficompl
fstps
add
and
xor
ljmp
out
clc
push
fildl
cmp
push
xor
fisttpll
lea
sbb
lods
stos
mov
call
adc
pop
pop
hlt
xor
ret
sub
or
call
int3
insb
jne
lcall
sub
mov
ss
das
imulb
sbb
sahf
adc
xchg
or
out
jmp
loope
mov
icebp
jle
ror
mov
cmp
xchg
in
and
lcall
push
jecxz
xor
outsl
outsb
stc
mov
sbb
mov
mov
pop
shrb
mov
mov
cmpsl
xchg
out
das
lret
mov
in
xor
jmp
push
sub
jne
push
and
orl
ficompl
and
pushf
sti
in
pop
mov
pop
sti
decl
lock
add
imul
les
inc
jb
sub
push
ffreep
pop
mov
cmp
push
adc
push
fwait
loop
xor
in
or
jno
jmp
es
stos
cs
repnz
xor
add
jp
ss
push
mov
jnp
pop
call
cld
pop
jno
inc
les
dec
cmpsb
inc
aad
and
in
sbb
in
outsb
xlat
dec
mov
inc
jne
inc
mul
push
push
mov
pop
addb
mov
out
sub
inc
jl
adc
addl
adc
cmp
cmp
std
and
lods
not
mov
inc
jl
scas
outsb
cmp
xor
push
adc
pop
icebp
incl
enter
sub
outsl
aaa
fisttps
nop
imul
jmp
sub
dec
adc
sub
dec
ret
mov
outsl
xchg
es
std
sbb
jb
fildl
cmpl
ljmp
fidivs
mov
cmp
lahf
push
or
xchg
lock
imulb
dec
sub
jl
sbb
pop
js
pop
es
sbb
pop
dec
sub
sub
push
cmp
es
icebp
decl
lahf
lcall
cltd
lret
adcb
or
jg
pushl
nop
xchg
sbb
int
mov
inc
cmp
dec
shll
dec
cmpsl
mov
insl
xor
fwait
jle
negl
lret
push
jbe
add
bound
pushl
std
decl
sbbl
or
mov
or
scas
mov
adc
aad
lcall
add
push
into
out
orb
pop
pop
add
loope
push
std
out
nop
dec
push
mov
hlt
or
ljmp
lret
xchg
popf
lret
or
pop
ss
pop
shl
call
lea
scas
es
push
jae
jmp
clc
push
lret
pop
sbb
inc
ret
sbb
clc
pop
jmp
test
std
xchg
in
dec
mov
rclb
bound
test
add
loop
jg
idivb
mov
loop
fstp
mov
stos
xchg
pusha
cmp
mov
call
out
arpl
jae
adc
les
push
pop
frstor
fwait
mov
adc
out
roll
cld
mov
dec
negl
and
popa
pushf
mov
cmp
pop
ret
ret
cmp
sbb
push
sub
jmp
cltd
lret
adc
pop
cmp
add
cltd
mov
xlat
mov
ljmp
cli
ljmp
fstpl
aad
cmpl
push
mov
sub
push
xchg
jmp
xor
xor
shll
push
cmp
fwait
and
imul
inc
xor
pushl
insb
les
dec
xchg
xlat
xchg
mov
pop
ret
jo
adc
cmpl
cmc
jmp
fisttpll
lcall
push
jno
xor
jae
incb
loope
shr
xor
outsb
les
subl
xor
in
jg
shl
or
jnp
aam
jecxz
aaa
fdivs
fcomip
js
loop
lret
mov
xchg
aam
inc
lods
repz
in
pushl
aaa
mov
xchg
push
loope
gs
in
jns
inc
fcmovu
lret
cmpsl
mov
cmc
aam
lock
push
add
adc
aaa
inc
xor
leave
adc
lcall
cs
jl
fwait
shlb
sbb
jb
lods
xor
mov
dec
mov
cmpsl
arpl
and
jnp
outsb
fsubrl
icebp
push
divb
movsb
pushf
lahf
or
pushl
cld
mov
sbb
push
nop
cmp
xor
sbb
adc
adc
mov
mov
notb
xchg
xchg
jecxz
push
lret
jle
cld
push
movsl
dec
xchg
cld
in
push
add
fcomps
lret
jno
mov
sbbb
sbb
sbb
addr16
jne
neg
cmp
pop
pusha
mov
fidivl
aas
xor
icebp
iret
or
inc
ljmp
mov
and
xchg
or
clc
fistl
inc
cltd
popa
cltd
cmp
call
int
push
jmp
xchg
xor
movsb
es
cmp
sub
jge
test
mov
addl
pusha
shll
in
mov
call
and
xchg
jno
xchg
cli
xor
test
enter
jge
mov
xchg
jmp
pop
insb
pop
and
sbb
sub
push
pop
lock
mov
inc
inc
lret
add
lds
xchg
sub
addr16
xchg
imul
pop
and
or
xor
mov
push
fwait
adc
cld
loope
insl
push
add
ret
xchg
outsl
imul
sbbl
adc
jmp
jo
repz
inc
add
mov
adc
inc
fwait
add
cwtl
into
out
xor
into
lea
loopne
push
jmp
jp
jl
xor
unpcklps
stc
push
inc
and
fisubl
ljmp
repnz
push
outsb
xor
cmpsb
int3
push
int3
add
incb
bound
mov
lock
in
scas
jmp
iret
adc
jne
sbb
mov
jecxz
and
push
fwait
arpl
dec
dec
scas
inc
xchg
nop
push
fdivp
std
repnz
out
cwtl
xchg
pop
ds
inc
dec
mov
out
jg
repnz
enter
xchg
test
mov
clc
sbb
inc
subb
call
jb
cmp
ja
mov
subl
cmp
decb
mov
mov
mov
data16
pop
xchg
lock
std
std
lea
push
pushl
inc
rorb
das
push
cltd
adc
ss
and
jg
decl
jne
in
mov
push
mov
push
pop
roll
and
add
incl
mov
mov
inc
push
rcll
xchg
push
push
scas
movsb
sub
pushl
or
stos
mov
enter
fisttpl
fisubrl
adc
pop
push
or
add
push
jge
sbb
jo
dec
adc
ret
outsb
jns
loope
pushl
xchg
frstor
dec
xlat
jbe
cltd
ja
aad
in
fidivl
movsb
stos
out
mov
push
insb
jmp
dec
xor
and
cmp
out
clc
call
push
pop
xchg
dec
mov
xchg
shlb
xorl
lea
push
rorl
cmp
int
aas
rorl
ret
jb
or
sub
inc
or
cld
sub
daa
pop
dec
out
jne
cmp
jge
adc
and
aam
pop
enter
adc
test
jge
jno
push
xor
aaa
push
inc
negb
mov
rorb
sbb
xchg
xchg
mov
ret
jnp
jnp
enter
sub
outsb
lcall
xor
int3
dec
jge
imul
aaa
inc
and
aam
push
enter
sahf
aaa
out
jg
test
or
loope
into
push
add
das
mov
mov
sub
mov
xchg
jecxz
int3
sbb
mov
adc
inc
inc
xlat
repz
jg
jae
or
pop
js
fdivs
inc
sub
mov
outsb
cmc
ss
jg
clc
frstor
push
mov
dec
xchg
jbe
lahf
mov
test
fidivrl
movsb
mov
jne
xlat
jl
aas
push
jle
mov
pusha
cmp
int3
or
fsubs
daa
or
push
sbb
mov
call
in
sub
andl
cs
stos
cmpsb
mov
xchg
imul
cld
inc
leave
mov
mov
icebp
cmpsl
pop
out
aaa
fnstcw
mov
in
dec
jnp
insb
pop
lret
mov
cmp
lea
add
cmc
add
outsl
call
cmpsl
adc
sub
ss
mov
cmp
fisttpl
aaa
jmp
dec
push
lret
out
fisttps
push
shrb
jg
pusha
loope
cmp
xchg
in
insl
xchg
bound
cmp
cmp
push
or
popa
movsb
mov
pop
clc
inc
mov
mov
rcrb
cmc
mov
aam
fcompl
xchg
fmull
stc
call
pop
aam
adc
imul
jp
add
ror
jge
pop
stc
inc
andb
inc
loopne
pop
lods
insl
jge
jns
mov
mov
and
aam
push
rcrb
es
push
xchg
test
fwait
cmc
pop
cld
decl
sub
shr
add
push
imul
test
mov
jecxz
in
pop
pop
mov
rcrb
pop
dec
fcmovnb
xchg
divb
mov
cmpb
add
enter
adc
sti
out
jo
aas
fsubrl
dec
shlb
pop
push
into
sar
int
cmp
fbld
adc
pop
lea
add
gs
aaa
jg
push
out
out
mov
push
iret
pop
mov
mov
dec
addl
insb
fidivs
dec
add
pop
mov
fwait
cmpsb
mov
or
pop
popf
xchg
mov
jae
js
inc
mov
cmp
js
rolb
xchg
div
test
aas
or
xchg
add
movsl
mov
aaa
jg
stos
les
inc
pushf
mov
sar
mov
aad
repz
jmp
xchg
mov
ret
jle
push
pushf
iret
lcall
mov
adc
pop
cltd
in
jg
repz
push
dec
loopne
lcall
and
imul
pushl
jle
add
xchg
call
mov
adc
push
sti
fisttpll
mov
sbb
dec
inc
ja
push
pushl
jns
push
jle
es
mov
and
adc
test
mov
mov
pushf
xchg
arpl
xchg
push
mov
ljmp
mov
pop
leave
mov
cmp
xchg
decl
fcom
inc
cmc
inc
pop
adc
push
adc
fisubs
cs
mulb
jle
dec
out
test
ja
push
lds
pop
scas
lahf
mov
lahf
sub
cld
pop
and
outsb
xor
jb
sbb
mov
dec
jmp
cld
lahf
adc
outsl
xchg
scas
jecxz
inc
stos
ret
pop
dec
cmp
mov
mov
add
fs
adcb
mov
or
mov
aam
add
jl
std
push
mov
or
sbb
rclb
in
ja
mov
sti
out
dec
and
cmp
outsb
outsl
cmp
frstor
gs
pushl
and
jbe
cltd
mov
data16
ss
inc
stos
cmpsb
idivl
lcall
mov
lds
pusha
adc
push
pop
push
jle
sbb
decl
or
mov
cmp
call
fwait
push
bound
int
jae
mov
in
sbb
jg
xlat
iret
outsb
lods
cmp
xor
outsl
push
mov
dec
mov
imul
rep
stos
in
cmp
inc
sbb
shrl
mov
xorl
xlat
add
or
jecxz
sahf
gs
call
push
xchg
decl
stc
cs
fcoms
pop
sub
push
push
pop
jno
cmp
lahf
pushl
sbb
test
popf
pusha
loopne
outsb
nop
aas
leave
frstor
outsb
push
mov
jg
mov
adc
xor
mov
inc
stos
sahf
lret
addr16
imul
and
rolb
xchg
mov
cmc
aad
pop
xchg
out
pop
std
outsl
clc
subl
cs
inc
pushw
fsubr
fxch
cli
fistl
xchg
movsl
lock
in
ror
pop
sub
push
jg
xlat
pop
sub
out
jne
jl
jge
cmp
popa
sbb
jg
jle
and
aam
push
jo
fisubs
adc
test
int
mov
dec
stos
add
andb
adc
test
cwtl
cwtl
add
aaa
aaa
js
pop
inc
rorl
mov
sti
clc
jg
pushl
mov
sub
outsb
das
cmp
jl
jb
orl
push
cmp
jge
pop
insb
jmp
icebp
jg
mov
dec
or
mov
push
jo
nop
cs
std
jg
shlb
dec
fimull
loop
dec
sub
pushl
rcrb
jge
push
mov
inc
adc
sbb
mov
mov
je
je
and
dec
pop
jbe
aas
decl
lcall
cmp
jmp
dec
stos
jmp
inc
or
rcrl
out
decl
cwtl
das
or
lret
dec
ds
movsl
test
jg
idivb
xorl
cs
xchg
pop
cmp
stc
mov
ret
ja
and
int3
mov
xchg
lahf
incl
sub
dec
dec
and
aam
ljmp
pusha
mov
ja
lods
mov
xchg
jno
push
cmp
popf
je
xchg
push
jbe
xor
push
inc
imul
roll
repz
and
sbb
dec
call
call
aas
cmp
pop
aas
je
nop
aas
lods
aas
add
pushl
cmp
je
js
test
mov
xchg
cmp
incl
cmp
fstpt
or
sbb
pop
cmp
xchg
cmp
cmp
cwtl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
decl
cmpl
lds
jl
mov
mov
pop
cld
ds
aas
sub
inc
aas
popa
aas
lahf
aas
stos
aas
in
cmc
adc
add
push
inc
push
xor
xor
mov
xchg
xor
pushl
and
xor
xor
xor
xor
mov
lahf
xor
push
xor
xchg
xor
ljmp
xor
cmp
pop
xor
xor
gs
xor
xor
xor
xor
pop
xor
adc
and
push
xor
cmp
in
jp
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
ss
jg
std
add
movsb
aaa
shll
in
add
pop
cmp
mov
cmp
lcall
cmp
push
cmp
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xlat
cmp
lahf
ds
aas
lcall
aas
and
sub
cmp
dec
aas
pop
aas
insl
aas
js
mov
mov
aas
fstpt
loopne
ljmp
pop
mov
mov
sbb
xor
pushl
lcall
xor
xor
xor
xor
xor
xor
xor
xor
incl
sti
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
push
xor
pop
xor
aaa
inc
aaa
jbe
lret
aaa
jnp
cmpb
cmp
cmp
cld
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
ds
sarl
mov
daa
aas
xchg
aas
hlt
ja
lahf
cmpsb
loopne
adc
cmp
lea
cwtl
xor
pop
add
loop
lcall
xor
test
xor
xor
xor
xor
xor
xor
xor
xor
jg
lcall
xor
xor
xor
xor
xor
xor
call
xor
xor
xor
xor
xor
xor
insl
xor
mov
xor
in
xor
mov
xchg
aaa
push
aaa
dec
jbe
mov
inc
aaa
aaa
loopne
divb
sbb
cmp
cmp
cmp
cmp
push
cmp
outsb
cmp
shrl
mov
mov
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
inc
jp,pt
jmp
push
aas
mov
jg
aaa
fwait
lock
xchg
xor
shll
fidivs
in
cld
jg
pushl
repz
xor
xor
xor
xor
outsb
repz
xor
inc
xor
aas
out
push
shl
xor
jb
xor
add
xor
inc
xor
mov
xor
lret
xor
cld
xor
sub
cmp
cmp
cmp
inc
cmp
aas
arpl
cmpl
mov
cmp
cmp
cmp
cmp
cmp
mov
pop
cmp
cmp
cmp
jge
loopne
cmc
cmp
icebp
ljmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
jbe
stos
cmp
sbb
sub
xor
jne,pt
cmpb
ds
mov
cli
mov
ss
cmp
aas
sub
inc
inc
xchg
decl
aas
scas
aas
mov
aas
fidivrl
loop
call
aaa
xchg
imul
ja
xor
xor
inc
xor
cmc
pushl
inc
xor
push
xor
loope
in
xor
xor
xor
and
xor
inc
xor
icebp
jg
jne
mov
scas
xor
xor
xor
xor
xor
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
xor
xor
xor
mov
les
inc
aaa
jae
cmpsl
cmp
aaa
adc
cmp
adc
xor
mov
out
call
stos
pop
shlb
or
sbb
jp
enter
imul
cmp
jbe
cmp
push
mov
mov
add
xchg
lcall
pushl
xor
xorb
xor
lcall
mov
cli
fmull
jg
xor
icebp
push
add
or
adc
sbb
and
push
xor
add
cmp
ss
ss
ss
ss
or
mov
nop
ss
mov
ss
mov
ss
in
ss
xlat
ss
mov
xor
add
push
aaa
fwait
aaa
mov
div
aaa
lds
out
add
je
jp
mov
nop
cmp
cmp
clc
mov
cmp
cmp
cmp
cmp
pop
add
or
mov
ljmp
cmp
pop
cmp
outsb
cmp
xchg
cmp
cmp
cmp
cmp
hlt
jg
push
add
push
cmp
mov
cmp
cmp
pop
cmp
jo
ljmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cli
add
or
adc
cmp
insb
inc
jb
cmp
mov
cmp
aam
loop
jmp
push
cmp
adc
push
ds
ds
js,pt
ds
ds
ds
push
je
stc
fstpt
loopne
in
ds
mov
sbb
push
dec
aas
push
aas
cmc
mov
in
out
jp
nopl
xor
popf
xor
stos
std
pushl
xor
xor
xor
inc
mov
js
cmc
mov
test
lcall
xor
fnsave
in
ljmp
mov
into
insb
xchg
mov
mov
cwtl
xor
ret
push
pushl
in
xor
xor
xor
xor
mov
xchg
xor
xor
dec
hlt
push
mov
xor
xor
insb
push
dec
xor
xor
xor
cli
ljmp
xor
xor
xor
mov
xor
add
add
pushl
push
xor
jns
cmpl
mov
jecxz
lock
divb
and
aaa
ss
incl
dec
ss
ja
or
aaa
dec
aaa
push
aaa
arpl
xorb
aaa
mov
aaa
mov
aaa
add
push
cmp
fidivrl
cli
jg
cmp
cmp
cmp
cmp
cmp
jg
sbb
cmp
push
cmp
jp
xchg
test
cmp
out
pop
jl
cmp
cmp
jns
jle
call
mov
stos
cmp
cmp
cmp
cmp
pushl
xor
add
dec
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
ljmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
jmp
idivb
push
adc
cmp
push
jne
std
clc
inc
out
cmp
fcmovu
cmp
cmc
cmp
ds
repnz
daa
movsl
test
out
lret
jg
xorb
stos
mov
xor
xor
xor
popf
xor
sbb
push
test
xor
jp
jle
xor
inc
sbb
xor
xor
xor
xor
xor
pop
mov
mov
jmp
add
xor
cli
out
cli
xor
mov
mov
in
ljmp
push
push
aaa
push
aaa
and
sub
xor
aaa
cmp
push
aaa
pop
aaa
fs
imul
pushl
pushf
aaa
mov
aaa
mov
ret
push
jmp
pushl
add
outsb
cmp
subb
cmp
cmp
cmp
cmp
cmp
es
incl
loopne
cmpsb
es
mov
cmp
cmp
hlt
pop
and
cmp
cmp
cmp
into
adc
sbb
and
sub
cmp
cmp
mov
or
aad
xchg
test
push
dec
add
xor
out
add
or
sub
add
flds
loopne
mov
mov
push
inc
decl
int
dec
mov
out
add
addr16
shrb
repz
cmp
sbb
xchg
jl
xor
add
pusha
frstor
jmp
add
cs
stos
das
mov
test
mov
fsubr
and
out
clc
or
dec
outsb
or
xchg
in
loopne
push
fsubl
and
dec
and
add
sub
add
dec
cmp
andb
pop
dec
into
sbb
jbe
dec
mov
leave
lods
and
fwait
call
pop
xchg
insb
adc
sub
push
fs
mov
je
pop
in
jns
pop
xchg
nop
lods
lock
pusha
cld
out
int
call
js
clc
add
jo
push
inc
push
js
outsb
shrl
xchg
test
jle
cs
push
in
insb
aaa
fcmovnb
ds
pop
dec
js
mov
add
cltd
int
ror
mov
insb
mov
xchg
mov
adcb
xchg
mov
sti
mov
mov
scas
add
and
push
pusha
jl
es
inc
imul
cmpsb
aam
xchg
mov
loopne
pop
push
scas
jecxz
popf
stos
lds
loopne
stos
cmpsb
mov
gs
mov
scas
add
fdivr
aad
outsb
in
mov
fistpl
mov
mov
ljmp
inc
dec
outsb
mov
jl
rcr
add
in
out
clc
push
mov
fisttpl
fsub
repz
nop
rorb
call
shl
cmpsb
loop
mov
push
cwtl
mov
std
loopne
ret
fistpl
xchg
add
jecxz
pusha
mov
fidivrs
mov
cmpsl
mov
leave
rep
aad
mov
fdivl
xchg
outsb
mov
xlat
jnp
mov
aad
push
pop
mov
out
ss
insb
outsl
ds
cmc
stos
push
fidivs
int
ficoms
mov
jnp
or
jge
xchg
push
mov
lds
in
mov
push
mov
imulb
outsb
cmpsb
loop
stc
ds
data16
mov
sti
pop
cmp
push
cmpsb
lret
ds
imulb
cmpsb
outsb
out
push
fdivl
mov
fisubrs
add
fadds
fs
dec
pop
and
jle
jg
and
call
daa
xor
push
cmp
es
call
xor
sub
data16
pop
in
imul
cmp
push
inc
adc
mov
test
daa
pop
and
jnp
jg
xorl
pop
sub
daa
adc
pop
cmpl
cmp
lahf
pop
xor
add
add
mov
inc
ljmp
pop
jbe
sbb
add
adc
push
push
in
sbb
add
and
and
pop
sbb
iret
pushl
push
add
sub
or
sub
add
sbb
or
add
adc
repnz
sub
inc
dec
repz
or
add
fucomip
or
sbb
add
add
outsl
or
inc
mov
push
add
sbb
lahf
sbb
add
lds
dec
add
adc
sbb
add
cmp
adc
or
adc
movl
inc
ret
pop
pop
and
add
dec
sbb
mov
add
es
inc
incl
jns
sbb
xchg
pop
push
adc
insl
lds
out
aas
aas
dec
dec
and
and
add
dec
outsb
add
jl
or
sbb
call
pop
mov
insl
sbb
fs
and
pop
aaa
adc
inc
punpckldq
push
pop
adc
stc
and
adc
inc
cmp
cld
push
pop
cmp
dec
and
or
dec
leave
dec
and
xor
mov
push
repnz
gs
arpl
adc
push
cmp
dec
push
fidivl
incl
cld
add
lock
xor
daa
daa
sysret
shl
jbe
addb
incb
pop
jg
add
in
ss
test
cmpb
movsb
xor
cld
add
add
aas
push
jg
cmp
mov
aad
inc
outsb
dec
sub
sbb
scas
mov
nop
and
and
cmp
mov
inc
and
mov
pusha
add
mov
cmp
shll
addb
mov
mov
or
insl
or
add
call
and
and
pusha
mov
xor
mov
or
sbb
xchg
add
mov
test
nop
cwtl
nop
cmp
add
add
fdiv
sarb
xorb
pop
sbb
sbb
mov
or
cmp
pop
sub
and
cmp
sbb
divb
cmpb
outsl
xor
xor
movsb
cwtl
cmp
sub
in
inc
cmp
add
adc
push
add
jne
sub
xor
inc
roll
xchg
popa
shlb
sbb
mov
mov
sub
and
xchg
shlb
push
out
and
bnd
pop
push
xor
xor
aam
call
xor
adc
les
nop
popa
int3
mov
add
sub
mov
mulb
add
push
aas
push
ret
loope
and
fnstenv
outsb
stos
roll
mov
mov
push
xchg
loop
inc
mov
push
ret
sub
sahf
sub
dec
sub
adc
sbb
stos
addr16
fstps
xchg
mov
int3
adc
sbb
lds
pusha
lock
jnp
xchg
cwtl
mov
cmp
or
mov
inc
lahf
jnp
sbb
mov
inc
sbb
sub
sub
shl
ljmp
mov
into
fists
or
and
mov
mov
imul
push
or
addr16
mov
test
inc
sbb
adc
shrl
cmc
rorb
push
ja
rcl
adc
or
rclb
fld
nop
mov
mov
lcall
les
and
push
fsubr
jo
mov
add
sbb
addb
inc
sbbb
sbb
xchg
notb
mov
add
daa
je
js
jmp
or
outsl
xchg
jnp
and
mov
adc
add
and
pop
push
or
mov
add
push
mov
and
outsl
ret
and
xor
mov
ret
call
fmull
jmp
push
add
es
push
add
mov
test
xor
sub
inc
sbb
mov
adc
faddl
stos
add
sbb
lock
and
mov
jo
dec
lds
ja
pop
in
pop
add
mov
inc
xchg
stos
loope
sti
mov
dec
mov
dec
xchg
subb
push
xchg
loope
bound
jge
out
sub
add
test
pushf
inc
outsl
mov
dec
or
frstor
lods
mov
rcll
rolb
lock
mov
xchg
cmp
xor
test
nop
popa
je
outsb
sub
subb
shlb
or
cs
out
or
sbb
sub
inc
outsl
and
jo,pt
mov
adc
xor
add
jno
popa
xor
adc
arpl
cmp
pushf
or
add
mov
and
pop
pop
xchg
or
ljmp
ret
es
cld
pop
shlb
and
mov
and
ja
push
push
das
mov
pop
push
mov
lea
push
imul
pop
adc
cmp
xor
pop
stos
syscall
inc
js
arpl
aam
bsr
or
rep
pop
and
push
aaa
rclb
sbb
adc
outsl
pop
inc
addl
mov
add
and
push
ret
cmp
ret
sbb
adc
iret
and
and
adc
or
and
outsb
adc
mov
xchg
adc
mov
add
fnstsw
in
les
in
mov
insb
mov
adc
inc
xchg
fidivrl
add
push
rolb
jne
mov
loope
ds
call
mov
adc
or
add
bnd
xchg
lods
mov
shlb
and
mov
fsubs
push
test
sbbb
cmp
jg
lods
mov
and
std
lahf
mov
push
fst
sub
clc
subb
mov
in
jo
push
sbb
mov
push
or
loope
lods
lret
popa
push
add
mov
inc
jp
xchg
jo
xchg
and
mov
push
push
mov
jnp
and
mov
mov
sbb
cmp
loop
les
inc
movsb
and
andb
push
pop
adc
js
pop
add
inc
fsubl
out
xor
jno
outsb
clc
sbb
or
dec
push
rolb
lds
push
enter
sbb
cs
cs
mov
and
or
stos
neg
aam
add
push
xchg
adc
clc
inc
cmp
sbb
adc
mov
jnp
call
fdivl
xorl
icebp
loopne
fnstsw
inc
adc
sub
add
push
xchg
insl
add
test
ret
stc
out
jg
out
sbb
call
xchg
add
shrb
adc
xchg
mov
cwtl
dec
pop
test
mov
addl
sub
mov
mov
mov
shl
test
push
add
pusha
mov
mov
ljmp
into
out
mov
sbb
dec
add
jg
cmp
fsubs
jmp
inc
or
or
xchg
and
mov
testl
jmp
mov
push
sti
and
inc
xor
mov
mov
rclb
mov
pop
mov
sbb
ja
push
adc
xor
sbb
push
ljmp
xchg
mov
mov
aas
mov
mov
dec
jno
mov
adc
popf
push
sbb
inc
les
cmc
addb
imul
sbb
dec
mov
inc
mov
dec
jle
sub
sub
mov
inc
mov
inc
or
adc
popa
ret
mov
add
xchg
push
xchg
jp
lret
jmp
enter
shrl
jecxz
inc
or
inc
xor
add
lods
mov
xchg
add
frstor
pop
push
and
add
or
bound
adc
jg
adc
adc
decl
push
inc
sub
add
out
add
addb
xchg
scas
in
xlat
add
fcomp
sub
and
fsubs
outsb
rorl
sub
inc
in
xor
cmp
or
das
add
shll
fcoms
les
in
mov
ret
in
leave
das
imul
sub
adc
or
lods
inc
xchg
xlat
sub
cmpsb
call
bound
pop
ja
add
in
push
in
lea
mov
shrl
in
test
loopne
outsb
addl
adc
inc
xor
out
add
addb
sbb
add
inc
lcall
sub
add
push
add
bound
cltd
addr16
add
iret
add
and
mov
loope
xor
add
shlb
test
addr16
cmpsb
sbb
shlb
adc
loopne
dec
inc
adc
nop
sub
mov
rcr
loopne
push
inc
and
sub
mov
jbe
dec
movsl
and
and
adc
inc
adc
pop
inc
adc
and
mov
call
push
adc
and
adc
xchg
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
add
mov
inc
enter
in
and
push
das
sub
mov
xchg
dec
and
adc
dec
and
adc
dec
dec
and
mov
mov
xchg
push
push
add
inc
gs
xchg
dec
sub
inc
xchg
and
or
rolb
jg
xchg
dec
and
mov
and
adc
add
inc
push
add
pop
xchg
mov
xlat
and
mov
xchg
dec
dec
and
mov
dec
and
sub
inc
mov
rolb
xchg
or
mov
mov
gs
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
sub
cwtl
or
adc
mov
fs
or
dec
cmpsl
and
add
or
inc
xor
xor
push
adc
adc
leave
add
adc
test
add
fs
add
sub
push
dec
mov
pop
and
pop
sub
bound
rolb
and
insb
cltd
inc
mov
xchg
inc
add
sti
jno
lods
push
cmpsl
dec
sub
mov
in
out
add
insl
mov
pop
fcmovnu
add
shl
in
pop
or
aaa
inc
fsubrs
or
ror
inc
mov
sbbl
sbb
bound
pop
add
add
xor
or
mov
mov
inc
pop
sbb
test
roll
add
in
insl
adc
insl
aad
mov
add
in
xchg
pop
rcrb
dec
mov
dec
cmp
pusha
inc
push
inc
sbb
and
je
push
push
sub
ficoms
or
sbb
and
push
xor
sub
outsl
fwait
insl
and
inc
sbb
cmp
dec
inc
sub
sub
imul
inc
dec
add
sub
cmp
sub
dec
sub
push
push
push
add
push
inc
and
dec
push
dec
int3
popf
mov
inc
cmp
and
pusha
dec
pusha
xchg
and
jl
pop
pusha
pop
insb
pop
inc
lcall
sbb
lods
add
inc
add
xor
into
insl
add
cmp
std
cli
push
jo
add
and
or
or
push
jl
hlt
and
sbb
data16
pop
adc
push
sbbb
inc
add
sub
ja
pop
push
push
xor
adc
mov
adc
dec
xor
mov
mov
push
scas
jl
fistps
xor
fidivrl
mov
inc
jno
ret
loopne
pop
stos
xchg
shr
inc
pop
cmpsb
xor
sbb
cmpsb
and
mov
or
subl
mov
cmp
inc
adc
jo
into
loop
out
mov
pop
pop
nop
rcrl
mov
pop
sbb
mov
dec
jge
addl
or
or
xor
adc
dec
cmp
fs
sub
out
pop
bound
xchg
or
mov
data16
cli
shrb
loopne
cmp
js
mov
dec
cmp
sub
mov
stos
pusha
pusha
xor
movsb
jmp
cwtl
pop
out
sub
cmp
mov
xlat
push
mov
mov
pop
mov
cmp
xor
add
cmp
fldcw
ljmp
push
lods
in
out
push
push
xor
pop
cmpsl
xchg
xor
xchg
cltd
mov
movsl
or
fstp
call
add
scas
out
in
ljmp
add
out
into
or
jo
adcl
or
outsb
lock
cmpb
jnp
sbb
and
ja
pop
fst
xchg
icebp
cmp
lods
out
scas
pop
scas
add
push
mov
fstl
loop
data16
inc
sub
sarl
pop
mov
out
popf
call
dec
js
shlb
pop
inc
rcrl
lods
push
adc
sbb
xchg
insb
fst
fnsave
movsb
xlat
add
sub
ljmp
lods
scas
jae
xor
push
push
jl
jmp
add
pushf
sbb
in
adc
pop
fcompl
dec
or
clc
xor
dec
inc
repnz
dec
push
sub
stc
fstpl
js
js
push
mov
gs
jo
ja
mov
cmp
adc
mov
ljmp
out
into
jge
cs
mov
dec
mov
pop
scas
dec
inc
or
cmpsl
cmpb
ja
xor
or
fs
sti
push
popf
jmp
mov
jl
call
sbb
add
sti
popf
xor
cmp
lret
out
or
sbb
mov
pop
push
outsb
lock
lret
mov
pop
fnstsw
and
jo
jo
cmovnp
cmpsb
std
mov
out
sub
mov
roll
pop
js
loopne
push
pop
cmp
adc
jnp
pop
iret
or
add
cmc
and
or
sarl
mov
jb
mov
js
popw
cmc
adc
xor
lods
xor
std
das
sub
or
pusha
jae
int3
test
data16
dec
cmp
scas
mov
mov
or
jae
add
test
pop
mov
or
cs
jbe
imul
jno
hlt
das
cmpsb
jge
cmp
mov
das
add
or
jne
add
adc
outsb
or
and
fnstenv
mov
or
and
add
xor
jnp
addl
ja
jle
adc
and
pushf
fwait
adc
cmp
cmc
xor
pop
mov
push
das
dec
imul
add
xor
mov
inc
xor
or
mov
fnstsw
lcall
lods
and
fistpl
or
push
dec
xor
mov
mov
or
mov
mov
daa
sbb
inc
lret
push
fidivrs
and
or
jbe
xlat
cmc
mov
add
or
das
xchg
fcmovb
add
adc
push
jnp
fcom
xor
xchg
pop
and
pop
add
fucomp
xor
dec
stos
mov
fistpll
fisttpll
push
inc
push
push
cmpb
js
jle
sti
stc
test
nop
mov
add
mov
xor
and
sub
jo
cmp
dec
sub
mov
out
ss
nop
cs
nop
lcall
mov
mov
mov
and
orb
out
mov
mov
mov
and
xor
or
cmc
push
xchg
or
cmp
xor
andl
cwtl
sbb
push
sub
sbb
mov
fs
mov
and
mov
out
fidivrs
adc
and
mov
add
inc
nop
loope
pop
add
mov
adc
mov
aaa
adc
cmp
mov
dec
insb
push
push
push
add
mov
xchg
adc
in
pop
mov
add
mov
arpl
imul
jae
or
inc
cmp
jnp
test
in
xor
push
sbb
jae
adc
test
add
dec
mov
add
pop
push
test
xor
pop
mov
jae
nop
test
or
sbb
add
adc
and
lods
inc
rclb
pop
nop
xchg
push
push
add
xor
push
dec
add
dec
rcrl
adc
sbb
or
cmp
sub
adc
cmp
nop
adc
jle
push
push
mov
inc
inc
das
jae
test
cmp
xor
inc
insb
push
nop
push
nop
lret
fidivrl
rcl
cmpsl
aad
sub
shrb
jae
dec
push
out
inc
aad
inc
or
push
dec
jg
push
sbb
sub
js
test
pusha
lcall
cwtl
js
sbb
mov
js
pop
xchg
jae
push
mov
ret
push
adc
aam
scas
jp
pop
inc
cmp
sub
orl
lods
adc
addb
stos
cmp
mov
pop
out
les
ljmp
aad
or
jle
mov
call
and
sbb
cmp
sahf
cmp
push
sbb
pusha
or
dec
lret
adc
fisubrs
adc
or
push
xor
and
sub
cmp
sbb
dec
pushf
and
sub
jns
sub
cmpsb
adc
fidivrl
or
adc
push
pusha
jae
aam
push
js
and
and
and
stos
push
jle
pop
cwtl
pusha
adc
add
mov
xchg
or
jmp
cmp
gs
xchg
ljmp
inc
ss
push
lcall
pop
dec
mov
dec
and
sub
popf
sub
xor
nop
xor
inc
pop
and
or
push
sub
sub
bound
jae
push
adc
jmp
jge
sub
sub
dec
mov
push
adc
js
inc
jns
xchg
cmpsb
jle
adc
sub
pop
pop
frstor
push
jae
push
dec
call
stos
mov
xchg
jg
xor
push
pushf
sbbb
push
mov
dec
xchg
cmp
pop
aas
or
add
movsl
push
push
push
jg
je
adc
stos
xor
sub
insl
rorb
fcoml
sbb
repnz
and
mov
sbb
dec
movsl
jp
js
push
add
pop
jns
jns
inc
lcall
adc
sub
or
cmp
inc
xor
sub
movsl
sub
fsubrs
push
jl
jo
sbb
push
sbb
add
sub
inc
cmc
xchg
dec
sub
xchg
adc
nop
inc
testb
cmp
add
stos
sub
fs
shlb
adc
push
pusha
cmpsb
mov
popa
add
sbb
sub
test
mov
adc
push
je
cmp
nop
sbb
push
pop
dec
sub
sahf
sub
cli
jae
inc
pop
ror
inc
or
data16
push
sbb
adc
xchg
lret
fldcw
xor
fmull
ret
test
cmp
adc
cmp
fwait
sub
sbb
cmp
test
and
pop
jo
jo
push
out
xchg
sub
lahf
test
push
dec
pusha
xchg
pusha
inc
fs
shll
sbb
adc
add
sar
arpl
pop
jae
push
adc
lcall
or
nop
or
xor
pop
dec
js
lret
jne
push
sub
pop
into
xor
test
lahf
pushl
inc
sbb
push
push
cwtl
push
cmp
or
pushf
jo
push
mov
push
pop
ljmp
xorb
lock
jg
dec
sbb
sub
imul
jle
mov
or
call
jae
jg
orb
add
sbb
xchg
xchg
dec
mov
sbb
stos
mov
sbb
or
cmp
pusha
test
sub
lods
mov
adc
sbb
add
test
and
inc
lret
sbb
and
arpl
mov
jb
test
add
loopne
xchg
or
sbb
les
mov
adc
popa
pop
inc
cmpsb
dec
fwait
test
add
mov
push
sbb
or
push
pop
and
sbb
sarb
notb
mov
inc
cs
xor
int3
jp
sahf
sbb
xlat
mov
adc
push
stos
leave
pushf
adcb
push
xchg
push
dec
roll
jo
orb
ljmp
push
and
out
sub
jge
add
xor
pop
data16
xor
in
jbe
xor
pop
jg,pn
sub
jle
mov
inc
je
mov
push
lods
test
fistl
bound
pushf
js
mov
in
int
sbb
add
pushf
jo
and
inc
ret
jae
fs
jo
push
jo
test
push
data16
inc
xor
lcall
popf
jnp
orb
andb
push
or
rclb
push
clc
mov
outsb
xor
cmp
dec
insb
push
xorb
push
push
je
popf
dec
andnps
mov
cltd
and
stos
cmp
pop
inc
sub
lcall
jne
add
adc
dec
cwtl
call
cs
push
jae
lret
adc
mov
pop
xchg
and
inc
mov
xchg
aam
xor
pop
fildl
xlat
push
add
stc
dec
or
push
test
push
jl
lock
lods
int3
mov
inc
and
cmpsb
xor
inc
scas
popa
add
inc
xchg
push
add
push
lods
push
add
jae
cmpl
adc
push
sbb
sbb
int3
pop
adc
or
jg
shll
push
jl
dec
addb
inc
jo
push
cmp
int3
add
dec
aam
jle
push
cmp
stos
inc
scas
jg
test
inc
insb
dec
mov
lods
int3
xor
and
aam
cli
subb
add
xchg
sti
or
add
out
and
je
js
adc
repnz
mov
push
or
fdivl
or
xor
add
dec
sub
mov
push
pusha
add
out
cmp
pop
and
adc
push
jp
push
adc
stos
add
clc
jae
sbb
mov
imul
aam
sub
jnp
cltd
or
pop
mov
sub
sbb
negb
mov
push
pop
and
fistpll
cmp
addr16
and
lret
push
insb
imul
pop
mov
fucomi
sub
cmpsb
ja
pop
jbe
cmp
and
push
into
cmp
out
jne
pop
das
sub
push
out
adc
sub
or
push
mov
fldl
cli
cmp
shrb
mov
pop
pop
bound
push
fldenv
xor
xor
cmp
add
jo
mov
addr16
movsl
push
sub
cmc
out
scas
add
add
sbbl
xor
jge
add
sbb
call
xchg
push
into
lret
add
fwait
sub
jae
add
sarb
adc
adcb
xchg
mov
dec
xor
xor
push
dec
imulb
add
cmp
dec
js
xchg
cwtl
pop
pop
pusha
bound
or
nop
sub
jl
in
bound
pop
es
loope
pop
mov
pop
adcl
mov
push
xor
and
push
cmpsl
xchg
or
jae
adc
or
inc
movsb
add
cmp
sub
subb
adc
mov
mov
sub
add
sbb
mov
pop
or
fidivl
sbbl
imul
mov
fistl
inc
jno
fisubs
inc
pop
add
or
sub
fimuls
or
int3
fstl
add
or
fistpll
cmp
and
pop
sub
inc
sub
xlat
inc
fdivp
fldl
sub
and
adc
sub
rcll
dec
subb
test
add
cmp
leave
dec
add
cwtl
mov
fs
movsb
jne
or
xor
push
jmp
xchg
add
or
dec
jg
lock
test
lock
cmp
stos
inc
pop
push
mov
popa
add
lock
inc
adc
add
ret
cmp
xor
adc
add
stos
in
pop
loope
dec
xchg
mov
mov
mov
fnstcw
cmp
cmp
shl
dec
or
test
and
jo
mov
xor
mov
clc
inc
sub
pop
test
loope
xor
imul
pop
sbb
inc
push
fcoml
xchg
adc
or
and
adc
push
dec
mov
xor
pop
out
mov
sbb
and
loopne
cmp
jmp
dec
jg
pop
pusha
pop
scas
mov
adc
push
pop
mov
scas
fnstsw
cmp
mov
fwait
pop
xor
inc
pop
int3
mov
pop
sub
ja
outsl
jnp
pusha
nop
push
je
pop
inc
addl
jmp
sbb
or
mov
jge
movsl
mov
xor
push
xor
adc
fdivl
pop
mov
fdivrl
fs
pop
pop
out
cmp
ja
pop
mov
sbb
jbe
lret
repnz
lods
mov
mov
hlt
inc
test
push
movsb
sub
jo
and
lret
xchg
jns
movsb
loopne
xchg
lret
push
and
sub
sub
decl
insb
sub
jae
push
in
rcll
pusha
push
jg
sbb
inc
xor
addb
mov
dec
xorb
aas
popf
jns
test
pop
test
mov
mov
js
mov
adc
out
insl
aas
xor
js
sub
ja
das
in
insl
fnstenv
mov
mov
push
fistpl
mov
gs
mov
pop
push
nop
jo
js
in
mov
push
adc
js
sbb
fistpll
jae
lcall
add
subb
jno
or
add
ss
lods
inc
fnstcw
das
pusha
test
imul
jne
push
ds
imul
dec
ficoml
clc
cmpsl
pop
sbb
imul
dec
mov
cmp
gs
sbb
inc
loopne
mov
roll
dec
nop
pop
add
push
mov
push
or
push
jo
pusha
ja
out
xor
fmul
add
data16
addr16
jo
nop
push
rclb
mov
fadd
mov
es
in
into
or
insl
sahf
int3
mov
cmp
pushf
pusha
fistpl
sbbb
mov
test
hlt
scas
outsb
add
add
dec
push
and
sub
inc
in
pop
hlt
xor
and
sub
jae
cmp
inc
mov
adc
xor
inc
and
pop
cmp
scas
push
gs
pop
scas
mov
fs
mov
test
cmp
lds
mov
loope
nop
pop
js
xchg
mov
push
fisttpll
aad
in
add
adc
push
and
mov
push
push
inc
push
and
sub
xor
jb
out
jg
ljmp
push
je
sub
fisubrs
jo
mov
mov
loopne
sbb
cmp
inc
push
xor
and
andl
lret
outsb
mov
fs
sub
mov
outsl
gs
addb
out
jmp
jge
and
push
gs
das
testb
add
or
insb
ffreep
mov
mov
lcall
cmc
lret
cmp
or
ja
push
jo
shll
mov
ja
lret
add
pop
xorb
sbb
pop
push
pushl
pop
sbb
add
sub
adc
push
jo
pusha
xor
push
int
data16
data16
push
inc
dec
jecxz
jl
sbb
jl
enter
push
or
test
cmp
cmpsb
out
cmp
mov
jg
xor
out
jmp
or
fldcw
xor
ss
push
add
adc
jne
push
pop
dec
push
popf
add
mov
fstps
mov
rcrl
gs
mov
sub
inc
pop
arpl
orl
loope
inc
insb
sub
push
in
movsb
aaa
add
and
mov
pop
sub
inc
ljmp
jo
cmp
sbb
int3
mov
cwtl
sub
nop
mov
mov
out
sahf
mov
sub
or
xor
fists
mov
add
nop
test
sub
fldcw
push
mov
jbe
imull
cmpsl
or
outsb
jmp
daa
subb
xchg
sub
mov
pop
mov
add
hlt
inc
sti
shll
dec
cwtl
cwtl
adc
nop
or
test
or
js
addb
mov
pop
xor
adc
jecxz
je
pop
jl
add
testl
jno
in
add
and
call
test
and
xchg
mov
aam
mov
lds
and
scas
and
inc
and
xchg
or
popf
cmc
push
loope
jge
adc
or
testl
or
mov
sbb
out
sub
sub
mov
pop
push
adc
in
das
add
dec
sub
sub
jg
inc
push
mov
mov
mov
ss
enter
mov
push
insb
push
push
rclb
out
jmp
mov
or
loopne
aad
push
jae
test
repnz
and
xor
pop
cmpsb
inc
mov
test
sti
or
mov
rcrb
scas
jge
push
aaa
mov
or
nop
ja
add
rorb
push
ja
cmp
cs
jl
push
sub
mov
cmp
test
imul
sbbb
adc
adcb
sub
xchg
add
mov
gs
lods
or
outsb
test
or
xor
dec
outsb
cmpsl
cwtl
sbb
pushf
ljmp
adc
pshufw
frstor
add
rorl
test
pop
jl
lret
mov
in
mov
pop
sbb
dec
pop
jo
adcl
fldenv
and
inc
push
ss
les
xchg
inc
nop
lret
xor
jp
push
xchg
and
jne
ljmp
cmp
pop
pop
shll
xor
shll
push
jge
xor
push
dec
in
cmp
sub
push
pop
pop
inc
jbe
iret
fstpl
push
xor
sbb
ret
pop
cmpsb
or
lock
incl
add
pop
cwtl
cwtl
js
mov
mov
loop
xor
cmp
xor
dec
lods
xorl
jno
loop
and
pop
lods
mov
sub
mov
push
jae
cltd
subb
push
adc
ljmp
jle
xor
mov
in
enter
aad
xor
cmp
jb
enter
inc
pushf
and
sub
add
push
cs
lcall
add
inc
push
jge
imul
jo
adc
lods
or
in
imul
jge
pushf
dec
cwtl
adc
insl
pop
testl
dec
rcr
xchg
mov
mov
loopne
stos
aaa
push
sbbb
push
sbb
push
insb
add
mov
push
pop
sbb
aaa
mov
pushw
mov
rcrb
rorl
stos
scas
mov
xor
jg
pop
jle
rorl
cmp
sub
inc
jg
dec
pop
jl
jno
and
mov
fidivrs
inc
add
xchg
mov
enter
popa
cltd
dec
mov
inc
add
add
fs
test
stos
notb
cmp
daa
or
pop
mov
fnstenv
dec
mov
cld
clc
add
and
inc
fidivs
mov
xor
pop
mov
pop
loope
sub
sbb
or
xor
pushf
inc
movsb
test
xchg
sub
mov
pushf
sub
rorl
test
cli
or
subb
shlb
mov
sub
int3
xor
pop
pop
in
dec
imul
mov
dec
lods
sahf
and
stos
aad
jle
sbb
or
jmp
mov
mull
xor
mov
test
sub
mov
dec
pop
jbe
dec
xchg
dec
cmc
rolb
pushfw
push
insl
fidivl
jns
in
cmp
and
and
mov
ja
mov
cmpsl
movsb
xchg
stos
mov
add
aad
or
gs
out
loopne
test
pop
fwait
add
jne
shll
sti
lret
lret
jne
test
push
out
xchg
ja
mov
lret
ja
pop
adc
lods
push
mov
jg
mov
or
pop
jns
aam
cs
pop
xorb
push
test
cmpsb
adc
pusha
inc
dec
imul
test
fisttpl
imul
cmpsl
loope
int
sbb
mov
and
aaa
cmp
inc
scas
jp
inc
or
jb
push
insl
inc
lcall
pop
nop
and
push
das
ljmp
add
lea
arpl
dec
shr
or
mov
sub
inc
or
dec
nop
cmp
and
pop
mov
stos
and
sar
push
pop
dec
pusha
test
jle
scas
xchg
add
clc
mov
inc
jg
jns
cmp
jg
push
stos
mov
or
lahf
clc
push
movq
test
movsb
shlb
cmp
enter
cmp
mov
cs
mov
mov
cltd
jg
outsl
push
insl
pop
in
test
jg
imul
jo
ljmp
stos
mov
shrl
xor
add
pop
mov
js
mov
mov
ficoms
cmpsl
mov
jo
jmp
stos
aam
pop
sti
xchg
sub
jg
push
xor
in
fwait
stc
or
cmpb
mov
xchg
movsl
push
jg
gs
adc
nop
lret
lret
xor
movsb
ret
pop
mov
cmp
dec
push
inc
rclb
sub
daa
cmp
cli
daa
movsb
jo
xor
popf
addl
sbb
ret
jnp
push
cltd
xor
addr16
shrb
jns
test
stos
mov
and
push
lea
jg
and
fidivrl
jo
dec
xchg
sahf
mov
and
pop
ret
sbb
sub
xor
xor
or
and
daa
xor
les
pop
push
pusha
insb
adc
add
pusha
sbb
sbb
es
aad
push
call
jae
xchg
ljmp
mov
xchg
call
popf
jo
or
jg
push
cli
jnp
stos
shl
sbb
pop
je
addl
cmp
mov
mov
cwtl
or
test
pop
dec
ja
pop
adc
lods
mov
arpl
xchg
or
and
xor
insl
test
dec
mov
ficoml
push
insl
lods
or
loopne
mov
scas
in
ss
inc
mov
fldt
push
cwtl
sub
and
aad
jne
inc
lds
stos
push
cmp
push
push
mov
test
outsb
test
push
sub
jle
sbb
fs
push
and
test
mov
popa
adc
add
pushf
enter
and
call
and
pop
imul
xor
sarb
test
sbb
jne
add
or
or
sub
add
insl
sub
xchg
and
add
sub
test
outsb
pop
das
push
int
shrb
jecxz
sub
rcrb
mov
mov
push
popf
xor
sbb
ljmp
loopew
test
or
jmp
push
mov
dec
shl
add
nop
pop
mov
insl
outsl
nop
mov
jae
fistpll
or
lret
adc
jg
xchg
push
sub
and
stos
cmp
or
jns
test
sbb
push
jbe
inc
pop
insl
add
pop
adc
or
je
jg
mov
xchg
dec
test
shll
xchg
ss
push
pop
shll
inc
mov
rcrl
aad
in
sbb
movsb
rolb
fmuls
pop
dec
push
into
dec
cmc
dec
sub
xor
dec
xchg
lcall
dec
aad
mov
pushf
xchg
mov
add
popa
mov
sbb
xchg
pop
jle
and
adc
sbb
je
cmp
out
inc
mov
rcrb
jp
push
shlb
lret
pusha
shlb
inc
mov
insl
sub
cli
sub
insl
xorl
sbb
inc
inc
or
push
xor
cmpsl
lods
adc
push
stos
lds
push
imul
pop
push
mov
jne
xchg
icebp
lds
and
cmp
pop
cmp
lahf
cmp
add
nop
shlb
mov
push
inc
filds
xchg
sub
jg
mov
mov
or
jg
ret
pop
push
jg
sub
js
cmp
jle
pop
rcrl
enter
xchg
sbb
add
add
inc
mov
dec
dec
test
xchg
xchg
pushf
lcall
lcall
jmp
pop
mov
in
popa
popa
push
lcall
mov
rcl
xchg
jge
aas
lods
aad
shll
stos
and
mov
jns
or
jnp
mov
dec
mov
popa
ret
lea
popf
inc
popa
sbb
add
popf
mov
inc
xor
jle
sbb
sbbl
jle
imul
pusha
or
mov
xchg
inc
stos
xlat
and
adc
pusha
mov
pop
popa
test
or
in
mov
bound
sarl
sub
or
pop
dec
push
inc
loope
lds
xor
inc
add
cmp
push
xchg
scas
aaa
sub
push
dec
jno
inc
inc
jl
dec
sbb
mov
or
popa
jo
xlat
adc
sub
jo
pusha
xchg
push
ja
mov
nop
and
mov
stc
ret
ud0
cmp
inc
arpl
test
dec
test
jg
sahf
sub
or
adc
mov
data16
jg
test
ja
je
and
rcrb
or
jle
mov
ss
lea
ljmp
add
mov
mov
stos
lcall
stc
xchg
pushf
sti
xorb
pop
push
stos
mov
cmp
and
jg
push
cwtl
lods
jmp
mov
lods
jmp
adc
scas
jbe
jns
enter
cmpsl
test
push
lods
mov
sub
rorb
in
test
mov
test
mov
jg
in
cmp
add
push
loopne
je
xor
pop
mov
and
xor
push
cwtl
pusha
popf
mov
pop
idiv
or
cmp
and
push
adc
aas
push
daa
pop
or
or
jae
ficoml
dec
sub
mov
popa
insb
push
popf
das
pop
add
stos
jmp
push
and
push
xchg
add
test
lods
xchg
cmp
jb
dec
clc
add
ret
dec
jb
xchg
out
mov
inc
push
or
into
and
sub
cmp
movsb
or
sub
pushf
mov
movsl
push
jle
cmp
js
xor
or
daa
jne
imul
add
cmp
mov
mov
int3
jle
popf
ja
imul
jg
xor
pop
je
sbb
and
cmp
cmp
mov
adc
movsb
imul
or
fwait
xor
test
jno
push
test
test
movsb
insb
cmc
pop
inc
mov
sbb
mov
es
mov
jg
push
test
xchg
push
add
mov
imul
mov
mov
scas
jp
repz
jg
test
pushf
loopne
jle
xchg
adc
bound
je
or
adc
push
pop
jns
xor
and
cmp
lds
adc
push
sbb
mov
and
or
lock
add
cmpsl
inc
bound
dec
inc
mov
es
imul
add
sarb
pop
dec
lods
inc
or
movsb
rcll
incb
push
imul
ljmp
inc
out
pusha
js
push
js
pop
inc
or
ret
movsl
sub
mov
shll
jae
lods
lret
push
xchg
inc
jg,pn
adc
xor
mov
xor
daa
and
pop
dec
sub
push
test
aaa
inc
xor
push
sbb
outsl
cmp
xchg
dec
pop
add
and
inc
fldt
movsl
push
nop
xor
jl
pop
jae
insl
int3
sbb
insl
ret
jno
sbb
sub
insl
push
stos
sahf
mov
mov
mov
adc
test
in
xchg
and
sbb
lods
xor
inc
test
dec
cwtl
mov
jl
insb
mov
pop
xchg
mov
cmc
repnz
loope
inc
pop
pop
or
je
rolb
clc
push
orl
sbb
arpl
and
mov
fists
pop
adc
push
jmp
int
pop
mull
xchg
test
inc
mov
and
or
js
sbb
xchg
jle
or
and
add
iret
in
mov
push
stos
std
cld
outsb
or
psubusb
add
rclb
push
inc
jbe
dec
jne
data16
or
mov
sbb
jg
in
dec
ljmp
dec
cmp
test
cmpb
mov
push
test
test
cmpsl
ss
jle
inc
popa
out
mov
cwtl
jg
inc
cltd
push
sub
movsl
or
pop
or
test
xchg
jae
cmpsb
xor
shr
mov
mov
inc
aad
xor
movsb
insl
das
sub
mov
outsl
push
sbb
lods
lea
pop
mov
add
or
lods
popf
les
add
sub
pop
cmc
inc
ss
push
adc
pop
mov
insl
repz
jg
rcrb
inc
aad
jl
jo
sub
sub
jg
mov
dec
lods
inc
leave
dec
test
jo
stos
mov
and
sbb
dec
mov
repnz
adc
rclb
jbe
mov
loop
dec
cmp
addr16
sti
jg
dec
dec
add
aas
jne
cmp
sbb
pop
mov
lods
push
lods
cmp
ljmp
lds
mov
mov
cld
or
fsub
pusha
movsb
test
dec
inc
ljmp
adc
xor
mov
jmp
cmpl
lcall
lcall
jg
cmp
cmp
jg
repnz
cmp
inc
mov
lret
leave
jecxz
data16
push
sbb
pushf
jnp
mov
cwtl
pop
push
pop
nop
ja
sub
mov
adc
test
jne
sub
xchg
cmc
out
data16
mov
inc
mov
push
pop
cmpsl
lods
xor
sarl
movsb
mov
inc
jecxz
mov
test
lret
movsl
or
movsb
sub
pop
neg
xlat
mov
movsb
add
nop
stos
jg
ret
push
dec
pop
fwait
fwait
pop
insl
in
jle
imul
cmpsl
pop
js
ss
jo
and
adc
sub
xchg
pop
adc
lret
xchg
or
dec
or
rclb
ret
rcr
ret
lods
flds
orl
test
add
loope
mov
push
test
stos
dec
jo
ljmp
or
pop
sbb
in
and
inc
pop
sub
pop
push
sbb
mov
inc
adc
mov
and
sbb
sbb
xorb
inc
insb
test
jbe
jg
cmp
clc
and
jae
dec
inc
push
adc
push
call
lahf
cmp
dec
xchg
shll
pushl
mov
sbb
stos
xchg
mov
stc
xchg
mov
mov
pop
pop
push
and
jp
dec
gs
xor
and
sti
push
mov
adcl
arpl
xchg
cmpsl
fwait
sub
movsb
orl
inc
pop
sbb
insl
cwtl
inc
sub
mov
adc
or
xor
imul
or
pop
xor
cwtl
mov
leave
or
cmc
pop
lods
daa
stos
fildl
ret
arpl
push
sub
imul
ss
adc
push
jnp
popf
cwtl
pop
out
push
add
rolb
push
lcall
ss
dec
js
rclb
mov
out
jb
pushf
lds
lods
testb
jg
mov
xchg
xchg
cmp
or
into
adc
add
adc
and
dec
or
cmp
test
popa
lds
fildll
xchg
andl
movsb
jle
mov
pusha
mov
cmpsb
push
imul
dec
popa
push
jb
xor
push
dec
cmp
jle
push
xor
pusha
ret
loopne
pop
int
jae
sbb
and
lcall
sbb
pop
mov
pushl
hlt
orb
out
mov
sbb
mov
sbb
int
cmp
cmp
div
jmp
adc
inc
insl
icebp
mov
fidivrs
fmuls
das
fldenv
fcmovnu
dec
mov
sbb
jno
mov
gs
mov
arpl
pop
push
stc
insl
mov
mov
nop
fldl
pop
pop
pop
jae
lahf
subl
cmc
sub
or
fwait
add
lods
mov
and
jo
jge
ja
add
sub
sbb
fucomi
js
cmp
add
jge
nop
pop
jl
add
jnp
and
lods
add
das
or
sub
push
adc
and
adc
mov
cmp
jecxz
xchg
movsb
inc
jecxz
aaa
xor
jge
imul
xor
sbb
mov
and
jle
dec
pop
xor
and
popa
dec
imul
xor
xchg
push
lods
add
das
lods
out
add
pop
sbb
fwait
lock
pop
cwtl
mov
rol
pop
push
adc
pop
push
sarb
jmp
add
stos
inc
incl
pushfw
or
arpl
cmpb
or
jecxz
jg
add
or
mov
mov
incl
mov
or
sbb
xorb
arpl
repnz
jo
jnp
jbe
sub
and
stos
mov
xchg
fnstsw
repz
xchg
cmpsl
daa
mov
je
xor
mov
push
inc
ret
cmpl
pop
mov
movl
mov
insb
xor
insl
fistl
add
mov
js
xlat
jecxz
jne
inc
adc
push
ja
add
adc
call
fwait
mov
mov
fs
add
jbe
ds
jns
js
das
jno
pop
sub
push
push
loopne
xor
popa
push
cmc
fstl
jg
sub
mov
fidivrl
mov
and
cmp
add
add
hlt
sbb
sbb
test
rcrl
movsb
and
or
mov
mov
xrelease
sbb
mov
andl
push
dec
push
js
out
popf
add
mov
inc
and
push
dec
xchg
inc
sarl
int3
lret
xchg
gs
adc
pushf
jo
in
mov
or
sarb
and
sarb
mov
arpl
add
aad
cmpsb
inc
push
jg
mov
adc
cmpsl
xchg
sbb
push
mov
sti
dec
pusha
adc
push
push
iret
dec
pop
sahf
pop
push
sbb
insl
mov
push
or
and
pop
ficoml
sbb
rolb
pop
jge
xlat
mov
dec
sbb
mov
imul
or
mov
add
or
dec
pop
pop
jno
fcmovu
fiadds
add
testl
and
mov
dec
inc
sbb
inc
pop
sbb
pop
fidivl
das
pop
cmp
and
pop
push
push
mov
mov
stos
sub
rcr
pop
adc
inc
lds
lods
sbbl
adc
shlb
hlt
mov
add
xor
push
push
lods
ret
dec
push
or
rcrb
movsb
or
pop
push
xchg
xchg
mov
xchg
and
xor
adc
addr16
push
cmp
add
adc
or
ret
and
mov
pop
xor
xor
mov
mov
pop
adc
xchg
cmp
cmp
mov
add
test
out
enter
push
adc
les
push
lock
add
xor
notl
sti
ficomps
lods
push
sbb
mov
cmp
add
cmp
lods
lods
mov
sbb
stos
or
inc
pop
jo
push
sub
scas
inc
push
sub
xchg
adc
fcomps
xor
movb
sub
fisubl
push
add
lea
add
cmp
sub
push
lock
jno
scas
or
jle
fwait
dec
jo
inc
and
ss
and
cli
sub
out
decl
inc
xchg
pushf
mov
xchg
mov
add
mov
xor
mov
xchg
pop
cs
lret
pop
add
imul
adc
add
pop
popf
jle
addb
andl
fidivs
cmp
pusha
or
mov
cmp
test
xor
enter
cltd
adc
jg
xchg
sbb
xchg
adc
xchg
xchg
dec
mov
jae
mov
push
mov
jp
mov
add
add
add
push
add
push
mov
sub
pop
fldl
add
fldcw
aaa
adc
or
rcll
pop
or
adc
and
add
adc
ret
mov
gs
xor
mov
and
or
sbb
add
and
add
in
push
add
ja
clc
fiadds
shlb
push
jcxz
sub
jae
ret
or
imul
gs
and
mov
push
push
or
pop
into
sbb
xchg
lds
pop
dec
out
fwait
xor
mov
call
test
inc
push
popa
js
inc
cmc
fs
adcb
dec
ror
sub
or
negb
inc
sbb
outsb
inc
dec
push
xchg
sbb
push
jns
adc
test
jg
xor
jne
inc
aaa
push
jge
mov
pop
pop
adc
fildl
pop
addr16
ja
or
out
andb
push
jo
lock
ret
jb
and
push
mov
loope
add
add
push
push
add
cmp
add
mov
ljmp
xchg
jb
cli
pop
lret
cmp
add
test
nop
xorb
mov
pop
test
pop
popa
jmp
adc
mov
das
test
fisttpl
rcrl
daa
mov
jge
js
fs
in
je
add
mull
dec
mov
and
rolb
popa
test
mov
and
push
ds
jns
xchg
adcb
out
sbb
dec
or
mov
pop
out
sub
jae
icebp
push
mov
cmp
add
inc
xchg
xor
mov
movsb
pushf
ja
xor
jo
or
sub
movsb
and
lcall
mov
daa
lret
sub
jge
add
or
jo
sbb
mov
cmp
jne
adc
mov
or
jb
js
cs
js
mov
pop
call
pusha
mov
adc
push
aad
sub
jl
mov
push
cltd
jb
xchg
cmp
sbbl
aam
xor
sbb
pop
push
dec
jo
push
add
pop
and
pop
push
dec
pop
cmp
mov
dec
or
imul
pop
add
icebp
mov
and
das
push
dec
push
cmc
sub
xor
cmp
xor
les
jo
mov
stos
cmp
pop
sub
mov
sub
and
xchg
mov
sub
jae
inc
test
jg
rdmsr
and
push
jecxz
jns
sbb
lods
pop
or
mov
das
xor
js
ja
aad
mov
jecxz
cmp
fstpl
int
push
aaa
dec
pop
xor
push
popa
inc
xor
add
inc
add
gs
push
and
lods
pusha
pop
cmp
lods
add
push
mov
mov
xor
imul
bound
dec
jg
ret
push
lods
cwtl
sbb
pop
sti
cmpb
insb
fdivl
adc
testb
jp
xchg
mov
roll
cli
mov
adc
das
aad
test
or
jnp
pop
adc
outsl
fildl
push
pop
inc
xlat
aam
cmp
inc
sbb
test
aad
add
out
cmp
jg
loope
add
xchg
dec
fs
imul
ljmp
adc
mov
add
lret
int3
sbb
xchg
in
pusha
xor
sbb
or
scas
push
test
cwtl
and
sub
adc
inc
loopne
inc
add
sbb
in
mov
sbb
mov
lret
lods
rorl
or
jle
adc
add
fdivr
js
sub
pop
lret
int3
dec
adc
adc
jecxz
hlt
and
dec
mov
mov
adc
mov
int
cld
and
dec
dec
jmp
and
pusha
sbb
xor
add
pop
adc
xchg
jbe
or
sbb
das
adc
cmp
mov
cmp
adc
pushf
lret
or
out
sub
sub
xchg
loope
mov
into
jo
pusha
mov
pusha
jo
loopne
test
lods
mov
insl
mov
cmp
pop
jg
fwait
push
dec
dec
cmp
adc
pop
xorb
inc
out
dec
test
jmp
xor
sub
subb
inc
daa
ret
adc
lret
inc
xlat
dec
sub
push
sub
adc
push
push
dec
cmp
push
dec
nop
dec
loope
ljmp
mov
sbb
movsb
test
js
or
cmpsb
into
jo
adc
push
pop
xor
ret
push
jae
add
pop
inc
pop
dec
pusha
jo
xchg
sarl
shrb
mov
adc
xor
outsl
mov
popf
insb
fdivrs
pop
hlt
ljmp
test
jns
jae
les
xlat
roll
add
adc
xchg
dec
cmp
leave
add
lea
push
out
outsl
add
adc
push
dec
pop
sub
add
std
nop
addb
das
add
xchg
mov
sub
test
or
test
mov
pop
dec
js
sbb
or
fs
or
mov
adc
mov
xor
data16
sbb
aaa
push
dec
dec
jo
in
cwtl
push
cmp
mov
mov
push
sub
push
pop
insb
jns
arpl
aad
mov
sbb
sub
and
cmovno
or
adc
sbb
stos
mov
add
xchg
aaa
dec
push
sbb
jo
pop
mov
push
gs
xor
mov
pop
ljmp
pop
pusha
xor
test
and
ret
xchg
in
xchg
add
and
rolb
sub
out
adc
pop
mov
lock
push
sbb
pop
dec
cmp
pusha
pop
mov
jg
call
sub
jae
xor
add
add
and
or
or
shll
sub
ss
push
add
dec
mov
incb
push
sub
xchg
xor
dec
cmpsb
mov
add
push
sbb
cmp
add
jbe
or
inc
and
add
call
add
mov
rcrb
or
imul
adc
sub
jo
loopne
xor
fcompl
push
ret
sub
leave
popa
rorl
inc
loope
sub
mov
inc
shrb
adc
mov
jbe
les
add
jge
jne
push
lcall
or
pop
cwtl
lcall
movsb
sub
popa
mov
shll
push
xor
leave
push
xor
subl
sub
insb
test
sub
pusha
adc
add
mov
addr16
lods
icebp
or
outsb
jbe
cmp
add
sub
add
pusha
dec
adc
popf
sbb
aam
adc
int
cwtl
xchg
int3
push
jo
or
dec
xchg
and
cmp
fstpl
add
lods
jno
out
out
sahf
and
push
add
xchg
daa
mov
es
inc
cmp
mov
fimull
cmpsb
dec
xchg
out
push
xchg
shlb
fucomi
dec
sub
mov
inc
loopne
sbb
or
cs
ret
adc
sbb
mov
add
jae
jg
add
add
pop
movsl
lock
test
lods
subl
add
fimuls
sarl
or
test
inc
fs
add
inc
jno
dec
xor
and
pop
mov
adc
inc
push
cmpsl
adc
clc
jp
fbld
dec
adc
add
subb
push
shlb
mov
out
sarb
pusha
sub
sub
jg
data16
loopne
das
repnz
jl
pop
jae
add
jg
sub
test
sbb
jbe
add
cmpsb
mov
xchg
push
push
adc
inc
pop
aam
cmp
and
mov
dec
mov
cmpsl
stc
insb
lds
pop
jge
sub
mov
add
push
xchg
adc
dec
cmp
mov
movsb
aad
lods
aad
cs
or
lret
push
push
jmp
push
mov
xchg
xchg
xor
cmp
js
mov
xchg
lret
or
jb
popf
shll
aad
jg
mov
lods
lea
push
or
xchg
mov
sbb
and
mov
inc
mov
sbb
push
or
jl
or
nop
mov
xor
aaa
jo
lds
test
cli
cmp
iret
adc
inc
int3
cwtl
out
and
add
push
xchg
push
or
adc
sub
repnz
sbb
mov
cmc
xchg
jae
mov
jg
inc
xor
jg
xor
mov
out
cmp
les
push
and
cmp
data16
movsb
sub
jge
add
push
mov
pushf
jae
dec
push
stos
inc
jle
xor
jne
or
inc
lods
push
sub
orb
push
jbe
adc
mov
lret
cmpsl
and
adc
xchg
or
stos
pop
loop
subl
sbb
test
jo
ret
sbb
xchg
sub
adc
xchg
xchg
andb
jg
xor
es
fists
into
ret
add
adc
pushl
sahf
test
mov
pop
stos
jae
nop
adcb
ud0
incl
add
pusha
cmp
movsl
rcrl
add
subb
dec
cmp
jle
add
inc
test
dec
mov
notb
nop
rclb
ljmp
orl
jl
xlat
and
adc
xor
adc
repz
and
adc
add
mov
sbb
jae
rolb
inc
pushf
inc
sub
fistpll
cmp
sbb
lods
push
ljmp
int3
or
test
adc
orb
sbb
xchg
cwtl
hlt
dec
adc
sbb
adc
test
lea
adc
pushf
subb
pop
bound
or
inc
insb
repnz
sarl
dec
and
sbb
adc
push
add
ret
push
jae
add
sub
adc
cmp
pop
inc
cmpb
loop
inc
sub
test
xor
cmp
nop
push
pusha
mov
mov
stos
and
mov
pusha
stos
or
xchg
mov
mov
push
lahf
xor
imul
xchg
xor
pusha
je
je
mov
dec
lods
aad
test
or
push
das
adc
dec
lods
push
add
in
inc
shrl
ja
sbb
push
inc
push
rcll
mov
jns
xor
push
nop
pop
fimuls
stos
dec
sbb
sarl
insl
loop
xchg
repz
bound
or
adc
repz
mov
jo
dec
add
push
or
mov
aam
les
push
add
lea
dec
inc
and
mov
jp
push
nop
push
andb
int3
jg
cmp
sgdtl
mov
sbb
add
pop
pop
pushf
pop
jns
and
push
jo
dec
lods
mov
es
cmp
xchg
test
jo
jae
les
daa
sbb
sar
mov
movsb
inc
pusha
and
and
mov
mov
dec
fs
test
mov
mov
add
or
dec
das
movsb
mov
cmp
adcb
sbb
fcomps
cmpl
inc
insl
into
add
rorb
dec
add
call
test
dec
lods
mov
jae
or
jg
mov
mov
cwtl
and
or
adc
and
into
xor
jg
pusha
add
loopne
push
jg
push
pusha
pop
stos
andb
xor
add
add
add
sub
xor
jg
add
mov
xor
int
int3
int
dec
pop
dec
jg
mov
add
es
pusha
pusha
jg
pop
inc
pop
jle
mov
add
nop
jg
and
add
js
inc
jp
add
sub
rolb
add
addl
jg
rolb
add
pop
addl
push
and
or
add
push
stos
aad
pop
jg
or
stos
sbb
or
and
daa
xor
xchg
insb
sbb
int3
nop
push
jle
les
mov
add
add
fdivrl
inc
sbb
and
pop
push
outsb
add
inc
push
lods
jle
or
xor
add
cmp
dec
add
enter
out
sub
push
iret
pop
addb
inc
push
dec
lods
rolb
testl
lock
data16
dec
adc
xchg
push
sbb
or
roll
xor
or
push
dec
add
dec
js
iret
mov
imul
mov
insl
sub
popa
push
add
loope
xor
mov
dec
sub
or
jg
add
mov
inc
xor
inc
dec
xchg
pop
insl
mov
cmp
mov
add
pusha
xchg
mov
xchg
js
adcl
pop
add
inc
inc
sub
adc
or
push
daa
sbb
adc
movsb
adc
xchg
shrb
or
jg
push
mov
xchg
nop
pop
movsb
test
and
shr
adc
ror
cmp
das
inc
add
mov
rorb
call
mov
js
rolb
pop
sahf
xor
cmp
mov
sub
xor
jmp
popa
sbb
iret
mov
rorb
aam
out
push
sub
pop
pusha
add
dec
sbbb
add
rcrl
lea
in
sub
into
mov
add
cmp
daa
inc
adc
and
adc
push
jg
sub
sbb
add
sbb
or
add
and
pop
mov
xlat
mov
xor
sub
sbb
cmp
add
into
scas
or
adc
mov
fldcw
cwtl
add
pop
into
fstpl
gs
sub
jnp
inc
xor
pop
inc
dec
and
adc
inc
addr16
add
sbb
into
pop
inc
xchg
or
shrb
xchg
sub
rorb
and
das
mov
stos
aam
cmp
adc
pop
iret
add
adc
clc
add
push
and
push
mov
xor
push
push
xor
lea
imulb
sbb
inc
gs
mov
fnsave
fistl
fs
mov
xchg
loope
add
and
dec
mov
push
inc
addb
push
and
or
inc
test
sbb
sarb
add
dec
add
adc
ret
std
clc
adc
adc
pop
pop
fcoms
fwait
add
lcall
jo
mov
push
mov
fcomp
jnp
and
mov
push
and
inc
cmp
fisttpl
daa
add
inc
mov
jb
daa
inc
rclb
sbb
lahf
rolb
data16
jnp
add
adc
jle
cld
mov
decl
iret
or
add
rcll
adc
dec
aaa
movsb
pop
and
gs
and
sub
xchg
sub
push
mov
jb
daa
adc
ret
mov
nop
adc
rorb
jg
cwtl
and
test
or
sbb
and
jo
iret
sbb
xchg
fldt
xchg
adc
mov
cmp
sub
in
or
adc
loopne
mov
jp
add
add
mov
addl
or
or
and
jg
xor
cmpl
fistpl
test
push
or
fs
sub
in
sbb
inc
sbb
lret
insb
arpl
add
ret
sbb
movsl
bound
mov
insl
shrl
xor
adc
in
in
loopne
sub
and
sub
cltd
cwtl
add
push
or
sbb
lods
hlt
adc
lods
aad
sub
sbb
add
addr16
shll
adc
and
in
js
mov
addr16
ret
test
jns
adc
insl
cmp
pop
jno
orb
cmp
imul
or
movsl
stc
and
sub
andb
sub
movsb
jg
leave
hlt
and
rorl
mov
ss
xchg
adcl
sbbb
and
adc
pusha
test
sbb
int3
xor
int3
inc
cmp
xor
test
mov
inc
add
out
pop
jne
insl
xchg
fimuls
jno
xor
xor
in
add
push
out
and
mov
cwtl
sbb
inc
stos
or
push
pusha
and
test
lods
and
xchg
dec
adcb
jg
inc
mov
xorl
adc
dec
stos
addb
adc
and
sub
sbb
push
ret
xor
sub
xchg
lahf
add
mov
jnp
sbb
rcrb
lea
pop
add
lock
dec
andl
popf
add
shll
or
push
mov
sub
nop
jg
push
xchg
dec
mov
jg
mov
pop
or
cmp
and
add
cmp
cwtl
cmp
sbb
and
ret
push
ret
lds
stc
pop
xorb
inc
mov
inc
or
xor
mov
out
jno
push
jno
pop
pop
xor
or
iret
sub
js
inc
and
pusha
aam
pusha
xchg
into
xor
out
or
xchg
test
cwtl
push
rolb
dec
dec
lods
jg
js
dec
jbe
bound
adc
imul
test
js
sbb
sbb
pop
in
sub
inc
int3
movsl
rcrl
push
leave
cmp
sbb
leave
mov
lret
or
aad
imul
gs
bound
add
xor
xor
addb
adc
push
loopne
pop
mov
push
fsubs
mov
mov
xor
mov
add
jb
fwait
mov
jae
nop
sahf
and
xor
xchg
xchg
movsb
cwtl
int3
pop
and
and
pop
xchg
hlt
mov
js
ret
cmp
enter
push
pop
inc
sub
mov
and
add
outsb
mov
aad
or
ss
test
imul
jbe
lods
xor
dec
xor
sbb
and
fidivl
orb
cmp
rcrb
cwtl
popa
insb
add
fdivrs
sub
sbb
daa
push
clc
add
jle
add
inc
cmc
fstpt
inc
jae
xchg
add
add
xor
adc
orb
mov
iret
push
jo
test
call
adc
jl
adc
or
mov
rclb
and
and
lret
mov
loope
fdivrl
dec
xor
js
movsl
and
add
pop
in
iret
sbb
or
fdivrl
push
daa
hlt
int3
out
add
and
mov
fdivs
sbb
jae
sbb
test
daa
inc
and
sbb
dec
pop
inc
add
push
hlt
sbb
clc
js
enter
adc
cmpb
sbb
xorb
add
and
cmp
sub
lret
pop
sub
push
ret
imul
push
push
xor
sarb
or
xor
xor
xchg
push
or
inc
or
test
in
nop
adc
mov
mov
mov
pusha
insb
pop
add
cmpsl
gs
data16
mov
sub
and
sbb
push
loope
cs
mov
inc
hlt
inc
sbb
outsb
adc
lea
iret
or
test
sub
mov
sbb
test
push
push
in
pop
and
cmp
mov
push
mov
or
les
add
jnp
push
aaa
push
or
roll
pop
pusha
fsubrs
fcoms
adc
shll
or
popa
cmc
insl
loopne
jg
mov
loop
add
mov
rolb
or
stos
mov
or
cmp
mov
xchg
or
data16
adcb
mov
adc
mov
jmp
or
in
andps
pop
mov
sub
mov
sbb
mov
movl
sti
push
inc
add
cmp
mov
dec
aaa
dec
xchg
test
pop
pushf
lods
mov
sub
or
fwait
loopne
push
ret
pop
je
and
daa
push
inc
cmp
add
xor
sub
cmp
xor
jae
push
adc
mov
jg
sub
lea
das
xchg
mov
xchg
and
pop
pushf
xchg
push
add
xor
or
xchg
js
repnz
or
xchg
xchg
or
adc
dec
lods
rolb
push
scas
and
jecxz
add
paddusb
inc
add
push
adcl
arpl
push
jns
add
in
push
jns
adc
push
cvtps2pd
sub
add
or
xchg
ret
xchg
ss
or
and
mov
inc
mov
pop
xor
push
push
sahf
sbb
sbb
xor
enter
xchg
js
repz
cmp
iret
jnp
dec
ret
pop
xchg
cwtl
sbb
xchg
sub
addr16
aad
sub
jg
data16
sbb
sbb
cmp
hlt
jo
adc
repnz
mov
pop
or
es
push
dec
pop
movsl
add
push
pushfw
or
stos
mov
push
add
out
add
jle
jmp
adc
mov
pop
mov
sub
lret
and
xor
and
sbb
aad
add
fcmovnu
adc
aad
push
or
sti
push
fldcw
mov
pop
mov
mov
ja
fwait
js
or
ret
add
dec
jmp
adc
loopne
aad
and
push
aad
push
es
sbb
leave
mov
sub
enter
inc
or
mov
jne
sub
or
add
push
cmp
stos
leave
push
jmp
add
sbb
packsswb
mov
xor
add
pop
gs
fsubp
jge
ja
pop
sub
dec
push
mov
ror
ss
push
in
fs
add
test
xor
add
pop
cmp
sub
or
js
mov
dec
pop
mov
les
outsb
iret
dec
adc
jb
aad
mov
xor
push
test
ret
rcrb
cmp
push
adc
pushf
add
jne
pop
mov
das
pop
test
mov
faddl
mov
push
jp
push
imul
gs
or
inc
stos
sub
add
data16
js
xchg
nop
ljmp
lea
jg
dec
rorb
jle
xor
lret
add
cwtl
xor
dec
pop
push
inc
jmp
push
mov
insl
stc
mov
outsb
inc
jecxz
or
jge
xchg
sub
les
pop
cmp
mov
aam
pop
jge
jl
lret
jns
es
and
add
or
pop
dec
add
add
addl
movsb
daa
mov
push
mov
aaa
je
inc
cmp
push
aaa
xor
add
mov
and
or
loope
in
insb
repz
xchg
lret
ret
jmp
stos
sub
and
outsl
mov
xchg
xor
testl
dec
aam
loop
mov
adc
adc
xchg
push
add
adc
push
jg
clc
dec
adc
jae
or
add
jg
ljmp
cmc
or
sbb
cmpb
add
rorl
sbb
jge
inc
or
mov
lea
pop
jl
mov
xchg
or
divl
push
cmp
add
or
add
out
mov
pop
sub
sbb
enter
inc
sub
push
inc
and
push
add
js
dec
mov
and
cmpsb
mov
imul
test
loopne
or
aad
xorb
dec
add
add
sub
cmpsb
push
pop
mov
cmp
adc
add
leave
xor
xor
cmp
test
adc
inc
or
aad
jae
push
fwait
fs
and
pop
cmp
xchg
dec
pop
add
jg
inc
cmpsb
sbb
mov
sbb
push
shrl
fcompl
cmp
mov
adc
mov
adc
ja
fnsave
pop
and
dec
rcl
add
or
out
lcall
xchg
add
les
jbe
das
and
mov
push
inc
xchg
je
aam
xor
andb
or
aad
dec
push
jb
dec
jg
sub
push
sub
xchg
jg
inc
add
das
xor
dec
add
or
fisubs
push
or
sub
mov
in
add
imul
ss
lds
sub
push
loopne
xor
mov
xchg
pushf
dec
mov
or
add
pop
popl
int3
sub
arpl
lods
int
sbb
inc
jb
add
xchg
call
push
or
or
or
push
lds
push
js
dec
mov
push
adc
cmp
and
ljmp
xchg
adc
push
or
or
xchg
xor
js
or
and
xchg
mov
xchg
inc
mov
andl
add
xor
and
pusha
add
pop
sub
das
pop
pop
sub
bound
or
mov
movsw
stos
lea
and
push
popf
dec
push
push
adc
pop
add
or
push
pop
sbbb
decl
stos
or
enter
fimuls
decl
or
jmp
scas
cmpsl
cmpsb
and
mov
or
add
mov
dec
fiaddl
pushl
xchg
sbb
push
pop
mov
fiaddl
add
pop
xor
in
sub
or
jae
sub
jle
adc
aad
or
mov
pop
or
cmp
and
mov
jae
insb
or
add
push
andl
jg
push
sub
and
adc
push
add
mov
jmp
ss
cld
mov
cltd
into
jae
or
dec
jg
jbe
stos
mov
stos
jle
inc
sub
adc
jge
dec
es
rcll
mov
push
or
ljmp
jae
push
lods
xchg
push
inc
and
jge
add
call
sub
cmp
movsl
cmpsl
mov
push
cmp
rolb
inc
sub
cmpsb
cmpsb
add
push
push
and
loopne
dec
aam
jae
addr16
inc
test
sub
cmp
lcall
push
sub
ljmp
and
jecxz
inc
or
sub
inc
push
repnz
pusha
or
inc
or
cmp
add
or
enter
jmp
test
jg
fs
xchg
adc
psubb
push
stos
jae
adc
stos
push
or
mov
add
movsl
jle
adc
sub
or
pop
mov
jle
or
stos
add
ljmp
or
push
jae
push
add
dec
mov
insb
or
add
pop
xchg
int
in
adc
push
or
cmp
xor
and
adc
inc
pop
daa
and
hlt
mov
push
stos
jae
cmp
sub
rolb
test
pop
dec
add
rcrb
dec
push
inc
xchg
cmp
pop
stos
or
jle
push
add
lcall
imul
fdivl
fdivrs
or
and
jle
pop
adc
or
loopne
cmpsl
add
into
bnd
rolb
shll
lods
add
xchg
into
add
cmp
add
je
pop
cmp
jae
adc
push
push
push
add
push
movsl
or
add
xchg
ss
xorl
or
jle
or
test
clc
inc
push
xchg
mov
xor
push
les
cmpsb
jle
dec
adc
in
or
jg
lods
cmp
inc
push
test
push
aam
jae
cmp
insl
sub
push
lahf
xchg
aad
mov
repz
add
mov
lods
lock
add
add
scas
adc
push
jno
incl
mov
add
push
js
aad
ret
and
jge
jmp
dec
jo
test
dec
ss
nop
mov
mov
sbb
inc
or
or
mov
adc
js
popf
sub
pusha
pop
add
shlb
jno
lea
gs
das
sub
cmp
inc
xor
adc
fiadds
popw
push
les
insl
ret
cs
mov
mov
push
lahf
sbb
sbb
adc
push
ret
pop
stos
sub
fildll
mov
pop
inc
or
fcomp
push
xlat
xor
sbb
cmp
add
push
js
nop
xor
inc
sbb
mov
mov
outsl
dec
dec
push
pop
sbb
cmp
and
dec
jae
or
scas
jno
les
test
pop
ret
mov
cmp
and
dec
xchg
lock
filds
add
mov
pop
and
mov
push
sbb
int3
mov
mov
pop
iret
cmp
inc
ffree
xor
sub
xchg
jo
xchg
add
mov
or
jecxz
shrb
jnp
out
inc
cmp
adc
and
add
pop
mov
xchg
mov
pop
shrl
fistpll
jbe
les
popa
adc
push
incl
push
push
inc
out
push
stos
inc
inc
iret
jae
fimuls
inc
mov
push
lds
aad
add
adc
mov
sub
add
inc
jl
jae
and
and
call
pop
push
dec
pusha
insb
push
add
push
out
add
push
add
push
push
sbb
xor
ja
xor
cs
sbb
ret
pushf
sub
jno,pn
fists
jge
jnp
or
adc
mov
mov
test
xorb
es
dec
or
push
jns
pop
ja
sbb
les
and
adc
and
add
add
cmp
sbb
cmpsl
sub
ja
mov
xor
mov
ja
cs
js
pop
push
adc
fsubl
js
sub
aam
fistpll
xor
bound
xor
push
mov
sbb
sub
xlat
je
adc
adc
or
les
or
js
pop
sbb
lods
lods
int3
pop
insb
push
adc
sarl
cs
sbb
xorb
adc
cmp
imul
cwtl
pusha
cs
notl
movsb
lret
sub
scas
inc
jo
adc
faddl
sbb
lock
test
mov
enter
inc
pop
xchg
js
push
mov
jae
xchg
add
xor
sbb
hlt
and
lods
push
dec
loope
jl
and
push
and
or
xchg
xchg
cmp
xlat
mov
dec
pop
scas
and
cmp
sbb
adc
or
and
xor
sub
xor
in
into
push
xchg
mov
pop
cmp
inc
into
push
nop
ret
lods
ffree
cmp
inc
push
inc
cli
sbb
push
aaa
or
daa
xchg
push
cmp
hlt
jae
data16
or
test
and
jp
movsb
push
stos
and
jg
mov
cmp
pop
hlt
or
xor
call
mov
jae
pop
or
mov
shll
cwtl
fisttps
xchg
mov
push
mov
or
push
push
push
ja
inc
rorb
repz
xchg
xor
sub
dec
dec
loop
or
and
push
pop
lret
outsb
aad
xchg
lret
push
inc
mov
or
mov
and
inc
mov
cmpsb
xor
imul
push
sbb
push
test
inc
and
cmp
xchg
pusha
in
test
pop
sbb
sarl
push
xor
mov
or
pop
mov
dec
jo
jle
daa
or
call
sbb
subb
or
and
jne
sub
pop
add
loope
add
sub
mov
xor
inc
lds
mov
dec
loopne
adc
push
arpl
pop
cmp
and
mov
cmpsl
xlat
sahf
or
shr
push
aad
dec
ret
popf
push
jno
mov
addr16
mov
inc
cmp
sahf
aas
lcall
hlt
fs
sub
fldenv
mov
insb
inc
push
fisubrs
fcoml
sbb
and
add
pop
adc
fildl
rcr
pop
out
jl
add
mov
or
mov
push
out
push
ret
insl
jbe
add
push
testl
jl
xlat
or
push
rorl
dec
cmpb
jae
xor
sub
ja
or
loope
cmc
pusha
xchg
sbb
pop
and
xchg
addr16
add
xchg
jmp
jb
iret
arpl
mov
and
ja
aaa
mov
cmp
mov
pusha
lds
pop
rolb
adc
inc
lds
or
mov
jl
rolb
fs
in
or
fsubrl
adc
es
dec
jae
adc
dec
jns
or
out
int3
lret
push
and
incl
and
jmp
mov
or
and
in
mov
or
add
scas
ja
lock
sahf
sarl
jge
gs
add
inc
lcall
inc
cmp
pusha
fildl
jecxz
insl
add
push
sbb
add
sbb
add
cmp
popa
pusha
jnp
movsb
adc
xorl
cmp
or
ret
popa
mov
enter
push
ficomps
dec
and
dec
cmp
cwtl
jl
adc
mov
pop
out
cmp
cmp
mov
iret
mov
adc
pop
dec
jno
mov
add
lcall
mov
cmp
or
pop
mov
mov
adc
sbb
jae
ds
and
or
push
test
daa
add
and
add
push
pop
ss
or
sbb
xchg
pop
or
push
push
adc
testl
adcl
loop
fbld
xor
xlat
cwtl
mov
lods
sub
fs
pop
or
int3
es
mov
adc
scas
orl
sub
inc
add
mov
xchg
mov
mov
popl
xor
jg
pop
push
int3
ja
lods
sub
outsl
add
add
and
lds
adc
dec
add
bound
fadds
aas
cwtl
and
pop
adc
mov
push
daa
daa
add
sbbb
add
adc
pop
into
push
and
movsb
sub
mov
add
xchg
lahf
add
adc
test
test
inc
dec
add
add
insb
cmpsl
inc
xor
push
ss
push
or
mov
push
test
add
jne
shlb
pop
xor
or
sub
push
pop
mov
adc
andnps
mov
addr16
shlb
mov
inc
adc
lea
pop
push
xchg
or
outsl
sbb
add
sbb
mov
push
or
addb
sbb
or
add
add
sbbb
sbb
int
inc
cmpb
subb
and
mov
pusha
ss
and
xor
mov
and
mov
mov
addb
push
push
add
mov
addb
addb
or
lds
addb
leave
rcl
addb
xchg
shlb
in
addb
rolb
adcb
mov
addb
adc
pop
addb
fnop
mov
insl
addb
cltd
ror
addb
adc
or
cmp
sub
pop
cmovo
and
sti
sub
and
jg
in
fdivrs
mov
jle
rcrb
cltd
aas
push
pop
popf
rcrl
stc
out
jg
decb
popf
fstps
cltd
cmp
mov
jle,pt
imul
mov
cwtl
mov
xchg
mov
add
add
inc
repnz
mov
dec
pop
inc
or
push
js
sub
jbe
push
xor
push
pusha
and
cmp
push
lods
add
cs
gs
sub
and
or
lea
sbb
insl
mov
or
in
mov
loopne
mov
push
sub
fisubrs
adc
xor
inc
cmpsb
mov
mov
cwtl
xor
and
das
in
loopne
and
add
in
and
inc
and
push
add
jb
jns
addb
sbb
inc
repnz
add
sbb
add
mov
xor
add
dec
sub
sbb
cld
aas
mov
xor
adc
pop
and
xchg
lahf
cld
dec
imul
add
and
and
mov
adc
and
mov
add
add
inc
xor
inc
and
stc
nop
jl
push
add
stos
adc
add
cwtl
adc
and
and
xor
and
stc
and
sbb
jns
cmpsb
imul
pop
repnz
add
out
adc
inc
xor
adc
add
adc
add
cmpsl
xchg
setb
add
xor
out
ficoml
adc
add
sbb
mov
out
and
xor
mov
xor
xor
and
cmp
pop
xor
adc
dec
add
fs
mov
xchg
and
xchg
lret
sub
pop
adc
mov
icebp
jo
push
data16
and
enter
xor
xor
xchg
dec
add
adc
add
mov
sub
add
enter
xor
adc
and
jns
dec
adc
adc
add
and
inc
and
and
test
and
push
pop
mov
xchg
inc
jb
mov
or
movsl
sbb
sbb
in
pop
sub
inc
mov
sahf
mov
add
shlb
in
sbb
dec
xchg
scas
pop
mov
out
hlt
and
or
xchg
dec
jecxz
mov
test
or
adc
les
mov
mov
ja
fsub
fcoms
jp
mov
dec
clc
mov
push
xlat
jne
shll
or
or
cld
pop
shll
xchg
lock
add
jne
xor
sub
shrb
in
dec
mov
mov
mov
sub
mov
dec
lcall
dec
push
mov
hlt
imul
mov
lret
jmp
xor
add
xchg
hlt
inc
xor
cmpsb
and
outsl
orl
xchg
xor
xorb
inc
inc
cmp
bound
shrl
inc
and
xor
push
dec
fistps
sahf
push
jge
add
xchg
and
mov
push
mov
fistpl
repnz
in
cmp
mov
daa
subb
dec
shrl
xor
insl
insl
mov
je
cmpsb
sub
sub
mov
dec
inc
xor
xchg
or
cmp
or
rclb
and
loopne
loop
repz
jecxz
xor
dec
dec
cmp
repz
inc
imul
popa
insl
gs
sub
add
aam
xor
adc
add
pop
push
xor
enter
pop
bound
jle
incl
jg
cmp
lahf
sub
pushl
dec
call
test
aaa
adc
jnp
or
jg
mov
mov
mov
mov
inc
rcll
inc
orl
mov
inc
mov
repz
pop
jge
adc
mov
in
cmp
xor
sub
pop
xchg
dec
pop
ret
inc
jae
mov
negb
pop
jno
lock
in
dec
mov
xor
clc
sbbb
xor
pop
lock
adc
lock
inc
sahf
push
cld
test
insb
in
mov
lcall
and
or
fsubl
mov
jmp
mov
cmp
shl
xchg
sub
imul
push
sarb
dec
out
or
mov
loop
lret
and
inc
push
dec
sbb
push
jecxz
cli
push
aam
push
cmp
add
lret
bound
outsl
and
pop
push
mov
pop
fistpl
cmp
idivl
fisttps
mov
lea
jno
das
mov
or
xor
loop
aas
inc
lods
repz
lods
or
xor
mov
dec
mov
jp
test
orb
xor
xor
cwtl
jb
outsl
outsb
dec
shll
gs
cs
mov
dec
aam
aad
insb
adc
xor
xlat
popa
push
jne
xor
shrl
push
cmp
fnstsw
loope
adc
cmc
in
jnp
sti
dec
mulb
idiv
xchg
stc
test
je
sti
dec
mov
xor
call
into
imul
or
push
hlt
sbb
cld
in
je
xchg
lret
mov
movb
notb
and
sub
scas
into
xchg
lret
in
cmc
iret
rcl
ror
mov
js
icebp
cmp
rol
or
or
outsl
popa
jle
std
cmp
cltd
pop
enter
push
lret
and
ror
jb
int
into
lock
repz
iret
inc
sarb
inc
sbb
jbe
shlb
shlb
or
pop
dec
xchg
mov
cmp
jae
xor
outsb
pop
sbb
push
mov
xor
push
push
dec
out
mov
rolb
adc
inc
cmpl
cmp
cmp
pop
ret
push
jmp
fcoml
mov
repz
testl
xor
or
fldl
lcall
fsts
aas
adc
add
adc
sub
and
lcall
aas
test
inc
inc
and
jmp
js
sarb
repnz
fnstcw
pushf
dec
in
and
mov
xchg
xchg
xchg
xchg
jb
insl
shlb
lret
fwait
ret
in
inc
jecxz
lods
mov
cmp
int
test
in
ja
nop
or
std
xchg
std
fldl2e
in
xchg
std
xchg
std
xchg
std
xchg
mov
fwait
int
xchg
divb
insb
mov
ss
mov
mov
test
mov
inc
xor
cmp
ss
sbb
push
out
mov
divb
push
push
adc
mov
push
inc
fsubr
xchg
push
adc
iret
repz
push
mov
cld
std
cmpsb
or
dec
jns
xor
jns
cs
out
and
es
cmp
mov
imul
push
add
jns
inc
add
add
xlat
jae
jae
es
sub
push
adc
cli
imul
xor
pop
rcrb
lahf
movsb
imul
lcall
popa
jne
imul
sbb
scas
mov
mov
lcall
imul
js
imul
jnp
insb
leave
lret
cs
fs
or
into
iret
shrb
cmpsb
imul
push
rcrl
cli
sub
push
add
sbb
jg
push
movsb
bnd
repz
aam
add
in
or
fxch
xchg
jb
jae
lds
fisubrs
jne
and
std
fwait
call
push
jo
dec
ja
rorl
repnz
mov
jge
data16
sub
ds
mov
mov
mov
adc
imul
dec
mov
les
mov
mov
ret
jnp
adc
cmc
or
push
pop
fimuls
bound
adc
jne
sub
mov
ret
adc
sbb
mov
dec
out
xor
notb
push
in
in
sbbb
add
outsb
mov
loopne,pn
adc
sahf
or
in
lods
sbb
call
outsl
dec
clc
enter
mov
shlb
lea
pop
push
cmp
adc
icebp
xchg
fldt
inc
add
outsb
dec
push
mov
adc
hlt
push
push
repz
ljmp
jbe
sub
cmp
xchg
mov
mov
sbb
cmp
leave
pop
mov
rol
inc
add
jge
out
push
push
lock
or
or
jo
sbb
loop
or
call
pop
pop
adc
or
das
stc
sbb
addb
inc
ss
add
cmp
pop
cmpsl
sbb
loopne
repz
xor
adc
repnz
cmpsl
adc
mov
and
pop
ss
leave
inc
and
push
push
aaa
leave
push
enter
push
or
sub
adc
and
inc
pop
out
movsb
add
popa
lods
cmc
dec
hlt
cmpsb
das
adc
pusha
popf
xchg
push
sbb
subb
sbb
push
cs
icebp
and
jmp
mov
jae
pop
mov
fisttpll
add
sbb
sub
pushl
test
das
jae
sub
mov
sbb
repz
adcb
mov
out
scas
subb
cwtl
inc
and
stos
push
mov
int3
or
xor
movhps
ss
out
sahf
inc
push
pusha
insb
je
jns
out
cwtl
lods
ret
repz
out
lock
fmulp
ret
cmp
mov
lcall
ds
out
xchg
push
mov
sahf
out
jbe
dec
pop
bound
das
dec
inc
pop
push
push
ss
jns
sbb
inc
aas
xor
aaa
fcmove
jle
aaa
xor
xor
inc
ja
dec
loopne
nop
addr16
and
outsb
cmp
ss
xor
push
ficomps
sti
jg
dec
gs
outsl
popa
jb
and
outsl
jne
jae
and
dec
js
push
popaw
cwtl
push
push
pop
orb
lret
imul
adc
mov
inc
push
sbb
lcall
sub
cmp
movsb
dec
sub
lods
inc
mov
fstpt
inc
inc
daa
mov
jno
imul
dec
and
mov
xchg
movsb
add
fmulp
and
sbb
inc
lea
roll
inc
inc
xor
and
rcrl
xchg
mov
lea
rcr
xor
pop
adc
rcrl
inc
sub
rorl
cmpsl
inc
jecxz
xchg
sbbl
subb
inc
lea
cmp
pop
popa
je
lea
addr16
pop
push
pop
or
pop
shlb
inc
or
pop
sub
and
jp
inc
xor
jno
mov
cmp
adc
outsb
outsw
nop
sub
adc
sbb
and
adc
scas
push
add
add
mov
mov
push
outsb
jb
inc
mov
ror
inc
outsl
js
xor
and
jge
jno
lea
adc
push
faddl
mov
arpl
push
sbb
mov
add
or
push
roll
mov
or
inc
arpl
rcrl
arpl
push
lea
lock
mov
mov
add
insl
dec
jae
mov
dec
out
and
mov
mov
pop
or
pusha
push
mov
ret
and
xchg
testl
in
mov
ss
aaa
das
xchg
test
int
mov
mov
push
or
cmp
repz
sub
iret
repz
out
fidivrs
iret
clc
or
and
push
xor
jge
and
jnp
push
xchg
dec
add
or
add
and
sub
add
add
inc
jbe
test
out
lcall
dec
mov
nopl
inc
cmpsb
push
add
int
mov
mov
sbb
push
jne
in
loope
cmp
pop
popa
fisubrl
orb
adc
adc
fs
test
pop
fwait
js
jne
adc
xor
and
cmp
mov
and
addr16
addl
pop
jae
jo
sub
out
call
das
movsl
imul
push
and
sbb
je
cmp
into
or
lock
je
pop
imul
push
repz
inc
into
imul
xor
xor
cmp
sub
sbb
das
add
inc
mov
pop
adc
and
pop
or
lock
dec
add
push
dec
or
pop
jnp
mov
xlat
out
dec
ficomps
lar
mov
roll
mov
jb
or
lcall
jne
repnz
inc
or
testl
bound
cs
inc
pop
repnz
mov
mov
and
popa
out
sbb
inc
out
add
out
jge
insl
iret
sbb
arpl
jo
imul
dec
subb
push
cld
fiaddl
xchg
ret
sub
pop
cmp
xor
bound
or
aaa
subb
mov
addr16
popa
cmpb
mov
ds
push
addr16
fisubs
mov
cmp
push
xlat
push
scas
sub
mov
add
jbe
jbe
out
push
pop
push
popa
paddsw
push
dec
sbb
imul
mov
push
jbe
je
ja
out
inc
add
fs
outsl
push
arpl
aad
xchg
and
imul
cwtl
test
imul
movl
dec
pusha
roll
mov
push
lahf
into
mov
scas
subb
cmp
xor
xor
xor
xor
xor
inc
xor
cli
xor
pusha
xor
decl
xor
xor
xor
mov
fwait
xor
xor
xor
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xorb
xor
decl
js
jg
mov
fwait
ss
aaa
xorb
aaa
pushf
aaa
mov
cmp
cmp
push
cmp
jmp
cmp
cmp
cmp
cmp
cmpl
dec
cmp
ret
cmp
lret
cmp
cmp
stos
cmp
or
jne
add
sub
jg
dec
xor
xchg
xchg
xor
xor
xor
xor
jne
jg
test
mov
lahf
xor
xor
xor
incl
cmpsb
xor
fnstenv
add
ss
ss
inc
ss
out
divb
and
aaa
mov
cmp
mov
mov
sarb
cmp
cmp
cmp
cmp
cmp
or
mov
je
xor
xor
and
std
sub
add
dec
aam
pop
push
adc
xor
sbbb
push
or
xor
dec
adc
mov
fisubl
test
xchg
push
mov
cwtl
jnp
add
mov
or
nop
inc
movsl
imulb
lods
jae
jne
mov
dec
fildl
sbb
dec
add
add
xor
lea
scas
pop
dec
outsl
add
add
mov
push
xor
push
or
cmp
mov
add
mov
or
add
push
adc
push
dec
aaa
repz
sahf
mov
popf
add
sbb
or
push
add
mov
stos
cwtl
and
mov
push
dec
add
movsb
jecxz
push
lods
jl
push
mov
pop
inc
inc
jns
cmp
xchg
xchg
vmxoff
fs
xchg
add
pop
inc
push
stos
adc
inc
mov
sub
mov
in
into
inc
nop
pop
add
sahf
and
push
or
imul
add
add
dec
sbb
xchg
popa
xor
and
mull
push
dec
pop
or
and
mov
sbb
inc
and
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
