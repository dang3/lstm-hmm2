out
call
in
sub
andb
push
push
push
push
xor
pop
lea
repz
stos
sub
push
stos
stos
pop
xor
jmp
movb
or
loope
loop
cmpsl
jns
cmpsl
jecxz
in
in
cmpsl
jns
xor
cs
call
insb
jmp
push
or
call
pop
mov
xor
push
std
or
add
push
mov
push
push
call
mov
in
mov
cltd
dec
xor
or
mov
lea
push
push
hlt
or
inc
jne
call
fistpll
ss
adc
and
pop
pop
pop
leave
paddd
xchg
add
notb
push
or
in
pusha
cmp
add
int3
jmp
cmp
sub
mov
inc
fiadds
mov
or
mov
adc
or
pushl
inc
pop
xorl
jmp
adc
mov
cld
sti
out
mov
incl
cld
push
push
push
add
push
jae
fcompl
or
mov
fcomps
push
cli
call
push
mov
in
rorb
adc
add
add
jge
pop
add
push
pop
cmp
shll
mov
adc
dec
outsl
dec
aaa
mov
xor
cmp
je
push
and
cmp
push
clc
cmp
pop
ds
call
pop
lcall
cmpl
xchg
mov
in
setne
cmp
fcompl
imul
adc
clc
mov
push
pop
and
pop
es
loopne
push
push
pop
push
push
fs
jp
xchg
inc
inc
push
adc
movsl
inc
je
push
inc
pop
test
xchg
cmp
push
push
sub
jp
insl
daa
es
push
pop
xorb
shl
push
ret
push
loop
rorl
mov
jge
add
inc
xorb
je
or
insb
loopne
sub
pusha
test
je
es
cltd
loopne
pop
xor
pushf
pop
pop
jecxz
lds
sbb
pop
or
xor
pop
mov
adcl
adc
jnp
dec
adc
aam
mov
popf
sbb
cmp
push
jmp
and
adc
push
mov
outsb
imull
add
or
jecxz
or
pop
les
shlb
mov
push
mov
ror
mov
inc
inc
dec
dec
test
jne
sub
jmp
pop
and
mov
inc
stos
js
mov
push
ljmp
mov
cmp
je
fdiv
sub
cld
sbb
mov
sbb
inc
and
aam
call
call
cmpl
jne
dec
push
mov
pusha
mov
push
mov
cmp
sbb
push
dec
adc
out
mov
imul
mov
or
fadds
scas
mov
sub
inc
push
mov
mov
push
dec
test
in
jg
mov
pop
shll
enter
cli
add
repz
in
mov
call
push
lea
jge
andb
rcll
cmp
sti
sub
stos
mov
mov
push
and
push
and
add
add
sti
push
ret
adc
mov
add
out
mov
or
xchg
xor
mov
jo
loopne
fs
aam
sarb
cmc
popa
push
stos
in
mov
jo
addr16
mulb
adc
cmp
clc
pop
clc
pop
pop
pop
xor
dec
and
cmpb
inc
add
rcr
icebp
mov
inc
test
rorl
push
mov
call
jmp
and
mov
test
je
neg
lock
push
push
add
pop
mov
jne
andb
pop
lock
in
gs
cmp
je
inc
mov
or
sbb
sbb
test
jne
pop
and
push
push
test
sarl
cmp
cld
push
or
cmp
sarl
outsb
call
sahf
cmpsb
flds
pushl
add
imul
rcrl
popw
or
jne
insb
mov
mov
ljmp
rep
iret
daa
mov
mov
inc
test
loopne
js
add
je
pop
dec
daa
cmp
popf
inc
sbb
xor
je
push
shrl
dec
test
jp
add
add
fcmovnbe
je
pop
test
or
cwtl
pop
sbb
stos
push
mov
sub
push
std
dec
push
mov
xchg
or
push
sar
pop
int3
adc
jae
cltd
shrl
cmp
test
in
inc
rcl
or
stc
cltd
rcl
aad
popf
pusha
dec
repz
hlt
and
stc
sub
sub
mov
push
ja
out
test
shrb
mov
cltd
pminub
push
movsb
loop
cmp
mov
mov
ss
outsb
pop
mov
cmc
push
jb
outsl
imull
insb
sbb
cli
pop
sti
fcmovnu
adc
mov
mov
fstp
pop
push
dec
cmp
in
push
sbb
in
xlat
adc
push
push
push
cmp
mulb
sbb
dec
push
pop
pop
and
mov
jmp
mov
push
fs
daa
pop
aad
cmc
mov
push
clc
xor
ror
xor
jns
sti
addr16
push
cld
mov
mov
imul
sbb
fcmovnu
xchg
sbb
arpl
push
sbb
int3
or
cmp
daa
push
dec
push
mov
mov
gs
fnstenv
das
es
out
push
out
call
jmpw
gs
cs
in
fdivs
out
inc
out
mov
lock
mov
adc
test
les
outsb
xorb
mov
das
aas
push
add
test
sbb
inc
dec
mov
fistl
fidivs
ja
icebp
sbbb
jo
stos
ret
mov
jmp
sub
popf
pop
fcmovu
int3
add
movsb
test
leave
mov
or
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
sbb
and
call
push
xor
sbb
xor
cmp
repz
inc
push
pop
outsb
or
cmp
pushf
stos
rcl
lock
insb
add
xor
cmp
dec
jns
out
fs
xchg
mov
mov
out
fiadds
rol
mov
stos
adc
pushf
add
imul
and
push
pop
data16
rolb
sti
sti
rolb
outsl
arpl
je
data16
insl
addr16
xor
sub
dec
xor
bound
push
jb
jbe
insb
gs
jae
scas
cld
jns
je
insl
xor
pop
add
inc
pop
pop
xor
pushw
outsl
insl
in
jmp
imul
fs
sub
add
jg
imul
add
cs
and
imul
in
mov
pop
insl
fs
mov
add
xchg
xchg
sbb
pusha
ret
sub
adc
pop
leave
jp
jbe
and
stos
nop
add
mov
inc
dec
dec
mov
fs
insb
xchg
cmp
mov
dec
roll
mov
aaa
add
adc
subb
pop
syscall
andl
cmp
add
add
nop
xchg
mov
inc
clc
or
pop
mov
mov
and
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
mov
xchg
jmp
mov
xor
push
pop
jle
stc
inc
xchg
gs
scas
test
xchg
lods
jecxz
mov
jg
fbld
push
mov
aas
imul
fstl
subb
jmp
push
ja
inc
dec
add
add
push
lds
jg
ret
add
and
rorl
inc
add
jg
adc
pop
or
add
mov
mov
sbb
insl
adc
test
dec
xchg
fldcw
mov
dec
fadds
and
movsb
or
les
rcr
jge
cmp
cmpsl
mov
int
add
fs
je
fadd
cmpsl
arpl
fadd
inc
loopne
fiaddl
loope
push
push
push
inc
stc
lret
int
aas
shrb
jae
xor
push
scas
dec
in
push
int3
lahf
pusha
jb
insb
outsl
arpl
inc
repnz
ss
inc
mov
clc
stc
jb,pn
jb
xchg
xlat
add
test
sub
mov
out
sahf
push
push
mov
pop
mov
jns
inc
sub
add
xchg
cs
repz
xchg
push
mov
fcomip
cmp
xorb
add
dec
xchg
iret
repz
lret
out
cmp
adc
jns
bound
out
sahf
out
mov
out
imul
push
push
out
sahf
out
outsb
jp
mov
mov
out
add
out
push
push
cmp
sahf
out
sahf
jo
mov
iret
sarl
pusha
push
inc
xor
iret
repz
add
mov
sbb
shrb
jg
ds
fidivrs
push
bound
sahf
out
sahf
inc
cmp
sub
jns
mov
rcr
sarl
out
cli
add
push
iret
repz
sbb
sub
ds
jnp
repz
pop
jp
mov
push
pop
iret
adc
xchg
push
add
fucom
jns
and
push
push
hlt
nop
into
out
sahf
out
aam
mov
xchg
sahf
out
sahf
xchg
dec
inc
cs
out
sbb
decb
iret
repz
repz
jbe
bound
sub
in
repz
add
mov
stos
mov
or
pop
pop
push
push
addb
imul
xchg
push
fdivs
xchg
jle
add
adc
dec
outsb
je
jb
gs
mov
xor
or
outsb
xor
push
gs
fs
xchg
pop
fcoms
dec
jo
outsb
push
jb
inc
daa
inc
icebp
lret
jb
dec
dec
dec
inc
push
and
pop
adc
push
data16
popa
bound
in
mov
push
inc
push
inc
pop
dec
imul
pop
push
imul
dec
push
pop
inc
jne
outsl
dec
xorb
push
mov
xor
pushf
or
cmp
adc
mov
and
inc
pop
orb
mov
or
pop
inc
cmp
jbe
or
adc
and
pop
leave
repz
pop
or
jbe
inc
mov
cmpsl
and
sti
add
pop
add
mov
push
jmp
pop
popa
jno
pop
inc
add
xchg
sub
stos
xchg
jg
xchg
push
adc
sahf
fldt
or
incl
inc
movhps
lds
call
inc
test
inc
punpckhwd
adc
mov
test
cmp
and
mov
push
comiss
xchg
lahf
xor
pop
xor
std
ljmp
add
outsb
add
add
jae
push
push
arpl
cmp
jne
jb
gs
cmp
inc
adc
mov
gs
gs
push
inc
jb
jmp
decl
in
or
pop
out
das
out
pop
and
inc
mov
lahf
addr16
xor
sbb
mov
inc
add
fs
jmp
cmc
mov
loopne
push
add
jmp
xor
arpl
data16
gs
push
mov
add
jb,pn
lea
arpl
inc
arpl
or
sub
mov
lods
xchg
fs
jg
mov
xor
dec
push
pop
dec
cwtl
push
outsb
fs
mov
call
jno
gs
inc
xchg
dec
outsl
je
out
mov
jns
iret
dec
jo
imul
sbb
or
imul
jl
shlb
or
pop
pop
dec
xor
or
inc
aaa
xchg
sub
and
pop
cs
clc
decl
jbe
arpl
popa
insl
gs
inc
les
dec
shlb
imul
ljmp
mov
xor
mov
mov
sub
mov
mov
rorb
mov
shl
add
sub
ja
jg
cmp
repz
shl
add
push
lea
push
call
push
jns
dec
or
mov
std
mov
outsb
movl
inc
and
add
in
sbb
fld
sbb
jl
adc
push
mull
push
mov
sbb
lock
lea
push
push
push
shll
fiadds
getsec
dec
cmpl
jns
nop
ja
cmpsb
adc
add
jae
mov
sahf
vmresume
mov
fucomip
ljmp
pop
out
out
out
fcmovnu
mov
sub
cmpl
lock
dec
iret
imul
sti
add
sbb
repz
push
fwait
jne
scas
std
les
bound
mov
add
insl
dec
adc
mov
mov
pop
jbe
fldl
in
mov
mov
sub
cmp
mov
loope
daa
sbb
dec
jo
fstpl
mov
rcll
mov
add
mov
jns
daa
jne
in
jle
std
loope
mov
repnz
cmp
mov
sbb
orl
pop
cs
popa
scas
es
repz
je
outsb
lods
out
lahf
addr16
filds
int
daa
jb
imul
in
aas
std
add
dec
fstpl
decb
fistl
mov
xor
in
pop
add
push
add
lret
jnp
stc
add
jnp
es
mov
cmp
sub
pop
add
mov
mov
fcmovne
shrl
push
mov
inc
and
mov
pop
mov
rorl
mov
jo
mov
mov
lcall
mov
inc
insl
add
dec
cs
call
inc
xor
andl
sbb
mov
lods
popf
popf
cmp
repz
mov
out
add
xor
and
push
dec
mov
xor
jl
jg
out
inc
out
in
roll
mov
rcl
or
daa
pop
aas
mov
cld
push
pop
fistpll
sub
dec
out
pushf
cmp
jl
jnp
sahf
ret
inc
fcmovne
pop
xor
mov
push
push
cmp
pop
sti
jns
mov
out
dec
xor
insb
sbb
dec
in
ja
out
mov
imul
ja
outsl
xchg
scas
in
sarl
fninit
cs
xacquire
xchg
loope
roll
jmp
sti
ds
mov
sub
or
scas
push
pop
sub
fcmovnu
inc
mov
and
add
stos
push
pop
mov
lret
and
lret
and
inc
pop
xor
sub
adc
call
scas
or
stc
lock
push
push
and
push
add
aaa
pop
mov
loopne
ficomps
ja
pop
xchg
scas
int3
iret
dec
fildll
add
xor
es
fistpll
lahf
xchg
sub
mov
fstl
and
xchg
add
pop
ja
mov
fdiv
xor
sahf
cmp
cmc
or
orb
decl
jno
lret
shll
mov
push
das
out
lahf
iret
jmp
add
out
add
adc
sti
loope
pop
ja
cs
cltd
gs
hlt
sti
xor
fsubl
pop
dec
inc
fcomps
or
jnp
sarl
bound
mov
aas
lahf
leave
or
int3
lea
ja
adc
xchg
into
clc
les
mov
mov
leave
in
out
sti
cs
jmp
mov
jg
add
jmp
push
in
mov
das
movzww
pusha
decl
cmp
stc
xor
stc
clc
call
mov
pushl
pushf
call
xor
movl
pop
or
jnp
pushf
push
pushf
cmpb
xchg
idivb
jmp
fwait
in
je
mov
sahf
gs
pushf
rclb
fwait
ja
icebp
pushf
push
adc
push
and
into
clc
rorw
ffreep
add
repz
sbb
jbe
jmp
stc
mov
mov
adc
cmp
push
pop
mov
or
xor
jmp
fcmovbe
aam
ret
mov
int
dec
in
jmp
stos
mov
aad
mov
ret
rclb
ja
ret
jle
xlat
cmp
pop
and
sub
ja
jg
repz
into
and
mov
stos
daa
xor
xor
fcom
repnz
xor
ret
jmp
and
xor
ffree
cli
xor
jmp
test
cmp
call
mov
pop
pop
js
outsb
outsl
ja
jnp
jnp
add
repnz
enter
jg
fdivr
mov
inc
jne
je
inc
inc
dec
out
ljmp
rcl
sub
adc
jmp
int
fwait
and
mov
or
imulb
push
shl
rcl
lds
xorl
lods
jae
das
xor
xor
jl
fdivp
push
push
push
dec
mov
inc
push
dec
clc
fdivr
mov
mov
clc
rcl
mov
enter
imul
mov
adc
push
addr16
insl
insb
gs
sbb
lea
punpckldq
out
push
lods
bound
xor
gs
pusha
or
cmp
xor
inc
xor
and
ret
mov
inc
dec
push
pop
or
scas
sbb
pop
mov
in
and
ret
pop
or
push
xlat
pushf
fs
push
sbbl
mov
fldenv
sbb
pushf
fstpl
push
add
insl
call
in
push
push
loopne
mov
mov
sub
clc
aas
xor
cld
add
inc
mov
fucomp
popl
lret
sbb
lea
outsl
cmp
mov
cmp
push
or
jle
push
push
push
mov
sbb
inc
dec
in
add
cli
mov
sub
sub
insl
mov
add
push
sbb
sub
sub
inc
add
push
jmp
lea
push
call
sar
jne
mov
dec
hlt
pop
in
or
mov
push
dec
push
or
xor
lods
lock
or
popa
push
push
push
mov
lds
mov
or
push
adc
movsb
mov
and
dec
push
call
cmp
mov
pop
pop
jbe
mov
cmp
pop
outsb
scas
std
aas
adc
mov
andb
mov
adc
cmp
jle
inc
pop
cmp
pop
jl
push
outsb
rcrb
inc
add
addl
jecxz
add
js
inc
adc
out
xchg
pop
popf
add
add
pop
dec
clc
add
sti
push
movsb
push
push
push
push
in
mov
ds
add
cmp
adc
pop
sub
aas
xor
shlb
ret
cmpw
jne
scas
test
sub
cmp
lret
adc
mov
jl
adc
xor
dec
cmp
adc
inc
daa
sbb
sub
inc
adc
sbb
outsb
fdecstp
lret
xor
adc
das
push
ljmp
cld
jbe
movsbl
pop
je
adc
call
js
cmp
pop
jb
push
mov
movsl
sub
or
mov
mov
add
ret
add
sbb
xlat
jle
std
and
add
or
sub
call
cmp
sbb
push
ja
mov
pop
mov
add
or
out
xor
jmp
repnz
sbb
call
push
adc
es
xchg
xor
mov
sbb
lock
add
mov
repz
movsl
movsb
mov
add
ja
mov
lock
in
push
push
xor
inc
outsl
mov
dec
mov
sbb
mov
lret
ja
enter
mov
dec
pop
mov
test
xor
add
cmp
sarl
sbb
inc
mov
add
not
xor
xor
inc
cmp
or
sbb
cmpsb
mov
dec
sti
jb
push
es
push
sbb
std
add
cmp
ja
inc
mov
lds
xor
scas
adc
adc
jbe
out
loopne
push
or
push
movsl
jnp
rcrb
push
push
adc
cmp
jb
into
sub
mov
pop
adc
je
call
mov
stc
leave
vmread
inc
adc
adc
stc
xchg
jl
adc
add
push
repnz
inc
adc
das
jns
subl
adc
inc
jle
inc
adc
adc
inc
adc
cs
adcb
push
mov
and
lahf
in
xchg
rolb
ljmp
stc
test
add
cwtl
jp
inc
and
dec
cmp
jle
popf
fwait
enter
pop
sbb
inc
adc
movsb
push
jo
cmp
std
mov
add
mov
pop
xchg
rol
and
sbb
add
in
adc
adc
mov
icebp
std
lock
jl
fstps
and
jae
int
push
mov
jnp
aas
add
into
push
push
or
dec
mov
loope
shll
push
iret
clc
popf
clc
adc
jmp
ds
push
cmp
hlt
jae
sahf
out
sahf
cmc
data16
pop
jns
in
imul
or
movsl
jns
cmpsl
sti
fs
insb
std
lock
nop
popf
push
push
sub
repz
xor
inc
push
sub
in
call
inc
mov
mov
xlat
push
hlt
dec
hlt
inc
test
sahf
lahf
or
cmp
mov
add
jle
stos
cmp
mov
jle
mov
dec
sbb
in
ja
mov
mov
sar
adc
fidivrs
adc
je
test
jne
mov
loop
decl
hlt
mov
push
in
jne
cmpl
daa
incl
mov
cmp
cld
jne
cmp
inc
clc
push
cmp
in
push
and
add
popa
hlt
add
inc
sub
into
jl
inc
cmp
jl
jp
pop
lock
xor
idivb
and
pop
into
xchg
add
iret
rol
lock
enter
js
pop
xchg
fildl
ja
jne
inc
repnz
rclb
lock
negb
jbe
arpl
js
rclb
loope
push
adc
and
mov
add
add
add
xlat
cmp
xchg
shlb
aaa
ret
push
xor
or
or
je
adc
add
pop
pushf
push
pop
dec
push
sbb
mov
outsb
push
jmp
and
sub
xor
js
pop
and
mov
lea
inc
call
push
in
ljmp
idiv
sub
push
xor
shl
inc
jmp
andb
mov
jmp
xor
adc
sbb
and
rcl
inc
adc
add
adc
adc
adc
ss
inc
adc
test
pop
push
adc
sub
and
dec
roll
pop
faddp
cld
fcoms
add
push
push
xor
outsb
call
mov
or
lds
and
pop
ja
xor
icebp
fcomip
sub
jo
movb
inc
cmp
jb
pushl
jecxz
shrl
or
addr16
shr
andl
mov
and
ljmp
or
sti
mov
and
add
shll
add
push
adc
adc
std
ljmp
shr
lea
and
cmp
jae
incl
lret
shr
ret
notb
add
push
leave
je
inc
push
mov
dec
or
mov
or
inc
mov
mov
jne
and
inc
sbb
sub
xor
xor
mov
mov
rolb
or
sarl
fdivp
jnp
cli
adc
jne
push
push
mov
push
mov
decl
push
ds
or
pop
pop
and
cld
push
xor
pop
add
jno
push
mov
mov
not
and
fistpll
sbb
adc
repz
add
lea
xor
loop
ljmp
add
int3
mov
mov
pop
or
mov
add
lea
mov
shr
in
outsl
out
sub
or
repnz
aam
pop
or
mov
and
or
pop
or
and
out
xadd
adc
pop
mov
lock
and
not
jo
outsl
xorl
inc
pop
xor
into
mov
imull
add
shr
or
add
cwtl
decb
adc
mov
sbb
mov
stos
pop
loop
jae
aaa
cli
mov
stos
push
repnz
fcomip
shlb
push
or
jbe
dec
dec
add
hlt
outsb
outsb
aaa
adc
movb
adc
or
sbb
xlat
mov
sub
add
je
repnz
cs
sbb
inc
xor
in
sarl
dec
inc
clc
jge
adc
adc
sbb
mov
xchg
inc
std
xor
push
xorl
jle
xor
bound
add
xor
and
stc
subl
add
mov
cwtl
subb
pop
lock
sbb
pop
or
and
not
aaa
pop
addr16
mov
pop
pop
scas
test
mov
add
push
mov
les
rorb
xor
add
pop
stos
les
movups
dec
subl
or
lcall
pop
mov
mov
adc
lret
lahf
push
ret
mov
lods
les
adc
out
adc
rorl
fcoml
rcll
pop
push
pop
dec
cld
pop
push
cld
fcmovnu
andl
enter
mov
push
mov
cmpsb
mov
inc
cmp
push
call
outsb
dec
or
cmpl
ret
ret
sub
mov
sarl
or
ljmpw
cmp
or
push
pop
bound
testb
or
xor
shlb
clc
sub
lock
test
sahf
cmp
inc
rclb
ret
loopne
or
add
mov
or
out
pop
pop
es
dec
shl
adc
repnz
dec
fcmovu
clc
lea
mov
shl
enter
bound
test
cld
sub
or
pop
hlt
pop
adc
pop
adc
call
xlat
pop
mov
fdiv
sbb
rol
push
adc
add
mov
rcrb
int3
in
or
dec
ficompl
in
pop
and
cmp
jo
jge
add
mov
insb
ds
mov
cmpsl
jmp
sub
cld
sub
test
fbld
fs
int
and
sbb
loopne
ret
rcll
pop
aaa
ret
mov
shr
mov
push
mov
adc
imul
sbb
push
adc
push
in
jo
lods
xor
fsubp
lahf
pop
pushf
call
inc
loop
shr
xchg
inc
or
rolb
add
add
shll
aam
mov
lret
loopne
xchg
dec
stos
inc
dec
test
int3
stos
sbb
add
adc
push
cmpsl
push
mov
lcall
sub
adc
or
xor
and
lret
pop
inc
cmp
lcall
stos
inc
shll
in
xor
inc
call
push
stc
cmp
or
pop
sub
clc
loopne
icebp
fmuls
adc
cmpsb
or
xor
xor
cmp
std
jl
fcompl
xor
xchg
inc
ljmp
jp
sbb
and
adc
xor
loop
data16
out
mov
int3
pop
pusha
dec
mov
not
loop
cli
xor
add
jecxz
movsb
cmp
mov
je
out
adc
sbb
loopne
jle
sub
notl
xor
lock
cli
daa
mov
push
int
nop
fimuls
decb
xor
aam
ffreep
jmp
adc
pop
jge
fidivs
push
lock
lcall
add
or
inc
shll
cmp
aam
int
cmpsb
push
xor
out
in
stos
les
cmpsl
jmp
jle
out
out
dec
stc
ret
mov
hlt
clc
jl
pop
call
xor
aas
je
aam
gs
lods
les
je
ljmp
sti
push
cli
xor
mov
push
inc
adc
push
shlb
mov
add
or
enter
clc
lcall
sbb
xchg
ljmp
inc
push
or
jo
cld
dec
jne
rclb
cmpsl
and
aas
sbb
cmp
or
shl
sub
mov
inc
adc
mov
gs
xor
movsl
push
sarl
sbb
lock
fdivrp
xchg
int3
or
out
out
mov
cmp
cmp
jge
out
lcall
out
out
push
in
fdiv
mov
cmp
and
rcrl
cmpsl
or
pop
jmp
xchg
mov
lods
call
outsl
and
fninit
push
hlt
fwait
add
xchg
mov
loopne
sub
jecxz
loop
mov
jbe
inc
mov
cmpb
push
adc
add
mov
enter
cmpb
stos
out
int3
popf
call
out
fadds
scas
push
xor
jo
inc
or
fcomp
test
ret
xor
aam
rcl
sub
ret
and
ret
sbb
mov
pushl
xchg
roll
repnz
lods
ljmp
pop
dec
mov
mov
push
enter
or
sbb
or
lock
mov
mov
mov
dec
pushl
inc
mov
add
pop
cmp
jl
push
pop
sub
push
icebp
mov
jecxz
push
push
imulb
and
push
movzbl
mov
jmp
cmp
mov
fmull
in
adc
sbbb
and
pop
pop
mov
mov
fisttpll
adc
pushf
ljmp
add
xchg
lock
mov
dec
xor
mov
jae
out
xor
add
icebp
jne
shr
incl
sarb
je
xor
mov
cmp
je
movsbl
mov
mov
push
fldt
sti
jne
inc
cmp
jne
cmp
jmp
test
push
jmp
xor
or
rorb
adc
leave
orb
je
cmp
je
rolb
negl
shrb
ret
lods
jno
pop
mov
jl
test
pop
jg
shlb
or
stc
stc
sub
dec
add
je
sarl
or
pop
mov
orb
add
mov
cmp
jmp
fmull
pop
inc
dec
fmuls
cmp
lret
imull
loopne
add
xchg
lret
add
stos
pop
pop
lods
jg
dec
pop
or
ret
stc
ljmp
sarl
mov
enter
push
into
loope
cltd
sbb
clc
push
ficoms
outsb
jne
cld
loopne
clc
call
mov
mov
mov
push
push
sbb
call
sub
rcrl
xchg
and
lods
or
jbe
dec
cmp
jb
jmp
imul
sbb
ret
push
call
pop
clc
jns
daa
mov
mov
add
pop
testb
push
loopne
pop
push
ja
lcall
mov
or
and
add
imul
mov
insl
add
call
fldcw
das
das
lock
jo
or
push
hlt
testb
mov
movsl
loopne
lock
pushf
inc
pushf
adc
add
sahf
or
mov
adcb
je
ficoms
call
xor
fwait
add
mov
dec
sub
push
lods
inc
popf
ljmp
sbb
cmp
or
jmp
scas
mov
xchg
test
push
loopne
in
adc
fistl
push
jl
insb
mov
in
push
push
or
dec
out
push
out
push
or
data16
dec
icebp
inc
repnz
mov
pusha
inc
jge
dec
adc
aam
jmp
es
push
dec
push
or
inc
push
out
push
pusha
lods
bound
inc
adc
add
clc
and
gs
and
push
inc
adc
outsb
jp
mov
and
ss
mov
push
inc
aam
sbb
mov
mov
movsl
push
repnz
adc
lret
push
pop
es
jp
shrb
ret
or
xchg
ds
shll
mov
xor
lock
pop
ret
jecxz
bound
or
js
jo
jp
and
sub
scas
cld
push
push
das
sub
sub
je
stos
mov
je
test
mov
mov
jmp
xlat
push
add
sarb
and
jecxz
adc
sbb
lahf
cmpsb
sub
daa
push
add
sbb
sbb
into
filds
pusha
push
mov
push
daa
cwtl
lock
cmp
jne
push
lock
hlt
mov
rcrb
push
call
cld
test
push
negb
decl
hlt
pop
inc
inc
inc
inc
ja
add
cmp
pop
jb
sub
mov
fdivrl
enter
add
add
push
in
or
movlps
inc
pop
mov
sbb
loope
lods
lret
add
cld
pop
jb
movsl
push
push
sbb
jo
xor
aam
adc
movsl
mov
sub
sarl
je
dec
dec
mov
cmp
push
sbb
outsb
pop
or
cmp
or
add
scas
and
fsubrl
fstl
pop
or
cmpsl
bound
aad
push
push
dec
insb
push
fsubr
cmp
mov
cwtl
cmp
mov
xchg
mov
mov
xchg
push
xchg
cltd
cmpsl
adc
subb
add
cmp
pop
in
daa
or
cs
in
rorl
push
mov
xchg
insb
sub
mov
mov
lea
cmp
jne
add
mov
pop
test
mov
mov
aaa
mov
xor
adc
cmp
adc
inc
push
mov
add
jo
jb
push
pop
sbb
clc
xor
lsl
push
loope
lcall
call
invd
add
andb
and
call
push
mov
enter
or
ret
je
icebp
cmp
push
clc
out
xorl
mov
cmp
je
cmp
jne
push
je
add
and
sbb
adc
popf
int
call
mov
mov
mov
adc
or
inc
ds
ljmp
push
out
cmp
add
xor
rcrb
dec
inc
cmp
jae
mov
std
faddl
cmp
cmp
dec
cld
dec
add
sub
inc
inc
out
inc
jmp
in
push
and
adc
mov
or
or
add
fisttpl
std
mov
es
pop
mov
insl
outsb
adc
fdivl
xchg
push
push
push
out
lock
cltd
jle
loopne
adc
scas
add
and
mov
and
ja
xor
push
add
mov
cmp
jle
test
add
dec
mov
dec
test
mov
call
cmp
jns
dec
mov
add
pop
jae
mov
jg
push
and
ss
dec
push
std
pop
testb
cmp
pop
cmp
shlb
repz
clc
cmp
inc
mov
mov
or
lea
cmp
fiadds
jae
movsb
fdivr
sahf
je
cmp
inc
ja
cmpl
cmpl
scas
push
jno
jo
mov
loopne
or
negb
or
fwait
aam
jbe
cmpsl
rcrl
mov
std
jle
dec
push
fsubrl
je
cmp
out
push
ror
push
pop
call
call
pop
cmp
lods
mov
add
adc
cwtl
mov
jl
or
mov
dec
mov
cld
adc
jmp
xor
fidivs
mov
and
and
mov
int3
bnd
pop
test
push
lods
push
push
out
or
fstps
sti
sbb
movsl
jo
sbb
pop
jl
xor
nop
movb
push
lods
push
mov
push
scas
insl
mov
mov
mov
ss
int
mov
mov
mov
mov
mov
mov
jbe
imul
push
mov
mov
rcl
js
mov
insb
je
jo
insb
aam
aad
jge
idivb
inc
xor
lods
fs
loopne
loope
loop
popa
mov
in
mov
inc
call
mov
push
ljmp
lcall
shl
xchg
mov
ret
cmp
out
lcall
enter
sahf
leave
lret
cmp
push
lahf
out
ss
dec
xchg
cwtl
cltd
lcall
fwait
jb
popf
negb
fwait
in
rcl
mov
inc
mov
lahf
imulb
cmpsb
xor
dec
fdivp
cmp
hlt
cmc
div
clc
jl
lods
xor
push
call
adc
lcall
adc
xor
imul
and
imul
scas
or
pop
outsb
movaps
mov
test
xor
sub
or
out
mov
ja
fcmovbe
adc
or
pop
pushf
shlb
mov
cmpsl
cltd
cmp
pop
jmp
adc
shlb
xor
out
sbb
rclb
imul
in
testb
pusha
sti
movsb
jbe
cmpsb
jl
pop
push
es
movsl
shl
push
sub
imul
sub
jnp
push
pop
cli
xchg
iret
xor
test
jns
in
xchg
pop
fistl
and
cli
nop
jmp
outsl
es
out
xor
push
in
add
jmp
cmp
jg
jmp
mov
jecxz
cmpsb
stos
pusha
nop
in
mulb
and
or
jge
dec
sahf
adc
decl
jno
out
in
sbb
mov
sbb
pop
aas
dec
and
push
sub
cs
test
pop
je
cmpsb
push
js
fdiv
fsubl
out
ret
sbb
push
dec
lock
push
rcrl
jo
inc
xchg
insb
out
data16
mov
fsubr
adc
cmp
sbb
sub
or
orl
adc
popa
jl
or
loop
fidivl
ret
mov
mov
add
push
call
fdivrp
dec
sbb
call
aam
aam
add
lock
lods
dec
js
icebp
and
insb
push
insb
mov
ja
rcl
out
jbe
fstpt
jecxz
xchg
mov
adcb
out
inc
fsubs
outsl
pusha
addr16
mov
xchg
push
inc
enter
or
pushf
xor
add
pop
add
cmovb
xchg
push
shrl
cmpsb
int3
adc
outsl
pop
jl
cwtl
cmpl
call
popl
jmp
xlat
mov
add
adc
cmpl
fwait
pushf
jno
mov
push
mov
jo
jnp
loop
nop
rclb
mov
or
in
mov
shr
cmp
jae
mov
divb
loopne
inc
push
push
mov
lods
fdivrl
add
mov
pusha
and
xchg
xchg
stos
and
pop
add
test
mov
nop
and
jmp
dec
xor
adcb
call
jmp
ficomps
or
sbb
enter
cmpb
mov
cld
call
subl
inc
in
in
rorl
fucomip
into
in
xchg
mov
push
shll
adc
inc
ret
xchg
mov
adc
pusha
push
push
test
ret
test
and
movb
push
int
into
jp
xor
roll
push
mov
dec
rorl
imul
mov
ja
fildl
lock
jae
jae
pop
loopne
xor
insb
mov
cmpsb
xor
pop
cli
inc
sti
jb
int
sar
std
insl
pushl
out
cmp
mov
mov
mov
repz
mov
mov
dec
adc
fs
pop
xor
enter
fnstcw
int
mov
je
dec
in
js
out
or
jmp
sbb
lcall
icebp
xchg
push
stos
hlt
repnz
loopne
outsb
hlt
push
push
mov
rep
je
loop
and
movsl
push
test
mov
cli
xlat
das
sub
data16
cmpsl
pop
sub
movsb
mov
xor
sbb
jmp
jne
lods
hlt
jmp
mov
andb
cli
iret
repz
pop
or
imul
push
imul
shr
outsl
out
ja
jne
ja
sahf
icebp
bnd
xor
mov
insb
insb
je
pop
shll
pop
jmp
mov
movsl
inc
imul
pusha
mov
mov
fsubrl
cmp
xchg
sub
inc
push
xchg
enter
xchg
fidivl
add
in
pushl
mov
jo
addb
jbe
adcl
push
jb
test
in
or
jmp
push
xor
mov
mov
mov
push
dec
xor
fidivrl
jge
cmp
inc
mov
outsb
and
jl
lods
xchg
fwait
scas
or
inc
ret
adc
xchg
in
push
imul
enter
push
add
push
sbb
push
xchg
xchg
dec
lock
push
mov
outsb
ds
and
in
push
adc
mov
jne
bound
int3
and
fs
xor
jmp
xor
push
call
push
shll
js
shll
je
cmpsl
fldcw
jae
mov
mov
mov
repz
mov
mov
jae
mov
mov
cs
mov
es
cmp
into
enter
mov
repz
lret
fs
int
pop
into
bound
out
iret
rcl
rcl
es
repz
push
aad
xlat
outsb
fcomp
negl
fsubrl
fidivs
iret
repz
fnstsw
jae
loop
in
iret
sarl
in
ds
call
sti
ljmp
ss
js
out
out
fs
push
cmp
in
and
push
cld
cmp
cmp
pop
push
jmp
mov
daa
mov
pop
cmp
xlat
sbb
xor
jae
stos
mov
mov
add
shrl
loope
in
and
mov
fmul
inc
inc
push
and
adc
inc
sbb
mov
jmp
mov
popa
xor
call
fdivl
mov
icebp
dec
dec
add
inc
sbb
push
adc
add
clc
add
clc
pusha
sub
pushf
pusha
pop
movsl
in
lcall
sbb
call
out
adc
sub
inc
arpl
adc
mov
into
sub
aaa
sbb
push
mov
lea
xchg
fsubr
jle
test
add
and
dec
mov
in
push
stos
adc
and
adc
push
pop
call
sub
lock
sbb
cmp
pop
sbb
lods
push
pop
shr
pushf
aad
xlat
inc
in
aam
inc
test
stos
es
call
aad
movzwl
cltd
idiv
mov
fdivl
shl
jne
jmp
jnp
adc
stos
cld
call
dec
lahf
call
in
cmpsb
jb
and
push
test
or
rorl
sbb
mov
repz
inc
jmp
xor
or
jmp
scas
and
or
mov
jmp
dec
lret
inc
add
xchg
pusha
filds
xor
mov
cmp
repnz
popl
std
jmp
rcl
pop
not
mov
cmp
stos
xchg
pushl
fsubrl
in
cmp
and
clc
push
out
sub
adcb
xor
push
clc
xchg
lea
imul
ror
stc
mov
cld
mov
lcall
stc
setnp
mov
jmp
dec
add
test
pusha
shl
push
pushf
jmp
rorb
inc
cmp
neg
mov
pushf
test
rolb
mov
pop
mov
xchg
call
add
adc
pushf
adc
push
sbb
or
rcrl
sub
aaa
cmp
iret
add
enter
das
insb
loopne
fld
int
in
iret
icebp
pop
stc
call
mov
pusha
mov
xor
inc
xor
xchg
mov
rcl
cmc
sub
push
inc
clc
sub
pusha
dec
data16
incb
add
mov
neg
cmpsb
popf
cmc
mov
bts
mov
adc
dec
sbb
or
out
sbb
negl
jns
fldt
inc
mov
ss
cs
lds
incb
movsl
shr
jg
cld
sub
std
adc
jmp
and
or
cmpsl
dec
xor
imul
inc
jns
push
std
or
xor
rep
cmp
out
push
rol
lods
jl
xlat
jg
iret
sub
in
xor
fcmovu
repnz
sbb
adc
cmpsl
repnz
std
sub
add
add
sub
cmp
or
divl
iret
inc
cmc
sti
hlt
shl
roll
sbb
test
sahf
rolb
push
je
pop
int3
cld
fidivs
xchg
fdivrl
lds
icebp
into
subb
sub
cmpsl
loopne
jp
push
nop
xchg
xchg
inc
mov
mov
push
inc
sbb
xchg
lahf
rcll
push
inc
mov
pop
push
cmpl
jl
addb
or
dec
leave
call
pop
mov
xchg
call
xchg
insb
or
mov
push
or
sub
jae,pn
fsubs
mov
rcl
mov
mov
add
andl
xor
mov
jge
jne,pt
or
push
mov
xor
xchg
or
cltd
push
push
push
add
and
loop
mov
cld
fsubs
sarb
inc
test
pushf
loope
stos
lea
push
push
enter
fidivrs
cmp
jne
daa
or
adc
ja
test
push
jmp
sbb
sbb
or
pushl
jmp
and
pop
les
movb
ret
adc
add
jno
pusha
inc
shrb
push
sub
js
or
adc
icebp
mov
dec
push
mov
hlt
stc
movsb
notl
shlb
loopne
dec
sbb
mov
clc
fmull
xchg
cwtl
loope
clc
sub
jo
pop
cli
push
insb
iret
stos
cld
arpl
ret
cmpsb
lret
fs
push
rcrl
pop
jp
and
add
call
dec
ret
js
cmpsb
aas
xchg
jmp
jmp
pop
push
mov
sub
pusha
and
adc
jns
lea
mov
pop
sbb
test
lea
mov
mov
jl
and
es
insb
jbe
sbb
mov
push
add
inc
movsl
call
or
mov
movsl
imul
or
es
std
pop
out
pop
nop
inc
pop
sti
and
enter
stc
fdivrp
and
sbb
lret
jb
or
or
or
cmpsl
iret
std
insl
push
xchg
add
jae
movsb
mov
inc
fsubrs
sbb
xor
mov
dec
popf
sbb
jle
fidivs
sbb
mov
dec
enter
and
imul
int3
xor
mov
sbb
repnz
in
call
add
add
test
fsubr
jle
icebp
sbb
arpl
jae
mov
xchg
sti
je
movl
out
fsubrp
pushf
addr16
jne
push
adc
push
and
pop
cmp
out
mov
or
imul
or
cmp
jb
shlw
jae
cmp
imul
cmp
es
and
pop
dec
int3
mov
pusha
fdivs
sub
rcll
xor
jmp
outsb
cmpl
shll
inc
inc
inc
stos
out
test
cmpsl
lea
inc
add
insl
outsl
outsb
stos
mov
jb
xor
sahf
cld
sbb
cs
jmp
sahf
out
js
inc
mov
mov
add
mov
int3
movsl
push
loop
arpl
push
pop
insb
enter
test
repz
mov
sbb
adc
mov
je
add
jmp
push
or
lods
icebp
mov
dec
pop
jne
push
mov
jmp
and
add
roll
mov
sbb
hlt
mov
mov
lock
mov
es
adc
sbb
pop
and
jbe
pop
xchg
cmp
ljmp
pop
sub
dec
test
loopne
cmp
aas
add
pushf
push
mov
cmp
and
xor
hlt
daa
call
je
mov
push
fldlg2
adc
or
mov
pusha
aam
call
cld
and
fdivrs
fidivs
xchg
push
cmp
je
and
mov
sbb
fildl
or
or
push
jmp
pop
imul
mov
or
sahf
mov
es
push
fidivrl
je
dec
sbb
pop
inc
ret
add
jns
sbb
or
inc
add
mov
dec
shll
rcl
fsubs
in
call
or
pop
add
mov
cwtl
cmc
sub
loope
xor
or
inc
and
ss
push
sbb
shll
repnz
jecxz
push
xchg
rclb
inc
imul
jl
and
pop
in
cmp
arpl
stos
mov
mov
call
and
and
cltd
mov
or
add
daa
mov
clc
cltd
mov
divl
push
stos
mov
and
jle
es
pop
inc
inc
mul
sub
xlat
push
and
gs
inc
and
lock
push
insl
cmp
or
loopne
mov
cltd
test
adc
iret
pop
or
loop
std
js
lcall
xor
push
push
dec
rcll
dec
dec
cmp
dec
shll
insb
adc
dec
mov
addr16
dec
shll
insb
jne
cs
scas
dec
shrl
call
adc
dec
outsb
je
repz
jb
mov
push
int
jnp
movsl
cmpsb
mov
push
test
test
repz
lods
movsb
dec
cmpsb
imul
imul
pop
imul
mov
mov
shl
imul
jo
jns
loope
lock
sahf
xchg
xchg
xchg
inc
stos
cwtl
js
lcall
je
inc
out
out
mov
mov
or
in
out
out
mov
iret
repz
mov
mov
push
mov
insb
mov
es
sahf
cmpsl
stc
fidivrs
arpl
cmp
mov
pop
cs
dec
insb
mov
xorl
sahf
push
popf
sbb
std
adc
or
sub
push
cmp
cmpsl
add
ret
add
mov
jb
loope
inc
mov
dec
jne
push
sbb
imul
xchg
aam
mov
fwait
mov
pop
je
lea
push
push
push
mov
pop
mov
rol
fwait
sub
outsl
cmp
lret
addr16
and
adc
fnstsw
add
outsl
xlat
inc
lcall
xchg
sub
stos
xchg
dec
xor
or
repz
imul
je
mov
xor
sbb
test
ss
push
push
cli
add
or
shl
ljmp
xlat
call
daa
cld
int
mov
xchg
es
addr16
neg
mov
xor
jle
pop
add
cld
add
sub
jg
mov
ret
cmpl
add
fsubrs
lahf
xchg
fs
mov
test
lea
mov
jne
call
ja
sbb
je
fdivs
mov
mov
add
or
add
xor
jnp
jecxz
pop
call
inc
loopne
mov
fistpl
push
jge
mov
or
movsb
sub
orb
nop
push
mov
mov
mov
pop
push
push
xchg
jo
add
fsubrs
loopne
push
inc
jmp
std
xchg
outsb
push
inc
sbbl
and
xor
pop
push
popf
popf
sbbb
incl
repz
int3
call
or
jmp
add
push
ret
xchg
cmpl
call
xchg
cmpsb
arpl
repz
nop
addr16
dec
shll
cmp
xor
xchg
cli
cld
adc
jg
jmp
fnstenv
pop
adc
es
js
call
xchg
xchg
push
pop
jb
and
pop
jbe
into
jecxz
and
das
pop
imul
pop
neg
sbb
or
js
mov
int
or
dec
or
je
mov
mov
pop
or
push
adc
push
jecxz
adc
and
jecxz
cmpsb
adc
pcmpeqb
sbb
adc
mov
jl
push
jle
adc
adc
lock
movsl
rcrb
js
das
sub
and
push
jmp
jg
ja
out
push
add
adc
add
jns
push
mov
std
mov
call
xchg
sub
popa
je
outsl
pop
imul
cmp
negb
imul
adc
cmp
stc
cli
sti
cld
sbb
xor
add
repz
divb
movsl
fs
mov
xor
cmpb
add
mov
push
inc
push
add
and
dec
cmp
ss
adc
nop
mov
jbe
bound
negb
cs
clc
fwait
dec
mov
stc
pop
icebp
push
pop
push
push
mov
pop
jns
add
xchg
jo
das
dec
add
xchg
xchg
mov
int3
lock
push
mov
and
adc
dec
movsb
mov
shll
fists
inc
fsubrl
mov
je
xchg
cmc
inc
mov
insb
and
dec
ds
mov
mov
sbb
xor
orb
mov
or
sahf
push
jg
jmp
es
jae
call
test
add
icebp
mov
stos
das
fwait
pop
add
xor
andb
data16
imul
cmpsb
sbb
xor
jb
shll
insb
imul
es
and
push
mov
lcall
lcall
arpl
lcall
outsb
adc
xchg
cmpsb
es
shrb
cmpsb
test
je
inc
lcall
jns
dec
rep
loopne
loope
jns
in
js
out
out
call
add
lock
ret
mov
jb
movsb
imul
dec
loopne
je
add
dec
jne
rorl
lods
rorb
adc
or
adc
lock
js
sbb
or
ds
pop
push
and
push
data16
adc
test
call
rcll
popf
fdivrl
out
xchg
ss
or
push
xchg
int
xchg
in
fdivr
pusha
add
push
adc
inc
add
fcompl
repnz
pop
addr16
jb
out
pop
push
clc
stc
cli
sti
xchg
and
loope
cmp
gs
sbb
jnp
cld
or
push
rclb
pop
push
pop
jge
mov
xor
mov
mov
sub
push
xchg
cmp
loopne
push
and
sbb
lret
lret
enter
fdivl
pushf
fmul
xchg
fcoml
fcoml
je
inc
or
dec
mov
jl
jne
push
jmp
and
ds
cmc
imul
rolb
fisttps
mov
sub
cmp
mov
imulb
push
cwtl
adc
push
incl
mov
dec
or
cs
pop
aas
test
into
add
cld
push
adc
pop
and
fcmovu
and
mov
call
fsubl
imul
call
popa
ljmp
and
or
test
cmp
sbbb
jecxz
icebp
or
and
pushf
inc
or
jnp
push
mov
xor
stc
pop
clc
sbb
lds
test
push
fldenv
dec
clc
or
cmp
pop
add
mov
std
cld
push
xchg
lret
movb
pop
xchg
mov
arpl
divb
iret
repz
popa
jns
jb
cmp
rep
outsl
imul
aad
and
mov
repnz
inc
and
loopne
xor
push
or
inc
in
push
lahf
lcall
push
scas
jae
dec
shll
jne
lcall
jl
sti
mov
jb
inc
cs
push
sbb
faddl
sbb
fadd
out
inc
loopne
loop
je
leave
repz
imul
jno
jae
dec
or
jne
iret
repz
es
and
jae
insl
bound
test
stos
repz
add
decl
dec
shll
jne
xor
shll
and
call
mov
ror
nop
sbb
mov
inc
adc
or
mov
push
pop
clc
push
push
rcrl
cmp
lock
inc
aaa
les
push
fisubrs
mov
dec
push
jp
ret
push
push
pusha
jo
andb
push
call
jmp
pop
test
jbe
movl
add
pop
cmc
cmpsl
mov
enter
push
jmp
ds
nop
add
dec
mov
dec
std
dec
fstp
xchg
out
mov
jp
sub
scas
and
mov
pop
enter
sahf
sub
mov
pushf
push
loop
add
es
adc
jl
add
sbb
jg
es
add
cmc
sub
cmp
in
fistps
jae
std
lcall
gs
ret
xchg
imul
sarl
and
xor
jns
sti
jmp
xchg
mov
sub
push
dec
push
das
sbb
mulb
std
inc
lea
jmp
inc
nop
jp
popa
cmp
mov
and
loopne
and
fildll
scas
push
jl
aam
lret
pop
mov
sub
test
jle
mov
push
pushf
stos
jae
or
bound
push
add
jge
lds
or
dec
mov
mov
or
dec
mov
rcrl
fimuls
mov
pop
and
mov
jb
movsb
insb
scas
pop
and
mov
add
clc
xor
ss
push
and
mov
cmp
pop
inc
and
lds
dec
dec
xor
pop
rcrl
imul
push
pop
je
cld
sbb
lea
cmp
adc
add
sub
or
gs
mov
dec
bound
lock
and
push
movsl
mov
push
jno
and
fsubrs
fwait
sbb
add
mov
mov
inc
mov
out
loopne
mov
mov
loope
js
pop
ja
push
push
sbb
lock
pop
fistpl
aam
jns
js
ds
lods
mov
in
adc
hlt
mov
lea
lret
inc
push
push
inc
xor
dec
xor
xchg
cltd
adc
or
jg
stos
sub
inc
xor
cmp
into
jmp
scas
daa
xor
push
cmp
lods
xchg
outsl
push
cltd
andl
scas
adc
cmc
fldenv
fisttpl
dec
mov
or
lret
mov
push
lcall
in
int
pop
mov
pop
lret
inc
mov
adc
dec
out
cltd
jmp
lret
mov
insb
sub
xor
sub
sarb
icebp
imul
mov
push
mov
or
les
mov
xor
jle
sti
sarl
cmp
cmp
addr16
push
inc
push
xor
adc
les
mov
cmp
xor
hlt
inc
call
jne
int3
fidivs
loopne
popa
mov
jo
sbb
dec
adc
fmull
add
out
mov
sub
push
in
gs
js
cmp
mov
xchg
add
andb
push
cld
hlt
in
imul
push
test
xor
cs
test
adc
xor
daa
lcall
ret
shll
outsl
insl
jne
insb
xor
clc
lods
bound
loopne
pop
push
and
incb
mov
sbb
push
mov
test
xor
jb
mov
shl
in
cmp
aam
sbbl
ss
cmpb
lsl
and
pop
popa
jmp
push
ret
inc
inc
and
push
add
push
inc
ficoms
cltd
mov
add
lock
lock
rcr
or
mov
and
or
pop
mov
loope
imul
movsb
push
int3
leave
aad
bswap
sti
inc
aas
aad
push
push
sbb
add
inc
push
inc
insb
adc
jmp
push
inc
mov
mov
hlt
push
movsl
movsb
aas
pop
arpl
pop
xlat
popa
or
add
push
sub
or
fmull
fcoms
daa
push
add
and
sub
rolb
or
xlat
pop
cmp
cmp
imul
in
adc
inc
movzbl
push
clc
ret
in
div
push
xchg
dec
jmp
test
and
push
pop
inc
xchg
addl
clc
push
jmp
jle
rcll
inc
iret
rorb
dec
shll
jo
push
dec
shll
fs
insb
rorb
je
and
xor
jo
mov
jae
push
outsw
jmp
and
pusha
mov
loop
xor
cmp
cwtl
xchg
xchg
xchg
add
or
xchg
rorb
clc
outsl
jne
jl
pop
cmp
insb
mov
push
cltd
inc
jb
jb
xchg
jb
xchg
sub
frstor
sub
cltd
inc
int
add
call
cmp
ja
jb
add
or
fld
hlt
add
mov
jno
xor
and
add
mov
mov
push
adc
sahf
or
adc
cmp
leave
jle
aad
mulb
fs
push
aad
cmp
or
into
insl
jne
int3
mov
call
sub
push
or
cmp
jge
jmp
pop
aas
xor
sub
movsl
mov
push
xlat
sbb
or
push
add
cwtl
mov
push
call
shrb
push
add
push
stos
jno
rolb
add
cld
push
daa
call
jmp
adc
xchg
mov
push
dec
mov
cmpsb
outsl
data16
ja
shll
imul
outsl
outsl
out
shlb
cmpsb
imul
sahf
mov
insb
dec
insl
mov
shll
dec
push
dec
and
xor
inc
popa
arpl
imul
inc
mov
rorl
int
test
in
xor
test
je
add
loope
adc
mov
mov
push
or
mov
clc
out
pushf
xchg
pop
jge
imul
in
rclb
test
mov
inc
mov
fmuls
jne
mov
sbb
cmp
or
les
mov
inc
shr
lcall
jo
sbb
mov
dec
sarl
cmpsb
add
xor
inc
out
adc
add
pop
sub
xlat
in
imul
loope
sbb
cmp
sarl
sub
xor
in
js
mov
call
or
mov
movsb
mov
add
jae
add
mov
std
fwait
add
std
mov
test
and
cmpsl
jns
popa
and
jb
jns
cmpsl
and
and
fldcw
sub
loope
sub
and
sub
mov
inc
iret
inc
imul
repz
fcmovbe
inc
je
inc
inc
mov
sbb
dec
inc
inc
sub
dec
dec
sbb
out
shll
push
les
push
mov
inc
dec
repz
popa
jns
xor
enter
data16
mov
cmp
popa
adcb
test
sbb
add
cmpsl
mov
insb
orb
mov
ror
mov
loopne
inc
dec
sub
xchg
or
imul
xchg
xchg
movsl
cmpsb
jns
rol
movsb
cmp
rol
ret
in
xor
xor
adc
in
jb
loopne
loope
cwtl
dec
mov
outsb
std
and
sbb
insb
mov
xlat
out
out
call
fsubrp
push
imul
es
or
out
lock
jno
icebp
xor
and
add
add
sbb
scas
jb
mov
jmp
jns
loopne
push
and
and
and
fs
jns
and
ret
sub
sub
aad
jns
or
inc
enter
inc
jnp
inc
inc
in
rolb
outsb
pusha
cwtl
loopne
xchg
mov
inc
arpl
jb
gs
or
insb
lods
push
je
xchg
push
insb
fsubrl
dec
repz
sbb
push
les
fs
gs
xchg
xor
andl
mov
mov
pusha
movl
cwtl
test
movb
vunpcklps
ss
lret
int3
sub
popa
xor
xor
into
pop
iret
rcl
xor
and
or
loope
cltd
int
lcall
out
sbb
sbb
call
popl
jg
pushl
test
cltd
in
addr16
pop
jb
incl
incl
inc
or
pusha
repnz
or
or
outsl
mov
decl
out
call
mov
es
fldt
call
je
sub
cs
sub
rorb
cwtl
into
pushf
sti
sti
incl
sub
xor
mov
pop
pop
xor
dec
jae
ja
pop
jb
xor
repz
popa
dec
into
adc
cmpsl
incw
data16
inc
addr16
push
repz
mov
insb
insl
mov
outsb
outsb
outsl
jo
imul
jb
jae
push
je
xchg
addr16
int
imul
jp
push
jnp
enter
repz
cmpsl
imul
imul
xchg
test
pushf
insl
pop
sub
hlt
shl
pcmpgtb
int
int3
idivl
pop
jns
leave
test
mov
enter
aam
sar
xor
clc
dec
jo
jne
mov
loope
jp
pop
fsqrt
fmuls
adcl
idivb
sub
movl
loop
mov
mov
push
cmp
popf
xor
aam
mov
inc
cmp
mov
cwtl
cmp
jns
imul
inc
xchg
das
ljmp
xchg
movsb
sbb
cmp
lret
ds
sbb
shll
sub
dec
shll
fs
fs
insb
shrb
fisttpl
jb
mull
ja
fnstsw
out
sti
cld
std
add
xchg
dec
xor
mov
jecxz
in
imul
in
jns
pop
push
xlat
fcomp
ficompl
lds
mov
enter
pop
out
sahf
lretw
int3
int
cmpsb
imul
insb
jne
imul
mov
inc
push
pop
jb
cmpsb
imul
test
gs
fs
scas
shrb
cs
fadd
cmc
clc
ret
jns
out
mov
jns
out
mov
jns
xchg
xchg
xchg
xchg
xchg
xchg
jns
out
cwtl
cltd
lcall
popf
sahf
lahf
xor
mov
repz
lods
leave
xchg
add
inc
and
push
cmp
mov
cmp
xchg
testb
push
sub
sar
out
push
mov
out
call
negl
inc
fdivr
fbstp
xlat
pop
icebp
pop
test
mov
mov
cmpsl
fwait
mov
icebp
push
iret
or
lock
push
adc
and
repz
mov
cmpsl
mull
jbe
bound
repnz
push
lea
pop
sub
stos
ljmp
sbb
push
push
push
lret
jbe
jmp
gs
cltd
cmp
xchg
add
sub
movsl
jp
dec
sub
sub
inc
push
push
or
or
pop
mov
push
fcmovne
sbb
pusha
frstor
dec
xchg
xlat
cmp
cwtl
test
jnp
test
in
mov
inc
cltd
mov
mov
mov
and
xchg
insl
sub
hlt
push
jg
mov
fsubr
xchg
adc
pop
push
mov
pop
das
pop
jbe
pop
ffree
jno
mov
xlat
jecxz
in
scas
jae
sbb
and
gs
xor
movsl
movsb
xor
mov
call
dec
lcall
inc
outsl
insb
dec
shrl
popa
scas
push
popa
mov
add
nop
and
push
sub
mov
pop
shll
xor
decb
push
jns
shll
pop
imul
xor
sub
insl
test
imul
adcl
push
sbb
push
add
add
fimuls
mov
and
sub
mov
and
xor
mov
out
xchg
add
inc
add
xchg
scas
and
movsb
xchg
cld
and
push
add
or
or
pusha
int3
stc
xchg
jecxz
cmp
loopne
inc
and
test
loope
mov
xor
call
in
sbb
in
repnz
or
out
insl
ds
lock
mov
stc
mov
or
sarb
outsl
aam
in
and
stc
xlat
stc
mov
in
fdivr
fyl2xp1
lods
fistl
and
negl
fisttpl
leave
clc
push
jb
xchg
cld
aam
push
jns
inc
aad
fdivr
fsts
test
lret
lret
loopne
push
cmp
scas
pop
ja
jl
test
cmp
outsb
sbb
sub
in
dec
in
mov
test
fs
jae
outsl
dec
jnp
cmpsl
stos
jne
outsb
inc
lods
int
imul
mov
insb
mov
imul
jns
aaa
mov
jb
popa
mov
ja
mov
pop
inc
mov
push
inc
lcall
pop
xor
sbb
mov
out
xor
movsl
cmpsb
nop
pop
imul
stos
xchg
sbb
fwait
mov
xchg
xchg
cwtl
cltd
xor
loopne
lcall
insb
mov
xchg
mov
mov
mov
mov
mov
pop
cwtl
mull
pop
movsb
jb
fdivr
mov
cli
movsl
jb
sub
jb
fsubrs
test
mov
mov
ret
jb
pop
popf
ret
or
push
cmpb
int3
call
mov
pop
popa
pop
jne
pop
sbbl
cmp
idiv
add
dec
sar
add
inc
call
enter
stc
sbb
dec
enter
dec
dec
dec
dec
lret
enter
push
push
push
xchg
xchg
xchg
xchg
cmp
ds
xchg
xchg
xchg
xchg
inc
inc
inc
inc
and
inc
xor
and
and
xor
xor
inc
and
ss
movsl
cmp
sbb
inc
inc
cmp
je
jns
dec
xor
jne
icebp
ja
lea
jl
sbb
cltd
mov
jle
or
xor
push
push
or
mov
pop
pop
sbb
cltd
lea
pop
pop
xor
jb
pusha
fs
imul
insb
insl
shrl
sbb
outsl
jo
imul
je
je
inc
dec
imul
clc
and
pusha
mov
lock
incl
or
imul
jo
fwait
jge
mov
or
cmp
adc
notb
mov
dec
sbb
stc
jnp
pop
ret
push
jae
mov
push
test
in
pop
adcb
jmp
jmp
add
pop
xchg
push
xor
jo
je
jne
xor
mov
and
es
jne
sbb
fcoml
loope
add
sub
jmp
daa
mov
cmp
jl
cmp
jle
cmp
push
addr16
cmp
pop
ds
jl
cmp
jg
test
fnstenv
std
xchg
inc
xchg
push
add
add
bound
out
lahf
jmp
nop
daa
adc
jge
and
cmpsb
in
cmp
or
and
test
add
push
adc
je
jo
das
shlb
imul
ja
xor
shlb
insl
dec
shll
xor
jo
shlb
jae,pn
call
js
leave
inc
jne
sub
mov
lods
roll
loope
or
arpl
cmp
call
dec
fstpl
cmp
call
pop
push
mov
pause
fs
xlat
and
mov
push
mov
or
int3
int3
mov
insl
mov
cmp
pop
stos
xchg
jbe
lea
fstp
and
das
mov
push
mov
mov
decl
xor
and
sbb
sub
cmp
lods
and
sar
push
pop
add
mov
sahf
jmp
sub
push
push
push
stos
out
lret
push
pop
mov
popf
fs
mov
cli
cwtl
and
out
xchg
sub
test
push
jns
sti
aad
xor
shrb
fidivrs
mov
mov
ret
mov
repnz
jle
movsb
test
xchg
mov
mov
cmpb
cs
mov
or
fdivrs
xchg
dec
dec
aam
push
stos
add
fcoml
xor
outsl
clc
pop
ret
int3
xchg
and
js
bound
jge
iret
and
jmp
clc
fucomi
mov
xchg
mov
cmp
push
mov
adc
fdivrs
insb
je
xchg
pop
fdivrl
mov
lea
pushl
js
lret
cwtl
cmc
pop
mov
jne
and
imul
ljmp
loope
xor
call
ja
add
outsl
xor
mov
and
incl
pop
sbb
sub
push
add
sbb
jp
sbb
mov
jb
roll
fs
xor
jmp
jne
test
jbe
mov
dec
add
jl
or
cmp
inc
cmp
jb
in
cmpl
std
jne
cmp
jne
xchg
icebp
mov
addr16
push
or
enter
inc
in
icebp
jne
push
or
lfs
es
cmp
inc
shll
push
mov
fbld
fisttpll
xor
fisttps
cmp
sub
dec
add
jnp
clc
daa
cmp
jne
or
sbb
and
ret
je
movsl
stos
movsl
add
mov
sbb
push
iret
sarb
mov
call
nop
adc
lods
jp
ret
cmp
testl
fsubrp
mov
mov
mov
mov
or
push
and
inc
pop
add
or
push
adc
mov
and
nop
fwait
or
dec
adc
ret
and
push
nop
or
jne
xchg
fcmovbe
cmpsb
clc
loope
je
jmp
mov
push
sub
mov
push
xchg
push
pop
push
mov
int3
and
ficompl
pop
add
lds
outsb
fisubrs
xchg
push
sub
inc
enter
aaa
xchg
cmp
cltd
and
mov
shll
adc
addr16
xor
mov
xchg
add
pop
mov
repnz
sbb
sti
cmpsb
mov
and
mov
sbb
inc
xor
ss
mov
pop
ljmp
int
cmp
sbb
add
inc
pusha
or
jmp
cmp
push
ja
xor
mov
test
sahf
pop
add
mov
imul
ljmp
call
adc
cmp
cld
or
push
add
mov
jnp
sbb
add
ret
sub
adc
cmp
inc
adc
push
call
movsb
pop
popa
add
lahf
or
xor
mov
or
mov
dec
movl
test
xor
jnp
sbb
dec
mov
mov
push
jo
inc
loope
cmpsl
pop
xchg
push
sub
sbb
cmp
test
xlat
push
fld
inc
shll
test
add
push
push
cmp
push
push
jmp
or
jge
mov
sti
inc
ret
jmp
lcall
xorb
mov
sti
xchg
cmc
jmp
fcompp
push
loopne
addr16
add
dec
add
cmp
sbb
add
or
or
or
add
and
movzbl
push
aad
add
js
out
call
pop
mov
jne
mov
fstpl
push
sub
or
mov
nop
push
mov
push
adc
inc
or
mov
movsl
std
mov
mov
lods
add
sbb
push
pop
shrl
inc
subb
call
xlat
lret
and
out
arpl
lods
or
jle
outsl
and
pop
add
pop
xchg
fnstsw
adc
jne
cwtl
test
pop
jbe
incl
xor
mov
imul
bound
add
outsb
mov
loopne
aad
lcall
mov
movsl
daa
push
sbb
xchg
sbb
push
jbe
push
inc
push
adc
cmp
sbb
popa
stos
sbb
xchg
call
lock
and
push
mov
sub
jge
mov
pop
clc
in
cwtl
aam
or
mov
sbb
movsb
cmp
push
inc
outsb
call
push
rcr
jae
pop
dec
mov
sahf
xchg
dec
je
orl
aad
mov
xchg
mov
cmpsl
dec
add
push
loop
pop
stos
call
cmp
pop
ss
mov
ret
inc
cld
xorb
sub
push
sbb
roll
inc
sbb
jne
push
and
ret
leave
sbb
in
push
xor
test
aas
add
add
and
push
inc
push
inc
sub
xchg
dec
xor
inc
mov
test
sub
xor
xor
nop
xchg
cmpsb
outsl
jne
and
push
mov
push
loope
pop
fs
push
aam
lock
push
xchg
loope
jbe
fsubp
or
add
shlb
inc
xchg
subb
and
dec
out
je
sub
cmp
add
add
push
or
jmp
call
in
dec
iret
pop
outsl
xchg
sub
and
add
xchg
cmpsb
pop
je
jmp
je
decb
mov
rclb
cmp
aaa
fidivl
loopne
mov
sub
push
adc
lock
sub
cmp
pop
cmc
mov
sar
sar
jl
lea
pop
fcom
sub
dec
and
xor
sahf
lods
mov
adc
ss
sub
add
inc
movsb
sub
xlat
pushf
es
adc
inc
fdivs
call
push
pop
xor
rclb
cli
push
mov
or
fcomps
push
push
add
cmp
xor
pop
cmp
add
mov
ret
xchg
aaa
inc
imul
insl
orl
mov
add
ljmp
inc
pusha
test
add
mov
add
add
pusha
call
push
pcmpeqd
cmp
push
push
jmp
pushf
or
push
add
jle
cltd
fs
pop
das
mov
jl
push
clc
dec
call
push
imul
movsb
inc
inc
in
adc
and
in
and
sub
push
into
movsl
xorb
call
test
test
fcom
lock
fsubrs
in
inc
cmpsl
jns
in
fisubrl
mov
cmp
and
sbbb
lcall
add
imulb
dec
or
int
mov
sub
push
cld
add
xor
iret
inc
or
insb
sub
add
inc
xchg
add
xchg
push
rcll
test
xor
sbb
push
push
jo
ljmp
addr16
sub
shlb
in
test
push
cmp
push
mov
add
test
push
into
xchg
push
sbb
mov
add
inc
push
fwait
push
iret
pusha
adc
lds
notb
or
add
aas
jge
xchg
popa
xlat
mov
lods
syscall
fbstp
fmuls
jo
jne,pt
jae
rol
cmpsb
add
mov
adc
adc
loopne
scas
ss
jae
mov
movsl
add
pop
or
callw
dec
cltd
int3
mov
mov
lods
shlb
adc
mov
xlat
cmp
or
les
cmp
int3
add
add
sub
add
popa
add
and
out
inc
rorl
testb
pop
movsb
push
out
subl
push
xchg
add
push
cmp
push
mov
repnz
hlt
shr
add
in
cmp
adc
inc
sub
subb
and
sbb
and
out
rclb
inc
data16
je
push
fcoms
icebp
out
testl
jno
cld
outsl
jno
sbb
push
push
push
fdivrs
subl
dec
xchg
add
fnstsw
xchg
loop
loop
std
sti
in
in
or
out
adc
lcall
lock
repnz
lcall
imul
test
cmpsb
jb
addr16
xor
rorl
fs
imul
ljmp
rcrb
sarl
mov
and
push
jmp
push
das
cmp
movsb
push
pop
xor
out
xchg
out
imul
cmpsl
loope
hlt
push
push
rorb
or
movsb
sub
mov
es
aam
push
das
jns
dec
dec
cmpsb
mov
mov
jns
and
mov
push
push
aam
jbe
leave
clc
lock
inc
xorb
cmp
xchg
or
rol
mov
cmp
dec
mov
jge
lock
push
lcall
fimull
xor
xor
pop
inc
loope,pt
mov
test
push
in
inc
xchg
nop
mov
adc
mov
cmpsl
ret
jbe
jbe
xor
cmp
aaa
jge
push
imul
test
add
sarb
ror
aad
pop
aad
push
test
cmp
mov
push
clc
adc
pop
shll
repnz
mov
in
or
and
cltd
or
dec
push
fs
nop
dec
dec
cmp
je
dec
mov
fld
dec
push
mov
scas
pop
inc
fisubl
jmp
sbb
aas
or
sub
test
inc
and
cmpb
add
sub
in
adc
adc
ret
jnp
sbb
pop
add
mov
add
add
addr16
push
sub
aas
mov
push
scas
jl
lsl
add
inc
sub
push
jp
fistpll
sarb
pop
sub
jne
leave
and
sti
adcl
js
jbe
in
loopne,pt
inc
aas
and
and
xor
push
add
push
pusha
mov
inc
jmp
add
jnp
sarb
pusha
and
sti
push
push
mov
xor
and
add
dec
push
sbb
leave
out
inc
push
add
imul
aas
pushf
sbb
adc
inc
add
icebp
jae
repz
and
ds
push
in
push
cltd
ljmp
iret
push
mov
push
aaa
xor
in
and
cmp
inc
push
push
xor
xor
cmpsl
xor
or
or
pop
cmp
daa
push
hlt
daa
cs
sar
xor
call
clc
shll
push
jb
xchg
xchg
ret
mov
fs
inc
jo
push
dec
adc
cmp
xchg
pop
add
jb
pop
and
cmp
sub
push
cld
aaa
or
fcoms
xor
sub
push
sub
or
add
and
ss
push
sbb
or
cmpw
inc
push
aad
cmp
cmp
andb
push
ret
cmpsl
neg
cmp
add
or
cmp
sbb
adc
sub
pop
js
add
fwait
jge
jo
add
cmpl
mov
rclb
mov
push
and
sbb
push
push
add
add
fcmovu
mov
pushf
jmp
inc
xchg
sbb
mov
add
pop
sbb
aas
and
add
add
movsl
in
ljmp
add
movl
xorl
jecxz
mov
dec
sbb
pop
enter
push
lods
fidivrl
mov
lahf
add
and
lret
add
add
jno
shr
xlat
incb
movzwl
mov
ljmp
outsl
shrb
test
ljmp
outsl
inc
mov
adc
adc
inc
cmp
jne
data16
fidivrs
jne
adc
add
xor
pop
mov
and
push
or
popf
loopne
xor
lock
inc
insb
jl
add
jmp
es
and
shlb
push
add
jl
mov
push
loop
push
fcmovu
je
in
xor
outsb
rorl
sub
push
iret
pop
fisubrs
std
push
xor
out
and
mov
dec
lret
push
cld
pushl
add
push
pop
clc
add
ds
lods
or
sub
push
inc
xchg
add
add
loop
shlb
xchg
call
adc
xor
andl
lea
insb
cld
enter
call
call
mov
aaa
or
pushl
int3
adc
addr16
sub
push
and
pop
xchg
push
adc
rorl
xor
add
mov
out
mov
dec
stc
int3
adc
push
sbb
add
es
popf
mov
pop
mov
icebp
mov
or
mov
fdivs
mov
inc
pop
and
inc
sub
mov
mov
jmp
movl
add
jp
pop
test
xor
pushf
push
and
fldl
push
data16
sub
inc
hlt
aad
popa
popa
sub
xchg
lea
jmp
sti
jb
sbb
or
push
push
or
add
sarl
arpl
call
fisubrs
ret
and
dec
push
push
and
fwait
cmpsb
imul
data16
test
js
jne
call
int3
shll
insb
pop
push
lahf
lea
insl
sub
push
das
and
push
sbb
call
or
mov
jmp
sbb
jns
adc
fists
je
jp
push
bound
pusha
fst
cmp
and
xchg
int
lcall
sub
xlat
mov
addb
add
ljmp
add
lahf
insl
xor
mov
jnp
sbb
xchg
mov
push
xchg
jmp
jae
sbb
and
add
cwtl
pop
insb
dec
add
adc
cmp
lock
or
sub
pop
add
add
aaa
or
mov
lds
or
mov
pop
xor
jl
push
js
test
or
add
xor
test
cs
clc
push
push
pop
or
and
dec
fadd
add
popf
jge
jge
push
add
pop
call
rolb
subl
pop
sbb
cmp
add
mov
push
or
dec
pop
inc
scas
imul
stos
loop
mov
pop
test
pop
and
in
rclb
and
and
dec
or
cmp
mov
add
hlt
jbe
dec
movsl
lahf
jbe
mov
arpl
add
inc
jmp
mov
sbb
push
mov
push
inc
sbb
mov
mov
stc
shrb
add
cmpsl
outsl
inc
addr16
vhsubps
and
cli
fsubr
pop
stos
cmp
inc
xorl
adc
into
mov
push
sub
insb
sbb
xchg
sti
push
pop
call
cltd
jle
xor
jo
inc
mov
pop
dec
sbb
ds
sti
arpl
in
mov
jb
adcb
push
lret
in
out
sbb
fs
das
xchg
lret
in
outsl
outsl
jne
push
insb
add
popf
pusha
jl
aaa
dec
test
dec
shll
cs
cmpsb
imul
je
lods
add
push
fsubs
pop
repz
test
push
or
paddusb
adc
inc
and
movsb
call
mov
rclb
pop
enter
push
mov
loopne
push
fwait
mov
inc
mov
das
lds
mov
iret
shll
push
and
ss
clc
push
sbb
sbb
cmp
gs
fadds
fildl
mov
loop
in
push
sbb
push
loopne
inc
aas
adc
pop
pop
inc
xchg
out
mov
push
test
dec
pop
and
add
pop
and
xchg
aaa
dec
pop
xchg
jae
imul
cmp
mov
imull
lahf
xor
dec
test
aam
fwait
outsb
rclb
jne
cmp
mov
push
aas
je
in
and
leave
addb
mov
into
ljmp
montmul
cmpsb
xchg
adc
out
es
and
lret
mov
sbb
push
push
aaa
lock
sti
cmp
inc
push
lret
or
ds
aaa
pusha
inc
mov
sbb
std
test
pushf
data16
add
rorb
mov
xor
add
imul
and
sub
xchg
lret
in
in
in
mov
shrb
lret
pushf
rcrb
mov
test
add
iret
movsb
int3
int3
pop
mov
call
mov
es
mov
lcall
shll
and
jge
xchg
rolb
jbe
fisubl
xchg
push
xchg
mov
jb
out
int
shlb
mov
out
cmp
stos
xor
xor
stos
call
cwtl
clc
inc
add
je
push
jb
arpl
jae
fs
dec
inc
ds
gs
outsl
outsl
insb
push
xor
popa
jo
mov
outsl
je
xchg
push
imul
inc
arpl
mov
xchg
insb
jo
adc
cmovno
push
enter
xor
pop
xchg
fidivl
jle
xor
imul
outsb
and
jge
dec
outsl
fs
and
scas
push
sbb
dec
outsl
popa
fs
imul
popa
jb
push
jg
scas
movsb
add
fists
jb
lea
push
imul
notb
dec
dec
je
inc
jns
add
pop
sub
adc
inc
fs
sbb
dec
xchg
into
add
sbb
cmp
jno
push
test
pop
adcb
popa
inc
outsl
jb
push
addr16
dec
bound
add
stos
push
gs
outsl
fsubrl
fs
lods
es
ss
mov
addb
sbb
aad
push
faddl
pop
jo
mov
neg
flds
jb
mov
ret
testl
mov
add
push
je
faddl
pusha
daa
fisubs
mov
test
ret
push
dec
test
jge
push
push
inc
je
jb
jb
pop
push
popa
icebp
xor
adc
push
outsl
fisubrs
and
dec
push
adc
addl
dec
add
jae
into
clc
push
popa
insb
inc
inc
pop
xchg
cmp
sbb
push
outsl
scas
pusha
jb
xchg
jnp
xor
jne
jb
sbbl
imul
adc
add
jns
imul
imul
shr
inc
nop
pop
inc
cmp
pushf
xor
sub
stos
pop
rol
jno
adc
push
cmpsb
das
xor
add
add
sbb
push
adc
data16
cmp
add
inc
test
dec
xchg
cmp
add
add
cmp
insb
jae
arpl
js
push
outsb
push
arpl
int
cli
push
add
dec
inc
mov
jecxz
jge
add
outsb
ficoml
jno
or
add
mov
xor
add
push
outsl
bound
lods
fwait
push
push
jae
adcl
inc
or
xchg
fsubrs
pop
dec
push
lahf
xchg
add
sbb
mov
outsb
push
ss
arpl
mov
popa
addr16
addb
mov
out
jbe
sub
sub
leave
add
test
sbb
xchg
xchg
mov
xchg
add
fs
mov
push
pop
mov
fiaddl
pop
lret
repnz
xchg
pop
js
mov
dec
ret
lds
arpl
sbb
mov
cwtl
inc
imul
arpl
dec
outsb
mov
mov
lods
out
lret
scas
outsb
sbb
out
rorl
lods
pop
dec
xchg
push
xor
imul
pop
out
or
jns
jbe
push
and
add
jo
imull
cmpsl
pop
test
xlat
ds
xor
pusha
sbb
scas
jecxz
fisubrs
aaa
aad
jge
push
pop
xor
stos
push
negl
push
push
popa
add
add
mov
adc
movl
mov
or
lret
loop
mov
stc
xor
fsubl
call
inc
dec
jae
sub
mov
fwait
ss
adc
xchg
mov
out
inc
outsb
inc
jb
jae
add
rcr
jmp
dec
inc
push
mov
fs
jne
out
loop
inc
shrb
subb
fcomps
inc
imul
inc
inc
dec
mov
pop
add
push
push
outsl
imul
push
es
and
jo
xchg
push
push
cmp
dec
add
jg
or
dec
jnp
sub
icebp
push
scas
rolb
sub
xchg
sbb
push
jbe
lret
outsb
jne
push
out
dec
inc
or
inc
inc
push
inc
push
imul
add
hlt
out
adc
mov
push
pop
gs
pop
or
fstpt
mov
test
rclb
mov
pop
sub
cmc
cmp
sahf
mov
imul
mov
imul
push
pushf
sahf
jo
mov
shrl
outsb
fnstcw
xorb
jo
push
data16
out
movsl
mov
mov
add
aas
aas
xor
inc
pop
push
add
pop
fidivrs
cmpsb
push
arpl
rdmsr
xor
dec
sub
pop
jmp
xchg
out
bound
cmp
fisttps
pop
negl
jnp
adc
scas
stos
mov
mov
push
in
adc
loope
pop
jbe
push
add
sarl
adc
ja
add
jle
dec
add
bound
cmp
ror
xchg
mov
mov
push
insb
ja
dec
push
push
lcall
jmp
xchg
fs
dec
insl
adc
mov
repnz
sub
adc
mov
sub
aam
push
in
cmp
mov
sbb
cmp
and
jmp
inc
push
add
inc
ds
dec
inc
dec
push
dec
xchg
add
aam
fs
push
movb
shlb
clc
not
call
dec
or
push
pusha
call
push
jmp
out
push
jg
add
sti
push
aad
bswap
setne
mov
bswap
push
mov
call
jmp
sbb
lcall
mov
lea
das
daa
ret
pusha
mov
aas
mov
repz
rclb
int
and
pusha
and
loopne
pusha
jne
xlat
repnz
ret
movb
inc
adc
mov
and
stos
nop
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
aam
add
incl
cmpsb
pusha
daa
mov
mov
push
cwtl
xor
jmp
mov
mov
cwtl
push
fcomip
fcmovbe
std
adc
ja
jno
xchg
call
lret
cltd
lock
cmp
test
jnp
outsl
daa
push
dec
cltd
loopne
inc
adc
stos
sub
lahf
int
jmp
sub
in
fwait
jnp
jno
in
push
mov
mov
popf
and
adc
pop
dec
mov
movsb
xor
push
js
xchg
enter
sub
lods
or
adc
pop
rcll
decl
out
jb
jbe
pop
xchg
movsl
fwait
lret
clc
popf
jmp
shlb
adc
mov
sbb
lcall
cmpb
or
popa
inc
jecxz
add
push
add
jle
dec
mov
add
jmp
data16
push
push
aam
and
ljmp
out
out
movsl
mov
jmp
lods
add
inc
punpckldq
push
movb
lea
ja
incl
add
leave
lea
test
aam
sar
lahf
sub
bsr
sar
lea
pusha
fcmovnu
int
bsf
and
rol
sub
mov
inc
xlat
call
mov
std
insb
out
jl
cmp
sub
pushf
mov
std
lods
add
jmp
cmp
shrb
xchg
std
aaa
movb
sub
jmp
rorb
cmp
aaa
xchg
add
sub
mov
xchg
rorb
pushl
push
imul
aas
mov
js
add
mov
jo
incl
adc
or
mov
push
dec
das
js
fistl
sbb
xor
or
jmp
clc
lahf
inc
add
sub
cmp
adc
outsb
add
xchg
adc
rol
cmp
xchg
mov
pop
call
pusha
enter
icebp
or
cmp
pop
cld
cmp
neg
clc
xchg
push
pushf
test
xchg
les
in
xchg
sub
rcl
mov
or
call
subl
push
call
sub
dec
in
pop
jo
lds
ror
cmc
add
push
or
ss
jmp
cmp
lea
pusha
test
cmp
in
cli
xor
push
mov
bound
jmp
mov
or
xchg
lods
shlb
insb
or
rorl
rolb
inc
push
call
lods
sbb
sbb
shlb
add
das
push
add
not
jmp
stc
jmp
punpcklbw
enter
js
in
mov
test
insb
mov
pushf
sub
mov
dec
xor
push
push
clc
jmp
js
sub
call
test
dec
popf
pusha
or
rcll
fiaddl
sbb
ror
movzbl
shr
jno
aas
clc
mov
fcomp
fadds
neg
xor
fbstp
fnstcw
push
mov
mov
cmp
test
add
shr
shl
loope
fmul
mov
adc
inc
jmp
mov
adc
in
xor
pushf
das
loop
fistps
fdivl
out
sar
jg
ffreep
or
xchg
lcall
rolb
aas
rcr
das
sub
adc
pop
retw
add
imull
call
clc
add
xor
imulb
rcr
xor
stc
inc
out
xchg
fwait
xchg
movsbl
pop
mov
call
push
inc
cmp
push
cmp
cmc
inc
mov
enter
add
fsubl
mov
cli
mov
jecxz
mov
push
push
xor
mov
aas
lcall
jp
adc
aaa
pop
cld
out
ljmp
out
xor
sub
ds
lock
pop
push
push
shr
inc
not
sbb
pop
cld
jg
jmp
dec
add
arpl
call
fs
popa
jp
in
sbb
pushf
pop
dec
cmc
push
es
or
push
fdivs
inc
xor
adc
aas
cld
sti
xchg
or
adc
call
xchg
and
mov
movq
loopne
or
jbe
pushf
push
repz
sti
shld
dec
in
cmc
fcmovb
loopne
add
fimull
mov
mov
iret
and
sti
xchg
pop
pusha
xchg
cmp
push
cli
pushf
pop
mov
and
fidivrs
cld
std
lea
jmp
sbb
push
mov
inc
adc
fimuls
dec
aad
ficoml
push
inc
in
mov
insb
push
lock
call
loop
dec
imul
dec
adc
das
pop
fisttpll
cs
jmp
sahf
enter
fdivl
pop
mov
jne
pop
push
sbb
push
iret
cmp
pop
repz
cltd
shll
jg
dec
mov
iret
aas
add
inc
pushf
mov
jbe
cmp
iret
sahf
xor
aas
push
testl
add
das
lahf
loope
jno
sahf
addl
sarb
scas
xor
pop
and
jmp
push
loope
divl
push
pop
push
aas
ja
xor
cmp
sahf
rclb
jne
push
and
pop
xchg
pop
fistpl
shrl
ss
cmp
sarb
sbbb
push
jnp
sarl
lahf
inc
loopne
out
push
jle
jae
pop
sarl
out
roll
inc
xsaves
push
maxps
into
dec
jecxz
jae
sub
mov
rcrb
lahf
cmp
add
fistl
pop
out
push
push
out
pop
mov
scas
pop
pop
iret
cmp
addl
push
iret
rcl
push
ds
outsl
cmpsl
sahf
add
inc
xor
ja
ja
xor
cld
jg
adc
pop
jg
pop
pop
xor
add
addr16
sysret
xorl
aas
movswl
mov
pushf
imull
pushl
jae
aaa
idivl
push
nopl
negl
inc
sbb
aas
xlat
pop
xlat
jo
push
into
pop
xchg
mull
jae
push
mov
lcall
cmc
pop
popf
fiaddl
decb
aas
loopne
stc
jmp
xlat
sub
insb
inc
stc
adc
jnp
out
out
xlat
scas
aas
jmp
adc
aaa
or
pop
outsb
sub
sub
add
sub
add
data16
pushf
add
cmp
push
lock
scas
sar
inc
dec
cmp
pushf
cmp
jmp
addr16
mov
jnp
pop
rolb
fisttpll
or
jl
mov
xchg
and
dec
or
mov
ret
fsubrp
fs
or
pushf
pop
inc
pop
mov
or
xor
add
cld
mov
jb
test
add
and
std
aas
cli
orb
test
lea
or
call
imul
loope
dec
add
out
stc
ja
je
adc
mov
mov
mov
push
push
loop
fsubs
cmp
or
push
mov
orl
in
and
jmp
mov
ret
stc
daa
lea
mov
mov
es
add
ljmp
clc
mov
mov
pop
test
push
fdivs
pop
pop
adc
sub
popa
daa
mov
xlat
or
shll
adc
lahf
divl
pop
incb
sahf
pop
or
push
loopne
stc
push
iret
mov
shrb
pop
and
push
cmp
push
outsl
lock
add
call
mov
mov
ljmp
jmp
js
push
cs
add
cmp
repz
inc
mov
jo
xor
mull
shr
jp
mov
aam
mov
mull
cmp
les
test
rol
rcl
mov
loop
fbld
flds
dec
add
icebp
push
push
cmp
push
pushf
cwtl
mov
jmp
dec
hlt
jmp
cbtw
test
push
pusha
clc
cwtl
clc
in
sub
jo
lret
dec
cmp
inc
neg
lea
xor
setno
clc
rol
shl
add
loope
sub
or
negl
lea
fcmove
dec
mov
lock
sbb
shr
dec
jle
push
fimull
mov
vcmpss
shrb
stc
pushf
jo
test
sbb
daa
xor
dec
cmp
dec
ja
lds
sbb
sbb
xor
stc
mov
neg
push
test
or
aas
add
and
add
pop
xchg
sub
push
adc
into
loop
ja
xlat
pop
mov
out
mov
std
aam
add
cli
daa
and
in
jecxz,pt
popf
imul
bswap
orb
das
ljmp
roll
adc
cmpl
dec
xchg
call
adc
shl
push
out
flds
fsubrs
xchg
testb
cmp
push
not
mov
or
outsb
or
loopne
mov
xchg
cld
mov
jmp
mov
pop
push
mov
ret
and
adc
aam
jno
insb
add
mov
shr
add
outsl
popl
insb
push
movsb
lret
sub
push
aaa
jae
mov
jo
push
cmc
clc
jmp
pop
sarb
lds
imul
and
inc
mov
in
fldt
in
rcrb
mov
pop
test
out
mov
ljmp
mov
movsbl
xchg
call
lcall
data16
cs
xchg
ss
rolb
les
jmp
jns
jg
add
shl
or
loopne
setb
sub
mov
push
add
dec
xchg
aad
lds
add
xchg
mov
call
vpcompressq
shr
cmp
push
shlb
cs
pop
sub
inc
sbb
pop
xor
or
jecxz
cmc
add
int
jmp
cli
not
setle
mov
data16
js
cmovbe
aad
pop
cld
xor
cmc
in
ja
xchg
sub
xchg
xchg
stos
std
cmc
sub
call
test
outsb
mov
mov
loope
pop
and
add
pushf
pusha
jle
xchg
sbb
or
cmp
divl
mov
pop
xchg
imull
jmp
push
repnz
jmp
sbb
mov
mull
fdivrl
negl
decb
mov
and
mov
enter
out
scas
stc
test
js
cmp
cmp
inc
add
loop
xlat
ss
adc
push
clc
push
xor
push
push
pushf
mov
mov
ja
pusha
pusha
xor
or
push
shl
sbb
add
pause
std
clc
stc
popf
push
out
lds
mov
sbb
pop
je
pop
repnz
cli
adc
pop
in
inc
sbb
sar
movnti
shl
push
divl
lods
repnz
sti
loope
and
or
fimuls
in
ret
inc
cld
je
pop
clc
add
mov
jmp
jp
push
and
scas
mov
push
mov
adc
xlat
add
mov
push
pusha
jns
xorl
pusha
lea
inc
std
jmp
loopne
sbb
xlat
pop
in
into
nop
add
inc
cltd
cmpsb
shll
mov
mov
push
xchg
ret
ret
jbe
mov
stc
pusha
and
push
loop
clc
push
push
add
lock
cmp
cmpsb
cli
mov
shlb
jecxz
mov
sbbl
and
call
adc
ret
ror
mov
cmp
mov
or
inc
mov
push
inc
pop
xor
imull
cld
shlb
movsb
cli
add
in
movsb
adc
lret
mulb
cmp
push
fs
xchg
jmp
loope
sub
lea
pop
xor
test
arpl
repz
lods
lock
mov
or
cmp
scas
push
shl
cmpsl
cmp
std
sar
push
das
mov
mov
xchg
into
or
jb
or
enter
push
inc
arpl
and
pminub
mull
sbb
push
push
shr
push
or
loop
clc
nop
lock
and
das
int3
fisttps
shr
jbe
pop
or
ret
pop
in
pop
out
xchg
iret
je
xchg
daa
les
outsb
pushf
dec
push
flds
pop
out
mov
dec
rol
mov
cmp
xor
das
faddl
stos
and
cltd
xchg
rcl
and
loope
aad
repnz
jecxz
lret
sub
call
inc
inc
jmp
xor
xchg
shlb
and
jb
dec
clc
call
push
push
mov
shl
aad
aam
pushf
ret
hlt
xor
test
cmc
pop
xchg
sbb
data16
xchg
push
ljmp
push
sbb
pop
into
loope
push
lea
cld
and
inc
mov
lock
or
sti
dec
clc
push
imul
cmp
repnz
mov
mov
push
pushf
push
push
add
std
movsb
adc
cli
lock
cmc
and
lahf
push
out
lea
call
shl
add
sub
lock
pop
mov
dec
sbb
jmp
inc
fs
pop
sbb
pop
and
adc
jne
jmp
pusha
pushf
dec
sbb
test
mov
enter
not
setp
scas
pop
cli
shr
adc
cmp
test
sbb
or
jbe
pop
or
pusha
mulb
shl
pop
cmp
test
pop
jl
shr
add
push
xor
jmp
adc
imul
icebp
pop
popf
sar
mov
ds
ror
insb
setae
es
shl
push
not
cs
test
ds
add
mov
mov
fiaddl
xor
sbb
jge
stc
sub
and
sub
mov
mov
xchg
pop
adc
xchg
bound
lods
mov
call
filds
loopne
add
mov
xor
and
cmp
xor
icebp
jnp
pop
ret
sar
js
add
mov
neg
fisubrs
xlat
jl
sub
jno
cwtl
inc
or
in
xchg
push
jg
imul
in
js
push
xchg
loope
fiadds
xchg
out
clc
or
addr16
inc
or
sub
cmpsb
popw
add
push
mov
lret
mov
ja
add
mov
add
jnp
mov
daa
mov
mov
jae
jecxz
cltd
adc
push
sahf
xchg
rorl
jle
mov
dec
inc
in
add
sbb
test
xchg
sub
pop
jmp
loope
pop
int3
inc
adc
rcr
clc
movsb
and
mov
mov
push
add
mov
xor
into
push
call
cmc
hlt
pop
push
enter
movsl
out
ja
jecxz
push
js
sub
and
add
push
movb
iret
add
scas
call
dec
jmp
and
sbb
mov
cmp
pusha
test
shl
add
push
mov
mov
adc
aaa
loopne
lret
negl
sub
mov
dec
xlat
cld
push
test
push
fdivrs
test
or
jmp
pusha
call
lcall
cmc
xadd
mov
decl
pop
ror
pop
test
sub
test
rolb
mov
lods
xchg
xchg
jg
popf
jmp
push
or
push
fistps
jmp
pop
loopne
pushf
pop
repnz
pushf
addl
outsb
push
call
into
push
loop
pusha
mov
jg
test
inc
jge
and
enter
mov
int
mov
clc
add
out
dec
xor
push
test
neg
pusha
rcrl
mov
call
shl
and
scas
aaa
pop
cmp
xchg
cmp
adc
cld
enter
mov
or
pop
js
cmc
inc
cmp
cmp
cmp
scas
rol
dec
xorb
pop
jg
rcll
pop
jo
adc
ljmp
xor
test
pushf
cmc
sub
test
stc
ds
inc
jo
jecxz
in
jmp
ljmp
xorb
xor
ret
ret
adc
stc
test
pusha
push
lock
or
cwtl
js
lret
decb
mov
jg
xchg
mov
cld
xchg
clc
shll
pushf
or
push
push
sbb
cmp
add
loop
cmp
inc
lret
mov
cmp
rcrb
int3
xchg
sets
cmc
add
rcrl
ret
or
cmc
lea
mov
mov
push
roll
out
shll
jmp
adc
bswap
clc
out
mov
push
rorb
lods
testl
jp
jl
xor
mov
cmp
outsl
xchg
movsb
jl
pop
lea
cmc
mov
jle
xor
cs
ret
or
pop
int3
inc
push
add
stos
ljmp
jecxz
aad
xchg
add
into
adc
jmp
pop
out
pop
shl
testl
push
scas
js
aaa
lret
xor
not
sub
fimull
xor
rorb
icebp
adc
lcall
adc
std
dec
ret
and
xchg
or
dec
inc
cld
clc
cmp
aam
xchg
sarl
iret
es
push
or
add
fadds
sbb
into
mov
cmc
pushf
lcall
pop
push
push
and
push
lea
jmp
sbb
cmpsb
lea
jmp
bound
mov
sbb
and
add
ljmp
in
addr16
cld
lock
xchg
ljmp
inc
xor
dec
adc
push
test
test
cmp
loopne
aaa
imul
mov
mov
jnp
mov
push
cmp
add
shrl
jns
sbb
mov
lcall
cmp
mov
mov
add
add
pop
loop
push
loop
or
in
jl
call
mov
aam
mov
cld
inc
mov
add
lahf
in
repnz
out
sahf
ficoml
aad
or
cmp
xchg
xor
in
mov
ffreep
push
in
jbe
cld
sarb
out
xchg
sub
out
xchg
dec
sahf
sti
shr
int
and
inc
rclb
lahf
cmpl
pop
ret
popf
loop
inc
mov
rolb
fsubs
jl
sub
loop
fisttps
decl
or
sbb
outsl
lock
rorb
mov
in
rorb
repnz
rol
mov
cmp
adc
insb
sahf
sarl
mov
fstps
call
xchg
je
jg
fcmovnb
push
pushl
pop
inc
mov
inc
sahf
inc
aaa
jnp
fs
sbb
incb
scas
ror
xor
push
adc
outsb
xchg
jbe
lock
jg
xchg
std
aas
dec
cwtl
adc
or
and
push
jnp
add
test
loope
pushl
or
push
xchg
mov
rep
xor
repnz
in
gs
fistps
fildll
mov
popa
loopne
inc
pop
fisttps
rol
aas
and
lcall
mov
or
bnd
daa
fldcw
mov
mov
aaa
rorb
and
inc
jp
xchg
aaa
rcl
dec
push
and
push
cld
push
pushf
ljmp
inc
pop
sbb
add
loop
imul
mov
fistpll
xlat
mov
xor
arpl
mov
cmp
outsb
inc
pop
in
cmp
or
aas
add
std
and
cmc
stos
ljmp
clc
pop
mov
test
mov
cli
pop
aaa
xchg
mov
dec
std
lcall
divb
xchg
inc
mov
flds
sbb
add
jnp
xchg
xchg
jnp
incl
mov
fsubs
jnp
fldenv
stos
sbb
xor
enter
fldl
xchg
sti
daa
pop
ljmp
and
std
jmp
popf
int3
aam
sub
lret
or
dec
rcr
out
ljmp
jns
pop
gs
jp
mov
push
mov
mov
pop
lock
jmp
push
enter
and
xchg
mov
repnz
iret
adc
push
dec
and
rclb
inc
dec
repz
ja
test
aad
and
push
cmpsb
and
jge
cwtl
andb
fmuls
push
push
pusha
and
cmp
inc
cvtps2pd
cltd
sbb
cmpsl
and
push
in
push
mov
push
mov
mov
rcl
xchg
cli
and
into
aas
inc
test
adcl
repz
repnz
lea
push
cld
mov
or
aas
dec
xor
jno,pn
xor
push
insb
lock
ds
inc
call
lea
push
ja
leave
push
adc
scas
les
or
nop
fs
stos
inc
push
jnp
mov
lock
or
in
ljmp
enter
or
lods
mov
mov
insl
nop
sbb
mov
push
xor
das
jp
test
adcl
pop
dec
cmp
imul
inc
and
mov
and
sahf
jmp
xchg
testl
sahf
insb
pop
lods
dec
cmp
mov
aaa
std
sub
cwtl
cmp
inc
push
sbb
mov
les
pop
jmp
ficomps
mov
sbb
fbstp
cmc
imul
jnp
pop
inc
pusha
scas
adc
rcrb
jne
cmpsb
pop
fists
outsl
mov
jg
cld
ret
mov
les
push
mov
into
repz
lcall
mov
mov
jb
xchg
insb
push
lods
adc
mov
adc
push
and
lret
popf
jo
pop
ljmp
mov
cs
lock
adc
lods
adc
jg
ret
xchg
cmp
jl
inc
lahf
or
nop
pusha
jmp
add
mov
jmp
dec
je
xchg
or
push
lret
ss
leave
sub
imul
shrl
iret
xor
add
mov
xor
popf
incl
mov
movsl
jo
flds
js
sbb
incl
gs
pop
push
push
adc
cmp
and
clc
loop
std
loopne
in
or
ret
jmp
into
icebp
mov
xchg
int3
pop
add
rcll
inc
insl
push
ret
jp
out
jb
aas
ja
inc
les
lock
iret
bound
popa
js
mov
mov
fiaddl
ljmp
jnp
repnz
sub
mov
dec
pop
xor
push
sbb
adc
cli
iret
or
lcall
xchg
scas
xor
cltd
les
or
sahf
mov
jne
decl
xor
dec
mov
sbb
pushf
inc
mov
lcall
in
and
es
imul
xlat
sub
repnz
jg
dec
lret
movsl
fisttpl
mov
or
in
clc
jmp
mov
dec
push
jg
push
lds
les
nop
lods
repnz
xchg
dec
push
mov
sbb
fstps
in
pop
jno
mov
ja
inc
lahf
mov
push
sbbl
mov
pop
loopne
xor
add
shrl
mov
sbb
das
clc
inc
ret
or
int
dec
adc
repnz
and
outsl
pop
gs
push
clc
inc
test
add
out
or
incl
pop
dec
sbb
sub
xor
mov
mov
rorb
dec
jo
sbb
pusha
bound
and
xchg
testl
sub
decl
cmp
lds
fisubs
fdivrp
sarb
imul
cmp
xchg
ret
jg
imul
adc
loop
xor
scas
jb
push
cmp
jg
lods
iret
push
add
lea
shr
repz
push
shlb
jl
repz
out
mov
xchg
iret
jns
repz
pushl
push
sbb
cmp
cwtl
movsl
push
mov
push
adc
push
pop
clc
add
adc
sub
cmpsb
inc
mov
arpl
sbb
pop
push
sub
pop
sbb
cmpsb
sbb
idiv
jmp
push
movsl
mov
ljmp
aad
hlt
mov
aam
rcrb
cmp
sahf
js
pushf
push
roll
inc
jle
cmp
or
jmp
filds
push
mov
pusha
sbbl
enter
pop
arpl
mov
cld
into
adc
push
jb
inc
fdivr
lods
popf
fwait
mov
sti
mov
dec
push
popa
mov
sbb
pop
inc
sahf
inc
and
ljmp
sub
add
lcall
lret
sarl
push
adcb
mov
sbb
push
incl
fwait
movsl
mov
int
cmpsb
jecxz
jae
dec
push
xor
daa
or
xor
fcoml
incl
push
loopne
scas
rcrb
cld
pop
or
dec
imul
pop
sbb
shrb
mov
shlb
lret
pop
test
call
sub
ret
sti
push
or
pushl
dec
negl
in
scas
push
iret
inc
add
mov
outsl
push
sbbb
int
xor
clc
iret
jae
aad
outsl
lcall
int
shlb
push
inc
std
mov
adc
insb
int3
xor
dec
adc
jge
sbb
jecxz
in
lods
xchg
dec
cmpsl
push
movsb
cmp
xchg
push
xchg
popa
scas
fcomip
filds
dec
jl
in
imul
sbb
xchg
jge
out
aas
clc
incl
inc
stc
and
pop
fwait
add
sbb
push
out
add
aas
decl
xor
push
cltd
movsb
insb
xchg
and
add
mov
mov
mov
addr16
jmp
dec
add
fs
hlt
mov
push
fisubs
ljmp
dec
jl
jne
into
xorl
inc
fnstsw
cli
mov
inc
pop
mov
inc
aaa
sbb
ficomps
and
or
div
movsb
xchg
sbb
mov
pop
in
dec
ffreep
ficomps
shl
js
repnz
test
cmpsb
cmp
or
enter
call
ret
xchg
imul
cmpsb
dec
rcl
in
or
mov
bound
popa
repz
inc
lcall
pop
call
es
daa
xor
orb
out
adc
icebp
xchg
xchg
in
mov
dec
push
ljmp
test
push
pop
ljmp
cli
sbb
mov
into
hlt
pop
imulb
ss
jmp
pop
xor
sub
cmc
push
jmp
lret
or
xchg
and
stos
rclb
pop
dec
aad
xchg
mov
ljmp
in
in
mov
cli
mov
out
jp
mov
adc
mov
mov
adc
ljmp
fwait
lcall
movsl
mov
dec
adc
rorl
insl
push
lods
nop
into
mov
call
stos
cmc
scas
sub
xor
loope
out
pop
dec
mov
cmpsb
xchg
pop
push
mov
push
mov
lret
into
lret
pop
lds
dec
xchg
insb
icebp
loope
outsl
cli
jmp
push
xorb
lock
sub
and
jmp
je
fdivrl
push
adcb
cwtl
inc
sub
cmpsb
mov
cli
adc
mov
jne
testb
or
ljmp
jmp
into
pop
pop
adc
icebp
push
push
je
std
mov
sbb
ficoml
les
dec
clc
or
cmp
addr16
push
fnstcw
mov
mov
filds
xchg
sub
lahf
into
mov
cli
imul
pop
outsl
in
decl
call
stos
xor
dec
aam
aad
mov
inc
je
mov
push
sbb
mov
dec
mov
sbb
mov
or
sbb
dec
ss
inc
ficoml
pop
pusha
mov
xchg
add
les
sbb
jae
jno
shr
adc
xchg
or
push
fs
subl
scas
mov
adc
adc
sti
idiv
and
jl
pop
push
jb
jbe
sahf
in
sti
es
pusha
adc
incl
repnz
pop
mov
push
mov
add
ljmp
das
push
jle
sub
fstps
aad
mov
mov
pushl
push
and
lods
cmp
int
xchg
test
mov
and
pushf
adc
fsub
adc
mov
rcrl
pusha
jno
pop
push
fbstp
ljmp
mov
lcall
aam
xchg
jmp
cld
push
push
ljmp
cli
sbb
add
icebp
loop
add
cmpsb
sbb
jmp
mov
cltd
pop
adc
xchg
imul
cmp
mov
push
js
sub
mov
in
pop
inc
mov
sbb
out
pushl
in
imul
dec
adc
in
push
dec
insl
rcl
xorb
inc
xor
ljmp
inc
mov
mov
lcall
mov
mov
ljmp
shl
insl
xchg
in
repz
adc
and
frstor
xchg
loop
outsl
rorb
cmp
mov
arpl
mov
pop
xor
cmp
and
sbb
add
incl
je
or
imul
out
aad
loopne
adcl
sbb
movsb
loop
or
sub
les
inc
lahf
cmp
sub
dec
insb
adc
cmp
out
cmp
fwait
daa
sbb
sbb
pusha
rol
mov
jmp
lahf
xlat
into
and
out
inc
mov
cs
jg
jg
lahf
hlt
mov
dec
dec
mov
std
rcrl
pop
inc
fldl
mov
lcall
jmp
lret
mov
jno
dec
cmp
inc
mov
dec
push
mov
xchg
dec
xchg
ljmp
cmc
std
sub
dec
jp
mov
xchg
cwtl
mov
leave
adc
mov
test
xchg
cmp
cmp
sub
mov
cmp
shrl
pushf
test
test
xor
or
std
ljmp
insb
add
jbe
pop
mov
js
cmp
inc
aad
hlt
mov
call
jmp
add
test
test
adcl
sbb
repnz
cli
jecxz
sub
mov
ljmp
test
mulb
sarl
adcb
add
dec
fists
data16
and
test
and
mov
rolb
cmpsb
mov
ljmp
push
call
jae
lock
push
lods
xchg
rorl
subb
jmp
cli
flds
adc
fcomp
xchg
mov
sahf
popa
aas
and
and
pop
inc
jle
insb
and
das
pop
jns
mov
adc
cltd
jmp
mov
cmp
mov
jge
loop
je
push
dec
jbe
cmp
xlat
sbb
fdivs
jmp
sub
ljmp
xor
scas
add
orb
inc
pop
add
cmpl
jl
pop
sbb
cmp
push
movsl
cmp
and
das
pop
mov
lcall
iret
jmp
shrb
sub
shll
sub
xor
shrl
imul
sub
pop
inc
js
cld
js
mov
xchg
or
hlt
loope
fcoms
xor
es
push
lahf
out
int
pushf
mov
cmc
cs
adc
inc
or
xchg
jne
and
adc
fldenv
cwtl
inc
mov
jne
ljmp
or
cmpsb
je
pop
jecxz
ret
jb
sub
sti
imul
call
test
mov
xlat
mov
mov
and
sahf
cli
outsl
call
das
jo
push
mov
and
fadds
sti
inc
fadd
fwait
loop
mov
jb
adc
push
rorl
push
scas
xor
push
or
pushl
jo
xchg
sbb
mov
cmp
adc
push
or
jmp
shrl
sbb
dec
jmp
mov
xchg
outsl
call
mov
rorb
sbb
and
and
test
pop
fildl
cwtl
es
sti
push
cld
fisttpl
mov
andl
repnz
pop
mov
leave
scas
or
das
adc
and
and
pop
push
mov
rorl
push
xchg
jo
cmp
test
insb
in
stc
inc
sbb
or
sub
mov
cmp
jno
cmp
or
mov
out
xchg
incl
push
clc
mov
loope
inc
sbb
js
jae
lret
cmp
jg
lds
add
test
push
out
leave
aad
jg
mov
repz
decl
dec
inc
aam
mov
push
imul
das
mov
add
jmp
cmp
iret
mov
mov
add
push
xchg
les
sub
std
ljmp
cmp
inc
sti
push
insb
dec
nop
pop
sbb
add
mov
lahf
loope
repz
ret
imul
cmp
inc
push
jb
push
cmp
cmp
adc
jo
inc
out
mov
cmc
mov
das
pop
loopne,pn
lcall
jmp
cmp
xchg
ja
fwait
inc
and
in
pop
mov
jae
shll
xor
inc
aas
lahf
stc
xchg
lods
xor
jp
movsl
inc
push
mov
jle
mov
test
jle
jnp
ds
add
jb
loopne
pushl
mov
and
xor
in
sti
es
ret
xchg
or
imul
sub
out
push
lods
aam
pop
inc
pop
or
pop
shlb
arpl
mov
repz
dec
xor
inc
hlt
insl
jae,pn
fdivrp
adc
adc
aas
mov
xor
fsubrl
test
xchg
pushf
call
add
cmc
add
cmp
jecxz
popa
jl
sbb
popf
int
xchg
xor
dec
jge
adc
ljmp
loop
add
bound
int
jl
call
hlt
call
outsb
test
les
mov
pop
mov
jb
shll
cmp
clc
push
dec
xchg
sub
jno
nop
out
mov
xchg
cwtl
scas
jo
mov
hlt
add
repnz
cmp
into
repnz
ficoms
xor
and
fisubs
mov
cwtl
jle
lcall
pop
movsl
mov
inc
pop
daa
sbb
jbe
mov
inc
mov
mov
cmpsl
cmp
jmp
mov
hlt
leave
popa
rcl
pushl
cld
cmpsb
stos
testb
mov
adc
mov
rcll
dec
sub
sbb
iret
jge
cld
mov
inc
jae
jle
lahf
and
and
popa
inc
loop
or
ret
inc
push
daa
xor
push
dec
jg
rolb
jae
push
int3
nop
andl
std
cmp
pop
jnp
gs
and
adc
pop
das
rclb
out
std
cld
or
decl
fwait
xchg
xor
xor
ss
into
ret
out
mov
fs
cld
pushf
andl
incl
pusha
lods
cli
cwtl
cmpsb
loopne
lods
push
push
adc
aad
icebp
bound
roll
mov
push
ja
scas
lahf
push
xchg
ret
mov
imul
outsl
sub
decl
adc
inc
scas
xor
push
andl
add
dec
in
mov
push
js
ret
adc
push
sti
addr16
cltd
adc
ret
inc
test
neg
pop
fcmovnb
loopne
movsb
sub
jp
mov
cmp
jne
push
pushf
push
jmp
cmpsb
sbb
mov
sbbl
or
in
sbbl
pop
pop
cmc
leave
xor
and
decl
lock
jle
push
shrl
stc
sbb
sbb
sbb
ficompl
ja
hlt
cld
dec
mov
pop
insb
dec
es
add
incl
mov
les
push
mov
and
mov
jo
std
shr
jo
int
sub
jb
fiaddl
sbb
ljmp
call
sbb
mov
or
rorb
mov
ror
sbb
out
addr16
les
lret
lcall
insb
xlat
fs
ljmp
push
adc
mov
fs
inc
stos
lock
push
jle
fbld
xor
loope
popa
sbb
xor
jg
lds
fidivrs
cwtl
xchg
cltd
push
fiaddl
leave
push
push
call
sub
sahf
xor
pop
cmp
jb
jmp
jge
jg
lcall
sub
cmc
mov
dec
cmp
xor
cmp
mov
loopne
mov
xchg
xchg
push
sub
pop
sbb
cmc
data16
add
jmp
xor
dec
adc
nopl
aam
imul
jae
sub
testb
call
std
ljmp
dec
int3
pop
imul
lret
imul
stos
mov
mov
lcall
mov
test
cli
inc
popa
jge
shrl
dec
mov
jne
and
les
xor
add
jmp
sbb
bound
or
xchg
cltd
cmp
test
xor
mov
dec
mov
shll
fnsave
mov
in
xchg
sub
push
cmp
jecxz
pop
xchg
aad
fisubs
stos
add
inc
inc
or
pushl
xchg
jmp
jne
mov
aam
dec
mov
daa
in
xorb
xchg
mov
pop
andb
test
add
or
in
jg
adc
rol
add
rolb
and
sbb
andb
jg
incl
lret
pushl
xor
add
inc
stos
call
pop
lea
lcall
jge
out
in
hlt
xchg
dec
aam
cltd
jg
adc
sub
adc
mov
js
je
fadds
and
repz
popf
les
jmp
icebp
divl
mov
cs
rcll
mov
cmpsb
pushl
ss
dec
jbe
dec
into
mov
xchg
push
sub
pop
sbb
insl
nop
and
hlt
ljmp
in
roll
push
and
cmp
push
jecxz
adc
jmp
sub
xchg
mov
mov
xchg
mov
dec
jbe
imul
test
test
pop
cmc
pushl
mov
push
stc
mov
jnp
mov
sti
out
cltd
cmp
cli
push
or
aas
btr
mov
icebp
cld
int3
mov
mov
mov
xchg
ljmp
mov
mov
jg
rcrl
int3
mov
shlb
push
aas
push
sbb
xchg
cs
pushl
mov
outsb
or
rorb
or
iret
pop
cmp
sub
ljmp
rolb
cld
inc
mov
ss
pop
jns
add
mov
sarl
xchg
jl
jmp
cltd
gs
lret
pop
xor
popf
das
mov
xchg
dec
mov
sbb
js
loope
cld
add
fcom
jmp
sub
daa
jle
cli
push
push
notl
lcall
pop
jmp
pop
mov
jg
jl
lock
out
mov
dec
decl
jo
inc
mov
xchg
push
iret
repnz
icebp
push
xor
ror
push
mov
insl
jns
jae
xor
mov
jb
xchg
rclb
cmp
jmp
into
jae
push
scas
cld
xchg
test
xor
xchg
mov
scas
fstps
adc
push
cmp
xor
xor
andb
pop
jne
jns
mov
clc
jmp
xor
inc
mov
sbbb
add
xor
in
jg
pushl
outsl
adc
push
mov
jmp
fdivr
decl
cmp
pop
adc
mov
and
sub
jecxz
fidivrl
in
outsl
clc
pop
mov
cmp
adc
mov
ja
in
loope
xchg
push
push
inc
pop
sbb
loop
leave
pop
insl
push
bound
fdivr
mov
ja
imul
jno
add
mov
push
std
add
scas
sub
sbbb
pop
dec
pushf
add
xchg
inc
mov
pop
sub
xchg
push
enter
repnz
mov
inc
cmpb
dec
call
cmp
xor
cmp
fucom
ss
stc
adc
mov
int
dec
or
int
fcmove
scas
sub
and
jmp
int
pushl
mov
call
cwtl
in
inc
cmp
sub
bound
xor
xor
fsubs
mov
xchg
dec
mull
ret
adc
pusha
push
lds
adc
xor
fcoms
sbb
ja
imulb
dec
adc
movsb
addb
push
sbb
sub
sbb
xor
mov
add
inc
lret
jmp
mov
shrl
mov
mov
push
fists
lock
shrb
rcrb
test
sub
or
cmpsb
and
gs
sub
mov
xor
rorb
or
and
decl
dec
scas
xor
shrb
dec
shll
push
pop
xchg
sub
xchg
mov
sub
sub
cmp
xor
call
inc
add
int
lods
push
dec
lock
sbb
rclb
pop
shrl
ljmp
clc
ljmp
loope
jns
aam
xor
aad
and
std
lret
add
sub
cmp
out
call
fs
data16
cmp
push
add
xor
cmpsl
mov
loope
outsl
sub
pop
test
das
pushf
mov
mov
mov
decl
out
mov
fldenv
ja
and
clc
incl
cli
mov
repnz
icebp
dec
push
dec
nop
sub
lret
out
add
addb
test
rcl
jmp
dec
xlat
sub
mov
std
in
push
ss
xchg
pop
jmp
std
mov
add
loop
sar
lcall
shll
flds
push
pop
or
add
jl
mov
mov
das
add
pop
loop
mov
test
xor
mov
arpl
inc
push
pop
cmp
addl
pop
ficompl
ret
and
inc
jnp
cmp
mov
clc
call
imul
adc
in
adc
xor
sbb
cmpl
adc
xchg
or
aaa
dec
xchg
ja
mov
aas
xor
insb
call
push
dec
mov
jae
jle
or
fistpll
push
sub
jne
xor
popf
add
inc
test
outsb
decl
out
sahf
inc
pop
and
pop
add
jg
rorl
aad
sar
mov
mov
mov
jns
cltd
xchg
lods
mov
push
dec
mov
cmp
push
out
adc
lods
pop
sbb
pop
inc
sti
les
adc
fcomp
in
in
and
dec
outsb
subb
xor
sti
daa
popa
mov
les
adc
push
and
push
repz
test
les
ret
push
call
sbb
call
aaa
loopne
ljmp
cmpl
and
std
test
jle
cld
mov
xchg
les
pop
pusha
stos
fidivs
nop
in
jo
scas
repz
xor
pop
test
jno
in
ss
adc
fucom
incl
in
push
hlt
sub
imulb
xchg
or
mov
je
pop
leave
aad
lcall
or
js
movsb
mov
mov
inc
aas
cmpl
fcomip
adcb
lcall
lods
rorb
sbb
lret
test
aaa
mov
mov
jl
xchg
inc
pop
into
pushf
js
mov
pushl
mov
xchg
xor
push
dec
push
sbb
aad
dec
adc
sub
dec
push
scas
xchg
lds
mov
test
cmp
ds
js
lcall
jmp
xlat
sub
push
test
inc
xchg
push
push
nop
adc
scas
push
pusha
or
lods
sub
popf
pop
pushf
ffree
aas
hlt
mov
icebp
mov
cltd
sub
or
xchg
inc
mov
ja
pop
mov
mov
xchg
in
xor
rorl
push
or
jge
mov
nop
jae
test
stos
adc
popf
in
out
mov
sbb
decl
ss
in
xchg
mov
clc
in
lds
and
in
sbb
cwtl
in
xchg
movsb
lcall
stos
dec
adc
movsl
cmpsl
aas
sub
ss
icebp
addr16
and
pop
add
mov
outsl
add
bound
sbb
push
jmp
sbb
add
pop
and
jmp
xor
jmp
mov
loop
subb
nop
addr16
decl
xchg
insb
xor
xor
mov
or
dec
mov
mov
push
decl
call
fistps
pop
inc
cmpb
test
mov
mov
test
addr16
xchg
nop
loope
repnz
and
popf
inc
rorl
push
pop
add
cmpsl
test
push
rorl
icebp
loop
jecxz
sarb
jg
jecxz
push
stos
jmp
jecxz
push
cs
leave
roll
xlat
push
daa
in
hlt
or
fistl
je
enter
jmp
mov
sbb
les
lock
test
fimuls
or
incl
push
or
lods
adc
in
iret
call
cmc
jns
push
rcrl
and
xchg
aas
decl
adc
xchg
lret
adc
jmp
cld
arpl
lahf
imul
int
int
and
lock
dec
std
fsubl
jbe
rclb
sahf
push
jmp
or
inc
sbb
stos
ljmp
adc
pop
pop
lock
pop
and
add
mov
je
int3
out
pop
into
xor
and
ljmp
lcall
loope
or
dec
and
cmp
orl
jno
aam
call
mov
pushf
les
jge
fmull
stc
and
push
add
call
std
mov
je
addb
lea
dec
mov
or
push
insb
ss
outsb
inc
and
ljmp
mov
out
cmp
inc
pop
cli
mov
je
jbe
mov
outsb
rcrb
sbb
dec
repnz
jb
cmp
test
jecxz
call
fwait
mov
pop
add
imul
xchg
aam
sbb
fildl
nop
jmp
call
or
out
rorb
faddl
sub
push
mov
push
push
loop
push
push
mov
test
lock
out
adc
mov
or
or
call
test
icebp
mov
adc
out
mov
push
jb
ljmp
inc
jle
aaa
movsl
cld
cmp
adc
cmp
imull
jmp
into
sub
sbb
pop
loopne
aas
jle
popa
push
rcrb
cs
loopne
arpl
ret
mov
and
mov
jbe
sbb
cmp
xor
push
pushl
std
sti
inc
testb
cmp
pop
sti
imul
es
and
pop
sbb
imul
and
mov
repz
loop
call
pop
mov
jns
lret
int
fwait
lcall
sbb
push
and
mov
outsl
add
push
xorb
xor
dec
jae
testl
out
clc
inc
movsl
xchg
iret
push
cmp
das
std
gs
fsubs
or
fwait
jno
ret
pushl
lcall
sub
loope
inc
iret
jmp
lods
xor
lock
adc
jmp
sarl
outsl
xchg
push
testb
xchg
or
mov
int3
push
jnp
negb
xlat
lcall
cwtl
sbb
pop
insl
xorl
mov
inc
push
adc
ret
mov
add
sarb
and
jbe
xor
jecxz,pt
insl
push
or
or
iret
or
es
out
or
in
sahf
mov
sub
ds
popf
ljmp
xchg
sub
ja
aaa
push
pop
pop
cmp
cmp
mov
mov
lcall
imul
jmp
add
push
sub
mov
test
lods
jle
jmp
sbbb
cmp
js
filds
call
push
dec
aad
mull
aaa
dec
jmp
ret
and
push
mov
push
cld
jg
pop
repnz
and
shlb
shlb
loope
popa
jl
fbstp
inc
sbb
fs
mov
xchg
sti
xchg
roll
rorb
das
mov
mov
sbb
pop
sub
push
out
pop
push
cmpsb
mov
incl
je
ss
js
iret
rcrb
rcr
push
mov
mov
addb
push
sahf
dec
repz
shrl
scas
xor
mov
lock
mov
mov
pusha
jne
mov
pushf
sbb
push
sbb
mov
lret
mov
into
call
js
enter
dec
xchg
dec
ja
xchg
mov
jb
adc
cwtl
inc
push
in
test
mov
ss
test
cmpsl
pop
fs
sub
sbb
test
movsb
ja
dec
ret
enter
xor
movsl
sbb
repz
mov
push
test
push
pop
mov
frstor
push
jg
pop
fistps
pop
sbb
sub
sbb
incl
mov
sbb
mov
out
jl
stc
js
cmp
mov
ss
fs
incl
jbe
xchg
sbbb
xor
pop
add
add
jle
mov
sub
xor
into
xor
push
inc
pop
lock
lahf
add
fmull
inc
cli
rolb
mov
sub
mov
inc
ficompl
pop
std
std
mov
or
inc
adc
lret
iret
in
and
pushf
mov
pop
sar
call
daa
loopne
cmovl
jle
in
cmp
xor
aam
push
sarb
jg
adc
test
jno
mov
inc
push
test
data16
hlt
cld
stos
call
or
mov
ret
jmp
push
inc
fisttpl
fucomip
mov
ret
jne
movsl
test
sub
loope
pop
stc
dec
pop
rcl
mov
fmull
jns
in
cwtl
dec
inc
fisubs
aam
push
in
mov
test
jbe
test
mov
incl
lahf
push
inc
inc
mov
add
outsl
jg
xchg
push
hlt
xchg
outsl
in
mov
push
int3
pop
fmull
cmpsl
fwait
out
call
ret
jns
decb
ret
sub
add
pop
repz
call
fisttps
jg
in
js
dec
shlb
aam
pop
jmp
out
aam
popf
push
out
dec
xchg
mov
fdivp
add
aam
push
fnsave
jbe
inc
movsl
pop
rcr
mov
sub
je
adc
inc
int
jmp
subl
adc
pop
into
int3
lahf
int
pusha
xchg
or
ljmp
aaa
aaa
pop
push
xor
jge
in
test
inc
dec
and
aam
dec
pop
iret
loop
and
test
mov
xchg
push
loope
pop
add
push
jae
lock
test
xor
test
clc
cwtl
and
xchg
mov
inc
int
lcall
pop
xchg
insb
sbb
dec
leave
ret
and
dec
sub
daa
pop
pop
and
pop
js
in
call
pushl
jg
je
push
pop
leave
shrl
adc
jl
fwait
jno
cmp
mov
jg
hlt
inc
push
movsb
jecxz
and
xchg
call
lods
push
fdivr
lcall
decb
fisubrl
adc
mov
xchg
jns
ret
data16
xor
call
enter
loope
cmp
mov
dec
sbb
xchg
dec
imul
jmp
push
lret
lods
leave
rclb
and
and
xchg
clc
cmovno
pushl
std
jmp
sbbb
push
cmc
sbb
rclb
lcall
data16
xlat
mov
lock
xchg
mov
ret
jp
xchg
bswap
lret
int
lock
insl
add
pop
inc
shll
fcos
jg
out
mov
fsubs
aam
push
int
and
test
popf
nop
push
incl
outsb
jge
sbb
je
negb
xchg
mov
jle
int
lds
mov
aaa
mov
test
mov
ret
jg
aas
inc
lret
push
cld
enter
imul
dec
inc
xor
cmp
inc
push
dec
call
mov
out
fisubl
xchg
fiaddl
cwtl
cld
out
mov
push
cmpsb
cmp
and
dec
lcall
repnz
incl
pushf
adc
dec
xlat
xchg
outsl
adc
inc
push
pop
enter
and
xchg
dec
inc
push
pop
shrb
outsl
mov
jne
dec
dec
xchg
and
aam
pop
ret
and
lcall
std
std
lcall
add
scas
movsb
cmc
aad
jno
xchg
call
pop
sub
cmpsl
xor
pop
rorb
subl
jmp
loopne
inc
test
sub
jl
add
lock
pop
std
mov
push
fwait
fbstp
xchg
pop
rcr
adc
test
mov
movl
aas
outsb
cmpsb
and
push
xchg
scas
add
push
adc
inc
gs
scas
mov
inc
push
fisubrs
cli
mov
test
scas
jge
cmp
jmp
jmp
call
push
int
cwtl
xor
push
frstor
gs
mov
dec
imul
cmc
outsb
test
jg
ljmp
fidivl
movsb
call
iret
addr16
mov
das
cmp
ljmp
insl
push
mov
aad
call
adc
cs
inc
sahf
ficomps
flds
push
ret
data16
mov
jg
adc
mov
cmpsb
outsb
sub
loope
aas
rcr
xchg
stc
out
fdivs
lcall
mov
ja
sbb
call
push
mov
push
push
outsb
jns
pop
shlb
fidivrl
and
inc
ljmp
ljmp
push
mov
and
cmp
dec
pop
cs
jns
int3
push
in
mov
dec
adc
or
cmp
je
and
sub
mov
dec
das
jbe
xchg
mov
aad
jno
push
pushl
movsb
lods
loop
dec
stos
mov
pop
dec
test
mov
test
xchg
sbb
mov
push
outsb
push
adc
cs
gs
sar
andl
jge
jmp
lret
dec
cmpsl
ds
or
iret
mov
call
jl
fldt
lcall
les
ss
xor
insl
push
mov
dec
call
push
lcall
xor
push
iret
push
cld
fnstenv
jg
mov
jo
cmc
mov
jbe
pop
test
lds
call
jo
cs
filds
pushl
push
imulb
addl
nop
jg
std
jl
sub
je
into
out
pop
sub
pop
dec
leave
pop
push
jbe
mov
jne
in
inc
sti
and
aam
pop
loope
sub
pushl
jge
adc
ds
add
aam
adc
sub
mov
push
xchg
sbb
xor
aad
lea
call
push
les
popw
mov
paddw
adc
lds
xor
jg
ljmp
cmp
mov
loop
movsl
gs
xor
add
aaa
inc
fmull
rcl
call
xor
aaa
or
in
push
dec
push
ds
call
inc
xchg
xlat
sbb
inc
jbe
fisubrl
stc
je
cmp
jle
aam
stc
push
lret
data16
mov
aas
loope
enter
adc
jg
mov
xor
mov
sbbl
pushf
fidivrl
loopne
dec
stos
mov
pushl
sarb
pop
or
fsub
push
repnz
push
lcall
dec
pushl
mov
pop
inc
negb
fcomps
push
inc
mov
push
cld
mov
jno
push
mov
pop
push
cmp
outsb
sbb
loope
cmp
aas
call
mov
xchg
jbe
cltd
fsubrl
push
stos
out
ljmp
leave
ja
push
dec
filds
fwait
nop
add
jo
jo
mov
lds
sub
or
aam
stc
mov
jnp
sahf
push
lret
pop
jle
push
mov
scas
int3
dec
sbb
decl
shlb
outsb
and
popa
addr16
mov
outsl
nop
pop
addr16
imul
cmpsl
lcall
stos
or
daa
cld
jmp
mov
fnstsw
xchg
in
jb
mov
jno
sahf
movsl
jmp
and
cltd
mov
jmp
jmp
inc
scas
dec
mov
mov
lahf
out
adc
stos
aaa
adc
out
outsb
pop
jo
sub
insb
push
mov
xchg
dec
pop
sbb
fidivrl
lret
or
mov
lret
out
jns
packsswb
xchg
sub
cmpsb
pop
jo
pop
add
scas
mov
call
stos
mov
push
gs
pop
pop
jns
das
stc
jle
inc
add
fdivrs
hlt
adc
sub
dec
aas
fs
cmpb
aas
add
jmp
hlt
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
incl
cmp
imul
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
cmp
cmp
popa
cmp
loopne
in
repnz
pop
ds
ljmp
ds
ds
ds
sarl
ds
sbb
dec
aas
pop
aas
jno
jp
mov
cwtl
aas
stos
aas
mov
out
aas
icebp
or
lock
push
das
xor
xor
xor
call
xor
xor
xor
xor
xor
inc
xor
pushf
lds
jmp
pushl
lahf
xor
xor
fdivl
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
aam
inc
add
inc
xor
into
xor
xor
xor
idiv
cld
xor
xor
xor
xor
xor
xchg
mov
repnz
xor
inc
xor
xor
xor
xor
mov
xor
jnp
xor
mov
ss
ss
pushl
sbb
and
sub
pop
aaa
popa
aaa
fbstp
in
xchg
mov
cmp
cmp
cmp
cmp
bound
cmp
cmp
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
add
ds
ds
aas
jne
cmpl
cmpsl
mov
repnz
add
xor
fistpll
dec
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
decl
pop
xor
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
incl
fnsave
hlt
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
decl
xor
addr16
scas
xor
lock
or
and
sub
xor
jg
ds
cmp
and
pop
cmp
cmp
jae
mov
cmp
cmp
gs
mov
imul
ds
ds
aas
sub
aas
cmp
aam
mov
aas
aam
inc
sub
pushl
or
xor
jo
mov
xor
xor
add
fwait
xor
push
xor
sbb
jg
or
xor
xor
xor
xor
xor
mov
mov
mov
dec
xor
xor
xor
xor
xor
push
xor
xchg
xor
loop
int3
push
ss
movsl
ss
out
and
push
aaa
mov
sahf
aaa
scas
aaa
mov
aaa
into
aaa
cmc
cmp
cmp
cmp
cmp
xchg
cmp
pop
cmp
mov
or
cmp
adc
stos
cmp
js
decl
test
movsl
cmp
cmp
cmp
cmp
std
cmp
iret
mov
loopne
aas
xchg
lahf
xor
jne
decl
lcall
xor
xor
xor
mov
dec
xor
xor
xor
and
js
fnstenv
loop
dec
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
sub
jb
xchg
lcall
sbb
fwait
adc
pop
aaa
fdivs
and
fwait
cmp
icebp
cmp
cmp
cmp
cmp
jns
nop
cmp
cmp
cmp
cmp
aaa
std
sar
push
cmp
cmp
cmp
jne
cmp
cmp
call
mov
lahf
cmp
sarl
out
repz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
xchg
cmp
int3
jmp
jmp
push
or
ds
ds
ds
ds
outsl
jns,pt
ds
ds
ds
stos
ljmp
and
das
aas
aaa
aas
inc
jle
aas
pop
aas
arpl
jo
call
lods
xchg
lcall
aas
fcoms
mov
dec
xor
pop
xor
jae
mov
xchg
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
inc
xor
jno
jl
sahf
xor
xor
xor
xor
xor
push
inc
lcall
mov
aad
adc
lea
dec
test
fidivl
jnp
xchg
aaa
out
push
cmp
lcall
xor
mov
adc
arpl
jno
xorb
ss
aaa
lcall
aaa
int
jp
jp
cmp
cmp
cmp
cmp
cmp
dec
aas
setle
mov
xor
xor
mov
popf
xor
mov
ret
jp
fnstenv
loope
out
jmp
hlt
xor
xor
xor
xor
xor
xor
xor
xor
je
incl
dec
xor
pop
xor
push
xor
xorl
xor
call
xor
xor
xor
xor
ljmpw
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xchg
jle
xor
xor
xor
xor
xor
call
xor
mov
xor
out
xor
mov
adc
pop
jle
ss
dec
ss
ss
xorb
ss
jmp
lods
ss
xor
ss
aaa
getsec
push
aaa
sub
ss
cmp
incl
dec
aaa
outsl
aaa
ja
jle
lea
popf
aaa
mov
aaa
in
add
cmp
jecxz
ljmp
cmp
cmp
cmp
cmp
push
cmp
mov
xchg
cmp
cli
scas
cmp
cmp
cmp
cmp
cmp
inc
lcall
cmp
cmp
ds
cmp
cmp
jg
sti
cmp
cmp
cmp
sbb
and
cmp
inc
mov
pop
cmp
ljmp
ljmp
cmp
cmp
cmp
and
mov
popa
cmp
cmp
cmp
cmp
aas
cmp
xchg
stc
decl
cmp
push
ds
inc
ds
decl
xchg
ds
mov
ds
ljmp
add
aas
and
xor
push
ss
aas
stos
aas
mov
lahf
mov
dec
aas
iret
aas
fnstcw
add
jo
mov
xor
decl
xor
xor
outsb
xor
xor
push
xor
xor
aas
sar
xor
xor
xor
xor
xor
xor
bound
push
xor
loopne
xor
outsb
lock
jmp
pop
xor
push
mov
xchg
xor
jg
sbb
or
adc
sub
xor
inc
xor
pushl
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cs
out
jp
xor
xor
sbb
jg
xor
divl
cmp
ss
ss
bound
push
decl
ss
movsb
ss
cli
aaa
sbb
sub
cmp
inc
scas
push
sbb
imul
lods
aaa
shll
loop
jg
aaa
cmp
or
push
cmp
cmp
cmp
cmp
jbe
cmp
pop
cld
cmp
fcmovb
cmp
cmp
cmp
cmp
cmp
pop
cmp
push
cmc
cmp
jo
mov
xchg
cmp
cmp
cmp
cmp
jmp
mov
cmc
or
adc
sbb
das
cmp
cmp
ds
jg
push
cmp
cmp
mov
cmp
idiv
add
stc
cmp
cmp
cmp
cmp
cmp
mov
jecxz
cmp
add
add
lahf
cmp
jmp
add
sbb
clc
es
mov
ljmp
jle
aas
mov
push
mov
or
push
xor
xchg
xor
pushl
sub
cmp
xor
int
or
sbb
xor
mov
repz
mov
xor
into
xor
xor
xor
add
xor
xor
ljmp
cld
xor
xor
xor
fimull
push
xor
xor
xor
xor
xor
xor
xor
jno
mov
xor
lret
stc
push
or
out
ret
and
popf
or
pushl
pop
jg
xor
ret
lret
ss
fdivl
loop
ss
call
add
lret
push
sbb
and
sub
xor
inc
aaa
mov
pop
push
xor
adc
cmp
fadd
sub
cmp
cmp
mov
add
push
sub
add
cmp
inc
mov
mov
dec
mov
repz
add
addr16
shrb
sahf
negb
push
imul
out
insb
mov
pusha
push
xchg
jns
add
out
enter
das
mov
test
pop
enter
fsubr
lods
call
dec
outsb
or
in
and
cmp
bound
and
add
lock
bound
pushf
dec
into
sbb
daa
mov
lods
and
fucomi
sub
xchg
cld
dec
addb
add
sub
or
mov
push
in
pop
jne
imul
xchg
nop
lods
lock
out
imul
mov
clc
fnsave
in
out
mov
test
clc
push
enter
inc
push
js
mov
xchg
test
jle
cs
push
popa
mov
ds
pop
dec
js
mov
mov
in
scas
into
icebp
mov
insb
mov
pop
pop
test
xchg
inc
adcb
xchg
rolb
loop
sti
mov
fs
mov
scas
mov
mov
es
aam
xchg
mov
out
push
push
scas
jecxz
popf
stos
lds
loopne
stos
mov
cmpsb
gs
mov
scas
add
fdivr
call
repnz
je
fistpl
insb
aaa
dec
mov
fisubs
push
jmp
ss
dec
outsb
jbe
inc
rcr
add
jbe
cs
out
clc
push
mov
nop
rorb
mov
ds
ljmp
push
imul
push
xchg
add
jecxz
pusha
mov
fwait
in
sub
mov
idiv
leave
repz
int
jnp
aad
mov
push
leave
or
mov
div
dec
aad
push
pop
mov
fcmovnu
sahf
fsubr
ss
ds
cmc
mov
pop
stos
cs
es
ficoms
addb
jge
xchg
push
mov
es
push
mov
imulb
outsb
rol
dec
cmpsb
loop
stc
scas
jbe
push
mov
dec
mov
sti
cmpsb
lret
ds
imulb
in
loope
push
cmpsb
outsb
out
test
mov
add
add
sbb
push
mov
daa
add
dec
js
jle
jg
cld
push
jg
and
xor
push
cmp
sub
xor
sub
inc
sti
lcall
pop
sub
std
inc
push
inc
adc
popl
pop
and
and
jnp
jne
or
sub
daa
adc
scas
nop
outsl
adc
add
push
notb
cmp
out
fadds
add
add
mov
pop
jbe
sbb
add
or
decl
sbb
add
imul
dec
add
cmp
pop
sbb
repz
xor
push
add
sub
or
fdivr
call
sub
add
sbb
or
add
adc
repnz
cld
cld
das
adc
jo
sbb
or
add
adc
or
sbb
add
add
imul
pop
in
ljmp
fwait
add
add
sub
adc
rcr
dec
add
add
mov
and
icebp
femms
sbb
or
add
push
cmp
fwait
pop
pusha
adc
adc
add
shlb
dec
pop
pop
and
add
cs
inc
mov
cmp
push
es
sahf
ret
inc
sbb
lds
aas
xchg
pop
push
cmp
into
aas
lds
fdivrs
dec
dec
and
dec
outsb
daa
mov
jl
or
sbb
adc
cld
decl
add
cmp
fs
and
inc
repnz
enter
bound
push
pop
adc
adc
test
cmp
push
sub
and
or
dec
imul
xor
and
add
mov
add
scas
sub
stos
insb
sub
push
cmp
add
add
dec
dec
sahf
or
loopne
sysret
in
in
inc
rolb
idiv
add
jg
add
pavgb
pop
enter
gs
or
mov
clc
add
aas
pushl
jb
das
lock
loope
fdivl
rol
push
imul
xchg
lods
scas
mov
and
cmp
mov
inc
and
mov
or
jbe
pusha
add
adc
jns
pusha
in
lods
push
mov
mov
or
add
inc
adc
loopne
dec
or
mov
inc
mov
push
push
or
push
push
je
loope
add
add
mov
sti
or
nop
cwtl
nop
cmp
add
add
fdiv
sarb
mov
push
shl
add
andb
jnp
mov
ret
jge
test
push
dec
add
in
add
or
mov
divb
cmpb
notl
jb
inc
xor
movsb
cwtl
cmp
xchg
loop
add
adc
inc
mov
cmp
and
jne
sub
addb
adc
ljmp
mov
pop
push
aas
mov
loope
stos
cmpsl
sub
and
sbb
mov
mov
add
sbb
xchg
mov
scas
mulb
and
les
or
add
sub
inc
scas
mulb
add
push
aas
add
inc
xor
and
je
outsb
stos
mov
inc
ja
loop
in
sub
mov
adc
inc
mov
mov
outsb
push
jnp
mov
insb
mov
mov
dec
sub
mov
addr16
push
jg
mov
lret
mov
adc
shrl
xchg
lock
sbb
fucom
xor
pop
inc
or
lahf
jnp
ret
mov
mov
inc
sbb
sub
sub
or
and
jecxz
sbb
xchg
mov
mov
scas
into
fists
or
cmp
pop
fcompl
nop
mov
es
lds
push
or
addr16
or
fs
mov
sbb
popa
mov
push
mov
rorb
shl
mov
loopne
pushf
pop
ss
rclb
daa
xchg
sub
mov
lcall
inc
lods
push
cmc
sbb
add
rorl
or
push
mov
add
jmp
inc
xchg
ljmp
ja
pop
jmp
or
pop
xchg
jnp
xor
adc
add
adc
int
and
pop
mov
cmp
mov
xor
sbb
adc
xor
xorb
add
es
out
adc
mov
test
xor
push
lea
loope
mov
cmp
arpl
or
mov
push
ja
lds
pop
je
mov
call
cs
mov
dec
xor
push
xchg
sbb
mov
fadds
add
inc
mov
xchg
or
push
fstps
push
add
adc
outsb
xchg
sbb
insb
shl
daa
les
sbb
xchg
into
mov
sub
and
and
add
cmp
dec
hlt
mov
ret
xchg
adc
pop
push
outsl
and
mov
and
and
xor
ficompl
pop
add
sbb
adc
and
xor
cmp
lds
inc
xchg
adc
xor
les
nop
dec
ljmp
cmp
push
cld
pop
or
xlat
mov
test
fsubs
xchg
das
mov
jmp
mov
leave
sub
movsl
rorl
ljmp
aam
push
pop
daa
inc
mov
push
pusha
test
and
bsr
mov
mov
lods
mov
and
mov
mov
ja
sbb
sbb
adc
or
ljmp
add
sbb
addr16
xchg
out
add
andb
adcl
inc
and
iret
aas
or
and
mov
and
mov
mov
or
adc
and
dec
insb
mov
or
push
cmp
add
sbb
mov
and
inc
or
nop
in
shr
mov
mov
or
mov
fnstsw
push
mov
or
jle
call
mov
add
testb
in
or
or
and
pop
sbb
mov
shlb
and
mov
fsubs
push
loopne
sub
inc
ja
jg
add
sub
mov
xchg
fst
sub
popl
add
ja
jo
push
test
mov
sbb
ja
lret
inc
lods
sbb
lods
lret
sbb
inc
std
mov
inc
jp
fs
nop
or
jo
jo
adc
mov
nop
loope
mov
mov
lock
ja
mov
sbb
mov
mov
push
or
or
mov
inc
xor
pop
add
pinsrw
push
xchg
ljmp
add
push
cmpb
fdivr
push
enter
mov
out
add
cs
or
add
neg
aam
inc
aaa
lcall
pusha
jo
clc
sbb
adc
inc
mov
jb
pop
mov
fadd
fadd
sarl
pop
cmp
fnstsw
adc
inc
xor
mov
dec
cmc
out
add
popa
xor
out
ja
pop
jne
call
ficomps
add
shrl
inc
sbbb
mov
cwtl
dec
xchg
pop
mov
adcl
and
xorb
fadds
test
pop
pop
test
addb
mov
pop
or
pop
or
xor
mov
ret
mov
mov
jg
in
adc
add
and
push
and
ljmp
mov
adc
add
inc
inc
dec
aas
sti
xchg
mov
loop
mov
push
sbb
es
and
sti
xor
mov
mov
rorl
mov
pop
mov
sub
push
lahf
sbb
pop
adc
int3
adc
adc
decl
jne
mov
mov
aas
subl
dec
pop
movsb
cmp
lods
mov
mov
adc
sbbb
inc
mov
dec
test
mov
mov
lcall
inc
pop
jg
dec
push
xchg
jle
andb
cs
mov
fisttpll
or
rol
and
stos
sarb
dec
cmp
lret
pushf
mov
xor
push
mov
push
push
and
push
ljmp
add
lds
adc
push
fst
pop
xchg
add
push
incl
inc
add
and
adc
addl
insl
sbb
and
push
inc
jmp
sahf
in
adc
addb
add
push
jnp
fsub
rolb
sbb
push
call
sub
mov
xor
and
pop
pop
mov
ss
mov
in
fdivrs
push
fsubr
mov
or
push
or
adc
xchg
push
jnp
addb
adc
push
call
push
insb
sub
inc
mov
mov
mov
fmuls
add
loopne
loopne
adc
add
sub
adc
adc
add
adc
addl
adc
cmp
sbb
add
add
addr16
adc
xchg
iret
push
and
dec
add
loope
pop
adc
mov
add
subl
and
shrb
andb
inc
or
adc
in
mov
in
fsub
test
push
adc
jbe
test
andb
inc
inc
adc
aas
and
inc
adc
sbb
and
shrb
mov
inc
xlat
mov
xchg
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
push
lahf
and
mov
in
inc
and
test
adc
mov
xchg
dec
and
adc
dec
dec
and
mov
xchg
and
fs
and
mov
cmpsl
addl
jg
adc
dec
adc
and
mov
or
mov
sub
and
mov
xchg
dec
dec
and
mov
dec
and
adc
sub
xor
lcall
pop
xchg
loopne
adc
test
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
adc
xchg
and
xchg
and
pop
inc
push
add
cmpsl
add
and
add
aas
add
mov
test
mov
add
inc
push
mov
mov
adc
inc
mov
or
add
jns
add
data16
and
dec
add
or
fiaddl
add
dec
cltd
sub
call
sub
ss
jno
lods
ljmp
fstp
adc
dec
xor
mov
mov
pop
and
pop
or
sbb
ror
dec
mov
push
and
push
or
mov
sub
insb
arpl
out
add
inc
jnp
jns
das
adc
pop
xor
mov
inc
mov
jne
roll
test
insl
bound
dec
lods
mov
jno
add
xchg
dec
lcall
ja
mov
dec
cmp
pusha
inc
push
inc
sbb
and
je
push
push
clc
sub
sbb
and
push
xor
stc
insl
mov
sub
and
xor
dec
inc
sub
sub
outsb
dec
inc
dec
add
sub
cmpsl
sbb
sub
dec
sub
push
push
push
jle
push
inc
and
fnstcw
dec
adc
pop
jbe
pop
je
dec
pusha
data16
ficomps
pusha
pop
insb
pop
inc
lcall
sbb
inc
pop
mov
ja
and
hlt
pusha
sbb
mov
inc
xor
cmpsb
cmp
xchg
cli
push
jo
add
and
or
or
push
jl
hlt
lcall
adc
push
jo
sbb
add
loope
inc
mov
xor
push
mov
jnp
push
jo
sub
adc
dec
xor
mov
mov
push
pop
subw
cmp
sbb
imul
xor
or
mov
push
ja
pushf
inc
dec
pop
stos
xchg
fcomp
sub
sbb
rcrl
cmp
xor
cmp
fiaddl
dec
jo
pop
popf
mov
pop
xor
mov
pop
sbb
mov
scas
js
mov
or
adc
pop
stos
or
dec
cmp
sbb
adc
adc
out
pop
out
rolb
cmp
or
mov
in
or
xchg
popa
lods
cli
rol
fstp
shrl
cld
aaa
mov
cmp
sub
sbb
stos
pusha
pusha
xor
xor
loope
test
cwtl
pop
out
sub
sbb
shl
push
xchg
mov
pop
pop
mov
push
mov
ret
sub
pop
mov
push
out
adc
fstp
sub
xor
js
cltd
xchg
fstpl
push
xor
pop
cmpsl
push
mov
das
movsl
or
mov
dec
inc
add
mov
and
xor
or
push
sub
and
fisttpll
jl
xchg
scas
xor
mov
mov
cmp
lods
mov
xchg
loopne
mov
jnp
push
sti
add
test
test
data16
inc
inc
cmp
mov
mov
dec
test
push
mov
pop
inc
shll
mov
nop
jmp
sub
mov
xor
divl
clc
sub
push
xchg
and
lods
mov
xor
push
push
jl
inc
mov
sbb
in
adc
mov
lcall
call
xorb
add
push
pop
cmp
js
js
push
stc
push
jo
jo
sbb
out
out
mov
jo
cmp
adc
cmp
fdivrl
pop
push
xchg
fnstsw
js
xchg
mov
dec
adc
xor
popa
mov
sub
out
into
jge
sbb
push
fs
sti
jae
data16
inc
pop
or
dec
clc
mov
sti
adc
mov
jae
pop
mov
mov
pop
push
int3
or
or
out
or
sbbb
pop
and
or
out
popa
jo
add
cmpsb
std
fidivrs
add
and
pop
or
pop
cmp
adc
in
loopne
out
or
add
cmc
pusha
shll
jge
or
fadd
shll
pop
das
fsubr
ret
adc
xor
das
sub
aad
cmp
inc
xor
mov
in
add
push
fdivrs
cmp
mov
or
test
xor
test
dec
mov
cmp
or
cs
and
xchg
jl
or
add
mov
cs
hlt
das
cmpsb
jge
jl
scas
or
mov
das
add
scas
mov
rclb
sbb
outsb
or
cmp
jbe
mov
sub
xor
xor
or
push
or
out
fstl
add
and
pushf
fwait
adc
sub
xor
pop
mov
jecxz
mov
nop
add
xor
sbb
sub
adc
and
jo
mov
adc
cmpsl
outsb
jmp
out
xor
and
fildl
dec
xor
push
jo
sub
ss
pop
sub
arpl
mov
xchg
adc
daa
sbb
inc
ret
jnp
outsb
lret
and
push
rcr
lret
sub
cmc
mov
ret
and
syscall
cmpsb
shrl
pop
pop
or
jo
cmp
das
push
push
fistpl
jnp
xchg
pop
adc
jmp
and
add
fucomp
sbb
aam
xor
fldt
mov
inc
push
push
cmpb
ja
jl
pop
test
nop
mov
add
mov
neg
mov
dec
js
sub
ja
ja
jo
mov
mov
mov
xchg
nop
cs
nop
lcall
mov
mov
and
push
orb
jge
sbb
mov
mov
fidivl
pop
jl
mov
mov
push
mov
insl
negl
jge
lods
cmp
das
cwtl
sbb
push
sub
mov
inc
dec
fs
xchg
fnstsw
jo
mov
out
fnstsw
js
adc
fdecstp
push
mov
or
pop
inc
pop
add
mov
sbb
mov
jo
rorl
imul
into
dec
insb
push
push
push
add
jbe
jo
adc
mov
mov
or
mov
lods
xor
js
mov
repz
outsl
roll
xchg
or
jae
add
xor
mov
addb
dec
lods
sbb
push
xor
sub
push
cmp
nop
mov
loope
ja
adc
mov
xor
xchg
or
adc
pop
nop
shr
push
mov
pop
es
push
dec
add
dec
adc
sbb
or
sub
adc
daa
xor
lock
nop
orb
jle
push
sub
xor
inc
inc
das
jae
push
add
mov
fidivs
or
push
nop
push
push
cltd
xor
cli
adc
jle
repz
gs
jae
dec
push
out
test
add
or
stos
jmp
sbb
js
test
adc
jg
movsb
mov
js
sbb
mov
js
pop
xchg
aad
pop
mov
stos
mov
jge
lock
scas
xor
cmp
sub
push
shrl
pusha
lods
adc
subl
adc
pop
out
sbb
out
sahf
jae
xorl
add
pop
jle
in
sub
sbb
cmp
push
cmpsl
or
push
push
int
call
jg
addb
dec
fsin
jnp
add
or
sub
fsubs
call
xlat
sub
or
test
mov
sbb
push
and
insb
fidivrl
test
push
pusha
jae
pop
pop
or
and
and
pop
xchg
push
jle
pop
cwtl
pusha
adc
mov
loope
adc
dec
fisubl
inc
inc
jmp
lods
push
sbb
or
test
loopne
and
stc
repz
inc
sbb
sub
mov
sub
xor
nop
xor
inc
pop
and
dec
add
cmp
sub
movsl
pop
lods
insb
sub
jae
push
bound
rolb
decl
stos
sub
sub
dec
mov
push
mov
nop
rclb
adc
sub
sub
call
add
push
push
push
add
jg
dec
data16
pop
xchg
push
pushf
sbbb
push
std
pushf
js
mov
jmp
cmp
mov
jae
push
adc
push
je
sub
inc
je
bound
orb
mov
cmp
xor
sub
fcoml
sbb
push
rclb
cmp
add
test
jae
ret
enter
inc
sub
incl
dec
enter
stos
adc
pop
cmp
push
popf
mov
inc
xor
movsb
push
movsl
mov
sti
in
cmpsb
push
push
jl
jo
sbb
inc
and
ljmp
pushf
test
rclb
sub
rorb
mov
test
nop
inc
cmp
int
push
lds
pop
cmp
dec
pop
adc
lods
pop
add
fwait
xor
add
sbb
sub
or
adc
and
inc
mov
js
nop
sbb
push
imul
nop
call
push
and
jae
or
mov
push
sub
xor
and
cmp
les
sub
fmull
ret
adc
cmp
adc
cmp
gs
sbb
cmp
test
and
pop
jo
xchg
or
jo
push
adc
pusha
xchg
pusha
inc
fs
cwtl
push
scas
xor
and
and
and
jbe
jb
cmpsb
sar
sub
lods
stos
jae
and
jne
rorb
jno
add
or
aad
mov
xor
pop
dec
js
test
sub
lret
sbb
repnz
repz
pop
jae
inc
sbb
push
push
cwtl
push
aas
and
pusha
mov
js
mov
push
pop
jge
xchg
sbb
lock
xorb
lock
jg
dec
sbb
sub
les
sub
sub
jle
aam
insl
cmp
or
jmp
xgetbv
jae
adc
adc
or
xchg
or
sbb
mov
sbb
cmp
push
adc
sbb
scas
pusha
scas
push
mov
adc
sbb
inc
dec
push
test
les
lret
sbb
and
in
adcb
cltd
jo
pusha
jb
loopne
push
loope
jae
push
and
add
or
enter
fwait
test
pop
xchg
mov
push
sbb
negl
mov
or
push
pop
and
sbb
test
div
push
fucomp
adc
inc
cs
xor
sbb
sahf
sbb
aaa
and
xlat
adc
or
mov
xor
jl
xchg
cli
adc
das
jo
orb
cltd
popa
hlt
pushf
pusha
addb
fcomps
push
xor
stos
dec
adc
pop
data16
es
jg,pn
movsl
add
fwait
ss
inc
je
mov
push
lods
test
push
mov
cmp
js
mov
insb
xchg
push
pushf
jo
and
cmp
jle
inc
sbb
push
jo
test
lret
dec
es
xor
jnp
jl
movsb
andb
or
inc
mov
pusha
pop
movsb
push
or
aam
add
clc
mov
pop
inc
push
ljmp
insb
push
xorb
aad
adc
popf
sub
das
xor
mov
and
stos
mov
repnz
push
jns
roll
add
jge
pop
sbb
decl
stos
inc
jb
call
jae
xadd
lret
decb
adcb
xchg
and
cmp
test
pop
lcall
cmc
fisubl
or
nop
ljmp
jl
sbb
inc
and
cmpsb
add
inc
scas
cs
mov
aad
cwtl
dec
jne
add
push
inc
push
stos
jae
jg
mov
ret
pusha
sbb
sbb
pop
adc
or
std
das
andb
jo
jl
dec
addb
inc
jo
push
cmp
pop
jo
cltd
aam
jle
adc
scas
xchg
jns
inc
jg
test
inc
insb
dec
xor
push
test
jo
cli
subb
pushl
jb
sub
jae
mov
add
add
jg
sbb
xor
ficompl
mov
mov
dec
mov
adc
aam
add
push
add
gs
mov
movsb
jo
nop
jle
loopne
xor
rolb
out
mov
pop
sbb
add
sub
enter
lods
lods
dec
jne
jae
sbb
add
add
fmuls
mov
mov
inc
adc
adc
mov
fdivrs
push
pop
gs
shlb
adc
or
pop
in
mov
adcl
adc
sub
cwtl
mov
mov
addb
sbb
or
dec
cmc
pop
pop
test
fstpt
sbb
jl
fwait
and
mov
mov
mov
sub
and
aam
sbb
or
ffreep
gs
sbb
test
sbb
adc
sub
lock
bound
cmp
add
mov
adc
mov
sub
pop
out
pop
cmc
or
out
fnsave
jnp
jo
inc
jmp
sub
sarb
subl
xor
sarl
or
add
inc
int3
jo
fwait
sub
sub
mov
adc
mov
dec
ret
loop
pop
pop
pop
dec
and
sub
insb
jo
add
push
popa
andl
pusha
adc
sub
jl
inc
adc
jbe
es
mov
pop
jl
ret
sub
adc
adcl
cs
jae
sub
jo
cmp
xchg
xor
ljmp
shlb
mov
or
add
push
add
sub
add
fistpl
arpl
fwait
notb
adc
fwait
inc
imul
stos
test
lds
sub
push
pop
sarl
or
or
fadds
adc
adc
push
popa
dec
test
inc
add
and
pop
sub
mov
sub
inc
inc
add
pop
pop
add
dec
dec
sbbb
mov
jb
dec
cmp
lds
add
adc
leave
dec
add
stos
adc
jne
insb
and
push
jmp
mov
test
loopne
cmpsb
dec
jg
mov
and
nop
pop
push
add
mov
adc
or
sub
push
mov
lock
ret
es
inc
lods
pop
inc
js
adc
orb
fstpt
sbb
jp
nop
es
loope
and
inc
stos
dec
fistl
pop
mov
mulb
mov
and
fdivp
jbe,pn
lret
jno
clc
jo
cmp
dec
and
jge
mov
xor
or
mov
into
loopne
scas
das
jo
sbb
inc
jo
sub
clc
into
pop
and
imul
mov
dec
push
fldl
dec
jbe
fs
fdivl
and
dec
push
push
dec
mov
xchg
mov
dec
xor
sbb
call
das
xor
icebp
popa
dec
xor
mov
adc
push
fnsave
xchg
or
mov
shll
sbb
dec
stos
inc
inc
pop
int3
arpl
or
sub
pusha
nop
push
mov
sub
jmp
adc
push
or
jle
inc
push
add
sbb
cmpl
cltd
fs
pop
cmp
add
pop
mov
mov
int3
sbb
dec
repnz
lods
mov
xchg
shl
pusha
adc
inc
movsb
pop
lods
adc
js
jo
pusha
xchg
jns
adc
pop
test
roll
pop
push
cltd
jb
movsb
lds
add
mov
xor
mov
pushl
outsb
mov
in
pop
pusha
push
or
cwtl
sub
sbb
mov
xor
push
cwtl
mov
dec
xorb
test
pop
gs
pop
mov
mov
push
mov
in
out
out
adc
cmp
sub
or
mov
mov
movsl
mov
mov
push
pusha
nop
cmp
inc
fs
sub
xor
scas
push
push
push
nop
jo
js
adc
loopne
fstl
cwtl
sbbb
pop
pop
loop
pushf
and
test
nop
add
inc
test
and
out
imul
sbb
fbstp
out
and
pop
imul
pushf
imul
mov
fcompl
mov
mov
mov
mov
nop
rol
fucomp
pop
add
push
into
fcompl
xor
xor
cld
or
out
fmul
add
xor
jo
nop
fcom
mov
cmp
fcmovnb
sbb
mov
xor
xor
call
leave
test
mov
sub
cmp
pushf
pusha
push
xchg
stc
xchg
fistpl
addb
dec
bound
test
push
and
pop
test
xor
pop
out
test
sub
cmp
cs
scas
sbb
mov
pop
xor
aad
gs
jno
in
and
fs
adc
mov
cmp
sar
mov
push
mov
js
xchg
stos
pop
and
mov
fs
add
cmp
incl
jae
add
jne
nop
sbb
lods
push
dec
int
sub
das
add
jb
ljmp
cld
divb
push
je
sub
jo
fdivrl
sub
insb
sbb
cmp
jbe
es
push
add
out
andl
fs
sub
insl
fldln2
jl
and
mov
inc
sbbb
mov
fnsave
add
testb
das
add
leave
and
mov
sub
jecxz
mov
lock
pop
js
lret
js
cmpsl
mov
jo
lret
mov
mov
fldcw
fildll
pusha
sbbb
cmp
das
pusha
add
out
in
mov
add
sub
adc
stos
push
jl
push
jo
pusha
xor
sub
mov
jecxz
pop
js
pop
jl
pushf
cmp
mov
dec
cmp
push
in
jg
push
hlt
cmp
test
sub
mov
jg
xor
or
and
in
fcoml
or
add
mov
push
add
push
mov
push
pop
dec
push
fwait
stos
outsb
nop
popf
add
jg
mov
pop
inc
and
int3
mov
pop
sub
mov
pop
xor
sub
sub
sub
adc
and
and
add
inc
fmul
pop
inc
jg
and
pop
std
arpl
dec
sbb
dec
js
sub
nop
mov
xchg
cltd
ja
mov
sub
repz
or
xor
test
fcomip
mov
inc
mov
mov
lods
orb
fisubs
cmp
cmpsl
loopne
out
jmp
cwtl
mov
test
fisubrs
push
mov
and
mov
mov
mov
mov
jnp
ja
add
inc
xchg
sti
shll
les
adc
nop
or
sub
xor
push
pop
addb
mov
test
adc
in
je
jl
add
inc
testb
je
insb
add
jmp
and
mov
jecxz
mulb
lcall
shrl
movsb
pop
scas
and
addr16
lea
xchg
xchg
mov
xchg
or
mov
into
hlt
adc
or
and
testl
or
push
sbb
ja
mov
out
sub
sub
mov
pop
push
adc
mov
in
das
add
out
sub
subl
mov
xchg
add
enter
fstpl
pop
aaa
scas
push
insb
push
sbb
stos
dec
jg
xchg
mov
pusha
ds
sub
add
movsl
pop
test
pushf
adc
lret
push
push
mov
inc
jge
lods
ss
cmp
ljmp
aaa
mov
mov
add
or
mov
rorb
movsb
sbb
out
xor
mov
push
sub
mov
ficomps
lret
test
imul
dec
mov
popf
pop
xor
ja
fimull
sub
mov
gs
mov
cwtl
jge
pop
ds
insl
xchg
lods
or
jae
cwtl
leave
insl
shr
mov
andb
pushf
orl
sahf
push
mov
bndstx
mov
test
scas
test
sahf
sbb
fidivl
jl
jge
mov
mov
cmp
sub
ja
xor
xor
xor
inc
push
add
mov
out
xchg
or
or
fldenv
jp
push
xchg
ljmp
test
mov
push
pop
dec
sbb
imul
shll
mov
stos
out
sbb
and
jnp
jge
pop
pop
inc
pop
pop
mov
out
out
push
xor
sbb
cmpsb
or
pop
js
xor
pop
pop
xchg
sub
add
pop
cwtl
cwtl
js
movsb
add
xor
inc
loop
add
leave
cmp
jbe
dec
lods
lahf
sbb
mov
fidivs
loopne
sbb
pop
inc
jb
jne
and
mov
jp
cmp
loopne
cltd
push
andl
or
mov
push
cmp
nop
dec
mov
enter
enter
lods
lcall
enter
mov
pushf
and
cmp
push
cs
jbe
dec
lcall
mov
inc
push
jo
adc
lods
or
movsb
dec
movsb
pop
test
and
fwait
popf
cmp
pushf
dec
cwtl
adc
ficomps
mov
add
jnp
insl
add
mov
mov
mov
mov
mov
push
sbb
jge
and
enter
nop
in
pop
mov
aaa
mov
stos
xchg
or
add
int3
rcll
sbb
mov
scas
mov
jae
push
jg
pop
andl
cmp
and
pop
push
call
inc
loopne
add
fidivrs
jo
flds
xor
xchg
negl
cmp
inc
add
sbb
and
sub
push
mov
push
cmp
enter
ljmp
inc
das
fs
fucomi
xor
pop
jo
negl
test
sbb
push
jge
xor
xchg
sub
test
jno
inc
dec
mov
mov
popf
in
subb
sbb
add
add
jg
lods
push
adc
pop
pop
stos
xchg
sbb
in
dec
cmp
fs
mov
mov
mov
jns
or
dec
cmp
adc
jle
popf
cmpsl
cwtl
cwtl
and
cmp
jle
enter
dec
mov
stos
lock
test
jbe
rolb
jbe
jb
pushfw
movsb
xlat
or
pop
stos
dec
xchg
jns
or
mov
and
imul
pop
jg
insl
dec
mov
movsb
add
cmc
mov
mov
jle
test
les
fistpl
add
loope
shll
lret
ljmp
xchg
ja
scas
mov
cmp
adc
mov
loope
aad
test
mov
sbb
mov
inc
inc
pop
fdivs
sbbb
pop
xorb
adc
lods
fldl
cmp
dec
orb
nop
add
sbb
insl
push
out
cmpsl
sbb
es
test
dec
add
add
inc
or
xor
aad
jb
push
adc
stos
dec
dec
dec
nop
and
xchg
dec
jne
push
das
pop
das
stos
push
and
mov
adc
add
arpl
or
or
cmp
pop
je
dec
add
or
push
and
or
test
jne
stc
call
adc
pusha
or
aad
jle
jae
adc
mov
outsb
jg
cmp
shlb
jg
push
jl
dec
jne
xor
js
nop
dec
cwtl
xor
ljmp
push
test
cwtl
xchg
enter
daa
test
push
inc
mov
mov
xchg
mov
mov
stos
jg
in
test
adc
lods
stos
jg
lcall
dec
add
aad
pop
test
jnp
pop
xlat
xor
cmc
pop
mov
cwtl
pop
cmpb
cmp
xor
cmpsl
xor
cltd
cwtl
sub
sbb
sti
xchg
sub
jg
outsb
adc
and
mov
jg
pop
stos
aad
cld
xchg
jg
lods
je
and
mov
lret
js
or
pop
pop
mov
test
sub
js
orl
call
daa
rorb
add
jo
xor
inc
pop
mov
fsub
add
jecxz
jnp
addr16
ret
and
rorb
jns
test
or
jg
pop
test
xor
pop
jo
scas
sbb
imul
incl
push
inc
xor
fimuls
inc
and
xor
lock
push
sub
adc
push
mov
pusha
insb
adc
dec
pusha
sbb
mov
or
in
push
mov
jae
jbe
inc
push
nop
jmp
ss
push
call
ljmp
adc
sbb
cli
jnp
sbb
mov
out
insb
add
cmp
scas
inc
test
mov
cwtl
or
xor
mov
ret
sarl
or
and
sub
das
or
pop
stos
mov
mov
xlat
jbe
insl
lods
or
push
add
mov
inc
mov
xlat
shll
daa
movsb
jp
sub
enter
inc
stos
lods
jp
pop
sub
inc
gs
jg
and
in
aad
imul
adc
jle
sbb
jne
ror
fs
push
mov
popa
adc
add
and
sbb
and
add
pop
imul
ds
push
loopne
es
sbb
test
popa
mov
dec
jb
or
push
jmp
sub
add
and
shrl
pop
sbb
push
das
push
inc
daa
movsl
sbb
fists
dec
addr16
repz
mov
and
lahf
pushf
mov
pop
xorl
fucomp
sub
add
test
pop
inc
rcll
mov
outsl
ret
mov
mov
lret
jg
stos
xor
mov
jns
addr16
sub
inc
aad
insb
jns
lret
lock
mov
into
jmp
lods
insl
add
mov
test
mov
inc
lcall
mov
xor
shlb
sub
push
and
lds
push
mov
test
fildl
or
push
mov
or
fcoms
sub
rcrb
popa
cmp
arpl
loope
xchg
test
inc
push
js
int3
add
jb
sub
pop
ret
scas
jle
and
pushf
loopne
sbb
cmp
jne
xchg
test
pop
push
or
pop
jb
mov
lret
inc
lea
inc
daa
jo
lods
test
sub
pop
or
faddl
xor
and
add
lods
adc
popf
adc
dec
mov
pop
xlat
cwtl
pusha
test
mov
icebp
jmp
mov
inc
pop
xor
or
cmp
out
pusha
inc
sbb
enter
adc
jno
sub
roll
adc
insl
jp
push
dec
mov
daa
mov
jg
push
jg
aad
pop
mov
jg
lret
add
sbb
enter
sbb
mov
push
dec
mov
inc
adc
jb
pop
test
rorl
test
mov
push
xor
rcrb
xlat
movsb
xchg
in
rolb
mov
fwait
ret
cmp
xor
stos
jp
popa
adc
mov
lods
dec
test
rcl
nop
pop
sub
xor
mov
mov
movsl
mov
xor
es
jns
xor
add
mov
jae
aad
sahf
xor
mov
add
stos
dec
fstpt
popf
mov
inc
or
mov
xchg
jo
jle
inc
inc
js
mull
mov
xchg
in
add
and
mov
pop
popa
lods
aad
popa
test
scas
push
pop
or
bound
adc
jle
dec
ljmp
pop
loope
sbb
jmp
mov
lods
add
loopne
cmp
jecxz
fisubs
mov
dec
mov
loope
jno
push
pop
inc
sub
jle
andb
popa
icebp
subb
outsb
cmc
call
mov
shr
inc
nop
push
incb
test
stc
decl
cmp
inc
sub
loop
arpl
jae
setne
dec
or
int3
or
jae
xor
jle
mov
test
and
cmpsb
ljmp
mov
stos
inc
sbb
jns
adc
jnp
ss
xor
bound
lods
dec
cmp
push
pusha
xor
jno
or
ficompl
insl
shlb
push
xchg
pushf
sti
pop
arpl
nop
es
andl
sub
push
cwtl
mov
lods
jmp
mov
dec
mov
cmp
movsl
cmpsl
mov
cwtl
mov
gs
repz
mov
lods
adc
jns
movsb
int
xchg
xchg
mov
lock
sbb
xchg
sbb
add
adc
inc
int
sbb
pop
sbb
loopne
xor
jl
push
pusha
jmp
lea
decl
cmp
push
test
test
inc
rclb
mov
sub
or
imul
jle
push
fwait
adc
mov
movsl
call
popf
inc
adc
jmp
sub
jg
jno
sub
lret
or
pusha
inc
pop
pusha
xchg
test
jb
pop
je
outsb
adc
or
xchg
out
and
dec
mov
or
and
jns
add
cmp
and
pushf
mov
mov
mov
dec
mov
sbb
call
andl
daa
jne
and
insl
mov
push
bound
pop
adc
ja
mov
sbb
mov
sbb
mov
xchg
mov
arpl
int
adc
inc
xor
test
or
push
test
fwait
mov
vpand
mov
fiaddl
push
ret
mov
insl
notl
sub
cmc
mov
out
dec
fwait
icebp
sbb
pop
les
pusha
jmp
mov
xchg
xchg
jmp
bound
adc
and
andl
pop
lods
xor
repz
js
sbb
jno
mov
mov
ret
or
and
mov
sbbb
inc
or
or
movsb
fisubl
inc
mov
or
mov
dec
pop
mov
jle
enter
insb
pusha
js
inc
push
pusha
jg
xor
or
xor
pop
popf
mov
addl
jg,pn
or
dec
subb
inc
cmpsb
cltd
jg
lds
ljmp
int
test
pop
movsl
mov
sbb
jl
stos
pop
or
add
sub
push
test
fldt
insb
push
nop
xor
aad
pop
jae
insl
fwait
mov
sbb
mov
adc
mov
mov
jae
test
mov
dec
imul
stos
fwait
mov
xchg
and
push
imul
xchg
mov
stos
push
test
jl
repnz
insb
mov
pop
xor
dec
lds
mov
dec
repnz
pop
or
push
je
rolb
sbb
mov
ret
add
pushf
pop
enter
sbb
je
and
mov
pop
fwait
jge
or
arpl
aad
fstpl
test
inc
mov
xor
in
or
mov
or
rorb
iret
push
push
inc
in
std
push
dec
adc
cld
mov
dec
rorb
pop
mov
rclb
push
outsb
movsl
adcb
data16
add
test
or
outsb
add
mov
dec
cmp
jle
mov
adc
jns
push
xchg
lret
push
jle
inc
movsl
in
aam
popa
out
or
jg
sbb
mov
ja
pop
or
mov
adc
and
pop
icebp
shlb
mov
xlat
mov
mov
lods
ljmp
sub
push
sbbb
lods
test
stos
icebp
jne
pop
or
mov
pop
mov
and
lret
mov
pop
xchg
stos
dec
pusha
cmc
adc
repz
stos
push
jg
jns
inc
cmp
jg
mov
movsl
jg
inc
dec
shlb
dec
stos
jecxz
adc
add
cmp
lcall
mov
pop
in
xchg
loop
ss
cli
mov
dec
dec
rcrb
jne
cmp
xor
outsl
sbb
push
cmp
xchg
xchg
mov
pop
mov
adc
lea
lea
rolb
movsl
jo
lods
or
or
add
add
push
adc
lcall
int
and
lcall
adc
cmp
lret
aad
inc
or
cmp
mov
aad
sub
and
xchg
mov
pushf
pop
sub
scas
jo
cwtl
pop
add
sub
pop
xor
adc
pop
scas
scas
sub
sub
lods
dec
insl
mov
fistpl
push
lods
or
fnsave
mov
lods
sarl
jecxz
lea
dec
int
xor
and
lret
sub
stos
xor
nop
mov
je
dec
or
xlat
stos
push
cmc
push
test
jg
or
add
dec
stos
dec
pop
inc
pop
in
jle
insl
jae
mov
sbb
pop
cmpsl
pop
js
and
into
adc
pop
xchg
mov
and
dec
rclb
inc
or
inc
lcall
inc
popa
jo
pop
rorl
or
arpl
sbb
aad
add
jg
pop
sub
push
test
pushl
popa
mov
sub
dec
stos
dec
lds
stos
push
imul
pop
lret
or
gs
and
dec
bound
inc
xlat
and
sub
pushf
js
dec
xchg
sbb
test
push
mov
dec
cmp
jae
or
inc
fmuls
daa
mov
inc
push
jg
in
cmp
dec
dec
lock
jno
aad
and
xor
pop
sub
mov
into
pop
push
dec
gs
add
pop
notb
sub
pop
push
sti
push
adc
scas
shrl
add
xchg
test
cmpsl
lds
imul
mov
inc
pop
cwtl
inc
sub
ret
pop
testl
insl
and
pop
shll
movsl
xor
popa
cmpb
lods
nop
and
popa
daa
imul
xor
push
sub
jnp
insb
inc
add
xor
dec
js
adc
cwtl
pop
test
pusha
dec
out
rolb
pop
sbb
ss
ds
pushf
add
xchg
ret
dec
pushf
subl
pop
jp
or
or
mov
adc
jb
cmp
loope
mov
add
or
cmp
sarb
loope
adc
lods
fildll
or
cmp
push
mov
aam
lock
imul
sub
mov
mov
dec
fsubs
mov
fsts
js
jae
sbb
pop
sbb
mov
ss
push
adc
or
pop
jns
jmp
and
insb
hlt
orb
mov
cwtl
sbb
ret
pop
jne
mov
aad
int
cmp
jle
lea
lea
cmp
push
mov
or
fstpt
mov
mov
insb
je
push
jno
sbb
mov
jge
lea
insb
mov
pop
jl
sbb
sub
nop
insl
or
pop
xor
jae
xor
jae
cmc
sub
push
xchg
xchg
and
cmpl
jae
mov
nop
in
js
outsl
and
cmp
pop
jl
out
cmp
sub
ret
insl
loope
das
or
lock
in
test
and
push
and
aam
cmp
mov
xchg
subb
loopne
xchg
shlb
jg
lods
jle
xor
sbb
movsb
mov
jle
jb
lahf
mov
or
mov
es
xor
push
pop
jns
xor
das
lods
jo
jo
out
out
pop
adc
repnz
cwtl
mov
inc
lods
inc
pop
push
push
sbb
loop
test
cmp
add
inc
xor
mov
inc
nop
lret
jae
sbb
push
mov
add
xchg
add
or
rcrb
incl
push
mov
or
sbb
sbbb
mov
outsb
ja
inc
jecxz
xor
xlat
ja
adc
push
xchg
aas
cmpl
repz
mov
je
hlt
mov
add
fmul
shlb
inc
out
stos
insb
mov
or
sub
pop
aaa
hlt
imul
add
gs
sub
or
mov
push
mov
add
ljmp
sbb
out
push
xchg
mov
fs
pcmpeqd
pop
js
je
out
das
jno
pop
inc
push
push
fwait
stos
pop
xchg
xor
adc
add
lods
bnd
jne
mov
test
mov
and
cmp
mov
hlt
aas
jp
add
or
repz
push
bound
and
xchg
xor
mov
inc
jno
mov
add
popa
imul
sub
out
popf
jb
lret
pusha
inc
popf
adc
nop
sbb
pop
xchg
inc
ss
pop
xadd
pop
xchg
ss
pushf
jo
cltd
sub
rclb
adc
dec
jg
jne
xchg
fs
test
add
inc
push
sub
jg
dec
push
add
adc
push
fildll
push
mov
pop
lret
mov
jbe
push
push
pop
push
add
push
pusha
sbb
mov
mov
dec
fwait
mov
add
mov
mov
pop
jge
add
pop
dec
sbb
mov
sti
roll
rolb
pop
shrl
dec
or
pop
jnp
pop
add
xor
jmp
mov
pop
push
fwait
jl
sbb
inc
pop
jno
test
cmp
cmp
je
or
cmp
mov
mov
sbb
push
call
lds
mov
jp
jo
push
push
xchg
push
int
shlb
hlt
mov
ss
popf
pusha
stc
xor
adc
stos
push
js
cmp
cmp
dec
jns
xor
dec
inc
and
and
xchg
adc
fisttps
mov
add
cltd
sahf
xchg
mov
es
add
adc
push
sbb
js
addr16
add
push
adc
push
pop
mov
or
loop
rorb
mov
pusha
mov
stos
inc
jl
or
adc
testb
inc
pop
adc
pop
and
loopne
inc
sbb
add
fsubrs
popf
pop
sbb
adc
or
mov
int3
pop
add
fistpll
lods
push
sbb
and
push
inc
add
aad
scas
adc
jge
sbb
or
sbb
xor
inc
lods
sub
mov
inc
dec
cmc
bound
pop
or
fdivs
xor
xor
jnp
xor
mov
mov
mov
cmp
cld
mov
add
push
ds
aam
fsubl
inc
ja
push
lahf
movsl
adc
out
decl
push
push
dec
inc
inc
xchg
mov
adc
adc
inc
fmull
inc
sbbl
xchg
pop
sub
pop
subb
add
push
insl
loope
adc
stc
jle
addb
inc
je
fidivs
orl
lods
sub
dec
add
addb
enter
mov
jae
test
jae
xorl
xchg
push
add
push
sbb
pop
sub
pop
imul
push
adc
pop
mov
jb
sbb
pop
in
and
add
gs
sub
ss
mov
rcll
pop
or
jmp
add
jnp
pop
add
mov
sbb
es
cli
rcl
or
add
in
mov
sbb
add
imul
mov
jmp
in
push
add
ja
push
orl
fisubrs
adc
fs
push
sbb
gs
jnp
jnp
imul
adc
outsb
and
push
push
or
sbb
xchg
pop
lds
fdivrl
xor
inc
rcrl
cmp
outsb
jbe
sbbb
inc
push
popa
sahf
lods
mov
js
mov
mov
stos
test
dec
pop
jl
sbb
adc
or
mov
sbb
ljmp
or
mov
jns
mov
or
xor
aaa
push
pop
pop
cmp
mov
mov
or
cmpsl
jmp
out
push
mov
shlb
cmp
sbb
sbb
psraw
xchg
mov
add
imul
decb
rclb
xchg
adc
cltd
jae
rorb
pop
test
pop
aam
sbb
enter
testb
mov
sub
push
jno
imul
movsbl
jmp
push
jbe
pop
and
lods
int3
push
jecxz
inc
in
je
add
daa
adc
fs
idiv
dec
rolb
popa
test
mov
dec
jg
inc
push
mov
fmul
adcb
cmp
dec
por
mov
sbb
mov
sub
jne
add
enter
add
pop
mov
inc
loopne
movsl
cmpsb
cmp
or
into
ds
jo
fsubrs
push
jo
mov
or
cltd
and
cwtl
jge
add
out
add
lret
pop
cli
and
push
add
dec
mov
add
xor
mov
pushf
xor
jb
js
jbe
pop
push
cs
js
pusha
lcall
cmp
jle
cmp
sub
sub
fidivrl
mov
imul
xchg
cmp
cmp
sbbb
test
lret
dec
push
sub
iret
pop
clc
repnz
push
jg
add
add
pop
push
lock
fsts
outsb
or
xor
or
add
pop
add
icebp
mov
test
imulb
and
das
dec
push
add
insb
add
sub
xchg
or
add
push
dec
subl
cmp
lcall
xor
sbbb
jae
adc
fcoms
roll
add
jg
or
pop
loop
inc
pop
jns
mov
inc
imul
inc
add
adc
jnp
imul
fdivl
aad
cmp
mov
push
aaa
data16
sbb
push
push
aaa
pop
insl
sub
add
test
sbb
icebp
lods
add
popa
mov
lods
add
das
and
jns
xor
pop
imul
jg
jecxz
rolb
cmpb
and
mov
test
push
mul
gs
add
push
aam
aad
js
inc
cmp
dec
lahf
xor
gs
sbb
cwtl
inc
sub
or
or
pop
adc
pop
inc
add
jp
out
xchg
push
pop
cmp
mov
call
cwtl
subb
out
cmp
inc
mov
sbb
bound
imulb
and
sar
sub
xor
movb
orl
inc
or
inc
fs
pusha
jge
stos
mov
jo
dec
in
jg
mov
lock
ret
xchg
jl
sbb
sub
mov
loopne
daa
loopne
push
mov
xor
outsl
fstpl
ja
mov
inc
mov
dec
fadd
or
adc
add
jecxz
sti
js
mov
adc
fisubrs
sbb
adc
bound
mov
xor
out
sbb
add
hlt
cmp
cld
xchg
imul
add
jo
pusha
mov
inc
in
sub
adc
or
sbb
lret
in
das
adc
cmp
mov
cmp
lret
or
jno
pop
add
sbb
cmp
sub
mov
or
test
lods
sub
sbb
cmp
pop
jg
loope
jmp
dec
mov
cwtl
pop
xorb
test
mov
xor
jl
jo
sub
subb
movsb
xchg
ret
adc
cli
sub
sub
cmpb
xchg
fsts
call
xchg
jbe
fsubr
pop
pushf
mov
dec
push
add
outsb
sbb
jle
cmp
pop
xor
sub
and
or
mov
xchg
loopnew
data16
cmpsb
sub
outsl
dec
adc
mov
mov
ljmp
aad
sbb
jae
and
push
and
xchg
add
ljmp
push
cltd
xor
lock
outsl
add
mov
push
bound
lds
enter
shrb
inc
pusha
adc
adc
mov
ficoms
jl
sub
xchg
cmp
sub
out
xor
pop
adc
aad
or
adc
xchg
push
loope
pop
loope
xor
mov
add
pop
lock
dec
popa
lods
dec
dec
jo
rorl
mov
lret
mov
dec
insb
pusha
nop
add
outsl
pop
or
ja
adc
insb
jns
sbb
pop
js
jae
and
insb
adc
push
add
test
add
and
test
or
xchg
jl
dec
fs
mov
cmc
xchg
add
cmpb
mov
lock
aaa
dec
push
pop
mov
mov
or
or
push
mov
mov
bound
ljmp
pop
pusha
xor
ret
xchg
rolb
in
mov
les
adc
inc
or
rcrb
sub
pop
mov
mov
loop
loop
ds
dec
mov
in
jg
cmp
mov
sub
test
add
addb
data16
or
adc
mov
cmp
xchg
inc
adc
push
fst
cmp
stos
and
cmp
xor
lahf
sub
xor
dec
loopne
mov
movl
lock
ret
lea
into
sbb
and
add
push
sbb
pop
add
jns
add
inc
mov
imul
mov
pop
xor
inc
or
xor
inc
pop
or
inc
pop
cmp
cmp
pop
dec
loopne
cld
xchg
imull
pop
pusha
mov
or
aam
or
test
mov
jae
xor
push
nop
call
and
mov
loopne
cmp
pop
mov
cwtl
mov
lds
xor
movsb
xor
cli
les
mov
cmp
xor
test
cmp
sub
push
dec
push
add
cmpsb
pusha
fidivrl
addr16
sahf
and
subb
cmp
and
test
push
sbb
int3
popf
sbb
xor
add
int3
popa
daa
or
or
pop
add
fnsave
ljmp
repnz
aam
repnz
cmpsb
push
push
pushf
push
mov
inc
fs
mov
dec
cmp
sub
shlb
sbb
dec
sub
sbb
mov
daa
add
rorb
dec
pop
jo
dec
lret
add
andl
pusha
push
es
jg
sbb
pusha
mov
add
test
dec
movsl
cmp
flds
call
mov
mov
dec
xchg
inc
imul
sub
adcb
popf
scas
jp
or
and
push
push
pop
iret
adc
jmp
pop
xorb
and
push
push
int3
inc
mov
xor
pop
sub
data16
sub
or
data16
dec
sbb
or
adc
shrl
unpckhps
inc
sbb
shrb
data16
call
enter
push
pop
aam
adc
js
or
inc
xchg
imul
jge
sub
jl
jmp
add
adc
dec
cmp
push
popf
mov
or
nop
cs
imul
push
mov
inc
std
jns
popa
push
push
cltd
loopne
into
jae
push
add
or
dec
jg,pn
dec
sub
ss
add
add
push
rclb
mov
sbb
jo
mov
dec
xchg
test
xchg
aam
loope
cld
mov
xor
pop
jl
or
mov
xchg
xorb
test
cmp
int3
cwtl
lcall
inc
mov
decl
repnz
sbb
test
data16
ret
mov
jg
data16
and
add
mov
dec
cli
inc
lea
mov
sbb
xor
add
roll
push
lcall
xor
mov
cmpsb
and
sub
jg
lret
inc
repnz
or
hlt
mov
inc
mov
cmc
adc
pop
push
int
and
inc
mov
dec
mov
stos
shrl
xchg
dec
or
shll
xchg
shlb
sub
push
sub
pop
sbb
mov
data16
jmp
mov
xor
movsb
dec
jne
cmp
jae
add
add
push
add
and
test
or
cmpsb
mov
or
sub
subb
rol
sub
mov
lret
and
popf
test
sbb
adc
je
pop
jp
mov
inc
pop
dec
jl
add
loopne
sub
test
sahf
and
xor
adc
pop
inc
sbbb
add
bnd
dec
and
sbb
fistpll
add
sub
insl
test
addr16
lcall
sub
hlt
jno
xchg
test
xchg
subb
mov
xor
mov
test
lea
inc
cmp
lea
and
pop
inc
insb
repnz
inc
sub
fwait
movsb
push
and
add
add
push
push
add
push
lods
push
data16
inc
cmp
loope
or
incl
add
popa
loop
push
test
xor
shlb
cltd
jnp
or
cwtl
xchg
mov
mov
popa
pop
notl
dec
sub
notb
es
xchg
out
pop
sub
js
jo
je
jle
mov
xchg
clc
add
dec
sbb
nop
push
jae
add
xchg
lret
rolb
jle
mov
inc
rolb
ja
or
nop
inc
add
data16
sub
nop
pop
ficoms
jecxz
dec
call
xchg
push
ljmp
sbb
jo
repz
nop
scas
dec
loope
inc
bound
add
push
dec
xchg
into
test
mov
inc
fs
push
add
call
aam
xchg
ficompl
add
inc
adc
ljmp
ss
jp
jo
hlt
ficoml
adc
and
nop
push
cmp
lods
mov
adc
pop
pop
pushf
pop
add
stos
and
bound
pop
shrb
jo
xchg
sbb
sbb
add
jo
adc
pusha
and
push
int3
jg
xor
test
les
add
test
or
cmp
sbb
jmp
sub
nop
mov
and
insl
add
jg
add
xchg
or
mov
addl
fwait
adc
movsb
inc
popa
jg
and
add
and
pop
xor
sub
push
jg
fisttps
or
add
pusha
pop
rorb
add
jg
add
add
add
adc
xor
sbb
jg
popa
add
mov
dec
pop
dec
xchg
and
or
add
call
mov
pusha
jg
add
or
dec
sub
xor
pop
addb
mov
jg
iret
adc
pop
dec
pop
addb
mov
jg
inc
xchg
sbb
add
inc
xor
jg
push
rolb
push
pop
cmpl
fidivrl
or
add
pop
cmpl
insb
sbb
jo
cmpb
push
xchg
pop
jle
add
mov
sbb
push
rolb
or
add
jns
mov
dec
jg
add
jbe
xor
cmp
adc
sub
iret
rclb
sbb
push
jg
add
test
or
and
fstl
mov
cli
sbb
pop
mov
inc
or
or
push
jo
popf
orl
hlt
addb
add
adc
dec
roll
lea
insl
sub
loopne
push
push
loope
add
or
imul
jp
popa
or
loopne
add
mov
xor
mov
insl
mov
pop
xchg
in
cmp
sub
dec
push
insl
pop
pop
pusha
test
xor
push
sub
adc
or
mov
or
inc
inc
daa
push
mov
add
xchg
add
nop
int3
mov
imul
mov
xchg
nop
pop
movsb
pop
or
subl
jo
enter
clc
sbb
js
dec
gs
test
call
in
loope
jo
int3
rcrb
test
cmp
push
add
leave
xor
cwtl
and
mov
or
sbb
in
cld
shr
sub
pop
pusha
add
mov
js
xorb
fsubs
rolb
cltd
add
jno
cmp
add
lods
rolb
and
inc
mov
aad
add
jg
addb
stc
fsub
or
add
xchg
jecxz
mov
scas
add
inc
inc
xor
sub
inc
or
cmpsl
mov
or
adc
cs
add
subl
in
gs
sub
cmp
addb
addr16
mov
or
into
sub
insb
daa
sbb
xor
lods
adc
test
gs
add
mov
xor
pop
fs
pop
iret
clc
or
inc
add
popl
repz
push
xor
inc
lea
arpl
es
fldt
fiadds
mov
push
adc
jbe
cli
mov
push
out
rclb
pop
movsl
dec
enter
sbb
inc
addb
push
mov
add
add
fildl
cwtl
and
jo
addl
add
mov
adc
adc
or
jb
icebp
mov
mov
adc
sub
and
and
or
or
and
or
fdivl
adc
subl
adc
clc
mov
adc
or
jb
sbb
or
push
add
mov
and
dec
jg
pusha
sub
iret
adc
xlat
push
aam
jmp
iret
int3
add
sarl
adc
dec
mov
add
arpl
aad
xor
xchg
adc
cwtl
outsb
rolb
pop
enter
add
pop
adc
daa
push
add
pop
addl
invd
add
jg
pop
test
sub
into
push
xlat
aad
sbb
ret
les
adc
mov
pop
adc
outsl
dec
in
or
adc
push
out
jo
cmp
retw
push
inc
ucomiss
xor
mov
sub
cwtl
and
adc
jle
cmpl
sub
sub
into
xor
inc
movsw
sbbl
or
xchg
or
cltd
insl
insb
enter
js
nop
jno
jnp
push
sub
jno
jnp
push
mov
sub
xor
out
iret
mov
in
mulb
cmp
sub
sub
push
scas
add
stos
mov
adc
sbb
loope
enter
xor
leave
mov
mov
rcrb
int3
cmp
into
dec
aaa
in
add
adc
adc
mov
addps
mov
nop
add
jns
lea
fcoms
pop
pop
push
xor
jno
cmp
cmp
or
movsl
inc
notb
stc
and
or
mov
adcl
js
and
xchg
mov
pusha
jl
and
inc
pusha
xchg
sahf
sbb
push
adc
pusha
test
dec
pushf
mov
adc
test
mov
sub
mov
dec
ss
pop
jne
mov
sbb
push
test
in
stos
jno
xor
push
iret
push
mov
or
jo
or
fistps
dec
adc
or
cmpb
cmpsb
ljmp
sbbb
jg
jo
or
xor
adc
push
stos
adc
xor
ss
cmpl
sub
xor
sub
mov
inc
out
or
jnp
pop
pop
adc
insl
and
movsb
mov
xor
push
into
movsb
pop
lock
in
add
dec
inc
add
and
mov
cmpsl
cmp
nop
xor
test
je
push
add
lret
pusha
addr16
rorl
mov
sbb
xchg
pop
or
enter
cmp
and
stos
pop
add
shrb
xor
sbb
test
and
push
ret
rclb
fwait
test
sbb
inc
sbb
or
imul
jno
pop
xor
or
iret
or
mov
inc
push
mov
adc
les
sbb
iret
or
cwtl
or
jo
mov
or
into
pop
js
or
sarl
adc
mov
cwtl
shlb
fdivrl
mov
ret
xchg
pop
sub
mov
pop
jle
or
leave
dec
sbb
mov
xchg
enter
imul
mov
xor
dec
pop
or
fidivrl
out
push
shlb
repz
fsubs
push
pushf
jo
nop
daa
sub
xchg
ss
rolb
push
pusha
xor
mov
shlb
xor
adc
xchg
jmp
and
loopne
in
pop
daa
enter
adc
jmp
push
pop
inc
jnp
les
roll
push
and
xchg
or
push
fldt
lods
xor
dec
xor
les
or
adc
or
sub
xor
add
fdivrs
inc
stos
call
shrb
jle
xchg
sbb
stos
nop
test
sbb
adc
stos
movsl
mov
jg
jg
xchg
fdivrl
push
popf
adcb
push
iret
orb
ss
or
or
and
and
inc
sbb
sub
add
loope
inc
mov
dec
fstpl
das
sbbl
andl
push
out
cmpb
imul
loopne
popf
or
ljmp
out
add
xor
sbb
add
sub
adc
push
dec
sbb
sbb
jae
sbb
lock
daa
test
and
sbb
add
push
add
fdivr
clc
js
enter
jp
rorb
xor
dec
push
sbb
inc
addr16
and
les
fsubl
stos
lret
pop
imul
sbb
sbb
pop
scas
cmp
cltd
data16
sub
inc
js
ds
mov
rclb
fnstcw
adc
mov
mov
repz
dec
xchg
pusha
insb
pop
in
data16
adc
cmp
insl
and
jecxz
sbb
loop
cmp
test
ret
mov
inc
and
outsb
jno
inc
test
iret
or
imul
and
adc
push
add
push
sbbl
cwtl
pop
inc
xor
pop
add
push
push
xor
fadds
xor
pop
sub
fcoml
sbb
mov
cmpsl
push
or
mov
insb
mov
jg
inc
and
js
jae
inc
jg
push
enter
or
shll
add
sub
or
fsubs
jo
sub
pop
pusha
mov
adc
fisubl
je
add
mov
call
nop
push
iret
sub
movsl
inc
sub
and
jecxz
push
icebp
xor
jl
je
or
inc
add
push
add
out
inc
dec
pushf
lods
mov
sub
adc
mov
pusha
push
into
pusha
popa
or
daa
daa
mov
fs
adc
mov
movsb
add
inc
or
inc
and
jb
and
cmc
adc
lea
add
pusha
loopne
pop
pushf
inc
pusha
pop
adc
mov
dec
repnz
rorl
ja
and
ficoms
xor
xchg
popa
lahf
lds
xchg
add
or
adc
scas
popf
push
rclb
jecxz
xor
cmp
dec
add
adcl
or
ficompl
int3
in
sub
outsl
loope
add
in
pop
sub
add
loope
pop
mov
jmp
popa
jle
jae
or
xor
je
bound
cli
ret
or
sahf
mov
inc
xchg
jo
enter
add
repz
sub
js
push
push
leave
pop
xchg
nop
dec
add
sub
addr16
inc
push
xor
push
dec
push
add
stos
test
inc
add
addl
or
in
push
or
push
mov
or
push
js
xchg
rorl
mov
push
les
push
dec
sbb
pop
test
inc
mov
pop
orb
add
sbb
je
sub
inc
arpl
sbb
mov
pop
fildll
sbb
push
or
fldenv
subl
jno
mov
ja
fwait
sub
pusha
sbb
add
dec
jmp
jp
sub
sbb
inc
dec
aad
ret
stos
lcall
add
cltd
xor
inc
jmp
movsl
xor
adc
add
inc
bound
cmp
dec
push
inc
and
outsl
sub
adc
add
adc
sub
adc
mov
add
arpl
pop
ret
fistpl
jge
ja
jmp
sub
pop
iret
add
adc
push
int3
into
cmpsl
cmpsb
nop
mov
cmp
inc
cmp
xchg
movsl
sbb
jmp
mov
or
dec
cmp
xchg
cmpl
adc
jb
aam
dec
jo
fistl
ret
add
arpl
addb
adc
push
sbb
dec
xor
negb
imul
mov
lods
push
imul
dec
dec
adc
or
daa
and
mov
js
sbb
pushf
jle
push
testb
data16
test
iret
cwtd
orb
xor
xor
dec
dec
sub
ss
xlat
insl
stc
fldcw
or
shrl
insl
imul
xor
xchg
cwtl
negl
sbb
push
jge
dec
les
mov
inc
add
and
adc
mov
pop
in
inc
cmp
or
dec
jae
inc
cmp
cmpsb
xchg
or
mov
push
fisttpl
or
loope
test
repz
push
jmp
ret
jo
cmpsb
push
jmp
fs
lods
adc
add
cmc
fisubrs
mov
sub
aam
loop
xor
add
adc
adc
stos
pusha
dec
inc
push
adc
adc
dec
insl
enter
faddl
lret
mov
inc
bound
test
aam
cmpl
and
sbb
jo
mov
fiaddl
xchg
jp
adc
leave
inc
or
adcl
lea
aam
lds
pop
inc
ljmp
or
loope
enter
or
gs
arpl
cmp
pusha
dec
inc
test
push
lret
and
test
and
js
subb
aam
aaa
test
push
lea
fst
iret
adcb
cmp
mov
add
aad
scas
add
add
flds
inc
rolb
xchg
push
into
push
pop
mov
mov
xchg
ljmp
sub
add
push
lock
inc
movsb
jp
into
push
jae
mov
push
pop
xor
jmp
add
je
sbb
add
push
lock
pop
mov
add
inc
cmp
cmp
rclb
adc
mov
dec
test
xor
inc
jbe
pop
fidivrl
dec
or
out
lcall
xchg
add
les
xor
das
and
add
inc
call
je
aam
xor
addb
stos
dec
dec
and
dec
push
movsl
cli
jg
sub
mov
cs
nop
jg
xor
popf
popa
nop
mov
push
inc
or
mov
in
add
imul
mov
add
cmp
adc
les
push
push
xchg
xor
rcll
pop
mov
jns
sub
mov
jmp
in
sbb
inc
jb
xor
repz
test
pop
and
xor
sbb
push
adc
or
inc
stos
sbb
sub
add
stos
adc
adc
push
cmp
jae
dec
mov
push
rclb
add
adc
loope
or
iret
js
add
fs
dec
cmc
xor
add
mov
sub
adc
push
pusha
dec
inc
and
push
sub
movsb
and
sti
and
pusha
jg
stos
stos
and
dec
and
push
ret
int3
jg
test
adc
orl
add
mov
inc
or
decl
dec
and
jns
cmp
jne
jae
add
fs
sbb
pop
scas
test
cmpsl
xchg
and
push
xchg
add
or
fimull
lret
or
jle
arpl
pop
mov
jg
add
or
ljmp
add
test
add
or
pop
sub
mov
inc
rcrb
sbb
push
and
lret
roll
dec
add
add
xor
push
ljmp
pusha
out
stos
daa
pop
jg
push
add
sti
inc
sub
nop
inc
adc
push
add
add
push
jle
push
sub
xchg
dec
into
jae
jns
lahf
loope
push
dec
jg
pusha
adc
jne
clc
jle
inc
sub
pavgb
dec
es
sub
sub
test
jmp
aad
sub
inc
add
and
shrb
stos
jge
movsl
mov
cmp
sub
sbb
jae
pop
push
lcall
aam
inc
inc
ljmp
enter
push
adc
jae
inc
inc
fisubl
cmp
or
dec
sbb
stc
and
dec
jne
or
sub
dec
sahf
popa
pusha
sub
add
pusha
addb
mov
cmp
popa
and
test
lods
inc
add
sub
in
cmpb
dec
adc
or
aas
test
add
jns
and
xor
sub
stc
sub
stos
mov
nop
push
jle
or
add
incl
cmpsl
or
push
push
dec
xchg
into
sbb
insb
and
mov
or
adc
xchg
cltd
lret
jae
cmpsb
add
ljmp
xchg
lods
ljmp
inc
pop
add
and
add
jae
rol
dec
push
cmp
roll
movsl
rolb
and
imul
sbb
cmp
jae
fmuls
stos
or
jle
stos
adcb
jle
cltd
xchg
pop
stos
test
mov
fdivl
mov
fs
mov
jle
orb
jmp
cmpsl
or
fsts
shlb
adcb
lcall
cmp
test
daa
rolb
or
lea
jg
add
cmp
dec
add
push
mov
shlb
dec
add
jae
or
jle
or
mov
jge
clc
inc
xor
ret
inc
push
jle
mov
rcrl
jg
add
mov
xchg
test
inc
cmp
aam
adc
shll
inc
arpl
mov
push
sahf
xor
mov
dec
stos
adc
and
mov
ret
jae
jge
mov
jo
cld
mov
add
nop
mov
lock
xchg
mov
cmp
and
xor
inc
or
mov
push
sub
fists
out
mov
cmp
add
shlb
jno
xor
push
das
out
fs
sub
pusha
out
rol
ja
xor
inc
pop
add
addb
les
shll
mov
cs
sbb
pop
jge
hlt
push
adc
sbb
movsb
add
popa
adc
pop
sbb
mov
xlat
xor
or
iret
lods
add
subl
mov
sbb
add
outsl
or
imul
cmp
arpl
or
jae
xorb
or
pop
stos
push
scas
mov
into
jo
jno
imul
adc
xchg
mov
push
rcrl
dec
jo
and
push
pop
inc
fsts
out
pushf
mov
mov
mov
js
xlat
pop
std
js
out
mov
test
ucomiss
movsl
enter
or
in
insl
out
mov
push
out
inc
cmp
adc
aaa
xor
or
pusha
mov
fists
imul
lods
add
inc
dec
xchg
fistpll
pusha
rol
gs
outsl
xchg
inc
sub
or
jmp
jne
dec
and
jae
jle
inc
stos
cwtl
pusha
fnsave
lods
adc
movsl
pop
jb
add
jae
and
in
mov
push
dec
pusha
insb
push
add
sbb
ret
add
push
or
mov
pop
push
jecxz
sub
xor
aaa
sub
imul
test
sub
filds
or
adc
adc
mov
mov
and
orb
in
out
cs
dec
or
push
mov
outsb
jns
pop
mov
jge
les
add
and
ja
and
pop
add
lods
jo
cmp
sub
pop
ja
pop
mov
cs
js
pop
push
icebp
dec
adc
fdivrl
push
sarb
or
subb
sbb
fistpll
ja
movsb
xchg
js
push
mov
mov
cmp
jbe
outsb
xlat
je
adc
popa
adc
inc
or
push
les
js
movsl
pop
sbb
push
add
dec
inc
sub
cmp
inc
sbb
xor
add
sub
dec
xor
push
add
notl
pop
lret
sub
or
inc
jo
adc
or
and
cmpb
in
fbld
inc
add
into
sbb
xor
pop
xchg
rorb
xchg
js
inc
push
mov
jae
xchg
pushf
xor
ret
fstp
sbb
lods
jl
loope
dec
loope
xor
sub
mov
or
cmp
pop
or
xlat
mov
and
cmp
int3
push
sbb
adc
add
imul
push
add
in
into
xchg
mov
pop
cmp
inc
sbb
push
nop
fistpll
push
ffree
cmp
inc
cli
sbb
lods
bound
push
test
outsl
es
push
daa
xchg
cmp
hlt
jae
pop
push
data16
mov
and
ret
jecxz
and
dec
lods
jp
loope
movsb
push
stos
jg
out
mov
cmp
or
mov
call
ror
xchg
push
jae
cwtl
adcb
sub
fisttps
jbe
ja
push
stos
mov
inc
mov
lcall
in
mov
xchg
add
push
inc
or
loop
ljmp
sub
xchg
ds
xchg
pushf
sahf
cwtl
insb
imul
add
lret
outsb
aad
lods
push
adc
inc
les
or
loopne
bound
sbb
sbb
imul
xor
push
test
jnp,pn
push
pusha
in
test
pop
push
loop
rcl
xor
fsub
or
stos
xchg
pop
push
pop
mov
jle
adcb
sbb
jae
adc
sbb
cmpsb
mov
mov
sbb
cmp
add
sub
xor
loope
mov
and
lds
loope
bound
mov
push
sbb
xlat
aad
cmp
sahf
fdivl
push
xorb
pop
pushf
aad
jle
popf
push
addr16
jno
mov
cmp
sarb
les
pushf
pop
or
xor
sub
fcompl
inc
push
adc
fisubrs
and
add
ret
adc
fildl
out
push
cmp
fidivrs
aaa
mov
mov
or
push
out
insl
jbe
push
ret
add
push
int
jno
pop
test
adc
pop
mov
dec
cmp
xor
ss
push
mov
pusha
sub
sbb
pop
and
out
jnp
xchg
addr16
pop
clc
dec
add
jmp
jb
sub
stos
and
mov
xor
mov
mov
gs
lds
rolb
pop
shll
mov
lds
mov
enter
in
dec
and
adc
es
xchg
fmuls
xchg
out
push
and
int3
lret
decl
sub
jmp
xor
inc
jb
mov
add
je
or
and
add
pop
outsl
hlt
sub
dec
sahf
sarl
jge
gs
sbb
test
negl
push
pusha
fildl
sub
fldt
fsubl
add
add
rorl
adc
pusha
jnp
lods
sbb
xorl
cmp
mov
adc
mov
push
rorl
jl
ret
and
cmp
cwtl
cmp
pop
out
cmp
xor
mov
pusha
mov
push
xlat
in
dec
jno
mov
cmp
sbb
push
mov
or
popf
mov
push
pop
dec
push
push
sbb
xor
ds
and
and
cmpsl
dec
jo
daa
and
test
push
add
pop
or
popa
inc
sete
mov
pop
push
sbb
pushl
or
push
push
adc
add
mov
xchg
adcl
loop
popa
pusha
inc
xor
sbb
or
sub
stos
fs
pop
mov
mov
adc
adc
or
lahf
lds
xchg
loop
adcl
pusha
inc
jg
and
pop
push
outsl
add
lods
sub
add
add
mov
adcl
lds
subb
inc
push
or
orb
xor
adc
sbb
or
dec
pop
mov
into
inc
adc
add
dec
push
or
jbe
mov
cmp
lahf
or
add
push
or
mov
sub
cmpsl
add
add
push
rcl
adc
scas
or
mov
push
aaa
pop
add
dec
add
rol
and
mov
mov
inc
sub
push
inc
adc
addr16
sub
mov
mov
mov
inc
xor
dec
xor
subb
add
stos
popa
pusha
xor
pop
sbb
mov
dec
ja
add
add
iret
add
or
shrb
add
xchg
lods
add
add
add
add
add
add
add
add
add
add
add
pushf
mov
mov
mov
mov
mov
mov
xchg
push
add
dec
xchg
push
add
add
push
add
pushf
xchg
push
add
dec
xchg
push
add
add
push
add
pushf
xchg
push
add
test
xchg
push
adc
int3
nop
adc
add
sbb
push
add
popf
xchg
add
les
mov
insl
add
xor
mov
mov
mov
mov
add
push
addb
and
sti
push
leave
adc
std
mov
jns
mov
cltd
pop
mov
push
pop
popf
rcrl
daa
rcrl
cltd
cmp
popf
fstps
sti
repnz
cltd
cmp
cltd
jle,pt
imul
mov
cwtl
jecxz
inc
inc
sbb
and
add
add
xor
add
andb
inc
dec
pop
inc
or
push
sub
push
js
push
xor
push
pop
or
cmp
outsb
loopne
jo
out
je,pn
js
sub
and
jecxz
pop
mov
and
fs
and
add
cmp
jl
fidivrl
pop
and
ret
or
loopne
push
push
xorl
inc
leave
repz
dec
pusha
adc
add
sbb
fldl
xor
or
inc
and
inc
and
xchg
pop
test
add
jl
and
add
das
push
push
add
addb
and
add
sbb
pop
push
add
stos
sbb
in
stc
mov
mov
scas
sbb
add
hlt
shll
push
cld
mov
notb
and
xchg
pushf
inc
lods
pop
imul
and
add
push
mov
jl
and
enter
inc
and
and
add
push
add
pop
in
repnz
adc
add
insb
inc
push
add
xchg
and
and
inc
and
fildll
stc
and
push
dec
sarl
xchg
sbb
in
repnz
xorl
xchg
mov
or
pop
in
rclb
add
jecxz
dec
xor
adc
push
int3
adc
add
pop
pop
add
sti
adc
and
dec
movsb
adc
xor
out
cmpl
xor
add
jae
test
xor
xor
and
das
fs
inc
and
xor
lea
and
xor
jns
push
out
adc
xchg
imul
xorb
ret
in
pop
adc
push
data16
and
dec
jecxz
pop
addl
xor
adc
add
sub
adc
xor
nop
xchg
push
add
xor
adc
lahf
and
adc
add
and
inc
and
inc
and
stc
repnz
and
mov
push
pop
mov
mov
or
movsl
sbb
hlt
sbb
mov
movsw
movsb
popa
pop
lret
or
sarb
add
or
scas
mov
fcoms
cs
out
hlt
and
movb
or
and
xor
out
sti
or
les
mov
pop
sub
push
loopne
lock
xchg
enter
push
sbb
xlat
jne
add
iret
pop
or
cld
pop
push
adcl
jne
xor
jbe
cmp
sub
js
mov
js
lock
xor
nop
sub
dec
adc
cmp
rol
jbe
adc
mov
popf
or
jg
cmp
xchg
gs
add
xchg
mov
add
jnp
imul
insb
add
inc
add
mov
bound
jb
outsb
or
cmp
push
push
je
inc
cwtl
dec
push
jge
add
inc
cli
inc
or
xor
add
cmp
cmp
xchg
dec
jecxz
mov
insl
ss
shlb
xor
xor
adc
insl
insl
dec
dec
shll
jae
insb
imul
push
jae
mov
rclb
and
out
scas
inc
loopne
loop
cmp
shl
xor
dec
dec
iret
repz
inc
inc
imul
popa
insl
gs
rclb
sub
mov
sub
into
add
loope
mov
enter
xchg
lea
cmp
cmp
lock
lahf
sub
pushl
dec
call
movb
lods
stos
in
inc
pushf
ja
cmp
jg
jb
push
add
push
rcrb
fsubs
pop
adc
jmp
adc
fs
jmp
mov
aaa
movsb
pop
leave
in
or
neg
jne
scas
aad
shl
lea
push
loop
lea
sahf
jne
arpl
orl
insb
mov
arpl
pop
mov
dec
mov
xor
push
sahf
daa
fdivrp
lods
xor
pop
jl
mov
inc
sahf
push
cld
sbb
insb
xor
and
or
mov
jmp
adc
inc
sbb
hlt
gs
pop
dec
movsb
push
sarb
xor
in
leave
in
pop
sbb
add
cli
push
inc
dec
repnz
add
lret
fstps
nop
das
and
pop
push
mov
pop
fistpl
cmp
idivl
fisttps
dec
sbb
ret
mov
das
mov
pusha
jecxz
lds
sub
mov
inc
lods
repz
lods
or
scas
int3
dec
mov
lea
xchg
pop
sbb
push
adc
xor
mov
aam
popa
addr16
dec
shrl
gs
fldenv
dec
shrl
gs
aam
push
int
aad
insb
xlat
popa
dec
shll
push
and
loope
mov
dec
mulb
idiv
xchg
stc
and
jle
test
je
sti
xor
call
inc
add
into
inc
mov
jns
adc
hlt
sub
repnz
adc
dec
lret
test
cwtl
mov
and
sub
jb
test
into
cmc
iret
shrb
lret
in
rcl
aas
push
out
mov
jno
shrl
idivb
dec
or
outsl
jnp
xchg
in
popa
jle
std
enter
push
dec
repz
lret
jb
int
mov
or
iret
inc
rcl
xchg
cmp
or
sarb
mov
xchg
inc
sub
scas
dec
pop
int
rorb
bsf
mov
inc
and
push
outsb
pop
dec
fdivp
sub
jl
sbb
cmc
sar
test
orb
rolb
cmpsb
push
cmpl
push
enter
pop
ret
aaa
jns
cld
adc
not
aam
repz
push
daa
xor
or
fldl
shlb
frndint
pop
inc
sbb
add
adc
sub
jecxz
cmp
call
mov
and
jmp
mov
js
fnstcw
pushf
mov
nop
xchg
xchg
lret
in
xchg
xchg
xchg
xchg
xchg
push
inc
xor
xchg
jns
cltd
jb
pop
cltd
lcall
mov
jae
jae
lea
mov
lea
nop
or
std
jp
jns
xchg
std
xchg
std
xchg
std
xchg
std
mov
fs
mov
divb
lcall
mov
jns
out
mov
jne
add
sbb
adc
dec
or
mov
push
push
adc
mov
cmp
adc
int
shrb
stc
jns
sti
ret
repz
std
dec
jns
pop
movsb
test
out
dec
push
sub
adc
ljmp
div
call
pop
loop
inc
inc
add
add
pop
pop
stos
add
sub
pop
adc
cli
xchg
cs
push
fs
inc
lcall
popf
je
sbb
repz
mov
cmp
outsb
insb
lcall
arpl
imul
lcall
popa
inc
lcall
cmpsb
fldenv
negl
leave
lret
cs
repz
iret
rcrb
pop
jmp
lock
imul
out
cli
sbb
cmpsl
sub
push
add
xchg
movsb
add
add
aam
cmpl
fstps
pop
push
lret
call
mull
and
std
mov
push
jo
dec
cmpb
cmp
sbb
inc
or
add
pushf
or
cld
mov
inc
push
sbb
cli
push
out
cmp
pop
movsb
xchg
stos
les
insb
mov
inc
mov
idivb
adc
cmc
loop
subb
repnz
fldl
adc
adc
pop
or
or
jns
loope
arpl
adc
sbb
out
xor
mov
cmp
insl
add
aam
add
mov
outsb
mov
loopne,pn
mov
push
les
in
iret
pop
imul
xor
add
dec
clc
enter
dec
jecxz
orb
leave
xchg
and
cmp
pop
mov
ret
icebp
movsb
mov
jecxz
aas
or
outsb
dec
inc
sbb
inc
imul
sbb
int3
ljmp
out
loopne
mov
cmp
xchg
mov
pushf
mov
mov
xor
pop
mov
rol
inc
add
push
lock
imul
dec
or
jo
or
call
mov
mov
pop
pop
adc
mov
sbb
shl
addb
inc
and
pop
xchg
and
xor
adc
cmpsl
gs
arpl
cmpb
and
movsl
gs
inc
and
xchg
lea
xor
pusha
repnz
inc
and
pop
ss
or
nop
xchg
jl
repz
inc
and
add
imul
mov
cmpsb
pusha
popf
xchg
leave
lret
test
leave
insb
and
inc
jmp
mov
xchg
xchg
int3
jmp
pop
xor
lods
mov
mov
pushf
int3
add
add
mov
jb
sub
add
jae
pop
xchg
loop
sub
mov
sbb
push
mov
jl
and
out
or
pop
cwtl
inc
and
stos
ret
sahf
mov
inc
repz
inc
and
ss
repz
inc
push
pusha
insb
je
cmp
repz
lods
ret
jns
out
out
inc
fmulp
ret
sahf
out
cmpsb
lcall
jb
inc
out
xchg
push
mov
iret
repz
cmp
iret
imul
das
dec
inc
pop
push
push
sbb
repz
sbb
inc
aas
cltd
inc
mov
insl
fs
and
xor
xor
and
nop
addr16
or
and
test
stos
push
ficomps
mov
jns
outsl
popa
jb
and
outsl
jne
jae
and
and
pop
push
popaw
cwtl
push
push
pop
inc
pop
jbe
js
imul
or
xchg
push
dec
inc
push
dec
jae
add
lcall
xchg
lock
push
lods
inc
mov
insl
pop
sbb
outsb
sub
inc
daa
mov
mov
dec
push
cmovle
mov
xchg
movsb
subb
out
enter
or
mov
and
dec
mov
and
sbbl
xchg
sub
and
jmp
lahf
sub
mov
inc
test
push
mov
or
mov
pop
push
arpl
xchg
and
cmp
pop
sub
mov
data16
push
push
mov
nop
push
sbb
and
sbb
fisubs
push
dec
cmp
adc
outsb
outsw
dec
adc
imul
jecxz
fisubl
in
add
das
scas
xor
and
rcrl
inc
xor
les
mov
push
outsb
jb
inc
mov
push
rcrl
pop
adc
out
and
dec
ja
inc
stos
sub
mov
aaa
and
mov
and
mov
mov
jmp
and
or
or
out
xor
mov
repz
scas
add
insl
insl
dec
jae
rolb
or
decb
adc
dec
lahf
pop
in
fstl
or
pusha
push
mov
ret
and
leave
testl
jnp
ja
ss
aaa
das
xchg
test
out
fucom
mov
lock
push
or
out
sahf
sbb
jns
out
enter
out
out
cmp
dec
and
push
xor
jge
adc
cmp
add
inc
jb
or
add
adc
rcrl
pop
add
add
inc
jbe
push
adc
adc
ss
xchg
inc
cmpsb
push
add
data16
int
and
inc
adc
jb
jne
mov
jo
sbb
pop
xor
inc
mov
adc
and
icebp
push
lret
inc
jae
dec
js
jne
adc
lcall
test
adc
pop
call
imul
inc
filds
rclb
jae
jo
sub
jae
hlt
mov
jns
das
movsl
imul
iret
adc
popf
or
or
mov
sub
xor
outsb
ficompl
into
imul
xor
xor
cmp
sub
sbb
das
add
inc
mov
pop
adc
and
pop
or
lock
dec
add
push
dec
or
pop
jnp
mov
xlat
out
dec
ficomps
lar
mov
roll
mov
jb
or
lcall
jne
repnz
inc
or
testl
bound
cs
inc
pop
repnz
mov
mov
and
popa
out
sbb
inc
out
add
out
jge
insl
iret
sbb
arpl
jo
imul
dec
subb
push
cld
fiaddl
xchg
ret
sub
pop
cmp
xor
bound
or
aaa
subb
mov
addr16
popa
cmpb
mov
ds
push
addr16
fisubs
mov
cmp
push
xlat
push
scas
sub
mov
add
jbe
jbe
out
push
pop
push
popa
paddsw
push
dec
sbb
imul
mov
push
jbe
je
ja
out
inc
add
fs
outsl
push
arpl
aad
xchg
and
imul
cwtl
test
imul
movl
dec
pusha
roll
mov
push
lahf
into
mov
scas
subb
cmp
xor
xor
xor
xor
xor
inc
xor
cli
xor
pusha
xor
decl
xor
xor
xor
mov
fwait
xor
xor
xor
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xorb
xor
decl
js
jg
mov
fwait
ss
aaa
xorb
aaa
pushf
aaa
mov
cmp
cmp
push
cmp
jmp
cmp
cmp
cmp
cmp
cmpl
dec
cmp
ret
cmp
lret
cmp
cmp
stos
cmp
or
jne
add
sub
jg
dec
xor
xchg
xchg
xor
xor
xor
xor
jne
jg
test
mov
lahf
xor
xor
xor
incl
cmpsb
xor
fnstenv
add
ss
ss
inc
ss
out
divb
and
aaa
mov
cmp
adc
mov
sarb
cmp
cmp
mov
pop
or
xor
xor
sub
jne
adc
push
add
or
sub
adc
xor
sbbb
add
adc
movsb
mov
pop
fisubl
adc
sbb
ret
push
add
shll
inc
imulb
shrl
xor
movsl
sbb
sbb
adc
outsb
xchg
dec
add
cs
test
mov
dec
mov
pop
lahf
outsl
add
mov
insl
pop
xchg
inc
mov
and
das
add
sbb
les
sbb
xor
add
cmp
jo
mov
popf
add
inc
mov
add
push
sub
stos
ret
repnz
leave
add
and
fidivs
test
mov
mov
imul
insb
push
lds
add
stos
test
ljmp
sub
inc
adc
push
jb
xchg
push
mov
es
test
xor
add
pop
add
sub
pop
leave
enter
push
push
or
xchg
add
imul
push
mov
xchg
shlb
dec
pop
or
xchg
add
sub
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
