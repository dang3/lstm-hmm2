out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
push
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
or
sbb
sbb
test
jne
pop
xchg
pop
add
cs
rcll
lods
jmp
lcall
cld
push
pop
lcall
outsb
fsubs
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xchg
or
pop
test
inc
add
stos
xchg
and
mov
and
sub
les
push
cmp
cmp
add
dec
es
int
sbb
je
push
pusha
adc
pop
testl
and
sti
leave
std
mov
ret
sub
stos
push
mov
out
inc
fs
push
add
dec
stc
mov
mov
cmp
imul
add
or
push
mov
int3
inc
dec
sar
vzeroupper
flds
jb
daa
pushf
into
pop
iret
and
daa
addr16
roll
rorb
dec
ja
daa
aad
or
inc
cmp
jb
stc
rorb
adc
xchg
sub
mul
push
and
ss
rclb
or
add
ud2
jno
out
fldcw
and
imul
xchg
cmc
push
cmp
outsl
imull
lret
test
clc
je
jae
pop
sti
mov
mov
shl
xor
jnp
data16
or
push
xchg
dec
mov
pop
mov
addr16
hlt
xlat
xor
stos
push
cmp
adc
push
adc
scas
xor
lods
add
insb
ret
or
js
cmp
or
ljmp
fldt
inc
sbb
imul
imul
nop
addr16
push
push
xor
jl
push
jl
sti
shll
xor
sbb
push
jp
in
insb
xor
adc
fldl
jp
gs
in
outsb
xchg
or
jo
out
call
mov
jmp
cs
pop
jp
imul
out
pop
pop
lock
aas
push
add
cmc
and
inc
mov
or
sbb
xchg
ficoms
cmc
sbb
jp
int3
pop
mov
nop
sub
dec
je
adc
add
add
or
jo
pop
cli
aad
sbb
adc
sbb
int3
add
inc
fmuls
test
add
add
xor
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
add
xor
pop
mov
faddl
pop
add
xor
sbb
xor
inc
xor
shll
pop
outsb
sbbb
shl
lock
cli
xor
cmp
dec
dec
shll
mov
je
out
fiadds
rol
mov
stos
adc
push
outsl
mov
jmp
lahf
shrb
add
outsl
arpl
je
adc
out
cld
je
xor
xor
bound
push
jb
jbe
insb
gs
lcall
jae
gs
xor
pop
add
inc
push
push
push
and
pushw
add
ljmp
popa
outsl
imul
fs
adc
adc
punpckhbw
data16
cmp
xor
pop
imul
insl
fs
std
xchg
xchg
cmp
aaa
stos
xor
cmp
cmpsb
xor
fistl
sub
add
cmp
std
add
dec
inc
dec
dec
stc
test
fs
insb
dec
push
push
dec
inc
dec
adc
or
mov
jno
push
inc
or
add
add
dec
pop
nop
fs
gs
add
mov
add
add
pop
mov
int
mov
adc
push
push
addr16
insl
and
outsb
outsb
outsl
je
bound
and
outsb
and
inc
dec
push
and
fs
ja
fdivrs
sbb
push
adc
add
add
idivb
jb
int
adc
lcall
test
arpl
xchg
add
stc
fs
add
popl
xchg
add
arpl
cmp
frstpm(287
push
inc
dec
add
cmpsb
pop
mov
fistps
push
or
add
and
add
add
mov
daa
add
and
xor
jbe
mov
pop
push
rclb
pop
dec
inc
xchg
aas
dec
pop
mov
shlb
add
push
pop
popa
mov
shlb
jae
cmpl
or
fnstcw
fs
je
push
or
in
xchg
dec
clc
leave
sbb
loopne
inc
push
push
pop
out
pusha
and
cwtl
daa
shrb
jae
xor
shlb
pop
dec
lcall
gs
outsl
arpl
sti
rorb
hlt
sub
imul
lcall
add
repnz
out
cmpsb
imul
jbe
and
add
sbb
enter
dec
out
dec
in
cld
adc
add
dec
xor
shll
data16
sahf
shll
ljmp
dec
and
inc
push
lcall
pop
jl
xchg
mov
imul
rcll
dec
lcall
xchg
mov
imul
sbb
shll
dec
cwtl
mov
insl
lcall
out
ds
xlat
mov
push
scas
push
arpl
add
xor
je
jle
movsb
xor
lcall
push
pop
bound
lcall
cmpsb
cmpsb
imul
imul
shll
les
mov
pop
push
mov
cld
jg
jmp
mov
jmp
jne
mov
ss
sbb
out
push
cwtl
insl
lcall
cmp
jg
and
jb
gs
shll
cmc
sbb
incb
out
push
gs
fs
sub
dec
jo
outsb
push
jb
inc
cld
xchg
enter
dec
dec
dec
dec
inc
push
roll
loop
push
data16
mov
push
dec
inc
push
push
inc
push
inc
shl
aaa
mov
outsl
data16
push
imul
fidivs
jne
dec
push
push
push
jae
outsl
outsb
sbb
push
inc
fistl
inc
sbb
add
add
or
orb
mov
xchg
add
aaa
sbb
movsb
imul
add
push
pop
pop
or
ret
in
add
and
fdivs
inc
inc
fsts
add
fsubs
test
mov
and
add
mov
mov
aas
add
pop
lret
add
xchg
fsubr
add
pop
add
adc
pop
lcall
push
leave
inc
flds
inc
mov
mov
lods
mov
pop
inc
dec
and
add
sub
ret
mov
rorb
mov
sub
or
jb
add
and
pop
xor
psubq
add
fwait
add
ja
jae
negl
arpl
je
jne
jb
gs
sbb
pop
inc
or
push
sub
add
decl
pusha
aas
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
addr16
xor
mov
sbb
cmc
xor
idiv
jbe
call
rcl
mov
stc
call
shll
popa
arpl
or
pop
inc
je
jo
leave
dec
fnstcw
sbb
sbb
sub
nop
jnp
or
inc
movl
dec
push
pop
push
push
push
mov
imul
jge
mov
add
outsl
je
ss
pop
ja
jns
push
aaa
je
leave
push
xchg
xor
sti
idiv
imul
jl
or
pop
add
sti
or
ret
sub
jne
add
cs
push
add
cli
sbb
gs
popa
insl
gs
std
mov
dec
loopne
outsl
jb
inc
popa
jb
pop
addr16
mov
mov
xchg
jo
outsb
imul
push
or
jno
jae
jp
pop
sarb
in
clc
ret
cld
mov
sti
pop
test
xlat
movsl
mov
or
push
push
lea
fnsetpm(287
decl
lea
or
leave
pop
mov
push
add
push
loopne
and
or
inc
lcall
inc
enter
into
sbb
pusha
out
ljmp
and
jnp
inc
add
out
lret
dec
call
jbe
jmp
rol
pushf
call
inc
outsl
and
pushf
stc
add
push
mov
xlat
mov
pushf
inc
or
sub
and
add
add
xor
pop
pop
pop
push
cmp
xor
pushf
data16
and
mov
push
jmp
add
push
cmp
mov
stc
neg
rol
shlb
cld
shl
cmp
pop
add
into
mov
stos
xchg
rcrl
pop
pop
ss
pop
rcl
subb
insl
or
add
fs
pop
or
and
out
push
mov
cmp
cwtl
shl
repnz
sub
in
insl
das
mov
out
test
mov
mov
inc
xor
inc
jg
sub
sbb
pushf
fstpl
push
add
call
mov
push
push
loopne
mov
adc
mov
push
push
pop
clc
pop
push
mov
andl
loopne
push
mov
push
outsb
or
sbb
sub
xor
rorl
call
fcomip
das
cwtl
and
push
push
push
call
in
add
idiv
test
mov
sub
sub
mov
movb
inc
or
movb
or
push
push
xor
lods
std
fldl
jne
inc
pop
orl
cs
fstpt
push
pop
ret
mov
lock
or
inc
test
push
call
xchg
ds
add
aaa
fcompl
and
mov
outsl
es
call
xor
sbb
push
movzbl
xor
cmp
ficomps
adc
clc
add
mov
andb
mov
or
push
aaa
fstpt
aas
mov
adc
mov
mov
sub
add
sar
inc
repnz
add
push
jne
add
inc
repnz
add
add
aaa
jmp
push
sub
jge
shrb
rclb
push
push
out
or
jecxz
pop
dec
sarb
add
adc
lcall
aaa
jmp
or
test
jne
ret
push
outsl
mov
pop
jne
dec
cmp
lret
and
mov
sub
adcb
mull
mov
xor
and
sbb
or
sub
or
cmpsl
sbb
and
enter
fnstcw
mov
push
pop
jne
or
fadd
push
push
add
jg
fistps
push
call
mov
cmp
jg
add
jge
push
push
jmp
xchg
sbb
test
lds
push
push
and
push
sbb
ret
or
xchg
mov
sbb
scas
mov
jnp
push
or
and
int3
xor
adc
jnp
mov
lock
add
mov
inc
inc
fisubs
push
jo
mov
arpl
mov
sti
rep
jb
push
xchg
insb
outsl
jae
dec
dec
mov
or
orl
pop
call
push
testl
mov
rolb
sti
push
outsl
or
sarl
push
mov
add
not
xor
xor
inc
cmp
cmc
jmp
jg
mov
jl
pop
cmp
or
call
fmuls
pop
pop
add
cmpl
and
insb
shlb
stc
add
add
adc
add
repnz
shlb
lahf
in
bnd
and
js
and
je
and
cld
inc
and
and
mov
and
sbb
adcb
sub
mov
repnz
jle
and
ljmp
add
cmp
push
int3
insb
aas
stos
dec
fwait
xor
imul
fidivrs
push
push
mov
add
cmp
fsts
cwtl
cmp
rcll
dec
enter
sbb
in
repnz
add
in
add
add
pop
adc
adc
inc
cs
adc
dec
into
popf
out
cld
in
jo
and
mov
push
add
fnstenv
orb
pop
jnp
aas
add
test
and
pop
lahf
xabort
pop
adc
and
andb
lcall
jae
cmc
pop
lcall
clc
pop
mov
stc
cli
push
cs
fistpl
movsl
fs
insb
std
lret
je
popf
dec
dec
stos
push
cmp
add
push
push
jnp
cltd
jnp
and
in
call
je
mov
xlat
and
cmp
cmp
jle
in
mov
add
jle
push
cmp
jle
scas
outsb
sar
mov
jno
cmp
ja
cmc
adc
inc
pop
loopne
adc
cmp
je
test
movsb
pop
clc
mov
mov
incl
mov
push
in
jne
cmpl
daa
incl
mov
sub
add
inc
cld
stos
xor
mov
fbstp
div
clc
jmp
andl
hlt
add
rcrl
jl
inc
cmp
mov
addr16
bound
mov
cli
push
adc
sub
out
or
xor
fistpl
dec
sub
jne
data16
aam
imul
negb
jbe
mov
sbb
mov
jnp
add
insl
outsl
aaa
clc
add
add
test
ret
add
test
push
fucom
push
je
mov
test
jge,pt
and
in
lods
add
and
push
jmp
adc
pop
in
add
xor
fdiv
fistl
daa
or
xchg
and
xor
inc
idiv
adc
jg
push
clc
ljmp
lahf
andb
mov
jmp
xor
or
inc
add
add
push
enter
and
adcl
and
push
push
dec
repnz
adc
lret
das
push
add
in
les
adc
push
add
outsb
les
and
stc
gs
test
and
xor
and
fs
pop
fcoms
add
push
push
cwtl
pop
pop
sbb
mov
sub
pop
adc
rcl
mov
jmp
xlat
xor
mov
pop
ja
xor
mov
cmpb
and
or
push
pop
xor
enter
cs
cli
decl
icebp
mov
imul
add
andl
push
or
in
jg
inc
sub
and
or
imul
outsb
int
insl
adc
and
push
add
or
jge
and
push
outsl
incl
call
loopne
cmp
jae
incl
lret
outsb
incl
add
stos
leave
je
inc
push
mov
dec
or
fisttps
adc
jmp
mov
jne
or
aam
lock
mov
rorb
rolb
or
rcll
cli
inc
jecxz
or
jne
xor
cmp
lret
in
fldl
jne
pop
push
inc
push
imul
jno
cwtl
cmp
outsl
jg
mov
and
push
jl
and
or
add
lea
js
xlat
sbb
mov
mov
add
push
repnz
not
and
mov
jns
add
lea
test
pop
lret
push
js
add
push
aam
or
fucomi
fwait
inc
fisubs
fimull
add
lea
jg
fstpl
out
xadd
adc
pop
inc
sub
mov
and
mov
sarl
inc
fiadds
psllq
sub
rorl
push
shr
or
add
dec
fildll
sub
xchg
sbb
imul
lods
loop
mov
push
mov
jns
fcomip
shlb
push
mov
mov
adcb
sub
xchg
rcr
js
pop
mov
jecxz
sbbb
xlat
loopne
fisubrl
aaa
sbbb
or
mov
repz
sub
adc
test
roll
mov
fisubl
jl
or
sbbl
fisubrl
insb
pop
int3
xor
add
xchg
pop
xchg
lods
add
out
xor
add
mov
adc
jne
les
repz
lret
pop
fcomp
cwtl
subb
addl
repz
sbb
add
rcr
das
pusha
sbb
stc
test
das
pop
scas
testl
mov
pop
les
subb
lret
inc
xor
mov
push
loop
movups
sarb
sub
sub
fcom
out
repnz
or
fdivrs
lods
jne
loop
mov
int
xor
les
adc
xchg
xor
or
or
xchg
jno
std
stos
lods
pop
popa
sti
mov
cld
add
and
pop
mov
enter
das
push
mov
pop
jae
pushf
cmpsb
pop
mov
xor
add
and
xchg
or
pop
jnp
scas
and
or
popa
adc
add
or
out
jbe
insb
mov
ret
add
and
aad
fidivl
mov
bound
sbb
icebp
lods
pop
xchg
shlb
clc
jg
cld
ret
dec
cmp
inc
rclb
push
fcom
pop
xor
daa
clc
lcall
push
pop
pop
es
adc
repnz
sbb
movsb
lods
xchg
clc
dec
and
pusha
and
mov
push
xchg
call
insl
mov
mov
hlt
pop
adc
call
sbb
popa
imul
mov
cmp
push
adc
add
and
in
push
repnz
pop
and
clc
cmp
jge
cli
fnstcw
in
sti
shl
jg
or
add
outsb
jmp
fidivl
and
sbb
loopne
ret
inc
enter
das
add
pop
aaa
or
mov
push
fisttps
xlat
mov
inc
fimuls
sahf
sbb
push
cmp
imul
call
mov
adc
inc
loop
shr
or
xlat
xchg
fdivs
test
xchg
sbb
xlat
mov
cld
push
imul
and
sub
aad
jae
lret
repz
outsl
adc
cmp
lcall
cmp
iret
sub
xor
test
hlt
inc
cmp
pusha
sbb
in
lcall
mov
iret
das
cmpb
divb
adc
or
cs
js
lds
popa
popf
insl
in
push
xchg
adc
inc
sti
xor
mov
repnz
insb
out
enter
std
mov
or
in
inc
inc
ljmp
cmp
push
adc
xchg
lods
aam
cltd
jb
repz
sub
int3
pop
pusha
dec
mov
mov
jno
cli
xor
lock
push
jo
mov
out
loop
faddp
or
mov
jle
sub
jae
mov
add
sbb
lock
clc
cli
daa
mov
loope
orb
xor
xor
test
js
xor
aam
xchg
jae
adc
fimuls
cmpsb
xor
xchg
out
out
cmp
or
test
push
aas
sbb
cmp
rcl
fstps
js
jbe
les
in
fldt
out
mov
mov
ss
out
popf
push
in
clc
jl
pop
je
pop
mov
mov
cmp
or
les
push
mov
cli
mov
mov
stos
test
dec
mov
stos
rcrb
sbb
outsb
insl
mov
in
sbb
jl
inc
int3
dec
xchg
out
or
inc
push
or
cwtl
push
push
cmpsl
and
adc
lock
xchg
aaa
femms
hlt
cmp
insb
pop
int
adc
mov
dec
aas
cmp
pop
pop
gs
sbb
int
loopne
rcrl
mov
or
push
or
ja
xchg
sbb
jge,pt
out
decl
frstor
adc
adc
in
dec
pop
lcall
sub
ds
fcomps
repz
jle
outsl
jecxz
jp
sbb
mov
xor
sbb
out
rorb
jp
ret
cs
shlb
mov
nop
fbstp
mov
cmpb
out
jb
lds
jp
xlat
sbb
xor
mov
xor
out
loopne
outsb
push
test
xor
aam
int
mov
adc
repnz
sub
pop
rclb
xor
insb
lea
dec
mov
pop
jge
xlat
pop
add
mov
movsb
mov
imul
xor
pop
hlt
prefetch
inc
js
cmp
inc
sub
mov
cld
adcb
aaa
jge
cmp
jl
push
pop
sub
push
push
lea
xor
lcall
leave
inc
out
orl
insb
js
inc
enter
insb
xlat
sbb
addps
outsb
lea
pop
lahf
jg
stos
jne
pop
inc
test
nop
iret
pop
pop
mov
mov
mov
into
ljmp
add
add
mov
push
dec
jne
pusha
test
adc
cmpsb
pop
ljmp
add
mov
lret
fcomi
jne
shr
cmp
je
sbb
mov
sbb
fdivs
mov
sub
jne
inc
cmp
jne
cmp
lods
outsb
aad
add
sub
int
sub
pop
mov
adc
test
dec
push
mov
scas
inc
jl
repz
fiadds
jg
adc
inc
cmp
shll
add
je
rcrl
fstpl
andb
cmpsb
xchg
outsl
mov
jmp
rol
outsl
loope
lea
inc
js
mov
out
mov
jl
inc
adc
jmp
std
xchg
popf
lret
add
stos
pop
pop
push
aaa
or
ja
add
sub
jne
push
lea
adc
testb
negl
mov
sbb
push
push
mov
test
jae
dec
popa
movsb
pop
push
pop
mov
mov
cld
call
sub
in
pop
icebp
adc
je
cld
xor
in
dec
cmp
out
or
testb
mov
jo
enter
or
cmp
in
test
add
pop
adc
mov
in
mov
jnp
int3
push
xchg
insl
mov
int3
rolb
aam
call
fidivrs
xchg
pusha
mov
adc
adc
stos
pop
subb
out
iret
xlat
rolb
in
gs
das
out
jge
lock
jo
hlt
divb
pop
xchg
lods
pushf
cltd
pushf
or
clc
int
or
std
and
or
es
mov
jnp
and
pop
fcomp
iret
mov
lods
cltd
dec
mov
sub
leave
mov
lods
outsb
les
fimuls
cmp
inc
push
pop
jmp
pop
fstpl
xor
and
call
insl
sti
imulb
push
ds
push
push
movb
pop
cs
lret
in
dec
out
push
out
push
lock
icebp
inc
pusha
pop
insb
mov
repz
lds
mov
push
push
cli
pop
adc
pop
add
sbb
push
mov
sbb
cmp
add
add
mov
and
or
inc
dec
cmpsb
sbb
xchg
and
fwait
xor
inc
decb
adc
sti
adc
and
jge
add
frstor
mov
xor
cmp
xchg
setae
roll
xor
adc
das
insb
pop
scas
sub
push
fcoml
test
adc
adc
ficoms
bound
out
notb
push
mov
and
je
push
dec
loopne
jae
xor
mov
dec
je
negb
push
es
popa
clc
popa
leave
sbb
lea
adc
cltd
push
outsb
movsb
leave
adc
add
aas
sub
sbb
jbe
sbb
fs
clc
add
or
cmp
lock
hlt
push
insl
push
sbbb
jbe
cmp
jmp
pop
jecxz
pop
mov
sub
adc
xchg
call
lods
inc
inc
inc
inc
pop
mov
rcr
sbb
jb
pop
dec
mov
pop
and
enter
add
mov
repnz
cli
pop
fnsave
sti
pop
adc
andl
mov
mov
mov
dec
cld
pop
jb
push
pop
pop
bound
adcl
mov
std
jns
out
subb
cmp
je
dec
jle
fdivl
jne
pop
push
arpl
pop
mov
in
ja
cmp
xchg
push
arpl
pusha
andb
enter
xchg
aad
push
xchg
add
sub
cwtl
cmp
inc
ja
movl
or
test
mov
loope
pop
xchg
inc
add
sahf
sbb
add
jb
adc
push
addb
mov
gs
cmp
sbb
cmp
clc
add
push
call
pop
icebp
ret
lcall
adc
clc
inc
push
sbb
sbb
call
fwait
aam
shl
or
ud2
sbb
mov
push
jo
orb
sbb
je
into
cmpsb
inc
out
daa
fnsave
mov
inc
call
nop
xchg
xchg
test
xchg
cmp
ja
pop
push
testb
mov
cmp
iret
enter
cmp
jne
push
js
leave
mov
int
call
add
and
jbe
gs
mov
stos
int3
sub
xor
or
and
jae
push
or
ss
cwtl
loopne
ret
mov
rcr
das
or
jne
fadd
cmp
and
jne
xor
ret
jae
inc
jmp
add
push
dec
out
mov
jle
test
xchg
mov
je
in
mov
sbb
mov
lods
mov
aam
in
scas
add
push
push
push
nop
aam
or
loopne
test
adc
ret
addr16
mov
mov
cwtl
insb
loopne
ljmp
mov
sub
jne
mov
fcomps
cmp
shrb
mov
call
dec
mov
repz
sub
mov
adc
xor
insb
out
sti
sub
mov
add
jmp
lods
std
or
imul
insl
jne
addb
lods
mov
aam
xor
clc
cmp
mov
mov
mov
pushf
push
mov
lods
sbb
mov
je
cmp
mov
mov
fiaddl
scas
or
ss
jle
mov
je
jo
push
push
jne
xchg
sbb
fcompl
pop
mov
outsl
in
outsl
push
and
pop
adc
pop
pop
call
mov
pop
jmp
call
mov
pop
or
cmpb
xor
or
mov
or
cwtl
pop
cmpsl
idiv
xchg
adc
xorb
jmp
dec
mov
inc
movsl
mov
movsb
ret
insl
sti
lea
push
mov
test
roll
cmp
adc
pusha
stos
or
in
or
decl
xchg
push
sbb
jg
gs
nop
leave
lods
lods
push
mov
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
mov
mov
cs
mov
insb
movsl
xchg
outsb
mov
rcl
js
xor
in
shlb
insb
aam
aad
insl
lcall
and
fcmovu
gs
lcall
test
loop
jecxz
sub
pop
mov
in
push
out
dec
out
call
jmp
insl
jae
cmpsb
imul
mov
rol
repnz
xor
add
xor
mov
shll
leave
lret
cmp
int3
je
mov
hlt
xchg
push
xchg
xchg
mov
insl
rcrl
pushf
adc
scas
sahf
mov
mov
insb
fwait
insl
mov
movsb
inc
add
imul
cmc
negb
cmpsb
idiv
ds
hlt
cli
jns
lea
bound
mov
pop
mov
in
stos
test
sbb
jl
test
and
es
add
adc
inc
pop
mov
lret
pop
ss
nop
or
lods
add
loopne
sub
pop
out
ds
mov
arpl
or
jmp
dec
rcrb
mov
xchg
xchg
push
insl
dec
push
and
cmc
adc
mov
shrl
out
js
div
shrb
clc
addl
push
or
jge
sti
inc
xchg
cmp
dec
adc
cs
shl
and
imul
shll
pop
cli
inc
dec
jbe
pop
mov
add
int
dec
daa
mov
push
inc
sub
nop
jmp
aaa
sbb
loop
sbb
sbb
ret
ret
jmp
test
aas
mov
nop
call
sti
gs
or
jge
pop
andb
rclb
dec
jno
and
mov
or
sbb
mov
inc
stos
mov
mov
je
fadds
shll
xor
fdivrs
lahf
or
outsb
and
or
push
daa
lock
insb
pop
and
dec
sarb
sub
shll
push
int3
or
cmp
aaa
xchg
les
add
lea
bswap
pop
xorl
leave
or
dec
mov
jo
push
icebp
inc
std
push
and
cmp
pop
sbbb
push
jecxz
or
or
cmp
and
and
add
ret
push
sub
push
adc
inc
pop
add
jl
lcall
push
ljmp
int
faddl
jp
lret
adc
mov
frstor
adc
pop
jne
sub
ljmp
jl
pop
mov
xchg
cmc
add
movsl
pop
rcrb
cwtl
lods
push
les
fadds
cmpl
lods
into
xchg
stc
cmpsb
jne
push
sub
in
pop
in
addr16
fcoml
mov
mov
aad
hlt
in
cmp
call
push
xchg
add
xchg
cmp
inc
mov
leave
rclb
mov
test
in
mov
sarb
andl
mov
sub
pushf
cld
xor
add
in
add
sbb
cld
stos
xor
pop
adc
aam
sbb
or
push
xor
sub
cld
adc
jmp
and
imul
jmp
pop
outsl
scas
cltd
lea
mov
sub
cld
call
sar
adc
andl
fmuls
call
fsubrl
xchg
cmovbe
mulb
mov
mov
xchg
js
cmp
push
icebp
andb
test
pop
cs
int3
dec
int
jp
imul
insb
popa
push
dec
mov
lcall
fs
xor
insl
fidivl
fildl
fstp
jae
shrl
mov
jae
xor
xor
adc
cli
sti
imul
xor
std
insl
lcall
cmpsb
imul
shll
mov
es
outsb
cltd
pop
movsb
imul
pop
enter
pop
lret
in
insb
sub
or
gs
xlat
ljmp
adc
repnz
and
popa
jo
mov
mov
out
cmp
xorl
dec
xor
ficoms
test
fdivrs
sbbl
xlat
pop
push
andb
cmp
dec
fstpl
hlt
dec
inc
xchg
add
in
sbb
loopne
mov
mov
mul
push
cmp
sub
out
sbb
pop
lret
aad
push
jb
xchg
pop
shrl
psubsb
ljmp
fs
in
outsl
out
ja
fcompl
add
jb
pusha
shll
insb
je
sbb
cs
cmp
ja
les
lcall
mov
push
scas
int3
fnsave
cs
inc
loopne
jb
push
fsubrl
andb
aam
int3
add
int3
shl
jb
add
pop
push
pop
add
mov
push
push
push
add
es
inc
ret
and
and
mov
push
or
inc
sbb
dec
sbb
shlb
mov
shll
xor
xchg
clc
lock
mov
jge
cmp
and
jb
adc
jl
push
lret
fsubs
rorl
clc
xchg
in
add
push
sub
mov
fsts
in
lods
insl
pop
push
adc
dec
in
push
or
xor
rcr
sbb
and
bound
xor
call
int3
add
data16
xor
stos
or
movsl
hlt
add
fs
cmc
cmp
sbb
mov
dec
adc
or
lods
loopne
jecxz
hlt
push
mov
pop
push
mov
int3
mov
cld
popl
pusha
push
fidivrs
sub
mov
mov
pop
cmpb
out
pusha
cmc
add
mov
pushf
sub
push
pop
cli
ss
icebp
lahf
mov
mov
cwtl
and
or
mov
rcl
adc
rcl
dec
rcr
std
mov
clc
stc
push
cmp
shld
call
scas
add
jge
dec
outsl
outsb
out
mov
nop
add
add
mov
inc
and
push
mov
daa
call
cmp
sub
test
jnp
fbld
test
loopne
or
call
fcompl
mov
sub
pushf
dec
jg
mov
mov
pop
call
dec
jo
pop
or
cmp
adc
inc
into
xchg
daa
cmpb
push
adc
nop
sti
aas
sub
sub
sub
xlat
cmp
icebp
and
jae
sbb
dec
push
adc
pop
add
scas
fcompl
inc
pop
fsubr
outsb
fs
sbb
addl
mov
imul
je
jle
lret
fcmovu
aas
popa
pop
sub
lret
in
cmp
popf
es
fnstenv
mov
imul
shll
lods
pop
scas
ss
shll
mov
mov
jb
lcall
mov
insb
insl
xchg
dec
mov
mov
jns
lcall
rol
shll
fidivl
insl
enter
outsb
lret
shll
or
insl
bound
xor
cmp
jae
dec
shll
shlb
outsb
cmp
xchg
and
xor
jbe
pop
out
jmp
insl
jmp
daa
in
popa
in
out
sbb
and
push
fs
lcall
sbbb
jae
in
mov
rorb
mov
call
adc
sahf
incb
clc
push
iret
pusha
sbbb
repz
lahf
ficoml
xchg
iret
insb
adc
inc
or
shrl
inc
lock
push
leave
ss
fsubl
adc
mov
out
mov
add
xor
add
mov
insl
movb
adc
push
xor
mov
push
insb
add
andb
jmp
cltd
sub
push
pinsrw
sti
pop
or
jmp
inc
pop
adc
pop
je
sbb
ds
aas
push
pop
ret
sub
daa
push
out
call
popa
fidivrl
cmp
fldenv
cmp
hlt
sub
mov
jge
jmp
add
cld
push
fldenv
sbb
cmp
stc
mov
cmp
inc
inc
rcll
ss
hlt
xchg
xor
mov
lods
mov
dec
lods
push
push
or
repnz
lcall
xlat
cmp
inc
mov
lea
push
push
pop
sbb
imul
jne
adc
clc
call
sbb
repnz
aas
lds
les
cmp
fdivs
adc
xchg
mov
mov
fidivs
xchg
lea
push
mov
dec
fisttpl
xchg
add
cmp
test
pop
cmp
pop
cs
hlt
js
inc
sahf
hlt
inc
hlt
push
and
into
push
dec
std
rorb
inc
and
lds
mov
pusha
mov
outsb
mov
inc
sbb
push
push
push
mov
rcr
je
mov
or
pop
push
adc
dec
call
mov
pop
xor
aaa
add
rclb
ss
push
ja
das
daa
inc
add
movsb
mov
test
pop
pop
test
adc
push
mov
call
icebp
jns
jo
adc
call
push
mov
jns
and
pop
add
or
les
add
mov
xchg
jmp
insl
fs
jl
inc
push
cld
cltd
xchg
lea
mov
std
inc
stc
cld
adcb
xchg
xchg
mov
cmp
pop
and
dec
cmpsb
leave
cmpsl
xchg
nop
loopne
xor
jle
icebp
or
rcrl
ljmp
fwait
shll
push
inc
lret
xor
fisttpl
adc
jo
fucom
or
mov
aaa
cmc
call
orb
adc
mov
push
inc
push
mov
push
iret
mov
data16
pop
adc
and
push
mov
stc
push
jae
jecxz
cmpl
inc
add
push
test
sar
sbb
arpl
lcall
cmp
rol
inc
cmc
shl
mov
pushf
xor
daa
push
imul
xlat
push
and
neg
xor
and
cmpsb
or
dec
shlb
popf
add
hlt
gs
andb
pop
xchg
gs
xchg
outsl
outsb
je
pop
dec
push
fwait
add
and
lods
fildll
sbb
lods
hlt
js
adc
adc
mov
into
addr16
xor
sbb
jne
adc
mov
aaa
sub
addl
and
mov
fsubrp
inc
or
in
arpl
ljmp
sbb
sbb
outsb
insl
addr16
imul
xor
or
xchg
data16
gs
js
incl
add
pop
loop
adc
inc
pop
mov
mov
inc
pop
call
push
rcll
mov
add
jne
jmp
gs
and
in
mov
mov
or
stos
pop
pop
ret
aas
or
aas
and
and
in
shlb
and
and
shlb
xor
and
js
inc
jns
push
mov
mov
test
and
ljmp
mov
or
and
push
add
push
jne
gs
sub
test
nop
push
inc
sbb
jb
cmp
je
pop
test
push
push
pop
pop
hlt
jle
inc
xor
call
ror
push
dec
fdivrs
fidivs
dec
call
arpl
cmp
mov
les
pop
addb
or
cld
andl
fbld
mov
pop
push
je
add
out
pop
in
push
push
add
mov
ds
add
adc
loopne
das
stc
daa
adc
arpl
ljmp
add
sbb
shrl
lds
test
cmc
sub
pop
xchg
gs
rcl
fcomp
pop
fdivl
out
call
aaa
or
xor
and
aas
inc
es
add
jnp
inc
stos
mov
jp
inc
inc
hlt
adc
inc
packsswb
cmp
mov
and
adc
cmp
loopne
enter
mov
pop
jb
dec
mov
pop
les
cmp
and
push
fxch
jo
or
add
cltd
mov
testl
loopne
test
and
mov
jmp
sub
adc
inc
loop
fsubrl
xlat
inc
and
xor
loop
dec
lock
frstor
lret
ss
push
ret
rorb
xor
fiaddl
sub
pusha
js
dec
push
outsl
jp
or
fistl
push
dec
shll
xor
dec
pushf
dec
inc
dec
shll
insb
cmpsb
imul
imul
dec
repnz
movsl
fcoml
outsb
je
push
jb
jbe
mov
mov
push
movsl
pop
cs
push
gs
lret
scas
stos
push
lods
lods
push
dec
lret
mov
lret
je
jo
jo
sub
mov
outsb
push
dec
gs
mov
fwait
shrb
roll
xor
mov
aam
mov
insl
mov
lea
mov
enter
es
insl
lcall
xchg
inc
imul
fldenv
fcmovnu
push
fstl
lcall
loope
loop
in
test
out
mov
xor
mov
jb
mov
cmpsb
pop
xlat
or
mov
mov
mov
pop
fstps
or
sbb
and
and
ja
and
or
daa
xor
lret
and
stc
mov
std
andb
add
cmp
pop
cmp
xor
cmpsl
cmc
add
cli
inc
xlat
scas
and
jne
imul
xor
xchg
fisubl
sbbb
shrd
rcll
sub
mov
shrb
clc
jp
fwait
mov
in
je
push
adc
adc
imul
pusha
icebp
and
je
icebp
imul
ss
pop
aad
cmp
movsb
or
dec
inc
loopne
repz
adc
add
add
sbb
popa
clc
lds
jne
pop
pop
push
and
popa
or
bound
fildl
lock
fs
push
xor
test
outsb
enter
or
sub
jb
fcoml
xchg
xor
idivb
lsl
xchg
call
movsl
or
ret
add
cmp
faddl
aam
adc
dec
mov
mov
aam
es
fstl
add
sbb
test
jmp
or
les
or
push
or
addr16
cmp
mov
adc
push
shll
mov
push
iret
lds
je
not
mov
divb
push
stos
fcmovnbe
repnz
inc
sbb
pop
jae
rcl
in
shll
out
and
lds
fistpl
mov
fstps
xchg
inc
test
bound
sti
std
mov
xor
pushf
xor
jmp
jle
sbb
jns
dec
in
ret
cmp
pop
xor
into
sub
mov
int
inc
or
scas
jp
mov
push
iret
mov
add
xor
pop
and
leave
repz
or
adc
sub
sub
xor
je
jns
add
je
jns
test
sbb
jl
or
jns
push
jle
adc
adc
in
sub
adc
pop
xor
repz
fadd
mov
addb
mov
out
adc
sti
mov
loopne
jle
gs
add
xor
or
pop
arpl
outsb
pusha
pop
xchg
gs
imul
movsb
push
cmpsb
jne
and
mov
jg
jmp
ss
cwtl
adc
push
and
cwtl
adc
jne
scas
push
push
mov
in
dec
mov
or
or
sub
pushf
xchg
daa
and
int
and
shll
sub
jle
or
ror
addb
cmp
cwtd
fisttpl
sbb
cmp
cwtl
sbb
pop
clc
push
and
arpl
pop
push
das
sahf
push
rorb
aad
inc
mov
xor
cld
and
mov
add
packssdw
stos
gs
bound
mov
aaa
js
notb
repnz
and
sub
sarl
rolb
mov
and
mov
leave
call
cwtl
add
or
addr16
cmp
push
inc
loopne
ss
aad
sti
inc
ja
and
mov
and
mov
xor
or
inc
pop
inc
lcall
lret
mov
xchg
aas
popa
arpl
lret
mov
outsl
outsb
cmp
lret
jb
popa
push
imul
shrl
gs
lods
xor
and
aaa
pop
mov
pop
mov
ret
cmp
lcall
je
outsl
xor
add
outsb
mov
shlb
rorb
sub
arpl
cmp
fs
loopne
loope
imul
imul
dec
aaa
mov
insb
je
ret
outsb
imul
cmp
xor
shll
outsb
es
xor
cmp
je
mov
dec
filds
or
call
repnz
aam
adc
mov
in
adc
xchg
loopne
out
stc
pop
sub
cmp
shll
stc
mov
or
jne
push
test
call
fsts
fdivrl
cld
pop
xchg
add
add
inc
cmpsl
pop
inc
dec
or
add
mov
mov
bnd
insb
ret
stos
and
enter
jb
lcall
sti
push
negb
cmp
xor
mov
aam
add
sub
lahf
addr16
xchg
cltd
insl
fsubrs
sub
xchg
sbb
xor
fcompl
es
or
enter
iret
xor
in
cmp
fcoml
mov
pop
cltd
je
mov
je
or
sti
outsb
loopne
add
mov
cwtl
sub
pop
jae
and
incl
sar
push
mov
stos
xor
cs
jnp
pusha
cld
add
popa
dec
adcl
adc
add
jmp
pushf
or
iret
out
cmc
mov
push
movl
jge
outsl
in
sbbb
lods
adc
and
mov
push
xchg
data16
sarl
xchg
add
loope
loopne
fs
push
dec
sub
xchg
in
add
sub
dec
dec
imul
insl
bound
sbb
jae
leave
movb
bound
std
jl
mov
push
jo
xor
mov
adc
add
leave
enter
cld
add
mov
dec
insb
out
jns
jb
shll
outsb
int
int3
push
mov
push
into
jae
pop
fcmove
cmc
sbb
cmp
shl
call
or
pop
nop
mov
dec
push
adc
adc
pop
or
into
adc
int3
jg
xor
mov
jl
jp
jecxz
fisubrs
bound
mov
call
add
and
lahf
cwtl
movb
adc
mov
lea
jmp
xor
imul
pop
xor
mov
mov
pop
jl
jne
push
enter
add
mov
jp
jg
xor
adc
imul
push
add
enter
sub
xchg
iret
sub
sbb
mov
sbb
data16
or
jbe
pop
xor
jne
pop
and
cmp
jg
and
inc
jnp
sbb
nop
enter
std
repnz
mov
loop
add
andb
aas
xor
inc
jmp
adc
mov
pop
sti
jg
sub
cmp
xor
push
clc
pop
mov
push
jge
sti
jmp
in
lahf
insb
jle
inc
lea
jmp
and
xchg
leave
int3
stos
and
or
adc
insl
movsb
pop
pop
jl
test
gs
pop
mov
sub
test
jle
mov
or
jge
fmull
push
add
mov
push
jo
cmp
iret
rorb
test
inc
xor
push
scas
cltd
scas
test
enter
sub
adc
mov
movsb
stos
dec
inc
pop
add
mov
xor
cmp
push
inc
mov
ss
sti
addr16
jecxz
add
push
sbb
sub
pop
out
pop
mov
xor
mov
pusha
sahf
sbb
jle
cmp
loopne
adc
sub
push
mov
add
dec
ret
adc
sub
or
lock
mov
or
xchg
xor
or
notb
mov
call
push
mov
jge
xor
cmp
ror
int3
jecxz
xor
loope
push
push
or
lock
lret
adc
cmp
pop
mov
bound
call
sub
rorl
pop
jbe
cmp
jbe
mov
out
cmp
ret
in
aad
push
pushw
pop
sub
xchg
add
cmp
into
call
lods
add
je
sub
add
mov
push
mov
stc
sub
repnz
cmp
out
sub
xor
pop
aam
testl
jns
insb
jbe
fcompl
ds
mov
sub
jmp
or
mov
rolb
push
subps
and
mov
add
rcrb
call
mov
xor
lahf
pop
or
mov
out
sub
sub
arpl
xor
lods
lds
sbb
cmp
sbb
push
mov
and
mov
stos
call
lret
pop
mov
mov
clc
push
push
hlt
ret
loopne
int
pop
fdivs
mov
mov
insl
or
mov
cmp
sbb
cmp
jb
pop
adc
insb
xchg
sbb
add
cld
rcl
rcl
hlt
jecxz
push
shlb
shll
mov
add
dec
shrl
fs
insb
out
or
arpl
jbe
cmpsb
imul
outsw
insl
jne
out
or
mov
add
mov
loope
add
add
xchg
mov
sbb
int3
repnz
aaa
aaa
xor
dec
xor
enter
mov
pusha
cmpb
movsl
mov
mov
add
add
jno
adc
and
sti
sub
mov
dec
enter
jb
inc
add
mov
and
cmp
sahf
push
mov
sub
mov
add
push
inc
loope
pop
sahf
cmp
push
gs
pop
fcompl
test
adc
add
jo
mov
stos
mov
cmpl
hlt
or
xor
int
push
loopne
pop
and
je
xor
gs
hlt
notl
pop
inc
cmp
add
pop
je
xor
xchg
loop
das
push
shll
pop
lcall
movsb
sti
stos
je
movzbl
push
pop
clc
xchg
inc
push
sbb
div
push
call
out
adcb
sbb
and
es
sub
push
iret
jbe
xorl
add
inc
push
test
push
insb
jo
jo
adc
insb
imul
dec
push
dec
shll
gs
jb
adc
shll
outsb
outsw
cmc
lds
dec
jae
in
xor
icebp
jne
add
push
sbb
bound
xlat
fildll
call
nop
pop
dec
push
and
xchg
xchg
dec
cmp
sarl
loopne
xchg
and
adc
loope
js
sbb
mov
test
xchg
aad
mov
pushf
outsb
inc
cmp
out
mov
inc
int
js
cmp
rclb
xor
mov
ja
jo
push
dec
mov
or
cmpsl
in
push
imul
push
hlt
pop
imul
push
and
jle
push
jbe
pop
sub
push
out
out
cmp
fstps
xor
lock
movsb
xlat
fwait
sbb
add
push
and
xchg
dec
xchg
out
movsl
stos
imul
arpl
push
mov
or
mov
jmp
cmpsb
mov
mov
outsb
cs
add
jp
enter
add
enter
dec
adc
push
cmc
push
insb
gs
xchg
gs
outsl
data16
xchg
gs
xchg
popa
jb
pop
dec
imul
outsl
jae
cs
xchg
gs
push
fs
fs
outsl
ja
push
in
add
imul
outsl
push
popa
les
xchg
gs
pop
dec
push
dec
inc
and
arpl
adc
add
mov
movsb
rorb
mov
pop
fisubs
mov
jl
int3
add
lods
pop
xor
xchg
data16
xor
add
push
cmp
adc
pushf
cs
idivl
pop
xor
call
mov
fcmovne
insb
pop
mov
dec
push
or
gs
mov
jne
mov
xchg
dec
mov
mov
les
mov
mov
movsl
push
sarb
xor
fiadds
mov
stos
shrb
fdivrl
inc
adc
movsb
or
xchg
loopne
aam
shrb
adc
inc
jl
add
cwtl
nop
push
push
repnz
rep
sti
movsb
lods
jge
cmp
sbb
daa
shll
imulb
call
cmp
push
movsl
jnp
and
cli
sbb
mov
push
jl
movsb
aaa
xchg
adc
out
test
inc
push
fldenv
imul
imul
dec
xchg
imul
loop
fs
jae
in
imul
call
push
daa
in
and
pop
lcall
mov
push
fistpl
xor
into
pop
sub
push
sub
arpl
imul
jae
movsl
cmp
das
or
mov
std
mov
sbb
daa
dec
ja
jp
push
data16
and
je
gs
jg
xlat
enter
ror
mov
imul
xchg
mov
in
and
into
arpl
insl
mov
xchg
rcl
lcall
mov
je
sbb
sbb
mov
sbb
sbb
cs
lcall
pop
lcall
push
pop
imul
lcall
adc
mov
movsl
push
outsl
jo
jno
jns
cmp
pop
jb
je
cmp
cmpsl
jne
jbe
adc
sbb
mov
into
into
dec
mov
fdivrs
and
roll
dec
ret
lea
mov
xchg
orl
outsb
int
push
jo
pop
testb
or
xor
into
sbb
push
movsb
pushl
ds
jmp
enter
lcall
dec
inc
mov
lcall
pusha
aaa
popa
in
fs
je
mov
data16
fnstsw
xchg
gs
adcl
jb
int
mov
scas
jae
je
mov
add
sbb
mov
cmp
mov
in
test
xchg
and
gs
scas
shl
ss
sbb
add
xor
sub
outsb
testl
add
popa
cmovp
testb
ret
psrld
dec
mov
fwait
cltd
jmp
fsubl
push
or
or
mov
in
test
add
mov
add
add
rorb
int3
stc
mov
jmp
or
cmp
std
xchg
mov
pop
loopne
movsl
and
movsl
jmp
imul
jne
jmp
cmp
mov
jecxz
jecxz
in
out
repnz
xchg
lds
lock
dec
sar
shrl
jmpw
shlb
sbb
mulb
stc
pop
stc
xlat
stc
xchg
and
fdivr
fyl2xp1
sub
stc
cmp
mul
push
mov
cmp
notl
clc
leave
clc
daa
jns
dec
fdivr
aam
xchg
sti
fsts
xchg
cmp
cld
cmp
outsb
in
add
shl
imulb
mov
or
sbb
cltd
arpl
xor
subl
or
mov
lods
notb
and
cmp
mov
insb
mov
dec
ss
mov
mov
push
mov
xchg
jmpw
mov
mov
fs
xchg
outsb
in
pushf
mov
sahf
xchg
out
fs
lods
mov
mov
fs
das
imul
aad
or
in
in
xchg
dec
xchg
cwtl
cltd
xchg
out
insb
in
test
into
into
into
dec
xchg
mov
in
jmp
lea
fwait
push
pop
insb
mov
adc
clc
nop
out
cmp
fdivr
mov
repnz
cli
jns
sbb
mov
mov
pop
test
enter
mov
pushf
enter
pusha
mov
popa
nop
fadds
aaa
sub
aas
pop
test
pop
sahf
js
push
insb
or
hlt
icebp
daa
js
inc
push
hlt
fdivr
add
dec
jb
jle
inc
mov
ljmp
pop
or
add
in
cmp
jb
prefetchwt1
or
icebp
aad
cs
mov
mov
aaa
or
mov
mov
cmp
jl
add
jg
inc
cmp
dec
or
jl
add
fisubrs
clc
add
adc
add
add
adc
loop
pop
mov
push
lcall
das
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
rcrb
mov
cld
adc
adc
jo
aam
xor
push
adc
push
add
or
movsl
mov
jge
mov
and
adc
cmp
inc
je
icebp
mov
add
cmp
out
or
push
iret
or
jge
rcrb
or
add
push
outsl
jg
fcoml
mov
inc
xor
xor
insl
inc
mov
or
push
sbb
fcomi
fmuls
mov
sbb
sub
mov
pop
sbb
fwait
hlt
mov
mov
push
add
in
mov
cmp
std
fisubl
add
nop
loop
inc
ss
push
movl
std
push
inc
outsl
mov
jp
ja
sub
pop
push
xchg
mov
fdivrl
or
push
add
mov
push
pop
adc
add
out
rcrl
mov
adc
dec
sbb
ss
xchg
mov
inc
or
push
xchg
call
jecxz
nop
insl
inc
or
push
cs
xorb
sub
jbe
popf
pusha
ds
ret
mov
mov
push
sub
sarb
lahf
mov
add
mov
dec
in
push
outsb
fs
outsl
push
jo
fstps
mov
inc
sub
gs
je
int
jbe
add
inc
hlt
or
insb
push
mulb
xchg
gs
xchg
push
imul
jo
rol
gs
xchg
xchg
push
outsb
fs
sbb
adc
sub
mov
outsb
fs
push
or
push
imul
outsb
xor
outsb
mov
gs
mov
data16
lahf
cmpsl
test
sub
xor
cmp
mov
iret
mov
mov
scas
xor
mov
mov
mov
mov
mov
shlb
mov
js
xor
mov
add
flds
fsubl
mul
mull
ficoms
aas
mov
mov
jns
adc
dec
cmp
out
mov
stc
mov
call
sbb
add
xchg
and
jbe
jo
jmp
add
push
cmp
xor
enter
in
pop
pop
stos
les
cmp
iret
and
xor
and
push
xor
int3
or
jmp
sbb
inc
inc
sahf
cwtl
dec
dec
call
call
and
movsb
sti
push
sbb
mov
in
roll
push
clc
int
pop
ja
xor
mov
imul
add
push
push
mov
fbstp
repnz
addr16
popf
jbe
mov
mov
mov
lret
xchg
jl
mulb
mov
or
push
push
push
pop
repnz
sub
mov
mov
push
nop
test
lret
xchg
or
ja
inc
add
das
xor
mov
or
outsb
mov
or
jno
or
mov
push
les
fcomps
fucomi
sub
xor
or
jbe
mov
fistpl
xor
dec
sbb
aad
mov
or
xchg
pusha
add
outsb
ret
adc
cmp
and
shll
push
addr16
dec
mov
dec
insl
jo
sub
mov
or
outsl
jne
flds
xchg
gs
xchg
imul
xchg
dec
jb
loop
in
pop
xchg
test
xor
xchg
outsb
imul
std
xchg
fnstenv
lahf
and
jge
jmp
iret
call
and
mov
das
aad
push
call
mov
mov
add
push
sbb
clc
jmp
sub
sub
int3
inc
xor
or
push
shrl
daa
jmp
or
xchg
inc
inc
hlt
xor
push
adc
dec
pop
cwtl
mov
inc
or
sbb
inc
mov
xor
cmp
xor
aas
adc
int3
cmpw
cmp
cmp
cmp
rolb
add
push
push
inc
push
push
mov
jle
xor
cmp
jl
je
cmp
decl
cmpb
js
add
jo
add
lds
sbb
dec
or
and
cli
imul
push
fs
cs
add
pop
or
add
push
inc
dec
sbb
mov
mov
jno
push
je
and
insl
icebp
dec
or
rorl
and
pop
add
iret
add
rolb
popl
mov
mov
mov
lods
mov
int
cmc
jno
add
dec
ja
cmp
mov
add
jle
jno
shr
jle
movzwl
mov
jne
daa
add
sub
pop
mov
je
cmp
jne
mov
mov
add
add
data16
lock
jne
or
sub
push
inc
lods
add
orl
ss
int
mov
xor
outsb
adc
pop
push
add
push
and
imul
xor
idivb
jae
jbe
repz
jbe
xor
mov
jno
push
leave
aam
ja
sub
dec
adc
loop
inc
adc
and
insl
add
pushf
mov
loope
lock
and
mov
pushl
add
push
scas
cmp
sub
inc
xor
sub
sub
pusha
adc
xor
stos
test
sbb
jno
les
data16
sbb
add
adc
pop
push
mov
call
mov
lahf
inc
xchg
cltd
pop
je
pushl
shrl
lret
je
pop
xor
arpl
js
mov
fldcw
jae
jl
sub
les
popf
stos
das
loop
in
cld
imul
or
fdivs
and
pop
mov
fistpll
inc
or
xchg
inc
cmp
testb
aaa
push
mov
inc
sub
movsl
xchg
mov
or
sbb
xor
sti
test
popf
ja
jnp
inc
xor
pushl
enter
fstl
push
xchg
mov
mov
xor
mov
push
cmp
mov
adc
mov
es
data16
cs
pop
push
adc
fsubr
adc
xchg
or
jns
or
xchg
gs
js
insb
outsl
gs
or
push
add
add
pop
fs
bound
jb
ljmp
xchg
cmp
mov
mov
or
adcb
in
xlat
mov
or
insl
mov
pop
add
rcrl
inc
iret
adc
pusha
jne
pop
imul
mov
or
mov
push
add
push
lea
daa
cmp
gs
fwait
adc
ret
mov
and
shrb
enter
es
pop
xor
inc
ret
inc
mov
mov
insb
pushl
popf
ret
or
or
sbb
sbbb
dec
mov
inc
cmpsl
test
xchg
stos
lret
sbb
push
call
mov
adc
jge
ja
aam
or
fwait
adc
dec
push
mov
lock
insb
out
and
leave
je
sahf
jbe
add
int3
xchg
mov
xlat
ss
push
fisubrl
lods
dec
rol
hlt
ss
sub
adc
je
push
incl
insl
pusha
add
jnp
xor
rcll
and
fisttpll
jle
push
ret
jle
push
jns
mov
or
and
mov
ret
add
ljmp
sbb
fisubrs
adc
xchg
outsl
das
inc
cmp
jl
pop
sbb
lock
push
xor
mov
call
movsl
ret
enter
imull
and
mov
enter
arpl
enterw
imul
enter
popf
repz
out
jle
inc
dec
pop
fldcw
jcxz
cwtl
ja
in
jne
popf
in
push
inc
jae
ds
popa
jb
xor
gs
and
js
xor
xor
popa
jns
rcll
mov
repz
out
push
add
sub
sbb
pushf
add
loop
jp
out
mov
inc
pop
sbb
in
shll
push
xlat
js
fsubl
repz
adc
ret
mov
push
aam
cmp
shrl
xor
sub
inc
dec
pusha
xor
fwait
adc
inc
push
mov
cmpb
sti
jle
hlt
push
stos
push
pop
pop
bound
pop
or
pop
adc
shrb
bound
lcall
gs
lcall
cmpsb
imul
lods
or
call
cs
inc
xor
insl
mov
inc
loope
sub
mov
jl
mov
or
push
ja
imul
sti
mov
addb
mov
popl
lahf
pop
mov
and
mov
inc
push
pop
push
mov
lds
jo
lea
mov
les
test
xor
rcr
ds
fists
addb
dec
and
repz
add
sbb
jo
int3
inc
movb
or
lods
pop
jbe
inc
mov
add
out
enter
ret
and
inc
jl
lahf
iret
sbb
adc
and
adc
or
jbe
or
dec
dec
and
or
das
mov
dec
adc
dec
rol
lret
add
daa
orb
inc
add
fmull
push
or
cmp
xorb
adc
ret
dec
push
lea
add
jmp
add
push
test
xor
fstl
mov
jmp
ljmp
outsl
arpl
jae
add
adc
gs
outsl
outsl
insb
push
gs
jo
xor
popa
jo
push
add
jb
jne
insb
cs
mov
insl
and
mov
scas
add
jo
adc
pop
inc
insb
or
add
inc
dec
gs
xchg
movups
in
inc
dec
jae
arpl
subb
push
imul
add
add
jne
adc
aam
add
fs
imul
jg
int3
mov
movsb
add
imul
or
gs
push
je
xchg
in
in
imul
or
and
std
mov
jnp
inc
fs
dec
lds
inc
push
xor
mov
mov
in
sub
jecxz
popa
inc
outsl
jb
ds
fldt
and
push
push
push
gs
outsl
or
or
mov
xor
push
subb
roll
jae
jbe
push
push
es
mov
push
xor
js
push
sub
inc
cmp
pop
ret
lods
mov
mov
inc
jno
pop
loope
daa
dec
pcmpeqb
and
pusha
xchg
adc
outsb
ss
das
clc
add
push
in
push
shlb
sub
in
flds
sbb
push
gs
je
mov
dec
fldcw
sub
daa
sbb
sub
push
gs
mov
inc
xchg
loope
xchg
flds
outsb
test
push
imul
setnp
dec
xor
mov
loope
inc
das
push
jne
jb
addl
inc
je
imul
xor
add
insl
jnp
mov
xchg
fbld
arpl
jne
test
insb
xchg
mov
mov
imul
and
add
add
xchg
imul
sbb
push
xchg
xorl
popa
jg
or
fmuls
fisubrl
add
mov
add
add
inc
ret
xchg
in
pcmpgtb
jae
arpl
imul
and
ja
mov
icebp
adc
dec
inc
cwtl
lods
add
jo
je
aaa
push
popa
push
dec
in
mov
add
push
mov
or
gs
fs
popa
xor
lea
mov
sub
inc
pop
pop
and
push
and
shll
in
push
cli
mov
jmp
push
aad
push
fmull
scas
push
push
pop
test
jl
adc
jns
or
in
movl
test
sub
mov
insl
ret
sub
fimuls
pop
pop
and
jae
sub
lea
dec
mov
add
mov
outsb
cmp
jne
push
imul
sub
xchg
in
jo
movsb
jne
add
fbstp
pop
add
fstpt
push
je
lods
jnp
fistpll
imul
cmp
pop
data16
adc
fdivs
jne
push
ja
mov
inc
inc
push
inc
push
mov
sbb
ret
add
insl
jp
xchg
mov
push
cli
or
stos
lret
mov
mov
pop
inc
jb
adc
mov
add
mov
pop
inc
sbb
push
sbbl
mov
dec
xchg
popa
xchg
divl
pop
daa
cmp
out
pop
loope
add
adc
or
sub
add
imul
pop
mov
xor
inc
mov
inc
je
xchg
lea
loope
jae
nopl
outsb
fstpt
xchg
ja
xor
mov
mov
or
sbb
mov
out
mov
or
loope
pop
jbe
arpl
mov
add
mov
mov
adc
insb
ja
dec
pop
push
sbb
adc
sbb
cmovno
inc
dec
or
mov
inc
pop
inc
dec
and
xlat
outsl
lret
pop
adc
pop
loope
sbb
mov
push
mov
cmpsb
mov
adc
sub
push
add
inc
inc
inc
sub
lcall
or
inc
dec
push
dec
sbb
sub
popa
xor
bts
or
sbb
call
push
sbb
mov
cmc
pushf
jmp
inc
dec
adc
add
cmp
sbb
cmp
mov
or
movsl
add
ja
jmp
and
or
push
add
sbb
xor
or
push
lret
repnz
mov
call
aad
pop
insb
sbb
std
mov
mov
cld
ja
push
mov
xlat
stos
lods
or
or
test
and
decl
xor
leave
mov
sbb
das
rorb
into
push
and
arpl
mov
sub
cwtl
loope
insl
cltd
xor
decl
std
pop
lcall
push
and
in
xchg
mov
and
mov
mov
pop
sbb
dec
dec
rep
and
mov
mov
data16
and
jo
call
adcl
inc
sub
rcr
stos
mov
sub
jo
dec
fs
iret
sub
call
cmpsb
mov
test
in
xor
adc
mov
inc
cmp
idiv
fdiv
push
fxch
iret
pop
insl
or
stc
subl
push
addb
stos
dec
cmp
pushl
mov
fldcw
inc
aaa
mov
sub
fcmovne
lods
ljmp
cmpsl
pop
loop
popa
adc
scas
sbb
sub
fildll
mov
jne
cmp
jmp
sub
sub
stc
pop
gs
pushf
stc
test
mov
cmc
call
xchg
or
mov
adc
add
sub
mov
push
ror
cmp
pusha
mov
pusha
bt
loop
aad
xor
pushw
out
sub
outsl
sub
add
cmc
add
push
not
mov
outsl
adc
and
xor
clc
cwtl
inc
stos
cli
mov
in
add
mov
ljmp
enter
jg
jp
jnp
shlb
stc
push
aad
mov
sub
fdivrs
aam
sub
clc
xor
aaa
adc
shrl
rol
pop
aad
call
pop
mov
cmp
pop
add
push
cld
repz
add
movsb
xadd
pop
cmp
shl
sbb
int
add
jle
push
inc
cmp
std
jne
popf
pushf
mov
pop
popl
outsl
fucomp
mov
loopne
scas
into
mov
popa
sti
push
mov
add
les
mov
int
add
fsin
int
mov
mov
clc
outsl
insl
lods
jnp
leave
test
clc
lea
or
pop
lock
ljmp
dec
rol
test
rcr
setns
movzbl
sbb
push
pushf
xor
and
push
sbb
or
mov
sbb
loope
sbbl
rcrb
loope
sbb
xlat
std
inc
flds
imul
fsubr
mov
pusha
aaa
ret
mov
dec
mov
pusha
lea
call
mov
neg
cs
sub
outsl
lods
ret
or
mov
mov
mov
ret
add
push
icebp
ja
iret
add
rolb
mov
jle
jmp
cmc
mov
cmp
shr
stc
add
out
sbb
sub
repnz
jo
add
neg
sub
pusha
or
adc
add
xor
or
rol
jecxz
push
or
mov
add
dec
jp
shl
adc
mov
movsl
jbe
call
hlt
loope
add
dec
lods
xchg
push
jno
pusha
hlt
pushf
test
mov
mov
xchg
mov
or
cwtl
cwtl
mov
or
mov
mov
push
xor
dec
adc
subb
sarl
jl
add
jmp
mov
push
dec
sar
cmc
ds
flds
inc
std
aaa
pop
inc
cmp
push
jmp
mov
inc
jne
push
in
test
aas
ja
add
xor
cmp
mov
push
lods
popa
jecxz
pop
cmpsb
je
inc
or
inc
pop
fmuls
mov
inc
add
jbe
pushf
sub
sar
loope
fildl
js
lret
bnd
dec
rorb
jmp
mov
mov
ljmp
sbb
adc
out
push
pusha
adc
cmp
fwait
jle
xor
fidivrl
jmp
gs
decl
add
xor
inc
jnp
add
xchg
loop
aas
adc
mov
in
ret
movhps
push
mov
jmp
fcoms
ss
aaa
jmp
insb
aas
pop
push
bound
add
sub
cmp
or
mov
imul
jg
rcll
in
out
mov
xor
clc
push
adc
add
adc
insb
ja
loop
push
dec
add
dec
lea
ret
mov
loop
pop
sbb
jae
pop
in
ret
push
shl
loop
push
dec
out
mov
sbb
mov
sbb
outsl
cmp
mov
mov
add
in
in
cmp
push
dec
arpl
add
ss
iret
inc
fwait
inc
loope
neg
out
or
ja
imul
ret
dec
ret
add
aaa
clc
add
jnp
mov
jmp
lahf
push
sbb
mov
pop
sub
fidivrs
fs
scas
sbb
pop
out
mov
push
das
dec
bsr
inc
inc
jmp
xchg
dec
dec
stos
xor
add
sbb
leave
fwait
inc
js
inc
dec
sub
cmpsl
out
leave
cmp
fucomi
rdpmc
neg
jnp
and
pop
jnp
movnti
mov
sbb
out
mov
pop
stos
vmread
jnp
cmpsl
aas
fbld
jecxz
jmp
rep
ss
aas
mov
arpl
mov
fistl
cvtdq2ps
fildll
imul
btc
mov
dec
dec
add
lock
repz
xlat
cmp
dec
xor
jmp
pop
testl
push
push
pop
mov
xchg
xadd
sbb
mov
rol
je
insb
cmp
cmc
or
pushf
sub
ja
rcrb
cmc
cmc
sub
test
clc
cmp
cmp
xchg
sarb
lock
call
add
insl
iret
push
pop
inc
dec
gs
add
je
insl
or
push
test
mov
sbb
push
ficoml
outsl
or
bound
pop
andb
loopne
stc
jno
or
jnp
jmp
lods
das
adc
mov
bnd
add
roll
lock
or
dec
mov
sbb
ret
cmp
mov
movsb
stos
pop
das
sti
push
fisubrs
int
inc
filds
movsl
dec
int
call
pop
mov
fadd
or
test
add
sub
push
mov
rcr
mov
lock
jmp
inc
fisubrl
lcall
and
arpl
push
ss
xchg
add
pusha
rorl
arpl
cmc
jl
aaa
clc
fistps
imul
mov
ljmp
pusha
adc
int3
fldl
icebp
clc
dec
push
and
or
sti
pop
push
lods
xor
test
mov
std
mov
push
mov
and
stos
fnstenv
pop
push
cltd
mov
cmp
sarb
cmp
stc
aaa
out
pusha
mov
pop
mov
mov
jl
std
in
stos
sbb
testb
ret
jno
or
pop
inc
inc
jmp
jbe
xor
xor
pcmpgtd
lret
loop
imul
add
or
xchg
or
adc
mov
push
outsb
orb
lcall
push
mov
test
push
xor
cltd
mov
jmp
clc
inc
jmp
push
adc
ss
jmp
call
cmc
pusha
call
test
push
fimuls
lret
call
mov
fucomp
add
dec
and
xor
mov
adc
cwtl
sub
inc
push
lcall
movsb
add
scas
test
xchg
adc
pop
stc
cs
mov
xchg
pop
cmp
cmp
push
jmp
cmp
out
mov
pushf
push
fisttpl
iret
dec
fstpt
lea
pop
call
or
out
aam
adc
add
insl
int
dec
mov
nop
add
mov
fcomps
test
notb
decl
dec
out
clc
jmp
push
data16
dec
jns
insb
or
push
loopne
mov
inc
jmp
add
inc
cmp
xlat
adc
xchg
xor
fimuls
add
lods
shlb
sub
std
aaa
mov
and
int
in
icebp
pop
lea
out
mov
adc
sub
lea
xchg
inc
or
sbb
mov
out
mov
push
mov
call
testb
mov
xchg
add
jmp
push
mov
hlt
aam
leave
call
ja
pop
popa
fucompp
dec
mov
add
sbb
sti
adc
fmul
mov
xor
outsb
js
jnp
mov
sbb
xchg
movsb
rcl
sbb
loop
not
cltd
cltd
lret
sbb
dec
in
setle
mov
inc
add
cmp
xor
dec
ret
test
cmp
mov
stos
loope
and
dec
mov
dec
pop
js
mov
int
cmpsb
and
jno
cs
aaa
mov
sti
fsubrs
jmp
rcl
mov
pusha
xchg
mov
mov
dec
mov
in
ds
add
mov
mov
adc
pusha
ja
hlt
call
mov
addr16
push
mov
sbb
ret
xchg
cmpsb
cmpps
inc
push
fwait
jns
jae
lret
sub
gs
dec
cmp
divl
pop
mov
add
jmp
mov
inc
fwait
add
sahf
cli
sub
cltd
jp
cmp
dec
sbbb
add
cli
mov
fstl
push
cmp
stos
jmp
mov
inc
cli
fbstp
adc
push
push
cwtl
ss
or
pop
mov
outsb
test
data16
jge
fisubrl
pop
mov
in
pop
cmp
sbb
lea
in
test
jo
inc
pushf
cmp
sbb
pusha
les
xor
je
fwait
sbb
movsl
sbb
aad
lret
lods
jo
js
pop
fwait
adc
mov
cmp
cwtl
loopne
testl
mov
inc
push
mov
hlt
jne
into
std
imul
clc
not
cwtl
add
xor
mov
shl
sbb
cmc
repnz
jp
loope
inc
test
ljmp
das
es
rcr
xor
jo
roll
cmp
inc
mov
pop
mov
test
sub
inc
xchg
test
cli
daa
add
roll
push
mov
or
xchg
jbe
in
cmp
cmc
push
andb
aad
or
push
daa
shl
xchg
push
ret
adc
mov
sbb
push
repz
push
cltd
shll
div
mov
rorl
dec
mov
out
jmp
addl
pop
add
std
push
push
pop
mov
jmp
out
test
pushf
call
rol
pop
in
push
rorb
push
roll
xor
mov
add
xor
sub
push
push
pop
or
rcrb
loop
dec
jmp
scas
dec
pop
adc
rorb
mov
inc
cmc
mov
lds
or
jmp
pushf
aad
adc
cld
dec
scas
rorb
sub
jmp
pop
jns
push
add
jno
pop
mov
cmpb
jmp
in
sub
icebp
adc
mov
jnp
icebp
add
cmp
jo
sar
xchg
pop
stos
popa
lea
sbb
loopne
or
imul
lods
or
xor
aad
dec
mov
je
cmp
push
xchg
into
das
cmpsb
fdivl
inc
idivl
cmp
pop
dec
mov
add
xor
mov
push
stos
fs
push
sbb
jmp
int
sbb
push
push
call
cvtps2pi
cmp
scas
add
dec
add
ljmp
fucomp
lock
cld
sbb
fwait
out
adc
push
pushf
aaa
add
add
or
push
jl
dec
arpl
xor
stos
adc
roll
ljmp
dec
pop
movsb
outsb
clc
or
push
mov
inc
or
inc
and
jl
jecxz
out
arpl
shr
sbb
jmp
mov
rcl
xor
cmc
cs
and
faddl
das
add
loop
jge
shl
sbb
loopne
stos
lret
rcl
ja
shrl
rclb
test
cltd
jbe
dec
clc
test
hlt
or
jl
inc
xchg
data16
lret
jno
mov
sti
out
in
les
ret
push
sbb
xchg
jmp
loopne
push
and
imull
jl
dec
sub
stos
jg
out
inc
xchg
andl
push
mov
call
xorb
cli
testl
dec
jmp
cld
mov
cmp
sub
or
or
out
adc
loope
notl
nop
and
mov
sub
adc
and
xchg
inc
dec
popl
icebp
in
pop
rcrl
enter
bound
out
fstpl
sub
xor
sub
xlat
add
cwtl
mov
mov
lret
lock
jl
in
fstps
icebp
push
andl
or
lods
sbb
aas
fsubrl
cs
subl
outsl
jge
hlt
data16
mov
sahf
lods
cmp
push
in
or
ret
cld
sbb
fsub
cld
shlb
shl
push
xor
jmp
push
adcl
mov
imul
std
pushf
adc
mov
lret
lods
jle
jae
add
popf
sbb
or
sbb
xlat
leave
push
jno
adc
cwtl
rcr
stos
jmp
mov
cmp
jge
shl
mov
inc
xchg
seto
jecxz
pop
subb
jl
scas
pop
xor
push
xor
std
jno
outsl
jne
lret
mov
stos
lahf
cmp
in
xor
inc
sti
sbb
mov
mov
fs
push
mov
jne
clc
dec
adc
pop
or
dec
cli
btc
lahf
fdiv
pop
jge
neg
stc
not
jmp
enter
pop
xor
mov
xchg
mov
pop
popf
lret
std
push
fmul
and
jno
shl
loop
inc
sbb
call
xor
es
push
call
cmc
pop
xor
push
cmpsl
push
pop
ja
cmp
and
pop
sti
pop
es
arpl
out
jmp
mov
push
add
ss
push
rcr
rcl
ds
into
test
cmp
adc
aad
and
jmp
je
rorl
mov
lea
pop
fisubrl
cli
jge
adc
notb
cmp
fcmovbe
pop
movsb
rolb
sub
nop/reserved
insl
cmp
rol
mov
mov
cmp
push
or
push
pop
fdivrp
out
movsl
mov
add
mov
shrb
pushf
and
paddsw
std
xchg
outsl
std
nop
loopne
out
shlb
xor
cmp
sub
inc
mov
testl
insb
aad
push
out
daa
lods
push
test
lods
int3
pop
cmc
jae
in
mov
add
mov
inc
and
xor
imul
jnp
jg
call
cli
add
push
loop
fadds
test
cmp
aam
pop
xor
ret
dec
pop
mov
js
cmp
in
sbb
inc
stos
cmp
push
leave
pusha
loopne
jmp
sub
mov
mov
mov
loop
in
inc
fidivs
test
mov
sub
jecxz
test
ss
adc
cmp
pop
pop
loope
xor
in
dec
pop
loop
into
shl
ror
icebp
add
fcom
pusha
xchg
je
adc
pop
clc
pusha
jmp
clc
xorb
sbb
mov
xor
cmpsl
aaa
push
clts
hlt
mov
movsl
mov
pop
jb
mov
xor
inc
mov
xor
sbb
fists
jecxz
or
or
mov
fwait
sbb
and
jge
scas
sti
jp
mov
inc
pushf
into
lret
outsb
fdivrl
loope
and
push
mov
bound
cmp
in
cmpsb
jo,pt
je
pusha
dec
push
repnz
ret
sbb
popf
shrl
lret
pop
pop
mov
xlat
push
pop
pushf
ljmp
cmc
clc
jg
inc
les
mov
fldcw
xchg
or
jo
push
outsl
sub
lock
sub
ljmp
fistpll
add
push
jmp
xchg
pop
incl
dec
jno
out
sahf
cmp
pop
push
mov
mov
stos
lea
lcall
shl
add
fmulp
mov
cmpsl
scas
mov
aad
push
jg
jmp
sub
cltd
sahf
fmull
pushf
dec
push
mov
add
iret
aam
mov
sti
incl
lock
sar
imul
icebp
pushf
imul
push
out
int
loop
jmp
in
bound
sub
mov
ret
iret
xchg
xchg
inc
dec
push
inc
inc
push
mov
popa
nop
incl
call
insl
lret
into
cmp
aad
addr16
sub
decl
mov
mov
xchg
cmp
int3
pop
into
mov
scas
iret
mov
pushl
das
pop
es
jmp
jmp
in
out
lods
xchg
mov
adc
pop
sbb
mov
xor
ds
aaa
or
jecxz
int3
mov
hlt
mov
mov
and
push
and
adc
jmp
loopne
jmp
into
stos
dec
jnp
inc
outsb
inc
push
add
jg
inc
push
push
mov
lods
pushf
cmpsb
out
sti
xchg
test
gs
xchg
xchg
insl
aad
nop
or
in
icebp
adc
dec
push
lods
dec
mov
gs
out
jecxz
xor
jecxz
mov
xchg
lcall
jnp
popa
je
sbb
inc
hlt
fmuls
mov
inc
or
cmp
hlt
xchg
sbb
lahf
or
jae
jmp
jbe
add
rcrb
stos
lcall
icebp
adc
jae
or
mov
pushl
andl
cmp
mov
xchg
addb
mov
jne
arpl
test
fbstp
jecxz
movsl
mov
outsb
daa
dec
jno
in
push
rcrb
jg
fcomi
std
aaa
or
popf
mov
push
lods
iret
shlb
mov
mov
push
adc
or
or
mov
inc
mov
add
imul
movl
jae
lods
push
pushl
cmp
or
and
stos
cwtl
inc
dec
cwtl
jecxz
jno
negb
sbb
push
add
adc
jnp
mov
push
shl
cmc
fs
lcall
test
clc
xlat
pop
ljmp
jnp
xchg
mov
push
sub
popf
es
sub
pop
sbb
jns
cmp
xor
fwait
cs
jnp
je
lret
pop
out
mov
std
ljmp
add
fnclex
fxch
mov
push
and
adc
and
lcall
dec
in
pop
pop
push
push
pop
add
sub
mov
fsubp
pop
fimull
adc
pop
pop
test
and
ss
inc
add
and
or
pop
push
xchg
rorl
jmp
jl
movsl
decl
in
iret
scas
mov
mov
or
enter
jmp
orb
pop
pop
adc
aaa
mov
xor
cs
jl
xor
ljmp
in
push
je
das
hlt
cmc
dec
jb
jg
mov
aas
jno
sub
jg
adc
stc
out
pushl
pop
gs
popa
push
loop
sub
cmp
out
sbb
add
inc
das
cmp
push
js
push
lahf
mov
stos
dec
and
mov
call
sbb
into
jns
jbe
jmp
add
movsl
ja
mov
mov
push
fisttpll
sbb
mov
out
repz
aaa
call
inc
imul
pop
xchg
sahf
and
dec
lock
and
xchg
mov
movsl
lcall
fsubrp
sub
push
fdivs
icebp
adc
sarl
xlat
cmc
or
hlt
outsb
jl
outsb
push
push
cli
push
pop
das
push
mov
push
rcrl
cmp
add
in
call
mov
in
xor
loopne
mov
inc
imulb
sub
bound
popf
xchg
adc
adc
and
out
leave
enter
pop
imul
inc
xchg
mov
jo
xchg
sub
loope
jecxz
pop
fmull
lods
repz
ret
jl
ja
mov
dec
xor
sub
cli
cwtl
inc
and
fistpll
sub
jmp
mov
test
add
repz
lcall
lahf
cmpsb
inc
jmp
mov
inc
jle
inc
or
loope
push
das
inc
daa
or
jmp
arpl
mov
mov
test
or
mov
test
push
sti
mov
fwait
lret
loopne
cmpsb
mov
dec
or
pop
loopne
jg
cmp
or
cli
sub
adc
add
call
addr16
dec
int
sbb
aad
ret
int
faddp
bound
decb
js
inc
jmp
mov
jmp
adcl
push
cmp
pop
add
insb
dec
mov
into
or
and
jg
lock
pop
jno
adc
cli
add
insb
outsl
fnstcw
sub
inc
insl
jmp
cmp
push
inc
pop
add
dec
and
jns
call
xor
pop
std
jmp
les
shrl
jp
lods
ja
jne
loop
push
jg
aaa
popf
loop
imul
inc
inc
sub
cmp
jecxz
fdivrl
adc
jmp
sbb
gs
mov
enter
xor
mov
bound
imul
push
mov
test
int3
fdivr
ret
je
into
repz
push
mov
test
subl
xor
and
sbb
sbb
or
add
clc
out
push
pop
jnp
adc
mov
xchg
mov
adc
or
lcall
cmpl
jmp
adc
leave
fsubp
jmp
cmp
pop
or
loopne
mov
test
aas
jns
std
mov
pop
sub
std
loop
adc
rcr
inc
ja
ja
fxch
lahf
inc
cmpsl
inc
gs
clc
adc
xchg
subb
jecxz
test
sbb
cmp
adc
push
outsb
sub
test
push
cs
lret
std
mov
add
and
clc
dec
cmp
jge
add
mov
fildll
and
mov
shr
adc
leave
and
dec
cli
in
icebp
mov
std
fucomp
xchg
movsl
andb
dec
pop
paddd
push
in
clc
fcmovne
mov
and
dec
pop
repnz
and
lods
pop
cmp
ja
ss
xor
ljmp
in
testl
mov
sub
cmp
hlt
jno
sahf
jns
push
dec
decl
add
fldl
or
or
adc
call
outsb
rcr
pushl
dec
cmp
adc
cs
test
pushf
dec
jb
xchg
cwtl
push
cli
inc
pusha
mov
mov
insb
cli
pop
sub
and
stos
icebp
sti
pusha
jmp
sub
ds
lcall
stos
shlb
mov
sub
mov
mov
outsl
pop
and
adc
pop
repz
sub
incl
mov
popa
cmc
push
cmp
push
push
aas
xor
out
das
mov
iret
fcmovu
loopne
mov
pop
mov
pop
stos
popa
xor
ret
fnstsw
popa
sub
sbb
dec
arpl
lret
and
or
mov
loope
pop
clc
out
mov
test
movsl
movsb
mov
js
fldt
push
lret
pop
inc
out
mov
arpl
mov
adc
pop
cmp
push
cld
imul
sub
imul
lock
cmpsl
jg
sbb
cmp
pop
add
faddl
dec
push
cmp
lds
insb
aam
fisubrl
mov
mov
aas
mov
inc
mov
sub
jg
sbb
fiadds
lea
or
mov
fsubl
xor
int
mov
jns
pop
loopne
push
mov
jecxz
aaa
outsb
jae
dec
push
ds
sub
aaa
inc
in
data16
jmp
repnz
loop
cli
ja
adc
dec
cmp
test
les
pop
fs
mov
add
xchg
mov
test
or
add
aaa
mov
mov
rcrl
xchg
lahf
outsb
cmp
adc
cmp
cmc
mov
ja
lds
lcall
mov
cmp
mov
sub
dec
bound
loop
mov
xchg
subl
lds
imul
or
bound
adc
lcall
incl
pop
xchg
test
test
into
inc
inc
xor
jns
pop
push
cwtl
pop
cld
or
mov
adc
decb
ret
push
mov
mov
mov
pop
into
aad
out
and
cmp
nop
inc
push
xor
mov
mov
call
or
sbb
or
pop
outsl
dec
xor
js
jo
cwtl
mov
sub
xchg
cltd
mov
imul
ss
fildl
rolb
lods
mov
mov
test
mov
jne
mov
mov
mov
popa
add
inc
icebp
mov
xchg
add
ret
mov
out
mov
cld
in
incb
repnz
ret
stos
movb
or
outsl
sub
mov
pusha
jp,pt
add
mov
add
push
dec
je
es
loope
lcall
decl
sbb
std
or
pop
cmp
cwtl
fwait
addr16
decl
out
push
mov
and
fnstcw
call
fistpll
mov
icebp
push
sbb
mov
mov
lods
sub
fcomip
add
decl
mov
mov
dec
push
pop
arpl
pop
fiadds
xor
mov
push
hlt
adc
push
push
fisubrs
xor
inc
stos
pop
dec
scas
jb
out
js
outsl
mov
cld
pushf
dec
mov
icebp
add
sarl
sahf
ret
jbe
sar
ljmp
in
mov
inc
push
pop
ror
and
lds
stc
pushl
ljmp
es
mov
cmp
jnp
add
and
decl
add
jp
sbb
out
xchg
xor
mov
cmp
push
icebp
mov
and
or
stos
mov
mov
dec
test
jl
ret
dec
xor
je
mov
push
ffreep
ret
mov
cmp
jg
into
sub
dec
rorl
dec
xor
adc
mov
movsl
mov
mov
cld
jbe
or
divb
inc
call
mov
shrb
push
in
out
add
pusha
ja
mov
dec
inc
pop
shl
or
faddl
out
push
jns
push
dec
pop
push
push
sbb
out
rcl
inc
inc
sub
sti
or
jg
mov
sub
xchg
stos
push
jbe
mov
sar
das
hlt
movsl
or
icebp
loopne
shlb
mov
xchg
popa
sbb
lds
pushl
mov
cmp
mov
pop
incl
test
bound
popa
xchg
iret
add
dec
in
dec
and
movsb
scas
pop
inc
dec
jmp
imul
fistl
je
jne
div
daa
ljmp
fimuls
or
pop
movsb
addb
les
mov
cmc
cld
pop
adc
repz
decb
mov
and
inc
stos
fcoml
in
inc
cmpsb
cmp
stos
fstpt
movsb
lcall
decl
adc
mov
sbb
ret
in
aaa
test
in
xchg
dec
mov
repz
ljmp
test
mov
stos
ds
push
xor
pop
sbb
inc
dec
pushl
fbstp
mov
mov
icebp
cmpsb
mov
jb
call
and
ja
push
cmc
adc
pushf
addr16
outsl
sub
jno
sub
push
test
cmpsb
lods
into
sub
xor
div
ficoms
mov
inc
and
test
mov
inc
pop
sbb
jecxz
adc
jbe
pop
loopne
cmp
out
out
lock
loopne
fidivrs
imul
fidivrs
and
ret
popa
adc
or
sar
ret
xchg
idivb
jo
pop
jo
dec
das
sbb
dec
stc
incl
jne
dec
pop
jnp
pop
pusha
jg
in
int3
fcmovnbe
decl
shr
push
mov
cmpsl
push
aam
inc
adc
addb
call
movsb
push
aam
scas
mov
lods
mov
mov
das
mov
mov
or
xchg
mov
cld
pop
pop
jge
stc
pop
incb
mov
jo
inc
xor
or
movzbl
sbb
daa
repnz
pop
in
aaa
pop
add
ljmp
test
mov
push
fldcw
sub
adc
pop
mov
dec
xchg
push
pop
add
and
pushl
inc
pop
mov
loop
int
mov
adc
hlt
pop
insb
add
cli
xchg
and
mov
inc
in
or
inc
push
xor
xlat
jge
outsl
adcb
daa
into
sub
lods
loope
decl
decl
in
fsubr
pusha
nop
add
adc
mov
dec
mov
insl
icebp
mov
or
dec
ja
sub
cmc
xchg
mov
lods
decb
shlb
test
jno
or
decl
mov
inc
test
lret
mov
lods
adc
mov
sahf
mov
inc
out
in
mov
negl
insb
fbld
sub
jg
mov
out
rclb
daa
mov
jecxz
inc
push
fcomi
iret
inc
sbb
sarb
mov
dec
pop
xor
scas
cwtl
pop
bound
mov
in
loopne
xor
in
shll
mov
adc
mov
fcomip
cld
aaa
sub
push
mov
mov
incl
mov
shl
inc
cmpsl
aas
jae
ja
popa
cmp
and
std
rolb
push
pop
mov
mov
loopne
mov
sub
mov
aad
icebp
or
sub
push
mov
test
rorb
sub
roll
sbb
or
jl
ret
jmp
jl
push
adc
sbb
cmpl
shrb
lock
inc
adc
inc
and
shll
add
xor
pop
testb
rol
int3
mov
jecxz
or
and
imul
mov
push
mov
push
jnp
repz
jecxz
mov
pop
pop
mov
test
sub
shlb
std
call
mov
pushf
mov
into
mov
stos
pop
sub
push
and
popf
test
push
jae
out
scas
pop
jge
mov
fmul
sahf
push
xchg
lds
xchg
xchg
pusha
mov
loope
jg
jmp
mov
pop
inc
imul
out
xor
fdivrl
movsb
in
dec
ljmp
sti
xor
movl
imul
call
xlat
or
jbe
lret
fstpt
jg
adc
aam
stos
mov
mov
add
or
fildll
mov
cwtl
lret
sbb
dec
mov
push
andb
mov
sub
mov
fs
mov
test
clc
or
cltd
dec
aaa
ds
xor
xor
sti
push
cwtl
ljmp
cmc
daa
pop
and
mov
repz
inc
in
inc
test
scas
push
stos
mov
hlt
jg
add
int
insl
mov
add
call
mov
dec
add
mov
subb
fs
iret
jg
xchg
mov
pop
ret
aas
sbb
push
cmpl
out
adc
xchg
pusha
imul
pusha
adc
stc
int3
scas
xchg
sub
jae
lcall
pop
sub
cmp
cli
lea
lock
lds
and
lea
gs
mov
push
repnz
cmp
repz
mov
mov
mov
outsl
inc
and
xlat
mov
jg
mov
xchg
testb
mov
lahf
adcl
add
jbe
jae
repz
outsl
rcr
jne
add
mov
mov
cld
call
add
adc
fcom
shrb
orb
and
jmp
and
test
or
pushf
call
cmp
push
loopne
incl
lret
mov
mov
cmp
mov
xchg
sti
mov
lret
push
ss
std
sti
or
call
jp
ds
push
clc
scas
mov
inc
add
loop
jnp
pop
ljmp
or
fisubrs
adc
pop
jg
push
mov
mov
test
std
mov
inc
sbb
stos
inc
jg
add
push
mov
cmp
inc
mov
jg
add
sbb
sbb
enter
pop
aaa
scas
push
popa
pop
sbb
jle
sub
mov
sub
sarb
push
dec
push
and
jecxz
pushf
in
scas
mov
jl
xchg
cli
call
repnz
je
pop
inc
sub
stc
lock
aas
cmpsl
icebp
xor
mov
pop
ljmp
pop
jp
pushw
ljmp
scas
mov
int3
adc
test
call
popf
mov
mov
inc
inc
idiv
mov
pop
mov
rorl
xor
and
lock
jg
cmp
fiaddl
movsb
add
mov
or
loop
pop
jp
adc
imul
cmpb
inc
movsb
lea
mov
cmp
adc
jmp
sub
push
aad
int3
mov
inc
or
pop
cmc
add
pop
adc
pusha
pop
jg
cmp
xlat
in
mov
movsb
clc
jns
sbb
mov
jb
jae
inc
adc
pop
or
mov
mov
dec
mov
jmp
fstpl
sbb
nop
inc
fidivs
mull
orb
mov
xchg
call
lock
shlb
gs
add
sub
test
fbld
cmc
xbegin
xchg
or
mov
xchg
sub
cmpsl
mov
aad
daa
sbb
or
and
clc
repz
adc
push
cli
jg
jge
jno
and
mov
add
mov
jbe
sti
loop
dec
lods
mov
sbb
rcrl
mov
pop
or
ljmp
lock
pop
ljmp
fwait
and
clc
ljmp
pushf
into
pop
jns
xchg
xor
sbb
inc
outsl
pop
jp
cmp
sub
mov
insb
fcmovnu
push
ss
cwtl
popf
mov
sbb
outsl
int
pop
sbb
lea
out
xchg
fstps
jl
jg
imul
stos
jp
inc
push
imul
xchg
cmp
adc
inc
inc
std
enter
pop
aaa
add
pop
cmp
sbb
mov
push
or
aad
sbb
hlt
movsb
mov
rcrl
push
add
jo
mov
je
sub
adc
add
ja
sbb
pusha
into
lret
pushf
mov
xor
mov
and
jle
mov
pop
mov
mov
pop
inc
adc
or
push
jg
inc
cmpsb
dec
fsubrs
sub
cmp
decl
popa
push
ss
out
xor
or
adc
add
bound
clc
mov
jmp
cmpsb
mov
cmp
inc
cmp
decl
aaa
push
dec
cs
push
pop
push
or
push
adc
push
cmp
jg
idiv
cmp
and
adc
or
ljmp
cmc
ljmp
fidivs
shl
cltd
xor
mov
cwtl
sub
mov
sub
mov
inc
mov
dec
imul
or
push
sub
pop
sahf
jne
sarl
push
outsl
lock
push
cmp
rcr
cli
dec
pop
sbb
jmp
lock
fstps
pop
decl
loopne
pop
lret
xchg
push
lea
pop
loopne
add
jo
inc
das
rcll
mov
jmp
cmc
jg
adc
jg
pop
std
std
xchg
xchg
insl
sbb
or
ret
iret
lods
sub
dec
ljmp
icebp
jg
adc
pop
push
ss
dec
cmp
jge
fxam
adc
dec
dec
pushl
aam
push
enter
and
pop
cwtl
mov
test
dec
jge
mov
pop
jmp
jae
xchg
push
inc
movsl
fs
mov
enter
xor
jmp
aas
imulb
fisttps
mov
addr16
mov
ret
js
sbbb
adc
mov
icebp
pop
pusha
xchg
jg
lea
or
popa
sub
das
das
incl
and
aam
pop
ret
call
pop
test
jmp
mov
movsb
inc
inc
mov
xchg
xchg
lret
mov
adc
fildll
dec
lcall
push
lds
inc
mov
pop
fadds
decl
call
inc
fcomps
loope
cmp
sub
dec
sti
jbe
fwait
aad
push
jmp
xchg
int3
fidivl
movsb
fimuls
stos
add
push
lods
jmp
mov
xorl
add
ds
xchg
pop
jmp
call
sbb
cmp
jns,pn
mov
loopne
inc
xchg
imul
ret
lahf
xchg
in
jg
xlat
jmp
sub
add
xlat
sar
inc
pop
mov
in
mov
cmpsl
and
aam
pop
ret
daa
adc
lcall
and
xchg
xchg
and
jge
sbb
pop
shll
fs
xchg
jl
or
ljmp
dec
push
int3
push
jae
sbb
call
into
idivl
cs
pop
shlb
outsb
and
loope
xor
frstor
push
decl
jbe
pushf
subb
into
fidivl
movsb
test
lcall
mov
mov
pop
sub
cwtl
jb
lret
pop
ds
push
jnp
into
add
xor
fisttps
sbb
fildll
xchg
data16
xchg
ret
lret
bnd
js
fsubl
sub
push
aaa
pop
bound
repnz
incl
jg
popf
jge
sbb
cmpl
in
fbld
adc
lahf
incl
cmp
popf
xor
add
cltd
lods
les
cmp
mov
jmp
stc
test
push
je
in
sbb
inc
popf
test
xchg
arpl
mov
ret
lret
repnz
jle
aas
inc
into
shr
es
inc
pop
lods
ja
loope
call
pop
lods
jge
jae
in
inc
push
mov
insl
fwait
jmp
fldenv
adc
test
dec
pushf
loope
pop
ret
add
dec
in
idivb
cmpsl
mov
push
test
push
popf
jle
lret
cwtl
push
xchg
push
mov
sbb
dec
mov
pop
cli
lcall
mov
ret
ja
hlt
or
into
scas
lea
and
or
lret
jns
pop
sub
xor
sub
jge
rorl
dec
adc
adc
push
push
mov
or
int3
cmp
repnz
incl
dec
aam
inc
push
jbe
push
scas
xchg
aad
ljmp
jb
nop
mov
inc
jns
push
mov
ret
jle
sub
push
sti
lahf
in
and
pop
lcall
dec
jbe
jne
and
dec
aam
push
shl
es
test
jbe
test
nop
lea
add
mov
mov
repz
dec
fwait
mov
mov
inc
sbb
jns
aaa
xchg
insl
fs
repz
inc
test
jns
out
into
out
mov
pop
or
pop
lret
pusha
mov
dec
lods
jge
pop
mov
mov
pop
ljmp
out
and
test
std
xchg
scas
and
int3
loope
inc
imulb
stos
movsb
aad
push
lret
leave
js
xchg
gs
sub
fiaddl
decl
cs
rcrl
jl
push
out
xor
movsl
lcall
pop
jmp
aas
loope
xor
frstor
imul
mov
sub
movsb
nop
ljmp
jns
ja
jg
cmp
cmp
fstps
mov
or
aas
ljmp
sub
fdivs
push
and
fcompl
orb
repnz
fildll
sub
out
pop
leave
push
rcrl
push
aas
sub
in
dec
mov
cmp
outsb
xor
loope
aas
mov
sub
xor
jbe
xchg
test
pushl
call
movsb
mov
jns
daa
cmp
add
test
ret
mov
jbe
adcb
cmc
sbb
cld
pushl
fdivs
adc
cs
jbe
aad
cltd
dec
inc
into
push
stc
sbb
movsl
mov
pop
rcrb
adc
or
jmp
jge
rcr
fs
mov
test
push
fidivl
inc
stos
scas
ret
mov
or
das
bound
xchg
movsl
add
loopne
loopne
pusha
push
and
add
and
fxam
sub
outsb
out
sarb
das
dec
xchg
push
decl
int
jle
lfs
out
int3
or
push
loopne
leave
outsb
imul
insl
mov
pop
mov
dec
jbe
xchg
or
push
aas
jmp
mov
cmp
sbb
jb
mov
inc
out
pop
mov
cmp
lahf
daa
or
cmpsb
pop
data16
pop
mov
push
stc
aas
icebp
mov
xchg
jb
loope
call
or
xchg
mov
out
xor
inc
and
dec
and
lret
mov
jae
shrb
pop
mov
mov
gs
fidivl
movsb
mov
sbb
xlat
sub
inc
adc
inc
mov
js
xchg
inc
add
loope
xor
test
push
das
aas
lock
das
mov
pop
fidivrs
cmpsl
mov
jmp
dec
push
jno
or
pop
push
testl
call
fdivs
lcall
jne
inc
mov
je
jg
jg
cmc
imul
aaa
lods
sub
mov
jmp
mov
adc
aas
jmp
pop
inc
leave
call
xor
inc
out
test
ss
aad
sub
std
add
ret
jge
sub
pop
popf
dec
mov
popa
popa
lea
xor
mov
or
pop
dec
dec
mov
pop
rcrl
cltd
data16
jg
repnz
mov
ja
test
mov
or
pop
mov
rorb
dec
xlat
fisubrs
pushl
jmp
mov
and
int
push
jg
repnz
jns
push
frstor
and
popa
iret
call
jg
cltd
movsl
out
dec
stos
pop
shl
pop
icebp
aas
mov
sar
cmp
out
jnp
pop
jle
outsb
mov
lcall
mov
ss
fsubr
sub
daa
xchg
gs
mov
ret
jae
jp
call
inc
sarl
and
stos
add
out
sbb
mov
cltd
leave
and
push
lret
mov
cwtl
push
mov
loope
repz
pop
add
cltd
push
stos
jecxz
movsl
lds
imul
das
ljmp
mov
aam
inc
aaa
ds
sub
sbb
loopne
pop
adc
pop
add
jo
lret
outsb
popa
cmp
jp
pop
xor
test
jg
jno
pusha
lea
mov
cmp
aaa
mov
xchg
enter
mov
pop
mov
dec
or
fxch
lcall
bound
or
push
incb
xchg
fnstsw
and
out
push
inc
fmuls
dec
in
add
out
mov
imul
adc
sub
dec
ds
aas
test
cld
decl
aas
movsb
aas
test
mov
mov
aas
aam
fdivrs
idivb
sti
aas
add
add
jg
movsb
mov
aas
xor
xor
xor
xor
xor
xor
xor
pushl
cmp
inc
xor
xorl
lods
xor
xor
xor
xor
xor
pop
xor
jbe
pushl
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
je
test
out
xor
adc
and
xor
cmp
mov
pushl
xorl
int3
aaa
sbb
das
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jp
cmp
pop
cmp
je
xor
xor
or
xchg
aaa
xchg
aaa
jg
pushl
aaa
loope
sti
jge
cmp
dec
cmp
mov
cmp
cmp
in
incl
cmp
cmp
idivl
sbb
cmp
cmp
insb
cmp
jmp
mov
cmp
cmp
cmp
cmp
cmp
pop
test
jmp
cmp
cmpsl
cmp
xor
ret
pop
add
lock
sbb
ljmp
call
xor
mov
xor
xorb
xor
xor
xor
xor
incl
xor
xor
xor
add
jno
mov
xor
xor
xor
xor
decl
cmp
test
cltd
xor
mov
xor
pop
std
in
sbb
imul
mov
ss
incl
pushl
shlb
sbb
inc
cmp
stos
cmp
cmp
cmp
cmp
cmpb
cmp
call
cmp
cmp
cmp
cmp
cmp
push
cmp
jnp
xchg
cmp
iret
incl
out
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnsave
lahf
aas
aas
fidivrl
add
add
fistl
mov
daa
xor
test
fidivs
sbb
add
push
addr16
call
xor
xor
xor
xor
js
sar
xor
xor
xor
xor
xor
xor
xor
sub
xor
xor
mov
std
mov
mov
in
out
xor
jbe
xorb
xor
ss
ss
mov
aaa
outsb
aaa
out
aaa
xchg
call
aaa
fdivl
hlt
aaa
pushl
push
cmp
cmp
pop
cmp
cmp
cmp
push
jmp
mov
popf
cmp
cmp
scas
dec
cmp
jge
movsb
cmp
popa
cmp
ljmp
jns
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
daa
ds
xchg
ds
bound
test
aas
mov
mov
jecxz
gs
jne
cmp
adc
xor
xor
cmp
inc
xor
mov
jge
xchg
pushl
xor
mov
xor
xor
xor
xor
xor
xor
lock
xor
push
ss
arpl
xorl
ss
fists
lock
pushl
or
inc
aaa
mov
lret
aaa
clc
aaa
push
mov
test
mov
cmp
cmp
cmp
cmp
xchg
cmp
pop
cmp
ja
loope
ret
fwait
aad
cmp
stos
fnstsw
in
cld
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
outsb
cmp
cmp
cmp
cmp
cmp
sbb
push
cmp
cmp
mov
cmp
pushl
cmpl
cmp
or
sbb
and
adc
std
sub
xor
ds
ds
les
lret
ljmp
repnz
ds
aas
adc
sbb
push
aas
daa
aas
xor
add
aas
push
aas
pop
aas
bound
imul
lea
cmpsl
pop
and
and
xor
inc
xor
xor
mov
xorb
xor
xor
xor
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
dec
dec
xor
inc
pushl
int
fbstp
je
jnp
leave
xor
adc
xor
xor
xor
xor
and
mov
mov
loop
jmp
cli
xor
xor
dec
aaa
fs
jge
mov
lcall
aaa
cli
aaa
cmp
jle
test
lods
cmp
mov
fildll
cmp
xor
xor
xor
push
xor
xor
push
jle
call
incl
xor
xor
iret
xor
xor
xor
ljmp
inc
hlt
xor
xor
xchg
add
or
xor
xor
xor
out
sub
xor
xor
xor
xor
xor
jg
xchg
xor
test
fcomip
push
data16
mov
xor
xor
fwait
mov
in
xor
xor
xor
xor
xor
pop
xor
dec
cld
mov
aaa
adc
sbb
sbb
aaa
sbb
cmc
ja
aaa
push
aaa
bound
jb
nop
aaa
xchg
aaa
mov
pop
outsb
fadd
stc
ret
repnz
aaa
or
cmp
cmp
std
cmp
bound
push
test
mov
xchg
cmp
clc
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
sbb
cltd
cmp
outsl
cli
mov
ret
xchg
cmp
cmp
cmp
adc
cmp
cmp
fnstcw
and
cmp
out
clc
cmp
mov
loope
ds
aas
push
aas
pop
aas
sub
fsubs
movl
inc
xor
xor
xor
xor
inc
xor
xor
rdmsr
and
xor
pushl
stos
xor
xor
aas
repz
xor
sarb
add
xor
xor
cmp
dec
xor
xor
xor
jg
ffreep
xorb
xor
xor
xor
xor
xor
xor
fbstp
xor
pushf
lds
xor
inc
shll
ss
dec
das
xorl
jg
ss
fidivl
loop
call
ss
add
adc
aaa
and
sub
mov
ss
cmp
inc
aaa
addr16
jmpw
xor
nop
adc
cmp
jg
rdpmc
xor
cmp
add
fcomp
std
popa
jns
mov
cltd
add
pop
pop
popf
rcrl
rcrl
cltd
cmp
popf
gs
stc
out
cltd
cmp
cltd
ds
aad
push
out
aas
sub
repnz
out
jl
sbb
das
xchg
xchg
mov
and
xor
and
inc
daa
pop
and
add
sub
pop
xor
cmp
push
fsubr
pusha
and
sub
fs
cs
ret
mov
jmp
jge
push
push
out
pcmpgtb
and
fldcw
cmp
jnp
or
sub
stos
mov
jae
arpl
add
jae
daa
inc
and
stos
out
adc
xchg
push
aad
mov
out
test
add
adc
and
inc
and
and
mov
and
inc
push
jl
and
push
add
in
repnz
sbb
cmpsl
in
test
pop
push
add
add
jns
sbb
add
inc
and
add
xchg
adc
hlt
cld
stc
test
adc
adc
jns
addb
pop
icebp
mov
push
imul
ja
push
adc
push
pop
xor
enter
jl
and
push
inc
xor
inc
and
inc
repnz
adc
enter
add
insb
inc
and
inc
and
inc
and
mov
adc
push
sbb
adc
in
repnz
and
add
out
adc
inc
xor
adc
add
psubw
adc
add
fcmovnu
call
push
data16
add
or
xor
adc
and
and
out
cmpsl
mov
cmp
add
sahf
mov
add
add
gs
xor
inc
inc
and
jb
push
leave
xor
xor
adc
add
xor
jne
jo
lret
in
mov
mov
and
ss
push
adc
fadd
testb
inc
nop
push
push
adc
and
add
iret
sub
xor
xor
nop
adc
xor
xor
xor
and
add
addb
nop
cmp
sub
pop
inc
and
rcll
push
push
inc
mov
xchg
pop
scas
sahf
pop
data16
push
rep
or
jp
pushl
push
movsb
and
mov
xor
popa
data16
test
inc
shl
adc
mov
nop
mov
pop
loop
aam
leave
or
lods
fstpt
pop
jae
movsl
mov
ljmp
cmp
adc
sub
push
jnp
jmp
jae
test
mov
cld
sub
inc
dec
lock
popa
or
je
push
sbb
xor
cmp
pop
pop
out
jge
ja
dec
cmp
lock
sbb
and
fwait
popf
pusha
or
jno
pop
cmp
and
ret
lock
lds
pop
mov
push
in
xor
leave
into
out
adc
and
mov
or
sbb
jecxz
mov
inc
inc
sbb
shll
insb
ss
xchg
sbb
ficoms
andl
mov
xor
pop
and
psubusw
mov
dec
les
or
mov
outsb
xor
repnz
inc
imul
add
bound
insb
insb
jmp
gs
insl
jae
xor
popa
insb
fmul
mov
out
dec
dec
inc
jg
mov
mov
xchg
rorb
and
loopne
je
cmpsb
loope
jecxz
cwtl
gs
shll
imul
popa
insl
or
add
lds
or
jmp
add
inc
push
and
test
cli
and
cmp
cmp
out
add
adc
adc
aaa
dec
call
inc
aad
add
ja
sbb
fstpl
jg
mov
lea
push
push
in
or
in
jb
xor
jl
jns
outsb
adc
cmp
push
jno
dec
push
add
adc
xorb
or
stc
in
and
or
imul
or
pop
jno
pop
dec
in
bound
clc
lods
shrl
js
or
test
inc
cmpsb
dec
inc
sbb
xor
sbb
sbb
int3
add
leave
ret
push
xchg
and
inc
xor
xchg
dec
xchg
inc
stc
std
stos
jmp
push
sbb
pop
or
xor
enter
inc
jne
or
icebp
push
std
push
xchg
sbb
pminsw
lret
dec
xor
mov
jl
and
push
push
cmp
jecxz
push
xchg
loope
inc
add
cmp
jl
push
inc
mov
xchg
call
sbb
and
jp
jo
scas
or
mov
push
jg
mov
lcall
sub
mov
in
popf
jb
sub
mov
outsl
outsb
gs
lret
mov
je
gs
ss
insl
es
aad
insb
xlat
popa
mov
or
jne
arpl
gs
loopne
scas
fstps
cmc
mulb
idiv
insl
xlat
xor
cli
je
sti
xor
call
sub
and
pusha
insb
rorl
mov
mov
test
mov
icebp
jb
xor
gs
push
addr16
je
nop
int3
adc
push
daa
daa
addr16
jp
rcl
or
daa
daa
rcl
and
mov
pop
cmp
inc
pop
les
or
vshufpd
cmpb
dec
imul
fs
js
dec
adc
aam
int3
add
loopne
shrl
mov
mov
sti
mov
mov
mov
push
inc
xchg
lods
and
xor
or
jp
dec
push
adc
inc
shll
sbb
mov
aaa
fs
push
rorb
loop
test
pop
ljmp
push
adc
jmp
sbb
dec
push
decl
jne
repnz
inc
and
push
pop
out
adc
call
xchg
add
adc
in
inc
cs
insb
js
ds
dec
dec
pop
adc
enter
xchg
xchg
mov
enter
cwtl
in
mov
mov
push
insb
pop
xchg
push
mov
sub
mov
pop
cmp
nop
push
xchg
std
xchg
and
pop
xchg
std
xchg
std
xchg
std
test
jmp
std
lret
mov
pop
xchg
gs
js
insb
outsl
xor
shll
mov
std
icebp
add
lea
dec
pop
addl
mov
push
insb
popf
cmp
jg
xor
out
xor
call
outsb
lods
lods
insl
test
stc
jns
inc
push
cmpsb
sti
cld
std
in
nop
cmpsb
mov
xor
push
out
pop
inc
xor
loop
outsl
lcall
cmc
div
call
sub
js
fwait
je
add
jmp
xor
gs
lock
fldt
inc
popf
cli
std
fs
es
mov
outsl
add
add
lods
sub
mov
outsb
insb
popa
jne
add
or
xor
scas
mov
mov
jno
xor
and
imul
js
cmp
fildll
js
aaa
pop
xchg
outsl
jb
cs
add
dec
iret
shlb
arpl
mov
bound
das
out
int
cmpl
xchg
push
fnstcw
test
pop
add
movsb
add
fnstcw
add
aam
add
inc
imul
je
imul
adc
or
fwait
je
push
mov
daa
dec
xchg
mov
jge
aaa
adc
and
pop
jp
push
inc
mov
pop
xor
arpl
or
mov
out
sbb
pop
fdivl
mov
repnz
push
or
cmc
negb
jl
or
sub
mov
jne
adc
test
popa
cmp
repz
fsubrs
jle,pn
dec
out
mov
xchg
push
aam
add
addl
es
or
or
in
les
in
mov
jae
repnz
add
es
enter
int
and
mov
shlb
mov
xchg
push
nop
push
ret
add
movsl
mov
mov
push
add
test
aaa
dec
out
clc
mov
push
push
push
out
int3
jg
jg
jno
fadds
xchg
rolb
fmull
in
popf
cmp
outsl
sbb
leave
pop
mov
push
fsin
fcmovnb
or
or
mov
or
jo
add
bound
repz
mov
pop
pop
or
out
mov
add
push
cmpb
addb
or
push
inc
and
add
or
dec
out
adc
stc
inc
sahf
add
inc
and
add
dec
pop
inc
and
adcb
xor
stos
push
add
pop
or
enter
and
add
mov
add
lret
push
and
hlt
cmpsb
sbb
sbb
sbb
or
pop
push
mov
mov
lcall
mov
mov
cmp
adc
jmp
or
jae
sub
mov
or
loope
sbb
xchg
or
and
add
inc
lcall
int3
fidivl
add
in
pop
lcall
add
inc
push
imul
imul
xor
lock
fmulp
ret
ss
shll
mov
cmpsb
imul
cmpsb
xchg
add
cmpsb
imul
xchg
lcall
add
xor
js
imul
adc
sub
js
xor
inc
jnp
stos
xorb
jo
and
pop
add
sbb
add
sub
jnp
xor
jbe
outsl
pop
or
add
arpl
adc
dec
popa
jns
jne
and
jae
xor
jge
mov
adc
popa
dec
push
push
js
imul
lods
js
or
idiv
push
dec
push
dec
jae
push
sub
push
push
dec
sub
xchg
add
xchg
add
mov
lods
inc
mov
xchg
divb
adc
xchg
int
mov
test
xchg
sbb
xchg
movsb
inc
lret
and
add
cmpb
mov
pop
push
mov
or
pop
inc
adc
andb
or
add
push
add
and
stos
sub
addb
inc
inc
add
pop
packsswb
dec
adc
pusha
sahf
jge
cmp
mov
or
inc
leave
inc
adc
adc
aad
addb
add
rorb
add
jge
mov
or
fwait
xor
mov
adc
mov
pop
sub
adc
push
cmp
push
in
xchg
adc
add
jle
arpl
mov
push
outsb
jb
and
add
adc
xchg
xchg
cmpsb
adc
dec
fnstenv
add
or
or
adc
or
cmp
adc
inc
nop
add
popf
inc
mov
or
sub
andb
pop
add
shrb
pop
arpl
insl
dec
jae
cmpb
jg
iret
jmp
adc
add
inc
inc
je
pusha
add
or
pusha
add
popa
add
jns
mov
movsb
testl
mov
ja
sbb
aaa
pop
xchg
mov
add
mov
pop
cld
add
dec
sbb
shll
shll
or
mov
imul
pop
jge
add
add
add
mov
push
addl
rcr
mov
mov
add
mov
roll
or
mov
push
push
add
pop
push
popa
and
das
inc
add
lea
jne
xor
addl
jg
mov
xor
mov
jo
lock
lea
adc
jne
mov
in
or
add
cmp
lock
sub
xchg
sbb
test
jne
dec
insb
arpl
outsl
jns
jae
jo
out
xor
outsl
pop
jns
pop
or
imul
pop
test
or
btr
icebp
pop
xor
mov
insl
jecxz
in
cmovno
jno
jmp
dec
outsl
sbb
jae
lock
mov
xor
sbb
push
incb
test
add
and
push
pop
pop
adc
jo
scas
adcl
add
xlat
adc
cmovns
cmp
dec
mov
jae
movsb
fildl
pop
or
sub
sub
add
jb
int
push
add
popf
outsb
lret
sbb
or
neg
dec
xlat
mov
jecxz
mov
and
xor
jae
and
add
movsl
popa
and
inc
add
addr16
fstpl
jg
inc
imul
inc
out
mov
dec
loope
in
jae
adc
or
jbe
imul
xor
xor
pop
mov
lret
add
sbb
xchg
insb
popf
xchg
jae
lods
jmp
dec
or
lds
popf
push
xor
out
addr16
pop
adc
movsb
fistpl
pop
xor
xor
jmp
push
sub
mov
push
fwait
or
daa
dec
dec
dec
fldcw
xlat
outsb
xchg
mov
lahf
sbb
push
daa
jbe
mov
mov
daa
fs
outsl
pcmpeqw
mov
mov
jmp
mov
xor
pop
imul
and
arpl
insb
cmpsl
xchg
out
jnp
mov
mov
int
hlt
incl
sub
inc
xor
cli
xor
pusha
xor
hlt
or
push
add
jns
mov
std
incl
mov
xor
xor
xor
xor
call
mov
xor
xor
xor
xor
xor
xor
pushl
mov
aas
ss
ss
jg
mov
fwait
ss
aaa
xorb
aaa
pushf
aaa
mov
aaa
aaa
cmp
pop
push
cmp
cmp
cmp
pop
sarb
test
cli
cmp
cmpl
cmp
pushl
mov
cmp
lret
cmp
cmp
stos
cmp
daa
cld
cld
cmp
clc
jo
cmp
dec
xor
jp
xchg
xchg
mov
divb
adc
push
xor
jne
jg
test
mov
iret
xor
xor
xchg
sub
int
mov
jg
xor
sub
push
ss
ss
ss
mov
aaa
xor
fwait
jmp
sub
xor
cmp
call
jne
cmp
cmp
cmp
or
xor
xor
or
add
or
mov
xchg
and
xchg
jo
inc
xor
enter
pop
adc
mov
test
fmull
cltd
and
and
cmp
add
ljmp
jae
jne
pop
sbb
mov
mov
inc
outsl
pavgw
or
or
add
in
add
mov
or
add
or
mov
add
adc
pusha
add
insl
adc
int3
jbe
pop
mov
dec
and
nop
add
roll
push
sub
or
fs
or
add
pushf
sub
js
es
stc
xchg
adc
cld
movsl
add
add
cmp
stos
add
lods
and
dec
mov
xchg
addb
add
dec
add
add
fwait
pop
sbb
xor
mov
adc
jp
push
xchg
jae
roll
pop
sub
push
leave
and
nop
and
dec
ror
xorb
pusha
scas
mov
sub
rclb
fldenv
scas
adc
adc
jbe
pop
dec
push
jnp
test
adc
add
xor
and
add
pop
pop
in
xchg
mov
daa
add
and
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
