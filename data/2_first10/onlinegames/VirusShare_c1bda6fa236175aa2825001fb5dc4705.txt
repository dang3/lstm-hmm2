cmp
mov
adc
mov
ja
sub
addb
add
pop
je
mov
ja
jbe
inc
push
and
pop
test
daa
fnstcw
aam
mov
idiv
stc
mov
mov
and
pop
xchg
rol
sbb
insb
sbb
pop
and
cli
outsb
lods
pop
dec
fisubs
pop
mov
add
jecxz
loopne
inc
push
mov
rcll
mov
nop
les
add
cmp
mov
inc
addb
mov
cs
repz
fldcw
jl
mov
dec
ljmp
hlt
sub
in
dec
mov
ljmp
mov
jo
and
stos
loop
cwtl
pop
cmpb
out
mov
pop
lds
inc
sbb
ret
stc
xchg
mov
or
std
negl
jne
gs
mov
mov
mov
test
lods
notb
pushf
lahf
push
in
xlat
cmp
xor
pop
dec
jp
xchg
mov
jne
outsl
sub
mov
mov
push
cmp
push
push
stc
ret
cs
sub
jb
push
sahf
cmp
pop
fmull
gs
pop
inc
mov
cld
push
pop
adc
filds
lods
jp
jns
inc
mov
mov
sub
in
mov
push
lahf
cmp
jo
adc
test
xor
lea
adc
out
mov
cwtl
lret
xchg
mov
cmp
adcl
test
icebp
stos
addr16
mov
fiadds
gs
sub
mov
add
into
in
push
mov
les
inc
dec
popf
mov
and
out
inc
xchg
xchg
in
out
in
and
xchg
mov
jmp
or
in
rorl
dec
adc
fwait
ss
cmp
aas
fsubs
imul
filds
jo
jp
dec
std
xchg
mov
or
sub
test
orb
sub
xchg
adc
dec
xor
fimull
cmp
dec
jp
fldcw
xlat
jmp
stc
inc
lods
push
or
fistpll
inc
lds
mov
mov
test
cmc
inc
push
js
cmp
mov
adc
jne
loopne
mov
ss
push
jge
mov
and
xor
adc
movsb
test
stos
mov
outsl
je
bound
das
sub
fldcw
loop
mov
mov
mov
inc
hlt
aaa
movsb
hlt
outsb
cmp
loope
leave
inc
pop
xor
xchg
shll
fldt
xor
push
movsl
aaa
andl
push
loopne
out
leave
cmp
std
ds
popa
repz
inc
dec
push
out
or
adc
mov
fildl
stc
pop
xor
les
lds
dec
iret
xor
out
xor
or
mov
dec
out
xor
je
into
or
rclb
ss
lods
sbbl
xor
jb
lods
mov
pop
out
push
mov
mov
sbb
loop
rcll
jmp
dec
insb
dec
sahf
pusha
pop
out
dec
frstor
test
mov
lret
icebp
xchg
jg
stc
cmpsb
aad
xor
dec
inc
and
and
xchg
jnp
xchg
loope
lahf
or
push
xchg
dec
mov
fisubrs
scas
loope
std
hlt
fisttps
cmp
add
jb
sbb
mov
iret
pop
outsl
sarb
outsl
out
call
into
imul
inc
lods
add
hlt
adc
pop
testb
push
dec
lods
aaa
ret
mov
and
out
adc
mov
daa
dec
adc
jae
inc
shll
mov
dec
rcrl
cs
ret
jecxz
aas
sbb
ja
daa
ss
movsb
mov
mov
mov
jo
orl
mov
clc
adc
mov
mov
loope
push
xor
jo
call
mov
insb
sub
adc
sbb
lds
repz
xor
inc
mov
jno
sar
mov
xor
xlat
movsb
rcr
rcr
popf
sub
fdivrs
sbb
lea
ss
insl
insb
adc
adc
mov
stos
test
mov
push
int
push
fsubrs
das
shll
decl
push
fidivs
dec
adc
sub
fwait
xor
lds
pop
aad
call
mov
iret
pop
cmp
add
jecxz
push
outsl
xlat
fstpt
mov
cmpsb
cmpsl
push
xchg
or
push
sbb
adcb
sahf
ret
lea
imul
cmpsl
insl
add
push
cmp
inc
mov
xchg
mov
call
cmp
aaa
xor
fistpll
push
addr16
mov
cmp
cs
call
cmp
sbb
or
loopne
mov
cmc
jle
bnd
fstpl
roll
push
adc
scas
mov
push
ret
xlat
or
cltd
aad
push
std
arpl
push
mov
lret
pmullw
mov
daa
jmp
imul
js
dec
xor
out
and
enter
add
sbb
add
test
mov
sti
mov
in
xor
pop
or
add
ljmp
xor
js
imul
push
cmpsl
mov
sub
cmp
or
or
push
push
fiaddl
lock
push
cmpsl
jo
in
fildl
gs
cwtl
gs
xor
mov
movsl
sbb
push
mov
inc
fwait
inc
mov
push
jnp
pop
ret
call
xchg
mov
lds
movb
adc
pop
test
dec
push
gs
lds
imulb
xchg
loope
xchg
push
xchg
icebp
stc
cltd
xchg
stc
fiaddl
cli
sbb
cli
cmp
and
pop
jnp
jmp
jp
cltd
in
mov
bound
addb
cwtl
mov
or
dec
add
fcmovu
or
cmp
xor
ds
pop
push
jp
pop
or
pop
js
jbe
pop
mov
loop
daa
fs
test
and
lods
or
push
outsb
arpl
jmp
rcrb
jle
aad
out
sbb
cmpsb
jecxz,pn
adc
xchg
jae,pt
movsb
incl
clc
lret
ss
pop
adc
stos
sub
pop
movsl
iret
and
jae
xor
pop
or
sub
iret
out
pusha
jl
mov
lods
jle
arpl
push
fisubrs
repz
lret
mov
cmp
sbb
fstpl
mov
mov
pop
vcvtpd2psx
lret
rclb
dec
push
testl
mov
pop
cs
cmp
sub
ret
jmp
sahf
out
jle
ljmp
pop
mov
mov
shlb
ret
or
shrl
ja
sbb
outsb
mov
into
mov
jmp
stos
sbb
in
bound
adc
popf
scas
jae
aaa
ss
sub
mov
jmp
lock
adc
or
xor
xchg
pop
jg
inc
pop
imul
or
iret
bound
xor
fnstsw
add
mov
icebp
call
dec
dec
fxam
lea
dec
xchg
xchg
xor
fimuls
cmpsl
ret
mov
add
int
out
aad
neg
jne
push
popf
and
sbb
mov
add
dec
push
mov
inc
js
xchg
pop
xchg
sar
cmp
nop
dec
jne
fdivl
mov
lds
int3
pop
cmc
cmpsl
jb
and
sbb
rcl
dec
lds
mov
mov
mov
dec
mov
lea
sbb
dec
aad
mov
jecxz
sub
ds
movsl
mov
pusha
insb
add
das
xchg
sbb
adc
popa
movsb
pop
shll
mov
lret
ret
mov
xor
lcall
xchg
push
pop
popa
mov
pop
mov
inc
jns
fiaddl
pop
dec
sar
jp
inc
loope
data16
outsb
ja
out
es
repnz
ds
daa
imul
pop
adc
xchg
nop
in
hlt
insb
mov
in
pop
jb
out
jnp
unpckhps
pop
fmul
sub
dec
stc
ja
ljmp
xchg
sti
mov
xchg
xlat
adcl
cwtl
inc
sbb
out
cmc
jp
add
mov
push
mov
in
shl
dec
lahf
push
inc
mov
inc
cmpsb
inc
jbe
inc
lods
dec
mov
pandn
jb
sbb
dec
int3
dec
add
inc
adc
and
fcomip
or
pop
xadd
xchg
dec
cld
adc
sub
sub
lock
push
fsubrl
mov
add
fdivrl
cmc
jb
sub
outsl
and
imul
lahf
iret
push
xor
fmuls
mov
mov
adc
sbb
mov
add
dec
cmp
cwtl
jnp
call
and
cmp
mov
mov
xchg
add
sahf
ficompl
or
jbe
loopne
pushf
arpl
into
repnz
cmp
call
cmp
or
and
mov
mov
movsl
test
jle
out
out
xor
push
or
je
fs
mov
mov
sub
stc
xor
sub
mov
dec
jnp
xchg
push
mov
xor
outsl
pop
mov
movsl
sub
aam
push
mov
dec
add
xchg
and
cmpsb
ss
jb,pt
cld
in
lds
xchg
push
loope
mov
push
ret
lods
out
pop
add
lret
fldl
cs
nop
fs
inc
je
js
mov
popf
lret
in
mov
scas
aaa
addr16
jp
sbb
jnp
add
insl
mov
int3
fwait
inc
xchg
mov
sbb
jge
daa
adc
sbb
xor
sub
push
cmp
sbb
out
fsubp
std
pop
sub
or
loopne
lods
loopne
inc
jo
cmp
cmpsl
pop
inc
jle
or
pop
sub
adc
ljmp
fnstcw
lahf
or
mov
ret
dec
cmp
cld
sub
cwtl
pop
addr16
fnsave
or
xchg
out
mov
movsb
outsl
je
xor
call
bound
push
and
xchg
mov
cs
sbb
push
cmp
es
lods
data16
fisttpll
jmp
addr16
lods
dec
cmp
test
sahf
sbb
jl
mov
sub
xor
inc
in
cltd
mov
repz
das
xchg
inc
and
mov
hlt
cmp
scas
inc
push
mov
push
lock
xchg
hlt
add
adc
inc
cld
test
adc
lds
push
pop
mov
pop
cmp
dec
mov
mov
mov
in
das
jnp
jbe
out
mov
mull
das
shl
xor
push
popf
pop
ja
stos
jnp
in
out
lcall
lret
movsb
cmpsb
mov
xor
ds
iret
loop
mov
jg
mov
mov
lret
xchg
mov
mov
push
mov
call
mov
mov
mov
xchg
shll
into
pop
nop
sti
movsl
jo
rol
mov
imul
cli
adc
pop
adc
repnz
mov
cld
pop
shlb
lcall
loopne
xchg
sbb
push
or
inc
icebp
sub
xchg
push
rcll
sbb
mov
loopne
sbb
inc
adc
xchg
jb
inc
outsl
lahf
in
jle
push
enter
aaa
cltd
jmp
cmp
add
std
jecxz
add
sti
lock
repz
xor
out
push
lahf
cs
sub
subb
outsl
sbb
jbe
dec
call
sbb
sub
mov
loop
aam
addr16
lret
aam
jnp
in
fistps
xor
inc
lds
mov
imul
sbb
decb
fcompl
jge
movsl
cs
negb
sbb
or
insl
cmc
aaa
out
xor
push
pop
cmp
and
cmp
movsb
not
dec
out
das
mov
cmp
sbb
movsl
push
pusha
mov
add
aam
sbb
lods
lret
lock
loope
xor
lds
xlat
lds
inc
rolb
lahf
test
adcb
test
cld
ds
pop
inc
jg
jno
add
lds
fbstp
mov
or
pop
push
mov
cmp
andb
shrl
call
iret
clc
cmp
xor
out
xchg
rcpps
jmp
push
sti
adc
cmp
mov
xchg
adc
pop
hlt
pushf
dec
fadds
data16
adc
jb
ret
inc
stos
fistpll
push
aas
std
lock
jns
scas
in
pop
mov
jle
aaa
pop
pop
mov
xlat
popf
inc
cld
cmc
imul
jo
mov
or
cmc
mov
mov
loop
rcl
jge
jge
leave
add
ret
mov
rclb
fs
mov
add
in
les
mov
pop
dec
and
adc
sbb
push
fdivrs
call
cmp
subb
shr
pop
lods
cmp
in
or
jo
jno
loop
sub
icebp
push
sbb
ja
pop
jne
sub
sbb
ss
and
outsb
jbe
sub
push
test
jmp
inc
sti
stos
and
repnz
pushf
in
lcall
mov
xor
xor
nop
adc
pushf
sti
and
in
inc
jg
push
iret
push
adc
adc
pop
push
pop
sti
cwtl
push
call
mov
stos
in
testb
data16
aam
lds
ss
cmp
inc
aaa
cs
cwtl
inc
cmc
mov
add
mov
dec
addr16
dec
and
mov
ss
es
or
clc
fbstp
inc
shlb
ds
mov
aad
roll
and
sub
pop
popa
mov
fcoms
insl
outsl
lods
push
push
jg
rol
popf
inc
adc
lea
ja
out
nop
jae
stos
mov
cs
stos
pop
adc
xchg
in
mov
imul
adc
xor
movsb
dec
mov
out
je
or
add
lods
sti
mov
sbb
fcompl
scas
sbb
cmp
xlat
cmp
cmp
mov
je
gs
mov
cmp
or
repnz
cmp
js
imul
cmp
push
push
std
data16
mov
mov
popa
loope
leave
cs
into
cmp
dec
jmp
mov
fimuls
push
dec
xadd
inc
mov
bound
push
jecxz
ret
cli
sub
mov
popa
mov
mov
mov
and
in
incl
lods
pusha
divb
lcall
jbe
push
or
and
adc
or
in
xchg
fs
jb
xchg
pusha
mov
add
or
pushf
mov
xchg
insb
fmuls
push
jle
cld
or
dec
lds
xor
ss
mov
insl
or
inc
dec
sahf
dec
stos
dec
ss
es
stos
ds
in
pop
fcmovu
fidivrl
lock
jp
xchg
pop
push
add
jle
imul
xor
rorb
mov
data16
pop
mov
shl
insb
or
dec
in
xor
inc
rorb
sbb
pusha
stc
jno
pop
cmp
cmpsb
in
loope
jbe
adc
shll
outsb
lds
push
subb
push
cmp
and
cmp
aas
inc
pop
dec
loop
pop
aam
cmp
pushf
jl
loopne
xchg
or
scas
add
pop
in
cmp
outsb
sub
xchg
int
or
enter
or
ljmp
out
fsubrs
cs
or
pop
arpl
int
jmp
in
xlat
out
jmp
movsb
xchg
outsb
push
push
cmp
sbb
ja
push
or
pop
mov
mov
out
popa
cmp
push
idivb
pop
jo
sub
testl
mov
ljmp
stos
jne
imul
jl
stos
xchg
fsubrl
inc
jbe
iret
push
sbb
and
push
push
shrb
popa
cmc
in
jle
sub
mov
lret
pop
xchg
jle
adc
out
pop
mov
aas
mov
arpl
shlb
and
aas
jmp
xlat
sarb
and
into
xor
mov
data16
xchg
loope
mov
jg
jmp
cwtl
mov
jmp
pop
out
mov
inc
xor
mov
push
mov
or
je
pop
mov
cltd
mov
mov
clc
pop
and
stos
inc
and
mov
inc
pop
lahf
outsb
jl
adc
mov
fwait
adc
cs
mov
test
icebp
sbb
das
pop
cmp
mull
dec
aaa
xor
hlt
rolb
jne
jbe
loopne
xchg
cmp
sub
adc
insb
neg
push
arpl
std
jns
or
out
xlat
fdivr
sbb
mov
bound
dec
lock
mov
repz
pop
dec
loope
xchg
mov
mov
sbb
push
imul
sbb
dec
gs
or
ss
push
mov
fwait
movsb
xor
adc
out
adc
sbb
jns
insl
xorl
sarb
dec
outsl
out
dec
fists
in
mov
lods
or
in
outsl
daa
dec
pop
push
inc
adc
sbb
jo
add
cmpxchg
movsl
push
out
jle
rorl
fisttpll
in
sbb
sbb
dec
sub
leave
stos
test
test
out
fwait
push
insb
mov
icebp
xor
or
dec
or
xor
mov
and
popa
adc
add
out
in
cltd
and
push
xor
scas
int
popf
addb
mov
ljmp
or
and
inc
in
popf
cmp
dec
sbb
and
aas
xor
jg
icebp
inc
insl
out
js
jb
mov
aam
cmp
fwait
nop
mov
sub
in
and
shll
into
jmp
and
sub
mov
jbe
stos
adc
ljmp
jo
out
inc
fsubp
sbb
mov
test
test
cmp
jg
fidivrs
inc
sub
mov
inc
push
pop
cmp
ja
lea
data16
ret
xlat
int3
jge
or
or
adc
std
push
dec
push
cmp
pop
sti
pop
lret
sub
mov
mov
sub
fcompl
push
and
outsb
jb
adc
bound
pop
inc
dec
sarb
mul
out
fsubs
adc
inc
add
ficomps
in
dec
xchg
pop
outsb
andb
sbb
push
pop
mov
in
test
or
xchg
cmp
adc
or
inc
or
test
dec
pop
push
icebp
cs
movsb
dec
jl
int3
mov
hlt
push
mull
je
stos
mov
and
loop
inc
into
jnp
sub
ficoml
mov
nop
and
dec
and
jge
jg
adc
icebp
les
mov
adc
orl
mov
in
dec
ficoms
mov
call
inc
mov
or
out
leave
push
inc
sbb
enter
jae
andb
lods
adc
nop
ficoms
sti
inc
adc
jns
dec
movsl
inc
and
jo
dec
cmpsb
int3
imul
lods
xchg
inc
jecxz,pn
mov
ret
iret
icebp
mov
push
repz
call
xchg
in
dec
jns
inc
xor
popa
inc
fst
xor
ss
cld
or
mov
mov
loop
sbb
pop
xchg
mov
and
pop
insb
mov
mov
add
aaa
divl
xchg
sub
sahf
fadds
push
cmc
daa
outsl
xchg
jae
jmp
push
adc
sbb
jo
cmpsl
mov
outsl
and
fwait
pop
adc
test
mov
lock
xchg
es
aas
repnz
fwait
dec
pop
in
xchg
mov
push
adc
jmp
adc
pop
dec
sbb
cld
jg
jg
push
jmp
cmp
lahf
xlat
mov
mov
sub
pop
xrelease
mov
mov
int3
or
fdivp
cli
hlt
mov
bound
stos
dec
scas
sti
sbb
loopne
and
movsl
adc
or
lods
add
ror
push
sub
push
imul
in
movsb
xlat
pusha
adc
jle
jbe
pop
lahf
xor
jmp
mov
cmp
bound
mov
cli
test
mov
out
gs
gs
or
xor
sarl
dec
dec
pop
hlt
push
lock
sub
int
sahf
add
push
sbb
sbb
xchg
jns
inc
sub
push
jae
push
jo
add
sbb
xor
add
mov
cwtl
pop
fisttpll
aaa
stos
mov
jnp
aas
mov
push
jmp
fcoml
or
dec
or
les
addr16
mov
mov
and
adc
mov
jp
jmp
lods
add
es
cwtl
and
pop
sti
adc
shrl
pop
dec
pop
xchg
add
mov
addr16
test
push
insb
pushl
mov
jmp
enter
xchg
cmp
jno
mov
cmp
insb
or
int
sbb
test
sub
mov
out
es
or
bound
xchg
mov
leave
pop
into
enter
adc
sbb
dec
mov
in
or
or
mov
jle
fdiv
push
fcomip
test
dec
cmp
mov
jp
lcall
jo
fildll
pop
jle
rorl
stos
sub
lea
sbb
mov
and
int3
addr16
jmp
cli
ss
mov
stc
xchg
and
mov
pop
jl
mov
adc
je
fisubs
mov
adc
cmpsb
lret
decl
jg
jge
enter
jb
int
mov
rcrl
lea
mov
cmp
je
push
jne
or
decl
inc
xor
insl
pinsrw
jbe
outsb
jmp
sub
cld
push
push
fcmovnu
clc
push
xchg
fldl
xlat
dec
inc
sub
or
les
stos
xlat
pop
mov
imul
xorl
push
mov
sahf
adc
ret
fistl
adc
or
sub
std
or
lods
cli
push
sbb
xchg
pop
mov
in
adc
sbb
sub
data16
mov
sti
cmp
mov
mov
mov
aam
mov
inc
lock
cld
sbb
mov
add
adc
lea
es
xlat
test
sub
and
add
mov
aas
pushf
das
scas
subb
cmp
clc
xchg
xchg
fsubl
push
imull
push
pop
and
and
jg
or
dec
test
mov
ss
inc
repnz
popf
in
lock
sbb
pop
aam
jge
xchg
inc
ds
cmp
sub
mov
pop
cmp
inc
fisubrl
lods
stos
push
dec
xchg
xchg
jns
call
xchg
mov
cmp
dec
inc
dec
and
pop
loopne
in
aam
adc
jge
popf
shll
sub
xchg
in
cld
adc
sbb
sub
mov
mov
jle
out
xor
sub
dec
mov
out
pop
pop
jecxz
cwtl
addr16
ss
pop
jns
pop
dec
or
cmp
test
in
imul
inc
sbb
dec
push
xor
sbb
sub
lods
adcb
cmp
jp
pop
inc
mov
mov
out
out
push
jp
xor
orb
mov
jae
es
fwait
stc
rcll
inc
addl
jbe
pop
ljmp
inc
lods
mov
out
sub
outsl
cli
frstor
test
mov
jl
das
mov
jbe
dec
lods
xchg
test
cld
sub
stos
sbb
inc
xor
inc
jne
and
mov
jp
mov
pop
jecxz
fdiv
mov
in
or
jp
fs
xchg
int3
lcall
repnz
pushf
xor
cmp
je
jns
dec
cltd
sbb
rcr
adc
insb
jp
outsb
out
call
roll
fucomp
cwtl
es
cmp
or
push
add
and
add
negl
adc
outsb
xor
das
or
lods
add
mov
xchg
lret
sub
inc
and
addl
lret
jecxz
ret
loop
and
adc
pop
cmpsb
push
cs
sub
movsl
in
jg
cli
fnstcw
xlat
out
repnz
push
mov
and
mov
mov
fisubl
push
leave
or
inc
aaa
in
loope
stc
jg
dec
lods
pop
adc
inc
dec
int3
jae
subb
inc
jge
pop
imul
inc
and
push
mov
or
loop
or
out
xchg
rep
scas
negl
jl
push
push
pop
or
sarb
leave
push
or
cmp
sbb
adc
mov
into
icebp
mov
xchg
cwtl
aaa
push
inc
xchg
pushf
into
mov
or
fld
cmc
mov
out
pop
cmpb
xor
mov
mov
daa
push
mov
inc
jne
stos
mov
sbb
out
xchg
pushf
js
lock
outsl
xor
xchg
mov
ret
addr16
jno
or
mov
bound
daa
and
mov
push
ret
and
insl
adc
out
loop
dec
int
stc
push
in
shrl
fcmovnu
rorb
inc
mov
sti
dec
stos
cmp
sub
in
jo
mov
push
pop
or
or
mov
mov
nop
testl
pushf
inc
sbb
cwtl
sbb
adc
in
sahf
pusha
leave
sbb
mov
cmp
imul
lcall
jo
adc
and
sub
and
cmc
int3
mov
xchg
inc
xchg
je
push
push
xchg
mov
jmp
std
lods
dec
testl
scas
lods
mov
xor
bound
clc
pop
out
flds
rorl
xchg
sbb
into
repnz
insl
repz
fwait
pop
movsb
or
jnp
sub
ss
fsubl
shll
jne
popa
xchg
push
mov
and
sbb
mov
fnstenv
insl
into
fucomp
push
or
enter
xchg
or
aad
cltd
test
ljmp
jmp
not
sahf
fxtract
cmc
and
dec
xchg
out
inc
stos
pop
pushf
mov
lret
cmp
push
xchg
sub
cld
pop
push
cs
jg
fwait
sahf
xchg
or
je
popf
js
xor
enter
push
mov
mov
imul
sbb
jle
push
fwait
mov
sbb
cmc
pusha
test
out
fbstp
lds
add
call
stos
pop
cmp
jge
stos
dec
repz
sub
pop
loope
fwait
pusha
xor
xchg
les
sbb
jmp
loop
mov
mov
sbb
movsb
cltd
pop
sub
lock
movsb
out
pop
sub
mov
xchg
pop
or
jmp
out
mov
imul
mov
xchg
or
mov
pop
dec
in
leave
pop
adc
adc
mov
stos
icebp
cmp
mov
and
pop
fdivrp
sbb
mov
in
repnz
xchg
fldt
pop
jg
inc
cmpsb
mov
mov
sub
sbb
aam
cmp
mov
inc
push
adc
or
sub
jae
xchg
test
mov
xchg
repz
xchg
mov
jle
dec
pop
popf
mov
aam
mov
test
xor
dec
mov
jns
jmp
mov
mov
xchg
pop
test
repz
pop
ret
dec
sub
adc
xchg
jg
leave
enter
rcll
pop
test
in
mov
or
mov
cwtl
dec
testl
ret
add
adc
js
repz
mov
addb
clc
jbe
cltd
nop
subb
adc
mov
add
into
jg
adc
mov
mov
pop
add
pop
add
pusha
jmp
push
adc
shll
out
out
jmp
mov
ja
inc
fst
inc
cmpl
call
ret
sub
gs
mov
mov
mov
jg
and
movsl
pop
daa
sarb
fsubrs
push
jl
push
es
cmp
push
adc
jo
add
testl
jge
cmpsb
adc
xorl
ljmp
test
inc
add
fistl
cld
insl
dec
cmp
repnz
dec
cs
les
lds
ficoms
cmpl
test
mov
cmp
and
adc
incb
dec
mov
test
mov
movsl
mov
or
cltd
es
xchg
sbb
add
idivl
or
ds
fldcw
sub
push
sub
rcl
sbb
pop
xchg
cmpsl
xchg
pushf
xor
jg
test
add
cmp
shrl
fldcw
test
push
outsb
inc
cmpsb
cmp
or
int3
mov
sub
sbb
xor
idivb
xor
pop
in
fwait
cli
mov
stos
mov
inc
enter
test
mov
jl
nop
mov
scas
imull
inc
mov
fidivrs
xchg
sub
mov
es
push
adc
add
jecxz
lahf
cwtl
or
and
pop
xor
inc
cmp
pop
shlb
pop
dec
or
cmpsb
roll
or
rclb
ret
pop
outsl
test
dec
cmp
cmpsl
mov
aaa
dec
xor
dec
cmp
insl
jne
jge
push
xchg
or
imul
jle
sbb
sbb
fidivl
jns
push
andl
and
cmp
movd
or
or
insb
sbb
mov
roll
mov
fildll
mov
push
sbb
stos
insl
loop
adc
jl
gs
mov
nop
mov
mov
stc
test
xor
pop
cld
mov
xlat
lock
mov
jno
fdivrl
pop
jp
dec
mov
mov
and
add
push
les
or
mov
repz
sub
addr16
lcall
mulb
fisubrl
or
jge
push
mov
fldl
orb
pop
jo
jle
inc
inc
call
sub
xchg
and
mov
jle
add
je
inc
fwait
mov
popa
cmpsl
jns
lods
sbb
fcmove
in
xor
mov
xlat
lret
lods
rorb
test
mov
lret
out
jg
or
sbb
mov
fadds
icebp
cwtl
orl
subl
push
shl
jae
sub
insl
bound
ficompl
mov
inc
lods
cs
add
enter
jno
je
test
popa
testb
push
add
mov
jns
stos
inc
adc
and
adc
add
test
push
xchg
aaa
lret
cmp
jb,pn
fwait
dec
stos
aaa
or
push
int
outsb
fwait
mov
dec
jle
inc
and
cld
xchg
inc
xor
pop
add
jns
adc
hlt
ljmp
push
cmpsb
pusha
jno
cmpsb
add
mov
jo
mov
ss
pop
add
jne
lods
mov
pop
outsb
cmpsl
jno
fcompl
insb
push
dec
jl
sbb
pop
mov
mov
sub
ss
lea
cltd
push
sbb
pop
stc
ret
lahf
loop
fildl
es
in
lea
xchg
mov
fwait
testb
mov
sarl
xchg
in
and
xchg
ss
ljmp
push
xorl
mov
stos
mov
jg
push
aam
arpl
bound
pop
jo
add
cmpsl
mov
mov
mov
aaa
cmp
and
lret
add
jg
mov
or
lock
pop
ljmp
add
pop
fsubrs
bound
or
pop
mov
movsw
sti
fnstenv
gs
cmp
arpl
jne
enter
dec
sub
push
idivb
fsts
xchg
mov
shr
sbb
jne
aas
push
outsb
mov
add
and
icebp
jmp
cmp
xchg
faddl
in
ret
cmpb
sub
ret
cmp
sbb
cs
or
add
movsb
fldenv
jecxz
mov
jne
xchg
sbb
ljmp
dec
mov
adc
mov
gs
xor
bound
lock
test
mov
or
inc
nop
jl,pt
das
sti
and
or
fcoml
adc
cmp
sbb
mov
adc
aas
pop
lret
fildll
jmp
xor
dec
sbb
out
sub
stos
xor
adc
std
test
into
in
outsl
ss
sbb
push
adc
rorl
movsl
imul
fwait
outsl
psrld
stos
pop
sahf
movsl
mov
mov
dec
add
outsb
mov
ficompl
xorb
lods
fbld
push
cmp
dec
jnp
pop
or
in
dec
jecxz
addl
mov
fimull
fildll
fimull
fstl
cmp
dec
xor
jl
out
pop
aaa
jle
mov
and
js
mov
fwait
jb
mov
or
ss
add
scas
mov
loope
scas
cs
push
mov
clc
repnz
movsl
movsb
jnp
cmp
lods
sahf
and
outsl
sub
inc
frstor
mov
jecxz
dec
dec
hlt
add
decb
add
imul
mov
cmp
pop
pushf
lods
jnp
mov
add
js
mov
sbb
movl
jmp
cmp
push
rorl
sbb
pop
ror
frstor
jns
xor
pop
arpl
mov
sub
lock
pop
push
push
add
sub
sub
mov
into
adc
mov
xor
loop
lahf
push
adc
add
and
movb
xchg
dec
xchg
xlat
fs
push
aam
adc
sbb
and
adc
mov
inc
movsl
sub
repnz
lcall
dec
dec
cltd
in
jle
sub
out
mov
adc
cmp
mov
ds
cmp
jns
aad
scas
cmp
mov
aad
ret
jle
cwtl
or
xchg
sbb
and
xchg
or
call
push
scas
mov
popa
cmp
sbb
pop
mov
cld
add
fwait
in
mov
mov
xchg
bound
jp
es
addr16
stos
fnstsw
pop
jno
or
add
and
mov
xor
jmp
sbb
jecxz
jno
lret
or
inc
rcrb
push
cmp
faddl
repz
pop
dec
mov
sub
scas
push
cmp
inc
cwtl
sti
jb
dec
add
lcall
shr
jbe
inc
cmp
push
push
xlat
cmp
mov
aas
sub
fiadds
test
adc
mov
lret
jmp
jp
sbb
adc
in
cltd
push
adc
mov
lret
mov
xchg
mov
or
inc
inc
div
inc
add
fidivs
adc
add
xchg
jmp
and
stos
and
fadd
je
dec
dec
leave
je
je
xchg
xchg
subb
loop
pop
enter
cld
jge
xor
outsb
dec
std
and
je
push
ljmp
hlt
and
outsl
xchg
or
or
cli
adcl
cmp
push
lock
and
ret
stos
and
pop
adc
mov
outsl
or
mov
mov
lahf
cwtl
repnz
fldt
repnz
mov
inc
pop
pop
cmp
stos
fcmovbe
or
lcall
arpl
mov
in
icebp
fistl
push
in
in
push
sahf
add
fcoml
icebp
adc
push
jecxz
shrl
sarl
ljmp
shll
push
jb
imul
cmc
in
dec
push
xchg
and
dec
add
and
mov
sbb
sub
fnstcw
sbb
jmp
inc
jmp
fstpt
fs
nop
jnp
in
ffreep
insl
push
adc
dec
popa
test
sub
sbb
in
repz
xchg
sub
fadds
fidivrl
cmpl
rcrl
out
fnstenv
ja
add
call
cs
adc
xchg
sbb
daa
fwait
rcl
and
cmp
and
jmp
adc
mov
cltd
arpl
pop
or
xor
stos
cmp
mov
xor
jecxz
repz
adc
xor
lock
pop
xchg
and
sbb
fbld
xor
or
repnz
repz
dec
push
cli
imul
mov
inc
pop
sarl
pop
loope
mov
pop
mov
and
fs
pusha
sbb
lret
bsf
mov
sbb
add
stos
cmp
rcrl
outsb
sbb
xor
imul
xlat
lock
pop
testl
dec
xlat
inc
imul
and
ret
notb
insl
mov
movsl
stc
mov
add
cmp
ja
inc
sub
lds
cmp
sbb
mov
cmp
nop
ret
nop
adc
outsl
imul
sti
cwtl
mov
cmp
test
imul
mov
sub
loope
fwait
xchg
sub
jmp
jnp
push
sbb
sbb
in
in
xor
mov
or
push
mov
inc
push
rol
test
push
fcmovne
and
mov
test
jno
inc
fnsave
mov
int
cmp
jge
pop
imul
dec
and
in
and
loope
movsl
test
stos
lret
cmp
rol
mov
loope
es
in
dec
jb
sbb
push
lea
popa
out
test
fisttpll
imulb
loop
and
or
or
xchg
int
jle
cmp
sar
stc
and
add
invlpg
or
gs
andl
pop
jne
stos
jl
sub
push
add
sbb
cmc
adc
mov
pop
mov
insl
data16
dec
or
cwtl
test
sbb
and
xchg
sbb
loopne
movsb
mov
outsb
sbb
fwait
jne
sub
cli
adc
dec
daa
arpl
je
add
data16
or
cmp
mov
ret
in
insb
sub
in
scas
stc
es
out
les
lea
lock
aam
cmp
pop
je
add
fldl
ss
out
or
mov
in
jo
cs
fadds
xlat
inc
mov
push
lds
mov
xorl
sbb
mov
test
jmp
out
jo
mov
and
mov
lods
mov
xor
daa
jno
outsl
rorb
sub
or
push
movsl
test
dec
xor
ljmp
and
jg
cmp
stc
adc
imul
adc
shlb
push
sub
lcall
pop
cmp
sahf
or
sbb
add
cmp
mov
cmc
test
cs
hlt
jecxz
jns
dec
xchg
sbb
mov
xchg
xchg
loope
cmpsl
mov
dec
in
mov
mov
adc
sub
int3
xchg
cli
jno
pop
mov
push
or
ret
mov
aam
mov
lods
jmp
fwait
push
and
scas
mov
das
inc
pop
das
in
cmpsb
stos
inc
jle
orb
or
push
adc
xchg
call
ds
push
xchg
fst
test
and
setb
fwait
mov
push
sub
cmpsb
xchg
leave
jmp
jle
test
ss
pop
mov
xchg
mov
insb
insl
mov
cmp
aaa
outsl
mov
testb
test
sub
jge
das
add
mov
xchg
ret
in
or
leave
jp
fidivs
ds
je
adc
cld
jae
ds
xchg
cli
xchg
clc
push
or
lock
cmp
push
pusha
xor
and
pop
int3
push
xchg
mov
repnz
into
xor
ds
popa
lods
mov
push
add
inc
fwait
dec
and
push
push
xor
aas
pop
repz
dec
gs
lcall
lods
lret
mov
sahf
xchg
jg
jno
xchg
fwait
in
cmpsb
jle
fldcw
loop
push
mov
cmp
rcl
in
into
addb
stos
ds
push
popa
inc
fisttpll
in
mov
rcr
pop
stos
stos
jp
call
loop
insl
repz
ss
call
fdiv
cmp
jbe
shlb
inc
xor
xchg
je
lock
push
sub
add
hlt
test
gs
sbbl
adc
ljmp
cmp
sub
push
jnp
outsb
xor
dec
pop
push
gs
imul
xchg
inc
lret
or
nop
cmp
cmp
in
icebp
ss
pop
pusha
aam
and
sbb
push
jmp
int
or
lock
fistpl
cwtl
in
cmpsb
lret
aaa
xchg
out
mov
incl
nop
fnsave
fsub
outsl
pop
or
cmp
mov
dec
jb
out
mov
dec
sub
mov
ss
icebp
push
stc
inc
in
call
test
shlb
lret
push
cs
movsb
jbe
inc
push
inc
xor
movsb
rol
jno
mov
rcrl
xchg
dec
scas
pop
test
adcb
ljmp
or
js
fsubp
icebp
adc
or
adc
sub
add
xor
inc
sub
repz
gs
dec
xor
cmp
sbb
xor
nop
pop
aad
push
sub
test
cmp
sub
icebp
xor
fildl
movsl
or
popl
nop
lods
xor
dec
jp
jge
xchg
cmc
add
mov
xchg
and
push
test
and
sbb
in
cmpb
fldcw
jg
or
mov
xor
cmp
inc
or
fs
sti
cmc
mov
repz
fdivl
pop
aam
cmp
scas
xchg
ja
pop
sbb
jnp
mov
popa
dec
lods
pcmpgtd
or
out
xchg
jne
and
lret
cmp
sub
inc
inc
inc
mov
inc
cmc
neg
mov
pop
and
into
inc
shl
sbb
mov
push
xchg
lea
pop
mov
cld
pusha
movsl
ret
push
and
cs
jbe
or
mov
mov
mov
ljmp
mov
mov
subb
push
movsb
fcom
insb
mov
rcr
and
sbbb
decb
sub
add
aaa
in
dec
sbb
push
idivb
and
inc
push
sarl
push
jno
cmp
adc
movsl
jne
bound
push
or
and
lret
into
and
jns
xlat
sub
dec
roll
push
inc
inc
pop
adc
ret
sub
mov
outsl
out
add
pop
or
xchg
xor
add
shl
fiadds
cmpsl
pop
xchg
icebp
sub
decb
shrb
or
cmpsl
scas
push
and
jo
test
rcrb
cltd
mov
sarl
popf
sub
in
rolb
cltd
push
adc
wrmsr
add
mov
ficompl
mov
jecxz
icebp
in
and
lds
imul
mov
test
lret
loopne
cld
outsb
mov
cwtl
adc
jge
or
sbb
in
pop
rorb
mov
movsb
divb
mov
imul
mov
in
outsb
mov
mov
loope
cmc
inc
daa
fiadds
insb
push
inc
ret
pop
sub
xor
lahf
push
push
mov
add
out
lcall
shlb
mov
into
es
aad
fwait
jne
push
xor
xchg
je
test
pop
outsl
shl
dec
push
shrb
dec
pop
ljmp
repz
or
mov
cmpl
imul
je
cs
or
adc
dec
xchg
in
jg
adc
adc
test
in
lcall
inc
and
mov
fwait
cmc
mov
test
mov
test
cld
sub
jbe
xor
cli
std
cs
in
leave
movsl
or
mov
dec
add
adc
into
jno
rcrb
mov
jae
jae
pop
fnstsw
cvtdq2ps
fisttps
push
jns
dec
int3
inc
xor
cli
jne
jmp
xchg
adc
sbb
popa
sub
leave
mov
sbb
jp
in
stos
pop
mov
adc
outsb
mov
mov
and
dec
leave
out
push
mov
std
hlt
loope
adc
ljmp
sahf
push
cmpsb
imul
inc
xchg
popf
pop
dec
outsb
clc
repnz
sub
mov
inc
cmpsl
push
ret
out
repnz
in
sub
out
pop
fs
fidivrs
mov
or
mov
dec
cli
popf
xchg
push
popf
sarb
scas
adc
decl
jne
inc
cmp
cmp
mov
test
bound
int
xor
fadd
and
jo
pop
push
push
pop
mov
push
mov
mov
scas
subl
mov
mov
pop
adc
scas
insl
pop
stos
ss
mov
ror
outsl
push
mov
fisubs
loop
mov
data16
mov
ret
mov
xchg
pop
cli
mov
mov
pusha
ret
xor
mov
mov
mov
gs
insb
lret
push
sbb
mov
add
inc
fwait
scas
test
sub
fcomip
push
add
fisttpll
test
cmpb
ret
mov
lret
mov
cmpl
lods
mov
and
cmp
jbe
mov
loope
pop
in
lahf
jle
sub
test
pop
push
pop
fs
lock
fisubs
adc
mov
xchg
jmp
nop
lret
add
pushf
adc
jns
ljmp
dec
push
mov
adc
inc
push
push
mov
scas
rolb
in
cmp
jmp
cmp
fisubrs
sti
outsl
ficoml
mov
dec
clc
jo
jge
add
es
sbb
insb
loop
icebp
test
add
lods
addr16
xchg
sbb
addr16
mov
cli
mov
shr
jecxz
pop
ss
int3
test
cltd
xor
dec
outsl
inc
xorl
or
mov
aam
cmpsl
mov
mov
jl
jno
popa
iret
stc
xchg
addl
mov
adc
xchg
fildll
mov
inc
ror
push
push
clc
int
ds
pop
in
and
mov
mov
mov
sub
sub
in
aad
cmp
pop
mov
jmp
iret
push
push
dec
mov
ljmp
mov
fwait
fwait
jns
dec
aas
cmp
adc
aas
ss
sub
popa
arpl
sub
aaa
jb
aaa
and
loopne
pop
mov
nop
imul
aas
mov
lods
add
push
imull
pop
cld
push
dec
stos
in
push
shlb
mov
ret
hlt
popf
jmp
push
movsb
or
push
and
mov
iret
scas
cltd
mov
cs
add
pop
mov
xor
sti
or
sbb
es
lea
fbld
sub
cli
jne
mov
in
and
or
mov
sahf
addr16
jle
lret
mov
cmp
sarl
fcom
inc
aas
inc
push
jge
mov
push
mov
pop
popa
ds
push
shlb
dec
push
mov
fxch
fwait
ret
mull
cltd
lea
aas
testb
push
push
xor
push
and
lock
mov
mov
mov
adc
xlat
adc
enter
sti
stos
inc
adc
or
mov
push
cmpsb
mov
fs
test
mov
pop
lods
cmp
dec
cld
jbe
jl
push
and
jb
mov
sbb
int
xor
pop
cmpl
jnp
add
adc
and
out
mov
cmovno
or
pop
jns
xorl
stos
out
mov
mov
mov
movsb
in
adc
sbb
movsb
imulb
fmuls
test
sub
lahf
bound
test
icebp
insl
ror
jo
mov
int
loope
and
lods
sbb
mov
fistpl
add
sbb
js
mov
in
cltd
ljmp
stos
bound
repz
out
aam
mov
inc
ret
out
sbb
and
stos
push
jg
fiaddl
push
mov
roll
movsl
ljmp
mov
mov
and
sbbl
lahf
dec
mov
inc
ja
mov
leave
cli
mov
pop
stos
divb
or
lahf
call
faddl
in
inc
sub
test
out
cmpsb
inc
sub
inc
pushf
dec
or
cmc
les
mov
inc
dec
rcrb
or
movsb
and
fimuls
pushf
cmp
add
pop
rclb
mov
and
imul
test
iret
lcall
pushf
sarl
push
into
pop
dec
scas
clc
iret
lods
adc
test
xor
int
jle
xchg
or
sbbb
mov
das
adc
push
scas
movsb
imul
loope
pop
sbb
xchg
es
mov
sub
fcmovbe
and
or
popa
rolb
ret
filds
in
bound
mov
inc
mov
test
imul
sti
scas
mov
lds
jae
test
insl
sbb
xor
push
sbb
pop
aam
pop
jg
pop
rolb
hlt
jae
adc
xchg
pop
sbb
jg
pushf
fwait
dec
in
call
jbe
xchg
movsb
adc
add
repnz
mov
pop
int
and
lock
orl
inc
add
imul
add
pop
push
fs
push
imul
adc
js
pop
pop
sbb
mov
fsts
adc
test
aam
cmpsl
mov
xchg
cmp
add
xor
sbb
or
inc
xor
fdivrs
clc
push
inc
aam
dec
pop
jg
lds
in
cmc
cs
sbb
cs
aas
leave
jg
lcall
loop
or
pop
addr16
imul
inc
xchg
or
pop
pop
test
mov
and
int3
mov
addr16
imul
sub
es
gs
out
xchg
xchg
cmpsl
sub
jbe
imul
mov
pop
cmpsl
andb
rolb
mov
adcb
es
loopne
fxch
dec
push
pusha
int3
mov
icebp
in
xorl
sbb
xchg
pushf
cmpl
pop
ss
jmp
aam
lds
adc
push
xchg
mov
adc
dec
mov
mov
adc
push
jns
stos
and
enter
fyl2x
xor
rcrl
push
dec
pop
les
jp
pop
lret
xchg
jp
dec
inc
std
or
pushf
test
fmul
rcr
mov
xor
mov
dec
pop
jmp
or
mov
cmp
rorl
push
sub
out
sti
aas
and
push
imul
lea
mov
in
out
xlat
xchg
outsb
add
roll
cmp
lods
and
sbb
aas
in
ja
int
iret
sbb
and
loop
andl
or
dec
dec
inc
xor
sub
fimuls
hlt
out
rcl
jle
sbb
aaa
fsubp
add
push
mov
repz
jg
mov
adcb
xor
ja
daa
mov
inc
lods
and
xchg
pop
mov
mov
hlt
aas
and
movsb
sub
pop
and
in
inc
pop
adc
out
or
movsl
mov
fwait
in
insb
jecxz
out
mov
cmp
add
mov
add
cmp
dec
inc
push
and
fcomp
jbe
cwtl
leave
jno
adc
dec
repz
bound
mov
pop
test
mov
ret
and
test
pop
cltd
cld
call
inc
addr16
in
out
xchg
outsl
addr16
out
call
xchg
repz
sahf
xchg
adc
aas
inc
mov
push
out
xor
adc
ret
sub
sub
sti
js
imul
frstpm(287
cs
insl
and
es
test
mov
outsl
jge
leave
cli
or
outsl
xchg
pop
repnz
xchg
in
xchg
cmp
int
aaa
sti
xor
sbb
and
adc
mov
outsl
test
adc
outsb
test
out
fisttpll
mov
adc
pop
aaa
in
lods
push
ret
or
movsl
addr16
mov
mov
test
cmp
pop
out
add
mov
jge
shl
cmc
sahf
popa
mov
jbe
cmp
pushf
lahf
jnp
push
mov
out
stc
sub
dec
pop
lret
jmp
xchg
or
jl
inc
add
and
pop
popa
ljmp
mov
pusha
jg
pop
cmp
push
int
pop
cs
inc
ss
stos
sub
xor
std
iret
inc
inc
cmp
jns
enter
ljmp
cltd
inc
aam
test
push
lret
loop
fidivrs
cmp
insl
ljmp
xchg
fidivrs
aaa
mov
divl
jbe
cmp
push
sub
in
sub
sahf
or
ljmp
dec
and
nop
mov
stos
lods
pop
nop
and
lea
hlt
int3
mov
push
out
jmp
pop
pop
pop
call
sbbb
js
outsl
jmp
enterw
dec
icebp
into
scas
je
movsl
xchg
and
push
aam
xchg
fcoms
or
cmpsl
sub
inc
aad
xor
xchg
jmp
int3
jo
aaa
insl
and
dec
filds
ret
data16
stos
iret
mov
push
aaa
aad
jle
mov
sbb
test
aas
pop
add
pop
pop
hlt
xchg
sub
pop
jl
test
es
xchg
lods
loope
cltd
movsb
cmp
sub
cltd
adc
ss
outsl
pop
rorl
faddl
cmp
in
xor
imul
arpl
rcr
push
cltd
arpl
outsb
clc
ljmp
mov
cltd
push
inc
cmp
dec
add
jge
cmp
fnstsw
fnstenv
pushf
fadds
fwait
lea
jae
xchg
outsl
sbb
mov
cwtl
test
cmp
ss
idivb
cmp
cmp
jne
pop
shll
int3
imul
mov
iret
inc
add
pop
sub
fstpl
add
add
pop
out
mov
mov
aam
scas
xchg
mov
xchg
sbb
mov
fdivs
cmp
jnp
les
rcll
sbb
jl
cmp
lahf
dec
adc
and
test
sbb
fdivrs
rcrl
popf
outsl
inc
push
movsl
xor
fistpll
lcall
mov
sti
dec
xchg
xchg
out
popf
mov
sbb
jne
test
dec
mov
and
repz
add
or
fwait
imul
push
sbb
dec
xor
lahf
insb
out
js,pt
jl
lock
call
mov
or
xchg
js
cmp
or
daa
stc
mov
push
popf
jle
push
imul
test
cltd
daa
aaa
popf
movsb
rcrl
cmp
lea
mov
or
dec
pop
movsl
data16
jae
out
mov
aam
shrl
pop
push
popf
insl
gs
int3
sub
jne
mov
daa
mov
dec
add
arpl
lahf
aaa
cwtl
mov
lret
pop
cmc
mov
sub
xor
cmp
and
jae
xorl
cwtl
aad
imul
rcll
xchg
fdivrl
dec
pop
mov
pop
inc
xchg
cli
decl
mov
inc
gs
cld
and
xor
mov
xchg
test
add
mov
dec
cmp
ja
inc
fstp
faddl
ja
cmp
andl
xchg
subl
dec
jbe
gs
sbb
gs
dec
iret
stc
out
testl
lcall
fs
int
xor
dec
in
mov
les
jl
xor
and
rorb
add
call
adc
inc
sbb
push
pusha
or
and
adc
cmp
je
mov
mov
cli
cli
aaa
sbb
inc
pop
out
lahf
out
jmp
jns
push
out
jbe
rorb
inc
int3
mov
lods
addr16
loope
mov
in
jmp
xorl
lods
gs
enter
cmpsb
push
mov
cmp
mov
add
xchg
push
int3
out
jbe
mov
xor
sbb
xchg
push
inc
jbe
notl
and
push
sahf
popf
lods
fisubl
in
pusha
lret
mov
jmp
aaa
or
das
ss
sbb
test
mov
repnz
loope
mov
vpaddusb
mov
jo
mov
aaa
mov
jp
sub
xor
push
push
addr16
or
cmc
jbe
xchg
sub
ljmp
push
jecxz
sub
nop
lret
pop
push
ret
inc
sub
sti
mov
adcb
shlb
push
stos
mov
and
xchg
jns
or
arpl
cmp
mov
fmul
adc
lock
push
sbb
pop
cli
sti
pop
scas
xor
pop
mov
cmpsl
call
jns
in
jl
in
add
fisubs
rdpmc
dec
stos
sbb
lcall
fiadds
clc
rcl
jb
pop
or
rcr
inc
pop
dec
pop
inc
lods
jae
push
pop
and
lds
mov
adc
stos
xchg
pop
sarl
mov
mov
ffreep
ret
sub
aas
je
divl
jl
lret
mov
push
jae
in
out
or
inc
or
in
subb
xchg
sub
movsb
mov
mov
stc
into
or
sarb
repz
addl
stos
mov
jbe
pop
stos
mov
cli
add
sub
mov
roll
fs
fdivl
ret
jo
push
js
mov
popf
add
cmp
cltd
pop
bnd
xorb
mov
sub
sti
pop
push
cmp
rolb
repz
mov
clc
jo
lods
jae
jmp
add
inc
cmp
imul
gs
lret
idivl
fdivl
cmpsb
repz
dec
stc
adc
push
imul
mov
cmp
es
loope
into
fldt
mov
ja
sbb
pop
in
rcl
mov
out
mov
aas
mov
xchg
fdivl
sub
mov
push
xchg
xchg
and
es
repz
stos
repz
jp
in
xchg
gs
sub
enter
sti
xchg
sbb
push
pop
jne
and
loope
imul
and
and
xor
mov
out
fstpl
in
push
mov
push
data16
in
jge
sub
pop
cmp
mov
ret
and
sbb
call
mull
inc
das
outsl
jb
cmp
cmp
jo
idivl
fistps
or
lods
and
shll
jb
outsb
fnstcw
dec
aas
flds
fmuls
add
mov
aad
aam
idiv
repnz
sti
les
das
xchg
add
xlat
jp
mov
lods
arpl
add
mov
in
in
cmp
cmp
mov
out
adc
push
push
or
xchg
ljmp
mov
and
cmc
frstor
pop
mov
dec
icebp
cwtl
cmp
mov
fistl
mov
movsl
xchg
imul
or
sub
xor
xchg
es
dec
nop
and
xlat
iret
inc
dec
xor
bound
push
inc
idivl
push
shl
js
mov
lods
pop
cmp
fwait
xor
ljmp
adc
mov
icebp
or
push
adc
adc
in
mov
xor
bound
inc
aas
add
mov
pextrw
popa
cld
dec
jb
inc
loope
fs
adc
popa
mov
fsubrl
aad
cs
lret
mov
mov
inc
xor
cmp
js
jmp
orl
push
pop
sub
cmp
adc
in
iret
mov
xor
cmp
cmpsl
in
and
push
lds
stos
pop
sub
mov
mov
and
or
pop
push
std
repnz
sbb
nop
jecxz
xchg
pop
adc
outsb
adc
mov
nop
rorb
mov
or
xchg
inc
jle
test
mov
scas
test
pusha
sbb
outsl
addr16
pop
sbb
cmp
dec
dec
or
sbb
cmp
repz
adc
xlat
push
push
sub
cmp
sbb
fstps
imul
fdivl
pop
xorb
jbe
out
and
or
add
loop
iret
push
push
sub
xchg
push
add
pop
sub
pushaw
xchg
adc
add
sti
ljmp
leave
movsl
sahf
jne,pt
jg
in
sbb
hlt
jp
cmp
ret
into
jle
es
out
loope
push
fs
mov
loopne
test
and
push
scas
mov
fildll
inc
push
jae
sbbb
pop
jg
mov
add
xor
push
dec
out
es
into
xchg
ret
cltd
dec
mov
js
mov
mov
push
jo
out
in
adc
scas
fdivp
std
push
test
mov
or
clc
loope
inc
jle
insl
add
pop
lods
out
pop
xor
aad
add
cmpsl
cmpsl
xor
and
ud2
mov
es
clc
sbb
aad
pushf
mov
bound
mov
mov
aam
dec
mov
nop
jnp
enter
imulb
mov
or
fmuls
pop
sbb
jmp
imul
push
sub
movsb
jle
fistps
mov
in
pop
cmc
adc
outsb
std
add
test
mov
lds
movsb
add
and
mov
les
dec
jmp
push
xchg
mov
out
adc
out
sub
and
sub
insb
outsb
int
cmp
fs
mov
int3
movsl
cs
and
inc
dec
jae
pusha
jae
psrld
rorb
xor
xlat
ja
jecxz
hlt
sub
leave
sbb
or
stos
call
lret
mov
aad
pop
aad
xchg
jb
xchg
pop
jae
mov
pusha
mov
in
test
stc
clc
ljmp
mov
lods
lds
push
mov
fnstsw
es
and
fwait
pop
bound
mov
jae
mov
fdivrl
enter
insl
pop
popf
sahf
xchg
xor
hlt
fmuls
jae
push
out
mov
mov
mov
cmp
adc
lock
pop
icebp
loopne
psubw
dec
addl
std
out
rclb
shrb
sub
pusha
jnp
bound
mov
add
or
cmp
jae
leave
mov
jmp
rcl
jmp
jecxz
xlat
fdivs
jb
mov
movsl
adc
je
loope
bound
adc
mov
sbb
adc
add
jno
gs
add
mov
loope
push
xor
aaa
cmp
dec
and
and
mov
sbb
add
mov
lret
call
inc
idivl
or
test
inc
mov
aas
xchg
push
dec
pop
xchg
pop
cmpsb
or
int
div
xrelease
jl
paddw
dec
pop
jmp
dec
adc
adc
push
add
push
jl
inc
sub
loop
nop
push
jecxz
ds
or
movsl
loope
lcall
dec
arpl
movsl
notl
pop
pop
shr
adc
loope
mov
cmp
repnz
lods
xchg
cld
push
int
je
mov
aam
mov
pop
fucom
push
add
sbb
fsubrl
out
stos
testl
test
adc
cmpsb
jnp
imul
mov
xchg
cmp
rcrl
push
aam
and
cmp
in
dec
xor
ret
imulb
psubsb
mov
test
xorb
cmpsl
add
and
and
pushf
bound
or
cld
mov
pop
mov
mov
mov
loop
subb
iret
popf
xchg
inc
jp
out
and
sub
mov
stos
sub
dec
cmc
je
test
sbbl
adc
cmp
aaa
add
into
xchg
jne
xchg
ss
dec
out
mov
and
loop
inc
jl
aam
loop
gs
sbb
sub
jmp
mov
test
jmp
daa
jp
mov
sbb
push
arpl
or
sbbb
daa
mov
or
or
pop
movsl
mov
adc
sub
sbb
xchg
les
push
xor
testb
adc
xchg
orb
stos
push
rcrl
push
sub
adc
cmp
pop
dec
enter
fldl
mov
in
jge
cmp
jbe
and
pop
cmp
scas
xchg
sub
fcomp
mov
rolb
or
mov
sub
lds
push
adc
cmp
push
rcl
fwait
sub
imul
das
jecxz
or
pop
notl
in
mov
and
pop
mov
and
sub
jp
arpl
fidivl
cmpsl
repz
xchg
enter
jmp
stos
pop
pop
iret
or
xchg
add
ja
mov
push
lret
fdivr
pop
mov
adc
xlat
push
dec
add
xchg
jns
mov
lret
xor
and
lret
and
jge
pusha
sbb
cmp
jnp
data16
shrb
fxch
mov
xchg
mov
mov
cmp
inc
pushf
jmp
dec
outsl
stos
ljmp
shll
or
lds
aas
dec
push
je
popa
sub
or
or
jo
fidivrl
lea
push
jnp
loopne
lds
test
push
or
add
mov
xchg
mov
cwtl
xor
push
xchg
xor
inc
xchg
push
loop
idivl
rclb
jbe
movsl
into
in
insl
mov
mov
cmpsb
mov
imul
cmp
dec
addr16
cli
enter
mov
xchg
hlt
pop
test
scas
scas
ret
aam
subb
mov
mov
push
cmp
cs
call
sbb
inc
repz
sti
xchg
outsl
lret
sbb
jbe
scas
jl
lret
or
sub
add
iret
add
push
lcall
push
fiadds
in
lea
jns
mov
push
jp
int
fdivs
stos
cld
jbe
sub
incb
sbb
divl
pop
mov
js
xchg
into
repnz
sbb
das
cmc
push
pop
aas
cmpsb
push
fcom
rorl
ficompl
sti
mov
or
vpsubsb
loop
mov
mov
cmpsb
add
js
pop
mov
sahf
cltd
push
shll
inc
enter
or
clc
inc
and
sub
je
ret
sbb
inc
cld
xor
sbb
lds
mov
xchg
inc
lahf
lods
sbb
xor
mov
add
xchg
enter
dec
int
jno
jmp
mov
sbb
cld
inc
dec
pop
xchg
push
test
mov
add
lcall
cmpsb
xchg
ret
ljmp
xchg
fs
mov
loop
sub
shlb
aad
test
cmp
jp
inc
sub
xchg
adc
cmp
push
loope
push
and
addr16
out
pop
add
xor
xchg
push
fwait
jno
mov
jl
idiv
add
inc
mov
jne
mov
rcrl
sti
sub
fcoms
das
mov
push
jnp
xor
push
xchg
ds
jg
icebp
je
clc
insb
jb
cmp
cmc
jecxz
dec
loop
int
addr16
and
aam
lds
cmpsl
clc
fwait
das
push
mov
jo
adc
lahf
add
data16
cs
mov
mov
test
adc
mov
adc
xlat
xchg
lods
dec
shlb
xchg
jno
rcrb
add
xor
cmpsb
movd
push
mov
push
aaa
cmpb
hlt
add
nop
inc
sub
in
lods
call
inc
fistpll
icebp
fs
in
mov
call
imul
cmp
and
and
pop
xorl
addr16
arpl
adc
push
sbb
cmpsl
cmp
sbb
pop
mov
mov
daa
push
and
mov
repnz
adc
or
jns
adc
and
inc
lea
jnp
mov
fcmovne
cmc
ret
lret
pop
lret
outsl
push
movsl
inc
js
dec
mov
daa
add
jl
xchg
fwait
mov
cmp
lods
push
inc
int3
inc
outsb
sbb
leave
or
mov
stos
and
mov
int3
and
mov
jmp
xor
loopne
shlb
ds
lods
xchg
cli
pop
cmp
rcrb
iret
jne
ret
popf
cwtl
js
xchg
pop
push
or
aas
adc
daa
movsb
mov
mov
push
dec
and
hlt
popf
mov
fidivrs
mov
test
xchg
cmp
mov
andl
aam
xchg
cmp
mov
rol
push
xlat
aam
les
cmp
in
dec
leave
lret
push
mov
cmp
int
leave
jnp
subl
jb
jl
push
sub
inc
jge
outsl
add
jge
mov
xor
stos
inc
inc
dec
or
mov
into
aas
movsb
sub
or
ljmp
lea
xchg
test
in
cld
and
jmp
jg
fucom
cld
cli
adc
nop
jb
xchg
sub
sub
test
ffree
push
sub
nop
xorb
stos
loope
cmp
aas
push
jne
sbb
push
dec
jae
xor
mov
cmp
jbe
mov
fidivrl
jns
push
pusha
insb
push
pop
xchg
cmp
in
in
pop
push
xchg
icebp
sub
sub
or
inc
aad
int
shrl
mov
xlat
mov
and
jge
call
push
es
pop
pop
fimuls
mov
lret
je
imul
movsb
mov
mov
es
outsl
push
out
cmp
leave
jecxz
popf
sub
sbb
pop
pop
call
adc
nop
pop
shl
push
arpl
ds
aam
aas
sti
dec
sbb
pop
dec
dec
aaa
repnz
test
in
xchg
mov
push
sub
test
jg
std
out
xchg
adc
sub
mov
pop
ss
dec
fcomi
popa
cltd
xor
test
sbb
jmp
icebp
cmpsb
pop
out
lret
iret
stos
mov
test
mov
dec
hlt
mov
jno
dec
and
lcall
inc
rclb
push
or
push
jae
push
std
inc
xchg
jp
cmp
or
cmc
push
xchg
mov
shrb
testb
push
sbb
andl
clc
mov
outsl
int
addr16
xchg
xchg
lret
push
js
inc
push
je
xor
data16
push
xor
sarl
mov
xlat
lods
sub
jb
xchg
sbb
or
mov
add
fs
scas
and
bound
sbb
inc
imul
and
xchg
inc
repz
fld
rcl
and
into
jg
inc
jmp
jp
cmp
cli
stos
or
cmpsl
xor
xor
in
iret
test
icebp
movsb
mov
mov
adc
push
out
jle
test
daa
xchg
movsb
xlat
cmp
jo
pop
pop
sbb
sub
xchg
inc
les
in
fisubl
inc
popa
dec
mov
mov
mov
push
out
pop
sbb
lret
push
push
out
sub
push
pop
mov
cmp
push
pop
pop
rolb
cltd
pop
fwait
sbb
adc
fwait
sub
ret
xor
out
pop
jge
mov
xor
es
and
lock
addr16
mov
push
sub
add
inc
pop
cmc
cmc
mov
lds
mov
adcl
cmp
inc
push
out
movsb
sti
insb
push
mov
push
mov
fucomp
or
adc
subl
mov
push
lods
fldenv
popf
jg
insl
pop
sbb
inc
add
std
insl
push
cmp
lcall
adc
test
dec
xchg
or
imul
pushf
xor
dec
inc
popa
cwtl
push
or
in
xchg
ret
ds
xor
xlat
fstl
jge
fwait
outsl
aad
popf
pop
loopne
add
lret
sbb
mov
test
daa
xorl
gs
mov
hlt
jo
je
jno
adc
xor
xchg
sbb
stos
and
push
jecxz
xor
aad
enter
mov
mov
mov
jno
std
fmuls
dec
push
cmp
fdivr
adc
add
xchg
popa
cmp
inc
adc
repnz
out
and
mov
adc
das
cltd
push
jp
mov
mov
bnd
inc
inc
mov
sbb
jb
mov
and
inc
adc
mov
push
cltd
inc
jmp
inc
lahf
stos
adc
fmuls
iret
xor
sub
in
repz
or
dec
mov
gs
in
lahf
ret
in
sbbb
rclb
into
or
andl
ficoms
pop
lahf
add
je
pop
orb
xchg
pop
leave
dec
leave
xchg
outsl
push
imul
fldl2e
je
add
pop
mov
mov
mov
dec
adcl
popf
frstor
mov
jle
jmp
std
mov
push
push
dec
xor
sub
push
jmp
xchg
les
adc
and
adc
push
jp
sub
pop
xchg
mov
popf
jge
es
mov
cmp
lcall
and
ds
icebp
xlat
lret
int3
shr
ret
cmp
jnp
dec
mov
adc
xchg
pop
out
jb
test
push
pusha
dec
adc
iret
stos
dec
fwait
loopne
xchg
dec
add
and
mov
mov
xorb
stc
gs
sarb
inc
mov
push
aas
mov
dec
inc
iret
es
push
mov
mov
sbb
xor
mov
adc
mov
cli
dec
subl
insl
cli
call
cmc
sbbb
rclb
adc
enter
std
sti
in
movsb
pop
cmp
xchg
pop
loopne
pop
cs
mov
fnstsw
popa
adc
push
sti
lods
add
mov
lods
ss
and
fistpll
outsl
adc
mov
adc
add
test
mov
cld
movsl
jne
scas
pop
call
jns
lods
stos
popf
ret
inc
sbb
dec
popa
push
xchg
cld
lock
push
dec
adc
xchg
daa
out
and
rcll
mov
insb
hlt
in
call
cli
roll
std
outsb
push
jbe
out
pop
incl
xlat
lcall
hlt
xchg
fucompp
lcall
inc
aas
mov
scas
jl
call
cmp
stos
int
sbb
inc
outsb
cmp
push
push
dec
mov
push
pushf
mov
ljmp
or
pop
ja
fwait
loopne
add
ja
imulb
je
cmp
push
xlat
add
sub
sbb
in
mov
pop
add
icebp
pop
add
stos
cld
out
cmp
jmp
adc
xchg
in
push
out
enter
xchg
mov
shlb
sbb
cli
lods
nop
sti
stos
out
lret
ficoms
or
cwtl
lret
mov
and
jmp
dec
adc
lcall
or
imul
loope
test
inc
inc
jno
ss
xlat
sbb
fsubr
stc
or
les
dec
aaa
sbb
add
adc
mov
and
pop
and
or
dec
push
fwait
xchg
add
insb
xchg
mov
lret
xchg
mov
scas
ror
xchg
push
push
xchg
adc
dec
movsb
incb
or
adc
test
inc
aaa
mov
push
je
inc
sbb
xchg
mov
xlat
fsts
test
adc
inc
jp
enter
aad
push
testb
lock
sbb
jnp
xlat
xor
mov
jl
adc
xor
xchg
xchg
iret
cmp
sub
sarb
hlt
rcr
inc
clc
push
movsl
outsl
ds
pushf
je
pop
sub
int
stos
dec
mov
out
movsl
and
cld
stc
xchg
push
jns
fistpll
mov
aaa
test
repnz
inc
pop
mov
mov
gs
lcall
push
mov
jbe
and
aam
out
push
adcl
pop
xchg
nop
xchg
adc
cld
push
sti
sbb
xor
leave
das
mov
ffree
jnp
lea
movsl
cmp
in
loop
sub
dec
imul
mov
bound
xchg
scas
ljmp
jae
and
sarb
xor
pushf
inc
js
mov
lret
pop
rcrb
psubsw
sbb
sti
mov
push
xchg
in
ror
subb
int
or
mov
lcall
punpcklbw
enter
add
or
aaa
inc
cld
dec
repz
loopne
add
into
xcrypt-cbc
cmpsl
aad
push
mulb
sarl
icebp
stos
outsb
imulb
ret
or
push
cli
scas
inc
xor
cmc
push
push
adcb
aam
and
pop
mov
push
jecxz
inc
sbb
ret
cmp
or
mov
push
aam
sub
dec
es
lahf
loop
popa
aaa
pop
icebp
xor
std
mull
push
popf
stos
mov
stc
test
jge
ror
in
sbb
test
icebp
xlat
in
bound
in
cld
das
cmpsb
push
dec
ljmp
negb
mov
sbb
leave
aad
jge
out
sti
mov
xchg
fs
push
push
mov
shll
push
scas
push
mov
mov
cmpsb
adcl
int
mov
jl
lret
push
add
gs
and
popf
mov
test
mov
fwait
xlat
cmp
push
mov
inc
sbb
sbb
inc
adcl
and
mov
stos
decb
fnstenv
pushf
jmp
xor
fistl
ficomps
je
xlat
lods
sti
nop
jbe
stos
mov
or
and
push
mov
add
out
pop
dec
cs
lahf
aaa
and
sub
jbe
jno
sbb
xchg
or
out
adc
cli
mov
xor
sar
mov
shrl
inc
sar
lock
in
notl
sbbl
sarl
mov
stc
adc
dec
adc
ficoms
cs
test
in
ljmp
cmpsb
aad
sar
pop
fidivl
ja
mov
inc
xchg
in
push
sbb
add
adc
inc
ss
in
add
pop
lcall
icebp
jl
pop
ja
pop
mov
cmpsl
jp
pop
in
mov
test
cmp
mov
mov
leave
pop
cmp
lea
xchg
test
stc
xchg
dec
loop
lock
jno
dec
hlt
lret
sub
adc
roll
imull
scas
pop
cmpsb
dec
push
xor
mov
and
jno
pusha
sbb
fmul
mov
jb
fsts
sbb
add
xlat
sbb
push
and
repz
pop
loope
testb
mov
call
cmp
push
pop
pop
xor
mov
outsb
ss
jne
xchg
push
nop
inc
leave
xchg
and
sub
stos
adc
pop
push
cmp
lea
mov
jno
cmpsl
movsb
mov
jecxz
ss
leave
cmc
mov
loopne
dec
sub
out
or
cmc
sub
std
xchg
dec
xchg
aaa
sbbl
out
pop
stos
leave
int3
sbb
sbb
cmp
ja
aad
jge
inc
lods
dec
add
aad
in
leave
stos
notb
push
loop
imul
stos
cs
ficompl
mov
push
stc
xor
cmpsb
pop
jo
adc
jecxz
xor
mov
ficompl
xchg
in
pop
aam
cmp
jl
dec
add
sbbl
mov
lret
push
les
pop
cs
out
movsb
sahf
loope
lret
fcom
cmp
jae
xor
push
aam
mov
gs
and
mov
into
aaa
pop
mov
cmpsl
mov
add
sbb
cmp
adc
cmpsb
jg,pt
addr16
ja
adc
and
mov
or
sarl
aad
sub
xchg
sarb
jge
hlt
in
mov
int3
and
dec
call
jecxz
cmpsb
push
insb
mov
sarb
sub
pop
inc
das
mov
jnp
test
mov
pop
sub
push
notl
push
sub
fbstp
lea
cmpsb
movsb
dec
mov
xchg
cmp
pop
add
sub
add
mov
insl
inc
mov
and
lds
insb
mov
les
test
cmp
ss
cmp
add
sub
out
movsl
mov
xchg
inc
dec
mov
xchg
shl
cld
adc
pop
adc
fsubp
and
cmp
jg
sub
movsb
lds
lds
cmp
inc
mov
in
push
insb
mov
fwait
data16
push
xchg
sub
ret
jle
pop
sbbl
xor
enter
test
test
mov
or
sub
xlat
xchg
sti
cmpsl
adc
inc
sbb
push
arpl
in
push
xlat
xor
imul
sub
popa
icebp
push
sbb
int3
lret
hlt
mov
dec
test
pusha
cmp
jp
call
jmp
mov
xchg
xor
daa
sub
jb
loopne
inc
inc
pop
fs
pushf
std
inc
hlt
push
scas
lahf
mov
in
add
jo
stos
or
dec
mov
xchg
jmp
testl
data16
test
fistpl
fnstsw
icebp
jecxz
sbb
mov
and
adc
int
jge
lcall
add
sub
fsubrs
xchg
dec
aam
shlb
add
lock
mov
fcoml
adc
pop
popf
sub
loope
pop
fadds
xor
outsl
aam
sbb
in
inc
popa
mov
out
push
xlat
scas
and
mov
sub
pop
js
push
je
sahf
dec
mov
arpl
out
call
push
cmpsl
and
xchg
sbb
jg
jp
sarl
jne
adc
fwait
cltd
jle
iret
into
mov
add
lret
rcll
sbb
jno
jo
inc
aaa
dec
xor
shl
adc
out
xchg
mov
mov
rcr
cmp
jb
lret
inc
adc
mov
cs
movsl
cmp
or
mov
dec
in
cmp
enter
idivb
fucom
cmp
inc
ds
cmpsb
call
psrlw
lock
insl
lods
xor
ffree
data16
ret
dec
clc
inc
pop
mov
insl
sti
je
call
jmp
into
in
bound
xchg
pop
inc
pusha
ret
fs
cmp
mov
xor
inc
mov
sbb
mov
push
je
outsl
hlt
inc
pushf
xchg
mov
sub
mov
mov
loope
mov
scas
mov
icebp
xchg
mov
es
repz
lret
jb
test
loope
jge
add
xor
out
adc
xchg
aaa
mov
sbb
insb
hlt
push
cltd
add
sub
and
jb
fmul
es
in
cmp
scas
call
xchg
js
imul
loope
pop
pop
adc
lds
es
add
add
in
scas
orb
mov
mov
fs
sbb
enter
insb
insl
mov
insl
mov
imul
int3
loopne
addr16
lahf
testb
or
iret
ja
ret
fs
call
negb
cld
push
pop
adc
stos
mov
jg
popf
add
repnz
stos
das
push
addr16
jle
xor
in
and
add
push
mov
ljmp
sbb
adc
cmpsb
cmpsb
lods
and
fidivrl
mov
jno
daa
fbstp
cmp
daa
and
or
lds
push
cs
fisubrl
dec
test
inc
lret
inc
jb
aad
mov
xor
cmpb
or
rcrb
movsb
xchg
mov
lea
sbb
mov
fwait
insl
in
aam
mov
stos
push
insl
aaa
cld
jnp
or
data16
bound
sbb
mov
cwtl
jp
xchg
stc
fstl
mov
push
jae
test
sub
and
push
leave
loope
cmpsb
adc
iret
loop
aad
lods
mov
add
repz
fdivs
jmp
or
pusha
adc
push
inc
rep
pop
pop
push
hlt
mov
enter
cmpsb
add
jo
pusha
mov
inc
fisttps
lret
mov
xor
in
stos
sub
mov
aam
jle
push
ss
add
repnz
mov
sbb
aas
outsl
pushf
xchg
add
and
xchg
push
jmp
test
push
jb
lods
popf
xchg
ljmp
sub
add
push
aam
push
mov
xchg
mov
jne
loop
sti
xchg
and
test
jo
rcll
nop
loop
pop
in
add
xor
aas
scas
nop
in
fwait
dec
jb
cs
addr16
fwait
sub
jbe
test
and
insl
mov
xlat
and
lret
pushf
mov
stos
shr
and
aam
out
orl
jno
pop
enter
and
mov
pushf
icebp
lret
rcl
bound
enter
rcrl
sti
jae
fsubs
loopne
jno
aam
movsb
dec
loop
jae
das
ds
xchg
inc
jecxz
xlat
jnp
popf
lret
xchg
and
add
imul
cmc
xlat
arpl
lds
imull
push
jo
das
les
fs
mov
lret
xor
xor
ret
loopne
scas
pop
out
mov
lea
fs
or
in
xor
push
sbb
movsl
sub
inc
inc
sbb
inc
xchg
in
mov
sub
push
sbb
pop
pop
sbb
pop
or
lock
and
inc
cli
lret
jecxz
ret
cmp
andl
adc
push
jecxz
jae
int
push
test
ljmp
mov
or
sub
daa
testl
xor
pop
ret
mov
ss
cmp
add
adc
sub
xor
xchg
dec
incb
movsl
cmp
dec
repnz
push
into
mov
mov
push
int3
adc
in
shll
cld
push
dec
add
loop
jnp
clc
jno
stos
adc
je
fisubrs
mov
imul
repnz
xorl
pop
cmpsb
mov
mov
or
into
mov
add
loopne
aaa
cmpsl
and
lcall
dec
mov
out
fwait
movsb
movsl
push
sti
ja
stos
nop
push
dec
mov
jmp
mov
sti
test
dec
mov
lret
fiadds
sahf
ss
fwait
mov
adc
jo
mov
xor
loop
pop
mov
mov
fsubrs
ja
sub
xchg
lret
lods
push
sub
and
xchg
push
inc
addr16
lret
xchg
sub
neg
add
xchg
push
iret
leave
insb
mov
sbb
xchg
mov
mov
out
or
push
mov
mov
outsl
add
push
int
pop
add
jo
scas
sbb
xor
xchg
inc
push
and
ja
jns
inc
out
sub
add
fildl
push
cmp
lret
dec
lods
testb
lret
mov
mov
push
lock
push
and
lea
loop
icebp
dec
lods
jg
xchg
in
adc
out
outsb
and
scas
js
sbb
aad
mov
mov
jo
out
sti
aad
fidivrl
aad
xor
lock
pop
pushf
or
push
or
cwtl
jns
inc
cmp
in
mov
mov
cmc
dec
lock
sbb
call
imul
mov
stos
mov
xor
inc
pusha
lods
gs
jmp
mov
push
leave
andl
mov
or
mov
int3
out
and
jno
aaa
push
lret
arpl
lahf
mov
insb
mov
insl
or
shll
mov
xlat
mov
mov
mov
mov
mov
loop
dec
test
gs
mov
cmpsl
fwait
test
imul
inc
or
mov
dec
add
rol
xor
rcr
lret
or
inc
fmulp
xor
stos
mov
leave
outsb
int3
cpuid
pop
dec
or
cmp
jmp
sti
xchg
cmp
int
push
mov
fisttps
cmp
cltd
iret
rorb
lcall
sarl
aam
mov
movsb
and
in
insb
test
in
sbb
jl
xchg
xchg
sbb
std
imul
cmpsl
add
int3
cmp
mov
sbb
mov
dec
xchg
adc
xor
cmp
daa
inc
popa
xor
loopne
jp
in
inc
pusha
dec
cmp
mov
dec
mov
rorb
xchg
inc
sbb
xchg
in
sub
setnp
mov
push
mov
cmp
or
jp
xor
adc
jbe
js
lcall
loope
jge
inc
xor
gs
daa
wrmsr
mov
cs
or
sbb
sub
loopne
add
sbb
aad
inc
sbb
mov
fwait
out
movb
pop
mov
fcom
lods
je
lods
inc
mov
sub
xchg
arpl
pusha
jmp
rorb
jl
hlt
fcoms
aas
add
es
test
jle
popf
shll
adc
sub
pop
jns
test
mov
pop
add
leave
push
stos
icebp
loope
push
mov
inc
je
jno
jecxz
js
jge
sub
sub
scas
mov
in
xlat
sub
sbb
arpl
cmpsb
cmp
mov
idivb
adc
and
clc
mov
out
and
mov
jmp
cmp
imul
mov
dec
aad
insl
jp
aad
pop
inc
shll
pop
test
mov
xchg
and
in
mov
cmpsb
loop
out
pop
iret
xchg
in
sahf
add
mov
cli
lret
mov
lea
fldt
les
dec
out
inc
leave
mov
mov
mov
dec
xchg
flds
shl
fadds
decl
adc
jae
rcr
adc
cmp
shll
push
push
divl
mov
push
sub
in
rclb
je
insb
jg
mov
lods
and
popf
sbb
daa
lcall
adc
mov
pop
push
dec
shlb
or
mov
mov
jecxz
insb
test
push
popa
xchg
rclb
in
rol
mov
adc
int3
jo
je
and
pusha
inc
pop
iret
bound
inc
push
inc
rclb
cmp
push
jns
js
cmp
dec
jmp
popf
jnp
and
push
pop
sub
cmpsb
outsl
push
nop
and
inc
scas
insb
mov
sbb
aaa
out
pop
les
add
sbb
add
mov
or
inc
or
out
int
add
ret
xor
scas
xchg
testb
in
leave
dec
arpl
insb
imul
adc
ss
dec
xchg
fs
subl
fucomi
mov
xchg
icebp
jne
rorl
cmpsl
pop
xchg
hlt
adc
fwait
sbb
out
ja
add
aad
in
or
fbld
pop
ljmp
pop
stc
imul
rep
pushf
call
addl
mov
fwait
dec
mov
addr16
out
scas
cmp
dec
sub
sub
hlt
lock
push
ret
in
or
push
dec
sbb
and
test
lret
jge
or
xchg
loop
outsb
pop
jge
and
icebp
push
push
xchg
aam
or
jae
pop
xor
jns
and
mulb
fs
std
sub
sbb
icebp
mov
les
mov
dec
push
adc
inc
bnd
xchg
adc
sbb
jnp
dec
mov
fisubrl
fdivs
aad
jp
call
jno
jbe
fcoms
mov
insb
mov
sbb
sub
push
xor
inc
push
test
sub
inc
imul
push
and
cmp
jle
jb
xchg
push
clc
xor
cmpb
ret
xor
xchg
jno
rorb
xorb
mov
jecxz
mov
mov
add
sar
test
add
sarb
shrb
fildll
cmp
mov
jo
jp
or
push
sti
sbb
rclb
mov
dec
pop
fidivs
xor
sub
add
dec
nop
mov
ret
mov
or
jl
icebp
mov
inc
sbb
xor
push
js
das
out
into
push
cmp
jns
jbe
mov
xchg
outsb
ds
add
or
mov
xlat
in
outsb
xchg
aad
shlb
fidivl
popw
cmp
lods
inc
push
jp
out
test
cld
ss
cmpsb
in
sbb
in
mov
xchg
mov
cmpsl
push
inc
inc
xchg
mov
stos
inc
ja
data16
mov
stc
in
add
imul
mov
enter
into
sbb
xchg
inc
adc
sti
jmp
popa
ficomps
sub
push
stos
scas
or
sbb
insl
inc
xchg
cpuid
jne
sahf
push
subl
ss
pop
negl
aad
cmp
add
push
or
cmpsb
mov
cmp
out
sahf
xchg
hlt
dec
aad
test
add
dec
xchg
push
xor
jo
jae
jbe
inc
ret
inc
enter
mov
sub
test
sbb
and
jne
add
inc
mov
in
lods
cmp
xor
imul
xchg
andl
sbb
lret
mov
or
cmpsl
mov
adc
mov
imul
lret
in
pop
aaa
stos
mov
xor
sbb
jmp
adc
sahf
mov
adc
fidivrs
xor
add
xor
sub
pop
ja
mov
fdivrl
mov
xchg
sbb
cmp
xchg
call
call
out
nop
push
and
btc
xor
aad
and
imul
xchg
and
pop
mov
push
pop
loop
andb
test
incb
sub
or
mov
inc
sub
cmpsb
int
nop
pop
call
pop
sbb
lods
mov
ljmp
pop
in
jmp
aaa
sub
inc
sub
mov
cltd
mov
mov
hlt
sbb
sahf
rep
fdivp
xchg
jmp
cs
icebp
mov
shlb
xchg
mov
xlat
ret
fcomps
mov
cs
loope
fistpll
int
xor
push
push
xchg
in
in
sahf
stos
fildl
pop
mov
ror
mov
xor
push
mov
sar
mov
cltd
idiv
jecxz
xlat
jnp
xchg
fidivrl
ud0
js
fsubr
inc
call
dec
and
ljmp
cld
int
fldl
mov
pop
dec
insb
mov
sbb
push
or
mov
pop
jmp
loop
loop
mov
jecxz
stos
sub
cmp
push
push
in
sub
dec
jae
push
jg
cs
push
ret
aad
andb
loope
cmp
cltd
cli
push
test
int3
mov
lods
je
inc
lods
scas
cmp
movsb
data16
push
sub
inc
in
mov
insb
or
xchg
xchg
loopne
lods
dec
ds
inc
lret
lods
and
mov
stos
movsl
fidivs
lret
sbb
cmp
and
addr16
mov
out
mov
cmp
xchg
inc
jno
cltd
pop
icebp
adc
mov
inc
inc
das
jg
shr
xchg
test
adc
mov
pop
movsl
mov
mov
and
arpl
jecxz
decb
cmp
and
cwtl
cltd
pop
cltd
les
push
jle
jne
mov
sbb
fildll
sbb
jne
sbb
gs
lahf
sub
mov
dec
cli
lahf
movb
test
aaa
scas
push
lret
pop
movsb
pop
adc
out
sub
stc
shl
loop
gs
xor
popf
mov
push
imul
jge
inc
cmp
aam
pop
push
sbb
xchg
sbb
stos
xor
ja
pop
push
shll
jae
test
jne
push
xchg
cwtl
add
test
mov
lods
mov
push
jge
sub
jecxz
xchg
addr16
in
jbe
and
sbb
pop
jo
and
pushf
cmp
nop
pop
js
insb
cltd
and
mov
test
push
aaa
cmc
dec
mov
movsl
out
repz
nop
ret
cmp
lret
enter
push
jge
call
sahf
cli
push
cwtl
sbb
scas
testb
mov
js
dec
inc
pop
mov
add
xor
push
pop
js
cmp
sub
leave
push
in
lock
cltd
or
iret
fstl
mov
pop
mov
in
xchg
fidivs
int
aad
lods
sub
fsubrl
shl
das
pop
lock
inc
jb
cmp
mov
test
add
add
lea
stc
clc
into
lods
and
jb
into
leave
xor
push
mov
es
mov
iret
lret
int
lock
dec
mov
movsl
mov
dec
inc
and
ror
outsb
add
fwait
imul
cltd
insl
xor
aas
mov
cwtl
dec
xchg
adc
fistl
push
rcrb
inc
aaa
movsl
bound
add
pop
xor
imul
lods
mov
pop
mov
fidivrl
dec
fdivrs
sti
cltd
jns
movsl
adc
aad
test
cmp
stos
insl
outsl
push
push
mov
loopne
fxch
sub
stos
sar
push
outsb
add
ret
je
mov
mov
loop
neg
lods
sarb
dec
fxch
adc
adc
xchg
loopne
xchg
push
pop
negb
dec
fnstenv
les
cld
cmp
xchg
pusha
insl
pop
stos
dec
xorb
jp
test
cmp
cmp
adc
xlat
pop
xor
aad
call
jns
nop
cmpsb
fnstenv
inc
fwait
pop
sbbl
movsb
push
dec
sbb
mov
adcb
adc
push
popa
push
es
test
pop
hlt
mov
and
addr16
mov
push
xor
call
repnz
mov
jnp
mov
cmpl
pop
cli
or
notl
push
cmp
inc
push
into
cli
push
and
outsl
mov
arpl
clc
xchg
and
xchg
jno
scas
inc
ror
pop
les
das
testw
adc
loop
daa
data16
es
inc
les
mov
mov
xchg
sbb
je
in
jmp
add
sub
push
mov
insb
gs
sub
and
sub
xchg
and
das
mov
sub
mov
dec
sar
shll
pop
jecxz
negl
arpl
ret
in
cmc
out
mov
xchg
test
xor
ret
shll
insl
xchg
into
cmp
mov
outsl
pusha
pusha
cmp
addr16
iret
and
sub
call
leave
cmpsl
and
cmpsl
fistpl
pusha
dec
dec
sub
ss
mov
shlb
mov
mov
shrl
or
xchg
xor
mov
push
icebp
int3
lret
mov
mov
cmp
sub
lea
mov
scas
popa
mov
mov
xor
nop
inc
and
fnstenv
mov
in
pop
mov
pop
mov
inc
mov
mov
mov
je
add
ficompl
enter
jns
movsl
rolb
cltd
neg
cld
sub
xchg
dec
adc
push
in
pop
aad
enter
jecxz
dec
dec
in
cmc
shl
decl
pop
out
nop
jnp
sbb
push
mov
test
rolb
shll
lret
repz
pop
inc
jb
ljmp
ljmp
ljmp
les
inc
mov
jns
out
lock
and
push
push
mov
daa
in
repz
sub
hlt
decl
pop
jle
loop
xchg
rcll
imul
mov
sbb
adc
sbb
out
repz
push
inc
cmc
sarb
pop
ffree
cmp
imul
pop
or
jae
pop
mov
ljmp
jo
inc
fstpl
xchg
mov
mov
scas
lahf
cwtl
pop
sahf
divb
ret
lret
movsb
lret
repz
push
lahf
in
out
mov
pop
cltd
pop
mov
ret
arpl
push
dec
xor
test
push
jns
xchg
sub
mov
fbstp
add
and
inc
cmpsl
inc
test
std
popf
push
pop
negb
mov
mov
pop
in
pop
or
fs
jle
push
xchg
jmp
pop
dec
jle
add
add
mov
shl
mov
pop
lods
je
movsb
daa
pop
aaa
cmc
or
fwait
in
popa
and
lods
lea
sub
cmp
sub
cmp
sub
or
cmp
sbb
jle
push
nop
out
mov
cli
and
pop
mov
flds
xchg
mov
lds
ret
pop
push
fstps
dec
cmp
bound
push
out
xchg
jle
fsubl
cmc
sub
push
std
das
jnp
jno
or
jmp
movb
or
xor
add
clc
cmc
aam
in
push
lahf
int
loopne
fstl
lock
test
out
inc
jbe
shrl
xchg
mov
cmp
jnp
sub
xor
in
aas
dec
mov
dec
pop
pop
and
fucom
mov
jo
jle,pt
inc
inc
daa
mov
bound
std
xchg
aam
cld
mov
cltd
pop
add
dec
ret
adc
inc
insb
imulb
stc
mov
mov
push
mov
push
cmp
lahf
fisttpl
dec
dec
jb
mov
push
push
mov
rcr
shrb
aas
fiaddl
push
imul
popa
mov
adc
data16
int
adc
call
cld
and
mov
xor
jo
pop
pop
je
dec
push
mov
pop
test
js
inc
adc
mov
mov
ret
repz
fcmovbe
xchg
inc
sahf
je
mov
aas
mov
xor
adc
push
push
out
aaa
jbe
add
es
sub
dec
sbb
sbb
pop
pop
pop
gs
pop
lahf
cld
add
mov
dec
imul
pop
js
out
jb
movl
push
clc
xlat
and
push
or
jae
mov
in
sahf
outsl
cli
mov
xor
mov
push
into
rorb
sub
scas
roll
mov
push
mov
mov
aaa
mov
mov
push
and
lret
sbb
push
jl
rcll
mov
fnsave
push
icebp
clc
jl
sarl
jb
fstps
pop
inc
jmp
arpl
pop
adc
push
je
lahf
ljmp
ljmp
insl
push
push
fidivrs
mov
jb
lret
arpl
pop
dec
adc
rcll
loop
sub
push
stc
cmpsb
fstl
adc
sbb
out
fcoml
or
and
data16
cli
xchg
dec
mov
jg
stos
rcll
popa
enter
dec
je
mov
out
nop
pop
ljmp
xlat
jae
or
sbb
inc
cmp
push
jp
pusha
or
cmpl
push
in
lret
outsb
shlb
or
fisubs
push
push
roll
iret
jecxz
push
add
cld
les
pusha
test
test
cmp
add
dec
push
add
and
cmp
mov
push
out
mov
repz
cmp
jge
jmp
pop
cltd
xlat
pop
sub
bound
xchg
out
cld
sbb
xchg
popa
sbb
jmp
jns
movsb
adc
inc
push
xchg
or
icebp
leave
adc
inc
and
test
sbb
pop
jge
mov
cmp
hlt
xchg
push
mov
mov
cli
inc
out
dec
aaa
imul
sub
pop
sub
or
lahf
clc
imul
jge
aas
cmc
sub
daa
loope
cmp
mov
out
mov
cld
and
sahf
scas
jge
inc
pop
push
add
mov
or
dec
mov
sub
mov
inc
add
add
jnp
out
push
out
in
inc
push
outsb
sub
mov
popa
pop
and
scas
ljmp
push
stc
loop
mov
je
pop
ror
rcl
test
cmp
adc
or
dec
js
je
mov
add
xchg
mov
pop
push
fstl
xchg
pushf
lds
mov
mov
fldlg2
inc
loope
mov
arpl
xchg
rorl
rol
ret
fs
repz
or
ret
push
clc
int3
idivl
adc
out
or
dec
mov
xor
rcrb
call
rcrb
or
and
cmp
xchg
std
push
jecxz
in
out
gs
std
pop
and
sub
mov
ja
loop
mov
subl
cwtl
inc
mov
mov
push
loopne
test
xchg
adc
cli
or
mov
push
vpshufhw
enter
roll
dec
jbe
jae
push
daa
popf
mov
mov
call
cmp
shrb
rcll
jae
mov
push
jne
out
loop
ret
ffreep
sub
iret
push
mov
mov
dec
fs
add
cmp
dec
popl
mov
outsb
add
imul
sbbl
fcmovnu
inc
sub
fnstcw
sub
int
loopne
imul
in
pop
jmp
and
pop
je
outsl
push
lea
mov
mov
insb
add
repnz
or
cmp
jne
mov
in
movsb
inc
or
dec
jecxz
ja
xor
dec
leave
sub
xlat
inc
fcmovnbe
dec
inc
xchg
inc
mov
jbe
int3
pminub
ljmp
inc
pop
push
mov
lods
aaa
pop
fistl
nop
fdivs
xchg
pop
pop
jbe
mov
insb
test
pop
push
popa
ljmp
jmp
xchg
addl
dec
fidivl
mov
clc
cltd
sub
or
or
or
push
aad
adc
mov
gs
add
das
pop
mov
xor
sbb
fstpt
and
jmp
xchg
or
sar
xchg
inc
int3
sbb
ret
adc
xchg
stos
lods
add
and
cmp
sub
hlt
push
or
clc
sbb
nop
inc
jae
imul
mov
add
enter
andl
xchg
fstpl
gs
xor
sbb
adc
mov
pop
sub
aas
pop
sub
mov
sbb
xlat
dec
push
adc
mov
sbb
pushf
push
stos
fcmovbe
pusha
sahf
insl
mov
push
stc
ja
insl
xchg
lds
in
push
ja
xor
adc
div
rorl
mov
jno
xor
mov
cmp
loope
shl
shlb
inc
mov
mov
fcompl
or
pop
rorl
adc
popa
and
push
add
popf
add
jl
pop
push
or
jg
cmp
xchg
mov
inc
cmpsb
cmp
and
or
add
fiaddl
pop
push
mov
imul
sub
push
dec
sub
sarb
sbb
sbb
clc
cmp
and
jmp
mov
repz
and
lret
jl
add
fbld
xchg
into
mov
jbe
mov
jno
aad
hlt
mov
aad
mov
int
cmp
enter
cmc
dec
mov
adc
sub
mov
ljmp
shl
jle
lods
add
insb
pop
cmp
popa
push
sbb
mov
shll
xchg
pushf
dec
jmp
shlb
and
loope
insb
mov
adc
pusha
stc
inc
xchg
scas
pop
lods
xchg
jne
aas
mov
ja
fdivrs
and
out
ret
push
mov
adc
movsb
xchg
out
and
cmc
mov
pop
lods
jmp
in
pop
dec
cmp
pop
mov
mov
xor
dec
adcl
cmp
dec
call
xor
je
xchg
rol
loope
cmpsb
cmp
aam
mov
mov
dec
loope
fisubs
outsl
cmp
sub
xchg
lea
sub
mov
leave
arpl
xor
mov
sbbb
mov
mov
xchg
or
xchg
or
movsl
ficoml
fwait
adc
mov
popa
daa
cmp
mov
jle
pop
mov
xchg
cmpsl
in
ss
or
add
loope
xchg
dec
mov
jp
aad
setg
nop
gs
xor
or
mov
repnz
and
outsl
and
mov
jecxz
sahf
inc
movsl
pop
test
or
sub
jmp
int3
push
jmp
xchg
add
into
cmp
pop
ja
push
clc
dec
inc
xchg
push
lock
in
xchg
addb
outsb
push
rcll
mov
imul
insl
sub
je
rcr
add
push
data16
xchg
adc
and
dec
sbb
inc
call
mov
xchg
jb
loope
in
leave
sub
aam
mov
adc
dec
imul
out
cltd
aam
inc
xlat
testb
into
pop
pop
mov
popl
imul
lds
cmp
dec
jnp
iret
ffreep
push
adc
in
mov
mov
enter
popa
insb
sbb
scas
imul
lcall
xchg
inc
mov
and
lcall
dec
andb
hlt
xor
and
scas
push
and
push
dec
sub
or
push
notl
jmp
adc
or
aad
andb
xchg
push
sti
xor
push
aaa
mov
shrl
rcrb
lret
dec
pop
fiaddl
xchg
shr
sub
inc
scas
cmpsb
mov
data16
mov
movsl
enter
xchg
cmp
aad
xorb
or
cmpsl
xchg
mov
sub
dec
inc
rclb
aam
leave
iret
pusha
sahf
das
in
pop
roll
cmp
xor
int
push
inc
push
cmp
repz
into
cmp
lods
jbe
and
out
push
pop
pop
adc
xor
adc
nop
mov
dec
mov
and
imul
aad
inc
add
enter
int3
cmpsl
jns
ja
push
hlt
lock
arpl
xchg
jns
pop
cmp
mov
mov
hlt
out
mov
mov
xlat
icebp
push
mov
shlb
or
fstpt
or
adc
cmpb
pop
pushf
mov
pusha
sbb
or
dec
push
dec
mov
ret
rcrb
sbb
jns
jle
pop
sub
lcall
in
jmp
in
push
inc
push
loopne
mov
mov
pop
jns
dec
pop
jb
rorb
negl
leave
movsb
pop
aam
inc
call
ss
cli
andb
loop
popl
mov
rcl
xor
scas
jecxz
lret
mov
into
mov
xchg
cs
xor
lret
je
popf
mov
lahf
mov
add
or
imul
gs
cltd
push
ret
dec
les
xor
enter
nop
and
add
gs
jp
push
mov
int3
dec
jno
mov
sbb
and
enter
adc
scas
xchg
jle
cld
mov
jns
into
js
insl
dec
pop
push
sub
push
or
inc
repnz
movsb
frstpm(287
je
push
test
insl
and
pop
sbb
icebp
jmp
ds
mov
test
jbe
test
pop
dec
inc
adc
cmpsl
jo
inc
pop
data16
in
xor
loopne
xchg
mov
test
loope
leave
mov
sti
push
cmp
mov
cmpsl
sbb
mov
aad
xchg
ret
pop
adc
xlat
rcll
fisubl
stos
leave
pop
sub
aam
dec
std
add
into
ret
outsl
popf
test
or
adc
shl
insl
fldenv
mov
cmpsl
lcall
xor
mov
push
in
jecxz
cmp
mov
fdivr
cmp
test
mov
loop
push
mov
sbb
dec
cs
js
mov
mov
jl
mov
pushf
mov
and
add
mov
int3
mov
and
jo
xchg
push
cwtl
mov
scas
mov
aaa
imul
or
into
idivb
pop
cmp
adc
adc
dec
lea
cld
push
push
mov
mov
fsubs
lcall
std
sub
sti
pop
test
into
in
les
mov
push
paddb
int3
cmp
pop
or
inc
xchg
pop
pusha
int
jo
hlt
bound
fdivrl
aaa
fadd
xor
pop
loop
dec
or
and
popf
rorl
mov
sbb
filds
cs
dec
ljmp
jmp
movsb
popa
and
stos
sbb
mov
div
xchg
nop
sub
test
xor
and
push
sbb
int3
test
xor
or
popa
dec
in
mov
cmp
adc
movhlps
pusha
sbb
cmp
js
inc
out
int
push
imul
mov
pop
fsts
pop
sar
push
jl
pop
cmp
outsb
push
xchg
mov
ret
push
mov
jb
mov
cmpb
ljmp
out
sti
scas
sbb
sbb
addb
dec
popf
fidivrs
icebp
mov
fsubl
and
fwait
js
pop
insb
jne
push
push
loope
mov
mov
loope
xor
out
sub
out
mov
push
orb
cmp
cmp
pop
add
int3
in
dec
mov
xor
mov
pop
movsb
int3
fwait
dec
xlat
dec
mov
jp
xlat
imul
push
and
pushf
mov
or
insl
iret
mov
jmp
jmp
lods
fimuls
rcl
aam
dec
mov
std
std
repz
jmp
idivb
scas
in
sti
idiv
idiv
xchg
mov
push
aam
mov
cwtl
test
or
or
leave
xchg
dec
mov
adc
aad
push
pushf
popf
dec
mov
rcrb
data16
xor
test
jb
and
sub
jmp
adc
dec
mov
loope
mov
inc
dec
or
mov
fs
xchg
pop
jge
pushf
jbe
push
ljmp
dec
gs
stos
and
push
std
xchg
jne
andl
jbe
mov
push
shll
inc
and
mov
loopne
and
adc
mov
pop
mov
adc
fnstenv
mov
dec
jo
jb
and
and
std
xor
stc
rcr
mov
pop
push
jp
les
xlat
repnz
or
xchg
jb
ds
mov
loopne
adc
mov
hlt
loope
mov
in
dec
flds
sbb
push
inc
xor
lahf
xchg
hlt
sub
cmp
les
cltd
xchg
cmp
dec
idivl
ds
sub
pushf
aas
cmpsb
outsb
lods
lods
push
push
popa
lahf
jo
js
pop
insb
fwait
push
jbe
shrb
mov
ja
sbb
imul
int
arpl
fisubrl
mov
test
daa
shrb
imul
mov
aad
je
dec
jge
sahf
pop
pop
jns
mov
mov
mov
cltd
add
cwtl
das
mov
lea
adc
fwait
xchg
mov
cmc
inc
gs
mov
push
mov
das
dec
jge
in
fwait
inc
push
mov
push
mov
sbb
aas
js
pop
dec
cmpsl
dec
cltd
popfw
insl
jb
les
mov
fisubs
mov
out
loop
ret
jbe
mov
lret
and
scas
mov
sub
xchg
insl
inc
push
jo
dec
jns
or
cmp
inc
cmp
lahf
cmp
push
push
outsb
inc
int
rorl
add
sub
jle
cmpsb
clc
in
pop
in
pop
cmp
out
and
xor
cmp
out
icebp
jp
insl
sbb
sbb
mov
xor
jae
call
xchg
jge
stc
iret
push
jmp
aam
sbb
pop
mov
hlt
sub
fmuls
inc
imul
sbb
ret
push
jb
adc
mov
mov
jb
arpl
lahf
int3
lods
out
mov
adc
jno
andl
outsl
sub
mov
cmp
ss
pop
std
push
in
push
cltd
movsl
jae
add
int3
in
sub
pushf
and
jb
and
pop
pop
sbb
or
out
cmpsl
fwait
ja
stc
js
mov
pop
sub
inc
inc
sub
sub
cltd
xor
push
iret
and
sub
bound
adc
mov
loope
nop
ja
or
aam
in
sahf
push
std
or
test
inc
jle
daa
dec
les
dec
dec
movsl
sahf
mov
dec
and
mov
in
cmc
mov
xor
testb
cmp
icebp
mov
pop
cs
imul
in
jns
xchg
dec
sbb
adc
outsb
inc
ret
and
call
popf
mov
test
aam
pop
push
scas
out
mov
in
jle
sub
mov
adc
jmp
xor
dec
andl
push
stos
cmpsb
ja
jg
fistpl
outsb
int3
cs
loopne
mov
outsl
pmaxsw
loopne
adc
fistps
push
fxch
lea
sbb
adc
sbb
xor
arpl
call
xchg
imul
jae
push
xor
fldl
jmp
leave
out
xlat
out
push
cwtl
mov
mov
movl
jge
dec
insl
inc
aam
lock
adc
push
or
push
pop
jbe
sub
add
xor
pusha
les
cwtl
mov
outsb
mov
jne
or
js
xchg
rorl
and
jl
sbb
ss
push
leavew
bound
pop
fwait
dec
adc
jge
jp
in
cmpsl
xchg
jp
mov
ffree
xchg
pop
xor
xchg
sbb
adc
jecxz
dec
mov
xlat
cmp
out
pop
adcl
jbe
and
jbe
xor
cld
mov
jo
pop
push
add
jmp
sub
pop
shrb
mov
push
jnp
in
push
js
sbb
jns
pop
jbe
jp
out
iret
add
pop
pop
push
cmp
fxch
xor
call
sub
mov
hlt
clc
je
pop
cmp
xchg
test
sub
sbb
cmpsl
or
jecxz
orb
fisubrs
lds
pusha
pop
mov
mov
push
push
outsb
fmull
mov
int3
sub
add
xlat
in
bound
outsl
mov
adc
icebp
fucom
inc
lret
push
jle
pop
aaa
pop
adc
push
popf
jo
fdivl
pop
inc
movsl
pop
and
lcall
adc
pop
repz
imul
add
bts
int
push
push
mov
add
sbb
xchg
out
push
bound
jno
xchg
xchg
fdivs
hlt
cli
std
adc
or
sub
mov
lret
icebp
insl
push
sahf
hlt
push
lret
inc
jge
call
adc
sub
push
jnp
cmp
inc
orl
jmp
shlb
inc
aam
cltd
mov
xchg
pop
out
flds
cwtl
pop
sub
pusha
ja
sub
sti
ret
cmp
cmp
mov
xor
adc
mov
jg
push
mov
jae
mov
mov
ljmp
data16
push
jns
mov
cmp
xchg
jle
mov
movsb
lods
adc
pop
mov
leave
pop
sbb
icebp
push
mov
mov
xor
and
pop
icebp
jno
pop
pop
mov
add
sahf
shll
xor
inc
inc
fwait
jg
idiv
push
lock
jne
test
or
pop
imul
jae
rcrb
iret
leave
pusha
cwtl
outsl
xchg
mov
pop
test
add
inc
mov
sarb
je
add
lods
loop
ret
jmp
jl
lods
jnp
iret
jmp
or
lcall
mov
xchg
pop
inc
pop
int
mov
ljmp
mov
fcmovbe
data16
jae
mov
jge
jmp
push
pushf
dec
ret
adc
ja
xor
daa
cmpsl
aaa
sub
jbe
or
ficoms
mov
mov
adc
add
stos
mov
push
or
mov
lea
mov
xorl
pop
in
pop
mov
testl
push
mov
cmpsb
sub
mov
push
inc
lods
in
sub
mov
push
sbb
inc
fs
jmp
fistps
cmp
jae
inc
sbb
mov
jge
fwait
popf
or
movsl
aad
jmp
jb
sbb
sbb
add
push
lea
or
inc
outsb
jbe
or
decb
inc
inc
pop
mov
push
in
imul
cmpsl
push
xchg
jmp
imul
ja
lods
pop
adc
cmp
movl
xchg
pop
call
data16
test
cwtl
jnp
jb
popf
mov
mov
das
mov
int3
push
add
mov
mov
dec
addr16
loopne
and
cmp
in
pop
or
movsb
stos
pop
repz
mov
pop
xor
dec
jbe
pop
and
mov
psubsb
ss
outsb
adcb
lods
mov
sbb
xchg
mov
sub
sbb
xor
loopne
xchg
pop
push
xchg
loop
or
loop
mov
push
inc
mov
mov
mov
pop
imul
inc
xor
orl
or
ljmp
lods
roll
xor
les
push
fdivs
mov
sbb
mov
out
inc
shll
mov
incb
subl
ror
clc
int3
mov
outsl
jno
in
nop
lret
in
add
in
mov
adc
stc
add
aaa
xor
add
idivl
stos
adcl
cs
fisttpll
fnstenv
push
lea
imul
aaa
mov
outsl
in
sbb
loope
fidivrs
mov
xchg
cmp
cmpb
into
inc
dec
jnp
divl
mov
leave
sub
repnz
push
mov
stos
ror
movl
push
xorl
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
add
mov
add
add
add
add
add
add
add
add
inc
add
rolb
add
add
add
inc
add
rolb
add
add
add
pusha
add
loopne
add
add
inc
add
pusha
add
loopne
pusha
add
add
add
inc
add
ret
add
add
add
pusha
add
loopne
nop
add
repnz
incl
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
add
out
add
stc
scas
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
scas
add
mov
