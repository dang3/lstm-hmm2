sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
int
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
adc
lea
pushf
and
es
in
iret
lret
je
jle
xchg
idivl
inc
aas
lcall
add
test
add
mov
mov
test
por
scas
lods
cmp
mov
shrl
cmp
ss
mov
stos
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
and
sub
sub
daa
mov
es
enter
scas
cld
push
adc
xchg
sub
cld
sbb
xchg
fs
sbb
xchg
adc
push
xchg
inc
push
adc
adc
femms
lock
gs
or
or
or
pop
add
cld
add
add
xchg
or
and
cld
pop
cmp
subl
aaa
out
paddusw
or
add
in
pop
les
mov
test
je
adc
je
idivl
mov
cmp
sti
int3
aas
adc
jb
addr16
cmp
xlat
stos
scas
test
inc
adc
add
mov
aas
mov
in
ljmp
dec
cltd
jae
jmp
mov
icebp
repz
out
sbb
pop
rolb
mov
xor
push
orl
mov
dec
adc
dec
or
test
add
mov
dec
dec
sti
xchg
mov
out
repz
notl
je
jbe
stc
pop
cli
adc
and
adc
loop
add
testl
sar
cld
xchg
mov
sbb
xchg
lock
mov
inc
add
ja
int3
and
or
loop
out
fbld
pushf
repz
pop
les
es
push
xlat
cld
xchg
movsb
mov
adc
adc
jb
scas
repz
jmp
adc
es
movsb
adc
fdivrs
or
cltd
inc
mov
call
xchg
jmp
or
test
js
xchg
mov
repz
sub
lret
xor
in
pop
scas
jae
inc
daa
jns
sub
in
xor
leave
shll
lock
popf
xor
xlat
bnd
repz
push
pcmpgtd
cmpsl
mov
testl
aaa
jp
mov
in
repz
push
repnz
cmpsl
sti
movsl
cltd
test
jge
add
adc
repz
pop
mov
fistps
pop
mov
ret
adc
pop
mov
mov
arpl
or
idiv
mov
clc
or
popf
adc
daa
ret
dec
dec
push
cmp
repz
pop
sahf
ja
popf
xchg
cmpsb
sub
adcb
mov
outsb
out
stc
jne
sub
mov
out
mov
sub
adc
push
mov
xchg
pop
pop
dec
cmovnp
std
ljmp
iret
jmp
lock
ljmp
cmpsl
idiv
fildl
jb
push
mov
pop
mov
inc
and
and
aad
movsl
in
mov
repnz
mov
aad
inc
adc
sub
mov
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
pushf
cmp
and
mov
lods
cmp
xchg
dec
dec
mov
cmp
scas
mov
testb
push
stos
fsubs
arpl
arpl
pop
dec
shrb
inc
pop
mov
das
test
xchg
outsl
push
add
sti
aas
into
add
inc
push
jl
add
mov
mov
or
lods
test
jb
jmp
scas
sti
jg
pop
out
aas
inc
pop
orb
out
jb
push
repnz
cltd
push
inc
xor
lods
xor
and
scas
jne
adc
clc
lret
xchg
push
ljmp
xlat
dec
mov
stos
popa
inc
jecxz
ds
pop
sub
cmp
les
movntq
jge
int
cli
sub
pop
iret
test
adc
cli
je
jmp
movsl
cwtl
xlat
jnp
out
cmp
dec
iret
subl
or
inc
push
xchg
cmpsl
sub
add
xchg
daa
and
sub
cmp
test
gs
es
add
mov
mov
fimuls
lret
mov
lret
iret
cld
mov
mov
cli
lcall
mov
idiv
mov
xchg
cmc
mov
ja
hlt
stc
xor
dec
inc
mov
jl
jbe
dec
cli
hlt
adc
call
loope
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
jl
inc
fs
sti
pop
sbb
loop
cmpsl
jle
jns
or
bound
inc
adc
mov
adc
add
xor
xor
mov
lret
mov
xor
addr16
cs
push
dec
dec
pop
lods
mov
inc
cli
and
dec
add
in
xchg
sub
jb
ljmp
test
cld
inc
pusha
xchg
add
lods
ja
ljmp
aas
jl
dec
sbb
mov
cmp
inc
jnp
xchg
mov
lea
lock
jnp
outsb
ret
cmp
add
push
les
stc
fwait
pop
add
imul
sub
add
stc
xchg
repnz
add
add
push
mov
cmp
cltd
add
push
or
xlat
das
xchg
inc
push
repnz
and
xlat
inc
testl
hlt
xchg
dec
test
pusha
rcr
xchg
add
leave
in
adc
in
fcomi
dec
or
jb
xchg
cltd
fwait
nop
jp
xchg
gs
xchg
mov
jle
dec
insl
iret
call
stos
mov
xchg
hlt
cmp
xchg
adc
hlt
dec
and
push
mov
lahf
loopne
xchg
arpl
bnd
xchg
daa
dec
sarl
add
in
mov
adc
les
push
cmp
xchg
push
jl
aaa
xchg
jae
popf
outsb
js
cmp
stc
push
mov
xchg
stc
cmp
lcall
loope
scas
stc
pop
mov
popf
shl
xchg
cld
negb
aaa
jns
popf
sbb
mov
sub
cwtl
ja
daa
jmp
pop
popf
inc
add
jb
scas
stc
pop
inc
xchg
dec
or
repnz
out
in
lods
fadd
fwait
xchg
pop
loope
dec
xchg
sbbl
jno
loopne
sbb
int3
out
push
push
test
lcall
hlt
adc
adc
movhps
ret
inc
jle
cmp
std
push
or
shll
not
xchg
pop
int3
pop
dec
cmpsl
int
push
std
mov
add
aas
fadd
sub
testl
call
jnp
fidivl
xor
pop
jl
xchg
hlt
outsl
out
imul
push
jb
cmp
sar
cmp
aam
call
je
repz
je
sub
dec
sub
mov
bound
sbb
or
out
cld
aaa
push
inc
repz
iret
popf
jp
mov
pop
imulb
decl
mov
sub
xchg
inc
mov
sarl
std
std
ljmp
out
std
push
aad
stos
incl
sti
jp
cld
ljmp
xor
cld
push
pushl
sti
cld
add
inc
and
daa
lahf
loopne
mov
sbb
icebp
decl
xor
inc
mov
stos
xchg
xchg
inc
inc
add
add
xchg
fistps
fistps
xchg
fists
fists
nop
fwait
lcall
xchg
imul
cld
adc
inc
data16
cmp
data16
inc
cmp
dec
data16
adc
inc
data16
clc
lods
xchg
inc
ret
pushf
xchg
enter
cld
mov
push
mov
push
mov
icebp
fdivp
stc
repz
inc
call
clc
out
cld
cli
clc
std
lcall
clc
scas
repz
cld
les
std
aad
out
clc
stc
icebp
in
inc
dec
incl
test
mov
in
mov
aaa
cmp
outsl
loope
popf
mov
repz
jg
rcrl
lahf
xor
jmp
pop
out
and
rorl
notl
std
jecxz
outsb
mov
clc
gs
test
inc
into
cld
jae
sbb
mov
int
into
loopne
xchg
adc
cld
push
dec
cmp
pop
push
repz
iret
add
aad
gs
xchg
gs
arpl
dec
inc
xor
pop
adc
mov
gs
xchg
gs
jno
test
fwait
stos
sub
lcall
imul
jae
xchg
or
decl
fidivrs
push
dec
xchg
hlt
rcr
int
aad
int3
frstor
addr16
daa
movsb
das
sub
ret
mov
in
sub
add
inc
xlat
jp
inc
repz
imul
data16
jg
and
neg
in
out
xor
data16
rcll
jmp
lcall
int
mov
dec
lock
mov
in
and
jnp
inc
ss
aas
jg
pop
out
jmp
lahf
mov
icebp
fdivr
daa
aam
jecxz
imull
in
scas
pop
and
daa
xor
mov
add
sti
ljmp
mov
sahf
sub
and
mov
ret
lock
mov
mov
out
jne
cmp
jb
mov
shlb
sub
sahf
out
cmp
inc
inc
cli
mov
mov
loopne
dec
scas
stc
pop
fcomi
cmp
and
fldt
call
aas
sub
cmpsl
cmpsl
rorb
mov
inc
xor
jg
shr
int3
dec
cmpsb
jnp
outsb
jmp
xlat
cmp
arpl
push
dec
push
int3
and
mov
mov
pop
imul
lret
jg
cwtl
and
fcoml
dec
ljmp
stc
pop
shlb
mov
jmp
sarb
mov
cmp
fistpll
mov
pop
in
out
ljmp
loopne
jnp
mov
lock
faddl
clc
fisubrs
inc
out
idivl
pop
cli
testb
or
inc
cld
mov
mov
in
xor
pop
sub
inc
xchg
cwtl
dec
out
je
jns
mov
enter
adc
testl
cld
mov
loope
adc
lcall
pop
lahf
add
lods
test
lret
sbb
imull
mov
mov
repz
xchg
faddp
mov
js
cmpb
jle
pop
test
and
daa
into
mov
leave
and
cmp
add
outsl
xchg
mulb
push
scas
rcll
or
call
adc
iret
scas
int3
imul
sti
dec
incb
mov
call
cmp
fstpt
push
in
inc
or
cmpsb
in
add
jp
jp
test
xlat
mov
mull
adc
adc
js
mov
loop
or
mov
insb
xchg
sub
and
loop
fdivr
mov
fists
je
pop
mull
mov
dec
mov
lahf
lock
movsl
sub
rcll
xlat
mov
div
out
movsl
pop
in
repz
pop
jge
jbe
clc
stos
push
adc
mov
das
orb
or
repz
ret
sub
and
addr16
lds
lods
pop
ret
in
cmp
add
out
repnz
and
dec
push
sub
loop
cmovs
dec
cmp
imul
lahf
xchg
pop
sar
fwait
pop
mov
and
sbb
fwait
xor
mov
pop
mov
dec
arpl
xchg
lea
dec
rcrl
mov
stc
lret
xchg
lret
mov
and
in
pop
lret
push
mov
int
outsl
add
inc
hlt
xor
ret
divl
scas
cli
daa
scas
out
shll
inc
jl
jmp
mov
sbb
pop
xchg
mul
cmc
rol
shr
sub
xor
lret
sbb
clc
xor
lods
lods
cld
adc
out
jmp
mov
push
div
gs
jns
sarl
pop
mov
cmp
subb
pop
dec
push
aad
mov
sub
adc
sti
cmp
fcomi
xchg
pop
lods
mov
mov
jp
add
sti
cltd
jle
and
ret
lret
shl
mov
push
cmp
and
sub
ret
jl
mov
lock
shlb
or
je
xchg
dec
add
fdivrs
mov
mov
and
in
testl
loope
xchg
and
and
cld
and
mov
scas
mov
add
je
je
in
aad
xchg
mov
cwtl
jg
sahf
in
idiv
jl,pt
std
scas
and
roll
cmp
pop
jl
sti
jl
adc
sbb
add
scas
iret
cmp
mov
mov
jbe
and
adc
push
mov
repz
cli
je
mov
aas
ja
cmp
jl
out
jno
mov
lcall
cs
adcl
dec
mov
fdivr
ds
mov
andb
out
cltd
outsb
mov
cltd
nop
bound
cld
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
out
hlt
addps
shr
inc
pop
mov
mov
jne
add
mov
push
xchg
mov
iret
decb
je
in
mov
sbb
mov
mov
mov
mov
sub
mov
stos
lods
add
mov
in
sahf
pop
cmpsb
out
sbb
je
and
roll
add
push
pop
cld
mov
rcl
dec
popl
jecxz
push
cmpsb
rep
ja
inc
xchg
addl
xlat
cmp
xchg
setno
dec
je
repz
jecxz
cmp
jne
aaa
push
movsb
stc
pop
adc
popf
pop
and
add
gs
neg
int3
xor
pushf
into
jle
mov
pop
nop
sti
popa
fs
jnp
mov
xchg
sti
xchg
out
adc
mov
mov
add
cmc
notl
scas
cli
pop
std
dec
add
mov
adc
fs
cmp
pushf
cmp
dec
je
jns
je
ret
pop
and
nop
mov
mov
movsb
mov
sub
in
fsub
mov
out
inc
iret
or
pop
je
add
or
cld
pop
jno
es
fldl
mov
cld
or
jmp
jmp
jns
popf
imul
pop
mov
pop
cmp
pop
cmpsl
out
mov
sub
inc
cld
out
jne
negl
xchg
cld
adc
ret
arpl
cmp
cmpsb
adc
mov
jg
xlat
push
push
shll
xchg
inc
push
push
or
or
or
pop
push
push
aas
repz
adc
add
mov
and
dec
mov
ds
notb
mul
icebp
inc
int3
jbe
je
pushf
dec
sbb
inc
mov
push
or
mul
pop
xchg
sbb
xchg
in
inc
incb
cli
xor
and
mov
scas
pop
mov
xor
mov
xchg
mov
sti
js
cli
orb
repz
ficoml
scas
fimull
daa
cmpsl
call
cli
inc
in
ljmp
sti
leave
push
mov
cmpsb
mov
rcl
in
sub
lahf
in
in
mov
cmp
fdiv
fcoms
shr
aas
push
fbld
add
xchg
add
xchg
lcall
nop
pushf
mov
xchg
add
mov
fwait
mov
popf
lea
orb
daa
add
mov
fwait
mov
mov
lcall
mov
rol
cmpsb
jl
dec
movsb
icebp
sahf
mov
fldl
xchg
mov
pushf
lock
in
xchg
mov
sub
xlat
jnp
test
repnz
lcall
sahf
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
shlb
and
stos
xchg
repz
les
lea
jge
in
cld
scas
xchg
dec
mov
out
pushl
jb
xchg
or
sub
nop
jns
mov
testl
pushf
mov
mov
cmp
adc
sahf
dec
mov
mov
lock
mov
jo
jl
dec
rcl
and
mov
sub
cltd
stc
lcall
inc
lods
cmp
xchg
xchg
repz
mov
inc
jl
daa
popf
pop
jmp
jo
int
and
rcl
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
iret
pop
nop
ljmp
mov
jle
rolb
loope
mov
dec
adc
inc
inc
rolb
out
shl
test
mov
lods
mov
sahf
push
sahf
mov
mov
sub
stos
lods
in
call
enter
push
pusha
xchg
lcall
mov
mov
fs
jp
xchg
je
lret
mov
pushf
nop
roll
mov
mov
cltd
push
inc
and
xchg
pop
lods
ljmp
sbb
xchg
inc
sub
inc
mov
call
ljmp
int
lcall
mov
aaa
lret
sbb
std
dec
outsb
jbe
outsb
xchg
push
jns
iret
mov
in
data16
jb
std
add
fdivs
idivb
std
testb
hlt
in
jmp
mov
push
into
fdivs
mov
mov
add
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
push
iret
int
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
add
int3
mov
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
das
add
add
xchg
lret
jo
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
or
add
ret
imul
ret
push
ret
or
scas
incb
add
stc
punpckhdq
arpl
and
lahf
insl
jbe
clc
push
mov
jbe
lods
mov
jbe
ret
enter
jbe
fmull
test
push
jbe
push
and
and
popl
jbe
or
shl
movsb
fstl
lock
mov
sub
jg
dec
in
fs
lock
sbbb
jg
dec
mov
ds
stos
das
test
aaa
push
mov
fisttps
std
lock
decb
jle
hlt
push
xchg
lret
div
stc
fs
in
je
aas
add
dec
xchg
xor
mulb
dec
push
test
cmc
cld
ja
gs
lcall
push
sar
gs
gs
xchg
jns
fwait
lret
mov
sbbl
cmp
sub
pop
icebp
in
cld
push
push
icebp
repnz
dec
repnz
cld
or
push
mov
mov
mov
ffree
mov
xchg
sub
mov
subl
das
bound
mov
adc
cld
int
mov
lret
mov
sub
mov
push
dec
cmp
sbb
or
xlat
sub
mov
sub
mov
gs
dec
cmp
sbb
jmp
xor
sub
cld
push
arpl
mov
mov
xlat
jmp
int3
cld
mov
mov
xor
aas
in
mov
push
in
lds
cld
pop
adc
pop
lods
lds
clc
fwait
cld
xchg
pop
pop
adc
iret
dec
clc
jmp
xchg
gs
and
sar
leave
mov
gs
xchg
lea
xchg
gs
push
dec
aas
xor
sub
pop
syscall
lret
mov
je
and
divl
inc
jmp
stc
cld
cmc
cmp
in
pusha
xor
clc
imul
iret
incb
or
mov
xchg
nop
mov
out
outsl
pop
mov
sti
stos
or
jg
mov
mov
xchg
imulb
decl
out
test
mov
mov
fildll
cltd
pushf
mov
lods
setb
mov
mov
jge
cltd
mov
fbstp
test
mov
out
cwtl
mov
push
scas
mov
outsb
mov
std
test
imull
ds
clc
in
idiv
cld
out
sub
and
push
lahf
mov
cld
mov
leave
mov
std
jecxz
std
fbstp
cld
and
cmpsl
xlat
les
jnp
mov
mov
call
dec
jnp
mov
cld
mov
icebp
lcall
cld
leave
cmpsl
aaa
test
idiv
test
cld
add
clc
leave
adc
incl
dec
lock
cld
out
insl
jbe
insb
fcoml
loopne
ss
lahf
mov
mov
hlt
loopne
cmp
cmp
das
mov
mov
mov
popf
pusha
ds
fucomip
mov
das
jmp
xchg
ljmp
xor
sub
lock
decl
xchg
dec
xchg
lcall
xchg
ljmp
mov
lcall
add
test
fbstp
hlt
mov
icebp
pop
dec
or
cwtl
movsb
stc
in
into
and
in
clc
mov
xor
daa
cmpsl
cld
aam
fcmovbe
jmp
sub
cld
mov
lods
int3
test
repz
dec
mov
stos
adc
hlt
ljmp
cmp
pop
lret
int
into
ljmp
shlb
xchg
xchg
fs
mov
lcall
scas
push
out
rcrl
mov
cld
loop
rolb
dec
fildl
fcomi
hlt
hlt
sbb
je
scas
push
push
test
mov
rcll
pop
call
mov
xchg
cmc
jmp
cmc
je
orb
ret
cld
jl
mull
jecxz
test
je
jmp
sub
je
sti
je
sarl
clc
std
loopne
shl
push
mov
sti
cld
mov
lock
lds
mov
stos
cmp
pushf
cmp
add
fwait
jb
je
jne
mov
aam
jl
loopne
fnsave
loopne
pop
gs
ja
out
and
inc
outsl
mov
out
adc
jbe
in
enter
mov
xchg
in
lret
loope
repnz
mov
in
int3
add
mov
xchg
mov
stos
mov
js
mov
stos
mov
dec
sub
mov
mov
sbb
mov
cld
test
and
arpl
outsl
cli
or
jge
in
pop
xor
cmp
nop
jno
add
dec
xor
cmp
add
and
mov
and
les
mov
mov
jp
lock
hlt
sub
lock
aaa
jge
mov
test
mov
hlt
xor
dec
sbb
pop
testb
scas
cli
sbb
xlat
in
pop
fadd
jg
or
jmp
jg
inc
sbb
sar
fidivl
xchg
std
in
shll
test
dec
shll
lods
mov
mov
xlat
lcall
cwtl
sti
mov
addr16
xchg
sbb
cmp
daa
push
xlat
xor
test
push
int
enter
pop
test
pop
inc
ficompl
add
gs
sahf
mov
cld
xlat
mov
mov
in
mov
dec
jmp
inc
call
mov
mov
xchg
mov
test
xchg
mov
movsl
cmp
or
jb
fdivrs
pop
adc
cmpsb
cmpsb
movsl
repnz
or
idivl
sti
lahf
mov
pop
int3
and
push
inc
je
sub
into
mov
jl
mov
mov
adcl
mov
push
dec
add
jl
add
fidivrl
or
daa
or
sti
call
or
fiadds
gs
ja
jmp
jmp
xor
pop
mov
in
xchg
test
stc
mov
je
scas
outsb
xchg
pop
add
sti
add
cmpsb
mov
int
adc
inc
lods
ds
std
test
jbe
dec
hlt
popl
and
imul
jl
jle
test
daa
pop
cmpsl
jns
jmp
test
lret
cli
mov
cmp
or
jl
jl
cli
jns
push
jbe
inc
add
push
cmp
jl
cli
jbe
dec
subb
dec
mov
inc
lods
scas
dec
lock
pop
cmpsb
iret
mov
sbb
adc
xor
and
xchg
cmp
in
pop
xchg
xchg
sarb
add
test
pop
int3
add
jle
mov
out
jmp
test
ret
jp
out
mov
bnd
lret
dec
out
mov
inc
clc
xchg
push
andb
jecxz
mov
clc
mov
inc
shl
clc
f2xm1
repnz
loope
lock
cli
jl
push
mov
mov
jbe
xchg
cld
adc
out
out
push
xor
adc
sti
jecxz
je
sbb
jb
xor
sarl
mov
ljmp
std
mov
adcl
cmc
in
cmp
mov
fistps
divl
fbstp
and
hlt
ljmp
lahf
sub
test
cmp
shl
in
xor
incb
inc
push
leave
sub
xchg
out
sbb
cmp
push
je
aam
jl
add
repnz
cmp
cmp
repz
pop
repnz
mov
repz
mov
pop
mov
test
mov
call
fdivr
jl
xchg
push
enter
test
mov
add
mov
negl
jmp
cmp
jae
jge
sub
push
adc
repz
inc
lock
mov
shr
dec
std
lret
repz
in
dec
shr
decb
icebp
loopne
inc
and
jb
addr16
loope
je
mov
aad
lea
enter
lods
mov
mov
imul
mov
xchg
jecxz
mov
out
out
hlt
not
imul
mov
pop
xchg
jns
fildll
xchg
dec
xchg
loop
xchg
imul
lds
jecxz
dec
movsl
ljmp
jle
aas
loopne
lds
ja
jg
js
insl
mov
cli
loop
iret
or
iret
jge
bound
mov
in
fidivrs
or
iret
mov
jg
enter
cmc
bnd
or
jne
rclb
in
adc
pop
pop
movaps
testl
xchg
xlat
push
jecxz
or
adc
cld
adc
loope
icebp
mov
mov
and
pop
jb
mov
test
out
popa
sbb
xor
test
loopne
add
daa
lret
xchg
sbb
jb
sub
adc
jb
cvtps2pd
cltd
pop
inc
aas
repz
mov
dec
pop
out
arpl
and
cmp
adc
out
pop
cmp
jg
call
fidivrl
xor
pop
dec
mov
lods
inc
icebp
inc
dec
bnd
sbbl
out
mov
test
jp,pt
jg
cmp
in
jmp
insl
out
mov
cmp
pop
pop
aaa
mov
push
leave
lahf
sbb
jns
jecxz
in
jne
aas
sub
and
inc
je
repz
testl
jne
mulb
adc
clc
leave
and
pop
adc
out
mov
test
xchg
repnz
std
or
mov
loop
push
js
xchg
out
cmpsb
lea
int
aaa
jno
mov
iret
push
cld
jno,pt
aaa
test
mov
idiv
sub
in
cs
mov
fstpt
cld
add
dec
add
jl
std
test
add
frstor
ljmp
lahf
push
push
aam
and
jb
out
jno
pop
adc
int3
jmp
lock
es
mov
imul
repz
iret
jmp
enter
mov
xor
or
inc
push
jmp
jmp
mov
jbe
pop
insl
loopne
lea
push
push
push
and
push
pop
into
sbb
cld
cmp
dec
les
pop
lods
ljmp
mov
add
cld
cmp
iret
jne
test
sub
sbb
cli
xchg
mov
cld
outsl
pushf
xchg
xor
xchg
int
hlt
les
hlt
aam
jnp
jg
outsl
iret
or
into
clc
sbb
xchg
mov
iret
aaa
hlt
fstpt
push
outsl
call
aas
jne
seta
mov
outsl
clc
or
arpl
push
hlt
xchg
addr16
imul
mov
dec
sbb
jecxz
and
pop
fisubs
push
data16
in
mov
jb
movsl
out
or
ss
ljmp
mov
jge
jne
and
mov
hlt
sarb
push
test
or
repz
add
add
pop
xchg
out
sub
xchg
sahf
pop
dec
xchg
mov
xor
repz
and
xchg
adc
cwtl
mov
jmp
cmp
sar
out
or
xchg
mov
mov
fmull
fs
cmp
rcll
dec
mov
mov
stc
or
pushf
or
lret
nop
push
fldl
adc
les
jg
xchg
xor
sahf
std
pusha
mov
movsb
push
mov
jecxz
pop
mov
sbb
mov
mov
fcompl
iret
pop
out
dec
adc
movsb
jb
push
movb
mov
push
or
stos
mov
adc
out
mov
les
mov
test
push
hlt
xchg
jbe
inc
cmp
jbe
inc
mov
or
scas
adc
mov
mov
xchg
add
mov
daa
lods
mov
das
inc
les
nop
dec
movsl
pop
sahf
jmp
pusha
jecxz
cwtl
andl
into
clc
dec
les
jl
out
adc
cmpsl
xor
add
cmp
push
dec
sub
movsb
cld
xchg
xchg
sbb
inc
or
jb
fdivrl
mov
pop
hlt
cmp
pusha
lds
adc
or
inc
jnp
mov
cmp
les
mov
ljmp
xor
mov
nop
movsb
add
idiv
adc
jl
lock
jmp
mov
hlt
sti
and
loopne
jb
enter
hlt
aas
push
cli
push
out
cmp
sub
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
and
add
int3
sub
hlt
cmp
roll
dec
jg
add
je
sbb
and
mov
sarl
xor
jns
out
inc
aam
inc
mov
push
out
mov
jnp
popa
test
jecxz
and
rol
mov
les
push
cli
mov
repz
jl
push
dec
idiv
arpl
and
dec
fs
and
push
fistps
inc
inc
adc
fdivrl
cmp
test
ds
jl
stc
push
adc
out
hlt
jmp
ficompl
and
pushf
push
std
pusha
fdiv
sti
mov
sub
adc
je,pt
inc
xchg
jne
test
fisubrl
or
cltd
mov
cmp
cli
push
dec
repz
ds
lret
adc
fadds
outsl
jne
ret
test
call
and
enter
mov
mov
popf
repz
jl
rclb
inc
test
enter
in
and
clc
sub
cmp
aam
into
sti
aas
jmp
sti
scas
hlt
mov
scas
sbb
adc
adc
ja
mov
data16
mov
stos
push
inc
mov
repz
mov
decl
jmp
mov
mov
fdiv
pop
push
out
push
cmp
push
mov
sbb
les
cs
push
stc
outsb
push
iret
jl
xchg
dec
mov
aaa
push
movsl
fstpt
out
mov
cs
pop
mov
xchg
cmp
mov
test
lods
dec
fwait
cmpsb
mov
in
push
ljmp
ret
into
fnstcw
sti
into
cmpl
lea
adc
lods
inc
or
mov
jbe
imul
or
add
int
fucomip
repz
and
std
fidivrl
mov
jmp
shr
mov
mov
icebp
je
ds
or
sarb
ret
jl,pn
rol
mov
add
pop
cmpb
aaa
loop
mov
push
mov
in
dec
stos
repz
pop
mov
jp
pop
mov
call
mov
out
dec
or
jno
xor
sti
ds
call
jbe
in
mov
and
cmp
dec
in
rorl
icebp
cmp
jmp
xlat
xor
call
mov
sub
mov
leave
adc
or
faddl
icebp
sub
or
add
out
punpckhbw
xchg
add
sub
adc
aaa
pop
int
sti
cld
cltd
scas
or
faddl
hlt
or
cld
out
jb
enter
movsb
mov
mov
xor
cmp
or
xchg
nop
test
mull
hlt
cli
add
and
arpl
and
cmpsb
ds
ds
push
add
jmp
pcmpeqb
fmull
or
push
fs
mov
pop
ror
adc
inc
xor
mov
xchg
or
jmp
or
or
and
jno
and
jb
in
lock
je
inc
xchg
hlt
repz
add
stos
mov
andl
aas
fimull
nop
push
je
cld
in
stos
in
aad
js
je
and
dec
sbb
jmp
jge
je
xchg
jp
test
movsb
sahf
sub
and
dec
or
aam
in
mov
sarb
rcr
and
add
push
cmpb
xor
loope
push
add
jp
ljmp
jge
jmp
sbb
add
jp
xchg
jp
fnstcw
jl,pt
lret
push
xchg
xor
daa
addr16
adc
jmp
cmpsl
das
and
mov
loopne
or
push
adcl
dec
add
je
pop
mov
ret
xchg
and
movsb
stos
mov
xchg
adc
cld
aad
daa
stc
in
jns
sub
cli
inc
sub
dec
mull
mov
adc
enter
stos
cmp
fucomp
outsl
xchg
fidivs
sub
and
sub
and
add
repz
push
dec
cld
stos
add
jge
xchg
fiadds
and
pop
mov
and
mov
cld
clc
pusha
arpl
jno
xchg
mov
je
ret
int
mov
movsl
sahf
aam
fcomi
js
nop
adc
lahf
movsl
das
cmp
jmp
std
fdivp
jp
inc
aas
dec
mov
ds
dec
adc
and
enter
daa
sub
stos
mov
call
adc
in
cli
hlt
out
std
push
sub
andb
mov
call
das
movsl
int3
inc
cld
or
sbb
movsl
mov
or
mov
xchg
push
pop
mov
rclb
push
pop
fdivrl
pop
dec
mov
sub
cmp
push
or
dec
dec
lret
sbb
enter
js
dec
jae
jns
jmp
pop
add
jo
lahf
jo
das
jo
or
and
jle
pop
daa
sub
std
jcxz
icebp
pop
jp
insb
loope
repnz
dec
shll
sub
xorb
dec
mov
or
sbb
and
das
dec
sbb
push
fimuls
aam
adc
dec
cmp
jb
aaa
jo
clc
enter
pop
movsb
xchg
dec
jo
in
cmp
mov
jns
ja
xchg
js
sub
jg
inc
or
in
icebp
pop
mul
stc
test
lcall
je
jmp
pop
xchg
and
adc
movups
jnp
jb
andb
cli
push
sbb
std
dec
push
xchg
jo
dec
cmovle
mov
lcall
jp
xorb
jo
je
sbb
test
es
nop
cwtl
sub
icebp
cmp
and
mov
mov
cmp
mov
jb
jae
pop
and
enter
sub
das
out
push
mov
cmp
sti
push
add
xor
and
jp
jle
mov
cmp
hlt
jge
shl
xchg
rcr
bound
lret
rcll
or
lret
es
mov
sbb
fildl
and
jns
in
int3
dec
adc
mov
mov
test
push
xor
mov
lea
or
or
loope
xor
bound
or
mov
sub
repz
popl
inc
or
repnz
sbb
sub
dec
pop
jns
iret
cmp
sbb
adc
or
cmp
xchg
jmp
fcomps
sbb
ud1
cwtl
int3
and
iret
adc
and
sbb
and
shl
addr16
xchg
cmpsb
inc
xlat
and
loop
sti
adc
mov
jecxz
mov
rol
dec
addl
inc
loope
sbb
or
xchg
pop
sbbl
sbb
sub
xlat
mov
in
repz
test
mov
ret
mov
insb
jae
sub
lahf
int3
push
pop
out
mov
pushf
aam
daa
in
push
stc
hlt
loope
cmp
scas
cld
and
xchg
int3
jg
dec
stc
cmp
mov
or
idivb
inc
lock
fsubrl
lret
and
test
xchg
lea
int3
loopne
pop
insb
add
adc
loop
cmp
repz
push
push
sub
xor
sub
cmp
movsb
lcall
shrl
mov
xor
pop
insl
xor
jo
mov
cmp
mov
hlt
into
gs
inc
inc
roll
xor
lock
or
loop
bnd
lock
adc
mov
xchg
pop
hlt
rclb
mov
push
test
test
nop
mov
stc
test
adc
mov
inc
mov
arpl
pop
sbb
add
cmc
test
les
pop
adc
pop
adc
cld
hlt
and
pop
out
divl
mov
subl
sub
sub
daa
pop
lret
inc
into
repnz
sub
adc
daa
pop
and
enter
sub
aad
lock
cmp
or
mov
and
je
lods
mov
into
dec
or
movsb
adcb
mov
pop
jbe
mov
std
pop
scas
stos
je
repz
repz
lahf
mov
mov
xchg
lahf
mov
nop
aaa
das
mov
jg
cmpsb
les
cmp
xchg
mov
xchg
gs
scas
or
aas
lods
lret
mov
sub
test
xchg
mov
cmpsl
and
xchg
jb
xchg
jge
mov
xchg
push
push
xchg
outsl
xor
scas
imul
out
icebp
clc
out
das
fimuls
mov
out
jne
pop
jb
test
jne
jbe
stos
int
pop
push
mov
popf
pop
test
clc
cmpsb
lods
and
and
inc
jo
xabort
aam
test
jle
lahf
enter
mov
mov
adc
mov
jecxz
sbb
xchg
or
pop
ljmp
ret
jb
pop
cmpsb
in
push
insl
push
rcrb
push
jb
std
scas
rep
imul
inc
cmp
inc
xchg
das
mov
std
aas
cmp
jmp
sbb
lods
loope
mov
imul
jmp
ja
lret
mov
gs
add
xchg
cmc
lahf
popf
pop
leave
aad
mov
out
push
bound
repnz
pop
xchg
enter
repnz
cmp
jle
test
loopne
lods
jmp
jne
or
mov
dec
mov
repnz
fcoms
pop
fs
push
push
pop
mov
cltd
dec
das
xchg
xchg
stos
scas
repnz
sahf
sub
daa
lcall
pop
lcall
stos
sbb
nop
ret
movsb
xchg
and
mov
mov
aas
mov
xlat
mov
jbe
mov
pop
hlt
lahf
jge
pop
fdiv
or
mov
sub
xchg
out
jae
sbb
inc
and
xor
leave
movsb
xchg
imul
dec
jmp
inc
test
test
mov
push
pop
dec
mov
cmc
pop
push
clc
iret
ljmp
call
sub
xchg
je
xchg
cmp
cld
lds
xor
out
sti
pop
ja
pop
imul
cli
fisubrs
les
jb
insb
inc
repnz
lahf
mov
or
clc
bound
add
jb
notb
pop
loopne
or
push
jp
lods
scas
loope
jmp
cld
scas
call
jae
arpl
ss
cmp
loop
mov
jae
xchg
pop
cld
sbb
insb
decb
dec
test
cld
test
fstpt
in
jne
out
in
test
into
sbb
adc
mov
mov
mov
fucomi
push
jge
push
inc
repz
add
add
mov
cltd
jl
lds
cltd
je
sti
cltd
ret
jns
lret
and
ficoml
sub
sti
inc
lock
push
cs
pop
daa
and
and
sbb
sub
cmc
clc
mov
sub
mov
mov
pop
mov
clc
xchg
lods
pusha
dec
dec
dec
repnz
and
test
mov
mov
add
mov
mov
mov
sti
ret
rorb
sarl
dec
lock
xchg
xchg
mov
xor
or
xchg
call
ljmp
clc
shr
push
mov
mov
jbe
sbb
mov
push
sub
jmp
ret
nop
mov
mov
cmp
jne
lret
sub
jmp
addr16
add
std
jp
jns
dec
iret
jno
lcall
mov
ljmp
xor
ja
icebp
out
xchg
inc
pushf
ss
bound
les
and
sub
test
adc
xchg
ja
fists
cmp
jb
push
insl
jae,pt
ror
in
cli
test
jbe
fisubl
jo
movb
pop
lret
jle
pop
inc
jno
rolb
shll
xchg
stc
or
in
mov
sti
gs
fwait
iret
add
dec
aaa
sti
dec
pop
inc
rclb
dec
push
adcb
loopne
loop
pop
xor
loopne
pop
push
outsl
jl,pt
movsb
filds
push
je
arpl
inc
mov
cld
arpl
sub
dec
fimuls
pop
jl
pop
rorl
mov
sbb
outsl
decl
out
jg
rcr
lds
dec
test
call
cwtl
int3
xchg
out
fstl
dec
orl
mov
testb
adc
pop
xlat
ffree
lret
cld
and
add
fsubp
daa
inc
ret
scas
mov
push
inc
add
shl
sti
insb
cltd
call
jmp
daa
adc
mov
test
lods
jae
inc
out
jbe
leave
xchg
filds
jecxz
and
mov
dec
cmpl
xor
mov
sub
push
in
inc
sbb
hlt
sub
stc
stc
leave
sub
xchg
xor
sbb
cld
push
mov
xchg
dec
cwtl
dec
inc
mov
mov
mov
sbb
inc
mov
inc
cmp
dec
adc
inc
faddl
cld
inc
xchg
inc
fwait
shll
dec
ljmp
shll
lea
dec
shll
lcall
shl
pop
mov
scas
sahf
xchg
shlb
pushl
pop
xchg
xchg
gs
and
adc
adc
femms
or
dec
loope
stc
aas
sarb
sub
fwait
mulb
mov
inc
mov
cmp
cltd
lcall
iret
iret
lcall
xor
mov
mov
push
bound
fstpl
scas
push
mov
dec
das
scas
lds
ja
xchg
cmpsb
je
aas
sarl
ljmp
ret
out
cmpsb
enter
lock
sub
gs
das
call
dec
push
arpl
adc
cltd
pop
insl
push
inc
shll
fiaddl
lret
stc
xor
stos
add
and
lock
and
mov
mov
lea
add
pcmpeqw
cmp
int
jo
incl
add
dec
sbb
jb
aam
cs
push
mov
scas
mov
mov
out
mov
test
pop
fldt
cltd
mov
clc
jp
add
ss
in
jge
loop
sarl
scas
mov
leave
push
push
adc
enter
stc
aas
xchg
cmpsb
pop
out
or
es
jecxz
inc
dec
jp
add
inc
stc
sbb
iret
push
aam
sbb
repz
jle
and
jg
pop
mov
repz
je
and
or
sub
or
adc
iret
xor
lret
ret
out
mov
dec
or
xlat
adc
out
inc
xchg
cld
daa
sub
add
cmp
push
in
dec
jmp
xchg
dec
rorl
xchg
rclb
push
scas
xor
idiv
jge
or
popf
adc
sbb
in
daa
jb
repnz
enter
jl
or
test
mov
lret
sub
pop
sbb
cmpsb
cmp
out
sti
mov
daa
insb
fnsave
mov
sbb
mov
ret
xor
mov
out
pop
negl
stos
mov
in
xchg
nop
lcall
dec
hlt
add
sbbl
pop
cld
xchg
adc
in
notl
clc
jmp
rolb
cs
pusha
pop
movsb
dec
rcrb
repz
lret
pop
add
jns
sti
add
inc
in
and
sub
mov
jnp
int3
xchg
mov
add
pusha
mov
pop
mov
sbb
mov
and
or
pop
cltd
sbb
or
es
shll
cli
loop
test
shll
push
mov
clc
add
out
out
lcall
mov
shl
jecxz
insb
push
les
xchg
stos
dec
push
mov
loop
pushl
pop
and
ficoml
jle
xchg
notl
scas
lds
mov
leave
je
ljmp
daa
cmc
mov
and
fnstenv
lods
cmp
les
inc
in
loope
outsb
repnz
clc
xor
cld
jno
mov
je
out
aas
mov
repz
decb
or
faddl
sti
cmp
cmp
push
call
sbb
xor
popa
stc
ljmp
insb
fistpll
idiv
pushl
cmpsl
sarb
sahf
xchg
icebp
and
incl
scas
out
xor
push
out
or
mov
loop
call
call
adc
mov
cltd
inc
and
mov
test
repz
jg
ljmp
call
hlt
iret
insb
lcall
pop
icebp
xchg
daa
loopne
mov
dec
flds
fwait
cmpsb
andl
loop
lahf
or
sbb
adc
leave
lods
inc
je
mov
clc
cmp
stc
fistpl
hlt
idivl
and
enter
shll
sbb
out
mov
push
out
pop
or
stc
adc
xchg
xchg
pop
push
mov
push
in
xlat
test
outsl
and
pushf
add
dec
add
test
push
idivl
clc
cmp
pop
xor
inc
stc
mov
popa
int
pushl
xadd
stc
and
xor
mov
test
add
les
mov
mov
js
mov
arpl
clc
dec
cmp
ja
inc
cltd
call
sbb
cmpb
pop
repz
in
shrl
xchg
dec
ds
add
imul
push
xchg
repz
jmp
call
jns
test
mov
test
data16
les
out
popa
packuswb
std
pop
cmp
push
gs
xchg
les
xlat
push
dec
ljmp
mov
sub
enter
and
and
ja
mov
repz
cld
icebp
outsb
mov
mov
xchg
out
jmp
rcrl
dec
mov
out
lods
mov
adc
jmp
jmp
push
sahf
inc
movb
enter
loopne
fwait
loop
inc
test
pop
cmp
mov
jnp
setno
icebp
mov
jp
in
pop
xchg
outsl
mov
jae
out
xchg
addl
es
movsb
inc
fnstsw
adc
xor
push
test
jle
sbb
xor
call
cmp
or
aad
cli
and
mov
add
mov
int
ja
dec
push
scas
test
jecxz
cmp
inc
cmp
out
push
in
xchg
int
mov
arpl
repz
pusha
jnp
xchg
test
and
sub
loop
stc
mov
daa
jg
mov
add
xchg
add
add
xchg
vmovupd
mov
pop
adc
adc
pop
xchg
rcrl
movsl
int3
sbb
out
arpl
popa
pusha
mov
pop
lock
hlt
pop
in
pop
and
mov
pop
cmpsl
pop
lock
call
rolb
lock
scas
push
lcall
lret
mov
jge
sub
mov
imul
dec
xor
or
cs
mov
sub
cld
je
jae
jb
mov
jo
outsl
mov
inc
mov
insl
mov
imul
adc
push
imul
gs
push
push
data16
les
mov
and
mov
sbb
sbb
sub
es
mov
lret
mov
lcall
sub
mov
cmpsl
pop
lds
in
mov
pop
and
in
scas
test
xchg
ja
fwait
fwait
fwait
fwait
daa
mov
cmpsl
cmp
ljmp
rol
popf
pop
push
xor
mulb
add
dec
shlb
jbe
mov
pop
out
jns
arpl
roll
xchg
sub
xchg
lds
shll
lock
out
and
loope
lock
enter
add
cmp
popa
sub
out
sbb
cwtl
lods
out
sti
movlps
ljmp
jb
mov
cli
inc
xchg
rclb
mov
out
sti
repz
mov
lret
sti
popa
inc
es
test
aas
repnz
ja
cli
in
mov
test
dec
mov
mov
call
dec
fwait
repz
dec
call
mov
decb
pop
test
es
xchg
push
pop
je
pop
push
add
adc
cld
in
popa
ss
in
lods
rorb
out
lahf
in
je
out
mov
mov
jg
test
ret
notb
jp
je
adc
sti
dec
mov
shl
mov
iret
mov
idivb
cli
and
and
imul
add
or
push
loope
cmp
pop
das
pop
jecxz
jle
int
pop
ss
mov
int3
int
sbb
cmp
pop
mov
cld
pop
fstpl
imul
lock
pop
test
jnp
adc
cltd
xchg
xor
jb
push
jge
pop
inc
push
sub
add
loope
pop
jg
mov
xchg
mov
call
sub
or
addr16
test
int
mov
ja
mov
inc
call
push
lahf
jg
or
dec
mov
add
cmpsb
es
out
stos
push
add
dec
xor
jnp
adc
mov
mov
push
call
data16
out
jne
xchg
add
pop
or
mov
dec
lea
fnstsw
enter
aaa
mov
jmp
jg
mov
std
repnz
pop
push
pop
pop
popa
add
in
in
mov
fwait
pop
inc
not
sub
test
jp
sti
bound
sub
arpl
shlb
mov
inc
in
jnp
adc
adc
repnz
push
fs
paddq
loopne
xchg
push
das
lret
mov
sbb
mov
ficoml
mov
sub
loop
mov
orl
mov
pop
leave
fcomp
lock
outsl
dec
std
sub
add
add
shl
mov
cmp
mov
adc
flds
pop
nop
push
js
sub
dec
xchg
gs
adc
cmp
xor
mov
ret
mov
adc
clc
sbb
pop
inc
push
sub
ds
push
add
inc
sbb
sarb
add
dec
sbb
mov
decl
jecxz
out
rorl
sub
je
jg
cli
ret
xlat
js
cmp
pop
test
scas
test
daa
in
cld
out
fwait
sti
int
and
jge
in
repz
xchg
pop
dec
add
jnp
fildl
push
sbb
mov
adc
pop
adc
in
xchg
push
fs
cld
hlt
or
or
filds
loope
rcl
dec
fwait
jns
sbb
fistps
xchg
push
ffreep
or
testl
lcall
lahf
sub
rorl
fcoms
inc
fsub
xor
sub
lret
add
add
add
mov
aad
aaa
jp
ss
xor
mov
call
pop
std
pop
int3
lea
pop
leave
cld
mov
or
or
lret
lret
mov
push
faddl
shlb
add
mov
repz
jge
icebp
jae
loop
pop
cli
mov
mov
jle
pop
xrelease
repz
int
cmpsb
add
or
add
cmp
xlat
mov
xchg
dec
jbe
or
dec
scas
int3
jb
subb
push
xchg
das
movsb
fsubl
stos
imulb
call
mov
or
dec
cmpsb
mov
dec
fidivrs
in
mov
imul
pushw
cltd
das
lahf
xlat
mov
or
shll
mov
lds
popa
xchg
mov
mov
xchg
pop
rcrl
lret
cs
pop
fcomps
mov
xchg
push
fcoms
push
call
lret
xchg
push
push
rclb
push
stos
xchg
gs
pop
dec
sbb
mov
sahf
pop
xchg
gs
pushf
mov
fwait
gs
aas
loopne
hlt
sub
mov
fdivrs
cmp
mov
popf
aaa
shlb
fisttps
inc
xchg
gs
adc
sub
daa
inc
push
jbe
es
or
cmp
loopne
cs
pop
xchg
fnstenv
inc
lahf
dec
fsubs
dec
mov
aam
mov
mov
jnp
jmp
push
stos
add
insl
pop
test
std
in
mov
mov
outsl
lock
sub
adc
icebp
das
adc
jl
mov
addr16
xor
scas
lock
adc
add
jae
lahf
arpl
jecxz
sbb
mov
arpl
dec
mov
aas
add
pop
out
divl
scas
imulb
sahf
mov
push
mov
lcall
nop
cwtl
xchg
xchg
pop
mov
pop
int
loop
sub
fwait
mov
in
cmp
loop
pop
jg
push
cli
pop
and
inc
or
inc
popf
std
mov
xchg
sti
jb
ja
sub
je
xchg
xchg
das
shrb
mov
inc
add
xor
jb
enter
pop
xor
xlat
arpl
out
in
popa
loope
add
cmp
out
cmp
lcall
adc
scas
int3
push
xor
xor
int3
mov
sub
mov
lret
jl
out
inc
addr16
jne
jp
dec
sbb
ss
push
iret
cld
pop
jmp
mov
mov
mov
mov
jo
outsb
enter
notl
dec
jge
stc
pop
xchg
sub
adc
sete
gs
xchg
lea
mov
sti
or
or
inc
leave
das
dec
xchg
jge
add
in
cmpsl
lods
in
mov
popf
push
jg
cmc
mov
mov
and
pop
mov
pop
add
mov
test
xchg
stc
adc
incb
enter
sahf
jns
in
fld
add
cli
loop
iret
data16
int3
mov
out
xchg
sub
push
inc
mov
leave
cmp
push
lock
push
sub
call
inc
lahf
testl
inc
dec
xchg
jl
sti
repz
cli
roll
popf
and
cmc
pop
mov
pop
addr16
mov
cli
and
test
cmpsb
mov
push
je
pop
cmp
pop
pop
xlat
mov
popf
and
iret
push
lret
lahf
cmp
das
les
jmp
mov
out
adc
push
dec
mov
inc
icebp
cmc
movsb
xor
lods
adcl
repnz
ja
cmc
shl
lods
sti
cmp
cmp
pop
fsub
push
jmp
notb
pop
mov
mov
mov
and
jbe
aas
outsl
lods
xchg
gs
xchg
nop
cltd
mov
pop
lea
mov
loop
and
and
and
and
enter
sbb
ds
dec
push
shl
sbb
mov
adc
jge
int3
cmpsl
fdivs
lods
push
push
push
int3
clc
or
fsqrt
inc
or
mov
inc
xchg
add
add
add
pop
psrad
lret
mov
or
sahf
push
dec
add
dec
add
push
in
xchg
aas
mov
in
iret
add
sti
ret
call
xchg
pop
inc
fisubl
sti
mov
xchg
push
mov
push
leave
and
cld
lds
icebp
inc
aas
dec
lock
add
aam
clc
test
pop
xor
ret
adc
pushf
pushf
ss
dec
inc
dec
add
or
out
shlb
push
or
add
daa
jnp
loope
xor
jge
jnp
es
xchg
in
aaa
lods
jb
inc
lods
scas
push
aaa
clc
xor
mov
loop
or
rorb
pop
std
rcrl
out
cmp
push
and
mov
push
testl
stc
mov
mov
adcl
adc
adc
xchg
int3
and
adc
dec
adc
ljmp
out
mov
jne
cmp
adc
jecxz
aaa
bound
hlt
pop
clc
fisubs
rcrl
adc
pop
or
fprem1
add
jmp
sbb
cld
xchg
sbb
out
jbe
pop
dec
notl
in
inc
jg
jge
lret
scas
faddl
and
sub
hlt
mov
out
repz
sbb
mov
jmp
push
xchg
lock
imull
out
test
jmp
dec
incb
stc
lret
add
add
and
xchg
mov
out
and
aas
lcall
xacquire
sti
pop
idivb
pusha
push
scas
fwait
ror
pop
or
add
in
out
fisubs
icebp
inc
add
repnz
sbb
in
adc
xchg
lahf
inc
pop
ret
out
or
out
andl
aas
cmp
jecxz
iret
out
hlt
or
popf
mov
adc
add
jb
inc
cmpsl
or
mov
xchg
inc
out
decb
pop
out
fucomi
ss
xor
xchg
fcomip
xchg
fisubs
jmp
out
mov
mov
repz
inc
fwait
and
out
repz
add
ficoml
dec
data16
pop
pop
sub
inc
aad
mov
push
jo
popf
jecxz
push
cmp
push
and
mov
and
and
xchg
and
sub
push
rcrl
rcrl
sbb
xchg
movsb
mov
cmp
sbb
mov
mov
stos
scas
stc
pop
out
cmp
mov
pushf
nop
xchg
mov
lcall
into
xchg
xchg
nop
aas
jmp
push
xor
pushf
movsb
fwait
add
sub
and
stc
mov
aaa
fisttpll
add
add
fcomip
and
fdivrs
sbb
sbb
push
popa
jb
dec
sbb
imul
sbb
sbb
pop
outsl
fdivrl
scas
pop
add
add
xchg
xchg
pop
push
daa
add
xlat
aad
cmpsl
repz
mov
test
in
iret
lods
popa
outsl
push
mov
push
mov
add
int
ror
add
lret
xlat
scas
std
jae
int
inc
test
xchg
jmp
and
cld
repnz
movb
or
xor
and
fwait
sbb
test
negl
add
push
jp
je
mov
pop
mov
in
movsb
test
push
mov
or
lahf
pop
test
je
mov
shr
cmpsl
std
dec
in
pop
bswap
push
ja
aam
xor
dec
and
je
xchg
cli
push
int3
inc
es
cs
cmp
add
fcmovnb
mov
sbbl
jmp
jl
enter
decb
jb
jp
dec
mov
inc
xchg
sub
add
mov
sahf
cmp
cs
xor
xchg
jae
mov
or
shl
mov
ret
lock
mov
xchg
lock
sub
cli
mov
mov
repz
pop
iret
std
jnp
fs
ds
pop
mov
in
cmpl
jns
mov
pop
jb
lahf
iret
out
sbb
or
dec
into
insl
cmp
decb
sub
xchg
xchg
xchg
xor
pop
pop
in
mov
cmp
inc
jecxz
stos
push
xchg
ljmp
xchg
xor
jae
pop
loope
xchg
or
jmp
jns
lret
clc
aad
movsb
stos
pop
adc
push
std
test
out
dec
cmpsb
stc
je
xlat
adc
cwtl
daa
fisubrl
add
je
repz
xlat
loopne
rcrl
imul
mov
jne
jp
movsb
xor
mov
push
push
xchg
jecxz
mov
cmpsb
je
stos
stc
fistps
pop
add
ljmp
sti
jbe
je
out
je
je
adc
leave
leave
clc
test
cmp
out
inc
inc
nop
dec
mov
push
mov
outsb
mov
jle
cmp
cmp
jmp
xchg
or
subb
inc
jg
xchg
test
in
add
lods
rcr
fbld
and
dec
data16
divb
test
rcll
jne
jnp
add
out
xor
xlat
mov
clc
jecxz
negl
mov
push
cwtl
pop
gs
icebp
lahf
pop
pop
cltd
push
pop
mov
repnz
mov
ljmp
xlat
mov
out
xchg
cmp
mov
push
jg
cmp
pop
add
dec
orl
sub
stos
jmp
add
pop
les
stos
dec
mov
or
jb
mov
adc
or
lock
ds
les
int3
adc
add
xchg
stc
mov
je
insl
jle
xchg
push
stc
push
pop
addb
das
lock
fucomip
out
fwait
dec
push
sti
mov
test
jmp
push
and
jg
mov
add
add
addr16
fdivs
jbe
scas
aaa
addr16
cli
push
mov
xor
js
lea
sub
mov
mulb
cmp
dec
test
cmpsl
fstpt
arpl
enter
hlt
pop
out
jnp
mov
daa
andl
aaa
jecxz
and
cmp
or
dec
sbb
mov
lret
loope
inc
cld
mov
dec
out
or
sbb
push
sbb
mov
ds
scas
sub
add
cmp
and
andl
popa
and
das
cmpsl
xlat
mov
enter
mov
cltd
sbb
movsl
push
dec
mov
repz
imul
jg
outsl
pop
iret
out
ljmp
pusha
enter
test
mov
add
jle
mov
ljmp
in
pop
jge
add
jg
aas
mov
loope
mov
dec
sti
lock
mov
stos
sbb
mov
cwtl
gs
mov
test
jmp
cwtl
mov
pop
xchg
jmp
mov
cltd
push
and
jb
adc
int3
xchg
inc
iret
jns
push
pop
setl
push
pushf
call
dec
add
sub
call
sbb
les
ds
add
hlt
repnz
cwtl
into
loop
xchg
mov
jb
inc
in
lds
and
pop
call
leave
sbb
push
and
lock
in
repz
js
jge
xchg
icebp
clc
sub
mov
mov
mov
and
jmp
add
mov
add
cli
and
ffreep
shr
cmp
in
mov
inc
mov
es
mov
jns
addr16
jge
mov
mov
cmp
scas
ret
push
dec
lret
ret
scas
xlat
lret
mov
fdivrl
je
loopne
decl
cmp
clc
xchg
fsubp
pop
movsl
fisttpl
jbe
jge
mov
enter
mov
ds
outsl
in
popa
out
pop
jp
push
add
test
cmp
shll
mov
fcoms
mov
test
sbb
xchg
daa
out
sahf
pop
inc
ljmp
lods
mov
popa
ljmp
ret
cmp
lcall
pop
stos
cld
sbb
xchg
ljmp
pop
fimuls
dec
cmp
sahf
jmp
mov
lods
mov
hlt
cmc
ljmp
jp
aas
aaa
mov
mov
pop
jg
ljmp
jge
xchg
in
cs
dec
jnp
bound
jnp
scas
sar
push
adc
jns
das
pop
mov
cmpsb
imul
shll
lcall
std
fsubl
jmp
or
jmp
jg
ja
hlt
pop
out
pop
popf
fildll
mov
fucomip
xor
dec
xchg
jp
lahf
fucomp
cltd
jns
sbb
stos
ljmp
lea
fsub
ss
std
stc
iret
jle
cs
sbb
xchg
inc
push
pop
xchg
stos
clc
stc
xchg
ret
xchg
icebp
add
jmp
icebp
iret
cli
dec
lahf
jl
in
ss
and
jecxz
jecxz
adcl
pop
stc
pop
dec
lds
and
dec
repnz
in
out
shl
inc
fwait
outsl
mov
pop
mov
sbb
daa
lods
pop
and
xchg
xchg
ret
test
repnz
lds
adc
imul
jbe
pop
out
fildl
or
pop
jmp
push
add
repnz
out
pop
out
shl
jecxz
and
mov
pop
fcomip
ret
lret
xor
and
cmpsl
std
pop
xlat
mov
mov
xchg
jnp
adc
hlt
in
hlt
pop
lea
inc
incb
insb
pop
pop
pop
fsubrp
loopne
pop
jne
test
pop
jae
in
jecxz
imul
movsb
cli
scas
out
jmp
flds
add
lock
mov
out
rol
sub
out
negl
pop
adc
insb
add
push
imul
mov
flds
in
mov
popa
adcb
fildl
aam
out
xchg
insl
pushf
fisttpl
fiaddl
clc
xchg
xchg
pop
xlat
lods
nop
test
fwait
mov
jo
stos
xchg
lahf
arpl
das
out
and
fiaddl
push
ja
stos
adc
mov
fdivr
mov
fsubrl
test
and
jmp
cmpsb
fsubs
popf
dec
cmp
nop
pop
gs
mov
loop
pop
sub
and
js
shrb
bound
inc
jecxz
aam
adc
ja
mov
lahf
and
fs
mov
mov
inc
adc
mov
cmp
gs
test
stos
jae
in
lods
lods
pop
xchg
ja
enter
fwait
sub
int
dec
sub
leave
jmp
xadd
hlt
dec
sbb
iret
xor
inc
push
pop
add
ficompl
out
popa
sbb
lahf
js
shr
aas
mov
sti
inc
stos
mov
into
scas
out
sahf
adc
test
sub
jecxz
inc
subb
test
in
lahf
js
dec
leave
inc
cmp
leave
jb
mov
int3
push
cli
es
lret
pop
addr16
xchg
ja
leave
sti
stc
aad
insb
scas
fiadds
imull
jo
xor
aad
sti
jnp
ljmp
xchg
fistps
lock
pop
out
test
fisttps
nop
lock
repnz
lods
into
fisubrs
movsb
mov
in
hlt
jg
push
adc
push
cwtl
add
pop
jae
mov
push
js
jo
lock
sahf
repnz
jecxz
jecxz
cmpsb
push
adc
fimull
mov
fimull
mov
fimull
push
dec
in
dec
dec
dec
mov
sub
dec
mov
inc
dec
call
sub
inc
inc
scas
inc
in
lret
mov
inc
inc
inc
or
sub
cmp
mov
stos
in
cmp
mov
sub
ss
sub
mov
xor
xor
aam
call
sub
sub
sub
sub
daa
popf
cli
loopne
enter
and
and
sub
push
sbb
gs
xchg
cmp
int
fimull
lods
sahf
add
pop
testl
sub
mov
or
inc
int
int3
pop
xchg
bound
sbb
repz
addl
xchg
adc
ljmp
add
pop
arpl
stc
inc
pop
xchg
push
shlb
push
orl
std
das
popf
repnz
push
xchg
xchg
xlat
shlb
hlt
sahf
scas
aas
mov
cmp
rclb
add
out
stos
cmc
cltd
xlat
icebp
mov
lret
data16
inc
inc
push
fistps
and
jg
out
stos
cli
cmpsl
test
fstp
scas
inc
push
sub
scas
fisubs
orl
pop
loope
sub
pop
push
test
repz
dec
push
popa
arpl
repz
scas
repnz
outsb
xchg
xchg
fidivrl
inc
stc
sar
mov
jne
cmp
inc
push
lds
cltd
sub
shll
push
movsb
dec
or
repz
out
in
rcr
xchg
loop
dec
aaa
mov
fnsave
mov
mull
add
and
jne
idivl
mov
and
stos
idiv
test
jge
sti
movb
cmpsl
imul
paddsw
sti
dec
mov
push
jno
popf
dec
repnz
inc
cmpsb
mov
cmp
pusha
mov
rol
cmp
imul
mov
xor
xchg
jle
ret
call
xchg
jmp
sti
jl
in
test
cld
mov
mov
mov
mov
jle
ljmp
scas
inc
repz
test
cld
in
dec
hlt
popa
pushf
jo
stos
in
fdivp
inc
xchg
sti
stos
leave
mov
jae
mov
sub
pushf
pushf
int3
lods
mov
add
xchg
aas
daa
imul
pop
das
xor
mov
pcmpeqd
mov
cli
xor
pop
test
cli
cld
mov
jl
or
clc
mov
dec
cmp
xor
fwait
mov
popa
ds
mov
loop
scas
fdivrp
pop
lods
insb
push
lcall
out
jecxz
pop
rcrb
mov
pop
mov
sub
test
mov
pop
mov
fdivrp
outsl
call
jg
aas
mov
neg
jo
insb
lahf
fstps
mov
into
fdivr
incl
clc
insb
call
lahf
fstps
mov
shll
mov
fidivrs
rcrl
fcmovne
idiv
add
iret
or
into
insb
push
jl
daa
shll
push
cmp
xlat
stc
add
ljmp
pop
xchg
cltd
nop
ljmp
add
mov
fsub
or
inc
inc
inc
jno
dec
sub
stos
jecxz
inc
jnp
insb
loope
dec
repnz
pop
out
jno
jmp
mov
xchg
fldenv
test
lods
lret
mov
stc
add
fnstcw
dec
xchg
mov
inc
pop
enter
loop
cmc
lret
ficomps
call
dec
pop
jg
or
pop
xchg
pop
stc
in
dec
ja
xor
xchg
mov
mov
pop
mov
fdivrs
ja
adc
jae
push
cmp
xlat
add
inc
std
xor
xchg
cwtl
repz
test
aas
outsl
repnz
dec
repz
movsl
dec
das
js
mov
mov
cld
xor
xor
dec
pop
push
popa
add
les
in
and
or
lock
mov
xchg
dec
movsb
mov
addb
cli
movl
hlt
cld
pop
aas
ja
enter
fbld
stc
adc
cld
aam
fdivrp
dec
cld
out
into
scas
outsl
cld
ss
mov
in
and
pop
shll
xchg
std
movsl
or
lods
in
lods
iret
in
iret
sti
repz
les
cld
push
repnz
xchg
rcr
jo
int
jg
out
mov
fstl
pushf
sbb
fdivr
or
int
jl
testb
out
cmpl
out
and
and
outsl
xchg
jecxz
adc
dec
jle
out
pushl
rol
cmp
fcmovne
dec
mov
into
pop
jne
mov
push
fcomps
loope
lahf
fsts
adc
int3
and
inc
shrl
sub
dec
and
iret
test
xchg
ljmp
out
iret
push
scas
mov
out
std
iret
jg
iret
std
inc
out
push
sub
sub
std
gs
push
push
lcall
jge
and
pop
jge
test
and
test
shl
test
insl
jecxz
icebp
in
arpl
and
pop
sbb
jp
scas
xor
aam
mov
pop
in
mov
jns
in
jg
cli
test
mov
pop
ljmp
mov
xchg
mov
and
mov
pop
cmp
jp
mov
stc
je
jp
cs
lahf
stos
das
mov
mov
push
data16
jge
xlat
mov
mov
out
or
xchg
dec
out
jl
xchg
sti
dec
or
or
iret
sub
jmp
fwait
sbb
pop
test
lock
dec
push
outsl
std
nop
sbb
aaa
daa
mov
mov
int
out
cli
xlat
aaa
aaa
aaa
aaa
rcr
iret
jecxz
fistl
fildll
and
inc
jmp
jp
iret
push
in
arpl
inc
cli
lahf
cmp
fdivrs
inc
cli
push
aad
rcr
mov
mov
push
mov
mov
mov
scas
mov
jg
and
jmp
adc
ror
addr16
adc
test
aad
fwait
mov
fsubs
pop
fdivr
cmpb
pushf
cmc
lods
rorl
rcrb
lcall
arpl
cld
or
popf
cld
iret
aam
mov
jmp
inc
add
ret
cli
fistpll
pop
adc
mov
mov
xchg
cmp
fisttps
nop
jns
sti
mov
ficomps
out
mov
leave
js
std
popf
cli
psubb
lcall
cli
fcomps
repz
mov
cltd
jp
shlb
fldcw
xchg
fwait
xchg
xchg
lcall
int
mov
std
hlt
out
repz
jmp
jecxz
sub
jl
dec
repnz
scas
mov
mov
pushl
js
mov
shrb
pushf
out
cli
mov
cmp
mov
cmpsb
mov
jecxz
nop
mov
push
lret
push
mov
ret
andb
mov
xchg
scas
nop
xchg
icebp
pushl
mov
call
push
mov
out
pop
movsl
mov
fbstp
push
adc
mov
fucomi
setbe
mov
mov
mov
pop
fldl
xchg
pop
loopne
int3
ss
std
or
lcall
flds
bnd
cmp
enter
cltd
out
int3
fstpl
cmpsl
inc
mov
mov
out
xchg
mov
mov
dec
negl
lods
sar
call
fisttpl
push
and
and
ficompl
rorb
and
xchg
mov
sahf
cwtl
fisubrs
dec
mull
int3
fucom
movsb
pop
mov
shrl
iret
out
sbb
icebp
xchg
adc
mov
lods
out
out
imul
sahf
push
popf
mov
test
in
xchg
movsb
aad
cmpsb
test
xchg
adc
pop
mov
dec
dec
jmp
in
mov
jg
mov
push
jp
outsl
cwtl
xlat
mov
aam
repnz
jo
jae
int
ret
adc
fucomip
jns
and
ficoms
cwtl
pop
cmp
mov
cmc
push
outsl
sar
imul
push
push
dec
inc
nop
incl
xchg
push
lret
mov
cmc
inc
mov
xchg
pushf
and
std
cltd
inc
outsb
mov
dec
dec
in
pushf
mov
jg
mov
jp
and
ds
xchg
xlat
xchg
xchg
cwtl
sub
jns
xchg
jle
imulb
mov
call
dec
inc
cmp
inc
rol
les
movsl
lock
sub
je
jb
out
out
out
xor
lret
hlt
sbb
xchg
xchg
and
add
adc
jl
ss
jns
inc
sar
cwtl
std
add
xor
pop
std
clc
add
mov
stos
std
push
jne
pop
das
scas
inc
popa
mov
lock
sbb
sub
cmc
idiv
cmp
and
inc
in
jg
cmp
ljmp
pop
out
dec
in
mov
add
sub
stc
mov
mov
mov
inc
xchg
jb
and
loop
test
in
lret
lock
xor
ljmp
neg
in
adc
jge
push
inc
negb
lock
sahf
test
pop
lods
jb
ficompl
scas
xchg
lea
es
inc
mov
out
lahf
pop
test
and
mov
inc
ret
sldt
add
ret
rol
mov
xchg
roll
lret
rol
mov
shlb
mov
xchg
jnp
sti
addr16
shlb
or
iret
imul
or
cli
into
in
xlat
into
int3
into
ret
into
mov
into
cmpsl
into
mov
add
add
insb
into
data16
push
into
xor
into
push
into
scas
cmpsb
int
int
int3
loop
mov
add
int3
jne
ror
mov
jnp
push
lret
dec
lret
je
imul
aas
lret
cli
leave
jg
add
ror
leave
jg
jb
imul
leave
es
sbb
or
mov
add
adcb
imul
enter
enter
enter
enter
movl
cmc
aad
push
lock
lret
lds
lds
add
add
lds
sub
or
add
mov
les
pop
les
bnd
loopne
inc
stos
aas
ret
fnstenv
sahf
ret
xchg
ret
cs
sbb
idiv
dec
add
ret
inc
ret
faddp
mov
adc
inc
mov
iret
jo
iret
dec
iret
cmp
das
iret
adc
pop
iret
out
into
jmp
in
les
les
dec
ret
xor
ret
add
sbb
adc
fld
enter
pop
rorl
or
lods
faddp
fld
mov
add
repnz
inc
shrb
and
sbb
adc
mov
fldenv
fcmove
pop
iret
push
iret
mov
mov
je
push
into
cmp
add
mov
inc
int
add
add
int
int3
jmp
lret
dec
lret
pop
lret
cld
lret
lods
lret
popa
lret
out
loopne
lret
inc
inc
ds
mov
xchg
enter
enter
add
enter
enter
mov
add
add
jg
jns
imul
pop
push
es
adc
pop
stc
enter
lods
pushf
movb
jg
jp
jb
dec
movb
xor
rol
mov
inc
lds
lds
lds
pop
add
or
int3
les
mov
les
les
les
les
add
jb
ffreep
mov
ret
mov
jno
push
mov
ret
pop
ret
sbb
mov
ret
stos
mov
roll
nop
fcomip
mov
iret
ja
imul
iret
adc
add
into
out
into
mov
into
pop
into
push
into
dec
into
iret
add
int
mov
int
int
int
mov
int3
in
ror
scas
int3
mov
int3
fwait
int3
xchg
int3
jge
push
int3
cmp
xor
and
adc
lds
add
adc
lret
dec
in
leave
in
outsl
leave
aad
pop
enter
mov
add
loope
stos
lcall
movsb
xor
les
out
add
aaa
les
les
ret
and
sbb
mov
add
mov
mov
rcll
pop
sarl
and
jg
add
icebp
shr
jecxz
fcmovnb
mov
xchg
jl
pushl
inc
add
ja
mov
push
iret
ss
daa
out
out
shrb
add
into
sub
int
int
int
int
xchg
int3
mov
loop
ja
dec
lret
cmc
lret
xor
leave
push
add
add
push
pop
enter
enter
enter
test
fadd
rol
mov
inc
stos
adc
push
or
add
cli
aam
ret
hlt
ret
lahf
ret
push
add
add
fs
pushf
dec
shl
rol
pop
jbe
adc
std
iret
in
iret
in
mov
jns
adc
add
insb
iret
pop
iret
or
std
into
in
into
in
ror
ret
into
stos
into
xchg
into
xchg
jp
jae
add
add
addr16
pop
into
pop
into
push
into
dec
into
inc
into
cmp
into
sub
and
sbb
add
stc
int
int
int
loopne
add
int
int
int
int
push
mov
int
int
jge
add
int
int
and
int
int
loop
pop
add
ss
int
int
int
int
int
int
inc
clc
int3
in
int3
pop
add
add
int3
enter
mov
lods
int3
popf
int3
xchg
int3
test
js
outsb
int3
gs
push
int3
dec
int3
xor
adc
add
mov
enter
mov
scas
lret
cmpsb
lret
jge
jbe
xchg
add
add
pop
lret
cmp
xor
sub
pop
lret
sbb
or
lret
fcmove
incl
jge
and
pop
lret
inc
lret
adc
nop
out
daa
test
les
movl
push
dec
movl
leave
sahf
jge
pusha
sarl
cmp
xor
sbb
movsb
cld
add
dec
enter
mov
add
jmp
ret
mov
ret
adc
add
in
ret
mov
sub
adc
mov
inc
shll
shll
scas
rclb
add
cmp
xor
sbb
pop
je
mov
test
and
mov
jnp
adc
adc
or
add
popf
int
int
int
int
int
int
int
shlb
iret
str
and
or
add
cli
int3
in
fsubs
push
add
nop
sbb
int3
loopne
test
lret
pop
lret
pop
lret
adc
or
out
add
add
lret
loop
lret
xlat
lret
aas
add
mov
lret
jne
outsl
test
lret
xchg
aad
repz
ja
jmp
sahf
add
add
pop
mov
daa
enter
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
out
es
shl
mov
mov
dec
addr16
ret
fidivrs
repz
incl
mov
lcall
rolb
and
iret
cld
pop
icebp
mov
decl
mov
roll
ljmp
repz
lock
lcall
mov
add
and
out
fnsave
cmc
jb
add
inc
mov
cld
cmp
out
divb
xor
test
ja
les
cld
inc
push
jl
gs
les
jg
movsl
mov
cmp
pop
rcl
enter
sub
test
cld
push
dec
mov
sub
pop
adc
xchg
aad
or
fistpll
lahf
mov
fcomip
fimull
sub
fists
xchg
stos
xor
jbe
mov
jne
mov
nop
sahf
lea
nop
mov
jp
in
mov
adc
je
lcall
repz
lods
stc
loopne
inc
aas
or
mov
mov
lcall
scas
lods
mov
ret
sti
sar
test
jg
stc
cmpsb
inc
mov
or
aad
dec
pop
repz
inc
jmp
push
push
stos
sub
ret
xchg
lds
cmp
ljmp
pop
jmp
jb
mov
jns
dec
movsb
aaa
fbstp
call
dec
in
pop
mov
ffree
clc
mov
ret
cmp
mov
xchg
or
in
and
lds
jp
stc
call
xchg
aas
add
mov
mov
mov
jnp
sbb
std
fwait
addr16
push
sbb
fldl
cmpsl
mov
mov
in
test
enter
jne
pop
out
or
stos
ljmp
xor
mov
or
mov
int
orb
lock
or
push
pusha
jne
add
mov
mov
fdivrs
int3
and
cmp
dec
loop
test
shr
into
testl
subb
mov
popf
cmp
jge
xchg
inc
test
stos
sbb
fdivl
fld
leave
repnz
mov
cmp
jg
out
aam
jl
call
sbb
xchg
jmp
maskmovq
mull
pop
jb
cmpsb
xchg
and
push
inc
xchg
jle
sbb
sbb
sbb
pop
xchg
mov
cwtl
out
decl
jne
cld
adc
adc
dec
mov
mov
fldcw
out
addr16
ja
mov
fisubrs
pop
lahf
push
mov
lahf
sub
sbb
mov
jg
push
addr16
mov
rcl
adc
adc
xchg
dec
fs
cmc
mov
mov
pop
xchg
lds
xchg
filds
test
stos
les
add
mov
adc
mov
jmp
lods
jmp
mov
scas
enter
out
and
xorb
movsb
mov
stos
xchg
cwtl
movsl
push
dec
adc
aaa
fsubrp
fwait
ja
adc
negl
int3
jb
mov
xchg
arpl
std
pushl
insl
dec
mov
inc
mov
mul
incl
cli
repz
cmp
ds
cmp
std
mov
jns
fnstsw
lahf
in
pusha
scas
inc
add
pop
test
sub
fstpt
cmp
in
and
cmp
pop
or
lock
ds
push
call
mov
jmp
cmpsl
repz
jmp
ja
or
add
xor
jg
insb
sbb
je
addr16
test
add
xlat
insl
scas
sub
ja
add
lock
jae
stos
clc
in
out
sti
ja
adcl
sub
icebp
xchg
mov
outsl
ja
jne
mov
push
out
mov
insl
cld
mov
scas
mov
mov
mov
mov
out
mov
rol
in
rcr
jne
lahf
cmp
push
subl
decl
cli
mov
jmp
sbb
cld
ss
lret
ret
pop
lret
insl
cli
stos
fiadds
stos
inc
stos
decl
and
scas
fistpll
outsl
cmpsl
inc
sti
and
fsubr
hlt
xchg
stc
dec
lret
testl
pushf
jmp
dec
jb
std
ds
fisttpll
add
sar
inc
inc
cld
out
xchg
nop
inc
repnz
mov
cltd
in
orl
in
scas
pushf
mov
clc
dec
stc
mov
add
dec
add
fmull
inc
dec
mov
mov
mov
dec
add
fcompl
adc
out
push
stc
push
add
jae
iret
push
adc
cli
xor
lret
push
xchg
lods
sub
xchg
jle
hlt
and
shr
mov
and
xchg
jne
sbb
push
or
cwtl
inc
mov
repz
sub
jne
xor
sub
fildl
and
cmp
test
jg
pop
cmp
or
shrb
pop
lds
lods
cmp
aaa
jns
push
xchg
pop
ss
xor
out
jnp
pop
xor
loope
repnz
inc
jno
dec
enter
push
inc
sub
scas
fwait
inc
lock
fwait
mov
xchg
hlt
test
enter
cmp
fimull
mov
imul
mov
adc
sbb
and
imul
inc
add
add
fldcw
dec
adc
dec
adc
xorb
jnp
fadds
dec
xchg
sti
icebp
scas
pop
rcll
shl
inc
fwait
or
jns
into
xchg
sti
scas
dec
jecxz
divl
out
cmp
mov
pop
popf
in
loopne
rcll
sti
pop
aas
clc
sub
mov
jb
scas
cmc
xchg
mov
xchg
jmp
cmp
lods
in
cmp
sub
loopne
ljmp
incb
add
jg
in
je
aas
in
lea
mov
mov
adc
cmc
lods
into
pop
push
push
sbb
repnz
push
enter
incl
pop
or
stc
lret
pop
cmc
cmp
daa
push
lea
shrb
adc
out
pop
jle
xchg
push
stos
lcall
add
jbe
loopnew
test
mov
jne
xchg
loope
mov
dec
idivb
sub
stc
aas
stos
fidivrs
rclb
test
outsb
jge
hlt
iret
loopne
xchg
clc
stc
aam
cmpsl
add
mov
scas
lock
test
add
mov
mov
enter
div
dec
mov
jbe
pop
cmp
cld
fdivrp
out
or
je
cmpsb
mov
cli
divl
jae
popa
imul
xchg
sarl
jae
mov
fmull
adc
jg
xchg
fdivrp
stos
xor
loope
sub
cmpb
cli
jg
scas
jae
fwait
xchg
cld
out
push
out
pop
movsb
sub
pop
inc
jl
mov
mov
in
outsl
sbbl
or
lahf
mov
lahf
fdivs
int3
fbstp
and
ljmp
lahf
filds
into
repz
in
in
rorb
in
xchg
into
fstp
mov
mov
outsl
pop
mov
dec
ja
std
cmp
fnstsw
sti
fdivl
fdivr
sbb
std
mov
push
sub
hlt
and
shr
shr
rolb
imul
push
ljmp
add
loope
lcall
nop
push
aam
mov
icebp
je
stos
xchg
faddl
inc
idivb
jnp
add
stos
std
outsb
rorb
dec
inc
pop
idivb
ljmp
xchg
mov
lcall
stos
pushl
mov
push
fcomip
mov
insl
ljmp
mov
xchg
fdivrs
aas
jg
cmpsb
add
lret
mov
outsl
xchg
in
notl
int3
js
cld
ss
adc
div
lahf
cld
inc
daa
rcrb
fwait
sub
cmp
inc
cld
sarb
xchg
jl
clc
test
sub
cld
mov
call
movsb
add
divl
in
pop
aad
lret
mov
lret
ret
inc
aaa
scas
pop
scas
lret
movsb
adc
repz
mov
into
clc
xorb
mov
push
jbe
aad
pop
mov
xchg
jle
jg
dec
stc
or
lret
or
cmp
das
stc
cld
ljmp
jmp
shlb
fstps
std
daa
incl
xchg
inc
sahf
hlt
fdivl
popf
jg
and
xchg
cwtl
out
mov
cli
dec
jmp
insl
mov
push
out
adcb
jecxz
adc
rcrl
push
cmc
in
pushf
jle
shr
sahf
mov
test
cwtl
shl
in
test
mov
lcall
xchg
cld
int3
cmp
jns
mov
lahf
cmp
cmp
repnz
xchg
jmp
incb
sbb
imul
mov
push
inc
stos
and
mov
mov
out
fbstp
xchg
call
in
jg
enter
adc
call
adc
out
cmp
std
scas
inc
jb
pop
in
push
test
aam
ror
lods
divb
mov
mov
hlt
incl
adc
lds
dec
decb
dec
jo
hlt
movsb
sar
fidivl
xchg
dec
cwtl
sbb
jb
mov
sbb
repnz
faddl
cld
lret
push
adc
jo
dec
sbb
mov
cmpsb
dec
inc
lcall
dec
push
push
lcall
mov
xchg
cwtl
mov
dec
cmp
mov
mov
inc
shl
lcall
in
jmp
hlt
mov
std
sub
into
es
iret
cli
cmp
fstpt
and
int3
xchg
mov
adc
xchg
bound
loopne
or
sub
cwtl
out
popl
cwtl
jo
daa
decl
xlat
push
int
add
sbb
mov
stos
sar
fwait
lock
clc
hlt
xchg
daa
lahf
js
fdivs
fcmovb
shrl
xchg
push
xor
mov
inc
mov
loopne
nop
nop
lock
leave
in
std
daa
fneni(8087
lret
popf
mov
loopne
jbe
test
loopne
inc
fidivrl
add
test
lcall
fistpl
dec
sti
jmp
stos
cld
enter
cli
mov
lods
or
or
jb
dec
aad
stc
push
push
int
jbe
push
mov
int3
les
lret
and
add
mov
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
leave
jge
push
leave
enter
enter
pop
push
enter
xchg
and
mov
sub
pop
add
cmp
xor
sub
and
push
lds
mov
ret
adc
sub
loop
iret
ret
pop
mov
cli
sbb
rol
mov
rcrl
out
mov
rcrl
sub
jmp
addr16
out
incl
lods
lcall
imull
mov
adc
fcmovbe
and
dec
inc
nop
cltd
lock
iret
test
repnz
rcrl
mov
out
aam
sti
jge
jle
fsubrs
out
not
fidivrl
iret
fistps
jg
jle
out
dec
popa
js
jecxz
aas
jns
hlt
jmp
cltd
leave
cld
lods
jg
not
fbld
aas
inc
iret
iret
jg
jl
sti
mov
sti
lahf
out
icebp
lcall
repnz
imul
in
mul
decl
jnp
push
xor
popl
icebp
cmp
adc
cs
mov
aas
adc
pop
mov
ljmp
pop
lock
pop
xor
rol
stc
cltd
loop
pop
hlt
push
mov
decb
ret
imul
fisttpll
das
rcrl
outsl
loope
pop
aam
jmp
out
incl
sub
fdivrs
mov
cld
sub
jecxz
mov
inc
ljmp
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
