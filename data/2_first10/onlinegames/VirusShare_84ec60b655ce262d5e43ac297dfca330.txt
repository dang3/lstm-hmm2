fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
cmp
cmp
arpl
and
pop
sbb
xor
sub
imull
andl
andb
out
std
loopne
mov
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
pop
or
test
sbb
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
sbb
loope
sbb
movsl
adc
ss
mov
jecxz
pop
in
adc
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
push
test
jo
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
fwait
jmp
push
jno
dec
inc
imul
xor
xor
pop
ja
mov
pop
je
or
sub
lods
fnstsw
inc
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
or
gs
adc
cmp
cwtl
fstps
adc
aas
xor
enter
daa
sbb
fimuls
loopne
or
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
pop
pop
add
adc
xabort
in
les
out
inc
pop
or
jbe
mov
ret
in
inc
mov
cmp
subb
pop
or
ja
mov
daa
cwtl
pop
les
adc
mov
js
cmpl
inc
mov
pop
and
dec
shlb
add
std
add
arpl
mov
sbb
jge
ja
repz
lea
andb
rolb
lea
sahf
iret
out
stos
mov
loopne
adc
mov
add
xor
test
jecxz
push
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
jbe
les
push
xor
lret
test
xor
scas
jbe
mov
xlat
inc
into
xor
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
sbb
arpl
xchg
sar
out
enter
jmp
ja
leave
imul
fs
int3
je
imul
rorb
int3
clc
insl
mov
push
cltd
pop
flds
sti
adc
sti
cld
mov
sbb
sti
fcomp
xchg
int
cld
std
dec
push
mov
xor
xchg
mov
dec
mov
cld
mov
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
cwtl
mov
adc
call
lods
test
scas
mov
shrb
loope
or
jae
push
ss
dec
xchg
insb
les
fisubl
neg
cwtl
mov
ss
and
push
neg
fwait
pop
fs
mov
clc
je
jae
cwtl
shlb
sti
mov
into
bound
xor
jg
imul
idivl
fisttpll
mov
test
fldcw
xor
push
xor
mov
je
clc
add
clc
lods
jbe
popf
lea
adcl
jnp
aaa
movsb
pushf
or
insl
mov
mov
mov
call
push
bound
mov
clc
xchg
and
test
sar
jb
iret
sar
clc
sar
mov
push
push
mov
or
xchg
outsl
jbe
push
adc
cmp
cmp
popf
push
cmpsb
imul
insl
nop
gs
out
and
push
add
call
adcl
hlt
cmp
negl
xchg
shll
xchg
xor
and
hlt
fs
mull
or
sbb
xchg
cmp
aaa
gs
adc
ret
loopne
dec
dec
scas
cli
mov
jle
subl
and
jne
int3
add
or
pushf
sbb
push
cmp
lea
adc
jmp
in
adc
sub
mov
or
loope
or
push
fadds
inc
faddp
dec
movsb
inc
cmpsb
in
adc
mov
rclb
mov
sbb
or
push
dec
inc
dec
dec
in
test
push
dec
inc
dec
and
aam
inc
push
dec
cs
outsl
lds
or
push
sub
subl
add
and
add
push
add
add
enter
nop
add
enter
mov
inc
loopne
push
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
imul
mov
mov
mov
ljmp
dec
repz
xchg
outsl
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
popf
std
gs
and
add
or
cld
pop
sub
pop
adc
add
lret
xchg
pushf
push
add
push
xor
jnp
cmp
pop
push
add
fnstcw
dec
call
popl
mov
add
push
fsubrs
bound
add
jae
inc
adc
cmp
frndint
shrb
popa
je
rclb
adc
fdivs
gs
outsl
arpl
inc
and
sbb
inc
ljmp
in
push
mov
in
xchg
movsb
xor
shll
in
add
imul
imul
imul
cmpsb
jmp
sbb
cs
pop
shll
fs
inc
imul
add
js
pop
outsb
xor
inc
mov
push
xor
daa
and
pop
rcr
pop
and
and
mov
push
idivb
rorb
inc
in
fs
add
xor
mov
hlt
fdivrl
and
filds
and
adc
and
adc
lahf
add
cmp
lahf
add
and
inc
and
adc
and
cmp
add
inc
out
stc
test
enter
fdivs
and
adc
add
inc
sahf
nop
dec
movsb
and
adc
add
inc
or
aaa
sub
dec
inc
ja
push
sub
sbb
mov
fmull
leave
add
lcall
fdivrs
adc
push
popa
mov
jge
divl
push
pop
jmp
adc
mov
pcmpgtd
mov
add
orl
pop
rcr
loopne
lea
mov
mov
xchg
arpl
decb
ret
and
or
je
into
flds
pusha
mov
and
xchg
push
inc
fs
adc
jbe
mov
or
push
mov
inc
ja
pop
sub
pop
pop
leave
xchg
icebp
sub
out
andb
inc
cmpsl
xchg
push
clc
std
jae
arpl
loop
ret
pop
stos
xor
mov
xor
outsb
xchg
xchg
dec
sub
push
enter
xchg
clc
mov
or
call
adc
std
push
insb
pop
adc
adc
ds
addb
adc
adc
push
and
jecxz
xor
test
add
cmp
jl
or
shr
or
push
mov
push
idiv
mov
int3
insb
outsl
enter
jnp
icebp
cmpsb
sti
jle
addr16
mov
xchg
pop
pushf
mov
arpl
dec
jne
pop
call
sub
dec
ja
push
jmp
inc
inc
loope
cmp
or
loope
sbb
mov
test
dec
mov
pop
mov
xchg
sbb
cmp
cmp
add
mov
addl
xorb
mov
outsb
mov
sub
ror
push
hlt
push
inc
lock
sbb
dec
jno
neg
pop
repnz
mov
data16
shll
xor
incb
add
sub
adc
or
cmp
movl
neg
pop
sbb
dec
mov
or
add
out
inc
mov
push
mov
xchg
fsubr
into
xor
mov
add
cs
push
sbb
call
jmp
mov
test
aam
or
call
pusha
jecxz
rolb
cmp
fisubs
pop
add
adc
or
hlt
or
jb
adc
jl
fcomp
dec
out
out
int3
jg,pt
or
cmp
insb
mov
cmp
cmp
scas
outsl
mov
mov
or
ss
mov
testl
pop
push
mov
cmp
jo
lds
jnp
ret
push
pusha
push
mov
push
mov
cmc
enter
add
mov
lret
gs
insb
jb
mov
lret
gs
gs
cs
fisttpl
cltd
mov
xor
ja
imul
pop
fcmovnu
frstor
sub
push
rcll
loopne
loope
jecxz
ret
in
cld
mov
movsb
sti
in
adcb
add
sbb
cmp
inc
call
add
push
or
in
cwtl
pop
add
and
push
jmp
sub
scas
sbb
mov
call
mov
mov
push
shr
stc
sub
cs
insl
jmp
add
mov
vmwrite
cmc
das
popf
mov
add
cmpl
fbstp
dec
cmp
cmp
or
dec
daa
rcrl
sub
xchg
outsb
mov
mov
inc
cmp
jl
je
fiaddl
inc
cmp
sub
cmpb
js
pushl
mov
daa
cmpl
jb
dec
or
leave
je
add
jp
iret
push
aas
or
add
mov
push
popf
or
fisttps
ret
fbstp
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
add
cld
test
rolb
cld
jge
mov
add
sbb
cltd
mov
adc
mov
mov
mov
lods
inc
cmpl
fisttpl
add
cmpl
std
outsb
dec
mov
gs
and
lea
shr
shlb
mov
mov
mov
jne
daa
add
ljmp
shlb
cli
add
push
or
adc
xchg
mov
lar
data16
lock
jne
or
not
push
sub
add
aad
outsl
or
shl
or
cmpsl
xchg
xor
adc
in
cmp
clc
inc
mov
mov
std
sbb
xchg
add
jmp
add
imul
push
repz
jbe
push
mov
mov
dec
xorb
and
adc
outsb
inc
or
popf
mov
add
lcall
fcomip
and
mov
pushl
add
push
scas
clc
add
fildl
and
sub
sbb
mov
pop
or
push
mov
mov
jl
je
dec
push
sbb
andl
jle
sbb
icebp
test
call
call
int3
insb
aaa
pop
adc
lcall
xor
push
add
adc
pop
fwait
nop
pop
xor
inc
pop
or
mov
cmp
push
out
imul
xor
and
int3
mov
or
push
xorl
push
mov
dec
sti
lea
mov
or
inc
testb
je
ficompl
pop
inc
sub
icebp
insb
push
sbb
or
adc
xor
sti
gs
int
insl
push
mov
loopne
pushf
cld
inc
xchg
test
push
push
xchg
mov
mov
add
lock
lcall
or
sti
inc
test
lahf
cmp
nop
sbb
dec
jnp
jmp
ss
mov
and
or
subb
mov
jo
lret
mov
insb
outsl
jb
jb
das
lret
mov
gs
je
push
sahf
add
data16
mov
and
pop
pop
push
sbb
cld
or
loopne
clc
or
or
jl
mov
mov
mov
add
ret
movsl
pop
imul
fs
mov
lret
jne
push
in
and
leave
rcrb
scas
pop
adc
jg
dec
arpl
mov
or
cvtps2pd
mov
adc
and
mov
je
popf
xchg
mov
aas
les
enter
xchg
add
mov
xor
mov
cs
adc
cs
arpl
or
inc
sbb
int3
stos
push
pop
pop
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
ljmp
call
outsl
arpl
fs
jne
add
fs
imul
jg
jns
and
fs
inc
pop
fdiv
sarl
popa
insl
gs
xor
ja
mov
popa
je
and
insl
xorl
cvtps2pi
add
outsb
mov
mov
add
or
jb
sub
mov
jle
test
push
or
inc
ds
js
nop
add
imul
jb
sub
dec
bound
arpl
mov
gs
outsl
add
jae
sub
orb
adc
addb
imul
push
add
lea
xchg
dec
jo
mov
mov
push
xchg
outsl
ja
inc
xor
mov
test
mov
jne
mov
sti
mov
pcmpeqb
and
insb
mov
pusha
push
das
dec
outsb
add
push
pushw
gs
jge
xor
pop
jo
ret
or
imul
dec
fwait
bound
pop
push
js
xor
inc
int
orb
inc
sub
push
outsl
outsl
insb
dec
mov
sbb
popa
jo
push
push
ret
inc
popf
dec
push
orl
ja
add
out
cmp
mov
push
dec
inc
push
dec
inc
es
mov
lods
add
jo
pop
retw
push
push
mov
packssdw
pop
pop
add
jne
or
pop
mov
mov
outsb
sbb
outsl
adc
push
jo
pop
inc
push
xor
sti
shll
arpl
popa
jge
sub
rolb
mov
dec
outsb
data16
xchg
mov
movsl
add
add
std
outsb
aaa
insb
fstpt
inc
arpl
jo
inc
popa
arpl
fcmovbe
sub
push
inc
inc
push
mov
add
or
xchg
mov
sub
push
cltd
add
insl
popf
insl
ret
sbb
lds
ret
or
pop
inc
arpl
adc
ja
xor
dec
stos
and
jno
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
call
out
psubq
and
add
add
incl
mov
shlb
daa
repnz
jnp
add
clc
add
add
cmp
cld
xor
add
nop
sbb
add
mov
loopne
mov
fdivrs
ja
test
add
add
popl
and
push
shr
pushf
lret
pop
sbb
pop
cmc
dec
mov
fsubs
pop
addl
cld
sbbl
xchg
rorb
fldt
or
cmpsb
out
scas
add
into
fwait
cmpsb
imul
shll
add
fdivrl
imul
add
fs
pushf
fwait
cmpsb
imul
dec
shrl
xor
push
push
je
sarl
and
xor
mov
lret
cmpsb
imul
and
lcall
xchg
imul
adc
popf
addl
out
test
dec
shll
pushf
test
dec
shrl
sub
add
inc
push
pop
lcall
data16
push
sub
scas
imul
dec
shll
jbe
dec
shll
mov
xor
fsub
in
idivb
mov
mov
add
push
inc
cmp
dec
fwait
cmpsb
ret
lods
ficoms
sbbb
fwait
sbb
rclb
cmpsb
jmp
test
fsubr
mov
ja
addb
outsl
ja
aaa
add
push
cmpl
add
xchg
and
in
sbb
jne
jns
inc
aaa
out
jge
aad
std
adc
mov
push
adc
dec
add
popa
scas
and
inc
fldcw
add
add
inc
jb
add
and
dec
shll
sbb
pusha
add
inc
add
add
and
mov
enter
add
lret
ret
sbb
inc
fdivr
and
and
pop
fldenv
popa
fadds
shlb
ja
aas
xchg
adc
mov
sub
or
shr
add
add
pop
adc
pop
fadds
dec
inc
fldcw
sbb
inc
xor
xchg
pop
and
sub
add
andl
ret
push
cs
pop
das
push
sbb
xor
adc
mov
xor
or
imul
mov
dec
ja
adc
je
arpl
punpcklwd
pop
inc
or
push
gs
pop
sarb
push
inc
jb
push
and
ja
addr16
testb
push
jae
and
addr16
or
in
xor
push
sbb
inc
mov
repnz
add
pop
cs
add
lret
jb
arpl
or
push
push
inc
push
inc
dec
adc
dec
hlt
and
outsl
data16
dec
push
adc
push
sub
inc
fcomip
aaa
xor
inc
popa
jb
push
aas
dec
movsl
pop
xor
mov
pop
dec
push
push
sbb
inc
add
sub
push
mov
xchg
xor
aaa
mov
je
gs
jo
cmpsb
mov
adc
inc
jg
and
popa
jne
arpl
movsb
fbstp
js
mov
add
imul
mov
lock
cmp
mov
xor
xor
xor
imul
outsl
push
pshufw
xchg
imul
arpl
addr16
addr16
xlat
push
inc
pop
arpl
ja
mov
xor
mov
xor
pop
jbe
sub
sahf
cld
clc
shl
das
lret
pop
into
in
std
test
sarb
or
insb
popa
push
insb
popa
jnp
cs
or
push
dec
lock
jno
add
mov
dec
pop
jo
mov
mov
dec
loope
dec
movsl
push
push
fisttps
xor
jns
fistpl
fidivrl
daa
fiadds
setle
xchg
fcompl
mov
ss
cmc
leave
in
xchg
pop
stc
pop
inc
pop
dec
pop
pop
pop
jb
or
adc
add
mov
dec
cli
sub
mov
add
xchg
arpl
lock
add
mov
loope
das
push
mov
inc
rcr
add
xor
movb
xor
movb
mov
std
add
push
push
push
call
pop
gs
ret
test
ds
add
inc
adc
sub
lcall
sbb
add
mov
add
push
add
xchg
in
add
movb
in
jbe
sub
sub
push
add
mov
inc
inc
call
pushl
in
mov
inc
pop
ret
mov
dec
shrb
cwtl
push
loop
sarb
or
sbb
pop
inc
cwtl
mov
xor
mov
mov
and
mov
push
movzbl
mov
je
js
adc
in
mov
jne
mov
andb
mov
or
jg
mov
gs
pop
cmp
pop
jl
xchg
icebp
or
dec
dec
pop
fs
jg
test
xor
adc
xor
adc
adc
adc
adc
xchg
pop
enter
adc
adc
adc
adc
ds
mov
add
icebp
inc
jb
rolb
push
sbb
add
mov
inc
cld
push
test
ret
cmpw
mov
sub
cmpl
ret
repnz
xchg
push
mov
xor
cmovb
inc
xor
sbb
fwait
andl
and
or
inc
leave
adc
cmp
outsb
in
mov
dec
sub
je
jmp
cmp
je
adc
mov
adc
pop
cmp
ja
jge
add
or
jae
repnz
or
adc
cmp
out
loope
jmp
cmp
jb
sub
je
addl
or
dec
sbb
cmpsb
inc
popa
xchg
mov
or
sbb
cmpsb
fucomip
adc
jb
mov
cltd
lods
inc
xchg
pusha
push
mov
mov
sub
add
push
pop
fiadds
movsb
mov
cmp
mov
pop
xor
insb
mov
adc
push
dec
push
gs
scas
jge
add
add
jge
push
sub
call
adc
and
push
ds
mov
add
ret
dec
negl
pop
das
lahf
sub
into
sub
cmp
sti
and
add
rcr
push
sub
ret
fcmovu
push
sub
out
xor
mov
push
pop
sbb
fmuls
insl
pop
push
jnp
ss
fstl
sbb
cwtl
push
mov
in
jge
movsl
add
xchg
or
movsl
movsb
sbb
into
fdivrs
push
mov
pop
mov
rep
xchg
cmpsb
xchg
flds
jns
shlb
jge
mov
mov
pop
dec
fcompl
add
pop
mov
push
aad
xor
pushf
leave
test
mov
lea
cmpsb
pop
adc
clc
call
or
and
scas
paddusb
loope
xchg
mov
mov
mov
sub
sub
jbe
adc
call
mov
jne
faddl
hlt
enter
jp
inc
inc
inc
cmp
pop
jb
mov
inc
daa
pop
push
pusha
jae
aaa
fiadds
rorl
mov
adc
adc
andw
mov
fstl
push
dec
cld
pop
jb
xor
cmp
sub
mov
sub
push
fimull
ss
push
or
cli
pop
adc
mov
jne
fsubrs
in
mov
cmp
or
lea
cmp
jne
loopne
and
push
mov
lahf
mulb
mov
fisubrs
mov
push
inc
push
pop
cld
call
es
or
out
pop
xor
lsl
push
jo
loope
mov
or
push
andb
cmp
dec
xor
dec
or
clc
out
and
test
cmpsl
push
xor
adc
add
mov
daa
xchg
add
clc
xor
pushf
nop
xor
insb
xor
jns
xchg
xorb
nop
sbb
sbb
add
or
add
adc
mov
fs
pop
mov
pop
jb
xchg
xor
mov
in
cld
and
fcoms
add
pop
pop
mov
push
xor
mov
cmp
leave
shlb
outsl
sti
add
shlb
add
push
je
mov
or
push
stos
fsubs
mov
jb
out
aaa
push
jmp
adc
mov
add
sbb
call
add
pusha
ret
push
push
xchg
bound
or
jge
pop
inc
idiv
adc
jg
sbb
adc
jmp
andb
push
add
cs
andl
enter
mov
lods
xor
adc
xor
adc
jmp
mov
push
call
repnz
fcoml
add
movsb
xor
adc
mov
test
adc
xor
cmp
inc
mov
mov
fimull
das
cld
int
pop
clc
fs
ja
xor
mov
cmpb
xchg
pop
shufps
or
jg
adc
icebp
mov
imul
add
sbbl
pop
ljmp
inc
sub
cmpsl
imul
adc
and
fadd
jbe
push
add
icebp
inc
pop
cli
mov
jge
lock
mov
roll
cmp
dec
stos
loopne
cmp
jae
incl
lret
shr
add
aad
dec
inc
dec
insb
pop
inc
push
mov
mov
mov
mov
jne
ret
adc
sbb
fistpll
pop
mov
mov
add
loop
or
adc
or
jne
xor
or
pushf
push
add
sub
stos
pop
xchg
stos
add
call
incl
je
das
pop
jbe
or
clc
mov
not
and
mov
imul
adc
repz
add
lea
or
shr
mov
xchg
jo
add
repnz
not
and
loopne
jg
testl
mov
arpl
shr
or
out
push
js
repnz
aam
in
test
or
fisubs
fimull
add
out
das
call
lea
shr
shl
push
pop
inc
ja
in
sub
mov
and
not
cmp
add
mov
mov
mov
shr
or
out
repz
dec
daa
pop
jg
push
add
xchg
sbb
mov
push
lods
loop
outsl
or
add
hlt
mov
not
fmull
in
and
sub
and
insl
mov
inc
mov
fidivl
ret
inc
in
add
lods
fiaddl
mov
mov
adc
call
scas
roll
mov
in
sub
sbbb
fisubrl
xor
add
add
xor
and
cli
sbb
and
les
repz
fcomp
lret
lret
cwtl
subb
addl
repz
not
test
sbb
das
pusha
adc
jae
fdivr
pop
scas
testl
cmpsb
insl
js
negb
sub
pop
cmp
loop
movups
mov
int
in
add
xlat
pop
mov
adc
push
pop
mov
fwait
outsl
xor
les
adc
push
jns
xor
or
or
mov
jno
std
stos
lods
test
sub
add
and
fisubrs
mov
aad
cmp
pop
aaa
das
int
jo
push
mov
cmpsb
pop
mov
xor
dec
call
imul
inc
mov
popa
adc
push
and
mov
mov
shl
ljmp
xchg
mov
mov
imul
mulb
push
imul
sbb
shl
mov
shlb
clc
jg
cld
dec
fsubrl
jle
inc
mov
rclb
push
fadds
hlt
pop
push
daa
clc
jb
repz
repnz
icebp
adc
repnz
movsl
pusha
sbb
out
and
stos
mov
insl
and
mov
xchg
imull
mov
mov
hlt
pop
adc
call
sbb
popa
imul
mov
cmp
push
adc
add
and
in
push
repnz
pop
and
clc
cmp
jge
cli
fnstcw
in
sti
shl
jg
or
int
sub
mov
mov
out
lods
stc
out
loope
out
sbb
loopne
ret
neg
mul
inc
enter
aaa
or
mov
push
test
mov
inc
fimuls
repz
xlat
sbb
push
nop
lods
popf
cmp
or
cmp
mov
adc
inc
loop
shr
or
insb
adc
xlat
fdivs
test
imul
jbe
jl
aam
mov
pop
lods
cmp
and
sub
shrl
outsl
aad
flds
outsl
adc
push
xchg
dec
fisttps
out
cmp
or
xor
ret
fwait
in
xor
test
jmp
add
fldt
xor
mov
sahf
pop
cmpb
divb
adc
mov
fadd
and
insl
adc
inc
sti
xor
mov
repnz
fxch
fwait
enter
std
mov
fcompl
mov
inc
ljmp
jbe
pop
add
mov
fimuls
sub
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
gs
jno
cli
xor
loopne
rorb
mov
or
sub
mov
jle
sub
jo
mov
testl
cwtl
fidivrs
imul
out
ja
pop
cs
fimuls
test
imul
adc
fidivs
shll
js
pop
out
in
fs
cmp
or
push
push
clc
imul
sarb
cmp
aam
cltd
js
movsl
jae
out
jbe
les
in
mov
divl
idiv
ss
rclb
jp
jl
pop
je
lock
xor
fiadds
push
lods
les
cli
fs
imul
jge
stos
pop
fdivs
fisubs
stos
rcrb
sbb
push
or
loope
ss
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
lea
test
stos
shrb
and
adc
lock
pop
jns
push
hlt
cmp
adc
xor
fs
clc
into
aas
cmp
pop
pop
gs
sbb
fisubrs
outsb
rcrl
int3
or
lcall
ja
jns
mov
jno
dec
jge,pt
out
call
repz
unpckhps
sbb
je
jns
pop
test
dec
out
loopne
cmp
jg
call
outsl
sub
ss
jp
sbb
int
dec
scas
xorb
fistpl
loopne
sub
or
dec
outsb
jecxz
jp
ret
mov
ljmp
fdivl
out
stc
pop
mov
cmpb
arpl
test
sbb
in
dec
mov
xor
out
loopne
in
cmpsb
fsubs
ret
rorb
adc
repnz
repz
aaa
pop
pop
rclb
xor
lret
mov
jge
xlat
pop
add
pop
lods
fnsave
movsb
mov
inc
or
or
dec
rcrb
mov
insl
inc
mov
cmp
push
outsl
enter
cmpb
sarl
js
sub
push
push
mov
adc
push
je
imulb
xchg
test
push
xlat
push
insb
js
mov
xlat
ljmp
jle
arpl
inc
pop
inc
test
nop
iret
pop
pop
mov
insl
fbstp
into
ljmp
add
add
push
dec
jne
xchg
roll
adc
sbb
sub
cmp
push
xor
stos
dec
sti
dec
push
cld
pop
and
sub
cld
call
sub
mov
lea
aaa
mov
lahf
sahf
je
inc
add
cmp
out
or
testb
mov
fstl
ficoml
xlat
call
clc
pop
adc
cmp
mov
jnp
int3
lret
mov
lcall
add
fadds
fnstsw
xchg
jmp
es
adc
imul
mov
or
lahf
iret
out
call
gs
das
lock
repz
bnd
hlt
gs
divl
add
mov
pushf
or
or
test
js
neg
pop
psubsb
dec
add
and
and
mov
orl
dec
and
mov
lods
outsb
les
mov
addr16
or
pop
ljmp
fsub
call
stos
or
adc
xchg
push
dec
adc
mov
faddl
in
dec
out
push
out
push
rorb
mov
pop
repz
dec
mov
sahf
pusha
xor
push
cmp
mov
stos
sbb
mov
mov
mov
lods
dec
mov
sbb
inc
test
mov
mov
mov
roll
inc
ljmp
sub
adc
cmc
mov
lret
push
push
insb
adc
flds
fs
stc
decb
sarb
ret
pusha
daa
mov
xor
sub
pop
sub
sub
mov
push
cwtl
adc
push
adc
pop
stos
push
outsb
adc
notb
push
mov
or
je
push
dec
les
jns
cmp
pop
mov
psadbw
or
sbb
push
mov
inc
jge
or
and
push
clc
ficoms
outsl
push
mov
and
jmp
cmp
mov
cmp
je
dec
dec
cmpw
jne
inc
sti
mov
mov
cmp
je
add
mov
push
cmp
in
xor
mov
and
insb
xchg
gs
mov
push
aad
xor
sbb
aad
jbe
cmp
aam
xchg
movl
in
add
mov
je
xchg
cmp
testb
jl
mov
cmp
je
cmp
jne
push
insb
int
testl
jbe
lods
push
or
enter
jbe
ja
loopne
leave
adc
out
adc
shlb
xchg
add
pop
rcl
loopne,pt
cmp
inc
std
or
movq
cmp
rcrb
push
inc
pusha
cmp
adcb
sub
inc
lods
adc
add
xchg
sbb
xchg
insl
sub
xchg
insb
test
stos
in
mov
mov
xor
mov
sbb
cs
xchg
in
sbb
push
nop
mov
or
adc
mov
ficoms
mov
jg
and
push
or
outsl
mov
or
mov
push
jbe
pop
cmpsl
dec
cmp
mov
pop
ret
std
sub
sub
mov
fsubrl
add
insb
cmp
xchg
and
imul
inc
mov
fsubl
lds
add
lods
std
and
ret
xor
data16
int
cld
loopne
mov
clc
cmp
and
pushf
push
mov
or
rcrl
jg
dec
je
cmp
mov
mov
adc
test
scas
or
lods
insl
push
cmp
jae
xor
jo
mov
jnp
push
push
pop
dec
mov
aaa
bound
stos
sbb
pop
mov
in
outsl
scas
cmp
cmp
sbb
out
dec
outsl
pop
pop
call
call
mov
inc
push
dec
inc
fmull
add
loope
xchg
or
mov
lcall
fidivl
push
jmp
movsb
mov
orb
push
jmp
cs
and
jo
fwait
test
ljmp
jnp
adc
mov
hlt
pusha
sti
jb
push
sub
push
arpl
xor
mov
data16
lods
push
insl
mov
in
mov
ja
cmp
mov
mov
mov
mov
mov
mov
mov
mov
xchg
gs
dec
fstps
js
pop
xchg
gs
insb
outsl
jb
jb
insl
lcall
gs
insl
xlat
insb
pop
bound
loope
gs
pop
mov
in
push
out
dec
out
call
jmp
insl
jae
int
dec
shll
outsb
je
fwait
rol
sub
imul
xor
mov
lcall
cmp
int3
hlt
cmpsb
jmp
in
push
xchg
xchg
mov
insb
fwait
cltd
lcall
mov
ss
mov
mov
insb
fwait
in
inc
mov
cmpsb
xor
insb
test
push
test
xlat
xor
ds
hlt
cli
jns
orl
cmp
cmp
push
add
push
shlb
inc
int3
mov
pop
xor
shlb
aaa
mov
sbb
inc
in
add
cmp
pop
dec
int3
jmp
js
pop
mov
cmp
in
pop
xor
aaa
push
dec
scas
or
pop
dec
sub
dec
xchg
rolb
fldcw
cmp
sti
inc
jno
jnp
enter
pushf
in
out
or
sbbl
jg
lcall
rcl
mov
push
lcall
ds
pop
sub
push
nop
shl
and
add
xchg
imul
fcoml
pop
cli
inc
ret
scas
sub
scas
sbb
fwait
je
push
push
inc
sub
sbb
and
xor
mov
les
loop
in
ret
jmp
xor
movsb
in
jne
nop
repnz
orb
hlt
cli
call
aad
xor
in
cld
cmp
cmp
test
xchg
loope
sbb
push
xchg
mov
out
repz
push
pop
add
ja
loop
int3
imul
into
insl
imulb
add
jnp
cld
mov
pushf
gs
jnp
loopne
inc
adc
and
test
notb
jo
mov
lret
sub
or
sub
xor
es
outsb
mov
adc
sub
sbb
mov
data16
add
jl
ret
pusha
add
jmp
sarl
lock
inc
adc
in
cmp
in
sbb
addr16
pop
pushf
fs
jl
jns
push
sbb
bound
ja
cmp
push
add
adc
enter
pop
adc
les
cmc
push
out
cmpl
ljmp
fucomi
fldenv
int
fs
in
pop
hlt
cmp
cmc
addr16
aam
cmp
sarb
inc
push
push
cmp
cmp
iret
and
push
cld
xor
sti
cmp
mov
cld
cmpb
mov
jae
lods
mov
inc
and
cs
push
adc
cld
ror
outsb
insb
mov
adc
stos
xor
push
movsb
data16
popf
xor
mov
sub
fwait
adc
add
and
loope
and
push
and
pop
mov
xlat
mov
scas
sub
lock
fs
loope
push
xor
push
push
cmp
inc
mov
icebp
mov
push
adc
or
adc
pop
or
xor
adc
arpl
aad
jo
ret
cmp
push
inc
adc
fwait
or
outsb
or
xchg
sub
dec
outsl
jp
lcall
popa
push
dec
sub
cmpsb
imul
fnstenv
int
fcmovnu
ja
fildl
fstp
jae
xor
or
xor
mov
and
jae
xor
lcall
insl
icebp
ljmp
scas
fstps
mov
add
int
mov
mov
dec
mov
outsb
movb
pop
xor
enter
pop
lret
pop
xchg
gs
popa
js
push
outsb
xor
pop
inc
jb
shlb
icebp
repnz
adc
push
adc
lock
shl
pop
in
rcrb
push
sbb
or
mov
or
xchg
pop
push
gs
es
push
hlt
dec
add
nop
mov
in
sub
int
in
lock
jmp
loop
test
lahf
inc
daa
adc
imul
je
imul
outsl
ja
scas
lods
loopne
jne
or
fnstenv
pushl
push
shrl
mov
out
or
sub
out
call
push
rcll
movsl
ljmp
jo
roll
ret
or
ficoml
add
out
cmp
rclb
or
leave
cmp
push
out
addb
pusha
add
loopne
in
fistpll
push
or
ret
lock
in
imul
jge
or
lds
and
imul
push
mov
xchg
fcoml
sbb
hlt
in
adc
lret
pop
push
push
jle
sub
out
push
sub
insl
pop
push
adc
dec
in
push
or
xor
shl
sbb
and
jmp
cmpb
and
xor
call
push
adc
mov
imul
lock
out
mov
jge
push
movsl
movsb
cmp
hlt
push
fldl
push
adcl
adc
add
push
adc
adc
adc
test
test
jo
push
push
pop
add
inc
movzbl
fstl
clc
div
or
inc
aas
fcoms
and
and
or
or
test
cld
and
outsb
ret
adc
out
add
lret
pusha
mov
fwait
push
sub
cmpsb
dec
jo
insb
lret
in
fs
xor
imul
je
xchg
fs
insb
repz
gs
push
dec
je
test
popa
jo
dec
rcl
je
gs
dec
dec
sbb
outsb
outsw
ret
pop
inc
inc
shrb
cmpsl
cs
icebp
jne
add
xor
and
sbb
xchg
jae
mov
fcom
or
test
dec
push
dec
xor
and
inc
xchg
or
xchg
ds
addr16
adc
mov
mov
call
xchg
mov
imul
pop
add
push
sbb
cmc
xchg
fnstcw
sub
fdivrs
insl
pushf
or
inc
in
sub
in
test
sbb
mov
cmp
das
loop
mov
cwtl
sub
hlt
imul
jle
cmp
push
push
push
aaa
stc
cmpb
cmp
lret
data16
fsts
data16
adc
int
popf
cld
pop
cmpsl
xchg
xchg
dec
pop
mov
mov
push
mov
and
lea
sub
fnsave
sbb
addb
fimull
or
sbb
cmp
divb
pop
or
popa
cwtl
push
mov
mov
test
dec
ss
add
fdivl
push
xchg
pop
push
in
push
imulb
in
negb
lock
cmp
or
push
cmp
adc
add
imul
orl
mov
fdivrl
rcrb
imul
fs
jl
mov
add
push
push
js
pop
pop
and
call
xchg
mov
sbb
jecxz
mov
adc
or
jmp
xchg
sbb
add
std
sub
xchg
std
xchg
sti
aas
xchg
sti
adc
enter
mov
lods
stos
pop
mov
fiadds
or
shlb
add
cmp
adc
in
pop
mov
pushl
or
jmp
pop
sbb
aas
mov
inc
sub
out
and
fmuls
add
cs
or
popa
cmp
jae
pop
mov
pushf
es
sahf
adc
shll
movsl
shll
cmpsb
cmpsb
cmpsl
jo
test
bound
cmp
and
dec
cmpsb
imul
imul
cmpsb
imul
and
cmpsb
imul
scas
imul
jae
shr
mov
adc
or
pop
mov
lcall
dec
shll
imul
or
outsb
xor
xor
sarl
xor
roll
scas
jo
and
shll
scas
push
xor
jg
jae
inc
inc
ret
xor
and
and
mov
arpl
xchg
incb
sbb
bound
xchg
insb
mov
mov
or
add
push
ret
jbe
in
iret
and
dec
pusha
inc
xchg
or
gs
jge
mov
nop
mov
fsubs
mov
jl
lea
js
inc
mov
jo
je
sub
mov
dec
pop
into
leave
push
cmpsb
pop
rolb
repz
in
andb
jle
xchg
pop
mov
mov
xchg
adc
dec
scas
dec
sbb
scas
rcll
outsb
jle
stos
idivb
ljmp
js
or
mov
call
pcmpeqw
push
push
pushf
and
les
mov
push
cmp
cli
push
adc
lock
call
mov
sbb
push
push
imul
inc
xor
adc
push
cmp
mov
mov
outsb
inc
divb
adc
inc
icebp
pop
sub
test
jns
and
adc
jnp
popf
push
mov
xor
dec
pop
fildl
xor
mov
out
lea
adc
orb
iret
pop
push
sub
daa
fs
cmp
aas
in
xor
pusha
lds
popf
les
mov
pop
stos
clc
xchg
sub
pop
xchg
gs
rcl
fcomp
in
filds
jge
call
dec
push
mov
rcr
push
dec
xchg
jecxz
es
xor
inc
mov
daa
jbe
cld
inc
clc
or
inc
jecxz
data16
jbe
mov
xor
les
xor
or
fs
cmp
test
inc
test
call
mov
push
jl
nop
sbb
movsl
push
xlat
pop
cltd
mov
idiv
push
jle
loope
lock
mov
and
loope
test
sub
or
movsb
and
mov
sbb
fldt
cmpsl
ds
push
ss
lods
jnp
push
ret
add
mov
in
xchg
push
fwait
push
pop
sub
and
inc
hlt
push
xor
gs
xchg
or
dec
xchg
gs
xchg
dec
inc
push
cs
sub
push
pop
insb
in
addr16
mov
pushf
jo
insb
jne
xor
mov
cs
insb
cmp
add
pop
pop
cmovns
cmpsb
imul
imul
imul
push
lods
lods
mov
je
lcall
jo
cmpsb
imul
pop
nop
gs
roll
aam
mov
lcall
lea
jne
mov
gs
xor
push
sbb
sub
dec
rcll
cwtl
js
dec
shll
lcall
or
inc
push
fnstsw
cmp
imul
in
out
imul
fnstenv
mov
jb
mov
or
jne
jb
outsl
mov
mov
mov
arpl
mov
les
mov
inc
fcoms
adc
clc
add
pushf
add
jg
std
cld
cmp
cltd
bound
arpl
roll
and
frstor
insb
and
ljmp
inc
repnz
or
cmp
pop
lahf
lea
mov
test
pop
sbb
dec
pop
inc
xchg
das
hlt
mov
jmp
mov
push
fs
add
inc
cmpsl
imul
aam
adc
or
movsb
sbb
dec
mov
cld
repz
sbb
das
pusha
or
sbb
das
xchg
adc
inc
dec
leave
adc
jl
add
cmp
mov
fsubrs
inc
popl
pop
das
mov
inc
add
jmp
icebp
sbb
cmc
cs
cli
pop
idivb
in
add
cs
bound
sbb
adc
jbe
dec
adc
lea
pop
or
mov
call
or
fs
jbe
insl
or
ss
add
push
push
jecxz
cmp
jb
and
outsl
inc
incl
pushf
add
add
hlt
lcall
push
sahf
ja
xchg
cmpsb
imul
sub
insb
dec
jb
or
arpl
jb
sbbl
jbe
bound
mov
jo
cwtl
push
ss
pop
inc
or
mov
sbb
scas
and
xchg
js
stos
popa
mov
scas
bound
xor
cld
test
mov
jne
cs
or
add
cmp
push
mov
inc
popa
ljmp
inc
mov
add
out
inc
enterw
sub
aam
inc
shr
sub
adc
xor
mov
icebp
xor
call
push
jne
jb
ljmp
aaa
sbb
stos
mov
pop
and
loopne
popf
nop
sbb
inc
loope
sbbb
vmwrite
or
test
jmp
loopne
add
pop
xchg
popa
cltd
arpl
ret
and
outsb
cmp
shrl
je
bound
jne
and
shll
insl
bound
inc
jae
je
scas
pop
mov
andb
mov
std
std
stos
cmp
jns
xlat
dec
out
jbe
int3
sbb
std
cmpsb
imul
imul
lcall
ss
cmpsb
imul
fldcw
in
in
mov
andb
sbb
dec
inc
shll
in
movsb
add
ret
jl
pop
sub
pop
das
jne
fcomps
shlb
andb
or
and
int
shl
imul
jge
stos
stos
jg
aad
pop
jo
orb
rorl
jns
in
clc
or
add
loopne
cmp
aas
gs
xchg
gs
arpl
xor
outsb
cmp
add
adc
leave
repnz
cmp
loopne
inc
call
sbb
pop
add
push
mov
add
mov
mov
lret
mov
cmp
adc
xor
rcl
inc
cmp
fs
cld
inc
scas
push
icebp
icebp
push
and
or
sbb
dec
shrl
imul
orb
push
daa
and
arpl
je
leave
xchg
xchg
aam
aam
and
shll
in
jbe
push
in
xchg
mov
ja
call
push
ss
inc
jmp
iret
cmp
cmp
nop
mov
push
lds
xchg
ret
jo
push
push
push
xorl
aad
call
dec
jo
pop
pop
pop
div
stos
xchg
adc
fistpl
fildl
inc
add
jno
dec
sbb
mov
xor
cld
pop
adc
loopne
pop
add
pop
mov
rol
shll
daa
fwait
jecxz
or
incb
repz
loopne
push
mov
push
insb
xchg
mov
push
and
pop
shr
adc
push
pop
pop
add
pop
nop
and
push
push
pushf
sahf
in
rorb
cmp
roll
push
cmp
mov
dec
fstp
mov
mov
adc
dec
faddl
mov
inc
mov
nop
mov
jl
xor
icebp
xlat
add
fidivs
adc
add
jae
call
movsb
xor
xchg
jo
div
or
jmp
jg
std
cwtl
aaa
xchg
test
jmp
aas
pop
xchg
gs
popa
arpl
gs
xchg
outsb
cmp
gs
xchg
popa
imul
dec
shll
push
shll
mov
bound
dec
mov
mov
inc
mov
or
jo
ret
mov
xor
es
sub
int3
int
sub
jb
popa
arpl
mov
lret
outsl
outsb
cmp
lret
mov
je
outsl
jns
inc
sub
cmp
pusha
sti
xchg
sub
pop
out
imul
outsb
loop
fildl
push
std
sub
dec
xlat
xor
xchg
add
dec
jne
adc
ds
jmp
push
shr
sbb
jmp
inc
cmpsl
jmp
cwtl
jns
push
mov
add
pandn
add
mov
insb
jo
sub
push
cli
mov
xor
sbb
call
notb
fcompl
pop
add
xor
icebp
xchg
cld
clc
cmp
int3
rorb
jecxz
jg
sub
push
scas
mov
or
adcb
and
xor
mov
xchg
cli
les
lret
inc
inc
call
jb
sub
imul
daa
je
jo
outsl
pusha
leave
push
or
lods
jne
loop
push
cmp
jbe
add
dec
and
sub
sbb
sub
pop
add
js
fiaddl
sbb
xor
divl
clc
popa
imul
popa
arpl
stc
adc
pusha
outsl
popa
jb
out
pop
and
jb
push
and
ljmp
mov
out
call
insl
dec
insb
mov
lods
popa
in
mov
and
push
ret
pop
and
ss
xchg
fcoml
and
mov
xor
push
pop
je
popf
xchg
push
testb
pop
imul
insl
call
mov
aad
add
call
sbb
ljmp
adc
js
pop
mov
push
push
call
push
mov
cmp
and
adc
sqrtps
mov
mov
mov
xorl
or
cmp
jmp
ss
xlat
jl
test
push
movl
cli
cmpsl
jge
or
sbb
pop
sbb
xchg
add
subl
inc
xchg
pop
mov
cmp
push
sub
jb
add
inc
shll
xor
xor
jo
loop
in
xor
xor
out
call
insl
lret
test
std
loope,pt
movsb
adc
cmp
or
ret
out
test
push
imul
sbb
ljmp
sbb
in
cmp
mov
lock
sbb
mov
jae
frstor
fdivrp
mov
mov
push
loope
pop
loop
enter
jecxz
in
in
xlat
mov
out
cld
sub
out
pop
sub
push
or
mov
shll
popf
inc
out
adc
push
in
les
mov
mov
push
dec
repz
jo
add
call
fdivr
lea
call
push
xchg
bound
mov
mov
and
xor
in
in
or
sub
pop
inc
cltd
add
ss
cmp
fsubrs
mov
fsub
add
sbb
mov
sbb
jne
or
or
cwtl
and
in
sub
and
std
jae
insl
mov
sub
bound
add
pop
cmp
jle
mov
push
roll
neg
ja
and
inc
jl
jg
data16
adc
mov
dec
lea
push
call
lods
roll
xor
movsbl
lea
test
add
sbb
jne
or
fstpl
mov
aaa
call
and
sub
dec
dec
inc
add
mov
jae
xchg
sbb
ds
incl
mov
inc
jb
hlt
inc
cmp
stos
cmp
call
add
inc
mov
inc
push
je
or
loope
xor
out
dec
or
ret
mov
dec
add
pop
loop
pop
sbb
or
fwait
lea
push
pop
hlt
ss
mov
mov
add
add
pop
or
mov
sub
mov
cmp
rclb
stos
nop
rolb
pop
push
mov
pop
inc
sub
gs
scas
dec
or
fwait
jne
cmpsb
imul
lcall
add
out
sub
mov
andl
orb
call
push
call
pusha
cmp
jo
fcoml
sbb
call
add
call
sbb
pusha
mov
out
push
mov
ret
imul
call
pop
enter
call
movsl
mov
add
ret
orl
and
inc
inc
bound
mov
cmp
xor
push
call
push
pop
xchg
mov
xchg
add
mov
mov
mov
mov
gs
xorb
add
out
mov
adc
add
or
fsubl
push
xchg
out
adc
inc
dec
shll
adc
stos
dec
fisubrs
fildl
call
cmp
adc
dec
push
or
dec
cltd
mov
dec
mov
add
or
in
mov
sub
add
lret
in
fsts
scas
test
shlb
shl
call
or
and
fistpl
mov
dec
lahf
add
mov
insb
mov
push
movsl
add
in
in
mov
xor
mov
mov
cmp
mov
mov
xchg
dec
or
adc
or
nop
push
sub
gs
xchg
dec
or
xchg
lea
fnstenv
xchg
push
sets
leave
and
call
ss
in
push
fadds
gs
call
out
lret
fnsave
jbe
hlt
or
dec
idiv
cmp
xchg
lret
jle
sbb
mov
mov
out
push
jb
xchg
sbb
add
or
xchg
dec
es
xchg
mov
mov
out
push
out
mov
mov
dec
rorl
mov
ret
mov
xor
or
xchg
or
je
and
push
push
lock
dec
mov
fmul
push
jmp
mov
out
push
int
pop
xor
and
mov
iret
sbb
xchg
sbb
jb
stc
insl
lods
cs
push
or
mov
daa
lahf
out
sbb
loope
and
pop
push
sub
mov
into
sub
jns
mov
xchg
fisttps
and
movb
pushf
je
cmp
inc
sbb
mov
nop
bound
sbbb
inc
orb
ds
or
cmp
pusha
loop
and
mov
fimull
pop
imul
xorl
sti
jne
push
fcompl
orl
movsb
pop
mov
xor
mov
mov
adc
adc
dec
add
or
loop
cmp
push
data16
aaa
call
arpl
pop
jg
add
pop
adc
dec
mov
jmp
gs
imul
pop
cmpsb
testl
outsb
sbb
subb
dec
cld
jmp
int
aam
popl
mov
insb
test
or
adc
popa
and
fistl
inc
push
mov
sbb
fdivrl
adc
arpl
enter
adc
or
and
mov
stos
xchg
pusha
clc
pusha
movb
dec
cli
pusha
leave
mov
mov
push
das
sbb
add
cmp
nop
push
add
push
xchg
push
mov
jne
arpl
stos
push
dec
push
push
movl
pop
mov
mov
lcall
ret
xor
icebp
fwait
mov
jl
jp
lds
mov
or
shll
push
mov
mov
arpl
push
mov
and
js
addr16
add
mov
imul
aas
cs
call
cmp
pop
lret
scas
push
aas
ljmp
adc
cli
pop
push
call
xchg
cltd
js
sub
clc
jle
mov
push
call
xor
push
les
clc
sbb
mov
adc
xchg
pop
mov
push
pop
lret
inc
stos
and
push
sbb
js
fistpl
push
mov
pop
jnp
je
lahf
mov
jne
sub
xchg
lods
pop
mov
fs
adc
in
outsb
mov
xor
test
and
insb
jb
aas
mov
neg
fstps
push
fs
mov
adc
push
ss
pushf
mov
mov
xchg
add
dec
int3
add
dec
cmpsb
jb
std
sub
movsl
adc
dec
mov
call
scas
out
leave
mov
mov
xchg
imul
frstor
mov
es
or
in
jo
sub
daa
mov
stos
rcrl
pop
cwtl
aaa
testb
cmpsl
push
jmp
mov
fdivrl
sbb
or
in
pop
adc
and
fsts
dec
mov
fdivl
push
push
movsb
adc
mov
je
dec
dec
daa
dec
jne
cmp
jle
cs
pop
jmp
adc
sbb
adc
mov
push
dec
mov
lret
into
mov
shl
push
push
dec
fistps
cmp
push
rorb
aam
sub
mov
fwait
jns
lock
add
les
enter
pop
sbb
mov
mov
js
and
jne
test
mov
mov
jecxz
xchg
mov
dec
ret
icebp
pop
pop
add
add
mov
out
and
lret
mov
push
push
ss
and
ss
sub
cmp
push
andb
cmp
xlat
int3
fiaddl
sub
xor
sbb
loopne
push
cmp
xor
or
or
or
lock
jle
xchg
sub
cmp
jae
hlt
sbb
scas
outsb
adc
jnp
int3
mov
adc
mov
xchg
or
insb
push
push
jne
out
sbb
lret
in
outsb
dec
dec
adc
fistpll
adc
pop
sub
push
or
into
mov
sbb
lock
pop
sbb
add
daa
push
lcall
adc
and
loop
xor
pop
movsl
jbe
in
decb
sarl
sbb
movsb
push
leave
ss
lea
pushf
enter
mov
mov
or
leave
mov
cmpb
in
movsl
push
stc
cmp
ljmp
adc
add
je
mov
sub
je
sti
and
sbb
add
cmp
push
cs
sub
sub
adc
adc
scas
je
aaa
add
jne
mov
jg
ret
lret
jmp
shr
add
pop
lea
inc
cmp
mov
call
in
and
bound
cld
pusha
pop
icebp
jmp
cmp
popf
mov
out
fcoms
lret
jl
mov
mov
js
ja
dec
sub
pmulhw
xchg
dec
push
int3
sub
jb
push
push
or
cld
ret
stos
push
add
push
mov
adc
add
repz
push
sbb
adc
int
iret
imul
and
mov
out
rorl
imul
cmpsl
and
adc
adc
fcomp
sbbl
xor
xor
cmp
ret
sbb
mov
in
call
inc
push
mov
mov
pop
sub
adc
inc
dec
shll
lods
inc
outsl
outsb
data16
mov
inc
imul
mov
xor
dec
out
rclb
add
adc
jbe
or
addps
jp
je
scas
add
mov
xchg
scas
mov
in
inc
push
or
or
ss
adc
push
dec
or
jae
addr16
pushf
in
pop
enter
out
rcl
jle
cmp
je
cmp
fstp
push
mov
es
in
push
data16
adc
fcoml
sbb
mov
adc
push
sub
andl
cmpsl
data16
pop
pop
imull
jo
je
orb
add
loopne
mov
cld
dec
push
mov
dec
shrl
jmp
mov
lea
pop
std
aas
cmp
std
call
xor
mov
mov
mov
add
adc
push
mov
cmpsl
enter
pop
fwait
mov
mov
movsl
inc
add
inc
and
aam
fsubrp
xor
popa
mov
add
push
imul
xlat
sub
push
cmp
or
xchg
or
and
sub
scas
mov
stos
ljmp
add
aaa
adc
or
jecxz
push
adc
xor
inc
cld
xor
xor
and
or
xor
nop
insb
push
cmp
pop
xor
mov
inc
sahf
pushf
lock
cmp
iret
push
xor
in
repnz
cmp
popl
ss
dec
push
cmp
dec
xor
test
cmp
add
inc
push
cmpl
stc
pushf
fs
xor
xor
and
in
jle
xchg
and
hlt
lret
mov
push
mov
outsb
push
lds
mov
cmp
and
jo
cltd
int
data16
hlt
mov
int
aam
je
and
pop
cwtl
or
ljmp
xchg
lcall
sbb
jne
mov
addr16
push
sbb
dec
data16
xor
jl
jecxz
cmp
and
rcrb
xchg
mov
xchg
pop
aas
lea
push
mov
mov
lock
jge
out
stos
push
out
add
or
mov
and
and
or
out
adc
sahf
cmp
outsb
jbe
fcompl
mov
push
scas
mov
popa
imul
mov
ljmp
cmp
xor
nop
mov
xor
mov
fs
scas
mov
push
ljmp
pop
stos
push
xor
push
add
outsl
imul
imul
xor
sbb
pop
adc
clc
pop
xor
ss
cmp
jl
fstpl
mov
and
sbb
push
pop
lock
xor
insl
ret
or
fwait
les
enter
add
adcb
iret
and
vmwrite
out
sub
cmp
dec
xor
fwait
xor
push
adc
mov
add
aas
lock
popa
push
inc
xchg
push
mov
inc
xchg
or
xor
movsl
aam
aad
sub
add
xchg
gs
mov
mov
jb
jb
xor
test
xorl
mov
adc
mov
jl
std
leave
std
adc
mov
add
inc
mov
inc
lds
xchg
adc
cmp
xor
inc
addr16
rcll
fucomip
sbb
mov
mov
mov
int3
cmp
pop
push
pop
incl
xor
cmp
mov
sbb
rolb
adcb
out
mov
or
add
and
iret
pop
xor
insb
jo
add
and
xchg
mov
push
aas
sub
loopne
mov
or
cld
sbb
jns
add
call
repnz
sbb
push
lods
dec
xor
test
shrb
mov
pop
scas
sub
sub
das
jmp
test
mov
dec
rcrl
test
and
push
push
dec
mov
xor
jo
add
add
mov
and
inc
jb
arpl
idivb
push
add
jbe
sbb
aaa
push
daa
add
test
lret
inc
add
adcb
xchg
loopne
pusha
popf
je,pn
pop
and
cmp
ss
roll
add
into
and
sbb
outsb
mov
shrb
adc
add
xchg
add
fs
mov
sbb
dec
incb
sbb
mov
in
add
or
and
push
xchg
inc
or
es
aad
sub
push
push
add
fsubrl
or
std
sbbl
sub
push
add
jno
adc
icebp
enter
outsl
imul
adc
push
push
ret
fisttpll
adc
icebp
push
outsl
dec
inc
inc
imul
test
pop
add
jns
mov
add
mov
cltd
dec
add
adc
imul
pop
movsb
add
push
jge
mov
fs
pop
adcb
add
jnp
pushf
fwait
imul
xchg
test
sbb
shl
jae
insl
cltd
imul
pusha
pop
add
dec
dec
mov
sti
add
mov
ljmp
adc
sbb
pusha
fstpl
fisubs
xor
mov
jo
lea
adc
fstpl
std
inc
pop
pop
and
ss
xchg
add
push
mov
in
mov
fiadds
loopne
dec
mov
pop
add
and
and
out
dec
push
cmp
push
pop
sub
mov
inc
cmp
pop
sbb
add
je
scas
adc
add
jb
xchg
jge
sub
sub
pop
and
mov
inc
and
mov
inc
dec
mov
and
push
and
dec
bound
mov
inc
idivl
adc
and
punpcklwd
xor
inc
outsb
jne
repz
add
inc
mov
pop
lret
mov
adcb
xor
orb
maskmovq
testl
shll
mov
add
sbb
sub
xchg
fisttps
mov
jne
or
or
add
push
rcll
insl
lods
xor
dec
adc
fimull
add
or
and
xor
mov
push
add
loopew
pand
sbb
xchg
xchg
bound
outsl
push
and
or
loope
jbe
xchg
sub
and
add
in
bound
add
shl
gs
dec
insl
testb
add
inc
fbld
in
sbb
pop
add
push
push
push
sbb
mov
sbb
xchg
sti
inc
xor
mov
cwtl
adc
les
inc
sub
incl
in
aaa
pop
sbb
dec
inc
dec
push
dec
xchg
stos
lods
shll
je
cmp
addr16
fcomp
mov
xlat
jne
mov
pop
dec
sub
cmp
mov
mov
add
lds
or
imul
or
add
add
repnz
sahf
dec
add
add
pushl
push
cmp
cmp
add
or
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
jbe,pt
jnp
stos
ds
add
xor
ds
inc
aas
call
push
mov
adc
xor
inc
xor
mov
clc
push
xor
jbe
lods
xor
xor
xor
xor
xor
xor
dec
xor
xchg
xor
xor
jp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
xor
xor
xor
fidivs
out
add
adc
sub
ljmp
aaa
jb
xorb
aaa
mov
aaa
jmp
fildll
sub
cmp
fbld
hlt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
jmp
pop
xor
imul
stos
xorb
addl
aaa
lcall
cmp
pushl
jns
push
lcall
cmp
cmp
dec
cmp
pop
cmp
mov
cmp
cmp
pop
cmp
cmp
mov
cmp
cmp
decl
cmpb
sarl
es
xor
dec
aas
jge
xchg
aas
idivl
aas
jmp
adc
sbb
cmp
ljmp
mov
das
jl
test
xchg
xor
xor
xor
xor
xor
xor
lcall
xor
xor
dec
xor
outsb
xor
xor
xor
xor
xor
xor
sbb
pushl
or
push
xor
xor
xor
inc
xor
mov
incl
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
or
xchg
jb
mov
xor
cld
add
jecxz
add
aaa
cs
add
aaa
dec
aaa
push
aaa
push
jg
mov
cmp
aas
cmp
push
cmp
insl
cmp
cmpb
cmp
cmp
das
cld
fdivrl
out
or
xor
imul
or
lods
cmp
ljmp
inc
lock
cmp
cmpsl
pop
cmp
xchg
xchg
cmp
cmp
cmp
arpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
jns
mov
cmp
lret
cmp
mov
mov
adc
sbb
jbe
fnstenv
fbstp
divl
add
or
xor
dec
xor
xchg
jle
cmp
xor
xor
xor
add
sbb
pop
mov
xchg
push
add
mov
xor
cmpsb
xor
out
mov
or
push
ss
jno
mov
ss
ss
jmp
jle
adcb
aaa
jne
jl
sbb
std
mov
xor
cmp
test
decl
test
cmp
cmp
pop
push
cmp
cmp
cmp
mov
icebp
cmp
cmp
cmp
in
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
dec
ds
aaa
outsb
mov
xchg
ds
or
mov
cmp
pop
aas
addr16
insl
aas
ja
mov
mov
cwtl
mov
push
sbbb
js
xorb
xor
outsl
loope
xor
daa
xor
push
xor
mov
dec
mov
add
xor
inc
pop
and
inc
ja
xorb
xchg
cli
call
lods
xor
xor
xor
xor
xor
xor
outsl
dec
sub
inc
xor
sar
aaa
push
jp
icebp
decl
iret
aaa
sbb
cmp
enter
pop
cmp
lcall
arpl
les
sarl
adc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
fidivrl
cmp
xchg
movsb
cmp
vcvtsd2ss
loop
jmp
cmp
sbb
xor
incl
ds
ds
ds
jp,pt
jg
cwtl
ds
cmpsl
ds
xchg
mov
daa
fnstsw
out
repz
add
or
popa
aas
orb
mov
cwtl
aas
leave
aas
sarb
fstpt
loopne
sti
seto
fcomip
data16
xor
xor
jno
test
cltd
jmp
mov
mov
xor
xor
sbb
or
xor
xor
decb
outsb
xor
mov
xchg
xor
sub
mov
sub
xor
popa
sub
popa
xor
jo
xorl
xor
out
clc
mov
mov
ret
push
iret
xor
xor
xor
xor
xor
adc
sub
aaa
fisttpll
xor
xchg
ret
dec
fcomip
outsl
xor
xor
xor
xor
jne
outsl
cli
test
ja
xor
xor
xor
xor
xor
xor
jg
incl
scas
xor
shlb
imul
cld
pushl
and
cmp
push
ss
mov
mov
jecxz
decl
sbb
aaa
xchg
enter
clc
aaa
or
sbb
and
cltd
mov
cmp
mov
cmp
sbb
cmp
cmp
movsl
fidivrs
in
out
cmp
mov
mov
popf
cmp
cmp
cmp
xchg
cmp
cmp
cmp
jg
loopne
cmp
cmp
cmp
cmp
sbb
fadds
cmp
test
lcall
incl
pop
aas
jbe
mov
into
aas
aam
jg
sub
xor
xor
fdivs
repz
decl
lea
das
xchg
push
xor
xor
xor
xor
xor
stos
inc
xlat
xor
xor
arpl
addl
xor
popa
clc
mov
push
xor
xor
xor
sub
rcrb
sti
xor
xor
data16
hlt
sbb
xchg
xor
or
adc
push
ss
ffreep
sub
bound
push
ss
test
mov
nop
ss
ss
mov
sub
adcb
push
out
psubq
sbb
adc
mov
mov
mov
mov
je
dec
pop
shrb
sub
mov
js
or
incl
daa
mov
add
cmp
or
sub
pop
addb
loopne
push
mov
fldenv
pop
lock
mov
add
pop
xor
mov
sub
mov
leave
or
jbe
mov
jb
ret
inc
and
adc
pop
inc
add
adcl
or
sub
cmpsb
xor
aas
stos
ss
fidivl
fbstp
add
sbb
mov
xchg
xor
pop
imul
cmpsb
imul
adc
sub
push
andb
stos
mov
insb
aam
or
cmp
js
push
sbb
dec
push
inc
sub
mov
push
dec
dec
inc
and
mov
cmp
jmp
mov
inc
mov
push
or
pop
add
fbld
test
dec
popa
jns
jne
jae
xor
rclb
cmp
outsl
push
mov
imul
or
pop
push
jl
inc
push
dec
dec
addl
stc
ljmp
outsb
gs
sub
push
push
inc
and
cld
in
call
pop
mov
inc
inc
jge
push
rep
pop
mov
or
je
lret
sbb
jbe
hlt
add
and
push
js
roll
dec
mov
mov
push
in
mov
or
enter
add
mov
jae
adc
cmp
cmc
sub
outsl
and
pop
xlat
cmp
sbb
sbb
mov
dec
scas
xor
jnp
fldenv
jp
je
inc
cwtl
fcompp
into
gs
fs
pop
add
aam
in
lock
ret
subl
push
mov
inc
lock
and
add
push
xchg
out
fnstenv
dec
mov
cmp
xor
xchg
cmp
sub
daa
sub
xor
mov
mov
sbb
and
test
cmp
mov
dec
sbb
sub
ss
sbb
and
mov
jnp
lret
and
out
pop
and
or
push
push
mov
dec
les
sbb
add
pop
adc
cmpb
or
insl
insl
pop
xchg
and
insb
insb
xchg
flds
push
dec
insl
insl
aam
adc
add
sub
inc
dec
insb
dec
dec
inc
pop
adc
or
jno
lea
adc
mov
adcb
loopne
xchg
mov
dec
xchg
cmp
inc
lcall
dec
popa
insl
mov
push
inc
fwait
sbb
mov
pinsrw
shl
pop
inc
cmp
inc
mov
add
cmp
add
jle
lea
icebp
xor
adc
dec
call
push
cmp
test
or
jg
sub
out
addr16
mov
pop
addr16
mov
inc
es
mov
enter
xor
mov
bound
mov
dec
push
ja
dec
sbb
add
daa
add
jmp
in
sbb
sbb
xor
sub
push
mov
cmp
xor
push
pop
ds
xchg
add
faddl
and
inc
inc
gs
inc
test
or
or
jae
or
cli
dec
lea
rorl
ljmp
icebp
pop
sub
test
fldcw
push
dec
mov
mov
lods
push
stos
std
inc
sub
inc
nop
pop
outsb
dec
push
stc
push
jno
and
mov
leave
mov
push
sub
enter
adc
cmp
inc
enter
sti
dec
add
push
adc
sub
and
sbb
pusha
jns
jl
xchg
add
or
add
outsb
push
inc
jb
cmp
add
push
push
pop
xchg
inc
sahf
add
nop
inc
lcall
mov
inc
inc
inc
inc
mov
mov
inc
inc
inc
inc
mov
mov
inc
mov
adc
std
lea
jl
std
scas
pop
mov
and
sahf
push
mov
push
mov
mov
add
fmulp
mov
mov
mov
fisubrl
cli
inc
aam
mov
shrb
test
pusha
in
leave
stos
lods
cld
jo
add
outsb
sbb
dec
mov
sbb
xlat
gs
mov
jb
xchg
xchg
lods
mov
gs
adc
andnps
pop
sub
mov
inc
inc
mov
inc
cmpsb
or
outsl
jnp
jne
xlat
and
fmull
push
or
ret
rolb
add
push
flds
xchg
movsl
sub
push
adcb
outsl
outsb
outsb
gs
adc
gs
cs
lret
mov
and
jne
sub
mov
arpl
jb
and
mov
pop
jno
pusha
imul
pusha
gs
adc
js
insb
and
mov
jb
enter
mov
mov
mov
pop
adc
xchg
xchg
in
push
mov
mov
inc
sub
inc
sub
dec
aam
imul
mov
je
sbb
push
clc
insb
mov
sbb
stc
pushl
popa
clc
dec
pop
cmc
fildll
sbb
jbe
insl
inc
repz
jne
push
int3
mov
repz
fmulp
xchg
or
sbb
aad
xchg
subb
aas
vgf2p8affineqb
push
aam
add
fcomp
fstpl
push
lea
adc
adcl
sbb
adc
inc
lahf
aaa
es
dec
and
mov
data16
add
pop
add
inc
icebp
lcall
es
adc
lea
lods
add
test
push
mov
mov
xchg
shrb
or
push
xor
sbb
mov
int
loop
xchg
shrb
xor
pop
mov
arpl
inc
add
gs
outsl
out
or
or
adc
sbbb
ja
scas
add
rorb
stos
loop
or
insb
fs
push
fs
mov
cmp
dec
push
mov
in
adc
xchg
aaa
and
bound
push
add
jne
sbb
flds
or
inc
cmp
stos
dec
push
pushf
movsb
das
sti
add
mov
cs
lcall
pop
sub
adc
lcall
das
bound
sbb
add
mov
or
mov
pop
cmp
and
mov
and
and
jmp
adc
imul
pusha
adc
sbb
sbb
mov
shll
push
rcrb
or
add
jno
adc
mov
adc
sub
push
push
adc
in
das
mov
cmp
sbb
add
nop
jae
fmuls
add
jb
and
mov
inc
outsl
js
or
add
jmp
or
push
adc
jg
sub
les
xlat
or
imul
xor
pop
nop
adc
dec
insl
insl
dec
jae
xor
adc
fstps
inc
pop
adc
push
and
fistl
leavew
and
push
add
adc
sub
insb
lcall
mov
pop
sahf
ret
sub
cmp
dec
into
and
sbb
sarl
add
gs
push
fdiv
xor
or
cmpsb
imul
cmpsb
imul
xlat
xor
xor
pop
mov
mov
xchg
leave
add
pop
mov
push
movb
xchg
push
repnz
fsts
xchg
icebp
push
outsl
lea
aaa
or
or
adc
das
dec
xor
inc
lds
and
add
add
jo
or
or
dec
gs
sub
rcll
cmp
jno
push
or
fisubs
push
add
xchg
pop
ljmp
jp
jno,pn
loope
sbb
lret
sbb
adc
jnp
mov
dec
or
sbb
add
notb
push
xchg
test
mov
sarb
add
rorb
xchg
jns
cmpsl
popa
mov
or
in
or
xor
xchg
cltd
mov
cmp
add
xchg
add
imul
mov
jno
jns
add
popa
das
call
pop
inc
add
add
add
sub
pusha
int3
add
clc
push
pop
add
xor
or
dec
inc
cmovns
inc
or
add
imul
and
aas
stos
add
pop
or
pop
aaa
and
add
jb
mov
dec
pop
jecxz
insl
cmp
or
ficomps
jmp
xor
jecxz
insl
scas
jmp
inc
and
xor
jae
xor
add
movsl
popa
and
sub
sbb
mov
gs
imul
ss
push
jb
aam
sub
push
adc
mov
jb
cmp
pusha
pop
mov
add
sbbb
jne
ret
mov
popf
xchg
pop
dec
or
jge
mov
lds
popf
addr16
jmp
add
adc
xchg
pop
xor
pop
mull
inc
push
ret
mov
pop
fs
or
sbb
dec
dec
imul
push
daa
jbe
lods
aam
adc
fs
inc
push
jne
je
sub
lods
insb
and
xor
out
push
imul
and
mov
insb
cmpsl
mov
add
adc
shlb
js
incl
repz
adc
xor
push
xchg
xor
or
xor
xor
xor
decl
xor
xor
cmpb
xchg
mov
and
pop
shrl
lea
loopne
pushl
aaa
insl
aaa
je
mov
scas
aaa
mov
aaa
or
pop
cmp
jg
xchg
mov
cmp
les
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
mov
shr
cmc
cmp
add
or
or
cmpsb
lods
ds
loope
adc
test
dec
nop
cmp
dec
orb
add
outsl
add
outsl
jne
arpl
adc
mov
and
and
cmpsb
outsl
psrad
sub
add
test
add
add
adc
jecxz
add
add
add
sub
test
add
xor
push
out
xchg
add
jbe
addb
loopne
test
ret
lods
cmpsl
add
cmpsb
xchg
ss
or
nop
cmc
add
pop
add
fcmovnbe
add
fiaddl
sbb
add
je
and
popf
rcll
nop
sub
adcb
dec
jne
jne
stos
mov
add
data16
xlat
add
jb
pop
insb
dec
add
imul
mov
mov
dec
push
jno
jbe
add
add
push
rdpkru
push
sbb
cmpb
into
inc
add
or
and
andb
add
shl
sub
nop
jne
mov
xchg
push
inc
sbbl
pop
ror
push
xor
or
fwait
sbb
ret
inc
xchg
jle
add
add
add
add
add
add
add
or
incl
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
