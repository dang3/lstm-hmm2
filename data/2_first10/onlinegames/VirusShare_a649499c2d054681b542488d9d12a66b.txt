sbbl
mov
iret
jns
cld
imul
aas
sub
fs
mov
lret
fwait
test
cmp
cld
addr16
mov
pop
dec
aaa
sub
cltd
fsubrl
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
lret
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
mov
idivl
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
lahf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
repz
mov
out
jecxz
fistpll
and
daa
xor
daa
inc
ss
sub
add
in
stos
in
int
test
or
push
xchg
ret
ret
jns
lret
mov
out
jne
cmp
jb
mov
add
popf
jp
pushf
addl
mov
pop
jmp
adc
jb
lahf
dec
scas
stc
pop
fcmovne
repz
jecxz
fldt
mov
aas
sub
inc
pushf
rorb
mov
lods
push
leave
jg
shr
xor
cltd
out
sbb
pop
add
gs
out
gs
push
fbld
stc
jnp
push
int3
and
mov
int
pop
imul
lret
jg
bound
pop
pop
aaa
dec
stos
jecxz
jb
pop
inc
stc
pop
rolb
mov
jmp
add
and
dec
xlat
mov
icebp
loopne
sti
adc
pop
xchg
xor
ljmp
or
ret
mov
lock
faddl
and
jnp
inc
out
idivl
pop
cli
testb
or
push
dec
ja
inc
cld
mov
insb
out
adc
in
xor
pop
mov
add
dec
out
je
jns
mov
and
pop
fwait
rclb
fstl
popa
adc
mov
jl
cmp
lds
inc
or
test
dec
sub
fadd
sarb
test
mov
or
mov
ret
pop
jp
mov
js
add
and
sub
hlt
jle
pop
test
cmp
movsb
lock
test
mov
add
jbe
adc
sbb
push
mov
es
call
call
xchg
dec
iret
scas
int3
imul
sti
dec
adc
pop
call
dec
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
ljmp
mov
notl
xchg
std
pop
stos
adc
loope
jmp
daa
pop
iret
loop
sub
cli
push
push
mov
cmpsb
sub
jmp
in
cli
pop
add
fists
je
pop
mull
out
sbb
out
daa
and
lahf
lock
movsl
cmpsl
push
pop
mov
fmul
out
movsl
pop
in
repz
jg
jns
clc
stos
js
jo
jl
and
mov
das
cmpb
js
cmp
jmp
ret
adc
cli
lds
lods
pop
ret
in
cmp
adc
aas
test
out
repnz
pop
mov
push
sub
and
shlb
xor
cmp
imul
lahf
xchg
pop
sar
fwait
pop
cmp
jbe
clc
sbb
fwait
nop
shll
or
pop
mov
xor
dec
xchg
lea
xor
lcall
inc
dec
shl
lret
xchg
lret
and
cwtl
cld
and
and
pop
lret
push
and
sub
sbb
int
outsl
add
add
ret
call
divl
scas
cli
daa
scas
mov
inc
jl
jmp
das
pop
sbb
pop
xchg
notb
jmp
cmp
das
sbb
clc
xor
lods
lods
cld
push
and
adc
aad
push
out
xchg
jmp
jns
dec
idivl
mov
cmp
subb
or
jl
sub
ljmp
xchg
push
repnz
je
adc
sti
cltd
jle
and
ret
insb
xchg
push
push
testb
shl
sarb
pusha
jbe
adc
ret
jl
mov
lock
adc
xchg
pop
or
je
xchg
fdivs
add
jl
lea
jp
mov
mov
aam
loope
dec
xchg
mov
je
cld
mov
scas
mov
xchg
pop
je
je
in
aad
xchg
mov
pusha
add
sahf
in
idiv
jl,pt
std
scas
and
pop
inc
or
jl
sti
jl
adc
sbb
cmp
mov
mov
jbe
mov
and
push
mov
repz
cli
je
ja
sub
cmp
jl
out
jno
mov
dec
add
lahf
jb
imull
adc
adcl
or
lock
ds
mov
or
imul
out
cltd
outsb
mov
cltd
out
inc
mov
xchg
adc
cmc
cld
mov
imul
hlt
sti
mov
sbbb
mov
out
dec
leave
ds
fs
pop
imul
testb
inc
scas
pop
mov
mov
cld
xchg
aam
movzbl
push
xchg
mov
cmp
xchg
ret
sbb
mov
mov
mov
mov
stos
mov
and
add
mov
nop
pop
jp
cmpsb
out
sbb
je
add
add
cmp
push
pop
cld
mov
rcl
fstpt
xlat
add
mov
cmpsb
xrelease
jbe
mov
pop
jecxz
xchg
setno
or
shl
jl
jecxz
cmp
push
cmp
stc
pop
adc
loopne
jb
in
xor
enter
jnp
fildll
xor
pushf
cmp
xchg
cld
cmp
lods
arpl
out
xchg
outsl
cmp
cmp
loop
jae
xchg
sti
xchg
cltd
pop
clc
dec
lods
sbb
mov
insb
fisubs
inc
out
test
cmc
notl
scas
add
jnp
cmp
mov
cmc
dec
lods
xchg
fcmovnb
cmp
jno
in
mov
je
jns
je
ret
je
mov
or
movsb
mov
xchg
mov
mov
in
clc
sbb
out
inc
iret
je
and
pop
mov
or
cld
pop
cmc
cwtl
int3
xchg
fldl
mov
icebp
or
jmp
jmp
in
jbe
testb
or
cmp
push
sub
inc
lock
repnz
inc
repnz
inc
ret
arpl
jl
add
mov
cmpsb
adc
mul
push
xchg
jg
xlat
lcallw
xchg
adc
or
or
pop
push
push
hlt
std
int3
pop
push
add
mov
sti
mov
dec
mov
clc
loopne
jmp
notb
loopne
lcall
mov
push
movsb
fistps
and
xchg
dec
inc
incb
cli
xor
lahf
imul
hlt
ss
setg
inc
iret
mov
outsb
push
fisubl
add
jge
repz
ficoml
scas
fimull
pushf
pushf
mov
cli
inc
in
stos
cmpsl
das
aas
call
in
pop
daa
push
mov
lcall
rcl
in
cmpsl
sbb
in
mov
in
fdiv
fcoms
push
filds
mov
mov
pop
and
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
dec
add
jns
lods
std
mov
sahf
fwait
mov
popf
lea
sbb
enter
nop
fwait
mov
mov
lcall
mov
rol
cmpsb
repnz
cmp
fldl
xchg
mov
pushf
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
orl
ljmp
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
dec
xchg
movsb
mov
push
aam
lcall
in
cld
scas
dec
cmp
out
pushl
jb
xchg
nop
and
mov
testl
sub
adc
nop
or
sub
sahf
dec
mov
mov
lock
or
lock
jo
repz
inc
shlb
sub
xchg
and
cltd
stc
lcall
roll
hlt
xchg
xchg
repz
mov
popf
psllw
lahf
pop
jmp
jo
int
xchg
je
push
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
cmp
bound
cmp
ljmp
decl
les
dec
mov
shl
test
mov
lods
mov
jp
js
inc
push
std
fmuls
xchg
cmpsl
cltd
cmp
lods
in
call
and
xchg
lcall
mov
mov
xchg
test
jp
dec
shr
lret
mov
pushf
nop
mov
adc
sahf
sbbb
stos
mov
cltd
dec
or
xchg
nop
aad
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
xor
test
faddp
dec
mov
dec
outsb
jbe
xchg
mov
mov
in
data16
fisubrs
lret
xchg
lock
fsubrs
idivb
std
testb
shll
xchg
mov
push
daa
fdivs
mov
cmc
neg
pusha
filds
add
into
sbbb
ja
push
arpl
xor
pop
into
add
ljmp
add
pop
mov
mov
jne
pop
int
int
int
int
int3
ljmp
add
add
int3
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
add
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
add
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
add
scas
ret
jno
imul
ret
push
ret
or
mov
add
icebp
arpl
sub
or
insl
jp
clc
daa
enter
mov
jp
scas
mov
jp
dec
push
jp
and
or
popf
fcoms
sub
les
push
popa
push
xor
lock
mulb
cmpsl
lods
xor
mov
stos
enter
cld
push
add
sti
aaa
cli
cmovg
mov
dec
and
jnp
inc
lock
imulb
mov
aas
in
outsl
adc
ljmp
in
in
mov
clc
das
add
cmp
push
aas
fdivs
sub
cmc
cld
addr16
bound
sub
pop
sub
mov
outsl
adcl
mov
adc
inc
or
sub
mov
adc
sub
jl
loopne
faddl
mov
lret
mov
inc
xor
mov
inc
inc
aam
fcmovnb
scas
cltd
sub
mov
xchg
push
inc
cli
daa
lret
mov
and
std
inc
sub
mov
mov
rol
mov
mov
xchg
xorl
mov
sub
lret
mov
mov
xlat
leave
lods
jge
lret
mov
outsl
popa
push
inc
xor
and
cld
mov
fldpi
pop
dec
pop
xchg
gs
xchg
sub
dec
xchg
gs
sbbl
loopne
pop
xchg
cld
pop
sub
mov
cmp
jae
xchg
sub
mov
mov
ret
xlat
inc
ror
sub
cld
ret
mov
lret
mov
xchg
imul
lret
mov
dec
inc
cmp
and
sbb
pop
ljmp
sub
in
fst
inc
fs
dec
xchg
inc
jns
hlt
test
mov
gs
out
fistl
popf
mov
mov
sub
stc
adc
cmpsl
and
dec
stos
pop
sti
fs
mov
iret
rcr
mov
xchg
add
idivb
mov
xchg
mov
or
dec
sahf
mov
mov
cld
sub
add
xchg
shrd
cmpsb
lods
mov
stos
test
lods
mov
nop
in
lea
cltd
mov
xchg
cwtl
aas
stos
mov
xchg
fcomip
dec
inc
out
cwtl
mov
out
push
and
mov
es
clc
imul
test
pusha
int3
jge
icebp
idiv
cld
out
and
lahf
mov
dec
cld
mov
jmp
sahf
fdivr
std
filds
shll
fbld
and
cld
or
shr
cld
call
jp
out
xchg
dec
cld
daa
mul
imul
fildll
push
clc
notl
cld
add
fnsave
incl
in
lcall
cld
mov
insb
mov
js
mov
mov
imul
jnp
aad
jns
pop
jbe
jg
shlb
fcmovb
clc
filds
cmp
jl
mov
test
xchg
ljmp
data16
ljmp
and
and
rcrb
mov
push
xchg
test
loopne
rcrb
mov
mov
mov
cwtl
hlt
mov
nop
push
xchg
mov
cwtl
lock
shll
icebp
in
iret
int
cld
add
xor
xor
test
jno
clc
in
fisttpl
lods
insb
xchg
neg
pop
insl
outsb
or
adc
nop
lea
jge
adc
sar
movsl
mov
cld
push
dec
sahf
or
mov
mov
mov
shll
push
mov
mov
adc
adc
nop
mov
lcall
lahf
dec
mov
leave
jmp
sahf
xchg
clc
fcoms
pop
pop
mov
clc
jbe
pop
je
je
xchg
cmpb
je
jg
cli
scas
out
mov
hlt
add
in
fwait
add
fwait
jbe
je
jl
arpl
fdivl
hlt
pop
xchg
lcall
xchg
pop
shlb
repz
jmp
outsl
cmpsl
push
ja
notl
mov
in
push
repnz
imul
ficomps
inc
in
cmp
mov
jo
push
cmp
jecxz
push
je
xchg
mov
gs
hlt
mov
push
and
xchg
fists
cli
mov
rclb
mov
cwtl
loope
xchg
inc
roll
mov
clc
lods
cmp
repnz
hlt
lcall
push
incl
insl
xchg
push
test
xchg
loopne
mov
pop
addr16
push
cld
rcl
fnstsw
hlt
jnp
push
cmc
mov
and
or
or
mov
lock
ja
popf
lock
rolb
out
insb
fwait
lock
sti
jae
subb
xchg
push
outsl
lock
dec
cmp
mov
dec
sbb
arpl
mov
adc
aad
mull
mov
jg
imul
push
notl
jp
repz
int
je
ljmp
jle
sar
int
mov
and
aas
mov
jmp
jb
mov
loopne
fldt
imul
imul
mov
mov
add
adc
and
cmpsb
movsl
leave
je
jle
cmp
incb
mov
int3
test
add
call
inc
into
mov
jl
sti
mov
add
pop
pop
or
mov
push
jbe
test
xchg
add
jl
add
fidivrl
mov
xchg
lock
sti
call
inc
mov
rcll
jmp
jmp
pop
pop
mov
cmp
popa
mov
test
rcrl
pop
outsb
xchg
pop
add
pop
sti
int
adc
add
dec
lahf
aad
or
insb
lret
xor
or
fdivrs
ja
test
xchg
cli
adc
mov
add
mov
adc
mov
scas
jb
loopne
adc
scas
cmp
and
add
jbe
push
pop
rclb
fstpt
jbe
dec
cmp
jne
fwait
mov
mov
cld
pop
cmpsb
inc
pop
test
arpl
lahf
or
push
popf
mov
and
hlt
pop
in
cmp
push
in
and
jecxz
call
mov
jge
jo
jno
pop
int3
add
out
and
dec
pop
out
jmp
test
xor
ss
dec
dec
in
and
lock
and
add
mov
clc
mov
sub
push
lock
f2xm1
repnz
dec
jo
ret
cli
jl
push
mov
jbe
xor
fucomip
out
adc
xchg
push
xor
jecxz
repnz
shll
decb
cmp
pusha
mov
cli
pop
call
fcmovbe
aaa
pop
dec
fistl
inc
cmc
in
mov
cmp
in
aam
inc
movsb
test
and
scas
into
cld
jae
fwait
mov
int3
imul
push
test
scas
test
xchg
fdivl
cmp
adc
push
std
mov
sar
cwtl
call
lret
out
call
es
dec
dec
fucomp
or
add
adc
out
xor
mull
fldl
ljmp
lahf
sbb
add
mov
pop
imulb
mov
popf
cmp
movsl
lahf
dec
imul
js
ljmp
sub
in
addl
sub
mov
pop
cli
sub
repnz
stc
rcrb
incb
mov
xchg
sbb
cmp
push
je
aam
jl
push
or
cmp
mov
repnz
inc
add
xchg
outsl
xchg
jb
mov
and
pop
test
mov
movsl
rcrl
xchg
or
mov
enter
mov
push
out
repnz
sbb
push
fs
hlt
imull
jae
sub
push
jge
xor
pop
add
repz
inc
lock
mov
repz
in
xchg
xor
icebp
jne
or
mov
sub
iret
loope
test
loopne
cmpsb
jl
cmpsb
addl
mov
and
cmpsb
je
lods
cli
jmp
cmp
std
lds
and
cli
jmp
xlat
iret
clc
scas
rcr
jo
out
out
out
das
adc
jmp
mov
iret
std
dec
cmp
lods
or
lds
repnz
cmpsb
dec
je
fistl
std
adc
jle
dec
mov
cld
xor
ja
insl
mov
jmp
pop
int3
mov
sub
fistpl
out
out
test
fildl
cmpsl
ljmp
and
xchg
jecxz
call
fcmovne
sub
adc
incb
fstl
in
jecxz
adc
icebp
clc
dec
lock
mov
neg
cmp
xchg
mov
test
out
jp
das
clc
popa
gs
adc
mov
add
incl
and
inc
sti
cmc
jb
cvtps2pd
cltd
pop
inc
bswap
repz
or
inc
pop
pop
out
dec
stc
dec
outsb
xor
adc
and
pop
lock
jg
cmp
aas
xor
pop
dec
xchg
adc
inc
inc
loopne
in
repnz
mov
lock
sub
icebp
out
daa
repnz
xlat
dec
arpl
jp
xchg
fisttpl
in
xchg
bound
scas
lahf
pop
pop
inc
xchg
push
sbb
push
jl
jp
fstpt
dec
scas
inc
jo
sub
pusha
inc
cltd
je
repz
testl
or
mov
mov
xchg
es
jno
fists
clc
pop
adc
les
dec
out
mov
test
std
or
mov
mov
rol
out
cmpsb
lea
stos
inc
adc
mov
iret
out
fs
inc
sar
jno,pt
aaa
push
sbbb
sub
in
test
jl
mov
fisubrl
ret
jmp
xchg
std
test
sub
xorb
and
mov
push
xchg
dec
inc
sahf
push
aam
jmp
xchg
lret
jno
pusha
in
xor
fnstsw
lock
and
jl
sub
add
jne
enter
jne
jecxz
lds
dec
fisubs
mov
fiadds
jne
cmc
pop
or
cld
mov
in
aam
jo
lea
lret
adc
pop
into
sbb
cld
cmp
inc
mov
push
lods
pop
mov
idiv
and
lds
test
les
mov
xchg
divl
mov
push
adc
lea
cmp
jg
clc
les
or
cmpsl
iret
ja
fdivrs
jnp
ror
jg
jg
outsl
iret
or
iret
std
xchg
js
into
jae
outsl
jge
or
cld
mov
pop
or
push
adc
pop
int
std
mov
xor
cmp
mov
xor
ljmp
jp
outsl
mov
mov
pop
lcall
negl
mov
inc
lret
inc
into
pop
mov
hlt
test
push
cmp
pxor
fidivs
sti
push
adc
jns
mov
push
ljmp
fwait
xchg
mov
jmp
ret
ds
call
adc
jg
cmpsl
push
in
jno
push
add
je
cmp
mov
out
mov
or
sub
xchg
popf
lock
test
out
xor
xor
jmp
mov
icebp
xchg
out
stos
call
out
loop
and
shll
pop
or
mov
or
xchg
pushf
or
jmp
add
ja
xor
and
imul
jns
xor
or
iret
out
jmp
fxch
xor
add
mov
xchg
cli
push
dec
push
lret
rcll
mov
push
int
std
and
mov
xchg
adc
out
mov
add
les
pop
lret
or
movl
mov
jnp
les
int3
jbe
and
or
scas
adc
mov
cltd
pop
add
add
aaa
das
inc
adc
pop
mov
mov
mov
js
jl
jecxz
cwtl
andl
jbe
mov
xchg
outsb
ds
lds
ret
dec
push
fildl
daa
ficoms
mov
push
cli
dec
fbld
inc
or
jmp
ret
push
jbe
cmp
mov
adcb
add
inc
mov
add
leave
ljmp
xor
mov
push
add
idiv
adc
jl
lock
jmp
mov
hlt
nop
adc
sti
jb
enter
hlt
aas
push
cli
push
out
cmp
add
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
adc
sbb
hlt
cmp
roll
hlt
aas
rolb
sbb
add
jg
cmp
xor
jns
and
dec
and
mov
push
out
mov
jnp
popa
test
adc
pop
pusha
jecxz
sub
push
cli
mov
repz
idiv
lock
in
out
repz
push
fistps
sbb
jne
fdivrl
cmp
test
ds
adc
out
hlt
jbe
cmp
mov
pop
or
in
push
std
pusha
fdiv
sti
movsb
and
mov
aam
je
iret
or
ja
push
cmpsl
cld
shlb
adcl
cltd
mov
cmp
icebp
pop
in
dec
xchg
mov
push
mov
ret
jne
or
mov
enter
mov
das
test
nop
sub
dec
mov
mov
aaa
cs
adc
enter
and
fistps
clc
aam
into
sti
stc
push
sti
cmp
mov
scas
test
mov
ja
aas
shll
mov
mov
hlt
scas
and
mov
mov
dec
iret
std
int
mov
rcrl
mov
cmpsl
mov
aaa
push
cmp
lds
mov
sahf
out
cli
mov
les
dec
ja
sbb
negb
ja
fnstenv
cmpsb
mov
mov
out
addr16
push
lahf
mov
jmp
pop
cmpb
dec
push
movsl
push
mov
test
add
js
mov
jg
into
fnstcw
sti
into
cmpl
lea
adc
mov
hlt
jle
fdivrl
jbe
imul
add
xchg
add
int
fucomip
repz
adc
mov
jmp
jmp
sub
je
je
xchg
mov
jl
rol
mov
add
sub
and
loop
mov
push
mov
in
repz
pop
mov
nop
add
stc
call
mov
out
add
xor
sti
ds
in
push
add
mov
and
int
aas
cmp
icebp
cmp
je
stc
push
movsb
mov
outsb
mov
mov
mov
add
addl
sub
or
add
out
jb
call
lods
out
add
sub
adc
mov
cld
cltd
scas
or
jb
or
shl
or
cld
out
jb
enter
xchg
dec
scas
mov
or
adc
leave
or
or
je
shl
cmpsb
mov
cli
cmpsb
and
add
jmp
arpl
and
cmpsb
ds
ds
jmp
xchg
mov
and
or
sub
mov
and
lock
ror
adc
inc
xor
mov
ds
hlt
or
or
and
nop
push
xchg
cmc
inc
cld
and
in
lock
je
adc
repz
add
stos
inc
aad
shld
aas
ficoml
in
stos
in
aad
js
je
and
mov
jmp
jge
je
jg
test
sub
and
in
inc
aam
in
mov
rcr
xlat
sub
and
jl
mov
mov
push
add
test
sti
push
adc
push
cld
add
movsb
daa
and
jl,pt
lret
pop
daa
and
jg
adc
jmp
dec
push
and
das
and
in
jmp
xlat
loopne
or
push
add
xor
adcl
aas
xor
pop
repnz
dec
movsb
stos
mov
repz
aad
daa
stc
sub
xchg
mov
cli
inc
sub
das
es
faddl
movsl
iret
stos
cmp
fucomp
outsl
xchg
adc
or
lret
and
popf
sbb
or
mov
push
dec
cmp
out
xchg
cld
stos
add
nop
roll
add
sub
mov
jp
clc
in
arpl
jno
xchg
movsb
mov
mov
dec
stc
push
ljmp
add
mov
jmp
std
fdivp
dec
mov
cmpsl
dec
hlt
cmp
cmp
xchg
push
cmp
fsubl
sub
stos
je
jp
sub
or
loop
jns
hlt
sub
clts
faddl
andb
mov
call
cld
or
push
lret
pop
lea
pop
cmpsb
inc
mov
movsl
mov
or
jge
pop
and
push
fdivrl
cmp
pop
fcoml
dec
mov
cltd
xchg
xchg
cmp
push
or
xchg
aam
pop
jae
push
sub
js
cmp
dec
daa
dec
jae
jns
jmp
std
test
rorb
lahf
jo
das
jo
fcmovbe
and
and
loopne
sbb
sub
icebp
nop
jg
cs
jp
stc
and
and
es
dec
shll
sub
xorb
push
push
dec
inc
push
dec
lret
xchg
and
das
dec
sbb
push
ficoms
divl
dec
outsb
pop
dec
cmp
fisubl
enter
jo
inc
jp
imul
cmp
and
xchg
js
sub
sub
addr16
icebp
call
dec
dec
jo
fsubl
es
je
jmp
mov
dec
sbb
and
mov
dec
cli
push
sbb
xchg
ficomps
dec
cmovle
ror
pop
pop
adc
or
mov
pop
cmpsb
inc
inc
test
es
nop
cwtl
sub
icebp
cmp
sub
cmp
aad
jae
mov
cmp
sub
das
out
push
mov
rol
lahf
jecxz
sti
push
add
int3
add
pop
pop
jp
jle
mov
jge
ret
mov
shl
xchg
imul
sahf
bound
jns
sbb
add
mov
mov
push
repz
sbb
fildl
and
int3
dec
cltd
movl
inc
pop
push
mov
xor
imul
xchg
pop
or
and
push
or
loope
call
push
mov
or
mov
xchg
repz
popl
inc
xchg
xor
inc
sbb
sub
mov
cmp
sbb
or
cmp
xchg
add
pop
jmp
sbb
cwtl
std
nop
mov
or
iret
adc
push
mov
mov
jmp
sub
jp
hlt
cmpsb
inc
ja
xchg
jnp
loop
mov
adc
test
lcall
das
sub
xchg
jge
xor
cmp
sbb
sbb
inc
rolb
mov
or
leave
dec
enter
test
sbbl
sbb
mov
in
repz
rolb
mov
ret
mov
insb
jae
sub
mov
push
pop
out
mov
in
dec
cmp
hlt
loope
cmp
hlt
lret
xchg
int3
jg
dec
stc
mov
xchg
mov
js
bnd
scas
pop
inc
lock
fsubrl
out
mov
lock
lea
int3
loopne
pop
insb
add
adc
loop
mov
movsb
xor
push
push
sub
rcrb
sub
cmp
movsb
lcall
xchg
adc
sub
xorb
dec
xchg
js
xrelease
cmp
mov
out
pop
loop
inc
inc
roll
inc
dec
xchg
mov
or
loop
das
scas
xchg
or
adc
mov
pop
mov
mov
push
test
test
nop
mov
stc
test
in
ror
arpl
enter
pop
sbb
add
cmc
test
mov
jmp
pop
adc
daa
enter
pop
out
divl
xchg
enter
push
sub
sbb
push
inc
push
adc
or
daa
pop
lret
inc
into
and
dec
xchg
adc
daa
pop
and
sbb
inc
sub
shlb
jp
dec
mov
outsb
sub
adc
into
lods
mov
into
movsb
xchg
mov
adcb
mov
pop
jbe
je
movsl
pop
dec
inc
stos
je
repz
repz
add
mov
stc
je
leave
cli
jmp
mov
jg
add
ds
xchg
xchg
addr16
mov
cltd
test
jg
icebp
addb
sub
add
jne
cmpsl
and
push
and
xchg
jge
mov
aam
and
outsl
xor
scas
xor
shlb
or
out
icebp
clc
out
les
mov
and
out
imul
xor
adc
sbb
test
hlt
lcall
rcr
pop
inc
mov
xabort
aam
test
and
stc
cmpb
int
mov
mov
jecxz
sub
sbb
xchg
or
pop
ljmp
je
sub
jb
pop
cmpsb
in
cli
ret
xchg
dec
sbb
xchg
lahf
test
lret
cmp
adc
cmp
inc
std
inc
aas
cmp
push
cmpsb
pop
mov
dec
pop
xchg
mov
cmpsb
emms
mov
lret
ljmp
sub
pop
sub
mov
hlt
out
sbb
andb
repnz
adc
in
test
jle
test
loopne
loope
dec
lods
lods
jmp
cmp
ja
xlat
jo
out
mov
stos
repnz
pop
xchg
cmp
fcoms
pop
enter
dec
das
xchg
inc
inc
push
stos
scas
repnz
sahf
or
add
cwtl
daa
lcall
xor
and
stos
sbb
nop
cmp
dec
lret
jnp
aam
push
gs
jb
mov
adc
jbe
mov
lahf
adcb
stos
incl
scas
sbb
jb
inc
ss
addr16
adc
cltd
aaa
cmc
leave
movsb
xchg
imul
dec
pop
decb
imul
ret
adc
xchg
testl
pop
lods
stos
cmc
pop
mov
sub
rol
ljmp
imull
ja
dec
pop
cmc
mov
out
cld
iret
sbb
sub
pop
xor
adc
scas
and
les
xchg
cld
adcl
lret
sub
mov
lock
add
jb
fdivrl
sti
xor
or
in
ret
scas
lods
scas
loope
lret
jg
cld
scas
mov
dec
out
jmp
fmull
call
cmpsb
mov
mov
jae
xchg
dec
cmpsl
mov
lock
fwait
int
sub
cld
test
fildl
idivl
test
adc
and
mov
les
mov
add
lahf
jge
push
inc
sti
cltd
loope
lea
mov
mov
cltd
jl
lds
cltd
je
sti
cltd
ret
mov
cli
and
rclb
jae
repnz
lret
pop
lock
fimull
ds
inc
sbb
sub
cmc
lock
mov
ret
outsb
cmp
or
pusha
or
or
and
test
mov
mov
jno
add
xchg
or
std
ret
mov
mov
xchg
add
enter
lock
jg
mov
pop
xor
mov
mov
push
arpl
jecxz
in
cmpsb
aas
test
addb
mov
xlat
jle
xchg
sbb
mov
stc
pop
mov
cltd
and
jmp
jmp
mov
test
stos
and
mov
adc
js
mov
jmp
dec
xchg
std
lahf
cmp
daa
jp
jno
dec
iret
jno
fldenv
mov
out
imul
icebp
jb
cmp
xor
inc
bound
les
push
leave
pop
mov
xchg
mov
fists
xchg
lret
repz
lret
imul
and
jbe
fisubl
test
add
pop
out
mul
fisttpll
imul
in
addb
add
dec
inc
dec
out
ret
xchg
loopne
adcb
push
pop
iret
push
loopne
out
test
out
daa
xor
pop
pop
filds
push
xorl
cld
ds
or
arpl
mov
xor
dec
fimuls
push
mov
pop
xchg
enter
pop
mov
outsl
test
mov
sub
and
stc
call
pop
das
sahf
out
aas
jle
fstl
dec
ljmp
sbb
mov
clc
pop
xor
adc
pop
xlat
sub
dec
div
add
inc
ret
rcrl
jp
xor
xchg
or
jno
call
mov
lods
adc
cmp
jae
mov
cmpsl
lods
in
xchg
pushf
jae
leave
xchg
sub
or
inc
fwait
jecxz
js
inc
adc
inc
adc
inc
lods
add
pop
scas
mov
lods
mov
mov
lods
sub
mov
mov
push
sbb
cld
push
mov
xchg
push
cwtl
dec
test
dec
mov
dec
scas
dec
lea
inc
mov
inc
sbb
inc
hlt
inc
faddl
cld
inc
xchg
imul
loope
cmpsb
imul
imul
dec
lcall
lcall
mov
aad
jecxz
mov
in
scas
call
in
adc
unpckhps
sub
or
aas
sarb
push
and
and
ret
mov
dec
shll
iret
iret
aas
dec
shll
iret
xor
shll
pop
jge
pop
adc
push
bound
mov
and
push
dec
push
hlt
inc
das
pop
test
cmpsb
xchg
cmpsb
ja
pop
dec
shlb
int
out
ljmp
hlt
inc
cmpsb
enter
gs
xchg
icebp
push
or
inc
push
arpl
mov
pop
rcrb
pop
jl
jo
mov
les
in
push
call
data16
mov
jecxz
lods
std
pop
lret
ljmp
imul
pop
int
jo
dec
sbb
incb
add
jb
aam
cs
loopne
mov
scas
mov
arpl
mov
mov
cs
sti
movsb
lret
fisttpl
fisttpll
clc
fiadds
pop
pop
jae
inc
test
in
sub
mov
push
mov
scas
test
and
lahf
enter
incb
ret
cmpsb
pop
cmp
in
cmp
loopne
push
les
inc
stc
adc
iret
jp
mov
cmp
sbb
or
cltd
push
ss
icebp
out
sbb
add
add
pop
dec
fists
mov
sahf
or
out
mov
dec
or
xlat
or
and
jge
xchg
cld
daa
insb
pop
test
daa
test
fistpll
lods
daa
pop
dec
rorl
xchg
sarb
dec
mov
stc
hlt
popf
or
sbb
ds
mov
mov
mov
movsb
xchg
clc
loop
mov
jne
rcl
cmp
aas
call
pop
adc
ljmp
sarb
xor
mov
push
lahf
cltd
ret
fsubr
out
inc
jecxz
mov
cmp
stc
inc
add
out
adcb
mov
push
pop
push
call
mov
in
cwtl
aas
pop
cld
stos
inc
and
add
orl
into
movsb
fwait
jg
loope
test
frstor
and
lahf
xchg
mov
xchg
mov
cli
sbb
popa
xchg
mov
xchg
and
pop
jno
sbb
adc
jge
and
jns
aas
mov
lcall
pop
or
in
mov
pop
ljmp
mov
mov
cmc
dec
add
pop
push
out
jl
fildl
test
daa
xchg
fists
pop
mov
out
add
fstpt
pop
testl
jmp
push
jge
cmp
xchg
mov
stos
cmpb
aad
loopne
les
jg
ret
pop
add
test
out
jnp
ror
jno
in
adc
lahf
call
cmp
lock
outsl
out
pop
sbb
ja
pop
or
lahf
sbb
aad
pop
scas
pop
jno
pop
dec
shlb
in
pop
imul
push
cli
adc
lods
pop
jl
fsubl
popf
add
inc
fisubrl
xchg
adc
sub
cmp
mov
movb
jle
lahf
sahf
lret
pop
dec
subb
inc
ret
inc
jb
or
icebp
inc
divl
or
or
je
mov
aas
fcos
mov
mov
in
add
jl
in
sti
iret
std
mov
cmpsl
xor
repz
mov
subl
xchg
imul
cmpsb
mov
xor
psubb
lock
ja
or
mov
pop
lods
pop
xorl
divb
jg
push
out
jecxz
push
je
push
fcomi
gs
and
lcall
aaa
flds
pop
adc
adc
xchg
pop
je
mov
add
fldenv
stos
es
or
or
mov
mov
in
mov
mov
cs
pop
pop
push
cltd
mul
mulb
fstp
pop
test
and
jnp
into
ss
data16
fistpll
addr16
int
imul
nop
mov
mul
jbe
cli
xor
dec
dec
test
mov
mov
js
mov
fsubs
rcll
jns
pop
jmp
jo
std
dec
in
mov
lods
push
into
in
pop
add
jg
std
loope
ret
pusha
fisubs
xchg
jmp
gs
shl
ljmp
push
jge
out
cmp
call
pop
das
jb
cmp
jno
lea
into
ja
cmp
je
ja
add
cwtl
insb
add
test
out
es
dec
fistpll
aas
jmp
jmp
in
les
and
add
mov
fsubl
scas
mov
loop
jge
sub
dec
inc
scas
and
out
cmp
ficompl
dec
fsubrl
fcoms
or
push
cmpsb
pop
ja
fdiv
fstl
ja
mov
pushf
in
lock
scas
cli
mov
sti
cmp
enter
incl
xor
jl
out
adc
and
sarb
sti
lea
ljmp
dec
incb
push
sbbl
and
sbb
mov
ret
nop
sub
out
or
test
bnd
mov
outsl
loopne
pushf
mov
jle
and
fwait
cmpsb
pop
mov
inc
ss
test
shl
sbb
dec
loope
shll
sbb
sbb
lods
pop
out
pop
dec
hlt
sbb
jmp
sti
jecxz
cmp
leave
out
add
sbb
imul
push
repz
shll
rolb
and
outsb
clc
pop
dec
cmp
stc
je
fisttps
test
nop
and
cmp
dec
shll
or
jbe
adc
daa
pop
cmp
add
out
pop
xchg
inc
test
or
jl
mov
jnp
pop
roll
lock
pop
aad
das
xchg
daa
mov
shrl
xchg
ss
sbb
ret
imul
arpl
clc
popa
in
dec
adc
pusha
pop
hlt
pop
in
pop
mov
pop
in
sub
lret
mov
pop
pop
pop
movsl
push
in
mov
push
push
push
clc
push
call
lret
push
dec
lock
call
mov
mov
dec
dec
dec
dec
dec
inc
lahf
sub
mov
inc
inc
push
inc
in
inc
xchg
mov
jmp
aas
ds
mov
cmp
cmp
mov
aad
cmp
push
mov
ret
xor
rolb
push
inc
xor
mov
push
adc
sub
sub
sub
sub
daa
in
inc
push
es
inc
and
adc
and
and
rcrb
fnstenv
xchg
xchg
int
fisubl
aad
sub
fldenv
xchg
mov
fcoms
in
adc
xchg
pop
push
cmp
in
stc
inc
test
and
inc
sub
push
dec
add
pop
sbb
xchg
pop
dec
pop
icebp
stos
cld
out
iret
icebp
push
cli
lahf
ret
test
add
sar
lock
sub
xor
and
hlt
je
repz
sbb
gs
aam
out
icebp
jae
mov
push
lret
ja
scas
stc
das
loope
inc
out
push
dec
xor
scas
in
in
repz
cli
mov
into
jbe
mov
scas
scas
ss
sbb
hlt
inc
adc
nop
into
ret
lock
push
outsb
mov
jo
xchg
jecxz
cmpsb
imul
dec
sub
cmpsl
mov
adc
pop
cltd
jbe
pop
push
lcall
pop
sub
xor
dec
mov
fadds
stos
jecxz
xchg
test
int
or
and
adc
stc
mov
int3
aas
test
loop
lss
pop
xor
xlat
daa
lahf
test
fwait
aas
rcll
xchg
pop
jl
cmp
test
pop
cld
enter
sbb
mov
popf
aam
mov
mov
cmp
orl
test
push
stc
cmpsb
je
add
jbe
imul
pushf
je
testl
mov
inc
push
test
adcl
lock
fnstsw
cld
xchg
je
jns
decb
sarb
cmp
scas
aaa
scas
into
lods
stc
daa
dec
xchg
clc
inc
cmp
js
cmc
aaa
std
xor
movsb
hlt
mov
dec
out
and
dec
sub
jl
aas
xchg
jp
sti
mov
imul
and
or
out
xchg
jne
scas
jge
fisttps
ljmp
insb
add
lea
pop
add
dec
adc
stos
in
xor
pushf
jmp
mov
iret
or
jg
mov
push
push
rol
pmaddwd
lret
inc
mov
jp
add
cmpsb
outsl
cmpsb
mov
mov
jecxz
test
jb
xchg
inc
sub
data16
or
test
ror
jecxz
add
or
mov
or
sub
into
aad
jmp
mov
cwtl
sub
fiaddl
xchg
mov
int
dec
nop
cmc
mov
cmc
mov
scas
scas
test
cmp
inc
enter
in
outsl
cmp
shr
or
pop
je
repz
jnp
int
xchg
sub
lret
stc
mov
lret
mov
mov
stos
rcl
sub
inc
test
pushf
add
push
pop
cwtl
fwait
in
mov
in
sub
jns
rorl
xor
in
or
mov
repnz
int
in
mov
lret
mov
lret
mov
lret
mov
mov
sub
mov
mov
push
xor
mov
inc
mov
mov
aaa
mov
lcall
lcall
loope
mov
adc
jbe
jne
je
jae
cld
jb
mulb
jo
outsl
mov
inc
adc
inc
arpl
imul
in
push
push
imul
gs
jle
data16
add
outsl
mov
sub
sbb
sbb
clc
mov
mov
mov
mov
lcall
lret
mov
nop
xchg
xchg
lcall
mov
dec
mov
pop
hlt
outsb
outsb
outsb
outsb
ja
daa
outsl
lahf
mov
pop
jnp
loopne
sub
mov
shufps
add
in
testl
pop
std
imul
dec
pop
icebp
lods
inc
jecxz
lock
xlat
mov
clc
or
sti
out
movsl
lret
jp
popf
sub
in
or
pop
sbb
mov
ja
xor
cmpsl
stos
lods
scas
lcall
pusha
cwtl
lods
out
xor
out
sbb
shld
xchg
sub
xchg
aad
sbb
jne
out
inc
xchg
add
mov
xor
cmc
mov
repz
lods
or
test
and
push
ja
cli
in
mov
test
fimull
mov
add
ljmp
mov
fcmovb
jnp
push
cld
inc
xchg
adc
or
xchg
stos
xor
aaa
pop
push
add
into
pop
or
in
dec
mov
int3
lods
rcrb
or
sbb
push
daa
pop
jle
test
cmp
testb
adc
mov
fsts
mov
xor
aas
push
mov
stc
sarl
and
in
sbb
add
dec
idivb
cli
loopw
cmp
and
jne
loope
ret
pop
push
daa
push
push
das
pop
mov
int
out
mov
jae
mov
cld
pop
lea
xchg
add
adc
jle
mov
lock
cltd
in
or
rclb
pop
shll
add
mov
arpl
pop
dec
pop
mov
int3
adcl
lds
pop
sub
mov
ret
aas
pushf
and
mov
xchg
fnsave
push
setg
or
mov
fcmovnu
icebp
mov
add
cmpsb
sbb
int
cld
pop
pop
mov
inc
ffreep
and
push
call
leave
push
sub
test
out
clc
xchg
cld
lcall
mov
rorl
enter
mov
mov
icebp
pop
cmpps
push
sub
dec
cmp
aas
negl
jb
je
jmp
je
jp
cwtl
scas
fdivrs
fildll
lret
repnz
jge
jns
adc
mov
paddq
loopne
xchg
push
mov
loopne
mov
fmull
fimull
mov
xchg
loopne
lahf
outsb
lahf
sub
add
mov
mov
rcrb
pop
aas
imul
fiaddl
fmuls
std
sub
add
mov
out
sub
popf
pop
mov
movsl
xor
mov
aaa
fwait
xor
pop
nop
push
js
rorb
jae
sub
dec
adc
cltd
xchg
ret
mov
fisttps
inc
dec
es
xchg
push
mov
inc
gs
out
jae
sarb
loope
and
jge
movsl
add
cmp
jecxz
mov
sbb
cli
push
mov
testb
dec
inc
cmp
pop
xor
mov
daa
in
cld
mov
adc
mov
iret
ret
loop
lcall
mov
cmpb
out
cmpsb
aad
xchg
add
movzwl
xlat
fistpll
mov
out
xor
out
mov
push
xchg
stos
ficoms
or
fiaddl
jp
jae
jl
hlt
and
jle
pop
pushl
ret
aam
add
sar
lea
jp
mov
add
sarl
lret
fistpl
inc
ljmp
inc
or
subb
das
push
push
xchg
das
movsb
lea
out
ret
adc
mov
je
and
fildll
cmpsb
stc
dec
jno
imul
ja
mov
ds
mov
outsb
inc
push
mov
stc
pop
push
xchg
clc
stc
jge
sti
addb
cmp
out
jnp
adc
xchg
int3
mov
repz
pop
fsubrl
mov
inc
pop
lods
pop
cmp
xchg
mov
sub
dec
out
push
scas
xlat
loopne
mov
icebp
mov
cmp
js
ds
nop
mov
mov
hlt
les
pop
xchg
push
push
mov
lea
inc
inc
and
xchg
mov
inc
lock
pop
call
shlb
mov
and
sub
aaa
jp
jecxz
inc
inc
jl
cmpl
or
ljmp
inc
mov
pop
mov
icebp
add
pop
pop
jbe
out
cmp
and
jmp
sub
push
sub
xchg
xchg
out
mov
fistl
push
push
popa
mov
pop
out
lds
add
pop
push
xchg
xchg
adc
mov
fcoms
dec
rcrl
mov
fiaddl
ds
mov
dec
ds
dec
adc
pop
adc
inc
popf
inc
inc
lds
roll
push
inc
int
mov
ds
push
in
hlt
cmp
cmp
cmp
hlt
inc
popf
xor
sub
sub
mov
sub
daa
sub
adc
lret
hlt
mov
pop
xchg
pop
jle
dec
fsubrs
dec
loopne
aam
mov
sub
and
jle
test
test
mov
std
in
mov
mov
xchg
sub
sbb
icebp
das
adc
mov
adc
addr16
mov
jl
in
xchg
dec
lock
adc
dec
loope
mov
pop
imul
push
sbb
jae
xchg
loop
cmp
cli
pop
inc
ficoms
or
movsl
push
fidivrs
xchg
cld
loope
xorb
test
pop
cmp
xchg
das
clc
push
jl
out
into
inc
enter
lods
mulb
push
jmp
roll
jnp
out
insb
lahf
in
inc
cmp
push
or
xchg
xchg
int3
xor
xor
or
jle
mov
dec
or
pop
and
cmp
jp
cmp
mov
filds
jle
mov
nop
nop
in
in
shl
push
mov
add
add
hlt
sub
fwait
iret
data16
loopw
mov
or
mov
pop
or
in
or
pushf
and
pop
xchg
int
nop
sahf
lea
xchg
mov
mov
sbb
xchg
fwait
lcall
jp
adc
cmp
mov
cmpsb
call
fsts
es
mov
cs
icebp
pop
cmpsb
adc
js
dec
xor
ret
sub
iret
cmp
adc
sub
jg
jmp
xchg
jns
movsl
mov
cltd
repz
ljmp
inc
xchg
fwait
push
loopne
addr16
leave
push
pushf
mov
add
push
lods
dec
das
incb
ja
xchg
iret
cmp
hlt
daa
cmp
stc
mov
xchg
mov
dec
pop
xchg
push
mov
pop
jp
xchg
into
les
sub
or
lret
xchg
sbb
add
or
lods
jl
sti
repz
cli
roll
rorl
push
dec
sti
fwait
in
xchg
mov
lods
cmp
imull
adcb
pop
sbb
lock
dec
lret
fsts
les
mov
stc
cmp
test
hlt
sti
adc
icebp
cmc
cs
pop
cltd
cmp
test
inc
dec
repnz
jbe
test
mov
mov
jecxz
inc
jno
scas
mov
cli
arpl
das
lahf
cld
and
cmp
ds
cli
rorb
xchg
dec
mov
pop
dec
popf
or
imul
or
or
mov
or
xchg
mov
mov
imull
cmp
sub
aad
mov
lret
mov
lea
xor
mov
mov
std
loopne
fwait
outsb
mov
cld
cwtl
in
mov
icebp
fnstenv
and
pop
mov
nop
pop
mov
lret
lods
nop
sahf
cmp
sbb
sbb
mov
outsb
mov
ret
fnstcw
pop
adc
daa
pop
in
das
dec
and
bsr
adc
push
sti
jle
pusha
ljmp
xchg
mov
mov
lods
xchg
imul
cld
mov
add
call
cmp
ret
daa
mov
clc
lcall
adc
mov
jno
push
in
je
jb
aaa
lock
out
rorb
xlat
push
stos
dec
add
popf
int3
aad
or
popf
icebp
mov
dec
fisttps
pop
lods
rclb
fincstp
clc
inc
out
gs
lret
dec
divb
out
mov
rolb
xlat
dec
aaa
ficomps
push
popa
popf
lret
cmp
cmp
mov
pusha
xchg
stc
sbb
stc
pop
mov
pushf
stos
pushf
stos
push
adc
pushf
stos
cmp
stc
xchg
int3
and
adc
lods
fadd
dec
rorl
jnp
cmpsl
dec
and
pop
in
lret
call
pop
cmpsb
inc
fdiv
mov
sahf
cwtl
cwtl
push
movsl
andb
and
and
jb
enter
and
dec
icebp
addr16
xchg
sub
lcall
shrl
seto
mov
pop
lcall
loop
sub
inc
xor
jge
faddl
adc
hlt
stc
imul
addl
test
dec
xchg
inc
outsb
xlat
sub
int3
hlt
ljmp
jne
mov
imul
fucomp
and
incb
sti
pop
lods
cmpsl
imull
push
cmp
jmp
leave
jmp
addr16
cmpl
add
xchg
std
icebp
cmp
add
cmp
lcall
mov
jg
lcall
push
mov
xchg
iret
xor
sub
cmpsl
mov
ret
inc
add
in
lock
mov
test
sti
lahf
sti
enter
inc
xchg
ret
dec
push
je
sub
inc
fcoml
ljmp
or
das
add
ss
add
or
lcall
dec
adc
jb
mov
repz
and
scas
divb
out
dec
xor
daa
jb
ds
fcomip
xchg
cli
ficomps
addr16
dec
xchg
fcomi
fisubs
cmpsb
out
jb
cmp
mov
and
cmp
repz
inc
fsts
movsb
xchg
roll
data16
jecxz
icebp
mov
mov
push
xchg
jecxz
repnz
add
add
add
stc
leave
dec
and
pop
ficomps
add
idivl
stc
cmpsb
sbb
shlb
add
je
mov
mov
sbb
sarl
mov
sbb
sbb
xchg
lea
sbb
fwait
xchg
std
movl
cmp
sub
mov
add
popa
jb
and
and
or
and
xor
fcomps
stc
sbb
daa
cmpsb
les
sbb
adc
scas
sbb
icebp
lea
sbb
scas
pop
add
add
cmp
cmp
pop
jne
jns
dec
jge
mov
iret
lods
ret
fisubs
mov
or
pop
add
cld
fisubs
sub
fsave
lea
mov
xchg
hlt
or
xchg
cld
repnz
ljmp
sub
icebp
test
add
clc
out
add
push
jp
je
mov
pop
fstpt
cmp
test
sub
inc
adcb
pop
stos
lahf
pop
test
je
mov
shr
dec
and
mov
inc
out
aam
add
and
mov
stc
je
pop
cli
push
fs
int3
cs
cmp
add
fcmovnb
mov
mov
jmp
jl
enter
decb
jb
ds
dec
out
jnp
test
out
inc
inc
add
out
arpl
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
or
shl
mov
ret
lock
mov
jne
lock
sub
mov
out
mov
xchg
jno
std
jnp
mov
xchg
jg
pop
in
xchg
mov
pop
in
jns
mov
pop
out
repnz
pop
xor
mov
into
stc
cmp
mov
das
test
jle
movl
jne
pop
mov
add
call
push
stos
lahf
cmp
inc
stos
test
dec
repz
aam
and
stos
lret
jmp
rep
mov
inc
cmpsl
lods
and
scas
pop
push
test
mov
add
dec
cmpsb
stc
je
xlat
fimull
add
and
mov
mov
loopne
sarl
lahf
adc
jbe
or
roll
jecxz
xchg
stos
push
lahf
mov
add
inc
mov
ljmp
sti
jbe
je
out
je
nop
pushf
sbb
je
clc
test
cmp
shll
adc
mov
push
mov
outsb
mov
out
dec
xchg
andb
pop
cltd
loopne
hlt
sbbb
lods
cmpsl
in
add
scas
aas
shrb
fstp
dec
push
push
mov
js
test
rcll
ja
cmp
sub
mov
mov
pop
stc
loop
xor
daa
mov
cwtl
jg
ja
pop
popa
cltd
push
pop
jle
jmp
jb
cmpsb
pop
repnz
inc
ljmp
xlat
pop
test
pop
mov
sti
mov
jbe
pusha
cmp
inc
and
movsl
insl
mov
mov
cmp
or
stos
jmp
add
lds
sbb
mov
mov
out
or
lock
ds
inc
push
int3
adc
hlt
or
in
xchg
test
add
je
push
stc
push
cmp
mov
push
lock
fucomip
out
int3
aaa
lahf
movsb
mov
test
jmp
push
inc
dec
jg
mov
add
les
andl
popa
fdivs
jbe
scas
outsl
into
cld
or
push
or
xor
sub
mov
mulb
cmp
cmp
dec
sbb
pushf
cmp
enter
test
cmpl
aaa
jecxz
inc
call
or
mov
inc
fidivrl
xchg
ret
movsb
inc
rorb
aas
dec
out
or
sbb
jmp
out
scas
sub
add
jbe
mov
and
andl
popa
inc
push
pop
dec
xlat
mov
enter
push
cs
mov
cmpsb
inc
test
clc
repz
fstps
sbb
idivl
mov
movsb
and
jnp
in
cmc
stos
lret
repz
in
clc
mov
jb
xchg
je
cltd
cmp
aas
sub
ds
sub
hlt
scas
mov
rcrb
pop
aas
push
push
dec
jbe
stos
lahf
imulb
xchg
cmc
xchg
out
dec
lret
aam
or
cmp
mov
test
jmp
cwtl
mov
cmp
jmp
mov
mov
mov
negb
loop
xchg
mov
lret
sahf
jecxz
jb
shrb
jmp
cmp
faddl
in
mov
or
mov
in
add
xchg
icebp
std
dec
cwtl
shl
in
lret
inc
dec
movsb
and
in
lahf
sbb
ljmp
cmpsl
in
and
sti
cs
in
repz
xchg
push
pop
sbb
xchg
hlt
mov
test
das
xchg
mov
xor
lahf
out
xlat
and
stos
cmp
je
and
xchg
rcrl
shll
push
cmp
inc
mov
jmp
push
lock
mov
jnp
dec
mov
mov
mov
stos
leave
jle
dec
aaa
jle
out
cmp
lret
ret
fsub
xchg
jne
scas
cmpl
pushf
scas
xchg
nop
sub
mov
xchg
decl
cmp
clc
xchg
fsubp
insb
vxorpd
jcxz
sbb
mov
fadd
int3
inc
ds
dec
pop
jp
push
add
and
adc
jecxz
push
in
adcl
mov
test
out
sahf
pop
dec
in
sarb
lods
mov
arpl
push
xchg
cmp
lcall
pop
stos
xchg
rcrl
jp
sbb
xchg
in
cmp
xchg
les
jmp
std
inc
jnp
mov
sbb
stos
jnp
ret
push
scas
lods
cmc
icebp
clc
jo
pop
cwtl
pushf
xor
in
push
iret
mov
lock
jmp
lods
adc
lahf
mov
pop
roll
pushf
push
nop
add
movsb
dec
cli
push
lds
jmp
stos
xchg
adc
inc
cli
movsb
push
pop
or
mov
fwait
or
mov
pop
lock
push
movsb
das
xchg
ds
inc
add
hlt
dec
jne
lock
out
mov
je
out
mov
add
inc
inc
out
ret
jbe
outsl
je
test
pop
pop
decl
std
sbb
gs
cmp
ljmp
push
imul
call
subl
cli
pop
dec
cmp
jbe
and
push
popf
mov
in
scas
out
adc
pop
out
hlt
out
dec
lock
mov
popf
xchg
f2xm1
sbb
hlt
insl
xchg
mov
jl
cmc
or
gs
pop
xor
jb
xlat
jmp
sti
loopne
mov
in
pop
push
mov
iret
pop
lock
xor
das
rolb
pop
lret
add
ja
hlt
sarl
jnp
in
outsl
push
sub
add
cld
xor
xor
xor
fdivs
sahf
pushf
aam
dec
rcll
aam
jmp
pmulhuw
mov
and
and
and
and
dec
ja
je
sbb
and
sub
pop
shlb
and
adc
mov
hlt
lcall
pop
xchg
add
pop
stos
dec
ffree
popf
test
scas
arpl
outsb
pop
mov
pop
stos
xchg
fbld
jmp
sub
out
cmpsb
les
and
mov
sbb
mov
ljmp
mov
add
cmp
push
mov
pop
cmpsl
xchg
das
fildll
ljmp
fisttps
sub
cmp
out
repz
addr16
fldt
ljmp
jo
jecxz
push
imul
jp
xchg
rcrb
mov
addb
add
pop
jge
flds
in
add
movsl
lret
arpl
inc
je
jge
inc
jo
mov
jnp
jbe
mov
gs
inc
je
mov
out
shl
lret
fistpll
cmc
mov
jp
mov
popf
hlt
btc
xlat
inc
push
and
ljmp
jg
scas
xor
mov
hlt
sub
and
jne
add
xchg
mov
pop
push
pushf
mov
iret
pop
jae
mov
pop
mov
pop
bound
pop
xchg
addb
jns
inc
out
dec
stc
cmpsb
pop
jae
jge
testb
jno
sub
loope
mov
stos
fstps
lods
dec
test
cs
leave
cli
imul
mov
sti
inc
lods
rcrl
outsb
lea
mov
mov
cmpsl
or
cli
outsl
jbe
ja
add
ror
aas
pop
daa
sahf
dec
leave
bswap
or
push
test
or
mov
jmp
xchg
adc
repnz
inc
or
push
in
push
pop
inc
in
jnp
incl
or
std
bnd
ret
iret
and
movb
jae
outsl
jnp
les
adc
in
jne
pop
iret
andb
mov
out
mov
iret
fbstp
sahf
jo
cs
fnstsw
mov
fwait
in
add
sub
pavgb
jae
inc
cmpsl
fnstcw
cli
outsb
test
subb
aas
inc
out
jmp
insb
decl
call
cltd
pushl
mov
decl
cli
sbb
sub
in
dec
cld
test
int
mov
int3
jb
stc
jmp
xchg
iret
dec
sbb
aaa
daa
out
in
std
lret
xchg
cmpsl
fwait
cmc
dec
ljmp
mov
and
adc
mov
movsb
enter
outsl
pop
mov
push
cs
stc
divb
mov
mov
and
icebp
jecxz
imul
or
pop
outsb
add
or
mov
in
adc
pop
loope
aad
call
adc
aaa
shll
push
push
and
xorl
mov
mov
push
dec
scas
mov
cli
sti
cli
mov
loop
xchg
xchg
xor
neg
inc
jp
push
jne
enter
arpl
scas
add
pop
mov
sub
sub
idiv
orl
dec
ss
dec
mov
arpl
cmp
sub
pop
fistpl
jg
into
mov
daa
sti
jle
inc
call
inc
inc
out
std
pop
add
xchg
iret
mov
shlb
and
out
cld
std
pushf
js
push
adc
jmp
ljmp
test
mov
cmpsb
fpatan
dec
repnz
out
popf
out
pop
iret
sub
loopne
repz
xlat
out
mov
outsl
and
enter
ljmp
rcll
adc
dec
jle
repnz
lods
pop
push
push
jmp
pop
gs
sbb
jnp
pop
mov
mov
mov
mov
fdivr
adc
xor
and
lock
jge
mov
xchg
xchg
cli
pop
jbe
sub
lret
sbb
jmp
addr16
sub
cld
jmp
repnz
ljmp
repz
sti
cmp
in
outsl
inc
dec
cmc
dec
out
sahf
inc
and
or
imul
jg
dec
adc
inc
cs
out
enter
pop
sbb
add
mov
repnz
and
pop
pusha
xlat
mov
lea
pop
inc
dec
or
sti
pop
cmpsl
mov
clc
dec
pop
push
push
es
lahf
inc
testb
lret
pop
scas
insb
mov
and
mov
xchg
add
out
nop
xlat
mov
xchg
bnd
mov
cld
adc
lret
addr16
mov
mov
sar
mov
xchg
gs
stos
mov
in
mov
add
add
mov
xchg
pusha
push
mov
call
lods
mov
sbb
pop
leave
pop
mov
adc
mov
inc
mov
pop
insl
mov
mov
leave
add
cli
pop
jne
pop
lock
xchg
xchg
adc
insl
jge
jg
div
loope
stos
adc
shrb
pop
xchg
mov
sti
dec
in
pushf
addl
stc
std
pop
cli
cld
pop
add
cltd
scas
in
jl
mov
push
daa
fisubl
pop
jb
les
push
cmp
out
cmovg
add
pop
pop
cmpsl
mov
pop
lea
pop
imul
ljmp
mov
sete
aam
jle
ret
out
out
add
rcrl
iret
lods
jecxz
addr16
inc
iret
or
xor
filds
or
jl
push
push
or
pop
pop
cmpsl
loop
cmp
add
jg
fbld
rcrl
pop
scas
jmp
xlat
mov
pause
fiadds
inc
mov
mov
push
bnd
cmpsl
or
data16
xor
scas
cmp
mov
cwtl
mov
jge
fwait
testl
jg
xchg
mov
adc
movsb
aad
pop
pop
sub
repz
sar
jge
jp
cmpsb
loop
mov
push
daa
ret
push
sbb
sti
and
jl
incl
mov
cmp
loopne
adc
outsb
mov
imul
mov
ror
out
mov
in
dec
pop
mov
cld
cmp
push
dec
cmp
cmp
shlb
out
sti
cmp
fistpll
mov
xchg
cld
pop
add
push
pop
mov
mov
inc
repz
push
and
or
jp
mov
std
outsl
into
iret
into
jle
outsl
in
daa
iret
movsl
cmc
ss
mov
cmc
jecxz
cmc
in
mov
sbb
int
aas
iret
daa
iret
push
lods
aaa
cmp
cmpb
insl
test
pop
imul
mull
into
addr16
scas
pop
sbb
aas
jle
mov
pop
push
jg
dec
xchg
dec
std
pop
jg
mov
popa
jmp
mov
xlat
pop
cmp
dec
or
mov
iret
cmc
mov
xor
jp
jp
mov
outsl
repz
jmp
addr16
movsl
sahf
push
fistpl
movsl
add
push
inc
imul
mov
scas
hlt
insb
loope
inc
js
repnz
pop
xchg
mov
jno
and
cmpsb
cmpsb
pop
ja
cli
repnz
cmp
bound
gs
xchg
inc
add
ds
mov
mov
sahf
and
out
imul
insl
lods
in
testl
daa
inc
sbb
push
xchg
mov
fnsave
in
std
aaa
jns
fnstenv
negl
test
in
xchg
mull
adc
cli
xlat
pop
movsl
xor
faddl
lock
mov
div
mov
pop
jae
cmp
cmpsl
in
xor
cwtl
add
jge
std
sbb
lock
xor
dec
fistl
jge
loop
pop
insl
add
and
js
cmovg
fucomp
push
cmp
jge
cltd
iret
mov
add
stc
stos
loopne
inc
mov
and
sub
jbe
decb
mov
insl
je
ffreep
fidivrs
mov
fcmovne
sub
sti
rol
outsl
cmpsl
into
int
xlat
xlat
lods
aas
loopne
mov
enter
pop
sub
out
ja
dec
jle
loopne
and
xor
nop
fwait
lods
dec
out
push
xchg
setge
cli
vmovhps
push
lcall
xchg
inc
adc
fidivs
ret
mull
mov
aad
pop
xor
not
xchg
insl
incb
testl
or
cmp
adc
repnz
jl
sbb
mov
mov
movsl
add
xlat
inc
imul
insl
sbb
mov
inc
sbb
cmp
xlat
iret
aam
sbb
iret
mov
mov
psubq
popa
jge
lret
or
xlat
arpl
addr16
dec
into
aaa
mov
ffreep
inc
adc
pop
insb
aaa
mov
jge
sub
addl
jle
mov
call
add
add
imul
sbb
cmp
aas
sbb
hlt
aas
fdivr
fdivr
inc
and
sarl
cmp
out
pushf
sti
std
cmp
fcompl
aaa
ss
sti
fsubr
fs
out
cwtl
in
fs
push
movsb
mov
iret
pop
jg
stc
cmc
fnsave
loop
mov
push
jne
int
xchg
js
movl
out
cmp
pop
icebp
shlb
pop
lock
inc
pushf
out
mov
lret
dec
ja
clc
popf
push
std
pushf
dec
jmp
jecxz
fs
add
push
loope
jge
add
pop
adc
push
stc
mov
push
xchg
stc
in
ficoml
stc
dec
in
cmp
rorl
or
mov
or
dec
inc
mov
xlat
cmc
loope
push
lahf
sarb
xchg
mov
insb
adc
mov
or
pop
pop
enter
je
jp
sar
popf
inc
push
ljmp
sahf
scas
out
test
jb
pushf
mov
pop
pop
mov
negl
or
out
add
mov
sbb
mov
pop
into
ss
outsb
push
dec
dec
xor
idivl
xchg
lock
ljmp
dec
shl
mov
int
jmp
mov
cmpsl
lahf
fwait
cmp
stos
mov
std
outsl
cmc
fbld
cmp
insl
cld
mov
cmp
fistps
iret
fcoms
clc
push
into
icebp
repz
jecxz
popa
inc
cld
leave
mov
push
lret
cld
dec
int3
push
incl
sbb
in
cld
sub
jle
mov
out
mov
js
test
cmp
std
xlat
stos
xor
fdivr
in
mulb
scas
sbb
cmc
lods
rorl
sahf
shr
outsl
dec
mov
mov
pushf
call
popf
mov
ljmp
test
nop
rcr
mov
mov
mov
jbe
testl
mov
insl
hlt
jns
fstl
leave
call
pop
lret
dec
sbb
mov
popl
mov
jne
out
idiv
fs
xchg
aas
lcall
jne
pop
push
fsincos
cmc
icebp
and
imul
and
xchg
fwait
test
xchg
ss
lahf
mov
std
hlt
jmp
repz
mov
sub
mov
xchg
mov
jmp
pop
cmp
js
shrb
stos
out
push
adc
jp
xchg
mov
cmp
nop
mov
in
xlat
pusha
jl
push
ljmp
jle
in
in
in
xlat
xchg
decl
out
les
ret
jbe
arpl
out
les
xchg
push
scas
inc
mov
xchg
mov
mov
nop
popl
std
cli
adc
nop
stos
mov
pop
xchg
movsb
jnp
in
xchg
out
mov
aam
xchg
cmp
push
xchg
mov
loop
xchg
out
fcoml
loop
push
xchg
pop
mov
ja
lahf
rclb
fistpl
cmp
repnz
out
enter
inc
test
out
mov
xchg
xchg
iret
xlat
xchg
aad
xchg
lcall
mov
repz
lods
lods
jb
lcall
xchg
lea
mov
lods
xlat
fisubrl
mov
test
xchg
jb
int
repz
decl
and
sub
outsl
xlat
out
scas
cmpsb
jl
xor
mov
incl
hlt
push
out
rcrb
lods
out
mov
push
repz
pop
sahf
add
in
xchg
dec
aad
cmp
mov
cld
call
jb
mov
jmp
in
and
cwtl
mov
cmp
and
and
push
jns
mov
ficomps
mov
xchg
lock
div
shll
mov
mov
sub
in
cli
mov
add
and
xchg
test
mov
mov
xchg
bound
dec
into
outsb
mov
or
daa
pushf
mov
idivb
ds
dec
mov
xchg
xchg
mov
jle
jns
cmc
imulb
out
daa
sahf
pushf
or
test
nop
lcall
std
mov
sub
rol
mov
std
mov
adc
lock
out
out
xor
lret
hlt
sbb
xchg
xchg
and
add
adc
push
and
in
addr16
rcl
sti
xchg
icebp
xchg
mov
jno
mov
out
and
in
test
lods
insb
ret
push
cld
je
cwtl
mov
xchg
cld
mov
mov
sbb
in
push
jnp
cmp
loopne
shrb
ljmp
les
sahf
xchg
aam
nop
out
fsubrp
jmp
aas
cmp
lods
jl
push
in
icebp
xchg
cli
pop
repz
and
int3
jno
out
mov
cmp
cmp
jl
lods
sahf
mov
mov
dec
in
imul
pop
jl
fs
mov
mov
mov
lret
sub
mov
mov
xor
ljmp
negb
xlat
pop
fistpll
inc
xchg
mov
cld
pop
adcb
fisttpll
xor
sub
mov
orl
jge
lcall
inc
rol
ret
out
ror
mov
xchg
sarl
rorb
sarb
testl
sub
daa
rcrb
pop
rorb
pop
ror
add
loopne
iret
test
and
adc
fcmove
into
mov
mov
into
or
into
and
insb
into
fs
pop
into
push
into
dec
into
sub
and
adc
repnz
dec
int
int
add
add
int
int
int
int3
lahf
int3
jne
insl
int3
dec
int3
xor
pop
int3
mov
lods
lret
mov
jnp
jbe
inc
lret
cmp
xchg
stos
bswap
xor
into
cmp
add
movsb
int3
pop
lret
es
adc
enter
enter
enter
enter
add
enter
jecxz
aad
mov
dec
movl
sub
sbb
or
cli
nop
add
mov
mov
movsl
nop
pop
hlt
lds
add
les
les
dec
les
les
les
les
inc
in
enter
add
add
jg
inc
ret
xor
and
sbb
fadd
mov
cmp
sub
and
adc
push
ret
call
sarl
roll
rorb
scas
cmpsb
std
add
add
movsl
into
or
clc
int
int
int
int
int
int
int
int
int
int
int
mov
add
dec
ret
enter
lahf
rcll
mov
pop
rclb
aas
sub
mov
inc
push
add
mov
pop
iret
dec
iret
inc
iret
and
sbb
repnz
in
into
loop
fnstsw
pop
into
add
into
sbb
sahf
int
int
int3
lret
cltd
int3
jl
inc
int3
clc
lret
test
add
add
ja
aas
lret
sub
mov
movsl
leave
leave
dec
leave
ds
cli
enter
enter
enter
enter
sbbb
add
popa
sub
add
iret
movsb
pushf
mov
jg
pop
mov
and
adc
or
add
std
vpextrw
faddp
xlat
rcr
add
add
xchg
lds
lds
push
lds
lds
iret
leave
les
les
ret
cmp
xor
les
les
std
ret
icebp
ret
jmp
ret
faddp
xlat
ret
rol
stos
ret
test
jge
jb
push
ret
sub
lock
dec
ret
hlt
shll
add
cmpsb
rcll
cmp
sbb
sti
rcr
rol
ret
shlb
clc
aas
enter
push
iret
ljmp
adc
iret
js
jo
push
iret
dec
iret
inc
ljmp
aam
lods
into
fwait
into
xchg
into
or
into
pop
into
mov
xchg
int3
test
aas
int3
cmp
xor
xlat
lret
je
mov
lret
push
lret
dec
lret
inc
lret
sbb
add
jecxz
lods
add
add
lret
repnz
fmul
enter
xchg
leave
jg
dec
leave
sbb
jecxz
iret
enter
enter
movl
mov
xchg
dec
movb
daa
adc
test
add
lds
repz
jmp
les
movsb
les
sub
add
adc
ret
fld
rol
leave
ret
mov
mov
and
inc
adcl
ret
pop
ret
dec
ret
std
aam
add
ret
sub
mov
jae
and
shrl
daa
rcr
rolb
xchg
cmp
cli
iret
ret
iret
mov
and
sbb
adc
or
nop
add
into
lret
into
inc
into
cmp
xor
into
std
int
nop
mov
int
or
repnz
call
aam
lret
cmp
inc
cmp
push
lret
inc
lret
pop
lret
pop
lret
scas
add
add
leave
leave
ror
leave
cltd
leave
js
jb
insl
leave
push
leave
push
leave
sti
enter
enter
roll
enter
enter
scas
out
enter
enter
enter
add
enter
enter
enter
test
push
movb
movb
add
inc
push
ret
xchg
and
ret
cmpsb
ret
adc
mov
call
iret
in
iret
leave
iret
cmp
add
mov
iret
adc
out
aad
int
ror
into
lods
into
pushf
into
xchg
into
jl
jbe
outsl
into
fsts
mov
cs
int
int3
ficompl
add
lret
jns
arpl
dec
leave
aas
leave
sub
pop
leave
dec
enter
enter
fcmovne
inc
sbb
add
mov
test
mov
xor
sbb
adc
or
cld
loope
add
add
fld
roll
lds
lds
jge
ja
jo
inc
lds
filds
add
sbb
push
les
clc
ffree
lods
ret
movsl
push
xlat
and
cmp
insb
ret
inc
add
jg
js
push
pop
ret
xor
ret
add
adc
sub
ror
mov
shrl
or
lcall
push
cmp
sub
pop
rorl
cld
shl
push
enter
rcr
rolb
cmpsl
rcrb
sub
cli
jg
xchg
test
int
movsl
iret
hlt
clc
into
repz
jecxz
fisubs
push
sarl
mov
into
jge
add
data16
popa
into
pop
into
push
into
push
into
dec
into
dec
into
inc
into
cmp
add
or
push
into
sbb
int
int
int
int
mov
int
int
int
add
cld
add
or
push
aam
pop
int
int
int
cmpsl
negl
call
xlat
daa
or
int3
int3
scas
int3
test
int3
sub
loop
push
int3
out
lret
in
into
lret
mov
nop
add
lret
and
adc
lret
add
cld
lret
xlat
lret
lret
add
add
movsb
lret
inc
lret
or
leave
xchg
outsl
leave
pusha
leave
dec
leave
dec
leave
add
jge
cmp
xor
leave
sbb
leave
or
adc
test
addr16
cmp
add
add
pop
dec
enter
pusha
xchg
lds
popa
cld
add
mov
xor
in
out
loopne
jns
imul
push
shlb
mov
xor
ret
ret
xchg
cmp
or
rcr
jbe
cmp
and
push
rorb
adc
sti
sub
in
cli
xchg
pop
add
fmul
int
mov
iret
xchg
iret
jg
jp
cmpsl
mov
pop
add
stos
dec
into
xor
cmpsl
int
int
int
int
rolb
repnz
clc
ror
lret
mov
lods
int3
popf
int3
xchg
int3
pop
int3
push
inc
out
or
int3
dec
int3
inc
int3
inc
int3
cmp
xor
int3
sbb
pushf
adc
jmp
mov
popf
add
cmp
lods
fisubrl
pop
mov
dec
nop
inc
add
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
fisttpll
shl
mov
mov
out
or
push
pusha
repz
push
jb
inc
lahf
lcall
sub
leave
cmc
inc
movsb
fisttps
imul
paddd
decl
negl
or
sbb
lock
std
inc
ljmp
jmp
stc
in
lea
fsubs
negl
and
outsb
insl
dec
fsub
data16
sahf
lock
into
or
repnz
dec
into
jmp
jl
adc
loopne
clc
adc
mov
cld
inc
clc
gs
xlat
jl
cld
jg
push
jg
xchg
movsl
mov
lods
sti
cmp
xchg
jge
pop
cs
mov
cld
push
dec
mov
mov
xchg
gs
adc
xchg
cld
test
or
mov
mov
mov
and
je
jmp
mov
out
or
std
mov
repz
jge
into
popf
nop
or
mov
xchg
add
mov
scas
push
dec
adc
scas
push
jmp
xlat
lcall
hlt
mov
mov
das
add
scas
lods
mov
test
lods
jmp
cmpsb
psubw
push
mov
sbb
xchg
repz
repz
inc
jmp
cli
lret
cmc
xchg
lock
sub
mov
cmp
imul
repnz
or
pop
ffreep
push
popf
jmp
sti
inc
test
dec
mov
cli
pop
ficompl
push
sbb
cmp
cmc
inc
cmp
nop
xor
jp
stc
test
aas
add
cmp
cmp
mov
pushf
and
std
fwait
addr16
ret
mov
scas
dec
push
adc
ds
push
fninit
in
in
lret
mov
pop
lock
lods
aas
pushf
adc
jmp
or
dec
add
dec
push
push
mov
shlb
mov
int
orb
lock
test
add
mov
fsubrl
jne
mov
rcr
jl
aas
imul
dec
loop
ljmp
popf
inc
adc
lods
xchg
iret
daa
mov
pop
mov
jno
jg
repnz
inc
cltd
lock
test
xor
movsb
pop
add
es
cmp
xchg
mov
cmp
in
pop
out
lret
or
divl
insl
filds
fimull
xchg
leave
dec
push
hlt
cmp
add
cmc
mov
sbb
dec
rcll
mov
mov
test
in
mov
fldcw
iret
pop
lcall
call
sub
push
loopne
cld
sbb
dec
pop
les
push
push
hlt
jmp
loopne
stos
lret
and
mov
sahf
xchg
adc
popf
sahf
fsubl
popf
mov
cs
jmp
out
sub
leave
clc
jg
jmp
movsb
incl
add
add
jl
sti
mov
enter
add
fidivrl
pop
scas
and
xor
hlt
lds
cwtl
icebp
jb
dec
xchg
movsb
cwtl
movsl
mov
ret
dec
adc
ja
outsl
xor
js
int3
jb
dec
call
mov
mov
mov
loop
push
insl
dec
mov
mov
push
xchg
repz
ss
jne
xchg
mov
jl
ret
jnp
lret
ficoms
fisubrl
jo
in
ds
daa
add
test
xlat
iret
push
pushf
xlat
inc
pop
in
stos
and
out
and
pop
or
lock
out
jmp
mov
shll
popf
cmc
jmp
inc
jne
cli
cwtl
hlt
xor
nop
sbb
stos
ret
sbb
lods
lahf
mov
cmp
das
mov
mov
stos
clc
ds
out
in
jmp
push
clc
xor
icebp
leave
jae
mov
or
sbb
repz
mov
scas
mov
mov
fwait
fwait
dec
stc
out
mov
in
sbb
decl
cli
std
loopne
mov
xchg
fisubrl
out
mov
pop
cli
stos
pop
mov
stos
inc
iret
jmp
mov
jp
ja
call
hlt
cmp
daa
aad
dec
jl
repz
cmp
mov
jae
dec
xchg
dec
cwtl
and
push
addl
movsl
test
mov
test
aaa
aaa
aaa
negl
cwtl
mov
nop
xchg
dec
cmp
push
cmpsl
and
stc
fwait
dec
add
lret
lahf
push
push
push
adc
imul
pop
push
stc
push
add
push
add
aas
jae
stos
dec
lods
cmpsb
jmp
jle
mov
mov
xchg
shr
mov
fsubl
lcall
sbb
xlat
iret
out
fwait
movsb
mov
daa
pop
test
inc
mov
std
pop
stc
sti
filds
push
scas
sbb
adc
sbb
or
fbld
cmp
stos
loop
icebp
pop
cmp
cmp
sti
fwait
leave
pop
icebp
f2xm1
lods
cmp
pop
jns
out
xor
mov
xor
mov
jno
dec
enter
jge
inc
fwait
cmc
movsl
imul
mov
inc
enter
enter
push
fwait
or
inc
lcall
cwtl
cmc
xchg
in
and
xchg
add
sbb
int3
adc
jnp
push
xorb
addr16
dec
dec
ss
mull
rcll
or
mov
jns
in
popf
sub
rol
out
cmp
mov
mov
fistl
arpl
fdivr
sub
jb
scas
std
push
adc
cmc
xchg
mov
mov
mov
and
sti
pop
cmc
sahf
pop
adc
mov
pop
sarl
pop
in
cli
mov
in
sub
imul
xchg
xor
xor
mov
repnz
mov
incl
hlt
dec
push
jge
outsb
xchg
stc
daa
daa
push
stos
stos
aad
dec
cli
dec
xchg
imul
imul
jbe
clc
outsl
jl
jle
bound
stos
pop
decl
cmp
ret
xorb
loopnew
jae
sub
jns
sti
pop
fucomp
mov
push
cmp
stos
xchg
clc
jl
fidivs
lret
lods
sub
mov
push
clc
into
iret
movsb
lcall
aas
lahf
cli
hlt
cmpsl
add
pop
xchg
in
scas
lock
dec
and
push
test
jbe
pushf
cmp
jno
mov
inc
inc
cmc
pop
mov
jbe
xchg
cli
out
or
shl
cmp
cmc
xlat
pop
xchg
sti
repz
mov
shl
fstpl
call
pop
outsl
ffree
std
adc
adc
loope
idiv
mov
push
das
aaa
aaa
daa
xchg
jg
xchg
out
pop
jle
cld
mov
cld
pop
pop
pop
inc
sti
mov
push
iret
in
gs
cmpsl
sub
sbb
sub
daa
out
sti
fdivs
repnz
arpl
popf
in
fbld
jg
daa
repz
lahf
filds
jbe
stc
repz
in
pop
fnstsw
repz
cli
jnp
add
out
push
or
jg
mov
mov
jae
js
idivb
mov
movsb
jnp
pushf
mov
mov
jmp
jge
cli
ds
out
xchg
lcall
jge
dec
aam
jecxz
aad
adc
pusha
fs
aam
mov
icebp
je
adc
or
stos
xchg
inc
fstp
out
pusha
in
mov
mov
jg
mov
xchg
ljmp
xchg
mov
add
jl
stos
pushl
mov
std
out
push
ficoms
ljmp
scas
int
fildl
fnstsw
fmuls
or
fcmovne
in
sahf
cmc
icebp
std
xor
adc
int3
push
inc
ds
jmp
cld
inc
mov
xchg
shl
jmp
fmul
repnz
test
sub
outsl
jns,pt
cld
ss
cmovs
cld
imull
mov
aad
ret
inc
aaa
lret
mov
lret
scas
pop
movsb
adc
mov
cmp
xchg
hlt
into
pop
inc
mov
cld
push
xor
in
xchg
stos
jbe
adc
repnz
out
mov
mov
movsl
lret
or
and
data16
ljmp
push
shlb
mov
inc
sahf
jns
cli
hlt
fcompl
lcall
sti
xor
out
mov
insl
out
pop
ja
mov
jnp
push
out
xchg
adc
test
fwait
in
rorl
faddl
in
mov
int
lahf
daa
stos
mov
in
repnz
cwtl
mov
jne
out
dec
xchg
jmp
and
cltd
jns
mov
push
mov
cmp
repnz
pop
sub
test
mov
dec
in
or
rorb
push
mov
cwtl
xchg
xchg
xorb
mov
daa
sub
add
out
jg
enter
stos
mov
stc
mov
xor
scas
in
push
movsb
mov
test
lods
testb
mov
hlt
lcall
sti
adc
decb
nop
sti
pop
hlt
jge
les
mov
mov
push
xor
mov
xchg
xor
in
or
mov
sbb
push
dec
daa
faddl
cld
lret
popf
dec
mov
mov
sarb
mov
xchg
add
sahf
fdivr
mov
daa
sbb
mov
mov
mov
xchg
fdivrs
adc
ljmp
leave
push
mov
ljmp
inc
ficoml
and
enter
and
int3
xchg
push
lahf
bound
loopne
hlt
cwtl
adc
or
out
popl
cwtl
jo
jmp
jmp
push
int
enter
cmc
xlat
mov
adc
clc
fwait
lock
clc
hlt
xchg
cli
in
dec
fdivs
dec
fwait
js
xchg
push
jb
inc
mov
inc
mov
loopne
out
and
nop
lock
fneni(8087
xor
lods
loop
push
adc
lcall
xor
inc
ficompl
call
xchg
test
lcall
jb
dec
sti
push
pop
dec
xchg
enter
ja
pop
mov
int
int
ds
pop
add
xor
mov
int3
lret
mov
xchg
and
icebp
lret
xchg
lret
push
push
pop
add
fcmovne
cmpsb
leave
fwait
leave
xchg
leave
ja
dec
leave
enter
pop
add
mov
ja
push
enter
enter
mov
add
popf
gs
adc
add
lds
lds
lds
lds
add
or
rol
ret
fwait
ret
xchg
ret
adc
ret
iret
ret
pop
jg
cmp
jge
push
std
shl
mov
add
pop
rcrl
rorl
push
aad
mov
jae
and
das
mov
out
pushf
lods
lcall
adc
decb
push
jg
pop
std
fisubrl
std
cmpsl
lahf
nop
cltd
lock
xchg
addr16
sbb
mov
jp
jnp
lcall
ds
jle
cmpb
jmp
fcomi
adcl
mov
mov
adc
icebp
jle
adc
out
pop
pop
jge
jle
leave
mov
jnp
outsl
sti
js
std
dec
in
jg
inc
out
aas
jl
jge
cld
pop
scas
std
iret
idiv
lcall
repnz
xor
test
idiv
loope
dec
mov
daa
push
dec
clc
popl
daa
cmp
or
sbb
cs
fidivrl
mov
pop
mov
jne
dec
mov
dec
lock
pop
lcall
loop
pop
cli
sub
sbb
mov
jnp
out
fldl
or
rcrl
aaa
loope
pop
ljmp
leave
daa
jg
iret
sub
fdivrs
inc
dec
lahf
mov
sbb
jecxz
std
repnz
jmp
idiv
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
