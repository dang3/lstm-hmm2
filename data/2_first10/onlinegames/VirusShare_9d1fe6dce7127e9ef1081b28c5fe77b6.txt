mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
jg
ficomps
or
pop
pop
pop
leave
or
and
ja
ja
mov
faddl
out
std
fwait
les
jae
fld
or
lds
fldt
pop
popa
enter
lret
lret
outsb
mov
int
into
push
outsb
mov
add
xor
xor
inc
mov
mov
cmp
pop
fdivs
fldcw
scas
fidivl
fisttpl
push
add
pop
loop
pop
xlat
jne
jecxz
add
inc
in
out
out
call
jmp
jmp
in
pop
in
xor
xlat
je
lock
pslld
repz
cmc
sbb
add
aaa
clc
stc
dec
add
std
fldt
pop
sti
js
cld
je
mov
push
call
test
adc
orb
lock
adc
pop
clc
scas
mov
or
add
rorb
outsb
or
je
jg
push
inc
add
sbb
push
mov
sbb
adc
mov
pop
push
pop
je
loopne,pn
fstpt
push
adc
or
pop
or
mov
movsb
dec
jbe
shr
pushf
data16
pop
adc
or
insl
sbb
push
addr16
fbstp
jmp
sti
jne
stos
or
add
loope
lcall
inc
lret
sbb
cmpl
in
testb
loope
jmp
cmp
push
push
push
inc
dec
pushf
je
adc
pop
ret
movsbl
push
mov
pop
jae
les
ret
jmp
push
pushl
sbb
push
push
xor
mov
test
je
mov
sbb
ljmp
lock
inc
mov
test
mov
jne
andb
ss
pop
clc
out
mov
inc
push
xor
movzbl
inc
cmp
jl
clc
pop
jg
mov
shlb
or
stc
stc
shll
add
sbb
je
sub
cmp
push
lods
jmp
add
pop
adcb
aas
mov
lock
or
clc
add
sub
or
inc
ret
stos
shlb
cmp
add
pop
cmp
in
inc
andl
mov
push
push
push
pop
and
add
and
gs
xorl
dec
pop
jne
or
call
call
inc
inc
sub
in
ds
sti
or
xchg
dec
inc
nop
lock
cmpsb
lahf
outsb
mov
add
mov
std
lods
jae
push
aad
cmpb
jbe
mov
cltd
mov
mov
lea
push
imul
cmp
cmp
jl
dec
clc
out
sub
jbe
inc
shl
imul
push
inc
cld
in
cmp
sbb
jmp
or
add
insb
sbb
sub
sti
push
aas
mov
xor
cmp
jbe
test
adc
ret
mov
push
ds
jg
cmp
jl
mov
push
or
shl
nop
mov
out
fistps
stos
insl
lea
push
jmp
popa
sti
fildl
adc
xchg
sub
sbb
fcomps
add
std
jbe
lret
fmull
frstor
inc
or
fidivs
fst
mov
pavgb
les
push
add
xor
xlat
faddl
insb
xor
shll
add
dec
bound
shll
bound
dec
shll
jb
inc
add
mov
sub
jmp
scas
fildl
shll
dec
ret
imul
lds
scas
scas
scas
sbb
push
enter
lods
fdivs
mov
test
mov
push
push
dec
ljmp
adc
push
repz
sti
cld
lea
cld
iret
sub
sub
ret
std
add
insl
push
in
inc
cmp
decl
jl
mov
xchg
subl
shr
dec
mov
fsubs
jmp
outsl
pop
sbb
rcrl
loope
push
fldl
add
jg
leave
sbb
jnp
jl
pusha
inc
jp
jae
xchg
ret
call
mov
inc
dec
jne
stos
push
push
push
inc
push
cmp
in
push
xlat
xor
daa
loop
shlb
adc
idivb
jne
xchg
push
js
push
pop
jle
cmp
or
and
cmp
jne
push
rclb
mov
mov
dec
scas
push
dec
cmp
and
je
adc
arpl
push
xchg
sbb
ficoms
or
jne
or
or
add
jb
add
xchg
push
sub
jmp
ret
in
push
inc
je
jmp
je
or
ret
sub
sti
xchg
cld
fldt
inc
xor
cmp
shl
lahf
inc
into
shl
fisttpll
cmp
sbb
lcall
fdiv
or
es
or
fsubs
scas
idiv
testb
je
dec
movb
jne
add
or
in
cmpb
xor
incb
in
jmp
cld
adc
mov
add
mov
shlb
and
cwtl
rol
sub
test
push
mov
and
adc
movsl
dec
ljmp
add
mov
cmpsb
mov
mov
fs
mov
outsb
gs
xor
dec
or
adc
xlat
aam
aam
mov
lds
pop
rorb
loope
add
inc
les
rcll
lods
lods
xlat
aad
jne
scas
adc
and
jne
mov
mov
mov
mov
mov
mov
mov
jne
mov
add
in
lods
mov
adc
dec
dec
xchg
push
aas
push
cld
dec
or
ret
repnz
es
sub
repnz
movsb
sub
in
lea
in
mov
jo
mov
inc
dec
repnz
mov
not
xchg
pop
xor
fmull
mov
mov
cmp
insb
neg
mov
inc
mov
pop
ret
mov
out
add
cmp
in
loope
jp
push
xchg
mov
push
push
loope
add
mov
dec
add
push
das
or
mov
jmp
bound
mov
mulb
sbb
xchg
inc
mov
sbb
mov
loope
dec
fildl
fadds
mov
dec
push
outsl
xorl
push
push
sbb
mov
mov
clc
das
push
mov
ror
sbb
fcoms
int3
insl
paddb
sub
daa
insb
or
fcomps
int
mov
add
into
mov
mov
cmp
push
push
sub
cmp
mov
cmp
mov
push
popf
xor
adc
imul
lcall
jne
cwtl
cmpsb
jo
xchg
jmp
je
pop
jmp
in
xchg
in
pop
out
psrlq
out
inc
mov
mov
jb
cmp
xor
je
inc
imul
sbb
xor
jl
mov
inc
in
stos
or
mov
cmc
popf
cld
ret
mov
std
enter
sub
add
sbb
sub
or
push
loop
push
push
addr16
sahf
stos
mov
or
insb
or
xor
jne
adc
fsubl
mov
shlb
adc
test
sbb
adc
xchg
lds
je
mov
mov
lods
roll
aam
in
and
pop
cmovbe
jmp
or
daa
rclb
cmp
fcoml
fmuls
lcall
and
sbb
ljmp
ret
loope
jg
movsl
movsw
movsb
push
inc
pop
ljmp
daa
movsl
ret
sbb
jbe
cwtl
jne
sarl
testl
fst
popa
and
xchg
push
inc
call
push
jg
pop
imul
and
shll
xchg
pusha
push
and
mov
pop
cld
mov
xchg
inc
out
adc
cmp
cmp
insl
add
dec
push
or
scas
jle
adc
dec
aaa
mov
fucomi
jge
repz
js
jnp
pop
idiv
cmp
jle
mov
mov
or
or
add
ret
cs
jl
pop
add
push
or
cs
pop
pop
jecxz
movl
std
cmp
mov
in
ret
stc
movsb
movsl
in
inc
ds
sti
cltd
sti
pushf
cld
add
cld
je
mov
js
push
add
adc
frstor
icebp
push
jge
push
test
inc
jmp
lea
test
sahf
mov
mov
sarb
test
jecxz
in
add
out
out
pop
arpl
sub
inc
loopne
fadd
sbb
arpl
or
dec
shrb
inc
test
ret
in
jne
adc
mov
and
dec
mov
incl
xor
rclb
fdivrs
aas
cwtl
sti
ljmp
inc
jbe
cld
adc
and
push
xchg
cmp
out
push
out
imul
testb
inc
push
out
or
xor
dec
gs
rcl
xor
inc
repnz
repz
xlat
inc
shl
cmc
scas
notb
imull
cmpsb
imul
imul
inc
add
inc
jmp
jo
fsubs
fstps
fcmovnu
fucom
inc
imul
stos
sbb
xlat
lds
in
push
mov
cmp
decl
lret
sub
subl
sarb
stos
jmp
roll
shll
xor
aam
inc
lret
mov
in
test
or
popa
adcl
adc
add
pop
dec
pop
aad
adc
dec
mov
and
and
call
mov
xor
cmp
jne
push
call
or
insb
fdivr
xlat
pusha
or
sbb
insb
aaa
bound
xor
xor
dec
push
in
ljmp
sbb
clc
pop
jbe
clc
das
rolb
add
int
inc
inc
add
addr16
push
adc
xchg
fildll
inc
dec
pop
movsb
data16
and
mov
xor
out
dec
test
bound
faddl
push
addr16
cmp
je
jmp
adc
std
test
movsb
pop
cmp
push
mov
adc
jae
in
sub
xor
mov
jmp
insl
adc
pop
fadds
jecxz
push
mov
pop
and
pop
ret
jp
xor
adc
jle
push
gs
or
mov
aaa
sub
push
call
add
add
and
sub
outsb
sub
pusha
lock
dec
sub
pop
cmp
jae
call
add
or
pop
adc
mov
push
push
int3
or
ja
inc
fnsave
bswap
mov
add
outsl
pop
jbe
pushf
nop
pusha
pushf
pushl
sbb
adc
cmc
idivb
loope
push
pusha
push
nop
adc
movl
aas
roll
cmp
jmp
test
insl
inc
push
mov
pop
mov
or
insl
fstpt
push
jmp
testb
in
testl
clc
rcrb
inc
sub
add
stos
test
pop
inc
dec
fstl
icebp
xor
and
mov
adc
inc
cmpsb
scas
dec
pushf
push
imul
sti
ret
inc
or
pushf
pushf
pusha
js
jo
aaa
ret
aam
andb
loope
sub
pop
mov
pop
in
add
cmc
sbb
adc
push
mov
jns
inc
int
adc
aad
inc
mov
add
mov
cmovne
stos
stos
stos
or
rolb
test
adc
mov
add
imul
or
lea
inc
insb
inc
mov
jecxz
push
fld
cmp
pop
xlat
das
push
ret
data16
out
hlt
jge
pop
mov
xor
mov
mov
mov
push
push
popf
int
inc
testb
push
mov
in
lea
cs
dec
mov
jae
outsl
sub
int
fmuls
pop
je
cmp
cwtl
push
test
cmp
lret
cmp
or
inc
add
mov
mov
push
push
add
out
push
add
pop
gs
fisubrl
imul
ficomps
movsb
sbb
jnp
inc
ja
mov
mov
xor
rcrb
inc
jg
clc
test
addr16
sub
je
leave
push
cmp
pop
sbb
push
in
in
jmp
clc
xor
and
mov
or
fadd
push
cwtl
fdivr
ds
sbbl
enter
jbe
adc
enter
and
popa
add
inc
leave
pusha
or
inc
adc
out
fsubrs
mov
out
mov
mov
jne
add
or
xor
mov
hlt
or
out
imul
pop
adc
inc
adc
mov
in
cmpsb
mov
add
and
pop
addb
in
jo
adc
ss
in
cs
fwait
lea
in
addb
lds
dec
js
pop
ljmp
rcr
jp
leave
mov
enter
jae
inc
cli
sbb
add
int
push
adc
ret
add
test
rorb
aaa
outsl
or
fdivr
mov
loope
push
inc
mov
push
out
loope
xchg
push
or
lcall
sub
pusha
out
adcl
cld
push
pusha
fmull
aaa
mov
sbb
test
sbb
push
xchg
xacquire
add
mov
mov
mov
sti
ljmp
loop,pn
push
in
in
out
or
jmp
ror
in
enter
and
xor
out
sbb
push
ja
testb
push
pop
ret
adc
dec
cmp
add
mov
adc
enter
out
mov
mov
add
pushf
jb
add
mov
outsl
std
sbb
mov
push
adc
mov
shl
es
push
enter
into
xor
sbb
icebp
push
inc
pop
ret
int3
jmp
xlat
insb
add
pushf
xor
mov
xchg
xchg
xchg
mov
mov
xchg
rol
int3
inc
lods
clc
adc
es
fcoms
cld
mov
push
sbb
cltd
push
push
clc
ja
fcmovnu
xchg
neg
sbb
testb
add
add
idivl
adc
jmp
add
jae
sub
mov
add
outsl
or
loope
or
add
add
push
dec
sub
or
rol
sti
out
dec
sti
sub
or
sub
add
adc
or
cmp
frstor
xor
add
lock
push
xchg
cmp
cs
loopne
pop
fcomi
jecxz
jl
inc
sbb
jge
or
daa
jbe
push
xchg
mov
xor
mov
add
dec
in
xor
std
lcall
and
call
mov
inc
or
testb
repnz
jbe
aam
aad
fcmovnbe
dec
movsb
jl
imulb
pop
mov
jmp
sub
int
lods
lea
sti
push
xchg
sahf
mov
mov
icebp
in
push
or
test
xor
inc
add
ret
mov
fdivrl
inc
call
add
add
xchg
sti
add
mov
xor
iret
inc
enter
or
add
xor
js
xchg
lcall
aam
divb
push
sub
out
xor
je
aas
pop
fwait
cmpsb
imul
xor
shrl
sbb
and
inc
pusha
imul
adc
mov
xor
add
xor
shrl
sbb
sub
xor
sarl
dec
push
pop
bound
xor
jb
xchg
mov
shll
enter
xlat
xor
xlat
or
add
cmp
imul
fiaddl
mov
cwtl
add
pshufw
xor
xchg
mov
movsb
and
dec
arpl
mov
inc
cmovge
popa
scas
test
ret
pop
jle
jae
and
adc
scas
mov
and
sub
psadbw
call
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
dec
add
outsl
icebp
pushl
jns
and
cmp
cmp
not
adc
pushl
xchg
out
sbb
mov
mov
add
dec
js
mov
inc
ss
pushw
xor
push
push
inc
push
push
xor
and
adc
inc
xchg
sub
or
add
out
jg
and
and
dec
gs
gs
xchg
je
lock
add
xor
xor
pop
add
pop
mov
xchg
push
nop
mov
pop
mov
lea
je
lea
ljmp
sbbb
adc
out
adc
jnp
add
add
push
call
push
push
mov
call
mov
pop
popf
popa
jmp
push
inc
inc
pop
pop
pop
adc
into
scas
loope
repz
mov
fldcw
hlt
pushl
and
imul
sub
fisttpl
jne
test
rolb
mov
addr16
mov
je
mov
inc
outsl
insl
arpl
mov
jae
arpl
jae
mov
cmpsl
mov
pop
into
out
or
rcr
mov
out
mov
aaa
and
mov
mov
mov
inc
dec
dec
inc
inc
subl
dec
inc
pop
inc
daa
out
std
jnp
daa
aam
lret
rol
mov
mov
mov
aas
xchg
lea
pop
xchg
ljmp
mov
inc
popa
arpl
and
shlb
mov
adcb
stos
inc
dec
out
xlat
ss
ss
xlat
mulb
mov
aad
enter
insl
outsl
fs
ljmp
or
ljmp
fcoml
push
xor
dec
das
mov
imull
jae
jne
sbb
ret
outsb
fs
sub
push
outsw
outsb
cmp
or
aaa
pop
jae
jae
insl
jl
jge
pushl
aaa
mov
xchg
and
imul
push
push
jb
arpl
sbb
outsl
jo
aaa
fs
fnstsw
add
outsl
je
push
je
jns
or
add
mov
or
js
push
and
add
push
sbb
cmp
cmp
sbb
in
jae
bound
inc
dec
push
push
push
inc
pop
dec
dec
inc
push
dec
mov
mov
sysexit
xor
xor
xchg
lcall
ljmp
lds
jnp
aaa
cmpb
icebp
add
scas
add
add
push
add
loope
pusha
mov
add
in
inc
inc
add
std
mov
pop
mov
int
mov
push
pushl
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
mov
or
out
fimull
cmpsl
int
jg
mov
add
mov
stos
fbld
pop
mov
repz
mov
mov
jle
mov
popa
test
pop
scas
cmp
test
pop
ljmp
in
mov
inc
jne
add
add
loopne
cmp
xor
or
push
or
sbb
faddl
jmp
or
gs
sbb
daa
add
pop
add
add
mov
add
sub
adc
and
xchg
push
add
mov
sub
inc
fmuls
mov
pop
or
fsubs
outsl
subl
or
ds
in
outsl
cmp
add
jb,pn
popa
je
add
in
pop
fdivs
shrb
sar
andb
add
js
loope
jbe
jo
add
mov
subb
insb
ja
xor
xor
jb
gs
pop
sti
gs
outsl
arpl
add
aas
ret
jae
popa
arpl
repz
add
sarb
out
fs
nop
dec
loopne
xchg
jge
sbb
daa
dec
dec
push
cltd
rcr
mov
xor
into
and
ljmp
xchg
cmp
xorl
pop
je
mov
jbe
inc
push
fcmovne
jns
and
pop
test
daa
fnstcw
aam
mov
idiv
stc
mov
mov
out
into
adc
rol
sbb
insb
sbb
pop
and
cli
outsb
lods
pop
dec
fdivrp
jmp
pop
mov
add
jecxz
loopne
inc
push
mov
rcll
mov
lcall
adc
hlt
cmp
mov
inc
addb
mov
cs
repz
fcos
ljmp
jl
mov
dec
ljmp
hlt
sub
in
dec
mov
ljmp
pushl
mov
and
stos
loop
cwtl
pop
cmpb
out
mov
pop
lcall
inc
sbb
ret
stc
xchg
mov
or
std
negl
jne
gs
mov
ljmp
and
mov
test
lods
notb
pushf
lahf
push
in
xlat
cmp
xor
outsb
ficoms
negb
fsts
mov
dec
outsl
sub
mov
mov
push
cmp
push
push
stc
inc
cs
sub
jb
push
sahf
cmp
pop
fmull
gs
pop
inc
mov
cld
push
in
negb
ljmp
jns
inc
mov
mov
sub
in
mov
push
lahf
pushl
inc
imull
push
adc
dec
daa
xor
lea
adc
out
mov
cwtl
dec
xchg
mov
cmp
adcl
test
icebp
stos
addr16
mov
fiadds
gs
sub
mov
add
into
in
push
mov
les
incl
popf
mov
and
out
inc
xchg
xchg
in
out
in
and
xchg
mov
jmp
decl
in
rorl
dec
adc
fwait
ss
cmp
aas
fsubs
imul
jg
insb
xchg
inc
fnsave
jp
dec
std
xchg
mov
or
sub
test
decl
sbb
xchg
adc
dec
xor
fimull
cmp
dec
jp
fldcw
xlat
jmp
stc
inc
lods
push
or
fistpll
inc
lds
mov
mov
in
lcall
test
cmc
inc
push
js
cmp
mov
adc
stos
loopne
mov
jmp
jge
mov
and
xor
gs
movsb
jg
incl
jle
mov
arpl
mov
das
sub
fldcw
jmp
or
mov
hlt
aaa
movsb
hlt
outsb
cmp
loope
leave
inc
pop
xor
xchg
shl
jmp
cmp
lods
pushf
mov
xchg
xor
jmp
dec
movsl
aaa
andl
fistpll
cmp
std
ds
popa
repz
inc
dec
push
out
or
call
pop
adc
mov
fildl
stc
pop
xor
les
lds
dec
iret
xor
out
xor
or
mov
dec
out
xor
je
into
or
rclb
ss
lods
sbbl
xor
jg
mov
pop
out
push
mov
mov
ljmp
loop
rcll
jmp
dec
insb
dec
sahf
pusha
pop
out
dec
frstor
test
lcall
mov
lret
icebp
xchg
jg
stc
cmpsb
aad
xor
dec
inc
and
and
xchg
jnp
decl
loope
lahf
or
push
xchg
dec
mov
fisubrs
scas
loope
std
hlt
fisttps
cmp
incl
jb
sbb
mov
iret
pop
outsl
sarb
outsl
out
call
into
imul
inc
decl
lret
hlt
adc
pop
testb
jg
aaa
ret
mov
mov
sbb
dec
adc
mov
sub
daa
jae
inc
shll
mov
dec
call
sbb
mov
ret
jecxz
aas
sbb
ja
daa
ss
movsb
mov
mov
popl
inc
orl
mov
clc
adc
mov
mov
loope
call
xor
call
mov
insb
sub
adc
sbb
lds
repz
decl
inc
shll
lea
mov
fbstp
sar
mov
xor
pop
rcr
rcr
popf
sub
incl
pop
aaa
xchg
adc
lea
ss
mov
adc
adc
mov
stos
test
mov
push
call
cmp
decl
push
fidivs
dec
adc
outsl
ljmp
iret
fwait
xor
lds
pop
aad
call
adc
pop
cmp
cli
jmp
add
jecxz
push
outsl
xlat
fstpt
mov
push
mov
xorb
sub
sbb
adcb
sahf
ret
lea
imul
inc
inc
push
clc
cmpsl
insl
add
push
cmp
inc
mov
xchg
mov
call
push
cvtpi2ps
getsec
xor
or
mov
mov
cmp
cs
imul
les
sbb
or
loopne
mov
cmc
jle
mov
push
jae
fstpl
roll
push
adc
scas
mov
push
ret
lcall
cltd
aad
push
pop
jg
push
mov
lret
pmullw
mov
daa
jmp
imul
js
dec
xor
out
and
enter
add
sbb
add
test
mov
decl
jp
dec
in
xor
pop
test
push
ljmp
clc
pushl
fidivrl
imul
push
cmpsl
mov
sub
cmp
or
mov
dec
or
push
push
fdivp
incl
mov
push
fildl
gs
cwtl
gs
xor
mov
movsl
sbb
push
ljmp
fwait
inc
mov
push
jnp
pop
ret
call
xchg
mov
lds
cmp
xor
and
pop
adc
pop
test
dec
punpcklbw
incl
lds
imulb
xchg
loope
xchg
add
stc
cltd
xchg
stc
fiaddl
cli
sbb
cli
cmp
pop
call
cli
pop
jnp
jmp
jp
cltd
in
add
cmpsl
incl
cmp
fs
sbbl
mov
mov
incl
cmp
xor
ds
pop
push
jp
pop
or
pop
js
jbe
pop
mov
call
sbb
jno
fs
test
and
lods
or
push
outsb
arpl
jmp
rcrb
imul
inc
aas
cmpsb
jecxz,pn
adc
xchg
mov
mov
incl
clc
lret
ss
pop
adc
stos
sub
clc
adc
lcall
iret
and
jae
xor
pop
or
sub
out
pushl
enter
comiss
push
fisubrs
repz
lret
mov
cmp
lcall
popa
sbb
fstpl
mov
aas
add
vcvtpd2psx
lret
sar
shlb
adc
inc
inc
add
repnz
ljmp
and
cmp
sub
ret
jmp
sahf
out
jle
ljmp
pop
mov
ds
shlb
ret
or
fidivrl
outsb
mov
push
inc
gs
into
mov
jmp
stos
sbb
in
bound
outsb
pop
push
cmp
lcall
ss
sub
mov
jmp
lock
adc
or
lcall
xor
xchg
pop
jg
inc
pop
imul
or
iret
bound
xor
call
fnstsw
add
mov
icebp
call
dec
dec
fxam
lea
dec
xchg
xchg
xor
fcmovu
or
loopne
push
in
add
int
mov
lcall
pushl
push
popf
and
enter
add
dec
push
mov
inc
js
sar
mov
std
cmp
nop
dec
jne
fdivl
mov
push
int3
pop
push
cmpsl
jb
and
sbb
rcl
dec
lds
mov
mov
mov
das
std
decl
in
mov
lea
sbb
dec
aad
mov
jecxz
sub
and
movsl
mov
pusha
insb
add
das
xchg
sbb
adc
popa
movsb
pop
shll
mov
lret
ret
decl
push
xor
lcall
xchg
push
pop
popa
mov
pop
mov
mov
pop
fiaddl
test
pop
dec
sar
jp
inc
loope
data16
jg
ljmp
mov
repnz
ds
daa
imul
adc
in
call
mov
in
pop
jb
out
jnp
unpckhps
pop
fmul
sub
decl
ja
ljmp
xchg
sti
mov
xchg
xlat
adcl
cwtl
inc
sbb
out
cmc
jp
incl
ret
das
dec
out
flds
mov
in
shl
dec
lahf
push
inc
mov
inc
cmpsb
inc
jbe
call
leave
xchg
pandn
jb
sbb
dec
int3
dec
add
inc
adc
jnp
inc
and
fcomip
or
pop
sub
xchg
dec
cld
adc
sub
sub
subb
lock
push
fsubrl
mov
add
fdivrl
outsl
mov
cmc
mov
and
imul
lahf
iret
lret
cli
incl
jg
ljmp
scas
in
mov
in
mov
call
xchg
sbb
jbe
dec
cmp
cwtl
jnp
call
lahf
mov
je
cmp
mov
mov
xchg
add
das
cld
ljmp
mov
outsl
cwtl
jbe
loopne
pushf
arpl
into
repnz
lcall
call
cmp
or
and
mov
mov
movsl
test
jle
out
out
xor
lcall
std
je
fs
mov
mov
sub
stc
xor
sub
jmp
les
cmp
stc
es
lcall
xor
outsl
pop
mov
movsl
scas
push
jae
push
push
mov
dec
add
xchg
and
cmpsb
ss
call
jb
cld
in
lds
xchg
push
loope
mov
sar
pop
inc
lods
out
pop
add
lret
fldl
sub
aaa
jae
je
js
mov
popf
lret
in
inc
scas
aaa
addr16
jp
sbb
pushl
enter
mov
int3
fwait
inc
xchg
mov
sbb
jge
incl
lret
out
mov
push
cmp
sbb
out
fsubp
std
pop
sub
jg
lcall
scas
adc
loopne
lods
loopne
xchg
cmp
mov
mov
cmpsl
pop
inc
mov
ss
sub
adc
ljmp
mov
mov
lahf
or
mov
ret
dec
cmp
cld
sub
bnd
inc
cwtl
pop
addr16
fnsave
or
inc
push
ljmp
xor
lea
jmp
shlb
push
rcl
push
and
xchg
mov
cs
sbb
push
cmp
incl
cli
es
lods
data16
fisttpll
std
addr16
lods
dec
cmp
ljmp
or
sahf
sbb
jl
mov
sub
xor
inc
in
cld
xchg
aad
mov
repz
pop
inc
and
mov
hlt
cmp
pop
push
lock
decl
dec
xchg
hlt
add
adc
inc
cld
test
adc
lds
push
lcall
mov
cmp
dec
sahf
mov
dec
loope
pop
mov
in
sbb
jmp
das
jnp
jbe
out
mov
negl
das
shl
xor
push
cmp
lcall
jnp
in
out
lcall
lret
movsb
cmpsb
mov
aaa
cli
jg
mov
ds
iret
loop
in
sbb
lods
jg
mov
pop
loop
pushl
mov
mov
mov
sub
jb
repnz
mov
in
ljmp
loop
dec
jno
shll
into
pop
nop
sti
movsl
jo
rol
mov
imul
fisttpl
sub
pop
adc
cmp
ljmp
add
pop
shl
lcall
loopne
xchg
sbb
push
clc
lods
decl
inc
icebp
sub
xchg
push
rcll
sbb
lahf
mov
jecxz
push
cli
inc
adc
jb
inc
outsl
lahf
in
jle
push
enter
or
ljmp
aaa
cltd
jmp
cmp
mov
std
jecxz
add
call
jo
sti
lock
repz
xor
out
push
lahf
cs
mov
subb
outsl
sbb
jbe
dec
call
sbb
sub
mov
loop
aam
addr16
call
jnp
in
fistps
xor
inc
lds
mov
pushl
jp
sbb
decb
fcompl
jge
fucom
lcall
out
negb
sbb
or
cmc
aaa
lcall
mov
push
pop
cmp
and
cmp
movsb
not
dec
out
das
mov
cmp
pop
clc
xchg
clc
sbb
movsl
push
pusha
xlat
lahf
lds
add
loope
call
push
in
lods
stc
fndisi(8087
and
xor
lds
xlat
clc
decl
inc
rolb
lahf
pop
ss
adcb
test
loop
call
inc
jg
jno
add
lds
ffreep
jo
xchg
add
pop
push
mov
cmp
andb
shrl
call
iret
clc
push
cmp
xor
out
xchg
rcpps
jmp
push
sti
adc
cmp
lcall
std
jmp
xchg
adc
pop
hlt
pushf
dec
fmuls
fimull
jp
sarl
inc
jno
icebp
push
jo
push
aas
std
lock
jmp
xor
scas
in
pop
mov
jle
aaa
pop
pop
mov
xlat
popf
inc
cld
cmc
imul
jo
pop
mov
decl
cmc
mov
mov
loop
rcl
aaa
sar
ljmp
imul
ret
scas
int3
cmp
nop
in
xlat
mov
fs
mov
add
mov
lret
daa
std
mov
mov
mov
adc
sbb
push
fdivrs
sbb
inc
push
decl
sub
and
sbb
or
jo
sar
mov
mov
inc
xchg
ja
pop
jne
sub
mov
ss
and
outsb
jbe
sub
push
test
jmp
inc
sti
stos
and
repnz
pushf
aad
in
lcall
mov
xor
xor
nop
adc
pushf
sti
or
loope
and
jg
push
iret
push
adc
in
adc
pop
push
pop
sti
cwtl
push
call
ljmp
testb
data16
aam
lds
ss
cmp
inc
aaa
cs
mov
jmp
popa
cwtl
inc
cmc
mov
add
mov
dec
addr16
dec
and
incl
mov
mov
or
clc
fbstp
inc
shlb
ds
mov
stc
hlt
aad
roll
and
sub
pop
popa
mov
fcoms
insl
outsl
lods
push
loop
or
rol
popf
inc
pop
xchg
outsb
lea
ja
fucomip
jb
jae
stos
mov
cs
stos
pop
adc
xchg
in
mov
imul
mov
call
pop
xor
movsb
dec
mov
out
je
or
add
sti
mov
push
ret
sbb
fcompl
scas
sbb
cmp
pushl
cmp
cmp
mov
je
gs
mov
cmp
or
inc
and
and
imul
cmp
push
push
std
data16
lcall
leave
cs
into
cmp
dec
jmp
mov
fimuls
push
dec
into
jg
mov
add
push
jecxz
ret
cli
sub
mov
popa
mov
mov
mov
jmp
xor
add
push
in
lcall
jbe
push
or
push
sub
leave
or
in
xchg
fs
jb
xchg
pusha
mov
add
or
std
lcall
mov
loope
fmuls
push
jle
cld
inc
dec
lds
mov
sbb
jae
mov
insl
or
stos
dec
ss
ljmp
mov
mov
add
cs
in
pop
fiaddl
cmp
mov
push
mov
insb
icebp
mov
push
add
jle
imul
in
rorb
mov
ljmp
mov
pop
mov
shl
insb
or
dec
in
xor
inc
mov
jmp
sbb
stc
jno
pop
cmp
cmpsb
in
loope
loopne
ljmp
dec
shll
lds
push
sbbb
clc
pop
dec
test
cmp
das
push
mov
cld
aas
inc
pop
dec
loop
pop
aam
cmp
pushf
jl
rclb
fistpll
scas
add
in
cmp
outsb
sub
xchg
int
int
sbb
or
and
push
xor
lock
xchg
push
out
dec
cs
or
aaa
ficompl
mov
xor
and
movsb
call
sbb
ja
push
or
pop
mov
mov
out
popa
cmp
pop
loopne
pop
ja
pop
jo
sub
testl
mov
inc
cmp
and
and
jl
stos
xchg
clc
je
adc
das
mov
sbb
and
push
push
shrb
inc
jmp
in
jle
sub
mov
lret
pop
xchg
jle
adc
out
mov
pop
aas
mov
arpl
mov
xor
inc
insl
and
aas
pop
clc
mov
cmp
mov
mov
incl
jg
xchg
loope
mov
jg
jmp
cwtl
mov
jmp
pop
out
mov
inc
xor
mov
clc
lcall
or
je
pop
mov
mov
mov
clc
pop
dec
jmp
stos
inc
and
mov
inc
pop
lahf
outsb
jl
adc
icebp
ljmp
jge
fwait
adc
dec
mov
out
icebp
sbb
das
pop
cmp
pushl
xor
hlt
rolb
jne
jbe
loopne
xchg
cmp
sub
adc
insb
neg
push
add
mov
jns
or
out
xlat
fdivr
sbb
mov
jmp
xchg
in
repz
dec
lock
mov
repz
pop
dec
loope
xchg
mov
mov
jmp
adc
mov
cmp
or
rorl
dec
gs
in
test
incb
jnp
cmpsb
std
mov
xchg
fwait
movsb
xor
adc
out
adc
sbb
jns
insl
xorl
or
js
dec
outsl
out
fists
in
jmp
mov
or
in
sahf
dec
pop
push
inc
adc
sbb
jo
jg
pushl
test
movsl
push
es
rorl
fisttpll
in
sbb
lcall
jno
dec
sub
leave
stos
test
test
out
fwait
push
vaddpd
add
ljmp
icebp
xor
or
dec
or
xor
mov
cs
adc
ljmp
sbb
add
cltd
and
push
xor
scas
int
popf
addb
mov
aaa
aaa
ljmp
mov
std
inc
in
popf
aas
clc
dec
pop
clc
das
hlt
sbb
and
sub
cld
jg
icebp
js
loop
push
jb
mov
aaa
cmp
fwait
nop
mov
sub
in
and
aas
cmp
add
mov
jbe
stos
adc
lock
lds
or
out
fsubp
sbb
mov
test
call
jmp
fdivrl
fidivrs
sub
pushl
cmp
ja
lea
data16
ret
xlat
int3
jge
or
or
or
notb
std
push
dec
pop
and
sti
cli
ljmp
sub
mov
cmc
arpl
add
fcompl
cli
pop
cmp
push
xor
adc
bound
pop
inc
dec
ljmp
aad
jle
test
rolb
xchg
jns
in
jg
in
popf
mov
paddsw
cltd
pop
inc
push
bound
andb
sbb
pop
clc
sub
push
pop
mov
fisttpll
cmp
mov
mov
push
lds
call
fildll
pop
push
icebp
jp
dec
jl
int3
mov
hlt
push
mull
je
xchg
clc
ljmp
and
loop
inc
into
jnp
sub
adc
lcall
mov
nop
and
and
jge
jg
adc
icebp
decl
inc
pushf
xchg
mov
push
xor
add
in
testb
hlt
xchg
pusha
jmp
sahf
dec
ficoms
mov
call
inc
mov
or
out
leave
push
inc
sbb
push
lods
clc
sub
outsb
jae
mov
or
gs
call
jp
sti
inc
adc
jns
dec
movsl
inc
and
jo
dec
cmpsb
int3
imul
lods
xchg
inc
jecxz,pn
clc
call
mov
sub
iret
icebp
mov
push
repz
call
xchg
lods
fnstsw
pop
add
pop
inc
xor
inc
fst
lock
js
dec
ss
cld
or
mov
jg
loop
jns
jmp
push
mov
and
pop
insb
mov
mov
add
aaa
divl
lock
call
sbbb
push
cmc
daa
outsl
xchg
mov
lcall
sbb
cmpsl
mov
outsl
and
fwait
pop
adc
test
stos
or
lock
xchg
es
aas
repnz
fwait
dec
pop
in
xchg
mov
push
adc
jmp
xlat
adc
mov
sbb
mov
jg
lods
repz
push
int
rcrb
lret
pop
std
ljmp
pop
repz
jno
jl
imulb
mov
int3
or
fdivp
cli
pop
mov
bound
stos
dec
scas
sti
sbb
dec
and
movsl
adc
or
lods
add
ror
call
test
lret
push
imul
in
movsb
xlat
pusha
adc
jle
jbe
pop
lahf
cld
xor
jmp
mov
cmp
imul
iret
mov
out
outsl
cld
pop
das
sub
or
int3
orl
lock
sub
int
sahf
add
push
sbb
sbb
xchg
jns
inc
sub
push
jae
aam
test
xchg
cli
in
sbb
sbb
lcall
cs
mov
fisttpll
aaa
stos
mov
jnp
jg
fisttps
mov
mov
adc
or
dec
or
outsb
pop
cli
pop
add
addr16
mov
mov
inc
adc
mov
jp
jmp
lods
add
es
cwtl
and
mov
sub
stos
vmovdqa
sub
mov
or
aaa
clc
jg
pop
push
insb
pushl
adc
pop
enter
xchg
cmp
jno
mov
cmp
insb
or
int
sbb
test
sub
mov
decl
sub
or
gs
or
bound
xchg
mov
pop
into
enter
outsl
cld
ljmp
or
popl
mov
in
or
test
jg
lcall
push
fcomip
test
dec
cmp
mov
jp
lcall
pushl
fildll
pop
jle
rorl
stos
sub
lea
sbb
mov
and
inc
call
int3
addr16
jmp
ss
mov
stc
xchg
and
mov
jg
incl
jl
mov
adc
je
fisubs
mov
adc
cmpsb
lret
pop
mov
repnz
jg
hlt
incl
jge
enter
jb
int
mov
rcrl
mov
hlt
decl
jge
je
push
jne
or
decl
inc
xor
insl
pinsrw
jbe
ljmp
pop
jmp
sub
cld
push
push
fcmovnu
clc
push
xchg
fldl
xlat
dec
inc
sub
or
les
lcall
xlat
pop
mov
imul
xorl
push
mov
sahf
adc
ret
call
jae
icebp
or
sub
std
or
lods
cli
push
sbb
xchg
pop
mov
jmp
repz
sbb
sub
data16
mov
sti
cmp
mov
mov
pushl
mov
aam
mov
inc
lock
cld
sbb
mov
add
adc
jmp
sub
lea
sub
test
sub
and
add
pushl
mov
aas
pushf
das
scas
subb
cmp
clc
xchg
xchg
fsubl
push
ud0
ljmp
fldt
push
pop
and
and
jg
or
dec
test
inc
fsubr
inc
mov
ss
inc
repnz
popf
in
lock
sbb
pop
aam
jge
lcall
inc
ds
cmp
sub
mov
pop
cmp
inc
fisubrl
lods
stos
push
outsl
lock
xchg
jns
call
xchg
mov
adc
dec
inc
dec
and
stos
dec
jno
pop
loopne
in
aam
adc
jge
popf
shll
jno
xchg
in
cld
ljmp
icebp
adc
das
dec
jmp
cmp
adc
mov
jle
cmc
pushl
clc
out
xor
sub
mov
out
pop
pop
jecxz
cwtl
addr16
ss
pop
loopne
ljmp
pop
dec
or
cmp
test
in
imul
inc
sbb
jmp
shll
mov
adc
mov
cmp
add
mov
mov
jle
push
ljmp
jp
xor
movsb
cmp
or
aas
mov
jae
es
fwait
stc
rcll
inc
cmp
xchg
clc
add
jbe
pop
enter
pop
inc
lods
mov
incl
pushf
out
sub
outsl
cli
frstor
test
mov
jl
das
mov
jbe
dec
lods
xchg
test
mov
fldcw
add
test
inc
pushl
and
mov
jp
mov
pop
jecxz
fdiv
sbb
in
dec
lods
xchg
cli
or
jp
inc
rclb
ljmp
lock
aaa
repnz
xor
cmp
je
jns
dec
cltd
sbb
sar
or
fcoms
data16
jp
sbb
add
fucomp
cwtl
es
cmp
or
push
add
and
add
lods
lcall
sbb
scas
add
pop
mov
fisubrs
or
mov
xchg
lret
sub
ljmp
addb
xchg
stos
pop
lret
jecxz
ret
loop
and
adc
ljmp
cld
stc
pop
cmpsb
push
cs
je
movsl
in
jg
cli
fnstcw
xlat
out
repnz
ljmp
cwtl
and
mov
adcl
and
call
int3
xchg
inc
aaa
in
loope
stc
jg
dec
lods
pop
adc
inc
dec
int3
jae
subb
inc
jge
pop
imul
stos
dec
or
inc
and
push
mov
or
loop
adc
xchg
rep
xchg
fsub
ljmp
pop
push
push
pop
or
fadds
je
js
jl
or
cmp
sbb
adc
mov
into
icebp
mov
pop
jl
xchg
cwtl
aaa
pop
mov
lret
mov
or
fcos
inc
cmc
mov
out
pop
cmpb
xor
mov
mov
daa
push
mov
inc
jne
stos
mov
sbb
out
xchg
pushf
js
lock
outsl
xor
xchg
mov
ret
addr16
jno
or
mov
bound
daa
and
mov
or
bound
and
pushl
clc
xchg
add
loop
dec
int
stc
xor
push
xchg
rol
outsb
add
hlt
faddp
adc
jne
lds
adc
dec
stos
cmp
cld
mov
jo
mov
push
pop
or
mov
pop
pop
out
mov
outsl
cld
push
mov
nop
testl
pushf
js
cwtl
sbb
adc
in
incl
pusha
leave
sbb
mov
cmp
ret
fists
fsubs
sub
and
cmc
int3
mov
xchg
inc
xchg
je
push
push
lcall
cld
xchg
mov
jmp
std
lods
dec
testl
scas
lods
mov
xor
jmp
sar
pop
out
flds
rorl
xchg
sbb
into
repnz
insl
repz
fmulp
fwait
pop
movsb
or
jnp
sub
imul
and
incl
cmp
bound
jne
popa
xchg
fisubs
inc
lret
jg
mov
xor
aaa
insl
into
pop
push
or
enter
decl
xchg
or
aad
cltd
test
ljmp
jmp
not
sahf
fxtract
cmc
and
mov
decl
lret
out
inc
stos
pop
pushf
mov
lret
cmp
push
xchg
sub
outsl
jne
cld
shrb
xchg
jg
fwait
sahf
xchg
or
je
popf
js
call
xor
enter
push
mov
icebp
jns
mov
imul
sbb
sahf
jge
pop
push
fwait
mov
sbb
cmc
pusha
test
out
jg
and
xchg
mov
negb
ljmp
mov
dec
repz
sub
pop
loope
fwait
pusha
xor
xchg
les
jp
xor
ss
loop
pushf
nop
pop
rorl
movsb
jmp
lods
out
dec
or
push
test
les
jg
mov
out
jmp
out
mov
adc
dec
push
jo
ljmp
pop
dec
in
leave
loopne
mov
adc
mov
stos
icebp
cmp
mov
inc
pushl
cmpsb
pop
fdivrp
sbb
mov
in
repnz
stos
xor
ljmp
pop
jg
inc
cmpsb
mov
mov
sub
dec
ljmp
inc
call
or
sub
jae
xchg
test
mov
xchg
repz
xchg
mov
jle
jg
std
add
popf
mov
mov
test
xor
outsl
cld
fbstp
mov
jns
jmp
mov
sbbl
xchg
pop
test
repz
dec
sub
xchg
adc
jg
shrl
jl
pop
jg
leave
enter
rcll
pop
test
incl
inc
push
or
mov
dec
idiv
jg
inc
aas
ret
ret
add
adc
js
repz
mov
addb
adc
jo
clc
jbe
cltd
nop
subb
adc
mov
add
lcall
into
jg
adc
mov
mov
add
outsl
icebp
incl
add
pusha
jmp
push
jbe
shll
out
out
jmp
mov
aaa
inc
ja
js
fst
inc
cmpl
call
ret
sub
aaa
jle
clc
in
lret
mov
in
std
out
pop
mov
jg
and
movsl
mov
daa
sarb
fmuls
push
pop
stos
in
addr16
es
inc
cmp
push
adc
jo
add
testl
jge
cmpsb
adc
xorl
call
dec
xchg
ljmp
test
inc
add
fistl
cld
insl
dec
cmp
jge
adc
dec
dec
cs
les
lds
ficoms
cmpl
test
mov
mov
xchg
and
adc
incb
dec
push
add
lcall
movsl
mov
or
cltd
es
xchg
sbb
mov
out
jge
push
je
mov
or
ds
fstps
pushl
subl
xchg
cmpsl
xchg
pushf
xor
jg
test
incl
lcall
add
cmp
shrl
imul
adc
inc
cmpsb
cmp
ds
lcall
int3
mov
sub
sbb
xor
idivb
xor
pop
in
pop
std
pushl
stos
mov
inc
enter
test
mov
mov
mov
out
aaa
sub
scas
cmpsb
mov
cmp
xor
mov
aas
xchg
fbld
mov
es
push
adc
lahf
pop
jg
cwtl
subl
inc
cmp
pop
shlb
jmp
roll
or
rclb
ret
pop
outsl
test
dec
cld
in
cmp
cmpsl
mov
aaa
dec
xor
dec
cmp
insl
jne
jge
push
xchg
push
repz
inc
lcall
jae
or
pop
push
andl
sarl
movd
or
sbb
sbb
roll
lcall
adc
cli
test
stos
mov
mov
push
sbb
pushl
loop
addl
andl
mov
nop
mov
mov
decl
scas
xor
pop
cld
mov
xlat
lock
mov
jno
fdivrl
pop
jp
inc
dec
mov
mov
and
add
push
les
or
mov
repz
decl
shlb
lcall
mulb
fisubrl
or
sub
ljmp
insl
push
fldl
orb
fdivrl
sub
call
sub
xchg
and
mov
jle
add
je
inc
fwait
mov
jmp
popa
cmpsl
jns
lods
sbb
fcmove
in
xor
mov
xlat
lret
lods
rorb
test
mov
test
add
jg
or
sbb
mov
xchg
shl
call
xchg
icebp
cwtl
orl
subl
push
shl
jae
sub
call
int3
xor
pop
sahf
mov
inc
lods
cs
push
jg
incl
mov
cwtl
jno
je
test
popa
testb
xor
mov
jns
ljmp
jle
adc
add
test
push
xchg
aaa
lret
cmp
cs
pushl
fwait
dec
stos
aaa
or
push
int
outsb
fwait
mov
dec
jle
inc
and
mov
in
pop
jns
adc
hlt
ljmp
push
mov
pusha
jno
cmpsb
add
mov
jo
mov
ss
pop
movsb
jne
lods
mov
jg
lcall
cmpsl
jno
fcompl
insb
push
aam
sbb
pop
mov
mov
sub
fucomip
pushl
cmp
lea
cltd
push
sbb
pop
stc
ret
lahf
loop
fildl
es
das
mov
mov
xlat
add
ss
stos
jmp
dec
mov
fwait
and
xchg
ss
ljmp
add
mov
adc
cmp
clc
incl
add
push
in
bound
pop
jo
add
cmpsl
mov
mov
mov
aaa
movsl
call
cltd
and
lret
add
jg
mov
or
lock
lcall
incl
ljmp
add
fsubrs
bound
lcall
mov
movsw
sti
fnstenv
gs
cmp
arpl
jne
enter
jmp
xor
idivb
rcr
push
xchg
mov
sar
or
jmp
jne
push
outsb
mov
add
and
icebp
les
xrelease
cmp
pop
mov
cld
cmpb
std
aas
push
ljmp
call
add
aad
lds
movsb
fldenv
jmp
mov
jne
xchg
sbb
ljmp
mov
stc
pop
push
popa
adc
mov
gs
xor
bound
lock
dec
icebp
decl
pushf
or
nop
jl,pt
das
sti
and
or
movsl
ljmp
mov
std
cmp
sbb
mov
adc
aas
pop
pop
outsl
mov
imul
outsl
inc
xor
dec
sbb
fucomip
incl
push
stos
xor
adc
std
test
into
in
outsl
sbb
int
xchg
mov
ljmp
movsl
imul
fwait
outsl
nop
popf
stos
pop
sahf
ljmp
movsl
mov
mov
add
outsb
mov
ficompl
cmp
mov
fbld
push
cmp
dec
jnp
pop
or
in
dec
jecxz
addl
xchg
or
rcr
dec
jb
fildll
fimull
ljmp
fstl
cmp
xor
jl
out
pop
aaa
jle
mov
mov
mov
fwait
jb
mov
or
ss
add
incl
scas
mov
loope
scas
cs
push
mov
clc
repnz
movsl
movsb
jnp
mov
aaa
pop
lods
and
outsl
sub
inc
frstor
mov
mov
sbb
les
hlt
add
decb
add
imul
mov
cmp
pop
std
mov
jnp
mov
add
sbb
mov
scas
iret
cmp
mov
adc
sbb
jmp
cmp
jae
sub
cmp
pop
ror
call
jmp
xor
pop
arpl
pop
push
sub
clc
jg
push
cmc
pop
push
push
add
sub
ljmp
into
adc
mov
pop
lods
fidivs
adc
add
and
movb
jg
pop
xchg
dec
xchg
xlat
fs
push
aam
adc
sbb
and
adc
mov
inc
mov
movsb
lcall
dec
dec
cltd
in
jle
sub
out
mov
ljmp
adc
or
ds
cmp
jns
aad
scas
cmp
jmp
mov
aad
ret
jle
cwtl
or
xchg
sbb
and
xchg
or
pop
loopne
jg
inc
sub
push
scas
mov
popa
cmp
sbb
ljmp
mov
add
fwait
in
mov
mov
xchg
bound
das
std
idiv
jp
es
addr16
stos
fnstsw
pop
jno
insb
fcmove
mov
sbb
aad
ljmp
mov
xor
jmp
sbb
jecxz
jno
lret
or
inc
rcrb
jg
mov
test
ret
inc
repz
pop
dec
mov
ljmp
inc
movsl
scas
push
cmp
inc
cwtl
sti
jb
dec
add
lcall
shr
jbe
inc
cmp
push
push
xlat
cmp
mov
aas
sub
fiadds
test
adc
mov
xchg
cli
dec
insb
popa
jmp
jp
sbb
mov
in
cltd
add
xchg
mov
lret
cmp
loop
call
scas
rcrb
div
inc
add
fidivs
adc
add
xchg
jmp
incl
and
stos
and
fadd
je
dec
dec
leave
je
je
xchg
xchg
subb
loop
sub
enter
cld
jge
xor
outsb
dec
std
and
je
push
ljmp
cld
call
and
outsl
xchg
or
or
cli
adcl
ja
push
or
dec
and
ret
inc
ficomps
clc
jg
adc
decl
fwait
lret
test
lcall
lods
in
js
xor
jo
ljmp
repnz
mov
inc
pop
pop
cmp
stos
fcmovbe
or
lcall
outsl
xchg
fistl
push
in
in
push
sahf
add
push
mov
icebp
adc
jecxz
rcl
das
jne
xor
xor
jnp
mov
push
call
lods
shrl
mov
push
mov
dec
push
xchg
and
push
lcall
dec
add
and
test
sbb
jmp
pop
fnstcw
sbb
jmp
inc
jmp
fstpt
fs
sar
jnp
in
ffreep
insl
push
adc
dec
popa
test
sub
sbb
in
repz
cmp
pushl
sub
fadds
fidivrl
cmpl
ljmp
lcall
loope
fnstenv
ja
iret
call
cs
adc
inc
incl
daa
fwait
rcl
and
cmpsl
or
cld
and
jmp
pop
mov
ret
mov
cltd
arpl
pop
or
xor
stos
cmp
mov
call
xor
jecxz
adc
xor
lock
pop
xchg
and
sbb
or
insb
sti
into
filds
push
xor
or
incl
repz
dec
push
cli
imul
mov
inc
pop
or
cli
aaa
mov
dec
movsl
mov
pop
shlb
test
aaa
cmp
pop
fs
pusha
sbb
lret
bsf
mov
mov
pop
clc
xor
sbb
add
cmp
shr
inc
jmp
xor
imul
ret
pop
idivb
pop
testl
dec
xlat
push
mov
stc
cmp
add
mov
push
mov
mov
movsl
stc
mov
add
cmp
ja
inc
sub
cld
inc
pop
cmp
sbb
mov
cmp
nop
ret
nop
adc
outsl
imul
sti
cwtl
cld
inc
dec
rcr
int3
test
lods
sub
cwtl
pop
lcall
nop
nop
in
in
push
sub
loope
fwait
xchg
sub
jmp
lods
push
lcall
inc
ret
xchg
sbb
in
in
xor
mov
or
push
mov
inc
push
fcoml
test
push
fcmovne
and
mov
test
jno
inc
fnsave
mov
pop
or
lret
cmpsb
imul
and
lods
call
fldt
dec
and
push
xchg
incb
in
and
loope
dec
fwait
pop
push
rol
mov
call
loope
es
in
dec
jb
sbb
push
lea
popa
out
test
fisttpll
ljmp
mov
and
pop
nop
or
xchg
int
fstl
ljmp
cmp
and
add
invlpg
outsl
cmc
jmp
gs
andl
pop
jne
stos
jl
enter
push
call
js
push
adc
mov
pop
mov
insl
data16
dec
ret
decl
cmp
cwtl
test
sbb
and
xchg
fsubp
jae
mov
mov
call
fwait
jne
sub
cli
adc
dec
daa
arpl
je
jg
mov
mov
ficoms
fcoms
fdivrl
int3
mov
ret
in
insl
inc
mov
es
les
call
lock
aam
cmp
pop
je
add
fldl
ss
out
or
mov
in
jo
mov
inc
lcall
push
lds
mov
loopne
xchg
sub
dec
outsl
arpl
mov
test
jmp
fucomip
out
jo
inc
fs
and
mov
lods
mov
xor
daa
jno
outsl
ljmp
rorb
jmp
or
push
movsl
test
dec
xor
ljmp
call
and
jg
cmp
stc
adc
imul
adc
shlb
sbb
pushl
adc
lcall
pop
cmp
sahf
or
sbb
add
test
test
cs
hlt
jecxz
jns
or
mov
lret
das
lret
xchg
xchg
loope
cmpsl
mov
dec
in
mov
mov
sbb
incl
adc
sub
int3
xchg
cli
jno
pop
mov
or
ret
cmc
xchg
clc
mov
aam
mov
lods
leave
iret
sub
push
outsl
push
in
js
test
scas
mov
das
inc
pop
das
in
cmpsb
stos
inc
jle
orb
push
cmc
fsubs
inc
push
adc
call
ds
push
or
jg
xchg
xchg
cld
fst
test
and
mov
dec
gs
mov
push
sub
cmpsb
xchg
leave
jmp
jle
test
call
ss
pop
mov
xchg
mov
insb
insl
mov
cmp
push
pop
loop
outsl
mov
testb
imul
incl
shl
enter
ret
in
or
leave
jp
fidivs
ds
ljmp
imul
mov
xchg
cli
xchg
clc
push
or
lock
cmp
push
pusha
xor
and
pop
int3
push
xchg
rorl
inc
icebp
push
outsl
into
xor
ds
popa
lods
mov
push
add
inc
add
cli
mov
insb
mov
adc
cld
pushl
ljmp
hlt
cs
adc
leave
sahf
xchg
jg
rolb
ficomps
inc
fldcw
loop
mov
cmp
rcl
in
into
addb
stos
lods
ds
push
popa
inc
fisttpll
in
mov
rcr
pop
stos
stos
jp
call
jmp
cs
repz
ss
call
fdiv
cmp
jbe
shlb
inc
xor
xchg
je
lock
push
push
xor
shlb
mov
ja
adc
ljmp
outsl
std
push
cmp
sub
push
jnp
outsb
inc
dec
pop
push
gs
imul
outsb
std
incl
lret
or
nop
cmp
cmp
icebp
xor
call
pusha
aam
and
sbb
push
jmp
int
or
lock
fistpl
cwtl
in
cmpsb
lret
call
aaa
xchg
out
mov
incl
nop
fnsave
fsub
outsl
pop
or
cmp
mov
dec
jb
pushl
std
daa
inc
sub
push
mov
push
icebp
push
stc
inc
in
call
cli
mulb
scas
lret
mov
cmp
incl
call
jle
lret
sub
movsb
rol
jno
std
sbb
test
call
sbb
mov
lds
jmp
push
fs
cmc
js
mov
sbb
aaa
adc
sub
add
xor
inc
sub
repz
sub
mov
mov
push
ljmp
sbb
xor
nop
pop
aad
push
cmpl
mov
add
icebp
xor
fildl
movsl
or
call
popl
nop
lods
xor
dec
jp
jge
xchg
cmc
add
mov
testb
test
and
sbb
in
cmpb
mov
jg
or
call
jg
mov
xor
test
cmc
ljmp
decl
fs
sti
cmc
mov
repz
fdivl
lcall
jl
and
scas
xchg
ja
pop
sbb
jnp
mov
popa
dec
lods
pcmpgtd
or
out
xchg
loop
pushl
and
lret
cmp
sub
inc
inc
inc
mov
inc
cmc
neg
mov
pop
inc
movsb
pop
and
into
inc
shl
sbb
mov
push
xchg
lea
pop
mov
incl
cld
pusha
movsl
ret
push
and
cs
jbe
or
mov
mov
mov
incl
filds
push
arpl
mov
subb
push
movsb
fcom
jecxz
ljmp
in
mov
rcr
and
and
outsl
dec
push
pop
pop
clc
jg
add
push
xor
aaa
in
dec
sbb
push
idivb
fs
decl
jl
lds
mov
jbe
adc
jne
bound
decl
lahf
lret
push
or
and
lret
into
and
jns
xlat
sub
jmp
xchg
adc
pop
adc
ret
sub
mov
outsl
or
pop
ljmp
adc
add
jmp
test
mov
pop
xchg
icebp
sub
adc
shrb
or
decl
cmpsl
scas
push
and
jo
test
rcrb
cltd
mov
sarl
popf
sub
ljmp
rolb
cltd
push
adc
wrmsr
add
mov
ficompl
lcall
es
jecxz
icebp
in
and
lds
imul
mov
test
lret
loopne
cld
outsb
or
or
xlat
mul
arpl
or
mov
movsb
divb
mov
imul
xchg
inc
sbbl
in
outsb
mov
lods
mov
daa
fiadds
insb
push
inc
ret
pop
sub
xor
das
lock
lahf
push
sub
jg
add
out
lcall
shlb
push
lods
leave
mov
fsubrs
aad
data16
pop
loopne
sbb
xchg
je
test
pop
aam
sbb
shrb
dec
pop
ljmp
dec
into
aaa
xor
mov
cmpl
imul
cli
divb
es
dec
xchg
in
jg
adc
jg
push
pop
test
in
lcall
inc
and
call
fidivl
lcall
popf
add
cltd
mov
scas
jns
cld
ljmp
jbe
xor
cli
std
cs
in
leave
movsl
or
mov
dec
add
adc
outsl
lock
dec
jno
rcrb
mov
jae
jae
pop
mov
jmp
cvtdq2ps
fisttps
push
jns
dec
int3
inc
xor
cli
mov
call
xchg
adc
sbb
sub
leave
mov
sbb
jg
mov
in
stos
pop
mov
adc
outsb
mov
mov
and
imul
leave
out
push
mov
std
hlt
loope
adc
ljmp
sahf
push
call
xor
mov
fistps
clc
repnz
sub
mov
inc
cmpsl
loop
call
out
repnz
in
sub
out
pop
fs
fidivrs
mov
or
clc
lcall
test
dec
cli
popf
xchg
push
popf
sarb
scas
adc
decl
jne
inc
cmp
cmp
call
lcall
or
push
xor
fadd
and
jo
pop
push
push
pop
mov
incb
les
mov
scas
subl
mov
ljmp
mov
pop
adc
scas
insl
pop
stos
ss
mov
ror
outsl
push
mov
fdivrp
jmp
loop
mov
data16
mov
ret
mov
xchg
pop
cli
mov
mov
clc
jmp
xor
mov
mov
mov
gs
insb
lret
push
sbb
mov
lcall
add
inc
fwait
scas
test
sub
fcomip
push
add
fisttpll
test
lcall
cmpb
ret
mov
lret
mov
cmpl
lods
mov
and
cli
movsb
cmp
jbe
mov
loope
pop
in
lahf
jle
sub
test
pop
push
call
jmp
mov
fdivp
aaa
mov
xchg
jmp
call
adc
jns
ljmp
dec
push
mov
adc
inc
push
push
mov
sub
scas
rolb
xlat
pusha
jmp
cmp
lcall
ficoml
mov
dec
clc
jo
jge
add
es
sbb
insb
loop
loop
call
icebp
test
add
lods
addr16
xchg
sbb
pop
mull
clc
ljmp
cli
mov
shr
jecxz
jmp
rcrb
outsl
dec
inc
xorl
or
mov
aam
cmpsl
mov
mov
jl
jmp
jmp
jno
popa
iret
stc
xchg
addl
mov
and
jg
or
fildll
mov
inc
ror
push
push
clc
int
call
mov
in
and
mov
mov
mov
cmp
or
sarb
pop
mov
jmp
iret
push
cmpl
adc
rcrl
jbe
negb
aas
cmp
call
aas
ss
sub
popa
arpl
sub
aaa
jb
aaa
and
loopne
pop
mov
nop
imul
ljmp
cmp
mov
lods
add
push
divl
cld
push
dec
stos
in
inc
push
shlb
mov
ret
hlt
popf
jmp
push
movsb
or
push
and
mov
inc
mov
mov
push
lds
cs
add
jmp
pop
mov
xor
sti
or
sbb
es
lea
fbld
sub
call
cmp
dec
mov
in
and
or
mov
sahf
addr16
jle
lret
mov
adc
sarl
fcom
inc
aas
jae
pop
mov
push
mov
aaa
cli
cmp
popa
ds
push
shlb
dec
push
mov
int3
fwait
ret
mull
sub
or
cltd
xlat
xor
push
push
push
sbb
jg
push
and
lock
mov
mov
mov
adc
xlat
pop
cli
call
enter
sti
stos
inc
adc
or
mov
push
cmpsb
mov
fs
test
mov
pop
lods
cmp
dec
cld
jbe
jl
push
and
mov
mov
sbb
int
and
mov
jne
ret
lock
adc
and
out
and
mov
cmovno
or
pop
jns
mov
pop
movsb
int3
sbb
clc
fistps
mov
mov
movsb
in
adc
sbb
jae
fmuls
aaa
fmuls
sub
cld
testl
iret
jle
je
ljmp
int
sub
cmpl
fnsetpm(287
mov
fistpl
add
sbb
jl
jge
imul
ljmp
jmp
pushf
repz
out
aam
mov
inc
ret
out
sbb
and
stos
push
jg
fiaddl
push
mov
aad
push
fcmovnbe
pop
movsl
ljmp
ljmp
jmp
and
sbbl
lahf
dec
mov
inc
ja
mov
leave
cli
mov
xchg
clc
movsl
sub
stos
dec
or
lahf
call
push
decl
jmp
jno
sub
test
out
cmpsb
inc
movsb
inc
pushf
dec
or
mov
add
rcrb
or
movsb
and
fimuls
pushf
cmp
add
pop
rclb
mov
and
imul
popf
inc
jne
mov
pushf
sarl
das
hlt
sub
clc
iret
lods
adc
test
xor
int
jle
xchg
push
or
sbbb
mov
das
adc
push
scas
movsb
imul
loope
pop
sbb
lods
pop
adc
dec
add
insl
sub
fcmovbe
and
or
popa
rolb
ret
fbstp
mov
call
inc
mov
test
imul
sti
scas
mov
lds
jae
test
insl
sbb
xor
ljmp
aam
pop
jg
pop
rolb
hlt
jae
test
ret
incl
cmp
sbb
test
incl
xchg
movsb
adc
add
repnz
mov
pop
int
and
jmp
orl
inc
add
imul
outsl
mov
push
fs
push
xchg
pop
or
pop
pop
sbb
mov
jg
and
js
mov
and
and
mov
xchg
cmp
add
test
enter
and
inc
xor
fdivrs
mov
aam
dec
pop
jg
incl
iret
lds
in
cmc
cs
aad
mov
aas
leave
jg
call
mov
mov
inc
imul
lret
inc
xchg
or
pop
test
mov
and
call
xlat
mov
addr16
imul
sub
es
gs
add
and
xchg
cmpsl
sub
jg
and
mov
mov
pop
cmpsl
andb
push
xchg
mov
pushl
inc
outsb
test
fxch
dec
push
pusha
int3
mov
icebp
in
xorl
sbb
outsl
fs
out
pushf
cmpl
ss
jmp
aam
lds
call
gs
rcll
jp
fmull
mov
mov
adc
push
sbb
call
shrl
inc
xchg
enter
fnstenv
cmp
lea
sahf
mov
dec
fcoms
pop
mov
lret
xchg
inc
pushl
jp
dec
inc
std
or
pushf
test
fcoms
mov
push
incl
dec
pop
mov
mov
mov
outsl
sub
out
jg
sti
aas
and
push
imul
das
imul
loop
push
jecxz
aam
xchg
outsb
add
roll
pop
jnp
cmp
pop
jno
and
sbb
aas
in
ja
int
iret
sbb
and
loop
andl
stc
jae
or
inc
xor
sahf
xchg
cli
lcall
sub
fimuls
hlt
out
rcl
jle
sbb
aaa
mov
sar
cwtl
lret
jl
mov
repz
jg
mov
adcb
xor
ja
daa
mov
inc
inc
ljmp
pop
mov
mov
hlt
aas
and
movsb
sub
pop
call
in
inc
pop
adc
out
or
movsl
mov
fwait
in
insb
jecxz
out
mov
or
pop
jmp
pop
mov
mov
add
stos
loopne
dec
jo
adc
adc
jmp
iret
in
cmp
pushl
jle
and
fmuls
xor
popf
jno
mov
mov
sub
mov
jno
dec
loopne
out
jg
mov
pushf
lock
jnp
mov
outsl
mov
add
fistpll
xchg
test
dec
inc
inc
pop
loopw
out
imul
jo
mov
push
cmp
push
enter
adc
adc
dec
data16
decl
decl
xlat
imul
mov
or
stos
clc
in
push
sub
jg
jmp
add
xchg
add
mov
mov
or
loopne
jmp
cld
lea
sbb
mov
inc
loop
sub
call
adc
filds
add
mov
ret
les
push
arpl
movsb
add
call
decl
inc
fdivs
jg
sub
inc
add
or
movsb
jp
jmp
pushl
fucom
jg
add
mov
sbb
push
xchg
imul
mov
call
jo
jl
sbb
lret
cwtl
scas
loop
aaa
leave
push
shll
filds
xchg
scas
jbe
loop
pop
hlt
repnz
fnstsw
popa
cli
xor
xchg
call
cmp
xchg
jbe
push
lcall
jge
stos
jp
xor
cli
cmp
pushf
push
call
mov
popf
dec
or
dec
loop
dec
loop
sub
cld
mov
cld
sbb
inc
sub
mov
cmp
push
fucom
sar
xchg
cli
cmp
mov
fucomip
out
mov
xor
dec
push
loop
lcall
loop
imul
pop
sbb
and
xchg
sub
push
mov
std
cmp
fisttps
sti
test
int3
jo
aas
adc
mov
cmpsl
or
pop
xlat
stc
inc
mov
fstl
popa
jb
jmp
adc
xor
jnp
inc
or
mov
in
test
call
push
mov
loope
pop
dec
fnstcw
fsubrs
jb
jg
icebp
aad
cs
inc
lock
test
jle
add
xor
sub
inc
fstps
mov
call
mov
fstp
xchg
adc
mov
sbb
incb
mov
and
ljmp
jl
cmp
push
mov
cmp
mov
push
adc
adc
call
fildll
push
leave
xchg
mov
or
xor
sub
dec
arpl
jge
mov
aaa
cli
pushl
mov
push
pushf
jge
cmp
addl
push
pop
jbe
jg
jle
dec
push
sub
cltd
inc
cmp
sbbb
jle
mov
jg
xor
jl
or
aaa
ss
dec
sbb
lretw
fucomip
and
mov
jge
ret
ds
fmuls
out
inc
jnp
fmuls
mov
sbb
loope
out
and
insb
in
fidivl
lcall
mov
imul
repz
mov
pop
xchg
stc
sarb
cmp
out
add
dec
adc
xchg
jno
scas
dec
aad
out
pop
jbe
sbb
mov
pushf
in
mov
mov
outsl
vmovapd
add
jne
sbb
call
mull
cmp
mov
cmp
push
flds
addl
xor
movsb
pop
push
mov
add
mov
ljmp
fidivrl
push
lcall
in
mov
push
cmp
mov
in
xlat
stos
mov
jg
mov
mov
cltd
cltd
mov
movsl
pop
bound
mov
sar
ljmp
dec
pop
or
iret
outsb
faddl
das
pop
fistl
pop
xlat
sahf
int3
test
dec
out
jecxz
dec
in
fld
jno
jl
js
adc
add
pop
je
jns
dec
inc
mov
idiv
jg
cmp
push
xchg
and
inc
clc
sarb
icebp
orl
or
ljmp
xor
jge
fcoms
mov
jecxz
and
and
call
pop
enter
fsubl
int3
subb
push
ljmp
xchg
lret
jmp
inc
push
mov
xchg
fwait
xlat
test
adc
idivl
shl
xor
icebp
ficoml
lods
lret
aaa
cli
push
push
fstps
dec
ja
sbb
mov
lds
popa
push
mov
push
mov
call
.byte
.byte
cmpsl
mov
mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
jg
ficomps
or
pop
pop
pop
leave
or
and
ja
ja
mov
faddl
out
std
fwait
les
jae
fld
or
lds
fldt
pop
popa
enter
lret
lret
outsb
mov
int
into
push
outsb
mov
add
xor
xor
inc
mov
mov
cmp
pop
fdivs
fldcw
scas
fidivl
fisttpl
push
add
pop
loop
pop
xlat
jne
jecxz
add
inc
in
out
out
call
jmp
jmp
in
pop
in
xor
xlat
je
lock
pslld
repz
cmc
sbb
add
aaa
clc
stc
dec
add
std
fldt
pop
sti
js
cld
je
mov
push
call
test
adc
orb
lock
adc
pop
clc
scas
mov
or
add
rorb
outsb
or
je
jg
push
inc
add
sbb
push
mov
sbb
adc
mov
pop
push
pop
je
loopne,pn
fstpt
push
adc
or
pop
or
mov
movsb
dec
jbe
shr
pushf
data16
pop
adc
or
insl
sbb
push
addr16
fbstp
jmp
sti
jne
stos
or
add
loope
lcall
inc
lret
sbb
cmpl
in
testb
loope
jmp
cmp
push
push
push
inc
dec
pushf
je
adc
pop
ret
movsbl
push
mov
pop
jae
les
ret
jmp
push
pushl
sbb
push
push
xor
mov
test
je
mov
sbb
ljmp
lock
inc
mov
test
mov
jne
andb
ss
pop
clc
out
mov
inc
push
xor
movzbl
inc
cmp
jl
clc
pop
jg
mov
shlb
or
stc
stc
shll
add
sbb
je
sub
cmp
push
lods
jmp
add
pop
adcb
aas
mov
lock
or
clc
add
sub
or
inc
ret
stos
shlb
cmp
add
pop
cmp
in
inc
andl
mov
push
push
push
pop
and
add
and
gs
xorl
dec
pop
jne
or
call
call
inc
inc
sub
in
ds
sti
or
xchg
dec
inc
nop
lock
cmpsb
lahf
outsb
mov
add
mov
std
lods
jae
push
aad
cmpb
jbe
mov
cltd
mov
mov
lea
push
imul
cmp
cmp
jl
dec
clc
out
sub
jbe
inc
shl
imul
push
inc
cld
in
cmp
sbb
jmp
or
add
insb
sbb
sub
sti
push
aas
mov
xor
cmp
jbe
test
adc
ret
mov
push
ds
jg
cmp
jl
mov
push
or
shl
nop
mov
out
fistps
stos
insl
lea
push
jmp
popa
sti
fildl
adc
xchg
sub
sbb
fcomps
add
std
jbe
lret
fmull
frstor
inc
or
fidivs
fst
mov
pavgb
les
push
add
xor
xlat
faddl
insb
xor
shll
add
dec
bound
shll
bound
dec
shll
jb
inc
add
mov
sub
jmp
scas
fildl
shll
dec
ret
imul
lds
scas
scas
scas
sbb
push
enter
lods
fdivs
mov
test
mov
push
push
dec
ljmp
adc
push
repz
sti
cld
lea
cld
iret
sub
sub
ret
std
add
insl
push
in
inc
cmp
decl
jl
mov
xchg
subl
shr
dec
mov
fsubs
jmp
outsl
pop
sbb
rcrl
loope
push
fldl
add
jg
leave
sbb
jnp
jl
pusha
inc
jp
jae
xchg
ret
call
mov
inc
dec
jne
stos
push
push
push
inc
push
cmp
in
push
xlat
xor
daa
loop
shlb
adc
idivb
jne
xchg
push
js
push
pop
jle
cmp
or
and
cmp
jne
push
rclb
mov
mov
dec
scas
push
dec
cmp
and
je
adc
arpl
push
xchg
sbb
ficoms
or
jne
or
or
add
jb
add
xchg
push
sub
jmp
ret
in
push
inc
je
jmp
je
or
ret
sub
sti
xchg
cld
fldt
inc
xor
cmp
shl
lahf
inc
into
shl
fisttpll
cmp
sbb
lcall
fdiv
or
es
or
fsubs
scas
idiv
testb
je
dec
movb
jne
add
or
in
cmpb
xor
incb
in
jmp
cld
adc
mov
add
mov
shlb
and
cwtl
rol
sub
test
push
mov
and
adc
movsl
dec
ljmp
add
mov
cmpsb
mov
mov
fs
mov
outsb
gs
xor
dec
or
adc
xlat
aam
aam
mov
lds
pop
rorb
loope
add
inc
les
rcll
lods
lods
xlat
aad
jne
scas
adc
and
jne
mov
mov
mov
mov
mov
mov
mov
jne
mov
add
in
lods
mov
adc
dec
dec
xchg
push
aas
push
cld
dec
or
ret
repnz
es
sub
repnz
movsb
sub
in
lea
in
mov
jo
mov
inc
dec
repnz
mov
not
xchg
pop
xor
fmull
mov
mov
cmp
insb
neg
mov
inc
mov
pop
ret
mov
out
add
cmp
in
loope
jp
push
xchg
mov
push
push
loope
add
mov
dec
add
push
das
or
mov
jmp
bound
mov
mulb
sbb
xchg
inc
mov
sbb
mov
loope
dec
fildl
fadds
mov
dec
push
outsl
xorl
push
push
sbb
mov
mov
clc
das
push
mov
ror
sbb
fcoms
int3
insl
paddb
sub
daa
insb
or
fcomps
int
mov
add
into
mov
mov
cmp
push
push
sub
cmp
mov
cmp
mov
push
popf
xor
adc
imul
lcall
jne
cwtl
cmpsb
jo
xchg
jmp
je
pop
jmp
in
xchg
in
pop
out
psrlq
out
inc
mov
mov
jb
cmp
xor
je
inc
imul
sbb
xor
jl
mov
inc
in
stos
or
mov
cmc
popf
cld
ret
mov
std
enter
sub
add
sbb
sub
or
push
loop
push
push
addr16
sahf
stos
mov
or
insb
or
xor
jne
adc
fsubl
mov
shlb
adc
test
sbb
adc
xchg
lds
je
mov
mov
lods
roll
aam
in
and
pop
cmovbe
jmp
or
daa
rclb
cmp
fcoml
fmuls
lcall
and
sbb
ljmp
ret
loope
jg
movsl
movsw
movsb
push
inc
pop
ljmp
daa
movsl
ret
sbb
jbe
cwtl
jne
sarl
testl
fst
popa
and
xchg
push
inc
call
push
jg
pop
imul
and
shll
xchg
pusha
push
and
mov
pop
cld
mov
xchg
inc
out
adc
cmp
cmp
insl
add
dec
push
or
scas
jle
adc
dec
aaa
mov
fucomi
jge
repz
js
jnp
pop
idiv
cmp
jle
mov
mov
or
or
add
ret
cs
jl
pop
add
push
or
cs
pop
pop
jecxz
movl
std
cmp
mov
in
ret
stc
movsb
movsl
in
inc
ds
sti
cltd
sti
pushf
cld
add
cld
je
mov
js
push
add
adc
frstor
icebp
push
jge
push
test
inc
jmp
lea
test
sahf
mov
mov
sarb
test
jecxz
in
add
out
out
pop
arpl
sub
inc
loopne
fadd
sbb
arpl
or
dec
shrb
inc
test
ret
in
jne
adc
mov
and
dec
mov
incl
xor
rclb
fdivrs
aas
cwtl
sti
ljmp
inc
jbe
cld
adc
and
push
xchg
cmp
out
push
out
imul
testb
inc
push
out
or
xor
dec
gs
rcl
xor
inc
repnz
repz
xlat
inc
shl
cmc
scas
notb
imull
cmpsb
imul
imul
inc
add
inc
jmp
jo
fsubs
fstps
fcmovnu
fucom
inc
imul
stos
sbb
xlat
lds
in
push
mov
cmp
decl
lret
sub
subl
sarb
stos
jmp
roll
shll
xor
aam
inc
lret
mov
in
test
or
popa
adcl
adc
add
pop
dec
pop
aad
adc
dec
mov
and
and
call
mov
xor
cmp
jne
push
call
or
insb
fdivr
xlat
pusha
or
sbb
insb
aaa
bound
xor
xor
dec
push
in
ljmp
sbb
clc
pop
jbe
clc
das
rolb
add
int
inc
inc
add
addr16
push
adc
xchg
fildll
inc
dec
pop
movsb
data16
and
mov
xor
out
dec
test
bound
faddl
push
addr16
cmp
je
jmp
adc
std
test
movsb
pop
cmp
push
mov
adc
jae
in
sub
xor
mov
jmp
insl
adc
pop
fadds
jecxz
push
mov
pop
and
pop
ret
jp
xor
adc
jle
push
gs
or
mov
aaa
sub
push
call
add
add
and
sub
outsb
sub
pusha
lock
dec
sub
pop
cmp
jae
call
add
or
pop
adc
mov
push
push
int3
or
ja
inc
fnsave
bswap
mov
add
outsl
pop
jbe
pushf
nop
pusha
pushf
pushl
sbb
adc
cmc
idivb
loope
push
pusha
push
nop
adc
movl
aas
roll
cmp
jmp
test
insl
inc
push
mov
pop
mov
or
insl
fstpt
push
jmp
testb
in
testl
clc
rcrb
inc
sub
add
stos
test
pop
inc
dec
fstl
icebp
xor
and
mov
adc
inc
cmpsb
scas
dec
pushf
push
imul
sti
ret
inc
or
pushf
pushf
pusha
js
jo
aaa
ret
aam
andb
loope
sub
pop
mov
pop
in
add
cmc
sbb
adc
push
mov
jns
inc
int
adc
aad
inc
mov
add
mov
cmovne
stos
stos
stos
or
rolb
test
adc
mov
add
imul
or
lea
inc
insb
inc
mov
jecxz
push
fld
cmp
pop
xlat
das
push
ret
data16
out
hlt
jge
pop
mov
xor
mov
mov
mov
push
push
popf
int
inc
testb
push
mov
in
lea
cs
dec
mov
jae
outsl
sub
int
fmuls
pop
je
cmp
cwtl
push
test
cmp
lret
cmp
or
inc
add
mov
mov
push
push
add
out
push
add
pop
gs
fisubrl
imul
ficomps
movsb
sbb
jnp
inc
ja
mov
mov
xor
rcrb
inc
jg
clc
test
addr16
sub
je
leave
push
cmp
pop
sbb
push
in
in
jmp
clc
xor
and
mov
or
fadd
push
cwtl
fdivr
ds
sbbl
enter
jbe
adc
enter
and
popa
add
inc
leave
pusha
or
inc
adc
out
fsubrs
mov
out
mov
mov
jne
add
or
xor
mov
hlt
or
out
imul
pop
adc
inc
adc
mov
in
cmpsb
mov
add
and
pop
addb
in
jo
adc
ss
in
cs
fwait
lea
in
addb
lds
dec
js
pop
ljmp
rcr
jp
leave
mov
enter
jae
inc
cli
sbb
add
int
push
adc
ret
add
test
rorb
aaa
outsl
or
fdivr
mov
loope
push
inc
mov
push
out
loope
xchg
push
or
lcall
sub
pusha
out
adcl
cld
push
pusha
fmull
aaa
mov
sbb
test
sbb
push
xchg
xacquire
add
mov
mov
mov
sti
ljmp
loop,pn
push
in
in
out
or
jmp
ror
in
enter
and
xor
out
sbb
push
ja
testb
push
pop
ret
adc
dec
cmp
add
mov
adc
enter
out
mov
mov
add
pushf
jb
add
mov
outsl
std
sbb
mov
push
adc
mov
shl
es
push
enter
into
xor
sbb
icebp
push
inc
pop
ret
int3
jmp
xlat
insb
add
pushf
xor
mov
xchg
xchg
xchg
mov
mov
xchg
rol
int3
inc
lods
clc
adc
es
fcoms
cld
mov
push
sbb
cltd
push
push
clc
ja
fcmovnu
xchg
neg
sbb
testb
add
add
idivl
adc
jmp
add
jae
sub
mov
add
outsl
or
loope
or
add
add
push
dec
sub
or
rol
sti
out
dec
sti
sub
or
sub
add
adc
or
cmp
frstor
xor
add
lock
push
xchg
cmp
cs
loopne
pop
fcomi
jecxz
jl
inc
sbb
jge
or
daa
jbe
push
xchg
mov
xor
mov
add
dec
in
xor
std
lcall
and
call
mov
inc
or
testb
repnz
jbe
aam
aad
fcmovnbe
dec
movsb
jl
imulb
pop
mov
jmp
sub
int
lods
lea
sti
push
xchg
sahf
mov
mov
icebp
in
push
or
test
xor
inc
add
ret
mov
fdivrl
inc
call
add
add
xchg
sti
add
mov
xor
iret
inc
enter
or
add
xor
js
xchg
lcall
aam
divb
push
sub
out
xor
je
aas
pop
fwait
cmpsb
imul
xor
shrl
sbb
and
inc
pusha
imul
adc
mov
xor
add
xor
shrl
sbb
sub
xor
sarl
dec
push
pop
bound
xor
jb
xchg
mov
shll
enter
xlat
xor
xlat
or
add
cmp
imul
fiaddl
mov
cwtl
add
pshufw
xor
xchg
mov
movsb
and
dec
arpl
mov
inc
cmovge
popa
scas
test
ret
pop
jle
jae
and
adc
scas
mov
and
sub
psadbw
call
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
dec
add
outsl
icebp
pushl
jns
and
cmp
cmp
not
adc
pushl
xchg
out
sbb
mov
mov
add
dec
js
mov
inc
ss
pushw
xor
push
push
inc
push
push
xor
and
adc
inc
xchg
sub
or
add
out
jg
and
and
dec
gs
gs
xchg
je
lock
add
xor
xor
pop
add
pop
mov
xchg
push
nop
mov
pop
mov
lea
je
lea
ljmp
sbbb
adc
out
adc
jnp
add
add
push
call
push
push
mov
call
mov
pop
popf
popa
jmp
push
inc
inc
pop
pop
pop
adc
into
scas
loope
repz
mov
fldcw
hlt
pushl
and
imul
sub
fisttpl
jne
test
rolb
mov
addr16
mov
je
mov
inc
outsl
insl
arpl
mov
jae
arpl
jae
mov
cmpsl
mov
pop
into
out
or
rcr
mov
out
mov
aaa
and
mov
mov
mov
inc
dec
dec
inc
inc
subl
dec
inc
pop
inc
daa
out
std
jnp
daa
aam
lret
rol
mov
mov
mov
aas
xchg
lea
pop
xchg
ljmp
mov
inc
popa
arpl
and
shlb
mov
adcb
stos
inc
dec
out
xlat
ss
ss
xlat
mulb
mov
aad
enter
insl
outsl
fs
ljmp
or
ljmp
fcoml
push
xor
dec
das
mov
imull
jae
jne
sbb
ret
outsb
fs
sub
push
outsw
outsb
cmp
or
aaa
pop
jae
jae
insl
jl
jge
pushl
aaa
mov
xchg
and
imul
push
push
jb
arpl
sbb
outsl
jo
aaa
fs
fnstsw
add
outsl
je
push
je
jns
or
add
mov
or
js
push
and
add
push
sbb
cmp
cmp
sbb
in
jae
bound
inc
dec
push
push
push
inc
pop
dec
dec
inc
push
dec
mov
mov
sysexit
xor
xor
xchg
lcall
ljmp
lds
jnp
aaa
cmpb
icebp
add
scas
add
add
push
add
loope
pusha
mov
add
in
inc
inc
add
std
mov
pop
mov
int
mov
push
pushl
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
mov
or
out
fimull
cmpsl
int
jg
mov
add
mov
stos
fbld
pop
mov
repz
mov
mov
jle
mov
popa
test
pop
scas
cmp
test
pop
ljmp
in
mov
inc
jne
add
add
loopne
cmp
xor
or
push
or
sbb
faddl
jmp
or
gs
sbb
daa
add
pop
add
add
mov
add
sub
adc
and
xchg
push
add
mov
sub
inc
fmuls
mov
pop
or
fsubs
outsl
subl
or
ds
in
outsl
cmp
add
jb,pn
popa
je
add
in
pop
fdivs
shrb
sar
andb
add
js
loope
jbe
jo
add
mov
subb
insb
ja
xor
xor
jb
gs
pop
sti
gs
outsl
arpl
add
aas
ret
jae
popa
arpl
repz
add
sarb
out
fs
nop
dec
loopne
xchg
jge
sbb
daa
dec
dec
push
cltd
rcr
mov
xor
into
and
ljmp
xchg
cmp
xorl
pop
je
mov
jbe
inc
push
fcmovne
jns
and
pop
test
daa
fnstcw
aam
mov
idiv
stc
mov
mov
out
into
adc
rol
sbb
insb
sbb
pop
and
cli
outsb
lods
pop
dec
fdivrp
jmp
pop
mov
add
jecxz
loopne
inc
push
mov
rcll
mov
lcall
adc
hlt
cmp
mov
inc
addb
mov
cs
repz
fcos
ljmp
jl
mov
dec
ljmp
hlt
sub
in
dec
mov
ljmp
pushl
mov
and
stos
loop
cwtl
pop
cmpb
out
mov
pop
lcall
inc
sbb
ret
stc
xchg
mov
or
std
negl
jne
gs
mov
ljmp
and
mov
test
lods
notb
pushf
lahf
push
in
xlat
cmp
xor
outsb
ficoms
negb
fsts
mov
dec
outsl
sub
mov
mov
push
cmp
push
push
stc
inc
cs
sub
jb
push
sahf
cmp
pop
fmull
gs
pop
inc
mov
cld
push
in
negb
ljmp
jns
inc
mov
mov
sub
in
mov
push
lahf
pushl
inc
imull
push
adc
dec
daa
xor
lea
adc
out
mov
cwtl
dec
xchg
mov
cmp
adcl
test
icebp
stos
addr16
mov
fiadds
gs
sub
mov
add
into
in
push
mov
les
incl
popf
mov
and
out
inc
xchg
xchg
in
out
in
and
xchg
mov
jmp
decl
in
rorl
dec
adc
fwait
ss
cmp
aas
fsubs
imul
jg
insb
xchg
inc
fnsave
jp
dec
std
xchg
mov
or
sub
test
decl
sbb
xchg
adc
dec
xor
fimull
cmp
dec
jp
fldcw
xlat
jmp
stc
inc
lods
push
or
fistpll
inc
lds
mov
mov
in
lcall
test
cmc
inc
push
js
cmp
mov
adc
stos
loopne
mov
jmp
jge
mov
and
xor
gs
movsb
jg
incl
jle
mov
arpl
mov
das
sub
fldcw
jmp
or
mov
hlt
aaa
movsb
hlt
outsb
cmp
loope
leave
inc
pop
xor
xchg
shl
jmp
cmp
lods
pushf
mov
xchg
xor
jmp
dec
movsl
aaa
andl
fistpll
cmp
std
ds
popa
repz
inc
dec
push
out
or
call
pop
adc
mov
fildl
stc
pop
xor
les
lds
dec
iret
xor
out
xor
or
mov
dec
out
xor
je
into
or
rclb
ss
lods
sbbl
xor
jg
mov
pop
out
push
mov
mov
ljmp
loop
rcll
jmp
dec
insb
dec
sahf
pusha
pop
out
dec
frstor
test
lcall
mov
lret
icebp
xchg
jg
stc
cmpsb
aad
xor
dec
inc
and
and
xchg
jnp
decl
loope
lahf
or
push
xchg
dec
mov
fisubrs
scas
loope
std
hlt
fisttps
cmp
incl
jb
sbb
mov
iret
pop
outsl
sarb
outsl
out
call
into
imul
inc
decl
lret
hlt
adc
pop
testb
jg
aaa
ret
mov
mov
sbb
dec
adc
mov
sub
daa
jae
inc
shll
mov
dec
call
sbb
mov
ret
jecxz
aas
sbb
ja
daa
ss
movsb
mov
mov
popl
inc
orl
mov
clc
adc
mov
mov
loope
call
xor
call
mov
insb
sub
adc
sbb
lds
repz
decl
inc
shll
lea
mov
fbstp
sar
mov
xor
pop
rcr
rcr
popf
sub
incl
pop
aaa
xchg
adc
lea
ss
mov
adc
adc
mov
stos
test
mov
push
call
cmp
decl
push
fidivs
dec
adc
outsl
ljmp
iret
fwait
xor
lds
pop
aad
call
adc
pop
cmp
cli
jmp
add
jecxz
push
outsl
xlat
fstpt
mov
push
mov
xorb
sub
sbb
adcb
sahf
ret
lea
imul
inc
inc
push
clc
cmpsl
insl
add
push
cmp
inc
mov
xchg
mov
call
push
cvtpi2ps
getsec
xor
or
mov
mov
cmp
cs
imul
les
sbb
or
loopne
mov
cmc
jle
mov
push
jae
fstpl
roll
push
adc
scas
mov
push
ret
lcall
cltd
aad
push
pop
jg
push
mov
lret
pmullw
mov
daa
jmp
imul
js
dec
xor
out
and
enter
add
sbb
add
test
mov
decl
jp
dec
in
xor
pop
test
push
ljmp
clc
pushl
fidivrl
imul
push
cmpsl
mov
sub
cmp
or
mov
dec
or
push
push
fdivp
incl
mov
push
fildl
gs
cwtl
gs
xor
mov
movsl
sbb
push
ljmp
fwait
inc
mov
push
jnp
pop
ret
call
xchg
mov
lds
cmp
xor
and
pop
adc
pop
test
dec
punpcklbw
incl
lds
imulb
xchg
loope
xchg
add
stc
cltd
xchg
stc
fiaddl
cli
sbb
cli
cmp
pop
call
cli
pop
jnp
jmp
jp
cltd
in
add
cmpsl
incl
cmp
fs
sbbl
mov
mov
incl
cmp
xor
ds
pop
push
jp
pop
or
pop
js
jbe
pop
mov
call
sbb
jno
fs
test
and
lods
or
push
outsb
arpl
jmp
rcrb
imul
inc
aas
cmpsb
jecxz,pn
adc
xchg
mov
mov
incl
clc
lret
ss
pop
adc
stos
sub
clc
adc
lcall
iret
and
jae
xor
pop
or
sub
out
pushl
enter
comiss
push
fisubrs
repz
lret
mov
cmp
lcall
popa
sbb
fstpl
mov
aas
add
vcvtpd2psx
lret
sar
shlb
adc
inc
inc
add
repnz
ljmp
and
cmp
sub
ret
jmp
sahf
out
jle
ljmp
pop
mov
ds
shlb
ret
or
fidivrl
outsb
mov
push
inc
gs
into
mov
jmp
stos
sbb
in
bound
outsb
pop
push
cmp
lcall
ss
sub
mov
jmp
lock
adc
or
lcall
xor
xchg
pop
jg
inc
pop
imul
or
iret
bound
xor
call
fnstsw
add
mov
icebp
call
dec
dec
fxam
lea
dec
xchg
xchg
xor
fcmovu
or
loopne
push
in
add
int
mov
lcall
pushl
push
popf
and
enter
add
dec
push
mov
inc
js
sar
mov
std
cmp
nop
dec
jne
fdivl
mov
push
int3
pop
push
cmpsl
jb
and
sbb
rcl
dec
lds
mov
mov
mov
das
std
decl
in
mov
lea
sbb
dec
aad
mov
jecxz
sub
and
movsl
mov
pusha
insb
add
das
xchg
sbb
adc
popa
movsb
pop
shll
mov
lret
ret
decl
push
xor
lcall
xchg
push
pop
popa
mov
pop
mov
mov
pop
fiaddl
test
pop
dec
sar
jp
inc
loope
data16
jg
ljmp
mov
repnz
ds
daa
imul
adc
in
call
mov
in
pop
jb
out
jnp
unpckhps
pop
fmul
sub
decl
ja
ljmp
xchg
sti
mov
xchg
xlat
adcl
cwtl
inc
sbb
out
cmc
jp
incl
ret
das
dec
out
flds
mov
in
shl
dec
lahf
push
inc
mov
inc
cmpsb
inc
jbe
call
leave
xchg
pandn
jb
sbb
dec
int3
dec
add
inc
adc
jnp
inc
and
fcomip
or
pop
sub
xchg
dec
cld
adc
sub
sub
subb
lock
push
fsubrl
mov
add
fdivrl
outsl
mov
cmc
mov
and
imul
lahf
iret
lret
cli
incl
jg
ljmp
scas
in
mov
in
mov
call
xchg
sbb
jbe
dec
cmp
cwtl
jnp
call
lahf
mov
je
cmp
mov
mov
xchg
add
das
cld
ljmp
mov
outsl
cwtl
jbe
loopne
pushf
arpl
into
repnz
lcall
call
cmp
or
and
mov
mov
movsl
test
jle
out
out
xor
lcall
std
je
fs
mov
mov
sub
stc
xor
sub
jmp
les
cmp
stc
es
lcall
xor
outsl
pop
mov
movsl
scas
push
jae
push
push
mov
dec
add
xchg
and
cmpsb
ss
call
jb
cld
in
lds
xchg
push
loope
mov
sar
pop
inc
lods
out
pop
add
lret
fldl
sub
aaa
jae
je
js
mov
popf
lret
in
inc
scas
aaa
addr16
jp
sbb
pushl
enter
mov
int3
fwait
inc
xchg
mov
sbb
jge
incl
lret
out
mov
push
cmp
sbb
out
fsubp
std
pop
sub
jg
lcall
scas
adc
loopne
lods
loopne
xchg
cmp
mov
mov
cmpsl
pop
inc
mov
ss
sub
adc
ljmp
mov
mov
lahf
or
mov
ret
dec
cmp
cld
sub
bnd
inc
cwtl
pop
addr16
fnsave
or
inc
push
ljmp
xor
lea
jmp
shlb
push
rcl
push
and
xchg
mov
cs
sbb
push
cmp
incl
cli
es
lods
data16
fisttpll
std
addr16
lods
dec
cmp
ljmp
or
sahf
sbb
jl
mov
sub
xor
inc
in
cld
xchg
aad
mov
repz
pop
inc
and
mov
hlt
cmp
pop
push
lock
decl
dec
xchg
hlt
add
adc
inc
cld
test
adc
lds
push
lcall
mov
cmp
dec
sahf
mov
dec
loope
pop
mov
in
sbb
jmp
das
jnp
jbe
out
mov
negl
das
shl
xor
push
cmp
lcall
jnp
in
out
lcall
lret
movsb
cmpsb
mov
aaa
cli
jg
mov
ds
iret
loop
in
sbb
lods
jg
mov
pop
loop
pushl
mov
mov
mov
sub
jb
repnz
mov
in
ljmp
loop
dec
jno
shll
into
pop
nop
sti
movsl
jo
rol
mov
imul
fisttpl
sub
pop
adc
cmp
ljmp
add
pop
shl
lcall
loopne
xchg
sbb
push
clc
lods
decl
inc
icebp
sub
xchg
push
rcll
sbb
lahf
mov
jecxz
push
cli
inc
adc
jb
inc
outsl
lahf
in
jle
push
enter
or
ljmp
aaa
cltd
jmp
cmp
mov
std
jecxz
add
call
jo
sti
lock
repz
xor
out
push
lahf
cs
mov
subb
outsl
sbb
jbe
dec
call
sbb
sub
mov
loop
aam
addr16
call
jnp
in
fistps
xor
inc
lds
mov
pushl
jp
sbb
decb
fcompl
jge
fucom
lcall
out
negb
sbb
or
cmc
aaa
lcall
mov
push
pop
cmp
and
cmp
movsb
not
dec
out
das
mov
cmp
pop
clc
xchg
clc
sbb
movsl
push
pusha
xlat
lahf
lds
add
loope
call
push
in
lods
stc
fndisi(8087
and
xor
lds
xlat
clc
decl
inc
rolb
lahf
pop
ss
adcb
test
loop
call
inc
jg
jno
add
lds
ffreep
jo
xchg
add
pop
push
mov
cmp
andb
shrl
call
iret
clc
push
cmp
xor
out
xchg
rcpps
jmp
push
sti
adc
cmp
lcall
std
jmp
xchg
adc
pop
hlt
pushf
dec
fmuls
fimull
jp
sarl
inc
jno
icebp
push
jo
push
aas
std
lock
jmp
xor
scas
in
pop
mov
jle
aaa
pop
pop
mov
xlat
popf
inc
cld
cmc
imul
jo
pop
mov
decl
cmc
mov
mov
loop
rcl
aaa
sar
ljmp
imul
ret
scas
int3
cmp
nop
in
xlat
mov
fs
mov
add
mov
lret
daa
std
mov
mov
mov
adc
sbb
push
fdivrs
sbb
inc
push
decl
sub
and
sbb
or
jo
sar
mov
mov
inc
xchg
ja
pop
jne
sub
mov
ss
and
outsb
jbe
sub
push
test
jmp
inc
sti
stos
and
repnz
pushf
aad
in
lcall
mov
xor
xor
nop
adc
pushf
sti
or
loope
and
jg
push
iret
push
adc
in
adc
pop
push
pop
sti
cwtl
push
call
ljmp
testb
data16
aam
lds
ss
cmp
inc
aaa
cs
mov
jmp
popa
cwtl
inc
cmc
mov
add
mov
dec
addr16
dec
and
incl
mov
mov
or
clc
fbstp
inc
shlb
ds
mov
stc
hlt
aad
roll
and
sub
pop
popa
mov
fcoms
insl
outsl
lods
push
loop
or
rol
popf
inc
pop
xchg
outsb
lea
ja
fucomip
jb
jae
stos
mov
cs
stos
pop
adc
xchg
in
mov
imul
mov
call
pop
xor
movsb
dec
mov
out
je
or
add
sti
mov
push
ret
sbb
fcompl
scas
sbb
cmp
pushl
cmp
cmp
mov
je
gs
mov
cmp
or
inc
and
and
imul
cmp
push
push
std
data16
lcall
leave
cs
into
cmp
dec
jmp
mov
fimuls
push
dec
into
jg
mov
add
push
jecxz
ret
cli
sub
mov
popa
mov
mov
mov
jmp
xor
add
push
in
lcall
jbe
push
or
push
sub
leave
or
in
xchg
fs
jb
xchg
pusha
mov
add
or
std
lcall
mov
loope
fmuls
push
jle
cld
inc
dec
lds
mov
sbb
jae
mov
insl
or
stos
dec
ss
ljmp
mov
mov
add
cs
in
pop
fiaddl
cmp
mov
push
mov
insb
icebp
mov
push
add
jle
imul
in
rorb
mov
ljmp
mov
pop
mov
shl
insb
or
dec
in
xor
inc
mov
jmp
sbb
stc
jno
pop
cmp
cmpsb
in
loope
loopne
ljmp
dec
shll
lds
push
sbbb
clc
pop
dec
test
cmp
das
push
mov
cld
aas
inc
pop
dec
loop
pop
aam
cmp
pushf
jl
rclb
fistpll
scas
add
in
cmp
outsb
sub
xchg
int
int
sbb
or
and
push
xor
lock
xchg
push
out
dec
cs
or
aaa
ficompl
mov
xor
and
movsb
call
sbb
ja
push
or
pop
mov
mov
out
popa
cmp
pop
loopne
pop
ja
pop
jo
sub
testl
mov
inc
cmp
and
and
jl
stos
xchg
clc
je
adc
das
mov
sbb
and
push
push
shrb
inc
jmp
in
jle
sub
mov
lret
pop
xchg
jle
adc
out
mov
pop
aas
mov
arpl
mov
xor
inc
insl
and
aas
pop
clc
mov
cmp
mov
mov
incl
jg
xchg
loope
mov
jg
jmp
cwtl
mov
jmp
pop
out
mov
inc
xor
mov
clc
lcall
or
je
pop
mov
mov
mov
clc
pop
dec
jmp
stos
inc
and
mov
inc
pop
lahf
outsb
jl
adc
icebp
ljmp
jge
fwait
adc
dec
mov
out
icebp
sbb
das
pop
cmp
pushl
xor
hlt
rolb
jne
jbe
loopne
xchg
cmp
sub
adc
insb
neg
push
add
mov
jns
or
out
xlat
fdivr
sbb
mov
jmp
xchg
in
repz
dec
lock
mov
repz
pop
dec
loope
xchg
mov
mov
jmp
adc
mov
cmp
or
rorl
dec
gs
in
test
incb
jnp
cmpsb
std
mov
xchg
fwait
movsb
xor
adc
out
adc
sbb
jns
insl
xorl
or
js
dec
outsl
out
fists
in
jmp
mov
or
in
sahf
dec
pop
push
inc
adc
sbb
jo
jg
pushl
test
movsl
push
es
rorl
fisttpll
in
sbb
lcall
jno
dec
sub
leave
stos
test
test
out
fwait
push
vaddpd
add
ljmp
icebp
xor
or
dec
or
xor
mov
cs
adc
ljmp
sbb
add
cltd
and
push
xor
scas
int
popf
addb
mov
aaa
aaa
ljmp
mov
std
inc
in
popf
aas
clc
dec
pop
clc
das
hlt
sbb
and
sub
cld
jg
icebp
js
loop
push
jb
mov
aaa
cmp
fwait
nop
mov
sub
in
and
aas
cmp
add
mov
jbe
stos
adc
lock
lds
or
out
fsubp
sbb
mov
test
call
jmp
fdivrl
fidivrs
sub
pushl
cmp
ja
lea
data16
ret
xlat
int3
jge
or
or
or
notb
std
push
dec
pop
and
sti
cli
ljmp
sub
mov
cmc
arpl
add
fcompl
cli
pop
cmp
push
xor
adc
bound
pop
inc
dec
ljmp
aad
jle
test
rolb
xchg
jns
in
jg
in
popf
mov
paddsw
cltd
pop
inc
push
bound
andb
sbb
pop
clc
sub
push
pop
mov
fisttpll
cmp
mov
mov
push
lds
call
fildll
pop
push
icebp
jp
dec
jl
int3
mov
hlt
push
mull
je
xchg
clc
ljmp
and
loop
inc
into
jnp
sub
adc
lcall
mov
nop
and
and
jge
jg
adc
icebp
decl
inc
pushf
xchg
mov
push
xor
add
in
testb
hlt
xchg
pusha
jmp
sahf
dec
ficoms
mov
call
inc
mov
or
out
leave
push
inc
sbb
push
lods
clc
sub
outsb
jae
mov
or
gs
call
jp
sti
inc
adc
jns
dec
movsl
inc
and
jo
dec
cmpsb
int3
imul
lods
xchg
inc
jecxz,pn
clc
call
mov
sub
iret
icebp
mov
push
repz
call
xchg
lods
fnstsw
pop
add
pop
inc
xor
inc
fst
lock
js
dec
ss
cld
or
mov
jg
loop
jns
jmp
push
mov
and
pop
insb
mov
mov
add
aaa
divl
lock
call
sbbb
push
cmc
daa
outsl
xchg
mov
lcall
sbb
cmpsl
mov
outsl
and
fwait
pop
adc
test
stos
or
lock
xchg
es
aas
repnz
fwait
dec
pop
in
xchg
mov
push
adc
jmp
xlat
adc
mov
sbb
mov
jg
lods
repz
push
int
rcrb
lret
pop
std
ljmp
pop
repz
jno
jl
imulb
mov
int3
or
fdivp
cli
pop
mov
bound
stos
dec
scas
sti
sbb
dec
and
movsl
adc
or
lods
add
ror
call
test
lret
push
imul
in
movsb
xlat
pusha
adc
jle
jbe
pop
lahf
cld
xor
jmp
mov
cmp
imul
iret
mov
out
outsl
cld
pop
das
sub
or
int3
orl
lock
sub
int
sahf
add
push
sbb
sbb
xchg
jns
inc
sub
push
jae
aam
test
xchg
cli
in
sbb
sbb
lcall
cs
mov
fisttpll
aaa
stos
mov
jnp
jg
fisttps
mov
mov
adc
or
dec
or
outsb
pop
cli
pop
add
addr16
mov
mov
inc
adc
mov
jp
jmp
lods
add
es
cwtl
and
mov
sub
stos
vmovdqa
sub
mov
or
aaa
clc
jg
pop
push
insb
pushl
adc
pop
enter
xchg
cmp
jno
mov
cmp
insb
or
int
sbb
test
sub
mov
decl
sub
or
gs
or
bound
xchg
mov
pop
into
enter
outsl
cld
ljmp
or
popl
mov
in
or
test
jg
lcall
push
fcomip
test
dec
cmp
mov
jp
lcall
pushl
fildll
pop
jle
rorl
stos
sub
lea
sbb
mov
and
inc
call
int3
addr16
jmp
ss
mov
stc
xchg
and
mov
jg
incl
jl
mov
adc
je
fisubs
mov
adc
cmpsb
lret
pop
mov
repnz
jg
hlt
incl
jge
enter
jb
int
mov
rcrl
mov
hlt
decl
jge
je
push
jne
or
decl
inc
xor
insl
pinsrw
jbe
ljmp
pop
jmp
sub
cld
push
push
fcmovnu
clc
push
xchg
fldl
xlat
dec
inc
sub
or
les
lcall
xlat
pop
mov
imul
xorl
push
mov
sahf
adc
ret
call
jae
icebp
or
sub
std
or
lods
cli
push
sbb
xchg
pop
mov
jmp
repz
sbb
sub
data16
mov
sti
cmp
mov
mov
pushl
mov
aam
mov
inc
lock
cld
sbb
mov
add
adc
jmp
sub
lea
sub
test
sub
and
add
pushl
mov
aas
pushf
das
scas
subb
cmp
clc
xchg
xchg
fsubl
push
ud0
ljmp
fldt
push
pop
and
and
jg
or
dec
test
inc
fsubr
inc
mov
ss
inc
repnz
popf
in
lock
sbb
pop
aam
jge
lcall
inc
ds
cmp
sub
mov
pop
cmp
inc
fisubrl
lods
stos
push
outsl
lock
xchg
jns
call
xchg
mov
adc
dec
inc
dec
and
stos
dec
jno
pop
loopne
in
aam
adc
jge
popf
shll
jno
xchg
in
cld
ljmp
icebp
adc
das
dec
jmp
cmp
adc
mov
jle
cmc
pushl
clc
out
xor
sub
mov
out
pop
pop
jecxz
cwtl
addr16
ss
pop
loopne
ljmp
pop
dec
or
cmp
test
in
imul
inc
sbb
jmp
shll
mov
adc
mov
cmp
add
mov
mov
jle
push
ljmp
jp
xor
movsb
cmp
or
aas
mov
jae
es
fwait
stc
rcll
inc
cmp
xchg
clc
add
jbe
pop
enter
pop
inc
lods
mov
incl
pushf
out
sub
outsl
cli
frstor
test
mov
jl
das
mov
jbe
dec
lods
xchg
test
mov
fldcw
add
test
inc
pushl
and
mov
jp
mov
pop
jecxz
fdiv
sbb
in
dec
lods
xchg
cli
or
jp
inc
rclb
ljmp
lock
aaa
repnz
xor
cmp
je
jns
dec
cltd
sbb
sar
or
fcoms
data16
jp
sbb
add
fucomp
cwtl
es
cmp
or
push
add
and
add
lods
lcall
sbb
scas
add
pop
mov
fisubrs
or
mov
xchg
lret
sub
ljmp
addb
xchg
stos
pop
lret
jecxz
ret
loop
and
adc
ljmp
cld
stc
pop
cmpsb
push
cs
je
movsl
in
jg
cli
fnstcw
xlat
out
repnz
ljmp
cwtl
and
mov
adcl
and
call
int3
xchg
inc
aaa
in
loope
stc
jg
dec
lods
pop
adc
inc
dec
int3
jae
subb
inc
jge
pop
imul
stos
dec
or
inc
and
push
mov
or
loop
adc
xchg
rep
xchg
fsub
ljmp
pop
push
push
pop
or
fadds
je
js
jl
or
cmp
sbb
adc
mov
into
icebp
mov
pop
jl
xchg
cwtl
aaa
pop
mov
lret
mov
or
fcos
inc
cmc
mov
out
pop
cmpb
xor
mov
mov
daa
push
mov
inc
jne
stos
mov
sbb
out
xchg
pushf
js
lock
outsl
xor
xchg
mov
ret
addr16
jno
or
mov
bound
daa
and
mov
or
bound
and
pushl
clc
xchg
add
loop
dec
int
stc
xor
push
xchg
rol
outsb
add
hlt
faddp
adc
jne
lds
adc
dec
stos
cmp
cld
mov
jo
mov
push
pop
or
mov
pop
pop
out
mov
outsl
cld
push
mov
nop
testl
pushf
js
cwtl
sbb
adc
in
incl
pusha
leave
sbb
mov
cmp
ret
fists
fsubs
sub
and
cmc
int3
mov
xchg
inc
xchg
je
push
push
lcall
cld
xchg
mov
jmp
std
lods
dec
testl
scas
lods
mov
xor
jmp
sar
pop
out
flds
rorl
xchg
sbb
into
repnz
insl
repz
fmulp
fwait
pop
movsb
or
jnp
sub
imul
and
incl
cmp
bound
jne
popa
xchg
fisubs
inc
lret
jg
mov
xor
aaa
insl
into
pop
push
or
enter
decl
xchg
or
aad
cltd
test
ljmp
jmp
not
sahf
fxtract
cmc
and
mov
decl
lret
out
inc
stos
pop
pushf
mov
lret
cmp
push
xchg
sub
outsl
jne
cld
shrb
xchg
jg
fwait
sahf
xchg
or
je
popf
js
call
xor
enter
push
mov
icebp
jns
mov
imul
sbb
sahf
jge
pop
push
fwait
mov
sbb
cmc
pusha
test
out
jg
and
xchg
mov
negb
ljmp
mov
dec
repz
sub
pop
loope
fwait
pusha
xor
xchg
les
jp
xor
ss
loop
pushf
nop
pop
rorl
movsb
jmp
lods
out
dec
or
push
test
les
jg
mov
out
jmp
out
mov
adc
dec
push
jo
ljmp
pop
dec
in
leave
loopne
mov
adc
mov
stos
icebp
cmp
mov
inc
pushl
cmpsb
pop
fdivrp
sbb
mov
in
repnz
stos
xor
ljmp
pop
jg
inc
cmpsb
mov
mov
sub
dec
ljmp
inc
call
or
sub
jae
xchg
test
mov
xchg
repz
xchg
mov
jle
jg
std
add
popf
mov
mov
test
xor
outsl
cld
fbstp
mov
jns
jmp
mov
sbbl
xchg
pop
test
repz
dec
sub
xchg
adc
jg
shrl
jl
pop
jg
leave
enter
rcll
pop
test
incl
inc
push
or
mov
dec
idiv
jg
inc
aas
ret
ret
add
adc
js
repz
mov
addb
adc
jo
clc
jbe
cltd
nop
subb
adc
mov
add
lcall
into
jg
adc
mov
mov
add
outsl
icebp
incl
add
pusha
jmp
push
jbe
shll
out
out
jmp
mov
aaa
inc
ja
js
fst
inc
cmpl
call
ret
sub
aaa
jle
clc
in
lret
mov
in
std
out
pop
mov
jg
and
movsl
mov
daa
sarb
fmuls
push
pop
stos
in
addr16
es
inc
cmp
push
adc
jo
add
testl
jge
cmpsb
adc
xorl
call
dec
xchg
ljmp
test
inc
add
fistl
cld
insl
dec
cmp
jge
adc
dec
dec
cs
les
lds
ficoms
cmpl
test
mov
mov
xchg
and
adc
incb
dec
push
add
lcall
movsl
mov
or
cltd
es
xchg
sbb
mov
out
jge
push
je
mov
or
ds
fstps
pushl
subl
xchg
cmpsl
xchg
pushf
xor
jg
test
incl
lcall
add
cmp
shrl
imul
adc
inc
cmpsb
cmp
ds
lcall
int3
mov
sub
sbb
xor
idivb
xor
pop
in
pop
std
pushl
stos
mov
inc
enter
test
mov
mov
mov
out
aaa
sub
scas
cmpsb
mov
cmp
xor
mov
aas
xchg
fbld
mov
es
push
adc
lahf
pop
jg
cwtl
subl
inc
cmp
pop
shlb
jmp
roll
or
rclb
ret
pop
outsl
test
dec
cld
in
cmp
cmpsl
mov
aaa
dec
xor
dec
cmp
insl
jne
jge
push
xchg
push
repz
inc
lcall
jae
or
pop
push
andl
sarl
movd
or
sbb
sbb
roll
lcall
adc
cli
test
stos
mov
mov
push
sbb
pushl
loop
addl
andl
mov
nop
mov
mov
decl
scas
xor
pop
cld
mov
xlat
lock
mov
jno
fdivrl
pop
jp
inc
dec
mov
mov
and
add
push
les
or
mov
repz
decl
shlb
lcall
mulb
fisubrl
or
sub
ljmp
insl
push
fldl
orb
fdivrl
sub
call
sub
xchg
and
mov
jle
add
je
inc
fwait
mov
jmp
popa
cmpsl
jns
lods
sbb
fcmove
in
xor
mov
xlat
lret
lods
rorb
test
mov
test
add
jg
or
sbb
mov
xchg
shl
call
xchg
icebp
cwtl
orl
subl
push
shl
jae
sub
call
int3
xor
pop
sahf
mov
inc
lods
cs
push
jg
incl
mov
cwtl
jno
je
test
popa
testb
xor
mov
jns
ljmp
jle
adc
add
test
push
xchg
aaa
lret
cmp
cs
pushl
fwait
dec
stos
aaa
or
push
int
outsb
fwait
mov
dec
jle
inc
and
mov
in
pop
jns
adc
hlt
ljmp
push
mov
pusha
jno
cmpsb
add
mov
jo
mov
ss
pop
movsb
jne
lods
mov
jg
lcall
cmpsl
jno
fcompl
insb
push
aam
sbb
pop
mov
mov
sub
fucomip
pushl
cmp
lea
cltd
push
sbb
pop
stc
ret
lahf
loop
fildl
es
das
mov
mov
xlat
add
ss
stos
jmp
dec
mov
fwait
and
xchg
ss
ljmp
add
mov
adc
cmp
clc
incl
add
push
in
bound
pop
jo
add
cmpsl
mov
mov
mov
aaa
movsl
call
cltd
and
lret
add
jg
mov
or
lock
lcall
incl
ljmp
add
fsubrs
bound
lcall
mov
movsw
sti
fnstenv
gs
cmp
arpl
jne
enter
jmp
xor
idivb
rcr
push
xchg
mov
sar
or
jmp
jne
push
outsb
mov
add
and
icebp
les
xrelease
cmp
pop
mov
cld
cmpb
std
aas
push
ljmp
call
add
aad
lds
movsb
fldenv
jmp
mov
jne
xchg
sbb
ljmp
mov
stc
pop
push
popa
adc
mov
gs
xor
bound
lock
dec
icebp
decl
pushf
or
nop
jl,pt
das
sti
and
or
movsl
ljmp
mov
std
cmp
sbb
mov
adc
aas
pop
pop
outsl
mov
imul
outsl
inc
xor
dec
sbb
fucomip
incl
push
stos
xor
adc
std
test
into
in
outsl
sbb
int
xchg
mov
ljmp
movsl
imul
fwait
outsl
nop
popf
stos
pop
sahf
ljmp
movsl
mov
mov
add
outsb
mov
ficompl
cmp
mov
fbld
push
cmp
dec
jnp
pop
or
in
dec
jecxz
addl
xchg
or
rcr
dec
jb
fildll
fimull
ljmp
fstl
cmp
xor
jl
out
pop
aaa
jle
mov
mov
mov
fwait
jb
mov
or
ss
add
incl
scas
mov
loope
scas
cs
push
mov
clc
repnz
movsl
movsb
jnp
mov
aaa
pop
lods
and
outsl
sub
inc
frstor
mov
mov
sbb
les
hlt
add
decb
add
imul
mov
cmp
pop
std
mov
jnp
mov
add
sbb
mov
scas
iret
cmp
mov
adc
sbb
jmp
cmp
jae
sub
cmp
pop
ror
call
jmp
xor
pop
arpl
pop
push
sub
clc
jg
push
cmc
pop
push
push
add
sub
ljmp
into
adc
mov
pop
lods
fidivs
adc
add
and
movb
jg
pop
xchg
dec
xchg
xlat
fs
push
aam
adc
sbb
and
adc
mov
inc
mov
movsb
lcall
dec
dec
cltd
in
jle
sub
out
mov
ljmp
adc
or
ds
cmp
jns
aad
scas
cmp
jmp
mov
aad
ret
jle
cwtl
or
xchg
sbb
and
xchg
or
pop
loopne
jg
inc
sub
push
scas
mov
popa
cmp
sbb
ljmp
mov
add
fwait
in
mov
mov
xchg
bound
das
std
idiv
jp
es
addr16
stos
fnstsw
pop
jno
insb
fcmove
mov
sbb
aad
ljmp
mov
xor
jmp
sbb
jecxz
jno
lret
or
inc
rcrb
jg
mov
test
ret
inc
repz
pop
dec
mov
ljmp
inc
movsl
scas
push
cmp
inc
cwtl
sti
jb
dec
add
lcall
shr
jbe
inc
cmp
push
push
xlat
cmp
mov
aas
sub
fiadds
test
adc
mov
xchg
cli
dec
insb
popa
jmp
jp
sbb
mov
in
cltd
add
xchg
mov
lret
cmp
loop
call
scas
rcrb
div
inc
add
fidivs
adc
add
xchg
jmp
incl
and
stos
and
fadd
je
dec
dec
leave
je
je
xchg
xchg
subb
loop
sub
enter
cld
jge
xor
outsb
dec
std
and
je
push
ljmp
cld
call
and
outsl
xchg
or
or
cli
adcl
ja
push
or
dec
and
ret
inc
ficomps
clc
jg
adc
decl
fwait
lret
test
lcall
lods
in
js
xor
jo
ljmp
repnz
mov
inc
pop
pop
cmp
stos
fcmovbe
or
lcall
outsl
xchg
fistl
push
in
in
push
sahf
add
push
mov
icebp
adc
jecxz
rcl
das
jne
xor
xor
jnp
mov
push
call
lods
shrl
mov
push
mov
dec
push
xchg
and
push
lcall
dec
add
and
test
sbb
jmp
pop
fnstcw
sbb
jmp
inc
jmp
fstpt
fs
sar
jnp
in
ffreep
insl
push
adc
dec
popa
test
sub
sbb
in
repz
cmp
pushl
sub
fadds
fidivrl
cmpl
ljmp
lcall
loope
fnstenv
ja
iret
call
cs
adc
inc
incl
daa
fwait
rcl
and
cmpsl
or
cld
and
jmp
pop
mov
ret
mov
cltd
arpl
pop
or
xor
stos
cmp
mov
call
xor
jecxz
adc
xor
lock
pop
xchg
and
sbb
or
insb
sti
into
filds
push
xor
or
incl
repz
dec
push
cli
imul
mov
inc
pop
or
cli
aaa
mov
dec
movsl
mov
pop
shlb
test
aaa
cmp
pop
fs
pusha
sbb
lret
bsf
mov
mov
pop
clc
xor
sbb
add
cmp
shr
inc
jmp
xor
imul
ret
pop
idivb
pop
testl
dec
xlat
push
mov
stc
cmp
add
mov
push
mov
mov
movsl
stc
mov
add
cmp
ja
inc
sub
cld
inc
pop
cmp
sbb
mov
cmp
nop
ret
nop
adc
outsl
imul
sti
cwtl
cld
inc
dec
rcr
int3
test
lods
sub
cwtl
pop
lcall
nop
nop
in
in
push
sub
loope
fwait
xchg
sub
jmp
lods
push
lcall
inc
ret
xchg
sbb
in
in
xor
mov
or
push
mov
inc
push
fcoml
test
push
fcmovne
and
mov
test
jno
inc
fnsave
mov
pop
or
lret
cmpsb
imul
and
lods
call
fldt
dec
and
push
xchg
incb
in
and
loope
dec
fwait
pop
push
rol
mov
call
loope
es
in
dec
jb
sbb
push
lea
popa
out
test
fisttpll
ljmp
mov
and
pop
nop
or
xchg
int
fstl
ljmp
cmp
and
add
invlpg
outsl
cmc
jmp
gs
andl
pop
jne
stos
jl
enter
push
call
js
push
adc
mov
pop
mov
insl
data16
dec
ret
decl
cmp
cwtl
test
sbb
and
xchg
fsubp
jae
mov
mov
call
fwait
jne
sub
cli
adc
dec
daa
arpl
je
jg
mov
mov
ficoms
fcoms
fdivrl
int3
mov
ret
in
insl
inc
mov
es
les
call
lock
aam
cmp
pop
je
add
fldl
ss
out
or
mov
in
jo
mov
inc
lcall
push
lds
mov
loopne
xchg
sub
dec
outsl
arpl
mov
test
jmp
fucomip
out
jo
inc
fs
and
mov
lods
mov
xor
daa
jno
outsl
ljmp
rorb
jmp
or
push
movsl
test
dec
xor
ljmp
call
and
jg
cmp
stc
adc
imul
adc
shlb
sbb
pushl
adc
lcall
pop
cmp
sahf
or
sbb
add
test
test
cs
hlt
jecxz
jns
or
mov
lret
das
lret
xchg
xchg
loope
cmpsl
mov
dec
in
mov
mov
sbb
incl
adc
sub
int3
xchg
cli
jno
pop
mov
or
ret
cmc
xchg
clc
mov
aam
mov
lods
leave
iret
sub
push
outsl
push
in
js
test
scas
mov
das
inc
pop
das
in
cmpsb
stos
inc
jle
orb
push
cmc
fsubs
inc
push
adc
call
ds
push
or
jg
xchg
xchg
cld
fst
test
and
mov
dec
gs
mov
push
sub
cmpsb
xchg
leave
jmp
jle
test
call
ss
pop
mov
xchg
mov
insb
insl
mov
cmp
push
pop
loop
outsl
mov
testb
imul
incl
shl
enter
ret
in
or
leave
jp
fidivs
ds
ljmp
imul
mov
xchg
cli
xchg
clc
push
or
lock
cmp
push
pusha
xor
and
pop
int3
push
xchg
rorl
inc
icebp
push
outsl
into
xor
ds
popa
lods
mov
push
add
inc
add
cli
mov
insb
mov
adc
cld
pushl
ljmp
hlt
cs
adc
leave
sahf
xchg
jg
rolb
ficomps
inc
fldcw
loop
mov
cmp
rcl
in
into
addb
stos
lods
ds
push
popa
inc
fisttpll
in
mov
rcr
pop
stos
stos
jp
call
jmp
cs
repz
ss
call
fdiv
cmp
jbe
shlb
inc
xor
xchg
je
lock
push
push
xor
shlb
mov
ja
adc
ljmp
outsl
std
push
cmp
sub
push
jnp
outsb
inc
dec
pop
push
gs
imul
outsb
std
incl
lret
or
nop
cmp
cmp
icebp
xor
call
pusha
aam
and
sbb
push
jmp
int
or
lock
fistpl
cwtl
in
cmpsb
lret
call
aaa
xchg
out
mov
incl
nop
fnsave
fsub
outsl
pop
or
cmp
mov
dec
jb
pushl
std
daa
inc
sub
push
mov
push
icebp
push
stc
inc
in
call
cli
mulb
scas
lret
mov
cmp
incl
call
jle
lret
sub
movsb
rol
jno
std
sbb
test
call
sbb
mov
lds
jmp
push
fs
cmc
js
mov
sbb
aaa
adc
sub
add
xor
inc
sub
repz
sub
mov
mov
push
ljmp
sbb
xor
nop
pop
aad
push
cmpl
mov
add
icebp
xor
fildl
movsl
or
call
popl
nop
lods
xor
dec
jp
jge
xchg
cmc
add
mov
testb
test
and
sbb
in
cmpb
mov
jg
or
call
jg
mov
xor
test
cmc
ljmp
decl
fs
sti
cmc
mov
repz
fdivl
lcall
jl
and
scas
xchg
ja
pop
sbb
jnp
mov
popa
dec
lods
pcmpgtd
or
out
xchg
loop
pushl
and
lret
cmp
sub
inc
inc
inc
mov
inc
cmc
neg
mov
pop
inc
movsb
pop
and
into
inc
shl
sbb
mov
push
xchg
lea
pop
mov
incl
cld
pusha
movsl
ret
push
and
cs
jbe
or
mov
mov
mov
incl
filds
push
arpl
mov
subb
push
movsb
fcom
jecxz
ljmp
in
mov
rcr
and
and
outsl
dec
push
pop
pop
clc
jg
add
push
xor
aaa
in
dec
sbb
push
idivb
fs
decl
jl
lds
mov
jbe
adc
jne
bound
decl
lahf
lret
push
or
and
lret
into
and
jns
xlat
sub
jmp
xchg
adc
pop
adc
ret
sub
mov
outsl
or
pop
ljmp
adc
add
jmp
test
mov
pop
xchg
icebp
sub
adc
shrb
or
decl
cmpsl
scas
push
and
jo
test
rcrb
cltd
mov
sarl
popf
sub
ljmp
rolb
cltd
push
adc
wrmsr
add
mov
ficompl
lcall
es
jecxz
icebp
in
and
lds
imul
mov
test
lret
loopne
cld
outsb
or
or
xlat
mul
arpl
or
mov
movsb
divb
mov
imul
xchg
inc
sbbl
in
outsb
mov
lods
mov
daa
fiadds
insb
push
inc
ret
pop
sub
xor
das
lock
lahf
push
sub
jg
add
out
lcall
shlb
push
lods
leave
mov
fsubrs
aad
data16
pop
loopne
sbb
xchg
je
test
pop
aam
sbb
shrb
dec
pop
ljmp
dec
into
aaa
xor
mov
cmpl
imul
cli
divb
es
dec
xchg
in
jg
adc
jg
push
pop
test
in
lcall
inc
and
call
fidivl
lcall
popf
add
cltd
mov
scas
jns
cld
ljmp
jbe
xor
cli
std
cs
in
leave
movsl
or
mov
dec
add
adc
outsl
lock
dec
jno
rcrb
mov
jae
jae
pop
mov
jmp
cvtdq2ps
fisttps
push
jns
dec
int3
inc
xor
cli
mov
call
xchg
adc
sbb
sub
leave
mov
sbb
jg
mov
in
stos
pop
mov
adc
outsb
mov
mov
and
imul
leave
out
push
mov
std
hlt
loope
adc
ljmp
sahf
push
call
xor
mov
fistps
clc
repnz
sub
mov
inc
cmpsl
loop
call
out
repnz
in
sub
out
pop
fs
fidivrs
mov
or
clc
lcall
test
dec
cli
popf
xchg
push
popf
sarb
scas
adc
decl
jne
inc
cmp
cmp
call
lcall
or
push
xor
fadd
and
jo
pop
push
push
pop
mov
incb
les
mov
scas
subl
mov
ljmp
mov
pop
adc
scas
insl
pop
stos
ss
mov
ror
outsl
push
mov
fdivrp
jmp
loop
mov
data16
mov
ret
mov
xchg
pop
cli
mov
mov
clc
jmp
xor
mov
mov
mov
gs
insb
lret
push
sbb
mov
lcall
add
inc
fwait
scas
test
sub
fcomip
push
add
fisttpll
test
lcall
cmpb
ret
mov
lret
mov
cmpl
lods
mov
and
cli
movsb
cmp
jbe
mov
loope
pop
in
lahf
jle
sub
test
pop
push
call
jmp
mov
fdivp
aaa
mov
xchg
jmp
call
adc
jns
ljmp
dec
push
mov
adc
inc
push
push
mov
sub
scas
rolb
xlat
pusha
jmp
cmp
lcall
ficoml
mov
dec
clc
jo
jge
add
es
sbb
insb
loop
loop
call
icebp
test
add
lods
addr16
xchg
sbb
pop
mull
clc
ljmp
cli
mov
shr
jecxz
jmp
rcrb
outsl
dec
inc
xorl
or
mov
aam
cmpsl
mov
mov
jl
jmp
jmp
jno
popa
iret
stc
xchg
addl
mov
and
jg
or
fildll
mov
inc
ror
push
push
clc
int
call
mov
in
and
mov
mov
mov
cmp
or
sarb
pop
mov
jmp
iret
push
cmpl
adc
rcrl
jbe
negb
aas
cmp
call
aas
ss
sub
popa
arpl
sub
aaa
jb
aaa
and
loopne
pop
mov
nop
imul
ljmp
cmp
mov
lods
add
push
divl
cld
push
dec
stos
in
inc
push
shlb
mov
ret
hlt
popf
jmp
push
movsb
or
push
and
mov
inc
mov
mov
push
lds
cs
add
jmp
pop
mov
xor
sti
or
sbb
es
lea
fbld
sub
call
cmp
dec
mov
in
and
or
mov
sahf
addr16
jle
lret
mov
adc
sarl
fcom
inc
aas
jae
pop
mov
push
mov
aaa
cli
cmp
popa
ds
push
shlb
dec
push
mov
int3
fwait
ret
mull
sub
or
cltd
xlat
xor
push
push
push
sbb
jg
push
and
lock
mov
mov
mov
adc
xlat
pop
cli
call
enter
sti
stos
inc
adc
or
mov
push
cmpsb
mov
fs
test
mov
pop
lods
cmp
dec
cld
jbe
jl
push
and
mov
mov
sbb
int
and
mov
jne
ret
lock
adc
and
out
and
mov
cmovno
or
pop
jns
mov
pop
movsb
int3
sbb
clc
fistps
mov
mov
movsb
in
adc
sbb
jae
fmuls
aaa
fmuls
sub
cld
testl
iret
jle
je
ljmp
int
sub
cmpl
fnsetpm(287
mov
fistpl
add
sbb
jl
jge
imul
ljmp
jmp
pushf
repz
out
aam
mov
inc
ret
out
sbb
and
stos
push
jg
fiaddl
push
mov
aad
push
fcmovnbe
pop
movsl
ljmp
ljmp
jmp
and
sbbl
lahf
dec
mov
inc
ja
mov
leave
cli
mov
xchg
clc
movsl
sub
stos
dec
or
lahf
call
push
decl
jmp
jno
sub
test
out
cmpsb
inc
movsb
inc
pushf
dec
or
mov
add
rcrb
or
movsb
and
fimuls
pushf
cmp
add
pop
rclb
mov
and
imul
popf
inc
jne
mov
pushf
sarl
das
hlt
sub
clc
iret
lods
adc
test
xor
int
jle
xchg
push
or
sbbb
mov
das
adc
push
scas
movsb
imul
loope
pop
sbb
lods
pop
adc
dec
add
insl
sub
fcmovbe
and
or
popa
rolb
ret
fbstp
mov
call
inc
mov
test
imul
sti
scas
mov
lds
jae
test
insl
sbb
xor
ljmp
aam
pop
jg
pop
rolb
hlt
jae
test
ret
incl
cmp
sbb
test
incl
xchg
movsb
adc
add
repnz
mov
pop
int
and
jmp
orl
inc
add
imul
outsl
mov
push
fs
push
xchg
pop
or
pop
pop
sbb
mov
jg
and
js
mov
and
and
mov
xchg
cmp
add
test
enter
and
inc
xor
fdivrs
mov
aam
dec
pop
jg
incl
iret
lds
in
cmc
cs
aad
mov
aas
leave
jg
call
mov
mov
inc
imul
lret
inc
xchg
or
pop
test
mov
and
call
xlat
mov
addr16
imul
sub
es
gs
add
and
xchg
cmpsl
sub
jg
and
mov
mov
pop
cmpsl
andb
push
xchg
mov
pushl
inc
outsb
test
fxch
dec
push
pusha
int3
mov
icebp
in
xorl
sbb
outsl
fs
out
pushf
cmpl
ss
jmp
aam
lds
call
gs
rcll
jp
fmull
mov
mov
adc
push
sbb
call
shrl
inc
xchg
enter
fnstenv
cmp
lea
sahf
mov
dec
fcoms
pop
mov
lret
xchg
inc
pushl
jp
dec
inc
std
or
pushf
test
fcoms
mov
push
incl
dec
pop
mov
mov
mov
outsl
sub
out
jg
sti
aas
and
push
imul
das
imul
loop
push
jecxz
aam
xchg
outsb
add
roll
pop
jnp
cmp
pop
jno
and
sbb
aas
in
ja
int
iret
sbb
and
loop
andl
stc
jae
or
inc
xor
sahf
xchg
cli
lcall
sub
fimuls
hlt
out
rcl
jle
sbb
aaa
mov
sar
cwtl
lret
jl
mov
repz
jg
mov
adcb
xor
ja
daa
mov
inc
inc
ljmp
pop
mov
mov
hlt
aas
and
movsb
sub
pop
call
in
inc
pop
adc
out
or
movsl
mov
fwait
in
insb
jecxz
out
mov
or
pop
jmp
pop
mov
mov
add
stos
loopne
dec
jo
adc
adc
jmp
iret
in
cmp
pushl
jle
and
fmuls
xor
popf
jno
mov
mov
sub
mov
jno
dec
loopne
out
jg
mov
pushf
lock
jnp
mov
outsl
mov
add
fistpll
xchg
test
dec
inc
inc
pop
loopw
out
imul
jo
mov
push
cmp
push
enter
adc
adc
dec
data16
decl
decl
xlat
imul
mov
or
stos
clc
in
push
sub
jg
jmp
add
xchg
add
mov
mov
or
loopne
jmp
cld
lea
sbb
mov
inc
loop
sub
call
adc
filds
add
mov
ret
les
push
arpl
movsb
add
call
decl
inc
fdivs
jg
sub
inc
add
or
movsb
jp
jmp
pushl
fucom
jg
add
mov
sbb
push
xchg
imul
mov
call
jo
jl
sbb
lret
cwtl
scas
loop
aaa
leave
push
shll
filds
xchg
scas
jbe
loop
pop
hlt
repnz
fnstsw
popa
cli
xor
xchg
call
cmp
xchg
jbe
push
lcall
jge
stos
jp
xor
cli
cmp
pushf
push
call
mov
popf
dec
or
dec
loop
dec
loop
sub
cld
mov
cld
sbb
inc
sub
mov
cmp
push
fucom
sar
xchg
cli
cmp
mov
fucomip
out
mov
xor
dec
push
loop
lcall
loop
imul
pop
sbb
and
xchg
sub
push
mov
std
cmp
fisttps
sti
test
int3
jo
aas
adc
mov
cmpsl
or
pop
xlat
stc
inc
mov
fstl
popa
jb
jmp
adc
xor
jnp
inc
or
mov
in
test
call
push
mov
loope
pop
dec
fnstcw
fsubrs
jb
jg
icebp
aad
cs
inc
lock
test
jle
add
xor
sub
inc
fstps
mov
call
mov
fstp
xchg
adc
mov
sbb
incb
mov
and
ljmp
jl
cmp
push
mov
cmp
mov
push
adc
adc
call
fildll
push
leave
xchg
mov
or
xor
sub
dec
arpl
jge
mov
aaa
cli
pushl
mov
push
pushf
jge
cmp
addl
push
pop
jbe
jg
jle
dec
push
sub
cltd
inc
cmp
sbbb
jle
mov
jg
xor
jl
or
aaa
ss
dec
sbb
lretw
fucomip
and
mov
jge
ret
ds
fmuls
out
inc
jnp
fmuls
mov
sbb
loope
out
and
insb
in
fidivl
lcall
mov
imul
repz
mov
pop
xchg
stc
sarb
cmp
out
add
dec
adc
xchg
jno
scas
dec
aad
out
pop
jbe
sbb
mov
pushf
in
mov
mov
outsl
vmovapd
add
jne
sbb
call
mull
cmp
mov
cmp
push
flds
addl
xor
movsb
pop
push
mov
add
mov
ljmp
fidivrl
push
lcall
in
mov
push
cmp
mov
in
xlat
stos
mov
jg
mov
mov
cltd
cltd
mov
movsl
pop
bound
mov
sar
ljmp
dec
pop
or
iret
outsb
faddl
das
pop
fistl
pop
xlat
sahf
int3
test
dec
out
jecxz
dec
in
fld
jno
jl
js
adc
add
pop
je
jns
dec
inc
mov
idiv
jg
cmp
push
xchg
and
inc
clc
sarb
icebp
orl
or
ljmp
xor
jge
fcoms
mov
jecxz
and
and
call
pop
enter
fsubl
int3
subb
push
ljmp
xchg
lret
jmp
inc
push
mov
xchg
fwait
xlat
test
adc
idivl
shl
xor
icebp
ficoml
lods
lret
aaa
cli
push
push
fstps
dec
ja
sbb
mov
lds
popa
push
mov
push
mov
call
sbb
scas
mov
push
sub
dec
xor
ret
mov
mov
pushf
cmpsb
dec
pushl
scas
loope
add
rcrl
test
pop
cmc
das
or
orb
in
pop
jg
decl
loopne
mov
push
sub
je
mov
and
dec
and
dec
mov
mov
jp
out
addr16
add
fcom
add
lcall
outsl
jp
pop
jecxz
add
aas
sub
inc
cmp
cmpsb
xchg
sahf
jae
mov
sbb
testb
cmp
sbb
in
or
insl
jge
incl
inc
lret
sti
lds
divl
xchg
sub
xor
call
push
push
out
pop
cwtl
pop
add
or
popf
popa
insb
js
stos
inc
cmp
add
sbb
je
les
pop
das
call
mov
sti
leave
pop
pop
jge
out
push
js
daa
or
sbb
mov
mov
lcall
cmp
leave
mov
cmp
insb
mov
fldt
pop
dec
lcall
std
cld
ds
adc
incl
test
aaa
inc
aaa
push
inc
mov
ljmp
sub
jge
and
pop
mov
sbb
scas
lock
or
jmp
sbb
jge
test
repnz
mov
cmc
and
in
jbe
outsb
mov
sarl
incl
shll
lcall
mov
insl
aam
pushl
mov
insl
mov
inc
or
decb
dec
jb
xchg
jl
mov
fbstp
sbb
test
aam
idivl
push
mov
ljmp
imul
shl
xchg
adc
xchg
cmp
cmp
mov
mov
int
rcll
mov
add
jnp
incl
loopne
rcrb
pop
pop
shl
scas
xor
mov
xor
ds
cld
pushl
std
cwtl
sbb
sub
arpl
xor
icebp
fcoml
fnstcw
sbb
xor
fisubrs
repz
dec
or
ljmp
mov
aad
mov
lret
push
out
jmp
mov
jmp
lahf
pop
cwtl
cmp
lods
fstpl
mov
ljmp
in
lock
adc
lahf
int3
jl
mov
or
xor
push
jp
mov
pop
cld
lcall
dec
and
fidivrs
test
mov
mov
jmp
test
inc
push
add
sbb
pop
insl
in
daa
jns
call
cltd
data16
dec
fnstenv
ret
fs
and
divl
jb
int
test
loope
stos
fidivl
push
cmp
xorl
push
sarl
ljmp
jb
dec
pop
xor
inc
mov
sub
movsb
jb
pop
push
sub
call
xchg
push
dec
ret
and
in
mov
xor
ret
mov
jo
inc
lods
stos
fsubrp
inc
sub
cmp
add
stos
or
cld
std
cmpsl
mov
pop
xor
push
jmp
jae
cmp
sub
pop
jle
and
lahf
inc
sbb
jb
repz
xor
jnp
sar
and
inc
pop
repz
mov
mov
hlt
cltd
push
ss
ret
call
lahf
sub
sahf
xchg
pop
push
fsubp
push
sbb
bound
ss
xchg
inc
adc
daa
into
lds
lock
and
sub
lods
jmp
pop
xor
pushf
incl
rcl
mov
clc
les
movsl
push
xor
lock
jmp
jg
dec
inc
iret
and
xor
stos
in
fisubrl
clc
call
ss
clc
scas
xor
pop
aad
add
pop
mov
das
ret
incl
ret
and
mov
jg
dec
stos
andl
insb
cwtl
pushl
jne
push
or
ja
mov
jl
push
lods
cbtw
shrl
cld
mov
int
sbb
inc
and
push
inc
stos
mov
lcall
add
or
clc
push
push
jge
loopne
imul
ja
stc
push
insl
mov
ljmp
sub
fistl
xor
mov
mov
inc
lcall
mov
mov
bound
faddl
inc
pop
call
add
inc
push
lods
cmpsl
dec
inc
adc
jae
loop
std
incl
jb
pop
add
sub
sbb
mov
sub
sbb
movsb
jno
jbe
aaa
xor
adc
rorb
dec
fucom
pushl
fwait
sub
in
or
pop
or
xchg
fistpll
adc
cmp
sbb
xor
das
mov
pop
jnp
jns
aaa
outsl
call
mov
aam
idivb
jge
xchg
clc
inc
cld
dec
jg
mov
mov
in
int
in
mov
scas
outsl
xor
mov
inc
xchg
les
ret
je
mulb
jg,pt
rorl
lcall
jmp
mov
aam
fmull
mov
sub
aam
pop
fs
mov
test
inc
and
mov
data16
fsubrs
std
jg
fidivs
sahf
xor
cmp
sbb
arpl
stc
pusha
inc
xor
call
inc
xchg
jg
repz
aad
jmp
sub
pop
movsl
loopne
shlb
shrb
shl
xor
ljmp
cld
enter
hlt
add
mov
in
pop
jae
test
mov
std
das
insl
lock
hlt
xor
or
mov
jae
mov
sar
xor
inc
jno
sbb
icebp
shll
clc
push
stc
lds
pop
mov
xchg
lcall
popf
aaa
sahf
mov
fs
pushl
movsl
lret
and
stos
pushf
es
sub
and
pop
cld
jmp
xchg
mov
ljmp
jno
push
and
cmc
cmp
test
clc
in
jp
push
adc
lahf
push
push
sti
sahf
cmp
sub
je
pop
mov
into
bound
test
outsl
mov
jge
mull
xchg
mov
cld
jns
jno
ja
pop
imul
adc
add
std
loope
adc
lds
adc
inc
test
js
mov
and
dec
xchg
stos
loopne
jb
pop
shlb
fs
gs
cmp
mov
aaa
cli
fcmovnu
sbb
pop
xor
rcrl
leave
mov
mov
inc
cmpsb
inc
adc
icebp
mov
xor
inc
sub
mov
std
jg
ret
dec
stos
outsb
nop
dec
sar
shlb
jo
mov
icebp
jl
cmc
jmp
xchg
cli
sbb
or
out
mov
sub
call
ja
adc
mov
test
pusha
int3
cmp
into
aas
ret
inc
mov
incb
jmp
nop
call
subl
sbb
ljmp
xchg
es
fildll
mov
xor
repz
out
ret
pop
and
jb
int3
mov
cmpsl
sub
dec
pop
stos
outsl
or
push
in
sub
dec
ljmp
jg
cltd
in
fcomps
inc
out
fisubl
js
mov
jno
addr16
lcall
xchg
aad
int
rorl
jb
dec
out
sahf
bound
je
mov
xor
jmp
mov
mov
sub
shlb
sub
mov
mov
popf
cmp
cwtl
sahf
jns
sbb
into
cmp
jge
or
cld
in
cs
ljmp
xchg
movsl
push
jmp
aaa
es
fimull
pop
add
xor
fwait
push
sti
pop
sahf
shll
out
cmp
loope
jmp
outsb
and
and
repnz
xor
in
jb
jmp
fsts
cmpsb
push
inc
mov
popf
out
test
movsb
xchg
arpl
ljmp
xchg
cmpsb
lods
ja
mulb
cmp
push
jl
flds
hlt
call
lods
neg
lret
fsubrl
popa
pop
push
jns
scas
aam
fists
outsl
mov
cli
in
mov
gs
andb
xchg
dec
xchg
sub
loope
add
shlb
add
call
add
cltd
add
pushf
mov
cmpsl
or
repnz
jae
insl
call
sbb
mov
add
dec
int
mov
push
ja
pop
ljmp
aad
jg
call
or
int
cwtl
push
cmc
jecxz
dec
int3
push
jae
jno
cmc
ljmp
clc
pop
loop
xorb
imul
enter
int3
out
jmp
ret
adc
dec
mov
shlb
mov
stc
jg
jmp
mov
and
stos
sarb
mov
dec
decl
inc
ljmp
push
jno
test
ds
fs
lock
push
out
add
das
icebp
mov
cmp
loop
push
or
lods
popf
xchg
and
or
push
les
in
ja
out
test
mov
movsl
out
outsl
incl
jae
popa
enter
inc
push
movsb
or
lcall
push
pop
mov
mov
mov
mov
jae
fwait
clc
and
std
xor
cmp
dec
cmp
mov
xchg
es
incb
mov
ds
fsubl
imul
push
bound
fwait
repz
stos
outsb
inc
pushf
lcall
out
nop
jnp
jle
insb
fdivrp
pushl
ljmp
push
mov
popf
xchg
enter
and
jmp
dec
dec
xchg
imul
pop
pop
cltd
and
cmp
mov
fcomi
jge
and
mov
cmc
cld
pop
dec
and
sub
cld
sbb
jp
cmpsb
mov
outsb
jecxz
dec
fidivs
sub
mov
jg
xchg
ret
mov
jno
out
aam
cli
fiadds
sbb
std
inc
in
pusha
insl
shrb
cmc
call
inc
shrb
mov
inc
adc
mov
xchg
push
pushl
mov
unpcklps
in
inc
in
in
shlb
insl
xor
cmp
cwtl
repnz
adc
fs
std
daa
cmp
fadds
int3
lcall
sbb
pop
push
shlb
int3
sub
mov
pushl
aam
inc
into
jb
adc
incl
lret
inc
cmp
add
jmp
data16
ljmp
loopne
movsb
dec
jne,pn
push
pop
inc
adc
shrb
fdivl
enter
jg
ret
test
xchg
mov
iret
lret
repz
sub
mov
incl
aaa
jnp
jmp
loope
sub
xchg
orl
mov
pop
adc
decl
jns
test
mov
jbe
inc
push
sahf
rorb
and
mov
inc
out
pop
inc
pop
cmp
adc
andb
cwtl
dec
sarb
test
mov
int3
mov
imul
add
incl
ds
rcrl
out
jmp
xor
xchg
ret
push
outsl
hlt
lcall
ja
push
and
arpl
push
pop
aam
popa
xchg
dec
mov
bound
sbb
mov
mov
lock
mov
call
mov
loopne
adc
dec
jno
pop
ja
push
clc
push
and
inc
mov
incl
and
and
outsb
and
jae
adc
ret
cmp
sub
ljmp
inc
pop
loopne
mov
inc
jmp
and
leave
adc
xchg
aas
jmp
push
clc
lahf
shrl
lcall
xchg
lret
insb
popl
out
iret
mov
mulb
neg
mov
es
push
pusha
or
cwtl
sbb
or
stc
outsb
and
mov
sub
xor
scas
mov
push
testl
jecxz
add
sti
sar
and
pushl
scas
xor
jle
cli
mov
jle
jnp
scas
mov
cmp
scas
lahf
aas
sahf
fstl
fwait
jmp
push
dec
jle
icebp
rcrb
cld
mov
or
pop
push
mov
mov
cmp
xchg
fisubrs
sti
inc
dec
add
lret
add
or
es
loope
in
pushl
jl
xchg
jnp
sar
xchg
sbb
dec
push
mov
cmp
push
jmp
xor
mov
cmc
pop
ja
mov
sub
jge
jl
stc
mov
xchg
pop
call
aam
fs
nop
lock
jl
rorb
sar
incl
shl
shrl
mov
out
dec
xlat
xor
push
or
push
out
pop
cmp
incl
cmp
inc
inc
mov
mov
or
sbb
lock
cmpsb
inc
mov
cmp
sar
lods
rcr
lea
daa
pop
jecxz,pn
adc
xchg
rolb
mov
and
cmp
cs
ss
mov
dec
jl
cld
fcmovb
sbb
int3
xor
cmpsb
idivl
ret
incb
enter
js
mov
in
pusha
inc
cmp
cld
jno
mov
bound
jmp
movsl
pusha
fwait
pop
xchg
jo
out
jecxz
insb
jge
decl
mov
lds
sub
lahf
push
ror
jo
inc
add
mov
mov
jmp
stc
sbb
dec
sbb
leave
or
in
jg
movsl
xchg
inc
mov
imul
mov
xor
pop
out
jae
add
jnp
gs
pop
push
add
je
sub
jp
cli
xchg
push
push
sbb
jmp
movsl
mov
xor
mov
sub
mov
cld
aaa
outsl
insl
add
fidivs
in
aaa
push
frstor
mov
decl
jecxz
pop
adcb
and
pop
mov
stos
add
cld
mov
data16
lcall
notl
and
shll
cld
mov
jge
cwtl
sub
rolb
into
das
xor
enter
into
fdivs
nop
xor
xor
ljmp
incl
mov
lods
cmp
jne
cmp
mov
aaa
lret
jge
jb
sub
stos
push
sub
call
cmp
cmp
fnsave
es
mov
nop
imul
jp
int3
lods
cmc
pushl
mov
dec
mov
cmc
xchg
orl
jmp
mov
jae
xor
outsl
mov
mov
mov
repz
aas
fdiv
fnclex
repnz
cmp
mov
pushl
mov
movsb
mov
push
lods
out
xchg
push
popa
fcomi
js
decl
scas
inc
push
push
mov
inc
mov
mov
dec
ret
jb
clc
shlb
sub
push
fucom
or
iret
fiadds
sti
xlat
cmc
outsl
push
dec
fstl
icebp
test
mov
outsb
test
shrb
repz
xchg
mov
decl
mov
jmp
scas
and
arpl
mov
and
int
lods
add
mov
insb
push
xor
jl
sbb
call
inc
mov
sbb
lock
mov
adc
stos
and
mov
xchg
stos
adc
xlat
ljmp
cld
es
ss
xor
lret
in
xchg
mov
mov
cmp
sub
inc
lcall
cld
sbb
dec
lds
pusha
xor
call
mov
push
push
cli
mov
nop
sbb
stos
cmpsb
sbbb
std
inc
daa
adc
jmp
enter
mov
xchg
sbb
dec
mov
in
push
jg
push
leave
xor
mov
popa
das
nop
pop
call
mov
inc
shll
arpl
loop
inc
orb
cmp
popa
stos
jmp
lret
movsl
sbb
adc
adc
clc
and
push
jg
jns
sti
mov
push
jge
sub
loope
fbld
mov
inc
cmc
lret
decl
enter
or
stos
xchg
sub
mov
pusha
lock
jmp
dec
insb
dec
das
jle
jecxz
ftst
iret
mov
hlt
in
and
out
nop
insb
xchg
fmull
incl
cmpl
and
sub
nop
cmc
gs
outsl
cmpsb
fcos
pop
js
lds
ja
xor
lahf
push
dec
roll
ljmp
aam
addr16
mov
mov
outsl
repnz
clc
cmc
or
call
mov
ljmp
in
push
leave
add
or
aaa
clc
roll
dec
out
out
pop
xchg
inc
push
das
std
in
push
pop
sbb
mov
inc
mov
cmp
add
push
mov
mov
fildl
pop
dec
cli
scas
jp
mov
xchg
mov
mov
adcb
call
cmp
cmp
enter
xchg
adc
in
pushl
test
call
mov
mov
mov
addr16
lcall
sbbb
xor
daa
xor
sub
push
jge
fucom
pop
insb
icebp
call
hlt
mov
push
mov
mov
stc
es
mov
xlat
or
int
or
pop
and
jecxz
jg
cmp
inc
loope
insl
enter
xchg
cli
cmp
push
in
call
and
movsb
repz
and
dec
ret
call
je
mov
test
mov
push
push
and
cwtl
xchg
roll
mov
cmc
jmp
push
or
in
jle
lcall
test
cli
int
das
loope
aad
push
in
push
mov
je
setns
mov
pop
mov
pop
sub
sub
push
add
inc
xchg
daa
sbb
incl
pushl
push
sbb
push
jnp
xor
aas
jae
jb
decl
ror
mov
cmp
jmp
cmp
mov
popa
inc
stos
sbb
sbb
mov
inc
ds
ficomps
add
cmp
iret
and
movsb
arpl
jae
cltd
jns
push
in
mov
lret
sbb
pop
and
adc
inc
fidivrs
dec
pusha
lret
test
lcall
lret
push
xchg
adc
imul
inc
lahf
and
dec
mov
aaa
clc
mov
jb
testl
daa
or
cltd
dec
pushl
cli
aaa
aaa
jae
lret
xchg
fdivrl
push
lahf
repnz
bt
mov
jmp
hlt
adc
dec
mov
push
xchg
xchg
cli
ljmp
stc
mov
cs
and
sub
rcrl
jmp
inc
ja
cmp
arpl
call
sbb
pop
jp
test
in
cmp
int
aad
push
cltd
or
imul
and
loop
mov
decb
dec
jnp
cs
jg
cmp
xorb
gs
repz
lock
pop
mulb
jnp
jae
daa
mov
aas
leave
cmpl
stos
and
jg
jmp
incb
push
cmp
xchg
adc
lock
in
cmp
ljmp
int
xchg
mov
jecxz
mov
mov
xchg
push
dec
mov
rorb
hlt
lds
jmp
ljmp
bound
push
fwait
jmp
jle
push
cmp
incl
inc
lea
dec
loop
fnstcw
push
daa
test
push
push
sbbl
jnp
inc
in
cmpsb
fistps
outsb
pop
mov
lcall
aaa
cmp
jne
fstl
jne
cli
jle
addr16
out
call
sbb
mov
movsl
orb
adcl
ds
cld
call
lods
out
loopne
pop
xchg
pop
add
sbb
mov
cmpsl
adc
data16
popa
lcall
decl
cmp
test
ret
les
inc
fadd
loope
icebp
pop
call
decl
mov
xlat
icebp
xchg
push
int3
es
lahf
jno
cmpl
daa
stc
loop
or
jecxz
mov
outsb
pop
jno
mov
hlt
std
pop
pop
cmp
ret
subl
jae
xor
addr16
inc
mov
inc
sbbb
inc
sub
shr
cmp
inc
jg
cli
inc
lea
mov
or
xchg
mov
inc
xchg
jge
lret
xchg
nop
ret
dec
scas
adc
jg
bound
imul
mov
xor
lret
push
xchg
into
jns
sub
inc
xchg
int
sub
cltd
insl
push
xchg
loopne
xchg
test
cltd
insb
mov
scas
push
call
sub
fldl
cmp
xchg
jge
insl
and
lret
jg
jo
lcall
and
adc
jl
fwait
insb
adc
dec
adc
cwtl
psubb
aaa
iret
jl
daa
and
lods
decl
loopne
addb
shrb
mov
loop
sub
dec
adc
ljmp
enter
jne
mov
ds
mov
stc
or
fnstsw
scas
icebp
adc
xlat
pushf
cmp
sbb
mov
mov
mov
repz
jge
out
cltd
arpl
popa
clc
ljmp
nop
aaa
jbe
adc
rcrl
xor
mov
lods
pop
ret
dec
nop
inc
mov
xchg
lea
cmpb
test
pop
or
sub
sbb
jle
ret
test
incl
outsb
pop
in
pop
jmp
jb
cmp
das
js
daa
out
jne
and
lcall
icebp
push
les
jecxz
adc
int3
notl
adc
pop
mov
loop
mov
call
cmp
xchg
xlat
inc
mov
jmp
sub
ljmp
push
mov
inc
dec
pusha
out
sti
inc
mov
push
sbb
cli
mov
adc
cmp
std
movsl
imul
mov
into
in
ss
mov
adc
pushf
cmc
pop
fs
add
and
inc
movsl
fdivrp
xor
adc
pop
in
inc
jmp
sbb
mov
mov
movsl
jns
xchg
pushf
nop
shr
aaa
nop
lods
sub
mov
xchg
out
jo
inc
jg
das
lock
push
gs
cltd
out
imul
cld
lcall
cmp
gs
xchg
rolb
xor
mov
dec
push
lahf
std
dec
xchg
fxch
or
push
mov
call
pop
sub
aad
fidivl
lret
mov
adc
in
mov
mov
popf
stos
or
pushl
jp
fwait
inc
mov
fisttpl
adc
sbb
out
cs
inc
jg
inc
xorb
push
jge
test
stos
aas
aas
dec
sbb
sub
out
sbb
mov
movsb
xorl
aad
pop
dec
popa
push
aad
cmp
decl
clc
sub
aam
mov
addr16
iret
ret
int
fdivrs
cmp
call
cmp
cmp
inc
or
cmp
dec
sub
or
incl
mov
pop
xor
imulb
add
jmp
jns
aaa
movsl
loope
xchg
mov
lcall
movsl
xchg
shld
fdivl
pop
ficomps
adc
fbld
in
cmp
out
mov
mov
mov
or
aaa
out
sub
jmp
cmp
filds
mov
fcomi
pop
push
icebp
jecxz,pt
mov
jmp
jg
cltd
ret
push
mov
ljmp
nop
mov
xor
into
pop
ljmp
cld
inc
int3
pop
dec
dec
mov
shlb
xchg
bound
xchg
test
decl
pop
cld
fadd
in
mov
push
sbb
std
pop
mov
incl
inc
jl
pop
rep
test
mov
jp
and
out
jnp
aas
repnz
mov
push
mov
adc
sub
pop
fwait
mov
movsl
pop
add
xor
dec
add
mov
insb
mov
pushl
pop
lock
xor
sbb
push
inc
sbb
mov
pop
outsb
sbb
decl
cmc
push
jb
aam
sub
push
xchg
ljmp
mov
outsb
scas
mov
lcall
cwtl
jns
das
adc
and
lds
add
and
jmp
pushl
mov
sub
jns
outsl
jle
outsl
daa
push
sbb
nop
std
jmp
insb
gs
mov
add
loop
cltd
scas
adc
jg
sbb
inc
inc
mov
push
cmp
aas
pop
in
out
cld
or
lds
sub
inc
ja
cltd
imul
jecxz
icebp
or
jne
nop
jmp
jne
addr16
mov
cld
inc
inc
idivb
stos
sub
push
lcall
add
mov
adcl
and
add
fcos
jg
scas
sub
ss
ret
popa
popa
xchg
pop
jl
fstpt
sti
mov
rcl
stc
xor
gs
lcall
lock
repnz
outsl
push
sub
push
cmpsl
repz
xchg
lcall
mov
pminsw
jge
ficompl
xchg
insb
sub
mov
mov
fdivl
leave
jle
jg
rcrb
aaa
idivb
sub
out
jns
ret
adc
pop
dec
iret
call
movswl
in
jo
mov
xchg
lea
pop
shll
xor
mov
lods
sbb
mov
loop
cwtl
loope
or
sub
push
mov
mov
fldenv
sbb
sti
push
bound
push
shr
das
leave
xor
push
rclb
in
pop
loopne
in
cltd
js
gs
es
inc
dec
adc
mov
jge
in
test
pop
xorl
and
push
imul
jg
mov
push
and
mov
inc
mov
sbb
xchg
mov
mov
subb
mov
or
ljmp
or
xchg
push
sahf
shl
fsubrp
adc
mov
incl
push
cmp
mov
mov
xchg
jbe
imul
pushf
test
cmpl
mov
xchg
test
roll
mov
jl
push
mov
aam
rcrb
jmp
js
adc
or
xchg
lcall
mov
movsb
fwait
or
push
outsl
mov
mov
test
jge
jl
push
mov
outsl
pop
xor
lods
out
and
inc
or
sub
pop
mov
pop
mov
je
add
or
push
xchg
jno
loope
pop
push
movsb
lods
iret
push
jae
pop
mov
popf
xlat
leave
test
movsb
xchg
in
sar
mov
pop
in
jnp
or
movsl
and
xchg
xchg
movsb
incl
pushl
cmp
jnp
xchg
test
cmpsb
jl
add
mov
pop
cld
inc
pushl
repz
into
lods
fildll
call
inc
jno
rep
test
mov
cmp
adc
push
jno
jmp
rolb
pop
push
or
insl
scas
and
test
incl
popa
add
mov
xor
add
inc
ret
mov
add
lods
cmc
ljmp
jbe
ss
scas
std
imul
adc
xor
fnstsw
mov
sub
dec
pushf
data16
xchg
int
test
mov
cwtl
sarb
lahf
jge
cmpsl
in
orb
incl
andl
scas
fbstp
cmp
pop
pop
push
idiv
outsl
push
mov
out
dec
xor
ljmp
decl
push
mov
sub
imul
rcrl
ds
push
ret
pop
pop
mov
dec
xchg
dec
ljmp
push
xorl
shlb
or
xor
jge
repz
lahf
insb
test
inc
push
pushl
or
sbb
push
mov
sub
xchg
pop
call
mov
test
fsubrp
jne
or
inc
dec
mov
pop
cli
mov
mov
xchg
lods
es
scas
arpl
mov
leave
scas
or
pop
popa
and
xchg
add
xchg
pop
scas
data16
push
pop
int
hlt
or
sub
mov
dec
imul
jl
iret
push
xlat
and
in
cmc
pop
push
jl
add
js
push
and
add
ret
mov
sub
mov
call
inc
inc
pop
fld1
fs
mov
lcall
andl
inc
sub
mov
cmpl
pop
int
ja
enter
loopne
inc
ljmp
cli
jb
aad
jns
xlat
addr16
sbb
lahf
and
mov
decl
lcall
jo
pusha
push
push
sbb
enter
mov
push
lcall
lock
icebp
fimuls
push
pushf
xchg
mov
cmp
loope
pushf
jo
aad
outsl
push
xchg
paddusb
or
pop
adc
inc
adc
fnstsw
call
push
cmp
mov
dec
shlb
hlt
adc
outsl
stos
sub
decl
inc
es
enter
aam
cmp
push
mov
incl
inc
repnz
stos
nop
leave
rcr
push
mov
call
call
push
imul
xor
and
iret
inc
push
adc
adc
call
pushf
xchg
in
scas
mov
push
jmp
pop
pushf
adc
push
int3
cmpsb
imul
sub
push
in
in
out
shl
in
push
cld
hlt
aam
mov
or
mov
mov
push
pop
mov
sub
sub
sub
xchg
es
mov
jmp
pushf
mov
adc
jp
pop
inc
sub
mov
and
jg
in
pop
iret
lods
mov
das
cmp
mov
sub
lods
incb
loopew
and
xchg
ss
mov
decl
cmpsl
outsl
push
sbb
inc
push
pop
stos
xchg
fistpl
inc
pop
xchg
rorl
ret
movsl
push
lret
lcall
push
aaa
cli
cwtl
xor
gs
rol
adc
lcall
scas
fcmovnb
fcoml
movsb
mov
mov
test
pushf
sub
xchg
push
xchg
aam
clc
mov
pusha
push
mov
loop
or
cmp
enter
cld
repz
pop
lcall
cs
aad
bound
pop
sbb
or
mov
jl
pop
inc
arpl
ffreep
xchg
mov
je
enter
mov
add
sbb
ljmp
xchg
sahf
scas
cltd
jge
aaa
fsubrs
popa
lea
xchg
lahf
out
xchg
pop
ds
pushl
inc
pop
push
xor
jl
shlb
jge
mov
sbb
mov
int3
outsl
cld
incl
mov
jl
jl
push
adc
insb
pop
and
pop
imul
incl
adc
sbb
jmp
test
fistpl
xchg
shrb
and
ret
data16
decl
std
mov
mov
sub
mov
jns
test
mov
insl
inc
xchg
inc
pop
ss
out
repz
js
mov
out
incl
or
sbb
cwtl
lock
pushf
xor
dec
push
mov
xchg
movsb
cmp
imul
or
outsb
add
sarb
jg
jo
movsb
xchg
mov
sub
addr16
cli
decl
push
into
mov
pop
gs
fildll
cmp
pop
mov
incl
xchg
xor
ret
lcall
jns
jecxz
addb
cld
pushl
push
push
ss
or
jae
lea
lret
movsl
incl
sub
add
lods
mov
inc
push
out
inc
loop
cli
and
jecxz
stc
insl
inc
movsb
xchg
xchg
cmc
cmpsb
std
idiv
ljmp
shll
inc
xchg
mov
jns
mov
rorl
xlat
aas
adc
in
out
fsts
add
nop
lds
inc
sar
pushl
popa
test
xchg
xor
rclw
pop
test
adc
jl
sub
js
push
out
and
out
mov
ja
jno
rcrl
add
or
and
push
xor
inc
sub
pushl
mov
loope
pop
push
out
and
or
pop
dec
inc
push
and
jg
jmp
fcomp
jbe
cwtl
leave
xor
stc
dec
repz
bound
lea
shlb
fldcw
push
std
inc
and
test
pop
cltd
cld
call
inc
addr16
in
out
xchg
outsl
addr16
out
call
mov
shl
sahf
xchg
adc
aas
inc
mov
push
out
xor
adc
ret
sub
sub
sti
js
imul
frstpm(287
cs
insl
and
es
test
sar
ljmp
mov
inc
mov
jge
leave
cli
or
outsl
into
repnz
decl
pop
in
xchg
cmp
int
aaa
sti
xor
sbb
and
adc
mov
mov
outsl
test
adc
outsb
test
out
fisttpll
das
hlt
mov
adc
pop
aaa
in
lods
push
ret
or
movsl
addr16
mov
mov
jmp
inc
test
cmp
pop
out
add
mov
inc
icebp
pop
cmc
sahf
adc
jmp
mov
daa
add
cmp
pushf
lahf
jnp
push
mov
out
stc
sub
shll
pop
lret
jmp
xchg
or
jl
inc
add
and
dec
sti
jo
popa
ljmp
add
add
jg
lods
mov
int
pop
cs
inc
ss
sbb
mov
xor
std
iret
inc
inc
cmp
jns
enter
ljmp
std
in
mov
daa
mov
pop
int
push
lret
loop
fidivrs
std
jmp
aaa
out
insl
ljmp
xchg
adc
outsl
jmp
getsec
mov
je
lds
cmp
push
sub
in
ljmp
jb
sahf
or
ljmp
dec
and
nop
mov
stos
lods
pop
nop
and
lea
jp
cmpl
out
pop
call
sbbb
mov
jmp
enter
dec
icebp
into
scas
je
movsl
xchg
and
push
aam
call
or
cmpsl
sub
inc
aad
xor
xchg
jmp
mov
aaa
insl
and
dec
filds
ret
data16
stos
iret
mov
push
aaa
aad
jle
mov
sbb
mov
shl
mov
pop
add
pop
pop
hlt
xchg
sub
pop
call
test
es
xchg
lods
loope
cltd
movsb
cmp
fldcw
pusha
cltd
adc
ss
pop
rorl
push
jbe
faddl
cmp
in
xor
out
sub
jg
call
pop
arpl
rcr
push
cltd
arpl
std
test
push
popa
dec
xor
jg
jmp
outsl
lock
push
inc
cmp
dec
insl
cs
pop
or
fnstsw
lcall
push
lea
incl
fwait
lea
mov
jae
movsb
sbb
mov
cwtl
sarl
je
fdivl
das
adc
ljmp
cmp
cmp
pop
sar
pop
pop
loopne
int3
imul
iret
inc
add
pop
sub
mov
push
fstpl
add
add
pop
out
mov
mov
je
out
aad
xor
xor
negb
mov
fdivs
cmp
or
inc
jnp
les
sarl
push
mov
rorb
mov
ljmp
test
dec
push
fdivrs
jns
pushf
scas
mov
popf
outsl
inc
push
movsl
xor
fistpll
lcall
fbstp
mov
sti
dec
xchg
xchg
out
popf
mov
sbb
jne
test
mov
adc
repz
add
or
fwait
imul
push
incl
dec
xor
out
je
js
jl
lock
call
mov
lcall
prefetch
or
xchg
js
cmp
or
daa
stc
mov
push
mov
imul
test
cltd
daa
aaa
popf
movsb
rcrl
incl
cmp
lea
mov
mov
daa
jae
out
mov
jmp
lahf
shrl
pop
push
popf
insl
gs
int3
sub
jne
mov
daa
mov
pop
cli
ljmp
mov
aaa
cwtl
mov
lret
pop
cmc
std
scas
sbb
out
jecxz
fstpt
imul
xorl
cwtl
call
call
stc
imul
rcll
xchg
fdivrl
pop
mov
pop
inc
xchg
cli
decl
mov
scas
pop
iret
filds
imul
cld
and
cmp
adcl
loope
bound
insb
mov
mov
andl
jo
outsl
icebp
incl
rcll
movsb
jbe
gs
sbb
gs
dec
iret
stc
out
testl
lcall
fs
int
xor
dec
in
mov
call
inc
jo
jl
xor
lahf
rorb
add
call
adc
inc
jg
lcall
mov
push
pusha
or
out
adc
cmp
je
fistpll
mov
mov
cli
cli
aaa
inc
pop
out
push
jmp
call
test
pushf
mov
int3
mov
lods
fildll
lcall
out
xor
pushf
mov
in
jmp
xorl
lods
cmp
enter
inc
sub
pop
mov
mov
add
cmp
push
int3
out
jbe
mov
fcmovne
addr16
mov
sti
or
xchg
push
inc
jbe
lcall
inc
add
sbb
and
ljmp
in
mov
lret
mov
pop
cmp
das
ss
mov
test
sbb
dec
repnz
loope
jmp
mov
vpaddusb
mov
jo
mov
aaa
mov
jp
sub
outsl
hlt
jg
xor
adcl
or
jbe
mov
add
dec
sahf
xchg
imul
lret
inc
pop
push
ret
inc
sub
sti
mov
adcb
shlb
push
stos
mov
and
push
mov
sarl
push
jb
and
fcmovnu
iret
adc
lock
push
sbb
pop
cli
sti
pop
scas
xor
pop
mov
cmpsl
call
push
sarb
in
jl
in
add
fisubs
rdpmc
dec
stos
sbb
lcall
cli
jg
fiadds
clc
rcl
jb
popf
cmp
dec
pop
inc
lods
jae
call
mov
push
sahf
pop
mov
adc
stos
xchg
pop
sarl
mov
mov
out
cmc
int
ffreep
ret
sub
aas
je
divl
jl
lret
mov
or
xor
cmp
in
out
or
inc
or
fnstsw
jg
subb
xchg
sub
movsb
mov
mov
into
or
call
cmp
push
addl
stos
mov
jbe
pop
stos
mov
cli
add
sub
mov
addl
in
jbe
mov
stc
js
mov
popf
mov
cmpsb
mov
cmp
lods
ljmp
mov
xor
mov
sub
pop
push
cmp
rolb
repz
push
outsb
jbe
clc
jg
jo
jae
jmp
add
inc
cmp
imul
gs
lret
idivl
incl
repz
dec
stc
adc
push
imul
mov
incl
popf
repnz
es
loope
into
fldt
mov
ja
sbb
lcall
rcl
mov
out
mov
aas
mov
xchg
fdivl
sub
mov
push
call
clc
movsl
and
mov
xchg
pusha
es
repz
stos
ljmp
jp
in
bnd
sub
enter
sti
xchg
sbb
push
pop
jne
and
loope
imul
and
and
xor
mov
sahf
push
shr
fstpl
in
push
mov
push
data16
in
jge
sub
pop
cmp
mov
ret
and
sbb
call
notl
int3
inc
das
outsl
jb
cmp
cmp
jo
idivl
fistps
call
fsubrs
pop
push
xor
jb
outsb
fnstcw
dec
aas
flds
fdivr
call
clc
mov
testl
sbb
std
repnz
sti
les
das
icebp
incl
xlat
jp
mov
lods
arpl
add
mov
in
in
cmp
inc
test
mov
fwait
push
push
decl
dec
aas
xchg
ljmp
mov
and
cmc
frstor
pop
mov
lock
dec
icebp
cwtl
cmp
push
fistl
mov
movsl
xchg
imul
or
mov
sub
xor
xchg
es
dec
nop
and
xlat
iret
inc
dec
xor
bound
push
inc
idivl
fucomip
into
push
repz
mov
lods
pop
cmp
pushl
ljmp
adc
andl
push
adc
adc
into
mov
xor
bound
inc
aas
add
lcall
pextrw
popa
cld
dec
jb
inc
loope
fs
adc
popa
mov
fsubrl
aad
cs
mov
dec
mov
mov
inc
xor
cmp
js
jmp
ljmp
adc
orl
push
pop
sub
cmp
adc
in
iret
mov
xor
bound
cmp
cmpsl
pop
and
push
lds
stos
pop
clc
das
hlt
ljmp
pop
mov
mov
and
xchg
pop
push
hlt
outsl
hlt
pop
push
push
sbb
nop
jecxz
xchg
pop
mov
outsb
adc
ljmp
sub
mov
or
xchg
inc
jle
test
mov
scas
test
ljmp
cmc
aaa
pusha
sbb
push
test
pop
sbb
cmp
dec
dec
or
sbb
cmp
mov
xchg
mov
daa
xorb
sub
stos
jmp
dec
inc
mov
xor
fstps
imul
fdivl
pop
xorb
rcll
jg
out
and
or
add
iret
push
push
mov
xor
pop
sub
pushaw
xchg
adc
add
sti
ljmp
leave
movsl
ljmp
sahf
jne,pt
jg
in
push
hlt
jp
cmp
ret
into
jle
es
out
loope
push
fs
mov
loopne
test
and
push
scas
mov
fildll
inc
push
jae
sbbb
pop
pushl
cli
jg
mov
add
xchg
cmp
push
dec
out
es
into
call
andl
cmpl
sbb
out
in
adc
scas
fdivp
std
push
test
clc
jmp
or
clc
loope
inc
jle
insl
add
pop
lods
out
pop
xor
aad
add
and
stc
dec
xor
and
ud2
mov
es
sar
clc
sbb
aad
pushf
mov
bound
mov
mov
aam
dec
mov
nop
jnp
pop
clc
ljmp
std
ficompl
insb
jecxz
pop
loop
add
test
int3
loope
or
aas
sbb
mov
decl
imul
push
sub
movsb
loopne
fcomi
jle
fistps
in
cmc
adc
outsb
std
add
pop
lahf
lods
test
mov
lds
movsb
add
and
mov
push
dec
jmp
push
xchg
mov
out
adc
out
sub
and
sub
insb
outsb
int
decl
cmp
fs
mov
int3
movsl
cs
and
inc
dec
jae
pusha
jae
psrld
shrb
decl
xor
adc
ja
jecxz
hlt
sub
leave
sbb
or
call
lret
dec
jl
mov
sbbb
jb
xchg
pop
out
call
mov
pusha
mov
in
test
stc
clc
mov
scas
cltd
lcall
cmpsl
add
lods
lds
push
mov
fnstsw
es
and
fwait
pop
cs
jmp
adc
aam
jp
enter
insl
pop
popf
sahf
xchg
xor
hlt
fmuls
jae
push
out
mov
mov
mov
loope
sahf
mov
push
pop
icebp
loopne
psubw
dec
addl
int
mov
rclb
shrb
sub
pusha
add
std
mov
and
mov
out
jae
leave
mov
jmp
ljmp
cmpsl
jmp
jecxz
xlat
fdivs
jb
mov
movsl
adc
je
loope
sti
bound
adc
mov
sbb
adc
add
jno
gs
add
daa
jae
mov
loope
push
xor
fimull
decl
and
mov
sbb
add
mov
lret
mov
ret
inc
mov
ljmp
pop
jg
mov
mov
aas
xchg
push
dec
pop
in
cmpsb
or
int
divb
xrelease
jl
paddw
dec
pop
jmp
js
ljmp
xchg
loopne
adc
push
add
push
jl
inc
sub
xchg
fbld
xchg
ds
or
movsl
loope
lcall
dec
arpl
call
clc
lea
shr
loop
in
mov
cmp
push
sbb
lods
xchg
cld
push
int
je
mov
aam
mov
pop
fucom
push
add
sbb
mov
fsubrl
out
stos
testl
test
fnstsw
jmp
adc
cmpsb
jnp
imul
mov
lea
or
cld
call
mov
xchg
enter
cmp
in
dec
xor
ret
imulb
paddd
add
sahf
mov
test
xorb
cmpsl
add
jg
jge
repz
bound
or
cld
mov
pop
mov
dec
pushl
mov
mov
loop
subb
popf
xchg
inc
jp
call
cli
and
cltd
mov
stos
sub
dec
cmc
je
test
call
sbb
lret
call
lods
adc
cmp
aaa
add
into
xchg
jne
xchg
pushl
enter
dec
out
mov
and
loop
inc
jl
aam
loop
gs
sbb
sub
jmp
jmp
test
inc
daa
jp
mov
sbb
push
arpl
int3
lds
repz
and
mov
or
mov
call
or
pop
movsl
mov
adc
sub
sbb
les
aad
lea
xchg
jb
nop
xchg
orb
filds
push
sub
adc
cmp
pop
dec
enter
fldl
call
insl
in
jge
cmp
jbe
and
pop
cmp
scas
xchg
sub
fcomp
mov
rolb
or
mov
jmp
dec
imul
sbb
push
in
adc
outsl
pusha
push
rcl
fwait
sub
jmp
push
imul
das
jecxz
or
pop
negl
add
in
std
incl
test
cmp
xor
mov
and
sub
jp
arpl
fidivrl
cmpsl
repz
xchg
enter
jmp
fistpl
iret
or
incl
iret
mov
push
lret
fdivr
pop
mov
adc
xlat
push
dec
add
xchg
jns
mov
shlb
lret
xor
mov
and
leave
cmp
cmp
jnp
data16
rolb
int3
mov
xchg
lcall
mov
mov
cmpsb
or
mov
inc
pushf
jmp
dec
outsl
stos
ljmp
shrl
pushl
or
lds
aas
dec
push
je
popa
sub
or
inc
call
cmp
jns
lea
push
jnp
loopne
lds
cmp
outsl
incl
les
out
sbb
negl
xor
inc
ljmp
call
mov
rclb
movsl
into
in
insl
mov
std
lcall
loopne
mov
imul
cmp
dec
addr16
cli
enter
mov
clc
cmp
fcomp
scas
scas
ret
aam
adc
call
dec
mov
push
cmp
cs
call
sbb
inc
repz
lcall
fs
sbb
jbe
xchg
sub
or
decl
and
add
iret
add
push
lcall
push
int3
jge
into
stc
lcall
jmp
cmp
xchg
push
std
int
fdivs
stos
cld
jbe
sub
mov
out
sbb
divl
pop
mov
js
xchg
mov
push
sbb
das
cmc
push
pop
aas
cmpsb
push
fcom
rorl
ficompl
incl
cmp
sti
mov
or
vpsubsb
loop
mov
mov
cmpsb
add
les
jno
pop
mov
sahf
cltd
push
shll
inc
enter
or
clc
lock
inc
and
sub
mov
sbb
inc
cld
mov
ljmp
pop
sbb
lds
mov
xchg
inc
lahf
lods
sbb
incl
mov
sahf
add
enter
dec
int
jno
jmp
mov
jmp
sbb
cld
inc
dec
pop
xchg
push
test
mov
sub
lcall
cmpsb
xchg
call
ljmp
ret
mov
and
out
lcall
mov
sahf
xor
xchg
fwait
aad
test
cli
cmp
jp
inc
sub
xchg
adc
cmp
push
loope
push
and
pop
jp
addr16
into
pop
add
xor
xchg
push
fwait
jno
stos
cld
mov
jl
idiv
add
push
fwait
movsl
jne
test
rcrl
sti
sub
fcoms
mov
and
cmp
push
xchg
ds
pop
je
clc
insb
jb
cmp
dec
cltd
mov
loop
int
xchg
and
aam
lds
aaa
cli
jmp
outsb
mov
jo
adc
lahf
add
data16
xchg
cld
pushl
movsb
cli
push
sub
adc
mov
adc
xlat
xchg
lods
dec
shlb
xchg
ljmp
or
cli
add
mov
movd
push
pushl
cli
mov
push
aaa
addb
fistl
in
lods
call
inc
fistpll
incl
adc
in
mov
call
imul
cli
xchg
clc
cmp
and
ret
pop
xorl
pop
std
jmp
std
arpl
adc
into
das
cmpsl
cmp
sbb
pop
mov
shrb
and
mov
repnz
adc
decl
or
adc
and
inc
lea
jnp
mov
fcmovne
cmc
ret
fcomi
jmp
ret
mov
lret
arpl
mov
daa
add
mov
fwait
mov
cmp
lods
push
inc
cmp
push
leave
inc
decl
mov
stos
and
mov
and
decl
jmp
xor
loopne
shlb
ds
lods
xchg
cli
pop
cmp
shl
mov
aam
jne
ret
popf
cwtl
js
xchg
fisttps
pop
cmp
movsb
mov
mov
push
dec
and
hlt
popf
mov
mov
mov
test
cmp
mov
lcall
std
movsl
andl
cmp
cwtl
inc
inc
nop
sar
lods
aaa
cli
push
xlat
aam
cwtl
sub
cmp
in
incl
leave
lret
push
mov
cmp
int
leave
jnp
subl
jb
jl
push
and
cmp
add
jg
pop
jge
mov
xor
inc
pusha
or
mov
call
jecxz
mov
dec
add
lea
xchg
test
in
cld
and
mov
fucom
cld
cli
adc
jb
xchg
sub
sub
decl
test
ffree
push
sub
nop
xorb
stos
loope
cmp
aas
push
jne
jg
sbb
je
lahf
push
dec
jae
xor
mov
lcall
loop
push
jmp
sbb
cmp
int3
push
aaa
and
pop
xchg
cmp
in
in
pop
push
xchg
icebp
sub
sub
lcall
adc
jge
shrl
mov
xlat
mov
incl
jbe
insb
pushl
add
es
cmp
lcall
fimuls
mov
lret
imul
movsb
mov
push
call
in
cmp
popa
jle
mov
pusha
add
out
cmp
leave
jecxz
popf
xor
test
dec
pop
pop
call
adc
nop
pop
shl
push
arpl
jns,pt
sub
sti
dec
sbb
pop
dec
dec
aaa
repnz
test
in
xchg
mov
push
sub
lcall
push
or
std
out
xchg
adc
fmull
ss
dec
mov
sti
mulb
xor
xchg
xchg
sbb
ret
cmpsb
pop
out
lret
iret
stos
mov
jmp
mov
dec
hlt
mov
movsl
dec
and
jg
lcall
cmp
aaa
inc
xor
dec
dec
push
or
push
jae
push
call
inc
xchg
jp
cmp
or
cmc
push
xchg
mov
shrb
lahf
xchg
iret
testb
push
sbb
andl
clc
mov
int
std
pushl
lret
push
js
inc
push
je
xor
lretw
mov
pushl
xor
cmp
cmp
xchg
sbb
or
mov
add
fs
scas
and
pushl
lahf
jo
sbb
inc
imul
and
xchg
inc
repz
fld
rcl
and
incl
inc
jmp
jp
mov
stos
or
cmpsl
xor
cld
fucomip
shlb
jmp
mov
add
mov
decl
out
jle
test
daa
xchg
movsb
xlat
cmp
jo
pop
pop
sbb
sub
fdivl
adc
insl
fisubl
inc
popa
dec
mov
mov
mov
mov
out
pop
sbb
lret
push
push
out
sub
push
inc
cmp
push
jg
lcall
rolb
cltd
pop
fwait
sbb
adc
or
xor
out
pop
jge
mov
aaa
clc
pushl
es
and
lock
addr16
mov
sub
jg
add
cmp
inc
pop
cmc
cmc
mov
lds
mov
cmp
pop
jle
loop
cmp
inc
push
out
movsb
sti
insb
push
mov
push
mov
fucomp
or
ljmp
adc
subl
mov
push
lods
fldenv
inc
popf
jg
insl
pop
sbb
inc
add
std
insl
push
cmp
lcall
adc
incl
test
dec
xchg
or
imul
pushf
xor
dec
inc
popa
cwtl
push
or
in
xchg
ret
movsl
jg
sub
mov
xor
xlat
fstl
incl
jge
fwait
outsl
aad
popf
pop
loopne
add
lret
sbb
mov
test
mov
cmp
gs
mov
hlt
jo
je
jno
adc
push
push
ljmp
sbb
stos
and
shll
enter
mov
out
lds
je
bound
std
fmuls
dec
push
cmp
fdivr
mov
insl
flds
mov
sbb
push
inc
adc
repnz
jne
enter
cld
mov
inc
mov
adc
das
cltd
pop
jp
mov
mov
bnd
inc
inc
mov
jne
mov
clc
in
movsb
xchg
cld
roll
inc
adc
cltd
push
mov
adc
fmuls
iret
xor
sub
in
repz
or
dec
mov
gs
in
lahf
jecxz
ljmp
sbbb
rclb
into
or
cld
or
mov
xchg
dec
in
hlt
pop
fs
je
pop
orb
js
int
sub
dec
leave
xchg
outsl
push
imul
mov
aad
lahf
insb
jecxz
xor
dec
xchg
mov
mov
dec
adcl
addr16
jge
jl
jle
jmp
std
mov
push
ljmp
cmc
or
dec
xor
sub
jmp
xchg
les
fs
call
xchg
or
jns
mov
jp
sub
pop
xchg
mov
popf
jge
es
mov
push
pop
fidivrs
lds
xchg
and
ds
icebp
xlat
lret
int3
shr
ret
cmp
mov
xchg
cmc
and
adc
xchg
xorb
test
and
aam
pusha
dec
adc
iret
stos
dec
fwait
loopne
xchg
dec
add
and
mov
mov
cmp
pushl
daa
stc
gs
sarb
inc
mov
push
aas
mov
dec
inc
dec
es
push
mov
mov
sbb
xor
mov
adc
dec
pop
ljmp
movsb
insl
cli
call
aaa
sub
pop
adc
push
jl
mov
adc
shrl
push
clc
jmp
pop
loopne
pop
cs
mov
insl
sar
fimuls
push
sti
lods
std
mov
lods
ss
jg
mov
jmp
adc
mov
ja
pop
pop
test
mov
lcall
test
cld
xor
test
jae
jb
stos
popf
ret
inc
sbb
int
pushf
out
popa
push
xchg
cld
lock
push
dec
adc
xchg
daa
out
and
rcll
mov
in
ljmp
xchg
call
cli
roll
std
outsb
push
jbe
out
pop
incl
xlat
lcall
mov
lcall
inc
aas
mov
lods
das
mov
icebp
insb
jl
ret
cmp
stos
int
sbb
mov
dec
push
push
dec
mov
push
pushf
mov
decl
ljmp
or
pop
ja
push
lahf
add
ja
imulb
lcall
je
cmp
push
add
sub
sbb
in
dec
decl
icebp
and
fs
pop
add
cmp
cmp
mov
adc
xchg
in
push
out
enter
xchg
mov
shlb
cld
jmp
sbb
cli
lods
nop
sti
stos
mov
lahf
out
testl
dec
mov
mov
jne
loope
bound
dec
adc
lcall
or
imul
lahf
pop
sbb
out
dec
push
inc
inc
jno
ss
sbb
fsubr
jg
stc
cld
mov
mov
dec
aaa
sbb
add
adc
enter
mov
and
pop
and
in
jg
push
fwait
xchg
add
insb
xchg
mov
ss
in
xchg
mov
scas
ror
xchg
push
push
xchg
adc
dec
movsb
incb
or
insl
adc
pop
add
aaa
mov
push
stc
je
inc
sbb
xchg
mov
xlat
fsts
test
jle
jp
enter
sar
aaa
cli
aad
push
divb
jecxz
sbb
xor
mov
sbb
mov
xor
xchg
xor
xorl
xlat
sarb
hlt
rcr
inc
clc
push
movsl
outsl
ds
pushf
je
pop
mov
ficoml
add
out
movsl
call
and
cld
mov
cmp
mov
aaa
test
repnz
inc
lcall
aam
inc
mov
jge
xchg
mov
push
sub
add
mov
enter
test
pop
scas
adcl
pop
xchg
nop
xchg
adc
cld
push
sti
sbb
incl
xor
leave
das
mov
fnstsw
popf
lea
movsl
cmp
in
jmp
inc
sub
dec
imul
mov
bound
xchg
scas
ljmp
jae
and
sub
adc
pop
pushf
stos
fnstcw
lret
ljmp
movsb
decl
jmp
sti
mov
push
xchg
in
ror
pushl
mov
or
mov
lcall
punpcklbw
enter
lcall
roll
cmp
imul
repz
loopne
add
into
lcall
or
mulb
adc
repz
outsb
idiv
ljmp
icebp
outsl
mov
stc
xchg
fninit
xchg
repnz
cli
scas
inc
xor
cmc
push
push
adcb
aam
jmp
xor
sub
jecxz
inc
sbb
ret
cmp
or
mov
push
call
mov
sub
lahf
loop
popa
aaa
pop
icebp
xor
std
mull
push
popf
stos
mov
pop
fildll
test
cmpsb
ror
in
sbb
test
mov
in
bound
in
cld
icebp
push
dec
ljmp
jg
negb
mov
sbb
leave
aad
jge
out
sti
mov
xchg
jmp
push
push
mov
shll
push
scas
push
mov
cmpsl
add
sub
adcl
mov
mov
pop
aad
gs
and
popf
mov
test
mov
fwait
xlat
jg
lock
cmp
push
mov
lahf
js
repz
inc
add
aaa
cli
adcl
or
fstps
decl
fnstenv
pushf
jmp
xor
fistl
ficomps
je
dec
sti
sub
jbe
stos
mov
repnz
push
mov
decl
hlt
addr16
xchg
add
inc
lahf
out
in
sub
jbe
jno
sti
ljmp
mov
xchg
xchg
or
out
adc
cli
mov
pushl
mov
js
js
std
mov
shrl
inc
sar
lock
in
notl
sbbl
decl
xchg
call
mov
stc
adc
dec
adc
fimuls
push
add
cs
pop
adc
ljmp
cmpsb
aad
sar
pop
fidivl
lcall
pushl
into
inc
xchg
in
push
sbb
add
adc
inc
ss
pop
pop
ljmp
lcall
jl
pop
ja
jmp
jp
pop
in
mov
test
cmp
mov
movsl
pushl
jo
lea
xchg
test
stc
xchg
dec
loop
lock
jno
push
lret
sub
adc
roll
imull
scas
pop
cmpsb
dec
push
xor
mov
and
incl
jno
pusha
sbb
fmul
mov
jb
fsts
sbb
out
xlat
cmp
sbb
fidivl
xor
loope
testb
mov
call
cmp
test
pop
pop
cld
sub
lcall
push
ss
jne
xchg
push
nop
inc
leave
xchg
and
sub
mov
push
out
pop
pop
sub
lea
mov
jg
pop
jp
or
adc
jecxz
ss
mov
lock
out
dec
sub
out
or
cmc
sub
xchg
dec
dec
xchg
aaa
sbbl
out
pop
stos
leave
int3
sbb
sbb
cmp
inc
push
ja
aad
jge
inc
lods
dec
add
aad
leave
stos
clc
mov
sbb
dec
cmp
mov
cs
ficompl
mov
lcall
push
stc
xor
cmpsb
pop
jo
adc
jecxz
cmp
movsl
push
clc
sbb
out
arpl
cmp
jl
call
clc
dec
dec
add
pop
push
in
arpl
xor
xchg
add
pushl
out
movsb
sahf
loope
lret
fcom
cmp
jae
xor
push
call
or
and
xchg
mov
aaa
pop
mov
cmpsl
mov
add
sbb
fistps
push
cmp
adc
cmpsb
jg,pt
addr16
ja
adc
and
mov
ljmp
or
sarl
or
sub
xchg
sarb
jge
hlt
in
jg
mov
dec
sbb
jmp
mov
cmpsb
push
insb
mov
call
cmp
pop
inc
das
mov
jnp
test
mov
pop
sub
push
notl
scas
pop
push
push
sub
fbstp
popa
decl
mov
mov
cmp
pop
add
push
sbbl
jmp
mov
cmp
insl
inc
mov
lds
insb
mov
mov
test
cmp
ss
cmp
into
add
repnz
fucomip
incl
nop
dec
cmp
scas
mov
mov
xchg
inc
dec
mov
call
push
scas
fcmovnbe
loope
adc
adc
decl
and
cmp
jg
sub
movsb
lds
mov
cmp
incl
sahf
xchg
adc
mov
fwait
data16
push
xchg
sub
ret
jle
pop
jg
sbbl
daa
push
ret
xor
enter
test
test
mov
or
incl
cmp
jmp
sti
cmpsl
adc
inc
sbb
push
mov
push
xor
imul
and
dec
aaa
dec
popa
das
hlt
push
push
sbb
int3
lret
hlt
mov
dec
test
pusha
cmp
loope
call
jmp
mov
xchg
xor
daa
sub
jb
loopne
inc
inc
pop
fs
pushf
pop
std
std
inc
hlt
push
scas
lahf
mov
in
add
jo
stos
or
dec
mov
xchg
jmp
push
fnstsw
mov
xchg
test
fistpl
pop
std
adc
ljmp
sbb
mov
jge
mov
adc
data16
lcall
mov
lahf
add
sub
fsubrs
xchg
dec
aam
shlb
add
lock
movsl
lcall
adc
pop
popf
sub
loope
pop
fsubs
out
outsl
aam
sbb
ljmp
cli
in
inc
popa
mov
inc
push
xlat
jecxz
movsl
mov
fildll
std
mov
sub
jne
je
sahf
dec
mov
arpl
ljmp
or
jmp
mov
xchg
sbb
jg
jp
sarl
call
jne
adc
fwait
cltd
jle
iret
into
mov
add
lret
rcll
sbb
mov
jo
inc
aaa
dec
xor
shl
adc
out
xchg
or
pop
or
idivb
xchg
inc
adc
mov
lcall
aas
cs
movsl
cmp
or
mov
in
decl
cmp
enter
idivb
fucom
cmp
inc
ds
fucomip
xor
call
jno
jle
lds
insl
lods
xor
ffree
ljmp
jmp
mov
pop
std
ret
dec
clc
xor
insl
sti
je
call
call
pop
cmp
in
bound
ljmp
cld
pushl
cmp
mov
xor
inc
mov
sahf
cmpsb
mov
ret
out
lahf
mov
jg
push
movsb
outsl
hlt
inc
pushf
xchg
mov
sub
mov
decl
mov
scas
mov
icebp
xchg
mov
es
repz
lret
std
pushl
test
loope
jge
add
xor
out
adc
pop
mov
sbb
pushl
cli
mov
fdivl
mov
fldcw
and
jb
fmul
es
call
call
xchg
js
imul
loope
pop
pop
adc
aaa
loope
jecxz
lds
es
call
mov
xchg
pop
mov
fidivl
arpl
lds
add
outsl
fdivl
es
loopne
addr16
lahf
testb
fldt
out
or
ja
fndisi(8087
stc
call
idiv
pop
loopne
std
stos
cld
inc
adc
stos
mov
fbstp
add
repnz
push
addr16
jle
xor
in
and
mov
test
sub
js
iret
ficompl
adc
jo
pop
sbb
fimull
adc
daa
pushl
daa
and
rol
dec
push
push
cs
fisubrl
dec
test
mov
lret
inc
aad
fcmovnbe
mov
xor
cmpb
or
xor
jae
movsb
inc
mov
jp
cld
incl
sbb
mov
fwait
insl
in
ss
stos
push
insl
aaa
cld
jnp
or
data16
bound
ljmp
jmp
jp
xchg
stc
fstl
mov
push
jae
pop
sub
and
cmc
call
push
loope
cmpsb
adc
iret
loop
aad
lods
mov
add
decl
fs
fdivs
jmp
or
pusha
adc
push
ljmp
jne
lods
fldt
mov
mov
pop
sub
jmp
jne
test
pusha
mov
inc
cmp
mov
xor
incl
stos
sub
mov
aam
jle
push
ss
add
repnz
outsl
incl
test
mov
aas
outsl
pushf
xchg
add
adc
ljmp
xchg
push
jmp
test
jb
lods
popf
xchg
ljmp
sub
add
push
call
push
aam
push
mov
and
and
ss
sti
xchg
and
pop
jo
rcll
ljmp
in
add
xor
aas
scas
daa
fwait
dec
jb
cs
lcall
addr16
addr16
test
and
insl
mov
std
call
inc
mov
pushf
mov
stos
shr
and
aam
out
addl
pop
ljmp
std
enter
and
into
mov
lret
rcl
bound
enter
call
lods
rcrl
sti
jae
fsubs
loopne
jno
aam
movsb
dec
loop
das
std
pushl
das
ds
xchg
inc
jecxz
xlat
jnp
popf
lret
xchg
and
stos
sub
add
mov
movsb
cmc
xlat
arpl
dec
lcall
jo
das
les
mov
js
lret
xor
xor
ret
loopne
scas
pop
out
mov
lea
fs
or
lcall
sti
push
sbb
movsl
cld
inc
pushl
in
mov
sub
push
sbb
pop
pop
sbb
pop
or
mov
ds
push
xor
jecxz
ret
cmp
andl
jmp
andl
int
push
test
jg
mov
add
out
out
dec
cs
fucomip
dec
cld
ja
xor
pop
ret
data16
pop
cld
cmp
add
and
in
cmp
push
daa
xor
xchg
dec
incb
insb
decl
dec
repnz
push
into
mov
mov
push
int3
adc
in
shll
cld
push
dec
add
loop
call
jnp
clc
jno
stos
adc
je
fisubrs
mov
imul
repnz
xorl
pop
add
xlat
mov
or
ret
mov
or
cmpsl
and
lcall
dec
dec
out
fwait
movsb
movsl
push
sti
ja
ljmp
push
add
fwait
push
jp
cmp
dec
dec
sti
test
dec
mov
hlt
dec
fiadds
sahf
ss
fwait
mov
adc
jo
mov
xor
loop
pop
ljmp
add
test
ja
sub
xchg
lret
lcall
push
sub
and
xchg
push
inc
addr16
lret
xchg
sub
neg
add
xchg
cld
ret
push
iret
leave
sub
rcrl
xchg
clc
pushl
push
out
or
mov
mov
outsl
add
fisttps
int
pop
add
jo
scas
sbb
xor
xchg
inc
push
and
imul
jns
inc
out
sub
add
fildl
push
cmp
lret
dec
lods
testb
pop
es
xchg
mov
sbb
mov
push
decl
jbe
loop
icebp
dec
lods
jg
xchg
in
adc
out
outsb
and
scas
cli
push
pop
mov
cmp
mov
jge
lcall
pusha
fidivrl
aad
xor
lock
pop
pushf
or
push
or
cwtl
jns
inc
cmp
pushl
in
mov
mov
cmc
dec
lock
sbb
call
imul
mov
stos
lcall
cld
pushl
push
inc
or
loopne
cld
mov
push
leave
cmp
or
int3
ljmp
or
mov
out
and
jno
clc
incl
push
lret
arpl
lahf
mov
insb
mov
insl
or
dec
lcall
sub
or
mov
ljmp
stc
rorb
push
mov
cmpsl
fwait
test
imul
inc
or
outsl
cmc
das
sbb
adcb
xor
rcr
lret
or
mov
leave
jno
mov
leave
outsb
int3
cpuid
pop
dec
or
cmp
incl
and
and
xchg
scas
sti
xchg
cmp
int
push
test
imul
cmp
cltd
iret
rorb
lcall
sarl
aam
mov
fistps
and
in
insb
test
in
sbb
jl
xchg
xchg
sbb
std
imul
cmpsl
mov
mov
aas
daa
outsl
int3
cmp
mov
sbb
sub
sub
decl
adc
xor
cmp
daa
inc
popa
xor
loopne
jp
in
call
mov
dec
mov
rorb
xchg
inc
sbb
dec
xchg
in
sub
setnp
jl
mov
loopne
pop
push
mov
cmp
pop
movsb
xor
push
adc
jbe
js
lcall
jge
push
test
xchg
gs
daa
wrmsr
mov
iret
lcall
les
sbb
sub
loopne
add
sbb
aad
inc
sbb
in
mov
fwait
out
movb
mov
jg
jnp
lods
je
lods
inc
mov
sub
xchg
jmp
mov
mov
mov
xor
push
fdiv
fcoms
aas
add
sti
es
test
jle
popf
shll
adc
sub
pop
jns
test
mov
call
pop
add
leave
push
stos
icebp
loope
push
mov
inc
je
jno
jecxz
std
ljmp
stos
jge
sub
sub
scas
mov
in
xlat
sub
mov
insl
push
pop
arpl
cmpsb
cmp
mov
idivb
adc
and
clc
mov
out
and
call
mov
mov
inc
and
mov
dec
aad
insl
jp
jg
aad
pop
inc
shll
pop
test
mov
xchg
and
in
mov
data16
push
lcall
in
sahf
add
repnz
mov
mov
mov
lea
aad
jge
insl
les
out
call
inc
lock
mov
mov
dec
xchg
flds
shl
fadds
decl
jg
mov
rcr
adc
push
shll
push
push
idiv
pushl
mov
push
sub
in
rclb
je
insb
jg
mov
lods
and
popf
sbb
daa
lcall
das
pusha
je
ljmp
loop
aaa
cli
dec
shlb
or
mov
mov
jecxz
insb
test
data16
lcall
xchg
rclb
in
rol
mov
adc
int3
jo
je
and
ss
pop
iret
dec
loop
mov
rcl
add
fwait
repnz
fs
push
jns
incl
test
ds
jmp
popf
jnp
and
push
pop
sub
lcall
in
decb
nop
and
inc
scas
insb
mov
sbb
aaa
out
pop
les
add
sbb
xor
inc
loope
jecxz
add
or
out
int
add
ret
xor
mov
testb
in
leave
dec
arpl
insb
imul
jle
adc
ss
dec
xchg
fs
subl
fucomi
mov
push
je
icebp
jne
rorl
cmpsl
pop
xchg
hlt
adc
fwait
out
ljmp
cli
push
out
ja
add
aad
in
or
fbld
pop
ljmp
mov
stc
push
xchg
mov
call
addl
ja
jmp
stc
pop
fwait
dec
mov
addr16
out
scas
cmp
dec
sub
sub
call
ret
in
or
push
dec
sbb
and
test
fnstsw
mov
jno
jb
xchg
loop
outsb
cld
out
and
icebp
call
jbe
cli
popa
xchg
aam
or
jae
pop
xor
jns
and
mulb
fs
decl
daa
aad
pop
sbb
mov
les
mov
dec
push
outsl
lock
incl
mov
bnd
xchg
adc
sbb
jnp
dec
sbb
out
inc
fisubrl
fdivs
aad
jp
call
jno
jbe
fcoms
incl
fldcw
pop
call
aad
xor
inc
pop
cli
push
test
sub
imul
push
and
cmp
jle
jb
xchg
push
clc
xor
xor
leave
fcmovb
mov
inc
xor
rorb
xorb
mov
jecxz
decl
std
orl
xchg
add
sar
test
add
sarb
shrb
mov
addl
cmp
mov
jo
jp
bound
push
sti
sbb
rclb
pop
fidivs
xor
sub
add
dec
nop
mov
ret
mov
or
jl
icebp
mov
lock
cli
inc
sbb
xor
push
js
das
out
into
push
cmp
jns
jbe
push
hlt
adc
sub
ds
add
mov
mov
xlat
in
outsb
xchg
aad
std
incl
and
xor
mov
pop
cmp
lods
inc
push
jp
out
mov
lcall
stc
adc
in
sbb
in
mov
xchg
jg
popa
sbb
mov
loopne
mov
stos
inc
ja
data16
mov
stc
in
add
imul
mov
pusha
or
es
inc
adc
sti
jmp
popa
fidivs
inc
lret
scas
or
decl
das
lock
inc
xchg
xlat
jne
sahf
xchg
imul
out
stc
clc
ss
pop
mov
sbb
cwtl
cmp
add
mov
jnp
orb
incl
hlt
dec
aad
test
add
dec
xchg
push
pop
sub
xchg
jae
jbe
pushf
es
inc
enter
loop
push
mov
and
fstps
call
inc
insl
sbb
jne
add
inc
mov
in
lods
cmp
jb
mov
sbb
ficoml
jnp
sbb
lret
mov
pushl
or
cmpsl
mov
adc
mov
inc
mov
aaa
stos
mov
ljmp
fcoml
jmp
adc
sahf
mov
adc
fidivrs
xor
add
xor
lods
das
icebp
sub
pop
in
xor
sarl
decl
adc
jae
xchg
dec
pop
xor
cmp
sub
test
nop
push
and
pop
ljmp
es
scas
jne
loope
leave
fisubrs
adc
fcoms
jge
cmp
loop
andb
test
incb
sub
clc
call
or
mov
inc
sub
cmpsb
int
nop
pop
call
pop
sbb
lods
lcall
ljmp
pop
in
jmp
aaa
sub
inc
sub
mov
push
dec
out
cltd
mov
mov
hlt
sbb
sahf
rep
fdivp
xchg
jmp
cs
call
mov
mov
mov
push
lahf
xlat
ret
fcomps
sub
adc
call
dec
inc
cs
loope
fistpll
int
xor
push
xchg
in
in
lcall
mov
ror
mov
xor
push
mov
sar
mov
cltd
idiv
fucomip
sti
jecxz
out
jmp
fidivrl
ud0
js
fsubr
inc
call
pop
pusha
pop
dec
and
ljmp
int
pop
cli
pop
std
fldl
mov
dec
insb
mov
lret
mov
or
xchg
clc
in
jmp
loop
mov
das
add
cwtl
inc
pop
es
push
in
sub
divb
push
push
push
ret
aad
andb
loope
cmp
cltd
cli
push
test
incl
je
inc
lods
scas
cmp
movsb
data16
push
sub
inc
in
mov
insb
or
xchg
test
incl
xchg
loopne
lods
dec
ds
inc
insb
lods
and
mov
mov
ljmp
cmp
jecxz
in
cmp
and
incl
addr16
mov
out
mov
cmp
xchg
inc
jno
incl
call
cltd
pop
icebp
adc
mov
inc
inc
das
jg
pushf
je
test
adc
mov
xchg
jp
mov
movsl
mov
mov
call
int3
xor
test
jecxz
decb
cmp
and
icebp
pushl
loop
cltd
pop
cltd
les
push
jle
jne
out
jmp
sbb
mov
sub
push
sbb
jne
sbb
gs
lahf
sub
mov
dec
inc
xorl
push
push
jmp
test
aaa
incl
lret
movsb
pop
push
sbb
stc
push
call
mul
and
xor
popf
mov
push
imul
stos
addr16
inc
cmp
aam
pop
push
sbb
sbb
stos
xor
ja
jg
lcall
shll
jae
mov
ds
xchg
cwtl
lcall
testb
test
xorl
jge
push
jge
sub
jecxz
lcall
xchg
addr16
in
jbe
and
sbb
pop
jo
and
pushf
cmp
nop
ljmp
cltd
and
mov
clc
daa
pushf
lcall
aaa
cmc
dec
mov
movsl
out
repz
nop
ret
cmp
lret
enter
outsl
lock
mov
jmp
out
lock
cli
push
cwtl
sbb
scas
mulb
out
xchg
adc
call
push
idivl
dec
inc
pop
mov
add
xor
push
push
inc
mov
sub
leave
push
in
lock
cltd
or
iret
fstl
mov
pop
mov
in
call
int
aad
lods
sub
fsubrl
shl
das
pop
lock
inc
jb
cmp
mov
cmp
pop
test
add
add
nop
jae
sbb
outsl
into
addr16
and
jb
into
leave
xor
push
mov
es
lds
mov
iret
lret
int
push
mov
mov
push
inc
dec
call
inc
and
ror
outsb
add
sub
xchg
cltd
insl
xor
aas
mov
cwtl
dec
mov
aam
sbb
xchg
push
or
inc
aaa
movsl
bound
pop
aam
xor
mov
mov
add
add
mov
cmp
or
jg
hlt
push
sti
cltd
jns
movsl
adc
aad
test
cmp
stos
mov
jmp
pop
fxch
sub
stos
sar
push
outsb
add
ret
je
mov
mov
inc
call
lods
shlb
fxch
adc
adc
ret
mov
jne
loopne
push
pop
negb
jg
add
adc
inc
jnp
mov
sbb
sub
xchg
pusha
insl
pop
stos
dec
xorb
popa
fwait
in
jp
test
cmp
cmp
adc
jmp
pop
xor
aad
call
fwait
nop
cmpsb
fnstenv
inc
fwait
pop
sbbl
cmpl
movsb
push
dec
sbb
mov
adcb
andb
std
cld
or
loopne
divb
and
out
and
das
adc
test
call
or
lcall
jmp
push
mov
cmpl
pop
cli
or
call
call
push
cmp
inc
push
into
lods
and
outsl
mov
arpl
clc
xchg
and
mov
jno
add
lahf
stos
daa
and
testw
lcall
adc
loop
data16
es
inc
les
mov
mov
xchg
pushl
sbb
je
inc
jmp
add
sub
push
mov
ljmp
lds
cmpsl
and
sub
xchg
and
das
mov
sub
mov
aaa
cli
pushl
dec
sar
shll
pop
lods
negl
arpl
ret
inc
in
cmc
out
mov
xchg
test
xor
ret
shll
decl
call
lods
pop
push
outsl
pusha
pusha
cmp
push
iret
and
sub
decl
std
call
leave
movsb
and
cmpsl
fistpl
pusha
dec
dec
sub
in
call
ss
mov
shlb
mov
mov
jmp
shrl
or
adc
lcall
in
xor
das
lock
jmp
popa
push
push
icebp
int3
lret
mov
mov
cmp
leave
mov
lcall
repnz
mov
scas
popa
mov
mov
xor
nop
inc
and
fnstenv
mov
mov
pop
mov
pop
mov
inc
fnsave
mov
jmp
fimull
push
gs
lcall
pushl
lods
xor
jns
movsl
rolb
cltd
neg
cld
sub
clc
dec
adc
push
in
pop
cmp
push
pop
enter
jecxz
dec
dec
in
cmc
shl
decl
pop
mov
sbb
mov
ljmp
push
ja
xchg
and
lret
repz
pop
inc
jb
ljmp
lcall
sub
aam
and
mov
les
inc
mov
cmp
or
and
push
push
mov
daa
in
repz
mov
in
xor
decl
pop
jle
loop
xchg
rcll
imul
mov
jl
addb
insb
vunpcklps
repz
push
inc
cmc
sarb
pop
ffree
cmp
imul
gs
dec
sub
aaa
nop
into
jae
pop
mov
ljmp
jo
inc
fstpl
xchg
std
mov
mov
scas
lahf
cwtl
pop
sahf
divb
ret
lret
movsb
lret
repz
push
lahf
in
out
decl
mov
pop
cltd
pop
mov
inc
frstor
push
dec
xor
test
xorb
xchg
mov
call
decl
andb
and
cmpsl
inc
test
std
popf
push
pop
negb
mov
fnstsw
and
mov
in
pop
or
fs
jle
push
xchg
jmp
jg
fbstp
jle
add
add
mov
jb
xchg
xchg
or
shrl
cmp
or
fwait
in
popa
sar
jg
and
lods
js
int
jp
sub
cmp
sub
cmp
adc
mov
sti
loop
inc
cmp
sbb
jle
push
nop
out
pushl
fs
and
pop
mov
leave
or
mov
mov
or
pop
push
fstps
dec
cmp
fnsave
push
out
xchg
jle
fsubl
cmc
sub
push
std
das
jnp
jmp
pop
dec
mov
stc
movb
or
xor
incl
sub
cmc
aam
in
push
lahf
int
loopne
fstl
lock
test
out
inc
jbe
jg
rorl
cmp
jnp
sub
xor
ljmp
mov
dec
pop
pop
and
fucom
mov
jo
jle,pt
inc
inc
daa
mov
ljmp
lock
xor
xchg
out
xchg
aam
cld
mov
cltd
pop
add
jmp
dec
ret
adc
inc
insb
imulb
stc
mov
mov
push
mov
push
cmp
or
decl
dec
dec
jb
mov
push
push
mov
fdivrs
stos
out
decl
ljmp
xchg
aas
fiaddl
push
imul
sub
xor
lcall
mov
clc
adc
scas
movsl
popf
pop
test
mov
xor
jo
pop
pop
clc
lods
pop
je
dec
push
mov
test
js
adc
decl
aad
push
ret
repz
fcmovbe
xchg
inc
sahf
je
mov
aas
mov
and
xor
adc
mov
das
cmc
out
cmc
lret
add
es
sub
dec
sbb
sbb
shlb
pop
gs
pop
lahf
cld
pop
pop
mov
imul
jmp
ljmp
push
push
stos
cwtl
sbb
test
push
clc
xlat
and
push
or
jae
mov
adc
in
sahf
outsl
cli
mov
xor
mov
fists
shrl
mov
push
mov
shrb
mov
aaa
sbb
sbb
inc
lcall
push
jl
rcll
mov
fnstsw
clc
jl
sarl
lock
xchg
inc
jmp
arpl
loop
lcall
pop
imul
mov
adc
test
insl
push
push
ss
mov
loopne
cmp
arpl
pop
dec
adc
rcll
loop
call
add
in
jmp
adc
mov
loope
sub
out
xchg
fildl
fists
jecxz
adc
cli
xchg
dec
mov
sti
stos
rcll
call
jmp
out
in
je
mov
das
pop
ljmp
xlat
jae
or
sbb
pushl
cmpsl
sbb
aad
jp
pusha
or
cmpl
push
in
lret
outsb
shlb
or
fisubs
hlt
jmp
push
roll
iret
jecxz
push
add
cld
les
adc
test
add
or
add
dec
push
ljmp
scas
and
push
out
mov
repz
cmp
pop
jge
mov
cltd
xlat
pop
icebp
mov
cld
das
cmc
lcall
xor
xchg
popa
sbb
jmp
jns
movsb
adc
push
sbb
call
xchg
or
icebp
leave
adc
inc
and
mov
mov
sbb
push
sar
pop
jp
stc
cmp
xchg
push
mov
mov
mov
aaa
imul
sub
pop
sub
or
lahf
clc
imul
jge
jmp
rcrb
daa
loope
cmp
mov
mov
cld
and
cmp
fildl
push
add
mov
movsl
inc
jg
fmull
hlt
out
sub
mov
inc
add
add
jnp
out
push
out
in
inc
push
outsb
sub
mov
popa
pop
and
scas
ljmp
push
stc
loop
mov
je
inc
pop
ror
rcl
test
cmp
adc
or
dec
js
je
mov
add
arpl
loopne
xchg
mov
pop
push
fisttpll
mov
roll
add
aam
call
add
mov
fldlg2
inc
loope
mov
arpl
xchg
rorl
rol
test
mov
repz
or
ret
push
clc
int3
idivl
push
fisttps
cmc
push
int3
out
or
mov
xor
rcrb
call
pop
ljmp
jecxz
or
and
cmp
dec
cld
ljmp
xchg
std
push
jecxz
in
out
gs
std
iret
and
sub
outsl
adc
divl
loop
mov
subl
cwtl
inc
mov
decl
mov
push
loopne
test
xchg
adc
cli
or
mov
push
vpshufhw
enter
ljmp
leave
roll
dec
jbe
jae
push
daa
popf
mov
mov
mov
call
shrb
rcll
jae
mov
push
adc
pushl
xor
ret
sub
iret
push
mov
mov
dec
fs
sbb
jg
add
xchg
pushf
or
dec
popl
mov
lcall
adc
int
and
sahf
aaa
pop
sbbb
fildl
jl
lcall
call
into
loopne
imul
jae
jmp
and
pop
sbb
adc
push
lea
mov
mov
insb
add
repnz
or
cmp
jne
cld
lcall
mov
movsb
inc
or
dec
jecxz
ja
xor
dec
leave
sub
mov
rorb
xchg
inc
mov
jbe
int3
pminub
ljmp
fcmovbe
shlb
pop
push
mov
lods
aaa
pop
fistl
nop
fdivs
xchg
pop
pop
jbe
mov
lods
pop
outsb
mov
test
pop
push
popa
ljmp
jmp
xchg
cmp
in
shlb
fnsave
cmp
cltd
sub
or
or
or
bound
nop
adc
cmpl
fistpll
out
sub
das
pop
mov
xor
sbb
fstpt
and
jmp
icebp
pushl
or
sar
xchg
inc
int3
sbb
ret
adc
xchg
stos
lods
add
and
cmp
mov
leave
popa
stos
hlt
push
or
clc
sbb
nop
inc
xchg
imul
jmp
mov
push
mov
xor
loop
and
xchg
fstl
push
cltd
ss
xor
sbb
adc
and
es
sub
and
xor
mov
cwtl
inc
add
push
adc
mov
jg
or
pushf
push
stos
fcmovbe
pusha
sahf
insl
mov
push
stc
ja
insl
xchg
lds
in
push
incl
aad
loop
cmp
adc
div
rorl
mov
jno
xor
mov
cmp
jmp
mov
add
aaa
clc
xchg
faddl
and
enter
pop
outsl
or
pop
rorl
xchg
jne
adcl
push
push
add
popf
add
pop
pop
push
or
inc
jno
jg
cmp
xchg
xchg
inc
cmpsb
cmp
and
clc
outsl
std
push
or
fiaddl
pop
push
and
lcall
ljmp
in
sub
push
dec
sub
cmp
sub
mov
pop
cmp
cli
cmp
and
jmp
mov
repz
and
lret
jl
add
fbld
jg
aaa
and
or
xchg
aad
hlt
aam
sbb
mov
aad
mov
int
xor
fs
mov
call
dec
outsl
push
adc
sub
out
mov
pop
xor
ljmp
mov
lods
add
insb
pop
cmp
popa
push
sbb
mov
or
mov
test
imul
jmp
dec
insb
mov
adc
pusha
stc
inc
xchg
scas
pop
lods
xchg
jne
aas
mov
ja
fdivrs
and
out
ret
push
mov
adc
movsb
xchg
out
and
cmc
mov
pop
lods
jmp
in
das
std
shlb
pop
mov
lahf
cwtl
imul
pop
ljmp
xchg
pop
std
xor
dec
mov
nop
je
xchg
call
shl
cmpsb
cmp
aam
mov
mov
dec
loope
fisubs
outsl
cmp
sub
decl
sub
mov
leave
arpl
xor
mov
sbbb
faddl
push
push
or
outsb
lock
xor
or
movsl
ficoml
ljmp
cld
dec
mov
test
jle
pop
mov
cmp
test
aas
sub
xchg
cmpsl
in
ss
or
add
loope
xchg
dec
mov
jp
and
aad
setg
nop
gs
xor
and
jg
cmpb
xchg
pop
and
outsl
and
mov
jmp
push
sbb
scas
sahf
inc
movsl
pop
test
or
sub
jmp
int3
push
jmp
xchg
pop
or
incl
dec
xchg
into
cmp
pop
pop
stos
xchg
mov
clc
dec
inc
xchg
push
lock
in
xchg
mov
sahf
call
mov
rcll
mov
stc
insl
sub
je
rcr
add
push
hlt
jmp
data16
xchg
adc
and
dec
sub
push
rorb
jl
mov
jmp
mov
adc
dec
imul
out
cltd
aam
mov
xlat
testb
insb
pop
mov
popl
jmp
sahf
js
daa
cmp
dec
jnp
iret
ffreep
push
adc
in
mov
mov
fucomip
sbb
repz
insb
sbb
scas
imul
lcall
pop
mov
ret
pop
scas
mov
sub
sbb
dec
hlt
xor
and
scas
xchg
mov
push
dec
sub
or
testl
xor
jmp
adc
or
aad
jae
imul
icebp
pushl
inc
sbb
mov
shrl
rcrb
dec
add
test
sar
out
scas
adc
pusha
mov
cmpsb
mov
data16
mov
movsl
enter
std
or
aad
xorb
pop
cli
jg
xchg
mov
sub
dec
inc
rclb
aam
leave
iret
mov
in
pop
ljmp
cmc
inc
inc
es
xor
int
push
mov
dec
lods
into
cmp
lcall
add
push
pop
pop
adc
xor
adc
nop
mov
dec
mov
and
imul
ljmp
rcrl
sub
xchg
inc
mov
ja
push
hlt
lock
shlb
xchg
jns
pop
cmp
mov
mov
mov
loop
or
xchg
je
mov
shlb
or
fstpt
cmc
dec
xor
adc
cmpb
pop
pushf
mov
pusha
sbb
or
dec
cmp
incl
dec
mov
ret
rcrb
sbb
jns
jle
pop
sub
lcall
jg
jmp
in
push
inc
push
loopne
pop
mov
decl
inc
cld
jns
dec
pop
jb
negl
leave
movsb
pop
aam
incl
jo
mov
jo
andb
loop
popl
mov
mov
dec
sahf
rcl
xor
jecxz
lret
mov
into
mov
xchg
cs
lods
lock
xor
lret
je
popf
mov
lahf
mov
outsl
adc
mov
push
imul
xor
cltd
push
ret
dec
les
xor
enter
nop
and
add
pop
xchg
xchg
gs
jp
push
mov
int3
dec
jno
mov
sbb
and
aaa
xchg
push
enter
adc
scas
xchg
jle
incl
cld
mov
jns
dec
dec
js
insl
dec
pop
push
sub
push
or
inc
repnz
movsb
frstpm(287
mov
ljmp
pop
sbb
icebp
jmp
ds
mov
test
jbe
test
pop
dec
inc
mov
fmul
cmpsl
jo
inc
pop
data16
in
xor
fcmovnu
xchg
je
xchg
mov
test
loope
leave
mov
sti
push
cmp
mov
cmpsl
mov
lcall
pushf
jl
adc
gs
aad
xchg
ret
pop
adc
xlat
rcll
fisubrl
leave
call
pop
sub
aam
std
add
into
ret
outsl
popf
test
or
adc
jmp
loope
fldenv
mov
cmpsl
lcall
xor
mov
push
in
jecxz
cmp
mov
ljmp
fdivr
cmp
jns
jnp
loop
push
mov
sbb
dec
cs
mov
divl
sti
imul
and
add
mov
mov
add
xchg
push
outsl
cld
or
cwtl
mov
scas
mov
mov
sahf
je
idivb
fucomip
lcall
cmp
adc
adc
dec
lea
cld
push
push
sub
ret
fcoms
pop
cmp
cmp
add
pop
dec
cld
ljmp
imul
cld
mov
jg
idivb
or
adc
pusha
int
jo
hlt
data16
jmp
xor
jns
aaa
fadd
xor
pop
loop
dec
or
and
popf
rorl
mov
ja
sbb
pop
cs
dec
ljmp
rcrl
sub
movsb
popa
and
stos
sbb
mov
div
xchg
nop
sub
adc
sti
xor
and
push
sbb
int3
test
ljmp
inc
or
popa
dec
in
mov
cmp
adc
cmp
jno
xlat
in
jb
cmp
js
inc
out
int
jg
stos
pmulhuw
in
lahf
mov
pop
fsts
pop
sar
push
jl
pop
cmp
outsb
incl
nop
addr16
mov
jb
mov
cmpb
sub
lods
xchg
and
sti
pop
push
aam
add
cmp
aas
and
mov
dec
nop
into
and
mov
xor
mov
push
divb
lea
sub
int3
js
ret
xchg
test
push
and
pushl
movsl
xor
push
jnp
mov
mov
cld
std
std
sub
dec
jg
incl
pop
bound
pushf
lods
cmpsb
ficomps
rclb
lods
mov
ljmp
mov
ret
cmp
lock
xor
dec
fbstp
push
and
or
stos
std
sbb
fwait
imul
rol
pushl
clc
insl
int3
sub
fmul
pop
cmp
cltd
lret
mov
call
push
jo,pn
sbb
push
jg
add
fwait
lods
test
movsb
loop
jo
or
lcall
imul
mov
lcall
sbb
aas
add
cltd
dec
dec
int3
push
lcall
aas
jp
push
insb
sub
lret
mov
xlat
test
daa
mov
dec
push
mov
cltd
js
sbb
jp
rcll
pop
inc
into
fildl
add
push
mov
and
fstpl
insb
gs
jl
call
pop
fcomps
and
jbe
je
pusha
push
mov
xlat
adc
jp
add
or
mov
aam
pop
mov
jb
lahf
push
pop
xor
dec
mov
loope
mov
mov
adc
mov
cmp
sbb
dec
jmp
imull
es
andl
xor
mov
jg
lcall
lds
dec
cltd
add
mov
lods
into
jo
repnz
lcall
xor
jno
cltd
mov
dec
add
jmp
jmp
mov
cld
in
vmovaps
add
dec
aaa
mov
xchg
xor
pushl
cmpsl
fstpt
aad
adc
pop
repnz
fisttpll
push
outsb
imul
in
clc
jb
icebp
xorl
gs
or
cmp
jp
mov
lahf
shll
mov
xchg
xor
ss
leave
jl
incl
mov
icebp
add
xchg
cmp
aaa
adc
imul
fldenv
icebp
cld
dec
shlb
add
mov
hlt
nop
pop
push
or
inc
cmc
js
mov
jg
push
sbb
outsb
jge
ret
sub
bound
scas
jmp
pop
pop
add
adc
or
scas
xorl
testl
mov
orb
xchg
xchg
out
cmp
popa
subl
cmp
xchg
push
push
dec
xchg
shll
adc
xchg
cli
call
pop
lret
call
cmp
stos
lods
pop
out
cmpsb
lcall
mov
add
mov
test
in
in
dec
leave
in
cmp
push
mov
idiv
clc
pop
enter
sub
data16
daa
mov
xchg
jne
cmp
ljmp
lock
inc
gs
mov
mov
pop
sub
xor
mov
int3
and
cld
decl
and
gs
mov
int
add
inc
fsubl
push
pop
mov
clc
lcall
repnz
sbb
mov
sub
sub
aam
push
daa
adc
pushl
cwtl
out
lcall
jno
je
out
cmp
jg
call
aad
mov
adc
out
jno
aaa
adc
sub
aas
mov
adc
add
mov
lods
and
dec
push
cli
incl
out
jmp
inc
pop
jg
or
jmp
and
inc
push
sbb
add
mov
ljmp
jg
inc
push
inc
dec
ja
sbbl
pop
inc
push
xchg
pop
mov
or
test
xor
pop
mov
xchg
adc
mov
fidivrs
sahf
pop
inc
aad
or
mov
sbb
cmpsl
mov
lret
lret
adcb
mov
call
lock
loop
shlb
mov
rcrl
lret
mov
cmp
xchg
pop
add
mov
fistps
sti
insb
idivb
test
lock
out
mov
jmp
dec
ljmp
insl
add
xchg
lahf
dec
and
ret
push
bndldx
cmp
out
cmp
pop
loop
jnp
loop
cmp
daa
outsl
call
js
xchg
popa
push
and
pop
sbb
fnstsw
pop
loopne
mov
je
movsb
ret
outsb
stos
gs
pop
mov
push
js
mov
fsts
rclb
addr16
lds
movsb
cmp
adc
lret
inc
add
cmp
pop
call
insb
ret
pop
popa
dec
mov
xor
divb
lcall
jg
jne
sbb
lods
jne
xor
xor
dec
xor
inc
sub
mov
lock
add
ret
mov
sahf
sbb
std
jg
dec
or
mov
flds
call
out
xor
sbb
sbb
sub
push
cld
negb
sub
enter
cli
dec
xchg
enter
or
ret
pop
add
pusha
outsl
lcall
jno
mov
int
rcll
xchg
fstpt
add
cmp
cmp
out
mov
sbb
shlb
fwait
sub
jmp
add
clc
mov
mov
hlt
arpl
pop
mov
daa
inc
incl
add
sti
sbb
outsl
cld
outsl
std
sbb
sbb
daa
cmp
fidivrs
icebp
mov
mov
test
out
fwait
js
pop
insb
jne
push
push
loope
in
push
mov
aad
ljmp
loope
xor
out
sub
out
mov
orb
cmp
incl
cmp
pop
add
int3
in
dec
mov
xor
pop
clc
push
das
pop
fldl
pop
int3
fwait
dec
xlat
mov
inc
ljmp
lret
cmpsl
push
and
pushf
mov
or
insl
iret
mov
jmp
std
jg
or
jns
xchg
lods
fimuls
rcl
jp
lcall
sbb
mov
js
repz
jmp
idiv
jl
out
in
sti
testl
sbb
mov
cwtl
test
pop
cld
aaa
js
cmp
or
adc
pusha
dec
mov
adc
call
ret
popf
dec
mov
rcrb
data16
xor
test
jb
and
sub
jmp
incl
popf
adc
dec
mov
xchg
mov
inc
dec
or
mov
das
cmc
pop
stc
fs
or
mov
push
ljmp
dec
gs
stos
and
push
std
xchg
jne
andl
pushl
mov
push
shll
inc
and
mov
loopne
and
adc
mov
cli
jmp
sbb
ljmp
lea
adc
mov
mov
push
push
mov
jle
or
stc
rcr
mov
pop
add
les
xlat
repnz
decl
bound
enter
ds
mov
loopne
adc
mov
hlt
loope
mov
sub
cltd
aad
lods
dec
fnstcw
loop
sbb
push
sar
jg
scas
loope
lahf
xchg
hlt
sub
cmp
les
cltd
xchg
cmp
dec
idivl
ds
sub
jg
call
pushf
aas
cmpsb
outsb
lods
lods
push
push
lcall
fwait
push
jbe
shrb
inc
orl
pop
imul
int
arpl
fisubrl
mov
test
daa
shrb
pushl
mov
mov
aad
je
dec
jge
sahf
pop
ljmp
jnp
jge
mov
cltd
add
cwtl
das
mov
jmp
dec
push
fwait
xchg
mov
cmc
inc
gs
mov
push
mov
das
dec
outsl
jge
in
fwait
inc
push
mov
push
mov
sbb
aas
js
pop
dec
cmpsl
dec
shlb
lcall
sbb
imul
popa
lods
mov
out
loop
ret
jbe
mov
lret
lcall
and
scas
mov
sub
xchg
insl
inc
push
jo
dec
jns
or
cmp
inc
cmp
lahf
cmp
imul
push
push
outsb
inc
int
rorl
add
sub
jle
cmpsb
clc
in
inc
lcall
pop
cmp
out
and
xor
cmp
icebp
jp
insl
sbb
jg
lods
rcrb
pushf
je
nop
sti
xor
jae
call
xchg
jge
stc
iret
push
push
sub
jmp
aam
sbb
pop
mov
hlt
sub
fmuls
inc
imul
adc
push
jb
adc
mov
mov
incl
lahf
int3
lods
out
mov
adc
mov
test
es
outsl
pushf
push
jno
jl
adcb
pop
call
jle
xchg
mov
push
in
push
cltd
movsl
jb
in
in
ljmp
pushf
and
jb
and
pop
pop
sbb
or
out
cmpsl
fwait
ja
stc
js
mov
jmp
push
pop
sub
inc
inc
sub
sub
cltd
xor
scas
and
sub
decl
add
push
bound
loope
jecxz
pop
nop
ja
or
aam
in
sahf
mov
les
test
inc
jle
xchg
and
sbb
mov
es
sbb
mov
in
cmc
in
push
inc
sarb
mov
pop
cs
imul
in
jns
xchg
dec
sbb
jmp
outsb
inc
ret
and
call
mov
test
mov
scas
out
mov
in
jle
sub
mov
adc
ljmp
or
movsl
out
pop
and
loop
push
stos
cmpsb
ja
jg
fistpl
ljmp
jmp
loopne
mov
outsl
pmaxsw
loopne
adc
fistps
push
fxch
pop
loop
decl
into
sbb
adc
sbb
shlb
call
xchg
imul
jae
push
xor
fldl
jmp
leave
out
xlat
xchg
clc
pop
cli
out
push
cwtl
mov
inc
movl
ret
enter
mov
xor
adc
push
or
ljmp
decl
pop
jbe
sub
add
xor
pusha
les
aaa
js
outsb
mov
jne
or
js
call
and
jl
sbb
ss
push
leavew
bound
pop
fwait
decl
add
jge
jp
in
cmpsl
xchg
jp
mov
ffree
xchg
pop
xor
xchg
sbb
adc
call
jecxz
dec
mov
xlat
cmp
out
pop
adcl
jbe
and
sbb
xor
cld
mov
mov
add
jg
pop
icebp
jmp
sub
shrb
mov
push
jnp
in
loop
stos
std
xchg
pop
jbe
cmc
out
iret
add
ret
dec
pop
pop
push
cmp
fxch
xor
call
sub
in
ljmp
xor
pop
cmp
xchg
test
sub
sbb
cmpsl
or
and
das
orb
lods
pusha
or
repz
jg
movl
pop
mov
push
push
outsb
fmull
mov
ljmp
hlt
int3
sub
stc
fwait
das
xor
mov
in
bound
outsl
mov
dec
adc
push
icebp
fucom
inc
lret
push
jle
pop
aaa
pop
adc
push
popf
jo
mov
cmpsb
pop
inc
movsl
pop
and
mov
cld
adc
pop
repz
decl
imul
add
lret
int
push
push
mov
add
das
cld
push
lcall
xchg
push
bound
movsl
incl
adc
dec
loope
jbe
hlt
cli
std
adc
insb
int
call
mov
lret
icebp
insl
push
sahf
hlt
push
lret
inc
jge
call
adc
sub
mov
test
mov
or
addr16
movsl
jmp
mov
loopne
shlb
inc
aam
cltd
mov
pop
cmp
cmp
inc
stos
fistps
ja
add
push
sub
sti
ret
cmp
cmp
mov
std
push
ljmp
add
mov
pop
jg
push
mov
jae
mov
mov
ljmp
mov
adc
jns
mov
cmp
jle
mov
jg
incl
movsb
lods
adc
pop
mov
test
cli
icebp
push
mov
hlt
call
clc
mov
inc
and
pop
icebp
jno
pop
pop
mov
add
mov
and
xor
inc
cmp
push
lock
jne
test
out
in
or
pop
imul
add
sbb
outsl
xchg
mov
pop
decl
cld
test
add
inc
rcl
mov
je
add
lods
loop
ret
jmp
cmpsb
out
or
jl
lods
jnp
iret
jmp
or
lcall
mov
xchg
pop
inc
pop
int
mov
ljmp
jns
shlb
pop
ret
jae
mov
jge
jmp
push
pushf
dec
ret
adc
ja
xor
daa
cmpsl
aaa
sub
decl
jbe
or
ficoms
mov
aad
outsb
add
ljmp
or
movsb
push
mov
das
lea
mov
xorl
pop
mov
mov
testl
mov
cmpsb
sub
mov
push
incl
in
sub
mov
push
sbb
inc
fs
jmp
fistps
cmp
jae
ljmp
std
inc
sbb
mov
jge
popf
or
movsl
aad
jmp
jb
sbb
out
sbb
add
push
lea
or
inc
outsb
jbe
or
decb
inc
inc
ljmp
pop
mov
push
insl
imul
cmpsl
push
xchg
jmp
imul
mov
pop
leave
ja
lods
pop
adc
cmp
movl
xchg
pop
call
data16
ljmp
cwtl
jnp
jb
mov
mov
das
mov
and
push
add
mov
mov
dec
inc
loopne
incl
sbb
movsl
in
pop
or
movsb
stos
pop
repz
mov
pop
mov
divb
pop
and
sub
ss
lcall
ss
outsb
adcb
lods
es
pop
lcall
xchg
mov
sub
sbb
xor
loopne
xchg
pop
push
xchg
loop
or
or
fsubs
inc
mov
cmp
xchg
clc
pushl
shrb
inc
xor
orl
pushl
or
ljmp
lods
roll
and
notb
mov
mov
sbb
mov
out
inc
shll
mov
call
incb
rcl
int3
mov
jg
xchg
mov
sbb
imul
rclb
pushl
xor
add
idivl
stos
adcl
cs
fisttpll
fnstenv
push
lea
imul
call
jp
mov
outsl
in
sbb
loope
fidivrs
mov
xchg
cmp
jmp
lods
pop
dec
inc
dec
jnp
divl
mov
leave
sub
repnz
ljmp
js
jb
stos
ror
movl
push
xorl
add
add
ljmp
add
jmp
push
ret
call
mov
outsl
jne
fldl
loopne
ja
add
mov
jb
out
sahf
ljmp
prefetchnta
xchg
mov
push
adc
cli
ljmp
jne
lea
jmp
push
imul
insb
xor
sbbl
or
jb
or
je
arpl
xchg
add
mov
mov
xchg
lea
jp
or
imul
ljmp
jle
push
mov
jbe
and
mov
push
and
mov
add
out
decl
pushl
push
push
call
cmp
jne
incb
jo
fldl
test
dec
or
or
je
js
lods
cmp
xchg
jg
das
or
jmp
jmp
mov
or
add
shr
or
ret
add
loope
or
jmp
pop
pop
pop
pop
jmp
pop
dec
mov
add
ja
push
push
sar
rep
popa
loope
rep
pop
movsb
sbb
lds
sbb
test
sbb
mov
mov
sub
mov
jns
ret
adc
mov
outsb
ret
out
fimuls
popa
mov
or
jmp
das
ja
pop
or
jmp
sti
add
je
add
jle
fucomp
sub
and
add
jmp
push
ficomps
gs
or
pushl
fisttps
loop
jmp
mov
adc
repnz
or
das
add
mov
lods
stos
jmp
mov
outsb
mov
outsl
test
out
and
inc
out
fdivrs
and
lods
dec
test
add
inc
pop
push
and
cmp
scas
insl
pop
sbb
cli
rorl
out
jbe
test
push
movsl
sub
ret
add
jne
add
inc
inc
push
lods
push
add
mov
cwtl
mov
jne
and
push
mov
add
scas
dec
pop
sahf
fildl
insb
mov
notl
adc
ljmp
cld
jbe
and
rorl
loop
xchg
mov
mov
fnstenv
cmp
add
add
pop
jmp
sub
xchg
inc
sarl
xorl
imul
mov
add
ds
adc
mov
sarl
push
push
add
pushl
dec
in
fists
push
movzwl
add
lea
cld
or
lods
test
add
cmp
dec
jne
idiv
ss
mov
add
inc
pop
loopne
add
and
or
and
cltd
insb
sti
sti
ja
pop
lods
lods
mov
loop
or
sbb
fldl
pop
in
jl
or
or
testl
or
push
lea
popa
push
push
dec
sub
arpl
int3
or
sbb
xor
mov
jne
push
lea
lods
pop
jnp
in
xchg
sub
pop
mov
cmpsb
pop
add
imul
js
adcl
je
jne
sbb
pushl
push
dec
punpcklwd
inc
outsl
js
add
jo
imul
or
inc
inc
push
and
push
dec
push
add
mov
jo
cmp
gs
jb
movq
lods
cmpb
and
stos
popa
je
mov
lods
std
pop
je
fs
popa
insl
imul
jb
in
arpl
push
outsl
jb
imul
mov
lods
mov
adc
shlb
xor
dec
jne
jl
add
pop
ret
add
jg
cmpb
hlt
push
push
mov
and
ss
or
pop
and
or
das
ret
push
inc
cmp
pop
nop
or
mov
mov
push
in
push
jg
fdivrp
pushf
dec
out
push
call
and
push
xchg
and
add
out
ss
push
sbb
or
jle
mov
das
ret
es
aaa
push
jb
rolb
and
add
sbb
ret
add
insb
push
xchg
lock
incl
or
or
adc
sbb
sub
cmp
pusha
jo
mov
dec
shll
add
aaa
adc
push
inc
inc
or
or
or
or
or
movups
add
loopne
cltd
adc
rcll
push
push
cmp
lods
in
out
cli
jb
push
mov
mov
inc
mov
xchg
fdivrp
insl
addl
or
loopne
and
mov
mov
add
mov
cmp
jae
pop
mov
pop
ja
lahf
adc
into
shr
mov
inc
add
in
negl
push
mov
add
daa
std
jp
add
mov
ds
orb
or
mov
mov
or
push
mov
idivl
scas
pop
sub
pop
inc
pushl
div
stos
mov
dec
and
mov
call
cmp
add
cmp
mov
jb
mov
jg
je
sub
inc
or
incl
sbb
leave
jecxz
mov
data16
mov
or
adc
xor
shl
add
sbb
fildl
and
xchg
push
pop
mov
ret
cmp
mov
mov
insb
or
lds
jb
mov
into
and
cmp
fdivrs
divl
adc
or
jmp
adc
std
and
sbb
fwait
js
faddl
add
or
negl
inc
xchg
je
pop
pop
pop
xor
push
lea
pop
daa
sbb
andb
adcl
cmp
push
in
movb
je
xchg
push
mov
test
or
cmp
jo
leave
out
iret
out
cmova
enter
mov
push
dec
adc
cmp
push
jno
add
jb
mov
mov
inc
mov
test
dec
or
fstp
push
leave
push
scas
ret
pop
lret
stc
or
fnsave
adc
lret
adc
outsl
sbb
push
push
sub
ja
mov
out
jmp
cmp
jae
add
sbb
mov
ljmp
xor
mov
lcall
cmp
pop
sahf
or
mov
mov
cli
mov
sbb
mov
outsb
ret
jb
jae
xchg
inc
add
mov
sbbl
int
xor
aas
mov
add
push
push
ret
arpl
fucomp
push
pop
mov
mov
aaa
js
jecxz
shl
clc
cmp
xchg
lea
push
push
in
es
lea
gs
call
add
add
push
mov
test
fldl
and
mov
push
dec
lea
or
inc
add
addb
notb
call
add
outsb
movsb
mov
adcb
fistpl
aam
or
pop
inc
jp
stos
call
dec
mov
fwait
cs
xor
fiadds
sub
mov
and
xor
push
nop
cmp
sbb
cli
ja
incl
adc
lea
mov
jae
mov
fwait
or
adc
jle
jne
ret
xor
adc
mov
push
mov
add
and
sbb
inc
jmp
jne
push
pop
out
fldt
sti
and
add
dec
cmp
dec
xor
dec
mov
mov
jg
jmp
inc
adc
ja
dec
xchg
push
or
fisttpll
cmp
pop
mov
out
inc
dec
aaa
in
adc
mov
lea
and
dec
adc
aad
stos
lea
add
pop
push
push
call
and
and
andl
mov
loope
and
jmp
sbb
push
push
test
xchg
arpl
pop
sub
mov
pop
ss
pop
or
xchg
jmp
fwait
clc
ja
dec
mov
xchg
dec
adc
subl
push
adc
mov
inc
neg
std
xchg
cmpsl
push
and
sub
cmp
add
and
shr
rcl
mov
sub
cmp
test
js
push
pop
jl
push
pushf
xor
jmp
aam
cmpsb
lods
mov
or
aad
sahf
dec
out
cmp
or
aad
or
jmp
sbb
aad
fiadds
ljmp
mov
ljmp
imul
add
xchg
mov
jl
sub
xchg
xor
test
je
cmp
jb
fstl
out
loope
std
push
inc
add
xor
lods
jle
cmp
jge
sbb
mov
dec
aad
sar
mov
int
imul
mov
cmp
xorl
shr
adc
sub
and
sbb
lea
jmp
add
lret
adc
leave
and
push
inc
adc
and
xlat
in
mov
lret
shrb
icebp
jae
add
sahf
dec
inc
inc
insb
movsb
xchg
iret
xchg
adc
xchg
adc
std
mov
loope
xchg
in
mov
or
adc
lea
cmp
scas
jae
aad
or
shrb
roll
adc
mov
fdivrs
clc
mov
enter
mull
negb
enter
sub
subb
inc
sub
lcall
inc
or
sbb
add
and
inc
and
cmc
xchg
and
fs
out
negb
in
adc
cmc
insb
gs
popa
outsb
and
adc
outsl
popa
fs
xchg
enter
add
adcl
call
add
add
test
mov
sbb
mov
iret
xchg
mov
movsl
packsswb
repz
outsl
sub
inc
nop
lods
addr16
mov
testl
testl
test
mov
test
inc
or
leave
add
add
pusha
loopne
mov
dec
mov
not
shrl
xor
xchg
push
idiv
mov
test
imull
je
nop
push
add
daa
pusha
sbb
jb
add
mov
mov
fdivrs
add
lea
add
add
jg
fadds
cmp
xchg
mov
sbb
scas
ja
fxch
push
push
repz
dec
imul
or
mov
add
in
and
call
test
cmpl
in
frstor
nop
ja
sti
fists
sub
mov
in
inc
inc
mov
inc
sbb
clc
jg
dec
lret
jns
sub
cmp
xchg
hlt
gs
int3
sahf
stc
jg
jmp
jnp
incb
cltd
jne
push
sub
jge
adc
cmp
and
lcall
loop
mov
or
pop
push
in
leave
dec
jmp
clc
jne
rolb
aam
pusha
pop
lock
lcall
in
sub
mov
lods
clc
stos
xchg
cmp
inc
push
jo
ljmp
xchg
push
int
in
gs
sbb
pusha
shll
jle
fadds
cltd
testb
mov
and
pop
lcall
push
jle
lret
ljmp
sbb
hlt
mov
hlt
repz
mov
and
mov
lcall
dec
sti
aas
cmc
pop
fdivrs
addl
mov
mov
out
mov
mov
sti
call
icebp
es
adc
mov
loop
xor
fsubrs
inc
lds
bound
sbb
rorl
jno
sub
xor
xchg
mov
fldt
sub
add
clc
mov
pushf
aaa
aam
mov
aaa
jg
mov
jge
inc
adc
lods
shrb
in
push
fldenv
dec
loope
in
repz
mov
mov
cwtl
pushl
ljmp
push
xchg
mov
mov
fnstsw
xor
cmpsl
mov
fbld
jb
pop
and
sar
lcall
dec
mov
jnp
or
cmp
shl
jns
inc
mov
das
xor
popa
lret
jo
push
jnp
jl
or
roll
addb
adc
adc
out
jbe
and
out
cli
push
and
inc
repz
add
xchg
xor
mov
mov
test
bound
lcall
mov
jo
call
decl
lock
scas
shl
mov
push
jge
add
hlt
cmp
leave
lret
pop
ljmp
xchg
ss
insl
jp
cld
cmpsb
mov
outsl
mov
xchg
adc
push
inc
fstpl
push
add
and
cmpsb
push
sbb
ljmp
lock
mov
notb
and
lea
inc
popa
in
iret
add
repz
mov
daa
stos
xchg
or
pop
jo
ret
call
sbb
dec
es
lods
std
enter
push
outsb
call
out
call
movsl
lcall
cli
daa
mov
xor
cmp
enter
push
call
incl
adc
xchg
mov
adc
dec
mov
ljmp
jmp
stos
add
or
ret
pusha
das
sahf
push
mov
leave
loopne
cs
decl
scas
aas
cmp
movsl
mov
or
and
sub
adc
xchg
insb
push
incl
data16
outsb
shll
test
or
mov
mov
in
cmp
decl
movsb
loop
lahf
and
pusha
loop
out
pop
jae
xor
loop
xchg
pop
aaa
call
jp
icebp
popf
sbb
lds
mov
pushf
leave
inc
jae
cld
or
xlat
scas
in
decl
das
ljmp
shlb
out
mov
xchg
xchg
inc
jle
sbb
out
inc
xor
cmp
xlat
mov
arpl
jg
mov
sbb
sahf
movsb
xor
ss
das
jg
mov
lods
sub
ds
int
xor
stc
lods
sti
stc
into
jmp
jg
test
ljmp
pop
mov
and
dec
cld
idiv
jg
test
enter
mov
insb
cmpsl
mov
jmp
in
add
ret
repnz
iret
lahf
arpl
ja
in
pusha
xchg
jo
in
enter
jle
pop
mov
dec
idivb
pop
sbb
ret
mov
add
cwtl
bound
inc
adc
xchg
aaa
arpl
int
in
dec
insb
in
and
mov
xchg
repnz
adc
jl
out
jg
scas
jno
xchg
mov
and
divb
mov
das
jae
std
push
call
mov
mov
popf
ljmp
sbb
push
mov
inc
incl
lea
scas
roll
xor
or
stos
pop
jae
test
pop
cld
mov
add
add
loopne
fidivl
lahf
adc
roll
mov
out
outsl
pop
int3
dec
out
xchg
mov
outsl
pop
and
ss
or
push
cmpsl
or
mov
jg
cmp
cmp
mov
int3
mov
pop
out
lock
gs
insl
push
inc
mov
sbb
stos
jnp
sub
aas
cld
outsb
xchg
dec
mov
add
cmp
dec
adc
aad
call
pop
iret
push
mov
incl
lds
sub
and
and
dec
jmp
sbb
sub
xor
lcall
call
mov
push
aad
inc
dec
mov
or
pop
pop
jecxz
pop
mov
cmp
mov
insl
fisubl
arpl
xorb
ss
les
and
jmp
push
lea
xchg
inc
data16
cli
xchg
mov
ss
hlt
pop
aas
or
sbb
or
push
cmpsb
mov
jle
fst
mov
mov
div
sub
pushl
xor
mov
mov
fdivl
cmp
int
js
fs
in
stc
dec
iret
mov
stos
nop
divb
or
push
jmp
jns
jmp
adc
fildl
lcall
loopne
and
rcrb
sbb
cwtl
jp
mov
pushl
xlat
jle
push
mov
inc
push
xchg
sub
xchg
je
out
aam
adc
arpl
cmp
jmp
loope
daa
cwtl
jmp
mov
mov
and
jmp
jae
int
mov
mov
add
aaa
xchg
orl
mov
sbb
stos
je
call
call
adc
les
jo
jmp
xchg
stos
leave
imul
fcoms
mov
test
or
clc
cwtl
leave
xchg
push
movsl
in
pcmpeqb
sarb
cld
push
ljmp
dec
fwait
dec
push
mov
rclb
adc
mov
lcall
and
xchg
jl
mov
xor
loope
sub
test
pushl
cli
sub
push
subl
mov
faddl
push
mov
xchg
adc
push
cmp
push
xchg
mov
call
xor
pop
ss
jmp
mov
lock
push
sbb
ljmp
imul
insl
iret
out
rorb
mov
xchg
cmpsb
push
insb
inc
inc
outsl
ljmp
hlt
pop
into
ror
push
dec
test
adc
dec
xchg
sub
call
shl
mov
xorl
mov
stos
adc
shlb
inc
mov
and
cmc
lock
jmp
shll
out
xor
mov
cld
cmp
std
ds
mov
ljmp
into
ficompl
mov
out
test
divl
adc
jmp
call
sbb
add
lods
loope
dec
stos
negb
stc
test
cmc
or
xchg
imul
bound
insb
jmp
decl
jecxz
jmp
adc
je
nop
or
inc
mov
es
std
call
xchg
test
mov
mov
inc
and
cwtl
ljmp
fstpl
pop
mov
leave
adc
pop
mov
rcl
loope
std
das
std
jge
push
cli
or
mov
test
xor
decl
jmp
out
mov
mov
es
gs
int3
dec
sahf
or
dec
jl
scas
lock
sub
jg
cmp
js
cli
nop
mov
lods
adc
cmpsl
clc
or
out
movsb
add
pushl
mov
shlb
cmp
inc
or
iret
adc
leave
inc
les
scas
movsb
mov
out
sbb
neg
push
jns
sahf
mov
pop
xchg
sub
sti
sub
push
call
cmp
or
ss
ret
jecxz
adc
push
jl
loop
or
mov
pop
pop
inc
movsl
ret
jecxz
and
fsubs
ds
aas
cmpsb
lahf
ret
call
mov
cmp
imul
mov
cld
jmp
mov
xor
test
xchg
loopew
out
insb
mov
xor
fbstp
mov
out
lock
inc
cmpsb
jg
gs
cmp
das
add
iret
xchg
or
ret
push
adc
lcall
lret
cmp
imul
xchg
insb
jle
ds
ljmp
or
mov
xchg
lret
addb
dec
cmp
gs
rcrb
jmp
mov
inc
faddp
lret
clc
icebp
jb
mov
mov
idiv
incl
cmp
popa
js
aas
pop
loopne
test
push
cwtl
sti
push
stos
call
ja
icebp
pushl
dec
insl
addr16
xchg
test
shrl
jmp
mull
jp
xorb
sub
mov
iret
imul
outsl
mov
das
or
push
fsubl
jg
push
mov
stos
ret
rcll
adc
rcrl
lcall
bound
inc
scas
daa
test
das
dec
jmp
into
mov
jmp
pop
into
loope
repnz
fwait
in
add
in
jne
inc
mov
cmp
push
jle
loope
jmp
lret
test
pop
aas
push
mov
pop
fidivrs
pusha
incl
jg
and
jecxz
pop
inc
inc
cs
add
fldenv
cmp
mov
addr16
xor
sub
bound
movsl
int
into
or
push
push
fcoml
test
push
and
hlt
incl
xchg
xchg
cwtl
mov
lahf
and
adc
and
jge
pop
ljmp
movsl
sbb
lods
pushf
push
icebp
jns
push
iret
call
mov
fisubrs
sub
push
pop
popf
add
xchg
movsl
push
dec
pop
dec
mov
push
gs
frstor
inc
sar
sbb
bound
fnstenv
mov
in
inc
into
iret
loop
xchg
dec
xchg
icebp
stos
mov
fidivrl
xor
dec
data16
std
cwtl
incl
pop
fs
or
stc
adcl
and
adc
int3
fsubl
ljmp
push
jg
mov
push
leave
sub
mov
mov
dec
int
or
add
movsl
stos
dec
mov
cli
decl
addr16
sub
arpl
out
cmpsb
push
arpl
icebp
arpl
outsb
xlat
int
sub
mov
cmc
cmp
mov
popa
sub
addr16
fimull
fcoms
mov
mov
out
clc
lcall
movsl
cltd
mov
into
idivl
push
pop
add
cli
or
mov
shrl
cmp
xchg
dec
pop
stos
in
and
xchg
or
fadds
mov
sbb
xchg
cs
and
sub
sahf
test
in
jne
or
add
pop
add
clc
aas
ljmp
iret
or
inc
call
aam
lret
negb
aas
jne
or
clc
or
jmp
cmpsb
lea
mov
push
aaa
std
xor
pushl
mov
xor
or
loop
loope
fimuls
ja
test
xchg
decl
mov
int3
jp
outsb
mov
push
popf
in
inc
jbe
xchg
cmc
cli
fdivr
decl
loopne
stc
aad
mov
data16
pop
mov
cmp
fucomip
lcall
jmp
jle
jg
mov
inc
jg
or
adc
ret
xor
push
sbb
inc
test
lahf
jecxz
sub
popa
sbb
movsb
in
fcomp
and
mov
cld
sub
pushf
shlb
jns
push
ljmp
rcl
mov
jg
aaa
enter
and
xor
mov
es
inc
fmul
lods
jg
mov
sub
sarb
dec
fiadds
fdiv
stos
icebp
mov
imul
xchg
xchg
pop
hlt
mov
in
mov
dec
inc
dec
jle
icebp
inc
cmp
scas
out
cmpsl
loop
add
call
ljmp
imul
jne
mov
pop
jbe
push
pusha
repnz
xor
mov
push
adc
xchg
mov
repnz
call
jno
bound
cmp
mov
jmp
mov
push
call
sub
stos
sarl
outsb
mov
daa
jmp
sti
and
xchg
int
push
scas
incl
sub
cld
daa
sbb
test
test
je
aaa
adc
mov
lcall
rcrb
mov
decl
and
out
jp
sub
or
pushl
mov
push
js
inc
lcall
push
adcb
push
push
lcall
xchg
push
ss
mov
lods
nop
movsl
pop
add
mov
sbbl
ficomps
xlat
test
out
out
repnz
aas
pop
sbb
cmp
cli
and
mov
in
negb
push
mov
lods
pop
jg
xchg
dec
cwtl
adc
mov
fs
and
cli
call
in
xchg
push
test
rol
xor
jns
push
xchg
fidivrl
xchg
xor
aaa
ret
mov
dec
sub
loop
int3
popf
cmp
lock
dec
lds
jge
cltd
loopne
cs
arpl
fmull
ud0
call
mov
and
inc
rorl
or
jns
loop
xchg
pop
mov
cli
lcall
jmp
xchg
lds
inc
sbbl
mov
mov
and
pushl
in
js
shrb
mov
movsb
xchg
cmp
pop
pop
and
push
mov
ret
test
mov
mov
sub
pop
jg
sti
bound
pop
mov
lret
shlb
popf
pop
test
pop
call
cmpsl
into
pop
repz
clc
dec
inc
ds
pushl
xchg
test
mov
test
push
cmpsb
cmpl
add
mov
xchg
dec
xchg
push
jmp
xor
fyl2x
shll
int3
jmp
aaa
dec
mov
sbb
push
ss
sub
cmp
mov
cli
ret
shll
sub
lods
cmp
in
test
ljmp
std
jns
addr16
jb
icebp
scas
cmp
arpl
or
jmp
adc
mov
xchg
outsb
loope
jg
adc
out
ss
mov
lret
aaa
imul
cltd
mov
stos
dec
sub
fisubs
aas
sarl
jmp
ds
cmp
or
shll
je
dec
fimuls
or
in
mov
xor
out
xor
jno
loopne
std
ja
jecxz
movsb
rolb
pop
pop
aaa
sub
cld
pusha
push
fbld
mov
pop
push
lock
jmp
andb
clc
popf
xchg
clc
add
cld
test
inc
cmp
xchg
sbb
ljmp
dec
push
mov
cmp
jp
idiv
repnz
mov
jno
jp
jecxz
cmp
jle
mov
dec
aas
inc
inc
das
mov
xchg
call
sahf
cwtl
add
test
pop
clc
push
jb
icebp
aad
sub
sahf
push
mov
jmp
pop
mov
mov
xor
xor
imul
lcall
ja
fisubl
arpl
jae
insl
pop
rcl
push
lds
sbb
pushl
hlt
data16
dec
idiv
mov
inc
push
push
mov
sub
pop
jne
push
mov
xchg
lret
outsl
adc
cmpsb
hlt
loope
adc
fisubrl
ss
xchg
adc
inc
test
cld
repz
xchg
popf
leave
std
cmp
xor
jno
sarl
repnz
mov
fwait
loop
xor
jg
dec
es
stos
sub
loopne
lods
in
pop
push
push
test
shl
call
cli
pop
addr16
jne
cmp
add
cmp
or
lcall
pushl
pop
fldenv
dec
outsl
adc
jmp
xchg
xchg
ljmp
xchg
rcrb
lahf
call
iret
test
inc
mov
cmpsb
sub
shrl
pop
mov
mov
sti
scas
into
cmpsb
inc
push
adcl
lcall
ds
or
cwtl
push
shlb
pop
sbb
jg
imul
je
stos
dec
call
andl
mov
data16
lcall
pop
test
ja
ss
add
xchg
imul
mov
std
adc
leave
test
and
mov
push
cmp
dec
dec
insl
hlt
jno
sarl
dec
dec
lods
sti
jne
dec
jmp
cmpb
inc
scas
aam
inc
loope
xchg
sti
mov
inc
adc
js
dec
mov
cli
mov
pop
sbb
icebp
push
xchg
out
push
aam
shrb
inc
or
inc
repz
les
es
jmp
outsb
cmp
pop
test
inc
ds
or
icebp
iret
in
push
test
rcll
cmpsb
inc
jmp
pushl
shr
ss
sbb
mov
call
insl
pop
mov
decl
in
mov
rcrl
test
pop
dec
in
decl
shrb
jge
mov
outsl
imul
and
jg
pop
mov
pop
xor
dec
stc
jae
pop
in
fbstp
ljmp
test
jg
and
cld
sbb
mov
sarl
hlt
clc
mov
mov
sub
testl
pushf
inc
add
adc
xor
push
cmp
sti
pop
mov
cmp
enterw
pop
adc
pushf
sahf
adc
incl
and
sub
xchg
and
aas
and
xchg
push
fiaddl
js
out
mov
xor
push
mov
cld
xchg
insl
insl
sbb
cmc
push
add
xor
inc
mov
imul
mov
repnz
fnstenv
adc
in
movsb
movsb
xlat
sti
adc
decl
or
sbb
lahf
clc
hlt
sahf
jmp
xchg
jae
std
mov
sti
dec
lock
jmp
fsub
mov
decl
cld
gs
repnz
std
insb
cmp
loop
pop
mov
insb
sbb
jg
dec
mov
jbe
ja
in
lret
dec
pop
adc
push
mov
jmp
xchg
adc
mov
ret
ficompl
hlt
insl
cmc
repz
mov
mov
ret
dec
jne
mulb
or
jg
jge
add
stos
push
stos
jne
jmp
rcll
decl
in
or
xchg
cmp
mov
inc
cmp
unpcklps
pop
pushf
mov
fisttpll
pusha
sbb
push
fsubr
imul
decl
push
ret
jge
inc
out
mov
lcall
xor
test
subb
movsb
out
daa
mov
mov
decl
sbb
ja
scas
iret
cmp
add
lods
or
out
js
popa
sbb
dec
and
test
sbb
push
adc
jg
inc
ret
pop
jae
shrb
ret
jecxz
in
das
out
out
je
cmp
mov
out
pusha
push
or
mov
xchg
cltd
and
das
pop
hlt
into
add
ljmp
sbb
mov
call
dec
cmp
fsubrs
jae
ss
jb
or
lock
push
mov
sbb
unpckhps
push
decl
cmp
sbb
mov
mov
push
fmull
lcall
decl
push
jle
inc
adc
jnp
cmp
ja
sarb
pop
inc
lock
lcall
xor
push
std
add
sti
fstpt
sbb
ljmp
sahf
popfw
sbb
xlat
mov
sarb
daa
loop
push
pop
xchg
sub
xchg
jb
mov
lcall
and
frstor
out
dec
scas
jg
jne
mov
or
std
jmp
push
jae
imul
pusha
pop
add
fcomi
adc
add
sub
decl
fstps
pop
pop
pusha
mov
lock
inc
jno
arpl
ficoml
call
cmp
aad
mov
mov
mov
and
push
nop
ljmp
ljmp
mov
jle
mov
mov
add
fistpll
lcall
out
fimuls
sub
cmpsb
mov
mov
call
pop
pop
insl
rep
xor
enter
das
hlt
fucomip
shll
pop
jmpw
leave
and
test
loop
push
js
nop
or
out
jmp
or
pop
loopne
adc
push
loope
jl
add
es
out
mov
or
push
clc
mov
mov
jmp
and
mov
and
mov
into
mov
daa
pop
notb
dec
mov
and
incl
cmp
js
pushf
pop
xor
clc
das
mov
pop
pop
call
push
stc
loop
mov
icebp
shr
decl
mov
loope
insl
cs
call
push
add
cmp
cmp
insl
adc
mov
add
stos
mov
mov
shlb
fstpl
jns
std
in
nop
clc
lcall
xchg
add
jo
inc
xchg
out
fsubrp
pusha
movsl
test
call
push
jo
cmp
ss
shlb
rclb
insb
sub
add
pushl
sub
add
mulb
cmpsb
loopne
push
stos
popf
int3
mov
jg
jge
dec
nop
mov
or
js
mov
fwait
aaa
push
in
les
sub
sbb
decl
cld
lcall
ret
jb
sti
out
aad
ljmp
pop
push
pushl
test
ja
inc
xchg
jae
andl
dec
scas
ss
jg
mov
mov
xchg
jbe
clc
idivb
ret
lock
sti
sbb
sbb
sti
in
int
xchg
ficompl
dec
mov
inc
bnd
mov
les
das
jbe
scas
xlat
mov
fs
loop
fistl
notb
mov
adc
sarl
incb
jg
loop
jmp
inc
jecxz
inc
or
cmp
pusha
mov
ljmp
fiadds
insb
es
mov
xor
std
out
je
sub
xchg
repnz
dec
adc
mov
jo
fcoms
jmp
mov
and
xor
test
out
idivb
and
in
mov
sbb
cltd
mov
jmp
push
lods
xchg
and
add
clc
call
popa
add
add
pop
mov
gs
inc
pop
mov
popf
movsb
sbb
sub
mov
mov
and
shlb
fimull
push
lods
add
pop
jbe
pop
sahf
mov
jl
xchg
fcompl
adc
jb
decl
std
or
xchg
jg
sub
hlt
xchg
xchg
jl
sub
ljmp
dec
and
lock
data16
jno
or
decl
subb
push
xlat
outsl
scas
mov
inc
iret
repnz
outsl
adc
imul
pushl
les
or
cmpsl
insb
imul
push
dec
iret
insb
xchg
mov
stos
clc
jb
out
push
xchg
ret
jnp
loop
imull
xchg
dec
cmpsb
popa
call
pop
and
push
pop
inc
sub
adc
jno
pushf
cmpsl
xchg
jne
cmp
xchg
jmp
sbbl
out
cwtl
pusha
push
xor
pop
and
lcall
cld
adc
pop
dec
dec
enter
loope
and
cmp
lahf
decl
cmpl
fildl
cld
leave
cmp
push
test
add
mov
mov
incl
lahf
test
aas
mov
pop
sub
and
out
jmp
pusha
ja
jo
ret
addl
inc
xchg
shll
dec
or
xor
test
dec
aam
sahf
test
jb
pushf
fdivr
sbb
fcmovnb
inc
hlt
call
cld
pushl
flds
or
popa
push
arpl
fwait
pop
mov
lcall
nop
call
lret
cmpsl
outsl
je
out
outsl
inc
xchg
stos
inc
jp
cwtl
subb
sar
call
jae
ljmp
push
shlb
mov
push
mov
inc
inc
cmc
adc
jmp
lret
sbb
inc
xor
aas
scas
cmc
ljmp
movsl
mov
jle
jg
test
paddd
push
adc
xchg
push
mov
mov
scas
jl
mov
movzwl
jecxz
jmp
gs
sub
sub
subb
call
push
dec
int
loop
push
shlb
sub
in
xor
out
dec
mov
fstl
and
sbb
pop
sbb
popf
push
cltd
fistpl
xchg
mov
push
stos
outsb
jae
mov
push
xchg
xor
pushl
push
int3
inc
add
or
and
cmp
pop
addr16
lds
add
cld
es
sti
sbb
xor
fs
xchg
add
mov
adc
aaa
pop
das
insl
lret
cli
mov
cmp
jl
cmpl
incl
jg
push
push
pushf
sbb
jge
test
addl
int
and
call
mov
jg
inc
jno
add
sub
call
pop
jmp
and
fwait
cmc
lahf
int
andl
pop
adc
imul
decl
leave
lret
ja
loopne
inc
push
inc
dec
sbb
fidivs
pop
das
insb
ljmp
mov
movsb
push
xor
lods
push
xor
inc
rolb
mov
nop
mov
cmpb
ret
test
cs
inc
out
pop
in
sub
mov
mov
std
push
cmp
xor
insb
cmp
mov
pushf
cmpsb
decl
call
jae
push
in
aam
mov
jo
in
jno
test
xchg
imulb
clc
jg
mov
adc
inc
je
test
aam
add
outsb
jmp
in
sti
test
and
jle
stos
out
das
dec
pop
es
es
inc
out
jg
mov
inc
inc
mov
jmp
pushf
xor
xchg
incb
clc
mov
xchg
adc
inc
jg
outsl
adc
mov
lods
dec
movsl
inc
xchg
js
add
mov
into
loop
cmc
incl
inc
stos
mov
shlb
adc
clc
ljmp
inc
nop
xchg
insb
shlb
mov
jl
stc
fwait
icebp
xchg
push
incl
rcr
jp
lds
arpl
jb
sahf
pop
sub
pop
xor
and
call
daa
pushf
loop
push
test
pushf
subb
xchg
daa
test
push
hlt
and
push
jle
mov
xchg
jg
into
ss
out
nop
jmp
call
cmp
std
orb
into
cld
mov
out
lods
dec
mov
mov
or
call
insl
sub
xchg
push
jge
or
pop
call
and
loop
stos
test
sbb
jno
push
aaa
xchg
xchg
in
cld
jb
pushf
inc
jg
xchg
push
mov
pop
pop
pop
mov
test
lcall
outsb
lcall
fadd
test
ret
testl
icebp
mov
arpl
sbb
sbb
sbb
pop
clc
lods
loop
insl
std
aam
sub
push
sub
das
cld
popa
dec
daa
cmc
ret
outsb
stc
and
mov
scas
mov
jmp
scas
inc
add
inc
push
pop
lahf
mov
pop
popf
jge
pusha
cli
xor
roll
icebp
push
or
add
adc
adc
jmp
bound
mov
add
je
inc
jg
fildll
jno
in
mov
sub
cwtl
insl
loop
add
loopne
fidivs
mov
mov
lss
pop
inc
ficoml
fdivl
imul
repz
int
mov
dec
xchg
ljmp
lea
and
insb
mov
inc
pop
in
incl
pop
or
cli
sub
shl
push
dec
es
shrb
adcb
movsb
fucomip
loop
jns
andl
cmpsb
pop
out
scas
push
std
adc
inc
fdivl
sbb
addr16
dec
sti
and
or
popa
jecxz
mov
inc
frstpm(287
push
nop
or
aam
decl
fistpll
sub
mov
enter
clc
lahf
jae
lcall
stos
incl
sub
fsts
cmp
lret
jb
outsb
pop
loope
cmp
das
icebp
xor
es
and
pop
loopne
jmp
aad
loop
data16
or
incl
test
or
insl
in
push
push
fadd
movsl
aas
arpl
inc
pop
repnz
imulb
ljmp
or
pop
and
pop
xor
xchg
fistps
int
and
getsec
mov
decl
push
push
int3
jbe
push
popl
ds
repnz
pop
inc
mov
xor
adc
gs
mov
out
pop
shr
sub
roll
icebp
inc
fwait
dec
mov
or
incl
jp
mov
add
cltd
inc
push
and
xchg
ljmp
dec
shufps
xchg
test
mov
in
test
xchg
lcall
dec
sti
iret
pusha
sbb
pop
fists
shll
or
mov
cmpsb
dec
movsl
fdivrs
xor
retw
mov
mov
ss
mov
jnp
jg
jmp
in
jp
add
sub
mov
adc
push
dec
push
mov
pop
or
in
movsl
imul
mov
addr16
shl
mov
mov
out
gs
stos
pop
cwtl
push
add
push
jge
mov
pop
sbb
jns
aaa
incl
jl
add
or
jl
bound
push
mov
std
adc
fucomip
sbb
cmp
out
mov
into
cmpsl
adc
dec
dec
inc
hlt
ljmp
adc
lock
sub
mov
cwtl
mov
jne
pop
pop
lods
pushl
push
dec
xchg
ljmp
push
or
jecxz
jg
jmp
leave
ret
sub
aas
mov
dec
mov
cs
adc
stc
push
ss
decl
lret
bound
mov
mov
mov
out
xor
test
xchg
test
lods
mov
loop
test
pushf
pushf
ljmp
add
cli
das
lret
cmpsb
ljmp
and
xor
cmp
mov
cmp
gs
fistpll
in
jb,pt
pop
jle
cmp
ljmp
movsb
push
cmp
jg
loope
sbb
and
xchg
lcall
jg
mov
sub
inc
daa
fnsave
repnz
ret
xchg
es
cmpsl
lret
mov
in
pop
gs
dec
sahf
mov
sbb
ljmp
pop
mov
lock
jns
stos
lds
pop
mov
cli
repz
jg
es
mov
adc
fs
rolb
xor
cmp
aas
or
jo
or
mov
mov
push
pop
imul
not
out
loope
adc
sub
hlt
pushf
xchg
push
mov
lahf
ds
stc
mov
adc
popf
hlt
adc
scas
pop
enter
outsl
std
ficompl
inc
sub
lock
fcmovbe
int3
iret
inc
adc
push
movsb
aam
xchg
call
ljmp
mov
jbe
mov
or
aas
jp
shlb
mov
test
cmp
mov
jo
jmp
jge
movsb
fcoml
lcall
pop
mov
rcrl
xchg
push
pushf
gs
enter
dec
decl
xlat
imul
or
xchg
stos
mov
push
or
call
ret
int
out
pop
jg
js
insb
clc
aad
aaa
fs
lods
cmp
pop
and
xchg
lea
int
ds
xchg
mov
xchg
push
xchg
xchg
out
mov
cmp
ficompl
sub
and
lcall
dec
lahf
in
and
xlat
mov
out
mov
pop
iret
lods
cmp
jg
mov
into
mov
sub
push
das
repz
xorl
leave
sbb
outsl
daa
mov
xchg
iret
and
push
in
or
movsl
sbb
add
push
shlb
outsb
push
mov
inc
jno
es
sbb
jb
lods
xchg
lods
scas
leave
mov
jmp
mov
jecxz
lcall
loop
sbb
mov
adc
mov
cmpl
incl
xchg
jns
stc
cmp
inc
sub
xchg
imul
das
ja
jg
or
push
cs
jle
jmp
imulb
pop
pop
push
das
leave
cmc
adc
out
fiadds
inc
repnz
jns
pushl
mov
jne
in
mov
pop
fcomps
sti
add
incl
out
and
mov
jno
fiaddl
dec
cmpsb
adc
scas
jns
rorl
aad
pushf
xor
decl
fiadds
jmp
lock
ret
and
lcall
adc
loopne
fucomip
das
aad
mov
clc
pop
mov
push
cmp
and
call
ss
mov
sub
sub
sub
stos
jo
test
pushl
xlat
fldcw
das
xor
mov
loope
pusha
and
sahf
pop
and
sbb
jp
clc
ljmp
hlt
push
push
in
in
jb
lea
and
xchg
pop
mov
aaa
ja
push
xchg
sub
or
lretw
push
nop
scas
dec
pmulhuw
sbbb
xchg
fnstsw
jg
ss
out
or
sub
push
lock
pop
pop
clc
movsl
aam
movsl
mov
out
movsl
lret
xchg
pusha
jnp
mov
push
ljmp
lods
pop
pusha
dec
inc
jl
sbb
mov
xor
adc
loope
out
adc
add
xlat
hlt
adc
decl
sbb
mov
inc
and
int3
cmp
fisubrs
inc
jmp
popl
cmpsb
je
mov
cs
push
sti
add
popf
or
jp
xchg
mov
dec
hlt
ficoms
jo
push
pop
pop
adc
cli
or
dec
push
push
mov
stos
jne
rcl
gs
sub
xchg
mov
xchg
out
outsl
lock
mov
xlat
movsl
lods
dec
add
adc
inc
ficoml
jnp
outsl
hlt
incl
and
cmp
push
lds
fcmovb
mov
movsl
sub
outsl
cmc
pushf
sub
cmp
cs
iret
movsb
mov
push
fnsetpm(287
jae
ds
cwtl
inc
stos
jp
test
bound
lcall
fnstcw
lahf
pop
aas
je
inc
pushl
gs
add
aam
pushf
js
or
and
jl
ja
fsts
loop
cmp
jbe
add
rolb
xchg
lcall
fstpl
fistpl
fimuls
mov
add
daa
xor
push
pop
cld
call
cmpsb
into
decl
pop
mov
mov
adc
stos
test
mov
or
lahf
xchg
jp
jg
jnp
push
cld
and
jg
incl
lds
pop
push
or
xchg
adc
xchg
mov
sbb
pcmpgtb
push
add
das
mov
push
push
mov
jg
xchg
stos
sbb
daa
movsl
call
mov
in
jnp
test
incl
sbb
jl
jb
sbb
or
adc
or
push
fnstsw
pushl
inc
jmp
mov
pop
cmp
xor
mov
mov
push
jg
mov
addb
sub
or
push
jg
lcall
fcompl
lods
stos
movsl
sbb
mov
notl
in
dec
inc
call
sub
jle
pop
dec
inc
push
rolb
adcb
outsb
and
fwait
pop
cld
mov
sbb
mov
cwtl
inc
inc
sbb
jb
leave
movsl
cltd
decl
lods
cmp
jg
mov
out
adc
mov
clc
ljmp
dec
dec
rcrl
add
loopne
aad
push
adc
ret
loop
loope
mov
dec
nop
jecxz
rcll
push
push
stc
dec
sub
pop
loop
dec
xor
push
xor
rcr
rcrb
ljmp
inc
sub
fs
push
arpl
test
out
xchg
xchg
fisubs
outsl
icebp
pushl
dec
xlat
mov
jl
mov
es
push
xchg
inc
and
jne
call
clc
imul
push
lret
jns
pop
push
lods
shlb
mov
ljmp
dec
ds
lds
stos
out
in
imul
sub
decl
inc
clc
addr16
mov
sub
add
mov
stc
mov
inc
into
jg
lcall
xor
mov
movsb
lea
imulb
das
inc
std
or
cld
ret
pop
cmc
repz
xchg
pushl
cli
das
ss
lea
sahf
add
xchg
push
lret
add
adc
and
xor
jo
out
scas
clc
xor
lcall
jmp
icebp
dec
decb
xor
outsl
lock
mov
pusha
outsl
pop
enter
iret
dec
out
push
ljmp
ds
fnop
cli
add
cld
hlt
fcmovnu
aad
dec
std
test
pop
fdivrs
out
dec
pop
aad
dec
push
xchg
jle
adc
popa
dec
mov
mov
stos
or
xchg
fwait
xor
dec
inc
loopew
loopne
push
stos
mov
push
imull
mov
lret
sub
aaa
test
scas
sub
ds
jnp
jmp
je
cmp
popf
mov
add
jmp
jg
test
mov
mov
push
fsubrs
call
sbb
cmp
mov
mov
das
cmp
les
out
sub
and
out
push
jg
call
dec
dec
and
aam
inc
rcr
orl
pushl
add
sub
adc
fisttpll
sbb
ljmp
push
sbb
add
sti
jb
and
inc
in
scas
inc
stc
js
bound
cltd
push
es
call
fwait
jg
pop
push
sub
push
fsubl
daa
stos
in
gs
ljmp
leave
xor
movsl
jg
sbb
jno
mov
mov
jnp
inc
decl
jb
cs
nop
cmpsl
jp
add
incl
mov
push
inc
adc
sub
into
jb
jmp
std
ljmp
xchg
add
sub
movsb
or
arpl
and
idiv
lcall
ret
mov
ret
inc
push
mov
int
enter
pop
add
pushl
push
adc
in
inc
mov
out
mov
outsb
inc
cmp
jmp
xchg
xchg
mov
ds
push
mov
jg
or
ss
and
inc
fldt
pop
mov
ljmp
mov
cli
add
lea
lret
push
insb
jns
or
lcall
inc
mov
fadds
fstpl
stos
adc
call
repnz
fisubs
int3
add
hlt
mov
insb
xchg
jb
jb
hlt
popa
aaa
into
xchg
jg
scas
xor
dec
lock
shlb
je
sahf
lds
fstl
lcall
jmp
add
or
std
or
jg
call
sbb
das
lock
popa
jno
jg
popf
xchg
jo
sub
and
mov
jne
das
lock
jmp
xchg
mov
imul
mov
popf
cmc
push
jns
push
outsl
cld
mov
lds
and
pop
mov
pop
sar
pushl
mov
dec
shll
sub
push
nop
aaa
or
dec
cltd
bound
pop
mov
aas
pop
testb
rorb
call
pushl
cmp
test
sarl
pop
fidivrs
stos
mov
movhps
or
mov
mov
adc
ja
pop
je
jns
popa
pop
decl
jmp
push
sbb
out
xchg
xchg
and
cmpsl
pop
pop
popa
cmp
add
xlat
sbb
test
xor
test
dec
push
xor
punpckhdq
lcall
fimull
cmpsl
xor
lods
pop
dec
shrd
mov
cltd
add
aas
xchg
fdivs
aaa
clc
mov
xchg
dec
xchg
push
sti
push
dec
xchg
nop
fninit
xchg
fucomi
cwtd
scas
xor
mov
fsubr
push
cmp
rorb
dec
mov
jmp
mov
loope
decl
lods
imul
icebp
and
cmp
cmp
xchg
in
push
xor
aaa
cli
mov
jecxz
xchg
pop
verr
repnz
mov
mov
sbb
xorb
and
stc
or
jns
dec
leave
xor
inc
mov
lods
xor
out
xor
sbb
rclb
pop
mov
xchg
movsl
xor
jne
call
adc
pop
jns
pop
or
jo
div
movsb
add
ljmp
mov
stos
push
mov
cmp
popl
ret
aas
movsb
cmpsb
bound
stc
jg
decl
aad
out
sbb
rcr
call
fdivrl
or
fldt
mov
pop
sub
pusha
ret
in
and
lds
clc
jnp
xor
or
dec
mov
cld
loopne
sbb
shll
fldt
bound
pop
int3
cmc
cltd
testb
cld
in
sub
test
jle
scas
pushl
js
mull
pop
mov
pop
inc
add
jmp
sub
call
lret
arpl
bound
jb
cmp
loop
nop
pop
movsl
mov
dec
and
sar
call
incl
mov
inc
popf
mov
in
mov
inc
jg
int
xchg
cli
pushl
add
test
cmpsl
dec
add
aaa
push
das
hlt
jmp
push
adc
inc
outsl
cmp
jmp
and
mov
movsb
add
mov
test
sbb
clc
daa
lea
sbbb
popa
in
test
ss
ret
adc
call
stos
cmp
pop
sub
or
orb
int
lcall
or
or
cmp
fiadds
and
iret
jne
push
in
adc
insl
add
jge
push
xor
push
sahf
or
rorb
sub
into
sbb
xor
push
sub
pop
ficoml
cld
in
scas
std
call
or
xchg
fcoml
jnp
cmc
cs
jno
or
ljmp
cmc
hlt
cmp
mov
and
std
sbb
lcall
sahf
repz
cmp
or
arpl
xor
add
xlat
int
call
clc
jmp
xchg
adc
pop
notb
dec
jmp
and
push
in
cltd
xchg
aad
or
cwtl
mov
or
movsb
inc
pop
jb
sahf
cmp
lcall
pop
and
es
bound
mov
inc
dec
cltd
mov
adc
mov
call
jle
popa
sbb
xchg
dec
hlt
aaa
insl
jle
mov
pushl
leave
sub
in
data16
cld
xchg
sbb
ljmp
sub
js
cltd
inc
cmp
push
adc
xchg
sbb
aam
sti
cmp
fcom
adc
fisubs
out
mov
adc
aad
inc
xor
dec
pop
aaa
je
lock
sbb
call
ljmp
inc
dec
mov
repnz
fsub
xchg
loope
outsl
fistps
imul
daa
cltd
pop
loope
jns
inc
xchg
hlt
out
nop
mov
pushl
push
xor
mov
in
cmp
lahf
outsl
mov
lcall
sbb
daa
inc
mov
lods
push
imul
or
jbe
lcall
cltd
sub
pushf
andl
das
add
inc
pop
lahf
mov
mov
cmp
stos
movsl
cwtl
enter
in
fisttpl
shl
mov
sarb
loope
mov
jae
cltd
hlt
scas
mov
push
lock
fstl
loope
push
popf
mov
fwait
inc
pop
sti
loopne
das
cli
inc
mov
jl
or
pop
lahf
mov
arpl
push
cmp
mov
mov
imul
icebp
pop
decl
cld
in
xchg
clc
xchg
ljmp
inc
xchg
iret
push
jecxz
pop
les
test
std
je
movsb
or
pop
sub
das
ljmp
sbb
cmp
rcll
jle
sahf
sbb
mov
or
jmp
decb
inc
mov
pushl
pop
mov
mov
daa
aas
and
addr16
sub
inc
cmp
std
loope
push
cs
mov
or
adc
rorl
and
out
or
xor
jg
jg
sbb
push
mov
cmp
mov
pushl
cmp
dec
ret
mov
mov
and
icebp
inc
leave
stos
pop
out
cltd
out
leave
dec
mov
faddl
xor
sub
filds
mov
mov
testb
outsl
icebp
ljmp
cwtl
lahf
xchg
xchg
sbb
jecxz
das
pop
jbe
push
cltd
jecxz
xchg
xchg
mov
mov
cli
pop
aam
scas
jmp
bnd
mov
sub
scas
ljmp
cmpsl
or
push
addl
sub
incl
fists
jge
loopne
cwtl
aam
or
lahf
popa
decl
mov
and
xlat
mov
out
mov
sti
jne
arpl
notl
cli
lcall
push
fmull
and
and
int
ret
lret
xchg
lods
pop
cld
incl
inc
cli
sbb
in
inc
cmp
sbbl
jae
mov
rcll
jp
jmp
scas
push
sbb
add
pop
mov
inc
jno
lcall
fistpll
inc
push
cli
loope
je
jg
pusha
xchg
push
inc
mov
mov
jg
divl
and
cmp
sar
or
mov
xchg
int3
dec
repz
les
pusha
sti
add
adc
outsl
cmp
movsl
sub
adc
pushl
cli
lcall
dec
enter
mov
test
out
mov
pop
push
push
lods
sub
clc
ja
popf
push
rcrb
inc
cmp
jmp
pop
jge
mov
jl
cltd
inc
jnp
mov
cmp
addl
mov
jmp
fisttpll
sbb
pushf
pop
push
aaa
test
inc
fdivr
pushl
rcrl
and
icebp
push
adc
push
bound
sti
or
mov
mov
mov
mov
jg
outsb
pop
xchg
jl
or
roll
jbe
push
sbb
inc
xlat
addr16
es
shlb
cmp
sub
mov
xor
outsl
hlt
pop
sbb
pop
jae
ss
aaa
sbb
mov
push
mov
clc
xor
sahf
or
aaa
jge
push
sahf
rol
cld
pushl
js
data16
dec
div
mov
sbb
fidivs
roll
cld
ret
fnstenv
int3
mov
call
lds
cwtl
sbb
push
and
push
dec
lret
imulb
mov
movsl
incb
pop
push
int
mov
push
ljmp
outsb
addr16
jmp
mov
je
cmpsb
sbb
sub
pushf
imul
mov
pushl
mov
cmp
push
mov
mov
loopne
and
loop
inc
call
out
sbb
adc
xor
sub
stos
pop
mov
pop
sar
fnstsw
adc
lret
and
cld
xor
sbb
fbld
addr16
xchg
push
icebp
test
fdivs
cli
mulb
mov
incl
mov
mov
sahf
cld
xchg
mov
pop
fldl
cmp
xchg
pop
adc
add
push
mov
inc
mov
add
out
dec
aaa
call
push
cmpl
enter
or
cmpsl
add
jle
ret
or
jmp
icebp
inc
scas
iret
das
xor
adc
gs
ficoml
stos
mov
lods
inc
lds
icebp
cmpsb
cmpsl
call
gs
sbb
sub
jns
push
dec
dec
push
cs
roll
xchg
jnp
push
or
jno
scas
ljmp
popf
pop
popa
push
cmp
sti
jg
jmp
cmp
push
mov
addr16
movsb
pop
pop
and
lea
and
jp
sub
hlt
addl
mov
jp
jg
push
loop
mov
sub
pop
repnz
decl
mov
stos
loopne
mov
mov
or
push
sbbl
pop
add
out
daa
adc
sbb
mov
lds
mov
lcall
mov
cs
fnstsw
inc
in
mov
push
int
sbb
repz
xchg
xor
pop
mov
loop,pn
fisubrl
out
pop
adc
in
rclb
push
xor
cmp
and
addr16
dec
and
popf
adc
sbb
in
arpl
push
out
dec
adc
ds
test
stc
movsl
ss
rcrl
int3
fwait
pushl
out
mov
mov
sub
sbb
adc
mov
inc
jae
xor
loop
xchg
outsb
int3
xchg
cmc
popf
jg
cs
dec
mov
xorb
incb
mov
js
jmp
dec
mov
xchg
fisubs
xchg
out
push
bound
jmp
cmp
in
testb
xor
ficomps
stos
mov
cwtl
loopne
or
sub
loope
mov
mov
in
pop
and
mov
pop
mov
sbb
mov
cld
add
inc
lcall
mov
cwtl
pop
leave
sub
scas
iret
mov
mov
pop
and
jg
xchg
int3
fcoml
outsb
fistps
xor
decl
jmp
cmp
repnz
bound
dec
lret
sub
sbb
leave
cmp
xlat
jl
dec
testb
outsl
jb
mov
adc
jg
cmc
out
push
mov
mov
dec
hlt
gs
mov
out
jns
decl
mov
lea
and
subb
add
xchg
das
sub
fists
jg
clc
inc
test
enter
dec
nop
mov
xchg
xor
and
lcall
stc
dec
es
sub
add
in
mov
stc
inc
inc
int3
dec
adc
inc
in
imul
inc
out
dec
addl
stos
cli
dec
test
xor
ja
test
incl
or
out
push
leave
js
pop
xchg
repz
cmp
loop
imul
jg
cli
jo
mov
les
mov
inc
repz
add
jge
aam
int
cmp
xorb
adc
fimuls
mov
and
mov
jmp
adc
popf
arpl
movsb
sub
fnstsw
jg
adc
sahf
negb
movsb
xor
push
pusha
and
insl
mov
sbb
pop
mov
xchg
push
mov
and
hlt
icebp
inc
jae
pop
fsub
fidivl
cmp
lea
jae
in
testl
lret
in
cli
stos
or
sti
mov
fbld
outsb
or
sub
dec
inc
xchg
stos
mov
mov
jg
movsb
or
or
into
push
dec
push
mov
push
inc
shl
adc
push
xchg
loope
cmpsl
pop
or
mov
jbe
cmp
mov
scas
and
jns
sahf
in
and
vshufps
jbe
and
add
shlb
mov
mov
inc
mov
ds
mov
or
movsb
in
cltd
add
fs
dec
sbb
fistpl
out
ret
out
jle
jp
popf
cmp
cli
push
xor
call
and
xor
xadd
mov
lods
jmp
jmp
inc
and
xlat
jns
ja
ds
inc
xchg
lcall
jg
mov
fs
fistpll
popa
cld
jp
ja
icebp
cmp
add
aad
inc
loope
jg
mov
mov
mov
pop
cwtl
pop
jl
enter
push
aad
lcall
jle
data16
pusha
call
scas
popf
add
fdivs
outsl
inc
push
cmp
sbbb
or
dec
pushf
cmp
in
mov
int
decl
cld
inc
xor
adcb
sets
adc
sbb
pop
icebp
call
add
push
nop
jbe
shlb
pop
rcll
dec
pop
mov
ss
pusha
scas
out
notb
or
in
mov
outsl
icebp
sarl
cltd
std
sub
mov
mov
incb
mov
aaa
js
fdivrl
mov
ja
stos
cld
imul
daa
or
aam
dec
mov
sbb
int
mov
xor
call
popa
pop
sbb
shlb
in
out
adc
out
aaa
mov
fildl
add
stos
outsl
lock
jmp
test
add
pop
mov
call
lock
pushl
scas
jns
popa
pop
daa
jno
enter
mov
xor
ljmp
lods
popf
loopne
cmp
sbb
pushf
lcall
lcall
rorl
push
std
decl
stos
out
cmp
fistpll
movsb
data16
mov
and
mov
push
jge
out
arpl
hlt
nop
cmp
aas
xor
movsl
and
setns
inc
into
es
mov
incl
add
jae
mov
cmp
xor
imul
in
inc
jae
or
xchg
popa
and
pop
cmpsb
jno
fistpll
ss
call
lahf
sbb
clc
leave
push
lahf
jne
mov
clc
dec
ret
incl
sbb
pop
sbb
push
mov
lods
andl
pop
cmpsb
sub
xchg
decl
jo
mov
mov
push
sbb
loope
push
andl
imul
mov
outsl
lock
out
and
testb
outsl
mov
push
scas
js
ljmp
mov
lret
pop
dec
stc
cld
push
stos
cmp
cmp
insb
std
pop
in
cmc
pop
dec
fs
push
fisttpl
ljmp
xchg
je
sbb
cmp
xor
push
cs
jb
pusha
or
push
stos
aas
sar
lcall
test
xchg
mov
mov
lret
inc
inc
dec
out
jne
push
cld
mov
jbe
push
jmp
popf
jge
mov
adc
in
fucom
mov
dec
sti
xchg
fsubs
jle
in
cmovs
xor
cmp
pop
scas
push
cmp
movsl
dec
ja
arpl
ficompl
xchg
fs
decl
mov
mov
push
or
pop
add
xchg
and
cmc
push
out
adc
ja
andb
add
nop
movsb
test
or
fnsave
in
pop
jb
loope
icebp
lcall
dec
xchg
jnp
inc
ja
ja
icebp
mov
out
add
sub
jl
sub
cmp
std
lds
dec
cmc
cmp
aam
jns
mov
sbb
xchg
push
call
mov
lcall
inc
bound
ljmp
loope
or
mov
inc
int
addl
shlb
jno
daa
lahf
and
cld
pushl
cli
jb
push
lret
mov
mov
arpl
mov
imul
leave
xchg
sahf
pop
and
or
cmp
stos
roll
inc
test
add
repz
loop
ss
fabs
loope
hlt
pop
pop
and
gs
mov
ss
sar
mov
sub
jno
fdivl
in
xor
addl
xchg
mov
movsl
cli
add
sti
sbb
jo
loop
cmp
or
mov
and
sub
pusha
add
mov
jmp
mov
fdivrs
mov
or
scas
inc
cltd
repz
xchg
cmp
idivb
incl
rcr
sub
test
fistps
add
inc
aaa
clc
jg
mov
and
psrlq
push
xor
sar
call
out
sbb
push
and
pop
test
inc
cltd
xor
ljmp
dec
addb
call
inc
insl
fstps
mov
stos
test
jg
call
in
pop
fwait
out
incb
aas
in
mov
push
das
mov
xor
mov
cmp
orl
insb
es
and
in
fisubrl
les
cltd
xor
sti
jbe
adc
or
rclb
jnp
xchg
addb
jne
incl
sbb
xchg
mov
adc
cmp
fdivs
jg
stos
aam
ds
test
sub
lds
clc
cli
jg
push
cmpsl
mov
daa
xchg
shrl
xchg
push
push
mov
and
and
movsl
xchg
sub
and
and
inc
lcall
fistl
fwait
inc
out
cld
dec
xchg
int
icebp
mov
cli
daa
test
icebp
jno
sub
stos
xor
test
lcall
push
icebp
iret
in
xchg
leave
dec
aas
ffreep
ljmp
fstl
xchg
clc
inc
push
icebp
jns
fsubrs
and
mov
fimuls
pop
adcl
push
mov
mov
fstpl
dec
bound
dec
leave
mov
out
stos
jle
into
repz
push
mov
add
jmp
mov
test
packuswb
incl
leave
out
mov
outsl
jbe
incl
jle
dec
mov
jno
push
sbb
lock
incl
cmp
or
pop
sahf
xchg
add
mov
sbb
inc
repz
fbld
sub
jl
jg
jmp
push
mov
push
jl
idivl
mov
enter
mov
loopne
pushl
arpl
inc
cmp
push
jno
inc
nop
jmp
mov
loop
inc
mov
xchg
jp
dec
xchg
imul
ret
cwtl
xchg
or
cmc
leave
in
clc
mov
sbb
roll
jns
je
cmc
mov
int
std
mov
add
add
imul
push
cld
lcall
std
jae
dec
sub
dec
sahf
cmpsl
dec
outsb
pop
icebp
mov
mov
sar
icebp
push
jae
mov
in
stos
mov
stc
push
jo
in
sbb
int3
std
pop
push
or
sub
adc
in
sub
movsb
aad
mov
jb
pop
inc
cmp
mov
loopne
mov
inc
cli
pop
push
sbb
jmp
nop
pop
cmp
adc
add
mov
xor
or
clc
jp
inc
and
add
cmc
mov
add
das
mov
hlt
dec
nop
in
xchg
sub
add
sbb
in
pop
cmp
mov
adc
repnz
cmp
imul
add
xor
inc
jb
in
or
pop
incl
add
daa
imul
ljmp
pop
inc
icebp
enter
adc
sub
cmpsb
js
lcall
push
dec
lds
stos
dec
les
add
dec
xchg
aad
or
and
call
pushl
or
jno
sbb
mov
or
pop
xchg
lcall
mov
jo
add
cmp
dec
cld
in
mov
jno
das
adc
cmc
push
mov
imul
xchg
adc
in
movsb
push
jbe
mov
add
lahf
test
push
fadds
mov
jg
call
stc
jl
sub
js
sbb
sub
andl
sbb
icebp
and
aam
mov
push
loopne
cld
xor
xchg
inc
out
sbb
xchg
decl
std
lcall
fldenv
ljmp
aaa
mov
popf
insb
pushf
pop
out
incl
rcll
repz
movsl
das
jae
test
mov
push
dec
movsl
out
into
incl
test
xor
jg
pop
add
push
dec
jae
aam
cmp
push
pop
aaa
into
and
adc
add
push
roll
call
into
hlt
xchg
mov
out
and
cli
or
mov
imul
cmp
dec
or
jbe
imul
js
cmc
test
xchg
loop
lcall
push
inc
call
outsb
test
pushw
sbb
adc
fbstp
pushf
rolb
fsts
xchg
mov
fidivs
push
aas
lret
xor
incl
jp
in
ficoms
mov
xchg
push
insl
xchg
lcall
xchg
cmp
gs
movsb
shrb
cmp
repz
cmp
sbb
xor
inc
jns
pop
xchg
cs
scas
pop
jecxz
mov
push
mov
sbb
or
mov
xor
inc
sbb
mov
mov
push
sar
repnz
jecxz
mov
je
scas
xchg
test
aaa
ljmp
hlt
jnp
call
stos
daa
les
sbb
sbb
nop
push
push
test
push
mov
ljmp
leave
cmp
test
aaa
loope
pop
mov
sar
ljmp
sbb
pop
pusha
push
pop
xchg
adc
loop
sbb
mov
adc
insb
jg
pop
jmp
dec
mov
std
es
push
fisubs
push
fidivrl
incl
pushl
xor
mov
fdivrl
andl
ljmp
lahf
lcall
jbe
cmp
xor
cld
jne
daa
int
pop
mov
fdivs
decl
inc
mov
std
xchg
mov
into
xchg
sbb
jp
cltd
xor
inc
lock
dec
int3
inc
or
pusha
mov
outsb
xchg
adc
mov
add
jae
jl
mov
ret
mov
lcall
stos
add
xchg
leave
mov
loope
inc
movsb
sbbl
mov
lcall
cmp
lds
ljmp
out
inc
push
sub
mov
sub
xor
inc
add
xor
lahf
mov
inc
pop
popa
cli
lahf
mov
lahf
aad
mov
les
out
shrl
mov
pop
ljmp
or
jmp
arpl
in
inc
clc
shlb
and
add
ljmp
jne
xlat
test
xor
jl
push
pop
xlat
add
or
das
cld
incl
aad
clc
bound
jb
mov
cli
xchg
out
pop
mov
mov
dec
push
pop
dec
adc
or
aad
dec
aaa
ja
xchg
jae
std
ljmp
dec
movsb
les
push
mov
mov
je
fidivs
movsb
stos
loop
hlt
decl
ret
and
ljmp
and
cltd
sub
or
ljmp
jle
jmp
and
lock
adc
dec
stos
add
jns
lcall
cmp
and
mov
cmp
popf
lea
repnz
insl
lret
mov
push
mov
adc
mov
push
enter
and
mov
mov
cmpb
outsl
cmpsb
pop
fidivrl
sub
cltd
idiv
sub
inc
imul
cld
or
dec
mov
xorb
lock
ljmp
push
cmp
sub
fmuls
xor
out
sub
in
jns
adc
aaa
cli
mov
aad
ljmp
xchg
and
push
inc
pop
pop
call
jmp
test
stos
sub
or
iret
xor
add
call
fldcw
sbb
jp
es
movsb
pop
fmull
dec
out
mov
lea
arpl
and
sub
mov
shll
aaa
inc
das
xchg
inc
ja
push
sti
dec
dec
dec
outsb
lret
shrb
pushl
sahf
lahf
data16
and
lahf
shl
cmpsl
filds
or
pop
stos
mov
pop
and
test
pop
cwtl
mov
or
packssdw
and
lcall
jmp
pop
mov
rcrb
icebp
sub
cmp
adc
pushl
adc
jg
loope
add
xor
inc
inc
mov
call
jg
loope
xor
es
daa
jns
pusha
mov
and
call
decl
std
cltd
mov
lods
outsb
inc
iret
push
sub
outsb
jno
push
and
sbb
push
xchg
add
sub
fisubs
jmp
push
rolb
jbe
pop
stos
dec
sahf
fiaddl
das
and
jmp
in
and
orl
bound
jns
pop
mov
sbb
cmp
ljmp
xchg
sub
shll
jge
jp
test
aas
lea
lcall
xorl
loope
pop
dec
xor
lea
mov
sbb
lret
lods
and
ds
and
xchg
insl
or
jg
divb
push
mov
push
mov
pop
mov
push
mov
jg
sub
popa
xor
fstps
xlat
cmc
jbe
xchg
or
jg
mov
clc
lds
pop
shlb
imul
jge
cmp
fstpl
mov
call
sub
mov
leave
pusha
in
not
scas
jg
mov
popa
jle
lods
xor
pushl
dec
sbb
sbb
pop
into
adc
add
jnp
inc
aas
xchg
push
adc
inc
mov
or
incl
imul
fistl
cltd
add
sub
test
andl
sub
add
std
outsl
lock
scas
mov
mov
aas
jge
inc
rcll
lods
push
fsubr
sub
shll
cmp
stos
pop
push
mov
data16
mov
pop
ljmp
jg
lods
adc
mov
pusha
jmp
rorl
mov
jno
pop
lcall
mov
jl
cmp
cli
pop
sbb
mov
cmp
int3
nop
xchg
inc
lds
push
add
testl
mov
incl
xchg
rcl
xor
loope
dec
jne
mov
add
inc
jle
adc
pushl
inc
push
ret
pop
mov
jbe
and
cmp
decl
add
fisttps
lcall
push
test
movsl
pushl
daa
push
jmp
mov
fnsave
push
rolb
mov
ljmp
lock
in
enter
dec
mov
push
arpl
xor
push
add
idivb
lock
lods
jns
mov
or
int3
mov
outsb
loop
idivb
std
dec
pop
scas
push
push
ss
and
sbb
fadds
cmp
pop
enter
and
jae
lahf
cmp
jnp
mov
pop
in
idivl
pop
or
mov
aas
add
inc
pop
cld
jmp
xor
stos
pop
insb
mov
shrl
cmp
ffree
mov
call
inc
cmpsl
out
push
and
imul
fstpl
fists
jmp
mov
jp
jbe
jle
ss
hlt
lret
jecxz
cld
call
sub
dec
xlat
xchg
stos
jne
test
das
cmc
adc
inc
cmpsl
inc
ds
dec
imul
and
fildll
pop
pop
ds
stc
fisubrl
cwtl
scas
ljmp
in
scas
xchg
jle
sub
aas
push
stos
jb
or
les
sub
arpl
sbb
adc
or
mov
cli
xchg
pcmpgtd
ljmp
jno
inc
insb
dec
pop
sti
shlb
mov
pop
in
sub
jae
and
lcall
xchg
mov
ljmp
addr16
sbb
std
ret
jp
pushl
arpl
jge
out
out
pop
mov
ficoms
lods
mov
push
pop
test
xor
cmp
mov
dec
in
jl
jp
test
lahf
mov
xchg
insb
popf
fwait
pop
jbe
mov
push
sbb
push
mov
cmc
ljmp
fdivl
rcrb
fmul
cmp
mov
mov
or
nop
adc
lock
jg
pop
mov
cwtl
sahf
or
les
mov
add
shlb
jecxz
sbb
adc
pusha
xchg
gs
dec
inc
std
cmp
mov
xchg
outsl
cmp
mov
sub
xorl
decl
scas
jb
mov
pop
cmpsb
xchg
ret
sub
jmp
xchg
jmp
divl
xor
mov
shrb
xor
pop
bound
call
lret
ret
leave
popf
sbb
inc
pop
lret
clc
incl
adcb
xor
aaa
xor
ret
clc
clc
xchg
mov
das
inc
aam
jg
lea
xchg
jle
push
lcall
leave
into
xor
jp
xor
jmp
pop
in
loopne
pop
sbb
xor
popa
decb
jnp
fwait
adcl
fists
add
decl
cld
into
jnp
xchg
lock
and
push
hlt
std
mov
adc
repz
and
adc
call
adc
sbb
sbb
pop
dec
push
pop
cltd
sbb
js
jo
xor
in
sub
dec
fdivr
mov
int3
push
push
lcall
mov
out
sbb
mov
jmp
sbb
imul
decl
ffree
in
mov
ja
fadd
movsl
add
or
insb
or
insl
ljmp
sbb
sti
jl
mov
push
cwtl
add
and
shlb
push
pushf
sub
fucomip
sub
inc
flds
dec
push
jbe
lcall
repz
push
ss
test
aas
pop
clc
adc
in
xor
scas
ljmp
jecxz
in
hlt
loope
push
inc
ficoms
test
aas
jo
mov
mov
pop
pop
add
xor
je
ret
xlat
lods
outsb
cmp
adc
jns
cmp
adcl
pusha
adc
test
push
xchg
push
push
in
push
jae
or
pop
nop
adc
jg
jno
nop
adc
test
arpl
out
in
in
stos
mov
test
sub
mov
sbb
fyl2xp1
int3
mov
inc
lods
loopne
xchg
inc
jbe
jg
pop
add
std
push
mov
adc
lcall
decl
mov
fisubl
dec
mov
outsl
test
jg
jecxz
jle
repnz
movsb
mov
and
jle
dec
or
push
aam
imull
xchg
and
aaa
push
and
mov
in
into
mov
push
cmp
jg
sti
sub
inc
add
iret
insb
pop
push
and
mulb
jg
xchg
cli
pushf
mov
push
fucomp
jmp
out
add
call
cltd
jge
jmp
bound
mov
and
iret
mov
pop
lea
das
std
inc
adc
push
subb
outsl
pop
mov
test
xor
lods
repnz
lcall
dec
lock
or
push
xor
adc
ljmp
mov
jb
mov
pop
hlt
lret
iret
mov
cltd
aad
cmpsl
outsl
push
fldl
fisttpl
mov
dec
sarl
xchg
cmp
sbb
jbe
inc
std
or
jmp
sbb
iret
movsb
sub
fucom
xor
test
adc
clc
nop
ret
mov
stc
xchg
cmpsb
test
std
aas
sahf
fadds
and
mov
fldcw
xor
push
adc
pop
mov
xor
in
inc
sahf
push
push
stos
mov
adc
inc
ret
mov
in
pop
loop
add
out
inc
pushf
adc
xor
pop
cld
mov
sub
repnz
ret
push
and
add
lahf
inc
adc
popa
xor
arpl
xchg
pop
sahf
push
push
repnz
or
sub
roll
in
das
cmc
dec
imulb
scas
test
or
mov
adc
inc
ret
pop
testl
jmp
ljmp
cli
jo
test
orl
jmp
jl
add
dec
add
test
xchg
cs
or
clc
loopne
cmp
std
lcall
dec
sbb
rcrl
or
fsts
leave
sbbl
call
or
das
test
pushf
add
ret
jg
incl
push
dec
aas
xor
mov
and
ja
int
and
leave
fcmovbe
cli
pop
test
dec
push
mov
mov
lea
sub
mov
inc
popf
cmp
fisttpl
decl
xor
int3
lea
mov
mov
pop
or
lret
std
jns
push
dec
push
mov
sbb
repz
fsub
lea
mov
loope
cmpl
ret
mov
push
fcoms
jg
cmp
sub
add
push
std
mov
mov
in
enter
iret
jb
in
pop
xlat
aam
mov
andb
jno
movsl
mov
jne
pusha
aas
pop
xor
movsb
xchg
rcll
cmp
je
push
test
cli
push
filds
pushf
adc
icebp
jp
sub
lcall
xchg
das
scas
mov
ret
hlt
pop
mov
pop
aam
ljmp
fwait
pop
sbb
mov
sub
add
sbb
add
pusha
mov
incl
stos
jne
sub
sbb
in
stc
lret
mov
incl
xchg
test
mov
fsubrs
hlt
dec
and
add
cmp
xor
out
or
in
xor
mov
pop
xor
jl
ljmp
insb
mov
cmc
pushl
mov
push
testb
js
popf
cltd
mov
jmp
inc
cmp
ja
push
jbe
arpl
or
sbb
clc
ljmp
dec
or
and
xchg
repnz
aam
add
aas
xlat
lods
aaa
sbb
std
das
mov
xchg
push
sub
int3
pushl
fcmovu
pop
xchg
cmp
outsl
icebp
mov
inc
inc
add
jb
lds
adc
test
add
add
imul
adc
fcmovnbe
mov
in
call
or
nop
stos
mov
and
mov
lret
aaa
adc
popa
jns
jmp
jp
popf
es
pop
leave
sarl
xchg
insl
inc
in
pop
mov
cli
pushl
cmp
ja
cmp
js
xchg
adc
repz
xor
decl
mov
daa
cmp
adc
pop
mov
push
add
outsb
lret
jo
sbb
stc
pop
fndisi(8087
xor
incl
outsl
les
mov
mov
xchg
pop
sub
mov
in
push
adc
repz
or
lods
iret
mov
test
cmpsb
or
jle
pop
push
lcall
fwait
mov
sbb
sub
les
decl
jge
or
lahf
ficoms
mov
xchg
mov
mov
sub
ljmp
cmp
aad
je
dec
inc
sub
cwtl
mov
test
mov
loop
das
cld
push
jl
push
test
stc
std
lea
mov
movsb
popa
sbb
test
mov
sub
dec
mov
mov
incl
and
stc
stos
xor
sub
xor
fisttps
idiv
call
sbb
out
scas
jecxz
stc
pop
sbbl
cmpsb
jnp
pop
lcall
cli
decl
arpl
mov
and
pop
pop
das
xchg
incb
mov
aas
sarb
jg
in
faddl
aaa
mov
sbb
js
mov
imul
rclb
jp
decl
xor
sub
lods
dec
pop
mov
shl
push
xor
xchg
pop
jmp
fistpll
aas
inc
pusha
add
lret
xor
fistl
mov
cmpsb
cmpsl
push
pop
xlat
leave
jne
jmp
scas
adc
into
or
ret
jle
ds
mov
je
ret
xchg
jg
or
cmp
jecxz
outsb
mov
pop
sbb
pop
ret
mov
testb
decl
jg
test
add
loopne
xor
xchg
mov
jg
pop
lods
dec
adc
xchg
mov
and
sbb
inc
call
in
fisubrs
popa
sub
frstor
je,pn
int
repz
dec
rolb
and
or
cmp
xor
test
int
out
lock
shrb
jp
push
popf
jg
xlat
mov
push
mov
xchg
push
das
cmp
mov
enter
sbb
in
xchg
mov
incl
rorl
test
lds
out
xchg
mov
loopne
or
inc
mov
sub
clc
cmpsb
pop
mov
mov
cltd
xchg
cltd
ret
push
xchg
mov
in
push
iret
and
sbb
push
or
int3
shlb
mov
dec
mov
cwtl
bnd
push
mov
imul
call
into
sub
lds
sub
mov
and
ret
decl
add
rcll
jg
sbb
or
pushl
btr
int3
aaa
jmp
into
mov
ljmp
xchg
stos
pop
jp
xchg
cmpsl
inc
jne
int3
fidivrs
adc
push
das
jg
jp
imul
adc
or
shlb
mov
lret
xchg
or
js
and
push
cmp
ficoml
aam
aad
cli
lcall
ficoml
cmpsl
push
lds
mov
cwtl
inc
xor
pop
mov
icebp
mov
or
inc
push
ret
cltd
adc
sti
aad
xchg
sub
xor
sar
pop
jmp
pop
insl
insw
clc
popa
jecxz
loope
jne
aaa
test
ljmp
int3
dec
pop
mov
test
out
pop
fidivrl
jns
or
pushl
cli
mov
xchg
iret
inc
mov
dec
mov
sbb
jbe
mov
or
sbb
daa
popf
xlat
cld
incl
or
fsubs
lcall
lahf
adc
ljmp
jmp
leave
xor
pushf
stc
cmc
in
or
daa
scas
jp
rorl
das
icebp
ljmp
xor
outsb
push
lds
mov
lcall
pop
clc
in
xchg
adc
ss
inc
mov
ljmp
mov
cltd
mov
ret
push
sarb
stos
inc
adc
xor
jg
dec
mov
test
fsubs
jae
es
aad
orb
stos
dec
mov
cmp
aaa
out
call
inc
sub
jo
clc
out
std
les
inc
inc
add
fstps
into
fwait
push
shrb
test
decl
sub
fmul
add
cli
add
mov
sbb
shll
push
outsl
lock
push
sahf
outsb
std
mov
ret
pop
aam
xor
mov
jg
mov
xor
pop
lea
and
rcrl
lcall
xor
enter
xchg
sub
aam
xchg
and
clc
pushf
scas
call
pop
push
sbb
jmp
mov
or
mov
mov
jnp
fcmovnb
movsb
leave
fucomi
daa
add
js
push
mov
incl
clc
fwait
or
into
andb
xchg
dec
inc
in
arpl
jle
mov
daa
add
sub
shlb
and
push
hlt
sub
xchg
mov
call
xor
fs
aas
jmp
mov
jp
jge
cmp
incl
fmuls
mov
jne
jl
dec
cmp
loopne
mov
icebp
mov
mov
popa
out
out
cmpsb
int
out
out
das
pusha
dec
pop
or
pushf
loopne
pushl
sub
in
sbb
inc
filds
fbld
or
iret
mov
rcr
sbb
stos
repz
push
decl
mov
adc
popa
pop
call
test
insb
bound
stc
pushf
into
insl
stos
incl
int
das
add
dec
in
ficompl
mov
inc
fidivrs
inc
jmp
push
mov
dec
pop
push
lds
incl
incl
lea
pop
or
jl
imul
incl
std
add
outsl
mov
sahf
popa
cmc
iret
in
mov
dec
push
ljmp
and
fs
xor
cmpsb
jae
jge
pop
call
js
jg
call
adc
js
js
mov
ljmp
hlt
pop
jp
jmp
jnp
aas
stc
xchg
xor
and
jg
call
stc
call
dec
and
cmp
mov
xchg
xorl
jp
add
addb
dec
test
lret
pop
in
inc
testb
inc
push
adc
popl
test
shll
incl
mov
rolb
shrl
push
mov
call
push
leave
dec
push
inc
or
test
jecxz
iret
enter
out
add
lods
jge
xlat
sahf
and
lcall
notb
nop
jmp
adc
in
dec
xor
gs
jns
mov
push
clc
push
aad
mov
scas
jmp
xchg
adc
push
outsb
and
out
jno
hlt
adc
pushl
dec
out
aas
test
push
jl
icebp
lret
pop
or
inc
pop
iret
and
pop
aas
lret
sbb
aas
sti
imul
jecxz
pop
incb
stc
xchg
push
sub
dec
push
or
fistpll
aas
fisubl
and
jg
mov
test
mov
xchg
mov
cli
push
in
imul
cmp
test
mov
les
pop
pushl
jo
mov
maxps
mov
mov
or
inc
dec
inc
cli
dec
xchg
nop
sub
jle
pop
xor
stc
add
and
mov
add
jg
popf
fmul
jmp
enter
pusha
jmp
dec
mov
filds
loope
mov
cmpsl
scas
push
pop
jo
sub
pop
inc
hlt
sub
and
hlt
pushf
mov
xchg
push
push
jbe
or
bound
cltd
mov
pushf
mov
mov
int
js
pop
cmp
add
jmp
loopne
jge
push
cmp
mov
stos
repnz
xor
in
call
imul
mov
lods
data16
jns
sbb
xchg
push
lcall
aad
clc
mov
decl
inc
shl
add
cltd
mov
cs
xor
mov
dec
jl
rcrb
iret
inc
jg
repz
ss
or
hlt
repz
lcall
mov
mov
test
lcall
mov
dec
out
jp
dec
out
mov
pop
or
jns
imull
push
cs
out
aam
stos
sbb
test
mov
lcall
loope
mov
fstpt
cmp
lods
sbb
es
iret
and
inc
pushf
cltd
adc
mov
js
bound
jmp
ret
and
das
mov
pushl
xchg
jge
ret
lahf
and
fwait
cmpsb
and
imul
rorl
stc
cmp
add
sbb
fistpll
jl
popf
mov
mov
or
pop
mov
jge
inc
cmp
movsb
and
les
into
cmp
cmc
pushl
clc
jne
adc
lods
fnstenv
inc
sub
push
and
jg
decl
xchg
sbb
outsb
mov
out
cli
mov
mov
into
cmc
inc
outsl
cld
xchg
lcall
cs
incl
inc
adc
push
sub
push
jle
jbe
icebp
stos
mov
mov
loope
inc
push
dec
test
pop
insb
push
mov
pop
cld
std
adc
and
jbe
lods
xchg
adc
decl
call
lods
pop
mov
incb
out
fs
jg
jmp
stos
stc
mov
inc
outsb
nop
adc
mov
int
out
push
lcall
leave
xchg
or
mov
dec
mov
cmp
les
testl
or
adc
call
push
xchg
test
cmc
adc
xor
aad
pop
pusha
push
mov
sbbb
aad
xchg
in
bound
adc
pop
mov
jnp
cmpsb
out
pushf
jnp
das
push
les
shlb
mov
inc
inc
iret
xchg
call
std
in
add
inc
scas
jo
ja
ljmp
mov
jg
sbb
hlt
sbb
xchg
pop
aad
test
adc
loope
movsl
push
mov
and
adc
adc
ds
sahf
sti
or
popf
add
mov
filds
cli
lods
pop
jmp
inc
add
or
test
xchg
ja
xchg
sub
ljmp
ja
ja
cmp
pop
loopne
jno
and
xchg
jbe
and
pop
mov
lcall
mov
lcall
dec
into
push
idiv
mov
add
cmc
bound
inc
insl
repnz
nop
cwtl
ja
pop
sti
jo
loop
cmp
pop
cmp
mov
pop
aad
cmp
add
fists
jecxz
loope
dec
sahf
hlt
push
subl
inc
jnp
cli
mov
cltd
decl
popf
test
jp
mov
out
ror
adc
int
aam
push
movsl
add
daa
ror
shll
sar
push
and
or
push
dec
scas
imul
pushf
fwait
test
add
mov
mov
in
xor
fcmove
jmp
aad
nop
addr16
loop
ficomps
rcr
jg
test
inc
into
sub
lcall
inc
push
ss
test
mov
sbb
sbbb
jmp
pop
adc
sbb
and
aad
or
xor
mov
jb
mov
fs
or
in
leave
adc
cli
das
xchg
fstpl
mov
out
xchg
mov
mov
mov
adc
out
or
xlat
jge
jecxz
fsubr
lcall
psubd
cmp
mov
lcall
cld
out
mov
push
popa
cmp
mov
mov
or
test
adc
jg
call
mov
jbe
fidivrl
divb
jecxz
and
mov
fucomip
jmp
lock
in
outsl
and
sbb
sub
or
in
mov
pop
call
cmc
and
data16
xchg
icebp
int3
out
clc
aam
lret
je
enter
lock
mov
inc
sti
or
xchg
enter
cltd
lea
pushf
out
filds
mov
pusha
jle
lret
inc
out
jbe
aas
xor
dec
std
ret
mov
jle
mov
ljmp
push
adc
stos
mov
rcl
jo
repz
pop
dec
push
mov
push
push
stos
ja
sahf
out
pop
insb
hlt
mov
adc
sub
jmp
clc
sbb
mov
jnp
xchg
push
shl
ss
or
jno
jmp
stos
aaa
outsb
xor
pop
push
in
mov
adc
sbb
xor
dec
push
mov
dec
mov
mov
test
dec
in
sar
sub
das
pushl
add
sbb
out
fimuls
xchg
sub
inc
jecxz
arpl
cmp
xor
movsb
lret
lods
inc
loopne
push
pop
mov
fdivrp
inc
xor
stc
lea
mov
idiv
fnstsw
jmp
dec
nop
stos
and
mov
ljmp
test
ljmp
rep
ror
sub
cwtl
push
or
cmp
mov
filds
mov
call
imul
stos
mov
xchg
popf
sti
jmp
add
xchg
mov
add
cmc
popa
loopne
rolb
repnz
jg
call
sahf
jmp
cld
loope
cli
xchg
inc
adc
push
aad
js
pop
cli
sub
cltd
mov
cmp
pushl
mov
psubsb
and
mov
lcall
das
cld
pop
mov
dec
shl
inc
loop
js
cltd
sub
js
nop
mov
sti
push
out
add
push
mov
mov
mov
decl
pop
jbe
or
shl
jno
dec
imul
adc
in
xchg
xlat
mov
cmp
je
int
je
es
lcall
mov
test
in
push
push
ret
shlb
scas
add
out
in
test
pushf
xor
mov
notl
push
bound
dec
mov
rorl
jg
cli
and
push
shrl
aas
fwait
and
movhps
jnp
lahf
les
inc
scas
incl
adc
push
repnz
pop
push
ljmp
adc
push
sbb
ljmp
idivb
jne
jl
lods
mov
xchg
inc
cli
shlb
movsl
aaa
sbb
cli
mov
fistps
jmp
insl
lret
sub
xchg
cld
cmp
stos
pop
push
ud0
jno
ja
inc
out
add
out
pop
pop
mov
push
add
fmul
pop
xor
jmp
test
das
mov
js
xchg
sub
stc
sub
incl
sbb
leave
stc
sbbb
addr16
imul
ljmp
ret
xchg
jmp
xor
jno
and
cmp
call
sti
sub
lret
or
xor
lcall
arpl
or
dec
imul
cmp
repnz
fistpll
imull
std
jg
arpl
xor
mov
jb
pop
test
xor
xchg
into
lcall
popa
mov
xchg
ljmp
mov
std
xchg
dec
and
xchg
neg
clc
lds
add
dec
ljmp
jmp
jns
mov
subb
daa
xor
mov
jp,pn
lods
cmp
and
in
lret
or
mov
mov
outsl
adc
fdivl
fcomp
fisubl
pop
subl
and
decl
mov
int3
xchg
jmp
or
outsb
jns
push
sub
mov
call
mov
addr16
daa
imul
and
rclb
call
ficoml
mov
outsb
ds
or
ljmp
add
mov
cmp
xchg
mov
inc
faddl
cli
movsl
cli
and
std
movsl
movsl
shlb
jns
loopne
rcrb
sar
jmp
mov
inc
or
cmp
mov
test
mov
lds
jns
dec
xor
pop
in
and
lret
adc
dec
aas
jne
inc
and
adc
inc
in
mov
movsb
pop
fmull
lock
sahf
jmp
inc
mov
lea
test
pop
add
inc
ljmp
pop
aaa
adc
cmp
push
sbb
test
jg
fstpl
lock
ja
sub
pop
mov
imul
int
mov
mov
ljmp
fstpt
das
xlat
mov
jg
dec
xchg
test
or
xchg
mov
ret
in
enter
cmp
sub
imull
stc
inc
jbe
mov
aaa
clc
xchg
lods
call
pop
pushf
sbb
push
dec
jmp
into
incl
psllw
jne
mov
sub
pop
ds
es
fildll
xor
ja
mov
mov
mov
push
mov
mov
push
movsl
pop
lods
fucom
je
lret
pushl
stos
add
mov
mov
xchg
or
xchg
shl
jb
pusha
xchg
das
lock
incl
inc
sbb
popa
dec
and
mov
outsl
loope
sbb
cmp
push
push
fidivl
add
dec
jecxz
fistpll
mov
mov
sbb
repnz
jg
lds
sbb
test
addr16
js
jp
inc
sub
decl
stos
mov
fisttpl
rcr
repnz
pop
push
xor
lea
xchg
cs
jne
xor
icebp
dec
xchg
push
ljmp
push
in
adc
ljmp
test
fidivrs
sti
fnsave
movsl
mov
xchg
adc
jnp
xor
sub
inc
adc
or
das
cmc
mov
pop
shlb
outsl
inc
arpl
into
jne
dec
mov
jno
dec
imul
adc
mov
xor
mov
mov
lcall
and
push
cli
mov
cmp
scas
dec
mov
push
xchg
or
mov
call
mov
xor
lods
iret
in
xchg
scas
enter
xchg
inc
mov
lcall
pop
decb
jns
adc
mov
leave
dec
sub
popa
jmp
lcall
mov
imul
stc
mov
stos
pop
or
test
jmp
pop
cli
lds
dec
shll
test
cld
stc
cmp
stos
or
movsl
outsb
add
mov
or
mov
jg
ret
inc
sahf
mov
mov
repnz
pushl
inc
daa
icebp
mov
ljmp
insl
cmp
sti
mov
and
pushl
xlat
in
mov
pop
cltd
dec
imul
icebp
jns
pushl
test
mov
negl
sub
arpl
mov
and
js
pop
mov
jg
ljmp
and
mov
in
mov
fdivs
sub
ljmp
sub
idivl
add
idiv
jmp
mov
out
imul
lahf
mov
shrl
shrl
negl
lret
dec
fs
sub
sub
in
das
hlt
sbb
aaa
jb
mov
rorl
int
pusha
lcall
sub
pop
loopne
mov
es
outsl
ja
cli
pop
pushf
cli
adc
call
ret
xor
sahf
es
out
mov
out
pop
xchg
out
addr16
scas
leave
dec
popf
hlt
lcall
add
lahf
pop
popf
icebp
jmp
mov
js
jne
mov
stos
and
les
dec
pop
push
xchg
push
adc
call
dec
fsubs
pop
mov
test
in
repz
mov
mov
out
int
pop
mov
and
ret
std
faddl
inc
jns
dec
mov
lret
in
jg
mov
movq
dec
cs
loop
ja
cmc
je
lea
leave
insl
icebp
or
mov
lea
push
nop
and
xlat
and
jg
jmp
subb
out
ss
mov
call
cli
std
mov
aas
imulb
pushl
jae
cmp
pop
bound
push
ret
and
xchg
call
xchg
mov
xchg
mov
or
inc
mov
lcall
xor
cmp
push
lcall
xchg
movsb
ret
mov
jo
cmp
lret
ljmp
decl
push
clc
inc
in
xor
mov
movsb
mov
inc
stc
mov
addr16
lcall
lret
pop
adc
xorl
mov
jp
xor
fwait
leave
test
incl
lret
add
mov
rolb
inc
xchg
out
adc
pop
mov
fwait
testl
lret
out
lret
jge
fsubr
out
cmp
outsl
xchg
adc
push
in
movsb
inc
jecxz,pt
dec
sahf
in
ss
or
incl
xchg
fs
jbe
jecxz
xor
movl
cltd
lock
xlat
stos
and
cmp
dec
sbb
sbb
mov
inc
icebp
ljmp
pushl
bound
xchg
mov
xchg
mov
mov
outsb
fwait
xchg
and
call
pushl
adc
add
pop
clc
leave
mov
arpl
aas
daa
push
bound
adc
fidivl
ds
sbb
out
mov
xor
xchg
mov
fsubrs
leave
ljmp
decl
sbb
ja
ficoms
and
iret
add
shlb
jmp
orb
mov
stos
mov
xchg
mov
roll
dec
mov
xlat
lcall
add
pop
sub
dec
inc
aas
dec
aam
dec
pop
ljmp
sbb
int3
inc
mov
es
adc
sub
mov
aad
jmp
cmpsb
inc
fildl
jb
nop
mov
jecxz
cld
push
mov
fcmovnbe
sub
cmc
test
inc
fwait
ja
stc
adc
outsl
jo
lahf
add
outsb
push
inc
fildl
ljmp
scas
out
xchg
jo
pop
and
add
pop
cli
clc
xor
cli
jns
push
shr
pop
fisubrl
in
xchg
daa
cmpsl
cmp
pop
jl
dec
push
xorl
iret
mov
xchg
clc
and
fsubs
icebp
and
jg
jle
xchg
mov
rcrb
fistpl
test
mov
stos
pop
jg
loop
loop
jge
push
cmp
iret
jnp
test
hlt
dec
jmp
clc
out
add
test
aam
pushl
fistl
sub
arpl
lds
inc
mov
gs
mov
xlat
mov
pop
aad
movsl
hlt
call
clc
xlat
test
mov
dec
mov
sub
mov
out
ljmp
push
lcall
lcall
mov
lea
push
int3
fnstcw
mov
mov
addb
inc
sbb
jns
and
shrb
call
pushl
loopne
outsl
or
adc
call
xchg
adc
aas
push
sbb
xor
cwtl
xor
loopne
loopne
jmp
orl
out
add
in
je
or
stos
inc
outsl
or
sbb
insb
mov
fsubrs
loope
adc
es
jae
dec
lods
stos
dec
jno
cmp
lahf
stos
nop
and
lahf
pop
jb
ljmp
or
repz
mov
or
dec
pushl
lea
push
cmp
jnp
pop
pop
ss
in
jg
rclb
cmp
shr
and
out
sar
jmp
or
mov
and
and
jle
push
ljmp
inc
aas
pop
pop
pusha
stc
mov
sahf
inc
xchg
push
jb
adc
outsl
std
pushl
pop
adc
adc
jle
mov
jge
push
push
inc
loope
add
lock
decl
aam
lret
mov
jecxz
mov
pusha
and
mov
int3
mov
mov
or
leave
jbe
mov
lea
sub
lcall
jmp
pushf
mov
jle
loope
jno
fdiv
mov
je
mov
mov
mov
lret
xchg
inc
out
ljmp
fildll
lcall
sarl
orb
mov
jg
mov
filds
rol
add
call
fwait
cmc
xor
rclb
lcall
pushf
lods
imul
scas
xchg
into
xlat
xchg
stc
xchg
in
clc
mov
call
dec
bound
cmpsl
out
mov
in
xchg
pop
sti
andb
push
xchg
mov
movsl
jnp
loop
les
pushf
loopne
rolb
and
jb
inc
shlb
jle
mov
jns
movsl
mov
xchg
cli
in
or
push
ljmp
jo
pop
int
sahf
or
xorb
jg
add
fistps
add
sub
mov
inc
iret
pop
in
inc
or
push
inc
push
fistpll
nop
cs
lret
sarb
out
arpl
inc
pusha
dec
or
mov
fisubrl
mov
in
jmp
xchg
pop
fcomps
jnp
adc
push
sub
lcall
int3
and
mov
and
and
pop
in
sbb
add
jmp
fwait
jno
mov
xchg
loop
dec
or
mov
int3
enter
or
mov
xor
mov
jecxz
xor
fstps
mov
arpl
jo
dec
sub
es
adc
mov
pop
mov
inc
adc
sbb
repnz
mov
cmp
jmp
pushf
loope
lods
hlt
and
cmpsl
jbe
and
out
push
mov
mov
rolb
ss
push
addb
push
fdivs
out
mov
adc
pushl
push
repnz
outsb
or
cli
in
push
jecxz
ret
vrsqrtss
pop
fstps
das
cld
adc
push
inc
push
mov
mov
or
cmp
and
sub
dec
sbb
adc
push
add
call
fldt
or
xchg
out
mov
xchg
popf
pushf
lock
daa
or
sti
in
ljmp
sub
jmp
ja
jg
fwait
dec
jmp
fs
lods
repz
clc
mov
cmp
nop
imul
aam
mov
pop
fucomip
cs
mov
pop
lock
divb
mov
cltd
dec
fwait
or
adc
sub
mov
scas
icebp
scas
gs
out
jg
mov
es
das
and
pop
test
inc
mov
xor
sub
das
shr
out
fstps
and
ss
add
xchg
xchg
xor
cli
ljmp
mov
and
std
jae
inc
adc
pop
es
mov
decl
aas
mov
xor
call
mov
aad
dec
or
lahf
scas
loopne
incl
sub
or
sub
std
jmp
fbstp
dec
stos
pop
ljmp
jmp
or
scas
into
pop
mov
out
lods
in
or
push
inc
fdivrl
cmpsb
cmp
xor
incl
incl
test
push
xbegin
sbb
mov
fnsetpm(287
sbb
push
cwtl
cmp
jmp
into
test
pop
shrb
cltd
jb
mov
cmpsb
adc
testl
incl
cmp
xlat
sub
pop
pop
push
int
fildl
push
out
pop
mov
dec
aam
sahf
decl
or
lret
mov
lret
mov
or
pop
sahf
nop
fistps
lcall
mov
cltd
mov
jle
xchg
push
push
inc
inc
or
xchg
mov
inc
pop
sbb
jo
call
adc
jnp
lret
out
inc
fxch
nop
out
dec
sub
in
adc
xchg
sahf
adc
pusha
pop
xor
leave
loope
outsl
mov
dec
shl
es
mov
imull
adc
or
ds
cmpsl
adc
aas
mov
jp
and
add
fcompl
lcall
les
call
push
dec
adcl
call
repz
or
aas
xchg
loopne
call
sub
mov
push
sbbl
mov
call
fistpll
mov
pop
mov
dec
jno
cwtl
cmp
sub
decl
inc
mov
in
lods
fsubr
add
std
mov
outsb
loope
subb
dec
cld
jg
adc
pop
sub
add
fisttps
add
incl
fwait
mov
hlt
ret
mov
cmpsb
xchg
push
jnp
fnstsw
das
std
call
fldenv
pop
push
push
test
daa
sub
ret
inc
adc
cmp
ret
xor
jmp
dec
std
ljmp
push
or
icebp
out
push
mov
lds
dec
pushl
clc
mov
adc
xlat
cmpsl
movb
cli
cwtl
movsl
mov
dec
jmp
scas
xchg
in
dec
push
imul
cmp
das
push
push
int3
mov
cmp
or
mov
outsb
jno
xor
jae
and
adc
mov
test
push
lods
pop
adc
divb
push
rcl
inc
lcall
sub
popf
mov
repnz
inc
test
mov
icebp
hlt
cmc
jmp
add
clc
stos
sbb
cmpsl
lods
mov
and
call
sbb
sbb
in
cwtl
orb
dec
rcr
pop
and
mov
mov
data16
mov
out
pop
fwait
add
aad
pusha
imul
ret
ds
ds
mov
test
scas
dec
and
ja
lods
mov
stc
cli
inc
out
das
lock
dec
inc
add
movsb
sti
in
mov
shll
aam
fistps
movsl
inc
lds
in
int
inc
xchg
inc
sarl
pushl
lret
fldenv
cmp
inc
icebp
insb
mov
call
push
stos
adc
inc
aaa
sub
mov
aaa
cmpsb
das
push
add
ljmp
icebp
jbe
add
dec
out
fldcw
dec
and
xchg
or
aad
roll
stc
and
hlt
and
addr16
pop
xor
ljmp
rcrl
dec
mov
jle
mov
xlat
shrl
fstpl
outsl
cmc
inc
int3
or
pop
xlat
stc
leave
push
enter
aam
mov
call
lret
test
je
add
popf
push
push
inc
lods
fcmovu
fs
inc
fs
lcall
sub
bsf
loope
cwtl
adc
hlt
sarb
jl
or
test
mov
xchg
out
out
and
pop
mov
fisttps
in
int3
pop
lret
pop
lahf
scas
fbstp
movb
pop
js
sbb
jp
jmp
xchg
jns
hlt
jg
mov
add
cli
add
decl
xor
or
inc
insb
cmp
fcomi
rcrl
idiv
incl
dec
push
pusha
shrl
cmp
xchg
cmp
stos
and
xchg
outsb
xchg
pop
ljmp
enter
adc
addr16
in
push
adc
test
cmp
ss
mov
test
lcall
mov
popf
sbb
sbb
cmp
dec
cwtl
mov
shl
sbb
popa
and
jg
mov
mov
repz
dec
adc
lcall
cs
imulb
stos
mov
jl
jle
out
jle
pop
aas
bnd
mov
pop
cli
push
dec
or
dec
mov
cli
or
test
lock
mov
hlt
sbb
or
dec
sub
movsl
push
adc
sub
movsb
xchg
int
orb
sub
scas
faddl
jg
decl
clc
sbb
fdivrl
inc
xor
es
ljmp
call
ficomps
ljmp
sub
add
int3
xchg
xchg
mov
in
incl
xor
lock
xor
xor
mov
or
cmpsl
pop
or
loope
lret
and
sahf
mov
rcl
flds
jp
add
call
jg
jae
out
add
pop
daa
fwait
stos
mov
movsl
je
mov
inc
or
xchg
clc
out
sbb
inc
das
cmpsb
ljmp
jno
xlat
push
movsl
jg
push
fwait
adc
cmpsb
repnz
outsl
jg
mov
sbb
fs
out
push
and
sub
mov
pop
sbb
sar
in
mov
incl
dec
push
mov
out
dec
jnp
lock
sbb
adc
push
mov
fcmovne
dec
jne
loope
popf
call
lds
adc
jg
lds
jb
sub
mov
cltd
jecxz
push
les
test
sbb
mov
or
sbbl
decl
cld
decl
fs
mov
add
mov
pop
ljmp
jg
cli
xchg
xchg
imul
test
xor
lcall
call
sbb
out
jnp
sbb
sub
lea
scas
mov
stos
addl
out
jecxz
add
push
mov
pop
arpl
cmc
and
mov
ficomps
push
cmpsl
sub
sar
stos
jmp
push
pop
sub
jne
xchg
dec
push
arpl
in
mov
dec
cmp
sar
push
xlat
lahf
jae
lds
mov
mov
orl
fcomps
test
mov
pop
jge
lods
addr16
jge
mov
cmpl
lret
pop
jecxz
cwtl
std
call
outsl
outsl
mov
in
in
int3
fistpl
loope
imul
cmp
xchg
leave
xchg
out
add
into
dec
out
push
faddl
std
nop
rorb
or
negb
add
adcb
mov
pop
add
dec
mov
add
push
sbb
sub
add
adc
or
mov
sbb
add
add
xor
cmp
das
fcmovnu
daa
and
or
sbb
cmp
sub
ficompl
je
push
sub
nopl
xlat
xchg
mov
xor
pop
add
pop
or
fwait
out
fstl
sbb
pop
push
pop
and
pop
jb
or
popf
scas
jne
inc
pop
dec
push
or
add
xor
and
insb
jb
and
gs
add
adc
sbb
pandn
add
adc
add
or
add
popf
cmp
sbb
sbb
add
sbb
pusha
sbb
add
fwait
rcr
sbb
sbb
sbb
or
or
outsl
push
push
add
sbb
popf
xor
push
add
rclb
test
or
add
add
add
inc
adc
mov
push
add
lcall
and
jo
xchg
jo
ss
jg
ffree
add
insl
mov
aaa
daa
and
push
fcoms
into
jecxz
jmp
incl
push
push
pop
push
adc
jge
and
sub
or
jecxz
sub
xchg
mov
adc
hlt
in
add
rep
jno
mov
call
sub
out
aam
cmpsl
out
push
xchg
inc
fwait
xorb
mov
mov
or
rolb
aaa
and
mov
es
add
mov
mov
mov
push
clc
test
lcall
xor
mov
loopne
imul
push
lcall
notb
mov
sbb
dec
movsb
outsl
cmpsb
stos
sar
roll
clc
mov
jg
jge
push
jmp
shrb
lcall
test
pop
mov
pop
call
push
pusha
in
pop
or
mov
bound
paddsw
scas
jle
mov
clc
jmp
test
mov
rorl
jge
je
mov
mov
inc
push
sub
jbe
lea
mov
add
sub
pop
movsl
jl
mov
dec
pop
or
in
inc
cmp
add
adc
push
dec
outsl
lock
ljmp
out
into
xchg
outsb
test
cmp
xor
xlat
enter
nop
mov
shlb
loop
cld
ret
subb
jmp
divb
lock
push
fidivl
mov
ja
test
dec
pop
dec
push
loope
xor
or
pop
ljmp
into
or
jp
in
jbe
hlt
mov
aam
js
cmp
push
mov
cmp
into
mov
sbb
subb
ficompl
jns
stc
cwtl
popf
in
test
inc
sbb
idiv
jmp
xchg
xchg
adc
lret
or
mov
push
adc
push
or
jg
ljmp
cmp
nop
lret
test
add
dec
dec
repnz
cli
dec
add
adc
push
xor
in
jbe
popa
jecxz
inc
push
xor
mov
pop
sbb
ljmp
cli
ret
cmp
and
add
xor
adc
in
pop
sub
loopne
out
xchg
sub
or
jp
xor
outsb
ret
cmp
sub
jg
incl
jp
aas
arpl
xor
js
fisttpl
sbb
pushl
mov
addr16
sbb
and
lahf
sub
imul
outsl
cmc
push
jae
push
jmp
xchg
mov
pop
lretw
or
rclb
cli
pushl
fiadds
arpl
cmpsb
lcall
mov
pop
movsl
cwtl
jmp
mov
fwait
and
pushl
jl
or
outsb
xor
pop
or
mov
fstps
pushl
pop
jae
outsb
adc
cmc
imul
jge
dec
jns
pushl
mov
int
sub
outsl
ja
adc
add
es
pushl
add
dec
and
movsb
js
mov
out
sub
inc
movsl
mov
sar
call
mov
push
push
enter
scas
in
cmpsb
sbb
or
push
push
jl
sbb
je
mov
test
ljmp
or
shlb
mov
adc
adc
stc
stos
fiaddl
stos
rorl
call
movhps
xchg
jnp
push
stc
push
pop
xor
or
lcall
int
call
xchg
sub
add
push
stos
notl
loop
lds
adc
decl
mov
in
cmovs
imul
mov
movsb
aas
pop
fwait
repz
inc
lock
sbb
jge
pop
or
cwtl
aas
jo
insl
xchg
jg
xor
add
repz
sti
loopne
lret
push
push
or
or
data16
repnz
incl
jae
outsl
xor
mov
imul
add
cmp
decb
std
sub
cmpsb
mov
and
cli
xchg
imul
scas
shl
sbb
lcall
popa
jg
lds
sbb
mov
jo
test
or
aad
pop
cmp
cltd
ljmp
inc
das
sbb
bound
lret
add
test
push
divb
movsl
inc
sub
dec
dec
popf
and
jl
insb
in
pop
sbb
call
push
ss
mov
mov
sub
stos
decl
xor
sub
aaa
lcall
lcall
mov
aaa
sub
test
stos
adc
and
dec
dec
data16
cmpl
std
jmp
adc
lret
stc
out
pop
xchg
lcall
inc
sarb
jecxz
decl
aas
sbb
stos
fldt
dec
adc
arpl
fdivr
add
cmp
and
jmp
mov
jge
std
test
push
mov
mov
push
stc
inc
xlat
and
adc
mov
mov
idiv
jg
lret
frndint
scas
repz
pop
xchg
lods
xchg
push
ja
cmpsl
enter
test
pop
outsl
lcall
in
sub
arpl
lret
dec
inc
jle
cmp
outsb
icebp
aam
jae
outsb
xchg
inc
sar
pop
push
out
jne
or
dec
sub
test
clc
jb
incl
cmp
jne
and
mov
stos
cli
mov
xlat
scas
inc
outsl
lcall
sub
jne
mov
mov
and
xor
imul
scas
xlat
xchg
jmp
sub
mov
mov
loopne
mov
sbb
das
jae
popa
and
or
cmp
sub
imulb
enter
sbb
into
and
mov
jns
pop
cmp
cli
sub
inc
cltd
nop
sub
push
cltd
rcl
ror
popa
jl
ja
ljmp
mov
imul
loope
lcall
mov
popf
sahf
mov
addr16
dec
jg
lock
pop
xor
mov
pushl
cwtl
cli
mov
xor
aad
test
mov
add
push
arpl
incl
jge
pop
mov
iret
jb
jp
addr16
jg
stos
fmulp
or
bound
repnz
push
test
jmp
imul
push
adc
popa
xchg
ds
cli
rcll
gs
pushl
outsl
fists
pushf
in
push
push
mov
ja
loopne
xchg
and
inc
mov
fdivr
decl
add
mov
pop
fisttps
mov
xlat
mov
les
ret
call
fwait
loope
fs
negb
push
jmp
js
push
jne
int
or
call
decl
daa
cmp
idivb
pop
push
leave
in
jp
loopne
dec
mov
pushl
lret
adc
cmp
iret
mov
xor
fdiv
andb
or
pop
jp
gs
das
lock
iret
and
mov
cmp
dec
rolb
jnp
out
lock
add
call
pop
ljmp
loope
ror
cwtl
xchg
outsl
pop
mov
mov
dec
loopne
adc
repz
pop
je
xor
pushf
and
inc
cld
in
xor
dec
fbstp
call
jp
cs
adc
push
mov
daa
ja
add
fimuls
cmc
xchg
lds
adc
outsl
and
or
dec
and
cmp
int
mov
es
push
push
jno
call
inc
push
push
js
std
cmpsb
xchg
loopne
xchg
add
xor
push
push
shl
test
and
push
lea
fs
mov
adc
leave
fs
lcall
mov
cmp
inc
and
out
sbbb
xor
fcmovbe
or
xchg
fs
pop
xor
jg
in
cmp
push
sbb
sub
call
ljmp
les
mov
das
adcl
push
or
lea
fs
jg
aaa
mov
xchg
pop
xchg
push
loop
sbb
push
mov
inc
mov
xor
jg
movsl
fs
and
les
test
mov
pop
jmp
cld
push
ret
and
push
bound
add
fidivrs
push
sbb
jmp
scas
jp
adc
add
sub
call
jmp
fildll
jge
sbb
mov
sahf
pop
lds
dec
fadds
aas
cld
inc
das
icebp
push
lret
fcmovu
sar
xchg
mov
cmpsl
ja
add
lcall
lods
fstl
cmpsb
dec
inc
popa
push
mov
fwait
xchg
xor
or
movb
out
std
gs
jo
test
aas
fwait
out
or
nop
inc
shr
pop
jo
mov
loopne
sahf
insl
cmp
xchg
cmp
cmp
insb
adc
cmpb
movsb
das
dec
xor
inc
add
fwait
pop
inc
sar
ljmp
in
push
fs
sbb
jno
dec
dec
call
das
ds
lods
push
bound
lods
adcb
sar
icebp
sbbb
pop
or
mov
fs
xchg
jae
and
mov
test
sbb
gs
xor
cld
movsl
cmp
jl
pushl
dec
rcll
xor
lahf
mov
lods
and
cwtl
cwtl
aaa
fnstenv
ret
pcmpgtw
in
scas
fadds
mov
mov
scas
outsb
pushf
push
pop
ljmp
jmp
mov
pop
push
dec
pop
sbb
test
push
pop
or
sub
jns
call
jmp
xchg
les
stos
jmp
faddp
pop
pop
cmc
iret
mov
in
lcall
or
mov
cmp
imul
xchg
into
stos
pop
call
clc
call
pop
xor
jle
mov
mov
icebp
das
std
lcall
out
mov
xor
shrl
repnz
je
cld
incl
out
push
xorl
dec
cltd
out
inc
push
xchg
xor
mov
cld
sbb
mov
lds
sbb
push
xchg
xlat
push
lods
mov
bound
ret
xchg
mov
push
popa
cs
mov
jge
adc
jg
test
sbb
dec
rorl
dec
push
adc
dec
sub
loop
pushl
sbb
xchg
clc
push
pop
leave
mov
cs
pop
idiv
lcall
cmc
push
shrb
cs
add
pop
mov
xlat
aam
test
addr16
incl
or
loopne
add
and
movsl
mov
inc
mov
shlb
push
mov
mov
fnstsw
cld
cwtl
daa
pop
and
adc
xor
push
adc
dec
pop
push
dec
jbe
push
jg
fidivs
pop
repz
gs
fdivr
inc
pop
clc
and
push
adc
xor
and
inc
cltd
bound
fsubp
divb
push
adc
jbe
jmp
mov
sar
jg
jbe
xor
xor
jg
orb
adcw
in
fsts
and
adc
push
mov
or
add
push
jle
add
adc
popf
or
incl
repnz
mov
push
sbb
jp
ficoms
pcmpgtb
inc
cltd
inc
pop
pop
sbb
repz
xchg
sub
xchg
popa
and
out
incl
xor
push
cltd
mull
mov
cmp
leave
mov
pop
add
dec
lcall
and
fcoms
jp
ds
jae
data16
ds
push
add
sbb
mov
aad
push
pop
cltd
out
mov
bound
ret
add
outsl
lcall
rcll
cltd
jl
sub
dec
add
mov
mov
jg
jg
inc
xchg
mov
mov
aas
dec
pop
dec
iret
cltd
and
out
ljmp
je
mov
and
pushl
sbb
int3
adc
stc
enter
inc
pop
add
jge
or
nop
ljmp
hlt
call
pop
xor
push
loopne
out
mov
pop
orl
gs
ljmp
cld
pop
and
mov
fmuls
call
adc
call
mov
sub
aam
push
sar
and
pop
xchg
adc
cmp
nop
or
movsb
sbb
or
sbb
orl
decl
pop
cld
pusha
push
mov
add
jne
jno
js
mov
mov
cmp
cmp
inc
push
stos
pop
shrb
mov
jb
jg
incl
push
sarl
mov
mov
jge
cmp
add
jge
mov
or
imul
jp
mov
into
or
movsl
push
test
mov
incb
adc
jmp
add
enter
mov
dec
hlt
mov
aaa
sub
mov
sbb
loopne
std
dec
xchg
xor
or
and
ljmp
jle
push
jge
jae
lcall
xlat
loopne
push
addl
test
mov
sub
lods
imul
jg
aas
aad
test
mov
mov
xchg
mov
jg
inc
add
pop
icebp
pop
pop
cmp
mov
lcall
std
fisttps
xor
scas
addr16
mov
call
in
lock
in
nop
popa
ret
jns
push
adc
sub
outsb
incl
mov
adc
call
jge
or
ja
or
mov
insb
or
call
dec
lahf
lods
js
push
sub
pop
mul
jo
pop
test
ljmp
adc
and
imul
movsb
push
sbb
notl
lods
rcrb
ljmp
jns
aam
sbb
cmp
scas
dec
enter
sar
clc
dec
inc
lahf
mov
cld
inc
test
movsl
in
shrb
pop
jecxz
repz
push
adc
xchg
dec
scas
mov
in
add
not
ret
rorb
in
lea
fistpll
into
imul
sahf
add
mov
dec
mov
or
cmp
incl
cmp
push
lret
lcall
or
add
or
push
sbb
mov
cmp
inc
out
movsb
dec
pop
aaa
imul
cmp
mov
xchg
or
push
mov
mov
decl
dec
push
stos
dec
out
mov
or
jmp
jg
pop
clc
add
sub
pushl
idiv
lcall
mov
bound
ret
aam
xchg
cmp
leave
mov
adc
sub
insb
add
in
dec
pop
popa
sub
mov
mov
dec
lret
fcmovnu
adc
loop
push
mov
incl
adc
je
dec
sbb
fst
loope
ljmp
and
rorb
xor
fiadds
jg
dec
fisttps
call
into
es
or
xchg
ret
in
jg
xor
push
xchg
jp
lret
into
enter
stos
imul
dec
popa
pop
and
dec
push
pushl
fstpl
adc
adc
push
rcrb
adc
xlat
daa
dec
addr16
into
cmpsl
incl
ljmp
in
mov
mov
sbb
xchg
test
inc
out
or
xchg
or
in
lcall
jl
and
lahf
dec
mov
dec
inc
es
imull
xlat
notb
pop
mov
loopne
in
sub
inc
mov
cwtl
sub
inc
sub
enter
in
jecxz
dec
roll
ljmp
mov
cmp
fadd
push
mov
gs
sub
rol
jecxz
test
in
ds
popf
xchg
outsl
add
cmp
fldcw
es
jg
lock
xchg
sbb
lods
scas
cmp
sbb
pop
fnstsw
or
das
cld
pop
inc
fnstcw
cwtl
mov
fcmovb
mov
add
hlt
lea
adc
incl
outsl
ds
les
cmp
mov
or
jge
and
add
sub
jmp
shlb
inc
pushf
js
or
adc
xchg
xchg
rorb
and
es
lcall
dec
push
insb
negb
mov
push
aam
cs
cmp
incl
ljmp
jne
lcall
push
testl
sub
mov
sub
pop
fwait
rclb
fcoml
loope
lock
gs
daa
je
jns
jg
jne
push
ret
leave
xchg
popf
mov
lret
xchg
lret
icebp
cmp
mov
pop
clc
decl
mov
xchg
arpl
xchg
jne
pushl
adc
dec
mov
xchg
je
fstps
add
jmp
inc
pop
dec
in
jl
xchg
cmpsb
adc
das
cld
js
jmp
in
ljmp
shl
cmovge
cli
pushl
inc
mov
mov
sub
pushf
lcall
fsubs
jno
in
in
cmpsb
in
xor
pop
imul
sbb
mov
push
pop
cs
sbb
in
js
jg
pop
clc
lahf
insb
cmp
add
push
rcr
jecxz
outsb
call
clc
call
loope
mov
xor
fcomps
mov
bound
decl
cld
xor
jmp
xchg
xchg
mov
cmpsb
repz
xor
out
dec
movsl
push
pop
lret
shll
lods
insb
push
rclb
sbb
jg
test
daa
gs
mov
stos
repnz
adc
lcall
or
mov
dec
dec
cwtl
cs
jmp
xor
jmp
jmp
sbb
cmpsl
xor
int
movsb
mov
into
jle
cmp
flds
jmp
iret
lret
jo
fs
fdivrl
out
test
out
mov
cltd
add
jge
clc
adcb
dec
xchg
jae
lods
push
leave
shl
xchg
lods
repz
out
jge
lds
push
aad
ljmp
fs
rolb
xchg
decb
push
cltd
sbb
sbb
jg
test
call
rsm
pop
jmp
imul
iret
lcall
dec
shrb
cmp
jns
jno
push
lret
loop
je
popa
sub
ljmp
fldenv
add
push
and
fidivrs
push
repz
xchg
cmp
test
push
jmp
scas
pusha
and
out
jmp
and
push
cmp
data16
jecxz
mov
call
call
stc
mov
leave
push
js
fcoms
ror
xor
pop
or
cld
and
loopne
dec
in
mov
mov
addb
lcall
jb
call
xor
and
mov
push
xchg
test
push
pop
fldt
lret
decl
pop
pop
jne
sub
xor
sbbl
imulb
jo
out
call
in
xchg
mov
jnp
xor
adc
incl
cmp
and
dec
mov
pop
fstpt
call
bound
mov
dec
lea
xchg
mov
jecxz
jno
mov
or
imul
in
xchg
mov
aaa
sub
std
and
rorl
addr16
pushl
rorl
test
push
and
xchg
enter
mov
pop
dec
call
push
out
push
ss
ret
xor
push
xchg
lcall
pop
notl
xchg
pop
outsb
mov
outsl
mov
roll
pop
mov
sahf
add
incl
lcall
imul
aaa
cwtl
or
xor
je
lods
push
or
adc
sbb
push
pop
clc
jmp
mov
inc
test
test
dec
pop
mov
pop
sbb
push
mov
ret
mov
dec
outsb
cmpsb
pushf
out
pushl
mov
push
cmp
sub
int3
rcr
clc
shlb
and
mov
cltd
bound
in
inc
loop
ljmp
sbb
xlat
ss
in
sub
jae
dec
pop
test
outsb
icebp
fstps
mov
outsb
in
mov
daa
push
or
test
jns
fstpt
jl
lahf
jo
mov
repz
jmp
and
cltd
loope
cmpsb
fmull
mov
xlat
lahf
adc
sti
ljmp
sub
push
jbe
inc
cmp
sub
movsl
mov
js
loope
cmp
loop
pushl
jne
data16
inc
push
pop
adc
orb
jg
loope
lret
rcrl
test
sahf
push
and
dec
mov
jg
lock
jg
ljmp
pop
add
sbb
jae
pop
mov
pop
in
mov
in
jne
pop
push
sbb
mov
insb
imul
mov
das
std
dec
bound
or
jb
das
imul
rcrb
pusha
xchg
movsl
int3
mov
lock
clc
push
jp
outsb
stos
movsl
fisubrl
test
or
jmp
push
jl
ljmp
adc
jne
mov
loop
call
cmp
repnz
push
gs
adc
dec
jecxz
add
pop
std
mov
daa
or
imul
sti
push
adc
and
jno
push
adc
jg
sbb
ljmp
inc
sub
pop
cli
lods
xor
movsl
movb
sbb
enter
adc
pushl
pop
adc
lcall
sbb
mov
jge
jne
sti
push
xchg
or
cmpsl
push
int3
xchg
fwait
cmp
lea
subb
mov
je
aaa
pop
push
inc
dec
int3
inc
sbb
mov
aam
cltd
js
arpl
or
or
dec
daa
pop
pop
xchg
push
jge
mov
out
sbbb
lcall
shll
gs
jb
shlb
add
jle
jle
sti
decl
pop
add
sub
jo
negl
ljmp
mov
push
pop
pop
and
movsb
mov
xor
jl
mov
clc
in
fbld
fnsave
add
in
push
fistpll
cld
sub
inc
or
mov
ljmp
sub
add
xor
outsl
pushl
mov
mov
ss
test
mov
jae
cmp
iret
stos
jb
mov
std
pushl
sbb
dec
icebp
mov
xchg
add
int
ljmp
cs
lahf
out
adc
aam
je
jns
mov
mov
jg
andl
push
in
add
aaa
loop
xor
mov
mov
in
loopne,pt
stos
jle
pop
push
push
cli
jg
xchg
shll
mov
dec
arpl
lret
mov
pop
fdivrp
decl
into
xor
push
lock
sbb
cmpsl
jae
lret
movsb
add
mov
ljmp
shl
sbb
fstpt
addb
inc
sub
enter
rol
jge
in
mov
xchg
inc
sti
and
shl
call
into
pusha
cmp
andb
jb
mov
sarb
add
pop
sahf
pop
mov
popf
popa
mov
ljmp
aam
jg
inc
insl
jecxz
lahf
push
push
cmc
dec
jne
ret
in
push
movlhps
ss
mov
ret
pushl
push
lea
dec
adc
inc
repnz
and
loope
mov
xchg
sahf
dec
xor
mov
in
popf
and
iret
push
je
xchg
test
xchg
test
call
mov
sahf
adc
mov
jecxz
mov
call
incl
push
popf
mov
mov
xchg
repnz
jno
popa
adc
xor
adc
test
fwait
pop
test
mov
pushf
stc
push
lea
mov
ret
jg
jno
or
mov
jge
and
mov
cmpsl
cmp
cmpsl
int3
test
mov
shrb
pop
mov
pop
outsl
hlt
das
icebp
sub
stc
or
in
mov
add
lcall
mov
outsb
and
std
cmpsl
sbb
mov
sub
out
mov
sub
cmpsb
mov
mov
mov
in
dec
or
popf
lock
jg
call
fcmovnbe
je
xor
pop
dec
clc
test
xchg
int
mov
lds
mov
sub
mov
das
movsb
loop
ljmp
insb
xchg
stos
fisubl
inc
mov
jg
pop
sbb
jmp
mov
jp
sarb
pop
pop
inc
jp
loope
ret
xchg
out
leave
lret
pushl
sub
jmp
mov
pop
jmp
push
mov
jno
mov
repz
aam
cmp
aad
cs
hlt
insl
mov
lcall
xor
pop
leave
in
fisubl
into
pop
mov
fwait
cld
xor
cmp
add
lcall
jle
lcall
ds
dec
mov
mov
push
movsl
outsl
std
rorb
rcl
jg
dec
outsb
sub
icebp
lock
push
sub
pusha
popf
dec
bound
push
imul
jg
pusha
push
mov
adc
cmp
incl
mov
lcall
dec
imul
and
mov
mov
and
rcll
fists
mov
insb
or
sar
ljmp
notb
dec
mov
orl
jmp
loope,pn
outsb
push
dec
jbe
mov
loopne
pop
movd
mov
incl
jne
push
je
pushl
cmc
adc
sbb
xor
fcoms
fistpl
call
out
sub
sub
cs
pop
lds
jno
xor
call
and
xchg
pop
fs
inc
inc
mov
out
popa
xor
movsb
xlat
aaa
test
push
stos
incl
xor
inc
loopne
rorb
insl
mov
pushf
push
dec
xchg
imull
cli
mov
ficomps
js
lea
leave
movsb
jp
ret
aaa
add
movsb
addr16
fdivrl
incl
push
leave
xorb
popf
or
ret
and
lcall
fcmovb
pop
popa
jle
push
xchg
aad
ss
pop
adc
xchg
adc
cmp
aam
inc
cmp
enter
push
cmpsl
adc
int3
fcoms
pop
iret
aaa
dec
fistpll
ret
mov
jle
in
movsl
les
mov
test
cmp
gs
push
test
call
outsl
pop
insl
out
mov
imul
fidivs
shlb
int
mov
pop
cli
inc
lods
je
outsb
ret
inc
shl
cltd
data16
inc
jl
lea
push
jmp
outsl
mov
imul
mov
jmp
stos
push
icebp
test
pop
dec
inc
in
cmp
aaa
test
loop
outsl
lcall
jg
sbb
rclb
mov
sarl
adc
fdivrs
mov
pop
jnp
jb
xchg
insl
push
enter
fdivr
incl
inc
mov
outsl
aam
daa
repnz
push
repz
dec
sti
pop
push
sahf
or
jmp
gs
ds
lods
push
in
call
sub
mov
dec
xlat
pop
and
mov
outsl
push
pop
jg
call
daa
sub
outsb
adc
imul
inc
pop
cmpsb
mov
mov
xorb
cs
jp
divb
mov
popa
inc
into
mov
xor
stos
cs
clc
fucomip
mov
lahf
int3
lcall
scas
jecxz
bound
sti
fistps
out
mov
add
incl
sbb
sub
sbb
and
and
aaa
dec
lret
sbb
js
call
dec
or
jbe
pop
jl
sub
incl
nop
mov
icebp
rcl
push
xchg
fiadds
jecxz
jb
lret
adc
inc
pop
pop
jge
call
nop
inc
inc
xor
dec
leave
ret
leave
aad
sbb
dec
adc
push
sbb
sub
xchg
lcall
mov
test
pop
lcall
call
pushf
mov
and
push
dec
ret
sub
jp
xchg
rcll
ljmp
mov
inc
sub
or
gs
add
repz
push
repnz
shl
addr16
mov
out
idivl
lods
call
push
pop
roll
int3
test
jmp
sub
or
call
cli
lcall
cmp
pusha
and
lret
je
pop
mov
in
incl
pushf
test
cli
jo
sbb
out
sbb
scas
incl
push
sbb
daa
mov
repnz
pop
sbb
in
jg
add
sub
push
cmp
jne
jns
pop
xor
xor
mov
inc
xchg
dec
adc
mov
cwtl
cmp
inc
inc
inc
shrl
pop
std
dec
sarb
xor
cwtl
and
and
mov
cmpsl
sbb
or
and
rclb
xchg
sbb
xor
pop
xorl
dec
jne
fiaddl
lods
imul
jnp
cmp
adc
leave
sbb
pop
leave
sbb
sbb
leave
jae
insl
enter
adc
lcall
mov
scas
pop
and
test
fidivrs
jg
jg
pop
and
push
cwtl
cmp
mov
test
jno
push
jle
mov
inc
sti
test
clc
incl
iret
aad
jae
jecxz
xor
in
xchg
das
call
out
testl
shll
movsl
mov
sbb
xlat
jg
incl
xchg
cmp
test
inc
cld
pop
int
cli
idivl
mov
pushl
mov
or
push
ljmp
popa
fldenv
mov
xor
mov
and
cld
push
fstps
cmc
xchg
mov
call
inc
and
fisttpll
cld
decl
cmp
loope
xor
cld
cmc
jnp
in
cmp
and
out
ret
ljmp
rclb
shll
sarl
inc
xor
cmpsb
adc
loopne
ljmp
xor
jns
ret
inc
ficompl
aad
pop
inc
push
push
push
outsb
sub
shll
cli
or
sbb
mov
ds
in
sbb
mov
js
notl
pop
ret
dec
icebp
lret
mov
pop
mov
jg
rcrb
lods
icebp
sbb
inc
ljmp
inc
fs
popa
rolb
add
dec
inc
xor
jg
cmp
test
repnz
lcall
mov
jp
mov
inc
ret
imul
xorb
sar
out
sbb
mov
test
pop
mov
mov
sbb
popa
pop
mov
stos
ja
pushl
mov
mov
adc
loop
stc
aad
sub
push
jne
or
nop
insb
iret
jns
pushf
call
add
in
add
xor
push
shlb
and
and
js
frstor
in
nop
fidivrs
stc
sub
fdivr
call
add
je
sub
cmp
subb
lea
cmpsb
lds
pushl
push
call
or
sub
mov
dec
les
dec
dec
movsl
lcall
jmp
xchg
push
and
in
jne
mov
jns
inc
mov
sar
add
mov
fadd
sub
pop
std
outsl
in
sub
pop
push
rcll
adc
call
inc
addr16
aas
hlt
cmp
addr16
addr16
fldl
ljmp
test
pop
scas
mov
add
rol
in
mov
gs
and
and
mov
add
sti
in
outsl
jmp
pushl
jnp
mov
xor
jmp
mov
push
insb
and
mov
mov
mov
inc
bound
ljmp
movb
test
mov
mov
out
sub
push
decl
call
ds
cmp
mov
pop
es
dec
fsubr
lcall
dec
jae
movsb
pop
and
pop
pop
lea
pop
sbb
jp
mov
mov
or
in
rcrl
daa
jl
dec
mov
mov
push
add
mov
or
push
ljmp
or
or
mov
add
cmpsl
add
mov
dec
loope
inc
cmc
test
daa
loopne
mull
mull
cmp
lcall
xchg
popa
xor
adc
xchg
add
xor
xchg
mov
cmp
call
add
jl
mov
xchg
movsb
add
dec
je
stc
stos
adc
incl
cmpsb
loope
inc
mov
out
aad
rcl
aaa
std
popa
sub
and
sub
cld
or
ljmp
rcll
testb
inc
dec
or
mov
jecxz
mov
xor
jg
stos
or
push
cmp
pop
int3
xor
or
gs
lcall
sub
inc
dec
dec
jno
xchg
call
push
mov
inc
into
push
mov
jnp
jae
insb
dec
outsl
adcb
loopne
mov
rcrb
mov
in
out
jne
jge
loop
jo
out
dec
sub
mov
hlt
mov
hlt
ficoml
jbe
imul
aam
int
and
xchg
and
jae
inc
sbb
mov
lret
sbb
mov
repnz
add
mov
inc
movsl
cwtl
lock
xor
pop
clc
pusha
iret
cmp
sbb
pop
into
mov
sbb
int
pop
std
sbb
add
outsl
cmpsb
cmc
stos
js
xchg
and
mov
decl
arpl
call
xchg
mov
jg
adc
jbe
cmc
push
ficoml
adc
sub
call
xchg
adc
add
xor
mov
ds
mov
testl
xchg
decb
cmc
ret
ljmp
ljmp
add
hlt
inc
in
cmc
out
int3
cs
mov
sarb
sbbl
fnstcw
push
sbb
jmp
pop
or
pop
adc
adc
data16
inc
andl
or
xchg
add
fwait
mov
ja
mov
fucomip
ljmp
jg
adc
add
and
rcrl
sti
pop
cld
inc
and
push
inc
popa
xor
push
xchg
mov
sub
pop
call
jp
pop
and
push
ljmp
imul
sti
aam
pop
in
adc
gs
add
pop
enter
fisttps
adc
mov
dec
aad
in
xchg
nop
lods
into
cmc
sahf
sub
out
loope
add
punpcklwd
xor
scas
jmp
xor
sbb
jge
fistpll
sbb
cwtl
addr16
loopne
test
stos
stc
pop
add
xor
sbb
pop
and
xchg
add
in
fwait
push
push
jg
mov
je
cmp
out
pushl
pop
arpl
adc
xchg
lock
into
lret
lret
inc
pop
xchg
xchg
xchg
outsl
xlat
push
out
or
and
dec
xlat
les
incl
mov
lcall
aas
and
testl
mov
ret
stos
loopne
inc
mov
je
push
adc
mov
mov
stos
sub
or
decl
sub
mov
hlt
adc
sbb
bound
mov
mov
int
or
dec
xchg
dec
je
aaa
mov
mov
or
std
inc
aaa
cmp
sahf
inc
enter
mov
jns
addr16
jg
push
roll
incl
mov
and
in
jg
jl
int3
or
mov
sbb
mov
pop
daa
and
loopne
pop
arpl
mov
sub
fs
cmp
adc
jg
jo
push
xchg
cmpsl
gs
push
add
cmp
call
mov
jg
lcall
or
into
add
push
imul
jnp
xor
add
sbbl
insl
shlb
jnp
lods
and
mov
call
cmovp
shrb
jns
push
add
hlt
shrb
ljmp
jecxz
pslld
add
mov
rcl
jo
adc
cmp
adc
xchg
or
lcall
ja
adc
mov
pop
inc
in
cmp
es
rcr
jo
push
mov
xor
xor
int
mov
xchg
cmc
mov
ljmp
in
add
mov
adc
add
out
xor
std
dec
cmc
fstpt
ror
jg
inc
hlt
aas
rolb
inc
outsl
das
std
rcl
pop
mov
outsl
in
mov
shlb
sar
jg
or
jae
add
dec
ds
pushl
mov
std
mov
cwtl
sub
movsb
push
jo
mov
mov
incl
sbb
mov
jae
push
mov
dec
idiv
je
add
sbbl
lock
out
fsubrp
cmp
rcrb
outsb
fsubrs
mov
jg
stc
cmpl
sbb
sahf
add
inc
xchg
test
cs
subl
lahf
ljmp
insb
out
hlt
sti
xor
inc
mov
enter
push
add
xor
call
or
add
push
add
fisubs
ds
fadds
mov
call
add
and
jb
repz
xchg
add
rolb
sub
push
stos
inc
xchg
in
pop
pop
sub
mov
jmp
mov
xchg
test
xchg
ja
sbb
cmc
aaa
push
xchg
cmp
mov
or
lods
mov
push
inc
cmp
xchg
jae
cmp
add
jl
mov
aas
push
adc
push
fistpll
mov
dec
add
test
pusha
incl
cmp
mov
mov
xchg
filds
xchg
sub
jne
insb
adc
hlt
and
jg
pop
mov
jmp
or
mov
and
ret
movl
decl
mov
out
bound
imul
cltd
mov
cmp
pop
mov
inc
jg
test
es
inc
dec
jb
dec
aaa
mov
ljmp
ret
pop
sbb
jle
pop
pop
inc
insl
mov
mov
enter
lods
xor
jg
ljmp
xchg
xchg
mov
pop
mov
das
pop
cmp
test
inc
and
cwtl
xchg
pop
adc
add
shl
outsl
or
inc
test
out
call
mov
lcall
push
dec
or
out
push
inc
std
mov
jmp
and
and
out
push
insl
out
outsb
dec
sub
pushf
adc
cmp
nop
or
into
pop
je
xor
adc
mov
daa
push
ljmp
sbb
mov
or
addl
xor
out
stos
leave
arpl
lods
sti
filds
ror
addb
inc
das
stc
sbb
mov
pop
out
and
bt
xchg
pushfw
mov
pop
imul
stos
cmp
outsl
cmpsl
jge
clc
pushf
andb
insl
mov
push
rep
xor
mov
jo
stos
setae
jmp
mov
ljmp
test
test
frstor
dec
mov
jmp
pusha
push
imul
xchg
jmp
dec
sti
jp
aaa
je
int3
frstor
call
and
pop
inc
mov
test
or
mov
popf
push
mov
push
pop
call
mov
mov
pop
inc
call
fnsave
mov
outsl
ja
fs
dec
cmp
stos
popa
movl
cmc
fldt
test
cmp
mov
push
pusha
push
nop
dec
push
out
andl
jne
mov
out
out
mov
mov
call
cwtl
jne
and
fisttps
in
rorb
fcmove
call
test
imul
pop
add
push
mov
inc
mov
and
mov
sbbb
nop
sbb
fistl
or
push
jnp
mov
jnp
ret
push
call
aad
dec
pushf
jo
sbb
or
mov
in
test
into
mov
icebp
pop
push
push
ret
in
push
jmp
jge
adc
call
push
fistps
call
in
pushf
cmp
or
out
repz
pushf
xchg
fstl
fimuls
test
mov
insb
enter
xor
xor
imul
jae
and
cmp
pusha
mov
subb
xor
in
jbe
negl
pusha
notb
xchg
data16
fimull
lret
scas
fisubrs
jae
push
dec
sbb
out
xor
mov
stc
xchg
in
mov
outsl
xor
imul
fcom
add
ja
ja
pusha
inc
push
dec
call
cld
add
mov
aaa
gs
stos
fnstsw
cwtl
scas
jmp
sub
js
jbe
ret
mov
call
push
sub
xlat
or
push
adc
std
pop
or
call
pushf
push
jmp
into
inc
sub
call
mov
hlt
mov
push
push
push
sbb
data16
push
and
adc
je
clc
into
pop
jecxz
jmp
pop
push
mov
sahf
gs
int3
cmp
movsb
hlt
adc
outsl
mov
xchg
mov
in
fcoms
in
xchg
jmp
call
add
xchg
es
std
test
push
jmp
fstl
adc
call
lock
cmp
call
pop
aad
in
mov
repz
out
in
or
std
dec
push
clc
add
mov
mov
sub
fnstenv
pushf
call
sbbl
test
jno
inc
movsl
or
mov
rcrl
push
outsl
jo
mov
pusha
sbb
loop
not
pop
outsl
call
mov
push
add
test
add
sbb
jp
shl
ja
shrd
rorl
aaa
idiv
add
clc
adc
rcr
add
ret
cmp
or
xor
arpl
outsb
jae
pusha
fisubrl
mov
mov
in
jmp
sahf
les
popfw
int3
cs
sbb
mov
jmp
push
mov
xchg
cmp
and
mov
outsb
aaa
add
or
xchg
and
fcomps
adc
aaa
nop
push
push
dec
jmp
les
aaa
xor
adc
add
jle
xor
cmp
mulb
jmp
sti
hlt
jge
test
xchg
pop
cld
add
add
or
sti
mov
icebp
out
dec
sub
mov
sbb
mov
outsl
div
lods
out
lahf
lock
cmpsb
fwait
dec
push
ret
divb
cmc
pusha
or
test
or
xlat
dec
sbb
xor
cli
ficoms
cmc
jmp
or
xchg
sbb
pop
jmp
pop
and
inc
and
call
inc
jge
add
mul
push
aam
not
mov
mov
fnstsw
les
or
pusha
mov
jmp
inc
cmpsl
cs
push
pop
xchg
rcrl
push
push
jbe
pop
push
mov
mov
nop
call
cmpsl
leave
mov
or
js
and
fs
pushf
stos
or
cmp
pop
ss
mov
push
or
add
push
sub
test
jne
sahf
mov
insl
dec
subb
inc
pop
ret
fnstsw
pop
std
rcrb
sub
inc
fldl
lods
pop
sar
cmc
push
pop
jb
push
jo
ja
adcl
out
jno
clc
cmp
cli
loopne
lret
fnsave
aaa
ljmp
iret
add
into
pop
lods
loope
inc
mov
mov
jo
testl
or
mov
testb
mov
ret
roll
rcl
or
cld
mov
jge
jmp
call
adc
or
or
xchg
push
mov
daa
icebp
divl
push
jmp
pop
mov
dec
sbb
add
ret
xchg
cs
daa
xor
test
pusha
push
stos
cli
jmp
sbb
int
mov
dec
or
fsub
mov
add
cmc
shr
cmpsl
sbb
imull
cwtl
jmp
jmp
loope
xor
ss
adc
inc
jno
push
jmp
cmovl
mov
mov
mov
sbb
popf
fisubrs
stos
sti
push
cmp
jmp
ret
test
sub
jg
out
add
pop
popa
mov
mov
ljmp
int3
pusha
test
push
push
lods
aaa
and
and
ja
xchg
sub
aaa
cld
xor
add
mov
incb
jecxz
push
push
stos
pop
clc
jno
inc
call
out
notb
cmp
movsb
dec
in
push
mov
stc
xor
jbe
push
add
dec
mov
fidivrs
mov
pop
cmp
xchg
push
outsb
inc
jne
pusha
and
imul
sub
cmp
clc
mov
dec
push
push
mov
sub
andl
jmp
push
or
mov
jae
pop
xor
mov
adc
sbb
sbb
cmp
push
insb
and
shr
movb
or
lea
lret
shl
inc
addr16
pusha
nop
pop
cmp
inc
mov
dec
push
pusha
pop
es
jbe
sbb
test
sarb
fs
das
pusha
js
jge
mov
pop
call
mov
mov
push
imul
negb
call
not
call
lds
push
cmp
lahf
imul
mov
mov
jne
push
fsubr
jnp
xchg
dec
push
jmp
addr16
int3
dec
jmp
push
or
mov
xor
inc
ret
rorb
sub
pop
mov
push
jb
cmp
mov
ret
push
test
push
inc
imul
push
es
push
jmp
ret
dec
sub
in
and
sbb
stc
mov
outsb
test
ds
clc
inc
push
adc
add
sti
stc
sbb
sar
push
sub
nop
push
fisttps
and
lock
mov
jmp
clc
out
addl
iret
dec
je
pop
mov
push
mov
sub
inc
push
and
xchg
and
flds
add
loope
dec
in
test
aaa
push
daa
push
sarl
jo
sub
mov
mov
sub
mov
dec
enter
or
push
incl
dec
xlat
sti
xchg
mov
lock
std
std
and
call
mov
ret
inc
jmp
leave
les
and
pushf
mov
pop
xchg
fildll
std
pushl
xor
rorl
fnstsw
mov
jbe
aam
push
inc
rcr
or
aam
adc
incl
out
mov
iret
mov
inc
cmp
in
xchg
push
out
aam
adc
int
and
jmp
push
fisttps
mov
mov
ret
jne
adcl
jg
sub
insl
add
std
mov
iret
pop
cmp
push
ret
sti
aam
push
enter
sub
mov
mov
jno
jle
pushl
lahf
and
add
lods
adc
orl
jle
lods
jo
mov
aad
mov
lds
dec
shlb
lds
mov
cmpsl
lock
js
ret
test
sbb
loopne
and
fistps
mul
test
shr
out
lds
insl
jbe
mov
and
test
sbb
xchg
hlt
add
sbb
inc
lea
cld
lcall
jno
lret
mov
dec
in
mov
cs
cli
fcmovnu
rep
xchg
and
stc
in
cmp
xchg
jg
and
aam
pop
iret
in
shrl
adc
inc
ja
xchg
pop
jnp
mov
add
xchg
pop
je
inc
lahf
push
insl
cmpsl
adc
stc
repnz
or
insb
jb
cmpb
lcall
adc
mov
ret
jnp
xchg
rol
sub
mov
fistpl
insl
pop
xor
dec
insl
jge
or
inc
mov
inc
fisttpl
and
pushl
add
cwtl
adc
out
popa
add
movsb
inc
xchg
mov
shll
jle
clc
testb
rcr
stc
call
xchg
andl
ret
jnp
ficoms
sub
jno
lcall
pop
pop
cs
xchg
pop
iret
sub
js
in
call
cmp
and
aam
push
dec
jmp
ja
stos
pushf
lods
sahf
xor
jmp
ljmp
push
mov
notl
lds
mov
adc
inc
addb
imul
shlb
das
dec
aad
mov
xchg
insl
add
pop
aam
xorb
jg
dec
lods
jge
test
dec
lahf
and
aam
pop
leave
insl
outsl
pop
sub
dec
xchg
mov
jne
in
jg
clc
call
add
push
inc
push
jl
mov
insl
adc
nop
aad
sar
js
js
jb
inc
jl
rorl
daa
xchg
arpl
or
jle
mov
pusha
ror
into
pop
dec
sub
insl
or
pop
test
xor
sub
jge
jns
popa
js
dec
movsb
mov
insl
cld
movsl
inc
jns
fldt
xchg
add
pop
cltd
icebp
xchg
xor
mov
mov
aad
in
jg
push
test
lock
mov
cwtl
ljmp
fcmovnu
fsin
incl
mov
ret
jnp
mov
pop
and
and
insl
loope
js
pop
clc
and
sub
mov
decl
dec
dec
shlb
push
push
int3
insl
or
adc
test
seta
icebp
cltd
mov
jl
neg
dec
xchg
gs
sub
mov
sbb
fildll
xchg
cmp
dec
nop
jno
test
out
lea
gs
sub
pop
or
pop
rolb
mov
lea
cld
sbb
enter
jg
in
inc
mov
les
fsubrl
and
je
jg
mov
rorl
or
cmpsl
movsb
mov
sbb
int
cmp
dec
sbb
inc
lods
lock
leave
sahf
in
cmpl
mov
push
cmp
and
mov
and
popf
sbb
ja
or
incl
pusha
sub
or
lods
sbb
data16
fcompl
mov
fisttps
pop
test
pusha
xchg
mov
jecxz
add
test
icebp
add
std
das
cld
negb
lds
hlt
imul
add
es
mov
or
jmp
sbb
incl
or
in
dec
xor
lcall
inc
aad
adc
gs
and
mov
push
sar
call
daa
call
out
aad
jg
dec
pop
out
xor
mov
sub
inc
outsl
xorb
cmpsb
jecxz
mov
cltd
lret
cs
in
pop
xor
pop
sub
mov
movsl
jg
sub
mov
nop
sahf
sub
mov
andl
lock
jmp
add
into
shll
xchg
inc
jnp
lods
adc
dec
sub
fildll
jmp
aas
cld
rcr
js
loope
sub
mov
ljmp
add
jg
push
dec
ficoms
sub
and
xor
into
scas
sbb
cmp
dec
arpl
sub
es
shll
or
jae
mov
incl
fisttps
psraw
bound
mov
sub
pop
pop
cltd
cltd
cwtl
jp
fsubr
pop
mov
xchg
adc
jg
testb
dec
in
cmp
xchg
ret
dec
inc
aad
enter
loopne
test
mov
decl
cld
stc
out
clc
flds
out
mov
adc
push
inc
lahf
rcrb
aad
out
cmpb
popf
mov
push
xor
aaa
jg
ret
add
sti
or
xchg
mov
or
test
dec
mov
and
or
or
xchg
pushl
incl
mov
notb
aam
jge
es
out
and
into
pop
jg
jnp
in
push
inc
or
mov
mov
push
out
xor
mov
ljmp
fdiv
push
lret
or
cmp
and
push
aam
fnstenv
or
mov
jmp
inc
stc
cmp
push
push
push
jb
xlat
insb
add
xchg
mov
adc
pusha
xor
aas
adc
xor
loopne
shr
rcrl
fcomip
movsb
xchg
xchg
enter
fisubrl
mov
scas
pop
negl
push
jg
dec
test
xor
enter
push
bound
push
pop
mov
decl
stc
out
mov
addl
mov
jg
pusha
pop
loopne
cs
fdivl
inc
subb
mov
ljmp
dec
fcompl
mov
cmp
xchg
inc
push
idiv
mov
jbe
mov
mov
pop
addl
out
and
pop
into
mov
mov
outsl
adc
aaa
sub
jmp
in
shll
repnz
hlt
inc
inc
jle
jae
jnp
adc
lcall
call
es
leave
addr16
int
pop
inc
jbe
sarb
ret
movsb
sbb
shl
push
in
ret
jmp
cli
push
dec
insl
je
movsb
insb
add
mov
sti
outsl
xor
sub
ds
rcr
sub
int3
sbb
cli
mov
call
cmp
lods
stos
lcall
popa
scas
mov
xlat
sbb
cld
jg
jb
dec
cmpsl
shrb
in
fnstcw
outsb
sahf
lds
aad
or
adc
mov
push
iret
test
xchg
cmp
cmp
loop
fildll
loope
rorl
xlat
shl
inc
mov
andb
push
sar
fwait
int
inc
ljmp
or
inc
lret
jmp
pop
adc
mov
addb
cwtl
xchg
daa
push
pop
insb
pop
mov
insb
hlt
lret
pushl
and
cmpsl
sub
clc
sbb
adc
sbb
and
daa
adc
mov
inc
inc
xor
movsl
add
fs
pop
outsl
pushl
push
les
push
jbe
imul
jb
or
test
popf
popa
inc
daa
pop
push
mov
pop
lret
mov
jge
adc
or
mulb
lcall
mov
dec
std
stos
xchg
lcall
pop
pusha
mov
les
adc
inc
mov
lods
jle
aas
outsb
xchg
iret
inc
dec
aad
lods
jne
adc
aad
xchg
xor
stc
loopne
imulb
mov
fisttps
test
push
xchg
jno
test
shlb
push
fdivrp
jg
inc
dec
fwait
repz
pop
xchg
lret
dec
out
push
aaa
sub
int
xorb
das
mov
in
inc
and
mov
push
sub
shrl
popa
inc
pop
out
sub
sarl
aaa
jp
mov
adc
out
push
ljmp
jmp
jmp
test
adc
in
and
jno
push
mov
ljmp
adc
adc
icebp
lock
pushf
sub
sub
out
cltd
jb
or
scas
sbb
cld
mov
xlat
sbbl
sahf
sub
jg
fdivrs
ljmp
sub
adc
pushf
xchg
sbb
lods
xchg
xor
enter
or
adc
js
rorb
mov
xor
filds
add
out
mov
in
sarl
mov
push
dec
and
jno
xchg
dec
sbb
cmp
jo
and
push
out
bound
fcompl
stc
pop
decl
imul
adc
imul
dec
scas
addl
pop
xchg
adc
mov
adc
or
mov
adc
loopne
js
adc
sbb
jns
cld
incl
adc
scas
in
mov
mov
or
pop
xor
cld
adc
stos
mov
xchg
fs
idivb
add
and
lea
lods
insl
cmp
pop
call
arpl
fwait
stos
jns
xchg
mov
inc
add
mov
mov
sbb
inc
sub
pop
js
fs
push
clc
xchg
cli
rorl
sbb
push
sbb
ss
dec
imul
leave
pop
pop
pop
clc
ret
imul
mov
mov
adc
mov
lahf
mov
pop
call
and
aaa
xor
adc
test
sub
add
jge
cwtl
pushf
enter
jp
loope
push
xor
rorb
clc
cwtl
pop
dec
add
das
fstpl
mov
scas
mov
mov
mov
repnz
clc
push
push
ret
push
mov
or
xchg
rorl
pop
and
pop
loopne
mov
pop
pop
arpl
inc
jo
xor
mov
jns
imul
movsl
jge
add
fildll
push
lds
add
icebp
jbe
add
lcall
into
mov
arpl
pusha
push
xchg
and
fldt
das
icebp
xchg
adc
ds
cmpl
int3
sub
std
jmp
popf
pushf
pop
push
aam
aas
xor
imul
adc
fdivrp
inc
test
addr16
ret
inc
dec
pop
es
lcall
and
xchg
in
sar
aad
fadds
xor
out
stos
pop
adc
xlat
out
xor
pop
cld
lcall
out
xor
rcrb
fwait
jl
in
push
cmp
xor
sub
subl
shlb
xor
out
mov
lock
lea
sahf
imul
aam
xchg
push
adc
pop
sub
idivb
adc
lret
call
cs
cli
jbe
outsl
shl
ss
or
xchg
fprem1
enter
dec
add
and
jbe
adc
into
cld
call
leave
frstor
inc
push
jecxz
jbe
jo
or
cmpsb
jns
xchg
mov
ljmp
out
popa
add
loope
xor
inc
hlt
mov
xchg
xchg
pop
xchg
dec
pop
fldt
fcompl
fisubrl
aaa
sbb
notl
jl
outsl
std
mov
push
xor
inc
dec
aad
test
out
dec
push
fiadds
jmp
stc
sbb
push
jmp
inc
stc
cmc
das
xchg
aas
inc
xlat
inc
repnz
fbld
fsubrs
fwait
lret
out
push
addl
popa
orl
inc
mov
filds
xlat
inc
dec
cltd
sub
xor
mov
jno
or
xchg
adc
pop
imul
cltd
sub
push
in
sub
fbld
repnz
mov
adc
out
inc
out
mov
push
xlat
repz
loope
jl
mov
jbe
jge
mov
push
pop
in
xchg
jmp
sbb
jb
push
imul
and
les
in
mov
sti
test
xchg
into
aad
jge
push
mov
mov
sub
pop
push
mov
out
addr16
int3
mov
outsl
dec
ja
std
ljmp
push
jge
inc
test
outsb
in
jns
imul
lods
mov
das
xor
addl
clc
cmp
fdivp
push
mov
jmp
cmpsb
popf
test
adcl
and
jg
and
sbb
push
dec
xchg
lret
out
cld
pop
xor
pop
loopne
pop
adc
icebp
push
mov
inc
mov
lea
xchg
test
pop
js
mov
imul
rcrb
jbe
mov
scas
sub
push
lods
arpl
js
out
adc
add
mov
gs
pop
les
aad
inc
and
outsl
insl
adc
dec
test
inc
insb
outsl
jae
or
push
subb
repnz
dec
popa
inc
jb
jb
add
mov
ja
enter
jb
cmp
inc
shlb
outsl
data16
or
popa
xor
push
scas
sub
pop
push
gs
push
and
fldt
push
add
jo
dec
iret
mov
xorl
push
imul
imul
ret
pop
jle
insl
popa
jo
imul
cmp
popa
test
fildl
addr16
dec
and
sbb
mov
pusha
in
or
pop
jnp
mov
jb
outsb
test
je
sbb
out
add
adc
adc
or
outsl
ja
je
jo
xorl
mov
data16
jnp
popa
insl
gs
lods
jbe
outsl
inc
in
insl
fcmovnbe
fstl
imul
aam
cmp
or
ja
push
je
ret
je
jo
outsb
mov
outsl
adc
jb
push
push
add
fldt
in
mov
mov
add
cmp
mov
add
ret
out
dec
imul
lock
mov
pop
sub
insl
mov
insl
popa
xchg
aad
cmp
arpl
pop
data16
popa
mov
lds
add
pop
mov
pop
ja
lods
jae
adc
or
aas
xor
inc
jp
divl
mov
xor
fs
outsb
gs
fisubl
pushf
or
push
pop
pusha
mov
bound
pop
adc
add
fidivl
mov
in
out
jb
aam
imul
or
repnz
pop
js
push
push
je
data16
inc
aam
in
jo
cmp
or
or
sub
insl
out
sbb
je
jo
and
data16
jae
lret
cmpsb
test
mov
push
andl
dec
sbb
inc
mov
fs
add
das
adc
inc
ds
jns
mov
add
and
add
cvtps2pi
mov
add
je
jne
repnz
push
mov
test
icebp
lcall
cmp
pop
mov
and
and
je
pusha
rorl
push
je
pop
sti
push
ret
ret
add
or
inc
je
or
dec
sub
and
gs
je
in
pop
arpl
push
cld
add
add
dec
xlat
fstpl
pop
popa
mov
lock
int3
add
sub
add
mov
add
add
add
dec
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
