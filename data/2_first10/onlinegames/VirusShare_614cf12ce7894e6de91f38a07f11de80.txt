mov
mov
pusha
push
pushf
pushl
ret
lea
je
pushf
cmp
pushf
lea
je
push
movb
mov
lea
jmp
push
call
fistpll
jecxz
add
lret
test
jg
cltd
xchg
push
lods
mov
xlat
mov
inc
sti
mov
mov
lea
push
adc
ficoms
popf
sub
jmp
divb
or
movhps
sar
xchg
jmp
pushf
lea
je
rol
add
shr
movzbw
rol
lea
mov
test
jmp
imul
ret
popf
roll
fdivrl
mov
popf
add
fidivs
out
rcrb
dec
mov
aas
pop
aas
push
push
jb
jo
cmpsb
pop
stc
jmp
sub
mov
test
mov
sbb
or
ds
andb
popa
jbe
add
push
cmpsb
pop
mov
lahf
mov
inc
sub
add
rolb
mov
test
mov
dec
je
repz
jno
lea
push
jbe
cld
out
cltd
iret
pop
pop
fldt
add
dec
fs
push
ja
push
popa
movsb
jle
pusha
shlb
loope
push
in
sub
fistpl
divl
lds
popf
mov
nop
xor
add
pop
adc
pop
cmpsl
mov
add
test
pop
fcomps
stc
test
pop
inc
push
scas
jae
cmp
aad
xor
xor
out
fld
sahf
outsl
dec
fcompl
pop
sub
inc
inc
and
shlb
xchg
and
mov
psadbw
xor
jmp
xchg
pop
int3
push
test
leave
pop
in
inc
and
nop
stos
cltd
mov
mov
jp
push
cmpsb
roll
jns
daa
push
adcl
sbb
ds
xlat
pop
or
cmp
jge
leave
xchg
sbb
lret
mov
add
bswap
not
mov
not
not
jmp
stc
ror
mov
cmc
call
lea
je
pusha
push
mov
test
cmc
movb
add
pusha
cmp
pushl
movb
add
pushf
pushf
movb
movb
lea
jmp
shl
cmp
push
call
adc
loop
push
jecxz
jmp
mov
movsb
lods
scas
dec
xchg
mov
dec
dec
mov
pop
insb
jo
je
mov
lods
sub
push
popf
xor
cmp
push
jb
and
jne
leave
inc
cmp
jnp
add
fistl
add
or
mov
repz
jmp
dec
pop
cmp
push
jmp
or
dec
dec
jmp
pop
jmp
push
scas
push
imul
ds
dec
out
sti
jg
enter
push
call
call
mov
pop
push
mov
or
mov
mov
adc
mov
jp
sbb
out
sub
out
roll
fists
call
loopne
xlat
cmp
in
in
out
call
in
add
mov
mov
leave
lret
iret
insb
or
jecxz
xchg
mov
adc
enter
dec
inc
ret
pop
dec
mov
jnp
push
add
cmp
sub
xor
or
lahf
xchg
cmpsl
jl
xchg
or
fnstcw
sub
dec
sub
leave
insl
ja
xchg
scas
testl
iret
pop
scas
pop
ljmp
cmp
sbb
cmp
out
xchg
out
push
shr
insb
stc
push
out
or
insb
lret
iret
sbb
xlat
call
shl
fcom
jmp
push
aad
fucomip
xlat
push
fsts
add
inc
xlat
in
jbe
out
or
insb
jmp
inc
testl
or
call
nop
push
imull
je
xchg
mov
mov
jmp
cmp
rcrl
and
insb
enter
push
call
mov
push
sbb
add
pop
or
xchg
cvtpi2ps
pop
arpl
push
push
jne
not
mov
dec
lock
mov
lret
push
push
jl
sbb
push
xlat
out
dec
into
scas
xchg
or
adc
out
inc
dec
inc
fcmove
lret
js
out
jo
call
dec
adc
in
mov
fsts
mov
fldcw
call
jg
fcomps
inc
push
das
push
pop
call
imul
fsub
jmp
push
push
into
call
mov
fsubs
push
outsb
out
pop
es
dec
call
push
push
fsubr
jmp
push
iret
jle
push
mov
mov
addr16
leave
fcomip
clc
js
adc
push
clc
xchg
pop
dec
cmpsb
ja
cmpsl
ss
outsb
rcr
dec
inc
shl
sbb
pop
cld
inc
add
dec
not
add
cmp
jp
mov
fdivs
call
outsb
jmp
call
cmp
push
mov
repnz
das
push
insl
call
and
fldenv
sahf
jecxz
ret
rol
or
cli
out
inc
mov
xchg
out
xchg
jmp
icebp
testl
or
xchg
cmpsb
jecxz
data16
mov
out
fdivl
xlat
jo
icebp
iret
xor
push
lret
lds
out
leave
fmull
push
xlat
int3
xchg
jecxz
push
push
mov
stc
iret
mov
cmpsb
ds
dec
mov
mov
aaa
adc
std
fcompl
push
hlt
or
scas
jmp
pop
xor
aad
aaa
or
xchg
mov
pop
mov
jb
inc
mov
aad
xchg
dec
adc
lds
cmp
pop
aam
aas
mov
mov
jg
cmp
lds
fldt
xchg
push
cli
fcmovu
adc
iret
cmpsb
cld
cmp
out
sahf
xlat
loopne
mov
cltd
xor
iret
int
pushf
mov
je
in
pop
jmp
jne
push
jecxz
fiadds
push
mov
xchg
bnd
outsb
out
dec
dec
in
xchg
jnp
out
adc
out
and
cltd
notb
dec
push
push
es
push
sub
mov
jp
fxch
lahf
es
adc
jb
mov
xchg
jo
jno
add
jmp
leave
aad
xchg
in
fcomp
notl
call
cmp
scas
jmp
pop
dec
shl
push
push
push
es
cmpsb
insb
and
sub
bound
std
xor
fcmovnbe
mov
dec
rol
setbe
in
rcll
shrl
notl
outsb
xchg
mov
cltd
cmp
imul
fidivrl
sarb
jb
repnz
dec
xchg
xchg
jmp
or
push
or
lret
cmp
dec
pop
push
xchg
arpl
leave
dec
xchg
divb
mov
cmp
clc
push
mov
mov
sub
fidivrl
push
jmp
xlat
jg
je
in
sub
test
fsubl
inc
jmp
popf
jmp
ja
cld
fists
xchg
sbb
push
ja
mov
dec
xor
jg
pop
xchg
mov
sub
mov
loop
and
dec
and
mov
xor
cltd
ds
nop
aam
je
out
cmpsl
decl
dec
cltd
imul
out
fs
push
setle
add
dec
insb
fdivrl
mov
je
sub
lret
in
cmpsl
shlb
cmpb
adc
js
fnstcw
decl
outsb
jbe
loop
out
jo
jecxz
cmp
xchg
jmp
mov
cmp
xor
lds
iret
out
popa
sahf
or
dec
add
mov
push
fs
test
inc
js
ds
in
pop
sbb
adc
insb
push
dec
and
mov
mov
loope
loope
out
xchg
scas
int
or
lret
in
fnstenv
stc
into
jmp
popf
stos
push
and
rorb
mov
scas
out
pop
adc
int
mov
jge
sbb
pop
out
xor
rol
inc
lds
incl
cwtl
sub
sub
jl
mov
dec
int
popf
int3
aad
push
adc
js
cltd
fsts
xor
fdivs
lret
push
xor
cmp
mov
add
stos
push
insl
jno
lret
and
xchg
inc
jnp
enter
call
add
movsl
inc
stc
pop
fcoms
sahf
sbb
fldt
mov
imull
push
jecxz
packssdw
addl
mov
addr16
fcmovbe
inc
push
xchg
push
ja
leave
stos
push
bound
pop
imul
cmpsl
rorb
mov
sub
sarl
sub
dec
and
cltd
push
cmp
or
sbb
loope
add
pusha
inc
pop
add
and
lahf
pop
sub
in
dec
cmpsb
jecxz
or
or
ficoms
xchg
xor
jb
fnstsw
push
mov
jge
or
enter
shll
call
jmp
in
iret
in
je
add
cmp
fidivs
dec
jae
xchg
pop
or
xor
mov
out
fcoms
mov
fcomps
rcr
data16
or
loope
pop
icebp
jb
test
fnstcw
stos
in
dec
int3
mov
or
mov
mul
out
dec
pop
dec
mov
or
call
sub
aad
jge
scas
aad
add
sbb
addr16
push
lcall
lahf
fidivs
pop
cmp
ja
loope
test
xchg
sahf
popf
jae
xchg
push
outsl
cmp
icebp
inc
or
mov
or
cmp
push
mov
sub
ja
jb
xor
xchg
adc
mull
or
aam
iret
decb
pop
shlb
adc
scas
jecxz
stc
dec
into
outsb
loope
dec
cmp
shrl
jmp
rcl
je
push
data16
nop
faddl
xchg
and
cmp
adc
mov
sbb
sti
in
inc
fcomps
loope
shll
xor
fcoml
dec
dec
in
push
mov
pop
movsb
add
sbb
shl
test
call
es
rclb
or
jmp
inc
mov
dec
testl
enter
lret
sub
pop
imul
jo
lahf
xchg
push
push
insb
jecxz
xchg
dec
cmpsb
xchg
sahf
loope
mov
dec
arpl
stos
lret
out
xor
inc
pop
xor
rcll
sbb
push
dec
out
loopne
sbb
add
jecxz
lds
push
rcr
or
inc
mov
popf
xor
push
aaa
xchg
or
out
mov
fcoml
adc
loopne
lods
iret
test
mov
xlat
adc
out
xchg
shlb
dec
cld
mov
ja
mov
sbb
into
push
pushf
sbb
int3
aam
lods
dec
xchg
cmp
inc
enter
inc
out
push
enter
xchg
mov
cltd
rcr
data16
shr
vdivss
inc
mov
adc
fcmove
pop
daa
jne
sub
jle
jg
fcoml
cmp
dec
mov
xchg
fnstsw
movq
adc
ror
jbe
sahf
aad
fcmovu
push
jae
into
xchg
push
leave
dec
cmp
mov
jle
push
int3
ds
lds
cs
out
sbb
pushf
xchg
or
in
dec
push
loopne
negb
jecxz
jbe
xchg
mov
je
test
adc
inc
notb
fxch
mov
enter
in
or
cmc
xlat
test
aaa
jne
mov
or
push
std
pop
dec
push
xor
mov
daa
mov
or
test
int3
ss
insb
jle
and
push
adc
mov
dec
inc
dec
stos
mov
xor
adc
ret
stc
aaa
das
sbb
add
add
or
xor
sub
fcmovbe
cmp
jmp
ds
in
leave
push
iret
pop
mov
fs
shl
popf
scas
mov
lret
fstl
sub
dec
nop
push
dec
fsts
mov
scas
cmp
pop
sub
mov
daa
js
mov
jo
mov
mov
jmp
fisttps
cld
cltd
int
lret
pop
add
rclb
fadds
loop
pop
add
or
pop
jl
loop
xor
push
adc
sahf
js
mov
pop
jb
loope
ljmp
enter
imull
popa
add
mov
cmpsb
pusha
fdivl
mov
jno
int3
dec
push
or
es
pop
mov
cmc
test
sub
push
call
or
or
sub
testl
int3
or
inc
out
loop
fists
leave
sub
loope
fnstsw
jmp
xor
add
ss
or
inc
xchg
mov
imul
mov
or
push
rcr
mov
jbe
mov
fbstp
sbb
or
cmp
jb
fistl
cwtl
int3
cs
add
popa
push
or
cltd
cmp
scas
and
push
dec
or
call
sti
add
enter
push
int
inc
test
inc
in
jo
gs
outsb
imul
jle
enter
mov
in
push
add
dec
leave
in
adc
dec
cmp
mov
or
int3
fmull
int
cmpsb
xlat
loope
sub
stc
mul
out
dec
rol
imul
psubusb
push
sarl
sub
pop
mov
jmp
int3
aam
fisttpl
faddl
cmp
sub
stc
lea
call
dec
lods
int
and
setns
cmp
movsb
push
fwait
cmc
in
push
jmp
int3
adc
in
push
int
flds
lahf
cld
ljmp
xchg
cmp
dec
rcrl
mov
pop
jno
push
fildll
push
mov
popf
push
fnstsw
idivl
mov
xlat
dec
cltd
in
fstl
enter
fistps
call
cmp
pushf
lahf
incl
jmp
mov
pmullw
stos
sbb
fbld
scas
add
cs
rcl
adc
stos
shrl
lds
xor
push
push
aad
sbb
push
and
adc
in
mov
pop
std
xchg
aas
ror
xchg
jle
data16
cmpsb
into
cmc
dec
popf
insb
or
sub
ds
mov
sub
inc
test
mov
shll
jae
mov
out
mov
cmp
ljmp
popf
jmp
sub
lret
sub
cmc
lcall
enter
mov
fcoml
rcrb
mov
dec
ficoml
jecxz
inc
mov
adc
out
aaa
push
mov
notb
loopne
xchg
out
int3
fistl
push
out
sti
xchg
int3
inc
mov
sbb
sub
jmp
or
stos
aad
leave
jbe
lret
pop
xor
outsl
mov
jne
mov
mov
jo
xor
addr16
lret
pop
or
add
shrl
mov
iret
add
push
leave
dec
ss
mov
push
dec
lcall
dec
in
cli
jg
dec
scas
sti
rcrb
repz
sub
cmp
pop
in
das
aaa
filds
std
cmovl
inc
and
int
inc
lcall
mov
push
mov
imul
stc
popf
pop
ds
lcall
xor
push
sbb
jl
pop
mov
notb
mov
sarl
fs
push
mov
cmpsb
xchg
ljmp
adc
push
cmp
xor
mov
add
loope
fwait
stos
push
outsb
pop
cltd
js
popf
fisttpl
imull
dec
in
xor
ret
and
aad
jbe
or
xor
je
mov
in
jbe
add
psubsw
dec
ret
iret
and
jns
std
loopne
fisttps
enter
aam
xor
aam
jmp
repz
addb
dec
cmp
cs
decl
enter
push
in
or
inc
out
sub
leave
sbb
pop
or
lcall
xchg
pop
imul
fninit
or
neg
or
xchg
loop
repz
js
sar
enter
addl
daa
addr16
cmp
push
fnstsw
dec
inc
inc
test
adc
dec
xchg
int
repnz
fmull
mov
mov
lea
or
enter
imull
nop
inc
pop
xchg
in
inc
sub
data16
pop
roll
out
in
ret
out
inc
xlat
repz
stc
push
inc
inc
js
out
ds
sti
clc
rclw
adc
or
cmc
int3
aad
lcall
mov
in
push
divl
xchg
and
or
xor
jno
test
xchg
lahf
push
jnp
push
xor
out
xor
push
out
shr
push
leave
mov
dec
div
add
jp
test
popf
adc
adc
or
pminub
jb
mov
scas
xchg
imul
jmp
xor
sub
jae
scas
cmp
int
je
ds
inc
in
cwtl
testb
enter
imul
mov
in
or
fstpl
out
mov
das
iret
stos
pop
dec
jl
jne
pushf
fidivrl
test
mov
mov
iret
mov
lret
je
inc
mov
iret
add
xchg
stos
add
int3
inc
addr16
into
jge
fmuls
popf
rcll
pop
loope
fadds
mov
pusha
mov
in
jbe
push
pop
fdiv
lcall
addr16
sbb
or
adc
xlat
int3
lahf
mull
mov
fwait
in
or
fadds
int3
ret
xrelease
int
ret
mov
xchg
xchg
cmpsl
xor
mov
in
pop
insl
mov
repnz
dec
lret
fadd
cmp
xlat
push
push
mov
das
cmp
cmc
lds
push
mov
rorl
xchg
pusha
jns
pop
in
mov
ret
enter
push
sub
jl
repz
push
movsb
dec
cmp
sub
in
aam
or
adc
cwtl
mov
fsts
xchg
cmpsl
pop
sbb
jmp
pop
mov
ret
or
add
fists
enter
xlat
mov
pop
das
nop
adc
cmpsb
dec
scas
add
test
add
es
mov
jmp
fldcw
cmpsl
std
out
bnd
inc
inc
inc
mov
lcall
jecxz
fwait
nop
dec
inc
fwait
pop
insb
inc
adc
popa
push
pop
shl
clc
jecxz
rcrl
insb
jecxz
insb
add
or
ljmp
insl
out
repnz
mull
in
adc
lret
xchg
int
push
fnsave
jg
mov
push
pop
popf
fcomi
dec
xchg
push
fwait
jbe
sub
push
in
sub
cmpsb
out
sub
adc
mov
iret
fisttpl
hlt
call
fnstcw
repz
xchg
scas
out
out
fiaddl
fidivrs
subl
push
jbe
push
fistps
dec
sub
mov
jmp
push
mov
stc
fistps
fcomp
or
stc
rcll
jp
xor
loopne
mov
pop
popf
and
push
adc
and
loopne
pop
push
push
adcb
mov
add
jmp
cld
xlat
cs
lds
int3
sbb
push
cmpsl
into
xor
jo
cmp
leave
nop
je
shll
lcall
lds
dec
bound
sbb
leave
push
dec
into
pop
push
in
mov
fmull
ret
int3
cmpsl
cmpsl
sub
dec
decl
sbb
leave
inc
enter
dec
mov
mov
stos
jecxz
in
inc
lret
popf
popa
loopne
lds
add
ret
out
push
shll
adc
cmp
rorb
mov
aas
jmp
lcall
mov
xchg
mov
adc
mov
lcall
stos
add
xchg
ss
lret
je
nop
jmp
xlat
push
xchg
out
sub
lret
xchg
mov
sub
fimuls
dec
divl
sbb
mov
ret
push
rcl
mov
mov
adc
cmpsl
lock
ja
cmp
fbstp
jp
enter
aad
mov
cmpsb
repz
jge
add
mov
int
cmp
scas
faddp
jne
dec
inc
adc
lods
sbb
xchg
movd
ficompl
cmp
rorb
inc
js
inc
int3
adc
out
stos
into
and
addl
inc
mov
sbb
and
rcrb
mov
pusha
movsl
out
or
lahf
xor
cmp
sub
cmc
mov
adc
mull
push
cs
dec
xchg
iret
sbb
add
push
lock
cmp
inc
pop
scas
push
fisubrl
leave
loopne
test
sarl
fdivl
mov
xlat
popf
dec
push
inc
jecxz
mov
dec
push
cmp
nop
outsl
lds
rcll
mov
stos
dec
sub
sar
add
pushw
adc
dec
cli
stc
xor
mov
adc
js
imul
popf
push
or
sbb
push
adc
sub
testl
sbb
out
insb
sti
pop
jmp
pop
outsb
popf
aad
fildll
pop
mov
sti
jbe
adc
jnp
clc
addl
push
lock
lods
mov
push
add
lods
lret
dec
xor
dec
mull
sbb
adc
mov
das
inc
mov
addr16
sti
das
dec
pop
and
mov
daa
arpl
push
fists
int
enter
dec
jns
je
dec
xlat
or
pop
je
stos
sbb
dec
cld
push
and
insl
cs
pop
test
push
out
shl
out
jb
movsw
cwtl
push
sbb
adc
repz
dec
inc
inc
shl
fcmovnbe
into
rcrl
push
stos
scas
ficoml
sub
into
jecxz
insl
xor
je
loopne
lods
loope
fcmovnbe
scas
cmp
in
add
fwait
aas
sbb
dec
aaa
push
int
fdivrl
cltd
lret
out
rclb
xchg
sbb
fidivl
lds
jl
xchg
push
mov
or
fiaddl
jmp
shr
add
add
xor
push
sti
pop
push
mov
mov
push
add
int3
dec
jle
pop
loopne
shrb
leave
adc
shl
nop
push
push
popf
pushl
cmp
scas
push
or
cmp
add
sub
leave
inc
popf
pop
in
repz
adc
dec
mov
fstpt
sub
dec
push
movsl
xchg
pop
pop
add
mov
stos
in
fstpt
arpl
cltd
adc
jp
jmp
iret
jo
or
jmp
rcll
je
rorl
or
je
dec
and
pusha
out
jle
push
scas
imul
mov
mov
sub
mov
mov
lods
rorb
xchg
in
mov
sbb
lock
and
out
fcoml
add
int3
cltd
jecxz
fbld
rolb
dec
push
fsubp
loopne
inc
out
jmp
mov
or
jecxz
rcl
aad
push
leave
je
ds
jge
jmp
das
push
outsb
push
sbbb
loopne
icebp
push
imul
mov
adc
out
push
push
out
push
push
sti
sbb
inc
push
in
sahf
or
dec
fiaddl
loop
rcr
in
jmp
fmull
push
cmpsl
cmp
fmull
push
mov
dec
mov
pop
push
fmul
cmpsl
push
mov
fstps
push
inc
pop
fadds
push
add
mov
mov
push
loopne
sub
mov
push
jecxz
loope
push
and
mov
jns
out
and
or
dec
and
push
and
ss
jbe
fld
pop
jg
loope
xchg
out
sub
mov
cvtpi2ps
push
sbb
push
jl
pop
pop
fisubl
ljmp
imul
dec
lahf
scas
fdivrs
cmc
push
notb
cmp
fmull
push
out
cmp
fcmove
push
filds
push
iret
orb
stos
sub
es
loope
fsts
jle
fidivrs
aaa
xor
xchg
out
into
push
out
stos
xor
sbbb
sbbl
fimuls
mov
jl
dec
fiaddl
mov
repz
hlt
add
ret
lret
xchg
pop
stos
mov
popf
ret
fdivr
loope
lock
iret
dec
fldenv
cltd
mov
xchg
add
popf
addr16
mov
in
pusha
out
lret
pop
sar
sbb
repz
mov
mov
outsb
stos
in
mov
pop
cmp
sbb
push
push
cmp
cmp
mov
loope
jbe
in
xlat
or
xchg
cmc
insb
daa
in
fadds
iret
aad
and
or
negl
xor
mov
out
mov
sbb
push
scas
addb
lods
ret
lcall
fisttpll
push
aas
xlat
cmp
inc
pop
cmpsb
xlat
mov
mov
fisttpl
fcoml
or
je
pop
dec
out
or
imull
fcoml
xor
dec
loopne
xor
dec
mov
scas
stos
jnp
loopne
into
ret
pop
push
mov
lret
fldcw
inc
out
int
add
jbe
negl
out
mov
fisttps
scas
shr
pop
xor
popf
pop
pop
iret
mov
les
inc
dec
adc
inc
int
sarb
add
mov
int3
aam
cmp
divb
jnp
mov
leave
push
dec
or
xor
addl
push
lret
mov
jne
mov
int
or
popf
mov
repz
sub
jmp
mov
mov
cmp
es
loopne
lds
jl
sub
lods
adc
movsl
fiaddl
xchg
insb
ja
xchg
outsb
push
out
mov
or
dec
ss
imul
in
iret
mov
fnsave
push
dec
dec
lea
jb
lret
jns
inc
mov
dec
xchg
leave
inc
gs
push
rorl
enter
mov
call
call
in
xlat
pop
xchg
mov
sub
dec
fmull
ss
xor
push
repz
push
xchg
dec
xchg
mov
adc
push
jg
shl
outsl
popf
bnd
sub
pop
cmpsb
aad
rorl
or
push
xlat
je
jb
fucompp
fdecstp
mov
test
shlb
out
scas
aad
sbb
insb
pop
fnstsw
fstp
mov
out
jo
lret
cmpsl
xchg
popf
loopne
mov
jge
jle
imul
xchg
mov
idivl
xchg
shrb
or
test
popf
sub
cltd
insl
stos
in
push
addr16
dec
push
push
shr
daa
dec
insb
daa
and
pop
sub
mov
les
ret
rcll
adc
sbb
cmc
pop
cmp
lcall
mov
shrl
jl
aas
hlt
mov
inc
pop
pusha
loopne
sets
enter
and
icebp
ror
test
fmull
sti
cmp
xchg
inc
iret
dec
mov
sub
sbb
xlat
iret
add
mov
dec
pop
loope
adc
or
lock
loope
fdivr
push
shll
xlat
mov
ror
pop
xlat
ja
pop
out
sbb
dec
mov
int3
flds
popf
xchg
push
fxam
fsts
mov
jl
dec
push
sbb
mov
leave
gs
pop
iret
lret
dec
fmulp
dec
sub
pusha
cmpsl
fsub
pop
mov
dec
dec
jmp
in
xchg
inc
sub
out
sub
incl
scas
in
jb
push
fisttps
rol
mov
dec
jecxz
iret
pop
int3
enter
lcall
cmp
xchg
push
lods
add
pop
insl
cld
pop
lret
iret
mov
or
dec
ret
fnstenv
stc
popf
mov
pop
jo
or
add
xor
dec
or
roll
js
pop
lret
int
xlat
insb
enter
popf
push
scas
fdivrs
and
test
stos
in
push
out
sbb
imul
lea
hlt
scas
repz
aam
mov
iret
xor
out
pop
cmpb
lret
fcompl
inc
fdivrs
cmp
jae
add
jnp
mov
out
test
inc
ss
inc
int3
mov
pop
insl
mov
scas
cmp
pop
int
mov
push
cli
sub
popf
icebp
loopne
xchg
add
pop
aaa
imul
in
pop
adc
bound
testb
mov
faddl
jb
sarl
into
cmp
jle
iret
into
inc
loope
adcb
sub
add
push
ret
dec
jne
stc
lods
adc
sarb
jecxz
xchg
mov
mov
ljmp
jb
cmp
fwait
scas
into
adc
and
out
push
rorl
dec
es
idivb
mov
or
repz
fsub
mov
push
int
mov
int
fbld
xchg
lds
push
out
sub
jle
data16
sbb
stc
cmp
int3
setbe
jnp
pop
or
sbb
fnstsw
ret
mov
int3
xchg
ret
jmp
in
xlat
lds
cmpsb
fisttps
xor
jg
xchg
pusha
jecxz
mov
fdivrl
cld
scas
sbb
mov
sbb
pop
jmp
push
out
jecxz
xchg
cmp
cwtl
es
dec
or
inc
pop
mov
insl
xor
fadds
inc
push
dec
sbb
repnz
sub
je
ds
sarb
cmpsl
or
mov
push
shl
jmp
cmc
rcll
call
insl
xchg
jle
sbb
xchg
jmp
cmp
daa
xchg
lods
js
or
mov
jg
dec
ret
frstor
test
out
mov
stos
xchg
aad
mov
fdivrl
ja
adc
jns
jmp
sub
lods
jmp
inc
ja
jo
mov
sbb
fsubs
mov
sub
ds
jge
scas
out
les
add
aaa
daa
pop
daa
fsubl
sbb
pop
inc
cltd
in
sbb
add
adc
xchg
out
and
jle
fsubp
or
mov
mov
xor
in
fisubs
cmpl
in
fisttpll
cs
adc
dec
dec
test
fnsave
scas
cltd
cwtl
cli
lret
imulb
negl
arpl
lcall
mov
popf
mov
fmull
repz
fistpl
add
andb
ret
mov
inc
ret
push
in
mov
clc
loope
pop
pop
jecxz
cmpsb
sbb
leave
gs
and
mov
outsl
insb
scas
lahf
or
dec
movsl
lret
in
ss
mov
fstpl
icebp
or
lret
add
outsb
movsb
dec
clc
xor
in
shlb
sub
sarl
fdivrs
xlat
pop
jmp
repz
out
cs
rcrl
mov
adc
push
push
and
jbe
inc
push
rorl
fstpl
rcrb
adc
cmp
mov
adc
imulb
arpl
movsl
fnstcw
mov
sbb
loopne
xchg
jo
mov
xor
and
rorb
and
mov
sub
fsubrs
mov
mov
jns
push
leave
dec
in
sub
fimuls
mov
adc
mov
mov
repnz
pop
adc
fst
loopne
iret
sti
fstps
mov
dec
daa
cmpsb
sbb
data16
scas
inc
stc
je
lock
inc
into
cmp
scas
into
fmuls
push
adc
into
jmp
dec
dec
jp
daa
mov
sub
push
scas
push
xchg
fcoms
scas
sbb
push
jns
ficoml
icebp
aas
sti
mov
mov
mov
adc
imul
dec
or
push
loop
iret
pop
rorl
jl
fisubrs
je
test
mov
dec
push
data16
xchg
in
cwtl
sub
mov
mov
inc
xlat
ror
mov
add
rcl
dec
xchg
dec
cmpl
adc
cltd
push
loopne
xchg
mov
cltd
push
repnz
push
add
jne
mov
mov
push
cmpsl
jb
add
movsl
lds
fstl
push
stos
pusha
enter
or
push
mov
rclb
lret
fs
mov
sarl
xor
cmp
shl
pop
fucomip
mov
add
sarb
push
int3
ficoml
cli
push
xchg
into
inc
cmp
int
mov
cmp
cli
fwait
mov
or
xchg
push
dec
pop
jne
data16
mov
push
inc
mov
xchg
push
fidivs
push
xor
and
mov
jno
push
push
addb
push
and
pop
loope
lcall
data16
jle
sti
cmpsl
mov
fstp
adc
out
roll
icebp
fcoms
rorl
push
sarl
xlat
cmovb
aam
mov
loop
call
negl
pop
pusha
sbb
ret
aaa
imul
ret
in
add
or
sub
fmuls
sub
dec
enter
xor
je
nop
shll
inc
lock
int
lahf
xor
std
in
shlb
fwait
iret
xchg
cmpsl
std
enter
popf
jg
rcrb
je
enter
scas
in
ds
in
push
loopne
cmp
dec
mov
push
daa
in
out
fmuls
or
or
shrl
push
fimuls
int3
loope
cwtl
sub
mov
adc
push
je
mov
or
mov
std
xchg
cmp
mov
jmp
push
je
or
pop
inc
fildl
mov
jle
pop
pop
pop
sti
iret
inc
flds
aam
cmp
lods
mov
enter
int3
movsl
ja
jge
sub
jecxz
arpl
iret
scas
push
lahf
mov
adc
xchg
loopne
push
jp
test
push
stc
movsl
pop
xlat
cmp
jb
imul
adc
scas
fistpl
data16
push
out
cmp
mov
push
pop
cmp
dec
sub
push
mov
xor
mov
sub
je
mov
lds
cltd
cmp
stos
push
ljmp
and
xchg
enter
dec
cmp
add
fdivl
stc
jg
push
je
pop
mov
push
out
sub
aas
add
in
jmp
pop
divb
jmp
xchg
test
into
lahf
push
mov
push
lods
cmp
jmp
inc
dec
clc
pusha
adc
mov
jp
or
insb
loop
push
inc
in
push
sbb
int3
xchg
mov
mov
jecxz
dec
cmp
push
mov
in
ja
pop
mov
iret
mov
insb
xchg
cmp
lock
cwtl
in
movsb
and
push
dec
cwtl
cli
cmp
js
out
and
ffreep
notl
mov
shrb
pop
int
sub
aad
dec
mov
insb
inc
leave
cltd
mov
adc
enter
enter
mov
imul
mov
icebp
cltd
dec
pop
sahf
fsub
fcomps
add
jno
cltd
push
leave
sub
pop
les
shll
and
inc
jg
fisubrs
clc
dec
cmp
lods
sub
sbb
pop
mov
xchg
push
mov
sub
jmp
jb
and
ss
js
and
sbb
dec
pushl
or
xchg
into
int
imul
cmp
mov
daa
sub
scas
push
nop
mov
cmp
clc
addr16
jmp
mov
sti
int3
dec
outsl
aad
jae
inc
sqrtps
cltd
sysenter
out
cmp
lods
or
idivl
pop
or
cmc
push
fists
pop
out
inc
out
mov
sbb
mov
loopne
rol
or
mov
or
popf
cs
loop
lds
sbbl
stc
js
sub
pop
std
mov
jnp
sbb
insl
jmp
add
enter
loopne
dec
cmp
xor
and
cmp
clc
ljmp
lret
add
cmc
pop
inc
adc
loop
fnstcw
int3
mov
shrl
jg
int3
int
movb
lret
cmpsb
ss
cs
test
ds
jbe
orb
push
popf
mov
lods
bound
sahf
sbb
fistps
lods
adc
jo
repz
fmull
dec
popf
roll
sub
xchg
inc
dec
test
enter
cld
mov
xchg
fcmovbe
sbb
cmp
adcb
dec
mov
adc
sbb
pop
stc
sbb
clc
ds
sub
out
in
popf
adc
lods
in
sbb
cwtl
stos
cs
es
and
int
mov
dec
dec
pop
dec
imul
pushf
push
pop
in
and
in
xchg
js
lret
dec
xchg
pop
mov
addr16
xchg
stc
xchg
out
and
je
jae
loop
sbb
jmp
or
les
or
dec
pop
repz
mov
jmp
and
or
bound
sar
mov
cmpsl
adc
je
sub
jns
lret
push
int
mov
sub
or
jnp
xchg
adc
into
jmp
popf
test
cmp
push
scas
or
inc
and
shlb
in
in
dec
lods
jnp
scas
jmp
pop
push
or
add
cmp
jns
cmpb
in
mov
push
and
loop
xchg
push
popl
push
fisttps
push
aad
popf
test
or
jecxz
sbb
outsb
int3
cltd
xor
fcmovnu
push
aad
xchg
jl
mov
rorb
into
or
pop
fsubs
scas
adc
adc
push
filds
sub
mov
shrl
inc
jg
stos
and
mov
mov
scas
mov
push
fcoml
dec
hlt
enter
pop
outsl
arpl
xchg
daa
sub
pop
fidivrl
push
in
push
add
jb
into
xchg
cmpsl
dec
lock
lahf
loopne
push
in
cmp
fcoml
pop
adc
sbb
jp
lret
inc
loop
int3
iret
lret
aaa
int
dec
xlat
push
data16
mov
inc
pop
xor
xchg
jbe
xchg
and
ss
push
mov
fildll
sub
es
jecxz
leave
and
lds
mov
push
adc
fisttpl
enter
cwtl
mov
imul
push
rcrl
xlat
mov
hlt
cmp
fld1
leave
fcomps
dec
adc
addr16
inc
jb
sub
jbe
mov
sti
sbb
and
mov
adc
cmp
mov
mov
jmp
ret
leave
mov
mov
in
addr16
jb
mov
out
mov
addb
sub
ds
cmc
insb
xchg
sbb
inc
jb
dec
xorl
movsb
out
test
in
mov
iret
arpl
movsb
fistpll
mov
adc
outsl
lcall
out
icebp
cmp
testl
sbb
xlat
testl
out
mov
jmp
xchg
addr16
adc
lods
in
push
test
xchg
daa
mov
addr16
mov
cmp
dec
push
popf
or
dec
push
pop
lret
lcall
mov
fidivrl
roll
test
out
repz
push
add
xor
add
outsb
or
pop
das
lahf
add
call
testl
out
xlat
pop
into
cltd
andl
mov
xor
popf
dec
xchg
and
aam
add
bound
push
push
cmpsb
push
fcomp
sbb
jg
cmp
rcl
movsb
lock
iret
std
mov
pop
push
enter
ss
test
mov
jg
push
adc
in
test
movsb
stos
addr16
scas
xchg
insb
mov
jp
mov
pusha
stos
push
std
mov
addr16
faddl
dec
ja
mov
sub
mov
loope
pop
inc
ret
stos
sub
cmp
icebp
les
jge
sub
cmp
in
mov
and
icebp
iret
jb
das
jmp
jo
jge
sub
das
jb
pop
xchg
test
shrl
mov
xlat
sbb
shl
sub
push
adc
fbstp
adc
clts
test
or
sahf
push
aad
out
shl
jmp
outsl
loope
cmpsb
ss
push
test
and
lods
std
or
sbb
inc
into
dec
hlt
sahf
std
pop
addr16
dec
scas
dec
aas
or
out
xor
and
cmc
cmpsl
mov
pop
jb
adcl
sub
mov
add
jb
pop
inc
insb
outsl
loop
cwtl
enter
or
push
lods
idiv
lock
cwtl
mov
cs
cltd
add
or
imul
into
push
xor
xor
mov
pop
andb
fcmove
rorb
sub
in
adc
mov
popf
push
fisubrl
into
pop
mov
negl
out
xchg
xchg
jb
adc
or
mov
pop
cmpsl
xchg
insl
popa
dec
xor
lea
in
push
js
mov
xchg
push
lret
lahf
jle
jmp
push
cmp
add
inc
jg
scas
xchg
sbb
in
xchg
adc
jns
xor
inc
jmp
jge
fimuls
push
cmp
dec
popf
int
jo
mov
cmpsb
ss
insb
fadds
push
test
in
and
in
rep
xor
enter
rol
push
cltd
andb
lret
int3
call
and
jbe
lret
add
scas
pushf
push
dec
mov
in
push
shll
call
arpl
pop
sbb
mov
sti
das
pcmpgtd
rclb
push
in
int
data16
inc
insb
jns
mov
xchg
fnstenv
jnp
rcll
cli
adc
popf
loope
sarl
imul
fistl
enter
mov
mov
inc
xor
push
push
out
in
dec
mov
lret
sub
ret
rcl
enter
loop
loope
fcmovnbe
mov
mov
rorl
inc
pushl
push
cmp
or
fists
adc
or
cmpsl
xchg
jbe
add
mov
push
inc
sbb
inc
or
fisttpll
push
pop
sti
out
pop
inc
in
push
call
mov
ret
pop
or
jmp
sbb
jno
xchg
mov
pop
std
stos
pusha
adc
inc
jns
inc
jg
xchg
or
pusha
outsb
sarb
out
in
pop
fsubrs
jmp
push
dec
push
jne
push
inc
movsb
loope
enter
sbb
adc
and
cmpl
and
xchg
adc
add
in
lret
fdivrp
sbb
enter
cmp
iret
test
imul
fninit
out
int3
imul
aaa
lret
mov
cltd
dec
xor
xchg
ja
pop
xchg
xchg
sub
pop
jmp
dec
rcr
in
addr16
jb
pushaw
leave
mov
lret
cwtl
aad
dec
in
iret
push
popf
lods
cmp
push
pop
lds
out
mov
in
loope
stos
fsubr
mov
and
popf
and
cmp
fidivrs
lods
loopne
lds
push
data16
stos
push
shrl
inc
fidivrl
lds
mov
aam
push
ss
pop
stos
push
dec
ds
fstps
mov
fmull
add
inc
aad
imul
inc
add
imul
jp
xchg
popf
mov
push
loope
pop
std
inc
inc
insl
push
or
call
fildll
inc
add
data16
and
aas
inc
xor
icebp
jmp
jnp
push
ja
lock
mov
or
ljmp
in
lcall
filds
xor
xor
push
dec
adc
in
dec
aad
or
add
mov
stos
rorl
mov
push
xchg
cltd
mov
icebp
ja
push
mov
mov
pop
push
jne
pop
jmp
cld
loopne
push
out
cmc
rcrl
fsub
shlb
jns
add
fcompl
sbb
xlat
dec
mov
cmp
cmp
push
ds
fucomip
scas
lods
push
pop
nop
jecxz
xchg
vminsd
mov
leave
xchg
movsb
cltd
push
sub
stc
out
rcrb
fucomip
insl
inc
popf
dec
inc
push
sub
outsb
xlat
out
jecxz
cltd
bound
fwait
pop
ja
inc
mov
mov
inc
cmpsl
xchg
mov
push
dec
aad
xchg
int
stos
sub
cmp
mov
outsb
aad
fistpll
leave
cli
push
cmpb
cmpsb
pop
sbb
movsb
fisubrl
movsb
out
pop
loope
negl
fcomp
jmp
inc
dec
push
out
nop
call
fbld
mov
mov
sbb
std
popa
push
out
jmp
jnp
sub
cmpsb
or
test
mov
mov
sbb
jp
or
inc
or
incl
mov
rclb
xor
jmp
fldl
push
push
dec
mov
mov
fisttpl
push
mov
xchg
out
lret
add
out
out
dec
rorb
lahf
jl
popf
stos
dec
and
jp,pt
inc
mov
cmp
cmp
push
push
loope
mov
mov
insb
sbb
xor
xlat
or
insl
jl
inc
xor
adc
clc
cmpsb
and
les
add
inc
gs
inc
dec
inc
push
add
pusha
push
lea
jns
je
cmp
stc
jmp
push
call
test
fstpt
sbb
fnstcw
ja
out
fidivl
pop
push
ds
jne
fst
inc
mov
sub
push
out
sahf
repz
cmpb
ret
sub
cmpsb
fsub
xchg
test
mov
jmp
jecxz
in
push
cmp
imul
pusha
out
mov
add
clc
test
push
dec
out
fsubl
ss
xlat
stc
cs
push
add
jo
push
ret
jp
clc
pop
or
adc
dec
xor
ja
inc
push
push
jmp
dec
dec
dec
xor
cs
insb
add
sbb
call
ret
leave
push
es
xchg
in
pop
fdivl
xchg
ss
mov
ret
fdivs
xchg
ds
loope
xchg
in
mov
mov
fcomps
xchg
mov
add
inc
iret
loop
adc
incl
lret
lds
or
mov
shll
js
fdiv
nop
loopne
push
in
shlb
and
insb
sahf
cmp
out
cltd
pop
cs
fistpl
sti
push
xchg
and
rolb
cmp
scas
test
aad
addl
add
fmuls
mul
arpl
in
outsb
dec
into
xchg
lods
leave
add
data16
ds
lret
inc
sub
scas
mov
in
jb
xchg
push
inc
xchg
cmp
test
push
add
pop
or
xchg
fdivr
js
es
jmp
call
shlb
test
xchg
mov
ret
push
fcoms
addr16
imul
lret
xchg
or
xchg
bound
or
ss
shll
dec
ret
xchg
test
loope
fildl
shll
dec
mov
pop
cmp
xchg
xchg
out
push
orb
out
popa
pop
ljmp
out
add
loopne
loop
dec
ficoms
aas
lahf
xlat
and
ror
mov
stos
xchg
int
sbb
push
cmpsl
or
outsb
aad
iret
rorl
and
imull
fdivl
movb
fisttpll
xchg
std
push
sbb
insl
push
iret
std
cltd
dec
shl
test
xchg
sub
out
push
dec
insb
ret
iret
fdivrs
in
int
shl
sub
xor
jp
sti
testl
dec
inc
dec
cmp
xchg
jo
rolb
out
lds
lret
or
ror
inc
cltd
in
sub
xchg
inc
fistps
pop
adcb
imul
xchg
pop
mov
pop
push
jle,pt
loope
test
orb
xchg
cs
pop
divl
pop
cmpb
fwait
mov
jo
pop
dec
xlat
push
pop
rcl
int
sub
fmull
sbb
mov
mov
iret
push
in
xchg
cmp
out
inc
stc
pop
xor
cs
jb
sub
clc
shl
mov
mov
mov
iret
sub
push
xchg
movsl
in
add
imul
cwtl
push
es
mov
or
std
xchg
out
pusha
inc
inc
add
xor
cmpsl
daa
cltd
in
jno
mov
sub
insl
rcrl
in
pop
iret
or
inc
cmc
pop
sub
mov
je
aaa
mov
adc
fildll
sub
xchg
push
imul
sbb
fcmove
insl
jp
cwtl
in
mov
xor
aad
pop
stos
out
jbe
loopne
add
insb
into
arpl
xchg
xor
icebp
aad
jb
push
cs
pop
cltd
inc
in
adc
fimull
xchg
sbb
int3
je
xchg
movsb
fstp
push
insl
xchg
mov
dec
xchg
aad
ret
xor
cs
xchg
cs
mov
xchg
push
xorl
hlt
call
scas
fisubl
lret
mov
iret
inc
ss
sbb
jecxz
jno
and
lahf
mov
rol
out
es
jp
test
ljmp
jg
ret
inc
mov
mov
mov
inc
dec
mov
xor
shl
mov
push
call
push
rorl
mov
fidivrl
aad
jl
loop
or
iret
aad
adc
ja
adc
jne,pt
cmpl
mov
cmp
inc
xchg
xchg
jp
and
ret
xor
cmp
in
xchg
pop
in
pop
mov
xlat
dec
cltd
or
push
cmp
push
jge
adc
ss
fmuls
insb
mov
xchg
sbb
mov
dec
adc
imul
cmp
and
js
test
in
in
and
dec
pop
sbb
pusha
jmp
pop
stos
xchg
xor
dec
pushf
fisubs
sti
inc
mov
insl
push
insb
dec
out
ret
rcr
xchg
sub
pusha
insl
popf
mov
imul
xchg
push
jo
dec
jae
jge
mov
pop
stc
cmp
inc
push
xchg
mov
add
adc
out
in
iret
mov
enter
and
int
gs
fstpl
clc
xchg
jecxz
lahf
mov
es
dec
xchg
leave
ja
js
mov
sub
jmp
into
adc
dec
and
push
shll
sub
clc
dec
push
pop
dec
fadds
dec
mov
mov
aaa
imul
ljmp
cmc
lret
rclb
and
mov
icebp
and
js
shll
adc
pop
lahf
jecxz
lods
xchg
cmp
pushw
not
fisttps
aad
and
imul
dec
xor
cltd
jno
int3
push
leave
xchg
adc
enter
int
mov
xor
data16
cmp
ss
fildl
jmp
fnstenv
or
dec
inc
push
jo
mov
pop
push
adc
mov
ret
das
aas
inc
push
ja
mov
mov
outsb
rcr
dec
lcall
repz
adc
fwait
pop
negl
loope
in
inc
je
flds
popf
fadds
fsts
jmp
lods
unpcklps
mov
out
lock
int3
lcall
and
rcrl
mov
dec
adc
and
add
shlb
cltd
leave
jb
loope
sbb
sbb
test
pop
addl
fistpll
sub
adcb
and
jb
cmp
push
cwtl
xor
xchg
testb
mov
cmp
mov
sbb
cltd
mov
mov
lods
xchg
insl
sbbl
xlat
adc
add
dec
pop
dec
cmp
aad
jns
sub
in
mov
inc
aam
lock
xchg
cltd
fisubs
xchg
sbb
enter
shrl
push
inc
stc
mov
es
dec
cld
jle
jbe,pn
in
push
in
dec
mov
push
aaa
xlat
push
out
fmul
push
repnz
pop
lcall
and
clc
iret
negl
cmp
and
addr16
xsha1
cmpsb
or
xchg
mov
add
xlat
mov
ret
inc
xchg
pusha
dec
pop
int
push
fwait
negl
mov
push
sub
ret
mov
imul
cmc
lret
testl
cmpsb
jno
jbe
xchg
xor
test
dec
adc
and
pop
sbb
mov
mov
aad
inc
pop
shrl
stc
out
dec
pop
out
stc
int3
out
loopne
divb
popa
mov
or
sbb
out
push
inc
dec
push
sub
adc
jecxz
inc
stos
insb
xchg
fldt
shr
xchg
jno
mov
ret
pop
inc
leave
dec
sarl
es
cli
sub
imul
icebp
imul
sbb
into
repnz
push
shl
cltd
insb
mov
fisttpl
xchg
jl,pn
push
mov
xchg
pop
lret
push
aad
loopne
popa
jg
out
mov
and
dec
mov
mov
out
jbe
loopne
and
cwtl
lea
pop
sarb
aad
xchg
popf
faddl
push
pusha
cmp
addr16
out
jnp
inc
fwait
iret
mov
and
test
hlt
mov
fcmovnb
lds
ljmp
xchg
sbbb
shll
into
push
fistps
mov
xor
xchg
push
and
fcoms
cwtl
cltd
ljmp
mov
aas
hlt
xor
imul
in
out
addr16
and
pop
lods
test
or
xchg
lods
and
imul
jo
aas
inc
xor
mov
sub
mull
outsb
lds
enter
mov
jg
add
fwait
xchg
jmp
int
enter
or
imul
hlt
aam
jae
jnp
pop
sti
mov
out
rclb
aaa
in
xor
cmpsl
xchg
inc
push
mov
push
and
sub
sub
xchg
and
pop
arpl
cs
jo
pop
ss
add
add
pop
push
pop
pushf
stc
mov
out
jl
add
mov
push
sub
testb
xchg
adc
pop
loopne
sti
push
xchg
mov
test
jmp
jae
sbb
test
loope
js
pop
push
and
push
jle
push
jle
pop
xchg
sub
jo
ja
ljmp
xchg
push
popf
call
lret
mov
adcb
jbe
mov
frstor
mov
or
mov
test
pop
push
xchg
pop
pop
movsb
mov
mov
in
stos
fldenv
push
pop
repnz
xor
xchg
shll
insl
jno
shlb
xor
or
popw
rcll
xchg
or
xchg
cmp
jp
xor
pop
jmp
adc
ljmp
and
push
xchg
lret
rcll
ja
testb
jmp
out
mov
sar
outsb
mov
inc
scas
sub
pop
subl
lret
mov
adc
sub
mov
fstenv
ret
out
sbb
jle
push
dec
dec
push
lret
xchg
mov
idiv
imulb
and
sbb
dec
cltd
scas
int3
sbb
rorl
mov
mov
fcoms
fmull
gs
out
scas
fnstsw
iret
test
lds
mov
in
leave
cmpb
ret
lcall
mov
cltd
xchg
mov
data16
lods
jle
push
test
mov
enter
call
lcall
push
loop
in
push
push
inc
jmp
insl
jae
and
incl
movsl
cmp
sbb
aad
push
popa
out
lret
xchg
xchg
and
out
fcoms
outsb
sbb
and
push
sbb
adc
pop
adc
push
xchg
sub
mov
mov
pop
repz
lret
sbbb
out
adc
sub
or
rcl
test
mov
movb
pop
in
out
dec
jb
mov
aaa
pop
adc
ret
and
insb
mov
in
push
stos
xor
shrb
mov
in
add
fstpt
insl
or
loopnew
repz
test
repz
inc
test
mov
hlt
imul
out
out
out
rolb
push
dec
test
sbb
xor
inc
cmp
xchg
cmp
scas
push
pop
ficompl
repz
popa
dec
adcb
xor
push
mov
jmp
cmpsb
ret
push
jne
repnz
or
or
jne
pop
mov
dec
mov
pop
or
mov
mov
push
je
pop
lea
mov
push
mov
jbe
adc
pop
mov
rorb
aam
enter
pop
stos
int
xor
mov
lret
scas
imul
inc
sbb
dec
jne
in
rcrl
imul
loopne
pop
mov
mov
mov
shrb
es
cmpsb
inc
sbb
inc
mov
or
jne
dec
outsb
xchg
jnp
pop
inc
jge
pusha
fstl
fmull
sbbl
sbb
xchg
pop
pop
pop
xor
cld
test
es
fdivrl
pushaw
mov
lret
out
cmp
push
imul
mov
xor
inc
pop
or
ret
fcomp
pop
gs
inc
shl
sahf
mov
xchg
mov
jbe
mov
push
add
adc
adc
push
sbb
out
stc
arpl
mov
fisubrl
mov
push
stos
xchg
popf
mov
and
cltd
rcrb
mov
adc
mov
cmp
loopne
popa
inc
xlat
or
enter
out
cmp
dec
stos
cmp
adc
cltd
sbb
aad
pop
dec
xchg
pusha
ds
mov
push
cs
fsqrt
gs
cmc
xchg
iret
push
push
fcompl
dec
ret
cmp
mov
mov
mov
xchg
fbstp
addr16
data16
in
pop
pop
lods
and
mov
lcall
push
mov
notl
in
loope
mov
fiaddl
cwtl
pop
sub
mov
adc
sub
lock
cmp
mov
push
icebp
mov
sbb
mov
sub
mov
jmp
mov
sbb
push
and
xchg
inc
mov
call
popf
dec
shl
je
arpl
xchg
loop
aam
pop
aaa
inc
or
sub
mov
sbb
adc
mov
push
dec
ljmp
pop
fs
insb
gs
test
mov
mov
add
in
insb
xchg
pop
enter
adc
mov
mov
jecxz
pop
popf
cmp
push
push
call
mov
push
pop
es
or
adc
aad
inc
subl
lret
lret
cltd
clc
mov
rclb
fnstcw
xchg
xor
xchg
cmpxchg
je
iret
lret
add
shll
xor
sahf
adc
clc
inc
dec
loopne
mov
cld
pop
pop
fcmovnb
cmp
xchg
add
mov
jmp
shll
daa
imul
inc
jp
xchg
stos
fstpl
mov
aad
fimull
lret
stc
push
fcoms
xchg
xchg
fistl
xchg
ds
repnz
jl
adc
imull
jmp
or
clc
cmp
in
jbe
fucompp
aas
scas
in
push
and
insb
push
js
pop
jg
lret
imul
xchg
sti
sub
adc
jb
dec
xchg
leave
outsb
daa
adc
femms
adc
sbb
xchg
leave
cld
sub
data16
ss
mov
jecxz
cmp
cmp
hlt
sub
jbe
push
xlat
sbb
mov
int
cltd
mov
movsb
xchg
rcll
xchg
test
push
ret
inc
decb
roll
mov
mov
fdivs
xor
daa
int3
dec
jmp
cmp
push
aaa
xlat
aad
insb
into
or
dec
xchg
push
lret
mov
rcrl
or
mov
les
mov
rcll
or
mov
xchg
cmp
xchg
in
mov
dec
add
cltd
jp
pop
pop
test
sub
xchg
addr16
imul
pop
push
into
or
and
cwtl
movsb
pcmpeqb
addr16
int
test
pop
lcall
mov
pop
sub
das
sub
mov
incb
pop
and
xor
jb
push
xchg
mov
sub
shlb
addr16
push
ljmp
insl
sarl
mov
daa
mov
call
mov
pop
adc
xlat
sub
aaa
idiv
or
pop
out
dec
lret
add
dec
negl
hlt
mov
fisubrs
mov
jmp
mov
into
and
mov
fisubrl
sub
enter
addr16
sub
out
decl
outsb
inc
mov
out
out
stos
shlb
psrld
hlt
xlat
dec
lret
cmp
push
inc
out
inc
ret
jbe
sub
aam
out
add
pop
fldenv
push
testl
cmp
sbb
xchg
sub
fbld
push
les
call
into
cs
ljmp
or
data16
xchg
sar
or
out
add
cld
scas
mov
out
dec
loop
out
xchg
push
cs
jl
jnp
sub
xchg
iret
mov
out
data16
xchg
sahf
push
push
pusha
pop
flds
shr
nop
out
lahf
or
pop
out
imul
push
ss
data16
dec
rolb
cs
adc
shlb
das
push
or
xchg
ss
mov
push
shl
mov
out
filds
imul
out
push
out
fisttps
xchg
jbe
dec
push
stos
sub
ds
pop
add
or
loope
das
mov
inc
popf
or
jb
xchg
out
ljmp
scas
push
push
iret
aaa
xchg
push
xchg
out
jbe
push
or
mov
popa
ss
aas
iret
lahf
push
push
data16
das
out
pop
outsb
jle
dec
pop
push
pop
ds
xchg
push
sbb
jl
dec
inc
adc
stos
rorb
ss
call
add
subl
pop
pop
cs
fists
jmp
pop
ss
pusha
xchg
and
mov
insb
cltd
into
inc
ds
ds
xchg
inc
pop
pop
cltd
repz
mov
sbb
cmp
cltd
shll
pop
shrl
mov
rcr
jp
divl
mov
sub
leave
jecxz
jge
mov
inc
jecxz
lret
mov
ljmp
jge
ret
pop
jbe
out
mov
cltd
pop
cmc
jb
dec
cmpl
mov
test
ret
sub
adc
cwtd
ds
int3
adc
fsubs
mov
cmpsb
mov
add
mov
inc
dec
mov
and
pop
fcoms
jbe
xlat
cmpl
xchg
cmovs
sub
adc
inc
push
jns
cwtl
outsb
xchg
int3
cltd
push
add
mov
fwait
std
xchg
insb
int3
jno
jmp
jo
push
push
jl
idiv
inc
xchg
leave
dec
dec
sbb
add
mov
cmpsl
subl
into
inc
scas
cmp
mov
enter
shrb
cmc
jne
pop
fsub
pop
movsb
aad
fdiv
push
push
les
jl
cli
lds
adc
dec
pop
shrl
cmp
mov
inc
lods
pinsrw
add
lahf
push
lods
fildll
adc
loope
cld
jle
and
and
sub
fstpl
and
rorl
mov
negb
adc
adc
ds
insb
fisubs
loope
adc
dec
xchg
fcmovnu
inc
adc
orb
mov
leave
sub
jmp
push
inc
int
and
ja
xchg
mov
mov
movsb
test
dec
test
inc
adc
sub
ret
fdivr
xrelease
push
sbb
cwtl
pop
sahf
xor
inc
popf
dec
jns
rorl
in
mov
jo
cmpsb
gs
xchg
mov
addr16
out
mov
jno
xchg
montmul
cmpsb
add
and
adc
jmp
adc
aam
mov
fnsave
xchg
mov
sub
out
push
cwtl
out
setbe
arpl
jp
push
aam
pop
shll
lret
scas
cltd
cmpsl
scas
mov
jecxz
in
or
cltd
pop
dec
xchg
icebp
push
push
sub
dec
ret
movl
icebp
mov
es
mov
outsb
lret
dec
fwait
dec
out
negb
inc
and
cs
xchg
push
mov
loop
std
sahf
rol
dec
imull
mov
xchg
ds
je
outsl
dec
xor
jmp
sahf
push
loope
rol
lret
loope
rcr
hlt
sbb
dec
cmp
pop
push
cmp
xchg
or
fstp
sub
arpl
mov
imul
enter
mov
or
or
cltd
pop
dec
imul
shrl
push
movb
fwait
xor
inc
outsb
addr16
push
inc
push
outsb
insl
pop
imul
fsubr
aad
push
rcll
xchg
fcmovnbe
rcrb
addr16
pop
xchg
xchg
mov
rorl
pusha
inc
sbb
inc
mov
xchg
xchg
inc
aaa
ror
jne
pop
mov
scas
xchg
pop
and
iret
xchg
pop
jecxz
enter
and
sub
and
push
pop
ss
xchg
outsl
pop
and
cli
push
pop
jno
mov
dec
inc
mov
jae
rclb
sbb
mov
and
inc
stos
mov
sarl
and
mov
sub
leave
mov
or
cltd
fsubrl
cmp
cmpsl
loopne
mov
rolb
ss
test
rclb
insl
and
fdivs
jecxz
jns
loopne
aaa
das
rorb
cmc
adc
xchg
dec
clc
jmp
jae
inc
es
outsl
lret
enter
daa
loopne
fldl
aaa
scas
setno
imul
xchg
lret
insb
xchg
lds
sbb
push
mov
and
ret
out
dec
xchg
jmp
imul
fistpll
sub
cmpsb
enter
fisubs
jo
and
aad
repz
xchg
lock
sbbl
push
jne
and
arpl
mov
and
cmpb
inc
jmp
fcom
popa
sarl
stc
dec
jno
fs
fsubp
jne
lea
clc
push
sub
leave
popa
inc
ja
sub
in
adcl
pop
adcb
popa
cmp
aas
div
mov
incl
sbb
pop
and
flds
xchg
push
sbb
stos
das
inc
ljmp
lock
iret
pop
in
sar
aas
jne
mov
lret
lret
es
push
lret
cltd
test
je
lock
jae
lretw
and
xchg
and
and
les
adc
push
test
arpl
inc
pop
mov
dec
mov
fstl
push
jnp,pt
mov
icebp
xchg
push
adc
fwait
add
xchg
push
ja
imul
je
jl
xorb
and
arpl
push
dec
jae
xchg
insl
bound
or
add
sub
fnstenv
mov
push
mov
pop
inc
jmp
mov
jns
mov
and
jg
popf
ret
add
int
mov
js
inc
cmc
add
jecxz
out
push
ja
jnp
cmpl
push
cltd
sub
adc
aad
outsl
sub
inc
in
push
push
xchg
fsubs
iret
test
jbe
fisttpl
cltd
scas
pop
add
jns
int3
xchg
or
stos
dec
addr16
mov
push
sbb
mov
xchg
mov
sub
cltd
out
ja
xlat
jno
icebp
fcoml
int
out
xchg
into
iret
pop
iret
pushf
or
xchg
ret
repnz
cmp
and
sahf
xchg
andl
and
adc
dec
lods
push
test
push
cmp
je
jns
mov
xchg
pop
push
dec
in
sbb
leave
fadds
sahf
jbe
xor
nop
call
or
push
clc
cmp
inc
mov
movsb
movd
stos
in
in
and
inc
pop
fbstp
hlt
lret
outsl
std
int
notb
xor
cltd
je
or
inc
incl
adc
xchg
in
filds
je
xchg
aaa
xchg
sbbl
mov
push
paddsb
inc
jl
es
mov
pop
mov
xchg
out
inc
shr
cmpsb
mov
jae
inc
leave
and
pop
push
out
dec
mov
cmp
add
cmpsl
dec
mov
xchg
jnp
int
push
cmpsb
mov
dec
imul
add
push
in
adc
push
mov
imul
ja
mov
pop
inc
int
mov
loope
out
lcall
ret
xchg
in
repz
iret
mov
dec
jnp
cmc
leave
jecxz
adc
cmpsl
adc
aad
cmp
push
and
in
mov
lcall
in
inc
mov
inc
add
addr16
out
dec
int
mov
sbb
std
aaa
iret
jmp
mov
sbb
inc
cmpsl
out
shrl
sub
sbb
add
push
mov
xlat
jle
fistpll
push
mov
movq
mov
cmpsb
sbb
mov
nop
jnp
xchg
xchg
pop
cmp
stos
or
cmp
pop
dec
mov
les
mov
adc
ret
sbb
out
enter
stos
in
cmpb
movb
dec
jp
sbb
mov
rcll
les
int
or
rcr
xchg
mov
test
iret
jmp
fadd
in
adc
fnsave
add
dec
mov
inc
adc
xchg
mov
add
mov
in
jle
in
add
pushf
dec
idiv
mov
fistl
test
in
and
push
add
cs
jle
loop
addr16
shrl
mov
cli
lgs
mov
inc
push
xchg
mov
inc
mov
mov
cmpsl
es
mov
jecxz
in
orb
mov
cmp
scas
xor
or
cmp
inc
or
xchg
gs
mov
xchg
and
outsb
xlat
js
adc
jle
mov
xchg
add
jl
in
stos
es
xor
in
mov
loope
scas
cmpsb
xchg
push
jnp
mov
xchg
in
sbbb
lcall
sub
jmp
jl
iret
out
jns
test
mov
mov
rol
out
mov
push
fwait
out
adc
and
xchg
in
xor
dec
or
mov
lods
outsb
and
mov
sbb
cmp
cmpsl
in
cmpb
cmp
mov
mov
xchg
call
mov
push
push
inc
cmpsl
cmpsb
sub
push
out
adc
in
jl
push
inc
scas
mov
and
iret
pop
mov
test
mov
mov
mov
push
push
lea
or
cmpsl
xchg
mov
imul
sbbb
jl
push
sbb
push
clc
ds
shll
test
sbb
shll
dec
out
mov
add
dec
mov
mov
call
dec
in
test
adc
rorl
daa
adc
xor
push
mov
das
cmp
mov
pusha
ret
push
or
pop
addr16
shrl
mov
mov
push
popf
es
lods
jne
test
les
xchg
dec
les
cwtl
or
call
iret
pop
fnstcw
or
arpl
add
jle
clc
jecxz
dec
mov
mov
inc
mov
dec
mov
push
cmp
es
fcomp
xchg
lods
add
pop
dec
test
rcr
push
out
imul
mov
iret
pop
mov
in
in
jmp
push
push
add
or
fisttpll
lods
daa
push
mov
jmp
les
mov
leave
in
xchg
jle
add
jl
mov
xor
mov
jne
push
xchg
fisttps
insl
xor
cmpsb
jae
xchg
xor
pop
dec
adc
push
mov
das
in
add
cmp
jbe
lret
jmp
pop
sub
popf
negl
repnz
nop
adc
fldcw
fldl
fbstp
and
notb
and
not
movsb
adc
xor
add
aad
ffreep
fldl
outsb
push
mov
jmp
lret
mov
inc
mov
inc
sub
dec
es
lock
cmp
iret
aam
mov
cmc
int
cmpsl
ret
into
xlat
inc
int3
cmp
cli
outsb
dec
mov
iret
int
cmpsb
mov
xlat
inc
cmp
data16
inc
xor
jge
xlat
cwtl
ret
int3
push
out
lret
les
lods
mov
jbe
add
inc
lods
js
push
mov
fldt
sub
and
xchg
out
sbb
push
shl
mov
xor
mov
in
cld
mov
subl
lods
mov
jge
push
out
dec
clc
enter
adc
incl
xlat
push
add
jo
fndisi(8087
div
pushf
xor
into
ret
jmp
outsb
cli
lds
cs
ja
sub
mov
inc
mov
mov
jge
sbb
out
push
push
push
sahf
leave
dec
int3
xchg
cmpsl
aad
push
divl
mov
push
ja
das
aas
push
mov
mov
sbb
push
jbe
lret
in
lods
notl
stos
mov
cmpsb
xchg
sub
jmp
xchg
push
jb
pop
leave
inc
cltd
pop
mov
lret
lret
adc
mov
insb
pop
ss
xchg
in
mov
cmp
test
lods
lret
xor
pop
or
mov
out
js
daa
sahf
pop
shr
movb
fs
mov
pusha
aad
repz
jl
lock
in
cs
in
mov
inc
ficoms
xchg
sub
test
inc
lret
push
lods
mov
adc
loope
push
push
mov
or
popa
sbb
lret
enter
aas
scas
push
mov
shl
mov
push
int
leave
std
xlat
mov
lods
int
adc
jge
push
fidivl
fcmovnbe
adc
inc
add
add
dec
push
sbb
out
xor
test
mov
aad
sbb
scas
icebp
fisttps
ds
mov
in
xor
dec
rorl
push
mov
push
mul
mov
pop
mov
out
mov
ss
jge
outsl
clc
iret
push
pushf
sub
or
pop
mov
push
xor
cmpsb
filds
sub
leave
jl
lock
and
movsb
cmpsl
xchg
sub
inc
mov
mov
inc
pop
or
mov
das
stc
sub
jbe
aaa
sub
das
scas
adc
xor
roll
ja
pop
and
push
jl
xchg
cmc
pop
test
je
popf
push
cld
lods
ss
out
push
and
ja
fimuls
mov
ja
icebp
iret
lret
cmp
pushf
cmp
clc
jbe
out
xchg
std
push
or
leave
jle
adc
jns
add
js
mov
sub
es
push
cld
out
cmp
jb
xchg
dec
and
iret
or
cmp
jg
movsb
jb
inc
jbe
shrl
das
popf
cmc
test
or
lret
ja
pusha
mov
inc
pushf
push
jmp
in
hlt
stos
xlat
xlat
cmp
fcmovne
sub
cmp
jle
movsl
add
fwait
divb
leave
out
aas
mov
jp
pop
sub
enter
push
orps
cld
xchg
xchg
xlat
lcall
pop
testl
add
push
dec
rclb
mov
mov
shl
adc
es
insb
push
mov
pop
and
adc
mov
push
xlat
ror
inc
out
push
inc
iret
add
icebp
mov
dec
mov
cmpsb
loope
or
lret
jmp
xor
inc
cmp
pop
mov
lds
testb
xchg
and
enter
ret
cmpsb
dec
ljmp
sub
mov
jmp
push
rcrl
stos
add
xchg
pusha
cmpsb
in
lods
adc
or
mov
pop
xchg
cmpsl
out
sub
out
mov
mov
mov
cld
jge
into
lcall
fnstcw
test
iret
dec
gs
mov
inc
mov
rcr
xchg
mov
cwtl
cmp
push
ror
dec
sarl
scas
flds
pop
jecxz
dec
jge
xlat
cld
mov
leave
popf
mov
xchg
push
lret
std
jbe
vandps
push
sub
lret
pop
ret
xchg
scas
into
insb
jbe
pusha
lock
jl
add
dec
std
in
vpcmpeqd
pop
iret
lods
pop
mov
cmp
dec
not
sub
outsb
pop
jbe
mov
stc
loope
aam
mov
lods
adc
bound
in
inc
ret
out
or
aad
fs
push
cmp
lret
loop
cmpsl
pop
dec
movsl
cmpb
faddl
mov
negl
lret
repz
push
cmp
in
xlat
insl
fcmovb
daa
iret
enter
adc
rcrl
adc
in
or
dec
ret
fldenv
cmp
sbb
fistl
pushf
and
roll
jp
pusha
inc
shll
arpl
out
popa
ret
out
dec
in
popf
cmp
push
sbb
adc
fmulp
popf
sub
mov
adc
dec
in
fdivs
mov
dec
inc
add
movsb
loopne
xor
iret
pop
dec
sub
pop
cmpsl
mov
and
in
adc
inc
inc
xchg
lcall
cmp
stos
dec
mov
push
push
inc
std
lods
imul
mov
dec
pop
enter
jle
sahf
iret
sub
iret
jecxz
mov
push
mov
ret
mov
xchg
aas
in
push
scas
movsl
pusha
enter
mov
jl
das
repz
jb
ja
movsb
pop
push
mov
ds
pop
inc
stc
out
mov
pusha
lock
or
fsubrl
popf
movsl
dec
ljmp
push
loop
jmp
int
pop
iret
mov
jnp
dec
shrl
es
sub
mov
leave
jl
dec
shrl
lret
je
sbb
ret
inc
repz
mov
pop
into
push
sar
push
adc
add
pop
sub
xchg
cmc
inc
stos
push
loope
into
ss
sbb
iret
add
pop
xor
or
in
or
and
daa
pop
pop
fldenv
fidivs
scas
cmpl
pop
or
push
lods
in
xlat
incl
and
pop
aaa
mov
inc
or
aad
inc
stos
sbb
xor
pop
sbb
lret
ds
sbb
add
jae
lods
push
frstor
testl
lret
call
scas
lret
jl
test
add
mov
outsl
cmpsb
jmp
mov
mov
jbe
out
test
repnz
jbe
adc
and
or
push
mov
into
mov
cmpsb
sbb
scas
leave
mov
push
jbe
dec
fsts
fisubrs
es
xchg
in
sahf
negl
es
mov
lock
xchg
stos
xchg
inc
pop
pop
mov
and
insb
cmpsl
cmp
push
and
imul
mov
jbe
push
fiadds
push
adc
lret
std
push
or
fs
mov
dec
cmpb
mov
mov
sbb
dec
inc
cld
comiss
xchg
nop
or
push
jmp
iret
sarl
outsb
or
or
sub
aaa
cmp
mov
inc
xor
cmpsb
cmpsl
adc
out
lds
jb
outsb
leave
in
test
stos
notb
mov
lea
leave
push
sbb
lret
pop
inc
lods
ret
cld
lods
iret
iret
insl
data16
mov
lret
jp
xchg
in
out
rcrl
std
push
movsl
jmp
jb
mov
mov
pop
xor
push
in
sbb
fbstp
push
cli
mov
leave
jecxz
cmpsb
sub
out
xchg
jbe
or
push
lret
ljmp
out
pop
sub
vpmulhw
mov
sbb
cmc
ret
and
cmp
jb
into
leave
in
dec
mov
into
inc
pop
iret
fnstenv
leave
aaa
pop
jae
aas
lods
lret
clc
or
xchg
aam
maskmovq
lods
cmpsb
fdivrl
xlat
pushf
mov
adc
pop
js
mov
gs
movsb
cmp
scas
int3
pop
mov
test
inc
mov
jb
mov
cmpsl
xor
pop
inc
ja
call
cs
ss
in
repnz
decb
or
enter
test
or
xchg
inc
idivb
mov
mov
loop
adc
xchg
inc
fistl
dec
pop
mov
in
cmpxchg8b
mov
push
xchg
lock
ffreep
fstl
add
mov
std
test
mov
lret
popf
add
roll
stc
lret
inc
out
stos
mov
mov
cs
fnstenvs
or
inc
test
mov
inc
dec
ljmp
push
das
lret
cld
push
push
divb
ret
nop
sub
xor
push
mov
mov
lods
or
dec
in
pop
rcll
fnstenv
lods
mov
ss
or
mov
int3
jl
aam
cmc
jecxz
fistpll
fstl
mov
mov
push
or
test
and
enterw
jge
mov
inc
testl
sub
xchg
inc
mov
es
fnstsw
lea
jle
popl
bound
icebp
jmp
ss
testl
lods
sub
xlat
scas
in
push
cmpsb
push
movzbl
sub
movsb
mov
fldl
daa
hlt
stos
mov
and
jmp
sub
sub
sti
or
in
les
clc
es
fstl
jle
xchg
shrl
mov
dec
mov
sub
cmp
out
mov
xor
int
dec
mov
xor
inc
mov
ja
aaa
inc
inc
or
pop
mov
leave
and
stos
mov
idivb
mov
out
nop
dec
out
jge
dec
pop
mov
pop
sarb
mov
cmp
iret
push
sti
cmpsl
pop
sbb
inc
mov
pop
insb
push
sahf
or
add
leave
ja
std
mov
leave
inc
xchg
push
sub
sub
jl
out
fdivr
aaa
mov
scas
jmp
mov
adc
jp
inc
js
cmpsl
test
xchg
into
inc
jne
jle
push
adc
shrb
xchg
xchg
aas
push
jmp
mov
push
push
leave
popf
ret
mov
lahf
sub
arpl
call
mov
push
sub
push
out
stos
jle
and
pushf
in
icebp
mov
push
ret
pushf
jo
inc
inc
std
mov
adc
int
fst
mov
lret
or
stos
cmp
push
nop
add
imul
mov
pusha
fnsave
add
mov
movl
inc
iret
xor
xchg
fcomp
cmp
rolb
mov
cld
aaa
push
cmp
sbb
inc
testl
sbb
xchg
or
outsl
sub
adc
xlat
mov
leave
sbb
leave
push
cmpsb
inc
cmp
jb
dec
mov
pextrw
cmp
ss
arpl
mov
leave
jge
fidivrl
lret
in
xorb
iret
aas
push
cmp
cmp
sub
jg
daa
roll
cmpsl
nop
jns
fadds
pop
lret
ss
pop
lahf
lret
fsubl
clc
ret
inc
fninit
icebp
pop
leave
fildll
scas
push
rcll
adc
test
mov
imul
or
or
jbe
fistl
insb
iret
into
inc
cld
adc
cmpsl
push
inc
xchg
mov
leave
ja
adc
popf
arpl
or
dec
sub
mov
pop
push
mov
ds
int
popf
stos
sbb
ds
test
imul
mov
or
iret
fstpl
cmpsl
xor
iret
xchg
ret
leave
ljmp
das
adc
or
mov
lock
pop
add
fisubl
in
loope
fcoms
pop
in
bound
lret
ss
icebp
mov
cmp
addr16
in
pop
lcall
popf
test
mov
adc
mov
push
inc
add
push
add
fnstcw
loopne
mov
lret
femms
push
mov
jmp
mov
es
int
add
insl
xchg
cmp
inc
cmp
mov
or
es
dec
daa
shrb
jnp
imull
aad
mov
sbb
fnclex
mov
jbe
mov
dec
mov
fbstp
pop
rcrl
pop
rcll
pusha
in
lods
xchg
roll
mov
fs
pop
and
adc
es
mov
dec
mov
adc
hlt
ss
das
or
es
cmpsb
add
adc
frstor
movsb
in
sahf
mov
xchg
xchg
adc
inc
cmp
int3
fucomip
data16
xchg
mov
sub
push
lahf
lock
pop
or
and
divw
mov
out
xor
adc
lcall
and
lods
ss
cmp
into
stos
mov
jecxz
aaa
sub
shl
or
dec
xor
mov
sbb
xlat
outsb
mov
push
or
aad
into
or
dec
iret
add
xchg
and
stos
cmp
cld
out
pop
jb
mov
pmulhuw
sbb
push
sahf
xlat
jge
fnstenv
push
push
out
fstpl
aas
cmpsl
mov
test
icebp
leave
outsb
movb
test
dec
dec
ljmp
dec
enter
movsl
cmp
push
lods
push
out
sub
fwait
mov
pop
cmp
fsts
push
loope
movups
xor
addr16
cmp
cmp
repz
xchg
popf
pop
nop
adc
shll
jmp
push
mov
push
aaa
clc
lcall
sbb
scas
std
mov
aad
mov
cmp
stc
pop
jg
add
shll
iret
lock
out
loop
inc
test
xchg
xor
xchg
pop
insb
ds
shrb
xchg
arpl
push
mov
or
out
and
daa
ljmp
dec
popl
pusha
test
ret
jbe
out
movl
or
fcompl
xbegin
add
xchg
repz
or
lods
xor
or
adc
js
mov
adc
test
cli
out
adc
dec
leave
leave
and
xchg
mov
jmp
bound
call
testb
push
mov
filds
xor
clc
push
pop
xchg
mov
fistps
pop
cmp
stos
mov
inc
xchg
es
lea
iret
lret
sbbl
xchg
sub
fcmovnb
lret
xor
shll
movsl
adc
add
push
add
orl
sbb
cmpsb
add
xchg
ret
dec
jecxz
ret
stos
mov
mov
call
adc
mov
adcb
clc
mov
adc
pop
add
outsb
adc
pusha
sbb
cmpsb
out
or
mov
push
fwait
adc
sub
inc
rorb
cmp
mov
mov
dec
pop
mov
lods
lcall
lods
cli
cmpsl
bound
inc
data16
shrb
rcrl
daa
iret
inc
pop
scas
sbb
jp
popa
cs
push
jae
imul
mov
mov
mov
sbb
filds
jg
jecxz
mov
adc
aad
jbe
jle
daa
loop
cmpsl
inc
mov
lahf
outsl
jno
ss
in
pop
mov
fadds
add
sbb
mov
mov
jecxz
stos
aad
std
cmp
fcmovnu
loope
add
dec
pop
or
mov
ja
mov
xchg
test
add
in
pushf
push
pop
mov
cmp
movsb
iret
movl
mov
fnsave
jmp
mov
and
sub
add
mov
ljmp
and
mov
out
int
rcpps
mov
aad
jmp
lret
mov
in
xchg
negl
ret
and
jmp
xchg
leave
andb
addr16
push
sbb
out
jne
ret
fld
sarl
repnz
decl
push
inc
jns
mov
ret
and
jno
movl
sub
jmp
jp
out
push
in
movsl
pop
xchg
push
ret
imul
push
pop
sti
cld
imul
xchg
add
push
pop
sub
out
lods
sahf
movl
sub
and
in
push
addl
enter
fidivrl
int
negb
push
mov
repnz
insl
orl
sbb
cmp
xchg
sahf
loopne
cltd
xchg
and
loope
cmpsl
pop
pop
stc
xor
dec
das
aad
pop
or
out
mov
enter
icebp
adc
int
or
mov
mov
pop
dec
nop
icebp
test
sbb
out
jp
imul
pop
add
loopne
pop
aas
leave
jge
sub
cmc
sub
pop
and
inc
cmp
cltd
cwtl
fwait
enter
hlt
xor
mov
mov
in
mov
adc
dec
push
sbb
lret
mov
rol
in
jo
inc
sub
lock
mov
lods
cmc
push
jle
repnz
mov
sti
in
leave
mov
aam
fcmovne
pop
jp
pusha
push
les
jmp
xchg
jbe
arpl
jmp
fldl
ja
xor
aas
inc
cmp
cld
addr16
mov
test
pop
jbe
mov
nop
mov
jge
mov
daa
xor
cmp
ljmp
outsb
mov
and
movsl
lods
rcr
int
shll
cs
fcoml
sbb
imul
cld
sarb
int
iret
xlat
xchg
add
stc
sbb
int3
sbb
mov
test
push
int
push
jp
or
ret
push
aad
xchg
outsb
adc
inc
sub
mov
sahf
pop
shrl
gs
insb
je
and
add
xlat
xchg
lods
iret
dec
adcl
in
or
dec
push
mov
shll
cmp
adc
lahf
aam
pushf
jge
add
mov
imul
in
xchg
notl
jb
add
mov
ret
or
cmpsl
scas
inc
and
sub
adc
lds
jmp
push
rorb
fidivs
jl
aas
pop
pop
add
popa
sbb
xor
lret
xor
ds
insb
rorb
xsavec
in
or
sub
pusha
mov
push
xor
adcl
or
pop
mov
sub
jb
cmp
inc
loope
adc
sbb
gs
inc
mov
aad
mov
push
outsb
stos
repz
pop
sbb
jecxz
push
pop
scas
add
push
notl
xor
inc
sbb
push
lea
mov
cmp
addr16
adc
in
sub
popa
jae
mov
mull
pop
pop
stc
leave
push
xor
in
xchg
add
addr16
icebp
sbb
xchg
mov
sbb
imul
int3
test
jnp
int
cwtl
pop
aad
cltd
pop
push
jne
mov
je
xor
movsl
fs
push
push
aad
das
lods
stos
pop
fdiv
out
sub
inc
les
nop
cmp
inc
rol
shl
lock
mov
dec
lea
pop
loop
mov
stc
push
ja
aaa
addr16
inc
sbb
xor
mov
push
mov
mov
mov
nop
movsb
lea
sub
int3
arpl
add
movl
cmp
and
scas
and
fisubrs
xchg
mov
fmul
test
pxor
clc
cwtl
and
mov
lret
int3
xchg
cs
dec
aam
jbe
adc
mov
andb
or
push
sbb
movsb
lcall
and
pslld
cltd
ljmp
fdivl
in
and
out
adc
and
iret
pop
popf
jno
adc
and
xchg
push
fs
bound
jge
shr
jp
cmp
xor
jno
adc
push
ja
sbb
shrb
outsl
xchg
jnp
pusha
push
cmp
cmpsb
mov
fucomip
mov
dec
and
addb
fwait
outsb
pop
in
sub
xor
mov
outsl
test
cld
rol
mov
or
and
push
xor
cmp
mov
jecxz
mov
adc
add
fstpl
mov
fistpll
gs
pop
cmp
sbb
push
popa
dec
dec
mov
xchg
inc
daa
dec
scas
mov
sbb
push
movsb
imul
adc
adc
movl
xor
mov
scas
in
hlt
cmpsb
cmc
aad
adc
testl
sub
arpl
clc
push
mov
mov
cmpsl
in
mov
fildl
ja
mov
aaa
test
mov
jnp
sbb
push
ss
push
in
out
leave
inc
cwtl
inc
jle
icebp
sub
fadd
and
jl
ss
inc
aad
jno
out
test
xchg
jge
inc
cmp
repnz
push
lcall
in
xor
clc
xchg
add
js
in
mov
movsl
pop
sbb
mov
scas
sbb
jl
mov
aam
cli
cmc
lds
cltd
iret
scas
in
add
outsl
mov
push
incb
sub
or
clc
pop
pop
add
inc
daa
push
je
xor
loope
out
outsb
push
movl
push
add
or
mov
mov
or
mov
fs
out
in
lahf
xchg
xor
inc
aam
out
pop
aas
lods
popa
dec
jecxz
xchg
inc
add
and
sti
xchg
loopne
lret
cmpb
imul
movl
shrb
fisttpll
ss
int
mov
push
out
dec
arpl
adc
or
sub
lock
repnz
aad
lods
pop
fadds
jno
xor
movsb
int
lahf
shrb
les
jae
cs
rcll
stc
add
push
in
or
mov
adc
stos
pop
sbb
popa
jns
int
inc
ja
dec
fadd
fcomps
jmp
mov
inc
addr16
std
lret
and
inc
pop
cmp
mov
fwait
iret
mov
outsb
dec
sbb
xchg
push
push
pop
int
sbb
jne
test
roll
je
inc
in
xor
ja
lahf
jl
dec
xor
test
leave
fs
mov
sbb
mov
sbb
add
xchg
xchg
jl
addr16
xchg
inc
and
cmp
imul
pop
sub
jg
dec
jmp
jo
cmp
into
enter
in
movl
scas
adc
xchg
jp
and
mov
int
in
out
mov
dec
in
push
daa
jbe
jns
shlb
sbb
mov
push
int3
mov
test
mov
sbb
bound
std
pop
adc
shll
jg
xchg
divb
bound
xchg
jo
and
mov
repnz
push
add
xchg
mov
outsl
push
loopne
mov
faddl
movl
aad
cltd
xchg
xor
inc
repz
outsb
jecxz
in
test
cmp
leave
xchg
popa
aam
mov
push
xchg
adc
xor
mov
mov
pop
fwait
inc
scas
push
cmp
or
mov
adc
repz
aas
out
pushf
test
sub
scas
cmp
adc
add
lods
sub
push
mov
cltd
or
push
aam
cmp
je
add
inc
jmp
cmp
fadds
jg
mov
out
loopne
xchg
xor
dec
cmc
jno
lock
pop
cli
mov
cwtl
ljmp
inc
aas
mov
mov
inc
js
fiadds
lods
inc
cmpsl
sbb
loopne
mov
jns
jmp
push
push
xchg
xor
cmpsl
test
pop
adc
shll
jo
out
lods
cmpsl
jne
fcmove
and
inc
loopne
dec
dec
inc
hlt
std
mov
pop
xor
push
rol
sub
shr
ucomiss
lods
div
pusha
rcrb
fstl
add
push
jg
jb
addl
les
es
mov
leave
sbb
sarl
jmp
dec
lret
pop
add
pop
mov
mov
ss
out
in
outsl
xchg
or
mov
aad
push
sub
stos
int
pop
cmpsl
jb
leave
jecxz
add
cmp
cwtl
inc
pop
arpl
sub
and
addr16
push
mov
imul
arpl
jae
jmp
test
adc
mov
out
sbb
inc
leave
das
adc
loopne
loop
addr16
out
sub
aam
xor
push
sub
bound
or
repz
sarl
and
sbb
xchg
mov
call
inc
leave
mov
mov
cmpsl
sbb
leave
pop
fwait
and
ficomps
fstpl
inc
imul
mov
add
pushf
test
movl
push
sbb
push
iret
fwait
int
or
out
xchg
adc
inc
je
and
jmp
mov
xor
lret
pop
or
pop
inc
ljmp
fstps
adc
push
sbb
leave
fimuls
push
es
jae
or
cmp
mov
out
rorb
bound
adc
lods
cmp
xor
inc
mov
jno
cli
lea
xchg
push
in
cmc
sub
jae
sbb
mov
dec
repnz
ljmp
cmp
iret
aam
lcall
rcl
push
mov
push
leave
cli
pop
push
pop
mov
dec
or
fdivp
dec
push
sbbb
insl
outsb
pushf
sbb
sbb
inc
aas
sub
ljmp
and
sbb
pop
mov
sbb
repz
pop
cmp
cld
and
neg
xchg
shrb
xchg
mov
xchg
push
ja
push
add
loope
cs
hlt
mov
js
or
fstl
sub
je,pt
ret
aad
cmove
xchg
jg
insl
daa
mov
mov
js
es
add
out
mov
imul
scas
sub
fcmove
sbb
icebp
leave
inc
movsl
push
sub
outsb
cmp
mov
jp
nop
jne
call
lret
push
cli
push
push
ret
inc
jmp
cmc
adc
cli
adc
jecxz
data16
dec
mov
aaa
stos
add
data16
call
lcall
pop
and
mov
mov
pusha
aaa
scas
int3
shl
dec
sti
arpl
stos
lods
push
imul
jp
xchg
mov
or
cmp
cmp
js
adc
mov
das
jecxz
mov
push
cmp
loop
lods
call
imul
outsb
xor
xchg
inc
mov
mov
jle
pop
adc
subl
repz
xlat
xchg
andl
les
out
das
ja
loope
movsl
push
cmp
mov
addr16
iret
in
ficompl
mov
mov
adc
mov
inc
fs
in
cmc
leave
stos
sti
mov
sarl
test
daa
cli
dec
jo
mov
or
outsb
pop
mov
popf
mov
cmpb
sbb
repnz
mov
insb
and
add
mov
jg
ficoms
cmp
outsl
nop
inc
xchg
stc
mov
sub
dec
and
repz
lret
pop
aad
sub
stos
in
cmc
xchg
jb
pusha
mov
mov
xor
mov
aam
mov
jle
sub
inc
cmp
or
xchg
and
mov
jmp
fildll
daa
shl
mov
loop
add
jecxz
pop
sub
xor
pop
xchg
pop
bound
lcall
xchg
dec
sti
sub
lock
ds
roll
int3
aaa
outsl
pusha
dec
cmp
iret
dec
sub
sub
bnd
insl
dec
scas
push
or
jb
int3
arpl
in
xchg
addr16
sbb
enter
inc
add
sub
mov
jmp
pop
fisubl
add
hlt
jae
lea
lods
or
or
jnp
lahf
dec
andb
andl
mov
dec
sbb
pop
mov
leave
pop
mov
pop
mov
and
push
loope
js
inc
xchg
cwtl
add
cs
sti
aas
scas
daa
or
pop
repz
leave
stos
dec
mov
sbb
xchg
iret
ds
push
inc
sti
inc
mov
lret
in
mov
clc
xchg
pusha
lret
int3
ljmp
leave
rol
xchg
and
sub
push
in
sbb
xchg
lods
mov
pusha
jg
popf
insb
call
push
mov
cmp
test
jp
mov
push
imul
aam
cmpsb
cs
cli
cmp
scas
xor
fldcw
mov
popa
dec
adc
pop
xchg
mov
sahf
mov
negl
jno
out
nop
inc
and
add
inc
stc
xor
lcall
inc
and
xchg
push
dec
jnp
push
xor
jb
jg
or
sbb
xchg
sub
adc
mov
ja
dec
xchg
dec
mov
sbb
xor
jl
fisttps
dec
push
or
std
jmp
jae
ljmp
push
or
push
loope
sbb
aam
sub
pop
and
sbb
push
add
aam
xchg
stos
push
xchg
shlb
scas
clc
fcomp
and
rorl
out
imul
or
das
pop
and
aad
and
mov
fiadds
lods
lcall
cmp
pop
call
fstps
mov
jnp
push
jl
cmp
leave
aam
fisubrl
mov
leave
mov
shl
pop
ret
icebp
mov
cmpsl
mov
push
sbb
inc
inc
push
aaa
mov
cmpsl
pushf
sbb
imul
cmc
out
pop
xchg
and
lods
shlb
fstsw
idiv
cmpsl
mov
pop
or
xchg
jne
xchg
push
leave
sub
lahf
cmp
ret
fwait
or
stos
sub
add
xchg
and
or
mov
cmp
dec
mov
jle
lods
adc
xchg
lods
testb
push
dec
testl
out
push
sbbl
or
pop
push
inc
xchg
testb
and
arpl
sbb
aam
jnp
leave
cmc
ja
imul
cmp
or
cmp
pushf
in
in
push
out
and
mov
jecxz
roll
das
outsb
shlb
iret
fldz
leave
faddl
mov
movl
ss
and
nop
adc
adc
and
cltd
jecxz
jge,pn
mov
or
inc
fs
ret
cmp
jge
dec
aaa
mov
popa
mov
fsubs
loop
mov
out
je
das
dec
mov
sub
sbb
leave
jge
scas
out
outsb
repnz
xchg
pop
add
jo
aad
iret
mov
mov
loop
rclb
repnz
sub
cmc
leave
cwtl
mov
xchg
fildll
sub
inc
outsb
aad
popf
and
sarb
jecxz
jle
jae
adc
push
dec
dec
clc
std
test
push
es
push
test
or
dec
cmc
lret
xchg
adc
add
fsubs
jle
lret
cwtl
xor
jmp
xor
test
jo
push
jbe
xor
push
ss
xlat
leave
loopne
mov
xor
out
and
imul
setbe
xchg
stos
aas
leave
aam
shrl
pop
mov
cmp
fs
jg
cwtl
popa
mov
mov
movl
or
and
jecxz
sti
fldenv
jg
jo
and
daa
ja
push
xchg
xor
loopne
add
adc
int
mov
stc
leave
ret
aas
sbb
hlt
js
repz
add
popf
cmp
subb
jle
mov
push
add
mov
mov
je
mov
cwtl
mov
cltd
ret
jae
pushw
shr
ret
loop
daa
inc
lret
pop
add
sub
int
mov
jg
mov
inc
ljmp
movl
repnz
mov
adcb
test
leave
and
sub
xchg
das
xchg
dec
xor
mov
and
mov
dec
adc
cmp
add
cmc
jg
stos
pop
pminsw
jae
pop
hlt
jns
xchg
pop
mov
cmp
test
mov
mov
popf
jg
int3
fs
iret
xchg
cmp
inc
ss
fadd
jne
mov
and
add
aad
fucomip
or
jle
push
cli
push
jb
dec
jecxz
test
dec
js
add
fisubl
push
aad
pop
mov
xor
out
leave
push
lods
lret
mov
imul
jnp
mov
outsl
or
sub
dec
fsubrs
test
clc
icebp
jmp
or
mov
fisttpll
cmp
stos
sub
jae
xor
sbb
sbb
cltd
test
rol
les
cmpsl
mov
mov
loope
and
out
fdivs
sahf
clc
jge
mov
push
sub
sub
xor
negb
fnsave
les
sub
xor
sbb
xchg
pop
cmpsl
and
lds
clc
lret
imul
negb
cwtl
xor
scas
mov
in
xchg
gs
stos
ja
jecxz
sub
enter
cmpsb
mov
and
sub
fnstcw
jmp
sub
mov
mov
xchg
add
imul
popa
es
movsb
jecxz
xchg
cmp
repz
mov
push
je
inc
fcoms
cmp
cmpsl
out
leave
sbb
testb
mov
mov
xchg
lret
mov
rcr
sbb
roll
fucom
inc
jmp
lret
fidivs
push
cmp
decl
nop
inc
cmpsb
push
mov
std
xlat
fwait
xorl
push
and
out
inc
repnz
mov
lahf
jne
stos
adc
cwtl
cmp
out
dec
scas
xchg
inc
inc
xchg
insb
push
pop
ds
in
xchg
mov
test
fdivl
flds
sbb
jp
ficoml
movsl
nop
cmp
sbb
aad
inc
pusha
scas
jecxz
pop
adc
popf
icebp
xchg
push
xor
ljmp
and
test
out
lds
or
push
int3
xor
stc
cmp
dec
or
repz
jp
adc
dec
adc
lret
or
xchg
cmpsl
test
in
dec
dec
sbb
lods
bound
xchg
xor
test
inc
push
in
add
xchg
push
aad
push
xlat
pop
jp
and
cltd
push
stc
inc
mov
es
or
adc
pop
mov
mov
pop
rorl
jle
sub
push
cmp
sbb
push
xorb
mov
in
and
push
loope,pt
enter
dec
mov
rcrb
insl
mov
mov
lock
push
mov
add
test
pop
pop
xchg
mov
xchg
and
lahf
ror
and
lcall
rorb
lods
subl
sahf
dec
jle
inc
arpl
xchg
dec
and
sbb
mov
mov
sbb
es
jp
inc
movl
out
pushf
mov
cli
out
add
mov
mov
jb
jb
sbb
test
lret
xor
push
int3
repnz
gs
int
adc
dec
cmp
js
adc
inc
testb
cld
push
xchg
leave
mov
pop
leave
xchg
out
sub
sub
cmp
pop
dec
mov
pop
jae
nop
roll
add
push
jmpw
nop
scas
cmp
cmpsl
pop
in
fldlg2
xchg
test
and
clc
pop
xlat
push
pop
int
adc
xchg
out
dec
scas
aam
cltd
jecxz
sub
push
ret
or
and
in
and
iret
xchg
cmp
add
push
xorb
fidivrl
ret
fwait
ss
cmp
dec
int
ljmp
mov
testl
out
int3
lret
sarb
cld
out
add
lods
and
mov
loopne
adc
nop
out
stos
pusha
xor
jo
int
xchg
pop
inc
add
dec
cmp
ds
jecxz
xchg
lds
xchg
mov
sub
xbegin
leave
fbld
les
jns
or
sbb
cmp
mov
sbb
in
call
jmp
mov
fwait
movl
adc
jmp
jae
sbb
push
mov
push
xchg
into
test
pop
in
pop
push
out
std
in
cmp
aad
icebp
cmp
jno
dec
lods
dec
inc
xchg
in
loopne
fdivrp
jns
push
int
and
sbb
dec
sub
add
in
push
xchg
inc
jmp
sahf
and
push
add
test
add
sahf
cmp
jmp
jnp
mov
jl
insb
inc
add
or
xchg
negb
add
mov
and
xor
adc
clc
enter
adc
xchg
out
inc
xor
pop
repz
adc
jge
rcll
sub
mov
push
lret
inc
mov
adc
sbb
inc
cld
inc
hlt
cmp
test
imul
in
and
cmp
dec
rcrl
jl
dec
push
loop
dec
fnstenv
mov
pop
mov
xchg
imul
dec
or
fsubs
or
jmp
add
shlb
push
cmp
pusha
add
mov
and
cld
leave
mov
lcall
test
xor
cmp
sub
push
cmpsb
xchg
mov
adcb
fstpl
adc
and
scas
or
xchg
add
push
test
ss
pop
mov
jnp
int
push
jae
push
add
fmulp
shrl
cmp
loope
dec
cmp
insl
pop
xor
dec
fs
pusha
int
idivl
mov
ds
fstl
mov
arpl
add
or
jg
hlt
lea
fwait
or
fdivr
daa
push
daa
ret
mov
addl
xchg
push
sti
ja
int
mov
out
sahf
js
dec
cmp
aad
inc
gs
cmp
fistps
cmp
pop
pop
xchg
stos
int
ss
lret
in
push
gs
push
sahf
out
pop
cmpsl
adc
fsubrl
ret
in
lret
aad
test
in
lret
xorb
fcoml
mov
lcall
jle
dec
pushw
out
dec
mov
push
mov
popf
xchg
shrb
adc
jne
mov
test
xchg
cmp
push
jns
out
push
movl
and
fildl
repnz
test
in
test
mov
das
push
pop
iret
xor
push
mov
pop
mov
jle
lret
adc
xchg
jno
mov
aad
lea
ljmp
insb
sub
or
sbb
adc
mov
jae
gs
fbld
xchg
rolb
call
adc
movl
inc
aad
adc
dec
mov
mov
imul
cs
mov
mov
cli
add
into
gs
addr16
cmc
or
loopne
xchg
fistpll
add
add
sbb
mov
sahf
idivl
dec
js
movl
lret
sbb
or
popa
int
and
pop
movsb
push
enter
je
dec
in
mov
outsb
mov
mov
movl
or
lret
xor
mul
pop
add
in
mov
aad
imul
rolb
or
dec
push
inc
clc
shl
sub
test
fdivl
inc
mov
jg
popf
cmpsb
clc
push
sub
lret
ds
fsubp
mov
lock
sti
add
dec
inc
insl
sahf
es
push
add
daa
push
stc
dec
xlat
jno
adc
stos
popa
mov
fsubrs
sbb
ljmp
push
and
sbb
lock
stos
xchg
in
outsb
repz
push
out
icebp
sbb
leave
mov
addr16
cmp
daa
xchg
inc
dec
cmpsb
xchg
inc
enter
cmc
dec
jb
and
sbb
cmp
cs
addl
stc
aam
dec
fwait
pusha
shlb
lods
hlt
mov
jnp
xchg
push
cmp
inc
lahf
loope
jg
and
idivb
test
imul
sub
out
mov
dec
push
insb
mov
mov
cmp
jl
pop
shll
or
sbb
aam
inc
enter
jmp
adc
mov
fwait
dec
pop
nop
sbb
int3
inc
pop
iret
lods
mov
movsl
jp
push
sbb
xor
dec
jge
pop
dec
enter
movsl
icebp
leave
aas
push
fsubs
mov
xchg
xchg
pushf
push
mov
dec
xor
mov
inc
lea
mov
fsubs
jmp
push
bound
jne
adc
xorl
sbb
int
jg
pushf
mov
lahf
pop
xor
lods
mov
jo
call
imul
xchg
mov
lock
lea
mov
sub
inc
mov
pop
jo
test
inc
out
pop
loope
scas
popa
lret
rep
pushf
adc
dec
dec
or
mov
xchg
jmp
fdivrs
aas
and
lods
inc
sub
xor
hlt
jae
rol
push
fwait
scas
and
mov
mov
cmpsl
negb
aad
fadds
iret
pop
dec
jp
sbb
sbb
xchg
inc
test
dec
aad
push
ds
inc
sub
subb
mov
xor
in
lods
lcall
or
mov
pop
stc
push
pop
ds
std
inc
push
mov
pop
es
aam
out
les
add
inc
or
rclb
je
inc
sarl
push
cmpsl
pop
aad
sbbl
mov
mov
dec
cmp
lock
xchg
popf
adcl
pop
insb
cmp
int3
mov
sub
sub
movsb
jae
jle
loop
test
fnstenv
clc
rol
mov
cmp
mov
in
mov
ficomps
sarl
add
dec
lret
ja
jmp
mov
mov
push
in
subl
aad
in
and
mov
sti
push
mov
out
mov
mov
push
rol
leave
fimuls
mov
sbb
daa
mov
test
mov
ds
mov
imul
std
pop
out
and
fcmovnb
jb
inc
ljmp
movsb
push
insl
or
xor
je
dec
loop
mov
sub
lahf
ja
imul
pop
xor
or
adc
stos
sub
addb
rol
popa
int
xchg
mov
jne
add
cmpsl
sub
imul
dec
js
mov
xchg
pop
stos
cmpsb
push
push
icebp
add
adc
into
js,pt
push
or
mov
lcall
shll
imul
mov
mov
mov
sub
xor
mov
lcall
loope
rcr
leave
add
leave
lods
xlat
cmp
fstpt
adc
cmp
dec
mov
idivb
das
cmp
pop
cmp
sub
dec
loop
sbb
dec
or
mov
lea
out
sti
lahf
sub
jl
cwtl
mov
dec
cmp
push
mov
inc
rcrb
out
inc
inc
popa
inc
jns
xchg
mov
shl
xor
bound
loop
gs
inc
fs
mov
gs
outsl
mov
dec
fbstp
ljmp
bound
lea
lods
mov
dec
xchg
pop
lahf
pushf
cmpsl
les
popa
mov
cmp
cmp
loopne,pt
cld
inc
pop
inc
imul
cmp
cmp
cmp
ds
rolb
inc
outsl
inc
addl
cmp
cmp
cmp
lods
inc
mov
ds
dec
int
ss
inc
or
mov
xor
jb
lods
mov
fwait
xchg
pop
movsl
xchg
mov
cltd
filds
ljmp
push
in
and
push
lods
shrb
or
outsl
lods
jnp
mov
sbb
cmpsl
mov
jnp
mov
div
cmp
test
inc
cmpsb
inc
mov
ret
inc
inc
inc
cli
inc
add
inc
cmp
inc
mov
test
sub
bound
jle
sahf
in
fs
gs
lcall
in
fs
int3
shlb
fsubr
pop
or
lret
xor
cmpsl
js
inc
mov
ss
in
call
cmp
fstpt
stos
stc
scas
cmp
pushf
mov
int3
ret
and
ret
addr16
fstpt
out
add
sbb
sub
insl
mov
lods
out
lock
and
sbb
pushf
cmpsl
daa
mov
mov
mov
xlat
cmp
repz
cmp
ds
out
hlt
inc
add
inc
pop
inc
jno
mov
bound
loop
gs
in
fs
adc
lret
xchg
ficoms
mov
adc
push
sub
push
lods
das
lods
aaa
lods
aas
lods
inc
lods
dec
lods
push
lods
pop
lods
cmpsl
sti
inc
push
push
xchg
push
lahf
push
cmpsl
adc
dec
lret
and
in
pop
ljmp
mov
lret
mov
cltd
hlt
test
daa
mov
and
aam
adc
mov
in
xchg
clc
xchg
add
arpl
test
mov
xor
xlat
scas
pop
test
pop
mov
sarl
fstpl
imul
cltd
inc
add
js
mov
lret
ret
in
ret
xlat
cmp
add
popa
add
aam
ds
adc
push
sub
push
imul
mov
inc
fstpl
cmpsl
std
xchg
xor
cmp
dec
push
push
ficoml
jmp
imul
mov
into
mov
xchg
cmp
les
sbb
jns
sub
ds
pop
jmp
fildl
push
adc
jecxz
push
adc
stos
loop
pop
mov
jmp
xor
repnz
testw
ds
inc
mov
lret
cmp
cmp
add
clc
lret
pop
mov
mov
stos
inc
ret
out
cmp
adc
bound
ds
mov
rolb
fcmovne
cmp
ja
imul
adc
add
add
add
add
jg
xchg
lahf
add
mov
dec
ds
bound
cmp
xchg
gs
cmpsl
gs
pop
jmp
scas
add
jmp
lods
outsl
jnp
xchg
lahf
stos
sbbb
imul
std
or
fldenv
cmp
pop
cmpsl
shl
sub
sub
loop
gs
fpatan
shll
xchg
push
int3
fs
push
or
sahf
pop
aas
adc
xchg
outsl
xchg
ja
jecxz
in
pop
in
fbld
lea
dec
pop
pop
data16
mov
mov
pop
out
imul
cltd
cs
mov
out
sub
cmp
xor
inc
imul
push
sti
jecxz
xor
bound
and
movsb
scas
and
adc
xchg
ficoms
notb
setne
xchg
pop
xchg
daa
xchg
das
insl
ds
lods
inc
lods
dec
lods
push
lods
pop
lods
lods
outsl
lods
ja
jg
xchg
lahf
lods
cmpsl
stos
scas
pop
push
mov
adc
push
fists
push
push
xchg
push
add
add
ds
pop
lahf
and
xchg
pop
and
rclb
aad
lock
insl
xchg
xor
sbb
repz
cmp
call
leave
sub
fdivrs
gs
add
ja
bt
pushf
jmp
jmp
adc
pushf
pushf
lea
jae
jmp
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
loopne
add
lods
stc
bt
not
jmp
add
dec
jae
imul
add
gs
imul
add
dec
gs
jo
gs
jb
jns
mov
bswap
mov
mov
mov
movb
pushf
pushl
ret
mov
jbe
stos
nop
imul
add
add
sarl
inc
mov
call
sti
out
mov
arpl
jl
mov
shll
dec
sub
out
mov
sbb
test
add
lea
push
pusha
mov
jmp
movl
jmp
stc
cmc
add
pushl
cmc
mov
pushf
test
call
clc
shl
mov
bt
cmp
sub
jmp
stc
sub
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
and
push
not
and
rcr
push
rcr
stc
cmc
bt
push
movzbw
shld
shld
clc
mov
btc
movsbl
sar
mov
mov
ror
mov
inc
mov
pusha
shl
sub
lea
pusha
mov
lods
lea
jl
pusha
sete
bt
not
bt
ror
ror
cmc
clc
cmc
rcl
not
setle
jmp
jmp
bswap
movzbw
mov
pushl
pushl
ret
add
push
imul
outsl
dec
jne
je
inc
jns
gs
das
and
add
lea
jne
pushf
pushf
stos
pusha
pushf
pushl
pushf
lea
jmp
call
movsb
pop
loope
mul
sti
mov
push
xchg
mov
adcl
push
ss
xchg
lods
jp
cmpsb
xchg
in
cmp
pushf
xorb
lcall
cmpsl
push
dec
dec
push
test
xchg
mov
insl
test
cs
andl
lods
call
jmp
add
icebp
popa
lea
gs
lea
fisttps
mov
sbb
rol
rolb
dec
dec
sub
pusha
call
lea
jne
jb
not
pushfw
bt
not
call
popa
movsb
lock
std
jb
loope
cs
sub
lret
in
insl
mov
xor
pop
nop
pop
mov
push
mov
pop
xchg
xchg
je
rorl
test
call
push
decl
adc
clc
lea
aaa
popl
rol
dec
pop
cmp
ja
jmp
cmp
push
andl
mov
lea
cmp
cmc
pushf
stc
xchg
call
lret
pop
aaa
cmpsl
cmc
iret
xor
jo
sahf
shll
jo
fcoml
hlt
pop
fdivl
addr16
enter
je
jno
and
pop
xlat
lea
mov
inc
jb
dec
pop
lahf
fldl
inc
fwait
jmp
jnp
pop
push
enter
adc
jne
nop
or
callw
repz
lcall
out
popa
sbb
and
adc
cmc
mov
fildll
push
mov
and
add
add
outsl
sub
add
and
pop
pushf
lea
jae
xchg
mov
jmp
add
push
insb
jae
insb
insb
outsl
arpl
sbb
pushl
xor
pop
imul
mov
mov
xlat
mov
popf
icebp
pop
adc
aas
pushl
and
pop
shll
add
mov
insb
aam
pop
loope
adc
loope
and
push
or
movsb
sbb
int
and
lcall
dec
mov
or
dec
test
into
movsl
sarb
pop
xchg
and
jp
push
xor
jge
push
push
ljmp
arpl
lea
inc
inc
mov
movsb
sarl
pusha
pop
mov
sbb
xchg
stc
js
jno
and
xor
cmp
jnp
arpl
js
inc
popf
ds
inc
clc
add
pusha
jmp
call
push
out
rcrb
mull
stc
lods
fwait
sahf
xchg
pop
shrb
jnp,pt
fcmovnu
inc
jns
xor
pop
int3
xchg
lock
cmpsb
cmp
add
inc
js
je
jb
arpl
jae
sub
mov
not
cli
pop
popf
push
test
jmp
lret
repz
sub
cltd
mov
sbb
icebp
lcall
ds
pusha
int3
mov
cwtl
out
mov
and
pop
dec
jnp
push
adc
jno
and
fwait
enter
cmp
pushf
jmp
repnz
jb
and
cmpsl
dec
les
lret
jnp
scas
mov
test
mov
in
or
movb
call
sub
pushf
lea
call
jmp
add
inc
gs
jb
arpl
fs
jae
add
dec
add
add
leave
push
call
setg
pushf
jmp
call
stos
pusha
pushf
lea
jmp
push
call
jbe
push
call
mov
roll
add
add
add
inc
push
xor
cs
insb
add
add
insl
push
outsb
insb
outsl
arpl
dec
inc
add
add
pop
incb
add
add
repnz
add
lret
jmp
add
cmc
or
add
add
pop
faddl
add
add
lret
in
add
jecxz
add
fiaddl
add
add
add
cld
add
out
lock
aad
add
adc
sti
add
sub
loope
add
cld
add
mov
add
jmp
loope
add
fadds
add
out
add
pop
cli
add
rolb
add
xchg
icebp
add
mov
add
dec
xlat
add
sub
add
sub
add
inc
loopne
add
xlat
add
pop
pop
add
pop
fadds
add
add
xchg
in
add
addl
add
incl
add
add
add
add
idiv
add
clc
std
add
pop
in
add
mov
loope
add
add
add
add
cltd
add
add
ljmp
out
add
inc
add
add
xlat
add
add
add
and
jecxz
add
add
add
cli
add
mov
add
pop
faddl
add
add
add
ljmp
add
insb
jae
jb
jo
outsb
inc
add
ljmp
je
mov
orb
adc
adc
fcompl
stos
and
jl
std
inc
ret
and
push
dec
test
xlat
nop
js
jecxz
and
mov
lods
inc
sahf
sub
cld
insl
mov
imul
mov
and
aaa
xor
rclb
pop
test
push
insb
xor
test
dec
jge
das
lcall
cmp
cmp
dec
xchg
test
sbb
xchg
sbb
cmp
pop
movsb
push
sub
aad
xchg
push
lds
enter
inc
and
cwtl
cmp
pop
push
mov
cmp
pop
dec
sub
dec
test
outsl
xchg
int3
aas
xchg
ffreep
les
dec
xchg
xlat
mov
mov
mov
and
cmc
jae
enter
das
cmp
hlt
sub
sti
and
jmp
cmpsb
fwait
push
in
mov
loope
shrb
xor
aas
mov
jl
insl
push
sub
mov
rolb
mov
std
mov
pop
nop
scas
cmp
jne
mov
loop
insb
movsb
push
outsb
sub
inc
ds
and
test
mov
xchg
imul
mov
icebp
lds
dec
outsb
or
inc
call
lahf
xor
aad
cmc
pop
inc
notb
rol
pop
jnp
ss
fistpl
fiaddl
repnz
testl
sbb
ret
and
mov
pusha
add
jnp
push
pusha
stc
mov
jmp
pusha
pushf
sub
clc
clc
pushw
popfw
push
pushl
push
pushl
inc
pushl
mov
mov
pushf
adc
movb
mov
movw
pushf
pushl
ret
add
push
jb
je
inc
imul
and
dec
mov
fs
je
stc
dec
dec
rcr
mov
pushf
pusha
lea
cmp
mov
call
pushf
push
lea
jae
pusha
push
stc
mov
xor
pushl
push
pushf
pushf
lea
call
pusha
lea
jae
jmp
not
pushf
rol
lea
jp
cmp
cmp
sub
pushf
cmc
jmp
rol
shl
rcl
xor
call
bt
add
push
pushf
push
movb
lea
jmp
movl
lea
call
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
push
gs
imul
outsl
arpl
jae
push
xlat
ret
add
adc
mull
scas
mov
dec
or
cmp
aam
or
adc
pusha
dec
lods
je
mov
adc
mov
daa
addr16
mov
pop
jno
sbbl
test
xor
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
xlat
add
pop
incb
add
add
repnz
add
lret
jmp
add
cmc
or
add
add
pop
faddl
add
add
lret
in
add
jecxz
add
fiaddl
add
add
add
cld
add
out
lock
aad
add
adc
sti
add
sub
loope
add
cld
add
mov
add
jmp
loope
add
fadds
add
out
add
pop
cli
add
rolb
add
xchg
icebp
add
mov
add
dec
xlat
add
sub
add
sub
add
inc
loopne
add
xlat
add
pop
pop
add
pop
fadds
add
add
xchg
in
add
addl
add
incl
add
add
add
add
idiv
add
clc
std
add
pop
in
add
mov
loope
add
add
add
add
cltd
add
add
ljmp
out
add
inc
add
add
xlat
add
add
add
and
jecxz
add
add
add
cli
add
mov
add
pop
faddl
add
add
add
ljmp
push
movb
lea
je
cmp
mov
add
shl
btr
inc
pusha
mov
add
dec
pusha
mov
push
mov
test
test
test
pusha
lea
je
movzbw
sub
bswap
add
inc
or
shr
mov
bt
push
test
pusha
lea
je
cmp
add
pusha
pusha
lea
jmp
aad
btc
shld
mov
cmc
neg
neg
mov
pusha
clc
cmc
pushf
add
movb
pushf
xchg
cwtl
call
add
dec
insl
insl
dec
outsl
arpl
dec
inc
add
xchg
mov
scas
inc
add
or
gs
jne
jb
outsb
je
push
dec
add
test
and
pop
and
call
mov
sbb
ja
xchg
lret
push
rclb
push
clc
in
cmp
mov
and
cmp
cmp
jle
rcll
int
inc
dec
xchg
xor
out
mov
push
mov
ljmp
mov
and
mulb
dec
jg
imulb
pop
addr16
jecxz
dec
inc
push
cmp
cmpsb
xor
testb
and
out
xchg
mov
sub
ljmp
or
mov
cmp
call
add
inc
gs
push
dec
outsb
outsw
add
repnz
fucomip
lods
fucomp
insb
mov
ds
dec
xchg
push
repz
sub
out
fldl
lods
pop
cmp
gs
jne
jb
outsb
je
jb
arpl
jae
pushf
pusha
adc
push
jmp
add
add
add
cld
dec
add
add
and
add
add
add
adc
add
add
in
add
add
pusha
adc
add
add
push
adc
add
adc
add
add
pusha
adc
add
adc
add
add
pusha
adc
add
add
xor
add
inc
adc
add
add
pusha
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
in
add
in
add
out
add
out
add
out
add
add
dec
out
add
add
imul
add
mov
add
lcall
add
add
loopne
add
in
out
add
out
add
out
add
out
add
outsb
fs
outsb
fs
jb
arpl
inc
outsl
insl
jo
outsb
fs
jb
arpl
dec
dec
inc
inc
insb
gs
jb
jne
push
je
imul
push
gs
jne
push
je
imul
inc
outsl
outsb
imul
add
gs
outsl
outsb
jbe
jb
imul
add
gs
gs
jb
jns
dec
insl
gs
outsb
jne
push
imul
jb
add
gs
jae
popa
jo
add
gs
gs
imul
jb
push
je
insb
add
gs
outsb
jno
imul
push
jb
arpl
jae
gs
dec
insl
gs
imul
jb
add
gs
gs
arpl
insl
gs
gs
arpl
gs
outsl
outsb
je
js
add
gs
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
push
outsl
inc
jae
imul
gs
outsb
jb
imul
jb
add
je
data16
dec
inc
add
popa
je
jae
outsb
fs
jb
arpl
push
dec
push
outsb
fs
jb
arpl
imul
cs
insb
add
xor
add
add
push
or
add
jle
ds
fbld
push
rolb
inc
pop
pushf
jle
sbb
ficompl
les
and
push
and
inc
inc
xchg
adc
test
fdivrl
push
in
cmp
cmc
call
lahf
daa
cmp
sarl
adc
cmp
mov
xor
hlt
sbb
adc
mov
lret
and
xor
xchg
ss
lret
lods
pop
push
inc
sarb
into
push
lcall
or
stos
jle
mov
int3
or
loop
mov
cmc
xchg
in
sbb
mov
cmpsl
rep
mov
sbb
inc
sbb
push
push
or
adc
andl
imul
stc
add
idivb
add
fiadds
jne
aas
sarl
and
jns
push
insl
adc
sub
fwait
incl
dec
add
inc
mov
jl
jle
dec
arpl
lret
ss
lcall
dec
repnz
in
mov
mov
or
dec
cli
jmp
fsts
lea
and
lcall
jae
mov
popf
mov
inc
xchg
ljmp
xlat
push
mov
gs
and
mov
sbb
roll
cltd
cmp
mov
add
stos
sbb
adc
sbb
lahf
jmp
in
pop
shlb
cmp
jecxz
aaa
pop
jl
addb
inc
or
and
or
in
push
je
hlt
orl
popa
mov
and
mov
mov
sub
jo
mov
pop
in
leave
dec
stos
and
sbb
fndisi(8087
jno
push
aam
pop
inc
repnz
add
cli
dec
cmp
ds
enter
xchg
dec
and
decb
mov
pusha
pushf
lea
jbe
pop
pushf
pusha
pushf
pushl
ret
lea
call
cmp
sub
pushf
jmp
sub
or
mov
xor
rol
call
test
jmp
push
call
sbb
cld
sahf
test
call
push
mov
cmc
and
cmc
bt
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
fs
imul
add
xchg
test
call
rclb
mov
pushl
ret
push
pushf
lea
jae
pushf
lea
jne
pushf
jmp
push
call
mov
add
jae
popa
addr16
outsl
js
add
je
add
adc
sub
jmp
fstpt
aad
xor
into
jg
sbb
out
dec
inc
mov
xor
test
lahf
xor
out
add
repz
sbb
loope
jge
cmp
leave
test
aad
push
sbb
ret
sub
add
mov
push
jbe
pop
mov
mov
mov
xchg
je
pop
xchg
or
adc
dec
add
push
insb
jae
gs
popa
insb
jne
add
mov
fwait
mov
mov
mov
xor
test
and
dec
jnp
test
inc
pop
pop
and
pushf
mov
int3
pop
cld
pop
add
call
movsl
fisttpl
and
aad
hlt
sub
fadds
cmpsb
mov
addr16
ja
rorl
jnp
test
call
mov
add
je
inc
push
add
lret
pop
not
lea
push
pushl
mov
pusha
jmp
jmp
call
inc
push
jmp
rol
stc
sub
mov
mov
jmp
sbbb
jno
push
sbb
fidivrs
push
ds
jmp
add
mov
sub
test
jae
mov
push
jecxz
nop
dec
orl
pop
inc
fisubs
dec
jg
movsl
pop
in
cmp
sub
mov
test
pop
scas
fldl
sbb
dec
and
sbb
sbb
mov
xor
mov
int3
lea
call
call
pusha
not
cmc
pushl
bt
ror
pusha
not
cmc
clc
rol
stc
cmp
cmc
cmp
sub
std
bt
pushl
pushw
popfw
jmp
adc
mov
movb
mov
pushl
ret
jmp
bt
not
push
cmc
push
ror
pushf
not
pushf
push
jmp
call
call
mov
jmp
add
dec
gs
jo
jb
popa
je
add
movl
and
ret
push
call
and
adc
add
lcall
clc
jmp
test
jmp
mov
jnp
pusha
not
stc
stc
clc
ror
call
out
leave
xchg
xchg
leave
and
xchg
nop
add
add
xchg
mov
js
sub
out
fs
icebp
dec
pop
loopne
mov
lret
cld
jo
sbb
out
test
lods
loop
jg
std
add
and
push
sub
lods
push
enter
lret
imul
test
sbb
add
push
add
je
je
imul
inc
add
push
add
pushl
cmc
test
push
jmp
xchg
cmp
iret
cmp
adc
insl
test
insb
jne
and
loop
scas
adc
xor
cltd
push
xchg
in
mov
xor
mov
push
insb
aad
mov
xor
divl
xchg
arpl
cmp
dec
xor
rorb
clc
test
add
push
cmp
cwtl
jg
mov
add
mov
push
add
icebp
mov
scas
xor
jbe
popl
jns
dec
repnz
inc
dec
fsubrl
hlt
in
push
sub
jbe
imul
pop
call
add
xor
movsb
xchg
in
xorb
xor
pop
or
es
imul
cmp
inc
sub
mov
mov
or
add
lock
ds
cmp
mov
cwtl
jl
lds
into
cmpsl
popf
push
das
fnsave
push
loop
data16
sub
or
outsl
lds
fisttpll
das
and
sbb
jno
int
adc
cmpsl
mov
ret
lock
mov
jl
repnz
mov
add
lcall
lock
inc
mov
dec
inc
seta
setnp
mov
call
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
std
jmp
fs
jmp
push
call
push
cmc
cmp
pusha
mov
bts
lea
pusha
movb
mov
clc
test
mov
cmp
pushf
or
pushf
lea
je
sbb
shl
stc
mov
rcl
bswap
xor
mov
bt
sub
pushf
pusha
test
shr
lea
clc
cmpl
call
push
call
mov
lea
jae
push
cmc
pusha
movb
xor
jmp
push
enter
rcrl
xor
popf
or
sub
xor
insl
cli
mov
sbb
fildl
fisubl
push
in
push
xchg
ss
and
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
rorb
inc
add
mov
xor
lea
ja
pusha
inc
lea
jmp
add
dec
gs
jo
jb
add
pushf
jmp
jmp
fidivs
call
push
cmpb
cmp
mov
xor
dec
cmp
cwtl
loope
dec
int3
movsl
fcoml
lret
ja
loope
lods
and
arpl
ljmp
test
xor
jmp
or
movsl
sbbl
test
mov
out
out
xor
cmc
fstl
filds
or
mov
mov
mov
add
dec
pop
rolb
gs
rcrl
imul
pushl
ror
jmp
lods
pushl
bt
jmp
call
add
push
insb
jae
gs
popa
insb
jne
add
pop
cmpl
loope
jbe
repnz
add
and
add
dec
test
in
jl
jo
push
popf
mov
cmp
mov
push
sbb
out
fninit
leave
cwtl
sbb
xchg
lcall
xchg
add
outsl
or
enter
mov
fcmovnbe
inc
push
mov
mov
add
std
pop
and
sarb
ret
sub
xor
xchg
insl
inc
cmp
dec
shrb
and
out
test
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
test
add
or
in
add
inc
gs
je
imul
push
add
fldcw
adc
dec
imul
dec
mov
or
std
sbb
dec
xchg
xlat
and
add
xchg
bound
stos
js
dec
fnsave
xchg
mov
adc
dec
dec
or
add
mov
mov
push
sub
xchg
push
imul
sahf
into
inc
dec
ja
scas
jno
int3
aam
mov
test
imul
fdivs
arpl
outsl
inc
rolb
lods
push
or
adc
xchg
sti
orb
outsl
out
jmp
or
lods
decl
btr
dec
xor
mov
jmp
pushf
stos
jmp
pushf
pusha
lea
call
jmp
xor
in
inc
push
sbb
jmp
sub
push
out
clc
jp
frstors
xchg
fwait
into
inc
cmpb
push
incl
ljmp
pop
data16
push
xor
inc
mov
int3
aaa
loopne
icebp
fnstenv
cmc
js
fldl
add
push
pop
pop
mov
pop
popf
loope
jecxz
loopne
loopne
xor
in
xchg
ret
sub
filds
sahf
cmp
insl
cmc
push
aaa
test
leave
xchg
enter
or
or
les
in
adc
int3
and
mov
inc
cltd
mov
mov
rcr
test
cmp
cmp
sub
je
dec
push
insl
sti
ja
mov
fwait
mov
shll
ljmp
outsl
in
or
xor
pusha
adc
lcall
mov
push
pusha
dec
pusha
pushf
movb
lea
jne
pusha
lea
jmp
add
inc
gs
gs
imul
mov
adc
lea
pusha
pusha
pushf
pushl
ret
movl
pushf
push
call
push
call
mov
pushf
lea
call
pusha
pushf
pushl
lea
jl
adc
pushf
mov
lea
jae
pushf
lea
jae
push
pushl
lea
jne
push
stos
pushf
pusha
pushf
lea
jmp
add
add
pusha
clc
not
pushf
rol
test
call
pushl
mov
call
adcl
ficoml
outsb
pop
shl
dec
push
push
ja
movsb
xchg
dec
pop
mov
mov
cmp
aad
mov
push
clc
jmp
iret
jb
pusha
jmp
mov
mov
pusha
pop
mov
pushf
push
movb
pushl
ret
jmp
cmc
and
mov
push
and
pusha
pushf
call
cwtl
pop
lea
call
xor
add
push
loope
add
loope
add
fiadds
add
fldl
add
loop
add
add
cmc
addl
add
fiadds
add
loope
add
loop
add
add
sbb
add
cld
loop
add
adc
mov
mov
test
jle
clc
adc
mov
insl
jno
jle
incl
jecxz
shl
cmp
push
dec
divl
int
aad
fwait
mov
xor
dec
jno
xlat
xchg
and
sbb
push
in
incl
xchg
psubw
xchg
jae
enter
fdivrl
arpl
cmp
xchg
mov
outsb
or
int3
push
iret
aad
je
out
aad
lcall
ret
inc
mov
es
in
xchg
flds
into
fwait
cltd
xlat
mov
cltd
fsubs
aam
imulb
ficompl
jno
int
xchg
inc
lret
out
dec
push
push
add
xor
xchg
pop
movsl
sub
jo
std
ds
in
inc
adc
and
addl
jecxz
int3
pop
out
cltd
mov
outsb
xor
fstps
decb
out
mov
pop
int3
xchg
sbb
in
adc
lcall
fstpl
or
add
mov
push
leave
out
movsb
cwtd
pop
dec
mov
out
outsl
cmpsl
lcall
int
addl
data16
imul
faddl
outsl
in
xchg
cmp
dec
mov
lret
icebp
aaa
mov
or
adc
mov
ret
ret
not
outsb
inc
push
sbb
fwait
push
add
mov
fsubrs
scas
repnz
jb
push
scas
andb
cmp
out
or
in
dec
sub
mov
push
es
dec
nop
outsb
xchg
repnz
fstl
mov
je
push
scas
movsl
in
xor
sbb
mov
mov
push
cld
aaa
pop
pop
mov
mov
add
mov
ljmp
push
cltd
push
pusha
cs
cmp
or
mov
xchg
out
in
fucomip
xchg
adc
jge
inc
pushf
imul
push
and
addr16
inc
fildll
in
xchg
andl
inc
lcall
leave
hlt
mov
xchg
cltd
pusha
sbb
daa
push
jecxz
imul
aad
dec
fistps
lahf
loope
ja
mov
dec
stc
aas
imul
imul
out
rorb
or
in
imul
dec
mov
xchg
hlt
xchg
dec
push
movsb
xchg
pop
push
inc
cmp
push
pop
enter
aaa
out
lret
ss
es
rclb
dec
and
inc
or
sti
insl
jae
pop
cwtl
imul
adc
jecxz
xchg
aam
shll
push
xor
fwait
add
dec
or
xchg
jbe
rclb
pop
push
jno
sbb
xor
test
jge
insl
or
jl
dec
dec
cltd
sahf
dec
or
cltd
testb
cmpsl
adc
xchg
out
xlat
pop
in
fisubl
into
dec
cltd
dec
ret
push
sbb
fists
mov
xchg
xchg
cmpsb
pop
inc
dec
test
cltd
mov
xchg
icebp
lea
push
pop
das
ret
adc
mov
pop
push
dec
test
xchg
fidivl
xchg
outsb
std
push
leave
push
dec
inc
ljmp
dec
pop
jb
loop
lds
fldl
jb
mov
pop
mov
clc
jne
outsb
ja
sbb
push
xchg
mov
fistl
addr16
out
roll
xchg
insl
add
push
insl
push
cltd
lods
cld
sub
inc
lgs
int
aaa
dec
sub
lret
pop
in
inc
xchg
mov
call
inc
stos
cs
push
rolb
push
push
enter
inc
mov
dec
adc
cmp
xchg
adcb
mov
cmp
cmp
jo
push
push
ret
ljmp
jle
push
mov
pop
stos
sbb
mov
pop
lds
fsubrp
lcall
clc
lock
out
mov
ss
xlat
ds
mov
lea
in
mov
pop
test
dec
lret
ffreep
xchg
cmpsb
and
out
repnz
mov
mov
jp
clc
fldl
add
call
dec
test
jmp
pop
push
das
xchg
leave
adc
jmp
dec
and
mov
push
xchg
sbb
call
xchg
dec
adc
xor
iret
iret
pop
arpl
push
stos
jbe
mov
push
fst
fists
sahf
fcmovne
mov
jl
mov
cmc
pusha
cmc
stc
not
cmc
cmc
call
pushf
lea
call
bt
clc
call
pushf
inc
jmp
lea
setae
push
mov
pushf
pushf
lea
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
ret
xor
test
push
pusha
push
lea
je
push
test
mov
add
push
rcr
shl
aaa
mov
bt
clc
call
mov
mov
xor
rorb
mov
jno
orl
mov
aas
outsb
lods
fcmovu
push
push
mov
jp
js
cmp
add
fs
jae
stos
lock
inc
jge
out
test
add
push
imul
jb
je
arpl
insl
push
jae
or
mov
popf
pop
repz
and
daa
and
ret
test
cmp
stc
sti
cli
out
inc
fs
std
and
dec
leave
cmc
xlat
dec
cs
ja
cwtl
jge
push
aaa
push
sarl
sbb
cmp
sbb
mov
js
and
fidivl
aad
or
scas
cwtl
stc
cli
mov
lcall
cld
push
out
jg
push
inc
xor
add
push
imul
jb
add
add
je
je
dec
popa
outsb
fs
add
lods
roll
xchg
sub
jl
inc
out
out
call
xchg
adc
xchg
sahf
je
test
add
xchg
decl
repnz
mov
lahf
loopne
push
call
test
rolb
das
add
or
add
dec
inc
dec
popa
jo
je
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
imul
add
push
lea
jmp
cmpsl
xor
add
int3
sbb
mov
adc
inc
mov
xor
xchg
mov
adc
add
sbb
xchg
and
or
add
push
mov
inc
mov
pop
xor
sti
mulb
inc
mov
fucomi
repz
dec
and
or
add
rorb
jmp
xlat
inc
mov
loopne
cltd
lock
inc
mov
cltd
mov
inc
mov
loopne
stos
cmc
pop
and
or
add
nop
ds
cld
dec
sub
push
add
add
daa
insb
jmp
pop
add
rcll
inc
add
add
stos
xor
jge
inc
mov
pusha
lahf
sar
mov
xchg
add
cmp
inc
mov
sarb
pop
sub
rcr
xchg
imul
sbb
jmp
fs
jns
stc
es
loop
pop
sbb
cmc
and
lods
or
cmc
mov
andl
cmp
in
xor
mov
cli
mov
repnz
sub
sbb
cmp
mov
out
push
imul
pop
sbb
mov
lret
test
xchg
mov
xor
call
mov
movsb
xlat
mov
lods
dec
sbb
int3
pusha
sbb
les
pop
xor
add
add
dec
es
enter
or
sarl
and
pushf
sbb
sub
mov
inc
call
cmc
cmp
call
add
dec
inc
dec
popa
jo
je
imul
insb
jae
jb
jo
inc
add
orb
add
push
call
mov
lea
call
push
jmp
into
jo
or
loop
lds
outsb
mov
or
xor
shll
icebp
in
lret
push
and
in
dec
test
sarl
dec
mov
cmp
pusha
jmp
push
call
xchg
mov
ss
in
dec
ret
jmp
push
repz
fidivl
xchg
fnstcw
xor
push
adc
mov
jnp
into
xchg
pusha
clc
js
cli
xor
add
aad
ror
std
cli
mov
test
outsl
jge
sar
mov
in
pop
subb
cmp
push
pushf
movb
lea
jae
test
cmp
push
call
add
dec
gs
jo
gs
insb
insb
outsl
arpl
xor
jl
cld
loope
cmc
jb
fdivp
dec
cmp
aad
mov
mov
adc
and
jne
dec
lcall
aad
das
cmpsl
js
aaa
cmp
push
sbb
dec
sbb
xor
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
aaa
out
jmp
pusha
lea
jmp
pushf
pusha
pushf
lea
jne
call
push
call
cmp
imul
add
leave
insb
lahf
setp
pushl
popl
setno
pushf
lea
pushf
call
lea
jae
cmp
pushf
test
cmp
pushf
jmp
js
mov
jecxz
or
adc
pop
mov
sub
jno
ds
add
sarl
sahf
decb
aaa
out
adc
outsb
shrl
push
and
mov
ror
not
mov
push
ror
cmc
not
rol
rcl
rol
jmp
rep
not
mov
pusha
lea
jmp
pop
and
or
mov
inc
arpl
insb
mov
xchg
mov
jecxz
imul
pop
sbb
lea
jmp
sub
add
sbb
idiv
adc
sbb
adc
jecxz
xor
adc
jnp
out
add
je
fidivl
mov
pop
ret
dec
sub
cli
stc
roll
movsl
xchg
imul
jo
rorb
in
aas
mov
aas
xchg
cli
lcall
sbb
mov
rorl
movsl
xchg
aad
out
xor
push
cmp
insl
sbb
mov
dec
mov
rclb
sub
out
imul
cmp
fstp
push
sub
lock
push
push
mov
lret
dec
mov
push
mov
ret
imul
sahf
mov
jo
ja
repnz
gs
pop
pop
pop
cli
int
sub
sbb
xor
push
shlb
jmp
std
outsl
mov
je
jno
les
and
scas
cwtl
mov
rcll
cmp
ret
sbb
sub
pop
jmp
hlt
fs
push
pusha
mov
adc
loopne
and
fnstsw
aad
add
adc
cmp
pop
in
mov
fistpll
push
sti
fisttpll
pop
aas
cltd
dec
mov
add
popl
mov
pop
enter
xchg
mov
push
pop
call
cmp
adc
push
and
cmp
pushf
movsl
or
sub
xor
xchg
sbb
int
es
aas
call
mov
or
rorb
cmp
dec
insb
repnz
out
sub
outsl
jmp
testb
lret
mov
es
push
gs
cmc
fists
or
rolb
push
imul
insb
insb
outsl
arpl
jle
pushf
push
lea
call
pushf
push
pushf
lea
jmp
test
pusha
jmp
push
jmp
pushf
mov
lea
pusha
jmp
lea
jae
clc
xor
call
pushw
popfw
mov
inc
jmp
call
enter
inc
lods
stos
add
push
jbe
push
dec
cmp
mov
loop
and
das
mov
fmulp
pushl
mov
fadds
fldenv
sets
call
lea
jb
push
pushl
ret
push
pushl
stos
pushf
lea
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
cltd
test
call
or
bt
clc
pusha
mov
mov
push
mov
clc
pusha
test
test
movw
pushf
pushl
lea
je
not
or
mov
btc
mov
pusha
add
pushf
pushl
mov
cmc
mov
jmp
push
call
mov
pushl
popfw
jmp
add
push
je
push
outsb
ja
outsb
add
add
inc
jb
add
add
imul
popa
jae
inc
js
add
sahf
test
call
mov
movw
lea
je
pushf
clc
clc
pushf
and
mov
pushf
pushf
lea
jmp
shl
shl
adc
sub
mov
pushf
push
push
stos
pusha
mov
pushf
pushf
push
pushl
lea
call
push
pusha
call
push
call
into
loopne
call
add
inc
gs
popa
jae
inc
jb
outsl
jb
or
mov
call
jmp
jmp
clc
rol
cmp
pusha
sub
call
push
pushf
mov
pusha
lea
je
test
stc
push
cmc
add
pushl
pusha
mov
mov
lea
jmp
bt
not
jmp
add
dec
gs
jo
insb
insb
outsl
arpl
imul
movsb
imul
daa
cmc
in
fdivrl
ficoms
mov
lret
push
dec
sbb
cmp
inc
icebp
je
icebp
jae
dec
xorl
jnp
mov
gs
sbb
sbb
inc
cltd
test
mov
or
ljmp
and
ja
imul
ret
push
adc
mov
jae
repnz
mov
aas
lods
push
push
add
sbb
inc
mov
pop
test
outsl
fisttpll
mov
psrlw
iret
test
xchg
add
push
call
mov
lds
mov
inc
cmc
xor
xchg
lahf
jmp
push
call
cli
call
pushl
push
lea
je
lea
dec
mov
bswap
shrd
movsbw
bswap
sub
xadd
mov
shr
movzbw
mov
bsf
add
pusha
or
btc
add
add
shrd
cmp
adc
mov
pushf
shr
pusha
pusha
test
cmp
pushf
lea
je
bt
jmp
jmp
sub
xor
pop
sub
fidivl
sub
adc
jnp
mov
adc
subl
out
dec
dec
push
hlt
fdivrl
out
jp
lods
and
sbb
push
adc
shl
pushf
call
pusha
jmp
test
jno
cmp
xchg
jbe
call
fistpll
or
jmp
orb
dec
xchg
adc
aaa
adc
ja
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
cmc
pushf
addl
pusha
movb
pushf
lea
jmp
jmp
call
clc
clc
cmc
add
call
lea
jne
jmp
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
xchg
out
incl
add
je
gs
imul
push
lea
je
push
pushl
pushf
adc
push
movw
lea
jmp
push
call
adc
shl
jmp
movsbl
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
xchg
and
xchg
cmp
mov
rcrl
repnz
out
mov
movsb
fidivrs
leave
or
cmp
or
adc
adc
jmp
push
and
sub
arpl
fiaddl
sbb
and
pop
and
scas
and
outsl
test
xchg
dec
movsb
bound
daa
push
aas
cmpb
es
cmp
fidivs
testl
mov
lret
rol
fistl
flds
and
insb
push
mov
add
push
outsb
jb
imul
popa
jae
inc
add
cmc
jmp
es
pop
into
addr16
adc
mov
outsb
ret
dec
mov
and
push
inc
mov
lret
das
and
pop
push
lret
pop
push
mov
mov
push
mov
adc
xchg
pusha
js
xor
jno
xchg
push
out
push
mov
outsl
inc
icebp
popf
adc
push
nop
in
insl
add
loopne
mov
rep
das
arpl
divb
cwtl
mov
inc
nop
ja
insl
mov
or
notb
mov
fimuls
sti
fwait
mov
je
sub
fistpll
test
bound
cmp
daa
mov
or
inc
or
push
pop
stos
mov
or
mov
sbbl
or
jge
in
or
addl
and
stos
pop
cmp
push
and
jno
mov
sub
push
jle
aam
add
test
add
or
xor
or
aam
push
mov
icebp
cs
loopne
pop
jg
lods
ret
xchg
mov
cli
fwait
mov
arpl
mov
movsb
sub
cmp
mov
das
pop
dec
inc
cmp
jle
movsb
pop
push
call
xchg
rcll
popa
fs
jne
jae
jb
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
pop
jg
incb
jns
sub
clc
and
inc
dec
in
in
ror
jg
mov
dec
xor
loope
test
out
imul
insl
inc
dec
out
arpl
lods
stc
and
int
push
push
mov
pop
sbb
aad
jp
cld
lea
mov
mov
xchg
or
jp
adc
sbb
rorl
xchg
push
cs
sahf
adc
add
sbb
inc
cmpsl
inc
test
ret
es
test
fildl
inc
fwait
pop
mov
jnp
adc
test
dec
rcll
leave
mov
jl
and
mov
push
mov
stos
loope
popa
jns
arpl
push
or
mov
ror
cmp
mov
shl
sahf
cwtl
scas
jns
out
push
icebp
dec
lret
sbb
ret
xchg
sbb
outsl
out
cltd
xor
or
dec
mov
jmp
test
mov
xchg
ds
orb
sbb
insb
sbb
testl
xchg
test
call
or
add
push
lea
call
call
jno
shrd
data16
mov
ds
mov
mov
sbb
out
icebp
in
imul
mov
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
and
cmp
add
push
movw
lea
jmp
jmp
jmp
mov
xlat
leave
stc
dec
xchg
xlat
addr16
push
xor
call
decb
fstps
dec
aaa
pop
fadds
cwtl
iret
out
sti
call
push
jp
lcall
call
lahf
lret
sahf
lcall
mov
stos
push
call
pop
das
fsubs
xchg
and
pushf
jmp
or
fadds
pop
push
jbe
mov
dec
pop
sub
pop
out
fcmovne
cmp
clc
push
fincstp
jmp
adc
dec
test
dec
dec
add
push
push
and
mov
dec
testl
push
out
stos
mov
scas
cwtl
mov
cltd
movsb
lods
xor
sub
fcmovnbe
outsb
ss
insb
imul
in
xchg
pop
bound
rorl
pusha
dec
adc
jmp
push
sub
fsubrp
and
testb
movsb
inc
cwtl
stos
test
ret
mov
cmpsb
ss
push
out
int3
mov
cmpsb
sub
mov
cmp
cmp
sbb
arpl
inc
jmp
into
mull
cwtl
fwait
scas
test
adc
das
push
push
cs
pop
mov
cmp
out
orl
cmp
sub
or
push
or
xor
pop
int3
lret
push
sti
and
push
push
xor
mov
pop
xchg
inc
lcall
es
xor
push
rorl
push
leave
cmpsb
gs
inc
mov
xor
mov
adc
dec
jb
mov
push
ss
cmpl
data16
lods
call
push
push
mov
fbstp
cmp
adc
jb
push
pusha
and
dec
fistpll
xchg
push
jb
orl
dec
sbb
pusha
push
arpl
mov
cmp
mov
cmc
dec
push
in
pop
push
data16
cmp
xor
and
sarl
sbb
jp
jnp
mov
popa
ss
or
push
dec
movsl
sub
lock
add
mov
add
pop
mov
mov
mov
data16
mov
es
shl
data16
mov
addr16
xchg
inc
dec
mov
add
sub
mov
outsb
aaa
push
add
aas
sbb
cmpsb
cltd
push
fbld
fstps
mov
mov
jmp
or
mov
test
in
xchg
or
dec
pop
dec
xor
mov
bound
clc
fldl
andl
xor
ret
out
adc
out
mov
push
dec
ds
cwtl
adc
mov
mov
pop
sbb
dec
jbe
outsb
out
push
dec
dec
out
test
dec
dec
inc
iret
ds
cs
fdivrs
dec
cli
push
inc
or
outsb
xchg
sbb
lods
out
in
je
sarl
pand
mov
mov
xchg
ds
ss
push
push
cs
jl
cmc
mov
orb
call
adc
out
das
push
pop
push
js
pop
dec
std
add
int
enter
stos
scas
sti
addr16
incl
neg
xor
jne
pop
movsb
das
out
rclb
cwtl
dec
rcrl
stos
cltd
add
lahf
mov
xor
mov
imul
sbb
inc
or
loop
sub
addl
push
adc
incb
stos
jno
repnz
mov
dec
push
xor
jae
and
sub
mov
xor
xchg
or
outsl
fwait
in
dec
fs
hlt
call
jae
pop
insb
sahf
test
cld
inc
mov
cs
push
ja
popa
in
mov
or
orb
dec
lret
lcall
inc
test
adc
js
xchg
mov
jle
inc
cmpsb
pop
and
pop
scas
js
inc
repz
test
out
cmp
lret
lret
xor
aam
fadds
cmpsl
mov
mov
mov
xchg
arpl
sub
mov
xor
jb
pop
xor
notl
mov
fsub
jbe
imul
int
xchg
sub
stos
std
jne
push
xchg
cmpsl
lahf
inc
int3
aad
js
lcall
pushf
sahf
mov
mov
out
or
sub
ds
inc
int3
cmp
sahf
ffreep
cmp
add
pop
popa
leave
add
leave
pop
out
xchg
movl
xor
xchg
sub
jmp
jge
stos
pop
xchg
pop
add
out
roll
jmp
or
sarb
roll
fmull
test
fmuls
nop
mov
mov
or
mov
imul
lods
outsb
adc
push
filds
and
dec
push
enter
mov
sub
loope
jg
cmpsb
adcb
cmp
cwtl
sub
sub
dec
xor
jns
inc
xchg
stos
movsl
ss
sbb
ljmp
out
test
dec
and
mov
aam
or
out
fwait
push
sahf
aad
dec
pop
mov
push
xchg
sti
ffree
pop
sub
adc
arpl
pop
nop
inc
iret
dec
lock
dec
lcall
mov
mov
sub
andb
pusha
cmpsb
dec
push
mov
cmpsb
mov
jp
lock
aad
fldt
cmp
add
mov
mov
jle
pushf
std
aas
aad
adc
xchg
cmp
cmp
sbb
push
jl
fsubrs
int
pop
xchg
cmpsl
mov
push
xchg
mov
xchg
cmp
sub
dec
mov
insb
mov
in
add
mov
push
lret
sbb
xchg
cmpsb
pop
mov
rcr
add
push
movb
sbb
loope
ljmp
adc
daa
popa
inc
xchg
push
mov
push
enter
dec
fnstcw
xchg
pop
inc
xor
scas
aad
dec
or
test
test
bound
sbb
dec
outsb
dec
dec
stc
rol
xor
lods
lods
cli
cmp
repnz
ljmp
xor
dec
pop
mov
lock
xchg
xchg
les
adc
cmp
adc
xchg
mov
and
xchg
sahf
push
insl
xchg
push
mov
inc
jp
sub
pop
lods
push
jp
fistps
adc
mov
lock
cmpsl
leave
or
decl
aas
dec
popf
loope
pushf
gs
cmp
push
testb
inc
adc
out
and
js
movl
xor
pop
and
aam
fiadds
cmp
rol
aas
cmp
and
inc
es
faddp
push
aam
sbb
xor
and
inc
outsl
lahf
inc
and
xchg
sub
pop
stos
and
ret
loopne
lret
movsl
xor
push
sub
jecxz
sub
and
jae
lret
adcl
jnp
xor
dec
cs
ds
inc
lret
icebp
aaa
out
jecxz
and
fcoms
sub
jmp
pop
aad
ja
jb
sub
xchg
sbb
cwtl
leave
xor
cmpsb
push
movswl
xchg
mov
jg
out
jnp
incb
flds
mov
leave
das
jp
pop
call
out
jns
inc
adc
mov
push
mov
mov
mov
cmpsb
jmp
pushf
call
or
lahf
inc
pop
adc
testb
inc
mov
push
cs
sbb
cmp
or
jne
je
iret
mov
mov
cmpsb
lahf
xor
or
mov
movl
add
stos
adc
aaa
sub
cmp
ds
sbb
mov
lock
jae
pop
xor
and
inc
and
or
leave
movsl
fs
sti
mov
dec
xchg
adc
pop
cmc
data16
cmp
aas
lods
dec
sbb
add
js
lods
mov
jmp
mov
jb
jae
sbb
sub
js
repz
mov
add
test
stos
lahf
hlt
mov
add
out
out
lods
inc
sub
call
stos
test
cld
pop
enter
lret
cmp
pop
lods
jae
push
addr16
xor
cmp
and
fsub
cmpl
mov
and
mov
inc
fadd
in
dec
aad
sub
aam
sbb
inc
cmpsb
stos
scas
mov
call
addr16
inc
xchg
repnz
inc
xor
stc
aad
pushl
or
ljmp
mov
enter
ja
sub
into
dec
inc
xchg
std
inc
out
mov
mov
int
pop
xor
xor
add
lret
sahf
jbe
jo
loop
inc
movl
xlat
ret
mov
push
xor
mov
sti
outsb
sbb
jmp
popf
and
fisttpl
jle
leave
mov
pop
or
test
mov
popa
cmp
fsts
push
stc
xor
aas
xlat
sbb
in
aad
jmp
pop
or
in
jle
add
jae
shlb
int3
and
sub
xlat
hlt
rcll
pop
push
lret
sub
jnp
mov
negl
adc
dec
cmp
movl
mov
imul
mov
js
cs
mov
and
mov
push
popf
mov
faddp
xchg
mov
jle
mov
hlt
stos
cmp
insb
fiaddl
addr16
scas
rorb
add
jecxz
ret
test
lss
push
jge,pt
xchg
sub
sahf
ja
lcall
into
mov
pop
cld
dec
xor
ds
mov
das
cmp
push
mov
jle
jb
cmp
xchg
mov
xchg
rcrl
lahf
aam
ror
mov
jl
xchg
lret
pop
jle
mov
and
int3
xor
jg
popa
shll
ficompl
mov
cltd
xor
insb
addr16
cmpsb
repnz
sbbb
cmp
jno
lods
dec
push
jo
out
stos
add
fisubl
xchg
and
mov
pop
xor
jmp
fwait
mov
add
rclb
loopne
loopne
sbb
adcl
movsl
jle
loopne
mov
shll
insl
stc
push
int
mov
push
bound
roll
leave
xchg
or
push
jno
icebp
cmp
jno
xor
out
cwtl
out
addr16
stos
pop
or
call
xchg
sbb
dec
cld
outsl
imul
inc
xchg
or
and
lds
test
adc
mov
imul
test
jnp
sbb
dec
jecxz,pt
mov
mov
test
sbb
leave
mov
inc
mov
mov
jle
stc
pop
lret
pop
xchg
ja
stc
daa
decl
and
push
call
pop
cmc
mov
bsr
bts
mov
push
mov
bt
cmp
cmp
cmc
push
call
add
insb
jae
jb
outsb
inc
add
inc
and
test
movsb
rcr
inc
cmp
mov
bsf
mov
stc
test
bt
movb
pushl
popf
movw
movw
mov
mov
lea
jmp
mov
bswap
clc
add
push
dec
xor
rcl
lea
lea
bsr
cmc
sub
rcl
or
sbb
mov
push
bsf
sar
test
mov
bsf
pushl
shld
add
sub
rol
mov
clc
shl
sub
sbb
sub
neg
not
bsf
sbb
cmp
sbb
xor
btc
call
movw
stc
clc
add
push
pushf
popl
movw
pushl
popl
pushl
pusha
lea
jmp
lea
jnp
pushf
mov
pusha
lea
jmp
pushl
popl
push
mov
pusha
lea
jmp
bts
rol
inc
bswap
jmp
pushl
pushf
popl
call
add
pusha
cwtl
clc
clc
cmc
cmc
sub
call
rol
call
jmp
test
pusha
movb
cmp
call
lea
jne
mov
call
sub
pushf
neg
call
rcr
shrd
stc
neg
mov
call
call
pusha
rcl
mov
rcr
btc
bswap
movl
movzbw
stc
mov
rol
rcl
call
mov
pusha
push
pushf
lea
jmp
cld
lea
jb
pusha
push
rep
sbb
shld
not
adc
mov
sub
pop
xor
movzbw
mov
jmp
add
pushf
push
mov
pushf
pushf
push
lea
jmp
jmp
call
inc
cmc
pusha
xor
bt
bt
test
jmp
mov
xchg
mov
lea
jp
lea
mov
pusha
mov
movb
pushl
ret
push
push
pushl
popl
pushf
push
mov
push
lea
jmp
mov
mov
pushf
push
lea
jmp
call
push
pushl
pushf
popl
push
movl
pushl
popl
push
movw
lea
jmp
stc
cmc
xor
lea
shl
rcr
pusha
xor
bsr
movzbl
jmp
mov
bsr
mov
add
ja
cmc
pusha
add
movb
mov
push
pusha
mov
pushf
mov
pushl
pushf
lea
jmp
mov
dec
cmc
movw
cmc
xor
stc
jmp
mov
not
pusha
movsbw
push
mov
pusha
pop
bswap
mov
mov
pushf
popl
btr
clc
btc
mov
jmp
push
push
mov
push
pusha
pushf
push
lea
jmp
call
inc
cmc
clc
test
xor
cmc
bt
test
clc
sub
mov
mov
movb
lea
jmp
mov
sub
bt
test
clc
shl
push
mov
movw
mov
jmp
sub
movb
pusha
bt
shr
call
movzbw
neg
btr
inc
shr
pusha
sub
bsf
movsbw
movzbw
pusha
not
lea
dec
jmp
jmp
rcl
xor
stc
btc
mov
shld
add
xor
neg
bsf
bswap
stc
rcl
xor
rol
btc
movsbw
sub
sar
add
movsbw
jmp
push
pushf
popl
jmp
sub
cmp
not
push
movb
clc
xchg
pushf
pushf
jmp
movl
rcl
rcl
mov
mov
mov
rol
movsbw
rol
shrd
sub
bswap
movsbw
add
movsbl
shld
xor
lea
lea
not
movzbw
lea
pushl
movb
push
lea
jmp
cmc
cwtl
btr
pusha
mov
or
ror
mov
test
jmp
mov
mov
push
lea
jmp
pusha
mov
pushf
pushf
pushf
popl
pushf
jmp
neg
movzbw
mov
xor
add
shr
cmc
mov
pusha
call
add
clc
sub
pushf
push
mov
push
movb
pushf
movb
lea
jmp
call
stc
add
jmp
pushf
popl
call
push
rcl
pusha
mov
call
call
sub
jmp
pusha
call
not
lea
mov
setne
pusha
xchg
not
xchg
movsbl
jmp
add
pushf
mov
pushf
lea
jmp
cmc
cmp
sub
cmc
call
pushl
pop
mov
stc
pushl
mov
rcl
mov
pushf
rcl
not
btr
movl
not
mov
bswap
rol
neg
push
movw
inc
bswap
movsbw
sar
pop
shld
add
cmc
clc
xor
mov
lea
pushf
lea
jmp
pusha
pushf
push
pushl
popl
mov
mov
pushf
mov
lea
jmp
push
mov
call
setns
jmp
bswap
mov
jns
cmp
bt
add
pushf
pushf
pusha
mov
pushf
mov
mov
mov
lea
jmp
push
call
pusha
mov
movw
pushf
movb
pushf
lea
jmp
inc
xor
shld
mov
call
push
xchg
xchg
mov
push
push
movsbl
lea
push
cld
mov
pop
not
mov
movw
pusha
pusha
cld
mov
call
bt
and
pushf
pushf
jmp
pushf
decl
push
lea
jne
push
mov
pushf
push
push
pushf
lea
jmp
push
btc
stc
bts
call
push
mov
pusha
pushl
xchg
push
pop
pop
movzbw
mov
bswap
movzbw
bswap
mov
call
lea
pushf
lea
jmp
pushf
cmc
pushf
pushl
popl
pusha
add
cmp
stc
pushl
popf
mov
pushl
pushf
mov
lea
jmp
pushf
mov
pushf
mov
lea
jmp
pusha
call
pushf
popl
call
dec
movsbw
mov
rcr
add
pusha
pushf
setge
mov
call
bswap
pusha
pushf
popl
not
rcr
call
call
mov
pushf
shl
test
mov
add
lea
js
pusha
mov
jmp
pop
rcl
pop
bswap
pop
and
bswap
bswap
add
lea
jns
bsf
shrd
xor
push
lea
lea
pushf
pusha
pushf
lea
jmp
mov
jmp
add
bt
push
shld
pushf
pushf
pushf
mov
jmp
sete
mov
call
push
pushf
popl
cmc
btc
mov
bts
lea
mov
pop
jmp
add
test
rcr
pushf
test
xor
not
pushf
push
lea
pusha
pushl
pushf
pushf
lea
jmp
push
pushf
popl
call
pusha
mov
stc
call
pushf
popl
pushf
bts
mov
mov
not
pop
bts
mov
movzbw
btr
cmc
mov
pop
movzbw
pop
pop
mov
bt
movl
pop
bswap
cmc
mov
bswap
mov
cmc
rol
call
mov
jmp
pushl
popl
push
pushl
lea
jmp
rol
mov
rcl
stc
clc
push
mov
stc
not
clc
test
call
push
pusha
mov
movb
pushf
pushf
lea
jmp
pushf
pusha
not
mov
lea
js
pusha
mov
pushf
jmp
rol
shrd
btr
bts
sar
bswap
movzbw
bsf
bt
pop
add
bt
pushf
xor
bswap
xor
push
lea
push
pushf
mov
lea
jmp
stc
shr
push
mov
call
mov
pop
dec
bswap
clc
pushf
rol
shrd
btr
inc
mov
xor
dec
and
neg
bt
call
xor
pushf
add
bswap
jmp
pushf
pushf
pushl
mov
movw
call
shl
mov
test
pusha
bt
jmp
mov
call
setge
mov
cmp
setno
shl
inc
mov
stc
sub
movb
cmp
jmp
btc
cmc
aad
das
mov
xor
xchg
xor
pop
rcl
bsr
pop
rol
cmp
pop
sbb
btc
shr
pop
setl
neg
pop
rol
bswap
rdtsc
jmp
call
sub
push
xor
bt
pushl
stc
cmc
add
pusha
stc
push
cmc
mov
pushl
call
jmp
inc
bsf
bt
bsr
mov
clc
call
call
push
call
sub
lea
jl
pusha
movb
mov
pusha
pushf
lea
jmp
mov
bt
lea
jbe
push
clc
btc
bswap
push
movsbw
call
pop
pushf
mov
btc
clc
call
not
mov
bswap
not
pop
lea
mov
movzbw
movzbl
call
mov
bswap
movzbw
movsbw
pushf
popl
not
mov
not
rol
mov
rol
call
jmp
bsf
mov
jmp
mov
push
btc
jmp
btr
stc
bsr
call
pusha
mov
mov
pushl
lea
jmp
pusha
movl
jmp
movb
bt
sub
jg
add
pushf
test
sub
je
sub
bt
cmc
stc
not
jmp
adc
bswap
bsr
btr
mov
shl
clc
movsbl
sbb
mov
pusha
mov
bt
test
add
bt
cmc
bt
pushf
shrd
pushl
mov
push
call
xor
cmp
cmp
jmp
mov
mov
mov
movb
pushl
pushl
lea
jmp
add
mov
inc
push
add
push
mov
push
push
pusha
pushl
ret
stc
mov
cmc
sub
movb
mov
mov
push
push
pushf
pushf
lea
jmp
shr
notl
mov
sub
jmp
movzbw
mov
push
pushl
ret
mov
call
pushl
pusha
and
call
not
setae
movzbw
movsbw
mov
pusha
push
pusha
pushf
mov
call
pusha
pushf
push
rep
bts
dec
std
mov
mov
neg
movsbl
shl
mov
cld
push
bt
pushl
popf
mov
lea
jmp
call
lea
movb
jmp
jmp
movw
mov
movb
lea
jmp
jmp
pushf
jmp
mov
pusha
not
btr
movsbw
mov
ror
mov
movzbw
stc
lea
mov
rcr
movl
ror
stc
jmp
or
add
mov
adc
add
shld
test
cmc
add
xor
sub
call
cmp
add
jmp
call
clc
xor
push
xor
pusha
pushf
lea
jne
sub
jmp
push
mov
mov
mov
mov
mov
lea
jmp
movw
decl
jmp
pushl
pushl
popf
push
lea
jmp
pushf
pushf
inc
call
cmc
push
shr
cmc
clc
stc
clc
xor
add
clc
rcr
movzbw
xor
pushf
movzbl
mov
call
bt
add
pusha
movb
bswap
pushf
xor
cmc
movb
push
add
call
call
pushf
popl
btc
mov
cmc
lea
cmc
mov
lea
jg
btc
btr
push
cmc
stc
bt
movzbw
push
cmc
movzbl
push
pushf
mov
bswap
call
aas
pushf
mov
dec
rol
stc
and
mov
pushf
mov
pushl
pushl
add
pushl
jmp
mov
push
movb
push
pushf
lea
jmp
mov
cmc
bt
cmc
jmp
neg
pushl
call
sub
lea
not
inc
jmp
mov
jmp
mov
call
not
bt
xchg
push
bt
call
xadd
mov
sbb
shr
test
mov
clc
pusha
cmp
stc
add
pusha
call
mov
pop
jmp
add
clc
cmc
cwtl
test
sub
jmp
cld
xchg
bswap
push
pop
mov
jmp
mov
pusha
lea
jmp
movl
rol
jmp
setae
rcr
pusha
adc
mov
shl
mov
ror
mov
mov
push
sub
pushf
shl
mov
pushf
mov
mov
movw
call
mov
movb
pusha
pushf
lea
jmp
inc
movb
movb
decl
jmp
rol
bts
neg
shld
shl
sub
dec
sbb
not
bts
movzbl
adc
shld
bts
cmp
mov
cmc
jmp
pusha
jmp
rol
rol
sar
bswap
btr
xor
add
bsr
pushf
xor
lea
pushf
lea
push
lea
jmp
popf
pushf
lahf
cltd
mov
movsbw
mov
pushf
jmp
rol
lea
mov
not
mov
pushf
add
pushf
pusha
lea
jns
mov
pusha
pusha
push
pushf
lea
jmp
test
add
movb
mov
pushf
push
pushf
lea
jmp
inc
call
pushf
popl
not
pop
jmp
pushf
popl
pushf
movb
pushl
popl
pushf
mov
pushf
push
lea
jmp
mov
xchg
pusha
movsbw
movl
lea
pushf
pop
push
mov
bts
ror
bswap
rol
shr
bswap
shrd
mov
movsbw
add
or
xor
call
call
rol
add
xor
shl
rcl
bswap
push
or
movsbw
and
add
shrd
xor
push
call
push
mov
push
movb
lea
jmp
shl
movzbl
test
cmc
add
stc
neg
pushf
call
mov
cmc
not
pushf
sub
stc
mov
call
movl
ror
movsbw
mov
call
mov
cmc
push
add
pusha
push
mov
pushf
movb
lea
jmp
call
pusha
mov
pusha
pushf
push
push
xchg
jmp
jmp
pushf
movzbl
movb
clc
mov
cmp
xor
movl
inc
clc
pusha
pushf
xor
cmp
mov
sub
pushf
stc
rol
call
shld
rol
mov
test
pusha
pushl
add
pusha
push
jmp
jmp
jmp
pushl
jmp
mov
movsbl
pop
movzbw
not
pushf
popl
cmc
mov
bswap
pop
lea
jle
push
lea
movsbl
pushf
rcl
mov
pusha
rol
mov
pushf
xchg
stc
clc
movl
not
bswap
bswap
mov
pusha
jmp
pushl
push
push
mov
movb
lea
jmp
dec
not
jmp
pushf
mov
pushf
mov
movb
jmp
cwtl
pushf
bt
push
sub
jmp
pop
lea
pushf
movb
pushl
lea
jmp
mov
pushf
lea
jmp
stc
pushl
not
bt
call
neg
adc
add
pushf
push
mov
pusha
call
pushf
popl
mov
pusha
pushf
pushl
popl
push
mov
lea
jmp
rol
setnp
bsf
dec
jmp
lea
mov
movzbw
pushf
popl
movzbl
mov
stc
mov
rcl
lea
mov
rcr
mov
movw
mov
btc
movsbw
call
cmc
rol
inc
bswap
mov
sar
dec
ror
add
add
push
dec
sub
xor
bswap
pushl
pushl
lea
movl
pusha
movb
lea
jmp
pusha
sub
bt
cmc
cmc
rol
mov
pusha
mov
inc
pushf
push
jmp
mov
or
test
bt
movzbl
pushf
jmp
push
lea
ja
dec
shrd
cltd
aaa
mov
and
rcl
lea
bt
shld
bt
sub
bswap
aad
rol
aad
lea
sar
adc
and
neg
push
or
sub
lea
movl
mov
push
call
ror
jmp
call
jmp
pushf
pusha
xchg
movzbl
movzbl
call
lea
jne
call
cwtl
add
jnp
pushf
sub
push
jmp
bt
pusha
xor
cmp
cmc
call
movzbw
mov
pusha
pushf
pushf
popl
pusha
movsbl
xchg
pushf
mov
bswap
mov
pushf
call
test
add
pusha
pushf
mov
movw
lea
jmp
lea
ja
bts
mov
push
lea
shrd
sub
shl
sub
lea
pusha
pop
and
cmc
bswap
dec
sub
jmp
stc
rol
rol
bsf
bswap
bsr
lea
pushl
xor
add
btc
xor
movl
pushl
movsbw
lea
push
mov
mov
mov
lea
jmp
call
mov
sub
cmc
cmp
sub
cmc
bt
clc
stc
mov
pushf
bt
clc
add
movl
movl
mov
lea
jmp
call
pushf
pusha
xchg
bswap
mov
mov
mov
call
mov
jmp
bswap
lea
movb
pushf
lea
jmp
movb
call
call
mov
bts
btc
clc
xchg
rcr
mov
xchg
movl
xchg
bts
mov
cmc
rol
clc
bswap
bts
shrd
add
shld
or
xor
push
bswap
movzbw
lea
push
push
pusha
push
lea
jmp
pushl
xchg
push
xchg
jmp
pusha
pusha
movb
push
mov
pushf
push
mov
lea
push
mov
bswap
mov
pushl
jmp
lea
jp
mov
pusha
pushf
movb
movb
lea
jmp
jmp
setp
movzbl
jmp
push
push
pushl
inc
pusha
call
add
pusha
push
mov
lea
jmp
push
daa
mov
pusha
rcr
pushl
mov
jmp
bsf
mov
jmp
add
call
call
pushl
popl
movw
lea
jmp
jmp
push
mov
pushf
pushf
lea
jmp
stc
pusha
mov
add
bswap
add
mov
push
stc
test
cmc
add
pusha
mov
mov
movw
push
push
lea
jmp
sbb
mov
cmp
sub
pusha
mov
pusha
push
lea
jmp
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
call
mov
push
pusha
movb
movw
lea
jmp
lea
jne
call
mov
movsbw
rol
movl
bts
cmc
mov
movzbw
rcl
pop
btc
rol
shrd
stc
bsr
bswap
rcr
cmc
add
clc
xor
bswap
push
jmp
mov
call
call
xor
mov
jmp
pushl
popl
mov
pushf
pushl
mov
lea
jmp
cmc
bt
sub
call
inc
pushf
inc
pushf
rol
call
jmp
sar
mov
stc
jmp
inc
call
mov
mov
pushf
push
push
lea
jmp
cld
call
add
call
bswap
bswap
mov
call
call
movb
not
cmp
clc
and
pusha
mov
movb
mov
pushf
popl
jmp
sub
pushf
jmp
adc
rdtsc
adc
rcr
mov
jl
test
btc
bts
mov
pushf
add
pushf
lea
jnp
push
mov
pusha
pushf
lea
jmp
mov
push
mov
call
pop
mov
bswap
pusha
jmp
not
pushf
pusha
mov
pushl
jmp
das
lahf
lahf
bswap
mov
push
bt
stc
jmp
stc
cmp
add
push
call
pushf
pushl
popl
push
pushl
lea
jmp
lea
jae
shr
pusha
mov
jmp
mov
jns
mov
xchg
jns
add
jns
inc
mov
mov
jns
repnz
pop
jns
mov
jns
lret
mov
hlt
xchg
jns
jmp
jns
push
mov
add
inc
mov
jns
iret
lds
hlt
xchg
jns
cmp
jns
cmpsl
xchg
jns
xchg
jns
int3
jns
mov
jns
adc
or
mov
or
jns
inc
mov
jns
mov
jns
jmp
jns
hlt
xchg
jns
iret
lds
or
jns
jmp
jns
iret
lds
lret
mov
adc
jns
inc
mov
ffreep
jns
int3
jns
add
jns
mov
jns
outsb
mov
addr16
jns
jmp
jns
mov
jns
or
jns
pop
jns
sbb
jns
or
mov
repnz
or
jns
ss
jns
das
ret
add
jns
loop
jns
add
jns
repnz
xchg
mov
lret
in
push
mov
loop
jns
push
mov
add
int3
enter
mov
test
jns
jb
jns
add
ss
jns
loop
jns
or
jns
xchg
mov
addr16
jns
pop
jns
lret
mov
push
mov
repnz
repnz
sbb
jns
or
mov
repnz
lret
in
add
das
ret
dec
mov
into
lods
jns
pop
lods
jns
test
jns
sbb
jns
add
jns
lret
in
inc
mov
cmp
jns
adc
addr16
jns
or
jns
repnz
into
lods
jns
repnz
int3
jns
cmp
jns
das
ret
or
jns
mov
mov
mov
cltd
mov
jns
mov
mov
sub
jns
repnz
addr16
jns
or
jns
int3
jns
lret
in
add
mov
cltd
mov
jns
inc
mov
repnz
jb
jns
add
jns
add
jns
ss
jns
sarl
jns
cltd
mov
jns
loop
jns
das
ret
cmpsl
xchg
jns
les
jns
dec
mov
inc
lret
or
mov
cltd
mov
jns
mov
jns
sbb
jns
pop
jns
int3
enter
mov
ffreep
jns
hlt
xchg
jns
jb
jns
add
jns
jb
jns
add
mov
jns
jmp
jns
hlt
xchg
jns
sub
jns
mov
mov
mov
jns
jmp
jns
hlt
xchg
jns
dec
mov
cltd
mov
jns
repnz
int3
jns
mov
jns
addr16
jns
hlt
xchg
jns
sarl
jns
jmp
jns
cltd
mov
jns
mov
jns
loop
jns
hlt
xchg
jns
into
lods
jns
inc
mov
cltd
mov
jns
cmp
jns
mov
jns
cmpsl
xchg
jns
hlt
xchg
jns
sub
jns
inc
mov
repnz
push
mov
add
jns
mov
jns
repnz
hlt
xchg
jns
sarl
jns
xchg
mov
inc
lret
inc
mov
mov
jns
add
jns
hlt
xchg
jns
ss
jns
or
mov
ffreep
jns
mov
jns
into
lods
jns
hlt
xchg
jns
mov
jns
inc
lret
push
mov
dec
lret
jns
pop
lods
jns
mov
jns
push
mov
hlt
xchg
jns
xchg
mov
cmp
jns
adc
jns
xchg
mov
ffreep
jns
mov
jns
les
jns
sbb
jns
adc
xchg
jns
pusha
mov
pusha
mov
mov
push
pushf
mov
bswap
mov
call
pushf
popl
pushf
call
push
pushf
mov
mov
pushf
pusha
lea
jmp
btr
movsbw
bt
mov
rcr
movzbw
lea
shrd
not
xor
rcr
cmc
neg
stc
neg
inc
jmp
xchg
stc
bt
xor
pushf
add
jmp
sub
jmp
call
sub
stc
call
movw
mov
rcl
push
mov
cmc
xchg
btc
xchg
clc
mov
mov
bt
call
add
jne
inc
mov
call
mov
call
rol
jmp
push
push
mov
movb
pusha
lea
jmp
movw
call
jmp
cwtl
movzbl
mov
pushf
mov
pushf
call
pushf
mov
push
mov
mov
call
movzbl
clc
stc
cmc
shl
bt
add
bts
mov
bt
pusha
push
and
push
lea
je
clc
cmp
push
js
cmp
mov
jmp
call
push
jmp
call
pushl
xchg
bswap
movzbw
movzbl
pushf
mov
bswap
mov
movsbw
pushl
pushf
not
pushf
popl
call
pushf
jmp
pushf
jmp
ror
mov
movsbw
clc
rol
shrd
not
bswap
rcr
bswap
sar
btc
add
shr
xor
push
pushf
jmp
pushf
popl
pushf
pushl
popl
movw
pushf
movl
pushf
lea
jmp
mov
jmp
movb
pushf
decl
jmp
mov
movb
lea
jmp
rcr
xor
bswap
lea
push
movzbw
lea
push
movb
pusha
mov
lea
jmp
mov
pusha
bts
cmc
movl
bt
bt
mov
pushf
bswap
movsbw
rol
cmp
shr
not
jmp
mov
movb
push
push
lea
jmp
jmp
push
jmp
cmc
mov
push
stc
sub
mov
movb
call
call
push
movl
xchg
bswap
call
call
bts
mov
not
jmp
mov
jmp
mov
mov
pushf
lea
jmp
mov
movw
inc
test
cmc
xor
cmc
bt
bt
cmc
cbtw
jmp
movsbw
pop
lea
pushf
push
mov
lea
jmp
jmp
pushf
popl
pusha
pushl
popl
push
mov
lea
jmp
ror
mov
rcl
mov
pushf
ror
rol
movl
btc
rol
mov
pop
rol
rol
xor
cmp
bts
bswap
test
rol
cmp
add
shl
and
xor
jmp
rcr
rcl
rol
lea
shr
rcr
xor
bsr
bt
and
ror
shr
add
cmc
mov
jmp
bts
test
neg
cbtw
mov
dec
pusha
push
mov
pushl
cmc
sub
clc
shl
call
cwtl
shr
test
mov
clc
add
call
jmp
pop
movsbw
mov
call
xor
clc
not
cmc
test
cmp
call
mov
pop
mov
mov
mov
pushf
popl
mov
mov
call
jmp
stc
pushf
cmc
cmp
add
test
stc
sub
cmc
cmc
bt
not
bt
xchg
bt
jmp
shl
lea
sub
jne
stc
cmp
call
mov
jmp
pushf
mov
push
lea
jmp
pushf
pusha
mov
push
pushl
pushl
lea
jmp
bswap
and
test
bsf
add
shld
shrd
stc
rol
xor
push
push
lea
pushf
lea
jmp
lea
call
test
sub
pushl
mov
pushf
pushf
movw
lea
jmp
push
pushf
pushf
mov
pusha
lea
jmp
rcl
mov
call
pushf
popl
bt
rcl
bswap
btr
mov
stc
rol
not
btc
mov
rcr
push
mov
ror
pusha
rcl
mov
rcl
movl
stc
not
mov
mov
rcr
rol
movw
call
mov
pusha
lea
jmp
mov
pushf
pushf
popl
jmp
pusha
call
pushf
pusha
mov
mov
call
lea
pushf
pushl
pusha
pushl
lea
jmp
pusha
movzww
pushf
pushl
pushl
test
add
jmp
push
push
pusha
xchg
push
mov
lea
movsbw
mov
not
mov
call
shr
shr
movzbw
aas
mov
shr
mov
pusha
cmc
jmp
lea
jne
call
mov
shr
mov
jmp
bswap
mov
bswap
pop
mov
lea
movsbw
pushf
popl
rcl
ror
mov
ror
mov
pushl
movzbl
movsbw
rcl
xchg
ror
ror
not
jmp
cmc
rol
rcr
jmp
call
aas
movsbw
das
sbb
mov
bts
movzbw
rcr
call
sar
mov
adc
neg
rcr
call
call
shr
jo
stc
cmc
cmp
xor
shl
shl
neg
xor
pusha
mov
lea
jns
pusha
movb
mov
inc
pushf
jmp
ror
rcr
mov
bt
sar
rcl
cmc
mov
cmc
push
sub
clc
pusha
pushf
shr
call
cmc
xor
jmp
push
jmp
adc
mov
pusha
sub
clc
add
movw
pushf
call
pushf
pushf
mov
jmp
mov
pusha
push
pushf
movw
lea
jmp
jmp
jmp
not
mov
sub
xchg
mov
push
stc
sbb
mov
call
pushf
push
pushf
pushf
popl
pushf
lea
jno
pusha
pushl
popl
movw
pusha
mov
lea
jmp
mov
pusha
lea
jmp
pushl
popl
push
mov
movl
push
lea
jmp
mov
pushl
mov
movl
lea
jmp
mov
push
push
jmp
lea
jp
push
call
pushf
popl
pushf
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
cmp
xor
clc
jmp
divl
pusha
mov
push
mov
mov
push
jmp
movsbw
mov
cmp
test
clc
stc
sub
pusha
add
push
push
call
call
