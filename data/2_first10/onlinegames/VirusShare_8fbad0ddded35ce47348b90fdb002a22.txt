mov
in
xchg
add
test
push
push
push
and
mov
or
push
movl
and
inc
lock
dec
ja
testb
insb
add
push
push
and
mov
jae
xchg
insl
sub
sbb
add
and
insl
idivl
sbb
addb
push
or
sub
outsl
xchg
lahf
sbb
test
and
shlb
rorb
shll
adc
or
in
mov
dec
sbb
lea
or
lods
mov
sub
push
cmp
jbe
mov
cmp
nop
pop
push
sbb
bswap
sbb
push
lea
push
mov
and
shll
dec
add
pop
data16
sub
jne
push
or
sub
pop
push
je
and
jo
push
push
pop
or
ret
push
or
and
mov
sbb
lea
psllq
mov
fdivrs
push
inc
push
cwtl
outsb
jae
jl
xor
push
das
sbb
pop
test
jne
jmp
ret
pushl
pop
pop
add
inc
add
jo
mov
push
xor
imul
pop
stc
mov
jno
mov
ret
enter
sub
sti
lods
mov
or
mov
mov
jo
mov
xor
mov
pop
cmp
lds
add
xor
sbb
dec
bound
xchg
jbe
lea
or
jae
sbb
ss
sbb
mov
enter
jge
cmpsl
sub
cs
je
xor
pop
mov
mov
inc
cmp
das
cwtl
or
jmp
xchg
and
jmp
mov
dec
sbb
sub
inc
jae
fucomip
jae
scas
not
sub
mov
mov
mov
adc
mov
int
shr
rep
pop
sub
stc
and
enter
sub
cmp
in
inc
jecxz
push
xor
cld
inc
mov
call
lock
popa
add
test
add
sbb
pop
jge
push
xchg
adc
cmp
fcmovne
inc
xlat
sub
pushf
and
push
push
cld
cmp
adc
push
push
sub
push
add
pop
xor
pop
ss
add
cmp
mov
rolb
mov
xchg
push
add
mov
xor
push
adc
adc
lea
push
cwtl
xor
popa
mov
cmp
inc
or
js
in
push
cmp
loop
jnp
xor
je
lea
in
xchg
aad
adc
adc
fwait
lods
mov
aaa
or
adc
nop
add
leave
leave
push
movsl
push
push
inc
in
sbb
or
push
rolb
sub
test
push
mov
and
outsl
pop
ss
test
add
dec
mov
ret
xchg
jge
movb
mov
fidivrl
test
in
push
add
push
mov
insb
in
call
jmp
cmp
stos
mov
add
icebp
pop
jge
cs
fldt
add
cs
imul
ss
pop
out
insb
sbb
jae
cmp
fxch
mov
mov
xor
insl
xchg
lea
adc
out
cli
in
insl
jo,pt
lea
icebp
fstl
adc
dec
cld
push
push
int
add
add
or
jne
pop
adcb
adc
inc
fidivrs
shlb
cld
enter
test
in
imul
addr16
push
js
cmp
xlat
jb
or
sbb
cmp
push
jmp
sbb
sub
xor
mov
or
cli
push
mull
jl
mov
pop
idiv
and
fildl
mov
daa
cwtl
lret
add
mov
loope
cmpsl
and
or
gs
jno
pop
push
add
pop
orl
int
mov
jl
lods
or
and
fisttpl
mov
out
sbb
mov
cmp
xorb
jae
dec
jo
insb
push
or
out
shll
mov
int
inc
xor
mov
add
pop
sbb
jge
add
add
and
fs
std
ljmp
mov
cmpb
jne
inc
or
add
or
jl
add
jbe
aam
dec
movsb
fdivrp
fbstp
testb
je
movzwl
jmp
sub
jbe
rolb
push
pop
dec
push
outsb
dec
and
add
cwtl
mov
mov
pop
orl
ret
mov
sti
mov
pushl
pop
pop
xchg
and
out
cmp
sub
lock
ret
int3
add
test
push
xchg
cltd
mov
ljmp
mov
sbb
push
xchg
sub
stc
inc
and
inc
and
and
arpl
mov
stc
pushl
outsb
fs
insb
xor
cs
and
push
bndstx
scas
insl
out
dec
add
pop
add
cmp
gs
std
mov
pop
or
adc
and
and
imul
or
and
and
out
pop
cmp
add
lock
inc
push
add
add
dec
pop
nop
add
push
add
mov
add
add
pop
mov
int
mov
call
jae
jo
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
cmp
mov
imul
insl
outsl
fs
adc
dec
jo
jmp
and
jecxz,pn
and
jecxz
jge
xchg
pop
cmp
sub
push
es
mull
aaa
fists
sbb
aas
and
cmp
and
pop
arpl
xor
pop
arpl
sub
fistps
popa
out
imul
adc
add
mov
mov
or
push
or
cmp
mov
xor
adc
adc
adc
cmp
add
add
mov
insb
mov
sahf
push
mov
push
std
mov
in
nop
jo
add
adc
xorb
jge
cs
nop
jmp
push
xor
jb,pn
popa
je
decb
lock
es
xor
cmp
daa
pusha
pusha
rol
mov
dec
gs
outsl
arpl
dec
add
jo
inc
push
inc
out
adc
or
inc
gs
pop
cmpl
jae
negb
or
push
push
push
push
mov
push
in
invd
test
mov
mov
stos
push
and
pop
and
add
adc
mov
sub
fsubr
push
aad
sahf
sti
idivb
out
add
ret
psadbw
add
add
push
movsb
mov
lods
testb
or
pop
aad
push
push
pusha
daa
cmc
mov
cli
push
call
adc
lods
push
call
push
mov
jne
pop
cmp
imul
sub
pop
ss
aad
mov
mov
das
sbb
ficompl
mov
xor
push
dec
adc
add
jmp
addl
arpl
adc
nop
jo
mov
and
push
fs
and
add
adc
fs
out
into
cmp
adc
sbb
and
pop
sbb
add
repz
or
sub
add
and
mov
stos
jp
jge
addr16
cli
mov
lock
dec
push
push
mov
clc
push
call
insl
dec
cmp
lock
test
cmp
sbb
in
xor
dec
adc
jbe
ja
adc
mov
or
push
js
clc
push
call
das
push
aad
mov
or
lea
icebp
lret
cmp
cli
mov
lret
inc
cmp
clc
sti
mov
cmpsl
nop
aam
and
or
mov
in
outsb
mov
push
adc
popf
loope
ja
daa
push
mov
or
je
jg
push
push
push
fldpi
push
jbe
js
loope
nop
mov
divb
pop
cmp
add
adc
ljmp
or
push
rolb
ss
test
or
dec
push
lret
xlat
adc
push
jb
and
xchg
xchg
loope
mov
add
xor
int3
pusha
cmp
and
mov
push
pop
jmp
jo
outsb
cmp
cmp
dec
scas
sbb
xor
xchg
in
pop
lret
pop
les
cltd
cmp
sarb
add
into
loopne
pusha
fs
xchg
push
push
or
mov
or
add
divb
inc
insl
jno
out
ret
jcxz
xchg
iret
cmp
out
push
add
pop
push
movsb
dec
fisttpll
push
repz
push
pop
add
call
in
imul
js
sti
push
ds
xchg
imul
mov
xor
push
and
fisubrl
mov
xlat
imul
push
insl
int3
iret
sbb
add
into
in
fwait
push
sub
jb
xchg
fs
fcmovbe
add
add
fsts
add
or
jb
mov
adc
push
mov
mov
add
sub
data16
mov
call
fcmovnbe
or
and
scas
sbb
fisttpll
pop
sub
lcall
inc
push
inc
enter
adc
inc
mov
push
and
pop
adc
adc
jecxz
xlat
sbb
xorl
or
fdivrs
popa
inc
dec
adc
dec
push
mov
fmull
cld
xor
ficomps
clc
jecxz
push
push
int3
sbbl
nop
add
call
adc
mov
xchg
add
stc
and
add
roll
xor
stc
and
loopne
out
pop
add
mov
mov
lret
mov
sbb
lret
stos
xor
or
imul
movl
aam
lret
lds
icebp
sbb
ja
test
jne
cmpsb
movaps
push
mov
push
test
rcr
mov
jbe
or
jmp
mov
and
jbe
adc
jno
mov
sbb
scas
mov
push
ja
outsb
in
mov
inc
cltd
inc
push
pop
jg
call
inc
xor
inc
adc
mov
adc
xchg
push
cmp
or
lret
ficoms
push
je
sbb
loop
clc
int3
fmuls
imul
in
mov
insl
imul
iret
data16
jo
or
ret
loope
xor
pop
inc
xchg
or
mov
push
mov
push
jbe
push
inc
push
push
into
push
adc
cmp
fmull
pusha
pop
adc
dec
xchg
jo
sahf
call
sub
push
sbb
mov
jae
sub
pusha
call
sbb
push
popa
mov
test
and
pop
sbbb
fdivr
pop
adc
mov
aas
cmp
jne
pop
adc
sarb
ja
out
jmp
pop
or
sbb
push
mov
pop
push
fs
or
int3
and
push
popa
sbb
in
in
cmpsb
repnz
push
adc
test
stos
push
jne
leave
add
pop
cmp
cwtl
or
dec
inc
push
mov
inc
fsubl
cs
clc
lods
push
or
fcoml
jne
mov
and
mov
jl
leave
adc
in
jge
mov
adc
mov
mov
fldl
mov
xor
or
nop
pop
lods
sbb
inc
mov
loope
xor
sub
fs
mov
mov
or
push
fistps
js
mov
mov
inc
das
sub
push
insl
add
cmp
push
ret
adc
fidivl
push
jecxz
add
push
adcb
mov
dec
push
jne
or
mov
nop
ds
pushf
push
jo
int
ss
jnp
add
push
cmpsb
adc
push
jb
mov
and
in
out
xor
dec
fdivrs
dec
push
in
call
sbb
loopne
sub
dec
mov
decb
movsl
jp
leave
adc
push
pop
or
scas
cs
pop
mov
out
mov
mov
jecxz
adc
and
sub
movl
cmp
mov
xor
pop
lock
push
cmp
scas
mov
in
push
or
cli
sub
xor
jp
dec
gs
add
or
mov
faddl
or
int3
mov
out
pop
or
and
ret
fcomps
sub
arpl
and
aad
push
sub
add
mov
lods
jecxz
lret
pop
js
sbb
push
push
mov
sbb
push
push
rorl
sub
gs
arpl
jnp
leave
adc
fnsave
adc
push
call
add
xchg
rcr
fstps
sbb
fcoms
in
push
adc
push
push
push
loope
out
push
mov
add
sbb
loope
out
adc
add
push
add
add
sub
in
insb
or
sub
pop
popf
mov
xor
pop
inc
jo
addr16
pop
dec
add
dec
call
fmull
sub
in
ret
sub
push
push
push
add
xor
and
adc
or
lea
or
pop
cmp
js
push
mov
sbb
xor
adc
adc
jo
andb
lea
or
mov
scas
and
fwait
or
das
jo
pop
outsl
or
pop
cmp
xchg
pop
gs
xchg
popf
sub
mov
aam
add
lea
push
ljmp
data16
fmull
mov
sbb
cmp
jp
push
hlt
sbb
movsb
push
sar
mov
xor
xchg
std
add
xor
iret
incb
pop
call
push
inc
pop
sbb
loopne
or
push
cmp
dec
cmp
pop
pushf
in
lods
cmpsb
loopne
ljmp
shll
or
outsl
ret
popf
mov
and
jmp
pop
lods
xor
inc
cld
mov
dec
push
mov
push
rolb
sub
push
je
mov
adc
mov
mov
int
dec
mov
cmp
cmovle
xchg
insb
adc
push
cs
mov
data16
ss
hlt
add
pop
pop
pop
add
shl
push
inc
sub
xchg
or
ret
bound
nop
bound
or
mov
inc
dec
xchg
mov
bound
es
fistpll
dec
cmpl
fldl
sbb
inc
pop
xor
sub
loopne
icebp
std
imul
shll
mov
adc
xor
inc
sub
fstpt
cmpsl
mov
movsl
fisttpll
std
cmp
adc
jl
mov
shlb
orb
fmull
mov
or
jge
stc
xorb
inc
push
cmc
lret
sahf
push
mov
fdivrs
loopne
and
ror
inc
sarb
and
subb
mov
lea
and
push
mov
add
add
and
out
push
mov
shll
pop
or
in
add
insl
adcl
fnstsw
adc
call
stc
adc
decb
xor
dec
add
add
pop
mov
mov
cmp
jne
call
jle
jge
mov
hlt
sahf
cld
bound
jnp
jne
jmp
notb
dec
stos
sbb
push
jp
mov
xchg
and
fnstenv
enter
das
or
push
add
aam
lods
or
out
data16
push
fucomp
cmp
xor
cmp
jne
add
jnp
call
xor
andb
cmp
xchg
jne
push
cmpsb
fwait
stc
inc
mov
pop
xor
and
adc
lahf
add
fs
fstl
mov
fwait
cld
out
les
or
iret
adc
clc
jl
adc
mov
outsb
pop
outsl
push
cmp
push
push
movsl
mov
rcll
aas
and
je
into
pop
and
dec
xor
push
das
scas
call
test
pop
jne
test
jne
test
jne
addr16
insl
mov
push
cmp
imul
je
lds
rcrb
pop
sub
or
cltd
pop
imul
push
lea
imulb
in
loop
test
adc
je
jg
or
sbb
fcmovnbe
pop
mov
jno
push
sbb
das
adc
add
sbb
jnp
andnps
stos
and
cli
jg
cmp
sub
dec
cmp
jb
testb
cmc
or
pop
and
mov
push
cmp
cld
pop
enter
mov
mov
inc
add
or
fnstcw
mov
call
cmp
mov
dec
ljmp
push
lcall
lods
shll
or
jecxz
mov
clc
push
aas
negb
jne
mov
and
and
xor
sbb
xlat
int
push
pop
test
loope
xor
jmp
adc
call
push
in
int
sbb
gs
shll
pop
jmp
inc
add
fisttpl
push
ret
jl
mov
or
sbb
or
mov
dec
and
xchg
push
call
cmp
frstor
cmp
cmp
dec
lcall
xor
jecxz
in
sbb
into
xlat
xor
andl
fs
loope
sbb
adc
dec
and
mov
inc
or
mov
sub
pop
repnz
incl
enter
inc
mov
jae
and
ja
shrl
ds
mov
clc
mov
add
mov
or
cmpl
adc
add
sbb
sbb
cmp
out
jle
ret
aaa
and
pop
push
mov
add
call
add
lahf
adc
fcomps
pop
out
gs
dec
lea
jne
insb
int
and
cmp
or
and
lahf
int3
jo
pop
pop
and
xor
sub
adc
je
and
mov
movsb
popa
hlt
add
test
decb
outsl
adc
adc
pop
cmp
mov
mov
mov
mov
or
push
cltd
fisttps
enter
decl
adc
mov
sahf
or
pop
rolb
inc
mov
xchg
sbb
jbe
fs
xchg
cmp
shlb
jl
pop
dec
push
enter
pusha
pop
cmp
pop
enter
pop
mov
stc
insb
pop
fs
pop
pop
jb
inc
cmpsl
dec
test
or
cmp
in
lahf
push
fs
insb
pop
cmp
xchg
and
lea
pop
out
xchg
jb
jns
cmp
inc
call
mov
sbb
sbb
sahf
sbb
mov
dec
pop
jle
jae
xchg
or
pop
sbb
jb
pop
sbb
dec
pop
cmp
xchg
inc
sbb
out
out
addr16
stc
sbb
repz
xchg
addr16
sbb
sbb
add
inc
ljmp
cwtl
fsts
and
and
or
mov
addl
iret
lret
aas
mov
scas
cltd
in
nop
or
or
vmwrite
fisubs
sub
add
das
nop
cmp
hlt
pop
push
xorl
mov
nop
add
add
js
mov
into
jo
in
and
cmp
mov
mov
popa
and
orl
rcrl
mov
mov
ret
or
mov
push
add
popa
das
xor
sbb
insb
xor
add
lcall
push
mov
sbb
sbb
dec
mov
jbe
and
and
outsb
and
jb
es
cli
push
mov
js
cmp
lea
push
push
and
fs
sbb
shl
out
mov
jle
mov
pop
xor
sbb
shlb
ret
pop
mov
insl
and
cmp
jl
xor
test
lds
xor
cmp
stos
notl
mov
dec
dec
sbb
subl
test
mov
stc
push
dec
pop
sbb
sbb
and
or
rcr
jbe
test
mov
test
jae
mov
insb
sbb
js
cs
imul
cmpsl
popa
push
insl
je
and
inc
or
popa
or
inc
frstor
imul
inc
xor
jns
jbe
sub
sub
mov
je
xor
pop
xor
inc
push
ss
cmp
cmp
outsl
cmp
sbbb
cmp
cmp
fldl
mov
xchg
push
sbb
mov
repz
push
mov
das
mov
push
adc
or
fs
mov
test
pop
nop
dec
or
mov
test
sarb
stc
leave
mov
outsl
mov
outsl
rolb
inc
add
mov
xor
ljmp
push
push
scas
mov
xorl
push
or
push
ret
sti
pop
std
dec
inc
mov
cwtl
inc
mov
cmp
iret
xor
add
cmpl
cld
sbb
and
call
stc
push
jecxz
mov
fs
hlt
fsubs
adc
out
outsl
mov
mov
rcrl
shll
push
inc
and
add
add
cmpsl
jae
lea
out
cmp
add
xchg
out
pop
add
repz
jne
lea
fcoml
arpl
dec
mov
pushf
or
out
jle
jne
add
fs
out
cmp
arpl
rclb
out
and
inc
insb
mov
push
lcall
or
js
push
inc
cmp
out
sub
enter
inc
fs
add
add
or
jg
mov
out
cs
add
adc
or
je
ret
notl
nop
or
pop
adc
push
dec
cwtl
push
pop
das
fadds
add
daa
pop
repz
fs
in
sbbb
inc
daa
mov
sbb
add
and
mov
sub
sub
mov
mov
xor
daa
mov
test
je
fldt
adc
mov
push
xor
inc
pcmpeqw
subb
rclb
inc
sahf
jmp
nop
adcb
outsl
fldenv
je
adc
fs
arpl
pusha
xor
stos
ss
mov
subb
cmp
pop
icebp
add
mov
lahf
cmp
sbb
push
xchg
xor
test
jb
cmc
and
add
rcll
rcr
and
push
push
push
sbb
xchg
dec
mov
adc
jne
add
insb
popa
mov
mov
lahf
sbb
inc
jmp
mov
imul
add
fldt
inc
xchg
ljmp
and
xor
inc
popa
and
cmp
xchg
jmp
sbb
adc
pop
sbb
test
and
ljmp
insb
and
sbbl
lods
sarb
adc
subl
and
cmp
aaa
lock
inc
cmp
mov
call
sbb
nop
sbb
dec
mov
dec
ds
mov
xchg
lahf
and
dec
xchg
lods
sub
rcrb
fistl
sbb
mov
push
inc
in
bound
test
adc
int3
xor
sub
jnp
or
mov
test
outsb
cmp
and
sub
mov
xor
data16
shlb
les
cltd
pop
jge
sub
adc
call
clc
enter
add
add
sbb
dec
pushf
arpl
ja
sete
cmp
adc
cli
lcall
cmpsb
inc
es
data16
andl
xchg
dec
out
ror
and
imul
or
insb
lret
pop
in
mov
add
mul
xlat
inc
jg
and
push
adc
int
repz
mov
inc
out
and
mov
adc
cmp
insb
cmpsl
adc
nop
lret
movsl
call
pop
sbb
and
neg
add
sbb
add
jae
xchg
dec
lea
push
or
and
push
inc
xor
dec
pop
leave
enter
add
in
mov
add
xor
mov
push
add
and
sbb
mov
cmp
pop
and
rclb
into
pop
aad
sbb
ficoml
xor
push
sbb
push
outsl
jmp
dec
out
clc
and
xor
in
push
call
rorb
scas
data16
push
pop
add
and
iret
xchg
add
mov
add
in
enter
popf
push
aam
cmp
dec
lcall
or
xchg
fisubs
pop
test
lock
pop
inc
pop
adc
pop
mov
mov
inc
loopne
fwait
dec
ds
sbb
lods
xor
dec
push
xor
aad
iret
push
or
push
movsb
cmpb
mov
mov
pushf
inc
inc
push
adc
or
or
mov
adc
lods
ljmp
push
xchg
or
into
pop
das
xor
gs
and
out
ffree
or
popa
call
inc
push
jo
dec
ret
call
push
adcb
mov
add
dec
adc
lret
outsl
fisttps
add
and
movl
push
or
fdivrl
dec
divb
xor
mov
mov
or
hlt
mov
or
loop
dec
ret
lea
loopne
outsl
push
aas
cmp
mov
jae
incl
mov
sarl
sbb
sub
cli
cmp
mov
jb
decb
pop
jl
sbb
lea
scas
call
lret
push
std
lea
mov
test
sbb
sbb
rcll
call
movb
lcall
fstpt
js
add
jmp
pop
sbb
mov
mov
or
mov
or
push
cmp
call
jae
mov
call
clc
cmp
mov
or
pop
in
das
call
push
adc
xchg
jb
push
xchg
and
pop
and
and
push
ret
mov
negl
inc
mov
pop
repz
jle
mov
or
call
mov
out
dec
pusha
not
mov
and
and
lea
shll
shll
cld
aam
mov
loope
sbb
sub
and
ss
or
pop
ljmp
sub
call
cmpsb
adc
loop
lret
pop
jmp
ss
and
and
or
dec
sbb
add
outsl
inc
shlb
fwait
rcll
or
add
and
imulb
std
not
and
or
iret
add
and
out
into
mov
sti
shl
shr
or
and
les
push
testl
and
clc
movsl
out
push
push
add
mov
sbb
scas
cmc
rol
in
in
mov
loopne
add
and
leave
and
lret
neg
xchg
movb
ret
movb
mov
sub
int
sub
add
call
xor
push
and
sub
add
push
lods
loop
cltd
fld
mov
fst
fsubrl
je
xor
aad
popf
lret
or
subb
popf
out
mov
out
add
cli
icebp
enter
xor
sub
repnz
shl
mov
cli
mov
sub
cmp
les
pop
decl
adc
lret
lods
mov
cmp
or
dec
mov
popf
lret
mov
add
mov
popf
jl
mov
popf
icebp
and
nop
imul
int
sbb
lret
shlb
rclb
mov
ljmp
mov
out
sbb
les
adc
jge
jns
fbld
and
or
sub
data16
loope
loope
and
mov
mov
shl
fcmovne
xor
add
out
adc
mov
arpl
fidivrs
sbb
push
divb
cmc
sbb
sbb
mov
fdivrl
inc
rolb
or
insl
sti
add
pop
push
pop
pop
or
stos
lret
int3
dec
xlat
jl
fcoms
lahf
cmp
mov
adcl
mov
cmp
and
xchg
out
iret
jg
sbbl
and
adc
ret
out
inc
loope
mov
les
inc
add
mov
or
dec
or
movsl
xchg
sbb
mov
xlat
or
sub
out
iret
push
mov
sti
shl
xor
jmp
rorb
shll
add
out
loope
lods
pop
sahf
and
add
mov
sti
jo
mov
movsl
rcl
pop
add
push
mov
mov
cmp
loope
fwait
sbb
xchg
mov
lret
andb
fwait
mov
dec
movsl
nop
mov
xchg
in
adc
inc
movsl
xchg
fisttps
push
arpl
xchg
enter
loope
test
sbb
xlat
dec
into
and
dec
movsl
mov
std
insl
into
clc
mov
pop
pop
or
out
decb
sub
fbld
outsl
les
ljmp
loope
lahf
fs
sbb
inc
mov
std
jno
cmp
fbstp
stc
rcr
leave
in
shl
inc
cmp
jge
shr
scas
aad
popa
add
rolb
xor
mov
inc
mov
xor
adc
js
or
movsb
lret
mov
popf
aaa
das
insb
test
mov
das
adc
stc
cli
xor
adc
or
in
enter
imul
call
outsb
int
out
roll
mov
call
or
out
loopne
xor
sahf
sub
test
lods
mov
mov
jg
or
inc
lret
ret
inc
cli
shll
shll
rol
pusha
dec
mov
xor
mov
sti
xor
out
xor
sub
ja
lea
adc
fistpl
pop
movsb
int
mov
cmp
scas
lock
jle
sub
ja
lods
cli
lcall
clc
push
sbb
cli
daa
mov
xor
adc
cwtl
xchg
xchg
test
push
xchg
out
out
aam
adc
sbb
ljmp
loope
push
cwtl
xor
mov
xchg
adc
rcl
popa
loopne
xchg
outsl
ret
ret
int3
xchg
xchg
inc
into
in
repz
imul
clc
jl
sbb
mov
int
sbb
ret
lods
mov
jno
flds
push
pop
test
jmp
hlt
push
rcl
jmp
ja
jns
sti
xchg
ret
jp
add
push
mov
sbb
mov
dec
gs
pop
cmpsl
and
jns
fmuls
cli
cwtl
and
cmp
fnsave
cltd
jmp
mov
or
inc
inc
pop
ret
pop
pop
sbb
lcall
int3
or
push
or
or
jge
out
call
bts
pop
test
aaa
or
lcall
sbb
fwait
and
lcall
out
nop
sub
sub
add
adc
inc
mov
and
pop
loopne
gs
jns
jle
negl
push
cmp
mov
out
pop
xor
or
pushf
sub
fwait
leave
lcall
paddb
cmpsb
adcl
xchg
mov
insl
roll
add
xor
add
out
and
sbb
inc
inc
inc
cmpsl
aas
jb
xchg
push
ja,pt
push
xorl
mov
sub
mov
add
mov
cld
mov
or
add
sbb
cmp
fucomip
add
xchg
push
cmp
jb
pop
pop
push
push
mov
test
jbe
dec
xchg
or
mov
fwait
push
inc
add
scas
mov
fildl
mov
cmp
or
adc
fldt
xchg
or
cld
lea
rsm
push
fadd
jb
sahf
mov
fwait
test
pop
sub
inc
inc
sahf
push
inc
sub
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
dec
push
push
jo
inc
inc
inc
pop
pop
pusha
fs
inc
inc
inc
js
insb
push
fcoml
xchg
xchg
xchg
mov
movsb
test
lods
mov
xchg
xchg
xchg
mov
mov
or
inc
stos
push
adc
jmp
or
jae
sub
or
stos
inc
jne
loope
daa
push
ret
push
xor
rcrb
enter
rcrl
add
sub
pop
lods
sbb
testl
dec
loopne
sahf
xor
pop
mov
andw
mov
imull
pusha
add
mov
das
push
orl
es
and
lcall
pop
sti
pop
je
mov
test
je
call
push
sub
jmp
add
cmc
andl
add
pop
adc
pop
or
mov
add
or
aas
sti
or
es
cmp
jne
mov
push
push
jbe
ss
rorb
or
adc
in
dec
lsl
xor
pop
jae
mov
push
lods
icebp
pop
push
inc
add
es
jge
cmpl
ret
outsb
jg
adc
cmp
mov
push
mov
push
aam
add
ss
add
pop
mov
and
jbe
mov
push
add
mov
cmpsb
fstps
push
add
call
hlt
add
xor
je
shll
lcall
mov
ficompl
xor
mov
pop
dec
inc
imulb
sub
pop
push
jae
pop
outsl
fnstenvs
pop
add
push
pop
push
lcall
cmp
andb
imul
xor
mov
ja
sbb
cmp
xor
rcll
mov
outsl
pusha
dec
xlat
or
cmpsb
xchg
aas
cmpsb
imul
cltd
cmpsb
imul
sti
sub
sti
add
jne
in
pop
dec
inc
pop
lcall
push
pusha
add
adc
add
xchg
sbb
in
sbb
sbb
daa
mov
mov
sbb
mov
pop
sbb
pushf
fstpl
push
add
out
mov
xchg
data16
push
add
mov
jns
mov
nop
or
sbb
mov
xlat
or
adc
jo
push
adc
or
mov
add
sbb
push
dec
xchg
add
gs
cld
ljmp
cmpsl
add
insl
imul
outsl
arpl
jae
add
je
mov
jb
outsb
je
add
jae
jb
jo
imul
add
outsl
jae
dec
popa
outsb
add
sub
cmp
push
fs
fistpl
jmp
pop
dec
gs
outsl
jb
pop
ds
cltd
add
inc
fs
ret
outsl
cmp
out
sti
imul
and
fs
inc
imul
dec
popa
insl
gs
je
inc
jns
outsl
push
imul
push
leave
insb
jnp
in
sub
add
or
xor
mov
jge
xor
inc
imul
arpl
pop
push
jns
popf
xor
sbb
push
jle
sub
or
adc
aaa
inc
cmp
add
xor
dec
push
out
add
jbe
test
sub
sbb
insl
jb
pop
and
insb
push
lods
jo
push
jno
jae
outsl
sbb
outsb
test
mov
je
js
test
inc
je
sbb
test
insl
aas
jae
gs
push
test
shrb
push
inc
mov
dec
inc
push
dec
inc
dec
cs
std
rolb
inc
outsb
jne
cld
add
das
jnp
lods
andb
inc
inc
add
or
out
sub
cmpsl
ja
mov
pop
pop
and
inc
jo
push
data16
mov
xchg
aaa
push
add
jae
insl
pop
or
mov
decl
mov
mov
jo
inc
mov
ret
xlat
fldenv
push
push
mov
push
rorl
add
push
add
push
mov
insb
fimuls
stc
sbb
add
je
mov
and
push
inc
push
push
mov
rclb
imul
and
sbb
arpl
pusha
aaa
fwait
inc
dec
je
add
addr16
lock
push
dec
gs
or
jne
jae
xlat
xchg
jno
loop
or
push
jbe
sbb
cmp
xor
adc
mov
mull
arpl
addr16
arpl
imul
out
push
imul
push
inc
cwtl
je
jl
adc
arpl
insb
test
push
popa
jbe
mov
sbb
and
adc
mov
mov
push
sbb
or
adc
sbb
daa
aad
inc
or
bound
xor
cs
dec
push
dec
out
add
imul
and
sub
je
sbb
jo
jne
movhps
cmp
jbe
jno
lods
mov
cmpsl
aas
outsl
adc
mov
adc
aad
jecxz
in
push
dec
dec
add
pop
mov
mov
add
aad
je
push
sub
add
aas
aas
xor
mov
mov
lds
dec
inc
pop
mov
aaa
push
imul
stos
or
insb
shrb
add
adc
cmp
fstps
fwait
fs
fistps
or
outsb
mov
sbb
dec
push
push
inc
push
mov
pop
imul
shrb
sbb
insb
or
push
xchg
or
mov
pop
or
insb
ja
mov
xchg
lret
rcrl
add
add
pop
clc
mov
pop
loopne
pop
bound
cmpsb
imul
js
jbe
rcrl
add
xor
cltd
mov
fildll
mov
pop
fistps
add
add
or
or
or
mov
jae
pop
jecxz
jne
jo
sub
inc
or
imul
icebp
push
jbe
cs
fnstenv
or
inc
fs
adc
pop
jnp
push
sub
dec
add
fnstenv
pop
insl
ret
prefetch
jnp
insb
push
pop
xchg
ret
mov
jo
insb
xchg
outsb
add
xor
hlt
insb
stos
test
fcos
xchg
lea
and
bound
and
jne
sbb
adc
call
mov
data16
ljmp
popf
imul
adc
mov
mov
jmp
cld
and
addr16
sti
mov
aas
popa
pcmpeqw
stc
lahf
out
outsb
insb
jbe
and
cmp
mov
push
insb
sbb
dec
xor
mov
xor
xor
cmp
cmp
xor
hlt
sbb
add
xchg
roll
cs
mov
addr16
icebp
or
pop
ja
lea
xchg
lds
loopne
das
mov
jo
in
add
div
cmp
xor
or
leave
iret
mov
or
add
cmp
xchg
sub
dec
cmp
outsb
jnp
and
sub
add
or
push
jns
mov
cmp
dec
popa
fmuls
inc
inc
pusha
andl
and
pop
adc
inc
sbb
sub
lds
outsl
sub
mov
add
les
xor
mov
dec
dec
or
rolb
das
push
mov
pusha
scas
bound
call
cmp
sti
aam
sub
add
push
addr16
das
sub
sbb
push
push
jle
dec
push
push
push
das
xor
xor
in
pop
pop
mov
pop
xchg
in
cs
int
lods
mov
dec
inc
inc
iret
data16
enter
insb
imul
add
lock
xchg
adc
mov
mov
in
push
mov
movb
in
jb
add
add
fs
cs
push
pop
cmpsb
push
call
and
xchg
cmpsb
insl
outsl
gs
lods
cltd
insl
addr16
insb
add
xchg
xor
dec
push
add
cmpsl
loopne
fs
sti
pop
dec
mov
das
lock
fs
or
orb
xor
pop
push
rolb
js
xor
pop
imul
pop
dec
popa
xchg
call
insl
mov
pushl
ret
shl
dec
push
outsl
pushf
ja
inc
mov
ljmp
or
addr16
push
outsl
mov
push
dec
fcompl
icebp
fidivrs
inc
popa
xor
xor
mov
fidivrs
push
or
arpl
test
xlat
insb
add
or
dec
fwait
add
pop
add
inc
mov
rcrl
adc
jbe
xor
push
add
mov
add
adc
pop
xor
xor
push
xor
js
test
xchg
xor
in
repz
xor
xor
xor
cmc
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
jg
je
jns
jle
xorl
xor
bound
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
jb
jns
jle
test
mov
xchg
ss
ss
pushl
cmpsl
ss
mov
fdivl
jecxz
ljmp
ss
aaa
adc
and
data16
imul
pushl
mov
xchg
aaa
mov
lret
aaa
fdivl
in
out
aaa
repz
stc
aaa
cmp
cmp
pop
cmp
cmp
cmp
cmp
out
in
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
push
cmp
push
cmp
cmp
cmp
cmp
pop
cmp
mov
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
int
aad
lock
adc
sub
das
ds
ds
ds
ds
ds
ds
arpl
insb
jb,pt
jle
test
lahf
lods
ds
add
push
aas
dec
xchg
mov
aas
push
aas
sarb
aas
sti
aas
test
mov
pop
xor
ret
xor
test
lret
xor
xor
ja
cld
test
mov
push
fidivs
pop
or
push
xor
xchg
ss
adc
push
aaa
insl
aaa
ret
aaa
fnstenv
loop
icebp
aaa
add
adc
lcall
xor
cmp
or
imul
daa
cmp
cmp
mov
jmp
cmp
cmp
cmp
cmp
dec
fbld
mov
fdivrl
cmpb
ds
jb
test
xchg
aas
mov
mov
sub
xor
xor
sahf
xor
xor
idiv
sti
xor
push
xor
outsb
xor
test
xor
xor
xor
decl
xor
pop
xor
adc
jge
xchg
xor
pop
ss
ss
ss
call
jg
lds
push
aaa
pop
out
aaa
mov
aaa
cwtl
aaa
lods
aaa
into
aaa
pusha
cmp
xchg
outsl
clc
jl
test
mov
cmp
cmp
cmp
mov
aaa
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
insb
jg
cmp
or
and
pop
aas
jbe
mov
stos
aas
mov
in
incl
nop
pop
xor
xor
ljmp
xor
mov
mov
cmp
cmp
cmp
cmp
cmp
clc
jmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
mov
inc
cmp
fs
jbe
clc
jl
mov
mov
cmp
in
repnz
or
ds
lcall
outsb
cmp
dec
stc
pusha
cmpb
ds
adc
sbb
outsl
fwait
in
sbb
xor
xor
inc
sbb
les
enter
sub
pop
ret
adc
mov
je
or
test
stos
add
mov
sub
mov
gs
jne
arpl
sti
push
imul
test
mov
fldcw
outsb
sbb
sub
add
inc
popa
push
add
xor
out
mov
xchg
jae
test
sub
inc
push
push
cmpsl
pop
clc
dec
outsb
outsw
inc
sub
and
add
adc
pop
in
fldl
pop
arpl
push
adc
insl
xchg
mov
or
inc
insl
pop
and
shll
sbb
jae
test
cmp
pop
jo
fsubs
loop
outsl
insl
out
or
mov
jo
je
jo
pop
in
sub
add
sti
push
jne
in
data16
mov
dec
nop
ret
jns
lgdtl
mov
mov
int3
push
pop
and
sbb
add
push
push
pusha
and
add
push
cwtl
push
movsb
pushf
sbb
nop
pushf
or
or
adc
and
xor
jae
gs
xor
add
inc
xchg
pop
dec
add
insl
sub
addb
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
