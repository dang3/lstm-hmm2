subl
push
xor
add
push
push
mov
lea
push
push
call
push
movsb
add
mov
mov
push
push
push
call
lea
je
add
sub
add
sub
movb
mov
pop
mov
pop
pop
ret
mov
add
imul
or
xor
add
movl
cmp
pop
je
push
pop
pop
imul
sbb
gs
addb
shr
add
and
or
push
jne
push
mov
loop
add
mov
mov
cmp
je
push
cmp
or
xchg
push
pop
jne
mov
sahf
xor
sbb
movl
add
jne
adc
jbe
mov
mov
pop
mov
add
ret
push
push
dec
adc
cmc
or
push
inc
int
xor
jnp
mov
add
push
push
inc
jp
inc
jno
cmpl
cmp
scas
sub
and
sub
sub
fidivrs
cmp
adc
adc
add
into
out
xchg
mov
mov
andl
adc
test
push
and
jmp
mov
mov
in
push
xor
nop
pop
mov
inc
cmp
lock
clc
pop
movl
add
repz
push
jno
dec
ljmp
lea
push
push
popa
pop
sbb
mov
adc
push
xchg
xlat
push
fmuls
and
jbe
cmp
je
mov
jno
xor
mov
sub
mov
shll
push
mov
push
xchg
mov
clc
ret
or
sbb
add
int
xor
or
mov
inc
or
dec
add
mov
hlt
push
hlt
mov
push
testb
pop
push
testl
or
in
rcrl
aas
in
in
mov
adc
adc
xchg
mov
inc
lock
cmp
nop
nop
inc
cmp
je
repz
cmpsl
jle
cmp
in
xchg
out
or
call
jmp
mov
and
test
add
jo
fmull
fists
lret
loopne
loope
test
es
fdivrl
in
mov
int
adc
nop
cld
out
leave
cmpsl
jo
lock
pop
data16
iret
ja
pop
push
or
push
inc
cmp
lods
out
push
out
dec
lret
jae
ficomps
out
push
test
iret
repz
call
mov
cmp
cld
sbb
ret
mov
sub
pop
mov
mov
cmp
xchg
mov
mov
cld
mov
add
enter
stos
pop
call
xchg
enter
ret
loope
enter
lret
mov
sbb
int3
or
into
stos
ja
inc
iret
rorb
mov
mov
cmp
js
dec
mov
shrl
push
push
xchg
imul
insb
cli
test
inc
je
push
pop
icebp
rcr
inc
pop
mov
pop
loop
fldcw
mov
and
ret
add
lcall
daa
aam
push
lods
pop
aam
insl
fisttpll
mov
daa
addr16
lods
push
add
ret
je
push
xor
dec
jbe
mov
push
repz
add
push
push
pusha
and
inc
rol
jne
lea
mov
sbb
mov
or
xchg
push
or
pop
mov
test
push
stos
pop
ret
adc
push
push
xor
push
add
xor
mov
cli
daa
sbb
in
aas
xor
cmp
mov
sbb
xchg
cmp
les
lds
xor
cmp
jo
sbb
lret
fs
xor
cmp
ret
loope
jae
shll
loope
cmp
cmp
xlat
fs
xchg
fdivs
fnstenv
fidivrl
jo
fsubl
fisubs
loopne
cmp
loope
loop
jecxz
in
in
push
xchg
loope
aaa
out
call
jo
sbb
es
in
xor
cmp
cmp
out
and
bnd
loope
cmp
cmp
cmp
mull
cmp
xchg
fs
xor
xor
cmp
jo
std
jae
dec
cmpb
jle
mov
je
movzwl
or
xchg
test
add
ret
push
mov
les
jo
push
fmul
mov
add
push
sbb
push
andb
xor
or
mov
dec
cltd
or
inc
imul
cmc
incb
sub
int3
mov
stos
stos
lea
push
daa
mov
push
pop
lret
inc
test
pop
daa
push
lods
sub
lret
xchg
les
mov
loopne
push
hlt
pop
repnz
pop
jne
leave
les
out
or
and
pop
xor
loopne
xchg
aaa
ret
push
push
push
mov
and
pop
mov
lea
rcll
xchg
fisttpll
mov
call
push
mov
push
lcall
call
cld
push
xor
sti
test
pop
mov
mov
pop
cmp
push
clc
push
cwtl
sbb
xor
andb
mov
cld
xchg
daa
lods
lock
insb
data16
pop
sahf
and
sub
mov
push
andb
xor
cmp
xchg
sub
out
push
mov
sub
mov
push
jne
mov
adc
sarl
mov
add
push
push
push
or
adc
push
add
and
or
dec
cmp
stc
std
push
cs
pop
stos
dec
jne
ficoms
inc
push
lcall
jmp
xchg
lods
pop
ret
call
mov
stos
and
push
insl
sbb
aam
bound
sbb
fidivl
jno
js
cmpsb
and
xor
inc
aaa
loope
add
cltd
fdivl
je
jo
push
loopne
sbb
add
xlat
je
push
push
sub
cmp
or
in
ds
mov
mov
icebp
inc
hlt
xor
outsl
and
mov
je
mov
pop
ds
addl
add
mov
pop
dec
orb
mov
fs
and
rorl
jg
xorl
aam
or
xchg
in
add
cmp
test
je
push
mov
or
mov
dec
jle
cmp
ret
mov
and
dec
fdivrl
pop
sbb
sbb
sbbl
lods
adc
iret
push
out
lea
sub
fucom
jo
sbb
aas
fbld
arpl
je
imul
out
sahf
out
gs
outsl
xchg
jns
jae
jne
add
mov
insb
or
xor
xorb
test
fadds
add
inc
aaa
sub
adc
push
repz
add
inc
inc
dec
adcl
dec
push
cmp
push
push
adc
add
int3
es
mov
mov
mov
xchg
mov
add
add
dec
jl
clc
test
je
inc
push
jb
and
divb
pop
add
mov
mov
cmp
jle
mov
cmp
jg
mov
test
add
out
sahf
adc
push
or
jmp
pusha
sbb
adc
cmp
sbb
push
outsb
lcall
fimuls
imul
sbb
mov
les
jge
xchg
mov
outsb
cltd
xor
lret
xchg
cmp
icebp
adc
add
add
lea
mov
es
das
cmp
fs
les
lret
mov
cmp
out
cmp
repz
jmp
cmp
in
in
out
jo
outsl
repz
test
iret
repz
jne
and
repz
bound
xor
dec
sbb
jmp
jmp
push
jne
js
push
jne
cld
test
loop
mov
mov
vmovlps
out
dec
psubsb
xor
cmp
xchg
push
jne
mov
arpl
arpl
or
push
and
shr
pop
mov
push
data16
out
mov
popl
add
enter
cmpsb
mov
rorl
pop
cmp
xor
outsl
dec
mov
inc
add
dec
fwait
inc
stc
mov
icebp
je
mov
inc
test
mov
in
jno
dec
je
gs
or
orb
out
push
jg
push
inc
add
inc
mov
push
incl
rcrb
cmp
bound
add
in
inc
xor
mov
push
aad
add
testl
mov
add
imul
adcl
inc
mov
inc
mov
mov
rolb
xlat
push
sub
enter
ret
mov
andl
cmp
pop
int3
and
push
push
mov
fmull
rclb
dec
push
pop
jmp
loope
lea
mov
pop
test
mov
mov
pop
push
jae
iret
repz
popa
arpl
repz
outsb
cmp
iret
repz
jb
arpl
test
mov
xchg
xchg
cmpsb
mov
fcom
roll
pop
or
decl
fsubrl
in
insl
push
jmp
pand
xchg
incl
mov
sub
adc
outsl
sub
pop
pop
pop
mov
jle
adc
popf
mov
cli
sub
inc
add
sbb
int
add
adc
sarb
sub
js
pusha
mov
mov
lret
add
push
add
ret
mov
add
add
cmp
add
add
jne
push
mov
pop
cltd
mov
idiv
jge
lea
andb
mov
idiv
pop
pusha
sub
add
rclb
mov
mov
cltd
xor
mov
notl
jb
push
out
cld
cli
mov
idiv
jp
and
in
push
dec
popf
mov
jl
popf
mov
mov
mov
cmp
adc
repnz
repz
and
xor
cmp
je
sahf
out
sahf
mov
mov
ret
cmp
repz
dec
leave
in
pop
lcall
xchg
mov
test
sub
shll
inc
or
push
loop
push
add
cmp
xor
in
out
out
inc
pop
aaa
scas
lock
sub
mov
hlt
push
fisttpl
lcall
popa
adc
int3
nop
inc
into
leave
int
add
push
pop
adc
xchg
cmp
push
mov
add
lock
cmp
and
in
cmp
add
sub
push
mov
push
inc
xor
xchg
push
push
adc
push
loope
sahf
insl
loopne
cmp
cmp
arpl
sub
int3
xchg
xor
inc
add
push
out
clc
popf
data16
mov
movl
sbb
int3
cli
fdivr
aad
dec
cld
lods
inc
je
clc
add
add
aad
or
inc
sub
jmp
sub
std
cs
int3
int
out
sbb
cmp
out
fstp
inc
aam
mov
push
aam
adc
mov
jno
cli
add
jno
add
add
add
xchg
mov
aam
pop
and
or
lods
and
orb
jg
mov
cmp
jl
cmp
mov
cmp
jl
cmp
icebp
xor
xchg
or
push
inc
adc
mov
push
leave
pop
in
cmp
add
xchg
pushf
les
dec
test
push
in
test
adc
aam
and
leave
ret
add
mov
or
subl
sbb
and
hlt
mov
sbb
and
xor
in
inc
bound
test
jmp
or
jle
int
in
sub
loopne
fldt
rep
movsw
xor
cmp
inc
notl
mov
lcall
addl
cmp
lar
lea
push
sahf
daa
aas
mov
mov
sahf
out
fmull
test
fcomps
loope
add
mov
je
cmp
push
cmp
jnp
jne
mov
xchg
add
std
mov
xor
inc
cltd
or
arpl
xlat
xchg
sub
lret
dec
pop
xor
xor
stc
std
roll
push
addl
dec
sbb
out
or
sub
sbb
add
or
enter
inc
repz
adc
xor
je
addr16
iret
jecxz
jo
jno
out
jae
icebp
insb
les
ret
repz
stc
bound
jns
ror
pop
inc
inc
loope
cmp
fs
jo
inc
lds
adc
dec
enter
mov
popa
lret
gs
imul
dec
cmp
inc
into
arpl
outsl
shlb
rorb
mov
xor
mov
frstor
pusha
je
iret
repz
cmp
iret
repz
test
repz
repz
scas
mov
mov
repz
mov
mov
mov
sbb
fistpll
jp
js
cmp
jne
or
jo
popa
or
jo
cld
push
call
xchg
jmp
pusha
clc
push
mov
inc
cmp
mov
jbe
lea
pushl
mov
sub
inc
add
cmp
jmp
mov
add
mov
imul
add
movsl
fwait
adc
mov
inc
stos
xor
jne
sahf
and
xchg
mov
stos
fdivr
or
test
repnz
mov
dec
dec
cmp
aad
push
jne
hlt
cmp
repz
xor
out
repz
cmc
mulb
or
loope
cmp
xlat
mov
cmp
repz
sbb
jmp
mov
inc
js
push
outsb
into
push
mov
or
js
or
jne
push
in
xor
mov
mov
insb
ret
inc
ret
daa
sub
add
sbb
xor
jmp
pop
int3
add
xchg
cmp
jp
cmpb
add
jge
sub
cmp
jb
push
mov
stos
pop
jno
jo
jb
lods
push
push
xor
sub
xchg
hlt
sub
adc
lock
or
pop
and
shr
pop
adc
icebp
or
add
cld
out
leave
cmp
cmp
pop
lcall
ljmp
xor
fs
imul
fsubrs
fidivl
neg
push
pusha
cs
mov
dec
ja
pushf
fisubs
je
test
adc
test
or
inc
test
push
out
imul
jno
out
jbe
ja
arpl
push
js
jns
pop
in
das
into
inc
jnp
ret
mov
js
insl
jle
test
jg
addb
cmp
jb
outsl
subl
test
push
xchg
xchg
push
mov
inc
and
push
mov
shlb
jbe
mov
mov
out
nop
push
xchg
popa
xchg
jbe
xchg
loope
gs
dec
xchg
insl
xchg
popa
xchg
addr16
sbb
cwtl
gs
push
lcall
push
insb
sahf
lahf
je
pushf
mov
mov
out
sahf
inc
imul
jns
push
je
jb
jno
xor
jne
rorb
loopw
pop
mov
cmp
mov
imul
jae
pop
mov
pop
icebp
mov
push
cmp
jecxz
lcall
mov
lea
lods
add
mov
mov
data16
loop
push
data16
imul
push
add
mov
pop
addr16
gs
das
pusha
mov
mov
fs
jmp
lea
stc
hlt
shrb
das
add
popa
and
and
lea
xor
imul
stc
dec
mov
or
jge
mov
testl
xor
sbb
popf
mov
xchg
and
stos
aaa
sbb
aas
xor
hlt
js
jl
lods
pushf
push
out
sbb
cwtl
xor
je
movsb
jno
jg
and
pop
arpl
adc
push
add
or
or
imul
add
pop
push
pop
mov
inc
adc
mov
and
adc
dec
inc
outsl
pop
xor
mov
test
mov
sbb
data16
fsincos
mov
mov
inc
inc
leave
and
pop
sub
jo
or
ss
or
cmp
adcb
push
mov
adc
mov
ret
fadds
adc
push
lods
dec
push
das
pop
xchg
and
mov
jns
jl
pop
xchg
adc
add
subl
inc
sub
mov
popf
and
fidivs
imul
sbb
loopne
adc
int3
xor
pop
mov
pop
pop
les
and
adc
adc
cld
out
jl,pn
inc
mulb
sbb
sbb
enter
call
cli
push
ret
xor
pushf
xchg
push
pop
lds
addr16
iret
inc
insl
outsb
insb
push
out
ja
cmp
in
inc
push
jb
mov
ja
icebp
icebp
icebp
push
outsb
cmp
gs
js
jo
insb
shrb
aas
sub
ret
jb
cs
jmp
iret
push
pop
dec
push
push
popa
arpl
je
sub
xchg
inc
aam
dec
sub
insl
js
in
sub
imul
cmp
dec
mov
ljmp
data16
jae
loope
mov
mov
repnz
jecxz
xor
cmp
loope
sbb
mov
inc
cmpsb
sbb
gs
jl
add
repnz
dec
inc
jl
into
dec
dec
int3
dec
push
repz
pop
push
push
push
push
out
mov
outsl
push
push
insb
rol
out
push
push
ss
pop
in
mov
scas
xor
ret
pop
xor
out
pop
pop
cmp
jae
cmp
or
negb
mov
jge
jg
ret
loope
andb
xorb
loop
sbb
test
test
xchg
cmp
pushf
xchg
loope
push
popf
jb
outsl
lahf
arpl
push
mov
xor
cmpsl
test
aaa
inc
fisubrl
cmp
popf
leave
mov
lods
sbb
mov
repz
loope
sbb
mov
sbb
xchg
nop
imul
cmp
xchg
js
je
push
rolb
push
fnstenv
gs
loope
outsl
fcmovnu
xor
xor
xor
push
xchg
fs
loope
push
std
add
cmp
pop
inc
hlt
xlat
xchg
cmpl
push
clc
mov
outsl
jecxz
hlt
sbb
je
cld
je
and
or
test
pop
inc
insl
pop
adc
dec
or
sbbl
test
shlb
adc
cmc
sub
subl
jmp
lods
cmc
jno
xor
in
adc
xchg
xchg
shr
push
pushf
inc
test
jmp
dec
jbe
add
lea
jmp
sbb
loopne
rcl
push
push
xor
adc
adc
mov
mov
inc
mov
mov
insb
or
jne
lods
or
xchg
sub
sub
push
scas
call
pop
loope
int
or
push
sbb
cli
xchg
ja
push
mov
test
inc
inc
fstl
fisubs
in
in
xor
subl
inc
int
call
pushl
mov
pop
lea
pop
add
and
int
xchg
cmp
sub
aad
xchg
xor
push
mov
enter
rolb
mov
push
add
xorl
add
mov
jmp
notb
push
add
movsb
push
mov
cmp
rcrl
pop
out
sahf
xor
dec
mov
add
and
cmp
bound
jge
cmp
pop
dec
dec
cmpw
jne
pop
or
dec
jg
pop
jne
call
aam
ds
into
xchg
or
sub
xor
and
inc
inc
cmp
pop
jb
or
mov
dec
cmp
push
repz
cmp
mov
and
inc
pusha
jg
popf
orb
push
cmp
aam
add
jbe
fdivs
push
mov
icebp
jae
loope
adc
gs
xor
xor
push
xchg
mull
stc
sahf
cli
xor
out
gs
outsl
sahf
out
cmp
addr16
insb
xchg
ja
push
push
test
jns
outsl
push
pmulhuw
push
dec
or
jo
mov
les
pushf
sar
cmp
dec
dec
aaa
rol
mov
add
push
test
cltd
mov
push
outsl
popf
scas
sti
je
sub
and
push
xor
iret
loop
mov
divb
arpl
adc
push
dec
lea
push
outsb
cmp
pop
mov
cmc
lods
adc
in
hlt
shl
mov
das
inc
test
clc
xchg
inc
je
push
aas
xor
xchg
inc
shrb
or
lock
jl
inc
stc
dec
jo
hlt
or
sub
lock
sub
loop
ret
cld
xchg
inc
fstp
jno
push
jecxz
sti
fadds
lock
mov
imul
xor
pop
mov
sbb
clc
jne
xor
cmp
mov
test
sub
xlat
test
add
sti
adc
sbb
iret
mov
repz
sub
cltd
iret
sti
les
mov
sub
pop
push
movl
sbb
test
push
hlt
jo
mov
and
mov
nop
push
addb
shlb
xchg
and
pop
push
adc
pop
dec
push
in
das
push
sbb
mov
lret
add
push
pop
cmpsl
outsb
and
inc
leave
or
lahf
jecxz
pusha
xchg
je
mov
ja
fs
cmpsb
sub
dec
leave
int
sub
sub
adc
ljmp
stc
inc
mov
push
push
mov
mov
mov
xchg
cmp
gs
cmp
mov
jb
mov
ret
shlb
faddl
push
insb
mov
iret
repz
dec
jo
iret
repz
push
gs
je
test
inc
inc
int3
imul
dec
popa
ret
mov
cmp
jns
outsb
fs
out
push
cmpsl
jno
gs
jmp
sahf
je
js
add
jno
lock
out
push
je
inc
outsb
fs
gs
jmp
gs
pop
loope
dec
dec
leave
outsb
lret
mov
xor
into
adc
mov
mov
shrl
aad
dec
pop
insl
xlat
inc
mov
mov
push
addr16
popf
mov
stos
cli
fxch
cmp
pop
dec
mov
clc
cmp
aas
leave
enter
cmc
std
xorb
push
xchg
stc
adc
stos
int3
jno
xchg
dec
or
loopne
in
call
lcall
mov
ret
push
roll
and
sahf
dec
sbb
lea
or
dec
in
nop
clc
sub
lret
dec
jns
shr
push
call
pushf
das
loope
and
je
xchg
lock
fisubs
enter
sbb
imul
enter
or
hlt
pop
push
push
mov
test
or
cwtl
nop
das
xorl
cltd
idiv
pusha
or
jle
clc
ljmp
iret
mov
subl
popl
jl
rcrb
inc
cmp
jl
and
ljmp
out
add
mov
rorb
push
push
push
into
cld
push
les
sub
jne
mov
xchg
xchg
xor
adc
movsl
xchg
xchg
lret
ljmp
add
sti
xchg
sbb
xorl
fisttpl
push
jge
inc
insl
andb
pop
testl
sub
stos
rcll
shlb
ja
push
leave
sahf
insb
imul
cmp
dec
addr16
xor
clc
dec
stc
inc
cli
inc
and
xchg
sti
jb
popa
std
insl
mov
sbb
movsl
outsl
cmpsb
jp
imul
stos
push
lods
dec
jo
sbb
lods
push
scas
imul
loope
ja
inc
mov
mov
mov
and
jae
jae
pop
loope
xor
ss
jecxz
in
iret
jb
in
inc
jb
dec
push
shl
insl
jmp
repz
dec
popa
js
sbb
repz
outsl
outsb
pop
xchg
popa
fcomps
inc
fidivl
dec
jge
cmp
insl
fstp
loope
cmp
pop
lea
pop
pop
nop
pop
sbb
xchg
xchg
push
xchg
push
xchg
inc
xchg
jb
loope
cmp
gs
push
cltd
jo
mov
lcall
adc
lahf
xor
std
mov
pop
inc
cwtl
daa
mov
shrl
loope
call
mov
jecxz
push
addr16
fcomi
cmp
jne
ret
loope
cmp
push
lret
outsb
int3
fs
aad
jge
mov
add
mov
cmp
push
movsb
ljmp
pop
aas
mov
movsb
inc
sub
aad
sub
jno
out
and
or
rorb
push
push
xor
ljmp
sub
cmp
clc
sub
rcll
orl
gs
xchg
in
inc
out
aam
in
jp
out
fcomps
dec
adc
lea
dec
jecxz
push
pushf
xchg
jle
inc
loope
inc
mov
in
cld
lea
pop
jp
add
pop
test
dec
pop
lcall
mov
clc
cmp
out
push
clc
cmp
jbe
das
push
push
push
ret
mov
adc
sbb
inc
mov
lock
sub
jo
push
add
push
pop
leave
inc
hlt
push
xor
and
hlt
div
jge
mov
cmpsb
lock
sub
xor
cld
aam
and
or
dec
jbe
call
clc
cmp
sbb
cs
push
repz
dec
xchg
adc
div
sub
inc
inc
cmp
mov
test
ret
cs
cmp
in
fwait
call
mov
pop
push
jo
enter
add
adc
int
mov
inc
push
adc
adc
je
pop
negb
and
or
das
xchg
fsubl
int3
pop
and
push
shlb
mov
jb
pop
addl
push
repz
mov
fidivrs
and
enter
mov
push
fisttpll
dec
mov
in
mov
jle
push
or
imul
mov
and
andb
gs
pushf
hlt
filds
jno
mov
rcrl
int3
int
adc
pusha
iret
repz
push
jb
and
ficoml
push
push
xchg
test
lret
dec
int
lds
or
inc
lods
cli
shr
dec
scas
pusha
or
sahf
ret
insl
and
mov
pop
lcall
iret
mov
dec
shlb
jo
mov
enter
pushl
into
loop
adc
in
sub
or
push
jl
stos
push
adc
xchg
popa
xchg
ljmp
in
xchg
jmp
sub
sub
mov
movb
jle
addr16
movb
nop
sbb
sti
push
push
loop
jae
sbb
xor
sbb
sub
push
cld
decl
jnp
xor
jno
adc
ret
inc
xor
pop
push
xlat
and
mov
fs
adc
push
mov
xchg
mov
pop
push
cmp
push
mov
push
push
cltd
lcall
xor
insl
fs
or
andb
je
push
inc
inc
fildll
xor
hlt
int
adc
hlt
sbb
or
hlt
cmpsl
sbb
in
leave
mov
jg
dec
inc
pushf
adc
nop
fs
sbb
insl
xor
popa
cmp
dec
push
rclb
jbe
jg
in
lea
das
or
mov
sbb
and
fnstsw
xchg
test
aam
in
push
mov
and
hlt
arpl
loope
cmp
je
imulw
outsl
stc
outsb
cmp
js,pn
imull
stos
push
or
xchg
xchg
in
movsb
adc
inc
inc
sub
dec
or
xor
outsl
jmp
in
imul
jb
popa
out
jns
jecxz
repnz
dec
pop
xchg
shrb
daa
pop
jmp
int3
lods
int3
xor
lret
and
addl
and
mov
cwtl
or
sarb
out
dec
int3
ss
fldcw
test
lea
xor
pop
ror
or
mov
int
cmpsl
mov
or
rcll
push
data16
push
inc
mov
fistpll
xor
mov
faddl
xor
xor
sbb
pop
sti
sbbl
sub
testl
lea
sahf
int
mov
push
xchg
out
gs
imul
jp
jo
test
test
push
shrb
and
xor
pop
sub
push
inc
push
and
mov
add
je
jno
xor
add
jp
sub
insb
add
out
std
sbb
jne
les
jb
loope
cmp
gs
popa
enter
lret
sbb
xchg
outsl
int3
outsl
int
into
sbb
pop
jno
shrb
ret
cmp
xor
xor
push
aad
popa
sahf
jmp
add
cmp
or
arpl
ret
jb
out
call
and
inc
jb
repz
pop
in
lock
gs
repz
repz
cmc
out
in
xor
dec
lcall
mov
dec
cmpsl
movsl
mov
dec
mov
lock
out
mov
stos
loopne
mov
mov
or
jmp
jne
jmp
rclb
popf
and
stos
push
mov
sub
or
pop
fimull
ficoml
ret
pushf
jmp
lods
je
imul
inc
fs
out
sahf
jbe
jo
xor
cs
jmp
sub
or
cmp
imul
push
xchg
stos
inc
mov
outsl
mov
out
imul
in
test
repz
les
iret
repz
push
popa
insb
jne
sbb
imul
lds
cmp
jne
jae
je
sbb
xchg
imul
jo
mov
mov
movsb
or
iret
addr16
dec
jae
lods
or
xrelease
out
dec
mov
lds
mov
test
fistps
test
and
enter
fildl
je
jne
xchg
add
jb
imul
in
xor
gs
ret
fcomp
test
push
push
ss
loope
xchg
or
mov
xchg
add
inc
mov
push
pop
mov
mov
inc
xorb
pusha
or
fcomps
rclb
add
and
push
insb
pop
inc
pushf
jne
bound
xchg
test
sti
aad
pop
stos
data16
pop
cmc
mov
sub
test
jne
ret
addw
adc
dec
pop
dec
cmp
lret
push
inc
insl
lea
xchg
ds
test
mov
adc
cmp
xchg
outsb
or
push
iret
je
mov
leave
nop
push
repz
adc
pop
add
cmp
ja
mov
in
out
add
in
xor
add
xor
adc
adc
xchg
shrl
inc
jmp
cmp
jb
sbb
pop
js
add
dec
sbb
inc
and
cmp
adc
adc
xchg
pushf
or
popa
and
mov
enter
aam
popa
inc
pop
xor
add
or
add
nop
loopne
shll
mov
mov
cmp
orb
daa
push
inc
or
das
adc
mov
outsl
dec
mov
push
or
je
adc
dec
es
push
dec
push
popf
sbb
push
and
mov
or
ret
es
ss
cmp
push
das
popa
adc
xor
subb
inc
out
gs
test
add
add
adc
and
sub
bswap
repz
sbb
pop
call
mov
push
push
xor
push
or
testb
clc
dec
repz
es
cs
stos
cmp
daa
cmp
dec
outsb
xlat
insb
cs
je
leave
inc
test
outsb
shrl
jo
sarl
jo
rorb
ret
dec
sti
mov
jns
shll
jo
sbb
push
cmp
aam
sti
xorb
je
xor
out
mov
jle
inc
xchg
data16
fnstsw
scas
gs
mov
je
sahf
out
push
popa
fs
sub
shlb
lret
mov
ds
je
jb
loope
fcompl
inc
cmp
xchg
jae
movsl
add
cmpsb
popa
cmpsl
outsb
test
inc
sbb
mov
or
pop
sbb
mov
cmp
stos
mov
xor
dec
dec
pusha
or
loop
push
outsl
xchg
push
fwait
push
xor
pusha
and
push
jle
xchg
push
and
mov
and
flds
or
repnz
jmp
add
dec
push
ret
loopne
mov
imul
push
fcoml
ds
mov
lea
ss
add
pusha
inc
leave
mul
dec
es
add
add
mov
je
push
push
movsl
mov
movl
rolb
inc
xchg
in
pop
inc
mov
xor
jg
subb
je
pusha
popa
leave
addb
sbb
add
call
adc
stc
lock
lcall
adc
pop
push
and
ljmp
dec
and
push
add
shll
add
jnp
je
mov
mov
test
je
mov
inc
inc
jmp
andb
daa
lods
lahf
ret
push
mov
je
jnp
xchg
addl
xor
jne
mov
cmp
or
mov
push
inc
cmp
adc
cmpb
pop
pushf
or
jmp
ret
fmul
enter
sub
jmp
cmp
sbb
fs
or
and
inc
push
std
lea
clc
pop
add
test
clc
andl
pop
mov
sti
sub
mov
cmp
inc
xor
addb
lret
mov
pop
jb
xor
mov
add
add
leave
insb
adc
xor
cmp
inc
inc
jmp
mov
pop
jle
enter
mov
add
push
mov
mov
inc
inc
test
jne
xor
xor
ret
and
sbb
inc
and
or
or
sub
out
cmp
mov
jne
mov
sub
push
add
adc
cmp
je
shlb
push
inc
jmp
mov
cmp
push
pop
int
push
add
fadds
cmp
out
dec
loopne
lods
pushf
adc
rcrl
cmp
fs
cmp
pop
lret
in
inc
bound
push
aad
addr16
rcll
inc
cli
outsl
cmp
inc
cmp
jae
fcoml
rol
push
mov
movsb
mov
pop
adc
inc
sbb
shrl
shll
sbb
sarb
xchg
mov
pop
push
jns
mov
sub
loope
insl
cmc
inc
imulb
jb
int3
lock
cmpsl
jnp
std
jns
inc
sbb
in
insl
shl
enter
push
xchg
mov
pop
inc
leave
sub
xor
lret
shrb
mov
mov
add
inc
add
dec
insb
mov
add
cmp
jae
pop
jb
jo
and
pusha
dec
add
cmp
jbe
mov
pop
rorb
ja
mov
add
jmp
xor
shlb
imull
xchg
cmp
jb
jmp
mov
xor
inc
jp
add
movzwl
sbb
cs
mov
mov
add
clc
adc
outsl
cmp
jb
adc
inc
jne
mov
mov
or
je
cmp
fsubl
test
mov
movsl
hlt
cmc
sbb
mov
sub
xchg
pop
adc
and
dec
pop
mov
movsb
cmp
inc
jg
dec
inc
push
mov
cli
xchg
adcb
fsubl
loope
ret
adc
or
or
push
inc
dec
sbb
or
jle
adc
test
negl
add
xorl
fadd
clc
mov
push
notl
cmpsb
lret
dec
cmp
es
mov
cmp
jle
jne
add
aad
add
outsl
add
jbe
xchg
dec
clc
sub
pusha
xor
jnp
sbb
js
dec
mov
jne
or
and
and
movsb
popf
int
icebp
lcall
adc
cmpsl
aam
xchg
adc
inc
ret
negb
sub
mov
inc
fidivrl
adc
and
sbb
and
fsubl
inc
je
je
ret
jne
xchg
ds
jne
filds
js
mov
or
jne
idivb
add
clc
push
mov
movsb
inc
insl
xor
in
les
xor
jmp
mov
and
ja
jno
or
adc
mov
in
and
cmpsb
in
in
insl
in
and
in
andb
push
push
ds
xor
jb
cltd
dec
aaa
nop
cmpsb
xor
nop
mov
nop
adc
test
das
test
addb
mull
cwtl
ja
lret
les
sahf
bound
sarl
push
sub
pop
pop
stc
xor
or
stc
clc
test
sbb
add
in
clc
mov
lods
sbb
out
xor
dec
xorl
test
in
lods
addr16
mov
add
fldenv
mov
nop
nop
inc
cmp
inc
pop
xchg
and
jge
cmpsb
ljmp
mov
fadds
inc
xor
mov
mov
xorb
sub
sub
dec
mov
push
out
inc
xor
add
mov
decl
sub
icebp
xor
inc
sbb
mov
jp
push
xor
in
push
push
xchg
inc
mov
dec
lock
movsl
sbb
jo
mov
sub
lods
inc
aad
dec
mov
orb
adc
sbb
inc
nop
in
pop
jge
dec
daa
add
mov
mov
mov
sbb
add
add
mov
sti
mov
sbb
add
rolb
pop
push
lret
lea
dec
mov
test
test
sbb
loopne
loope
loop
jecxz
ds
ret
loope
in
push
imul
repz
gs
sbb
out
mov
xchg
icebp
lcall
adc
pop
jae
pop
cmpsl
fs
scas
insl
sub
scas
xor
mov
sub
inc
std
adc
movsl
adc
adc
lock
sub
rcrb
or
ret
cmpl
loopne
enter
sbb
gs
dec
aaa
movl
repz
cmp
mov
mov
jns
out
outsl
ja
inc
inc
daa
xchg
out
jb
cmp
xor
sub
call
in
mov
test
jp
push
mov
pop
sbb
xor
decb
cli
mov
xchg
std
xchg
std
cmp
ja
inc
insb
insb
sarb
inc
popa
arpl
popa
pop
jmp
popa
je
lret
push
bound
lds
pusha
xchg
nop
fildl
push
fs
jge
stos
stos
pop
push
xor
pushf
cs
mov
inc
adc
cltd
or
stc
add
cmp
add
orl
aam
jp
int
push
sbb
dec
sub
ds
mov
sbb
push
loop
adc
fmull
jns
push
mov
icebp
push
in
jnp
rcrl
les
pushf
pop
xor
mov
add
fmuls
repnz
insb
int3
ror
xor
lret
cmc
aam
int
jle
jbe
loop
repnz
fcmovnu
test
js
fists
jecxz
lods
aam
add
dec
adc
mov
fisubl
pop
mov
loop
call
dec
jecxz
addr16
mov
cmp
jp
scas
sbb
imul
sub
mov
dec
cmp
push
or
sahf
xor
xchg
cwtl
pop
cmpsl
mov
js
mov
std
cmp
cmpsl
push
scas
fwait
jnp
dec
dec
pop
mov
pop
jmp
sbb
fmull
and
in
xor
loop
pop
in
push
icebp
jo
shrb
popa
add
push
lea
mov
push
mov
mov
jne
lea
or
dec
push
sub
fmull
sbb
push
dec
jle
push
addr16
push
and
add
add
lock
lea
push
cmp
nop
and
test
andb
mov
mov
or
imul
dec
enter
or
in
dec
sbb
push
jno
repnz
sti
cs
adc
jmp
sub
xor
push
sbb
mov
stos
pop
cld
and
shll
cmp
pop
and
inc
or
mov
xchg
xlat
insb
cmp
sbb
mov
xchg
pusha
test
jne
shlb
adc
inc
add
dec
loope
xchg
dec
sbb
push
jbe
icebp
and
jmp
sbb
adc
push
xchg
cld
sbb
sub
add
lock
mov
and
insb
mov
cmpl
jne
mov
push
xor
mov
test
je
add
inc
cmp
dec
cli
add
jae
mov
pop
enter
mov
xor
nop
xchg
mov
xchg
shll
push
sti
or
stos
adc
inc
pop
or
cmp
inc
mov
cmp
fimull
add
cmp
mov
pop
outsl
adc
push
fs
nop
xchg
xchg
or
mov
jo
mov
in
add
out
push
sahf
inc
fistps
push
pop
cmp
adc
pop
mov
pop
xchg
out
mov
and
pop
cmp
test
inc
pop
and
dec
int3
mov
cwtl
outsb
mov
push
or
pop
adc
hlt
fmul
popf
mov
subl
cmp
jno
mov
imul
sbb
and
and
and
and
xorb
orl
inc
mov
rolb
and
pop
mov
mov
pcmpgtd
mov
sbb
mov
stos
inc
or
je
dec
lcall
cltd
sub
xor
addr16
lea
es
sbb
or
gs
push
in
mov
cmp
mov
lcall
je
dec
je
inc
enter
dec
jne
andl
push
data16
iret
lock
mov
jmp
repz
cmp
cwtl
jmp
cld
jmp
adc
fwait
jbe
lock
jo
mov
or
sub
push
out
xchg
push
pop
mov
iret
mov
jmp
jg
push
dec
mov
int3
ret
xchg
icebp
push
dec
movsl
xor
or
sub
pop
mov
mov
xor
shlb
fldenv
jo
or
popa
and
imul
jmp
sbb
or
sbb
inc
iret
jmp
cmp
loope
test
push
push
or
xchg
ret
call
xchg
inc
xchg
and
je
push
pusha
mov
imul
fdivrs
dec
cmp
test
movsb
jb
popf
loope
jbe
enter
sbb
ret
cmp
fs
jne
xchg
loope
jne
jne
jne
jne
jne
push
xchg
add
js
js
js
loope
cmp
js
js
js
ja
ja
sbb
xchg
ja
ja
js
ja
xchg
loope
ja
ja
ja
ja
ja
cmp
inc
ja
ja
ja
ja
jbe
xchg
loope
jbe
js
js
js
jo
sbb
js
jns
jns
jns
ja
push
xchg
sahf
jbe
jbe
jbe
jbe
loope
cmp
jbe
jbe
jbe
jbe
jbe
sbb
xchg
ret
jo
sbb
jne
jne
jne
jne
jne
push
xchg
ss
jne
jne
jne
loope
cmp
jne
jne
je
je
je
sbb
xchg
je
je
je
je
jns
out
mov
movsb
lcall
jl
push
out
sahf
push
inc
ss
jns
inc
sarb
sbb
jns
xchg
jns
push
xchg
add
insl
arpl
nop
ss
aas
xor
inc
pop
push
cmp
add
xor
pop
cmp
dec
icebp
add
pop
pop
inc
js
inc
jb
add
movl
insb
gs
jae
jb
outsb
je
inc
mov
add
imul
je
outsb
cltd
adc
push
pop
jae
je
arpl
dec
xchg
in
mov
pop
add
gs
ja
jae
insl
inc
mov
cmpsl
dec
arpl
push
xchg
in
fs
insb
insb
into
cmp
xor
pushf
or
cld
mov
outsl
jo
outsb
add
pop
outsl
cmpsb
add
mov
or
rolb
je
insl
xchg
pop
hlt
dec
out
add
es
movsb
fs
jecxz
movsb
fs
in
outsb
sbb
gs
mov
add
xchg
and
daa
popa
outsl
arpl
add
dec
cmp
jo
pop
push
xor
sub
ss
cmp
mov
loopne
outsl
ja
adc
fs
fcoml
mov
cmp
add
push
cs
jbe
add
clc
mov
inc
inc
dec
bound
arpl
sbb
adc
inc
inc
insb
dec
aaa
pop
cwtl
push
add
xor
daa
fwait
and
inc
outsl
shll
gs
dec
sub
imul
sbb
outsl
movsb
pop
aam
pusha
mov
add
ret
inc
dec
xor
add
dec
loop
in
jo
lcall
bound
pop
and
gs
dec
outsl
sub
mov
dec
push
or
dec
outsl
popa
bound
aaa
rcrl
insb
push
push
int3
psraw
fs
iret
insb
pop
mov
je
or
in
pop
shlb
cmpl
dec
adc
dec
fcmovne
ljmp
cmp
shrb
test
jb
push
pop
cwtl
mov
dec
dec
pop
cmp
fwait
inc
add
mov
fnsave
aaa
shlb
jae
push
lahf
sub
push
push
js
sbb
push
mov
fwait
cwtl
lock
mov
inc
fs
sub
enter
sbb
lods
sbb
cmpsl
pop
int3
jmp
ret
daa
jne
rorb
popf
es
cbtw
dec
in
outsl
jae
push
push
pushf
dec
dec
je
push
jne
add
lret
jo
jle
push
imul
outsl
dec
pop
mov
imul
dec
test
pop
out
sub
repz
js
push
outsl
ljmp
cmp
imul
aad
out
mov
add
and
jo
jo
outsb
push
outsl
dec
mov
add
cmpsb
cmp
or
push
or
lods
mov
inc
fdivrs
inc
mov
sub
mov
sub
in
arpl
pushf
push
iret
test
mov
jne
cld
shlb
xor
xchg
sub
iretw
inc
mov
shlb
add
jne
inc
inc
xchg
fwait
scas
cltd
sub
xchg
xor
lret
lret
push
add
mov
inc
push
dec
inc
dec
imul
push
nop
or
inc
je
ja
ss
ret
std
add
push
mov
and
sbb
sub
lods
jecxz
push
cmp
imul
test
jae
gs
scas
add
push
add
enter
lret
push
xchg
dec
filds
mov
imul
jp
jp
bound
ja
xlat
pop
dec
xchg
sbb
in
insl
xor
pusha
movb
xor
mov
and
inc
and
cmp
cmp
add
cs
pusha
mov
addr16
sub
sub
les
jo
popa
and
xor
outsb
xchg
je
es
sub
cmpsb
in
jno
sub
cwtl
jo
data16
movb
cmp
jl
pop
cmp
mov
push
popa
cmp
mov
into
bound
addr16
shll
insb
add
fs
outsb
jae
sub
jo
outsl
mov
out
loop
xchg
into
add
lds
scas
add
addr16
mov
mov
and
pushf
mov
push
add
push
push
add
xor
xor
xorb
pop
clc
xchg
dec
dec
inc
les
imul
adc
lea
or
in
mov
insl
andb
xor
jne
jae
jne
call
jle
outsb
pusha
adcb
mov
cmp
xor
je
popl
imul
xor
ret
inc
ja
mov
xor
add
sub
add
cmpl
add
add
add
ljmp
push
push
add
or
fcoml
cmp
mov
cmp
call
mov
loop
pop
lret
ds
sbb
mov
push
dec
inc
mov
cwtl
js
or
mov
gs
or
in
fsubl
addr16
or
int
popa
cmc
sbb
es
dec
sbb
add
lods
pop
insb
mov
ss
xor
bound
sbb
adc
mov
and
xlat
retw
mov
push
push
fisttpl
fldt
daa
add
outsb
mov
mov
pop
lret
or
std
dec
lds
ss
mov
or
loopne
dec
sbb
mov
mov
data16
in
sub
adc
into
fcom
rcrb
pop
fnstcw
sbb
insb
push
or
mov
add
xor
fbld
sub
pop
jns
lret
imul
pop
pop
cmp
adc
fwait
jmp
cmp
jne
push
or
sub
sbb
lods
xchg
adc
adc
mov
inc
test
popa
iret
gs
es
inc
popf
bound
lret
enter
pop
adc
mov
jecxz
add
jmp
push
xor
and
repnz
cltd
daa
enter
lods
xor
repnz
push
and
mov
es
add
push
lods
ss
rolb
xchg
push
xor
loop
int
or
int
mov
lcall
jo
adc
in
pop
or
loop
sub
and
dec
mov
jbe
cmp
push
shrl
andl
and
fimuls
cmp
jns
lret
cwtl
or
test
sbb
push
push
sub
xor
adc
fucomp
mov
es
push
dec
outsl
cmp
xor
shrl
xor
pop
lretw
pusha
aaa
adc
in
sbb
push
push
pop
aaa
jmp
adc
xchg
add
aas
je
iret
sub
sbb
std
ss
or
mov
pop
xlat
and
sub
cmp
or
dec
add
cwtl
dec
sub
mov
pop
mov
adc
xchg
das
mov
pop
arpl
int
push
add
add
gs
mov
gs
popf
sbb
mov
mov
push
pop
xlat
jb
cmp
cwtl
pop
jns
fdivrs
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
adc
sub
or
or
add
addr16
cmp
jb
push
xor
sti
xor
cmp
and
dec
cwtl
repnz
fldcw
mov
mov
mov
mov
pop
and
sbb
sub
dec
jbe
sub
push
adc
enter
sub
or
mov
add
mov
cld
adc
and
and
xor
popf
bound
add
add
add
add
add
add
add
add
cmp
add
xor
add
xor
add
inc
mov
add
add
ja
add
pop
dec
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
mov
add
mov
add
add
xor
add
add
add
push
mov
add
add
add
add
add
add
add
pusha
mov
add
add
add
push
mov
add
add
je
add
add
add
incl
add
add
add
add
add
jmp
add
jl
add
test
add
incl
mov
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
xor
cs
insb
add
add
add
je
gs
arpl
popa
jo
add
add
add
inc
push
xor
cs
insb
add
add
inc
gs
imul
arpl
inc
mov
pop
add
or
jmp
lret
mov
mov
inc
test
arpl
jae
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
sub
mov
add
jo
fdivr
mov
jnp
add
push
add
cmp
push
jbe
add
add
pop
xchg
aaa
cli
movsl
add
scas
insl
popa
pop
je
add
jmp
cmp
imul
jne
cmp
addr16
imul
outsb
out
mov
add
push
push
call
pop
sub
inc
add
cld
add
cld
mov
mov
mov
pop
or
add
repnz
add
adc
mov
test
je
mov
pusha
mov
add
lock
pop
mov
sbb
das
add
and
add
lea
pop
es
inc
nop
mov
mov
ds
xchg
xchg
aaa
mov
test
push
call
push
clc
mov
adc
test
push
add
les
insb
xor
leave
je
iret
sub
outsb
inc
push
lds
xor
jnp
xchg
stos
sbb
mov
xor
jmp
test
loope
pop
and
pop
push
orl
xor
enter
dec
push
rcrb
shlb
stos
cmp
mov
dec
push
jnp
sbb
or
jne
or
dec
inc
mov
imul
add
movb
add
mov
sbbb
addr16
jp
pop
dec
mov
aaa
push
mov
push
movsb
and
ds
les
pop
pop
ret
push
mov
add
jno
stc
stos
pop
sub
or
sbb
call
mov
add
jle
add
or
add
xor
add
je
push
mov
add
add
add
pop
add
jmp
add
lcall
sahf
gs
add
sarb
pop
or
ret
add
mov
push
add
mov
sub
mov
lods
mov
add
lods
aas
mov
sub
add
or
inc
lods
cmpw
andl
mov
mov
and
add
shr
clc
add
mov
add
dec
jb
add
shr
mov
orb
mov
mov
push
or
add
push
add
jmp
stos
addl
aas
pop
push
subl
cmp
or
movsb
or
push
dec
add
push
clc
movzwl
test
jne
test
add
dec
cld
cmpb
pop
adc
jge
add
inc
movzbl
add
sub
je
dec
mov
jne
data16
ret
or
bound
add
les
add
sub
test
add
sub
pop
pop
daa
sbbl
cmp
mov
cwtl
loopne
popa
jmp
push
mov
xor
ret
add
jbe
push
push
call
or
sbb
push
xor
mov
clc
pop
lcall
xchg
aas
dec
daa
fsubp
mov
fimuls
je
jae
shll
sub
mov
add
sar
rep
add
add
sub
fadds
sahf
adc
pushf
rolb
add
stos
pop
jbe
pop
mov
clc
ret
ljmp
enter
inc
inc
inc
rcrb
push
push
push
stos
addr16
nop
adc
and
outsl
and
ds
dec
xor
test
pop
mov
pop
jge
dec
test
xorb
mov
push
dec
mov
or
push
call
in
call
inc
je
test
mov
daa
ljmp
adc
jmp
pop
push
xor
jo
cmp
jne
jmp
mov
lcall
rol
add
shl
or
idivl
sbbl
or
jle
jl
xchg
in
fadds
push
pop
sub
test
xorl
push
cmp
je
add
sbb
adc
add
fwait
int3
or
movsb
iret
mov
add
push
push
call
fimull
call
lds
add
lods
insl
jae
bound
push
rol
sbb
mov
ss
add
scas
testb
xchg
out
or
rolb
adc
cmpsl
jmp
loop
adc
in
popf
adc
mov
cmpsl
sbb
xchg
dec
imul
stc
pusha
ret
mov
mov
dec
loop
mov
and
jmp
aad
push
xchg
inc
mov
inc
es
inc
inc
pop
pop
sub
outsl
shll
mov
mov
lods
rcrb
dec
into
push
ss
cmpsl
adc
ljmp
icebp
mov
cmp
adc
inc
lret
fwait
pop
dec
add
lock
and
add
dec
adc
jl
sbb
shr
xor
rclb
or
lea
add
pop
addr16
push
mov
test
pop
cmpb
orb
mov
pop
lret
dec
jnp
popf
pop
js
cmpsl
lea
and
jmp
test
sbb
lea
outsl
xor
pop
stc
xchg
fsubp
add
loopne
inc
jo
insb
imul
and
jb
jb
andb
arpl
jo
cs
add
push
push
gs
cmp
mov
and
and
je
bound
negl
and
inc
je
je
dec
dec
or
mov
push
popa
insb
mov
add
push
insl
arpl
or
add
jae
popa
addr16
outsl
js
add
push
leave
ret
imul
sub
inc
js
je
aaa
mov
sub
popa
outsb
fs
add
outsb
inc
pop
or
inc
outsl
fbstp
jl
rclb
jb
jne
and
arpl
fidivrl
jns
orb
insl
ror
repz
jmp
cmp
xchg
enter
pushf
add
pop
sbb
sbb
add
pop
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
shlb
add
add
push
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
