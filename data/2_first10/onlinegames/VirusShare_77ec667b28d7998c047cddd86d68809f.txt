out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
inc
inc
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
add
jle
out
add
xor
add
push
sti
mov
cld
daa
mov
mov
pop
jmp
push
stc
or
out
dec
push
imul
mov
stc
adc
dec
adc
int
or
push
int
scas
adc
shlb
add
mov
jo
pop
add
add
fcoml
push
inc
outsl
iret
push
jbe
pop
push
cwtl
jno
dec
add
mov
add
daa
or
pop
and
push
push
pop
xor
fnstenv
icebp
fnstenv
je
xor
decl
inc
xor
and
nop
daa
shrb
xor
out
and
mov
cmpsb
enter
sbb
mov
lock
add
add
xor
mov
jmp
add
nop
push
lahf
and
imul
imul
imul
cmpsb
imul
in
inc
inc
cwtl
jnp
ret
incl
xor
aas
sub
and
cld
lods
in
cmpsb
imul
sub
and
cld
inc
test
roll
loop
adc
sub
jb
lcall
scas
out
je
mov
push
stos
cmp
sub
xor
sarl
pop
outsb
orb
mov
shr
lcall
and
jmp
bound
mov
pushl
pusha
inc
jo,pn
fldenv
test
add
cmpsb
jmp
mov
mov
in
out
incb
pop
add
jo
and
mov
dec
mov
inc
scas
dec
push
push
dec
jg
jle
xchg
lcall
fmulp
cmp
scas
xchg
lods
xchg
ljmp
mov
or
lods
out
rorb
and
pop
cltd
fcomi
idiv
call
push
les
sbb
movhps
addb
xchg
pop
testl
ljmp
cmpsb
movsb
decb
mov
decl
sbb
je
jb
gs
insb
outsl
jae
dec
jmp
fmull
adc
popa
fs
sub
sti
sbb
decl
outsb
push
jb
inc
adc
push
dec
dec
add
mov
idivb
push
cs
inc
add
outsl
xor
idiv
or
add
or
fcmovnu
fwait
lea
and
mov
pusha
add
or
mov
enter
push
fists
lods
mov
add
add
adc
test
add
sbb
testl
ret
shlb
ja
aas
and
aas
add
pop
mov
pop
cld
rcr
or
test
sub
in
mov
sbb
sbb
mov
and
inc
inc
sbb
fistpl
push
enter
or
cld
or
ret
aaa
sbb
and
das
pop
xor
lea
adc
paddw
add
lcall
flds
outsl
add
jae
int
xlat
adc
je
jne
jb
cld
in
jg
pop
shll
pop
or
push
sub
aas
xorb
push
inc
jb
fldt
dec
pop
ja
addr16
outsb
in
ja
push
mov
jae
pop
and
addr16
lcall
or
push
sbb
movw
aaa
hlt
adc
adc
mov
xlat
sbb
lods
fsubr
mov
out
call
test
cmc
cbtw
jmp
fistpll
jg
xchg
aas
hlt
data16
push
lret
dec
je
dec
incb
cli
lcall
je
js
inc
adc
sti
xchg
push
jo
xchg
xor
ljmp
je
outsl
outsb
xor
add
fndisi(8087
or
je,pn
jo
incl
sub
cmp
push
mov
js
sbb
call
in
incl
push
stc
pop
sti
aas
mov
xor
test
push
or
push
add
out
mov
dec
cmp
mov
das
dec
mov
inc
test
and
out
call
add
cmp
sti
clc
add
add
mov
pop
or
push
mov
cmp
imul
incl
clc
outsl
and
and
cmc
test
or
inc
repnz
decl
jns
push
mov
mov
in
cwtl
or
mov
cmpsl
mov
jmp
rol
jmp
mov
popf
add
add
call
clc
decl
cmc
cmp
sar
pop
test
cld
bound
jne
push
xor
xchg
mov
mov
ljmp
js
imul
dec
inc
popa
xor
lods
data16
lcall
std
pop
enter
cmp
inc
cmovno
jle
outsl
lcall
push
imul
arpl
lea
aad
clc
jae
push
jns
gs
arpl
ffreep
pushl
dec
fcmovne
mov
stos
pop
inc
add
and
cmp
mov
xor
cmp
gs
xor
cmp
cmp
pushl
repz
xor
xor
xor
xor
xor
ss
mov
sbb
adc
aaa
xor
add
mov
or
push
push
mov
mov
maxps
mul
xlat
and
jge
push
dec
decl
ljmp
ja
div
fs
jecxz
and
sub
mov
rdmsr
or
lcall
or
jmp
pop
cmovnp
std
pushl
int
in
inc
mov
sbb
pushf
fldl
mov
push
mov
jmp
sbb
adc
push
mov
add
adc
ljmp
pop
jo
inc
in
sar
loopne
push
mov
mov
mov
call
lea
das
in
ficoms
call
in
push
dec
cmp
and
jmp
mov
lea
mov
sub
sub
mov
mov
push
or
or
movb
add
sti
push
push
cmp
jmp
ljmp
jne
inc
dec
outsl
movsl
pop
pop
orl
in
or
in
fadd
mov
lock
or
negl
leave
ret
ret
test
push
data16
cld
ss
divb
jg
or
add
jno
or
loopne
mov
and
cmp
lcall
jecxz
and
pop
or
adc
rcrl
cmp
push
adc
push
ljmp
jle
adc
add
insl
in
jne
mov
andb
inc
or
aas
fcmovb
fwait
pop
inc
pop
cmp
pop
jl
push
aaa
sub
mov
nop
mov
mov
insb
jne
ljmp
cld
add
andw
cmp
jne
mov
add
cmpl
jg
jne
mov
sbb
outsb
insl
dec
cld
dec
imul
aas
lds
je
call
hlt
push
mov
add
add
insl
popa
fnstenv
mov
call
jbe
mov
and
push
jg
cld
pushl
clc
or
lock
or
sub
sbb
pushl
test
loope
xchg
mov
dec
jne
or
es
cmp
decl
dec
adc
iret
outsb
push
lret
je
or
divl
adc
jg
lcall
jne
ja
jge
add
test
or
jae
cmc
mov
fistpll
call
cmp
ljmp
jb
sub
je
addl
jg
je
decl
incl
pushl
ror
fcom
xchg
notb
or
xor
jmp
loopne
or
jmp
or
push
sub
mov
lock
int
push
push
jp
dec
mov
scas
call
mov
incl
add
jge
push
push
push
sbb
or
pop
pop
mov
mov
and
pop
mov
out
push
push
sub
in
push
push
push
pop
sbb
call
push
or
sbb
jmp
fidivrl
lods
dec
cmpl
pop
xlat
test
movl
adc
ds
xchg
out
idivb
movsl
add
or
fsubl
repnz
push
xchg
adc
les
pushl
imulb
dec
dec
mov
or
cs
enter
mov
jmp
lcall
pop
sbb
cli
lfs
push
push
cwtl
jge
add
popa
pop
cmp
jg
inc
jg
incl
mov
inc
js
adc
adc
pusha
push
cmp
jbe
jne
pushl
decb
add
clc
ret
or
out
lods
push
push
sub
inc
jg
push
fadds
pop
sub
daa
mov
lock
sbb
call
daa
or
push
sub
jne
outsl
xchg
pop
dec
or
pop
mov
pop
lock
xchg
in
arpl
xorb
test
cmp
lret
or
adc
mov
daa
mov
jmp
pop
pop
loope
sbb
pop
or
or
pop
xor
pusha
dec
inc
cmp
mov
push
cli
mov
outsl
jno
das
xor
push
lcall
mov
sbb
pop
pop
push
sub
loop
pushf
loop
cld
cmp
push
int3
lea
in
adc
xchg
or
jmp
jne
jle
push
or
dec
pop
lret
add
jl
jne
fsubr
arpl
pop
jmp
adc
sar
cmp
adc
ror
je
mov
mov
clc
aas
mov
jge
clc
jle
jge
pop
adc
push
lods
adc
hlt
cmp
lcall
mov
call
cli
or
je
test
rcll
sar
mov
lock
hlt
mov
push
in
jne
cmpl
mov
add
push
fcmovnu
jne
xor
int
js
pop
push
mov
andl
mov
pushl
sbb
addr16
inc
cmp
and
int3
jmp
mov
jo
notb
popf
outsl
mov
adc
push
outsl
xlat
faddl
ja
jne
data16
repnz
jecxz
adc
or
or
jg
sti
jmp
je
enter
rclb
add
clc
mov
sbb
jbe
inc
aaa
ret
add
lock
out
jo
cmp
je
mov
push
mov
clc
pop
and
lea
xor
mov
fisttps
insb
add
xor
push
js
add
sbb
call
or
add
sti
scas
rolb
cltd
pop
inc
idiv
adc
ljmp
decb
in
inc
inc
jmp
andb
mov
add
xor
loopne
inc
loopne
subb
cld
xchg
js
aas
and
jg
pop
adc
in
push
pop
jmp
mov
sbb
xor
outsl
push
push
jecxz
sahf
fsubs
orb
int3
pop
stos
insl
cmp
das
cld
push
repnz
push
jmp
sbb
xchg
push
sub
inc
pop
lea
pop
mov
add
mov
mov
add
add
and
fs
lock
dec
sub
mov
mov
mov
mov
fsubs
mov
adc
cmp
scas
ret
cmp
cmp
jb
pop
mov
fistpll
out
cmp
xchg
mull
rep
lret
jg
in
mov
pop
ja
xor
dec
jbe
cmpb
jne
pop
fimull
jl
cmp
push
decl
dec
sub
ljmp
or
incl
and
andl
mov
inc
sub
les
and
or
imul
mov
roll
add
push
add
arpl
pop
cwtl
fistl
push
adc
in
mov
decb
push
inc
lea
aas
cmp
jae
incl
add
decl
add
imul
jge
push
mov
dec
or
stos
or
inc
mov
mov
fisubl
rcll
sbb
mov
pop
not
mov
mov
sbb
cld
decl
jge
add
loop
rcll
cli
or
jne
rcrl
fdivr
jg
dec
cmp
lock
xor
pop
pop
xchg
mov
icebp
outsl
cld
jmp
nop
xchg
inc
jbe
or
imul
mov
idiv
das
std
das
xor
subl
and
incb
adc
sti
call
addl
sbb
out
or
mov
add
jmp
repnz
not
and
testl
mov
add
shr
shl
movsl
repnz
mov
jg
aaa
sbb
mov
mov
inc
fisubs
fimull
add
mov
cli
mov
cmp
jo
and
out
xadd
adc
pop
lods
xchg
hlt
inc
sub
aad
decb
sarl
cmp
jae
fiadds
psllq
fstpt
subb
mov
jmp
or
add
dec
daa
pop
jg
push
pushl
fistps
cmc
sbb
lods
push
lods
loop
mov
push
push
bndldx
outsl
cmpsl
fcomip
shlb
push
push
shlb
mov
sub
xchg
rcr
mov
ret
adc
insl
roll
fiaddl
pop
sub
pop
popa
xlat
or
mov
popf
fildll
sbb
inc
xor
outsl
fwait
mov
out
jl
xchg
sbb
mov
or
int3
xor
add
in
mov
xor
mov
cli
cs
out
or
orl
divb
std
mov
fcomp
cwtl
subb
pop
adc
fptan
and
rcr
das
pusha
cmp
pushl
jbe
popa
shrb
pop
scas
testl
std
fmull
sub
sbb
cld
add
mov
jmp
add
adc
sub
mov
ret
ss
fdivrs
imul
loop
mov
hlt
sbb
dec
adc
and
nop
imul
and
testl
rorl
xchg
sbb
fisubrs
xchg
jno
std
stos
lods
push
fdivrs
es
xchg
clc
cld
mov
pop
fidivrs
pop
aaa
das
push
mov
decl
out
jns
pop
mov
xor
sub
or
cmp
push
std
call
mov
and
mov
mov
shl
jbe
insb
or
testb
ret
add
loop
aad
fidivl
pop
or
jmp
push
imul
sbb
pop
xchg
shlb
clc
jg
mov
inc
jge
dec
cmp
inc
rol
xor
mov
xor
in
mov
fdiv
push
pop
pop
es
adc
repnz
sbb
inc
movsb
lods
sub
xor
and
mov
push
xchg
call
clc
mov
mov
hlt
pop
adc
call
in
popa
push
ljmp
lods
mov
cmp
push
adc
add
rorb
mov
aam
int
pop
and
cmp
jge
cli
fsts
mov
cltd
in
sti
shl
jg
or
add
outsb
jmp
mov
loope
mov
out
loope
mov
popa
loopne
ret
inc
enter
das
add
daa
push
jg
ret
mov
push
fisttps
xlat
pop
inc
fimuls
sahf
sbb
cld
ljmp
cmp
imul
call
mov
mov
or
into
xchg
lea
icebp
fbld
test
xchg
sbb
out
aaa
clc
decl
dec
jmp
daa
fistl
push
adc
int3
aad
jae
lret
repz
lcall
add
movl
xchg
dec
fisttps
sti
repnz
iret
sub
shrb
inc
cmp
jmp
add
xchg
fcoml
test
xor
mov
jecxz
cmp
divb
adc
outsb
test
lds
popa
popf
ljmp
adc
jbe
inc
sti
xor
mov
jg
out
push
mov
or
in
mov
xchg
adc
mov
maskmovq
testl
push
push
popf
dec
xchg
mov
call
test
lods
fmul
push
cltd
jb
repz
sar
das
cmp
pusha
dec
mov
in
jae
pop
cli
xor
arpl
mov
push
dec
mov
lds
repnz
or
call
mov
jle
sub
lea
lcall
xor
imul
out
mov
fimuls
xor
jne
jg
lods
xor
aam
test
lods
xchg
jae
adc
fidivs
test
lock
aaa
or
cmp
mov
in
rcll
sbb
pop
loope
mov
rcl
fstps
loop
into
jbe
les
in
jle
das
icebp
jg
ja
out
out
ss
in
cmp
mov
je
dec
jnp
xlat
insb
mov
gs
lods
les
cli
cmp
call
ljmp
lods
lcall
sub
jp
fldt
call
stc
push
or
in
stc
test
sbb
jl
inc
int3
or
inc
adc
ljmp
or
subl
cmpsl
and
aaa
cli
int
mov
cmp
mov
in
xchg
cld
cltd
or
fistl
inc
ljmp
cmp
mov
gs
sbb
rcrl
sbb
sub
sti
lock
int3
or
push
ja
xchg
sbb
hlt
out
decl
dec
mov
lock
in
rcrl
test
and
test
sub
in
mov
lcall
scas
dec
jle
outsl
jecxz
jp
push
mov
dec
sbb
mov
dec
fistpl
loopne
sub
jecxz
jp
xor
ret
mov
mov
int3
decl
pop
mov
xlat
fwait
or
sbb
lea
ret
sbb
repnz
cmp
loopne
fidivrl
pop
loopne
outsl
xchg
test
xor
aam
rcl
sub
insb
xor
roll
ret
repz
lock
shl
inc
xchg
xor
mov
pop
insl
jmp
mov
add
movsb
mov
icebp
push
fisttps
adcl
rorl
pop
or
pop
std
pop
cld
std
inc
js
cmp
scas
sbb
jge
cmp
mov
ljmp
push
push
push
divb
or
sbb
call
outsb
dec
push
xor
adc
xor
xlat
pop
fisubrl
inc
sbb
jle
fildl
lahf
pop
insl
dec
mov
inc
addr16
iret
jb
mov
pop
loope
mov
jg
push
mov
or
add
outsb
stc
pop
sbb
cmp
jne
xchg
stos
fbld
and
cmpb
lea
rolb
insl
rolb
lcall
stc
sub
dec
das
push
add
mov
or
das
push
and
jg
fistps
and
subb
aad
push
addb
xor
cmpb
or
push
jne
jg
mov
add
mov
or
imul
lock
sar
jmp
mov
push
jl
cltd
pop
sbb
add
dec
std
repz
add
stos
cmp
das
lock
cmpsb
sbb
push
sbbl
lods
xlat
clc
call
lcall
push
ficoms
push
push
cld
pop
repz
call
mov
jnp
pushl
mov
pop
mov
cmp
sar
jmp
jmp
imul
add
lea
ss
pop
int
xor
pop
mov
test
cmpsb
pop
insb
fdivrs
int3
push
jnp
xchg
pop
loopne
pop
int3
rolb
aam
dec
cld
call
ljmp
call
adc
in
push
loopne
lcall
std
mov
sub
out
add
iret
out
addr16
gs
das
lock
jg
push
jo
lea
hlt
gs
negl
lds
call
aaa
jmp
mov
xchg
imul
ret
inc
das
inc
call
fldt
icebp
das
insb
ds
decl
test
es
in
mov
lods
outsb
les
into
int3
test
outsl
cld
push
rcr
mov
enter
aaa
push
pop
sub
sub
test
pushl
and
mov
pop
lcall
add
dec
lret
in
mov
out
push
out
push
lock
icebp
inc
in
pop
mov
mov
adc
jmp
or
pop
rcr
dec
loope
aaa
sbb
pushf
in
xchg
rcl
sbb
push
loopne
lcall
hlt
fistl
add
and
dec
rcrb
add
xor
jnp
sub
mov
int
sub
and
jg
lcall
add
adc
mov
mov
jmp
stos
cwtl
loope
adc
mov
test
dec
ret
inc
cld
sub
lock
and
cwtl
das
sub
push
xchg
inc
lcall
push
or
cmp
xchg
or
notb
push
mov
incl
mov
sbb
lods
sbb
or
push
mov
mov
push
or
insb
pop
inc
sbb
ljmp
lea
ret
mov
sti
sbb
push
popa
and
add
jo
sbbb
lea
incl
inc
mov
jne
mov
mov
sbb
sub
sbb
jbe
setnp
xor
mov
sub
add
sub
add
jbe
call
push
shlb
push
mov
pop
call
cs
ljmp
mov
add
lods
inc
inc
inc
inc
dec
outsl
pop
pop
mov
das
cmp
pop
jg
dec
std
jb
fnsave
pop
mov
jne
icebp
add
mov
lock
dec
mov
cmp
shll
pop
or
imulb
adc
jmp
and
add
or
insl
add
cld
pop
jb
xor
aad
jmp
push
adc
cmp
mov
mov
idivb
cmp
je
dec
dec
pop
ds
mov
ljmp
je
pop
push
arpl
pop
cmc
repnz
cmp
jg
in
int
bnd
cmpsb
decb
in
xchg
sub
lcall
or
pop
pusha
enter
push
fisubrl
cwtl
cmp
roll
adc
addl
or
ret
cld
into
dec
dec
xchg
pop
add
sbb
adc
jle
ljmp
andb
loope
sbb
sahf
xchg
seta
call
movsl
les
cmp
xor
push
lcall
fsubr
adc
lcall
enter
mov
icebp
xor
dec
cmp
je
mov
mov
xor
decl
cld
aaa
je
jo
adc
ds
or
rolb
and
out
and
push
inc
call
nop
xchg
xchg
test
xchg
cmp
cld
pop
pushl
pop
push
dec
or
inc
add
add
das
insb
or
xchg
outsb
clc
aam
mov
pop
insl
fcmovne
test
daa
pop
clc
mov
fildll
mov
stos
dec
outsl
hlt
jg
hlt
inc
int3
test
leave
add
inc
adc
aaa
sub
jae
mov
enter
loop
or
aaa
adc
or
jg
rcr
mov
fdiv
cmpl
inc
inc
pop
ss
call
xor
inc
jmp
cmp
pop
outsl
icebp
jmp
mov
push
scas
mov
sub
jmp
mov
dec
dec
arpl
push
sub
dec
sahf
loopne
mov
mov
and
pushl
testb
push
fs
xor
dec
mov
jne
arpl
jbe
mov
lcall
pop
insb
mov
cmp
fdivr
jg
pop
aad
mov
pusha
sarl
or
xor
insb
out
sti
sub
mov
pop
fucomi
ss
cmpb
mov
xor
adc
lods
sbb
aas
ss
xor
or
cmp
mov
mov
pushf
aaa
cld
cmp
xlat
jp
sbb
neg
mov
adc
int3
cmp
mov
in
add
mov
cmpl
out
cmp
je
jo
push
inc
stos
cmp
or
lret
into
nop
dec
cwtl
inc
jecxz
xor
or
pop
mov
adc
sbb
fwait
mov
sbb
pop
adc
pop
adc
mov
jmp
lcall
sub
mov
dec
inc
fs
cwtl
xor
pushl
mov
nop
jbe
adc
insl
mov
xorb
dec
mov
pushl
inc
outsb
lods
cmp
mov
dec
or
lahf
mov
call
push
daa
in
fsubl
push
pusha
stos
or
adc
mov
push
fimull
cmc
xchg
clc
das
ret
nop
leave
pop
outsb
xchg
int
lods
stc
dec
or
add
push
mov
mov
mov
mov
pop
cs
jb
gs
or
mov
mov
mov
xchg
fsts
rcl
js
mov
call
jo
pop
shrl
insb
aam
aad
xlat
pop
fmul
mov
mov
and
mov
pushl
fsub
int
imul
jecxz
pop
in
xor
push
dec
pop
test
out
dec
out
call
mov
dec
jae
testb
jo
int
sbb
sub
addl
ret
rol
adc
outsb
add
lods
enter
mov
lret
cmp
int3
hlt
xchg
push
xchg
insl
lcall
or
inc
cld
pop
jle
pushf
adc
pop
loope
lahf
sub
mov
movsb
inc
das
aam
fldt
jno
movsl
cmpsb
xor
test
push
test
cmc
mov
idiv
ds
or
hlt
cli
jns
lea
inc
or
mov
lcall
jg
cmpsb
dec
hlt
addr16
or
pop
cwtl
mov
sub
adc
bound
adc
mov
xor
add
sub
int3
and
test
lods
sub
int
adcb
add
in
popl
or
pop
dec
sub
dec
inc
call
pop
xchg
xchg
fsts
add
cmc
adc
test
dec
fdivr
cli
mov
xor
out
shrb
aad
clc
incl
jge
iret
dec
out
sti
or
adc
mov
add
shl
and
imul
jg
add
inc
and
jb
ret
sbb
jmp
cmpsb
daa
aam
lds
inc
sub
divb
scas
nop
jmp
out
fs
mov
ljmp
movsl
jmp
sbb
inc
fmuls
ret
jmp
mov
aas
mov
nop
repnz
push
call
incl
movsl
push
mov
aam
std
loopne
lahf
push
hlt
cld
adc
add
arpl
cmc
push
adc
and
sbb
sub
inc
cmp
call
stos
mov
mov
add
mov
add
xchg
fmull
int3
loopne
seto
outsb
lret
shrb
cld
fstps
incl
sbb
into
clc
inc
cltd
adc
and
mov
bound
adc
sub
mov
insl
leave
shll
mov
push
pop
mov
scas
and
lcall
jb
in
pop
push
test
bound
stos
inc
sar
fisttps
insb
lods
pop
in
push
push
test
mov
loopne
addr16
cmp
mov
fs
add
mov
ficomps
cmpsb
sub
jbe
pop
mov
std
and
cmp
inc
movsl
ljmp
jl
mov
jbe
inc
add
and
pop
test
daa
mov
in
stc
movsb
push
call
jo
and
inc
jmp
mov
push
jne
push
dec
dec
jmp
cmp
in
push
add
adc
iret
push
or
dec
adc
sub
int3
popa
xchg
jo
jge
push
sar
dec
xorb
incl
cltd
in
xchg
mov
cmp
outsb
notl
test
subb
dec
testl
mov
andl
or
mov
icebp
jg
adcl
push
dec
fs
js
pop
mov
adcb
test
sbb
cmp
ljmp
adc
add
and
adc
jo
mov
and
rcrb
mov
sti
shll
jmp
push
add
scas
sub
mov
mov
xchg
ljmp
jne
out
sar
in
andl
inc
mov
lcall
sbb
fcmovnu
sub
leave
adc
imul
imul
ret
dec
pop
cmc
pop
clc
inc
mov
xchg
icebp
push
jb
or
daa
loopne
mov
aaa
clc
das
iret
int3
lcall
push
imul
popa
push
dec
push
fldt
lahf
das
fsubs
sub
push
std
das
out
int
fildl
fstp
jae
test
fbstp
xor
xor
pop
les
pop
sub
sti
cld
fstps
fstpt
lcall
mov
inc
scas
mov
mov
mov
int
outsl
mov
mov
add
push
inc
xlat
add
fdivr
xchg
pop
enter
pop
pop
lret
cmp
pushl
xchg
je
push
xor
movsb
imul
call
add
jo
jnp
adc
mov
mov
mov
sub
movb
mov
nop
and
or
test
cli
imul
mov
jbe
lods
bound
add
subb
jg
hlt
dec
mov
add
xor
test
fstl
mov
jmp
jne
std
decl
sub
gs
adc
adc
add
data16
xor
cmp
xchg
or
or
push
outsl
fwait
or
rcr
ja
jne
repz
xor
add
adc
fisubrs
push
test
test
push
add
sbb
addr16
ljmp
mov
mov
insl
pop
push
inc
loopne
push
push
fsubrl
sbb
std
pushl
sbb
stc
and
and
test
xor
add
and
inc
pushl
faddl
loopne
int3
mov
dec
popa
es
mov
pop
data16
and
les
xor
and
mov
ret
xor
call
test
in
mov
in
xchg
inc
call
mov
movsb
xor
xchg
clc
scas
clc
and
cmp
jmp
divl
data16
fldl
or
push
or
and
jns
int
sbb
clc
inc
incl
shl
hlt
in
mov
xor
and
sub
notb
movsl
call
call
mov
fisubrs
dec
in
push
or
mov
sbb
adc
mov
push
and
pop
pop
lock
jg
and
jmp
lock
es
and
test
js
mov
sbb
aas
je
and
es
cmp
out
xor
adc
fdivs
adc
dec
jae
je
mov
movsl
es
bound
cmp
movsl
pop
repz
fs
or
jae
sbb
outsb
xor
popa
jo
sar
fucomip
xor
es
push
repnz
inc
xor
fdivl
cmp
lds
jmp
in
xchg
mov
mov
sbb
aad
cld
call
roll
cld
jae
add
and
int
cld
jnp
push
std
dec
mov
lahf
jge
nop
sub
and
cld
movsl
adc
push
enter
loopnew
lds
jmp
mov
push
fstpl
scas
imul
pop
icebp
add
mov
sbb
adc
or
sarl
xlat
mov
int
push
mov
mov
hlt
daa
pop
das
push
dec
aaa
jne
mov
decl
mov
xlat
sar
call
in
fsubrs
sar
rcr
neg
jae
adcl
test
call
mov
mov
and
pop
mov
icebp
and
add
or
and
pushl
mov
cmp
add
xchg
loopne
pop
xchg
clc
lcall
sbb
sbb
mov
cmp
and
push
mov
adc
les
mov
ds
cs
scas
mov
add
mov
cltd
idiv
mov
outsb
xlat
scas
jmp
outsl
adc
add
mov
inc
ss
mov
xor
div
cmpl
mov
cmpsb
loopne
into
scas
pop
outsl
js
jmp
add
sbb
cli
call
mov
pusha
test
mov
sub
ljmp
xchg
outsb
aad
inc
fscale
inc
mov
add
xchg
lcall
test
dec
xchg
loope
negb
xorl
adc
out
ljmp
push
out
cmp
add
ljmp
or
repnz
mov
outsl
xchg
cs
push
push
push
and
jg
mov
std
xchg
aas
rcl
add
incl
xor
cli
pop
mov
clc
not
or
sbb
fcoml
das
std
outsl
push
aad
jg
add
inc
jmp
rol
jg
call
shl
aaa
jno
in
add
mov
imul
imul
movb
push
push
pusha
std
call
jmp
adc
in
or
lods
jmp
fucomip
mov
lock
mov
sub
cmc
mov
jmp
mov
inc
push
mov
add
mov
jg
mov
in
rdtsc
sete
push
inc
lea
rcl
neg
fidivrs
mov
sub
or
outsl
in
out
push
mov
call
loop
mov
stc
imul
int
mov
outsb
leave
add
loop
mov
xor
push
jg
cmpsb
or
std
xor
out
pushf
or
push
push
dec
pop
jmp
paddusw
mov
pushf
sbb
fwait
sahf
jmp
ficoms
xchg
xor
fmuls
jmp
fildl
nop
push
fisttpll
rorl
cltd
les
jne
sti
mov
jmp
testl
pop
iret
add
enter
jbe
iret
test
aaa
inc
je
mov
pushf
pop
jmp
or
mov
jg
das
pusha
shl
enter
mov
lods
cmp
outsl
std
add
or
movsl
or
std
neg
mov
lcall
in
movsl
push
adc
jmp
fdivr
mov
mov
mov
mov
aaa
out
inc
ds
imul
xchg
sub
cmp
mov
mov
lcall
arpl
sbb
sbb
sbb
ss
pusha
cld
jge
sarb
pushl
mov
mov
sbb
stos
inc
js
lea
aam
pop
mov
adc
xchg
in
xor
mov
out
out
pop
push
mov
or
or
and
jg
call
hlt
rorb
pop
fincstp
pop
bnd
out
and
push
pop
push
inc
testl
call
push
jle
dec
sub
sti
das
pop
sub
es
lcall
or
sti
pop
or
arpl
push
inc
iret
lea
ljmp
std
or
adc
mov
xchg
adc
outsb
inc
mov
fwait
and
adc
push
rolb
ss
sbb
inc
ljmp
out
add
and
xchg
in
inc
jg
lods
sbb
pop
sbb
hlt
incl
add
inc
jo
outsl
cmp
xlat
ret
mov
adc
inc
or
cmp
push
ja
mov
push
pop
clc
jg
push
mov
xchg
mov
scas
jmp
mov
dec
sbb
outsl
xchg
bound
hlt
xor
add
ljmp
enter
call
addr16
mov
rcl
add
mov
in
add
mov
insb
in
jne
push
pop
sarb
je
shlb
mov
adc
je
mov
mov
pusha
jg
cmp
ffreep
add
push
dec
push
aaa
or
pcmpeqb
adc
loope
xchg
sub
push
mov
cmp
in
lea
movsl
lcall
or
enter
je
int
enter
icebp
push
mov
decl
xor
lds
adcb
adc
inc
shlb
jns
or
pop
clc
or
cmp
or
jmp
clc
test
sub
or
add
inc
rclb
call
call
cmc
insl
push
pop
dec
push
shrb
or
sbb
aad
out
test
lcall
jmp
rcll
sbb
mov
mov
stos
movsb
lret
adc
or
arpl
adc
pushl
pop
add
les
push
in
add
dec
and
inc
push
hlt
adc
jl
inc
mov
das
icebp
cmp
pop
mov
in
pop
jl
lock
xchg
js
push
decl
lcall
clc
and
cmp
and
cmc
lcall
nop
mov
hlt
xor
add
rcl
sub
and
scas
inc
lock
sub
xor
mov
aaa
sub
aaa
mov
ss
lock
call
aad
mov
popa
or
sub
in
cmovge
xor
fwait
insb
hlt
mov
insl
sub
in
push
xor
jge
lret
or
mov
icebp
xor
lret
mov
sar
lcall
stos
je
cmp
mov
ret
push
dec
je
insb
adcb
or
test
mov
mov
or
gs
incl
icebp
adc
inc
insb
cmp
xchg
cwtl
ljmp
cmpsb
fnstcw
jecxz
mov
sahf
lahf
mov
mov
mov
fmuls
sbb
sar
fldl
outsb
jbe
or
push
push
pop
insl
out
pop
mov
push
xchg
push
testl
or
scas
add
dec
mov
inc
outsl
outsb
int3
or
mov
test
lret
xchg
lret
and
in
fnstsw
outsl
and
rcr
clc
enter
call
jg
mov
jno
sub
js
cmp
mov
inc
jmp
adc
pop
scas
push
add
enter
into
dec
mov
jmp
push
add
lock
shlb
je
mov
aaa
add
call
push
pop
cvtps2pd
mov
stos
sti
je
push
mov
incl
adc
xchg
fbld
aas
pusha
adc
je
jne
sbb
test
pushl
cld
or
shl
push
fcmovbe
adc
das
inc
mov
test
call
js
outsb
xchg
jne
rorb
xchg
sub
dec
ficompl
clc
aad
loopne
sub
pop
sbb
aam
push
sbbl
in
lock
int3
loop
cld
test
mov
call
push
pusha
and
mov
mov
sub
sub
pop
js
incl
clc
fldenv
mov
sbb
lcall
aas
inc
or
xchg
fidivs
fists
or
jg
pop
clc
xor
inc
inc
aas
pop
mov
ljmp
sar
pushl
test
lock
cmp
ja
jl
hlt
loopne
jnp
or
stc
fisubl
and
fisttpl
fstpl
add
cmpl
or
insl
sbbl
sub
clc
mov
mov
sub
dec
cwtl
jmp
push
sub
add
jae
ja
cs
mov
xor
jbe
mov
xor
jmp
jle
inc
ret
sbb
clc
push
add
into
push
push
test
pop
xor
std
lcall
push
pushl
cli
nop
add
sbb
dec
mov
call
xchg
jo
cmovb
sti
pop
mov
push
jae
xor
aas
push
outsb
popa
and
lea
mov
addr16
jo
ljmp
hlt
outsl
jo
jne
and
sbbl
jg
jmp
jmp
xchg
fs
in
add
adc
inc
cmp
decl
jnp
mov
sub
sbb
xor
pcmpeqd
imul
jg
sbb
sub
fcomps
call
pop
mov
lea
inc
add
add
pop
loop
sub
add
je
xchg
sahf
and
cmp
or
sub
mov
and
sub
xor
nop
add
add
pop
pushf
add
jl
xor
lss
adc
call
pop
jg
insb
sub
aaa
sahf
call
jns
out
sub
mov
stos
push
jmp
aas
adc
cmp
in
jo
jb
in
add
aaa
decb
aas
sub
add
jmp
pop
mov
es
hlt
insb
cmc
imulb
testl
test
clc
stc
mov
pusha
movsb
nop
cld
xchg
and
lcall
add
or
cld
pop
jne
add
arpl
test
dec
roll
cli
pushl
jns
sub
pop
jae
adc
or
push
call
sub
jl
cli
sub
or
int
jbe
cs
or
pop
sahf
or
incl
push
pop
push
mov
xchg
dec
push
mov
fistpl
dec
add
and
fldl
lcall
daa
add
mov
mov
imul
sub
pop
mov
in
aam
xchg
adc
outsl
icebp
call
cmc
adc
mov
lret
push
call
inc
jmp
xchg
cwtl
add
les
into
and
mov
dec
sub
mov
sbb
adc
pop
mov
leave
in
or
pop
cmp
or
adc
mov
add
nop
push
pop
add
popa
fyl2x
nop
movsb
es
sub
mov
sub
pop
sbb
icebp
mov
and
and
insb
lahf
push
lods
jge
add
xchg
push
or
xchg
jmp
pusha
das
xor
sti
gs
imul
cmpsb
shlb
and
daa
lret
je
fldcw
leave
incl
fucomip
loopne
loope
jns
pusha
in
out
and
icebp
sub
cmp
sub
pop
orw
je
outsl
jp
outsb
jnp
std
jbe
and
mov
push
jge
dec
jne
movsl
arpl
sbb
fiaddl
cmp
jmp
mov
es
add
dec
cmp
jb
mov
adc
mov
add
inc
mov
jmp
call
push
and
jnp
dec
sarb
frstor
fdivrl
faddp
or
faddl
inc
loopne
pop
lods
sbb
daa
add
ret
fsub
mov
nop
mov
dec
inc
inc
lcall
outsb
sbb
add
negb
cmp
ss
pop
decl
call
jl
push
jge
mov
or
in
and
js
lcall
jle
lcall
xor
dec
mov
in
popa
or
sbb
ljmp
iret
adc
jbe
pusha
or
std
pop
cmp
je
push
or
sub
inc
inc
inc
jl
das
push
jg
sub
ljmp
sbb
push
std
test
mov
xor
loop
loope
in
push
fsubl
ss
push
call
popa
dec
adcl
mov
cmp
fcomip
jmp
jle
dec
mov
call
push
sbb
push
mov
sbb
call
nop
adcl
loop
ljmp
sub
les
clc
push
daa
jne
inc
out
test
nop
xchg
add
loopne
xor
aas
cmp
push
fistps
push
add
imul
es
cmp
arpl
pushl
bound
pusha
in
fs
push
jo
gs
or
xlat
insl
add
ljmp
jns
add
sub
cld
in
mov
mov
jns
clc
outsl
subb
mov
add
mov
and
movb
sti
aam
lock
dec
fistps
mov
push
mov
clc
jo
xor
adc
lds
fisubs
std
jg
lret
xlat
sbb
pop
hlt
cmp
sub
arpl
ljmp
and
cltd
ja
outsb
push
mov
pop
xor
fsub
fs
mov
adc
fisttpll
shll
or
fisttpll
outsw
insl
jne
pushl
push
and
dec
ret
lahf
test
cmp
loope
in
js
dec
je
pop
lcall
push
mov
loopne
mov
sbb
fisubrl
cmp
sub
test
pushl
xor
nop
sbb
inc
sub
dec
and
ficoms
and
jmp
jecxz
mov
sbb
lcall
shrl
add
add
sbb
jae
ljmp
je
add
xchg
decl
icebp
test
nop
loope
pop
adc
pop
jne
push
push
fs
jmp
mov
pop
and
sbb
mov
pop
add
and
jo
add
inc
push
pushl
and
lahf
adc
rol
mov
pop
clc
enter
outsb
push
or
loopne
rorb
dec
cs
pop
inc
mov
adc
sar
jne
int
movsb
and
mov
mov
jmp
push
mov
into
filds
jmp
pop
dec
jo
insb
xor
cs
lea
clc
test
and
adc
gs
inc
and
mov
pop
cmp
xchg
dec
and
outsb
xor
aad
insl
cmc
mov
dec
pop
and
out
mov
cltd
xlat
pop
cwtl
inc
push
sbb
xchg
mov
aaa
jo
fimuls
outsl
jne
jge
xor
idiv
xchg
pop
xchg
dec
push
orl
dec
inc
xchg
or
ds
adc
sbb
movsl
inc
lret
popf
push
sbb
shll
adc
shrb
gs
je
imul
mov
hlt
orb
fldt
pop
push
pop
sahf
test
push
insl
cmp
jne
push
js
mov
cwtl
adc
cmp
add
mov
test
lcall
test
in
mov
jle
ds
mov
inc
cs
ljmp
mov
incl
paddb
inc
lods
dec
mov
mov
std
inc
jns
ret
je
mov
sarb
outsb
comiss
dec
inc
sub
shlb
dec
repz
popf
das
lock
decl
pop
call
pop
mov
jbe
inc
filds
mov
mov
mov
aas
push
xor
push
push
push
insb
arpl
push
or
push
incl
sbbb
dec
push
mov
in
loope
clc
ret
sbb
xchg
in
mov
leave
loopne
and
das
lret
add
pop
xchg
ds
imul
fwait
das
pushf
mov
xchg
mov
shr
cmp
sbb
xchg
mov
xor
mov
and
or
movsb
pop
xchg
add
sbb
int
xchg
cmp
das
insl
pop
add
jb
mov
jne
cs
aas
cmpsb
popa
arpl
aaa
mov
cmp
xor
sub
das
imul
fldt
jno
sbbl
int3
push
push
hlt
mov
jae,pn
call
push
in
xor
imul
in
cld
fadd
cmp
repnz
cmpsb
enter
call
lret
jo
in
js
gs
imul
jb
xor
aaa
cs
ficoms
cmp
xor
sbb
loop
in
pop
adc
ja
scas
dec
shrl
jmp
mov
andb
sti
repnz
jmp
mov
or
push
test
xchg
and
jb
pop
pushl
lret
push
xor
sbb
mov
jmp
add
mov
dec
or
clc
push
nop
fucomp
repnz
ljmp
add
repnz
add
sub
rorb
add
jmp
ljmp
cmc
add
aaa
push
iret
out
xchg
mov
mov
mov
pushl
adc
pop
test
jl
call
mov
insb
fneni(8087
cmp
or
call
dec
mov
out
mov
incl
or
xor
in
orb
aas
iret
mov
enter
lea
fsubp
mov
inc
outsl
push
push
xchg
in
xchg
dec
push
ljmp
cmc
shll
push
addb
cmc
aad
movsl
sub
fwait
dec
push
cmpsb
mov
jl
pushl
cltd
xchg
cmp
xchg
mov
popf
inc
adc
shll
mov
es
ds
jg
mov
movsl
mov
cli
add
push
cmpl
outsl
hlt
or
adc
push
push
pusha
mov
xchg
xor
scas
push
pop
lcall
xorl
ljmp
xor
adc
mov
dec
push
div
sti
or
inc
test
and
mov
sbb
xchg
push
adc
jl
loopne
int3
call
mov
mov
jae
push
test
aas
ljmp
add
pop
and
loopne
imull
out
sbb
iret
push
sub
icebp
jge
int
add
inc
hlt
std
jg
mov
jl
inc
scas
pop
or
lea
and
lcall
push
pusha
dec
call
es
popf
push
lock
sbb
incl
lret
nop
inc
mov
adcb
xor
test
das
jne
and
fistps
mov
pop
lret
jecxz
mov
fisubl
out
inc
pop
ljmp
pop
cmpb
pushf
dec
andb
xor
jmp
rcll
sbb
mov
or
sub
fsubr
ret
push
xchg
mov
pusha
out
addb
rcll
insb
add
js
adc
lods
ljmp
mov
dec
test
sub
pusha
ss
xor
mov
test
test
adc
or
int3
ja
ret
fadd
jg
mov
sbb
adc
movl
add
std
faddl
pushf
add
je
add
cmpsl
xchg
call
pop
aaa
clc
lods
jg
call
mov
stos
sbb
movsb
outsb
mov
lods
xlat
cmp
loopne
lea
push
mov
adc
fucomp
xchg
mov
cli
adc
ret
mov
cmp
loop
cld
adc
and
lods
call
dec
cli
dec
bound
push
mov
clc
and
or
adc
pushl
pushl
outsb
lods
dec
or
arpl
adc
cld
das
aad
add
or
hlt
negl
test
or
adc
sub
add
add
xchg
clc
jmp
cmc
adc
ret
jmp
jb
xchg
subl
jb
std
lcall
fstpt
pusha
loopne
mov
sbb
xchg
stos
aad
fdivrs
push
xchg
outsl
out
lock
fdivrs
mov
in
stc
sbb
outsl
mov
call
cltd
nop
jne
mov
sahf
push
pushl
ud0
cmp
and
inc
push
out
insl
addl
out
in
fsubp
call
sbb
dec
adc
pop
and
test
ljmp
push
mov
aad
ds
adcb
adc
decl
add
incl
or
out
adc
xchg
xor
inc
add
test
int3
mov
mov
or
sti
clc
std
push
shlb
mov
cmp
clc
xchg
decl
adc
xchg
loope
hlt
ja
mov
add
push
pop
test
movsb
push
or
lret
sbb
decl
mov
adcb
adc
push
push
or
cmp
pop
fstps
pop
fucomip
lea
daa
aaa
aas
jmp
push
sahf
inc
pusha
adc
call
cmp
stos
sub
call
dec
and
cwtl
lea
or
aas
call
clc
or
push
or
fwait
sub
xor
dec
scas
xor
adc
insl
cmpsb
adcb
or
aad
cli
inc
jl
add
jg
das
or
and
shrl
mov
aaa
jg
inc
inc
movsb
jl
jns
nop
fisubrs
jg
push
xor
ret
ja
jb
mov
add
ja
and
xor
repnz
mov
decl
pop
add
pop
aad
jns
adc
sub
outsl
inc
test
mov
adc
insb
cmpsb
fcomip
push
sbb
aad
pop
test
mov
test
fwait
jl
xchg
incl
imulb
dec
imul
pop
dec
xor
decl
mov
ror
outsb
jne
popa
pushf
popa
outsb
sub
push
ss
lock
cmp
or
aaa
jo
scas
jbe
and
lods
sub
push
dec
ljmp
dec
inc
and
mov
pop
ds
movsl
divb
idiv
jo
add
xchg
lea
cmpsb
lret
loopne
jle
orl
dec
ret
pop
stos
xchg
daa
std
aas
js
push
imul
pop
push
gs
jo
flds
lcall
nop
or
sub
mov
mov
in
lcall
mov
xor
ss
adc
jle
or
adc
jne
fildll
fisttpll
bswap
add
int3
stos
mov
shlb
bound
sbb
movl
cld
ljmp
roll
rorb
mov
movsb
sbb
stos
adc
cld
mov
pushl
stos
mov
sti
mov
rolb
pop
push
adc
in
shll
nop
push
decl
std
jge
xor
in
xor
call
adc
test
inc
xchg
outsb
in
sub
fimuls
xlat
rolb
push
jb
inc
mov
lods
lcall
adc
mov
sbb
inc
das
call
fistps
add
scas
jns
dec
aaa
pop
mov
push
dec
in
push
js
xchg
adc
pop
mov
or
mov
push
out
add
icebp
lds
cmc
push
lcall
cwtl
fcomps
mov
adc
pop
jg
fucomip
lea
mov
mov
out
mov
call
adc
mov
mov
xchg
pop
or
push
cmpsb
outsb
mov
or
push
or
and
pop
cltd
adc
mov
add
push
and
inc
stos
mov
sub
add
add
mov
ret
and
adc
pop
cld
pop
inc
push
mov
loopne
ret
push
jbe
push
stos
insb
pop
add
lahf
adc
or
pop
enter
cmc
push
mov
jp
clc
xchg
aad
jg
cmpl
inc
shll
xchg
mov
decl
push
jb
cmp
js
xchg
pop
or
testl
imul
cmc
inc
xchg
mov
fmull
or
cld
das
inc
cmp
push
clc
xchg
fisttps
insl
fisttpl
push
inc
dec
sbb
inc
pushl
fldl
mov
test
test
out
jg
decl
jmp
add
ret
add
xor
lods
shl
pushl
adc
jne
mov
sub
das
mov
cmp
je
add
push
mov
jg
jg
lods
lods
push
adcl
shr
jle
movzwl
mov
out
sub
pushl
add
ljmp
mov
add
mov
outsl
fisttps
or
jne
popfw
sub
cmpsl
or
sub
incl
das
add
ss
adc
lods
mov
out
or
outsb
call
mov
dec
icebp
jg
scas
inc
inc
cmp
jl
add
jmp
adc
lea
ljmp
cmp
add
mov
stos
push
jno
push
fldenv
dec
je
adc
loop
ljmp
cld
add
jbe
inc
adc
jb
sbb
incl
lea
pop
mov
pushl
dec
std
incl
ret
push
scas
clc
jo
sub
push
and
call
dec
loope
xchg
outsl
call
movsl
mov
test
jl
xor
andl
jle
sbb
incl
push
mov
call
mov
in
adc
ror
or
add
loopne
mov
pop
jae
xchg
notl
inc
xchg
adc
sub
and
fists
cltd
cld
nop
or
push
popa
fcomp
push
fwait
int
jge
clc
jg
ret
cmp
mov
xchg
fst
clc
movb
inc
test
daa
loop
decl
fwait
test
jmp
and
mov
stos
xor
dec
in
lcall
sti
fwait
pop
test
push
sub
lea
mull
sbb
adc
inc
int3
insb
lea
adc
mov
lock
mov
add
adc
pop
mov
sbb
dec
pop
clc
sarl
mov
nop
jmp
clc
lcall
call
bound
out
sarb
lret
jg
mov
pushf
gs
outsl
leave
push
sub
adc
jb
fimull
cltd
aam
int3
std
jmp
sbb
js,pn
xchg
xor
or
or
sub
iret
jns
into
jo
sbbb
add
or
or
inc
stos
inc
mov
lret
pop
lea
shl
add
or
push
je
test
in
sbb
mov
xorl
or
push
cmpsb
shlb
dec
push
push
cld
add
push
jno
xlat
sub
ret
and
or
sar
jmp
push
inc
add
xor
pop
add
adc
pushf
xchg
cmpsl
idivl
mov
test
cmpsb
ljmp
and
push
fisttps
push
mov
lret
xlat
add
pop
push
push
jno
jmp
mov
repz
jl
mov
push
decl
adc
push
adc
sbb
pop
lcall
ret
imul
incl
test
jge
aam
in
push
clc
lcall
and
hlt
or
inc
fistpll
fsubr
scas
sbbb
mov
xchg
pop
rclb
cmpb
lret
sub
xchg
fisttpl
ljmp
xchg
mov
pop
mov
fcomp
aad
shll
aam
std
in
mov
xchg
push
mov
daa
pop
adc
gs
adc
jmp
mov
cmp
jo
jle
in
hlt
lcall
jg
cmp
rclb
pushf
jns
mov
pop
stos
push
dec
jl
mov
lods
aaa
in
sbb
das
test
sti
das
icebp
in
add
mov
mov
inc
jae
outsb
push
dec
sbbl
out
aam
cmp
xorl
iret
incl
ficompl
data16
and
push
pop
push
dec
inc
stos
mov
ljmp
push
inc
sub
and
xor
push
and
out
dec
mov
jnp
sub
in
or
mov
call
test
pop
ljmp
in
jg
decl
inc
sbb
inc
out
jb
outsb
cmpsb
push
pop
in
loope
ja
dec
das
icebp
outsl
pushl
loop
jcxz
push
jne
add
push
cltd
in
ds
pop
or
gs
js
lods
lcall
cld
push
loope
jb
xor
leave
jns
cs
sub
dec
std
decl
mov
xchg
cld
cmpl
ret
ljmp
out
pop
pop
inc
mov
lock
push
cwtl
call
push
mov
mov
mov
imul
rcrl
pushl
cli
das
pusha
adc
cmp
push
fisubl
test
incl
add
push
ss
addr16
roll
xor
ss
ljmp
inc
push
mov
mov
sbb
add
inc
sti
jle
and
in
and
mov
push
pop
into
push
cld
loope
movzbl
cmp
andb
add
sub
mov
xchg
and
or
and
push
adc
jecxz
mov
add
pop
clc
jnp
roll
sbb
xchg
fwait
shl
enter
mov
mov
lcall
pop
jecxz
inc
inc
mov
push
sbb
jbe
xor
cmc
testb
and
iret
cmp
mov
cli
ljmp
adc
testb
mov
push
jns
dec
push
arpl
xor
or
inc
cli
incl
decl
les
test
add
cmp
ja
aas
mov
inc
pop
andl
bound
inc
push
inc
flds
lcall
cmp
sarb
out
jne
fmull
xchg
dec
push
xchg
ds
incl
insb
addr16
mov
fsubl
int3
stc
insl
std
xor
inc
mov
xchg
sbb
test
testl
adc
mov
add
fsubr
adc
pop
fcom
aaa
cmpsl
das
cmc
push
shl
xchg
int
lods
sub
leave
sub
ljmp
lock
lods
daa
ret
mov
dec
lods
cwtl
xchg
lods
inc
mov
inc
push
or
mov
pusha
xor
cmp
push
add
cli
push
decl
dec
or
dec
add
push
sbb
mov
incl
out
out
or
adc
cmp
mov
call
decl
xchg
in
ljmp
hlt
fildll
fmuls
mov
xchg
fcomps
scas
jo
pushf
movb
push
mov
jo
cmc
jmp
test
add
sub
add
lds
adc
xor
inc
inc
stos
inc
and
sub
test
add
fldl
jp
xor
xlat
xor
or
pusha
xchg
in
xor
or
lcall
xchg
les
ljmp
outsb
inc
mov
mov
dec
out
adc
fists
cli
mov
out
ror
cltd
and
das
mov
lcall
mov
pop
or
faddl
lods
sub
xchg
jle
inc
arpl
mov
cmp
inc
scas
pop
push
mov
addl
out
mov
mov
adc
call
xchg
sub
xchg
cli
pop
fbld
cmpsb
pop
jae
dec
jno
mov
inc
out
push
mov
and
lods
lcall
leave
or
in
lock
into
jbe
shll
pop
mov
fisttpll
push
push
mull
decl
mov
xor
fdivrp
sub
jge
sub
adc
call
cli
xor
mov
or
or
cmpsb
mov
and
mov
std
call
xor
xchg
sbb
shl
not
pushf
cld
outsl
cld
adc
ljmp
ret
stc
mov
push
sub
lea
jl
movsl
inc
movsl
fdiv
fimull
or
call
test
fsubrl
xchg
icebp
xor
ret
pop
add
adc
jmp
xchg
add
je
push
pop
add
pop
or
scas
cmp
adc
sub
fcoml
icebp
jae
pop
roll
pushf
push
mov
or
fstpt
and
jmp
lcall
fs
and
test
imul
into
std
jle
clc
jmp
daa
pusha
call
fidivl
mov
shl
in
inc
loop
sbb
inc
mov
dec
xlat
pusha
jmp
inc
inc
and
enter
setge
rcl
pushf
cli
mov
inc
or
fstpt
push
push
stc
aas
movsb
ljmp
mov
cmp
sarb
loop
or
adc
loop
dec
xorl
mov
pusha
sbb
std
outsb
in
push
fdivrl
push
cmpsl
xchg
test
clc
push
add
jl
call
fistl
inc
pusha
mov
das
cld
call
xor
jle
inc
and
es
out
or
out
stos
imull
icebp
ds
mov
push
pushf
sub
aam
aad
shlb
je
mov
cld
ljmp
arpl
jmp
mov
fistpl
decb
lcall
neg
les
pop
dec
mov
movb
mov
add
cli
call
cmc
aas
cld
das
lahf
decl
cld
dec
push
mov
adc
or
lea
push
jp
mov
das
lock
jg
arpl
or
pushf
mov
testb
incl
adc
push
sbb
jne
inc
orl
lret
insl
lahf
pop
jmp
or
ret
adc
mov
push
roll
or
dec
inc
sti
addl
mov
ljmp
xor
sub
sub
seta
mov
fbld
mov
push
jge
roll
rep
rolb
mov
sbb
cli
data16
negb
ret
sbb
push
mov
jl
incl
ficoml
insl
push
sub
pop
fiadds
mov
les
jne
fbld
or
cli
pop
mov
pop
sar
sti
incb
rcrl
cli
push
or
jmp
jb
mov
mov
jmp
call
loopne
lods
mov
pop
jmp
jns
xchg
repz
xchg
stos
rolb
adc
pop
cmp
push
jmp
ljmp
cld
mov
insl
pusha
push
cs
sbb
inc
notb
mov
ljmp
cmp
aas
jl
fildl
push
mov
sbb
pushl
std
cld
in
es
add
loopne
mov
les
movsb
push
std
iret
icebp
repnz
jp
call
pop
pop
clc
cmp
add
sub
mov
mov
sbb
incl
add
pushf
stos
pusha
push
mov
or
pushl
sbb
hlt
cli
daa
dec
repnz
pop
or
out
add
jg
ss
mov
cmpsb
test
stc
jmp
cmc
ud2
jne
mov
dec
movsl
or
shr
add
push
std
xlat
fidivrl
jle
xor
in
jmp
fdivl
jle
ja
iret
mov
pushf
cmp
call
aad
shl
mov
clc
in
cmc
adc
jo
dec
mov
push
clc
pusha
pushl
imul
int
push
add
std
mov
call
mov
in
sbb
inc
or
cld
aad
and
pop
dec
or
call
outsl
cld
mov
xchg
dec
xchg
jmp
mov
add
pop
adc
push
jmp
cld
inc
xor
or
add
push
aaa
call
test
or
imul
sti
cli
test
add
mov
cli
pop
clc
lea
cli
mov
stc
add
test
fdivr
push
call
outsb
mov
in
jmp
pusha
add
xchg
call
cltd
push
jg
lcall
jns
jmp
xor
fwait
addl
sbb
aad
sarb
shr
not
shr
int
int
mov
neg
pop
cli
add
cmpsl
mov
pusha
cli
rol
xor
pop
loope
xchg
pop
movsb
inc
cmc
call
in
cwtl
add
fldenv
jbe
fdivrp
fistpll
mov
lret
mul
fs
mov
sub
add
jmp
clc
mov
xor
in
hlt
pop
outsl
push
das
push
push
ret
cwtl
xchg
pop
dec
ljmp
mov
aaa
add
ja
lret
insb
mov
jg
jne
iret
and
push
push
out
nopl
push
sbb
popf
notrack
movsl
push
sub
outsb
mov
sbb
imul
sti
cmp
faddl
shr
lcall
sub
rcr
adc
lods
xorl
mov
adc
call
and
mov
xchg
gs
andl
arpl
sbb
pop
fsub
pushl
outsb
movsl
xor
mov
xlat
je
jg
mov
popa
cmp
std
jecxz
scas
stos
mov
fsubl
push
insl
call
xchg
je
clc
test
div
lds
mov
stc
pushl
pop
js
cmpsl
rorl
push
sarl
outsb
insb
sub
jmp
call
or
sbb
pop
push
mov
pushf
seto
pusha
mov
jmp
popa
jmp
jns
pop
std
jmp
jo
and
mov
mov
push
pop
mov
pop
mov
push
xchg
mov
jns
clc
push
outsb
int
cli
xor
cmp
int
decl
test
dec
int
lods
stc
cmp
stc
daa
jne
xor
xor
call
ljmp
test
ret
insb
loop
push
call
repz
jmp
mov
mov
inc
mov
adc
std
inc
ret
or
adc
push
sub
push
clc
add
cmp
sbb
or
push
jmp
aaa
push
jg
pop
jmp
inc
pusha
ljmp
pop
mov
add
sub
test
push
idiv
movsl
rcrl
cmc
cmp
call
std
dec
std
mov
pushl
es
push
inc
jmp
aaa
mov
es
cld
sbb
sub
rcll
cmpsb
das
push
inc
pop
ret
loope
lea
pushf
push
in
in
adc
shll
pushf
stc
loopne
repz
std
ljmp
mulb
rcrb
fwait
cmp
dec
pop
sbb
pop
adc
shl
push
add
adc
pop
clc
pushl
push
gs
adc
ret
aam
fcoml
test
fucomip
ds
pusha
and
fcomi
test
setg
xadd
cmp
and
repnz
xchg
cli
incl
sub
pushf
imul
inc
mov
into
jno
fmuls
push
subb
setl
add
rolb
inc
sti
dec
or
call
mov
or
dec
xchg
jno
jno
dec
jmp
int
clc
fcomp
jne
clc
shl
xor
sub
std
cmp
add
call
dec
notb
icebp
mov
mov
mov
mov
jmp
mov
cmp
inc
jle
xlat
aam
pushf
ja
popf
xor
test
xchg
mov
push
testl
ljmp
inc
clc
push
jmp
stc
add
push
aas
rorb
pop
movsl
test
iret
ret
lcall
xlat
push
test
jmp
push
jecxz
popa
jo
push
jmp
inc
data16
decl
lret
in
fstpl
mov
add
mov
sbb
mov
ss
push
movsb
inc
push
sbb
lret
rol
fsubp
add
popa
arpl
aaa
mov
ret
mov
inc
jbe
pusha
shlb
mov
aaa
pop
sbb
mov
pushf
mov
ljmp
inc
sbb
sbb
adc
stos
sar
sub
cmp
inc
mov
repz
popf
outsb
push
and
scas
in
movsl
pop
std
orb
outsl
popf
das
fidivrl
and
push
outsl
fistl
dec
ljmp
enter
and
jbe
jecxz
rorl
sbb
shrb
pusha
or
decl
decb
dec
dec
scas
into
fldl
push
mov
cli
call
lcall
fsubrp
int3
fisttpll
mov
adc
dec
add
call
pop
jl
rcl
and
adc
jmp
sbb
cmp
mov
cmp
jl
sarb
jns
mov
mov
pop
fdivr
call
mov
and
xor
push
das
std
pop
fdivp
pop
sub
inc
pusha
dec
xor
cmp
lods
pop
cli
movsl
call
hlt
bound
pusha
inc
mov
decl
leave
add
flds
push
push
popf
fcmovnb
loope
mov
rcrb
fcmove
std
lret
cmpsb
clc
in
decl
push
jmp
pop
jp
adc
mov
nop
rorl
clc
inc
scas
adc
push
enter
lea
push
call
inc
xor
inc
cld
sub
call
pop
pop
and
lea
pop
xchg
or
outsb
insl
call
testl
push
mov
cmp
clc
decl
cmp
incb
ljmp
sbb
push
incl
cltd
shld
jecxz
std
sbb
mov
mov
testb
inc
call
cli
mov
clc
cmp
aas
lods
dec
popf
inc
jae
ja
pop
lahf
insb
push
idiv
cmp
insb
adc
incl
cmp
call
inc
in
mov
rorb
or
int
mov
std
loopne
jg
aam
sar
mov
xor
pop
mov
ret
push
call
xor
pop
mov
clc
mov
sbb
ficomps
lea
xchg
call
sbb
jo
cmp
xlat
lock
outsl
insl
adc
call
mov
adc
push
incl
lea
jg
push
aaa
cmp
mov
shrb
pusha
ja
jle
add
or
das
aad
enter
ljmp
pop
ss
scas
adc
nop
outsb
and
cld
sbb
inc
test
or
call
cld
inc
cmp
cs
call
jmp
pop
mov
fs
test
test
stos
inc
pushf
sar
mov
stc
cmc
push
imul
ljmp
rcl
fcoms
cmp
inc
ret
out
mov
addb
andl
mov
cmc
test
and
lods
stc
ficomps
cld
mov
cmpsb
ficomps
or
add
xor
test
push
pusha
imul
xchg
imul
fisubrl
leave
test
cmp
pusha
test
mov
loopne
push
adc
lahf
test
mov
jle
outsb
mov
push
stc
cmp
xor
movsl
push
das
or
push
pushf
jl
pushf
in
fiaddl
lcall
ljmp
sub
push
sahf
jo
xchg
cmp
das
sar
dec
fwait
push
mov
sbb
mov
in
pop
loop
aad
mov
inc
add
dec
lds
mov
nop
out
pop
fsubrl
push
cwtl
mov
jno
mov
in
imul
bound
sar
jmp
es
lock
mov
jl
imul
jno
lcall
cltd
out
mov
cld
fildl
scas
aad
cmp
sar
add
sbb
insb
testl
sub
shl
fidivrs
sbb
int
shlb
cmp
inc
imul
jp
sub
dec
jge
mov
push
jle
jmp
cmp
ficoms
cmp
shl
xchg
outsb
push
arpl
adc
cmp
jg
psraw
movsb
push
cltd
push
sub
inc
push
fwait
cli
xor
mov
ljmp
das
pop
or
and
jb
into
jmp
sar
incl
ret
int3
xor
test
mov
call
mov
and
adc
sbb
sub
cmp
aas
jno
stos
ljmp
lret
or
je
xchg
cmpsb
idiv
das
push
loop
adc
sahf
popa
sub
sqrtps
rcll
fdivr
decl
pop
repz
pop
xor
js
rorb
cmc
cmc
push
xchg
pop
push
cld
aaa
cli
fdivs
cmc
ss
frstor
push
xchg
lcall
sbb
loop
cli
push
paddb
mov
jmp
push
sahf
push
mov
ljmp
stos
pop
inc
cld
clc
pop
shl
fcoml
test
sar
incl
pop
push
jmp
add
mov
in
repz
aam
add
jge
lcall
lds
mov
ljmp
mov
lods
push
out
lea
and
and
clc
jne
das
jecxz
or
divps
fstp
dec
or
and
inc
push
dec
ljmp
jne
xchg
adc
push
mov
jo
mov
js
loop
inc
stc
andb
pop
adc
sub
call
inc
push
dec
test
mov
rolb
lret
pusha
add
fptan
call
jb
push
inc
mov
cmp
ret
test
adc
incl
lods
and
pop
adc
xlat
sbb
fwait
dec
rorl
sub
sub
ljmp
sub
xlat
xor
sbb
sti
loop
dec
repnz
pop
pusha
pop
fistpl
mov
rcrb
mov
sbb
rcll
cmpsb
out
push
fdivrs
sub
ror
cmc
cmp
insb
or
out
xchg
cmp
pushl
push
xor
dec
call
push
pop
je
call
push
mov
lods
sub
xchg
mov
mov
mov
ljmp
push
iret
sbb
mov
cwtl
add
xor
inc
mov
lcall
mov
sbb
cs
cmp
xchg
outsl
mov
add
add
sahf
cld
insl
mov
test
xchg
xchg
mov
push
data16
mov
fstps
xchg
rdseed
pop
pop
add
stc
xchg
fmull
arpl
mov
aas
in
mov
lcall
mov
in
daa
adc
out
arpl
icebp
mov
dec
mov
jg
imul
push
pop
pushl
mov
mov
aad
xchg
scas
leave
xchg
scas
inc
les
ret
incl
loope
inc
jb
into
shlb
xor
xor
ss
ljmp
inc
add
js
mov
mov
jnp
fdivl
incl
scas
mov
cmp
lock
aaa
and
jnp
cltd
scas
mov
push
daa
ret
cmp
ret
pop
or
sbb
jge
in
inc
clc
add
pop
pop
pop
and
jle
ljmp
icebp
outsl
cmp
imul
loope
inc
fcos
xchg
arpl
ja
neg
xor
ret
fisttps
std
outsl
sbb
loope
pavgw
pop
sub
push
jg
scas
fwait
jg
push
xchg
iret
jo
push
xchg
dec
add
cmpsl
pop
ljmp
hlt
in
add
out
pop
mov
ficoms
cmp
xchg
pop
in
pop
ljmp
xchg
jnp
fsubp
xor
xchg
movl
lahf
fcomi
es
add
jo
decl
outsl
in
mov
cmpl
aaa
ret
daa
adc
stos
fcomip
testl
pushl
adc
pop
push
idivl
xchg
mov
stos
dec
push
inc
imull
or
adc
mov
imul
stos
imul
ret
or
xchg
sti
mov
inc
ljmp
lahf
in
adcl
testb
js
adc
stos
mov
and
in
decb
jbe
mov
fisttpl
sub
mov
add
mov
cmp
mov
sbb
rclb
add
ret
pop
fsubr
sbb
imul
dec
inc
ret
bt
pop
pop
fmul
decl
std
sbb
inc
scas
imulb
mov
and
push
lret
pushl
out
out
js
test
push
add
jl
cli
pop
mov
std
jmp
out
push
inc
aad
pop
cmp
decl
mov
mov
imul
pusha
stos
mov
inc
xchg
xchg
mov
inc
mov
add
loope
mov
cwtl
call
inc
ja
call
mov
inc
mov
add
pop
cmp
sub
nop
lds
sbb
inc
ljmp
cld
das
jb
iret
jmp
mov
pop
fsub
push
in
cmpsb
add
icebp
add
sbb
ljmp
js
lea
arpl
lds
cmp
es
mov
das
cld
decl
or
inc
stos
mov
dec
pop
cmp
adc
insl
pop
std
stc
push
aaa
xor
fisttpl
aas
push
enter
test
call
aas
scas
orl
jnp
sbb
mov
jne
xchg
push
push
jmp
in
aas
ds
add
ljmp
aad
xchg
lds
enter
outsl
adc
imul
xchg
mov
push
xor
ja
jnp
fcomip
sti
mov
mov
xor
out
cmc
xchg
incl
or
pushf
push
pushf
xchg
adc
pop
cli
lcall
enter
decb
sub
mov
fisttpll
dec
push
psllw
stos
push
nop
in
mov
in
pop
xchg
add
cli
push
mov
ret
cmp
or
stc
int3
test
addr16
pop
adc
sub
in
enter
pop
sarl
mov
sar
call
sbb
sub
pop
insl
mov
dec
fisttpll
cwtl
xchg
xor
jg
inc
inc
into
pop
insl
xor
cmpsb
stos
popf
roll
cmc
and
add
das
movsl
ss
in
jg
dec
mov
mov
xchg
insl
nop
ljmp
ljmp
adc
jge
xor
les
imul
addl
out
sar
or
jmp
outsl
jp
mov
test
out
std
decl
popf
pextrw
xor
sbb
ret
mov
test
decl
movb
fwait
push
push
rorl
mov
data16
fistpl
and
in
insb
insb
push
lock
iret
push
jne
lods
jb
imul
mov
jmp
dec
insl
clc
mov
int3
or
pop
push
or
mov
pop
jg
int
cmp
addr16
or
push
and
ja
push
addr16
ret
lcall
std
jle
mov
pushl
push
sbb
pop
imul
and
fs
fnsave
push
inc
decl
pop
call
mov
or
inc
movb
popa
push
fcomp
lock
push
inc
fcmovnbe
mov
ss
pop
das
das
cmc
lods
adc
cmp
inc
mov
js
push
mov
out
push
sub
jmp
push
mov
xor
xchg
pop
mov
pop
xchg
inc
std
jg
xchg
mov
xchg
xchg
xchg
mov
mov
hlt
fistpll
inc
outsl
cmc
ljmp
adc
mov
adc
inc
adc
iret
stos
and
pushl
xchg
out
adc
jne
arpl
lcall
lahf
add
test
mov
xorl
ss
out
push
scas
sbb
out
lahf
lret
lods
aam
call
xchg
in
cmp
or
stc
outsb
pop
lcall
sti
ljmp
cmp
push
daa
add
les
test
insl
lock
in
sbbl
xor
ret
and
sbbl
sahf
pop
loope
dec
cmp
jge
out
push
sbb
inc
push
pushl
cmp
in
mov
pop
xchg
cmc
shl
jne
ljmp
xor
push
cmp
xchg
inc
jl
cmp
mov
cmp
xlat
clc
mov
sti
jb
xor
ja
dec
lods
aad
xchg
pop
jnp
add
pop
hlt
pop
pop
movsb
cmpsl
mov
je
lcall
inc
push
jmp
or
or
adc
dec
cwtl
xchg
outsl
mull
ljmp
std
ret
xor
fs
sbb
je
mov
mov
fdiv
out
ror
xchg
outsl
cld
lret
jg
adc
int3
jl
push
pop
test
cli
xchg
lea
jmp
shll
lods
frstor
jg
jmp
xchg
and
aaa
fists
int
ss
std
test
dec
pop
insl
lock
add
loope
mov
sbb
mov
mulb
pushl
pop
and
lcall
je
push
pop
ror
stos
cld
outsl
cmp
roll
jg
data16
xchg
and
mov
push
icebp
int
push
incl
call
aad
lea
jno
stos
popf
push
push
inc
sti
fucomip
lahf
jecxz
add
sub
clc
divl
push
or
fucomip
adc
bound
ja
sub
lods
ss
fs
loope
mov
mov
jg
lds
icebp
leave
sbb
orb
in
sbb
cmp
jns
sub
ficomps
fbld
pop
sub
mov
imul
rol
ret
sahf
mov
out
arpl
rcrb
js
loop
jb
out
mov
inc
mov
push
call
mov
scas
nop
rorl
jbe
jge
dec
loope
xor
std
movsl
dec
mov
jne
paddb
js
push
push
sbb
dec
int
mov
decl
add
test
push
or
scas
dec
pop
inc
sbb
sbb
xchg
pop
fsub
mov
mov
inc
xchg
repnz
cltd
xor
dec
fcmovne
jg
sbb
imul
lcall
mov
fcomi
in
in
push
xchg
push
cmp
dec
inc
inc
or
mov
cld
fwait
sub
xor
out
and
mov
icebp
pop
adc
and
in
dec
push
jns
ljmp
les
sbb
rorb
add
dec
cltd
push
lcall
xchg
dec
inc
pop
sti
mov
adcb
and
mov
dec
repz
lahf
xor
jg
call
mov
clc
push
jae
in
pop
into
aas
cli
cs
jl
jb
sub
aad
jl
test
mov
ss
mov
fsubrs
xchg
mov
push
jnp,pn
sub
or
sbb
pop
out
hlt
add
mov
lock
xorl
test
dec
sbb
iret
xchg
fdivp
mov
dec
mov
rorl
repnz
pop
sbb
mov
xchg
pusha
repnz
fisttps
std
decl
ja
mov
add
add
lahf
xchg
dec
cmp
ljmp
mov
lahf
out
push
test
cmp
cmp
out
xchg
push
adc
mov
xor
mov
cwtl
inc
pop
sub
cwtl
loopne
ror
jg
adc
stc
scas
inc
sbb
sbb
sub
fnstsw
push
ljmp
roll
movsl
sub
in
and
cmpsb
js
inc
cmc
mov
out
push
push
mov
call
negb
dec
cmp
and
add
push
fmull
cld
call
mov
fildl
and
mov
cltd
iret
pop
lret
lret
aaa
lcall
out
jne
mov
test
adc
mov
pop
rcrl
hlt
pop
inc
test
mov
cmp
scas
std
popf
ja
jg
or
or
add
out
shlb
xchg
sub
add
je
sub
jmp
test
mov
push
or
outsb
xlat
pop
or
rcrb
mov
leave
out
adc
out
cmp
xchg
inc
fcomip
lret
inc
adc
imul
outsl
mov
mov
push
fs
into
pop
les
push
pusha
jmp
jns
sbb
pop
cli
and
gs
fs
int
stos
mov
insb
xchg
sub
jmp
loop
clc
fists
les
arpl
xchg
inc
mov
cmc
cmpsl
out
cli
mov
cmc
leave
in
and
loope
jo
xchg
addr16
into
pusha
outsl
cmc
call
outsl
cmp
imul
rolb
fmul
fcompl
mov
fcmovbe
movb
pop
jbe
jecxz
notb
jge
lock
mov
inc
ljmp
pop
call
mov
incl
call
add
jno
ljmp
in
mov
outsb
sbb
ja
mov
inc
dec
jl
pusha
and
pop
in
jg
loope
and
int
call
xchg
pop
pop
add
clc
decl
mov
jge
outsb
add
nop
out
out
andb
xchg
cli
call
pushf
adc
xchg
int3
add
mov
mov
mov
jg
cltd
cli
pop
jbe
push
test
jno
cld
adc
in
cmp
mov
inc
outsl
lock
sti
cltd
mov
xchg
mov
push
mov
cmp
icebp
mov
pushl
and
and
xlat
mov
fcmovnb
cmp
cld
jb
pop
clc
call
ljmp
pop
or
outsl
test
sbb
out
adc
add
iret
dec
cmpsl
cli
lcall
cmp
mov
sbb
and
cmc
imul
dec
inc
aaa
inc
loopne
xchg
stos
mov
out
lods
sahf
iret
add
imul
imul
sbb
mov
jg
mov
mov
sahf
or
and
jne
ds
leave
xlat
decl
lds
push
cmpsl
sbb
je
std
cltd
dec
adc
addr16
xchg
out
pusha
mov
mov
and
aaa
scas
xorb
loope
repnz
incl
xor
mov
adc
sub
cli
inc
mov
sbb
add
jbe
mov
das
call
push
mov
ficompl
popa
pop
int3
std
aaa
lods
stos
pop
or
jmp
insl
pop
cs
rcll
pop
sub
fistps
cmp
aaa
pop
pop
call
jg
aad
adc
push
outsl
lret
ljmp
leave
aad
push
jno
sahf
std
dec
inc
stos
or
mov
add
std
mov
out
sbb
or
add
mov
test
subl
incl
cs
lea
popf
jo
cmpsl
popa
movsb
pop
insl
or
aad
cmp
lods
pop
cmpsb
roll
pop
xor
sbb
mov
popf
jb
jecxz
call
pop
mov
in
imul
push
aam
inc
xchg
shl
push
clc
incl
stos
inc
mov
out
push
xor
fists
push
sarb
jg
push
mov
mov
pop
pinsrw
pop
mov
xor
push
sbb
push
or
stos
loope
lea
in
aad
stc
mov
idiv
cmp
dec
adc
jecxz
sarb
push
roll
xor
addr16
clc
jecxz
test
jmp
mov
mov
inc
sub
jb
cmp
aas
test
sar
aaa
lock
lcall
cmp
mov
mov
mov
stos
rol
jbe
jne
and
cli
call
sub
loope
sbb
out
je
jle
cmp
movsl
jge
mov
mov
jecxz
inc
xor
push
ljmp
jb
rcr
dec
fisubs
xchg
sbb
ficoms
push
jmp
fcomi
xor
add
mov
sti
jecxz
push
roll
loopne
xor
sbb
adc
call
jns
push
jle
outsb
push
jmp
fcomps
dec
loope
mov
mov
stc
sub
jmp
push
cld
lock
call
cwtl
into
mov
pop
idiv
call
jg
mov
stc
imul
cmp
sahf
lcall
leave
incb
push
cld
mov
imul
in
je
mov
dec
xlat
stos
lds
jnp
dec
das
cmp
pop
sub
in
lcall
ljmp
and
or
or
sub
outsb
clc
iret
add
pushl
sbb
mov
dec
inc
push
mov
and
sub
or
jo
incl
in
xchg
fmul
xor
rcll
out
jmp
sub
inc
lcall
pushl
pop
mov
loop
in
mov
jle
xchg
and
stc
test
inc
sub
cli
incl
cmp
ljmp
or
cmp
xor
push
js
mov
ljmp
stos
out
inc
mov
mov
mov
sbbb
out
push
sbb
pop
pop
insb
fstp
popf
and
mov
xchg
jmp
or
js
cmp
out
gs
fucomi
mov
adc
ljmp
shll
and
cmc
jg
pop
lods
or
xor
fwait
ljmp
icebp
fsubrs
adc
adc
scas
sub
mov
and
push
or
jb
ds
inc
xlat
pushl
lcall
jo
xlat
push
xchg
lret
adc
gs
pop
jge
mov
push
out
sbb
jb
ret
movsl
dec
sub
and
jge
cmp
or
lock
lcall
push
stos
arpl
loope
inc
push
mov
testl
in
pop
cli
call
mov
cmp
pushf
rep
repz
xrstor
ljmp
and
and
mov
clc
insl
lahf
dec
outsb
in
pop
mov
pushl
xchg
in
ljmp
lret
add
sub
dec
sbb
lcall
rcl
lret
push
stos
push
dec
jge
xor
or
lods
mov
in
xor
testb
push
into
dec
inc
adc
add
mov
xchg
out
jnp
inc
int
int3
in
jg
push
out
cld
jmp
push
ljmp
push
repnz
jmp
out
sbb
jle
addr16
les
or
cltd
fisttpl
imul
adc
ljmp
scas
xlat
out
orl
pop
xchg
data16
xchg
loope
xchg
shlb
call
outsl
adc
aam
adcl
pop
push
mov
imul
mov
mov
loope
movsl
arpl
decl
imul
mov
fcoml
xchg
pop
jns
push
xchg
icebp
add
rorb
jg
test
lcall
test
inc
push
ljmp
add
in
jg
mov
pusha
push
outsb
or
jns
fcomps
roll
test
incl
cwtl
out
rolb
jmp
jmp
cmp
out
ljmp
push
jg
mov
decl
sbb
mov
stos
ds
stc
push
cli
mov
xor
or
mov
imul
mov
push
pushl
cld
push
stos
mov
fwait
pop
mov
dec
cwtl
xor
ret
xor
addl
pop
fsubl
xor
mov
movsb
sub
mov
adc
ffreep
decl
xchg
pushf
or
mov
push
out
jmp
mov
xchg
ja
repz
sub
call
dec
xor
loope
bound
add
fnstenv
test
push
lret
incl
hlt
out
cmpsl
jae
stos
ret
scas
popa
mov
std
incl
in
jg
out
fists
and
sbb
pop
cmp
loopne
out
cmpsl
jmp
loopne
bnd
pop
aam
ljmp
ljmp
lcall
fidivrs
pop
xor
arpl
and
lock
push
rcpps
or
mov
lods
pop
pop
pop
mov
and
stc
mov
lcall
mov
xchg
out
and
pushl
test
mov
sti
lret
xlat
jmp
ljmp
mov
mov
out
mov
icebp
cmpsl
mov
dec
nop
dec
das
hlt
outsl
call
jne
jmp
cld
and
mov
ljmp
mov
jge
mov
sbb
mov
out
inc
mov
add
idiv
cmp
jecxz
jbe
lock
push
xchg
sub
xchg
in
cli
mov
sbb
call
das
sub
sbb
enter
hlt
clc
out
jno
and
jae
loopne
or
jg
mov
dec
cmpsl
cmpsl
jp
test
cmp
add
xor
rol
ffreep
dec
ljmp
outsb
lock
and
dec
dec
jg
decl
mulb
mov
pop
ror
int
pop
imul
adc
jns
mov
dec
mov
mov
xchg
lahf
sbb
loope,pt
xchg
gs
and
gs
jmp
and
jmp
int3
ret
xor
sbb
mov
repnz
cmp
push
lret
insb
sar
and
mov
jbe
inc
aaa
push
mov
xchg
movsl
jl
lea
push
mov
xorb
imul
ljmp
cmpsb
out
decl
cltd
mov
testl
out
push
jmp
xor
or
jne
rcrb
push
add
ficompl
aam
inc
int
cltd
xchg
pushl
push
shlb
fcmovb
dec
dec
test
mov
imul
push
fwait
pop
pusha
leave
out
mov
pop
or
roll
call
enter
push
mov
addb
in
fiaddl
jecxz
ljmp
test
call
fiaddl
mov
sbb
dec
and
lcall
mov
or
cld
popa
mov
jp
dec
add
jnp
lcall
push
les
and
sahf
push
sbb
mov
adc
rcl
jmp
rorb
xor
and
cmp
stos
xchg
aaa
add
or
fistpl
dec
ljmp
gs
lock
push
and
push
mov
jns
cwtl
shrl
cli
mov
cmc
out
mov
das
ret
mov
pushl
push
sub
mov
fdivrp
ds
jmp
out
mov
mov
out
int3
push
sbbl
push
adc
ds
sub
adc
jb
cs
and
mov
xchg
pushl
pushf
mov
jp
jne
pop
lcall
inc
jmp
mov
push
mov
inc
cli
stos
lcall
call
add
aaa
incl
sub
mov
sub
xor
ljmp
or
dec
push
jo
and
add
dec
pusha
rolb
xlat
test
fsubs
mov
mov
insl
call
push
fisttps
push
int
inc
lock
push
inc
imull
sbb
ret
fnsave
mov
jl
fnsave
inc
xchg
lahf
sub
out
pop
lret
add
jg
enter
pop
stc
nop
mov
je
daa
xor
test
repz
adc
jmp
mov
call
mov
dec
movsl
js
pop
inc
je
push
loop
mov
or
aad
mov
xchg
sbb
ljmp
mov
into
iret
sub
shr
stos
xor
jns
dec
dec
jg
push
jge
imulb
stos
mov
call
call
push
mov
cmc
push
jbe
dec
xchg
push
xor
out
cmc
in
sub
loop
lods
out
mov
pop
sub
popa
sbb
roll
lcall
add
loop
int
mov
in
mov
push
jmp
mov
pushf
mov
imul
daa
sub
jne
mov
sub
call
sti
sti
push
mov
fildl
dec
loope
es
pushf
orb
or
cld
inc
jbe
fidivrs
jecxz
cmpsb
push
int
ljmp
outsl
movsl
clc
adc
inc
sub
xchg
xchg
cmp
xor
ret
lret
incl
loopne
cld
skinit
aad
adc
mov
mov
movsl
xchg
sar
call
cmc
call
je
xchg
inc
stc
xchg
push
jp
add
outsl
cmc
jns
test
cs
leave
or
adc
and
push
add
aaa
pushl
inc
mov
orb
xchg
sti
cmp
scas
xorb
mov
cmpsl
mov
std
mov
mov
and
rclb
xor
test
incl
jo
or
stos
rorb
in
and
sbb
pushf
add
icebp
and
add
movsl
pop
inc
inc
repnz
xchg
inc
out
mov
sbb
mov
daa
sub
xchg
and
mov
stc
xchg
out
jg
aad
mov
mov
mov
in
xor
add
sub
ficoms
es
ficomps
out
pop
xchg
rcll
test
and
sub
lcall
pusha
pop
push
es
mov
je
sub
xlat
lcall
jp
mov
pop
add
add
les
insl
push
ret
adc
daa
addl
cli
mov
rol
mov
fmul
xorb
push
cld
lcall
dec
push
add
fld
mov
ljmp
push
filds
jp
add
inc
xchg
imul
dec
arpl
int3
in
stc
mov
xor
or
jg
jg
sbb
push
pop
sahf
fiaddl
and
mov
ljmp
andl
dec
lods
jns
ss
aaa
sub
mov
sbb
pop
or
ljmp
lea
pop
add
and
sti
stos
xchg
mov
add
decl
xor
mov
dec
cmpsb
addr16
lock
ja
xlat
mov
decl
mov
xchg
dec
enter
test
jg
rcll
in
ret
outsb
or
subl
push
xchg
sbb
inc
lret
or
ss
inc
sbb
inc
or
push
pop
aam
fiadds
mov
das
mov
decl
jne
hlt
nop
add
jnp
subl
jle
loope
sub
cmp
adc
mov
inc
push
incl
ljmp
xlat
xor
pop
or
imul
add
xor
ljmp
std
test
cli
stc
lea
das
arpl
jmp
jg
pushl
int
out
inc
mov
loopne
cmc
sbb
pop
aas
das
in
push
and
mov
lea
std
pushl
sub
shl
mov
pushf
int
mov
jb
incl
ljmp
aad
orl
or
lock
int3
or
shrb
fucomip
pop
xchg
cmpsb
into
movsl
lcall
aaa
decb
cld
aaa
or
repnz
gs
sbb
int3
inc
xor
pop
add
jmp
fwait
pop
ret
and
xchg
mov
jge
dec
std
fisttps
xchg
fdivrl
cmpsb
cmp
add
sbb
or
arpl
jae
cmpsb
xlat
sub
jecxz
or
cmp
lea
jmp
mov
fdivl
das
lock
arpl
insb
inc
sbb
daa
add
ffree
xchg
aad
mov
add
imul
dec
fwait
andl
xchg
or
jg
enter
decl
jno
or
adc
cltd
int
pop
dec
fnsave
mov
jmp
cmp
and
inc
out
lock
push
mov
mov
movsl
ljmp
cmp
cltd
andl
clc
mov
imul
lcall
stc
loope
push
xchg
aad
dec
adc
lcall
cli
xor
or
jg
pusha
cmpsl
fucom
sub
rcll
push
jmp
je
outsl
enter
mov
movsl
out
jl
pop
adc
sbb
call
jmp
ljmp
mov
fs
je
pushf
push
sub
push
jmp
cld
mov
cmp
sub
shlb
in
jbe
ja
cld
and
mov
call
mov
pop
xchg
lea
sub
sbb
fildll
cld
pushl
loopne
loop
inc
pop
int
iret
cmp
cmp
imul
lock
addb
xchg
sti
mov
lods
inc
or
std
push
add
mov
inc
mov
push
mov
loop
fistpll
fsubrs
andb
sub
rcrl
fmuls
xchg
jle
adc
pushl
push
push
push
add
mov
mov
jle
sbb
jl
pushl
int3
mov
cwtl
push
aam
hlt
sbb
arpl
cltd
in
in
test
shlb
adc
push
push
loope
sub
outsl
sub
xchg
dec
dec
pushf
out
subb
ljmp
or
sbb
sub
rcl
ficoms
jg
std
and
mov
icebp
ss
les
sub
sbb
cld
jmp
cmp
push
pop
loopne
cld
outsl
mov
popf
pusha
mov
loope
ds
sub
pop
push
cld
loop
mov
in
decl
sbb
sahf
xchg
fdivs
inc
mov
jg
not
es
or
mov
xchg
pop
mov
jbe
lcall
xchg
negl
test
test
jp
xchg
push
cmpsb
fists
sub
sbb
add
jecxz
scas
scas
mov
movsb
add
decl
iret
movsl
jb
fstp
jnp
xor
adc
fisttpll
mov
sub
pop
fidivl
xchg
lods
gs
rcr
jle
jmp
lock
cmpsl
call
mov
xchg
push
inc
jae
xchg
dec
outsb
sbb
sbb
iret
pop
pushl
mov
sub
mov
mov
push
push
dec
mov
aas
inc
addb
sti
dec
mov
out
inc
jl
mov
arpl
loope
lods
mov
jne
int
call
dec
outsb
fcmovbe
int3
mov
adc
pop
insb
push
fcomp
addl
jnp
lock
ror
or
xor
sbb
mov
push
in
movsb
aaa
nop
inc
sbb
rcrb
std
mov
lahf
and
adc
add
js
mov
mov
sbb
addr16
fnstsw
in
mov
jmp
ret
adc
pop
push
incl
out
or
mov
push
in
or
pop
daa
and
std
and
test
mov
push
test
leave
cmp
mov
dec
inc
and
jmp
in
fstl
add
dec
xlat
xor
jg
clc
inc
repz
jne
adc
cmpsl
in
imul
inc
xchg
das
aam
cwtl
push
mov
addr16
mov
fsubrl
in
je
les
pop
push
mov
inc
xor
arpl
or
fldcw
push
scas
jge
xor
leave
movsb
mov
cmp
pop
mov
mov
pop
call
sti
loop
fwait
decl
jl
test
roll
jmp
test
adc
ret
inc
jns
add
test
imul
xchg
cmp
inc
dec
nop
pushl
cmpl
inc
xor
jne
ja
push
imul
ljmp
shll
jmp
jne
mov
pusha
mov
mov
mov
or
lahf
mov
sbb
pushf
test
push
cmp
push
call
pop
cld
addr16
lret
aas
scas
and
decl
jge
adc
jge
outsl
repnz
jge
mov
xchg
lea
sahf
inc
das
adc
cli
pop
out
lret
popf
inc
pusha
adc
adc
decl
mov
movsb
sti
outsb
fcomip
sbb
nop
and
pop
jp
pop
imul
lock
test
mov
cwtl
dec
inc
cwtl
dec
sahf
sbb
outsl
dec
dec
pusha
adc
daa
mov
orb
ljmp
jmp
sub
mov
fistpll
ljmp
fmul
mov
jnp,pn
std
std
outsb
mov
lds
inc
addr16
mov
jo
mov
adc
sub
push
push
jb
mov
jmp
dec
lahf
push
das
jae
std
push
sbb
pop
xchg
scas
in
decb
hlt
stos
lcall
xchg
pop
lcall
pop
cli
push
loop
push
pop
mov
lea
pusha
enter
cld
insb
dec
out
mov
mov
iret
mov
mov
lods
lods
jg
lcall
adc
pop
cmp
fbstp
jg
sub
dec
gs
or
mov
fucom
mov
or
cmpsb
cmp
decb
xor
fmulp
jge
cmc
stc
and
iret
xchg
ds
iret
das
sti
push
xchg
loopne
mov
adc
add
push
inc
jne
cs
mov
ljmp
adc
fwait
das
into
fidivrs
movsl
fcoml
pop
shlb
pop
dec
add
push
cmp
test
outsl
shlb
jl
icebp
mov
scas
xor
mov
fcompl
outsb
movsb
sbb
dec
add
clc
fs
push
pminub
add
push
popf
mov
pop
hlt
movsl
fcmovne
add
daa
lahf
adc
outsl
scas
inc
push
sub
decl
cmpsb
mov
or
mov
mov
jp
or
mov
pop
loop
cmpb
sbb
push
mov
icebp
inc
rorl
sub
icebp
and
test
jnp
mov
jbe
sub
jecxz
sahf
pop
xor
mov
cs
jno
push
xor
jae
cmp
ljmp
mov
scas
inc
ret
in
lret
sub
sbbb
push
sti
inc
test
mov
fchs
adc
push
lret
das
fldenv
inc
adc
mov
scas
or
xor
imul
push
jbe
aas
hlt
call
push
addr16
cmc
sbb
ret
sbb
inc
xchg
cs
lahf
into
clc
ds
mov
cli
mov
push
jno
jo
das
lea
icebp
sbb
pop
jle
sub
data16
rcrl
sub
xor
subl
int3
add
dec
pop
xchg
push
insl
push
pop
leave
lock
aaa
xchg
loopne
orl
mov
mov
test
and
jmp
add
push
mov
hlt
sbb
and
jl
lahf
in
sbb
jmp
pushl
sbb
fdiv
stos
xchg
cli
lds
mov
outsl
mov
call
xor
cmpsl
pop
cmp
push
fldt
imul
into
xchg
xor
dec
decb
fildl
rcrl
adc
pop
dec
pop
out
gs
push
in
push
out
and
jg
out
inc
lods
loop
mov
xchg
notl
cmp
jge
or
cmp
in
hlt
insl
xchg
adc
call
out
push
daa
orb
in
mov
or
mov
inc
imul
lea
cmp
jecxz
jle
pop
dec
cli
pushl
clc
or
and
cli
sub
sub
fists
or
sarl
aam
call
mov
stos
or
and
dec
inc
mov
stc
dec
jo
sbb
dec
mov
jbe
vzeroupper
mov
sarb
std
adc
fldenv
mov
xchg
fistpll
stc
sub
cli
jg
push
divl
movb
das
gs
xchg
or
call
ljmp
ror
cmpsl
fmuls
pop
fwait
nop
insb
xchg
mov
out
sub
jecxz
dec
mov
push
inc
stos
rolb
pusha
mov
test
ljmp
mov
lock
iret
js
mov
test
fldt
sbb
sbb
mov
cld
outsb
add
leave
sub
fisttpll
inc
jnp
pop
xchg
jnp
mov
pop
sarb
jecxz
fs
inc
cwtl
sub
and
ret
cli
or
pushl
and
cld
mov
fdivl
push
scas
mov
mov
adc
pop
daa
or
hlt
adc
aas
mov
icebp
jmp
adcb
mov
ficomps
pop
jnp
mov
out
jecxz
test
xchg
call
adcl
outsb
mov
pop
pushl
loope
dec
addb
mov
mov
pop
and
dec
mov
cli
and
shrl
xchg
cmp
and
dec
hlt
sub
pop
iret
addr16
test
test
mov
fistl
cmp
and
aam
lcall
pop
or
es
inc
loope
push
sbb
cmp
sub
mov
push
dec
add
out
push
sbb
popa
mov
sub
mov
stc
jno
pusha
sbb
frstor
lret
and
jae
mov
mov
jo
rolb
xor
loopne
incb
lret
xchg
into
test
dec
sbb
mov
lcall
lods
fimull
adc
jo
test
aaa
int
add
sbb
enter
std
jg
sbb
xchg
cmpsl
and
cwtl
aad
push
call
std
rorl
aaa
or
int3
jmp
ret
call
mov
mov
leave
movsl
sbb
rclb
cmp
jge
inc
and
clc
call
mov
mov
mov
shrb
into
ljmp
mov
fldenv
push
xchg
xchg
push
jg
pop
pushl
dec
adc
mov
rcrl
cltd
adc
pop
add
test
dec
std
jge
imul
dec
and
out
call
pop
push
rolb
and
test
xchg
and
movb
pop
in
loopne
incl
stc
and
xchg
push
cmpsb
fs
mov
js
cltd
js
incl
lods
sbb
dec
insl
addr16
imul
ja
out
sar
hlt
ficompl
and
add
xor
dec
pop
jl
loopne
ja
push
xor
dec
dec
lds
loope
jg
pop
out
daa
adc
test
or
pop
repnz
add
sbb
lds
sub
sbbb
sti
in
adc
xor
rol
sahf
shlb
ud0
mov
lea
insl
test
mov
fadd
inc
adc
test
stc
inc
mov
fldenv
aam
pop
into
mov
adc
cli
in
lea
shll
div
scas
inc
add
insl
inc
mov
push
pop
xor
push
mov
js
adc
mov
push
call
xorb
ret
jp
adc
lahf
mov
insl
cs
or
decl
push
shr
pop
sub
bnd
repnz
loope
mov
clc
or
lock
and
add
call
out
hlt
inc
inc
cwtl
dec
ficoms
test
dec
sahf
push
xchg
or
fldt
notl
ret
jg
test
int
jge
dec
lds
mov
loopne
mov
test
dec
sar
jg
xor
and
aam
pop
dec
call
fwait
xchg
mov
pop
xchg
and
lock
add
push
mov
fildl
cmpsb
mov
jg
roll
cmp
std
nop
pop
stc
lods
sbb
inc
mov
cmpsl
ret
popa
jecxz
into
aas
lret
idivb
pop
pop
add
mov
jmp
sub
cld
aam
push
clc
xchg
mov
mov
cmpsb
xchg
notb
fdivrp
pushl
mov
jge
fistps
and
stos
mov
sahf
mov
mov
nop
and
pop
push
roll
aaa
xchg
lds
ret
cmp
xor
cmp
and
aaa
pop
inc
xchg
aaa
and
inc
loopne
fdivl
in
mov
mov
repz
push
int3
out
and
call
insl
mov
aas
and
dec
mov
lds
xchg
fistl
stos
hlt
push
repnz
or
xchg
mov
rcr
dec
std
xchg
xchg
add
jo
ljmp
imul
std
fucomip
inc
orl
cmp
sti
dec
inc
cmp
push
pop
iret
clc
or
incl
fsubrl
adc
jl
pop
sbb
cmpsb
int3
and
add
fistl
movsb
push
inc
and
je
popa
insl
fcompl
mov
mov
rcrb
mov
ret
jne
pop
ret
pop
mov
bound
je
xchg
pop
sub
pushf
lea
in
dec
jg
push
xor
aam
push
jmp
sub
xchg
test
fstpl
addb
ret
setnp
lcall
or
mov
add
loopne
fisttps
fisubrl
adc
sahf
decl
incl
aam
mov
data16
sbbb
or
test
cmp
js
test
sub
mov
dec
jns
pop
jl
jbe
xchg
dec
gs
stos
adc
jg
xchg
pop
call
pushl
pop
xorb
or
mul
mov
jle
scas
cmc
idiv
outsl
lock
test
lret
or
xchg
pop
push
into
xlat
fldcw
popf
ds
lcall
jb
push
push
push
pop
je
gs
dec
pop
repnz
sub
outsb
subl
mov
jge
xor
je
xchg
frstor
ljmp
mov
les
push
lods
in
dec
outsb
cld
stos
mov
xlat
inc
dec
cltd
popa
scas
jecxz
mov
test
xchg
inc
push
jecxz
push
int3
adcb
mov
in
call
andl
mov
fstps
ja
dec
decl
cld
ljmp
and
call
pop
ret
nop
addr16
outsb
jle
dec
std
outsl
loope
pop
jae
or
es
mov
add
outsl
paddb
repz
insl
imul
lret
js
out
imul
clc
cmpl
icebp
jae
push
add
call
jmp
rorb
jo
xlat
or
or
lret
repnz
decl
inc
pop
mov
inc
test
add
pop
pop
dec
pop
xchg
mov
popf
jge
jle
jp
adc
and
mov
jno
pop
pop
int3
xor
xchg
cmpsb
outsl
icebp
outsl
cmc
in
pop
fcompl
cmpsl
xchg
jno
outsb
or
movsl
pop
mov
scas
sti
xchg
stos
add
sub
push
or
add
mov
adc
ljmp
push
imul
jle
inc
mov
ret
int3
pop
je
pop
outsl
sahf
test
dec
ret
arpl
outsb
stos
cmp
outsb
push
mov
xchg
xchg
pop
outsb
inc
addr16
sbb
movsb
mov
jnp
call
pop
xorb
or
dec
add
pushl
cli
dec
pop
add
fiaddl
or
sahf
aam
cmp
clc
xchg
call
push
int
jne
add
sub
iret
ljmp
repz
ja
aaa
into
outsb
dec
ss
cmc
mov
mov
sbb
xchg
cmpsl
jg
add
cld
fidivl
call
pop
xor
rolb
in
mov
ds
or
or
jns
aas
xchg
rcrl
ljmp
or
add
lods
dec
aaa
dec
push
cld
mov
jg
rol
pop
jns
inc
outsl
jne
xchg
sub
dec
stos
lock
enter
loope
xor
mov
jb
jbe
popf
inc
popa
add
hlt
inc
jecxz
shlb
mov
inc
mov
in
fistpll
add
jbe
aam
loop
ret
xor
daa
mov
movsl
rorb
loopne
jg
ds
inc
out
or
add
push
jnp
xchg
fidivs
call
enter
rorb
outsb
cmp
fnsave
push
mov
pushf
cmpb
stos
bound
inc
stos
out
clc
pushl
cli
xchg
dec
arpl
into
add
adc
push
out
std
pushl
test
add
scas
add
adcl
bound
dec
mov
dec
ja
push
or
push
scas
std
mov
jg
mov
js
adc
inc
vmaxsd
ljmp
aaa
loope
xor
add
xchg
ret
imul
jmp
mov
lods
jb
out
sub
xchg
inc
push
outsl
pushf
std
lcall
jg
pop
pop
xchg
jle
movsl
test
cs
fstps
call
ds
jne
int
add
pop
pop
mov
dec
ja
inc
and
addr16
pop
sub
loope
pusha
push
loopne
jb
pushf
dec
push
jbe
std
lcall
sahf
fidivrl
dec
std
sti
ja
jp
stos
ffreep
pushf
jns
out
mov
das
mov
inc
push
aad
xchg
ss
cs
lret
jp
roll
aaa
inc
lret
ficomps
das
xchg
fwait
pop
inc
ja
pop
sub
enter
hlt
jg
push
pop
cmp
lock
movsl
cmp
add
js
cmp
mov
jb
mov
lds
push
out
pushl
movsb
mov
ret
mov
gs
lods
mov
or
xor
dec
pushl
and
in
push
add
ljmp
aad
ret
cmp
cmp
xchg
or
faddl
and
add
push
jb
arpl
jmp
jae
xor
js
ja
nop
je
imul
or
fiadds
notb
jp
or
sbb
fbld
rorl
sbb
fs
call
sldt
adc
mov
ljmp
gs
push
dec
push
je
inc
jns
fidivl
adc
jmp
std
ss
insb
jg
push
or
insb
inc
in
jbe
mov
adc
inc
call
imul
sbb
bound
lcall
fwait
push
gs
outsl
push
push
insb
jmp
dec
sbb
dec
outsb
fstp
pop
clc
decl
insb
push
dec
mov
sbb
pop
fistpl
aas
push
popa
push
fdiv
inc
pushl
aaa
sbb
inc
jb
jb
add
pop
insb
sbb
shlb
push
xor
gs
inc
mov
dec
push
imul
sbb
pop
jnp
mov
push
outsl
mov
popf
jmp
popa
mov
idivl
mov
xor
lcall
jo
test
imul
dec
mov
mov
sub
out
pop
je
inc
daa
gs
fldcw
xchg
int
jbe
push
and
mov
icebp
and
insl
orl
insl
mov
ret
add
mov
pushf
dec
int
fsub
push
insb
jae
arpl
xlat
push
outsb
push
incl
lods
lea
fs
sub
in
out
mov
and
bound
imulb
sub
dec
inc
fs
jno
jmp
jecxz
or
sbb
pop
clc
adc
lret
call
js
fcmovu
mov
push
call
add
inc
sbb
in
mov
or
cmp
imul
pop
jne
mov
push
jno
fs
cmp
push
loope
sbb
in
xor
jae
cli
push
lods
call
lea
cwtl
fistpl
aas
and
nop
sbb
arpl
pop
mov
and
pop
mov
insl
jecxz
mov
or
das
icebp
rorb
dec
jl
fistpl
and
imul
shrb
cmc
cwtl
int
or
loope
pop
mov
push
dec
decl
addb
push
xchg
imul
adc
lcall
add
pop
push
inc
outsb
arpl
mov
insb
sbbl
fisttpl
mov
add
jae
out
mov
sub
enter
sub
xor
cmp
in
sub
sbb
jo
outsb
jo
jg
lret
lods
mov
push
sbb
sub
mov
fsubrs
adc
arpl
outsl
fists
pop
repnz
pop
dec
inc
jg
pop
das
mov
mov
je
mov
lcall
jb
pop
inc
pop
lcall
ljmp
pop
cmp
jb
or
mov
arpl
in
cs
or
pop
ljmp
lret
pop
adc
or
outsb
mov
push
and
ljmp
cmc
call
fidivrl
pop
cltd
cwtl
mov
xchg
xor
adc
dec
sar
lcall
inc
cmp
dec
out
or
pop
aaa
sub
pop
mov
sbb
cmp
mov
push
mov
cmp
packssdw
add
jae
push
sbb
push
fwait
and
ja
rcl
ss
inc
lahf
es
xchg
fistpl
lock
lcall
adc
sub
sbb
int3
addr16
push
add
add
push
add
pop
cmp
lcall
mov
adc
push
or
push
or
inc
decl
xor
xor
adc
or
push
adc
sbb
lods
sub
aas
adc
adc
and
lock
stc
ljmp
or
sbb
aaa
adc
or
adc
add
sbb
or
arpl
mov
jle
mov
jmp
jae
mov
sbb
add
loopne
xor
popw
push
sub
incl
and
xor
mov
or
popa
or
adc
idivl
loopne
dec
pop
sub
mov
push
sbb
or
xchg
cli
fcmovnu
popa
cld
aaa
add
lock
lret
pop
jbe
decl
std
mov
and
and
or
or
jg
jmp
xor
mov
and
cmp
push
push
wrmsr
pop
add
pop
incl
icebp
pushl
pop
adc
dec
push
sbb
sbb
fistl
adc
push
incl
adc
or
add
add
push
idivl
adc
pop
or
pop
or
sbb
add
negb
fdivrp
sub
jno
pusha
loopne
push
sub
xchg
sbb
or
popf
add
imul
adc
cmp
popa
or
push
or
pop
push
sub
or
jnp
rcr
js
cmp
jb
or
lcall
insb
pop
js
or
adc
push
dec
add
ljmp
hlt
push
push
cmpsl
pop
mov
pop
pop
in
jmp
filds
mov
dec
lock
pop
sbb
inc
movups
loope
fldt
movsb
or
or
add
or
ret
popa
jnp
or
xor
and
fstpt
imul
cmp
mov
push
and
push
xchg
sbb
push
add
or
or
adc
cmc
and
cmp
sbb
dec
dec
loopne
movsb
push
inc
adc
lret
outsl
dec
add
decl
or
jae
push
add
sbb
imul
daa
or
sub
pushl
lea
jo
or
adc
loop
ljmp
push
sbb
gs
pop
sbb
jns
data16
inc
mov
xchg
loopne
pop
ss
sbb
sbb
adc
ljmp
or
mov
push
fcomps
adc
int
iret
test
sbb
negb
or
mov
pop
and
pop
sbb
ds
fnstsw
aaa
cli
add
push
adc
jle
inc
lock
lock
lock
adc
pop
push
ficoms
or
test
add
addr16
adc
xchg
decb
sbb
sahf
add
lock
decl
and
cmpsl
and
xor
pop
push
cld
inc
mov
fs
js
mov
fistl
cmovo
add
add
pop
scas
nop
add
lcall
pop
pop
mov
in
xlat
and
popa
mov
inc
jbe
or
in
cmp
jmp
xor
inc
push
push
pop
shlb
pop
dec
lcall
nop
cmpsb
imul
mov
mov
xchg
cmpsb
movsb
add
out
inc
add
out
negl
repnz
in
ret
dec
bound
add
add
lock
cmpb
jne
add
xor
ljmp
call
int
jmp
nop
add
inc
add
jne
mov
sub
adc
jb
sti
jbe
mov
adc
or
out
jne
push
std
push
roll
jae
xor
inc
jb
shl
cmp
lock
das
leave
or
test
or
inc
sbb
call
roll
std
add
mov
adc
cmp
jbe
mov
mov
mov
dec
jne
jmp
cmpl
imul
xlat
or
jmp
pop
ficompl
test
mov
lea
fimuls
add
push
sub
call
inc
or
fmull
mov
inc
push
inc
mov
push
movsb
les
inc
fdivl
pop
mov
in
fsubs
ror
mov
pop
cld
or
ljmp
cmp
ja
add
mov
xchg
rol
add
sub
jmp
pop
test
mov
ja
loopne
aas
lock
jg
loope
push
test
push
push
push
call
lea
fcmovnu
and
pusha
sub
adc
shlb
jmp
push
cmp
jne
sub
jmp
add
xor
push
loopne
and
mov
lcall
mov
add
rclb
xor
imul
dec
fcomps
xor
orl
push
jno
pop
jb
or
enter
add
sbb
inc
push
dec
inc
add
dec
add
push
and
jbe
xchg
push
insb
jne
or
push
mov
and
sub
cmp
sub
inc
xchg
cmp
inc
lea
orps
push
pop
fldt
sbb
xchg
imul
inc
pop
negl
imul
je
xor
test
add
dec
push
dec
repz
lret
sbb
pinsrw
mov
sbb
and
insb
les
shlb
xchg
arpl
lods
cmp
fdivr
ret
push
jns
mov
cltd
add
pop
out
mov
cmp
rcrl
cltd
cmp
popf
fstps
cltd
cmp
cltd
ds
lock
out
aas
cmp
add
adc
dec
adc
addb
mov
jl
fimull
mov
jo
daa
pop
movsb
pop
insb
sti
xor
js
pop
xor
movsb
jbe
repnz
add
fnstenv
js
data16
jmp
jge
sarb
push
or
shll
jnp
lea
into
lret
pop
pop
or
cmp
jb
pop
inc
add
jae
daa
inc
gs
in
xor
pusha
and
add
movsb
pop
add
inc
add
pop
shrb
inc
mov
inc
xor
push
push
push
mov
pop
adc
sub
addb
jbe
and
call
sub
xorb
aas
fcmovnu
push
lea
push
sbb
add
and
je
and
sbb
mov
cs
in
adc
push
push
pop
aaa
jne
or
or
mov
mov
push
add
pop
mov
int
mov
rep
or
and
sbb
adcb
frstor
movsw
movsb
fnstsw
std
mov
movl
add
in
sbb
gs
sahf
inc
or
pop
fs
clc
inc
mov
push
cld
add
xchg
or
outsb
mov
jl
mov
xor
fdiv
inc
fcoms
cmp
or
cmp
sub
clc
fcomps
sub
sbb
xlat
cmp
push
lods
jne
xor
inc
dec
lock
flds
jne
sbb
jmp
call
jnp
int
pop
push
jne
sbb
enter
es
aaa
mov
push
mov
inc
hlt
xor
add
push
scas
sub
pop
or
lds
fdivs
xor
mov
mov
and
sub
or
sbb
fcmovnb
mov
mov
cwtl
sti
pop
pop
shll
xchg
jne
or
jbe
pop
pop
mov
mov
lret
ficomps
and
and
pop
mov
dec
les
call
andb
fst
mov
repnz
jns
push
in
fldcw
cmc
insl
add
divl
clc
xor
sub
lret
stc
cs
fs
insb
cld
in
and
in
out
call
int
mov
in
in
add
dec
ret
pop
out
dec
lock
icebp
inc
jg
repnz
sti
inc
cmp
rorb
dec
loopne
dec
sub
adc
mov
lret
mov
gs
dec
dec
rcrl
inc
dec
cwtl
popa
insl
gs
or
and
sub
add
xchg
add
test
inc
add
or
fs
adc
fmull
sbb
cmp
jecxz
out
add
cmp
aaa
dec
call
je
setbe
cmp
cmp
popa
jae
mov
mov
pop
push
mulb
out
sbb
xchg
xor
mov
jns
mov
mov
push
push
enter
ret
mov
add
or
fbld
pusha
ret
rol
addr16
ja
cs
jecxz
or
rclb
hlt
clc
xchg
xchg
mov
adc
or
xchg
push
or
push
ret
or
lahf
stc
xor
add
push
outsb
fmul
or
outsl
push
xchg
add
and
cmp
incb
jae
pop
das
add
out
jno
and
cmp
lds
sub
xchg
out
sub
cld
sub
mov
pop
or
popa
or
sub
inc
push
cmp
sbb
fisttpll
mov
xor
or
xchg
test
sbb
cwtl
inc
sahf
xchg
ret
push
loope
adc
mov
fstps
xor
ret
adc
mov
andb
push
popf
orb
clc
inc
mov
jge
mov
adc
dec
test
push
cmp
data16
add
cmp
jl
cmp
mov
cmp
into
mov
fldt
mov
jo
pop
or
push
and
outsl
mov
push
sub
mov
imul
cmpsb
imul
cmpsb
imul
es
data16
insb
xlat
fdivs
fldcw
arpl
fldt
fstpl
cmp
loopne
loop
hlt
cmc
jbe
mov
mulb
idiv
dec
stc
inc
cli
je
mov
call
jmp
test
mov
adc
push
movsb
hlt
pop
je
and
out
icebp
movb
sub
leave
gs
lret
outsb
int
popf
sub
int
insb
into
xor
shrb
rcll
fmulp
shlb
push
cmp
mov
cmp
imul
add
popa
aas
pop
jae
jb
std
enter
test
jbe
sub
std
mov
sub
or
into
jns
std
inc
std
ret
imul
js
push
ja
dec
aad
xchg
pop
mov
enter
mov
add
pusha
lods
leave
mov
sti
cmp
sbb
push
push
inc
sub
sbb
fs
int
mov
push
push
sub
xor
rolb
shrb
je
push
mov
je
adc
stc
ret
pop
fcomip
mov
shlb
dec
cmp
je
push
adc
out
pop
jbe
or
outsb
orl
decl
jne
in
outsl
push
add
je,pt
test
enter
imul
jne
je
pushf
jo
and
shlb
or
push
mov
shlb
shrb
or
mov
in
mov
daa
dec
je
mov
aaa
jb
enter
std
mov
xlat
inc
xchg
jnp
push
jmp
inc
xor
stos
ret
test
mov
mov
cmp
call
push
xchg
call
daa
push
fiaddl
add
imul
add
inc
int3
fs
into
popa
mov
iret
shrb
outsb
rcrb
xchg
fcmovnbe
paddq
je
xlat
xor
int
fdivrs
fnstcw
dec
sarl
dec
shll
aaa
enter
insb
dec
sti
jno
in
out
aaa
out
imul
scas
fnstenv
icebp
imul
cmc
insl
mov
pop
fisttpll
jo
jne
mov
loopne
loop
jecxz
in
jmp
out
pop
clc
add
or
cmpsb
cli
sti
cld
std
popa
dec
cmp
push
or
je
xor
ror
sbb
mov
ret
cli
adc
in
xor
dec
or
movsb
sbb
stos
clc
loopne
js
movb
jne
lea
adc
in
out
addr16
mov
scas
xorb
or
imul
push
inc
je
pop
mov
push
addr16
into
aaa
mov
pop
mul
push
call
mov
adcl
lea
fisttpll
js
cld
leave
xor
add
jle
js
mov
pop
push
das
push
fwait
or
push
aam
add
insb
iret
dec
fdivr
push
add
mov
mov
xchg
mov
fcmovne
or
lea
push
sbb
add
es
repz
clc
dec
inc
and
mov
in
push
faddp
pop
add
clc
and
data16
sbbb
cwtl
push
add
and
adc
js
mov
sti
aad
movsl
add
add
out
je
mov
push
sbb
cmp
mov
sete
mov
push
mov
xor
pop
mov
arpl
inc
add
lret
neg
into
jae
or
mov
or
jo
add
clc
ret
call
pop
pop
add
neg
aaa
or
sbb
push
lahf
mov
or
sbb
adc
jmp
adc
pop
inc
add
stc
adc
adc
cmp
insb
aam
mov
aad
movsb
pop
xlat
shrl
mov
or
xor
mov
dec
mov
dec
or
les
sub
bound
add
test
ret
push
cmp
shll
jne
add
inc
xor
push
inc
and
in
inc
cmp
inc
and
cmpsb
add
push
repnz
fcoml
fistps
inc
mov
dec
pop
xor
push
cmp
std
incl
jne
mov
jmp
mov
cmp
je
sbb
ja
aad
sbb
fdivs
mov
sub
jne
test
incl
inc
cmp
jne
cmp
je
mov
inc
jmp
fbld
inc
push
add
in
out
dec
adc
push
push
or
mov
loopne
pop
jl
add
jg
and
in
fucom
stc
or
stc
stc
shll
add
shll
addr16
pop
rclb
mov
andb
lret
add
cmp
mov
test
xor
jge
adc
cmp
jb
sub
or
jae
sub
mov
or
loope
imul
ret
int3
cmp
add
sbb
inc
cmpsl
imul
je
mov
add
pop
sbb
add
shll
je
fnstenvs
inc
fidivs
imul
shll
push
adc
shll
addr16
inc
add
dec
sub
je
add
pop
rolb
insl
ja
out
add
pop
dec
dec
cmp
gs
add
enter
fs
out
pop
inc
jne
jb
outsb
shll
push
gs
aas
fdivs
pop
dec
gs
outsl
popa
jb
and
sub
or
mov
stos
popa
fs
jg
push
push
xor
js
jg
outsb
xor
push
mov
or
js
xchg
jnp
in
inc
push
sub
push
push
mov
pop
adc
add
in
cltd
or
pop
inc
ss
fwait
nop
clc
inc
in
add
xorb
dec
inc
jo
add
int
and
xchg
icebp
xor
push
in
aad
or
inc
add
add
push
imul
into
add
push
arpl
pop
and
add
or
inc
in
lods
adc
rorb
push
mov
ffreep
adc
repz
jae
pop
test
outsl
aad
add
aaa
and
and
negl
pop
loop
jge
popa
insb
inc
insb
iret
movb
in
iret
mov
popa
je
pop
add
insl
pushf
insl
push
insl
or
add
inc
adc
mov
cltd
adc
adc
loop
shlb
rcrb
clc
subl
gs
outsl
fsubrl
bound
add
icebp
inc
jo
push
push
stos
jecxz
jno
sti
push
pop
jae
sbb
inc
or
dec
sbb
fisttpl
es
loop
fldcw
add
pop
sub
push
stos
sbb
inc
popa
adc
inc
js
lcall
outsb
pusha
mov
outsb
jb
and
add
lea
inc
outsl
xor
mov
dec
jge
das
jne
dec
fisubrs
ret
adc
pop
mulb
jmp
jno
jo
push
cmp
push
pop
add
xchg
push
inc
inc
dec
aaa
xchg
fmull
shl
adc
xchg
add
movb
ja
xor
cmp
add
add
ret
lock
inc
mov
jge
xlat
or
adc
ficomps
dec
ret
or
mov
or
std
cltd
insl
insl
stos
mov
sahf
mov
push
add
insb
sti
add
cwtl
or
add
pop
js
sbb
insb
jo
mov
dec
xlat
sbb
mov
jge
orl
sbbb
xlat
pop
mov
cwtl
pop
stos
ss
mov
inc
int3
dec
pop
or
lcall
jle
add
adc
rorl
sbb
or
mov
mov
push
add
jecxz
pop
lods
push
push
call
arpl
or
mov
or
or
pop
rorl
adc
push
add
rcl
or
sbb
gs
push
jne
push
je
adc
push
or
adc
mov
leave
adc
ret
sub
adc
jne
or
push
push
pop
fimull
adcb
mov
lea
jnp
imul
add
add
xorl
jo
push
outsl
pop
mov
insb
pop
pop
testl
je
popa
jbe
ficomps
adc
outsl
jecxz
in
roll
pop
sub
imul
jns
ret
stos
in
addr16
adc
sbb
int
sub
add
cmp
push
add
clc
pusha
push
aas
add
ja
lret
xor
push
add
pop
jne
mov
dec
add
cmovns
iret
or
mov
imul
dec
sarb
add
pop
or
mov
add
sbb
sub
sahf
addr16
pop
push
popf
outsb
leave
sbb
lret
outsl
and
neg
dec
xlat
mov
jecxz
mov
and
xor
jae
and
add
movsl
popa
and
inc
add
addr16
fstpl
jg
inc
imul
adc
mov
xlat
add
int
fsubrl
sub
add
push
jb
xlat
jae,pn
cmp
fnstenv
xor
jmp
pop
ret
mov
outsb
xchg
insb
popf
xchg
pop
dec
jge
mov
addr16
jo
popf
addr16
cwtl
lret
mov
sub
scas
xor
xor
inc
int
fwait
mov
or
fsubs
sub
dec
dec
imul
push
arpl
adc
fs
inc
aaa
popa
pop
outsl
pcmpeqw
jae
popa
adc
xor
inc
push
imul
and
arpl
push
cmp
mov
add
insb
adc
pushf
or
xor
test
pushl
nop
xor
xor
xor
xor
jne
xchg
xor
xor
xor
pushl
push
xor
xor
xor
xor
xor
xor
xor
xor
adc
xchg
ss
pushl
dec
aaa
pop
aaa
je
mov
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
sarb
cmp
cmp
cmp
pop
xor
inc
ds
ds
movsl
ds
ds
xor
or
das
aas
addr16
ja
xchg
sarl
aas
aam
fwait
movsb
sub
decl
pop
xor
xor
and
sub
bound
sti
and
and
adc
ljmp
mov
test
fdivs
fdivs
add
hlt
jl
xchg
out
popa
divl
fildl
inc
out
flds
xorb
mov
sub
sub
pop
xchg
add
and
and
pop
sub
adc
pop
leave
adc
test
in
mov
daa
push
pop
test
outsl
and
cs
iret
nop
nop
push
andl
out
and
and
adc
dec
repnz
adc
and
xorl
mov
add
mov
dec
xor
add
jb
xor
movhps
add
xor
shll
data16
or
xor
rcrl
lods
popa
xchg
dec
idiv
cs
sub
xlat
mov
sbb
in
add
fdivs
movsb
ja
int3
data16
cmpl
sbb
pop
push
xor
add
inc
sbb
pop
inc
or
and
ret
or
jmp
test
dec
lcall
out
and
push
dec
outsl
lds
or
int
sbb
outsl
xchg
pop
stos
ds
push
xor
add
push
and
add
pop
mov
push
push
lahf
and
push
out
fwait
test
add
and
push
add
add
dec
adc
and
or
or
test
or
and
leave
and
jns
bnd
and
and
and
enter
and
in
push
sub
sbb
jns
and
pop
and
add
push
enter
or
sahf
pop
rcr
pop
out
mov
sbb
fstpl
test
jmp
cld
out
pusha
jo
in
mov
icebp
nop
call
sbbb
loope
add
pop
hlt
sbbb
mov
fsubr
clc
mov
lret
mov
dec
rcrb
repnz
lea
mov
jnp
jne
add
sbb
push
cmp
jne
lea
leave
push
pop
lahf
andb
mov
mov
pop
incl
incb
inc
mov
xor
fs
push
pushf
fs
fsubr
add
or
adc
add
imul
dec
es
aas
pop
cmp
mov
ja
adc
or
lea
popf
fs
push
arpl
sbb
xchg
pop
mov
scas
call
clc
prefetch
xchg
loope
in
outsb
cmp
pusha
adc
mov
cmp
pop
popa
mov
fnstsw
adc
clc
push
and
adcl
cmp
mov
in
adc
pushf
in
pop
push
and
or
and
jno
popf
mov
repz
dec
ret
ja
call
push
mov
lods
cltd
jmp
aad
mov
cmp
add
sti
or
sbb
enter
or
mov
in
idivb
sbb
lret
es
pushl
sub
pop
mov
or
imul
jne
fcmovnb
bound
push
ret
add
pop
loope
jo
push
push
pop
decb
adc
loopne
sbb
movsl
lea
clc
dec
mov
sarb
aaa
jle
fisttpl
lea
inc
sub
or
scas
testb
lea
clc
inc
nop
mov
sarl
jne
xor
dec
inc
xchg
pop
je
nop
sti
pop
xchg
sub
lcall
test
xchg
lcall
push
push
inc
sarb
data16
adc
dec
iret
inc
mov
insl
adc
xchg
rcrl
clc
mov
push
das
pop
cs
pop
pusha
shrb
shr
pop
or
rorl
or
fcoms
xor
out
jns
call
jge
daa
or
rcrb
sub
xchg
mov
push
add
pop
or
sbb
sbb
sbb
frstor
mov
fcoms
adc
insb
mov
pop
fstpt
add
insl
aaa
neg
push
lea
pop
mov
rep
mov
cmp
imulb
xchg
mov
std
aas
jle
add
cmp
je
inc
add
cmp
outsb
mov
sbb
imul
pop
jecxz
lret
add
out
loopne
mov
in
cmp
mov
jl
out
je
sbb
or
push
and
inc
and
test
adc
and
sbb
sbbl
pop
mov
test
or
cmpl
push
lea
sbb
loop
mov
push
cmp
stos
lcall
jno
or
push
negb
sbb
call
es
lcall
adc
mov
mov
int3
and
add
test
xchg
out
and
mov
cmp
and
pop
push
inc
mov
jl
inc
test
push
push
call
je
jnp
add
adc
mov
mulb
inc
int
ficomps
dec
lret
xor
add
mov
mov
int3
int
out
add
mov
and
stos
jb
sbb
test
and
xchg
call
stos
flds
adc
in
adc
fs
fs
loopne
cs
in
sbb
sbb
aad
xlat
sbb
sbb
fcomp
fcmovu
sbb
sbb
push
sbb
sbb
loope
fcomp
cld
cmp
fdivr
idiv
decl
das
sbb
pop
adc
xchg
jmp
or
dec
mull
inc
sub
int
andl
aam
add
and
mov
enter
shrb
idiv
lcall
dec
shlb
and
shlb
lcall
mov
popa
in
pop
adc
xlat
push
cld
out
sbb
dec
mov
pop
stos
sbb
push
push
push
out
nop
fiaddl
and
mov
and
adc
jl
add
push
dec
shrl
mov
fcomps
xchg
push
cwtl
push
and
adc
les
nop
xor
xorb
lcall
cwtl
mov
mov
adc
mov
or
xlat
mov
jno
dec
popa
insl
fldt
inc
jb
jb
clc
lahf
add
sub
dec
lds
push
add
js
imul
lahf
outsl
outsb
fistpl
imul
inc
push
je
movsl
push
inc
lods
dec
rorb
add
push
lret
push
sub
sbb
xchg
loope
ss
push
shlb
add
pop
decb
mov
ja
add
jecxz
ja
and
mov
or
pop
mov
mov
dec
cmp
testl
mov
jb
stc
pop
dec
outsb
into
ss
imul
insb
sbb
cmpb
out
insb
jae
dec
and
stos
fdivrs
scas
add
xor
stos
add
sbb
mov
mov
xor
or
enter
xor
add
btr
ss
rolb
fdivs
out
sub
pop
in
dec
mov
lods
pop
push
movb
mov
pop
xor
xor
xor
xor
xor
pushl
xchg
xor
xor
xor
xor
xor
in
mov
ss
ss
aaa
jbe
mov
xchg
aaa
stos
aaa
cmp
dec
in
cmp
mov
cmp
fildll
cmp
jle
or
jl
mov
xchg
cmp
cmp
mov
jecxz
inc
cmp
cmp
cmp
sbb
loopne
jg
inc
cmp
push
cmp
sahf
cmp
add
mov
add
inc
cmc
add
mov
and
adc
cmp
push
outsl
imul
andps
xor
imul
push
add
push
gs
jne
arpl
sti
mov
xor
or
xchg
sbb
gs
lcall
js
xchg
add
shll
add
xor
jmp
bound
add
pop
incb
and
aas
jo
fildl
dec
stos
add
adc
sbb
lock
frstor
add
insb
dec
mov
je
push
and
mov
xor
in
fbstp
sidtl
int
push
and
arpl
test
sarl
mov
pop
and
and
sbbb
xor
iret
or
repnz
lret
or
jl
cmp
or
add
sub
add
lods
fldenv
and
and
je
add
subb
repnz
hlt
add
dec
jle
add
movsl
inc
and
add
add
add
add
incl
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
