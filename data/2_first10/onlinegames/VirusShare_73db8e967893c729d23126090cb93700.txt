aaa
pop
add
mov
add
add
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
add
jb
mov
test
call
loopne
inc
inc
add
xor
test
mov
jle
jmp
mov
push
lea
push
sub
das
mov
sbb
clc
push
add
mov
movzbl
push
je
mov
jo,pn
push
push
call
push
jbe
dec
push
mov
negl
leave
repnz
push
mov
jmp
push
ja
inc
cmp
xchg
incb
test
lcall
pop
iret
add
add
pop
leave
ret
sub
push
push
push
fadds
call
cld
ret
sbbb
addr16
sbb
jmp
jo
insb
in
jne
xchg
loope
jae
cs
insb
add
ss
insb
mov
call
cmp
je
mov
out
pop
and
inc
push
push
shll
mov
imul
push
xchg
loope
je
dec
enter
loope
pop
daa
lret
int3
inc
int
sbb
xchg
into
arpl
outsl
shlb
mov
jb
jae
or
add
inc
ficomps
ret
pop
mov
repz
cmp
movsb
movsb
movsl
cmpsb
iret
repz
cmpsl
test
stos
stos
cmp
repz
lods
scas
scas
mov
repz
repz
mov
mov
mov
enter
mov
cmp
repnz
jne
push
jo
shlb
cld
push
call
add
dec
ja
mov
push
mov
int3
test
cld
nop
push
je
cmp
sbb
add
lea
pushl
or
pusha
pop
outsb
add
pop
je
inc
add
cmp
add
jb
jmp
mov
imul
add
fsubs
mov
or
push
inc
or
push
jne
pop
mov
jle
rclb
movl
dec
pop
cmp
repz
repz
gs
jns
inc
iret
xor
hlt
pop
xor
push
push
xchg
popa
loope
loop
jecxz
in
loope
cmp
outsb
call
sbb
ret
jmp
dec
scas
jno
lock
inc
insb
mov
bound
sbb
dec
fisttpll
cmp
mov
push
mov
inc
mov
push
mov
loope
dec
roll
ret
xor
xor
adc
sahf
inc
push
mov
out
fs
jmp
dec
lds
mov
adc
add
mov
jge
sub
push
lcall
cmpb
xor
inc
jno
pusha
inc
mov
jo
push
mov
jbe
rclb
je
mov
push
loopne
and
shr
pop
adc
icebp
or
add
cld
out
leave
cmp
es
xchg
sahf
add
aam
mov
or
addr16
imul
insb
fnstenv
jae
xchg
loope
fsubl
repnz
jno
xchg
test
or
test
sub
pop
test
jns
jae
je
jne
jns
jb
gs
js
jns
insl
mov
cmp
jl
das
into
jecxz
insl
jle
push
ss
jg
addb
ret
loope
jb
outsl
subl
test
cmp
xchg
push
mov
inc
mov
or
fimuls
mov
xor
cmp
push
xchg
popa
xchg
jbe
xchg
loope
gs
dec
xchg
insl
xchg
popa
loope
cmp
addr16
gs
push
lcall
ret
pushf
imul
jb
add
mov
call
ret
loope
cmp
enter
lret
push
cmp
xchg
je
popa
into
jb
je
mov
shll
pushf
mov
cltd
jo
je
mov
iret
mov
movsl
imul
outsl
mov
gs
inc
cmp
in
jne
xchg
or
les
rorb
inc
decl
mov
addr16
pusha
insb
pop
mov
adc
pop
cmp
push
mov
xchg
pop
int3
imul
inc
insl
add
call
pop
cmp
pop
gs
das
mov
push
jo
in
push
jecxz
arpl
cmp
mov
gs
and
jno
lea
xor
mov
jo
xchg
dec
add
test
mov
sub
gs
mov
mov
in
shlb
fucom
adc
dec
out
jmp
in
or
mov
pop
jns
or
ja
or
lret
push
imul
pusha
insb
xor
repz
sbb
sub
lea
in
lock
pop
add
cmp
jg
or
test
pmuludq
test
mov
push
cwtl
sub
xor
out
sub
jge
or
add
cs
or
das
mov
sarl
add
inc
imul
mov
cwtl
jecxz
xchg
pop
dec
cmp
push
bound
ficoms
imul
cmp
xchg
add
adc
mov
sbb
and
push
push
fmull
fstl
filds
push
loope
mov
sti
test
push
cmp
sbb
pop
movb
cld
lret
jmp
xchg
mov
pop
sbb
aam
sbb
sbb
xlat
and
mov
loope
fsts
mov
sub
or
dec
lret
jno
jle
int3
int3
mov
dec
into
sbb
xchg
iret
sbb
test
leave
shlb
adc
lea
mov
push
outsb
in
push
mov
icebp
in
in
in
je
out
adc
cwtl
mov
mov
lock
loope
mov
and
out
xor
popa
shr
jmp
repz
dec
sbb
jo
cmp
hlt
push
hlt
cmc
push
testb
or
xchg
mov
loope
add
push
lods
lea
ret
scas
and
dec
mov
mov
jo
mov
mov
mov
mov
lea
test
mov
mov
lods
ret
adc
mov
orb
ret
jo
mov
mov
test
mov
movl
fs
mov
mov
les
cmp
enter
lret
or
lods
inc
test
jno
inc
nop
inc
mov
aas
xor
mov
subl
inc
xor
or
sub
cmp
jne
pop
mov
mov
push
xor
mov
mul
push
push
inc
pop
aam
push
and
je
les
rolb
jno
xchg
adc
pop
xor
push
popf
test
or
mov
ds
call
fcomi
jno
pusha
sahf
std
pop
ret
pusha
pushf
push
push
cltd
cmp
scas
add
jnp
push
mov
xchg
test
pop
push
inc
fiaddl
jp
cwtl
push
jae
mov
push
loop
cmc
dec
cs
add
jnp
mov
faddl
push
dec
insb
and
lahf
sub
and
stos
adc
xor
int3
jae
sbbl
stos
cmp
std
les
jle
test
sub
sbb
sub
into
rclb
push
xchg
adc
popa
jmp
mov
push
cmp
arpl
pop
jo
mov
xor
lods
pop
sarb
push
mov
pop
cmp
sbb
cmp
mov
aad
push
pop
pop
js
xchg
int
popf
int3
or
ja
push
aam
fstl
cmp
and
pop
sub
imulb
and
dec
popf
lret
jno
js
out
aas
cmp
or
call
sahf
out
outsl
outsb
cmp
jo
out
repz
lret
jno
push
hlt
es
mul
jo
mov
and
cli
insl
and
xchg
sti
cld
cmp
fwait
lret
popa
pop
loope
leave
aas
shlb
or
and
dec
jb
push
fistpl
loopne
mov
cmp
movsb
loopne
mov
imul
cmp
aas
popa
arpl
lea
outsb
cmp
je
jae
insb
popf
out
sahf
outsl
arpl
jne
pop
jmp
mov
sbb
icebp
movsb
inc
imul
dec
mov
push
and
mov
pushl
inc
mov
or
pop
dec
mov
dec
insl
mov
mov
rolb
and
faddl
cltd
sbb
gs
insb
add
push
jb
sbb
adc
push
movlps
fadd
add
add
mov
mov
inc
mov
in
adc
rcl
sbb
and
xor
std
push
jmp
aad
pop
add
je
push
xor
xor
aam
pop
jo
push
push
rorb
pop
jo
xor
enter
push
aam
into
xchg
mov
cli
ljmp
pop
push
scas
mov
lea
roll
std
or
cmp
jb
mov
sbb
push
cwtl
push
jns
clc
repnz
out
dec
dec
fdivrl
sub
scas
or
nop
sti
test
fists
outsb
xchg
xchg
das
ret
sbb
les
pushl
inc
sti
jnp
push
cwtl
in
cld
pop
xchg
rdtsc
mov
call
imul
sbb
int3
xchg
addr16
xchg
mov
cld
iret
lods
addl
mov
out
push
dec
je
stc
add
cmp
add
into
mov
addr16
pop
cld
pop
cld
or
movl
cmp
push
in
push
xor
xchg
cmp
ret
loope
cmp
xor
cmp
or
ret
jae
es
out
xor
out
sahf
out
cmp
icebp
mov
cmp
out
aad
xlat
fdivrs
jo
iret
repz
fstp
xor
xor
xchg
loope
cmp
jecxz
lret
jo
sbb
fs
out
out
push
sahf
out
es
out
and
jns
out
xor
jns
es
push
std
mov
clc
fdivrs
std
pop
jnp
popa
dec
aad
mov
cmp
sbb
mov
enter
push
push
dec
imul
dec
mov
sub
add
out
cmp
psrlw
out
push
ljmp
fstpl
and
mov
out
or
mov
inc
or
add
jo
inc
mov
cmpl
rcll
lock
adcb
or
sbb
xchg
sbb
mov
sub
dec
icebp
clc
out
lds
cwtl
inc
cmp
mov
insb
lds
out
test
hlt
jae
push
jecxz
mov
cld
xor
jg
hlt
mov
test
fisubrl
jne
inc
dec
aad
xor
rorl
leave
sahf
add
add
std
or
lret
add
pusha
push
imul
push
cmp
xor
xchg
nop
adc
and
push
add
subb
mov
inc
mov
or
and
repz
call
fidivl
or
adc
push
sar
jns
and
mov
pop
inc
test
int3
repz
repz
outsb
cmp
cmp
repz
outsl
arpl
mov
cmp
jne
and
rorb
xlat
call
cmpsl
xor
inc
cmp
mov
push
int3
bound
jne
test
cmpsl
xlat
fcomp
icebp
cmp
repz
fisubs
xchg
fbstp
outsl
loope
outsl
jecxz
iret
jecxz
data16
in
sbb
in
ljmp
repnz
adc
rclb
push
repz
jne
inc
jne
jle
push
int3
jb
jns
out
push
jb
arpl
jbe
out
dec
fs
mov
sub
jns
stos
or
jb
rcrl
aam
xor
push
cmpsl
xchg
inc
xor
push
push
inc
push
cmp
ret
add
in
xor
inc
mov
insb
jb
sub
xchg
enter
push
int
call
sti
push
xchg
xchg
adc
adc
mov
sbb
icebp
imul
inc
lock
push
mov
fadds
fadds
adc
push
mov
adc
test
mov
jne
jp
jbe
sub
lret
and
in
lea
iret
sub
arpl
sub
push
add
pop
test
fs
addr16
ljmp
sbb
jp
shlb
test
mov
fidivs
les
jmp
jl
rorl
sbb
pop
in
sbb
out
add
popa
mov
jno
out
imul
mov
push
lods
xchg
jns
ja
cmp
dec
jbe
push
icebp
icebp
icebp
icebp
jb
jbe
jl
jl
ja
outsb
xchg
mov
outsl
fs
out
dec
gs
sbb
mov
jb
outsl
test
jo
ret
jb
cs
mov
iret
xor
enter
shl
cmp
popa
imul
aad
xor
inc
movsl
push
jo
in
mov
mov
dec
and
lcall
je
lods
inc
lods
xchg
cmp
scas
js
cmp
sbb
mov
mov
mov
mov
sbb
ret
cmp
loope
in
in
inc
out
inc
out
push
lock
cmpsb
sbb
repnz
mov
jl
dec
or
pusha
jl
dec
push
push
aas
rclb
into
arpl
push
outsl
push
inc
pushf
mov
dec
pop
fwait
push
pop
insl
pop
dec
dec
pop
xor
loop
mov
xor
cmp
mov
jecxz
pusha
jae
cmp
arpl
jl
ds
jge
pop
jp,pn
jg
mov
sahf
out
addb
leave
test
imul
mov
popf
jb
outsl
lahf
arpl
xchg
loope
jae
xor
push
sbb
cmpsl
test
mov
test
js
test
into
into
in
stc
mov
mov
push
xchg
sysenter
loope
cmp
push
nop
imul
outsl
xchg
ja
push
mov
jo
xchg
gs
js
je
push
out
mov
lcall
gs
xor
daa
aam
jns
insb
insb
loop
or
ljmp
pop
hlt
xor
cs
mov
mov
sub
ret
and
cld
je
and
mov
aam
pop
push
jns
and
mov
lcall
jno
add
inc
lea
and
jle
insb
cmp
pop
mov
dec
lods
cli
cmp
cltd
aaa
in
rcr
aad
push
push
inc
test
xchg
push
xchg
push
pushf
jmp
push
pusha
mov
inc
std
add
loopne
hlt
sbb
rcl
push
loope
pop
sub
fs
sahf
mov
adc
mov
js
mov
mov
and
lcall
repnz
jmp
mov
in
adc
pop
pop
xchg
enter
arpl
inc
movl
sti
inc
xchg
pop
js
push
imul
cmp
xor
lcall
mov
mov
push
or
cs
inc
shlb
inc
cmp
pushl
orb
add
nop
mov
mov
sbb
sub
inc
mov
mov
xor
enter
clc
pop
xor
jmp
shlb
loope
mov
push
dec
addl
sub
jne
mov
je
xor
jb
push
push
adc
aam
sbb
jae
inc
cmp
shl
mov
pop
or
pop
in
loopne
sti
pop
add
enter
je
cmp
jb
dec
dec
cmpw
jne
sbbb
dec
jg
pop
dec
iret
jb
jne
cmp
inc
arpl
ds
or
xor
push
inc
mov
mov
or
cmpb
or
pop
mov
enter
enter
out
jp
fnstsw
idivl
shlb
xchg
or
adc
and
or
stc
jnp
shlb
bound
xor
xor
fdivr
imul
icebp
jae
cmp
repnz
xchg
loope
jb
xor
xor
cs
sbb
fs
insb
stc
repz
gs
inc
gs
sbb
int3
inc
jb
aad
sahf
out
jb
les
jnp
outsb
outsl
lahf
cltd
adc
out
xor
mov
test
cmpsb
adc
int3
mov
cmp
shlb
or
pushf
or
mov
pop
xor
sahf
mov
mov
stc
mov
mov
pop
xchg
dec
xchg
sbb
and
pop
loope
mov
notb
xchg
mov
fmuls
mov
hlt
cs
addr16
shll
cmp
sub
sub
mov
stc
in
stc
mov
cmp
inc
fdivs
adc
les
icebp
jae
in
mov
imull
and
clc
je
mov
inc
ds
sti
cmc
std
hlt
std
pushf
or
mov
repnz
addl
js
mov
xchg
sbb
pop
jo
or
test
mov
mov
mov
sub
push
inc
push
daa
jnp
xor
inc
notl
dec
out
out
leave
xlat
or
or
clc
mov
pop
cld
sti
ljmp
repnz
lock
pushf
pop
mov
push
jne
push
shlb
or
or
test
lods
inc
call
fcoml
aad
insb
inc
add
or
xchg
jecxz
dec
popa
fs
inc
cmpsb
and
adc
sub
popf
mov
jl
jp
sub
ret
insb
lcall
push
leave
or
iret
push
pop
xor
mov
shlb
cmp
aam
xchg
cmp
jbe
jae
jb
imul
adc
mov
xorb
xor
mov
jns
dec
outsb
je
sbb
in
mov
gs
je
push
mov
je
or
push
shlb
adc
mov
and
iret
je
dec
lods
mov
pop
sahf
out
fs
gs
jecxz
ds
gs
mov
mov
mov
out
outsb
fs
sahf
out
xor
jne
mov
out
jae
inc
js
jp
cmpsl
mov
icebp
jns
inc
lock
outsb
fs
sahf
out
gs
lcall
das
xorl
dec
dec
dec
leave
outsb
lret
rolb
jb
mov
cmpsb
push
adc
lods
pop
cmp
jecxz
outsb
aam
arpl
adc
xchg
jno
inc
mov
or
cmp
cmp
loope
add
scas
ljmp
je
xchg
mov
clc
cmp
aas
leave
shll
jecxz
clc
sub
and
push
popa
mov
adc
mov
fsub
call
sbb
je
push
je
subb
xchg
dec
and
movsb
push
orl
lock
mov
jne
xor
inc
or
dec
in
lret
test
inc
orb
inc
les
in
clc
sbbl
psubsb
mov
lods
or
inc
enter
adc
pop
pop
gs
sbb
in
enter
push
pop
push
push
adc
in
scas
or
test
inc
xor
cltd
idiv
pop
dec
or
jle
clc
pop
dec
dec
add
xchg
sbb
jl
mov
notb
cmp
jl
mov
add
out
add
lea
les
push
icebp
insl
rorl
dec
fwait
push
add
lds
shl
mov
aam
add
cmp
push
xor
or
cmp
sbb
inc
outsb
enter
dec
enter
sub
mov
mov
xchg
push
inc
lret
shll
and
mov
and
nop
xchg
ret
adc
insl
cmc
sbb
push
mov
loopne
divl
test
shll
inc
jge
shrb
rolb
xor
lahf
ja
fildl
xchg
pop
push
push
pushf
push
aaa
push
lds
xor
xor
sub
loop
arpl
pop
pop
rol
cli
xor
enter
clc
dec
push
xchg
loope
inc
cli
inc
sti
jb
popa
mov
fs
insl
decb
xchg
movsb
dec
movsl
outsl
cmpsb
jp
mov
sbb
imul
stos
push
lods
dec
lods
push
scas
imul
outsl
mov
mov
push
cmp
mov
mov
mov
mov
ret
loope
cmp
xor
ss
xor
xchg
jae
in
shl
cmp
inc
jb
insl
cmp
gs
jmp
popa
repz
repz
push
pop
rcr
pop
flds
cmp
xchg
jb
fsubrl
cmp
jge
mov
pop
mov
pop
nop
pop
xchg
push
xchg
push
jo
sbb
xchg
inc
xchg
jb
popa
xchg
insl
xchg
gs
vxorps
jo
fwait
pushf
pop
popf
xor
loope
test
jne
mov
mov
xorb
cmpl
mov
sahf
out
outsl
jne
cmp
enter
imul
inc
outsl
into
iret
sub
ljmp
or
jmp
addb
mov
mov
xlat
mov
push
repnz
andb
dec
in
clc
inc
xor
je
aas
into
xchg
push
and
shr
or
push
push
push
sub
add
sub
mov
jmp
xor
dec
and
shll
jbe
inc
pop
lds
fcoml
outsb
orl
dec
and
add
xchg
inc
add
and
add
stc
add
pop
pusha
es
repz
addr16
outsl
mov
movsb
cmp
int
aam
loop
push
sbb
notb
jge
icebp
cld
je
adc
or
sbb
stc
mov
mov
sti
lock
inc
add
lds
aas
sub
flds
nop
jne
mov
out
push
int3
or
and
mov
cmp
jl
add
inc
jg
mov
xor
jb
les
jg
inc
inc
jl
loope
mov
pop
ret
push
loop
test
insb
cmp
repnz
lods
sub
pusha
pushf
shlb
or
mov
pop
xchg
inc
push
or
cmp
pop
cs
adc
jl
jne
mov
jbe
dec
mov
mov
mov
xor
int3
xor
pop
push
sbbb
xor
add
cmp
shl
adc
sbb
hlt
es
test
mov
inc
adc
or
imul
insb
jo
jo
push
sahf
out
cs
push
cmp
sbb
in
or
fdivrl
sbb
xor
repz
jo
repz
repz
dec
outsb
data16
iret
outsl
mov
mov
cwtl
shrb
xorl
les
ret
out
sahf
addr16
fs
jnp
xor
iret
repz
xor
pop
cli
fdiv
cmp
xor
jl
icebp
or
jb
rcll
xlat
pop
push
pop
fisttpll
fdivs
add
cld
cld
cmp
xchg
xchg
xchg
rorb
xchg
jmp
outsl
jne
mov
enter
pop
push
or
or
iret
cltd
xchg
iret
xchg
rcrb
clc
dec
and
push
out
inc
jne
and
rolb
or
sub
cmp
dec
or
jge
sub
xor
jae
cld
push
adc
call
jge
push
push
push
jp
mov
pop
clc
mov
lods
addr16
cld
inc
mov
push
in
cmp
jbe
das
pushf
push
flds
cmp
push
push
andb
clc
out
adc
mov
rorb
and
es
push
push
add
sar
div
mov
nop
inc
sub
add
mov
lock
inc
lret
inc
jno
mulb
pop
rcr
pop
inc
or
js
ficoml
xchg
jbe
lcall
cmp
bsf
or
call
mov
aam
pop
mov
push
xchg
xchg
mov
push
adc
xor
mov
push
aad
imul
mov
pusha
or
mov
sbb
push
inc
cwtl
aad
int3
or
adc
mov
and
push
jnp
or
pop
mov
add
cmp
les
mov
push
ja
push
negl
lods
lock
push
imul
sbb
arpl
push
in
push
mov
sub
sub
push
and
jns
dec
and
je
xlat
and
es
out
or
push
push
insb
push
jb
dec
xor
je
nop
push
jno
fcmove
push
dec
mov
mov
push
push
adc
gs
sub
lea
push
push
aas
icebp
int3
sbb
fadds
dec
mov
add
inc
jmp
add
movb
inc
into
bound
sub
inc
add
jae
cld
sti
nop
jg
xchg
lea
gs
xchg
sbb
add
push
in
or
ret
jmp
mov
cmp
sbb
pop
and
xor
mov
or
cmp
sub
mov
repz
inc
add
mov
ret
xor
in
sub
mov
push
push
or
or
sub
mov
push
in
sbb
rorl
pop
adc
dec
jmp
clc
add
push
adc
leave
lea
hlt
hlt
sbb
sbb
push
gs
xor
leave
dec
add
test
je
push
test
jae
nop
jmp
ret
clc
sbb
mov
inc
mov
xchg
add
ficomps
cmp
or
fistl
dec
or
jne
mov
addr16
in
mov
xchg
iret
arpl
insl
outsb
cmc
fcomps
xor
js
out
mov
push
or
push
or
push
orb
cwtl
pop
inc
sbb
lods
push
in
sbb
icebp
pop
ret
jnp
xor
cmp
ret
ljmp
out
jp
cs
gs
pop
sahf
fdiv
repz
repz
adc
xchg
pusha
aam
dec
push
pop
jmp
sbb
xor
cmp
stc
and
jecxz
add
insl
sub
pop
push
out
dec
xchg
bound
mov
push
dec
lahf
stc
mov
jns
pop
push
fsts
mov
lds
fcompl
dec
mov
in
dec
fucom
push
gs
lcall
mov
lock
mov
push
mov
cmp
pop
add
rolb
cmp
insb
es
mul
mov
sbb
loope
adc
divl
mov
and
mov
mov
mov
inc
imul
imul
lret
mov
xor
dec
pop
push
mov
mulb
or
adc
push
push
push
and
xchg
push
push
cld
mov
xor
add
cmp
je
shll
mov
ficoml
movb
adc
out
iret
popa
out
std
xchg
mov
les
jb
gs
mov
or
popa
gs
out
jle
outsl
insb
push
in
jo
xor
xor
jo
aam
aad
popa
sub
repz
xor
stos
xchg
outsl
arpl
stc
xor
jae
xor
pop
pop
cwtl
inc
jb
repz
pop
in
lock
iret
and
arpl
sub
xor
dec
imul
push
mov
push
dec
pushf
xchg
mov
lock
sub
scas
add
imul
pop
jae
enter
jmp
shll
imul
push
mov
sub
or
arpl
add
adc
jmp
and
test
cmpsb
and
mov
icebp
xor
iret
shll
imul
iret
cs
lret
cmp
clc
out
lods
adc
fstp
addr16
iret
sahf
fists
bound
xchg
cmc
outsb
mov
dec
sahf
out
push
outsl
imul
push
xchg
jbe
imul
addr16
repz
popa
insb
jne
jo
lods
leave
inc
lds
xchg
loope
push
jne
jae
je
jo
sbb
push
lahf
outsl
mov
outsb
fisubs
movsb
jb
xchg
adc
jbe
mov
lods
jae
mov
pop
lods
adc
shl
mov
stos
sub
jecxz
sbb
lea
mov
std
and
jns
push
je
jne
fcomps
jb
outsb
xchg
repnz
je
jb
cltd
insb
fsubs
movl
xchg
push
push
lcall
loope
sti
add
push
mov
xchg
add
inc
mov
pop
inc
int3
pop
mov
mov
inc
xorb
pusha
or
fcomps
rclb
add
leave
adc
sub
lods
pop
adc
jne
test
mov
add
fldcw
cmp
ja
mov
shlb
ret
movsb
fldl
add
cmp
jne
mov
add
cmpl
add
mov
iret
inc
mov
xchg
cmp
sbb
arpl
je
mov
cmp
add
pop
cmp
ja
mov
and
xor
mov
ja
mov
mov
mov
adc
inc
jmp
cmp
jb
or
mov
sbb
add
dec
sbb
inc
dec
sub
dec
in
int
adc
enter
or
cmp
dec
push
sbb
int3
jo
testb
fcoml
add
mov
mov
add
cmp
jae
mov
mov
add
testb
sbb
loope
adc
push
fsubrl
ret
mov
cmp
loopne
das
and
mov
adc
xor
add
dec
dec
shll
clc
push
jg
and
rcll
dec
push
rorl
inc
mov
and
je
mov
sub
add
sbb
loop
test
jle
sbb
je
mov
add
lea
adc
jg
mov
sub
jae
loopne
cmp
ret
pop
mov
mov
xor
loope
mov
push
cmc
dec
testb
or
testl
cmp
cs
insb
xor
cmp
xor
jns
gs
das
in
dec
jmp
roll
push
cmpsl
cmp
lock
rorb
and
outsb
ret
dec
hlt
mov
or
in
jnp
icebp
mov
popa
cmp
xor
rcl
dec
aad
jne
out
jo
iret
mov
adc
cmp
outsb
data16
aam
loop
aam
addr16
out
adc
inc
or
mov
mov
jecxz
int3
int
fs
mov
mov
xchg
movsb
sub
and
cwtl
dec
iret
repz
gs
xchg
jae
gs
je
inc
loope
cmp
insb
mov
movsl
dec
push
or
outsb
test
mov
imulb
push
and
jle
jl
xor
sbb
cmp
xor
mov
cwtl
nop
inc
fiaddl
pop
dec
mov
pusha
xor
addl
mov
test
and
cmpsl
addr16
push
xchg
mov
xor
and
sahf
inc
inc
adc
xchg
sahf
pusha
bound
dec
ret
loopne
nop
popf
aaa
in
lcall
leave
mov
int
sahf
inc
adc
and
fmuls
xchg
mov
in
je
mov
pop
lock
dec
arpl
insb
xor
and
and
lcall
jne
add
xchg
je
add
mov
pop
cmp
mov
xor
inc
repnz
call
xchg
hlt
das
adc
pop
xor
loopne
push
pop
ljmp
add
jb
movsbl
cmp
je
dec
jmp
shll
add
jnp
shlb
ret
test
inc
add
pushf
mov
inc
inc
jmp
andb
fs
push
ds
push
xchg
inc
test
pop
call
movzbl
inc
mov
jno
push
jp
pop
and
cmpb
imul
inc
jmp
in
or
addb
mov
inc
mov
pop
or
nop
xor
inc
push
incb
int
lods
andb
clc
andl
scas
shll
loop
jbe
sub
mov
cmp
inc
pushf
dec
rolb
xchg
fnstcw
pop
jb
xor
fldl
mov
mov
sbb
leave
jne
xorl
cmp
inc
inc
jmp
mov
jnp
adc
add
push
mov
mov
inc
inc
test
jne
pop
fdivrs
test
pop
add
in
sbb
xor
pop
fisubl
movsl
xchg
add
inc
dec
andb
xchg
test
push
xchg
and
inc
in
out
out
loop
cmp
inc
jmp
jae
pop
movsb
mov
enter
insb
not
adc
hlt
inc
push
pop
movsl
and
inc
bound
lods
cmp
cmp
lea
lcall
jne
in
push
pusha
into
rcrl
jp
or
mov
fmul
push
leave
repz
pop
push
jns
fnstcw
push
insl
fists
xchg
inc
imul
sti
outsl
cld
jb
and
dec
xchg
push
mov
xchg
inc
je
adc
push
and
leave
push
mov
xor
xor
sub
add
dec
sub
inc
inc
cmp
mov
mov
push
cwtl
test
idivl
jae
mov
roll
sarl
ret
mov
jb
dec
inc
and
iret
cmp
jbe
mov
es
movsl
iret
add
adc
call
orl
out
add
inc
sbb
jmp
mov
sbb
loopne
lea
movzwl
or
and
orl
add
cmp
jae
cmp
jb
mov
and
je
cmp
adc
pop
loope
inc
add
andb
popa
mov
sub
sbb
push
xor
popf
sub
insb
mov
clc
mov
inc
lods
bound
movsl
xchg
or
jecxz
fcoml
push
inc
dec
sub
cld
mov
add
sbb
mov
stc
testl
lds
cltd
pop
xor
adc
push
scas
imul
mov
mov
repz
or
clc
pop
xchg
gs
cld
add
aad
xor
jnp
or
pusha
add
sub
rcrb
inc
decl
jne
sbb
add
leave
inc
les
add
les
cmp
mov
adc
sub
daa
test
nop
ds
mulb
xor
clc
shlb
and
cmp
je
xchg
dec
loope
je
cmp
jp
imul
dec
test
mov
insb
pop
mov
imul
push
add
clc
push
push
or
and
and
or
inc
dec
mov
dec
mov
je
push
adc
and
in
insl
in
and
in
vmovlhps
or
adc
mov
int3
jnp
sbb
adc
adc
shlb
mov
xchg
xor
push
cmp
fisubrl
sbb
adcl
jns
das
bound
xchg
std
cs
lret
int3
dec
repz
jns
sub
jb,pt
or
aad
jne
stc
clc
fsts
pop
movsb
push
jno
inc
or
pop
mov
imul
xor
pop
xor
rcrb
xchg
loopne
mov
xchg
push
loope
loop
ret
loope
cmp
gs
in
out
out
jns
cmp
imul
insb
cwtl
dec
push
aas
mov
cmp
mov
sub
leavew
iret
push
pushf
arpl
popa
cmp
aam
std
insb
fadds
insl
xchg
push
dec
punpckhbw
test
sub
push
jl
cltd
sbb
push
fisttpll
mov
xor
sbb
loopne
or
xchg
subb
pop
dec
push
mov
shll
mov
cmp
test
push
jecxz
inc
ret
mov
fs
repz
outsl
ja
inc
imul
aas
xchg
fmull
dec
ljmp
mov
pop
test
adc
mov
in
insb
cltd
mov
decb
pop
cmp
xchg
std
xchg
std
sahf
out
mov
out
pop
in
popa
arpl
subb
pop
jmp
popa
je
adc
nop
lahf
adcl
cmpsb
jbe
inc
adc
gs
jge
inc
jae
nop
stos
pushf
cs
mov
pop
or
xorb
add
jl
add
inc
cmp
jl
mov
rclb
cwtl
out
cmp
mov
inc
into
inc
out
lret
imul
mov
sahf
lds
dec
cmp
ret
lea
sti
jb
mov
fldt
mov
loopne
clc
outsl
cmp
mov
sbbb
dec
gs
mov
adc
jns
add
cmp
imul
dec
stc
jno
xchg
jbe
lret
out
fcmovu
fdivl
pop
pop
fnstsw
cmp
dec
fildll
movsb
xlat
or
cltd
xchg
insb
push
xorb
pop
enter
xor
inc
jecxz
push
mov
js
into
inc
iret
imul
xor
jns
sbb
cmp
cmp
push
int
push
int3
cwtl
mov
pop
fstpt
xchg
cmpsl
mov
std
cmpsl
into
mov
jnp
sbb
add
scas
fwait
push
jns
dec
dec
lods
sbb
fildl
or
xor
push
leave
dec
sub
int3
inc
lds
clc
pusha
mov
lret
mov
mov
out
dec
pop
fmuls
pop
popf
sub
test
jae
sub
mov
rclb
or
mov
int3
addr16
mov
xchg
xor
jns
pop
sar
gs
sbb
inc
sub
loope
xchg
stos
dec
scas
dec
xor
dec
xor
lret
or
pop
xor
fs
push
fwait
push
arpl
sbb
js
inc
add
repnz
jno
and
arpl
loope
aad
popa
fsubl
sbb
xchg
int3
shlb
gs
jl
ss
mov
pushw
xchg
loope
push
inc
data16
ret
loope
sbb
pushw
data16
data16
sbb
xchg
gs
test
jl
push
dec
gs
pop
pop
ljmpw
lock
cmp
xchg
pop
fs
fs
fs
loope
fs
sub
and
jo
sbb
push
fs
cli
arpl
arpl
arpl
xchg
loope
arpl
arpl
arpl
arpl
jo
sbb
arpl
arpl
ret
mov
arpl
pop
sbb
loope
arpl
push
mov
loope
sbb
pop
xchg
out
xor
data16
outsl
xor
insl
jae
je
lea
mov
add
jb
outsb
je
aas
aas
fs
add
inc
pop
inc
pop
push
inc
pop
mov
mov
loope
ja
jae
insl
jo
lret
cmp
jg
dec
add
insb
outsl
fs
andb
insb
add
sbb
cmp
add
jo
outsb
add
bound
outsl
push
adc
jo
xchg
mov
dec
shrl
push
cmpsl
fs
and
jb
lret
outsb
add
outsb
mov
xor
rolb
je
insl
sub
xchg
insb
ret
xchg
add
dec
shll
mov
sbb
jecxz
inc
fcmovnu
in
insb
add
popf
dec
add
imul
sbb
inc
popa
outsl
cmp
xor
lods
sbb
lret
arpl
je
jbe
daa
pop
push
daa
cmpsb
mov
shrl
sbb
dec
hlt
jbe
aas
add
push
push
inc
push
push
cs
add
dec
shrb
int3
jae
outsb
add
loop
in
imul
add
push
test
inc
dec
jns
fs
bound
add
insb
jmp
add
sbb
fisttpl
rep
outsl
imul
mov
ds
imul
stc
inc
jo
or
cmp
outsl
arpl
mov
inc
dec
xor
lock
or
mov
clc
adc
add
fs
lea
ret
push
jb
popa
cs
add
aad
mov
cmp
jb
ja
pop
outsb
inc
add
int3
addb
dec
dec
mov
jl
dec
mov
add
mov
imul
add
or
dec
outsl
fs
dec
popa
insl
fsubp
sbb
je
enter
hlt
push
push
xor
cld
adc
pop
aad
inc
dec
je
dec
test
bound
push
cmp
adc
dec
sarb
outsl
jae
push
imul
jne
jne
aas
sbb
inc
js
push
imul
outsl
dec
lock
mov
inc
jns
lcall
jp
out
xor
push
outsl
rcrb
mov
add
xchg
mov
dec
jo
lcall
cmpsl
ljmp
mov
je
lock
das
addl
lret
inc
rorb
dec
inc
dec
add
mov
insb
inc
adc
jnp
adc
sub
and
fdivl
xchg
sahf
xor
sbb
popa
nop
jo
mov
pusha
dec
je
outsl
outsl
and
jns
push
jnp
out
mov
pusha
scas
add
push
add
in
pop
inc
sbb
inc
sahf
add
imul
movsl
adc
popl
xor
sub
test
jae
fs
sub
and
cmp
cmp
push
imul
mov
mov
mov
loop
dec
mov
push
sahf
ret
xor
and
str
push
dec
push
push
add
es
and
xchg
jno
fcomps
hlt
dec
dec
imul
adc
rolb
lahf
loopne
bnd
and
inc
inc
subl
cmpsl
inc
dec
cs
xchg
jo
mov
xor
aaa
mov
dec
outsb
adcb
pop
jmp
push
es
push
scas
mov
imul
je
or
mov
outsl
je
call
push
add
or
daa
add
add
add
xor
lods
repnz
and
adc
les
and
jge
sbb
hlt
push
adc
push
sub
sub
mov
outsb
xor
adc
in
or
repz
aaa
xor
mov
repz
inc
ds
push
or
loopne
das
jmp
xchg
xchg
adc
jecxz
sub
in
sarl
add
and
sub
adc
frstor
jge
fucom
pop
jno
cltd
cs
sbb
mov
or
faddl
push
xor
or
mov
test
xchg
ret
mov
and
push
and
and
jge
lds
sbb
or
mov
lret
push
adc
cs
sub
xchg
add
adc
aaa
andb
fists
adc
insl
adc
pop
sahf
and
pop
pop
lods
pop
sub
jbe
pop
xor
and
out
loope
sub
int3
and
movsb
push
fwait
out
or
pop
sbb
adc
loopne
inc
xor
sub
out
add
repnz
xchg
dec
pushf
aaa
mov
addr16
xor
sub
insb
push
fmull
dec
pop
sub
jb
jb
enter
jae
xor
sub
inc
xor
adc
sub
movsl
mov
push
fwait
test
mov
call
cmp
jle
adc
mov
add
push
pop
sub
sbb
push
outsb
pop
xchg
or
fnstcw
mov
rcl
jle
jge
lock
mov
inc
jns
push
fdivl
mov
pop
ja
cmp
xchg
divl
pop
sub
xchg
mov
or
mov
daa
scas
xchg
stc
or
jl
add
mov
adc
mov
insl
push
push
xchg
sub
inc
cmp
add
mov
xchg
std
cs
dec
scas
in
movsb
sub
sbb
push
sub
cmp
sbb
dec
movb
sarl
sub
loope
repnz
shll
add
sub
sub
jge
ficoms
dec
jae
mov
sbb
mov
popa
cmp
pop
stc
add
loopne
mov
lcall
inc
xor
pop
sub
adc
sub
shlb
add
inc
hlt
add
stc
dec
mov
add
add
add
add
add
add
add
add
cmp
add
xor
add
xor
add
inc
mov
add
sbb
incb
add
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
add
sub
add
inc
mov
add
add
add
insb
mov
add
mov
add
lods
mov
add
les
add
pusha
mov
add
decl
add
pusha
mov
add
add
add
jmp
add
je
add
jl
add
add
add
jl
add
jl
add
test
add
jmp
mov
add
add
add
mov
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
push
imul
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
add
dec
xor
cs
insb
add
add
add
je
insb
je
add
add
inc
push
xor
cs
insb
add
add
inc
gs
inc
add
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
pop
ss
adc
cmp
js
pusha
mov
mov
push
push
out
cwtl
popa
nop
add
inc
cs
shl
icebp
and
add
bound
pop
call
mov
popa
mov
scas
ret
loope
pusha
out
jecxz
sbb
fmull
mov
aaa
sub
into
loop
loopne
or
mov
adc
call
adc
sub
lea
add
pop
add
lock
mov
mov
mov
add
lea
pusha
add
dec
add
jae
test
rolb
push
mov
mov
mov
add
mov
sbb
pop
loopne
das
add
or
mov
rclb
inc
nop
sbb
sub
lea
push
push
push
push
aaa
sub
test
push
call
lock
mov
orb
xchg
inc
xchg
push
inc
push
add
or
leave
je
orb
inc
push
inc
data16
jnp
xchg
stos
sbb
mov
add
sahf
cmp
sub
je
push
and
jg
lea
jmp
sub
push
sbb
call
sbb
push
ficoml
mov
testb
popa
sub
fiadds
loopne
pushf
jne
or
dec
inc
mov
add
movb
mov
jmp
addps
and
pop
test
xchg
add
cmp
cltd
in
xchg
and
cmc
and
and
pop
pop
ret
push
mov
add
mov
lret
push
pop
sub
inc
add
mov
add
push
call
mov
add
jle
sbb
inc
roll
sti
xor
add
je
push
mov
add
add
adc
jne
xor
jmp
add
add
push
jne
leave
icebp
sub
jo
clc
mov
incb
inc
pop
or
ret
je
mov
add
xor
push
add
mov
sub
mov
lods
mov
add
insl
add
mov
sub
or
add
movl
jge
cmp
sbb
add
add
xor
clc
and
shr
add
jne
mov
add
dec
xchg
stos
daa
pop
shr
mov
add
mov
movsb
dec
cmp
pop
add
push
adc
add
jmp
pop
or
lods
insb
fucomip
imul
sbb
cmp
or
cmp
gs
push
jmp
dec
add
mov
mov
adc
jne
test
sub
dec
cld
add
and
pop
adc
jge
mov
inc
add
rolb
push
cld
sub
je
dec
mov
jne
mov
ret
or
rclb
adc
add
add
and
enter
or
add
je
cmp
push
cmp
add
or
js
jmp
push
ror
loopne
ret
lahf
and
in
add
jbe
push
push
call
popa
xor
push
cmpsb
shll
inc
pop
mov
pop
fiadds
pop
test
dec
dec
jae
lock
xchg
or
sar
xchg
add
movsl
add
add
push
jnp
cli
ret
xchg
sarl
add
stos
pop
mov
fsub
cmp
lret
ret
jne
inc
sbb
frstor
inc
add
add
lock
push
push
adc
dec
xchg
pop
xor
mov
imulb
adc
enter
inc
pop
in
lods
call
sub
gs
hlt
push
or
dec
loop
je
mov
cmp
shl
adc
je
daa
je
mov
cmp
inc
in
arpl
cmpsb
sub
lret
xorb
jne
jmp
mov
clc
decl
and
shl
sub
pop
enter
out
sbb
pop
or
arpl
jns
movl
and
sbb
cmp
je
add
add
roll
imul
jge
lcall
push
push
push
call
sbb
xchg
add
adc
rcrb
insl
js
js
sbb
mov
scas
leave
data16
inc
inc
mov
adc
call
xchg
fldl
xchg
int3
add
jmp
pop
pop
adc
add
xchg
push
adc
add
mov
imul
inc
push
xchg
mov
pop
mov
and
jmp
mov
mov
sbb
inc
push
inc
xchg
enter
pop
mov
inc
mov
or
mov
or
push
jp
mov
fxch
cmpsb
jmp
xchg
jae
xor
icebp
mov
cmp
imul
xor
add
add
cmp
adc
add
sub
jl
sbb
shr
or
lea
push
add
loopne
insb
sti
push
mov
test
jno
push
add
orb
xor
test
bound
iret
cmpsl
or
push
addr16
or
cmp
xchg
iret
inc
cmp
pop
lea
add
and
call
jg
mov
inc
jo
insb
imul
and
jb
jb
add
sub
arpl
jo
add
and
arpl
jne
and
mov
insb
and
je
bound
add
push
pop
mov
je
dec
dec
push
sub
fs
insb
fs
fsubrs
add
push
mov
jae
xor
dec
gs
popa
addr16
outsl
js
add
pop
fdivs
jno
mov
inc
js
je
stc
es
cmpsl
add
add
outsb
fs
add
outsb
inc
mov
cli
sti
mov
insb
cli
popf
outsl
add
jb
jne
test
je
pop
dec
sbb
sbb
aaa
iret
mov
insl
shll
sahf
out
push
cmp
ret
adc
jp
sub
decb
inc
mov
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
movsb
add
add
test
add
insb
mov
add
pusha
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
