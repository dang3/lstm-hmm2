call
add
add
add
outsl
std
cld
add
pop
xchg
jle
outsl
arpl
mov
adc
push
push
pop
push
jp
cltd
mov
push
aas
mov
mov
mov
dec
mov
lds
fstl
rcrl
mov
cmp
sarl
inc
cmp
add
rcll
insl
shll
adc
fsub
pop
jge
dec
js
mov
xor
es
mov
arpl
aaa
nop
or
jae
inc
sbbb
sub
cmp
lods
cmp
and
sti
stc
push
stos
jg
jg
xchg
dec
stc
in
mov
dec
imul
mov
mov
shr
js
ja
jno
setbe
and
cli
dec
ja
mov
subb
push
in
out
inc
adc
jne
xlat
push
data16
dec
jp
outsb
popa
cmp
add
inc
jge
and
arpl
repz
jns
xlat
pop
xchg
push
jo
mov
cmp
jle
or
xchg
repnz
sbb
jg
mov
xchg
sti
mov
testl
xchg
int
sbb
aam
pop
dec
mov
jns
idivl
pushf
mov
lods
aad
pop
je
dec
leave
mov
iret
or
cmc
jnp
ret
popf
dec
pop
movsl
loopne
push
fldl
hlt
pop
rol
jle
push
mov
repz
dec
sub
jmp
mov
jo
xlat
cmp
mov
into
pop
lock
movsl
cltd
mov
inc
add
or
imul
inc
cmpsl
jne
testb
stos
pop
and
dec
paddw
mov
repnz
pop
sbbl
int3
test
loop
mov
mov
sub
lret
leave
js
push
add
cmp
jge
jno
mov
pop
or
jmp
xchg
jnp
adc
pop
cltd
mov
shrl
popa
dec
pop
int
in
fyl2x
push
gs
cmp
jne
and
jne
mov
out
ret
push
ja
and
adc
fwait
push
mov
push
adc
out
out
lahf
xchg
pop
or
push
push
popf
jno
jne
or
mov
lahf
lods
fsubp
ds
in
ret
adc
mov
mov
mov
xchg
std
int3
movsb
or
int3
xor
mov
dec
inc
and
add
jo
nop
sub
inc
xchg
xchg
leave
in
imull
js
cmp
add
push
mov
movsb
fdivl
popf
fdivl
aas
xchg
iret
lret
jbe
daa
out
sbb
pop
filds
into
lock
in
insb
or
mov
xchg
push
aad
xchg
and
or
lods
aad
lret
and
imulb
mov
xchg
pop
aaa
jns
sub
scas
push
push
add
les
lods
leave
sub
cmpsl
popa
mov
lock
xchg
sti
aad
dec
xchg
inc
bound
push
jg
dec
in
ds
sbb
aad
sarl
sbb
mov
adc
insl
imul
pop
lret
pop
push
xor
lock
call
rol
cltd
mov
les
loope
fmul
xchg
lahf
ljmp
mov
test
cmp
xor
mov
imul
xor
xor
or
push
adc
and
mov
out
mov
cltd
bound
push
mov
cmpsl
or
xor
and
repz
insl
lock
cwtl
jnp
dec
pop
cmp
stos
cld
add
loop
icebp
je
mov
sbb
inc
scas
ja
or
stos
or
pop
ja
lods
sbb
dec
mov
jecxz
gs
cld
pop
xor
test
jmp
xor
add
lcall
sub
push
cmp
or
jne
cmc
and
dec
gs
sbb
xor
sbb
push
fldl
fldt
ror
mov
add
fistpl
inc
xchg
orl
lret
mov
mov
inc
int
sbb
pop
push
pop
sbb
lret
inc
movsl
out
pop
add
and
xor
pushf
into
fdivl
xor
cmc
cmp
inc
pop
push
and
in
jp
in
movsb
push
shlb
lea
xor
test
and
insl
gs
nop
adc
pop
push
cmpsl
sbb
mov
cmp
jmp
shlb
jecxz
insb
mov
jbe
out
sub
das
xor
cmp
mov
cmp
cmp
jno
dec
and
cmp
adc
or
fisubrl
jb
pop
push
cld
dec
pop
adc
sti
aas
mov
js
aad
arpl
pop
add
repnz
jns
push
sbb
mov
push
cmp
std
jns
add
loope
pop
cmc
dec
popf
adc
ficompl
push
pop
mov
mov
imul
into
jae
scas
test
xchg
rcll
mov
inc
pop
and
outsb
insb
adc
push
loope
lcall
scas
cltd
lahf
jmp
dec
sahf
sbbb
out
push
ja
add
adc
in
mov
adc
int3
and
icebp
inc
mov
pop
jb
or
jge
inc
lret
jge
jle
xorb
sbb
icebp
xor
paddb
xchg
dec
out
inc
jge
jo
sub
pop
mov
lods
or
pushf
in
mov
sahf
sub
or
ret
subl
fisttps
jb
aam
dec
mov
xor
int
xchg
das
jg
stos
loope
lods
mov
dec
test
shlb
cmpsb
scas
mov
test
pushf
movsb
xchg
jno
push
pop
andb
or
mov
inc
loope
inc
mov
insl
pop
mov
lret
cmp
in
lret
xchg
inc
in
sub
fmuls
sahf
sahf
ljmp
aad
inc
and
inc
fsubp
xchg
mov
and
out
cwtl
lods
xor
jmp
shrl
jns
ficomps
mov
xchg
cmpsl
mov
imul
pop
aam
in
mov
out
push
fs
insb
inc
mov
pop
sub
cld
outsb
loope
insl
out
fdivrl
adcl
xor
fsubrs
mov
or
cmp
shrl
dec
xor
jl
arpl
sti
movsl
repnz
test
mov
ret
lods
add
mov
repz
loopne
adc
lret
jne
push
dec
cmp
repz
pop
nop
in
aad
ror
in
jnp
adc
jle
add
dec
test
xor
push
adc
sahf
add
in
clc
xor
call
mov
push
rcrl
out
ret
es
pop
mov
stos
mov
leave
aas
add
jle
rcrl
cmp
cltd
adc
adc
fwait
arpl
xlat
dec
es
or
dec
inc
ja
sub
or
shrb
sub
divb
xor
sub
cli
mov
insb
mov
call
mov
or
test
pop
xorl
push
les
adc
or
adc
pop
rclb
aad
stos
dec
mov
push
jecxz
call
and
push
in
aad
ret
repz
out
fsubl
xchg
shll
jge
fsts
hlt
outsb
lret
mov
mov
mov
and
bound
mov
repnz
adc
add
pop
push
add
les
adc
subb
js
addr16
mov
std
xchg
insb
add
sbb
add
daa
aas
lds
loopne
shlb
dec
stos
adc
aas
sub
xor
sar
mov
scas
cmp
lea
mov
adc
add
jae
fistpll
stos
xchg
xchg
xchg
roll
shrb
scas
mov
arpl
add
dec
cmpsl
in
das
xor
dec
xchg
mov
jnp
jae
xlat
sbb
pop
xchg
xchg
andb
sub
sbb
pop
addr16
jb
dec
cltd
jmp
push
push
fmul
fidivs
jmp
movsb
pusha
orb
sub
cmpsl
cmp
push
clc
xlat
mov
push
mov
icebp
ljmp
aas
ret
mov
scas
icebp
les
ret
xor
mov
idivl
insb
mov
std
movsl
jmp
lahf
rcl
es
jbe
lods
ja
scas
mov
ficompl
mov
push
and
fstps
inc
movsl
adc
mov
push
jbe
stc
and
ret
std
rcll
aad
and
push
je
mov
jns
or
filds
adc
ja
mov
add
testb
cmpsl
jp
loop
adc
pop
int3
mov
or
jp
pop
jle
and
mov
sub
and
xor
inc
adc
jmp
jae
mov
add
shr
sbbb
pop
out
cwtl
pop
pop
test
jne
ret
xor
cld
stos
sub
cmc
insl
adc
ret
mov
arpl
clc
ret
xchg
mul
inc
add
cmpb
push
repz
int
hlt
je
mov
cli
cmp
sub
cld
repz
cmp
xor
mov
mov
inc
xor
mov
lret
fwait
xchg
negl
mov
in
dec
sbb
lea
mov
aam
dec
inc
pop
dec
sbb
bound
sub
pop
je
inc
dec
jbe
sub
add
ljmp
pop
fcoms
outsb
lahf
cwtl
jmp
hlt
inc
loope
or
ja
call
or
mov
outsb
scas
cmp
cmp
inc
ljmp
xor
mov
xor
push
rcll
sub
or
fsub
cmpl
scas
mov
push
aam
aad
xchg
inc
adc
andb
cmp
loop
arpl
pop
pusha
sar
and
add
fcoml
ret
add
xchg
jno
lock
xor
dec
adc
lds
jecxz
xor
cld
neg
pop
hlt
xlat
aaa
lret
jecxz
mov
mov
cs
push
lret
or
daa
adc
shl
mov
mov
outsl
push
lret
lods
push
in
inc
and
jl
add
test
fisubrl
push
repz
inc
jp
xlat
rcll
pop
cmp
dec
aaa
mov
or
fmuls
push
inc
xchg
scas
push
insb
cld
ret
sbb
inc
jecxz
mov
in
ret
push
dec
cmpsb
icebp
pop
lock
sub
push
icebp
ficoml
int
in
xor
repnz
sub
inc
cmp
and
pusha
loopne
mov
rclb
fsubrl
cmp
shlb
call
ljmp
les
sub
nop
imul
inc
cmp
ja
adc
xchg
data16
filds
jmp
mov
int3
dec
outsb
pop
ss
ss
sub
push
push
shlb
dec
shlb
mov
call
cmp
in
inc
int3
jb
cmovl
jnp
cwtd
push
mov
jmp
dec
xchg
pop
mov
aas
fsubrl
push
xor
popa
fistl
imul
roll
and
xor
imul
nop
loope
push
js
sub
push
fadd
inc
mov
jnp
inc
mov
inc
cli
sub
adc
addb
clc
ja
cwtl
cltd
jle
mul
xor
push
xor
cmpsb
pop
stos
insl
xor
dec
mov
in
imul
loopne
adc
xor
or
lea
addb
cld
nop
xlat
cmpsl
lea
pop
sbb
pop
iret
add
notl
dec
xlat
mov
lods
out
adc
mov
and
push
mov
mov
popf
push
xor
jnp
fsub
jno
imul
and
scas
xchg
push
inc
mov
xchg
mov
adc
popl
mov
out
stos
je
push
push
cmp
or
fs
addl
lds
adc
or
cld
and
ljmp
ljmp
jnp
daa
mov
fists
mov
sbb
add
fcomps
mov
mov
push
dec
stos
stos
divb
sbb
rolb
xor
jp
movsl
sarb
jp
pop
sub
add
xor
cmpsb
or
int
push
movq
out
xchg
or
inc
dec
inc
test
scas
pop
cltd
movsl
sub
cmp
mov
popl
cwtl
stos
imul
mov
idivb
dec
sub
in
nop
xor
and
aam
clc
or
scas
push
or
mov
shlb
sahf
hlt
outsl
cmp
mov
ffreep
arpl
push
pop
rcrb
mov
push
adc
and
loopne
jp
das
cmp
mov
lods
jb
mov
fucom
mov
jp
mov
std
push
mov
add
andb
popfw
push
mov
xor
mov
faddl
iret
push
and
std
and
aaa
or
sub
das
push
shr
add
adc
scas
lret
pop
push
jno
mov
adcl
pop
mov
dec
mov
fstl
imul
xchg
mov
xor
pop
pop
sarl
std
lods
ja
test
ja
mov
scas
xchg
test
sbb
outsl
or
sbb
aas
jle
push
lret
btc
lret
loope
daa
enter
out
mov
into
iret
stos
push
rcrw
mov
xor
push
aam
mov
popa
jp
mov
cmpb
dec
pop
into
sbb
xor
out
fiadds
push
adcl
and
call
inc
sub
xchg
cmp
jno
inc
jnp
lock
jb
lods
cmovns
std
in
pop
jl
in
ss
dec
xchg
stos
jno
les
add
xor
sti
leave
pop
sbb
mov
xchg
test
add
daa
fnsave
lods
jnp
cmc
les
adc
cwtl
rcr
ret
popf
mov
jne
push
fs
iret
movsl
dec
pop
inc
pop
push
xchg
rcrb
mov
or
sub
dec
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
icebp
inc
dec
daa
push
mov
push
xor
or
mov
jmp
shlb
sbb
sti
mov
xor
xlat
mov
test
add
xchg
test
pusha
xchg
sbb
sbb
mov
mov
out
and
adc
sahf
dec
shll
xchg
or
mov
push
sbb
in
sub
push
xchg
sbb
sbb
ret
xor
aad
adc
sbb
inc
aas
mov
xor
sbb
or
sbb
faddl
xchg
xchg
cld
idivl
pushf
inc
xchg
scas
dec
cmc
and
fs
cmp
xchg
mov
jg
loop
outsl
mov
adc
xor
or
ss
faddl
mov
dec
xor
cvtps2pi
inc
xor
mov
scas
xchg
add
mov
or
hlt
fstl
popf
sub
add
pop
es
adc
mov
roll
and
adc
out
add
add
adc
loope
mov
rol
sbb
push
leave
adc
lcall
scas
mov
jle
lahf
pushf
dec
add
push
cmp
aam
xchg
in
sbb
mov
mov
jmp
jg
gs
and
aas
mov
mov
pop
cltd
or
cmp
mov
mov
add
sub
sub
fbld
addr16
fistpl
fbld
jo
xchg
push
cmp
or
pop
push
cmp
sahf
mov
mov
sarb
jo
dec
xchg
cmpsb
unpcklps
xor
insb
jbe
mul
xorb
insl
fdivp
adc
cmp
rolb
pop
pop
xchg
add
adc
xchg
stc
aaa
pop
lahf
shll
ljmp
in
adc
test
pop
mov
xor
fsubrs
ja
push
shrl
loope
out
and
movl
mov
cmp
test
in
mov
insl
mov
test
sub
mov
push
dec
ja
adc
adc
and
or
out
into
fninit
xor
aad
mov
or
dec
in
pop
and
add
sub
in
leavew
in
dec
inc
mov
add
add
lds
or
int
mov
inc
out
push
leave
sarb
xor
add
inc
out
jns
test
data16
lret
lahf
test
shl
or
out
ja
in
fdivp
ret
inc
pop
cmp
test
cmpsb
xor
das
fsqrt
or
lret
push
mov
jecxz
cmc
sub
push
adc
add
ret
and
pop
sbb
lret
adc
fmulp
in
pop
shrb
rcrl
pop
add
scas
mov
in
lea
test
jle
or
xchg
lods
es
mov
mov
jmp
in
mov
lret
jbe
fidivs
xchg
loopne
out
xor
in
and
pop
jbe
rol
or
xchg
add
hlt
mov
inc
imul
fstl
mov
or
sbb
movsb
movsb
xchg
nop
sub
test
sbb
imul
fwait
loopne
sarl
cmc
ljmp
data16
cmpsb
adc
ret
mov
stos
xchg
lea
dec
jl
hlt
jo
inc
pop
pop
xchg
pop
xchg
fisubrl
mov
sbb
into
sahf
ret
inc
mov
aas
mov
int3
cs
incb
push
fstl
insb
jmp
pop
sub
movsl
das
sub
xor
cmp
inc
lret
popa
mov
jne
push
fidivs
cs
and
dec
lock
movsb
cwtl
adc
and
push
lfs
sub
imul
cmp
xchg
inc
aad
lea
inc
ljmp
xor
cmc
fsubrs
xchg
push
repnz
or
repz
xchg
xchg
lcall
mov
xchg
in
xorl
inc
xchg
inc
subl
xor
in
lea
int
arpl
test
lret
add
pop
ja
ret
les
jecxz
pushf
or
cmp
pusha
movsl
mov
or
or
pop
pop
jne
addr16
arpl
mov
push
jmp
ret
imul
xor
sahf
int
mov
sub
int
lods
aad
ficomps
je
jns
adc
mov
lock
popf
aad
lods
out
cmp
pop
adc
dec
inc
jl
aad
jge
push
gs
pop
fistps
or
mov
flds
addr16
mov
ljmp
lret
call
mov
les
lds
xchg
ja
or
dec
ret
jp
and
push
out
push
dec
sbb
call
mov
xchg
xor
mov
mov
or
pop
fildl
add
ret
lods
push
dec
push
inc
sahf
andb
push
inc
test
pop
jge
das
ret
add
mov
adc
es
mov
aad
inc
push
jnp
and
push
mov
rorb
out
xorb
das
sub
mov
sbb
aaa
pop
pop
in
test
nop
mov
and
in
dec
out
loope
cmp
lcall
fmuls
sub
push
xchg
adc
aas
ja
test
filds
enter
into
ljmp
je
in
lods
rcll
xlat
dec
xchg
pop
sar
sti
xchg
rcll
stos
or
push
jl
jge
jle
push
test
push
cld
aaa
sbb
cltd
add
in
ret
adc
sbb
fidivrs
push
jge
test
loope
pop
lcall
insl
shll
mov
cmpsb
test
pop
ret
jb
xor
jp
cmp
inc
sbb
mov
fcoms
iret
mov
fstps
mov
inc
push
stc
outsb
mov
cli
dec
imul
leave
inc
mov
xchg
push
mov
and
stc
fmulp
and
flds
push
in
in
outsb
gs
or
push
aaa
daa
rcl
test
inc
push
xchg
or
adc
popf
icebp
aaa
or
test
and
inc
mov
rcl
jnp
lods
mov
lret
mov
xchg
aad
or
sbb
mov
test
add
xor
adc
sbb
aaa
stos
pop
frstor
stos
call
call
ja
xor
repz
divl
bound
hlt
rolb
in
dec
lods
fimull
jg
jmp
and
pop
sarb
push
lods
ficomps
dec
push
lahf
arpl
pop
pop
add
fimull
sub
in
pop
je
stos
sub
cmp
xchg
subb
imul
int3
aas
mov
pop
fadds
or
push
inc
inc
das
mov
cmp
inc
push
ret
mov
xchg
loopne
sarb
cmp
xchg
lcall
icebp
stos
push
add
lock
dec
in
shlb
xchg
dec
xor
stos
adc
and
xchg
jle
mov
scas
in
dec
mov
pop
mov
stos
test
jo
out
dec
call
xor
jmp
pop
push
jae
scas
jb
ret
sbb
insl
adc
adcb
movsl
icebp
adcb
jle
jmp
sahf
test
push
jne
adc
aas
imul
jmp
cli
add
test
or
jns
pop
adc
pop
fdivp
inc
cmpsb
jbe
ficompl
in
push
int3
clc
sbbb
adc
mov
add
daa
jle
mov
push
pop
sbb
js
repnz
mov
mov
pusha
ret
add
xor
lock
mov
aad
adc
add
mov
cmp
and
jp
mov
in
jmp
seta
pushl
not
pop
jmp
lret
cs
imul
int3
insb
insb
jge
xor
lret
xor
and
lods
xor
cmp
repnz
inc
and
sbb
xchg
fisubs
mov
lahf
lahf
rcl
inc
jo
jb
ret
push
mov
mov
jmp
inc
xor
lods
add
fsubs
inc
out
fsubp
movl
jne
lret
or
cmp
inc
xchg
xchg
das
leave
add
pop
fdivrs
xchg
stos
data16
aad
imul
nop
addl
fprem
imul
push
aaa
std
out
sub
xchg
xor
clc
xlat
cwtl
fs
pop
cwtl
cld
dec
aam
insl
fucomp
lret
add
mov
xor
sbb
in
push
pusha
xchg
mov
stos
pushf
jmp
bound
adc
push
cltd
add
test
xchg
data16
sahf
in
fcmovne
cmpsl
push
rolb
gs
dec
je
jo
or
xchg
cmp
call
test
push
cmp
cmp
insl
or
mov
pop
aam
pop
adc
push
jmp
push
inc
dec
xchg
int3
mov
enter
xchg
idivb
lcall
das
call
push
fwait
mov
cmp
int
push
inc
pushf
mov
push
in
int
lret
mov
movsb
mov
lcall
pop
xchg
pop
xchg
lds
cmpl
add
inc
xchg
out
popf
test
clc
mov
sarl
or
jmp
pop
lret
frstor
int
xchg
xchg
and
push
int3
stc
mov
movsl
mov
scas
sub
xchg
das
push
sub
lcall
adc
int3
ret
inc
ja
shlb
push
mov
movsl
xlat
outsl
out
inc
lret
ror
push
jmp
loop
test
lret
and
jne
cltd
pusha
dec
mov
pop
shlb
cmpsl
jmp
lahf
lods
cmp
jecxz
xchg
mov
xchg
and
mov
xchg
cmp
jb
lods
mov
pop
xor
test
adc
rorl
jmp
mov
andl
iret
dec
into
and
mov
fistl
push
dec
push
fisttpll
jno
jg
ja
sbb
push
sub
notl
push
dec
iret
and
xchg
fcmovnb
xchg
xchg
jb
test
mov
or
xor
jae
rep
int
int
sub
je
iret
xchg
inc
inc
xor
add
dec
aad
adc
inc
or
test
pop
xor
mov
stos
mov
cmc
enter
gs
sbb
mov
insb
cmp
mov
in
dec
int3
rclb
pop
mov
dec
sbb
add
int3
stc
lds
fmul
rorl
or
push
adcb
test
jmp
jge
rolb
push
pop
pop
sahf
out
dec
mov
rolb
cli
fdivl
pop
jmp
les
lret
test
sub
xlat
mov
inc
test
cmp
daa
inc
stos
lahf
repz
sbb
sbb
mov
mov
xlat
inc
and
push
bound
sub
es
sbb
fisubl
xor
cmp
adc
xchg
stos
dec
ror
lods
scas
fmuls
pop
cmp
cmc
sub
sbb
pop
inc
inc
cld
lods
dec
push
insl
sbb
mov
test
fidivs
repnz
xchg
fisubs
test
push
push
mov
xchg
les
xor
mov
lock
sub
enter
aaa
inc
mov
aas
aaa
adc
xchg
or
rcll
out
ljmp
sub
dec
mov
divl
mov
ss
jb
cmpsb
adc
sub
in
clc
sbb
bnd
inc
push
pop
stc
mov
add
insb
test
mov
xchg
adc
mov
out
leave
cmc
lods
adc
mov
sahf
lahf
jmp
inc
test
mov
lods
pop
orl
cmp
fnstenv
insl
out
je
mov
fisttpll
push
int
sbb
push
dec
xchg
jmp
imull
dec
xchg
decl
loop
inc
outsb
mov
clc
xchg
dec
sbb
push
loop,pn
stc
cmp
lock
mov
out
mov
imul
ljmp
aas
sub
mov
stc
cmp
leave
inc
cmp
or
push
aam
jbe
cmp
mov
jmp
frstor
lret
or
adc
movsb
xchg
xorl
add
out
insb
and
or
cld
std
mov
sbb
pop
movsl
iret
cwtl
imul
and
sbb
lret
cmpsb
mov
mov
movsb
xor
sub
lret
push
daa
sub
ret
dec
adc
jle
fdivrl
xor
push
mov
repz
verr
scas
jge
inc
push
leave
out
mov
xor
lahf
jo
mov
xor
adc
push
cld
and
mov
test
or
push
fsubrl
test
loope
stc
out
repnz
add
sti
or
stos
enter
inc
mov
mov
into
or
cwtl
ja
jo
arpl
les
mov
outsl
pop
test
fs
sbb
stos
cmc
cmp
jp
test
sub
xchg
hlt
orl
jl
add
cld
sbb
mov
movsl
out
sbb
addr16
jbe
or
call
loopne
ja
ss
jecxz
outsl
das
daa
std
dec
sub
imul
add
jb
sbb
cmp
arpl
cmp
ror
cmp
jp
pop
stos
mov
pop
xor
ficomps
inc
or
testl
mov
test
push
xor
loopne
ret
fstpl
xor
adc
rcrb
mov
and
imull
lods
pop
dec
cld
sbb
push
hlt
mov
sbb
cmp
push
jle
or
fcompl
cmpsb
mov
jp
dec
and
dec
pop
nop
int
sbb
fcmovbe
lahf
flds
icebp
sbb
popf
iret
filds
inc
and
roll
movsl
mov
loop
jle,pn
xchg
push
lods
in
hlt
xchg
ret
add
ret
xchg
jbe
scas
les
and
dec
push
addr16
fisubs
std
lods
call
lds
sub
nop
out
scas
dec
fs
aas
add
and
push
xchg
xchg
std
sbb
dec
fisttpl
lds
cltd
inc
fmuls
cmp
and
xor
aam
pop
add
rcrb
neg
push
addb
push
cmpxchg
sbb
jl
push
nop
or
mov
jo
mov
cmp
insl
mov
push
imul
xchg
or
sbb
and
flds
gs
int3
sbb
push
xchg
cmp
aaa
out
xor
call
xlat
jae
mov
sbbb
xchg
dec
pop
sbb
cs
cmp
pop
mov
adc
fidivrl
mov
mov
mov
test
sbb
cmpsl
push
jbe
es
les
or
arpl
inc
ljmp
test
ss
stos
int
arpl
data16
or
push
sbb
outsb
cmp
adc
stos
hlt
cs
shrl
pop
fcoml
pop
fwait
jae
popa
rorb
loope
xchg
push
sti
sbb
add
loop
fldcw
push
cld
testl
outsl
or
fildl
nop
add
xchg
out
enter
scas
cmpsb
lcall
loope
pop
add
lahf
out
pop
or
subl
and
scas
cmpl
popa
and
into
pop
mov
dec
out
adc
or
pusha
push
jno
in
or
and
sub
xchg
inc
insb
sbb
jae
repz
push
cld
es
pop
xor
int3
cmpsb
mov
cmc
in
pusha
dec
imul
outsb
fidivrl
gs
outsb
jnp
add
pop
lahf
jo
std
loopne
insb
mov
jb
mov
push
push
cs
push
or
xchg
dec
in
stc
in
xchg
enter
fisttpll
scas
pop
push
cmp
jae
lahf
outsb
gs
cmp
inc
daa
aam
jbe
jecxz
lods
scas
dec
imul
inc
jle
cwtl
fsubrs
test
aam
fcoml
cmp
sub
aas
push
push
push
xor
lcall
es
push
dec
inc
nop
loop
pmaddubsw
repz
gs
xchg
inc
lds
dec
mov
je
imul
adc
xor
jge
pop
mov
xor
dec
jecxz
or
add
in
mov
cs
in
sbb
jmp
cmp
mov
jne
ljmp
lods
mov
int
out
inc
pop
xchg
aaa
push
mov
dec
leave
dec
js
mov
pop
shrl
mov
sbb
stos
loope
fdivr
push
out
ss
idivl
xor
adc
and
jae
dec
xchg
jbe
das
xor
nop
sahf
and
jg
fldln2
push
shlb
sahf
adc
xor
and
cmpl
out
add
dec
adc
mov
repz
in
sub
scas
add
mov
push
xchg
xorl
jle
inc
mov
mov
ret
jns
xchg
pop
jbe
pop
popl
jno
sbb
cld
mov
sub
and
aaa
imul
std
sub
inc
adc
jae
lcall
test
xchg
loop
divl
leave
pop
sbb
pushf
sub
test
fistl
jb
out
push
mov
iret
xchg
inc
mov
dec
mov
orl
aad
out
mov
cli
inc
xchg
lret
jle
xor
stos
in
xor
lock
pop
stos
icebp
xor
lock
and
xor
adc
dec
add
inc
ficoml
cs
sbb
test
je
dec
gs
lahf
mov
adc
push
loope
negl
cmp
dec
push
cs
and
fnstcw
repz
sub
outsl
adc
repz
mov
jle
sbb
ja
fcomps
loopne
cmpsb
rcr
dec
add
mov
pop
daa
jecxz
adc
jg
mov
mov
mov
repnz
ret
inc
pop
pop
sub
jecxz
jb
mov
sub
mov
testb
or
ss
rclb
fiadds
pop
dec
adc
repnz
dec
gs
cmp
jnp
or
movsb
mov
mov
dec
into
out
push
or
test
notb
mov
out
sti
out
mov
push
jmp
sbb
imul
dec
jb
jp
jge
pop
insb
aam
xchg
jns
dec
pmulhuw
mov
mov
in
movhps
outsb
jge
fldenv
hlt
daa
sbb
sbb
dec
shrl
push
stos
movups
dec
btsl
popf
clc
xchg
inc
repnz
stc
cmp
loopne
push
sbb
push
sbb
rcr
mov
out
mov
xor
pop
xchg
and
nop
loopne
pop
mov
mov
push
mov
inc
mov
dec
sub
pop
push
push
das
jge
jl
mov
push
push
cmp
int3
jo
xlat
arpl
out
sub
xor
mov
cmpsl
inc
enter
and
outsb
arpl
jmp
cmp
lods
test
or
mov
out
testl
outsb
ljmpw
xchg
fisubl
jne
xlat
push
xchg
mov
movsl
mov
mov
mov
imul
inc
fdiv
push
out
fistps
pusha
movsb
fwait
lock
xchg
xchg
cli
pusha
imul
jno
in
and
xchg
lock
jb
loop
mov
mov
xor
mov
idivb
stc
cmpb
cs
inc
or
ss
jns
mov
movsl
dec
dec
jmp
sub
rcrb
push
arpl
in
mov
shll
add
adc
mov
cld
sub
mov
gs
push
xchg
mov
or
xor
add
movsb
push
jp
sub
mov
mov
push
jecxz
push
xchg
dec
mov
rcr
repz
cmpb
test
sbb
scas
jnp
mov
out
aas
inc
movsl
mov
cmpsl
mov
ljmp
inc
cld
ss
cwtl
pushf
pop
mov
jne
cwtl
adc
ljmp
pushf
or
xchg
add
rcrl
push
xchg
inc
test
pushf
jns
mov
outsb
incb
xchg
or
push
outsb
dec
mov
lock
push
cmp
xchg
rolb
xor
cltd
fidivl
mov
out
aas
addr16
into
pop
pop
sub
sbbb
bound
mov
sbb
mov
inc
mov
mov
adc
mov
mov
lods
in
cld
aam
xchg
into
ss
arpl
icebp
lea
pop
xchg
in
adc
call
cmc
lret
notl
mov
cmpsb
loopne
jle
pop
enter
mov
adc
xchg
sbb
adc
hlt
dec
notl
push
mov
lea
fs
cltd
pop
add
outsl
and
mov
cltd
xor
jbe
vpunpckhbw
psrlw
mov
icebp
mov
sub
nop
and
insl
xor
std
enter
mov
in
and
int3
insl
inc
adc
push
cmpsb
out
and
lcall
inc
int3
lret
roll
int
std
jmp
xchg
push
lret
jae
jbe
leave
xlat
das
push
cmp
imul
je
push
adc
unpcklps
aam
lcall
inc
and
daa
test
xchg
xchg
call
push
enter
fstpt
sub
stos
je
cmp
shll
mov
jae
mov
push
mov
test
sub
aam
sbb
das
shl
addr16
cmp
js
xchg
das
mov
push
or
jle
scas
outsb
fwait
adc
and
mov
jg
mov
mov
mov
jne
hlt
test
sbb
xchg
sub
scas
pop
sbb
mov
push
ret
or
test
push
cmc
movsl
fdivs
mov
push
mov
jmp
sbb
fidivrs
cmp
jmp
jle
xchg
rolb
sahf
lds
test
adc
aam
fcompl
addl
imulb
lods
push
cmp
in
dec
xor
sahf
sub
adc
je
lret
ficoms
loopne
in
jnp
xchg
das
inc
xor
cmpsl
sbb
adc
adc
popf
dec
outsl
inc
adc
inc
mov
mov
fidivrs
cmp
mov
imul
test
xchg
data16
das
sub
popa
mov
push
jns
icebp
subl
outsl
sub
popa
out
cmp
int3
popa
out
lret
push
std
jle
ds
cmc
mov
leave
jl
addb
pop
fmull
pop
decl
lods
fs
or
dec
jnp
xchg
xor
mov
dec
jg
xor
mov
xchg
inc
inc
lds
std
jge
mov
pusha
andb
xor
call
addl
sub
xor
jl
popa
sbb
mov
mov
leave
inc
mov
mov
add
in
cmp
inc
cld
sarl
sbb
mov
push
sub
xchg
hlt
add
addl
mov
mov
sbb
stos
repz
insb
out
pop
inc
and
mov
mov
push
push
push
fldt
scas
aam
pop
pop
test
sub
mov
lcall
lods
and
pop
mov
mov
xchg
adc
sti
or
test
push
outsb
hlt
das
int3
jle
cld
mov
das
mov
mov
aam
stos
pop
push
jmp
cmc
lahf
sti
aas
inc
mov
lds
jecxz
cld
int3
mov
imul
mov
jmp
insb
ss
jg
mov
cs
addr16
mov
xorb
das
test
or
adc
pop
jmp
bound
push
inc
cmp
dec
and
mov
fisubrl
adc
push
or
dec
ficomps
or
mov
cmpsb
cmp
popf
dec
lds
addr16
insl
or
and
pusha
leave
int3
loop
rorb
mov
jl
xor
sbb
ds
cmpsb
pop
iret
in
icebp
and
jg
imul
stc
mull
push
test
xchg
lods
lret
mov
pop
sarb
or
lea
rcll
pop
mov
cwtl
scas
mov
mov
icebp
mov
stc
loop
push
adc
mov
mov
sub
pop
jg
std
push
movsb
mov
gs
inc
fs
mov
or
clc
or
testl
push
and
es
stos
and
mov
adc
mov
pop
std
fcompl
cmp
dec
cmp
and
xor
adc
push
xor
pop
sbb
cs
fadd
push
cs
dec
enter
dec
sub
or
fsubs
aam
cmp
jno
mov
xchg
vmovss
push
popf
filds
mov
dec
jl
ret
xor
xor
mov
mov
insb
jp
std
pop
hlt
jmp
mulb
das
push
bound
lret
or
inc
mov
insl
scas
loopne
mov
sub
xchg
sbb
cmp
repnz
add
rorb
mov
in
jge
push
pop
inc
mov
sbb
xor
sbb
mov
sbb
gs
push
push
mov
jae
and
xchg
rcl
xor
mov
push
xchg
xlat
pop
xor
mov
loope
daa
or
imul
mov
pop
fisttpl
insl
jns
fs
fnstcw
les
popf
cwtl
cmp
or
and
ret
je
inc
bound
rol
xorl
push
jnp
loop
clc
adc
push
repz
popa
inc
pop
hlt
out
lahf
mov
ficompl
fwait
les
arpl
adc
push
cmp
or
dec
pushf
jmp
cmp
cmp
sub
repnz
sub
movsb
cmp
inc
fdivs
add
mov
jo
bswap
inc
scas
dec
call
ss
cld
nop
mov
ljmp
shrb
xor
dec
shll
out
mov
xchg
xchg
shlb
fucomi
outsl
adc
test
and
and
imul
lea
subl
repz
aad
xchg
lcall
je
and
pop
cmp
pop
push
push
push
testl
or
jl
cli
jp
out
push
imul
mov
jge
and
and
ret
mov
movsb
es
jmp
sbb
xchg
push
mov
or
ja
mov
mov
mov
xchg
xchg
jae
aaa
outsb
insl
sbb
movsb
and
mov
sbb
icebp
mov
in
sub
pop
and
mov
loopne
dec
cmp
inc
mov
mov
fildll
aaa
xchg
lret
xorl
loop
jmp
test
or
sahf
imul
mov
jmp
xor
test
or
insb
hlt
and
mov
insl
push
mov
addr16
push
cltd
punpcklbw
adc
and
in
cmpsl
das
jno
xchg
cmc
loop
cmp
jne
je
lret
popf
movsl
inc
jmp
cli
jno
add
push
mov
ret
loope
mov
iret
jp
xor
add
xchg
mov
and
and
cmp
repz
xor
adc
aas
inc
mov
out
test
and
xlat
sub
mov
xchg
push
pop
mov
std
jbe
enter
mov
sbb
pop
dec
push
pusha
mov
mov
sbb
mov
mov
std
testl
fcomp
aaa
mov
jl
icebp
gs
push
inc
call
out
shrb
push
dec
cmp
inc
mov
fs
inc
cmp
and
in
call
xchg
mov
jle
cmp
sbb
lret
neg
cmpsb
mov
mov
add
dec
push
mov
mov
mov
cmp
push
mov
push
sbb
and
jnp
sub
mov
push
pop
outsl
sub
push
or
leave
pop
in
and
daa
inc
stos
fistps
add
sub
mov
xor
das
pop
push
mov
mov
mov
adc
sti
fstpl
jp
jge
sahf
pop
bound
outsb
cmp
aam
test
leave
or
mov
sti
stc
xor
in
cmpsb
scas
popa
add
insb
out
mov
test
add
xor
and
mov
dec
int
pop
jns
pop
mulb
sbb
mov
in
leavew
insb
sub
sbb
jbe
lock
jg
adc
pop
ljmp
mov
fsubrs
push
iret
xor
int3
sti
fimull
jno
xchg
pop
in
xchg
repnz
mov
push
pop
shrl
mov
mov
mov
loop
inc
loop
or
stos
test
subl
push
inc
push
icebp
mov
pop
xor
xchg
insl
push
addr16
jg
adc
push
sbb
shl
push
aaa
xorl
cmp
dec
cmc
testl
jg
sbb
pop
jge
movsl
neg
adc
daa
inc
out
movsb
mov
ss
push
jge
jo
fs
call
outsl
sarl
or
cmp
adc
lret
pop
iret
sub
inc
lods
cs
sti
mov
icebp
test
leave
xchg
stos
add
cmp
xchg
mov
into
leave
or
push
mov
sub
add
enter
inc
vcomiss
rcl
and
cmpsl
mov
pop
xor
sub
cli
mov
push
test
jns
jbe
or
sbb
repnz
push
iret
in
push
pop
add
int
cmp
ja
sub
cmp
jbe
fisubrl
push
loope
nop
push
sub
imul
je
adc
push
cmp
shrl
fdivrs
arpl
or
and
xchg
push
jmp
les
ljmp
sbb
and
dec
mov
inc
bnd
or
shrl
cmpl
outsb
ss
cli
into
sahf
jo
test
pop
cmpl
sbb
imul
leave
rclb
mov
sub
cmp
mov
rcll
mov
aad
jne
insl
pop
and
pop
add
and
pop
add
push
xor
outsl
xlat
and
out
jp
jno
sub
cwtl
push
sub
push
jge
shl
mov
pop
add
pop
dec
xlat
mov
xchg
insl
in
push
bound
shlb
xchg
dec
ficomps
sbb
cmc
push
adc
mov
pusha
test
mov
cmpsb
sbb
mov
loop
mov
lret
jecxz
pusha
out
lret
fisttps
xchg
xchg
push
mov
lahf
into
dec
cmp
into
mov
adc
out
into
jns
pop
and
mov
idivl
test
repnz
add
cmp
dec
sub
jnp
jo
and
dec
cwtl
fldt
jmp
sbbl
rol
push
xor
out
loop
loop
mov
mov
lret
push
jl
cmp
add
mov
out
cltd
fistpl
aaa
mov
pop
daa
inc
test
inc
scas
lret
or
mov
mov
jbe
lods
sbb
les
or
xchg
js
loop
pushf
mov
adc
pop
jo
sub
push
stos
push
push
imul
push
inc
outsb
inc
inc
fldt
iret
add
cs
std
and
mov
fs
add
aad
xchg
ret
pop
mov
cltd
cmp
add
rol
mov
lahf
xchg
xor
movsb
xor
sarl
test
arpl
mov
dec
push
out
dec
stos
test
sbb
pop
mov
pop
adc
mov
sbb
inc
aaa
mov
cltd
mov
stos
xlat
scas
or
mov
pop
mov
mov
and
mov
ficompl
mov
sti
or
aam
cwtl
push
sbb
xor
test
pop
jb
ljmp
imul
xor
fists
or
scas
mov
mov
mov
xor
jb
cli
neg
mov
push
aam
adc
pop
jb
xchg
movsl
and
inc
cmpsb
sub
pop
xchg
js
cld
loopne
jge
popf
add
cmp
sahf
xchg
lods
xorl
add
mov
xor
lods
sahf
add
sti
mov
test
pushf
and
mov
int
inc
xchg
fstps
cmc
xchg
flds
ljmp
js
js
and
push
in
pop
js
dec
push
cmpsb
into
cmp
mov
xchg
and
pusha
xchg
popf
sbb
and
dec
mov
xchg
inc
xlat
jp
jle
cli
ss
xchg
sbb
test
out
sbb
daa
out
leave
pop
dec
cmc
xor
push
push
xor
pop
in
ficomps
inc
and
out
mov
adc
push
outsl
xchg
push
sub
adc
pop
sub
ljmp
lods
or
inc
xor
das
mov
add
xchg
mov
pop
dec
loop
or
adc
test
mov
push
dec
outsb
mov
sub
xor
xor
inc
push
fwait
inc
pop
cmp
push
pop
scas
ja
loope
lret
test
fsubl
mov
mov
sbb
sub
cmp
xor
mov
xchg
in
pop
movsl
push
div
sub
lret
xor
fsubrl
cmp
out
ret
mov
clc
dec
pop
xlat
mov
ja
push
inc
mov
mov
xchg
pusha
inc
daa
aaa
lret
pop
or
mov
push
stos
inc
add
shrb
jbe
add
mov
jmp
ds
or
sahf
inc
mov
mov
out
mov
leave
add
dec
push
js
leave
cmp
inc
push
movsl
lret
mov
mov
add
ja
inc
shll
in
mov
insb
cld
mov
hlt
xchg
mov
inc
imul
lea
pop
stc
or
fwait
div
aad
dec
push
jae
jl
xchg
mov
lods
push
pop
dec
jbe
inc
enter
les
lods
mov
dec
leave
filds
ss
dec
ffreep
enter
push
mov
xor
fwait
mov
or
fstl
mov
sub
jp
mov
sub
mov
jbe
xlat
cwtl
xchg
out
leave
popa
push
adc
sbb
outsb
sbb
arpl
gs
xchg
mov
dec
call
inc
imul
js
cmp
push
imul
inc
adc
inc
jb
out
out
jb
push
scas
mov
stos
inc
push
adc
push
in
mov
jge
jo
arpl
mov
xchg
xchg
push
sbb
push
vmread
or
lret
punpcklwd
jb
subb
adc
mull
dec
fwait
add
cli
or
out
xchg
push
xchg
and
in
int3
push
fs
adc
pusha
sbb
repz
repz
xchg
xor
rolb
push
std
adcb
int
fmul
adc
rcll
data16
jb
xlat
out
mov
cmp
dec
jbe
in
loopne
pop
push
cmpsb
cmp
dec
or
mov
fwait
pop
xchg
cmp
mov
pop
sarl
fnsave
repz
sbb
addr16
cmp
and
mov
movzwl
jecxz
movsl
lret
insb
xchg
ss
jecxz
rolb
leave
roll
inc
outsb
mov
jp
pop
jne
aaa
dec
inc
mov
icebp
sbb
out
ja
imul
repnz
jno
dec
jno
sbb
dec
pusha
jl
loop
dec
fiadds
fistps
xchg
js
push
jb
iret
mov
loop
scas
push
xor
or
mov
fwait
aad
cs
add
mov
imul
data16
in
sti
jnp
mov
pop
sub
stos
dec
add
xor
xchg
leave
pop
out
ljmp
mov
ljmp
sub
jecxz
cmp
out
sub
and
insb
shrb
add
sahf
fs
imul
pop
mov
fidivrl
insb
and
mov
rorl
sub
in
movsl
mov
cmpl
cli
mov
cld
bswap
ljmp
hlt
icebp
jmp
sub
jle
jecxz
xor
sbb
cmp
int3
rcrl
lea
scas
outsb
add
scas
inc
testl
leave
inc
test
imul
jecxz
adc
jecxz
fpatan
jp
xchg
dec
or
andb
outsl
lods
adc
cli
lcall
into
push
cmp
mov
pushf
test
es
clc
bound
call
jno
xor
pop
lds
outsb
scas
repnz
mov
inc
xchg
inc
lcall
outsb
sub
adc
mov
les
jno
and
sahf
loop
movsl
leave
sub
jno
call
popf
outsl
fldenv
add
pop
lret
repz
loopne
fwait
gs
mov
jo
mov
jnp
add
mov
fdiv
sub
sub
xchg
and
ljmp
ljmp
test
sub
data16
xchg
xor
movsl
jp
data16
lds
sub
fiaddl
in
jmp
push
sbb
xor
adc
ja
jbe
mov
jnp
mov
lods
movsl
cs
mov
dec
xchg
ficompl
sbb
jno
and
inc
cmp
jecxz
jmp
outsb
lods
or
pusha
cmp
mov
and
ficoms
pop
inc
push
mov
dec
out
paddusw
add
ljmp
and
jne
or
fstp
int
rolb
or
or
sub
lock
addr16
xchg
insl
lea
or
jns
or
scas
rcrl
and
dec
fdivrl
adc
pop
push
add
mov
inc
xor
insl
pop
cli
xor
or
fsubs
shll
cmp
repnz
ficoml
das
inc
sbb
orb
ljmp
inc
popa
movsb
inc
mov
pop
sbb
mov
das
movsl
mov
jo
and
repnz
out
sub
mov
sub
or
cwtl
test
pop
inc
cld
hlt
or
mov
mov
je
aas
loope
mov
and
sub
xor
mov
inc
adc
packuswb
push
jae
pop
fdiv
and
push
pop
xor
dec
cmp
mov
and
scas
mov
jns
mov
dec
in
jns
mov
pushf
fdivl
rcl
xchg
adc
imul
in
or
xchg
insb
cmp
es
cmpsl
loop
push
cmp
imul
cmp
inc
pop
cmp
lcall
push
movsl
xor
in
push
xchg
sti
sbb
imul
cltd
ss
xor
mov
sub
jns
ror
xchg
xchg
bound
mov
inc
and
or
repz
dec
jae
xlat
in
rcrl
pop
negb
mov
out
movsl
push
cmp
outsb
xor
sub
mov
push
lret
sbb
and
cmpsb
test
fwait
std
aaa
repnz
in
addr16
add
lcall
jl
out
mov
mov
mov
sbb
outsl
push
ret
xlat
mov
dec
jns
mov
pop
pop
cli
xchg
shll
cmp
cli
in
movsl
loopne
xor
lods
mov
pop
mov
in
add
and
jns
lcall
mov
ret
outsb
ljmp
imul
push
lahf
xor
mov
dec
mov
push
scas
repz
call
push
xor
arpl
and
leave
dec
nop
fldt
pop
mov
ret
or
jnp
and
iret
insb
xchg
adc
sub
fisttps
sub
insb
xor
or
mov
add
sub
insl
test
dec
ds
mov
mov
jbe
mov
sti
mov
int3
xchg
cmp
add
loopne
pop
and
cmpsb
fwait
cmp
lcall
xor
fsubl
cwtl
hlt
mov
movsl
add
sbb
mov
int3
in
mov
xchg
jg
dec
adc
push
jns
nop
aad
leave
add
push
inc
mov
pushf
rorb
pop
jns
cmp
push
inc
stos
outsb
inc
aad
and
and
lods
cwtl
int
adc
les
push
dec
cmp
mov
push
fistpl
aaa
add
scas
pop
dec
dec
xchg
cmp
xor
repnz
pop
shll
push
cmp
mov
stos
or
dec
cld
bound
mov
and
fdivp
decl
js
addr16
adc
dec
sbb
jbe
push
inc
inc
arpl
and
addr16
sbb
imul
inc
ret
and
repz
mov
sub
add
and
mov
dec
arpl
lcall
pop
test
sbb
add
sub
aaa
rcrl
push
out
adc
xor
cs
out
cmpsb
fildl
adc
xchg
aaa
fs
dec
lret
insl
xchg
je
xor
or
lock
lods
outsb
sbb
cmc
dec
in
cs
jae
jge
add
repz
xchg
sbb
pop
pop
xchg
adc
and
into
lods
rol
in
sub
imul
in
mov
and
xor
iret
or
jle
push
in
pop
hlt
mov
gs
dec
fiaddl
or
xchg
sbb
and
xor
mov
aaa
scas
jns
sbb
sti
cli
jl
loopne
cmp
pop
mov
dec
sbb
mov
mov
push
xor
loop
bound
sbb
and
into
xlat
popa
mov
lea
repz
cmc
testb
xor
cld
adc
fcomps
pop
xor
mov
test
jl
mov
pusha
bound
in
sbb
cli
push
push
jle
inc
add
inc
lods
arpl
mov
sub
dec
flds
pop
jbe
sti
jnp
sub
xchg
mov
rcrl
bt
dec
leave
push
mov
fs
shrb
or
jnp
mov
cmp
mov
or
xchg
pusha
jne
fnsave
lret
or
mov
aas
notl
leave
mov
sbb
pusha
pop
jg
lret
sub
mov
dec
pushf
cltd
loope
mov
dec
xchg
mov
mov
je
jmp
jge
add
jecxz
and
sarl
dec
lcall
cltd
hlt
js
into
sub
or
sti
clc
shrb
mov
and
and
xor
jns
add
mov
outsl
jl
sub
repz
in
pop
sbb
ds
jns
jnp
clc
push
sbb
adc
mov
sub
xchg
adc
daa
test
mov
sub
adc
cli
jg
insb
idivb
jmp
or
aaa
sbb
push
and
mov
add
rorb
gs
and
roll
dec
leave
jp
cmpsl
fadds
xor
xchg
push
idivl
adc
fxch
or
xor
xor
call
fsts
test
js
into
jno
jbe
lds
pushf
enter
faddp
xchg
jle,pt
shlb
push
pop
out
aad
aas
imul
mov
sti
mov
push
pop
pop
scas
push
or
push
pop
mov
fisttpl
jle
jae
sbb
xchg
nop
call
shl
sub
mov
add
sub
into
ss
pop
icebp
push
fstl
loope
dec
adc
nop
inc
or
leave
ja
xor
sbbb
pop
lea
in
int
push
mov
sub
pop
push
push
idivl
pusha
mov
and
sbbl
dec
cmpsl
aaa
pop
aam
fildll
imul
jb
push
test
adc
and
fs
iret
dec
ret
cmp
push
adc
pusha
fisubl
jnp
mov
jg
mov
leave
push
push
jbe
cwtl
cmpsl
mov
inc
jmp
mov
loopne
int3
mov
mov
add
daa
jne
fldlg2
push
jl
cld
xchg
xor
cmp
mov
pop
pushf
xchg
jae
das
clc
add
fs
add
fwait
shl
push
and
inc
cmc
mov
mov
cmpsb
add
mov
cmpsb
cmp
mov
mov
cwtl
and
mov
out
cmp
cmpsb
or
xchg
ljmp
inc
sub
xchg
mov
mov
mov
or
lret
add
add
mov
iret
fisubrl
sahf
outsl
mov
notb
repz
fnstcw
repnz
and
std
iret
or
cmp
mov
pop
mov
lcall
cmp
lahf
add
mov
inc
push
lret
and
insb
nop
cltd
pop
lods
out
inc
icebp
mov
test
test
cli
cmpsl
popf
cli
cmp
leave
dec
or
pop
ficoml
mov
mov
sti
mov
mov
mov
sti
stos
out
lahf
ficomps
pop
push
pmaxsw
or
push
pop
lret
mov
ret
xor
loop
in
scas
popa
push
mov
mov
popa
scas
mov
sbb
or
and
scas
pop
mov
pop
je
fwait
movsl
lds
std
in
pusha
cmp
andl
jecxz
sub
andb
stos
mov
push
sub
unpcklps
shll
lods
dec
imul
jg
sbb
inc
inc
jnp
pop
fwait
arpl
stos
jp
fs
addb
ret
fisttps
sahf
dec
jecxz
mov
loopne
sbb
rorl
sti
cmpsb
or
sbb
pop
mov
jns
mov
fadd
pop
xabort
push
bound
dec
ljmp
xchg
loope
pop
pop
xchg
ss
repz
ljmp
sub
jp
data16
cmp
cmpsb
cwtl
adc
into
cmc
mov
mov
cs
jo
xchg
ja
inc
mov
loope
loope
addb
repnz
jl
pop
pop
lock
pushf
les
fisubrl
sub
das
jg
aam
dec
mov
adc
mov
mov
cmp
xor
xchg
inc
test
xchg
movsb
daa
repnz
sbb
push
lret
mov
adc
sbb
cmc
push
push
inc
mov
mov
fwait
pop
fistpll
xor
fwait
es
lods
ficoml
lds
enter
xor
mov
out
cltd
sub
xlat
das
xchg
cs
cld
repz
or
cmp
outsb
stc
fwait
scas
cmc
cs
sbb
stos
in
ljmp
xlat
jmp
cmpsl
mov
and
push
inc
sbb
inc
push
xchg
sbb
adc
data16
dec
fisubrl
add
mov
xor
sti
lret
lock
loop
sub
and
scas
mov
adc
jno
mov
dec
das
jmp
pop
out
movsl
pop
shlb
movsb
mov
push
movsl
jge
bound
stos
push
imul
pop
loope
mov
sub
adc
inc
iret
pop
cld
pop
inc
mov
test
enter
dec
mov
mov
pop
test
call
or
fldl
mov
jecxz
jmp
or
cmp
jmp
rol
pop
add
mov
dec
ss
in
aam
pop
add
dec
dec
cmc
pop
push
jecxz
rcll
pusha
clc
dec
pop
mov
sub
or
mov
and
cwtl
stc
xlat
mov
push
in
dec
mov
cmp
out
mov
sahf
pusha
arpl
mov
arpl
sbb
or
int
and
jmp
adc
cltd
ljmp
pop
int3
inc
mov
lds
subl
or
mov
icebp
out
add
lds
pop
push
and
dec
lods
std
push
mov
repnz
lods
xorb
pop
mov
cmpsb
cmp
jp
or
jmp
sbb
cmp
imul
lcall
fcompl
xor
push
add
std
xchg
pop
pop
movsl
icebp
outsb
stos
xchg
push
stc
sbb
js
loopne
rorb
xchg
push
jb
imul
add
mov
xor
shlb
andl
cmc
and
xor
and
stc
test
jb
ficoms
add
inc
movsl
dec
std
cmpsl
pushf
adc
push
ljmp
cmp
push
std
ret
popa
in
adc
xor
out
and
stos
jmp
bound
add
std
lahf
add
xlat
xchg
aaa
out
das
lret
xchg
movsb
movb
sahf
mov
ss
mov
les
cld
pop
xor
mov
sub
fidivrl
es
push
push
es
fcmovbe
imull
jo
pop
cmpb
push
lods
sbb
es
test
arpl
mov
mov
pop
adc
hlt
dec
inc
sbb
das
sbb
xor
inc
aaa
xor
sbb
inc
dec
into
cmc
lock
dec
inc
lods
lock
sti
jo
xchg
test
mov
outsb
ficoms
out
cltd
pusha
adcb
push
mov
push
inc
stos
movsb
stos
vmovdqu
xchg
lods
push
jb
mov
je
icebp
cmc
fcmovnbe
or
cmpb
cmpsl
sbb
into
cmp
sub
inc
sub
adc
enter
in
lea
nop
insl
pop
ffreep
fst
mov
lcall
orb
stc
pop
fists
cmpsl
pop
lea
fs
rcrb
or
lock
lahf
xchg
push
push
adc
cli
dec
push
push
mov
cmc
and
push
les
sbb
mov
mov
ret
add
sbb
push
mov
push
jno
mov
mov
insl
in
pop
jb
mov
push
xor
icebp
pop
add
inc
mov
pusha
mov
mov
adc
fadds
shll
cmpsl
add
shl
xchg
jne
mov
inc
gs
mov
mov
or
cld
ss
mov
push
jnp
arpl
lock
movsl
or
fsubrl
cld
adc
inc
fwait
scas
dec
lods
or
sbb
fsubl
sbb
push
jge
mov
pop
pop
mov
or
sti
ljmp
int
gs
imul
or
or
loop
arpl
sahf
xor
cs
jg
pop
xchg
sar
push
fadds
movsl
pop
inc
dec
shll
stc
pop
adc
pop
sub
lcall
test
dec
xor
lret
pop
not
pop
mov
outsb
lcall
jns
shlb
xor
inc
dec
sbb
jbe
inc
mov
shl
sub
jb
jmp
rclb
lcallw
insl
in
sbb
push
repnz
or
cmpsl
jmp
jae
jl
mov
add
mov
inc
cmp
xchg
mov
adc
out
scas
out
mov
xchg
test
xor
callw
cmp
xchg
rcrl
mov
lahf
dec
or
dec
addb
xlat
dec
sbbl
repz
movsb
sub
jge
cmp
cwtl
lea
loope
out
clc
dec
mov
popf
inc
adc
xchg
pop
repnz
fsubrl
fidivl
and
adc
jmp
xor
cmpsl
test
jbe
loope
push
push
cmp
mov
mov
mov
scas
or
adc
je
test
sub
shl
sbb
mov
leave
int3
pop
or
shll
fiadds
dec
push
xor
xchg
ja
out
xorl
cmp
xor
pop
mov
test
or
aam
sahf
aaa
lods
outsl
scas
mov
mov
repnz
jl
movsl
xchg
mov
pop
add
scas
jge
fcmovne
push
mov
pop
add
lods
mov
xchg
lods
repnz
outsl
outsl
push
ljmp
pop
fisttps
pop
xchg
inc
jp
orl
cmp
fisubrs
popl
cmp
adc
xor
icebp
push
and
add
test
xor
mov
sbb
orb
pop
lods
dec
push
mov
dec
push
xchg
std
pop
and
adcl
dec
or
cmc
xchg
mov
out
out
in
movsl
xor
movsb
adc
mov
stc
iret
pop
nop
add
arpl
jmp
mov
add
gs
std
arpl
ss
jns
jb
rolb
adc
stos
hlt
outsl
ret
sbb
add
and
ss
xlat
aad
mov
leave
jecxz
and
popf
popf
aas
aam
lock
xor
test
jge
ret
cmp
jb
sarl
mov
xor
pushf
leave
dec
xor
loope
sahf
popl
pop
adc
inc
and
inc
and
js
divl
fcom
pop
into
dec
inc
pop
repnz
add
mov
subb
stc
push
dec
inc
dec
push
cmpsb
rorl
fcmovnb
loope
sbb
pop
roll
call
mov
cmpsl
add
ret
mov
arpl
fadds
mov
lret
sahf
or
xor
mov
popf
in
cmp
push
fdivrl
out
cs
cmp
shrb
rcl
sub
cmpsl
mov
mov
out
aaa
jno
inc
sub
incl
push
test
enter
aad
cmp
mov
cmp
xchg
push
ficoms
arpl
mov
fs
push
cltd
lock
xor
adc
mov
sub
cwtl
fadds
mov
aaa
je
movsl
push
pop
out
pop
mov
mov
add
stos
add
jne
jae
dec
stc
mov
arpl
in
repz
push
mov
jae
adc
clc
xchg
stos
aad
aas
xor
pusha
cmp
sub
jecxz
inc
sti
test
imull
mov
xor
scas
pop
and
insl
lahf
or
lds
outsb
enter
cmpsb
ret
dec
call
jae
mov
stos
fists
popa
sub
fdivrp
ret
inc
push
sub
out
in
lock
cs
mov
mov
int3
xor
pinsrw
lret
jl
dec
test
add
sub
push
mov
mov
movsl
push
std
push
cmp
std
sahf
popa
es
pmuludq
imul
xor
loopne
push
sub
mull
scas
push
daa
xchg
movsl
fsts
adc
add
xchg
ss
jns
dec
inc
mov
lret
imul
mov
cmp
inc
pop
fs
xchg
mov
pop
jge
add
pop
xchg
adc
data16
xchg
jbe
dec
std
ljmp
cmpb
fidivl
daa
or
jb
inc
mov
rorb
add
hlt
lods
test
icebp
cmpb
push
pop
out
or
sub
scas
and
into
ficomps
jnp
outsb
mov
xchg
cmpsl
pop
fsubr
leave
int3
cmp
lds
dec
xchg
adc
das
xchg
add
mov
out
popl
sbb
push
jmp
xlat
xor
mov
movsl
cmp
xchg
mov
adc
stos
popf
mov
push
jnp
pop
adcl
and
out
pop
adc
sbb
popa
scas
mov
pop
out
cmp
aaa
jne,pn
out
mov
scas
shlb
push
mov
xor
and
insb
repz
sbb
inc
mov
sub
iret
scas
out
add
sarb
sub
aaa
adc
gs
jb
push
push
push
mov
data16
test
cmp
lock
push
les
dec
adc
fs
xchg
ds
mov
adc
pop
push
ret
call
popf
std
push
flds
loop
ja
or
adc
mov
cmpsb
incl
push
mov
scas
dec
jnp
dec
xchg
les
ja
outsb
pop
cld
cld
test
xchg
idiv
lahf
subl
pop
lods
or
fsts
repz
xchg
aam
sbb
das
fcoml
imull
ret
mov
loopne
ljmp
les
add
lods
dec
testl
repz
cmpsl
cmpl
xor
mov
mov
inc
lods
iret
push
sbb
pop
fwait
jbe
mov
scas
sub
push
das
push
mov
pop
addl
in
in
inc
cwtl
je
fdivrl
inc
cltd
cmp
sbb
push
push
iret
test
sar
data16
in
or
scas
fadd
or
movsb
shl
rcrb
push
push
aaa
jmp
jo
adc
adc
xchg
in
and
fwait
inc
pop
push
jmp
nop
dec
cmp
imul
sbb
cwtl
xor
fnstcw
aad
gs
jg
ds
mov
nop
imul
mov
daa
andl
jecxz
or
push
movsl
mov
shlb
addl
push
mov
fstpt
pusha
test
nop
aaa
adc
es
jno
xlat
mov
dec
sbb
jmp
cmpsl
push
jmp
enter
push
aad
or
shrb
dec
xor
lret
sti
clc
data16
mov
push
out
outsl
push
mov
and
jmp
icebp
outsb
and
in
loopne
rol
jecxz
idivl
iret
sub
xchg
xchg
subl
xchg
mov
sbb
sub
inc
fcomip
dec
adc
cld
cld
dec
mull
out
std
mov
icebp
addr16
arpl
mov
adc
shlb
sub
rcrb
mov
cmpsl
xlat
adcb
outsl
in
test
incb
push
lock
in
sbb
push
icebp
mov
xor
outsl
mov
adc
push
mov
loop
cs
in
lods
ss
adc
icebp
cmp
xchg
and
mov
xor
not
pop
fdivs
in
xchg
test
mov
mov
adc
adc
les
mov
int3
iret
stos
lcall
add
fistl
addr16
sub
into
fmuls
pusha
lret
in
nop
jo
out
fs
push
push
and
cltd
sub
mov
cld
sbb
push
ds
dec
inc
pop
pop
scas
mov
cmp
psllq
jnp
inc
insb
popa
xor
inc
add
sbb
rcrb
leave
sbb
sbb
and
leave
push
adc
out
jb
mov
pop
fists
out
xchg
mov
sub
or
xor
lcall
xchg
sub
int
push
imulb
jecxz
xor
push
lods
or
xlat
roll
js
add
cwtl
and
cmp
loope
inc
sbbb
fcmove
add
pop
jns
dec
fistpl
mov
sub
add
pop
mov
jmp
xchg
mov
adc
ret
loope
jns
mov
mov
sbb
push
jnp
inc
lea
jp
test
fstpl
or
popa
fucom
stos
leave
repnz
imul
pandn
loop
cmp
jmp
fldl
lock
push
xchg
imul
inc
add
dec
mov
sbb
mov
cli
mov
and
lea
lcall
pop
gs
ljmp
jb
mov
cmp
movsb
adc
inc
aam
ljmp
xchg
inc
jle
pop
pop
pop
flds
pop
insb
adc
fwait
mov
jecxz
adc
mov
cmpsb
inc
pop
das
test
daa
inc
jle
pop
mov
insl
aad
js
mov
fistps
jecxz
aaa
mov
out
add
sub
and
dec
lahf
cmpsb
rcl
lahf
daa
inc
xor
outsb
push
mov
lds
mov
and
mov
xchg
sbb
jae
in
sbb
jbe
jns
hlt
add
movsl
or
push
push
xor
dec
je
lret
pop
cmp
mov
xor
pop
xchg
jl
cmp
xchg
lret
fidivl
and
rclb
mov
pop
into
sub
add
hlt
iret
leave
enter
dec
sub
sbb
lret
jb
xchg
xor
scas
mov
fimull
or
outsb
mov
add
xchg
pushf
cld
xchg
add
mov
stos
scas
cmpsl
fists
adc
and
adc
test
notb
xchg
mov
fxam
mov
mov
push
jl
and
lods
mov
xor
lea
pop
cmp
pop
aam
push
jmp
movsb
add
cli
pop
xor
xchg
lahf
es
jo
mov
cmp
xor
pushf
pop
xor
adc
dec
mov
lods
push
add
add
aaa
push
cmc
bound
ljmp
dec
adc
sub
add
push
in
movsb
cli
movsb
pushl
cmp
xor
inc
pop
cmp
inc
adc
and
test
sub
push
cmpsb
cld
fbstp
orb
dec
out
add
cmp
call
inc
movsl
xchg
mov
push
inc
mov
dec
cmc
cmp
cmp
adc
enter
or
iret
test
add
adcb
leave
cmc
loope
movsb
cwtl
inc
out
mov
adc
rcrb
xchg
scas
mov
mov
xchg
mov
ss
pop
lret
add
or
or
scas
ret
movsl
sbb
push
mov
mov
cmpl
xor
adc
movsl
lcall
fsubs
outsl
mov
and
xor
cmc
inc
scas
aam
sbb
xchg
inc
fstpt
mov
or
add
pushf
mov
or
les
sbb
enter
pushf
mov
cmpsl
push
sbb
ret
dec
add
and
ja
jne
adc
pushf
testl
and
lahf
push
mov
aam
stos
adc
daa
jo
das
fwait
xchg
jl
je
push
out
mov
int
dec
mov
sub
popa
enter
xchg
adc
int
in
std
rcrb
lahf
cmc
and
stos
pop
adc
out
aam
jae
nop
in
les
xchg
icebp
pop
out
movsl
loope
fcoml
pop
out
cld
ja
inc
jne
fwait
rol
int3
sub
push
inc
mov
and
and
int
sbbb
and
cmp
adc
not
inc
nop
je
adc
or
loop
xchg
mov
cmc
mov
iret
clc
insl
lret
movsb
dec
adc
icebp
mov
scas
jo
popf
popa
jns
adc
xor
cli
mov
xchg
sti
inc
add
xor
push
in
inc
push
cmp
test
push
mov
push
mov
inc
cli
pop
xlat
cld
aaa
leave
fdivrp
push
mov
repz
in
movsb
xor
and
sub
cli
inc
mull
out
sarb
dec
fisttpll
add
xlat
pushf
andb
xchg
xchg
pop
in
cwtl
mov
cmpsb
idivl
rcrb
rorb
mov
scas
xor
int
fisttpl
aaa
nop
daa
push
push
and
cli
call
jl
sti
adc
pop
adc
mov
out
test
je
mov
inc
rclb
xchg
xor
call
sti
loopne
mov
cmpsb
mov
out
rcrb
lods
xchg
aas
movntq
xchg
js
jae
hlt
add
pusha
cmp
mov
ret
push
mov
js
int
or
fsubr
adc
xchg
xchg
cmp
cmp
and
push
xor
inc
adc
inc
es
mov
and
fsubp
sbb
xchg
mov
mov
stos
loopne
ret
cmc
lods
mov
out
movsb
loopne
mov
inc
cmp
call
cwtl
fisubrs
cmpsb
out
xor
xchg
jnp
pusha
and
test
adc
outsb
push
jb
pop
cmpsl
push
dec
xchg
shr
and
sets
mov
js
mov
push
adc
lods
sar
sub
xchg
push
mov
test
ss
lret
rcrb
lcall
repnz
notb
push
adc
cmp
mov
adc
jb
jmp
call
outsl
xor
sub
or
ljmp
loop
cltd
or
stos
out
sbbb
mov
int3
mov
jbe
sbb
add
ret
pop
ret
inc
mov
mov
push
jmp
jbe
fs
ja
es
dec
mov
and
loopne
cmp
mov
cmp
lock
mov
rolb
fcmovb
adc
mov
ret
in
test
mov
push
into
cmp
and
cmc
sbb
adc
lahf
dec
and
mov
daa
xor
pop
shl
lcall
xor
pop
cmpsb
mov
in
std
addr16
xor
xchg
inc
out
dec
lods
adc
adc
push
mov
faddl
fiaddl
ret
xor
mov
add
fildl
imul
sub
adc
jp
scas
orl
jb
dec
mov
loope
mov
push
repnz
pop
rcll
mov
add
mov
incb
imul
stos
mov
jbe
dec
insb
xor
push
sbb
mov
xchg
ja
dec
inc
clc
sbb
jnp
dec
mov
mov
sbb
xchg
sub
jo
push
loop
std
lods
jle
lcall
mov
stos
xchg
mov
cmpsl
or
jge
flds
fcomp
pop
cmc
testb
add
pop
insb
rorb
xchg
lods
cld
push
pop
pop
popa
stos
xchg
test
sahf
and
sub
addb
mulb
aam
loop
mov
ljmp
addr16
std
push
out
inc
mov
mov
jecxz
fists
mov
popa
mov
xor
lea
pop
sbb
jecxz
scas
and
gs
xchg
cmp
jl
scas
xchg
stos
cmp
inc
pusha
out
fimuls
nop
fwait
sub
jmp
and
popf
stos
leave
pop
cld
xor
dec
stos
fisubrs
icebp
jo
pop
inc
aas
adc
sti
and
sbb
daa
rcr
fnsave
imul
sbb
push
cmc
filds
aaa
in
aad
cltd
lret
mov
jbe
pop
rdmsr
fcomps
inc
movsl
xchg
mov
idivl
xor
adc
add
scas
jo
leave
pop
xor
arpl
mov
aad
shlb
idivb
and
jmp
fsubl
push
nop
sti
fstpl
mov
iret
jl
imul
rcrb
shll
push
pushf
inc
cmp
cmp
out
je
mov
test
push
cmp
or
dec
dec
xor
cli
and
or
cmp
jns
add
in
lods
pop
or
lods
lds
jns
push
fs
addl
xchg
jg
call
loop
cld
shr
adc
repnz
pushf
iret
fldenv
outsl
jno
cltd
pusha
rclb
mov
out
sub
cli
push
outsb
js
shlb
add
inc
in
dec
push
shll
lea
fprem
inc
dec
sbb
xchg
scas
or
notb
stc
jl
pop
sbbl
shll
or
push
popa
push
lcall
shl
xor
xchg
leave
in
int3
add
jmp
mov
lcall
mov
pop
fwait
sbbl
in
pop
push
mov
mov
ror
iret
inc
sbbl
lock
stos
xlat
jnp
js
ficompl
and
xchg
xchg
push
dec
dec
int
ds
mov
icebp
clc
cmpb
lret
test
les
jg
push
outsb
imul
pop
in
cmp
out
pop
cmp
xchg
scas
popf
ds
ds
or
jnp
out
adc
dec
lret
les
or
rclb
xor
xchg
stc
nop
push
pop
mov
lods
and
addr16
fidivrl
push
sub
je
cmpsl
andl
mov
sub
nop
pop
cmpsb
mov
cli
je
mov
xor
mov
mov
into
cld
mov
shrl
mov
test
dec
mov
push
aam
loop
inc
enter
cli
push
sub
and
int
outsl
mov
enter
push
insl
outsl
mov
or
dec
or
sub
lcall
sub
pop
push
lea
push
xchg
leave
loop
in
pusha
adc
xor
sub
inc
js
movsb
andl
mov
mov
loopne
cmpsb
sbb
notb
lret
pop
jb
scas
repnz
cmpsb
jecxz
ret
xor
fisubs
std
mov
add
sbb
int
cmc
sub
inc
sbb
lock
cwtl
shr
fnstcw
insl
loop
test
and
adc
aam
cmc
lahf
iret
data16
dec
loopne
pop
cs
rcl
es
dec
sahf
xor
xchg
pusha
adc
push
jo
dec
sahf
pusha
lods
push
adc
push
mov
in
mov
pushf
jle
out
mov
add
stos
jnp
add
sti
mov
push
and
jbe
repz
aam
icebp
jl
xchg
stc
pusha
push
pop
pop
aam
faddl
fcmovb
xor
int
shlb
xchg
push
jbe
decl
cld
insl
dec
inc
mov
xchg
adc
pop
int
xlat
mov
mov
pushl
es
jbe
ja
xchg
dec
cltd
or
or
movsb
jp
push
ret
or
jae
popa
push
cltd
lret
and
mov
pop
xchg
fbld
testb
mov
data16
mov
in
bound
mov
test
sbbb
adc
pushf
stos
jg
xor
popf
cli
fidivs
add
int3
sahf
rol
das
push
mov
enter
cwtl
mov
mov
xor
cmpsl
pop
pop
sarb
lahf
mull
cmpsb
mov
push
add
int3
lahf
lret
dec
xchg
ds
rorl
mov
loope
jno
ret
into
adc
stc
inc
fdivrl
cmp
xor
sub
mov
push
add
sub
jg
jae
xchg
dec
js
imul
gs
add
sub
aad
out
sbb
sahf
dec
in
lea
fisttpl
push
push
add
pop
mov
clc
pop
pop
lahf
adc
lods
dec
aam
fimuls
popf
mov
and
mov
std
das
sbb
movsl
or
rol
add
inc
test
mov
dec
mov
stos
or
jmp
push
movsb
into
push
xor
inc
push
setne
pop
out
pop
push
pushf
mov
push
mov
pop
jmp
insl
jecxz
push
pushf
mov
rcrl
repnz
xchg
push
mov
mov
sarb
jge
int
inc
lods
sahf
shlb
jnp
xchg
movsl
xor
push
imul
inc
jbe
cld
fiaddl
push
gs
into
add
mov
or
xor
mov
rcll
out
in
das
outsb
push
pop
daa
sub
jle
sbb
aaa
out
clc
dec
imul
test
push
inc
xlat
aam
cmp
xor
nop
shr
pop
mov
mov
imul
lcall
aas
popf
jo
jne
cmp
ljmp
mov
xchg
sub
fdivrs
or
and
cmpsb
mov
xchg
mov
aad
clc
daa
jno
mov
jno
or
pop
test
aaa
imul
je
add
fdiv
imul
int
jns
out
ja
call
orw
dec
rorl
imul
inc
inc
mov
add
jbe
int3
lret
bswap
stos
jp
cmpsl
imul
cld
mov
inc
fstps
fwait
adc
adc
mov
push
jecxz
cmp
push
cmpb
adc
xchg
or
mov
sahf
stc
push
mov
sar
adc
loopne
xchg
popf
iret
or
inc
aad
pusha
adc
dec
mov
xchg
in
aad
je
dec
cwtl
jo
pop
std
jbe
aad
test
ret
int
inc
and
mov
pop
mov
or
push
xchg
and
insl
sbb
sbb
sub
or
xchg
push
xor
and
pop
loop
ret
je
hlt
dec
vpavgb
sbb
xor
push
sub
mov
in
xchg
mov
subb
div
mov
adc
xor
bnd
add
int
mov
xchg
aas
mov
adc
sarl
mov
xchg
mov
sub
repnz
test
into
push
jne
push
inc
lcall
adcl
add
pop
sub
loop
jno
popf
adc
sahf
xchg
mov
push
in
cwtl
test
movsl
dec
lock
enter
pop
or
inc
out
cmp
inc
lock
push
sub
pop
mov
fidivrs
push
test
gs
cmpsl
mov
out
sub
xchg
je
inc
xchg
pop
or
sarl
jg
filds
lds
cmp
aad
push
les
popf
dec
dec
rclb
add
imul
sbb
pop
pop
mov
cmp
in
aas
in
shrl
mov
or
mov
sub
aad
sbb
rcll
pop
gs
fst
fcomps
inc
aaa
iret
or
add
dec
data16
or
and
cmp
outsl
push
inc
in
sub
sbb
xlat
leave
sbb
ret
repz
test
lcall
lret
aad
stos
scas
fdivs
int3
lds
cmc
test
and
les
aaa
push
cli
cmpsb
inc
jae
sbb
xchg
rclb
mov
in
xor
mov
pop
inc
jno
push
fxch
cmp
or
sbb
jecxz
std
lock
pop
add
pop
popa
ret
in
scas
test
and
out
dec
shr
add
mov
inc
add
outsl
lock
pop
mov
add
fcoml
add
push
adc
add
pop
dec
cmpsb
push
psubsb
seta
jp
sahf
and
mov
insb
mov
sbb
gs
sub
pop
nop
cmp
arpl
loope
dec
fwait
stos
xor
fisttps
sti
ds
pushf
add
push
and
fsubrs
inc
push
lods
lret
mov
test
imul
xchg
roll
int
sbb
inc
jmp
and
or
and
dec
fcompl
arpl
jl
jo
enter
mov
add
lds
int
add
or
dec
mov
mov
cmpsl
cmp
insb
dec
lret
inc
dec
xor
add
push
inc
test
mov
xor
call
xchg
leave
add
fnsave
scas
repnz
cmp
mov
mov
fwait
sub
and
sbb
fs
xchg
idivb
es
test
sbb
pop
jne
shlb
or
adc
out
adc
sub
cmp
mov
cmp
stc
cs
repnz
outsl
popf
pop
fiadds
xchg
pop
xor
adc
xchg
and
or
or
mov
sbb
cmp
aam
loope
sub
pop
or
inc
xor
cld
or
and
push
mov
inc
in
sahf
push
ja
fisubrl
mov
xchg
imul
jo
xchg
jo
stos
cmp
rorb
push
repz
adc
pop
into
fisubl
sti
in
inc
xchg
aam
or
in
jp
jbe
push
mov
cmpb
cmpsl
out
negb
rclb
repz
jg
sahf
addr16
inc
mov
out
fcmovnbe
mov
lret
fsts
in
ret
mov
push
mov
call
rolb
jns
cmpsl
xchg
and
stc
push
aam
push
xchg
inc
aas
lea
adc
or
call
xchg
out
sbb
and
push
push
or
xor
icebp
dec
jl
fidivrl
ror
mov
xchg
sbbl
dec
inc
mov
scas
push
xor
dec
inc
cltd
mov
mov
shrb
hlt
aad
leave
sub
in
ljmp
and
cs
jns
stos
cwtl
aad
cwtl
fnstcw
inc
push
and
jns
and
es
stos
mov
and
lret
inc
pop
xchg
jge
xor
dec
lret
sbb
adc
nop
mov
and
push
push
test
stos
loopne
aad
and
lret
pop
mov
adc
ffree
push
xorb
out
andl
insl
mov
jnp
std
aam
jl
neg
ja
scas
dec
or
sbb
jo
ds
mov
push
jno
xor
push
add
int
fisttps
jle
inc
ljmp
mov
aaa
stos
in
outsl
add
iret
pop
andl
adcl
or
sbb
add
inc
pushf
mov
dec
imul
mov
sbb
inc
testb
push
hlt
add
or
repz
pop
imul
and
scas
adc
push
or
xchg
scas
push
pop
xor
jecxz
xor
sub
test
cmpb
mov
cmp
add
rolb
jbe
imul
mov
pushf
mov
es
jmp
dec
pushl
out
adc
push
in
scas
sbb
das
sub
shlb
out
arpl
xor
xchg
dec
jecxz
aas
cmpsl
lods
and
sbb
or
call
sub
jge
hlt
and
jecxz
fists
xchg
jmp
out
mov
pop
and
push
and
imul
call
lods
cmpsb
xor
adc
mov
add
jbe
outsb
je
mov
stos
popf
xchg
xchg
test
and
mov
push
cmp
jns
mov
cltd
mov
loopne
dec
add
push
test
pop
mov
push
mov
jae
subl
sar
ret
cwtl
or
test
out
add
fldt
mov
mov
repnz
hlt
adc
sbbb
lret
cmp
or
stos
pop
xor
fistpl
and
hlt
dec
jo
jmp
xchg
fstps
push
stos
data16
xchg
daa
lahf
data16
push
loopne
jno
fcomi
andl
lret
inc
arpl
pushl
xchg
lds
test
pop
adc
and
add
jbe
lret
dec
jnp
nop
pop
jge
xchg
lods
dec
outsl
push
pop
stc
repz
pop
fs
push
stc
sub
xchg
std
mov
pop
das
mov
jno,pn
lcall
pusha
xchg
pop
stos
cmpsb
aaa
sub
push
pop
push
sbb
fisubrl
xchg
jae
test
cltd
push
mov
inc
test
cmpsl
add
loop
mov
loope
scas
into
mov
pushf
cmp
imul
out
xor
pop
dec
push
sbb
inc
out
sbb
clc
sub
ret
mov
pop
in
jne
adc
addr16
sbb
cmpsb
js
repz
pusha
das
add
repnz
mov
jb
rorl
push
icebp
rol
sbb
lcall
mov
adc
jb
and
cltd
les
sub
loope
jb
insb
sub
dec
dec
and
lret
fwait
lcall
movsl
dec
push
jne
das
mov
addr16
lret
stos
xchg
mov
cmp
mov
push
int3
lds
add
les
mov
lahf
sahf
nop
push
push
rcll
call
cld
sub
sarb
and
sbbl
pusha
sbb
mov
loopne
sub
jb
push
fmull
and
lds
mov
movb
mov
les
ljmp
iret
mov
daa
bound
mov
int3
pop
sbbb
daa
in
fsubrs
lret
or
xor
dec
shl
cld
mov
pop
loopne
inc
xchg
mov
jae
cmp
sub
jecxz
push
lcall
popf
lock
hlt
and
call
mov
sub
ljmp
rclb
add
pop
jmp
inc
js
dec
mov
push
push
xchg
or
mov
sbb
loope
add
fwait
mov
js
dec
dec
jae
cmp
xchg
inc
aaa
pop
xchg
addb
pushf
xchg
sahf
aad
imul
test
pop
mov
push
adc
arpl
int
notl
movsl
aas
inc
push
sbb
pop
stos
in
icebp
cmpsb
jo
inc
cmp
lcall
adc
dec
das
xor
mov
jecxz
lods
xchg
rcrb
pusha
jbe
fnstenv
mov
and
dec
repnz
jecxz
or
push
mov
ret
out
inc
pop
pusha
leave
adc
dec
mov
or
xchg
jno
fldt
into
jp
and
jge
scas
enter
out
inc
sub
adc
clc
mov
mov
andl
out
ss
jecxz
ja
fiaddl
jb
out
push
in
lea
jle
orl
jmp
shrl
int3
push
mov
in
cmc
xor
fstl
jmp
mov
aaa
and
popa
adc
into
enter
jb
and
mov
das
xor
pop
adcl
and
mov
repnz
and
loopne
mov
sbb
test
push
and
adc
lret
mov
or
sub
pop
mov
lahf
jle
and
mov
movsb
or
or
or
cmp
aad
dec
inc
iret
fdiv
ljmp
xchg
mov
xor
repnz
sub
inc
pop
add
andb
sub
in
dec
sub
add
arpl
std
daa
adc
and
mov
hlt
inc
into
outsl
or
mov
inc
cltd
xchg
loopne
cmp
xor
mov
aam
jne
mov
cmp
in
fstpt
adc
push
inc
fsts
lcall
cmp
push
jecxz
mov
rcrl
lret
lcall
mov
mov
stos
stos
std
aad
adc
and
inc
add
cld
ficoms
punpcklwd
add
inc
mov
mov
sub
fisttpl
push
sub
cmp
mov
or
xlat
stos
pop
fnstenv
mov
std
addr16
repnz
into
add
outsb
push
pop
and
sbb
xor
cmp
leave
dec
out
sbb
xchg
rcrb
iret
sbb
add
pop
cmp
cwtl
cmp
mov
jns
push
insl
add
push
repz
or
and
mov
cmp
sub
jno
pop
jae
add
ss
sbb
push
pop
call
or
cmp
cmpsl
insl
fwait
imul
mov
out
push
scas
cmp
rcll
outsl
sub
lds
inc
dec
and
jge
fimull
imul
xchg
mov
inc
xchg
into
push
je,pn
mov
jle
and
mov
sbb
imul
xchg
or
push
mov
nop
fs
scas
push
ficomps
mov
jb
lods
aam
out
add
ds
in
inc
lahf
dec
test
xchg
movsl
insb
or
xchg
sbb
xor
out
jp
xor
ljmp
push
push
loope
clc
roll
xorl
sbb
lock
js
add
pop
mov
adc
aaa
jo
dec
ret
add
inc
sbb
fcomip
es
ret
push
jl
out
mov
out
jno
sbb
sub
lods
jp
fiadds
rolb
xor
pop
filds
lret
cmp
leave
popa
out
fidivs
and
out
lahf
jecxz
cli
aas
add
aad
jge
mov
xlat
psubsw
lret
jnp
xor
pop
mov
jne
and
jle
xchg
push
fucomip
or
jno
add
pop
popa
push
call
mov
and
cmp
mov
rol
xor
stos
ljmp
fucomi
repz
data16
or
push
pop
movsb
cld
pushf
jne
pop
in
add
mov
and
sbb
mov
mov
scas
adc
pop
mov
pop
pop
and
imul
pusha
mov
lock
and
or
mov
daa
ja
mov
iret
sub
sbb
push
adc
mov
daa
mov
pop
imul
mov
repz
mov
inc
sub
loop
jge
sbb
lahf
push
lods
cmc
push
dec
mov
sbb
ljmp
sub
mov
loop
sahf
clc
gs
cmpsl
push
aaa
add
xor
mov
or
mov
cmc
push
dec
jnp
xchg
inc
pop
lret
imul
mov
movsl
xor
jb
test
jmp
lods
stos
dec
sbb
popf
push
xchg
mov
cmpl
clc
ljmp
fwait
dec
cwtl
inc
arpl
aaa
cmp
out
push
push
push
imul
repnz
cmp
movsb
jns
jl
xor
mov
jmp
add
fwait
cmp
and
jno
clc
mov
cwtl
scas
mov
dec
and
cmp
icebp
dec
aas
or
aas
repnz
inc
arpl
rcl
test
adc
adc
out
popf
nop
lcall
pop
inc
mov
xchg
sbb
push
sbb
in
imul
cmp
popf
out
testb
xor
add
mov
shrb
jmp
ret
das
fistl
xchg
rolb
mov
mov
mov
insl
pop
cwtl
cs
frstor
mov
cld
rorb
push
fstpl
cmp
leave
jmp
pop
add
and
sbb
rcrl
mov
jb
scas
or
mov
call
test
mov
push
js
pop
pop
mov
movsb
cli
dec
mov
popf
das
out
push
or
xchg
push
sarl
subb
rcl
aam
stc
mov
xchg
out
push
lods
dec
mov
sbb
sbb
add
jl
bound
addr16
test
pop
jp
loopne
jg
pop
imul
dec
jno
push
or
leave
je
pop
mov
vunpckhps
je
imul
sbb
xor
mov
sbbb
sbb
sbb
cld
push
jl
in
leave
sbb
pop
push
lfs
pusha
adc
sub
jle
cli
mov
lea
fldcw
je
push
cmp
mov
mov
adcl
insb
pop
arpl
lret
roll
add
fstpl
incb
filds
inc
repnz
js
xor
xchg
dec
pusha
cmpsl
jecxz
pop
cmp
and
jmp
xchg
mov
lret
ds
mov
sub
cvtps2pd
inc
imul
inc
and
outsb
sub
pop
sahf
sahf
fcmovu
das
sub
incb
jle
mov
mov
arpl
imul
lods
popa
daa
shlb
cwtl
adc
mov
imul
mov
movsb
sti
and
aaa
and
popf
outsb
cmc
cmp
add
ror
dec
fdiv
dec
into
mov
and
ficomps
inc
add
adc
xchg
cmp
loopne
roll
mov
push
in
mov
lahf
test
push
cltd
cmp
loope
fadds
jae
and
rorl
js
dec
cmp
int3
das
lahf
jns
cmp
pop
in
cmp
shll
arpl
lods
nop
lret
xchg
sbb
mov
loopne
popa
xlat
xchg
iret
sbb
cmp
push
add
push
sub
test
and
dec
fstpt
shll
mov
add
out
and
fmull
popf
call
stos
mov
dec
jb
sub
lret
stc
jle
add
mov
pop
mov
mov
shrl
seto
push
mov
mov
sub
xchg
icebp
lock
lods
stos
stos
sarb
fstl
rol
mov
shrl
aaa
jo
lock
movsb
mov
xchg
sub
cmp
imul
mov
adc
repz
dec
stos
add
outsl
sti
dec
sbb
out
aam
pop
mov
stc
and
fwait
js
dec
xchg
aas
xchg
iret
bound
adc
jns
add
sbb
jp
iret
mov
imul
jecxz
lret
movsb
fdivs
push
push
ljmp
sub
daa
push
adc
jle
aas
into
or
dec
aas
or
mov
sub
pop
hlt
std
repz
ljmp
inc
repz
arpl
rclb
pop
or
cmp
sti
xlat
in
add
pop
ret
adc
shrl
inc
pusha
sub
adc
and
xorb
flds
pop
les
movsl
mov
lock
inc
xchg
lcall
dec
adc
jle
mov
das
and
fwait
jecxz
cmp
dec
and
out
les
jle
outsl
xchg
pop
mov
repnz
aam
xchg
fs
movsl
push
lods
mov
mov
or
push
and
arpl
aas
jns
mov
or
mov
push
cmp
popa
inc
jp
and
loop
bound
cwtl
ss
mov
lds
inc
mov
dec
sarl
and
cwtl
insl
mov
xchg
pop
xor
dec
out
cmp
sbb
lds
cmp
cs
inc
inc
inc
fildl
hlt
rcll
std
rcll
push
mov
in
stc
xchg
add
jp
fsin
testl
data16
nop
pop
cli
out
cltd
rcrl
jmp
or
jge
dec
and
dec
xchg
mov
enter
cmp
sub
aad
push
into
xorl
adc
imul
mov
iret
mov
xor
push
dec
push
pusha
lods
add
inc
jnp
xchg
mov
scas
xchg
mov
adcl
adc
fildl
lahf
mov
scas
shlb
pop
jbe
push
dec
stos
es
mov
xchg
jbe
or
and
arpl
add
xor
mov
sahf
popa
mov
out
pop
cmp
dec
dec
jecxz
stc
das
out
inc
dec
movsb
fcom
fcom
cmpb
cmp
pop
mov
movsb
notl
cmp
pushf
and
test
test
add
cmc
inc
xchg
and
pop
dec
xchg
or
fs
push
jns
shll
add
mov
loope
outsl
shlb
pop
sub
xor
gs
add
add
and
mov
lahf
cmp
punpckhdq
cld
sbb
lea
pushf
push
cmp
sub
fmul
data16
dec
mov
daa
or
jmp
dec
aaa
inc
frstor
fs
ds
ror
fbstp
addr16
jno
daa
idivl
jmp
xor
lods
cltd
fwait
daa
cmp
adc
movsl
fwait
xchg
hlt
addb
dec
xchg
pop
dec
aaa
out
enter
cmpsb
inc
stc
or
mov
hlt
fstps
push
push
sbb
adc
in
sbb
mov
add
stos
jmp
mov
imul
xor
push
jle
push
pusha
add
dec
cltd
sarb
in
mov
or
stos
xchg
cmp
jle
icebp
and
lods
jmp
in
mov
loope
shrb
dec
decb
mov
outsb
inc
dec
shll
repz
in
jp
mov
fcoml
cli
xchg
xchg
je
imull
pop
ret
add
or
adcb
sub
es
xor
cli
xor
push
xchg
fistl
xchg
dec
popf
xchg
adc
mov
in
lret
xchg
cmp
cli
cwtl
aaa
mov
inc
insl
dec
test
popa
icebp
pop
fisttpl
mov
mov
nop
push
and
xchg
lret
dec
pop
pop
inc
pop
add
insb
jg
add
rcrb
pusha
xor
xor
xor
movsb
vcvttss2si
mov
fnsave
cwtl
dec
das
and
loope
lods
scas
mov
loop
xor
decl
cmp
sub
sbbb
cltd
jae
mov
dec
xor
xchg
stos
mov
mov
in
iret
mov
pop
lret
add
cli
mov
cmpsl
scas
test
repz
sbb
pop
sbb
inc
hlt
mov
jle
sub
test
in
pop
xchg
xor
mov
cld
mov
xor
push
data16
add
add
mov
add
addb
add
add
add
data16
add
add
addb
add
add
add
push
add
add
jo
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
lock
xor
add
add
inc
add
add
add
sbb
add
xor
add
inc
add
add
add
add
add
add
add
add
cld
add
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
pop
and
inc
xchg
mov
jecxz
repz
rcll
xchg
iret
pop
mov
iret
scas
jle
cli
pop
repz
rep
es
mov
push
push
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
xor
fmull
add
ret
les
aam
test
adc
orb
cmp
jo
mov
test
xor
movsb
sbb
sbb
and
or
jp
inc
les
movsl
insb
mov
cmove
or
cmp
movsb
or
adc
pop
sub
lea
inc
cld
add
sub
fcmovne
push
cmp
sbb
lret
lea
lods
stos
dec
add
add
jae
test
adc
mov
outsl
jnp
push
cli
rep
fistps
jb
xor
add
sub
lcall
or
push
call
add
mov
mov
inc
xor
aaa
ret
and
push
call
mov
rorb
xchg
shrl
inc
mov
dec
xor
test
aas
adc
test
inc
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
pop
add
lea
push
aas
pop
adc
mov
sbb
enter
aas
jge
test
add
stos
sbb
shlb
or
jmp
or
aaa
fisubs
and
push
dec
inc
add
add
movb
sub
roll
movsb
mov
sub
push
call
pop
inc
mov
setge
or
pop
pop
pop
pop
dec
ret
fldl
test
sub
loopne
add
add
push
call
mov
inc
ret
rcll
add
push
jmp
ret
push
cltd
stos
or
xor
add
ret
in
iret
or
push
jne
scas
leave
fcompl
sub
clc
xor
cltd
pushf
inc
sbbb
ret
pop
je
adc
inc
out
add
enter
mov
cmp
lods
jbe
and
aas
repnz
or
cs
data16
adc
sbb
mov
testb
sti
inc
test
decb
xchg
cwtl
jle
sbb
call
jne
mov
add
pop
dec
stc
mov
nop
jae
shll
pop
adc
pop
pop
xor
ret
jmp
test
pop
add
push
loop
push
sbb
pop
cmp
or
and
xor
mov
movzwl
test
jge
or
xchg
push
jp
insb
stos
inc
ds
adc
testb
cmp
jge
xchg
push
inc
nop
imul
dec
jge
add
enter
sbb
sub
ret
dec
pop
or
adc
flds
add
xlat
xor
enter
mov
push
mov
pop
cs
add
jbe
push
mov
bound
sbb
sarl
xor
in
inc
pop
jg
cli
daa
fwait
push
xchg
fmulp
sub
mov
or
dec
loopne
cwtl
push
bound
dec
or
clc
rol
add
movsl
sub
inc
jnp
or
cli
movsb
push
not
mov
or
cmp
mov
adc
adc
jecxz
push
sub
lock
push
aaa
xchg
sub
mov
adc
bound
jecxz
pop
outsb
inc
adc
enter
mov
pop
and
jl
add
dec
push
hlt
push
mov
jge
pop
dec
test
mov
outsl
push
push
flds
in
fnop
pusha
adc
jno
mov
fldl
adc
inc
adc
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
mov
xor
sub
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
push
nop
dec
add
ds
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
adc
pop
xchg
cmc
sbbb
inc
mov
ret
adc
dec
lds
insl
jae
jb
jmp
in
sbb
inc
or
dec
sbbl
and
scas
push
testb
xchg
out
pop
dec
pushf
ja
lods
rolb
test
jo
dec
out
rorb
mov
sbb
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
cmpl
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
cmp
xchg
sbb
sbb
jle
inc
cmp
inc
dec
adc
jl
add
add
mov
pusha
loope
push
lea
mov
dec
add
sti
push
add
add
mov
sbb
dec
mov
adc
jp
and
cmpsl
xchg
or
and
dec
idivb
mov
insb
imul
and
jb
iret
test
adc
jno
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
shl
sub
jne
sbbl
daa
popa
addr16
outsl
js
loopne
testl
adc
js
out
sarb
js
je
movsb
movsb
fmull
rolb
dec
popa
outsb
fs
fmull
dec
jo
sub
pop
inc
iret
je
push
les
insb
sbb
jl
imul
inc
mov
es
loop
cmpsb
xchg
lcall
pop
mov
cmp
enter
push
and
dec
xor
jp
cwtl
pushf
or
scas
in
addb
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
je
add
sub
add
sub
add
imul
add
add
add
add
rolb
add
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
