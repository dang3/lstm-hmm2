add
outsl
popa
fs
jb
jns
inc
dec
sbb
push
dec
rorl
inc
xlat
mov
xchg
adc
outsb
push
je
popa
xor
jne
scas
push
pop
fs
arpl
push
ficompl
push
adc
jo
imul
add
insb
sbb
popa
movsb
repz
push
cmp
inc
mov
or
gs
bound
push
sbb
imul
push
push
xor
mov
int3
push
jbe
jae
arpl
dec
mov
insl
jo
adc
cmp
dec
add
push
dec
dec
push
mov
add
je
rcl
imul
out
popa
mov
outsb
je
mov
sbb
jne
xor
push
pop
jae
shrl
outsw
repz
jbe
repz
dec
jo
ljmp
and
inc
jne
insb
jle
roll
bound
jp
push
push
cmp
in
add
push
imul
int
jns
lcall
xor
cvtps2pi
daa
dec
inc
lahf
mov
mov
rcrb
inc
into
js
sbb
jo
data16
pop
sub
adc
insl
push
shll
arpl
and
fistpl
and
xor
sbb
xor
pop
dec
pop
or
pushf
add
push
push
inc
and
push
dec
in
add
ljmp
jo
push
bound
jb
mov
push
mov
sbb
inc
or
repnz
and
daa
pop
sbb
xor
test
xchg
push
mov
aam
sub
arpl
or
push
loopne
sub
pop
xchg
pop
cmp
xor
cs
fadds
xor
fs
or
test
sub
or
fs
ret
push
mov
addl
push
push
push
push
or
or
adc
loop
jno
sbb
mov
pop
add
fcmovne
sub
or
push
andl
mov
rolb
addb
add
test
sub
dec
pop
sbb
xchg
cmp
loopne
inc
adc
jne
adc
push
jne
mov
adc
pop
adc
and
lret
clc
fs
cmc
inc
push
push
cmp
inc
aam
lock
rorl
sarl
mov
and
mov
sub
push
cmp
jne
rorb
loopne
ja
push
in
mov
enter
and
jne
sbb
inc
sbb
mov
call
adc
lods
cmp
inc
pop
adc
clc
shlb
or
pop
leave
ret
daa
fldl
jo
and
adc
lret
add
mov
push
loope
dec
pusha
arpl
push
lahf
stos
insb
rclb
subl
adc
dec
jl
push
fisttpl
and
sbb
adc
rorb
push
pop
pop
andl
arpl
push
mov
adc
push
jne
imul
push
adc
xchg
fidivl
cmp
cmp
or
andb
inc
dec
out
mov
sbb
cwtl
stos
loopne,pn
xchg
loope
aam
sbb
aad
mov
enter
xchg
shll
fdivr
sbb
flds
int
push
and
inc
std
enter
in
mov
push
call
push
fldl
push
movsb
push
idiv
xchg
dec
mov
push
cs
lods
push
and
std
mov
push
inc
sub
shl
repnz
sbb
testl
fdivr
pop
and
clc
in
xor
clc
or
loopne
cmp
xchg
loopne
js
testb
das
jbe
dec
inc
push
lock
push
bound
js,pn
adc
and
adc
and
cmp
mov
add
xchg
cmc
mov
sbb
dec
push
or
jo
fstpl
andl
push
cmp
je
push
clc
bound
dec
test
inc
cmp
jl
xor
enter
inc
jg
or
sub
je
and
test
push
popf
or
xor
and
mov
daa
imul
pop
adc
push
iret
mov
xor
jmp
push
pop
pop
push
cmp
push
push
imul
in
cld
pop
jno
jne
les
loopne
lret
and
mov
mov
xchg
or
xor
pop
repz
mov
je
add
in
je
push
push
jne
bound
mov
fdivr
sbb
std
and
or
test
fs
cmp
mov
and
pop
aad
push
cmp
gs
push
and
pushw
out
bound
adc
int3
sub
daa
xchg
sub
das
xor
js
push
push
repnz
aas
or
stc
pop
push
mov
or
inc
push
inc
test
push
push
inc
std
and
popa
mov
pop
inc
mov
adc
cs
mov
adc
add
nop
insl
xchg
test
les
or
pop
imul
mov
cwtl
out
inc
or
cmp
daa
xchg
shlb
sub
jae
inc
inc
or
dec
add
xor
mov
js
dec
test
and
lds
clc
jb
and
and
push
inc
or
adc
dec
sbb
jl
fbld
gs
into
or
sbb
sub
mov
and
in
ds
fldl
nop
jne
jge
mov
mov
or
dec
push
and
inc
icebp
mov
insl
imul
inc
fstl
dec
data16
inc
mov
sbb
adc
push
aas
call
out
sbb
inc
adcl
sub
adc
push
push
pop
pop
jmp
clc
subb
lds
ljmp
jmp
lahf
cmp
cmp
xor
mov
inc
inc
inc
in
pop
fisubs
in
test
jge
sbb
cmp
aaa
adc
push
mov
aaa
inc
pop
cmpsl
bound
fldenv
cvtpi2ps
nop
pop
or
push
pop
rcll
gs
and
lods
jne
push
dec
in
mov
inc
mov
inc
xlat
bound
push
lret
loop
and
mov
ret
mov
mov
cmp
in
jecxz
or
rolb
and
sarb
call
inc
fnsave
shrb
inc
enter
cmpsb
lcall
lret
ret
call
mov
test
push
jmp
adc
pop
daa
push
mov
sahf
and
in
push
loopne
ficoms
fimull
cwtl
or
adc
roll
ret
orl
push
jns
jge
in
lock
adc
mov
push
mov
mov
pop
xchg
sub
add
xchg
push
adc
add
jg
int3
and
clc
rorb
add
xor
leave
fsubr
popa
int3
xchg
add
mov
mov
or
jns
sti
dec
jmp
cmp
fadd
mov
sbb
int3
ret
sbb
mov
sub
jnp
inc
and
aaa
and
mov
sbb
dec
inc
arpl
andb
push
mov
or
mov
repnz
inc
or
arpl
and
adc
and
sub
push
ja
inc
icebp
lods
push
mov
push
in
jl
and
adc
mov
cli
popa
test
orb
test
dec
test
repz
inc
cli
arpl
cmp
dec
enter
ds
push
adc
mov
test
fs
and
pop
imul
push
jmp
add
jl
sbb
adc
mov
add
iret
icebp
hlt
push
mov
and
jmp
in
jb
insb
mov
hlt
repnz
sarb
ds
setb
dec
add
out
rol
cmp
test
mov
rorb
and
dec
inc
cli
or
pop
push
jns
pop
dec
mov
outsb
retw
push
test
addb
sub
jb
mov
push
int3
adc
or
test
movsb
repnz
inc
push
or
adc
mov
jg
adc
or
or
cmpl
or
nop
rorb
mov
movl
int3
test
sbb
dec
inc
lcall
push
dec
sub
stos
xchg
call
rclb
aam
mov
arpl
xchg
or
add
clc
lock
and
inc
inc
adc
ljmp
mov
loopne
sahf
push
pop
in
shlb
in
cwtl
xchg
push
mov
xor
push
shlb
add
and
push
and
popw
sub
lret
pop
movl
incb
cmc
push
add
mov
xor
sbb
mov
cmpl
pop
jmp
aas
test
add
lea
cmpsb
cwtl
cmp
push
push
iret
popa
inc
shl
add
push
and
xchg
mov
outsb
pusha
xor
and
nop
addb
fsubrs
xchg
push
cmp
stc
dec
jmp
popa
sbb
outsb
je
cmpsb
pop
mov
pop
daa
add
orl
push
pop
xchg
mov
add
xchg
cltd
fmuls
sbb
leave
dec
sbb
test
in
incl
fwait
or
xor
mov
shlb
jge
rcrl
jg
xchg
pop
or
inc
and
jp
or
jle
jmp
mov
mov
idiv
mov
data16
mov
cwtl
mov
push
mov
or
mov
jmp
rcrl
push
aas
and
pop
lcall
pop
mov
pushf
jno
or
mov
jae
mov
inc
push
pop
test
jae
aaa
and
adc
jl
pop
jb
lahf
or
mov
mov
or
lock
adc
xchg
hlt
sbb
test
pop
mov
testl
jl
add
sub
inc
std
popa
in
mov
cltd
mov
and
inc
and
add
dec
sub
sub
je
scas
lret
mov
enter
push
arpl
mov
imul
clc
mov
pop
jmp
rcl
fists
test
test
adc
sbb
loope
pop
jno
inc
push
or
jp
mov
or
dec
cmp
adc
or
and
or
sbb
mov
cltd
mov
mov
lcall
mov
test
jmp
cmp
adc
inc
fnstenv
add
or
pop
leave
pusha
pushf
sub
push
inc
enter
dec
or
sub
or
pop
loop
in
push
mov
jo
and
push
mov
icebp
sbb
xchg
inc
fisubl
adc
mov
pop
lahf
add
push
loope,pn
jae
adc
cld
in
xchg
dec
cmp
push
dec
and
mov
push
mov
leave
in
xor
loop
mov
mov
test
sub
sbb
in
push
out
push
aas
xor
pushf
dec
pop
je
ret
adc
je
fsubrl
push
out
dec
ret
adc
jno
xor
and
adc
inc
popa
mov
push
hlt
or
neg
sbb
add
pop
dec
xchg
cs
dec
adc
cli
lods
adc
les
pushf
pop
int3
mov
rcr
int3
sbb
xchg
in
adc
movb
mov
aad
sbb
adc
addr16
sbb
sbb
sbb
sbb
sbb
sbb
sub
rcr
filds
jecxz
clc
out
test
sbb
cmovl
andl
dec
arpl
and
adc
sub
lea
loop
and
dec
mov
call
jecxz
jae
push
jmp
in
test
in
insl
sub
sub
xor
cltd
repnz
repz
hlt
sahf
rolb
cmp
mov
xchg
pop
nop
packssdw
pop
ja
pop
outsl
or
movq
bound
arpl
jp
sub
xchg
mov
outsb
cltd
fwait
rclb
jbe
ret
xchg
push
les
adc
inc
jo
push
arpl
dec
lretw
outsb
out
ror
mov
dec
jbe
jb
sbb
je
sbb
mov
jbe
and
xchg
ja
jp
jnp
xchg
jg
mov
or
test
dec
adc
mov
mov
int3
mov
mov
outsb
lea
mov
xchg
dec
mov
dec
and
or
inc
dec
and
xchg
adc
movsb
jle
dec
pop
and
push
mov
in
push
enter
inc
pop
adc
xor
mov
aaa
lods
cmpsl
push
cmp
cmp
cmp
mov
xor
cmp
jge
inc
inc
sbb
outsb
popa
cld
movl
xchg
cwtl
pop
push
movsb
mov
fcoms
dec
mov
loop
mov
ja
sub
push
pop
inc
ret
dec
jmp
flds
cmpsl
and
in
and
sub
je
lea
je
pop
test
sub
test
je
lret
push
je
cmovle
adc
dec
test
je
into
xchg
mov
dec
mov
jnp
mov
mov
mov
in
xor
dec
push
fstps
inc
xchg
or
lds
andl
movl
pop
loop
ret
pop
dec
jmp
adc
push
adc
ss
pop
mov
loopne
clc
push
jmp
mov
ds
jge
xchg
enter
xchg
cs
xchg
cmp
and
inc
gs
or
or
mov
cltd
push
cmp
enterw
and
sbbl
and
and
lods
flds
fisubrs
fdivrl
cmpl
xor
push
aaa
loope
sub
mov
fcoml
and
sub
adc
pop
shll
mov
lock
mov
dec
arpl
add
test
sbb
mov
jb,pn
popf
les
dec
les
or
rol
scas
xor
xor
xchg
xor
std
sub
adc
lods
ret
xor
test
in
addl
test
call
and
cld
cmp
insb
clc
sbb
xor
pop
xor
adc
adc
add
jbe
aas
adcl
arpl
xor
call
jp
jle
mov
negb
dec
ds
or
push
ret
cwtl
cmp
sbbl
xor
cmpl
inc
int
loopne
add
lret
or
int3
test
push
lea
lock
push
cmp
xchg
pop
ljmp
fsubp
mov
mov
or
jne
push
jecxz
mov
push
pushf
push
mov
xor
cmp
or
test
push
roll
and
push
xor
cwtl
ret
sub
xchg
push
sbb
mov
pop
push
call
add
imul
jo
rclb
je
and
inc
pop
adc
pop
mov
pusha
rorl
dec
sub
cmpsl
cs
push
mov
sub
jae
and
cli
sbb
inc
lds
or
sti
sub
mov
cmp
cmp
dec
and
mov
push
rorl
inc
cmpsl
cmp
or
fwait
pop
fs
clc
inc
cli
jbe
or
lods
mov
or
movsb
adc
pop
inc
or
mov
cmp
lret
cwtl
adc
sti
hlt
bound
sub
bound
xchg
les
mov
inc
sub
and
ds
shll
mov
bound
jmp
push
aam
sub
sub
cmp
xchg
in
lods
mov
xor
divl
imul
adc
push
insl
imul
jmp
and
iret
test
mov
aas
pop
out
xchg
dec
leave
scas
sahf
pop
clc
in
adc
scas
ret
jbe
cmp
jbe
xor
pusha
sbb
mov
je
jno
adc
dec
pop
or
mov
cmp
xchg
cs
dec
sbb
push
push
mov
out
sbb
leave
push
pushf
pop
push
mov
popf
jmp
sub
pop
push
sub
outsl
mov
pop
or
lea
dec
enter
sbb
mov
and
jb
inc
fcom
mov
sbbl
or
test
add
or
hlt
push
or
push
cmp
xorb
dec
or
mov
sub
outsb
xor
pushl
ljmp
mov
adc
shl
sbbb
rolb
addr16
pop
repz
sbb
adc
push
or
out
inc
sbb
pop
andb
frstor
xchg
push
inc
arpl
pop
dec
je
add
gs
sbb
pop
dec
test
leave
je
fbstp
add
mov
cmpsb
and
pop
or
je
and
nopl
sahf
sbb
std
sahf
cmp
or
dec
jmp
in
pop
or
call
sub
repnz
ficomps
and
jecxz
insb
xchg
mov
or
pop
hlt
add
sub
cld
popf
bound
inc
inc
dec
add
xchg
test
push
cli
jns
or
mov
inc
sub
dec
adc
ret
and
and
adc
fmull
sbb
movsbl
iret
dec
pop
jg
jmp
mov
les
add
sbb
and
and
cmpsb
outsl
pop
push
int3
clc
jmp
add
pop
pop
subb
sub
mov
outsb
pop
in
mov
and
adc
mov
sbb
adc
roll
imul
testb
cmp
sub
orl
cmp
mov
data16
adc
jecxz
xchg
push
dec
pop
gs
pop
enter
enter
call
mov
adc
mov
sub
push
and
push
and
push
dec
lret
add
mov
sub
loopne
idivb
out
ss
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
adc
and
js
sahf
push
insl
test
nop
xor
add
enter
pop
xor
in
pop
sub
nop
mov
nop
mov
mov
mov
push
jne
pop
mov
in
push
mov
outsb
sbb
inc
or
sub
les
adc
fsts
xchg
mov
jle
cltd
jb
add
dec
cmp
xor
xor
add
stos
daa
lcall
insb
sub
lods
mov
adc
sub
test
push
cmc
mov
dec
mov
fs
and
stc
sub
add
and
push
push
xchg
adc
inc
add
pop
outsb
xorb
fiaddl
xor
pop
and
imul
fcmove
dec
jnp
aas
imul
loopne
int
fs
mov
dec
push
loopne
movsb
mov
aad
or
push
jmp
adc
inc
les
es
inc
push
sub
or
xor
rclb
push
and
and
push
cmpsl
mov
or
imull
dec
inc
sarb
ficompl
jae
test
sti
sub
mov
jnp
iret
aam
es
rorb
push
push
in
and
and
enter
int3
mov
push
aam
leave
push
inc
repz
xchg
shr
fcoms
fmull
mov
in
fimuls
push
and
inc
mov
dec
mov
or
and
and
mov
fidivs
sbb
mov
inc
xor
sbb
mov
jo
sub
jno
add
fs
popl
sub
mov
mov
push
or
loopne
mov
stos
push
test
jns
and
shrl
add
test
cmp
dec
and
popf
bound
inc
inc
dec
pop
rol
es
inc
push
sub
mov
mov
add
jnp
pop
pop
pop
dec
fbstp
in
fs
inc
and
sub
cmp
mov
push
sub
mov
or
xchg
insb
cltd
push
lea
push
inc
sbbb
push
sub
mov
loope
inc
sbb
inc
ret
or
adc
push
adc
mov
bnd
push
mov
sbb
inc
mov
cwtl
mov
mov
dec
sbb
cmp
sub
xchg
mov
test
cltd
les
andb
in
lock
cmp
jb
add
dec
add
shll
loope
mov
inc
pop
add
push
sub
sub
adc
lods
mov
add
adc
sbb
mov
adc
scas
test
and
and
or
mov
je
dec
je
outsb
insl
or
and
adc
adc
dec
sub
outsb
or
cmp
int3
sub
movsl
adc
xchg
and
enter
sub
scas
dec
and
add
and
cmp
push
jb
imul
xchg
mov
sub
mov
shlb
or
xor
xor
inc
and
insl
xchg
and
and
push
or
out
mov
adc
imul
and
dec
ss
push
and
xchg
mov
rclb
xchg
les
or
push
adc
jo
adcb
les
hlt
dec
add
cltd
adc
and
cs
dec
push
xchg
pop
xor
mov
or
dec
cmp
imul
xor
cmpsb
jno
enter
mov
adcl
divb
sbb
mov
or
and
inc
loop
mov
dec
dec
sbb
cmp
adc
add
or
xor
jl
lods
xchg
or
mov
mov
adc
or
dec
dec
popa
cmp
fs
aad
cs
dec
test
pop
jp
push
ret
imul
insb
pop
into
add
mov
ds
hlt
push
mov
push
push
xchg
add
movsl
loopne
jmp
jne
dec
jg
lock
cmpsb
pusha
dec
inc
jl
movsb
jb
movsl
fdivl
leave
jne
lock
mov
outsb
repz
push
add
cmp
mov
dec
pop
data16
inc
push
test
mov
popa
mov
push
inc
imul
bound
or
aas
push
outsl
sub
pop
mov
jbe
sbb
ss
pusha
adc
and
in
std
mov
gs
mov
lcall
test
and
push
sbb
add
outsb
push
leave
push
jo
lods
pop
inc
add
test
sub
xor
inc
jbe
fbld
jno
sarl
jo
es
ficoms
insl
ret
xor
dec
cli
js
jb
add
cld
jb
arpl
imul
lods
cs
aam
pusha
lahf
push
push
xlat
jns
jo
push
outsb
inc
movsb
jae
cld
cmp
mov
arpl
jne
pushf
and
and
dec
jge
xor
inc
into
mov
mov
jg
lods
sbb
fs
hlt
dec
popa
dec
insl
int3
mov
add
xchg
sub
outsl
push
mov
and
dec
out
sub
dec
mov
dec
jb
mov
cmp
jge
data16
and
out
inc
dec
inc
jns
loope
xchg
dec
inc
js
loopne
xchg
adc
push
and
jge
mov
jbe
movsb
mov
jb
inc
lcall
dec
in
fwait
cmc
mov
aam
jg
call
push
mov
ret
and
jmp
push
hlt
add
leave
in
addr16
adc
push
sub
daa
std
add
cwtl
mov
push
aas
push
xchg
insl
cmc
das
jecxz
nop
mov
addb
jae
jb
outsl
push
fcoml
push
adc
dec
test
fistpl
xchg
and
fcompl
jo
cmp
push
push
push
stos
mov
stos
add
xchg
imul
sub
push
fs
pushf
mov
pop
mov
and
dec
add
sub
fcmovne
add
sbb
and
in
inc
push
mov
leave
inc
popa
lods
add
sbb
sub
cli
push
stos
add
stc
fcoms
movsl
xchg
sbb
es
add
bound
push
dec
inc
or
cs
test
dec
push
xchg
push
lahf
movsl
xor
dec
inc
dec
dec
out
xchg
inc
bound
adc
sub
cmp
mov
lock
cmp
jo
jno
cmp
enter
insl
mov
add
dec
or
jle
pop
mov
jo
stos
xor
ja
jmp
jo
outsl
or
in
bound
insb
repnz
mov
inc
pop
inc
pop
push
push
out
aas
add
dec
push
push
inc
push
push
push
mov
jmp
bound
pop
xor
fs
inc
push
jge
lcall
jae
in
xor
push
sub
jg
pop
inc
jo
sub
push
pop
sqrtps
int3
pop
lods
pop
loop
ret
insb
popa
inc
out
jg
pushf
mov
dec
rolb
or
mov
inc
inc
dec
test
push
mov
stos
xchg
sahf
popf
in
inc
inc
xchg
inc
xor
xor
pushf
add
dec
movsl
stos
into
push
jg
pushf
dec
stos
add
hlt
adc
dec
push
sub
in
mov
mov
push
xor
notl
inc
dec
lods
mov
loope
push
test
insl
stc
and
push
popa
call
into
shlb
xor
push
push
add
fidivrl
jecxz
je
bound
stc
jne
cmc
push
fiaddl
insl
outsl
fs
or
roll
rcrb
jnp
mov
adc
mov
jl
inc
add
sub
and
xor
adc
xchg
outsl
icebp
or
ss
cwtl
push
xor
ljmp
mov
call
add
xor
xchg
push
loopne
and
add
or
arpl
dec
in
pop
or
adc
xchg
adc
rolb
movsb
sub
add
sub
push
or
sbb
or
adc
bound
dec
out
xor
pushf
adc
test
pop
pop
test
je
mov
jp
xchg
call
movsl
loopne
pusha
daa
jb,pn
pop
bound
add
add
pop
cs
pop
sbb
inc
sub
rcl
mov
xchg
and
sub
push
mov
sub
add
adc
add
and
pusha
mov
add
fldl
add
xor
inc
or
mov
mov
insl
fcompl
adc
adc
or
xor
repnz
cmp
sarl
jb
push
call
clc
int3
jo
pusha
push
inc
rolb
clc
ret
ss
aad
aad
and
add
ss
and
pop
pusha
push
mov
pop
adc
xlat
cltd
push
decb
mov
sub
sbb
mov
push
mov
and
xchg
ds
fldcw
or
mov
pop
adc
mov
lahf
popa
and
mov
adc
mov
fldcw
cli
adc
lret
shr
rep
jl
cmp
add
push
call
push
mov
mov
lea
mov
mov
or
std
sub
xchg
data16
or
xchg
add
sub
mov
jbe
jae
xor
js
pop
mov
jnp
shrl
adc
lret
add
daa
adc
int3
mov
inc
adc
or
add
add
es
shrb
mov
and
call
or
add
push
push
xchg
jno
mov
ljmp
fldcw
fs
or
xor
and
push
sbb
cld
mov
jne
or
cs
dec
xchg
adc
push
sbb
adc
and
int
sub
lahf
jnp
call
or
push
lea
daa
ficoml
adc
jo
and
adc
sub
pop
rolb
lea
xchg
imul
subb
cmpsb
inc
xor
out
push
sbb
outsb
jecxz
sbb
push
mov
pop
cmp
sarl
test
dec
adc
dec
rcrl
lea
test
dec
pop
push
dec
inc
lret
movsb
cmpsl
xor
or
les
ret
push
nop
add
stos
cmp
cld
shr
bound
mov
cld
xchg
sbb
add
test
mov
ret
jge
mov
stos
cltd
inc
dec
adc
mov
mov
push
aaa
push
xchg
mov
test
add
xorb
push
arpl
ljmp
fiadds
test
sub
cmc
pop
lds
push
push
call
es
adc
sub
xchg
mov
jp
dec
pop
mov
jmp
scas
iret
into
jne
lret
jmp
orb
ja
inc
adc
test
inc
lret
pop
jecxz
xchg
sub
outsl
test
aaa
aam
repnz
lea
movl
lods
movl
xchg
in
pusha
adc
and
in
subl
imul
call
leave
ret
addr16
xchg
push
sbb
push
push
in
inc
and
mov
in
sbb
sahf
cmp
xor
pop
out
sub
mov
cld
pusha
fidivs
addr16
xchg
shl
sub
or
push
and
rorl
jnp
cmp
call
mov
aam
sub
seto
test
jb
loopne
add
or
fs
pusha
dec
sub
dec
push
push
adc
pop
push
adc
xor
fimuls
stc
fs
fwait
inc
mov
mov
push
inc
lret
jne
test
leave
je
push
add
pop
jne
or
add
and
cmp
sub
sbb
je
and
or
int
test
inc
dec
mov
dec
or
daa
movsb
mov
adc
loop
xor
mov
xchg
call
call
and
jge
call
mov
xchg
mov
pop
lock
pop
add
arpl
int3
les
leave
jb
adc
or
aas
ret
add
sub
incl
mov
or
in
enter
repnz
dec
and
pop
push
mov
pop
add
xor
adc
and
mov
lea
xchg
dec
loopne
and
lea
fdivrl
loop
fsubl
dec
jne
cmpsl
and
inc
xchg
sbb
push
clc
mov
xchg
dec
xchg
loope
inc
hlt
or
xor
or
hlt
ds
lock
or
mov
inc
call
pusha
imul
in
and
arpl
push
call
xchg
mov
push
add
adc
push
nop
adc
rcrb
xor
loopne
and
hlt
sub
jp
nop
add
fs
pushf
inc
xor
dec
icebp
or
mov
xchg
cmova
xchg
cvtps2pd
cld
adc
xor
dec
test
into
es
sub
mov
xor
ds
mov
cmp
or
pop
movsb
mov
mov
mov
jecxz
push
push
fs
xchg
aad
dec
and
cli
lods
cld
js
push
inc
sbb
pop
loopne
xchg
mov
fadds
int
add
sbb
jo
sti
xchg
jns
push
ss
inc
sbb
ret
xor
jmp
xchg
jo
push
and
je
add
and
inc
in
fs
mov
mov
and
push
mov
push
pop
cmp
or
ror
or
sub
mov
insl
cltd
pop
sub
pop
and
pop
jmp
inc
in
movsb
subb
jb
and
test
mov
stc
xchg
dec
cwtl
int
xchg
mov
mov
and
lods
mov
mov
test
jns
movsb
and
mov
or
clc
mov
inc
cld
jl
sbb
cmp
sub
adc
sub
xchg
and
pop
andl
in
inc
call
jle
shll
test
push
test
adc
movsbl
inc
call
mov
aad
sbbl
mov
xor
test
push
std
cmp
test
int
daa
loope
pop
adc
push
cld
xor
in
pop
sub
les
mov
push
xchg
test
cwtl
sbb
lcall
and
mov
xchg
xor
lods
jae
scas
adc
and
mov
mov
js
mov
enter
gs
inc
int3
arpl
shlb
enter
adc
into
sbb
push
fidivs
in
fists
jae
pop
loop
push
jecxz
inc
in
data16
out
out
call
arpl
push
jmp
pop
or
adc
add
push
into
push
adc
repnz
adc
and
sub
xchg
inc
ja
fs
push
movb
es
test
or
nop
inc
std
inc
js
adc
xchg
out
hlt
sbb
push
ret
mov
lods
mov
daa
and
fisubl
mov
sub
out
and
push
push
call
push
mov
xchg
inc
push
or
mov
lcall
xor
or
and
and
push
push
sbb
mov
sarb
push
push
pop
inc
das
add
jmp
push
xorl
sbb
and
xchg
sti
jnp
je
sti
std
mov
mov
data16
mov
and
mov
test
and
movsb
sub
jmp
jmp
sub
pop
xchg
test
setg
adc
out
and
and
and
fmulp
add
push
push
jp
lock
in
cmp
add
adc
sub
add
aas
push
add
sbb
cmp
mov
mov
enter
test
orb
mov
ret
fwait
sub
je
push
inc
loopne
in
cltd
fstpl
or
mov
pop
xchg
push
cmp
xor
inc
sub
or
or
sub
add
sbb
cltd
sub
xchg
shlb
pop
and
mov
xchg
dec
xchg
push
cmp
adc
dec
stc
pop
or
pop
cmp
cmpsb
add
lea
push
dec
push
dec
adc
adc
push
mov
mov
dec
and
pushf
mov
sub
mov
and
xor
mov
xor
pop
ret
mov
and
adc
or
stos
add
dec
movsb
adc
test
or
cs
push
test
dec
pop
lret
leave
shlb
sub
or
pusha
iret
push
cmp
dec
and
jne
inc
or
lods
add
pop
pop
adc
xor
mov
sahf
es
xor
jns
push
es
and
clc
call
and
push
or
dec
adc
or
xor
dec
mov
movsb
push
sub
mov
adc
enter
lea
push
jmp
mov
shlb
xor
inc
enter
sub
fs
fists
push
sahf
call
pop
popl
dec
jo
scas
or
push
xchg
pop
es
push
fdivrl
adcb
or
mov
sub
xchg
mov
sub
nop
addb
add
inc
pop
out
jns
push
movsb
or
push
cltd
ret
push
call
pusha
je
inc
scas
pusha
or
inc
or
inc
pop
or
pop
test
imul
push
fndisi(8087
je
sub
les
rcrb
inc
pop
je
loope
inc
scas
sbb
js
adc
jge
cmp
push
pop
sbb
push
cmpsl
mov
call
add
push
adc
or
movsl
xchg
std
mov
adc
adcb
repz
inc
or
push
inc
adc
or
in
mov
pop
sub
cmp
jae
xlat
push
cmpsl
sub
mov
shrb
push
test
jmp
xchg
mov
push
lcall
mov
pop
push
arpl
test
push
or
xor
cmp
xor
mov
jae
jns
and
adc
fsubs
add
mov
inc
roll
rcrl
mov
push
or
pushf
das
pop
movsl
stos
and
cmpsl
mov
mov
movb
push
das
movsl
daa
jno
movsb
call
add
test
mov
inc
inc
and
adc
lds
jp
sub
dec
mov
xor
add
mov
jae
xchg
ret
inc
sub
xchg
das
cmc
sarl
cmpsb
jno
push
and
add
sub
fistpll
mov
sub
xchg
mov
inc
or
inc
xchg
and
adc
arpl
or
enter
lea
nop
xchg
xchg
es
loop
and
aam
out
sub
and
xor
cmp
and
or
and
or
xlat
and
adc
jecxz
test
sti
xchg
jno
adc
je
xchg
ret
dec
scas
and
sbb
loope
iret
pop
jae
or
pop
adcb
test
dec
mov
xchg
add
or
ficompl
jno
mov
inc
jmp
sbb
inc
inc
add
cmpsl
mov
or
and
cmp
imul
add
in
insb
mov
es
test
loopne
mov
push
inc
call
push
mov
jg
roll
test
add
and
std
and
out
adc
sbb
adc
mov
xor
push
push
inc
ljmp
push
push
dec
cmpb
testb
push
insb
mull
jne
or
push
call
movsl
ret
mov
dec
dec
shll
push
inc
push
jp
mov
ret
test
push
orb
pusha
push
dec
and
dec
call
aam
xor
punpckhdq
cmp
loope
scas
subb
gs
mov
clc
add
mov
test
jns
cmp
and
fwait
jo
add
inc
jmp
push
je
xchg
shlb
xchg
mov
in
lea
movsb
stos
aas
push
add
and
mov
mov
lds
lret
cmp
out
cmc
xchg
mul
and
inc
push
sahf
call
or
inc
test
mov
lock
and
sub
xor
popl
fmull
rcrl
jnp
rcll
fwait
decl
ja
shll
or
call
push
ret
adc
out
push
mov
pushf
aad
sbb
inc
test
jmp
or
rorb
fimuls
mov
or
mov
and
and
rorl
sbb
js
dec
sarb
das
cmp
jo
sbbb
push
push
mov
inc
popf
add
lea
push
dec
aad
andb
adc
adc
das
push
cmpsl
cmpsb
mov
mov
or
push
pop
mov
test
or
add
inc
out
imul
dec
loopne
xchg
sub
ret
loopne
push
loope
decb
ud2
push
adc
push
adc
and
inc
test
fldcw
xorb
inc
xor
xor
adc
sti
nop
inc
and
push
mov
lsl
jmp
push
ljmp
and
lds
ret
sub
clc
push
or
sbb
sbb
add
add
int
or
xor
jae
data16
fistps
sub
mov
ljmp
mov
sbb
dec
movsb
cmp
pop
lcall
mov
push
mov
xchg
dec
xchg
lahf
pop
or
mov
jne
sbb
and
cmp
nop
sbb
adc
sub
jl
inc
pop
sbbl
gs
or
cli
inc
pop
sub
adc
pop
mov
and
mov
add
test
or
nop
je
mov
dec
nop
add
mov
fs
mov
or
and
and
jne
fs
sbb
inc
fsts
push
push
mov
fidivrs
popw
xchg
sub
sub
pushf
jb
pop
cmp
call
and
sbb
pop
push
add
movsb
popf
pop
es
in
dec
add
js
test
sbb
jp
fdivrs
std
imul
and
aaa
popf
and
leave
lea
pop
xorb
sbb
sbb
sbb
leave
cs
dec
adc
adc
cmova
add
and
leave
xchg
inc
in
mov
std
dec
pop
mov
inc
das
jns
nop
loop
push
jb
decb
mov
dec
call
mov
and
fmul
cmc
jns
add
add
add
or
xor
out
add
xor
call
add
cmp
jmp
add
cmp
in
adc
out
ss
aas
xor
lock
cmpl
xchg
push
xchg
pop
jp
inc
mov
dec
mov
or
push
repnz
lea
loop
add
pop
pop
inc
xlat
jnp
mov
movb
push
mov
push
xchg
adc
or
inc
fdivr
sbb
clc
icebp
aam
cmp
or
gs
lcall
lcall
mov
mov
test
or
push
cmp
mov
jmp
mov
hlt
inc
mov
or
aam
push
inc
adc
cmp
test
and
mov
aam
cmp
jl
loopne
push
cwtl
adc
mov
ret
lea
test
addl
xor
addb
jne
mov
or
dec
mov
ficompl
adcb
and
mov
push
add
add
imul
add
inc
gs
mov
clc
sbbl
sti
cmp
lahf
or
outsb
pop
dec
xor
pop
pop
or
icebp
inc
mov
shll
fsubrs
push
push
cmp
jecxz
testl
es
rorl
mov
ret
pop
adc
lds
nop
adc
sub
je
inc
mov
or
jmp
test
xor
pusha
sti
add
aad
push
test
push
call
imul
jl
lock
push
pop
adc
push
es
clc
movsb
pop
adc
push
mov
test
pop
xchg
jo
inc
outsl
adc
pop
sahf
insl
pop
mov
mov
jmp
inc
lea
mov
adc
fnstcw
call
inc
inc
in
and
push
aaa
in
pop
or
push
stc
cmp
call
sbb
call
popf
adc
and
push
mov
clc
adc
ret
pusha
and
push
adc
ss
xchg
jne
loopne
pusha
das
pop
adc
lcall
jle
mov
adc
add
fs
in
push
dec
movsb
outsb
call
dec
out
ret
clc
push
dec
jb
and
sbb
mov
in
ret
in
div
es
mov
test
and
push
in
sub
je
sub
call
push
cmp
dec
nopl
aas
mov
les
mov
fisubrl
and
sbb
mov
pop
clc
pusha
ds
sar
mov
xchg
test
xchg
or
fcmovnu
movsl
mov
xor
or
push
push
xchg
lcall
cli
notb
push
xchg
xchg
or
push
es
mov
jb
push
icebp
clc
adc
jmp
popf
add
push
xchg
inc
and
rolb
push
lods
bound
test
call
push
xor
mov
call
inc
shlb
inc
loope
je
push
adc
pushf
loope
inc
scas
cmp
movsb
xlat
jl
cmpsb
add
inc
cmp
cmp
mov
mov
cwtl
loope
mov
test
and
add
inc
pop
adc
xchg
inc
sarb
pop
pop
cmp
jns
maskmovq
dec
xchg
xorb
adc
es
pop
lret
cmp
or
hlt
dec
pusha
sbb
sbb
inc
pusha
cs
pop
addr16
sub
stc
push
nop
jns
sub
arpl
btc
sub
adc
inc
nop
inc
xor
push
call
cmp
test
cmp
inc
push
inc
mov
push
add
push
cmp
cmp
push
mov
jmp
flds
add
and
inc
aad
dec
sbb
inc
adc
push
nop
jb
orb
sub
xor
xchg
inc
jp
ds
adc
inc
cmpsl
daa
loopne
pop
and
xlat
js
dec
jbe
mov
sar
ret
mov
leave
ret
nop
movsl
or
jmp
cmp
dec
cmpsl
out
inc
cli
jae
sbb
pop
pop
pop
insb
aam
mov
rcrl
or
dec
sbbb
cmp
cmpsl
lcall
jne
push
mov
or
dec
mov
xor
mov
xor
repz
stos
or
cli
test
xchg
push
cld
gs
sbb
scas
pop
popa
call
and
mov
in
js
push
push
mov
sbb
mov
lea
and
add
push
sbb
and
push
or
adc
sahf
stos
aas
xchg
jo
mov
hlt
int
fnstenv
fcoms
jnp
and
adc
repnz
ret
mov
xchg
inc
inc
test
insb
dec
imul
dec
mov
push
faddl
test
mov
add
shll
es
pushf
inc
xchg
push
push
pusha
push
push
lods
dec
sub
pusha
pop
inc
enter
mov
adc
popa
xchg
addb
or
mov
ret
ret
in
sbb
fsubrl
adc
or
xor
fcoml
pop
add
loopne
and
push
mov
sbb
inc
jnp
cmp
lea
push
mov
cmp
xorl
xor
out
mov
jb
push
dec
imul
push
xor
sti
hlt
sub
data16
push
pusha
mov
xchg
negb
cmpsb
add
add
push
adc
lds
adc
jmp
and
in
inc
and
mov
push
incb
or
clc
inc
jae
or
sbb
push
adc
mov
adc
lods
out
dec
rolb
pushw
sub
mov
mov
mov
rep
push
dec
add
mov
and
ja
mov
pusha
adc
or
jl
pop
pop
shrb
stos
push
inc
adc
je
mov
ds
cmp
test
inc
loopne
dec
sub
mov
sbb
jg
xchg
ret
push
add
cwtl
dec
mov
je
inc
add
call
jl
loop
sub
repnz
or
leave
or
inc
lret
jge
push
adc
int3
outsb
lahf
sub
in
sub
dec
fcmovu
inc
or
inc
fdivs
cmp
mov
mov
stos
push
jbe
add
call
xor
es
sub
sbb
cmp
je
pusha
and
rorl
mov
push
push
cmp
sbb
in
xor
add
push
push
push
mov
add
pushf
sbb
mov
sub
stc
push
ss
push
icebp
punpckhdq
call
dec
sbb
push
adc
mov
push
ret
int3
fisttpll
xor
push
jne
push
pop
gs
enter
in
sbb
cmp
xchg
cs
pop
pop
xor
push
push
add
dec
cmp
or
sub
cmp
cld
fisttpl
jns
and
dec
or
lods
test
xchg
sti
cvtps2pd
mov
and
and
push
or
adc
in
sub
push
enter
subb
and
and
jnp
mov
cli
cmp
mov
dec
adcb
push
add
jne
push
cmpsb
lock
dec
xchg
shlb
add
pop
jmp
movsl
inc
lods
mov
pop
cmpsl
mov
lea
out
mov
sbb
mov
xlat
adc
scas
cmp
pop
test
dec
scas
pop
xchg
bound
and
push
test
mov
mov
xor
add
add
scas
stc
mov
inc
pop
jmp
xchg
fs
and
add
or
adc
cld
test
cmp
test
add
mov
jp
xlat
in
call
sarb
pop
push
dec
int3
xchg
adc
vorps
adc
or
dec
lock
mov
mov
mov
cmc
mov
or
xchg
xor
mov
inc
sub
add
loopne
outsl
mov
inc
jno
adc
fnsave
outsl
aam
ret
jl
xchg
jne
pop
mov
sub
add
or
sub
enter
sbb
lea
sub
mov
outsb
inc
test
int
inc
cld
mov
jp
adc
sub
int3
addr16
sub
push
or
pop
adc
cmpsb
mov
xchg
mov
gs
pop
mov
jp
call
mov
sbb
dec
add
cmc
xchg
test
stc
adc
pop
fdivl
mov
pop
je
test
das
xchg
pusha
mov
call
sbb
jne
or
xor
cmpsl
stos
mov
fdivrl
cmpl
push
mov
jg
xchg
jmp
mov
adc
jmp
lods
jl
jp
dec
pop
shrb
int3
pushf
add
xorb
adc
test
aad
je
cmp
jno
stos
or
mov
imul
mov
mov
aam
rorl
aas
popa
rcr
sbb
popa
cmpsl
jne
icebp
int3
dec
or
mov
inc
mov
dec
xor
and
or
or
mov
or
hlt
inc
dec
push
mov
or
leave
jae
flds
mov
cs
push
push
or
ret
jnp
ret
sbb
leave
pop
xchg
daa
bound
gs
sub
add
adc
lea
pop
scas
cmp
scas
shrb
jg
shrb
xchg
push
filds
jmp
in
adc
stos
mov
repnz
xor
jmp
mov
mov
lcall
mov
fisubs
and
inc
hlt
mov
pop
movsb
scas
lret
in
mov
and
mov
add
jo
xchg
mov
xchg
adc
aas
pop
test
pop
fld
push
hlt
cmpsb
stos
sbb
les
dec
push
add
pop
pop
imul
mov
lcall
loope
push
dec
adc
mov
push
adc
adc
jne
jecxz
shlb
add
loopne
leave
push
std
movsl
loope
dec
push
xor
imul
inc
jp,pt
xchg
push
in
or
inc
adc
dec
inc
fsubl
mov
dec
xlat
pop
ret
arpl
pusha
push
call
mov
add
popa
loop
adc
and
or
sbb
mov
xchg
inc
or
push
or
jmp
cltd
and
int3
jns
mov
sub
cmp
fiaddl
push
jne
outsb
or
add
adc
cmp
inc
push
adc
stos
dec
sbb
dec
pmaxsw
push
hlt
outsl
pop
cmpb
ficoms
cmp
pushf
dec
sbb
sbb
stos
lahf
out
dec
sbb
mov
sbb
fcompl
or
loopne
arpl
in
sarb
cmp
inc
add
and
inc
adc
test
adc
pop
call
mov
in
lock
lea
out
filds
jae
mov
push
rolb
lods
les
scas
lret
sub
sub
pop
outsl
out
xchg
roll
lock
les
pop
adc
xchg
out
xor
subl
xor
sbb
popf
pop
aas
and
dec
sub
sub
and
or
sub
test
or
sbb
les
aam
or
sub
cmc
xor
inc
cli
sbb
dec
jg
and
mov
add
or
mov
push
imul
sbbl
add
cld
jne
adc
and
jmp
inc
pop
add
mov
push
sub
ret
adc
int3
ret
sbb
fisubrl
jl
mov
mov
mov
or
add
stos
jmp
mov
xor
cmp
cmpsl
cmc
mov
stc
push
ficomps
popa
ljmp
xor
adc
mov
xor
std
pop
dec
sbb
test
dec
lahf
shl
stc
lds
sbb
fs
repnz
sahf
std
cwtl
shll
xor
test
call
rolb
and
lret
js
adcb
inc
adc
xchg
sbb
test
pop
int3
sbb
sqrtps
testl
inc
add
xor
rolb
dec
dec
dec
mov
cmp
scas
sbb
pop
mov
add
mov
arpl
mov
sub
icebp
int3
push
jo
inc
mov
pop
jo
dec
or
cmp
movsl
add
xchg
mov
and
dec
sub
loop
sub
mov
dec
jg
and
or
popa
lea
js
sbb
cmp
xchg
sti
cmp
lea
sub
pop
sbb
mov
or
movsb
push
pop
adc
test
adc
jne
aaa
imul
inc
imul
xchg
xchg
fistps
aas
xchg
pop
and
push
rorl
imul
aam
imul
bound
add
popa
incl
adc
dec
xlat
dec
fwait
jl
xchg
sar
or
inc
or
xchg
mov
xchg
pop
mov
adc
repnz
xchg
std
sbb
adc
pop
daa
adc
popa
ret
in
and
sbbl
xor
adc
push
xor
push
repnz
jl
leave
ficomps
pop
leave
cld
and
dec
mov
cmp
adc
and
pop
pop
fadds
add
fidivs
call
fadd
inc
and
pop
in
cmp
sbb
test
push
lods
cmpsl
adc
inc
repnz
inc
xor
jnp
xor
movsb
sti
sbb
inc
inc
sbb
sbb
xchg
lock
fidivs
or
stos
rcpps
inc
inc
push
fmulp
sbb
inc
add
aaa
pop
jmp
int
inc
pop
push
xchg
enter
and
adc
jne
add
push
sub
dec
loope
gs
sub
dec
mov
call
cld
or
test
test
pop
clc
xor
ja
pusha
and
imul
outsl
push
mov
and
test
dec
mov
or
xchg
jg
dec
add
xchg
jae
movsb
sbb
cmp
int
xchg
addr16
fnsave
cmpsl
cmp
sub
xchg
sub
lret
movb
mov
add
hlt
add
jnp
cwtl
adc
push
movsb
enter
ljmp
and
lock
sbb
in
push
je
pop
in
imul
mov
dec
cmp
and
ja
bound
add
sub
mov
bound
mov
cmp
fidivl
cli
aas
jne
rclb
inc
inc
jmp
ja
push
jb
sub
jne
sbb
dec
mov
dec
inc
cmp
jb
test
push
cmpsl
mov
sub
dec
loopne
int3
mov
xchg
or
repnz
mov
or
rcrl
push
push
rorb
cs
icebp
push
mov
mov
shll
popl
test
movsb
data16
push
and
inc
and
or
pusha
mov
movsb
or
fdiv
push
xor
test
imul
cmp
add
xlat
call
in
jle
xor
lods
cld
push
add
inc
mov
int
mov
andb
mov
ja
fdivrl
or
adc
adc
shlb
push
data16
push
xchg
adc
out
push
xchg
adc
xchg
jb
and
sub
xchg
cmp
cmpsl
xchg
mov
or
sub
sbb
dec
push
mov
push
add
es
inc
cmp
mov
cmp
dec
cmp
mov
stos
adc
pop
mov
sbb
mov
inc
and
pop
aaa
sbb
add
xor
cmp
fs
xor
xor
out
push
enter
cli
push
fwait
sub
sub
xor
sub
pop
and
dec
xor
out
push
and
mov
jmp
jmp
sub
and
imul
inc
orb
mov
jmp
mov
jbe
dec
sbb
add
mov
fucomip
jne
stos
sub
xchg
mov
dec
xchg
xor
push
push
push
adc
or
movsb
push
pop
out
push
mov
sub
or
dec
fldl
inc
mov
mov
adcb
aaa
sbb
jbe
jbe
orb
push
add
in
add
jne
cmp
jb
sar
rorl
loopne
ja
pop
mov
clc
call
push
sbb
loopne
add
sub
and
addb
and
mov
cltd
cmp
shll
ja
insl
shl
popf
mov
ret
cmpb
leave
mov
jle
nop
sbb
jo
pop
xchg
dec
mov
or
jge
gs
aam
mov
repz
adc
push
mov
shl
je
sbb
shrb
jg
jl
xchg
mov
xorb
hlt
push
outsb
push
icebp
dec
lcall
or
subb
int3
adc
mov
add
clc
call
popa
mov
pop
stc
sbb
loopne
cmp
mov
xchg
push
and
loopne
adc
push
call
mov
sub
daa
jmp
adc
dec
bound
fcomp
mov
or
inc
fstpt
or
lret
cltd
adc
push
xchg
jl
inc
pop
hlt
lock
dec
and
test
push
jnp
ret
and
push
adc
cs
cmc
push
pop
mov
daa
cs
dec
rclb
out
and
mov
xchg
adc
or
mov
outsb
in
cli
and
pop
addr16
mov
and
jo
xor
lret
add
bound
pop
and
dec
lret
add
cmp
popa
dec
cli
and
shll
ret
and
inc
dec
les
bound
bound
mov
call
int3
push
and
nop
dec
inc
rclb
pop
sub
and
mov
les
in
popa
add
jb
out
imul
add
insb
add
outsl
or
mov
fs
cs
gs
js
clc
call
in
stc
data16
mov
mov
in
mov
adc
add
and
fs
push
aad
push
mov
xlat
xor
adc
adc
fcomps
push
jecxz
mov
out
pop
and
jg
push
outsb
sbb
add
or
gs
push
jne
push
mov
pop
push
jne
push
sub
movsb
test
push
push
inc
cli
jp
mov
sub
cmp
jne
hlt
push
loopne
mov
mov
or
jo
xor
mov
popa
cmp
mov
push
sbb
cld
adc
out
cmp
cmp
push
outsb
mov
mov
and
cmpl
dec
cmp
push
cmp
je
push
ja
aad
fsubrs
les
or
and
mov
cltd
jecxz
ret
cmp
loopne
cmp
push
mov
bound
loopne
hlt
arpl
outsl
fimuls
mov
inc
sbb
roll
jg
xchg
jg
scas
xchg
jp
rcrb
popf
mov
adc
pop
icebp
sbb
scas
jbe
inc
sub
inc
hlt
repnz
sub
adcb
gs
dec
cmc
in
mov
jmp
xlat
sub
je
mov
dec
clc
pop
jg
sahf
repnz
dec
mov
fsubl
mov
jp
pop
xchg
sbbb
push
add
test
inc
inc
xor
setne
mov
fdivs
pop
shl
lock
iret
dec
jbe
lea
dec
or
xchg
mov
inc
and
or
cld
xor
loopne
call
pop
lock
repnz
sub
push
sahf
imul
add
and
inc
or
push
or
xchg
push
shrb
jb
inc
fs
scas
mov
or
cmp
icebp
sub
mov
insb
lret
dec
jno
pop
sar
sub
cmp
push
mov
and
clc
push
stos
push
adc
jne
xchg
mov
inc
xlat
push
les
pop
shrb
aam
popf
in
in
adc
popa
iret
lahf
and
nop
jp
cmp
push
aad
adc
mov
lods
icebp
outsl
push
jb
lcall
inc
mov
pop
into
nop
test
pop
sub
mov
sub
bound
sbb
sbb
xchg
and
xchg
mov
adc
cmp
and
mov
add
and
test
lahf
fsub
jb
outsl
mov
std
notl
sub
adc
out
and
into
aad
std
jl
mov
sub
iret
xchg
jnp
scas
fsubl
xor
xchg
pop
mov
xchg
xchg
jmp
loope
sbb
std
scas
jnp
shrb
dec
icebp
adc
push
adc
das
clc
test
dec
mov
mov
popa
push
call
pop
negl
and
and
mov
fs
in
and
cmp
xor
pop
cmpsb
lock
enter
xchg
pop
jo
call
in
pop
sbb
mov
push
sub
hlt
sbb
mov
icebp
add
xor
frstor
xor
push
cmp
mov
cmpsl
cmp
adc
xchg
fmuls
lea
roll
lea
jp
loopne
and
mov
cmp
out
mov
rcr
inc
imul
ret
sub
push
pushf
adc
adc
sti
arpl
and
inc
mov
jae
mov
daa
adc
adc
sar
adc
mov
push
mov
xor
sbb
inc
push
test
or
les
mov
insb
jb
mov
xchg
or
jb
rcll
mov
or
add
pop
idiv
mov
movsb
repnz
mov
or
shr
or
ret
divl
jne
and
jp
movsb
clc
cs
rcl
sbb
jb
mov
fcomi
mov
and
or
dec
inc
mov
pop
dec
inc
pushf
push
mov
lret
fsubrs
or
pop
mov
mov
push
jl
pop
xor
xchg
jmp
mov
lods
or
inc
lret
fs
and
imul
test
test
adc
jo
jbe
orl
mov
cltd
pop
add
sub
push
ljmp
notb
pop
mov
jl
jns
movsb
xor
and
es
sub
mov
aad
cmpsl
mov
xchg
mov
xor
mov
call
inc
jns
int
xor
fisttpll
jmp
inc
inc
or
push
push
push
push
mov
or
lods
popf
loopne
les
sbb
das
mov
sbb
pop
out
sbb
das
das
adc
push
sarl
pop
out
jp
iret
ljmp
sub
dec
insb
jle
or
push
out
das
mov
repz
dec
xchg
push
loopne
and
adc
int
or
and
out
mov
xchg
test
es
repz
das
daa
xchg
and
je
inc
sub
pusha
sub
adc
add
andb
sub
movsb
sbb
mov
js
adc
sub
xchg
adc
jo
cmp
popf
sub
jmp
fs
xchg
scas
xchg
mov
and
cmp
jne
call
test
inc
test
sti
divb
inc
int3
jmp
xchg
mov
test
in
xchg
xor
adc
add
orb
mov
push
adc
clc
int3
inc
push
or
inc
cmp
sub
mov
dec
inc
mov
test
cmp
mov
sub
decl
dec
or
add
iret
xor
lret
or
dec
mov
icebp
loop
push
sub
je
push
mov
pop
mov
test
insb
mov
and
test
sahf
out
call
hlt
aaa
hlt
xchg
dec
insb
test
nop
inc
adc
dec
lock
adc
dec
xor
push
pop
cltd
xor
or
adc
dec
clc
gs
test
jne
xchg
enter
ret
xor
xchg
inc
pushf
jl
jne
jns
adc
pop
mov
cmc
nop
cmp
je
cmpsb
imul
in
int
mov
dec
imul
mov
push
or
aaa
cmp
sbb
push
add
shlb
roll
das
inc
xor
or
xor
lahf
mov
pop
nop
dec
sbb
stos
cmp
push
adc
fs
and
insl
sti
inc
sti
pop
mov
dec
test
cmpsb
cmpsb
mov
and
jmp
dec
add
adc
ficoms
jne
sbb
mov
xor
inc
fnstsw
inc
iret
movb
jge
inc
xchg
and
dec
and
push
pop
insb
inc
fisttpll
test
mov
or
mov
enter
push
stos
testl
call
and
int3
push
repz
pop
add
mov
and
adc
cmp
popa
xorb
jmp
mov
push
xor
adc
inc
mov
mov
cmp
inc
cmp
jl
or
lahf
inc
pop
cli
pop
fnstsw
mov
test
mov
jne
test
sbb
add
lahf
mov
test
push
jmp
in
sub
mov
pop
pop
mov
sbb
add
roll
and
inc
push
dec
or
xchg
cld
cmp
or
out
push
cltd
aas
sbb
xor
xchg
push
add
or
clc
adc
mov
dec
adc
mov
test
push
add
sub
jge
cmp
pop
loope
sbb
int3
sbbl
lock
frstor
das
fucomp
imul
xchg
adc
cwtl
or
dec
mov
jne
mov
icebp
lcall
mov
movsb
out
call
insb
mov
dec
in
mov
outsl
add
sbb
adc
pop
cmp
and
xor
dec
push
xor
call
xlat
test
adc
pusha
pusha
mov
mov
or
dec
iret
inc
jmp
cltd
pusha
xor
adc
mov
leave
xchg
sbb
cltd
and
mov
jns
movsl
and
ja
ds
lock
mov
rclb
loope
add
popa
mov
rorb
enter
and
das
dec
fsubrs
mov
aas
sbbl
scas
fisttps
stos
cmp
in
cmp
jle
dec
push
jl
test
sti
pop
ds
mov
loop
das
pop
jp
xor
lods
dec
cmp
mov
jmp
sbb
mov
xorl
dec
sbb
lods
xchg
adc
enter
pop
lods
inc
sub
adc
sub
sub
inc
jmp
cmp
leave
daa
invd
xchg
inc
add
jmp
or
addb
add
mov
pop
xchg
out
fildl
push
pop
inc
and
sub
inc
lea
mov
mov
cwtl
mov
inc
inc
add
shl
xchg
pop
pop
mov
scas
sub
mov
rcll
push
or
dec
mov
lret
gs
or
xor
cwtl
das
nop
adc
loopne
sbb
dec
lea
pop
mov
mov
sub
jnp
mov
push
das
rorl
inc
push
xchg
call
add
or
inc
addr16
jp
aad
sar
sbb
cmp
mov
inc
ret
jno
outsl
lahf
and
sbb
int3
popw
dec
cs
jl
je
sbb
jl
fidivrl
or
fdivs
call
xchg
sub
mov
out
outsw
imul
adc
mov
jae
mov
jnp
sbb
add
sti
push
mov
and
cmp
ficoms
mov
pop
pop
mov
subb
lahf
mov
sub
dec
lds
jl
dec
fsts
jmp
sbb
std
les
mov
call
pop
daa
imul
xchg
xchg
pcmpeqw
in
or
or
fucom
adc
adc
pop
mov
into
cmp
je
inc
sub
jl
pop
into
pop
leave
stos
or
cwtl
repnz
mov
cmp
or
nop
cmc
rol
or
mov
mov
daa
or
adc
or
popf
cmp
push
mov
xor
lret
xor
in
shrb
add
mov
cld
insl
mov
push
cld
sbb
shl
inc
adc
sbb
fstpl
push
mov
add
sub
add
dec
xor
lahf
cmp
ja
cmp
or
mov
jno
or
and
lock
sub
sbb
push
xor
cmp
sbb
inc
cmp
pop
mov
and
mov
das
cmpb
aas
jne
rcll
or
cld
xlat
pop
out
dec
sti
adc
or
lock
repz
dec
push
call
inc
dec
mov
enter
and
mov
aad
test
das
jns
push
and
insb
clc
leave
das
popf
fisttpl
pop
dec
mov
inc
mov
clc
jg
arpl
or
test
and
add
lea
das
mov
fdivl
in
std
xchg
sahf
mov
aaa
adc
inc
lea
enter
flds
sub
pop
out
shlb
add
pmaxsw
clc
push
les
or
sti
xor
nop
aam
adc
and
adc
std
xor
or
sub
jns
push
lcall
fmuls
in
pop
rorb
mov
push
cmpw
jne
and
adc
test
cs
mov
cltd
and
orb
mov
insl
add
in
and
xchg
idivl
add
and
xor
inc
mov
icebp
push
scas
fs
jb
stos
cmp
dec
or
pop
notb
pop
push
adc
push
movsl
ja
cmp
call
dec
aad
pop
leave
mov
cmpsb
add
add
push
clc
outsb
xor
orl
and
ja
sub
dec
adc
lock
pop
out
adc
ret
jecxz
cmp
pop
ja
and
dec
movsl
scas
adc
xlat
inc
inc
inc
or
push
xor
inc
sub
push
lahf
std
shld
lea
adc
bound
mov
or
ret
repnz
cmc
pop
xor
add
push
dec
xor
dec
jg
shlb
push
ljmp
add
mov
inc
cld
mov
cmovnp
mov
sub
adc
dec
inc
dec
cld
jmp
mov
dec
loope
sbb
in
cli
test
incl
adc
test
pop
aaa
arpl
push
test
add
je
scas
jb
push
xchg
loopne
mov
ljmp
lock
push
hlt
stc
or
mov
and
or
imul
loopne
stos
sub
popf
sub
push
adc
sbb
add
adc
xor
or
push
mov
or
and
das
or
push
loopne
xor
xor
inc
or
out
test
dec
adc
mov
enter
neg
mov
repnz
pop
shll
inc
push
or
cmp
adc
clc
inc
jo
and
aad
lds
xor
push
scas
les
add
call
sub
jg
xlat
cli
leave
outsb
repnz
lods
mov
xor
jnp
and
cld
add
cmpl
je
das
les
shlb
out
push
jp
mov
mov
adc
cmpb
xor
cmpsl
mov
sarb
add
imull
and
and
repz
sahf
mov
xchg
mov
inc
add
cmc
jb
pop
pop
pop
pop
xchg
dec
jo
hlt
and
mov
insb
sbb
mov
daa
call
repnz
das
icebp
adc
adc
push
inc
clc
gs
idivl
push
loop
fcomp
cmp
sbb
dec
faddp
mov
cld
xor
test
insl
jmp
cmp
mov
outsl
call
insb
sbbb
fistps
xchg
fs
and
jbe
leave
add
xor
ret
dec
or
repz
dec
mov
sbb
pop
rol
test
mov
sub
pop
popf
mov
adc
dec
stos
xchg
popf
mov
sbbl
xchg
sub
mov
hlt
cmp
inc
adc
or
push
stos
mov
dec
add
sub
add
add
gs
out
sub
stos
xchg
and
ljmp
xchg
jge
js
rol
call
das
jl
ja
fldl
jmp
inc
mov
cmc
or
je
imul
data16
outsb
clc
sub
mov
lock
push
pop
lock
call
sub
scas
xchg
icebp
test
movsl
sbb
jbe
daa
jo
lahf
pop
push
xchg
inc
push
cmp
sarb
insb
fisubs
enter
pop
pop
push
lret
xchg
xor
mov
inc
dec
std
outsb
std
xor
mov
mov
fisubrs
push
in
lods
or
sub
paddw
rclb
cmc
daa
cmova
sub
in
lods
call
fnstsw
inc
add
mov
scas
lahf
mov
adc
js
dec
mov
jae
push
mov
xchg
mov
bound
hlt
movsb
iret
lods
cwtl
fcoml
jle
xor
inc
into
xor
xchg
jg
stos
out
dec
ret
shll
push
fsubrl
or
mov
adc
push
outsb
mov
cld
or
lret
inc
sub
or
pushf
jne
sub
fidivrl
mov
xchg
gs
cli
mov
jge
inc
adc
sahf
xor
dec
aam
sahf
cltd
inc
clc
imul
jae
sub
das
fcoml
mov
iret
popa
mov
aam
incl
cmp
sbb
push
call
imul
dec
repz
sbb
or
jmp
mov
cmp
xchg
push
ljmp
sbb
pop
adc
stc
test
inc
sti
scas
and
enter
sti
xchg
push
imul
adcb
mov
and
push
jle
call
pop
cli
mov
fcomps
outsl
fwait
out
enter
sbb
adc
daa
push
mov
sub
lods
repz
addr16
or
mov
jb
lahf
in
daa
out
aam
mov
jp
add
sub
push
call
cmp
fld
push
outsl
adc
jbe
cmpsl
mov
push
jg
mov
inc
sub
push
addr16
sbb
lret
daa
int3
inc
orb
dec
sbb
loopne
add
cli
jne
mov
fdivs
std
xor
cld
sbb
scas
out
lret
sub
pop
push
mov
push
hlt
stos
popf
pop
inc
fdivrl
incl
ret
fisubrl
call
xchg
sti
test
jmp
pusha
shl
gs
mov
jbe
std
outsl
add
cmpsb
push
lea
mov
push
xchg
inc
push
xchg
push
je
fs
xor
bound
ja
call
test
shr
xchg
adc
inc
mov
enter
fs
adc
insb
ret
ljmp
xor
jmp
push
adc
push
lret
je
push
mov
lods
inc
jo
jp
addl
push
mov
js
cmp
or
mov
adc
aam
push
ds
adc
std
adc
mov
ljmp
nop
inc
aam
pushf
jmp
js
xchg
inc
inc
fldl
je
jmp
mov
in
and
mov
movsl
dec
cmpsl
loope
ret
aaa
into
jge
les
pop
iret
or
mov
rclb
jb
mov
cli
cmp
js
push
add
cmp
xor
or
test
jno
call
test
mulb
imul
push
pop
or
mov
in
pusha
jbe
xchg
das
sti
xchg
adc
jp
mov
sar
cmpsb
mov
lahf
js
ja
mov
cwtl
call
or
mov
xchg
pop
or
sub
lea
enter
mov
xor
or
xchg
or
xor
jnp,pt
lahf
in
lock
outsl
cli
mov
addb
popf
cmp
add
cmpb
inc
jg
shll
aad
stos
test
lods
inc
ljmp
fs
testl
aam
pop
inc
mov
adc
rolb
push
fmull
dec
push
or
loopne
push
in
int
out
xchg
xchg
sub
fisubs
lret
jmp
mov
xor
add
mov
mov
xor
enter
mov
add
mov
push
adcl
mov
mov
test
adc
lret
addr16
repz
sub
fwait
pop
jbe
out
lahf
imul
pusha
and
iret
or
mov
adc
test
xor
xor
mov
aaa
daa
ja
jne
mov
sub
push
ret
sbb
push
or
roll
or
aam
or
adc
push
fadds
jle
rol
or
adc
cmp
jne
pop
cmp
imul
dec
push
in
cmpsl
lahf
and
inc
sbb
push
call
jge
andl
pop
mov
cltd
idiv
stc
inc
add
ret
jbe
mov
or
xchg
mov
inc
dec
jne
hlt
pop
ret
out
daa
sbb
andps
lret
fstpl
or
or
cmp
sub
mov
stc
inc
data16
adc
xchg
and
std
mov
sbb
jle
sbbb
cld
lods
xchg
mov
xor
cli
or
ret
je
dec
aad
adc
and
test
stc
or
addl
xchg
or
xchg
je
popf
push
xchg
or
pop
cmp
cwtl
lds
adc
sub
pop
push
je
test
jo
test
stos
add
or
mov
pop
xchg
dec
dec
test
test
pop
je
sub
inc
leave
adc
nop
inc
pop
nop
jno
xchg
inc
cs
inc
pop
sbb
pushf
inc
or
inc
fbld
cmp
mov
sub
xchg
jg
mov
cvtpi2ps
insb
push
movsb
cmp
loop
sub
and
call
inc
stc
stc
in
or
clc
std
sub
pop
pop
in
cmp
ret
into
clc
cmp
or
inc
xchg
jae
or
rorb
xor
orl
ds
push
xchg
inc
ret
sbb
subl
jns
jmp
test
and
jae
rorl
test
in
or
xor
adc
push
xchg
test
jmp
or
fisubrl
or
pop
dec
or
xor
or
xor
mov
xchg
inc
cwtl
cmp
jns
js
add
adc
xchg
pop
xor
push
mov
sti
int
cld
mov
and
das
popa
test
mov
pusha
daa
add
xchg
pop
inc
pop
dec
xor
adc
mov
mov
dec
cld
outsl
stos
xchg
or
mov
sti
dec
push
push
out
ret
jne
lock
pop
jne
inc
imulb
mov
or
adc
jo
imul
xor
add
out
je
call
mov
cmc
js
cmc
cld
mov
xor
imul
cmp
push
mov
or
loopne
call
in
enter
dec
and
loope
push
fldt
lahf
cli
lret
xor
cmp
jnp
jmp
ficomps
push
push
data16
dec
add
sbb
pop
sbb
shr
xor
or
jmp
idivl
mov
push
frstor
xor
in
aad
add
mov
or
mov
sub
pop
imul
inc
cmp
sti
jae
hlt
rolb
cmp
lock
lea
add
mov
push
cmp
lahf
sub
shlb
jge
test
mov
imul
mov
jne
push
pop
clc
sub
lock
out
xor
mov
adc
dec
jnp
jp
push
loopne
test
mov
xor
adc
add
jle
jl
inc
stos
and
inc
cmp
push
dec
push
push
and
or
decl
loopne
xchg
je
les
pop
lret
jnp
incl
push
jge
push
fldt
inc
pop
inc
pop
xchg
inc
mov
rep
andb
sbb
call
popf
pushl
jp
imul
sbb
sar
std
jmp
imul
jae
cmp
jne
fdivrp
cmc
hlt
cmp
add
shr
packssdw
rolb
das
out
xchg
ret
jecxz
xchg
lea
push
enter
aas
jp
push
out
fists
sub
dec
add
call
stos
sbb
pop
js
incb
jmp
mov
mov
push
xchg
in
shl
inc
fs
cmp
jle
call
or
pop
pop
adcl
xor
or
push
mov
cmp
sub
andw
mov
and
mov
ljmp
jmp
leave
cmp
or
jno
in
lock
xchg
push
call
rcrl
addb
mov
adc
pop
pop
cwtl
call
xchg
mov
rcrb
add
or
mov
je
add
add
mov
push
or
push
call
adc
call
sbb
xchg
push
repnz
or
aaa
push
push
sub
decb
add
jne
xchg
xor
pop
je
pop
pop
or
out
gs
add
in
lock
xchg
stos
jne
or
loope
repnz
andb
fsubs
push
sbb
xor
inc
inc
mov
test
test
hlt
dec
adc
dec
xchg
push
js
cli
enter
inc
add
testl
dec
and
push
mov
dec
les
hlt
push
inc
clc
push
mov
adc
and
dec
push
xchg
bound
jb
jle
mov
inc
in
cld
mov
stc
fyl2x
or
adc
and
dec
pop
xchg
insb
and
mov
and
dec
clc
xchg
or
mov
sahf
adc
subb
or
dec
add
and
inc
ror
mov
adc
xchg
and
js
mov
xchg
jno
and
adc
add
adc
or
xchg
or
es
cltd
xor
inc
adc
jo
jle
xchg
and
push
pop
cwtl
jg
dec
ljmp
pop
jle
sub
xor
or
pop
lock
repnz
sbb
test
in
sbb
dec
repnz
and
adc
enter
enter
ss
loop
repz
ret
pop
or
cmp
repz
cld
js
loop
ds
test
mov
ja
push
jo
hlt
jne
psraw
hlt
or
inc
push
sub
sbb
xchg
adc
fs
inc
lock
push
notb
mov
or
mov
adc
dec
loop
sti
add
dec
call
loopne
dec
or
cmp
lods
add
fstpl
sub
adc
push
imul
in
push
in
movsl
cmp
scas
fs
stos
lods
sti
nop
xor
in
popf
pop
sbb
xor
jae
sub
mov
and
and
call
push
imul
test
push
add
jns
sub
sarb
stos
fwait
pop
dec
stos
aam
push
stos
cwtl
jl
dec
outsl
stos
popf
xchg
shll
dec
repnz
pop
adc
xor
dec
jo
cltd
cmc
cmp
aaa
sbb
push
jae
jmp
push
mov
insl
stos
into
scas
jo
pop
push
jg
lahf
fs
stos
test
push
push
xchg
xchg
scas
mov
shrl
stos
sbb
into
test
fisttpl
stos
xchg
or
punpckhwd
add
cmc
jae
bound
mov
push
inc
xchg
adc
dec
push
push
push
scas
cli
push
push
and
sub
pop
or
cwtl
or
js
cltd
jne
mov
stos
xchg
xor
lfs
stos
lods
or
test
scas
cmp
jno
jecxz
js
stos
call
fs
pop
add
push
inc
scas
jo
pop
adc
dec
stos
fisubl
mov
adc
or
dec
stos
adc
jbe
add
hlt
jae
push
or
inc
fwait
pop
mov
xchg
and
inc
sbb
fldcw
jnp
nop
lcall
ficomps
or
insl
xor
pop
jno
push
pop
sub
and
sbb
pop
xor
dec
or
pop
xsha1
cmpsb
or
jl
pop
sbb
lds
xchg
pop
and
jae
jns
out
nop
cltd
loopne
fists
arpl
ret
sub
jmp
mov
data16
dec
fildll
sub
loope
inc
adc
pop
movsl
mov
xchg
jecxz
popa
int3
jp
push
and
sbb
jecxz
xor
mov
cmp
repnz
stos
cmpsl
stc
dec
stos
fsubrs
mov
and
test
dec
sbb
adc
push
or
sbbb
dec
popa
stos
xlat
movsb
jne
or
jbe
addl
jg
aas
mov
popa
out
pop
sti
bound
and
cmp
push
jo
orb
pop
int3
dec
dec
pop
sti
push
inc
xor
adc
jmp
out
add
add
lret
flds
sbb
loop
and
sbb
stc
or
and
shlb
cmp
mov
bound
imul
out
fcom
pop
adc
pop
push
or
push
inc
push
and
push
inc
inc
or
outsl
jb
rcll
nop
fmuls
dec
jmp
adc
shrb
jae
daa
or
dec
push
xor
clc
je
pop
adc
inc
popa
pop
jb
inc
insb
outsl
adc
push
inc
adc
je
out
in
mov
adc
xor
insl
xchg
je
pop
push
loopne
inc
inc
push
movsl
je
jbe
and
shll
cmp
pop
idiv
pop
gs
xchg
mov
sub
and
jns
pop
jae
sub
jo
cmp
cmc
popf
mov
ret
sub
data16
and
test
cmp
fisubs
ds
or
sbb
or
das
push
push
adc
insb
imul
orl
sbb
cmp
je
pop
jne
xor
xor
mov
mull
arpl
adc
js
dec
xor
xor
outsb
jo
pop
dec
enter
inc
mov
loopne
bnd
je
push
dec
shll
xor
es
adc
or
cmp
xor
test
xor
dec
xor
lahf
mov
push
out
sub
jae
shlb
into
dec
cld
hlt
popf
sbb
ret
loope
jo
inc
sbb
dec
lds
dec
inc
inc
or
arpl
lcall
adc
aas
outsl
aas
jo
inc
xor
test
stc
sti
lds
cmp
in
ja
push
or
sub
lahf
pop
sub
jae
cmp
xor
es
mov
andb
jl
push
jl
fcompl
push
sbb
shll
andb
es
pop
cmpsb
test
push
jbe
es
xchg
addr16
je
push
inc
jne
push
dec
or
push
scas
mov
push
dec
aas
sbbl
divl
fsts
mov
inc
xchg
cmpsb
adc
insl
push
fstpl
arpl
fcom
popa
xchg
int
fnstcw
or
test
and
mov
pop
int3
test
xchg
xchg
cs
outsl
mov
add
pop
sbb
jne
jb
inc
jo
dec
adc
movsl
lea
sahf
sub
cwtl
ljmp
cmc
adc
mov
sub
in
xlat
or
or
loop
push
or
es
imul
mull
and
ss
push
jae
pop
push
int
jg
push
push
test
or
addr16
cli
sbb
mov
push
mov
pop
adc
push
in
mov
shll
push
mov
test
mov
rcll
xchg
pushf
sub
aaa
aaa
leave
mov
sbb
movsb
xchg
add
mov
mov
mov
sub
in
dec
cmp
call
or
jmp
mov
outsb
jae,pt
xchg
cmp
jo
or
sbb
jl
and
cs
pushf
xlat
das
cmp
aaa
insb
sahf
xchg
push
xor
cmp
iret
and
pop
or
push
mov
sbb
arpl
cld
mov
int3
push
jo
testb
xchg
in
js
cmc
fs
xor
je
test
ret
cmp
add
das
push
outsl
jo
xchg
arpl
dec
cld
xchg
jp
cmp
and
jne
fadds
cmovle
pop
push
dec
xorb
xor
add
inc
dec
insl
pop
cwtl
bound
aas
popa
pop
stc
jl
push
sbb
out
jns
nop
aas
arpl
sti
gs
and
xor
xchg
dec
xchg
xor
pop
sub
sub
xor
or
lcall
iret
sub
and
xor
test
mov
sbb
test
test
push
cmpsl
push
dec
andb
xchg
jo
dec
inc
sbb
repnz
adc
bound
repz
dec
dec
outsl
enter
or
push
ja
xchg
sub
add
sub
sub
inc
cmp
jo
aas
data16
cmp
sbb
sbb
into
add
addr16
loope
push
sbb
dec
fs
jg
push
and
jae
or
and
mul
or
jbe
xchg
loopne,pn
inc
jns
mov
dec
in
and
into
mov
mov
cld
xchg
xor
mov
pop
xor
movsb
rclb
bound
out
adc
les
aaa
cs
cmpsb
sub
in
daa
scas
lea
push
movsl
sbb
or
xchg
xchg
fists
popf
cs
stos
aam
dec
dec
add
push
stos
gs
jae
xchg
stos
aam
or
adc
and
and
daa
and
sbb
adc
jo
sbb
gs
add
adc
inc
inc
fiaddl
inc
jnp
popa
bound
sub
sub
jnp
cwtl
add
call
cmp
cmp
mov
es
sub
push
movsb
push
test
mov
and
lock
nop
xor
xchg
xor
xchg
js
pop
daa
lcall
daa
jge
out
jl
repnz
out
mov
or
jecxz
js
aaa
or
inc
sbb
sbb
outsl
push
mov
aad
dec
and
inc
cmp
xor
inc
mov
andl
js
adc
push
and
addr16
mov
mov
or
jp
int
cmp
xor
or
es
dec
dec
es
xor
mov
xchg
push
fs
xor
mov
xor
aas
aam
rcrl
jmp
xchg
jae
inc
adc
pop
lret
inc
xor
jo
sub
push
pop
inc
xor
ja
sbb
add
rclb
add
testb
flds
and
push
mov
mov
adcb
sub
mov
push
sbb
sbb
enter
hlt
outsl
add
mov
call
jg
ficoml
push
jne
rcll
cmp
add
lret
sub
cmp
je
adc
mov
lahf
fwait
call
ja
pop
clc
dec
or
jge
pop
aas
sbb
inc
lds
loopne
cmp
into
fdivl
outsl
and
sub
imulb
leavew
mov
push
inc
pop
cld
clc
daa
in
add
and
icebp
sbb
adc
in
sbb
inc
push
pop
or
push
ja
add
fisttpl
hlt
lea
xchg
and
pushf
dec
xor
mov
dec
pop
and
iret
test
shrb
and
insb
xchg
into
pop
roll
lret
jp
jmp
js
mov
mov
mov
mov
rol
mov
pop
cmp
cmp
mov
mov
pop
mov
mov
mov
loope
mov
pop
adc
shll
mov
push
sub
mov
jl
push
push
inc
neg
push
dec
imul
inc
cmp
or
sbb
and
xchg
jl
movsb
dec
push
push
dec
dec
dec
test
dec
mov
cs
sub
arpl
fstpl
and
mov
pusha
add
push
push
push
push
daa
push
push
je
adc
push
sbb
scas
pusha
fists
cmp
or
add
pop
pop
pop
pop
pop
out
adcl
fsubrl
adc
incb
hlt
or
adc
ret
loope
dec
xor
test
inc
loopne
push
push
rclb
and
xchg
mov
mov
mov
and
push
sub
add
or
dec
decl
push
adc
sbb
nop
and
sbb
std
or
adc
jo
and
add
cmp
add
add
ss
add
push
addps
xor
mov
pusha
cmp
mov
push
cmp
adc
sub
je
rolb
aas
jo
dec
lds
inc
cmp
ret
pop
or
jae
outsb
mov
dec
scas
lret
xor
add
push
xor
xchg
xor
pop
inc
rcl
xor
jge
daa
outsl
arpl
xor
hlt
jl
mov
imul
repnz
pop
and
jne
lea
out
adc
test
inc
sbb
sub
xor
dec
inc
push
rolb
pop
dec
imul
inc
data16
adc
add
inc
js
insb
outsl
sbb
push
push
clc
xor
xchg
rcll
dec
lods
push
push
ret
loopne
addr16
push
sub
sbb
or
faddl
inc
dec
pop
popa
push
jle
addr16
push
andps
imull
fs
dec
popa
lock
push
iret
andb
aad
and
outsb
bound
pop
mov
adc
je
inc
jae
jge
lods
mov
cmp
sbb
add
jo
add
jne
push
rorl
push
sub
or
lcall
cmp
jl
inc
out
or
outsl
sub
dec
jne
jno
lds
mov
sbb
in
sbb
pop
call
aas
pop
jbe
mov
lea
mov
mov
aas
in
dec
mov
inc
inc
push
cmp
mov
mov
inc
and
sbb
ret
je
pop
ljmp
scas
test
call
pop
cli
jp
jo
push
fwait
or
mov
dec
sbbb
and
les
sbb
cli
aam
lret
sarb
add
int
cmp
in
sahf
and
cmp
mov
sub
cmp
imul
popf
sbb
push
int3
or
sub
pop
inc
pushf
push
dec
aas
inc
dec
jae
sub
cmpsb
imul
das
sbb
inc
pop
arpl
outsl
xor
sub
mov
inc
mov
std
dec
movsb
lods
test
push
pop
and
jo
cmp
lods
cld
xchg
lods
nop
xchg
mov
adc
dec
dec
add
test
andl
fmuls
mov
cmp
xchg
hlt
cmc
in
mov
mov
mov
les
jl
push
mov
pop
fs
sbb
mov
or
pop
sbb
and
stc
mov
jb
stc
cld
xchg
adc
jns
test
std
loope
out
mov
inc
cld
repz
stos
mov
lods
cli
mov
out
jmp
mov
add
mov
movsl
cmpsb
sbb
mov
scas
and
add
rcl
jb
inc
fstp
sbb
fcmovu
inc
mov
ret
iret
lret
enter
xchg
xchg
sbb
xchg
xchg
inc
lahf
pushf
sahf
and
add
addl
sbb
mov
jg
icebp
mov
repnz
shrb
sbb
mov
cmpsl
in
movsb
or
stos
mov
adc
add
iret
adcl
nop
xchg
mov
ret
cmp
mov
pop
mov
sbb
loopne
test
icebp
in
loop
add
loope
out
jmp
in
inc
cwtl
into
fcompl
popf
int3
shll
lret
xchg
fxch
pop
enter
cmp
pop
mov
mov
out
push
mov
stos
cli
clc
out
shl
stc
mov
repnz
mov
imul
out
stos
out
hlt
testl
pusha
enter
addl
fnstsw
movsbl
call
stos
mov
mov
and
data16
stc
mov
movsl
movsb
jmp
shlb
ja
ljmp
xchg
rorl
xlat
into
mov
ja
pusha
push
cld
pusha
mov
std
pusha
mov
mov
cmc
add
mov
loopne
js
sbb
out
xchg
in
and
xchg
fcom
les
push
mov
int3
lds
cmpsl
cmp
xchg
mov
mov
mov
call
mov
clc
jmp
in
loop
cmpxchg
cmpsl
lock
movsb
fld
cltd
les
faddp
lds
stos
shl
add
cmpsb
fsubl
cld
cmp
cmpsl
mov
pmaddwd
mov
mov
roll
rol
int3
ret
cmp
fwait
xchg
stos
stos
pushl
mov
scas
cmc
cmpsb
push
mov
inc
stos
sub
div
mov
mov
add
xchg
fstl
lock
shll
ror
sub
mov
or
stos
cli
hlt
idiv
loopne
mov
clc
repz
int3
mov
call
mov
in
std
clc
jae
jg
shrl
mov
mov
je
jno
ja
cmp
jmp
popa
repz
mov
adc
incl
ffreep
ret
sahf
adc
aad
loop
jbe
jge
jle
lds
arpl
or
fldcw
cli
test
jl
outsl
jno
add
dec
add
push
js
or
jne
adc
add
adc
repz
vmread
xorb
jge
sbb
dec
and
and
fstp
stc
les
push
scas
mov
idiv
push
out
loope
movsb
xchg
dec
adc
cs
dec
repnz
sbb
movsl
add
repz
lret
adc
inc
test
inc
or
or
or
das
insl
imul
cmp
and
sbb
aas
xchg
clc
and
cmp
pop
sbb
sbb
and
dec
mov
dec
inc
popl
mov
jp
jge
push
inc
pushf
and
push
and
adc
and
popf
and
jns
inc
and
aas
jg
stc
cmp
loope
ljmp
loop
mov
xor
test
mov
pop
or
xor
rorl
fs
xor
dec
sub
xor
mov
lret
inc
cmp
xchg
xor
push
sbb
daa
jnp
add
mov
fstl
add
xchg
push
sbbb
sub
add
adc
nop
add
and
xor
push
jo
addr16
or
jo
jo
outsl
dec
and
or
push
mov
dec
mov
inc
or
aas
push
cltd
add
add
adc
add
mov
imul
into
adc
mov
sbb
sbb
int3
or
or
bound
in
xor
insl
ss
mov
push
or
popa
xor
cmpsb
lds
add
dec
lds
loope
pop
dec
leave
pushf
insb
and
and
sub
jns
dec
jo
je
data16
data16
gs
loope
test
gs
or
pop
and
xor
push
outsb
jo
jns
add
cmp
push
xchg
push
push
push
jle
movsl
dec
xchg
xor
or
xorb
add
xor
aam
adc
or
xor
lods
cmp
add
imul
jmp
mov
imul
xor
mov
push
push
dec
xor
inc
repnz
inc
xor
and
xor
imul
dec
jmp
jle
test
and
push
cmp
jbe
nop
push
jo
push
jne
bound
gs
push
xor
outsl
and
arpl
mov
mov
fsubs
fidivl
inc
sub
dec
ljmp
les
cmp
js
out
lods
mov
lea
ljmp
push
inc
xor
insb
mov
lcall
add
mov
sbb
xor
popf
or
push
pop
lahf
and
lahf
push
lahf
popa
lahf
ja
jle
sbbl
lahf
mov
mov
mov
lahf
hlt
xchg
xor
daa
mov
pop
aaa
fnstsw
nop
fists
lahf
movsl
lahf
stos
lahf
scas
lahf
rcrl
incb
and
outsl
push
dec
lahf
mov
xchg
lahf
cmpsb
lahf
mov
mov
mov
lahf
fcomps
pop
daa
inc
inc
push
imul
mov
cltd
out
out
out
out
loope
xor
insl
fsts
icebp
cmpsb
stc
mov
mov
stc
out
stc
cmc
clc
adc
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
aaa
imul
push
mov
mov
sarl
jmp
add
push
popf
or
inc
jl
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
or
inc
lahf
dec
pop
push
lahf
jp
xchg
lahf
lods
lahf
les
cli
xchg
inc
daa
js
shll
shll
xor
leave
dec
rcrl
jo
mov
cmp
jbe
js
jp
jl
sbb
ds
sahf
xor
pop
popa
lahf
data16
lahf
xchg
lahf
mov
mov
aas
or
cmp
dec
gs
out
out
in
mov
dec
cmp
or
sub
mov
fcmovnb
icebp
out
out
loope
xor
leave
xor
cmp
mov
sarb
aas
icebp
aas
idivb
sti
push
or
sub
mov
dec
xchg
test
lahf
mov
lahf
fcomps
add
sbb
addr16
sbbb
lahf
lods
lahf
aam
fistpl
dec
xchg
js
mov
ret
jae
jg
repz
repz
icebp
ss
mov
aaa
push
in
call
mov
std
sarb
in
call
jno
movsl
clc
mov
in
cld
hlt
cld
push
cmp
cmp
cmp
icebp
aas
clc
sbb
add
fldcw
jmp
mov
stc
hlt
clc
add
cmp
ds
aas
lock
clc
push
sbb
mov
into
fsubp
in
pop
xlat
notl
fwait
addr16
stc
mov
sub
cmp
dec
loope
jmp
lret
stc
call
pop
cmp
or
sbb
push
cmp
cmp
push
aas
nop
aas
xchg
aas
lret
aas
xlat
aas
clc
aas
incl
dec
loope
daa
dec
daa
xchg
cmpsl
inc
pop
out
xchg
out
out
out
loope
xor
leave
roll
push
loope
jmp
movsb
stc
mov
stc
cld
clc
push
xor
je
jbe
js
jp
dec
jg
iret
mov
leave
in
add
cmp
loope
jmp
popf
xor
cld
std
cld
pop
cmp
cmp
pusha
ret
xchg
jle
les
iret
ljmp
imul
jb
je
jbe
js
jp
jl
jle
jle
xor
add
ret
imul
lods
sti
mov
mov
repz
sub
cmp
data16
cltd
lock
xchg
data16
cmp
sahf
dec
push
push
lahf
pop
pop
push
lahf
xchg
iret
stos
iret
mov
mov
iret
in
cmc
cmpsl
les
daa
push
inc
pop
addr16
mov
cmp
push
lock
cld
clc
pop
cmp
cmp
dec
pop
mov
orb
dec
mov
iret
fmul
loopne
in
iret
test
leave
sbb
jb
adc
mov
dec
mov
loope
out
std
ret
pop
xchg
dec
fndisi(8087
hlt
and
inc
insb
xor
call
mov
popf
das
sbb
jne
jl
cwtl
lahf
mov
mov
xor
daa
inc
inc
jbe
inc
shl
loopne
xor
in
lcall
sarl
jle
jle
jle
jle
es
adc
inc
xchg
dec
fcmovb
and
pop
mov
leave
cld
jnp
xorl
les
fmuls
and
sub
mov
dec
jns
xchg
iret
lcall
fsub
repnz
loope
aaa
xor
mov
hlt
icebp
clc
stc
cld
sbb
cmp
cmp
dec
cmp
cmp
lahf
loop
add
dec
daa
cmp
xchg
xchg
adc
xor
decl
iret
pusha
iret
addr16
insl
iret
jae
jns
jg
test
mov
iret
ror
loope
add
out
in
rol
or
mov
jecxz
repnz
dec
pop
outsl
je
jle
mov
cld
ret
cld
inc
cs
adc
incl
push
inc
pop
addr16
xchg
jne
jp
jg
test
xchg
in
xchg
jo
repz
mov
ds
mov
jno
jp
leave
jle
sbb
aas
sub
sahf
rcrb
ficomps
adcb
call
dec
sub
enter
lret
fmul
jmp
jl
jp
inc
mov
jmp
cld
test
mov
xchg
cld
in
sub
insb
js
jp
jl
dec
std
test
or
ja
lahf
cmp
cmp
icebp
aas
sti
add
jmp
cmc
xchg
pop
and
xchg
js
ret
jecxz
repz
icebp
add
xor
hlt
lock
hlt
clc
add
aaa
or
das
cmp
cmp
push
aas
sarl
fdivrs
fnstsw
loop
call
cmp
mov
mov
push
mov
cmp
cmp
cmp
xchg
js
jo
iret
cmpsb
iret
scas
iret
mov
call
ret
or
mov
cmp
jle
jle
jle
jle
jle
dec
lcall
imul
les
leave
and
loope
cmp
je
inc
in
jne
jnp
cwtl
clc
lahf
cld
fdivr
ljmp
cmp
cmp
and
jb
sbbb
lahf
fistl
enter
aas
idivb
jp
jl
jle
jle
jle
jle
jle
sbb
aas
or
and
cmp
repz
repz
repz
repz
repz
xchg
repz
repz
repz
mov
sar
fyl2xp1
loop
out
stc
idiv
andb
xchg
xor
and
cli
addr16
dec
cmpsl
dec
jl
test
xchg
out
out
out
out
out
loope
xor
and
inc
in
jle
hlt
or
xor
cmp
add
dec
out
out
in
shlb
data16
jle
cmp
stc
mov
xchg
stc
pushf
stc
cmpsb
stc
stos
stc
mov
mov
enter
jmp
repnz
das
sub
cmp
cmp
je
jp
repnz
testl
dec
mov
cmpsw
je
cwtl
out
out
out
out
out
loope
xor
gs
mov
push
sbb
mov
cwtl
push
dec
movsl
les
pop
rolb
cmp
cmp
data16
cmp
scas
aas
into
aas
decl
dec
and
pop
dec
xchg
mov
fcmove
bnd
xor
jbe
dec
xor
jnp
mov
dec
cmp
xchg
test
cmp
cmp
nop
cmp
and
andl
xchg
mov
shr
jecxz
lock
or
push
call
lahf
add
movsb
dec
loopne
xchg
cmp
dec
xor
mov
mov
lock
in
push
cmp
jae
inc
sbb
xchg
adc
andl
mov
jle
jle
jle
pop
loop
sub
pushf
pushf
dec
xchg
fwait
rcrb
sub
xor
in
andb
dec
lods
push
popa
add
rol
fldcw
adc
sbb
mov
ja
mov
movsl
xor
pop
test
jmp
sbb
fidivs
sbb
cmp
push
push
pop
xchg
fs
cld
jo
jle
test
xchg
repz
sar
test
push
adc
pop
in
daa
lock
hlt
xor
popa
cld
push
jbe
push
pop
scas
lcall
jbe
js
jp
jl
jle
inc
loop
cld
sub
cmp
cmp
push
ss
lahf
xchg
movsl
push
xor
loopne
cmp
xchg
sbb
ret
pop
loop
jecxz
repz
repz
repz
repz
enter
sub
repnz
or
xor
and
imul
iret
jle
xchg
rcrl
stc
mov
xor
cld
cld
add
dec
sbb
rcrl
jmp
cld
jb
ja
cltd
lcall
and
inc
nop
or
test
xor
loop
in
mov
lret
hlt
loope
sbb
push
pop
stc
xchg
xor
dec
dec
mov
iret
ljmp
xchg
and
ret
pop
in
sarb
lods
jle
sbb
xor
popf
movlps
push
mov
scas
outsl
out
out
out
out
out
in
mov
sbb
popf
and
js
jecxz
repnz
jno
jge
xor
mov
xchg
aas
mov
aas
shll
xlat
test
in
call
inc
hlt
dec
clc
push
cld
mov
mov
add
ss
cmp
cmp
lock
cmc
aas
cli
aas
decl
add
mov
iret
and
sub
iret
dec
iret
dec
leave
push
rcll
stc
mov
xchg
cmp
mov
dec
cmp
sub
cmp
pop
lret
lahf
jg
mov
cmpsl
dec
out
popa
and
stc
sub
aas
jmp
testb
cmp
mov
mov
leave
dec
popa
xor
aam
jo
lahf
sbbl
stos
lahf
mov
mov
lahf
rcrb
out
repnz
sti
mov
sahf
and
sub
jmp
stc
bound
aas
jb
ja
push
mov
xchg
stc
lahf
stc
test
stc
mov
cmp
pop
in
addr16
lea
jle
pop
stos
punpckhbw
iret
aad
adc
xchg
inc
imul
xchg
mov
cltd
stc
mov
stc
aam
loopne
out
cld
hlt
cld
das
cmp
pop
test
shll
push
mov
sbb
dec
ret
jmp
stc
icebp
insb
jl
push
cmp
loopne
cld
pop
add
into
sub
das
inc
dec
iret
push
iret
jae
mov
mov
xor
popf
and
and
outsb
pop
dec
jle
jle
mov
jle
jle
jle
jle
pop
lock
cld
popa
in
jo
mov
mov
ret
shrb
hlt
jle
pop
adc
je
mov
scas
btr
adc
bound
test
xchg
mov
out
in
mov
das
xor
mov
or
ss
les
call
pop
mov
mov
subl
pop
int3
popf
test
repz
repz
repz
jecxz
call
and
xchg
push
mov
jmp
inc
aas
dec
aas
push
aas
pop
aas
jge
cmpb
mov
lods
aas
mov
loopne
in
ljmp
jmp
add
or
psrlw
pop
mov
cmovo
cmpsl
jne
inc
test
repnz
rorb
shrl
in
and
jle
adc
or
pushf
sbb
and
aaa
ret
jmp
sub
xchg
ret
pop
jo
in
repnz
lock
cmc
aas
cli
aas
decl
add
daa
call
hlt
sub
dec
xchg
jle
jle
dec
mov
cs
scas
leave
mov
xor
stc
lret
stc
sar
sub
aas
out
lock
cmc
aas
cli
jo
push
sbb
lods
dec
aam
test
ds
mov
pop
shll
repz
rep
repz
repz
sub
cs
call
cld
gs
mov
daa
loopne
addr16
xchg
addr16
insl
in
mov
sar
cld
clc
cld
and
cltd
addr16
test
xchg
fsubrp
repz
lock
ss
sbb
orl
and
sar
xlat
cld
loopne
in
cld
icebp
cld
cli
cld
pushl
loop
insl
sahf
mov
lahf
fstl
in
xor
or
push
dec
pop
inc
or
imul
stc
scas
sub
iret
hlt
ret
push
xor
and
lret
bswap
imul
in
xchg
hlt
lds
out
xchg
ss
daa
sub
test
mov
pop
cmp
dec
cmp
cmp
cmpsl
ret
lahf
out
xchg
add
sub
ret
pusha
icebp
outsb
fs
xchg
lahf
iret
test
mov
mov
iret
fcmovne
clc
iret
inc
dec
cmp
sub
js
xchg
adc
ret
and
in
leave
mov
stc
std
stc
add
test
cmpsb
mov
mov
pop
out
jmp
sbb
and
leave
test
lcall
adc
xor
cmp
or
popf
push
sahf
and
imul
cld
lret
mov
pop
fists
xor
dec
or
cmp
xchg
in
jmp
push
lods
in
and
ss
mov
loopne
clc
popa
mov
insb
rorb
cmp
les
ret
mov
nop
add
sub
pop
jo
mov
push
sar
inc
jmp
cmp
cmp
cmp
xchg
popf
push
xchg
pop
push
mov
xchg
lret
mov
jle
jle
jle
dec
sub
pusha
inc
cmpsl
outsb
lods
ficomps
clc
xchg
cmp
or
icebp
jo
xor
push
dec
pop
cvtps2pd
pop
mov
lret
jle
jle
jle
mov
xor
mov
dec
jne
jle
push
cmpsl
stc
mov
aas
jmp
std
jo
shl
loope
push
xor
mov
adc
lahf
mov
cld
rclb
or
cmp
dec
lock
mov
cmpsb
xchg
iret
cmpsb
iret
mov
fmul
fmul
loopne
scas
call
hlt
cld
clc
xchg
add
mov
hlt
mov
xchg
xor
dec
bound
leave
and
inc
mov
rorl
sbb
pop
dec
mov
inc
mov
dec
test
xchg
sub
pop
je
cmp
cmp
mov
mov
sub
xchg
jle
addl
fdiv
loope
add
xchg
adc
repz
repz
lock
sbb
imul
mov
pushf
cld
ret
cld
enter
and
int3
lock
push
loopne
loop
adc
xor
sahf
cmp
or
mov
xor
addr16
ljmp
xor
push
sbb
dec
or
push
or
push
cmpsl
add
out
in
loop
aas
mov
aas
into
and
stc
jmp
sub
adc
xor
in
call
out
xchg
inc
stc
lock
mov
aaa
push
test
pushf
pop
jb
jp
mov
ret
nop
shrb
jle
jle
jle
pop
jmp
fmull
cmp
popa
inc
sub
cmp
ds
into
xchg
loope
cmp
xor
inc
loope
jmp
inc
mov
mov
int3
mov
adc
xor
xor
cmp
daa
jl
in
out
in
roll
repnz
cmp
inc
sbb
rcll
adc
sbb
icebp
and
xchg
js
int3
stos
mov
sub
inc
mov
pop
rcrb
pop
pop
pusha
xchg
push
jb
mov
push
mov
shl
in
jbe
mov
pop
cmp
mov
jp
stc
mov
mov
sub
cmp
lods
add
push
pushf
rorb
cwtl
adc
or
jle
andl
or
in
add
add
mov
add
addb
add
add
add
data16
add
add
addb
add
add
add
push
add
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
inc
add
add
add
sbb
add
xor
add
inc
adc
add
add
add
adc
add
add
add
cld
adc
add
adc
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
aaa
mov
inc
xor
xchg
jmp
adc
shlb
shrb
fwait
cwtl
pop
lea
xchg
sub
dec
add
mov
cmp
cld
mov
xor
movsb
or
add
insl
sub
leave
push
or
shl
test
ss
mov
icebp
dec
sbb
rol
jne
stos
jmp
aam
dec
sbb
inc
inc
jmp
sub
leave
enter
pop
shl
mov
cmpl
or
cmp
outsb
ja
and
jne
add
sub
rep
pop
jmp
add
shlb
mov
inc
adc
ret
shr
call
xchg
jb
ret
sub
popa
xor
or
push
addl
mov
xor
faddl
adc
xor
or
test
cwtl
pop
mov
jo
movsb
adc
or
dec
adc
addl
xor
add
sbb
push
add
xchg
insb
mov
cmovbe
je
add
xor
push
call
in
dec
adc
lea
or
add
hlt
cmp
fidivrs
push
or
jbe
add
lea
lods
stos
nop
add
add
jae
cmp
and
inc
stos
cli
inc
daa
mov
add
in
addr16
or
out
push
sbb
push
call
add
lea
dec
adc
inc
push
nop
sbb
popa
daa
or
add
pop
test
xchg
ror
inc
mov
push
add
push
cmpsl
dec
xorb
test
or
cmp
or
je
jnp
xchg
stos
sbb
lea
mov
test
or
loope
mov
popw
xor
and
pop
orl
dec
enter
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
clc
dec
inc
cld
icebp
add
test
add
or
nop
cmpsl
add
call
push
mov
setge
or
pop
pop
pop
pop
cmp
add
xchg
mov
sub
loopne
add
add
push
call
inc
mov
jle
sbb
xchg
sti
sbb
push
push
negl
ret
mov
xor
ret
in
lods
sbb
jne
scas
leave
mov
mov
jge
pushf
inc
sbbb
ret
je
pop
and
cmp
xchg
pause
shrl
fmuls
cmp
xchg
bound
or
sub
cvtdq2ps
in
movw
in
lods
lock
out
add
add
testb
rcrl
and
sti
cld
shll
or
pushl
pop
inc
mov
add
dec
enter
movsl
jbe
jae
shll
inc
enter
pop
pop
add
or
pushf
or
nop
add
push
push
and
ds
in
nop
pop
push
cmp
or
or
inc
xor
push
pop
mov
movzwl
pop
test
je
push
xchg
arpl
ss
cmp
jge
xor
push
inc
imul
call
dec
mov
xor
sub
ret
and
or
jo
xchg
push
ss
inc
into
jae
cmc
int3
inc
jmp
enter
scas
or
inc
cmp
pop
ret
add
pushl
push
push
call
lds
push
push
mov
in
inc
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
jge
sub
xchg
clc
rorl
sub
decl
cli
movsb
inc
jno
inc
sbb
pop
fxch
pusha
cmp
cmpsb
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
outsb
inc
adc
enter
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
sub
adc
inc
je
pop
jae
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
push
sub
fwait
push
or
pop
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
add
push
push
call
sbb
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
inc
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
or
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
and
dec
rcl
je
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
cmp
xchg
sbb
sbb
inc
mov
dec
adc
jl
sbb
iret
shr
pusha
loope
push
lea
jbe
push
out
or
push
orb
je
js
push
pop
sbb
sub
sub
or
in
xor
and
movsb
ja
inc
jo
insb
imul
outsb
and
cmp
cmp
and
jne
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
dec
push
int
arpl
sub
push
jae
xor
jbe
icebp
in
testb
js
push
ja
pop
js
data16
imul
fsubrs
js
imul
pusha
shrb
outsb
fs
sti
orl
inc
stc
je
ljmp
orps
je
mov
arpl
lcall
stos
mov
cltd
cmp
or
adc
cmp
dec
xor
jno
sbb
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
pop
add
add
sbb
add
adc
add
adc
add
add
rclb
add
adc
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
