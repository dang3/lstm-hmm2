out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
pop
inc
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
push
sbb
jbe
jnp
fwait
out
mov
add
add
je
and
jle
out
and
jae
test
push
sti
mov
mov
fs
and
adc
or
out
dec
push
imul
and
adc
sbb
dec
loopne
and
out
in
or
push
or
add
add
sahf
add
add
aaa
add
add
mov
push
xor
mov
inc
mov
dec
pop
mov
sub
in
and
mov
push
pop
aaa
inc
xor
rcr
bound
pop
push
sbb
push
xorb
fs
je
pop
addb
and
cs
push
push
pop
sarb
jnp
daa
dec
arpl
xor
cmpsb
fptan
insl
shrb
fndisi(8087
std
out
jb
insb
outsl
arpl
sti
add
test
xchg
xor
inc
jmp
lods
mov
add
shrl
adc
lods
in
add
pop
cmpsb
add
fnsave
cmpsb
dec
pop
or
sbb
xor
push
xchg
shll
into
fidivs
test
push
stos
adc
shll
push
xor
pushf
test
aam
xchg
dec
shl
testb
sub
mov
lcall
fmull
xor
sarb
fstps
js
pop
subb
mov
lods
mov
pop
mov
into
in
outsb
add
dec
mov
insb
lods
jbe
xchg
sahf
shll
into
pop
shll
add
or
sbb
ds
mov
fisttpl
xchg
lods
push
add
lcall
mov
cmpsb
imul
cld
xlat
add
jmp
add
mov
add
pop
and
or
dec
sub
push
jmp
gs
gs
mov
lds
push
gs
fs
sub
loopne
incb
dec
jo
outsb
push
jb
inc
adc
cld
cmpsb
sub
dec
dec
inc
push
and
outsl
xor
add
insb
add
inc
or
fstps
add
cmp
adc
sbb
pusha
add
xchg
or
inc
enter
pop
add
scas
inc
test
add
or
add
mov
mov
sbb
and
or
xchg
ret
pop
add
mov
mov
mov
ja
aas
and
ret
and
test
sub
decl
add
mov
and
pop
pop
sbb
pop
inc
fcmovne
push
xchg
inc
pop
add
rorb
or
xchg
sub
pop
ss
or
xor
cmc
pop
sti
or
xor
ud2
push
add
pop
divl
add
ja
jae
push
packsswb
je
jne
jb
gs
sbb
pop
push
pop
sarb
add
push
inc
jb
aaa
idiv
mov
pop
ja
or
push
mov
jae
pop
and
shlw
pop
xor
push
sbb
push
sub
push
jmp
std
in
pushl
popl
mov
lea
jmp
shr
in
mov
das
cmpsl
xor
xchg
dec
hlt
pop
mov
push
mov
je
std
or
jno
gs
inc
js
pop
add
daa
xor
ljmp
push
sub
inc
ret
cmpsl
je
outsl
outsb
push
fiadds
mov
pop
sbbb
pop
iret
je
jo
jne
cs
pop
cs
add
outsl
je
dec
jb
arpl
popa
insl
mov
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
stos
outsl
in
mov
pushl
and
pop
inc
jne
jb
je
xor
pop
dec
mov
out
mov
imul
fs
or
cs
bound
cmp
add
cmpl
or
push
mov
pop
adc
les
dec
and
push
push
adc
push
push
push
call
pop
test
jne
mov
dec
inc
add
iret
xor
and
adc
or
clc
pushl
xor
decl
mov
cmpb
push
mov
je
nop
or
mov
fdiv
mov
iret
cmp
sub
pop
pop
pop
mov
je
cmpsl
adc
bound
into
lds
ds
fstl
add
adc
adc
sbb
add
xchg
nop
xchg
add
adc
add
xchg
or
fwait
sub
adc
leave
mov
jae
vmovntps
pop
and
cmp
push
add
iret
add
into
mov
stos
adc
popa
insb
imul
insl
mov
pop
imul
imul
push
movsb
outsl
insb
fs
sbb
je
arpl
out
iret
jae
insb
jbe
ret
fadd
jmp
push
push
rcrl
pop
pop
add
rcll
addr16
ret
pop
mov
cmp
sbb
mov
and
stos
mov
mov
divb
cmpsl
sbb
dec
cs
paddusw
push
xchg
lret
sub
movsl
push
add
in
sbb
pushf
fstpl
push
add
in
push
push
mov
sbb
mov
aas
and
push
push
mov
cmp
inc
inc
lods
push
push
mov
push
mov
mov
sbb
shrl
adc
jmp
push
push
loopne
inc
in
push
push
call
mov
lea
mov
sub
sub
mov
movb
jecxz
lods
hlt
inc
or
xor
push
push
jecxz
inc
inc
call
imul
imul
cld
ljmp
in
or
mov
rdpmc
rclb
or
lock
fidivl
cwtl
sub
add
jno
data16
or
std
jge
mov
mov
es
call
xor
scas
in
jle
sbb
push
movzbl
rorl
pop
sahf
outsb
cs
fs
add
mov
andb
insb
outsl
sti
add
xor
aas
test
pop
cmp
int
pop
jl
push
aaa
sub
nop
mov
adc
ljmp
test
jne
ret
cmpw
jne
mov
add
cmpl
in
add
jle
mov
sbb
add
fbld
adc
lahf
add
mov
pop
fnstenv
nop
pushl
fistpl
ret
push
jle
out
andb
cmp
idivb
call
mov
cmp
jg
add
jge
push
push
jmp
pop
out
push
sbb
aas
seto
push
push
and
push
push
add
ret
xchg
jp
mov
mov
pop
dec
push
push
pop
sbb
pop
popa
pop
idiv
push
or
and
cmp
dec
pop
push
push
aaa
arpl
fimuls
lea
movsl
add
mov
movsb
mov
sub
push
jo
mov
fucomi
mov
sti
rep
jb
jge
dec
dec
mov
mov
mov
ss
sbb
mov
jo
ds
push
aam
xor
xor
cmp
ja
jmp
sbb
arpl
arpl
adc
inc
push
idivl
jbe
orl
jnp
push
push
inc
clc
push
out
clc
iret
out
clc
push
sub
or
jb
mov
pop
leave
inc
mov
stc
and
pusha
xor
adc
mov
inc
or
and
sub
mov
dec
jne
call
sub
test
push
cld
js
in
in
lock
pop
jmp
adc
jno
jo
add
xchg
or
push
ret
in
test
or
jle
xor
cmp
jle
clc
xor
cld
dec
sbb
in
ja
shr
fwait
jg
jecxz
or
adc
je
test
cmp
lock
jo
mov
mov
sub
daa
mov
add
inc
cld
jne
xor
aas
sbb
cmpsl
mov
sbb
outsl
jmp
add
rcrl
jl
inc
cmp
mov
inc
mov
imulb
fildll
mov
push
and
pop
jbe
incl
adc
data16
ja
jne
cmpw
cmc
lock
add
sbb
shl
fsubs
cmp
push
or
mov
pop
mov
aaa
ret
add
repnz
int
test
outsl
add
iret
movsl
inc
pop
push
pop
and
xor
jg
mov
loope
push
jmp
adc
movb
jmp
fldt
mov
add
sbb
sti
pop
or
or
call
iret
sub
pop
cld
mov
out
inc
idiv
adc
jg
pop
pop
sbb
jmp
addb
sti
sbb
mov
jmp
xor
loop
pop
sbb
enter
inc
inc
xor
adc
sbbb
stos
in
sbb
mov
and
pop
fwait
push
repnz
adc
aas
sub
add
cmp
jl
jle
jl
and
hlt
xor
adc
sbb
xchg
and
mov
cmp
adc
jo
icebp
jmp
jne
movb
inc
cmp
jb
mov
test
pushl
or
andl
cli
filds
or
inc
sub
and
mulb
popa
adc
and
push
dec
loopne
push
add
fs
cmp
push
mov
push
add
cmp
sar
jmp
aas
cmp
jae
incl
lret
shr
add
imul
pop
inc
push
mov
dec
or
lods
jns
add
inc
mov
mov
jne
rcrl
outsl
mov
mov
pop
jg
mov
mov
fistpll
std
add
loop
or
adc
or
jne
xchg
sbb
push
jns,pn
add
roll
mov
in
out
inc
jmp
push
xchg
pop
jbe
or
in
aaa
insl
cwtl
cmp
sti
not
and
push
jl
and
mov
add
lea
cmp
ljmp
mov
add
repnz
not
and
cld
in
outsl
sub
testl
mov
and
mov
fcmovb
out
push
js
add
push
aam
mov
aaa
mov
or
fisubs
fimull
add
mov
and
out
xadd
adc
pop
inc
sub
lods
xchg
lcall
mov
and
not
cmp
add
repz
jle
mov
mov
shr
or
add
dec
daa
pop
jg
push
lret
outsb
fisttps
jl
sbb
cli
pop
insl
lods
out
mov
push
push
adc
daa
and
sbb
and
insl
mov
inc
mov
fidivl
pushf
loope
sbb
xlat
loopne
fiaddl
fcmove
outsl
lods
adc
sbb
inc
xor
scas
roll
mov
test
sbb
pop
int3
xor
add
add
out
ja
bnd
and
cli
sbb
imul
rolb
fcomp
cwtl
subb
jns
out
sbb
add
rcr
mov
pusha
adc
pop
scas
testl
sti
mov
pop
les
or
sub
add
idiv
fisubl
jo
add
sub
fcom
add
mov
pop
mov
pop
fyl2xp1
mov
pop
xor
out
mov
or
xor
xchg
out
nop
fmull
or
xchg
jno
std
aas
mov
cmp
push
cld
mov
sub
fidivrs
xchg
pop
imul
das
push
mov
cmpsb
pop
int
imul
inc
cmp
sub
ja
test
cmp
and
or
popa
insb
mov
lods
adc
add
or
ljmp
pop
add
and
aad
aam
fcomp
ja
pop
bound
sbb
icebp
lods
shl
add
and
jg
jge
dec
mov
inc
mov
rclb
push
fadds
hlt
mov
pop
xor
daa
clc
jb
repz
pop
es
adc
repnz
dec
sarl
shll
insl
hlt
xor
and
call
push
xchg
icebp
imull
mov
mov
hlt
pop
adc
call
xlat
lods
xor
in
popa
mov
fcoml
cmp
inc
add
mov
xor
in
pop
and
int
adc
clc
cmp
jecxz
xor
mov
fnstcw
out
jmp
or
add
outsb
fbstp
int
and
sbb
das
mov
ret
inc
enter
xlat
mov
ret
mov
push
fbstp
inc
fimuls
xchg
sahf
hlt
adc
cmp
outsl
sbb
call
inc
and
loop
shr
or
xlat
lea
mov
add
sbb
lock
aam
mov
popf
cld
repz
and
sub
aad
flds
outsl
addr16
inc
xchg
iret
cmp
lcall
dec
sub
sub
or
xor
test
lock
cmp
jmp
add
test
out
fdivl
cli
mov
xor
push
cs
js
lret
rep
fadd
and
insl
adc
inc
repz
sti
xor
mov
repnz
or
in
xchg
push
mov
call
in
inc
dec
xchg
maskmovq
testl
add
push
popf
xchg
mov
fimuls
cltd
jb
lods
fmul
loop
fmuls
mov
dec
mov
cli
clc
in
jae
xor
push
jo
mov
sbb
or
mov
sub
or
fwait
sub
fistpl
mov
add
sbb
lock
hlt
into
mov
fimuls
xor
xor
test
xchg
or
cmpsb
pop
jae
adc
fidivs
test
orl
out
cmp
imul
pop
or
push
aas
sbb
pop
mov
rcl
fstps
test
push
in
jle
ja
into
xor
ss
in
jb
mov
clc
jl
pop
je
dec
testl
gs
lods
les
cli
cmp
cli
mov
mov
add
xor
sub
cmc
ret
rcrb
sbb
push
or
in
repz
addb
push
xchg
ljmp
inc
sub
lret
push
or
pop
sahf
outsl
dec
mov
stos
adc
fwait
xchg
lock
hlt
cmp
xchg
cld
cltd
or
mov
scas
xlat
mov
ret
pop
jo
lret
pop
gs
sbb
rcrl
or
lock
int3
or
push
or
sbb
repz
dec
jge,pt
out
call
unpckhps
fwait
xchg
sbb
pop
test
or
jg
jns
pop
push
call
outsl
jecxz
jp
sbb
das
dec
sbb
int
jb
pop
jb
fistpl
loopne
sub
jecxz
jp
pusha
call
fsubs
enter
add
mov
scas
aaa
pop
mov
lds
jp
sbb
ja
mov
xor
pop
imul
out
loopne
mov
aaa
test
xor
aam
rcl
sub
fldenv
pslld
ret
repz
rol
test
mov
mov
push
dec
mov
pop
fcmovbe
pop
mov
out
xlat
pop
add
pop
movsb
mov
repz
loope
xor
or
or
pop
xchg
inc
add
cli
xchg
cmp
mov
dec
cld
cmpb
sarl
mov
enter
xchg
push
adc
outsb
xor
sbb
push
fcoml
xlat
adc
push
test
fcmovu
inc
test
outsb
lea
xchg
lahf
inc
pop
aaa
ficoml
nop
iret
jb
adc
mov
mov
into
ljmp
add
sbb
cmp
jne
xchg
push
fstpt
imul
add
push
add
sub
dec
or
shlb
arpl
mov
imul
push
fmuls
test
cltd
ficoms
jecxz
sbb
add
repz
add
stos
cmp
dec
sbb
mov
push
xor
cmpsb
pop
mov
xor
call
mov
cld
call
sub
lret
push
mov
mov
mov
dec
cmp
out
or
testb
push
sub
int
push
xor
inc
lea
clc
pop
adc
orb
xchg
cltd
jb
fdivrs
int3
push
loopne
gs
outsb
sbbl
add
fsubr
icebp
cmp
aad
jae
xchg
push
dec
std
call
adc
cmpsw
imul
jne
push
or
call
lahf
iret
out
gs
das
lock
jo
hlt
add
jns
ljmp
pop
lods
pushf
mov
int
dec
xchg
aas
fisttps
mov
push
add
rorl
pop
test
and
ret
push
aas
mov
mov
sub
sbb
les
lret
into
int3
push
rcr
mov
jl
sub
pop
push
pop
lock
loop
add
add
adc
lcall
push
push
movb
in
dec
out
push
std
jb
pop
out
push
lock
icebp
inc
repnz
mov
jl
or
xor
jo
hlt
add
pop
add
shrb
repz
mov
in
mov
xor
hlt
or
push
and
push
and
or
cmp
sbb
add
adc
jbe
sbb
in
xchg
lock
ss
push
push
adc
add
add
fptan
clc
xor
fwait
loope
test
or
mov
sub
jbe
cld
or
xor
cmp
sbb
test
push
push
ret
pop
adc
and
rcr
push
mov
ret
leave
mov
mov
test
shrl
jmp
rorl
push
mov
andl
dec
jne
pop
mov
push
push
jl
imul
sub
popa
and
or
test
mov
test
cltd
adc
push
jb
jne
mov
sub
mov
movsl
jbe
sbb
in
dec
rolb
mov
mov
jle
lock
hlt
push
shlb
lret
mov
sbb
jmp
pop
call
imul
and
add
lods
fcmovnu
push
mov
lock
push
jl
pop
jb
pop
cmp
jne
icebp
adc
jmp
inc
push
repnz
ret
ror
and
or
push
andw
mov
into
insb
mov
insl
subb
add
cld
pop
jb
bound
add
push
lahf
push
push
movsl
adc
mov
sub
mul
sub
mov
dec
dec
pop
cmp
out
cli
lods
jae
push
arpl
pop
cmc
cmp
add
xchg
push
data16
ret
push
push
imul
mov
push
aad
push
inc
shrl
sbb
mov
and
add
sub
test
pop
cld
xchg
sub
or
add
sahf
sbb
adc
scas
or
push
and
loope
sbb
add
test
sbb
cmp
aaa
sbb
fsubr
fsubrl
and
mov
outsb
or
cmp
adc
clc
inc
push
outsb
call
mov
cmp
jbe
or
dec
clc
xor
sahf
sahf
sub
xchg
or
xchg
xchg
ss
pop
cld
movl
push
inc
call
outsb
xchg
xchg
lock
test
pop
js
push
mov
or
inc
add
je
cmp
jne
push
repnz
lock
mov
push
filds
daa
pop
clc
stos
les
jbe
pop
stos
int3
fs
and
add
mov
pop
sbb
push
or
enter
les
cs
and
das
cmp
fdivl
cmp
and
ret
jae
dec
mov
rol
adcb
insb
add
jl
fistl
or
scas
mov
test
shll
and
sbb
inc
adc
dec
daa
loopne
jmp
mov
and
mov
mov
fs
mov
dec
mov
jne
mov
cmp
pushl
cmp
jae
mov
dec
mov
dec
xchg
add
push
or
sti
sub
mov
in
push
push
ljmp
add
xor
mov
rcrl
and
fsubrp
mov
or
pushf
inc
mov
cwtl
decl
int3
cmp
ret
cmpl
cmpl
scas
or
push
jo
mov
jo
add
sbb
pop
dec
xchg
data16
int3
cmp
jae
and
std
fcmovu
or
xchg
in
sbb
pop
adc
fnstcw
call
add
mov
fcoml
mov
dec
inc
xor
dec
je
jmp
jbe
adc
xchg
adc
xorb
jmp
dec
mov
outsb
lods
mov
movsb
add
ss
mov
test
cwtl
es
push
pop
mov
stos
or
arpl
jo
push
mov
nop
fsubrl
fwait
and
scas
dec
or
mov
mov
mov
mov
pop
cs
inc
mov
mov
mov
mov
jb
imul
sub
push
rcl
js
shlb
shrl
aad
insl
shrl
pop
fsubrs
and
fcmovu
xor
insb
xchg
fsub
dec
test
loop
jecxz
pop
mov
in
push
out
dec
out
call
jmp
insl
jae
int
dec
shll
outsb
je
fxch
push
fwait
rol
repnz
ret
fldt
add
xor
mov
lcall
cmp
int3
hlt
cmpsb
jmp
in
push
xchg
xchg
mov
insb
fwait
cltd
lcall
jnp
in
fnstenv
lahf
sub
mov
insb
fwait
mov
cmpsb
xor
dec
shrl
xor
es
cmc
div
in
xlat
xor
cli
jns
lea
dec
negl
mov
push
dec
or
hlt
cs
or
out
push
jne
sub
shlb
push
aaa
jns
push
pop
cld
cmp
fwait
add
jmp
xchg
int
leave
out
ds
dec
aaa
push
lret
mov
dec
lcall
jmp
dec
rcrb
sub
sub
cmp
addr16
xor
enter
sbb
shrl
out
rolb
lea
sar
cmp
xlat
insb
push
inc
jge
sti
add
test
adc
push
jae
fsubs
shl
and
imul
and
cmpsb
out
pushf
pop
cli
inc
and
ret
test
fwait
inc
lds
inc
sub
push
mov
scas
nop
jmp
aaa
sbb
dec
cwtl
xor
sbb
inc
fmuls
ret
jmp
mov
aas
mov
nop
repnz
jge
nop
sti
gs
or
or
rcrl
andb
add
sub
jno
sbb
aaa
and
mov
rclb
sahf
stos
mov
mov
adc
fadds
xlat
cmp
jnp
mov
mov
or
push
daa
lock
jge
mulb
mov
aaa
mov
mov
xor
adc
sbb
pop
mov
addb
and
stc
mov
or
or
sub
std
cltd
icebp
popa
cmp
inc
popf
fbstp
rclb
add
add
inc
or
and
xlat
adcl
mov
pop
cmp
push
je
sbb
adc
ss
mov
jne
data16
stc
cmpb
mov
jae
pop
ret
push
mov
pusha
adc
loop
pop
add
addr16
or
femms
shr
xor
jl
cwtl
fcompl
mov
xchg
cmc
sub
push
adc
sahf
pop
andb
arpl
test
les
js
movsb
sbb
pop
jmp
imul
sarl
add
in
fdivrs
leave
clc
std
rolb
jo
inc
outsb
mov
roll
cmp
cmp
aaa
xchg
xchg
mov
mov
cmp
out
mov
cmpb
and
sbb
push
mov
popa
mov
push
call
inc
push
pushf
cld
popa
rcr
movsb
cmpb
js
mov
stos
adc
es
push
or
sub
sub
or
adc
insb
pop
xor
testb
and
xlat
jmp
push
add
pop
loope
outsl
scas
fs
xchg
int3
je,pt
call
or
jne
andl
ja
push
lret
fcmovne
xchg
insb
fsubrl
loopne
popa
insl
lods
jge
mov
ret
mov
pushf
les
xchg
fisubs
int3
out
mov
cld
test
pop
ss
and
into
jp
imul
insb
popa
push
dec
xchg
pop
shll
imul
mov
ja
fildl
fstp
jae
lcall
xor
fldenv
cmpsb
xor
std
cli
int
fwait
cmpsb
sti
cld
std
insl
mov
xlat
insb
sbb
imul
mov
mov
outsb
xorb
xor
enter
pop
lret
in
in
fstpt
out
mov
jmp
in
ds
lcall
jb
andb
idivl
cmp
mov
addl
and
add
addr16
and
or
push
shrb
addr16
cli
xlat
pop
push
dec
xor
add
jbe
push
hlt
dec
mov
enter
in
sbb
mov
xchg
add
fldcw
inc
add
dec
out
dec
cli
sub
lret
cmp
lcall
push
imul
call
lock
xor
int
bnd
xor
insb
insb
je
sahf
lods
daa
loopne
and
push
mov
xor
add
sub
mov
adc
cmp
dec
inc
loopne
jb
push
fsubrl
sbb
stc
sub
lret
add
xor
cmovno
test
decl
dec
insl
sub
adc
popa
push
dec
insb
into
test
das
cmp
and
in
add
and
add
hlt
or
sbb
test
push
in
mov
in
xchg
fsts
and
cmp
and
fldl
or
lret
pop
xor
fisttpl
sbb
clc
inc
in
in
xor
mov
stos
enter
sub
inc
sub
fildl
push
pop
push
adc
dec
in
push
or
jo
bound
jne
xor
cwtl
loopne
inc
and
and
jnp
lcall
jmp
es
int3
cmc
push
shll
aad
je
mov
jae
mov
mov
shll
mov
fwait
cmpsb
imul
dec
shrl
mov
imul
addr16
ss
enter
lret
int3
imul
rcl
cmpsb
jmp
cmpsb
rcl
adc
or
pop
mov
aaa
fcomp
fcmovu
ja
lret
cmpsb
imul
fstp
sbb
loopne
loope
dec
shll
jecxz
in
pop
out
fwait
cmpsb
imul
jecxz
cmp
pop
xlat
in
daa
in
sbb
out
fs
es
repnz
imul
sarb
negb
mov
cltd
loop
xchg
mov
add
adc
mov
cmp
cld
or
sahf
sub
clc
or
inc
ret
into
lret
jb
and
das
push
addr16
xchg
or
cltd
mov
or
pop
xor
lock
push
loop
and
mov
cmp
and
add
inc
sbb
outsb
push
out
adc
cmpsl
mov
push
pushf
popl
push
pusha
movb
mov
mov
mov
pushf
mov
add
inc
pushf
mov
jg
pop
orb
push
sbb
mov
stos
ljmp
sub
jmp
jge
and
add
pop
roll
or
and
pushf
fisubs
arpl
inc
cmp
clc
add
or
sbb
call
and
test
jbe
jge
stos
mov
movsbw
add
rcrb
test
jne
adc
sub
xor
call
mov
jae
push
dec
in
cmp
jo
inc
insl
jb
adc
scas
push
adc
les
and
sub
movl
add
in
ljmp
push
mov
rcr
test
rorl
fstpl
aaa
add
cs
or
cli
and
and
pop
pop
pop
rorl
push
add
bound
lock
inc
jl
fs
mov
mov
xor
repnz
jp
push
mov
movsl
int3
notl
mov
fcoml
pushf
cmpl
jbe
outsb
add
or
repnz
pop
mov
repz
mov
fucomi
movsb
sub
int
movsb
push
mov
insl
mov
sub
ds
xor
sub
outsb
push
cmp
xor
push
push
xor
test
cmp
push
sub
pushf
pushf
call
lods
push
jae
inc
mov
in
jecxz
push
cmp
push
aam
lods
std
fildll
dec
cmc
push
pushf
push
lods
add
sub
mov
add
jp
or
fsubr
mov
push
cmp
push
sub
pushf
inc
mov
sti
pop
dec
loopne
pop
pop
jmp
add
dec
inc
cmc
or
mov
clc
xchg
sti
es
sti
std
loope
mov
push
push
mov
dec
jmp
btr
clc
mov
sar
stc
xor
pop
std
lock
adc
pop
sar
and
cmp
pop
sub
mov
cmc
xadd
pop
rcr
aaa
cld
mov
lea
cmp
and
and
jo
fisubs
lret
sub
cmp
dec
sar
sub
not
add
insl
outsl
dec
lret
cltd
push
outsb
mov
mov
insb
mov
xchg
pop
adc
mov
std
fnstsw
lret
pushf
pusha
mov
and
add
call
decl
ds
sub
push
gs
call
or
jp
xor
lret
ja
xor
adc
in
test
jl
hlt
sbb
xchg
loope
loopne
mov
jmp
lods
in
sbb
out
jmp
enter
dec
out
clc
stos
ljmp
popa
insb
int3
sahf
call
and
stos
mov
inc
jne
mov
call
jns
inc
dec
sbb
aas
std
cld
mov
pop
adc
xor
pop
jmp
aas
adc
sahf
cli
hlt
add
dec
insb
popf
stos
inc
outsl
fistpll
xchg
ja
xor
adc
popa
pop
fcomps
xchg
int
bound
lahf
or
iret
mov
hlt
cli
sub
xor
aam
and
shl
pop
stos
pop
in
adc
push
xchg
jmp
andl
std
inc
pusha
bnd
enter
hlt
sti
out
mov
call
faddl
pop
in
push
push
push
sbb
mov
cmovs
cmp
sub
orl
adc
and
in
outsb
mov
add
movsb
mov
or
or
add
push
inc
cwtl
clc
and
jg
je
fs
cld
sti
mov
and
inc
push
add
mov
sub
loop
into
ret
jmp
call
add
lcall
adc
jge
or
mov
in
loope
in
adc
and
nop
lret
push
or
mov
jmp
cmp
xchg
gs
and
mov
xchg
or
cmp
stos
mov
xchg
cmpsl
call
pop
cmp
xchg
sbb
out
prefetch
or
jmp
fcom
addl
jne
arpl
stc
ret
push
lret
xchg
xchg
add
les
and
fstpt
jo
nop
sbb
jne
js
pop
mov
je
arpl
push
push
dec
mov
cmp
insb
mov
sub
or
pop
fdivrs
fidivs
dec
push
arpl
cs
and
cld
and
popa
cmp
push
mov
or
add
je
mov
mov
in
dec
sbb
loopne
push
sbb
adc
test
mov
push
daa
sbb
sub
nop
add
les
cmp
gs
hlt
sub
or
add
rcl
fcomps
hlt
gs
fsub
call
pop
pop
push
xchg
imul
adc
fwait
push
xor
into
mov
stos
push
fisttps
push
movsl
push
call
dec
shll
inc
inc
scas
adc
repnz
inc
les
xchg
cli
adc
add
push
pop
mov
mov
jb
dec
mov
sbb
push
pop
mov
pop
pop
ss
adc
inc
cmpsb
and
sbb
mov
push
jge
mov
ss
pop
hlt
cmp
and
inc
lock
hlt
xor
add
insl
add
xlat
jmp
mov
sub
adc
shlb
ss
push
ret
pop
add
add
sub
cwtl
js
xor
fistps
push
xor
push
jo
mov
lret
mov
dec
dec
dec
inc
lret
lret
push
cs
insb
adcb
jo
gs
xchg
test
cs
lea
insb
insb
mov
xor
mov
outsb
je
imul
mov
xlat
xor
cmpsb
pop
cmpsl
push
gs
xor
stos
push
lods
lods
imul
cmpsb
imul
imul
imul
xor
mov
lea
xchg
insb
test
pushf
js
xchg
xchg
xchg
inc
push
dec
push
int
cwtl
js
lcall
xor
inc
push
fildll
scas
imul
loope
loop
in
push
mov
out
mov
xlat
insb
fwait
cmpsb
mov
mov
lgs
pop
mov
mov
mov
pop
mov
mov
sbb
fs
fsubr
dec
mov
mov
mov
jns
add
cmpsl
mov
adc
push
jno
pop
xor
xchg
int
in
dec
mov
adc
add
imul
xor
rclb
pop
repz
mov
js
mov
jmp
push
adc
gs
sahf
in
je
push
adc
mov
cmp
loop
je
sub
xchg
test
inc
or
cld
repz
adc
negb
or
sbb
pop
sub
mov
dec
pop
jp,pt
mov
mov
add
sti
incl
cmpsb
js
pop
push
push
cwtl
shll
outsb
enter
lock
lock
leave
or
pusha
test
jmp
bound
push
aas
or
lsl
push
adc
std
addb
mov
bound
pusha
push
and
cli
adc
and
ds
jne
mov
jmp
mov
outsb
jne
cld
jp
or
sahf
mov
icebp
movsl
mov
lock
inc
inc
mov
lock
sbb
je
xchg
hlt
jno
push
fidivrl
mov
lods
and
hlt
mov
cmp
insb
mov
pop
jae
je
mov
sub
sub
pusha
sub
push
je
jnp
rorl
sahf
sub
cmp
std
clc
push
cmp
out
mov
xor
pushf
xor
jmp
jle
and
sub
mov
fwait
add
ja
xlat
sbb
pop
xor
jge
sub
flds
add
sbb
add
sub
jo
dec
xchg
sbb
pop
out
ljmp
pop
cmpsb
xor
aas
push
xor
xchg
movsl
repz
arpl
pusha
rcll
addr16
jae
jne
mov
sahf
lea
xor
jb
or
adcb
sbb
data16
and
xchg
jmp
jmp
pop
jb
icebp
in
enter
or
jbe
jl
xorl
sub
test
incl
sbb
nop
add
in
andb
jne
stos
adc
dec
xchg
sub
aas
popa
je
cmpsb
imul
imul
imul
lcall
inc
push
in
in
imul
in
in
pop
jne
rcrl
pop
movsb
pop
call
ja
or
dec
in
sub
add
pop
xor
and
loope
mov
in
shlb
pop
arpl
or
shll
imul
xor
jae
std
inc
imul
loope
loopne
sti
push
cmp
loopne
sub
adc
nop
inc
loopne
sub
std
insb
test
test
clc
inc
cs
push
std
je
cmpsb
imul
dec
shll
stc
cli
sti
cld
dec
and
rclb
and
mov
leave
xchg
mov
pop
xorb
sbb
sub
add
sub
adc
popf
in
push
sti
jg
sbb
pop
ja
das
pop
or
flds
add
xlat
push
cltd
or
adc
in
sbbl
sbb
push
push
and
dec
add
pusha
inc
mov
or
mov
mov
in
sub
in
mov
mov
lock
and
lret
leave
cmp
push
fldenv
lock
push
js
movb
and
in
or
jnp
shlb
cmp
sbb
aad
add
mov
fisttpl
cld
or
xchg
mov
add
gs
jl
lret
pop
or
sub
dec
push
mov
sbb
clc
add
add
in
in
je
sbb
je
or
loop
in
jle
adc
adc
in
or
nop
outsb
or
xchg
xor
repz
mov
mov
roll
cmp
shlb
movsb
pop
adc
adc
inc
push
in
std
call
jecxz
pop
adc
dec
and
bnd
cld
sti
sbb
fdivr
push
push
js
jbe
sar
or
xor
add
and
push
leave
ds
jle
or
enter
cld
es
xor
cs
or
je
push
push
cld
pop
clc
push
pop
push
xchg
mov
push
das
cs
and
inc
dec
xor
fcoml
mov
sub
negl
fmuls
leave
outsl
in
cmp
xlat
adc
dec
cmpsl
inc
es
jae
call
inc
test
cmp
mov
pop
add
sbb
pushf
sub
imul
push
jp
jb
popa
dec
shll
outsb
xor
xor
jne
and
mov
pop
xchg
arpl
outsb
gs
xchg
in
js
gs
gs
xchg
je
outsl
outsb
es
add
rclb
aas
jb
sub
popa
arpl
mov
sub
cmp
jb
imul
sbb
call
xor
ret
popf
cmpsb
jmp
jb
rolb
lcall
push
jo
je
add
and
mov
or
sbb
aam
adc
jmp
movsb
add
mov
dec
hlt
cmp
scas
xchg
and
loopne
loop
push
push
jl
arpl
cld
pop
jne
cmp
addl
adc
adc
pop
lock
cwtl
add
inc
xchg
and
fdivr
inc
and
movsb
jmp
in
cli
jo
jb
popa
gs
das
cld
divb
inc
ja
sbb
sbb
outsl
test
add
mov
or
in
and
jp
fisubrl
stos
add
shlb
and
cmp
nop
mov
or
xor
fsubl
fcoml
fstps
pusha
or
iret
push
mov
cmp
adc
insb
mov
push
or
and
incl
lods
adc
push
mov
add
addr16
jecxz
pop
mov
mov
mov
mov
or
shlb
leave
adcl
mov
cmp
jmp
ss
or
or
call
adc
add
or
call
sbb
mov
xchg
push
hlt
data16
je
into
jbe
dec
jb
iret
and
pop
scas
pop
fcomps
sbb
pop
lods
scas
cmp
rolb
aas
imul
popa
push
jg
mov
imul
lcall
pop
mov
jae
jae
jmp
jne
mulb
adc
add
dec
add
rclb
add
inc
in
in
imul
imul
lods
nop
outsb
mov
jbe
dec
lock
mov
push
push
call
mov
cmp
lock
mov
into
push
mov
jbe
inc
mov
sbb
movsb
adc
add
imulb
ljmp
lret
push
rolb
mov
fcmovne
mov
xor
cs
dec
shrl
fs
arpl
xor
jbe
jb
arpl
aaa
xorl
insl
jne
daa
push
sub
xor
mov
sub
and
lock
push
push
mov
add
sub
push
pop
repz
pushf
cmp
mov
xor
enter
lret
outsb
inc
pusha
cmpb
sub
add
pop
or
push
movl
and
nop
xchg
xchg
sahf
dec
sbb
or
std
cmp
add
jl
adc
mov
stos
mov
pop
and
std
mov
mov
pop
subb
push
push
push
xor
mov
pop
andl
bound
sbb
pop
and
add
jb
or
xchg
xor
mov
inc
lret
rol
mov
add
pushf
sbb
mov
leave
shl
adc
add
nop
or
add
mov
iret
dec
jne
hlt
sahf
movsl
movsb
decb
incl
cmp
out
cmp
lock
cmp
adc
iret
mov
adc
jp
fs
push
popa
pop
mov
push
hlt
push
arpl
les
inc
movzbl
out
adc
clc
div
test
inc
push
cmc
hlt
push
hlt
popf
lret
fwait
dec
hlt
iret
mov
and
fcmovbe
fstpl
clc
add
add
push
push
outsb
dec
shll
push
dec
jo
or
insb
lods
int
pop
lock
popa
pop
repnz
cmc
div
insb
mov
xorl
cmpsb
addl
jb
cmpsb
imul
adc
sub
mov
icebp
jne
add
xorl
xchg
inc
push
or
xchg
xchg
cmp
test
mov
rcrl
pop
mov
dec
inc
xchg
push
xchg
sbb
lds
pop
out
push
mov
sbb
sbb
ja
shr
push
pop
aas
mov
fs
ret
shl
mov
push
ret
aas
inc
in
or
outsb
add
in
jp
stos
push
jmp
movl
stc
mov
add
hlt
or
inc
mov
or
push
jae
jle
push
cmpb
cmp
cmp
popf
hlt
dec
dec
in
dec
push
adc
rcrb
sbb
icebp
mov
in
dec
aam
jl
enter
push
lea
sbb
pop
orb
mov
dec
add
cmpsl
and
or
cld
fcoml
sub
jnp
pop
xchg
mov
add
stos
ja
scas
jo
push
das
add
sbb
xchg
lea
je
mov
inc
or
ja
adc
dec
push
pop
sub
pop
xor
pop
push
mov
sbb
int3
jmp
cmp
jmp
pop
out
push
call
cmpsl
dec
rol
addr16
push
pop
and
test
jl
mov
ss
out
subb
push
sbb
dec
daa
lret
das
das
js
fnstenv
fidivl
cmpsb
imul
xor
imul
push
insl
cmp
cmp
xor
je
sub
das
or
jmp
cmc
div
xor
cs
fwait
cmpsb
popa
jae
call
gs
aam
mov
xor
jo
das
das
shll
xor
dec
shll
xor
xor
arpl
arpl
xor
shrl
cmp
xor
xor
or
das
jmp
das
sar
and
sar
add
add
lcall
movsl
sarb
lahf
jmp
add
mov
or
into
push
les
hlt
clc
inc
lcall
xor
push
mov
sbb
sub
ss
push
loopne
xor
push
inc
push
insb
pop
call
fcompl
clc
add
lock
sbb
pop
jne
inc
ljmp
fmull
ret
push
call
xor
pusha
cmp
sub
lahf
fdivp
mov
add
test
cmp
jmp
mov
mov
addr16
push
xor
rcr
hlt
dec
cmp
and
or
cmp
or
mov
add
or
mov
inc
mov
sbb
xor
enter
inc
xor
negl
ja
and
mov
mov
pop
push
push
add
ficoms
loop
in
shll
push
sub
daa
pop
lock
sub
lods
xor
in
push
pushf
and
imul
lods
and
hlt
fisubs
xchg
andb
fs
xchg
xchg
sbb
pusha
dec
dec
sahf
insl
loope
and
dec
addb
jns
ss
dec
xlat
inc
es
or
cltd
sbb
mov
enter
fistpl
pusha
mov
insb
test
or
jno
fsubrs
jge
jl
test
in
sub
mov
pop
jmp
stos
shrb
je
cmp
and
mov
sbb
add
mov
mov
sbb
sub
inc
fmull
add
mov
fs
lods
and
mov
dec
in
daa
call
std
jecxz
inc
es
jmp
lods
fdivl
push
andl
mov
ror
in
jmp
jge
add
iret
lret
or
and
dec
mov
ret
or
dec
inc
mov
dec
int
dec
popf
es
xchg
pushf
or
je
and
lock
xor
push
xor
ds
rcll
push
push
pop
pop
mov
in
dec
jne
adc
mov
adc
arpl
and
notl
mov
cmp
adc
mov
mov
mov
pusha
data16
mov
les
mov
jbe
push
cs
xor
jns
mov
mov
test
lods
xchg
mov
mov
and
pop
mov
cmp
je
mov
fistl
inc
hlt
call
jle
mov
add
or
and
jne
mov
sbb
mov
pop
subb
cmpsl
sbb
dec
mov
mov
push
mov
lods
shrl
adc
in
mov
lea
add
ret
adc
imull
scas
sbbb
inc
and
push
sub
sbb
loopne
adc
or
daa
or
aaa
pop
data16
add
rcrb
incb
push
add
sub
out
sub
adc
push
add
sub
imulb
push
repz
push
test
arpl
lahf
mov
movq
repz
test
mov
out
or
push
mov
pusha
in
pop
or
xchg
add
das
sub
ret
xor
pop
and
or
js
les
mov
jle
mov
mov
call
fadd
mov
cmp
sarb
mov
fdivrs
or
cwtl
and
and
and
xor
mov
pusha
push
sub
mov
and
push
xor
jmp
and
mov
fsts
dec
loop
loope
mov
xor
or
add
mov
or
mov
pop
and
cmp
pop
outsl
jo
addr16
cmpb
cmp
push
cmp
imul
aaa
mov
pop
and
push
jnp
aas
mov
add
pop
adc
mov
addr16
sbb
adc
and
or
adc
aas
les
movsl
mov
stos
stos
sbbl
mov
adc
call
sub
mov
ret
sbb
inc
or
mov
dec
shrb
fisubrl
sub
fwait
int
or
lea
push
or
cmpl
pop
inc
pop
mov
jmp
jbe
mov
ss
push
lods
aaa
inc
add
jae
les
sbb
sub
jp
lret
jg
dec
mov
cmp
jl
add
jg
mov
cmp
scas
lret
jl
cmp
inc
inc
cltd
jl
push
outsb
sahf
mov
pop
push
mov
ljmp
inc
je
mov
aad
cmp
push
sub
push
sbb
inc
mov
and
and
pop
dec
addr16
or
sub
sbb
loope
mov
jmp
ljmp
jae
xchg
aaa
jne
and
sbb
add
jae
lret
dec
insl
enter
fadds
xor
cmp
mov
mov
cmp
cli
adc
inc
mov
jmp
mov
xlat
cld
pop
inc
cmp
jl
les
je
cmp
daa
jb
cli
sub
mov
add
cmpl
mov
mov
add
push
sahf
dec
xor
andl
or
insl
fcmovnu
or
fisttps
push
inc
dec
sbb
iret
sbb
cmp
sti
je
test
rolb
fcomps
dec
or
shl
push
mov
add
les
jo
add
add
rorb
mov
jne
mov
sub
mov
lods
out
lcall
mov
mov
cmpl
mov
add
pusha
lea
shr
jle
xchg
dec
rcr
mov
jne
daa
add
ljmp
shlb
cli
dec
or
adc
mov
adc
jmp
maxps
data16
dec
pop
and
push
fdivs
mov
pop
and
or
arpl
push
or
xchg
xor
outsb
adc
pop
sbb
mov
inc
inc
cmp
jl
add
mov
shr
enter
mov
loopne
repz
mov
push
push
jno
push
mov
xchg
int
dec
push
push
push
mov
sbb
mov
adc
iret
dec
aaa
cld
inc
inc
mov
je
and
mov
lcall
pop
clc
ja
add
push
scas
clc
jbe
dec
add
sub
add
inc
push
mov
push
adc
outsl
cld
loopne
dec
lods
xor
add
faddl
jg
adc
pop
rorb
adc
inc
fcompl
andl
fstps
adcl
pop
sub
lcall
adc
push
cmp
movsl
sub
cltd
adc
cmp
sub
js
push
adcl
adc
andb
ret
sti
or
and
inc
cmp
testb
je
pop
inc
sub
mov
inc
shr
or
pushf
inc
fisubl
xor
sbbl
sti
lock
add
push
imul
xchg
scas
enter
pop
jecxz
data16
adc
mov
add
and
addb
cmp
mov
sub
mov
inc
push
nop
sbb
in
cld
adc
adc
add
mov
push
in
mov
cmpb
sub
gs
mov
lret
jo
outsl
jb
jb
mov
daa
gs
cld
jb
lret
mov
jne
fs
insb
das
daa
lret
mov
xor
js
je
adc
adcb
daa
cwtl
movsl
mov
in
push
add
insb
or
lret
xchg
out
pop
mov
imul
push
add
jge
std
fimull
je
addl
cmp
in
add
xchg
mov
dec
mov
imul
or
xor
dec
adc
mov
inc
cmp
push
adc
cmp
je
push
push
loopne
add
xor
cwtl
and
stos
push
inc
xchg
mov
or
jne
and
add
push
mov
scas
or
push
sbb
fst
or
push
cmp
hlt
sub
jmp
add
pop
sub
nop
mov
dec
mov
fldl
mov
add
bnd
in
push
lcall
sub
test
xor
rorb
mov
mov
cmp
push
pop
test
or
push
fsubrl
add
iret
pop
dec
jbe
mov
call
sub
cltd
fsub
fadds
cmp
inc
je
cmp
stos
mov
and
add
and
test
clc
jmp
mov
pop
lock
mov
add
mov
cwtl
cmp
or
loope
int3
push
push
push
push
std
mov
data16
add
bnd
and
lods
cmpl
xor
and
adc
pop
inc
outsl
inc
ja
jl
test
mov
sbb
or
stos
push
ret
inc
or
mov
fisubs
push
mov
pop
mov
out
and
out
xor
pop
loope
dec
arpl
in
addl
imul
fs
add
jmp
addr16
in
out
fwait
jmp
orl
xchg
std
jae
std
loop
scas
push
leave
jecxz
jne
mov
add
mov
les
gs
inc
addb
ss
xchg
xor
jns
push
xchg
in
js
dec
push
push
mov
test
rcr
cld
xchg
add
inc
mov
sbb
xor
push
dec
or
aaa
in
das
sub
pop
dec
jne
xlat
repz
and
loop
xlat
jbe
mov
hlt
push
adc
loope
push
mov
push
test
outsl
aam
lock
mov
adc
mov
sub
and
xor
mov
icebp
inc
push
movsl
sbb
and
adc
add
push
scas
mov
add
addr16
cmpsl
xchg
xor
adc
lret
mov
inc
inc
gs
insb
sub
mov
outsl
jb
jb
ret
mov
js
in
jnp
jae
sub
and
inc
das
mov
enterw
adcb
pop
cmp
lahf
adc
int3
test
std
imul
out
imul
jns
xor
out
inc
push
arpl
adc
push
pop
xor
jmp
movsl
les
add
add
add
push
rorb
les
jmp
aaa
mov
jb
rol
ja
aam
icebp
push
pop
mov
adc
fwait
add
cmp
mov
imul
adc
nop
xchg
out
dec
xor
mov
fmul
xchg
das
fcom
add
fdiv
inc
in
call
enter
cmpsb
mov
subb
cs
xchg
xor
insb
and
insb
push
lods
or
sub
fsts
push
inc
test
mov
cs
xor
or
scas
lea
je
and
sbb
add
inc
add
push
pushl
arpl
jae
add
adc
lcall
repz
outsl
outsl
insb
push
xor
popa
jo
push
fildl
je
popa
insb
and
ss
adc
jo
adc
pop
inc
insb
inc
cwtl
add
pop
inc
dec
gs
xchg
cmovbe
mov
arpl
push
imul
push
jnp
inc
add
dec
outsl
fs
mov
roll
add
fs
aaa
pop
std
imul
jg
xlat
adc
mov
jg
add
fs
push
je
inc
jns
cmp
jne
or
and
mov
roll
jb
cmp
pop
sub
test
add
or
add
pop
loope
sti
out
add
cmp
push
mov
sbb
push
js
jno
push
push
je
jb
insb
popf
loope
fcmovnu
insb
push
das
push
add
gs
stc
jae
popa
test
in
inc
push
mov
cmc
or
cmc
sbb
xor
imul
mov
fimull
addr16
mov
ret
jns
mov
outsb
arpl
push
push
imul
add
outsl
jo
xchg
sbb
jnp
fucomip
imul
jnp
fcoml
aaa
imul
push
inc
push
aad
add
and
fwait
mov
pop
add
sbb
adc
jnp
test
pop
xchg
popa
or
imul
xorb
insb
add
add
inc
cmpsb
fisubl
pop
mov
adc
addl
or
pop
sub
add
arpl
imul
push
outsb
push
sarl
adc
dec
inc
push
dec
inc
insl
testl
je
aaa
mov
inc
mov
add
mov
test
push
pop
mov
outsl
push
jb
fs
cmp
push
icebp
push
adc
pop
mov
inc
pop
pop
and
ds
xchg
add
push
shll
insb
test
mov
frstor
jne,pt
xchg
push
push
push
jmp
scas
push
cmp
sub
push
adc
int
pop
push
inc
in
movl
sub
sub
dec
and
push
not
mov
sub
bnd
sti
pop
and
jae
sub
pusha
outsl
outsb
sbb
pop
add
movsl
jbe
jne
pop
imul
sbb
add
adc
aam
or
add
dec
xor
pop
add
icebp
mov
jnp
fidivrs
mov
xor
jb
cmp
in
out
adc
inc
outsb
jne
inc
inc
push
inc
addl
imul
add
or
arpl
mov
adc
inc
adc
push
jb
pop
add
fisubrs
mov
pop
and
out
fiaddl
roll
imul
xchg
xchg
int
dec
xchg
popa
push
mov
mov
jb
add
adc
insl
sub
insb
jns
ficoms
or
insl
add
inc
arpl
mov
test
push
add
js
sub
btrl
sbb
mov
inc
pop
push
add
dec
aaa
jbe
mov
nopl
out
in
jmp
dec
sbb
push
and
ffreep
jecxz
dec
out
sahf
int
mov
lds
adc
outsb
pop
stc
fdivr
sub
or
loope
pop
jbe
gs
and
add
xor
ret
cmp
dec
add
and
xchg
data16
je
sbb
mov
sbb
cltd
adc
adc
arpl
sbb
imul
ja
mov
add
mov
or
sbb
fwait
test
push
mov
push
mov
jo
xor
xor
fcoml
jbe
dec
xor
inc
xor
lods
jecxz
loope
pop
push
fimull
dec
push
dec
xor
pop
je
cmp
cvtdq2ps
aas
ss
push
lods
inc
in
das
icebp
jmp
add
ret
xchg
call
push
rcr
les
ja
add
jo
jmp
pushf
call
rcr
push
fdiv
loopne
jmp
inc
jnp
or
push
insb
cmp
add
sbb
popf
adc
add
adcl
mov
fistpll
cwtl
insl
shll
cmp
inc
push
mov
push
jo
out
inc
jb
push
inc
ret
inc
jle
xchg
dec
inc
inc
and
sbb
or
jmp
inc
mov
and
decl
mov
test
popa
mov
hlt
dec
push
add
xor
stos
orb
decl
and
icebp
pop
adc
cmpsl
push
rcrb
fnstenv
xor
ljmp
pushl
daa
leave
scas
adc
push
fsubl
jo
test
sub
jmp
mov
data16
and
movsb
sub
jne
imul
sar
lcall
fmul
sbb
loope
addr16
mov
push
loopne
out
pop
dec
jb
cmp
fnstsw
dec
push
call
repnz
xor
jnp
test
lahf
cmp
fcomi
lods
push
xchg
push
cmp
push
or
scas
in
jmp
incl
mov
xchg
loopne
sti
mov
imul
or
or
decl
addl
lret
mov
inc
loop
hlt
push
testl
add
jg
mov
rcr
cmc
sbb
test
add
outsl
dec
inc
incl
loope
push
sar
jl
add
loope
idiv
ljmp
fdiv
rol
rolb
rcl
lds
pushf
lds
rcl
sbb
ror
ror
into
std
cmp
movsl
and
sub
adc
jg
outsb
cmp
rcll
sub
and
stc
clc
cmc
rol
push
mov
lret
push
jbe
stc
add
adc
pusha
pusha
pushf
divl
ret
je
enter
sbb
ret
mov
test
push
mov
or
iret
loope
and
xchg
out
add
adc
add
pop
cmpb
jmp
push
test
push
xor
std
mov
pushf
push
pushf
cld
es
mov
jae
sbb
out
outsb
mov
bswap
incl
xlat
pop
push
push
add
sub
mov
xor
jbe
jb
popf
pushf
movb
push
ljmp
push
jg
add
add
ljmp
jmp
fistpl
push
popl
add
movb
jne
fildl
jge
pop
jmp
ljmp
sub
push
mov
adcl
jnp
push
adc
inc
out
fsubr
nop
mov
inc
adc
cmp
loop
push
sub
add
or
fmull
movsl
rorb
pop
jmp
in
jae
inc
pushf
xchg
mov
mov
rcl
shr
shr
mov
loopne
dec
inc
lcall
fcmovnu
or
insb
test
mov
add
pop
ja
add
sub
push
out
cwtl
jnp
imul
cmp
xchg
data16
and
ja
test
push
shll
and
fldenv
in
push
andl
loop
loopne
ljmp
mov
jae
pusha
inc
push
add
sub
push
or
jg
mov
xor
andb
cmp
inc
xor
cmc
sbb
in
add
mov
or
jmp
fwait
mov
js
fs
cltd
push
or
dec
add
push
mov
addr16
or
add
sub
sub
pop
or
sub
sbb
mov
dec
mov
mov
dec
cmpsb
jnp
faddl
jmp
adc
je
sub
test
call
movl
jg
or
mov
mov
and
lea
sti
pop
mov
mov
lea
cld
call
sub
xlat
ret
call
mov
fwait
call
aad
sbb
lea
inc
and
outsl
mov
xlat
mov
push
xor
xor
call
decl
aaa
mov
push
cwtl
clc
into
cmp
xorb
or
ja
pusha
push
sbb
ret
sub
sub
aas
dec
loope
mov
sti
mov
dec
dec
jmp
in
lret
sbb
pop
sbb
push
adc
jae
pushf
fldl
call
jb
jl
mov
call
outsb
flds
cmc
mov
outsl
xlat
adc
stc
pushf
movsb
pusha
insl
call
ss
mov
aaa
mov
call
push
fsubs
pop
and
mov
ds
addr16
or
in
popf
stc
fistl
rol
lock
fucomip
notl
mov
js
lea
call
clc
leave
mov
loope
into
push
es
mov
xabort
inc
cmc
stos
fidivl
mov
mov
or
push
push
popf
das
call
shrl
push
jmp
ror
setno
aaa
jne
je
stc
aad
jmp
sub
or
test
ja
pusha
mov
jmp
mov
fisubrl
sub
pop
inc
mov
jae
shr
dec
scas
jecxz
push
dec
int
rcrl
sub
aaa
adc
sahf
mov
cmp
mov
pop
scas
fdivr
inc
cmp
shr
clc
out
movsl
sbb
add
cli
add
jmp
pop
inc
insl
add
addr16
sbb
push
pop
sub
ret
mov
or
cmp
adc
into
adc
loop
and
pop
mov
inc
cmp
xor
or
mov
push
jecxz
inc
cmpsb
inc
jbe
fwait
outsb
pop
jecxz
mov
adc
lcall
popa
and
jae
ja
sti
popf
add
pop
push
out
pop
mov
mov
scas
xor
xchg
adc
pushf
stc
jb
inc
pop
mov
fstl
dec
jmp
mov
pop
shll
loope
enter
mov
mov
mov
fisubl
call
dec
in
or
adc
push
ret
cmp
dec
ja
jmp
imul
lahf
gs
mov
jp
mov
jne
sbb
dec
ret
fldl
push
out
pusha
jge
cmc
or
or
outsl
pop
lret
fprem1
mov
mov
inc
xor
test
cmp
call
repz
lret
mov
push
aad
lea
out
pop
mov
push
ljmp
rcrb
leave
sub
sbb
add
jno
or
xor
pushf
xchg
sub
popf
or
xor
and
sbb
or
clc
push
aam
cmp
add
int3
cmp
call
cld
mov
lahf
sub
repnz
or
push
fwait
jnp
push
pushf
lea
aaa
pop
sub
pop
jno
fistl
pop
push
mov
xlat
pop
cmp
sub
push
sahf
cld
shl
mov
push
daa
and
jl
add
arpl
push
das
pop
out
inc
call
inc
and
pop
out
adc
cmp
dec
push
ret
aaa
outsl
cli
decb
xlat
jo
int
lret
rcl
pop
add
push
sbb
xchg
xor
loopne
les
and
mov
mov
call
dec
lret
fnsave
call
in
jbe
jmp
mov
push
call
xlat
sbb
add
ss
dec
ja
popa
pop
push
adc
mov
mov
push
icebp
shrd
xor
loop
aad
push
xor
mov
sub
mov
sub
clc
or
es
pusha
push
push
mov
icebp
insb
mov
jle,pn
lods
rorb
mov
cmp
dec
or
mov
push
or
ror
clc
call
or
or
lds
and
mov
xor
shl
cmp
jo
jb
xchg
push
mov
jg
dec
loopne
jmp
shlb
adc
mov
jle
mov
fisttps
test
and
or
or
jo
and
call
pushf
adc
cmp
dec
jle
cmp
scas
fidivs
outsl
or
insl
mov
icebp
jbe
outsb
and
add
cmc
cmc
xlat
push
ss
push
fcompl
cltd
ret
pop
repnz
sbb
cwtl
dec
mov
push
mov
shr
xchg
and
xlat
adc
jecxz
out
pop
mov
cwtl
ret
testb
xchg
aaa
mov
ficoml
sbb
cmp
cmp
pushf
mov
jecxz
pushf
shlb
adc
fistl
pushf
shlb
pop
cmc
jl,pt
mov
lcall
mov
fadds
cmp
inc
sub
pusha
cmc
ret
pusha
sti
cmp
clc
sub
test
dec
jo
cmp
pop
gs
jmp
popf
push
xchg
sarl
dec
repz
jmp
shr
pop
fs
xor
lret
aam
mov
lcall
cmp
or
clc
lahf
imul
js
or
dec
pushf
pop
lods
ds
sub
enter
call
or
push
call
out
mov
cmp
lret
call
jnp
jp
ret
cmp
xchg
imul
mov
call
mov
inc
sub
mov
xchg
fimuls
into
mov
mov
lock
adc
int
out
imul
xor
pop
aam
pop
dec
add
shl
cmc
jmp
in
or
push
std
push
setnp
not
add
fisttps
pusha
in
xchg
out
out
or
setb
lea
push
mov
dec
xor
in
call
lret
mov
ret
les
mov
and
jns
fidivs
les
fisubrs
in
cmp
sub
imul
cwtl
stc
and
in
movsl
pop
dec
dec
sbb
fs
js
imul
add
test
stos
adc
rcll
data16
push
call
out
rcr
mov
push
and
icebp
outsl
push
orb
lea
shrb
inc
cmpl
mov
loopne
xchg
je
pop
ljmp
pop
movsl
dec
mov
jle
les
lret
cmc
andl
pusha
stos
adc
movb
fprem1
jne
stos
xor
cmc
mov
shlb
repz
outsl
push
scas
or
repnz
pusha
dec
xchg
fisubl
or
sub
ss
ret
les
inc
jae
test
jmp
adc
jo
out
outsb
icebp
mov
call
cmp
mov
loop
and
loope
push
cmc
mov
nop
jmp
adc
dec
lock
sub
mov
push
loope
arpl
jbe
sahf
jb
jb
fwait
mov
mov
cmc
jo
call
add
mov
cmpsl
push
hlt
jecxz
add
adc
in
cmp
jl
fists
dec
xchg
out
cmpsl
ret
push
pop
mov
leave
inc
lret
adc
imul
call
add
xchg
jp
rorb
adc
sub
out
sbb
jnp
inc
push
sti
xchg
loope
loope
outsl
shlb
jae
shl
test
rcrl
shll
fnstenv
pusha
xchg
mov
dec
mov
ss
fnsave
cmc
jno
sbb
fcomps
je
push
xor
popf
decb
loopne
pop
or
mov
sar
std
sarb
inc
stc
aam
jb
mov
mov
pushf
clc
cmc
sub
sbb
incl
stos
rolb
mov
push
jl
sbb
das
lods
sub
sbb
push
sbb
xor
lods
rcr
rcl
pop
dec
push
lock
or
inc
lock
mov
rolb
jb
fbstp
pop
pop
adc
bound
into
sbb
imul
in
fstpt
mov
insl
sub
or
or
cmc
ret
cs
pop
jmp
mov
push
cmpsl
or
adc
mov
push
sti
pop
xor
arpl
xor
cmpsb
pop
mov
setl
call
shl
call
data16
jmp
cltd
jo
shll
push
or
pop
cmp
aaa
pop
push
insb
pop
in
or
iret
push
test
mov
jmp
test
int
daa
rclb
push
cmp
mov
out
in
ss
push
xchg
rolb
add
in
or
push
add
or
cmc
sbb
mov
pop
sahf
inc
or
psrlq
test
cmp
fwait
scas
pop
cld
cmp
inc
cmp
cwtl
fstps
jge
mov
jge
xor
or
aas
inc
fistpl
adc
push
sahf
outsl
mov
jae
inc
das
arpl
les
outsl
les
popf
std
pop
xchg
or
pop
pop
push
pop
negl
cmp
add
daa
aaa
dec
std
fidivs
lret
arpl
xchg
xlat
sbb
lret
jmp
test
addr16
out
insl
fistps
sbb
lea
jnp
xchg
sbb
fucomip
xor
insl
xchg
fsubp
adcl
out
sbb
pop
sbb
js
das
arpl
or
pop
jle
mov
fwait
incb
mov
es
sti
pop
pop
fidivrs
cmp
xchg
or
movzbl
cmp
inc
fistpll
jo
jae
scas
xchg
push
das
or
pop
cmp
js
sbb
pop
fidivrs
jo
imul
add
fidivrs
sbb
xor
fdivs
push
aas
jecxz
jmp
daa
scas
mov
jnp
pop
push
negl
ret
xchg
scas
pop
out
cmp
pop
mov
js
outsl
sti
jge
fidivrs
xchg
decl
inc
or
ja
xchg
and
scas
cmpsl
or
aaa
adc
jmp
add
jecxz
neg
cmpsl
cmovnp
pop
add
dec
add
int3
sbb
jae
or
inc
push
push
inc
cmp
fcomip
xchg
out
xlat
xchg
iret
shll
out
lock
cmpsl
pop
addr16
sti
ffree
push
jle
test
pop
jmp
repz
dec
mov
loopne
jnp
or
jbe
sbb
aad
xor
push
or
lahf
inc
addb
inc
or
cld
stos
call
adcb
pop
sub
rcrl
xor
andb
pop
mov
xchg
jmp
jmp
loope
push
enter
fsubrl
rcrb
xor
lret
add
xchg
push
mov
ljmp
rorb
aaa
push
push
mov
xchg
inc
outsb
and
add
pop
into
add
jge
mov
jmp
xor
out
scas
xchg
ret
aad
or
lea
cld
aas
or
cmp
das
mov
sub
or
out
cmpsl
fists
mov
movsl
and
mov
pushf
mov
jb
mov
lcall
xor
out
loope
imul
push
xor
adc
call
in
out
loop
movsb
fistpl
jg
addr16
arpl
push
sub
jmp
jo
jge
insb
loope
xor
sub
dec
ss
data16
push
push
aaa
and
inc
clc
sbb
pushf
xor
jne
or
push
loope
gs
popa
or
pop
hlt
push
sti
scas
lods
testb
outsl
xor
jmp
cld
iret
add
push
mov
sbb
xchg
jns
jbe
test
shll
push
mov
ret
xor
test
rclb
out
int
ja
out
jae
mov
or
jnp
mov
jo
pop
imul
push
inc
jo
push
sub
sahf
fstp
adc
sbb
or
add
push
pop
mov
push
inc
lea
dec
stc
push
sub
adcl
clc
shrl
adc
adc
insl
jmp
cmp
and
push
ret
sub
cmp
pop
lods
negl
push
out
inc
inc
jmp
das
rolb
loopne
fdiv
sub
ja
push
cmc
neg
inc
cmc
sub
clc
stc
insb
adc
int
mov
and
aad
adc
jo
lret
and
mov
call
out
dec
cs
es
popa
in
ljmp
push
fdivp
push
xchg
mov
shl
fadd
enter
mov
lret
in
leave
pusha
imul
push
or
lock
jo
enter
dec
sub
pusha
jne
jle
sub
imul
fsubs
jg
fnstsw
xchg
pusha
jp
and
sti
xchg
sub
push
call
repz
shl
and
stos
mov
insb
push
popa
fnstcw
lock
loopne
loope
mov
stc
seto
enter
fcomip
arpl
mov
push
push
sbb
push
bnd
jmp
loop
scas
out
pusha
mov
frstor
jne
jnp
ljmp
mov
fwait
pop
push
pop
xor
clc
pusha
sbb
or
jecxz
js
xor
decl
sub
pop
push
pop
test
stc
add
pop
and
mov
pop
mov
neg
stc
inc
adc
loope
or
loope
shll
rcrl
sbb
dec
dec
mov
pop
in
jbe
hlt
mov
mov
add
cmp
shl
jb
fidivrl
aam
idivl
dec
clc
rolb
in
mov
and
mov
xor
sub
xchg
vxorps
es
ja
out
stc
call
aad
shl
ficoms
call
std
sbb
or
push
not
push
mov
lock
inc
push
cli
sbb
stc
and
sbb
clc
push
xorl
clc
xchg
inc
push
mov
std
std
mov
mov
pop
mov
inc
add
mov
xor
call
add
lods
jecxz
ss
mov
inc
xor
adc
xor
sahf
repz
cmpsb
mov
arpl
sarl
xchg
add
test
dec
lods
add
and
cld
sbb
cmp
ficompl
or
shl
inc
arpl
daa
mov
je
sub
mov
cmp
jmp
shrb
aas
pop
add
aad
lahf
into
aad
les
fidivl
cmp
rorb
sarl
roll
rolb
out
shr
dec
cmpsb
push
add
cmpsl
mov
adc
cmc
pusha
scas
std
ret
sar
enter
mov
nop
jmp
decb
inc
enter
sub
and
xorl
or
jmp
pop
mov
adc
jle
adc
notl
cld
pop
sbb
cli
push
and
mov
xlat
xor
pop
scas
aam
shrb
ret
inc
sbb
mov
pop
fwait
cmp
jno
adc
out
add
sti
aaa
loope
xchg
push
jle
jmp
mov
out
popf
sub
xor
stc
call
cs
mov
out
push
sbb
lods
imul
mov
mov
lods
sbb
jae
std
cltd
mov
ja
xor
inc
mov
mov
mov
mov
xchg
stc
cmp
lods
xchg
jmp
iret
loop
adc
xchg
fbld
jge
mov
xchg
mov
add
cwtl
dec
and
adc
and
jbe
outsl
out
mov
in
push
lcall
sbb
sub
je
cmp
test
add
or
loopne
orb
push
fstpt
test
or
jmp
mov
insl
ds
pop
fidivrs
punpckldq
aam
and
jo
or
inc
test
push
sub
push
daa
and
mov
push
sti
out
mov
cld
mov
and
jg
pushf
dec
mov
jne
push
push
push
cs
jp
idivl
lea
jne
add
inc
pusha
fld
out
add
loopne
jbe
pop
scas
mov
daa
adc
pushf
sti
inc
pop
mov
stos
or
popf
test
repz
shll
js
cmp
xchg
mov
sbb
mov
cmc
arpl
mov
test
push
pushf
cmc
sbb
test
out
push
sti
push
adc
or
sbb
push
popa
pop
push
cld
push
lods
inc
xchg
popf
cmp
or
sbb
cltd
call
push
dec
xchg
push
lahf
pusha
sbb
dec
pop
lock
or
jne
dec
fsubl
add
pop
mov
lds
fidivs
add
lret
fstl
std
loop
jge
neg
adc
mov
cmp
sub
in
scas
cmp
idiv
push
ffreep
push
data16
not
dec
or
jo
adc
push
in
out
mov
dec
push
test
dec
rcl
stos
shrl
movsb
cli
add
rolb
pop
std
push
add
add
add
ret
mov
shlb
aad
popa
sbb
mov
jno
testl
push
ret
js
fwait
test
sbb
dec
sbb
jecxz
loope
adc
dec
sub
sbb
popa
arpl
mov
test
aad
cld
pop
cmp
and
loop
xchg
jmp
gs
js
sti
pop
loope
inc
lret
lret
xor
inc
out
test
add
add
cmp
sar
mov
push
mov
pop
fists
inc
call
sub
and
fistps
and
xor
xor
jno
daa
loopne
add
adc
xor
or
nop
fnstenv
cmp
mov
or
add
pop
jmp
std
mov
mov
repnz
outsl
test
push
add
in
cltd
ror
xor
mov
jbe
cmc
aad
testl
adcb
pmuludq
aas
xchg
popf
test
pop
adc
in
ljmp
pop
fwait
pop
movsb
or
xor
adc
xor
xchg
sarl
add
setnp
imul
cmp
movsl
push
stc
and
add
cmp
or
sti
push
fld
repz
cmp
mov
push
push
cmc
xchg
cmp
pop
pop
mov
xor
and
mov
jbe
mov
mov
cmpsl
fisubrs
lcall
or
push
xchg
mov
sti
mov
test
or
jmp
fldl
fdiv
pop
xchg
scas
xor
inc
mov
adc
fnstcw
adc
mov
rol
push
imul
push
jle
mov
pop
inc
cmp
push
fs
aad
push
or
loop
ds
add
sti
sti
xchg
mov
add
push
mov
fistl
push
adc
mov
fdiv
cmpb
test
inc
lods
adc
pop
out
lods
mov
jmp
lock
call
mov
loopne
jmp
lcall
iret
inc
mov
call
test
lods
sbb
add
mov
in
ret
fstl
jns
xor
lcall
jns
sub
je
xchg
aaa
frstor
and
xchg
daa
inc
lods
cmp
jg
pushl
dec
xchg
mov
push
push
scas
cmpsl
sarl
aaa
lcall
fs
xor
add
add
jecxz
lcall
stc
pop
imul
adc
or
enter
bound
incl
out
pushf
test
push
xchg
mov
dec
mov
mov
pop
xchg
jmp
jmp
mov
rcll
mov
mov
icebp
pop
sub
add
ss
or
adc
jmp
add
out
cmp
mov
sbb
jo
jle
push
shlb
call
imulb
mov
cmp
daa
pop
mov
push
xchg
cmp
imulb
lcall
repnz
cmpsl
and
cmp
and
std
mov
mov
loop
dec
fbstp
mov
outsl
xchg
push
mov
aad
out
sbb
dec
or
mov
cmc
lret
push
jb
xlat
dec
sbb
inc
orb
push
inc
call
das
jge
in
popa
js
and
xor
outsl
lock
adc
pop
cmc
add
in
push
sbb
push
jmp
in
stc
bound
sbb
mov
icebp
push
in
push
and
aaa
jmp
push
sbb
mov
and
fmul
movsb
push
mov
loope
mov
push
incl
inc
int3
je
das
test
repnz
mov
pushl
loopne
std
jno
xchg
sbb
adc
test
or
ljmp
sub
inc
inc
push
cmp
cmp
push
or
shrb
cmp
jmp
mov
std
mov
push
jo
mov
pop
cwtl
pop
mov
mov
out
mov
decl
adc
mov
dec
fwait
mov
pop
xchg
popf
mov
jmp
xchg
int
sbb
ficoms
sub
cmpsl
push
mov
fdivrs
xor
ljmp
inc
cltd
mov
inc
cmp
mov
jbe
addr16
out
cltd
rcll
dec
jnp
scas
repnz
out
push
iret
xor
sbb
inc
sbb
mov
mull
icebp
lock
movsl
call
lock
sub
jecxz
sbb
fistpl
hlt
jl
sub
mov
mov
jg
pop
jp
inc
jne
xchg
mov
xchg
cmp
sbb
pop
cs
dec
dec
pop
add
incl
aad
fimull
pop
ss
aad
push
iret
mov
dec
rolb
push
out
pop
cmpb
cmp
nop
jp
fistpll
incl
xchg
scas
xor
mul
inc
jae
xchg
aam
inc
lods
outsb
sti
sbb
daa
je
mov
loope
jbe
filds
fwait
mov
aas
cmpsl
mov
lcall
stc
mov
scas
test
loopne
imul
push
adc
ficompl
dec
mov
push
pushl
incb
inc
test
push
lods
jno
pop
adc
dec
jg
testl
mov
lcall
std
movsl
push
jnp
ffree
ja
fidivs
sub
ficoms
sbb
fdivr
jg
and
pushf
int
insb
stc
xchg
and
out
dec
aam
lea
pop
sti
add
pop
jg
push
jae
movsb
lods
inc
adc
xor
shrd
stos
or
cmp
push
mov
dec
and
pop
xchg
lcall
sbb
push
jecxz
add
leave
push
lret
jp
sbb
inc
fucomip
call
or
out
das
mov
out
fldcw
dec
jp
inc
rcrl
mov
cld
jl
sbb
leave
hlt
mov
cli
stc
mov
jg
mov
nop
and
adc
into
jno
push
adc
frstor
sbb
test
call
cmpsb
faddl
xchg
les
popf
adc
mov
sti
pop
push
hlt
cmc
xor
xor
int3
cmp
incb
jmp
adc
sub
jl
mov
shrl
add
out
ljmp
pop
jnp
jae
lret
xlat
mov
std
js
lds
shlb
js
loop
pop
mov
cld
imul
mov
xchg
cmp
dec
xlat
xor
notb
pushf
cltd
fsts
cltd
ror
add
loopne
mov
adc
loop
loopne
lea
in
test
mov
stc
fldenv
inc
in
mov
push
inc
scas
cld
in
call
imul
in
mov
les
and
sub
rol
add
in
outsl
sub
insb
pop
fninit
pop
or
push
push
test
pop
mov
add
movsb
mov
cmpb
jbe
pop
push
and
add
cmp
mov
call
cmp
int3
in
into
dec
outsb
or
or
ret
xor
add
sbb
lock
call
cmpl
in
jl
pop
ljmp
sti
enter
fwait
lea
push
push
add
sub
mov
cmp
mov
xchg
cmpsl
xor
rolb
inc
test
mov
idiv
or
lcall
mov
cmp
scas
xor
fcmovnbe
push
push
cmpb
das
out
insl
push
mov
sbbl
sub
ljmp
leave
pop
mov
rcrb
ret
cmp
mov
lret
cmp
incl
inc
lea
pop
cmpl
or
xor
pop
xchg
inc
xchg
push
pop
les
sub
test
sub
mov
cmp
idivb
popa
imul
adc
add
push
jecxz
stos
pop
mov
jae
inc
adc
leave
pop
mov
sub
movntq
out
xor
in
jg
ret
cmp
rcr
rclb
daa
mov
jg
addr16
and
test
sbb
imul
sysexit
enter
push
popa
orl
mov
lcall
jg
sub
sbb
add
sti
les
and
jnp
je
sbb
dec
push
push
pop
gs
call
mov
mov
jb
and
scas
fdivrs
lahf
clc
xchg
incb
test
and
or
call
push
imul
insb
jecxz
jae
mov
sbb
imul
movsl
test
test
inc
jle
clc
pop
lret
out
lds
lcall
hlt
mov
push
mov
or
pop
enter
add
cmp
ljmp
inc
cmpsb
sarb
mov
mov
test
fsubrl
pop
xchg
ret
into
jl
insb
lea
and
incl
xchg
xor
cwtl
mov
pop
leave
pop
pop
push
mov
cmpsb
add
ret
cmc
xchg
add
outsl
hlt
and
cwtl
or
dec
or
mov
dec
scas
inc
mov
stos
inc
xor
sub
repz
jecxz
inc
push
push
lcall
push
repz
int3
mov
arpl
nop
inc
out
sbb
hlt
push
inc
mov
or
incl
ja
or
jnp
out
add
jb
shll
xor
in
adc
decl
pop
in
outsb
dec
xchg
lock
lods
outsl
xchg
or
lahf
or
cli
test
jg
jmp
pop
or
jl
xor
in
loope
rcr
fs
test
xchg
lock
decl
dec
jecxz
adc
push
loop
incl
xchg
loopne
test
stc
mov
push
xor
pop
test
fcmovnb
jg
outsb
fcompl
lcall
das
cmp
mov
ss
push
adc
loop
cmpsl
adc
outsl
mov
sub
pusha
sbb
out
test
enter
or
test
mov
jl
lock
xor
ds
mov
jp
push
orl
mov
push
push
popa
loopne
and
jmp
push
push
test
rclb
mov
mov
scas
xchg
push
push
jae
xchg
aaa
out
std
jae
pushl
or
add
xchg
pop
dec
lret
add
ds
jns
adc
mov
test
push
rcll
pop
xchg
in
lds
xchg
out
inc
addr16
cmpsb
push
ljmp
cltd
or
sub
lock
pop
outsb
cld
pop
jecxz
pop
cmp
mov
sti
sub
lcall
aas
in
mov
cmpl
insl
xor
pop
push
arpl
mov
rorb
call
mov
jecxz
hlt
arpl
inc
roll
subl
jl
ret
icebp
fistl
dec
and
rorb
cld
lcall
adc
pop
sahf
fmuls
push
call
jg
sub
push
and
imul
ja
cmp
mov
ljmp
mov
push
or
gs
mov
push
mov
outsb
popa
sbb
mov
hlt
bound
xor
jmp
cmc
data16
jge
test
ficoml
xchg
pop
push
xor
fldl
in
idiv
pop
fcomps
sbb
push
sbb
sarb
xor
mov
lea
mov
sbb
lahf
test
add
out
cmp
negb
push
pop
rclb
aas
sbbb
mov
inc
lcall
clc
and
mov
cwtl
out
lock
jl
sbb
movsb
jge
pushl
add
xlat
mov
lahf
push
cmp
xchg
push
cmp
jb
mov
cmp
in
ljmp
nop
sub
mov
call
jg
aas
pop
fdivr
mov
int
lcall
fxch
xchg
iret
jg
test
mov
int3
out
add
fwait
idiv
loopne
mov
mov
ja
jns
mov
and
shr
inc
pop
aaa
pop
pusha
mov
fnsave
pop
pop
xor
adc
sarb
test
shll
gs
es
push
ffree
xchg
rol
cmp
or
xchg
mov
sbb
jmp
adc
mov
xor
stos
cmp
and
push
lods
call
inc
mov
divb
sbb
pop
clc
inc
sub
in
add
mov
stos
ljmp
repz
mov
aam
ljmp
jg
lds
push
mov
xor
iret
ss
loop
das
test
clc
or
loope
or
pop
lods
test
insl
fwait
jno
mov
cltd
call
xor
xchg
push
jge
in
add
lcall
and
mov
sbb
mov
pop
dec
lods
mov
mov
dec
dec
inc
pop
inc
inc
jo
and
es
xchg
outsl
pop
dec
sbb
jg
int3
fs
mov
int3
stc
cmpsb
popa
aad
imul
sti
sbb
jle
add
and
icebp
decl
jnp
ret
mov
push
leave
adc
pop
mov
test
dec
jo
repnz
decl
repz
iret
xchg
xor
jae
decl
mov
in
cmp
jp
sub
sbb
clc
sbb
pop
enter
and
dec
out
push
mov
jns
pop
aam
rorl
ror
cmpl
lcall
mov
mov
cli
daa
out
add
std
pusha
xchg
fcomip
and
mov
pop
iret
mov
dec
fistpll
xorl
fnstsw
jb
in
mov
jne
aad
inc
sti
test
je
fists
cli
inc
es
push
adc
sub
or
scas
sar
decl
out
sbb
push
push
lds
ret
je
adc
cld
pop
lret
les
call
cli
pop
sub
test
jo
divb
inc
mov
lods
ljmp
mov
mov
andl
pop
pop
push
mov
mov
xchg
mov
push
add
lahf
rorl
mov
xchg
add
and
testb
mov
gs
outsb
popf
fisubl
incl
or
mov
dec
addl
aad
clc
jbe
mov
dec
enter
std
cld
cmc
scas
out
imul
pop
inc
push
js
insb
pusha
cwtl
xchg
das
sbb
cli
add
lock
and
mov
adcb
xor
ljmp
iret
shl
xor
jae
insb
fucom
fcoms
subb
and
xchg
dec
jl
cmp
xor
jbe
les
push
adc
andb
jle
add
call
jb
xchg
es
ljmp
scas
cmpl
clc
mov
xchg
cmc
ljmp
jg
aam
lret
shrw
mov
push
aad
sahf
cwtl
push
mov
push
clc
xor
ss
fs
pop
mov
pop
out
mov
xchg
nop
lds
mov
lcall
mov
push
repnz
lahf
push
jge
pop
jle
pusha
and
and
sbb
mov
or
aaa
push
xchg
mov
pop
pusha
cmp
leave
mov
dec
mov
int
xor
jns
out
out
adc
push
lods
jmp
repz
shll
fstpl
mov
pop
lret
mov
add
pop
push
push
xor
push
pop
cld
shll
sbb
stos
lds
clc
and
push
pop
push
dec
pop
jge
push
jecxz
mov
imul
scas
jp
pop
pushf
cltd
pop
or
jg
adc
testb
hlt
push
mov
pop
mov
pop
mov
xor
jae
pop
xchg
lods
in
mov
or
dec
or
push
cs
ror
pop
int
cld
imul
andb
mov
das
fcmovnu
in
inc
mov
mov
push
and
int3
in
out
pop
xor
jmp
mov
add
loop
adc
fistpll
xchg
dec
mov
pop
add
cltd
test
repnz
call
adc
mov
popa
xchg
add
mov
jmp
mov
pop
add
cmp
xor
jnp
adc
ljmp
sbb
ds
dec
mov
and
sahf
sub
aam
adc
inc
lret
sub
mov
mov
mov
sarb
adc
clc
out
xchg
clc
add
push
rol
out
jnp
add
scas
fwait
call
push
inc
sub
inc
mov
or
out
mov
pop
push
adc
mov
mov
lcall
inc
sti
cli
inc
ljmp
hlt
adc
mov
js
mov
lods
std
outsl
lock
icebp
sbb
inc
fisttpll
mov
insb
cmp
in
adc
xor
fistpll
xor
xor
mov
jb
pop
mov
clc
fildll
dec
inc
pop
or
inc
sub
cmp
inc
shlb
fistpll
leave
sub
mov
dec
cmp
adc
repnz
jle
cmp
and
mov
xchg
stc
push
ret
push
sarl
inc
ss
adc
dec
aam
inc
mov
add
add
pop
xchg
pop
pop
lret
xchg
stos
dec
mov
mov
or
scas
push
cmp
fists
stos
test
pop
cmp
pop
gs
lcall
sbb
stos
xor
and
or
adc
cltd
out
lret
in
ljmp
jne
xchg
add
pop
mov
icebp
and
add
imul
mov
int
mov
loop
cld
dec
xor
mov
cld
sub
mov
add
leave
hlt
outsb
outsl
pop
jo
addb
jnp
call
cli
jmp
sbb
bound
sbb
test
repnz
outsl
lods
pop
sub
popa
mov
jg
mov
loopne
jp
scas
call
sub
cwtl
lods
call
cltd
aas
pusha
popf
jg
pop
ljmp
call
mov
sub
fwait
sbb
push
lret
out
insl
sar
imul
repnz
incl
or
adc
pop
or
jb
ds
ret
inc
mov
push
adc
xor
std
dec
cmpl
lea
xor
ss
mov
repz
dec
inc
decl
movsl
add
mov
jns
movb
or
mov
jg
or
push
rolb
pop
mov
aas
stos
mov
push
inc
dec
lock
sub
das
je
aaa
je
mov
rcll
rep
mov
pop
xor
jne
in
dec
cli
std
mov
fnstcw
sbb
jmp
ljmp
test
sub
sbb
mov
lds
push
jnp
std
call
subl
into
test
ucomiss
pop
lea
roll
pop
das
mov
sub
push
xchg
or
std
nop
mov
test
movsl
xor
repz
leave
stos
jb
cmpb
or
nop
push
fimull
pop
mov
lea
shll
cmp
jmp
test
push
add
mov
pop
jg
jne
or
test
imul
adc
scas
pop
sbb
inc
cmp
cmpl
jp
jmp
xchg
cmp
dec
aam
jae
jno
in
pop
and
sbb
pop
or
adc
es
sub
dec
rolb
std
or
loopne
push
xchg
push
lcall
lods
in
out
push
xor
add
sbb
ja
sbb
pop
pop
mov
mov
xor
push
loope
inc
out
cmovae
mov
incl
call
push
fldl
cli
sbb
es
das
std
jg
stos
shl
stc
lahf
and
push
out
mov
inc
gs
jns
ljmp
push
das
ja
or
nop
jne
pop
daa
cmp
ja
adc
push
mov
mov
sub
push
mov
mov
arpl
cmp
dec
xor
sub
mov
or
jecxz
jo
dec
push
and
push
cwtl
rorb
scas
or
arpl
add
shrl
mov
lods
sbb
daa
orb
inc
inc
pop
dec
jmp
xorl
call
push
adc
dec
dec
in
inc
xor
and
xchg
jb
sub
dec
popa
cmp
call
xor
push
add
stc
fwait
xchg
and
jns
sar
pushl
and
jnp
es
jl
pop
mov
xchg
pop
inc
std
test
pushl
mov
sbb
push
xchg
pop
or
mov
pop
pushl
and
jecxz
and
shrb
movsb
ljmp
ss
jg
mov
ss
orb
xchg
fs
lock
ljmp
sar
pop
iret
xchg
sub
sub
inc
arpl
sbb
aad
pop
rorb
add
mov
les
inc
xorb
mov
push
cmp
into
mov
fisubrs
push
jg
fisttps
or
adcl
add
or
jno
or
out
jg
int
clc
mov
add
mov
mov
aad
cmc
fildll
pop
ljmp
jmp
inc
sbb
or
mov
sub
repnz
mov
mov
pop
cmpsl
dec
jns
mov
icebp
jecxz
fistl
test
lock
aad
sbb
mov
outsb
mov
pushf
jmp
ljmp
and
test
aas
lcall
and
pop
adc
cmp
mov
inc
inc
dec
cld
adc
jo
out
push
popa
inc
data16
sahf
scas
inc
in
loop
sti
shr
popf
and
aad
mov
aad
lcall
mov
fistl
mov
mov
imul
xor
incl
nop
and
cmp
shlb
jg
sbb
ret
sub
rorb
cmp
scas
and
mov
jg
decl
xchg
iret
inc
push
aaa
mov
addr16
ret
sub
scas
pusha
add
lods
insl
clc
jnp
mov
mov
dec
jge
ja
adc
out
push
in
push
enter
ret
push
roll
xchg
cmp
push
inc
lock
addr16
mov
sbb
cmpsb
adc
push
dec
mov
shr
mov
jmp
pop
cmp
jae
aam
or
cmpsb
push
outsl
jno
testb
mov
cli
imul
cmp
mov
push
jg
adc
jno
sub
dec
mov
out
inc
aad
mov
loop
cmp
adc
fwait
push
jg
or
pop
jle
rorl
js
out
aaa
adc
jae
adc
incl
mov
or
jp
or
dec
les
ficompl
xor
lcall
cld
decl
cld
call
jbe
mov
clc
cmp
add
inc
aaa
pop
test
js
xchg
incl
xchg
push
xchg
inc
addl
mov
push
dec
call
jnp
ss
sub
mov
sbb
sarl
shrb
xchg
les
inc
test
sti
sbb
xchg
clc
loope
cmp
ljmp
hlt
decl
fsubrs
in
cld
adc
ret
cmp
jp
inc
xor
icebp
sub
adc
scas
push
mov
lret
push
xchg
adc
clc
lcall
lret
into
dec
add
cmpb
cmp
xchg
hlt
cmpsl
lds
scas
call
push
mov
pop
stc
xchg
aad
adc
jns
test
sbb
push
cld
sub
pop
add
pop
sbbb
jmp
mov
leave
std
std
movsb
mov
sbb
mov
jecxz
leave
mov
jne
pop
jmp
xchg
cmp
icebp
ss
aaa
pop
das
rolb
or
movsl
aam
cli
jg
stos
mov
mov
jmp
sbb
jno
sarb
dec
aam
mov
flds
sbb
loope
insb
push
cmp
sbb
test
mov
lods
scas
lea
je
jns
jne
push
out
xchg
and
roll
dec
pushl
nop
cli
popf
mov
rcl
sahf
or
mov
imul
call
lea
ljmp
cmpsl
pusha
out
mov
loope
jmp
incl
idivl
push
dec
call
sub
fdivl
pop
icebp
pushl
mov
push
mov
sbb
xor
loopne
pop
pop
jns
das
mov
lods
test
mov
out
lret
sub
sub
pusha
sub
nop
add
shlb
clc
test
xchg
repnz
lods
in
xor
fidivs
sahf
xchg
test
icebp
adc
push
lret
stos
ja
test
mov
repz
loope
jne
adc
dec
icebp
jg
sub
xor
or
test
add
xchg
add
ljmp
imul
sub
cs
rol
subb
rorb
in
test
jecxz
movsl
pop
test
out
xchg
cli
cmp
mov
add
inc
cmp
lds
cld
scas
fadds
popa
push
dec
cld
incl
pop
mov
push
icebp
ljmp
sti
sbb
loope
mov
aam
xchg
aas
push
mov
ret
repz
push
add
or
add
das
aam
repz
mov
invd
jmp
lds
lcall
pop
mov
into
sahf
bound
push
lods
out
clc
sbb
sbb
pop
popa
adc
dec
push
mov
xlat
xor
movsb
push
add
jg
dec
jbe
and
jne
jmp
ss
cli
push
loop
loope
test
mov
repnz
sbb
xchg
or
and
mov
inc
ror
ret
add
incl
fiaddl
imul
xor
ss
xor
jg
pop
push
cltd
jl
incl
mov
imul
xor
lock
push
lret
in
push
shlb
fistps
jp
and
jbe
mov
test
call
lret
cld
or
or
and
add
inc
ljmp
insb
lcall
and
jmp
xor
or
add
das
lahf
jnp
pop
cmpl
fldl
stc
sbb
add
mov
clc
sti
xchg
dec
and
mulb
cli
xor
mov
cltd
mov
jmp
orb
loope
movsl
cli
out
inc
xor
in
cmp
std
filds
mov
and
sbb
add
and
cltd
ffree
pop
fcomip
ds
in
jbe
in
jl
inc
orl
addr16
pop
push
xchg
add
cltd
nop
call
sbb
jecxz
call
popl
push
cld
mov
mov
push
jae
adc
add
leave
cmp
inc
adcl
xchg
ret
mov
aad
cltd
loope
jnp
xchg
mov
decl
repz
cld
adc
jle
push
or
test
outsl
in
pop
add
fcompl
adc
call
mov
call
stos
repnz
ljmp
jo
xor
mov
xor
mov
in
out
sub
cltd
fwait
sbb
sbb
pop
stos
cmp
mov
and
and
sar
jg
movl
mov
or
push
jmp
mov
inc
loopne
aaa
mull
lret
add
ret
pop
bound
pushl
fistpll
and
adc
cs
sub
ret
jg
bound
je
push
into
and
lahf
pop
test
fwait
add
pop
ljmp
jne
mov
lcall
addl
adc
inc
cmp
mov
mov
dec
outsl
ret
ljmp
fdivrl
jbe
lods
test
lock
rolb
mov
mov
sbb
aas
rcll
jnp
fisttpl
inc
in
mov
mov
mov
rorl
scas
pop
fcmovnbe
cmp
jbe
sar
outsl
lods
imul
dec
ds
jg
dec
in
std
add
decl
cld
push
jmp
movsb
adcl
out
pop
insl
push
xchg
push
dec
jbe
lahf
popa
loop
mov
mov
call
lret
cmp
ja
std
pop
pop
add
int
cmpl
cltd
mov
incl
xchg
mov
fbstp
test
arpl
jb
jg
sti
out
insl
push
jbe
fisubl
call
shlb
adc
or
shrb
subl
fwait
std
enter
jecxz
les
mov
icebp
call
inc
push
cs
nop
cmpsl
dec
fwait
xchg
jns
test
add
xor
mov
add
lcall
fsubrs
add
jbe
xchg
lock
cld
aaa
incb
cmp
repnz
pushf
aad
rolb
sub
pop
push
faddl
inc
jmp
and
repnz
xor
out
pusha
iret
ss
sbbb
push
cmp
subb
push
mov
jae
jg
adc
jmp
lret
mov
lods
inc
pop
pop
js
jmp
or
push
add
jnp
or
stc
mov
in
outsl
das
mov
outsb
xor
cli
test
das
lock
lods
flds
jl,pn
mov
lock
fisttpll
lcall
dec
subb
jp
pop
les
sbb
fs
jno
aaa
mov
filds
mov
mov
mov
test
pop
aad
hlt
addl
mov
shl
dec
vpslld
repz
pusha
ljmp
sti
loop
stos
shll
cmc
lods
stos
mov
push
jne
aam
repnz
decl
or
pop
mov
ljmp
ljmp
lods
pop
and
pop
or
jg
jns
cmp
mov
ljmp
mov
loopne
jg
fld
repz
ss
jbe
mov
sbb
mov
fadds
pushf
aas
sbb
xor
rol
inc
aam
cli
aaa
int3
cs
pop
ficomps
rclb
into
mov
push
nop
pusha
ljmp
jno
popf
ja
xchg
mov
or
fistpl
jmp
lret
dec
xchg
insb
cmc
dec
es
xchg
mov
in
pop
clc
into
or
iret
cmc
cmp
mov
lcall
flds
sub
mov
jmp
push
cmpsb
hlt
sbb
xchg
jne
jecxz
and
fstpl
mov
out
inc
inc
adc
imul
lods
verw
aam
push
adc
cmp
xchg
cmp
ljmp
sbb
push
addb
lds
std
call
test
cmp
mov
push
mov
add
ss
xchg
cs
les
imul
or
decl
mov
xor
and
inc
xor
loope
jge
test
jmp
call
stc
mov
mov
push
cmc
push
imul
adc
jbe
lret
push
jo
jmp
aas
mov
inc
and
adc
outsb
sbb
loope
cmp
frstor
pusha
push
mov
rolb
fidivl
in
jmp
int3
aaa
pushf
pop
adc
testb
inc
or
xor
inc
incl
xor
call
sbb
mov
mov
push
ljmp
mov
lock
std
std
test
xchg
insb
in
mov
ret
ja
aaa
fcmove
enter
incl
jmp
mov
pop
inc
ss
or
sub
jno
incl
test
dec
ds
aam
movsb
add
loop
sub
test
mov
xchg
push
and
insl
in
inc
xchg
mov
xchg
push
mov
add
loop
arpl
movsl
mov
ret
pop
jmp
xchg
dec
insl
test
repnz
incl
insl
ret
jge
das
outsl
int
sbb
cmpsl
pop
dec
pop
and
in
cmp
dec
dec
push
and
aam
pop
ret
lcall
adc
test
adc
outsb
add
inc
inc
push
xchg
xchg
mov
inc
bound
fimull
stos
mov
dec
incl
into
push
iret
pop
jns
pop
mov
jg
mov
shlb
xor
stc
mov
hlt
mov
lods
popf
push
push
cmp
outsl
jle
leave
xchg
dec
xor
add
cltd
rorl
in
out
inc
pop
es
jg
mov
xchg
aam
adcl
dec
rcrb
decl
mov
ret
jns
push
push
sub
cld
jg
aaa
pop
cmp
inc
mov
imul
mull
cld
das
mov
js
push
pop
test
inc
in
nop
outsb
add
pop
xchg
inc
jbe
in
lret
call
mov
pop
jge
int
repnz
mov
sbb
jg
daa
xchg
bound
mov
ret
ja
cwtl
adc
iret
jg
sub
out
jns
pop
pop
xlat
pusha
xchg
aas
or
jge
stc
inc
lahf
and
aam
push
ret
cld
ljmp
out
shlb
adc
test
loope
arpl
cmp
jecxz
lret
fbld
stos
push
lds
push
dec
ret
dec
adc
movsl
sub
rolb
xchg
lcall
mov
xchg
outsl
sub
add
push
jo
aam
ret
into
cmovge
imul
pop
loopne
out
jl
fxam
adc
jg
and
aam
push
leave
in
fldcw
add
sar
out
sub
addr16
inc
push
or
gs
dec
sbb
fidivs
incl
or
roll
xchg
push
lods
mov
into
into
scas
cmp
sub
adc
pop
add
inc
push
cmovl
dec
cwtl
dec
loop
sbb
frstpm(287
aas
call
and
test
dec
lahf
icebp
rcrl
add
lock
xchg
mull
repnz
xor
test
mov
sub
rolb
xchg
inc
sub
ret
xor
int3
lea
data16
or
dec
mull
lret
mov
jns
in
sub
pop
push
int
pop
cli
pushl
clc
xchg
divb
xchg
popa
adc
jnp
inc
push
cmpsb
push
add
out
out
fildl
movsb
je
stos
pop
sub
ret
and
jo
fildl
cld
jg
out
outsb
sbb
sarb
in
ror
int
insl
push
pop
pop
divl
daa
and
mov
dec
inc
jg
mov
aam
pop
rcl
adc
ljmp
jmp
dec
and
out
push
test
cltd
pop
das
and
incb
into
lock
dec
mov
mov
hlt
pop
icebp
ret
jge
xchg
int
frstor
and
or
dec
ja
mov
mov
insl
inc
inc
xchg
sub
repnz
xchg
push
test
enter
shr
nop
add
pop
jp
jmp
lods
in
int
push
xchg
pusha
je
sbb
inc
aas
inc
pop
push
push
int3
pop
jnp
adc
aad
lock
idiv
inc
outsb
pop
xor
jae
push
dec
mov
test
stos
fidivl
movsb
cmpsl
loop
inc
stos
mov
lods
sbb
shrl
dec
push
inc
mov
pop
stc
mov
jmp
fiaddl
out
jle
dec
pop
jnp
shrl
mov
lods
lret
xorb
mov
lods
and
repnz
or
xor
jno
in
iret
or
mov
pop
mov
mov
pop
sbb
dec
add
jge
imul
cwtl
cmpsb
mov
jp
in
cmp
mov
bound
pushf
adc
dec
movsb
decb
in
fnstsw
pop
lds
iret
mov
iret
mov
movsl
push
adc
loopne
xor
jg
and
push
mov
mov
mov
fs
data16
dec
stos
test
push
cmp
add
cli
aas
incl
fwait
cmp
imul
pop
fisubs
ret
jle
jne
call
and
call
decl
xchg
test
out
push
int3
push
ja
sub
scas
sbb
push
sbb
cmp
into
outsb
nop
cmp
jle
stos
push
mov
fwait
xchg
dec
jg
ljmp
addr16
xor
repnz
or
jb
fisttps
mov
mov
pop
pushl
xchg
ljmp
add
scas
push
push
xchg
push
stos
jg
mov
jecxz
repz
pushw
fcompl
pop
scas
push
lret
push
jl
das
cld
lret
data16
push
and
jecxz
out
outsb
sub
loopne
pop
sti
jb
cmpl
into
jbe
xchg
push
mov
gs
jb
out
sub
into
int
pop
sbb
jae
xchg
out
call
mov
fneni(8087
push
dec
ds
jne
call
add
aaa
pop
outsb
icebp
shl
cmpsb
outsb
push
stc
add
xchg
lret
pop
inc
scas
pop
les
and
test
ljmp
sar
leave
outsb
push
cmp
jns
sub
push
mov
dec
jbe
leave
cwtl
mov
lcall
jb
loopne
inc
stos
xchg
enter
adc
xorb
decl
incl
fisubrs
push
ret
and
xorl
out
fcoms
mov
pop
flds
jecxz
and
pop
dec
sub
popf
mov
clc
xor
imul
jbe
xchg
jecxz
inc
insb
mov
in
or
and
cld
jmp
addr16
icebp
aas
sub
xchg
mov
cmp
loopne
jnp
and
cmp
cs
xchg
scas
fisubrs
jns
lret
inc
fcmovnu
xchg
push
pop
push
lret
in
adc
es
fst
dec
and
lds
xor
js
fcmovu
and
push
lret
sti
nop
mov
xor
ljmp
sub
jg
mov
mov
xchg
int
xor
push
pop
cmpsl
and
mov
adc
mov
pop
lret
rorb
sub
fisubrs
ss
cs
pop
mov
xchg
jmp
ret
shrb
ds
adc
fxam
jnp
mov
push
adc
jbe
pushf
jmp
jg
add
insb
xchg
fidivrl
xchg
popf
inc
xor
incl
dec
loopne
inc
and
movsl
test
jo
cs
gs
cmc
fstps
gs
cmp
sub
cmp
jl
cwtl
cmp
loopne
inc
incl
fnstsw
ds
mov
aas
xor
sbb
aas
dec
aas
push
aas
pop
int
mov
aas
jbe
jnp
stos
aas
mov
inc
aaa
pusha
bound
pushl
xorl
push
xor
xor
fdivrl
ret
xor
xor
add
cld
xor
xor
xor
xor
xor
dec
xlat
xor
xor
pushl
icebp
xor
xor
jb
push
xor
xor
xor
xor
xor
xor
mov
xor
movsb
dec
xor
ljmp
xor
xor
xor
xor
xor
test
xor
xor
jg
jmp
xor
xor
xor
xor
xor
xor
or
fwait
xor
aam
call
cmp
ss
ss
xor
cmp
inc
aaa
dec
aaa
jl
xorl
cmpsb
cmp
cmp
pop
std
jmp
cmp
and
push
cmp
cmp
jne
inc
cmp
cmp
cmp
inc
cmp
cmp
cmp
gs
out
cld
aaa
ds
ds
outsl
pop
call
aas
mov
mov
mov
pusha
fcoml
xor
xor
xor
pop
xor
jp
pop
clc
decl
adc
xor
xor
xor
xor
xor
negb
jmp
xor
aaa
xor
pushf
xor
iret
xor
xor
sbb
xor
sbb
and
xor
adc
ljmp
xor
xor
xor
xor
xor
xor
xor
sub
xchg
into
xor
in
out
xor
and
sub
inc
ss
ss
ss
ss
cmp
das
lock
out
inc
cmp
int
jge
test
mov
xchg
cmp
cmp
cld
cmp
in
cmp
cmp
cmp
pop
cmp
cmp
aas
ds
ds
out
or
adc
popa
aas
push
call
out
addr16
jg
mov
aas
cld
jg
jne
jo
mov
xor
xor
adc
pushl
fisttpll
xor
xor
xor
xor
xor
xor
and
pop
adc
xchg
test
pushl
mov
xchg
xor
xor
xor
mov
xor
neg
sbb
shll
ss
aaa
mov
stos
cmc
outsl
outsl
jl
scas
cmp
popf
cmp
cmp
dec
cmp
cmp
pop
call
call
cmp
cmp
cmp
cmp
cmp
add
cmp
lcall
cmp
cmp
cmc
mov
mov
aas
inc
aas
push
aas
mov
mov
sub
xor
dec
xor
push
xor
xchg
jl
fnsave
xor
push
cli
decl
inc
xor
push
xor
insl
xor
mov
pushl
fnstenv
jecxz
cs
xor
xor
xor
lcall
xor
xlat
xor
ljmp
xchg
mov
inc
ljmp
out
ss
sbb
aaa
das
aaa
cmp
inc
aaa
lahf
aaa
cmpsb
mov
mov
aaa
mov
adc
pop
cmp
cmp
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
clc
pushl
jnp
popf
cmp
cmp
cmp
cmp
cmp
inc
jg
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
mov
add
fwait
lcall
sahf
xor
shlb
loopne
out
cmc
xor
sbb
mov
jno
xor
xor
jae
xor
adc
mov
jne
jge
xorb
lret
pop
clc
ljmp
mov
xor
xor
xor
xor
out
clc
in
out
xor
cltd
add
adc
sbb
and
xor
xor
pushl
inc
xor
dec
xor
imul
dec
mov
xor
jg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
pushl
js
xor
xor
jo
jns
xor
xor
ret
pushl
mov
xor
xor
ficoms
ljmp
push
cmpsl
divl
cld
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
daa
xor
xor
xor
inc
jmp
xor
xor
xor
and
ljmp
mov
mov
shlb
xor
or
adc
sbb
fbld
cmp
pop
ss
mov
pushf
mov
ss
fdivs
fdivrp
lods
pushl
jecxz
jmp
pushl
push
aaa
or
and
aaa
ds
mov
data16
insl
aaa
jle
xchg
xchg
imull
lret
aaa
aad
fnsave
jmp
mov
aaa
and
xor
cwtl
cmp
cmp
cmp
incl
in
cmp
dec
cmp
jl
mov
xchg
cmp
cmp
mov
add
or
cmp
inc
cmp
insl
cmp
cmp
cmp
cld
push
cmp
cmp
pop
cmp
inc
ds
ds
ds
call
adc
jo
subl
repz
popa
jge
or
out
ja
xor
divl
pushl
mov
pushl
cld
xor
xor
push
mov
xor
jbe
mov
xchg
xor
cmpps
lods
lds
int3
scas
xlat
xor
or
and
xor
xor
xor
xor
xor
jmp
pop
pop
inc
fstpt
cltd
xor
xor
lea
lcall
scas
inc
xor
pop
xor
jo
xorb
imul
stos
arpl
lcall
dec
lock
xor
test
inc
cmp
mov
cmp
cmp
cmp
cmp
and
shlb
xor
outsl
push
cmp
and
inc
pusha
adc
xor
xchg
adcl
mov
mov
add
inc
loop
pop
pop
popf
rcrl
repnz
fisttps
decb
popf
fstps
cltd
cmp
add
cmp
cltd
ds
sbb
add
aas
adc
das
lret
xchg
adc
or
add
sbb
add
mov
and
inc
daa
pop
and
pop
loope
xchg
jo
add
cmp
ja
push
jge
ss
je,pn
js
data16
int3
test
pop
cmp
xor
pop
jnp
insb
add
pop
or
fsubr
loope
jb
jb
inc
add
jae
add
daa
inc
filds
cmp
or
and
sub
add
add
nop
add
xor
inc
sub
adc
add
jnp
xor
inc
lahf
std
rorl
pusha
mov
and
sbb
inc
or
int3
cmp
adc
xchg
push
push
cs
insl
mov
push
push
push
pop
inc
add
or
jmp
push
push
pop
mov
mov
rep
or
inc
mov
sub
movsw
movsb
push
in
xor
mov
stos
insb
das
jbe
out
mov
adc
int3
or
test
add
jno
push
adc
push
add
mov
jne
or
jbe
mov
push
or
inc
in
pop
adc
testl
xlat
cmp
xor
test
out
xor
lock
jnp
fnstcw
je
push
sbb
rcr
jmp
dec
pop
pop
push
int
pop
lock
sbb
es
ret
or
aaa
scas
mov
push
insb
lds
hlt
jbe
adc
inc
mov
test
mov
in
xor
xchg
adc
fdiv
and
loop
xchg
cmp
inc
ret
lock
mov
mov
bound
fsubs
and
pop
popa
pop
ja
lret
pop
es
ds
idivl
pop
and
fwait
in
mov
les
dec
add
fcompl
repnz
hlt
mov
outsb
mov
or
insl
add
divl
cs
lret
in
xor
cs
fs
insb
cld
insb
pop
xchg
or
insl
xchg
test
xchg
add
dec
loope
fwait
pop
inc
jg
repnz
in
sbb
rorb
pop
inc
loopne
lret
mov
add
gs
dec
dec
inc
xorb
gs
adc
fwait
mov
dec
push
cmc
movsb
push
xchg
sub
pop
inc
xor
sub
xchg
scas
adc
cmp
cmp
dec
mov
push
aaa
dec
call
adc
adc
sub
lods
or
jg
rclb
add
addr16
mov
test
out
sbb
xchg
inc
push
jmp
mov
leave
pop
inc
push
mov
jns
outsb
adc
push
push
push
fs
es
sbb
push
sbb
add
push
mov
popf
lods
and
pushaw
ret
or
add
ja
and
cld
jecxz
or
mov
fdiv
clc
lock
inc
xchg
adc
adc
or
call
mov
outsb
xchg
push
or
push
ret
xor
rcrl
or
or
pop
and
push
icebp
jne
or
iret
xchg
jl
xor
js
pusha
loopne
fld
pop
jae
xchg
jno
and
stc
bound
xor
out
sub
insl
sbb
pop
or
jb
adc
push
inc
out
mov
push
push
sbb
aas
fnsave
loop
or
sub
xchg
and
loopne
xchg
or
gs
push
int3
loopne
cmp
lds
test
xchg
and
ret
adc
fistl
es
nop
mov
inc
movsb
lods
std
push
popf
orb
in
push
pop
clc
inc
das
jge
adc
sub
fildl
inc
add
setae
cli
cmp
jl
adcl
push
or
cmp
mov
mov
lods
add
lods
or
and
push
and
cmpsl
mov
adc
or
adc
daa
lret
mov
popa
outsl
outsb
gs
mov
jae
cs
int
fwait
es
aad
insb
xlat
popa
sub
inc
add
jne
arpl
leave
mov
gs
loopne
mov
js
fs
xchg
arpl
fs
mov
sbb
sti
xor
call
and
or
call
pmuludq
test
cmp
unpcklps
enter
sbb
dec
movb
outsb
lcall
insb
into
xor
movsl
pop
iret
xor
shrl
xchg
movsl
fs
push
cmp
out
and
push
lods
cmp
jl
add
dec
movb
mov
aas
std
enter
lods
pop
mov
std
mov
sub
out
int
into
jns
std
inc
xlat
cltd
movsl
std
js
push
ja
dec
cmp
push
int3
add
ret
out
pusha
sbb
mov
in
outsw
adc
sub
sub
xchg
fs
and
es
push
push
cmpsl
insl
inc
inc
sub
push
jge
inc
imul
dec
rcll
push
mov
popa
add
ret
outsl
enter
pop
or
aad
dec
aam
push
cmp
cwtl
adc
or
outsb
orl
decl
jne
in
outsl
push
add
or
je
test
in
mov
mov
mov
test
mov
inc
mov
dec
adc
pop
scas
aam
inc
ror
mov
jbe
xor
int
in
mov
push
inc
mov
mov
mov
fs
mov
inc
sbb
inc
xor
mov
add
and
dec
xor
insl
mov
call
daa
push
cmpsb
fldcw
fiaddl
add
testl
int
iret
pop
mov
fcom
outsl
push
outsb
outsb
fs
xchg
gs
cs
test
gs
outsb
xchg
gs
xchg
insb
popa
jne
arpl
aaa
pop
dec
jb
aaa
leave
sti
push
shlb
lcall
sub
cmc
sub
add
mulb
imul
jo
outsl
jb
sub
je
jl
gs
pop
add
js
bound
mov
addl
mov
or
je
xor
jp
sbb
call
ret
imul
in
or
fdiv
add
clc
loopne
mov
push
leave
sbb
cmp
je
sub
pop
ds
addr16
mov
mov
pop
sti
jl
movsl
cld
into
testl
je
testb
addr16
push
icebp
loopne
stos
call
sub
mov
xchg
adcl
mov
jne
push
cltd
or
cwtl
add
fisttpl
ret
gs
xchg
pop
call
add
mov
or
aam
add
fdivr
push
add
jnp
push
dec
mov
sbb
insb
xchg
or
cwtl
imul
add
es
dec
inc
and
mov
nop
dec
pop
add
aaa
push
inc
or
sbb
push
ret
pusha
push
cmc
rclb
adc
mov
adc
dec
mov
daa
adc
cmp
cmp
ret
sbb
testb
in
push
push
mov
pushf
or
sti
xor
pop
mov
arpl
inc
add
jae
insb
in
or
or
adc
and
nop
mov
pop
pop
add
stos
jb
jge
sbb
push
xchg
xchg
pushf
mov
sbb
inc
dec
enter
adc
inc
in
push
dec
ret
add
push
stos
stos
jns
pmulhuw
add
rolb
cmp
outsl
test
xor
or
test
inc
and
jo
and
and
fstp
xchg
sub
inc
sahf
add
push
add
loope
inc
dec
xor
push
filds
cmp
adc
mov
jmp
mov
cmp
je
jmp
add
sbb
mov
cmp
je
movsbl
fstpt
add
sub
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
or
dec
stos
fbld
pop
fldt
sub
incb
sbb
clc
inc
jl
add
jg
cmpl
mov
out
or
stc
stc
shll
subl
add
shll
rclb
mov
inc
pop
ss
add
push
imul
mov
test
add
out
fldt
push
lea
adc
jmp
mov
pop
jae
sub
mov
or
loope
and
push
ret
int3
cmp
inc
inc
pop
or
popa
inc
cmpsb
imul
cmp
cltd
fadds
pop
inc
pop
sbb
add
xor
cmp
pusha
je
xchg
dec
shll
mov
out
inc
fisubs
cmpsb
imul
dec
inc
xor
shll
push
adc
push
sbb
inc
add
dec
or
xor
ljmp
out
mov
sti
mov
dec
cmp
xchg
and
orl
xor
add
pop
or
loopne
lods
bound
and
popa
jns
jne
jae
xor
mov
stos
popa
fs
daa
add
sub
push
and
in
fistpll
jg
outsb
xor
or
js
add
dec
dec
inc
push
sub
push
push
push
dec
push
mov
sub
or
add
dec
sub
int
rclb
inc
nop
clc
inc
in
fwait
out
add
dec
inc
cwtl
inc
lcall
add
test
ret
addr16
stos
pusha
aas
faddl
sub
push
push
dec
repz
dec
jae
pop
popf
outsl
movsb
or
xlat
xchg
or
pop
shll
packsswb
jns
lea
jo
mov
adcl
sub
or
pop
xor
dec
sbb
outsl
int
xor
sbb
inc
or
dec
outsb
xor
adc
loop
sbb
imul
add
pop
adc
xor
mov
lcall
mov
add
jb
and
add
inc
outsl
js
jp
inc
and
andb
sub
jno
push
roll
fisttpl
and
inc
add
mov
test
test
cltd
and
andb
or
cltd
insl
insl
dec
mov
pop
scas
jae
mov
xor
push
xchg
cmp
scas
imul
add
pop
insb
xchg
xor
add
fstps
or
jne
mov
std
xlat
jge
addl
pop
adc
pop
ss
cwtl
pop
stos
ss
mov
lcall
pop
jmp
lcall
mov
sti
scas
imul
jmp
dec
or
add
jecxz
or
inc
adc
call
arpl
cmp
cmp
testb
dec
clc
je
inc
ret
je
dec
rclb
test
rcrb
sbb
or
sbb
mov
les
adcl
push
test
jbe
inc
lods
add
leave
adc
xor
mov
sbb
adc
jno
sbb
sbb
ret
adc
packssdw
arpl
enter
jnp
sub
sti
imul
add
data16
xorl
or
fldl
pop
jns
pop
pop
mov
test
or
mov
pop
mov
adc
sub
ss
stc
roll
imul
mov
sbb
addr16
add
add
add
sbb
xor
lods
lods
jecxz
clc
pusha
push
aas
add
int
mov
xor
push
add
pop
movsb
push
or
lcall
dec
mov
dec
add
add
incb
cmp
aas
push
movsb
fildl
or
rolb
jb
sbb
cmp
push
xlat
popf
outsb
leave
or
mov
fimuls
jecxz
inc
and
mov
outsb
inc
jae
and
add
movsl
popa
and
add
pop
mov
xor
gs
jne
jo
imul
xchg
insl
outsb
adc
pop
add
add
adc
faddl
add
push
jb
cmp
xlat
cs
xor
add
jmp
outsb
xchg
jne
ret
mov
popf
xchg
pop
dec
or
jge
mov
lds
popf
addr16
mov
jnp
cwtl
adc
xchg
pop
xor
sub
insl
add
sub
sub
pop
fs
or
insb
fsubs
dec
imul
push
daa
jbe
pop
imul
je
inc
mov
fs
test
rorb
pcmpeqw
jae
dec
pop
fldenv
xor
fstl
gs
imul
and
add
insb
cmpsl
xchg
aad
and
add
test
xor
or
loop
xlat
xor
xor
sub
xor
fbld
xor
xchg
xor
xor
xor
fsubs
ljmp
add
xor
xor
xor
xor
xor
or
mov
ss
aaa
clc
pushl
aaa
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
sarb
cmp
jg
jecxz
cmp
pop
xor
inc
ds
ds
movsl
ds
sbb
leave
ds
xor
mov
xchg
sar
xor
andl
fwait
dec
xor
push
xor
adc
bound
dec
test
adc
jmp
popa
inc
mov
test
jb
add
hlt
jl
xchg
out
popa
adc
fildl
inc
out
flds
sbbb
divl
jl
orl
adc
cld
jb
and
and
pop
sub
push
inc
pop
pusha
and
pop
push
test
outsl
or
mov
adcl
add
repnz
enter
adc
stc
dec
mov
push
xchg
mov
sub
pop
add
and
bound
sysenter
dec
mov
push
das
add
push
shlw
sahf
scas
shll
cli
cs
cmp
out
sub
dec
xor
xor
shll
in
add
fcoms
xlat
movsb
ja
int3
jp
pop
lcall
add
inc
adcb
incl
nop
pop
and
ret
test
dec
lcall
out
and
fwait
outsl
lds
jnp
or
sbb
inc
insl
ljmp
imul
adc
push
adc
adc
adc
stc
in
and
add
add
and
inc
dec
adc
jns
xchg
or
enter
adc
cmp
mov
sub
aad
and
and
and
in
pushf
nop
and
and
dec
sbb
add
and
add
inc
pop
and
or
cmpb
iret
and
push
mov
in
call
push
add
push
jmp
cld
and
mov
adc
icebp
nop
call
shlb
pop
loope
add
pop
hlt
addb
add
call
fcompl
lret
cmpsl
rcrb
repnz
mov
cmpl
cld
mov
jne
add
adc
clc
push
ljmp
pop
lahf
sbb
mov
std
mov
mov
lret
mov
incl
incb
xor
mov
add
push
push
xor
xchg
fsubr
add
cmp
jmp
inc
stos
add
cmp
psadbw
add
es
iret
test
cld
mov
sub
and
add
lea
popf
sbb
xchg
pop
mov
pop
add
scas
ds
or
mov
loope
in
outsb
cld
xchg
sarl
cmp
pop
insl
or
xor
stos
sub
xor
mov
mov
dec
je
push
inc
cmp
in
and
lock
imul
and
test
and
pop
push
popf
mov
repz
call
xor
rcll
jmp
js
lcall
pop
inc
sbb
or
sub
jmp
pop
jle
inc
add
lea
in
push
mov
push
cld
mov
dec
mov
jne
es
pushl
add
or
hlt
inc
add
imul
mov
imul
mov
pop
mov
test
and
in
pop
pop
loopne
sbb
clc
dec
call
inc
mov
jg
mov
jle
lea
jo
inc
sub
or
scas
adc
cmp
jne
mov
inc
nop
add
fnstenv
pop
popf
jecxz
xor
mov
xor
je
adc
jae
hlt
push
rcl
and
mov
or
push
nop
jnp
shr
push
enter
push
inc
and
adc
rolb
and
test
adc
pop
daa
and
inc
aam
mov
xor
cld
jns
call
adc
or
lds
pop
rcrl
xor
out
mov
int
push
das
ss
mov
sbb
in
out
cmp
adc
xchg
inc
aaa
sbb
inc
pop
fstpt
add
push
lea
int
jne
pop
mov
rep
mov
pop
ficomps
lods
jb
dec
xor
decl
mov
or
sarb
pop
jl
jmp
push
mov
imul
js
fadd
clc
push
add
out
mov
sub
mov
je
xchg
add
and
inc
ljmp
cwtl
and
or
xchg
mov
sti
add
mov
push
lea
or
cmp
pop
mov
push
mov
push
int
fnstsw
sbb
in
push
negb
sbb
call
xchg
inc
lcall
or
add
adc
and
add
sub
xor
mov
int3
jo
xchg
and
jno
push
mov
push
push
call
loop
aas
add
in
fdivp
int3
stc
clc
adc
movsl
and
inc
int
fidivs
add
sbb
inc
lahf
add
addr16
mov
dec
repnz
call
push
in
fidivrs
loopne
dec
test
and
xchg
mov
inc
mov
jne
imul
adc
jns
fistpl
sbb
sbb
fstp
fistps
sbb
sbb
loope
jecxz
sahf
or
in
aam
inc
inc
inc
inc
xlat
fcomp
inc
inc
inc
inc
fcmovu
inc
inc
inc
inc
loopne
dec
sahf
inc
inc
loop
loopne
test
idiv
decl
int3
xor
je
cltd
cmp
sbb
lret
inc
sub
inc
xchg
movsb
dec
andl
xchg
out
nop
aam
mov
sbb
rcl
and
pop
in
sub
call
adc
cmp
and
mov
imul
or
jmp
popa
in
push
cld
mov
sbb
stos
sbb
sbb
out
adcb
in
inc
jmp
daa
fs
jl
insb
add
lea
das
arpl
xor
pusha
add
cwtl
inc
push
add
sbb
or
adc
les
xor
shlb
xor
add
add
mov
xor
add
add
mov
mov
or
mov
adc
xorb
lahf
bound
mov
je
or
mov
push
push
push
fcmovnu
push
inc
add
jbe
outsl
insl
lods
mov
aas
jae
mov
movsl
xor
lods
push
lret
add
lods
test
xchg
jg
or
add
add
jge
and
xchg
jne
inc
push
xchg
movl
ja
mov
push
outsl
jbe
jb
jb
fcom
jle
stc
pop
dec
outsb
das
fisubrl
add
adc
out
insb
jae
dec
into
and
stos
add
xor
les
test
stos
add
sbb
pop
inc
shll
push
jl
push
xchg
addr16
adc
das
fdivl
insl
mov
enter
fdivs
mov
in
dec
mov
cmp
push
insl
xor
js
pop
pop
inc
nop
das
dec
xor
fisttps
xor
xor
xor
xor
jmp
xor
xor
adc
fidivs
xor
xor
in
and
adc
push
aaa
jbe
mov
xchg
aaa
stos
aaa
cmp
dec
in
and
clc
cmp
mov
pushl
mov
add
cmp
cmp
add
call
cmp
cmp
cmp
cmp
mov
push
cld
fbld
inc
cmp
push
cmp
movsb
and
adc
push
test
mov
add
sub
test
aam
cmp
gs
adc
xor
sbb
stos
sub
add
cmc
push
gs
jne
arpl
fldcw
cmp
clts
mov
cmp
adc
push
sbb
jg
sbb
xorb
add
adc
add
sub
test
shll
push
add
popf
mov
incb
add
rolb
shll
sbb
lock
insb
dec
add
mov
je
add
cmp
in
sidtl
int
add
popf
pop
push
and
arpl
mov
or
add
in
mov
push
dec
addb
nop
scas
cmp
push
fisubl
jl
mov
or
sub
add
xchg
and
add
push
movsl
and
xor
popf
xor
xchg
adc
adc
add
mov
push
inc
add
aas
movsl
mov
add
incl
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
