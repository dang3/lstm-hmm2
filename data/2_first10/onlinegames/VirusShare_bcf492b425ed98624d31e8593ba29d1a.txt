ja
push
mov
push
push
add
mov
mov
pop
sub
push
push
mov
mov
mov
add
fstpt
ja
mov
mov
xor
lea
stos
stos
mov
in
or
inc
testl
test
data16
fucomp
adc
add
lea
jl
in
aas
fsubrs
psubsb
add
ret
pop
pop
inc
sub
pushl
fdivrl
push
push
mov
add
inc
or
fmuls
or
jne
push
mov
sbb
inc
sbb
mov
push
aaa
push
mov
das
adc
mov
pushl
sahf
mov
jmp
push
pop
ret
mov
push
out
sbb
mov
and
pop
pop
pop
leave
ret
inc
sbb
in
int
test
jne
or
pop
and
mov
das
inc
mov
or
mov
imul
jne
or
add
std
out
ja
nop
push
sbb
or
mulb
outsl
jmp
cmp
push
push
push
inc
push
adc
cwtl
xor
add
jnp
or
fsubs
adc
je
or
jmp
adc
inc
and
push
cltd
je
mov
incl
push
push
xor
mov
test
je
mov
sub
mov
inc
inc
test
mov
jne
xorb
fildl
push
or
mov
movzbl
inc
cmp
jl
add
jg
add
adc
inc
in
out
ds
cmp
shll
add
shll
inc
imul
insb
rcll
cs
push
or
insl
outsl
mov
adcb
mov
cmp
pand
mov
or
add
sub
in
lds
push
push
sbbb
gs
push
insl
mov
repnz
orl
mov
xchg
xchg
mov
push
push
addr16
inc
mov
cmpl
test
adc
mov
add
add
sti
mov
insl
nop
inc
sub
or
fnstsw
pop
sub
dec
inc
push
add
outsl
outsb
arpl
add
add
aam
mov
cmpb
imull
add
lea
pop
lock
push
add
cs
cld
test
pop
je
mov
sub
fdiv
orl
pop
fcomps
adc
pop
cmp
jl
push
jnp
mov
xchg
shl
inc
in
negb
pop
sti
jbe
push
inc
imul
mov
jecxz
in
push
push
lahf
imul
adc
insb
push
xchg
lock
mov
pop
jns
lea
pop
mov
inc
jbe
in
mov
jnp
or
sarl
push
push
or
sbb
test
loope
stos
mov
lret
inc
sbb
int3
mov
jb
pop
jo
mov
jmp
sub
push
in
add
lock
lcall
es
lret
movb
mov
add
or
gs
jb
outsb
mov
or
insb
add
xor
xor
jb
in
in
out
out
int3
dec
mov
outsl
into
popa
iret
pop
rorb
shrl
scas
pop
outsb
add
inc
aam
aad
jns
mov
outsb
add
inc
mov
adc
je
jbe
shll
dec
ret
in
mov
pop
lds
sbb
jnp
arpl
push
mov
mov
push
mov
test
sub
lea
jge
or
push
decl
jne
mov
sub
or
sbb
jecxz
inc
inc
jns
ret
loope
cmp
lock
cld
cld
subl
shr
dec
mov
mov
jns
and
xor
sbb
aaa
les
add
xchg
push
sbb
inc
add
mov
int
cmp
or
mov
inc
dec
jne
mov
popa
je
push
xlat
lea
dec
dec
or
mov
xchg
xchg
xchg
clc
les
dec
xor
movsb
or
add
jne
dec
push
mov
push
jbe
rorb
out
pop
clc
or
inc
fdivrl
jne
push
mov
in
jmp
xor
cmp
cmp
sub
je
sbb
add
jg
inc
rcr
fiadds
or
mov
fmull
jo
rol
sbbl
push
mov
cmpsb
sbb
xorl
add
je
or
sub
ljmp
inc
aaa
add
jl
lea
shl
mov
inc
add
cltd
dec
cmp
push
inc
xchg
mov
dec
mov
aam
fdecstp
clc
xor
add
clc
lods
aaa
cmp
or
lea
adc
add
nop
xchg
in
xchg
sub
cmc
pop
add
ja
push
imul
fs
jno
out
imul
fcomp
jmp
cmovno
push
insb
sbb
jne
inc
cmpsl
xchg
subl
shlb
pop
jb,pt
leave
inc
shl
jbe
je
lods
mov
scas
shr
out
and
xor
in
in
lock
dec
jb
jbe
cmp
aad
enter
sub
jl
add
mov
enter
mov
xchg
jns
std
int
into
add
pop
push
iret
jns
or
adc
jne
xor
not
popa
adc
add
push
push
mov
cmp
jne
jne
rcrl
ret
inc
les
xlat
xor
pop
lds
jns
lods
lods
pop
jne
sbb
aas
mov
mov
mov
jne
xlat
dec
mov
mov
mov
mov
mov
mov
jns
shl
jp
sub
pop
mov
adc
cli
add
stos
adc
movb
jb
mov
lea
sbb
dec
push
add
mov
cmc
mov
mov
nop
imul
adcb
jge
outsl
loopne
inc
xchg
mov
pop
add
test
call
or
sahf
push
add
roll
sbb
push
jne
lahf
sub
cld
jmp
rol
stc
pop
neg
xor
push
not
pusha
bswap
call
xor
jnp
test
jmp
push
jmp
xchg
mov
fstpt
jg
aam
jmp
mov
push
call
mov
negl
xor
jo
mov
xor
fistpl
jl
std
pop
sti
jbe
sbb
dec
mov
or
jmp
fbld
pushf
pushf
push
mov
jae
inc
add
call
sti
outsl
sbb
add
cmp
jmp
cltd
add
lods
xor
add
cmp
or
push
xchg
test
push
jmp
mov
push
je
dec
shrl
inc
gs
lods
gs
jo
sub
jno
pop
jmp
add
popa
in
pop
out
cmp
inc
mov
push
hlt
in
mov
jmp
scas
jmp
testl
psubq
daa
rol
mov
gs
clc
xor
insl
or
mov
adcb
not
adc
lds
sub
pop
fdivl
adc
adc
adc
adc
ja
sub
adc
and
scas
les
dec
push
loop
dec
push
jp
data16
test
add
dec
jecxz
movsb
fidivrs
mov
xchg
add
or
test
scas
adc
fadds
adc
je
inc
stos
xlat
inc
ficoml
sbb
lods
push
subb
xchg
aam
call
sbb
in
and
pop
adcb
jbe
add
xorl
pop
stos
daa
rclb
insl
ret
or
cmp
push
fisttpl
mov
divb
adc
mov
ljmp
movsl
movsl
sbb
inc
clc
movsw
movsb
push
inc
pop
ljmp
daa
cs
aaa
jbe
cmp
popa
mov
cmpsl
por
adc
and
xchg
push
das
inc
mov
mov
pop
and
mov
xor
xchg
jne
cmp
cli
push
ficoml
pop
or
xchg
push
mov
std
loop
les
das
adc
lea
or
mov
ret
add
xor
fdivrp
sarb
jnp
xchg
cmp
jle
add
jl
mov
pop
pop
popa
jle
jp
add
pop
jl
cmp
rcrl
pop
pop
adc
jnp
push
loopne
inc
fistpl
lret
cli
adc
movsb
std
cmp
cmp
sbb
movsl
xchg
stc
adc
pushf
nop
iret
xchg
stc
test
test
nop
iret
or
cld
cmp
mov
mov
mov
leave
pop
pop
adc
cwtl
inc
pop
fdivs
nop
xor
lea
lods
push
adc
jp
cmpsb
mov
insb
lcall
popa
arpl
mov
in
cmc
inc
in
jae
xorb
push
push
cmp
pusha
or
xchg
stc
daa
inc
lods
movnti
add
jnp
test
and
out
or
js
or
add
mov
ja
fwait
aad
jno
push
aas
pushf
sti
ljmp
push
mov
and
in
mov
inc
add
call
in
or
inc
or
rcr
or
bound
bnd
mov
or
inc
divb
scas
mov
fwait
cli
adc
lcall
xor
loope
pop
loope
enter
xlat
pop
leave
bswap
or
push
fmuls
fsts
fdivl
loopne
xor
and
inc
jo
inc
inc
imul
pop
cmp
data16
js
push
rolb
repnz
ret
lods
lcall
ret
sbb
rorl
aam
aad
insb
or
xlat
mov
lods
mov
dec
test
jnp
sub
add
test
testl
push
je
lahf
jmp
shr
xchg
mov
out
adc
cmp
adc
cs
je
add
jne
lcall
or
xlat
pusha
notl
sbb
sbb
imul
test
adcb
push
in
clc
mov
adc
incl
push
mov
icebp
int
pop
imul
adc
popf
mov
pop
fildll
dec
pop
test
sbb
imul
pop
mov
dec
test
bound
adc
aad
cs
lock
je
jmp
cmp
or
cmp
and
shr
in
xchg
xor
jae
sbb
in
and
push
add
or
sbb
pop
mov
pop
pop
adc
ljmp
add
popf
jl
pusha
sbb
xchg
xchg
jge
jae
insl
mov
or
gs
or
jle
and
push
imul
addr16
cmc
cld
andb
add
sub
sbb
or
push
sub
loope
decb
sub
pop
cmp
jae
mov
push
js
push
data16
or
pop
adc
sbb
add
mov
incl
nop
nop
push
jge
andb
testb
jge
jnp
scas
ja
mov
push
mov
ja
adc
mov
dec
out
icebp
inc
outsl
jne
push
sbb
or
ret
mov
sub
mov
mov
mov
out
nop
add
pop
cltd
fistl
daa
push
xor
push
cltd
inc
lcall
xchg
jge
bswap
insb
call
pop
andl
ds
xor
orb
out
jmp
pushf
filds
mov
mov
adc
or
call
in
insb
ja
ret
xlat
shlb
cmc
pop
jmp
lea
cmc
sbb
push
or
or
in
adc
cmp
aad
cmp
std
cmp
test
mov
sbb
or
in
mov
or
cmp
pop
mov
test
in
or
lea
fiaddl
insb
add
imul
notb
inc
push
call
and
jbe
clc
hlt
hlt
pop
pop
addr16
xor
shll
mov
mov
ss
push
cld
inc
adc
fsts
push
sub
leave
or
cmp
push
stos
inc
or
fmuls
ret
jnp
je
cmp
mov
mov
enter
adc
js
pop
idivl
inc
mov
pusha
rolb
push
xor
inc
dec
push
fwait
arpl
jo
pusha
addr16
sti
leave
push
cmp
pop
sbb
and
xor
inc
call
xor
sbb
add
incb
sbb
adc
inc
lcall
or
test
stc
jmp
sub
fcoms
inc
adc
popa
or
adc
aaa
imul
or
fadds
mov
sub
cs
jmp
adc
insb
mov
inc
inc
adc
gs
int
pop
pop
sbb
divl
xor
adc
mov
test
push
in
push
inc
push
call
inc
sub
ljmp
dec
pop
out
pushf
out
stc
lcall
cli
ret
xchg
pop
lea
in
sub
ret
or
enter
adc
aaa
and
lock
sbb
dec
cmp
push
pop
push
xchg
xchg
mov
mov
arpl
mov
popa
push
and
mov
xor
mov
outsb
xchg
dec
or
ret
imull
mov
add
mov
lock
inc
inc
mov
push
dec
test
stos
or
in
mov
cmp
push
ret
inc
test
xor
xor
lods
add
jnp
ss
add
sti
push
pushf
jb
sub
add
ljmp
enter
mov
mov
mov
push
add
lcall
mov
adc
ss
inc
dec
call
dec
inc
jbe
push
stos
out
jbe
in
or
divl
lods
loopne
inc
mov
push
or
sub
cmp
sbb
xor
mov
dec
sbb
push
ds
mov
inc
aas
inc
xchg
dec
xchg
pop
out
loope
cmp
or
xlat
add
repz
add
add
jnp
xchg
and
int3
outsb
xor
and
inc
or
repnz
jg
push
cmp
je
cmp
repnz
push
xlat
insb
aam
dec
movsb
je
imulb
inc
mov
movzwl
push
sub
clc
sub
cmc
sub
push
inc
subb
sbb
fildll
lahf
in
inc
or
test
push
fistl
loop
nop
mov
rclb
mov
loopne
mov
sub
inc
fcomps
in
mov
push
inc
xor
add
imul
imul
sub
and
ss
add
dec
shll
jl
xchg
lods
fnstenv
hlt
or
add
push
cmp
xor
loop
je
fldenv
xchg
and
shll
popf
ss
add
dec
shll
cs
pop
out
xor
mov
addr16
xor
cmp
dec
aad
incb
out
push
mov
pop
jbe
pop
clc
xor
adc
std
sub
sub
xchg
lock
inc
dec
and
mov
adc
ja
andl
loopne
add
lods
pusha
decl
dec
xor
cs
insb
add
push
inc
push
dec
or
lcall
call
mov
mov
in
add
mov
test
jl
cmpsl
sbb
push
cmc
decl
out
out
sub
xlat
fistl
ss
rcl
test
mov
inc
fimuls
sbb
add
pop
je
outsb
push
jns
and
mov
mov
test
mov
jo
inc
bound
push
je
adc
pushl
outsb
addr16
js
mov
mov
and
add
pop
pop
sar
jle
and
fs
or
gs
gs
xlat
add
xchg
add
xor
xor
pop
add
mull
add
xchg
pusha
pushf
call
mov
out
and
adc
lea
mov
add
jmp
adc
jnp
add
add
out
mov
inc
push
push
mov
call
mov
pop
popf
popa
jmp
pop
inc
inc
pop
pop
pop
fstl
test
idiv
call
sub
lods
and
ss
xor
lahf
mov
sbb
iret
jle
std
inc
outsl
insl
arpl
xor
arpl
jae
mov
std
enter
mov
dec
into
les
mov
int3
out
mov
out
add
sub
or
add
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
out
fistps
fs
pop
daa
aam
lret
add
rol
mov
mov
mov
aas
jno
cmp
lea
dec
inc
int3
fldl
arpl
and
shlb
mov
in
inc
dec
ss
or
pop
add
daa
aad
enter
sti
add
insl
outsl
outsl
xchg
cmpsb
int3
mov
push
jle
dec
out
sbb
xor
jg
pusha
cld
ud0
mov
outsb
fs
sub
push
push
mov
jae
jae
gs
push
pop
pop
mov
xor
fisubrl
scas
mov
mov
daa
mov
add
add
outsl
mov
push
fstpt
or
add
mov
gs
inc
and
hlt
sbb
lds
cmp
add
aaa
jle
bound
xchg
push
push
xor
xor
pop
fimuls
out
or
subb
or
lods
xchg
or
stc
cmp
dec
add
nop
movl
or
inc
sti
jg
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
jg
mov
and
gs
out
mov
lcall
das
add
pop
xlat
mov
das
jle
in
fdivl
jns
in
jge
fnstsw
mov
ljmp
das
sarl
jb
popw
sti
fcomp
mov
das
fwait
pop
sbb
jne
push
imul
fdivs
add
push
dec
sbb
loopne
and
add
mov
adc
lea
add
insb
imul
pop
add
add
aad
push
xor
pop
outsl
cmp
push
add
or
push
adcb
jbe
insb
addb
and
pusha
mov
je
js
pop
mov
mov
add
pusha
testb
popa
je
or
push
sti
sub
push
sbb
add
add
notl
je
inc
sahf
daa
shrb
push
push
or
mov
ret
add
loopne
mov
ret
jae
arpl
add
sbb
or
fucomp
add
ja
insl
jo
or
or
fdivrl
ljmp
mov
iret
gs
daa
ds
imul
cmp
mov
and
insb
outsl
arpl
jae
ja
jne
pop
xor
inc
pop
mov
rclb
xor
mov
loope
call
pop
stos
vfrczps
cli
inc
lock
pop
xchg
mov
sti
movsl
scas
mov
lods
bound
mov
mov
call
push
or
fidivrl
pushf
pushf
jmp
rolb
mov
pop
stos
decl
add
push
add
pusha
call
mov
inc
fnsave
push
mov
sbb
mov
mov
call
gs
cmp
or
cmc
pushf
dec
jns
mov
mov
jae
cmp
pusha
in
and
inc
add
inc
movsb
push
jecxz
lds
fidivs
aas
push
xorl
sbb
adc
cmp
fnsave
push
sbb
pop
in
insb
sbb
adc
mov
sbb
outsb
lds
sbb
mov
shrl
jae
and
mov
pusha
mov
jl
insl
pop
adc
pop
push
ret
movb
mov
fwait
jmp
mov
sbb
ret
add
lock
dec
add
imul
adc
je
nop
je
mov
jg
repz
lea
jle
shll
stos
mov
push
aam
add
lret
mov
mov
es
xchg
fwait
sub
mov
arpl
out
sub
sub
xchg
stos
jg
movsbw
stos
mov
dec
mov
in
sar
fisubrs
shr
call
sbb
ret
faddl
xchg
adc
inc
push
test
sti
inc
clc
xor
push
mov
add
std
call
movb
in
gs
xchg
or
pop
stos
gs
xchg
jl
push
inc
inc
xor
rcrl
dec
inc
mov
xlat
dec
inc
dec
call
mov
cwtl
pop
adc
inc
les
mov
icebp
call
cwtl
push
push
out
out
in
mov
push
inc
sub
lock
add
divb
sub
add
pop
push
mov
jmp
orl
jl
and
notl
push
mov
in
pushl
sbb
sub
je
cmp
jae
movl
cmp
sub
fwait
push
pop
shll
add
popa
sub
pop
fistl
jne
lahf
pop
ret
xchg
push
movsb
add
sub
and
adc
cmp
fdivrs
rol
cmpsb
push
jecxz
and
mov
push
sbbl
fisubrl
mov
dec
inc
cmp
jbe
cmp
push
lea
sbb
add
jg
cmp
fmul
push
test
pop
sub
push
push
call
mov
je
mov
add
cmpsb
push
xor
xor
add
aam
call
std
lret
xchg
adc
scas
cmp
ror
leave
aad
in
lds
fdivrs
insl
pusha
movsl
mov
mov
out
test
add
xor
shll
xor
mov
add
shlb
push
ss
or
adcb
movb
cli
and
mov
je
outsb
jl
je
aas
bnd
add
ja
fldt
inc
jmp
cmp
jmp
push
dec
or
fs
int
mov
shrb
std
or
jo
cmp
roll
decb
fs
hlt
ror
xor
jmp
push
pushf
sbb
jg
sarb
test
stos
repnz
divb
push
pop
test
clc
aas
adc
xchg
pusha
xlat
adc
cmp
pop
jmp
mov
jge
imul
mov
jle
lock
dec
cmpl
push
adc
fdivl
adc
mov
stos
jl
je
adc
mov
lea
movsb
imul
add
push
shl
test
cltd
pop
xchg
push
dec
xchg
dec
xor
sub
mov
add
xchg
jecxz
add
xchg
sti
jnp
push
or
inc
adc
xor
fnsave
fisttpll
or
call
fstpl
adc
insb
cmpsb
sbbb
jmp
test
or
orl
push
ljmp
pop
loope
sub
xor
leave
int
lds
outsb
adc
pusha
std
adc
clc
add
cmpb
test
jne
or
pop
cmp
or
jnp
sub
jg
xchg
xchg
fmul
push
mov
push
jb
psubusw
mov
shrb
push
cltd
pushf
jmp
inc
dec
or
or
into
mov
sbb
or
jne
fistpl
xchg
or
push
aam
push
fdivs
jl
mov
push
fistpl
or
rorl
je
push
mov
out
shlb
and
dec
orl
push
sub
xor
cs
call
call
sub
or
in
adc
fadds
pop
sub
pop
jbe
dec
call
cmpsb
fistpl
mov
enter
fstpt
push
enter
add
add
or
and
cli
xor
data16
enter
push
jne
mov
or
insb
mov
dec
push
push
xor
mov
and
push
call
clc
call
or
adc
mov
mov
divb
jge
out
mov
adc
call
cmp
pop
loope
je
and
or
scas
jmp
fcomps
cmc
int3
out
push
in
push
inc
push
and
out
add
mov
test
iret
stc
pushl
jb
ret
adc
repnz
inc
xchg
pop
cli
orb
sbb
jns
mov
nop
mov
popf
xchg
xchg
mov
jge
jge
add
into
je
or
jmp
loop
out
adc
cs
push
cmp
push
mov
xor
jne
or
outsl
jae
xor
dec
cmp
sub
cld
add
fsubrl
js
cld
loope
push
add
push
push
icebp
loop
pop
push
adc
xchg
int3
push
gs
pop
js
ret
test
mov
mov
xchg
xchg
push
mov
xlat
lret
inc
sub
jp
xor
not
dec
mov
andl
add
cmp
mov
ret
mov
sbb
push
call
fldl
cmp
or
aad
pop
add
mov
or
push
jne
and
pop
or
cmp
jg
dec
cwtl
pop
out
add
mov
push
icebp
inc
les
mov
aam
fadds
add
xchg
gs
add
mov
mov
popa
lcall
add
repnz
push
mov
pop
pop
xchg
xchg
mov
and
lret
mov
xchg
cld
mov
mov
shlb
xchg
and
lcall
mov
cld
loopne
dec
xlat
movsbl
mov
sub
insl
sub
or
or
add
xchg
mov
aam
stos
or
ret
pop
lahf
fdivl
pop
inc
jg
icebp
loope
cmp
lret
mov
mov
cmp
or
or
jmp
inc
adc
in
add
std
mov
xchg
popl
leave
imul
gs
xchg
xor
push
xor
mov
mov
sbb
pop
push
mov
fdivrs
mov
nop
sub
test
enter
push
pop
jne
popa
or
pushf
dec
insl
xchg
jb
int
ret
inc
xor
pop
jmp
jmp
shlb
enter
in
xchg
out
sbb
dec
add
js
mov
pushl
or
insb
pusha
stos
ss
repnz
inc
loopne
loopne
cmp
sbb
jecxz
imul
dec
lods
idivl
mov
shr
das
push
jb
nop
out
cli
imul
xor
fs
mov
and
repnz
ja
mov
add
and
dec
aas
and
mov
orb
or
and
and
sub
mov
test
sub
fimull
inc
jne
ret
movsl
loopne
add
push
loop
arpl
stos
stc
stc
stc
pop
and
pop
or
arpl
shl
imul
in
stos
mov
push
xchg
jbe
stc
mov
aam
push
roll
and
jbe
push
dec
push
enter
sub
or
push
imul
dec
add
bswap
xchg
cmp
xor
add
mov
add
lock
pop
or
mov
ja
mov
addb
inc
jp
sbb
jmp
jmp
adc
lds
aaa
loopne
clc
aas
cs
jmp
and
jge
call
imul
adc
imul
pop
movsl
add
aad
les
add
jbe
rolb
loop
mov
pop
xchg
cld
mov
inc
dec
or
loop
lds
and
jae
xchg
cmp
es
cmpsb
imul
lcall
gs
add
js
rolb
push
mov
roll
and
lahf
out
call
loopne
cmp
jl
scas
aaa
mov
add
cmp
cmp
xchg
scas
mov
lock
push
pop
enter
popf
imul
xchg
movsl
andb
aam
inc
aam
fcom
fstps
fidivl
pop
rcl
fcmovnu
sbb
rcr
inc
dec
push
xlat
xor
das
loope
loop
mov
in
and
lock
inc
movsl
icebp
sub
movsb
call
push
daa
adc
fsubs
jo
mov
in
xchg
push
in
mov
fwait
ror
test
adc
mov
aaa
xor
push
icebp
push
inc
in
jae
xlat
insb
rcl
and
or
pop
rcrl
sahf
xor
xchg
daa
lret
inc
lods
mov
pop
imul
test
dec
cmpxchg
adc
and
add
leave
repnz
push
js
subb
and
insb
syscall
jo
js
xor
and
fstpt
scas
inc
adc
or
jnp
pop
ret
or
clc
call
in
insl
repz
aad
push
sbb
outsb
in
mov
in
call
xchg
or
push
pop
add
das
outsb
pop
sti
dec
xor
jge
cmpb
je
sbb
fstl
je
adc
sub
sub
shll
push
and
jg
jnp
call
loop
add
mov
or
movsl
hlt
and
sub
imul
add
in
mov
jge
cmc
pusha
mov
xchg
push
adc
inc
push
or
adc
xlat
sub
loop
mov
jno
dec
or
fcomps
sbb
fcoms
cld
or
cltd
call
call
sbb
andb
adcb
pop
subb
cld
jno
pop
pop
adc
cmp
arpl
icebp
lods
sbb
stos
xor
jnp
subl
xchg
inc
sub
adc
shll
xor
shll
fwait
mov
scas
cmp
dec
add
or
inc
clc
inc
mov
or
jno
push
mov
add
rol
xor
movsb
xchg
cmpsb
imul
imul
xchg
pop
push
sbb
dec
mov
xchg
imul
aaa
fcoml
shll
add
mov
aad
aam
aam
xchg
pushf
add
jne
pop
icebp
adc
cmp
mov
pop
mov
cwtl
mov
mov
cmpl
inc
sub
jmp
enter
mov
dec
vucomiss
pop
call
shr
sti
jecxz
dec
ficompl
adc
and
jnp
jge
push
or
bound
test
push
inc
insb
add
sub
or
aad
jl
mov
incl
pop
xor
mov
dec
mov
push
cmp
jmp
arpl
push
push
dec
adc
add
test
dec
cmp
daa
sbb
jge
xor
add
mov
adc
push
cmpsb
imul
imul
cmp
in
dec
outsb
fstps
dec
test
push
or
mov
xorb
or
cmpl
aad
pop
repnz
insb
mov
xchg
and
ss
pop
dec
and
add
adc
fldl
fs
arpl
pop
mov
adc
lods
pusha
adc
fists
push
inc
mov
mov
push
add
jecxz
xor
mov
mov
std
adc
ror
or
stos
pusha
mov
sub
adc
and
push
sub
pop
or
out
pop
adc
leave
fidivrs
adc
adc
loop
mov
jbe
or
mov
out
inc
pop
ljmp
stc
in
imul
dec
outsb
lock
pop
xlat
cltd
cmpsb
je
divb
testl
jne
stc
pop
cli
dec
and
mov
es
gs
cmp
sbb
jmp
nop
sbb
insb
push
addb
sub
sbb
pop
lahf
mov
in
push
lcall
mov
push
push
push
sub
loopne
or
ficoms
call
cltd
icebp
push
cltd
mov
ret
mov
mov
adc
jmp
sbb
je
push
xchg
sbb
sbb
sbb
movsb
jbe
fs
pusha
adc
or
movsb
or
test
int
rcll
imul
call
pop
loop
add
add
sbb
xchg
pop
call
add
mov
ret
jne
inc
sbb
movb
aas
pop
sbb
cltd
or
mov
and
xor
add
je
fildl
mov
rorb
inc
sub
insb
in
mov
pop
or
push
mov
push
in
add
mov
add
fsts
inc
enter
mov
icebp
out
push
xor
and
mov
xor
push
push
pushf
pop
stos
adc
sarb
and
jg
daa
adc
jmp
push
push
int
ret
push
fistps
ret
leave
ficoms
stos
cmp
and
imul
mov
pop
sbb
shll
fwait
cli
xor
mov
clc
add
mov
inc
pop
inc
sub
sub
mov
push
mov
push
pop
mov
ds
pop
pop
jae
or
add
inc
loopne
data16
lcall
jbe
mov
cmp
jg
cmp
jl
push
inc
call
jne
cmp
jb
push
push
sub
fcoml
sub
sub
cmp
and
arpl
or
ss
pop
mov
push
enter
or
rcl
test
stos
int
cmpl
mov
xchg
or
ds
pop
jo
and
call
inc
add
ds
dec
pop
js
call
fsub
pop
orb
mov
pusha
jecxz
or
fldl
xchg
or
pop
movsb
pusha
jbe
sbb
or
mov
pop
mov
mov
in
dec
xchg
lidtl
or
ret
jmp
mov
and
inc
loope
addr16
sarb
test
pop
or
fidivrl
pusha
fadds
incl
shl
jp
push
cli
push
dec
xlat
mov
mov
shll
adc
pop
jb
adc
ds
not
rcrl
inc
xor
mov
inc
dec
add
ffree
cmpsb
mov
mov
in
dec
jmp
push
int
fucomip
jmp
push
loopne
cmpsb
imul
mov
mov
imul
test
push
aas
jb
loopne
xor
lods
fs
add
jne
push
mov
sub
inc
dec
push
push
dec
or
adc
test
mov
sub
loope
rorl
cmp
scas
sbb
cmp
and
mov
jp
xor
sbb
lea
sbb
sbb
push
cld
dec
inc
shrb
ljmp
frstor
aaa
call
adc
push
mov
movsl
jo
mov
test
std
and
fcomi
es
jbe
push
cmp
ud1
mov
xor
int3
call
adc
icebp
daa
leave
call
jmp
pop
repnz
mov
cli
dec
insb
subb
pushf
nop
mov
ret
push
and
movsb
in
pop
out
fadd
movsb
mov
ret
repnz
xor
push
xchg
stos
mov
lds
pop
push
pop
pop
xrelease
lret
mov
ret
lret
xchg
int3
call
xchg
jp
or
sbb
inc
xlat
shl
pop
testb
lret
stos
cld
inc
cmp
call
imul
popf
mov
add
inc
pop
loopne
loope
loop
ficomps
mov
mov
and
lds
and
sbb
mov
rolb
or
jbe
mov
xor
mov
psubsb
push
cmp
sub
imul
cmp
outsb
add
lret
clc
mov
mov
lock
rorl
mov
fiaddl
fucomi
test
jmp
orb
pop
lods
shlb
xor
or
cmpsb
or
stos
daa
cmpsb
cmc
call
aad
pusha
inc
adc
divl
ror
or
sbbl
push
add
fidivl
push
enter
dec
xchg
push
es
andb
dec
mov
adc
ret
mov
xchg
sbb
add
icebp
pop
mov
leave
xor
xor
ret
inc
mov
repz
sbb
andb
add
outsb
imul
add
cmpsb
icebp
mov
aas
and
or
imul
fldt
insb
bound
add
sub
call
dec
inc
shll
add
test
shlb
cmp
dec
pop
inc
bndstx
out
xor
add
dec
ds
es
hlt
xchg
adc
xchg
loopne
dec
fsubrl
arpl
loop
in
in
pop
jl
add
xor
cmp
jle
mov
cmp
mov
add
aaa
inc
and
and
ret
out
push
dec
popf
sub
int
pop
faddl
cmp
sbb
adcl
bound
add
and
add
testl
andb
push
add
add
outsb
outsb
cmp
mov
inc
add
mov
jno
sub
data16
loope
add
cmpsl
and
sbb
xor
imul
lods
sbb
movsb
cmp
push
call
add
stc
push
adc
cwtl
pop
and
fsubs
and
addb
idivb
popa
out
call
cs
jmp
lds
or
add
cwtl
xlat
insl
fcmovb
fsts
xchg
fwait
mov
fld
adc
or
cmp
add
dec
mov
insb
sbb
pop
cld
enter
je
add
mov
sub
jbe
add
cmp
insl
data16
xor
push
int
xor
xchg
add
imul
stos
imul
mov
testb
push
mov
pop
or
out
pop
clc
cmpsb
imul
mov
add
addl
sbb
fnstcw
push
mov
popa
jo
cmp
repnz
or
mov
mov
and
mov
aaa
adcb
mov
jne
xlat
icebp
std
hlt
call
sbb
fs
cmpsb
jae
js
or
or
or
sbbb
pop
outsb
pushf
mov
repz
lods
ds
and
mov
sub
adc
rolb
es
add
inc
inc
rclb
cld
push
lret
clc
pop
mov
in
or
pop
inc
mov
push
in
or
ja
sub
enter
fcoml
and
jns,pn
repnz
or
call
lods
and
adc
arpl
adc
push
dec
hlt
in
popf
and
mov
lods
sti
add
adc
call
adc
lea
push
push
push
push
push
xor
js
cmp
jge
call
jne
xor
sbb
pop
ss
jo
xorl
jge
enter
cld
mov
ret
push
inc
dec
cmp
inc
aaa
sbb
add
dec
cld
and
inc
cmp
rorl
test
sub
mov
sbb
imul
iret
movsb
adc
sbb
add
cmp
jle
push
pop
sbb
add
cmpsb
rcrb
dec
inc
mov
daa
jge
fldcw
ret
or
push
sub
mov
inc
jg
inc
ss
xor
dec
push
test
cmp
push
les
pop
lods
sbb
adc
mov
xor
and
xor
loope
jge
clc
push
ljmp
jle
adc
pop
stos
ffreep
jnp
add
sub
clc
jbe
add
jge
je
addr16
and
clc
dec
loope
inc
js
pop
cmp
xchg
pop
cmp
clc
and
push
and
sbb
mov
jne
call
roll
std
clc
jg
inc
aaa
clc
dec
xchg
cmp
jnp
stos
enter
into
add
xor
mov
lock
push
jecxz
cmc
jmp
and
pop
popa
subl
clc
add
mov
or
push
inc
push
mov
rcl
mov
push
ret
mov
in
loope
sub
ret
inc
push
test
push
and
mov
push
dec
adc
rcll
pop
movsb
or
repz
mov
nop
sbb
sbb
sbb
std
insl
mov
mov
mov
push
xlat
jo
mov
call
lods
in
mov
add
test
cmpsb
mov
cmp
jbe
mov
push
mov
pusha
mov
out
scas
add
loop
lock
mov
leave
dec
pop
sbb
mov
lret
lock
pop
mov
inc
gs
xchg
inc
arpl
lock
shl
mov
lret
inc
pop
push
insb
lods
aad
addl
hlt
and
cmpsb
sbb
lock
icebp
dec
sub
fbld
es
mov
pop
addr16
jg
cs
imul
push
sti
out
testb
orb
test
ret
jmp
mov
mov
mov
or
andb
inc
cmpsb
and
xchg
popa
mov
pop
inc
push
outsb
push
arpl
pushf
add
push
cld
push
sti
lods
add
push
into
call
call
add
data16
or
pop
dec
dec
mov
nop
decl
jge
and
and
mov
and
mov
pop
inc
cld
pop
sub
pop
dec
or
cmpl
sti
fstpl
cmp
jne
cmp
jne
push
mov
mov
fdivs
push
fucomp
pushl
jnp
add
ljmp
push
les
mov
pop
mov
or
jae
lea
or
int
or
and
sbb
stc
mov
cli
insb
repnz
add
jae
add
jmp
ficomps
mov
pop
lcall
hlt
jge
cmp
arpl
arpl
sbb
js
pop
or
lock
call
jne
xor
sbb
or
cmp
je
pop
insl
pop
clc
lret
mov
inc
push
dec
and
dec
in
cld
mov
sbb
das
aam
arpl
add
add
mov
push
out
leave
dec
fnsave
mov
dec
mov
add
pop
lock
cmp
sti
mov
je
inc
push
mov
cmp
add
add
divb
test
push
adc
adc
push
add
stc
dec
or
jmp
dec
aas
pop
lcall
or
push
call
jne
in
cmp
jne
push
mov
jmp
mov
fidivrs
shll
mov
into
dec
or
sub
mov
jp
and
pcmpeqw
dec
or
pop
or
cmp
or
test
loopne
mov
cmc
mov
sbb
mov
or
or
cmp
add
fildl
xor
rep
rep
fcmovb
movsl
fnsave
scas
andl
aaa
pop
ficompl
mov
adc
ret
mov
or
adc
inc
pop
inc
xor
ds
sub
fsubs
add
push
cmp
pusha
scas
lret
mov
je
sbb
mov
imul
sub
xchg
imul
lahf
sti
pushf
pop
adc
pop
xor
cmp
add
int3
push
mov
push
js
xchg
or
aaa
jecxz
add
adc
or
daa
bound
push
or
pop
pop
pop
aaa
setns
jl
mov
hlt
and
cmp
sbb
pop
add
int3
ss
adc
cmp
pop
xchg
or
icebp
cmp
gs
push
push
shlb
cmpsb
xchg
or
movl
pop
sbb
xor
ret
cmp
mov
push
mov
or
repnz
add
shlb
bound
mov
or
mov
testb
or
xor
xchg
push
daa
add
inc
mov
mov
cs
mov
jb
and
pop
jo
sub
jecxz
dec
icebp
xchg
jno
adc
mov
mov
int3
insl
or
inc
push
jo
xor
fstpt
mov
push
or
add
and
push
sbb
inc
mov
inc
jmp
je
push
je
test
loop
mov
mov
mov
repnz
shll
add
sbb
ret
cld
aaa
mov
cmp
call
xchg
pop
mov
or
jmp
ss
jnp
pushl
bndstx
sbb
fstpt
or
dec
cmp
jb
jmp
imul
shll
mov
movsl
add
push
inc
mov
lea
enter
into
sub
in
add
test
mov
fistl
ret
add
dec
pop
mov
stc
mov
lret
sbb
pop
mov
cmp
pop
shrl
call
push
or
push
insl
call
inc
xlat
inc
pop
push
xor
lret
scas
and
jge
and
fdivrl
or
and
int3
add
mov
shlb
push
mov
mov
jmp
sbb
push
xlat
scas
cmp
adc
inc
jg
sar
jl
or
aam
addr16
iret
out
fsubs
das
fsubrl
jo
gs
and
ljmp
mov
xor
fadd
mov
insb
add
lea
lods
mov
push
add
sbbb
call
mov
ljmp
orb
pusha
adc
and
or
add
stc
clc
mov
sbb
adc
roll
fildl
mov
pop
push
sbb
fsubl
or
cmp
sub
and
out
mov
nop
xor
or
adc
cwtl
xor
xor
fstps
sub
lret
clc
cld
test
shlb
dec
fdivl
repnz
test
push
push
popf
lock
das
lea
fisubrs
mov
xor
jne
cmp
push
push
fnstenv
push
psubb
push
dec
push
cmp
xor
pop
or
mov
xor
dec
test
mov
mov
push
push
inc
aam
xor
cmp
fs
scas
sysret
xchg
ds
pop
adc
push
cmp
mov
adc
mov
fildll
je
dec
dec
cmpw
repz
mov
jo
stos
cmp
icebp
loop
jo
fsubrl
push
push
mov
mov
psubusb
nop
sbb
xchg
fadds
push
call
test
mov
mov
cmp
shlb
mov
cmpsb
aas
std
fsubrs
pop
pop
scas
adc
in
push
test
ficomps
call
xchg
sbbb
decl
push
mov
cmp
aad
jne
push
outsl
in
mov
nop
mov
imulb
mov
push
add
and
jb
andl
pop
push
lds
pop
in
inc
dec
mov
in
lea
repz
sbb
test
mov
lret
outsb
or
lods
pop
push
dec
xor
or
adc
test
sub
pop
int3
xchg
mov
addb
sub
faddl
test
xchg
outsl
mov
mov
mov
mov
lea
push
shrl
mov
nop
out
xchg
push
mov
xchg
pop
xchg
jae
xchg
sub
xor
push
pushf
or
scas
jmp
insl
lahf
arpl
mov
add
fwait
movsb
movsl
inc
add
pop
push
addl
push
shrb
and
dec
iret
dec
inc
shll
sub
add
dec
aam
mov
je
popa
pop
xlat
scas
fadds
insb
push
jo
lcall
loop
inc
mov
out
shll
stos
dec
dec
and
jne
xchg
mov
mov
mov
push
adc
jb
mov
sub
sbb
pop
adc
jo
xor
and
insb
fsubl
and
adc
inc
mov
xchg
push
addr16
adcb
push
push
rorb
fadd
mov
faddp
fadd
ja
push
mov
pop
xchg
gs
push
movsl
lret
mov
sarl
add
inc
dec
sbb
sub
mov
adc
daa
mov
ret
sbb
add
push
push
inc
ja
cli
add
loop
cmc
lods
mov
push
mov
pop
inc
pop
xorb
sbb
push
shll
pop
cltd
or
mov
in
lea
add
ret
jne
out
or
rcll
add
clc
mov
cmpl
fnstenv
adc
sub
insb
mov
dec
and
cmpsb
jne
scas
in
insl
xor
mov
test
ljmp
or
add
ficompl
fimull
call
cmp
test
cmp
xor
retw
call
add
ret
adc
in
xchg
inc
mov
inc
out
jmp
push
push
lds
stc
pop
xchg
push
adc
push
or
push
gs
push
adc
add
in
adc
add
scas
xchg
adc
cld
push
mov
dec
jns
in
popf
xor
imul
shufps
push
pop
imul
cmp
add
jae
imul
pop
dec
push
imul
in
insb
imul
mov
loop
jo
popa
outsb
bound
insl
xor
call
lcall
pop
xlat
aad
pop
stos
pop
lods
sahf
lods
or
sub
dec
push
push
shll
into
mov
fmuls
jo
shll
jo
imul
loop
jecxz
inc
mov
js
xor
dec
rcll
mov
add
mov
jmp
xchg
out
call
pop
push
test
iret
dec
gs
sbb
jns
inc
xchg
hlt
lret
add
or
xor
loope
xor
push
popa
cmp
rcrb
cmp
push
cmp
rcrb
jbe
sub
jbe
test
push
inc
xor
daa
pushf
clc
inc
mov
inc
sub
into
cs
sub
dec
daa
cmp
icebp
test
movb
addr16
and
arpl
jb
jbe
imul
sbb
insl
push
inc
outsb
and
xor
jo
jno
jb
xchg
rolb
fcomp
xchg
jb
mov
dec
cltd
lds
popf
mov
add
dec
add
cmp
dec
gs
xchg
cmpsb
stos
mov
jne
rcrl
int3
pop
int
sbb
in
out
imul
je
popa
insb
dec
shll
jns
jnp
sbb
in
lea
inc
or
and
daa
pushf
mov
sbb
jne
jbe
ja
jo
dec
aaa
js
jns
movsb
adc
test
test
jl
cmpl
jecxz
push
jle
jg
push
xor
jbe
je
push
int
pop
add
inc
insl
lods
andb
or
sub
cmp
mov
mov
xor
mov
xor
fiaddl
mov
cwtl
movsb
push
std
cmp
jle
dec
lret
push
sbb
ficomps
xchg
xchg
dec
adc
pop
cmp
cmp
mov
xchg
inc
push
jmp
aad
nop
sbb
inc
inc
push
out
scas
pop
repnz
mov
adcb
push
mov
nop
add
push
push
rcrb
lock
sarl
fildl
fiadds
inc
push
sbbl
push
and
test
jl
call
sub
in
push
test
mov
mov
adc
ret
and
pusha
clc
inc
loope
cmpsb
mov
lea
icebp
imull
lea
call
es
jno
lds
pushf
xchg
fldenv
xor
test
sbb
mov
push
outsl
adc
or
push
adc
lea
mov
mov
imul
push
add
call
sbb
push
mov
in
adcb
rcrb
cmp
xchg
pushl
test
outsb
fadds
add
add
push
fisttps
mov
mov
jmp
mov
add
inc
or
outsb
nop
push
mov
sbb
sbb
sbb
pop
push
sbb
jecxz
push
xchg
aad
xor
adc
repz
je
sbb
sbb
fstp
jge
push
push
cld
test
jb
and
arpl
jnp
test
sub
shl
pop
aad
adcb
add
xor
movsl
add
fistl
stc
xor
pop
hlt
std
out
ds
push
ja
push
orl
xorl
sbb
or
mov
fiadds
jo
cmpl
andl
pop
xchg
pushf
sti
mov
mov
add
mov
cmp
mov
rorl
out
sbb
push
dec
icebp
jmp
push
xchg
out
push
xor
std
xlat
mov
sub
insl
xor
je
call
push
mov
push
dec
inc
mov
mov
push
jmp
pop
or
mov
xchg
call
sahf
mov
mov
bound
orl
mulb
add
mov
push
fcomps
adc
jns
fmuls
mov
inc
mov
cmp
js
mov
push
pusha
enter
or
sbb
mov
adc
lods
bnd
and
add
and
mov
or
cmp
adc
fwait
and
or
add
xchg
pop
lods
xchg
lock
andb
test
stos
lods
ret
call
sti
sbb
in
xchg
mov
jo,pn
jmp
adc
pop
push
aaa
xor
jmp
jg
pop
cmpsl
fs
and
push
fs
xchg
imul
add
adc
mov
sub
sub
rol
push
insb
mov
push
loope
lcall
scas
xor
inc
mov
fistps
xchg
or
fucompp
pop
ds
movb
adc
and
mov
add
adc
mov
xchg
mov
add
inc
add
ds
fimull
movl
mov
lea
inc
sbb
pop
or
adc
cmp
mov
xchg
cmpb
and
mov
mov
push
pop
push
inc
rcrl
pop
jae
add
mov
jb
or
mov
mov
xor
shll
fs
inc
dec
xchg
and
out
mov
sbbb
mov
mov
mov
mov
xlat
lds
int3
pop
or
cmp
mov
mov
mov
je
je
xchg
xchg
xchg
adc
out
cwtl
jmp
adc
enter
pop
data16
enter
lret
push
mov
ds
into
ds
gs
push
jl
mov
push
pop
xlat
mov
es
daa
shll
lds
daa
je
sub
dec
inc
je
ror
int
bound
mov
adc
and
mov
jae
adc
jmp
cmp
call
adc
in
inc
adc
add
fwait
cmpsb
bndstx
xor
cld
jp
mov
push
push
call
xchg
mov
mov
mov
pop
clc
dec
hlt
push
je
loope
inc
and
jnp
dec
lds
rcrb
inc
add
pop
adc
fiadds
ficomps
ficompl
or
inc
push
in
addb
clc
cld
add
sti
jmp
cmp
ja
es
push
daa
lods
inc
xchg
sub
xor
mov
test
dec
cli
push
push
xor
clc
push
xchg
lods
cmp
cmp
icebp
inc
xor
insb
add
mov
add
icebp
jl
inc
and
xor
mov
push
ds
mov
adc
xor
aaa
xor
mov
in
roll
cmp
jl
push
add
arpl
icebp
add
sbbl
jae
mov
scas
div
jmp
xchg
mov
ds
call
cmp
mov
sbb
jne
mov
popa
das
pop
jmp
sbb
ficomps
mov
pop
or
push
loopne
popa
inc
inc
cmp
arpl
int3
leave
add
jno
cmp
pop
dec
mov
bound
add
add
cmp
inc
loope
call
inc
lea
pop
rep
pusha
adc
movsl
mov
inc
filds
adcl
xor
adc
mov
mov
mov
add
push
jae
aam
sti
rcll
lock
add
hlt
xor
je
fcomps
sbb
add
ds
xchg
cmp
add
jmp
dec
outsl
mov
movb
xchg
sub
push
inc
add
sti
rol
sti
rclb
test
add
push
inc
xchg
pusha
imul
xlat
adc
mov
fwait
lret
fsubrl
leave
lahf
fsubrs
jp
pop
mov
pop
loopne
mov
faddl
and
sub
pop
repnz
cmp
jge
rclb
scas
push
and
mov
call
dec
les
pushl
or
sarl
inc
call
repnz
push
inc
in
sahf
push
xchg
imul
pusha
and
lea
or
fwait
mov
test
mov
aam
inc
cmp
mov
and
or
cwtl
cmpsb
cmp
outsl
sub
cmp
lock
jo
leave
pushf
insl
inc
and
dec
icebp
cs
sbb
call
mov
add
push
add
dec
xor
jo
sbb
ss
loope
shlb
sbb
sbb
jl
pop
or
cmp
fildl
pop
and
call
and
lock
push
pushl
or
mov
dec
lock
inc
cmp
mov
insb
xor
adc
inc
fnstsw
fstpt
xor
jmp
shl
or
movsl
cmp
sub
jbe
adc
imul
mov
push
nop
stos
mov
and
fdivp
movsl
les
fsts
mov
adc
xchg
pop
adc
mov
and
push
loope
stos
lret
inc
sbbb
in
mov
add
mov
mov
pop
mov
xor
add
or
jle
push
jns
cmp
add
bound
adc
xor
add
inc
dec
jne
mov
or
aam
fwait
inc
sub
jge
push
sub
addr16
add
mov
adc
idivb
sbb
pusha
mov
add
fs
in
pop
cli
push
adc
push
scas
adcb
cmp
enter
insl
xor
cmp
loop
jge
mov
adc
roll
ret
fldcw
mov
jmp
pop
movsl
sub
inc
jne
cmp
pusha
psubq
das
pop
test
popa
testl
aad
adc
push
rorl
push
cmp
xor
or
fwait
scas
xchg
add
in
inc
add
ret
arpl
cmc
aas
xchg
push
popa
xor
push
mov
lcall
lock
add
mov
les
movsl
movsb
inc
sbb
jl
pop
hlt
or
xor
pusha
test
fimuls
aad
pop
test
call
sbb
sarb
xlat
jle
push
push
das
push
jb
cs
inc
movzbl
int3
push
pop
clc
idiv
or
enter
push
add
mov
icebp
xor
sarb
rclb
and
push
xlat
or
jge
sub
jbe
add
push
roll
and
adc
aam
movl
or
pop
adc
push
push
lret
xor
xor
jnp
push
push
sbb
sub
push
mov
sub
ret
aas
and
mov
popf
movsb
shll
add
adc
and
cmpsb
push
arpl
or
decl
push
and
push
xlat
into
orl
pop
rolb
divb
stc
mov
xchg
cmpb
out
dec
aam
ss
lock
sub
repz
fildll
jne
mov
push
loope
loop
je
jne
sub
pushf
out
call
pop
jmp
jmp
ds
out
dec
push
stos
fucom
ret
xor
add
or
enter
xchg
jl
lahf
addb
dec
cmp
jne
dec
xor
pop
xchg
dec
dec
xor
fs
dec
addl
addl
xor
dec
push
scas
and
push
lea
add
add
ja
js
imul
add
rolb
and
ljmp
jmp
jl
add
ud0
sbbb
jmp
sbb
les
mov
cmp
add
push
inc
push
popa
mov
push
je
adc
or
imul
push
push
xchg
popa
bound
cmpsb
jae
clc
add
popa
call
mov
mov
loopne
icebp
jecxz
ror
add
push
dec
push
xor
test
lods
stos
popf
sub
mov
arpl
fadds
and
sbb
adc
and
pop
negb
pop
pop
icebp
dec
adc
ljmp
adc
xchg
inc
ucomiss
rcr
popl
inc
adc
cmpsl
push
rol
lea
cmp
call
dec
mov
lods
xchg
add
mulb
sbb
in
mov
xchg
mov
test
out
mov
sub
push
ss
popa
cmp
lret
jae
popa
jae
mov
scas
adc
outsb
movsb
adc
scas
imul
mov
pop
scas
mov
lss
mov
cmpsb
jmp
mov
mov
ljmp
jle
adc
cmp
adc
lcall
adc
fs
cwtl
aad
mov
mov
es
lret
xlat
je
lret
int3
xor
pop
into
xor
testl
pop
shrl
pop
pop
xlat
jne
aam
aad
pop
xlat
or
pop
flds
pop
xlat
xor
fdivrl
xchg
push
fistps
loopne
das
loop
dec
shll
in
out
xor
mov
out
call
xor
and
lea
andb
popf
repz
scas
jmp
hlt
cmp
sbb
testl
stos
stos
stc
mov
xchg
pop
cld
std
lock
scas
cmp
push
inc
sbb
push
cli
rorb
add
mov
lea
jmp
push
push
mov
mov
or
jmp
add
adc
xor
jo
je
push
pop
ret
jge
ds
jmp
pop
test
and
jl
cwtl
push
bound
and
push
mov
push
dec
mov
sti
pop
jno
std
pop
call
fimull
mov
or
and
push
shlb
imul
or
sbb
sbb
popl
pop
jmp
adc
in
das
push
and
mov
or
aaa
jmp
add
mov
cmpsb
add
pop
push
cs
pop
inc
fimuls
clc
xorl
scas
adc
xor
xorl
xor
mov
mov
cmpsb
add
pusha
sti
rorb
cmpl
sub
push
fsubr
jbe
push
cmp
push
icebp
addl
and
cmp
leave
mov
xchg
mov
jle
adc
push
cmp
add
insl
and
add
add
push
lea
aas
test
adc
push
cli
in
or
shlb
rcrl
mov
xor
out
adc
mov
adc
pop
mov
pop
push
adc
loop
movsl
fisttpl
shlb
inc
sbb
je
mov
movsb
or
push
bswap
fwait
cli
xchg
ds
pand
fsubr
mov
xchg
pusha
pop
push
rcr
fisttpl
inc
mov
add
insb
movsl
mov
stos
mov
add
leave
popa
mov
push
js
sub
push
fwait
sub
adc
push
push
push
or
test
sbb
adc
push
adc
mov
add
mov
push
das
mov
std
mov
sub
add
mov
add
pushl
push
out
jo
shr
test
jle
mov
push
xchg
clc
fldenv
push
mov
ds
mov
and
add
add
inc
inc
dec
jne
add
popa
xor
sarl
and
mov
insb
pop
cwtl
orb
rol
mov
int
cmp
mov
cmpsb
mov
roll
addl
adc
jae
scas
aam
add
inc
or
repnz
and
data16
sub
fwait
test
or
mov
cmp
mov
les
adc
fdivrs
lods
je
jge
aam
inc
rolb
ss
addb
or
aad
cs
daa
mov
add
enter
lret
es
mov
into
mov
xor
addl
mov
test
pop
hlt
cmpsl
sbb
imul
mov
test
lea
mov
fidivl
rclb
dec
push
push
test
scas
stos
pop
je
test
je
push
js
loopne
add
adc
inc
sbb
dec
sbb
mov
push
jl
xchg
sti
shll
add
cmp
sub
shl
cmpl
outsb
clc
push
movsl
pop
sbbb
lea
cltd
lea
rorb
imul
mov
lock
test
jns
push
adc
stos
out
mov
pushl
call
icebp
notb
jp
scas
cmp
jbe
or
ret
dec
fdivl
bound
push
cs
aaa
mov
add
push
cwtl
sub
mov
int
loope
sub
adc
test
sub
aas
cmp
add
sub
or
jmp
pop
push
push
sbb
lods
lea
adc
push
or
sub
adc
xlat
bound
enter
ja
mov
shlb
adc
add
jne
mov
lcall
mov
daa
or
mov
int
pop
test
pop
sbb
pop
pop
rorb
sub
add
xor
loop
lock
shlb
nop
call
cmp
hlt
and
cmpsb
jmp
jb
addr16
pop
mov
lret
sub
add
push
shrl
and
lock
in
inc
inc
push
jbe
xor
add
inc
neg
sbb
shll
fcoms
sbbb
clc
jo
and
in
push
jp
lds
xor
dec
xor
cs
shlb
inc
outsb
jne
or
cmp
push
dec
dec
lret
pop
rolb
push
cwtl
bound
adc
push
push
mov
push
or
je
mov
mov
xlat
std
loopne
ror
add
inc
in
push
pop
jmp
lea
push
adc
mov
outsl
mov
sub
mov
je
data16
cli
mov
inc
pusha
adc
pop
cmp
ja
test
testb
in
xor
inc
mov
adc
cmp
popf
inc
jmp
cmp
jb
outsl
fistpll
addl
or
dec
and
in
int
test
or
cld
sub
roll
or
add
push
lods
or
lret
mov
insl
test
mov
and
lahf
cmp
fisttpl
lods
inc
and
sub
inc
js
lods
fcomp
adc
mov
add
or
mov
and
mov
push
rorb
mov
shll
mov
xchg
xor
shll
adcl
rorl
stos
xor
shll
xchg
test
aam
jecxz
movsb
lcall
mov
xlat
insl
xchg
aam
aad
xchg
imul
cmpsb
imul
sbb
stos
mov
test
xor
shll
mov
roll
insl
sbb
add
push
stos
aad
adcl
aas
pushf
popf
cmpsb
fldl
sahf
push
lahf
mov
imul
cmpsb
imul
js
in
xor
shlb
and
xor
fdivs
lods
adc
adc
xor
push
sbb
hlt
adcl
jo
xor
stos
add
mov
daa
and
rcl
fsubrl
cwtl
pop
mov
fisttpll
cmp
add
xor
push
outsl
inc
fs
out
push
pushf
mov
inc
addb
loop
call
or
and
int
lds
push
nop
stos
and
mov
je
mov
loopne
shl
cld
pop
lahf
filds
test
loope
inc
scas
das
sbb
or
call
jmp
inc
push
sti
jl
sti
je
out
les
ja
pop
mov
push
and
sbb
xchg
lock
jge
sbb
mov
sub
add
std
xor
test
ds
and
push
or
negl
push
fstpt
wbinvd
fisubl
xor
inc
cmp
or
add
cli
mov
jl
pop
lahf
sti
jb
or
ret
cmp
xor
adc
mov
sbb
cmp
adc
in
mov
add
shlb
mov
adc
mov
cmpsb
stos
cmc
inc
and
inc
adc
and
add
mov
jecxz
inc
xor
push
inc
andl
adc
xchg
and
adc
push
mov
inc
dec
add
test
sbb
sub
lea
out
cwtl
in
mov
in
sub
adc
sti
cmp
imul
or
xchg
mov
or
push
fisubs
sbb
and
pushf
sub
rcll
sub
hlt
lea
and
add
mov
fcmovnu
or
fiadds
inc
ljmp
daa
cmp
pop
jb
subl
inc
neg
mov
jne
xor
cmpb
inc
push
jg
push
jnp
jo
pop
pop
ljmp
mov
clc
andl
inc
cwtl
cld
fs
push
xor
cld
pop
jb
cwtl
and
shlb
push
add
pop
mov
pushf
popf
jmp
adc
dec
adc
sti
jmp
fdivs
sbb
aaa
and
xchg
mov
mov
lea
cmp
jne
insb
mov
andl
pop
mov
ljmp
clc
insb
inc
vmovlps
lock
jb
out
loop
pop
es
cmp
jne
in
btr
push
jo
and
pop
fisttpl
sarb
fsubr
mov
and
mov
jo
pusha
je
and
in
lock
out
push
and
data16
or
pop
inc
xor
adc
sahf
loope
mov
leave
mov
xchg
or
movsl
pop
dec
in
or
pop
enter
movsb
mov
inc
sbb
fdivs
pop
mov
sahf
rolb
push
movsl
inc
mov
mov
add
jp
stc
sbb
ss
mov
pop
push
mov
js
push
fcoms
ret
mov
push
and
or
loopne
sub
pop
dec
push
rcll
sahf
dec
and
js
js
add
adc
loopne
aam
sti
adc
jecxz
pop
mov
je
lea
push
je
push
xchg
add
push
sarl
jl
cmp
mov
test
inc
clc
aad
jecxz
add
aam
cmova
jge
addr16
imul
sbb
sahf
push
pop
mov
xor
xor
xchg
ret
pusha
push
leave
enter
cmp
dec
adc
sub
or
add
pop
fmull
jbe
mov
sub
call
mov
adc
test
jo
xor
mov
inc
sub
mov
xlat
call
roll
xor
add
stos
cmp
out
push
jmp
cmp
cmp
inc
imul
jnp
adc
mov
mov
sbb
cmp
cmpsl
pop
push
adc
xor
add
adc
addr16
std
xchg
cltd
mov
idiv
ret
ret
lcall
rcrb
jmp
push
loop
adc
sub
adc
mov
dec
jl
ljmp
je
xor
icebp
cs
push
push
ss
push
push
sub
adc
scas
scas
jne
sub
call
mov
adc
and
rorl
pusha
adc
loopne
xor
inc
xor
xor
jmp
or
pushf
xlat
xor
cs
pop
repnz
and
add
sbb
ds
inc
call
pop
js
outsb
je
xor
shll
outsb
gs
mov
jle
test
test
int3
stos
bts
test
insl
mov
add
bound
dec
inc
mov
mov
lret
dec
int3
push
push
inc
daa
add
add
outsb
sbb
fcomps
xchg
lods
bound
sub
inc
mov
sub
nop
push
ljmp
gs
mov
pop
inc
mov
mov
cwtl
fsts
fiaddl
fisttpl
imul
lcall
or
inc
inc
out
inc
test
pop
xlat
xor
mov
mov
mov
xlat
jne
and
adc
pop
inc
mov
xor
add
jp
je
shlb
mov
movsb
adc
sbb
or
cmc
dec
addl
pusha
mov
cmp
jmp
xchg
mov
or
add
rorb
push
aas
and
outsb
jo
push
fisubrl
xor
sbb
push
std
into
out
or
or
in
je
mov
adc
stos
pop
add
into
sbb
or
jno
fldt
bound
adc
imul
jae
sbb
sbb
sbbb
add
jne
shll
adc
or
push
je
mov
sbb
fists
xor
jns
ds
mov
andb
jbe
outsl
inc
movl
js
add
push
iret
in
fsubs
push
push
out
nop
xchg
add
in
dec
les
or
sbb
xchg
dec
push
jb
mov
mov
inc
mov
fcom
insb
in
out
pusha
push
pop
ficomps
xchg
mov
call
sbb
daa
cs
repnz
add
add
sbb
push
or
and
jl
addr16
lds
faddl
insb
dec
or
stos
insl
mov
add
sahf
orb
pop
or
push
add
xchg
or
or
or
pop
or
pop
adc
or
sbb
fs
sub
js
mov
cmp
sbb
mov
jle
jbe
mov
mov
mov
pop
jae
dec
dec
adc
ja
movb
and
incl
in
add
mov
sbb
pop
mov
out
fabs
shrb
xor
scas
sub
and
push
loopne
ja
lea
xchg
pop
or
stc
xor
test
push
sub
imul
mov
ret
shrl
push
or
mov
outsb
add
lahf
fs
notl
add
and
or
add
shlb
pop
andb
enter
or
add
rorl
orl
lret
stos
xchg
jmp
jmp
roll
insl
mov
sbb
ss
imul
ret
int
jo
icebp
les
imul
cmp
rorl
jno
popa
jb
pop
test
xor
mov
xor
pop
fcomp
adc
fwait
inc
jne
mov
fisubrs
pop
cmpsb
imul
or
in
ficomps
out
jmp
ljmp
pop
jae
repz
pmaddwd
lcall
clc
psubw
or
adc
cli
push
mov
jl
inc
enter
adc
push
add
cwtl
push
jno
push
fcoms
fisttps
lock
rorl
pop
mov
mov
or
pop
je
add
lods
loop
cmp
in
adc
cmpsl
psubsb
call
icebp
mov
nop
shlb
out
pop
pop
inc
sbb
push
rorb
movsl
in
inc
push
gs
in
repz
arpl
pop
rolb
faddl
es
push
push
popa
sbb
jge
lea
xchg
scas
jmp
and
lcall
lock
or
sbb
cmc
or
xchg
push
mov
cli
and
dec
es
insl
mov
jae
mov
xchg
add
sub
pop
or
or
inc
addr16
lcall
stos
pusha
mov
out
andb
add
mov
inc
int
mov
stos
add
gs
and
fucom
in
test
fcompl
cld
data16
mov
sub
ret
mov
inc
and
shlb
imul
adc
testl
adc
out
out
adc
sbb
bound
outsl
fildl
int
adc
pop
movsl
push
lcall
shrl
fsub
test
and
adc
jge
or
xor
loope
mov
or
sbb
ret
aaa
mov
mov
ret
fidivrs
inc
hlt
push
cmp
add
inc
inc
in
adcl
ss
xchg
and
fnsave
int
push
xor
jmp
jecxz
ret
sti
mov
sbb
int3
push
loopne
enter
je
sub
test
xlat
pusha
sbb
cmp
sub
cmp
incl
add
rcrb
popa
sbb
xchg
lret
and
cmp
fsubrp
or
jnp
sbb
xor
pop
mov
pushf
loope
into
sub
stos
mov
aad
cmp
shlb
mov
jmp
push
dec
xor
dec
push
sbb
cwtl
nop
and
in
and
mov
push
add
dec
cmpsb
imul
push
gs
lcall
xor
fs
mov
mov
push
add
push
popa
aaa
cmp
insl
outsb
popa
cmpsb
imul
mov
inc
and
inc
mov
add
jo
mov
mov
fadd
fmuls
call
xor
jecxz
and
jle
sub
addr16
adc
cltd
inc
inc
cmp
xchg
cwtl
jp
and
cwtl
add
mov
scas
jmp
lahf
cltd
mov
pop
push
mov
imul
imul
test
scas
jmp
scas
inc
scas
push
fwait
scas
fldt
bound
adc
cmpsb
imul
push
dec
or
gs
je
sub
addr16
iret
outsb
cltd
shl
jge
out
xor
int3
fisubl
outsb
inc
mov
xlat
mov
fnstcw
adc
pop
mov
shl
fidivrl
rcll
pop
out
ret
inc
or
rorb
xor
dec
outsb
sar
insl
cmpb
dec
je
add
sub
inc
daa
dec
adc
fstl
push
mov
fsubrp
xor
shr
and
cmpsb
and
jmp
cwtl
test
lds
push
cmp
lcall
or
stc
aas
adc
mov
pop
popf
cs
ret
nop
push
movsl
negb
jo
xchg
add
ds
mov
scas
mov
lock
push
cmp
jne
mov
mov
enter
adc
jp
adc
rdmsr
inc
adc
pop
adc
sti
orl
shlb
inc
or
fwait
shlb
jmp
or
push
daa
mov
daa
lock
arpl
cld
jae
sub
addr16
popw
add
push
push
into
xor
sbb
sti
ja
nop
xchg
adc
mov
jge
dec
rorl
jmp
or
mov
add
dec
and
lcall
and
stos
cli
jns
sti
call
adc
mov
xchg
mov
es
mov
int3
jle
cli
mov
std
test
inc
mov
sub
clc
mov
xor
jmp
stos
sti
or
jne
hlt
pop
rolb
cmp
lea
cmpsb
cmp
xlat
push
rcrb
adc
and
out
arpl
push
xor
mov
dec
xor
xlat
push
shll
push
mov
in
aad
xchg
add
adc
rcl
pop
fwait
sub
incl
test
jns
jmp
dec
ret
or
xchg
dec
or
sbb
push
sbb
in
in
xor
inc
gs
adc
dec
lock
icebp
mov
jo
sbb
mov
sti
push
bound
push
add
or
xchg
rolb
push
adc
sbb
push
test
xchg
mov
push
pop
jp
dec
in
or
pop
xchg
push
jmp
adc
dec
ficoml
inc
inc
push
sub
cmpsb
imul
hlt
out
pop
xchg
pop
mov
push
dec
push
les
lcall
jmp
filds
jne
push
push
xlat
xchg
mov
add
cwtl
cmp
lods
sbb
mov
loope
or
or
outsb
cmp
xor
ret
insb
pop
xor
cs
jl
lds
mov
popa
pop
jmp
mov
fwait
mov
cli
sbb
push
mov
fs
movsl
ljmp
shll
imul
push
mov
add
ficoml
clc
daa
mov
inc
jl
in
rol
sub
lret
loope
and
enter
push
jno
or
mov
push
jl
push
sub
leave
xor
orb
push
push
cmp
pop
mov
jbe
sarb
pop
cmp
or
ja
push
call
push
add
jne
ret
lea
sub
stc
or
mov
rol
mov
ret
sub
pop
add
add
movsb
or
scas
sbb
in
and
pop
pop
or
or
in
mov
add
clc
or
repnz
repnz
test
sbb
fsubs
jge
or
hlt
notb
push
push
in
mov
mov
daa
or
add
aad
sbb
mov
pusha
pusha
pop
pop
sbb
out
in
fs
insb
test
in
xor
dec
sbb
insb
xor
or
push
adc
out
jo
orb
sahf
jne
mov
dec
push
xlat
jge
push
call
push
mov
aam
iret
or
xor
loopne
fadds
pushf
sbbl
mov
adcb
inc
jg
add
add
or
and
lock
push
adc
call
adc
stc
rcrb
xchg
mov
sbb
sub
adc
mov
lods
inc
mov
loopne
js
dec
push
adc
mov
and
insb
inc
faddl
sarb
or
add
addb
xor
inc
adc
and
cmpb
adc
jl
shl
xorl
or
push
or
xor
push
push
adc
dec
cmp
lods
cltd
mov
lea
stc
and
fs
pop
sub
mov
push
cmp
jb
lcall
orps
scas
fldl
or
sub
sbb
push
fwait
inc
inc
add
or
lret
mov
push
test
push
ljmp
inc
or
cmp
shlb
rolb
pop
mov
into
dec
ja
sbb
fnstenv
cmp
cs
sub
outsl
mov
ret
inc
mov
mov
sbb
lret
fistpl
fs
je
add
je
cmp
shlb
pop
push
aad
jb
xchg
sbb
xchg
push
xor
or
daa
das
push
or
push
mov
adc
and
pop
aas
pop
sbb
je
pop
mov
das
roll
cmp
mov
loopne
adc
mov
cmp
pop
jnp
add
xor
mov
or
ja
sub
mov
inc
jmp
jecxz
jne
sub
adc
sub
testb
xchg
in
mov
jp
push
sbb
cs
nop
jae
cli
scas
mov
in
adc
add
mov
mov
pusha
clc
push
sbb
ret
push
push
mov
mov
jno
lods
cld
std
mov
push
fimull
dec
rcrl
sets
sbb
push
xor
inc
lds
inc
mov
add
movl
or
inc
mov
fistl
mov
or
fisubl
or
pop
sbb
xchg
insb
add
mov
mov
push
ss
jmp
xor
cwtl
and
push
mov
pop
call
mov
or
enter
push
add
push
cmp
out
pop
arpl
cmp
cmp
sti
and
push
and
sub
scas
out
mov
es
sbb
mov
test
dec
push
scas
sub
dec
inc
push
xchg
or
fidivl
jge
shlb
add
cmpsl
imul
and
or
xor
cld
sar
ss
add
pop
pop
in
xor
push
and
pop
iret
pop
push
adc
jb
enter
std
repnz
fsubs
mov
mov
add
hlt
xor
adc
sub
cs
sbb
xlat
and
mov
inc
scas
cmp
jae
mov
out
and
push
cmpsb
addps
xchg
ret
dec
inc
inc
inc
push
or
add
xor
inc
sbb
call
out
and
adc
mov
xor
add
push
push
loop
pop
ret
push
sub
lds
xchg
lds
sub
jle
imull
or
or
jmp
mov
sbb
mov
mov
fimuls
std
cli
loopne
mov
sub
andl
fwait
xlat
rorb
add
adcl
ret
adc
and
dec
push
push
jne
sub
push
xchg
push
mov
dec
hlt
inc
clc
or
sub
and
dec
aaa
mov
insb
add
add
and
xor
mov
fstpt
pop
or
cwtl
aad
fimull
sahf
hlt
pusha
call
cli
push
lock
xor
sbb
add
in
das
rcll
lock
adc
xor
mov
xchg
outsb
xor
and
push
pop
push
sbb
in
add
adc
sti
imul
into
or
pop
bound
pop
adc
xchg
mov
sbb
push
adc
hlt
xor
inc
adc
jle
arpl
jbe
hlt
call
xor
mov
jmp
je
jo
xor
xor
push
pop
xor
pop
push
int3
add
fwait
lret
push
xor
sbb
sbb
inc
cmp
sbb
sbb
xor
fsubl
loopne
call
lea
push
jle
jp
jge
jmp
sub
push
lods
test
imul
xor
pop
add
pop
mov
mov
lds
jae
fs
cld
add
enter
adc
enter
sbb
and
xchg
xchg
mov
mov
push
jb
xchg
sbb
mov
add
add
mov
push
in
adc
pop
in
or
add
push
pop
and
sahf
sbb
xchg
cmp
jbe
out
mov
rcrb
and
mov
or
add
pop
in
dec
mov
ds
mov
add
push
mov
jle
inc
inc
and
inc
adc
jae
adc
pop
xor
mov
enter
xor
add
cld
or
add
hlt
lock
call
in
fcom
xor
xor
shlb
sub
mov
pop
mov
inc
js
or
mov
nop
dec
xor
or
cmp
or
inc
mov
xor
mov
and
ds
cld
sub
adc
sub
pop
mov
add
pop
ljmp
mov
repnz
adc
imulb
lods
push
add
fcmove
lods
adc
je
mov
mov
add
prefetchnta
xor
pop
out
stos
and
push
lcall
push
push
xchg
outsl
lcall
dec
cmpsl
add
add
add
mov
adc
and
inc
push
pusha
imul
sub
push
push
aaa
dec
shll
nop
cmpb
dec
bound
cli
cmpsb
daa
insb
mov
rolb
mov
cmpsb
mov
fs
add
cmpsb
xchg
pushf
cmpsb
mov
lcall
call
scas
imul
adc
sbb
cmpsb
jmp
scas
hlt
pop
in
add
inc
add
cmpsb
imul
cmpsb
jmp
call
mov
mov
pushf
nop
pop
stos
movsb
shll
scas
stos
mov
jb
shll
sub
clc
push
iret
or
les
xor
pop
adcb
adc
xor
rorl
jae
push
add
or
add
add
jmp
inc
fists
fwait
cmpsb
pusha
dec
cmpsb
stos
daa
insl
popa
imul
xor
outsl
pop
outsb
xor
jo
add
sub
faddl
daa
cmovg
cmp
xor
push
adc
push
daa
ror
das
stc
pop
or
pop
pop
sbbl
das
gs
lods
insb
pop
push
insl
or
add
jp
cltd
jp
or
mov
mov
mov
add
mov
jbe
sbb
and
pop
cs
cmp
shlb
addl
xor
or
pop
push
xchg
add
insb
addb
cwtl
push
and
shlb
dec
in
movsb
adc
xchg
cmp
add
adc
jne
fadds
enter
adc
js
cmp
lods
adc
nop
out
xor
mov
sub
cli
mull
mov
adc
std
mov
inc
jb
popa
je
push
push
add
jb
jne
pushl
popa
insb
push
jb
adc
add
je
outsl
fs
gs
popa
outsb
lea
insb
add
gs
jle
mov
inc
fs
jae
pop
add
insl
cmpb
iret
push
adc
gs
jmp
ds
cmp
sbb
jge
mov
out
in
inc
imul
fldl
outsl
jae
push
aad
ja
jno
dec
popa
jae
inc
jb
movsl
or
mov
pusha
cmpsl
dec
jne
fisttpl
gs
mov
mov
dec
outsl
popa
pop
bound
jb
sbb
jmp
imul
jbe
mov
sbb
gs
xchg
cmp
je
xchg
dec
insl
mov
xor
dec
jae
jo
pop
mov
fcmovnu
push
je
and
outsb
push
imul
pop
imul
mov
movsl
mov
fwait
es
add
push
sub
inc
push
fcmovnu
or
jne
outsb
je
dec
loope
fstl
inc
xchg
mov
fs
push
lds
inc
jns
loope
adcb
or
sub
aad
test
es
call
roll
je
jnp
fwait
jmp
outsl
outsb
and
push
mov
negb
mov
or
jae
mov
aaa
push
push
cld
flds
lds
insb
sbb
jne
xorb
mov
push
fiaddl
outsl
adc
jbe
sbb
push
mov
orl
and
inc
sbb
lret
fistpl
adc
jo
outsb
or
push
dec
inc
dec
fcoml
and
popa
das
pop
sbb
xor
xchg
xchg
add
loopne
dec
insl
cs
or
js
push
xchg
mov
in
decl
aas
aas
xor
inc
pop
push
add
pextrw
sbb
jne
imul
pusha
fdivrl
pop
inc
js
mov
insl
lcall
add
add
subl
outsb
insb
imul
shrb
arpl
out
imul
mov
jo
je
stos
adc
jbe,pn
mov
add
or
add
add
jae
lret
inc
mov
je
push
pusha
fstpt
push
cmp
enter
dec
fwait
dec
outsb
in
aaa
jmp
dec
das
mov
insl
bound
push
or
adc
mov
in
or
loope
jbe
fildl
imul
add
imul
loop
or
mov
ds
mov
mov
fisttpl
mov
add
lods
jae
imul
xor
add
push
lds
push
aaa
or
push
sbb
movntq
push
movsl
pop
ret
jo
dec
cmc
addr16
xchg
sarb
pop
jecxz
sub
cmp
pop
jnp
xchg
data16
das
push
popa
jbe
adc
inc
mov
xor
mov
insl
sbb
adc
dec
inc
dec
push
dec
roll
lods
shll
insb
jne
je
jnp
pand
mov
push
inc
inc
pop
or
adc
add
mov
insb
or
add
adc
sub
subb
and
aas
xchg
xchg
cltd
and
bound
sbb
cmp
sbb
clc
jecxz
push
insb
cs
dec
fdivp
jg
pop
lods
loop
leave
lds
pop
pop
aas
lock
sub
out
or
mov
test
inc
je
sbb
shrw
add
jmp
in
lock
push
push
xor
testl
test
push
movsb
push
inc
cmp
adc
insl
sbb
insb
dec
gs
fimuls
into
icebp
or
in
paddsb
insl
ret
mov
add
insb
cwtl
jae
cmp
loopne
xor
mov
lods
inc
imul
andl
adc
dec
and
xchg
fstl
inc
add
or
mov
push
mov
xorl
jecxz
divb
and
add
cltd
ret
pop
sbb
push
adcl
subl
gs
inc
xchg
push
inc
and
xorb
je
mov
or
add
mov
mov
push
mov
pop
or
jmp
push
xlat
lods
negb
inc
cmp
pusha
pop
pop
ficoms
mov
or
and
outsl
xlat
cmpsb
fdivs
fisttpll
jg
dec
jae
adc
cmp
and
push
test
mov
push
mov
das
cld
test
enter
pop
cmpsl
dec
test
inc
aaa
and
xor
jno
inc
cwtl
xchg
push
dec
sbb
popf
fidivrs
icebp
fists
xchg
mov
mov
mov
sarl
inc
pop
inc
push
inc
inc
push
xchg
mov
outsl
addr16
cmp
inc
push
inc
push
adc
movsl
inc
pop
xchg
test
cld
jecxz
popf
or
cmp
or
push
push
dec
dec
inc
dec
dec
inc
insb
sbb
dec
jne
decl
push
push
scas
mov
adc
sub
pop
ja
or
xchg
sub
and
test
and
add
mov
inc
dec
inc
dec
out
fbstp
adc
pop
dec
push
dec
push
pop
and
insl
lods
pop
loopne
inc
and
pop
push
pop
and
mov
sbb
pop
cmpsl
pop
sub
adc
mov
add
dec
cmp
add
mov
jecxz
fmulp
mov
xchg
aas
push
lcall
in
and
addr16
and
ret
push
add
pop
sbb
in
add
xor
mov
arpl
or
cmp
in
dec
add
mov
or
icebp
filds
sbb
mov
push
mov
popa
repz
pop
scas
xchg
pop
test
std
sub
push
cld
ljmp
pop
mov
dec
rolb
mov
mov
and
add
es
test
mov
push
adc
push
dec
or
cmp
js
sbb
push
sub
inc
pop
imul
pushf
inc
data16
or
sarl
inc
cmpsb
jno
pop
push
sti
popa
add
xchg
ja
sub
inc
ret
ds
or
inc
jmp
and
add
data16
insb
xor
das
and
or
xor
dec
leave
adc
inc
stos
fadds
xor
xor
add
incl
or
daa
mov
fdivr
popa
add
sub
mov
mov
sub
int
mov
and
je
pop
jl
add
je
mov
sub
iret
xchg
aas
fwait
push
sub
mov
fists
lea
adc
adc
or
push
or
jo
sub
xchg
or
addb
cmp
fadds
pop
push
hlt
add
mov
xchg
adc
nop
cmp
cmp
sti
pop
inc
mov
adc
xor
sbb
sti
push
push
imul
and
add
cmp
cmp
push
inc
stos
bound
mov
dec
xchg
mov
mov
inc
or
inc
and
or
adc
add
sahf
sbb
and
lock
out
popa
or
inc
xchg
mov
mov
inc
inc
je
int
popa
inc
cwtl
sub
or
adc
push
mov
lret
xchg
int3
add
or
ror
sub
inc
xchg
mov
xlat
jo
dec
sub
jne
fidivl
lret
adc
fdivl
xor
scas
fwait
adc
daa
in
pop
in
aaa
lock
adc
outsl
aaa
outsb
inc
icebp
push
xchg
jae
aaa
mov
add
clc
stc
dec
leave
mov
cld
adc
jecxz
push
dec
call
addr16
hlt
add
pop
nop
mov
adc
and
mov
daa
xchg
or
add
rorb
push
or
xchg
sbb
add
jne
stos
fidivl
jle
jbe
inc
adc
es
jmp
lods
sub
mov
andb
xchg
push
sar
xor
or
push
stc
push
push
cltd
in
push
adc
sub
add
inc
xchg
mov
push
jo
mov
mov
call
inc
add
mov
inc
or
pop
mov
adc
add
in
fmull
pop
adc
ret
sbbb
jmp
pop
fisttpl
sub
rcrb
je
js
mov
inc
push
mov
popaw
int3
adc
and
adc
fistpl
mov
inc
xchg
mov
std
push
push
xor
notrack
push
mov
test
push
lds
fimull
mov
ret
adc
rolb
mov
sub
lock
mov
loopne
or
out
add
push
test
dec
mov
test
in
psubusb
ds
movswl
cmp
cmp
fdivr
mov
dec
or
sbb
test
jge
rol
add
roll
repz
sar
out
je
in
inc
jae
inc
test
dec
or
push
add
add
add
jecxz
push
testb
rol
and
js
call
push
push
adc
push
bound
pop
xor
xchg
add
and
mov
jmp
ret
dec
test
add
mov
pop
cmp
dec
es
lock
adc
out
push
xchg
insb
jbe
rol
sub
inc
movsb
sbbl
in
push
xor
adc
daa
adcb
fs
mov
add
out
push
jmp
adc
mov
fildl
xor
push
xor
add
or
or
out
adc
jo
sub
adc
xchg
add
shufps
adc
and
xorb
jo
push
stos
scas
xchg
orl
add
and
inc
add
call
popa
lcall
add
scas
inc
sbb
push
push
xor
inc
cmp
bound
cmp
adc
es
or
hlt
push
sti
outsb
sub
xor
xor
test
mov
add
enter
xor
sti
cs
nop
adc
pop
mov
test
jge
cmc
cwtl
cmp
add
add
pop
cld
and
add
in
adc
xchg
push
call
pushf
or
add
jo
cmp
or
mov
outsl
loopne
cmp
ja
xor
mov
das
sub
jnp
inc
sbb
lods
adc
mov
stos
sbb
test
mov
jnp
out
int
fcmovne
push
into
fucom
repz
stc
pusha
outsl
inc
push
pushw
gs
out
popa
fstl
sbb
and
cmp
and
add
jp
sbb
mov
and
jne
cmp
outsl
jge
mov
out
aas
jnp
fstpt
call
sbb
push
mov
mov
jecxz
jb
jg
jbe
sbb
in
les
cmc
push
push
and
dec
jnp
popa
nop
push
xor
or
add
pop
and
sub
and
test
adc
xorb
jl
jo
arpl
pushaw
shl
push
push
mov
mov
sub
mov
inc
into
test
std
sahf
push
lods
fsts
add
add
push
sar
and
push
setl
dec
and
cmp
pusha
cmp
mov
out
and
xor
cmp
loop
inc
mov
jp
shl
inc
cmpsb
jnp
pop
mov
adc
add
adc
and
popf
sub
jl
and
xor
push
inc
rcll
into
lods
ja
aad
jbe
js
sub
fs
inc
mov
test
pop
aam
hlt
jmp
push
push
shrl
daa
push
cmpb
fisttpl
in
mov
test
xchg
inc
popf
mov
mov
or
add
xlat
jmp
shlb
mov
in
and
xorb
syscall
xchg
adc
cmp
fisubrs
lock
es
repz
fcoms
jno
out
outsb
sub
mov
sub
mov
push
xchg
xchg
push
cld
jge
lods
mov
dec
add
mov
cld
cmp
mov
insb
fiaddl
xor
mov
stos
sbb
mov
cmp
inc
les
or
cltd
jns
pop
cmpsl
mov
rcll
scas
pop
add
in
mov
mov
xchg
cltd
cmp
ss
repnz
repz
call
dec
negb
xchg
aad
add
xchg
add
push
push
adc
mov
sbb
lcall
call
les
or
or
xorb
shlb
test
push
mov
adc
xchg
outsb
and
mov
jnp
and
cmpsb
push
nop
mov
stos
adc
xor
inc
shl
sbb
clc
aaa
and
inc
mov
adc
movsb
or
push
xchg
addb
add
mov
subb
and
adc
jne
ljmp
call
sbb
sbbb
lds
jb
mov
add
inc
mov
xor
imul
mov
push
stos
jnp
mov
push
insb
mov
xchg
mov
add
jl
push
mov
cwtl
push
sbb
push
mov
push
mov
out
push
push
sub
popf
in
shll
and
fcoml
sbb
push
mov
pop
dec
adc
fldt
rorl
mov
push
cs
or
mov
jmp
mov
inc
mov
or
inc
mov
ds
sbb
repnz
testb
xor
push
push
insb
add
push
insb
push
pop
sbb
mov
push
fdivs
cmp
adc
nop
repz
sub
adc
adc
pop
mov
inc
icebp
adc
inc
and
gs
fnsave
add
cli
iret
push
sub
scas
mov
adc
jmp
popa
imul
pop
cmp
and
call
out
adc
out
sbb
fs
std
or
int3
add
int3
and
lea
inc
xchg
insb
push
inc
cmp
mov
mov
rorb
pushf
in
mov
out
and
shll
shl
add
mov
sbb
pcmpeqd
and
adc
inc
dec
xlat
popf
insl
cmp
pop
xchg
pop
movsb
add
xor
aam
cli
cmpsb
imul
cmpsb
imul
cmpsb
imul
scas
cmpsb
imul
fdivrs
movl
jmp
pusha
outsb
mov
xor
and
aaa
and
jo
fdivl
lods
cmp
pop
insb
adc
cmp
adc
or
pop
addb
mov
stc
add
and
pop
and
iret
inc
jne
sub
popa
add
push
outsl
loop
inc
push
adc
push
nop
dec
mov
mov
add
imul
and
push
mov
popa
inc
adc
inc
add
dec
test
mov
cmp
dec
outsb
jo
add
mov
insl
dec
sub
add
sbb
fists
or
cmp
loopne
add
das
inc
addr16
add
add
popa
bound
adc
xchg
pop
lea
or
push
xchg
push
adc
mov
outsb
je
outsb
inc
inc
inc
sub
insl
arpl
sbb
andb
push
xchg
lret
push
add
jae
je
je
add
loopne
xor
mov
adc
jae
push
sbb
mov
xchg
add
popa
insl
push
or
add
loope
cmp
add
int
test
ljmp
jns
mov
popa
je
push
test
dec
sub
mov
lock
add
lret
sub
loope
add
inc
cmp
push
mov
jns
jl
cmpsl
rcll
ret
push
cmp
lods
fdivrl
sbb
mov
push
aad
out
add
sar
pop
xor
pop
adc
lret
mov
insl
call
gs
outsl
insb
sbb
jne
cmpsl
movsl
ret
imul
mov
andb
cmovb
lahf
roll
test
addb
je
add
mov
call
jle
or
sbb
nop
xchg
add
cltd
idivb
lcall
xchg
outsb
mov
cmp
movsl
xlat
ja
mov
mov
dec
cld
jg
xor
add
mov
in
je
in
sbb
mov
ljmp
jbe
cmpsb
in
ljmp
mov
xchg
jmp
dec
or
int3
lahf
pusha
into
push
into
pop
xor
cmp
dec
pavgb
mov
cmc
mov
jno
xor
movsb
mov
cmp
lcall
sub
sarb
xchg
enter
cmp
mov
shll
push
stos
add
mov
mov
inc
loopne
and
insl
call
outsb
test
stos
mov
and
xchg
pushf
or
aaa
inc
imul
out
aaa
inc
lret
into
int3
in
fistpll
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
cmovp
ja
inc
xchg
scas
pop
sbb
clc
idivl
jg
stc
xor
add
xchg
pop
push
jnp
dec
mov
dec
cld
mov
fistl
or
into
xlat
jbe
jmp
movsl
or
loopne
pop
es
adc
cltd
sub
xor
mov
out
jne
orl
pushl
fistl
ljmp
xchg
out
loop
jp
push
mov
adc
sbb
xchg
cmp
cld
xor
sbb
mov
out
lcall
test
xor
out
and
clc
and
add
cmp
jle
cmp
inc
insb
jno
cmpsb
cmp
sbb
in
shrl
bound
jle
aad
and
ja
adc
dec
lahf
fidivrl
lods
test
push
pop
push
xlat
cmpsb
repz
stos
inc
push
cltd
xchg
xlat
push
icebp
call
pop
std
std
mov
xor
inc
into
add
lret
bswap
and
mov
pop
gs
repnz
sbb
jge
dec
in
push
adc
sar
add
in
pusha
mov
pop
sub
add
call
inc
adc
in
xchg
push
jbe
test
xbegin
enter
faddl
add
cmp
outsl
inc
inc
jno
xchg
xchg
sbb
push
mov
and
dec
xor
or
pushf
mov
inc
mov
mov
mov
incb
sub
js
stos
mov
cmp
ljmp
aaa
shlb
mov
aaa
fwait
cmp
jp
stc
mov
les
cld
push
sbb
jmp
maskmovq
mov
sub
xchg
dec
movsb
dec
test
sub
or
or
push
loopne
add
mov
lock
lcall
sbb
insb
and
cmp
cld
jno
adc
mov
addl
fld
test
aaa
cmp
in
imul
mov
add
movsb
and
repnz
dec
ljmp
jg
xchg
in
aaa
xchg
pop
cmp
cs
outsl
dec
sub
push
aad
add
jle
iret
movsl
mov
orl
movsl
mov
mov
sub
dec
test
cmpsl
lret
int
sbb
xchg
into
adc
dec
mov
jae
nop
loope
loop
mov
pop
lea
jecxz
pushf
adc
scas
jb
adc
mov
add
hlt
dec
inc
mov
mov
mov
and
iret
into
add
sti
call
insb
mov
idivb
xor
adc
sbb
ficompl
nop
imul
jmp
or
ret
cwtl
jne
stos
sub
mov
jecxz
sahf
into
outsl
add
in
xor
jg
insb
lods
arpl
mov
rcl
sbb
test
xchg
dec
inc
out
inc
mov
mov
pop
pop
stos
jecxz
mov
mov
shlb
cmc
into
test
jnp
adc
jno
dec
les
lea
into
or
in
out
pop
mov
fmul
jge
cltd
in
dec
in
jno
pop
push
rclb
das
adc
test
popa
lahf
add
or
clc
fwait
xor
movsl
and
aaa
clc
enter
jo
mov
inc
insl
mov
ja
mov
inc
xchg
enter
cs
xor
mov
int3
lods
jge
sbb
clc
dec
inc
jnp
aam
pop
insl
ljmp
cmpsl
test
fstl
out
pop
std
add
xor
push
bound
test
add
sarl
loope
inc
ljmp
stos
enter
xchg
and
lret
int
sbb
inc
fprem
inc
mov
xlat
jge
pushl
jns
cltd
pop
movsl
cmc
push
int3
cmp
sub
sbb
pop
call
inc
test
incl
add
dec
addl
cld
ss
insl
dec
lret
test
stos
insb
mov
adc
sbb
insb
das
ss
push
xor
mov
out
jns
pop
leave
aas
aad
jg
call
in
mov
lret
push
movsl
sbb
in
push
add
jae
scas
enter
rcll
inc
stos
mov
arpl
adc
fbld
xchg
aad
and
mov
mov
out
mov
jl
pop
stos
mov
jecxz
mov
loope
and
sarl
test
int3
arpl
js
das
aaa
mov
mov
or
mov
xlat
je
cltd
jg
decl
and
loope
mov
adc
push
sub
into
cvtps2pi
dec
test
dec
test
mov
dec
add
and
push
cmc
add
into
imul
or
dec
inc
aas
cmp
icebp
idiv
pushl
adc
dec
ja
into
jb
xor
pop
jo
jecxz
mov
push
rcll
xchg
lret
mov
clc
push
ret
mov
aaa
loop
jns
cld
call
bound
cmpl
scas
das
stc
mov
jge
test
movsb
mov
loope
aam
into
ret
cli
mov
jns
ret
mov
ret
jg
and
dec
xchg
decl
mov
xor
jecxz
test
pusha
hlt
pop
mov
xchg
or
push
and
aam
pop
ret
or
jg
adc
test
xchg
into
movsl
add
shl
inc
out
repz
incl
mov
scas
lret
xchg
cmp
loop
sar
sbb
dec
insl
xchg
ljmp
outsl
mov
sarb
loope
enter
and
jge
mov
aas
dec
int3
cmp
mov
mov
sbb
push
push
lret
insl
out
sub
sub
outsl
call
xchg
loope
mov
hlt
inc
push
jo
scas
adc
jb
into
jp
ret
loope
movsl
rcrb
adc
sbb
dec
stos
dec
int3
inc
ljmp
sbb
cmp
stos
lock
mov
pushl
xlat
jo
sub
sbb
push
daa
or
sub
xchg
adc
add
test
or
pop
jne
mov
adc
incb
jns
xchg
stos
jle
mov
adc
sbb
data16
cmp
and
pop
add
iret
arpl
das
cmpb
ret
push
sub
and
gs
adc
mov
pop
cs
dec
cmp
repz
ret
xrelease
xor
stos
ds
ljmp
push
jmp
sbbb
jae
mov
jle
jbe
mov
iret
mov
cmp
mov
xchg
push
into
mov
jb
jg
xchg
dec
mov
repz
addr16
movsl
add
add
jmp
bound
ret
dec
es
pop
jne
scas
das
jge
mov
add
mov
dec
cmp
repz
int
push
into
fidivrs
xchg
insb
and
xor
sti
call
in
push
stc
add
push
mov
or
test
jg
rcll
into
push
lret
jg
and
push
sub
xchg
test
push
xchg
popf
add
push
xchg
stos
push
sub
fstps
ret
fwait
in
or
lcall
cmp
std
pop
into
movsl
and
mov
enter
jmp
mov
into
sbb
lcall
aad
dec
mov
xlat
jb
pop
mov
cmp
call
mov
sub
xor
cs
es
lods
inc
test
or
or
cld
incl
ret
jne
outsl
mov
inc
mov
popa
ret
outsl
fmulp
movsb
push
pop
mov
and
aaa
pop
ret
mov
popf
pop
adc
cmpsb
jne
lahf
pusha
jmp
mov
mov
adc
mov
dec
ljmp
lea
xchg
in
xor
mov
push
sbb
repnz
aas
mov
incl
imul
addl
mov
add
fiaddl
xchg
arpl
mov
ret
mov
jg
and
das
lock
add
fisubl
ret
in
jg
jmp
call
insl
aam
push
int3
fisubrs
adc
ror
lea
push
sbb
fiaddl
dec
loop
std
ljmp
aam
mov
js
add
dec
je
call
jp
aas
adc
or
jnp
and
xchg
or
or
pop
fdivr
repnz
pop
push
cmp
cmpl
ljmp
mov
push
sbb
cmp
adc
and
pushl
in
mulb
fadd
adc
stos
and
jne
or
add
xchg
scas
mov
inc
insb
jbe
adc
pop
imul
cs
push
or
adc
and
and
add
jg
push
cmp
rorb
jo
ror
jl
xchg
rcrl
negl
jge
jno
xchg
stos
xor
aaa
mov
out
mov
aad
mov
sahf
test
stc
inc
incl
mov
fcompl
lock
icebp
icebp
mov
ret
ret
icebp
lock
fnstsw
mov
mov
mov
ret
ja
mov
ret
rcrb
sub
or
inc
pop
xor
and
in
jne
in
in
mov
dec
dec
shlb
loop
sub
and
mov
cmp
out
add
push
in
lods
or
jg
mov
stos
lods
test
sbb
and
pop
pop
adc
add
dec
jmp
jmp
mov
xchg
addr16
sarb
rolb
lret
lret
and
dec
aas
iret
push
mov
pushf
pop
in
js
dec
cltd
and
decl
icebp
aam
push
leave
popf
shrl
enter
test
int
dec
adc
and
dec
clc
add
add
rol
movsl
hlt
jne
mov
ljmp
adc
inc
pushf
test
cmc
mov
adc
stc
sub
push
test
lock
jo
pop
ret
jne
or
outsl
pop
sub
lods
shll
sbb
jg
ds
dec
jns
loop
addr16
mov
pushl
mov
xchg
lods
lock
xchg
push
icebp
outsb
push
add
imul
mov
sub
aas
and
rcl
arpl
es
inc
nop
add
pushf
das
int
inc
in
inc
les
mov
mov
sbb
mov
cmp
in
call
jl
fnstcw
cltd
or
push
std
mov
outsb
dec
mov
dec
mov
loopne
add
add
inc
in
xchg
mov
inc
dec
push
and
sbb
push
xor
pop
clc
shll
popa
mov
mov
pushl
pop
jo
out
in
jmp
mov
lcall
or
push
jp
mov
jg
push
cmp
pop
bound
jle
aad
test
cwtl
mov
mov
pusha
xchg
mov
outsl
push
je
push
cmp
ret
iret
repnz
mov
enter
or
lock
outsl
ffree
lret
and
push
pop
pop
les
ret
push
jo
jno
rcrb
and
aam
mov
jo
call
fstpl
add
dec
je
aam
or
movsl
jg
stos
push
in
inc
jno
sarl
pusha
inc
pop
fstp
roll
pushl
adc
sub
xor
xor
xor
jg
mov
add
xchg
xor
xor
xor
xor
xor
xor
xor
lret
xor
add
incl
int3
xor
ss
ss
ss
ss
std
or
pushl
imul
jge
test
mov
popf
mov
into
ss
mov
aaa
dec
aaa
push
aaa
pop
aaa
insb
aaa
jb
jp
xchg
aaa
popf
aaa
mov
aaa
mov
cld
pushl
aaa
shll
fdivl
add
or
sbb
inc
dec
cmp
cmp
ja
jle
pushl
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
aad
fnstsw
jecxz
jmp
cmp
sbb
aas
cmp
dec
cmp
mov
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
cmp
cmp
cmp
cmp
call
cmp
xor
cmp
pop
cmp
js
jle
test
mov
mov
mov
push
fistpll
out
out
cmp
or
pop
ds
gs
mov
ds
ds
jle
pop
test
push
xor
add
xor
aas
add
rolb
incl
adc
mov
mov
cmpsb
and
popf
sub
sbbl
pop
or
or
inc
add
or
add
xorb
add
orl
add
rolb
add
mov
pop
pusha
pop
and
fists
enter
fisttps
testl
test
add
mov
cmp
and
add
insb
xchg
nop
xor
jp
add
add
and
push
or
or
pusha
inc
push
add
add
call
add
lret
add
add
add
test
inc
orb
sub
sbb
daa
or
ljmp
dec
push
ret
xor
std
mov
xor
xor
das
add
xor
dec
aad
andnps
test
loopne
fisttpll
fs
ja
jae
push
inc
jb
push
and
mov
or
push
imul
cs
or
jae
and
jbe
inc
inc
cmp
jl
or
ja
cld
mov
je
push
jb
icebp
sbb
aas
xor
pop
push
insb
adc
mov
jg
xor
pop
sub
sahf
inc
sti
pop
xorl
outsl
add
decb
dec
inc
push
sbb
adcb
adc
jae
popfw
inc
lock
pop
push
insl
or
xchg
mov
imul
fs
incb
and
or
aad
call
rcl
add
pop
dec
ds
cmpsl
clc
mov
push
jb
shll
xchg
dec
fs
testb
push
push
add
andb
call
lock
xchg
add
mov
mov
in
adc
aaa
jbe,pt
loope
adc
dec
dec
add
imul
loope
xor
dec
inc
pop
inc
inc
xchg
mov
add
repz
xor
dec
add
push
pop
clc
or
push
insl
cmp
int3
not
rorb
add
sbb
mov
xor
in
movsb
inc
out
sub
adc
fbstp
push
pop
mov
push
inc
dec
mov
cmp
inc
outsl
nop
stos
outsb
outsl
aaa
add
push
jae
les
sub
dec
outsl
jp
scas
andb
popa
das
xor
xor
inc
arpl
sub
addr16
sub
or
jo
and
mov
and
pop
mov
jne
inc
and
jne
in
mov
imul
sub
or
add
bound
outsb
pusha
or
sbb
push
subl
jbe
or
inc
insl
jae
inc
insb
rcrb
ret
lock
jo
fiaddl
fstps
inc
in
inc
imull
das
sub
fldl
pop
jle
pop
fdivs
jo
cmp
ja
sub
aam
insl
fcomps
int
add
inc
inc
inc
mov
mov
add
arpl
xchg
stos
ret
sbb
pop
xchg
push
add
pop
add
dec
jmp
and
pop
push
push
sub
sbb
sahf
push
lods
adc
in
add
fcmovnu
sub
add
xor
cmp
and
or
sbb
cmp
sub
sbb
sub
fs
cmp
sbb
pop
insb
jbe
sbb
pop
add
pop
or
adc
pop
push
pop
scas
jne
out
and
pop
jb
or
inc
pop
dec
xor
or
sbb
adc
pop
push
fdivrl
insb
jb
repnz
adc
push
xchg
std
cmc
lret
sbb
movups
add
adc
push
add
xchg
popf
std
add
add
add
or
add
jne
xchg
jne
push
aaa
sbb
add
jnp
sbbb
push
sbb
sbb
or
and
outsl
adc
add
sbb
clc
sbbb
sbb
push
dec
fsts
jbe
add
or
add
add
add
xchg
sub
pushf
movzbw
leave
dec
lock
or
aam
sbb
sti
xor
fwait
imul
aas
cs
bswap
stos
call
jge
inc
sub
jns
xor
jge
add
les
sub
adc
mov
mov
sar
mov
fisttpll
add
inc
je
dec
ljmp
pop
mov
fstpl
call
in
push
mov
fisttpll
and
xor
and
dec
mov
pop
add
test
int
pop
call
repz
add
fucomp
jp
mov
sub
jmp
ss
shrb
nop
test
sbb
mov
mov
enter
fdivrp
aad
loopne
jmp
jmp
roll
loopne
push
inc
mov
mov
lret
and
and
aad
mov
rclb
jo
and
push
xor
pop
jmp
adc
inc
aam
sbb
pushf
push
fsubrs
dec
incl
inc
push
fldt
add
sbb
aad
insl
fwait
sub
push
inc
push
insl
clc
push
pushf
sbb
xchg
ljmp
js
call
loope
inc
stos
movsl
stc
cmp
not
pop
jmp
xor
mov
jbe
pushf
jmp
xor
ds
in
ret
or
xlat
mov
push
out
and
es
mov
in
add
mov
mov
inc
daa
cwtl
into
scas
add
iret
xor
addr16
mov
fisttpll
mov
push
scas
mov
add
mov
in
mov
jmp
pusha
rdtsc
mov
adc
out
in
daa
pusha
cmp
push
scas
int
addl
cmc
ret
xor
inc
push
ret
call
call
and
pusha
or
fcoml
stos
pop
nop
fs
out
mov
sub
call
push
test
sub
std
dec
push
sub
lret
stc
cmp
xor
scas
adc
lcall
dec
adc
and
add
mull
pusha
call
outsb
call
jmp
pushl
jl
stos
call
arpl
jmp
mov
or
ret
sbb
sbb
jne
sbb
sbb
add
push
add
xchg
mov
in
call
sbbb
push
xor
mov
cmp
pop
mov
pushf
out
sub
outsl
aaa
inc
sbb
cmc
add
cli
or
icebp
shl
sti
or
in
notb
shrb
sar
popa
pushf
test
popa
cmp
inc
ja
into
pop
pusha
inc
inc
add
pushf
mov
in
imul
hlt
repz
lds
sbb
inc
xchg
incb
pop
std
call
add
pmaxsw
cs
cmp
arpl
push
add
push
push
dec
inc
mov
ds
pop
push
sahf
mov
and
pop
ret
add
inc
inc
add
mov
setne
add
mov
jmp
mov
cmpsb
mov
sbb
mov
or
xchg
or
loop
jnp
lods
jecxz
enter
xchg
adc
mov
push
idivb
lea
cwtl
loop
hlt
mov
mov
pusha
xor
add
jb
shll
adc
pop
mov
xchg
shld
push
mov
lcall
call
add
adc
mov
ja
pop
push
mov
call
mov
mov
stos
inc
popa
mov
adc
sub
lcall
cmp
push
mov
lea
iret
inc
scas
cmpsb
or
fisubs
out
data16
enter
shr
sarl
or
push
push
in
push
daa
mov
fbstp
mov
int
mov
jmp
sti
imul
sahf
cmp
adc
addr16
and
iret
cwtl
je
cltd
outsl
xchg
loope
push
icebp
test
sub
jne
adc
mov
into
rorl
ds
rcrl
add
insb
in
pop
out
mov
xlat
loope
sarb
push
mov
test
fs
icebp
mov
inc
decb
dec
pop
nop
test
outsl
loope
shrb
jns
sub
ret
jae
mov
cmpsl
push
call
jne
arpl
inc
jmp
paddw
imul
inc
xor
push
add
pop
pop
jg
mov
cmpl
jno
jmp
xchg
fnstenv
mov
or
test
repnz
inc
ljmp
push
jne
test
aad
push
decl
sub
pop
and
dec
dec
dec
xor
xchg
lock
test
into
call
ljmp
arpl
sbb
inc
in
add
ljmp
out
enter
jmp
loop
call
stos
push
in
or
xorb
cmpsl
rorl
pop
in
int3
call
fbstp
cmp
cmp
jmp
and
xchg
insl
sbb
xchg
lods
int
mov
fdivrl
jmp
les
rol
into
pop
test
push
mov
movsl
pop
push
push
or
sbb
ret
dec
repnz
lcall
std
lods
mov
inc
rcll
mov
xlat
jo
sbb
hlt
sbbl
add
ficoms
fnstsw
loop
mov
fdivrs
pop
call
mov
cmc
mov
mov
push
int
mov
dec
cld
xchg
pop
and
xor
xor
push
inc
ljmp
call
and
sub
pushf
outsl
mov
sub
xor
or
xor
rclb
out
rorb
cwtl
push
inc
addr16
aad
dec
lods
add
and
cli
fstl
sbb
out
mov
mov
lret
jnp
add
dec
push
lea
orb
cmc
ja
pushf
jmp
lahf
push
cld
add
mov
jmp
mov
add
pushf
mov
sbb
into
aad
push
xchg
add
shlb
push
pop
test
test
xor
fdivr
push
xor
call
pop
stc
cmp
sub
and
repnz
je
outsl
jnp
pop
call
adc
or
fsub
fcmove
mov
push
sub
jmp
sub
in
or
push
push
jmp
mov
nop
mov
add
and
add
push
pop
add
lods
sbb
mov
sub
mov
lds
rcrb
fwait
or
lcall
fwait
xchg
lock
call
mov
mov
dec
out
lcall
add
push
jae
xchg
jge
pushl
rclb
push
inc
dec
push
cmovb
jo
std
sub
call
cs
jg
and
mov
jb
push
ja
pop
push
push
call
mov
in
mov
call
clc
test
mov
push
sub
in
ljmp
jne
mov
mov
stc
mov
or
mov
or
rclb
fs
mov
dec
pushf
dec
hlt
push
shl
mov
pusha
pusha
push
hlt
mov
ret
aad
and
pcmpgtb
clc
or
push
cmp
mov
inc
adc
pop
fs
rclb
nop
out
add
outsl
pushf
call
fsubrs
jg
loop
push
icebp
adc
ret
jae
sub
adc
sub
fisttpll
in
call
or
push
andl
mov
dec
adc
ja
and
ljmp
out
call
cmp
mov
mov
xchg
popa
xchg
mov
icebp
nop
in
out
popf
je
and
call
push
clc
adc
sbb
add
dec
in
hlt
call
movsb
lahf
or
pop
pop
add
mov
ret
aas
dec
mov
cmp
add
test
inc
lock
and
ss
pushf
mov
jl
pop
sub
std
fwait
jmp
aam
jae
shr
inc
add
js
lahf
fsubp
sahf
jno
pop
xchg
insl
xor
aad
xchg
mov
hlt
mov
frstor
inc
sub
inc
inc
sub
ret
push
jno
stos
sbb
es
sti
mov
cwtl
push
clc
mov
push
pop
test
imul
add
bound
mov
pop
mov
arpl
fisttpl
dec
in
cmp
stc
mov
jmp
xchg
cltd
push
pushf
faddl
aaa
dec
or
push
push
pushf
mov
dec
call
popa
cmc
pusha
jmp
mov
setg
ja
stos
jmp
imul
mov
cmpsb
jno
jmp
movsl
push
inc
jg
arpl
sti
in
rol
pop
pushf
push
and
sbb
out
cmp
dec
ret
lcall
out
aad
xor
stc
push
movsb
jns
fstpl
dec
jmp
sbb
testl
lock
cmc
pop
mov
test
leave
std
psubb
adc
sahf
cmp
and
push
popa
sub
inc
ret
and
mov
sub
adc
test
mov
mov
mov
adc
jmp
outsb
call
sub
orl
imul
aaa
inc
rcll
jb
daa
ret
push
add
sub
pusha
push
pusha
outsb
jg
ja
sub
call
addb
aam
add
je,pn
or
insb
mov
xchg
arpl
sbb
div
ret
mov
inc
xor
loopne
add
mov
out
cmp
enter
cmc
mov
jmp
ss
dec
call
xchg
mov
mov
scas
jnp
loope
scas
inc
jp
loope
or
jo
add
loop
and
cmpsl
lcall
add
shll
mov
pop
mov
pusha
jae
inc
mov
insl
mov
dec
jb
pop
divb
ja
sbb
inc
in
popa
add
pop
jb
icebp
loop
test
mul
mov
cmp
sbb
mov
jmp
movsb
mov
dec
shr
and
mov
cmpb
jecxz
bound
and
lock
fs
rolb
in
setae
or
or
rorb
mov
rcrl
pop
mov
bound
outsl
mov
fcmovne
jmp
repnz
fildll
push
jno
std
std
pusha
push
xlat
adc
js
cwtl
push
mov
mov
dec
out
xor
sub
pop
flds
mov
add
lods
or
mov
test
shl
sbb
dec
sbb
mov
push
push
adcl
xchg
mov
add
pushf
in
mov
scas
adc
loopne
or
xchg
mov
scas
mov
pop
xchg
sbbl
lds
jmp
cmpsb
cmp
sbb
pop
inc
xor
paddusw
adc
jmp
ret
adc
fldlg2
mov
adc
int
dec
rorb
jg
xchg
sbb
mov
loopne
inc
xlat
sbb
push
pushf
or
mov
stc
ds
sbb
inc
stos
ljmp
roll
and
les
fsubrp
jo
jmp
in
bound
jl
imul
repnz
inc
push
lret
testl
mov
ret
stos
outsb
cmpsb
or
mov
mov
xor
push
push
sub
mov
jbe
mov
fnstsw
decb
subl
pop
jg
push
pop
insb
or
lret
ret
sub
movsb
xor
fisttpll
and
lret
inc
insb
in
push
sub
xor
jno
inc
push
ret
or
or
cmp
ret
jmp
sub
mov
hlt
movsb
mov
jmp
je
dec
clts
cltd
test
hlt
hlt
and
sbb
mov
xlat
push
mov
and
add
xor
test
jmp
fs
or
adc
outsb
sub
add
dec
pop
test
aas
ds
or
inc
mov
orl
cmp
js
je
jp
push
loope
adc
pop
push
xor
popf
lahf
call
mov
jecxz
and
push
push
out
imul
and
sar
lods
cwtl
pusha
nop
fimuls
out
ds
cmc
jl
icebp
add
lds
insl
inc
or
sti
dec
movsb
fsubrp
push
adc
sub
inc
xchg
out
cmp
mov
bound
insb
jb
mov
cli
cmc
lcall
movsb
mov
frstor
adc
mov
sahf
xchg
push
hlt
cld
xor
jmp
loope
into
clc
push
test
xchg
mov
lahf
add
lcall
xor
or
call
jbe
push
inc
lahf
lret
testb
in
push
pusha
push
xchg
inc
mov
push
sub
cmp
or
sti
outsb
icebp
ds
popa
ret
testl
inc
pop
leave
mov
pop
scas
cmc
mov
mov
test
fmuls
jmp
cmp
lods
jno
pusha
push
fistl
xchg
icebp
gs
popa
js
pop
fstps
xchg
sub
xor
mov
mov
call
mov
push
in
push
hlt
jnp
out
rol
pusha
pop
not
pop
js
push
xor
andb
popa
mov
mov
call
jmp
jmp
std
jmp
ja
inc
lds
fs
xlat
xchg
pushf
fsub
inc
adc
xor
pop
jge
scas
addb
xlat
fisubrs
test
mov
movlps
test
pop
mov
clc
aas
mov
and
call
jne
mov
addl
adc
adc
xchg
adc
cli
xorb
xlat
push
lds
shl
ret
sub
mov
jmp
push
stc
jo
lahf
sbb
ja
call
sbb
or
arpl
xor
scas
and
faddp
mov
jmp
jmp
mov
push
lret
fs
das
mov
sbb
push
pushf
inc
ficoml
js
fsts
je
cltd
aaa
ret
adc
scas
stc
or
push
out
cmp
pushf
into
push
inc
and
and
subl
mov
mov
cmpsb
inc
push
add
cmp
fdivrs
dec
adc
add
mov
jae
and
lock
pushl
pop
xchg
call
dec
test
push
cmpsl
or
add
sub
jle
ret
shlb
xchg
ret
out
push
fnstenv
jmp
mov
push
xchg
mov
mov
xchg
iret
and
mov
fwait
sbb
sbb
pushf
ja
push
dec
mov
push
cmp
jne
xchg
call
out
cmpb
sbb
and
lea
and
cmpb
dec
add
out
add
add
rorl
mov
xor
jge
sbb
cmp
in
pop
sbb
int3
ret
adc
popfw
mov
in
xchg
fdivrl
out
pop
cmp
fcoms
pop
out
jl
sbb
push
jbe
fdivr
push
or
fucomp
add
loopne
sbb
jmp
lods
and
pop
mov
lds
mov
mov
insb
fs
and
xor
jmp
or
outsb
mulb
lea
filds
negl
xor
shr
sub
in
xor
sub
inc
jmp
int
push
cmc
cmc
or
inc
or
cld
sbb
aad
testb
jecxz
daa
jp
insb
cld
add
push
cmp
test
pusha
ror
mov
mov
mov
push
push
fcom
andl
xlat
dec
inc
xor
jo
ds
mov
stos
or
mov
adc
cld
mov
into
or
fists
pop
push
push
inc
fdivs
popf
cmp
ja
das
ss
and
push
daa
aad
mov
es
cmp
shll
sub
loope
clc
sbb
jne
pop
popa
lea
movb
std
popa
adc
loopne
test
pop
mov
rolb
mull
sub
mov
out
loope
sbb
pop
into
push
adc
lock
popa
jg
push
das
jl
mov
mov
sbb
push
gs
les
dec
jmp
aad
sahf
and
out
or
mov
fists
or
in
push
lea
or
movl
sub
mov
sbb
xchg
inc
ljmp
stos
call
cld
dec
add
pop
cs
rolb
pop
daa
je
sub
decb
cmp
into
call
sub
clc
icebp
pop
or
mov
lret
movb
xor
xchg
sub
pushf
pusha
pushf
fstps
sbb
bound
jl
mov
cld
cmp
ja
inc
pop
dec
ret
lock
rcll
sbb
mov
cmc
fucomip
mov
mov
stc
pusha
clc
inc
and
fwait
cmc
sar
sub
pop
loope
jae
add
xlat
cmp
ja
test
cmp
lcall
pop
out
aam
addr16
les
add
sub
sub
pop
cs
fsubs
lock
push
std
or
outsb
pusha
test
xor
in
stos
ficompl
xchg
inc
push
or
hlt
hlt
adc
and
popa
pop
rclb
adc
inc
pop
mov
push
pushf
icebp
icebp
push
cmc
ljmp
mov
xor
fbld
call
int3
test
mov
push
jl
and
inc
xchg
xchg
insb
push
push
sbb
adc
out
incl
xor
pop
fwait
sar
ja
mov
icebp
pushl
lea
push
push
ds
daa
mov
cli
dec
test
pop
inc
stos
mov
push
call
mov
dec
or
or
test
pop
adc
ror
adc
add
jmp
lods
and
xchg
sti
mov
iret
and
fdivl
sbb
push
cmp
movsl
add
and
aaa
push
ret
push
in
push
sub
push
cmpsb
or
insl
lock
pushf
fdivrs
aas
inc
xchg
sub
loop
dec
sti
iret
ljmp
pop
or
inc
adc
jmp
mov
subl
popf
cwtl
xor
inc
mov
ficoml
mov
and
scas
icebp
fidivrl
fcomps
in
xchg
outsb
mov
mov
mov
add
mov
pop
and
popl
push
jno
jb
adc
sbb
cmp
es
addb
mov
inc
push
jmp
mov
add
inc
sub
shlb
ret
or
or
shr
cwtl
loop
pop
xchg
jecxz
pushf
adcb
dec
mov
mov
jo
pop
ljmp
test
mov
adc
loopne
add
jmp
push
insb
xchg
sti
stc
jp
pushf
mov
adc
sbb
aad
push
sub
adc
fiadds
mov
cs
bound
xchg
mov
push
inc
add
in
inc
xchg
mov
dec
add
adc
and
push
mov
shll
xor
dec
addb
pop
fistpll
cmp
xchg
mov
cs
out
jl
rorb
dec
clc
pop
or
pusha
in
rcr
int3
and
xchg
mov
dec
add
adcl
xor
inc
pop
cmp
decb
cmp
dec
iret
jmp
and
jmp
fdivs
adc
in
pop
stos
pop
pushf
mov
sbb
out
das
ror
call
adc
fsubrs
sub
jo
dec
cs
pop
popa
cmpsb
into
mov
arpl
or
pop
cltd
jo
cmp
insl
or
adc
sbb
mov
push
xor
cs
test
pusha
mov
stos
ljmp
push
stos
pushf
push
xor
sub
push
and
shl
popa
push
sti
cwtl
adc
push
jle
call
adc
mov
xchg
shlb
scas
mov
out
std
mov
mov
push
or
pop
inc
sub
test
inc
divb
inc
es
pop
stos
add
pop
pusha
mov
scas
or
dec
mov
add
pop
inc
pop
call
xchg
out
adc
roll
inc
mov
xchg
jo
arpl
data16
dec
ja
std
std
sub
jae
outsb
call
dec
push
mov
jno
in
cmp
out
lds
push
das
xor
lods
sbb
mov
sub
ds
sub
push
xchg
push
push
call
adc
add
mov
cmc
test
xchg
out
mov
notl
aad
dec
add
xchg
push
or
sbb
gs
leave
jne
arpl
test
xlat
pop
lea
enter
pop
mov
jecxz
mov
mov
mov
sti
outsl
sub
xchg
mov
fs
popa
add
out
lds
addr16
or
fwait
data16
imul
add
test
pop
pushf
rorl
rorl
add
adc
aas
cld
adc
out
and
xor
xor
push
loop
loope
lock
fs
add
mov
add
int
leave
dec
inc
in
xchg
mov
into
mov
adc
pusha
icebp
out
add
pusha
or
adc
mov
pusha
mov
and
or
cmp
dec
aaa
inc
jmp
in
mov
lret
call
pop
push
test
pop
adc
test
jmp
cmp
shlb
dec
fsubl
aad
fcoms
cmp
fadds
push
xchg
ror
incl
in
aad
cltd
mov
pushf
lea
ja
lods
adc
add
rclb
ljmp
rol
pop
mov
out
adc
pop
test
movb
cmc
jge
fucomp
incl
repz
jmp
jp
rcl
push
inc
jbe
and
scas
mov
and
cmpsl
mov
mov
cmpsl
or
shlb
bound
jg
add
call
sbb
sbb
les
jg
mov
xchg
push
shr
mov
loope
fs
pop
push
dec
jo
sub
rcrb
push
add
jmp
mov
mov
or
or
insl
add
inc
and
or
outsb
cwtl
call
mov
rclb
push
jbe
add
add
rolb
pop
lds
mov
dec
ss
inc
add
in
cmp
cs
int3
testb
xor
subl
aam
in
jecxz
mov
int
aaa
rcrb
out
mov
test
xchg
call
loopne
add
cmp
dec
or
leave
adc
ret
sbb
inc
loopne
cs
sub
fldt
jp
xor
in
out
sbb
sbb
and
and
sbbl
or
loope
es
mov
sub
test
imul
jae
bound
push
fidivs
mov
test
pop
js
orl
push
sar
mov
lahf
in
inc
mov
stos
lods
cmp
mov
push
imul
std
sbb
loope
loop
sbb
not
rcl
fwait
int3
pop
cmp
lcall
rcrl
push
lods
into
or
negl
mov
hlt
test
test
add
cwtl
mov
out
push
lea
fistps
mov
mov
not
push
inc
xlat
rcl
inc
repnz
faddl
jbe
push
pushf
in
push
and
xor
call
push
fcoml
in
xchg
loopne
fisttpll
ret
lahf
lea
push
push
inc
fdivl
jl
xor
jbe
mov
rcll
or
push
adc
and
lea
test
pop
mov
fcoms
mov
push
shlb
ja
ljmp
pusha
cmp
sbb
pop
jmp
rorl
pop
aas
push
pop
lret
xchg
jl
inc
aad
mov
cmp
cld
mov
aas
sbb
inc
push
call
cli
mov
subb
fildl
sub
jmp
cmp
std
mov
mov
fcompl
adc
psubw
and
mov
push
and
add
adc
sub
mov
sub
dec
ret
faddl
loopne
mov
jge
or
test
xor
divb
sbb
sbb
lret
adc
and
rorb
xchg
popa
call
jo
testb
je
mov
mov
jmp
push
xor
inc
push
xchg
dec
add
mov
test
mov
inc
cli
int3
orb
or
mov
xor
push
push
or
mov
mov
in
imulb
jmp
push
pop
cmp
call
pop
adc
insl
movsb
aad
cmpsb
push
aad
daa
xorl
dec
fbld
mov
jg
or
enter
add
xor
push
add
fsub
mov
push
scas
pop
and
fldl
fmuls
adc
xchg
adc
int3
nop
sbb
and
js
mov
rcl
push
ss
xchg
inc
movsb
pop
jmp
fbld
aam
add
jae
fldl
cwtl
sbb
mov
clc
push
into
push
dec
sub
daa
les
mov
pop
cltd
add
movq
pushf
movsl
nop
mov
mov
or
adc
imul
mov
dec
das
dec
iret
inc
loop
lcall
or
imull
testl
js
dec
push
pop
dec
sub
loopne
jno
ss
push
ret
adc
sbb
and
shll
mov
mov
testb
lds
inc
incb
add
add
lods
into
rorl
inc
iret
stos
adc
stos
loope
pusha
push
divl
mov
incb
das
in
mov
adc
jecxz
popa
fdivrs
pusha
rorb
or
call
and
push
jne
roll
out
out
or
aam
mov
jecxz
call
jo
adc
sub
into
stos
cmpps
in
sbb
insb
sbb
jns
in
js
xor
jmp
call
les
pusha
push
push
scas
sbb
xchg
and
pop
test
sub
jo
stos
jl
or
push
test
sbb
mulb
jbe
fidivrs
push
je
pushf
ss
popa
xchg
call
add
bnd
out
ljmp
in
rcrb
loop
in
call
cmpsb
or
scas
out
mov
mov
sub
jmp
adc
inc
mov
mov
call
add
pop
cmp
push
push
push
stc
test
or
scas
test
mov
add
adc
pushf
mov
inc
bound
das
lods
mov
sub
faddl
xchg
roll
iret
jns
xchg
add
sar
insb
ja
mov
mov
mov
push
cltd
fists
jmp
in
test
nop
pushf
xor
adc
cmpsl
dec
not
test
fiaddl
push
mov
subb
aaa
test
xor
jmp
sti
xchg
fucomi
bswap
loopne
mov
add
mov
xlat
inc
mov
push
sti
divb
sub
test
mov
mov
in
push
lret
cld
das
or
mov
jne
fistpll
lock
rorl
push
push
jmp
adc
inc
mov
shrb
cld
out
push
push
add
sub
jmp
jle
mov
mov
xchg
cmp
xor
shlb
push
xor
pusha
nop
loopne
stos
stos
xchg
lock
push
nop
pusha
or
das
sbb
movsl
ds
inc
movsl
cmp
or
jo
cli
setae
jmp
mov
in
int3
insl
filds
pop
adc
mov
inc
dec
xchg
sbb
inc
and
loope
sub
outsb
stos
loope
jb
call
movsb
loope
je
cli
push
sbb
pop
shl
xlat
push
add
loope
mov
addb
jecxz
lods
add
inc
adc
or
sub
mov
jge
cmpb
mov
outsl
pop
xorb
call
inc
or
xor
adc
iret
cli
push
mov
xchg
pop
xchg
push
decl
aaa
push
push
call
out
lods
pop
sbb
jmp
add
shll
pushf
sbb
ja
mov
notb
out
fld1
fs
mov
adc
fisttps
xchg
hlt
adc
mov
dec
enter
pop
jo
imul
dec
arpl
in
fsub
mov
mov
ret
lahf
pop
mov
data16
pop
ret
incl
cmp
nop
lds
les
push
call
mov
adc
push
sub
aaa
fisubs
sar
mov
add
cwtl
sbb
sub
adc
xchg
stos
add
adcl
jmp
je
test
test
and
incl
adc
pop
xor
lock
icebp
lods
add
ret
xlat
push
sub
std
adc
les
mov
and
xor
pushf
mov
push
jge
adc
stc
mov
call
cmp
cmpb
in
pop
mov
sub
mov
sub
aaa
ds
mov
nop
popf
insb
ljmp
add
or
cld
cmc
movsb
sbb
cmp
push
push
mov
push
setns
not
adc
pop
add
adc
xor
mov
rorb
xor
push
bound
lahf
inc
les
call
pop
loope
cmp
ds
scas
repz
dec
adc
mov
das
call
push
pop
popa
dec
push
ffree
ljmp
sub
add
clc
mov
test
aam
add
ffree
std
ret
test
sub
outsb
mov
aaa
jbe
aas
test
inc
dec
shll
cmpsl
and
sbb
jmp
or
push
push
hlt
dec
popa
in
in
loopne
shrb
ss
call
xor
stc
pop
testl
fisubs
cmpsb
or
outsb
aam
std
enter
add
push
adc
mov
adc
push
push
loop
push
mov
dec
arpl
or
fsubp
sub
out
inc
pop
les
jns
inc
sub
inc
sub
add
xchg
sar
adc
mov
jle
jmp
fldenv
out
test
movsl
fcompl
mov
jmp
aam
cmpl
xchg
cmc
push
ss
arpl
imul
stc
pusha
push
xor
test
sbb
inc
mov
je
cmp
loop
clc
std
xchg
imul
add
xchg
mov
push
xchg
cmp
sarl
les
jno
fiaddl
seto
hlt
pusha
jle
jp
loop
add
and
loopne
mov
inc
mov
xor
or
rdpmc
or
addl
push
jmp
cmpl
imul
cs
mov
ss
push
outsb
jmp
sub
or
add
lcall
jae
push
jp
aad
dec
inc
cmp
pop
arpl
ja
mov
shr
xor
xchg
iret
mov
std
push
into
jnp
add
cli
sti
push
test
add
mov
mov
adc
jne
call
enter
loop
pop
push
pop
pop
nop
dec
fadds
cmpsl
push
lahf
jle
add
mov
mov
movsb
into
stos
jg
sub
push
push
or
xchg
push
adc
in
or
or
push
xchg
jle
loop
call
scas
imul
cld
pusha
not
jmp
loope
adc
push
popa
xchg
jle
or
test
mov
mov
xchg
loope
xor
inc
jge
push
jp
xlat
adc
inc
cmp
jbe
fucomp
imul
mov
mov
dec
inc
mov
aam
call
sub
and
sbb
jecxz
adc
cld
push
aam
insb
mov
xor
pop
popf
lcall
aas
sub
cmpsb
loopne
lea
xchg
fnstenv
dec
inc
mov
lcall
mov
call
push
lahf
in
repz
jge
stc
in
fmuls
nop
and
aam
push
roll
fisubrl
adc
test
dec
sbb
dec
cmp
incb
and
mov
out
cmpsl
rorl
in
ljmp
cmpb
dec
adc
inc
insl
orl
test
lcall
call
sub
dec
push
push
cmpsl
push
adcb
popf
add
fistpl
mov
dec
dec
insl
ljmp
mov
push
push
mov
add
dec
pop
aam
cmp
incl
xchg
mov
repz
push
cmpb
adc
jg
mov
ja
outsb
aaa
mov
ret
jge
dec
jge
jg
add
outsl
jge
imul
ja
lcall
in
out
lods
int
sub
rcrl
dec
dec
or
aam
pop
mov
mov
adc
test
xchg
in
popf
icebp
mov
call
add
add
add
cltd
jb
nop
mov
push
inc
mov
xchg
adc
lock
je
test
into
out
int
bound
cmp
mov
sub
fstpt
in
js
dec
jge
aam
pop
int3
insl
jmp
sub
out
jmp
int
mov
push
icebp
jbe
test
dec
enter
inc
data16
hlt
lds
iret
mov
addb
pushf
adc
inc
mov
decl
mov
ret
ja
mov
ret
sarl
incl
ja
out
iret
cmp
lds
leave
insl
fisttpl
daa
aam
pop
clc
jg
xor
xlat
and
test
ss
test
gs
dec
push
jle
add
lods
je
pop
and
daa
mov
jg
in
andb
inc
cmpsl
xchg
push
mov
ret
ja
out
outsl
and
or
cmp
mov
insl
add
push
push
das
mov
dec
or
dec
fildll
outsb
insl
pop
and
cmpsb
fcmovnb
rorl
adc
lods
add
popf
insl
push
sbb
xchg
test
and
add
out
or
adc
jb
sbb
xlat
mov
ljmp
mov
and
lds
mov
subl
pop
pop
iret
inc
pop
aas
sub
jge
mov
sub
jb
mov
aam
and
fisubl
adc
outsl
dec
not
or
sub
gs
xchg
cmpsb
mov
inc
lods
hlt
pop
and
cmc
add
mov
shl
xor
mov
mov
ret
jne
test
sar
clc
inc
repnz
insb
add
decb
cld
insl
pop
rorb
in
push
call
int
and
xchg
inc
testl
jle
add
hlt
inc
inc
add
hlt
incl
add
and
pushl
mov
xchg
popa
mov
push
ret
jle
mov
lret
cmp
movsl
sbb
stos
pop
or
cmpsb
mov
and
aam
push
add
aam
pop
pop
jmp
lods
xchg
icebp
adc
test
or
mov
mov
push
add
mov
push
jmp
pop
aad
add
jg
dec
imul
lock
icebp
addr16
lds
mov
pop
mov
jge
xchg
mov
test
scas
add
insl
in
es
cld
jg
jecxz
sahf
adc
ret
mov
insl
movsb
movsb
aas
jl
sbb
lods
lods
jb
jo
fisttps
jg
push
fisubrl
lods
xchg
mov
push
mov
fsubs
incl
inc
ret
cmc
add
es
sub
push
into
movsb
sbb
popf
push
lcall
pop
inc
jno
ret
imul
jecxz
add
push
adc
imul
sbb
jg
inc
sub
push
ret
xchg
xchg
pop
mov
sub
or
mov
das
cmp
sbb
std
incl
outsb
in
mov
inc
dec
aad
in
imul
orl
loope
call
lcall
jmp
push
cwtl
shr
lds
pusha
mov
clc
lds
pop
and
sar
adc
subb
in
push
inc
call
jg
mov
scas
xor
cmp
and
hlt
dec
push
xchg
nop
testl
fbstp
les
out
sub
push
lret
into
mov
rcrb
sbb
std
decl
call
sub
push
arpl
ficoms
pop
out
push
inc
mov
and
push
add
jg
adc
push
les
lods
pushf
sub
mov
call
into
movsl
sbb
pop
push
daa
aaa
push
mov
insb
or
mov
jg
cwtl
iret
add
ficoms
sub
sub
xchg
popf
lock
xchg
pop
cmp
cs
mov
pushf
mov
inc
sbb
mov
lods
bound
lahf
iret
inc
inc
aad
ffree
outsl
inc
rcrb
loop
mov
jns
stc
out
icebp
lea
mov
test
xchg
xchg
jg
inc
xchg
adc
pusha
pop
adc
inc
decl
hlt
push
push
ret
loop
push
cmp
shlb
sbb
call
jle
dec
mov
inc
adc
inc
or
outsl
mov
mov
insb
xor
pop
pop
int
xchg
fildl
push
rcrb
jg
sbb
and
das
push
push
arpl
leave
adc
push
adcl
aaa
xchg
loopne
xor
xchg
test
fistpl
push
jae
in
xchg
jns
cltd
jbe
and
ljmp
pop
sbb
jmp
xchg
pop
mov
adc
jbe
mov
bts
stc
mov
subb
lods
into
adc
mov
int3
sub
jmp
cmpsl
xchg
lcall
lea
lahf
lret
push
adc
inc
aaa
ja
dec
mov
cbtw
jecxz
push
pop
gs
inc
mov
jnp
fimuls
stc
nop
repz
mov
pop
fadds
xor
jmp
das
jg
arpl
xchg
out
leave
repz
push
fprem
xchg
or
adc
pop
dec
ljmp
mov
jae
cwtl
jmp
mov
fwait
sub
mov
daa
subl
pop
xchg
in
repnz
jae
dec
or
inc
dec
in
aaa
and
mov
mov
fdiv
pop
arpl
lret
and
adc
das
sbbl
addr16
out
je
add
fdivs
ret
in
dec
fcomip
cmp
and
addb
in
push
out
mov
fistpll
mov
push
jnp
fisubl
xchg
mov
adc
outsl
lock
add
inc
inc
jb
xchg
inc
pop
les
adc
pop
hlt
in
stos
lahf
adc
lcall
fiadds
adc
ja
fistl
call
adc
dec
lods
femms
in
jmp
dec
inc
aad
cltd
add
pop
jp
push
dec
xor
jns
lock
dec
sbb
out
and
inc
adc
push
filds
inc
fucom
push
push
mov
shrb
mov
mov
mov
xchg
adc
dec
sbb
and
jecxz
fidivrl
out
and
mov
add
xchg
loopne
push
ja
pop
pop
es
aas
das
jl
arpl
out
inc
call
ds
pushl
mov
mov
add
and
sahf
xor
mov
je
test
jb
add
in
sub
push
rcrl
into
jno
shll
or
mov
and
inc
ljmp
or
ror
inc
xor
cmp
mov
adc
mov
out
stos
daa
sbb
dec
scas
daa
jle
dec
xor
pop
out
dec
aad
cwtl
cmc
arpl
ja
xchg
mov
out
sub
test
lock
inc
loope
movsb
cs
mov
mov
push
roll
incl
mov
lret
sti
out
fxch
xchg
leave
lds
mov
out
cli
fbstp
jecxz
icebp
sub
cwtl
cltd
sub
jle
mov
decl
int3
mov
out
das
or
cwtl
adc
dec
sbb
mov
std
pop
lret
adc
outsb
popf
pop
inc
push
arpl
adc
dec
sub
mov
into
push
jae
je
cmp
add
mov
sub
cmp
call
inc
inc
nop
inc
and
or
lods
sbb
mov
mov
inc
aaa
jbe
hlt
shlb
insb
pop
stos
scas
jle
and
adc
jg
outsb
daa
hlt
outsl
std
ljmp
fmul
sub
leave
pop
subl
rcll
inc
inc
int
fisubrl
das
cld
out
fwait
ja
adc
inc
cmpsl
repz
imul
rcrb
jo
call
insb
sar
pop
clc
or
shl
mov
arpl
push
movsb
test
mull
xorl
scas
and
das
and
out
pop
push
jecxz
jg
pushl
pop
shr
sahf
lret
out
cmc
push
xor
jl
mov
fcmovne
inc
repnz
adc
decl
mov
mov
jae
xchg
inc
sahf
ss
or
addl
pinsrw
sub
pop
sbb
dec
jge
ret
and
push
arpl
int3
adc
loop
pop
incl
push
aaa
repz
pop
daa
shrl
pop
imul
ret
xor
xchg
ljmp
dec
jb
add
mov
mov
ja
push
adc
jno
ret
insb
or
int
jbe
adc
cmp
push
and
jmp
test
out
in
cmpsb
xchg
xchg
call
mov
cld
mov
fildll
ja
pop
jl
dec
scas
jbe
stc
xor
lret
outsl
jge
decl
aad
addb
fmull
call
cld
ljmp
mov
testb
xor
jg
fldt
arpl
aam
cltd
iret
clc
dec
in
pop
aaa
mov
mov
xor
idiv
out
test
xchg
dec
mov
pop
std
decl
push
xchg
insl
inc
repnz
and
pop
and
cld
jnp
les
xchg
rcll
sbb
pop
cmpsl
and
dec
sub
xor
xor
ljmp
sbb
cmc
loop
inc
and
push
push
ret
xchg
jbe
in
jmp
jmp
leave
jb
adc
int
jecxz
popf
outsl
shrl
das
cmc
test
adc
test
pop
mov
packssdw
ret
jecxz
add
inc
jle
mov
int
xchg
cltd
or
mov
xor
adc
mov
mov
cmp
dec
jge
fbld
sbbb
hlt
fimuls
or
bound
fbstp
dec
ja
adc
filds
xchg
fsubs
add
dec
hlt
cmp
ror
popf
rol
jmp
pop
test
popf
and
pop
mov
mov
pop
cs
dec
adc
dec
cmp
cmova
mov
inc
jmp
mov
out
and
push
rcll
mov
lahf
mov
mov
pop
push
lret
imul
lahf
in
ja
mov
cmpl
xor
repnz
cld
out
loopne
xor
adc
scas
sbbb
add
scas
stc
ljmp
mov
add
in
insb
and
jp
cmp
jg
xchg
mov
sub
xchg
add
mov
cmp
cmc
filds
popf
call
and
pop
das
mov
lcall
adc
dec
scas
jl
in
leave
cmp
dec
inc
pop
cmp
pusha
inc
and
inc
sub
loop
icebp
movsl
mov
out
jne
int
addr16
sbb
mov
inc
xlat
repnz
or
incb
lret
imul
push
aas
mov
outsl
in
imul
mov
dec
incb
int
mov
jge
aaa
adc
pop
or
daa
rsqrtps
pop
jae
fwait
pop
outsl
pop
clc
mov
sbb
dec
adc
das
push
jns
arpl
adc
ljmp
enter
xchg
dec
das
loop
push
xor
andl
mov
movsl
push
das
xor
xor
adcl
and
sbb
das
lock
sti
stos
je
fcoml
dec
call
outsl
jno
mov
in
sbb
testb
mov
shlb
lret
iret
mov
mov
inc
mov
cmp
pop
adc
mov
popl
sbb
add
and
pop
or
aad
daa
add
sarl
jmp
adc
mov
inc
frstor
dec
addb
jle
lcall
cwtl
xchg
out
push
xor
loop
lret
orb
lds
and
mov
dec
mov
clc
mov
and
push
iret
popl
cld
imul
mov
cwtl
adc
js
inc
loope
adc
adc
sub
adc
ljmp
loop
mov
xor
xor
je
xorl
mov
xor
inc
pop
out
out
xor
inc
mov
xor
xor
xor
xor
xor
dec
xor
xor
jnp
das
add
or
xor
ss
add
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
cmp
cwtl
cmp
add
incb
cmp
cmp
cmp
ss
ds
ds
ds
aas
and
sub
mov
mov
aas
mov
fistl
dec
xor
fnsave
jecxz
lock
sbb
jns
mov
xor
xor
xor
xor
xor
ljmp
inc
add
arpl
lds
aaa
mov
lahf
cmp
cmp
cmp
movsl
mov
in
cmp
cmp
test
out
cli
cmp
push
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
or
cmpl
cmp
cmp
movsl
insl
xchg
cmp
pop
ds
and
daa
sub
bound
loopne
sti
lods
xor
add
xor
xor
test
mov
xchg
xor
xor
xor
xor
xor
mov
xor
xor
xor
lret
dec
xor
xor
xor
xor
xor
xor
push
xor
ja
jge
mov
xor
xor
out
xor
dec
xor
pushl
xchg
xor
xor
xor
xor
cmpsl
xor
xor
divb
sarb
cmp
ljmp
test
inc
cmp
jo
pushf
cmp
imul
cmp
loop
ljmp
ljmp
cmp
cmp
ds
ds
ds
sarl
pop
aas
dec
aas
test
ss
xorl
dec
xor
cld
adc
pop
cmpsl
xor
test
pushl
sub
jb
pushl
mull
xor
xor
xor
xor
xor
xor
sbb
addl
jmp
cmp
mov
cmpsl
cmp
adc
ds
ds
aas
shlb
mov
push
or
mov
sbb
mov
jmp
sub
fldt
cmp
xor
ss
ss
add
sub
inc
cmp
fistpll
mov
cmp
cmp
xlat
cmp
cmp
mov
or
stos
cmp
adc
ds
ds
aam
loop
adc
xor
push
aas
jb
jnp
aam
ja
xor
xchg
pop
xor
jnp
outsl
xor
shlb
xlat
xor
mov
xor
xor
cld
ss
aaa
lcall
jns
lods
cmp
mov
cmp
imul
cmp
cmp
imul
pop
aas
aaa
cmp
rorl
popa
aaa
aas
mov
mov
test
dec
xor
xchg
xor
xor
xchg
cli
pushl
xorb
mov
xor
mov
decl
insl
xor
test
and
cmp
jae
xorl
ss
push
aaa
xor
cmp
push
aaa
loopne
lock
call
test
dec
cmp
jle
mov
mov
cmp
cmp
cmp
inc
ja
lret
cmpl
push
cmp
xchg
cmp
cmp
cmp
cmp
nop
ds
test
je
xor
xor
pop
cmp
xor
push
xor
insl
xor
fdivr
outsl
clc
mov
shlb
jecxz
out
aaa
xchg
cmp
cmp
cmp
cmp
cmp
lcall
add
push
cmp
cmp
cmp
fbld
cli
adc
cmp
arpl
cmp
push
call
dec
aad
pop
pop
sarb
ds
mov
lods
ds
nop
inc
mov
pop
mov
out
mov
or
xor
jle
mov
xor
pop
inc
inc
xchg
xor
xor
xor
push
xor
call
xor
js
jle
test
les
pushl
shlb
loop
call
push
ss
adc
incl
into
mov
mov
imul
ss
loop
hlt
pushl
lret
ss
fdivl
loop
call
stc
or
jl
pop
cmpsl
aaa
sbb
and
sub
aaa
push
shll
cli
fwait
pop
sti
insb
aaa
jns
jg
aaa
xchg
aaa
sahf
aaa
movsb
xchg
mov
pop
ret
mov
aaa
lret
aaa
loop
xchg
call
aaa
cli
aaa
add
push
cmp
adc
sbb
push
cmp
popa
cmp
jo
inc
cld
cmpsl
cmp
push
out
outsl
clc
fildll
pop
xor
pop
xorb
xor
xor
call
mov
int3
xor
xor
sbb
xor
sbb
xor
mov
hlt
or
xor
cld
xor
mov
enter
andb
adc
insl
out
xor
xor
cvttps2pi
dec
xor
lock
xor
divb
pop
dec
xor
aaa
fcmovnb
pushl
pop
xor
xor
xor
xor
jo
xor
jmp
xor
xor
imul
add
dec
das
mov
stos
xor
fistpll
jbe
or
push
negl
cmp
icebp
cmp
jne
pop
rol
cmpsb
add
cmp
cmp
cmp
cmp
lock
cmp
cmp
cmp
cltd
lea
int3
movl
ja
xor
in
mov
xlat
pushl
lea
cmpsb
xor
xor
xor
shlb
call
push
xor
cmc
push
loope
xor
add
xchg
jmp
clc
jg
aaa
jne
mov
cmp
jns
adc
scas
cmp
cmp
inc
sbb
cmp
test
imul
stos
adc
xchg
ds
sbb
leave
aas
fadd
ja
ljmp
cwtl
xor
xor
cld
sbb
fidivs
cli
xor
xchg
cmpsl
movsl
out
jp
ss
aaa
jmp
cmp
clc
cmp
aaa
mov
std
cmp
add
sbb
and
hlt
lcall
fcos
push
ja
push
insb
cmpsb
jb
les
sbb
cmc
xor
pop
enter
cmp
outsl
add
call
mov
mov
adc
rorl
xacquire
mov
or
rclb
mov
fcomps
mov
cmc
sbb
cmp
fucomip
jmp
add
push
cwtl
and
mov
call
test
shl
dec
in
aas
scas
sahf
pmaxub
jmp
mov
jo
cmpsl
loopne
or
inc
inc
repnz
jg
add
lea
pop
sahf
scas
mov
ret
xor
adc
inc
test
nop
leave
xchg
fildll
mov
jg
pop
add
inc
js
inc
ss
mov
ljmp
lods
ljmp
cmpsb
lret
mov
sub
mov
mov
add
mov
add
jl
sub
lock
daa
call
leave
call
call
inc
je
sub
roll
rolb
call
cld
sets
or
add
add
or
dec
xor
les
mov
and
mov
or
pushf
inc
xchg
ss
scas
jnp
push
push
jmp
leave
call
sti
dec
inc
or
mov
or
mov
inc
mov
and
add
push
dec
add
push
add
sbb
shrl
sbb
xor
cmp
sbb
adc
jg
cmp
push
pushf
icebp
sete
mov
mov
mov
jmp
and
ljmp
or
aas
test
imull
insl
jo
mov
push
push
daa
iret
push
adc
sbbb
and
jle
or
movsl
ret
dec
jl
out
xchg
jg
dec
lret
pop
addr16
jmp
and
ret
punpckldq
push
popa
cld
mov
adc
mov
sbb
sarb
adc
cli
push
inc
push
test
mov
add
stc
jmp
sub
cmpl
mov
adc
pop
sbb
out
adc
loop
sbb
ljmp
cltd
les
mov
std
push
call
out
mov
sbb
xchg
push
out
xor
dec
jmp
js
in
in
rclb
cmp
or
andb
frstor
jno
testb
test
test
or
sbb
sub
xchg
adc
sub
dec
test
loopne
popf
sbb
mov
dec
push
mov
icebp
lahf
popa
ret
mov
pop
add
shll
or
sbb
call
adc
sub
call
mov
fucom
mov
sarl
out
loop
sub
jmp
shll
inc
mov
pop
imul
lcall
cmp
push
or
or
mov
aas
xchg
or
inc
rcrl
xor
je
xor
dec
jmp
loop
aam
xchg
sbb
sub
js
pushf
and
cwtl
cmc
sub
add
mov
bound
push
push
scas
add
pop
ljmp
inc
loope
pop
mov
ret
dec
stos
add
fsubr
in
aaa
inc
aad
in
sub
call
addr16
sbb
push
shlb
pusha
shr
cmc
inc
mov
add
ret
adc
test
jnp
dec
pusha
cld
mov
jecxz
dec
push
cmc
loop
xchg
lea
jge
cmp
push
cmp
enter
mov
or
add
mov
mov
call
push
mov
loopne
adc
jae
sub
xchg
jmp
imul
cmp
xchg
out
adc
push
sub
xchg
call
in
xchg
xorl
xchg
icebp
ja
cmp
jmp
popa
dec
shll
aaa
xchg
sarl
dec
fsubs
fidivs
insb
sub
mov
fldcw
push
jmp
ss
aam
push
data16
stc
sub
popa
cmp
push
dec
sarl
ret
inc
pushf
push
push
xchg
xor
and
mov
nop
jmp
mov
mov
cld
or
pop
or
jmp
jle
jae
xchg
xor
sbb
pop
lcall
hlt
sbb
testl
je
pop
inc
ret
dec
inc
jmp
add
rcrb
ret
push
add
adcb
add
cli
pop
or
push
dec
dec
add
rolb
mov
mov
push
adc
mov
cmpsb
or
push
sti
mov
shlb
loop
andb
sub
xchg
sbb
clc
push
jl
fsubrp
andl
ds
pop
xor
push
sub
xor
cli
lret
shll
xchg
inc
add
mov
pop
andl
sbb
lcall
lock
pop
daa
and
aaa
dec
test
scas
inc
mov
or
push
push
jmp
inc
jb
push
mov
ret
fists
fisubl
adc
mov
xchg
add
rorl
pop
ret
sarl
jmp
icebp
push
adc
dec
or
inc
xor
jno
in
push
xchg
mov
dec
call
pop
inc
rorb
hlt
cmp
mov
inc
push
adc
nop
xchg
mov
int3
js
cltd
or
jmp
cmc
les
mov
mov
fdivr
jl
notb
pop
adc
pusha
adc
popw
push
pop
insb
pushf
clc
xchg
addb
pop
paddd
sar
mov
cld
jne
inc
cld
push
and
jbe
rcll
shlb
add
sub
outsb
mov
xchg
jg
jp
inc
push
aaa
xor
incl
adc
loope
aad
popf
push
call
mov
ljmp
push
cmp
int
insb
and
or
outsb
es
fildl
rolb
les
adc
mov
sbb
call
cmp
shlb
inc
dec
pusha
or
sahf
mov
xor
mov
sub
xor
clc
fisttpll
adcb
dec
push
cmp
or
add
adc
pushl
push
bound
ret
inc
add
pop
pop
dec
adc
addb
outsb
xor
add
adcb
sarl
xchg
adc
pop
dec
aam
sbb
movsl
and
push
call
inc
jmp
jmp
pusha
xor
ret
and
jae
adc
inc
cmp
pop
push
les
sub
rcrb
cmp
cmp
add
mov
ror
pop
pop
orb
dec
sbb
xor
loope
scas
rolb
push
pop
inc
cmp
push
insb
fsubs
mov
pusha
sub
fiadds
lcall
add
sbb
lds
cmp
jbe
sub
pop
jne
xlat
mov
jmp
inc
mov
call
sub
bswap
add
xor
lea
inc
inc
inc
xor
rorl
and
fdivl
add
cmp
fwait
xor
add
mov
jg
stos
push
mov
sbb
sub
cs
push
push
mov
js
shll
les
push
shll
xchg
add
add
and
das
push
add
pusha
cmp
pop
jbe
add
sbb
test
or
jmp
pop
loopne
jl
or
ret
lcall
mov
out
sbb
mov
ret
jmp
je
or
in
jge
enter
rorb
lcall
nop
push
push
popf
rol
fcompl
subb
movsl
mov
out
js
fimull
cmpsb
daa
mov
xchg
fldenv
mov
mov
sbb
pop
inc
adc
ds
push
mov
inc
inc
pop
mov
and
mov
call
rorb
movsb
xor
test
or
pusha
mov
test
xchg
mov
cmp
jae
stc
testl
mov
je
js
fsubrs
cmp
cmp
mov
cmp
hlt
js
jg
cli
cmp
icebp
inc
dec
out
xlat
rcrl
movsb
call
cmp
shll
std
cs
sbb
leave
or
xor
mov
mov
push
icebp
jns
loopne
xor
and
ret
push
jbe
or
push
jl
stos
stos
pop
repnz
sbb
xor
jl
or
pop
iret
popf
lds
jmp
fcomi
in
cmc
test
iret
push
call
add
mov
or
out
or
mov
sub
add
sub
clc
push
scas
sub
scas
add
xchg
push
ficomps
xchg
out
seto
test
test
movsl
and
pop
mov
mov
pusha
adc
mov
mov
adc
pop
sub
jmp
dec
push
jnp
stc
dec
clc
add
shlb
test
cmp
fs
pusha
aam
push
jge
ret
test
add
ds
push
push
aam
cmp
pop
jo
and
and
addb
push
and
sub
dec
adc
arpl
test
movsl
jg
sub
lar
add
loopne
xlat
lods
sub
add
xor
mov
push
loope
repz
std
data16
ror
shrl
pop
cmp
pop
pop
mov
rorb
add
sahf
mov
or
mov
stc
mov
addl
nop
push
sbb
cwtl
inc
loop
test
jns
fndisi(8087
jne
pop
or
or
enter
jb
repz
lcall
call
add
lds
adc
add
movsb
or
and
incl
pushf
dec
scas
add
mov
push
add
inc
mov
sub
aas
cmp
pop
adc
movsl
inc
mov
bound
inc
jnp
jl
arpl
mov
jae
inc
mov
rcll
mov
lea
setg
push
sub
out
push
xor
mov
xlat
sbb
jo
dec
xor
mov
and
cmp
insl
mov
jl
scas
jnp
jg
cmp
filds
jp
add
lock
es
push
fwait
jnp
pop
add
lahf
push
into
sub
daa
icebp
dec
mov
push
aad
and
fidivl
xor
jg
sbb
pop
out
pop
adc
je
mov
and
pop
inc
jg
and
push
push
jmp
cmp
mov
jo,pt
mov
push
lock
push
in
cmp
les
push
cmp
fwait
xchg
rcr
call
data16
add
jno,pn
push
xor
shrb
pop
push
aaa
push
jo
adcb
jo
pop
mov
jmp
adc
xchg
shl
mov
lea
sbb
adcl
jmp
mov
addl
sub
push
cmp
or
aas
pushf
cmpsl
mov
push
pop
fdivs
jmp
push
imul
inc
cmp
pop
add
sarl
aam
rorb
jne
popf
push
xor
mov
jmp
loopne
clc
push
mov
roll
sub
test
roll
and
clc
hlt
xor
pusha
ret
add
stc
pusha
mov
dec
add
adc
hlt
enter
mov
mov
add
push
add
fidivrs
inc
fucom
dec
lret
and
addr16
call
cli
not
lahf
setge
movsb
add
and
add
mov
fistl
add
in
divb
push
add
jo
mov
mov
xchg
jp
mov
pop
pushf
adc
andl
leave
cld
xchg
cmp
pusha
nop
jbe
icebp
pop
pop
push
leave
lahf
dec
push
in
mov
pushf
and
std
loop
inc
inc
cld
push
sbb
mov
mov
or
sub
ss
clc
xchg
xor
call
push
daa
fistps
ret
filds
and
push
sub
je
add
pop
mov
inc
xor
shrb
xor
add
ret
aaa
jne
add
in
push
and
sub
js
hlt
push
add
and
sub
inc
nop
jle
dec
in
push
je
lahf
xor
bound
in
pushf
add
arpl
pusha
push
add
in
lds
pushf
pushf
lds
push
pop
inc
mov
sti
jno
pop
es
mov
call
and
cmp
cmpsl
in
or
sahf
shlb
out
cmc
push
dec
cld
mov
inc
hlt
xor
jb
out
or
clc
mov
push
mov
adc
mov
or
in
mov
lcall
in
clc
add
fistps
mov
inc
mov
xlat
sbb
mov
pop
mov
push
aad
and
push
mov
adc
pop
xor
mov
shrb
pop
aam
pushf
mov
adc
sub
hlt
das
dec
or
pop
push
mov
mulb
cld
shr
sahf
pop
pop
push
pushf
xor
shlb
xor
push
push
cmp
xchg
test
or
insb
xchg
jo
cmp
mov
push
mov
mov
fisubl
and
xor
lret
rcr
adc
ret
decb
scas
je
jmp
ret
cmp
xor
xlat
add
lock
lret
lea
add
push
push
pop
mov
fdivs
sbb
cmpl
push
roll
popa
pop
test
add
les
mov
fidivl
add
push
and
push
mov
iret
sub
aam
and
dec
add
out
cwtl
fnstenv
inc
lods
mov
pop
sub
fisubs
shl
xlat
mov
mov
les
shlb
inc
sarb
or
scas
sbb
lds
aaa
add
xor
ret
pop
daa
push
sub
xor
hlt
sub
stos
inc
add
sti
mov
in
fsubs
push
push
inc
push
pop
inc
out
fldl
mov
cmp
push
orl
dec
xchg
adc
or
sbb
xor
mov
popa
mov
lods
push
or
jb
test
sbb
fwait
or
push
add
mov
sarl
call
sbb
pop
iret
loopne
test
adcb
adc
add
jp
push
lock
add
jl
pushf
pop
push
sub
fisttpll
or
fldl
sub
jne
add
rol
sarb
adc
shrl
movhlps
mov
in
mov
xchg
loope
sbbb
es
lods
jno
leave
push
fldl
fsubrs
xchg
mov
jb
xor
or
mov
jo
cs
adc
ret
adc
call
sub
in
xchg
adc
jg
pop
stc
inc
and
cmc
mov
pusha
or
sbb
sbb
inc
sub
loope
adc
iret
ss
and
fmuls
pusha
push
push
lods
scas
fdivs
push
mov
call
push
and
lret
jge
mov
sbb
lcall
lods
mov
xchg
pop
push
xchg
repz
mov
xchg
push
cmp
xor
aam
sbb
cmc
jmp
popa
push
clc
sbb
mov
sbb
add
fnstsw
ss
and
cmp
aam
adc
pop
cmp
lahf
gs
push
push
aas
or
or
or
pop
test
sbb
test
and
pop
jne
test
or
sbb
mov
sbb
mov
push
popa
or
xorl
mov
mov
pusha
and
out
xor
data16
lea
call
pop
out
sbb
inc
mov
aad
int
fcmovne
inc
out
mov
adc
mov
jmp
cmp
and
ja
xchg
lahf
jmp
fsubrs
jbe
or
xchg
mov
xchg
andb
bound
push
adcl
movsl
dec
jmp
dec
mov
sbb
add
movsl
sub
and
enter
stos
mov
ret
push
jmp
mov
enter
ljmp
jmp
movsb
inc
aas
js
shl
adc
or
call
lahf
cli
psubb
inc
cmp
fwait
pushf
ficomps
mov
loope
rcrl
xor
test
mov
add
call
sub
inc
inc
sti
push
daa
mov
pusha
inc
add
cmp
test
mov
pop
mov
jp
push
mov
inc
das
ret
je
mov
test
adc
pop
push
cs
add
pop
xchg
test
pop
icebp
jg
or
push
mov
scas
jmp
ret
and
call
dec
dec
js
xor
add
addb
sbb
loopne
orb
mov
and
mov
dec
lods
sbb
or
xor
mov
aad
ljmp
mov
push
add
inc
push
push
mov
ret
sahf
xlat
cmp
push
lds
gs
ror
jp
inc
adc
mov
rcrb
pushf
gs
adc
dec
mov
jl
sti
and
lock
add
fisubs
pop
pop
mov
or
xor
add
push
add
aad
jmp
rorb
ret
dec
aas
lock
pusha
push
jnp
pop
popf
call
das
push
mov
inc
popa
insb
mov
addr16
dec
les
add
pop
push
pop
insl
rorl
call
push
es
cltd
add
fmuls
add
stos
xor
insl
xchg
cmpl
andb
pop
dec
inc
addl
pop
rclb
cmp
pushf
arpl
and
cmp
pop
jp
imulb
sbb
cld
mov
and
inc
icebp
xchg
jl
loop
jnp
mov
add
out
xchg
mov
mov
pop
jl
popa
mov
cmp
sti
xor
and
call
push
movntps
cltd
jmp
push
add
inc
clc
ds
fnstsw
dec
mov
call
inc
jae
push
or
cmp
add
sbbl
testl
sbb
sahf
stc
inc
mov
push
lock
cmp
xchg
adcl
pop
cmp
jl
rolb
call
push
pop
stc
jg
push
call
sbb
adc
push
out
mov
jmp
mov
or
ret
sbb
pop
xchg
lds
jg
xor
xor
push
scas
mov
mov
dec
mov
lahf
add
call
loope
push
or
sbb
mov
inc
daa
dec
push
or
mov
xchg
mov
test
sub
or
pop
imull
mov
mov
mov
xchg
ds
push
.byte
ja
push
mov
push
push
add
mov
mov
pop
sub
push
push
mov
mov
mov
add
fstpt
ja
mov
mov
xor
lea
stos
stos
mov
in
or
inc
testl
test
data16
fucomp
adc
add
lea
jl
in
aas
fsubrs
psubsb
add
ret
pop
pop
inc
sub
pushl
fdivrl
push
push
mov
add
inc
or
fmuls
or
jne
push
mov
sbb
inc
sbb
mov
push
aaa
push
mov
das
adc
mov
pushl
sahf
mov
jmp
push
pop
ret
mov
push
out
sbb
mov
and
pop
pop
pop
leave
ret
inc
sbb
in
int
test
jne
or
pop
and
mov
das
inc
mov
or
mov
imul
jne
or
add
std
out
ja
nop
push
sbb
or
mulb
outsl
jmp
cmp
push
push
push
inc
push
adc
cwtl
xor
add
jnp
or
fsubs
adc
je
or
jmp
adc
inc
and
push
cltd
je
mov
incl
push
push
xor
mov
test
je
mov
sub
mov
inc
inc
test
mov
jne
xorb
fildl
push
or
mov
movzbl
inc
cmp
jl
add
jg
add
adc
inc
in
out
ds
cmp
shll
add
shll
inc
imul
insb
rcll
cs
push
or
insl
outsl
mov
adcb
mov
cmp
pand
mov
or
add
sub
in
lds
push
push
sbbb
gs
push
insl
mov
repnz
orl
mov
xchg
xchg
mov
push
push
addr16
inc
mov
cmpl
test
adc
mov
add
add
sti
mov
insl
nop
inc
sub
or
fnstsw
pop
sub
dec
inc
push
add
outsl
outsb
arpl
add
add
aam
mov
cmpb
imull
add
lea
pop
lock
push
add
cs
cld
test
pop
je
mov
sub
fdiv
orl
pop
fcomps
adc
pop
cmp
jl
push
jnp
mov
xchg
shl
inc
in
negb
pop
sti
jbe
push
inc
imul
mov
jecxz
in
push
push
lahf
imul
adc
insb
push
xchg
lock
mov
pop
jns
lea
pop
mov
inc
jbe
in
mov
jnp
or
sarl
push
push
or
sbb
test
loope
stos
mov
lret
inc
sbb
int3
mov
jb
pop
jo
mov
jmp
sub
push
in
add
lock
lcall
es
lret
movb
mov
add
or
gs
jb
outsb
mov
or
insb
add
xor
xor
jb
in
in
out
out
int3
dec
mov
outsl
into
popa
iret
pop
rorb
shrl
scas
pop
outsb
add
inc
aam
aad
jns
mov
outsb
add
inc
mov
adc
je
jbe
shll
dec
ret
in
mov
pop
lds
sbb
jnp
arpl
push
mov
mov
push
mov
test
sub
lea
jge
or
push
decl
jne
mov
sub
or
sbb
jecxz
inc
inc
jns
ret
loope
cmp
lock
cld
cld
subl
shr
dec
mov
mov
jns
and
xor
sbb
aaa
les
add
xchg
push
sbb
inc
add
mov
int
cmp
or
mov
inc
dec
jne
mov
popa
je
push
xlat
lea
dec
dec
or
mov
xchg
xchg
xchg
clc
les
dec
xor
movsb
or
add
jne
dec
push
mov
push
jbe
rorb
out
pop
clc
or
inc
fdivrl
jne
push
mov
in
jmp
xor
cmp
cmp
sub
je
sbb
add
jg
inc
rcr
fiadds
or
mov
fmull
jo
rol
sbbl
push
mov
cmpsb
sbb
xorl
add
je
or
sub
ljmp
inc
aaa
add
jl
lea
shl
mov
inc
add
cltd
dec
cmp
push
inc
xchg
mov
dec
mov
aam
fdecstp
clc
xor
add
clc
lods
aaa
cmp
or
lea
adc
add
nop
xchg
in
xchg
sub
cmc
pop
add
ja
push
imul
fs
jno
out
imul
fcomp
jmp
cmovno
push
insb
sbb
jne
inc
cmpsl
xchg
subl
shlb
pop
jb,pt
leave
inc
shl
jbe
je
lods
mov
scas
shr
out
and
xor
in
in
lock
dec
jb
jbe
cmp
aad
enter
sub
jl
add
mov
enter
mov
xchg
jns
std
int
into
add
pop
push
iret
jns
or
adc
jne
xor
not
popa
adc
add
push
push
mov
cmp
jne
jne
rcrl
ret
inc
les
xlat
xor
pop
lds
jns
lods
lods
pop
jne
sbb
aas
mov
mov
mov
jne
xlat
dec
mov
mov
mov
mov
mov
mov
jns
shl
jp
sub
pop
mov
adc
cli
add
stos
adc
movb
jb
mov
lea
sbb
dec
push
add
mov
cmc
mov
mov
nop
imul
adcb
jge
outsl
loopne
inc
xchg
mov
pop
add
test
call
or
sahf
push
add
roll
sbb
push
jne
lahf
sub
cld
jmp
rol
stc
pop
neg
xor
push
not
pusha
bswap
call
xor
jnp
test
jmp
push
jmp
xchg
mov
fstpt
jg
aam
jmp
mov
push
call
mov
negl
xor
jo
mov
xor
fistpl
jl
std
pop
sti
jbe
sbb
dec
mov
or
jmp
fbld
pushf
pushf
push
mov
jae
inc
add
call
sti
outsl
sbb
add
cmp
jmp
cltd
add
lods
xor
add
cmp
or
push
xchg
test
push
jmp
mov
push
je
dec
shrl
inc
gs
lods
gs
jo
sub
jno
pop
jmp
add
popa
in
pop
out
cmp
inc
mov
push
hlt
in
mov
jmp
scas
jmp
testl
psubq
daa
rol
mov
gs
clc
xor
insl
or
mov
adcb
not
adc
lds
sub
pop
fdivl
adc
adc
adc
adc
ja
sub
adc
and
scas
les
dec
push
loop
dec
push
jp
data16
test
add
dec
jecxz
movsb
fidivrs
mov
xchg
add
or
test
scas
adc
fadds
adc
je
inc
stos
xlat
inc
ficoml
sbb
lods
push
subb
xchg
aam
call
sbb
in
and
pop
adcb
jbe
add
xorl
pop
stos
daa
rclb
insl
ret
or
cmp
push
fisttpl
mov
divb
adc
mov
ljmp
movsl
movsl
sbb
inc
clc
movsw
movsb
push
inc
pop
ljmp
daa
cs
aaa
jbe
cmp
popa
mov
cmpsl
por
adc
and
xchg
push
das
inc
mov
mov
pop
and
mov
xor
xchg
jne
cmp
cli
push
ficoml
pop
or
xchg
push
mov
std
loop
les
das
adc
lea
or
mov
ret
add
xor
fdivrp
sarb
jnp
xchg
cmp
jle
add
jl
mov
pop
pop
popa
jle
jp
add
pop
jl
cmp
rcrl
pop
pop
adc
jnp
push
loopne
inc
fistpl
lret
cli
adc
movsb
std
cmp
cmp
sbb
movsl
xchg
stc
adc
pushf
nop
iret
xchg
stc
test
test
nop
iret
or
cld
cmp
mov
mov
mov
leave
pop
pop
adc
cwtl
inc
pop
fdivs
nop
xor
lea
lods
push
adc
jp
cmpsb
mov
insb
lcall
popa
arpl
mov
in
cmc
inc
in
jae
xorb
push
push
cmp
pusha
or
xchg
stc
daa
inc
lods
movnti
add
jnp
test
and
out
or
js
or
add
mov
ja
fwait
aad
jno
push
aas
pushf
sti
ljmp
push
mov
and
in
mov
inc
add
call
in
or
inc
or
rcr
or
bound
bnd
mov
or
inc
divb
scas
mov
fwait
cli
adc
lcall
xor
loope
pop
loope
enter
xlat
pop
leave
bswap
or
push
fmuls
fsts
fdivl
loopne
xor
and
inc
jo
inc
inc
imul
pop
cmp
data16
js
push
rolb
repnz
ret
lods
lcall
ret
sbb
rorl
aam
aad
insb
or
xlat
mov
lods
mov
dec
test
jnp
sub
add
test
testl
push
je
lahf
jmp
shr
xchg
mov
out
adc
cmp
adc
cs
je
add
jne
lcall
or
xlat
pusha
notl
sbb
sbb
imul
test
adcb
push
in
clc
mov
adc
incl
push
mov
icebp
int
pop
imul
adc
popf
mov
pop
fildll
dec
pop
test
sbb
imul
pop
mov
dec
test
bound
adc
aad
cs
lock
je
jmp
cmp
or
cmp
and
shr
in
xchg
xor
jae
sbb
in
and
push
add
or
sbb
pop
mov
pop
pop
adc
ljmp
add
popf
jl
pusha
sbb
xchg
xchg
jge
jae
insl
mov
or
gs
or
jle
and
push
imul
addr16
cmc
cld
andb
add
sub
sbb
or
push
sub
loope
decb
sub
pop
cmp
jae
mov
push
js
push
data16
or
pop
adc
sbb
add
mov
incl
nop
nop
push
jge
andb
testb
jge
jnp
scas
ja
mov
push
mov
ja
adc
mov
dec
out
icebp
inc
outsl
jne
push
sbb
or
ret
mov
sub
mov
mov
mov
out
nop
add
pop
cltd
fistl
daa
push
xor
push
cltd
inc
lcall
xchg
jge
bswap
insb
call
pop
andl
ds
xor
orb
out
jmp
pushf
filds
mov
mov
adc
or
call
in
insb
ja
ret
xlat
shlb
cmc
pop
jmp
lea
cmc
sbb
push
or
or
in
adc
cmp
aad
cmp
std
cmp
test
mov
sbb
or
in
mov
or
cmp
pop
mov
test
in
or
lea
fiaddl
insb
add
imul
notb
inc
push
call
and
jbe
clc
hlt
hlt
pop
pop
addr16
xor
shll
mov
mov
ss
push
cld
inc
adc
fsts
push
sub
leave
or
cmp
push
stos
inc
or
fmuls
ret
jnp
je
cmp
mov
mov
enter
adc
js
pop
idivl
inc
mov
pusha
rolb
push
xor
inc
dec
push
fwait
arpl
jo
pusha
addr16
sti
leave
push
cmp
pop
sbb
and
xor
inc
call
xor
sbb
add
incb
sbb
adc
inc
lcall
or
test
stc
jmp
sub
fcoms
inc
adc
popa
or
adc
aaa
imul
or
fadds
mov
sub
cs
jmp
adc
insb
mov
inc
inc
adc
gs
int
pop
pop
sbb
divl
xor
adc
mov
test
push
in
push
inc
push
call
inc
sub
ljmp
dec
pop
out
pushf
out
stc
lcall
cli
ret
xchg
pop
lea
in
sub
ret
or
enter
adc
aaa
and
lock
sbb
dec
cmp
push
pop
push
xchg
xchg
mov
mov
arpl
mov
popa
push
and
mov
xor
mov
outsb
xchg
dec
or
ret
imull
mov
add
mov
lock
inc
inc
mov
push
dec
test
stos
or
in
mov
cmp
push
ret
inc
test
xor
xor
lods
add
jnp
ss
add
sti
push
pushf
jb
sub
add
ljmp
enter
mov
mov
mov
push
add
lcall
mov
adc
ss
inc
dec
call
dec
inc
jbe
push
stos
out
jbe
in
or
divl
lods
loopne
inc
mov
push
or
sub
cmp
sbb
xor
mov
dec
sbb
push
ds
mov
inc
aas
inc
xchg
dec
xchg
pop
out
loope
cmp
or
xlat
add
repz
add
add
jnp
xchg
and
int3
outsb
xor
and
inc
or
repnz
jg
push
cmp
je
cmp
repnz
push
xlat
insb
aam
dec
movsb
je
imulb
inc
mov
movzwl
push
sub
clc
sub
cmc
sub
push
inc
subb
sbb
fildll
lahf
in
inc
or
test
push
fistl
loop
nop
mov
rclb
mov
loopne
mov
sub
inc
fcomps
in
mov
push
inc
xor
add
imul
imul
sub
and
ss
add
dec
shll
jl
xchg
lods
fnstenv
hlt
or
add
push
cmp
xor
loop
je
fldenv
xchg
and
shll
popf
ss
add
dec
shll
cs
pop
out
xor
mov
addr16
xor
cmp
dec
aad
incb
out
push
mov
pop
jbe
pop
clc
xor
adc
std
sub
sub
xchg
lock
inc
dec
and
mov
adc
ja
andl
loopne
add
lods
pusha
decl
dec
xor
cs
insb
add
push
inc
push
dec
or
lcall
call
mov
mov
in
add
mov
test
jl
cmpsl
sbb
push
cmc
decl
out
out
sub
xlat
fistl
ss
rcl
test
mov
inc
fimuls
sbb
add
pop
je
outsb
push
jns
and
mov
mov
test
mov
jo
inc
bound
push
je
adc
pushl
outsb
addr16
js
mov
mov
and
add
pop
pop
sar
jle
and
fs
or
gs
gs
xlat
add
xchg
add
xor
xor
pop
add
mull
add
xchg
pusha
pushf
call
mov
out
and
adc
lea
mov
add
jmp
adc
jnp
add
add
out
mov
inc
push
push
mov
call
mov
pop
popf
popa
jmp
pop
inc
inc
pop
pop
pop
fstl
test
idiv
call
sub
lods
and
ss
xor
lahf
mov
sbb
iret
jle
std
inc
outsl
insl
arpl
xor
arpl
jae
mov
std
enter
mov
dec
into
les
mov
int3
out
mov
out
add
sub
or
add
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
out
fistps
fs
pop
daa
aam
lret
add
rol
mov
mov
mov
aas
jno
cmp
lea
dec
inc
int3
fldl
arpl
and
shlb
mov
in
inc
dec
ss
or
pop
add
daa
aad
enter
sti
add
insl
outsl
outsl
xchg
cmpsb
int3
mov
push
jle
dec
out
sbb
xor
jg
pusha
cld
ud0
mov
outsb
fs
sub
push
push
mov
jae
jae
gs
push
pop
pop
mov
xor
fisubrl
scas
mov
mov
daa
mov
add
add
outsl
mov
push
fstpt
or
add
mov
gs
inc
and
hlt
sbb
lds
cmp
add
aaa
jle
bound
xchg
push
push
xor
xor
pop
fimuls
out
or
subb
or
lods
xchg
or
stc
cmp
dec
add
nop
movl
or
inc
sti
jg
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
jg
mov
and
gs
out
mov
lcall
das
add
pop
xlat
mov
das
jle
in
fdivl
jns
in
jge
fnstsw
mov
ljmp
das
sarl
jb
popw
sti
fcomp
mov
das
fwait
pop
sbb
jne
push
imul
fdivs
add
push
dec
sbb
loopne
and
add
mov
adc
lea
add
insb
imul
pop
add
add
aad
push
xor
pop
outsl
cmp
push
add
or
push
adcb
jbe
insb
addb
and
pusha
mov
je
js
pop
mov
mov
add
pusha
testb
popa
je
or
push
sti
sub
push
sbb
add
add
notl
je
inc
sahf
daa
shrb
push
push
or
mov
ret
add
loopne
mov
ret
jae
arpl
add
sbb
or
fucomp
add
ja
insl
jo
or
or
fdivrl
ljmp
mov
iret
gs
daa
ds
imul
cmp
mov
and
insb
outsl
arpl
jae
ja
jne
pop
xor
inc
pop
mov
rclb
xor
mov
loope
call
pop
stos
vfrczps
cli
inc
lock
pop
xchg
mov
sti
movsl
scas
mov
lods
bound
mov
mov
call
push
or
fidivrl
pushf
pushf
jmp
rolb
mov
pop
stos
decl
add
push
add
pusha
call
mov
inc
fnsave
push
mov
sbb
mov
mov
call
gs
cmp
or
cmc
pushf
dec
jns
mov
mov
jae
cmp
pusha
in
and
inc
add
inc
movsb
push
jecxz
lds
fidivs
aas
push
xorl
sbb
adc
cmp
fnsave
push
sbb
pop
in
insb
sbb
adc
mov
sbb
outsb
lds
sbb
mov
shrl
jae
and
mov
pusha
mov
jl
insl
pop
adc
pop
push
ret
movb
mov
fwait
jmp
mov
sbb
ret
add
lock
dec
add
imul
adc
je
nop
je
mov
jg
repz
lea
jle
shll
stos
mov
push
aam
add
lret
mov
mov
es
xchg
fwait
sub
mov
arpl
out
sub
sub
xchg
stos
jg
movsbw
stos
mov
dec
mov
in
sar
fisubrs
shr
call
sbb
ret
faddl
xchg
adc
inc
push
test
sti
inc
clc
xor
push
mov
add
std
call
movb
in
gs
xchg
or
pop
stos
gs
xchg
jl
push
inc
inc
xor
rcrl
dec
inc
mov
xlat
dec
inc
dec
call
mov
cwtl
pop
adc
inc
les
mov
icebp
call
cwtl
push
push
out
out
in
mov
push
inc
sub
lock
add
divb
sub
add
pop
push
mov
jmp
orl
jl
and
notl
push
mov
in
pushl
sbb
sub
je
cmp
jae
movl
cmp
sub
fwait
push
pop
shll
add
popa
sub
pop
fistl
jne
lahf
pop
ret
xchg
push
movsb
add
sub
and
adc
cmp
fdivrs
rol
cmpsb
push
jecxz
and
mov
push
sbbl
fisubrl
mov
dec
inc
cmp
jbe
cmp
push
lea
sbb
add
jg
cmp
fmul
push
test
pop
sub
push
push
call
mov
je
mov
add
cmpsb
push
xor
xor
add
aam
call
std
lret
xchg
adc
scas
cmp
ror
leave
aad
in
lds
fdivrs
insl
pusha
movsl
mov
mov
out
test
add
xor
shll
xor
mov
add
shlb
push
ss
or
adcb
movb
cli
and
mov
je
outsb
jl
je
aas
bnd
add
ja
fldt
inc
jmp
cmp
jmp
push
dec
or
fs
int
mov
shrb
std
or
jo
cmp
roll
decb
fs
hlt
ror
xor
jmp
push
pushf
sbb
jg
sarb
test
stos
repnz
divb
push
pop
test
clc
aas
adc
xchg
pusha
xlat
adc
cmp
pop
jmp
mov
jge
imul
mov
jle
lock
dec
cmpl
push
adc
fdivl
adc
mov
stos
jl
je
adc
mov
lea
movsb
imul
add
push
shl
test
cltd
pop
xchg
push
dec
xchg
dec
xor
sub
mov
add
xchg
jecxz
add
xchg
sti
jnp
push
or
inc
adc
xor
fnsave
fisttpll
or
call
fstpl
adc
insb
cmpsb
sbbb
jmp
test
or
orl
push
ljmp
pop
loope
sub
xor
leave
int
lds
outsb
adc
pusha
std
adc
clc
add
cmpb
test
jne
or
pop
cmp
or
jnp
sub
jg
xchg
xchg
fmul
push
mov
push
jb
psubusw
mov
shrb
push
cltd
pushf
jmp
inc
dec
or
or
into
mov
sbb
or
jne
fistpl
xchg
or
push
aam
push
fdivs
jl
mov
push
fistpl
or
rorl
je
push
mov
out
shlb
and
dec
orl
push
sub
xor
cs
call
call
sub
or
in
adc
fadds
pop
sub
pop
jbe
dec
call
cmpsb
fistpl
mov
enter
fstpt
push
enter
add
add
or
and
cli
xor
data16
enter
push
jne
mov
or
insb
mov
dec
push
push
xor
mov
and
push
call
clc
call
or
adc
mov
mov
divb
jge
out
mov
adc
call
cmp
pop
loope
je
and
or
scas
jmp
fcomps
cmc
int3
out
push
in
push
inc
push
and
out
add
mov
test
iret
stc
pushl
jb
ret
adc
repnz
inc
xchg
pop
cli
orb
sbb
jns
mov
nop
mov
popf
xchg
xchg
mov
jge
jge
add
into
je
or
jmp
loop
out
adc
cs
push
cmp
push
mov
xor
jne
or
outsl
jae
xor
dec
cmp
sub
cld
add
fsubrl
js
cld
loope
push
add
push
push
icebp
loop
pop
push
adc
xchg
int3
push
gs
pop
js
ret
test
mov
mov
xchg
xchg
push
mov
xlat
lret
inc
sub
jp
xor
not
dec
mov
andl
add
cmp
mov
ret
mov
sbb
push
call
fldl
cmp
or
aad
pop
add
mov
or
push
jne
and
pop
or
cmp
jg
dec
cwtl
pop
out
add
mov
push
icebp
inc
les
mov
aam
fadds
add
xchg
gs
add
mov
mov
popa
lcall
add
repnz
push
mov
pop
pop
xchg
xchg
mov
and
lret
mov
xchg
cld
mov
mov
shlb
xchg
and
lcall
mov
cld
loopne
dec
xlat
movsbl
mov
sub
insl
sub
or
or
add
xchg
mov
aam
stos
or
ret
pop
lahf
fdivl
pop
inc
jg
icebp
loope
cmp
lret
mov
mov
cmp
or
or
jmp
inc
adc
in
add
std
mov
xchg
popl
leave
imul
gs
xchg
xor
push
xor
mov
mov
sbb
pop
push
mov
fdivrs
mov
nop
sub
test
enter
push
pop
jne
popa
or
pushf
dec
insl
xchg
jb
int
ret
inc
xor
pop
jmp
jmp
shlb
enter
in
xchg
out
sbb
dec
add
js
mov
pushl
or
insb
pusha
stos
ss
repnz
inc
loopne
loopne
cmp
sbb
jecxz
imul
dec
lods
idivl
mov
shr
das
push
jb
nop
out
cli
imul
xor
fs
mov
and
repnz
ja
mov
add
and
dec
aas
and
mov
orb
or
and
and
sub
mov
test
sub
fimull
inc
jne
ret
movsl
loopne
add
push
loop
arpl
stos
stc
stc
stc
pop
and
pop
or
arpl
shl
imul
in
stos
mov
push
xchg
jbe
stc
mov
aam
push
roll
and
jbe
push
dec
push
enter
sub
or
push
imul
dec
add
bswap
xchg
cmp
xor
add
mov
add
lock
pop
or
mov
ja
mov
addb
inc
jp
sbb
jmp
jmp
adc
lds
aaa
loopne
clc
aas
cs
jmp
and
jge
call
imul
adc
imul
pop
movsl
add
aad
les
add
jbe
rolb
loop
mov
pop
xchg
cld
mov
inc
dec
or
loop
lds
and
jae
xchg
cmp
es
cmpsb
imul
lcall
gs
add
js
rolb
push
mov
roll
and
lahf
out
call
loopne
cmp
jl
scas
aaa
mov
add
cmp
cmp
xchg
scas
mov
lock
push
pop
enter
popf
imul
xchg
movsl
andb
aam
inc
aam
fcom
fstps
fidivl
pop
rcl
fcmovnu
sbb
rcr
inc
dec
push
xlat
xor
das
loope
loop
mov
in
and
lock
inc
movsl
icebp
sub
movsb
call
push
daa
adc
fsubs
jo
mov
in
xchg
push
in
mov
fwait
ror
test
adc
mov
aaa
xor
push
icebp
push
inc
in
jae
xlat
insb
rcl
and
or
pop
rcrl
sahf
xor
xchg
daa
lret
inc
lods
mov
pop
imul
test
dec
cmpxchg
adc
and
add
leave
repnz
push
js
subb
and
insb
syscall
jo
js
xor
and
fstpt
scas
inc
adc
or
jnp
pop
ret
or
clc
call
in
insl
repz
aad
push
sbb
outsb
in
mov
in
call
xchg
or
push
pop
add
das
outsb
pop
sti
dec
xor
jge
cmpb
je
sbb
fstl
je
adc
sub
sub
shll
push
and
jg
jnp
call
loop
add
mov
or
movsl
hlt
and
sub
imul
add
in
mov
jge
cmc
pusha
mov
xchg
push
adc
inc
push
or
adc
xlat
sub
loop
mov
jno
dec
or
fcomps
sbb
fcoms
cld
or
cltd
call
call
sbb
andb
adcb
pop
subb
cld
jno
pop
pop
adc
cmp
arpl
icebp
lods
sbb
stos
xor
jnp
subl
xchg
inc
sub
adc
shll
xor
shll
fwait
mov
scas
cmp
dec
add
or
inc
clc
inc
mov
or
jno
push
mov
add
rol
xor
movsb
xchg
cmpsb
imul
imul
xchg
pop
push
sbb
dec
mov
xchg
imul
aaa
fcoml
shll
add
mov
aad
aam
aam
xchg
pushf
add
jne
pop
icebp
adc
cmp
mov
pop
mov
cwtl
mov
mov
cmpl
inc
sub
jmp
enter
mov
dec
vucomiss
pop
call
shr
sti
jecxz
dec
ficompl
adc
and
jnp
jge
push
or
bound
test
push
inc
insb
add
sub
or
aad
jl
mov
incl
pop
xor
mov
dec
mov
push
cmp
jmp
arpl
push
push
dec
adc
add
test
dec
cmp
daa
sbb
jge
xor
add
mov
adc
push
cmpsb
imul
imul
cmp
in
dec
outsb
fstps
dec
test
push
or
mov
xorb
or
cmpl
aad
pop
repnz
insb
mov
xchg
and
ss
pop
dec
and
add
adc
fldl
fs
arpl
pop
mov
adc
lods
pusha
adc
fists
push
inc
mov
mov
push
add
jecxz
xor
mov
mov
std
adc
ror
or
stos
pusha
mov
sub
adc
and
push
sub
pop
or
out
pop
adc
leave
fidivrs
adc
adc
loop
mov
jbe
or
mov
out
inc
pop
ljmp
stc
in
imul
dec
outsb
lock
pop
xlat
cltd
cmpsb
je
divb
testl
jne
stc
pop
cli
dec
and
mov
es
gs
cmp
sbb
jmp
nop
sbb
insb
push
addb
sub
sbb
pop
lahf
mov
in
push
lcall
mov
push
push
push
sub
loopne
or
ficoms
call
cltd
icebp
push
cltd
mov
ret
mov
mov
adc
jmp
sbb
je
push
xchg
sbb
sbb
sbb
movsb
jbe
fs
pusha
adc
or
movsb
or
test
int
rcll
imul
call
pop
loop
add
add
sbb
xchg
pop
call
add
mov
ret
jne
inc
sbb
movb
aas
pop
sbb
cltd
or
mov
and
xor
add
je
fildl
mov
rorb
inc
sub
insb
in
mov
pop
or
push
mov
push
in
add
mov
add
fsts
inc
enter
mov
icebp
out
push
xor
and
mov
xor
push
push
pushf
pop
stos
adc
sarb
and
jg
daa
adc
jmp
push
push
int
ret
push
fistps
ret
leave
ficoms
stos
cmp
and
imul
mov
pop
sbb
shll
fwait
cli
xor
mov
clc
add
mov
inc
pop
inc
sub
sub
mov
push
mov
push
pop
mov
ds
pop
pop
jae
or
add
inc
loopne
data16
lcall
jbe
mov
cmp
jg
cmp
jl
push
inc
call
jne
cmp
jb
push
push
sub
fcoml
sub
sub
cmp
and
arpl
or
ss
pop
mov
push
enter
or
rcl
test
stos
int
cmpl
mov
xchg
or
ds
pop
jo
and
call
inc
add
ds
dec
pop
js
call
fsub
pop
orb
mov
pusha
jecxz
or
fldl
xchg
or
pop
movsb
pusha
jbe
sbb
or
mov
pop
mov
mov
in
dec
xchg
lidtl
or
ret
jmp
mov
and
inc
loope
addr16
sarb
test
pop
or
fidivrl
pusha
fadds
incl
shl
jp
push
cli
push
dec
xlat
mov
mov
shll
adc
pop
jb
adc
ds
not
rcrl
inc
xor
mov
inc
dec
add
ffree
cmpsb
mov
mov
in
dec
jmp
push
int
fucomip
jmp
push
loopne
cmpsb
imul
mov
mov
imul
test
push
aas
jb
loopne
xor
lods
fs
add
jne
push
mov
sub
inc
dec
push
push
dec
or
adc
test
mov
sub
loope
rorl
cmp
scas
sbb
cmp
and
mov
jp
xor
sbb
lea
sbb
sbb
push
cld
dec
inc
shrb
ljmp
frstor
aaa
call
adc
push
mov
movsl
jo
mov
test
std
and
fcomi
es
jbe
push
cmp
ud1
mov
xor
int3
call
adc
icebp
daa
leave
call
jmp
pop
repnz
mov
cli
dec
insb
subb
pushf
nop
mov
ret
push
and
movsb
in
pop
out
fadd
movsb
mov
ret
repnz
xor
push
xchg
stos
mov
lds
pop
push
pop
pop
xrelease
lret
mov
ret
lret
xchg
int3
call
xchg
jp
or
sbb
inc
xlat
shl
pop
testb
lret
stos
cld
inc
cmp
call
imul
popf
mov
add
inc
pop
loopne
loope
loop
ficomps
mov
mov
and
lds
and
sbb
mov
rolb
or
jbe
mov
xor
mov
psubsb
push
cmp
sub
imul
cmp
outsb
add
lret
clc
mov
mov
lock
rorl
mov
fiaddl
fucomi
test
jmp
orb
pop
lods
shlb
xor
or
cmpsb
or
stos
daa
cmpsb
cmc
call
aad
pusha
inc
adc
divl
ror
or
sbbl
push
add
fidivl
push
enter
dec
xchg
push
es
andb
dec
mov
adc
ret
mov
xchg
sbb
add
icebp
pop
mov
leave
xor
xor
ret
inc
mov
repz
sbb
andb
add
outsb
imul
add
cmpsb
icebp
mov
aas
and
or
imul
fldt
insb
bound
add
sub
call
dec
inc
shll
add
test
shlb
cmp
dec
pop
inc
bndstx
out
xor
add
dec
ds
es
hlt
xchg
adc
xchg
loopne
dec
fsubrl
arpl
loop
in
in
pop
jl
add
xor
cmp
jle
mov
cmp
mov
add
aaa
inc
and
and
ret
out
push
dec
popf
sub
int
pop
faddl
cmp
sbb
adcl
bound
add
and
add
testl
andb
push
add
add
outsb
outsb
cmp
mov
inc
add
mov
jno
sub
data16
loope
add
cmpsl
and
sbb
xor
imul
lods
sbb
movsb
cmp
push
call
add
stc
push
adc
cwtl
pop
and
fsubs
and
addb
idivb
popa
out
call
cs
jmp
lds
or
add
cwtl
xlat
insl
fcmovb
fsts
xchg
fwait
mov
fld
adc
or
cmp
add
dec
mov
insb
sbb
pop
cld
enter
je
add
mov
sub
jbe
add
cmp
insl
data16
xor
push
int
xor
xchg
add
imul
stos
imul
mov
testb
push
mov
pop
or
out
pop
clc
cmpsb
imul
mov
add
addl
sbb
fnstcw
push
mov
popa
jo
cmp
repnz
or
mov
mov
and
mov
aaa
adcb
mov
jne
xlat
icebp
std
hlt
call
sbb
fs
cmpsb
jae
js
or
or
or
sbbb
pop
outsb
pushf
mov
repz
lods
ds
and
mov
sub
adc
rolb
es
add
inc
inc
rclb
cld
push
lret
clc
pop
mov
in
or
pop
inc
mov
push
in
or
ja
sub
enter
fcoml
and
jns,pn
repnz
or
call
lods
and
adc
arpl
adc
push
dec
hlt
in
popf
and
mov
lods
sti
add
adc
call
adc
lea
push
push
push
push
push
xor
js
cmp
jge
call
jne
xor
sbb
pop
ss
jo
xorl
jge
enter
cld
mov
ret
push
inc
dec
cmp
inc
aaa
sbb
add
dec
cld
and
inc
cmp
rorl
test
sub
mov
sbb
imul
iret
movsb
adc
sbb
add
cmp
jle
push
pop
sbb
add
cmpsb
rcrb
dec
inc
mov
daa
jge
fldcw
ret
or
push
sub
mov
inc
jg
inc
ss
xor
dec
push
test
cmp
push
les
pop
lods
sbb
adc
mov
xor
and
xor
loope
jge
clc
push
ljmp
jle
adc
pop
stos
ffreep
jnp
add
sub
clc
jbe
add
jge
je
addr16
and
clc
dec
loope
inc
js
pop
cmp
xchg
pop
cmp
clc
and
push
and
sbb
mov
jne
call
roll
std
clc
jg
inc
aaa
clc
dec
xchg
cmp
jnp
stos
enter
into
add
xor
mov
lock
push
jecxz
cmc
jmp
and
pop
popa
subl
clc
add
mov
or
push
inc
push
mov
rcl
mov
push
ret
mov
in
loope
sub
ret
inc
push
test
push
and
mov
push
dec
adc
rcll
pop
movsb
or
repz
mov
nop
sbb
sbb
sbb
std
insl
mov
mov
mov
push
xlat
jo
mov
call
lods
in
mov
add
test
cmpsb
mov
cmp
jbe
mov
push
mov
pusha
mov
out
scas
add
loop
lock
mov
leave
dec
pop
sbb
mov
lret
lock
pop
mov
inc
gs
xchg
inc
arpl
lock
shl
mov
lret
inc
pop
push
insb
lods
aad
addl
hlt
and
cmpsb
sbb
lock
icebp
dec
sub
fbld
es
mov
pop
addr16
jg
cs
imul
push
sti
out
testb
orb
test
ret
jmp
mov
mov
mov
or
andb
inc
cmpsb
and
xchg
popa
mov
pop
inc
push
outsb
push
arpl
pushf
add
push
cld
push
sti
lods
add
push
into
call
call
add
data16
or
pop
dec
dec
mov
nop
decl
jge
and
and
mov
and
mov
pop
inc
cld
pop
sub
pop
dec
or
cmpl
sti
fstpl
cmp
jne
cmp
jne
push
mov
mov
fdivs
push
fucomp
pushl
jnp
add
ljmp
push
les
mov
pop
mov
or
jae
lea
or
int
or
and
sbb
stc
mov
cli
insb
repnz
add
jae
add
jmp
ficomps
mov
pop
lcall
hlt
jge
cmp
arpl
arpl
sbb
js
pop
or
lock
call
jne
xor
sbb
or
cmp
je
pop
insl
pop
clc
lret
mov
inc
push
dec
and
dec
in
cld
mov
sbb
das
aam
arpl
add
add
mov
push
out
leave
dec
fnsave
mov
dec
mov
add
pop
lock
cmp
sti
mov
je
inc
push
mov
cmp
add
add
divb
test
push
adc
adc
push
add
stc
dec
or
jmp
dec
aas
pop
lcall
or
push
call
jne
in
cmp
jne
push
mov
jmp
mov
fidivrs
shll
mov
into
dec
or
sub
mov
jp
and
pcmpeqw
dec
or
pop
or
cmp
or
test
loopne
mov
cmc
mov
sbb
mov
or
or
cmp
add
fildl
xor
rep
rep
fcmovb
movsl
fnsave
scas
andl
aaa
pop
ficompl
mov
adc
ret
mov
or
adc
inc
pop
inc
xor
ds
sub
fsubs
add
push
cmp
pusha
scas
lret
mov
je
sbb
mov
imul
sub
xchg
imul
lahf
sti
pushf
pop
adc
pop
xor
cmp
add
int3
push
mov
push
js
xchg
or
aaa
jecxz
add
adc
or
daa
bound
push
or
pop
pop
pop
aaa
setns
jl
mov
hlt
and
cmp
sbb
pop
add
int3
ss
adc
cmp
pop
xchg
or
icebp
cmp
gs
push
push
shlb
cmpsb
xchg
or
movl
pop
sbb
xor
ret
cmp
mov
push
mov
or
repnz
add
shlb
bound
mov
or
mov
testb
or
xor
xchg
push
daa
add
inc
mov
mov
cs
mov
jb
and
pop
jo
sub
jecxz
dec
icebp
xchg
jno
adc
mov
mov
int3
insl
or
inc
push
jo
xor
fstpt
mov
push
or
add
and
push
sbb
inc
mov
inc
jmp
je
push
je
test
loop
mov
mov
mov
repnz
shll
add
sbb
ret
cld
aaa
mov
cmp
call
xchg
pop
mov
or
jmp
ss
jnp
pushl
bndstx
sbb
fstpt
or
dec
cmp
jb
jmp
imul
shll
mov
movsl
add
push
inc
mov
lea
enter
into
sub
in
add
test
mov
fistl
ret
add
dec
pop
mov
stc
mov
lret
sbb
pop
mov
cmp
pop
shrl
call
push
or
push
insl
call
inc
xlat
inc
pop
push
xor
lret
scas
and
jge
and
fdivrl
or
and
int3
add
mov
shlb
push
mov
mov
jmp
sbb
push
xlat
scas
cmp
adc
inc
jg
sar
jl
or
aam
addr16
iret
out
fsubs
das
fsubrl
jo
gs
and
ljmp
mov
xor
fadd
mov
insb
add
lea
lods
mov
push
add
sbbb
call
mov
ljmp
orb
pusha
adc
and
or
add
stc
clc
mov
sbb
adc
roll
fildl
mov
pop
push
sbb
fsubl
or
cmp
sub
and
out
mov
nop
xor
or
adc
cwtl
xor
xor
fstps
sub
lret
clc
cld
test
shlb
dec
fdivl
repnz
test
push
push
popf
lock
das
lea
fisubrs
mov
xor
jne
cmp
push
push
fnstenv
push
psubb
push
dec
push
cmp
xor
pop
or
mov
xor
dec
test
mov
mov
push
push
inc
aam
xor
cmp
fs
scas
sysret
xchg
ds
pop
adc
push
cmp
mov
adc
mov
fildll
je
dec
dec
cmpw
repz
mov
jo
stos
cmp
icebp
loop
jo
fsubrl
push
push
mov
mov
psubusb
nop
sbb
xchg
fadds
push
call
test
mov
mov
cmp
shlb
mov
cmpsb
aas
std
fsubrs
pop
pop
scas
adc
in
push
test
ficomps
call
xchg
sbbb
decl
push
mov
cmp
aad
jne
push
outsl
in
mov
nop
mov
imulb
mov
push
add
and
jb
andl
pop
push
lds
pop
in
inc
dec
mov
in
lea
repz
sbb
test
mov
lret
outsb
or
lods
pop
push
dec
xor
or
adc
test
sub
pop
int3
xchg
mov
addb
sub
faddl
test
xchg
outsl
mov
mov
mov
mov
lea
push
shrl
mov
nop
out
xchg
push
mov
xchg
pop
xchg
jae
xchg
sub
xor
push
pushf
or
scas
jmp
insl
lahf
arpl
mov
add
fwait
movsb
movsl
inc
add
pop
push
addl
push
shrb
and
dec
iret
dec
inc
shll
sub
add
dec
aam
mov
je
popa
pop
xlat
scas
fadds
insb
push
jo
lcall
loop
inc
mov
out
shll
stos
dec
dec
and
jne
xchg
mov
mov
mov
push
adc
jb
mov
sub
sbb
pop
adc
jo
xor
and
insb
fsubl
and
adc
inc
mov
xchg
push
addr16
adcb
push
push
rorb
fadd
mov
faddp
fadd
ja
push
mov
pop
xchg
gs
push
movsl
lret
mov
sarl
add
inc
dec
sbb
sub
mov
adc
daa
mov
ret
sbb
add
push
push
inc
ja
cli
add
loop
cmc
lods
mov
push
mov
pop
inc
pop
xorb
sbb
push
shll
pop
cltd
or
mov
in
lea
add
ret
jne
out
or
rcll
add
clc
mov
cmpl
fnstenv
adc
sub
insb
mov
dec
and
cmpsb
jne
scas
in
insl
xor
mov
test
ljmp
or
add
ficompl
fimull
call
cmp
test
cmp
xor
retw
call
add
ret
adc
in
xchg
inc
mov
inc
out
jmp
push
push
lds
stc
pop
xchg
push
adc
push
or
push
gs
push
adc
add
in
adc
add
scas
xchg
adc
cld
push
mov
dec
jns
in
popf
xor
imul
shufps
push
pop
imul
cmp
add
jae
imul
pop
dec
push
imul
in
insb
imul
mov
loop
jo
popa
outsb
bound
insl
xor
call
lcall
pop
xlat
aad
pop
stos
pop
lods
sahf
lods
or
sub
dec
push
push
shll
into
mov
fmuls
jo
shll
jo
imul
loop
jecxz
inc
mov
js
xor
dec
rcll
mov
add
mov
jmp
xchg
out
call
pop
push
test
iret
dec
gs
sbb
jns
inc
xchg
hlt
lret
add
or
xor
loope
xor
push
popa
cmp
rcrb
cmp
push
cmp
rcrb
jbe
sub
jbe
test
push
inc
xor
daa
pushf
clc
inc
mov
inc
sub
into
cs
sub
dec
daa
cmp
icebp
test
movb
addr16
and
arpl
jb
jbe
imul
sbb
insl
push
inc
outsb
and
xor
jo
jno
jb
xchg
rolb
fcomp
xchg
jb
mov
dec
cltd
lds
popf
mov
add
dec
add
cmp
dec
gs
xchg
cmpsb
stos
mov
jne
rcrl
int3
pop
int
sbb
in
out
imul
je
popa
insb
dec
shll
jns
jnp
sbb
in
lea
inc
or
and
daa
pushf
mov
sbb
jne
jbe
ja
jo
dec
aaa
js
jns
movsb
adc
test
test
jl
cmpl
jecxz
push
jle
jg
push
xor
jbe
je
push
int
pop
add
inc
insl
lods
andb
or
sub
cmp
mov
mov
xor
mov
xor
fiaddl
mov
cwtl
movsb
push
std
cmp
jle
dec
lret
push
sbb
ficomps
xchg
xchg
dec
adc
pop
cmp
cmp
mov
xchg
inc
push
jmp
aad
nop
sbb
inc
inc
push
out
scas
pop
repnz
mov
adcb
push
mov
nop
add
push
push
rcrb
lock
sarl
fildl
fiadds
inc
push
sbbl
push
and
test
jl
call
sub
in
push
test
mov
mov
adc
ret
and
pusha
clc
inc
loope
cmpsb
mov
lea
icebp
imull
lea
call
es
jno
lds
pushf
xchg
fldenv
xor
test
sbb
mov
push
outsl
adc
or
push
adc
lea
mov
mov
imul
push
add
call
sbb
push
mov
in
adcb
rcrb
cmp
xchg
pushl
test
outsb
fadds
add
add
push
fisttps
mov
mov
jmp
mov
add
inc
or
outsb
nop
push
mov
sbb
sbb
sbb
pop
push
sbb
jecxz
push
xchg
aad
xor
adc
repz
je
sbb
sbb
fstp
jge
push
push
cld
test
jb
and
arpl
jnp
test
sub
shl
pop
aad
adcb
add
xor
movsl
add
fistl
stc
xor
pop
hlt
std
out
ds
push
ja
push
orl
xorl
sbb
or
mov
fiadds
jo
cmpl
andl
pop
xchg
pushf
sti
mov
mov
add
mov
cmp
mov
rorl
out
sbb
push
dec
icebp
jmp
push
xchg
out
push
xor
std
xlat
mov
sub
insl
xor
je
call
push
mov
push
dec
inc
mov
mov
push
jmp
pop
or
mov
xchg
call
sahf
mov
mov
bound
orl
mulb
add
mov
push
fcomps
adc
jns
fmuls
mov
inc
mov
cmp
js
mov
push
pusha
enter
or
sbb
mov
adc
lods
bnd
and
add
and
mov
or
cmp
adc
fwait
and
or
add
xchg
pop
lods
xchg
lock
andb
test
stos
lods
ret
call
sti
sbb
in
xchg
mov
jo,pn
jmp
adc
pop
push
aaa
xor
jmp
jg
pop
cmpsl
fs
and
push
fs
xchg
imul
add
adc
mov
sub
sub
rol
push
insb
mov
push
loope
lcall
scas
xor
inc
mov
fistps
xchg
or
fucompp
pop
ds
movb
adc
and
mov
add
adc
mov
xchg
mov
add
inc
add
ds
fimull
movl
mov
lea
inc
sbb
pop
or
adc
cmp
mov
xchg
cmpb
and
mov
mov
push
pop
push
inc
rcrl
pop
jae
add
mov
jb
or
mov
mov
xor
shll
fs
inc
dec
xchg
and
out
mov
sbbb
mov
mov
mov
mov
xlat
lds
int3
pop
or
cmp
mov
mov
mov
je
je
xchg
xchg
xchg
adc
out
cwtl
jmp
adc
enter
pop
data16
enter
lret
push
mov
ds
into
ds
gs
push
jl
mov
push
pop
xlat
mov
es
daa
shll
lds
daa
je
sub
dec
inc
je
ror
int
bound
mov
adc
and
mov
jae
adc
jmp
cmp
call
adc
in
inc
adc
add
fwait
cmpsb
bndstx
xor
cld
jp
mov
push
push
call
xchg
mov
mov
mov
pop
clc
dec
hlt
push
je
loope
inc
and
jnp
dec
lds
rcrb
inc
add
pop
adc
fiadds
ficomps
ficompl
or
inc
push
in
addb
clc
cld
add
sti
jmp
cmp
ja
es
push
daa
lods
inc
xchg
sub
xor
mov
test
dec
cli
push
push
xor
clc
push
xchg
lods
cmp
cmp
icebp
inc
xor
insb
add
mov
add
icebp
jl
inc
and
xor
mov
push
ds
mov
adc
xor
aaa
xor
mov
in
roll
cmp
jl
push
add
arpl
icebp
add
sbbl
jae
mov
scas
div
jmp
xchg
mov
ds
call
cmp
mov
sbb
jne
mov
popa
das
pop
jmp
sbb
ficomps
mov
pop
or
push
loopne
popa
inc
inc
cmp
arpl
int3
leave
add
jno
cmp
pop
dec
mov
bound
add
add
cmp
inc
loope
call
inc
lea
pop
rep
pusha
adc
movsl
mov
inc
filds
adcl
xor
adc
mov
mov
mov
add
push
jae
aam
sti
rcll
lock
add
hlt
xor
je
fcomps
sbb
add
ds
xchg
cmp
add
jmp
dec
outsl
mov
movb
xchg
sub
push
inc
add
sti
rol
sti
rclb
test
add
push
inc
xchg
pusha
imul
xlat
adc
mov
fwait
lret
fsubrl
leave
lahf
fsubrs
jp
pop
mov
pop
loopne
mov
faddl
and
sub
pop
repnz
cmp
jge
rclb
scas
push
and
mov
call
dec
les
pushl
or
sarl
inc
call
repnz
push
inc
in
sahf
push
xchg
imul
pusha
and
lea
or
fwait
mov
test
mov
aam
inc
cmp
mov
and
or
cwtl
cmpsb
cmp
outsl
sub
cmp
lock
jo
leave
pushf
insl
inc
and
dec
icebp
cs
sbb
call
mov
add
push
add
dec
xor
jo
sbb
ss
loope
shlb
sbb
sbb
jl
pop
or
cmp
fildl
pop
and
call
and
lock
push
pushl
or
mov
dec
lock
inc
cmp
mov
insb
xor
adc
inc
fnstsw
fstpt
xor
jmp
shl
or
movsl
cmp
sub
jbe
adc
imul
mov
push
nop
stos
mov
and
fdivp
movsl
les
fsts
mov
adc
xchg
pop
adc
mov
and
push
loope
stos
lret
inc
sbbb
in
mov
add
mov
mov
pop
mov
xor
add
or
jle
push
jns
cmp
add
bound
adc
xor
add
inc
dec
jne
mov
or
aam
fwait
inc
sub
jge
push
sub
addr16
add
mov
adc
idivb
sbb
pusha
mov
add
fs
in
pop
cli
push
adc
push
scas
adcb
cmp
enter
insl
xor
cmp
loop
jge
mov
adc
roll
ret
fldcw
mov
jmp
pop
movsl
sub
inc
jne
cmp
pusha
psubq
das
pop
test
popa
testl
aad
adc
push
rorl
push
cmp
xor
or
fwait
scas
xchg
add
in
inc
add
ret
arpl
cmc
aas
xchg
push
popa
xor
push
mov
lcall
lock
add
mov
les
movsl
movsb
inc
sbb
jl
pop
hlt
or
xor
pusha
test
fimuls
aad
pop
test
call
sbb
sarb
xlat
jle
push
push
das
push
jb
cs
inc
movzbl
int3
push
pop
clc
idiv
or
enter
push
add
mov
icebp
xor
sarb
rclb
and
push
xlat
or
jge
sub
jbe
add
push
roll
and
adc
aam
movl
or
pop
adc
push
push
lret
xor
xor
jnp
push
push
sbb
sub
push
mov
sub
ret
aas
and
mov
popf
movsb
shll
add
adc
and
cmpsb
push
arpl
or
decl
push
and
push
xlat
into
orl
pop
rolb
divb
stc
mov
xchg
cmpb
out
dec
aam
ss
lock
sub
repz
fildll
jne
mov
push
loope
loop
je
jne
sub
pushf
out
call
pop
jmp
jmp
ds
out
dec
push
stos
fucom
ret
xor
add
or
enter
xchg
jl
lahf
addb
dec
cmp
jne
dec
xor
pop
xchg
dec
dec
xor
fs
dec
addl
addl
xor
dec
push
scas
and
push
lea
add
add
ja
js
imul
add
rolb
and
ljmp
jmp
jl
add
ud0
sbbb
jmp
sbb
les
mov
cmp
add
push
inc
push
popa
mov
push
je
adc
or
imul
push
push
xchg
popa
bound
cmpsb
jae
clc
add
popa
call
mov
mov
loopne
icebp
jecxz
ror
add
push
dec
push
xor
test
lods
stos
popf
sub
mov
arpl
fadds
and
sbb
adc
and
pop
negb
pop
pop
icebp
dec
adc
ljmp
adc
xchg
inc
ucomiss
rcr
popl
inc
adc
cmpsl
push
rol
lea
cmp
call
dec
mov
lods
xchg
add
mulb
sbb
in
mov
xchg
mov
test
out
mov
sub
push
ss
popa
cmp
lret
jae
popa
jae
mov
scas
adc
outsb
movsb
adc
scas
imul
mov
pop
scas
mov
lss
mov
cmpsb
jmp
mov
mov
ljmp
jle
adc
cmp
adc
lcall
adc
fs
cwtl
aad
mov
mov
es
lret
xlat
je
lret
int3
xor
pop
into
xor
testl
pop
shrl
pop
pop
xlat
jne
aam
aad
pop
xlat
or
pop
flds
pop
xlat
xor
fdivrl
xchg
push
fistps
loopne
das
loop
dec
shll
in
out
xor
mov
out
call
xor
and
lea
andb
popf
repz
scas
jmp
hlt
cmp
sbb
testl
stos
stos
stc
mov
xchg
pop
cld
std
lock
scas
cmp
push
inc
sbb
push
cli
rorb
add
mov
lea
jmp
push
push
mov
mov
or
jmp
add
adc
xor
jo
je
push
pop
ret
jge
ds
jmp
pop
test
and
jl
cwtl
push
bound
and
push
mov
push
dec
mov
sti
pop
jno
std
pop
call
fimull
mov
or
and
push
shlb
imul
or
sbb
sbb
popl
pop
jmp
adc
in
das
push
and
mov
or
aaa
jmp
add
mov
cmpsb
add
pop
push
cs
pop
inc
fimuls
clc
xorl
scas
adc
xor
xorl
xor
mov
mov
cmpsb
add
pusha
sti
rorb
cmpl
sub
push
fsubr
jbe
push
cmp
push
icebp
addl
and
cmp
leave
mov
xchg
mov
jle
adc
push
cmp
add
insl
and
add
add
push
lea
aas
test
adc
push
cli
in
or
shlb
rcrl
mov
xor
out
adc
mov
adc
pop
mov
pop
push
adc
loop
movsl
fisttpl
shlb
inc
sbb
je
mov
movsb
or
push
bswap
fwait
cli
xchg
ds
pand
fsubr
mov
xchg
pusha
pop
push
rcr
fisttpl
inc
mov
add
insb
movsl
mov
stos
mov
add
leave
popa
mov
push
js
sub
push
fwait
sub
adc
push
push
push
or
test
sbb
adc
push
adc
mov
add
mov
push
das
mov
std
mov
sub
add
mov
add
pushl
push
out
jo
shr
test
jle
mov
push
xchg
clc
fldenv
push
mov
ds
mov
and
add
add
inc
inc
dec
jne
add
popa
xor
sarl
and
mov
insb
pop
cwtl
orb
rol
mov
int
cmp
mov
cmpsb
mov
roll
addl
adc
jae
scas
aam
add
inc
or
repnz
and
data16
sub
fwait
test
or
mov
cmp
mov
les
adc
fdivrs
lods
je
jge
aam
inc
rolb
ss
addb
or
aad
cs
daa
mov
add
enter
lret
es
mov
into
mov
xor
addl
mov
test
pop
hlt
cmpsl
sbb
imul
mov
test
lea
mov
fidivl
rclb
dec
push
push
test
scas
stos
pop
je
test
je
push
js
loopne
add
adc
inc
sbb
dec
sbb
mov
push
jl
xchg
sti
shll
add
cmp
sub
shl
cmpl
outsb
clc
push
movsl
pop
sbbb
lea
cltd
lea
rorb
imul
mov
lock
test
jns
push
adc
stos
out
mov
pushl
call
icebp
notb
jp
scas
cmp
jbe
or
ret
dec
fdivl
bound
push
cs
aaa
mov
add
push
cwtl
sub
mov
int
loope
sub
adc
test
sub
aas
cmp
add
sub
or
jmp
pop
push
push
sbb
lods
lea
adc
push
or
sub
adc
xlat
bound
enter
ja
mov
shlb
adc
add
jne
mov
lcall
mov
daa
or
mov
int
pop
test
pop
sbb
pop
pop
rorb
sub
add
xor
loop
lock
shlb
nop
call
cmp
hlt
and
cmpsb
jmp
jb
addr16
pop
mov
lret
sub
add
push
shrl
and
lock
in
inc
inc
push
jbe
xor
add
inc
neg
sbb
shll
fcoms
sbbb
clc
jo
and
in
push
jp
lds
xor
dec
xor
cs
shlb
inc
outsb
jne
or
cmp
push
dec
dec
lret
pop
rolb
push
cwtl
bound
adc
push
push
mov
push
or
je
mov
mov
xlat
std
loopne
ror
add
inc
in
push
pop
jmp
lea
push
adc
mov
outsl
mov
sub
mov
je
data16
cli
mov
inc
pusha
adc
pop
cmp
ja
test
testb
in
xor
inc
mov
adc
cmp
popf
inc
jmp
cmp
jb
outsl
fistpll
addl
or
dec
and
in
int
test
or
cld
sub
roll
or
add
push
lods
or
lret
mov
insl
test
mov
and
lahf
cmp
fisttpl
lods
inc
and
sub
inc
js
lods
fcomp
adc
mov
add
or
mov
and
mov
push
rorb
mov
shll
mov
xchg
xor
shll
adcl
rorl
stos
xor
shll
xchg
test
aam
jecxz
movsb
lcall
mov
xlat
insl
xchg
aam
aad
xchg
imul
cmpsb
imul
sbb
stos
mov
test
xor
shll
mov
roll
insl
sbb
add
push
stos
aad
adcl
aas
pushf
popf
cmpsb
fldl
sahf
push
lahf
mov
imul
cmpsb
imul
js
in
xor
shlb
and
xor
fdivs
lods
adc
adc
xor
push
sbb
hlt
adcl
jo
xor
stos
add
mov
daa
and
rcl
fsubrl
cwtl
pop
mov
fisttpll
cmp
add
xor
push
outsl
inc
fs
out
push
pushf
mov
inc
addb
loop
call
or
and
int
lds
push
nop
stos
and
mov
je
mov
loopne
shl
cld
pop
lahf
filds
test
loope
inc
scas
das
sbb
or
call
jmp
inc
push
sti
jl
sti
je
out
les
ja
pop
mov
push
and
sbb
xchg
lock
jge
sbb
mov
sub
add
std
xor
test
ds
and
push
or
negl
push
fstpt
wbinvd
fisubl
xor
inc
cmp
or
add
cli
mov
jl
pop
lahf
sti
jb
or
ret
cmp
xor
adc
mov
sbb
cmp
adc
in
mov
add
shlb
mov
adc
mov
cmpsb
stos
cmc
inc
and
inc
adc
and
add
mov
jecxz
inc
xor
push
inc
andl
adc
xchg
and
adc
push
mov
inc
dec
add
test
sbb
sub
lea
out
cwtl
in
mov
in
sub
adc
sti
cmp
imul
or
xchg
mov
or
push
fisubs
sbb
and
pushf
sub
rcll
sub
hlt
lea
and
add
mov
fcmovnu
or
fiadds
inc
ljmp
daa
cmp
pop
jb
subl
inc
neg
mov
jne
xor
cmpb
inc
push
jg
push
jnp
jo
pop
pop
ljmp
mov
clc
andl
inc
cwtl
cld
fs
push
xor
cld
pop
jb
cwtl
and
shlb
push
add
pop
mov
pushf
popf
jmp
adc
dec
adc
sti
jmp
fdivs
sbb
aaa
and
xchg
mov
mov
lea
cmp
jne
insb
mov
andl
pop
mov
ljmp
clc
insb
inc
vmovlps
lock
jb
out
loop
pop
es
cmp
jne
in
btr
push
jo
and
pop
fisttpl
sarb
fsubr
mov
and
mov
jo
pusha
je
and
in
lock
out
push
and
data16
or
pop
inc
xor
adc
sahf
loope
mov
leave
mov
xchg
or
movsl
pop
dec
in
or
pop
enter
movsb
mov
inc
sbb
fdivs
pop
mov
sahf
rolb
push
movsl
inc
mov
mov
add
jp
stc
sbb
ss
mov
pop
push
mov
js
push
fcoms
ret
mov
push
and
or
loopne
sub
pop
dec
push
rcll
sahf
dec
and
js
js
add
adc
loopne
aam
sti
adc
jecxz
pop
mov
je
lea
push
je
push
xchg
add
push
sarl
jl
cmp
mov
test
inc
clc
aad
jecxz
add
aam
cmova
jge
addr16
imul
sbb
sahf
push
pop
mov
xor
xor
xchg
ret
pusha
push
leave
enter
cmp
dec
adc
sub
or
add
pop
fmull
jbe
mov
sub
call
mov
adc
test
jo
xor
mov
inc
sub
mov
xlat
call
roll
xor
add
stos
cmp
out
push
jmp
cmp
cmp
inc
imul
jnp
adc
mov
mov
sbb
cmp
cmpsl
pop
push
adc
xor
add
adc
addr16
std
xchg
cltd
mov
idiv
ret
ret
lcall
rcrb
jmp
push
loop
adc
sub
adc
mov
dec
jl
ljmp
je
xor
icebp
cs
push
push
ss
push
push
sub
adc
scas
scas
jne
sub
call
mov
adc
and
rorl
pusha
adc
loopne
xor
inc
xor
xor
jmp
or
pushf
xlat
xor
cs
pop
repnz
and
add
sbb
ds
inc
call
pop
js
outsb
je
xor
shll
outsb
gs
mov
jle
test
test
int3
stos
bts
test
insl
mov
add
bound
dec
inc
mov
mov
lret
dec
int3
push
push
inc
daa
add
add
outsb
sbb
fcomps
xchg
lods
bound
sub
inc
mov
sub
nop
push
ljmp
gs
mov
pop
inc
mov
mov
cwtl
fsts
fiaddl
fisttpl
imul
lcall
or
inc
inc
out
inc
test
pop
xlat
xor
mov
mov
mov
xlat
jne
and
adc
pop
inc
mov
xor
add
jp
je
shlb
mov
movsb
adc
sbb
or
cmc
dec
addl
pusha
mov
cmp
jmp
xchg
mov
or
add
rorb
push
aas
and
outsb
jo
push
fisubrl
xor
sbb
push
std
into
out
or
or
in
je
mov
adc
stos
pop
add
into
sbb
or
jno
fldt
bound
adc
imul
jae
sbb
sbb
sbbb
add
jne
shll
adc
or
push
je
mov
sbb
fists
xor
jns
ds
mov
andb
jbe
outsl
inc
movl
js
add
push
iret
in
fsubs
push
push
out
nop
xchg
add
in
dec
les
or
sbb
xchg
dec
push
jb
mov
mov
inc
mov
fcom
insb
in
out
pusha
push
pop
ficomps
xchg
mov
call
sbb
daa
cs
repnz
add
add
sbb
push
or
and
jl
addr16
lds
faddl
insb
dec
or
stos
insl
mov
add
sahf
orb
pop
or
push
add
xchg
or
or
or
pop
or
pop
adc
or
sbb
fs
sub
js
mov
cmp
sbb
mov
jle
jbe
mov
mov
mov
pop
jae
dec
dec
adc
ja
movb
and
incl
in
add
mov
sbb
pop
mov
out
fabs
shrb
xor
scas
sub
and
push
loopne
ja
lea
xchg
pop
or
stc
xor
test
push
sub
imul
mov
ret
shrl
push
or
mov
outsb
add
lahf
fs
notl
add
and
or
add
shlb
pop
andb
enter
or
add
rorl
orl
lret
stos
xchg
jmp
jmp
roll
insl
mov
sbb
ss
imul
ret
int
jo
icebp
les
imul
cmp
rorl
jno
popa
jb
pop
test
xor
mov
xor
pop
fcomp
adc
fwait
inc
jne
mov
fisubrs
pop
cmpsb
imul
or
in
ficomps
out
jmp
ljmp
pop
jae
repz
pmaddwd
lcall
clc
psubw
or
adc
cli
push
mov
jl
inc
enter
adc
push
add
cwtl
push
jno
push
fcoms
fisttps
lock
rorl
pop
mov
mov
or
pop
je
add
lods
loop
cmp
in
adc
cmpsl
psubsb
call
icebp
mov
nop
shlb
out
pop
pop
inc
sbb
push
rorb
movsl
in
inc
push
gs
in
repz
arpl
pop
rolb
faddl
es
push
push
popa
sbb
jge
lea
xchg
scas
jmp
and
lcall
lock
or
sbb
cmc
or
xchg
push
mov
cli
and
dec
es
insl
mov
jae
mov
xchg
add
sub
pop
or
or
inc
addr16
lcall
stos
pusha
mov
out
andb
add
mov
inc
int
mov
stos
add
gs
and
fucom
in
test
fcompl
cld
data16
mov
sub
ret
mov
inc
and
shlb
imul
adc
testl
adc
out
out
adc
sbb
bound
outsl
fildl
int
adc
pop
movsl
push
lcall
shrl
fsub
test
and
adc
jge
or
xor
loope
mov
or
sbb
ret
aaa
mov
mov
ret
fidivrs
inc
hlt
push
cmp
add
inc
inc
in
adcl
ss
xchg
and
fnsave
int
push
xor
jmp
jecxz
ret
sti
mov
sbb
int3
push
loopne
enter
je
sub
test
xlat
pusha
sbb
cmp
sub
cmp
incl
add
rcrb
popa
sbb
xchg
lret
and
cmp
fsubrp
or
jnp
sbb
xor
pop
mov
pushf
loope
into
sub
stos
mov
aad
cmp
shlb
mov
jmp
push
dec
xor
dec
push
sbb
cwtl
nop
and
in
and
mov
push
add
dec
cmpsb
imul
push
gs
lcall
xor
fs
mov
mov
push
add
push
popa
aaa
cmp
insl
outsb
popa
cmpsb
imul
mov
inc
and
inc
mov
add
jo
mov
mov
fadd
fmuls
call
xor
jecxz
and
jle
sub
addr16
adc
cltd
inc
inc
cmp
xchg
cwtl
jp
and
cwtl
add
mov
scas
jmp
lahf
cltd
mov
pop
push
mov
imul
imul
test
scas
jmp
scas
inc
scas
push
fwait
scas
fldt
bound
adc
cmpsb
imul
push
dec
or
gs
je
sub
addr16
iret
outsb
cltd
shl
jge
out
xor
int3
fisubl
outsb
inc
mov
xlat
mov
fnstcw
adc
pop
mov
shl
fidivrl
rcll
pop
out
ret
inc
or
rorb
xor
dec
outsb
sar
insl
cmpb
dec
je
add
sub
inc
daa
dec
adc
fstl
push
mov
fsubrp
xor
shr
and
cmpsb
and
jmp
cwtl
test
lds
push
cmp
lcall
or
stc
aas
adc
mov
pop
popf
cs
ret
nop
push
movsl
negb
jo
xchg
add
ds
mov
scas
mov
lock
push
cmp
jne
mov
mov
enter
adc
jp
adc
rdmsr
inc
adc
pop
adc
sti
orl
shlb
inc
or
fwait
shlb
jmp
or
push
daa
mov
daa
lock
arpl
cld
jae
sub
addr16
popw
add
push
push
into
xor
sbb
sti
ja
nop
xchg
adc
mov
jge
dec
rorl
jmp
or
mov
add
dec
and
lcall
and
stos
cli
jns
sti
call
adc
mov
xchg
mov
es
mov
int3
jle
cli
mov
std
test
inc
mov
sub
clc
mov
xor
jmp
stos
sti
or
jne
hlt
pop
rolb
cmp
lea
cmpsb
cmp
xlat
push
rcrb
adc
and
out
arpl
push
xor
mov
dec
xor
xlat
push
shll
push
mov
in
aad
xchg
add
adc
rcl
pop
fwait
sub
incl
test
jns
jmp
dec
ret
or
xchg
dec
or
sbb
push
sbb
in
in
xor
inc
gs
adc
dec
lock
icebp
mov
jo
sbb
mov
sti
push
bound
push
add
or
xchg
rolb
push
adc
sbb
push
test
xchg
mov
push
pop
jp
dec
in
or
pop
xchg
push
jmp
adc
dec
ficoml
inc
inc
push
sub
cmpsb
imul
hlt
out
pop
xchg
pop
mov
push
dec
push
les
lcall
jmp
filds
jne
push
push
xlat
xchg
mov
add
cwtl
cmp
lods
sbb
mov
loope
or
or
outsb
cmp
xor
ret
insb
pop
xor
cs
jl
lds
mov
popa
pop
jmp
mov
fwait
mov
cli
sbb
push
mov
fs
movsl
ljmp
shll
imul
push
mov
add
ficoml
clc
daa
mov
inc
jl
in
rol
sub
lret
loope
and
enter
push
jno
or
mov
push
jl
push
sub
leave
xor
orb
push
push
cmp
pop
mov
jbe
sarb
pop
cmp
or
ja
push
call
push
add
jne
ret
lea
sub
stc
or
mov
rol
mov
ret
sub
pop
add
add
movsb
or
scas
sbb
in
and
pop
pop
or
or
in
mov
add
clc
or
repnz
repnz
test
sbb
fsubs
jge
or
hlt
notb
push
push
in
mov
mov
daa
or
add
aad
sbb
mov
pusha
pusha
pop
pop
sbb
out
in
fs
insb
test
in
xor
dec
sbb
insb
xor
or
push
adc
out
jo
orb
sahf
jne
mov
dec
push
xlat
jge
push
call
push
mov
aam
iret
or
xor
loopne
fadds
pushf
sbbl
mov
adcb
inc
jg
add
add
or
and
lock
push
adc
call
adc
stc
rcrb
xchg
mov
sbb
sub
adc
mov
lods
inc
mov
loopne
js
dec
push
adc
mov
and
insb
inc
faddl
sarb
or
add
addb
xor
inc
adc
and
cmpb
adc
jl
shl
xorl
or
push
or
xor
push
push
adc
dec
cmp
lods
cltd
mov
lea
stc
and
fs
pop
sub
mov
push
cmp
jb
lcall
orps
scas
fldl
or
sub
sbb
push
fwait
inc
inc
add
or
lret
mov
push
test
push
ljmp
inc
or
cmp
shlb
rolb
pop
mov
into
dec
ja
sbb
fnstenv
cmp
cs
sub
outsl
mov
ret
inc
mov
mov
sbb
lret
fistpl
fs
je
add
je
cmp
shlb
pop
push
aad
jb
xchg
sbb
xchg
push
xor
or
daa
das
push
or
push
mov
adc
and
pop
aas
pop
sbb
je
pop
mov
das
roll
cmp
mov
loopne
adc
mov
cmp
pop
jnp
add
xor
mov
or
ja
sub
mov
inc
jmp
jecxz
jne
sub
adc
sub
testb
xchg
in
mov
jp
push
sbb
cs
nop
jae
cli
scas
mov
in
adc
add
mov
mov
pusha
clc
push
sbb
ret
push
push
mov
mov
jno
lods
cld
std
mov
push
fimull
dec
rcrl
sets
sbb
push
xor
inc
lds
inc
mov
add
movl
or
inc
mov
fistl
mov
or
fisubl
or
pop
sbb
xchg
insb
add
mov
mov
push
ss
jmp
xor
cwtl
and
push
mov
pop
call
mov
or
enter
push
add
push
cmp
out
pop
arpl
cmp
cmp
sti
and
push
and
sub
scas
out
mov
es
sbb
mov
test
dec
push
scas
sub
dec
inc
push
xchg
or
fidivl
jge
shlb
add
cmpsl
imul
and
or
xor
cld
sar
ss
add
pop
pop
in
xor
push
and
pop
iret
pop
push
adc
jb
enter
std
repnz
fsubs
mov
mov
add
hlt
xor
adc
sub
cs
sbb
xlat
and
mov
inc
scas
cmp
jae
mov
out
and
push
cmpsb
addps
xchg
ret
dec
inc
inc
inc
push
or
add
xor
inc
sbb
call
out
and
adc
mov
xor
add
push
push
loop
pop
ret
push
sub
lds
xchg
lds
sub
jle
imull
or
or
jmp
mov
sbb
mov
mov
fimuls
std
cli
loopne
mov
sub
andl
fwait
xlat
rorb
add
adcl
ret
adc
and
dec
push
push
jne
sub
push
xchg
push
mov
dec
hlt
inc
clc
or
sub
and
dec
aaa
mov
insb
add
add
and
xor
mov
fstpt
pop
or
cwtl
aad
fimull
sahf
hlt
pusha
call
cli
push
lock
xor
sbb
add
in
das
rcll
lock
adc
xor
mov
xchg
outsb
xor
and
push
pop
push
sbb
in
add
adc
sti
imul
into
or
pop
bound
pop
adc
xchg
mov
sbb
push
adc
hlt
xor
inc
adc
jle
arpl
jbe
hlt
call
xor
mov
jmp
je
jo
xor
xor
push
pop
xor
pop
push
int3
add
fwait
lret
push
xor
sbb
sbb
inc
cmp
sbb
sbb
xor
fsubl
loopne
call
lea
push
jle
jp
jge
jmp
sub
push
lods
test
imul
xor
pop
add
pop
mov
mov
lds
jae
fs
cld
add
enter
adc
enter
sbb
and
xchg
xchg
mov
mov
push
jb
xchg
sbb
mov
add
add
mov
push
in
adc
pop
in
or
add
push
pop
and
sahf
sbb
xchg
cmp
jbe
out
mov
rcrb
and
mov
or
add
pop
in
dec
mov
ds
mov
add
push
mov
jle
inc
inc
and
inc
adc
jae
adc
pop
xor
mov
enter
xor
add
cld
or
add
hlt
lock
call
in
fcom
xor
xor
shlb
sub
mov
pop
mov
inc
js
or
mov
nop
dec
xor
or
cmp
or
inc
mov
xor
mov
and
ds
cld
sub
adc
sub
pop
mov
add
pop
ljmp
mov
repnz
adc
imulb
lods
push
add
fcmove
lods
adc
je
mov
mov
add
prefetchnta
xor
pop
out
stos
and
push
lcall
push
push
xchg
outsl
lcall
dec
cmpsl
add
add
add
mov
adc
and
inc
push
pusha
imul
sub
push
push
aaa
dec
shll
nop
cmpb
dec
bound
cli
cmpsb
daa
insb
mov
rolb
mov
cmpsb
mov
fs
add
cmpsb
xchg
pushf
cmpsb
mov
lcall
call
scas
imul
adc
sbb
cmpsb
jmp
scas
hlt
pop
in
add
inc
add
cmpsb
imul
cmpsb
jmp
call
mov
mov
pushf
nop
pop
stos
movsb
shll
scas
stos
mov
jb
shll
sub
clc
push
iret
or
les
xor
pop
adcb
adc
xor
rorl
jae
push
add
or
add
add
jmp
inc
fists
fwait
cmpsb
pusha
dec
cmpsb
stos
daa
insl
popa
imul
xor
outsl
pop
outsb
xor
jo
add
sub
faddl
daa
cmovg
cmp
xor
push
adc
push
daa
ror
das
stc
pop
or
pop
pop
sbbl
das
gs
lods
insb
pop
push
insl
or
add
jp
cltd
jp
or
mov
mov
mov
add
mov
jbe
sbb
and
pop
cs
cmp
shlb
addl
xor
or
pop
push
xchg
add
insb
addb
cwtl
push
and
shlb
dec
in
movsb
adc
xchg
cmp
add
adc
jne
fadds
enter
adc
js
cmp
lods
adc
nop
out
xor
mov
sub
cli
mull
mov
adc
std
mov
inc
jb
popa
je
push
push
add
jb
jne
pushl
popa
insb
push
jb
adc
add
je
outsl
fs
gs
popa
outsb
lea
insb
add
gs
jle
mov
inc
fs
jae
pop
add
insl
cmpb
iret
push
adc
gs
jmp
ds
cmp
sbb
jge
mov
out
in
inc
imul
fldl
outsl
jae
push
aad
ja
jno
dec
popa
jae
inc
jb
movsl
or
mov
pusha
cmpsl
dec
jne
fisttpl
gs
mov
mov
dec
outsl
popa
pop
bound
jb
sbb
jmp
imul
jbe
mov
sbb
gs
xchg
cmp
je
xchg
dec
insl
mov
xor
dec
jae
jo
pop
mov
fcmovnu
push
je
and
outsb
push
imul
pop
imul
mov
movsl
mov
fwait
es
add
push
sub
inc
push
fcmovnu
or
jne
outsb
je
dec
loope
fstl
inc
xchg
mov
fs
push
lds
inc
jns
loope
adcb
or
sub
aad
test
es
call
roll
je
jnp
fwait
jmp
outsl
outsb
and
push
mov
negb
mov
or
jae
mov
aaa
push
push
cld
flds
lds
insb
sbb
jne
xorb
mov
push
fiaddl
outsl
adc
jbe
sbb
push
mov
orl
and
inc
sbb
lret
fistpl
adc
jo
outsb
or
push
dec
inc
dec
fcoml
and
popa
das
pop
sbb
xor
xchg
xchg
add
loopne
dec
insl
cs
or
js
push
xchg
mov
in
decl
aas
aas
xor
inc
pop
push
add
pextrw
sbb
jne
imul
pusha
fdivrl
pop
inc
js
mov
insl
lcall
add
add
subl
outsb
insb
imul
shrb
arpl
out
imul
mov
jo
je
stos
adc
jbe,pn
mov
add
or
add
add
jae
lret
inc
mov
je
push
pusha
fstpt
push
cmp
enter
dec
fwait
dec
outsb
in
aaa
jmp
dec
das
mov
insl
bound
push
or
adc
mov
in
or
loope
jbe
fildl
imul
add
imul
loop
or
mov
ds
mov
mov
fisttpl
mov
add
lods
jae
imul
xor
add
push
lds
push
aaa
or
push
sbb
movntq
push
movsl
pop
ret
jo
dec
cmc
addr16
xchg
sarb
pop
jecxz
sub
cmp
pop
jnp
xchg
data16
das
push
popa
jbe
adc
inc
mov
xor
mov
insl
sbb
adc
dec
inc
dec
push
dec
roll
lods
shll
insb
jne
je
jnp
pand
mov
push
inc
inc
pop
or
adc
add
mov
insb
or
add
adc
sub
subb
and
aas
xchg
xchg
cltd
and
bound
sbb
cmp
sbb
clc
jecxz
push
insb
cs
dec
fdivp
jg
pop
lods
loop
leave
lds
pop
pop
aas
lock
sub
out
or
mov
test
inc
je
sbb
shrw
add
jmp
in
lock
push
push
xor
testl
test
push
movsb
push
inc
cmp
adc
insl
sbb
insb
dec
gs
fimuls
into
icebp
or
in
paddsb
insl
ret
mov
add
insb
cwtl
jae
cmp
loopne
xor
mov
lods
inc
imul
andl
adc
dec
and
xchg
fstl
inc
add
or
mov
push
mov
xorl
jecxz
divb
and
add
cltd
ret
pop
sbb
push
adcl
subl
gs
inc
xchg
push
inc
and
xorb
je
mov
or
add
mov
mov
push
mov
pop
or
jmp
push
xlat
lods
negb
inc
cmp
pusha
pop
pop
ficoms
mov
or
and
outsl
xlat
cmpsb
fdivs
fisttpll
jg
dec
jae
adc
cmp
and
push
test
mov
push
mov
das
cld
test
enter
pop
cmpsl
dec
test
inc
aaa
and
xor
jno
inc
cwtl
xchg
push
dec
sbb
popf
fidivrs
icebp
fists
xchg
mov
mov
mov
sarl
inc
pop
inc
push
inc
inc
push
xchg
mov
outsl
addr16
cmp
inc
push
inc
push
adc
movsl
inc
pop
xchg
test
cld
jecxz
popf
or
cmp
or
push
push
dec
dec
inc
dec
dec
inc
insb
sbb
dec
jne
decl
push
push
scas
mov
adc
sub
pop
ja
or
xchg
sub
and
test
and
add
mov
inc
dec
inc
dec
out
fbstp
adc
pop
dec
push
dec
push
pop
and
insl
lods
pop
loopne
inc
and
pop
push
pop
and
mov
sbb
pop
cmpsl
pop
sub
adc
mov
add
dec
cmp
add
mov
jecxz
fmulp
mov
xchg
aas
push
lcall
in
and
addr16
and
ret
push
add
pop
sbb
in
add
xor
mov
arpl
or
cmp
in
dec
add
mov
or
icebp
filds
sbb
mov
push
mov
popa
repz
pop
scas
xchg
pop
test
std
sub
push
cld
ljmp
pop
mov
dec
rolb
mov
mov
and
add
es
test
mov
push
adc
push
dec
or
cmp
js
sbb
push
sub
inc
pop
imul
pushf
inc
data16
or
sarl
inc
cmpsb
jno
pop
push
sti
popa
add
xchg
ja
sub
inc
ret
ds
or
inc
jmp
and
add
data16
insb
xor
das
and
or
xor
dec
leave
adc
inc
stos
fadds
xor
xor
add
incl
or
daa
mov
fdivr
popa
add
sub
mov
mov
sub
int
mov
and
je
pop
jl
add
je
mov
sub
iret
xchg
aas
fwait
push
sub
mov
fists
lea
adc
adc
or
push
or
jo
sub
xchg
or
addb
cmp
fadds
pop
push
hlt
add
mov
xchg
adc
nop
cmp
cmp
sti
pop
inc
mov
adc
xor
sbb
sti
push
push
imul
and
add
cmp
cmp
push
inc
stos
bound
mov
dec
xchg
mov
mov
inc
or
inc
and
or
adc
add
sahf
sbb
and
lock
out
popa
or
inc
xchg
mov
mov
inc
inc
je
int
popa
inc
cwtl
sub
or
adc
push
mov
lret
xchg
int3
add
or
ror
sub
inc
xchg
mov
xlat
jo
dec
sub
jne
fidivl
lret
adc
fdivl
xor
scas
fwait
adc
daa
in
pop
in
aaa
lock
adc
outsl
aaa
outsb
inc
icebp
push
xchg
jae
aaa
mov
add
clc
stc
dec
leave
mov
cld
adc
jecxz
push
dec
call
addr16
hlt
add
pop
nop
mov
adc
and
mov
daa
xchg
or
add
rorb
push
or
xchg
sbb
add
jne
stos
fidivl
jle
jbe
inc
adc
es
jmp
lods
sub
mov
andb
xchg
push
sar
xor
or
push
stc
push
push
cltd
in
push
adc
sub
add
inc
xchg
mov
push
jo
mov
mov
call
inc
add
mov
inc
or
pop
mov
adc
add
in
fmull
pop
adc
ret
sbbb
jmp
pop
fisttpl
sub
rcrb
je
js
mov
inc
push
mov
popaw
int3
adc
and
adc
fistpl
mov
inc
xchg
mov
std
push
push
xor
notrack
push
mov
test
push
lds
fimull
mov
ret
adc
rolb
mov
sub
lock
mov
loopne
or
out
add
push
test
dec
mov
test
in
psubusb
ds
movswl
cmp
cmp
fdivr
mov
dec
or
sbb
test
jge
rol
add
roll
repz
sar
out
je
in
inc
jae
inc
test
dec
or
push
add
add
add
jecxz
push
testb
rol
and
js
call
push
push
adc
push
bound
pop
xor
xchg
add
and
mov
jmp
ret
dec
test
add
mov
pop
cmp
dec
es
lock
adc
out
push
xchg
insb
jbe
rol
sub
inc
movsb
sbbl
in
push
xor
adc
daa
adcb
fs
mov
add
out
push
jmp
adc
mov
fildl
xor
push
xor
add
or
or
out
adc
jo
sub
adc
xchg
add
shufps
adc
and
xorb
jo
push
stos
scas
xchg
orl
add
and
inc
add
call
popa
lcall
add
scas
inc
sbb
push
push
xor
inc
cmp
bound
cmp
adc
es
or
hlt
push
sti
outsb
sub
xor
xor
test
mov
add
enter
xor
sti
cs
nop
adc
pop
mov
test
jge
cmc
cwtl
cmp
add
add
pop
cld
and
add
in
adc
xchg
push
call
pushf
or
add
jo
cmp
or
mov
outsl
loopne
cmp
ja
xor
mov
das
sub
jnp
inc
sbb
lods
adc
mov
stos
sbb
test
mov
jnp
out
int
fcmovne
push
into
fucom
repz
stc
pusha
outsl
inc
push
pushw
gs
out
popa
fstl
sbb
and
cmp
and
add
jp
sbb
mov
and
jne
cmp
outsl
jge
mov
out
aas
jnp
fstpt
call
sbb
push
mov
mov
jecxz
jb
jg
jbe
sbb
in
les
cmc
push
push
and
dec
jnp
popa
nop
push
xor
or
add
pop
and
sub
and
test
adc
xorb
jl
jo
arpl
pushaw
shl
push
push
mov
mov
sub
mov
inc
into
test
std
sahf
push
lods
fsts
add
add
push
sar
and
push
setl
dec
and
cmp
pusha
cmp
mov
out
and
xor
cmp
loop
inc
mov
jp
shl
inc
cmpsb
jnp
pop
mov
adc
add
adc
and
popf
sub
jl
and
xor
push
inc
rcll
into
lods
ja
aad
jbe
js
sub
fs
inc
mov
test
pop
aam
hlt
jmp
push
push
shrl
daa
push
cmpb
fisttpl
in
mov
test
xchg
inc
popf
mov
mov
or
add
xlat
jmp
shlb
mov
in
and
xorb
syscall
xchg
adc
cmp
fisubrs
lock
es
repz
fcoms
jno
out
outsb
sub
mov
sub
mov
push
xchg
xchg
push
cld
jge
lods
mov
dec
add
mov
cld
cmp
mov
insb
fiaddl
xor
mov
stos
sbb
mov
cmp
inc
les
or
cltd
jns
pop
cmpsl
mov
rcll
scas
pop
add
in
mov
mov
xchg
cltd
cmp
ss
repnz
repz
call
dec
negb
xchg
aad
add
xchg
add
push
push
adc
mov
sbb
lcall
call
les
or
or
xorb
shlb
test
push
mov
adc
xchg
outsb
and
mov
jnp
and
cmpsb
push
nop
mov
stos
adc
xor
inc
shl
sbb
clc
aaa
and
inc
mov
adc
movsb
or
push
xchg
addb
add
mov
subb
and
adc
jne
ljmp
call
sbb
sbbb
lds
jb
mov
add
inc
mov
xor
imul
mov
push
stos
jnp
mov
push
insb
mov
xchg
mov
add
jl
push
mov
cwtl
push
sbb
push
mov
push
mov
out
push
push
sub
popf
in
shll
and
fcoml
sbb
push
mov
pop
dec
adc
fldt
rorl
mov
push
cs
or
mov
jmp
mov
inc
mov
or
inc
mov
ds
sbb
repnz
testb
xor
push
push
insb
add
push
insb
push
pop
sbb
mov
push
fdivs
cmp
adc
nop
repz
sub
adc
adc
pop
mov
inc
icebp
adc
inc
and
gs
fnsave
add
cli
iret
push
sub
scas
mov
adc
jmp
popa
imul
pop
cmp
and
call
out
adc
out
sbb
fs
std
or
int3
add
int3
and
lea
inc
xchg
insb
push
inc
cmp
mov
mov
rorb
pushf
in
mov
out
and
shll
shl
add
mov
sbb
pcmpeqd
and
adc
inc
dec
xlat
popf
insl
cmp
pop
xchg
pop
movsb
add
xor
aam
cli
cmpsb
imul
cmpsb
imul
cmpsb
imul
scas
cmpsb
imul
fdivrs
movl
jmp
pusha
outsb
mov
xor
and
aaa
and
jo
fdivl
lods
cmp
pop
insb
adc
cmp
adc
or
pop
addb
mov
stc
add
and
pop
and
iret
inc
jne
sub
popa
add
push
outsl
loop
inc
push
adc
push
nop
dec
mov
mov
add
imul
and
push
mov
popa
inc
adc
inc
add
dec
test
mov
cmp
dec
outsb
jo
add
mov
insl
dec
sub
add
sbb
fists
or
cmp
loopne
add
das
inc
addr16
add
add
popa
bound
adc
xchg
pop
lea
or
push
xchg
push
adc
mov
outsb
je
outsb
inc
inc
inc
sub
insl
arpl
sbb
andb
push
xchg
lret
push
add
jae
je
je
add
loopne
xor
mov
adc
jae
push
sbb
mov
xchg
add
popa
insl
push
or
add
loope
cmp
add
int
test
ljmp
jns
mov
popa
je
push
test
dec
sub
mov
lock
add
lret
sub
loope
add
inc
cmp
push
mov
jns
jl
cmpsl
rcll
ret
push
cmp
lods
fdivrl
sbb
mov
push
aad
out
add
sar
pop
xor
pop
adc
lret
mov
insl
call
gs
outsl
insb
sbb
jne
cmpsl
movsl
ret
imul
mov
andb
cmovb
lahf
roll
test
addb
je
add
mov
call
jle
or
sbb
nop
xchg
add
cltd
idivb
lcall
xchg
outsb
mov
cmp
movsl
xlat
ja
mov
mov
dec
cld
jg
xor
add
mov
in
je
in
sbb
mov
ljmp
jbe
cmpsb
in
ljmp
mov
xchg
jmp
dec
or
int3
lahf
pusha
into
push
into
pop
xor
cmp
dec
pavgb
mov
cmc
mov
jno
xor
movsb
mov
cmp
lcall
sub
sarb
xchg
enter
cmp
mov
shll
push
stos
add
mov
mov
inc
loopne
and
insl
call
outsb
test
stos
mov
and
xchg
pushf
or
aaa
inc
imul
out
aaa
inc
lret
into
int3
in
fistpll
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
cmovp
ja
inc
xchg
scas
pop
sbb
clc
idivl
jg
stc
xor
add
xchg
pop
push
jnp
dec
mov
dec
cld
mov
fistl
or
into
xlat
jbe
jmp
movsl
or
loopne
pop
es
adc
cltd
sub
xor
mov
out
jne
orl
pushl
fistl
ljmp
xchg
out
loop
jp
push
mov
adc
sbb
xchg
cmp
cld
xor
sbb
mov
out
lcall
test
xor
out
and
clc
and
add
cmp
jle
cmp
inc
insb
jno
cmpsb
cmp
sbb
in
shrl
bound
jle
aad
and
ja
adc
dec
lahf
fidivrl
lods
test
push
pop
push
xlat
cmpsb
repz
stos
inc
push
cltd
xchg
xlat
push
icebp
call
pop
std
std
mov
xor
inc
into
add
lret
bswap
and
mov
pop
gs
repnz
sbb
jge
dec
in
push
adc
sar
add
in
pusha
mov
pop
sub
add
call
inc
adc
in
xchg
push
jbe
test
xbegin
enter
faddl
add
cmp
outsl
inc
inc
jno
xchg
xchg
sbb
push
mov
and
dec
xor
or
pushf
mov
inc
mov
mov
mov
incb
sub
js
stos
mov
cmp
ljmp
aaa
shlb
mov
aaa
fwait
cmp
jp
stc
mov
les
cld
push
sbb
jmp
maskmovq
mov
sub
xchg
dec
movsb
dec
test
sub
or
or
push
loopne
add
mov
lock
lcall
sbb
insb
and
cmp
cld
jno
adc
mov
addl
fld
test
aaa
cmp
in
imul
mov
add
movsb
and
repnz
dec
ljmp
jg
xchg
in
aaa
xchg
pop
cmp
cs
outsl
dec
sub
push
aad
add
jle
iret
movsl
mov
orl
movsl
mov
mov
sub
dec
test
cmpsl
lret
int
sbb
xchg
into
adc
dec
mov
jae
nop
loope
loop
mov
pop
lea
jecxz
pushf
adc
scas
jb
adc
mov
add
hlt
dec
inc
mov
mov
mov
and
iret
into
add
sti
call
insb
mov
idivb
xor
adc
sbb
ficompl
nop
imul
jmp
or
ret
cwtl
jne
stos
sub
mov
jecxz
sahf
into
outsl
add
in
xor
jg
insb
lods
arpl
mov
rcl
sbb
test
xchg
dec
inc
out
inc
mov
mov
pop
pop
stos
jecxz
mov
mov
shlb
cmc
into
test
jnp
adc
jno
dec
les
lea
into
or
in
out
pop
mov
fmul
jge
cltd
in
dec
in
jno
pop
push
rclb
das
adc
test
popa
lahf
add
or
clc
fwait
xor
movsl
and
aaa
clc
enter
jo
mov
inc
insl
mov
ja
mov
inc
xchg
enter
cs
xor
mov
int3
lods
jge
sbb
clc
dec
inc
jnp
aam
pop
insl
ljmp
cmpsl
test
fstl
out
pop
std
add
xor
push
bound
test
add
sarl
loope
inc
ljmp
stos
enter
xchg
and
lret
int
sbb
inc
fprem
inc
mov
xlat
jge
pushl
jns
cltd
pop
movsl
cmc
push
int3
cmp
sub
sbb
pop
call
inc
test
incl
add
dec
addl
cld
ss
insl
dec
lret
test
stos
insb
mov
adc
sbb
insb
das
ss
push
xor
mov
out
jns
pop
leave
aas
aad
jg
call
in
mov
lret
push
movsl
sbb
in
push
add
jae
scas
enter
rcll
inc
stos
mov
arpl
adc
fbld
xchg
aad
and
mov
mov
out
mov
jl
pop
stos
mov
jecxz
mov
loope
and
sarl
test
int3
arpl
js
das
aaa
mov
mov
or
mov
xlat
je
cltd
jg
decl
and
loope
mov
adc
push
sub
into
cvtps2pi
dec
test
dec
test
mov
dec
add
and
push
cmc
add
into
imul
or
dec
inc
aas
cmp
icebp
idiv
pushl
adc
dec
ja
into
jb
xor
pop
jo
jecxz
mov
push
rcll
xchg
lret
mov
clc
push
ret
mov
aaa
loop
jns
cld
call
bound
cmpl
scas
das
stc
mov
jge
test
movsb
mov
loope
aam
into
ret
cli
mov
jns
ret
mov
ret
jg
and
dec
xchg
decl
mov
xor
jecxz
test
pusha
hlt
pop
mov
xchg
or
push
and
aam
pop
ret
or
jg
adc
test
xchg
into
movsl
add
shl
inc
out
repz
incl
mov
scas
lret
xchg
cmp
loop
sar
sbb
dec
insl
xchg
ljmp
outsl
mov
sarb
loope
enter
and
jge
mov
aas
dec
int3
cmp
mov
mov
sbb
push
push
lret
insl
out
sub
sub
outsl
call
xchg
loope
mov
hlt
inc
push
jo
scas
adc
jb
into
jp
ret
loope
movsl
rcrb
adc
sbb
dec
stos
dec
int3
inc
ljmp
sbb
cmp
stos
lock
mov
pushl
xlat
jo
sub
sbb
push
daa
or
sub
xchg
adc
add
test
or
pop
jne
mov
adc
incb
jns
xchg
stos
jle
mov
adc
sbb
data16
cmp
and
pop
add
iret
arpl
das
cmpb
ret
push
sub
and
gs
adc
mov
pop
cs
dec
cmp
repz
ret
xrelease
xor
stos
ds
ljmp
push
jmp
sbbb
jae
mov
jle
jbe
mov
iret
mov
cmp
mov
xchg
push
into
mov
jb
jg
xchg
dec
mov
repz
addr16
movsl
add
add
jmp
bound
ret
dec
es
pop
jne
scas
das
jge
mov
add
mov
dec
cmp
repz
int
push
into
fidivrs
xchg
insb
and
xor
sti
call
in
push
stc
add
push
mov
or
test
jg
rcll
into
push
lret
jg
and
push
sub
xchg
test
push
xchg
popf
add
push
xchg
stos
push
sub
fstps
ret
fwait
in
or
lcall
cmp
std
pop
into
movsl
and
mov
enter
jmp
mov
into
sbb
lcall
aad
dec
mov
xlat
jb
pop
mov
cmp
call
mov
sub
xor
cs
es
lods
inc
test
or
or
cld
incl
ret
jne
outsl
mov
inc
mov
popa
ret
outsl
fmulp
movsb
push
pop
mov
and
aaa
pop
ret
mov
popf
pop
adc
cmpsb
jne
lahf
pusha
jmp
mov
mov
adc
mov
dec
ljmp
lea
xchg
in
xor
mov
push
sbb
repnz
aas
mov
incl
imul
addl
mov
add
fiaddl
xchg
arpl
mov
ret
mov
jg
and
das
lock
add
fisubl
ret
in
jg
jmp
call
insl
aam
push
int3
fisubrs
adc
ror
lea
push
sbb
fiaddl
dec
loop
std
ljmp
aam
mov
js
add
dec
je
call
jp
aas
adc
or
jnp
and
xchg
or
or
pop
fdivr
repnz
pop
push
cmp
cmpl
ljmp
mov
push
sbb
cmp
adc
and
pushl
in
mulb
fadd
adc
stos
and
jne
or
add
xchg
scas
mov
inc
insb
jbe
adc
pop
imul
cs
push
or
adc
and
and
add
jg
push
cmp
rorb
jo
ror
jl
xchg
rcrl
negl
jge
jno
xchg
stos
xor
aaa
mov
out
mov
aad
mov
sahf
test
stc
inc
incl
mov
fcompl
lock
icebp
icebp
mov
ret
ret
icebp
lock
fnstsw
mov
mov
mov
ret
ja
mov
ret
rcrb
sub
or
inc
pop
xor
and
in
jne
in
in
mov
dec
dec
shlb
loop
sub
and
mov
cmp
out
add
push
in
lods
or
jg
mov
stos
lods
test
sbb
and
pop
pop
adc
add
dec
jmp
jmp
mov
xchg
addr16
sarb
rolb
lret
lret
and
dec
aas
iret
push
mov
pushf
pop
in
js
dec
cltd
and
decl
icebp
aam
push
leave
popf
shrl
enter
test
int
dec
adc
and
dec
clc
add
add
rol
movsl
hlt
jne
mov
ljmp
adc
inc
pushf
test
cmc
mov
adc
stc
sub
push
test
lock
jo
pop
ret
jne
or
outsl
pop
sub
lods
shll
sbb
jg
ds
dec
jns
loop
addr16
mov
pushl
mov
xchg
lods
lock
xchg
push
icebp
outsb
push
add
imul
mov
sub
aas
and
rcl
arpl
es
inc
nop
add
pushf
das
int
inc
in
inc
les
mov
mov
sbb
mov
cmp
in
call
jl
fnstcw
cltd
or
push
std
mov
outsb
dec
mov
dec
mov
loopne
add
add
inc
in
xchg
mov
inc
dec
push
and
sbb
push
xor
pop
clc
shll
popa
mov
mov
pushl
pop
jo
out
in
jmp
mov
lcall
or
push
jp
mov
jg
push
cmp
pop
bound
jle
aad
test
cwtl
mov
mov
pusha
xchg
mov
outsl
push
je
push
cmp
ret
iret
repnz
mov
enter
or
lock
outsl
ffree
lret
and
push
pop
pop
les
ret
push
jo
jno
rcrb
and
aam
mov
jo
call
fstpl
add
dec
je
aam
or
movsl
jg
stos
push
in
inc
jno
sarl
pusha
inc
pop
fstp
roll
pushl
adc
sub
xor
xor
xor
jg
mov
add
xchg
xor
xor
xor
xor
xor
xor
xor
lret
xor
add
incl
int3
xor
ss
ss
ss
ss
std
or
pushl
imul
jge
test
mov
popf
mov
into
ss
mov
aaa
dec
aaa
push
aaa
pop
aaa
insb
aaa
jb
jp
xchg
aaa
popf
aaa
mov
aaa
mov
cld
pushl
aaa
shll
fdivl
add
or
sbb
inc
dec
cmp
cmp
ja
jle
pushl
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
aad
fnstsw
jecxz
jmp
cmp
sbb
aas
cmp
dec
cmp
mov
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
cmp
cmp
cmp
cmp
call
cmp
xor
cmp
pop
cmp
js
jle
test
mov
mov
mov
push
fistpll
out
out
cmp
or
pop
ds
gs
mov
ds
ds
jle
pop
test
push
xor
add
xor
aas
add
rolb
incl
adc
mov
mov
cmpsb
and
popf
sub
sbbl
pop
or
or
inc
add
or
add
xorb
add
orl
add
rolb
add
mov
pop
pusha
pop
and
fists
enter
fisttps
testl
test
add
mov
cmp
and
add
insb
xchg
nop
xor
jp
add
add
and
push
or
or
pusha
inc
push
add
add
call
add
lret
add
add
add
test
inc
orb
sub
sbb
daa
or
ljmp
dec
push
ret
xor
std
mov
xor
xor
das
add
xor
dec
aad
andnps
test
loopne
fisttpll
fs
ja
jae
push
inc
jb
push
and
mov
or
push
imul
cs
or
jae
and
jbe
inc
inc
cmp
jl
or
ja
cld
mov
je
push
jb
icebp
sbb
aas
xor
pop
push
insb
adc
mov
jg
xor
pop
sub
sahf
inc
sti
pop
xorl
outsl
add
decb
dec
inc
push
sbb
adcb
adc
jae
popfw
inc
lock
pop
push
insl
or
xchg
mov
imul
fs
incb
and
or
aad
call
rcl
add
pop
dec
ds
cmpsl
clc
mov
push
jb
shll
xchg
dec
fs
testb
push
push
add
andb
call
lock
xchg
add
mov
mov
in
adc
aaa
jbe,pt
loope
adc
dec
dec
add
imul
loope
xor
dec
inc
pop
inc
inc
xchg
mov
add
repz
xor
dec
add
push
pop
clc
or
push
insl
cmp
int3
not
rorb
add
sbb
mov
xor
in
movsb
inc
out
sub
adc
fbstp
push
pop
mov
push
inc
dec
mov
cmp
inc
outsl
nop
stos
outsb
outsl
aaa
add
push
jae
les
sub
dec
outsl
jp
scas
andb
popa
das
xor
xor
inc
arpl
sub
addr16
sub
or
jo
and
mov
and
pop
mov
jne
inc
and
jne
in
mov
imul
sub
or
add
bound
outsb
pusha
or
sbb
push
subl
jbe
or
inc
insl
jae
inc
insb
rcrb
ret
lock
jo
fiaddl
fstps
inc
in
inc
imull
das
sub
fldl
pop
jle
pop
fdivs
jo
cmp
ja
sub
aam
insl
fcomps
int
add
inc
inc
inc
mov
mov
add
arpl
xchg
stos
ret
sbb
pop
xchg
push
add
pop
add
dec
jmp
and
pop
push
push
sub
sbb
sahf
push
lods
adc
in
add
fcmovnu
sub
add
xor
cmp
and
or
sbb
cmp
sub
sbb
sub
fs
cmp
sbb
pop
insb
jbe
sbb
pop
add
pop
or
adc
pop
push
pop
scas
jne
out
and
pop
jb
or
inc
pop
dec
xor
or
sbb
adc
pop
push
fdivrl
insb
jb
repnz
adc
push
xchg
std
cmc
lret
sbb
movups
add
adc
push
add
xchg
popf
std
add
add
add
or
add
jne
xchg
jne
push
aaa
sbb
add
jnp
sbbb
push
sbb
sbb
or
and
outsl
adc
add
sbb
clc
sbbb
sbb
push
dec
fsts
jbe
add
or
add
add
add
xchg
sub
pushf
movzbw
leave
dec
lock
or
aam
sbb
sti
xor
fwait
imul
aas
cs
bswap
stos
call
jge
inc
sub
jns
xor
jge
add
les
sub
adc
mov
mov
sar
mov
fisttpll
add
inc
je
dec
ljmp
pop
mov
fstpl
call
in
push
mov
fisttpll
and
xor
and
dec
mov
pop
add
test
int
pop
call
repz
add
fucomp
jp
mov
sub
jmp
ss
shrb
nop
test
sbb
mov
mov
enter
fdivrp
aad
loopne
jmp
jmp
roll
loopne
push
inc
mov
mov
lret
and
and
aad
mov
rclb
jo
and
push
xor
pop
jmp
adc
inc
aam
sbb
pushf
push
fsubrs
dec
incl
inc
push
fldt
add
sbb
aad
insl
fwait
sub
push
inc
push
insl
clc
push
pushf
sbb
xchg
ljmp
js
call
loope
inc
stos
movsl
stc
cmp
not
pop
jmp
xor
mov
jbe
pushf
jmp
xor
ds
in
ret
or
xlat
mov
push
out
and
es
mov
in
add
mov
mov
inc
daa
cwtl
into
scas
add
iret
xor
addr16
mov
fisttpll
mov
push
scas
mov
add
mov
in
mov
jmp
pusha
rdtsc
mov
adc
out
in
daa
pusha
cmp
push
scas
int
addl
cmc
ret
xor
inc
push
ret
call
call
and
pusha
or
fcoml
stos
pop
nop
fs
out
mov
sub
call
push
test
sub
std
dec
push
sub
lret
stc
cmp
xor
scas
adc
lcall
dec
adc
and
add
mull
pusha
call
outsb
call
jmp
pushl
jl
stos
call
arpl
jmp
mov
or
ret
sbb
sbb
jne
sbb
sbb
add
push
add
xchg
mov
in
call
sbbb
push
xor
mov
cmp
pop
mov
pushf
out
sub
outsl
aaa
inc
sbb
cmc
add
cli
or
icebp
shl
sti
or
in
notb
shrb
sar
popa
pushf
test
popa
cmp
inc
ja
into
pop
pusha
inc
inc
add
pushf
mov
in
imul
hlt
repz
lds
sbb
inc
xchg
incb
pop
std
call
add
pmaxsw
cs
cmp
arpl
push
add
push
push
dec
inc
mov
ds
pop
push
sahf
mov
and
pop
ret
add
inc
inc
add
mov
setne
add
mov
jmp
mov
cmpsb
mov
sbb
mov
or
xchg
or
loop
jnp
lods
jecxz
enter
xchg
adc
mov
push
idivb
lea
cwtl
loop
hlt
mov
mov
pusha
xor
add
jb
shll
adc
pop
mov
xchg
shld
push
mov
lcall
call
add
adc
mov
ja
pop
push
mov
call
mov
mov
stos
inc
popa
mov
adc
sub
lcall
cmp
push
mov
lea
iret
inc
scas
cmpsb
or
fisubs
out
data16
enter
shr
sarl
or
push
push
in
push
daa
mov
fbstp
mov
int
mov
jmp
sti
imul
sahf
cmp
adc
addr16
and
iret
cwtl
je
cltd
outsl
xchg
loope
push
icebp
test
sub
jne
adc
mov
into
rorl
ds
rcrl
add
insb
in
pop
out
mov
xlat
loope
sarb
push
mov
test
fs
icebp
mov
inc
decb
dec
pop
nop
test
outsl
loope
shrb
jns
sub
ret
jae
mov
cmpsl
push
call
jne
arpl
inc
jmp
paddw
imul
inc
xor
push
add
pop
pop
jg
mov
cmpl
jno
jmp
xchg
fnstenv
mov
or
test
repnz
inc
ljmp
push
jne
test
aad
push
decl
sub
pop
and
dec
dec
dec
xor
xchg
lock
test
into
call
ljmp
arpl
sbb
inc
in
add
ljmp
out
enter
jmp
loop
call
stos
push
in
or
xorb
cmpsl
rorl
pop
in
int3
call
fbstp
cmp
cmp
jmp
and
xchg
insl
sbb
xchg
lods
int
mov
fdivrl
jmp
les
rol
into
pop
test
push
mov
movsl
pop
push
push
or
sbb
ret
dec
repnz
lcall
std
lods
mov
inc
rcll
mov
xlat
jo
sbb
hlt
sbbl
add
ficoms
fnstsw
loop
mov
fdivrs
pop
call
mov
cmc
mov
mov
push
int
mov
dec
cld
xchg
pop
and
xor
xor
push
inc
ljmp
call
and
sub
pushf
outsl
mov
sub
xor
or
xor
rclb
out
rorb
cwtl
push
inc
addr16
aad
dec
lods
add
and
cli
fstl
sbb
out
mov
mov
lret
jnp
add
dec
push
lea
orb
cmc
ja
pushf
jmp
lahf
push
cld
add
mov
jmp
mov
add
pushf
mov
sbb
into
aad
push
xchg
add
shlb
push
pop
test
test
xor
fdivr
push
xor
call
pop
stc
cmp
sub
and
repnz
je
outsl
jnp
pop
call
adc
or
fsub
fcmove
mov
push
sub
jmp
sub
in
or
push
push
jmp
mov
nop
mov
add
and
add
push
pop
add
lods
sbb
mov
sub
mov
lds
rcrb
fwait
or
lcall
fwait
xchg
lock
call
mov
mov
dec
out
lcall
add
push
jae
xchg
jge
pushl
rclb
push
inc
dec
push
cmovb
jo
std
sub
call
cs
jg
and
mov
jb
push
ja
pop
push
push
call
mov
in
mov
call
clc
test
mov
push
sub
in
ljmp
jne
mov
mov
stc
mov
or
mov
or
rclb
fs
mov
dec
pushf
dec
hlt
push
shl
mov
pusha
pusha
push
hlt
mov
ret
aad
and
pcmpgtb
clc
or
push
cmp
mov
inc
adc
pop
fs
rclb
nop
out
add
outsl
pushf
call
fsubrs
jg
loop
push
icebp
adc
ret
jae
sub
adc
sub
fisttpll
in
call
or
push
andl
mov
dec
adc
ja
and
ljmp
out
call
cmp
mov
mov
xchg
popa
xchg
mov
icebp
nop
in
out
popf
je
and
call
push
clc
adc
sbb
add
dec
in
hlt
call
movsb
lahf
or
pop
pop
add
mov
ret
aas
dec
mov
cmp
add
test
inc
lock
and
ss
pushf
mov
jl
pop
sub
std
fwait
jmp
aam
jae
shr
inc
add
js
lahf
fsubp
sahf
jno
pop
xchg
insl
xor
aad
xchg
mov
hlt
mov
frstor
inc
sub
inc
inc
sub
ret
push
jno
stos
sbb
es
sti
mov
cwtl
push
clc
mov
push
pop
test
imul
add
bound
mov
pop
mov
arpl
fisttpl
dec
in
cmp
stc
mov
jmp
xchg
cltd
push
pushf
faddl
aaa
dec
or
push
push
pushf
mov
dec
call
popa
cmc
pusha
jmp
mov
setg
ja
stos
jmp
imul
mov
cmpsb
jno
jmp
movsl
push
inc
jg
arpl
sti
in
rol
pop
pushf
push
and
sbb
out
cmp
dec
ret
lcall
out
aad
xor
stc
push
movsb
jns
fstpl
dec
jmp
sbb
testl
lock
cmc
pop
mov
test
leave
std
psubb
adc
sahf
cmp
and
push
popa
sub
inc
ret
and
mov
sub
adc
test
mov
mov
mov
adc
jmp
outsb
call
sub
orl
imul
aaa
inc
rcll
jb
daa
ret
push
add
sub
pusha
push
pusha
outsb
jg
ja
sub
call
addb
aam
add
je,pn
or
insb
mov
xchg
arpl
sbb
div
ret
mov
inc
xor
loopne
add
mov
out
cmp
enter
cmc
mov
jmp
ss
dec
call
xchg
mov
mov
scas
jnp
loope
scas
inc
jp
loope
or
jo
add
loop
and
cmpsl
lcall
add
shll
mov
pop
mov
pusha
jae
inc
mov
insl
mov
dec
jb
pop
divb
ja
sbb
inc
in
popa
add
pop
jb
icebp
loop
test
mul
mov
cmp
sbb
mov
jmp
movsb
mov
dec
shr
and
mov
cmpb
jecxz
bound
and
lock
fs
rolb
in
setae
or
or
rorb
mov
rcrl
pop
mov
bound
outsl
mov
fcmovne
jmp
repnz
fildll
push
jno
std
std
pusha
push
xlat
adc
js
cwtl
push
mov
mov
dec
out
xor
sub
pop
flds
mov
add
lods
or
mov
test
shl
sbb
dec
sbb
mov
push
push
adcl
xchg
mov
add
pushf
in
mov
scas
adc
loopne
or
xchg
mov
scas
mov
pop
xchg
sbbl
lds
jmp
cmpsb
cmp
sbb
pop
inc
xor
paddusw
adc
jmp
ret
adc
fldlg2
mov
adc
int
dec
rorb
jg
xchg
sbb
mov
loopne
inc
xlat
sbb
push
pushf
or
mov
stc
ds
sbb
inc
stos
ljmp
roll
and
les
fsubrp
jo
jmp
in
bound
jl
imul
repnz
inc
push
lret
testl
mov
ret
stos
outsb
cmpsb
or
mov
mov
xor
push
push
sub
mov
jbe
mov
fnstsw
decb
subl
pop
jg
push
pop
insb
or
lret
ret
sub
movsb
xor
fisttpll
and
lret
inc
insb
in
push
sub
xor
jno
inc
push
ret
or
or
cmp
ret
jmp
sub
mov
hlt
movsb
mov
jmp
je
dec
clts
cltd
test
hlt
hlt
and
sbb
mov
xlat
push
mov
and
add
xor
test
jmp
fs
or
adc
outsb
sub
add
dec
pop
test
aas
ds
or
inc
mov
orl
cmp
js
je
jp
push
loope
adc
pop
push
xor
popf
lahf
call
mov
jecxz
and
push
push
out
imul
and
sar
lods
cwtl
pusha
nop
fimuls
out
ds
cmc
jl
icebp
add
lds
insl
inc
or
sti
dec
movsb
fsubrp
push
adc
sub
inc
xchg
out
cmp
mov
bound
insb
jb
mov
cli
cmc
lcall
movsb
mov
frstor
adc
mov
sahf
xchg
push
hlt
cld
xor
jmp
loope
into
clc
push
test
xchg
mov
lahf
add
lcall
xor
or
call
jbe
push
inc
lahf
lret
testb
in
push
pusha
push
xchg
inc
mov
push
sub
cmp
or
sti
outsb
icebp
ds
popa
ret
testl
inc
pop
leave
mov
pop
scas
cmc
mov
mov
test
fmuls
jmp
cmp
lods
jno
pusha
push
fistl
xchg
icebp
gs
popa
js
pop
fstps
xchg
sub
xor
mov
mov
call
mov
push
in
push
hlt
jnp
out
rol
pusha
pop
not
pop
js
push
xor
andb
popa
mov
mov
call
jmp
jmp
std
jmp
ja
inc
lds
fs
xlat
xchg
pushf
fsub
inc
adc
xor
pop
jge
scas
addb
xlat
fisubrs
test
mov
movlps
test
pop
mov
clc
aas
mov
and
call
jne
mov
addl
adc
adc
xchg
adc
cli
xorb
xlat
push
lds
shl
ret
sub
mov
jmp
push
stc
jo
lahf
sbb
ja
call
sbb
or
arpl
xor
scas
and
faddp
mov
jmp
jmp
mov
push
lret
fs
das
mov
sbb
push
pushf
inc
ficoml
js
fsts
je
cltd
aaa
ret
adc
scas
stc
or
push
out
cmp
pushf
into
push
inc
and
and
subl
mov
mov
cmpsb
inc
push
add
cmp
fdivrs
dec
adc
add
mov
jae
and
lock
pushl
pop
xchg
call
dec
test
push
cmpsl
or
add
sub
jle
ret
shlb
xchg
ret
out
push
fnstenv
jmp
mov
push
xchg
mov
mov
xchg
iret
and
mov
fwait
sbb
sbb
pushf
ja
push
dec
mov
push
cmp
jne
xchg
call
out
cmpb
sbb
and
lea
and
cmpb
dec
add
out
add
add
rorl
mov
xor
jge
sbb
cmp
in
pop
sbb
int3
ret
adc
popfw
mov
in
xchg
fdivrl
out
pop
cmp
fcoms
pop
out
jl
sbb
push
jbe
fdivr
push
or
fucomp
add
loopne
sbb
jmp
lods
and
pop
mov
lds
mov
mov
insb
fs
and
xor
jmp
or
outsb
mulb
lea
filds
negl
xor
shr
sub
in
xor
sub
inc
jmp
int
push
cmc
cmc
or
inc
or
cld
sbb
aad
testb
jecxz
daa
jp
insb
cld
add
push
cmp
test
pusha
ror
mov
mov
mov
push
push
fcom
andl
xlat
dec
inc
xor
jo
ds
mov
stos
or
mov
adc
cld
mov
into
or
fists
pop
push
push
inc
fdivs
popf
cmp
ja
das
ss
and
push
daa
aad
mov
es
cmp
shll
sub
loope
clc
sbb
jne
pop
popa
lea
movb
std
popa
adc
loopne
test
pop
mov
rolb
mull
sub
mov
out
loope
sbb
pop
into
push
adc
lock
popa
jg
push
das
jl
mov
mov
sbb
push
gs
les
dec
jmp
aad
sahf
and
out
or
mov
fists
or
in
push
lea
or
movl
sub
mov
sbb
xchg
inc
ljmp
stos
call
cld
dec
add
pop
cs
rolb
pop
daa
je
sub
decb
cmp
into
call
sub
clc
icebp
pop
or
mov
lret
movb
xor
xchg
sub
pushf
pusha
pushf
fstps
sbb
bound
jl
mov
cld
cmp
ja
inc
pop
dec
ret
lock
rcll
sbb
mov
cmc
fucomip
mov
mov
stc
pusha
clc
inc
and
fwait
cmc
sar
sub
pop
loope
jae
add
xlat
cmp
ja
test
cmp
lcall
pop
out
aam
addr16
les
add
sub
sub
pop
cs
fsubs
lock
push
std
or
outsb
pusha
test
xor
in
stos
ficompl
xchg
inc
push
or
hlt
hlt
adc
and
popa
pop
rclb
adc
inc
pop
mov
push
pushf
icebp
icebp
push
cmc
ljmp
mov
xor
fbld
call
int3
test
mov
push
jl
and
inc
xchg
xchg
insb
push
push
sbb
adc
out
incl
xor
pop
fwait
sar
ja
mov
icebp
pushl
lea
push
push
ds
daa
mov
cli
dec
test
pop
inc
stos
mov
push
call
mov
dec
or
or
test
pop
adc
ror
adc
add
jmp
lods
and
xchg
sti
mov
iret
and
fdivl
sbb
push
cmp
movsl
add
and
aaa
push
ret
push
in
push
sub
push
cmpsb
or
insl
lock
pushf
fdivrs
aas
inc
xchg
sub
loop
dec
sti
iret
ljmp
pop
or
inc
adc
jmp
mov
subl
popf
cwtl
xor
inc
mov
ficoml
mov
and
scas
icebp
fidivrl
fcomps
in
xchg
outsb
mov
mov
mov
add
mov
pop
and
popl
push
jno
jb
adc
sbb
cmp
es
addb
mov
inc
push
jmp
mov
add
inc
sub
shlb
ret
or
or
shr
cwtl
loop
pop
xchg
jecxz
pushf
adcb
dec
mov
mov
jo
pop
ljmp
test
mov
adc
loopne
add
jmp
push
insb
xchg
sti
stc
jp
pushf
mov
adc
sbb
aad
push
sub
adc
fiadds
mov
cs
bound
xchg
mov
push
inc
add
in
inc
xchg
mov
dec
add
adc
and
push
mov
shll
xor
dec
addb
pop
fistpll
cmp
xchg
mov
cs
out
jl
rorb
dec
clc
pop
or
pusha
in
rcr
int3
and
xchg
mov
dec
add
adcl
xor
inc
pop
cmp
decb
cmp
dec
iret
jmp
and
jmp
fdivs
adc
in
pop
stos
pop
pushf
mov
sbb
out
das
ror
call
adc
fsubrs
sub
jo
dec
cs
pop
popa
cmpsb
into
mov
arpl
or
pop
cltd
jo
cmp
insl
or
adc
sbb
mov
push
xor
cs
test
pusha
mov
stos
ljmp
push
stos
pushf
push
xor
sub
push
and
shl
popa
push
sti
cwtl
adc
push
jle
call
adc
mov
xchg
shlb
scas
mov
out
std
mov
mov
push
or
pop
inc
sub
test
inc
divb
inc
es
pop
stos
add
pop
pusha
mov
scas
or
dec
mov
add
pop
inc
pop
call
xchg
out
adc
roll
inc
mov
xchg
jo
arpl
data16
dec
ja
std
std
sub
jae
outsb
call
dec
push
mov
jno
in
cmp
out
lds
push
das
xor
lods
sbb
mov
sub
ds
sub
push
xchg
push
push
call
adc
add
mov
cmc
test
xchg
out
mov
notl
aad
dec
add
xchg
push
or
sbb
gs
leave
jne
arpl
test
xlat
pop
lea
enter
pop
mov
jecxz
mov
mov
mov
sti
outsl
sub
xchg
mov
fs
popa
add
out
lds
addr16
or
fwait
data16
imul
add
test
pop
pushf
rorl
rorl
add
adc
aas
cld
adc
out
and
xor
xor
push
loop
loope
lock
fs
add
mov
add
int
leave
dec
inc
in
xchg
mov
into
mov
adc
pusha
icebp
out
add
pusha
or
adc
mov
pusha
mov
and
or
cmp
dec
aaa
inc
jmp
in
mov
lret
call
pop
push
test
pop
adc
test
jmp
cmp
shlb
dec
fsubl
aad
fcoms
cmp
fadds
push
xchg
ror
incl
in
aad
cltd
mov
pushf
lea
ja
lods
adc
add
rclb
ljmp
rol
pop
mov
out
adc
pop
test
movb
cmc
jge
fucomp
incl
repz
jmp
jp
rcl
push
inc
jbe
and
scas
mov
and
cmpsl
mov
mov
cmpsl
or
shlb
bound
jg
add
call
sbb
sbb
les
jg
mov
xchg
push
shr
mov
loope
fs
pop
push
dec
jo
sub
rcrb
push
add
jmp
mov
mov
or
or
insl
add
inc
and
or
outsb
cwtl
call
mov
rclb
push
jbe
add
add
rolb
pop
lds
mov
dec
ss
inc
add
in
cmp
cs
int3
testb
xor
subl
aam
in
jecxz
mov
int
aaa
rcrb
out
mov
test
xchg
call
loopne
add
cmp
dec
or
leave
adc
ret
sbb
inc
loopne
cs
sub
fldt
jp
xor
in
out
sbb
sbb
and
and
sbbl
or
loope
es
mov
sub
test
imul
jae
bound
push
fidivs
mov
test
pop
js
orl
push
sar
mov
lahf
in
inc
mov
stos
lods
cmp
mov
push
imul
std
sbb
loope
loop
sbb
not
rcl
fwait
int3
pop
cmp
lcall
rcrl
push
lods
into
or
negl
mov
hlt
test
test
add
cwtl
mov
out
push
lea
fistps
mov
mov
not
push
inc
xlat
rcl
inc
repnz
faddl
jbe
push
pushf
in
push
and
xor
call
push
fcoml
in
xchg
loopne
fisttpll
ret
lahf
lea
push
push
inc
fdivl
jl
xor
jbe
mov
rcll
or
push
adc
and
lea
test
pop
mov
fcoms
mov
push
shlb
ja
ljmp
pusha
cmp
sbb
pop
jmp
rorl
pop
aas
push
pop
lret
xchg
jl
inc
aad
mov
cmp
cld
mov
aas
sbb
inc
push
call
cli
mov
subb
fildl
sub
jmp
cmp
std
mov
mov
fcompl
adc
psubw
and
mov
push
and
add
adc
sub
mov
sub
dec
ret
faddl
loopne
mov
jge
or
test
xor
divb
sbb
sbb
lret
adc
and
rorb
xchg
popa
call
jo
testb
je
mov
mov
jmp
push
xor
inc
push
xchg
dec
add
mov
test
mov
inc
cli
int3
orb
or
mov
xor
push
push
or
mov
mov
in
imulb
jmp
push
pop
cmp
call
pop
adc
insl
movsb
aad
cmpsb
push
aad
daa
xorl
dec
fbld
mov
jg
or
enter
add
xor
push
add
fsub
mov
push
scas
pop
and
fldl
fmuls
adc
xchg
adc
int3
nop
sbb
and
js
mov
rcl
push
ss
xchg
inc
movsb
pop
jmp
fbld
aam
add
jae
fldl
cwtl
sbb
mov
clc
push
into
push
dec
sub
daa
les
mov
pop
cltd
add
movq
pushf
movsl
nop
mov
mov
or
adc
imul
mov
dec
das
dec
iret
inc
loop
lcall
or
imull
testl
js
dec
push
pop
dec
sub
loopne
jno
ss
push
ret
adc
sbb
and
shll
mov
mov
testb
lds
inc
incb
add
add
lods
into
rorl
inc
iret
stos
adc
stos
loope
pusha
push
divl
mov
incb
das
in
mov
adc
jecxz
popa
fdivrs
pusha
rorb
or
call
and
push
jne
roll
out
out
or
aam
mov
jecxz
call
jo
adc
sub
into
stos
cmpps
in
sbb
insb
sbb
jns
in
js
xor
jmp
call
les
pusha
push
push
scas
sbb
xchg
and
pop
test
sub
jo
stos
jl
or
push
test
sbb
mulb
jbe
fidivrs
push
je
pushf
ss
popa
xchg
call
add
bnd
out
ljmp
in
rcrb
loop
in
call
cmpsb
or
scas
out
mov
mov
sub
jmp
adc
inc
mov
mov
call
add
pop
cmp
push
push
push
stc
test
or
scas
test
mov
add
adc
pushf
mov
inc
bound
das
lods
mov
sub
faddl
xchg
roll
iret
jns
xchg
add
sar
insb
ja
mov
mov
mov
push
cltd
fists
jmp
in
test
nop
pushf
xor
adc
cmpsl
dec
not
test
fiaddl
push
mov
subb
aaa
test
xor
jmp
sti
xchg
fucomi
bswap
loopne
mov
add
mov
xlat
inc
mov
push
sti
divb
sub
test
mov
mov
in
push
lret
cld
das
or
mov
jne
fistpll
lock
rorl
push
push
jmp
adc
inc
mov
shrb
cld
out
push
push
add
sub
jmp
jle
mov
mov
xchg
cmp
xor
shlb
push
xor
pusha
nop
loopne
stos
stos
xchg
lock
push
nop
pusha
or
das
sbb
movsl
ds
inc
movsl
cmp
or
jo
cli
setae
jmp
mov
in
int3
insl
filds
pop
adc
mov
inc
dec
xchg
sbb
inc
and
loope
sub
outsb
stos
loope
jb
call
movsb
loope
je
cli
push
sbb
pop
shl
xlat
push
add
loope
mov
addb
jecxz
lods
add
inc
adc
or
sub
mov
jge
cmpb
mov
outsl
pop
xorb
call
inc
or
xor
adc
iret
cli
push
mov
xchg
pop
xchg
push
decl
aaa
push
push
call
out
lods
pop
sbb
jmp
add
shll
pushf
sbb
ja
mov
notb
out
fld1
fs
mov
adc
fisttps
xchg
hlt
adc
mov
dec
enter
pop
jo
imul
dec
arpl
in
fsub
mov
mov
ret
lahf
pop
mov
data16
pop
ret
incl
cmp
nop
lds
les
push
call
mov
adc
push
sub
aaa
fisubs
sar
mov
add
cwtl
sbb
sub
adc
xchg
stos
add
adcl
jmp
je
test
test
and
incl
adc
pop
xor
lock
icebp
lods
add
ret
xlat
push
sub
std
adc
les
mov
and
xor
pushf
mov
push
jge
adc
stc
mov
call
cmp
cmpb
in
pop
mov
sub
mov
sub
aaa
ds
mov
nop
popf
insb
ljmp
add
or
cld
cmc
movsb
sbb
cmp
push
push
mov
push
setns
not
adc
pop
add
adc
xor
mov
rorb
xor
push
bound
lahf
inc
les
call
pop
loope
cmp
ds
scas
repz
dec
adc
mov
das
call
push
pop
popa
dec
push
ffree
ljmp
sub
add
clc
mov
test
aam
add
ffree
std
ret
test
sub
outsb
mov
aaa
jbe
aas
test
inc
dec
shll
cmpsl
and
sbb
jmp
or
push
push
hlt
dec
popa
in
in
loopne
shrb
ss
call
xor
stc
pop
testl
fisubs
cmpsb
or
outsb
aam
std
enter
add
push
adc
mov
adc
push
push
loop
push
mov
dec
arpl
or
fsubp
sub
out
inc
pop
les
jns
inc
sub
inc
sub
add
xchg
sar
adc
mov
jle
jmp
fldenv
out
test
movsl
fcompl
mov
jmp
aam
cmpl
xchg
cmc
push
ss
arpl
imul
stc
pusha
push
xor
test
sbb
inc
mov
je
cmp
loop
clc
std
xchg
imul
add
xchg
mov
push
xchg
cmp
sarl
les
jno
fiaddl
seto
hlt
pusha
jle
jp
loop
add
and
loopne
mov
inc
mov
xor
or
rdpmc
or
addl
push
jmp
cmpl
imul
cs
mov
ss
push
outsb
jmp
sub
or
add
lcall
jae
push
jp
aad
dec
inc
cmp
pop
arpl
ja
mov
shr
xor
xchg
iret
mov
std
push
into
jnp
add
cli
sti
push
test
add
mov
mov
adc
jne
call
enter
loop
pop
push
pop
pop
nop
dec
fadds
cmpsl
push
lahf
jle
add
mov
mov
movsb
into
stos
jg
sub
push
push
or
xchg
push
adc
in
or
or
push
xchg
jle
loop
call
scas
imul
cld
pusha
not
jmp
loope
adc
push
popa
xchg
jle
or
test
mov
mov
xchg
loope
xor
inc
jge
push
jp
xlat
adc
inc
cmp
jbe
fucomp
imul
mov
mov
dec
inc
mov
aam
call
sub
and
sbb
jecxz
adc
cld
push
aam
insb
mov
xor
pop
popf
lcall
aas
sub
cmpsb
loopne
lea
xchg
fnstenv
dec
inc
mov
lcall
mov
call
push
lahf
in
repz
jge
stc
in
fmuls
nop
and
aam
push
roll
fisubrl
adc
test
dec
sbb
dec
cmp
incb
and
mov
out
cmpsl
rorl
in
ljmp
cmpb
dec
adc
inc
insl
orl
test
lcall
call
sub
dec
push
push
cmpsl
push
adcb
popf
add
fistpl
mov
dec
dec
insl
ljmp
mov
push
push
mov
add
dec
pop
aam
cmp
incl
xchg
mov
repz
push
cmpb
adc
jg
mov
ja
outsb
aaa
mov
ret
jge
dec
jge
jg
add
outsl
jge
imul
ja
lcall
in
out
lods
int
sub
rcrl
dec
dec
or
aam
pop
mov
mov
adc
test
xchg
in
popf
icebp
mov
call
add
add
add
cltd
jb
nop
mov
push
inc
mov
xchg
adc
lock
je
test
into
out
int
bound
cmp
mov
sub
fstpt
in
js
dec
jge
aam
pop
int3
insl
jmp
sub
out
jmp
int
mov
push
icebp
jbe
test
dec
enter
inc
data16
hlt
lds
iret
mov
addb
pushf
adc
inc
mov
decl
mov
ret
ja
mov
ret
sarl
incl
ja
out
iret
cmp
lds
leave
insl
fisttpl
daa
aam
pop
clc
jg
xor
xlat
and
test
ss
test
gs
dec
push
jle
add
lods
je
pop
and
daa
mov
jg
in
andb
inc
cmpsl
xchg
push
mov
ret
ja
out
outsl
and
or
cmp
mov
insl
add
push
push
das
mov
dec
or
dec
fildll
outsb
insl
pop
and
cmpsb
fcmovnb
rorl
adc
lods
add
popf
insl
push
sbb
xchg
test
and
add
out
or
adc
jb
sbb
xlat
mov
ljmp
mov
and
lds
mov
subl
pop
pop
iret
inc
pop
aas
sub
jge
mov
sub
jb
mov
aam
and
fisubl
adc
outsl
dec
not
or
sub
gs
xchg
cmpsb
mov
inc
lods
hlt
pop
and
cmc
add
mov
shl
xor
mov
mov
ret
jne
test
sar
clc
inc
repnz
insb
add
decb
cld
insl
pop
rorb
in
push
call
int
and
xchg
inc
testl
jle
add
hlt
inc
inc
add
hlt
incl
add
and
pushl
mov
xchg
popa
mov
push
ret
jle
mov
lret
cmp
movsl
sbb
stos
pop
or
cmpsb
mov
and
aam
push
add
aam
pop
pop
jmp
lods
xchg
icebp
adc
test
or
mov
mov
push
add
mov
push
jmp
pop
aad
add
jg
dec
imul
lock
icebp
addr16
lds
mov
pop
mov
jge
xchg
mov
test
scas
add
insl
in
es
cld
jg
jecxz
sahf
adc
ret
mov
insl
movsb
movsb
aas
jl
sbb
lods
lods
jb
jo
fisttps
jg
push
fisubrl
lods
xchg
mov
push
mov
fsubs
incl
inc
ret
cmc
add
es
sub
push
into
movsb
sbb
popf
push
lcall
pop
inc
jno
ret
imul
jecxz
add
push
adc
imul
sbb
jg
inc
sub
push
ret
xchg
xchg
pop
mov
sub
or
mov
das
cmp
sbb
std
incl
outsb
in
mov
inc
dec
aad
in
imul
orl
loope
call
lcall
jmp
push
cwtl
shr
lds
pusha
mov
clc
lds
pop
and
sar
adc
subb
in
push
inc
call
jg
mov
scas
xor
cmp
and
hlt
dec
push
xchg
nop
testl
fbstp
les
out
sub
push
lret
into
mov
rcrb
sbb
std
decl
call
sub
push
arpl
ficoms
pop
out
push
inc
mov
and
push
add
jg
adc
push
les
lods
pushf
sub
mov
call
into
movsl
sbb
pop
push
daa
aaa
push
mov
insb
or
mov
jg
cwtl
iret
add
ficoms
sub
sub
xchg
popf
lock
xchg
pop
cmp
cs
mov
pushf
mov
inc
sbb
mov
lods
bound
lahf
iret
inc
inc
aad
ffree
outsl
inc
rcrb
loop
mov
jns
stc
out
icebp
lea
mov
test
xchg
xchg
jg
inc
xchg
adc
pusha
pop
adc
inc
decl
hlt
push
push
ret
loop
push
cmp
shlb
sbb
call
jle
dec
mov
inc
adc
inc
or
outsl
mov
mov
insb
xor
pop
pop
int
xchg
fildl
push
rcrb
jg
sbb
and
das
push
push
arpl
leave
adc
push
adcl
aaa
xchg
loopne
xor
xchg
test
fistpl
push
jae
in
xchg
jns
cltd
jbe
and
ljmp
pop
sbb
jmp
xchg
pop
mov
adc
jbe
mov
bts
stc
mov
subb
lods
into
adc
mov
int3
sub
jmp
cmpsl
xchg
lcall
lea
lahf
lret
push
adc
inc
aaa
ja
dec
mov
cbtw
jecxz
push
pop
gs
inc
mov
jnp
fimuls
stc
nop
repz
mov
pop
fadds
xor
jmp
das
jg
arpl
xchg
out
leave
repz
push
fprem
xchg
or
adc
pop
dec
ljmp
mov
jae
cwtl
jmp
mov
fwait
sub
mov
daa
subl
pop
xchg
in
repnz
jae
dec
or
inc
dec
in
aaa
and
mov
mov
fdiv
pop
arpl
lret
and
adc
das
sbbl
addr16
out
je
add
fdivs
ret
in
dec
fcomip
cmp
and
addb
in
push
out
mov
fistpll
mov
push
jnp
fisubl
xchg
mov
adc
outsl
lock
add
inc
inc
jb
xchg
inc
pop
les
adc
pop
hlt
in
stos
lahf
adc
lcall
fiadds
adc
ja
fistl
call
adc
dec
lods
femms
in
jmp
dec
inc
aad
cltd
add
pop
jp
push
dec
xor
jns
lock
dec
sbb
out
and
inc
adc
push
filds
inc
fucom
push
push
mov
shrb
mov
mov
mov
xchg
adc
dec
sbb
and
jecxz
fidivrl
out
and
mov
add
xchg
loopne
push
ja
pop
pop
es
aas
das
jl
arpl
out
inc
call
ds
pushl
mov
mov
add
and
sahf
xor
mov
je
test
jb
add
in
sub
push
rcrl
into
jno
shll
or
mov
and
inc
ljmp
or
ror
inc
xor
cmp
mov
adc
mov
out
stos
daa
sbb
dec
scas
daa
jle
dec
xor
pop
out
dec
aad
cwtl
cmc
arpl
ja
xchg
mov
out
sub
test
lock
inc
loope
movsb
cs
mov
mov
push
roll
incl
mov
lret
sti
out
fxch
xchg
leave
lds
mov
out
cli
fbstp
jecxz
icebp
sub
cwtl
cltd
sub
jle
mov
decl
int3
mov
out
das
or
cwtl
adc
dec
sbb
mov
std
pop
lret
adc
outsb
popf
pop
inc
push
arpl
adc
dec
sub
mov
into
push
jae
je
cmp
add
mov
sub
cmp
call
inc
inc
nop
inc
and
or
lods
sbb
mov
mov
inc
aaa
jbe
hlt
shlb
insb
pop
stos
scas
jle
and
adc
jg
outsb
daa
hlt
outsl
std
ljmp
fmul
sub
leave
pop
subl
rcll
inc
inc
int
fisubrl
das
cld
out
fwait
ja
adc
inc
cmpsl
repz
imul
rcrb
jo
call
insb
sar
pop
clc
or
shl
mov
arpl
push
movsb
test
mull
xorl
scas
and
das
and
out
pop
push
jecxz
jg
pushl
pop
shr
sahf
lret
out
cmc
push
xor
jl
mov
fcmovne
inc
repnz
adc
decl
mov
mov
jae
xchg
inc
sahf
ss
or
addl
pinsrw
sub
pop
sbb
dec
jge
ret
and
push
arpl
int3
adc
loop
pop
incl
push
aaa
repz
pop
daa
shrl
pop
imul
ret
xor
xchg
ljmp
dec
jb
add
mov
mov
ja
push
adc
jno
ret
insb
or
int
jbe
adc
cmp
push
and
jmp
test
out
in
cmpsb
xchg
xchg
call
mov
cld
mov
fildll
ja
pop
jl
dec
scas
jbe
stc
xor
lret
outsl
jge
decl
aad
addb
fmull
call
cld
ljmp
mov
testb
xor
jg
fldt
arpl
aam
cltd
iret
clc
dec
in
pop
aaa
mov
mov
xor
idiv
out
test
xchg
dec
mov
pop
std
decl
push
xchg
insl
inc
repnz
and
pop
and
cld
jnp
les
xchg
rcll
sbb
pop
cmpsl
and
dec
sub
xor
xor
ljmp
sbb
cmc
loop
inc
and
push
push
ret
xchg
jbe
in
jmp
jmp
leave
jb
adc
int
jecxz
popf
outsl
shrl
das
cmc
test
adc
test
pop
mov
packssdw
ret
jecxz
add
inc
jle
mov
int
xchg
cltd
or
mov
xor
adc
mov
mov
cmp
dec
jge
fbld
sbbb
hlt
fimuls
or
bound
fbstp
dec
ja
adc
filds
xchg
fsubs
add
dec
hlt
cmp
ror
popf
rol
jmp
pop
test
popf
and
pop
mov
mov
pop
cs
dec
adc
dec
cmp
cmova
mov
inc
jmp
mov
out
and
push
rcll
mov
lahf
mov
mov
pop
push
lret
imul
lahf
in
ja
mov
cmpl
xor
repnz
cld
out
loopne
xor
adc
scas
sbbb
add
scas
stc
ljmp
mov
add
in
insb
and
jp
cmp
jg
xchg
mov
sub
xchg
add
mov
cmp
cmc
filds
popf
call
and
pop
das
mov
lcall
adc
dec
scas
jl
in
leave
cmp
dec
inc
pop
cmp
pusha
inc
and
inc
sub
loop
icebp
movsl
mov
out
jne
int
addr16
sbb
mov
inc
xlat
repnz
or
incb
lret
imul
push
aas
mov
outsl
in
imul
mov
dec
incb
int
mov
jge
aaa
adc
pop
or
daa
rsqrtps
pop
jae
fwait
pop
outsl
pop
clc
mov
sbb
dec
adc
das
push
jns
arpl
adc
ljmp
enter
xchg
dec
das
loop
push
xor
andl
mov
movsl
push
das
xor
xor
adcl
and
sbb
das
lock
sti
stos
je
fcoml
dec
call
outsl
jno
mov
in
sbb
testb
mov
shlb
lret
iret
mov
mov
inc
mov
cmp
pop
adc
mov
popl
sbb
add
and
pop
or
aad
daa
add
sarl
jmp
adc
mov
inc
frstor
dec
addb
jle
lcall
cwtl
xchg
out
push
xor
loop
lret
orb
lds
and
mov
dec
mov
clc
mov
and
push
iret
popl
cld
imul
mov
cwtl
adc
js
inc
loope
adc
adc
sub
adc
ljmp
loop
mov
xor
xor
je
xorl
mov
xor
inc
pop
out
out
xor
inc
mov
xor
xor
xor
xor
xor
dec
xor
xor
jnp
das
add
or
xor
ss
add
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
cmp
cwtl
cmp
add
incb
cmp
cmp
cmp
ss
ds
ds
ds
aas
and
sub
mov
mov
aas
mov
fistl
dec
xor
fnsave
jecxz
lock
sbb
jns
mov
xor
xor
xor
xor
xor
ljmp
inc
add
arpl
lds
aaa
mov
lahf
cmp
cmp
cmp
movsl
mov
in
cmp
cmp
test
out
cli
cmp
push
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
or
cmpl
cmp
cmp
movsl
insl
xchg
cmp
pop
ds
and
daa
sub
bound
loopne
sti
lods
xor
add
xor
xor
test
mov
xchg
xor
xor
xor
xor
xor
mov
xor
xor
xor
lret
dec
xor
xor
xor
xor
xor
xor
push
xor
ja
jge
mov
xor
xor
out
xor
dec
xor
pushl
xchg
xor
xor
xor
xor
cmpsl
xor
xor
divb
sarb
cmp
ljmp
test
inc
cmp
jo
pushf
cmp
imul
cmp
loop
ljmp
ljmp
cmp
cmp
ds
ds
ds
sarl
pop
aas
dec
aas
test
ss
xorl
dec
xor
cld
adc
pop
cmpsl
xor
test
pushl
sub
jb
pushl
mull
xor
xor
xor
xor
xor
xor
sbb
addl
jmp
cmp
mov
cmpsl
cmp
adc
ds
ds
aas
shlb
mov
push
or
mov
sbb
mov
jmp
sub
fldt
cmp
xor
ss
ss
add
sub
inc
cmp
fistpll
mov
cmp
cmp
xlat
cmp
cmp
mov
or
stos
cmp
adc
ds
ds
aam
loop
adc
xor
push
aas
jb
jnp
aam
ja
xor
xchg
pop
xor
jnp
outsl
xor
shlb
xlat
xor
mov
xor
xor
cld
ss
aaa
lcall
jns
lods
cmp
mov
cmp
imul
cmp
cmp
imul
pop
aas
aaa
cmp
rorl
popa
aaa
aas
mov
mov
test
dec
xor
xchg
xor
xor
xchg
cli
pushl
xorb
mov
xor
mov
decl
insl
xor
test
and
cmp
jae
xorl
ss
push
aaa
xor
cmp
push
aaa
loopne
lock
call
test
dec
cmp
jle
mov
mov
cmp
cmp
cmp
inc
ja
lret
cmpl
push
cmp
xchg
cmp
cmp
cmp
cmp
nop
ds
test
je
xor
xor
pop
cmp
xor
push
xor
insl
xor
fdivr
outsl
clc
mov
shlb
jecxz
out
aaa
xchg
cmp
cmp
cmp
cmp
cmp
lcall
add
push
cmp
cmp
cmp
fbld
cli
adc
cmp
arpl
cmp
push
call
dec
aad
pop
pop
sarb
ds
mov
lods
ds
nop
inc
mov
pop
mov
out
mov
or
xor
jle
mov
xor
pop
inc
inc
xchg
xor
xor
xor
push
xor
call
xor
js
jle
test
les
pushl
shlb
loop
call
push
ss
adc
incl
into
mov
mov
imul
ss
loop
hlt
pushl
lret
ss
fdivl
loop
call
stc
or
jl
pop
cmpsl
aaa
sbb
and
sub
aaa
push
shll
cli
fwait
pop
sti
insb
aaa
jns
jg
aaa
xchg
aaa
sahf
aaa
movsb
xchg
mov
pop
ret
mov
aaa
lret
aaa
loop
xchg
call
aaa
cli
aaa
add
push
cmp
adc
sbb
push
cmp
popa
cmp
jo
inc
cld
cmpsl
cmp
push
out
outsl
clc
fildll
pop
xor
pop
xorb
xor
xor
call
mov
int3
xor
xor
sbb
xor
sbb
xor
mov
hlt
or
xor
cld
xor
mov
enter
andb
adc
insl
out
xor
xor
cvttps2pi
dec
xor
lock
xor
divb
pop
dec
xor
aaa
fcmovnb
pushl
pop
xor
xor
xor
xor
jo
xor
jmp
xor
xor
imul
add
dec
das
mov
stos
xor
fistpll
jbe
or
push
negl
cmp
icebp
cmp
jne
pop
rol
cmpsb
add
cmp
cmp
cmp
cmp
lock
cmp
cmp
cmp
cltd
lea
int3
movl
ja
xor
in
mov
xlat
pushl
lea
cmpsb
xor
xor
xor
shlb
call
push
xor
cmc
push
loope
xor
add
xchg
jmp
clc
jg
aaa
jne
mov
cmp
jns
adc
scas
cmp
cmp
inc
sbb
cmp
test
imul
stos
adc
xchg
ds
sbb
leave
aas
fadd
ja
ljmp
cwtl
xor
xor
cld
sbb
fidivs
cli
xor
xchg
cmpsl
movsl
out
jp
ss
aaa
jmp
cmp
clc
cmp
aaa
mov
std
cmp
add
sbb
and
hlt
lcall
fcos
push
ja
push
insb
cmpsb
jb
les
sbb
cmc
xor
pop
enter
cmp
outsl
add
call
mov
mov
adc
rorl
xacquire
mov
or
rclb
mov
fcomps
mov
cmc
sbb
cmp
fucomip
jmp
add
push
cwtl
and
mov
call
test
shl
dec
in
aas
scas
sahf
pmaxub
jmp
mov
jo
cmpsl
loopne
or
inc
inc
repnz
jg
add
lea
pop
sahf
scas
mov
ret
xor
adc
inc
test
nop
leave
xchg
fildll
mov
jg
pop
add
inc
js
inc
ss
mov
ljmp
lods
ljmp
cmpsb
lret
mov
sub
mov
mov
add
mov
add
jl
sub
lock
daa
call
leave
call
call
inc
je
sub
roll
rolb
call
cld
sets
or
add
add
or
dec
xor
les
mov
and
mov
or
pushf
inc
xchg
ss
scas
jnp
push
push
jmp
leave
call
sti
dec
inc
or
mov
or
mov
inc
mov
and
add
push
dec
add
push
add
sbb
shrl
sbb
xor
cmp
sbb
adc
jg
cmp
push
pushf
icebp
sete
mov
mov
mov
jmp
and
ljmp
or
aas
test
imull
insl
jo
mov
push
push
daa
iret
push
adc
sbbb
and
jle
or
movsl
ret
dec
jl
out
xchg
jg
dec
lret
pop
addr16
jmp
and
ret
punpckldq
push
popa
cld
mov
adc
mov
sbb
sarb
adc
cli
push
inc
push
test
mov
add
stc
jmp
sub
cmpl
mov
adc
pop
sbb
out
adc
loop
sbb
ljmp
cltd
les
mov
std
push
call
out
mov
sbb
xchg
push
out
xor
dec
jmp
js
in
in
rclb
cmp
or
andb
frstor
jno
testb
test
test
or
sbb
sub
xchg
adc
sub
dec
test
loopne
popf
sbb
mov
dec
push
mov
icebp
lahf
popa
ret
mov
pop
add
shll
or
sbb
call
adc
sub
call
mov
fucom
mov
sarl
out
loop
sub
jmp
shll
inc
mov
pop
imul
lcall
cmp
push
or
or
mov
aas
xchg
or
inc
rcrl
xor
je
xor
dec
jmp
loop
aam
xchg
sbb
sub
js
pushf
and
cwtl
cmc
sub
add
mov
bound
push
push
scas
add
pop
ljmp
inc
loope
pop
mov
ret
dec
stos
add
fsubr
in
aaa
inc
aad
in
sub
call
addr16
sbb
push
shlb
pusha
shr
cmc
inc
mov
add
ret
adc
test
jnp
dec
pusha
cld
mov
jecxz
dec
push
cmc
loop
xchg
lea
jge
cmp
push
cmp
enter
mov
or
add
mov
mov
call
push
mov
loopne
adc
jae
sub
xchg
jmp
imul
cmp
xchg
out
adc
push
sub
xchg
call
in
xchg
xorl
xchg
icebp
ja
cmp
jmp
popa
dec
shll
aaa
xchg
sarl
dec
fsubs
fidivs
insb
sub
mov
fldcw
push
jmp
ss
aam
push
data16
stc
sub
popa
cmp
push
dec
sarl
ret
inc
pushf
push
push
xchg
xor
and
mov
nop
jmp
mov
mov
cld
or
pop
or
jmp
jle
jae
xchg
xor
sbb
pop
lcall
hlt
sbb
testl
je
pop
inc
ret
dec
inc
jmp
add
rcrb
ret
push
add
adcb
add
cli
pop
or
push
dec
dec
add
rolb
mov
mov
push
adc
mov
cmpsb
or
push
sti
mov
shlb
loop
andb
sub
xchg
sbb
clc
push
jl
fsubrp
andl
ds
pop
xor
push
sub
xor
cli
lret
shll
xchg
inc
add
mov
pop
andl
sbb
lcall
lock
pop
daa
and
aaa
dec
test
scas
inc
mov
or
push
push
jmp
inc
jb
push
mov
ret
fists
fisubl
adc
mov
xchg
add
rorl
pop
ret
sarl
jmp
icebp
push
adc
dec
or
inc
xor
jno
in
push
xchg
mov
dec
call
pop
inc
rorb
hlt
cmp
mov
inc
push
adc
nop
xchg
mov
int3
js
cltd
or
jmp
cmc
les
mov
mov
fdivr
jl
notb
pop
adc
pusha
adc
popw
push
pop
insb
pushf
clc
xchg
addb
pop
paddd
sar
mov
cld
jne
inc
cld
push
and
jbe
rcll
shlb
add
sub
outsb
mov
xchg
jg
jp
inc
push
aaa
xor
incl
adc
loope
aad
popf
push
call
mov
ljmp
push
cmp
int
insb
and
or
outsb
es
fildl
rolb
les
adc
mov
sbb
call
cmp
shlb
inc
dec
pusha
or
sahf
mov
xor
mov
sub
xor
clc
fisttpll
adcb
dec
push
cmp
or
add
adc
pushl
push
bound
ret
inc
add
pop
pop
dec
adc
addb
outsb
xor
add
adcb
sarl
xchg
adc
pop
dec
aam
sbb
movsl
and
push
call
inc
jmp
jmp
pusha
xor
ret
and
jae
adc
inc
cmp
pop
push
les
sub
rcrb
cmp
cmp
add
mov
ror
pop
pop
orb
dec
sbb
xor
loope
scas
rolb
push
pop
inc
cmp
push
insb
fsubs
mov
pusha
sub
fiadds
lcall
add
sbb
lds
cmp
jbe
sub
pop
jne
xlat
mov
jmp
inc
mov
call
sub
bswap
add
xor
lea
inc
inc
inc
xor
rorl
and
fdivl
add
cmp
fwait
xor
add
mov
jg
stos
push
mov
sbb
sub
cs
push
push
mov
js
shll
les
push
shll
xchg
add
add
and
das
push
add
pusha
cmp
pop
jbe
add
sbb
test
or
jmp
pop
loopne
jl
or
ret
lcall
mov
out
sbb
mov
ret
jmp
je
or
in
jge
enter
rorb
lcall
nop
push
push
popf
rol
fcompl
subb
movsl
mov
out
js
fimull
cmpsb
daa
mov
xchg
fldenv
mov
mov
sbb
pop
inc
adc
ds
push
mov
inc
inc
pop
mov
and
mov
call
rorb
movsb
xor
test
or
pusha
mov
test
xchg
mov
cmp
jae
stc
testl
mov
je
js
fsubrs
cmp
cmp
mov
cmp
hlt
js
jg
cli
cmp
icebp
inc
dec
out
xlat
rcrl
movsb
call
cmp
shll
std
cs
sbb
leave
or
xor
mov
mov
push
icebp
jns
loopne
xor
and
ret
push
jbe
or
push
jl
stos
stos
pop
repnz
sbb
xor
jl
or
pop
iret
popf
lds
jmp
fcomi
in
cmc
test
iret
push
call
add
mov
or
out
or
mov
sub
add
sub
clc
push
scas
sub
scas
add
xchg
push
ficomps
xchg
out
seto
test
test
movsl
and
pop
mov
mov
pusha
adc
mov
mov
adc
pop
sub
jmp
dec
push
jnp
stc
dec
clc
add
shlb
test
cmp
fs
pusha
aam
push
jge
ret
test
add
ds
push
push
aam
cmp
pop
jo
and
and
addb
push
and
sub
dec
adc
arpl
test
movsl
jg
sub
lar
add
loopne
xlat
lods
sub
add
xor
mov
push
loope
repz
std
data16
ror
shrl
pop
cmp
pop
pop
mov
rorb
add
sahf
mov
or
mov
stc
mov
addl
nop
push
sbb
cwtl
inc
loop
test
jns
fndisi(8087
jne
pop
or
or
enter
jb
repz
lcall
call
add
lds
adc
add
movsb
or
and
incl
pushf
dec
scas
add
mov
push
add
inc
mov
sub
aas
cmp
pop
adc
movsl
inc
mov
bound
inc
jnp
jl
arpl
mov
jae
inc
mov
rcll
mov
lea
setg
push
sub
out
push
xor
mov
xlat
sbb
jo
dec
xor
mov
and
cmp
insl
mov
jl
scas
jnp
jg
cmp
filds
jp
add
lock
es
push
fwait
jnp
pop
add
lahf
push
into
sub
daa
icebp
dec
mov
push
aad
and
fidivl
xor
jg
sbb
pop
out
pop
adc
je
mov
and
pop
inc
jg
and
push
push
jmp
cmp
mov
jo,pt
mov
push
lock
push
in
cmp
les
push
cmp
fwait
xchg
rcr
call
data16
add
jno,pn
push
xor
shrb
pop
push
aaa
push
jo
adcb
jo
pop
mov
jmp
adc
xchg
shl
mov
lea
sbb
adcl
jmp
mov
addl
sub
push
cmp
or
aas
pushf
cmpsl
mov
push
pop
fdivs
jmp
push
imul
inc
cmp
pop
add
sarl
aam
rorb
jne
popf
push
xor
mov
jmp
loopne
clc
push
mov
roll
sub
test
roll
and
clc
hlt
xor
pusha
ret
add
stc
pusha
mov
dec
add
adc
hlt
enter
mov
mov
add
push
add
fidivrs
inc
fucom
dec
lret
and
addr16
call
cli
not
lahf
setge
movsb
add
and
add
mov
fistl
add
in
divb
push
add
jo
mov
mov
xchg
jp
mov
pop
pushf
adc
andl
leave
cld
xchg
cmp
pusha
nop
jbe
icebp
pop
pop
push
leave
lahf
dec
push
in
mov
pushf
and
std
loop
inc
inc
cld
push
sbb
mov
mov
or
sub
ss
clc
xchg
xor
call
push
daa
fistps
ret
filds
and
push
sub
je
add
pop
mov
inc
xor
shrb
xor
add
ret
aaa
jne
add
in
push
and
sub
js
hlt
push
add
and
sub
inc
nop
jle
dec
in
push
je
lahf
xor
bound
in
pushf
add
arpl
pusha
push
add
in
lds
pushf
pushf
lds
push
pop
inc
mov
sti
jno
pop
es
mov
call
and
cmp
cmpsl
in
or
sahf
shlb
out
cmc
push
dec
cld
mov
inc
hlt
xor
jb
out
or
clc
mov
push
mov
adc
mov
or
in
mov
lcall
in
clc
add
fistps
mov
inc
mov
xlat
sbb
mov
pop
mov
push
aad
and
push
mov
adc
pop
xor
mov
shrb
pop
aam
pushf
mov
adc
sub
hlt
das
dec
or
pop
push
mov
mulb
cld
shr
sahf
pop
pop
push
pushf
xor
shlb
xor
push
push
cmp
xchg
test
or
insb
xchg
jo
cmp
mov
push
mov
mov
fisubl
and
xor
lret
rcr
adc
ret
decb
scas
je
jmp
ret
cmp
xor
xlat
add
lock
lret
lea
add
push
push
pop
mov
fdivs
sbb
cmpl
push
roll
popa
pop
test
add
les
mov
fidivl
add
push
and
push
mov
iret
sub
aam
and
dec
add
out
cwtl
fnstenv
inc
lods
mov
pop
sub
fisubs
shl
xlat
mov
mov
les
shlb
inc
sarb
or
scas
sbb
lds
aaa
add
xor
ret
pop
daa
push
sub
xor
hlt
sub
stos
inc
add
sti
mov
in
fsubs
push
push
inc
push
pop
inc
out
fldl
mov
cmp
push
orl
dec
xchg
adc
or
sbb
xor
mov
popa
mov
lods
push
or
jb
test
sbb
fwait
or
push
add
mov
sarl
call
sbb
pop
iret
loopne
test
adcb
adc
add
jp
push
lock
add
jl
pushf
pop
push
sub
fisttpll
or
fldl
sub
jne
add
rol
sarb
adc
shrl
movhlps
mov
in
mov
xchg
loope
sbbb
es
lods
jno
leave
push
fldl
fsubrs
xchg
mov
jb
xor
or
mov
jo
cs
adc
ret
adc
call
sub
in
xchg
adc
jg
pop
stc
inc
and
cmc
mov
pusha
or
sbb
sbb
inc
sub
loope
adc
iret
ss
and
fmuls
pusha
push
push
lods
scas
fdivs
push
mov
call
push
and
lret
jge
mov
sbb
lcall
lods
mov
xchg
pop
push
xchg
repz
mov
xchg
push
cmp
xor
aam
sbb
cmc
jmp
popa
push
clc
sbb
mov
sbb
add
fnstsw
ss
and
cmp
aam
adc
pop
cmp
lahf
gs
push
push
aas
or
or
or
pop
test
sbb
test
and
pop
jne
test
or
sbb
mov
sbb
mov
push
popa
or
xorl
mov
mov
pusha
and
out
xor
data16
lea
call
pop
out
sbb
inc
mov
aad
int
fcmovne
inc
out
mov
adc
mov
jmp
cmp
and
ja
xchg
lahf
jmp
fsubrs
jbe
or
xchg
mov
xchg
andb
bound
push
adcl
movsl
dec
jmp
dec
mov
sbb
add
movsl
sub
and
enter
stos
mov
ret
push
jmp
mov
enter
ljmp
jmp
movsb
inc
aas
js
shl
adc
or
call
lahf
cli
psubb
inc
cmp
fwait
pushf
ficomps
mov
loope
rcrl
xor
test
mov
add
call
sub
inc
inc
sti
push
daa
mov
pusha
inc
add
cmp
test
mov
pop
mov
jp
push
mov
inc
das
ret
je
mov
test
adc
pop
push
cs
add
pop
xchg
test
pop
icebp
jg
or
push
mov
scas
jmp
ret
and
call
dec
dec
js
xor
add
addb
sbb
loopne
orb
mov
and
mov
dec
lods
sbb
or
xor
mov
aad
ljmp
mov
push
add
inc
push
push
mov
ret
sahf
xlat
cmp
push
lds
gs
ror
jp
inc
adc
mov
rcrb
pushf
gs
adc
dec
mov
jl
sti
and
lock
add
fisubs
pop
pop
mov
or
xor
add
push
add
aad
jmp
rorb
ret
dec
aas
lock
pusha
push
jnp
pop
popf
call
das
push
mov
inc
popa
insb
mov
addr16
dec
les
add
pop
push
pop
insl
rorl
call
push
es
cltd
add
fmuls
add
stos
xor
insl
xchg
cmpl
andb
pop
dec
inc
addl
pop
rclb
cmp
pushf
arpl
and
cmp
pop
jp
imulb
sbb
cld
mov
and
inc
icebp
xchg
jl
loop
jnp
mov
add
out
xchg
mov
mov
pop
jl
popa
mov
cmp
sti
xor
and
call
push
movntps
cltd
jmp
push
add
inc
clc
ds
fnstsw
dec
mov
call
inc
jae
push
or
cmp
add
sbbl
testl
sbb
sahf
stc
inc
mov
push
lock
cmp
xchg
adcl
pop
cmp
jl
rolb
call
push
pop
stc
jg
push
call
sbb
adc
push
out
mov
jmp
mov
or
ret
sbb
pop
xchg
lds
jg
xor
xor
push
scas
mov
mov
dec
mov
lahf
add
call
loope
push
or
sbb
mov
inc
daa
dec
push
or
mov
xchg
mov
test
sub
or
pop
imull
mov
mov
mov
xchg
ds
push
lcall
scas
pop
or
add
rclb
push
rolb
push
pushf
in
mov
inc
push
jp
insl
mov
mov
xchg
add
or
xchg
shlb
push
cmp
sub
les
and
fstpl
adc
jle
ret
inc
scas
inc
dec
addb
cltd
fdivrp
outsl
inc
stos
jae
daa
lea
push
push
mov
xor
jp
js
add
or
in
jbe
add
xor
loop
or
pop
loop
push
dec
or
push
cmp
aas
push
xor
mov
lock
cmc
pushl
pop
outsl
std
sub
pushf
mov
mov
mov
jae
in
or
clc
and
aam
decl
add
inc
mov
mov
and
mov
dec
aad
cs
inc
xchg
movsl
hlt
add
xchg
stos
das
inc
lock
mov
push
fisttpll
sti
pushl
dec
push
xchg
fidivl
in
mov
push
scas
insl
and
cmp
pushf
or
sub
jg
add
js
inc
test
int
fldenv
dec
aad
jmp
test
insl
cwtl
popa
popa
mov
adc
out
subl
add
xor
push
jbe
jnp
into
sub
mov
sbb
jmp
daa
xchg
pusha
ljmp
dec
xchg
cmp
leave
aas
mov
shl
sbb
lock
insl
je
in
dec
dec
dec
pop
das
add
aam
nop
mov
out
pop
mov
adc
test
xor
movsb
inc
jbe
cli
lcall
les
mov
fsubrs
icebp
inc
add
dec
or
sti
fildll
mov
ret
jg
ljmp
arpl
pop
pop
pop
push
add
mov
fstpt
and
cs
jg
jb
mov
push
pop
sub
fcomp
test
inc
out
fildll
adc
cwtl
inc
sarl
aam
mov
push
cmpsl
les
xor
outsb
decb
dec
adc
xlat
dec
sub
mov
jl
lret
adc
and
leave
pop
pop
dec
mov
clc
mov
add
jb
rcl
cld
or
jg
lock
inc
sbb
aam
push
lds
sub
sbb
out
sbb
in
popf
adc
dec
lods
add
jbe
mov
and
mov
sbb
incb
adc
adc
dec
addr16
outsb
int3
mov
ret
jns
jnp
mov
into
les
imul
sbb
jge
jnp
loope
jnp
dec
call
out
frstor
sahf
xchg
popa
sub
cwtl
xor
scas
in
sti
mov
inc
inc
push
and
jp
cmp
repnz
loopne
or
fiadds
sbb
dec
xchg
mov
and
inc
ljmp
daa
outsl
shrl
fwait
jg
jecxz
jg
popf
jge
imul
insl
pop
push
and
xchg
adc
out
fdivrp
jns,pn
push
mov
insl
push
lods
xchg
in
fs
push
ret
add
push
shl
push
int3
pop
sar
xchg
sub
mov
ret
jo
dec
rolb
mov
outsb
shl
cmpsb
or
push
fwait
aaa
rolb
sbb
cltd
in
cwtl
dec
inc
push
mov
incl
rcl
sub
xor
lcall
loope
dec
sub
aam
cli
fnstenv
mov
add
pop
jno
sbb
insl
sbb
fildl
ret
jno
dec
xchg
ret
aas
cmp
pop
lcall
sub
movsl
test
jbe
in
sub
ret
mov
out
mov
or
std
fwait
mov
sbb
lahf
arpl
mulb
adc
inc
cmc
mov
fisubrl
push
movsb
shrb
dec
test
ret
jp
rcll
aas
sub
out
test
mov
xchg
mov
and
and
insl
sub
add
insl
pushl
jg
and
nop
popa
xor
hlt
add
call
outsl
mov
stos
fs
outsl
push
lock
inc
pop
xchg
loop
cmc
mov
ficoms
mov
inc
inc
adc
outsb
sbb
das
push
or
in
ja
push
repz
cli
in
std
xorb
out
mov
jb
or
cmpsb
sbb
out
pop
std
fs
pushl
lods
jae
push
insb
pop
clc
or
cmp
sbb
pop
loop
xchg
push
sub
scas
or
adc
and
jns
or
decl
bound
sbb
scas
and
in
pop
lcall
pushl
xchg
iret
inc
dec
aad
dec
test
testb
mov
out
es
rclb
in
xchg
stos
xlat
push
hlt
jg
cmc
aaa
mov
push
out
insb
orb
mov
loop
push
xor
adc
push
inc
rol
testl
sbb
inc
sbb
fistpll
mov
out
sub
push
ret
loop
dec
std
xchg
adc
xor
pop
jnp
mov
pop
and
dec
aad
dec
pop
cs
sub
inc
dec
add
mov
jae
jno
test
hlt
mov
inc
push
rcll
daa
pop
je
jb
add
ljmp
arpl
push
mov
jge
xchg
mov
lret
cmovno
jno
push
ret
pop
lret
sub
xchg
decb
jnp
fldt
mov
mov
adc
add
push
mov
fwait
lret
push
lahf
in
inc
mov
test
jmp
loopne
std
cmp
jmp
stos
xlat
stos
mov
adc
pop
nop
push
pushl
push
out
bound
shr
nop
ret
in
lock
inc
pushl
lea
fwait
rolb
cmc
cmp
inc
adc
dec
lcall
std
maxps
push
mov
and
jg
fisttps
mov
fistl
adc
in
std
daa
and
mov
incl
inc
mov
adc
inc
lret
adc
push
rep
push
xor
aad
xchg
lods
aam
cmc
pop
lea
outsb
repz
sbb
sub
cmpsb
adc
pop
gs
sub
lea
ja
push
mov
insb
add
das
aaa
cld
stos
jl
xchg
mov
adc
lahf
mov
ja
mov
leave
sub
jns
pop
scas
lahf
xchg
mov
mov
ja
mov
fists
lock
stos
mov
decl
popf
roll
push
adc
test
test
pop
cli
jns
sbb
scas
in
shlb
mov
xor
dec
adc
push
fnclex
imul
pushl
fidivrl
out
rcrl
mov
in
mov
aam
das
add
movl
inc
cmp
ja
clc
jne
out
and
rclb
add
inc
stos
pop
clc
dec
fwait
rcrb
aad
in
pop
mov
pop
stos
push
ja
fwait
jne
ljmp
ljmp
xchg
movsl
out
adc
in
xor
shll
hlt
sbb
repz
inc
pop
xchg
and
or
outsl
adc
in
inc
jecxz
stos
push
push
mov
or
sbb
dec
xchg
mov
and
pop
les
cli
decl
adc
cltd
sahf
cmp
ljmp
pop
decl
addr16
xor
add
or
cmp
inc
aad
add
adc
cmp
test
sub
roll
ret
loop
scas
xchg
cmp
push
add
push
fldl
cli
icebp
es
jg
std
inc
decl
call
push
aaa
jnp
dec
xor
pop
cli
xchg
cltd
sub
sahf
repz
incl
out
das
add
cltd
adc
mov
add
pushf
push
adc
and
jmp
inc
pop
jecxz
and
adc
mov
pop
adc
loop
inc
ljmp
mov
push
or
add
adc
cmp
pop
cmp
cmp
push
lahf
or
add
pop
imul
mov
add
lds
lods
xorl
outsl
call
fs
movsb
xchg
cwtl
dec
push
fldt
shlb
mov
cmp
aam
push
gs
dec
movsb
arpl
jne
loopne
lret
inc
jecxz
push
inc
dec
aam
inc
xorl
stc
ljmp
push
call
aaa
add
scas
pusha
pop
adc
stc
jg
push
fbstp
inc
pusha
add
push
pop
fmull
loopne
pop
aaa
addl
jg
xor
adc
repnz
popf
and
push
sbb
jae
xorl
and
push
lods
inc
mov
in
nop
mov
dec
insl
mov
insb
dec
outsl
sub
pop
arpl
call
jp
xor
pop
inc
ds
stos
je
gs
xor
push
ljmp
outsb
lret
aad
lcall
shrb
add
inc
out
mov
cmc
push
xchg
jp
insb
or
or
lock
out
mov
sarl
fcmove
ljmp
jmp
sub
std
test
inc
shll
scas
mov
sbb
rolb
mov
insl
cltd
lret
decl
dec
inc
and
fwait
rorb
fiadds
decl
out
pop
pop
test
in
int
ja
adc
movsl
in
xor
subb
xchg
ret
aaa
cld
jl
out
pop
cmp
ds
mov
call
inc
sub
sahf
adc
xchg
std
and
out
pop
clc
ja
into
pop
lret
sub
movsb
inc
xchg
dec
adc
cmp
ret
pop
push
and
jg
pop
mov
adc
push
jge
pop
call
repz
adc
call
lods
ss
inc
jbe
inc
inc
test
fwait
and
fsubrs
std
and
adc
mov
sti
push
sbb
ffree
xlat
push
push
insb
aas
add
or
jo
jo
mov
iret
xchg
addl
sub
cli
adc
xchg
xchg
enter
lock
fdivrs
mov
iret
or
add
mov
sahf
roll
pop
xor
decl
sub
pop
pop
mov
dec
hlt
sbb
xchg
inc
test
ss
pop
ret
xor
jg
inc
imul
push
jle
cmp
insl
push
xor
pop
pop
push
xor
and
std
clc
outsb
das
mov
inc
mov
pop
mov
xchg
and
js
das
mov
push
iret
pushf
add
push
je
lcall
pop
add
and
jg
jns
loope
bound
jno
pop
xor
jg
pusha
adcl
inc
int
mov
push
sub
xor
jecxz
stos
fiaddl
lods
insl
test
push
dec
std
imul
jno
xor
test
rclb
jg
jae
xlat
jg
mov
dec
push
les
stc
or
pop
stos
pop
enter
cmp
jnp
dec
cmpsl
rolb
in
stc
aaa
bound
mov
xchg
add
add
sti
adc
stc
mov
cs
push
sub
cli
xlat
xor
clc
aas
nop
addr16
push
lods
fidivrs
imul
inc
pop
fldt
lds
dec
ljmp
and
xor
stos
jle
lods
aaa
dec
clc
xchg
mov
pop
pop
pop
mov
xorl
data16
adc
pop
enter
clc
fwait
xor
lock
cmc
and
cmc
std
mov
das
dec
adc
fcompl
clc
in
xchg
inc
or
cmp
sbb
pop
out
xor
mov
push
mov
rorb
repz
pop
mov
clc
mull
jb
and
mov
aaa
cld
lret
outsl
and
or
xchg
lret
mov
fcoml
fsubrs
iret
add
add
adc
mov
cld
mov
rcrl
pop
cmp
or
adc
inc
add
sub
jbe
cmc
xchg
mov
cltd
aaa
push
int3
dec
inc
push
stos
aad
outsl
std
das
adc
cmp
rorl
gs
mov
out
cmc
pop
mov
xchg
dec
movsb
popa
dec
aaa
and
outsl
cmp
das
mov
out
adc
lahf
ret
in
clc
and
mov
pop
lea
lret
ret
imul
std
or
stc
cwtl
and
push
outsl
xor
dec
add
iret
pop
mov
daa
push
push
jecxz
dec
jmp
pop
add
pusha
adc
mov
loopne
enter
jg
pop
enter
inc
aas
mov
cs
mov
jbe
gs
cmc
mov
iret
mov
mov
loopne
push
push
out
stc
inc
into
scas
sbb
das
cmc
sbb
shll
xor
pop
aas
je
mov
mov
cmp
mov
loope
arpl
fldt
lcall
sbb
mov
fistps
push
jo
inc
lods
das
fisubs
xor
xchg
js
mov
fisubl
pop
inc
jge
and
decl
divb
xor
jne
daa
pop
inc
pop
xchg
push
shl
cmp
mov
xchg
es
sar
cwtl
iret
out
dec
jecxz
push
cmp
aaa
lret
xchg
inc
das
adc
adc
enter
popa
inc
or
inc
insl
push
mov
fs
pop
call
movb
pop
push
xchg
sbbb
mov
decl
xchg
imul
pop
arpl
push
nop
add
stos
mov
add
jno
inc
push
inc
add
sub
add
ret
or
inc
aam
lahf
push
test
arpl
lcall
lods
adc
popa
fs
andl
test
push
push
outsb
push
add
gs
add
push
add
mov
add
push
les
jo
imul
sub
jo
adc
cmp
jecxz
dec
sub
stos
or
in
lret
and
cmpsb
inc
je
cmc
xor
in
bound
mov
adc
outsl
jo
add
rcrl
xchg
push
bound
cmp
push
add
xchg
bound
mov
popf
adc
and
mov
add
dec
mov
xor
cli
inc
add
nop
inc
cmp
add
ss
mov
add
adc
inc
in
add
mov
cld
packsswb
testb
fiadds
das
or
or
pop
jb
or
push
je
pop
inc
fistpl
incb
pop
xor
cmp
mov
jns
int
push
mov
or
mov
lahf
pop
imul
jne
mov
insl
jo
inc
gs
fldcw
je
movsl
mov
imul
int3
adc
or
int
cmp
paddq
data16
add
adc
arpl
mov
mov
lcall
outsl
jae
add
add
xlat
add
add
or
test
or
add
push
mov
add
add
or
adc
rolb
orb
fisttpll
mov
dec
pusha
cmp
cmpsl
sbb
orb
dec
test
mov
nop
sbb
test
cmp
adcl
sti
or
and
ss
adc
daa
lea
push
addb
xlat
or
pop
sub
mov
test
and
pop
push
divb
rclb
ret
or
add
addb
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
