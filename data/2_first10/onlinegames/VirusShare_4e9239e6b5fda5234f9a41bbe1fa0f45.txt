sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
push
test
cwtl
popf
mov
into
sahf
lcall
lcall
lcall
jo
insl
ret
xchg
fwait
fwait
testl
rcrb
hlt
mov
fadds
lret
je
jle
xchg
imull
mov
xchg
fwait
lcall
and
add
mov
test
por
scas
lods
cmp
mov
lea
lea
lcall
cltd
inc
adc
xor
xor
xchg
xor
dec
adc
xchg
xor
das
hlt
cs
cld
sub
xor
int
mov
les
call
daa
mov
es
enter
scas
cld
mov
mov
cld
sbb
sub
cld
sbb
xchg
adc
mov
mov
adc
adc
femms
lock
enter
in
cld
or
inc
adc
pop
push
mov
add
add
cmp
and
xchg
scas
add
jl
cld
pop
cmp
subl
aaa
out
paddusw
add
xor
pop
les
mov
test
je
adc
je
idivl
or
add
mov
int3
aas
adc
jb
addr16
cmp
xlat
stos
enter
scas
test
ljmp
inc
ljmp
xchg
in
jae
jmp
mov
icebp
repz
out
dec
xchg
dec
pop
pop
rolb
mov
xor
enter
cmp
repnz
movsb
ss
daa
sub
dec
jl
jecxz
insb
ljmp
test
repz
xchg
mov
out
repz
xchg
jp
insb
test
stc
pop
mov
adc
loop
add
testl
sar
cld
xchg
mov
xchg
mov
out
icebp
test
inc
int3
pushf
add
int3
and
or
loop
out
fbld
repz
pop
les
movsb
dec
ljmp
jmp
and
inc
jb
jl
mov
jb
scas
repz
jmp
and
test
out
fdivrs
and
sub
mov
call
mov
xchg
mov
push
or
xchg
jmp
repz
inc
ljmp
jae
call
scas
sub
iret
in
and
xor
lock
push
inc
mov
xlat
bnd
repz
ljmp
testl
aaa
jp
mov
in
repz
inc
ds
inc
cmp
dec
cmpsl
sti
xchg
adc
xchg
hlt
jecxz
insl
ret
pop
mov
fistpll
pop
mov
ret
and
ret
pop
mov
mov
or
idiv
mov
clc
or
andb
inc
daa
ret
dec
or
cmp
repz
lret
repz
cmp
xchg
cmpsb
sub
rolb
mov
outsb
out
stc
jne
sub
mov
mov
jp
mov
jmp
int
ficomps
idivl
cmp
dec
cmovnp
std
incb
jl
pminsw
iret
jmp
lock
dec
dec
andb
je
cmpsl
idiv
fildl
jb
xchg
push
push
dec
push
stos
pop
mov
inc
and
in
sub
out
aad
movsl
in
mov
pop
or
arpl
fildl
dec
mov
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
sub
mov
hlt
lods
cmp
or
mov
mov
testb
push
stos
fsubs
mov
arpl
pop
dec
shrb
enter
mov
sti
test
repnz
aas
into
mov
add
jl
add
mov
mov
or
lods
test
cmp
pop
jmp
pop
out
aas
inc
adc
and
loopne
inc
push
repnz
cltd
push
inc
xor
lods
cmp
scas
jne
inc
adc
cld
clc
lret
xchg
push
ljmp
xlat
dec
mov
stos
popa
inc
jecxz
ds
pop
sub
cmp
leave
test
loope
mov
pushf
bound
cli
sub
pop
iret
test
adc
lahf
dec
daa
mov
adc
pop
jnp
out
cmp
dec
cmp
or
or
sub
cmpsl
sub
and
and
ret
sub
cmp
mov
lret
and
stc
add
dec
xchg
test
stc
sahf
cltd
xchg
imul
imul
xor
idiv
mov
xchg
cmc
das
rcrb
add
xor
or
jbe
dec
cli
hlt
adc
popf
cmp
jb
scas
lods
pushl
cld
mov
push
ljmp
fcomps
jecxz
mov
iret
xrelease
ljmp
ss
mov
shll
sub
mov
ss
mov
dec
xor
adc
xchg
imul
lock
das
xchg
ja
cs
and
leave
dec
lods
mov
inc
cli
and
sbb
add
in
xchg
sub
jb
ljmp
test
or
ja
ljmp
adc
and
cli
mov
cmp
inc
jnp
icebp
jmp
pushf
cmp
lea
les
ret
cmp
add
fcoms
stc
fwait
pop
add
arpl
sub
mov
cmp
push
sub
xchg
adc
test
test
add
add
mov
ljmp
jo
sub
push
or
outsl
xlat
das
xchg
inc
push
in
test
sub
in
and
std
hlt
xchg
dec
test
insb
fcmovu
xchg
add
leave
cmp
in
fcomi
dec
or
test
xchg
cltd
fwait
das
lret
mov
nop
nop
xchg
mov
roll
iret
popf
insb
add
stos
mov
xchg
daa
insl
jb
hlt
xchg
push
or
hlt
dec
and
dec
fwait
mov
shr
adc
arpl
bnd
repnz
sarl
add
in
mov
pop
pop
les
push
cmp
repnz
jl
aaa
xchg
movsl
rorl
add
push
inc
xor
cmp
or
cwtl
and
scas
stc
pop
mov
popf
shl
xchg
jle
es
cld
ret
mov
pop
cwtl
ja
and
xorb
mov
popf
inc
add
jb
scas
stc
pop
adc
dec
inc
scas
repnz
out
in
lods
fadd
fwait
repnz
xchg
sbbl
scas
mov
inc
pop
stc
pop
loop
xor
test
lcall
hlt
adc
adc
movhps
ret
xchg
inc
mov
pop
repz
or
out
rcll
mov
mov
stc
ficoml
imul
repnz
add
cmpsl
fadd
sub
jno
sub
addb
hlt
xor
fidivrl
fidivl
xor
mov
shl
outsl
out
imul
int3
jb
cmp
sar
xchg
cli
int
mov
aam
je
repz
je
inc
cli
imul
arpl
decl
incl
inc
repz
cli
sarb
xchg
test
mov
mov
mov
mov
nop
cmp
pushl
out
std
stos
lcall
scas
cld
ljmp
add
movsl
outsl
repz
sti
cld
add
in
in
inc
loopne
mov
add
loopne
icebp
decl
xor
inc
mov
stos
xchg
xchg
dec
add
inc
inc
lea
fistps
fistps
xchg
fists
loopne
add
shl
repnz
fstpt
or
cld
add
and
push
push
inc
data16
cmp
data16
daa
mov
dec
data16
adc
inc
data16
clc
dec
mov
pushf
xchg
enter
cld
mov
xor
dec
nop
push
out
jbe
dec
icebp
fdivp
stc
repz
jge
xor
clc
sar
out
cld
cli
clc
push
rolb
clc
scas
repz
lahf
clc
inc
std
aad
out
clc
stc
mov
pop
test
mov
mov
es
clc
dec
daa
loope
popf
mov
hlt
jg
rcrl
sahf
mov
jmp
jl
add
pop
rorl
notl
std
jecxz
dec
rcl
test
xchg
jo
inc
into
cld
jae
and
leave
mov
add
loopne
mov
ret
cld
push
dec
cmp
lret
bound
add
aad
sub
mov
mov
mov
lret
mov
pop
dec
inc
xor
lret
adc
mov
sub
mov
mov
jno
test
fwait
inc
xor
mov
mov
imul
movsl
das
cmp
mov
and
push
dec
xchg
mov
int
aad
int3
pushl
addr16
test
and
mov
mov
jle
xlat
mov
mov
imul
data16
das
sbb
neg
in
out
es
out
sti
shll
jmp
aaa
jecxz
ret
jmp
jmp
inc
xor
arpl
jmp
repz
jmp
enter
bnd
pop
out
jmp
pop
mov
mov
daa
aam
cld
incb
pop
and
daa
xor
sub
imul
stos
test
or
movsl
cmp
cli
icebp
mov
ret
and
lret
ret
mov
mov
out
jne
xchg
out
je
mov
iret
out
test
out
aam
sub
add
cmp
dec
pop
idivl
mov
mov
loopne
dec
scas
stc
pop
sahf
daa
out
jno
ljmp
jge
jmp
sub
dec
cmpsl
rorb
mov
dec
idivl
shr
sbb
je
sbb
pop
add
cmp
in
gs
push
ffreep
sub
int3
and
mov
jno
pop
imul
lret
jg
fs
sbb
nop
lods
pop
pop
aaa
sbb
and
inc
stc
pop
shlb
test
mov
jmp
clc
pop
cmp
dec
xlat
mov
out
fistl
out
mulb
ljmp
jl
jnp
mov
lock
fmull
or
mov
aas
pop
cli
testb
mov
add
mov
xlat
xchg
nop
imull
xor
inc
adc
pop
cwtl
dec
out
je
jns
mov
cltd
mov
pop
fwait
rcrb
bound
mov
lret
jmp
jmp
push
inc
mov
lods
test
ss
lock
sarb
test
dec
cwtl
addr16
mov
lret
pop
repz
adc
pop
sarl
sub
hlt
jle
pop
test
and
dec
lock
test
jns
xor
aad
add
jbe
loopne
lea
and
pushl
jb
repnz
xor
mov
insb
mov
scas
dec
xchg
bound
iret
scas
int3
imul
inc
div
add
dec
adc
call
cmp
in
dec
cmp
mov
daa
cmpsb
in
add
dec
iret
jnp
test
xlat
mov
les
push
notl
adc
pop
xchg
daa
sub
pop
iret
loop
loope
sarl
sub
jmp
mull
mov
and
mull
xlat
sbb
sub
lahf
lock
movsl
inc
and
sar
mov
mov
ds
out
movsl
pop
in
repz
stos
iret
mov
jbe
clc
stos
arpl
and
mov
das
sub
xor
cmpb
jmp
ret
lds
lret
lds
lods
pop
ret
in
leave
mov
test
out
repnz
leave
dec
fs
sub
cld
cli
loope
xchg
shlb
or
cmp
outsb
xor
jle
xchg
pop
sar
fwait
pop
icebp
and
jae
fwait
jbe
clc
sbb
fwait
cmpsb
leave
push
enter
pop
mov
insb
lcall
cmpsl
imul
push
es
lret
xchg
adc
xchg
sub
and
cwtl
cld
and
and
pop
lret
xchg
xchg
fs
push
sbb
outsl
add
push
inc
cvtps2pi
dec
sub
aaa
scas
cli
cmp
scas
in
inc
jl
jmp
icebp
pop
sbb
pop
xchg
mov
shr
sub
xor
loope
cld
clc
xor
lods
lods
cld
add
cmp
adc
aad
push
ljmp
jns
mov
repz
les
popa
jne
cmp
subb
pop
dec
push
aad
mov
hlt
push
dec
inc
sub
je
lock
xor
adc
dec
sub
je
cltd
jle
and
ret
mov
pop
lret
rcl
aad
addr16
popf
pusha
cmp
test
jbe
pop
mov
mov
inc
mov
or
je
xchg
sub
dec
movsb
fdivrs
mov
mov
and
popf
testl
loope
xchg
add
and
cld
and
mov
scas
mov
mov
je
je
in
aad
xchg
or
repz
mov
sahf
in
idiv
jl,pt
std
scas
cmp
pop
and
pop
jl
sti
jl
adc
add
fnstenv
mov
mov
jbe
and
sub
fwait
push
mov
repz
cli
popa
adc
inc
je
ja
xor
jno
addb
mov
jb
imull
adc
adcl
das
mov
fdivr
ds
mov
hlt
nop
nop
test
out
out
cltd
outsb
mov
push
mov
pmaddwd
mov
imul
hlt
hlt
pop
mov
sti
mov
mov
out
dec
inc
and
sbb
imul
sbb
cmp
jbe
cld
mov
outsb
jle
subl
sti
push
xchg
mov
fnstcw
pushf
mov
cld
or
add
cmp
mov
mov
mov
adc
and
stos
lods
add
mov
rclb
mov
clc
and
jp
je
add
push
pop
cld
mov
rcl
jmp
jecxz
push
cmpsb
repz
dec
jp
xchg
addl
sbb
fists
enter
int3
je
jl
jecxz
cmp
cs
inc
mov
adc
xchg
jmp
xchg
in
xor
enter
cli
pop
fwait
cltd
jnp
mov
scas
in
pushf
cmp
lods
arpl
jb
int3
fs
dec
pop
iret
divl
xchg
xchg
sti
cld
shlb
lods
sbb
mov
insb
adc
test
ja
cmc
fildll
scas
add
mov
bound
orb
dec
je
jns
je
dec
fs
ret
mov
mov
movsb
mov
and
in
sub
push
in
out
inc
iret
and
mov
or
cld
pop
scas
ficoms
inc
mov
imul
jmp
and
mov
jmp
testb
or
cmp
jmp
mov
loop
fistpll
pop
ds
pop
xor
inc
ret
arpl
daa
mov
pop
mov
cmpsb
adc
push
arpl
xlat
mov
es
test
mov
call
mov
add
mov
test
mov
mov
pop
push
shr
add
idivb
mov
pop
divb
je
pushf
and
test
mov
push
and
cmp
xchg
sbb
incb
cli
xor
mov
mov
clc
lahf
scas
pop
icebp
jp,pn
out
mov
rclb
inc
sti
js
lock
mov
aaa
daa
adc
ficoml
mov
in
adc
pusha
cmp
aaa
cli
inc
in
cmp
push
insb
cmp
mov
hlt
xchg
push
dec
test
rcl
in
in
in
mov
neg
push
fcomps
daa
in
push
fbld
add
sahf
xchg
fwait
xchg
lcall
nop
pushf
mov
enter
mov
fwait
mov
popf
lea
inc
and
sbb
nop
fwait
mov
mov
lcall
mov
rol
psrld
mov
fldl
xchg
mov
and
lock
in
xchg
mov
and
hlt
cld
loop
jnp
add
and
test
xchg
mov
ljmp
test
xchg
jecxz
clc
add
and
lods
xlat
cwtl
fidivs
mov
xchg
mov
inc
and
nop
cli
stos
xchg
repz
les
lea
jge
in
cld
scas
rorb
loopne
xchg
xchg
out
pushl
jb
inc
cmp
inc
xchg
nop
jns
mov
testl
xchg
adc
mov
cmp
and
sahf
dec
mov
mov
jge
push
and
mov
jo
leave
sub
loope
and
mov
sub
cltd
stc
lcall
mov
xchg
repz
mov
dec
clc
and
popf
pop
jmp
jo
int
movsb
jnp
jp
lock
lea
dec
add
xchg
xchg
data16
out
xchg
sahf
mov
mov
nop
ljmp
mov
jle
sub
cld
rorb
inc
dec
jp
dec
out
shl
test
mov
rol
rcll
lods
mov
inc
push
std
fmuls
mov
in
cli
nop
adc
call
push
pusha
xchg
lcall
mov
mov
in
test
jl
dec
jg
lret
mov
and
pushf
pushf
nop
mov
mov
dec
and
xchg
cltd
xchg
pop
lods
ljmp
sbb
xchg
and
mov
call
ljmp
inc
fstpl
xchg
imull
cwtd
inc
dec
std
dec
outsb
jbe
sub
iret
mov
in
dec
push
dec
mov
add
fsubs
and
cmc
sub
dec
or
mov
jp
and
fdivs
mov
filds
add
sbbb
ja
push
arpl
xor
pop
into
add
ljmp
jecxz
mov
lahf
int
int
int
add
add
dec
int
int
int
int3
ljmp
int3
mov
pusha
int3
push
int3
add
icebp
lret
loopne
add
add
lret
push
lret
out
lret
movsl
lret
or
lret
sti
leave
out
leave
out
pushf
leave
add
cmp
sub
adc
pop
cmpsl
leave
jmp
in
fcmovne
aam
leave
enter
add
add
enter
enter
enter
fadd
int
cmpsb
sahf
xchg
movl
add
add
mov
les
les
test
ret
rol
ret
xchg
ret
add
and
dec
ret
inc
ret
aas
ret
fadd
enter
ret
ja
jno
imul
ret
push
ret
std
dec
adc
push
imul
mov
cs
or
insl
push
clc
dec
nop
inc
push
push
mov
push
lods
mov
push
dec
push
push
fdivrl
push
fcoms
sub
popl
push
or
inc
test
mov
mov
lock
stos
mov
mov
lock
sti
aaa
cli
cmpsl
lock
divb
adc
push
mov
xchg
pop
adc
das
test
aaa
push
and
std
std
lock
gs
jmp
jg
idivl
cli
test
lcall
aas
sub
les
push
cld
ja
lods
jmp
lret
and
adc
and
and
mov
inc
pop
mov
push
rorb
push
cld
or
in
out
cld
fistpll
fs
cld
scas
lahf
push
faddl
pop
mov
inc
repnz
push
in
rol
scas
lret
mov
lret
cltd
lea
push
cs
mov
aas
sub
or
mov
mov
mov
lret
mov
lret
xchg
adcl
sub
and
add
sub
cld
iret
mov
mov
lret
jge
pop
dec
cmp
lret
mov
sub
sub
cld
leave
mov
cmp
sub
dec
pop
outsl
mov
scas
imul
push
rolb
push
cld
pop
cmp
clc
dec
cld
inc
push
inc
push
xchg
cmp
jge
mov
cltd
xchg
gs
pop
mov
arpl
gs
pop
inc
cmp
daa
mov
adc
in
lret
mov
mov
jecxz
iret
lds
mov
call
sub
dec
xor
cld
cmpl
push
int3
mov
das
pop
jmp
push
cld
std
push
push
cwtl
fs
ffreep
xchg
push
fcomps
mov
fwait
jp
xchg
ret
lret
sub
daa
mov
imul
mov
ret
in
nop
cmpsb
add
mov
scas
mov
xchg
mov
in
stos
lret
in
aas
push
dec
inc
out
test
mov
mov
imull
lods
cltd
pushf
mov
andl
lods
mov
stos
test
lods
mov
jge
cltd
mov
sub
mov
mov
lahf
test
cwtl
mov
push
scas
mov
push
cld
jg
pop
rcrl
jg
out
xrelease
idiv
cld
out
lahf
mov
bound
cld
lahf
mov
repnz
cld
mov
aaa
lahf
cld
mov
fdivrp
fbstp
cld
outsl
mov
mulb
fbld
and
cld
mov
std
shr
jnp
das
cld
call
dec
mov
mov
adc
std
fildll
push
clc
testl
add
lea
incl
xlat
add
scas
cld
outsb
out
aad
mov
cmp
fs
mov
imul
stos
fiadds
cmp
stc
loop
adc
leave
or
iret
shrb
dec
clc
fucomip
pop
call
iret
lock
test
xchg
ljmp
fwait
sub
sub
pop
mov
mov
mov
lcall
loop
mov
lock
mov
lcall
hlt
call
stos
fbstp
hlt
mov
xor
nop
mov
cwtl
mov
es
clc
mov
jmp
xor
xchg
dec
jno
clc
icebp
dec
cs
fcomps
imul
outsb
hlt
mov
adc
xchg
adc
nop
lea
sarb
cld
shll
stc
cld
mov
stos
les
mov
mov
jbe
in
int
into
jmp
inc
inc
shlb
xchg
xchg
cli
in
push
shl
rcrl
add
pop
leave
xchg
cld
lcall
add
aas
xchg
out
cmpsl
pop
lock
je
cmpsb
add
pushf
repz
scas
je
add
jl
clc
ds
mov
and
mov
std
jbe
cli
std
push
leave
mov
aaa
sti
out
xlat
cwtl
jmp
or
jne
mov
adc
out
xchg
repz
mov
mov
and
cmp
xchg
divb
out
aaa
stc
and
movsl
ljmp
stos
jl
add
mov
dec
je
adc
int
mov
adc
fisttps
jmp
notl
in
aaa
jns
cltd
outsl
lock
lods
ficomps
inc
in
daa
out
into
loope
and
imul
cmp
nop
outsl
lods
dec
mov
xor
pushf
out
dec
jb
mov
shl
xchg
aam
in
cmpsl
xchg
clc
ljmp
lea
lock
adc
pop
push
inc
sub
xor
dec
sub
pop
push
jge
cld
test
aad
pushl
outsb
jle
movsl
loop
jne
mov
pop
dec
and
sti
lock
mov
nop
push
mov
and
repnz
xchg
rolb
ja
je
hlt
jo
adc
and
dec
sbb
arpl
mov
adc
push
rcr
fwait
mov
out
popl
outsl
ja
add
mov
movsl
pushf
rcll
and
mov
and
cmp
fstpt
xor
aam
scas
xlat
aam
loopne
fstpt
fstpl
imul
adc
lcall
xchg
out
jmp
add
ret
pop
and
mov
and
outsb
stc
into
daa
and
je
stos
xor
xor
dec
out
ja
ret
jnp
mov
fistps
les
xchg
sub
and
xchg
mov
xor
xchg
adc
pop
rclb
cmp
mov
cli
lock
jmp
jne
jne
leave
adc
adc
iret
insl
add
mov
shl
adc
mov
jbe
sbb
inc
dec
add
sub
call
je
aam
jl
cli
jbe
cmp
repz
or
cmp
mov
xchg
outsl
push
jmp
mov
stc
pop
cmp
mov
idiv
testb
sub
addr16
mov
test
inc
repz
shl
incl
inc
fiadds
fiadds
out
test
mov
loope
int3
add
repz
inc
lock
mov
cmc
popf
movsb
les
nop
add
mov
jne
jg
icebp
pushl
repnz
iret
loope
add
mov
cmpsb
addl
inc
movsb
arpl
lods
jg
lods
testl
jmp
pushl
jmp
clc
mov
xchg
inc
sar
pop
cmpsl
out
inc
pop
sub
pop
inc
out
jg
iret
inc
sbb
mov
imul
lds
fdivr
inc
ret
lret
inc
je
fistl
loop
cmp
jle
cmp
adc
xor
mov
std
sbb
int3
mov
sub
fistpl
out
mov
mov
iret
decb
sbb
mov
repnz
jge
out
push
test
ljmp
mov
mov
incb
fstl
dec
mov
loope
icebp
lea
rorl
mov
testl
test
out
cmpsl
sub
icebp
popa
push
icebp
and
test
add
daa
dec
mov
jb
daa
cmc
jb
cvtps2pd
cltd
pop
inc
cmp
movsb
xchg
sbb
xor
inc
dec
pop
out
pop
push
pushf
faddl
xchg
cli
andl
or
jg
leave
sub
xor
pop
dec
lahf
pushf
loopne
mov
xor
aaa
daa
dec
repnz
mov
lock
sbb
gs
out
push
stos
test
ds
jp
fcmovne
ljmp
bound
mov
mov
jp
jp
mov
jns
xchg
jl
pop
mov
dec
add
hlt
push
mov
repz
testl
or
movsl
cmpsb
mov
sti
dec
xchg
es
fists
clc
pop
adc
out
mov
dec
jb
test
std
or
mov
test
out
cmpsb
lea
jl
mov
les
mov
jno
out
fs
mov
testl
test
jl
mov
adc
movsb
jecxz
jmp
xchg
std
test
add
jge,pt
leave
movsb
ljmp
icebp
scas
scas
cld
mov
in
jno
loopne
incb
jno
xchg
sbb
int3
jmp
iret
lock
mov
add
out
and
adc
enter
lds
cmp
rorb
or
inc
pop
scas
xchg
and
jne
cld
mov
sbb
pop
loopne
lea
adc
clc
loopne
movsb
or
pop
push
into
sbb
inc
outsb
xchg
cld
cmp
ljmp
cmp
pop
xor
idiv
cmp
jne
movsb
inc
and
stc
pop
dec
test
sbb
notl
call
xor
push
xchg
push
sub
setae
les
decl
jnp
outsl
fdivrs
jg
or
sbb
xchg
mov
ret
into
or
iret
ret
into
outsb
sbb
imul
adc
loope
cs
movsl
bound
fdivs
mov
iret
addr16
test
inc
testl
pop
fsubrs
out
gs
in
sub
clc
xchg
pop
xchg
out
jge
mov
cmp
pop
push
adc
inc
stc
sub
ljmp
fsubrp
cmp
insb
outsl
jnp
jnp
jmp
add
das
daa
out
cli
ljmp
jns
shrl
and
loop
bound
cli
in
jno
jnp
mov
add
ret
lar
push
out
arpl
xchg
mov
cmpsl
das
dec
mov
dec
xchg
cmp
fcomi
cwtl
xchg
repz
push
in
scas
repz
outsb
sti
mov
std
lods
xor
es
push
iret
fisubrs
repz
cmp
sbb
jl
ret
cltd
adc
mov
cli
mov
or
xchg
pushf
or
std
das
es
fldl
ja
xor
cltd
xchg
xor
scas
out
jns
outsl
xor
iret
mov
jmp
jnp
pop
ficomps
add
fdiv
xor
test
testl
fisttps
cmp
loope
dec
or
std
pop
addl
stos
mov
adc
out
mov
les
adc
inc
test
jb
cmp
jnp
les
int3
jbe
verr
scas
fsubrl
xchg
mov
add
je
les
and
lods
mov
xor
repz
jp
into
sahf
inc
addb
mov
cwtl
andl
test
data16
or
push
push
adc
sbb
dec
fbstp
sbb
mov
test
insl
jne
ret
mulb
aas
mov
mov
xchg
cld
iret
sbb
dec
test
nop
je
xchg
mov
lods
adc
or
cwtl
mov
stc
adc
in
dec
adc
lea
cmp
aam
into
sti
aas
pop
dec
mov
add
scas
pop
push
adc
cmc
shll
mov
stos
hlt
jne
shrb
mov
fdivr
mov
mov
std
int
mov
lcall
mov
pop
lahf
movsl
pop
cmp
cmc
lds
pop
aas
pop
pop
mov
fdivrp
out
pop
xchg
les
insl
jge
rclb
into
test
jge
fstps
lcall
or
cld
mov
in
out
movsl
repnz
pop
sub
pop
or
aas
xchg
mov
test
daa
xchg
mov
ljmp
fldcw
jl
adc
sti
into
cmpl
aad
add
cs
sub
fdivrl
push
dec
add
jle
mov
repz
add
xchg
ss
in
std
fidivrl
mov
jmp
std
mov
mov
nop
mov
icebp
je
test
aas
pop
rol
and
add
ds
loop
mov
push
ss
jmp
add
cmc
jecxz
nop
sub
and
jne
ja
stc
call
in
mov
push
leave
cmc
or
cmpsl
dec
sub
and
sti
ds
add
sti
test
mov
lret
dec
cli
data16
ds
outsb
mov
inc
xchg
in
mov
add
adcl
sub
add
sub
or
add
sbbb
out
jb
call
je
ds
repz
mov
add
dec
and
sub
shl
or
cld
out
jb
enter
mov
or
adc
and
or
or
shl
cmpsb
mov
and
push
xchg
cli
cmpsb
jmp
and
cmpsb
ds
ds
out
jmp
pcmpeqb
fmull
or
inc
adc
mov
pop
ror
adc
inc
mov
adcb
hlt
or
or
inc
pop
dec
andb
stos
inc
cld
and
in
lock
inc
shlb
sbb
stos
stos
cmc
mov
and
sub
fisubl
cld
in
stos
in
aad
js
je
and
dec
sbb
jmp
jge
je
jg
ljmp
and
cmp
nop
aam
in
mov
shr
lret
and
adc
dec
or
mov
push
add
ljmp
adc
sbb
add
jmp
fnstcw
jl,pt
lret
pop
dec
dec
lret
daa
addr16
adc
jmp
xchg
xchg
and
das
and
icebp
jp
das
xlat
loopne
or
push
add
dec
pusha
and
je
pop
mov
or
sti
dec
movsb
stos
mov
dec
dec
xor
sar
aad
daa
stc
sub
cli
cmp
daa
cli
inc
sub
mov
sbb
faddl
movsl
iret
stos
cmp
fucomp
outsl
xchg
js
mov
lret
and
daa
xchg
mull
insb
mov
push
adc
cld
stos
add
hlt
push
dec
fiadds
and
pop
mov
aaa
cld
clc
mov
xchg
sti
xor
andl
push
add
repz
xchg
add
hlt
cmp
jmp
std
fdivp
dec
mov
cmp
cmp
pop
or
sub
leave
and
daa
sub
stos
je
popf
or
pop
sub
xchg
loop
jns
hlt
sub
pop
ret
cmp
mov
repz
dec
mov
jmp
xchg
sub
dec
pop
lea
or
or
out
repz
mov
loop
and
push
push
push
cmp
rcr
adc
xchg
movsb
pop
xchg
dec
mov
inc
dec
es
mov
jae
pop
ret
push
sub
js
dec
jae
cmp
stc
aas
jns
jmp
std
lahf
jo
inc
sub
stos
fisubl
push
add
jle
pop
daa
sub
icebp
pop
jp
adc
cmpsl
scas
and
dec
dec
dec
ret
aaa
add
sbb
shlb
notl
and
dec
sbb
mov
dec
sbb
push
ficoms
outsb
pop
dec
and
es
cld
sub
enter
dec
repz
jo
in
cmp
cmc
jns
mov
push
inc
mov
sub
icebp
out
adc
sahf
negl
es
jns
mov
mov
je
movsb
out
inc
mull
and
push
daa
test
xchg
jo
dec
cmovle
and
pop
pop
adc
fucomi
mov
cmp
or
je
imul
jnp
es
nop
cwtl
sub
icebp
movsb
sbb
jo
mov
test
je
jne
aad
jae
xchg
push
and
mov
das
out
push
mov
shlb
lahf
jecxz
sti
push
add
and
push
mov
add
jle
mov
cs
ret
hlt
jge
shl
sbb
testl
cs
dec
jle
mov
int3
lret
inc
pop
pop
mov
sbb
fildl
mov
pop
xchg
and
int3
dec
adc
cmpsb
jae
out
mov
add
imul
xor
mov
lea
or
or
loope
mov
mov
or
mov
ror
repz
cmp
jg
sbb
sub
iret
cmp
loope
enter
or
cmp
xlat
cmp
call
adc
xchg
cmpsl
mov
cwtl
int3
and
scas
dec
dec
aas
iret
adc
and
sbb
and
push
xchg
pop
xchg
js
cmpsb
inc
ja
adc
movsl
in
lods
shl
mov
and
cmp
inc
push
and
inc
or
bound
pop
sbbl
adc
xchg
mov
adc
mov
lcall
jl
pop
xchg
mov
insb
jle
sub
out
mov
sahf
and
das
in
push
stc
hlt
loope
repnz
hlt
jb
out
int3
jg
dec
stc
insb
sbb
mov
jmp
in
pop
inc
lock
pushf
xchg
xor
out
test
xchg
xchg
pop
jno
lea
insb
add
adc
and
int3
dec
loop
into
push
push
sub
and
in
shrb
cmp
movsb
lcall
xlat
scas
sub
sub
adc
push
in
insl
xor
jo
mov
cmp
cmp
mov
roll
adc
lock
or
jmp
ret
xchg
loop
out
adc
mov
lret
out
sbb
adc
mov
push
and
loop
test
push
nop
mov
stc
test
in
ror
leave
add
arpl
pop
sbb
add
cmc
test
aas
das
jb
cmp
loope
mov
dec
pop
adc
loopne
out
divl
cli
inc
jge
lods
push
sub
sbb
lds
cmp
or
daa
pop
lret
inc
lret
shlb
daa
pop
and
jp
int3
cmp
aad
sub
hlt
cltd
lock
dec
jp
xorb
jns
je
lods
mov
mov
movsb
adcb
mov
pop
push
mov
xlat
stos
jmp
repz
repz
inc
jmp
js
mov
stc
je
mov
mov
jg
mov
les
cmp
xchg
xchg
xchg
gs
xchg
mov
sub
jge
cmpsb
xchg
sub
add
test
cmpsl
and
mov
xchg
pop
jge
mov
or
nop
outsl
xor
scas
xor
les
and
icebp
clc
out
les
icebp
pop
and
out
cmpsl
xor
fisubl
es
outsb
int
pop
xchg
mov
clc
lds
pop
cmpsb
lods
data16
mov
call
clc
mov
jb
dec
enter
cwtl
cmp
dec
mov
mov
jecxz
sbb
xchg
mov
and
or
pop
ljmp
test
jb
pop
cmpsb
in
idivb
fcomps
or
fwait
xchg
js
lods
and
inc
jle
xor
sub
aas
cmp
jmp
pop
stos
stos
imul
add
jmp
lret
mov
pop
pop
pop
gs
add
xchg
cmc
loop
std
daa
push
pop
mov
sub
sarb
and
mov
repnz
and
rcrb
sbb
test
ds
jne
and
mov
lods
out
cs
mov
xor
or
or
fcoms
pop
cmpsb
out
push
pop
pop
mov
cltd
dec
das
xchg
js
sbb
stos
scas
repnz
sahf
sub
daa
lcall
pop
lcall
stos
sbb
nop
ret
movsb
xchg
and
mov
mov
aas
mov
xlat
add
jbe
mov
jne
lahf
cmc
pop
stos
fsubl
jle
rol
mov
pushf
stos
aam
add
pop
addr16
and
test
xor
leave
movsb
xchg
imul
xchg
push
mov
and
and
xor
mov
call
cltd
clc
iret
ljmp
hlt
jecxz
iret
imull
cmc
xchg
je
fistps
cld
cmp
add
pop
mov
pop
stc
xchg
daa
imul
add
ss
fwait
mov
or
inc
clc
bound
add
jb
notb
call
adc
fstpt
shll
scas
lods
scas
loope
jnp
ja
cld
scas
lahf
jmp
mov
ss
cmp
cmpsb
mov
inc
mov
jae
jbe
sub
movswl
stc
and
adc
les
pop
jne
mov
lahf
imul
pop
jg
rcr
movsl
pop
and
cmpsl
adc
jbe
fucomi
push
jge
add
adc
push
inc
repz
cltd
loope
lea
lds
add
pushf
cltd
je
sti
cltd
ret
mov
cli
fadd
sub
ficoml
in
push
repz
sbb
daa
sbb
and
test
fs
clc
mov
addr16
or
sbb
mov
clc
and
nop
clc
jne
lods
pusha
inc
and
test
and
mov
mov
jno
mov
mov
adc
or
mov
sti
ret
rorb
push
adc
inc
xor
aaa
lahf
fcoms
dec
or
movsb
incb
cli
xor
fildl
mov
push
xchg
ficomps
pop
lds
dec
jg
movsl
outsb
jmp
mov
movsl
lahf
jle
pop
mov
aaa
rcrb
cli
push
hlt
addr16
mov
add
imul
cmpsb
jmp
ret
lods
inc
or
stos
and
js
outsb
stos
mov
mov
dec
nop
shrl
dec
xchg
std
jp
sub
and
dec
dec
xchg
pushf
out
cmc
repz
add
mov
and
clc
cmp
int3
sub
icebp
inc
ss
or
adc
in
les
test
xor
add
data16
inc
sbb
add
cmc
jae,pt
and
in
fdivs
fisubl
pop
scas
mov
rorb
les
dec
pop
mov
inc
fs
fxtract
leave
in
dec
adc
push
sub
iret
add
dec
inc
rclb
jne
cmp
pop
idivb
xchg
loopne
xchg
iret
mov
or
sysret
movb
inc
jecxz
je
arpl
or
arpl
add
dec
fimuls
cmp
clc
sti
mov
pop
or
mov
fisttpll
pushf
xchg
negb
mov
shrb
stc
call
xchg
std
aas
out
fstpl
lcall
sbb
mov
clc
pop
jno
adc
ret
lret
mov
sub
fnstsw
ret
decb
clc
lds
pop
notb
inc
add
iret
xchg
or
shr
inc
jae
cs
aaa
insb
out
test
adc
mov
lcall
or
out
xchg
jae
leave
xchg
filds
jecxz
push
xchg
ds
push
lcall
dec
cmovne
xchg
les
lods
mov
repnz
sub
xchg
xor
push
xchg
cld
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
xor
dec
lea
inc
mov
inc
jbe
xchg
sub
inc
faddl
cld
inc
xchg
inc
fwait
ljmp
lcall
xchg
nop
lea
imul
and
cmpsb
jmp
sahf
xchg
movsb
imul
imul
adc
mov
adc
femms
or
inc
xchg
or
aas
sarb
sub
mov
in
push
and
cmp
lret
fmul
shll
iret
aas
dec
mov
pop
adc
dec
mov
bound
lea
mov
mov
mov
jne
xchg
cmpsb
xchg
cmpsb
dec
ror
mull
dec
out
ljmp
ret
xor
aas
sarl
xchg
sub
call
and
arpl
push
pop
rcrb
fwait
sub
cltd
xor
jb
stos
add
fwait
enter
pop
mov
mov
mov
aaa
jne
rorb
dec
test
int
jo
push
add
shll
ds
sahf
lea
jae
scas
mov
ret
in
sub
mov
inc
repnz
cs
fldt
add
mov
es
aam
pop
mov
imulb
dec
faddl
mov
repz
nop
insb
imul
lahf
enter
scas
data16
pop
jnp
mov
cmp
shr
les
inc
stc
sbb
iret
movsl
lret
inc
pop
push
js
mov
dec
repz
fsubl
imul
std
push
or
daa
jle
pop
add
sahf
add
ret
out
mov
movsb
repnz
data16
outsl
cmc
rcl
cld
daa
sbb
push
icebp
or
push
pop
jge
je
rorl
xchg
rcrb
push
scas
and
jno
into
cli
fsubl
out
test
cs
cmpsl
or
out
inc
jle
cmp
test
jl
inc
lret
cli
enter
repz
sbb
cmpsb
ljmp
sti
or
fwait
test
outsl
iret
mov
inc
inc
loope
arpl
rorl
repz
push
fsubs
xchg
jae
sahf
sub
ret
mov
pop
pop
mov
pushf
mov
in
sbb
std
ds
repz
cld
movsl
dec
cmp
add
dec
mov
out
std
mov
notl
clc
push
rolb
cs
jp
popf
pusha
sbb
movsl
aad
out
add
jns
fiaddl
dec
sti
add
jl
idiv
sub
adc
mov
mov
scas
inc
or
jl
pop
sbb
pop
pop
ret
cmc
cmp
adc
out
insb
ljmp
vpshaw
fists
call
pop
inc
aam
cmp
pop
loope
cmpsl
add
mov
lock
imul
jnp
pop
jp
push
mov
fisubs
roll
cmp
loope
ret
dec
and
lahf
inc
mov
xchg
pushl
and
movsb
in
adc
jle
ffreep
and
notl
inc
rorb
cmpsb
cmp
leave
cwtd
stos
jae
aad
sbb
outsb
sti
lahf
aam
cmc
pop
fisubrl
jae
lret
std
sub
ret
jl
jae
ffreep
cmp
rcrb
or
or
jmp
and
pusha
xchg
cmpl
xchg
sbb
xor
or
inc
scas
jg
ja
xchg
ficompl
push
mov
leave
xor
call
test
jmp
xchg
scas
clc
pop
repz
fisttps
or
decl
push
jge
xchg
lahf
jle
push
inc
inc
out
in
icebp
mov
call
jg
pop
cld
adc
pop
jbe
pop
xchg
and
adc
adc
lds
push
adc
hlt
push
sahf
jne
clc
fs
testb
or
inc
cmc
mov
mov
push
rcrb
aam
lea
mov
cltd
xor
lahf
scas
cld
sar
stc
ja
ret
repz
xbeginw
int3
aaa
fistpll
imul
xchg
adc
mov
or
ljmp
mov
daa
js
js
js
int3
aaa
fistpll
sarl
pop
xchg
mov
test
mov
ss
in
inc
lds
out
cmp
js
cmpsb
add
pop
jns
loope
ret
jg
scas
ret
sbb
rolb
leave
jge
add
out
in
mov
cmp
ret
das
and
lods
pop
jmp
lea
dec
jge
xchg
sbbl
shrb
jge
ret
mov
mov
cmp
imul
xor
dec
jmp
in
loop
aam
icebp
mov
loopne
mov
jb
imul
scas
mov
pushf
scas
sub
imull
mov
cmc
out
gs
out
cmp
add
mov
jbe
push
sbb
pop
clc
bound
mov
pop
xchg
test
xor
out
stc
js
mov
push
dec
insb
lahf
push
cmp
stc
dec
and
incl
cmp
out
or
jge
ds
out
push
rcrb
pop
call
mov
push
xchg
adc
or
addb
mov
push
xchg
daa
mov
es
loope
fcoml
xchg
loop
sti
inc
mov
xchg
ja
push
loopne
push
cmp
xchg
mov
les
sti
loop
ds
std
lahf
xor
test
aas
icebp
movb
iret
bswap
call
sti
mov
push
pop
out
pop
dec
hlt
fld
mov
fwait
jmp
sti
imul
mov
aad
push
out
and
mov
imul
ficompl
jmp
rolb
fsts
jns
sti
xchg
push
clc
pop
imul
pop
stc
pop
idivl
scas
inc
inc
jge
sahf
test
or
or
pop
mov
scas
fdivr
adc
add
jmp
jecxz
loope
push
cmp
jl
mov
add
push
aam
aad
push
enter
sub
mov
sarl
push
fisubrl
lea
ret
push
movsb
shrl
mov
clc
popa
in
and
gs
pop
hlt
pop
in
pop
mov
pop
in
pop
mov
pop
pop
mov
in
push
mov
push
clc
push
call
sub
dec
lock
call
lret
in
dec
dec
dec
dec
push
inc
push
mov
inc
pop
inc
in
inc
xchg
popf
call
sub
mov
cmp
cmp
mov
sub
lret
xor
shlb
mov
xor
das
mov
push
adc
sub
sub
sub
sub
daa
es
jle
adc
and
lods
and
in
pop
rcrb
fld
mov
lret
xor
mov
cmp
mov
push
push
inc
adc
adc
adc
test
in
pop
adc
stc
inc
or
in
xchg
pop
test
in
in
push
push
push
dec
push
in
add
push
jae
ret
xchg
aas
pop
addr16
in
cmpsl
push
lahf
out
push
cli
lret
xorb
lock
sub
xor
mov
repz
sbb
cld
sub
out
icebp
lcall
lret
ja
scas
stc
das
loope
inc
out
lret
dec
xor
scas
in
in
repz
cli
mov
into
jbe
mov
scas
scas
ss
popf
sbb
lahf
stos
xchg
and
inc
mov
lock
cmpsl
sbb
add
out
imul
pop
pop
dec
sub
or
mov
dec
pop
push
inc
testb
mov
call
mov
jns
xor
stos
test
cmpsb
lret
cmc
clc
gs
clc
repz
int3
test
mov
stc
pop
movsb
mov
in
fmull
gs
pop
lret
test
test
cmp
cld
lods
xchg
mov
loopne,pt
popa
out
xchg
cli
test
out
fsubr
inc
sbb
inc
adc
mov
fxam
cmp
jge
adc
orl
shll
daa
insb
jge
sbb
bound
pop
pop
bnd
and
repz
outsl
je
jmp
cmpsl
xlat
xchg
inc
push
dec
inc
mov
ret
test
push
test
cld
ffree
lea
mov
mov
imul
aam
fwait
mov
mov
push
call
dec
mov
dec
cmp
js
cmc
aaa
std
xor
es
std
sub
and
pop
sub
pop
pop
loope
sbb
out
clc
jp
fsubp
test
cmp
test
lods
xorl
fisttps
mov
in
jne
dec
xchg
push
fsubr
imul
xchg
in
xor
xchg
mov
dec
cmp
and
ret
ljmp
mov
fucomip
and
mov
mov
add
stc
xchg
pop
mov
outsl
cmpsb
out
xchg
jne
and
repz
add
int3
add
xor
push
test
sarb
test
push
rcrl
aad
jmp
mov
lock
xchg
mov
les
or
sbb
repnz
cmp
mov
xlat
out
add
mulb
pop
mov
mov
test
and
stc
mov
lret
mov
mov
stos
dec
jle
sub
test
pushf
add
dec
pop
cwtl
fwait
dec
sub
in
sub
mov
pmulhuw
in
or
movsl
mov
lret
mov
in
mov
mov
mov
lcall
sub
mov
sub
sub
mov
xorb
dec
lcall
lcall
scas
dec
mov
shlb
jbe
jne
je
jae
mov
fnstenv
jo
outsl
mov
mov
scas
insl
mov
push
adc
insb
imul
mov
lds
xchg
pop
and
add
mov
gs
lods
lcall
mov
aam
rcrl
mov
sub
mov
mov
mov
lret
mov
mov
lcall
cmp
fwait
fwait
push
pop
hlt
ja
daa
das
in
fwait
mov
pop
xchg
loop
popf
testl
icebp
dec
xor
add
rcl
lret
repz
xchg
lds
pop
std
call
inc
bound
clc
rorb
stos
sub
lret
pop
aaa
icebp
loopne
call
lock
out
cmp
sarl
jne
lea
jmp
mov
mov
cwtl
lods
out
sti
divps
xchg
sub
dec
mov
mov
xlat
lods
jne
cmc
jle
fsts
mov
or
test
repnz
ja
cli
in
mov
inc
push
mov
test
idivl
dec
cld
rorb
add
cld
outsb
fnsave
das
imul
xor
cmp
jo
add
jne
or
mov
xor
iret
xor
cmp
ja
xchg
rorb
fbld
popf
testb
lea
outsl
repnz
mov
stc
inc
loop
xchg
shll
iret
add
movsb
arpl
and
cmp
cmp
pandn
adc
jg
hlt
ret
gs
jno
das
pop
mov
int
ds
xchg
mov
daa
lret
pop
mov
cld
pop
lea
mov
adc
pop
mov
fisttps
lock
cltd
loopne
add
mov
pop
jge
pop
nop
gs
xor
add
loope
pop
jg
mov
adc
xor
xchg
xchg
ret
cmp
test
mov
inc
jbe
jl
setg
or
sub
fcmovnu
clc
rcl
pop
stos
adc
cmp
dec
xlat
mov
push
xlat
mov
ret
lods
ror
cmp
push
sub
mov
xchg
loop
pop
test
xchg
lods
ret
rorl
enter
gs
enter
popf
ljmp
jl
push
pop
fmull
or
mov
fwait
pop
aas
imull
scas
daa
cmc
pop
fidivl
je
jp
stos
mov
sub
arpl
enter
pushf
mov
jnp
adc
cmc
daa
lock
loopne
sub
or
loopne
pop
xchg
daa
mov
sub
xchg
loopne
call
jg
mov
push
out
jae
push
cmp
pop
leave
fcomp
std
sub
xchg
jle
add
push
decl
cmp
ja
cli
xor
pop
mov
push
js
rclb
adc
adc
xlat
aas
pop
lcall
lods
enter
mov
push
into
and
sbb
cmp
ret
sbb
mov
popf
adc
jecxz
rorl
sub
mov
pop
cli
ret
xlat
mov
jb
arpl
out
dec
mov
mov
daa
in
cld
mov
lret
std
int
xor
cmc
cmp
xchg
jnp
pop
hlt
ljmp
icebp
std
push
push
pop
shl
scas
icebp
jnp
stc
out
mov
and
pop
rolb
xchg
icebp
sub
test
mov
add
out
sarl
jae
or
mov
loope
sbbb
mov
mov
int
js
jg
rorb
out
add
stos
lret
test
shl
jb
subb
push
xchg
lds
les
movsb
inc
fs
and
jle
adc
or
insb
aaa
lahf
stc
icebp
pop
cmc
cmp
sti
outsl
adc
cmpsb
mov
hlt
aaa
out
fwait
clc
inc
enter
icebp
xchg
inc
aaa
sub
push
push
cltd
fimull
lret
repnz
gs
fs
lret
lret
lret
lds
popa
xchg
pusha
mov
mov
lret
pop
rcrl
and
sub
das
lret
fcomps
pop
xchg
push
fsubs
fcoml
push
mov
xor
hlt
lcall
mov
mov
inc
inc
lds
mov
inc
int
mov
sub
mov
ds
cmp
cmp
mov
lret
cmp
popf
aaa
arpl
xor
gs
adc
sub
mov
daa
push
xchg
pop
xchg
es
xor
adc
and
and
and
pop
xchg
dec
and
mov
cltd
aam
mov
push
jl
or
test
stc
mov
xchg
pusha
test
call
std
in
mov
mov
or
adc
icebp
das
adc
jecxz
clc
dec
adc
addr16
mov
mov
fidivl
or
ret
pop
out
or
aam
arpl
subb
arpl
jbe
in
xchg
out
scas
idiv
cmc
jnp
xchg
mov
out
leave
mov
push
mov
lcall
nop
cwtl
xchg
xchg
xchg
fldt
mov
repnz
add
pop
dec
mov
test
loop
repz
mov
test
loop
jp
cld
test
mov
pop
cli
pop
adcl
in
in
sti
pop
lahf
sub
pop
cwtl
sti
js
add
fisubrl
je
inc
xchg
das
shrb
pop
mov
dec
mov
inc
fdivrl
enter
and
jge
fisubl
out
mov
sub
add
cmp
out
cmp
out
ss
pop
fcomps
xor
xor
fmuls
mov
mov
addr16
jecxz,pt
loop
lock
jge
imul
jge
movmskps
jae
std
mov
mov
push
sub
jo
xchg
mov
push
mov
adc
xchg
and
ficoml
hlt
sete
xchg
gs
lea
mov
mov
or
jge
testb
fwait
mov
mov
add
jl
adc
or
mov
popf
jecxz
idivl
pop
cmp
mov
pop
fucom
xchg
into
pop
test
jecxz
popf
lods
stc
adc
ljmp
test
hlt
inc
in
fld
add
hlt
xchg
iret
cmc
pop
jmp
popf
into
nop
or
and
mov
lahf
testl
shrb
test
out
sti
repz
cli
xchg
cld
and
roll
pop
push
and
cs
loopne
nop
dec
lahf
lods
cmp
idivl
sub
pop
mov
mov
xor
ret
cmc
jbe
mov
clc
dec
pop
jle
lods
or
or
aas
jp
mov
cmp
inc
bound
push
xor
ds
cmc
jecxz
mov
dec
pushf
fs
jecxz
outsl
jecxz
pop
jecxz
ja
lret
jl
in
lea
std
cwtl
xchg
testb
es
lcall
in
or
mov
subb
mov
mov
lcall
adc
adc
call
in
dec
xchg
inc
enter
sbb
lods
xor
nop
test
adc
mov
pop
out
xchg
out
mov
lods
mov
or
mov
dec
decl
in
add
scas
fisttpl
mov
mov
xchg
mov
aaa
add
test
repz
jp
xchg
jmp
dec
mov
ret
lods
iret
test
call
fsubrs
out
push
mov
mov
cld
lds
mulb
mov
lret
inc
dec
mov
dec
lock
add
dec
adc
test
cmp
lcall
inc
stos
aad
inc
pushf
ss
dec
add
jp
js
rorl
loopne
hlt
or
add
ss
icebp
dec
cs
pop
jnp
es
shll
movsb
xor
scas
push
aaa
clc
xor
or
shlb
std
lods
sub
js
das
out
cmp
test
out
cmp
mov
imul
xchg
loopne
xchg
stc
sbb
shlb
es
pop
mov
mov
adc
and
adc
xchg
int3
and
adc
xlat
divl
adc
pushf
stc
pop
imul
out
or
bound
hlt
rcrl
jo
or
in
inc
fprem1
add
cld
ja
jmp
xchg
sbb
sub
jge
fldt
ret
test
test
jg
je
lahf
mulb
jo
sub
xchg
sub
inc
sub
int3
hlt
ljmp
out
jo
insl
mov
jnp
mov
pop
xchg
imull
add
cltd
push
scas
cli
incb
mov
push
mov
mov
test
ja
sahf
mov
mov
out
jnp
ljmp
lcall
mov
fdivrs
add
in
pop
xchg
cld
mov
cmp
lock
data16
dec
repnz
jp
xlat
xchg
cmc
inc
push
jbe
xchg
fistl
dec
lahf
mov
jno
ljmp
pop
mov
out
add
and
popa
test
popf
and
repz
repz
sarl
imul
out
fisttps
out
xchg
cmp
dec
mulb
fs
lahf
pushf
lahf
sub
out
mov
cmc
pop
add
inc
loop
mov
inc
rep
push
repz
insl
lds
cmp
pop
call
pop
xor
pop
pop
mov
repz
cmp
cli
pop
add
add
and
outsb
mov
add
stc
xchg
and
xor
rcrl
pushf
sbb
sbb
xchg
stos
ret
add
je
mov
jns
stos
scas
stc
pop
mov
insb
insb
insb
insb
dec
pushf
nop
xchg
insb
insb
insb
insb
lea
jecxz
fwait
xchg
nop
mov
xchg
adc
loop
dec
scas
jp
fsubrs
add
xor
mov
aaa
fnstsw
popa
jb
and
and
or
and
xor
fcomps
stc
sbb
daa
cmpsb
les
sbb
jle
scas
sbb
icebp
lea
sbb
scas
pop
add
add
movsl
xchg
iret
push
daa
add
lods
jl,pn
repz
mov
xchg
decl
repnz
iret
lods
ret
fisubs
mov
or
pop
add
cld
sahf
daa
lods
push
int3
aas
push
cmc
mov
cwtl
data16
sahf
mov
xchg
mov
xor
ss
shlb
loopne
imul
ret
xchg
cmc
mov
mull
add
jl
stc
push
jp
je
mov
pop
mov
leave
cmp
test
push
mov
add
lahf
fisubrs
je
mov
rcll
cmpsl
pop
bswap
push
jbe
cmp
insl
clc
sahf
je
je
lock
inc
jne
push
int3
cs
cmp
add
fstpt
daa
adc
ret
fsubr
jbe
mov
nop
mov
decb
pop
and
out
dec
pop
cli
test
add
jmp
or
cld
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
inc
add
call
ret
shl
mov
ret
lock
mov
and
push
sub
ja
mov
repz
xchg
jno
jle
std
jnp
mov
xchg
mov
std
mov
push
in
out
sarl
jns
pop
jb
cs
cwtl
out
push
mov
data16
mov
dec
jns
std
pop
test
xchg
xchg
adc
enter
aaa
jns
mov
popf
sub
mov
xchg
inc
ds
mov
sarl
cltd
xor
jmp
icebp
fbld
mov
movsb
into
test
orb
mov
out
dec
cmpsb
stc
je
xlat
fisubl
add
je
repz
xlat
loopne
ror
daa
inc
xor
and
ljmp
neg
xchg
movsb
xor
decb
jecxz
in
jmp
inc
lock
inc
pushf
sbb
loopne
jbe
sti
jbe
je
out
je
je
clc
test
nop
ljmp
pop
mov
push
popf
adc
jmp
mov
add
cmp
in
or
mov
out
ds
mov
in
data16
test
in
pop
and
dec
lret
test
rcll
fdivp
mov
xchg
xlat
mov
outsl
outsb
cld
jecxz
negl
pop
incl
pop
pop
push
xchg
add
mov
add
inc
xchg
xlat
out
cmpsb
pop
ljmp
xlat
pop
jmp
out
jbe
sti
mov
dec
inc
fdivrs
jbe
pushf
orl
out
pop
push
hlt
cmpsb
mov
stos
jmp
add
pop
and
int3
cmp
pop
or
jb
inc
hlt
lea
or
lock
ds
mov
int3
adc
and
or
xchg
stc
mov
je
push
push
imul
push
mov
out
out
mov
repz
push
jmp
push
jmp
jg
cmpb
mov
mov
les
andl
and
outsl
popa
fdivs
jbe
scas
cli
push
fwait
xor
dec
insb
mov
mulb
daa
adc
bound
mov
and
cmp
adc
arpl
enter
push
cmpl
aaa
jecxz
cmp
or
mov
std
movsl
mov
icebp
fucom
inc
fisttpl
mov
dec
out
or
sbb
sub
in
roll
andl
popa
xlat
nop
fstl
sbb
iret
scas
cltd
add
shll
sar
repz
in
das
xor
or
cmp
cmpsb
mov
xor
cmp
push
cmc
mov
pusha
arpl
inc
mov
pushl
cltd
add
clc
ds
sub
out
ljmp
mov
or
loope
stos
push
imul
cmpsb
pushl
test
and
jmp
cwtl
mov
mov
repz
add
sbb
push
and
sti
xchg
pushf
xor
leave
push
adcb
jmp
adc
jbe
jmp
cmp
cmpsl
call
mov
jl,pt
add
mov
icebp
scas
cwtl
aaa
into
dec
test
in
lahf
and
xchg
dec
sbb
mov
cmpsl
in
and
lock
in
repz
loopne
je
sbb
fsts
lea
mov
mov
mov
xchg
test
mov
pop
adc
sub
add
jmp
hlt
int3
ret
cmp
mov
mov
xchg
mov
jp
and
mov
loop
push
ljmp
jle
sti
test
out
popa
daa
ret
scas
gs
pop
jg
mov
shrl
test
dec
jl
mov
xchg
decl
fsubp
insl
add
jp
jge
mov
clc
rcrb
in
mov
repz
cld
ds
dec
pop
jp
push
xlat
dec
enter
scas
cmp
push
mov
shr
push
xchg
daa
roll
repz
pop
mov
int3
addr16
xchg
out
inc
insb
bswap
in
xchg
lcall
pop
sbb
mov
pop
in
lcall
fisubs
dec
adc
sub
mov
testl
lods
jg
imul
cmp
pop
cwtl
pushf
clc
xor
dec
mov
out
mov
into
ret
das
jnp
cs
jmp
popf
shll
xchg
lcall
xchg
dec
fisubrl
cmpsb
mov
ja
shll
lcall
or
push
out
mov
arpl
out
xchg
pop
pop
cli
adc
sub
das
repnz
cmp
mov
mov
sarl
test
and
in
aas
jecxz
xor
adcl
pop
enter
loop
test
xor
lahf
faddl
orl
fucomi
jb
iret
jb
pop
and
cli
dec
pop
mov
and
pop
mov
fdivrs
add
xor
pop
imul
pop
dec
mov
std
pop
mov
cmpsl
add
jns
insl
sbb
push
outsb
cmp
xchg
cli
jbe
mov
lods
and
push
adc
cmpb
add
ljmp
jmp
mov
inc
in
push
cmp
push
and
sub
loopne
pop
pop
push
adc
js
loope
cmp
outsl
jmp
and
xchg
sub
ret
pop
out
loop
cltd
xor
cmpsl
repz
xchg
jge
lcall
imul
stos
scas
mov
ret
ror
xlat
fs
ja
in
mov
lahf
mov
outsb
jae
stc
xor
mov
fnstsw
jecxz
sti
pop
jns
daa
rclb
out
rcl
sub
and
inc
fisubrs
or
pop
cmp
sti
mov
rcrb
xchg
fsubs
lock
inc
dec
std
dec
mov
je
jb
pop
and
lahf
loop
or
xchg
scas
std
sub
cmp
out
and
inc
out
xchg
ret
in
jae
jg
xchg
lret
fwait
add
xchg
jmp
jecxz
fcoms
sbb
ficompl
stc
jmp
pop
lods
in
hlt
mov
incb
fisubrl
out
jp
jne
jg
std
push
mov
mov
jns
xchg
pop
fdivrp
out
in
or
add
cmp
cs
jmp
loopne
ret
lock
idivl
push
ljmp
and
jne
inc
lahf
rcr
fistps
mov
scas
xchg
sbb
jnp
int3
xchg
ja
mov
imull
mov
insb
cmovle
fcoms
xchg
sahf
xchg
mov
stos
ret
add
rclb
xchg
std
in
loop
addr16
xchg
lret
jne
rcll
xchg
out
stos
vmptrld
repz
sub
and
ljmp
mov
dec
les
aad
mov
repnz
add
dec
repnz
xor
mov
jne
idivl
mov
and
test
adc
subl
xor
mov
xor
mov
stos
lret
jecxz
insl
outsb
adc
repnz
or
jecxz
pop
sbb
pop
stos
mov
aaa
outsl
repz
out
aaa
or
loope
adc
dec
pavgb
lods
aam
cli
hlt
clc
repnz
mov
test
pop
test
xchg
repnz
cmpsl
push
movsb
inc
enter
adc
test
repz
push
and
mov
xchg
repz
sub
cmpl
gs
mov
scas
shrl
push
mov
mov
sti
xor
test
lock
loope
push
jg
addr16
inc
nop
repnz
sub
insb
aaa
mov
xor
repz
lret
lahf
scas
adc
rorl
subl
jg
mov
xchg
ret
inc
test
loope
cli
xchg
fwait
icebp
cmpsl
insl
repnz
les
cmp
loop
test
jne
popa
hlt
lods
inc
mov
or
mov
imul
xchg
hlt
mov
cltd
repnz
out
adc
xor
dec
or
jbe
daa
xchg
dec
adc
cli
cmp
pop
pushf
daa
loopne
out
clc
pop
mov
push
mov
lahf
loope
stos
outsb
xor
adc
pop
pop
fdiv
aaa
sti
dec
fsub
xor
adc
mov
mov
popa
mov
fbstp
dec
fcomps
aas
test
pop
mov
shl
mov
loop
pop
push
aas
push
pop
repz
xchg
jnp
pushf
out
cli
sti
or
ror
pop
jmp
inc
fistl
mov
das
add
repnz
push
add
outsl
and
add
inc
mov
into
fcmovne
call
iret
subl
xlat
out
into
scas
insl
arpl
iret
aaa
sbb
iret
aas
iret
push
fwait
or
aad
inc
scas
xlat
outsl
xor
xchg
stc
jecxz
stos
lahf
stos
add
pop
pop
stc
inc
mov
aad
scas
xlat
int
or
push
lea
sti
or
call
iret
push
adc
or
into
inc
push
sahf
scas
fsubrs
jecxz
inc
fwait
push
jl
jmp
ljmp
jp
cmp
mov
xchg
nop
daa
add
or
jne
faddl
mov
adc
cli
inc
xorl
cmc
or
fsubrp
stmxcsr
jp
repnz
idivl
jno
cli
cmp
pop
clc
push
push
mov
add
fldenv
cmpsb
mov
xlat
dec
jae
lods
loop
cmc
jmp
mov
lret
cmc
sbbl
loope
setnp
cli
punpckhbw
cmp
sbb
xchg
mov
fstl
test
notb
add
mov
nop
adc
cli
xlat
cli
inc
fdivr
out
pop
mov
jb
ljmp
jbe
dec
frstor
jae
push
into
idivl
dec
divl
sub
repnz
mov
mov
mov
rolb
mov
add
arpl
pop
inc
idivl
add
inc
add
rcrl
xor
pop
mov
xchg
call
out
pushf
xor
movsb
sub
add
enter
add
cld
test
enter
mov
fdiv
std
jmp
cld
test
mov
into
call
cld
ret
into
xchg
dec
push
sub
adc
jg
xchg
notb
lds
cmpsb
enter
in
movsb
movsb
std
push
ja
roll
roll
das
xor
aas
inc
xchg
jecxz
and
sbb
in
pop
fprem1
rolb
incb
xorl
jecxz
out
mov
repnz
xchg
enter
movaps
outsl
cmp
mov
pop
cmp
xlat
iret
insl
jecxz
loope
iret
into
fwait
out
out
outsl
addr16
aas
adc
popf
ror
xor
xorl
scas
xlat
cmpsl
aad
dec
repnz
int3
and
aam
pop
cld
je,pt
mov
les
xchg
rcrl
out
jg
pushf
push
testb
push
jl
mov
enter
std
pop
sub
xor
out
sbb
add
sti
rorl
xchg
shll
lcall
lods
sbb
inc
cmp
sarl
out
mov
outsb
in
pop
mov
mov
add
xorl
add
aam
add
jp
scas
int3
add
fwait
test
ret
push
dec
decl
mov
inc
mov
jbe
test
insb
idivl
mov
pop
lahf
stos
fldcw
mov
inc
ret
dec
mov
bnd
jnp
cli
sti
jp
enter
pushf
stc
cld
movsb
shrl
pop
out
sarl
and
hlt
inc
lret
cld
fidivl
iret
cli
daa
xchg
jnp
xor
out
ljmp
sti
rclb
mov
xchg
adc
cli
and
daa
cli
aaa
aaa
aaa
aaa
fninit
xlat
jmp
lret
es
mov
ljmp
cs
sti
pop
in
and
sti
lahf
fsubrs
cs
ror
fucomip
movsl
push
in
sub
jne
xchg
pop
leave
push
and
movsl
adc
xlat
mov
xchg
sbb
and
pop
incl
fsubr
and
pop
cmp
lret
fsubr
imull
int
not
jg
in
sti
mov
js
jg
mov
scas
rcr
pushf
out
pop
cmp
cli
aam
ret
mov
jmp
cld
jle
addb
inc
fcomps
test
bound
xchg
fwait
lcall
sub
orb
mov
hlt
jmp
out
and
pop
les
or
dec
std
xchg
loop
or
pushl
js
shrb
stos
out
lods
lcall
arpl
mov
push
cmp
mov
sti
in
mov
repz
in
std
jo
xchg
scas
nop
jle
fsts
in
shlb
shlb
fidivrs
sti
std
bound
negb
xchg
aas
movsb
les
mov
ss
xchg
mov
xchg
jne
jmp
nop
enter
dec
notl
outsb
in
xchg
out
mov
scas
mov
dec
lret
inc
decl
insb
dec
je
dec
loopne
int3
xchg
mov
lcall
jnp
add
mov
jb
mov
arpl
xchg
mov
fistps
push
mul
dec
xchg
mov
iret
iret
data16
mov
adc
sbb
mov
inc
addr16
adc
lea
leave
sahf
into
mov
or
jp
int
repz
das
mov
jle
cwtl
mov
mov
mull
xor
mov
incl
hlt
push
out
lock
xchg
idivb
lods
out
mov
push
jne
mov
sub
aad
inc
rcrb
das
mov
sub
aam
in
mov
jae,pt
cmp
icebp
movsb
push
cwtl
lods
mov
stos
arpl
pop
int
or
cmc
cwtl
in
fucomip
jns
enter
or
mov
ficoms
fsubrp
fdivrl
mov
pop
cs
sub
divl
mov
jle
cmp
inc
into
xchg
test
mov
mov
xchg
pop
xchg
jae
sbb
mov
inc
ror
mov
sbb
stc
outsl
divl
jp
push
scas
pop
add
xchg
xlat
xchg
xchg
mov
jle
pop
inc
in
in
imulb
mov
cmp
mov
dec
inc
cmp
mov
mov
movsl
lock
mov
popf
cwtl
jb
out
out
nop
mov
out
push
lret
hlt
sbb
and
addr16
jl
ss
nop
hlt
jns,pt
std
add
mov
clc
inc
sti
ret
in
test
push
mov
out
fisubrl
cmp
cli
decb
loop
cmpsl
adc
loopne
je
mov
mov
das
les
push
and
pushf
nop
sub
dec
cmpps
pushl
in
xlat
popl
js
lods
sahf
mov
jmp
push
into
cmp
mov
fisubrs
mov
mov
ja
mov
test
repnz
popf
hlt
shr
repnz
testb
and
dec
mov
pop
pop
add
call
adc
and
lret
data16
lea
lea
push
push
jnp
mov
out
pop
pushf
scas
loop
dec
lods
pop
add
add
ret
iret
shll
pop
rorl
dec
rolb
shlb
sub
daa
rcrb
push
jbe
rclb
or
pop
rcrb
mov
iret
and
aad
add
int3
into
fwait
into
insl
into
push
into
and
or
ficompl
fdivr
int3
and
sbb
repz
out
lret
mov
std
add
or
lret
cmp
cs
and
sbb
jmp
aad
add
add
mov
lret
xor
daa
lret
or
cli
leave
in
leave
loope
aam
leave
cmpsl
leave
xchg
leave
add
add
or
hlt
enter
enter
xchg
jns
dec
cmp
xor
and
adc
add
add
add
lock
xlat
mov
fs
push
dec
or
mov
lds
inc
lds
add
add
lds
lds
lds
lds
enter
mov
pusha
ret
dec
ret
mov
mov
ret
faddl
add
cmp
sub
and
add
stc
shl
sub
add
mov
cmc
jbe
jo
push
movb
and
nop
lds
add
add
pop
lds
mov
les
les
ret
rol
lret
ret
mov
add
add
ret
sbb
adc
ret
rol
int3
ret
dec
ret
jp
rorw
rcrl
shlb
add
into
pusha
into
push
into
cmp
int
add
add
movsb
xchg
push
int
int
int3
ror
mov
int3
sbb
adc
fcmovne
mov
jg
jbe
add
add
ds
xor
push
lret
bswap
jecxz
movsb
lret
xchg
lret
jno
imul
lret
push
lret
sbb
add
add
add
leave
enter
stos
leave
lahf
leave
mov
ja
jno
insb
leave
fs
inc
ds
call
leave
cli
dec
add
inc
lcall
js
aas
enter
xchg
movl
adc
movb
add
rol
mov
push
and
adc
mov
lds
lds
vpinsrw
out
add
or
rol
add
les
les
les
les
cmpb
test
ret
faddp
into
ret
mov
rcrb
xor
add
in
ror
mov
cmpsb
rcrb
shlb
or
add
add
add
rorb
aaa
iret
and
std
into
in
into
fcmove
cmpsl
into
jne
ds
sub
sbb
adc
add
adc
cli
int
int3
and
push
int3
or
dec
lock
cmpsb
lret
mov
lret
push
lret
add
les
add
shl
lret
lret
dec
lret
cmp
lret
adc
sbb
dec
js
push
dec
leave
inc
leave
xor
cs
and
adc
sti
enter
add
fmulp
int
mov
cmpsb
enter
enter
mov
or
add
orb
pop
cmpsl
lds
jae
outsb
ret
fs
pop
ret
push
ret
push
add
nop
mov
ret
bnd
jae
dec
ret
or
ffreep
xlat
xchg
movsl
lea
shrl
shll
xor
push
repnz
stos
movsb
das
xchg
xor
rolb
cli
add
and
iret
out
inc
mov
iret
cmpsl
iret
mov
add
iret
pop
into
sbb
add
repz
int
int
int
int3
test
int3
cmp
jmp
nop
xchg
pop
sahf
lret
xchg
lret
roll
push
stos
leave
cmpsb
leave
adc
pop
enter
add
mov
dec
es
movl
fcmovnb
aad
enter
mov
mov
xchg
xchg
pusha
hlt
lds
fld
mov
add
les
sarl
rcrl
sarl
rolb
push
inc
pop
add
or
or
mov
test
into
lret
into
into
mov
adc
add
int
add
int
int
int
int
int
jo
imul
inc
mov
add
int
int
int
int
int
int
int3
clc
push
loop
rorb
int3
aam
int3
xor
outsl
int3
popa
int3
dec
int3
inc
int3
aas
sti
repnz
int3
cs
adc
add
add
push
or
aam
int3
lret
ret
lret
mov
lahf
lret
push
pop
lret
dec
lret
ss
xor
rclb
daa
push
sbb
pop
inc
sti
lret
lret
cli
ds
ror
ret
lret
test
mov
lret
mov
lret
insb
lret
and
movsl
leave
fwait
leave
xchg
sub
add
mov
jge
imul
leave
pop
leave
push
leave
dec
leave
inc
leave
aaa
leave
xor
sub
movsb
out
add
and
sbb
or
clc
enter
add
mov
mov
scas
enter
enter
xlat
add
enter
or
enter
enter
xor
add
mov
leave
mov
mov
jnp
jo
push
add
dec
movl
sbb
push
or
in
out
loop
ffree
fadd
rol
add
pop
add
mov
sahf
cltd
lret
sub
push
les
les
ret
fldl
ret
lods
push
add
pop
ret
jmp
fadd
xchg
ret
xchg
pop
ret
or
or
inc
push
sbb
mov
dec
out
push
rorl
cmc
shlb
pop
push
pusha
mov
enter
iret
dec
iret
xor
or
into
xchg
add
add
jo
fs
pop
into
dec
into
inc
into
cmp
xor
es
sbb
or
repnz
int
int
inc
push
add
xor
push
int
int
int
int
int
mov
cmpb
xchg
int3
push
push
int3
inc
int3
cmp
xor
int3
pop
int3
in
add
xlat
lret
int
sahf
lret
mov
mov
add
lret
pusha
repz
std
push
inc
stos
imul
add
sbb
pop
mov
xchg
inc
xchg
clc
outsl
inc
test
fs
add
inc
cltd
inc
ljmp
push
xlat
inc
jmp
inc
frstor
push
pop
mov
lock
test
add
add
std
fidivrs
add
repz
jnp
rcrl
decl
movsb
jmp
fisttps
pop
jae
adc
cld
adc
cld
pop
popa
sti
je
aad
enter
mov
les
jg
dec
ljmp
daa
lahf
inc
mov
fsub
fdiv
mov
insl
std
jge
jae
and
loope
ja
fiadds
pop
into
cmp
xor
cmp
mov
int
test
and
push
int3
jmp
mov
jae
jg
cld
arpl
rcl
enter
mov
test
cld
push
dec
in
out
mov
mov
dec
nop
inc
clc
xchg
std
pop
xchg
mov
jmp
stc
mov
mov
div
mov
mov
push
mov
mov
cmc
mov
add
neg
fbstp
mov
in
mov
andb
nop
lcall
lahf
mov
add
inc
lock
mov
lcall
jg
mov
sbb
stos
xor
stc
cmpsb
inc
mov
or
xchg
jmp
inc
jmp
lock
mov
xchg
in
adc
mov
dec
out
ret
or
jnp
out
cmpsb
dec
mov
pushf
dec
fdivrl
pushl
das
fcoms
dec
scas
cmp
pop
mov
je
in
fistpl
and
lds
jp
stc
inc
ja
mov
jne
sar
mov
das
es
mov
cmp
std
fwait
addr16
ret
mov
lcall
ljmp
into
daa
fbstp
stc
scas
ret
ljmp
jne
or
add
dec
push
sub
push
mov
add
int
orb
lock
or
paddusb
cmpsl
cmp
adc
int3
and
inc
dec
mov
cli
jge
out
mov
testl
cmp
ret
rorl
adc
xchg
inc
loope,pt
mov
adc
adc
add
fdiv
xchg
mov
cmp
imul
cld
or
lret
neg
jg
std
xchg
xchg
xlat
aam
ljmp
lahf
add
add
sbb
call
dec
xchg
loopne
xchg
dec
jnp
push
jg
mov
sbb
xchg
ds
in
movsb
push
getsec
push
mov
flds
shl
adc
fistps
push
adc
mov
sbb
das
sbb
scas
mov
mov
mov
lret
mov
sti
inc
adc
adc
out
movsl
addr16
popf
mov
or
sbb
ds
std
adc
mov
add
jg
imul
jb
dec
test
jl
sti
push
jg
filds
lret
jmp
scas
fstpt
fsubr
and
hlt
lds
cli
xchg
adc
dec
xchg
movsb
cwtl
movsl
in
fwait
mov
adc
ja
negl
lea
adc
jb
mov
xchg
mov
sbb
je
cmp
sti
aas
aam
cli
inc
stc
mov
mov
outsb
pop
jmp
xlat
jge
mov
in
out
cwtl
sahf
xlat
in
pop
xor
mov
int
test
adc
pop
xlat
adc
pop
jmp
mov
lock
mov
lods
mov
aas
roll
je
jmp
and
hlt
xor
mov
insb
sbb
jne
jmp
int
add
mov
int
xor
mov
insl
mov
stos
clc
in
jne
jge
enter
aam
xor
push
pop
ja
out
mov
lods
or
ds
mov
lcall
mov
fistps
mov
ret
scas
pop
std
sbb
es
call
rcl
insl
jae
in
inc
jae
lahf
push
lock
psubd
scas
inc
loop
lret
mov
ret
pop
cli
sti
sub
inc
cld
stos
inc
stos
shrl
sub
outsl
cmpsl
and
pushf
cli
xchg
pushf
hlt
xchg
stc
dec
popa
dec
sub
pushf
out
jae
dec
cmpsb
dec
fisttpll
inc
cmpsl
push
inc
into
jg
inc
cld
inc
repnz
test
mov
push
cwtl
push
add
mov
add
dec
add
add
fstpt
repnz
dec
lods
push
cmpsl
iret
jecxz
std
and
add
imul
ss
std
ds
push
push
cmp
loop
push
add
aad
ss
dec
imul
xchg
jle
xchg
mov
sbb
mov
or
inc
sti
out
pop
movsb
xlat
xchg
cld
xchg
add
inc
mov
mov
inc
negl
adc
sub
fildl
and
cmp
pop
cmp
inc
movsb
cltd
jmp
add
test
inc
bnd
lods
cmp
jns
gs
inc
xor
out
test
jno
jno
sub
jp
dec
enter
js
inc
pop
mov
aad
lcall
sub
hlt
aas
enter
in
or
push
jl
mov
and
mov
faddl
aam
lcall
sbb
sbb
xchg
int3
adc
cmp
fdiv
scas
jae
inc
dec
dec
pop
inc
fwait
xchg
sti
rcll
or
sti
shl
sbb
dec
divl
into
push
out
cmp
loopne
shl
mov
mov
fsts
into
mov
clc
sub
jb
scas
cmc
lds
pop
xchg
jmp
roll
xlat
mov
push
in
xchg
insb
cmc
sahf
pop
push
loopne
inc
sub
jg
jge
cli
shlb
xchg
cmc
push
mov
jmp
jge
xor
sbb
je
mov
cli
mov
repnz
or
fs
incl
shrb
inc
jge
outsb
xchg
stc
daa
daa
ja
stos
pop
pop
fwait
stos
cs
push
dec
imul
jbe
mov
xchg
sarb
cmp
mov
jbe
loopnew
dec
jg
cld
push
mov
scas
inc
xchg
loope
mulb
jmp
xor
ficoms
jnp
xorb
lock
movsb
test
mov
loop
iret
dec
call
jl
hlt
cmpsl
add
and
sarb
push
pop
loope
adc
jbe
pushf
cmp
fwait
inc
cli
cmc
div
dec
mov
jbe
fidivrs
in
cli
out
or
int3
inc
mov
mov
sti
jae
popa
pop
repz
xchg
stc
fwait
mov
mov
mov
outsb
scas
mov
jg
adc
jne
aaa
fdivrp
loope
push
daa
pop
push
stos
cwtl
fcmovnu
xchg
sti
cmp
aaa
jg
xchg
pop
dec
jne
cld
xor
sar
jne
inc
sti
sbb
pop
rcrb
iret
in
gs
aas
outsl
sbb
gs
aas
xor
sti
fdivs
gs
aas
fcomps
fstpt
cltd
inc
lahf
filds
cmpsl
mov
in
fsubr
fidivrs
stos
mov
fstpl
mov
int
loop
fcmovnu
jo
push
negl
mov
push
mov
mov
scas
sub
inc
dec
jg
jmp
rcr
movsl
shl
rolb
jl
aam
paddsb
adc
jecxz
and
aam
mov
icebp
je
adc
or
stos
xchg
inc
fstp
out
pusha
cmp
mov
jg
mov
xchg
ljmp
xchg
add
lcall
stos
pushl
mov
stc
out
push
ficoms
ljmp
mov
call
fcom
pop
mov
outsb
push
insl
mov
fcomip
std
xor
adc
int3
push
inc
ds
lock
cld
inc
mov
xchg
shl
jmp
fmul
fldenv
lahf
mov
call
out
cld
ss
shld
test
lret
mov
lret
dec
ret
inc
aaa
scas
es
mov
pop
movsb
adc
repz
inc
cltd
fistl
cld
xchg
stos
pop
pushw
jbe
shrl
repnz
icebp
cs
dec
mov
jl
enter
in
jmp
daa
jmp
cmc
push
shlb
scas
out
fnstcw
jne
daa
incl
scas
inc
dec
push
fdivl
popf
out
iret
cmp
mov
jnp
imul
out
sarl
inc
jb
adc
rorl
pushw
cmc
in
xchg
xchg
out
dec
out
sub
sahf
lock
mov
in
movlps
cwtl
mov
out
and
nop
xchg
jmp
xchg
lahf
pop
jns
mov
adc
jae
fdiv
mov
test
or
dec
inc
movsl
mov
xchg
mov
and
mov
inc
mov
out
xchg
ljmp
in
decl
lret
dec
jg
enter
repz
sti
mov
stc
cmp
cs
in
push
test
mov
mov
mov
mov
mov
mov
adc
repnz
lahf
out
push
decb
nop
sti
pop
hlt
movsb
mov
or
sar
fidivl
push
cmc
dec
cwtl
mov
sbb
xchg
mov
sbb
fsubl
jmp
popf
dec
sbb
push
adc
call
lcall
jmp
sahf
xchg
mov
push
sahf
fdivr
mov
in
and
mov
xchg
dec
xchg
fdivrs
stos
jg
xchg
adc
ljmp
leave
push
mov
ljmp
leave
jbe
mov
iret
cli
jg
aas
inc
dec
nop
and
int3
xchg
push
and
hlt
cwtl
out
jg
adcb
inc
bound
in
filds
leave
xlat
push
int
iret
sbb
adc
hlt
xlat
mov
sahf
mov
fwait
lock
clc
hlt
xchg
fmuls
jl
mov
xchg
jo
enter
xchg
push
ljmp
decl
lock
in
cmp
mov
test
dec
cld
je
loopne
jbe
mov
dec
test
call
outsb
out
adc
xchg
test
lcall
inc
sbb
pushl
into
xor
pop
add
int
int
int
int
push
push
int
int
int
int3
mov
popf
add
cmp
lret
and
fbld
mov
jge
push
je
lret
fwait
leave
xchg
mov
jb
dec
dec
mov
filds
add
enter
enter
mov
add
mov
add
lds
lds
lds
lds
lds
jbe
fistpll
add
out
ret
pop
pop
loop
iret
ret
sbb
pop
ret
mov
repnz
push
rorl
ljmp
push
push
mov
cld
out
mov
lods
lcall
mov
lcall
xchg
sarl
nop
cltd
lock
repnz
in
jnp,pt
jmp
test
ds
in
fsubrp
mov
push
jns
repnz
fstpt
push
mov
icebp
repz
jns
jl
iret
notl
lahf
hlt
pop
cltd
leave
out
testl
rolb
aam
aas
inc
jg
repz
jl
xlat
out
pop
jo
jl
lcall
repnz
mov
push
sub
loope
dec
mov
jno
dec
clc
popl
mov
cmp
stos
shlb
shlb
loope
jg
hlt
push
dec
mov
pop
lock
pop
mov
stc
cltd
loop
pop
mov
mov
das
sbb
hlt
sti
lods
das
rcrl
mov
cmpsl
pop
outsl
incl
sub
fdivrs
pop
in
mov
sub
jecxz
std
out
repnz
in
lcall
ljmp
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
