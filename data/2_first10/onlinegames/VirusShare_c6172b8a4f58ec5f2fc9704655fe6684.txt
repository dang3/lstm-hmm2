sbb
add
pop
inc
inc
ret
xlat
outsl
mov
and
ljmp
rol
cli
scas
jecxz
adc
insb
mov
insl
fistpl
jp
jg
scas
sbb
cltd
ljmp
push
jo
jne
flds
movsb
int3
repnz
loopne
sahf
adc
in
mov
rcrb
xchg
in
in
cmpsl
jmp
xor
sub
and
adc
nop
xlat
adc
add
sbb
into
aad
adc
push
inc
lods
adc
icebp
mov
fldenv
data16
push
push
jp
mov
inc
call
sti
xor
push
push
out
jne
add
cmp
cli
adc
aam
das
add
in
pop
mov
mov
fisttpll
fists
dec
pop
pop
incb
ret
adc
xchg
and
mov
cwtl
incb
push
lret
push
pop
cld
cmp
loope
sti
xlat
mov
outsb
scas
xor
cld
into
ret
cmp
cltd
pop
adc
ret
push
arpl
loope
es
mov
jmp
sub
and
loop
aam
cmp
ljmp
je
mov
push
mov
incl
cmpsb
cmpsb
pop
jmp
cmp
push
out
sbb
fidivl
inc
scas
push
dec
sarl
lea
add
add
push
in
mov
imul
dec
loop
mov
lock
popf
push
adc
cmpsl
ja
sub
pop
loopne
pop
call
dec
aad
adc
dec
adc
mov
fidivrs
xor
push
rcl
ss
lock
nop
jle
enter
or
repnz
ret
xchg
jl
fldenv
fldcw
cmp
mov
or
dec
mov
repz
push
inc
jns
in
dec
adc
mov
push
and
cmp
adc
repnz
lods
xchg
inc
cmc
in
and
pop
xchg
sbb
inc
dec
pop
cltd
in
movsb
fmull
push
ret
inc
jb
inc
test
orl
pop
in
xchg
cwtl
sub
jmp
mov
pop
or
sahf
loop
dec
int
cli
xchg
sahf
flds
mov
fisubrs
frstor
push
sarb
sbb
push
inc
pop
sbb
ds
jae
pushf
mov
jp,pt
leave
js
jae
inc
inc
fldt
mov
xchg
mov
ss
aas
mov
cmp
mov
rorl
adc
cmpsb
mov
pop
stos
in
addr16
sbb
xchg
cwtl
loop
push
movsl
pop
outsl
mov
fisubrl
test
pop
mov
nop
shlb
in
jbe
xor
cmpsb
je
xor
cmp
mov
outsb
cld
out
dec
push
std
imul
or
ds
jp
stos
pop
mul
adc
xchg
push
xchg
add
xchg
jg
mov
sbb
push
cli
add
stc
cld
shrb
add
dec
cmp
outsl
gs
loope
stos
push
lea
lcall
out
adc
jg
lret
imul
xchg
in
pop
mov
roll
mov
pop
sahf
lods
fsub
iret
xor
in
repz
ror
cltd
ror
or
ja
lret
rclb
ss
ljmp
mov
rep
out
dec
or
mov
xor
and
push
mov
mov
ljmp
push
pusha
nop
mov
out
sub
jmp
mov
jp
push
in
adc
push
sub
dec
jmp
pop
in
add
mov
mov
dec
insb
xor
add
lcall
add
lcall
fldl
repz
xchg
inc
jo
bound
mov
mov
mov
out
dec
loopne
rcrb
lods
mov
or
or
sahf
movsb
int3
enter
dec
sub
das
mov
arpl
pop
push
aam
fisttpll
sti
aam
into
aas
shll
mov
jmp
ret
clc
jmp
repz
iret
jo
adc
xor
sbb
dec
out
mov
pmulhuw
xchg
xlat
in
xor
into
cmp
inc
mov
lods
sub
pop
testl
jnp
mov
ss
stos
mov
int
mov
outsl
cmp
jmp
out
adc
scas
aad
test
jne
lods
idivl
movsb
fs
shrb
int
and
lods
push
stos
stos
fadd
cltd
stos
lods
sahf
jp
xchg
dec
add
fucom
jmp
sub
inc
cmp
mov
insl
inc
mov
mov
inc
lds
add
mov
sbb
jg
test
jnp
and
xor
dec
mov
nop
aad
xchg
sub
fcomi
imul
xor
pushl
push
iret
ror
nop
xchg
fldenv
jp
push
shr
outsb
lret
aam
add
sbb
mov
pop
test
rcrl
jmp
mov
push
adc
sbb
dec
adc
mov
add
movsl
pop
cmpsl
and
push
nop
xor
mov
fucom
int
add
lcall
inc
adc
fwait
jge
std
cmc
ss
pop
mov
mov
push
int3
stos
jmp
pop
mov
adc
mov
sub
push
push
imul
loopne
jge
arpl
repz
xchg
pop
test
in
xor
movsl
xchg
inc
nop
out
cmp
mov
inc
mov
mov
roll
test
out
int3
mov
sahf
int3
shll
push
fnsave
cmp
pop
jns
pushf
ja
and
inc
aad
cmc
rclb
scas
imul
ss
gs
adc
roll
inc
rolb
insl
pop
fnstenv
loop
ja
scas
into
inc
or
out
enter
gs
cmp
scas
dec
cwtl
cmp
ljmp
dec
ds
pop
jl
cs
fists
ds
sbb
add
sbb
inc
mov
pop
xchg
imul
push
mov
or
mov
js
ret
cmpb
fmull
mov
push
inc
in
mov
aad
push
jle
insb
lods
test
mov
repz
push
lret
cmp
stc
mov
lea
ds
cmp
push
inc
xchg
xchg
ret
in
mov
xchg
cld
scas
xchg
imul
pop
push
mov
mov
jo
pop
jecxz
rorb
stos
dec
jmp
xor
sti
ja
insl
ds
cmp
mov
pop
and
or
xchg
jbe
ds
fstpt
jmp
fs
out
xor
in
movsb
mov
ret
cmp
fcomi
fsubr
jnp
ret
xchg
jns
pop
mulb
jle
jle
push
add
and
sub
hlt
inc
push
push
or
pop
orl
push
or
jnp
rcl
jb
pop
scas
push
cmpsl
rorb
aad
icebp
shll
add
jbe
adcb
in
inc
sub
test
pusha
pusha
push
xchg
fst
jnp
lahf
cmpb
sub
nop
xlat
xchg
sub
mov
cmp
popa
mov
lods
data16
mov
mov
inc
lea
enter
mov
xchg
add
push
aad
clc
and
add
mov
rcrl
xchg
fsubr
mov
inc
inc
pusha
mov
xchg
and
pop
leave
in
jnp
xchg
and
js
cmpsl
or
or
xlat
stos
mov
jbe
in
ljmp
ret
stc
mov
push
and
or
add
sarl
adc
push
pop
clc
dec
call
lds
sbb
mov
fdivrl
addb
or
mov
jge
inc
fsub
lea
ljmp
sbb
mov
les
daa
mov
das
mov
jne
pop
scas
imul
lret
and
das
cmp
jge
and
stos
mov
lcall
mov
lea
cmp
outsl
daa
stos
pop
sbb
push
scas
lret
jle
cli
sbb
icebp
rcrl
aam
daa
sub
cmpsb
ja
cmp
idivb
enter
in
orb
bound
insb
pop
mov
lock
enter
hlt
mov
xor
sbb
push
mov
aad
add
dec
cmp
out
lock
fldl
mov
xor
pop
shrb
das
push
dec
xchg
xchg
icebp
pop
ja
movsl
or
jmp
mov
lods
sbb
xchg
dec
orb
dec
loop
mov
jle
mov
sub
mov
mov
pop
test
adc
push
imul
insb
out
push
sbb
mov
adc
sub
ds
in
into
jns
push
outsl
or
out
mov
jb
cmp
adc
arpl
sbb
mov
cltd
push
inc
sbb
mov
outsl
xchg
ja
outsb
imul
les
mov
outsb
or
aad
std
mov
repnz
sub
jns
push
add
fs
int
es
std
jl
sub
jge
mov
push
cli
lcall
mov
lea
sahf
and
nop
mov
jns
mov
inc
into
sub
mov
pop
dec
pusha
rclb
fistpl
and
mov
or
push
inc
jb
test
mov
pop
ficoml
imul
xorb
cmp
fprem
leave
xchg
jnp
movsb
or
and
inc
in
jmp
mov
icebp
xchg
mov
outsb
sub
inc
xor
in
mov
hlt
decb
sub
adcl
sbb
fidivs
sbb
mov
or
stos
pop
fsubl
jmp
inc
jno
inc
sub
mov
sub
push
loope
or
mov
pop
fnstsw
add
pusha
imul
push
push
dec
jl
cli
xchg
xchg
aas
out
repnz
rcrb
mov
mov
ds
xchg
test
and
pop
adc
mov
mov
and
adc
dec
addr16
cltd
ja
fidivl
movsl
test
lods
sbb
sub
fadd
ljmp
pop
jl
xchg
xchg
mov
stos
fimuls
mov
clc
dec
call
pop
and
popf
jl
movsb
sbb
jno
test
jmp
add
jb
test
inc
dec
push
jno
dec
popf
mov
lret
lahf
xchg
shl
shrl
sub
add
std
jo
popf
mov
fsubrl
fdecstp
mov
sti
inc
repnz
lods
lcall
jle
into
aaa
andl
add
fstpt
and
mov
add
cmp
movsb
push
pushf
cmp
pop
std
fdivp
call
imul
jg
fwait
cs
xchg
stos
cwtl
subb
mov
dec
pop
push
fdivs
sbb
or
lock
shll
push
aam
pop
mov
and
loope
sarl
sbb
pop
js
ljmp
outsl
dec
xchg
add
fildl
dec
cmpsb
xor
push
loop
aad
or
add
xchg
test
shll
pop
or
push
ret
es
lcall
imull
sub
inc
xchg
das
or
subl
jge
imul
push
or
dec
std
cs
mov
loopne
jl
pop
leave
xchg
pop
jg
inc
pushf
push
jnp
nop
cmp
leave
pop
xor
inc
clc
mov
cmp
push
addr16
popa
cli
lret
inc
imul
pushf
adc
cmc
outsl
flds
push
movsl
adc
mov
xchg
jmp
dec
add
ret
stos
outsb
dec
sbb
incb
dec
add
sbb
adc
lret
shlb
pop
push
jns
mov
push
rorb
rolb
push
or
adc
fidivrs
roll
inc
adc
insl
sarb
push
fildl
aas
adc
adc
pop
orl
mov
mulb
outsb
xorl
nop
sbb
push
push
cwtl
sub
nop
jne
adcb
sti
out
aad
xor
and
mov
orl
dec
cwtl
dec
fdiv
insb
sarb
movsb
push
pop
sub
lret
ror
mov
fidivs
daa
loop
arpl
mov
mov
out
cmp
or
jmp
std
dec
stos
xchg
sub
mov
push
add
js
mov
adcb
sarl
bound
imul
and
xchg
adc
bound
mov
loope
sub
aaa
lcall
sub
jb
mov
je
inc
ja
mov
add
rcrl
pusha
mov
inc
int3
jl
mov
sar
out
rcrl
dec
movsb
inc
stc
lock
lock
aad
lret
sub
lods
cli
lods
adc
and
pop
mov
addr16
btc
lods
cmpsl
or
out
ja
add
out
mov
mov
adc
cld
outsl
sbb
pop
xlat
repz
mov
pop
outsb
lock
pop
jae
ljmp
sub
int
mov
outsl
jns
sub
and
cld
mov
mov
nop
mov
sub
push
fdivs
xlat
stos
jge
js
dec
jno
addr16
sti
xor
arpl
jle
mov
cs
iret
or
dec
xlat
fs
pop
in
rol
pushf
cmp
pop
pop
or
imul
push
std
jmp
xor
sub
mulb
adcl
out
ror
jae
pop
dec
mov
pop
dec
in
shlb
or
sub
mov
loop
std
xor
insb
lock
xchg
pop
sub
xor
hlt
mov
dec
mov
fstpl
and
out
out
xchg
icebp
xor
pop
jmp
sbb
sub
pusha
pop
cli
jecxz
or
sub
adc
clc
fnstcw
loop
mov
fldt
xchg
pop
mov
inc
mov
aaa
or
add
xchg
mov
xor
std
mov
lods
jge
or
test
xor
xchg
inc
inc
ret
test
and
dec
mov
mov
in
jne
inc
pop
jle
sub
fisttpl
lret
ja
fmull
mov
test
jnp
jp
sarb
test
mov
xchg
inc
inc
cmp
js
cmp
jmp
rclb
sub
push
pushf
movsb
mov
and
and
subb
mov
jl
int3
fldl
and
outsb
and
mov
add
cmp
cmpsl
fmull
icebp
iret
add
xorb
cmp
mov
loope
fs
xchg
sub
dec
dec
jmp
mov
lods
clc
paddusb
outsb
pop
hlt
mov
out
jge
inc
mov
das
into
mov
cmc
call
shlb
jg
sub
out
and
jns
cltd
add
mov
adc
lea
sub
scas
popa
mov
inc
adc
sbb
mov
push
mov
adc
inc
test
inc
pop
sarb
jnp
nop
fldl
fwait
imul
lods
lret
jecxz
rol
dec
sbb
lock
jno
insb
data16
adc
cmpsb
sti
imul
adc
leave
shl
push
pop
or
call
and
outsl
add
cmp
int
sti
xor
push
jecxz
pop
stos
iret
and
out
daa
lahf
repnz
in
xlat
adc
push
movsb
inc
clc
cmp
or
lods
add
dec
mov
xor
push
sbb
aad
cmp
lret
pop
mov
das
jo
xchg
cmp
inc
fldt
pop
xchg
or
pop
push
push
dec
nop
mov
mov
test
popa
inc
push
je
lods
mov
sub
divb
mov
frstor
int
repz
xor
pushf
out
xchg
sub
aam
dec
out
lock
add
xchg
inc
xor
imul
push
mov
ja
loop
sbb
rcll
rorl
pop
je
pop
aam
pop
or
pop
dec
sbb
mov
mov
leave
fldl
cmc
mov
push
test
pop
fdiv
icebp
inc
mov
xor
inc
ljmp
cmpsl
xchg
int3
push
pop
lret
leave
cmp
sub
xchg
sub
jbe
mov
jbe
fs
dec
popa
arpl
ljmp
nop
cld
jmp
or
inc
jle
inc
daa
jp
pop
cmp
imul
xchg
and
dec
popa
jb
mov
cmpsb
sub
xor
push
lea
rcrl
sbb
arpl
aaa
stos
outsl
popf
dec
xor
push
sbb
adc
cmp
xchg
and
push
dec
shll
cmp
push
cmp
jp
push
mov
loope
xchg
nop
add
int
out
or
dec
cld
inc
outsl
inc
inc
mov
stc
add
outsl
ret
adc
sub
inc
dec
xchg
fnstsw
fs
mov
mov
mov
out
inc
adc
xchg
ljmp
lret
and
repz
mov
xchg
adc
movsl
and
pop
xor
jae
mov
inc
pop
outsb
lods
cmp
push
xchg
pop
cmp
mov
lahf
jae
inc
sbb
sarl
cmp
sub
adc
mov
test
popf
in
push
jp
call
add
mov
shrl
xchg
filds
fdiv
mov
inc
add
sub
lds
filds
loope
sbb
popa
push
lahf
fsts
fisubs
xchg
xlat
push
mov
xlat
push
jnp
out
sbb
xor
jo
mov
pop
loop
loope
xchg
movsb
sub
lret
aaa
pop
arpl
sbb
enter
inc
mov
and
sbb
movsl
xor
mov
and
jg
pop
push
int
sub
xchg
xchg
mov
js
mov
loop
sub
add
mov
sbb
loopne
inc
adc
ljmp
lret
out
mov
cmp
adcl
fisubrl
cmp
into
push
and
xor
out
cmp
es
dec
rcl
ss
mov
jecxz
xorb
inc
cmc
pop
dec
aaa
xchg
jne
fwait
pop
rorl
dec
jp
std
sarb
movl
out
stc
pop
imul
lods
fldt
or
jbe
ss
jb
lret
cmpsl
testb
cmc
clc
fmull
xor
out
lret
push
xchg
pop
push
and
xor
or
xchg
push
add
rclb
les
and
aas
jg
mov
hlt
aaa
xchg
xlat
xlat
das
into
or
ljmp
loope
mov
mov
fisttpl
div
inc
add
fs
pop
paddd
fwait
jnp
jg
movsl
in
scas
pop
jle
fsubs
aaa
lods
rclb
imul
push
cmp
imul
or
mov
fsubs
mov
in
lea
push
ret
jbe
mov
fisubrl
pop
add
scas
dec
xor
aad
mov
imul
jl
xchg
jns
call
cmp
sbb
adc
ja
cld
jl
fwait
imul
mov
xor
mov
ficoms
nop
inc
adc
xchg
lods
jp
jo
push
jo
xor
int
xorl
mov
enter
pushf
sbb
or
int3
insl
addr16
sbb
sbbl
shll
lret
orb
stos
imull
in
sbb
jne
and
lock
mov
cs
ret
ret
out
cltd
dec
out
cmp
aas
lahf
scas
leave
xchg
mov
sahf
aam
repz
inc
int
push
mov
insl
xor
pop
cli
fcmovb
popl
jne
mov
mov
xor
jp
test
jb
pop
out
xchg
es
repnz
xchg
adc
ja
jns
out
call
fidivrs
pusha
add
pop
dec
push
mov
js
cmp
pop
stc
pop
in
insl
das
inc
xlat
mov
sti
pop
cmp
nop
xor
in
and
outsl
inc
push
jle
mov
imul
fs
mov
fmuls
shll
lods
push
pop
nop
test
cwtl
leave
pop
dec
loopne
nop
xor
mov
push
or
inc
lcall
xchg
xor
in
inc
xor
or
xchg
dec
mov
popl
dec
push
mov
aas
cmp
test
inc
sbb
enter
lea
push
test
sub
and
mov
xor
fldcw
ss
scas
adcb
out
adc
pushf
push
orb
fucomi
push
dec
es
push
pop
xor
pop
adcb
lahf
push
jo
pushf
decb
pop
or
cmp
ret
fisttpl
lcall
sbb
and
ficompl
das
mov
lret
jg
fcomi
loope
ret
cmpsb
mov
cmp
rorl
mov
scas
int3
test
movsb
cmp
ljmp
mov
rcr
push
outsb
dec
sub
lock
lock
popa
into
ljmp
xor
jne
outsb
mov
in
in
or
or
xchg
repz
lcall
daa
ja
mul
cmpsb
push
and
dec
shll
and
cwtd
mov
fisubrs
lret
aam
jbe
ret
push
mov
loopne
dec
cs
les
repnz
dec
sbb
push
inc
or
pop
out
sbb
adc
mov
xchg
xorl
sbb
je
sub
jle
hlt
and
mov
testl
fisubrs
popa
std
cmp
sub
mov
add
ret
aam
shr
call
pop
jne
dec
or
test
lods
sub
sahf
inc
inc
popf
mov
or
push
mov
aam
adc
addr16
push
dec
xchg
jl
fsubl
out
dec
cmc
fiadds
and
out
out
jnp
fistpll
sub
in
movsl
loopne
xor
sub
mov
adc
je
mov
pushf
cmp
sbb
cmp
scas
or
add
mov
fldt
adc
pushl
scas
fucomi
out
add
inc
lods
nop
cltd
adc
push
sub
cmp
dec
or
mov
ret
addr16
mov
fstps
dec
cs
ljmp
dec
mov
mov
xchg
or
jmp
mov
push
jmp
sbb
aas
arpl
in
cli
repnz
leave
dec
insb
sbb
xchg
jmp
punpcklwd
xchg
mov
mov
dec
mov
sbb
clc
fimull
out
cmp
push
add
call
std
scas
ss
outsl
adc
push
add
call
outsb
mov
inc
jge
pop
or
mov
rorb
fisttpl
cmp
call
sub
xchg
dec
in
mov
shll
sub
hlt
dec
arpl
cmp
xchg
mov
jp
lods
insl
push
push
sahf
mov
or
xor
mov
mov
inc
mov
btc
pop
sbb
add
not
inc
xchg
cmc
lret
aad
lods
sti
aam
pusha
sub
pop
andb
jmp
stc
inc
cmc
jl
sarl
iret
xor
pop
add
cmp
inc
cs
aam
ss
xor
cmp
and
pop
pushf
mov
in
enter
fsubr
loope
pop
pop
imul
std
sub
xchg
xor
ret
push
jecxz
ss
inc
mov
mov
and
jb
or
outsl
aam
std
insl
xchg
lods
jnp
fsubrs
dec
stos
jl
mov
or
dec
cmp
cs
xchg
js
clc
pusha
shrl
jl
int
aam
adc
adc
jnp
loop
es
dec
sub
pop
inc
enter
mov
push
add
or
adc
lock
xchg
jb
push
das
testl
int
sbb
adc
xchg
ja
bound
mov
test
loopne
nop
arpl
xor
rolb
test
gs
sarl
lods
mov
jle
push
sbb
jno
fadds
adc
mov
sahf
pop
adc
mov
adc
das
adc
cmp
inc
xchg
push
cli
jge
idiv
lret
imul
lret
sbb
mov
stos
sbb
dec
insw
icebp
pop
adc
sbb
push
pop
push
test
push
sub
pop
inc
mov
adc
cmp
fisubs
bound
ret
xchg
inc
lds
inc
enter
add
fdivs
adc
fmulp
test
popf
mov
sahf
jb
ja
jl
fcoml
mov
shll
jns
sub
ret
xchg
xchg
and
adc
jle
ret
cmpsb
push
call
dec
and
mov
sub
mov
popf
mov
xor
loope
mov
cmp
dec
lret
scas
fwait
jne
into
inc
push
loope
into
lock
rclb
mov
sarl
outsl
sub
inc
and
imul
xchg
pop
in
mov
cld
fs
inc
in
sub
cmp
rcrl
repnz
lahf
mov
out
fstpl
pushf
lret
outsb
dec
js
mov
lea
sub
movsb
js
loope
xchg
mov
xor
nopl
and
stos
dec
lds
icebp
xor
cmp
mov
xchg
mov
rclb
xor
pop
arpl
push
xor
sbb
xchg
stos
pop
fs
shl
mov
bound
js
mov
mov
out
aaa
mov
pop
je
cmpsb
jbe
adc
lcall
sub
xchg
rclb
cmp
lock
cld
add
or
mov
add
dec
mov
mov
fistpl
and
cmp
shlb
xchg
sbb
jg
xchg
fdivs
sbb
xchg
addr16
lea
xor
movsb
inc
and
sbb
ss
push
cmp
repz
or
mov
std
addr16
pop
cmpsb
pusha
test
inc
mov
xor
insl
nop
fistpll
inc
fisubl
cmpb
outsb
in
jo
insb
mov
cmp
dec
xor
sbb
pop
scas
movsb
inc
addr16
cmp
cmp
pop
cwtl
mov
inc
clc
pop
arpl
pusha
and
test
lock
push
mov
and
jae
xchg
cmp
cs
lea
loop
test
loop
test
data16
jb
jl
xchg
je
dec
pop
xchg
adc
mov
adcl
into
icebp
push
vmovss
inc
pushf
mov
xor
rcll
lods
repnz
pop
insb
jmp
add
jp
lock
add
sbb
subl
jmp
mov
pop
addb
mov
std
aam
lods
sbb
repnz
orb
dec
adc
fisttpl
das
popl
es
sbb
xor
mov
ja
fs
dec
sub
fisubrs
ret
xlat
adc
xchg
mov
mov
lods
inc
adc
bswap
jno
mov
subl
sub
pop
adc
decb
lods
scas
xor
mov
std
leave
in
and
xorb
push
xchg
nop
popa
pop
adc
dec
push
dec
mov
and
add
add
inc
push
xor
dec
dec
sbb
movsb
mov
jne
sub
ss
int3
mov
icebp
iret
insl
and
jecxz
push
xchg
lea
data16
mov
pop
or
scas
test
jno
inc
insb
mov
aad
ss
cmpsb
arpl
cmp
cmp
aad
and
sub
js
fdiv
in
jmp
add
jmp
inc
shr
sub
pop
pushf
push
sbb
jge
or
imul
jl
repnz
push
enter
sar
fadds
add
and
push
movsb
stos
mov
loope
or
adc
xchg
sub
or
notb
mov
out
sbb
imul
pop
mov
or
or
xor
xchg
incl
dec
jb
cmpsl
addr16
dec
mov
sbb
mov
test
aad
mov
ror
lods
jo
scas
scas
js
std
cwtl
in
adc
jo
cwtl
push
push
ss
addl
stos
xchg
xchg
int
mov
gs
shl
cli
pushf
scas
loop
ss
enter
mov
or
adc
in
jb
ret
gs
sbb
repnz
cmp
fisubs
and
cmpb
and
cmp
mov
mov
pop
movsl
sub
aad
cmc
adc
jg
mov
dec
movsl
jno
bound
mov
mov
xchg
xor
scas
jge
es
fisttpll
vmovaps
enter
cvtps2pd
or
pop
rcrl
pop
sbb
and
cmpb
pop
jmp
mov
aad
fnsave
aaa
fisubrl
pusha
xchg
pop
pop
testl
fdivrs
pushf
je
cmp
fidivrl
xchg
mov
push
sub
mov
in
mull
sbb
mov
fldenv
and
pop
mov
push
xchg
push
rcll
out
cmpsl
pushf
loope
cmp
ja
add
lret
push
sub
in
dec
rolb
add
xchg
pop
xlat
cld
xor
inc
push
into
cltd
mov
pop
jp
daa
pop
sti
xor
loopne
filds
or
pop
cmp
cmp
dec
lock
mov
sahf
mov
adc
repnz
rcrb
and
sub
add
cmp
fstps
addl
adcb
test
pop
sub
shlb
pop
mov
popa
xor
mov
lahf
mov
cmp
stos
lcall
das
cmc
sbb
fiaddl
dec
cli
das
and
in
or
std
inc
dec
or
xor
xchg
movsb
shrb
mov
mov
adc
xor
add
pop
mov
pushf
lret
and
mov
cltd
sbb
repz
aam
fs
jae
jns
ds
lret
xchg
pop
pop
xchg
popf
ret
mov
movsl
xchg
or
idivl
bnd
push
add
rcrl
mov
adc
fsubp
or
inc
mov
incl
add
cmp
jmp
xorb
mov
jl
in
jp
pop
cmc
add
loop
and
loope
pop
loope
ds
shlb
outsb
jae
xchg
fnsave
insl
bound
xchg
push
xchg
mov
pop
cmp
movsb
jp
mov
ret
bound
loop
repz
mov
aaa
lcall
repnz
icebp
in
adc
in
in
jne
movsl
jae
popa
xchg
mov
mov
inc
lret
cld
in
mov
test
js
ss
out
cltd
mov
mov
inc
cmp
shl
xchg
nop
frstor
int3
pop
in
adc
push
dec
xchg
mov
or
jns
lea
xchg
mov
mov
repnz
push
popa
dec
or
xor
mov
jecxz
call
out
and
xchg
xor
das
jl
lods
rclb
mov
in
sub
pop
dec
and
mov
jl
das
mov
test
mov
or
push
out
stc
dec
push
xor
pop
push
adc
call
fbld
adc
sub
jno
cld
lods
sbb
pop
xchg
adc
push
data16
addr16
cmc
inc
add
aad
rol
sar
lds
ja
mov
jo
sub
or
ret
xchg
cmpb
push
add
dec
xor
inc
dec
loopne
popa
rolb
cmp
ds
mov
dec
jo
push
push
lret
mov
xor
cli
hlt
mov
add
inc
xchg
inc
xor
mov
shlb
adc
lret
sub
aaa
ret
daa
cmp
sub
mov
pop
dec
pop
faddl
mov
imul
sbb
sbb
sahf
pop
mov
xchg
cmovo
dec
xor
scas
lock
xchg
xor
call
bound
jmp
outsb
dec
jl
pop
xchg
stos
int3
mov
daa
aas
adc
pop
mov
bound
movsl
inc
mov
iret
sbb
and
scas
outsl
push
push
mov
out
stos
int
xchg
loop
mov
fldl
std
and
aaa
mov
sbb
cmpsl
mov
xor
and
out
out
xor
dec
imul
scas
sub
stos
lds
mov
sbb
rcl
loope
out
jns
jb
or
xchg
adc
mov
xlat
movsb
sub
jmp
push
cld
test
xchg
sub
and
repz
mov
jnp
jp
ja
push
out
test
inc
fwait
dec
cli
xchg
ds
push
and
dec
ljmp
popf
mov
or
ds
ljmp
jb
pop
mov
fs
and
xor
mov
orl
mov
lret
push
adc
add
cwtl
loopne
sti
adc
mov
subb
lods
std
push
add
push
scas
pop
js
mov
lds
inc
and
sub
ret
add
sub
dec
addr16
sbb
xor
outsb
cmp
sbb
int
outsl
sbb
scas
jg
clc
out
pop
dec
mov
mov
in
dec
test
mov
mov
ljmp
xchg
inc
add
xor
pop
push
xor
add
inc
pop
cltd
sbb
jnp
in
cmp
daa
fstpl
dec
in
push
cmpsb
je
into
add
lahf
sub
jp
fcomip
adc
repz
push
repz
add
xor
clc
push
xchg
sbb
jno
addr16
test
data16
orl
lods
mov
ret
lcall
inc
pop
repnz
xor
sub
jns
orl
les
inc
sub
mov
xor
push
rcrl
mov
sub
xor
or
push
insl
mov
outsl
sbb
push
jo
push
fistpll
xchg
or
or
xchg
loop
fiadds
addr16
xor
ftst
ja
inc
jne
lret
fsubr
ljmp
mov
mov
xor
repz
cmp
mov
dec
imul
adc
bound
jb
push
and
inc
test
out
fimuls
dec
inc
test
movsl
add
dec
push
mov
addr16
loop
xor
cmp
data16
inc
adc
pushf
mov
xlat
lds
roll
rorb
pushf
in
pop
data16
dec
jb
or
je
mov
fisttpll
push
push
mov
repz
scas
decb
fincstp
test
mov
mov
in
adc
cmpsl
fcomps
mov
data16
out
mov
pop
fildl
leave
jecxz
iret
cmp
iret
mov
sbb
cli
dec
iret
outsb
scas
stc
rol
cmpsl
test
cmpb
xor
cmpsb
sbb
cmpsl
or
or
mov
movsl
or
jmp
lret
outsb
xlat
int
push
xlat
cmpsl
lea
lods
in
neg
nop
and
sub
xchg
loopne
pop
mov
xchg
movsl
jbe
fidivrl
cmc
adc
lret
shll
ficoms
push
mov
add
enter
mov
in
stos
imul
arpl
sub
jle
roll
push
cmp
add
repz
xchg
in
in
push
fsubr
outsl
fisttps
push
xchg
push
loop
push
cltd
pop
popa
adc
ds
not
orb
sub
cmpsb
push
lea
jg
fs
or
icebp
xchg
mov
popa
jo
lods
push
dec
lret
mov
gs
int3
enter
lret
sbb
jle
dec
mov
sahf
mov
loopne
sarb
sub
clc
jno
mov
sahf
das
push
enter
pop
jne
insl
daa
lods
fisubrs
xchg
fldenv
outsb
mov
out
scas
out
mov
ret
rcl
lret
jge
cld
fists
idivb
lahf
mov
jo
pop
mov
cmp
aaa
imul
mov
mov
es
dec
add
or
jae
sbb
push
mov
hlt
arpl
sub
jle
sbb
movsb
push
sub
aam
sti
jbe,pt
lret
cmp
enter
es
push
cmp
pop
add
xor
mov
dec
pop
push
sbb
negb
dec
push
adc
cmp
push
xor
cmpsb
mov
aas
mov
loop
divb
jae
xor
int
int3
inc
xor
shlb
mov
cmc
js
shrl
or
adc
mov
imul
repnz
xchg
andb
adc
lods
fdivrs
lcall
dec
sub
cld
mov
outsb
cmp
mov
and
mov
mov
push
pop
cmp
dec
jnp
ss
in
mov
int
push
cmpl
into
cmp
mov
cmp
cmp
push
xchg
es
pushf
addr16
ljmp
add
movsb
fistps
pop
jo
inc
jne,pn
cwtl
inc
mov
pop
xchg
lretw
ret
xchg
icebp
mov
inc
sub
xor
lock
and
outsl
iret
sub
in
push
mov
dec
test
push
pusha
fsubs
inc
aad
mov
mov
mov
jns
loop
aaa
loope
aam
je
int3
sahf
sbb
and
jnp
hlt
xor
push
xor
fsubrs
dec
adc
add
out
lahf
arpl
cmp
push
jle
mov
xlat
push
mov
and
sub
mov
push
jnp
inc
jno
fisubl
ror
shll
mov
mov
adc
out
jecxz
int3
mov
cld
cwtl
cltd
movsb
jge
iret
lahf
push
std
cmp
jno
movnti
gs
arpl
outsl
cwtl
cmp
cltd
nop
jb
ljmp
lock
les
pop
sti
jmp
jecxz
xor
push
cli
xor
imul
ror
sub
or
mov
std
adc
xchg
add
and
xor
test
push
insb
test
insb
movsb
jns
xchg
into
jmp
fdivs
in
subl
outsb
cmp
push
aam
out
les
or
add
cmp
xchg
pop
in
mov
sbb
sub
sub
cmpb
inc
inc
nop
das
mov
or
dec
je
fisubl
stos
adc
push
lret
pushf
inc
or
push
int3
aad
inc
jae
std
sub
jns
pusha
inc
sbb
jl
sub
notl
arpl
ja
es
mov
pop
stos
test
dec
out
inc
mov
int3
mov
lods
mov
lahf
ds
icebp
pop
cmpsl
mov
pushf
in
aad
das
adc
mov
xor
movsl
out
add
and
inc
inc
fiaddl
insl
add
scas
xor
leave
jmp
xor
pop
push
mov
and
bound
and
gs
push
in
loope
aad
icebp
sarb
cmpsb
leave
dec
repz
xchg
fdivp
cli
lods
and
fisttps
xor
imul
xor
sarl
stos
mov
and
in
pop
push
adc
jae
cld
outsl
cmpsl
pop
push
sahf
pop
mov
adc
dec
mov
mov
mov
cmp
jbe
js
out
jb
call
jbe
mov
sub
test
repz
gs
fimull
xchg
gs
or
sbb
hlt
pop
cmp
mulb
add
dec
mov
jno
jge
mov
mov
nop
push
or
mov
daa
jns
nop
jl
add
out
add
mov
mov
push
das
mov
inc
mov
mov
jmp
xchg
or
or
push
fsubl
ret
or
push
lahf
mul
pop
clc
push
rcl
outsl
stc
xchg
dec
lcall
fwait
adc
ret
pop
add
test
xor
adc
movsb
cld
mov
popf
mov
leave
aaa
jns
fs
rol
add
in
sbb
imul
mov
inc
testl
mov
repz
xchg
jle
dec
stos
mov
mov
xchg
xor
aas
fistps
je
cmp
jecxz
mov
adc
mov
push
pop
xchg
add
dec
jb
pop
dec
push
fsubr
mov
mov
mov
jmp
push
loope
mov
inc
adc
lock
mov
adc
add
mov
pop
jmp
shrb
cltd
popf
mov
mov
sub
fimuls
ljmp
cwtl
rcr
mov
outsb
mov
mov
lock
outsb
in
pop
mov
jl
cwtl
mov
in
add
jno
js
jmp
lcall
inc
xor
mov
hlt
test
outsb
or
lods
xchg
sarl
push
into
push
sahf
test
add
mov
outsl
add
sbb
xor
adc
and
mov
jae
filds
lcall
int3
adc
mov
inc
scas
push
stos
jo
jns
stos
cmp
push
popf
xchg
jbe
push
dec
repnz
cmp
pop
mulb
rolb
fsts
fimull
or
mov
adc
mov
test
mov
jo
mov
dec
ret
inc
testl
outsb
fmull
movsl
xchg
aaa
dec
js
mov
xchg
cli
mov
mov
ds
gs
xchg
push
clc
push
sbb
cmp
add
test
mov
jnp,pt
mov
cmc
add
inc
lret
sub
loopne
fidivl
fwait
push
xchg
jnp
dec
jecxz
mov
fildll
lret
lods
insb
mov
test
pop
adc
into
out
pop
dec
repz
jne
sub
into
sti
dec
jg
gs
cmp
cld
aaa
adc
mov
mov
adc
lock
mov
stos
jmp
dec
mov
mov
sbb
push
icebp
leave
arpl
adc
repz
cmp
mov
cld
push
mov
adc
adc
add
lcall
std
mov
cmpb
in
fcoml
fistpl
je
xorb
mov
jl
lock
popf
mov
or
mov
lea
jecxz
jnp
int
movsb
ret
jbe
xchg
stos
arpl
lcall
gs
pop
xchg
lock
adc
sbb
cmc
cs
jle
dec
dec
or
xor
mov
aas
mov
or
addl
in
test
lods
loopne
ret
movsl
xchg
push
test
fbstp
push
shr
jl
and
repz
ljmp
mov
les
and
sub
sbb
aad
xor
shl
add
mov
or
add
dec
push
repnz
or
mov
in
je
out
icebp
cld
mov
mov
popa
sub
mov
sub
adc
and
test
pop
mov
sbb
sub
call
fisubrs
mov
adc
inc
adc
fs
cmp
cmc
xchg
xchg
mov
insb
data16
push
push
xlat
cmpsb
push
jl
imul
arpl
pop
lods
cmc
xor
ja
repnz
out
inc
and
outsl
xchg
fstpl
pusha
jnp
sub
pshufw
loopne
sub
aad
ret
or
test
dec
or
mov
and
imul
and
and
and
out
pop
xchg
cmpsl
and
pop
or
dec
out
pop
push
std
fcomi
pop
push
add
mov
add
lea
push
xchg
cmpsb
popa
push
sub
addr16
add
cld
sbb
aaa
lods
inc
cwtl
mov
out
fnstenv
or
adc
inc
and
push
repz
add
fisubrl
test
adc
pop
adc
push
js
adc
mov
cmpsb
jo
shll
pop
push
faddp
push
test
inc
loop,pn
xor
data16
cmp
ror
pop
push
dec
cwtl
pop
stos
cld
icebp
jmp
inc
push
sub
sbb
lods
rol
faddl
arpl
push
lret
xor
jb
out
inc
mov
mov
sub
pop
jae
subl
push
inc
popf
mov
inc
ret
and
mov
mov
push
cmp
lcall
and
xchg
mov
pop
adc
lods
add
push
in
lret
mov
sti
push
arpl
mov
adc
fimuls
mov
add
adc
sbb
adc
mov
je
es
lret
add
or
mov
out
push
adc
fs
pop
xchg
sub
movb
push
sbb
test
cmp
xor
xchg
jne
aam
loope
pop
into
or
loop
xorb
push
cmp
adcb
icebp
mov
sahf
jbe
add
neg
xchg
sub
clc
inc
pop
ret
xchg
punpckhdq
sbb
or
inc
cmp
lahf
jno
jecxz
sub
sbb
outsl
dec
aam
mov
xchg
pushf
daa
lret
adc
xchg
into
jne
test
and
into
loopne
fsubl
les
lea
cli
mov
ftst
jnp
gs
mov
push
sub
add
jl
push
inc
sbb
out
mov
or
movsl
dec
mov
sub
rorl
inc
pushf
or
sbb
into
dec
sub
jns
inc
xchg
dec
and
int3
jbe
xorb
and
sbb
xorb
xchg
push
mov
pop
in
xchg
xchg
pop
lea
addr16
enter
jns
jb
inc
mov
pop
jl
aad
nop
push
or
xchg
pop
popf
test
mov
lods
not
dec
test
repnz
in
add
mov
inc
xor
mov
pop
xor
shll
pushf
filds
xchg
sub
dec
xchg
in
jmp
pop
pop
jl
jns
pusha
inc
sbb
arpl
test
in
jns
mov
lods
std
xchg
mov
mov
sbb
dec
lea
jbe
lock
jbe
push
mov
ja
outsb
je
jno
xor
lods
pop
mov
lahf
mov
int
cmp
xchg
adc
movb
loope
fwait
jb
test
mov
nop
cmp
jo
in
test
loopne
out
xor
scas
push
lea
test
movsl
pop
pop
or
nop
loop
ljmp
dec
xchg
and
pop
imul
mov
aam
or
jmp
imul
decl
setae
jne
add
scas
repnz
xchg
mov
lret
or
shlb
test
jo
out
or
push
jecxz
jmp
popl
pop
call
or
push
inc
lret
imul
call
pusha
or
cwtl
mov
fs
add
aam
mov
or
ljmp
orl
inc
push
aad
mov
mov
mov
mov
xor
xchg
aad
pop
scas
mov
jl
lea
jne
inc
lcall
cmc
inc
outsl
or
rcrl
add
sbb
xor
test
cs
push
pop
das
loope
and
add
testl
test
mov
sbb
fldenv
or
notb
adc
leave
mov
inc
jae
mov
adc
adc
dec
jl
adc
jns
fdivrl
mov
jl
cwtl
xor
pushf
mov
or
mov
nop
aas
test
data16
or
movsl
outsl
dec
and
mov
pop
pusha
xchg
sbb
lock
or
xchg
call
aad
enter
iret
cmp
sub
sub
call
xor
xor
push
pop
cld
or
sti
or
inc
frstor
int3
subb
lds
in
push
ja
push
ret
movsl
sbb
shlb
out
cmp
shr
shll
addr16
adc
inc
in
mov
mov
mov
les
cltd
jbe
imul
sub
sub
mov
push
xor
ret
and
insb
adc
jmp
pop
dec
out
ret
inc
jae
jae
mov
pushf
mov
in
cld
jne
inc
nop
xor
gs
enter
inc
push
popa
and
cmp
rorb
and
outsl
jp
and
sub
jb
call
sbbl
sub
sarb
push
xor
ljmp
int
mov
push
dec
lahf
push
xchg
popa
mov
jge
push
sar
or
test
fidivl
push
xlat
rorl
pushf
in
pop
mov
sbb
pop
stos
push
outsl
lret
and
mov
pop
fs
xor
jne
dec
mov
inc
cli
push
hlt
cli
inc
fnsave
rorb
fs
dec
sbb
loope
mov
fwait
inc
xchg
jns
sarl
out
outsl
push
dec
outsl
sub
bound
in
inc
insl
dec
fnstsw
inc
xlat
mov
cmpl
fildll
cs
aas
gs
fisttpl
rdmsr
xor
xor
dec
cmpb
fdivr
dec
int3
out
mov
jle
out
aaa
scas
xor
fidivl
fs
scas
bound
mov
pop
aad
dec
stos
fisttps
cmc
ret
cmp
gs
dec
pop
rcrb
dec
mov
ja
push
jg
mov
loopne
in
outsb
mov
mov
or
jns
mov
xor
add
loop
or
lret
xor
ljmp
imul
sub
mov
xor
shlb
dec
out
fdivrs
push
lods
mov
das
popf
into
out
pop
push
popl
cmp
jmp
aas
das
mov
mov
scas
out
mov
out
fdivrl
push
push
out
and
int3
jmp
mov
pop
jbe
jle
push
xchg
cli
clc
sbb
adc
xchg
enter
andb
aad
andl
popf
lea
mov
sub
aas
cld
adc
jg
jg
daa
xlat
pop
mov
aam
dec
cwtl
jl
call
and
lock
jecxz
stos
sub
cmc
inc
pop
cs
pushf
fsubrs
mov
sub
out
inc
out
outsb
xchg
sub
fs
incb
lret
add
out
cltd
push
loopne
shll
pop
adc
arpl
in
das
ret
out
jnp
mov
sbb
outsb
xor
cmp
rol
jge
jne
add
jge
add
sbb
or
push
jmp
enter
lods
mov
enter
sbb
adc
sub
jmp
cltd
loop
inc
out
loopne
pop
inc
scas
or
xchg
push
repnz
enter
das
std
call
jg
outsl
push
cs
lea
jmp
lock
mov
xor
sub
adc
daa
mov
mov
jne
cltd
leave
repz
ret
or
mov
adc
jns
andb
jne
enter
repnz
jmp
or
push
adc
xchg
cltd
sub
das
dec
pop
mov
xlat
adc
das
xchg
cmpsl
bound
jge
daa
add
cmp
stc
lock
xor
nop
hlt
fwait
cli
push
or
push
jp
pop
mov
cmc
pop
cmp
xor
jecxz
or
inc
and
add
mov
test
fsubrs
insl
call
adc
jo
xor
push
iret
leave
adc
cli
jns
xchg
mov
adc
loopne
pop
lret
xchg
js
loop
stos
lds
dec
dec
inc
and
inc
xor
lock
cltd
loop
jno
sbb
out
sbb
cmp
daa
xchg
aas
add
and
daa
insb
jl
xlat
fcomps
pop
mov
pop
cmpsl
scas
sub
stos
pop
fcompl
icebp
xchg
ror
push
or
lods
dec
mov
call
test
popa
pop
rorl
das
dec
cmp
jle
scas
or
mov
add
call
movsb
mov
fldln2
icebp
cmp
aad
dec
gs
sub
pop
sbb
sbb
mov
dec
inc
ljmp
push
xor
insb
pop
clc
mov
inc
in
mov
mov
fcom
ljmp
rorl
pop
addr16
cld
or
test
mov
das
outsl
fldl2e
push
adc
cmpsl
scas
jle
pop
jb
sbb
sahf
loopne
xlat
loopne
push
push
in
add
rcll
ffree
cld
xor
and
fidivs
adc
in
cmp
sti
cld
push
cmc
xor
xchg
jmp
aaa
mov
inc
repz
loopne
pusha
repnz
mov
mov
lret
xchg
mov
cli
insl
daa
mov
ror
cmpsl
and
and
mov
loopne
scas
cmpsl
pop
sahf
dec
xorb
jnp
xchg
test
dec
inc
sbb
in
dec
in
cmpsl
push
mov
cli
cmp
lea
pop
add
xchg
or
ja
sbb
mov
or
adc
sub
sti
addr16
imull
lea
popl
and
fwait
cmp
mov
or
pop
scas
ss
repz
xlat
cmp
mov
mov
push
loope
cld
lahf
lea
adc
mov
sti
lods
push
and
jo
pop
add
sbb
xor
add
les
scas
mov
hlt
jmp
mov
test
loope
repz
mov
cmp
pop
jno
in
fs
aam
addr16
pop
stos
cmp
aam
add
cmpsb
mov
inc
push
arpl
in
jg
aas
stos
and
add
cwtl
aas
xchg
adc
sub
add
ret
xchg
fs
dec
xchg
aam
ja
sbb
mov
jmp
ss
xchg
test
icebp
in
adc
xchg
out
jno
scas
enter
pusha
fdivl
cmp
mov
jne
fucompp
cmp
and
cmp
aad
mov
mov
dec
add
jae
push
decl
leave
jns
imul
mov
mov
cwtl
out
mov
enter
mov
aas
cmpsb
cmp
jo
add
add
mov
jae
dec
in
jle
jno
xchg
push
add
std
xor
xor
xor
push
pop
hlt
or
dec
and
mov
mov
fstpl
outsl
shll
mov
and
inc
js
adc
repnz
mov
mov
mov
lahf
das
icebp
mov
cli
lock
push
sbb
jo
push
mov
adc
push
mov
xor
das
nop
das
sbb
xor
xor
clc
sub
loop
push
xchg
std
or
mov
aam
inc
inc
andb
int3
xor
iret
jno
popfw
or
xor
sti
inc
jb
loope
fdivrs
xchg
sub
push
cmc
jns
mov
out
outsl
aas
insl
add
mov
mov
loope
shl
jo
iret
pop
aas
incl
js
jl
addb
in
xchg
nop
jne
out
out
xor
movsl
push
in
andl
cld
in
hlt
push
and
or
jae
repnz
mov
pop
or
and
inc
push
mov
cs
fisttps
rol
imul
mov
movsb
sub
rcl
dec
cmp
sub
dec
jmp
xor
cmp
sarb
iret
arpl
sbb
icebp
pop
loope
dec
sbb
push
repz
mov
int
cwtl
jp
push
xor
pop
pop
jnp
jmp
inc
cmpsl
out
jg
idiv
fsubrl
gs
outsl
rcrb
xchg
mov
sbb
sbb
testl
mov
roll
lahf
xchg
imul
push
cli
dec
jg
push
shr
aaa
mov
mov
jp
loope
clc
mov
push
and
imul
mov
int
adc
push
dec
pop
inc
jg
decl
inc
inc
rcrl
int3
jmp
or
jns
test
movsl
int
ds
je
sub
nop
dec
mov
sahf
pop
cmpb
pop
cwtl
jnp
push
leave
or
cmpsb
jns
pushf
sub
jp
ret
mov
xor
nop
pop
je
movsl
outsb
xchg
pop
and
mov
xchg
ljmp
mov
mov
das
sarl
dec
dec
shll
test
stos
push
cmc
add
out
js
add
outsl
stc
mov
inc
push
or
mov
mov
rol
fdivrl
cmpl
xor
cmp
and
dec
test
mov
stos
mov
xchg
rclb
adc
cmpsl
mov
sub
push
and
call
and
inc
mov
pop
in
jns
xchg
jo
sbb
xchg
jb
pop
cmp
fisttpll
jg
pop
adc
sbb
leave
xor
xor
mov
adc
aad
dec
mov
push
popf
or
insl
lock
mov
add
fwait
mulb
incl
dec
lret
stos
scas
das
leave
out
sub
insb
sub
stc
repnz
ds
and
test
jne
jg
or
xchg
loope
mov
movsb
push
lods
pushf
ret
fisubs
add
cmp
iret
cmp
mov
push
and
lahf
jbe
fnsave
lret
js
pusha
cmp
or
mulb
pop
push
loope
loop
or
mov
aas
movsb
dec
clc
sbb
lea
scas
movsb
jge
inc
hlt
dec
ljmp
pop
addb
and
and
fstpt
rclb
loope
loope
repnz
mov
jne
jae
and
xor
xchg
filds
jb
rorl
cmp
das
imul
jmp
data16
fcoms
rcl
repnz
push
mov
cmp
or
or
mov
fwait
pusha
in
cmp
sbb
xchg
loope
aam
or
mov
or
push
cmp
push
sub
out
ja
stc
sbb
inc
push
out
jl
or
xor
ret
pop
fsubr
or
mov
js
gs
xchg
clc
loope
cld
movsl
out
fdiv
test
test
out
push
clc
lock
lret
push
movsl
ds
dec
lods
xchg
inc
sbb
mov
xchg
cmp
push
gs
rorl
jp
and
adc
lret
xlat
push
cmp
je
bound
ror
mov
shll
sbb
cwtl
dec
in
mov
add
mov
mov
iret
jo
mov
mov
insl
imul
nop
mov
sub
xchg
cmpsb
dec
mov
push
dec
in
pop
outsl
xchg
into
pusha
push
in
je
lds
jl
dec
aad
cmp
xlat
imul
sub
jbe
and
sbb
dec
pushf
xchg
imul
mov
mov
sbbb
out
mov
add
ja
idivb
pop
ss
add
cwtl
dec
popa
inc
cwtl
clc
popa
imul
jge
out
pop
push
das
jno
loope
sbb
push
xor
clc
cmp
and
lds
inc
inc
ret
pusha
mov
xor
std
pusha
adcl
pushf
idivb
mov
jnp
mov
scas
inc
lock
mov
sbb
sub
xchg
push
fnstenv
push
andb
adc
shlb
pop
pop
xchg
sbb
sub
inc
adc
mov
xchg
jl
adc
aam
mov
mov
pop
push
jecxz
pop
push
in
adc
cwtl
scas
pop
sti
or
pop
es
and
out
sub
xchg
insl
cmp
push
hlt
gs
mov
arpl
sti
or
push
call
repz
inc
mov
adcb
push
sub
rol
sub
jne,pt
xchg
cltd
and
lock
cmpsb
mov
cli
add
or
lea
dec
mov
lods
pop
push
mov
inc
out
or
into
and
push
mov
mov
shll
out
loopne
sbb
outsb
popf
sahf
lds
mov
repnz
scas
int3
xchg
cmpsl
movsl
inc
jns
mov
out
test
repz
bound
pop
aad
mov
pop
mov
push
cmp
mov
and
pop
out
cmp
imul
movsb
in
in
mov
scas
add
loopne
fs
je
aas
lret
in
aas
push
rcll
sarl
xor
xor
lods
inc
jecxz
lret
sub
sti
sbb
int
dec
mov
int3
mov
leave
and
mov
cltd
outsb
or
int3
jb
loop
sub
xor
daa
in
mov
lds
push
jge
push
fdivp
inc
pop
dec
repnz
mov
dec
bound
xchg
xchg
push
ja
mov
addr16
or
pop
push
cmp
sbb
inc
add
add
mov
movsb
mov
add
push
lock
mov
or
in
test
fnstcw
ljmp
jae
mov
mov
popf
xor
les
or
add
ljmp
jg
mov
xor
dec
and
scas
scas
ds
and
lock
sbb
outsl
shll
mov
cmp
testb
xor
xor
cmc
into
lret
jno
cmp
jno
repz
and
mov
lcall
test
insl
mov
sbb
icebp
pop
in
pusha
add
and
jnp
mov
xchg
add
das
jecxz
mov
arpl
adc
stos
fiaddl
jp
dec
mov
int
dec
test
xchg
sub
insb
lcall
xor
add
xchg
mov
jle
loopne
pushf
imul
or
imul
and
sub
mov
mov
push
call
push
adc
or
xchg
sbb
cli
movsb
hlt
inc
inc
jns
dec
cmp
lock
popa
imul
mov
lret
and
movsb
push
movb
cmp
je
inc
jge
mov
push
les
push
cmp
push
sbb
test
popf
pop
sub
inc
or
jae
cwtl
jge
cmp
jp
scas
mov
in
push
pop
jnp
popa
sub
pop
push
lods
subl
or
stos
push
gs
hlt
mov
jecxz
pop
and
pop
sbb
aam
cmp
add
push
and
and
pop
mov
divl
repz
adc
push
jp
jmp
cmp
insb
fsubrp
adc
cmp
sbb
arpl
pop
jmp
xchg
xor
cmp
andb
push
rcr
push
sahf
sub
or
xchg
push
lock
arpl
gs
pop
mov
pop
repnz
insb
mov
mov
mov
test
jae
test
push
lret
xor
inc
adc
lds
adc
cli
xchg
popf
imulb
mov
lret
inc
arpl
add
xor
push
sub
dec
test
and
loopne
sahf
pop
aad
pusha
xlat
sbb
mov
pusha
sti
sbb
mov
bound
outsl
and
inc
ss
pop
mov
and
out
mov
sbb
jb
das
dec
sbb
push
mov
scas
push
pop
lods
int3
loop
in
fmull
push
sub
xchg
jl
mov
mov
ljmp
inc
mov
mov
fsubl
ljmp
fists
into
lahf
test
fiaddl
aam
lahf
pushf
shlb
pop
loope
inc
jb
push
imul
jge
adc
js
mov
repnz
in
iret
xor
aas
jecxz
jg
imul
aaa
mov
and
fildl
popa
dec
sbb
mov
adc
and
les
jp
rolb
call
mov
ds
inc
out
mov
rcrl
ss
fdivl
cmp
fs
push
or
cwtl
and
fcompl
gs
fisubrs
adc
fstpt
xlat
lea
ret
xlat
jb
int
mov
cs
cmpsb
and
pop
inc
ljmp
inc
pop
mov
dec
xorl
jg
test
and
dec
rcrb
sub
cli
dec
das
jno
call
fs
jl
mov
rorl
or
fldl
jne
sbb
lcall
push
and
sbb
inc
nop
push
fmuls
jae
lock
cmp
add
outsl
and
sti
mov
gs
pop
lea
aam
aam
xchg
out
xchg
int
pop
in
out
add
mov
jg
mov
sub
jnp
mov
mov
or
arpl
mov
std
jecxz
jne
int3
sbb
pop
mov
lahf
push
sub
push
mov
push
adc
xacquire
inc
sub
sbb
test
test
test
jecxz
push
inc
sub
test
test
lods
lods
aad
test
sti
mov
dec
rcrb
xor
push
pop
rolb
add
push
and
insl
push
or
push
subb
xchg
imul
mov
in
jmp
mov
outsl
sbb
xchg
hlt
movsb
mov
xchg
leave
pop
adc
cltd
jo,pt
pop
jmp
xchg
scas
push
inc
aad
lgs
xchg
add
fiadds
jo
cmpsl
cmpsl
stos
repnz
push
pop
pop
int
or
pop
fsts
iret
inc
pop
push
add
fbstp
xlat
xor
inc
and
mov
xor
and
std
cmp
add
popf
sbb
lret
adc
cs
les
dec
data16
add
cmp
lds
cmp
aaa
in
sti
int
aam
push
in
xor
pushf
add
cld
fsubl
insl
ja
jae
add
aam
mov
sub
test
jnp
xor
popf
test
mov
pop
mov
add
cld
sbb
dec
mov
outsl
test
dec
or
pop
repz
loope
pop
dec
add
shl
enter
cmpsb
aas
loop
out
cmp
xchg
jo
cltd
idivb
cmp
or
jg
add
sahf
dec
or
xchg
push
rsqrtps
rcrb
cmp
pop
lret
jp
cmc
fistps
insb
addb
icebp
mov
movsb
enter
adc
ja
adc
fidivs
and
rcrl
mov
sbb
mov
jnp
dec
add
mov
jge
xchg
test
popw
push
push
push
popf
push
movsb
outsl
mov
call
fldcw
jo
mov
dec
out
pop
xchg
out
fmull
subb
mov
mov
mull
mov
hlt
xchg
dec
into
cld
loope
sbb
psllq
hlt
push
mov
out
push
daa
mov
fildl
loopne
push
add
jg
js
mov
icebp
popf
in
rolb
and
subb
ret
jb
nop
dec
aam
mov
and
sub
lcall
mov
mov
push
push
sub
imul
inc
xor
jge
int3
out
mov
ljmp
mov
pop
pop
push
mov
ja
cmp
push
out
mov
fcompl
push
popf
sbb
loope
mov
and
lea
inc
out
cmpb
sub
adc
outsl
dec
sbb
movsb
or
push
call
testb
add
outsb
stos
mov
adc
mov
push
outsl
dec
adc
ja
jmp
mov
xchg
sbb
out
shlb
jo
nop
push
jle
sub
fstps
lahf
xor
or
jmp
xchg
clc
jnp
lret
out
rorb
sarb
pop
bound
pop
pop
lret
push
push
negb
clc
lods
dec
jae
xchg
xchg
daa
hlt
div
push
jbe
or
sub
bound
xor
and
jge
xor
and
xchg
or
add
div
xchg
mov
imul
xchg
inc
into
nop
les
lahf
adc
mov
xchg
push
inc
iret
dec
sbb
fptan
sahf
dec
movsb
lock
push
jp
ss
mov
iret
or
inc
jl
inc
pop
stos
xchg
add
imul
sbb
mov
inc
cmp
test
xor
pop
mov
and
in
xor
and
jnp
pushl
inc
in
push
mov
or
jb
pop
mov
insb
mov
push
rorl
iret
les
jg
jae
mov
popa
sub
lock
out
outsl
sbb
sti
lock
ja
dec
jnp
push
lret
jg
das
ret
sub
cwtl
mov
call
popa
cld
lea
inc
xor
cmc
fadds
shlb
mov
or
popa
mov
xchg
out
orl
jl
vcvtdq2ps
lock
xchg
jne
mull
inc
pop
mov
outsb
jmp
clc
int3
div
fisubrs
adc
cli
xchg
adc
or
and
jle
push
pop
das
add
dec
push
cmpl
js
ss
shrl
inc
outsb
inc
add
cmp
mov
sbb
lock
popa
xchg
dec
cmp
aas
jl
int3
adc
fcomps
or
fistpl
mov
push
jl
cld
xchg
addr16
inc
jmp
push
fimuls
cmp
jnp
add
mov
push
fwait
cwtl
sahf
cld
hlt
ret
pop
cmp
fwait
lahf
icebp
aas
stos
andb
xchg
push
jbe
inc
daa
mov
fwait
ljmp
xchg
lret
lahf
out
clc
push
cmpsb
daa
add
mov
hlt
mov
mov
mov
mov
push
dec
mov
test
daa
sub
pop
cmp
mov
nop
mov
mov
pop
cmp
lahf
jo
adc
mov
int3
cmc
mov
pop
jo
lock
push
jl
xchg
push
out
movsl
cmp
insb
rcrb
push
sbb
dec
sub
push
stc
scas
xor
xchg
mov
mov
test
inc
add
and
in
pop
ja
mov
mov
xor
outsl
lds
or
pfrsqit1
sbb
sub
clc
loopne
sub
push
ljmp
mov
or
mov
inc
movsl
out
rol
inc
js
sub
int3
mov
les
fists
xchg
sbb
cltd
test
add
jecxz
loop
out
lahf
push
or
fnsave
mov
out
fistl
stos
and
sbb
pusha
cmp
jmp
push
xchg
jo
daa
jg
add
sub
subl
mov
xor
xchg
inc
mov
aas
std
lret
mov
add
dec
mov
mov
dec
and
pop
dec
xchg
in
push
lea
mov
adc
mov
jb
xchg
mov
xchg
push
push
adc
insl
jmp
ja
lods
xor
popa
xchg
mov
dec
ret
add
js
js
arpl
mov
adc
ljmp
xor
xor
ss
adc
adc
xor
mov
mov
adc
ret
imul
mov
push
pop
sbb
ret
adc
add
mov
addl
setnp
into
outsb
push
arpl
out
mov
out
fisttps
mov
pop
pop
stos
sub
fnsave
push
and
push
xchg
or
rolb
add
sbb
and
int3
mov
push
sub
push
stc
dec
loope
mov
fucomip
in
jne
data16
cld
or
inc
mov
lcall
repnz
mov
popl
jne
icebp
or
adc
push
sbb
rorb
dec
adc
sub
mov
sub
dec
jae
in
push
dec
das
std
lcall
shrb
jle
pushf
xor
outsl
rcrb
test
arpl
addr16
hlt
out
loop
or
lods
test
cmp
incl
xor
mov
in
aaa
insl
jle
arpl
into
xchg
mov
jb
inc
jo
iret
mov
out
xor
mov
mov
jecxz
jo
sbb
xchg
scas
stos
nop
lea
lret
mov
adc
add
xchg
lods
add
adc
and
ret
mov
cld
mov
mov
dec
jmp
dec
add
ja
lret
repz
insb
ret
lods
data16
push
in
xor
sub
mov
mov
push
sbb
pop
mov
push
mov
outsl
sbb
pop
sbb
je
sarl
add
lcall
pop
cmp
cmp
fwait
xor
and
aam
adc
adc
inc
mov
mov
test
jns
push
cmp
push
and
mov
add
dec
lea
loop
shrb
in
cmc
cs
lods
push
and
pop
dec
stc
stos
andl
xchg
repnz
mov
xor
in
pop
pop
aad
push
adc
negl
adc
xor
stos
push
inc
xor
movsl
popa
xchg
lods
lods
les
and
cmp
ljmp
pop
cmpsb
cmp
mov
jecxz
clc
sub
popa
dec
repnz
mov
lods
mov
out
inc
xchg
and
movsl
cmp
push
pusha
cmp
and
dec
inc
mov
add
into
les
cli
mov
mov
mov
sub
mov
in
cltd
or
in
mov
add
mov
mov
push
add
outsb
outsb
pop
add
sarb
mov
fadd
mov
push
aaa
das
lock
jge
inc
xor
rclb
dec
cli
mov
enter
repz
cmp
mov
add
insl
jb
mov
jno
jb
sbb
sbb
jle
movsb
in
das
jbe
adc
jmp
int
fs
lahf
fcmovu
mull
idivl
shlb
ss
inc
xchg
or
jo
mov
sub
inc
jbe
inc
sbb
adc
std
adc
ds
jp
dec
sarb
pop
jge
pop
dec
int3
lds
mov
test
test
fldcw
mulb
inc
ja
push
and
fcmovnbe
dec
dec
xchg
stc
lahf
les
fimull
fdivrl
mov
inc
lods
or
fs
into
iret
mov
js
and
test
jo
xchg
test
mov
fldcw
cmp
cmpsl
sub
jnp
sub
adc
je
mov
fildll
test
mov
xchg
out
inc
int
mov
pushf
cld
outsb
push
in
xchg
mov
pop
ficompl
fcoms
arpl
pop
jge
loopne
mov
jo
std
mov
repnz
mov
mov
shrl
div
xor
adc
dec
loope
mov
mov
outsb
sbb
jb
sbb
fstpt
sub
in
mov
push
movsb
das
cmp
jge
int3
fbstp
mov
lcall
xor
xchg
xchg
stos
cmp
in
mov
push
mov
addr16
cmc
lods
add
test
insb
jmp
outsb
mov
shll
push
add
data16
fists
mov
imull
out
lods
pop
inc
in
push
push
mov
xor
jbe
sti
addr16
cmp
adc
shrb
jp
stc
xor
push
fiadds
stos
inc
sbb
or
out
mov
mov
mov
push
leave
fs
mov
imul
xor
nop
addb
mov
push
ja
cmp
cmp
mov
mov
mov
stos
xchg
ljmp
stos
out
push
pop
repz
dec
nop
jp
imul
repz
dec
push
push
stos
or
sarl
mov
mov
cmc
mov
inc
and
jmp
hlt
in
cmpsl
sbb
or
sbb
ds
push
lcall
cmp
mov
push
xor
add
sub
fdivrp
xchg
lds
xchg
mov
jbe
xchg
sub
movsb
cmp
mov
je
cld
loopne
cltd
test
inc
popf
sar
mov
push
jo
andl
lods
inc
jp
jne
iret
sub
jecxz
enter
xor
dec
xchg
and
xchg
cmpsb
or
js
repz
xchg
xor
mov
cmp
in
rcll
or
aaa
aas
mov
mov
pop
mov
xchg
sbb
insb
dec
dec
les
cld
das
sbb
sub
outsb
ljmp
repnz
and
es
jnp
and
sub
imulb
lret
sub
les
xchg
jo
adc
push
rcll
sub
lock
jl
push
std
mov
setnp
dec
and
stc
mov
dec
stos
sbb
mov
icebp
push
fistl
pop
jecxz
sbb
add
jg
lods
inc
insl
iret
popa
pop
lods
jne
fadd
mov
insl
inc
pop
cmp
int
sbb
pop
imul
lret
pop
movups
adc
mov
fs
fcompl
in
cmc
mov
mov
ret
out
pop
jbe
shll
rorl
mov
cmp
push
cmc
rolb
or
add
cld
cmp
xorb
cmp
jp
mov
dec
inc
int
push
call
movsl
jg
test
adc
adc
test
shll
sub
mov
pop
int3
pop
data16
jmp
inc
out
in
aaa
mov
mov
adc
lret
jb
lds
aad
mov
cld
jge
add
cmp
cmpsb
jl
add
inc
orb
lods
mov
push
orb
sub
push
inc
xchg
cwtl
push
ljmp
daa
cli
dec
or
mov
fcom
das
lock
aas
cmpsl
mov
dec
pop
and
or
lock
dec
mov
sbb
arpl
mov
das
subl
mov
jg
stos
push
dec
inc
stos
icebp
sub
es
scas
mov
jnp
mov
stc
repz
mov
sub
sbb
fbstp
xchg
das
pop
arpl
repnz
mov
retw
lock
pop
or
jmp
mov
repnz
pop
cli
cmpsl
es
dec
or
outsb
lea
enter
and
push
pop
and
stc
inc
inc
lods
push
sub
repz
bnd
sub
or
arpl
xor
bound
cmp
std
fs
bound
mov
push
mov
out
add
scas
or
pop
and
mov
cli
fldcw
pop
jl
dec
lahf
jmp
dec
pop
push
cld
repz
js
push
mov
cmp
xchg
mov
lds
cmpsb
push
mov
mov
mov
xor
xchg
dec
adc
inc
sbbb
adc
arpl
jno
xchg
pop
fmull
adc
fcoml
shll
mov
xor
sbb
test
or
sbbb
inc
xor
insb
stos
popf
pop
lcall
mov
outsl
mov
fs
daa
int3
xor
shlb
rclb
cmpsb
sbb
mov
imull
fsubl
push
mov
xchg
xor
sub
sbb
mov
mov
inc
mov
pop
push
lds
test
insl
rorb
mov
add
ret
sbb
sub
xor
lods
popa
in
pop
loop
nop
imul
sub
call
adc
fisttpl
in
aam
out
mov
jne
xor
bound
jg
scas
fidivs
inc
sub
jns
add
scas
xchg
add
scas
xor
mov
pop
fwait
cmp
dec
mov
pop
imul
out
xchg
pop
lcall
jbe
xor
lahf
test
sub
fldenv
inc
mov
mov
xor
enter
jge
lods
dec
fs
les
mov
and
movsl
test
mov
adc
jb
dec
lea
or
adc
outsb
aam
fldl
std
scas
jl
pop
mov
cmpsb
mov
cmp
xor
popa
sub
dec
pop
mov
nop
cmp
cmpsb
in
pop
in
cmpsb
imul
xchg
or
repz
lcall
in
pop
add
or
lcall
pcmpeqw
or
dec
xor
stc
inc
lock
xchg
js
idiv
pop
mov
and
dec
mov
hlt
push
les
pushf
sub
inc
dec
xor
cmp
xor
sub
inc
sub
xchg
into
or
ret
stos
pop
pop
sarl
cltd
mov
int
mov
scas
ss
pop
repnz
sar
xor
ja
inc
xor
xor
lods
ret
jno
dec
je
loope
repnz
dec
test
or
push
stc
vpunpcklwd
lods
sub
jmp
push
dec
adc
add
pop
pop
call
push
setg
pop
insb
add
xor
push
push
lret
stc
xorl
test
fwait
stos
jo
inc
lret
loopne
push
pop
pop
mov
sub
mov
cs
pop
push
xchg
xorl
rol
sub
pop
push
sbb
lret
sub
jp
push
out
sarb
iret
sub
hlt
in
int3
dec
shlb
loope
dec
fs
add
in
xlat
iret
xchg
sub
mov
adc
add
xchg
mov
push
stos
adcb
mov
mov
in
sbbl
jle
inc
cld
mov
xchg
xchg
icebp
sub
jmp
pop
lea
in
sub
inc
imul
mov
cmpsb
fnstenv
jmp
xchg
xor
int
adc
popa
sbb
ljmp
mov
les
xor
xchg
xchg
repnz
ret
fnstcw
scas
lcall
mov
les
scas
outsb
in
out
xor
xchg
sbb
xor
xor
outsb
xchg
sarl
jg
and
mov
mov
mov
das
dec
cmp
out
sbb
aas
xor
aam
cld
fwait
jno
adc
es
pop
and
push
sbb
pop
outsl
sub
notl
into
outsl
data16
mov
movsl
imul
sub
flds
jnp
jnp
mov
or
xchg
adc
mov
std
out
cmp
and
add
scas
sbb
mov
orl
and
and
or
pop
fnstsw
aas
llwpcb
outsb
sub
mov
jecxz
add
mov
loope
insl
xor
std
cmp
in
xchg
jb
jg
aaa
lds
mov
adc
xchg
and
stos
push
or
and
fldl2t
aam
testl
in
ds
add
jmp
push
aaa
popa
add
dec
xor
es
push
pusha
xchg
fsubs
mov
xchg
bound
cmp
mov
stos
sbb
jg
mov
lcall
push
cmp
pop
fidivrl
and
std
mov
cmp
jmp
aas
push
xor
lods
xchg
inc
mov
daa
int
or
nop
adc
jne
cmpsb
rol
inc
sbb
lcall
hlt
sbb
xchg
scas
and
xchg
scas
mov
fnstenv
adc
sub
les
loope
loope
rclb
cmp
jl
loopne
out
aad
cs
fsts
and
mov
mov
ret
fbld
dec
push
out
adcb
test
cmp
roll
cs
dec
xchg
inc
aad
stc
mov
ficomps
push
inc
xor
cmp
aaa
push
sub
test
lods
int
pop
loop
icebp
jecxz
movsl
clc
pop
mov
xchg
cmpsl
cli
cmp
mov
inc
and
sti
mov
std
in
cmpsb
xchg
cmc
testl
xchg
cmpsb
out
decl
jne
mov
pop
call
mov
aaa
xor
daa
and
sub
rolb
jp
rorl
pop
ret
push
xchg
test
mov
xor
push
aaa
movsb
lods
scas
xor
pop
adc
and
jp
mov
or
or
or
cwtl
xlat
pop
scas
pop
cli
cmpsb
jmp
data16
out
jmp
xlat
xchg
ljmp
cmp
outsb
jns
ret
mov
pop
gs
and
shll
add
push
ja
mov
pop
movsb
mov
cmp
add
inc
enter
in
in
pop
test
sub
pop
push
or
out
fisttpll
mulb
mov
pop
lods
push
mull
in
xor
add
test
push
inc
lret
fistps
mov
dec
push
mov
pop
mov
cli
or
xlat
pop
xchg
push
mov
or
mov
int
arpl
inc
and
pop
into
push
inc
sub
sbb
mov
rorb
lock
xchg
aad
mov
ret
sub
std
icebp
or
lods
or
inc
outsb
in
js
fwait
test
add
jmp
xor
in
daa
mov
mov
pop
out
xor
test
sub
pop
call
xchg
sbb
rcll
gs
push
adc
push
lds
push
cmova
mov
cld
aad
cmp
xchg
mov
jbe
insl
jbe
inc
mov
ljmp
lahf
mov
inc
add
pop
mov
pop
insl
mov
ljmp
je
jp
popa
mov
pop
leave
into
sbb
movb
ret
aas
in
call
add
sahf
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
