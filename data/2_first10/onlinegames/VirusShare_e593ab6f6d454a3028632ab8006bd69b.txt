fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
or
cmp
and
pop
sbb
xor
sub
imull
andl
andb
out
std
loopne
mov
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
pop
or
test
sbb
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
sbb
loope
sbb
movsl
adc
ss
mov
jecxz
pop
in
adc
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
push
test
jo
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
fwait
jmp
push
jno
dec
inc
imul
xor
xor
pop
ja
mov
pop
je
or
sub
lods
fnstsw
inc
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
or
gs
adc
cmp
cwtl
fstps
adc
aas
xor
enter
daa
sbb
fimuls
loopne
or
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
pop
pop
add
adc
xabort
in
les
out
inc
pop
or
jbe
mov
ret
in
inc
mov
cmp
subb
pop
or
ja
mov
daa
cwtl
pop
les
adc
mov
js
cmpl
inc
mov
pop
and
dec
shlb
add
std
add
arpl
mov
sbb
jge
ja
repz
lea
andb
rolb
lea
sahf
iret
out
stos
mov
loopne
adc
mov
add
xor
test
jecxz
push
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
jbe
les
push
xor
lret
test
xor
scas
jbe
mov
xlat
inc
into
xor
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
sbb
arpl
xchg
sar
out
enter
jmp
ja
leave
imul
fs
int3
je
imul
rorb
int3
clc
insl
mov
push
cltd
pop
flds
sti
adc
sti
cld
mov
sbb
sti
fcomp
xchg
int
cld
std
dec
push
mov
xor
xchg
mov
dec
mov
cld
mov
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
cwtl
mov
adc
call
lods
test
scas
mov
shrb
loope
or
jae
push
ss
dec
xchg
insb
les
fisubl
neg
cwtl
mov
ss
and
push
neg
fwait
pop
fs
mov
clc
je
jae
cwtl
shlb
sti
mov
into
bound
xor
jg
imul
idivl
fisttpll
mov
test
fldcw
xor
push
xor
mov
je
clc
add
clc
lods
jbe
popf
lea
adcl
jnp
aaa
movsb
pushf
or
insl
mov
mov
mov
call
push
bound
mov
clc
xchg
and
test
sar
jb
iret
sar
clc
sar
mov
push
push
mov
or
xchg
outsl
jbe
push
adc
cmp
cmp
popf
push
cmpsb
imul
insl
nop
gs
out
and
push
add
call
adcl
hlt
cmp
negl
xchg
shll
xchg
xor
and
hlt
fs
mull
or
sbb
xchg
cmp
aaa
gs
adc
ret
loopne
dec
dec
scas
cli
mov
jle
subl
and
jne
int3
add
or
pushf
sbb
push
cmp
lea
adc
jmp
in
adc
sub
mov
or
loope
or
push
fadds
inc
faddp
dec
movsb
inc
cmpsb
in
adc
mov
rclb
mov
sbb
or
push
dec
inc
dec
dec
in
test
push
dec
inc
dec
and
aam
inc
push
dec
cs
outsl
lds
or
push
sub
subl
add
and
add
push
add
add
enter
nop
add
enter
mov
inc
loopne
push
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
imul
mov
mov
mov
ljmp
dec
repz
xchg
outsl
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
popf
std
gs
and
add
or
cld
pop
sub
pop
adc
add
lret
xchg
pushf
push
add
push
xor
jnp
cmp
pop
push
add
fnstcw
dec
call
popl
mov
add
push
fsubrs
bound
add
jae
inc
adc
cmp
frndint
shrb
popa
je
rclb
adc
fdivs
gs
outsl
arpl
inc
and
sbb
inc
ljmp
in
push
mov
in
xchg
movsb
xor
shll
in
add
imul
imul
imul
cmpsb
jmp
sbb
cs
pop
shll
fs
inc
imul
add
js
pop
outsb
xor
inc
mov
push
xor
daa
and
pop
rcr
pop
and
and
mov
push
idivb
rorb
inc
in
fs
add
xor
mov
hlt
fdivrl
and
filds
and
adc
and
adc
lahf
add
cmp
lahf
add
and
inc
and
adc
and
cmp
add
inc
out
stc
test
enter
fdivs
and
adc
add
inc
sahf
nop
dec
movsb
and
adc
add
inc
or
aaa
sub
dec
inc
ja
push
sub
sbb
mov
fmull
leave
add
lcall
fdivrs
adc
push
popa
mov
jge
divl
push
pop
jmp
adc
mov
pcmpgtd
mov
add
orl
pop
rcr
loopne
lea
mov
mov
xchg
arpl
decb
ret
and
or
je
into
flds
pusha
mov
and
xchg
push
inc
fs
adc
jbe
mov
or
push
mov
inc
ja
pop
sub
pop
pop
leave
xchg
icebp
sub
out
andb
inc
cmpsl
xchg
push
clc
std
jae
arpl
loop
ret
pop
stos
xor
mov
xor
outsb
xchg
xchg
dec
sub
push
enter
xchg
clc
mov
or
call
adc
std
push
insb
pop
adc
adc
ds
addb
adc
adc
push
and
jecxz
xor
test
add
cmp
jl
or
shr
or
push
mov
push
idiv
mov
int3
insb
outsl
enter
jnp
icebp
cmpsb
sti
jle
addr16
mov
xchg
pop
pushf
mov
arpl
dec
jne
pop
call
sub
dec
ja
push
jmp
inc
inc
loope
cmp
or
loope
sbb
mov
test
dec
mov
pop
mov
xchg
sbb
cmp
cmp
add
mov
addl
xorb
mov
outsb
mov
sub
ror
push
hlt
push
inc
lock
sbb
dec
jno
neg
pop
repnz
mov
data16
shll
xor
incb
add
sub
adc
or
cmp
movl
neg
pop
sbb
dec
mov
or
add
out
inc
mov
push
mov
xchg
fsubr
into
xor
mov
add
cs
push
sbb
call
jmp
mov
test
aam
or
call
pusha
jecxz
rolb
cmp
fisubs
pop
add
adc
or
hlt
or
jb
adc
jl
fcomp
dec
out
out
int3
jg,pt
or
cmp
insb
mov
cmp
cmp
scas
outsl
mov
mov
or
ss
mov
testl
pop
push
mov
cmp
jo
lds
jnp
ret
push
pusha
push
mov
push
mov
cmc
enter
add
mov
lret
gs
insb
jb
mov
lret
gs
gs
cs
fisttpl
cltd
mov
xor
ja
imul
pop
fcmovnu
frstor
sub
push
rcll
loopne
loope
jecxz
ret
in
cld
mov
movsb
sti
in
adcb
add
sbb
cmp
inc
call
add
push
or
in
cwtl
pop
add
and
push
jmp
sub
scas
sbb
mov
call
mov
mov
push
shr
stc
sub
cs
insl
jmp
add
mov
vmwrite
cmc
das
popf
mov
add
cmpl
fbstp
dec
cmp
cmp
or
dec
daa
rcrl
sub
xchg
outsb
mov
mov
inc
cmp
jl
je
fiaddl
inc
cmp
sub
cmpb
js
pushl
mov
daa
cmpl
jb
dec
or
leave
je
add
jp
iret
push
aas
or
add
mov
push
popf
or
fisttps
ret
fbstp
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
add
cld
test
rolb
cld
jge
mov
add
sbb
cltd
mov
adc
mov
mov
mov
lods
inc
cmpl
fisttpl
add
cmpl
std
outsb
dec
mov
gs
and
lea
shr
shlb
mov
mov
mov
jne
daa
add
ljmp
shlb
cli
add
push
or
adc
xchg
mov
lar
data16
lock
jne
or
not
push
sub
add
aad
outsl
or
shl
or
cmpsl
xchg
xor
adc
in
cmp
clc
inc
mov
mov
std
sbb
xchg
add
jmp
add
imul
push
repz
jbe
push
mov
mov
dec
xorb
and
adc
outsb
inc
or
popf
mov
add
lcall
fcomip
and
mov
pushl
add
push
scas
clc
add
fildl
and
sub
sbb
mov
pop
or
push
mov
mov
jl
je
dec
push
sbb
andl
jle
sbb
icebp
test
call
call
int3
insb
aaa
pop
adc
lcall
xor
push
add
adc
pop
fwait
nop
pop
xor
inc
pop
or
mov
cmp
push
out
imul
xor
and
int3
mov
or
push
xorl
push
mov
dec
sti
lea
mov
or
inc
testb
je
ficompl
pop
inc
sub
icebp
insb
push
sbb
or
adc
xor
sti
gs
int
insl
push
mov
loopne
pushf
cld
inc
xchg
test
push
push
xchg
mov
mov
add
lock
lcall
or
sti
inc
test
lahf
cmp
nop
sbb
dec
jnp
jmp
ss
mov
and
or
subb
mov
jo
lret
mov
insb
outsl
jb
jb
das
lret
mov
gs
je
push
sahf
add
data16
mov
and
pop
pop
push
sbb
cld
or
loopne
clc
or
or
jl
mov
mov
mov
add
ret
movsl
pop
imul
fs
mov
lret
jne
push
in
and
leave
rcrb
scas
pop
adc
jg
dec
arpl
mov
or
cvtps2pd
mov
adc
and
mov
je
popf
xchg
mov
aas
les
enter
xchg
add
mov
xor
mov
cs
adc
cs
arpl
or
inc
sbb
int3
stos
push
pop
pop
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
ljmp
call
outsl
arpl
fs
jne
add
fs
imul
jg
jns
and
fs
inc
pop
fdiv
sarl
popa
insl
gs
xor
ja
mov
popa
je
and
insl
xorl
cvtps2pi
add
outsb
mov
mov
add
or
jb
sub
mov
jle
test
push
or
inc
ds
js
nop
add
imul
jb
sub
dec
bound
arpl
mov
gs
outsl
add
jae
sub
orb
adc
addb
imul
push
add
lea
xchg
dec
jo
mov
mov
push
xchg
outsl
ja
inc
xor
mov
test
mov
jne
mov
sti
mov
pcmpeqb
and
insb
mov
pusha
push
das
dec
outsb
add
push
pushw
gs
jge
xor
pop
jo
ret
or
imul
dec
fwait
bound
pop
push
js
xor
inc
int
orb
inc
sub
push
outsl
outsl
insb
dec
mov
sbb
popa
jo
push
push
ret
inc
popf
dec
push
orl
ja
add
out
cmp
mov
push
dec
inc
push
dec
inc
es
mov
lods
add
jo
pop
retw
push
push
mov
packssdw
pop
pop
add
jne
or
pop
mov
mov
outsb
sbb
outsl
adc
push
jo
pop
inc
push
xor
sti
shll
arpl
popa
jge
sub
rolb
mov
dec
outsb
data16
xchg
mov
movsl
add
add
std
outsb
aaa
insb
fstpt
inc
arpl
jo
inc
popa
arpl
fcmovbe
sub
push
inc
inc
push
mov
add
or
xchg
mov
sub
push
cltd
add
insl
popf
insl
ret
sbb
lds
ret
or
pop
inc
arpl
adc
ja
xor
dec
stos
and
jno
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
call
out
psubq
and
add
add
incl
mov
shlb
daa
repnz
jnp
add
clc
add
add
cmp
dec
aaa
cmp
jmp
inc
shrb
jo
jo
ja
js
mov
shlb
xor
pop
cld
adc
mov
xchg
pusha
bound
fs
cld
jp
shrb
push
orb
das
or
adc
loopne
cmpsb
imul
mov
jb
mov
push
lcall
ljmp
les
sbb
xor
imul
imul
dec
shrl
sub
jb
sahf
cmpsb
mov
shll
add
lcall
dec
pop
push
jp
sahf
lods
enter
cmpsb
out
add
push
xchg
pushf
lcall
mov
orb
imul
imul
dec
push
pusha
movsb
jecxz
cmpsb
imul
push
push
xor
cmpsb
imul
inc
mov
dec
shll
mov
sahf
stos
mov
shlb
dec
shll
in
clc
add
adcl
movsb
imul
mov
out
addb
mov
sbb
cmp
dec
stos
add
push
push
pop
imul
fs
fs
mov
mov
shll
adc
xchg
and
push
jne
pop
sub
inc
aaa
fsts
test
adc
or
lods
mov
add
mov
push
add
ss
or
or
inc
add
xchg
add
aaa
sbb
pusha
flds
shlb
inc
add
jl
mov
add
add
test
mov
repnz
add
adc
jecxz
push
and
testl
and
add
mov
mov
mov
ja
adc
sub
mov
aas
add
pop
xchg
call
ss
add
pop
add
jbe
add
push
xor
xchg
test
pop
lods
gs
insb
pop
inc
fcmovne
push
or
or
inc
and
cmpsb
outsb
lcall
add
bound
pop
xor
push
inc
test
or
imul
adc
mov
jne
punpcklwd
pop
inc
or
push
sub
add
decl
pusha
aas
push
inc
jb
push
and
ja
or
push
mov
and
push
addr16
or
icebp
xor
push
sbb
inc
cmpsl
pop
add
repnz
add
pop
cs
add
lret
jb
arpl
or
push
push
inc
push
inc
dec
adc
dec
hlt
and
outsl
data16
dec
push
sbb
mov
fistl
jae
dec
fwait
ja
jb
imul
sti
imul
fs
aas
sub
push
dec
inc
das
sbb
xor
pop
dec
push
push
out
mov
inc
add
fiadds
sub
or
xor
cltd
fwait
pop
outsl
je
gs
jo
sti
cs
xorl
inc
pop
or
jb
jne,pn
pop
and
ret
cmpsl
sub
xor
arpl
lea
push
push
fs
in
les
mov
add
push
int
inc
sarb
adc
sbb
or
nop
or
sbb
out
push
inc
dec
test
mov
or
mov
stos
add
add
inc
jno
xchg
pop
dec
mov
and
xchg
push
add
mov
in
adcl
aas
daa
and
add
mulps
pop
jb
leave
in
pop
pop
pop
arpl
xchg
mov
lahf
cwtl
mov
pop
sbb
pushf
fstpl
push
mov
adc
add
popa
adc
lea
mov
xor
in
adc
push
aas
add
je
andb
lea
inc
push
adc
add
xor
adcb
lock
loopne,pn
cmp
pop
adc
ja
mov
push
mov
lea
loopne
mov
adc
or
mov
les
in
add
clc
decl
lea
movb
mov
sub
sub
mov
movb
jge
mov
call
sti
push
push
out
add
inc
call
mov
lods
inc
pop
xchg
or
das
push
and
mov
or
add
mov
pop
and
int
adc
mov
sbb
ds
insb
and
push
or
mov
movzbl
roll
sti
push
adc
jne
mov
andb
mov
jb
fisttpl
aas
repz
inc
pop
cmp
pop
jl
push
xor
mov
or
mov
stc
push
nop
cld
sbb
add
add
add
dec
jle
aas
les
add
enter
popa
push
mov
sub
dec
mov
test
add
xchg
add
xchg
dec
inc
lds
pop
mov
outsl
out
add
adcw
cmp
dec
cmp
lret
shl
mov
mov
inc
push
ret
push
push
xor
xor
xor
xor
inc
popa
pop
cltd
xor
or
cmp
push
jl
mov
xor
xor
sbb
outsl
ja
adc
jp
jg
add
jge
cmpsl
loopne
lds
or
call
pop
insl
push
push
push
and
pop
lahf
push
sub
add
push
dec
push
push
pop
sbb
ret
jo
mov
pop
out
lea
push
mov
or
movsw
mov
cmp
movsl
movsb
mov
insb
sbb
divb
mov
mov
popl
psllq
shlb
mov
ss
mov
movsb
jmp
dec
pop
mov
push
jb
cmpsb
cwtl
push
dec
roll
outsb
xor
push
nop
int3
test
xor
push
sub
pop
pop
daa
pop
je
xchg
std
out
push
rolb
mov
jne
mov
sub
jbe
xchg
insl
mov
push
pop
call
arpl
and
faddl
hlt
mov
inc
inc
mov
sbb
jb
or
mov
cmp
jne
dec
add
cmp
xchg
rol
out
or
pop
adcb
andl
xor
inc
add
cmp
insl
add
cld
pop
jb
addl
dec
add
pop
xchg
push
pop
loop
add
sbb
sbb
adc
xor
rdtsc
sub
insb
jg
push
xchg
out
mov
lea
cmp
jne
vunpckhpd
and
mulb
mov
cmp
out
inc
shll
pop
cld
call
jle
jb
daa
hlt
mov
jmp
add
push
jo
adc
loope
call
pop
or
movl
push
cltd
call
out
pop
enter
in
jl
test
adc
add
pop
dec
rorb
push
xor
xor
xor
in
cmp
xor
xor
or
and
xor
sub
mov
add
gs
pop
push
xchg
rolb
and
push
mov
push
cwtl
xor
nop
xor
xorb
adc
clc
jle
fistps
pushl
fstpt
pop
adc
push
mov
cmp
ja
clc
fwait
sbb
outsb
call
adc
je
test
adc
push
mov
inc
hlt
mov
push
outsl
and
jne
cmpl
daa
incl
mov
cmp
jne
xor
fmull
inc
clc
xchg
cmp
cmpsl
je
push
stos
movsb
mov
mov
sbb
addr16
inc
cmp
mov
cmc
in
shl
ficompl
cli
cli
inc
pushf
test
or
jae
adc
adc
xor
add
add
insl
outsl
mov
shlb
aaa
ret
add
out
inc
sbb
je
mov
push
adc
push
or
or
aaa
push
jmp
adc
add
xor
sbbl
push
add
cld
negl
cltd
pop
inc
idiv
adc
jg
rorb
inc
jmp
andb
outsl
add
push
xor
pop
enter
xor
adc
xchg
adc
xchg
add
in
add
push
call
lahf
dec
inc
fcoml
add
lods
xor
adc
add
dec
mov
adc
adc
aaa
in
jmp
or
adc
lock
cs
and
dec
dec
clc
fs
ja
xor
mov
jo
pushf
jl
inc
mov
fdivrl
lea
decl
add
andl
aas
mov
ljmp
or
imul
out
mov
adc
and
push
add
and
jge
lahf
mov
movsl
outsb
lock
mov
rcr
cmp
loopne
cmp
jae
incl
mov
mov
shr
add
dec
xchg
or
pop
inc
push
mov
push
addr16
jecxz
inc
mov
mov
jne
adc
sbb
sub
sbb
rorb
outsl
sbb
inc
add
loop
or
adc
or
jne
aad
fdivl
dec
test
xor
inc
int
enter
pop
inc
xchg
inc
in
mov
movsb
pop
jbe
or
fisubrl
sbb
xlat
and
push
jl
and
or
pop
loop
incb
adc
xlat
jne
stos
xor
ljmp
data16
jle
push
repnz
not
and
testl
clc
mov
adc
shr
out
push
js
fcmovnu
add
repnz
aam
or
lret
jg
jge
and
or
lea
sar
lods
sti
out
xadd
adc
pop
inc
sub
mov
and
not
aaa
xlat
fstpl
inc
fiadds
psllq
sti
outsl
in
into
mov
shr
or
add
dec
daa
aaa
shll
mov
add
lea
fstl
cli
push
lods
loop
mov
push
push
test
fcomip
shlb
push
mov
and
adcb
sub
xchg
rcr
loope
insl
fnstenv
add
loopne
fiaddl
pop
popa
xlat
or
mov
into
outsl
sub
adc
test
roll
mov
je
fbstp
sbbl
in
pop
mov
int3
xor
add
lret
push
add
out
xor
add
pop
pop
ficomps
sbb
les
repz
insl
repz
adc
fcomps
addl
repz
and
not
fisubrs
pusha
subb
ret
pop
scas
testl
sti
mov
les
subb
in
cltd
ss
pop
push
loop
lss
sahf
adc
push
fmul
repnz
add
lods
jne
out
pop
mov
pop
mov
or
les
adc
arpl
or
xor
or
jns
jl
or
xchg
jno
std
stos
mov
adc
cld
and
mov
fidivrs
pop
jle
mov
mov
cmpsb
pop
mov
mov
mov
pop
and
mulb
xlat
and
or
popa
mov
lods
xchg
adc
add
or
mov
out
mov
push
and
aad
fidivl
mov
bound
sbb
icebp
lods
pop
xchg
shlb
clc
jg
in
test
dec
cmp
inc
rclb
data16
or
fadds
hlt
push
and
lret
imull
clc
jb
repz
pop
pop
es
adc
jne
xor
inc
shll
and
stos
mov
cmp
push
sbb
out
call
fidivl
mov
xchg
call
xlat
lods
mov
fdivs
push
adc
add
jo
in
pop
rorb
fimull
out
fcoms
push
pushf
jecxz
xor
mov
xchg
fnstcw
out
adc
mov
xor
mov
mov
fwait
aaa
pop
fidivl
and
sbb
loopne
fistl
popl
add
pop
aaa
or
movsl
imul
mov
push
fbstp
xchg
mov
cltd
xlat
sbb
jbe
enter
or
xrelease
call
inc
or
adc
out
or
fcmovbe
fsubs
js
mov
add
sbb
lock
aam
mov
mov
push
and
jge
daa
sub
aad
flds
outsl
adc
mov
movl
jecxz
fisttps
sub
iret
or
xor
xor
test
pushl
sbb
test
xor
jns
leave
insl
mov
xor
js
or
cs
js
aaa
mov
out
lds
popa
popf
insl
adc
inc
sti
xor
cmp
outsb
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
insb
movsl
neg
mov
fimuls
cltd
jb
jb
lret
fmuls
in
clc
pop
pusha
dec
mov
cli
xor
rcrb
mov
idivl
or
xlat
mov
repnz
xor
jle
sub
jae
mov
int
in
testl
imul
js
pusha
jp
mov
mov
fidivl
lods
xor
test
out
aam
xchg
jae
test
out
sub
xor
add
add
xchg
lods
mov
or
push
aas
sbb
cmp
into
sub
fstps
push
in
loop
les
in
mov
inc
out
idiv
ss
in
clc
jl
pop
insb
cmp
pushl
in
jnp
xlat
or
aam
gs
lods
les
mov
jne
cli
mov
mov
js
xorl
and
stos
rcrb
fucomi
jp
sbb
push
or
in
sbb
jl
stc
test
inc
int3
or
inc
push
es
xchg
or
mov
jns
and
int
mov
mov
mov
cltd
or
cmp
fcmovnbe
mov
ret
pop
pop
gs
sub
xchg
in
push
rcrl
jns
lock
int3
or
push
or
ja
jno
dec
mov
in
jge,pt
out
call
unpckhps
sbb
adc
rcrl
test
sub
jmp
dec
xor
xchg
fstpt
test
jecxz
jp
mov
add
xor
mov
loopne
sub
jecxz
jp
ret
xor
mov
add
or
ja
mov
fwait
mov
lds
jp
mov
lea
mov
xor
lcall
mov
mov
outsl
xchg
ret
rcl
sub
pandn
repnz
repz
rclb
pop
jecxz
mov
push
dec
mov
pop
jge
push
insl
jmp
push
add
movsb
mov
scas
push
push
or
or
addl
js
test
std
push
mov
mov
dec
cld
outsl
cmc
xchg
jge
cmp
jl
js
sub
push
push
push
notb
data16
push
fcoml
xlat
adc
push
test
fcmovbe
sub
jle
jge
inc
pop
inc
adc
push
iret
pop
pop
mov
mov
xchg
outsl
sti
mov
adc
adc
add
sbb
shlb
je
cmp
jne
xchg
sbb
jb
push
aam
adc
push
xor
int3
incl
fistpl
push
cmc
lods
jns
or
cld
call
sub
sub
aaa
imul
je
cli
mov
dec
cmp
out
or
testb
mov
mov
nop
xor
je
mov
pop
adc
int
sbb
add
test
push
loopne
gs
outsb
sbbl
add
fsubr
xchg
cmp
rclb
push
mov
adc
data16
fnsave
push
or
call
repz
push
jo
lahf
jns
and
gs
divl
and
int
xchg
mov
or
inc
xchg
adc
cld
cmpb
inc
add
push
adc
inc
stos
sub
mov
lods
mov
insb
rcl
aam
lods
outsb
les
dec
and
mov
fmull
lahf
jnp
xor
pop
mov
xor
and
call
pop
push
push
push
and
push
stos
inc
xor
in
dec
gs
mov
push
inc
dec
inc
or
shl
mov
mov
xor
cmp
push
push
mov
cld
push
xor
rep
and
push
mov
or
cltd
inc
mov
adc
pop
or
sbb
and
ss
adc
sbb
add
jge
push
push
push
pop
adc
test
call
xor
pmullw
cmp
jp
push
dec
inc
fdecstp
xor
rclb
mov
sub
push
xor
cmp
or
sbb
adc
movhps
add
lret
cmp
dec
int3
mov
mov
testb
ret
mov
es
mov
rolb
aam
inc
adc
lods
push
push
js
xor
lea
sti
iret
mov
xchg
mov
and
jmp
idiv
sbb
cmp
je
dec
dec
cmpw
jne
pop
push
arpl
push
add
cmp
add
scas
loope
sbb
sub
jmp
cmp
xor
xor
push
mov
mov
cltd
push
aad
sbb
scas
cli
out
aad
jbe
cmp
inc
sbbl
pop
fwait
ret
push
or
mov
mov
xchg
cmp
ja
orb
inc
add
je
cmp
jne
push
sahf
xchg
sub
dec
cmove
rcl
lods
push
outsl
inc
xchg
add
cmp
mov
stos
loopne
cmp
imul
xor
xchg
add
loopne,pt
pop
adc
cmpb
movq
cmp
push
inc
sbb
movsl
mov
cmp
subb
inc
mov
xchg
mov
inc
jbe
add
xchg
insb
cmpsb
lea
in
mov
sbb
xor
mov
mov
push
aas
repz
int3
and
dec
fsubp
add
loope
mov
push
push
rolb
sub
adc
pusha
mov
insl
mov
dec
sbb
mov
fstps
cmp
int
mov
xlat
sbb
rclb
sub
dec
push
insb
cmp
pushf
iret
in
imul
inc
mov
fsubl
pop
add
jg
std
and
ret
je
data16
xor
dec
cld
loopne
call
cmp
and
pushf
push
mov
or
rcrl
jg
dec
je
cmp
mov
mov
mov
jne
or
lods
sub
mov
mov
jnp
push
push
pop
dec
mov
stos
sbb
pop
mov
in
outsl
scas
cmp
cmp
sbb
out
dec
outsl
pop
pop
call
call
mov
inc
push
dec
inc
leave
fnstsw
mov
adc
or
lods
cs
mov
pop
xchg
adc
jmp
dec
inc
lret
mov
mov
movsb
add
sbb
cmpsb
add
test
ljmp
sub
sahf
lock
cmp
or
pop
sbb
jg
pop
scas
dec
or
push
pop
cs
lret
mov
mov
mov
mov
mov
lcall
jbe
imul
add
fxch
mov
dec
aam
js
insb
outsl
insb
lret
mov
jb
jb
and
pop
stos
insl
rcr
dec
test
insb
mov
jecxz
pop
in
push
fdivs
lret
insl
out
dec
out
call
lcall
jo
imul
je
rol
int
mov
ret
rol
xor
mov
add
xor
enter
insl
xlat
lret
cmp
int3
hlt
xchg
push
xchg
push
cwtl
cltd
lcall
fwait
pushf
adc
mov
mov
sub
mov
movsb
inc
add
test
imul
imull
pop
mov
hlt
cli
jns
lea
orb
mov
stc
cmp
pusha
ficoml
push
shlb
cmp
stc
pusha
push
popf
pop
jecxz
rolb
sahf
adc
mov
in
pop
ret
enter
lods
sbb
lret
popa
pop
test
data16
pop
xor
insb
mov
jmp
dec
rolb
pop
xchg
jae
rcll
data16
movsl
cmp
cmc
push
and
jge
pop
xor
out
shrb
sar
xlat
insb
test
pusha
sti
mov
adc
shl
and
imul
add
cli
pop
xor
in
pop
cli
inc
ret
sbb
daa
add
push
push
inc
mov
aaa
xor
popa
sub
insb
pop
les
jmp
sbb
mov
adc
cmp
jmp
mov
nop
jb
leave
and
cli
or
adc
cmp
mov
fwait
hlt
cld
nop
daa
adc
cmp
cmc
cld
mov
mov
mov
xor
sbb
mov
push
fadds
xor
movsb
shll
imulb
xchg
loope
cld
mov
xor
fbld
mov
mov
pop
sahf
popa
adc
jo
pop
ja
inc
out
subl
out
sbb
inc
adc
dec
xchg
int
adc
sub
sbb
das
pusha
push
mov
pop
adc
mov
in
js
inc
adc
test
js
mov
in
add
je
adc
inc
push
pop
movsb
inc
cmp
jl
jns
pop
add
xor
mov
outsb
jne
push
mov
sub
add
testl
fnstsw
rcr
push
cltd
scas
inc
mov
out
pop
adc
cmpl
stos
shrb
sub
es
mov
jl
in
pop
hlt
adc
cmc
adc
aam
les
enter
add
push
push
cmpsb
movsb
int3
jbe
cmp
push
rolb
lahf
dec
xchg
mov
xor
test
cmpb
mov
jae
pop
mov
mov
test
and
cs
push
or
xchg
aam
aaa
fsubrs
add
push
xor
xor
outsb
adc
add
add
xor
movsb
adc
sbb
and
push
imul
jmp
mov
scas
add
mov
jb
xor
loopne
push
inc
mov
in
andl
call
add
adc
pop
or
and
adc
bound
mov
add
fs
pusha
mov
loopne
or
sub
push
jl
outsl
jp
xor
shll
insb
insb
popa
push
dec
pop
outsb
dec
rcll
outsb
das
fsubs
lcall
inc
fidivs
imul
mov
xor
xor
xor
cld
std
insl
icebp
call
xor
mov
mov
add
lcall
mov
fwait
mov
outsb
or
xor
fs
pop
xor
insb
add
leave
pop
pop
lret
mov
lret
mov
js
push
lret
outsb
xor
pop
inc
jb
mov
repnz
adc
ror
push
scas
jmp
push
andl
sbb
sbb
mov
sbb
sbb
adc
push
lret
add
dec
mov
mov
and
in
pop
insb
sbb
int
in
loopne
adcb
jmp
loop
orb
inc
test
and
sbb
loope
imul
outsb
je
cmpsb
imul
test
adc
or
sbb
xor
in
sub
sbb
mov
xchg
fdivrl
sub
fsubr
sub
xor
and
sub
rol
dec
adc
fcoms
rorb
bound
out
rcl
ds
xor
daa
adc
out
outsl
add
jo
adc
add
pusha
cmp
in
mov
or
cli
fwait
cmpl
clc
and
lds
mov
and
dec
dec
out
or
mov
cmp
sub
push
stc
les
hlt
in
loopne
push
aam
sub
cs
out
push
pop
push
insb
outsl
insl
push
adc
dec
in
push
or
pop
mov
push
jne
xor
and
pop
pop
adc
ljmp
push
popa
out
call
push
test
mov
jae
std
lock
push
loop
lea
push
movsl
movsb
cmp
hlt
jo
and
pushf
nop
and
cmp
ljmp
push
inc
xor
adc
push
cmp
xor
inc
push
mov
loop
call
ret
push
pop
cs
push
sti
loopne
xorb
mov
pop
push
pop
inc
push
sbb
pop
nop
cmc
inc
aas
fdivl
or
add
andb
cli
addb
idiv
and
shrb
clc
add
add
mov
out
push
dec
pop
add
shll
insb
dec
jo
mov
sbb
cs
imul
je
cmpsb
jmp
popa
jo
lcall
jae
outsb
sbb
mov
sub
orb
nop
out
aam
jne
add
inc
push
sbb
xchg
jo
jecxz
xchg
jae
mov
fcom
mov
fmull
dec
xor
and
inc
xchg
or
xchg
ds
addr16
adc
icebp
mov
xor
xchg
not
mov
add
push
mov
outsb
sbb
aas
sub
into
pop
sbb
or
inc
in
sub
arpl
inc
in
jl
stos
push
cmpsb
pop
rclb
or
js
iret
inc
lcall
push
popf
mov
jne
adc
jle
push
int3
cmp
push
cmp
cmp
fsts
ss
adc
sbb
xor
xor
insl
adc
xchg
xchg
dec
iret
push
jmp
stc
sbb
orb
or
and
mov
in
ljmp
adc
mov
ret
call
movsb
lret
and
jns
jns
and
idiv
dec
mov
fstl
pop
xor
jnp
sbb
jbe
hlt
adc
loop
pop
push
mov
inc
rcrb
jle
mov
addr16
in
push
lret
and
outsb
mov
mov
adc
sub
jecxz
mov
popa
ret
jp
mov
sbb
out
add
test
cmp
lahf
mov
mov
push
or
inc
fisubrl
call
es
cmp
sbbb
mov
mov
es
pop
adc
add
std
xchg
arpl
xor
mov
iret
xchg
sti
aas
xchg
sti
mov
sub
jo
xchg
popf
lcall
push
adc
or
std
popa
push
add
fstpt
int
sti
pop
push
daa
add
pushl
adc
fcomp
or
out
pop
mov
lret
test
add
mov
dec
cld
push
xchg
fisttps
add
jmp
outsb
lret
popa
cmp
jae
cmpsb
imul
shll
mov
cmpsb
cmpsl
les
test
lret
mov
test
cmp
lret
mov
jb
cmp
jae
dec
shll
insb
cmp
dec
shll
jns
cmp
dec
fs
cmp
aam
es
das
enter
shrl
lret
int
xor
xlat
into
inc
iret
jae
rcl
pop
shll
rcll
aam
aad
xlat
aaa
fsubrs
shll
fcmovu
jo
imul
imul
xor
and
sahf
mov
cmp
sbb
outsl
and
jae
inc
inc
cmp
and
mov
sbbb
and
les
push
shrb
sbb
into
movsl
test
out
sub
fldenv
or
fildl
sti
push
push
pop
and
in
adc
inc
push
sub
clc
popf
rorb
dec
mov
sahf
jnp
push
rolb
nop
mov
mov
or
push
or
adc
cwtl
lea
push
add
jecxz
pop
into
leave
push
ss
fwait
mov
psrlw
fildl
pop
clc
loop
stos
inc
out
fwait
adc
adc
cmpsl
stos
mov
push
rorl
jle
imul
stc
mov
stc
scas
fsubl
js
xchg
les
pusha
insb
mov
mov
loopne
pop
push
xchg
or
add
mov
ljmp
or
pop
push
into
sub
dec
adc
lock
sub
orl
jo
push
sub
add
dec
aam
pop
sbb
or
push
and
pop
pop
mov
pop
jecxz
je
add
pop
or
into
sahf
aas
mov
cvtps2pi
out
inc
maxps
test
push
es
subb
add
sbb
pop
cld
daa
pop
mov
push
mov
call
or
inc
aas
push
fldenv
arpl
sahf
nop
pop
cmp
aas
mov
insb
add
popf
les
clc
fnstenv
stos
or
add
gs
xchg
gs
fcomp
in
outsl
subl
shll
dec
push
les
aad
xor
icebp
sbb
push
adc
pushl
mov
inc
mov
adc
js
mov
ljmp
adc
test
push
imul
cli
push
or
test
jmp
aam
pop
jnp
push
imul
nop
sbb
out
out
pop
lock
je
cltd
mov
idiv
push
jle
sub
cmp
lods
loope
scas
and
in
xor
mov
sub
adc
inc
add
xadd
je
xor
xor
add
push
ss
push
ret
inc
fs
push
adc
push
push
aaa
or
sbb
sub
add
rol
push
lret
mov
lret
dec
dec
dec
dec
inc
push
sub
mov
cs
insb
adcb
jo
gs
push
and
cs
insb
push
call
push
sbb
xor
shll
outsb
gs
shll
gs
fadds
shll
insb
stos
lods
andl
cmpsb
imul
imul
insl
roll
aam
mov
mov
mov
jbe
xchg
gs
js
xor
mov
xchg
xchg
xchg
xchg
xchg
sbb
inc
push
cwtl
js
lcall
je
inc
imul
loop
cmp
lcall
in
dec
imul
jb
or
mov
mov
shrl
scas
mov
arpl
inc
shlb
mov
or
enter
mov
xchg
mov
mov
sbb
sub
add
jg
sub
adc
std
cld
scas
adc
xchg
ja
and
push
rcll
or
int
cmpsl
lahf
add
xchg
shrb
fidivl
cmc
int3
add
xor
mov
pop
repz
mov
call
mov
mov
add
push
pop
inc
xchg
das
pop
adc
inc
repnz
add
inc
mov
fs
cs
in
inc
jne
inc
jle
imul
or
shrl
movsb
or
repz
fimuls
cwtl
xchg
add
fisubrs
jne
loopne
test
push
cmp
fld
add
add
ljmp
push
jmp
and
xchg
mov
call
mov
outsl
jmp
cmc
incb
cmpsb
test
mov
add
lsl
push
pop
subl
adc
jmp
mov
sub
shr
pmuludq
adc
mov
inc
mov
or
in
fsubs
cld
push
push
fwait
inc
cmp
jb
inc
and
out
out
incl
pushf
add
mov
hlt
shll
push
lods
ja
xor
dec
rcrl
cs
daa
sbb
arpl
sbb
jbe
jb
pop
mov
sub
jne
in
xor
push
mov
call
inc
orl
mov
rcrb
jecxz
stos
ja
jne
dec
int3
cmp
popa
mov
data16
push
fidivrs
mov
test
xor
inc
xchg
lods
punpcklbw
aam
scas
leave
and
inc
popa
ljmp
inc
mov
sbb
jbe
adc
or
enterw
sub
aam
push
loope
and
scas
aad
adc
xor
xchg
pop
cld
or
call
jne
jne
jb
inc
lcall
sbb
add
loopne
or
and
sub
xor
sbb
vmwrite
mov
incl
popf
push
bound
loopne
xor
pushf
cli
aas
popa
cltd
arpl
xor
outsl
xchg
outsb
cmp
shll
je
clc
dec
shll
jae
xor
shll
inc
sbb
adc
je
stos
in
cmp
and
add
inc
push
fs
std
leave
mov
in
xor
jns
insb
xor
sbb
std
ret
and
jae
popa
arpl
xor
cmp
dec
gs
outsl
jae
push
mov
xor
mov
enter
outsb
ror
pop
lods
inc
sbb
jge
sbb
dec
or
andb
sub
lret
stc
add
sbb
sbb
fcomps
rolb
push
dec
stos
mov
test
add
fcmovne
jb
addr16
pushf
xor
int
xor
int3
pop
aas
pop
insb
or
subb
xor
push
je
xor
xorl
insb
outsl
push
shlb
into
orb
adc
shrl
popa
test
rcrb
shl
sbbl
in
je
cmpl
inc
jbe
pop
icebp
sbb
lret
lcall
sub
cmpsb
xor
divb
sub
xchg
scas
xor
lds
shrb
jb
pop
jno
jne
jmp
enter
call
nop
sub
cmp
xchg
and
cmc
rclb
pop
add
sahf
xchg
xchg
pop
adc
mov
sub
pop
repz
loopne
fxch
dec
enter
rclb
pushf
add
lods
sar
jb
int3
adc
loopne
sahf
loope
and
stos
push
cmp
mov
int
push
and
aaa
pop
out
adc
fs
movb
dec
inc
cmp
jl
pop
lods
or
test
leave
and
xor
mov
sub
inc
outsb
pop
jle
mov
mov
fdivrl
mov
fs
mov
dec
or
add
fidivs
xchg
add
adc
es
call
in
adc
stos
clc
add
or
or
shlb
jg
std
cwtl
inc
cwtl
and
adc
jae
popa
lret
mov
lret
arpl
outsb
cmp
bound
popa
imul
outsb
gs
lods
scas
scas
push
mov
cmpsb
jmp
mov
cmpsb
imul
pop
mov
rol
ret
ret
les
mov
loope
in
mov
aas
xchg
gs
xchg
popa
arpl
outsb
pop
xchg
gs
cmp
pop
dec
xchg
gs
jns
cmp
fwait
lahf
mov
ret
or
shl
data16
shlb
lods
les
ss
mov
fsubrs
jne
or
jmp
push
cmpl
jmp
push
orl
adc
xchg
stc
hlt
seto
out
pop
push
sbb
stos
dec
insb
push
popa
mov
faddl
add
negl
scas
dec
loope
push
xor
xchg
cld
clc
inc
hlt
rorb
pop
xor
js
sub
lds
dec
mov
and
or
pop
push
jge
mov
les
pop
push
jae
arpl
lret
leave
imul
shll
jo
outsl
mov
jne
fiaddl
sbb
sbb
mov
leave
push
jl
sbbl
fldcw
mov
scas
sbb
divb
cltd
popa
mov
add
divl
shll
je
jb
mov
dec
popa
arpl
stc
outsl
mov
adc
popa
jb
je
hlt
popa
mov
push
or
insb
mov
ljmp
les
sbb
pop
cmp
push
sbb
imul
push
leave
pop
jmp
ret
pop
mov
fcoml
and
mov
xor
push
shll
cwtl
sub
push
imul
insl
call
push
out
add
cmp
je
mov
add
mov
mov
push
and
call
mov
push
or
push
icebp
mov
or
scas
xorl
sbb
pusha
or
jnp
mov
adcl
or
cmp
int
mov
lea
add
fcoml
push
push
pop
faddp
add
cli
cmpsl
jge
or
mov
dec
xchg
add
jg
push
lret
push
mov
jns
bound
hlt
pop
test
mov
sldt
push
or
mov
lods
push
outsl
lcallw
ja
jb
pop
imul
mov
movsb
jae
pop
je
xchg
dec
xchg
pop
push
outsl
lods
ja
test
and
cmp
gs
dec
mov
push
pop
xchg
and
insl
pop
gs
xchg
gs
push
dec
inc
popa
dec
inc
dec
xchg
arpl
inc
inc
dec
loop
rclb
pop
popf
inc
xor
pop
inc
cmp
inc
xor
test
mov
int3
push
call
inc
cltd
and
out
push
lods
mov
mov
jecxz
dec
mov
les
jmp
add
pop
nop
xor
mov
je
adc
insb
shlb
in
adc
jmp
or
inc
shl
mov
or
sub
loopne
aas
xor
pop
mov
ja
rorl
push
sbb
jo
xchg
mov
orl
cltd
mov
and
add
sub
jnp
pop
adc
jb
adc
mov
cmpsl
mov
push
in
imul
xchg
je
cs
outsl
in
insl
mov
and
mov
out
sbb
inc
in
push
add
mov
scas
lock
repnz
loope,pn
xchg
mov
loope
scas
add
dec
and
fldl
jmp
mov
jg
jp
cmp
jle
lret
add
or
cmp
mov
in
xor
cmp
inc
cmp
jl
mov
push
cwtl
mov
pop
add
nop
sub
sub
mov
xchg
jp
sbb
or
add
sub
shrl
fsubrl
fscale
call
aaa
inc
push
les
mov
mov
add
cmp
inc
xlat
ja
pop
pop
shlb
cmpb
mov
add
push
rclb
pop
or
xchg
outsb
xor
push
sbb
mov
xor
sbb
sbb
scas
fucomi
sub
mov
cmpsl
pop
and
and
push
push
pushf
loopne
cmp
popa
lea
clc
pop
sbb
adc
rol
jae
and
adcb
sub
push
or
add
add
frndint
mov
and
sub
mov
mov
add
sbb
xor
pop
pusha
jb
dec
js
dec
shlb
ds
and
cld
pop
sub
repnz
jns
add
and
outsb
xor
inc
sbb
push
xchg
call
loop
call
adc
lds
mov
pushf
sub
sbb
lods
adc
sti
cmpb
sti
push
add
push
sub
imul
imul
pusha
nop
jo
push
fnstenv
push
outsb
fs
jb
sbb
int
push
cmp
xor
fs
insb
sub
or
imull
push
mov
lret
mov
outsb
fs
jne
xor
rol
sub
fnstenvs
in
popa
in
dec
shrl
out
gs
out
clc
stc
cli
sti
leave
add
push
std
mov
mov
dec
jno
adc
imul
push
outsb
mov
nop
cmpsb
fs
cmpsb
jp
cmpsl
imul
test
test
ret
fs
sub
lcall
mov
in
lcall
cmp
sahf
rcrb
inc
orb
fwait
mov
jmp
jns
fmull
ficoms
cmp
mov
or
cmpsl
sub
cmp
xchg
or
jb
push
xchg
push
leave
or
add
and
push
popl
and
mov
stos
les
int
out
and
xchg
and
pop
arpl
sbb
mov
int3
jmp
or
and
sub
push
xor
call
call
aas
int3
dec
notl
sub
and
adc
enter
fiaddl
push
clc
mov
leave
outsl
add
lods
xor
mov
add
and
fwait
or
add
lcall
inc
mov
pop
cmp
sub
adc
inc
sbb
xor
in
in
add
pushf
cmp
sbb
pop
popf
sub
jo
push
xor
jecxz
enter
call
jl
lcall
add
push
mov
or
fdivl
dec
shrd
fisttps
movsb
and
loopne
or
mov
imul
jne
adc
fistpl
xor
dec
adc
iret
jbe
pop
ret
or
add
pusha
enter
sbb
xchg
inc
xor
mov
adc
hlt
mov
dec
insl
jo
mov
xor
inc
cmp
sub
jne
inc
imul
add
pop
gs
add
es
fs
je
jne
sbbl
sub
lods
popf
int3
filds
mov
pusha
inc
cmc
and
cmp
mov
jp
add
adc
pop
sbb
jae
test
fld
inc
cmp
out
sbb
push
mov
sbb
fs
push
sub
cli
insb
in
fnstenv
mov
jmp
jno
inc
inc
sbb
nop
hlt
xor
push
addb
adc
ja
push
push
cmpsb
testl
mov
mov
jns
mov
call
sub
xchg
pop
add
les
jb
in
or
faddl
cmp
push
adc
xor
and
and
pop
xor
sbb
mov
hlt
xor
xor
and
cmp
outsl
push
cld
xor
and
enter
and
push
shlb
jl
scas
dec
push
xor
pop
subl
add
add
push
andl
pushf
sbb
pushf
cmp
and
or
movsl
pusha
dec
hlt
xchg
gs
or
outsw
outsb
add
gs
je
pop
imul
jo
fnstcw
les
dec
jp
lea
mov
adc
push
sub
mov
sti
pusha
or
stos
fisubrs
sti
jne
add
jl
mov
outsb
call
sbb
jl
push
daa
push
les
or
xchg
cs
adc
and
imul
gs
push
out
push
add
pop
push
jge
fcoms
or
test
hlt
jne
fisubl
xor
insb
mov
scas
push
mov
sahf
inc
cmc
push
mov
add
int
xor
insl
xchg
mov
imulb
pop
pop
xchg
add
sub
sub
and
ds
xor
add
adc
sbb
push
push
ss
sbb
sub
and
les
out
cwtl
pop
stos
add
js
and
fistpl
sub
sbb
rcll
inc
cmp
jl
mov
push
sbb
or
in
push
pop
shr
ret
inc
cmpsb
movsb
mov
and
xchg
fsubl
test
jae
int
xor
xor
and
and
aam
push
xor
fdivrl
mov
push
aad
test
inc
mov
cmp
sbb
mov
rclb
enter
aam
aad
stos
adcb
gs
jb
loop
adc
jb
in
mov
mov
push
mov
mov
stos
mov
jl
std
leave
std
int
mov
dec
sub
xchg
cltd
cld
dec
pop
daa
pushf
push
push
jp
add
xchg
insl
push
je
or
in
data16
adc
pop
push
mov
pop
lds
fiaddl
les
insb
js
test
rclb
xor
jno
sbb
fbstp
test
and
leave
adc
xchg
out
pop
add
xor
es
xor
jo
je
test
enter
jl
mov
xchg
aas
pop
aas
xor
mov
add
ss
sbb
xor
lock
cmp
push
mov
imul
xor
daa
push
mov
dec
out
sub
add
dec
mov
adc
cld
fwait
xchg
adc
mov
or
test
pop
daa
sub
and
adc
push
subl
inc
lret
xchg
push
add
jbe
das
dec
cltd
mov
pop
adc
test
imul
xchg
and
ss
adc
jo
push
cmp
push
addl
int
or
lret
clc
or
add
fs
pop
pop
sbb
dec
incb
sbb
dec
testb
add
push
and
mov
and
aad
sub
push
push
push
and
lea
or
je
subl
adc
add
adc
pop
bndstx
jne
pop
push
outsl
imul
adc
jo
or
mov
push
inc
push
dec
inc
imul
xor
jns
fisubl
pop
dec
outsl
adc
test
pop
sbb
test
add
scas
insl
jge
mov
addb
add
sbb
pushf
imul
add
inc
jecxz
mov
xor
push
mov
cli
adc
push
lods
and
jns
sahf
fisubl
xchg
sub
push
jmp
js
mov
jb
fs
lret
xor
sub
xchg
jne
loope
sbb
inc
pop
pop
and
pop
ret
xchg
add
or
fiadds
into
mov
pop
movsb
cmpsl
addr16
sbb
movsb
inc
push
daa
pop
or
add
iret
mov
sub
movl
test
sbb
mov
add
mov
sub
sub
fimuls
pop
pop
and
jae
sub
in
int
sbb
push
add
pop
add
lds
adc
pop
jnp
mov
xor
jb
cmp
adc
cmovne
insl
push
and
gs
test
or
add
stos
and
sub
movsb
int
mov
mov
mov
pop
jnp
scas
stos
or
lcall
data16
inc
xchg
popa
pushf
xchg
fistps
or
mov
inc
push
pop
jecxz
sbb
jns
pop
adc
cmc
push
jo
push
and
cmp
stos
dec
aaa
das
mov
ret
dec
fldl
aas
aas
xor
inc
pop
push
add
loopew
dec
testl
dec
sbb
out
in
xchg
xchg
bound
outsb
mov
in
jge
in
or
stos
push
lcall
bound
lret
out
fdivrs
jne
push
imul
mov
insl
push
inc
pop
or
mov
dec
fbld
add
sbb
clc
push
out
subb
mov
adc
jae
add
inc
int3
enter
adc
adc
orl
dec
cvttps2pi
dec
inc
dec
push
dec
xchg
push
xlat
leave
or
pop
je
dec
adc
lret
xlat
jne
mov
or
xor
movsb
push
sub
scas
fwait
cwtl
setl
mov
mov
add
push
in
jb
popa
adc
inc
add
add
pop
add
ljmp
pop
cmp
sbb
cmp
in
call
push
cmp
or
adc
sbb
and
sub
push
cmpsb
ds
jecxz
ljmp
cmc
lods
aas
in
imul
call
xor
xor
xor
xor
xor
loopne
in
xor
xor
xor
xor
incl
push
xor
xor
xor
xor
xor
xor
and
sub
push
mov
xor
mov
mov
mov
xor
xchg
xor
inc
xor
in
xor
push
ss
ss
ss
ss
xlat
ss
incl
add
cmpsb
aaa
mov
mov
cmp
cmp
sbb
dec
adc
pushl
cmp
dec
cmp
cmp
mov
jns
push
xor
or
adc
sub
cmp
inc
ss
filds
loopne
jbe
jge
mov
lds
repnz
decl
aaa
fnsave
loop
in
aaa
repnz
inc
cmp
push
jne
jp
scas
cmp
cmp
cmp
push
cmp
mov
cmp
cmp
loopne
jmp
inc
ds
arpl
xchg
ds
adc
sbb
cs
xor
aas
fnstcw
jnp
call
mov
push
xor
xor
xor
xor
xor
xor
xor
or
cmp
xor
je
ljmp
test
xor
xor
xor
xor
xor
sbb
inc
cmp
test
mov
inc
pop
xor
outsb
incl
shll
fnstenv
out
xor
xor
or
adc
sub
cmp
xor
pop
add
xor
xor
jge
test
xor
xor
incl
xor
mov
pop
ss
incl
ss
addb
aaa
and
sub
aaa
pusha
aaa
and
xorb
aaa
xchg
aaa
pushf
aaa
enter
divb
add
dec
cmp
cmp
jg
ret
cmp
cmp
cmp
cmp
cmp
js
cwtl
cmp
cmp
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
sbb
aas
sbb
aas
stos
aas
in
aas
repz
outsl
incl
push
xor
xor
lcall
decl
xor
xor
xor
xor
xor
xor
pushl
xor
xor
cmp
xorb
xor
pop
ss
jmp
ss
xorl
ss
ss
mov
mov
aaa
dec
in
addr16
insl
aaa
lcall
std
aaa
popf
aaa
mov
aaa
aaa
ljmp
push
cmp
cmp
jle
hlt
cmp
cmp
dec
cmp
cmp
pushf
cmp
jl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aad
lods
cmp
or
fldt
sub
pop
cmp
jle
pushl
ficoms
aas
mov
xchg
aas
cwtl
aas
mov
aas
mov
aas
clc
pushl
lret
aas
pop
subb
cmp
pop
xor
xor
mov
mov
mov
or
add
xor
pushl
jne
xorb
xor
xor
xor
xor
sbb
jg
lds
sub
xor
das
xor
xor
xor
xor
xor
pop
test
xor
dec
ss
adc
fdivrl
sub
push
add
dec
jns
outsl
aaa
jne
fbstp
sar
mov
xchg
aaa
cwtl
aaa
lahf
aaa
movsl
add
shlb
xlat
mov
ljmp
cmpb
cmp
mov
cmp
pop
sbb
ja
jge
mov
out
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
and
cmp
cmp
xor
cmp
cmp
jmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
imul
xor
dec
ds
ds
ds
ds
subb
or
js
shrl
sbb
xor
xchg
xor
xor
xor
ja
lcall
xor
xor
lods
add
jl
mov
xor
xor
xor
xor
xor
fists
test
nop
xor
xor
xor
xor
dec
xor
add
dec
ss
mov
lahf
ss
push
ss
clc
dec
fistps
hlt
dec
sbb
aaa
arpl
mov
xlat
mov
push
fidivs
or
adc
cmp
push
cs
ja
mov
mov
loopne
repnz
pop
cmp
ljmp
push
cmp
pusha
cmp
jb
inc
sbb
mov
pop
xor
sbb
cmp
mov
adc
mov
nop
ja
jge
mov
mov
je
dec
pop
shrb
fnstsw
mov
psllw
add
incl
dec
fs
add
idivb
adc
sub
popf
add
sbb
pop
lock
mov
add
mov
mov
sub
jb
add
adc
loop
jb
ret
inc
and
and
add
inc
orb
xchg
add
push
push
or
addl
imul
fs
mov
push
pop
mov
pop
movb
imul
push
fwait
cmpsb
pop
dec
xor
push
andb
lcall
lcall
jg
add
stos
mov
push
and
int
push
dec
dec
inc
and
lock
xor
mov
push
fisttpl
or
jne
adc
movsb
and
outsl
jp
mov
jne
jae
xor
pop
push
scas
mov
outsl
push
push
and
and
add
or
dec
dec
repnz
cmp
outsb
gs
sub
push
push
inc
and
pop
les
add
fwait
sub
leave
push
push
pop
mov
push
outsb
push
rep
pop
mov
mov
ret
mov
or
adc
loope
call
lds
mov
enter
xchg
iret
and
xor
or
adc
mov
stos
mov
repnz
jmp
inc
lcall
inc
std
xlat
cmp
sbb
add
xor
adc
rdpmc
fstpt
je
inc
cwtl
in
cmp
mov
pop
pop
push
mov
pop
in
jne
sbb
push
adcl
in
mov
mov
inc
lock
les
xchg
imul
jmp
cmpl
mov
pop
call
lock
mov
cld
sub
fadds
mov
mov
mov
mov
and
mov
mov
es
sbb
sbb
xor
call
sbbb
mov
int3
xchg
daa
mov
std
or
sub
fldenv
les
insb
addb
mov
repnz
imul
sbb
adc
pop
shrb
sub
mov
pop
hlt
dec
insl
insl
sub
movsb
mov
test
gs
dec
dec
inc
sbb
add
push
mov
in
rorb
mov
mov
dec
insl
insl
inc
je
and
inc
insb
cwtl
and
xor
popa
insl
gs
add
or
mov
push
std
sub
clc
shl
inc
dec
adc
cmp
jle
lea
imul
sub
sub
divb
dec
call
add
sbb
and
lret
pop
or
lea
jne
pop
mov
nop
or
sbb
jb
in
xor
outsl
js
insl
mov
loopne
and
aas
dec
sbb
lret
mov
mov
sbb
call
sbb
dec
inc
dec
stos
sbb
pusha
pop
pop
dec
cli
push
xor
push
pop
ds
add
push
rolb
pop
cmp
sbb
inc
inc
push
inc
inc
sbb
or
or
aad
out
mov
pop
add
orb
in
cmp
in
sub
dec
inc
scas
add
mov
mov
jae
inc
and
cmp
adc
inc
pop
and
inc
xor
sbb
push
push
stc
push
mov
and
sub
adc
cmp
leave
inc
enter
es
dec
add
inc
orl
ds
pusha
xchg
add
xchg
jl
add
and
push
adc
test
inc
jb
movsl
add
push
push
pop
add
and
shrb
or
mov
adc
mov
or
or
mov
mov
adc
mov
enter
mov
mov
movsl
pop
push
mov
jl
outsb
int
jae
lods
addr16
scas
std
scas
jb
cltd
jmp
outsl
jae
mov
push
mov
in
lea
mov
mov
mov
mov
mov
stos
pop
ficompl
sbb
loopne
cli
mov
repnz
shrb
mov
sahf
sub
stos
outsb
stos
lods
cld
jo
dec
lcall
arpl
dec
xchg
imul
mov
mov
adc
insb
sbb
daa
dec
adc
gs
js,pn
pop
sub
test
mov
testb
add
add
mov
and
outsb
lret
mov
push
or
ret
rolb
add
add
mov
mov
mov
fs
addr16
gs
push
subb
gs
xchg
gs
je
gs
lret
mov
or
popa
mov
lret
mov
outsb
arpl
and
daa
lret
jb
js
mov
jno
pop
xchg
gs
jg
outsb
cs
je
sub
sub
mov
aas
js
insb
outsl
jb
and
gs
enter
mov
xchg
mov
adc
and
in
push
mov
inc
ret
sub
cs
aad
ror
sbb
and
iret
and
je
or
clc
insb
pop
xor
cs
stc
imul
cmc
cld
add
mov
adc
mov
lds
divl
push
jns
mov
repz
sbb
pusha
xchg
shrb
jg
ss
test
shlb
push
aam
add
fcomp
lods
push
push
sub
in
adc
out
mov
imul
clc
dec
and
mov
mov
inc
shlb
pop
add
adc
nop
push
outsb
and
ret
js
pop
add
test
lods
test
mov
jg
xor
xor
cld
in
inc
xor
shrb
xor
pop
mov
arpl
inc
add
push
std
fstpt
jae
or
mov
or
jo
jg
xor
mov
pop
pop
add
rorb
adc
add
adc
sub
and
xor
mov
and
mov
jns
das
add
and
push
add
fcoml
push
and
add
sbb
xor
mov
das
sti
add
lcall
nop
jl
cmp
daa
sub
adc
pop
mov
cs
mov
shll
fdivrl
leave
jnp
inc
sub
rorl
adc
sub
cmc
adc
and
inc
notl
mov
adc
add
out
pop
sbb
dec
jno
inc
push
rcrb
sbb
adc
jno
adc
lds
mov
sub
pop
in
adc
adc
out
lock
sub
jae
push
mov
push
outsb
jb
and
icebp
sbb
mov
js
adc
leave
cmpsb
xor
stos
xor
xor
pushl
mov
imul
xor
incl
dec
insl
insl
dec
jae
int3
sbb
adc
xchg
inc
xor
mov
and
xchg
rclb
add
cmp
xor
in
shrl
pop
sbb
add
xor
xchg
int
fsubrs
sub
xchg
and
ret
push
imul
xor
leave
fdiv
xor
or
dec
shrl
cmpsb
sub
sarl
scas
pop
ss
out
clc
or
and
or
imul
xchg
leave
add
lret
adc
push
mov
scas
or
out
adc
lods
jno
adc
adc
jbe
das
dec
inc
mov
bound
aaa
int3
inc
cmp
add
or
mov
lea
jne
xor
adc
xchg
and
adc
jbe
sbb
loop
stc
adc
shll
adc
jno
loope
mov
adc
in
xchg
adcb
aam
dec
or
sub
imul
sub
jns
add
rorb
xchg
jns
cmpsl
popa
mov
or
cli
or
xor
xchg
cmp
stos
stc
mov
inc
imul
mov
jno
jns
add
popa
das
call
pop
inc
add
add
add
sub
pusha
int3
add
clc
push
pop
add
xor
or
dec
inc
cmovns
inc
or
add
imul
and
aas
stos
add
pop
or
add
movups
jb
addr16
pop
inc
jecxz
or
shlb
or
fistpl
jecxz
inc
and
xor
imul
scas
jae
and
popa
jns
lcall
imul
addr16
jo
fldl
inc
push
sti
pop
gs
sub
push
adc
push
lds
jb
sarb
xor
add
sbbb
insb
popf
xchg
pop
dec
sti
fcoml
jmp
addr16
jo
popf
addr16
mov
adc
xchg
mov
inc
xlat
pop
xor
jle
add
je
fwait
push
sub
or
fsubs
sub
dec
dec
imul
push
pop
test
adc
rcl
dec
fsubs
pcmpeqw
dec
pop
flds
jne
pop
inc
push
imul
and
arpl
dec
cmp
mov
icebp
push
lods
sbb
aaa
shlb
mov
and
xor
mov
xchg
xor
xor
xor
adc
mov
xor
xor
xor
fisttps
xor
les
cltd
and
les
les
pop
pop
imul
push
mov
lock
cmp
inc
dec
je
mov
mov
shll
out
pop
cmp
decl
lcall
cmp
les
into
cmp
cmp
cmp
cmp
cmp
mov
fs
std
cmp
cmp
icebp
cmp
jo
xchg
cld
push
lock
xor
add
or
cmp
push
lcall
jge
ds
add
test
pop
push
nop
dec
add
push
gs
jb
add
add
test
and
mov
psrad
sub
add
dec
sbb
pop
add
add
pusha
add
add
add
mov
inc
rolb
clc
and
add
add
ret
add
adcb
pop
add
jbe
adcb
push
test
loopne
mov
ret
xchg
ss
add
and
inc
mov
sub
sub
or
add
mov
lds
add
inc
sub
add
add
dec
stos
mov
popa
shl
add
add
psubusb
fmull
inc
mov
sbb
add
jg
lret
mov
movb
enter
smsw
push
movsb
sbb
into
inc
add
stc
and
adc
andb
push
shlb
add
fs
or
nop
push
xchg
jbe
push
push
adc
nop
sbb
xor
shlb
ret
inc
xchg
daa
orl
rolb
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
