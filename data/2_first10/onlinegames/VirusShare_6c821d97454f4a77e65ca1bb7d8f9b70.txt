fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pusha
pop
sti
bound
add
or
cmp
adc
sbb
aaa
and
in
sub
xchg
add
faddl
out
std
rclb
fcomi
idiv
xor
lea
push
mov
push
or
lds
gs
popa
enter
ss
insl
lret
lret
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
mov
push
aad
xlat
pop
fdivs
pop
xlat
insb
sub
fidivl
fisttpl
push
pop
loope
int
imul
jecxz
inc
in
and
sub
dec
xlat
add
inc
call
imul
in
pop
in
aaa
lock
repnz
shll
idiv
pushl
pop
cli
sti
js
je
mov
ja
push
call
sub
mov
pop
adc
fwait
mov
adc
and
mulb
xlat
adc
or
add
rorb
jge
cmp
jne
xor
fidivs
mov
jmp
lea
add
call
dec
test
je
sbb
in
mov
pop
jne
push
or
mov
sbb
iret
and
insb
fldt
incl
pop
inc
cmp
jne
cld
dec
test
mov
leave
ret
mov
in
sbb
aas
mov
push
xchg
adc
push
push
imul
das
pushf
inc
mov
push
push
lods
jo
xor
clc
add
outsl
outsl
and
push
push
sbb
js
push
insl
aas
fxch
lock
add
push
pop
insb
pop
popf
mov
mov
adc
push
stos
mov
decl
repz
push
adc
or
and
mov
and
cmp
adc
push
push
sub
push
js
fstpt
sbb
movsl
sbb
fwait
cmpsl
jns
in
sbb
pop
ret
dec
push
int3
sbb
pop
imul
xor
pop
imul
adc
fcmovnu
ds
or
push
adcl
mov
lea
mov
mov
adc
clc
push
movsb
cmp
push
push
sbb
clc
push
jno
dec
xor
cmp
jge
add
mov
mov
or
jge
mov
dec
test
je
adc
call
sbb
ljmp
xchg
add
push
fs
in
adc
aad
and
cs
push
add
leave
cmp
addr16
push
sbb
cmp
aas
xchg
enter
dec
xchg
sbb
sbb
fcom
fimuls
icebp
push
lds
popa
mov
mov
adc
call
pop
adc
test
psrld
mov
inc
inc
dec
dec
test
and
in
fdivl
push
pop
jmp
lds
sbb
and
rol
jecxz
mov
xor
mov
add
inc
sbb
adc
xor
sti
decl
test
mov
mov
add
and
aad
pop
clc
outsb
push
sbb
add
jl
outsb
divl
movsb
sub
daa
push
xchg
push
dec
sub
inc
in
hlt
push
call
lods
or
push
in
les
out
inc
jl
arpl
mov
push
in
inc
mov
mov
sub
and
or
out
fcoml
cwtl
pop
and
rcrl
inc
mov
mov
shlb
add
std
xor
arpl
mov
or
je
repz
lea
pop
push
loopne
add
lea
neg
mov
stos
mov
loopne
inc
iret
loopne
fldl
xor
leave
adc
imulb
sub
maxps
xor
sahf
mov
xchg
sti
shl
call
push
xor
sub
dec
lock
dec
aad
xlat
inc
xor
mov
jp
in
std
adc
sub
test
adc
pop
mov
push
and
pop
pop
pop
negb
cld
pop
jb
jnp
jmp
xor
pop
or
ljmp
push
push
std
imul
outsb
ljmp
pushl
sub
add
xor
pop
insb
int
sub
inc
add
shlb
or
jne
jns
iret
insb
inc
or
test
xchg
lcall
test
dec
fs
push
test
add
jmp
jae
add
xchg
dec
push
inc
sbb
pop
ret
fucomp
je
push
hlt
adc
pop
testl
ja
sti
leave
sbb
movsb
cmp
scas
aas
icebp
stos
push
std
enter
xchg
stos
cld
std
dec
push
mov
lods
mov
add
fcmovnu
sar
fxch
lods
jb
rcrb
jae
push
rcll
cmp
int
pop
int
into
iret
popf
sub
rolb
shrb
shrb
xor
cs
shrb
xlat
mov
test
mov
adc
call
mov
jns
imul
and
mov
out
stos
push
loop
cli
mov
or
leave
xchg
insb
data16
xchg
and
fcompl
xchg
mov
and
push
clc
fiaddl
fs
mov
clc
je
jae
cwtl
shlb
sti
bound
addr16
xor
jg
and
mov
lods
adc
sub
push
push
cmp
insb
test
subb
or
mov
and
lods
rorb
call
and
pop
into
ss
push
or
cmp
or
sti
mov
fstpl
pop
addr16
int3
into
xor
push
push
ds
xchg
sbb
jge
sub
outsl
sar
jnp
ret
or
cmp
jbe
xchg
pop
call
dec
adc
push
daa
cmp
inc
das
pop
sti
pop
add
dec
shll
jo
outsl
jb
mov
shlb
or
out
and
pop
jmp
sbb
pop
lock
cmp
nop
pop
cmp
testl
retw
insb
sbb
xchg
xor
xchg
fs
or
aaa
enter
add
enter
dec
sti
out
push
bswap
cmp
int3
ret
insb
scas
sti
int3
jmp
or
xchg
pushf
mov
mov
lea
adc
jmp
fistpl
imul
jae
sub
mov
or
loope
adc
sub
ret
dec
test
dec
leave
add
sbb
and
and
adc
test
xor
sub
mov
inc
dec
dec
inc
pop
mov
jg
push
push
dec
inc
dec
xchg
adc
push
sti
inc
push
dec
cs
outsl
and
sub
ds
sbb
nop
push
add
add
aas
mov
add
add
nop
add
lret
cmpsb
mov
mov
inc
lock
pop
mov
int
jmp
dec
push
push
addr16
insl
and
mov
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
roll
mov
cs
dec
inc
mov
int
pushl
rorl
and
dec
mov
jne
std
enter
push
push
mov
sub
inc
daa
sbb
mov
pop
push
push
dec
mov
inc
mov
dec
push
imul
notl
add
push
add
ljmp
adc
add
and
add
in
add
movsb
add
add
in
dec
daa
add
or
and
ror
push
xor
pop
push
dec
sub
dec
dec
pop
dec
lods
mov
ss
repnz
and
add
push
xor
imulb
in
add
bound
pop
sbb
int
cs
add
fs
je
cmp
subl
fwait
test
push
pop
shlb
lcall
arpl
xor
push
shl
movsb
imul
dec
shll
xor
lock
jb
insb
outsl
arpl
and
ja
push
lcall
xor
cmpsb
imul
pop
negl
test
je
pop
fnstenv
push
sbb
mov
dec
mov
sub
je
xor
roll
fnstenvs
mov
lcall
jo
nop
imul
into
insl
lcall
addl
cmpsb
imul
cmpsb
imul
in
mov
add
push
arpl
scas
incl
loopne
mov
imul
sahf
jmp
mov
push
xorb
mov
dec
xlat
ret
fimull
dec
shll
mov
add
dec
shll
into
jmp
testb
imul
mov
test
mov
fs
dec
hlt
je
incb
sar
dec
push
jmp
iret
faddl
addb
push
pop
enter
adc
mov
xchg
sete
imul
shrl
dec
sub
insb
adc
popa
fs
sub
dec
je
jo
dec
fidivs
outsw
inc
aaa
dec
jo
outsb
push
jb
push
out
adc
push
dec
dec
add
adc
and
fwait
dec
es
and
addb
and
sub
fisubrs
add
into
add
aaa
sbb
pusha
add
add
inc
mov
pop
add
adc
test
and
sub
and
fildll
gs
and
inc
popa
mov
xor
adc
add
mov
insb
fldcw
pop
aas
or
mov
mov
leave
add
pop
roll
incl
dec
cs
mulb
pop
add
mov
add
test
inc
xchg
inc
pop
sbb
lret
push
inc
xchg
movsl
adc
add
xor
nop
sub
pop
ss
pop
das
xor
std
pop
sti
or
xor
ud2
push
add
outsb
pop
push
call
add
adc
mov
jne
jb
gs
sbb
xlat
or
push
sub
add
mov
incl
push
inc
jb
push
and
ja
or
push
mov
mov
and
addr16
xor
push
cwtl
mov
and
jmp
jp
pop
cs
mov
imul
arpl
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
mov
jb
outsl
data16
imul
dec
shrb
cli
push
inc
jne
jb
je
sub
dec
repnz
outsl
jb
inc
popa
jb
push
aas
push
fs
jo
imul
xor
inc
outsl
insl
insl
sub
popa
roll
push
popa
arpl
outsb
stos
lret
je
jo
jb,pn
xchg
in
xchg
sbb
sbb
mov
sub
das
pop
lcall
hlt
dec
push
push
pop
jae
jno
outsl
mov
xor
pop
mov
je
xchg
inc
jg
pop
fwait
outsl
je
jae
jns
xchg
adc
fldt
imul
ljmp
push
mov
mov
sub
mov
mov
lea
into
shl
mov
pop
sub
mov
mov
or
ret
out
clc
mov
adc
or
leave
add
outsl
addb
mov
aaa
movl
les
xor
mov
mov
push
and
fbstp
jbe
mov
insb
add
push
mov
clc
mov
sbb
lock
lea
push
push
push
add
in
inc
push
cmp
xchg
jo
xchg
adc
test
sbb
rcrb
rclb
incl
ret
mov
mov
out
out
fcmovnu
mov
add
outsb
filds
out
lock
in
cmpsb
stc
dec
iret
imul
out
repz
push
fwait
bound
shrb
aas
adc
mov
add
xor
aas
jbe
daa
adc
mov
cmp
sub
frstor
repnz
or
fucom
adc
mov
sub
mov
fcmovnu
loope
addr16
adc
out
popf
and
outsb
mov
std
ret
mov
mov
xor
daa
daa
jo
mov
jnp
je
mov
loope
mov
xchg
jno
mov
add
in
sbb
cmpl
out
push
sbb
adc
cmp
xor
repz
fsubr
fsubs
pop
filds
int
adc
outsb
sbb
in
lahf
std
add
daa
fistl
out
out
xchg
js
mov
je
mov
sub
mov
arpl
fmulp
and
mov
jnp
pop
adc
ds
jnp
add
shlb
add
mov
dec
mov
movsl
add
mov
mov
cmp
cmc
pop
mov
mov
cmp
ja
add
dec
and
out
jg
stc
mov
dec
jge
mov
inc
inc
fimuls
inc
and
inc
insl
add
push
hlt
and
out
div
push
cld
aas
jb
xorl
lods
popf
popf
cmp
xchg
je
add
pop
mov
dec
push
push
mov
jg
jecxz
mov
scas
cli
pop
or
mov
mov
sbb
mov
out
inc
add
mov
out
inc
arpl
inc
cmp
dec
ja
jnp
sbb
inc
fisttpl
sbbb
pop
pop
out
aad
dec
xlat
sbb
fnstenv
pushf
daa
xor
mov
daa
cmp
mov
in
cmp
idivl
stos
adc
fists
inc
mov
and
mov
fistpl
pop
fildl
cmp
loope
xorl
and
xor
dec
xor
cmpsl
sub
jbe
adc
xchg
mov
and
add
stos
push
pop
mov
add
fisttpl
test
jbe
repnz
sub
or
hlt
and
std
jmp
out
scas
push
lods
mov
addr16
dec
push
add
in
xchg
dec
testb
jo
adcl
imul
iretw
daa
es
notb
aas
loope
sbb
std
ljmp
jmp
lahf
lahf
lret
popw
sub
and
out
fsubs
and
je
xchg
pop
daa
add
mov
cmpsl
std
dec
cmp
jae
mov
daa
sub
imul
loope
dec
mov
cmp
jle
add
testl
sub
inc
rolb
pop
cmp
fwait
shlb
jp,pn
sbb
out
fistpl
adc
adc
add
cld
jnp
loopne
cmp
repz
popf
inc
aas
xor
add
jge
es
into
pop
add
xchg
jne
sbb
fstpt
and
or
jmp
mov
test
jg
aad
aam
mov
ret
sar
imul
cmp
and
sub
jnp
pushl
ror
and
mov
stos
adc
xor
xor
out
fwait
sbb
repnz
xor
ret
jmp
and
xor
mov
mov
mov
ret
fadd
jmp
test
inc
add
or
add
push
or
xchg
mov
scas
inc
das
add
xchg
jbe,pn
and
fs
arpl
out
push
and
test
aas
push
mov
and
aaa
xor
sub
lock
sbb
pop
inc
dec
push
pop
jns
fisttpl
pop
dec
dec
pop
add
pop
arpl
arpl
jae
or
in
xchg
xchg
or
xchg
ljmp
pop
stos
pop
add
cli
sub
mov
add
sbb
push
inc
inc
sbb
push
aam
mov
mov
in
push
mov
andl
or
inc
jle
inc
cld
lea
adc
push
mov
rcll
sub
notl
int3
adc
call
decl
cmp
add
mov
scas
sub
mov
in
testb
push
or
mov
inc
add
add
ljmp
inc
call
icebp
pop
xlat
imul
mov
orl
in
or
rclb
or
insl
push
outsb
ja
push
inc
push
or
jne
or
cmp
cld
adc
push
fwait
dec
add
mov
bound
xor
outsl
mov
sbb
push
movzbl
rcll
push
pop
adc
mov
andb
fstpt
or
push
aas
pushf
inc
pop
andb
sti
adc
mov
inc
and
decb
mov
inc
xor
adc
in
lahf
or
and
les
add
enter
or
adc
and
dec
cmp
xchg
mov
xor
adc
and
addl
and
and
aas
or
mov
or
add
and
mov
xor
adc
add
gs
push
mov
negb
jo
sbb
ret
cmpw
jne
jo
add
dec
cmp
lret
sbb
inc
push
psubw
and
adc
pushf
into
jno
and
push
push
pusha
adc
jo
loopne
push
mov
lods
cmp
push
and
sub
or
cmovge
cmpsb
jecxz
add
loope
adc
sbb
loopne
push
inc
pop
cmp
jl
call
imul
push
pop
jne
or
mov
call
fstps
test
push
push
jg
andl
and
push
insl
jb
lea
push
push
ret
fildl
push
and
pop
mov
imul
xor
jb
sbb
scas
sub
adc
xchg
sub
pop
xchg
and
mov
lock
add
mov
out
mov
sbb
or
fistl
pop
mov
je
push
insl
rep
subb
mov
mov
enter
mov
movsb
add
jo
pop
dec
pop
mov
mov
in
pop
repz
add
cmp
sarl
mov
das
std
mov
add
mulb
cmp
or
sbb
imul
lock
add
pop
pop
jg
aas
cmp
ja
inc
and
out
lea
pop
inc
cmp
jbe
add
pushf
or
push
jno
in
ret
jb
xor
xor
cmp
jb
pop
pop
pop
mov
sbb
sbbb
callw
sbb
jne
pop
js
sti
mov
mov
add
aaa
jo
inc
clc
call
fsubrl
sbb
jbe
mov
in
cwtl
mov
call
jle
lock
jbe
movsb
or
jmp
pop
call
movsl
mov
and
lock
mov
pop
movl
cmp
pop
jb
in
in
or
fstpt
enter
cld
add
mov
mov
inc
fists
add
dec
mov
andw
movsb
mov
cld
subl
dec
cld
pop
jb
jmp
pop
es
pushf
xchg
ja
inc
ret
jb
mov
mov
inc
icebp
std
push
sub
divb
negl
daa
jne
mov
loope
std
xchg
out
mov
xchg
aaa
lea
cmp
jne
and
sti
pop
mov
stc
mov
cmp
pushf
jns
loopne
push
inc
push
pop
cld
call
mov
out
call
xor
mov
repz
add
push
jo
loope
call
fsubr
gs
or
movl
or
jmp
out
or
jo
and
shrl
jl
xor
adc
in
push
lea
push
jo
enter
xchg
jl
decb
js
and
je
push
and
xor
adc
aas
nop
lea
stc
adc
lea
and
sti
pop
repnz
shll
nop
cmp
mov
dec
lods
mov
sbb
mov
inc
mov
mov
pop
jmp
into
cmp
cmp
rcll
roll
xchg
or
cmp
push
cld
add
jle
xor
jg
cld
fstpt
pop
adc
push
mov
cmp
ja
loopne
push
dec
call
adc
je
test
push
fdivs
and
jns
inc
hlt
mov
push
fstpt
sub
daa
in
add
inc
cld
jne
stos
jecxz
push
insl
push
inc
clc
xchg
cmp
adc
loopne
add
mov
test
cmp
sahf
inc
cmp
mov
mov
imul
jmp
jb
ds
arpl
adc
adc
sbb
add
add
pushf
shlb
cmc
jbe
ret
add
into
bound
outsb
mov
fnsave
sbbb
pop
and
outsl
inc
cmp
aaa
push
jmp
adc
movb
jmp
add
sbb
call
pop
imul
xchg
stc
mov
icebp
fbstp
cs
pop
inc
idiv
adc
jg
lods
jle
adc
inc
inc
jmp
andb
add
add
shl
stos
mov
loopne
sub
nop
dec
repnz
and
mov
push
orl
adc
and
push
call
adc
adc
scas
mov
push
xor
lock
adc
xor
cmp
inc
mov
scas
jno
gs
ret
xlat
cli
push
clc
fs
ja
xor
mov
cmpb
xchg
test
jl
inc
movsb
jb
in
incl
pop
fdivp
mov
imul
add
andl
mov
inc
sub
and
or
out
mov
and
add
push
mov
push
mov
dec
adc
inc
jge
lods
cs
and
rcrl
sbb
aas
cmp
jae
incl
lret
shr
add
stos
lods
addb
push
mov
push
sbb
mov
cld
outsl
mov
dec
push
pop
jne
adc
sbb
dec
repz
rorb
arpl
mov
loop
or
adc
or
stos
icebp
add
jne
xor
test
pop
decl
outsb
add
pushf
stos
pop
cs
inc
aad
pop
push
fwait
bound
lahf
pop
jbe
or
cmp
mov
fwait
xchg
decb
jl
and
or
add
outsl
aad
clc
lea
into
shr
mov
inc
or
add
push
lock
std
repnz
not
and
testl
mov
add
test
push
js
sti
out
mov
push
aam
or
fisubs
fimull
add
pop
or
lea
shr
shl
push
mov
fistps
inc
sub
mov
and
not
cmp
outsl
scas
mov
repz
mov
neg
adcb
jmp
or
add
dec
daa
pop
jg
mov
pushf
mov
sbb
mov
push
mov
das
pop
lods
loop
mov
push
push
cs
or
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
cmp
lret
fcmovnbe
sbbb
xlat
loopne
fiaddl
mov
mov
adc
call
scas
roll
mov
in
sub
sbbb
fisubrl
xor
add
add
xor
and
cli
sbb
and
les
repz
fcomp
lret
lret
cwtl
subb
addl
repz
not
test
sbb
das
pusha
adc
jae
fdivr
pop
scas
testl
cmpsb
insl
js
negb
sub
pop
ds
inc
xor
add
sub
mov
sub
fcom
add
repnz
fdivrs
pop
aaa
or
rcrl
fbld
int
and
nop
imul
xor
jl
cmp
or
or
mov
fidivrs
jno
std
stos
lods
es
insl
pop
popa
sti
add
and
fidivrs
mov
aaa
das
push
mov
cmpsb
or
pop
mov
xor
or
or
cmp
sti
jnp
or
popa
adc
add
or
mov
sub
mov
and
lods
jge
jmp
mov
bound
push
test
xchg
shlb
clc
jg
pop
sub
inc
das
dec
cmp
inc
rclb
push
mov
or
fadds
hlt
push
and
jl
push
pop
clc
jb
repz
pop
pop
es
adc
inc
mov
repnz
shll
and
andl
add
out
call
insl
fwait
icebp
imull
mov
lcall
call
xlat
lods
mov
inc
jnp
fdivs
push
adc
test
rorb
arpl
pop
and
sahf
pop
mov
clc
cmp
mov
clc
in
int3
cli
fnstcw
out
adc
daa
inc
data16
stos
mov
mov
fidivl
and
sbb
loopne
jge
sub
inc
enter
aaa
mov
ret
mov
push
fbstp
pop
fimuls
xchg
int3
repnz
test
imul
adc
inc
and
loop
shr
or
xlat
lea
mov
add
sbb
lock
aam
mov
popf
cld
repz
and
sub
aad
flds
outsl
addr16
inc
xchg
iret
cmp
lcall
dec
sub
sub
or
xor
test
lock
cmp
jmp
add
test
out
fdivl
cli
mov
xor
push
cs
js
lret
rep
fadd
and
insl
adc
inc
repz
sti
xor
mov
repnz
or
in
xchg
push
mov
call
in
inc
dec
xchg
maskmovq
testl
add
push
popf
xchg
mov
fimuls
cltd
jb
lods
fmul
loop
fmuls
mov
dec
mov
cli
clc
in
jae
xor
push
jo
mov
sbb
or
mov
imul
jo
jle
sub
jae
fwait
test
sbb
xor
imul
hlt
into
mov
fimuls
xor
xor
test
xchg
or
cmpsb
pop
jae
adc
fidivs
test
orl
out
cmp
imul
pop
or
push
aas
sbb
pop
mov
rcl
fstps
test
push
in
mov
xor
ss
in
jb
mov
clc
jl
pop
je
dec
testl
gs
lods
les
cli
cmp
cli
mov
mov
add
xor
sub
cmc
ret
rcrb
sbb
push
or
in
repz
addb
push
xchg
ljmp
inc
sub
lret
push
or
pop
sahf
outsl
dec
mov
stos
adc
fwait
xchg
lock
hlt
cmp
xchg
cld
cltd
or
mov
scas
xlat
mov
ret
pop
jo
lret
pop
gs
sbb
rcrl
or
lock
int3
or
push
or
sbb
repz
dec
jge,pt
out
call
unpckhps
fwait
xchg
sbb
pop
test
or
jg
jns
pop
push
call
outsl
jecxz
jp
sbb
das
dec
sbb
int
jb
pop
jb
fistpl
loopne
sub
jecxz
jp
pusha
call
fsubs
enter
add
mov
scas
aaa
pop
mov
lds
jp
sbb
ja
mov
xor
pop
imul
out
loopne
mov
aaa
test
xor
aam
rcl
sub
fldenv
pslld
ret
repz
rol
test
mov
mov
push
dec
mov
pop
fcmovbe
pop
mov
out
xlat
pop
add
pop
movsb
mov
adc
or
push
sbbl
inc
adc
xchg
cmp
aad
xor
mov
cmpb
sarl
mov
enter
adc
ljmp
cltd
jmp
or
in
and
adc
xlat
pop
fisubrl
sub
inc
pop
inc
or
mov
test
nop
iret
pop
pop
mov
mov
lret
mov
ljmp
add
sbb
call
push
dec
jne
xchg
sbb
sbb
pop
push
lock
rorl
mov
add
push
aam
out
or
cld
call
sub
mov
aaa
push
cmp
je
inc
inc
jmp
testb
out
or
testb
mov
adc
xor
mov
adc
outsb
in
enter
add
pop
jnp
int3
push
das
loopne
pop
int3
rolb
aam
call
jae
lcall
mov
mov
xor
out
add
call
gs
das
lock
out
jge
jo
hlt
gs
divl
lock
pushf
mov
mov
mov
mov
dec
js
rep
call
push
lds
sbb
adc
fwait
cs
inc
mov
lods
mov
pusha
add
outsb
fldenv
inc
jno
mov
fmull
stc
fadd
cltd
inc
push
pop
pusha
push
pop
push
lds
inc
dec
je
stos
inc
mov
push
fistl
push
ds
push
mov
add
dec
out
push
out
push
shl
flds
inc
pop
mov
mov
cmp
or
dec
xor
push
cltd
lods
mov
jbe
cld
push
xor
repz
xor
push
sbbb
hlt
cmp
inc
jae
fcomi
add
and
or
push
sub
inc
andl
inc
adc
sbb
mov
cmp
push
lret
add
mov
test
incb
lock
xchg
je
insb
divb
icebp
sub
pop
mov
sub
push
shll
cmp
lods
adc
adc
out
insl
xchg
pop
push
mov
push
lds
xor
in
test
andl
divb
adc
push
push
sti
adc
adc
jmp
fldl2t
subb
cmp
je
dec
dec
cmpw
sar
out
fdivl
pop
push
arpl
inc
add
cmp
add
mov
push
add
lcall
int
popa
gs
mov
push
aad
fistpl
data16
inc
lret
fdivp
push
loop
cwtl
cmp
inc
addl
sbbb
push
or
mov
cmp
push
je
xchg
cmp
testb
pushl
dec
mov
cmp
je
cmp
jne
push
mov
in
je
jo
push
outsl
daa
fcomps
cmc
scas
add
addr16
js
mov
stos
loopne
xchg
push
adc
les
or
aam
cmp
loopne,pt
or
cmp
movq
lock
cmp
movsl
mov
inc
pusha
cmp
subb
inc
mov
xor
imul
sbb
fs
test
stos
in
mov
arpl
mov
mov
scas
mov
add
push
push
gs
sbb
inc
ss
xchg
jo
mov
dec
push
and
sub
scas
or
jnp
lea
sbb
mov
shll
cmpsl
fs
mov
mov
test
sub
outsb
es
sub
cmp
push
xor
adc
cmpsl
int
inc
mov
add
jg
std
and
divb
loop
lods
fadd
insb
and
inc
add
cmp
psadbw
mov
or
shrl
iret
pushf
inc
push
sar
je
cmp
std
out
mov
cmpl
cmpl
scas
or
test
sti
mov
jo
push
push
pop
dec
testb
mov
and
xorb
mov
add
mov
je
cmp
sbb
pop
call
call
sub
pop
mov
cmpb
dec
inc
cmp
or
mov
adc
cs
mov
idiv
xchg
adc
jmp
dec
mov
bound
mov
insl
mov
add
push
shlb
jmp
mov
mov
fcoms
mov
jl
pusha
sti
lret
jo
push
int
fcmovnb
mov
nop
push
insl
mov
mov
xchg
lret
in
mov
mov
mov
mov
mov
mov
mov
mov
xchg
pop
outsb
mov
add
fnstenv
gs
insb
gs
and
mov
dec
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
sbb
xor
ret
rol
shrl
xor
lds
mov
leave
lret
insl
cmp
hlt
xchg
push
xchg
ss
xlat
xor
cwtl
cltd
lcall
fwait
pushf
adc
mov
insl
lahf
sub
mov
mov
movsb
inc
add
test
cmpsb
fnstenv
hlt
cmc
div
lret
imul
stc
hlt
cli
jns
ljmp
cmp
je
roll
sbb
int3
pop
xor
pop
lret
aaa
fcoms
lret
adc
into
dec
insb
loopne
inc
in
pop
jl
fsub
inc
int3
jmp
fs
jb
clc
ds
mov
rcll
xchg
pop
dec
rolb
lret
xchg
jae
hlt
push
mov
dec
test
cmc
adc
test
test
pop
xor
out
xchg
ljmp
sub
sar
rcll
jbe
inc
jge
sti
dec
sub
cmp
adc
push
lods
je
or
into
imul
jbe
shl
pushf
pop
cli
inc
ret
mov
test
and
sub
mov
fldt
xor
popa
sub
movsl
jmp
punpcklwd
nop
sbb
mov
sub
push
mov
nop
bnd
mov
cli
call
inc
pop
and
in
sar
mov
cld
mov
or
shl
fsubrs
clc
std
andb
and
and
mov
stos
pop
xchg
sub
push
xchg
mov
cmp
outsb
xor
mov
add
sub
xor
imul
das
lock
sub
dec
sbb
push
cld
mov
lea
mov
cmp
ds
mov
lock
orl
call
ljmp
out
adc
and
adc
cld
jnp
fcompl
sub
sbb
sub
add
inc
adc
call
jl
inc
xor
pop
js
inc
adc
test
pop
in
mov
adc
and
add
lods
cmpl
and
pop
test
cmp
jl
jns
jbe
dec
sub
leave
ret
fnsave
outsb
jne
push
jnp
xor
add
push
push
test
cmp
fisubs
or
adc
jle
cmpl
ljmp
int
insl
add
push
jl
in
les
mov
mov
or
lock
rorl
and
cmp
cmp
push
sar
mov
jae
mov
xor
mov
mov
mov
std
cmp
jae
push
call
mov
insl
jnp
or
add
incl
movb
stos
add
outsb
adc
or
mov
sub
adc
xchg
sbb
and
inc
mov
xlat
or
call
jmp
mov
scas
xor
add
loope
subb
cmp
or
scas
xor
cs
or
call
ss
or
add
adc
insb
mov
aad
jo
ret
cmp
pushf
inc
adc
out
test
mov
ja
outsl
jp
cmpsl
dec
shll
dec
push
fwait
in
xor
outsb
das
fsubs
ja
cmpsb
pop
outsb
sub
inc
fidivs
lcall
xor
xor
sbb
pop
mov
cmpsb
cld
std
insl
icebp
lcall
mov
dec
shll
mov
scas
pop
mov
mov
mov
fs
pop
xor
enter
in
bswap
pop
pop
lret
popa
sub
mov
js
push
je
xor
pop
inc
jb
add
and
repz
jo
mov
or
adc
add
pop
pop
mov
cld
mov
inc
xlat
pop
push
test
iret
adc
fistpl
hlt
dec
mov
and
add
in
insb
shlb
xor
int
in
incb
push
pusha
jmp
loop
andb
mov
xor
into
and
loope
imul
je
imul
outsl
ja
scas
enter
call
adc
sbb
xor
cmpsl
jecxz
pushf
pop
push
int3
shll
int
add
sub
dec
and
push
fs
xor
dec
roll
dec
push
or
into
cmp
add
test
daa
xor
add
shll
out
outsl
or
loopne
in
or
ret
xor
xor
fwait
int3
call
clc
lock
jge
lds
and
jg
xlat
or
fiadds
rcrl
xchg
repz
push
stc
inc
in
test
lret
rorb
sahf
fistl
das
sub
out
push
pop
push
adc
loope
shl
in
push
or
jne
xor
popf
test
and
fidivs
or
test
aaa
in
out
mov
push
mov
sbb
mov
and
sahf
icebp
lock
jge
push
jns
loop
movsl
movsb
cmp
hlt
pushf
add
and
stos
adc
and
mov
adc
add
xor
movsl
mov
je
push
shlb
push
loop
je
and
add
fdivs
mov
mov
pop
push
pop
clc
push
sbb
div
hlt
ljmp
andb
push
les
adc
ret
ret
out
push
subb
jmp
mov
out
push
dec
jo
fwait
insl
mov
or
insb
lock
popa
pop
repnz
cs
fs
insb
repz
gs
test
lcall
jbe
jb
lcall
outsl
lcall
dec
popf
mov
icebp
jne
add
or
pop
cwtl
xchg
xchg
outsl
cmp
enter
dec
mov
jnp
push
in
pop
xor
push
dec
sbb
inc
xchg
push
xchg
or
push
xor
mov
adc
roll
test
xchg
xlat
mov
inc
cmp
add
push
dec
aas
pop
mov
mov
sbb
insb
pushf
ss
or
inc
in
sub
in
mov
arpl
sbb
adc
outsb
cmp
loope
das
loop
clc
popf
mov
cwtl
sub
hlt
imul
jle
cmp
push
push
push
aaa
stc
cmpb
cmp
mov
mov
fsts
or
int
adc
fstps
cmpsl
xchg
xchg
dec
mov
push
mov
push
and
inc
jno
orb
sub
test
mov
ret
jmp
inc
push
addb
sahf
loopne
je
adc
mov
or
es
jne
jp
int
sub
mov
test
sub
sbb
and
push
shl
push
negb
int
cld
adc
xchg
push
in
or
aaa
test
adc
aas
pop
mov
xor
inc
nop
mov
mov
sbb
sbb
xor
inc
add
ret
cmp
lahf
mov
push
cmpsl
push
popf
inc
dec
push
rcrl
or
call
nop
fnclex
es
sub
fsubl
adc
sbb
es
mov
jp
popa
sub
add
in
push
push
test
cltd
aas
enter
lret
je
mull
xor
jne
aas
mov
fidivrs
jb
fs
sub
jge
and
adc
jmp
push
or
shll
push
cmp
xor
adc
or
add
jle
jbe
sbb
dec
and
pop
adc
dec
in
into
sub
data16
pop
add
rcrb
stc
mov
ljmp
mov
xchg
call
and
dec
call
dec
insl
data16
cmc
inc
test
sbb
add
lea
aas
mov
adc
mov
mov
mov
ret
sbb
andb
outsb
push
mov
cmp
add
add
fidivrl
dec
push
es
or
adc
in
pop
test
fcomps
loop
push
mov
sub
dec
mov
cmpsb
add
popf
add
daa
jmp
cmc
xchg
lret
stos
sub
nop
xchg
cmp
mov
adc
xor
mov
cltd
lcall
dec
rcrl
mov
cmpsb
mov
cmpsb
cmpsl
fdivs
stos
outsb
pushf
xchg
gs
xchg
cmp
bound
and
cmpsb
imul
cmpsb
imul
cmp
pop
outsb
cmp
xchg
and
outsb
cmpsb
xchg
gs
xor
cmpsb
imul
cmpsb
imul
lcall
scas
pop
imul
lret
lods
ljmp
ret
clc
clc
cwtl
cmc
push
sub
and
test
lds
pusha
ret
pushf
ss
ja
pop
jb
jp
sub
mov
add
mov
ret
or
call
push
xor
outsl
cmp
sti
jecxz
jge
pushf
sub
or
add
js
xor
les
sub
outsl
aaa
testb
push
mov
pop
aaa
cli
jg
enter
enter
lea
ror
jl
fcmovu
ljmp
rcrl
data16
xchg
jp
inc
cltd
movb
sbb
xchg
mov
mov
fs
jmp
imul
cmp
not
test
and
cmp
sub
dec
push
mov
cmpl
xor
rolb
std
out
mulb
cmc
stos
in
test
jmp
hlt
and
push
je
mov
pushl
cli
jbe
lods
rorb
cmp
aaa
push
decb
cmp
clc
push
ss
adc
fdivr
add
clc
mov
pop
xor
repnz
mov
sbb
cwtl
sbb
clc
xor
in
mov
rolb
nop
in
xchg
sti
inc
mov
add
movsb
in
add
dec
sbb
stos
nop
pop
sbb
mov
push
push
daa
jmp
hlt
dec
xor
pop
pop
ds
int3
xor
ja
lods
or
js
imul
sub
mov
lret
mov
inc
cwtl
inc
pop
mov
fnstenv
les
mov
sub
or
pop
daa
push
sbb
sti
push
repnz
orb
or
push
inc
sub
sub
xor
adc
adc
inc
aad
js
push
push
jmp
pushl
jge
mov
jne
adc
sti
les
push
lea
sahf
adc
adc
mov
ret
ds
or
lea
sub
fadds
mov
into
shrb
insl
daa
out
or
add
lock
fildl
xchg
or
mov
ljmp
and
xchg
hlt
shl
inc
sub
sti
and
mov
add
sbb
xchg
inc
clc
je
pushf
xor
int3
or
xchg
sub
or
insl
lea
in
mov
pop
insb
adc
pop
es
jg
xor
lds
push
dec
ret
jmp
inc
add
inc
mov
test
jno
mov
test
jo
iret
push
and
cmp
sub
call
push
in
aam
sbb
pushf
or
xchg
scas
fimuls
sqrtps
movsb
or
fs
jno
adc
mov
jns
sar
std
stc
push
test
xchg
xchg
mov
loopne
adc
leave
and
mov
cs
cmpsl
shll
daa
mov
sarb
orb
mov
int
cmp
sahf
dec
add
call
das
ficoml
rcrb
pop
ret
mov
mov
cwtl
push
and
adc
pusha
xchg
jb
add
pop
jne,pt
cmp
and
push
jae
push
sti
sub
xor
movl
and
push
fisttps
test
mov
push
in
xchg
sbb
xor
jl
add
push
cli
sbb
xor
pop
mov
inc
mov
divb
lahf
addb
ljmp
mov
lret
sub
mov
xlat
hlt
mov
mov
push
xchg
cmpsb
adc
icebp
mov
mov
sbb
push
sub
and
sbb
pop
pop
cmp
sub
fsubs
push
push
fdivrs
fimuls
push
push
push
imul
test
jae
add
push
insb
fisttps
mov
outsb
sub
or
lods
adc
sbb
mov
mov
add
fimuls
mov
mov
aad
mov
icebp
jl
arpl
mov
popf
lea
adc
hlt
xor
push
inc
sub
movsl
les
sbb
xor
pop
sub
xlat
sub
or
add
rcl
fcoms
sub
fsub
imul
loopne
add
inc
sub
mov
mov
fincstp
sbb
inc
sbb
xlat
adc
mov
sti
xchg
or
shl
fwait
orb
inc
or
stos
cmc
sbb
insl
out
xor
sahf
pcmpeqd
rol
sbbl
xor
aaa
pop
inc
aaa
cmp
nop
pop
adc
and
jnp
pusha
add
cltd
cmpsb
cwtl
clc
mov
mov
cmp
jo
scas
and
in
xor
add
loop
faddl
incl
je
xor
inc
in
dec
lock
jle
adc
jmp
sbb
push
ret
adc
data16
and
or
fs
pop
js
hlt
push
xor
push
pop
xchg
orl
gs
xchg
gs
inc
push
cs
inc
push
xchg
insb
insb
mov
add
jne
mov
lret
jae
fs
insb
imul
dec
dec
cmpsb
imul
imul
cmpsb
gs
imul
out
dec
je
dec
shll
outsb
push
or
xor
jno
ror
mov
mov
inc
inc
aam
mov
mov
xor
insl
fs
push
gs
sub
xchg
xchg
inc
push
cwtl
js
imul
imul
cmp
inc
loop
in
out
cmpsb
pop
call
mov
mov
pop
mov
mov
lgs
inc
jbe
mov
mov
mov
test
arpl
insb
mov
or
lods
fdivrs
adc
add
add
iret
leave
jg
cld
adc
mov
xor
push
out
or
mov
cmp
insb
loopne
or
cmp
rclb
outsb
pop
jmp
push
insb
les
dec
insb
pop
repz
lock
bound
aas
test
pop
mov
xor
xchg
das
scas
or
test
je
push
adc
or
cmp
loop
je
sbb
mov
imul
sub
cmp
rorl
movsb
or
repz
mov
or
pop
inc
loopne
sbb
jne
mov
or
push
mov
clc
sub
add
add
rcl
push
push
data16
sbb
loop
pop
and
call
ret
imulb
or
inc
push
dec
pushf
leave
jle
clc
and
add
std
inc
and
subl
scas
xlat
or
rcrl
or
pop
push
ret
call
adc
xor
jbe
mov
cld
push
divl
mov
adc
inc
cmp
jb
inc
incl
push
add
test
cld
hlt
movsb
lock
mov
jecxz
lret
lods
int
in
in
cs
fs
insb
jmp
jbe
daa
dec
push
pop
jb
jbe
xchg
sub
scas
insw
jne
push
jnp
ret
call
lods
sbb
mov
aaa
js
je
jecxz
add
mov
call
insl
arpl
test
mov
push
sbb
sub
aam
xorl
hlt
dec
or
inc
out
mov
popa
jmp
std
sbbb
add
sub
push
jg
sub
cmp
cmc
testl
mov
mov
xchg
jne
jb
and
dec
mov
pop
aaa
add
inc
sub
loopne
push
adc
push
xor
call
cltd
add
xlat
test
sbb
push
loopne
xor
lret
in
and
jmp
arpl
xor
shll
outsb
cmp
addr16
jo
shll
cmp
push
jae
lcall
aas
push
in
test
mov
xorb
sbb
jg
adc
add
pusha
sub
in
or
fcomps
rolb
test
add
aad
lcall
dec
test
movl
xor
mov
xor
int3
pop
push
shll
inc
lods
pop
test
push
push
push
lcall
je
lcall
subb
jne
and
xchg
bound
rcrb
enter
ror
mov
pop
je
cmpl
xchg
xorl
dec
cmp
ds
ja
xchg
xchg
lret
mov
sub
cwtl
xor
stos
stos
imul
mov
loopne
push
mov
xchg
dec
inc
mov
orl
pop
xchg
and
inc
push
cltd
sub
add
add
cmp
push
jl
mov
lods
mov
jg
loope
push
loopne
pop
mov
add
rcr
xor
sahf
outsb
test
mov
cmp
push
fwait
xchg
push
and
outsb
mov
sub
push
jl
inc
xchg
ljmp
faddl
ret
pusha
loope
cmp
lods
or
test
inc
push
fwait
repnz
sbb
fdivl
or
mov
fcompl
sub
cmc
cld
mov
fdivrl
and
lods
bound
xlat
or
ja
add
jb
adc
es
and
inc
pop
adc
pop
ret
jg
pop
or
and
xchg
jg
std
push
sub
cwtl
inc
cwtl
and
xchg
gs
aas
popa
arpl
mov
outsl
outsb
bound
mov
in
pop
movsl
cmpsb
imul
test
stos
dec
lods
lods
scas
shll
imul
dec
aas
popa
arpl
inc
dec
shll
cmp
lret
mov
arpl
je
pop
mov
lret
outsl
outsb
es
pop
xchg
sub
jae
xchg
gs
arpl
lcall
gs
inc
lcall
push
inc
mov
sbb
subl
data16
imul
insb
add
dec
ss
mov
adc
dec
jne
out
in
pop
enter
sub
shr
sbb
jmp
stos
shll
cwtl
xchg
imul
jecxz
enter
ja
mov
cmp
divl
cmp
in
test
push
es
xabort
add
xor
xchg
andb
clc
mov
rorl
mov
in
mov
dec
movsb
add
lds
sub
mov
xchg
cli
les
jae
arpl
cmp
outsb
cmp
xchg
jb
es
add
repz
mov
cmp
push
repnz
popa
cmp
sbb
leave
adc
adc
testb
scas
inc
in
scas
sub
ss
cwtl
sbb
sbb
ja
clc
popa
lcall
jb
arpl
xor
outsl
popa
jb
fldcw
mov
pop
call
push
mov
insl
pop
in
ljmp
push
inc
inc
mov
cmp
cld
push
push
cpuid
xor
jbe
mov
push
pop
jmp
and
jp
sbb
xor
pusha
fisttpll
shll
pusha
sbb
inc
push
imul
leave
jbe
insw
call
inc
xchg
enter
shl
push
mov
sbb
mov
add
jle
mov
add
outsb
dec
push
and
and
cmp
jmp
scas
sbbl
ss
pcmpeqd
mov
push
mov
adcl
or
std
shr
sarb
jl,pn
add
hlt
lock
insb
into
addb
adc
add
cmp
cmpsl
jge
fisttps
mov
dec
scas
push
push
push
cltd
clc
jbe
daa
inc
out
pop
jle
or
mov
or
push
push
sbb
pop
repnz
out
pop
mov
ljmp
jmp
sbb
test
jae
in
xchg
add
ret
mov
push
sbb
ljmp
lea
in
inc
add
out
out
sub
je
jmp
ljmp
cmc
in
in
out
jbe
xor
ja
ds
sbb
shrb
xchg
jae
frstor
je
leave
shrb
outsl
loopne
cld
pop
mov
jb
cld
jecxz
in
in
cmc
fsubl
inc
out
push
out
stos
clc
aaa
push
lret
stos
cltd
mov
leave
out
inc
push
fisttpll
lea
xlat
or
add
loopne
clc
cld
sbb
cld
adc
push
cmpsb
cwtl
sub
ljmp
insl
or
sub
loopne
cltd
mov
mov
mov
loopne
pop
adc
push
add
cwtl
bound
out
cmp
out
pop
xlat
and
mov
adc
fisubs
repz
fcoms
clc
mov
out
mov
imul
adc
pop
mov
push
mov
aas
repnz
mov
mulb
xchg
outsl
mov
dec
or
cmp
dec
ss
adc
add
mov
xor
and
sub
push
pop
fdivp
pop
mov
sub
push
pop
mov
dec
xchg
jne
mov
lock
mov
cwtl
adc
jae
adcb
call
jnp
test
xor
lcall
jo
cltd
jge
popf
in
bnd
and
push
leave
mov
adc
cmp
pushf
and
test
je
adc
and
fsubs
cmp
mov
out
arpl
jb
sbb
or
mov
xchg
xchg
dec
in
mov
aam
cmp
sbb
and
js
loope
shrb
insb
mov
scas
clc
xor
mov
dec
jo
mov
ret
jmp
cld
leave
push
ss
mov
cmp
jne
je
pop
daa
or
adc
sub
xchg
or
lea
fwait
sbb
pushl
jns
inc
cwtl
and
ss
daa
pop
iret
or
jmp
loopne
push
ds
mov
xor
in
ja
mov
dec
inc
and
cmpsb
sahf
loop
jle
push
cmp
add
jno
shrb
sarb
push
adc
jge
filds
andb
sub
outsb
push
inc
cmp
test
jbe
and
mov
mov
cmp
jl
add
jg
inc
cmp
jb
ss
cmovbe
outsl
adc
inc
inc
lea
push
jne
push
mov
popa
fadds
xor
insb
mov
mov
es
jb
push
pop
or
and
roll
bound
les
sbb
mov
or
fisubl
sub
dec
pop
call
out
inc
fsubr
call
rorl
loopne
mov
aas
inc
mov
xlat
mov
mov
or
pop
notl
push
sub
dec
fimuls
aam
push
xchg
or
inc
push
jo
std
sbb
dec
mov
adc
adc
push
adc
push
add
pop
sub
je
jmp
mov
push
sub
mov
outsl
daa
mov
jle
cmc
push
push
adc
pop
add
push
loope
andl
or
sbb
repz
sbb
mov
popa
cmp
les
push
fcoml
push
sub
adc
jo
add
or
test
mov
mov
rcrl
push
repz
fs
fldl
or
lea
loope
pusha
mov
cmp
int3
popa
popf
jo
or
mov
jg
jmp
add
push
cmp
push
ja
xor
cmp
jne
jne
mov
add
mov
sub
adc
pop
mov
fisttps
add
inc
cmpl
adc
add
sub
cs
ss
or
fistps
fnsave
das
fcoms
or
push
xchg
or
incb
mov
arpl
sbb
mov
fcmovnbe
push
mov
jge
add
push
loopne
mov
fmuls
sbb
sub
enter
xor
jbe
test
push
adc
cmp
cmpsb
sbb
or
das
adc
push
mov
cmp
je
add
arpl
mov
vmread
mov
push
add
movsbl
add
iret
aam
mov
mov
loopne
sbb
mov
cmp
mov
add
iret
xorb
adc
roll
add
jae
in
jmp
adc
movzbl
push
push
xchg
or
mov
jne
pop
stc
pop
scas
test
cmpb
mov
sarb
in
push
inc
stos
jne
roll
cmc
outsb
ror
mov
mov
mov
jne
or
test
clc
mov
sub
mov
push
ret
jecxz
mul
mov
xor
push
mov
cmp
out
jne
jl
sbb
lret
pop
jbe
fs
pop
mov
ret
xor
or
addl
add
jmp
xor
push
inc
xor
xchg
je
push
dec
mov
cmp
mov
outsl
bound
inc
push
sbb
iret
cmpsl
movsb
ret
sub
sub
dec
call
nop
inc
cwtl
mov
xorb
into
cmp
push
jge
mov
out
mov
sahf
adc
xchg
dec
add
sbb
cmp
out
add
scas
or
cltd
mov
cld
mov
jnp
pop
adc
push
mov
mov
cmp
xlat
jge
movsb
or
lcall
mov
daa
subb
adc
negb
adc
loopne
xor
filds
sub
push
ficoms
lock
lods
jnp
sub
push
push
sub
sgdtl
push
aaa
jbe
mov
and
mov
or
jmp
jmp
or
add
or
adc
or
call
aaa
mov
ds
add
cmp
cmp
pop
call
jle
cmp
jl
cmp
jg
push
inc
call
pop
jb
movsb
mov
pusha
xchg
dec
ret
pusha
xor
je
cmp
cmpb
lcall
xchg
lds
cmpb
stos
call
mov
addb
add
sub
shrb
xchg
hlt
or
sbb
and
xchg
mov
push
add
inc
in
add
push
call
incl
cmpw
cmp
cmp
add
sgdtl
out
sahf
or
xchg
cmp
ss
cmp
cmp
jl
je
cmp
incl
pop
fiadds
cmpb
js
call
add
subl
cmpl
mov
add
iret
add
xchg
mov
xor
stc
xchg
or
add
mov
add
jmp
inc
dec
sbb
fwait
push
cmc
mov
pop
sub
xorb
sbb
or
roll
test
mov
test
push
mov
lock
shrb
outsb
rcl
ffreep
adc
jne
mov
sub
mov
lods
sub
ljmp
mov
fisttpll
pop
add
subl
fbld
jno
shr
jle
movzwl
mov
jne
daa
mov
push
add
test
xchg
cmp
xor
xchg
adc
fcmovnu
push
jmp
data16
lock
fcoml
pop
or
sub
subb
add
rolb
std
xchg
xor
icebp
push
cmc
cmp
in
cld
inc
inc
sub
or
add
insl
pop
mov
sbb
jae
fimull
adc
inc
add
lret
push
jno
pop
addb
pop
mov
je
adc
loop
inc
adc
jo
mov
iret
stos
inc
xor
je
and
push
decb
ja
add
push
scas
clc
add
sar
xorb
adc
loope
inc
push
mov
fidivrl
xor
pushf
adc
or
xor
sub
mov
add
adc
pop
lods
incb
call
inc
loopne
lahf
inc
adc
int3
jbe
pushl
lcall
sbb
or
pop
add
les
push
dec
pop
rcrb
daa
adc
mov
cltd
sub
or
adc
push
addl
sbb
mov
decl
xchg
inc
cmp
testb
je
pop
inc
sub
cs
shr
or
adcl
add
pop
or
push
mov
sti
in
pop
xor
ja
push
mov
and
data16
xchg
mov
add
dec
or
imul
in
dec
mov
sub
lods
xor
inc
jo
adcb
or
push
sbb
adc
jns
daa
lret
mov
frstor
jo
jb
mov
daa
jb
js,pn
addb
mov
int3
ret
into
add
or
pop
mov
dec
out
int
mov
dec
xlat
xor
iret
aad
rorl
lret
into
push
add
je,pt
pushf
xor
adc
mov
call
adc
mov
loopne
daa
mov
xchg
inc
sti
or
push
pop
decl
pop
ss
hlt
dec
pop
bound
outsl
outsb
je
pop
nop
mov
sub
shlb
adc
xchg
push
push
mov
adc
test
int3
xchg
and
fwait
lods
or
mov
gs
movsb
add
push
stos
add
push
or
and
dec
data16
outsb
xor
inc
and
or
jmp
ffree
fs
cmp
and
daa
add
pop
fimuls
gs
push
call
inc
pop
add
jge
vrcpps
or
imul
cmp
dec
push
push
and
or
enter
daa
je
sahf
jbe
fcompl
push
insl
out
repnz
mov
fsubr
push
push
imulb
pop
in
ss
mov
call
loop
inc
pop
cmp
loope
inc
mov
inc
je
cmp
andl
xor
jmp
adc
adcl
fisttpll
std
ret
jno
inc
jl
push
test
movsb
fstpt
pop
lock
sub
or
call
cmpsl
in
inc
inc
bound
scas
mov
inc
sbb
xorl
xor
pushf
fstpl
mov
inc
sbb
pop
test
or
adc
out
xchg
call
push
jle
bound
sarl
inc
or
jb
add
iret
dec
mov
pmulhuw
arpl
lds
xor
mov
outsb
enterw
dec
mov
addr16
rorl
aas
cmp
std
rolb
in
std
ret
ret
les
vpxor
pop
lock
subl
jmp
lret
mov
popa
data16
sub
repz
mov
pop
je
popa
jns
test
sub
js
arpl
dec
les
push
and
or
sub
insb
and
in
enter
xor
mov
sti
cmp
dec
mov
cmp
mov
and
sbb
mov
add
push
or
adc
and
repz
test
int
inc
cmpsl
les
popf
int
or
xor
fcomps
dec
scas
sub
loope
adc
ljmp
adc
inc
push
ret
sbb
xor
push
jg
mov
fldt
test
mov
pop
mov
add
cmpsl
nop
xor
lret
push
cmp
mov
lret
add
lret
mov
lret
outsl
jb
jb
and
js
in
jge
inc
xorb
inc
ja
pop
jns
xlat
call
pop
rcrb
add
xchg
push
mov
xchg
xchg
enter
and
leave
std
sti
mov
dec
sub
xor
add
into
cmp
xor
cltd
sbb
xchg
adc
mov
jbe
push
push
loopne
lahf
ds
stos
pop
mov
mov
add
sbb
or
hlt
xchg
orl
or
mov
jae
mov
mov
popa
int
enter
int3
add
xchg
sub
fadds
sbb
sahf
add
pusha
or
or
inc
and
sbb
mov
adc
sub
dec
lods
outsl
mov
roll
les
adc
mov
xor
nop
sub
cld
lods
pop
mov
fwait
in
je
xor
mov
add
inc
xchg
int
adc
or
adc
mov
sti
fidivs
adc
pop
incl
add
imul
insb
imul
or
arpl
push
add
jbe
pop
add
push
out
popf
pop
xor
xchg
test
add
adc
aas
push
sub
outsl
arpl
jae
mov
ss
cmp
push
daa
xor
push
outsb
popa
jo
push
add
jb
jne
rcrl
and
mov
adc
dec
pop
inc
insb
mov
mov
jb
fdivp
pushl
popa
fs
imul
packsswb
sbb
ficoms
jnp
sbb
sbb
fs
adc
mov
inc
mov
add
ret
insb
jae
jb
mov
xor
push
or
xor
imul
pop
loope
and
inc
jns
add
push
xchg
or
and
mov
inc
imul
aas
shll
mov
or
jb
stos
sbb
push
test
gs
outsl
mov
insl
nop
jno
inc
outsl
jb
outsb
and
push
sti
pusha
ucomiss
push
gs
outsl
push
dec
mov
popf
lods
int3
dec
sbb
popa
enter
orb
add
repz
out
sub
push
push
push
jbe
aad
inc
cmp
fcmovnu
into
inc
pop
ret
andb
adc
inc
jno
dec
pcmpeqb
int
and
push
jnp
ss
das
dec
or
push
add
adc
fadds
and
lock
das
sbb
pop
jecxz
ret
push
outsl
imul
pop
and
fwait
sub
or
out
push
xchg
sbb
imul
shll
and
inc
add
jns
mov
xor
adc
sub
adc
jne
push
ret
cmp
push
es
imul
pop
add
into
pop
jo
es
add
pushf
mov
fldcw
and
cmp
mov
shrl
in
jae
stos
adc
cmp
add
push
outsb
push
sbb
rcrb
mov
decb
push
dec
inc
insb
lods
add
popa
fldt
push
push
incl
out
add
and
xor
mov
jmp
js
mov
jb
fs
lret
xor
sub
xchg
jne
loope
inc
std
inc
pop
pop
and
pop
ret
xchg
add
mov
pop
inc
add
loope
add
mov
dec
es
addr16
aad
fisubrl
and
push
push
fmull
imul
xchg
adc
inc
inc
negb
and
jns
add
je
repz
mov
js
lret
sub
pop
and
into
or
jae
sub
aad
sbb
mov
add
or
mov
imul
in
mov
adc
push
add
jne
mov
xor
pop
add
and
imul
fbstp
inc
pop
jg
jnp
jb
cmp
adc
inc
outsb
jne
subl
mov
fisttpll
jae
pop
jo
inc
popa
arpl
add
and
inc
pusha
add
push
into
xchg
jp
add
icebp
or
push
cs
add
scas
mov
xchg
or
lret
add
sbb
jb
arpl
jle
pop
xor
dec
add
or
add
pop
adc
lea
add
add
dec
xchg
mov
daa
sub
arpl
outsl
in
jge
jecxz
popa
out
dec
lds
or
cmpsl
jae
mov
rcrb
outsb
outsb
imul
sub
adc
lods
aad
push
add
das
movsl
out
call
jl
aas
xor
pop
push
add
loopew
nop
divb
xor
dec
sbb
idivb
out
cwtl
in
or
loope
jbe
xchg
dec
add
fwait
cltd
xor
push
xchg
and
ret
std
insb
ja
dec
rol
mov
mov
test
jae
mov
adc
dec
add
pop
mov
imul
cmp
ja
push
pusha
push
add
fldenv
ret
inc
push
rorb
adc
xchg
inc
sub
sbb
pop
adc
inc
dec
push
dec
xchg
cmc
pop
out
pop
pop
je
jnp
addr16
push
call
pop
cmp
add
inc
add
pop
mov
je
or
frstor
jmp
adc
shll
or
add
cmp
sti
pop
inc
add
and
xlat
jne
sbb
and
mov
sub
mov
xor
mov
add
sub
aam
enter
scas
in
stos
mov
cmp
clc
ljmp
sbb
push
mov
add
xchg
aam
aam
shr
sub
outsl
fildll
cmp
cmp
test
xchg
clc
bt
push
or
sub
pushf
call
dec
jg
out
pushf
pushf
cmp
and
pop
btr
rcl
cmp
add
cmp
stc
pusha
pusha
mov
cmpsb
add
and
add
shrd
jmp
push
sbb
imul
mov
cmpb
pop
popl
sti
jns
pop
pop
xor
fldcw
aad
sbbb
ror
jnp
std
outsb
das
std
clc
shl
rolb
push
jmp
out
add
enter
je
cmp
test
neg
call
mov
mov
xor
fldt
adc
xchg
ret
call
inc
cmpb
mov
out
add
test
pusha
and
mov
add
mov
fcoml
pop
outsb
push
cmc
icebp
mov
cmp
lcall
aas
add
clc
sub
pushf
push
push
cmp
mov
inc
and
mov
jmp
ja
incb
add
sub
cs
outsb
cpuid
or
add
inc
or
cld
fidivrs
divb
fnstenv
das
inc
das
ficoms
pop
or
mov
add
or
idivl
dec
das
adc
das
pop
or
pop
xchg
mov
jbe
mov
mov
fiadds
pop
fldcw
neg
push
add
or
fildll
repz
cs
mov
inc
push
dec
mov
addr16
sub
or
push
out
int
xchg
xchg
es
sub
jnp
pop
imul
notl
and
push
out
int
jmp
sbb
cmpsl
or
repz
jg
adc
fsubrp
loope
fwait
in
mov
das
mov
sbb
jnp
pop
push
das
pop
mov
add
adc
pop
sbb
and
cmpsl
fucomi
mov
ret
aaa
adc
cmp
cmp
std
fidivrs
inc
sub
adc
sbbb
aas
mov
cmpb
pop
lock
pop
push
fidivrs
das
lahf
btr
int
mov
fidivrs
mov
iret
inc
fs
bndstx
xchg
aas
push
repz
mov
add
aaa
in
lock
pop
jg
mov
cmpsl
outsl
inc
or
ret
jnp
cmp
cmp
sti
fidivrs
fbld
pop
mov
jnp
xor
mov
aas
sbb
jnp
jae
cvtdq2ps
js
sahf
fdivp
and
ja
xchg
ud2
sbb
fidivrs
cmp
pop
aaa
testl
idivl
xor
ja
jg
and
mov
push
call
mov
mov
pushf
push
int3
or
push
fimuls
jmp
jmp
mov
inc
incl
push
loopne
sbbb
cmc
mov
mov
and
xchg
lahf
sub
add
push
cwtl
or
shl
pop
decl
out
not
pushf
bswap
inc
shr
or
dec
mov
or
xchg
ret
loope
push
cmc
pushf
clc
pushf
push
add
pop
scas
int
and
mov
out
pusha
push
shr
sub
imul
fwait
xorb
xor
and
fucom
jbe
lods
sbb
cmp
outsb
loopne
loope
push
movsb
stc
stc
and
push
push
shlb
std
cld
loope
call
or
push
sub
cmp
add
adc
sbb
jle
je
and
jns
and
jmp
add
add
rcll
iret
or
test
xchg
lods
scas
push
push
pop
mov
push
lea
mov
loop
mov
and
ljmp
sub
mov
push
sbb
mov
inc
pop
pusha
fisttpl
or
jmp
in
adc
sbb
rcrb
add
popf
fmulp
adc
cmp
neg
inc
cmp
scas
pop
adc
subb
jbe
mov
xchg
out
push
icebp
flds
decl
call
jb
push
shl
repz
add
lret
cltd
scas
or
call
stc
scas
push
cmp
mov
mov
push
mov
jae
dec
or
cmp
sbb
mov
dec
jmp
jg
ss
bound
ds
stos
hlt
fimuls
lret
dec
sbb
lcall
sub
sahf
mov
cmc
and
cmp
sbb
lahf
rorl
aam
out
mov
inc
lret
jmp
mov
inc
push
pusha
dec
inc
jmp
cmp
mov
push
pop
cmc
orb
mulb
std
shlb
or
and
jl
outsl
lcall
xor
neg
not
add
lret
mov
incl
fstps
orl
call
cmc
out
pop
add
lahf
or
faddp
ljmp
push
dec
sub
and
cmp
lea
cld
cld
popa
clc
test
stc
pusha
sub
pushf
or
icebp
push
mov
incl
fdivrs
sub
dec
aad
add
setl
shr
inc
lock
mov
repnz
add
dec
cmc
mov
sbb
push
lock
xchg
push
push
mov
int3
pusha
popa
jg
call
test
mov
push
push
out
iret
loop
addb
push
add
in
test
xchg
cmp
setb
call
iret
mov
fwait
add
push
cwtl
mov
add
inc
add
shll
ret
jae
jae
xor
ja
data16
pushf
sbb
push
outsl
jns
jge
or
dec
push
scas
loopne
xchg
cmc
js
or
push
test
pusha
rcrl
ja
outsl
sub
ror
dec
xadd
and
mov
or
clc
rcll
push
add
aaa
sbbb
push
add
enter
mov
pop
inc
pop
dec
jo
jbe
adc
jmp
sub
push
roll
aad
inc
xchg
aas
mov
pusha
cli
add
ja
hlt
xor
clc
sar
cmc
insl
jg
cmp
rolb
xchg
add
ret
pusha
mov
mov
stos
lcall
sti
adc
leave
out
push
ljmp
cmp
jbe
sti
inc
data16
in
dec
push
in
shl
ja
rorb
push
stos
jmp
popf
loope
jmp
cmp
cmp
sub
test
and
call
dec
rol
sbb
mov
stc
sub
cmc
cmp
mov
cmp
roll
fisttpll
dec
dec
pop
mov
sbb
add
xchg
shrl
or
push
dec
data16
aaa
jmp
stos
and
mov
mov
push
test
iret
or
pushf
mov
scas
lock
pusha
or
outsb
add
sbb
fmul
frstor
inc
jmp
and
push
mov
icebp
add
mov
int3
repz
cmc
subl
xchg
fcomi
fwait
or
mov
rorl
xchg
rcll
inc
dec
mov
xchg
mov
mov
pop
daa
test
cmp
cmp
add
out
ja
cmc
call
lods
push
aad
mov
pop
lock
xor
je
pop
cmp
rorl
out
loopne
jg
insl
test
jl
das
mov
call
int3
test
sub
adc
xchg
out
data16
clc
movsb
pushf
mov
lea
mov
xor
cmp
ss
test
enter
mov
inc
daa
cmc
push
pushf
mov
loopne
sar
sbbl
in
sarb
cwtl
push
dec
cmc
push
adc
or
sub
jb
js
xlat
out
push
jmp
out
daa
je
add
adc
sub
addr16
xchg
imul
loopne
rcrb
lea
adc
sbb
mov
pop
push
dec
sti
hlt
pop
aaa
pop
loop
mov
into
xchg
in
cltd
imul
insl
mov
pop
push
cld
call
jbe
call
push
loop
test
push
xlat
cmc
out
dec
cmc
cmp
pusha
push
push
arpl
clc
dec
push
cli
dec
push
pushf
mov
addl
push
mov
insb
cwtl
and
pushf
push
jecxz
lret
jne
push
pop
add
dec
push
test
stc
cmp
jecxz
push
je
pusha
mov
or
pop
out
aad
call
xor
call
outsl
call
in
int3
cmc
shl
gs
mov
mov
bound
sbb
fsubr
bound
push
mov
in
push
xor
adc
push
in
or
cmpsb
pop
add
sub
cmpsl
jg
jmp
add
ret
cmc
cmc
mov
fwait
or
rclb
orl
outsb
sarb
or
ja
out
cli
and
test
xchg
into
mov
push
pushf
into
ss
fstpl
test
jmp
adc
fidivrl
mov
je
cmp
push
ja
add
mov
inc
idivl
lret
add
cmp
push
mov
loopne
into
insl
jbe
ss
or
mov
xchg
push
pop
jecxz
lcall
js
jl
or
mov
jmp
movsl
es
into
adc
mov
es
push
cmc
cmp
test
jmp
pop
sub
or
xlat
mov
xchg
adc
push
xchg
jmp
loopne
aaa
shld
and
stos
out
mov
adc
les
jbe
mov
sbb
shlb
loop
out
jne
mov
call
pusha
shl
inc
in
pop
jmp
jp
rorb
jge
imul
shr
inc
pop
or
add
addr16
fdivrp
push
push
push
xor
rol
rclb
xchg
sarb
lret
fdivr
jecxz
dec
mov
sti
fldenv
int
je
imul
add
mov
hlt
fists
aad
stos
std
std
scas
push
sti
setp
sbb
insb
lock
std
cmp
clc
push
cmpsl
ret
lock
cmp
loopne
mov
sub
jmp
cmp
aad
mov
pop
jmp
adc
xchg
jmp
pop
xchg
xchg
setns
sbb
lock
sbb
lret
and
adc
int3
stc
icebp
in
outsl
or
pop
and
cli
cmp
or
push
iret
xlat
push
js
loope
popa
dec
inc
mov
fists
mov
jecxz
lods
add
out
push
in
sahf
mov
add
jmp
jbe
cs
in
call
fdivrs
or
push
push
sub
scas
mov
out
push
xor
not
xchg
jecxz
shrl
sub
xor
or
and
add
shrb
cmp
fildl
xchg
and
in
lcall
scas
push
sub
push
shr
sub
mov
fisubl
movsb
cmp
pop
out
pop
mov
stc
ror
call
vfnmsub213sd
or
pusha
gs
push
arpl
sub
shrd
notl
popf
stc
insl
test
inc
sub
cld
mov
sti
stc
cmc
xchg
cmc
sar
ret
add
mov
pop
lahf
and
loopne
jae
or
outsb
popa
sbb
pusha
or
loopne
sti
mov
or
and
call
mov
leave
lahf
fmuls
cs
or
rcrl
lret
repnz
jmp
push
dec
and
lock
xor
shr
push
clc
jecxz
loopne
adc
ret
aad
jmp
outsl
outsl
xchg
adc
fmul
inc
push
leave
movsb
push
jo
xchg
scas
dec
lds
pop
jg
call
aaa
push
int3
or
cmp
sbb
mov
push
jmp
sbb
cld
mov
cmp
test
xor
or
xor
nop
outsb
xchg
xchg
daa
test
ja
pushf
fsubrp
sub
cmp
or
loopne
adc
dec
dec
inc
push
std
and
scas
sub
or
iret
dec
mov
inc
jne
push
test
data16
leave
insl
clc
push
out
xchg
call
out
mov
pop
stc
add
or
xor
mov
pushf
mov
cmp
mov
pusha
pop
leave
sub
int
add
pop
pop
jmp
dec
lods
mov
push
in
call
scas
jb
pop
loopne
mov
push
jge
stc
pop
ficoms
cmpsl
add
lcall
sbb
xor
call
xor
enter
push
xor
fsubs
leave
mov
aam
mov
mov
xchg
dec
call
das
mov
push
movsl
sbb
push
cld
shll
out
push
call
mov
mov
xor
and
push
adcb
mov
enter
dec
aas
test
subb
mov
jne
fucom
ud1
sbb
je
jecxz
push
in
lcall
adc
imul
shlb
add
pop
push
pushf
rcll
out
call
push
sub
inc
sbb
push
stos
pop
insl
shrb
loop
incl
jmp
add
add
je
sbb
in
cli
mov
enter
push
aam
lods
cmc
push
dec
pusha
test
int
pop
mov
xor
and
rcl
fimuls
jno,pn
adc
mov
adc
movsl
ja
sub
aad
out
cld
mov
into
cltd
outsb
cld
mov
xor
mov
div
movsl
and
psrld
mov
push
mov
testb
mov
mov
dec
xor
pushf
lcall
add
fxch
ret
cmp
ret
xor
mov
aas
lock
je
push
adc
jecxz
arpl
ret
inc
dec
inc
scas
pop
pushf
cld
push
xor
jmp
pop
call
call
push
loopne
mov
int
adc
cmp
call
jg
pop
je
into
push
xchg
or
push
xor
out
mov
ret
lret
mov
fcmovnbe
xchg
shll
mov
adc
jl
loopne
mov
xor
add
mov
add
insl
fbld
sbb
cli
aaa
dec
rorb
ljmp
test
jbe
add
sub
push
aam
data16
adc
std
mov
cwtl
sarb
xchg
jmp
dec
mov
repnz
clc
adc
orl
xchg
sahf
push
xor
inc
stos
jge
mov
sub
adc
cmp
mov
aaa
mov
jmp
mov
jne
fucomip
aaa
inc
push
pop
mov
popw
cld
popf
sbb
aad
jmp
rolb
pop
jb
push
hlt
test
call
mov
push
add
scas
jns
push
pushf
hlt
add
aam
outsb
push
fs
mov
lea
dec
mov
ret
cld
or
jg
dec
aas
insb
xchg
pushf
arpl
divl
enterw
jg
fdivrp
not
test
lea
test
cmp
jmp
pop
in
cmc
pop
icebp
fdivl
jg
mov
mov
dec
je
sbb
lods
lea
sub
lock
movsl
cld
ljmp
dec
jns
xchg
arpl
inc
aaa
mov
aas
pop
cmp
xchg
xchg
pop
pusha
push
push
adc
js
pop
imul
pop
in
mov
pop
mov
add
jbe
inc
aam
mov
imull
mulb
and
ja
cltd
lea
sbb
sti
ret
das
sub
or
lahf
and
mov
lea
stos
xlat
ficoml
cld
push
bnd
pop
loop
sub
add
mov
jl
lret
addl
cli
or
rcrb
test
rcr
jmp
cmp
pushf
sbb
sbb
mov
mov
stc
rol
int3
loopne
xchg
jnp
call
ja
push
xor
push
push
inc
dec
cwtl
xor
or
aas
inc
mov
ds
xlat
repnz
pop
cmp
push
mov
mov
gs
cli
mov
std
arpl
lods
shlb
push
loopne
dec
mov
cmp
xor
push
aaa
lock
lcall
jnp
enter
and
push
pushf
mov
into
dec
pushf
das
scas
sbb
xor
cmc
int3
push
mov
fmull
adc
push
adc
add
sti
and
or
xchg
leave
sbb
cld
jne
push
inc
jg
std
jb
push
cld
pusha
call
sbb
shl
dec
cli
xor
pop
pop
jbe
test
cli
mov
push
lock
icebp
push
bound
sbb
inc
pop
lods
divl
mov
xchg
cmp
fdivrs
inc
enter
lea
cli
push
mov
daa
aad
shl
push
jo
mov
ret
lock
adc
cmovle
cli
mov
movsl
add
xchg
mov
cli
xchg
pop
stc
push
call
pusha
pop
insb
cltd
fsubrl
fcmovnbe
add
mov
push
fsts
call
out
test
cmc
les
fadd
xchg
lds
and
orb
int
dec
outsl
pop
mov
add
and
fdivs
lds
fs
sbb
mov
dec
pushl
lahf
adc
adc
mov
xchg
or
int3
push
hlt
scas
sub
mov
jecxz
ror
data16
push
adc
lods
fstl
dec
je
outsb
call
lret
cli
int3
cmpsb
test
sbb
sub
cli
enter
push
mov
clc
out
ljmp
and
out
push
scas
pop
cmp
scas
dec
dec
sbb
insl
push
pusha
imul
xor
orl
add
mov
sbb
cmp
pushl
je
leave
rcrl
adc
pop
sbb
xor
fistpll
test
dec
jne
arpl
sub
xchg
frstor
xor
ljmp
xchg
js
das
ja
icebp
pop
add
sar
out
jb
sub
addr16
mov
dec
out
outsl
lcall
xor
push
movsb
nop
mov
jo
push
mov
and
loopne
push
lods
lret
pop
jmp
cmp
xchg
push
mov
xor
aam
push
mov
pushl
inc
cwtl
out
pop
in
lahf
mov
pop
mov
aam
in
insb
cmp
mov
call
loopne
jb
and
in
dec
std
sub
fs
dec
push
nop
xor
inc
insb
ljmp
cmp
enter
push
and
jecxz
rcrl
add
pop
pop
pop
push
push
mov
fs
mov
mov
cmpsb
xchg
mov
jl
and
and
scas
arpl
dec
pushl
mov
add
test
cmpsb
mov
popa
imul
mov
js
jg
add
aam
add
adc
ret
and
mov
lea
xchg
mov
push
jle
cmp
and
or
cs
pop
inc
sti
imul
int
xchg
insb
call
adc
xor
fs
pop
push
mov
xchg
xorb
arpl
ljmp
inc
jge
imul
subb
pop
scas
cwtl
popa
jmp
sub
popf
xchg
sub
lds
out
and
scas
xor
in
popf
xchg
lcall
xchg
pop
and
daa
inc
cmp
fptan
jle
jg
iret
dec
mov
out
call
data16
xlat
or
pop
out
xor
sti
in
jnp
data16
xor
ret
cli
pop
push
mov
jbe
fnstcw
cmp
fwait
push
inc
popf
jae
dec
push
push
jmp
outsl
icebp
insl
cltd
xchg
je
jl,pn
mov
rorb
push
out
ficoms
inc
mov
and
mov
push
sbb
pop
mov
sti
mov
jnp
nop
cmp
fstpt
mov
pop
inc
test
mov
movsb
idiv
dec
sbb
pop
add
lret
xchg
das
sbb
mov
cmp
adc
fidivrl
mov
jns
jge
xor
into
inc
mov
aad
cmc
sbb
sbb
div
pop
in
jnp
and
stc
testl
lret
js
push
out
aaa
es
dec
push
fistl
xor
push
gs
sbb
lods
loope,pn
cltd
mov
or
cmp
and
incl
test
jbe
jmp
cmp
and
cmp
xchg
pop
and
cmp
adc
decl
sbb
fwait
xchg
or
xor
add
jae
sbb
add
mov
add
push
or
lcall
lret
clc
in
mov
js
cli
mov
pop
pushf
inc
cli
loopne
outsl
jl
scas
or
jge
pop
orb
push
sub
add
jmp
mov
lret
adc
sbb
dec
lcall
jge
mov
pop
mov
xchg
mov
add
popf
fwait
adc
lods
fldt
or
pusha
cmp
pop
xchg
insl
adc
jg
nop
pop
adc
sbb
std
sar
mov
sbb
xor
je
sub
dec
mov
jle
test
nop
js
lahf
test
mov
lret
push
add
orb
mov
in
add
lcall
cld
bound
sbb
or
xor
cld
sbb
mov
or
rorl
dec
out
decl
fsts
ljmp
dec
pop
adc
sbb
aas
inc
inc
inc
fistpll
fstp
movsb
sbb
mul
xchg
inc
pop
aam
mov
sub
clc
jg
jb
dec
jge
stos
add
jae
mov
lock
shrb
lret
pop
repz
into
add
aas
xor
push
lcall
roll
jns
pushf
xor
ss
pop
shl
and
jmp
jecxz
mov
and
movsb
add
jg
call
scas
adc
out
push
sarl
pop
and
pop
inc
rol
xchg
adc
jle
mov
incb
call
in
imul
mov
xor
lcall
xchg
cmp
mov
leave
inc
lock
addl
call
jle
cld
ret
decl
out
dec
cmpsl
adc
testl
ljmp
sahf
pop
lds
sub
or
xlat
mov
jecxz
ret
mov
fimuls
ljmp
test
mov
test
jbe
xor
iret
mov
mov
push
fwait
ja
mov
ljmp
xchg
jl
bound
movd
push
stos
enter
dec
xchg
loopne
sbb
lcall
dec
jae
popa
test
fsubs
fidivrl
jbe
lods
jmp
in
pop
loope
scas
mov
mov
mov
ss
push
lret
outsl
jg
inc
mov
popa
iret
jno
leave
pop
idivl
add
filds
xor
add
xchg
flds
mov
mov
jo
negb
sbb
cmpsb
lcall
outsl
pop
mov
jno
jg
mov
rcll
int
inc
daa
inc
repnz
pop
jns
mov
popf
adc
mov
sub
test
sbb
jnp
incl
test
rcr
mov
repnz
sbb
ss
jg
sub
rorl
icebp
jae
mov
insb
sbb
xchg
xchg
pop
cli
jmp
pop
test
mov
mov
pop
push
enter
dec
sbb
cwtl
in
xor
popa
popa
pop
insb
adc
sti
std
dec
xor
insb
addr16
xchg
mov
fildll
adc
mov
add
rclb
aaa
decb
js
sbb
addr16
sbb
repnz
aas
sbb
jbe
inc
pop
jl
ficoml
aam
hlt
sbb
mov
test
jp
adc
and
add
mov
test
mov
aam
adc
push
incl
pop
call
das
mov
cmp
ja
rorb
fdivs
or
jnp
push
xor
rorb
dec
sarb
or
je
pop
mov
pop
sbb
and
fcmovnb
cli
cmp
loop
fisubl
in
push
mov
shll
aas
aad
lea
push
les
inc
es
cmp
enter
and
pop
pop
sub
pusha
push
pushf
icebp
das
sar
or
jnp
rcll
aas
sbb
in
arpl
or
ja
cmpb
jmp
add
jg
jg
push
mov
mov
mov
jne
cmp
icebp
outsl
ljmp
jo
orb
out
shll
sbb
pushf
pop
leave
inc
jnp
mov
jmp
push
test
inc
or
movsl
mov
jg
cmpsl
test
add
sub
mov
std
sbb
inc
rorb
xor
mov
outsl
add
and
pushf
jae
sub
sbbl
std
xlat
popf
das
test
movsl
xor
push
inc
and
jg
mov
jg
add
outsb
push
and
mov
fadds
decl
sub
dec
movsb
js
into
sub
sub
in
and
call
or
cmp
cmpsb
cmpsb
jp
mov
insb
sub
push
sbb
inc
sub
mov
xchg
iret
pop
jae
sbb
sub
imul
adc
push
or
push
mov
mov
inc
test
aas
xor
xchg
int3
subb
pop
and
or
jmp
push
cld
cmpb
loope
sub
inc
sarl
and
imul
sbb
fs
enter
ss
jecxz
scas
nop
mov
imul
and
mov
xlat
jge
fdiv
jmp
adc
lods
cmp
inc
das
aaa
out
inc
sub
mov
push
pop
into
add
mov
push
cld
ret
ret
sahf
or
and
fnstsw
sub
lods
push
fsubs
test
outsl
mov
jmp
xor
daa
and
sbb
popa
arpl
mov
jecxz
pop
sahf
call
pop
cli
decl
jle
push
jp
push
push
xchg
in
insb
gs
add
imul
sbb
jns
push
xchg
inc
mov
std
cmpsb
in
adc
imul
enter
out
add
pop
std
std
test
xchg
outsl
in
imul
inc
sbb
das
jge
pusha
push
pushf
mov
or
ss
inc
iret
pop
std
jge
fxam
jno
dec
dec
push
and
aam
ret
jg
mov
push
addb
jno
outsb
std
add
push
inc
push
push
repz
xchg
push
lcall
jmp
mov
cmp
insb
mov
fisubrl
adc
pop
ljmp
xchg
cltd
or
pop
je
mov
das
std
cmp
sub
jge
decl
clc
xor
jp
sub
mov
ds
mov
gs
movsb
mov
and
sbb
mov
cmpl
add
jbe
rclb
decl
call
sbb
mov
cs
cmpsb
dec
fucomi
stc
mov
xor
cmp
or
mov
mov
insb
call
dec
pop
jecxz
inc
cmc
lods
popf
sti
call
incl
mov
mov
jnp
jle
cmpsb
jecxz
pop
pop
mov
aaa
sahf
push
lds
data16
pop
shrd
fwait
sub
adc
int
fwait
mov
jl
fbld
mov
je
dec
push
out
pushl
jp
stos
cmp
popa
fimuls
push
adc
fcomi
aas
lcall
inc
cmp
sahf
xchg
ficomps
mov
mov
sub
hlt
pop
ljmp
mov
cmpsl
shll
dec
lahf
mov
mov
outsl
lock
ret
or
and
mov
mov
dec
cmpsb
out
cmp
dec
mov
cld
decl
mov
ret
jl
dec
cs
lret
and
push
stc
push
inc
pop
shlb
jge
cmp
loope
dec
dec
test
pop
cld
pushl
out
test
sbb
xor
cltd
add
jbe
xchg
loope
ffreep
cmpsl
adc
aas
orb
iret
clc
lar
adc
decl
pop
push
lret
push
jp
hlt
mov
jg
mov
scas
das
clc
adc
leave
outsb
dec
aas
jns
sub
popa
dec
inc
jbe
xchg
or
fidivrl
movsb
mov
jo
call
mov
inc
xor
pop
jle
push
jae
dec
lds
dec
xchg
or
popl
rcr
leave
xchg
mov
mov
jmp
xchg
lds
push
cli
dec
test
dec
mov
cmpsl
mov
iret
push
scas
pushf
and
incl
jae
pop
jmp
cmpsb
jecxz
sbb
cli
ret
jnp
dec
aas
and
pop
into
ret
addr16
mov
addb
sbb
jge
stc
in
mov
mov
push
push
ret
adc
shrb
adc
ljmp
xchg
inc
pop
xchg
shll
incl
mov
movsb
inc
ja
into
ss
jg
scas
je
mov
fidivl
or
xor
cld
lcall
scas
mov
ret
js
mov
imul
or
push
pop
insl
xchg
push
movsl
out
sbb
jge
cltd
sub
nop
and
pushl
stos
aam
lret
xlat
or
mov
cwtl
icebp
loope
dec
add
outsb
int3
arpl
test
cmp
xchg
call
sub
rolb
adcl
in
jbe
cmc
mov
arpl
push
shlb
sarb
pop
lods
jge
jns
jg
outsl
insl
xchg
and
aam
pop
int3
and
test
inc
or
stc
lcall
popf
xchg
inc
xchg
inc
mov
ljmp
pop
add
mov
adc
mov
ret
dec
xchg
in
jns
aas
lcall
xor
aaa
pusha
cld
aaa
lret
fistps
and
aam
push
lret
jmp
mov
xchg
inc
addr16
inc
or
leave
add
ret
les
aaa
cld
pushl
rep
stos
movsb
in
filds
sub
sar
call
mov
ret
jl
jb
ret
das
gs
jmp
gs
pop
adc
andb
insl
jge
imul
decl
and
aam
push
ljmp
ljmp
jg
stc
sub
in
int3
xor
adc
cmpsb
add
and
call
clc
lret
xchg
das
int3
push
xlat
inc
addl
and
popf
jo
fprem
fildll
iret
or
add
das
inc
loopne
paddsb
dec
inc
dec
and
mov
iret
in
mov
test
cmpsb
xlat
test
rcrl
call
push
jb
cmpsb
test
lds
push
add
lds
loop
shr
pop
aad
call
into
cli
mov
data16
mov
lahf
jmp
mov
lcall
outsb
xchg
cmp
jl
inc
frstor
outsl
push
mov
add
lds
pusha
and
cmp
loope
dec
stos
out
sbb
adc
xchg
les
movsb
and
pop
pop
rcrb
out
mov
xchg
rorl
adc
pushl
sarb
in
fcmovu
mov
test
into
mov
popa
loop
fwait
xchg
decb
sub
rorl
push
inc
mov
inc
push
stos
jb
jmp
cmpsb
call
inc
daa
push
iret
pop
cld
jmp
pushl
cmp
mov
cmp
outsb
xor
loope
ds
cmc
in
das
mov
sub
arpl
fildll
stos
ja
mov
mov
lods
cmp
repz
out
push
clc
mov
cld
dec
call
mov
fld1
das
xchg
add
adc
scas
jns
mov
cmp
xchg
mov
test
insl
notb
inc
scas
outsb
hlt
dec
test
shll
in
and
pop
cmp
sub
negl
in
pop
xchg
inc
mov
push
iret
pop
jl
sti
mov
and
pop
inc
movl
sub
mov
dec
sub
mov
xchg
imul
push
stos
mov
int3
leave
pushl
clc
jg
cltd
mov
push
inc
inc
pop
out
into
ds
lcall
dec
inc
mov
cmp
outsb
rcrb
test
shll
gs
hlt
dec
fprem
jg
insl
mov
jge
inc
lds
pop
and
sahf
jmp
cmpsb
loop
jmp
iret
pop
ja
outsb
shlb
inc
lock
insl
and
and
add
inc
mov
jo,pn
jns
in
arpl
xchg
push
enter
fwait
lret
call
test
cmpsb
cmp
in
test
movsb
jns
xchg
scas
jl,pt
call
pop
subb
hlt
and
sbb
inc
adc
lcall
stc
mov
pop
js
and
sarl
sub
adc
outsb
popa
aas
loope
cld
das
pushl
xor
and
push
mov
lahf
push
mov
int
rol
cmpsl
pushf
mov
mov
fnstsw
cmp
incl
jge
push
inc
outsb
fdivp
or
js
bnd
lcall
mov
jmp
cmp
test
stc
stos
out
mov
icebp
push
repnz
mov
call
gs
les
lods
and
dec
dec
mov
ds
jmp
pop
mov
aaa
jmp
popf
sbb
iret
push
mov
pushl
adc
clc
lock
jnp
cmp
and
xor
test
fidivrl
movsb
movsl
loopne
xor
idiv
decl
xorl
add
mov
xorl
pop
in
dec
scas
gs
out
mov
cmp
fstps
cmp
mov
xorl
xor
mov
jg
jo
push
aad
adc
inc
sub
rcrb
call
outsb
pop
dec
add
push
sbb
xchg
and
das
ljmp
fchs
lds
aaa
loope
xor
push
mov
mov
lcall
mov
xor
mov
inc
mov
add
mov
jl
daa
adc
jle
sub
or
clc
decl
mov
xchg
or
push
jmp
std
fdivrs
leave
pop
les
mov
or
push
sub
repnz
push
into
pushf
and
add
jle
mov
out
sbb
pop
subb
ret
jae
sbb
inc
repnz
pop
jge
outsl
popa
imul
pop
in
xchg
ss
and
jp
in
js
inc
stc
and
in
stc
pop
aam
pop
ret
in
xchg
inc
lcall
xchg
jg
incl
ss
in
es
jmp
test
fcmovnu
mov
test
push
mov
das
jl
roll
push
rcrb
decl
pop
aas
cmp
fsubrs
lock
outsb
pop
cmp
jge
adc
mov
lods
test
aad
arpl
popa
jb
ja
mov
lods
jmp
std
mov
fbld
xorb
xor
idivb
pop
cmc
leave
call
addl
repnz
cs
ss
mov
mov
mov
mov
popa
call
sar
dec
mov
mov
inc
bswap
pop
jp
cli
or
or
or
jmp
push
xor
add
call
ds
pop
je,pt
nop
lods
jg,pt
aaa
lret
add
hlt
ss
aaa
lea
aaa
fs
pushl
aaa
js
aaa
mov
xchg
aaa
cwtl
aaa
mov
mov
aaa
pushl
ljmp
lods
mov
cmp
cmp
or
sbb
xor
xor
cmp
jp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
repz
cmp
lahf
cmp
jno
cli
lcall
xchg
ds
aas
xchg
aas
mov
aas
ljmp
push
call
sub
xor
xor
pop
xor
xor
xor
xor
xor
xor
xlat
xor
dec
xlat
jg
jg
fidivs
in
xor
sub
inc
xor
pop
xor
test
sahf
xor
inc
cmp
nop
aas
xchg
aas
jmp
fists
sbb
and
cmp
dec
xor
insb
xor
xor
xor
pushl
inc
xor
xorb
xor
xor
xor
xor
xor
xor
jne
jp
test
mov
push
dec
cld
xor
push
xor
clc
ljmp
mov
xor
xor
xor
mov
mov
lods
ljmp
aaa
push
cmp
jae
cmpsl
cmp
cmp
pushl
fists
cmp
cmpsb
cmp
fildll
out
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
insb
cmp
test
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
insl
decl
mov
jmp
cmp
and
push
pop
pop
cmp
insb
cmp
xchg
push
ds
aas
and
pop
aas
jbe
lea
aas
mov
jo
pushl
lret
clc
add
dec
xor
popa
xor
jbe
jge
xchg
pop
loopne
aaa
pop
repz
xor
xor
cmp
xor
jp
nop
xor
call
xor
xor
xor
xor
xor
xor
xchg
xor
pushl
shlb
xlat
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
pushl
fidivs
repz
sbb
ss
xorb
aaa
scas
aaa
mov
aaa
leave
aaa
xlat
aaa
out
cld
aaa
iret
cmp
and
jno
ja
icebp
xchg
scas
cmp
idivb
aaa
clc
cmp
mov
mov
adc
and
sbb
ds
enter
aas
ds
dec
aas
addr16
je
mov
xchg
inc
popf
ret
leave
idiv
aas
scas
aas
mov
aas
hlt
aas
sti
testl
insl
xor
xor
adc
xor
xor
xor
xor
xor
mov
pushl
insb
xor
xor
xor
xor
xor
icebp
xor
xor
xor
jg
xor
xchg
xor
fnstenv
sub
das
cmp
mov
mov
dec
fidivl
in
jmp
pushl
or
getsec
sub
cltd
aaa
movsb
aaa
mov
mov
aaa
out
hlt
aaa
idivb
add
sbb
sub
and
jne
cmpb
cmp
cmp
dec
mov
cmp
cmp
cmp
push
cmp
aam
fistpll
out
jmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
lcall
cmp
or
adc
aas
add
aas
cmp
pop
data16
jg
aas
cmpb
aas
mov
stc
nop
repz
xchg
inc
xor
xor
out
push
adc
sbb
pop
xor
xor
mov
test
lea
popf
xor
lds
rclb
lcall
sbb
inc
test
xor
xor
pushl
push
xor
sbb
das
pop
loopne
test
xchg
xor
xor
xor
leave
xor
loop
ja
xor
add
ss
jg
or
sbb
dec
and
sub
xor
cmp
inc
ss
ss
ss
incl
pop
ss
ss
jp
lea
fwait
ss
ljmp
les
leave
shlb
ss
add
add
inc
pushl
pop
aaa
imul
xchg
aaa
mov
shlb
in
aaa
push
cmp
cmp
cmp
cmp
cmp
jg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
insb
cmp
test
xchg
cmp
int3
cmp
cmp
cmp
adc
xor
cmc
fcomip
cmp
pop
scas
mov
cmp
xlat
inc
dec
decl
cmp
cmp
cmp
cmp
cmp
popf
dec
push
xlat
aaa
std
cmp
cmp
cmp
cltd
mov
cmp
in
loope
jle
push
cmp
inc
cmp
pop
cmp
mov
out
mov
or
pop
sub
xor
aaa
ds
ds
add
cltd
ds
aas
ss
and
jae
js
jge
cmpb
sub
add
pop
fdivrl
jecxz
in
xlat
mov
iret
in
pop
xor
push
cmpsl
mov
mov
xor
xor
popa
xor
nop
xor
xor
xor
xor
pop
xchg
xor
xor
xor
xor
xor
xor
mov
incl
or
adc
jb
lods
ss
ss
popa
xor
das
hlt
incl
or
push
aaa
outsb
cmp
xchg
cmp
xor
or
mov
cmp
in
out
cmp
cmp
inc
sbb
mov
mov
and
dec
cmp
push
inc
mov
xchg
cmp
mov
popf
cmp
repz
cmp
pop
cmp
cmp
lcall
cmp
add
sbb
cmp
jp
cmpb
cmp
mov
cmp
cmp
push
adc
cmp
sub
cmp
cmp
inc
cmp
add
pop
ja
xor
or
lock
mov
les
or
add
adc
psubq
pop
lds
add
mov
fidivrs
mov
mov
fdivrl
daa
nop
stos
mov
mov
repz
testl
imul
lret
add
popf
sbb
or
test
data16
inc
cmp
pop
inc
aaa
pop
sbb
enter
rclb
inc
jb
add
out
stc
sub
test
pop
add
push
out
cmp
add
jb
jb
add
inc
inc
dec
fldenv
and
inc
xor
sub
push
sub
and
add
sub
or
cmp
call
cld
or
and
shrl
mov
push
add
dec
shll
push
aam
shll
cld
or
sbb
ss
shrl
sbb
add
cmp
cmpsb
pop
in
loopne
mov
out
orl
xor
cmp
mov
lcall
mov
test
lcall
fldenv
cmp
xor
push
je
js
dec
inc
and
add
int
cli
add
pop
int
andb
pop
rorl
adc
mov
mov
popa
jns
jne
jae
xor
adc
jge
pop
push
mull
push
push
add
orl
js
pop
lahf
adc
in
xor
adc
js
push
dec
inc
ljmp
orb
imul
push
push
inc
push
xchg
leave
and
insb
and
cmp
sub
and
adc
mull
andnps
add
adcb
push
pop
mov
jge
push
rep
or
mov
jp
insl
loopne
and
jae
adc
push
add
call
push
add
push
mov
sbb
xchg
or
push
xchg
mov
or
xor
push
mov
or
call
cmp
add
fistps
insb
aam
jge
cmp
pop
sbb
pop
int3
xor
dec
in
adc
push
data16
add
cwtl
in
ja
jae
fs
pop
pop
push
jae
pop
in
jne
sbb
sbb
mov
inc
rolb
adc
test
mov
jmp
cmp
lock
xchg
inc
lock
mov
sub
loope
adcl
pop
pop
mov
and
mov
rcrl
insb
inc
dec
sbb
sbb
lds
es
push
bound
jnp
lret
pop
and
or
jo
adc
xor
add
mov
or
push
xchg
xchg
add
fs
insb
xchg
movsl
and
cld
insb
je
insl
dec
add
pop
insl
je
push
adc
dec
cmp
inc
jg
adc
test
lcall
and
mov
or
mov
insl
mov
lret
leave
inc
je
dec
inc
xor
rcrl
cwtl
gs
popa
insl
mov
add
gs
aad
mov
push
in
push
mov
xor
loopne
pop
adc
pop
inc
xor
incl
pop
cmp
lea
xchg
mov
out
add
xchg
push
adc
loopne
mov
sahf
andb
fcomp
dec
sub
pop
addr16
dec
nop
cmp
out
sbb
lret
and
in
xchg
jl
js
insl
adc
cmp
call
fs
sbb
sub
mov
adc
or
add
clc
stc
out
push
aad
dec
pop
push
push
cmp
xchg
pop
push
jno
adc
add
hlt
xor
push
inc
aad
add
adc
lahf
repnz
pusha
mov
xor
cmp
adc
add
pop
add
add
aaa
pop
or
mov
cmc
or
dec
jbe
adc
insb
mov
nop
and
push
in
stos
loopne
adc
xchg
push
pop
cmp
and
das
or
dec
push
nop
das
test
add
je
add
xor
mov
idivl
fisttps
mov
adc
sub
in
mov
ja
lret
lahf
mov
repz
mov
mov
push
sbb
rcll
inc
mov
addr16
mov
or
inc
xchg
adc
popa
sub
lret
mov
outsl
outsb
gs
sub
mov
cs
dec
push
and
pop
mov
icebp
jne
arpl
pandn
loope
js
mov
sub
bound
fs
sti
inc
test
inc
lret
addr16
xor
movsb
aam
adc
adc
je
xor
or
sahf
and
arpl
dec
gs
outsb
sbb
int3
sub
mov
lahf
and
xor
cs
pop
js
dec
fs
push
ds
dec
sbb
push
cmp
inc
sbb
insb
in
popf
incl
popa
aas
std
enter
mov
std
std
mov
sub
or
ficomps
js
push
mov
push
int3
add
cmp
or
sbb
sti
jo
iret
lea
adc
xchg
int3
push
adc
mov
addr16
push
inc
sub
clc
and
test
push
jnp
insl
push
mov
inc
pop
mov
xlat
mov
cmp
je
jp
jne
push
stos
mov
xor
rcrb
jp
or
cs
push
mov
push
push
popf
mov
jmp
sbb
add
push
decl
jne
lock
xor
add
push
loope
or
xchg
call
pushl
xchg
push
in
sbb
fmull
add
je
jo
mov
test
mov
push
lea
and
arpl
mov
pop
ja
push
adc
fadds
pop
scas
bound
cmp
arpl
jb
imul
sub
test
test
fmul
xchg
and
or
adc
js
jo
xchg
int
iret
insb
rcl
jb
sbb
shll
stos
cmc
add
pop
add
sar
mov
inc
mov
cwtl
jmp
sahf
push
pusha
jae
push
jmp
aad
lods
and
fldcw
pop
push
add
jno
lret
mov
imul
add
lret
jb
outsl
add
mov
rol
gs
jae
mov
js
gs
xchg
gs
insb
popa
jne
gs
xchg
outsb
arpl
jb
mov
fmuls
mov
ljmp
pop
xchg
imul
push
add
imul
jo
outsl
gs
cs
sub
push
mov
or
push
cmp
push
xchg
je
and
add
mov
rcll
stc
lods
cs
andb
xchg
dec
inc
fadd
clc
mov
clc
test
adc
nop
movsb
adc
imul
or
pop
pusha
ljmp
insb
int3
and
mov
fs
es
xor
sahf
cltd
lods
pop
sbb
pop
or
fwait
dec
inc
lcall
inc
roll
in
imull
bound
add
sub
pop
call
aam
ja
pop
jmp
roll
jne
push
jns
outsl
aaa
mov
orb
sbb
push
xor
mov
aad
pop
jg
push
push
mov
mov
or
add
sub
push
inc
imul
add
nop
or
insb
data16
in
dec
cli
mov
repnz
andb
mov
mov
dec
pop
add
lea
pop
push
cwtl
cltd
int3
jae
push
mov
and
adcb
adc
add
adc
xor
insb
das
es
loopne
sbb
jne
push
jns
xchg
shlb
or
popf
add
mov
pop
movl
outsb
or
or
add
and
call
pop
out
jnp
int
inc
dec
add
dec
adc
jnp
push
adc
xchg
enter
xor
add
sub
incl
fldt
and
adc
pop
and
sbb
add
test
cmpsl
inc
outsb
adc
add
arpl
cmp
add
or
sbb
mov
adc
inc
and
cmp
add
movsb
mov
in
and
xor
jns
dec
and
aam
add
add
add
loope
fadds
and
push
adc
pop
pop
inc
sub
and
xchg
inc
jo
add
and
and
inc
pushf
xchg
cmpsl
nop
add
and
std
in
in
std
add
and
leave
mov
add
fdivr
in
test
hlt
cld
jns
adc
add
xor
add
add
xchg
push
incb
push
std
test
xor
add
add
sub
add
add
jo
add
or
in
nop
adc
add
add
and
push
and
xor
in
cmp
add
cmp
or
push
add
add
daa
in
jl
and
add
push
add
pop
pop
and
lret
incl
mov
out
dec
adc
add
idivl
adc
jb
outsb
adc
dec
adc
jns
dec
pop
cmp
cmp
cmp
xor
adc
adc
add
mov
xchg
out
nop
dec
xchg
leave
pop
xchg
xchg
cwtl
pushf
add
aaa
add
addr16
test
adc
and
mov
movsb
jae
adc
je
cmp
push
cmp
mov
mov
push
push
sub
pop
stos
popa
push
jne
arpl
inc
aas
inc
mov
stos
xchg
aad
stos
xchg
test
test
push
lret
test
push
add
test
stos
adc
stos
and
sbb
std
push
and
stos
mov
test
sbb
insl
xchg
inc
xchg
out
add
add
das
outsl
test
adc
adc
fwait
pop
fldcw
pop
xchg
pop
stos
inc
push
jae
cmp
mov
ret
daa
mov
lahf
aad
pusha
mov
outsb
jb
and
push
lds
js
inc
push
test
xchg
cmpsb
xchg
test
fsincos
jno
sub
dec
inc
outsl
incl
aad
push
add
insl
dec
jae
cmp
adc
sarl
dec
push
push
mov
xor
leave
mov
mov
sbb
pop
mov
sub
leave
gs
and
xor
xchg
and
pop
add
inc
add
cmp
lret
roll
cmp
sbb
pop
sahf
xor
sub
xor
or
xor
and
es
stos
in
fs
daa
inc
cmp
cmp
sbb
pop
jp
lcall
pushf
push
cmpsb
jmp
mov
pop
mov
mov
adc
xchg
pop
fstl
jl
imul
cmc
leave
add
or
add
sbb
stos
pop
pop
adc
push
loopne
stos
jne
add
ja
stos
xchg
aam
pusha
cmp
inc
jg
add
xchg
push
jo
int
and
dec
jb
jne
jns
stos
adc
scas
je
addr16
aaa
inc
jb
mov
cs
adc
lds
sbb
adc
into
roll
or
in
addr16
imul
lea
daa
jo
mov
rorb
jns
pop
stos
fsubrl
dec
add
sub
je
xor
or
adc
mov
in
aas
inc
cmpsl
fildl
imul
jns
push
or
add
and
sub
adcb
xor
pop
sbb
add
mov
push
jb
int3
pusha
int3
add
xor
jo
sbb
loope
add
and
dec
add
cmovns
out
dec
mov
jae
movsb
loopne
ja
add
ss
aaa
and
add
jb
mov
dec
pop
xorl
xchg
or
testl
xor
jecxz
fwait
jmp
pop
inc
and
xor
jae
int
rclb
and
popa
jns
popa
or
jecxz
push
addr16
pop
mov
gs
imul
out
es
push
sub
sti
adc
or
jae,pn
push
jb
cmp
fnstenv
popa
das
pusha
pop
xor
mov
xchg
insb
popf
mov
adc
dec
or
lds
push
fsub
mov
adc
mov
pop
xor
add
cmpsb
inc
push
sub
int
or
daa
fwait
insb
fmuls
imul
push
daa
jbe
mov
inc
fldenv
fs
outsl
flds
je
and
fcompl
pop
xor
fdivs
pop
adc
sub
lea
and
sub
cmpsl
mov
add
mov
pushf
xor
cmp
push
xor
xor
pushl
xor
xor
xor
xor
icebp
dec
xor
xor
xor
sahf
xor
adc
daa
or
push
cmp
jp
aaa
fisttpll
xor
mov
outsl
cmp
lcall
filds
int3
cmp
cmp
cmp
arpl
xchg
fwait
cmp
cmp
cmp
cmp
mov
mov
jg,pt
xchg
lahf
cmpsl
fstpt
pop
aas
insb
hlt
loop
lahf
mov
lahf
aas
movsl
rcr
aas
aas
jg
test
fwait
bound
jno
jp
mov
fwait
xor
xor
xor
ja
fwait
decl
pushl
fnstenv
in
aaa
xor
dec
mov
xor
xor
jg
cli
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
jge
mov
add
mov
push
ss
ss
arpl
call
ss
push
shll
ss
hlt
incl
and
sub
cs
xor
adc
nop
subb
xchg
add
add
test
mov
mov
adc
sbb
dec
and
cwtl
or
bswap
or
inc
and
test
and
push
xor
add
add
adc
sbb
nop
pusha
push
add
xchg
dec
outsl
jbe
or
loopne
mov
add
add
roll
mov
and
adcb
fisubl
xchg
test
insb
dec
cs
inc
or
cmp
arpl
add
adc
rcll
sub
add
int3
and
xor
clc
add
add
filds
insb
dec
imul
sbb
mov
xchg
push
rorb
add
push
ljmp
jns
sbb
jb
add
js
in
gs
and
nop
push
add
nop
push
fs
or
fcoms
rclb
xor
in
addb
rcl
mov
sbb
pop
dec
dec
add
jecxz
inc
add
add
add
add
or
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
