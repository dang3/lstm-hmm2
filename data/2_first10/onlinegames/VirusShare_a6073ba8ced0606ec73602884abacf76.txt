out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
push
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
or
sbb
sbb
test
jne
pop
xchg
pop
add
cs
rcll
lods
jmp
lcall
cld
push
pop
lcall
outsb
fsubs
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xchg
or
pop
test
inc
add
stos
xchg
and
mov
and
sub
les
push
cmp
cmp
add
dec
es
int
sbb
je
push
pusha
adc
pop
testl
and
sti
leave
std
mov
ret
sub
stos
push
mov
out
inc
pusha
xor
push
add
dec
stc
mov
mov
cmp
imul
add
or
push
mov
int3
inc
dec
sar
vzeroupper
flds
jb
daa
pushf
into
pop
iret
and
daa
addr16
roll
rorb
dec
ja
daa
aad
or
inc
cmp
jb
stc
rorb
adc
xchg
sub
mul
push
and
ss
rclb
or
add
ud2
jno
out
fldcw
and
imul
xchg
cmc
push
cmp
outsl
imull
lret
test
clc
je
jae
pop
sti
mov
mov
shl
xor
jnp
data16
or
push
xchg
dec
mov
pop
mov
addr16
hlt
xlat
xor
stos
push
cmp
adc
push
adc
scas
xor
lods
add
insb
ret
or
js
cmp
or
ljmp
fldt
inc
sbb
imul
imul
nop
addr16
push
push
xor
jl
push
jl
sti
shll
xor
sbb
push
jp
in
insb
xor
adc
fldl
jp
gs
in
outsb
xchg
or
jo
out
call
mov
jmp
cs
pop
jp
imul
out
pop
pop
lock
aas
push
add
cmc
and
inc
mov
or
sbb
xchg
ficoms
cmc
sbb
mov
nop
sub
dec
je
adc
add
pop
or
jo
pop
cli
aad
sbb
adc
sbb
int3
add
inc
fmuls
test
add
add
xor
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
add
xor
mov
lock
xor
or
add
lcall
pop
jo
imul
jmp
cmpsb
repnz
lcall
test
insb
fidivs
into
ret
out
pop
rcrl
ss
imul
cmpsl
fbld
insb
add
outsl
arpl
je
adc
jg
addr16
xor
xor
push
gs
bound
push
jb
jbe
insb
gs
in
lcall
jae
gs
xor
pop
or
add
pushw
subb
imul
add
adc
adc
punpckhbw
bound
gs
mulb
jmp
imul
insl
fs
insl
mov
sbb
xchg
cmp
or
test
xor
push
cmp
sbb
or
lods
mov
inc
dec
dec
aaa
es
push
imulb
fs
insb
dec
push
push
dec
inc
dec
and
adc
loop
inc
sub
add
enter
repz
add
add
dec
pop
nop
inc
add
or
insb
mov
or
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
psadbw
imul
insl
outsl
fs
push
sbb
stc
out
psubq
add
add
je
in
in
inc
outsb
mov
pop
xchg
addr16
jo
test
sbb
mov
sbb
in
daa
lret
pop
cli
fs
in
pop
mov
out
xchg
in
dec
push
imul
push
stc
outsl
adc
add
and
add
dec
ja
or
add
add
adc
int
test
add
pop
in
int3
and
push
xor
pop
mov
sahf
or
dec
pop
enter
inc
ret
adc
add
std
or
add
bound
xchg
or
std
pop
cld
mov
nop
push
add
and
repz
je
mov
loope
arpl
loopne
inc
push
push
pop
andb
sub
daa
dec
arpl
xor
pop
shlb
jle
mov
out
aas
jb
insb
outsl
arpl
sti
add
add
pop
shll
lcall
dec
shll
stos
dec
shrl
in
add
mov
xor
xchg
dec
shll
mov
rcl
lock
lcall
bound
mov
negl
hlt
add
jb
imul
imul
imul
lcall
jb
shrl
cmpsb
xchg
sahf
and
add
imul
cmpsb
imul
mov
sbb
outsb
das
outsb
adc
jbe
jae
outsb
ljmp
or
sti
mov
push
xor
jmp
add
aam
out
add
cmpsb
jmp
adc
add
and
cmpsb
imul
cmpsb
imul
addr16
cmpsb
pushf
cmpsb
mov
xchg
insb
je
imul
shlb
lret
pop
incl
sub
jmp
push
cmpsb
jmp
mov
ret
cmpsb
imul
bound
dec
outsb
je
jb
gs
push
pop
movsl
inc
stc
and
xor
sti
leave
adc
popa
fs
sub
dec
jo
sbb
jb
inc
adc
dec
dec
and
inc
push
and
cld
ljmp
push
data16
bound
dec
inc
push
push
inc
push
inc
pop
dec
shr
sbb
jp
data16
push
imul
mov
inc
jne
push
je
pop
jae
outsl
outsb
jmp
sbb
push
enter
inc
xchg
inc
add
add
add
and
add
in
int
lahf
xchg
add
aaa
nop
cmpsb
imul
push
add
push
pop
push
and
jnp
add
nop
push
pusha
or
and
lret
enter
inc
flds
jmp
add
test
fldenv
popa
fadds
shlb
ja
aas
xchg
sbb
push
adc
xchg
lret
pop
or
pop
mov
insb
incl
and
test
pop
add
dec
xchg
popf
inc
sbb
inc
jecxz
or
sbb
pop
pop
ret
flds
pop
inc
xchg
inc
pop
test
or
pop
roll
das
xor
push
jmp
pop
xor
ud2
push
add
xchg
repz
add
ja
jae
push
packsswb
je
jne
jb
gs
inc
or
push
incl
lods
jmp
gs
add
push
inc
jb
push
and
ja
lcall
ja
or
push
mov
jae
pop
and
addr16
push
insb
mov
xor
push
sbb
repnz
jg
cmc
call
add
call
call
mov
jmp
sbb
or
push
pop
das
fs
call
xchg
sahf
js
outsl
insl
pop
sub
pusha
dec
popa
out
pop
add
call
popa
arpl
data16
je
jo
jnp
inc
in
jb,pn
mov
pop
sub
fldenv
sbb
outsl
gs
xchg
sub
jb
dec
xor
sahf
sti
adcb
dec
mov
out
fucomi
jno
gs
outsl
je
mov
mov
ja
jns
mov
pop
dec
ss
outsb
xor
fcomp
mov
or
or
aas
mov
insl
shl
daa
sub
mov
shll
mov
mov
cs
push
add
adc
test
dec
popa
insl
gs
dec
loopne
outsl
jb
inc
popa
jb
pop
add
ja
jg
mov
mov
add
inc
lock
movsb
adc
mov
mov
cmpl
aaa
and
repz
push
dec
insb
mov
aaa
push
push
push
jg
outsl
adc
lea
mov
clc
frstor
adc
adc
fimuls
rorb
int
or
int
add
sub
xor
enter
add
sbb
test
push
mov
sbb
xchg
incl
lret
pcmpgtd
dec
int3
not
pushf
xchg
call
pusha
pop
clc
sbb
pushf
mov
call
lret
idivb
cbtw
stc
sbb
or
in
add
je
movb
mov
pushf
pushf
daa
adc
cld
jmp
bnd
loope
pushf
and
sub
ja
mov
pushf
outsb
cmc
push
cmc
push
sub
bt
pushf
jb
gs
cwtl
cmp
cmc
push
insb
push
jb
jecxz
jmp
test
rolb
xchg
adc
jmp
iret
xchg
popa
fs
fsub
divl
outsl
insb
and
outsb
pusha
add
jle
aas
out
das
imul
dec
imul
js,pn
repz
pop
or
inc
pop
or
or
and
pop
into
mov
stos
and
shrl
outsb
lods
mov
jns
pextrw
mov
adc
inc
mov
cmp
pop
mov
pop
aaa
pop
add
repz
ret
jg
in
mov
fcmovnb
cmovae
aaa
inc
add
xchg
add
xchg
add
mov
in
sti
dec
decl
imul
inc
movsb
jg
in
sbb
pushf
fstpl
push
add
test
or
jne
mov
push
xor
mov
jg
mov
cmp
je
add
inc
cmp
cmp
pop
jae
out
notl
mov
or
jmp
xor
ret
and
adc
push
push
lahf
out
jle
add
add
les
or
push
rcll
cmpb
push
add
movb
notb
dec
jmp
jne
push
call
pop
jne
xor
jmp
mov
push
shl
stc
ret
icebp
pop
jnp
mov
lea
jp
jnp
cmpl
testl
cmc
pop
lea
push
sub
push
lea
mov
adc
mov
xlat
sbb
jg
add
mov
mov
pop
sbb
in
pop
leave
ret
dec
adc
call
ljmp
dec
pop
sbb
fidivrs
dec
loopne
cld
push
push
movl
imul
pusha
adc
fisttps
dec
xor
out
jle
inc
in
jne
call
incl
pop
add
sti
lcall
push
cmp
test
adc
arpl
ds
xor
mov
pcmpeqb
mov
repnz
nopl
inc
and
sub
repnz
and
mov
ret
add
orl
stc
pop
into
ds
jmp
adc
and
jmp
jnp
cmp
sbb
pop
jmp
adc
mov
pop
push
sbb
aam
in
lea
cmc
adc
aaa
insb
mov
loopne
shr
sub
ret
inc
adc
mov
ja
sbb
xor
push
cmp
adc
dec
push
add
xchg
push
xor
xor
in
mov
xor
inc
sub
je
inc
sub
adc
divl
andl
dec
ja
iret
push
adc
repz
call
mov
addr16
cld
and
add
ret
insl
hlt
push
bnd
xor
sti
je
jmp
push
ds
mov
cmp
lcall
lock
mov
jle
jg
in
adc
gs
add
jg
icebp
push
adc
mov
sbb
push
xlat
add
push
fmull
data16
sbb
pop
loopne
adc
lea
sahf
mov
sub
sub
jbe
sub
push
add
push
jmp
or
ficomps
nop
cmp
test
sbb
into
mov
dec
out
in
out
sub
negb
mov
mov
push
lock
xchg
imul
or
or
incl
mov
add
mov
fildll
mov
insb
and
sbb
push
movzbl
mov
mov
or
jo
fldt
clc
add
mov
andb
mov
or
push
in
or
fstpt
dec
inc
pop
sbb
jl
push
aaa
adc
mov
mov
nop
and
xchg
push
mov
and
nop
jl
test
add
jbe
repnz
add
add
xchg
dec
test
pop
mov
push
add
rcll
add
shrb
notb
adc
mov
or
pushf
test
add
ljmp
push
dec
cmp
lret
add
push
pop
jne
mov
inc
jle
push
sbb
and
adc
pushf
out
jo
and
sbb
sbb
and
mov
outsb
push
enter
pop
adc
addr16
jne
or
mov
js
add
loope
call
mov
cmp
jg
add
jge
push
push
push
sbb
jmp
add
push
push
and
push
push
ret
cmp
xor
das
mov
sbb
call
push
int3
adc
push
and
fnsave
mov
dec
adc
ljmp
xor
in
jge
movsl
add
mov
movsb
mov
sbb
fidivs
mov
mov
rep
jb
push
xchg
dec
fs
jecxz
mov
or
sbb
mov
mov
dec
pop
mov
mov
or
dec
mov
cmp
sarl
push
mov
add
not
xor
xor
cmp
in
flds
pop
or
sbb
cmp
jge
add
mov
ja
push
xchg
adc
mov
xor
and
mov
es
push
xchg
push
sar
ret
mov
adc
cmp
jb
pop
pop
pop
test
mov
aaa
or
call
stc
add
inc
dec
jo
and
in
enter
and
xchg
adc
add
push
repnz
and
and
cmp
stc
cmp
dec
jl
and
js
and
nop
dec
enter
and
inc
shll
adc
and
mov
and
push
ficoml
movsb
mov
pusha
dec
leave
pop
repnz
and
and
nop
cmp
aas
and
cmp
test
adc
mov
xor
push
mov
jnp
jne
sub
adc
xorb
rcll
sbbl
adc
adc
mov
inc
push
adc
in
jae
adc
ficoml
adc
cmp
sarl
outsb
jg
mov
push
push
in
fisubrs
xor
jne
fiaddl
add
lock
and
popf
sahf
fdivs
es
rdmsr
adc
jns
or
test
imul
divb
negl
outsl
and
xchg
jmpw
push
cs
fs
ja
imul
or
cmp
shlb
mov
jnp
ja
lret
in
in
sti
push
xor
xlat
and
ret
dec
iret
cmp
jge
lods
hlt
or
clc
jle
push
cmp
jle
pop
jmp
mov
mov
cmp
ja
push
call
cmp
test
pop
je
sbb
movsb
mov
loope
mov
push
and
jne
cmpl
daa
fistpl
fucomip
mov
cmp
or
sbb
push
addl
cld
cmp
testb
stos
addr16
jmp
popa
hlt
add
sbb
sbb
sahf
inc
cmp
mov
imul
cltd
jmp
aas
mov
cli
fcmovnb
add
rcll
adc
sar
fildl
ja
xor
adc
ja
imul
inc
sub
mov
push
jp
ljmp
lods
sub
movzbl
and
inc
mov
stc
das
test
jne
cmp
lods
rcrl
fistl
call
push
or
inc
cmp
jne
or
sub
outsl
pop
pop
rorl
adc
dec
leave
or
fwait
sti
push
jg
shr
fistpl
or
and
inc
test
jne
ret
add
ret
test
je
mov
shr
xor
test
cs
and
mov
push
in
icebp
or
test
je
cs
pop
xchg
rorl
and
push
jne
loope
or
mov
and
xchg
adc
adc
out
or
jne
test
jp
loope
sbb
aad
je
cmp
cltd
stc
add
adc
push
pop
sti
inc
imul
push
sbb
out
add
mov
and
jg
imul
rorl
repnz
adc
rorb
ss
fidivl
cltd
test
jae
in
inc
je
add
sub
mov
lods
add
adc
pop
subl
aam
mov
add
sub
cmpb
inc
jne
loop
or
add
jmp
lock
xchg
lods
jl
add
mov
sarb
add
pop
shlb
push
ret
add
loop
out
or
loopne
push
je
add
cmpb
pop
jmp
xor
and
popf
enter
testb
jnp
jmp
adc
add
xor
mov
shr
cld
or
sub
pop
ljmp
pop
inc
idiv
call
cmp
call
inc
jmp
andb
add
test
cmp
or
or
adc
shlb
adc
adc
dec
shlb
adc
adc
adc
ffree
dec
pop
fildl
ja
xchg
fsubrl
sub
or
cltd
mov
shlb
adc
adc
adc
adc
push
cwtl
pop
sbb
call
jae
push
inc
mov
cmpsl
adc
stos
je
jp
jp
test
add
pop
ja
xor
mov
cmpb
jne
xchg
sti
xor
enter
add
movsl
jg
sub
orl
idivb
inc
sub
and
or
out
mov
and
add
push
mov
adc
inc
jge
and
lods
incb
shr
lea
stc
jae
decl
out
lea
ds
or
je
inc
push
mov
in
sbb
movsl
sbb
pop
mov
dec
push
pop
jne
adc
mov
lea
sbb
iret
jo
mov
sub
loop
rcll
cli
or
and
xor
inc
push
lahf
push
pop
pop
decl
mov
pop
aas
xchg
inc
and
bound
push
xchg
pop
jbe
or
cmp
mov
not
and
push
jl
and
or
add
lea
js
xlat
sbb
ljmp
or
mov
add
repnz
not
and
rcr
decb
testl
mov
xchg
test
cs
push
js
add
push
aam
cs
in
test
inc
fisubs
fimull
add
lea
mov
out
xadd
adc
pop
inc
sub
mov
and
in
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
ljmp
mov
fildll
sub
xchg
sbb
fstpt
mov
push
lods
loop
mov
push
sbb
icebp
jle
not
and
sarb
or
adc
movb
mov
fidivl
add
loopne
mov
sbbb
or
mov
pop
adc
sbb
inc
xor
and
and
jecxz
testb
sti
sbbl
int3
xor
add
sub
xor
out
or
and
cli
sbb
les
repz
xlat
rolb
fcomp
cwtl
subb
addl
repz
not
fisubrs
jbe
popa
jnp
adc
pop
scas
testl
sti
mov
pop
les
adc
sbb
pop
push
loop
mov
repnz
sub
fdivs
add
frstor
mov
pop
mov
inc
pop
xor
les
adc
sbb
or
xor
ja
sub
or
or
xchg
jno
std
stos
fdivrs
xchg
and
outsb
pop
push
fidivrs
pop
aaa
fmull
out
das
push
mov
cmpsb
pop
mov
xor
add
sub
xchg
cmp
ret
popa
adc
cs
jecxz
and
mov
ret
mov
push
mov
and
aad
aam
mov
out
mov
bound
sbb
movl
loopne
lret
repz
inc
mov
rclb
push
fadds
inc
imul
hlt
push
and
clc
jb
xchg
out
fstp
repz
pop
pop
es
adc
repnz
shll
and
fsubs
out
call
lock
imull
mov
mov
hlt
pop
adc
call
pusha
mov
lods
xlat
lods
mov
in
cld
mov
adc
inc
add
jo
and
in
pop
test
out
fcoms
push
clc
cmp
into
pushf
jecxz
mov
fnstcw
shll
out
adc
scas
add
mov
mov
mov
out
loope
cld
xchg
xor
loopne
ret
inc
enter
mov
ret
mov
push
mov
popl
mov
int
cld
cwtd
xlat
sbb
push
and
insl
cmp
gs
jnp
jns
call
inc
loop
shr
or
mov
fdivs
test
imul
in
mov
mov
mov
push
and
sub
mov
sbb
add
adc
movl
xchg
dec
fisttps
fidivrs
mov
adc
or
jge
test
pusha
sbb
mov
sub
test
xor
mov
leave
test
xchg
mov
cs
js
lds
popa
popf
insl
outsb
aaa
mov
adc
inc
sti
xor
mov
repnz
and
or
in
mov
outsb
fcomip
xor
mov
fs
push
sbb
xchg
mov
movsl
imulb
cltd
jb
repz
jb
lret
sub
int3
pop
pusha
dec
mov
out
jno
cli
xor
ds
mov
jae
lock
out
or
mov
jle
sub
jae
mov
add
out
mov
lock
out
das
pop
dec
mov
mov
fidivl
cmc
mov
test
out
aam
xchg
jae
adc
mov
xor
mov
add
or
mov
jbe
push
aas
sbb
cmp
rcl
mov
out
jbe
les
in
mov
cmp
pop
ss
in
clc
jl
pop
je
sub
pushl
or
jge
clc
cmp
lods
les
xor
mov
mov
insb
sbb
stos
mov
stos
rcrb
sbb
mov
inc
in
sbb
jns
loope
jl
inc
int3
or
inc
push
or
movsb
mov
jns
and
repz
jb
hlt
cmp
sub
cltd
or
les
aas
cmp
pop
pop
or
stc
push
sbb
rcrl
fisubrs
xchg
int3
or
push
or
ja
jno
dec
insl
data16
jge,pt
out
call
unpckhps
mov
adc
rcrl
test
sub
jmp
dec
xor
in
out
loopne
scas
dec
jle
outsl
jecxz
jp
addb
xor
outsb
repz
fistpl
loopne
sub
jecxz
jp
sti
ffree
cmp
mov
add
add
ja
mov
div
out
cmpb
lds
jp
in
dec
arpl
sbb
repnz
imul
loopne
mov
fwait
in
xor
aam
rcl
sub
getsec
pop
mov
repnz
repz
rclb
shl
jmp
xor
mov
pop
jge
pop
cli
lret
out
xlat
pop
add
pop
movsb
mov
lods
fstl
inc
or
or
pop
sarb
xor
mov
mov
mov
mov
mov
cmp
jl
push
pop
sub
push
push
push
daa
mov
data16
nop
sub
test
cmp
fs
xlat
adc
adc
outsb
lea
xor
pop
pop
inc
test
nop
iret
pop
pop
mov
mov
in
sti
push
ror
or
add
sbb
rcrb
jne
and
inc
or
ljmp
add
icebp
jne
scas
mov
xor
jg
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
pop
sub
xchg
mov
test
adc
scas
inc
sahf
outsl
fcmovnu
jl
add
jg
adc
inc
cmp
fdivs
jp
jbe
mov
pop
gs
xor
pop
mov
andb
repnz
mov
xor
jnp
dec
fdivr
sub
dec
addb
jno
lea
sbb
les
out
mov
popf
lret
add
stos
pop
pop
push
aaa
or
fistl
cmp
sub
jne
push
lea
and
mov
adc
add
test
jne
and
add
push
add
cld
js
test
call
fldt
scas
mov
xchg
push
mov
pop
jbe
lea
pushl
fsub
imulb
iret
inc
je
cld
dec
cmp
out
or
testb
mov
push
call
inc
pop
adc
add
pop
adc
sbb
lods
jnp
int3
push
loopne
pop
int3
rolb
xorb
aam
call
shlb
test
in
push
pusha
and
ljmp
repz
in
out
or
call
gs
iret
out
das
lock
jo
hlt
gs
rclb
ljmp
into
pushf
mov
mov
cmp
or
jle
and
or
call
xlat
insb
jnp
and
lods
mov
mov
lods
mov
dec
inc
mov
lods
cltd
into
add
outsb
les
ss
fmull
inc
dec
test
cli
enter
lcall
jge
push
adc
fistl
push
ds
push
cs
movsl
mov
out
push
std
jb
pop
out
push
lock
icebp
inc
repnz
mov
std
mov
xor
jo
hlt
push
pop
push
push
cli
pop
add
in
xor
repz
push
sub
shll
ficoms
pop
enter
add
rcrl
or
inc
or
cltd
loopne
inc
decb
out
adc
xor
cmpsb
cmp
lahf
cmc
adc
stc
push
mov
cmpsb
jbe
cmpb
je
outsl
add
mov
popf
lock
loopne
adc
push
cwtl
in
xor
push
int3
or
xor
ret
lret
pop
push
mov
push
je
push
pop
xchg
test
xor
mov
cwtl
por
repz
cmp
mov
popa
and
inc
lea
mov
ret
cltd
adc
add
adc
inc
sbb
xor
outsb
push
xchg
nop
jae
jo
xor
or
cmp
mov
add
hlt
push
shlb
mov
fldt
pop
call
cmp
jmp
inc
mov
sub
mov
jb
outsl
aam
xlat
pop
idivb
enter
add
pop
aad
outsb
mov
repnz
idivb
sbb
pop
fstl
push
andw
mov
xchg
popf
xor
mov
pop
jb
bound
rol
out
sub
cmp
mov
subb
in
pop
add
dec
dec
pop
cmp
pop
push
xchg
sbb
lods
arpl
pop
ja
cmp
shll
cmpsb
push
pop
lods
shld
or
or
loopne
sbb
pusha
add
cmp
sbbl
addl
jnp
mov
inc
add
pusha
pop
cmpsb
and
fwait
sti
push
push
push
sbbb
inc
xor
aaa
sti
loope
lock
cmp
call
ret
adcl
add
adc
cmpl
adc
clc
inc
push
pop
cld
call
lcall
mov
int3
mov
inc
xor
dec
mov
dec
aas
or
xor
daa
fldl
sbb
mov
xchg
xchg
inc
call
outsb
test
xor
sbb
loope
je
js
push
testb
loopne
or
inc
add
mov
push
iret
enter
int
cmpsb
sub
add
jle
les
jbe
pop
stos
pushf
add
int3
std
std
adc
xor
arpl
push
or
enter
dec
xor
in
jae
or
das
cmp
fsubrl
cmp
fadd
leave
add
sub
inc
test
pop
xor
mov
add
andb
insb
je
subl
mov
shll
mov
mov
shrb
xchg
in
push
push
push
nop
xchg
insb
mov
test
adc
mov
cltd
and
jo
shlb
cmpsb
push
or
xchg
sbb
jne
mov
and
push
mov
call
dec
mov
and
pusha
cmp
pusha
or
or
inc
mov
frstor
pop
add
std
or
mov
mov
jle
insb
mov
jl
cmp
psadbw
sbb
mov
addr16
cmc
or
pushf
inc
push
rolb
jge
decl
int3
cmp
mov
aaa
dec
jne
cmpl
inc
mov
cmp
je
jo
popa
scas
lea
int3
aaa
data16
and
std
sti
fwait
or
notb
pop
adc
mov
pop
call
call
push
mov
cmpb
adc
movsl
mov
adc
cs
cmpsl
jecxz
in
push
idiv
xchg
adc
jmp
dec
dec
sbb
negb
xchg
shlb
sbb
loope
imul
dec
inc
shll
push
in
jbe
jmp
push
push
pusha
stos
or
in
jecxz
jo
push
push
sbb
jg
leave
cs
data16
lods
push
insl
mov
in
mov
ja
cmp
mov
mov
mov
mov
mov
mov
mov
mov
in
push
rcl
js
shlb
imul
pop
fsubrs
and
fcmovu
gs
data16
loope
gs
pop
in
int3
push
mov
pop
out
sub
jo
jle
jae
lcallw
outsb
je
insb
or
shll
xlat
ret
rol
add
xor
ror
leave
lret
cmp
int3
hlt
shll
jb
push
xchg
xchg
mov
mov
cltd
lcall
jnp
fldt
mov
mov
mov
mov
mov
cmpsb
xor
cmpsb
imul
divb
jmp
idiv
ds
hlt
cli
jns
lea
mov
test
je
mov
cmpsb
or
fsubs
repz
es
xor
xchg
xor
lret
pop
les
mov
nop
fcmovne
jmp
shrb
pop
out
ds
jno
fsts
lcall
jmp
dec
rcrb
xchg
gs
xchg
adc
sahf
cmpsb
inc
enter
pop
push
inc
shrl
out
fsubrp
jge
shrb
clc
adcl
inc
jge
sti
movsl
into
dec
xchg
fs
dec
ret
ds
push
mov
loopne
into
imul
xor
scas
fcoml
sbb
daa
inc
lds
inc
sub
nop
jmp
aaa
sbb
dec
sbb
insb
sbb
add
or
mov
adc
cmp
aas
mov
call
repnz
sti
rcrb
in
add
rorl
sub
rcrl
addb
add
lds
bound
push
and
jne
sub
mov
mov
fld1
or
fadds
jae
aad
popa
cltd
fdivrs
pop
or
or
or
push
daa
lock
arpl
mov
and
dec
sarb
mov
mov
outsb
adc
sbb
mov
mov
ret
mov
inc
andl
dec
or
or
sub
adc
jno
popa
sbb
adc
adc
je
push
and
dec
sbb
add
lock
data16
rol
push
lcall
cmp
aam
aad
call
fwait
or
fcoml
xor
push
push
jne
fucom
shll
adc
dec
mov
pmullw
mov
lods
test
sbbb
push
outsl
add
or
pop
test
testl
cmpl
add
push
mov
cmp
jmp
imul
fcoml
pop
add
clc
std
jl
xchg
cmp
pop
xchg
insb
xchg
pusha
and
cmp
adc
cmp
adc
push
cld
mov
cmp
bound
in
mov
mov
sbbl
inc
mov
mov
pop
js
fdivl
loopne
inc
push
push
push
dec
faddl
jnp
sub
inc
adc
stos
mov
cmp
add
mov
sub
or
adc
mov
les
inc
orb
xchg
push
and
xlat
jmp
cli
or
fs
ss
je
call
sbb
and
dec
jb
push
lret
ds
xor
fsubrl
loopne
or
mov
ret
in
fisubrs
pop
xchg
fisubs
loopne
mov
test
mov
int3
dec
int
cmpsb
mov
into
jp
imul
cmpsb
imul
sub
int
fsubs
ja
fildl
mov
pusha
rcr
fidivs
fbstp
or
xor
xor
xor
pusha
shll
std
cli
sti
cld
std
insl
jmp
lcall
mov
add
mov
mov
lcall
mov
imul
pop
nop
xor
enter
pop
lret
outsb
mov
out
mov
cmpsb
mov
jmp
lcall
je
lcall
add
dec
aad
mov
cli
mov
daa
ret
mov
addr16
dec
lock
aam
shr
or
in
cld
mov
xor
pop
add
cs
pop
push
hlt
pop
push
nop
gs
mov
in
sbb
sbb
sbb
mov
scas
push
adc
pusha
andl
dec
cli
or
ror
push
xor
shll
imul
shrl
fs
cmpsb
pop
lock
bnd
ss
rorl
cs
insb
je
xchg
jmp
pop
and
jo
or
xchg
add
push
or
cmp
movsl
enter
inc
loopne
jb
je
fistl
fsubrl
sbb
push
and
lret
test
mov
or
pop
and
int3
idiv
mov
loop
inc
int
jo
dec
sarb
xor
das
mov
pop
xchg
inc
mov
and
sbb
hlt
cmp
ret
adc
call
addl
in
xchg
pop
mov
movsb
xor
xchg
clc
lock
jge
cmp
and
jbe
data16
fldl
or
push
or
and
jns
int
sbb
clc
inc
mov
enter
in
stos
push
dec
lock
enter
sub
notb
movsl
mov
adc
fcomp
sub
push
or
jne
mov
and
fidivrs
xor
xor
ret
hlt
xor
add
movsb
or
mov
stos
inc
xor
mov
pop
idivb
bound
pop
testb
push
push
daa
pop
push
and
jo
cmp
mov
pop
cwtl
pushf
nop
mov
cmp
negb
jmp
or
or
mov
push
mov
sub
scas
jmp
sbb
mov
adc
call
inc
mov
add
cltd
mov
adc
inc
cli
outsl
inc
aaa
mov
inc
and
rcr
sbb
clc
clc
cmc
adc
sarb
shl
bts
inc
add
lret
into
add
fiadds
ror
push
push
add
cmp
aam
jmp
cmp
or
outsl
das
std
or
loop
and
push
stos
or
and
xor
and
cmpsl
push
lods
sbb
maskmovq
testl
call
adc
jbe
adc
sbb
divb
mov
add
pop
add
mov
cltd
idiv
mov
inc
jnp
jne
push
divl
adc
add
add
push
loop
fsubs
call
adc
jecxz
sahf
out
loop
add
push
jecxz
xor
sbb
cld
lret
add
idivl
pop
or
xchg
daa
pop
xlat
push
push
jae
loopne
aam
add
jmp
ret
cltd
mov
dec
les
dec
inc
aad
data16
add
in
xchg
sub
pop
movsb
out
or
movsl
iret
out
outsb
mov
push
xlat
add
rol
sub
mov
mov
add
pushf
not
mov
js
pop
mov
test
jnp
and
mov
pop
pop
push
or
mov
fcomip
lret
inc
inc
ret
lahf
mov
mov
mov
test
outsl
push
mov
mov
jns
ja
movsb
xchg
cmp
or
ds
jo
inc
add
mov
and
adc
sub
mov
add
xchg
jo
jb
rcl
outsl
jae
imul
sub
cmp
or
aas
daa
pop
ss
dec
decb
aas
cmp
xor
adc
stc
add
outsb
or
stos
inc
out
pop
xor
lods
cmpsl
adc
lret
mov
xor
xorl
test
jns
mov
call
sub
add
xor
xchg
mov
and
jae
arpl
sub
xchg
inc
add
xor
and
adc
addr16
out
push
addr16
pop
xchg
gs
ljmp
in
out
insb
xor
out
cmp
xor
shll
cmp
xor
insl
cmp
mov
stos
xchg
lret
movsb
lea
pushf
rol
bsr
mov
ror
mov
adc
cmpsb
fbld
sub
cmc
pushf
cmc
lret
xor
push
push
aad
mulb
and
or
push
pushf
out
add
adc
and
inc
jb
dec
div
out
inc
jae
xchg
daa
push
jmp
mov
inc
clc
mov
mov
cmp
jb
vpminsw
add
rcr
shlb
pusha
mov
cmc
cmp
ret
mov
test
adc
out
pop
mov
and
out
add
mov
jne
lock
push
lcall
jle
mov
inc
rcrb
out
fadd
pop
push
mov
cmpsl
lahf
test
ficomps
jmp
out
cmc
jl
xor
pop
scas
cmp
test
sbb
test
into
pop
ja
xlat
lcall
and
into
mov
cmp
xchg
js
mov
lds
jmp
test
enter
aaa
adc
call
test
outsb
cmpl
push
cmp
pushf
push
ds
scas
sbb
cmp
cld
xchg
dec
xchg
push
inc
xchg
or
mov
xchg
or
push
std
ret
in
sbb
sub
neg
jbe
out
cmc
cmc
jmp
mov
inc
std
inc
adc
jae
or
mov
mov
push
cmpsl
stos
fcmovne
add
adc
push
shrb
insl
fwait
mov
and
or
push
test
push
or
rcrl
test
test
add
nop
or
pushl
into
inc
and
mov
pusha
sub
mov
gs
mov
push
pop
jle
daa
loopne
shrl
je
jbe
jo
into
fldt
call
pop
lock
test
cwtl
cmp
jmp
jno
lods
jmp
or
push
xor
sahf
lock
loope
mov
test
int3
ret
mov
jp
pushf
mov
jmp
movsl
call
push
dec
ds
loope
test
cmp
jae
repz
cmp
enter
cmp
out
sti
test
lret
and
fiadds
xor
test
cmp
nop
and
cmp
cmp
add
xor
js
jo
sbb
xor
call
dec
in
pop
mov
pop
je
sbb
rcrl
sbb
jae
jl
div
call
repnz
mov
add
add
xchg
cmp
pushf
and
iret
movsb
jb
add
xchg
mov
inc
add
jecxz
fldcw
cli
adc
loopne
cmp
out
or
adc
sbb
gs
std
add
lock
add
mov
jae
sbb
sarb
jecxz
aad
dec
cld
push
stos
sbb
sti
push
icebp
aaa
aaa
cmp
jne
adc
and
dec
repz
push
rorb
inc
in
stc
aas
sahf
mov
and
jmp
adc
or
cli
sub
mov
ds
xor
pop
stc
xor
mov
stos
sbb
jno
pop
ja
pop
add
cmp
ret
adc
sahf
sub
mov
js
xor
shll
inc
add
mov
clc
outsb
mov
xchg
fsubp
aam
sbb
fadd
and
or
push
xor
clc
in
call
pop
xchg
nop
cmp
dec
xor
adc
mov
xchg
lock
jmp
jmp
jle,pt
and
add
movsb
mov
mov
je
std
adc
gs
mov
mov
sbb
lcall
mov
inc
fisubs
and
lcall
fcom
adc
push
push
sub
popf
insb
cmp
sub
push
xor
adc
popa
mov
in
call
stc
in
xor
xchg
fcompl
dec
inc
into
adc
jle
movsb
xchg
int3
cltd
insl
cmpsb
leave
pop
jle
repnz
mov
add
inc
in
addb
xlat
iret
mov
inc
sbb
xor
jmp
insl
xor
jge
lods
mov
add
fidivrs
cmp
and
inc
iret
mov
data16
pop
xor
lret
sub
out
and
cmpl
inc
add
mov
sar
sbb
arpl
cmp
data16
bound
inc
sti
sbb
pushf
xor
or
jle
daa
push
xlat
cmp
and
jp,pt
insl
out
and
cmpsb
or
xor
sbb
inc
insl
test
pop
xchg
test
or
je
pop
push
fsub
and
and
rcr
das
inc
xchg
lret
and
lock
call
scas
or
leave
push
sbb
cmp
and
mov
mov
sub
gs
mov
and
call
rcl
cmpsl
cmp
fs
outsl
outsb
insl
int3
out
fs
xor
xor
pop
lcall
jmp
mov
movsl
js
pushl
cld
cwtl
sbb
rolb
pop
dec
cs
fs
pop
adc
insb
jns
shl
push
cmp
mov
adc
je
lock
jmp
push
addr16
test
clc
mov
add
mov
pop
pop
ret
pop
add
add
mov
dec
shlb
adc
in
das
in
and
call
shll
adc
fstl
das
sbb
or
ret
divb
sub
jno
stc
mov
stc
jne
hlt
xchg
push
sbb
test
pop
pop
xor
cmp
nop
adc
ja
into
and
and
je
movsb
jbe
sbb
or
pop
pop
hlt
jge
sbb
jg
call
orl
fdivrs
fidivs
dec
jne
fsubs
cmp
fcoml
cmpsb
and
push
mov
inc
mov
scas
or
and
push
je
insl
es
add
sti
push
add
sbb
add
scas
jmp
mov
add
jp
scas
add
push
clc
inc
push
nop
arpl
add
int
lcall
mov
cmp
mov
sub
mov
add
rcl
fcomp
push
mov
mov
call
inc
shl
add
int3
shrd
rcrl
sbb
adc
lock
inc
ljmp
xor
out
dec
scas
and
push
adc
sub
or
rclb
nopl
je
adc
stos
movb
sbb
lock
adc
fwait
cmp
inc
jo
or
add
mov
pop
mov
and
adc
add
cltd
and
test
sub
adc
fldt
mov
inc
mov
incl
loop
outsb
je
xor
aaa
das
dec
lock
fnsave
sbb
pop
push
lods
push
ret
bound
rclb
or
es
add
sub
push
xchg
jno
push
xor
push
sub
mov
call
dec
shll
cs
and
xor
insb
jns
xchg
and
xor
xchg
gs
jae
fs
insb
or
call
pop
xchg
dec
outsb
je
push
jb
lcall
adc
mov
pop
cmpsl
push
gs
push
mov
push
lods
lods
out
dec
je
lret
mov
je
dec
jo
mov
pop
mov
inc
push
gs
mov
fwait
shrb
roll
xor
mov
aam
mov
insl
mov
lea
mov
enter
es
insl
lcall
xchg
inc
imul
fldenv
fcmovnu
push
fstl
lcall
loope
loop
in
test
out
mov
xor
mov
jb
mov
cmpsb
pop
xlat
or
mov
mov
mov
pop
fstps
or
sbb
and
and
ja
and
or
daa
sbb
lret
std
inc
cmpsb
or
clc
adc
push
mov
imul
cli
mov
jne
imul
xor
fsubs
cmp
insl
shrd
push
or
test
pop
inc
add
and
mov
xlat
mov
je
push
adc
mov
imul
inc
mov
inc
fsubrs
dec
cmpsb
insl
mov
sub
or
movsb
or
adc
cld
repz
adc
rcr
add
test
jl
test
jo
or
popa
or
fmuls
sub
add
jle
sub
jne
push
dec
xor
add
add
cmpb
loopne
inc
aaa
sbb
jo
cmp
lsl
sbb
inc
sub
adc
pop
pop
push
or
or
pop
fadds
jo
jne
jl
xchg
xor
aad
add
dec
fstl
sbb
or
or
jmp
popa
add
or
sahf
popa
add
mov
sbb
outsb
and
sahf
je
sbb
or
inc
iret
fdivrs
push
stos
das
rolb
outsl
pop
lret
sbb
pop
jae
je
je
inc
mov
out
and
clc
xlat
out
push
xor
sbb
fstps
sub
stc
mov
clc
bound
xor
pushf
xor
jmp
jle
and
mov
adcl
inc
mov
push
popf
or
inc
jg
aas
sbb
repnz
in
xor
pop
mov
mov
jmp
adc
push
cmpsb
xor
sub
push
mov
push
scas
popa
arpl
imul
dec
shll
jo
jae
shll
jae
pop
mov
andb
fmull
jmp
insb
cwtl
mov
aad
sbb
mov
xchg
cmp
sbb
sbb
or
nop
cs
pcmpeqd
mov
dec
inc
mov
fwait
out
inc
or
neg
sbb
add
inc
jo
adc
xchg
outsl
lea
inc
rorl
pop
je
lret
nop
cmp
pop
or
jl
je
or
adc
or
leave
shll
pushf
add
je
sbb
in
mov
add
jl
xchg
loopne
in
jle
adc
adc
xchg
dec
inc
or
jmp
cmp
sub
aaa
lock
jmp
aas
adc
add
xor
pop
out
sbb
pop
es
in
sti
in
add
rol
fisubrl
insb
shlb
sub
popa
arpl
sub
je
outsl
outsb
je
mov
lret
gs
insb
outsl
arpl
xchg
pushf
sub
jne
dec
mov
mov
popa
sbb
js
or
jne
scas
push
push
cmp
ds
pop
movsl
into
ret
cmp
add
call
jae
adc
jle
or
pop
fs
shlb
sub
sbb
or
cs
or
or
repz
pop
clc
push
pop
jno
push
adc
mov
adc
add
jb
add
jnp
mov
jge
mov
add
bsr
or
mov
pop
fildl
or
push
mov
lock
insl
push
mov
mov
sbb
outsb
ss
and
sub
push
push
cwtl
add
jb
mov
mov
push
cmc
xchg
outsl
or
adc
adc
xchg
jae
call
pop
pop
push
popf
jp
mov
xor
sub
pop
nop
adc
movsb
and
rolb
aas
popa
arpl
shll
lret
je
sub
bound
popa
xor
xor
shrl
gs
xor
jne
and
cmpb
shll
les
imul
enter
lret
shll
int3
int
into
iret
sub
dec
rcl
rcl
xchg
aas
dec
inc
lret
mov
arpl
outsl
xor
shll
cmp
xor
shll
jns
jo
or
cmpsl
push
call
and
pop
sub
imul
lcall
fidivs
jo
je
add
and
mov
int3
jmp
or
jmp
mov
jmp
movsb
jge
std
mov
rclb
dec
mov
sbb
sahf
mov
jecxz
adc
insl
push
push
mov
test
call
test
popf
fdivrl
pop
fsts
lea
mov
lcall
pop
arpl
ja
add
push
sbb
push
int
inc
pop
stos
addr16
lcall
stc
mov
imul
cmp
mov
mov
out
xor
cmp
mov
insb
imull
xchg
fldcw
jb
lret
xlat
or
xchg
fmul
xchg
xchg
and
mov
into
sbb
cltd
je
mov
out
mov
sub
loopne
add
mov
mov
push
or
add
lods
pushf
push
mov
jge
mov
ss
pop
mov
adc
insl
jl
mov
call
popa
dec
add
inc
mov
add
cmp
out
mov
or
mov
out
iret
cwtl
adc
add
pop
outsb
jnp
jge
outsl
push
or
leave
adc
xor
loop
adc
inc
movsl
cmp
mov
shl
jae
loopne
sub
aas
cmp
push
in
xchg
pushf
pushf
adc
xor
and
insl
shll
cmp
dec
jae
aad
sbb
std
push
jo
gs
cmc
orb
daa
addb
jg
fwait
in
std
cld
in
mov
nop
std
insb
out
jns
lcall
addr16
or
mov
mov
lea
pop
cld
mov
add
add
dec
push
aad
leave
nop
adc
mov
mov
add
fldl
fsubs
cmp
xchg
and
cmc
push
fs
data16
push
push
call
call
cs
lods
or
add
ss
xor
or
lea
add
cmc
add
cltd
pop
jp
jl
pop
call
sbb
mov
fldcw
jne
push
fs
in
repz
sbbb
imul
pop
pop
add
mov
add
nop
xchg
mov
sbb
sbb
dec
cltd
ficomps
out
add
pop
jb
xchg
cld
arpl
push
xor
nop
adc
cmc
inc
xor
hlt
and
mov
sbb
inc
adc
std
repnz
add
cmp
add
test
aad
jg
icebp
sbb
mov
leave
popf
jg
and
out
push
xorb
sub
outsl
out
es
prefetchwt1
jle
pop
mov
inc
lea
jmp
and
and
inc
es
and
push
sub
jl
decl
mov
fcomps
xor
into
test
jle
add
dec
xorb
or
jge
push
add
sub
push
jo
add
dec
jle
xor
mov
ljmp
push
rolb
fsubs
xor
enter
mov
lock
xor
inc
pop
stos
adc
mov
into
insb
lods
xor
arpl
sarb
addr16
jecxz
test
mov
cs
xor
mov
out
sbb
cltd
cmp
and
mov
and
jge
scas
mov
lret
sbb
xor
outsl
push
lock
je
sub
clc
push
xchg
sbb
xchg
or
int3
jb
jle
jmp
inc
push
shlb
int
shlb
jge
dec
ffree
arpl
out
xor
push
push
push
or
mov
push
orl
in
cmp
pop
test
sbb
push
pushf
jbe
call
sub
das
sub
mov
jbe
das
pop
jno
push
mov
test
cltd
int
xor
cmp
mov
or
xor
call
lea
mov
cmp
inc
mov
push
call
lods
lods
loopne
pop
das
cmc
or
inc
sub
cli
insb
movsb
jae
and
xor
iret
mov
xor
sub
pop
dec
int
in
mov
cmp
mov
pop
repz
test
popa
xor
mov
add
bswap
popa
mov
mov
mov
ss
add
or
mov
and
test
orb
pop
inc
out
loope
adc
mov
pop
and
cmp
sbb
mov
cmp
in
out
cmp
sbb
and
push
cmp
mov
pop
push
mov
mov
and
movsb
xor
mov
mov
loopne
ja
sbb
push
push
hlt
jnp
cmp
pop
fdivs
mov
cmp
push
jbe
and
mov
mov
cmp
jb
pop
adc
mov
sahf
xchg
movsl
ljmp
push
cmpsb
imul
cmpsb
mov
mov
cs
dec
cwtl
lods
test
push
jb
cli
dec
shll
arpl
jbe
arpl
aaa
xorl
insl
jne
out
add
stos
push
push
call
ret
outsb
mov
sbb
push
cmp
xchg
jmp
mov
int3
fldcw
test
mov
xor
aam
mov
cmpb
fsubl
or
outsl
and
and
loope
or
ss
adc
sub
mov
addr16
sub
add
push
xor
les
test
jae
addr16
push
dec
lods
nop
dec
xchg
add
sbb
frstor
shll
inc
out
test
jne
push
fldcw
test
push
dec
lock
pop
adc
enter
sbb
pop
enter
test
andl
add
loope
push
loopne
xadd
rorb
add
and
mov
push
fs
adc
adc
jb
arpl
jb
add
cmpb
fs
outsb
icebp
movsl
movsb
jecxz
hlt
fadd
mov
pushf
sub
lret
fimull
adc
jmp
rolb
inc
lret
or
ret
xor
cmc
push
xchg
xchg
pop
loopne
or
inc
movzbl
push
pop
clc
imul
add
inc
push
lahf
and
ret
andb
int
push
xor
lods
ja
cmpl
add
push
mov
push
dec
shll
push
xor
popa
jo
cs
dec
shll
dec
inc
xor
xlat
jb
inc
jle
popa
jo
rcll
je
xor
dec
dec
push
shll
outsw
xchg
rorb
jmp
jne
add
fs
inc
push
xchg
xchg
xchg
jp
push
sbb
pop
in
fwait
push
sub
inc
dec
push
dec
sbb
inc
xchg
push
xchg
or
int
xchg
pushf
ja
pop
adc
js
xchg
call
ja
addr16
inc
cmp
aad
and
sub
xchg
cs
cmp
fldlg2
outsb
ret
adc
dec
movl
add
push
mov
test
hlt
inc
stos
xchg
orb
shrb
push
dec
jp
fadd
push
cmp
cmp
xor
lods
adc
sub
sbb
mov
lea
stc
ficoms
decl
push
lea
jmp
xlat
lea
gs
xchg
mov
mov
movsl
mov
cmpsl
cli
push
scas
mov
sub
repz
out
mov
jns
insb
sbb
inc
shll
outsl
pop
outsb
mov
lret
mov
gs
bound
js
out
xchg
gs
ss
outsb
insb
popa
jne
xchg
gs
outsb
arpl
cli
push
xor
cld
std
mov
lret
mov
push
outsl
data16
lret
push
je
popa
pop
pusha
dec
imul
outsl
stos
jae
gs
xchg
outsl
data16
push
xchg
gs
push
add
outsl
ja
xchg
gs
jae
push
push
stos
iret
add
dec
daa
rcl
push
pop
shrl
insl
xlat
aam
aad
ja
xlat
fcoms
int
mov
inc
fcmovnu
sbb
dec
push
xlat
inc
fidivrs
out
decb
sub
xchg
xchg
add
cwtl
xor
add
adc
fsubl
movsb
add
loopne
pop
je
adc
cmove
pusha
addr16
xor
add
imull
cmp
dec
ret
outsb
sub
stc
mov
add
enter
jl
sbb
push
ss
roll
scas
adc
jecxz
sbb
daa
mov
pushf
push
push
mov
dec
ss
test
lods
mov
push
add
adc
in
add
or
pop
test
xor
mov
stos
mov
insb
xchg
adc
inc
movsl
adc
xor
sub
dec
mov
mov
fsts
sbb
into
pop
ljmp
xchg
jl
mov
icebp
stc
mov
sbb
lcall
push
std
shll
sbb
fcoms
mov
into
imul
jne
and
pop
rorl
fsubr
stc
and
enter
out
subl
loopne
out
cmp
rcl
int
cwtl
jae
shll
sahf
sub
ret
outsl
vaddpd
stc
in
xchg
and
stc
enter
je
sub
lret
stc
stos
pop
sti
movsl
pop
cmp
popa
lcall
outsl
int
mov
push
sar
sar
in
mov
mov
sti
jae
sti
aam
mov
sti
ljmp
mov
adc
inc
dec
repnz
clc
mov
leave
cli
cmpb
sti
fsincos
in
fmul
ret
cmp
and
xchg
dec
aad
mov
add
mov
cltd
idivb
ret
jecxz
testb
test
mulb
inc
push
popf
and
jbe
out
mov
mov
sbb
xchg
movsl
pop
lcall
xchg
xchg
xchg
stos
stos
lods
lods
movsl
cmp
mov
insl
cmp
xchg
nop
lods
gs
xchg
dec
cmp
cmp
xchg
xchg
xchg
xchg
mov
movsl
sbb
aad
mov
mov
or
xchg
xchg
xchg
xchg
xchg
mov
sub
ja
movsl
cmp
cmp
jns
jp
jo
xchg
xchg
xchg
jnp
jge
ds
xchg
mov
mov
rclb
clc
test
add
cli
sbbl
jns
sti
jo
pop
cwtl
nop
enter
movsb
jge
enter
push
mov
mov
je
sub
aas
pop
insb
clc
pop
sahf
popf
out
mov
clc
inc
dec
clc
hlt
pcmpeqw
cmp
adc
add
idivl
pop
enter
add
add
or
or
add
mov
or
adc
mov
jmp
stos
push
movsl
dec
jg
roll
or
stos
xor
mov
shll
xor
inc
cmc
outsl
ja
shll
fs
xor
shll
inc
imul
pusha
outsb
sbb
push
adc
jne
out
inc
je
sar
jmp
add
fisttpl
inc
into
mov
and
mov
nop
in
push
jb
xchg
test
sbb
mov
dec
xor
inc
xorl
or
xor
cmp
das
outsl
imul
push
xor
inc
xor
cmp
arpl
shll
xor
xor
shll
jae
popa
jae
sub
fidivs
leave
scas
cwtl
leave
cltd
jne
push
fs
das
mov
sub
loopne
mov
shll
xchg
adc
shlb
push
setne
mov
iret
rolb
mov
pop
mov
lock
imull
dec
call
mov
out
adc
dec
xor
roll
sbb
push
insb
lock
mov
movsb
xchg
xor
mov
rolb
sbb
or
mov
popa
ss
and
sahf
xchg
int3
xor
xor
ja
pop
test
sbb
shll
cmp
inc
jl
je
shll
jo
xor
shll
arpl
shll
outsl
dec
shll
dec
outsl
sti
insl
das
jae
dec
shll
fs
insb
popf
sub
aam
adc
jae
xor
shll
popa
insb
imul
pop
or
xor
mov
js
xlat
stc
hlt
ljmp
fldt
call
dec
inc
in
shll
push
and
push
or
mov
mov
sarl
push
inc
adc
mov
inc
test
jb
pop
sahf
outsl
cmp
pop
cmp
movsl
inc
loopne
enter
fs
and
push
and
outsb
testb
pop
adc
fldcw
jge
subl
jl
sbb
or
cld
data16
xchg
je
adc
mov
out
push
sub
sub
and
jle
shll
sbb
push
push
or
xchg
mov
icebp
push
push
inc
push
pushf
inc
cs
mov
xchg
jge
fbld
xchg
dec
aas
or
out
hlt
push
call
jno
lret
sub
insb
add
xchg
sub
sbb
push
adc
jmp
bound
les
int3
mov
test
mov
loop
sbb
xor
xchg
pop
push
lock
in
dec
in
pop
dec
mov
push
and
outsl
fbld
les
pop
mov
pop
mov
mov
cwtl
cld
ss
call
sti
stos
stc
xor
jne
add
fildll
dec
mov
cmp
and
pusha
lods
jnp
mov
incl
cli
ret
ss
lock
pop
push
mov
push
or
imulb
mov
sbb
mov
sbb
stos
inc
idivl
pop
cmpb
clc
jl
jnp
sarw
mov
jl
cmp
jne
inc
les
mov
rcr
jg
pop
outsl
xlat
loop
jmp
push
adc
aaa
addr16
mov
lea
insb
testl
push
and
adc
jl
cmp
or
mov
push
mov
jo
adc
popf
xchg
ds
loopne
cld
pop
mov
mov
mov
mov
inc
mov
add
pop
imulb
inc
mov
adc
outsl
or
inc
ja
xor
fiaddl
aaa
mov
inc
mov
xor
xchg
adc
sbb
call
stc
add
je
mov
pop
pop
daa
andb
adcb
jae
shrl
fildll
clc
call
nop
dec
loopne
sub
ds
popa
or
cld
xchg
jle
je
add
jmp
call
sub
pop
mov
cwtl
adc
jmp
cld
mov
sub
push
cmp
jne
cmp
mov
pop
fiadds
jne
add
add
add
movsl
loope
mov
mov
mov
mov
test
popa
pop
imul
dec
jg
push
jl
inc
add
sbb
shr
sbb
fdivr
int3
dec
fists
add
push
lahf
xchg
sbb
adc
ljmp
add
mov
xor
sarb
les
adc
adcb
adc
test
sbb
or
pop
xor
dec
shlb
loopne
push
ret
xor
out
dec
mov
mov
xor
add
call
divl
cmc
scas
add
jl
xchg
bound
out
jo
mov
in
nop
xchg
add
dec
iret
sbb
push
test
in
loope
xlat
sbb
cmp
mov
fidivs
push
mov
dec
push
mov
in
mov
pop
jl
push
push
mov
test
jae
mov
mov
repz
or
popa
sbb
das
push
xor
adc
xor
or
fs
in
adc
sbb
fcomps
or
cltd
mov
les
jmp
in
push
jb
enter
je
push
push
enter
and
add
sbbb
sbb
add
add
js
fildll
adc
mov
sbb
xchg
push
scas
mov
fimuls
pusha
lea
pop
jo
xor
add
pop
mov
daa
roll
icebp
inc
sub
sub
push
inc
sbb
push
fsubrs
leave
dec
sbb
dec
sti
cld
dec
lcall
pop
inc
push
imul
xchg
lcall
sbb
sbb
cwtl
add
adc
mov
mov
aam
sub
loopne
xchg
subl
push
or
or
xchg
add
shlb
jl
sbb
je
loopne
push
sbbl
aam
popf
jl
imul
and
pop
clc
jo
mov
push
mov
jae
push
cmc
jmp
cmp
or
add
push
sbb
or
add
pushl
xor
sbb
jbe
cmp
jb
add
lock
mov
shll
fildl
push
push
add
pcmpgtb
mov
mov
sub
mov
arpl
mov
add
dec
mov
dec
js
js
iret
sarl
mov
cmp
mov
cli
dec
push
fstpl
ficoms
cmc
mov
enter
xor
and
and
insb
dec
mov
inc
cmp
out
imul
outsl
fidivrl
sbb
std
fcompl
fstpl
imul
std
mov
sub
or
inc
xor
imul
push
mov
pop
xchg
loope
xchg
loopne
push
mov
adc
cmp
inc
fmul
xlat
cmc
push
int
mov
or
jbe
pop
stos
push
mov
pop
roll
adc
adc
fstl
cmp
pop
xchg
or
and
jmp
adc
ret
push
pop
daa
daa
mov
pop
sbb
daa
daa
daa
daa
jb
gs
daa
daa
daa
daa
xor
cs
in
leave
and
or
jmp
or
leave
leave
outsl
popa
sub
imul
pop
jb
inc
cmp
xchg
js
ljmp
sbb
std
pop
fdivr
and
xchg
mov
or
popa
ds
inc
sbb
ss
and
xorl
sbb
and
insb
xchg
rcrb
cmp
and
jmp
call
lret
ljmp
adc
or
dec
push
mov
fistps
mov
jnp
dec
add
rclb
in
xlat
mov
in
xor
call
je
rclb
iret
inc
push
xchg
inc
fbld
sub
add
inc
mov
divl
loop
lock
adc
cmp
fbld
in
mov
testl
mov
cld
loop
sbb
mov
mov
pop
mov
jo
jmp
sahf
push
cmc
mov
xor
jae
int3
pop
adc
push
fwait
outsb
mov
jne
push
int3
dec
xchg
mov
leave
and
dec
add
shlb
dec
ss
push
mov
cmp
je
mov
das
push
jle
xor
sub
push
lahf
cli
xor
xor
sbb
imul
stc
adc
adc
xchg
bound
and
icebp
pop
fstps
outsl
cli
arpl
js
push
cld
call
rclb
lock
mov
xchg
pop
je
cs
sbb
dec
sub
or
rclb
cmc
cmpw
cmp
cmp
shll
and
push
sub
cmc
cmp
inc
cmp
jl
je
cmp
cld
mov
cmpb
js
add
jo
add
cmpl
ljmp
xchg
je
mov
test
je
add
push
mov
add
mov
fstpt
mov
add
push
inc
dec
sbb
mov
imulb
test
xor
rcrb
or
stos
sbb
outsb
sarl
pop
add
pop
jmp
adc
jnp
mov
adc
jne
movsl
jo
testb
das
lret
mov
xlat
lahf
stc
cmp
mov
cmp
mov
dec
andl
insl
push
jno
shr
jle
movzwl
mov
jne
daa
add
mov
shlb
cli
sbb
or
adc
add
fistl
jl
lar
data16
lock
into
insl
aad
cs
or
sub
push
mov
pop
inc
pop
and
or
sbb
pop
add
mov
adc
sbb
jl
add
and
dec
add
insl
ja
lea
push
testb
add
xor
jle
add
inc
js
aam
je
adc
mov
mov
adc
iret
lock
cmpsl
and
mov
pushl
add
insb
in
ret
scas
clc
add
sub
inc
or
inc
loope
inc
dec
dec
mov
add
mov
push
inc
lea
mov
lock
out
lea
sbb
pop
lods
push
mov
call
cmp
lahf
inc
aaa
pushl
xchg
cltd
lea
jae
lret
xor
push
xor
push
mov
dec
stc
les
push
ja
mov
adc
add
loope
push
mov
cmp
push
rorb
sbb
mov
add
jge
mov
ret
jecxz
xchg
fsubrl
and
inc
cmp
testb
je
mov
mov
or
or
mov
je
das
xor
add
add
loop
rolb
popa
inc
xchg
jnp
int3
insb
lea
push
adc
mov
dec
hlt
push
or
xor
leave
jecxz
cmc
enter
mov
cs
scas
stos
sub
mov
inc
loope
loopne
sbb
sarb
adc
inc
mov
adc
mov
cmpsb
mov
jb
gs
cmpsl
imul
mov
mov
loopne
pop
xchg
cmp
xor
or
mov
clc
or
or
iret
aad
add
pop
or
scas
mov
jne
je
addl
add
jb
adc
shl
sti
and
rorb
add
or
or
ljmp
push
push
rorb
mov
pop
mov
in
popa
mov
int3
cmpl
pop
mov
ja
jmp
std
sub
ret
push
lods
out
inc
lea
cli
ss
shll
scas
mov
push
loope
mov
push
aaa
xor
cltd
lods
mov
push
push
clc
and
dec
ja
push
adc
xlat
das
push
xchg
inc
sub
adcl
cs
fdivrs
aam
dec
lea
push
or
outsb
arpl
push
shll
shrb
sbbl
enter
xchg
es
sahf
jbe
push
mov
push
mov
pop
adc
mov
cld
sti
imul
mov
mov
sub
addb
in
xchg
flds
jge
pop
xchg
sub
sbb
push
je
push
mov
fsts
mov
daa
cltd
adc
jmp
mov
add
aam
and
jle
lds
cmp
add
and
jg
gs
xchg
gs
outsl
outsb
shll
outsb
aad
call
jmp
mov
dec
roll
dec
dec
sbb
push
sub
mov
or
cmpsb
xchg
aaa
mov
add
mov
mov
cmp
std
loop
cmpb
mov
mov
dec
rcr
xorw
xlat
push
test
lret
pusha
adcl
adc
pushf
shll
or
ds
inc
arpl
inc
inc
outsl
outsb
imul
addr16
mov
dec
cmp
add
xor
xor
jae
outsl
lcall
xchg
ds
mov
repz
in
andb
js
xchg
gs
inc
xor
xor
add
popa
jns
xchg
mov
xchg
fdivr
mov
xor
testl
add
orb
fadd
mov
xlat
je
es
jo
pusha
int3
pop
or
lods
and
pusha
or
cmpsl
adc
mov
adc
push
mov
adc
cmp
or
mov
mov
push
sub
or
and
xor
xor
push
mov
cmp
jb
jle
mov
push
push
xchg
test
pop
out
mov
nop
scas
mov
xlat
inc
andb
test
adc
hlt
gs
lcall
outsl
pushf
cmpsb
imul
sbb
in
sar
jno
jae
sub
inc
movsl
les
popf
pushf
enter
mov
leave
shrb
lret
leave
leave
lret
int3
int
into
and
in
test
add
ret
aas
cmp
mov
inc
into
or
xchg
inc
mov
xchg
xchg
loopne
or
std
mov
or
jbe
push
out
insl
inc
cli
scas
call
pop
cld
icebp
loopne
add
mov
mov
test
adc
sbb
xchg
pusha
in
sub
or
stos
mov
loopne
sbb
xchg
movsl
jne
scas
adc
scas
movsl
pop
lcall
movsl
cmp
mov
mov
or
popf
mov
mov
push
sti
or
xor
adc
pop
into
call
lret
inc
mov
andl
je
rorb
bound
ret
jmp
iret
xchg
mov
push
mov
mov
add
or
or
sbb
jmp
xchg
xchg
xchg
xor
sbb
jmp
xchg
cwtl
pushf
int3
sub
sbb
test
loopne
arpl
outsb
flds
das
cmp
cmp
and
push
rorb
shrb
rolb
insb
in
cmpsb
fimull
mov
jo
adc
insb
mov
shll
sub
jl
mov
fnstcw
fsubrl
ja
mov
adc
mov
cs
cmp
shl
push
xorl
sbb
push
add
lods
or
add
fs
jo
loopne
arpl
gs
js
gs
std
arpl
jb
and
dec
outsb
imul
gs
insl
fldl
or
push
sub
add
dec
gs
jbe
sbbb
imul
dec
cltd
pop
bound
push
push
xor
js
sbb
xor
iret
inc
add
lahf
jnp
sub
outsl
aas
and
add
data16
or
add
adc
adc
fldenv
inc
int3
push
jb
lea
jae
push
popa
imul
imul
push
aas
push
outsl
outsl
insb
push
mov
outsb
popa
jo
push
dec
xchg
push
and
pusha
addr16
je,pt
push
mov
fisttpl
jo
adc
pop
inc
insb
ss
mov
js
add
xchg
jo
aas
arpl
dec
sbb
xchg
push
xor
jnp
xchg
jle
adc
jge
dec
outsl
int3
insb
adc
inc
jnp
test
jmp
add
movq
sbb
push
xor
aas
or
js
sub
jbe
and
inc
jns
add
or
xor
add
data16
cmpsb
mov
xchg
and
or
and
test
gs
pop
mov
dec
ja
inc
sbb
in
outsb
and
push
push
push
gs
test
and
xor
or
lcall
sub
shlb
inc
push
ret
xchg
mov
and
aad
sub
push
push
push
pop
repz
fiaddl
add
popa
mov
mov
pop
out
daa
jno
pcmpeqb
insb
imul
xchg
push
filds
mov
push
add
sub
adc
push
sbb
stc
je
mov
xchg
push
imulb
adc
aam
or
push
cmp
add
rcll
jle
sub
imul
insl
or
imul
cld
and
push
jne
jb
sbb
cmove
cmp
xor
adc
ficoms
jns
fbld
lods
insl
dec
mov
jne
xchg
mov
mov
das
xor
imull
dec
xchg
movw
push
sti
add
aaa
imul
gs
insl
sbb
adc
xchg
movsl
popl
test
ret
cmp
mov
outsl
loop
insb
insl
inc
mov
pop
add
mov
adc
ret
add
arpl
rcr
mov
imul
push
shrl
dec
inc
fldt
movsb
and
data16
push
das
arpl
add
add
popa
stos
push
and
mov
femms
pop
ss
ret
addr16
fs
xchg
push
popl
inc
imul
mov
pop
and
dec
jae
rcr
pushw
shll
lods
test
fiadds
or
dec
and
pop
movsb
jecxz
addr16
aad
push
push
push
jae
push
imul
adc
shlb
add
jne
out
sub
movl
sbb
jo
jle
lret
sub
sub
pop
and
mov
add
cmp
in
int
lea
dec
mov
xor
add
fisubrl
fs
imul
cmpsl
sub
jne
push
ret
sub
adc
stos
mov
pop
add
adcb
insl
sbb
gs
iret
mov
jb
cmp
adc
xor
inc
outsb
jne
pop
insb
fsubs
push
ja
inc
push
inc
addl
jge
insl
loope
add
insl
jp
xchg
or
pop
sub
mov
or
xor
mov
push
mov
pop
inc
pop
mov
adc
das
add
cwtl
dec
xchg
popa
mov
pop
adc
daa
cmp
jns
out
mov
add
sub
popa
sub
add
jecxz
scas
pusha
cmp
enter
mov
or
inc
xor
aas
xor
inc
arpl
mov
pop
push
add
psraw
jae
pand
sbb
xchg
mov
in
mov
push
and
fcompl
jnp
dec
out
iret
lds
mov
outsb
sub
or
loope
pop
arpl
xchg
jbe
sub
xchg
dec
insl
loope
xlat
add
mov
mov
je
jmp
insb
ja
dec
push
mov
sti
jo
lea
sbbl
imul
dec
insl
testb
mov
pop
sbb
pushf
fistpl
pop
add
push
push
lea
lret
sbb
push
xor
inc
and
bound
adc
int3
mov
incl
testb
push
dec
das
xor
pop
je
arpl
adc
insb
stos
and
int3
push
pop
add
add
add
les
jmp
push
leave
pop
inc
cli
mov
notb
inc
mov
jo
pop
cmp
mov
add
pushf
pushf
call
xchg
pushf
lea
sti
pop
ror
ljmp
mov
les
jae
add
sub
jmp
add
pop
stos
inc
mov
or
adc
jo
sub
push
xchg
or
adc
mov
ljmp
ror
pop
jne
push
out
inc
xor
in
and
lahf
pop
jl
pop
cltd
sbb
call
cmp
rorl
rol
mov
sbb
or
jbe
bound
xor
mov
and
pop
scas
test
fisttpll
and
daa
mov
cs
lods
test
in
dec
fdivrp
mov
out
inc
rorl
jl
outsl
cmpsl
mov
mul
ja
in
xor
or
flds
xchg
add
cmp
xchg
dec
rcrb
mov
sub
fstps
out
mov
call
enter
hlt
es
mov
push
dec
pushf
jo
mov
adc
add
call
inc
nop
leave
cs
mov
pop
dec
cmp
scas
or
jmp
dec
cmp
dec
popf
mov
jnp
jmp
loopne
xchg
mov
mov
cmp
bound
rcl
mov
cmc
add
push
dec
and
dec
adc
adc
sbb
add
pop
add
push
pushf
pusha
mov
pushf
cli
inc
inc
add
mov
jbe
mov
bswap
xor
not
pop
mov
imul
or
add
pushf
xor
push
rol
ficoml
mov
adc
popf
fwait
insl
and
enter
cli
add
or
fistpll
call
and
pushf
sub
mov
sbb
pop
jmp
nop
ret
rorb
cmc
mov
and
rcrl
in
test
or
mov
iret
cld
mov
lea
xchg
out
dec
setne
mov
in
incl
cwtl
push
cwtl
mov
outsb
pushl
setge
setae
mov
pop
adc
lea
dec
inc
xchg
pop
mov
mov
jmp
sbb
cmp
and
sbb
push
pop
pop
mov
adc
neg
mov
fdivrl
stc
pusha
clc
mov
not
out
fildll
xor
jl
jecxz
lea
call
fldt
stos
ljmp
or
xor
rcr
push
add
fucomi
fists
mov
sub
xor
push
loop
lret
ret
sub
setnp
push
loop
jmp
int
fidivs
rcrl
pushf
pop
cwtl
cmp
inc
mov
push
jle
fstp
loope
adc
and
mov
movsl
loop
jg
fildl
ja
sbb
iret
add
jmp
add
xchg
sbb
adc
mov
fstl
aas
push
jmp
push
je
outsb
jl
pusha
sbb
jmp
fisttpll
sub
mov
rcl
fbstp
neg
add
sti
mov
mov
scas
sbbb
mov
push
pusha
inc
inc
fdivrp
scas
mov
stos
pusha
push
adc
jmp
fbld
push
test
xchg
or
cli
test
call
or
jno
add
or
mov
call
jge
sahf
fnstsw
test
xor
pusha
pusha
mov
popf
cmp
fisttpll
mov
pushf
add
and
mov
jmp
ret
xchg
jmp
push
mov
xor
outsb
jmp
push
aaa
sub
dec
sub
add
aam
add
pop
or
add
mov
add
imul
mov
add
mov
mov
out
clc
pusha
cmp
pushf
adc
mov
popa
pop
or
test
nop
call
or
aad
std
fisttpll
push
gs
ss
push
mov
xchg
xor
jb
mov
push
push
pushf
ja
mov
pop
or
jp
xor
inc
test
add
xor
lock
and
popf
sub
in
add
insb
ret
jg
or
dec
inc
push
sub
xchg
cli
or
aaa
cltd
jl
inc
decb
test
jmp
mov
leave
jmp
rorb
jmp
mov
add
rorl
imul
test
es
sbb
cmc
mov
ja
push
jmp
shl
fmuls
mov
lods
push
in
jge
out
shr
ja
cld
out
in
lret
adc
call
test
mov
mov
ljmp
pusha
mov
pop
xlat
add
ror
lahf
xor
ret
mov
fdiv
rolb
jae
ds
sub
call
add
call
cmpsl
fidivrs
mov
pushf
or
dec
or
add
shl
sbbb
sbb
and
sbb
jmp
pushf
push
add
push
fimuls
or
lds
jmp
rol
lds
into
pusha
clc
pusha
test
not
lods
dec
lahf
lds
loop
or
inc
xor
mov
lods
inc
mov
pushf
xor
push
push
imul
fnsave
cmp
push
aaa
loope
inc
fcomps
addb
jg
xor
jno
xchg
fwait
sub
fwait
jecxz
cmp
mov
sti
push
pop
pop
mov
push
cmp
pushf
or
mov
dec
out
pop
test
sub
stos
add
ficomps
push
add
jmp
mov
adc
adc
push
or
pusha
out
call
or
jns
test
lcall
mov
subb
cmp
ss
mov
push
shr
xor
ret
fst
or
call
cmp
ja
lock
add
adc
mov
not
pop
mov
push
stos
pop
es
or
push
inc
jecxz
scas
sub
inc
mov
cmc
dec
dec
inc
movl
inc
ja
add
ja
inc
push
pushf
and
stc
neg
mov
push
cmpl
add
jg
inc
test
xchg
sar
lods
ljmp
lods
pop
js
jmp
pusha
xchg
and
ja
repz
adc
push
mov
xor
push
inc
mov
pop
call
pushf
mov
inc
roll
adc
fstl
xlat
incb
mov
fisubs
aas
mov
not
bswap
mov
aad
mov
pop
out
inc
mov
lods
fucomi
std
jg
and
inc
outsl
push
jle
call
rcl
ror
pushf
sub
add
jmp
mov
insl
sets
xchg
rcr
jno
jg
ss
scas
std
jmp
jg
ja
add
rep
jmp
enter
ret
mov
inc
arpl
test
pusha
and
in
push
cwtl
call
and
int3
mov
shl
packuswb
les
enter
push
xchg
loope
ret
ja
jmp
jo
mov
jmp
cld
adc
jmp
or
es
dec
xor
cltd
mov
in
push
shr
mov
push
ljmp
push
mov
xor
subb
in
clc
push
stc
out
push
jbe
aaa
xchg
dec
sti
xchg
rcl
stc
inc
inc
cmpsl
jns
pop
into
mov
fdivrp
dec
outsb
lods
cmpsb
sub
pusha
xchg
push
push
sbb
cmp
lahf
ret
xor
repnz
pushf
dec
sub
jecxz
push
xor
lea
lods
ret
cmp
adc
int
mov
mov
shl
jbe
stos
loope
mov
imulb
stos
pop
xor
xor
mov
loop
inc
pop
lcall
inc
sahf
jb
call
mov
fadd
ficompl
or
add
inc
clc
sbb
movsb
inc
xchg
pusha
test
insl
cmp
insl
incl
dec
out
iret
fwait
push
jge
fs
imul
jp
cwtl
cmc
pop
jmp
stos
bound
xchg
orl
outsl
mov
fwait
xor
sub
inc
loope
jp
test
add
shlb
lods
shl
aam
inc
cld
cmp
outsl
mov
sub
test
aas
fdivrl
cld
jecxz
inc
jge
ljmp
mov
test
cmc
dec
pushf
adc
int
push
push
jns
ret
stc
push
cmp
scas
ja
dec
cmp
push
add
sub
and
push
pop
ja
sbb
sbb
mov
inc
jl
or
call
enter
punpcklbw
sub
ljmp
push
push
push
xor
in
bound
jno
es
daa
loopne
add
shlb
lret
sbb
cmp
adc
pop
and
dec
jmp
sub
pushf
popa
sub
add
xor
addr16
popa
mov
lds
lret
xchg
jecxz
icebp
sub
je
pop
jo
or
lcall
xor
daa
and
in
jmp
cmc
xor
mov
xchg
xor
mov
add
sub
push
ss
lock
add
fmull
shl
adc
sti
mov
cmp
push
call
pop
cmp
ljmp
adc
insl
icebp
fidivrs
jmp
or
loopne
cmp
pop
pushf
mov
movb
push
mov
mov
scas
sti
js
movsl
inc
mul
test
xlat
lea
pop
clc
adc
dec
add
jecxz
insl
sarb
sub
popf
rcrb
lea
cli
cmp
es
in
inc
push
scas
or
mov
cwtl
orl
adc
ret
enter
ja
rolb
leave
or
sub
push
test
sub
cmc
lock
jbe
jge
pop
mov
jp
mov
push
jne
xor
pushf
cmpsb
xchg
roll
rorl
push
pop
xor
jecxz
push
xor
push
adc
in
lret
in
mov
xchg
xor
sbb
test
cmp
bound
clc
in
mov
mov
rolb
xchg
dec
push
das
push
jl
scas
sub
xchg
shr
add
ds
inc
xchg
insl
mov
imul
iret
pushf
clc
int
jo
shl
leave
fcoms
cld
ja
dec
scas
test
rorb
add
fildl
mov
ret
sbb
or
cld
shl
ficompl
popl
pop
add
dec
lea
add
out
call
mov
js
insb
xchg
ror
inc
xchg
pop
jg
push
push
lret
cmc
loope
leave
sub
xor
lea
outsb
pop
les
xorl
stc
mov
iret
cmp
xchg
ret
push
ds
pushf
aas
ret
fldcw
mov
rcr
in
pop
and
call
setne
pop
clc
dec
shrl
out
mov
cli
rcr
dec
arpl
aas
push
adc
jae
movsb
mov
mov
xlat
int
add
mov
repnz
cmpsb
pop
cmp
sub
push
adc
std
mov
inc
jle
pop
outsl
loopne
imul
movl
fmull
fmull
mov
pop
mov
call
and
add
sbb
inc
mov
dec
push
movsl
sbb
push
pushf
sub
std
push
push
rorl
sbb
movsl
inc
dec
test
add
push
cmpsl
test
out
or
or
les
aam
pop
loopne
lock
mov
adc
jo
fcompl
cmc
call
call
cltd
pop
aaa
mov
repz
xor
or
sub
mov
dec
push
jmpw
dec
mov
jnp
movsl
xor
lahf
or
decb
jmp
test
xchg
in
adc
mov
jg
adc
lds
icebp
out
call
inc
and
dec
repnz
call
sbb
jnp
push
cmp
sbb
rcll
in
or
in
xor
xchg
aam
pusha
test
xchg
outsb
stos
jne
shl
mov
call
xchg
add
push
sub
repnz
fcoml
sub
cmovae
xor
leave
popf
outsl
pushf
push
fnstenv
es
fisttpll
addb
inc
out
push
adc
jl
mov
repnz
jnp
inc
add
stos
jo
fistpl
or
scas
add
inc
jmp
out
dec
xor
pop
test
xchg
add
addr16
pop
int3
cmc
sahf
cmp
cmc
cltd
push
adc
mov
call
or
cmp
add
aaa
jnp
pusha
xchg
mov
mov
or
push
and
sbb
add
std
add
sahf
and
inc
xorl
mov
test
clc
inc
sti
pushf
pop
std
test
cmp
popf
das
mov
jbe
roll
mov
inc
xchg
filds
cmc
mov
push
neg
xor
iret
aad
popa
or
fldl
mov
outsl
mov
sub
add
clc
push
adc
mov
sub
push
call
loop
sahf
ja
repz
add
sbb
or
popf
stos
add
repz
addb
ret
rol
pusha
push
mov
inc
cmc
ror
xor
aaa
fisubrs
setl
xchg
ret
ljmp
out
aam
int3
cld
in
add
pop
push
js
gs
inc
stc
iret
repz
rolb
outsb
out
js
push
xchg
add
sahf
in
mov
addr16
mov
lds
lcall
pop
aam
mov
lret
int
not
xchg
int3
mov
jne
xor
jg
addr16
incl
cs
jnp
pop
dec
enter
int3
pop
mov
iret
pop
jbe
rcll
push
push
shrl
jnp
jnp
iret
xchg
pop
mov
mov
arpl
add
xlat
fucomi
mov
addr16
pop
add
mov
xor
inc
cmpsl
dec
pop
lret
cmpsb
sarb
aaa
sti
fistps
sub
and
jge
das
mov
adc
mov
repz
fidivrs
pop
rorl
sbb
addr16
mov
sarb
inc
idivb
negb
dec
add
jae
rcrl
filds
stos
leave
addr16
ret
arpl
xchg
dec
xchg
sub
sbb
idivb
jge
xor
mov
pop
push
in
mov
jae
addr16
jnp
mov
mov
testl
mov
out
pop
jg
pop
pop
in
sub
jg
jae
xchg
popa
decl
testl
fildl
ja
pushl
lret
dec
fabs
shll
pushl
pop
loope
and
sbb
lahf
inc
dec
les
fidivrs
mov
pop
cmpsl
add
xor
ja
out
int
xor
int
sahf
fwait
mov
xor
and
mov
fildll
adc
dec
sub
outsl
lret
js
cmp
fbld
outsl
fs
scas
addr16
jmp
out
mov
filds
cmc
mov
push
shlb
mov
pop
arpl
loopne
dec
in
adc
imul
in
pop
push
rolb
hlt
cmc
dec
and
jg
jecxz
cmp
xchg
cmc
stc
cmp
xor
pop
lock
insb
lock
pusha
mov
mov
jmp
aas
std
daa
pop
xor
add
lds
sub
rcl
mov
ja
mov
scas
xor
push
sarl
inc
loopne
pop
jge
ljmp
call
cmc
sbb
jle
mov
cmpsb
adc
orb
addr16
cmp
sbb
cmp
roll
icebp
add
add
daa
cmp
call
das
test
inc
out
pop
scas
sbb
subl
adc
and
std
sbb
repnz
rorb
adc
jle
push
sar
decl
mov
push
test
xor
stc
mov
cwtl
repnz
in
lahf
into
mov
sub
xchg
fnstsw
out
ret
mov
sbb
in
addr16
push
xchg
jmp
add
sbbl
dec
and
push
inc
scas
jb
icebp
std
push
outsb
adc
jge
add
test
and
out
jne
into
xor
dec
mov
xlat
pop
leave
shll
push
incl
fwait
xchg
mov
mov
pushf
ds
adc
popf
push
jg
cmp
cli
jmp
xchg
shrl
call
mov
dec
mov
push
out
decb
cmpsb
scas
xchg
neg
sahf
loope
mov
and
mov
popf
push
lret
mov
stos
loope
push
popl
mov
or
or
cmp
mov
ljmp
push
mov
imul
ret
pop
xchg
shrl
insb
lcall
pushl
rcrl
mov
push
jns
or
out
sbb
mov
xorl
adc
push
add
ljmp
scas
sbb
jg
insl
push
pop
incl
xchg
push
pop
adc
jmp
ret
lret
push
popa
idivb
sub
movsb
stos
push
lods
mov
pop
sbb
dec
fucomip
aaa
dec
sbb
sub
fadd
leave
mov
ds
pushl
jb
es
dec
and
cmp
push
mov
jge
dec
lea
sub
jmp
cmp
push
js
das
sbb
jb
gs
mov
js
sahf
push
ret
pop
clc
xchg
adc
mov
push
jb
pusha
push
out
and
fstl
ljmp
adc
cwtl
mov
aam
dec
mov
fistps
dec
add
sbb
xchg
ds
pop
and
cmpsb
jecxz
idivb
ja
jmp
aas
insl
or
push
lret
adc
ret
push
sbb
jp
or
pop
jns
push
fucomp
jge
mov
lock
and
inc
adc
popf
in
jg
jl
cli
jmp
mov
mov
out
pop
jl
mov
icebp
pop
push
inc
add
cmp
mov
fidivs
mov
mov
dec
rcrb
adc
cltd
jb
jg
out
in
out
int3
mov
clc
push
mov
or
mov
test
inc
mov
arpl
lahf
push
dec
addb
icebp
sub
in
lcall
hlt
call
sub
test
aad
dec
inc
jne
lods
pop
pushl
jne
cmp
cmpsl
loope
cmpsl
and
cmp
inc
je
cmp
xor
stc
jg
add
mov
daa
ficomps
test
ds
pop
fists
cmpsl
xchg
add
aas
test
xorb
xchg
fisttpl
ss
lret
addr16
out
jle
divb
mov
in
das
dec
sbbb
pop
mov
adc
push
xchg
and
icebp
mov
test
out
ret
xor
incl
inc
and
cmpl
sbb
or
jg
decl
imull
sub
jl
sahf
cmp
cmp
push
iret
lcall
lret
into
xchg
inc
mov
in
inc
insb
nop
xlat
mov
jge
xchg
and
js
mov
sti
incl
popf
fs
inc
sbbl
jae
int3
pop
fcomps
mov
jg
mov
pop
mov
ret
xchg
pop
sub
rol
push
ljmp
dec
lds
mov
rcrb
jp
sbb
mov
decl
outsl
out
outsl
cmp
xor
mov
push
sub
and
out
stc
pop
jg
mov
jae
dec
jge
repnz
sbb
lret
outsb
mov
clc
jp
cmc
divb
jo
pop
add
rolb
jo
nop
jg
push
or
mov
jnp
adc
mov
mov
addl
inc
pop
mov
inc
jbe
jns
decw
cmc
cmp
arpl
movsl
dec
xchg
mov
jo
pop
pop
xor
pop
aaa
pop
push
bound
popf
int3
push
jl
leave
jp
jb
push
mov
xchg
mov
ja
jmp
inc
std
ss
xchg
push
ds
mov
call
mull
sbb
push
pop
inc
jae
add
pop
enter
lret
mov
stos
sbb
icebp
cmp
outsb
pop
push
mov
outsl
add
xor
ljmp
in
insl
and
jns
xchg
jmp
mov
adc
pop
mov
sbb
loopne
icebp
loopne
or
sahf
adc
mov
add
test
mov
mov
sbb
insb
pop
push
jecxz
lds
cwtl
loop
lods
push
xlat
inc
jecxz
cwtl
cmp
sahf
ss
loopne
inc
hlt
adc
call
ljmp
ljmp
jno
add
imulb
pop
les
in
pop
pushl
xor
dec
cli
xorl
in
loope
std
inc
je
clc
shl
lcall
cmc
movsl
xlat
insl
clc
outsl
mulb
out
inc
fwait
or
lock
shrl
dec
scas
pop
add
lahf
jg
cmp
dec
mov
mov
js
xchg
xchg
in
mov
pop
ss
dec
insl
mov
incl
or
test
fadd
mov
in
and
aad
push
pushf
push
xchg
pop
jne
cmp
add
movsl
xor
cmpsl
sbb
cmp
stc
and
out
xor
jmp
mov
fmull
leave
mov
fistpll
jl
fnsetpm(287
fildl
sbb
xchg
mov
sbb
idiv
das
pushl
mov
in
dec
add
ja
fisubs
mov
lahf
ss
mov
fldt
xor
in
imul
add
dec
jo
mov
daa
pop
in
ljmp
push
mov
inc
push
movsl
sbb
xor
lock
jg
pusha
mov
push
jb
daa
pop
aad
iret
cmp
outsl
mov
fstps
cld
pop
lea
xchg
jecxz
mov
inc
mov
into
inc
dec
xchg
pop
push
xchg
aas
jg
mov
sar
popf
movsl
adc
xor
xchg
add
xlat
negb
mov
incl
sub
lock
test
mov
out
push
and
cld
push
sbb
add
sub
jg
jnp
push
push
mov
popa
push
pusha
sub
sbb
ljmp
subl
outsb
mov
cli
lret
and
call
inc
je
arpl
pushf
or
das
push
mov
xor
push
xor
movsb
outsl
jg
faddp
xor
dec
insb
inc
push
sbb
out
aas
push
cmc
push
arpl
aas
add
cmp
or
popa
shll
popa
nop
xchg
adc
mov
cmp
mov
jno
das
lock
call
ljmp
fisubl
mov
push
hlt
scas
rcll
cld
outsl
decl
inc
mov
adc
daa
int
js
cld
int3
ret
xor
pop
cld
xchg
mov
jae,pn
jb
cwtl
push
or
insl
pop
fistps
mov
cmp
in
mov
mov
sub
fs
loopne
xor
shll
sbb
jp
sbb
inc
mov
call
lods
loop
jmp
xchg
ffreep
mov
iret
add
push
loopne
jg
pop
cli
roll
adc
dec
mov
in
fidivs
push
movsb
imul
add
sahf
addr16
std
inc
jno
cli
nop
daa
add
push
adc
es
data16
xchg
adc
imul
std
mulb
sub
es
cltd
xchg
sub
mov
divb
nop
jg
outsb
dec
or
fldcw
or
test
pushl
mov
dec
push
loop
xchg
inc
sub
adc
jae
jmp
fdivrp
mov
xor
fdivl
jg
jp
outsl
stos
sbb
dec
jp
dec
test
jb
test
dec
js
cmp
push
sub
mov
cmp
loopne
rclb
mov
cs
cltd
dec
push
pop
and
loop
jg
or
sbb
out
cmp
xchg
mov
mov
loopne
out
or
lods
popf
dec
cli
push
dec
cmp
daa
in
mov
fucomip
dec
push
and
pop
pusha
into
std
xchg
sahf
mov
in
mov
pop
rclb
orl
cwtl
xor
mov
pop
pop
cli
lret
xor
or
sti
jb
jg
or
sbb
out
fisttpll
int
aam
lcall
stos
mov
test
pop
xor
sub
jecxz
sub
inc
mov
xchg
dec
pop
mov
jne
pop
cmp
add
push
sti
loopne
ror
xorb
insb
xchg
sbb
mov
and
rol
ljmp
fwait
mov
adc
xchg
jb
ss
sahf
dec
mov
mov
fs
dec
pop
mov
push
bound
das
sahf
into
cmpsb
xchg
cmp
and
push
jnp
test
mul
pushf
mov
sbb
jmp
jne
push
push
call
adc
sbb
jp
mov
and
or
lret
mov
sbb
jg
sbb
push
jmp
test
movsb
inc
mov
sbb
movsl
decl
popf
push
mov
outsb
lahf
pop
dec
xchg
ret
mov
mov
in
mov
sti
les
test
js
cmp
mov
cli
xorb
and
sub
dec
out
or
sbb
iret
xchg
sub
inc
test
ret
sub
cmpsl
fwait
or
mov
cld
cmc
cmpsb
fstpl
incl
faddp
xchg
fistps
xor
push
pop
adc
scas
inc
stos
pop
sub
xor
mov
dec
pop
lds
rolb
cmp
mov
jnp
sub
rolb
mov
sahf
ds
lret
xor
std
jg
or
sbb
ss
aam
push
xor
mov
gs
or
or
ljmp
sub
dec
add
leave
and
xor
pop
jmp
or
fdivrp
int3
xlat
mov
icebp
mov
sti
or
hlt
mov
into
incl
popf
mov
pop
inc
mov
jno
sub
subb
shll
je
das
sub
and
xchg
pusha
out
or
mov
icebp
xor
push
sub
mov
rcr
push
jmp
cmp
std
hlt
out
je
bound
cmpsl
pop
das
lret
cmp
ljmp
std
jg
sbb
lock
lea
xor
popa
gs
and
loop
lcall
mov
test
push
xor
out
sbb
jl
pop
dec
lahf
add
mov
xchg
sbb
inc
xchg
sbb
das
or
std
and
rcll
mov
stos
push
cltd
jns
mov
in
sub
mov
call
outsl
lcall
adc
adc
jmp
out
jns
mov
push
clc
test
fstpl
push
jno
insl
mov
loop
mov
fwait
aad
fildl
jecxz
das
pop
shld
pop
jae
sub
adc
mov
lods
inc
neg
mov
pop
clc
xchg
dec
sti
loope
nop
push
test
aad
inc
jge
dec
mov
inc
jmp
mov
lcall
les
add
push
not
push
xchg
aas
or
lods
push
jb
xchg
lahf
out
mov
inc
ret
inc
add
rorb
jns
enter
shrb
push
in
push
dec
std
sub
aaa
push
mov
push
sbb
cmp
mov
cmpb
pop
mov
test
loopne
leave
orb
test
xlat
xchg
dec
and
sbb
jge
in
jp
rol
test
lds
mov
xor
and
mov
mov
dec
cwtl
outsl
cmp
bound
inc
mov
shll
jmp
outsb
es
dec
cld
pushl
pusha
int
dec
sub
outsl
in
push
ss
mov
pop
pop
mov
cld
imul
in
scas
dec
inc
or
fidivrs
sub
pop
lahf
jp
cmp
lds
jge
jmp
jno
mov
int3
jp
fucomip
outsl
push
mov
fs
push
mov
ja
int
lods
sbb
enter
jp
fs
ljmp
add
push
add
push
pop
adc
lea
lcall
fs
cwtl
dec
out
pop
andl
test
mov
xchg
aas
arpl
mov
cmp
sbb
adc
pusha
fs
xchg
aas
out
aaa
js
clc
out
pop
daa
bound
or
mov
push
dec
roll
arpl
jmp
enter
xor
sqrtps
mov
adc
out
lods
push
ljmp
incl
fbld
xor
mov
inc
mov
addr16
adc
push
ljmp
orb
pop
mov
jmp
mov
xor
shrb
push
std
push
gs
mov
ret
stos
sti
test
roll
mov
mov
test
jg
je
and
popl
or
xchg
xor
pop
pop
cld
cmp
sti
cmp
sahf
int
sub
insb
jl
pop
scas
out
xor
rorb
mov
mov
cli
subb
sbb
call
call
adc
xchg
mov
add
mov
jp
cmp
xchg
cmpsl
jl
mov
and
pop
hlt
sub
mov
fucomip
cmpsb
mov
aad
stos
andb
sbb
outsb
enter
cmp
inc
dec
or
sti
test
add
dec
in
fisttpll
mov
scas
jmp
lds
je
outsl
out
fbld
lock
xchg
pushf
or
addb
add
dec
shlb
loop
push
adc
fucomip
addl
je
popa
pop
test
sbb
decl
xchg
sti
sbb
push
decb
and
inc
movsl
mov
xchg
mov
jmp
sbb
inc
mov
and
imul
leave
ja
pushl
jo
xorb
call
push
fiadds
mov
out
sub
push
lods
movsl
push
int3
cmpl
push
sbb
push
jne
jg
incl
and
stc
dec
aaa
sub
mov
dec
xchg
mov
lcall
call
inc
push
push
xchg
xorb
and
adc
jnp
leave
or
mov
or
bound
adc
sbb
dec
imul
dec
mov
mov
pushl
ljmp
mov
frstor
iret
out
gs
decl
dec
pop
movsb
in
add
in
vmovq
popa
mov
pusha
ror
jno
decl
cli
cmp
test
mov
outsb
cmc
cmp
push
jp
aaa
jecxz
ljmp
js
into
testl
mov
arpl
mov
inc
aas
jg
cli
fs
mov
or
or
adc
jo
mov
std
adc
dec
and
jg
call
loopne
cmp
inc
add
pop
mov
je
gs
stos
push
ljmp
addr16
cmp
add
mov
call
ss
add
scas
push
inc
jg
ljmp
xorb
jns
xchg
stc
imul
jle
aas
movsb
inc
ljmp
pop
int3
addl
cld
xchg
hlt
push
cld
sti
lcall
pop
ds
stos
xchg
push
sbb
mov
mov
sub
loopne
fwait
imul
sbb
add
xchg
xchg
jae
sub
xor
jg
ljmp
mov
pop
mov
jle
mov
or
push
mov
dec
pop
and
cmp
sbb
aam
lahf
imul
push
cli
incl
sub
daa
mov
sub
cli
push
jb
scas
and
ljmp
icebp
dec
arpl
stos
filds
movsl
push
cmp
outsl
sub
loopne
ret
popf
or
data16
mov
dec
mov
inc
jg
aaa
clc
mov
and
lock
mov
lcall
or
inc
mov
mov
call
inc
push
mov
rcll
xchg
and
push
testb
mov
or
fiaddl
fdivrp
lods
dec
mov
xor
add
inc
mov
mov
outsl
lret
push
cmp
cli
repz
ds
xor
sahf
shr
xchg
aaa
inc
cmp
sbb
decl
pop
psraw
add
jne
aaa
shll
movsb
pop
adc
xchg
and
fisubs
cmpsb
dec
mov
popf
repz
es
xchg
xchg
lock
popa
pop
sbb
jns
je
das
cld
ljmp
movsl
adc
leave
push
inc
lock
lock
cld
jle
cwtl
js
push
jae
out
jmp
jp
push
cmpsb
repnz
das
std
outsl
dec
in
inc
mov
inc
mull
dec
in
insl
mov
adc
cmc
cli
sbb
cli
call
and
dec
mov
lcall
test
inc
and
arpl
mov
mov
mov
pop
les
xchg
fsubl
subb
mov
out
jae
mov
fcmove
lock
jo
ljmp
shll
test
repnz
cmpsl
inc
xlat
pop
incb
jmp
jns
dec
xor
add
xchg
inc
outsl
mov
fsubr
push
insb
pop
xchg
iret
inc
mov
ljmp
call
jno
push
mov
andl
subb
jg
add
js
stos
push
pop
cmp
push
and
inc
je
or
cmp
in
mov
das
movsb
xor
rorl
pop
mov
lret
rol
pop
xor
mov
jl
arpl
cld
pushl
adc
adc
mov
push
sub
decl
test
inc
jle
insl
dec
sub
mov
cld
jg
idiv
insb
push
sbb
lahf
in
test
mov
hlt
in
jg
push
out
in
add
mov
ret
sub
call
mov
mov
adc
xchg
outsb
outsl
xchg
aas
and
lcall
xchg
jne
mov
test
mov
mov
dec
adc
jbe
or
sbb
dec
pop
jp
jg
sahf
or
ja
and
fdivrs
and
add
sbb
push
ja
mov
out
pop
or
ret
pop
fstl
sbb
mov
rcrb
add
je
mov
scas
cmp
xchg
jg
daa
and
jg
mov
in
pop
pushf
push
test
jg
divl
sub
loope
push
ret
inc
or
jg
jmp
add
inc
push
cmp
jae
xor
lcall
mov
aaa
inc
jg
cmpsb
pop
and
imul
daa
js
out
shrb
adc
test
ss
das
lods
mov
jmp
pop
sub
pop
cld
xchg
xor
mov
ret
jl
add
or
in
and
dec
cmc
fisttpll
xchg
imul
dec
sarb
mov
sti
cmp
pop
sub
mov
cmp
adc
fdivrl
pop
jb
nop
sub
dec
mov
arpl
mov
pop
shl
push
dec
incl
jg
out
mov
clc
mov
jo
stos
lcall
loope
clc
dec
xchg
adc
and
cmc
dec
lret
stos
scas
scas
and
xchg
vmread
adc
jmp
incl
add
cmp
popa
xchg
add
into
jge
cmpsl
cmp
push
and
out
lahf
scas
and
sbb
push
enter
js
in
call
sub
xchg
int
add
xor
call
clc
aad
add
jge
jns
test
and
test
iret
xchg
push
dec
inc
std
pop
dec
xor
adc
in
add
jg
dec
fldpi
js
mov
lock
or
inc
mov
push
push
mov
imul
pushf
or
icebp
and
fistpll
and
js
xor
add
pushl
xor
pop
call
dec
popa
test
mov
or
pop
mov
ss
adc
pop
sbb
lcall
xchg
fcmovnbe
or
inc
ljmp
sar
adc
push
cs
dec
jnp
dec
call
fdivl
pop
dec
mov
adc
clc
je
loopne
mov
mov
cld
call
mov
nop
adc
sbb
sub
dec
sub
mov
scas
cwtl
lahf
pop
cmp
aam
dec
scas
inc
lods
dec
div
push
mov
int3
popa
nop
hlt
lcall
cmpsb
ds
xchg
push
movsl
mull
xor
insb
popf
rcll
inc
das
inc
inc
imul
sub
lret
xchg
ficoms
lahf
mov
negl
pop
scas
inc
or
fisttpl
xchg
inc
add
sbb
ds
xor
pop
mov
or
jp
push
dec
std
pop
repz
push
or
push
mov
jmp
sbb
dec
xchg
add
push
xchg
or
pop
movsb
sub
sar
sub
std
into
fs
dec
call
mov
push
outsb
in
cltd
cltd
enter
rol
rorb
std
cmp
je
test
xchg
iret
mov
into
out
fwait
xchg
pop
jp
in
outsb
pop
repnz
add
pushl
pop
sub
int3
movsl
fisubrl
mov
and
ljmp
adcl
loop
dec
ud1
push
out
dec
pop
sbb
pop
xor
jecxz
mov
dec
adc
jns
cs
mov
push
adc
cmp
movsl
push
xor
xchg
into
mov
clc
mov
pushl
cld
cmp
popa
inc
mov
fwait
xor
or
mov
aad
incl
outsb
sbb
inc
je
shl
fisttpll
test
or
push
inc
jo
push
lods
mov
add
in
jnp
mov
pop
xchg
pop
imull
mov
nop
test
push
in
adc
arpl
dec
mov
jmp
test
rolb
pop
or
cld
xchg
xlat
dec
daa
fisubl
xchg
test
in
xchg
inc
xor
jmp
push
sbb
mov
mov
dec
pop
cld
jmp
mov
or
mov
push
in
xor
cmp
inc
lcall
cltd
fs
cmp
loop
cld
pop
dec
push
mov
sbb
mov
sub
push
mov
testl
sub
movsb
dec
ret
loope
mov
mov
push
incl
jmp
push
push
out
xchg
rorl
es
in
cld
jg
jne
inc
outsb
jno
into
cmpsb
push
add
mov
or
scas
popf
adc
jmp
jno
sub
pushf
lret
jnp
xchg
call
or
fcom
jg
test
daa
xchg
jne
mov
sbb
dec
mov
stos
fwait
xchg
or
loop
jl
in
pusha
mov
and
mov
icebp
call
pop
mov
add
xor
mov
jae
ja
das
fidivrs
enter
std
jl
imul
icebp
ljmp
fcoms
imulb
mov
loop
mov
ret
fistl
or
fidivl
fdivr
dec
cmp
cmpsl
adc
inc
dec
sub
and
jne
pop
or
jnp
jmp
xor
sub
lcall
pop
push
fs
adc
stos
sub
push
sub
cmp
lods
dec
aad
and
lcall
neg
add
mov
cmp
insb
sti
out
jge
lcall
nop
popf
and
jbe
leave
call
sbb
sub
dec
std
sbb
pop
pop
dec
imul
clc
pop
and
xlat
popf
mov
add
inc
outsl
icebp
aam
xor
cmc
in
ss
mov
push
lret
jg
stc
in
rolb
int
pop
cmc
movsb
push
add
outsl
and
insb
mov
fistps
mov
add
cltd
cmc
or
pop
lret
mov
ds
xchg
sbb
mov
add
and
mov
aaa
movsl
aad
sbb
adc
mov
sub
loope
sbb
mov
sub
mov
cld
aad
mov
movsb
out
mov
mov
jg
lcall
enter
into
jge
sub
fldcw
jo
loope
flds
xor
add
in
lret
lcall
and
adc
mov
adc
pmulhw
stos
add
xor
sahf
xchg
arpl
aad
or
adc
in
sub
rcr
loop
pushf
and
rolb
loopne
ret
inc
push
js
popa
push
push
inc
and
sub
push
mull
push
add
mov
call
or
inc
jge
aaa
push
das
mov
fsubs
pusha
push
mov
lods
pusha
movsl
and
cmp
mov
jg
lret
jp
sbb
nop
push
les
or
cld
aad
dec
add
add
xlat
xor
pop
mov
insb
and
jmp
or
or
fst
xchg
mov
inc
sbb
jne
dec
cmp
fbld
cmp
orl
mov
int
fstpl
xchg
jle
jl
out
call
add
push
push
adc
inc
mov
call
subb
or
mov
push
jbe
xchg
push
jmp
je
sbb
outsl
push
mov
scas
add
aas
sub
imul
fwait
and
xchg
jne
mov
incl
je
mov
push
cli
push
pop
ja
popf
or
sbb
xor
xchg
loopne
cmpsl
push
mov
jbe
test
hlt
call
mov
pop
fildll
push
bound
lock
ret
mov
aad
jge
jg
pop
pop
pop
mov
mov
xchg
dec
aam
sbb
add
jl
fwait
cmp
cld
jmp
pop
pop
dec
cmpsb
inc
lock
cs
sub
popf
int3
inc
int3
mov
cmc
sbb
data16
repnz
sarb
push
add
call
inc
mov
notl
cli
jo
loope
pushf
mov
sub
sbb
pushl
sbb
cli
dec
clc
jl
mov
ds
in
pop
ljmp
out
pop
xor
pop
jle
pop
leave
bound
mov
push
sbb
popf
loopne
es
xchg
ret
or
insb
pusha
add
mov
sbb
jmp
mov
imul
sbb
jnp
fildll
mov
sbb
pop
imul
inc
jbe
scas
jg
call
sbb
or
inc
sbb
push
xchg
sarb
mov
sub
pop
imul
divl
fdivr
jg
out
mov
xchg
test
add
mov
adc
inc
inc
xchg
and
add
mov
sbb
lret
mov
ljmp
addr16
aad
lock
jns
mov
jbe,pt
rclb
mov
mov
sbb
cmp
pop
loopne
nop
push
xor
pop
sti
das
mov
push
pop
xor
aaa
push
adc
in
sbb
lds
push
inc
iret
mov
mov
ljmp
negb
rcl
stos
push
stos
sub
inc
mov
incl
shll
sbb
or
xchg
call
insb
ret
test
fadd
cmp
data16
outsl
lock
mov
adc
aaa
data16
lods
fdivr
pushl
test
pop
sub
movsb
out
add
call
cmp
inc
outsl
or
imul
dec
xor
dec
and
popa
push
dec
and
jge
ljmp
decl
push
test
lods
add
sti
scas
filds
and
xchg
cld
shlb
pop
or
stos
inc
mov
jbe
mov
mov
test
mov
je
popf
fmull
pop
and
mov
adc
xor
jb
lret
cld
jecxz
push
test
sbb
arpl
ficompl
jmp
push
push
push
or
and
sbb
pop
dec
mov
push
das
mov
movsl
cmp
loopne
and
aas
stc
mov
ret
aaa
cmp
jo
bnd
pushf
mov
and
jg
fisttps
inc
adc
cmpsb
jns
pcmpgtw
jo
cmp
push
cli
mov
outsb
push
adc
sarb
mov
fiadds
cwtl
cli
test
sub
sbb
sarl
rolb
loop
sbb
daa
xchg
sub
push
cmpsl
fisubrs
shrb
hlt
or
addr16
dec
push
lcall
test
sbb
ljmp
in
lahf
inc
mov
add
jne
dec
ss
faddp
push
xchg
push
les
cmp
jl
xor
jp
and
pop
addr16
adc
and
outsl
jb
shlb
out
pusha
push
iret
cmp
jp
repnz
xor
lcall
push
cmp
int3
dec
mov
pop
xlat
mov
mov
mov
movsb
xchg
ret
lcall
mov
nop
mov
lds
and
outsb
cld
in
imul
mov
inc
leave
cmp
jnp
xchg
or
pop
call
pop
mov
pushf
insb
repnz
es
aam
incl
inc
cmp
pop
lock
push
sti
fcomps
hlt
arpl
mov
outsl
lds
pushl
and
sbb
je
lret
lods
fwait
aam
jmp
movsb
sahf
xchg
add
adc
add
push
pusha
fs
cltd
push
sub
push
dec
or
and
mull
lret
push
xor
jg
mov
lock
lds
xorl
pop
clc
jmp
std
pop
inc
push
push
rcr
pusha
mov
in
xor
clc
cmpsb
int3
xchg
clc
incl
outsl
lahf
mov
shl
cs
inc
data16
rcrl
call
push
ret
hlt
adc
movntq
out
fs
jle
pusha
clc
adc
faddl
mov
in
inc
xor
jl
rcr
dec
out
test
in
mov
out
sub
nop
cmp
cmp
or
mov
call
cli
and
xor
bound
mov
lea
pop
lods
and
inc
pop
add
stos
add
mov
dec
mov
push
testl
pop
inc
repz
test
pop
lcall
mov
mov
jp
and
lea
jle
dec
pop
xchg
xor
sahf
out
push
int
sub
cmc
mov
test
leave
adc
inc
inc
cltd
fdivl
sbb
push
imul
pop
or
add
idiv
mov
jbe
cwtl
mov
xchg
ljmp
inc
jecxz
cmp
sahf
dec
std
idiv
push
dec
inc
mov
sub
lret
cmp
clc
ret
out
shrl
lock
pop
add
mov
mov
jp
cli
test
jg
xor
rolb
push
xchg
inc
hlt
sub
adc
inc
call
fildl
call
lods
cltd
push
das
outsb
ret
incl
and
jp
add
ljmp
push
dec
lret
pushf
fmuls
pushf
aad
pushf
mov
mov
es
add
arpl
mov
jo
pop
pushf
jp
inc
je
mov
mov
xchg
push
call
repz
xor
adc
add
sbb
or
push
or
adc
popf
test
jl
adc
loopne
movsb
inc
sbb
xor
mov
xor
outsl
je
test
pop
int
sub
test
or
loop
push
outsb
hlt
bound
add
or
ljmp
fimull
test
xchg
fnstsw
pushl
inc
pushl
cmpsl
pop
push
into
test
out
adc
pushf
loop
gs
and
popa
js
scas
fbstp
mov
mov
daa
in
mov
dec
dec
cli
test
mov
jge
lret
inc
cwtl
adcl
sbbb
sbb
mov
repz
push
lods
fstl
mov
insl
out
nop
daa
aad
xor
inc
cs
push
test
mov
fsubrp
je
in
fisttps
cmp
decb
into
outsl
push
xchg
cwtl
je
lret
push
outsb
arpl
pushl
cli
cmc
loope
nop
call
cld
cmp
pop
cmpsl
push
ret
insl
es
leave
xchg
ret
xchg
repz
movsl
incl
pushl
test
xchg
jnp
and
shl
push
push
sbb
mov
les
or
xchg
sysexit
into
fstps
cmc
xchg
rcll
cld
mov
lret
rolb
out
das
inc
lret
ret
adcb
enter
popf
pop
call
mov
push
push
xorb
aas
push
popf
es
ss
icebp
mov
and
shll
sti
mov
outsb
push
push
out
lahf
dec
adc
and
roll
mov
mov
xor
pushf
popa
lret
test
sub
aam
dec
fwait
mov
sbb
lcall
dec
add
mov
sub
in
jmp
xorl
fs
nop
xchg
ja
push
xchg
jle
loope
aas
lods
neg
inc
aad
incl
adc
mov
std
xchg
jmp
and
aas
cmc
test
add
ret
xchg
sub
incl
jmp
out
push
xchg
iret
xorl
test
std
jg
dec
adc
dec
push
rcl
out
inc
cmc
mov
js
sbb
dec
sahf
sub
pop
lea
fucomip
das
cld
jbe
ret
mov
push
cmp
cmc
adc
xor
decl
pop
in
add
push
or
and
addr16
test
cmpl
xchg
loope
and
cld
adc
jle
mov
repz
mov
mov
push
dec
in
dec
push
fdivrs
adc
dec
mov
call
mov
sbb
mov
movsl
mov
mov
xchg
repnz
fcom
jmp
lods
addr16
out
push
xchg
inc
add
pop
lds
push
xor
fwait
call
push
push
repnz
xor
inc
shl
cmpsb
xchg
movsl
fbld
mov
xchg
xchg
pop
clc
lcall
enter
outsb
or
js
pop
jp
cs
in
pop
jge
mov
lret
add
das
jge
mov
and
or
repz
pop
fbld
inc
mov
mov
je
in
fnsave
jle
insl
xor
xchg
mov
push
fimull
cmp
loope
add
sti
test
sarb
pop
cld
fwait
or
push
add
loop
pop
jmp
mov
add
decl
sti
imul
mov
addr16
pop
mov
movsl
ljmp
push
insb
mov
repz
push
cwtl
mov
xor
ljmp
or
jg
push
mov
inc
xor
lcall
lods
inc
inc
outsb
dec
and
clts
bound
int3
mov
and
xchg
mov
stos
xor
push
push
aaa
iret
pop
push
loopne
pop
sbb
nop
ret
lea
cwtl
add
adc
repnz
pop
xor
testl
fcomi
and
ja
imul
or
dec
mov
mov
fucomip
std
pop
mov
jg
out
out
mov
pop
xchg
push
push
test
xlat
je
cmp
je
jo
dec
inc
cltd
cli
or
jb
mov
lahf
dec
in
lcall
sbb
jp
dec
sahf
push
pusha
jmp
add
loop
jmp
xor
ret
and
xor
xor
jg
jecxz
dec
jmp
or
lcall
or
ljmp
lret
ljmp
das
jo
cs
repz
pop
or
mov
push
lock
fiadds
aad
shll
jne
xchg
cmp
inc
ja
jge
arpl
mov
addr16
cld
jns
and
rcrl
repz
out
fwait
sbb
sarl
push
mov
loopne
push
jl
dec
lret
jmp
push
jecxz
sti
std
ds
in
dec
lea
jmp
xor
pop
ret
jg
js
ficomps
xor
mov
ds
jg
ljmp
lret
xor
mov
sahf
ds
filds
mov
xorb
das
push
aam
add
jp
mov
mov
movsb
push
lret
scas
cmp
repz
pop
or
dec
jl
outsb
fists
insl
add
iret
sub
incl
push
lods
sahf
push
dec
cmpl
jo
aaa
fs
xor
inc
insb
adc
xor
jmp
jg
pushl
xchg
mov
nop
add
jg
mov
sub
mov
filds
idiv
mov
push
sbb
popf
pop
ficoms
pusha
loope
jg
inc
xchg
pop
ljmp
pusha
sbb
mov
call
xor
lea
insb
add
jmp
and
jne
data16
sbb
pop
mov
sbb
push
jp
push
lcall
sub
punpcklwd
mov
mov
icebp
insl
test
cmp
aas
lock
dec
sbb
xchg
aad
lcall
pushl
mov
adc
lcall
sbb
cld
pop
xchg
cmp
out
repnz
or
sbb
push
sub
cmp
jg
ss
in
in
jne
push
ret
mov
in
fnstsw
dec
mov
loope
and
test
inc
bound
subl
mov
movsb
loopne
rorb
pop
jge
mov
rcrb
cmp
cli
jmp
lcall
dec
ja
mov
xor
xchg
push
jmp
fistpll
das
je
out
adc
adc
nop
jb
shll
inc
fmull
loope
lcall
scas
nop
arpl
push
sarl
adc
add
ret
xchg
xchg
mov
leave
pusha
ss
pop
push
pusha
xor
pop
push
lret
les
cmpsl
out
mov
inc
mov
push
out
mov
sbb
pop
nopl
ljmp
xor
test
loope
mov
ficompl
add
scas
addr16
push
inc
jg
push
je
ljmp
adc
sub
cmp
push
sbb
mov
push
call
mov
lds
jnp
cwtl
jmp
outsb
add
push
or
call
lock
std
std
addb
ret
je
imul
iret
lahf
sbb
mov
add
ss
das
or
jge
stc
in
cmp
rcr
call
jmp
aam
push
rolb
cs
test
pop
push
call
fisubrs
add
in
xchg
push
es
inc
std
decl
mov
outsb
or
adc
jmp
push
roll
xorl
bound
mov
dec
xchg
dec
leave
int
cmp
ja
lret
stc
mov
mov
jg
pop
dec
dec
shlb
aam
pop
int3
cld
jg
loop
sub
cmp
popf
push
xor
hlt
inc
xchg
jl
jg
xchg
mov
test
sbb
jnp
mov
cld
lcall
mov
ret
jne
sbb
xchg
popa
das
mov
pop
std
out
in
out
jl
cltd
in
jmp
jmp
and
aam
push
ljmp
cmpsl
test
pop
xchg
add
add
add
cmpsb
xor
movsl
mov
sbb
dec
adc
push
mov
decl
inc
mov
pusha
dec
mov
ret
jns
pop
xchg
int3
jg
sub
aas
das
lret
xor
inc
pop
in
pusha
push
cmp
mov
mov
dec
loopne
fs
pop
ret
insl
out
fisubrs
ljmp
test
nop
icebp
xchg
scas
pop
add
and
aas
repnz
adc
fisttpll
les
mov
and
pushl
inc
cmc
xchg
leave
fisttps
pop
dec
das
pushl
out
dec
lea
jns
dec
inc
outsl
and
aam
pop
in
or
mov
test
sbb
push
add
or
stc
lcall
mov
mov
call
ds
adcb
pop
xchg
xchg
imul
ret
add
gs
lret
sub
mov
addb
add
dec
dec
es
aam
jl
lahf
pop
in
fsubrs
adc
stos
jge
and
mov
das
fcomi
mov
call
pop
mov
and
int3
sbb
inc
test
cmp
inc
ret
jb
fucomi
xchg
fwait
adc
aas
sbb
mov
dec
notl
push
lahf
pushf
jno
dec
dec
dec
xchg
out
ss
mov
pop
fneni(8087
aam
adc
outsl
lahf
ljmp
out
das
icebp
test
dec
add
stos
movsb
mov
or
mov
out
push
rcr
les
clc
call
ret
jno
add
bound
lret
repnz
shrb
mov
mov
dec
dec
pop
and
aam
pop
rcr
xchg
xchg
inc
xlat
test
hlt
mov
jno
loop
xchg
push
inc
push
call
in
shlb
xchg
das
push
xchg
or
inc
mull
dec
adc
inc
outsl
or
ret
ja
subl
bnd
push
dec
push
out
push
aaa
mov
jge
lret
lret
in
rcr
xchg
pop
leave
out
fldt
pushl
pop
test
ljmp
add
push
sub
jbe
les
pop
jle
xor
mov
cld
out
inc
lcall
cmp
ds
lret
data16
mov
out
cltd
enter
mov
in
rclb
shrl
loope
xor
mov
cltd
movsl
outsl
hlt
ljmp
data16
xor
mov
sbb
mov
call
dec
popa
xor
pop
data16
jle
aad
call
sbb
mov
pop
push
out
bound
mov
jb
idivl
fcmovnu
loopne
fistl
into
push
jle
in
cmp
sbb
and
adc
lret
outsb
inc
jb
outsb
push
mov
lcall
call
mov
in
fimull
in
addr16
sbb
adc
lcall
bound
pop
or
call
andl
cs
jno
scas
fmuls
dec
or
dec
mov
push
pop
jge
inc
mov
incl
push
dec
daa
cmp
pushl
aas
loope
aaa
addr16
mov
jb
inc
addr16
mov
stos
fcmove
testl
aas
lahf
dec
add
rcrb
lahf
pushl
dec
xchg
fdivrl
xorl
cs
mov
dec
dec
pop
fcompl
imul
mov
fistps
pop
cmpsl
enter
popf
xchg
loopne
lds
jg
mov
jb
ds
and
rorl
jbe
xchg
mov
fidivrl
dec
jmp
xor
pop
fcoml
aas
aaa
mov
mov
pop
push
mov
push
fwait
push
gs
call
mov
out
mov
mov
jmp
int
popa
int
dec
ret
jno
fs
xchg
add
popf
sub
cmp
std
in
nop
pop
aas
pop
jb
js
dec
or
int
icebp
ljmp
aaa
sub
sub
xchg
xchg
test
sub
mov
lods
aam
fistpll
scas
and
jle
movsl
xchg
add
ret
repnz
mov
ret
aad
dec
or
push
outsl
jg
movsl
xor
mov
outsl
mov
dec
loopne
jo
movsl
pop
sub
int
test
loope
aaa
dec
mov
adc
ljmp
popa
cltd
fidivl
lods
out
dec
add
lods
imul
mov
jp
xchg
cld
or
push
daa
pop
loopne
aaa
mov
cmp
sbb
pop
test
repnz
pop
dec
pop
mov
data16
mov
sbb
iret
outsb
jb
loope
cmp
push
dec
scas
icebp
cld
ja
jbe
fwait
adc
arpl
jb
out
dec
stos
mov
ja
xor
push
das
inc
and
or
out
mov
push
jle
mov
fisubs
aam
inc
loopne
icebp
jg
loope
ja
fsubrl
mov
dec
daa
lock
bswap
pop
ja
decl
push
fcomip
aas
xor
mov
pop
iret
outsb
inc
xor
jae
cmp
sub
dec
xchg
jbe
std
outsl
jp
je
cmc
insl
dec
test
iret
roll
or
das
scas
mov
mov
ds
inc
push
dec
aad
jnp
push
pop
cs
vpsubsb
lock
test
cmpsb
pop
push
aad
mov
push
rcll
std
lea
iret
dec
and
fsubl
in
aad
inc
pop
ss
pop
sbb
arpl
pop
jecxz
sbb
in
gs
outsl
fdivl
fidivrl
and
pop
jle
jg
iret
orb
inc
or
push
push
dec
decb
call
lahf
jg
addl
mov
dec
mov
jns
mov
jle
repz
outsl
lret
inc
sub
leave
outsb
mov
inc
frstor
jg
ljmp
mov
dec
jp
jnp
iret
add
fidivrl
movsb
sub
stos
cmp
push
decl
mov
mov
or
sar
jl
es
push
push
sbb
jb
call
jne
mov
xor
jbe
out
js
push
jg
jg
xchg
leave
pop
jb
lret
mov
jg
push
in
daa
sub
mov
outsb
mov
cmp
jne
dec
frstor
jb
popa
dec
pop
jbe
pushf
outsl
popa
test
in
jmp
cmp
fwait
iret
inc
jl
mov
repz
xor
pop
or
lods
into
je
jp
shlb
cmc
cs
and
sbb
add
sub
add
das
add
jmp
cwtl
push
ds
mov
movsb
sarb
push
ds
ds
gs
add
add
and
xor
or
adc
sbb
and
sub
xor
test
inc
mov
xor
test
cltd
xor
cmc
pop
mov
xor
xor
xor
xor
xor
push
xor
ss
xor
insl
xor
xor
xor
xor
xor
xor
xor
out
xor
xor
xor
xor
pushl
xor
xor
xor
xor
shlb
jns
cmpsb
ss
ss
fidivs
sbb
sub
incl
pop
aaa
outsl
aaa
ja
aaa
fwait
aaa
out
adc
sbb
pop
cmp
cmp
outsb
cmc
decl
pop
cmp
cmp
cmp
cmp
cmp
push
cmp
pushl
addr16
les
sarb
in
cmc
cmp
cmp
cmp
je
scas
cmp
cmp
ljmp
cmp
cmp
push
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
ds
aas
jmp
lock
fbstp
xor
xor
xor
xor
cmp
cmp
cmp
cmp
pop
jae,pt
cmpb
mov
ds
aas
mov
mov
aas
int
aas
call
and
xor
hlt
pushl
cld
xor
xor
xor
xor
xor
iret
xor
outsl
clc
xchg
xor
test
xor
push
or
cmp
ljmp
xchg
xor
lods
aaa
mov
out
ss
je
xchg
cmp
cmp
cmp
dec
cmp
imul
repnz
mov
cmp
cmp
sarl
sub
js
cmpb
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
sub
cmp
jae
jp
cmpl
cli
aad
aas
arpl
jp
xchg
aas
mov
xchg
jmp
xor
xor
dec
xor
jno
jp
mov
xor
xor
lcall
xor
jbe
xorl
scas
xor
xor
pushl
jne
jge
mov
push
xor
xor
xor
xor
xor
xor
xor
xor
or
fildll
data16
jg
mov
sarb
cmp
cmp
jle
mov
cmp
cld
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
sub
inc
ljmp
inc
ds
aas
xor
aas
push
pop
loope
push
mov
aas
test
mov
and
fildll
adc
push
xor
xor
xor
xor
xor
xor
xor
cmp
lea
scas
and
sub
jbe
jl
lahf
xor
xor
std
pushl
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
inc
ss
add
or
aaa
jno
ja
test
xchg
aaa
cmpsl
aaa
aaa
fnsave
fwait
mov
mov
mov
mov
cmp
cmp
dec
cmp
jmp
cmp
cmp
idiv
ljmp
jge
jmp
cmp
and
xor
cmp
inc
ds
jge,pt
add
ljmp
mov
xor
cs
xor
test
mov
xor
sub
cmpsb
dec
or
adc
xor
xor
cmp
jg
ljmp
xor
in
outsl
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
pop
xor
pushl
cwtl
xor
lret
xor
xor
rol
shll
adc
ds
dec
aaa
push
aaa
jne
sbb
jge
push
sahf
aaa
stos
dec
cmp
insb
cmp
cmp
cmp
or
cmp
push
cmp
jae
jle
mov
xchg
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
dec
loope
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
call
push
cmc
cmp
bound
sarb
fnstsw
jmp
cmp
cmp
decl
data16
cmp
cmp
cmp
cmp
cmp
das
mov
incl
cmp
out
cmp
push
dec
cmp
push
ds
ds
mov
fnstcw
loope
in
ds
and
outsb
popa
sarl
sbbb
adc
xor
and
and
inc
popf
xor
mov
mov
fwait
xor
xor
xor
mov
xor
xor
xor
xor
xor
decl
push
int
and
cmp
dec
dec
cmp
cmp
cmp
cmp
inc
xlat
pushl
cmpb
nop
cmp
cmp
cmp
cmp
pop
aam
push
mov
jg
cmp
cmp
cmp
cmp
dec
xor
cmp
fwait
mov
sbb
dec
aas
pop
movsl
jg
xchg
aas
mov
in
aas
sti
outsl
mov
repz
or
and
cmp
aas
decl
or
xor
insl
cmp
cltd
xor
xor
xor
xor
xor
scas
pop
cltd
sub
jns
mov
imul
stos
jg
sbb
out
xor
and
xor
lds
int3
xor
jns
pushl
jle
test
mov
xchg
xor
xor
xor
xor
xor
xor
popf
aaa
jle
or
jnp
adc
jmp
and
sub
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
dec
adc
dec
divl
loope
fwait
and
xor
imul
push
mov
xor
fdivl
icebp
xor
sbb
fwait
dec
decl
ss
ss
ss
out
lock
add
aaa
push
negb
aaa
and
add
addr16
cmp
outsb
icebp
outsl
cwtl
aaa
dec
mov
mov
aam
fnstsw
cmp
mov
cmp
cmp
cmp
sub
out
cli
inc
cmp
push
cmp
cmp
cmp
cmp
aad
std
cmc
cmp
cmp
icebp
dec
cmp
cmp
cmp
cmp
divl
jg
aaa
test
mov
les
cmp
cmp
cmp
cmpsl
push
xor
jo
cmp
pop
or
repnz
incl
dec
cmp
jne
mov
lock
pop
xor
mov
xor
xor
lock
mov
xchg
outsl
out
xor
xor
xor
mov
xor
xor
xor
fnstcw
xor
xor
xor
xor
xor
lock
pop
aaa
xor
hlt
aaa
sbb
inc
aaa
dec
aaa
push
popa
addr16
test
mov
clc
inc
pushl
xchg
aaa
xchg
aaa
popf
aaa
mov
aaa
lds
lret
aaa
and
cmp
cmp
cmp
cmp
cmp
cmp
or
add
jns
xchg
mov
loop
imul
sar
cmp
cmp
cmp
dec
cmp
dec
outsl
loopne
pop
sbb
je
jp
adc
sub
cmp
mov
mov
int
fnsave
add
or
adc
sub
outsl
push
jge
add
and
ret
push
and
cmp
mov
sahf
fcompl
rcrl
paddd
cltd
cmp
popf
fstps
cltd
cmp
cltd
cmp
adc
leave
inc
adc
inc
mov
sbb
or
add
add
push
cmpb
fdivs
or
pop
js
pop
xor
inc
repnz
mov
and
cmp
add
aaa
loopne
cs
cmpb
nop
jmp
jge
adc
fldcw
and
add
cmp
jnp
mov
loopne
or
and
fwait
cmp
arpl
repz
daa
inc
mov
xchg
popf
sub
mov
daa
stos
adc
inc
incl
add
jno
inc
and
xchg
out
inc
and
add
stc
adc
add
push
push
add
mov
inc
and
sbb
xchg
cmp
test
pop
push
add
and
das
stos
sbb
and
mov
xor
add
repnz
stos
hlt
cld
mov
notb
addb
pop
ficoms
or
out
add
jno
push
sub
pop
xor
sahf
inc
jno
inc
and
or
push
jle
adc
adc
stc
test
inc
and
add
jo
and
inc
and
jl
and
adc
cmpb
inc
and
add
mov
adc
inc
jle
push
jno
adc
add
adc
add
xor
insl
push
ss
mov
data16
add
or
xor
adc
into
out
mov
out
in
sub
add
add
mov
xor
xor
xor
mov
and
dec
dec
enter
xor
inc
sbb
push
mov
push
xor
xchg
adc
rcll
fcomps
xorb
adc
push
jnp
and
pop
add
dec
jno
xor
repnz
add
mov
and
dec
bnd
add
xor
adc
pop
add
inc
and
fisubl
add
addb
inc
xchg
inc
push
xchg
and
and
dec
sbb
add
inc
cmp
push
repz
gs
or
jp
pushl
mov
and
mov
pusha
adc
and
mov
adc
adc
or
push
mov
xchg
mov
xchg
leave
or
jmp
dec
test
adc
pop
jae
movsl
mov
enter
fcoms
cmp
adc
sub
push
jnp
jmp
jae
test
mov
cld
sub
inc
dec
lock
popa
or
je
push
sbb
xor
cmp
pop
pop
out
jge
ja
dec
cmp
lock
sbb
and
fwait
popf
pusha
or
jno
pop
cmp
aad
pop
popf
hlt
xor
or
lock
lds
add
mov
jnp
xor
mov
in
int
hlt
and
sub
or
xchg
mov
inc
inc
sbb
shll
ret
push
fwait
or
bound
es
ds
out
inc
xor
pop
and
cmovp
pop
in
decb
in
mov
jmp
jne
add
imul
inc
daa
lret
mov
cs
xchg
sub
inc
dec
dec
insl
insl
jae
lret
push
push
clc
je
dec
jp
mov
inc
jg
mov
nop
or
mov
dec
xor
jb
loopne
loop
cmpsb
jmp
gs
dec
imul
imul
pop
faddl
pop
out
aad
push
mov
adc
sbb
add
lahf
les
pop
cmp
cmp
out
add
cmpl
pushl
dec
call
jnp
aas
int3
sbb
popf
je
cmp
dec
add
leave
ljmp
daa
or
jmp
mov
in
or
xor
in
jb
in
or
in
xchg
jl
imulb
sar
lea
push
push
jno
dec
sbb
jne
inc
push
xchg
cmp
pop
adc
mov
test
dec
or
push
add
mov
mov
xor
fcoml
std
sub
mov
or
xor
in
or
lcall
adc
jnp
cmp
add
rorl
cmp
and
xchg
xchg
jp
clc
std
inc
push
int3
shlb
mov
pop
or
mov
mov
sbb
inc
inc
xchg
push
icebp
push
std
push
and
in
ljmp
dec
enter
mov
pop
mov
cmp
jecxz
xchg
aaa
inc
add
cmp
jl
sub
mov
lds
popl
jg
sbb
lcall
add
and
pop
and
dec
out
or
mov
fisubs
or
gs
xchg
and
outsl
gs
xchg
xchg
outsb
gs
cs
gs
aam
aad
add
popa
daa
jne
fs
xchg
outsb
arpl
cmp
push
push
shll
loope
mov
lret
mov
js
bound
fs
jbe
push
sti
xor
call
ss
xor
mov
adc
hlt
sub
repnz
sarb
xor
leave
lret
xor
xor
int
iret
shlb
xor
xor
rcl
aam
mov
rol
mov
mov
into
mov
rorb
icebp
adc
int3
add
push
cwtl
loopne
incl
xchg
sti
mov
sti
sbb
dec
outsb
pop
push
push
inc
sub
mov
fs
xor
data16
add
dec
push
outsl
ret
jge
inc
shll
add
cmp
and
or
call
data16
push
push
adc
cld
xlat
into
outsb
orl
cmpsb
aaa
push
push
sub
sbb
add
adc
push
call
stc
xchg
jns
inc
and
jmp
inc
mov
ret
dec
xchg
cmpsb
sahf
pushf
nop
mov
cmp
xchg
loop
mov
xchg
xchg
and
inc
mov
cltd
lcall
pop
xchg
push
xor
push
adc
mov
push
sub
sahf
popf
nop
push
xchg
std
pop
xchg
data16
xchg
xchg
xchg
pop
sub
mov
jnp
js
in
mov
mov
xor
shll
mov
add
fadd
stos
std
icebp
add
cmp
and
or
rolb
cmp
ror
std
or
fwait
pop
sbb
xchg
or
lods
insl
test
rolb
fnstcw
jns
jns
or
xor
xor
push
out
fs
pop
repz
hlt
cmc
div
call
or
mov
add
jmp
xor
jae
dec
shrb
push
pop
xchg
popa
outsl
add
mov
insb
adc
mov
lret
mov
insb
popa
jne
cmpsb
fwait
sub
arpl
cmp
mov
mov
jno
xchg
gs
jno
outsl
imul
cs
sub
push
adc
jo
mov
lret
insb
outsl
jb
xor
shr
shll
in
in
push
dec
rorb
out
call
out
and
push
add
pop
add
movsb
enter
add
add
aam
add
dec
xor
fxch
movsb
xor
call
mov
and
inc
mov
je
push
mov
dec
dec
xchg
mov
jge
push
inc
inc
sbb
and
out
pusha
mov
inc
mov
andl
dec
xlat
fsubr
or
xchg
lds
stos
mov
repnz
push
or
cmc
push
pop
repnz
out
xor
sub
push
insl
adc
test
xchg
stos
cmp
rcr
sbb
or
sbb
xorb
jae
jg
inc
sub
push
test
jbe
aam
add
fmuls
das
shrb
or
in
les
in
lea
call
add
es
enter
mov
shrb
pop
add
test
scas
push
or
and
add
rcrb
shll
pusha
mov
test
aaa
dec
mov
xchg
adc
stc
cmp
xchg
int3
jg
sbb
fisttpl
xchg
inc
add
into
jle
add
ficompl
leave
pop
mov
cs
rol
push
cmp
fisttps
or
adc
xor
xchg
mov
pop
pop
or
inc
sbb
jo
add
push
call
addb
inc
and
adc
lds
aaa
leave
push
sbb
loopne
adc
dec
push
jo
or
repnz
mov
mov
inc
and
adc
adc
test
lds
and
sub
pusha
repnz
push
enter
add
cli
movsb
hlt
nop
lret
push
and
adc
push
sbb
inc
orl
fwait
popa
test
add
xor
int3
add
out
call
lea
sub
pop
sti
add
add
jae
sub
mov
or
loope
mov
mov
cwtl
inc
and
add
lcall
fdivs
or
pop
sbb
in
pop
push
inc
and
xor
roll
ss
push
pusha
insb
dec
shll
ret
shll
out
inc
fmulp
imul
addr16
cmpsb
xorb
jae
xchg
shll
jbe
dec
jne
xor
xchg
dec
stos
pop
xor
add
pop
test
inc
aaa
int3
ds
jb
aaa
xor
xor
inc
add
jo
orb
add
inc
movsb
xchg
nop
insb
cmp
mov
push
outsl
pop
or
xchg
mov
outsl
mov
mov
popa
jns
jne
jae
xor
lods
or
jge
popa
dec
call
push
js
imul
add
xor
dec
push
dec
jae
push
jg
jae
sub
push
push
dec
sub
xchg
dec
xchg
rorb
ret
and
mov
divb
sub
inc
adc
leave
test
xchg
sbb
xchg
dec
jae
xchg
movsb
inc
enter
cwtl
and
inc
sub
mov
push
dec
dec
push
add
loope
lds
test
out
orl
push
adc
orl
sub
mov
mov
sbb
or
push
sub
adc
add
ret
sbbl
and
sbb
jmp
movsl
sbb
push
rcr
mov
outsb
outsw
es
mov
lods
dec
sbb
pop
xor
pusha
pop
push
addr16
cmpsl
sub
push
push
mov
add
mov
push
outsb
jb
lds
and
mov
lahf
sbb
push
movsb
lods
sub
lds
inc
sub
adcb
arpl
mov
and
adc
jmp
add
pop
mov
mov
dec
push
sub
cmp
loopne
arpl
insl
dec
jae
jg
mov
inc
push
fbstp
in
inc
add
or
outsb
or
pusha
add
movl
dec
pop
inc
and
sbb
roll
lods
aaa
pop
xchg
test
fnstenv
nop
mov
lock
cld
add
dec
cmpsb
imul
imul
mov
clc
or
and
or
and
pop
roll
jge
add
mov
add
mov
pop
das
adc
icebp
lods
shll
add
scas
mov
dec
ss
inc
and
push
add
pop
adc
mov
lea
jne
sbb
push
adc
addl
mov
icebp
dec
xor
push
pop
adc
clc
push
in
mov
cmp
jne
or
push
adc
cmp
adcb
and
sbbb
inc
sbb
push
dec
rcpps
outsl
jns
jae
jo
xchg
pop
out
xor
jns
pop
push
sub
fsubrl
or
pop
or
pop
insl
btr
xor
je
mov
int3
in
cmovno
imul
dec
outsl
sbb
jae
push
lock
add
incb
rcrb
adcb
xor
dec
test
add
and
push
mov
add
xor
add
dec
lcall
inc
cmovns
add
stos
pop
cmp
jl
movsb
jmp
add
add
sub
les
mov
jge
addr16
pop
jecxz
xlat
popf
outsb
lret
or
mov
fimuls
jecxz
inc
and
mov
outsb
inc
jae
and
add
movsl
popa
and
add
pop
mov
xor
gs
jne
jo
imul
xchg
jae
inc
out
pop
add
sti
adc
sub
add
push
jb
lret
mov
fnstenv
xor
popa
jmp
xchg
jne
insb
popf
xchg
pop
dec
or
jae
lods
addr16
jo
popf
addr16
testl
sub
pop
xor
xor
inc
fwait
jmp
pop
fs
or
mov
push
sub
dec
dec
imul
push
daa
mov
lahf
sbb
mov
mov
outsl
pcmpeqw
jae
mov
or
xor
inc
push
imul
and
arpl
movsb
sbb
out
add
cmpl
jg
cli
xor
cmp
mov
xor
mov
shlb
xor
mov
cli
xor
pusha
xor
lea
xor
xor
jg
cli
lea
mov
fwait
xor
xor
xor
fisttps
xor
xor
push
shll
into
xor
incl
xor
xorb
xor
js
jg
call
mov
xorb
aaa
pushf
aaa
mov
cmp
cmp
test
mov
cmp
mov
fisttps
cmp
cmp
cmpl
push
frstor
dec
cmp
incl
out
cmp
cmp
stos
cmp
or
jne
clc
push
push
stos
cmp
cmp
das
push
mov
xor
xor
and
jg
std
pop
aam
test
xor
xor
xor
xchg
sub
pushl
in
xor
sub
push
ss
ss
ss
divb
and
add
neg
aaa
mov
cmp
pop
mov
aad
fcompl
cmp
cmp
rcrl
add
xor
xor
or
nop
or
sub
adc
add
add
or
and
xchg
and
rorl
and
pusha
add
lods
or
sub
jae
jne
pop
sbb
inc
outsl
pavgw
andb
je
jae
xchg
sub
mov
sub
and
int3
insb
jbe
fidivs
pop
pop
dec
add
or
add
rcll
loop
mov
mov
ja
mov
iret
pushf
es
int
adc
andb
cmp
dec
or
nop
stos
add
dec
stos
cwtl
fs
xor
sbb
arpl
pop
sbb
mov
mov
push
nop
mov
sub
pop
repnz
push
test
andb
and
add
and
pop
mov
add
adc
nop
jp
sub
fstps
or
test
or
push
add
flds
xor
rclb
dec
push
add
sbb
sbb
adc
push
mov
daa
jl
sbb
shlb
add
orl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
