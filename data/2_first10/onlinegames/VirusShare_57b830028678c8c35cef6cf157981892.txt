push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
je
js
pop
ss
jl
dec
sbb
pop
subl
pop
push
dec
bound
arpl
sbb
inc
add
xor
and
or
cmp
and
nop
inc
push
cmp
hlt
lock
push
sbb
in
sbb
aam
fs
inc
ror
enter
push
les
shl
push
sbb
mov
pop
fcomp
lret
add
sbb
push
incl
jnp
mov
push
push
and
sbb
add
shl
push
in
mov
ret
push
cmp
cmp
out
pop
test
je
call
add
mov
jmp
enter
jne
xlat
insb
aas
mov
test
je
test
je
push
mov
and
cmp
in
popf
insb
sbb
cmp
push
mov
adc
push
out
popf
jnp
lea
mov
mov
push
push
mov
fidivl
mov
cmpl
mov
xor
ja
or
and
adc
jo
xor
mov
mov
and
or
in
in
mov
mov
jp
ret
push
push
push
cmp
jno
mov
shll
shlb
pop
mov
mov
add
sbb
jecxz
cmp
je
push
mov
mov
ja
lea
lea
std
rep
mov
es
sub
cmp
ja
and
sbb
imul
sarl
rep
cld
dec
sar
lods
insl
in
add
or
pop
out
or
mov
push
ja
adc
mov
test
add
push
cmp
jbe
cmpb
jne
cmpb
add
out
in
mov
jmp
cmp
nop
outsb
mov
xor
xor
add
popa
or
leave
cmp
jne
xor
es
ja
pop
pop
ja
mov
mov
push
push
cwtl
mov
mov
xor
jmp
decl
jmp
cmp
adc
mov
mov
inc
gs
fs
or
pusha
loope
sub
addr16
jmp
xchg
mov
decl
call
push
push
clc
or
lea
push
push
fisttps
std
ffreep
pop
adc
clc
mov
mov
or
add
or
je
jle
dec
jmp
push
or
pop
cmp
jb
cmp
ja
sub
fwait
xchg
sbb
xor
mov
les
jno
mov
cmp
xor
sti
clc
pop
add
mov
je
jge
sbb
pop
cwtl
mov
jnp
add
jnp
add
pop
movl
push
sbb
fldt
mov
xlat
push
add
mov
or
jge
mov
xchg
lea
lea
add
jo
imul
cs
jne
fwait
add
outsl
fwait
push
pop
add
inc
mov
outsl
or
es
push
inc
jbe
jns
or
jmp
and
rorb
lcall
add
dec
sete
out
pop
sub
xlat
cmp
add
addr16
jno
push
mov
outsl
push
adc
add
lds
or
and
or
xor
or
sbb
xchg
out
negb
int3
movl
daa
pop
inc
xor
pop
movsb
add
out
int
push
and
and
cmpb
jne
testl
push
xchg
rclb
inc
js
inc
dec
adc
ja
mov
cmpl
and
decl
fstpt
add
pushl
and
inc
and
adc
mov
push
push
sbb
lret
jnp
sbb
lea
pop
push
sti
in
dec
push
test
mov
enter
push
sbb
dec
inc
jmp
push
dec
sub
mov
or
jmp
lea
mov
or
iret
xor
push
mov
mov
les
mov
or
jmp
cmc
rcl
je
into
mov
into
mov
and
adc
add
sub
push
pop
sbb
or
sbb
ljmp
fstl
imul
mov
mov
or
loopne
test
data16
insw
push
pop
mov
cs
pop
jg
adc
adc
pop
mov
call
dec
jnp
andl
cmp
and
and
mov
add
mov
sahf
or
sbb
jb
xor
adc
mov
xor
fwait
mov
cmp
jbe
mov
mov
inc
inc
and
jmp
xchg
test
daa
jo
pop
shl
add
pop
mov
push
pop
push
test
add
addl
cwtl
jnp
and
js
or
push
or
ljmp
fwait
add
sub
je
mov
cmp
jae
testw
mov
mov
je
cmp
je
inc
mov
insb
rorl
sbb
jb
jle
mov
movb
incl
jmp
pop
mov
mov
pop
orl
mov
adc
rorb
pop
dec
mov
es
mov
roll
push
sti
pop
outsl
call
jl
mov
inc
cmp
adc
out
jmp
adc
jne
dec
sub
mov
jl
cmpb
aaa
test
je
adc
mov
mov
and
pop
mov
cmp
ds
adcl
add
inc
sti
or
or
lock
cld
sub
cmp
decl
aaa
jge
pop
insb
mov
push
daa
aaa
or
mov
xor
push
loope
out
iret
push
ret
push
cmp
divb
insl
sbb
jne
adc
add
fildl
sub
iret
jae
sar
shlb
shrb
mov
xor
div
add
das
pop
push
outsb
icebp
and
add
pop
sti
std
ret
sub
and
cmp
sub
jle
xchg
add
mov
adc
inc
sbb
mov
inc
dec
jne
add
or
mov
or
lock
shlb
bound
mov
loop
push
inc
sub
je
mov
push
sub
je
pop
jle
pop
and
je
pop
je
xor
add
adc
dec
or
in
fucomp
add
sub
or
cmp
ja
lea
mov
xchg
add
add
sub
dec
je
imul
or
addr16
js
pop
sub
jmp
arpl
sub
stc
mov
je
insl
sbb
and
mov
xor
adc
or
aas
testb
incb
mov
xlat
fninit
fldcw
or
xlat
mov
inc
faddl
inc
jmp
add
repz
js
iret
lret
mov
fstpl
add
test
std
jne
es
lock
clc
fs
jae
insl
scas
add
or
icebp
inc
shl
or
mov
stc
call
das
insb
insb
js
std
xlat
stos
xchg
fsubs
shr
and
rolb
dec
lods
pop
lods
jnp
insl
orl
pop
movsl
pop
mov
outsl
cmc
add
sbb
in
cmp
je
pop
mov
int3
or
scas
adc
mov
nopl
sbb
mov
daa
push
pop
mov
mov
ljmp
jbe
cld
push
insl
jmp
lcall
ja
jle
test
push
add
repnz
push
push
jbe
pop
testb
lcall
je
cld
pop
dec
mov
outsl
sbb
fidivl
or
sub
mov
popf
add
xor
xlat
std
or
add
loope
loop
out
cs
insl
push
std
jl
push
hlt
mov
das
std
adc
mov
add
jbe
inc
or
mov
pop
inc
ret
jmp
xor
xchg
or
aas
mov
push
cld
mul
xor
cmovl
adc
push
clc
outsb
mov
and
jg
ficomps
jge
pushf
adc
xchg
ja
cmp
sbb
add
fldt
in
push
insl
xchg
add
mov
push
mov
in
xor
mov
pop
add
fdivr
mov
add
pop
push
push
mov
ljmp
xchg
cmpb
je
cmp
jne
movsbl
inc
inc
jmp
ljmp
rcrl
dec
cmp
test
loope
pop
mov
xchg
mov
adc
loop
ret
xchg
add
add
push
pop
sarb
cmp
push
push
sbb
je
cld
lods
sub
iret
adc
rolb
out
loop
mov
push
add
cmp
cli
out
stos
aaa
test
ret
xor
adc
push
cs
jmp
jl
and
add
add
cmp
jp
jg
jl
insb
xor
cmp
jbe
adc
push
pop
or
push
cmp
je
cwtl
push
jo
dec
add
push
cmp
faddl
cld
xchg
imul
mov
fsts
mov
jg
fbstp
add
add
inc
add
insl
clc
fldl
jo
adc
neg
pop
mov
nop
pop
inc
or
je
fs
xchg
movsl
push
in
cmpsb
es
mov
inc
add
pop
cmc
cmp
push
cltd
push
movsb
call
jae
add
pop
aaa
xor
xor
jnp
pop
or
pusha
add
ja
mov
or
je
sbb
movsl
insl
mov
adc
mov
push
cld
pop
or
mov
ljmp
pop
inc
int3
jmp
inc
roll
mov
inc
or
push
pop
mov
jo
add
dec
mov
inc
fiadds
fucomp
call
adc
pop
fcmovnbe
xchg
cwtl
lock
add
call
leave
ret
cmp
jle
mov
inc
mov
add
call
inc
sbb
mov
pop
mov
movsb
xor
push
mov
pop
sub
aam
xchg
add
lret
imul
rol
add
std
insl
icebp
lcall
mov
loope
jno
sbb
movb
insl
mov
jecxz
xchg
inc
loop
mov
inc
call
pushl
add
mov
insl
ret
mov
or
or
fstpt
es
push
sub
cmpl
adc
and
jne
mov
cmpb
mov
cmpl
jl
lds
dec
adc
data16
fidivl
adc
sbb
and
mov
push
push
adc
mov
ljmp
pop
iret
shlb
cmpsl
jl
int3
mov
cmp
or
jo
adc
or
push
mov
or
push
mov
push
or
and
sahf
jmp
lahf
test
clc
ud0
arpl
clc
jb
xlat
mov
popa
iret
and
sub
movl
xor
fildl
daa
and
inc
jg
sbb
adc
mov
or
xor
imulb
xchg
dec
jmp
inc
divb
jle
xlat
adc
xchg
mov
imul
add
dec
mov
inc
add
add
or
mov
adc
je
lds
xchg
stc
sub
cmp
int
fwait
xor
std
sub
fisubrs
fsubr
loopne
inc
or
lret
pop
ret
dec
leave
mov
push
jns
jl
cmp
cmp
or
inc
in
insl
popa
add
inc
add
testb
in
jmp
push
push
mov
inc
or
aaa
clc
pop
mov
scas
jne
not
in
rcrl
outsb
mov
mov
jb
cmp
jl
mov
xlat
push
test
mov
mov
add
mov
andb
sub
rcl
jns
ja
add
push
inc
das
push
adc
movb
xor
mov
mov
cmp
je
cmp
push
lcall
aam
cmp
push
cli
cld
add
test
sub
dec
mov
mov
mov
aam
bound
dec
mov
scas
dec
clc
inc
lock
jo
lret
mov
arpl
mov
xor
adc
push
push
or
jmp
insl
in
cld
cmp
adc
dec
mov
insl
aas
mov
test
mov
jmp
mov
push
inc
pushf
sbb
insb
xchg
into
orb
leave
out
mov
or
mov
jno
fstpl
pop
lea
jmp
mov
or
cli
pop
push
decb
cld
ja
add
push
shr
es
testb
mov
dec
je
in
mov
loopne
push
or
add
or
imul
add
pop
and
and
fldt
lret
cmp
cmp
jne
push
adc
ret
loope
cmp
jne
ja
jmp
pusha
jmp
push
adc
mov
jg
shr
or
fwait
ja
sti
push
clc
inc
mov
lar
add
aaa
xchg
ret
pop
xlat
sbb
popa
pop
or
dec
mov
in
or
out
jecxz
xor
adc
pop
sub
mov
jl
cmp
jge
sub
mov
jg
add
sbb
sahf
js
iret
adc
in
dec
mov
xchg
jmp
adc
pop
or
mov
and
lcall
xor
mov
pop
jle
movsl
mov
jle
and
stc
add
jnp
call
daa
inc
push
pop
and
fwait
push
cwtl
xchg
xor
mov
push
into
dec
js
mov
inc
dec
test
adc
cmpsb
das
out
cltd
sbb
cmp
fcomp
add
sub
clc
push
dec
ja
pop
and
jle
adc
cmpl
loope
add
sub
ret
adc
mov
jo
stos
jmp
mov
jecxz
jae
xor
push
pop
dec
sbb
icebp
test
pop
push
cli
dec
xchg
iret
push
mov
push
xchg
mov
push
aad
cmp
and
pop
xor
dec
jg
mov
cmp
loop
sub
push
xor
mov
faddl
cmp
je
cmp
je
dec
pop
cmp
fisttpl
js
cvttps2pi
mov
jbe
add
or
add
or
adc
push
or
sbb
mov
mov
dec
and
sbb
sub
add
adc
sbb
xchg
mov
jne
or
ja
xlat
ljmp
call
movsb
dec
xor
pop
mov
repz
adc
push
call
adc
test
jmp
pusha
mov
jl
cmp
ret
xchg
and
jo
das
mov
and
dec
and
data16
add
rol
inc
dec
ret
and
mov
stos
add
add
xchg
add
out
jne
shl
adcb
ljmp
mov
sbb
and
pop
dec
or
shlb
fists
mov
decl
daa
repnz
mov
jmp
and
push
je
fimuls
sbb
adc
and
into
sbb
mov
adc
icebp
jnp
or
shrl
fwait
push
imul
fcmovb
stc
cmc
push
roll
rcr
aaa
mov
or
jbe
incl
call
add
jge
pop
lea
push
pop
cld
std
xor
clc
pop
ret
subl
pop
mov
stc
loop
xchg
mov
add
pop
fldcw
xlat
or
mov
mov
mov
lret
and
inc
inc
xchg
push
sahf
sub
popl
fnclex
orl
jl
imull
andb
jle
adc
or
jmp
push
mov
bound
pop
sub
pop
adc
sub
mov
cmp
sub
fwait
mov
fcmovnb
mov
push
icebp
lods
in
leave
xor
insl
or
mov
pop
mov
sti
in
insb
fs
addb
xor
dec
mov
fsubrs
cmp
int
js
xlat
jo
push
imul
mov
sub
sub
aaa
or
dec
test
enter
jmp
mov
or
pop
push
adc
roll
inc
in
mov
gs
pop
sbb
das
xchg
enter
nop
pop
mov
test
enter
insb
or
enter
pusha
xor
and
and
and
cmp
or
enter
sub
xor
and
enter
and
and
loop
push
sbb
adc
pushf
sbb
nop
add
clc
loope
xor
and
and
and
aam
inc
fistl
int
loop
shl
or
sub
cmp
in
sub
mov
nop
pushf
mov
repz
jp
cli
mov
inc
inc
dec
push
imul
clc
inc
pushf
sbb
add
add
divb
xor
mov
in
pop
mov
sbb
add
shll
inc
pop
cmpsl
stos
leave
sbbb
mov
in
mov
mov
test
jno
fnsave
push
sbb
repz
fs
pop
imul
repnz
nop
pushf
mov
cmp
movsb
mov
test
lods
in
cmpl
push
in
nop
xor
add
shlb
nop
out
inc
enter
jns
int3
sarb
fsubrl
mov
stc
add
or
jb
gs
decl
insb
xor
cs
insb
aas
inc
jb
popa
je
push
outsl
outsl
insb
push
mov
pop
push
outsb
popa
jo
push
sbb
dec
imul
add
dec
gs
pop
pop
ss
sbb
dec
push
sub
mov
outsl
arpl
jae
gs
outsl
jb
add
ss
push
fs
ja
push
pop
push
mov
mov
ds
dec
outsl
fs
gs
nopl
adc
pop
push
aas
or
sbb
mov
push
xor
jb
stc
nop
pop
lods
dec
add
dec
mov
repnz
cs
xor
inc
mov
loop
xor
pusha
pop
sub
and
enter
sbb
leave
sbbl
or
cmp
jb
insl
and
or
sub
jae
dec
jne
insb
xlat
imul
js
jb
decl
outsl
nop
pop
jno
pop
dec
popa
imul
insb
popa
adc
outsl
lret
jmp
outsl
data16
imul
sbb
jb
fistpll
sub
jae
outsb
inc
jae
das
cmp
cltd
add
jmp
ds
cmp
sub
sti
out
pop
mov
lea
push
adc
outsl
xchg
int3
pushf
nop
add
jbe
xor
adc
es
scas
pop
enter
test
mov
pop
adc
call
in
lsl
inc
addb
in
push
xor
mov
ljmp
push
clc
mov
mov
ja
gs
nop
xchg
xor
and
orb
popf
push
mov
jp
cmp
add
scas
push
inc
mov
mov
lea
mov
adc
jbe
push
cld
mov
repnz
and
add
mov
lock
out
mov
dec
test
imul
sti
add
mov
pusha
cmp
adc
mov
in
lea
shrl
loopne
mov
adc
jg
pushl
xchg
xor
mov
rcr
sbb
stos
and
cmc
jnp
adcl
inc
sbb
mov
insl
insb
mov
mov
imul
and
jge
xchg
push
paddusb
pop
mov
flds
jge
cmp
mov
mov
xchg
push
add
lods
ja
and
add
inc
dec
add
int3
idivb
push
test
popf
fwait
ljmp
ret
es
and
push
or
mov
pop
ss
lret
and
fwait
push
xchg
call
int
in
in
fsub
sub
mov
fsub
leave
and
mov
xor
rcl
aam
xchg
fmull
int3
mov
xchg
out
add
enter
enterw
cmp
mov
mov
leave
int
mov
sbb
lods
lods
mov
jb
and
test
or
dec
xor
and
cmp
xchg
xchg
cwtl
cwtl
sahf
xchg
pop
jb
mov
mov
mov
xchg
pop
test
enter
cmp
xorb
js
cmp
pop
int3
outsl
test
inc
fs
data16
or
je
jb
sarl
insb
jb
and
sbb
pushf
pop
xor
pusha
cwtl
nop
out
pop
pusha
rolb
pop
dec
sbb
pop
pop
pop
push
fs
jns,pn
push
mov
push
fs
dec
push
nop
dec
sahf
xchg
push
dec
mov
cltd
inc
inc
inc
xchg
out
xchg
inc
inc
cmp
cmpl
xor
jb
enter
xor
adc
fdivl
scas
sub
and
sub
test
and
and
sbb
enter
and
sbb
sbb
xor
and
adc
leave
and
or
daa
fs
cmp
roll
add
leave
enter
or
jb
jae
sbb
mov
sbb
and
clc
cld
decb
and
cld
hlt
sub
fs
hlt
jg
inc
in
in
sahf
xchg
dec
inc
lock
dec
call
fcoml
and
pop
inc
add
fisubrs
sbb
cmp
mov
mov
xor
mov
mov
jo
or
mul
add
movsl
mov
push
movzwl
lcall
lret
testl
movsl
pop
je
je
jae
jns
dec
sub
ja
jae
imul
aas
arpl
add
add
dec
cltd
sub
sub
inc
mov
popa
lods
push
stc
addps
outsl
insl
outsb
imul
test
clc
sub
jnp
mov
outsb
pop
xchg
mov
jns
and
mov
mov
add
addl
shlb
mov
push
out
imul
inc
das
imul
jo
and
loope
mov
cld
mov
aad
jg
xlat
mov
push
mov
cmp
pop
pop
jecxz
jne
dec
cmp
ret
ret
negb
push
or
mov
rol
callw
xor
sub
sub
mov
lret
xor
ret
add
lret
outsl
add
rorb
rep
mov
fiadds
lcall
xchg
and
pop
adc
subl
roll
and
lock
sbbb
add
jo
pop
ljmp
clc
xor
int3
les
lahf
adc
iret
adc
pop
jecxz
mov
add
inc
hlt
or
pop
jge
mov
imulb
dec
adc
pop
cli
pop
xor
mov
or
je
aam
pop
pop
scas
push
rcll
and
shrl
jne
jne
inc
movsb
push
in
jb
call
pop
mov
push
jg
hlt
xchg
add
sbb
push
movsb
ret
faddl
adc
aaa
add
sbb
xchg
dec
outsl
popa
push
cmp
clc
fs
imul
dec
xchg
inc
push
adc
pop
push
push
fcmovu
nop
andb
pop
les
push
jae
or
or
sub
jne
bound
cmp
mov
or
push
push
inc
mov
movb
adc
lds
mov
and
xchg
or
lea
aas
arpl
repnz
mov
pop
sub
xlat
adc
add
jmp
dec
dec
push
mov
decb
jae
adc
sbb
jg
mov
or
adc
mov
fwait
insb
mov
jb
stos
xor
repnz
mov
or
mov
pop
dec
clc
fisttpl
inc
jns
fs
sbb
mov
push
rclb
stc
sbb
andb
mov
adc
fcom
ret
lret
dec
jle
fldenv
xor
push
push
ret
sbb
mov
mov
push
cmpb
jne
dec
loopne
mov
push
out
push
inc
aas
pop
xchg
je
cmp
mov
cmp
or
jl
mov
mov
xor
mov
rclb
rol
mov
enter
inc
hlt
lock
subl
stc
sub
faddl
and
call
mov
cmpl
in
dec
mov
dec
xor
push
lea
sub
mov
pop
cmp
inc
jle
pusha
lea
xor
inc
sarb
mov
jne
cmp
cmc
shlb
cmp
je
mov
inc
inc
jmp
popa
mov
shrb
jmp
or
pusha
jmp
adc
add
rorb
lods
out
inc
test
ret
or
push
les
loope
xlat
pop
in
xor
int3
fldt
inc
das
or
mov
insb
shrb
or
push
dec
push
daa
loopne
or
std
sbb
sti
push
push
xchg
jb
mov
shrb
lods
scas
into
out
lock
enter
js
popa
sub
add
add
loopne
jns
inc
inc
fadd
mov
subb
or
jo
push
cmp
jb
je
mov
test
mov
add
test
test
or
fsubrs
adc
xchg
icebp
add
jp
inc
iret
mov
cmp
and
and
fs
sbb
in
cmp
sti
mov
pop
sarb
adc
add
lret
mov
jo
or
movsl
or
dec
cmp
mov
pop
loop
arpl
cmp
sub
sub
dec
push
push
push
das
xor
fdivrp
adc
push
push
pop
outsl
outsb
je
add
insl
sub
insb
imul
js
ja
sub
xchg
jg
pushf
insb
and
fs
leave
jne
or
jns
notl
stc
push
insb
cld
xor
mov
inc
dec
insl
ret
lds
shll
ret
cli
cmp
ret
push
std
decl
imul
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
lahf
std
outsl
fbstp
add
push
mov
sub
push
mov
mov
pop
sub
and
dec
pusha
fwait
pop
or
nop
push
faddl
fcomps
lret
mov
ror
and
lock
sub
inc
mov
test
loope
jp
mov
je
push
enter
out
xchg
shll
pop
adc
or
fnsave
stc
add
pop
shll
ljmp
pop
jmp
cld
in
gs
inc
std
in
mov
xchg
out
scas
out
push
mov
dec
fsubl
jne
cmpl
fdivr
sbb
xor
fcom
cld
aam
cmpl
sbb
xor
dec
enter
cmp
mov
or
pushf
add
js
xor
jl
mov
dec
or
std
enter
jmp
or
arpl
xor
push
jne
inc
sbb
gs
dec
imul
pop
sbb
push
sbb
rolb
jbe
lods
jp
inc
adc
addr16
bound
sbb
jbe
or
mov
sahf
push
lahf
insl
inc
fadds
sbb
add
sub
call
adc
shl
jmp
push
int3
mov
jmp
sbb
mov
jg
push
mov
add
jne
test
jl
mov
inc
adc
rorb
cld
mov
cmp
es
call
add
push
inc
decl
jne
cmp
jae,pn
sub
jnp
jmp
das
dec
cmp
jl
sbb
push
sbb
jl
pusha
mov
jle
xor
add
call
mov
mov
sub
dec
loopne
in
inc
faddl
dec
pop
mov
mov
xor
dec
int
movsb
adc
jge
or
and
js
js
bound
shrl
push
lea
inc
xor
jge
xchg
fsubrs
in
xchg
add
loop
sti
outsb
push
fidivs
lods
cmp
pop
cltd
mov
fucomi
popf
shl
lock
inc
adc
jns
cmp
test
jae
fmul
sbb
ss
push
hlt
inc
mov
xor
add
dec
insl
jl
push
cmp
in
ss
insl
adc
push
dec
stc
loopne
xor
dec
repz
sbb
cld
jo
inc
outsb
mov
sub
loopne
dec
jno
push
stos
das
add
std
xor
fwait
clc
push
mov
cmp
inc
add
popl
out
and
push
mov
lock
xor
or
add
roll
enter
jne
cmp
movsl
jmp
mov
mov
mov
dec
lock
leave
loopne
mov
mov
sub
inc
es
dec
loopne
dec
je
leave
xchg
fneni(8087
mov
sti
lret
inc
jecxz
negb
xchg
cmp
jmp
mov
adc
mov
jge
xor
rolb
dec
jg
add
dec
jne
jl
dec
cld
nop
xchg
inc
and
xchg
pop
sbb
rcrb
lds
repnz
or
test
xchg
push
add
cmp
and
add
int
jns
call
fmuls
in
mov
testb
daa
sbb
js
inc
xchg
cwtl
icebp
cmp
xchg
pop
push
out
mov
in
and
xchg
sub
rolb
orb
push
jno
jns
add
idiv
push
je
pop
cmp
sar
lahf
or
pushf
cmp
add
sub
sub
or
call
dec
pop
int3
dec
pop
stos
and
push
imul
jb
aam
or
mov
daa
adc
mov
test
inc
leave
and
inc
mov
mov
fcomps
or
xchg
je
insl
fsubrs
in
push
mov
or
dec
aam
add
popf
insl
lcall
pop
or
mov
lods
adc
jno
dec
dec
jae
cmp
or
dec
or
and
push
std
lods
hlt
mov
push
rorl
inc
imul
dec
imul
dec
adc
cmpsl
inc
cwtl
arpl
mov
clc
sbb
jae
outsl
insl
and
and
jns
dec
ja
dec
jne
xchg
int
test
push
lcall
lock
xchg
ja
pop
push
mov
dec
fadds
ljmp
cmp
push
pop
add
push
adcb
movsl
sub
mov
push
mov
add
sbb
test
lods
call
shlb
mov
push
jae
cmp
jge
mov
lea
sub
outsl
outsl
mov
add
push
dec
sub
inc
aad
push
mov
pop
fistpll
cli
cmp
and
xor
mov
cmpb
adc
push
cmp
sub
jb
pop
inc
jbe
mov
add
pop
mov
jmp
and
or
sti
sub
mov
or
or
ja
ficoms
jmp
cmpl
shlb
cs
inc
or
sti
mov
add
lods
cmp
add
push
xchg
and
adc
ret
cmp
push
ret
push
mov
mov
add
adc
je
add
pop
loopne
inc
pop
mov
adc
or
gs
push
orl
xorb
add
add
mov
mov
jg
lock
roll
lea
in
imul
jne
push
add
ljmp
mov
jmp
mov
or
das
call
cmp
ds
fidivl
inc
les
js
cmp
pop
test
in
mov
ret
mov
mov
fimull
xchg
xor
push
cld
movsb
mov
sbb
call
mov
sbb
incl
push
push
adc
sbb
or
xor
xchg
bound
or
cld
das
xor
push
je
sbb
sub
adc
sub
xor
mov
sbb
inc
mov
in
push
cmp
mov
cltd
add
add
mov
or
lods
frstpm(287
in
or
daa
in
pop
stc
and
outsb
outsl
sysret
jmp
cmp
dec
jne
cmp
jae
fisubs
in
jmp
add
lds
aad
fldcw
mov
mov
sub
mov
sbb
mov
in
push
hlt
xor
nop
jmp
ja
in
rcll
push
pop
adc
xchg
test
mov
int
pop
mov
imul
repnz
cmp
filds
pusha
enter
cld
xor
xor
pop
and
xorl
xchg
es
sub
stos
or
cmp
int3
inc
jae
movsb
add
adc
mov
mov
loope
jmp
cmp
imul
add
mov
out
int
mov
sub
jno
enter
out
incl
mov
and
ja
inc
lock
or
call
orb
mov
adc
sbb
js
push
call
sbbw
out
lds
xchg
inc
loopne
adc
sub
addr16
pusha
testb
sub
inc
bnd
cmpb
repz
push
test
push
add
xor
fldt
fiaddl
mov
jbe
pop
or
xrelease
mov
push
hlt
mov
or
jl
mov
and
pop
cmp
mov
xchg
sbb
stc
add
fsubrs
ficoms
idiv
cmc
jnp
imul
dec
add
add
add
or
sub
xchg
clc
jnp
jmp
push
insl
xchg
fimuls
xor
sti
push
scas
jns
dec
fcoml
mov
pop
add
inc
push
aaa
push
aaa
dec
xchg
xchg
cmp
insb
ds
popa
hlt
and
or
inc
jo
pop
jmp
insb
add
inc
jo
jg
dec
adc
orl
aad
xchg
test
js
jle
pop
call
add
pop
inc
add
inc
jb
pop
inc
test
pop
inc
testl
jmp
sbb
or
insb
scas
adc
mov
repnz
shrb
pop
and
mov
lret
loopne
cmpsl
push
push
das
icebp
in
ret
mov
cmp
ret
sbb
push
out
adc
jmp
or
adc
lret
pop
prefetch
and
add
sub
add
lock
pop
xor
add
dec
loop
icebp
or
cmp
mov
dec
jl
ja
decb
sub
popa
fucomi
adc
jle
add
jle
xlat
lods
fdivs
pop
mov
fs
push
lds
push
push
fidivrl
fisttps
ljmp
add
negb
leave
aas
push
pop
call
jae
add
push
leave
repnz
sub
in
test
pop
add
jmp
movntq
inc
inc
inc
imul
popa
insl
pop
inc
or
pop
inc
or
jge
incb
movl
sbb
add
and
sub
mov
shlb
add
testl
bound
jb
insb
push
fldenv
cmp
test
aas
inc
aaa
in
cmpl
add
cs
mov
mov
rol
ljmp
xchg
rorb
sbb
imul
das
mov
sbb
and
push
add
xor
mov
testl
sahf
pusha
jae
push
inc
push
sub
and
scas
cmpsb
popf
out
test
inc
inc
inc
xor
in
sub
popa
ficoms
and
xchg
or
aam
xchg
mov
xor
jle
pop
add
dec
inc
orl
call
es
push
pop
pusha
fnstcw
and
dec
mov
mov
test
pop
sub
popw
sbb
cmp
sbb
push
sbb
mov
pop
sbb
dec
adc
mov
test
mov
dec
sbb
adc
xlat
and
lods
mov
jmp
ficomps
test
fistl
ret
pop
mov
in
push
stos
jmp
lds
cmp
jl
mov
idivl
mov
mov
sbb
or
or
shll
not
sub
clc
adc
leave
or
jg
xor
jmp
or
or
jp
test
mov
sbb
jno
inc
sti
and
add
sub
inc
jb
pop
dec
push
mov
cli
or
mov
add
mov
ret
fisubl
sub
xor
mov
call
in
push
ja
es
dec
dec
sbb
popa
mov
in
lcall
iret
push
cmp
pop
stos
movsl
jb
jne
jbe
add
fadds
add
aam
rcrl
xchg
xchg
and
insb
push
dec
ret
imul
pop
xchg
xchg
mov
inc
mov
insb
xor
mov
addl
cmpsl
aaa
std
mov
movsb
filds
mov
cmc
jg
ja
in
dec
neg
add
pop
shr
and
sbb
push
imul
and
fstpl
call
and
ss
in
xchg
fdivp
jg
neg
add
jns
bound
imul
push
ljmp
pop
push
repnz
jg
or
add
push
ret
or
call
jbe
jp
fildll
or
icebp
sub
rorb
scas
jb
or
lock
jbe
pop
scas
call
dec
push
mov
movl
js
or
or
aam
xor
out
xor
xchg
pmulhuw
and
mov
sub
lahf
mov
and
or
jmp
and
fiaddl
decl
jne
xorl
pop
pop
mov
add
and
inc
sbb
out
jne
add
out
xchg
in
clc
pop
loopne
ret
inc
fistps
sub
mov
ret
xchg
push
or
dec
pop
test
push
add
sub
popf
inc
iret
mov
cmp
sahf
dec
jo
add
bound
mov
cs
xor
mov
sti
adc
movl
loop
testb
push
sar
fcmovnu
push
int3
and
lods
push
add
lods
data16
mov
pop
sub
xchg
jae
ds
xchg
test
sbb
push
in
movsb
cmc
outsl
or
cmpsl
cmpsl
push
xchg
pop
loopne
mov
sbb
and
pop
in
lcall
mov
dec
push
insb
in
dec
add
push
inc
push
fs
data16
sub
cmp
push
shl
shll
or
imull
fadd
fidivl
push
adc
rcrb
lock
pop
xor
lea
cmp
and
push
int3
mov
add
or
pop
push
inc
fbstp
in
adc
sbb
sahf
xor
cmp
and
cmp
rolb
imul
insb
adc
inc
stos
push
cmpl
aas
outsl
push
or
adc
mull
setbe
or
sbb
mov
in
popa
push
outsb
jno
sub
andnps
adc
mov
or
mov
arpl
ret
inc
mov
inc
aaa
push
mov
push
in
push
mov
mov
mov
jae
in
or
lods
push
mov
push
daa
cs
push
mov
adc
test
inc
and
test
insb
lea
fcomps
les
das
cmpl
mov
mov
bound
xlat
movl
cmp
fwait
mov
subl
scas
push
clc
sarb
inc
mov
arpl
and
xlat
pushf
arpl
cmp
xchg
in
inc
and
xor
sub
sbb
rclb
pop
mov
mov
cmp
add
push
mov
insb
mov
adc
rsqrtps
push
jecxz
add
adc
jmp
subb
dec
or
xchg
in
mov
adc
sti
inc
mov
mov
lock
popa
and
push
dec
mov
cld
ljmp
stos
clc
jne
sbb
or
repz
fsubl
in
hlt
pop
cld
xor
in
add
jo
cmp
outsl
xchg
add
pop
pop
push
hlt
add
pop
mov
cmpl
leave
inc
cmp
hlt
mov
cwtl
gs
inc
dec
jb
fisttps
or
sbb
lods
in
sbb
mov
loop
and
mov
push
jo
sub
gs
hlt
mov
dec
loope
movsb
sub
psubsb
xchg
xchg
xchg
lea
loop
loop
daa
addr16
lcall
push
and
daa
daa
dec
dec
inc
in
pop
jbe
xchg
inc
mov
pushf
sbb
inc
push
jl
add
cmp
or
dec
repnz
or
loope
jns
or
bound
jle
insl
mov
in
inc
sbb
add
in
dec
les
cmp
push
fisttpl
je
cmp
nop
outsl
nop
pop
hlt
mov
fsubs
dec
inc
stc
sub
lea
cmp
in
ret
dec
mov
test
lock
scas
add
pusha
sbb
mov
mov
out
sub
dec
in
push
imul
and
dec
sbb
mov
sbb
cmp
lret
and
or
lret
add
pop
enter
add
push
jl
data16
and
je
jae
fcompl
mov
adc
call
or
and
inc
movsb
sub
jp
insb
insb
popa
fisttps
dec
ljmp
xor
xor
sub
mov
bound
outsl
fldt
push
dec
inc
and
imul
dec
push
icebp
xor
jns
sub
mov
adc
push
mov
insb
cltd
jnp
outsl
jae
mov
in
and
jle
jb
das
mov
cmp
jae
inc
outsb
bound
mov
inc
cmp
aaa
arpl
fs
xchg
pop
adc
int
jl
gs
pop
inc
insb
mov
sti
out
sbb
push
outsl
insb
push
add
sub
lahf
in
xor
xchg
push
aas
push
cli
adc
cmp
ljmp
orb
ret
jp
hlt
add
test
mov
mov
lods
orb
push
dec
mov
sbb
dec
insb
sbb
mov
and
adc
adc
add
inc
ret
imul
jno
mov
inc
test
jmp
fwait
or
push
cmp
sbb
shlb
push
mov
push
push
mov
jnp
rcr
add
or
sbbb
xchg
adc
xchg
stos
mov
popa
int3
imul
fs
cmp
imul
sbb
clc
mov
ret
inc
mov
mov
dec
pop
std
ret
mov
sbb
add
cmpb
mov
inc
jo
push
push
repz
jmp
xor
ds
sub
sub
mov
add
cmc
xchg
insb
push
push
cmp
mov
test
inc
mov
mov
mov
ss
call
inc
arpl
pusha
jb
pusha
dec
inc
add
pusha
pop
enter
add
cmp
mov
gs
cltd
sti
adc
fsubl
add
xchg
inc
mov
inc
xor
ret
adc
jns
dec
xchg
mov
and
mov
pop
push
sbb
shrl
fcomps
push
sbb
pop
int
mov
loope
or
int
ss
notb
add
mov
inc
std
push
mov
add
daa
lods
aam
hlt
int
sub
inc
push
dec
fmuls
adc
pop
adc
mov
adc
and
inc
loopne
jo
xchg
sub
inc
sub
loopne
ss
rcl
push
int
pusha
or
and
movsb
call
lea
call
mov
inc
int3
int3
xor
push
pop
jo
xchg
insl
je
inc
aas
xchg
xchg
cmp
hlt
mov
fucomip
and
mov
mov
mov
in
popa
xchg
test
imul
jb
flds
cs
dec
pop
push
add
das
addr16
mov
xchg
adcl
mov
pop
shlb
adc
jns
hlt
pop
rorb
fs
clc
fmuls
stc
mov
push
adc
les
mov
mov
dec
sub
outsl
pop
popa
mov
sbb
ret
pusha
pop
mov
jnp
mov
imul
cmp
and
or
adc
rorl
movlps
arpl
pusha
imul
jae
mov
pusha
rcll
or
adc
popa
sarb
mov
out
outsl
jno
scas
pop
xchg
ss
dec
pushf
inc
add
adc
sbb
push
add
pop
and
fsubrs
and
pop
push
cld
dec
les
test
mov
outsb
add
push
mov
hlt
movl
mov
inc
adc
es
xor
in
mov
pop
iret
shr
insb
std
pop
and
cld
fisttpl
inc
adc
sti
and
xor
iret
xchg
xchg
in
lahf
and
sub
push
cld
pop
mov
jb
mov
icebp
inc
xor
negl
mov
stos
jnp
mov
sub
hlt
test
jb
cmp
add
and
or
enter
or
pop
and
adc
sub
adc
call
mov
sub
cmp
cmp
pop
pop
xor
add
add
lea
fwait
insb
jbe
sbb
inc
stos
dec
jo
inc
pop
sub
je
xchg
sbb
rolb
sbb
xchg
insb
add
sub
pop
fldcw
cmp
loope
test
pop
jns
test
je
addb
adc
sbbl
rdpmc
es
pop
jne
xchg
ss
sbb
rcl
aaa
mov
push
ret
enter
mov
pop
addl
inc
pop
das
jbe
out
ret
inc
mov
addr16
cmp
mov
add
sbb
inc
sub
xor
push
icebp
mov
add
adc
mov
enter
mov
add
inc
push
das
insb
mov
or
ss
popa
and
lock
add
adc
push
add
cmpsb
nop
push
ja
cmpl
mov
gs
mov
pop
cmp
insl
jne
arpl
push
mov
adc
enter
es
rol
fs
hlt
lcall
jl,pt
hlt
pusha
stos
pop
jl
call
mov
lcall
mov
adc
xor
add
sbb
into
dec
pop
ja
outsb
add
out
mov
addr16
inc
jle
mov
adc
or
or
hlt
dec
dec
and
xor
add
pop
cmp
jns
mov
jecxz
outsl
nop
mov
or
pusha
arpl
inc
mov
mov
xor
int3
mov
leave
sbb
or
scas
nop
pop
dec
das
adc
push
in
pop
xchg
xor
insl
pop
aam
repnz
sbb
call
lock
adc
stos
dec
inc
dec
mov
mov
sub
mov
lret
nop
pop
loopne
clc
jle
inc
mov
pushl
mov
inc
rclb
inc
sahf
xchg
pusha
les
andb
inc
cmpsl
pusha
mov
nop
fsubrs
fcomp
pop
test
out
aam
mov
mov
das
fdivrl
popa
mov
aaa
pop
xchg
sub
outsl
inc
push
jne
xor
gs
add
into
xchg
jno
imul
repnz
pop
enter
jbe
insb
nop
mov
aas
jns
fldenv
adc
inc
test
push
mov
jno
fs
push
pop
testl
pop
sbb
mov
je
aam
inc
pushf
mov
out
sbb
mov
and
leave
fs
and
out
inc
dec
xchg
jnp
lret
pushf
adc
sub
data16
insb
sub
adc
pavgb
sub
rolb
scas
pop
cs
je
add
cmp
mov
ss
dec
and
dec
outsl
dec
add
mov
xchg
pop
sbb
bound
outsb
fwait
jo
gs
mov
mov
xor
xor
in
dec
mov
push
or
jge
inc
in
lock
sbb
add
popf
lds
jo
pop
cmp
lret
nop
sub
call
in
in
add
in
in
mov
aam
loopne
adc
xchg
or
mov
dec
add
mov
fsubs
nop
mov
push
mov
pop
xor
add
dec
mov
push
rclb
shlb
dec
sbb
int3
int
mov
sbb
int3
aas
enter
cltd
enter
xor
and
psubsb
test
insl
insl
add
mov
jae
outsl
push
adc
add
call
cmpsl
push
idivb
pop
fwait
add
pop
add
sub
add
repnz
fstpt
inc
adc
js
xor
mov
xlat
iret
enter
fmul
loopne
jecxz
in
lea
jmp
inc
push
pop
or
or
dec
das
or
pop
or
testl
or
or
add
sbb
push
pop
mov
or
mov
popa
jnp
js
data16
jnp
sub
sub
data16
pushl
jp
pop
popa
cmp
add
add
dec
mov
or
push
dec
and
decl
xchg
or
sbb
mov
pop
cwtl
add
mov
das
jnp
pop
or
xor
fwait
and
sbb
push
or
int3
mov
pusha
mov
inc
call
sub
ss
pop
push
cmp
and
jb
call
fistps
daa
dec
es
jp
faddl
daa
push
enter
lea
xchg
or
cmp
out
add
xor
ljmp
std
adc
xor
sti
dec
mov
imul
sub
sete
pushf
cwtl
test
rolb
jo
js
mov
add
dec
fists
pop
pop
inc
inc
dec
dec
xor
notl
pop
test
pushf
pop
loopne
aam
decl
push
or
cwtl
testl
call
decl
adc
decl
repz
mov
lret
pop
adc
or
repz
add
sbb
incl
add
lret
mov
and
jp
cld
xor
out
testl
ljmp
jl
fidivrl
xorl
xor
adc
xor
pop
je
lods
imul
cmp
push
cmp
mov
push
add
test
lret
pop
pop
cmp
mov
mov
mov
decl
cmp
shll
add
jge
sub
sbb
pop
mov
adc
rcl
hlt
add
cmp
or
cmp
and
repz
fsub
das
cld
sbbl
mov
rcrb
xchg
in
adc
adc
push
fnstcw
enter
cmp
push
clc
xorl
jmp
xor
jl
pop
or
lcall
std
add
adc
cmc
sti
lods
jecxz
mov
mov
adc
loop
lcall
jmp
jg
leave
lock
and
and
sti
lods
hlt
inc
leave
icebp
or
call
cli
notl
shlb
cltd
or
pop
push
push
lret
xor
jp
xor
shlb
clc
jg
mov
sub
or
cmc
fistps
sbb
mov
outsb
adc
jmp
sbb
push
lock
xchg
push
sbb
cmpl
ud0
ljmp
or
adc
or
shll
add
adc
or
push
or
das
cld
pushl
add
divb
dec
sub
or
cmp
loop
or
ret
iret
jge
cmp
jmp
dec
or
in
mov
push
stos
pop
dec
cmpl
jge
cmp
aad
jecxz
dec
decl
pop
pop
dec
movsb
sub
in
pavgw
sub
fiaddl
mov
divb
pop
pushf
lcall
in
mov
mov
or
add
jns
pop
pop
cmp
testl
and
add
add
or
pop
lret
outsl
call
mov
dec
adc
push
test
pop
dec
mov
enter
inc
jle
dec
push
sub
sub
daa
aam
mov
pop
mov
push
ret
lret
lahf
push
pop
mov
lcall
decl
pop
add
mull
mov
gs
jbe
xchg
pop
lret
shll
jg
outsb
testl
fs
sub
sbb
mov
mov
or
xchg
jae
call
ljmp
pusha
outsb
rep
pop
sub
mov
jnp
mov
pushl
jecxz
bound
inc
and
imulb
sub
jle
xor
and
call
mov
fimuls
sbb
cmc
mov
test
jecxz
mov
inc
dec
int3
das
daa
bound
shll
jecxz
mov
xor
mov
fs
pop
insb
jmp
sbb
or
rolb
pop
dec
xchg
shlb
loop
out
sub
jg
cmpsl
adc
mov
sbb
pop
lods
test
mov
test
inc
sbb
pop
jle
adc
add
mov
test
push
cmpsb
cmp
into
dec
pushl
dec
jle
in
js
dec
xchg
add
mov
loope
pop
inc
outsb
mov
or
lcall
insl
jb
adc
aad
jmp
shl
pop
xor
jecxz
or
mov
call
sbbl
fcmovnbe
push
or
cmp
mov
daa
jg
add
jmp
outsb
sub
out
lock
sti
dec
ljmp
movsb
movsl
xchg
jl
xchg
inc
jecxz
mov
xchg
mov
jg
into
out
iret
adc
jg
vpsubsb
rolb
push
test
divl
fildll
mov
mov
jnp
fwait
push
lret
jae
jg
cmp
dec
fists
jb
out
pop
loope
jo
rorl
test
popa
test
mov
jo
jo
sub
int3
ljmp
xor
ja
aas
and
pop
pop
in
bound
negl
lods
or
push
jecxz
incl
movsb
mov
add
cwtl
sub
lret
mov
dec
jbe
imul
add
push
ljmp
fcmovu
xor
fisttpll
lret
cmpsb
aaa
arpl
cli
call
incl
xchg
adc
xchg
shll
xlat
mov
orl
xor
jl
lcall
bound
pop
mov
dec
outsl
out
testl
or
pop
mov
push
movsl
das
or
lock
pop
pop
bound
mov
repnz
and
pop
clc
outsl
call
mov
or
or
inc
push
aas
leave
sub
adc
das
hlt
out
pop
sub
dec
or
fistpll
inc
or
dec
ljmp
inc
es
jnp
sti
pop
andl
push
sub
push
test
in
jg
incl
xor
sti
xchg
or
add
pop
and
call
addr16
xor
or
loopne
jp
shll
aas
pop
jecxz
push
mov
xor
sbb
xor
xor
jge
or
and
jecxz
mov
adc
fiaddl
mov
call
fstpt
shl
call
mov
sbbl
shlb
lock
lret
fistl
clc
add
push
or
mov
fisubrs
test
jo
fbld
pusha
adc
ds
sub
lahf
rorb
xor
cmp
mov
adc
repnz
adc
pushl
stos
out
jne
cld
mov
add
cmp
sub
lcall
orl
lock
fs
dec
cld
adc
insb
mov
sbb
incl
daa
and
iret
dec
jge
andl
mov
pop
sub
imul
cmpsb
add
js
int3
sbb
addl
dec
or
mov
neg
sti
lcall
ja
xchg
lahf
push
repnz
xor
loop
mov
pop
fcomip
mov
cmp
sub
xor
jbe
jg
out
andl
fcomps
sub
push
jl
movl
test
sahf
rorl
ja
pop
test
mov
subl
sub
pop
lahf
js
addr16
test
mov
loopne
xchg
pushl
ficomps
mov
mov
mov
inc
int3
addl
jne
into
add
stos
inc
pop
lods
xor
add
call
addr16
dec
add
stos
sub
rcrl
add
fnsave
jne
negl
adc
decl
xchg
push
sarb
fwait
sbb
push
cmpsb
and
pushl
dec
adc
into
xchg
out
dec
sub
rorl
sarb
es
decl
sahf
xlat
ljmp
jl
inc
addr16
pop
mov
jg
mov
aam
ror
jne
add
outsl
mov
mov
cmp
and
das
mov
aaa
pop
sbb
ljmp
jg
adc
cld
adc
xor
int
mov
adc
mov
cmc
mov
sub
inc
mov
fidivrs
pop
adc
sbb
imul
pop
loop
mov
cmp
aaa
mov
pop
xor
mov
je
loope
mov
xor
adc
mov
shr
sbb
jg
pop
dec
repz
mov
mov
daa
sub
into
ss
ds
cmp
jmp
orl
iret
cld
adc
inc
je
cmpsl
mov
push
mov
dec
lock
sbb
call
inc
out
js
lret
addl
ljmp
or
jge
adc
sub
dec
ja
xchg
shlb
aam
jg
testb
lret
hlt
pause
or
mov
jb
inc
pop
es
pushl
adc
outsb
ljmp
dec
or
sbb
jg
movsl
leave
sbb
popf
pop
hlt
inc
lock
sbb
daa
test
pushl
pop
adc
int
jnp
clc
js
pop
stc
cmpsb
sbb
cmp
xor
popf
jo
lcall
cld
lcall
add
add
xor
lds
xchg
or
push
push
mov
jecxz
cld
mov
sub
inc
sub
sbbl
mov
pusha
cli
rcr
jmp
xchg
pop
aad
mov
movsb
or
mov
movsl
pop
lock
jge
movb
hlt
sbbl
repnz
ljmp
sti
insl
jne
dec
addl
sbb
lcall
push
cmpsb
jnp
imul
divb
sbb
push
movsb
push
xor
cmpsb
jle
and
addr16
es
fneni(8087
incl
dec
in
data16
nop
inc
hlt
in
in
jle
repnz
pop
push
push
outsl
das
cld
imull
testl
pop
add
fstl
clc
mov
pop
or
clc
arpl
mov
add
pop
loope
mov
decb
pop
call
ret
dec
hlt
xor
sbb
inc
jge
inc
sbb
iret
push
loop
lock
jle
mov
pop
or
inc
jecxz
addb
and
adc
adc
or
pop
clc
pop
cli
mov
loope
ja
jg
adc
inc
inc
push
test
sub
push
call
push
jo
repnz
lret
xchg
mov
jmp
fistps
mov
lret
loop
adcl
push
mov
xor
jge
inc
jl
in
or
jg
mov
adc
inc
mov
mov
add
je
add
push
mov
into
sub
xor
inc
dec
pop
xor
jge
sbb
jg
xchg
das
or
sub
adc
mov
out
bound
sbb
add
loope
leave
mov
sbb
or
faddl
bound
dec
jbe
xchg
or
lock
cld
push
test
push
leave
pop
jns
aas
int3
jo
adc
ljmp
out
pop
stc
fwait
outsl
test
add
inc
dec
scas
add
mov
clc
mov
jg
and
cs
je
xor
jne
and
dec
test
push
pop
loop
adc
push
leave
int
lock
in
add
pop
push
adc
cmp
xlat
ss
xorl
addl
jbe
jo
lcall
std
adc
test
pop
mov
add
add
scas
fnstsw
in
decl
call
lcall
or
xor
mov
xchg
movsl
pop
cmp
pop
lcall
sub
jmp
lret
call
fildl
sub
push
into
mov
and
aad
add
cmp
lock
inc
stc
ja
ljmp
into
dec
aaa
mov
ja
jle
cli
or
sub
adc
xlat
dec
xchg
decl
xchg
movsl
adc
xchg
or
arpl
dec
fcoml
lds
daa
sbb
stc
mov
add
rorb
and
nop
aad
mov
stos
fnstsw
decl
sbb
sbb
js
aas
xchg
fistpll
enter
and
xor
das
adc
mov
jmp
adc
jge
pmuludq
jnp
pop
pop
pusha
clc
sbb
sar
fwait
sub
mov
jge
nop
and
push
idiv
jmp
lea
sbb
add
sbb
lock
repnz
sub
or
loopne
out
cmpb
repz
pushf
iret
xchg
dec
adc
cmp
add
shrb
xor
fdivr
into
int3
imul
dec
add
lahf
mov
decl
insb
sbb
jl
mov
xor
je
ljmp
add
add
in
dec
movsb
xor
inc
scas
push
mov
pop
pop
cmp
adc
jmp
leave
push
sub
cmp
aas
std
jg
jne
movsl
and
fsubrl
dec
pop
and
iret
mov
lahf
xor
addb
aam
decl
nop
push
fwait
and
mov
jbe
das
fistpl
outsl
and
sahf
mov
mov
sub
push
add
jg
ljmp
xchg
and
stc
adc
addl
jl
jne
jae
jmp
pop
jmp
je
in
xor
adc
adc
inc
cmp
popa
test
decl
or
dec
outsl
pop
sub
push
push
sbb
incl
in
mov
pop
scas
in
mov
push
adc
xadd
std
push
outsl
push
insb
cwtl
enter
adc
movsb
mov
pop
xchg
xchg
pop
mov
sbb
sbbb
sbb
sets
cmp
or
mov
pop
sbb
loope
mov
or
decl
or
sbb
nop
aam
xor
lock
mov
push
or
sub
jnp
movsb
cmp
mov
cli
dec
mov
push
enter
push
ljmp
mov
les
es
pop
jo
adc
idivl
mov
insl
jp
insl
cmp
es
fs
not
testl
pop
addr16
fistpll
push
fstpl
imul
cmc
push
repz
sbb
jmp
jl
popa
jp
pop
add
insl
jo
adc
xlat
es
inc
pop
sbb
imul
inc
insl
ss
decl
std
jno
add
xchg
xor
pop
pop
push
and
mov
ss
ss
ljmp
jmp
insb
jge
insl
pop
pop
imul
add
sbb
pushl
pop
pop
pop
imul
pop
movsb
mov
sbb
dec
addl
ret
test
pop
inc
test
fwait
cltd
sti
lods
mov
sub
imul
rolb
dec
call
incl
loopne
xlat
pushf
inc
in
mov
aaa
cld
repnz
paddb
int3
dec
or
cmp
dec
sbb
popa
pushf
mov
xchg
scas
mov
sub
dec
sub
and
jg
je
nop
xchg
jl
movsb
cmp
pop
pop
dec
push
test
ficompl
mov
jge
movsl
outsb
aad
aaa
xchg
mov
insl
inc
ljmp
xor
mov
dec
imul
sbb
rorb
xchg
idiv
mov
xor
data16
xchg
gs
punpcklwd
les
js
jno
sbb
data16
icebp
fidivs
pop
jge
sbb
cmp
es
and
loopne
mov
pop
aaa
imul
das
cld
pusha
cmc
mov
js
insb
mov
ret
mov
dec
jp
jle
int
mov
popf
add
pop
jmp
add
xchg
adc
xchg
xor
mov
push
lock
and
aad
pop
pop
mov
dec
add
call
rorb
stos
daa
cli
movsb
icebp
loopne
adc
xor
or
cmc
fcoml
pop
loope
lahf
fmull
push
cmpsl
outsl
cld
sub
jnp
outsl
pop
push
inc
jge
mov
js
arpl
js
int
jns
push
adc
cmp
std
ljmp
mov
into
sbbl
ja
test
jnp
lods
cli
orl
loopne
lcall
mov
pop
jb
mov
pop
cmp
orl
loopne
or
xor
mov
sub
adc
cwtl
mov
ljmp
dec
mov
int
enter
test
mov
outsl
movsl
adc
cld
push
lret
int3
mov
incl
call
aam
xor
pop
addl
dec
repnz
adc
cld
cmp
mov
xor
mov
mov
or
mov
les
test
add
aam
dec
in
jnp
jp
push
sub
adc
sub
call
or
mov
sbb
aad
adc
aad
xchg
divb
inc
sbbb
push
mov
and
fdiv
sbb
sbb
cld
fucomip
mov
xor
rcrb
and
call
ffreep
ds
cmp
or
sahf
xchg
mov
fnstsw
fcomip
and
paddd
mov
hlt
mov
xchg
call
pop
ljmp
xchg
in
xchg
or
push
lret
jbe
pop
ja
mov
test
add
push
sub
and
sarl
cli
push
stos
sarl
push
cmp
stos
fdivr
jg
ljmp
imul
data16
mov
clts
push
and
shrl
adc
sbb
push
sti
jb
popf
cs
push
nop
and
call
push
sahf
movsl
xor
xchg
lret
lock
in
jbe
cmp
orl
mov
movsl
pop
pusha
xchg
arpl
test
jne
loopne
loopne
ficoms
idivb
call
jmp
movsb
inc
insb
clc
int
fwait
ret
sbb
test
das
pusha
or
and
dec
fucomp
ret
les
or
shl
push
adc
pushl
rol
hlt
add
or
cmp
jg
jmp
lea
ds
mov
mov
push
mov
int3
subl
hlt
sub
cld
push
mov
insb
out
shl
cmc
cld
sbb
les
sar
adc
rol
sub
adc
in
mov
jg
je
add
in
adcb
cwtl
in
lds
or
cwtl
mov
outsl
mov
mov
adc
lcall
pop
dec
lcall
lock
mov
pop
jmp
roll
push
pop
test
cmc
nop
js
cmpsb
shll
mov
sbb
sub
pushf
icebp
addr16
repz
pushf
inc
sbb
and
jo
popf
add
lock
arpl
add
test
dec
hlt
add
decl
lahf
add
cmp
sbb
insb
push
add
push
cmc
lcall
es
mov
jp
jo
sub
mov
rcrb
mov
push
sub
test
cmp
sub
sbb
cltd
ds
in
mov
dec
inc
in
insl
out
sub
sub
sub
and
add
decl
jne
in
rcrl
inc
sub
mov
pop
enter
call
inc
fsubrs
adc
sub
jp
fdivrs
les
cmp
add
jmp
ljmp
pop
jne
add
jge
callw
push
adc
aam
and
add
jl
pop
shll
mov
or
imul
adc
jg
add
add
push
push
pop
and
cmc
mov
lods
push
push
push
push
adc
pop
loopne
stos
pop
movsb
jg
insb
pop
xchg
lret
add
aaa
cmp
jae
dec
std
aaa
daa
insb
gs
leave
cmp
cmp
aas
iret
sarb
mov
jg
or
ss
out
out
lahf
lods
push
adc
decl
jge
andl
je
idivl
into
mov
pushl
aad
addr16
pushf
imul
int3
lock
or
mov
cli
decl
sub
sub
prefetch
or
xor
stos
dec
mov
bts
add
call
mov
sub
push
xchg
dec
test
cs
ljmp
push
xchg
cs
jge
mov
sbb
or
jl
jge
lods
xor
test
lcall
je
cmp
out
sbb
add
pop
sub
pop
dec
lds
sub
mov
pop
xor
and
mov
mov
andb
stos
push
or
or
cmp
jge
test
mov
sub
cmp
or
sbb
or
or
addb
fidivrl
cld
inc
rcr
rol
rcl
aam
xlat
call
fsubs
lcall
cltd
lea
jae
mov
and
arpl
push
adc
rclb
mov
cld
or
decl
or
push
or
or
inc
or
divl
hlt
pop
fnstenv
sar
sub
or
add
mov
or
mov
mov
test
jb
or
pop
dec
push
sbb
cli
in
adc
lret
mov
pushw
inc
addr16
mov
imul
sub
lods
jp
mov
in
incb
data16
or
data16
mov
call
rcll
dec
fs
and
stos
xor
iret
xchg
dec
inc
insb
sbb
jae
in
clc
push
fists
dec
push
xchg
add
into
rcr
movsb
pop
data16
inc
inc
and
sbb
js
pop
adc
mov
aaa
call
fnstsw
sub
insb
pop
dec
and
mov
pop
jl
xor
jmp
push
mov
xchg
inc
mov
insb
movsl
jo
xlat
add
mov
incl
jno
repz
pop
and
or
pop
nop
jge
rolb
or
mov
out
mov
stos
inc
mov
xchg
sbb
aaa
inc
call
push
sbb
sbb
mov
or
sub
fists
inc
sbb
or
add
sbb
adc
sbb
sub
adc
ja
lcall
or
push
or
pf2id
cmp
sbb
cli
shrb
data16
jbe
adc
sbb
and
adc
ljmp
scas
add
xor
sbb
addr16
lahf
push
or
push
add
add
mov
idiv
cmp
ffreep
pop
add
add
mov
add
sbb
add
mov
lods
sbb
or
in
incb
sbb
and
fldt
push
xor
outsb
push
or
push
mov
shll
sbb
lea
lcall
add
dec
or
ljmp
sbb
adc
aad
mov
clc
rorb
adc
push
inc
inc
clc
sub
dec
add
out
shlb
sbb
std
in
call
add
push
sbb
jp
add
dec
pop
sbb
sbb
in
in
push
hlt
dec
jae
jle
adc
and
clc
or
mov
pop
ljmp
add
inc
ja
bnd
cmc
pop
adc
test
add
sub
add
pop
dec
notb
cli
xlat
bt
cmc
hlt
inc
or
pop
push
and
mov
popa
add
ds
adc
sahf
add
push
ljmp
mov
push
or
xor
add
xor
out
adc
mov
pop
jg
repz
push
dec
dec
cmpsb
shll
cs
and
xchg
jg
sar
mov
lds
dec
dec
pop
pop
decb
out
cwtl
jle
enter
decl
pop
pushf
add
adc
decb
push
repnz
jmp
jnp
in
xor
inc
repz
and
in
das
cmp
jp
push
jno
ds
ljmp
jo
ds
mov
jle
adc
addr16
cmpsb
sub
roll
sub
fcomi
lea
push
test
or
jecxz
cwtl
add
orb
mov
sarl
adcl
out
sbb
jp
mov
adc
pusha
fisttps
sbb
or
out
add
jnp
imul
adc
xchg
jp
leave
call
jnp
pop
mov
or
mov
cmp
dec
mov
or
mov
or
jle
js
testl
xchg
jmp
imul
or
lret
jnp
jg
or
loope
push
push
cmp
jecxz
subb
loopne
jg
clc
inc
decl
orl
push
or
loopne
leave
enter
and
mov
loopne
in
std
xlat
sub
or
cld
xor
add
jl
push
mov
je
test
jmp
mov
pop
pop
sahf
cwtl
or
fnstcw
aam
pop
inc
cli
cmpsb
pop
adc
cs
outsl
roll
cmp
lret
mov
sti
out
pop
sub
sub
jg
or
orl
jne
jnp
mov
sub
and
outsb
cmpl
push
sub
nop
inc
jnp
mov
sbb
pop
cmpsb
or
imul
fldt
ret
pop
or
ja
adc
pop
clc
push
imul
mov
mov
outsl
test
xchg
addl
pop
out
add
adc
cmc
inc
cmp
sbb
inc
int3
stos
cmpsb
xor
sbb
sbb
dec
add
test
lods
aad
mov
pop
pop
std
inc
lcall
dec
inc
mov
adc
inc
push
imul
push
or
sbb
stos
jl
lock
enter
jl
add
jne
mov
sub
add
mov
add
mov
dec
repz
add
inc
dec
mov
add
add
add
int3
xchg
arpl
push
add
sti
call
push
fldl
stc
cld
in
cwtl
dec
cmp
push
adc
stc
or
aam
adcb
mov
pop
pop
lds
lods
int3
and
dec
or
or
add
stc
cmpsl
cmpsl
psubsw
pop
jns
sub
lret
insl
cmpl
add
stos
xor
pop
mov
add
and
sbb
add
or
inc
lock
add
add
faddl
adc
inc
xchg
or
orl
inc
add
insb
add
es
aaa
mov
pop
xchg
orb
ss
inc
add
sub
pop
push
push
pop
add
popa
push
or
pop
add
jb
je
push
adc
add
mov
push
imul
in
imulb
sbb
cmovno
arpl
test
pop
insl
jmp
mov
std
ficoms
push
gs
push
outsl
push
adc
sti
jbe
je
imul
mov
add
mov
xchg
mov
cwtl
dec
dec
outsl
jbe
imul
lret
or
jnp
push
imull
gs
scas
imul
push
jnp
inc
popf
pusha
xchg
outsb
imul
ds
jb
gs
mov
pop
loope
jns
lea
outsl
push
addl
fs
cmpxchg
inc
xor
mov
dec
popa
inc
jb
in
lcall
pop
inc
gs
mov
daa
dec
inc
or
rorb
adc
loope
or
jg
dec
xor
or
jg
push
mov
cmp
outsl
jo
sbb
or
mov
jae
lock
add
pop
push
stos
pop
je
dec
popa
fsubrp
and
jb
push
imul
mov
or
push
pop
push
cmpb
jo
pop
out
sub
dec
data16
push
je
cmp
jge
xchg
imul
dec
jnp
sahf
nop
mov
or
loope
out
fnstenv
imul
xlat
clc
pop
imull
insl
or
lock
lea
jb
or
dec
sbb
mov
add
and
popa
insl
adc
in
cltd
add
movsl
adc
sub
rcr
dec
or
shrl
aad
push
adc
mov
insb
mov
sub
or
dec
inc
insb
sahf
or
or
mov
lds
fldcw
pop
pop
inc
pushf
jns
cmp
mov
movsb
lods
push
pop
push
loope
movsb
fsts
insl
mov
outsl
mov
add
popa
addr16
js
insb
sbb
gs
cmp
jae
test
lods
loopne
outsb
fs
lret
adc
or
lret
push
dec
in
jne
fmuls
dec
imul
subps
push
arpl
add
or
addr16
rorb
imul
aaa
mov
adc
and
mov
popf
test
and
dec
call
sbb
dec
xchg
sub
imul
pop
divb
push
arpl
or
adc
sbb
xlat
add
push
mov
adc
jae
push
loope
repnz
and
inc
inc
cmpb
jo
pop
cmpsl
je
mov
mov
lcall
jns
jae
adc
gs
sub
add
arpl
out
stos
or
aas
adc
add
dec
add
add
pop
inc
sub
add
in
repnz
add
and
adc
inc
or
add
pop
into
pop
mov
das
add
xor
mov
adc
add
aaa
nop
add
jae
or
js
jl
insb
sbb
sbb
or
fimuls
and
fsub
mov
xlat
pusha
inc
inc
push
inc
sti
and
pushf
mov
rolb
jbe
hlt
xchg
or
mov
shrb
jmp
jae
daa
or
sahf
sub
mov
enter
lock
mov
xor
or
add
movsb
jnp
push
jae
arpl
js
std
push
xor
and
add
add
add
add
or
incl
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fmuls
add
dec
inc
add
