out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
insb
xor
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
aam
insb
mov
pop
in
add
xor
add
add
xor
shrl
cmp
pop
insb
dec
shll
int3
fdivl
xor
out
push
inc
and
cmp
xor
rcll
jo
mov
fidivl
lret
stc
fsubrl
movsb
xchg
pop
pop
xchg
xor
fwait
scas
cmp
dec
push
xor
stc
mull
outsl
arpl
je,pn
insw
addr16
xor
jg
dec
xor
push
gs
bound
push
jb
jbe
insb
gs
jae
jae
jnp
std
je
insl
xor
pop
or
add
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
pop
cs
in
sarl
imul
insl
fs
aaa
cmp
aaa
cmpsb
xchg
cmp
scas
iret
sbb
jb
enter
push
test
push
dec
inc
dec
dec
xor
fs
insb
pusha
repnz
fs
push
push
dec
inc
dec
adc
sub
and
inc
or
xor
add
push
add
add
nop
inc
add
incl
and
adcb
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
incb
push
and
fs
push
sbb
jbe
jnp
and
add
add
je
and
and
adc
addr16
jae
test
mov
daa
lret
pop
stc
fs
and
adc
and
mov
mov
fnstenv
add
int
or
push
or
xchg
fst
add
add
and
add
add
loope
das
sti
cmp
xor
xor
pop
lret
outsb
jnp
push
jo
daa
dec
pop
enter
repnz
or
shlb
add
ss
mov
add
bound
pop
pop
es
cmp
and
fs
subl
in
lods
popf
test
inc
push
push
pop
inc
and
popf
cld
mov
shrb
jae
xor
jp
and
push
jl
mov
sahf
in
lock
jb
insb
outsl
arpl
sti
add
enter
xor
mov
scas
aaa
arpl
xor
rcll
es
pop
pop
add
ss
sub
lcall
shll
mov
xor
fsubr
testb
sbb
inc
pop
insb
jp
imul
fnstenv
dec
cmp
or
add
xor
dec
push
data16
imul
sub
cmpsb
ljmp
shll
cwtl
cmpsb
lcall
sub
mov
mov
clc
xor
mov
je
fdivrs
loop
in
bound
lahf
pop
add
add
push
push
sub
jmp
pop
and
les
mov
call
cmp
cmpsb
imul
imul
cmpsb
imul
xchg
fs
cmp
shrl
cmpsb
sbb
divb
cmovb
mov
call
push
bts
fstl
inc
add
or
mov
add
nop
je
mov
cmp
pop
inc
and
dec
outsb
je
jb
gs
lods
insl
mov
leave
hlt
dec
add
cmpl
dec
jo
outsb
push
jb
mov
adc
dec
dec
dec
dec
inc
push
pop
xor
pop
push
push
data16
out
push
jae
bound
dec
inc
push
push
inc
push
inc
pop
dec
sbb
mov
jb
outsl
data16
push
imul
fcmovnbe
cli
push
pop
inc
jne
pop
pop
push
pop
jae
outsl
outsb
sbb
or
push
xchg
or
inc
popa
inc
add
add
or
and
fxch
fisubrs
add
aaa
sbb
imul
insb
add
push
pop
pop
inc
add
fisubrl
add
lods
insb
addb
test
and
negl
das
pop
add
mov
ja
dec
cwtl
sub
sbb
aas
add
mov
pop
rorl
incl
and
inc
inc
leave
test
call
add
jecxz
or
sbb
pop
inc
adc
sub
pop
test
xchg
inc
pop
ret
pop
pop
cmpsb
fdivl
fs
das
xor
orl
por
sub
imul
add
jae
push
mov
je
jne
jb
gs
sbb
xlat
xor
sub
add
incl
push
inc
jb
push
and
ja
or
push
mov
fsubrs
jae
pop
and
addr16
xor
push
call
shrl
pop
lcall
popl
push
pusha
push
lcall
mov
jmp
bswap
lea
mov
sub
or
add
pop
adc
lret
pushl
xor
arpl
data16
add
pusha
outsl
andb
arpl
pusha
inc
leave
sbb
fs
add
mov
loopne
mov
pop
dec
push
adc
dec
dec
xchg
fnsave
jne
sbb
xor
outsl
mov
insb
ja
jns
outsl
push
and
addr16
addr16
mov
addr16
or
aas
mov
jl
pusha
add
pop
pop
jae
push
mov
xorl
movsb
pop
in
xor
add
test
pop
ljmp
insl
gs
test
mov
outsl
jb
inc
popa
jb
pop
xor
sbb
insb
imul
loope
insb
popa
jne
or
pop
mov
and
mov
test
jle
and
mov
sbb
mov
mov
call
mov
lea
shr
inc
add
jg
aas
ja
push
sbb
les
mov
add
into
mov
push
xor
pop
push
sti
push
push
push
call
orl
clc
data16
popa
pop
push
sbb
inc
push
push
into
and
enter
sub
outsl
test
jbe
rcr
popf
and
sbb
sbb
sahf
aaa
sub
sbb
imul
outsl
jo
outsl
sbb
in
cmp
loope
add
call
adc
xchg
pushf
outsl
jne
cmp
push
insl
mov
sbb
and
insb
roll
ss
dec
sbb
outsl
cmc
fdivs
stos
pop
insl
popa
jo
jp
pop
adc
je
dec
bound
xor
popf
pop
add
shlb
mov
call
mov
pop
imul
pop
cmp
and
mov
dec
dec
dec
inc
ljmp
sti
and
add
xchg
leave
in
mov
pop
push
add
in
prefetcht1
sbb
and
jg
ljmp
add
cli
sub
mov
add
mov
arpl
outsb
xchg
push
mov
mov
jg
mov
sub
push
push
push
mov
andl
inc
outsb
cld
sbb
adc
jne
push
loopne
xchg
jmp
mov
inc
add
and
push
push
std
mov
data16
push
call
in
add
divb
sub
sub
mov
movb
inc
or
movb
in
inc
add
sti
push
push
add
rcrb
imul
dec
cld
pushl
in
or
mov
xor
push
and
cmp
lock
adcl
cwtl
ss
xchg
xor
or
jne
or
pushf
push
or
lds
cmpsb
and
lea
in
es
call
xor
sbb
push
xor
outsl
mov
lock
movsl
arpl
adc
adc
insb
outsl
jnp
or
aas
push
adc
fcmove
negb
mov
mov
nop
cld
dec
mov
add
jl
ds
add
adc
add
nop
pop
add
add
mov
jmp
xor
fcmovnb
push
sub
jge
rcl
rcl
push
push
push
add
adc
inc
add
out
nop
lcall
test
xchg
aaa
jg
mov
and
test
jne
ret
xorw
jne
dec
cmp
lret
jmp
add
ds
adc
and
inc
xchg
and
sbb
adc
sar
add
adc
nop
and
enter
out
mov
push
pop
jne
or
push
ret
push
push
add
xchg
fisubrl
loope
push
mov
cmp
jg
add
xchg
adc
and
push
push
sbb
mov
push
push
add
push
and
pop
mov
cmp
lahf
sar
jecxz
mov
sbb
call
push
or
and
mov
int3
sub
dec
adc
ljmp
nop
or
movsw
mov
sbb
mov
jo
mov
mov
mov
sti
rep
jb
push
xchg
mov
int
dec
dec
mov
or
or
or
decl
psllq
add
cmp
repnz
or
sarl
push
mov
add
not
xor
xor
inc
cmp
sub
mov
jl
pop
cmp
and
das
adc
aas
cmp
ja
inc
inc
jno
ret
adc
adc
adc
mov
or
add
push
jae
push
mov
hlt
clc
push
sub
adc
cmp
jb
fimuls
mov
test
add
mov
pop
pop
stc
and
and
insb
nop
and
ds
int
add
test
jl
adcb
add
xor
stc
and
nop
adc
and
je
and
in
repnz
and
mov
movb
ficoml
jle
inc
adc
mov
mov
push
nop
inc
adc
xor
cmp
pop
mov
dec
pop
or
mov
pop
mov
popf
jne
pop
jmp
jne
je
adc
adc
xchg
add
cmp
cwtl
nop
pop
adc
sbb
in
in
and
fsubr
or
add
jmp
mov
std
lock
pop
jb
std
movsb
adc
cmp
sbb
in
cld
xchg
mov
cmp
push
push
fsubrl
sbbb
push
push
add
loopne
imul
mov
lock
les
xor
ds
push
jae
xor
mov
cmc
data16
ja
xor
and
cli
push
dec
mov
dec
cs
fs
insb
std
out
mov
dec
dec
stos
xchg
inc
loopne
push
cmp
push
inc
cs
ss
ja
cli
xchg
outsb
in
sti
push
pop
dec
sbb
mov
jnp
popa
cmp
jge
add
jle
outsl
movsl
pop
push
cmp
jle
pop
jmp
sbb
in
ja
sbb
mov
outsl
cmp
je
test
decb
insl
cmp
movsb
mov
incl
mov
push
in
jne
lods
sarl
jns
mov
add
inc
cld
or
jmp
inc
push
mov
addl
andl
fldt
inc
add
cmp
sahf
inc
cmp
mov
sbbl
idivb
mov
cmpsb
jmp
xchg
lods
rorl
cwtl
scas
popa
xor
pop
cli
mov
fildl
ja
jne
data16
or
or
xor
or
or
mov
js
rclb
mov
cmp
fistpl
cmp
cmp
add
mov
push
sub
push
je
jns
pop
test
add
into
mov
mov
jmp
adc
add
xor
sbbl
or
call
jbe
std
negl
cltd
pop
inc
idiv
adc
jg
add
jmp
andb
mov
jmp
xor
clc
jb
push
adc
enter
adc
nop
and
test
add
adcw
dec
pusha
push
add
nop
and
cmp
enter
add
sub
shlb
mov
cmp
ljmp
shlb
pop
xor
and
mov
lods
stc
outsl
jne
and
clc
fs
ja
xor
es
aaa
mov
es
movb
inc
cmp
jb
call
cmp
or
andl
or
inc
sub
ja
lahf
outsb
and
or
imul
adc
and
mov
sbb
add
aaa
inc
cmp
sbb
popa
adc
in
push
add
mov
aas
cmp
jae
incl
lret
shr
add
in
pop
jo
imul
mov
dec
or
ret
ljmp
mov
dec
push
pop
jne
sar
pop
push
dec
mov
pop
fcmovnbe
mov
jno
sti
mov
jle
add
loop
or
adc
or
mov
fdivrl
call
xor
push
jle
pop
cld
inc
fldl
xchg
inc
pop
imul
jno
cwtl
cmp
jg
mov
and
push
jl
and
or
add
lea
js
xlat
sbb
out
or
jle
sti
mov
add
repnz
not
and
testl
lea
test
or
aaa
mov
mov
push
aam
or
fisubs
mov
or
lea
shr
shl
call
mov
sub
mov
and
not
jle
psllq
mov
or
or
add
dec
daa
pop
jg
pushl
sub
xchg
sbb
mov
lods
out
lret
push
lods
loop
mov
push
push
daa
lea
outsl
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
into
lock
sbbb
xlat
loopne
fiaddl
outsl
popa
xlat
or
mov
adc
xor
fisubl
mov
or
lods
std
ret
push
add
add
jns
fldcw
add
sbb
and
les
repz
mov
fcomps
addl
repz
neg
sahf
popa
mov
fisubrs
pusha
adc
lea
testl
xchg
imul
pop
les
subb
add
cmp
lea
movups
and
in
sub
sub
fcom
add
or
fdivrs
xchg
rcrb
pop
mov
inc
fidivrs
and
nop
imul
lret
ja
repz
xor
or
or
fndisi(8087
popf
aaa
xchg
jno
std
stos
lods
es
adc
cld
and
fidivrs
cmp
enter
das
push
mov
cmpsb
shlb
cmp
sub
adc
cmp
idivb
or
popa
adc
add
or
mov
outsb
mov
ljmp
and
aad
aam
lods
jge
mov
bound
sbb
add
shlb
clc
jg
jge
fldt
inc
mov
rclb
push
fadds
hlt
or
daa
clc
jb
mov
push
pop
pop
es
adc
repnz
adc
and
fstps
mov
mov
push
and
call
lock
mov
pop
lods
hlt
pop
adc
call
adc
mov
lods
mov
jge
repz
push
adc
add
pop
ret
and
in
pop
and
mov
cmp
cmp
jge
cli
fnstcw
out
fwait
pop
jg,pt
or
add
mov
mov
mov
out
loope
repnz
jl
sbb
loopne
ret
inc
enter
sti
add
pop
aaa
or
mov
push
fbstp
inc
fimuls
lcall
hlt
adc
cmp
xchg
jbe
call
repz
adc
inc
loop
shr
or
xlat
lea
mov
fdivs
test
mov
add
jo
fdivrs
mov
daa
mov
and
sub
aad
flds
outsl
cmp
cmp
push
movl
xchg
dec
fisttps
sub
adc
or
xor
test
insb
inc
cmp
fldt
test
xor
mov
int
cld
cmp
or
jns,pn
lock
js
lds
popa
popf
insl
adc
pusha
adc
xor
mov
repnz
jbe
or
in
mov
repnz
shlb
mov
in
mov
leave
add
mov
fimuls
xchg
pop
jb
repz
sub
int3
pop
pusha
dec
mov
scas
sub
xchg
rcrb
mov
mov
out
mov
xlat
mov
jle
sub
mov
add
sbb
lock
cli
daa
mov
fimuls
xor
xor
test
xor
mov
jae
adc
fidivs
test
aaa
or
cmp
jbe
cmp
or
push
aas
in
cld
mov
sarb
cmp
aam
cltd
js
pop
cld
sarb
push
in
jle
call
out
ss
in
cmp
clc
jl
pop
je
dec
outsl
clc
lcall
inc
gs
lods
les
xchg
lods
jge
cli
cmp
cli
mov
outsl
xor
stos
mov
pop
das
insb
sbb
push
or
in
mov
or
int3
or
inc
inc
arpl
movsb
in
movb
adc
xchg
xchg
jb
hlt
push
xchg
lods
mov
cltd
or
push
scas
xlat
mov
mov
jl
ret
pop
pop
gs
sbb
rcrl
or
lock
int3
or
push
sbb
mov
or
ja
jno
cmp
rorb
hlt
out
call
bsf
ss
in
rcrl
test
mov
or
fwait
ja
sarl
call
outsl
jecxz
rol
jb
dec
sbb
int
mov
and
loopne
sub
jecxz
jp
xchg
fcmovnb
cmp
mov
std
push
adc
add
mov
jp
cmpl
aaa
xchg
ja
mov
xor
cmp
loopne
mov
fiaddl
mov
inc
outsb
xchg
adc
repnz
repz
pop
push
roll
dec
mov
sub
jge
xlat
pop
add
pop
movsb
mov
aad
add
xor
mov
pop
out
bound
push
mov
mov
mov
dec
cld
cmpb
sarl
sbb
js
sub
push
push
push
adc
call
xor
push
insb
js
cmovne
adc
fidivl
jno
outsb
lea
addr16
inc
pop
fildll
stos
inc
addr16
iret
jb
adc
or
into
ljmp
add
add
push
dec
jne
pop
and
pop
ljmp
add
icebp
jne
shr
cmp
je
sbb
mov
sbb
fdivs
mov
sub
jne
inc
cmp
jne
cmp
movsl
cs
rcll
add
add
push
jmp
popa
add
xchg
in
rorb
dec
cmp
je
cmp
loopne
mov
test
sbb
scas
and
sbbl
inc
jl
add
jg
shlb
test
repz
inc
cmp
shll
add
fstpl
roll
or
sub
mov
cmpsl
outsl
loope
xchg
or
aas
sub
mov
mov
mov
sbb
movsl
cmp
adc
jmp
and
rep
xor
arpl
sti
out
mov
jne
push
lea
adc
add
popf
push
subb
pop
decl
pushf
scas
dec
xor
mov
clc
call
repz
lcall
cld
call
pop
cmp
jbe
lea
pushl
ds
mov
test
dec
cmp
out
or
testb
shll
popa
dec
outsl
inc
pop
mov
cs
pop
adc
mov
mov
outsb
int
mov
push
loopne
pop
int3
jae
gs
rolb
aam
call
lds
add
push
loopne
insl
dec
imul
out
add
in
gs
iret
out
das
lock
jo
hlt
gs
rolb
shll
into
pushf
mov
jo
add
or
aas
les
js
call
int3
push
mov
and
mov
mov
lods
pop
or
dec
rorb
mov
sbb
in
mov
into
int3
es
or
pop
fs
enter
push
loopne
dec
jbe
mov
adc
adc
cwtl
ds
push
mov
movb
in
dec
out
push
out
push
pusha
sti
in
lock
icebp
inc
repnz
mov
mov
or
xor
pushf
or
lcall
add
mov
pop
repz
insb
dec
loope
cmp
hlt
cmp
xchg
or
add
and
rcrb
and
jns
call
int
je
sbb
inc
inc
dec
mov
push
push
daa
in
add
incb
loope
mov
xor
cmp
xchg
je
xor
push
cwtl
mov
lock
das
sub
int3
jbe
aad
xor
cmp
sbb
icebp
adc
out
sub
push
movhps
mov
dec
pusha
je
push
dec
lock
push
sub
test
pop
les
jmp
bound
popa
push
add
mov
test
loope
xchg
adc
lret
push
add
ret
sub
sbb
jbe
sbb
and
cmp
mov
add
add
push
shlb
xor
jmp
pop
call
lret
in
adc
add
adc
inc
inc
inc
xchg
mov
das
cmp
pop
jb
pop
pop
in
jmp
jne
icebp
add
mov
repnz
aam
adc
adc
insb
call
andl
mov
out
mov
subl
dec
cld
pop
jb
mov
into
andb
push
push
inc
xorl
xrelease
divb
mov
cmp
je
dec
dec
pop
shrb
cmp
pop
push
arpl
pop
or
mov
das
fsubrl
xchg
push
sbb
daa
jl
je
lcall
ljmp
or
cmp
mov
sbb
movl
addl
or
cli
int3
dec
xchg
jb
sub
sbb
jb
pop
and
jg
push
push
adcb
int3
out
sub
xchg
mov
mov
lea
cmp
loopne
ret
inc
es
and
ficomps
mov
adc
adc
clc
inc
push
pop
cld
call
pusha
cmp
fsts
mov
xor
add
repz
orb
or
mov
pop
cli
shlb
mov
ds
jno
inc
call
add
imul
test
pop
js
push
push
dec
xorb
or
inc
add
mov
cmp
jne
push
mov
jae
int3
enter
call
mov
les
jbe
pop
stos
pop
cmc
push
push
int3
pop
ret
pop
add
adc
arpl
push
or
enter
xchg
pusha
loopne
es
data16
cmp
mov
adc
push
mov
push
fsubl
ret
xchg
push
ja
jae
inc
jmp
push
sbb
outsb
xorb
mov
clc
es
xchg
in
mov
or
lret
inc
cmc
scas
mov
push
fwait
dec
adc
mov
jl
sbb
sbb
push
nop
dec
jo
loopne
ret
insl
xchg
add
cli
lock
sub
xor
mov
dec
mov
jbe
test
add
mov
out
xchg
push
add
fninit
call
dec
mov
push
std
sub
sti
and
adc
xor
sub
fildl
fwait
inc
mov
add
jbe
vmovdqu
jp
test
into
xor
std
clc
call
cmp
and
sbb
mov
or
into
negb
push
aam
dec
fsubr
sti
je
cmp
mov
mov
add
mov
jne
or
scas
lea
cmp
je
jo
push
push
pop
arpl
data16
add
aaa
data16
std
pop
rcrl
fwait
xchg
in
sbb
pop
adc
pop
pop
call
das
mov
add
mov
cmpb
inc
fwait
outsb
imul
add
jmp
pop
in
push
xor
push
mov
jecxz
sub
pop
dec
mov
test
push
xor
je
negb
ss
mov
test
cwtl
es
push
pop
adc
pusha
stos
or
arpl
jo
push
adc
xor
fsubrl
fwait
and
scas
dec
or
mov
mov
mov
mov
pop
cs
inc
mov
mov
mov
mov
jb
imul
sub
push
rcl
js
shlb
shrl
aad
insl
shrl
pop
fsubrs
and
fcmovu
xor
insb
xchg
fsub
dec
test
loop
jecxz
pop
mov
in
push
out
dec
out
call
jmp
insl
jae
int
dec
shll
outsb
je
fxch
push
fwait
rol
repnz
imul
xor
mov
lcall
cmp
int3
hlt
cmpsb
jmp
in
push
xchg
xchg
mov
insb
fwait
cltd
lcall
jnp
in
fnstenv
lahf
sub
mov
insb
fwait
mov
cmpsb
xor
dec
shrl
xor
es
cmc
div
in
xlat
xor
cli
jns
lea
dec
negl
mov
push
dec
or
repnz
insb
or
out
sbb
jecxz
in
popa
sbb
push
aam
pop
pushf
sbb
in
pop
xchg
mov
int
int3
jmp
xchg
cwtd
in
idivb
in
sub
jl
or
dec
xchg
insl
jmp
dec
rcrb
sub
sub
cmp
int
push
cmc
adc
mov
shrl
out
mov
mov
xor
sar
xorl
imul
sti
inc
test
adc
push
jae
fsubs
shl
and
imul
and
cmpsb
out
pushf
pop
cli
inc
and
sbb
xchg
outsb
divb
push
inc
sub
outsl
scas
nop
jmp
aaa
sbb
adc
sbb
adc
add
mov
in
and
aas
mov
nop
repnz
sti
gs
or
je
pop
mov
pop
andb
adc
mov
or
daa
mov
test
inc
stos
mov
inc
mov
mov
rcrl
push
scas
jae
sbb
jnp
sbb
inc
mov
and
or
push
daa
lock
arpl
and
dec
sarb
adc
cltd
movsb
mov
mov
xchg
mov
dec
mov
enter
add
sub
addb
test
fdivl
arpl
or
insl
or
icebp
popa
fildll
mov
push
push
inc
or
mov
xlat
pop
sbb
inc
mov
push
add
lock
or
or
adc
mov
imul
pop
pop
dec
mov
fsts
cld
fwait
adc
push
mov
xchg
fistps
xchg
stos
push
or
fisttpll
push
sbb
inc
adc
mov
pop
cwtl
ret
sub
mov
or
sbb
cs
xor
and
and
in
cmp
mov
les
js
cmp
fs
jmp
imul
pop
bnd
adc
add
clc
std
out
pop
dec
cmp
adc
pushf
and
mov
daa
push
lea
pusha
mov
in
shr
or
xchg
xchg
mov
mov
cmp
out
mov
cmpb
and
sbb
push
mov
out
mov
and
cs
push
push
push
mov
pushf
jmp
add
adcl
stos
jnp
adc
je
add
out
sub
or
fsubs
jmp
and
xor
call
test
dec
shr
inc
outsl
scas
fs
xor
jge
or
or
sbb
jne
fbld
mov
call
sbb
fcmovnu
sub
negb
pop
loopne
mov
out
mov
pop
ret
mov
xchg
fiadds
push
jb
mov
loop
iret
test
dec
rol
gs
into
jp
imul
insb
popa
push
dec
push
imul
das
fsubs
ja
fldt
imul
imul
lcall
cld
int
insb
mov
insl
mov
mov
dec
shll
mov
mov
cmpsb
imul
gs
xor
xchg
push
outsb
fs
mov
xor
enter
mov
insl
pop
lret
in
out
scas
out
mov
dec
rol
jmp
lcall
jb
and
mov
jo
iret
inc
add
cli
mov
mov
mov
mov
js
add
addr16
aam
jb
pusha
push
shrb
mov
push
xlat
pop
push
adc
int3
sbb
pop
rcrl
nop
in
pop
push
hlt
dec
mov
nop
add
in
ss
int
scas
push
js
das
or
sub
lea
push
dec
out
dec
cli
sub
push
mov
jb
xor
shll
je
imul
call
lock
pusha
insb
lcall
cs
shll
insb
insb
je
sahf
clc
lods
das
loopne
push
jnp
push
mov
xor
add
xor
imul
scas
insl
jecxz
inc
loopne
jb
push
fsubrl
sbb
stc
xor
lret
shrb
loope
cmp
xor
idiv
add
push
push
push
pop
sarb
xor
das
fadd
or
mov
adc
add
hlt
or
loope
aam
mov
inc
add
in
rcrb
addr16
out
push
movsb
xor
xchg
clc
lock
jbe
data16
jge
cmp
and
cmpsl
and
push
lret
mov
xchg
repnz
enter
in
in
dec
lock
mov
enter
adc
iret
push
pop
mov
push
adc
dec
in
push
or
mov
xor
inc
mov
and
xor
aas
jmp
es
out
mov
imul
fcompl
es
mov
mov
lcall
mov
mov
pop
mov
mov
adc
mov
enter
sub
leavew
lret
int3
int
das
shll
rcl
rcrb
jne
rcll
aam
aad
xlat
aaa
fcomps
fcmovu
ja
mov
lcall
loopne
loope
xor
cmpsb
imul
out
imul
arpl
jmp
daa
xor
fwait
scas
in
sbb
out
fs
es
jae
repnz
dec
shll
inc
inc
cmp
sbb
dec
mov
notb
mov
fcmovb
pusha
rcrl
and
push
mov
pop
cld
or
mov
push
iret
adc
inc
nop
enter
out
push
adc
es
xorb
sbb
mov
xor
cmp
out
loop
pusha
xchg
pop
call
jo
andb
xchg
sbb
add
inc
sbb
jo
aaa
sarl
jmp
add
je
icebp
das
add
cmc
imul
out
inc
lret
inc
and
ds
mov
daa
dec
jmp
popl
pushf
insb
pop
jnp
jmp
jmp
outsb
call
xor
add
and
fisttpl
jbe
add
or
and
mov
mov
jbe
push
ret
push
clc
add
fiadds
call
push
shr
jmp
mov
inc
fsubrl
ds
movsbw
pop
add
rcrb
sti
cli
xor
outsl
adc
add
xor
push
enter
cld
call
add
xorl
jae
scas
push
aas
pop
les
add
sub
cld
fcoml
jg
mov
dec
btr
in
mov
xchg
pop
lret
int
mov
sahf
mov
idiv
clc
mov
bsr
mov
jmp
outsl
mov
bound
inc
cwtl
push
cmp
push
icebp
test
fs
jnp
movsl
js
pop
push
xor
repnz
stos
sbbb
rol
add
push
push
push
dec
enter
push
hlt
jnp
cmp
daa
mov
jl
mov
add
mov
div
das
fcompl
pusha
mov
pushf
inc
ret
mov
ret
imull
shl
add
daa
cmp
data16
cmp
push
jecxz
test
push
dec
jmp
mov
sub
pop
jo
adcb
ret
xor
inc
xchg
push
push
xrstors
fs
inc
dec
pop
and
adc
push
lret
pop
inc
and
lods
mov
icebp
fdivr
int
hlt
mov
cmpl
sub
xor
add
call
outsl
fistps
mov
or
xor
lds
stc
call
fstp
in
in
and
inc
mov
aad
mov
sub
mov
pop
add
jp
sbbb
outsl
into
mov
clc
push
pop
jle
addl
cmp
test
leave
sub
pop
jb
mov
inc
mov
ret
add
sbb
fbstp
pop
pushf
call
pushl
fsubs
xlat
fnstsw
mov
scas
dec
inc
scas
shr
mov
pop
mov
flds
mov
jmp
loopne
sti
add
adc
add
aam
aas
mov
loopne
sub
and
push
mov
adc
pushf
jmp
mov
pop
aaa
push
enter
add
jmp
mov
pop
mov
xor
jmp
adc
popf
xor
pusha
jmp
pop
fsubr
xchg
jg
jecxz
dec
jmp
les
daa
mov
mov
mov
stos
clc
sbb
lods
cmp
and
std
cld
adc
test
cmpsl
push
cld
cld
jge
or
sub
hlt
fsub
xor
jp
ror
xchg
and
lea
dec
lods
cltd
adc
int3
dec
in
xchg
in
xlat
sbb
lahf
and
sub
cli
frstor
sub
pop
std
call
cmp
adc
ja
negl
out
test
sub
clc
std
cmc
sti
sub
sti
leave
xchg
or
fimuls
call
leave
jae
icebp
mov
adc
sysexit
jo
shlb
pusha
setns
sub
or
outsb
adc
fcompl
cmc
push
adc
push
fsincos
enter
xorl
js
clc
and
xchg
sbb
cmp
outsl
sub
sub
add
mov
into
ret
jmp
adc
pop
jo
mov
pmaddwd
jge
cmp
dec
sbb
in
out
add
jmp
call
repz
pop
sub
push
or
add
or
movsl
add
push
pushf
incb
pop
add
rcrl
inc
imul
mov
and
cmp
mov
mov
ljmp
sahf
or
adc
add
scas
fmul
pop
push
mov
mov
ljmp
orl
pop
mov
cmp
jge
jne
xor
fldl
lea
push
cs
push
push
jne
stos
std
mov
int
jne
adc
insb
mov
dec
jmp
push
cmp
sahf
xor
leave
xlat
or
imul
or
mov
shlb
push
push
mov
loope
clc
cmpl
test
mov
jp
xor
into
ret
xor
fisttpl
xchg
add
or
ret
xchg
shrl
xchg
test
xorb
push
xchg
iret
adc
add
sbb
outsb
mov
sbb
pop
sbb
ror
push
push
inc
add
or
cmpb
xchg
add
enter
xchg
popa
or
push
aaa
add
sub
sbb
adc
shrl
add
jbe
fcomps
and
movsb
mov
hlt
and
pop
mov
sub
rcll
dec
ljmp
mov
and
adc
pop
adc
dec
shr
xchg
mov
push
test
mov
or
or
movsl
out
in
jge
add
sahf
xor
pop
sahf
stos
fstps
jge
fnstsw
std
leave
pushf
sbb
lahf
xchg
dec
jp
jle
std
ds
sbb
inc
dec
enter
push
xlat
push
inc
mov
rorl
mov
fmuls
push
call
jg
inc
mov
push
inc
aas
fstl
xor
into
fidivrs
popl
and
iret
pusha
cmpsl
push
data16
pop
loopne
mov
lahf
out
sbb
mov
gs
outsb
cmp
cmpl
inc
add
aad
mov
sbb
push
clc
cmp
sbb
adc
push
inc
sti
sbb
pushf
xor
and
jle
daa
push
out
xlat
int3
sbb
scas
mov
cmpsb
or
xor
inc
cmp
ljmp
pop
outsw
outsb
sub
lret
mov
jae
or
movsb
ss
dec
fsubrl
repnz
adc
mov
iret
adc
jne
adc
jbe
mull
aaa
int
aaa
inc
gs
mov
and
call
fimull
cmpsl
cmp
mov
stc
jl
mov
xor
xor
dec
mov
lahf
or
jmp
xchg
mov
jb
lcall
mov
pop
lret
rolb
leave
add
push
cs
cmc
call
repnz
jp
mov
adc
je
lock
jmp
push
addr16
test
jne
add
mov
pop
pop
ret
pop
add
add
aad
and
in
decl
adc
rolb
push
push
adc
in
and
jo
add
dec
adc
mov
enter
ljmp
mov
stc
scas
or
mov
mov
mov
cmp
nop
push
inc
es
sbb
fnstenv
je
pop
push
push
add
hlt
int
mov
ds
xchg
dec
push
dec
fdivrs
fidivs
jne
xor
push
arpl
cmp
mov
and
sub
jmp
mov
mov
cmp
and
push
xor
scas
inc
add
jl
les
cmp
add
test
add
xor
adc
jo
push
loopne
add
popa
push
cs
repnz
out
add
pop
cmpsl
flds
popf
les
insl
pop
mov
clc
sub
gs
xchg
int3
rcl
fcomp
in
add
call
add
or
push
mov
jne
add
jo
mov
sbb
inc
xor
sbb
push
mov
inc
mov
bound
push
pop
insb
out
mov
xchg
push
jns
rcrb
fcompl
outsb
in
pop
jb
dec
mov
adc
push
int3
fstps
in
inc
lock
adc
inc
call
jnp
inc
add
cltd
mov
aas
push
xchg
mov
ja
das
add
cmp
roll
and
mov
test
add
fisttpl
add
sub
inc
mov
lock
pop
notl
ret
mov
jbe
pop
rcll
or
push
pushf
js
gs
je
or
fistl
push
imul
dec
pushf
dec
inc
cmpsb
imul
mov
into
addr16
mov
sbb
imul
call
cmpb
xchg
mov
mov
lret
movsb
push
movsl
cmpsb
pop
cmpsl
push
gs
fnstenv
stos
push
lods
lods
xchg
gs
ss
je
jo
pop
xchg
gs
jo
outsb
push
fisttpl
gs
gs
roll
cmpsb
imul
xor
mov
lea
xchg
insb
test
pushf
js
xchg
xchg
xchg
inc
push
mov
int
cwtl
js
lcall
je
inc
push
fbld
cmp
inc
loop
in
pop
call
out
mov
pop
mov
lcall
mov
mov
lcall
mov
xor
scas
mov
mov
mov
mov
in
xor
xor
jne
cmp
or
and
mov
cmpsb
or
adc
add
clc
in
ret
xchg
cmpsl
adc
jmp
xchg
inc
jne
imul
xor
dec
insl
mov
stc
pop
rep
shrd
test
xor
popf
test
je
das
mov
sahf
in
je
push
adc
pop
mov
lock
imul
add
inc
dec
imul
cmpsb
insl
mov
sub
or
movsb
or
adc
cld
repz
adc
mov
push
add
ja
cmc
bound
adcl
mov
push
dec
popa
fmuls
sub
or
add
sub
mov
jne
push
jmp
jne
test
enter
and
lret
xor
mov
dec
dec
add
fs
lret
mov
sub
incb
or
bound
adc
popa
jne
faddl
add
lret
add
sbb
pop
jg
jne
call
sbb
shrb
jp
or
sahf
dec
aad
pop
movsl
mov
bound
fldl
imul
out
jno
movsl
shrb
push
leave
push
lahf
mov
push
cmp
adc
push
cmp
sub
jbe
sbb
mov
mov
mov
lea
sub
add
adc
dec
std
clc
push
cmp
in
neg
mov
das
pushf
xor
jmp
jle
and
sbb
lahf
add
jnp
imul
pop
xor
cmp
les
add
sbb
call
fsubr
fistpl
pusha
out
pop
hlt
add
pushl
fsubl
divl
je
repnz
imul
addr16
cmpsb
imul
mov
cld
add
jg
jmp
das
or
pusha
xchg
and
jnp
cmc
call
pop
jb
adc
movsb
mov
or
jbe
movsl
std
in
out
sbb
dec
inc
or
pushf
es
add
imul
push
aaa
out
ficompl
pop
je
xchg
cmp
inc
pop
or
sub
push
inc
sub
je
mov
add
je
sbb
mov
add
jl
push
jle
adc
fisubrs
dec
adcb
cmp
call
dec
out
cmp
sub
add
push
jmp
aas
adc
add
mov
out
sbb
ret
jl
sti
in
fstpl
add
stos
sahf
aam
fldenv
mov
adc
mov
cmp
outsb
cmp
je
pop
hlt
insb
cmc
xor
ret
das
imull
clc
stc
cli
xor
sar
cld
xchg
mov
xchg
jecxz
or
xor
cmp
jne
scas
push
arpl
inc
popa
in
cmp
add
in
push
out
inc
fdivl
adc
jle
or
cwtl
or
addr16
cmp
adc
push
lock
data16
cld
pop
in
movsl
lret
push
pop
jb
pop
push
das
add
cs
or
dec
add
inc
lcall
faddl
pop
pusha
add
bsr
push
sub
loope
sbb
fwait
cltd
jbe
repnz
lcall
and
in
adc
and
push
in
and
mov
sbb
adc
addr16
add
mov
inc
adc
dec
push
xlat
movsl
pop
repnz
adc
jne
xchg
and
mov
in
lret
stos
jmp
movsl
testl
push
pop
add
xor
adc
imul
cmpsb
outsl
outsb
cmp
pop
xchg
jb
popa
and
lcall
aad
pusha
lcall
mov
cmp
popa
arpl
lret
leave
mov
outsb
gs
mov
lret
mov
jo
imul
es
rcrb
gs
aas
popa
arpl
in
imul
gs
push
loopne
loope
jns
shlb
out
sub
adc
pop
pop
xchg
int
add
pop
sub
pop
data16
dec
shll
jp
outsb
outsl
outsl
cmp
stos
jo
je
add
inc
movsb
aaa
jmp
aam
and
jns
adc
repnz
movsb
std
hlt
push
adc
mov
pop
sub
pop
push
and
push
push
adc
pop
sub
mov
sti
faddl
fstp
lods
ficomps
xchg
leave
lcall
loopne
pop
jl
in
inc
add
push
fadd
mov
lcall
jb
dec
inc
inc
das
clc
stc
cli
adc
sar
cld
negb
cmp
jae
add
push
idivl
bound
mov
insb
imull
in
xchg
leave
xor
sbb
sbb
xchg
inc
into
xchg
fsubl
leave
enter
xchg
stc
sbb
push
jb
cltd
je
mov
je
fbstp
and
adc
into
cmpl
push
incl
lods
adc
push
mov
xor
jle
sbb
push
pop
add
mov
mov
mov
pusha
mov
das
add
call
popa
dec
adcl
pop
clc
pop
or
add
jmp
pop
inc
pop
jp
or
add
adc
push
movl
jge
outsl
push
lcall
push
cmpsb
dec
sbb
and
sbb
push
xor
movsb
xchg
and
inc
loope
jo
lcall
cmp
push
in
loopne
xchg
xchg
mov
xchg
in
xchg
outsl
jae
insl
loopne
xchg
bound
jne
daa
sbb
jmp
push
icebp
adc
data16
gs
jbe
and
mov
and
and
cld
pop
and
in
insb
dec
shll
jb
and
xor
imul
arpl
aam
pop
lods
hlt
lock
popa
stos
popl
mov
xchg
jnp
adc
mov
repnz
inc
fs
or
xchg
xorl
push
outsl
pushf
jne
push
sbb
loope
jae
cs
and
ret
add
iret
adc
mov
or
lea
add
shrl
push
lock
add
jl
out
pop
mov
and
jmp
jne
fs
push
in
data16
jmp
gs
cwtl
std
add
fs
mov
push
jle
push
cltd
nop
or
sub
jp
addr16
sub
sbb
dec
sahf
daa
gs
or
clc
sbb
stc
pop
mov
arpl
cmc
mov
mov
mov
pop
pop
pop
call
adc
out
lret
push
xchg
iret
xchg
or
cmc
dec
lods
loope
insb
adc
push
icebp
push
pop
sub
mov
xchg
mov
push
pusha
and
add
testl
dec
mov
jnp
jmp
pop
cmp
inc
cmp
push
cmp
lret
adc
add
cmp
dec
jbe
xor
pop
pop
pop
inc
lods
inc
daa
sarl
push
rolb
test
sub
test
jle
mov
cld
fistpll
push
shl
add
loope
shrb
ja
into
cmp
adc
dec
push
pop
jae
loop
and
and
sbb
nop
insl
stos
sub
xor
and
jns
daa
fwait
sbb
and
in
cmp
dec
push
pop
adc
adc
outsl
cli
or
or
push
cmp
gs
rorb
push
dec
aad
fistps
cmp
call
lods
or
out
cli
enter
sti
add
cld
andb
cltd
test
daa
ljmp
inc
inc
stc
cld
mov
and
repnz
push
pushl
ret
push
mov
inc
lret
fs
pop
add
cmp
pop
repnz
push
psraw
out
sbb
cld
pushf
sbb
dec
sahf
push
lods
sbb
push
push
mov
or
in
in
cmp
pop
and
lds
pop
cmp
add
iret
mov
roll
divb
jae
imul
les
xor
push
int
scas
and
or
add
jnp
mov
push
xor
cmp
ljmp
add
movsb
jb
ficoml
andl
push
andb
and
and
cmp
jnp
cmp
sbb
mov
xchg
pop
add
or
outsl
lods
insl
jb
cmp
jns
inc
push
popa
fcoml
inc
cmp
push
repnz
cmp
sahf
out
xor
jae
jp
mov
test
cmc
pop
movsb
pop
rorl
sarb
sbb
add
push
pop
mov
push
mov
cld
mov
cmp
sub
cli
cmpl
cmp
push
pop
les
mov
mov
cmpsb
pop
pushl
lret
sbb
dec
outsb
or
mov
jmp
mov
xchg
cmp
pop
clc
ret
inc
pop
push
sbb
mov
push
mov
or
jne
or
inc
cmp
jb
pop
xchg
xor
mov
fldcw
ljmp
imul
lcall
cs
push
sub
in
cmp
xor
in
arpl
jbe
gs
int
dec
jbe
outsl
insl
jne
sub
jl
lods
mov
test
insl
and
inc
jp
je
push
push
outsb
aad
adc
stos
mov
jnp
lcall
xchg
mov
shlb
js
nop
fs
pop
pusha
cmpb
inc
fsubl
add
outsl
mov
add
enter
cmp
sti
sub
mov
dec
fiadds
cld
adc
std
in
add
add
cmp
mov
scas
inc
orl
enter
push
xchg
shl
lea
test
jae
push
push
es
scas
mov
xor
push
and
and
add
mov
pop
inc
mov
pop
repnz
shll
sub
xadd
aaa
jnp
lahf
mov
loopne
sarb
mov
adc
pusha
rcrl
add
sbbb
mov
hlt
and
movsb
pusha
loope
nop
xchg
cmc
hlt
int3
jge
jno
testl
int3
add
mov
mov
xor
cmpsl
jp
adc
je
jge
out
inc
lods
push
cmc
push
xchg
and
adc
ret
inc
mov
mov
push
pop
clc
xor
fs
div
cmc
lahf
sub
adc
pop
andb
mov
xor
push
jae
and
cmp
faddl
add
outsb
inc
fcoml
cmpsb
jmp
jo
insb
imul
sbbb
inc
fs
xchg
gs
fs
lcall
jb
dec
xchg
mov
outsl
dec
imul
ret
aad
dec
pop
icebp
rcrb
add
enter
xchg
xchg
xchg
hlt
push
dec
xor
pop
dec
cli
outsl
jne
mov
inc
pop
sahf
pushf
orl
fs
inc
xchg
inc
xchg
sbb
and
ds
hlt
push
push
inc
jo
js
add
jo
pop
cmp
mov
ret
outsb
mov
cmp
add
shrl
push
add
rolb
adc
scas
loopne
fs
sbb
jo
movl
mov
xchg
and
test
hlt
adc
imul
int3
add
mov
push
cmp
xor
hlt
cmpb
dec
in
dec
pusha
fwait
popf
insb
arpl
sub
sbb
adc
imul
xchg
jno
xchg
dec
mov
push
lea
mov
push
mov
mov
or
pop
mov
test
rclb
push
shrb
adc
loope
dec
add
enter
bound
shrl
stos
adc
fcomi
mov
mov
outsl
data16
ja
xchg
cmp
pop
dec
imul
xchg
gs
mov
xchg
gs
andb
jae
nop
cmpsb
jmp
gs
cmp
pusha
dec
outsl
push
popa
pop
xchg
sub
pop
dec
push
fs
xchg
gs
inc
popa
arpl
inc
pop
ret
add
test
mov
ret
xor
fwait
xchg
or
int3
add
inc
mov
push
data16
icebp
mov
addr16
adc
push
cs
pop
xor
cltd
mov
lret
js
sbb
popa
dec
mov
mov
xchg
mov
bndstx
shll
xchg
jne
mov
mov
mov
daa
fwait
les
jmp
add
mov
dec
out
mov
push
or
pop
sub
mov
enter
stos
sarb
adc
inc
mov
inc
dec
or
imull
add
sub
adc
in
popf
iret
out
daa
in
out
out
stc
sbb
scas
stos
add
or
imul
add
jae
mov
jb
std
add
dec
add
nop
and
std
or
cs
push
popa
and
lcall
and
outsb
es
pop
sub
xchg
xchg
xchg
mov
jo
sub
in
xchg
sub
imul
mov
push
imul
dec
xchg
out
fs
inc
pop
outsl
inc
inc
xchg
out
fs
lret
mov
mov
stos
jae
push
bound
imul
jns
dec
dec
dec
xchg
xor
gs
and
lcall
jnp
fildl
into
dec
cmp
test
xchg
into
into
into
push
mov
mov
mov
rorl
mov
cmp
stos
cmpsb
adc
mov
pushf
popf
mov
scas
mov
in
pushf
cmpsb
cmp
rcrb
rol
ret
repnz
xchg
xchg
xchg
mov
insb
fs
loope
popf
popf
inc
push
leave
std
nop
in
in
addr16
popf
jmp
fucom
and
xor
jb
mov
sub
jmp
jb
jb
in
test
out
lock
icebp
sbb
xchg
mov
mov
cmp
xor
pushf
pushf
pushf
insb
xlat
repnz
hlt
fldcw
imul
and
xchg
out
and
in
fs
sub
sbb
xchg
sub
push
inc
inc
xchg
mov
movsl
bound
cmp
xchg
inc
inc
inc
and
jecxz
enter
popa
pop
xchg
movsl
cmp
bound
mov
mov
gs
pushw
addr16
push
mov
push
insb
inc
cs
insb
outsb
insl
decb
push
adcb
adc
jb
mov
mov
mov
jb
xchg
les
shlb
and
xor
movsb
movsl
cmpsb
cmpsl
jecxz
mov
rol
mov
cmp
ret
sti
les
xchg
movsl
imul
mov
dec
leave
lret
int3
dec
into
into
into
adc
xor
mov
rol
adc
jmp
push
ljmp
imul
in
in
in
out
call
jmp
daa
and
add
dec
fsubl
add
enter
jmp
decl
incl
inc
mov
decl
call
fucom
fs
incl
insl
fs
je
and
es
insl
sub
in
jmp
sub
adc
in
cs
adc
insb
aam
pop
ja
into
sti
jg
sub
std
pop
movsl
cmp
pop
pop
pop
pop
mov
xchg
pop
pop
jb
pusha
cmp
movsl
pop
popa
dec
bound
arpl
cmp
push
jmpw
addr16
daa
addr16
push
ja
mov
push
insb
insl
fildll
addr16
dec
outsl
jo
jno
jb
data16
aaa
jae
cltd
je
jne
mov
dec
jbe
ja
js
dec
xchg
movsl
cmp
jp
push
jnp
in
in
jl
jge
sarl
xor
inc
insb
addb
dec
test
push
popf
xchg
xchg
adc
or
cmp
hlt
shl
test
idivl
pushf
nop
iret
leave
test
aad
aam
inc
mov
sar
cmp
sbb
mov
sbb
add
out
repz
fdivr
push
mov
std
sub
test
jl
iret
pop
sub
scas
mov
enter
sbb
push
aas
mov
fdivr
sbb
jp
mov
and
add
fldt
adc
jne
xchg
movaps
insb
xor
pop
cmp
sti
mov
push
push
xchg
add
or
fs
xchg
gs
jae
jne
fs
pop
xchg
gs
insb
sub
mov
addr16
ja
sub
mov
fs
insb
lea
jmp
decl
je
gs
in
out
sub
add
imul
jmp
sub
fmul
mov
lcall
push
mov
insl
xlat
jne
enter
lret
lret
int3
mov
cmpsb
imul
sub
jne
lods
xor
xchg
imul
sub
push
mov
jo
sub
popa
insl
dec
popa
popa
mov
lret
push
popf
addr16
mov
or
fs
push
mov
sbb
cmc
jl
mov
mov
imul
imul
cmpsb
imul
lahf
xor
mov
or
test
hlt
xchg
push
enter
int3
testl
negb
pmulhuw
stc
dec
sar
aaa
adc
jecxz
imul
pop
stos
arpl
addl
fs
sarb
sbb
push
jne
or
js
sub
negb
sbb
or
or
in
pop
in
add
pop
cmc
lock
pop
inc
icebp
xor
out
dec
pop
lcall
insb
enter
push
jno
inc
lods
sbb
mov
subb
xor
sub
push
lea
inc
sub
cs
sub
jmp
out
push
jnp
ljmp
xor
and
mov
jl
cld
jecxz
sub
pop
adc
sti
pop
lock
add
jmp
scas
push
or
or
mov
sbb
inc
data16
push
data16
mov
xchg
jbe
das
fs
sub
inc
xchg
js
adc
jb
xor
and
sub
dec
xor
hlt
dec
out
sbb
pushf
pop
lock
bound
stc
lock
lock
stos
sub
sbb
pop
push
push
lods
xchg
push
and
sbbl
xor
shrl
add
adc
push
cmp
pop
dec
xchg
gs
xor
mov
cli
insb
jge
dec
aam
adc
sub
push
outsl
dec
inc
gs
xchg
sub
inc
outsl
insb
jb
mov
popa
insl
jecxz
inc
movsb
pop
sbb
orb
push
test
sub
pop
or
roll
pop
xchg
gs
pop
push
jns
je
gs
xchg
gs
pop
imul
mov
loope
mov
std
add
sub
pop
push
test
dec
push
mov
int3
inc
into
pop
ljmp
add
loop
push
test
adc
or
mov
dec
movb
xlat
inc
xchg
xchg
xor
in
xor
in
flds
push
enter
push
nop
mov
or
test
sbb
loopne
pop
popf
in
popa
addr16
mov
fimull
nop
xchg
push
es
movsb
push
imul
je
dec
leave
dec
popf
in
jle
in
out
out
out
ds
xchg
outsb
in
call
rorb
imul
mov
push
push
pop
stc
xlat
stc
fdivr
mov
xchg
and
stc
push
pusha
push
cmp
fwait
push
adc
jns
dec
push
leave
clc
fdivr
pushf
in
daa
aam
aad
fdivr
cs
nop
xchg
sti
cmpl
sbb
and
testb
cmp
idiv
adc
dec
lds
add
xchg
jns
add
sbb
stos
cmp
lcall
scas
or
cs
mov
insb
mov
fs
jp
sbb
out
mov
jb
popa
mov
ja
mov
inc
dec
mov
jmp
dec
insl
lahf
mov
in
mov
xchg
outsb
in
movsl
cmpsb
nop
das
imul
aad
or
dec
into
into
pop
xchg
dec
xchg
cwtl
cltd
dec
lock
dec
lcall
into
and
xchg
fs
jo
mov
out
in
mov
and
xor
nop
out
clc
and
cld
mov
lahf
pop
aam
cld
mov
rcrb
mov
enter
mulb
add
mov
pop
xor
test
mov
aas
pop
xlat
call
push
cmp
push
mov
adc
call
ror
lcall
stc
cmp
xchg
inc
call
sbb
stc
or
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
push
push
xchg
xchg
xchg
xchg
push
cmp
ds
xchg
xchg
xchg
aas
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xor
xor
mov
xchg
xchg
xor
ss
push
xchg
xchg
xchg
xchg
cmp
cmp
cmp
pop
mov
jbe
ja
cmp
cmp
jp
cmp
cmp
jl
jge
jg
cmp
cmp
dec
dec
dec
push
push
pop
pop
pop
dec
into
dec
dec
pop
pop
pop
pop
pop
dec
inc
dec
dec
pop
pusha
fs
xchg
adc
adc
push
imul
mov
pusha
outsb
outsl
jo
out
jno
je
dec
idiv
clc
adc
and
cmp
xor
aas
adc
incl
or
jo
popa
mov
adc
pop
lahf
or
call
sbb
add
push
mov
sub
ror
in
gs
repz
or
add
push
dec
cmp
ljmp
in
xor
incb
mov
mov
insl
je
mov
sbb
das
lret
mov
lret
jp
jbe
jbe
sub
mov
xor
xor
addr16
jb
outsl
xor
cmp
arpl
cmp
mov
lret
aaa
cmp
insb
push
lret
mov
addr16
imul
sub
mov
insb
imul
addr16
call
mov
pop
cmp
cmpsb
iret
pop
nop
notb
jl
push
movsb
jbe
pop
mov
mov
and
mov
shll
imul
imul
lcall
xchg
or
outsl
insl
cmpsb
jmp
shll
das
add
pushf
mov
jne
dec
add
sbb
stc
inc
cld
xchg
test
pop
call
mov
mov
call
repnz
call
pop
push
and
adc
mov
mov
lea
ret
fdivrs
xchg
mov
outsl
jg
fcomps
je
sbb
fs
adc
icebp
inc
mov
mov
jge
inc
scas
test
xor
mov
xor
idivb
mov
add
adc
lea
mov
xchg
mov
fildl
mov
xchg
mov
outsl
or
mov
xor
or
mov
xchg
pop
int3
mov
out
adc
sub
xchg
cli
pop
push
push
xchg
std
add
push
sbb
in
mov
scas
rorb
mov
push
and
aam
sub
test
inc
push
xchg
jg
lods
pop
push
fadds
test
dec
mov
cmp
call
push
mov
add
adc
and
jle
sbb
call
and
enter
adc
jl
sbb
int3
mov
lcall
mov
sbb
add
pop
pop
scas
movsb
sbbb
iret
negl
pop
mov
xor
ds
mov
and
in
xchg
mov
and
push
or
lret
out
ret
jae
adc
add
mov
xor
pusha
mov
xorl
addb
out
dec
xor
inc
push
repnz
sbb
push
les
je
pop
js
lahf
popa
add
add
and
stos
push
cmp
in
add
add
arpl
cmp
add
test
push
and
mov
add
or
adc
add
int3
sub
insb
addr16
push
in
adc
sbb
addr16
dec
inc
pop
fldenv
imul
sbb
or
sbb
mov
dec
pop
xor
fwait
mov
or
jmp
popa
mov
sub
fsts
les
les
push
or
cli
inc
call
jne
cmp
dec
push
mov
inc
test
or
inc
ljmp
lods
sbb
jmp
call
js
sub
pop
cmp
andl
pop
or
inc
jl
add
std
repnz
sbb
cli
xor
jg
inc
inc
mov
jl
or
push
pop
into
jmp
imul
cmp
pushf
dec
sahf
sub
int3
int3
pushf
or
pusha
data16
enter
test
out
andl
int
fdivl
in
pop
lahf
ja
lahf
loopne
pop
aaa
nop
test
and
inc
pop
leave
nop
fadds
test
inc
in
adc
sbbl
fwait
mov
xor
push
iret
rorb
aam
call
jae
jb
add
or
pop
ficoms
movsb
and
pop
xor
fsubl
pusha
sub
scas
stos
and
ja
adc
mov
inc
lods
adc
push
mov
jb
and
hlt
cmp
into
mov
push
adc
mov
pusha
jne
pop
inc
sub
pop
hlt
inc
adc
cmpsb
xchg
dec
test
adc
sarb
and
insb
scas
push
mov
aam
mov
or
leave
or
fstpt
icebp
hlt
mov
mov
inc
mov
pop
sbb
xchg
int
mov
or
sub
jae
loopne
mov
addb
or
mov
add
mov
inc
jae
add
movsl
add
dec
shlb
movsb
orl
mov
xor
orl
test
dec
mov
pusha
mov
sbb
lock
in
dec
mov
call
pusha
pusha
dec
fs
mov
jo
mov
xor
and
xor
add
cmp
adc
cmp
lods
loopne
dec
repnz
faddp
cmpw
adc
bound
cmpl
popa
add
ja
mov
cmp
lds
out
cmp
jl
je
cmp
pop
mov
cmpb
js
add
jo
lods
loop
xor
jle
jb
dec
gs
add
leave
je
add
push
aaa
stos
jge
pop
ds
or
add
mov
add
push
inc
dec
sbb
fstl
xchg
sub
pop
mov
dec
or
shrl
outsb
push
add
movl
mov
mov
add
jno
mov
dec
sbb
das
lods
dec
mov
push
fimuls
add
adc
adc
pusha
jne
mov
shr
jle
movzwl
mov
jne
daa
add
add
test
je
pushl
fisttps
push
out
adc
adc
inc
cmp
jne
dec
out
ss
or
jne
or
sub
fimull
pop
add
inc
aam
mov
jae
mov
outsb
adc
mov
add
cmp
jl
add
jmp
icebp
sbb
inc
mov
jae
push
add
jl
incb
jno
jbe
jno
push
jns
pop
mov
dec
adc
sbb
insb
ja
mov
adc
iret
mov
mov
and
mov
pushl
add
push
jo
imul
clc
add
sub
pop
cmp
dec
loope
pusha
push
outsl
nop
inc
push
mov
sbb
cli
jo
pop
call
das
insl
and
jle
sbb
mov
mov
call
cs
lahf
inc
aaa
pushl
sub
lret
loop
or
mov
push
adc
orl
fcmovnb
pop
jae
or
dec
add
adc
add
sub
cwtd
pop
inc
xchg
cld
enter
add
fadds
adc
jae
mov
cmp
xchg
sti
lea
inc
pop
and
inc
push
or
sub
or
iret
stos
mov
or
xor
push
popa
sbb
loope
cwtl
add
xchg
pop
out
cltd
enter
and
push
xlat
xor
push
xchg
mov
mov
inc
mov
add
test
arpl
sbb
rcrl
sarl
nop
sbb
bound
sti
jmp
and
pushf
or
in
sub
add
gs
outsl
pop
xchg
mov
jb
jb
mov
lods
pop
mov
loop
add
mov
jne
or
js
pop
int
ret
or
arpl
mov
ret
jl
lock
sbbb
add
xor
scas
add
xor
nop
dec
inc
mov
push
or
in
pop
outsl
pop
add
imul
push
mov
cmpb
scas
inc
rorb
repnz
add
test
test
add
mov
xor
push
data16
je
and
enter
mov
jle
fiaddl
xor
xchg
xor
adc
inc
pop
or
jne
int
add
xchg
mov
pop
push
sbb
sbb
sbb
jl
jecxz
cmp
cmp
push
es
test
adcb
inc
jno
sbb
mov
fidivl
jge
in
ds
cmpsb
push
or
sub
arpl
loopne
sub
outsb
fadds
fwait
cmp
inc
jl
sbb
mov
int3
xor
xchg
xlat
ss
push
fisubrl
aaa
movsb
ljmp
test
mov
lret
dec
repz
pop
cmp
add
cmp
adc
push
jbe
int
mov
daa
cltd
adc
add
push
pop
jmp
mov
add
ret
jle
dec
mov
insb
sub
les
xlat
mov
out
xchg
and
pop
test
repnz
into
sbb
adc
mov
sbb
mov
mov
sbb
push
stc
push
adc
push
cmc
sbb
push
das
inc
cmp
insl
and
adc
sbb
mov
es
icebp
push
ja
lcall
add
call
adc
push
dec
inc
mov
sbb
mov
outsl
sbb
sbb
outsb
imul
sbb
gs
mov
push
or
leave
push
push
cltd
cmp
enter
outsl
outsl
mov
mov
cs
popa
gs
add
lret
mov
or
xor
lods
mov
popa
jns
cs
call
test
or
cmp
fdivr
addl
push
add
add
cmp
or
enter
sbb
cmp
xlat
and
push
add
add
inc
daa
cmp
mov
push
mov
inc
dec
or
adc
sbb
xor
jnp
sbb
xor
xor
add
inc
push
mov
dec
xchg
fwait
xchg
mov
add
into
jne
xor
push
add
and
xchg
pop
push
add
repnz
nop
mov
into
aam
sar
gs
pusha
and
jo
xchg
gs
insb
outsl
jb
jb
pusha
xchg
gs
in
cmpsb
sbbb
addr16
loop
inc
shrl
lods
dec
aaa
inc
iret
stos
jo
push
push
inc
into
or
mov
mov
xchg
enter
adc
leave
std
cmc
fwait
dec
pop
pop
inc
push
mov
sub
pop
jno
addr16
sub
std
outsl
add
cmp
orps
jg
test
push
mov
dec
cmp
arpl
mov
inc
mov
xchg
mov
mov
insl
ja
loop
cmp
andl
jmp
sbbl
and
pop
dec
inc
rol
iret
cmp
jne
fmull
push
push
ds
or
mov
xor
cmc
or
push
mov
sbb
and
and
mov
and
and
xorb
adc
xor
and
or
lahf
iret
xor
and
out
test
lods
xchg
shlb
xor
xchg
lret
lret
adc
daa
xor
jb
aaa
sub
int
xchg
pop
add
mov
mov
lret
out
xor
push
adc
xor
lea
fstl
add
xchg
sub
sbb
xor
aam
adc
pop
inc
add
mov
shll
jb
arpl
jae
fs
pushl
popa
je
push
outsl
outsl
insb
push
xor
mov
and
push
add
jb
jne
insb
push
jnp
out
and
mov
icebp
jmp
ss
add
inc
insb
insl
outsl
shll
cwtl
add
inc
dec
gs
xchg
mov
insl
xchg
cmovbe
aas
arpl
insb
mov
jp
push
jnp
mov
add
dec
outsl
fs
adc
incl
add
fs
imul
neg
insb
pop
jg
xlat
adc
fcmovnbe
jle
add
push
je
xchg
in
in
imul
or
and
std
mov
dec
inc
fs
fldcw
push
xor
sub
mov
lods
lock
sub
ja
inc
outsl
pusha
movq
and
push
push
dec
mov
sti
push
gs
outsl
outsb
push
enter
adc
into
push
orb
jae
in
cmp
aad
push
sub
loopne
push
push
cmp
into
cmove
outsb
inc
pop
ret
jmp
imul
mov
arpl
daa
mov
ret
pcmpeqb
and
pusha
xchg
and
add
push
fsubs
mov
add
sub
gs
je
mov
cwtl
mov
pop
sub
dec
cmp
sub
outsl
jbe
ss
mov
dec
push
or
add
shll
adc
push
imul
xchg
negl
jnp
outsl
push
pop
or
sbb
cld
and
jns
dec
ret
out
jo
inc
inc
cmpb
outsl
xorl
outsl
or
jo
outsl
jo
xchg
fildll
arpl
jne
fcoms
mov
mov
or
dec
xchg
data16
xor
add
imul
add
sbb
lds
adc
lea
fwait
icebp
add
pop
fildl
es
outsl
pushf
xor
adcl
add
add
fbstp
imul
and
mov
mov
loopne
dec
dec
inc
push
dec
inc
cmp
add
arpl
push
cmp
add
add
push
jo
imul
sbb
and
popa
xor
mov
jmp
ret
pop
std
inc
pop
pop
and
push
and
shll
xor
test
add
mov
dec
adc
gs
aad
fisubrl
das
push
push
push
mov
mov
push
push
imul
xchg
inc
lock
mov
movl
add
sub
jle
insl
js
lret
sub
pop
and
dec
jl
and
aad
sbb
mov
add
jne
int
loop
pusha
imul
cwtl
in
mov
adc
push
add
jne
add
cmp
mov
pop
add
jle
gs
das
fldt
dec
fsubp
fcompp
and
and
xchg
nop
aas
xchg
sbb
and
outsb
jne
fmuls
ss
push
ja
inc
push
inc
push
mov
inc
and
cltd
add
insl
jp
xchg
or
sbb
or
lret
pop
dec
insb
test
in
jb
adc
mov
insb
mov
test
dec
pop
adc
sub
cbtw
or
ss
xchg
popa
mov
in
clc
jge
daa
cmp
jns
add
popa
arpl
or
test
fidivrl
mov
das
lds
pop
or
xor
inc
pop
push
add
psraw
scas
xor
fsubs
outsl
nopl
sbb
and
bound
ficoms
sti
mov
or
or
negl
adc
outsb
sub
or
loope
pop
jbe
orl
or
leave
data16
cmp
jmp
sbb
push
inc
shlb
icebp
movb
pop
dec
insl
lods
push
inc
jmp
inc
xor
add
pop
sbb
mov
into
pop
add
push
push
adc
mov
adc
cmp
inc
fcoml
jbe
and
cwtl
adc
inc
sub
lods
sbb
mov
dec
mov
dec
aaa
daa
pop
je
pop
fwait
xor
bts
jmp
hlt
stos
jmp
neg
jbe
jg
push
call
mov
enter
clc
test
mov
push
aaa
adc
xchg
jp
stc
mov
test
inc
fcoml
mov
lret
sbb
add
jae
adc
push
mov
jne
cwtl
setl
mov
adcl
cltd
adc
inc
mov
push
add
repz
nop
inc
add
and
adc
loop
adc
pop
pop
push
je
and
incl
pop
mov
pusha
adc
shll
xorb
jno
sbb
dec
jp
dec
mov
cmp
sub
xchg
fildll
inc
roll
addr16
and
sub
mov
ljmp
loopne
inc
dec
adc
pusha
xor
lahf
push
lds
mov
jmp
lret
xchg
rorl
call
loopne
push
inc
cmpsb
and
shll
cwtl
or
loope
dec
jle
call
cmp
sub
cmp
sub
adc
ret
lods
into
inc
adc
into
rorb
mov
cmp
out
dec
dec
mov
popa
das
cmp
aam
lcall
notb
gs
cmpsl
enter
sbb
xchg
inc
jo
mov
pop
push
popf
pop
xor
filds
loop
call
lock
bound
xor
icebp
pop
fisttps
pushf
push
xchg
adc
out
mov
fucomip
mov
or
mov
push
pushf
call
jo
or
xchg
stos
cli
pop
pop
and
push
add
adc
or
adc
paddusw
and
push
adc
mov
xor
add
cmc
fldl
ljmp
add
pusha
jmp
mov
outsl
out
push
pop
jae
mov
adc
sbb
frstor
adc
les
test
mov
outsl
fisttps
rcr
ror
lahf
mov
jmp
data16
cli
testb
cli
pop
add
rcl
xchg
mov
cmp
incl
movzbl
mov
jecxz
push
sti
imull
lea
mov
inc
sub
ret
xor
xor
incb
add
push
mov
mov
inc
jne
push
adc
cwtl
inc
inc
push
jae
mov
iret
inc
push
bt
clc
mov
not
pushf
cmc
jmp
mov
jge
jmp
sbb
jo
mov
or
cmp
add
in
das
out
push
not
add
subl
loopne
sub
nop
ret
test
in
jg
mov
lea
adc
mov
call
inc
pop
adc
push
jns
imul
push
add
mov
ds
jmp
adc
mov
pusha
in
lcall
adc
call
or
mov
add
add
adc
xor
push
dec
sub
fcmovnu
sti
clc
xor
sub
test
clc
add
jmp
call
shr
jmp
jmp
arpl
cmp
mov
ret
jge
jmp
daa
push
mov
mov
push
pushf
pusha
mov
inc
add
mov
fisubrl
int
sub
int
enter
clc
repnz
mov
aaa
push
jmp
cmc
mov
mov
out
push
pushf
cmp
and
inc
push
add
sbb
mov
lcall
xchg
in
repnz
jbe
push
lods
fiaddl
lret
inc
sti
and
cmc
push
cmp
neg
or
mov
pop
loopne
add
je
dec
rcrl
fcom
sub
call
stc
aas
cld
sub
int3
call
pushf
aad
jecxz
mov
push
mov
imul
mov
rcrl
add
insl
mov
adc
inc
jno
aas
je
popl
lds
shl
shlb
or
fidivrl
mov
pusha
fnsave
popf
mov
aam
jg
fnstenv
adc
and
shll
and
call
jne
rcrb
jo
push
jmp
ljmp
cld
rcr
add
testb
cmc
inc
popf
inc
push
pushf
mov
xor
mov
sbb
stc
outsb
out
ss
dec
mov
adc
or
lds
enter
xor
mov
fidivrs
lret
sbbl
clc
in
aam
mov
test
inc
cltd
insl
jmp
call
mov
jb
or
pusha
movsl
sbb
jge
scas
loope
call
hlt
cwtl
aad
shr
dec
jmp
and
mov
fsubrp
xchg
sub
pushf
adc
xor
jp
mov
shl
or
or
cmp
push
xor
ret
xlat
arpl
mov
fildll
sub
cmc
movsl
lock
lcall
incb
jno
pusha
push
sub
rcrl
cmp
pop
lods
and
jmp
out
jnp
mov
add
or
rorb
fistps
and
mov
jl
jle
outsl
add
jmp
mov
in
sub
push
mov
adc
in
outsb
inc
mov
fs
pop
pushf
jmp
ja
push
aaa
fwait
clc
jmp
imul
shl
loop
mov
inc
lea
jle
popa
test
jle
sub
call
pop
push
jl
and
push
je
pop
std
jge
sbb
mov
aad
adc
pop
outsb
push
pop
inc
ja
pusha
push
pushf
stos
xor
push
push
sahf
and
adc
mov
pop
jmp
sbb
adc
push
xchg
or
ror
push
mov
and
ret
nop
jmp
xchg
callw
push
sbb
ret
imul
pop
in
or
jbe
add
popf
pop
fildll
dec
adc
icebp
xchg
lock
test
fcoms
xchg
ret
and
or
shll
je
fdivr
lods
fucomp
cmc
jecxz
cltd
shrd
push
cmp
jl
neg
test
xlat
test
loopne
das
repnz
inc
enter
add
shl
shl
push
out
pushf
inc
gs
xor
aad
cld
sbb
rcr
jmp
das
lret
xor
or
faddl
pop
addr16
mov
pop
add
fs
add
scas
in
xchg
cmp
and
jecxz
mov
ss
cmp
sbb
sti
subb
mov
pop
jb
std
sahf
inc
inc
and
add
fldt
push
jae
lret
divl
movsb
jmp
jnp
mov
lahf
das
inc
std
mov
cmpl
dec
or
lahf
sti
fimuls
mov
dec
mov
jnp
out
rdpmc
or
jnp
sti
sbb
divb
pop
into
add
add
mov
jg
pop
jecxz
or
mov
fwait
cmp
add
popw
ficomps
imul
aas
pop
xchg
mov
das
dec
push
pop
xor
imul
or
mov
jne
xor
in
neg
movzwl
cmp
adc
mov
fs
daa
dec
outsl
sub
out
int
lcall
ret
add
sub
xor
loope
fisubs
pop
cmpsl
adc
sub
pop
imul
pop
inc
push
pop
fwait
std
fsubp
out
dec
xchg
sub
arpl
pop
pop
xor
pop
ret
jnp
lock
adc
cwtl
icebp
mov
inc
nop
cmp
js
lock
jae
daa
pop
ja
negl
xchg
movsb
mull
cmp
aas
maskmovq
sbb
add
jnp
mov
arpl
fisubs
fsubrl
ja
xchg
movsb
testl
ret
sbb
outsl
stos
and
add
movsb
out
lock
fwait
pandn
lock
cvtdq2ps
fs
xchg
pop
fbstp
jg
stc
sub
jmp
push
or
xor
call
and
jp
roll
push
pushf
pop
out
sbb
icebp
dec
pop
cmp
scas
subl
shrb
push
pushf
sub
xor
leave
add
sbb
add
outsb
mov
pusha
mov
neg
pop
cli
rolb
mov
loopne
std
inc
outsl
cmp
rol
mov
sbb
leave
fadds
enter
cli
add
cmp
repnz
bound
decb
pushf
jle
push
or
add
incl
or
rol
sbb
xor
setp
mov
sub
dec
shrb
test
rclb
pop
mov
aaa
cli
repnz
adc
ljmp
fists
lea
lea
lods
xchg
setge
and
and
setns
loopne
mov
sbb
fdivrl
or
cs
fnsave
fstl
cld
push
rcr
rol
movsl
push
pop
call
push
adc
add
pop
adc
xchg
pushf
push
iret
movsl
mov
mov
xchg
int
xlat
mov
rol
xchg
repz
rcl
fbld
into
call
jnp
jo
gs
popa
dec
jmp
das
mov
mov
xor
cwtl
aaa
addr16
insl
test
or
cld
arpl
lock
popf
push
dec
add
aam
adc
mov
stos
jo
adc
cmpb
pusha
cwtl
or
arpl
cmpsl
arpl
inc
add
out
mov
mov
jbe
sti
mov
ret
xchg
xchg
shrb
enter
das
cmpsb
ret
fucomip
xorl
imul
cmp
push
les
pushf
repnz
sbb
and
sbb
jmp
mov
or
in
outsb
shll
imul
dec
xor
rolb
rcrb
adc
pusha
hlt
mov
mov
sub
mov
adc
aaa
sub
shl
add
pushf
mov
lds
mov
repnz
ret
and
pop
sub
les
mov
inc
add
neg
subb
mov
pusha
aad
xor
and
inc
fidivl
inc
rol
sbb
ja
lds
out
mov
test
pop
dec
sbb
incb
aam
fs
test
aas
cmp
sub
jle
stc
call
js
sbb
or
jl
push
data16
enter
and
and
ret
sahf
or
inc
pop
pop
dec
push
cmc
cmc
test
int3
pushf
inc
push
movsl
sub
pop
icebp
sarb
lods
jns
add
adc
rolb
fistpll
out
lds
xchg
stc
mov
inc
fcoms
dec
jae
xorb
pop
into
mulb
pop
sbb
cmpsl
sti
ret
push
adc
push
mov
mov
in
mov
ret
xchg
jb
mov
shl
call
iret
mov
and
outsb
pushf
or
flds
and
adc
xor
repnz
or
push
dec
lea
cmpsb
stc
shlb
add
sahf
cmp
aaa
sbb
imul
inc
push
cmc
rcrl
insb
vcvtps2dq
leave
mov
out
inc
xchg
sbb
mov
lea
clc
dec
pop
stos
pop
stc
aam
lea
test
sub
aad
shr
aaa
notb
mov
cld
fs
in
or
adc
cli
fwait
lcall
enter
inc
mov
pop
std
push
or
mov
or
xchg
mov
std
cs
popa
inc
inc
or
push
mov
loope
mov
fstpl
jmp
js
mov
nop
dec
mov
jbe
jne
stos
push
lds
subb
lret
test
arpl
adc
xorl
adc
fiaddl
sub
mov
push
das
fadd
stc
add
pop
pushf
dec
sbb
iret
jmp
adc
cmp
add
ljmp
nop
jmp
ljmp
cltd
adc
mov
pop
fdivrl
andb
rcl
ror
rolb
dec
sbb
or
sarl
out
test
push
jecxz
mov
shlb
cmp
cmp
sub
call
iret
jge
mov
xchg
sub
gs
inc
add
push
cmp
ds
lods
jo
cmp
scas
jmp
jmp
clc
mov
daa
dec
jmp
int
jo
hlt
xor
cmpsl
ljmpw
cmp
fsubr
mov
dec
inc
adc
in
std
sbb
movswl
sub
rclb
es
push
mov
inc
cwtl
jmp
or
test
push
sbb
inc
mov
cmp
add
cmp
cmc
xor
out
jg
or
fadds
lea
inc
mov
call
mov
adc
iret
jg
cmp
inc
pop
stc
lea
inc
lea
adc
aas
cmp
inc
fsubrp
fidivs
dec
not
push
sbb
mov
or
int
lods
sti
ret
xor
clc
mov
mov
stos
dec
cmpsb
and
add
mov
add
ja
add
mov
push
shll
jmp
fisttpl
scas
mov
xor
cli
or
pop
xbegin
sbbb
ss
repnz
loopne
inc
mov
fcoml
sub
mov
sub
adc
pushf
arpl
xor
jl
popf
or
sarb
mov
ljmp
jmp
jmp
stc
mov
xor
pop
xchg
popa
aaa
jae
jmp
push
imul
rorl
or
xor
pop
push
push
add
incb
shl
inc
into
loop
push
mov
jmp
mov
cmpsb
popf
cmp
or
push
ret
sbb
mov
xchg
imull
mov
and
sub
xlat
push
flds
orl
insl
dec
add
cmp
jecxz
jg
cli
stos
mov
loopne
dec
call
fdivrp
jno
push
jmp
ljmp
loope
cmp
sbb
inc
push
or
bound
cmp
addr16
mov
push
insb
lock
dec
push
and
orl
jmp
mov
sub
mov
out
sbb
pushf
addb
jmp
fimull
shl
push
mov
data16
stos
cmp
mov
add
xor
sub
sarl
pop
out
outsb
ficoml
loope
insl
in
sub
call
cmp
inc
cmp
jl
cmpsl
pop
adc
xor
lods
sub
or
and
stos
mov
mov
sub
or
outsb
popa
add
ror
clc
ds
jno
and
cmp
roll
jno
fstpl
jbe
push
mov
sti
push
into
xor
out
aaa
test
add
sbb
stos
sti
scas
sbb
adc
into
and
cmp
push
cld
into
sbb
adc
push
mov
test
inc
test
add
stos
and
adc
imul
inc
clc
icebp
lock
push
out
lea
cmp
dec
mov
rcrl
sbb
enter
fcmovu
push
in
cmc
lret
jmp
js
popf
inc
repz
jmp
testl
xor
push
cmpsb
push
adc
rcl
sub
add
aaa
insb
loope
push
clc
pop
or
jbe
sub
or
insl
cmp
mov
lds
shlb
test
mov
loope
mov
jge
and
pop
cmpsb
clc
mov
sahf
insb
pop
and
pushf
pop
inc
mov
inc
or
and
xchg
and
fidivs
test
clc
in
jl
shl
or
test
mov
mov
in
insl
ja
fiaddl
sbb
fsubrs
jecxz
xchg
jnp
push
call
sub
inc
push
stos
and
or
xchg
ss
test
push
mulb
imul
mov
imul
jne
or
mov
adc
jmp
dec
cmp
adc
push
mov
xchg
add
imul
fistpl
in
rorb
push
adc
pop
dec
xchg
push
and
jb
adc
fs
adc
xor
stc
add
mov
xchg
fs
inc
jne
mov
mov
call
aaa
pop
orl
cmp
jecxz
dec
add
ret
pusha
sub
cltd
dec
add
xor
insb
aad
sub
enter
je
ljmp
addr16
lock
adc
push
push
fnstsw
stos
jge
push
xor
mov
scas
inc
inc
clc
imul
jno
xor
pop
add
leave
sbb
push
jl
sti
adc
xor
mov
push
neg
and
cmc
pop
shl
in
lods
ror
pop
cltd
pusha
std
pop
fldl
test
sub
add
stc
dec
cwtl
push
test
popf
sub
leave
aad
call
mov
inc
daa
in
push
xchg
call
sub
lock
push
cmp
insb
stc
out
mov
pushl
lock
cs
test
jmp
lret
mov
push
inc
xchg
adc
cld
pushl
sbb
das
push
clc
xor
dec
adc
mov
jle
push
out
and
loop
dec
dec
xchg
out
mov
aad
test
push
xor
mov
sahf
xor
mov
cmp
addb
mov
dec
xchg
ror
inc
jno
clc
insl
cmpsl
dec
mov
clc
mov
repnz
inc
mov
pop
add
cmp
or
jmp
cmp
in
xor
mov
pop
insb
fists
rolb
stos
pop
sbb
cmp
push
cwtl
xchg
adc
rcl
out
fwait
aaa
or
inc
adc
fisttpl
pop
inc
or
movsl
inc
test
int
push
mov
adc
sbb
cmp
jmp
mov
imull
fildll
inc
jne
movsb
insb
pop
outsl
xor
aaa
jne
xchg
jns
xor
sub
jg
and
add
daa
xchg
push
xchg
cmp
cmp
stc
xchg
xchg
sub
xchg
cmp
outsb
adcb
cmpl
mov
imul
into
sbb
out
ss
cmp
fistpll
sub
pop
sbb
push
lods
and
pop
jl
popa
mov
shrl
mov
lock
lret
movsl
push
out
mov
aam
mov
sbb
rcl
pop
aad
or
or
fcoms
call
add
jmp
and
add
lcall
movl
scas
mov
mov
jmp
loopne
std
sbb
insl
mov
inc
shll
push
pop
mov
negb
jl
pop
sub
test
fsubrs
add
adc
cltd
inc
cmp
in
xor
sub
mov
push
sbbb
out
jmp
sub
pop
mov
push
call
fistps
xor
nop
repz
dec
push
call
divl
les
pop
fs
push
mov
inc
arpl
loope
setae
cmp
shrl
out
push
sub
enter
arpl
out
call
aaa
jl
clc
dec
out
popf
outsl
push
das
fmull
dec
test
sub
sbb
call
insl
cmpsl
fsubs
xor
ja
mov
jge
xor
daa
jmp
nop
jae
xor
lea
icebp
test
jl
sbbl
out
mov
ljmp
pop
mov
cltd
mov
ss
sbb
test
and
sub
xchg
jbe
push
rcrb
pusha
add
aaa
lea
jl
jl
adc
call
lea
fadds
pusha
sub
aaa
and
or
mov
mov
lods
call
and
jmp
xor
jp
adc
mov
push
paddb
mov
jge
lea
call
lret
pop
in
fmuls
movsl
and
dec
inc
sub
out
into
es
pop
stos
ret
imul
dec
mov
ss
mov
sub
in
addr16
push
add
jle
push
lea
dec
or
jp
xchg
mov
aaa
cwtl
push
ret
sub
addr16
notb
add
or
mov
test
xlat
cld
std
xchg
int3
adc
fisttps
fbstp
test
out
lahf
mov
addr16
loope
jge
dec
pop
shlb
xor
fneni(8087
aad
sbb
movsl
pusha
xor
repz
lret
jecxz
cmc
push
jno
xor
sub
xor
movsl
nop
and
xor
pop
js
ja
mov
jnp
pop
sbb
idiv
aad
clc
or
mov
out
jecxz
or
jmp
fdivs
jne
xchg
pop
mov
or
mov
mov
push
mov
insl
xchg
mov
xor
xor
out
push
cmp
dec
xor
shlb
dec
mov
pushf
out
add
push
rcl
inc
aaa
sub
adc
mov
clc
mov
out
inc
mov
lret
ret
push
inc
loop
jecxz
stc
cmpsb
andl
ret
insl
js
pushf
mov
inc
sti
imul
jg
sub
clc
add
or
push
add
inc
xchg
dec
xchg
jnp
jecxz
out
loopne
add
rol
adc
or
dec
or
push
test
push
roll
push
mov
or
movsl
inc
add
pushl
push
bound
cmp
lret
cs
pop
sbbb
incl
clc
jle
insb
push
inc
filds
sub
inc
xchg
xchg
add
out
std
outsb
xchg
cmc
mov
decl
mov
xor
aam
mov
ficomps
nop
lret
lea
pushf
mov
ljmp
std
inc
daa
daa
lcall
jp
fadd
push
adc
ljmp
xor
cmp
outsl
fisubrs
cmpb
movsb
and
add
pop
cld
adc
and
mov
sub
xorb
incl
out
mov
hlt
sbbl
pushl
pop
mov
repnz
rorb
or
cmp
cmpsb
mov
jns
jo
and
incl
jne
imul
adc
mov
or
loopne
lcall
lret
test
or
cmp
push
mov
xchg
aam
xchg
jmp
jae
cmp
sub
out
push
pop
xchg
mov
rclb
jmp
push
adc
mov
mov
mov
and
data16
dec
call
ljmp
stos
sbb
pop
loopne
pop
sbb
xchg
cltd
mov
xor
out
rolb
fbld
mov
mov
mov
jg
cs
rcrl
add
ret
jo
iret
pop
dec
mov
sbbl
aas
cld
jmp
xor
sub
andl
mov
and
add
cmp
nop
insl
mov
insb
shrl
ja
and
lea
in
mov
test
jmp
xchg
fucomip
pop
dec
mov
add
push
push
mov
iret
scas
sub
in
incl
xlat
js
lahf
dec
aam
and
pop
notl
jle
js
outsb
mov
and
call
xor
mov
daa
loope
popf
mov
btc
movsb
lea
imul
mov
jl
arpl
xchg
inc
insl
sbb
data16
sub
pop
inc
jge
pop
call
test
fisubs
enter
cmp
cwtl
push
add
xchg
cli
in
sub
clc
outsl
add
scas
in
lea
and
cmp
push
sub
xchg
popa
cmpl
pushl
inc
pop
cmp
scas
sbb
add
jmp
cmp
outsl
add
leave
cmp
pop
mov
lods
push
and
into
xchg
xchg
pushl
cli
jno
inc
into
jo
fisubs
sbb
cmc
ror
mov
aad
idiv
pushl
adc
stc
mov
mov
jo
dec
loopne
mov
iret
lods
push
sti
or
daa
pop
or
jmp
push
push
cmpsb
cmp
aad
fistl
call
jmp
xchg
pop
cmp
lcall
push
pop
pop
test
xchg
ficoml
sub
jno,pt
inc
fucomip
pop
inc
xchg
xchg
jle
push
inc
aaa
clc
jg
push
jb
jne
inc
jge
out
lret
xor
popf
ljmp
lret
in
and
pop
or
jno
rcr
mov
mov
jne
xchg
jne
ljmp
sub
or
xor
arpl
leave
jmp
out
pushl
vpcmpgtd
dec
mov
in
mov
cmp
stc
fs
sub
jg
out
out
xchg
mov
repz
inc
xchg
mov
je
insl
repz
lret
idivl
test
sbb
jg
xchg
sub
sbb
mov
adc
dec
fildl
push
cmp
shrl
and
xchg
lods
add
decl
mov
insb
push
out
dec
fsts
rorl
sbb
mov
loopne
sbb
pop
fsubrs
xchg
pop
and
xlat
or
mov
gs
dec
ljmp
in
outsl
and
sub
ja
sbb
in
outsl
cmp
rolb
xor
lds
sarl
jne
sti
fcmovnu
jle
cmp
xor
adc
mov
and
ficoms
cmpsb
je
in
mov
xchg
dec
or
insb
sbb
push
shll
cmp
mov
ret
cmp
stos
mov
test
ss
mov
scas
ljmp
cld
sbb
cltd
xor
sbb
shll
lods
sbb
jns
adc
movsl
jl
xor
lcall
push
gs
and
cmc
mov
movsb
inc
mov
sbb
dec
test
out
repnz
or
xchg
call
cmpsl
and
adc
mov
call
imul
sub
test
divb
loopne
pop
nop
dec
pushf
xor
sub
push
and
pushl
in
rclb
dec
in
jp
aam
jecxz
push
pop
adc
lea
call
xor
jbe
sub
mov
cmpsb
inc
mov
sub
outsb
ljmp
jg
sbb
xor
push
call
mov
mov
xchg
adc
xor
movsl
jae
mov
and
out
outsl
jg
and
or
xor
dec
sbb
lcall
pop
or
push
lahf
fadd
inc
pop
js
and
shll
imul
ja
shrb
xorl
int
dec
mov
test
fucomip
decl
xchg
lods
xor
xchg
push
sti
xchg
test
add
ljmp
push
mov
in
inc
jnp
and
jge
mov
push
mov
sbb
push
insb
mov
fbld
in
icebp
imul
xchg
fnstenv
cmc
cltd
cmpsl
sub
or
arpl
aas
lock
ss
mov
ficompl
ret
inc
cmp
lods
add
mov
ficoms
jg
mov
shrb
rcl
adc
mov
hlt
sbb
addl
into
push
int3
decl
rcrb
push
inc
dec
dec
outsl
and
idivl
fldenv
mov
xor
inc
xlat
mov
mov
fdivl
push
mov
sub
sarl
inc
out
nop
sbb
cld
xchg
or
push
xorl
and
mov
adc
out
js
out
push
mov
jmp
iret
addr16
push
lcall
incl
pop
scas
mov
ret
mov
pop
inc
in
push
fmulp
push
cld
pop
mov
ret
and
sti
mov
shlb
aad
push
scas
outsl
xor
cmp
aad
in
xor
inc
or
pop
sbb
mull
cmp
jne
adc
inc
aaa
pushl
je
dec
addl
push
xor
or
xchg
xor
cli
ljmp
int
push
pusha
rorl
lock
loopne
ret
imul
in
cmc
fmul
mov
push
push
movsl
and
daa
or
icebp
jns
aas
push
sbb
mov
sub
pusha
test
mov
mov
pop
pop
mov
and
mov
push
sub
popa
push
xchg
clc
add
sub
dec
add
dec
decl
arpl
lahf
das
repnz
mov
pop
xor
dec
jp
pop
leave
push
ror
movsb
lcall
dec
mov
lret
pop
adc
dec
mov
cmpsl
mov
loopne
lods
iret
jbe
mov
mov
in
decl
xlat
cmc
imul
nop
gs
push
in
sbb
out
lcall
jmp
mov
or
ja
mov
stos
jns
mov
push
cmp
call
popf
dec
jbe,pt
movsl
adcl
inc
int3
into
push
les
es
pusha
clc
jg
js
mov
lcall
or
adc
cmp
dec
mov
mov
popf
xchg
mov
adc
inc
sub
decl
je
mov
cmp
mov
push
jb
out
js
mov
call
jmp
clc
pusha
enter
mov
jno
jo
into
jmp
jae
pop
jmp
test
pushl
fs
add
negb
hlt
jae
sub
push
mov
stc
mov
jo
pop
add
outsl
hlt
mov
insl
or
je
mov
mov
jns
out
and
and
push
sub
xor
sub
mov
andl
fstl
inc
fcoms
mov
inc
test
xchg
scas
mov
sbb
jmp
out
dec
test
loop
mov
inc
dec
popf
jge
pop
shrl
cli
aaa
outsb
ljmp
in
lock
jmp
jns
push
mov
jecxz
push
or
xor
adc
es
ret
in
cli
inc
mov
sub
fldcw
insb
aad
jno
xchg
inc
adc
jmp
xor
jmp
ljmp
cs
inc
or
addb
lcall
std
xor
jmp
or
fdivrl
mov
push
mov
in
scas
cmc
xor
insb
xor
cmpsb
mov
add
cmp
aas
pop
or
adc
hlt
inc
clc
cli
faddl
xor
addr16
inc
out
mov
push
push
xor
incl
test
test
pop
std
das
inc
cmc
pop
scas
and
pop
pop
das
cld
fbld
js
popa
ret
jns
sbb
add
mov
xchg
sub
arpl
rorl
pop
cld
lds
cwtl
xor
repz
aam
stos
mov
cmp
jle
aad
mov
cwtl
push
mov
xchg
in
jge
sti
xchg
mov
subb
pop
daa
pop
pop
sti
cld
movsb
call
sbb
sti
scas
and
or
push
jnp
cmp
inc
std
das
loop
inc
cld
aam
les
aad
cld
xlat
lods
mov
icebp
add
arpl
push
sar
sub
sbb
insw
mov
mov
cmp
fisubs
out
in
rcll
mov
cmovp
mov
cltd
pop
pop
inc
mov
xor
out
sarl
cmp
inc
out
outsb
jno
cli
fbstp
sub
push
inc
cs
cmpsl
js
fdivrp
add
clc
and
push
mov
ljmp
dec
cmp
or
in
fbld
addr16
and
sub
js
jmp
lret
jns
fdivrp
inc
into
push
or
sub
loope
sti
nop
push
icebp
sarb
adc
or
or
loope
mov
xor
lret
movsb
sbb
out
pop
mov
sbb
jno
movsb
mov
and
iret
pop
lcall
or
movsl
xchg
mov
and
sub
movsl
jmp
mov
cld
fs
jo
add
std
mov
fwait
sbb
sub
cld
loop
mov
les
notb
mov
ljmp
mov
insb
xor
xchg
js
lea
mov
loopne
or
and
divb
xor
ja
xor
mov
sbb
add
xor
mov
sub
pop
sbb
ret
jle
and
mov
das
cli
mov
incl
inc
int
gs
nop
int
dec
or
pop
xchg
daa
xor
ljmp
decb
xor
mov
push
jbe
and
mov
jl
and
xchg
cwtl
mov
or
loopne
shlb
clc
ret
insl
enter
add
lcall
test
xchg
icebp
inc
and
dec
imull
nop
or
xchg
or
xor
rorl
out
inc
jecxz,pt
and
fbstp
in
fcmovu
cli
cmp
dec
fcmovbe
pop
jg
insl
in
lock
add
hlt
loop
pop
push
dec
stos
lods
sarb
leave
pop
and
mov
addr16
mov
pop
xor
push
fdivr
insl
negl
add
push
loopne
popa
jle
ds
mov
cltd
cmp
cmc
cmp
mov
rcll
jbe
out
mov
fcom
ljmp
cmpsb
pop
aam
jb
loopne
idivb
call
loop
cmpsl
daa
jg
push
or
xchg
into
sbb
mov
dec
adc
mov
jns
filds
test
cmc
push
or
int
ja
sahf
scas
cmc
pop
mov
jecxz
and
fsubrp
subb
mov
xchg
push
jmp
or
outsl
mov
xlat
call
ljmp
leave
add
sahf
mov
out
pusha
imul
inc
xor
shll
packsswb
dec
iret
movsb
mov
add
push
orb
sub
cmp
sbb
push
rcrl
int3
cmc
lea
mov
std
js
adc
addl
push
lret
in
mov
neg
jg
inc
jb
sub
decl
out
addl
mov
push
xchg
xchg
in
incl
ret
fs
out
xor
xor
ss
nop
sbb
push
add
out
mov
loope
call
xor
mov
cmp
in
out
popf
imul
aam
int
cmp
mov
loopne
or
fld
lret
mov
insl
cwtl
dec
xchg
ja
aad
insl
cmp
sub
dec
lcall
cmpsl
pop
or
cmpsb
stos
test
mov
std
pushf
add
xchg
mov
fstl
enter
adc
jle
adc
lods
loope
std
or
add
jg
mov
push
imull
std
daa
mov
dec
push
xchg
cltd
call
mov
xorb
sbb
incl
xchg
pop
adcb
or
das
pop
iret
mov
dec
out
in
mov
cmp
sub
xchg
fs
test
mov
xchg
mov
loop
icebp
push
xchg
inc
mov
sub
mov
lea
mov
add
out
dec
in
sbb
push
lock
out
daa
inc
lods
mov
jb
fdivs
mov
pushf
int
pop
rclb
std
push
shrb
mov
and
mov
jne
push
lds
mov
jg
jg
adc
out
inc
add
push
ja
lods
das
mov
mov
adc
mov
in
decl
aad
add
xor
repnz
test
mov
inc
cltd
out
mov
iret
gs
pop
lret
push
jne
cmp
mov
adc
lcall
test
dec
mov
xchg
data16
jg
add
jnp
or
movsl
jnp
ljmp
es
or
cmp
je
in
jge
dec
push
stc
sub
into
insl
out
imul
repnz
in
push
ret
mov
fimull
adc
push
flds
mov
fidivrs
sahf
jecxz
add
mov
outsl
jl
insb
sbb
mov
lods
push
jmp
out
insb
cwtl
loopne
xlat
inc
add
mov
stos
jmp
mov
popl
add
pop
loopne
aaa
out
fisubl
jp
or
ret
clc
push
or
inc
call
popa
js
test
adc
xor
adc
out
xchg
jp
cld
lods
jle
incl
jbe
jl
xorl
fstpt
jne
fidivl
lcall
mov
jge
scas
jne
loope
adc
and
addb
sar
in
imul
or
and
int
dec
scas
xor
cmp
dec
pop
stos
adc
fidivrl
inc
ljmp
inc
bound
push
cmp
outsb
jno
mov
mov
decl
std
pop
inc
mov
jno
stc
sbb
mov
dec
mov
jmp
mov
sahf
xor
mov
out
lea
pop
jb
mov
call
inc
imul
mov
and
lret
inc
xchg
in
cld
icebp
mov
push
pop
imul
das
fcomps
push
push
jecxz
mov
xchg
push
sub
jae
js
cmp
sbb
rcr
sti
daa
mov
std
stc
jl
xor
sbbl
adc
std
outsl
mov
sbb
mov
out
lods
mov
lods
lea
sub
cwtl
mul
cmp
pop
jle
jno
neg
in
aaa
mov
inc
stos
sub
scas
lds
push
cmpsl
cltd
dec
mov
xchg
inc
jg
lcallw
sbb
push
stos
pop
add
jne
sbb
dec
fdivs
mov
icebp
push
es
mov
js
or
fstpl
jg
cmp
pop
and
adcb
ljmp
push
jne
jmp
cmp
je
cmp
aam
jg
daa
cltd
push
sub
cmpsl
addr16
out
lcall
ljmp
cld
mov
adc
and
mov
adc
mov
cmp
jl
out
jge
push
dec
pushf
stc
popf
and
mov
out
js
addl
sti
fstl
fnstenv
jae
adc
sbb
sub
das
xchg
ja
mov
cs
cmp
cmpsl
je
pop
test
ret
ret
imul
hlt
aam
imul
lcall
push
pop
int3
popf
das
mov
push
xchg
lods
mov
loop
ds
nop
sbb
adc
test
lock
mull
dec
xchg
sbb
cli
jnp
add
mov
es
jle
dec
int
lds
incl
decl
xchg
jmp
scas
out
cwtl
xchg
jl
stc
push
cmpl
cli
jg
add
lock
outsb
xchg
pop
or
cmp
ja
mov
loop
or
ret
aaa
xor
fimull
xchg
clc
pushl
data16
or
scas
es
fimull
decb
jp
shl
ret
imull
xor
iret
or
aam
stos
sub
pop
add
push
jae
je
xorb
xchg
out
push
sub
xor
sbb
dec
jl
lock
int
stos
jae
jbe
and
nop
push
arpl
loope
mov
fists
stos
dec
sbb
mov
cmp
mov
lcall
mov
or
cli
mov
decb
sarl
fnstenv
jle
incl
xchg
andb
push
loop
and
lcall
repz
out
mov
inc
scas
mov
mov
push
mov
lret
aaa
inc
cmp
and
js
adc
jg
mov
mov
sbb
push
pop
sbb
bound
pop
clc
pushl
jge
push
jbe
mov
je
mov
and
pusha
xchg
sbb
js
mov
and
sbb
pop
mov
cmp
sbbb
sbb
adc
mov
inc
andb
jp
fmuls
mov
clc
daa
dec
mov
loope
jae
popf
push
dec
lock
mov
adc
mov
repnz
rorl
jmp
scas
shl
cmp
rcr
out
jae
pop
decl
fldenv
sbb
pushf
decb
cmp
sub
push
jb
xchg
stc
xor
aaa
push
jno
decl
mov
dec
pop
sbb
decb
ds
xchg
cltd
int3
inc
adc
outsl
push
xchg
fucom
loop
mov
fs
add
adc
inc
mov
cmc
push
hlt
sahf
pusha
stc
sbb
int
cmp
or
mov
dec
push
mov
into
fwait
or
sub
dec
outsl
int
push
imul
add
add
jmp
sbb
adc
xchg
lcall
pop
cli
test
or
decl
jle
xchg
pop
faddl
push
data16
in
xchg
adc
and
mov
popf
jg
mov
imul
int3
and
in
adc
sar
fdivs
fiaddl
push
add
inc
pop
push
xor
mov
mov
mov
jp
movsb
push
jne
outsl
sbb
in
daa
xchg
push
incl
loope
imul
jg
mov
xor
aas
and
imul
inc
movsb
cmp
xor
cmc
sub
cmp
enter
fcmovne
bsr
mov
sbbb
cwtl
rcll
cmp
jge
pushf
repz
mov
push
xchg
bound
sar
incl
lods
pop
sahf
pop
xchg
dec
inc
xor
movsb
es
add
and
bound
adc
scas
cmp
xor
test
sbb
or
call
mov
scas
adc
jg
fildll
movsl
pushl
loop
hlt
mov
mov
inc
and
and
xor
ljmp
lret
mov
sub
push
mov
loop
popa
mov
mov
inc
loop
mov
and
out
push
push
jns
scas
in
repnz
shll
ljmp
mov
repz
mov
pusha
inc
jne
popf
adc
adc
mov
je
cld
ljmp
test
pop
stos
jnp
jecxz
or
inc
lods
xlat
imul
rclb
dec
lcall
add
pop
cld
incl
mov
loop
jle
testl
xchg
jae
jmp
mov
das
add
aaa
in
push
cltd
mov
sti
insl
incl
sub
mov
popf
imul
scas
fistpll
or
fsubp
mov
mov
mov
push
jg
je
or
in
out
decb
xor
in
subl
add
test
mov
hlt
mov
mov
cmpsl
jns
inc
push
inc
mov
push
ret
repnz
pushl
add
lods
jecxz
push
cmp
inc
pop
movsb
mov
aad
xor
mov
stos
cli
or
sub
xor
mov
pop
stc
jge
shrl
cwtl
add
scas
inc
jbe
ljmp
lcall
lea
repz
fmull
shll
jns
jnp
mov
mov
sbb
int3
jo
cld
mov
cltd
jl
in
je
fdivrs
add
dec
mov
leave
hlt
dec
mov
push
xor
cmp
push
gs
add
int3
push
sbb
cld
jecxz
call
insb
sub
or
outsl
mov
push
call
add
pop
jp
and
es
mov
pop
push
ret
cmpsl
lds
add
mov
movsb
cwtl
mov
mov
xor
repnz
insb
mov
orl
mov
leave
sbb
push
insb
jo
or
xchg
outsl
xor
add
dec
xchg
jecxz
outsl
hlt
decl
scas
xor
add
inc
xchg
mov
xor
add
lret
jmp
shlb
in
inc
ljmp
jmp
cmp
arpl
decl
movsl
dec
add
call
xor
test
or
popf
cmp
jb
aad
adc
shrl
dec
call
icebp
je
ja
add
call
add
push
nop
push
clc
adc
or
fistpl
and
jmp
mov
mov
cld
mov
mov
lcall
fs
into
dec
pop
clc
xor
or
jbe
mov
outsb
mov
insb
out
pop
lcall
cld
call
fbld
pop
cld
cmp
pop
xor
xchg
lahf
jb
add
xor
call
out
adc
arpl
xor
popf
xor
mov
or
mov
or
cmpsb
in
push
pop
sbb
pop
imul
out
incl
xchg
js
inc
dec
mov
jl
or
cs
mov
out
stc
aaa
inc
mov
jae
shl
out
pop
push
out
push
insb
rcll
ss
decl
inc
fneni(8087
ret
mov
adc
mov
mov
aaa
jbe
sbbb
in
sub
into
jecxz
dec
pop
pushaw
out
in
mov
dec
mov
ljmp
jnp
push
lods
xchg
xchg
mov
sti
sub
decl
fdivrl
ljmp
mov
int3
repz
jg
mov
inc
inc
pop
into
mov
push
pop
xchg
mov
sub
frstor
ljmp
fisubl
jge
cmp
cmc
test
dec
pop
rcrb
test
add
std
cmp
stos
mov
cmp
cli
incl
test
stos
jle
adc
pop
add
or
cld
ret
test
enter
fidivrs
lods
sbb
pop
sarl
push
in
mov
lea
daa
pop
insb
jge
xchg
ret
jnp
xor
loope
jmp
ret
inc
notb
fwait
movsb
in
push
push
test
in
adc
adc
cs
je
push
jg
leave
pop
mov
movsl
dec
cmpsb
pop
pushf
incl
sbb
and
prefetch
or
push
das
pop
clc
inc
lret
sti
xorl
jne
fsubrl
mov
pop
pop
sbb
roll
xor
rorl
jle
fiadds
and
imul
call
jp
test
mov
hlt
sbb
in
mov
jl
pop
cmp
lcall
mov
sbb
imul
scas
rcr
and
dec
fstpl
mov
push
loopne
sbb
pop
iret
adc
cli
pop
sbbl
sub
decl
push
mov
lds
leave
pop
jno
cmc
sbb
jo
pop
loopne
cmp
mov
test
jge
insb
adc
push
decb
iret
addr16
push
sub
pushf
int
mov
sbb
xchg
fcomps
mov
pushl
dec
aaa
test
insl
jg
push
push
add
insl
js
pusha
dec
int
cmp
mov
incl
aas
lea
lea
scas
lds
cmp
xchg
sbb
sahf
xchg
dec
addb
int3
out
call
test
dec
pop
insl
aad
test
dec
pop
push
pusha
cmpl
lret
addr16
incl
lods
call
outsb
dec
mov
stc
cs
jns
clc
pushl
push
mov
add
repnz
cmp
xor
call
xchg
ss
add
sarl
lds
lret
popa
popf
js
xchg
into
push
leave
aaa
lcall
lods
xor
inc
sbb
fcmovnbe
test
cmpsb
scas
pushf
push
je
cmpsb
incl
incl
nop
mov
les
sub
jle
inc
push
mov
dec
cld
dec
out
iret
xchg
mov
iret
jge
stc
jmp
xchg
dec
mov
in
fisubrs
clc
test
inc
fmuls
xchg
nop
xchg
lret
and
and
sbb
push
mov
mov
mov
lcall
imul
sub
aaa
ljmp
mov
push
push
fildll
mov
fidivs
inc
and
mov
mov
pushl
ljmp
popa
and
or
adc
push
icebp
mov
xchg
add
mov
nop
pop
mov
xchg
or
lods
pop
lock
and
mov
push
xchg
shlb
adc
cmpsl
push
jno
sbb
gs
add
clc
cmp
mov
inc
insb
test
cwtl
dec
mov
lods
push
ljmp
int
or
jg
pop
cli
mov
outsl
push
xor
jp
jns
in
imul
aaa
ljmp
movsl
xor
push
xor
push
cmp
xchg
sbb
push
je
pop
in
xor
cltd
imul
jp
imull
call
fdivl
insl
xlat
leave
cmc
cmp
loop
push
lock
movsl
and
xor
pushl
fstl
cltd
inc
sti
xchg
fldenv
jns
test
callw
lcall
mov
insb
xchg
in
in
pop
mov
xor
mov
mov
std
out
imul
loope
push
jns
xchg
or
lods
lods
or
jecxz
lret
inc
jmp
mov
loop
xor
dec
pop
ljmp
jg
das
adc
xchg
fcmovnu
mov
les
adc
lds
cli
mov
cmp
add
int
lds
jle
js
sbb
push
cltd
scas
add
or
hlt
enter
rol
roll
inc
inc
jp
push
mov
cmp
ljmp
imul
fs
pop
adc
sub
dec
daa
cli
pushl
push
lcall
mov
std
cmpsb
fwait
fs
push
lret
sub
dec
xlat
icebp
incl
add
pop
jg
jne
push
pop
jle
enter
mov
or
xor
jge
pop
hlt
ljmp
mov
hlt
fwait
or
fs
fidivrl
movsb
cmpsb
out
pop
inc
stos
mov
ljmp
je
incl
lea
popa
or
cmp
pop
adc
call
xchg
clc
fisubl
inc
sub
pop
mov
aad
mov
push
lock
std
std
lea
hlt
push
hlt
xchg
addr16
mov
add
mov
int3
ljmp
shl
frstor
outsb
and
pop
mov
adc
movsl
ljmp
fmull
jae
in
dec
cwtl
and
pop
std
pop
sub
mov
sub
std
mov
push
adc
push
inc
mov
ss
xor
sbb
out
sti
mov
cwtl
fdivr
mov
sub
sbb
dec
insl
test
lock
mov
mov
lds
push
pop
pop
cmp
jmp
jmp
or
dec
inc
int3
and
aam
pop
ret
daa
adc
lcall
fldln2
fwait
mov
cmp
and
mov
roll
decl
bnd
cmp
rorb
out
imul
inc
and
cmp
pop
dec
xlat
sar
insb
fnstsw
ret
mov
sbb
cld
in
aam
push
ret
decl
movsl
aad
xchg
fs
cmp
sbb
xchg
mov
fistl
stos
mov
arpl
in
and
lret
enter
imul
pushf
ror
insl
daa
cld
push
js
adc
dec
dec
pop
loopne
out
pushf
mov
js
inc
pop
and
aam
insl
call
xchg
mov
and
lcall
lcall
add
inc
push
dec
dec
movsl
adc
sarl
and
lock
mov
xchg
popa
lock
repz
inc
jbe
js
jl
iret
fisttps
addl
push
jmp
nop
add
int
jns
in
inc
shlb
aam
pop
les
xchg
jmp
out
das
out
mov
loope
sub
fs
out
mov
mov
cmpsb
test
iret
dec
in
inc
inc
fucomi
adc
dec
xchg
jge
rorb
ret
lcall
jns
imul
add
fistpll
repnz
call
aam
pop
push
iret
in
fistpl
jnp
insl
pop
mov
lock
roll
or
je
mov
clc
xchg
insb
insl
push
xlat
inc
mov
cmpsl
push
cli
jg
and
jle
lock
out
pop
add
dec
fildl
insl
pop
mov
lcall
jb
in
mov
push
aam
sbb
xchg
pop
shll
adc
ret
inc
sarl
insb
fldt
test
xor
xchg
push
in
das
mov
inc
fisttpl
shlb
inc
jbe
push
or
add
add
mov
fistps
jno
in
mov
and
aam
push
enter
incl
xchg
icebp
xchg
sahf
cmc
add
jmp
pop
repz
movsb
aam
aaa
pusha
fists
xor
incl
dec
pop
mov
ret
jnp
dec
int3
leave
leave
jge
pop
xchg
and
xchg
stos
push
push
movq
ja
jmp
mull
aam
push
into
outsl
jecxz
sub
aas
incl
icebp
mov
inc
inc
adc
sti
push
inc
sbb
cli
repnz
adc
jl
aad
push
dec
mov
push
rcrb
stc
lret
lcall
pop
das
fisubrs
inc
sub
inc
add
outsb
push
xor
mov
pop
lcall
xor
cwtl
into
aaa
sub
clflush
incl
xchg
push
add
push
and
pusha
push
push
scas
outsb
adc
aam
xorl
jle,pn
mov
shrl
out
push
lret
pop
jo
loop
push
lahf
scas
dec
pushl
adc
mov
cmp
mov
dec
sub
nop
dec
call
push
outsb
mov
jmp
lds
aam
mov
or
daa
repz
add
sahf
pop
mov
xchg
rcrl
cs
sti
xchg
jle
test
aaa
cs
int
jp
call
inc
push
and
inc
xchg
outsb
fstpt
jnp
lods
imul
decl
jbe
nop
mov
fidivl
movsb
lods
out
ljmp
jmp
mov
repz
fisubs
push
push
push
out
add
push
lock
das
leave
cs
notb
mov
das
ljmp
cmp
pop
jl
mov
push
lahf
int
and
and
pop
pop
cmp
std
jno
rcr
daa
outsl
jb
dec
mov
int
outsl
fidivrl
mov
inc
stos
out
popa
fnstenv
jmp
out
test
rolb
push
ss
dec
push
and
mov
andl
clc
and
fwait
lret
inc
cmpsl
fists
push
jnp
xor
sub
in
sub
addr16
clc
mov
xor
jbe
fs
mov
lcall
gs
jmp
mov
stos
stos
in
jb
lret
aaa
cld
test
mov
jne
mov
add
das
fneni(8087
push
in
scas
incb
adcl
xchg
aas
fsubrp
sub
jns
ds
cmpsl
sub
cld
add
addr16
aas
lcall
jnp
clc
adc
lret
outsb
in
dec
ret
cmp
es
mov
or
insl
stos
fbstp
fsub
fidivrl
movsl
rolb
in
leave
decl
jbe
fwait
insb
add
shll
xchg
pop
call
hlt
jmp
cmpsb
rcrb
leave
or
fdivs
daa
jge
decl
mov
les
sub
mov
hlt
sbb
mov
inc
shlb
and
xlat
push
sar
fldt
cli
ljmp
jo
push
test
xchg
roll
add
sub
inc
xchg
jb
mov
out
test
shrl
jb
add
rolb
inc
mov
jp
pop
enter
pop
mov
subb
insl
ds
outsb
test
clc
jg
mov
cmp
push
mov
dec
mov
imul
repnz
stc
fidivl
movsb
mov
lret
jmp
mov
test
call
cmp
xchg
or
and
mov
movsl
push
loop
rclb
insb
xor
mov
fisttps
cltd
sbb
aaa
push
push
pop
lret
lods
shlb
xor
inc
push
jg
pop
cs
fnstsw
push
aaa
loope
sub
push
mov
sbb
jg
mov
in
or
or
addr16
jmp
jno
incl
xchg
push
or
aas
inc
jno
lock
out
fisubrs
xchg
xlat
push
stc
lcall
pop
icebp
inc
pop
leave
lahf
inc
pop
aam
imul
call
inc
aad
dec
adc
lods
movsl
outsl
lcall
js
jg
es
mov
dec
sbb
cltd
sahf
mov
push
fs
mov
clc
aas
std
stos
mov
inc
pop
sbb
out
out
ss
mov
lahf
mov
lea
xchg
ror
test
inc
dec
rorb
mov
jg
add
lods
ds
add
sbb
icebp
jg
std
cmp
pop
aas
add
push
xor
xor
je
aaa
clc
outsl
mov
xor
xor
xor
xor
xor
jg
pushl
rdtsc
mov
shll
or
pop
xor
xor
adc
incl
push
xor
outsb
xor
enter
cld
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
fnsave
xor
xor
jnp
lea
mov
xor
or
or
push
ss
mov
or
pop
cli
xchg
pop
test
dec
aaa
pop
aaa
addr16
into
pop
aaa
add
cmp
cmp
cmp
call
inc
cmp
imul
cmp
mov
fildll
sahf
xor
aaa
fdivl
or
adc
cwtl
cmp
cmp
cmp
ja
cmp
cmp
cmp
push
cmp
mov
cmp
cmp
jb
std
cmp
cmp
inc
cmp
jae
jle
cmpl
cmp
cmp
cmp
cmp
cmp
or
lcall
in
test
jge,pt
xchg
ds
ds
mov
int
lock
ret
sub
outsl
call
icebp
xor
xor
pushl
pop
xor
mov
xor
xor
xor
xor
xor
stc
jg
xorl
cmc
aas
xor
outsb
xor
iret
xor
sti
xor
pop
loopne
ss
ss
ss
xorl
incl
call
mov
ss
stos
sbb
inc
aaa
dec
aaa
out
jmp
jno
jns
popf
aaa
movsl
aaa
mov
mov
mov
aaa
push
cmp
aad
cmp
push
cmp
cmp
cmp
jg
mov
xchg
cmp
cmp
cmp
cmp
sti
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
ds
aas
cs
xor
cmp
aas
cmpsb
int
mov
aas
loop
loopne
out
pop
call
cld
xor
insl
xor
popa
pushl
adc
xor
fnsave
pushl
xor
xor
xor
xor
xor
fcmovne
out
xor
movsl
inc
pushl
mov
shlb
cli
ss
aaa
pop
aaa
mov
aaa
cmp
ja
cmpl
incl
cmp
xchg
out
cmp
cmp
cmp
decl
cmpl
mov
xchg
lahf
cmp
cmp
out
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
lea
cmp
jb
xchg
xchg
mov
lods
sarb
mov
lcall
xor
or
adc
push
xor
xor
pop
xor
jge
lods
xor
xor
xor
xor
pop
jg
pushl
xor
xor
xor
loop
cmp
lret
xor
shl
pushl
arpl
jbe
xorl
mov
aaa
loopne
or
incl
mov
cmp
cmp
cmp
insb
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
roll
cmp
out
call
mov
cmp
cmp
aam
lock
inc
ds
ds
jl,pt
fcomip
dec
xchg
cmpsl
ds
mov
adc
sbb
aas
inc
mov
outsl
aas
jl
test
mov
ret
jle
xor
js
xor
xor
xor
outsl
das
cmc
decl
push
xor
jl
mov
sub
xor
jecxz
xor
xor
xor
xor
xor
xchg
xor
jo
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
stos
xor
xor
xor
xor
mov
divl
xor
sbb
clc
daa
xor
push
xor
repz
pop
ss
dec
std
ljmp
ss
ss
ss
test
sbb
inc
repz
aaa
xor
cmp
aas
aaa
mov
xchg
stos
inc
clc
mov
cmp
cmp
cmp
cmp
cmp
sbbb
cmp
mov
lcall
cmp
cmp
mov
pop
cmp
cmp
cmp
add
sub
shrl
lea
stos
add
cmp
cmp
add
mov
or
aaa
add
xor
mov
cmp
mov
jmp
cli
cmp
leave
adc
sbb
inc
ds
icebp
add
inc
pop
add
and
xor
xor
xor
jno
jnp
ja
cmp
jecxz
icebp
cmp
cmp
sub
cmp
ljmp
pop
lea
xchg
cmc
cmp
adc
cmp
in
in
in
cmp
inc
or
adc
sbb
cmp
cmp
dec
cmp
imul
aam
shr
jae
cmp
cmp
aaa
sbb
pop
sbb
lret
fs
cmp
cmp
cmp
cmp
jg
ret
cmp
cmp
cmp
cmp
lods
hlt
cmp
cmp
cmp
sub
lods
dec
nop
cmp
cmp
outsb
cmp
mov
mov
leave
push
xor
push
outsl
jne,pt
cmpl
mov
xchg
ds
mov
mov
fistpll
fidivrl
loop
out
in
idivl
std
repz
dec
sbb
and
jg
cmpsb
mov
dec
xor
inc
push
aas
push
aas
push
aas
pop
cmc
jg
aas
addr16
insb
aas
jb
jp
jg
mov
mov
xchg
aas
cwtl
aas
popf
aas
mov
jg
mov
mov
ljmp
add
cmp
xor
xor
push
xor
aas
jle
xchg
lea
pushf
xor
loope
jmp
xor
xor
xor
xor
decl
pushl
cmp
inc
xor
pop
xor
xor
jno
jnp
xorb
xor
mov
xchg
xor
add
ja
lcall
xor
xor
xor
pop
outsl
cmc
arpl
xor
outsl
cli
mov
mov
sti
ss
aaa
cmp
push
aaa
outsb
aaa
in
aaa
mov
aaa
push
aas
das
push
leave
cmp
cmp
dec
or
mov
outsl
cmp
cmpb
cmp
enter
fstpt
jecxz
popa
sbb
adc
sbb
and
cmp
push
incl
icebp
cmp
pusha
dec
xchg
cmp
mov
int
aad
inc
cmp
cmp
cmp
data16
cmp
cmp
cmp
sub
repz
inc
pop
cmp
mov
iret
cmp
incl
fwait
mov
ds
push
ds
bound
push
jp,pt
and
decl
movsb
ds
ds
mov
lret
xchg
mov
or
adc
aam
in
and
cmp
and
and
xor
cmp
or
ljmp
jecxz
lret
dec
ja
fcom
cltd
add
pop
pop
popf
shll
mov
pop
paddd
popf
fstps
mov
cmp
cltd
add
fbstp
jl
sbb
mov
and
insl
and
xor
and
daa
pop
and
pop
add
mov
js
pop
xor
cmp
insl
push
popa
cmpsl
and
add
loopne
sub
nop
push
or
test
cs
nop
jmp
jge
orl
and
fs
lock
push
repnz
add
cmp
jnp
or
sbb
jb
jb
xchg
int
inc
add
jae
daa
loope
push
roll
adc
aam
lea
clc
cs
inc
mov
test
stc
nop
daa
inc
fdivrs
and
inc
and
repnz
pop
add
inc
ds
jl
and
push
add
and
nop
das
addb
sbb
and
pop
push
add
add
adc
stos
sbb
stc
adc
inc
and
add
xchg
cmp
nop
hlt
cld
leave
das
test
add
inc
and
imul
mov
push
sub
mov
fadds
nop
cmpsl
jl
and
mov
and
aas
xchg
pop
adc
adc
inc
jle
adc
and
outsl
stc
add
jl,pn
and
push
sbb
fdivs
xchg
and
add
out
adc
push
call
pop
inc
fcom
adc
add
out
jns
xor
adc
data16
int
in
adc
add
or
xor
adc
and
stos
mov
xor
out
fmuls
jns
or
xor
aas
das
in
add
add
xor
inc
inc
and
cs
movsb
inc
and
xor
xchg
xchg
adc
xor
pop
push
adc
mov
test
mov
ss
mov
adc
mov
mov
fdivr
add
fistl
add
cmpl
and
nop
xchg
jl
add
xor
adc
stc
add
ficoml
add
in
xchg
das
addb
inc
and
inc
and
in
ja
adc
inc
cmp
push
rep
or
jns
cltd
pusha
jp
pushl
into
movsb
and
add
popa
data16
lret
adc
leave
mov
mov
pop
nop
mov
dec
xchg
cmp
leave
or
les
jmp
adc
pop
jae
movsl
mov
fcoms
and
fdivrl
cmp
adc
sub
push
mov
cmp
push
lods
cld
pusha
fnstsw
dec
sub
inc
dec
lock
push
data16
add
sbb
shlb
cmp
pop
pop
push
jae
pop
lock
sbb
pusha
sub
loopne
mov
popf
hlt
xor
add
int3
rorb
gs
jno
ja
adcb
dec
mov
lcall
fistl
hlt
and
pop
ret
aaa
cmpl
pop
xchg
mov
mov
testl
and
cmp
xchg
sbb
ficomps
and
testb
cld
pop
add
cli
incb
les
ljmp
ljmp
hlt
imul
test
xor
sbb
dec
insl
insl
jae
leave
push
add
insb
lret
mov
push
call
xor
bound
jg
mov
sarl
loopne
lcall
inc
shll
dec
dec
inc
dec
shll
dec
popa
mov
shlb
sub
faddl
adc
aad
loopne
pop
and
or
mov
call
cmp
cmp
decb
sub
arpl
aaa
dec
call
sub
adc
icebp
ja
popf
je
cmp
mov
lahf
inc
cmpsb
lea
push
push
mov
fsubr
out
sbb
xchg
inc
push
jmp
mov
leave
pop
inc
push
in
or
test
shrl
outsb
adc
push
push
sbb
dec
sbb
jne
jb
sbb
add
pop
mov
or
orl
ret
and
or
sbb
lods
xor
sub
js
or
xor
xchg
adc
xor
sbb
sbb
leave
ret
test
call
cmpb
jmp
enter
or
mov
or
jb
inc
push
icebp
nop
pcmpeqw
push
std
push
ljmp
lret
and
and
dec
xor
cmp
fistpll
jecxz
inc
add
cmp
jl
add
lock
loopne
lds
dec
add
jb
xchg
lcall
and
or
xor
daa
adcb
mov
jae
mov
add
fisttpl
mov
mov
lret
mov
jb
outsl
outsb
mov
lret
jb
jae
cs
leave
js
aam
aad
insb
mov
adc
popa
xchg
jne
cmpsb
fwait
sub
arpl
cmp
mov
loope
or
cmc
mulb
pop
xlat
insb
push
idiv
dec
stc
inc
cli
je
sti
xor
push
pop
adc
or
sbb
lods
sbb
mov
adc
hlt
sub
rol
jae
mov
dec
gs
popf
ror
leave
leave
lret
int3
pushf
lds
adc
push
into
jp
enter
rolb
enter
dec
cmp
mov
or
xor
dec
outsl
popa
aas
std
dec
mov
outsl
enter
imul
xor
int3
sbb
into
mov
push
lock
ja
xor
aam
loop
adc
add
decl
add
push
lock
mov
sti
outsb
pop
mov
sti
es
push
inc
sub
fstps
xor
push
insl
xor
push
jge
mov
popa
cmp
mov
sbb
inc
add
arpl
enter
cld
or
xchg
loop
pop
ljmp
push
adc
addl
decl
jne
in
scas
nop
call
cld
add
adc
sub
call
jb
push
call
push
leave
mov
jmp
js
pop
inc
dec
inc
insb
ds
sub
enter
xchg
xchg
xchg
enter
xchg
mov
lcall
pop
xchg
push
adc
sub
mov
jae
inc
mov
sahf
popf
nop
push
xchg
std
pop
xchg
std
xchg
je
enter
std
xchg
std
xchg
std
mov
push
stc
lret
mov
push
js
mov
lret
jo
outsl
jb
jb
imul
or
icebp
add
sbb
add
add
stos
or
lods
jae
xor
pop
aad
enter
xchg
or
lods
insl
aaa
pop
add
les
xor
in
lcall
push
out
jne
and
rep
aaa
dec
rcrl
hlt
cmc
div
call
cs
push
movsl
inc
js
mov
mov
adc
lock
lea
dec
sub
in
and
lea
cmp
pop
xchg
jae
jns,pn
mov
inc
outsb
insb
mov
lret
mov
jne
arpl
cmpsb
or
mov
nop
cmpsb
imul
imul
xchg
jns
imul
insb
outsl
jb
xchg
mov
iret
pop
xchg
gs
sarb
bound
inc
ffree
fs
out
call
mov
add
pop
add
movsb
add
add
aam
and
fsts
call
inc
cmp
push
scas
movsb
jnp
sbbb
adc
je
push
mov
xor
jge
mov
ja
push
pop
inc
mov
mov
mov
arpl
dec
pop
das
or
out
sbb
inc
mov
sbb
in
sub
pop
repnz
adc
pop
repnz
jl
adc
test
jne
adc
xor
mov
ret
adc
mov
fsubrs
jle
dec
repnz
out
mov
add
es
mov
loopne
add
insl
data16
pop
or
rep
fisttpl
sbb
add
es
enter
mov
loop
data16
adc
pop
add
push
mov
enter
add
add
push
mov
mov
add
cmp
test
adc
stc
sbb
int3
jg
mov
cmp
sete
or
ret
leave
pop
mov
out
shll
inc
add
js
mov
outsl
or
mov
or
jo
add
inc
clc
inc
xchg
mov
pop
pop
or
inc
sbb
mov
push
enter
addb
inc
and
and
fwait
in
sbb
loopne
adc
test
cmp
inc
in
jns
inc
and
and
inc
and
adc
lds
sbb
push
sub
and
in
inc
and
add
cli
movsb
enter
hlt
cmpsb
sbb
mov
sbb
sub
or
and
and
fwait
popa
test
add
xor
int3
add
out
call
lea
sub
pop
sti
add
add
jae
sub
mov
or
loope
mov
mov
cwtl
inc
and
add
cwtl
inc
and
stos
fdivs
or
fsubrs
cmpsb
imul
cmpsb
imul
cmpsb
imul
xor
ror
ret
lcall
jb
inc
jae
cmpsb
imul
lods
imul
imul
pop
inc
cwtl
add
xor
mov
leave
sub
aaa
cmp
xor
pop
dec
dec
dec
and
shll
adc
orl
add
or
jp
andb
push
movsl
and
fldt
or
das
adc
bound
and
outsl
jne
jae
add
lods
xor
jge
xor
xor
push
push
js
imul
lods
js
push
dec
push
dec
push
sub
push
push
dec
sub
xchg
test
rorb
out
push
dec
adc
pop
jbe
xor
mov
inc
inc
inc
adc
rolb
pop
mov
inc
mov
movsb
inc
push
sbb
xchg
adc
and
push
push
adc
sbb
adc
sub
mov
adc
mov
adc
mov
dec
mov
test
and
outsb
dec
mov
sub
and
mov
jo
mov
adc
mov
movsl
adc
and
inc
inc
pusha
inc
xchg
mov
or
imul
inc
and
das
xor
sbb
push
or
es
xchg
xchg
xor
sub
adc
push
mov
int
cmp
test
lock
jae
mov
fsubrs
mov
push
outsb
jb
and
inc
or
js
or
push
push
adc
jno
pusha
inc
jno
mov
or
mov
mov
push
adc
or
jns
sub
xchg
out
sub
xchg
add
inc
xchg
xchg
adc
addb
arpl
insl
dec
jae
test
jg
in
insb
sbb
inc
inc
add
or
pusha
add
popa
add
jns
xchg
dec
xchg
orl
and
push
imul
xchg
fstl
fs
add
lcall
sbb
cmpsb
imul
insb
lcall
and
xlat
je
imul
pop
jge
add
je
add
add
dec
push
xor
addl
and
jno
adc
ds
scas
or
in
mov
inc
push
push
add
pop
dec
or
and
jb
lds
xchg
adc
push
or
fisubrs
push
inc
sahf
pop
adc
mov
jnp
push
cmp
adc
jne
or
add
pop
mov
xor
push
dec
or
rcrb
jnp
xor
push
dec
mov
in
movq
jae
jo
jmp
push
xchg
outsl
pop
jns
pop
push
adc
or
or
pop
in
popa
jbe
xor
fstl
stc
cmovno
imul
data16
add
add
add
xor
lcall
push
mov
add
xor
ret
rclb
add
pop
push
fsubrs
add
fldlg2
cld
mov
jae
nop
outsb
sbb
add
pop
or
or
dec
mov
add
jecxz
mov
jns
and
mov
cmp
xor
jecxz
inc
jmp
insl
add
outsb
inc
jae
and
mov
popa
jns
popa
and
ss
cmp
add
addr16
xlat
jne
jg
inc
imul
xchg
or
notl
sbb
sub
add
push
jmp
gs
jb
cmp
fnstenv
xor
popa
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
pop
adc
xchg
xchg
outsb
jae
pop
xor
xor
cmpsb
fcmovnu
gs
push
sub
shll
insb
or
daa
dec
dec
sub
fs
xlat
outsb
xchg
mov
jl
in
push
daa
jbe
mov
ret
fs
outsl
pcmpeqw
lret
je
and
xor
inc
push
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
add
sbb
xchg
lock
lea
add
xor
mov
ljmp
inc
xor
cli
xor
pusha
xor
lea
stos
xor
xor
xor
xor
mov
incl
iret
inc
xor
xor
xor
xor
xor
xor
xor
xor
cli
inc
xor
xor
xor
xor
xor
xor
xor
xorb
jp
xor
cli
decl
aaa
xorb
aaa
pushf
aaa
mov
cmp
cmp
push
cmp
in
jg
xchg
xor
cmp
cmp
cmp
cmpl
add
cmp
lods
cmp
cmp
cmp
lret
cmp
cmp
stos
xor
cld
cmp
jg
jmp
xor
dec
xor
xchg
xchg
xor
xor
dec
sar
outsl
std
dec
xor
jg
test
mov
lahf
xor
inc
out
mov
arpl
xor
add
pushl
push
ss
ss
ss
divb
and
movsl
call
aaa
sub
xor
cmp
cmp
sar
xor
fdivrl
loop
and
sub
mov
add
or
mov
dec
adc
or
nop
or
and
xchg
add
add
or
and
xchg
and
les
mov
sbbl
or
sub
jae
jne
pop
sbb
inc
outsl
pavgw
mov
inc
pop
add
adc
mov
mov
sub
xor
adc
add
add
push
stos
pop
dec
or
adc
add
xchg
inc
push
imul
and
add
inc
add
add
es
imul
popf
add
or
imul
stos
add
dec
stos
cwtl
and
andl
in
sub
inc
cmpsl
lods
or
stc
inc
sub
mov
imul
cmp
into
push
aaa
fstps
and
mov
repnz
and
movsb
addb
xor
fwait
add
nop
js
dec
xor
sub
or
call
bound
push
mov
popa
jb
adc
leave
mov
push
daa
jp
sbb
add
or
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
