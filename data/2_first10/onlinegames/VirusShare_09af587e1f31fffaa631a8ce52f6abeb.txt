mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
jg
ficomps
or
pop
pop
pop
leave
or
and
ja
ja
mov
faddl
out
std
fwait
les
jae
fld
or
lds
fldt
pop
popa
enter
lret
lret
outsb
mov
int
into
push
outsb
mov
add
xor
xor
inc
mov
mov
cmp
pop
fdivs
fldcw
scas
fidivl
fisttpl
push
add
pop
loop
pop
xlat
jne
jecxz
add
inc
in
out
out
call
jmp
jmp
in
pop
in
xor
xlat
je
lock
pslld
repz
cmc
sbb
add
aaa
clc
stc
dec
add
std
fldt
pop
sti
js
cld
je
mov
push
call
test
adc
orb
lock
adc
pop
clc
scas
mov
or
add
rorb
outsb
or
je
jg
push
inc
add
sbb
push
mov
sbb
adc
mov
pop
push
pop
je
loopne,pn
fstpt
push
adc
or
pop
or
mov
movsb
dec
jbe
shr
pushf
data16
pop
adc
or
insl
sbb
push
addr16
fbstp
jmp
sti
jne
stos
or
add
loope
lcall
inc
lret
sbb
cmpl
in
testb
loope
jmp
cmp
push
push
push
inc
dec
pushf
je
adc
pop
ret
movsbl
push
mov
pop
jae
les
ret
jmp
push
pushl
sbb
push
push
xor
mov
test
je
mov
sbb
ljmp
lock
inc
mov
test
mov
jne
andb
ss
pop
clc
out
mov
inc
push
xor
movzbl
inc
cmp
jl
clc
pop
jg
mov
shlb
or
stc
stc
shll
add
sbb
je
sub
cmp
push
lods
jmp
add
pop
adcb
aas
mov
lock
or
clc
add
sub
or
inc
ret
stos
shlb
cmp
add
pop
cmp
in
inc
andl
mov
push
push
push
pop
and
add
and
gs
xorl
dec
pop
jne
or
call
call
inc
inc
sub
in
ds
sti
or
xchg
dec
inc
nop
lock
cmpsb
lahf
outsb
mov
add
mov
std
lods
jae
push
aad
cmpb
jbe
mov
cltd
mov
mov
lea
push
imul
cmp
cmp
jl
dec
clc
out
sub
jbe
inc
shl
imul
push
inc
cld
in
cmp
sbb
jmp
or
add
insb
sbb
sub
sti
push
aas
mov
xor
cmp
jbe
test
adc
ret
mov
push
ds
jg
cmp
jl
mov
push
or
shl
nop
mov
out
fistps
stos
insl
lea
push
jmp
popa
sti
fildl
adc
xchg
sub
sbb
fcomps
add
std
jbe
lret
fmull
frstor
inc
or
fidivs
fst
mov
pavgb
les
push
add
xor
xlat
faddl
insb
xor
shll
add
dec
bound
shll
bound
dec
shll
jb
inc
add
mov
sub
jmp
scas
fildl
shll
dec
ret
imul
lds
scas
scas
scas
sbb
push
enter
lods
fdivs
mov
test
mov
push
push
dec
ljmp
adc
push
repz
sti
cld
lea
cld
iret
sub
sub
ret
std
add
insl
push
in
inc
cmp
decl
jl
mov
xchg
subl
shr
dec
mov
fsubs
jmp
outsl
pop
sbb
rcrl
loope
push
fldl
add
jg
leave
sbb
jnp
jl
pusha
inc
jp
jae
xchg
ret
call
mov
inc
dec
jne
stos
push
push
push
inc
push
cmp
in
push
xlat
xor
daa
loop
shlb
adc
idivb
jne
xchg
push
js
push
pop
jle
cmp
or
and
cmp
jne
push
rclb
mov
mov
dec
scas
push
dec
cmp
and
je
adc
arpl
push
xchg
sbb
ficoms
or
jne
or
or
add
jb
add
xchg
push
sub
jmp
ret
in
push
inc
je
jmp
je
or
ret
sub
sti
xchg
cld
fldt
inc
xor
cmp
shl
lahf
inc
into
shl
fisttpll
cmp
sbb
lcall
fdiv
or
es
or
fsubs
scas
idiv
testb
je
dec
movb
jne
add
or
in
cmpb
xor
incb
in
jmp
cld
adc
mov
add
mov
shlb
and
cwtl
rol
sub
test
push
mov
and
adc
movsl
dec
ljmp
add
mov
cmpsb
mov
mov
fs
mov
outsb
gs
xor
dec
or
adc
xlat
aam
aam
mov
lds
pop
rorb
loope
add
inc
les
rcll
lods
lods
xlat
aad
jne
scas
adc
and
jne
mov
mov
mov
mov
mov
mov
mov
jne
mov
add
in
lods
mov
adc
dec
dec
xchg
push
aas
push
cld
dec
or
ret
repnz
es
sub
repnz
movsb
sub
in
lea
in
mov
jo
mov
inc
dec
repnz
mov
not
xchg
pop
xor
fmull
mov
mov
cmp
insb
neg
mov
inc
mov
pop
ret
mov
out
add
cmp
in
loope
jp
push
xchg
mov
push
push
loope
add
mov
dec
add
push
das
or
fistpl
push
cld
jmp
mov
fnsave
sbb
movw
jmp
jmp
pop
push
call
cmpl
icebp
outsl
xorl
push
cld
mov
ret
hlt
push
lcall
sbb
pop
pop
jnp
fcoms
mov
fwait
mov
adc
popf
pusha
xchg
insl
popa
leave
cmp
xor
lock
sbb
push
inc
and
inc
cmp
das
mov
aas
cmp
add
mov
xor
rol
jbe
adc
gs
shll
into
insl
test
mov
test
pop
jmp
fsubr
mov
pop
out
pxor
pop
lock
mov
jb
je
subl
gs
xchg
cltd
fcmovne
mov
aam
xorb
push
lods
pop
lods
pop
test
mov
cld
ret
mov
pop
std
adc
arpl
sub
adc
test
les
dec
push
loop
xor
push
mov
cli
insb
sar
or
inc
ret
orl
mov
insb
push
pop
adc
notb
ret
test
lods
adc
in
sub
fadds
mov
daa
mov
lods
roll
mov
dec
lea
push
popf
sbb
mulps
insl
rorl
andl
pop
mov
rclb
or
cmp
insl
xchg
or
adc
or
ljmp
outsl
pop
cld
jp
movsl
movsw
movsb
push
inc
aam
cmp
ljmp
daa
sbb
mov
or
testl
push
cmp
clc
xchg
push
loope
mov
and
pop
mov
fstl
cmp
push
rcll
push
adc
xchg
test
push
and
mov
cld
and
shll
lock
jge
dec
jecxz
cmp
jl
or
scas
jle
push
inc
xchg
jo
add
xor
in
push
js
jnp
pop
idiv
cmp
jle
add
jl
jge
std
in
jle
jp
add
pop
jl
pop
sub
adc
pop
pop
adc
imull
cs
rolb
xchg
cli
and
ds
cmp
jbe
xchg
cmp
xchg
repnz
lahf
stc
movsb
movsl
cwtl
sti
cmp
lahf
adc
cld
jnp
sbb
je
js
push
add
adc
dec
push
mov
in
push
jne
jge
push
test
stos
btr
ss
push
sub
test
data16
sbb
mov
sarb
mov
cwtl
in
cmpsb
or
out
call
add
loopne
arpl
push
out
push
or
nop
stc
popw
jbe
daa
inc
test
jne
int
xchg
adc
xor
dec
and
call
add
rclb
sbb
jge
fidivrs
cwtl
sti
ljmp
adc
std
pop
mov
and
push
popa
mov
mov
push
out
push
out
pop
pop
pop
testb
pop
or
or
xor
jb
lock
inc
repnz
repz
cmc
adc
mov
imull
lret
xor
inc
gs
gs
xor
xor
imul
or
jo
dec
xlat
test
fsubs
fisttpl
inc
rcr
fucom
inc
outsl
jo
dec
shll
inc
imul
mov
mov
mov
sub
shrb
cmp
inc
fisttpll
dec
into
sarb
inc
fildl
push
pop
shrb
shll
inc
aam
imul
adc
or
or
or
or
aas
push
testl
pop
aad
shll
and
jmp
mov
push
call
cmp
mov
add
jne
push
jge
or
xlat
pusha
loopne
dec
arpl
sbb
xor
adc
push
in
clc
mov
fcompl
adc
incl
push
icebp
ss
ss
inc
inc
add
mov
mov
adc
push
adc
rcr
fildll
inc
dec
pop
movsb
cwtl
xor
and
xchg
xchg
dec
test
add
inc
mov
xchg
cmp
loope
aaa
jmp
fnsave
sahf
adc
xchg
cwtl
inc
ds
insb
shr
pop
and
xchg
xor
sbb
ljmp
mov
jmp
popa
lock
insl
adc
pop
adc
jecxz
push
add
popf
jl
sarl
xchg
jge
jae
negb
or
adc
adc
pop
mov
sub
or
sub
cld
andb
add
loope
inc
sub
outsb
sub
jne
or
sbb
dec
inc
pop
cmp
jae
fldcw
test
push
xchg
xchg
leave
mov
pusha
pop
adc
add
outsb
call
and
push
setno
and
xchg
out
sbb
fldl
movsbl
loop
mov
jmp
mov
or
das
jecxz
sbb
inc
lahf
and
movsb
mov
inc
pushf
mov
mov
adc
mov
lea
test
mov
fstp
popf
push
jmp
nop
sub
jmp
adc
into
rcrb
xor
fdiv
mov
dec
push
sub
mov
test
adc
outsb
neg
in
or
cwtl
lds
dec
push
mov
ljmp
shlb
push
int
imul
mov
push
fisttps
lcall
out
pop
mov
lea
hlt
mov
fwait
mov
sar
jns
cmp
inc
test
and
leave
incb
add
inc
xchg
rorl
push
stos
pop
push
lcall
pop
sbb
xchg
popf
out
test
push
or
shr
out
mov
insb
andb
fcoml
mov
mov
jecxz
push
popa
mov
or
and
mov
pop
mov
hlt
pop
adc
lahf
mov
mov
mov
mov
push
push
testb
into
adc
push
sub
mov
jge
test
dec
outsl
in
cmpsb
pop
pushf
sub
jne
je
cmp
popf
push
test
push
pop
in
nop
cmp
add
lds
jb,pn
push
inc
add
mov
mov
cs
push
pop
mov
fldt
push
add
or
ret
inc
sarl
ja
jge
out
push
adcb
dec
hlt
xor
jg
clc
test
add
je
leave
sbbb
pop
sbb
and
xor
pop
sbb
and
fadd
push
cwtl
fdivr
jb
add
ds
adc
leave
push
imul
sub
adc
enter
and
xor
insb
popa
enter
sub
or
aaa
adc
into
sbb
adc
aam
out
call
mov
pop
or
lods
fsubs
es
roll
test
or
rcl
mov
mulb
jo
imul
dec
xor
cs
inc
je
mov
pop
shll
loop
push
jmp
and
jmp
in
xor
dec
jo
fsubs
fwait
lea
notl
loopne
push
ror
or
rol
insb
pop
ljmp
rcr
jp
jne
inc
loope
xor
fimull
arpl
les
and
int
add
jmp
cmp
sbb
std
mov
or
inc
mov
push
test
and
push
sub
lods
mov
test
mov
mov
push
inc
mov
pusha
pop
sti
imul
jne
cld
push
pusha
fmull
or
dec
sbb
test
mov
push
sbb
jne
add
repnz
imul
cmc
mov
call
cli
mov
shll
jecxz
in
in
enter
jecxz
jmp
ljmp
dec
enter
adc
mov
add
mov
cmp
push
pop
ret
adc
insb
cmp
arpl
faddl
sbb
shr
add
dec
call
pushf
pop
or
shr
lahf
nop
pushf
mov
add
mov
and
inc
or
sub
push
mov
fists
ja
call
icebp
push
inc
pop
ret
mov
jmp
int3
or
inc
pushf
xor
mov
mov
enter
mov
shlb
out
add
mov
sub
xchg
mov
push
mov
arpl
push
push
in
lods
icebp
xchg
neg
sbb
add
add
jle
mov
std
or
sub
mov
testb
enter
mov
mov
mov
push
add
push
sbb
dec
stos
adc
js
in
push
inc
mov
sar
pop
orl
incl
jl
adc
outsb
inc
ja
or
cld
xor
sbb
mov
xchg
cmp
popa
mov
hlt
jecxz
fldt
inc
orb
jbe
push
aas
inc
xchg
movsl
xchg
cmp
fs
mov
mov
add
or
or
xor
push
and
call
mov
cmpb
jne
inc
or
add
or
insl
jnp
and
aam
dec
movsb
jl
ljmp
je
movzwl
mov
sub
cmc
jnp
sti
insl
lahf
rclw
sbb
dec
shlb
in
in
inc
or
test
out
ret
and
mov
fsubrl
js
arpl
add
push
xchg
bound
xor
iret
and
or
add
bound
add
xor
js
xchg
movsb
mov
xor
out
push
xor
imul
xlat
mov
pop
stos
add
xor
ljmp
sub
inc
pusha
mov
ds
ss
xlat
aaa
sub
adc
lock
fwait
out
and
add
push
sbb
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
sbb
cmpsb
jmp
cmpsb
es
imul
fidivrl
pop
xlat
jge
mov
cwtl
add
icebp
lahf
outsb
jecxz
out
adc
rorl
and
mov
imul
dec
les
inc
pop
scas
in
xchg
jo
xor
mov
jne
inc
or
mov
imul
test
push
push
dec
inc
dec
xor
cs
insb
inc
incb
inc
inc
push
inc
push
dec
or
adc
sahf
insb
pop
sub
mov
aaa
pop
or
mov
incl
fists
test
xor
scas
xor
sbb
adc
mov
incl
pop
vpcomw
mov
push
xor
push
fldlg2
pop
push
push
inc
push
push
xor
add
sub
out
sahf
ret
pop
pop
add
and
and
or
gs
gs
xchg
add
xor
xor
lcall
jmp
jnp
pushf
call
mov
lea
sbb
or
adc
out
adc
incl
jnp
add
add
push
push
push
push
push
mov
call
mov
aas
sub
movsb
pop
popf
popa
jmp
pop
pop
adc
into
ljmp
mov
xor
sbb
out
mov
jae
inc
mov
mov
mov
in
jp
xlat
dec
loope
fs
stos
and
cs
push
in
inc
outsl
insl
arpl
lahf
std
scas
cmp
data16
jae
mov
cmpsl
mov
pop
fdivp
dec
les
mov
int3
out
mov
aaa
and
or
push
pop
or
mov
mov
inc
enter
dec
dec
inc
inc
inc
dec
inc
pop
inc
daa
fistpll
lods
lret
rol
mov
mov
mov
fxch
push
idivb
jno
xchg
pushl
sbb
popa
arpl
and
fdivrs
out
fiaddl
dec
jnp
imulb
mov
or
mulb
ss
aad
enter
insl
outsl
outsl
call
mov
ret
sub
jb
mov
roll
fs
jne
fs
insl
jae
je
insb
fs
outsb
aaa
mov
sbb
pop
jae
jae
gs
jl
pop
mov
add
andb
bound
push
xchg
insl
imul
arpl
fdivrs
jo
aaa
fs
add
ja
fnstsw
je
push
je
jns
or
add
or
or
push
and
add
outsl
data16
sbb
fistpl
cmp
cmp
add
fistps
in
bound
inc
dec
push
push
push
inc
push
inc
pop
insl
push
dec
mov
fildll
imul
pop
xchg
lcall
ret
xchg
add
xor
or
push
add
add
add
inc
loope
pusha
nop
inc
add
inc
sbb
sbb
add
add
mov
mov
int
mov
push
jb
addr16
insl
and
jmp
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
jg
mov
or
pop
xor
bound
repz
jg
bound
push
lcall
mov
arpl
bound
pop
or
cmp
mov
pop
out
cmp
push
imul
dec
stos
insl
dec
add
add
mov
push
dec
adc
mov
iret
lcall
mov
movb
loope
or
adc
add
add
pop
cmp
or
pusha
pop
sti
daa
push
add
sub
adc
push
and
xchg
add
shlb
dec
dec
add
pop
or
add
je
js
or
cmp
xchg
std
fstp
add
jb,pn
popa
je
add
mov
or
mov
adc
cs
pop
xor
nop
add
inc
daa
fsubs
jl
insl
jo
add
jae
ja
ret
mov
in
pop
pop
xlat
pop
dec
push
push
gs
outsl
arpl
or
mov
ja
mov
aas
ret
jae
popa
arpl
daa
add
sarb
out
fs
mov
mov
jge
sbb
daa
dec
dec
push
cltd
rcr
pop
mov
stos
addb
subb
mov
jmp
sbb
add
loopne
inc
fimull
inc
mov
inc
fdivrl
pushl
lock
mov
mov
das
or
sbb
jnp
cld
out
mov
jbe
dec
inc
push
jmp
iret
jo
and
popl
push
mov
pop
push
mov
push
mov
cmp
push
xchg
lret
jb
scas
lods
std
test
or
jg
adc
inc
lock
ljmp
ret
xor
sub
adc
nop
js
mov
decl
cmp
mov
jle
mov
adc
adc
mul
in
in
sahf
call
sbb
inc
dec
jge
sub
mov
mov
xchg
pop
and
jb
in
filds
ret
ljmp
aaa
je
mov
push
mov
fwait
mov
inc
cwtl
clc
out
jle
hlt
shrb
fsubr
loop
ljmp
popf
jnp
and
sti
adc
sub
xchg
lods
leave
int
cmp
call
outsl
ficoms
aam
scas
outsl
jae
lods
xchg
out
xchg
in
mov
or
pop
loopne
mov
scas
push
aas
pushl
sbb
sti
jno
adc
stos
js
sbb
xor
sbb
call
and
mov
fmuls
loopne
pop
jmp
pushl
aas
in
add
ljmp
fcom
lcall
popl
imul
sbb
and
sar
rcl
popf
incl
shrl
xchg
push
inc
adc
ret
push
sub
fdivr
jmp
out
fnstcw
aaa
xor
mov
adc
add
aam
inc
lret
mov
adc
add
std
mov
pop
jg
sbb
fists
daa
jg
ljmp
hlt
addr16
pop
shl
loope
into
loopne
dec
sub
pop
cltd
cli
cmp
dec
pop
add
mov
shlb
imul
pusha
cmp
bound
cmp
bswap
scas
push
or
inc
jmp
cltd
or
jge
das
xchg
cmp
add
mov
inc
sbb
mov
pushl
inc
xor
rol
add
xchg
and
rcl
ficoms
cli
mov
mov
inc
fstpt
sbbl
push
iret
ljmp
outsl
push
arpl
call
stos
fbld
std
or
daa
pusha
jl
fstpl
iret
add
outsl
cld
mov
and
push
cld
inc
sarl
mov
repz
mov
out
dec
jg,pn
and
mov
negl
or
pop
or
incl
addr16
mov
jae
sub
rcrb
jo
fdivr
setns
decl
in
ljmp
pusha
cmp
imul
xchg
and
add
lret
repnz
addr16
call
lcall
repz
movsb
stc
das
lahf
jmp
test
subb
aaa
jmp
cmpsb
rcrb
test
jns
inc
ljmp
cmp
or
xchg
jge
ret
xor
cmpl
jae
sub
mov
push
adc
jle
jecxz
pop
xor
out
jbe
call
sub
cmp
inc
mov
cmp
lcall
movsl
mov
loope
bound
fcompl
add
adc
jmp
hlt
jg
into
mov
filds
jg
add
sub
dec
std
call
imull
and
push
pushf
push
shrl
xor
stos
popa
sub
push
loope
pusha
call
pop
out
cmp
test
and
std
ljmp
daa
or
pop
jo
fnstcw
scas
and
mov
lret
sahf
sbb
mov
das
mov
jmp
insb
arpl
mov
movsl
mov
sub
inc
xchg
lret
sbb
cs
pop
popf
dec
mov
jne
inc
ds
sti
sbb
adc
fisubs
jb
mov
jmp
xchg
mov
and
xor
xchg
pop
das
imulb
mov
adc
mov
jmp
mov
sbb
inc
inc
sbb
aad
pop
out
sub
xor
push
fbstp
imul
pop
shll
cmp
ljmp
ljmp
cmp
and
mov
into
xchg
pop
popf
inc
ret
mov
nop
in
jae
mov
mov
and
mov
and
jg
mov
jns
jo
cmpsb
movsb
popa
int
push
pop
jno
push
push
xchg
es
mov
aam
cmpsl
lods
sub
aas
jae
jno
aad
sub
pop
mov
shlb
pop
lcall
xor
pop
push
adc
in
push
popf
les
dec
cld
dec
and
mov
inc
insb
xor
loop
dec
clc
xor
call
call
lds
int
or
add
xlat
mov
shrl
jg
lret
fld
inc
inc
and
sub
in
pop
xchg
sbb
gs
sbb
das
lock
sbb
into
fwait
inc
in
xor
xor
ljmp
adc
movsb
int
fdivp
dec
inc
pop
loop
stos
mov
cmp
cmp
mov
sub
push
inc
xlat
pop
loop
out
ret
dec
jecxz
imul
pop
clc
ljmp
mov
in
mov
mov
add
roll
je
decl
insl
add
sarl
ss
fmul
xor
mov
ljmp
mov
dec
imul
jne
mov
leave
adc
cmp
and
dec
cmp
daa
lods
jmp
arpl
pop
mov
cmp
cmp
add
ljmp
ljmp
mov
and
leave
add
movsl
das
repz
sar
mov
das
sbb
mov
push
xchg
sub
add
pop
lret
out
les
mov
add
or
fimuls
lret
push
xor
or
fsts
inc
call
lcall
cmp
pop
std
and
push
jae
nop
in
shll
rol
scas
dec
repz
icebp
pushl
aas
fdivrs
cmc
bound
inc
push
loop
mov
or
aad
ljmp
in
xor
mov
dec
loop
negb
adc
fwait
xchg
jmp
fidivs
ljmp
decl
mov
cmpb
js
cltd
fmuls
loopne
stc
and
aad
or
mov
out
mov
inc
pusha
enter
pop
jae
mov
incl
inc
xchg
cmp
fidivl
lahf
call
cwtl
repnz
mov
cmp
pop
sbb
ds
mov
dec
inc
dec
pop
push
push
fistpll
incl
fisubrl
int3
movsl
xor
or
pop
aam
fld
sti
mov
push
jbe
jmp
add
sti
mov
xchg
mov
sub
jbe
cmp
dec
mov
incl
xor
daa
xor
addr16
lret
ret
push
pop
add
xchg
std
dec
cld
mov
cmp
jecxz
add
dec
xchg
das
sbb
stos
inc
xchg
ljmp
dec
jmp
shl
xchg
mov
xor
xchg
lret
decl
int
fs
inc
int
or
xor
mov
and
mov
mov
in
mov
int3
dec
outsb
xchg
adc
loop
pop
fisttps
mov
mov
je
jno
mov
lcall
and
fmull
jnp
rclb
xor
push
into
sub
cmc
cmp
cmp
outsl
dec
shrl
dec
shr
push
cltd
mov
push
and
es
ljmp
gs
inc
xchg
aaa
outsl
mov
jmp
jbe
repnz
mov
push
orb
adc
jmp
pop
jnp
sahf
lods
out
xchg
sub
fisttps
in
into
imul
out
mov
dec
mov
les
pop
cmp
jp
inc
popf
push
roll
fcompl
dec
mov
ret
decl
sahf
and
fnsave
and
add
mov
test
pop
push
push
cmp
fcmovnb
mov
insb
and
jbe
push
ret
sti
pop
cmp
int
call
pop
dec
sbb
push
pop
mov
push
icebp
add
or
nop
paddsb
pusha
xor
outsl
adc
jmp
jbe
pop
dec
scas
xor
std
jg
ror
daa
fadds
add
inc
scas
imul
lcall
push
mov
sbb
popf
or
mov
lret
inc
push
add
jg
cmp
cmpsb
test
ret
rorl
out
inc
cmp
mov
dec
clc
push
leave
shlb
pushl
out
imul
mov
push
adc
in
sub
push
ljmp
dec
sub
pusha
out
dec
dec
cmpsl
f2xm1
sbb
sbb
lods
pop
lock
cmp
sbb
add
mov
pop
xor
jge
icebp
add
mov
mov
push
test
pop
leave
push
rcl
dec
je
call
sub
pop
ds
add
pop
mov
pop
sarl
test
ret
je
push
inc
mov
xchg
mov
stos
cltd
fidivl
jmp
loop
xor
xor
add
pop
aad
sbbb
mov
enter
pushl
xchg
add
sbb
ret
test
xchg
push
movb
pop
lret
loop
fnstsw
insb
mov
stos
inc
xor
push
cmp
sub
cmp
pop
add
cmp
mov
sarl
and
pusha
jns
jg
xor
das
mov
icebp
dec
aas
mov
rcll
scas
mov
incl
dec
std
or
lock
imul
inc
mov
mov
add
sub
sub
iret
ret
test
pop
scas
xor
mov
cli
or
incl
mov
jl
cltd
sbb
cmc
jge
inc
mov
lods
repnz
jne
adc
pop
cmpsl
in
mov
dec
outsl
xchg
mov
jmp
mov
cmp
xchg
pop
cmp
ret
daa
pop
ljmp
aad
stos
repnz
cld
and
push
cmp
sti
decl
cli
outsl
hlt
into
push
movsl
leave
xor
jmp
push
mov
adc
pop
pop
in
push
cmpl
into
jp
dec
pop
repnz
test
jae
jmp
pop
ret
jg
cs
push
mov
movsl
movsb
or
imul
ljmp
pusha
mov
lret
div
jno
mov
and
arpl
sbbb
clc
call
mov
mov
pop
lods
iret
or
jl
xchg
lcall
mov
inc
pop
pop
fists
mov
inc
nop
out
mov
adc
incl
out
jmp
orl
incl
xchg
xor
jle
mov
popf
push
xor
sub
push
nop
adc
mov
jnp
faddp
iret
daa
lds
sti
pop
fdivr
mov
call
or
and
repnz
out
jl
out
sarb
popa
fldcw
jne
loop
iret
dec
jl
stos
jg
push
jmp
dec
subps
adc
test
sahf
xor
and
xchg
sbb
in
std
push
fstp
insl
loop
fists
dec
aaa
lcall
xchg
cmpsl
ljmp
adc
lods
inc
cli
xchg
mov
mov
fdivr
incl
aas
cmpsl
jle
mov
ss
push
or
cs
cmp
stos
lods
add
xchg
xor
ret
out
int3
jl
out
sbb
adc
rcr
clc
inc
add
push
inc
push
or
mov
sub
mov
aam
clc
dec
aas
lock
jb
mov
push
insb
sbb
aaa
xchg
loopne
add
adc
call
jmp
push
sub
mov
and
inc
test
push
sbb
test
pop
mov
fwait
lock
inc
sub
or
imul
pop
vmaxpd
cmc
lcall
call
or
sbb
les
bound
dec
mov
das
movsb
mov
add
test
mov
adc
push
mov
mov
loop
int
mov
inc
lods
aas
dec
lea
lods
mov
fs
push
lahf
pop
ljmp
adc
push
sub
mov
loope
and
lds
cli
mov
sbb
ljmp
shl
pop
sbb
std
xchg
mov
add
adc
decl
jo
pop
sbb
fwait
mov
cli
sbb
lds
dec
pop
sub
fistl
fdivr
cmpsb
xor
les
sub
insb
addr16
repz
mov
lahf
shl
cmp
ds
push
mov
clc
int3
jmp
sub
adc
jmp
pop
push
les
cld
decl
cld
std
sub
pop
push
out
mov
xchg
mov
clc
incl
inc
pop
push
xor
mov
push
movsb
lcall
call
imul
clc
jp
mov
jo
fs
aam
sbbl
push
pop
clc
and
pop
cmp
jecxz
ljmp
cltd
outsb
xor
leave
inc
stc
fildl
std
jb
mov
call
jbe
mov
stc
stos
data16
div
pushf
ret
repnz
dec
mov
stos
pushl
aam
or
in
dec
movsl
negl
mov
lret
imul
xor
push
aam
adc
movsl
ds
hlt
mov
dec
mov
mov
nop
jo
outsl
stos
fbld
stos
sbb
hlt
mov
jns
sub
pop
or
insb
call
mov
cmc
push
xchg
dec
jecxz
lea
jno
dec
xchg
lea
mov
test
jmp
in
cmc
test
icebp
stos
xor
sti
xor
icebp
xchg
inc
icebp
fucomp
fstl
pop
pop
dec
jg
adc
ljmp
xchg
mov
sub
jecxz
and
int3
movsl
repz
subb
sbb
decl
cmc
pop
jp
xor
shl
mov
loope
insl
jnp
cli
cmp
jmp
mov
xor
jns
mov
lock
jg
jg
aaa
loop
shr
ljmp
cmc
pop
roll
xor
jg
push
repnz
inc
je
adc
push
fiadds
mov
and
loopne
aaa
sub
rol
test
push
call
inc
adc
sbb
hlt
es
outsl
and
test
call
ret
xlat
and
lds
in
fbld
scas
sub
xchg
outsl
icebp
decl
test
es
mov
int
push
into
xor
xor
cli
lcall
sahf
test
jnp
jns
xchg
insl
mov
xrelease
into
mov
hlt
mov
call
shrb
loope
aas
cld
xchg
mov
sahf
cmp
loopne
xor
xchg
rol
in
and
ja
adc
iret
or
mov
test
sarb
es
inc
xor
sub
push
enter
jge
xchg
dec
pop
lahf
push
dec
fnstenv
dec
ds
lea
xchg
dec
or
mov
stos
push
mov
push
push
pop
cmc
jmp
insb
cmp
test
mov
icebp
imul
cli
jbe
jge
push
mov
and
mov
adc
movb
add
rcrb
dec
push
jge
sbb
scas
adc
sahf
push
mov
mov
mov
mov
dec
hlt
test
xor
cli
movsbl
outsl
cmc
mov
inc
cs
jmp
sbb
mov
mov
jmp
mov
jp
cmc
lcall
bound
outsl
rorl
rcr
cmp
jne
jbe
jb
loopne
inc
in
pop
roll
dec
jl
dec
mov
jg
jae
movsb
pop
outsl
inc
daa
push
aas
add
or
imul
adc
insl
push
jmp
sti
in
mov
xchg
es
cmp
ja
pusha
aad
pop
push
pop
ljmp
mov
mov
add
lret
push
mov
pushl
pop
rcll
decl
xorl
jmp
int3
fsubs
iret
cmovp
incl
inc
push
add
ja
stos
dec
inc
jnp
repz
popf
pop
jne
int3
sbb
sarl
push
adc
mov
mov
lods
xor
test
mov
in
mov
fsubr
repnz
add
clc
lcall
pop
sub
xor
out
jns
mov
push
cltd
out
stos
inc
ror
call
imul
inc
daa
or
push
iret
rcrl
out
cwtl
es
shl
lods
call
aam
add
dec
in
add
and
movsb
mov
push
push
adc
fnsave
pushl
xchg
scas
cmp
gs
data16
add
std
cli
imul
outsb
cld
data16
mov
daa
js
jnp
iret
popa
mov
ljmp
nop
sbb
adc
dec
ss
cmp
call
lahf
outsl
sub
and
inc
inc
mov
out
cmp
jg
pop
imul
inc
outsl
lcall
mov
frstor
sbb
imul
jmp
out
es
rorb
xchg
punpcklbw
shlb
decl
int
cld
lock
mov
dec
or
inc
loope
fbstp
jg
push
out
jnp
jecxz
out
inc
adc
inc
push
mov
mov
push
call
add
pusha
sub
out
fadd
lret
pop
fcmovnbe
sbb
ja
mov
test
cli
js
push
fdivs
jmp
mov
pop
xchg
insl
les
mov
dec
dec
lret
or
mov
fs
outsb
pop
shl
dec
adc
lods
pop
loopne
lds
or
test
ud1
incl
out
out
xchg
addl
inc
xor
mov
je
dec
jnp
loop
xor
lret
loop
bound
fadd
sub
movsb
dec
stos
or
or
call
test
jne
mov
rcl
popa
test
lds
in
add
lds
mov
in
xchg
or
push
mov
pop
inc
clc
loop
mov
cs
sub
mov
ljmp
cmc
sbb
xlat
mov
rorb
jae
lds
and
ds
dec
js
loope
mov
push
and
mov
xor
cltd
scas
adc
mov
xchg
mov
popa
gs
jnp
xchg
test
subl
push
call
jmp
out
pusha
mov
adc
inc
enter
das
or
xlat
or
jmp
into
movsb
jns
pop
xchg
push
xchg
outsl
loopne
repz
jle
jecxz
add
mov
dec
push
inc
xchg
push
movsl
enter
jg
test
adc
in
adc
stos
xor
andps
xor
ljmp
adc
stos
inc
scas
adc
into
pushf
sub
push
and
outsl
lea
push
mov
jg
pop
nopl
dec
adc
sub
cmpsl
scas
and
mov
inc
ja
pop
dec
xor
fs
pushl
cmp
sti
test
cmpsl
int3
sub
xchg
mov
mov
mov
mov
insb
adc
aas
sbb
les
test
jge
mov
call
inc
sbb
push
jecxz
add
inc
push
pop
pop
movsl
mov
dec
aas
lds
shlb
lcall
cmp
aas
xchg
lea
test
arpl
push
popa
movsb
pusha
int3
test
ljmp
pop
add
dec
lret
add
cmp
cmp
pop
pop
xor
sub
call
inc
mov
and
inc
push
jno
int3
pop
cltd
jg
sbb
mov
and
or
inc
cmp
cwtl
aam
inc
mov
cli
scas
or
int
dec
pop
loope
dec
mov
leave
out
push
jge
ficoml
outsl
std
outsl
mov
int
out
pop
lcall
sar
xchg
push
insl
mov
pushf
fstpt
int3
dec
cli
pop
pushl
mov
pop
aaa
lea
dec
mov
cli
inc
ljmp
std
jmp
dec
sahf
cmpsb
mov
aad
decb
movsb
pop
das
scas
ljmp
pushl
inc
test
push
push
clc
xor
out
mov
jle
cs
and
push
inc
in
pop
sbb
incl
int
es
push
incl
lcall
push
push
mov
and
adc
lcall
imul
fadds
sub
fisttps
shrb
mov
stc
inc
decl
cwtl
jno
fs
je
dec
jo
pop
xchg
jl
int3
mov
xor
sti
out
js
popa
cmp
xchg
test
call
ljmp
clc
mov
mov
daa
sub
sar
call
dec
lds
sbb
and
or
adc
fiaddl
les
rcr
lods
cs
jb
lret
push
lock
dec
mov
clc
xlat
and
mov
mov
pop
iret
incl
push
das
mov
stc
lods
aad
fwait
psllw
or
or
incl
incl
inc
mov
jge
mov
push
scas
testl
scas
dec
lea
push
insb
lea
sar
mov
dec
adc
pop
inc
jbe
das
decl
and
lret
gs
js
xor
push
rdpmc
xor
mov
es
add
xchg
jmp
ja
popf
fsubrs
negl
popf
fldenv
mov
loopne
hlt
outsb
mov
les
sbb
mov
mov
sarl
sbb
pop
add
dec
jge
clc
sbb
hlt
out
push
mov
ficomps
push
jbe
fisubs
pop
arpl
call
dec
adc
pop
pop
mov
dec
mov
adc
mov
ljmp
lret
pop
je
cmpb
out
dec
lret
xor
das
lock
mov
dec
stc
out
dec
jne
cmpsb
test
loop
decl
push
dec
push
lock
outsl
ds
rorl
mov
mov
movsl
lret
push
mov
aas
jb
push
sub
js
dec
jbe
push
in
testb
in
sub
adc
push
xor
or
sub
jmp
xor
mov
stc
cltd
or
arpl
push
jp
adc
cli
inc
jg
repnz
mov
inc
xchg
rol
push
add
mov
push
fldcw
std
das
lock
push
xchg
xchg
mov
into
mov
icebp
fucomip
mov
inc
in
dec
dec
call
in
movsl
fisttps
mov
cmc
push
stos
data16
xor
and
movsl
xlat
mov
jl
incl
cmp
add
mov
stos
lock
call
fcompl
or
stos
int
xchg
cmpsl
xor
jg
outsb
addr16
adc
jbe
leave
bound
sub
pushl
mov
xor
pop
adc
cmp
and
jo
scas
xor
mov
es
mov
cmp
adc
cmovl
incl
insl
popf
mov
int
call
cmp
mov
clc
sbb
mov
incl
pushl
jne
adc
dec
test
into
dec
mov
dec
aad
mov
test
and
inc
jl
mov
fistpll
jp
aad
mov
sub
ja
icebp
inc
push
fdivrs
out
mov
jge
and
enter
dec
jo
call
jp
xchg
and
push
pop
rorl
pusha
xchg
jge
pushf
lods
jge
xchg
loope
pop
cli
clc
sub
xor
mov
push
pop
mov
xchg
aam
sbb
jg
in
in
pusha
pop
inc
mov
ss
std
aaa
clc
jmp
mov
adcl
adc
repz
sub
sbb
add
into
aam
and
idivb
pop
push
cmp
ljmp
cmp
pop
inc
mov
mov
push
hlt
stos
add
int
ljmp
sahf
or
movsb
fwait
adc
stc
dec
and
dec
mov
xchg
jecxz
lock
xchg
inc
push
gs
inc
call
jg
pop
cmp
insl
in
fsubr
dec
mov
mov
pop
aaa
cli
decl
les
mov
stos
sub
push
popa
cld
xchg
pop
mov
inc
push
adc
lods
outsb
pop
pop
repz
popa
or
mov
push
inc
ljmp
incl
mov
jge
push
sub
ljmp
inc
daa
mov
pushl
cmc
mov
and
dec
mov
inc
push
sbb
push
fwait
jb
aaa
call
lret
loope
int3
dec
and
psllq
cmp
push
add
add
jg
call
xchg
bound
lds
xchg
adc
testb
inc
dec
popf
sub
push
cld
sbb
xor
aas
dec
insb
cmpsb
lds
jmp
out
out
pop
and
das
pop
sub
jo
ret
jmp
loope
jmp
lcall
dec
testb
mov
ficomps
mov
out
ret
jo
fildl
ret
sbb
shr
cltd
pushf
or
ljmp
mov
repnz
jecxz
aad
or
xchg
pop
ret
je
jmp
std
mov
cld
lahf
mov
xor
jmp
lret
xor
sub
and
jge
ss
xor
aaa
jecxz
xlat
push
or
push
incl
adc
jecxz
dec
test
daa
aad
sub
repz
and
icebp
sysexit
push
ljmp
cmc
loop
or
mov
gs
insb
faddl
mov
jbe
iret
adc
loope
jmp
loope
sbb
push
pop
sbb
or
xchg
movb
jle
push
fs
das
adc
push
push
sbb
loopne
push
cmp
mov
dec
add
decl
fidivl
out
das
sub
cwtl
int
outsl
add
ljmp
dec
sub
inc
es
xor
aad
clc
js
test
mov
lret
pop
stos
xor
repnz
lock
aad
jns
movsl
xor
sub
in
and
adc
mov
test
mov
ret
cmp
stc
mov
pusha
sahf
loopne
iret
jle
andb
xor
sub
cmp
cmp
out
xor
cli
call
sub
inc
and
in
sar
xor
jnp
sub
gs
cmp
xor
fcmovnu
loop
mov
adc
xchg
ja
test
inc
xchg
clc
call
lds
icebp
scas
fldcw
leave
int3
es
call
ret
rcll
cmp
xchg
icebp
int3
push
mov
addr16
inc
push
mov
sbb
incl
fistpl
loopne
lret
jne
incl
dec
mov
dec
nop
or
lcall
les
sbb
fistps
mov
sahf
mov
mov
outsb
ds
mov
fdivrl
xchg
fnsave
xchg
fs
incl
cmp
push
insb
push
outsl
mov
scas
xor
sub
aam
lcall
mov
outsl
pop
cmpsb
sub
xor
lock
outsl
std
out
and
pop
cmp
jb
icebp
adc
xor
pop
outsl
pop
mov
mov
leave
dec
loopne
sub
adc
mov
jmp
fnstsw
mov
outsl
sarb
mov
pop
lahf
jbe
mov
pop
mov
outsl
lock
aaa
inc
sub
mov
ljmp
test
xor
mov
iret
sub
xor
pop
and
inc
ror
pop
mov
jnp
jl
cmp
jl
scas
aas
popf
es
inc
fnsave
cmc
sub
sub
xchg
aad
mov
mov
scas
arpl
sbb
push
cmp
mov
mov
add
lods
mov
loop
decl
std
push
xlat
cmp
gs
cltd
leave
test
inc
mov
test
inc
xchg
imul
push
out
lods
push
or
stos
adc
pop
clc
jns
aas
xchg
jp
push
xor
mov
fsubrp
dec
das
das
mov
cmp
pushl
cli
lcall
iret
xlat
fisttps
mov
lods
sbb
xor
push
lahf
lods
pop
jbe
insl
adc
jae
fmul
cmp
mov
cmp
stos
xchg
sti
call
aas
mov
xchg
rol
popa
mov
inc
hlt
movsl
xrelease
jg
pushl
mov
add
and
cmp
inc
es
pusha
das
jnp
sbbb
or
ljmp
push
sub
inc
sbb
cmpsb
dec
cltd
or
call
pop
sbb
out
sbbl
decl
lods
cwtl
cs
xchg
jmp
je
dec
sbb
insb
into
incl
pop
mov
dec
pusha
jecxz
or
dec
shl
movsl
dec
fucomp
jmp
cmc
aaa
xchg
mov
popf
xchg
ljmp
adc
or
jmp
ja
adcl
mov
cmp
inc
notb
nop
incl
shrl
cmp
lods
fwait
mov
lret
mov
out
fadds
popa
fbld
ret
fnstsw
int3
fbld
add
sbb
jo
ds
and
clc
decl
cmp
jns
adc
mov
adc
pop
xchg
out
hlt
jmp
ljmp
bound
loope
imul
or
mov
push
jno
in
cmpsb
jmp
pop
loopne
fsub
pop
scas
sbb
cltd
or
jp
dec
fstpt
subb
xlat
cmp
or
xchg
mov
mov
inc
repz
andl
jne
mov
icebp
inc
ljmp
pop
dec
dec
fcomp
jb
and
inc
cmp
mov
ljmp
pusha
push
adc
mov
mov
std
pop
out
xchg
pushl
push
in
ret
xlat
jbe
dec
fldt
sbb
mov
ret
cld
lea
cltd
add
sbb
add
ljmp
jmp
cmp
pop
and
jne
mov
inc
ja
sbb
sbbb
adcb
mov
std
test
sub
cmp
jg
cmp
inc
repz
sbb
cmp
jg
pop
dec
mov
xor
call
mov
xchg
sbb
pop
jae,pn
movb
xchg
push
cmp
test
out
in
or
xor
cmp
insb
pop
push
inc
dec
push
push
sub
sti
cld
mov
std
ljmp
in
shrl
add
fcompl
sbb
xchg
pop
mov
js
xchg
and
in
std
fidivrl
xchg
cmp
lahf
inc
pop
fstpt
adc
je
cli
subb
call
and
cmp
xor
jecxz
jp
mov
mov
mov
jns
sbb
add
and
adc
cwtl
mov
mov
cmc
lods
xchg
cmp
lret
insl
clc
int
ret
sbb
mov
pop
fnstsw
test
testb
mov
ja
inc
mov
and
and
ret
xchg
mov
push
adc
scas
xchg
cmp
jmp
cmp
or
jge
loope
pop
data16
popa
cmpb
or
mov
mov
sub
jle
dec
outsl
std
fdivl
adc
mov
mov
lea
dec
das
xchg
insl
int3
jg
pushl
in
insl
dec
or
push
inc
sub
adc
or
pop
adc
jnp
cmp
sub
push
in
dec
sar
and
fs
pop
dec
sub
cmp
adc
mov
das
mov
icebp
pop
sti
jmp
inc
inc
dec
mov
mov
lret
jnp
dec
mov
jmp
shll
inc
mov
pop
outsl
mov
mov
std
lcall
clc
push
pop
hlt
cmp
mov
cld
int3
popa
test
push
movsl
outsl
icebp
in
fisttps
push
cmp
adc
inc
xor
xchg
cmc
pop
jg
lcall
repz
mov
fwait
push
ficoms
sub
cli
jb
arpl
test
adc
push
push
mov
decb
fistpll
movsb
lret
call
push
adc
mov
test
pop
inc
rclb
jns
and
notb
aaa
sbb
or
test
mov
jo
xchg
mov
incl
or
bound
mov
popf
and
adc
xchg
jle
dec
in
pop
push
xchg
insl
mov
mov
inc
outsl
jnp
ljmp
cs
adc
imul
call
jo
ficoms
and
cmp
jle
lods
jne
fdivrl
or
jmp
into
cmp
lcall
in
jp
xor
push
mov
mov
pushl
jle
out
stos
add
out
cltd
and
cmpsl
jnp
std
sbb
lcall
or
lcall
jl
adc
test
aad
lret
fisubl
cmc
pop
sub
loop
incl
mov
mov
mov
punpckhdq
sbb
jnp
push
inc
mov
xchg
incl
ffree
fidivrl
mov
nop
pop
mov
imul
imul
shll
mov
pop
sbb
scas
mov
cli
out
jle
mov
mov
es
pop
mov
push
pop
fnstcw
cmpsb
xor
fs
or
outsl
lock
iret
adc
adc
iret
mov
iret
sbb
arpl
ljmp
adcl
jl
cmc
lcall
and
je
ja
pop
repz
push
repz
sbb
test
or
pop
mov
jl
xor
mov
cmp
mov
lahf
xor
inc
jns
lock
or
mov
sbb
popf
outsb
iret
mov
iret
mov
mov
gs
and
lret
fcoml
pop
mov
movsl
dec
popa
sbb
pop
fidivl
cli
scas
mov
fildll
icebp
or
ja
stos
mov
decl
inc
mov
shlb
inc
mov
jnp
dec
mov
aad
in
jl
out
incl
dec
pop
js
movsb
inc
pop
xchg
shll
push
mov
pop
jecxz
ljmp
push
dec
cmpsb
add
pusha
mov
loope
nop
pop
arpl
pop
sti
arpl
ljmp
fstpt
mov
ljmp
aam
out
xchg
cmp
jbe
xchg
rorb
incl
push
dec
jg
aas
lcall
fstps
dec
xchg
and
pushl
cmp
adc
pushf
jbe
call
sub
push
faddl
jno
pop
inc
xchg
bound
movsb
and
jmp
movsl
notl
cmpsl
sub
adc
dec
pop
incl
cmc
testl
cmp
imul
pop
lcall
dec
aas
loop
push
imul
xor
mov
cmp
out
and
popf
xchg
pop
mov
iret
jno
test
ljmp
mov
mov
pop
cmpsl
pop
jnp
lcall
call
cmpsl
movsl
add
dec
mov
pushf
inc
xor
inc
test
ljmp
lods
int3
adc
mov
dec
dec
mov
push
xacquire
sub
pushl
scas
loope
dec
lods
popf
stc
pushf
aam
scas
jno
aam
sbb
mov
mov
stos
pusha
xor
xchg
cli
pushl
cmpb
inc
sub
movsl
ret
mov
popf
insb
ret
mov
or
cmp
lods
jmp
pushf
jecxz
mov
scas
mov
sub
sbb
xchg
movsb
in
movsl
fidivs
sbb
call
jmp
imul
mov
lds
xor
jmp
add
push
push
lcall
jmp
addr16
or
les
rorl
insb
decl
fdivrp
lret
scas
inc
std
inc
pushf
fildll
add
shlb
ja
decl
popf
cmpsb
dec
into
pop
imul
pop
mov
xlat
sbb
push
fstps
push
jecxz
lret
loopne
movsl
xchg
iret
lahf
int
pop
cmp
xor
push
dec
inc
sub
push
popa
repnz
sarl
cmp
sub
jg
inc
xchg
and
dec
jnp
pop
jmp
pop
hlt
sbb
jg
jg
adc
fs
xchg
arpl
movsl
xor
push
dec
pop
adc
pop
and
mov
std
sahf
fistpl
stc
sbb
cmp
mov
jp
pop
dec
mov
bound
popf
jmp
xorb
cmpsb
fwait
adc
adc
faddl
jg
or
scas
sarl
mov
cmpsb
mov
repnz
dec
lahf
push
push
aas
lock
jmp
repnz
test
xor
int
leave
int
cmp
mov
fistps
loop
jg
mov
outsl
jns
push
or
imul
xchg
shlb
cmp
adc
xor
sti
insb
jp
or
push
fiadds
nop
pop
hlt
pushl
std
fsubp
pop
cmp
popa
cwtl
adc
out
je
repz
push
jle
sub
imul
das
xlat
mov
jp
je
aad
mov
inc
rorl
fwait
xor
cmp
hlt
cmpsb
nop
call
mov
mov
add
aaa
mov
dec
mull
add
sbb
fldenv
push
xchg
jg
lahf
divb
in
cwtl
or
add
je
push
bound
call
sbb
add
mov
sahf
imul
add
adc
int
sub
jl
mov
push
inc
and
sbb
pcmpgtw
adc
sub
cmp
fsubs
push
pop
add
incl
push
mov
add
test
js
fwait
clc
ret
orl
in
in
mov
push
dec
cmp
fstps
in
cmpsb
jecxz
ljmp
jnp
fdivl
insl
mov
xchg
js
pop
cli
ds
jle
lea
cld
or
sar
dec
pushl
std
ljmp
push
loope
test
xchg
mov
cmpsb
aas
daa
mov
sbb
mov
xchg
dec
dec
repz
mov
std
inc
rorb
ds
mov
push
xor
mov
int
in
xchg
xchg
inc
in
jl
fistpl
insb
and
push
jp,pt
ljmp
xchg
and
aad
fdivrl
jbe
sbb
jecxz
cltd
test
jg
fimuls
mov
cmp
std
cld
filds
dec
fwait
sub
fcmove
enter
push
and
ss
insl
rcr
add
sub
scas
xor
adc
insb
data16
in
cmp
jnp
push
jecxz
lds
xchg
mov
andb
cmp
orb
pop
das
std
mov
fidivl
repz
jp
mov
fistl
popf
mov
inc
or
push
xor
dec
cmp
loope
xchg
cmpsb
sub
pop
outsl
jge
aad
cmp
aaa
movsl
add
and
adc
push
xchg
sbb
lods
loope
fucomip
jmp
cltd
mov
xchg
mov
pop
cli
adc
cltd
mov
ljmp
xchg
push
andb
and
bswap
shll
daa
dec
decl
xchg
mov
cmc
loope
mov
push
or
adc
pushl
pop
das
cmc
iret
mov
nop
xchg
inc
sub
out
and
lea
cmp
pop
pop
cmp
mov
xor
shr
dec
shll
cs
pop
mov
pushf
out
xor
jmp
push
cmp
packssdw
test
pop
fistl
add
in
pushl
xchg
xor
mov
cmpsl
fimull
clc
pop
js
or
shlb
push
pop
outsb
mov
jne
sar
call
pushl
in
xorb
loopne
lret
mov
outsl
cmpl
mov
ds
sbb
and
aam
push
std
xchg
ljmp
icebp
incl
inc
mov
xor
incb
xor
xchg
adc
lcall
pushl
sub
ret
jne
push
xchg
gs
mov
jg
dec
pop
rol
out
push
incl
icebp
pop
daa
xchg
inc
icebp
add
sub
pop
shl
xchg
clc
decl
fistps
out
and
lss
out
stc
cmpsl
lcall
call
movsl
mov
stos
insb
and
test
and
pop
addb
stos
sub
adc
inc
xor
jg
jg
cmp
jl
pop
push
inc
lods
mov
sarl
xchg
test
call
cmp
stos
mov
fisubrs
outsl
sbb
jmp
sbb
imul
mov
ss
pop
stos
imul
jge
les
jmp
cmc
jb
clc
pushl
mov
test
xorb
push
std
push
xchg
call
ret
rorb
xchg
jae
pop
dec
cmp
pop
sti
inc
sub
jge
and
outsl
and
xor
scas
and
mov
fisttpl
out
mov
lods
clc
adcl
mov
cmp
loopne
sub
mov
fnstcw
pop
xlat
pop
adc
clc
aaa
cmpsl
int3
push
pop
pushl
rorb
mov
mov
das
sub
xchg
add
outsb
stos
addl
push
mov
sub
jl
aaa
or
fistpll
sub
xor
call
cmp
stos
jno
aad
or
incl
loope
dec
shr
mov
jmp
jecxz
lret
jmp
repnz
data16
pop
lcall
ljmp
mov
aaa
imul
sbb
lret
in
call
inc
xchg
xor
xor
and
or
in
lods
jns
mov
loopne
call
popa
insl
xlat
fiaddl
addr16
scas
lea
mov
divb
call
aas
test
ja
or
into
pop
loop
movsl
cmpsl
fnsave
ja
rorl
out
xor
inc
mov
je
inc
xor
in
pushl
ret
jbe
add
notb
mov
dec
push
lret
test
test
fbld
jnp
push
lcall
outsl
jmp
mov
mov
incl
cs
addr16
aas
movsb
push
and
sub
add
adc
push
mov
sbb
std
jo
push
jae
jge
addr16
pop
mov
push
push
or
mov
loop
dec
outsl
lods
incl
pop
add
nop
ljmp
test
ljmp
mov
test
cmp
ljmp
std
lock
mov
fildl
or
aam
rorl
sbb
jne
jg
cwtl
and
fucomp
mov
add
pop
jecxz
xor
movsb
xchg
mov
jp
rcrb
dec
adc
sbb
lds
repnz
hlt
mov
xchg
ss
xchg
es
pop
in
xchg
sbb
decl
ficomps
sub
lds
icebp
fidivs
loop
lods
inc
add
lret
jecxz
cmp
loop
xor
xchg
lods
jg
xor
fcomps
pop
je
lret
jo
scas
incl
mov
or
pushf
imul
jl
and
add
aam
leave
lcall
call
das
int3
movsb
shlb
call
add
enter
push
fildl
int3
nopl
incl
insl
jmp
pop
mov
jne
inc
inc
push
cmc
push
push
cli
cmp
inc
jg
std
repz
fnstcw
js
mov
stos
dec
jg
dec
cmp
or
fbstp
xchg
fmull
or
jmp
js
inc
push
mov
sub
inc
mov
xchg
pushl
or
rolb
cld
mov
jnp
sbb
xlat
xchg
pop
iret
fsub
jecxz
pop
jnp
mov
jnp
loop
inc
push
jl
mov
stos
push
push
cld
push
or
ljmp
cld
jg
lods
repnz
call
lret
xor
lea
add
adc
decl
dec
bound
jg
test
sti
mov
ss
pop
incl
jecxz
mov
movsl
fildl
in
adc
push
or
int3
jl
rolb
mov
inc
add
xor
rorl
test
xor
arpl
mov
outsl
hlt
in
push
add
hlt
inc
push
or
negl
or
and
loope
lcall
pop
js
lods
cmp
jno
dec
or
push
gs
xchg
in
inc
add
call
xchg
inc
push
pop
sbb
das
clc
mov
sarb
out
sub
test
mov
fwait
repnz
inc
in
push
jmp
or
xchg
scas
shlb
loop
xchg
ja
push
movsl
pushf
mov
test
mov
testb
cmpsb
inc
xor
aam
mov
rcrl
lcall
mov
pusha
pop
add
xchg
testl
pop
clc
ljmp
cli
xor
push
daa
rorb
lods
pop
xor
xchg
pop
mov
cltd
clc
call
pop
repz
popa
lcall
mov
pop
lods
bound
push
push
stc
jg
fistps
jnp
adc
scas
push
sbb
mov
cmp
and
decl
scas
pop
inc
inc
fnstcw
outsl
daa
clc
mov
outsb
push
pop
xor
xor
push
rorl
add
mov
add
mov
xchg
rcl
test
in
std
das
push
out
mov
push
movsl
xorps
bound
jmp
call
push
cld
xchg
push
cvttps2pi
aaa
ret
ss
mov
dec
lcall
inc
testl
or
scas
or
dec
jmp
jmp
sbb
aaa
xchg
imul
mov
adc
mov
add
repz
push
and
sub
bound
pop
jnp
inc
cmpl
cld
jmp
fcompl
stos
adc
and
add
push
ss
test
std
rolb
xor
decl
dec
xchg
push
adc
push
aas
cmpsb
cld
arpl
push
lret
test
sub
cmp
push
das
mov
stos
mov
nop
in
iret
in
dec
psubsw
incl
dec
push
dec
fiaddl
lea
jno
in
in
nop
mov
popf
add
ljmp
aaa
jnp
pusha
adcl
cwtl
sti
xlat
xor
xchg
into
std
les
pop
call
ds
int3
or
outsb
arpl
clc
ljmp
ja
test
aad
xchg
xlat
or
adc
fcoms
mov
and
incl
or
xor
adc
jp
mov
mov
das
mov
jmp
popf
cltd
xchg
jmp
sbb
andb
jno
lock
lahf
stos
rcrb
and
decl
repz
lock
stos
ficompl
fiadds
in
call
xor
xchg
lcall
pop
clc
pop
test
test
cld
ljmp
sarb
mov
fs
add
js
mov
loopne
popa
or
add
or
ljmp
testb
sbb
out
lods
sub
dec
and
mov
fsts
out
mov
inc
orb
sbb
jge
pop
stos
mov
xchg
dec
decl
xor
imul
cmp
out
aaa
js
sub
lods
shl
adc
xchg
sarb
pop
clc
incl
sbb
jne
dec
sti
inc
insl
mov
xlat
bound
xchg
cmp
subl
stc
or
xchg
adc
je
add
inc
dec
lds
xchg
mov
pop
inc
dec
and
jmp
mov
dec
mov
push
cmp
lcall
mov
inc
dec
iret
out
in
push
push
cli
mov
imul
lcall
test
iret
adc
jno
pop
push
repnz
sub
outsl
push
call
inc
iret
cmc
je
mov
aaa
ljmp
icebp
rol
shlb
int
dec
rclb
pop
dec
bound
mov
loopne
clc
lret
ret
sbb
outsl
pop
cld
lcall
std
pop
mov
jle
add
clc
sbb
int
lcall
jne
clc
call
ljmp
dec
pop
imul
cmp
lret
xchg
xor
incl
xchg
sub
jnp
mov
mov
icebp
dec
arpl
sbb
lods
cld
pushl
clc
lods
ftst
xor
jb
ljmp
or
icebp
lcall
mov
cmpsb
iret
dec
cmp
loop
or
movsb
jmp
notb
fnsave
pushl
push
adc
daa
push
inc
out
inc
rcrb
dec
insb
popa
rcl
daa
sbb
dec
call
xorl
int
sbb
stos
pop
out
fcmovbe
flds
lock
jns,pt
jp
sbb
jno
or
mov
inc
test
sbb
loop
ret
shl
lcall
mov
sbb
or
outsb
jbe
inc
mov
push
jns
in
push
xor
cld
std
decl
mov
mov
add
out
sbb
push
or
cmp
lcall
lods
addr16
loopne
jl
xor
sbb
hlt
xchg
fldt
sub
in
jmp
subl
test
fmuls
imull
mov
adc
or
jge
loopne
mov
test
stos
sar
inc
xlat
pop
stc
je
stc
xor
decl
xchg
or
sti
sbb
pop
xchg
sbb
mov
or
pushl
imul
jl
leave
dec
fcoms
mov
or
outsb
scas
fistpll
lods
shl
mov
mov
cmp
je
jg
call
call
dec
sub
pushf
dec
lcall
mov
stos
mov
pop
jge
lods
decl
aas
in
inc
rolb
test
dec
sub
pop
mov
mov
clc
repz
sbb
dec
sarl
call
mov
jnp
notl
std
adc
push
call
clc
stos
adcl
ljmp
mov
movsb
inc
jne
push
loop
sbb
mov
mov
mov
xchg
call
and
jle
jb
int
xchg
pop
inc
repnz
cld
call
ror
push
adc
int
ficomps
sbb
lods
movsl
lcall
test
ds
ret
sbb
push
sti
cld
dec
sbb
test
mov
scas
sbb
push
ja
or
data16
lock
fistl
xchg
sbb
push
decl
lds
jmp
js
call
and
lock
push
dec
pushl
mov
push
testb
xchg
rolb
xchg
xor
ljmp
stos
cwtl
or
adc
bnd
stos
in
push
mov
std
cmp
and
mov
mov
cmp
jno
decl
stc
fdivl
adc
lods
fnstsw
divb
xor
call
pushl
sub
sbb
dec
mov
pop
pop
outsb
sub
test
push
ljmp
cwtl
dec
cmp
imul
scas
cmp
jne
les
js
daa
xchg
cmp
aas
xchg
pop
rol
dec
lcall
decl
mov
leave
cmpl
fmul
jb
cld
imul
pop
or
mov
push
xor
test
inc
cmp
scas
fsub
bswap
pushf
adc
jg
nop
shll
jmp
out
popf
sbb
cmp
jno
dec
les
ret
scas
or
jmp
cmc
inc
or
add
cmc
aam
add
mov
add
mov
pop
sub
sub
int3
jmp
or
and
ss
mov
cli
incl
xchg
ret
sub
cltd
xlat
xor
pop
or
lcall
mov
inc
cmp
mov
mov
js
aas
lret
call
lcall
sarl
pop
out
fistpll
jle
mov
testl
inc
and
fisubl
std
dec
and
jns
push
imul
out
and
popf
fistps
ret
mov
call
jl
jl
out
enter
arpl
mov
mov
xchg
jne
jns
hlt
lahf
add
in
mov
subb
add
xor
loope
test
dec
jnp
adc
or
insb
int
test
fldt
mov
aam
es
adcb
dec
sti
aas
xlat
jmp
mov
sub
cmp
mov
xor
xchg
mov
pop
daa
fmuls
push
pop
xor
mov
lock
pop
scas
mov
fucomip
scas
addb
push
lods
sub
ror
cmp
xchg
adc
jmp
sbb
movaps
jecxz
into
add
idivb
clc
call
xchg
jbe
hlt
popa
jge
movsl
sahf
fnstsw
sbb
ljmp
add
and
repz
and
push
bound
ficompl
or
movsl
int3
pop
sub
dec
dec
mov
or
test
jnp
scas
add
jmp
aam
je
sub
push
xchg
addr16
stos
adc
out
sbb
ljmp
daa
lcall
jg
cmp
insb
mov
sub
repnz
les
pushl
scas
cld
inc
adc
adc
dec
pop
jge
xchg
stos
movsl
call
cmp
mov
mov
in
ljmp
push
inc
lret
fidivrs
pop
sarb
or
idivb
push
adc
call
cmc
push
rorb
and
repnz
push
and
out
rcrl
jg
daa
mov
pop
push
push
xor
xor
cmovs
mov
jne
inc
incl
scas
adc
mov
int
out
push
cmp
insl
outsb
pushf
cmc
add
jle
cli
in
fidivrs
arpl
inc
lret
jbe
dec
mov
loope
and
mov
xchg
ds
ljmp
xor
imul
scas
fnstcw
test
es
mov
outsb
hlt
cmp
pop
mov
pushf
mov
xor
jg
fnstsw
dec
lods
int
fs
imul
outsb
mov
call
incl
inc
add
mov
pop
shlb
push
jmp
nop
cwtl
decl
xor
fmul
mov
and
mov
cmp
pop
cmp
ret
out
decl
mov
mov
push
jecxz
ds
in
add
data16
jecxz
pushl
mov
test
jbe
lcall
inc
cmp
cmp
xchg
inc
push
test
adc
adc
lcall
sub
and
lods
test
psllw
les
dec
ja
sub
gs
jmp
jg
stos
fistpl
in
out
and
out
stos
imul
decl
mov
add
mov
pop
test
cmp
repnz
aam
mov
jnp
adc
pop
dec
or
adc
movsb
sub
or
incl
jbe
lods
test
lret
xchg
mov
outsb
out
dec
mov
ljmp
sub
mov
fcoms
xchg
mov
lahf
dec
arpl
xchg
lret
mov
jmp
out
js
movsb
xor
nop
add
lea
je
es
idiv
ljmp
sti
scas
push
and
movsb
pushf
test
add
mov
clc
jecxz
stos
lcall
pop
or
dec
and
or
mov
call
loopne
lods
push
repz
insl
push
cmp
or
xchg
outsl
rcll
das
ljmp
js
orl
js
cmp
cmp
pop
cli
cmp
add
das
hlt
incl
sahf
add
lret
fsubr
stc
gs
int
sub
push
xchg
sbb
sub
call
mov
es
insl
adc
stos
fs
mov
mov
or
xchg
mov
cmp
aaa
cli
incl
adc
or
and
iret
cwtl
mov
push
mov
outsl
cld
outsl
shll
push
push
sub
sbb
jg
xchg
pop
sub
mov
mov
or
stos
mov
jae
decl
push
or
mov
sbb
pop
fists
jno
adc
dec
pop
sahf
bound
mov
in
xchg
mov
cmp
das
push
cmp
sub
mov
dec
decl
call
adc
out
push
pushf
push
xchg
pop
divb
jmp
clc
aas
in
jecxz
mov
push
movsl
pop
stc
mov
test
pop
insb
xor
xor
and
cltd
call
lcall
jge
ljmp
cs
sbb
cmp
sbbl
aaa
clc
jg
push
mov
js
iret
mov
stos
jns
pop
test
pushl
adc
mov
aas
out
and
test
and
xchg
lret
les
jmp
es
push
inc
cmp
loope
inc
cmpsb
std
sbb
or
insl
xor
cwtl
movsb
pop
jno
pop
push
push
cmc
xchg
mov
xor
jge
jg
iret
sbb
mov
rcrl
add
ret
push
pop
sub
push
das
lock
outsl
sub
jp
ss
sub
or
insl
and
rolb
idiv
lcall
sub
add
lcall
insl
lcall
push
inc
fmul
cmp
jg
ljmp
insl
push
sbb
cmp
fxch
int
dec
jbe
gs
xor
mov
cmp
std
mov
inc
aas
xchg
pop
daa
cli
sbb
inc
push
push
adc
das
hlt
mov
adc
negb
enter
imul
incl
inc
inc
inc
cmc
add
jnp
sbb
sub
and
cmp
insb
xchg
stos
aad
push
lret
pushl
push
inc
inc
test
or
outsb
sub
loope
or
push
adc
into
fmul
mov
fildl
jmp
lods
xchg
ret
add
int3
stos
jns
dec
push
dec
pushl
out
push
lods
mov
cmp
enter
cmp
jbe
and
cmc
push
stc
outsl
outsb
mov
fstps
add
out
fsubr
stos
cmpsl
cltd
loop
mov
xchg
gs
iret
xchg
bound
xchg
scas
jne
out
xchg
call
lcall
jo
jmp
cmp
jo
ljmp
mov
outsl
test
in
in
inc
xchg
addr16
or
pushl
inc
pop
loop
push
cmpsl
jge
mov
in
sti
push
out
push
ljmp
incl
pusha
mov
adc
jmp
add
gs
or
cli
mov
leave
sbb
dec
sub
adcl
rcrl
loop
call
xchg
xor
jmp
jecxz
or
mov
pop
mov
lcall
iret
jo
sub
push
jne
enter
fcompl
shrb
cmp
into
and
fucomip
adc
dec
xor
jne
cmp
jnp
cmp
aam
lret
xor
mov
dec
inc
imul
je
pop
cwtl
aas
shrb
ss
jp
mov
movsb
mov
or
in
push
sub
mov
mov
in
jnp
dec
dec
sub
call
and
jae
dec
ja
aad
adc
out
outsb
pop
bound
outsb
add
imul
mov
push
clc
insl
loopne
dec
pop
adc
lods
repz
test
aam
lcall
cld
js
cmp
loope
stos
popf
les
call
imul
mov
xlat
fnstcw
and
sub
inc
into
cltd
pop
mov
xchg
mov
inc
push
cmp
lods
imul
xor
adc
and
mov
and
jle
mov
lret
fidivrl
out
lahf
out
jnp
aaa
jns
pop
and
pop
xchg
in
daa
out
sarl
jmp
fisubrl
push
pop
adc
out
inc
adcb
xor
xchg
mov
daa
std
add
int3
cmp
dec
es
pop
pop
sbb
jecxz
call
fs
fmulp
jl
adc
loop
mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
jg
ficomps
or
pop
pop
pop
leave
or
and
ja
ja
mov
faddl
out
std
fwait
les
jae
fld
or
lds
fldt
pop
popa
enter
lret
lret
outsb
mov
int
into
push
outsb
mov
add
xor
xor
inc
mov
mov
cmp
pop
fdivs
fldcw
scas
fidivl
fisttpl
push
add
pop
loop
pop
xlat
jne
jecxz
add
inc
in
out
out
call
jmp
jmp
in
pop
in
xor
xlat
je
lock
pslld
repz
cmc
sbb
add
aaa
clc
stc
dec
add
std
fldt
pop
sti
js
cld
je
mov
push
call
test
adc
orb
lock
adc
pop
clc
scas
mov
or
add
rorb
outsb
or
je
jg
push
inc
add
sbb
push
mov
sbb
adc
mov
pop
push
pop
je
loopne,pn
fstpt
push
adc
or
pop
or
mov
movsb
dec
jbe
shr
pushf
data16
pop
adc
or
insl
sbb
push
addr16
fbstp
jmp
sti
jne
stos
or
add
loope
lcall
inc
lret
sbb
cmpl
in
testb
loope
jmp
cmp
push
push
push
inc
dec
pushf
je
adc
pop
ret
movsbl
push
mov
pop
jae
les
ret
jmp
push
pushl
sbb
push
push
xor
mov
test
je
mov
sbb
ljmp
lock
inc
mov
test
mov
jne
andb
ss
pop
clc
out
mov
inc
push
xor
movzbl
inc
cmp
jl
clc
pop
jg
mov
shlb
or
stc
stc
shll
add
sbb
je
sub
cmp
push
lods
jmp
add
pop
adcb
aas
mov
lock
or
clc
add
sub
or
inc
ret
stos
shlb
cmp
add
pop
cmp
in
inc
andl
mov
push
push
push
pop
and
add
and
gs
xorl
dec
pop
jne
or
call
call
inc
inc
sub
in
ds
sti
or
xchg
dec
inc
nop
lock
cmpsb
lahf
outsb
mov
add
mov
std
lods
jae
push
aad
cmpb
jbe
mov
cltd
mov
mov
lea
push
imul
cmp
cmp
jl
dec
clc
out
sub
jbe
inc
shl
imul
push
inc
cld
in
cmp
sbb
jmp
or
add
insb
sbb
sub
sti
push
aas
mov
xor
cmp
jbe
test
adc
ret
mov
push
ds
jg
cmp
jl
mov
push
or
shl
nop
mov
out
fistps
stos
insl
lea
push
jmp
popa
sti
fildl
adc
xchg
sub
sbb
fcomps
add
std
jbe
lret
fmull
frstor
inc
or
fidivs
fst
mov
pavgb
les
push
add
xor
xlat
faddl
insb
xor
shll
add
dec
bound
shll
bound
dec
shll
jb
inc
add
mov
sub
jmp
scas
fildl
shll
dec
ret
imul
lds
scas
scas
scas
sbb
push
enter
lods
fdivs
mov
test
mov
push
push
dec
ljmp
adc
push
repz
sti
cld
lea
cld
iret
sub
sub
ret
std
add
insl
push
in
inc
cmp
decl
jl
mov
xchg
subl
shr
dec
mov
fsubs
jmp
outsl
pop
sbb
rcrl
loope
push
fldl
add
jg
leave
sbb
jnp
jl
pusha
inc
jp
jae
xchg
ret
call
mov
inc
dec
jne
stos
push
push
push
inc
push
cmp
in
push
xlat
xor
daa
loop
shlb
adc
idivb
jne
xchg
push
js
push
pop
jle
cmp
or
and
cmp
jne
push
rclb
mov
mov
dec
scas
push
dec
cmp
and
je
adc
arpl
push
xchg
sbb
ficoms
or
jne
or
or
add
jb
add
xchg
push
sub
jmp
ret
in
push
inc
je
jmp
je
or
ret
sub
sti
xchg
cld
fldt
inc
xor
cmp
shl
lahf
inc
into
shl
fisttpll
cmp
sbb
lcall
fdiv
or
es
or
fsubs
scas
idiv
testb
je
dec
movb
jne
add
or
in
cmpb
xor
incb
in
jmp
cld
adc
mov
add
mov
shlb
and
cwtl
rol
sub
test
push
mov
and
adc
movsl
dec
ljmp
add
mov
cmpsb
mov
mov
fs
mov
outsb
gs
xor
dec
or
adc
xlat
aam
aam
mov
lds
pop
rorb
loope
add
inc
les
rcll
lods
lods
xlat
aad
jne
scas
adc
and
jne
mov
mov
mov
mov
mov
mov
mov
jne
mov
add
in
lods
mov
adc
dec
dec
xchg
push
aas
push
cld
dec
or
ret
repnz
es
sub
repnz
movsb
sub
in
lea
in
mov
jo
mov
inc
dec
repnz
mov
not
xchg
pop
xor
fmull
mov
mov
cmp
insb
neg
mov
inc
mov
pop
ret
mov
out
add
cmp
in
loope
jp
push
xchg
mov
push
push
loope
add
mov
dec
add
push
das
or
fistpl
push
cld
jmp
mov
fnsave
sbb
movw
jmp
jmp
pop
push
call
cmpl
icebp
outsl
xorl
push
cld
mov
ret
hlt
push
lcall
sbb
pop
pop
jnp
fcoms
mov
fwait
mov
adc
popf
pusha
xchg
insl
popa
leave
cmp
xor
lock
sbb
push
inc
and
inc
cmp
das
mov
aas
cmp
add
mov
xor
rol
jbe
adc
gs
shll
into
insl
test
mov
test
pop
jmp
fsubr
mov
pop
out
pxor
pop
lock
mov
jb
je
subl
gs
xchg
cltd
fcmovne
mov
aam
xorb
push
lods
pop
lods
pop
test
mov
cld
ret
mov
pop
std
adc
arpl
sub
adc
test
les
dec
push
loop
xor
push
mov
cli
insb
sar
or
inc
ret
orl
mov
insb
push
pop
adc
notb
ret
test
lods
adc
in
sub
fadds
mov
daa
mov
lods
roll
mov
dec
lea
push
popf
sbb
mulps
insl
rorl
andl
pop
mov
rclb
or
cmp
insl
xchg
or
adc
or
ljmp
outsl
pop
cld
jp
movsl
movsw
movsb
push
inc
aam
cmp
ljmp
daa
sbb
mov
or
testl
push
cmp
clc
xchg
push
loope
mov
and
pop
mov
fstl
cmp
push
rcll
push
adc
xchg
test
push
and
mov
cld
and
shll
lock
jge
dec
jecxz
cmp
jl
or
scas
jle
push
inc
xchg
jo
add
xor
in
push
js
jnp
pop
idiv
cmp
jle
add
jl
jge
std
in
jle
jp
add
pop
jl
pop
sub
adc
pop
pop
adc
imull
cs
rolb
xchg
cli
and
ds
cmp
jbe
xchg
cmp
xchg
repnz
lahf
stc
movsb
movsl
cwtl
sti
cmp
lahf
adc
cld
jnp
sbb
je
js
push
add
adc
dec
push
mov
in
push
jne
jge
push
test
stos
btr
ss
push
sub
test
data16
sbb
mov
sarb
mov
cwtl
in
cmpsb
or
out
call
add
loopne
arpl
push
out
push
or
nop
stc
popw
jbe
daa
inc
test
jne
int
xchg
adc
xor
dec
and
call
add
rclb
sbb
jge
fidivrs
cwtl
sti
ljmp
adc
std
pop
mov
and
push
popa
mov
mov
push
out
push
out
pop
pop
pop
testb
pop
or
or
xor
jb
lock
inc
repnz
repz
cmc
adc
mov
imull
lret
xor
inc
gs
gs
xor
xor
imul
or
jo
dec
xlat
test
fsubs
fisttpl
inc
rcr
fucom
inc
outsl
jo
dec
shll
inc
imul
mov
mov
mov
sub
shrb
cmp
inc
fisttpll
dec
into
sarb
inc
fildl
push
pop
shrb
shll
inc
aam
imul
adc
or
or
or
or
aas
push
testl
pop
aad
shll
and
jmp
mov
push
call
cmp
mov
add
jne
push
jge
or
xlat
pusha
loopne
dec
arpl
sbb
xor
adc
push
in
clc
mov
fcompl
adc
incl
push
icebp
ss
ss
inc
inc
add
mov
mov
adc
push
adc
rcr
fildll
inc
dec
pop
movsb
cwtl
xor
and
xchg
xchg
dec
test
add
inc
mov
xchg
cmp
loope
aaa
jmp
fnsave
sahf
adc
xchg
cwtl
inc
ds
insb
shr
pop
and
xchg
xor
sbb
ljmp
mov
jmp
popa
lock
insl
adc
pop
adc
jecxz
push
add
popf
jl
sarl
xchg
jge
jae
negb
or
adc
adc
pop
mov
sub
or
sub
cld
andb
add
loope
inc
sub
outsb
sub
jne
or
sbb
dec
inc
pop
cmp
jae
fldcw
test
push
xchg
xchg
leave
mov
pusha
pop
adc
add
outsb
call
and
push
setno
and
xchg
out
sbb
fldl
movsbl
loop
mov
jmp
mov
or
das
jecxz
sbb
inc
lahf
and
movsb
mov
inc
pushf
mov
mov
adc
mov
lea
test
mov
fstp
popf
push
jmp
nop
sub
jmp
adc
into
rcrb
xor
fdiv
mov
dec
push
sub
mov
test
adc
outsb
neg
in
or
cwtl
lds
dec
push
mov
ljmp
shlb
push
int
imul
mov
push
fisttps
lcall
out
pop
mov
lea
hlt
mov
fwait
mov
sar
jns
cmp
inc
test
and
leave
incb
add
inc
xchg
rorl
push
stos
pop
push
lcall
pop
sbb
xchg
popf
out
test
push
or
shr
out
mov
insb
andb
fcoml
mov
mov
jecxz
push
popa
mov
or
and
mov
pop
mov
hlt
pop
adc
lahf
mov
mov
mov
mov
push
push
testb
into
adc
push
sub
mov
jge
test
dec
outsl
in
cmpsb
pop
pushf
sub
jne
je
cmp
popf
push
test
push
pop
in
nop
cmp
add
lds
jb,pn
push
inc
add
mov
mov
cs
push
pop
mov
fldt
push
add
or
ret
inc
sarl
ja
jge
out
push
adcb
dec
hlt
xor
jg
clc
test
add
je
leave
sbbb
pop
sbb
and
xor
pop
sbb
and
fadd
push
cwtl
fdivr
jb
add
ds
adc
leave
push
imul
sub
adc
enter
and
xor
insb
popa
enter
sub
or
aaa
adc
into
sbb
adc
aam
out
call
mov
pop
or
lods
fsubs
es
roll
test
or
rcl
mov
mulb
jo
imul
dec
xor
cs
inc
je
mov
pop
shll
loop
push
jmp
and
jmp
in
xor
dec
jo
fsubs
fwait
lea
notl
loopne
push
ror
or
rol
insb
pop
ljmp
rcr
jp
jne
inc
loope
xor
fimull
arpl
les
and
int
add
jmp
cmp
sbb
std
mov
or
inc
mov
push
test
and
push
sub
lods
mov
test
mov
mov
push
inc
mov
pusha
pop
sti
imul
jne
cld
push
pusha
fmull
or
dec
sbb
test
mov
push
sbb
jne
add
repnz
imul
cmc
mov
call
cli
mov
shll
jecxz
in
in
enter
jecxz
jmp
ljmp
dec
enter
adc
mov
add
mov
cmp
push
pop
ret
adc
insb
cmp
arpl
faddl
sbb
shr
add
dec
call
pushf
pop
or
shr
lahf
nop
pushf
mov
add
mov
and
inc
or
sub
push
mov
fists
ja
call
icebp
push
inc
pop
ret
mov
jmp
int3
or
inc
pushf
xor
mov
mov
enter
mov
shlb
out
add
mov
sub
xchg
mov
push
mov
arpl
push
push
in
lods
icebp
xchg
neg
sbb
add
add
jle
mov
std
or
sub
mov
testb
enter
mov
mov
mov
push
add
push
sbb
dec
stos
adc
js
in
push
inc
mov
sar
pop
orl
incl
jl
adc
outsb
inc
ja
or
cld
xor
sbb
mov
xchg
cmp
popa
mov
hlt
jecxz
fldt
inc
orb
jbe
push
aas
inc
xchg
movsl
xchg
cmp
fs
mov
mov
add
or
or
xor
push
and
call
mov
cmpb
jne
inc
or
add
or
insl
jnp
and
aam
dec
movsb
jl
ljmp
je
movzwl
mov
sub
cmc
jnp
sti
insl
lahf
rclw
sbb
dec
shlb
in
in
inc
or
test
out
ret
and
mov
fsubrl
js
arpl
add
push
xchg
bound
xor
iret
and
or
add
bound
add
xor
js
xchg
movsb
mov
xor
out
push
xor
imul
xlat
mov
pop
stos
add
xor
ljmp
sub
inc
pusha
mov
ds
ss
xlat
aaa
sub
adc
lock
fwait
out
and
add
push
sbb
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
sbb
cmpsb
jmp
cmpsb
es
imul
fidivrl
pop
xlat
jge
mov
cwtl
add
icebp
lahf
outsb
jecxz
out
adc
rorl
and
mov
imul
dec
les
inc
pop
scas
in
xchg
jo
xor
mov
jne
inc
or
mov
imul
test
push
push
dec
inc
dec
xor
cs
insb
inc
incb
inc
inc
push
inc
push
dec
or
adc
sahf
insb
pop
sub
mov
aaa
pop
or
mov
incl
fists
test
xor
scas
xor
sbb
adc
mov
incl
pop
vpcomw
mov
push
xor
push
fldlg2
pop
push
push
inc
push
push
xor
add
sub
out
sahf
ret
pop
pop
add
and
and
or
gs
gs
xchg
add
xor
xor
lcall
jmp
jnp
pushf
call
mov
lea
sbb
or
adc
out
adc
incl
jnp
add
add
push
push
push
push
push
mov
call
mov
aas
sub
movsb
pop
popf
popa
jmp
pop
pop
adc
into
ljmp
mov
xor
sbb
out
mov
jae
inc
mov
mov
mov
in
jp
xlat
dec
loope
fs
stos
and
cs
push
in
inc
outsl
insl
arpl
lahf
std
scas
cmp
data16
jae
mov
cmpsl
mov
pop
fdivp
dec
les
mov
int3
out
mov
aaa
and
or
push
pop
or
mov
mov
inc
enter
dec
dec
inc
inc
inc
dec
inc
pop
inc
daa
fistpll
lods
lret
rol
mov
mov
mov
fxch
push
idivb
jno
xchg
pushl
sbb
popa
arpl
and
fdivrs
out
fiaddl
dec
jnp
imulb
mov
or
mulb
ss
aad
enter
insl
outsl
outsl
call
mov
ret
sub
jb
mov
roll
fs
jne
fs
insl
jae
je
insb
fs
outsb
aaa
mov
sbb
pop
jae
jae
gs
jl
pop
mov
add
andb
bound
push
xchg
insl
imul
arpl
fdivrs
jo
aaa
fs
add
ja
fnstsw
je
push
je
jns
or
add
or
or
push
and
add
outsl
data16
sbb
fistpl
cmp
cmp
add
fistps
in
bound
inc
dec
push
push
push
inc
push
inc
pop
insl
push
dec
mov
fildll
imul
pop
xchg
lcall
ret
xchg
add
xor
or
push
add
add
add
inc
loope
pusha
nop
inc
add
inc
sbb
sbb
add
add
mov
mov
int
mov
push
jb
addr16
insl
and
jmp
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
jg
mov
or
pop
xor
bound
repz
jg
bound
push
lcall
mov
arpl
bound
pop
or
cmp
mov
pop
out
cmp
push
imul
dec
stos
insl
dec
add
add
mov
push
dec
adc
mov
iret
lcall
mov
movb
loope
or
adc
add
add
pop
cmp
or
pusha
pop
sti
daa
push
add
sub
adc
push
and
xchg
add
shlb
dec
dec
add
pop
or
add
je
js
or
cmp
xchg
std
fstp
add
jb,pn
popa
je
add
mov
or
mov
adc
cs
pop
xor
nop
add
inc
daa
fsubs
jl
insl
jo
add
jae
ja
ret
mov
in
pop
pop
xlat
pop
dec
push
push
gs
outsl
arpl
or
mov
ja
mov
aas
ret
jae
popa
arpl
daa
add
sarb
out
fs
mov
mov
jge
sbb
daa
dec
dec
push
cltd
rcr
pop
mov
stos
addb
subb
mov
jmp
sbb
add
loopne
inc
fimull
inc
mov
inc
fdivrl
pushl
lock
mov
mov
das
or
sbb
jnp
cld
out
mov
jbe
dec
inc
push
jmp
iret
jo
and
popl
push
mov
pop
push
mov
push
mov
cmp
push
xchg
lret
jb
scas
lods
std
test
or
jg
adc
inc
lock
ljmp
ret
xor
sub
adc
nop
js
mov
decl
cmp
mov
jle
mov
adc
adc
mul
in
in
sahf
call
sbb
inc
dec
jge
sub
mov
mov
xchg
pop
and
jb
in
filds
ret
ljmp
aaa
je
mov
push
mov
fwait
mov
inc
cwtl
clc
out
jle
hlt
shrb
fsubr
loop
ljmp
popf
jnp
and
sti
adc
sub
xchg
lods
leave
int
cmp
call
outsl
ficoms
aam
scas
outsl
jae
lods
xchg
out
xchg
in
mov
or
pop
loopne
mov
scas
push
aas
pushl
sbb
sti
jno
adc
stos
js
sbb
xor
sbb
call
and
mov
fmuls
loopne
pop
jmp
pushl
aas
in
add
ljmp
fcom
lcall
popl
imul
sbb
and
sar
rcl
popf
incl
shrl
xchg
push
inc
adc
ret
push
sub
fdivr
jmp
out
fnstcw
aaa
xor
mov
adc
add
aam
inc
lret
mov
adc
add
std
mov
pop
jg
sbb
fists
daa
jg
ljmp
hlt
addr16
pop
shl
loope
into
loopne
dec
sub
pop
cltd
cli
cmp
dec
pop
add
mov
shlb
imul
pusha
cmp
bound
cmp
bswap
scas
push
or
inc
jmp
cltd
or
jge
das
xchg
cmp
add
mov
inc
sbb
mov
pushl
inc
xor
rol
add
xchg
and
rcl
ficoms
cli
mov
mov
inc
fstpt
sbbl
push
iret
ljmp
outsl
push
arpl
call
stos
fbld
std
or
daa
pusha
jl
fstpl
iret
add
outsl
cld
mov
and
push
cld
inc
sarl
mov
repz
mov
out
dec
jg,pn
and
mov
negl
or
pop
or
incl
addr16
mov
jae
sub
rcrb
jo
fdivr
setns
decl
in
ljmp
pusha
cmp
imul
xchg
and
add
lret
repnz
addr16
call
lcall
repz
movsb
stc
das
lahf
jmp
test
subb
aaa
jmp
cmpsb
rcrb
test
jns
inc
ljmp
cmp
or
xchg
jge
ret
xor
cmpl
jae
sub
mov
push
adc
jle
jecxz
pop
xor
out
jbe
call
sub
cmp
inc
mov
cmp
lcall
movsl
mov
loope
bound
fcompl
add
adc
jmp
hlt
jg
into
mov
filds
jg
add
sub
dec
std
call
imull
and
push
pushf
push
shrl
xor
stos
popa
sub
push
loope
pusha
call
pop
out
cmp
test
and
std
ljmp
daa
or
pop
jo
fnstcw
scas
and
mov
lret
sahf
sbb
mov
das
mov
jmp
insb
arpl
mov
movsl
mov
sub
inc
xchg
lret
sbb
cs
pop
popf
dec
mov
jne
inc
ds
sti
sbb
adc
fisubs
jb
mov
jmp
xchg
mov
and
xor
xchg
pop
das
imulb
mov
adc
mov
jmp
mov
sbb
inc
inc
sbb
aad
pop
out
sub
xor
push
fbstp
imul
pop
shll
cmp
ljmp
ljmp
cmp
and
mov
into
xchg
pop
popf
inc
ret
mov
nop
in
jae
mov
mov
and
mov
and
jg
mov
jns
jo
cmpsb
movsb
popa
int
push
pop
jno
push
push
xchg
es
mov
aam
cmpsl
lods
sub
aas
jae
jno
aad
sub
pop
mov
shlb
pop
lcall
xor
pop
push
adc
in
push
popf
les
dec
cld
dec
and
mov
inc
insb
xor
loop
dec
clc
xor
call
call
lds
int
or
add
xlat
mov
shrl
jg
lret
fld
inc
inc
and
sub
in
pop
xchg
sbb
gs
sbb
das
lock
sbb
into
fwait
inc
in
xor
xor
ljmp
adc
movsb
int
fdivp
dec
inc
pop
loop
stos
mov
cmp
cmp
mov
sub
push
inc
xlat
pop
loop
out
ret
dec
jecxz
imul
pop
clc
ljmp
mov
in
mov
mov
add
roll
je
decl
insl
add
sarl
ss
fmul
xor
mov
ljmp
mov
dec
imul
jne
mov
leave
adc
cmp
and
dec
cmp
daa
lods
jmp
arpl
pop
mov
cmp
cmp
add
ljmp
ljmp
mov
and
leave
add
movsl
das
repz
sar
mov
das
sbb
mov
push
xchg
sub
add
pop
lret
out
les
mov
add
or
fimuls
lret
push
xor
or
fsts
inc
call
lcall
cmp
pop
std
and
push
jae
nop
in
shll
rol
scas
dec
repz
icebp
pushl
aas
fdivrs
cmc
bound
inc
push
loop
mov
or
aad
ljmp
in
xor
mov
dec
loop
negb
adc
fwait
xchg
jmp
fidivs
ljmp
decl
mov
cmpb
js
cltd
fmuls
loopne
stc
and
aad
or
mov
out
mov
inc
pusha
enter
pop
jae
mov
incl
inc
xchg
cmp
fidivl
lahf
call
cwtl
repnz
mov
cmp
pop
sbb
ds
mov
dec
inc
dec
pop
push
push
fistpll
incl
fisubrl
int3
movsl
xor
or
pop
aam
fld
sti
mov
push
jbe
jmp
add
sti
mov
xchg
mov
sub
jbe
cmp
dec
mov
incl
xor
daa
xor
addr16
lret
ret
push
pop
add
xchg
std
dec
cld
mov
cmp
jecxz
add
dec
xchg
das
sbb
stos
inc
xchg
ljmp
dec
jmp
shl
xchg
mov
xor
xchg
lret
decl
int
fs
inc
int
or
xor
mov
and
mov
mov
in
mov
int3
dec
outsb
xchg
adc
loop
pop
fisttps
mov
mov
je
jno
mov
lcall
and
fmull
jnp
rclb
xor
push
into
sub
cmc
cmp
cmp
outsl
dec
shrl
dec
shr
push
cltd
mov
push
and
es
ljmp
gs
inc
xchg
aaa
outsl
mov
jmp
jbe
repnz
mov
push
orb
adc
jmp
pop
jnp
sahf
lods
out
xchg
sub
fisttps
in
into
imul
out
mov
dec
mov
les
pop
cmp
jp
inc
popf
push
roll
fcompl
dec
mov
ret
decl
sahf
and
fnsave
and
add
mov
test
pop
push
push
cmp
fcmovnb
mov
insb
and
jbe
push
ret
sti
pop
cmp
int
call
pop
dec
sbb
push
pop
mov
push
icebp
add
or
nop
paddsb
pusha
xor
outsl
adc
jmp
jbe
pop
dec
scas
xor
std
jg
ror
daa
fadds
add
inc
scas
imul
lcall
push
mov
sbb
popf
or
mov
lret
inc
push
add
jg
cmp
cmpsb
test
ret
rorl
out
inc
cmp
mov
dec
clc
push
leave
shlb
pushl
out
imul
mov
push
adc
in
sub
push
ljmp
dec
sub
pusha
out
dec
dec
cmpsl
f2xm1
sbb
sbb
lods
pop
lock
cmp
sbb
add
mov
pop
xor
jge
icebp
add
mov
mov
push
test
pop
leave
push
rcl
dec
je
call
sub
pop
ds
add
pop
mov
pop
sarl
test
ret
je
push
inc
mov
xchg
mov
stos
cltd
fidivl
jmp
loop
xor
xor
add
pop
aad
sbbb
mov
enter
pushl
xchg
add
sbb
ret
test
xchg
push
movb
pop
lret
loop
fnstsw
insb
mov
stos
inc
xor
push
cmp
sub
cmp
pop
add
cmp
mov
sarl
and
pusha
jns
jg
xor
das
mov
icebp
dec
aas
mov
rcll
scas
mov
incl
dec
std
or
lock
imul
inc
mov
mov
add
sub
sub
iret
ret
test
pop
scas
xor
mov
cli
or
incl
mov
jl
cltd
sbb
cmc
jge
inc
mov
lods
repnz
jne
adc
pop
cmpsl
in
mov
dec
outsl
xchg
mov
jmp
mov
cmp
xchg
pop
cmp
ret
daa
pop
ljmp
aad
stos
repnz
cld
and
push
cmp
sti
decl
cli
outsl
hlt
into
push
movsl
leave
xor
jmp
push
mov
adc
pop
pop
in
push
cmpl
into
jp
dec
pop
repnz
test
jae
jmp
pop
ret
jg
cs
push
mov
movsl
movsb
or
imul
ljmp
pusha
mov
lret
div
jno
mov
and
arpl
sbbb
clc
call
mov
mov
pop
lods
iret
or
jl
xchg
lcall
mov
inc
pop
pop
fists
mov
inc
nop
out
mov
adc
incl
out
jmp
orl
incl
xchg
xor
jle
mov
popf
push
xor
sub
push
nop
adc
mov
jnp
faddp
iret
daa
lds
sti
pop
fdivr
mov
call
or
and
repnz
out
jl
out
sarb
popa
fldcw
jne
loop
iret
dec
jl
stos
jg
push
jmp
dec
subps
adc
test
sahf
xor
and
xchg
sbb
in
std
push
fstp
insl
loop
fists
dec
aaa
lcall
xchg
cmpsl
ljmp
adc
lods
inc
cli
xchg
mov
mov
fdivr
incl
aas
cmpsl
jle
mov
ss
push
or
cs
cmp
stos
lods
add
xchg
xor
ret
out
int3
jl
out
sbb
adc
rcr
clc
inc
add
push
inc
push
or
mov
sub
mov
aam
clc
dec
aas
lock
jb
mov
push
insb
sbb
aaa
xchg
loopne
add
adc
call
jmp
push
sub
mov
and
inc
test
push
sbb
test
pop
mov
fwait
lock
inc
sub
or
imul
pop
vmaxpd
cmc
lcall
call
or
sbb
les
bound
dec
mov
das
movsb
mov
add
test
mov
adc
push
mov
mov
loop
int
mov
inc
lods
aas
dec
lea
lods
mov
fs
push
lahf
pop
ljmp
adc
push
sub
mov
loope
and
lds
cli
mov
sbb
ljmp
shl
pop
sbb
std
xchg
mov
add
adc
decl
jo
pop
sbb
fwait
mov
cli
sbb
lds
dec
pop
sub
fistl
fdivr
cmpsb
xor
les
sub
insb
addr16
repz
mov
lahf
shl
cmp
ds
push
mov
clc
int3
jmp
sub
adc
jmp
pop
push
les
cld
decl
cld
std
sub
pop
push
out
mov
xchg
mov
clc
incl
inc
pop
push
xor
mov
push
movsb
lcall
call
imul
clc
jp
mov
jo
fs
aam
sbbl
push
pop
clc
and
pop
cmp
jecxz
ljmp
cltd
outsb
xor
leave
inc
stc
fildl
std
jb
mov
call
jbe
mov
stc
stos
data16
div
pushf
ret
repnz
dec
mov
stos
pushl
aam
or
in
dec
movsl
negl
mov
lret
imul
xor
push
aam
adc
movsl
ds
hlt
mov
dec
mov
mov
nop
jo
outsl
stos
fbld
stos
sbb
hlt
mov
jns
sub
pop
or
insb
call
mov
cmc
push
xchg
dec
jecxz
lea
jno
dec
xchg
lea
mov
test
jmp
in
cmc
test
icebp
stos
xor
sti
xor
icebp
xchg
inc
icebp
fucomp
fstl
pop
pop
dec
jg
adc
ljmp
xchg
mov
sub
jecxz
and
int3
movsl
repz
subb
sbb
decl
cmc
pop
jp
xor
shl
mov
loope
insl
jnp
cli
cmp
jmp
mov
xor
jns
mov
lock
jg
jg
aaa
loop
shr
ljmp
cmc
pop
roll
xor
jg
push
repnz
inc
je
adc
push
fiadds
mov
and
loopne
aaa
sub
rol
test
push
call
inc
adc
sbb
hlt
es
outsl
and
test
call
ret
xlat
and
lds
in
fbld
scas
sub
xchg
outsl
icebp
decl
test
es
mov
int
push
into
xor
xor
cli
lcall
sahf
test
jnp
jns
xchg
insl
mov
xrelease
into
mov
hlt
mov
call
shrb
loope
aas
cld
xchg
mov
sahf
cmp
loopne
xor
xchg
rol
in
and
ja
adc
iret
or
mov
test
sarb
es
inc
xor
sub
push
enter
jge
xchg
dec
pop
lahf
push
dec
fnstenv
dec
ds
lea
xchg
dec
or
mov
stos
push
mov
push
push
pop
cmc
jmp
insb
cmp
test
mov
icebp
imul
cli
jbe
jge
push
mov
and
mov
adc
movb
add
rcrb
dec
push
jge
sbb
scas
adc
sahf
push
mov
mov
mov
mov
dec
hlt
test
xor
cli
movsbl
outsl
cmc
mov
inc
cs
jmp
sbb
mov
mov
jmp
mov
jp
cmc
lcall
bound
outsl
rorl
rcr
cmp
jne
jbe
jb
loopne
inc
in
pop
roll
dec
jl
dec
mov
jg
jae
movsb
pop
outsl
inc
daa
push
aas
add
or
imul
adc
insl
push
jmp
sti
in
mov
xchg
es
cmp
ja
pusha
aad
pop
push
pop
ljmp
mov
mov
add
lret
push
mov
pushl
pop
rcll
decl
xorl
jmp
int3
fsubs
iret
cmovp
incl
inc
push
add
ja
stos
dec
inc
jnp
repz
popf
pop
jne
int3
sbb
sarl
push
adc
mov
mov
lods
xor
test
mov
in
mov
fsubr
repnz
add
clc
lcall
pop
sub
xor
out
jns
mov
push
cltd
out
stos
inc
ror
call
imul
inc
daa
or
push
iret
rcrl
out
cwtl
es
shl
lods
call
aam
add
dec
in
add
and
movsb
mov
push
push
adc
fnsave
pushl
xchg
scas
cmp
gs
data16
add
std
cli
imul
outsb
cld
data16
mov
daa
js
jnp
iret
popa
mov
ljmp
nop
sbb
adc
dec
ss
cmp
call
lahf
outsl
sub
and
inc
inc
mov
out
cmp
jg
pop
imul
inc
outsl
lcall
mov
frstor
sbb
imul
jmp
out
es
rorb
xchg
punpcklbw
shlb
decl
int
cld
lock
mov
dec
or
inc
loope
fbstp
jg
push
out
jnp
jecxz
out
inc
adc
inc
push
mov
mov
push
call
add
pusha
sub
out
fadd
lret
pop
fcmovnbe
sbb
ja
mov
test
cli
js
push
fdivs
jmp
mov
pop
xchg
insl
les
mov
dec
dec
lret
or
mov
fs
outsb
pop
shl
dec
adc
lods
pop
loopne
lds
or
test
ud1
incl
out
out
xchg
addl
inc
xor
mov
je
dec
jnp
loop
xor
lret
loop
bound
fadd
sub
movsb
dec
stos
or
or
call
test
jne
mov
rcl
popa
test
lds
in
add
lds
mov
in
xchg
or
push
mov
pop
inc
clc
loop
mov
cs
sub
mov
ljmp
cmc
sbb
xlat
mov
rorb
jae
lds
and
ds
dec
js
loope
mov
push
and
mov
xor
cltd
scas
adc
mov
xchg
mov
popa
gs
jnp
xchg
test
subl
push
call
jmp
out
pusha
mov
adc
inc
enter
das
or
xlat
or
jmp
into
movsb
jns
pop
xchg
push
xchg
outsl
loopne
repz
jle
jecxz
add
mov
dec
push
inc
xchg
push
movsl
enter
jg
test
adc
in
adc
stos
xor
andps
xor
ljmp
adc
stos
inc
scas
adc
into
pushf
sub
push
and
outsl
lea
push
mov
jg
pop
nopl
dec
adc
sub
cmpsl
scas
and
mov
inc
ja
pop
dec
xor
fs
pushl
cmp
sti
test
cmpsl
int3
sub
xchg
mov
mov
mov
mov
insb
adc
aas
sbb
les
test
jge
mov
call
inc
sbb
push
jecxz
add
inc
push
pop
pop
movsl
mov
dec
aas
lds
shlb
lcall
cmp
aas
xchg
lea
test
arpl
push
popa
movsb
pusha
int3
test
ljmp
pop
add
dec
lret
add
cmp
cmp
pop
pop
xor
sub
call
inc
mov
and
inc
push
jno
int3
pop
cltd
jg
sbb
mov
and
or
inc
cmp
cwtl
aam
inc
mov
cli
scas
or
int
dec
pop
loope
dec
mov
leave
out
push
jge
ficoml
outsl
std
outsl
mov
int
out
pop
lcall
sar
xchg
push
insl
mov
pushf
fstpt
int3
dec
cli
pop
pushl
mov
pop
aaa
lea
dec
mov
cli
inc
ljmp
std
jmp
dec
sahf
cmpsb
mov
aad
decb
movsb
pop
das
scas
ljmp
pushl
inc
test
push
push
clc
xor
out
mov
jle
cs
and
push
inc
in
pop
sbb
incl
int
es
push
incl
lcall
push
push
mov
and
adc
lcall
imul
fadds
sub
fisttps
shrb
mov
stc
inc
decl
cwtl
jno
fs
je
dec
jo
pop
xchg
jl
int3
mov
xor
sti
out
js
popa
cmp
xchg
test
call
ljmp
clc
mov
mov
daa
sub
sar
call
dec
lds
sbb
and
or
adc
fiaddl
les
rcr
lods
cs
jb
lret
push
lock
dec
mov
clc
xlat
and
mov
mov
pop
iret
incl
push
das
mov
stc
lods
aad
fwait
psllw
or
or
incl
incl
inc
mov
jge
mov
push
scas
testl
scas
dec
lea
push
insb
lea
sar
mov
dec
adc
pop
inc
jbe
das
decl
and
lret
gs
js
xor
push
rdpmc
xor
mov
es
add
xchg
jmp
ja
popf
fsubrs
negl
popf
fldenv
mov
loopne
hlt
outsb
mov
les
sbb
mov
mov
sarl
sbb
pop
add
dec
jge
clc
sbb
hlt
out
push
mov
ficomps
push
jbe
fisubs
pop
arpl
call
dec
adc
pop
pop
mov
dec
mov
adc
mov
ljmp
lret
pop
je
cmpb
out
dec
lret
xor
das
lock
mov
dec
stc
out
dec
jne
cmpsb
test
loop
decl
push
dec
push
lock
outsl
ds
rorl
mov
mov
movsl
lret
push
mov
aas
jb
push
sub
js
dec
jbe
push
in
testb
in
sub
adc
push
xor
or
sub
jmp
xor
mov
stc
cltd
or
arpl
push
jp
adc
cli
inc
jg
repnz
mov
inc
xchg
rol
push
add
mov
push
fldcw
std
das
lock
push
xchg
xchg
mov
into
mov
icebp
fucomip
mov
inc
in
dec
dec
call
in
movsl
fisttps
mov
cmc
push
stos
data16
xor
and
movsl
xlat
mov
jl
incl
cmp
add
mov
stos
lock
call
fcompl
or
stos
int
xchg
cmpsl
xor
jg
outsb
addr16
adc
jbe
leave
bound
sub
pushl
mov
xor
pop
adc
cmp
and
jo
scas
xor
mov
es
mov
cmp
adc
cmovl
incl
insl
popf
mov
int
call
cmp
mov
clc
sbb
mov
incl
pushl
jne
adc
dec
test
into
dec
mov
dec
aad
mov
test
and
inc
jl
mov
fistpll
jp
aad
mov
sub
ja
icebp
inc
push
fdivrs
out
mov
jge
and
enter
dec
jo
call
jp
xchg
and
push
pop
rorl
pusha
xchg
jge
pushf
lods
jge
xchg
loope
pop
cli
clc
sub
xor
mov
push
pop
mov
xchg
aam
sbb
jg
in
in
pusha
pop
inc
mov
ss
std
aaa
clc
jmp
mov
adcl
adc
repz
sub
sbb
add
into
aam
and
idivb
pop
push
cmp
ljmp
cmp
pop
inc
mov
mov
push
hlt
stos
add
int
ljmp
sahf
or
movsb
fwait
adc
stc
dec
and
dec
mov
xchg
jecxz
lock
xchg
inc
push
gs
inc
call
jg
pop
cmp
insl
in
fsubr
dec
mov
mov
pop
aaa
cli
decl
les
mov
stos
sub
push
popa
cld
xchg
pop
mov
inc
push
adc
lods
outsb
pop
pop
repz
popa
or
mov
push
inc
ljmp
incl
mov
jge
push
sub
ljmp
inc
daa
mov
pushl
cmc
mov
and
dec
mov
inc
push
sbb
push
fwait
jb
aaa
call
lret
loope
int3
dec
and
psllq
cmp
push
add
add
jg
call
xchg
bound
lds
xchg
adc
testb
inc
dec
popf
sub
push
cld
sbb
xor
aas
dec
insb
cmpsb
lds
jmp
out
out
pop
and
das
pop
sub
jo
ret
jmp
loope
jmp
lcall
dec
testb
mov
ficomps
mov
out
ret
jo
fildl
ret
sbb
shr
cltd
pushf
or
ljmp
mov
repnz
jecxz
aad
or
xchg
pop
ret
je
jmp
std
mov
cld
lahf
mov
xor
jmp
lret
xor
sub
and
jge
ss
xor
aaa
jecxz
xlat
push
or
push
incl
adc
jecxz
dec
test
daa
aad
sub
repz
and
icebp
sysexit
push
ljmp
cmc
loop
or
mov
gs
insb
faddl
mov
jbe
iret
adc
loope
jmp
loope
sbb
push
pop
sbb
or
xchg
movb
jle
push
fs
das
adc
push
push
sbb
loopne
push
cmp
mov
dec
add
decl
fidivl
out
das
sub
cwtl
int
outsl
add
ljmp
dec
sub
inc
es
xor
aad
clc
js
test
mov
lret
pop
stos
xor
repnz
lock
aad
jns
movsl
xor
sub
in
and
adc
mov
test
mov
ret
cmp
stc
mov
pusha
sahf
loopne
iret
jle
andb
xor
sub
cmp
cmp
out
xor
cli
call
sub
inc
and
in
sar
xor
jnp
sub
gs
cmp
xor
fcmovnu
loop
mov
adc
xchg
ja
test
inc
xchg
clc
call
lds
icebp
scas
fldcw
leave
int3
es
call
ret
rcll
cmp
xchg
icebp
int3
push
mov
addr16
inc
push
mov
sbb
incl
fistpl
loopne
lret
jne
incl
dec
mov
dec
nop
or
lcall
les
sbb
fistps
mov
sahf
mov
mov
outsb
ds
mov
fdivrl
xchg
fnsave
xchg
fs
incl
cmp
push
insb
push
outsl
mov
scas
xor
sub
aam
lcall
mov
outsl
pop
cmpsb
sub
xor
lock
outsl
std
out
and
pop
cmp
jb
icebp
adc
xor
pop
outsl
pop
mov
mov
leave
dec
loopne
sub
adc
mov
jmp
fnstsw
mov
outsl
sarb
mov
pop
lahf
jbe
mov
pop
mov
outsl
lock
aaa
inc
sub
mov
ljmp
test
xor
mov
iret
sub
xor
pop
and
inc
ror
pop
mov
jnp
jl
cmp
jl
scas
aas
popf
es
inc
fnsave
cmc
sub
sub
xchg
aad
mov
mov
scas
arpl
sbb
push
cmp
mov
mov
add
lods
mov
loop
decl
std
push
xlat
cmp
gs
cltd
leave
test
inc
mov
test
inc
xchg
imul
push
out
lods
push
or
stos
adc
pop
clc
jns
aas
xchg
jp
push
xor
mov
fsubrp
dec
das
das
mov
cmp
pushl
cli
lcall
iret
xlat
fisttps
mov
lods
sbb
xor
push
lahf
lods
pop
jbe
insl
adc
jae
fmul
cmp
mov
cmp
stos
xchg
sti
call
aas
mov
xchg
rol
popa
mov
inc
hlt
movsl
xrelease
jg
pushl
mov
add
and
cmp
inc
es
pusha
das
jnp
sbbb
or
ljmp
push
sub
inc
sbb
cmpsb
dec
cltd
or
call
pop
sbb
out
sbbl
decl
lods
cwtl
cs
xchg
jmp
je
dec
sbb
insb
into
incl
pop
mov
dec
pusha
jecxz
or
dec
shl
movsl
dec
fucomp
jmp
cmc
aaa
xchg
mov
popf
xchg
ljmp
adc
or
jmp
ja
adcl
mov
cmp
inc
notb
nop
incl
shrl
cmp
lods
fwait
mov
lret
mov
out
fadds
popa
fbld
ret
fnstsw
int3
fbld
add
sbb
jo
ds
and
clc
decl
cmp
jns
adc
mov
adc
pop
xchg
out
hlt
jmp
ljmp
bound
loope
imul
or
mov
push
jno
in
cmpsb
jmp
pop
loopne
fsub
pop
scas
sbb
cltd
or
jp
dec
fstpt
subb
xlat
cmp
or
xchg
mov
mov
inc
repz
andl
jne
mov
icebp
inc
ljmp
pop
dec
dec
fcomp
jb
and
inc
cmp
mov
ljmp
pusha
push
adc
mov
mov
std
pop
out
xchg
pushl
push
in
ret
xlat
jbe
dec
fldt
sbb
mov
ret
cld
lea
cltd
add
sbb
add
ljmp
jmp
cmp
pop
and
jne
mov
inc
ja
sbb
sbbb
adcb
mov
std
test
sub
cmp
jg
cmp
inc
repz
sbb
cmp
jg
pop
dec
mov
xor
call
mov
xchg
sbb
pop
jae,pn
movb
xchg
push
cmp
test
out
in
or
xor
cmp
insb
pop
push
inc
dec
push
push
sub
sti
cld
mov
std
ljmp
in
shrl
add
fcompl
sbb
xchg
pop
mov
js
xchg
and
in
std
fidivrl
xchg
cmp
lahf
inc
pop
fstpt
adc
je
cli
subb
call
and
cmp
xor
jecxz
jp
mov
mov
mov
jns
sbb
add
and
adc
cwtl
mov
mov
cmc
lods
xchg
cmp
lret
insl
clc
int
ret
sbb
mov
pop
fnstsw
test
testb
mov
ja
inc
mov
and
and
ret
xchg
mov
push
adc
scas
xchg
cmp
jmp
cmp
or
jge
loope
pop
data16
popa
cmpb
or
mov
mov
sub
jle
dec
outsl
std
fdivl
adc
mov
mov
lea
dec
das
xchg
insl
int3
jg
pushl
in
insl
dec
or
push
inc
sub
adc
or
pop
adc
jnp
cmp
sub
push
in
dec
sar
and
fs
pop
dec
sub
cmp
adc
mov
das
mov
icebp
pop
sti
jmp
inc
inc
dec
mov
mov
lret
jnp
dec
mov
jmp
shll
inc
mov
pop
outsl
mov
mov
std
lcall
clc
push
pop
hlt
cmp
mov
cld
int3
popa
test
push
movsl
outsl
icebp
in
fisttps
push
cmp
adc
inc
xor
xchg
cmc
pop
jg
lcall
repz
mov
fwait
push
ficoms
sub
cli
jb
arpl
test
adc
push
push
mov
decb
fistpll
movsb
lret
call
push
adc
mov
test
pop
inc
rclb
jns
and
notb
aaa
sbb
or
test
mov
jo
xchg
mov
incl
or
bound
mov
popf
and
adc
xchg
jle
dec
in
pop
push
xchg
insl
mov
mov
inc
outsl
jnp
ljmp
cs
adc
imul
call
jo
ficoms
and
cmp
jle
lods
jne
fdivrl
or
jmp
into
cmp
lcall
in
jp
xor
push
mov
mov
pushl
jle
out
stos
add
out
cltd
and
cmpsl
jnp
std
sbb
lcall
or
lcall
jl
adc
test
aad
lret
fisubl
cmc
pop
sub
loop
incl
mov
mov
mov
punpckhdq
sbb
jnp
push
inc
mov
xchg
incl
ffree
fidivrl
mov
nop
pop
mov
imul
imul
shll
mov
pop
sbb
scas
mov
cli
out
jle
mov
mov
es
pop
mov
push
pop
fnstcw
cmpsb
xor
fs
or
outsl
lock
iret
adc
adc
iret
mov
iret
sbb
arpl
ljmp
adcl
jl
cmc
lcall
and
je
ja
pop
repz
push
repz
sbb
test
or
pop
mov
jl
xor
mov
cmp
mov
lahf
xor
inc
jns
lock
or
mov
sbb
popf
outsb
iret
mov
iret
mov
mov
gs
and
lret
fcoml
pop
mov
movsl
dec
popa
sbb
pop
fidivl
cli
scas
mov
fildll
icebp
or
ja
stos
mov
decl
inc
mov
shlb
inc
mov
jnp
dec
mov
aad
in
jl
out
incl
dec
pop
js
movsb
inc
pop
xchg
shll
push
mov
pop
jecxz
ljmp
push
dec
cmpsb
add
pusha
mov
loope
nop
pop
arpl
pop
sti
arpl
ljmp
fstpt
mov
ljmp
aam
out
xchg
cmp
jbe
xchg
rorb
incl
push
dec
jg
aas
lcall
fstps
dec
xchg
and
pushl
cmp
adc
pushf
jbe
call
sub
push
faddl
jno
pop
inc
xchg
bound
movsb
and
jmp
movsl
notl
cmpsl
sub
adc
dec
pop
incl
cmc
testl
cmp
imul
pop
lcall
dec
aas
loop
push
imul
xor
mov
cmp
out
and
popf
xchg
pop
mov
iret
jno
test
ljmp
mov
mov
pop
cmpsl
pop
jnp
lcall
call
cmpsl
movsl
add
dec
mov
pushf
inc
xor
inc
test
ljmp
lods
int3
adc
mov
dec
dec
mov
push
xacquire
sub
pushl
scas
loope
dec
lods
popf
stc
pushf
aam
scas
jno
aam
sbb
mov
mov
stos
pusha
xor
xchg
cli
pushl
cmpb
inc
sub
movsl
ret
mov
popf
insb
ret
mov
or
cmp
lods
jmp
pushf
jecxz
mov
scas
mov
sub
sbb
xchg
movsb
in
movsl
fidivs
sbb
call
jmp
imul
mov
lds
xor
jmp
add
push
push
lcall
jmp
addr16
or
les
rorl
insb
decl
fdivrp
lret
scas
inc
std
inc
pushf
fildll
add
shlb
ja
decl
popf
cmpsb
dec
into
pop
imul
pop
mov
xlat
sbb
push
fstps
push
jecxz
lret
loopne
movsl
xchg
iret
lahf
int
pop
cmp
xor
push
dec
inc
sub
push
popa
repnz
sarl
cmp
sub
jg
inc
xchg
and
dec
jnp
pop
jmp
pop
hlt
sbb
jg
jg
adc
fs
xchg
arpl
movsl
xor
push
dec
pop
adc
pop
and
mov
std
sahf
fistpl
stc
sbb
cmp
mov
jp
pop
dec
mov
bound
popf
jmp
xorb
cmpsb
fwait
adc
adc
faddl
jg
or
scas
sarl
mov
cmpsb
mov
repnz
dec
lahf
push
push
aas
lock
jmp
repnz
test
xor
int
leave
int
cmp
mov
fistps
loop
jg
mov
outsl
jns
push
or
imul
xchg
shlb
cmp
adc
xor
sti
insb
jp
or
push
fiadds
nop
pop
hlt
pushl
std
fsubp
pop
cmp
popa
cwtl
adc
out
je
repz
push
jle
sub
imul
das
xlat
mov
jp
je
aad
mov
inc
rorl
fwait
xor
cmp
hlt
cmpsb
nop
call
mov
mov
add
aaa
mov
dec
mull
add
sbb
fldenv
push
xchg
jg
lahf
divb
in
cwtl
or
add
je
push
bound
call
sbb
add
mov
sahf
imul
add
adc
int
sub
jl
mov
push
inc
and
sbb
pcmpgtw
adc
sub
cmp
fsubs
push
pop
add
incl
push
mov
add
test
js
fwait
clc
ret
orl
in
in
mov
push
dec
cmp
fstps
in
cmpsb
jecxz
ljmp
jnp
fdivl
insl
mov
xchg
js
pop
cli
ds
jle
lea
cld
or
sar
dec
pushl
std
ljmp
push
loope
test
xchg
mov
cmpsb
aas
daa
mov
sbb
mov
xchg
dec
dec
repz
mov
std
inc
rorb
ds
mov
push
xor
mov
int
in
xchg
xchg
inc
in
jl
fistpl
insb
and
push
jp,pt
ljmp
xchg
and
aad
fdivrl
jbe
sbb
jecxz
cltd
test
jg
fimuls
mov
cmp
std
cld
filds
dec
fwait
sub
fcmove
enter
push
and
ss
insl
rcr
add
sub
scas
xor
adc
insb
data16
in
cmp
jnp
push
jecxz
lds
xchg
mov
andb
cmp
orb
pop
das
std
mov
fidivl
repz
jp
mov
fistl
popf
mov
inc
or
push
xor
dec
cmp
loope
xchg
cmpsb
sub
pop
outsl
jge
aad
cmp
aaa
movsl
add
and
adc
push
xchg
sbb
lods
loope
fucomip
jmp
cltd
mov
xchg
mov
pop
cli
adc
cltd
mov
ljmp
xchg
push
andb
and
bswap
shll
daa
dec
decl
xchg
mov
cmc
loope
mov
push
or
adc
pushl
pop
das
cmc
iret
mov
nop
xchg
inc
sub
out
and
lea
cmp
pop
pop
cmp
mov
xor
shr
dec
shll
cs
pop
mov
pushf
out
xor
jmp
push
cmp
packssdw
test
pop
fistl
add
in
pushl
xchg
xor
mov
cmpsl
fimull
clc
pop
js
or
shlb
push
pop
outsb
mov
jne
sar
call
pushl
in
xorb
loopne
lret
mov
outsl
cmpl
mov
ds
sbb
and
aam
push
std
xchg
ljmp
icebp
incl
inc
mov
xor
incb
xor
xchg
adc
lcall
pushl
sub
ret
jne
push
xchg
gs
mov
jg
dec
pop
rol
out
push
incl
icebp
pop
daa
xchg
inc
icebp
add
sub
pop
shl
xchg
clc
decl
fistps
out
and
lss
out
stc
cmpsl
lcall
call
movsl
mov
stos
insb
and
test
and
pop
addb
stos
sub
adc
inc
xor
jg
jg
cmp
jl
pop
push
inc
lods
mov
sarl
xchg
test
call
cmp
stos
mov
fisubrs
outsl
sbb
jmp
sbb
imul
mov
ss
pop
stos
imul
jge
les
jmp
cmc
jb
clc
pushl
mov
test
xorb
push
std
push
xchg
call
ret
rorb
xchg
jae
pop
dec
cmp
pop
sti
inc
sub
jge
and
outsl
and
xor
scas
and
mov
fisttpl
out
mov
lods
clc
adcl
mov
cmp
loopne
sub
mov
fnstcw
pop
xlat
pop
adc
clc
aaa
cmpsl
int3
push
pop
pushl
rorb
mov
mov
das
sub
xchg
add
outsb
stos
addl
push
mov
sub
jl
aaa
or
fistpll
sub
xor
call
cmp
stos
jno
aad
or
incl
loope
dec
shr
mov
jmp
jecxz
lret
jmp
repnz
data16
pop
lcall
ljmp
mov
aaa
imul
sbb
lret
in
call
inc
xchg
xor
xor
and
or
in
lods
jns
mov
loopne
call
popa
insl
xlat
fiaddl
addr16
scas
lea
mov
divb
call
aas
test
ja
or
into
pop
loop
movsl
cmpsl
fnsave
ja
rorl
out
xor
inc
mov
je
inc
xor
in
pushl
ret
jbe
add
notb
mov
dec
push
lret
test
test
fbld
jnp
push
lcall
outsl
jmp
mov
mov
incl
cs
addr16
aas
movsb
push
and
sub
add
adc
push
mov
sbb
std
jo
push
jae
jge
addr16
pop
mov
push
push
or
mov
loop
dec
outsl
lods
incl
pop
add
nop
ljmp
test
ljmp
mov
test
cmp
ljmp
std
lock
mov
fildl
or
aam
rorl
sbb
jne
jg
cwtl
and
fucomp
mov
add
pop
jecxz
xor
movsb
xchg
mov
jp
rcrb
dec
adc
sbb
lds
repnz
hlt
mov
xchg
ss
xchg
es
pop
in
xchg
sbb
decl
ficomps
sub
lds
icebp
fidivs
loop
lods
inc
add
lret
jecxz
cmp
loop
xor
xchg
lods
jg
xor
fcomps
pop
je
lret
jo
scas
incl
mov
or
pushf
imul
jl
and
add
aam
leave
lcall
call
das
int3
movsb
shlb
call
add
enter
push
fildl
int3
nopl
incl
insl
jmp
pop
mov
jne
inc
inc
push
cmc
push
push
cli
cmp
inc
jg
std
repz
fnstcw
js
mov
stos
dec
jg
dec
cmp
or
fbstp
xchg
fmull
or
jmp
js
inc
push
mov
sub
inc
mov
xchg
pushl
or
rolb
cld
mov
jnp
sbb
xlat
xchg
pop
iret
fsub
jecxz
pop
jnp
mov
jnp
loop
inc
push
jl
mov
stos
push
push
cld
push
or
ljmp
cld
jg
lods
repnz
call
lret
xor
lea
add
adc
decl
dec
bound
jg
test
sti
mov
ss
pop
incl
jecxz
mov
movsl
fildl
in
adc
push
or
int3
jl
rolb
mov
inc
add
xor
rorl
test
xor
arpl
mov
outsl
hlt
in
push
add
hlt
inc
push
or
negl
or
and
loope
lcall
pop
js
lods
cmp
jno
dec
or
push
gs
xchg
in
inc
add
call
xchg
inc
push
pop
sbb
das
clc
mov
sarb
out
sub
test
mov
fwait
repnz
inc
in
push
jmp
or
xchg
scas
shlb
loop
xchg
ja
push
movsl
pushf
mov
test
mov
testb
cmpsb
inc
xor
aam
mov
rcrl
lcall
mov
pusha
pop
add
xchg
testl
pop
clc
ljmp
cli
xor
push
daa
rorb
lods
pop
xor
xchg
pop
mov
cltd
clc
call
pop
repz
popa
lcall
mov
pop
lods
bound
push
push
stc
jg
fistps
jnp
adc
scas
push
sbb
mov
cmp
and
decl
scas
pop
inc
inc
fnstcw
outsl
daa
clc
mov
outsb
push
pop
xor
xor
push
rorl
add
mov
add
mov
xchg
rcl
test
in
std
das
push
out
mov
push
movsl
xorps
bound
jmp
call
push
cld
xchg
push
cvttps2pi
aaa
ret
ss
mov
dec
lcall
inc
testl
or
scas
or
dec
jmp
jmp
sbb
aaa
xchg
imul
mov
adc
mov
add
repz
push
and
sub
bound
pop
jnp
inc
cmpl
cld
jmp
fcompl
stos
adc
and
add
push
ss
test
std
rolb
xor
decl
dec
xchg
push
adc
push
aas
cmpsb
cld
arpl
push
lret
test
sub
cmp
push
das
mov
stos
mov
nop
in
iret
in
dec
psubsw
incl
dec
push
dec
fiaddl
lea
jno
in
in
nop
mov
popf
add
ljmp
aaa
jnp
pusha
adcl
cwtl
sti
xlat
xor
xchg
into
std
les
pop
call
ds
int3
or
outsb
arpl
clc
ljmp
ja
test
aad
xchg
xlat
or
adc
fcoms
mov
and
incl
or
xor
adc
jp
mov
mov
das
mov
jmp
popf
cltd
xchg
jmp
sbb
andb
jno
lock
lahf
stos
rcrb
and
decl
repz
lock
stos
ficompl
fiadds
in
call
xor
xchg
lcall
pop
clc
pop
test
test
cld
ljmp
sarb
mov
fs
add
js
mov
loopne
popa
or
add
or
ljmp
testb
sbb
out
lods
sub
dec
and
mov
fsts
out
mov
inc
orb
sbb
jge
pop
stos
mov
xchg
dec
decl
xor
imul
cmp
out
aaa
js
sub
lods
shl
adc
xchg
sarb
pop
clc
incl
sbb
jne
dec
sti
inc
insl
mov
xlat
bound
xchg
cmp
subl
stc
or
xchg
adc
je
add
inc
dec
lds
xchg
mov
pop
inc
dec
and
jmp
mov
dec
mov
push
cmp
lcall
mov
inc
dec
iret
out
in
push
push
cli
mov
imul
lcall
test
iret
adc
jno
pop
push
repnz
sub
outsl
push
call
inc
iret
cmc
je
mov
aaa
ljmp
icebp
rol
shlb
int
dec
rclb
pop
dec
bound
mov
loopne
clc
lret
ret
sbb
outsl
pop
cld
lcall
std
pop
mov
jle
add
clc
sbb
int
lcall
jne
clc
call
ljmp
dec
pop
imul
cmp
lret
xchg
xor
incl
xchg
sub
jnp
mov
mov
icebp
dec
arpl
sbb
lods
cld
pushl
clc
lods
ftst
xor
jb
ljmp
or
icebp
lcall
mov
cmpsb
iret
dec
cmp
loop
or
movsb
jmp
notb
fnsave
pushl
push
adc
daa
push
inc
out
inc
rcrb
dec
insb
popa
rcl
daa
sbb
dec
call
xorl
int
sbb
stos
pop
out
fcmovbe
flds
lock
jns,pt
jp
sbb
jno
or
mov
inc
test
sbb
loop
ret
shl
lcall
mov
sbb
or
outsb
jbe
inc
mov
push
jns
in
push
xor
cld
std
decl
mov
mov
add
out
sbb
push
or
cmp
lcall
lods
addr16
loopne
jl
xor
sbb
hlt
xchg
fldt
sub
in
jmp
subl
test
fmuls
imull
mov
adc
or
jge
loopne
mov
test
stos
sar
inc
xlat
pop
stc
je
stc
xor
decl
xchg
or
sti
sbb
pop
xchg
sbb
mov
or
pushl
imul
jl
leave
dec
fcoms
mov
or
outsb
scas
fistpll
lods
shl
mov
mov
cmp
je
jg
call
call
dec
sub
pushf
dec
lcall
mov
stos
mov
pop
jge
lods
decl
aas
in
inc
rolb
test
dec
sub
pop
mov
mov
clc
repz
sbb
dec
sarl
call
mov
jnp
notl
std
adc
push
call
clc
stos
adcl
ljmp
mov
movsb
inc
jne
push
loop
sbb
mov
mov
mov
xchg
call
and
jle
jb
int
xchg
pop
inc
repnz
cld
call
ror
push
adc
int
ficomps
sbb
lods
movsl
lcall
test
ds
ret
sbb
push
sti
cld
dec
sbb
test
mov
scas
sbb
push
ja
or
data16
lock
fistl
xchg
sbb
push
decl
lds
jmp
js
call
and
lock
push
dec
pushl
mov
push
testb
xchg
rolb
xchg
xor
ljmp
stos
cwtl
or
adc
bnd
stos
in
push
mov
std
cmp
and
mov
mov
cmp
jno
decl
stc
fdivl
adc
lods
fnstsw
divb
xor
call
pushl
sub
sbb
dec
mov
pop
pop
outsb
sub
test
push
ljmp
cwtl
dec
cmp
imul
scas
cmp
jne
les
js
daa
xchg
cmp
aas
xchg
pop
rol
dec
lcall
decl
mov
leave
cmpl
fmul
jb
cld
imul
pop
or
mov
push
xor
test
inc
cmp
scas
fsub
bswap
pushf
adc
jg
nop
shll
jmp
out
popf
sbb
cmp
jno
dec
les
ret
scas
or
jmp
cmc
inc
or
add
cmc
aam
add
mov
add
mov
pop
sub
sub
int3
jmp
or
and
ss
mov
cli
incl
xchg
ret
sub
cltd
xlat
xor
pop
or
lcall
mov
inc
cmp
mov
mov
js
aas
lret
call
lcall
sarl
pop
out
fistpll
jle
mov
testl
inc
and
fisubl
std
dec
and
jns
push
imul
out
and
popf
fistps
ret
mov
call
jl
jl
out
enter
arpl
mov
mov
xchg
jne
jns
hlt
lahf
add
in
mov
subb
add
xor
loope
test
dec
jnp
adc
or
insb
int
test
fldt
mov
aam
es
adcb
dec
sti
aas
xlat
jmp
mov
sub
cmp
mov
xor
xchg
mov
pop
daa
fmuls
push
pop
xor
mov
lock
pop
scas
mov
fucomip
scas
addb
push
lods
sub
ror
cmp
xchg
adc
jmp
sbb
movaps
jecxz
into
add
idivb
clc
call
xchg
jbe
hlt
popa
jge
movsl
sahf
fnstsw
sbb
ljmp
add
and
repz
and
push
bound
ficompl
or
movsl
int3
pop
sub
dec
dec
mov
or
test
jnp
scas
add
jmp
aam
je
sub
push
xchg
addr16
stos
adc
out
sbb
ljmp
daa
lcall
jg
cmp
insb
mov
sub
repnz
les
pushl
scas
cld
inc
adc
adc
dec
pop
jge
xchg
stos
movsl
call
cmp
mov
mov
in
ljmp
push
inc
lret
fidivrs
pop
sarb
or
idivb
push
adc
call
cmc
push
rorb
and
repnz
push
and
out
rcrl
jg
daa
mov
pop
push
push
xor
xor
cmovs
mov
jne
inc
incl
scas
adc
mov
int
out
push
cmp
insl
outsb
pushf
cmc
add
jle
cli
in
fidivrs
arpl
inc
lret
jbe
dec
mov
loope
and
mov
xchg
ds
ljmp
xor
imul
scas
fnstcw
test
es
mov
outsb
hlt
cmp
pop
mov
pushf
mov
xor
jg
fnstsw
dec
lods
int
fs
imul
outsb
mov
call
incl
inc
add
mov
pop
shlb
push
jmp
nop
cwtl
decl
xor
fmul
mov
and
mov
cmp
pop
cmp
ret
out
decl
mov
mov
push
jecxz
ds
in
add
data16
jecxz
pushl
mov
test
jbe
lcall
inc
cmp
cmp
xchg
inc
push
test
adc
adc
lcall
sub
and
lods
test
psllw
les
dec
ja
sub
gs
jmp
jg
stos
fistpl
in
out
and
out
stos
imul
decl
mov
add
mov
pop
test
cmp
repnz
aam
mov
jnp
adc
pop
dec
or
adc
movsb
sub
or
incl
jbe
lods
test
lret
xchg
mov
outsb
out
dec
mov
ljmp
sub
mov
fcoms
xchg
mov
lahf
dec
arpl
xchg
lret
mov
jmp
out
js
movsb
xor
nop
add
lea
je
es
idiv
ljmp
sti
scas
push
and
movsb
pushf
test
add
mov
clc
jecxz
stos
lcall
pop
or
dec
and
or
mov
call
loopne
lods
push
repz
insl
push
cmp
or
xchg
outsl
rcll
das
ljmp
js
orl
js
cmp
cmp
pop
cli
cmp
add
das
hlt
incl
sahf
add
lret
fsubr
stc
gs
int
sub
push
xchg
sbb
sub
call
mov
es
insl
adc
stos
fs
mov
mov
or
xchg
mov
cmp
aaa
cli
incl
adc
or
and
iret
cwtl
mov
push
mov
outsl
cld
outsl
shll
push
push
sub
sbb
jg
xchg
pop
sub
mov
mov
or
stos
mov
jae
decl
push
or
mov
sbb
pop
fists
jno
adc
dec
pop
sahf
bound
mov
in
xchg
mov
cmp
das
push
cmp
sub
mov
dec
decl
call
adc
out
push
pushf
push
xchg
pop
divb
jmp
clc
aas
in
jecxz
mov
push
movsl
pop
stc
mov
test
pop
insb
xor
xor
and
cltd
call
lcall
jge
ljmp
cs
sbb
cmp
sbbl
aaa
clc
jg
push
mov
js
iret
mov
stos
jns
pop
test
pushl
adc
mov
aas
out
and
test
and
xchg
lret
les
jmp
es
push
inc
cmp
loope
inc
cmpsb
std
sbb
or
insl
xor
cwtl
movsb
pop
jno
pop
push
push
cmc
xchg
mov
xor
jge
jg
iret
sbb
mov
rcrl
add
ret
push
pop
sub
push
das
lock
outsl
sub
jp
ss
sub
or
insl
and
rolb
idiv
lcall
sub
add
lcall
insl
lcall
push
inc
fmul
cmp
jg
ljmp
insl
push
sbb
cmp
fxch
int
dec
jbe
gs
xor
mov
cmp
std
mov
inc
aas
xchg
pop
daa
cli
sbb
inc
push
push
adc
das
hlt
mov
adc
negb
enter
imul
incl
inc
inc
inc
cmc
add
jnp
sbb
sub
and
cmp
insb
xchg
stos
aad
push
lret
pushl
push
inc
inc
test
or
outsb
sub
loope
or
push
adc
into
fmul
mov
fildl
jmp
lods
xchg
ret
add
int3
stos
jns
dec
push
dec
pushl
out
push
lods
mov
cmp
enter
cmp
jbe
and
cmc
push
stc
outsl
outsb
mov
fstps
add
out
fsubr
stos
cmpsl
cltd
loop
mov
xchg
gs
iret
xchg
bound
xchg
scas
jne
out
xchg
call
lcall
jo
jmp
cmp
jo
ljmp
mov
outsl
test
in
in
inc
xchg
addr16
or
pushl
inc
pop
loop
push
cmpsl
jge
mov
in
sti
push
out
push
ljmp
incl
pusha
mov
adc
jmp
add
gs
or
cli
mov
leave
sbb
dec
sub
adcl
rcrl
loop
call
xchg
xor
jmp
jecxz
or
mov
pop
mov
lcall
iret
jo
sub
push
jne
enter
fcompl
shrb
cmp
into
and
fucomip
adc
dec
xor
jne
cmp
jnp
cmp
aam
lret
xor
mov
dec
inc
imul
je
pop
cwtl
aas
shrb
ss
jp
mov
movsb
mov
or
in
push
sub
mov
mov
in
jnp
dec
dec
sub
call
and
jae
dec
ja
aad
adc
out
outsb
pop
bound
outsb
add
imul
mov
push
clc
insl
loopne
dec
pop
adc
lods
repz
test
aam
lcall
cld
js
cmp
loope
stos
popf
les
call
imul
mov
xlat
fnstcw
and
sub
inc
into
cltd
pop
mov
xchg
mov
inc
push
cmp
lods
imul
xor
adc
and
mov
and
jle
mov
lret
fidivrl
out
lahf
out
jnp
aaa
jns
pop
and
pop
xchg
in
daa
out
sarl
jmp
fisubrl
push
pop
adc
out
inc
adcb
xor
xchg
mov
daa
std
add
int3
cmp
dec
es
pop
pop
sbb
jecxz
call
fs
fmulp
jl
adc
loop
xor
hlt
cmc
jno
lock
hlt
popa
scas
ret
repnz
sub
mov
call
imul
mov
mov
in
add
push
dec
inc
lods
mov
stos
dec
stos
jnp
sub
movsb
jl
cmp
in
outsl
cld
test
inc
or
out
mov
aas
cmp
lea
mov
pop
dec
dec
lea
mov
push
jmp
aas
dec
lret
hlt
xor
sbb
inc
xlat
sar
in
push
mov
and
push
mov
scas
outsl
mov
sub
ret
pusha
bound
sub
call
mov
stc
jne
jno
cmp
mov
data16
dec
aaa
lret
xchg
hlt
decl
jl
fisubrs
jae
repz
mov
sub
cwtl
push
das
inc
insl
fbld
ljmp
and
mov
push
incb
insl
hlt
fistl
sarl
stos
pusha
jo
pop
call
frstor
js
and
push
dec
cltd
jg
fucomip
out
push
push
mov
dec
loope
pop
test
jg
lcall
cli
mov
fbstp
mov
xor
out
inc
xchg
clc
fldt
cmp
sbb
dec
addr16
lret
jg
adc
dec
cld
dec
loopne
push
mov
xchg
movsl
mov
dec
loope
jecxz
je
mov
sub
decl
in
pop
aad
xorl
sti
mov
shrb
xchg
dec
jmp
dec
pushf
inc
repz
or
jae
aas
out
jge
sbb
mov
rorl
nop
mov
fwait
push
mov
in
lods
pop
decl
and
adc
mov
outsl
mov
jp
add
movsl
fisttps
mov
pop
pop
lret
aas
lcall
jl
data16
pavgw
sub
inc
cli
incl
lret
pop
pop
jge
pop
xchg
mov
or
jb
addr16
mov
jg
call
push
sbb
jns
push
mov
jmp
arpl
inc
call
sub
popf
loopne
in
adc
mov
icebp
clc
dec
mov
and
fcoms
lret
push
movl
inc
dec
cli
insl
xchg
repz
arpl
aas
mov
imul
or
push
ljmp
pop
in
xor
cmpsl
loope
add
xchg
les
or
out
dec
sub
cmpsl
call
add
int3
faddl
xorl
mov
inc
jb
test
lock
jns
mov
push
adc
adc
jo
inc
jp
sub
insb
repnz
cmpsb
inc
push
rcl
shll
les
jae
data16
arpl
xor
pushl
movsb
mov
mov
cmp
in
ret
repz
xor
ljmp
and
popa
std
pop
pop
icebp
lahf
inc
rclb
xlat
inc
loopne
lcall
test
ljmp
xchg
in
jge
mov
xor
adcl
pop
fiadds
xor
hlt
ljmp
fs
or
inc
mov
mov
push
loope
jmp
xchg
xchg
int3
xor
and
fwait
bound
int3
ds
push
jecxz
leave
std
pop
scas
shrl
test
int3
das
adc
cmp
mov
mov
in
mov
fcoml
cld
lcall
cltd
out
sbb
and
jmp
jmp
mov
jnp
ficomps
adcb
rolb
insl
dec
lret
pop
jmp
insl
int
aas
lret
push
in
add
bound
mov
in
arpl
jp
sbb
lods
sub
jmp
jp
hlt
fcoml
lods
jo
das
adc
std
in
cmpsb
and
fisubrs
push
add
std
push
xor
sub
pop
xor
mov
fwait
sahf
mov
mov
call
lcall
scas
mov
stc
xor
mov
rcrb
incl
scas
stos
fdivp
das
jae
in
xlat
sahf
je
mov
or
dec
xor
push
cld
and
inc
pop
sbb
bound
mov
loop
push
cld
mulb
aas
lock
mov
or
call
es
pop
mov
pop
aas
inc
dec
or
inc
cmp
jge
pusha
clc
inc
adc
and
insl
js
mov
mov
sahf
or
hlt
xor
push
daa
in
jmp
mov
std
adc
jle
jb
jns
pop
icebp
add
mov
loope
cmp
ret
sti
enter
addr16
xchg
inc
add
sub
sbb
mov
mov
sbb
in
mov
push
or
dec
pop
addr16
pop
in
cld
inc
cmp
or
decl
dec
xor
jo
jecxz
ss
je
cmpsb
cmpsb
pop
push
or
test
push
lcall
in
or
push
ret
mov
push
adc
cli
decl
sub
outsb
addr16
shll
les
lcall
sub
into
testb
dec
dec
xor
fwait
inc
bound
ds
in
pop
imul
imul
sbb
jb
pushf
lret
push
pop
enter
add
clc
push
jg
lcall
adc
lret
fstp
mov
fidivs
imul
lret
cmc
sbb
lods
incl
icebp
mulb
cmpsb
in
mov
in
cwtl
cmc
in
adc
icebp
mov
and
andb
pusha
mov
mov
hlt
mov
testb
data16
nop
pop
push
mov
push
cltd
mov
lcall
push
ret
test
sub
leave
lahf
cmp
rorb
cli
lcall
test
pushf
pusha
jecxz
mov
sbb
sbb
out
scas
or
das
js
dec
pushl
std
ret
dec
rcr
test
out
and
rorb
adc
xchg
xor
scas
aad
je
dec
clc
call
dec
aas
mov
test
sub
notl
stc
in
pop
pushl
cmp
dec
add
push
adc
movb
dec
jns
cmp
movsb
sub
add
leave
push
mov
enter
test
in
xchg
in
sqrtps
inc
jl
mov
inc
roll
pushf
dec
sub
sbb
out
in
fidivs
add
cmp
outsl
inc
xor
sti
fimull
adc
inc
lret
orl
sarb
sahf
inc
incl
push
jge
xchg
mov
adc
fisttpll
in
add
fwait
loopne
jmp
mov
lret
out
push
add
sbb
xchg
mov
cltd
mov
das
jno
dec
test
cmpsb
or
cmp
call
call
jg
xorb
outsl
add
mov
cmc
adc
mov
mov
decl
jns
inc
sub
daa
dec
dec
clc
mov
iret
out
adc
mov
xchg
fwait
dec
push
cmpsb
int3
add
dec
daa
pop
stos
stc
lret
and
dec
pop
cmpsb
xor
test
xchg
clc
decl
test
arpl
fbstp
daa
or
jne
pop
enter
pop
les
push
outsb
testl
loope
inc
or
jg
ret
mov
ret
mov
sti
shrl
pop
clc
jmp
push
xchg
xchg
jecxz
inc
mov
jmp
sbb
adc
into
cmp
jb
cmp
jnp
jg
decl
adc
add
xor
out
aad
lods
and
jg
out
outsb
xor
jl
pop
inc
cmp
lret
cmpsl
sub
jg
incl
jecxz
push
movsl
gs
sbb
inc
addl
aaa
mov
clc
lcall
imul
fstpl
addr16
lds
dec
pop
adc
pushl
xchg
sub
cmpsb
cmp
adc
xchg
idivl
jmp
iret
jns
pop
int3
popl
inc
rol
idivb
jg
decl
add
test
mov
and
rolb
ds
jl
xor
nop
cli
jg
inc
and
inc
lods
movsb
pushl
out
addl
fistpll
add
arpl
mov
nop
sub
out
xchg
je,pt
jg
icebp
sar
mov
orl
cmpsl
imull
pop
inc
jp
xchg
pop
mov
push
jae
outsl
imul
out
sbb
or
and
jmp
mov
testb
and
test
movsb
ss
jge
mov
dec
decl
dec
and
movsl
les
dec
ficoml
out
cmp
jae
mov
jp
and
add
std
mov
aas
into
lock
ja
scas
or
mov
add
clc
jnp
jnp
adc
or
mov
pushl
sub
sarl
loopne
sbb
cmp
pop
addl
in
sbb
cld
pop
adc
push
fsubs
adc
and
and
sbb
sub
and
jbe
dec
and
pusha
push
jge
xlat
fwait
inc
xor
mov
xlat
enter
push
mov
add
jnp
mov
xor
pop
or
pop
add
test
and
sti
jge
sbb
mov
xor
jmp
jmp
add
xchg
adc
es
jge
cltd
cmpsb
ss
pop
push
mov
decl
sbb
xor
jg
fldcw
jmp
pop
scas
push
lahf
mov
dec
push
push
adc
out
add
rcrb
les
lock
jmp
or
xchg
sarb
cwtl
cs
or
mov
ljmp
jb
jns
out
push
or
addr16
sbb
test
ret
mov
xchg
dec
jle
or
mov
mov
push
scas
loop
mov
adc
or
decl
mov
mov
popf
aas
inc
mov
adc
pushl
in
mov
sub
dec
mov
cmp
add
movsl
cmpsb
push
sub
jp
sub
cmpsb
icebp
ljmp
sub
and
stos
out
pop
into
and
push
push
fbld
int
lods
jae
xchg
push
in
ss
adc
incl
decl
shr
push
cltd
push
fildl
ret
sbb
push
out
and
jg
jge
adc
out
sbb
xor
mul
je
loopne
xor
and
fld
call
outsl
insw
imul
inc
outsl
ss
mov
test
adc
sbb
adc
lcall
mov
mov
cmp
xor
sub
insb
sbb
out
repnz
inc
sar
ljmp
cmpl
sbb
inc
cmp
mov
jmp
popa
sbb
pop
clc
mov
dec
sbb
dec
cs
sbb
repnz
xchg
cwtl
mov
mov
pushl
daa
in
and
inc
pushf
mov
stos
sub
xchg
ja
std
adc
jmp
or
jbe
outsb
xchg
repnz
cld
jbe
push
dec
push
aad
sbb
lcall
dec
add
xabort
sbb
cmpsl
into
pop
stos
add
pushl
subb
xor
roll
clc
cmc
sub
jo
sbb
in
test
cmp
lds
jns
movsl
lods
jne
in
lahf
jne
aam
insb
sbb
sub
movsb
push
jmp
and
sbb
sbb
cs
imul
push
lods
imul
push
jae
add
jecxz
es
in
popa
ret
add
popf
inc
popa
add
pushl
jb
call
push
scas
sbb
mov
out
movsl
es
frstor
sbb
push
xor
sbb
in
add
pop
into
pop
sbb
clc
add
fwait
pop
xor
sub
test
ljmp
int3
outsb
and
mov
mov
push
call
xchg
dec
push
jnp
xor
movsl
adc
fwait
lds
ret
out
cmp
std
decl
sti
sub
fldt
jecxz
adc
push
pop
ds
ja
pop
or
sub
push
dec
mov
icebp
mov
lods
pop
adc
int3
movsl
mov
cmp
mov
imul
lods
and
xchg
das
sbb
ret
hlt
jge
mov
rep
cmp
mov
mov
incl
pop
add
add
out
imul
fcmove
loope
push
repnz
xchg
lcall
sbb
xchg
fwait
pop
mov
adc
popf
nop
mov
jmp
mov
inc
xor
std
lods
mov
ljmp
rclb
jle
sub
and
fucomip
adc
nop
xchg
add
ljmp
mov
sub
pushl
test
inc
in
lret
mov
cltd
iret
loopne
sub
mov
outsb
call
jl
jmp
mov
mov
mov
xor
inc
pop
jae
mov
inc
jno
inc
call
jnp
mov
out
repz
imul
sbbb
xor
cld
push
jmp
mov
xor
mov
sbb
inc
icebp
sub
cltd
lock
cli
decl
shll
fwait
xchg
insb
xchg
cmp
fsubs
add
lcall
xor
rorl
stos
rcrl
test
inc
inc
pusha
push
rcrb
jnp
sub
jecxz
or
loope
sbb
iret
add
call
dec
lods
inc
int
jmp
lret
in
imul
or
loop
mov
cmpsb
ljmp
gs
lcall
decl
pop
aam
dec
fnsave
call
inc
shrl
lea
and
movsb
outsb
push
bound
push
inc
iret
dec
and
pushl
clc
and
xorl
insl
lret
adc
rcrl
shr
les
lret
imul
inc
movsl
stos
mov
push
sti
fstpt
mov
test
std
mov
xor
cmp
inc
in
jmp
in
mov
lret
mov
push
inc
and
jp
xor
xbegin
call
lods
and
sub
mov
or
jnp
xchg
cli
aaa
ret
xor
cmp
push
xorl
sar
mov
sbb
pop
lret
test
inc
fadd
or
and
adc
ffree
enter
movsb
or
ret
sbb
mov
and
cld
push
in
fs
decl
pop
adcb
dec
rcrb
out
cld
iret
sub
sarb
test
adc
inc
xlat
daa
sub
mov
lock
sahf
inc
imul
mov
lret
ltr
filds
xchg
mov
in
adcl
mov
adcl
aas
pop
mov
cmc
aas
adc
insb
addb
and
cwtl
les
lea
call
push
pop
out
fsub
sub
jmp
jo
sahf
push
iret
dec
push
sar
mov
fst
lahf
adcb
sub
fucomip
mov
inc
movb
xchg
sahf
mov
out
mov
shll
hlt
lea
mov
cmp
xor
das
hlt
pushl
std
cli
roll
dec
loope
pop
ss
or
imul
lcall
xchg
popf
ljmp
jp
mov
inc
shll
push
mov
push
pop
es
mov
mov
mov
rolb
mov
in
outsl
cmc
pushl
jg
cmp
bound
loopne
imul
sub
mov
pushl
fwait
dec
scas
mov
xor
data16
jg
lods
dec
movlhps
pop
outsl
cmc
das
cld
clc
sbb
jnp
sar
js
bound
pop
incl
add
nop
dec
jo
add
stos
loope
ja
pop
pop
sbb
mov
sub
pop
push
cmp
insl
ljmp
mov
push
xor
adc
sub
add
nop
jo
stos
test
jae
cld
ljmp
movsl
enter
mov
arpl
test
pop
jbe
sti
jecxz
int
pop
fidivrs
imul
orl
push
leave
cmpsb
inc
push
ss
stos
cmp
mov
clc
inc
ret
fmuls
xor
mov
fsub
clc
mov
daa
imul
bnd
xor
cmc
cmc
nop
mov
sub
or
xlat
lock
insl
inc
adc
jmp
xor
sub
mov
popa
dec
loope
add
mov
pop
ljmp
movb
jno
int3
and
xchg
aas
or
popf
jo
leave
ljmp
mov
mov
mov
cmp
inc
icebp
cmpsl
mov
sub
mov
call
mov
sbb
test
cwtl
jne
push
sbb
push
or
or
ljmp
pop
inc
dec
mov
out
mov
je
cmpsl
mov
pop
adc
jo
lcall
sbb
cs
mov
clc
orl
push
outsb
mov
pusha
xchg
ljmp
sahf
test
jmp
mov
inc
adc
imul
imul
xor
cmc
leave
xor
shrb
inc
or
clc
shlb
lret
test
jbe
inc
sar
add
test
fnstsw
cmp
inc
jge
jnp
cmp
lds
call
sarb
push
dec
lock
shll
pusha
loop
cmp
cmp
dec
icebp
call
cwtl
cld
sbb
stos
add
lret
call
mov
ljmp
loop
movq
pop
lods
sub
cmc
mov
out
jle
mov
outsl
out
mov
or
loope
mov
inc
push
cli
in
incl
jle
xchg
sbb
sbb
or
mov
lsl
dec
je
roll
push
pop
push
ljmp
push
xchg
fs
pop
mov
jge
dec
ret
and
xor
std
push
cs
dec
and
dec
mov
or
pushl
add
pushf
cs
push
pop
outsl
add
xlat
and
idiv
decl
insl
sub
rol
lcall
out
push
nop
push
movsb
mov
mov
mov
jmp
int
andb
inc
cmc
pop
mul
test
pop
rolb
cmp
jg
lods
cmc
aaa
mov
xchg
jmp
adc
popa
mov
cmpsb
test
incl
push
inc
loopne
dec
mov
in
xor
cld
mov
mov
fistl
int3
test
stos
pop
movsb
mov
mov
xor
decl
cld
lods
and
fidivrl
mov
push
ja
fbstp
dec
cwtl
test
ror
sub
decl
cld
incl
lea
shr
ds
shl
xchg
rcrb
add
push
xchg
ss
mov
pop
sub
xchg
jg
jp
jl
dec
adc
push
popa
aam
outsl
hlt
imul
pop
sub
shlb
pop
dec
xchg
in
lods
mov
inc
cwtl
loop
mov
inc
repz
lods
lret
adc
call
and
push
dec
cmpsl
xlat
ds
jl
test
lods
call
push
loopne
inc
dec
jecxz
dec
push
outsb
mov
ss
rcll
mov
or
push
xchg
hlt
outsb
add
rclb
pusha
ja
push
adc
call
pop
mov
iret
cmp
lret
ret
mov
mov
xchg
mov
in
sar
or
mov
adc
lcall
lcall
cmp
mov
or
mov
mov
pop
push
jmp
jmp
jmp
jmp
sbb
pusha
dec
push
pop
xchg
adc
jle
jge
mul
mov
or
insl
push
pop
cmpsb
adc
fdivl
ljmp
pop
repnz
cmpsl
hlt
fsubs
je
mov
es
cmp
or
pop
aaa
clc
decl
pop
xor
cmc
mov
fcoms
jno
add
incl
out
dec
repnz
mov
ljmp
aam
sarl
pop
cmp
or
or
xchg
jae
ss
inc
mov
pop
out
icebp
pop
mov
inc
jne
push
push
jle
fsubl
aad
icebp
in
lcall
lea
xchg
pop
jo
jl
sub
test
gs
loopne
das
cmc
mov
shl
dec
daa
xor
mov
mov
das
mov
mov
mov
mov
lcall
dec
jle
hlt
fdivr
or
arpl
fbld
mov
imul
mov
hlt
sbb
sub
sbb
sbb
push
and
sar
push
incl
push
fs
gs
pop
mov
rcr
mov
out
jbe
aam
jae
mov
push
popa
cwtl
andl
outsb
jbe
inc
test
cmc
push
aad
cmc
sysexit
lea
fucom
stos
sahf
mov
xchg
imul
ss
repz
ljmp
fimuls
dec
dec
xor
adc
fwait
mov
adc
sub
incl
cld
cwtl
scas
xlat
scas
filds
stos
ja
ret
das
insl
subl
inc
cltd
fiaddl
adc
mov
std
sbb
lcall
adc
xor
out
or
jno
call
mov
pop
xchg
cwtl
pop
pop
stos
std
or
addr16
decl
insl
movsb
inc
push
jne
jg
inc
mov
jg
test
ja
incl
and
repz
movsb
dec
mov
mov
bnd
mov
pushl
cltd
mov
jmp
aam
inc
sbb
inc
sub
push
inc
mov
call
fildl
mov
inc
cs
repz
lods
nop
mov
repnz
fwait
jmp
xor
pushl
sub
jo
pop
xchg
jg
int
cmp
clc
aam
adc
sar
decl
ret
xchg
imul
inc
imul
mov
mov
xor
cmp
movsb
xor
mul
push
pushl
push
outsl
sub
dec
cmpsb
jne
sahf
mov
insb
mov
sbb
fistl
ljmp
ljmp
scas
xor
andl
and
sub
rcr
ljmp
mov
ret
inc
and
imul
sub
mov
sbb
xlat
cli
pop
loopne
dec
jp
mov
mov
sub
aas
mov
fidivrl
cmp
xchg
nop
pop
add
jnp
xor
setae
std
pop
dec
aam
cmp
fucomip
lret
cmpsb
xor
jmp
dec
int3
insb
jnp
aam
xchg
pushaw
adc
incl
jecxz
fwait
dec
xchg
jne
lea
push
lods
cltd
data16
ficoms
adc
outsl
icebp
mov
ficompl
pushf
jno
call
stos
fnstsw
or
loopne
out
xor
test
mov
adc
stos
push
xor
ljmp
mov
cmp
push
fisttps
ljmp
divl
icebp
testl
jle
add
loop
sbb
push
cmp
lcall
mov
ret
aad
lea
clc
cmp
mov
mov
sub
lcall
stos
xor
lahf
mov
out
add
push
sbb
loope
aaa
fdivrp
inc
pop
clc
jno
or
sub
xchg
xor
fidivs
inc
push
int3
mov
test
sub
call
call
lcall
idivl
xchg
cmp
in
into
mov
cmp
cmp
inc
mov
sub
insl
out
sub
out
fwait
inc
aas
call
mov
xchg
mov
js
mov
std
in
repz
lods
in
pop
push
pop
mov
fwait
xchg
ret
rclb
lods
call
aad
mov
fwait
ss
fnstcw
loope
xchg
shrb
or
jmp
xor
mov
ja,pn
icebp
dec
pop
mov
sbb
xor
frstor
or
stos
js
or
inc
pushl
out
cmp
hlt
daa
aaa
push
shll
fsubrs
hlt
lcall
testl
add
data16
pop
das
daa
xchg
adc
call
jno
out
stc
in
pop
jg,pn
mov
mov
jno
adc
cmp
cmc
jg
call
xchg
cs
aas
loope
jl
xlat
xor
adcb
xchg
test
std
inc
cmpsl
subb
out
jecxz
decl
stos
popf
or
jle
fstpl
mov
loop
loop
enter
xor
and
adc
decl
fistpll
mov
enter
jae
cmp
sar
push
mov
and
lock
sub
add
inc
iret
adc
push
aaa
mov
sbb
sub
call
cmp
push
incl
icebp
and
xor
fs
stos
mov
pop
bound
call
lea
popa
jl
mov
dec
and
loope
xchg
push
inc
and
sub
ss
ljmp
repnz
mov
popa
in
sbb
add
call
and
ret
xchg
aam
shrb
lahf
sbb
pop
arpl
sbb
and
les
fnstsw
dec
jg
jb
xchg
loope
jno
jp
jg
xlat
jge
xchg
cmp
cmp
pop
adc
dec
and
call
mov
xchg
inc
dec
xchg
imul
filds
sarb
pop
ljmp
lsl
push
mov
pushl
cltd
inc
in
adc
xchg
jo
cmp
fdivs
jbe
ja
mov
cmpsb
rolb
push
xchg
push
out
mov
aam
mov
jbe
dec
pop
call
call
fwait
loopne
push
ret
dec
add
mov
jns
and
scas
testl
fisttpll
xor
push
xorl
jecxz
mov
data16
or
or
dec
lret
sub
inc
call
mov
enter
jae
xlat
mov
repz
jg
in
dec
loop
ret
mov
ljmp
mov
fdivp
repnz
out
lahf
sbb
dec
shld
jo
fistl
inc
clc
mov
shlb
addb
outsl
cmc
and
push
xchg
nop
fcoml
dec
add
adc
jmp
sarb
ret
lcall
mov
xchg
add
roll
mov
je
out
int3
roll
outsl
hlt
or
out
stos
cmpsb
or
adc
inc
int3
sbb
mov
loopne
icebp
jg,pn
pop
or
pop
mov
aas
jmp
sbb
nop
cli
or
ret
cld
loop
call
sbb
mov
and
mov
mov
or
inc
rcr
addl
iret
push
loopne
lcall
push
es
insb
jno
arpl
scas
mov
pusha
cmp
ljmp
or
jo
int
cmp
sub
add
and
ficomps
adc
mov
incl
bound
loopne
js
dec
xor
imul
mov
call
das
test
cmovbe
pop
fldenv
loope
jl
pushl
je
sbbl
out
js
iret
popf
inc
xchg
xchg
nop
add
das
std
jmp
dec
sbb
shlb
leave
push
xor
sub
lret
mov
or
cmp
pslld
aas
call
ffreep
test
data16
lods
int3
push
aas
popa
icebp
adc
add
jbe
dec
fsubrp
fdivrp
push
pushl
sub
adc
fdivs
jmp
stos
inc
fnstcw
mov
lcall
add
setp
idivb
ja
push
test
incl
pop
outsl
cld
out
add
push
loopne
sub
xor
inc
mov
mov
outsb
mov
repnz
decb
inc
aas
incl
loope
sbb
mov
jb
mov
dec
add
mov
mov
rorl
jo
subl
xlat
jns
lea
cmp
clc
gs
cmp
or
inc
and
inc
xorb
xlat
in
lea
sbb
sti
sub
xor
jne
fsubr
call
or
inc
or
out
or
movsb
movsb
hlt
jg
pop
cmc
outsb
mov
mov
pop
push
ret
ja
repz
xchg
mov
sarl
idiv
jg
loope
lahf
mov
data16
lods
xchg
inc
add
popf
js
or
lods
cmp
mov
push
mov
adc
lods
in
mov
xchg
ljmp
mov
jp
adc
push
adc
adc
daa
subl
pop
cli
stc
pop
push
rclb
pop
int
sub
push
lret
outsb
mov
mov
push
sub
test
shl
cwtl
ljmp
lcall
adc
push
aas
xchg
jmp
jge
sbb
inc
ljmp
ljmp
mov
mov
dec
pushf
rol
mov
mov
jne
or
repz
mov
xchg
fadd
and
mov
push
into
call
out
in
ja
movsl
push
pop
inc
add
dec
cmp
imul
fwait
push
frstor
mov
lcall
sub
ss
in
mov
fisttpll
mov
ret
jmp
shll
add
mov
push
faddl
cmp
jg
sub
test
mov
push
xlat
ljmp
dec
jnp
mov
fs
push
sahf
icebp
xor
push
sub
sbb
mov
imul
int3
test
fdecstp
lds
outsl
aas
push
scas
outsl
icebp
dec
insl
sti
add
rclb
int3
jbe
pop
out
mov
mov
into
sbb
jmp
xor
shll
mov
arpl
cli
call
out
lcall
out
test
test
sbb
lock
rcrb
fucomip
call
xor
int3
mov
inc
jle
sub
xor
test
cmp
mov
push
outsl
push
jns
mov
mov
xlat
pop
jge
mov
sub
xor
and
xor
pop
mov
in
xor
out
pop
cmp
push
cmp
imul
sbb
adc
fimull
les
pushl
jb
loop
sub
pop
loope
jne
out
cmp
jno
mov
pop
addr16
icebp
push
pop
cmpb
imul
ja
lcall
insl
mov
incl
ss
cltd
xchg
gs
xor
mov
lcall
inc
cmp
mov
pop
sub
jp
dec
cmpb
outsl
hlt
mov
pop
sbb
pop
cmp
les
popa
testl
movsl
ret
test
sub
pop
jbe
les
pop
sub
inc
ljmp
sarb
outsl
cld
in
lret
push
xchg
inc
ljmp
add
and
fildl
int
fldcw
mov
mov
adc
lcall
jmp
outsl
jo
out
repz
xor
outsl
pop
fdivrp
mov
inc
mov
add
adc
add
lds
inc
mov
ljmp
mov
adc
loope
mov
adc
dec
pop
int3
and
push
inc
jge
fstl
sub
fs
add
dec
mov
mov
jmp
fs
pop
sbb
addr16
adc
add
mov
push
mov
out
push
js
fucomi
iret
ja
iret
insl
insl
pop
mov
pop
push
cwtl
xor
xor
mov
aad
mov
pop
in
ljmp
movsl
mov
add
push
insl
sbb
movb
shrl
pop
jae
mov
ljmp
fistpl
popf
shrl
mov
div
lret
incl
loopne
jnp
aas
pop
sbb
loop
divb
and
call
jmp
pop
jns
test
sub
movsl
vphaddbd
pop
insl
cli
outsl
lret
dec
cmp
push
enter
movsl
mov
hlt
xchg
pop
insb
aam
das
icebp
xchg
es
sarb
inc
mov
jmp
in
rclb
jg
call
fsts
repnz
out
and
test
pop
frstor
jno
aam
testb
adc
jg
add
adc
or
mov
xchg
pop
int
xchg
ja
imul
push
decl
xor
adc
sahf
push
sahf
shrl
js
mov
cs
jg
pop
ja
or
pop
js
mov
mov
shl
int
scas
popa
mul
inc
divl
jmp
push
jg
or
stc
sahf
mov
inc
shrl
fwait
sub
ljmp
decl
clc
cld
cmp
adc
ret
daa
cli
dec
pop
adc
adc
decl
jnp
cmp
and
scas
pop
jl
cmpsb
jno
mov
xchg
mov
imul
lcall
xchg
ret
test
in
inc
lock
loopne
in
or
sbb
xor
cld
mov
push
fildll
mov
dec
add
outsb
push
ret
inc
add
adc
call
pusha
fdiv
xchg
xlat
dec
sti
bound
insl
or
daa
ljmp
adc
popa
loope
aad
hlt
test
push
loope
and
ja
js
sub
sbb
call
repz
jnp
test
jae
or
xchg
pop
std
jmp
mov
out
push
aaa
daa
xor
jp
popa
jmp
rclb
ljmp
cld
jo
or
cmc
cmp
push
cmpsb
pop
aad
cmp
cmp
pop
sarb
adc
std
dec
in
mov
xor
loop
pushf
mov
or
insl
add
addb
incl
outsl
xor
fbld
cmp
ret
pop
andb
or
jmp
sbb
aas
lcall
adc
loop
fdivrp
inc
adc
mov
dec
inc
mov
mov
filds
fnsave
call
push
dec
mov
sub
xchg
daa
orl
xor
ljmp
cmp
mov
jne
xor
lods
jns
lea
add
pop
xchg
fisttpll
xorb
inc
lret
dec
test
addr16
mov
jp
sahf
aam
out
sbb
or
mov
jmp
adc
or
mov
test
rclw
lret
stos
and
call
aam
pop
aam
daa
addl
test
xor
cmpsl
and
jnp
shrl
add
mov
mov
cmp
inc
incl
ret
pusha
ja,pn
adc
and
sub
cltd
iret
and
mov
push
inc
andnps
incb
in
cmc
push
div
call
add
ja
jmp
jp
mov
mov
inc
lcall
rcrb
sar
pushl
jo
sub
push
push
out
xor
sbb
dec
std
pop
test
fdiv
mov
imul
mov
or
mov
ljmp
adc
popa
repnz
ljmp
jg
or
jo
xchg
sub
in
and
cli
das
int
add
xchg
dec
xchg
or
xor
pop
push
mov
mov
mov
lret
cli
aaa
inc
pusha
xor
addr16
loopne
js
adc
sub
dec
inc
in
jge
movsb
or
mov
push
lea
xchg
cli
mov
in
add
mov
xchg
push
inc
and
fistps
adc
leave
cmpsl
dec
pop
push
ljmp
lret
push
call
push
imul
jbe
ds
mov
fistpl
decl
icebp
mov
shrl
jg
fcmovnb
or
test
ja
fdivl
cmp
incl
jne
add
sub
sbbl
and
ss
jp,pn
add
decl
dec
pop
test
xlat
les
sahf
push
adc
in
adc
hlt
aas
shl
mov
pop
pop
rorb
je
iret
pusha
orb
mov
mov
jl
call
popa
sti
pushf
jns
adc
mul
enter
in
in
xchg
xchg
add
pop
loopne
ds
push
pop
sub
ljmp
mov
inc
or
into
mov
sub
jg
push
pusha
loop
cli
cltd
xchg
mov
call
pop
dec
cmpsb
idiv
mov
mov
icebp
add
fidivs
call
ja
inc
lods
or
ljmp
pop
xchg
mov
push
xorb
scas
push
push
add
sbb
int
xchg
add
jle
push
pop
outsl
jle
jg
in
jmp
divl
xchg
ja
imull
stc
add
lcall
and
inc
xor
xchg
out
mov
adc
mov
call
pop
adc
sbb
push
inc
jecxz
jmp
push
xor
out
in
sbb
fucomip
shr
or
test
lret
mov
decl
mov
movsb
dec
aam
leave
inc
xchg
out
shl
cmpsl
jno
cmp
mov
push
inc
mov
add
add
je
inc
mov
icebp
lcall
jmp
test
and
add
add
pop
ljmp
mov
test
hlt
cmp
cwtl
mov
call
ds
mov
lret
movsl
pushf
daa
movsb
insb
xlat
cmp
inc
mov
and
pop
push
mov
mov
mov
jp
push
xor
fcompl
mov
push
in
or
adc
int3
pushf
xchg
mov
das
adc
dec
daa
scas
fucomip
daa
nop
pop
mov
movsl
enter
xchg
mov
repz
add
decl
movsl
xchg
cmp
mov
sbb
pop
mov
cmp
or
fistps
mov
pop
dec
pop
xchg
rcl
mov
inc
inc
xchg
inc
lods
ret
jp
call
lcall
ss
movsb
mov
jo
jge
jecxz
ljmp
sar
incl
scas
fsub
adcl
cld
stos
dec
xchg
test
out
push
pushl
in
push
fdivrl
in
lods
xchg
jbe
or
and
mov
xchg
inc
stos
dec
cmp
adc
test
cli
jmp
jo
sbb
filds
inc
lcall
inc
sahf
outsl
icebp
cmp
push
add
sub
lods
mov
popl
inc
fisubrl
and
mov
inc
out
mov
loopne
nop
daa
or
fsub
test
fisttpl
stos
popa
xchg
data16
mov
push
mov
pop
test
test
dec
rol
aas
mov
pushl
dec
imul
dec
mov
jmp
adc
dec
or
push
jmp
int
cmp
rcll
dec
mov
xchg
pop
call
sbbl
stc
add
cs
mov
xchg
fidivl
jns
sub
repz
jmp
dec
mov
xchg
rorb
sub
jecxz
sbb
mov
and
cmp
jl
ja
cmp
rorw
imul
xchg
popf
jne
push
in
test
jmp
sbb
test
sbb
jg
incl
sub
xchg
inc
lods
sub
mov
xchg
mov
into
lret
imul
sub
jge
add
jmp
call
enter
mov
xor
adc
aaa
mov
out
mov
loop
in
popa
xor
test
bound
cmp
decl
mov
shll
mov
add
mov
and
test
incl
xchg
aas
pop
arpl
mov
mov
cmp
fsubl
push
fs
mov
push
ljmp
popa
or
jmp
mov
popf
movsl
jmp
or
mov
popa
jg
call
mov
pop
pushf
popf
gs
xor
test
fdivr
aad
mov
lcall
sub
sti
mov
mov
or
mov
pushl
scas
push
xor
jecxz
mov
fwait
icebp
inc
lret
faddl
push
repnz
mov
cmp
das
and
fistpll
cmp
ror
cltd
mov
cmc
jg
xor
or
aaa
cld
fildll
aam
js
scas
cld
sub
xor
popa
sar
push
lcall
inc
xchg
ss
jo
sbb
aas
sub
cmp
incl
push
movsl
aaa
aam
xlat
in
jl
jle
mov
add
mov
cmp
pushf
sub
jecxz
sub
daa
sbb
insl
mov
popf
sub
pop
xor
mov
mov
divb
icebp
stos
jl
pop
push
daa
jl
cltd
adc
decl
mov
sub
xchg
sbb
add
popf
push
sbb
xchg
rclb
pop
xchg
gs
push
adc
dec
scas
cmovno
mov
cltd
lcall
adc
xlat
nop
outsl
dec
loop
push
adc
lock
cmpsl
mov
push
test
lds
decl
pop
inc
jecxz
insl
or
pop
cwtl
imul
cmpsb
insb
and
pop
xor
inc
in
push
ret
call
lret
add
pop
aam
jb
jp
mov
jecxz
dec
nop
pushl
mov
jecxz
rclb
dec
adc
dec
xor
notl
sbb
hlt
rolb
pop
pop
fmuls
js
into
loop
mov
cli
jl
jmp
mov
adc
cltd
and
fistpl
jae
nop
sbb
or
test
bound
mov
call
mov
dec
ds
rorb
das
popa
mov
fnsave
pop
js
lock
add
call
decl
stc
xchg
jge
cmpsl
pop
loop
imul
mov
fdivrp
or
mov
cmp
add
sarb
decl
or
and
pop
adc
mov
sahf
dec
sub
inc
and
fisttpl
jbe
ljmp
sti
rol
icebp
mov
hlt
lcall
mov
xor
mov
pop
inc
adc
pop
jmp
dec
popf
cmp
mov
ss
lret
dec
les
mov
jmp
ds
sbb
scas
xorl
mov
fisttpl
inc
dec
lcall
sub
popa
fcmovu
subb
sti
cltd
inc
push
sti
and
or
mov
stc
pop
sub
call
cmp
scas
xlat
xchg
adc
test
fnstenv
add
movsl
push
out
xchg
sub
push
int
rolb
xchg
xchg
cmp
push
incl
popa
xchg
push
cmp
cld
sbb
popf
fcmovb
testl
xchg
sub
inc
aaa
cli
inc
sahf
cmp
mov
in
cmp
test
loope
jg
cltd
add
push
xlat
add
repz
cmp
lret
mov
fidivl
xor
out
push
sub
or
lahf
mov
inc
enter
cmp
jl
lock
jmp
pushf
adc
adc
jg
or
lods
das
add
call
dec
or
test
lcall
call
pop
out
ficoms
cs
dec
push
mov
mov
arpl
dec
cmp
daa
xchg
pop
es
mov
cmp
push
out
sub
in
icebp
dec
fadds
jl
push
lods
mov
test
dec
pop
pop
inc
outsb
mov
inc
xchg
pop
push
leave
fstps
push
push
mov
mov
fisubl
add
mov
mov
decl
add
inc
divl
mov
loop
xor
movsl
pop
into
insb
inc
lock
xchg
mov
aaa
and
mov
mov
shr
gs
cltd
rcll
and
ja
lods
push
add
ror
rorb
dec
imul
fadds
jmp
inc
ds
xor
pop
dec
lea
movsb
jl
call
in
or
push
push
scas
cmovp
cmc
xor
mov
or
sbb
das
add
mov
adc
daa
xlat
and
lds
call
sbb
cli
xchg
dec
test
sub
mov
cld
jns
or
cli
lcall
fstps
cmpsb
cli
xor
lret
push
push
mov
adc
inc
jmp
incl
decl
das
stos
and
into
jbe
fisubrs
xchg
push
sbb
jmp
sub
ret
insl
fbld
cld
sub
and
rcrl
ss
ret
push
dec
fs
cld
or
movsb
loope
cli
int
inc
xchg
repz
mov
jbe
in
xor
shl
decl
add
pop
xor
mov
sub
inc
sub
lock
outsl
hlt
inc
push
ja
gs
cmp
jne
ficoml
into
outsl
std
lods
cltd
movsb
repz
leave
mov
dec
in
mov
dec
inc
sbb
push
inc
icebp
jmp
insl
add
je
pop
test
inc
push
pop
andb
xchg
push
jg
xlat
sbb
movsl
inc
add
push
out
sub
loope
and
sub
cmc
test
shlb
decl
shl
jno
push
mov
mov
add
aaa
shr
clc
xor
je
addr16
call
stc
pop
push
in
pushf
add
xor
cld
lcall
xor
nop
mov
icebp
icebp
cmpsl
mov
push
push
cli
or
xor
jb
lea
mov
mov
fisubrs
in
lds
mov
inc
mov
das
jmp
mov
repz
lods
fldcw
lret
lea
mov
cli
in
lea
call
dec
inc
cmp
push
push
sbb
fildl
mov
jp
pop
clc
lods
decl
out
lret
adc
dec
jb
lahf
stos
data16
mov
xlat
xor
mov
jge
es
mov
and
xchg
out
lods
addr16
pop
push
bound
sar
lcall
jmp
cs
xchg
jge
stos
insb
pop
lcall
mov
push
inc
or
clc
test
mov
xor
fdivrs
test
incl
inc
inc
push
pop
lds
add
mov
push
dec
dec
ljmp
mov
repnz
aam
sub
es
incl
sbb
repz
inc
adc
lret
push
mov
sub
movsl
xchg
rol
ljmp
test
xchg
xor
adc
insl
mov
leave
andb
incl
rep
sbb
xchg
or
push
and
jns
mov
and
sub
repz
in
sub
add
mov
decl
std
sbb
mov
daa
stos
cmp
insb
out
and
test
and
fcompl
adc
pushl
xchg
mov
or
ja
pop
add
ds
fs
stos
push
sub
mov
rol
cmpsb
lea
clc
mov
maskmovq
mull
mov
incl
ljmp
push
push
dec
test
jbe
xchg
ds
sub
iret
inc
or
fcompl
jmp
xchg
insl
mov
adc
sbb
std
jecxz
pop
clc
adc
xchg
and
insb
sub
idivb
movsb
sbb
jg
xchg
gs
out
xor
shrb
cmpb
cs
cmc
ljmp
inc
leave
icebp
push
lock
dec
jg
push
mov
cmp
stos
in
cltd
rcrb
int
in
push
inc
bound
cmc
loope
sub
cmp
incl
add
and
mov
xchg
repz
fisubrl
jmp
clc
push
sahf
xchg
lahf
sub
pop
sbb
adc
pop
cwtl
mov
pushf
add
xor
sbb
ficoms
push
mov
pushl
jl
jge,pn
mov
in
pmaxsw
stos
xor
nop
sbb
sahf
mov
jmp
call
test
mov
dec
sbb
mov
xor
arpl
add
mov
and
dec
push
cmp
sarl
pop
cld
pop
and
sbb
loop
lcall
std
jns
xchg
addr16
mov
sahf
mov
xor
jno
std
mov
mov
cmp
sbb
in
ret
xor
dec
cmp
cmp
ret
mov
adc
jmp
es
jg
test
lock
outsb
outsl
push
sub
and
test
fldl
idivb
ljmp
dec
push
jmp
adc
and
add
lahf
hlt
es
inc
ja
inc
cltd
mov
dec
xor
sbb
data16
push
rcrl
sbb
jg
sarb
push
mull
and
and
icebp
in
adc
cmpsl
outsl
add
add
sub
cld
shrb
add
jnp
in
push
pop
popf
pop
lds
mov
lds
shlb
xorl
pushl
stos
and
sub
pop
push
fstpt
sub
dec
std
cld
push
in
or
inc
call
aaa
push
sbb
pop
incl
dec
or
mov
inc
cltd
sbb
sahf
or
scas
jbe
mov
mov
leave
fdivrs
gs
pop
jle
in
dec
or
push
in
push
mov
jg
cli
xor
in
mov
adc
push
mov
add
shlb
push
inc
pop
cmpsb
js
gs
into
pop
sub
cmp
add
add
dec
shrb
dec
cmp
pop
mov
loopne
pop
jno
xchg
adc
daa
add
sbb
out
push
in
call
sbb
add
iret
arpl
adc
inc
dec
inc
sbb
fs
stc
inc
mov
mov
mov
rcll
inc
das
pop
cli
jg
dec
fwait
leave
push
stos
cwtl
lods
sbb
xchg
mov
insb
loop
cmp
xor
std
jmp
cmpsb
jmp
xor
sub
in
rclb
flds
mov
push
xchg
jmp
adcb
or
xchg
sarl
inc
hlt
mov
icebp
xchg
pop
pop
mov
jge
cs
mov
mov
jmp
mov
xor
mov
jg
popf
arpl
dec
xor
int
jp
sub
sub
idiv
sbb
jmp
inc
push
in
mov
leave
jno
repz
lahf
lods
jb
lcall
jmp
push
lds
pop
sbb
mov
ds
and
dec
icebp
nop
gs
cld
jne
cli
jmp
or
mov
movsb
nop
jmp
arpl
mov
jmp
adc
cltd
loop
mov
jecxz
xchg
scas
fsubs
mov
cs
push
cmpsl
ja
test
cmc
jg
outsb
idiv
fcmovnbe
cwtl
xchg
adc
dec
aas
aas
call
scas
push
adc
ljmp
incl
fwait
imul
repz
or
fnstenv
push
loopne
pop
loop
mov
arpl
and
mov
push
or
dec
aad
loope
cmp
incl
popa
shlb
or
push
ficomps
jne
shrl
sar
mov
jle
out
in
imul
aas
lahf
mov
cld
and
fs
enter
dec
cld
cwtl
fucomp
push
lret
or
insb
mov
std
adc
aas
scas
outsl
out
push
pop
shlb
rorl
ss
add
jmp
ret
sbbb
jae,pn
jmp
test
lds
cmc
jne
push
push
aam
pusha
fs
cmpb
dec
leave
fisubl
jae
adc
jmp
cld
int
aas
dec
hlt
inc
ss
cli
movsb
mov
jle
mov
mov
cli
cmp
pop
sbbl
outsl
lock
fidivrs
lret
lea
push
leave
sbb
adc
push
pushf
aam
cmp
lret
pushl
fists
jle
mov
or
and
dec
jecxz
add
pop
loop
call
jl
push
and
inc
pushl
cmp
add
or
pop
push
ret
int3
push
xor
dec
das
cmc
jmp
mov
add
lret
in
not
inc
cli
jmp
jg
fwait
arpl
pop
push
and
jbe
mov
sahf
aam
pop
popf
adc
jg
call
mov
pop
stos
sbb
inc
out
cmp
ljmp
cmp
cli
adc
xchg
pop
sbb
out
lret
cmp
clc
adc
cmp
pop
cmp
adc
inc
push
jmp
mov
add
and
mov
cs
jmp
movsb
and
ret
mov
lock
cmp
call
jmp
shl
in
or
xlat
out
jle
loop
inc
cltd
insb
jb
cmp
cmp
mov
pop
cs
scas
cltd
pop
pop
pop
mov
and
call
inc
insb
sbb
loop
adc
les
fldt
aam
add
jne
sub
in
mov
aam
lcall
cmp
or
mov
stos
cmpsb
add
call
out
aad
imul
pop
clc
stos
sub
mov
iret
sti
push
in
xor
or
mov
and
shr
ret
adc
out
cli
repz
dec
push
xlat
out
mov
mov
sbb
xchg
cmp
ljmp
pop
stos
cmp
xchg
mov
add
jmp
lcall
js
mov
stos
and
cmp
or
mov
mov
jl
ljmp
xchg
inc
insb
sbb
aaa
rcrb
sub
dec
mov
loopne
jmp
mov
fmuls
sbb
scas
sbb
mov
dec
xor
xor
lcall
sub
dec
sahf
lods
mov
out
push
icebp
das
in
jg
fld
arpl
rcll
addr16
hlt
inc
pop
jno
in
aas
and
mov
fistl
lods
jg
imul
ja
mov
aaa
popf
sub
xchg
push
fwait
xor
mov
popf
sbb
add
sub
lods
or
jg
ret
aam
fdivrl
lds
sub
adc
stos
pop
xor
jle
inc
das
hlt
out
mov
out
add
js
dec
add
jo
faddl
xchg
fistps
leave
cmc
pushl
clc
adc
sbb
in
fldenv
sbbb
outsl
in
fsubl
in
inc
xchg
ljmp
stos
sbb
xor
out
outsb
into
and
dec
stos
fwait
nop
xor
lret
adc
decl
mov
or
out
rcrb
inc
test
cmp
xor
ljmp
repnz
je
lods
fcmovb
push
push
push
ljmp
xor
adcl
adc
insb
dec
inc
fidivrs
cld
mov
jo
push
xchg
xor
pop
sub
sbb
xchg
mov
fwait
adc
leave
mov
lods
cmpsb
pop
adc
lods
test
incl
xchg
mov
add
outsl
icebp
push
cmp
sbb
mov
jp
sub
incl
lods
ret
push
mov
out
imul
dec
cmp
shll
jl
fimuls
pop
jne
cmp
mov
adc
mov
mov
fs
dec
incl
xor
nop
sub
sbb
pop
jle
mov
mov
imul
xchg
dec
sub
decl
push
dec
jecxz
or
movsb
call
jl
add
rcrb
jg
cmp
xchg
sbb
mov
push
mov
out
mov
xor
pop
loop
mov
fistl
pusha
adc
je
fldcw
pop
jg
pushl
cmp
in
fisttps
dec
jge
cmp
or
fistpll
push
and
push
cmp
push
cld
jg
andb
xchg
pop
sbb
xchg
push
mov
sub
insb
mov
aam
cmc
incl
pop
mov
inc
ss
loope
add
loope
lahf
scas
aad
push
pop
adc
out
jmp
leave
pop
cld
push
xchg
call
mov
mov
jns
pop
inc
imul
aad
jno
and
jle
ret
pushf
mov
std
pop
adc
hlt
outsl
icebp
push
mov
push
dec
scas
push
loope
loop
or
pop
ljmp
cltd
xlat
mov
cmpsl
into
test
incl
cmc
fcoms
or
aam
pop
cwtl
adc
gs
frstor
call
lds
mov
lods
pop
mov
mov
in
adcb
adc
decl
in
xchg
cmp
int3
lods
cmp
mov
sbb
ss
mov
js
inc
mov
test
inc
je
inc
aaa
out
lahf
int3
test
jle
jns
cld
test
aam
inc
pop
sub
test
into
mov
xchg
test
sar
cmp
mov
nop
in
inc
lret
mov
cmc
adc
jecxz
lods
and
cli
inc
fucomip
pop
into
add
cmp
cmpsl
xchg
adc
shll
inc
or
incl
push
jp
shr
cmpsl
add
sub
pop
sub
scas
push
mov
lcall
jns
pop
lret
insl
aas
pusha
in
jns
sahf
mov
out
pop
jle
lcall
sti
push
or
xchg
pop
mov
push
shlb
xchg
mov
sbbl
xorl
pop
xrelease
ljmp
aad
add
leave
scas
push
sbbb
fistpll
jecxz
inc
outsl
inc
jns
call
or
into
push
outsb
xor
sub
jo
xorl
pusha
jae
fnstenv
adc
fsts
and
ljmp
jmp
je
jp
rorl
jge
jnp
add
dec
add
ds
push
fstl
sbb
jg
push
xchg
pop
and
add
test
adc
xor
call
lahf
push
inc
mov
sbb
inc
jge
push
push
push
pusha
outsl
loop
daa
dec
sub
sub
pop
mov
mov
or
jmp
popa
xor
lods
insl
les
sbb
push
out
je
clc
xchg
push
in
cld
xor
iret
push
mov
sub
pushf
jne
ljmp
sbb
cmp
lods
lea
mov
outsl
cmp
cltd
xor
mov
arpl
mov
stos
gs
decl
and
popf
pop
add
mov
idivl
dec
xor
and
stos
jg
incb
xor
pop
cltd
push
std
iret
and
stos
pop
jle
push
inc
cmpsb
loop
jno
cmp
or
sbb
jmp
and
scas
icebp
mov
fscale
lret
decl
pop
adc
xor
lcall
or
dec
jp
mov
mov
clc
mov
jmp
pushf
fstps
fs
sub
fiaddl
jle,pn
jmp
daa
arpl
sub
xchg
jae
cmp
in
push
in
lahf
jl
sub
test
xor
sahf
xchg
sbb
shrl
or
sar
inc
xor
adc
andl
dec
pop
fcomip
push
scas
daa
xchg
jecxz
movsb
out
xchg
incl
and
inc
sub
aam
xor
sbb
ficoml
or
clc
pop
decb
fldl
jl
sub
fbstp
mov
push
or
inc
or
rcll
jg
test
fnstcw
sub
rorb
call
imul
jno
pusha
mov
loop
mov
int3
and
sub
ret
dec
add
fs
pop
ljmp
xchg
cmp
sbb
sub
dec
jecxz
js
decl
sub
into
mov
pop
push
mov
jb
cwtl
iret
jl
xchg
addb
out
and
cltd
add
loop
je
sbb
scas
mov
int
lcall
jo
stc
aaa
imul
add
mov
incl
stc
pop
movaps
into
cmp
sbb
push
out
out
xchg
outsl
cmc
call
sub
std
jmp
dec
mov
in
mov
inc
adc
xor
jg
clc
dec
pop
and
orl
jb
mov
and
dec
lods
cli
testl
xchg
test
test
mov
ss
xorb
pop
cli
xor
mov
incl
xor
jne
push
cltd
rorb
pop
out
push
push
cmpsb
lret
pop
push
decl
mov
movsb
jp
aad
xor
cld
jo
push
out
mov
add
push
movsb
jg
and
daa
pop
out
jecxz
adc
cmp
sub
ljmp
push
or
add
push
pop
mov
push
sub
lods
call
jmp
aas
addr16
lods
stos
hlt
fnstenv
mov
lcall
pop
add
rolb
adc
pop
dec
sub
bnd
jp
xchg
mov
pushl
repz
xor
jmp
fcmovne
fcomip
pop
pop
movsl
xor
sahf
mov
paddsb
jnp
aaa
das
lock
call
icebp
mov
addr16
fidivrl
jg
in
std
cltd
stos
mov
stos
sbb
das
fisttpll
jo
insb
add
pushl
add
cmpsl
fsubr
iret
mov
cmp
push
add
call
mull
std
decl
std
dec
imul
test
mulb
ds
cltd
mov
cmpsl
lcall
fsub
dec
fisubrl
adc
call
cmp
loope
rcr
mov
pop
jg
sti
or
dec
cmp
pop
xorb
int3
hlt
lret
dec
mov
or
xchg
es
enter
out
divb
lcall
jnp
out
add
lds
sub
call
jbe
xorl
mov
push
cmp
cmc
jmp
movsb
clc
jle
sub
mov
cmc
bound
mov
xchg
movsl
leave
sti
fsts
inc
pop
cmp
repz
pushl
sub
dec
and
mov
das
lock
ljmp
in
jmp
adc
mov
xchg
enter
pop
mov
inc
call
xor
hlt
shl
outsb
and
clc
jge
sbb
push
mov
pushf
nop
rol
lcall
xchg
lods
xor
xchg
std
ljmp
sub
sub
jb
lret
fiaddl
pushf
xchg
sti
popf
lcall
cli
insb
cmp
xor
dec
inc
decl
push
push
adc
ja
add
lcall
sbb
imul
imul
imul
push
fildll
pushl
sbb
std
loopne
pushl
int3
mov
int3
aaa
hlt
movsb
shll
adc
sub
xchg
pop
or
scas
push
push
or
decl
mov
pop
rolb
mov
test
aad
out
pop
mov
push
ret
pop
shrb
mov
int3
or
cltd
xchg
push
lret
push
inc
pushl
pop
insl
and
and
jmp
jns
les
cmp
pop
mov
cmpsl
ljmp
sub
sbb
and
and
cmp
rcr
js
dec
sbbl
jg
pop
push
or
sub
inc
mov
insb
mov
or
loop
push
pushl
sub
aam
xlat
mov
cwtl
out
or
arpl
jne
xchg
jb
cmpsl
mov
lock
popf
push
push
sbb
lcall
popl
aad
fidivrs
xchg
push
insl
xchg
es
ss
rcl
cld
decl
out
scas
jecxz
add
repnz
xchg
xor
sti
jns
out
mov
idiv
decl
jge
insl
add
das
insl
xchg
push
test
push
scas
cmpsb
pop
adc
cltd
decl
roll
adc
stc
rsm
je
sub
xlat
xorl
hlt
lret
sbb
mov
sbb
movsb
xlat
jg
push
fidivs
test
lret
pushl
sahf
stos
add
aam
inc
repz
jmp
scas
rorl
pop
jae
jg
das
xchg
sub
out
cmp
lods
rorl
cmp
push
stos
decl
lock
adc
adc
add
sub
jmp
xchg
inc
nop
jmp
add
sbb
dec
repz
jbe
xor
ljmp
or
sbb
mov
or
xor
test
cmp
cmp
mov
push
loop
icebp
and
sahf
out
out
sub
add
jp
loopne
rolw
call
and
jp
xchg
add
fisttps
rorl
lcall
out
push
jge
fwait
cs
sub
test
pushf
mov
dec
cmp
ljmp
sub
xchg
inc
dec
xchg
scas
mov
nop
push
mov
push
cmp
jl
incl
mov
fldenv
mov
push
inc
decl
testl
push
sbb
aad
xchg
cltd
dec
gs
call
lcall
xchg
aas
mov
outsl
outsb
sub
call
inc
and
addr16
iret
mov
aam
outsl
mov
pop
nop
out
xor
fwait
mov
mov
mov
cmp
je
shlb
scas
jecxz
inc
inc
cld
jae
test
dec
mov
sub
mov
jle
mov
pushl
mov
je
pop
test
fs
fcoms
mov
nop
jbe
sub
call
xor
test
fcmovnu
push
in
lods
jmp
scas
mov
clc
test
mov
pop
out
loope
pop
bnd
out
adc
mov
mov
stc
dec
test
lret
xor
insl
lahf
ds
fildl
icebp
lcall
inc
jns
stos
inc
mov
and
stos
das
push
cli
push
push
or
ljmp
add
aam
jecxz
pop
inc
push
mov
xor
pushf
movsb
xor
cmp
push
inc
xchg
in
or
jl
sbb
jo
cli
and
imul
or
jle
push
lcall
daa
jns
mov
xor
mov
incl
xchg
insb
les
inc
lcall
mov
arpl
jg
dec
divb
movsb
inc
sarb
push
mov
das
add
loope
mov
mov
pop
test
mov
std
je
jno
inc
push
mov
cmp
and
jp
dec
loopne
sti
pushf
jne
out
lahf
push
out
iret
mov
sub
mov
gs
gs
std
jp
dec
movsl
push
mov
mov
mov
cmpsl
jo
ret
popf
out
inc
pop
sbb
lock
lcall
dec
mov
cs
repz
sub
popf
inc
mov
jle
sti
or
sub
jae
rclb
inc
jno
fucomip
jg
or
add
fidivs
sbb
rclb
decl
test
stc
sbb
sub
inc
xor
fwait
sbb
fsubp
xchg
imul
mov
push
mov
and
jg
aam
rcll
mov
jg
inc
and
gs
repz
jno
add
dec
jno
inc
jge
mov
test
xchg
loopne
adc
in
sar
jbe
and
mov
sub
stc
xlat
jbe
mov
cmp
lret
dec
lcall
mov
mov
adc
stc
and
roll
stos
icebp
and
ljmp
fildll
inc
dec
mov
mov
neg
and
xchg
mov
ljmp
repz
xchg
or
lock
jns
mov
fisubl
adc
or
jmp
adc
pushf
push
sarb
stos
push
push
sarl
xchg
and
out
dec
pushf
add
jmp
or
ret
rol
fsubs
add
aad
or
mov
sbb
jp
incl
iret
mov
aaa
adc
stos
mov
ds
sar
das
icebp
inc
dec
lods
aam
mov
aad
scas
imul
fcoml
mov
lock
pushl
jno
mov
lret
sarb
xor
mov
adc
lea
dec
int
pop
jne
push
mov
jle
push
mov
pop
inc
cwtl
call
mov
jl
ret
inc
jmp
outsl
mov
sbb
push
stc
sub
sub
jg
push
cmp
mov
pop
dec
scas
inc
lods
xor
repz
std
test
mov
push
jnp
js
mov
or
js
or
push
mov
loop
xor
decl
pushl
jo
sub
hlt
jle
pop
les
xchg
sarl
pop
cli
fisttpl
push
pop
sbb
cmp
aaa
jb
jns
sub
fwait
jl
ljmp
jg
int3
or
fdivrl
sti
xor
mov
jnp
ret
fdivr
fdiv
decl
xor
icebp
ja
jp
iret
mov
loop
cltd
xor
mov
dec
mov
repz
cld
shll
sbb
data16
cld
sbb
dec
ljmp
mov
mov
xor
or
es
fistps
cli
mov
dec
neg
mov
sti
sarl
jecxz
jecxz
jnp
bound
call
mov
shlb
shr
lahf
clc
dec
sub
lea
dec
jge
lods
sub
daa
jg
outsl
hlt
and
mov
sub
xor
sub
inc
lock
in
hlt
xchg
clc
cwtl
js
ds
and
sahf
ljmpw
mov
cmp
sahf
loopne
decl
movsb
leave
insb
mov
mov
addr16
xchg
xchg
sub
lahf
cmp
or
mov
mov
addr16
cmp
rol
jge
or
jge
arpl
frstor
in
test
jl
mov
shr
arpl
mov
lock
lcall
daa
enter
xchg
mov
lcall
fs
or
dec
mov
cltd
jge
in
pop
mov
out
pop
inc
push
fidivs
push
call
ljmp
sbb
orl
enter
mov
dec
ret
lcall
std
push
aad
dec
ja
pop
and
add
lret
mov
cmp
ud0
dec
adc
jp
mov
push
movb
cs
cmp
scas
arpl
mov
std
aas
sub
enter
jns
push
fdiv
pusha
fmull
aaa
sub
mov
add
cwtl
push
dec
push
shrl
cmpsb
add
incl
mov
inc
or
call
sub
jns
mov
dec
mov
clc
imul
inc
out
sbb
inc
daa
mov
fists
add
std
ljmp
ljmp
lahf
cmp
mov
das
dec
dec
ds
iret
enter
dec
outsl
movsb
and
push
or
mov
cltd
mov
in
fstl
mov
xor
pusha
cli
xchg
scas
mov
jmp
mov
fwait
popf
pusha
or
arpl
xchg
fwait
scas
jle
xor
mov
push
sahf
pop
aam
push
dec
dec
fstpt
clc
mov
sub
or
mov
js
mov
inc
sub
out
sbb
jle
ljmp
icebp
pop
in
dec
inc
or
adc
rclb
out
lods
in
mov
pop
std
fwait
dec
mov
mov
ret
xchg
dec
lahf
daa
popf
adc
adc
into
js
mov
loopne,pn
stc
push
sub
icebp
or
sbb
sbb
push
in
push
sahf
dec
or
lcall
fimull
and
mov
mov
dec
pop
incb
adc
scas
mov
scas
movsb
fimuls
rclb
outsb
pop
pop
int3
pop
loopne
call
xchg
jp
push
mov
lods
mov
mov
scas
fs
xor
pushl
lret
adc
pop
fcmovnu
call
cli
ljmp
mov
scas
out
test
inc
ss
imul
lods
icebp
aad
sarb
icebp
jg
pop
and
into
std
decl
mov
out
add
es
adc
mov
movsb
lock
mov
insl
add
incl
adc
push
mov
adc
dec
mov
call
das
xlat
push
adcb
pushf
pop
popf
adc
mov
popf
ss
fstp
cli
pop
jge
lods
dec
stos
dec
mov
sub
jecxz
xor
test
call
cmp
and
stc
cmp
lret
repnz
int3
sub
cld
jns
jle
xor
data16
push
lahf
adc
or
nop
mov
or
pop
clc
push
jge
add
push
fmuls
ret
dec
dec
out
repz
loopne
ljmp
mov
rol
stos
repz
cmpsl
xlat
push
out
cld
mov
mov
stos
shl
aam
decl
or
jnp
xor
dec
loop
jge
jne
pop
incb
lahf
lahf
je
mov
clc
popf
xlat
test
inc
out
das
std
ljmp
fcompl
mov
shlb
jae
mov
inc
mov
cld
ljmp
std
jle
mov
pop
stos
xorps
fstps
adc
pop
xor
ljmp
or
push
pop
lcall
lods
in
pop
and
cltd
add
out
sarl
sbbl
cmp
xchg
negl
aam
inc
xor
dec
push
icebp
insb
cmp
mov
xor
mov
incl
pop
shll
xchg
push
push
jnp
repz
push
mov
scas
or
inc
pushl
arpl
mov
cmc
aas
stc
or
and
push
loope
incl
push
popl
xchg
out
addr16
xchg
sbb
out
mov
dec
lods
andb
daa
cmp
decl
int
in
fwait
cmpsl
mov
sbb
test
jae
jg
lcall
shlb
js
aad
bound
incl
push
mov
jp
shrl
repnz
icebp
mov
mov
dec
test
stc
and
sbb
jae
mov
nop
mov
cmp
decl
sbb
shlb
sti
cmpsb
xchg
jne
and
cwtl
pusha
out
xor
lcall
mov
add
jg
jb
sub
cmc
mov
in
clc
mov
push
roll
incl
mov
inc
jmp
jno
add
mov
gs
ficoml
and
lcall
xor
fucom
out
inc
mov
dec
popf
xchg
and
push
shl
adc
aas
mov
cld
sub
sbb
loopne
jle
adc
jo
sbb
je
das
or
sub
incl
sha256rnds2
push
mov
loope
push
inc
xchg
mov
lcall
sub
test
jbe
sub
or
sbb
ds
aaa
loopne
dec
shr
lcall
idivb
insl
push
or
mov
sub
imul
cmc
rol
lret
inc
and
push
add
addb
pop
lret
out
jg
sti
jge
push
sub
insb
es
lret
mov
xor
xor
sub
inc
pop
clc
pop
loop
jns
clc
rdmsr
sar
lret
subl
aam
call
movsl
ja
adc
lret
loope
adc
test
ljmp
pop
inc
jo
lahf
adc
lods
in
xchg
js
inc
mov
ljmp
aad
push
sti
daa
in
and
rol
shll
jbe
decl
pop
xor
test
imul
adc
cmp
call
mov
in
mov
jge
push
dec
jbe
xchg
adc
sbb
jae
mov
sub
fldt
push
gs
inc
lods
jns
mov
pop
mov
fnstsw
incl
jl
cwtl
lods
add
inc
fisttpll
loope
mov
hlt
mov
sub
aaa
idivb
pop
dec
ss
cwtl
imul
jp
cmc
ljmp
repnz
pusha
adc
and
push
ss
lcall
jbe
arpl
dec
icebp
sbb
cmc
mov
jp
push
addl
jne
push
push
cmc
xor
cmp
aad
pop
add
mov
lret
pop
stc
sub
popf
push
push
lock
ljmp
inc
js
jg
or
lcall
cmp
jmp
in
int
ljmp
cmp
in
inc
push
xchg
adc
cwtl
sub
gs
aad
ficoml
sbb
call
popf
xor
push
and
ss
push
push
jne
push
and
arpl
inc
rcrl
push
movsl
decl
sub
or
lcall
xor
cld
insl
push
aad
mov
dec
mov
xchg
insb
repnz
std
mov
in
and
xor
adc
cltd
lcall
ljmp
test
ret
mov
lret
mov
out
push
jne
cmpsb
inc
xchg
lds
int
addl
mov
in
nop
aas
xchg
xchg
mov
sub
pushl
push
iret
or
lea
sub
push
repz
jecxz
inc
decl
mov
sahf
push
mov
xlat
mov
jmp
xchg
imul
sub
call
mov
cmp
ja
in
outsl
lahf
sti
mov
add
jg
hlt
or
xor
fistpll
dec
mov
incl
mov
lahf
out
add
xor
fildl
loopne
push
pop
xchg
pop
mov
mov
and
les
mov
lea
outsl
sub
sub
jns
pop
push
jge
movsl
movb
mov
sbb
fs
xor
inc
fdivrs
call
jne
aad
lods
dec
setns
cld
insb
xor
sahf
push
add
mov
xchg
add
mov
lods
sub
out
lcall
add
lods
cmp
imul
and
push
call
fwait
lret
push
pop
in
loop
ret
in
sub
push
popf
mov
fisttps
pop
fcoms
push
jb
push
jno
push
and
mov
xor
or
outsl
jne
stos
or
outsb
ret
mov
jo
mov
cmp
iret
mov
lcall
repnz
dec
fdiv
jne
cmp
pop
pop
fimull
fcomip
cmp
push
mov
push
imul
ficomps
in
jo
jp
add
xchg
repnz
jo
fsubl
xlat
pop
cld
jmp
outsl
fistps
cmp
loopne
add
sub
jle
scas
outsl
mov
lcall
mov
add
pushl
dec
mov
dec
outsb
mov
xchg
add
icebp
iret
dec
lock
mov
aaa
sbb
int
xchg
sbb
cltd
pop
scas
cmp
call
loop
movsl
push
mov
movsb
sti
iret
xchg
sbb
icebp
dec
pop
dec
mov
jecxz
test
dec
push
mov
xchg
xchg
cmp
clc
ljmp
xchg
mov
iret
sbbb
aam
xor
xor
lcall
mov
jbe
std
cmp
inc
clc
mov
scas
jle
nop
dec
addr16
cmp
call
push
pop
sarb
rcll
int3
daa
sbb
xchg
mov
addr16
mov
mov
test
pushl
loop
mov
pop
dec
stos
pop
push
mov
jne
js
out
ret
jg
dec
movsb
push
jl
inc
test
test
jbe
ret
mov
sarb
and
outsb
mov
ljmp
pop
mov
mov
enter
cmp
std
inc
mov
xchg
mov
jae
jecxz
sbb
jg
xchg
sub
adc
sahf
clc
test
fld
imul
mov
das
inc
stos
popa
addr16
call
shrb
xchg
aad
aad
inc
shlb
jg
dec
outsb
dec
xchg
sub
fistpll
daa
scas
push
fsubs
adc
xchg
popf
int
xor
movsl
push
and
push
rol
or
aam
dec
xor
xor
push
cld
mov
mov
decl
std
push
inc
subb
cli
int3
push
sbb
jnp
cmc
mov
hlt
dec
and
clc
lods
xor
dec
and
fucom
sahf
xchg
aam
cwtl
push
lds
into
pop
sbb
gs
mov
jle
push
fwait
xchg
leave
enter
mov
out
fiaddl
or
inc
lock
gs
mov
xor
ds
cmp
sarb
outsb
or
cmp
or
fstl
jmp
out
xor
and
jp
insl
lcall
mov
adc
cld
ljmp
mov
ja
ljmp
add
lret
mov
cld
jns
icebp
pusha
xchg
adc
or
xchg
movsl
mov
loope
mov
inc
je
fists
xor
mov
cmpl
sahf
cli
sub
call
adc
loop
sbb
mov
xor
pop
lret
cmc
mov
mov
sub
aaa
cli
test
divl
cmpsb
sbb
orl
jecxz
xchg
xlat
mov
incl
mov
lcall
sbb
stos
scas
push
out
mov
lcall
inc
xor
adc
jle
scas
sahf
ret
sbb
push
repnz
pop
std
in
loopne
ljmp
xor
mov
adc
sbb
jno
sbb
push
pop
pop
cld
pop
aam
inc
fiaddl
aaa
fdivrl
pop
jmp
stos
std
call
mov
add
fmulp
cmpsl
sbb
pushf
outsb
mov
mov
or
or
shlb
dec
sub
mov
scas
lock
pusha
mov
pushl
clc
mov
push
sbb
dec
lods
lds
jp
xchg
in
pushl
and
movsl
mov
hlt
psubusw
movsl
insl
and
or
mov
cmp
pushl
aas
jecxz
mov
xor
arpl
call
pop
xlat
dec
dec
inc
xchg
out
rorb
icebp
data16
pop
ljmp
mov
fdivl
or
decl
add
in
rcll
cld
loopne
cli
push
sbb
les
iret
outsb
hlt
push
jmp
fstps
popf
pop
incl
clc
iret
leave
dec
pop
pop
es
push
das
add
pop
pop
scas
adc
cmpsl
outsl
cmp
pop
jno
aaa
adc
mov
ljmp
lock
inc
repz
sub
movb
lds
pop
call
and
pop
pop
jg
mov
jg
test
sub
iret
fsts
cmc
in
xor
adc
ljmp
add
out
iret
mov
push
je
sahf
sahf
sbb
in
insl
xchg
lret
jnp
das
adc
loopne
ljmp
cld
jp
jbe
lret
lret
mov
insb
jnp
shlb
call
mov
mov
inc
lcall
xor
aam
xor
lods
add
cmp
pop
lahf
out
ljmp
sub
jg
cmp
fnstenv
adc
dec
cs
data16
call
repz
decl
fldl
and
bound
out
xchg
lret
fnstenv
jg
ljmp
and
out
jle
mov
popf
or
fcomps
mov
dec
add
xchg
aas
in
dec
mov
call
lret
push
jo
js
sub
mov
shl
out
cmc
mov
lea
jle
and
xchg
movhps
cld
pop
inc
fstpt
push
push
xor
or
dec
and
ljmp
decl
xlat
stc
and
fcmovnbe
mov
push
and
mov
and
movsl
sbb
ljmp
fdivrl
push
cmp
or
pusha
adc
stc
mov
jmp
inc
or
cmp
pushl
in
jnp
or
mov
icebp
mull
jle
mov
hlt
int
jmp
mov
in
push
ja
daa
dec
inc
dec
insb
pminsw
xor
push
sahf
mov
add
cmpsb
dec
in
and
adc
call
lock
clc
pushl
das
insb
add
xor
sub
xlat
test
repz
outsb
push
loope
outsl
inc
int3
dec
dec
out
out
cld
jmp
insb
pop
cli
std
xchg
enter
jle
aas
xchg
jg
outsb
decb
push
mov
jnp
loope
sub
sub
fistpll
pop
adc
loopne
call
xlat
stos
leave
ss
fistpl
std
int
sbb
out
cli
fs
std
cld
pushl
cmp
cltd
call
cmpl
add
adc
js
cmc
xor
pushl
lret
cltd
push
inc
and
xchg
ret
and
adc
ljmp
test
incb
mov
cmp
ret
movsl
push
xchg
xor
popf
scas
sub
popa
movsb
orl
mov
adc
jl
inc
xchg
clc
arpl
adc
movsl
jg
fadds
add
xchg
ret
or
mov
jecxz
or
mov
pop
or
dec
add
adc
mov
int3
call
lock
popa
and
into
fidivrs
pop
outsw
shl
jmp
loopne
clc
ficomps
mov
enter
pusha
sarl
or
cmp
or
pop
fisubl
mov
push
pop
pushf
incl
push
cltd
lods
sub
jae
mov
push
jb
fucomip
jg
insb
inc
shl
mov
jns
jns
bound
push
mov
in
push
ret
add
imul
clc
mov
pop
lcall
cmp
shr
mov
les
lcall
repz
sahf
lds
add
cli
outsl
lock
and
ret
ja
mov
mov
cmpsl
mov
xchg
scas
cld
inc
call
ljmp
inc
sub
cs
add
cmp
adc
or
test
mov
xlat
pusha
xor
push
adc
decl
fwait
xchg
lock
or
fistps
cmp
out
bound
cmp
mov
jb
xchg
adc
adc
movsb
mov
lods
xchg
mov
mov
cli
jo
add
jbe
testl
call
xlat
mov
push
sbb
xor
mov
dec
ljmp
and
scas
xor
mov
clc
aaa
push
bound
test
inc
sub
mov
out
arpl
push
cmp
jmp
repnz
dec
movsb
mov
sub
stc
fxam
push
cli
decl
push
loop
sbbl
mov
lret
jge
bound
inc
call
call
pop
cld
sbb
repnz
push
stos
leave
mov
icebp
dec
xchg
and
xchg
es
and
pushl
push
les
mov
push
sbb
mov
loope
jbe
adc
sbb
out
pop
mulb
cli
mov
add
pop
mov
fildl
mov
push
or
push
dec
mov
fstl
sub
dec
std
lcall
inc
into
dec
push
inc
lahf
nop
jecxz
ret
je
lock
insl
fwait
push
ljmp
rclb
test
sbb
sub
cs
mov
lcall
fsts
sbb
cmp
mov
sub
dec
das
mov
push
enter
roll
pop
insl
bound
mov
icebp
jg
inc
lahf
lds
push
sbb
mov
cwtl
test
jne
mov
jg
ljmp
cs
rorb
pop
push
loopne
sti
jp
out
js
out
cmc
sub
xor
test
ljmp
incl
sub
rorb
test
and
xor
mov
pop
pusha
sbb
repz
ljmp
pop
lock
enter
lahf
lahf
fcoms
idivl
jg
vpminub
cltd
sbb
das
cli
mov
mov
iret
inc
pause
sbb
jg
sbb
cltd
jmp
mov
out
or
mov
jne
incl
mov
dec
inc
stos
push
mov
ret
aaa
pop
arpl
decl
je
sub
dec
mov
dec
push
jne
in
out
cmc
stos
add
adc
jnp
mov
sub
dec
notl
outsl
cld
inc
movsl
pop
stc
ljmp
and
aaa
fwait
aas
imul
popf
int3
out
call
enter
loope
jo
pop
xchg
jb
jmp
mov
in
decl
cmp
pop
push
pop
sbb
lods
hlt
insb
sub
and
hlt
cmc
dec
out
push
cmpsb
rcrb
sti
stc
cs
test
push
dec
or
imul
call
xor
cwtl
idivl
scas
pushf
bound
sub
out
incl
push
push
push
push
mov
jne
push
movsb
push
xlat
cmp
push
stos
aas
arpl
jp
mov
adc
in
or
xor
sbb
push
pop
mov
sbb
incl
jo
cmpsb
daa
test
movsb
ret
aad
dec
cmc
sub
fdiv
mulb
pushl
in
sahf
icebp
aam
rcrb
jbe
jecxz
scas
imul
scas
aam
jg
push
fmull
cmp
lods
mov
fwait
dec
lods
sub
out
jmp
adc
adc
add
loopne
lret
in
xorl
incl
mov
mov
xor
jo
inc
in
cmc
loope
aad
xchg
pop
push
call
push
mov
cmp
cltd
data16
add
pusha
aas
daa
std
push
std
mov
fs
test
dec
jne
cmp
mov
and
mov
sbb
pop
cmpsl
sbb
cld
jg
mov
insl
in
mov
fmuls
mov
out
test
outsl
jl
sbb
stos
xor
sahf
out
xlat
pop
push
lahf
inc
lock
lcall
adc
fcoms
arpl
fwait
clc
dec
ss
scas
push
pop
mov
inc
push
cmp
xchg
sub
ja
idiv
ljmp
cmpsl
ret
adc
bound
or
and
mov
sbb
adc
les
das
inc
hlt
mov
sarb
dec
addr16
cmp
mov
mov
adc
ss
outsl
std
pusha
repnz
ret
std
lods
mov
pop
test
decl
scas
push
xchg
xchg
and
movb
fwait
push
mov
outsl
lcall
mov
pushl
ret
fists
popf
cmpsl
add
test
mov
adc
or
mov
mov
jbe
arpl
outsl
cmp
std
andb
in
shll
loop
es
mov
in
incl
inc
push
cmp
leave
je
bound
mov
aaa
clc
lcall
lahf
stos
add
xor
ja
loope
adc
pop
je
cli
cmp
pop
in
out
pop
enter
cs
and
xchg
push
call
jmp
dec
bound
xchg
xchg
dec
xor
cmpsl
or
or
and
scas
dec
mov
incl
pushl
xchg
and
jp
cwtl
lods
xor
stos
cltd
incl
mov
mov
or
inc
mov
mov
imul
adc
and
push
subb
jge
lret
add
jno
jae
cmc
mov
sub
mov
xor
pushf
xchg
xchg
mov
mov
aad
pop
sub
movsb
in
call
ljmp
pop
dec
dec
mov
or
push
cmp
lods
pop
fstps
popa
js
cmp
inc
pushl
mov
or
shrl
mov
inc
sub
idiv
incl
mov
dec
daa
pop
ss
cbtw
push
lcall
dec
pop
mov
jmp
decl
push
cltd
xor
fbstp
xchg
sbb
pop
test
test
sbb
cmpsl
push
cwtl
and
adc
jle
ljmp
cli
xor
jmp
in
add
lahf
stc
adc
mov
dec
pop
mov
pushl
jg
ss
out
adc
clc
leave
fldl
mov
data16
incl
icebp
popf
dec
lods
ljmp
loop
in
enter
push
fists
sti
lock
fbld
nop
imul
lcall
xchg
lcall
ret
ds
or
mov
adc
out
loop
mov
out
jns
pop
ud0
mov
xchg
and
xor
sub
orb
mov
aaa
mov
add
rep
cmc
data16
hlt
into
icebp
pxor
or
std
mov
adcb
inc
into
addr16
inc
hlt
or
data16
fs
fildl
mov
dec
push
pop
mov
mov
jg
xor
and
or
in
fwait
cmp
iret
sub
and
jg
mov
inc
jg
mov
jnp
movsl
jno
cwtl
mov
push
jl
jmp
and
nop
aas
cld
push
in
aaa
sub
call
adc
movsl
mov
push
cmp
sub
bound
xchg
je
fwait
mov
andl
push
frndint
mov
xchg
test
mov
jnp
cltd
pop
in
aaa
pop
ljmp
je
mov
int
scas
lcall
test
sbb
call
js
rcll
push
shrl
fstl
mov
mov
sbb
dec
movsb
mov
cli
movsb
xlat
xchg
test
jg
ficompl
insl
dec
addb
push
dec
popf
out
push
test
mov
ss
inc
movsb
rorl
jnp
cwtl
fstps
or
jmp
in
das
je
sbb
lods
jecxz
cwtl
icebp
cmc
outsl
dec
dec
dec
xchg
xor
mov
shll
mov
ljmp
fiadds
aad
ja
inc
sti
fildl
jns
xchg
jno
add
enter
xor
inc
lcall
mov
inc
add
je
sub
cmc
add
arpl
call
testl
stos
arpl
dec
mov
loope
fists
enter
or
adcl
add
cwtl
pop
lret
push
int3
jmp
mov
out
lret
pop
fmuls
mov
das
insl
out
push
xchg
pop
int3
in
jns
cltd
mov
jg
jg
jmp
mov
out
mov
ss
push
mov
mov
rclb
fwait
push
jp
push
aaa
je
push
out
sti
jno
dec
mov
sti
ret
test
sbb
das
mov
mov
sti
jmp
cmp
pusha
ljmp
in
cmp
stos
mov
push
aaa
clc
dec
cli
sbb
cmp
push
sbb
sbb
pushl
ljmp
sarl
icebp
jecxz
and
stc
or
clc
outsb
jae
daa
stos
fcos
mov
xchg
add
andb
dec
push
sub
push
mov
pop
int3
mov
cmp
out
push
cmpsb
mov
mov
out
jg
xchg
xchg
or
add
xor
sbb
cwtl
cwtl
pop
cli
pushl
mov
fldl
cld
push
ffree
sbb
adc
in
call
pop
inc
lahf
add
pop
nop
js
pop
flds
pop
stc
mov
call
jecxz
iret
dec
xor
iret
aaa
addr16
fwait
cli
inc
mov
adc
or
mov
call
inc
cmp
cwtl
shr
das
cmc
out
and
iret
insb
jae
sub
dec
outsb
mov
jge
cmp
inc
lods
jmp
hlt
lods
jns
dec
fwait
aad
lods
lds
sarb
lcall
int3
pushf
aam
mov
cmpsl
mov
sarl
test
xchg
clc
pushl
dec
addr16
aad
fwait
hlt
mov
mov
sarl
and
fcomps
fcom
sub
call
ds
scas
pop
fs
jmp
jmp
movsb
lods
lea
pop
mov
daa
push
inc
stos
in
aam
add
xor
out
jae
scas
pop
ljmp
xlat
outsl
push
clc
lcall
jg
sub
push
cwtl
repnz
inc
decl
cld
jne
loopne
push
ret
in
bts
jnp
pushf
mov
jmp
jp
xor
test
addr16
adc
lret
push
hlt
pushf
sarl
incl
fmuls
pop
inc
mov
insl
out
icebp
adc
adc
jb
push
andl
je
sub
stc
push
lcall
sbb
add
aad
sub
cld
test
js
incl
sub
inc
loope
clc
aad
add
subl
call
mov
pop
call
setle
jp
fists
ds
push
dec
sbb
add
xchg
or
lcall
mov
push
pop
jp
cmpsb
fcomi
js
xchg
add
call
or
test
cmp
dec
ret
inc
pop
or
mov
mov
xor
cmp
mov
mov
sahf
rcrl
insb
push
jbe
pop
bound
push
arpl
lret
loopne
sbb
mov
out
cwtl
imul
int
mov
push
xor
mov
lret
push
lea
mov
mov
push
dec
ljmp
lock
and
inc
xchg
fdivp
pusha
cmp
out
sub
or
mov
xchg
pop
push
movsb
fwait
pop
movsl
lods
jne
js
enter
sarb
pop
xor
sbbl
jne
add
bound
xor
movsl
sbb
aaa
xchg
jl
sub
leave
popf
jle
lret
andb
sar
pop
aas
mov
push
cmp
dec
pusha
and
test
pop
call
mov
scas
xor
and
cld
out
call
orb
mov
loope
dec
mov
icebp
test
jle
or
and
push
pop
sub
ljmp
push
int3
xor
test
lret
dec
jl
add
repz
fimull
outsl
std
incl
js
jecxz
les
push
push
adc
xchg
out
jge
les
fisubrl
or
add
lret
pop
repz
into
aad
mov
mov
icebp
xchg
pop
dec
sbb
pushl
iret
jle
mov
push
dec
lods
dec
cmp
jns
fdivl
gs
les
cli
jg
sbb
xchg
mov
popa
fbld
add
pop
dec
pop
lcall
rol
fwait
inc
test
pop
pop
pop
add
pop
int
nop
aam
das
hlt
incl
daa
jp
sub
pop
shr
push
jbe
imul
mov
sub
jb
loope
xor
xchg
jg
jmp
lock
out
jl
in
add
addl
fs
adc
and
repnz
xchg
aad
js
push
mov
mov
insl
cmp
cmc
cli
pop
push
dec
ljmp
inc
mov
cmp
pop
pop
sti
mov
mov
daa
xchg
lea
dec
pop
xor
or
inc
fcomps
sub
ficoml
xchg
cmp
cld
arpl
mov
arpl
mov
mov
test
dec
dec
mov
mov
sbb
in
adc
pop
sti
out
int3
jno
adc
fsubrs
sub
pop
bound
rorl
jecxz
dec
out
xchg
cmp
mov
or
or
push
ret
lcall
jl
add
enter
or
and
dec
lret
sbb
stos
ret
cmp
das
cld
iret
adc
push
decl
inc
lods
das
cld
inc
stc
xor
adc
push
jmp
adc
cmp
sbb
jmp
pop
cmpl
mov
push
xchg
test
flds
iret
inc
idiv
loope
adc
ret
repnz
mov
popf
inc
stc
inc
in
scas
mov
sar
mov
add
cmp
pop
dec
cld
incl
repz
xor
or
add
clc
jmp
push
movsl
shlb
pushf
inc
daa
xchg
jle
scas
push
mov
sub
mov
push
das
adc
mov
cmp
rcrl
lock
or
push
pushl
mov
mov
lods
xchg
movsl
insl
mov
mov
jg
out
jecxz
xchg
pop
cltd
xor
sbb
rcr
test
test
xchg
sbb
jl
mov
inc
jb
pusha
jp
jbe
mov
cld
dec
iret
rcrl
pushf
push
push
sti
jns
fucom
jmp
popa
jb
inc
popa
xchg
ja
aad
loop
push
call
mov
jae
sar
mov
jnp
lods
pop
mov
push
ljmp
mov
inc
je
bound
pop
mov
les
push
sti
pushw
jnp
sbb
js
xchg
pop
jp
dec
clc
dec
std
stos
sub
cmp
adc
add
jle
pop
and
ss
cmp
or
jbe
call
jle
lcall
mov
adc
outsl
decl
lods
pop
movsb
into
cltd
and
pop
into
fwait
test
xchg
lea
cli
or
in
out
das
xorb
mov
cmp
iret
aas
stc
sti
jp
cmp
mov
lcall
and
or
cli
ss
adc
movsb
mov
jmp
ss
in
scas
repnz
sbb
pop
clc
lcall
push
je
inc
ja
out
aam
pop
aad
sbb
in
dec
sub
jmp
adc
or
in
std
int
ljmp
and
mov
xor
sar
incl
xchg
xchg
popf
cmpsb
stos
and
pop
jns
xchg
xchg
mov
mov
mov
bound
je
and
adc
movsl
iret
out
sub
outsl
jmp
sar
fildll
ss
jle
loopne
das
dec
mov
pusha
test
repnz
call
add
inc
push
dec
dec
mov
enter
jne
in
inc
inc
hlt
mull
shl
xor
outsl
cmc
incl
lret
packuswb
out
sub
jae
mov
xchg
ds
jmp
cmp
sub
aaa
xlat
pop
cwtl
fwait
dec
fstpl
sbb
cmpsb
sar
aad
std
mov
xor
add
adc
stos
fwait
kxnorw
inc
repz
sub
js
out
or
cli
jg
dec
and
push
cmc
sub
sub
sbb
mov
pushf
push
cwtl
push
adc
fistpll
ror
das
lods
inc
movsl
shlb
sbb
nop
out
push
lods
adc
cltd
fdivr
call
xchg
popf
sub
sub
pusha
out
fadd
hlt
ljmp
cmp
inc
std
cmp
jg
jno
cmpsl
fildl
pop
cli
insl
rorl
subb
shrb
mov
sahf
stos
loopne
into
mov
pushl
fsubp
je
mov
pop
mov
cwtl
stc
int
movsl
cli
sub
cmp
xor
cmp
cwtl
mov
cltd
xor
pop
sub
divb
aas
xchg
clc
push
lcall
call
xchg
jecxz
es
sub
mov
mov
pushl
mov
das
aam
int
fdivrs
xchg
pop
pushl
push
sub
xchg
push
repnz
dec
call
jb
movsl
call
push
pop
movsl
ja
inc
sbb
jge
outsl
xchg
aam
jno
jmp
and
popa
jecxz
add
cmp
int
push
pop
out
xor
jg
jae
inc
or
outsb
mov
adc
xlat
xchg
mov
loop
xlat
scas
loop
nop
jl
outsl
icebp
lods
lret
shrb
lock
in
aas
mov
sar
loopne
fistps
xchg
push
stos
scas
pop
aas
jmp
pushl
sbbl
mov
sahf
adc
inc
hlt
adc
cli
call
sub
pop
test
sub
mov
jns
push
decl
cwtl
xchg
into
and
fs
call
mov
push
sbb
call
jle
ds
dec
dec
pop
lods
jl
test
inc
xchg
mov
fwait
lock
call
lds
imul
pop
mov
mov
das
lea
mov
inc
inc
lods
sbb
movsl
pop
mov
dec
outsb
inc
outsb
sahf
xchg
pop
lea
jge
lcall
clc
fnstcw
shll
in
imul
jl
xlat
inc
clc
inc
mov
inc
pushl
mov
adcl
imul
lock
fistpll
ja
lock
jne
imul
inc
lock
fsubl
leave
loop
repnz
add
into
and
ljmp
add
fadd
push
loopne
inc
sbb
imul
cld
call
mov
mov
push
hlt
lret
fmuls
pop
hlt
out
rorl
pop
push
mov
or
call
inc
mov
popa
jle
lret
aaa
shlb
pop
dec
cmpsb
jno
icebp
ljmp
cld
xor
jecxz
fsubl
stc
out
test
adc
int3
sbb
js
call
pop
call
pop
push
jnp
cmp
sahf
test
mov
push
fstpt
or
and
adc
mov
stos
dec
jg
push
repnz
jmp
push
aad
outsb
aam
or
xchg
out
mov
test
jmp
addr16
lahf
mov
xor
outsl
js
add
xchg
sub
and
js
insl
mov
push
push
jle
and
lahf
dec
mov
dec
jne
push
repnz
cmpsl
popl
xchg
ficomps
mov
mov
add
mov
adc
sub
pop
mov
dec
push
add
mov
in
jo
mov
fucom
inc
aad
adc
add
xchg
decl
loop
mov
loopne
jbe
adc
jecxz
add
jg
ljmp
and
dec
cmp
cmp
fidivrs
icebp
mov
outsl
std
decl
outsb
ja
mov
cmpsl
pop
lock
movsl
sub
ljmp
sub
pop
lock
lcall
icebp
in
mov
add
dec
cwtl
lcall
sub
pop
add
int3
in
insl
lods
decl
sub
sarl
pop
movsb
cmpsb
push
xchg
aad
lcall
jmp
dec
mov
ja
mov
fistpl
loop
sahf
cmpsl
cmpsl
dec
cmp
xchg
in
dec
mov
sub
adc
pop
std
pushl
mov
mov
iret
lahf
aas
cmpsl
fsin
xchg
out
fptan
dec
sahf
mov
sub
testb
push
push
push
es
cmc
ljmp
cmpsb
das
pop
lcall
sub
dec
mov
fistpll
cmpsl
lods
lods
adc
fimuls
lock
mov
xchg
or
pop
mov
dec
pop
dec
lahf
pop
cli
call
ljmp
pop
ds
or
je
mov
repnz
pop
inc
mov
jg
xchg
and
ljmp
cmp
cmp
cmpsb
sbb
cld
mov
jg
iret
jns
in
sti
sub
add
add
dec
in
cs
xor
lock
ljmp
add
xchg
mov
push
movsb
pop
pop
shlb
push
sbb
dec
inc
rcll
sub
jne
decl
xchg
mov
insb
adc
push
orb
aaa
clc
incl
and
rcr
mov
pop
push
mov
mov
repnz
icebp
out
ljmp
mov
and
and
mov
loopne
call
or
inc
std
je
lods
xor
xorps
lds
inc
movsb
aas
sub
mov
push
ljmp
ret
push
int3
pop
call
out
adc
jns
call
xchg
jo
pop
es
sub
pop
pop
cmpsb
sbb
dec
loope
icebp
mov
in
pop
push
pop
je
test
or
mov
mov
jnp
lock
ds
fcomi
aam
pushl
pusha
dec
test
cld
rorb
aaa
dec
mov
xchg
and
out
clc
mov
cmpsl
jmp
xor
mov
in
and
enter
clc
pop
sarl
idiv
sbb
loopne
lcall
mov
jmp
stos
cmp
popf
rcrb
mov
push
rcll
insl
dec
mov
jg
xchg
dec
insl
push
cmp
cmp
jp
jo
std
sarb
and
inc
mov
leave
cmpsl
adc
ret
mov
fwait
in
lcall
or
fsubs
clc
dec
mov
pop
cmp
call
std
decl
adc
fnstenv
mov
cld
mull
mov
sbb
jg
mov
sbb
rolb
sub
jle
cmpsb
mul
scas
pop
in
lahf
cmp
icebp
sbb
jmp
in
and
xor
cmp
call
xor
mov
jo
loope
mulb
in
shrl
cmp
cmp
xor
jmp
test
outsl
sub
cmpsl
call
mov
sbb
inc
mov
dec
mov
ret
push
jb
adc
mov
sbb
scas
push
pop
pop
fcomp
jl
jecxz
xor
push
repnz
sbb
jno
ss
xchg
pop
out
push
imul
push
pop
ss
jg
mov
fbld
xlat
incl
das
sub
scas
popa
cmpb
lcall
addr16
lds
and
repnz
aam
jbe
or
call
inc
jne
and
ret
fisttpl
add
icebp
ret
xor
clc
icebp
testl
mov
adc
cld
incl
jp
aas
mov
fbld
aas
mov
jmp
xchg
push
leave
dec
xor
lock
dec
in
loope
cwtl
cld
fwait
cmp
cmp
out
pop
icebp
fdivrs
xor
sub
xor
mov
fs
cli
jg
call
jbe
ret
and
mov
mov
testb
ja
imulb
inc
or
decb
popf
or
decl
in
xlat
movb
setb
icebp
popa
sub
push
push
sbb
xchg
mov
jne
ds
lock
lret
mov
pushl
ljmp
cmc
and
cwtl
fadds
adc
jg
mov
sarl
cmp
data16
xchg
stos
pop
test
daa
jge
pushl
int
push
push
inc
into
sahf
ja
ds
cli
cld
mov
adc
shrb
lahf
fcomps
pop
call
sbb
jns
outsl
mov
mov
add
xorb
icebp
pushl
xor
loope
ss
loope
cmpsl
outsb
cmp
sar
sbbb
addr16
decl
sbb
mov
movsl
jo
sbb
das
add
adc
jmp
lods
mov
cmp
pop
sbb
rol
subl
jns
ljmp
fldl
mov
mov
sub
xor
mov
add
xor
sarb
outsb
mov
outsl
push
stos
jb
xchg
dec
mov
jg
mov
xor
data16
call
outsb
pop
mov
int
ljmp
pusha
sbb
test
js
sbb
xchg
jns
punpckhbw
mov
ret
xor
iret
ss
add
stos
pop
mov
push
xor
dec
add
jbe
sahf
lahf
push
test
adc
xor
clc
jg
cmp
mov
aaa
cmpsl
loop
dec
sbb
lock
mov
sub
dec
pop
add
jbe
add
push
mov
add
stos
sub
adc
cmp
lcall
jmp
mov
pop
sti
mov
or
sbb
ja
mov
aas
add
decl
aam
fst
loope
lcall
loop
ja
jno
xor
fwait
mov
or
push
stos
les
push
daa
adc
lods
in
fisttpl
ljmp
lods
addb
stos
push
mov
jl
jg
mov
rcrb
push
jmp
out
sub
jno
push
pop
stc
pop
jnp
mov
sbb
scas
roll
adc
mov
movsl
call
add
cmp
pop
cmpsb
stos
incl
and
gs
pop
mov
cmpb
pusha
pop
leave
ljmp
hlt
jg
das
cmp
xchg
mov
dec
jnp
test
int
xor
int3
or
lcall
pop
cli
ret
sub
mov
les
mov
push
fdivs
outsl
pop
mov
incl
pop
or
xorb
push
sbb
xor
pop
inc
sbbl
dec
lcall
rorl
xor
les
test
icebp
pushl
iret
adc
jb
dec
push
or
cli
add
jnp
xchg
jp
xchg
fsubp
inc
push
je
xor
jb
xchg
mov
mov
dec
fldlg2
adc
xchg
and
mov
pxor
dec
jg
pop
pop
pushf
insb
out
test
adc
mov
loopne
add
sbb
sub
or
lcall
outsb
fsubrs
add
xchg
hlt
gs
into
nop
sarb
mov
fidivs
call
or
dec
and
dec
mov
pushf
out
andl
lods
push
insl
add
or
inc
or
fcoml
add
jg
incl
xchg
xor
mull
mov
nop
int
cli
push
scas
lods
ss
pushl
movsl
dec
push
push
mov
inc
jl
sub
mov
jae
mov
jl
arpl
in
or
shrb
mov
cld
add
fs
lds
sub
jne
push
jecxz
push
and
adc
lds
and
jecxz
dec
sub
dec
dec
popa
scas
ss
repnz
lahf
and
mov
xchg
ljmp
call
adc
and
ret
data16
aad
cmp
outsl
fsubrs
cld
jae
mov
ljmp
repz
sbbl
clc
and
lock
movsl
out
icebp
ss
lcall
mov
fsubrl
dec
mov
push
mov
jns
incl
xorb
sub
xchg
sub
xchg
shll
jnp
sub
push
cltd
sbb
push
mov
jae
xchg
jnp
mov
test
push
mov
leave
bound
int
mov
pop
inc
imul
or
and
cmpsb
pushl
stc
jmp
mov
inc
sbb
in
or
movsb
ficoms
cmp
ljmp
test
arpl
cmp
aas
rorb
inc
movsl
stos
mov
mov
mov
and
add
incl
add
push
pop
out
js
sub
scas
shlb
add
jno
fldt
test
jo
sbb
xor
dec
pop
rol
cli
adc
add
dec
jbe
or
xchg
xchg
sub
jmp
loope
pop
xor
lds
jno
or
imulb
mov
call
fucomip
mov
int3
stc
jns
push
hlt
dec
lock
mov
outsl
hlt
call
jle
das
test
aas
push
sub
pushl
cmp
inc
cmp
adcb
in
jge
xor
xor
dec
cmp
call
int
dec
stos
mov
pop
ss
inc
or
fldl
in
lock
loop
dec
pop
dec
arpl
testb
inc
je
mov
sti
nop
cld
dec
gs
jb
ja
pusha
das
mov
imul
xchg
rcrl
std
cld
xchg
cmp
das
mov
mov
cmp
jl
outsb
push
cmp
mov
and
fs
mov
lock
cli
pop
dec
ljmp
pusha
pop
push
mov
jmp
mov
jmp
mov
dec
jne
out
jmp
add
mov
cmpl
push
jne
pminsw
sbb
jb
mov
adc
stos
mov
scas
jne
cld
jne
lea
jmp
push
imul
int3
adc
inc
insb
rorl
gs
sub
jbe
add
inc
popf
xchg
add
or
neg
test
mov
pop
cmpl
test
popf
push
inc
lods
stos
imul
sbb
call
jle
outsb
out
mov
add
push
pop
and
add
imulb
push
and
mov
add
pushl
pushl
push
push
call
cmp
jne
incb
push
jg
add
push
mov
or
or
je
js
cmp
xchg
or
fbstp
dec
jmp
mov
or
add
pop
add
rol
xor
add
add
aaa
test
negl
or
jg
popa
cmp
inc
push
sar
rep
lds
add
and
mov
test
test
jge
or
or
ja
push
mov
sub
je
mov
shr
mov
addr16
adc
mov
dec
je
mov
faddl
jmp
or
jmp
pop
out
fisubrs
add
je
add
sub
and
mov
jmp
push
adc
mov
adc
loop
jmp
dec
std
out
pusha
mov
adc
repnz
jb
idiv
pop
das
add
mov
lods
stos
jmp
mov
sbb
or
out
push
or
fadds
mov
lods
dec
test
dec
movl
add
mov
mov
cli
xorb
rorl
test
cmc
jne
add
inc
inc
push
lods
add
mov
push
int
dec
cwtl
std
jne
xor
sbb
dec
pop
cltd
sti
imul
adc
mov
cmp
dec
shl
ljmp
adc
mov
add
mov
inc
push
fnstenv
push
sub
rcrl
arpl
add
fisubrl
mov
insb
popa
imul
adc
adc
jmp
jae
mov
dec
outsl
mov
paddd
add
pushl
dec
push
hlt
mov
mov
push
add
lea
call
sahf
shrd
sub
inc
or
clc
jne
inc
mov
dec
idiv
push
testb
je
shll
or
movsl
add
or
push
pop
cmp
lods
lods
mov
loop
or
sbb
jbe
shr
jl
or
or
mov
or
jno
ret
add
ret
or
fwait
mov
push
dec
sub
mov
data16
or
cwtl
mov
sbb
fstpl
ljmp
lea
lods
mov
sub
pop
mov
cmpsb
add
pop
imul
fcmovb
mov
jb
jae
std
mov
popa
addr16
outsl
js
add
jo
imul
mov
inc
inc
push
and
push
dec
push
add
icebp
sub
push
or
jb
outsl
test
insl
movq
arpl
insb
in
lcall
popa
je
jmp
test
mov
xor
out
outsb
imul
insl
imul
jb
cmp
jae
outsl
jb
imul
push
mov
lods
or
adc
shlb
jg
jae
xor
dec
jne
jmp
xchg
pop
ret
add
adc
xor
popl
fsubs
push
cmp
push
add
mov
or
mov
lock
call
or
das
ret
jnp
inc
adc
mov
adc
stos
mov
adc
mov
push
call
and
push
xchg
and
je
shrb
sbb
test
std
inc
add
les
ret
es
movsl
pop
pusha
aaa
test
and
pop
dec
leave
call
push
ljmp
add
add
or
or
adc
sbb
sub
cmp
pusha
jo
dec
rorl
mov
add
add
fmulp
xor
pop
adc
push
inc
mov
lcall
or
or
or
or
or
movups
adc
jmp
pop
cltd
adc
rcll
push
push
cmp
lods
in
out
cli
jb
push
mov
mov
inc
mov
xchg
fdivrp
insl
addl
or
loopne
and
mov
mov
add
mov
cmp
jae
pop
mov
fwait
add
lahf
adc
into
shr
mov
push
add
push
mov
add
add
in
mov
xlat
addl
sti
xor
addr16
fcmovnu
cwtl
or
push
mov
loop
lods
test
pop
sub
div
stos
mov
pop
out
mov
outsl
test
movsl
std
xor
mov
mov
pop
add
cmp
out
inc
mov
jb
mov
sub
inc
or
pop
xchg
xor
add
mov
out
lea
adc
add
sbb
fildl
and
xchg
push
pop
cld
negb
ret
cmp
mov
mov
insb
jl
mov
mov
dec
mov
into
and
in
sub
mov
fldcw
cmp
or
jmp
cmp
loope
and
orl
testb
dec
add
or
jg
clc
jge
maxps
xor
ja
adcb
mov
cmp
xor
bound
push
mov
mov
pop
jae
xchg
sbb
lea
inc
mov
pop
and
cmp
enter
test
or
jo
cmp
push
jno
add
jb
mov
mov
inc
mov
test
dec
or
fstp
push
leave
push
scas
ret
pop
lret
stc
or
fnsave
adc
lret
adc
outsl
sbb
push
push
sub
ja
mov
out
jmp
cmp
jae
add
sbb
mov
ljmp
xor
mov
lcall
cmp
pop
sahf
or
mov
mov
cli
mov
sbb
mov
outsb
ret
jb
jae
xchg
inc
add
mov
sbbl
int
xor
aas
mov
add
push
push
ret
arpl
fucomp
push
pop
mov
mov
aaa
js
jecxz
shl
clc
cmp
xchg
lea
push
push
in
es
lea
gs
call
add
add
push
mov
test
fldl
and
jmp
add
dec
lea
or
inc
add
addb
notb
call
add
outsb
movsb
mov
adcb
fistpl
aam
or
pop
inc
jp
stos
call
dec
mov
fwait
cs
xor
fiadds
sub
mov
and
xor
push
nop
cmp
add
cli
ja
incl
adc
lea
mov
jae
mov
fwait
or
adc
jle
jne
ret
xor
adc
mov
push
mov
add
and
sbb
inc
jmp
jne
push
pop
out
fldt
sti
and
add
dec
cmp
dec
xor
dec
mov
mov
jg
jmp
inc
adc
ja
dec
xchg
push
or
fisttpll
cmp
pop
mov
out
inc
dec
aaa
in
adc
mov
lea
and
dec
adc
aad
stos
lea
add
pop
push
push
call
and
and
andl
mov
loope
and
jmp
sbb
push
push
ljmp
insl
imul
aas
jecxz
pop
sub
insl
xor
or
popa
ror
movl
scas
xchg
adc
xchg
dec
adc
subl
push
adc
mov
inc
neg
std
xchg
cmpsl
push
and
sub
cmp
add
and
shr
rcl
mov
sub
cmp
test
js
push
pop
jl
push
pushf
xor
jmp
aam
cmpsb
lods
mov
or
aad
sahf
dec
out
cmp
or
aad
or
jmp
sbb
aad
fiadds
ljmp
mov
ljmp
imul
add
xchg
mov
jl
sub
xchg
xor
test
je
cmp
jb
fstl
out
loope
std
push
inc
add
xor
lods
jle
cmp
jge
sbb
mov
dec
aad
sar
mov
int
imul
mov
cmp
xorl
shr
inc
sbb
out
sbb
sbb
lea
jmp
add
lret
adc
leave
and
push
inc
adc
and
xlat
in
mov
lret
shrb
icebp
jae
add
sahf
dec
inc
inc
insb
movsb
xchg
iret
xchg
adc
xchg
adc
std
mov
loope
xchg
in
mov
or
adc
lea
cmp
scas
jae
aad
or
shrb
roll
adc
mov
fdivrs
clc
mov
enter
mull
negb
enter
sub
subb
inc
sub
lcall
inc
or
ret
add
add
ljmp
mov
inc
and
fs
adc
outsl
cmc
insb
gs
popa
outsb
and
adc
ret
popa
fs
xchg
enter
adc
mov
mov
popa
jmp
add
test
test
pop
and
repnz
iret
jle
stos
movsl
packsswb
mov
mov
inc
nop
lods
addr16
mov
testl
decl
add
nop
ljmp
test
adc
push
xor
dec
cmpb
add
sub
xor
push
dec
mov
sbb
xor
dec
adc
sti
mov
sbb
ljmp
jo
daa
pop
xchg
add
jb
add
mov
mov
daa
sbbb
push
and
rorb
scas
daa
movsl
insb
mov
ret
mov
test
adc
xchg
or
xchg
daa
jo
int3
mov
test
or
mov
and
or
pushl
or
xchg
test
jbe
pop
cmp
fbld
pop
test
pop
movsb
out
sub
dec
rclb
jnp
jg
sti
repz
stc
fidivs
out
cmp
sub
mov
mov
cmp
ljmp
inc
push
adc
and
jmp
push
ds
push
addr16
mov
pop
cmp
mov
xor
push
movsb
sub
lcall
mov
daa
insb
arpl
push
xlat
out
movsb
xor
or
incl
sbb
cmp
sub
fmul
xlat
pop
push
sub
ljmp
jo
xchg
lret
aaa
jp
shll
dec
and
daa
jbe
call
mov
std
popa
call
jl
push
ss
ja
rclb
push
aaa
ja
aas
inc
ret
sbb
setle
aas
inc
cmp
mov
xlat
lahf
sahf
in
pop
and
xor
inc
daa
sub
std
mov
mov
fs
lahf
adc
cmp
mov
decl
push
mov
popa
clc
stos
jb
shlb
insl
jne
xchg
fcomps
call
sarl
adc
push
enter
pop
xor
jl
xor
nop
inc
or
lock
jmp
pop
pop
sub
movsl
popa
sub
sbb
jb
outsl
fadd
fnsave
mov
dec
add
aas
mov
out
mov
aad
xchg
inc
jl
mov
jg
fst
pop
mov
dec
and
or
shrb
lods
in
jno
and
call
bound
ljmp
cld
cld
scas
adc
mov
and
fdiv
mov
push
jg
decl
push
cwtl
mov
mov
test
xlat
ret
cld
dec
mov
xlat
xor
pop
xor
fbstp
cmc
pop
mov
sub
pop
cmp
out
call
xor
call
jae
dec
popf
dec
jne
xchg
out
jo
sub
inc
mov
les
mov
jle
stc
dec
pop
cmp
jmp
test
xor
test
adc
jecxz
xor
gs
int3
fnstsw
out
movsb
arpl
xchg
aam
and
outsl
imull
mov
outsl
cmc
incl
xor
mov
fldcw
push
adc
jg
int3
adcb
lret
loopne
dec
push
fistpl
ds
mov
sbb
lock
je
dec
or
pop
lds
sbb
aam
dec
bts
jecxz
inc
sti
ret
sarl
jno
mov
mov
lods
popa
test
popf
sbb
and
cltd
lcall
sbb
orb
cmp
gs
xchg
jmp
jg
or
lock
jb
ret
fdivrp
fmul
loopne
lcall
mov
clc
int
mov
sti
pop
mov
mov
das
insb
push
or
xchg
mov
sbb
pop
jnp
outsb
sbb
out
adc
std
cmp
and
jle
aas
popf
stos
jno
pushl
mov
rcrl
clc
push
jecxz
pop
push
mov
int
int
mov
add
decl
leave
inc
fucomip
add
cmp
jmp
mov
sbbb
adc
fisubrs
push
mov
cmc
inc
dec
aad
cmp
xor
test
les
cld
pop
ret
int
popa
and
adc
icebp
roll
xchg
or
adc
lods
call
jnp
mov
inc
jmp
pop
pusha
lcall
cmp
pop
loopne
out
jge
insl
cmc
lock
sarb
mov
mov
in
mov
fdivrl
or
push
out
dec
xor
sahf
mov
cmpsl
xor
test
xorb
stc
cmp
mov
sub
or
in
fnstsw
push
push
mov
jg
jno
incl
and
adc
push
ljmp
pushl
and
in
insl
adc
cmpsb
ror
xorl
sbb
add
sub
dec
mov
ret
cwtl
jge
jl
xlat
std
adc
cmp
cmp
cs
loopne
outsl
cmc
incl
mov
ret
fisubrl
adc
jg
ljmp
sub
mull
cmp
push
arpl
push
push
inc
enter
jg
mov
lcall
repnz
movsb
pop
dec
mov
imul
dec
in
jle
scas
test
je
clc
add
dec
adc
test
fs
pushl
addr16
hlt
mov
cwtl
mov
rcrl
push
std
outsl
mov
dec
pushf
scas
ja
fisttpl
jne
dec
shr
and
test
ljmp
mov
adc
rorl
subb
cmp
pop
add
ljmp
imul
ret
pusha
outsb
dec
out
lcall
mov
xchg
jnp
dec
pop
mov
movsl
mov
dec
fmul
stc
pop
dec
cmp
mov
ficoms
cli
jns
js
std
fisubs
scas
mov
mov
fiaddl
decl
xchg
xchg
sub
stos
fs
das
xchg
mov
sbb
pushl
sub
jns
push
and
jns
in
inc
add
popa
push
rcrl
movsb
pushl
dec
andl
leave
xchg
scas
cmpsb
push
lods
dec
call
sbb
ss
jb
and
push
add
incl
loope
outsl
sbb
sbb
and
clc
xchg
fmuls
xor
jo
icebp
jmp
adc
jns
mov
push
imul
sbb
dec
mov
cld
cmp
xor
sbb
push
jg
pop
std
and
xchg
mov
inc
xor
xchg
pop
cld
dec
in
mov
sbb
jmp
adc
ja
es
ss
enter
lahf
hlt
out
or
repnz
call
dec
sub
cs
inc
in
cwtl
inc
sub
ret
pushl
mov
mov
xchg
dec
mov
cli
call
data16
dec
mov
or
jle
clc
iretw
std
pusha
inc
repnz
pop
pushl
add
lea
pop
cmp
adc
pusha
mov
inc
repnz
fimuls
sbb
lods
inc
incl
aaa
jmp
xchg
ja
or
mov
inc
cmc
out
xor
jns
xchg
push
leave
pushf
incl
andb
mov
movsb
dec
lahf
cli
mov
mov
test
bound
or
cmp
gs
dec
test
icebp
iret
sahf
add
mov
sub
ret
mov
ss
and
mov
cli
imul
cs
notl
adc
aas
adc
jmp
pushf
adc
xchg
popf
adc
jns
call
hlt
add
pop
mov
or
ficoms
out
mov
xchg
lcall
addb
and
cmp
mov
adc
xchg
movsb
shl
daa
sub
sbb
mov
in
jae
lcall
pop
mov
inc
jl
subb
xlat
xchg
subb
pop
lds
sub
xchg
mov
ljmp
adc
cmc
cli
or
nop
jg
sbb
test
inc
insl
repz
mov
pop
mov
sub
lret
add
insl
ss
jns
cwtl
mov
push
outsl
mov
mulb
lea
mov
pushl
sti
icebp
mov
mov
int
mov
cmp
fimuls
call
incb
pop
arpl
mov
cmp
xchg
inc
jnp
sbb
jmp
xchg
push
cltd
sbb
bsr
jb
je
hlt
mov
sub
in
pop
xchg
add
cmpsl
pop
pop
xor
mov
and
flds
test
mov
sbb
sub
cld
iret
stos
or
mov
aam
cmp
js
nop
pop
mov
decl
ds
ret
mov
xchg
pop
test
pop
cmp
cmp
lock
clc
lods
lcall
in
push
test
sarl
jb
insl
andl
clc
add
fsqrt
adc
sub
cmp
js
popf
adc
mov
sbb
fstl
pop
ss
push
mov
sar
decl
jg
jp
aas
push
repnz
fwait
mov
shl
ds
mov
push
subb
lahf
dec
lret
sub
clc
jns
mov
cld
fldt
outsb
mov
or
jmp
xor
mov
insl
or
aaa
mov
add
ljmp
fiadds
cmp
fists
sbb
lret
and
or
dec
mov
icebp
incl
loop
je
pop
test
xor
inc
inc
fstpl
and
push
cld
add
mov
and
push
cmp
das
bound
mov
mov
test
out
xor
les
cmpsb
or
push
decl
cmpsb
mov
mov
jbe
lret
std
cs
mov
cmc
ficoms
mov
sahf
add
int
ja
dec
mov
shrl
ljmp
scas
mov
mov
hlt
aaa
jecxz
mov
xor
mov
sub
sbb
jnp
cld
pop
jecxz
stos
or
aad
mov
in
hlt
cld
incl
test
fsubp
and
xor
aaa
mov
addr16
xchg
xor
pushl
mov
sub
xor
and
mov
pop
cli
dec
decl
js
jbe
fisttpl
out
pop
mov
call
cltd
fs
addr16
push
test
int3
das
ficomps
add
mov
pop
aas
pop
loope
ljmp
jmp
adcl
sar
lds
pop
adc
and
push
aam
pop
push
in
call
lods
mov
add
mov
sub
or
orl
decl
int
sarl
mov
bound
xchg
mov
inc
pop
dec
test
ud0
pushl
inc
loopne
std
jmp
push
out
stos
mov
and
sub
or
sbb
mov
jp
jno
xchg
js
sub
and
add
push
pop
sbb
jne
aaa
cmp
jnp
cmc
arpl
mov
insl
imul
cmp
or
jg
out
jg
fldenv
add
add
decl
aas
out
dec
sbb
xchg
add
mov
fidivl
push
repz
lcall
pop
mov
fcos
ds
or
push
repz
jo
nop
xor
ss
cmp
aam
mov
test
mov
decl
sbb
jbe
jl
aas
jg
rcrl
cli
incb
jge
fimuls
pop
mov
push
dec
hlt
mov
arpl
imul
add
sub
cwtl
pop
call
mov
mov
fistl
xchg
mov
int
test
xor
and
mov
mov
decl
lods
fstps
cmp
dec
lods
gs
cmp
mov
outsb
mov
movsb
lods
lret
adc
adc
das
decl
std
ljmp
repz
adc
cmp
jge
push
mov
sarl
lds
and
ljmp
push
xchg
push
adc
out
aad
test
adc
mov
fbstp
cli
incl
in
fsubrl
ficomps
push
test
mov
push
or
call
xor
jae
icebp
pushl
movsl
pushf
movsl
inc
das
mov
push
sbb
push
push
dec
dec
cli
push
lcall
and
aaa
lahf
cwtl
cmovae
cmc
fcmovnu
mov
mov
nop
out
sub
push
les
dec
cwtl
or
inc
fisttps
incl
scas
pop
aam
andl
addl
inc
cmp
das
push
inc
mov
pop
cli
cld
pop
std
jo
cwtl
jg
mov
rcrl
les
add
dec
adc
loope
mov
sbb
loopne
push
dec
push
or
cmp
adc
inc
inc
mov
loop
aad
and
sbb
ljmp
jmp
sahf
xor
jp
add
inc
sbb
out
ljmp
lock
and
ljmp
mov
xor
jbe
stos
in
mov
sub
mov
fsubrl
orl
mov
imul
imul
clc
and
rorb
lcall
lods
lock
loop
inc
lahf
push
cmp
out
cmp
decl
push
jl
inc
fiadds
xchg
jl
shrl
lods
in
add
jnp
je
lcall
std
imul
add
sbb
leave
and
fs
add
rol
push
call
add
aas
xor
out
sarb
icebp
add
sbb
mov
pusha
inc
mov
fcomip
push
in
or
dec
jno
mov
decl
fstl
inc
adc
pop
push
mov
mov
inc
dec
ds
jl
cltd
jge
xor
jmp
pusha
lahf
lods
push
sbb
cld
xor
pop
ret
adc
ljmp
sub
pop
pop
pop
fwait
enter
pop
xor
incl
cltd
lea
add
ret
into
into
jg
nop
jge
fcoms
sub
dec
ss
push
jle
pop
pushl
xchg
pop
aas
movsb
out
movsl
lea
int3
xor
daa
stos
pushf
shlb
std
mov
inc
pushl
jmp
lds
push
in
sub
xchg
mov
icebp
pop
in
xor
inc
sbb
les
in
in
inc
fbstp
mov
jmp
fisubl
and
push
mov
aad
adc
incl
lods
movsb
and
icebp
lret
fdivrs
movsl
pop
dec
xor
cmc
dec
push
rcll
xor
fisubl
jae
jle
mov
sub
mov
js
call
sub
xchg
xor
mov
xchg
fistpll
adc
sub
sarl
inc
inc
int
cmp
dec
cld
lcall
in
push
jns
dec
mov
dec
push
testl
pop
jae
lods
inc
xchg
aam
js
scas
pop
sbb
pop
mov
adc
or
mov
mov
or
pop
andb
mov
ljmp
lret
call
sarl
xchg
jp
mov
outsl
dec
movsl
sub
cmp
movsb
pusha
and
mov
mov
lock
decl
and
sti
and
cmp
je
aad
mov
clc
outsl
lock
dec
jp
pop
cmp
pop
fwait
insb
push
sbb
cmp
and
pop
loopne
addr16
daa
mov
dec
stos
add
loop
xor
push
xor
xchg
call
push
scas
jo
push
adc
mov
sub
adc
xor
mov
nop
mov
xor
js
in
push
or
cmp
out
sbb
imulb
aaa
or
jo
lcall
pusha
in
pop
int3
popa
data16
inc
adc
sarb
test
daa
shrb
ljmp
mov
jge
rcl
xchg
jae
scas
or
call
popf
jns
jns
cmp
jg
inc
adc
pop
fsts
call
push
loope
cmp
ljmp
dec
dec
mov
scas
aad
test
outsb
push
movsl
and
mov
mov
dec
xchg
popf
mov
jo
xchg
mov
repnz
les
and
mov
pop
in
sbb
jo
dec
in
inc
jo
cld
call
es
push
lahf
icebp
out
outsl
and
popa
popa
push
push
xor
fisttpll
lcall
stc
out
jmp
and
pop
aad
stc
pop
cmp
push
mov
ljmp
frstor
adc
push
jge
dec
and
repnz
fsubr
ljmp
mov
data16
lea
pop
clc
xor
icebp
push
xchg
pushl
xor
jge
sbb
jns
adc
out
inc
call
mov
int
out
dec
xchg
xchg
mov
mov
fbstp
adc
cmp
sub
sub
xchg
push
add
ljmp
rep
xchg
push
jg
xlat
sbb
imul
movntss
mov
mov
enter
push
testb
out
or
or
insl
popf
lcall
cld
pushl
sub
mov
fmulp
outsb
push
loopne
xor
mov
lcall
ret
jae
popf
out
imul
ret
fs
filds
pop
lock
pop
loopne
pop
push
flds
mov
xchg
imul
icebp
inc
gs
pop
rclb
out
cli
sbb
rcl
pop
rcr
cli
jmp
mov
jnp
fwait
add
shll
xor
outsb
ss
ljmp
add
inc
clc
hlt
sbb
sub
jg
insb
cmpsb
push
dec
cmc
pop
cli
outsl
and
inc
sub
dec
stc
jecxz
xor
mov
pop
call
pop
push
shl
jecxz
inc
inc
lods
into
lds
fiadds
jmp
sbb
cwtl
cmp
in
int3
iret
push
sub
mov
or
cmp
jns
popf
ljmp
mov
scas
pusha
scas
popf
cmp
push
mov
cmp
cmc
pop
call
pop
jl
xor
hlt
pop
lea
shrl
decl
aaa
mov
pop
or
and
cld
stc
lods
xchg
aam
jecxz
aas
cmc
pop
adc
call
jge
lahf
inc
mov
pop
jns
cmp
repz
pop
insb
lret
push
fldl
push
shrl
call
xlat
cmp
xchg
shrl
cli
loope
imul
pushl
stos
subl
dec
imul
outsl
adc
out
jmp
push
mov
mov
std
sub
adc
push
es
lock
pop
jae
push
hlt
push
in
pop
je
and
or
daa
cmpsb
mov
pusha
in
pushl
loopne
mov
dec
dec
mov
or
mov
popf
xor
sub
ljmp
in
movsb
clc
mov
dec
lods
aas
sub
mov
imul
enter
pop
cmp
push
mov
dec
daa
dec
in
jnp
lock
lock
xor
dec
or
mov
out
les
loop
mov
mov
jb
subb
ljmp
dec
mov
xor
xchg
cmp
xchg
add
shll
js
insl
je
pushl
or
jmp
out
decl
stos
push
add
mov
jno
cwtl
hlt
popf
mov
fsubr
jge
inc
add
dec
push
cmp
idiv
ljmp
ljmp
lcall
cmp
and
or
ljmp
orl
xchg
jo
mov
in
lds
inc
ljmp
mov
xor
daa
imul
mov
push
cli
jg,pn
mov
sub
jp
mov
pop
dec
dec
fiaddl
push
sbb
cmp
call
pop
aas
cmp
sbb
sub
nop
js
popa
sti
mov
std
jg
js
in
lock
xor
add
or
ljmp
icebp
ljmp
pusha
shlb
jecxz
insl
in
inc
pop
or
jne
xchg
cli
jmp
stos
push
out
and
adc
sti
inc
push
sbb
cmp
fcmovnb
decl
cli
cld
rcll
int3
xchg
cmp
adc
lcall
push
push
mov
fadd
jae
pop
icebp
sbbb
cli
inc
or
push
inc
pop
sbb
push
pop
lods
in
push
aaa
cmp
shll
jp
je
aam
mov
lds
lods
shll
sbb
outsb
mov
mov
call
jbe
daa
out
out
icebp
push
sub
out
xchg
cmp
gs
nop
rolb
jle
ljmp
mov
jecxz
mov
or
loop
insl
jg
lock
call
and
lcall
add
adc
inc
orb
jae
insl
test
fildll
test
inc
cli
pop
loopne
sbb
pop
sbb
out
into
lock
jmp
movsb
enter
pop
enter
pop
cmpsl
ret
dec
std
mov
inc
aas
add
adc
inc
sub
xlat
mov
stc
add
cmp
ss
loop
mov
dec
fld
sbb
jecxz
lahf
xor
inc
int
cli
ffreep
stos
into
shrb
push
push
popa
sbb
inc
psubw
and
cwtl
pop
sub
decl
movsl
stos
jmp
mov
push
and
push
jecxz
je
mov
rcrb
lods
loope
decl
leave
enter
and
mov
push
rorb
movsb
ja
insb
jmp
pop
test
das
cmc
incl
or
sti
or
inc
std
loopne
mov
out
call
push
call
push
sbb
enter
dec
cmpsb
pop
stos
sbb
mov
jg
xor
mov
push
lcall
pop
mov
dec
jo
mov
out
adc
pop
out
dec
adc
dec
push
cli
dec
std
push
sbb
repnz
mov
and
xchg
cs
lods
mov
dec
bound
mov
repz
xchg
scas
cld
lcall
sbb
scas
imul
orl
or
pop
jecxz
lahf
pop
sub
andl
cmp
jb
jne
mov
jg
jg
mov
mov
test
outsl
test
lcall
mov
scas
nop
jp
orb
adc
or
inc
das
fnsave
mov
jmp
arpl
repnz
stos
dec
rclb
xchg
mov
sub
or
xchg
or
mov
adcl
in
in
sub
inc
add
leave
add
popf
mov
mov
fdivs
mov
rcl
mov
sar
incl
data16
mov
mov
add
out
aaa
xchg
add
dec
into
fidivs
hlt
xchg
inc
shrb
in
push
movsb
insb
rolb
outsl
inc
xchg
mov
outsb
and
fsts
out
pusha
mov
xor
lret
inc
xchg
out
in
loope
cmpsl
loop
cs
sub
or
pop
ret
sub
cli
jg
jp
jno
hlt
sbb
xlat
adc
cmp
sbb
lahf
jg
mov
push
jge
mov
xchg
xchg
lods
sbb
scas
movsl
jp
ficomps
call
cli
and
in
mov
rcrl
push
data16
xchg
outsl
lock
decl
xor
jb
popa
dec
add
fiaddl
imul
dec
notl
push
ljmp
icebp
fsubr
gs
sub
cmp
add
mov
out
mov
xchg
push
shrb
and
das
cmp
xchg
add
jmp
xor
mov
icebp
push
and
and
push
pushf
mov
test
mov
sub
decl
test
int3
scas
cmovbe
lahf
jg
sbb
int
pop
or
popf
cli
decl
xchg
andb
or
jbe
pop
and
push
push
lods
pushf
stos
or
test
jns
sub
push
inc
cltd
and
sbb
xor
call
test
jl
inc
sti
sub
int
sbb
jg
mov
sub
lds
ja
add
mov
call
in
lock
jmp
loop
mov
push
mov
cli
sub
pop
add
mov
sub
jns
xchg
sub
xor
clc
cli
outsl
cmc
lods
call
add
in
xor
xor
jg
mov
mov
mov
loopne
in
ffreep
pop
icebp
cmp
cmc
scas
mov
icebp
mov
xor
iret
outsl
stos
xchg
cs
lcall
dec
jg
mov
outsl
mov
filds
decl
repnz
push
adc
xchg
push
sub
mov
lret
inc
push
incl
add
cmp
ret
addl
movsb
lret
jns
test
pop
loopne
cmpsb
and
test
push
iret
fistl
lcall
inc
cmc
push
aam
sti
test
iret
xchg
inc
mov
pop
ja
push
iret
add
jmp
fs
jnp
pop
fwait
not
out
xchg
subl
cli
cmpsl
cmp
jg
insl
push
lds
sar
pop
lea
fidivrs
outsb
roll
std
mov
xor
mov
lcall
call
and
out
mov
test
mov
shll
dec
inc
pop
sti
mov
or
fstp
adcl
add
into
pusha
dec
call
add
stos
repz
lahf
pop
jmp
jg
std
jne
testl
shrl
or
gs
fisttpll
jp
pop
xchg
sbb
outsl
jg
movsl
cmp
popf
add
dec
int3
outsl
sbb
adcl
inc
and
stc
aas
iret
xchg
push
pop
mov
sub
pusha
rep
pop
dec
ja
jmp
xor
inc
popa
mov
and
sub
jecxz
cmp
pushf
popa
popf
pop
mov
loope
call
inc
test
dec
sarb
inc
jmp
bound
pop
mov
and
mov
push
clc
incl
dec
and
inc
ja
push
push
sub
and
mov
adc
fucomip
test
loopne
out
xor
cmp
out
ficomps
test
jg
lret
aas
fidivrs
adc
sub
call
cmp
lds
gs
dec
lret
je
aad
ljmp
hlt
pushl
xlat
js
fstpt
and
out
push
rorb
jmp
ljmp
icebp
cli
lcall
mov
mov
mov
ljmp
pop
jle
cmp
dec
add
jnp
jno
cmp
xchg
mov
xchg
loop
inc
imul
loopne
jg
jmp
insb
incl
lahf
das
push
lcall
pop
cmp
mov
mov
mov
jnp
inc
inc
xchg
fwait
pop
xor
mov
nop
xchg
cvtps2pd
pushl
jecxz
cltd
mov
add
in
dec
in
mov
ja
call
adc
pop
lock
outsb
jmp
loop
jl
xchg
add
mov
clc
push
testb
and
jne
dec
pusha
aad
cmp
add
add
imul
push
lods
push
ljmp
pop
cmc
mov
sbb
aam
cli
mov
fwait
mov
fwait
lret
lcall
mov
pop
stos
inc
xchg
repz
xor
inc
fsts
jae
adc
and
ja
decl
aam
adc
push
pop
xchg
sbb
mov
aaa
cld
dec
jecxz
incl
comiss
dec
and
test
aaa
test
and
cmc
test
xor
insl
mov
sbbb
iret
leave
add
xor
inc
inc
adcb
sbb
xor
or
pop
xor
sahf
and
sbb
shr
pop
call
inc
in
dec
xor
mov
in
or
orb
adc
pop
clc
sti
jp
cltd
mov
lods
fs
pop
mov
lret
cli
and
xor
mov
test
out
test
subb
stos
popa
jns
cmp
call
icebp
dec
sub
mov
inc
fistps
js
mov
dec
sub
decl
cli
and
sbb
je
sti
lds
cmp
jo
pop
and
sbb
mov
inc
divl
sahf
sbb
mov
cli
test
adc
lcall
fnstsw
nop
and
fs
dec
sarb
xchg
inc
jmp
adc
fstl
fisttps
pop
add
ud0
jmp
sub
mov
push
mov
xchg
mov
dec
mov
imul
aam
mov
out
cwtl
xor
and
stos
jge
add
cmp
fdivrp
idiv
decl
shll
sub
mov
mov
jo
pop
sub
scas
mov
sub
call
xor
cmp
jb
insb
cwtl
mov
movsl
aas
xor
ja
jecxz
xlat
pushl
rol
lea
lock
rcr
dec
leavew
lcall
addr16
das
lcall
in
fdivrl
jp
xor
es
jmp
sbb
push
aas
lock
test
or
hlt
in
mov
mov
scas
popf
mov
mov
jno
mov
inc
jb
add
push
movsl
jl
test
iret
inc
lods
push
ljmp
aam
push
cmp
in
pop
mov
xor
fldcw
push
ss
cli
mov
push
loop
imul
in
push
jl
fxtract
jnp
sub
inc
add
inc
ljmp
mov
enter
cmp
mov
pop
in
sbb
sti
push
mov
xchg
push
loop
data16
les
pop
cmp
cmpsl
push
mov
xlat
sbb
jno
adc
dec
fwait
or
lcall
mov
inc
repz
addr16
test
adc
mulb
aaa
or
das
rcrb
push
xchg
jge
pop
sub
jg
dec
jg
es
imul
in
js
sub
andl
pusha
cmc
cmp
pop
xchg
push
jecxz
std
int3
outsl
cld
jmp
mov
add
sbb
test
add
fucomip
push
mov
inc
sbb
loopne
jbe
push
outsl
icebp
decl
in
outsb
ficomps
xor
cli
push
pop
pop
pop
mov
lret
nop
jmp
repz
xor
pop
out
int3
and
pusha
lret
xchg
xor
enter
call
in
daa
xchg
xchg
inc
mov
and
jl
push
inc
dec
jl
sbb
movsb
inc
add
decl
jns
iret
fwait
cltd
and
mov
cmc
push
pop
cmpsb
je
jg
pop
mov
xchg
inc
xchg
cmp
jmp
cmp
adc
ja
pop
mov
adc
mov
or
xchg
clc
lods
ljmp
int3
js
lods
or
sbb
jbe
jmp
js
jo
shll
js
ret
mov
in
ss
clc
pushl
in
fsub
cld
xchg
mov
scas
insl
adc
inc
adc
into
and
adcl
loopne
push
and
cmp
out
fsts
jge
call
pop
mov
push
mov
mov
out
int
lret
lahf
stos
xchg
lea
push
clc
mov
lcall
push
mov
rclb
and
adc
pop
mov
xchg
incl
lcall
stos
addr16
nop
sub
fisubrl
lea
cli
in
jb
ljmp
test
lcall
mov
leave
aas
ret
adc
pop
cli
insl
jmp
int
mov
or
mov
mov
xchg
sti
in
adc
push
or
mov
fdiv
push
fbstp
loopne
mov
adc
in
dec
hlt
ss
cli
scas
add
clc
push
jae
jbe
jge
mov
test
roll
fcomi
push
incl
call
outsl
inc
mov
pusha
mov
push
inc
jmp
loope
hlt
or
cli
mov
inc
jmp
mov
dec
daa
xchg
call
pop
lods
cmp
cld
sub
into
lock
rorb
mov
mov
xor
sbb
and
sbbb
jne
daa
and
pop
out
sbb
out
aam
mov
pop
sub
into
cs
push
lea
call
pop
or
lcall
outsb
das
jg
loop
add
jmp
jb
lock
outsl
pop
fsub
cmp
jmp
and
mov
aam
out
fbstp
lcall
jecxz
sbb
decl
jmp
rcr
jb
inc
int3
push
cwtl
nop
aad
outsl
jecxz
es
mov
call
cltd
lock
mov
loop
cwtl
hlt
lcall
or
inc
lds
and
xlat
mov
cld
inc
ret
mov
sbb
pushf
and
adcl
and
movzbl
sar
andl
fwait
add
jle
mov
gs
inc
pop
ds
mov
adc
repz
mov
sub
cmp
mov
nop
add
mov
aad
pop
mov
mov
push
jl
pushl
cli
cltd
adc
pop
and
mov
jle
xor
out
out
movsl
in
mov
add
dec
jmp
jg
jge
cmc
inc
or
ror
movsb
int3
jae,pn
shr
pop
pop
pushf
or
mov
mov
ret
ror
stos
test
jmp
popl
cmp
xchg
rcll
sbb
jge
push
add
dec
xor
ret
sbb
mov
lret
jne
add
pop
push
popf
or
adc
cmc
enter
and
push
lcall
cli
cmp
push
pusha
push
xchg
popf
pop
inc
imul
mov
out
frstor
xchg
insb
xor
lahf
xchg
mov
decl
mov
xchg
jno
pop
je
inc
cld
cmpsl
dec
nop
mov
movsl
inc
ds
loope
mov
lcall
outsl
mov
and
dec
push
sbb
hlt
roll
jmp
in
pushf
incl
sbb
je
cmp
pop
lods
sub
popa
jb
push
jb
ret
dec
out
loop
cmp
popa
pop
idivl
lea
add
fidivrl
cmc
out
xor
sbb
incl
inc
mov
push
lret
adc
jnp
add
push
jbe
xor
outsl
fcompl
nopl
or
xchg
push
popf
push
ficomps
incb
mov
pop
movsb
cmpsl
jmp
jle
movq
inc
sub
xchg
jge
inc
iret
cmp
call
xchg
inc
rol
cli
ret
mov
mov
aas
push
mov
fnstenv
lods
inc
mov
cli
aaa
xchg
decb
mov
push
lods
jp
xchg
les
push
std
call
push
repnz
imull
in
jno
loope
mov
sbb
incl
jno
jg,pt
jnp
sbb
cmp
loopne
add
sahf
lock
add
repz
mov
push
fnstsw
in
jge
hlt
mov
test
pop
clc
lea
fidivrl
lahf
xchg
jns
jecxz
aad
lcall
in
pop
xchg
outsb
cmp
mov
lahf
sbb
push
out
cmp
decl
cmp
mov
inc
cmc
push
cwtl
mov
or
mov
dec
jb
int3
hlt
ljmp
mov
iret
mov
pop
and
and
sbb
incl
pop
aad
notl
inc
dec
push
mov
js
mov
jo
cmp
fisubl
lea
ljmp
stos
cltd
movsb
fadds
call
mov
ljmp
fstl
arpl
insb
or
add
dec
paddw
fildll
push
clc
jge
call
xchg
mov
out
clc
lcall
cmp
xor
adc
pusha
scas
pop
shlb
fsubp
dec
mov
ljmp
mov
addr16
pushfw
lods
loopne
repnz
xchg
xchg
adc
jmp
lcall
sub
push
jb
pop
in
rolb
push
ds
sti
xor
mov
dec
cltd
scas
push
push
cmc
jno
add
xchg
aas
data16
aaa
sub
lock
fsubrs
mov
incl
mov
jge
xchg
add
mov
adc
or
sar
xlat
dec
stos
jbe
mov
shrl
shlb
pushl
fsubl
jg
jecxz
cmp
in
xor
popa
pop
mov
inc
mov
mov
ror
cmp
addr16
xor
xor
mov
mov
shlb
pop
test
xchg
repnz
xchg
sub
jno
mov
aad
cmc
mov
mov
mov
loope
and
and
ljmp
push
test
jae
pop
cmp
pop
cmp
testl
loop
push
leave
inc
dec
ret
dec
cltd
in
pushl
push
mov
ret
jecxz
adc
imul
mov
call
inc
or
test
mov
sbb
cmc
dec
imul
outsl
popf
xchg
sbb
pushl
push
pop
inc
lds
cmpl
xchg
sti
aad
out
sar
jbe
cld
pop
imul
pop
call
push
aas
lods
push
stos
icebp
out
adc
ljmp
dec
mov
push
cmp
daa
push
shlb
mov
cmc
pop
mov
dec
adc
push
stc
ret
or
push
and
fidivl
in
sbbl
call
add
pop
mov
mov
push
cmpsb
push
mov
cltd
cmp
jmp
mov
xor
cmpsl
lods
xchg
jne
cmp
cmp
or
sbb
sub
mov
dec
cmp
cmc
lcall
xor
mov
mov
push
pop
shll
fistps
add
mov
fildll
mov
sub
jns
mov
mov
mov
filds
negl
add
imul
ror
pop
xor
jg
call
mov
jns
leave
add
cmp
cmp
or
out
ja
inc
jbe
sub
addr16
lret
pop
imul
push
mov
xchg
mov
cmp
imul
push
aam
imul
pop
lcall
std
movsb
fsubr
jl
jae
movsb
inc
xchg
out
and
xor
test
sbb
je
ljmp
push
jge
clc
imul
call
lret
in
mov
rcrl
movsl
cmp
jecxz
dec
lahf
test
sar
fnstsw
xor
test
icebp
push
mov
iret
xor
ljmp
mov
aaa
add
sbb
add
repz
in
mov
sti
rol
popf
shlb
out
and
mov
decl
jg
arpl
sbb
mov
or
outsl
icebp
call
pop
test
out
cmpsl
loopne
xchg
ds
push
mov
aaa
xchg
fiadds
sbb
aam
cmpl
push
jp
daa
dec
incl
mov
sbb
bound
std
xchg
mov
call
push
les
je
fsubrl
mov
fsubrl
lock
mov
sbb
push
mov
sti
mov
mov
rcrb
mov
and
mov
mov
cmp
pop
std
lcall
xor
mov
cmp
cmp
sub
test
pushf
dec
testl
inc
out
jno
jge
test
movsb
mov
mov
sahf
frstor
mov
das
jecxz
add
dec
jne
push
pop
js
mov
mov
cmp
sbb
dec
loopne
inc
jle
mov
jmp
lahf
decl
lcall
cld
enter
push
std
shlb
sarb
lret
adcl
jg
add
stos
call
mov
out
fsubrs
mov
xchg
popa
fisttpll
xchg
pop
stos
ja
and
pop
push
aam
jg
push
jae
movsl
imulb
push
sub
mov
mov
loop
jb
dec
into
and
mov
mov
inc
xchg
decl
inc
out
inc
jne
rcll
mov
jbe
jmp
js
mov
jl
pop
call
sub
fs
scas
inc
das
mov
movsb
js
inc
ljmp
lret
test
mov
sbb
mov
cmp
add
pushl
popf
adc
mov
out
ss
xchg
test
out
or
and
dec
fsub
add
mov
jge
lock
incl
mov
push
push
jns
imul
outsl
xlat
push
xchg
sub
mov
cmpsl
mov
adc
xor
lcall
and
lahf
mov
inc
push
adc
lds
push
jge
mov
xorb
addr16
sahf
sbb
jmp
sbb
push
movsl
mov
inc
adc
ds
mov
lock
or
bound
jge
adc
incb
mov
or
sub
add
mov
sub
adc
pop
sbb
js
inc
popf
decl
pop
sbb
cmp
jno
pop
dec
lcall
sub
fs
cmp
push
inc
add
mov
cmc
jbe
imull
xor
dec
out
pop
das
inc
pop
pop
ds
lods
mov
ljmp
cli
push
inc
xor
in
aam
in
in
mov
inc
pop
insb
mov
outsl
jg
jle
dec
les
rcrb
inc
pop
push
pop
adc
push
xchg
inc
add
or
outsl
mov
ss
cmpsl
lock
jnp
sub
idiv
push
lcall
dec
pop
sub
fnstenv
clc
xor
subb
call
cmp
xchg
xchg
xchg
lods
cli
popf
xchg
imul
sbb
lcall
mov
je
jg
nop
je
jle
les
in
stos
and
pop
xchg
in
mov
cmp
arpl
andl
incl
ss
sbb
in
aam
insl
fldcw
sub
out
sbb
dec
std
mov
divl
movl
scas
shl
or
in
test
test
lcall
push
out
gs
sub
fs
mov
icebp
orl
mov
mov
mov
mov
xor
addr16
push
or
lcall
adc
add
jno
cmc
in
mov
out
inc
sbb
call
sbb
pop
or
pop
sbb
orl
icebp
bound
decb
adc
cmp
xchg
pop
loope
ds
mov
inc
xchg
int3
sbb
mov
das
lcall
cld
repz
ljmp
dec
mov
aas
sar
pushl
inc
pop
pop
std
arpl
loopne
pushf
leave
push
xchg
xchg
loop
or
aaa
insb
mov
jmp
lods
push
cmp
ljmp
inc
mov
inc
call
and
mov
mov
and
push
fs
arpl
push
stc
pop
inc
jae
sub
mov
loop
xchg
test
push
add
push
dec
push
fucomi
ljmp
xchg
aas
loopne
inc
lea
gs
fistpll
pop
xchg
jae
repz
hlt
jg
shll
pop
xchg
pop
dec
ret
and
rcrb
test
imul
je
jmp
clc
mov
dec
insl
ljmp
xor
gs
int
rclb
cltd
call
jno
or
clc
xor
out
test
cmp
hlt
inc
cmc
jg
pop
jmp
xor
rorb
flds
aaa
dec
dec
inc
idivl
and
shl
pusha
dec
pusha
jmp
xchg
cwtl
cmpsb
xor
push
xor
int3
lods
roll
sub
jg
mov
fsubrp
imul
cmpsl
scas
in
pop
roll
mov
test
jns
sub
outsb
dec
aaa
sbb
stc
push
mov
mov
push
fadd
dec
int
inc
leave
mov
lret
jge
jg
cld
sbb
sub
fdivrl
sahf
fsubr
outsl
hlt
lret
lret
mov
inc
inc
jbe
nop
sar
mov
xchg
sub
cld
xor
xor
push
adc
clc
ja
jmp
decl
inc
push
xor
mov
sbb
dec
push
out
leave
dec
jmp
movsb
shl
adc
mov
sahf
jae
push
lahf
sarl
incl
mov
cmc
jp
into
xchg
inc
inc
or
ficoms
ss
cli
mov
jo
jb
call
out
xlat
mov
xlat
ss
lcall
cld
pop
add
incl
das
cmp
inc
fistps
cli
pop
ljmp
popa
pushf
push
or
and
add
dec
and
fdivs
or
mov
lods
mov
dec
pop
mov
and
pushf
push
incl
add
mov
jle
stc
push
mov
call
adc
gs
xor
hlt
rorb
pop
inc
jo
sbb
add
pushl
xchg
mov
or
mov
cs
mov
mov
mov
psubusw
pushl
clc
sarl
js
or
sbb
xor
ss
outsl
lods
pop
cmp
outsb
push
push
adc
jmp
outsb
daa
jmp
and
addr16
cli
push
sarb
mov
bound
adc
push
fldt
push
xor
pop
push
xchg
mov
mov
mov
call
dec
xor
push
out
mov
aam
sub
aad
mov
pop
adc
aam
sub
pop
icebp
inc
aas
lahf
mov
bound
pop
mov
push
pop
xor
mov
icebp
pushl
push
bound
jnp
jg
enter
jb
cmovae
xchg
nop
xor
dec
std
outsl
sub
addr16
imul
out
pop
mov
xchg
inc
push
loopne
std
or
incl
fwait
mov
sahf
mov
sub
dec
push
sub
jg
dec
mov
stos
push
sbb
push
in
xor
pushl
fnstcw
xor
rcl
jmp
jl
icebp
sub
push
inc
add
cli
dec
cmp
add
sbb
dec
out
adc
rcrl
xlat
xchg
idivb
sbb
cld
jge
mov
sarl
out
jmp
lds
cld
or
std
xor
sar
call
push
negb
dec
mov
in
cld
aaa
jg
sub
cmp
mov
lcall
xor
leave
xchg
lret
cld
mov
test
push
push
int
in
jg
subb
dec
ud0
jl
pop
cmp
inc
sbb
popf
jbe
push
int3
push
pushl
or
movsb
test
sahf
mov
cltd
lock
or
push
pusha
mov
fsubr
aaa
clc
mov
sar
dec
movsl
xor
shll
jno
xor
xchg
leave
test
fldt
sbb
pushl
pop
cwtl
shrb
or
mov
pushl
je
lret
jl
push
sti
movsl
jne
dec
cmp
arpl
mov
clc
lods
outsl
fidivs
dec
jae
xlat
lcall
ror
dec
std
incl
es
inc
add
dec
fwait
in
cwtl
jns
mov
pop
jg
mov
pop
dec
push
jns
push
lods
movsl
add
sub
out
adc
mov
lret
das
int3
int
shlb
pop
push
xchg
mov
push
lock
lcall
pushf
fistl
enter
arpl
loop
rorl
sub
sbb
daa
or
mov
mov
mov
and
leave
xchg
pop
push
lcall
addr16
icebp
outsb
mov
dec
xchg
jg
push
xor
dec
imul
decl
or
mov
add
mov
ljmp
out
push
stos
or
nop
fwait
push
cmp
push
je
decl
mov
andb
mov
fisttpl
lret
or
int3
int3
xchg
arpl
sub
mov
rcrb
das
hlt
pushl
xchg
xchg
inc
lret
aas
mov
push
jb
cmc
xchg
pop
mov
push
jmp
loop
push
cmpl
push
incb
jmp
sbb
sub
ljmp
cmp
aaa
fildll
and
add
sti
jns
in
jecxz
jmp
adc
jle
and
fcoms
sti
test
pop
pop
sarl
xchg
mov
cmpsb
mov
shl
into
pop
cmc
sub
dec
dec
xchg
mov
test
cmp
cmpsl
or
jge
inc
idivl
push
or
adc
dec
data16
cmp
popf
push
dec
ja
xchg
jecxz
mov
cltd
ja
mov
scas
xchg
mov
int3
xorb
dec
xor
mov
aaa
cli
incl
jns
cmp
sub
fnstsw
mov
jmp
ljmp
inc
mov
arpl
lods
mov
and
incl
lcall
jmp
js
cld
stos
add
data16
ljmp
jp
xchg
push
dec
scas
hlt
cmc
test
leave
dec
jg
into
mov
fdivrp
cmp
cmp
push
hlt
jl
fmull
and
cld
adc
aaa
mov
arpl
popf
dec
or
pushl
mov
cmp
push
ljmp
inc
sbb
aaa
clc
mov
fs
lea
icebp
mov
mov
out
in
stc
dec
adc
mov
push
inc
cli
inc
aas
dec
pop
jmp
mov
push
inc
stos
mov
fildl
ret
inc
mov
lcall
clc
push
dec
loop
cmp
jns
adc
add
ljmp
jbe
orl
testl
or
incl
sbb
jnp
ljmp
loopne
or
out
fdivr
incl
shr
sarb
inc
xchg
hlt
mov
xor
cmp
lods
iret
pop
fsubr
mov
add
iret
fdivrs
xor
jns
lcall
pop
jo
inc
mov
sub
pop
out
js
leave
call
in
icebp
test
sbb
pop
aaa
lea
out
imul
sbb
enter
repnz
sbb
lds
pop
lock
out
cltd
push
adc
std
ljmp
int
fwait
jge
shl
push
add
xchg
mov
ljmp
sbbb
daa
mov
mov
push
adc
ljmp
cld
hlt
cmpsb
out
shll
int3
mov
mov
cmp
mov
dec
cmp
daa
lahf
xchg
repnz
mov
fildll
or
daa
dec
psrlq
lahf
fwait
out
mov
inc
lods
xor
pop
cmp
call
cmp
shl
lcall
sub
pop
mov
scas
pop
sub
mov
jl
fdivr
das
cmc
pushl
pop
shl
subl
mov
xor
jg
fxch
adc
cld
pop
sbb
inc
mov
je
and
test
sbb
jns
push
xor
mov
leave
dec
test
xor
addb
jg
in
mov
js
jne
xor
aad
jmp
das
aas
popf
movsb
rcr
ljmp
mov
xchg
cmp
iret
and
lcall
xor
fisubrs
mov
lds
insl
add
and
nop
or
or
jg
jp
and
cmp
arpl
mov
aad
push
jg
test
stos
cmp
mov
je
ds
fcomp
fdivl
dec
cmp
fbld
sub
push
cmc
push
fisttpll
test
sti
jl
push
xor
mov
push
pushf
xor
ljmp
js
fiadds
lods
inc
mov
add
mov
pop
or
cmp
dec
jge
push
sub
loop
lcall
mov
dec
imull
cltd
stos
pop
sub
mov
jnp,pt
test
sbb
pop
jg
pushf
fsts
mov
sub
data16
dec
fstpl
out
mov
loopne
lcall
lahf
push
push
outsb
sbb
dec
and
fbstp
outsl
insl
stc
mov
pop
inc
es
sbb
les
aaa
pop
ja
rol
es
mov
mov
incb
jge
hlt
push
scas
or
mov
or
call
mov
out
insl
lcall
ds
iret
push
mov
loope
jge
scas
cmpsb
mov
jbe
movsl
xchg
jg
mov
stos
cmpsl
jb
ja
cmp
subl
jecxz
ret
jmp
mov
sti
ret
aaa
mov
push
dec
inc
cmp
icebp
push
ljmp
sbb
ficoml
and
stos
pop
adc
and
mov
inc
and
ljmp
fiaddl
test
cmpb
fs
stc
sbb
sbb
popa
out
shll
ljmp
jmp
cmp
or
std
jo
rorl
ficomps
shl
pop
fldenv
in
stos
insl
ret
mov
inc
add
push
mov
adc
push
sbb
es
xchg
fadd
pop
pop
clc
pushl
in
jb
jb
sbb
jg
notl
adcb
leave
mov
stc
pop
pop
sub
sbb
movsl
inc
mov
xchg
push
push
mov
mov
xchg
adc
insb
add
cmp
mov
add
cmp
sbb
sbb
nop
mov
dec
pop
test
stc
pop
push
push
push
push
adc
cwtl
rcl
sub
jecxz
aas
sub
mov
scas
xchg
dec
xchg
jl
sahf
clc
add
incl
jbe
xchg
fsubrl
sahf
jbe
adc
and
sbb
jmp
std
outsl
add
cmp
scas
call
das
out
pusha
addl
rorb
stos
or
clc
jg
lods
loop
mov
mov
loop
repz
push
std
jg
jbe
mov
popa
cmp
push
xor
xor
lcall
insl
pop
leave
mov
add
push
in
xchg
mov
cli
out
lsl
frstor
fidivrl
iret
outsl
sub
and
rcrb
pop
cs
xor
jg
and
or
lret
xor
idivb
push
jbe
jo
or
mov
xchg
xchg
lods
std
call
and
jge
mov
idivb
sub
cmp
lcall
rorl
int3
loopne
add
mov
dec
call
int3
test
call
adc
cmp
inc
jmp
mov
movsl
pushl
xchg
xor
test
lcall
cmp
lcall
push
jmp
out
mov
cli
mov
fscale
sbb
cmc
repnz
cmp
pushl
pusha
cmc
shl
add
xchg
test
sbb
cmp
adc
jl
ret
scas
push
dec
jmp
inc
outsb
rcr
outsb
fdivr
das
adc
cld
rolb
outsl
pushl
dec
test
jge
xlat
add
push
in
clc
pushl
andl
into
addr16
jnp
cmp
adc
add
push
push
ret
cmpsb
xor
aaa
adc
std
push
shll
dec
movsb
sbbl
gs
mov
pop
mov
out
repz
fisubs
cwtl
fsub
ljmp
lock
addr16
int3
xchg
subb
cmp
and
in
push
mov
fbstp
das
scas
add
push
lret
add
push
hlt
les
xchg
fstp
scas
adc
push
sbb
ljmp
popf
cmp
or
jge
sbb
or
sub
lock
jmp
add
pushl
cltd
outsl
or
subl
dec
andl
rcrl
pushl
pop
and
movsl
pop
loopne
jmp
aas
jb
test
jo
jmp
pop
adc
cmp
lock
cmp
jecxz
or
push
push
cmp
mov
sbb
mov
jl
mov
ret
dec
clc
gs
loop
seta
sub
xchg
pop
cmp
mov
mov
lcall
fisubrl
testb
inc
mov
pusha
pop
stc
es
jns
lcall
inc
sti
pop
add
out
inc
cmp
mov
mov
out
fidivl
cld
cmp
test
cmc
mov
and
rcll
pop
imul
adc
ret
in
insb
adc
xor
in
or
jl
ret
push
xchg
repnz
fiadds
gs
stos
inc
movsl
xor
les
call
mov
mov
pop
mov
in
arpl
pop
cli
bound
cmp
cs
fdivs
mov
fnstsw
aad
imul
in
outsl
lock
fbld
aas
sbb
mov
loopne
pop
fwait
sahf
in
xor
xor
incl
dec
or
or
push
jnp
incl
sahf
hlt
mov
ss
xchg
daa
jnp
stc
rcrb
mov
xchg
adc
or
cs
lea
je
mov
scas
jg
pushl
pop
mov
fbld
mov
pop
pusha
es
inc
das
adc
lcall
arpl
mov
ss
or
mov
and
clc
pushl
adcb
rcrl
mov
sahf
lcall
wbinvd
xchg
push
dec
mov
mov
xchg
mov
ret
mov
xor
add
lret
sub
xor
push
jno
xchg
pop
mov
push
icebp
pop
mov
adc
jl
rcr
jne
icebp
xchg
decl
sub
jb
xchg
lret
icebp
fcmovb
jl
test
mov
incl
shl
adcl
mov
mov
lcall
aad
jbe
and
cwtl
out
jb
mov
lds
xor
jnp
sahf
jns
lods
call
xchg
fs
scas
mov
out
push
cmpsb
jno
or
pop
jg
dec
push
push
or
adc
clc
sti
movsb
stos
mov
fistpll
std
push
lods
sub
and
lods
pop
xor
call
jno
sub
mov
lods
sub
in
mov
cli
lcall
push
movsb
jns
lods
adc
shll
or
popa
mov
xor
decl
ficomps
mov
inc
bound
test
dec
mov
cmp
jmp
decl
addb
xchg
jo
push
mov
dec
cwtl
adc
test
jg
lcall
dec
dec
dec
adc
ficoml
cmp
jmp
ljmp
pop
mov
je
jae
inc
and
incl
loop
adc
xor
cmpl
aam
std
es
cmc
fisttps
cli
movsl
xor
inc
js
mov
sbb
das
lea
and
pop
sub
call
aaa
inc
mov
or
andl
rolb
fildll
call
or
inc
lea
or
and
call
sub
fimull
shlb
mov
cmpsb
sbb
adc
pushl
xor
adc
and
ja
mov
mov
sti
arpl
shl
push
lods
mov
xor
std
fcmovnb
les
mov
sbb
addr16
mov
dec
xchg
jmp
mov
mov
out
mov
inc
mov
cmpl
mov
jnp
cmc
sar
call
and
mov
mov
jb
add
pop
lds
mov
stos
leave
or
loopne
mov
add
lods
inc
mov
jge
fstpt
stos
dec
xlat
lret
gs
decl
bound
xchg
pop
cmp
dec
arpl
pop
push
in
bound
sti
mov
aam
mov
add
lcall
enter
add
jecxz
call
dec
jne
cmp
fdivrs
and
ljmp
push
sbb
inc
adc
sub
clc
popf
mov
add
test
inc
popf
shrb
cli
hlt
jl
xchg
lret
sti
ljmp
js
mov
jbe
xor
pop
stc
dec
das
xor
aad
aas
xchg
jg
addr16
sub
xchg
cmp
outsl
pop
jl
pushf
nop
pop
and
mov
pushl
clc
dec
mov
push
xchg
push
inc
jmp
jno
leave
add
push
jmp
mov
add
into
mov
loopne
out
add
mov
xor
dec
les
idiv
inc
in
dec
in
or
sbb
push
out
rcl
inc
add
insl
pop
mov
enter
mov
jbe
jle
inc
lods
dec
pop
jge
hlt
xchg
inc
lret
test
repnz
and
xor
mov
imul
adc
leave
shll
aad
mov
das
mov
mov
movsl
test
mov
lds
fs
shrl
decl
insb
outsl
pop
pop
je
popa
dec
xchg
test
ss
adc
aaa
fildl
pop
pop
pop
pop
cli
pushl
lcallw
aad
or
cmp
rclb
jl
sbb
inc
mulb
ret
lods
xchg
sub
inc
xor
or
incl
in
in
xchg
xchg
aas
addb
pop
inc
mov
sti
jae
loopne
std
cmp
sub
cmp
push
sbb
mov
cli
pop
xorl
sub
sub
fdivrp
incl
adcb
stc
jmp
push
rclb
fs
mov
aaa
sbb
inc
ljmp
sbb
insb
inc
pop
pushf
or
data16
decb
and
test
imulb
mov
pushl
inc
inc
cmp
sub
fdivs
xchg
in
int
mov
xchg
icebp
cmp
rolb
inc
ljmp
jno
addl
sarb
jbe
pop
push
in
repz
dec
loop
push
push
mov
pushl
cmp
xchg
jmp
mov
sub
or
mov
stos
outsl
sub
repz
or
dec
out
popf
adc
mov
repnz
jo
jg
add
fstps
and
sets
insb
cltd
mov
scas
jmp
call
outsb
and
pop
cmpsl
xor
cmpsl
stc
outsb
test
pop
out
repnz
pusha
cmp
pop
call
sub
iret
add
fcoml
cmp
in
movzwl
lods
dec
cmp
mov
insb
cwtl
sub
insl
stos
es
cmp
lahf
add
sub
add
addb
sub
jno
push
imul
sti
pushl
and
mov
ret
test
xor
jne
jb
jmp
aaa
xchg
movsl
xlat
mov
sbb
insb
iret
sub
ret
inc
fs
lock
les
out
adc
add
mov
testb
mov
and
mov
decb
aam
mov
in
push
sar
sbbb
add
mov
arpl
push
cs
xchg
xchg
decb
sub
xor
xor
jg
das
aam
ret
cmpb
mov
in
jge
sbb
adc
lods
lcall
adc
outsb
xlat
hlt
repnz
jne
cmp
lock
push
aas
mov
out
pushl
orb
dec
jp
or
inc
mov
popa
aaa
mov
scas
add
pop
test
cld
jp
cmc
std
xorl
dec
push
fs
push
pop
fwait
jecxz
xor
sbb
jl
lcall
sbb
mov
inc
push
sahf
outsb
repnz
jg
pushl
nop
outsb
idivl
push
pop
lock
inc
cmp
mov
xchg
push
pop
jg,pn
pushl
sub
mov
std
dec
add
lock
mov
xor
aam
test
push
lcall
cmp
sbb
or
jno
sub
ret
ret
loopne
lcall
dec
sub
or
mov
mov
inc
in
cmp
fwait
mov
push
adc
adc
cld
pop
mov
outsl
mov
jmp
xchg
repnz
mov
cli
test
int3
fdiv
aas
sub
sbb
mov
add
std
incl
mov
pop
or
push
hlt
jge
mov
popf
dec
cli
lret
decl
mov
lret
sahf
notl
push
gs
mov
cs
sub
sar
ljmp
bound
push
into
fcoml
loope
ret
sbb
mov
mov
out
addb
dec
mov
pop
add
add
add
xchg
cmpsb
fwait
push
arpl
nop
ret
popa
xor
imul
vcomiss
incl
mov
mov
pop
jae
mov
xor
inc
pushl
les
mov
in
mov
mov
mov
scas
and
mov
add
pop
loopne
xor
cmp
dec
clc
das
lock
xchg
pop
fisubs
fsubl
ds
dec
lcall
call
pop
fwait
xor
or
or
or
shl
dec
mov
ljmp
sarb
adc
adc
loopne
lds
jno
jle
andl
lcall
incl
movsb
dec
or
pop
mov
fsubs
gs
sub
jg
loope
push
xchg
pop
insb
adc
cmpsl
mov
or
dec
jg
push
and
xor
xchg
stc
cmp
call
scas
int3
inc
cmc
dec
push
jo
std
enter
shll
pop
pop
mov
ja
mov
pushl
leave
test
adc
lret
push
daa
jge
pop
dec
out
inc
push
mov
inc
sarl
data16
dec
mov
fbld
dec
jp
adc
mov
sub
fildll
ret
pop
movsl
pushf
idivl
dec
shlb
mov
inc
dec
ljmp
cs
pop
sub
arpl
fcomps
push
jge
xlat
mov
ljmp
nop
out
xchg
xchg
popa
popf
inc
push
push
inc
out
push
cmp
sahf
xchg
fdivrl
lcall
out
push
mov
testl
xor
cmp
clc
push
mov
and
xchg
xchg
sub
int3
aaa
push
pop
dec
cld
sbb
jle
and
sub
adcl
or
pushf
xor
loope
xchg
push
sti
mov
bound
push
rorb
aas
pop
ds
jl
fstpt
fcomps
push
mov
xor
jnp
push
and
adc
lcall
dec
fldenv
jp
nop
fadd
jmp
ss
sub
pop
rorb
lods
cmp
cmp
inc
aas
shr
xchg
pop
pop
adc
std
adc
incl
call
mov
inc
xor
mov
loope
lret
ja
js
push
js
mov
sbb
icebp
leave
imul
mov
mov
incl
lahf
outsl
cmpsb
sub
adc
mov
mov
scas
jg
ljmp
pushf
mov
cmp
fsubs
cmc
loope
cwtl
stos
xorb
loopne
cmp
inc
push
leave
lds
mov
or
push
cmp
pushl
movsl
leave
jo
adc
rclb
mov
xchg
sbb
mov
decl
retw
cltd
xor
imul
or
mov
icebp
pop
adc
mov
lahf
xor
movsb
cs
jbe
cmp
fucomip
jg
test
xchg
adc
in
mov
rep
push
ds
lcall
fildll
sbb
push
adc
dec
repnz
cli
in
clc
lret
mov
cmp
in
cld
inc
pop
jns
pop
push
insb
fistpl
lods
sub
mov
pop
add
ljmp
mov
mov
test
mov
aam
pop
lds
icebp
ljmp
pop
call
hlt
test
dec
mov
xor
push
mov
imul
lods
popf
sub
adc
push
faddl
push
iret
cmp
mov
decl
xchg
cmp
add
jb
jmp
ljmp
out
and
clc
and
push
iret
mov
mov
arpl
mov
mov
cmp
je
adc
rorl
add
pushf
or
pushf
add
repnz
call
jmp
ret
scas
stos
mov
clc
xor
scas
mov
mov
jae
cmp
push
add
lcall
fcmovbe
dec
mov
sbb
loope
shll
xor
out
rcr
add
fucomip
sar
cmp
mov
roll
aad
sub
aaa
cli
fbstp
pop
mov
xchg
and
jp
lods
cmp
mov
ud0
jmp
loopne
icebp
mov
ds
adc
test
das
cmc
ljmp
int
fsubrl
cmpb
enter
xchg
push
sub
cld
jg
sbb
adc
mov
pusha
je
and
fs
mov
xorb
add
icebp
stos
add
outsb
cltd
icebp
or
sub
rorl
call
cmp
cmc
test
ficoml
fidivs
stos
cmp
xchg
mov
fistl
fbstp
inc
adc
push
adc
or
ret
push
addr16
dec
cmp
and
call
cmp
jp
sub
inc
nop
icebp
xchg
mov
fmul
mov
shrb
in
pop
or
pop
enter
xchg
jle
std
push
xor
fucomip
dec
shrl
popl
sub
stos
out
mov
jmp
cwtl
pushf
loop
test
rolb
mov
adc
out
pop
inc
mov
fildll
ret
and
or
popa
shrl
sbb
jp
dec
loope
movsb
nop
hlt
pop
stc
clc
test
xchg
aam
test
sahf
inc
pushf
lcall
call
mov
mov
movsl
pop
cmpsb
push
adc
fbstp
clc
mov
pop
xchg
loopne
inc
mov
je
scas
sbb
pusha
fidivl
cmc
ljmp
cmc
aam
mov
jecxz
mov
subb
mov
ljmp
mov
addr16
inc
jle
data16
dec
fs
dec
fwait
add
outsb
xchg
jg
insl
jg
fucomi
lock
out
mov
dec
shl
mov
or
cli
cmp
sbb
jg
call
outsl
pop
xchg
push
lods
dec
jmp
adc
jbe
jae
push
fcmovnb
inc
lahf
pop
aaa
fs
cwtl
push
and
mov
in
cmp
test
jb
inc
cmc
pusha
stos
lods
pop
lods
mov
ljmp
cs
test
sarl
inc
int
cmc
repz
out
imul
dec
or
mov
sbb
ret
inc
cli
out
xchg
dec
nop
fucomp
sti
mov
hlt
fucomp
ljmp
adc
fsubrs
pusha
lret
and
pop
decl
mov
mov
inc
sbb
icebp
inc
mov
ljmp
outsl
push
jmp
mov
leave
xchg
cmp
mov
push
mov
mov
cmp
and
call
xchg
xchg
jnp
decl
or
lret
cli
cmc
mov
les
ljmp
mov
jo
aas
bound
mov
std
push
loopne
cmp
xor
sbb
mov
inc
movsb
mov
cmp
push
arpl
into
mov
sub
cmp
fsubr
jmp
cmp
xlat
jle
mov
cmp
xor
jp
push
add
dec
and
pop
adc
jg
mov
mov
mov
enter
loope
mov
inc
pop
iret
inc
in
in
mov
pop
push
inc
lahf
mov
inc
cmp
add
jg
decl
enter
int
inc
sbb
pop
dec
jo
push
mov
pop
ljmp
jo
js
jo
fisttpll
cmp
mov
xchg
das
cld
cmp
scas
or
mov
fdivrp
lahf
std
mov
pop
mov
jg
popf
mov
sbb
ds
std
add
loope
in
adc
je
push
int
fildl
pushf
decl
imul
dec
hlt
mov
es
xor
rcrb
mov
sti
xor
cmp
rclb
dec
cmp
je
mov
xor
cli
fists
xchg
sbb
pushf
scas
popa
cmpl
pop
clc
pop
or
pop
pop
pop
arpl
daa
sub
adc
ljmp
enter
pop
dec
in
pop
xor
out
and
or
incl
push
in
add
and
and
je
xchg
pop
cmp
cmpsb
inc
and
lods
idiv
call
cli
jg
inc
fisubl
cs
rcll
orb
inc
stc
scas
sbb
das
std
jmp
pop
dec
jmp
push
outsl
push
cmp
test
lock
pop
sub
mov
decl
out
aaa
mov
mov
mov
jle
outsl
shl
or
mov
mov
lods
sub
mov
js
insl
ret
sub
pushl
sub
jmp
fnsave
or
lock
pop
push
data16
jmp
iret
lcall
mov
sbb
dec
pop
and
jp
cmc
bound
cld
scas
cmp
and
mov
add
mov
lahf
mov
in
mov
push
or
jno
pop
mov
iret
stc
mov
repnz
jmp
icebp
sbb
scas
outsb
dec
fbld
inc
ret
mov
daa
or
test
sbb
push
or
icebp
pop
push
in
jecxz
jns
adc
testb
adc
or
mov
push
mov
dec
and
xchg
push
jnp
mov
popa
push
pop
ret
pop
sbb
loope
push
movl
xchg
in
daa
push
lods
aaa
ficompl
pop
out
mov
pushw
ds
leave
sbb
or
push
push
decl
jmp
sub
jg
sbb
insl
sub
dec
cmp
cli
add
fisttps
sbb
sbb
sbb
iret
push
cmp
push
cld
insb
pop
mov
cli
icebp
jmp
testl
retw
insl
inc
leave
shll
ret
movsb
mov
incb
mov
cld
pushl
and
icebp
inc
sbb
sub
cmp
inc
sti
fdivrs
cwtl
and
mov
push
mov
idivb
fdivrs
add
lcall
xor
test
cmc
shrl
sbb
stc
push
lcall
fistpll
fidivl
jmp
add
fs
loopne
jl
mov
aaa
arpl
inc
cwtl
cwtl
pop
cs
jmp
mov
pop
repnz
jg
shrb
lahf
pop
jecxz
xchg
inc
adc
das
hlt
mov
inc
stos
and
fiaddl
pop
ljmp
cmp
std
sub
jg
int
push
mov
xchg
fs
sarl
leave
push
test
xchg
out
mov
inc
mov
roll
pop
pop
rcrl
xor
xchg
test
pop
sub
clc
mov
xchg
insl
addr16
dec
decb
sbb
or
mov
or
mov
mov
ret
mov
jns
xchg
xor
ds
add
pop
fdivr
mov
mov
aas
sbb
push
adc
pop
adc
jae
push
cmp
or
pop
ror
push
mov
stos
cmp
ret
jno
add
jae
repz
mov
sahf
sub
lea
and
je
mov
adc
xor
mov
mov
push
sub
inc
inc
mov
clc
lcall
cwtl
lea
dec
cmpsb
adcl
add
jae
push
rcrl
sbb
jl
ljmp
jle
test
and
lret
push
out
jg
add
sbb
xchg
call
ds
mov
fisubrl
dec
jo
ljmp
cmp
xchg
jnp
out
in
lcall
incl
or
jge
arpl
das
mov
and
cwtl
jg
mov
in
mov
jno
jg
xor
lret
jg
inc
add
sub
pushf
cmpsl
sub
iret
jns
fsts
fucomip
sub
inc
jnp
rorl
dec
daa
fisubl
sahf
mov
aad
sub
std
decl
std
fsubl
xchg
sub
aad
push
imul
xor
add
cmc
cmp
stos
sub
push
repnz
shrb
push
jmp
sbb
shr
and
mov
sub
jmp
or
push
jb
xchg
cmc
push
dec
push
pushl
into
dec
cmp
out
and
jne
mov
inc
cltd
jmp
daa
or
xlat
cld
push
fisttps
cmp
jae
lcall
outsb
mov
cmp
or
ud1
lret
push
pop
test
jg
inc
fwait
stos
sbb
mov
xchg
test
scas
xor
jg
jecxz
fsubr
inc
mov
out
sti
movsl
test
mov
hlt
call
rcl
xor
movsl
xchg
jg
lds
inc
sbb
ljmp
int3
jo
or
shlb
cli
cld
and
jge
adc
pop
xor
lock
xchg
test
xor
lds
fwait
test
xlat
dec
nop
ficoml
dec
pop
and
and
ljmp
dec
jnp
push
sub
dec
data16
das
lock
arpl
test
orb
mov
test
sub
cltd
popa
or
stos
aam
xchg
cli
call
inc
mov
or
lret
jb
sahf
xchg
flds
sahf
mov
lods
in
orl
gs
mov
pushf
push
dec
cmp
gs
fsubl
sub
call
fbstp
cmp
push
sub
enter
movsl
and
hlt
add
into
outsl
mov
sub
sub
jmp
shll
test
lds
aad
std
aad
aas
mov
in
shl
push
popa
pinsrw
adc
mov
loopne
pop
pop
mov
or
mov
std
mov
in
dec
xor
ret
mov
test
fisubrl
adc
cmp
in
cli
out
pushl
cmp
in
mov
pusha
test
mov
mov
and
mov
imul
pop
adc
scas
xchg
xor
mov
or
lret
sub
sub
mov
das
cmpsb
scas
sahf
stos
aam
insl
ds
call
fidivs
fs
push
sbb
outsl
inc
jae
xchg
aaa
sti
stos
mov
ja
call
add
jbe
out
mov
pushl
bound
add
push
lods
leave
xlat
and
jmp
push
stc
mov
xacquire
jno
scas
int
jp
dec
in
cmp
pop
ljmp
test
push
sbb
fs
pop
inc
test
lahf
pop
pop
or
das
cld
outsb
fistpll
dec
pop
je
and
incl
add
repz
add
ljmp
lcall
mov
pop
divb
dec
shll
xor
add
aaa
jle
inc
sub
icebp
test
gs
adc
sar
mov
xchg
dec
aad
cmp
dec
in
in
cmpsb
pop
sub
jmp
test
pop
pop
insl
fsubl
or
mov
push
sahf
inc
fistl
inc
dec
or
push
movsl
push
movsb
iret
out
or
arpl
pop
outsb
loope
sub
lcall
push
call
stc
in
dec
push
je
jne
movsl
add
and
push
les
sti
xor
xor
mov
adc
jmp
pop
mov
dec
pop
jae
into
pop
cmc
adc
xchg
sarl
out
jbe
popa
sbb
lcall
andb
aas
cld
ret
or
paddd
test
in
shll
jns
xchg
mov
cs
ljmp
xchg
mov
cmc
and
push
mov
shll
call
inc
fstpl
test
inc
sub
fisubrs
push
pop
jno
and
out
or
fisubs
mov
mov
out
cmp
inc
int
addb
mov
sbb
dec
fistpll
sbb
or
dec
add
jae
xor
stos
mov
ss
lock
incl
outsb
pop
cs
push
stos
cld
mov
and
jmp
iret
pop
xor
subl
orl
and
popf
ds
pop
xchg
pop
xchg
pop
cmp
lcall
test
movsb
gs
adc
fidivl
je
cmp
clc
jmp
fxam
xor
inc
dec
aaa
out
cli
daa
mov
sbb
pop
fstpt
decl
enter
push
jae
fstpt
mov
jb
dec
xchg
pop
and
cmp
stos
idivl
insl
out
jg
sub
in
popf
mov
test
dec
jg
push
pushf
dec
jle
imul
fs
out
sbb
push
inc
push
repz
jp
testb
cmc
call
popa
jbe
leave
mov
sbb
or
dec
in
ss
ljmp
hlt
xor
stos
push
fdivp
jp
mov
enter
ret
ljmp
dec
decl
add
and
and
mov
in
jmp
test
xchg
pop
lods
lcall
or
push
adc
jo
loop
mov
testl
pop
xchg
push
rcrl
incl
test
ficomps
xchg
out
pop
scas
add
lods
add
aaa
jle
dec
into
add
outsl
incb
decl
pushf
sbb
es
inc
jp
ss
mov
mov
es
pop
clc
lcall
pop
inc
pop
cmpsb
aas
das
mov
jg
mov
cmpsb
xchg
inc
test
rcrb
jmp
pushf
cmp
adc
mov
jp
aam
flds
adc
sti
fdiv
push
cmpsb
cmp
and
int3
lock
xchg
je
mov
std
lods
or
out
push
cmc
pushf
out
incl
sbb
aam
pop
or
ret
dec
jno,pn
into
pushf
repz
jno
fistpl
jmp
notb
int
int3
and
daa
addr16
call
xchg
lock
pushl
pop
aas
xlat
push
cmp
scas
out
xchg
outsl
add
dec
push
inc
sub
testb
lcall
cld
ss
pop
jmp
stc
icebp
testb
jle
lcall
scas
clc
push
inc
mov
fsubs
adc
add
mov
test
push
xor
add
mov
fisubs
mov
pop
lcall
not
imul
test
sti
and
adc
lcall
mov
shrb
dec
out
popf
lds
test
xchg
clc
jg
mov
push
mov
aaa
icebp
jo
jg
push
dec
sbb
dec
pop
or
jge
decl
out
or
push
lea
sub
sub
push
lock
add
pop
out
mov
in
jmp
cli
jg
ljmp
popf
mov
push
inc
bound
lahf
ja
or
test
sbb
xor
data16
mov
rol
mov
adc
or
stos
cmp
decl
pusha
adc
mov
and
pushf
mov
jle
icebp
hlt
decl
test
mov
add
push
or
push
mov
aad
ret
test
add
aas
jnp
sbb
mov
cmc
push
pop
adc
jle
lcall
xchg
ret
push
jmp
or
adc
dec
mov
int
xor
shlb
jle
stos
or
fiaddl
mov
jmp
push
push
xor
sbb
adc
fxch
dec
jg
rcrl
shlb
dec
cli
or
jbe
or
cli
pop
inc
sbb
orl
rorl
ret
xor
inc
imul
call
loope
lods
je
iret
jge
mov
loope
insl
jmp
inc
cmc
mov
xchg
jno
loope
mov
xchg
in
push
enter
mov
incl
or
add
pop
or
nop
dec
push
sbb
setl
es
in
test
stos
call
popa
pop
aaa
mov
aam
imul
jp
mov
fnstsw
jmp
in
repnz
fs
leave
cmpsl
mov
xchg
cli
movsl
mov
or
decl
xchg
add
mov
aam
in
pop
rcrl
decl
sbb
mov
xlat
ds
jecxz
sub
cmp
imulb
stos
jg
bound
pop
adc
popa
leave
test
inc
out
xchg
cmp
mov
sbb
lcall
sub
push
lret
cmpsb
ss
cmpsl
mov
fisubrl
nop
cmp
pushl
shr
lock
nop
mov
sar
popa
adc
jp
hlt
jg
out
ljmp
adc
movsb
dec
mov
out
jg
outsl
jmp
movups
xchg
xor
xor
lds
pop
into
mov
pop
popl
mov
inc
lret
xchg
push
decl
mov
cmpsb
leave
add
cltd
dec
adc
xchg
dec
nop
pop
decl
pop
sbb
dec
lock
out
test
sub
mov
or
xor
mov
mov
lret
call
mov
pop
cmp
fs
daa
add
push
mov
pushl
cli
lcall
dec
movb
leave
add
jns
sub
lcall
push
inc
out
cmp
andb
into
inc
pop
pop
mov
clc
inc
jg
test
sbb
mov
mov
sub
pop
dec
ja
mov
push
ljmp
ljmp
cmp
lock
ret
xchg
incl
xor
mov
add
xchg
push
dec
xor
popf
rcrb
ficoml
call
or
cmpsb
mov
lcall
ljmp
cmpsl
mov
jns
dec
addr16
xchg
lock
sub
and
sbb
xchg
mov
xor
aam
imul
sub
xor
xor
nop
pop
dec
mov
test
loope
mov
mov
adc
sbb
cli
push
aas
mov
icebp
sbb
or
and
mov
jecxz
mov
add
and
sbb
popa
lods
test
insl
mov
mov
mov
pop
popf
add
or
push
int3
rcrl
xor
fwait
lahf
int3
rcrb
movsl
pop
sti
leavew
mov
fcmove
into
cld
add
fdivs
ret
testl
lret
jae
cmpsb
mov
and
loopne
ret
adc
incl
mov
into
nop
jno
push
mov
xchg
shll
xchg
push
mov
test
outsl
std
jmp
push
clc
int3
or
call
lods
xchg
dec
sub
jbe
dec
into
lahf
aad
or
push
jmp
sbb
repz
lea
pop
lds
jg
mov
stos
js
mul
pop
sbb
adc
or
loopne
dec
or
stos
jp
xchg
pusha
idivl
push
ljmp
lock
ljmp
outsl
sub
dec
ret
std
ljmp
lcall
dec
imul
inc
jp
int
daa
push
test
aaa
hlt
xor
pushl
pop
in
xchg
inc
sti
mov
pop
jmp
sbb
jg
mov
in
dec
insb
sbb
inc
pop
lahf
jl
cltd
pusha
fcomip
out
mov
int
inc
cli
lcall
mov
sub
in
mov
sub
pop
sub
fisttps
jg
jae
aaa
popa
daa
mov
push
repz
insb
std
cmp
jle
rcl
iret
icebp
lcall
jbe
in
sub
sbb
les
mov
mov
loopne
pop
cmp
ljmp
push
dec
inc
je
inc
repz
jne
testb
rcr
push
fcompl
std
lcall
jb
ret
filds
in
cltd
mov
sti
loop
jg
sbb
xchg
mov
xchg
int
or
inc
std
cld
jg
or
xchg
pop
inc
ret
aas
dec
cmpsb
rcl
mov
cmp
or
dec
cmp
out
push
testb
test
cs
ljmp
out
mov
test
push
xor
fistl
add
fimuls
loopne
pop
iret
sahf
or
pop
inc
data16
ss
sar
xchg
repnz
imul
arpl
movsb
clc
or
xor
decl
ljmp
jl
pushf
mov
and
push
out
sub
decl
xchg
out
int3
sahf
inc
push
push
mov
aad
xchg
mov
outsl
fmuls
sub
enter
jbe
call
fwait
inc
addr16
out
mov
sti
push
adc
or
ljmp
mov
xor
inc
sbb
adc
ret
adc
bnd
sbb
ljmp
xchg
aas
aad
jge
clc
cmp
cmp
inc
mov
add
movsl
jg
int
ljmp
jmp
hlt
push
sahf
pop
xchg
add
mov
imul
fbstp
pop
bound
pop
push
stos
scas
es
cmp
outsl
mov
dec
lock
popf
mov
stc
add
mov
cmc
iret
fnstsw
pushl
mov
cwtl
jno
test
gs
shlb
sbb
ds
lcall
arpl
and
lahf
pop
inc
mov
push
push
xchg
movsl
mov
jg
clc
jl
lods
stos
addl
insb
js
jl
push
or
fstl
pushl
push
dec
mov
sub
xchg
adc
clc
decl
enter
aam
fdivp
movsb
adc
jmp
sbb
mov
int3
mov
out
xchg
test
jl
js
mov
fwait
inc
jecxz
pusha
xor
cmp
clc
mov
lcall
xchg
push
mov
mov
fsubr
cltd
call
leave
fcmove
std
xchg
and
popa
dec
clc
decl
dec
and
dec
sbb
add
add
jle
test
decl
rorb
jns
je
adc
mov
sub
fwait
jecxz
lcall
stos
call
pop
mov
xor
sub
outsb
jo
dec
mov
sbbl
aaa
mov
das
ret
sub
daa
pop
sbb
pop
push
outsl
hlt
fistpll
out
xorb
mov
mov
mov
inc
aam
push
scas
popf
sbb
les
movsl
hlt
out
mov
jl
cmpsl
push
fstps
icebp
ljmp
push
ror
rcll
jg
test
dec
mov
in
lods
sbb
jl
jmp
jp
ret
push
cmp
push
lahf
push
in
test
sub
add
loope
pop
in
out
sar
ljmp
sbb
cld
sarb
sub
imul
addr16
fbstp
mov
lock
nop
mov
xchg
mov
pusha
inc
cmp
add
push
inc
gs
xchg
and
aam
adc
mov
icebp
jbe
dec
into
or
loopne
sbb
mov
stos
xor
or
or
sub
xor
jns
push
xor
into
mov
xor
mov
jecxz
test
mov
jge
test
or
repz
mov
and
in
jge
and
xchg
movsl
js
outsl
cmc
test
sbb
enter
arpl
mov
into
sbb
ljmp
or
add
mov
and
jmp
lret
xchg
pop
add
repnz
xchg
out
pushl
in
popa
mov
and
dec
mov
inc
in
loop
dec
xor
push
popfw
cli
popf
cld
call
int3
sbb
out
std
jge
adc
mov
xchg
fs
rorb
add
xchg
clc
das
xchg
mov
cmp
xor
jmp
mov
adcb
push
cmp
mov
jge
mov
call
cmp
arpl
cli
jnp
inc
int
sbb
lret
dec
cs
es
adc
push
mull
pop
cld
jp
je
mov
sbb
dec
or
cli
into
ret
insl
ljmp
lock
sbb
lret
xor
mov
push
int
add
cmc
xchg
jp
sbb
mov
pushl
and
mov
pusha
pop
push
stc
or
and
dec
cmpsb
scas
ret
pop
scas
mov
imul
inc
pop
mov
sbb
pushl
mov
les
mov
and
idivl
repnz
clc
and
sub
mov
xchg
je
inc
mov
push
or
xchg
sbb
rcrl
fmul
or
jmp
outsb
mov
pusha
jb
jg
mov
adc
mov
pop
loope
dec
jle
cmc
push
sbb
push
stc
fistl
aaa
mov
mov
add
pop
push
mov
sub
int
adc
fwait
sub
adc
pop
jg
lcall
fnsave
mov
adc
sbbb
sub
sbb
call
mov
pop
movsb
add
rol
out
pop
stos
ret
xor
cmc
lcall
cld
dec
scas
lcall
test
and
or
aaa
push
incl
add
xchg
and
mov
fnstenv
ds
out
sub
lcall
jmp
push
aas
lds
mov
lods
lods
mov
mov
shr
pop
xchg
outsl
jmp
pop
lock
pop
adc
or
sbb
sbb
das
or
mov
dec
ss
scas
xchg
sbb
jae
mov
lret
sub
out
scas
jge
aad
hlt
jnp
jge
cmp
add
lods
dec
movl
push
adc
inc
push
lods
sub
ljmp
jbe
push
dec
dec
adc
shl
jnp
test
outsl
roll
jb
dec
xor
sbb
pushf
popf
arpl
or
pop
daa
mov
jecxz
fsubl
jle
incl
push
mov
popa
clc
mov
mov
hlt
adc
pop
sub
sub
pop
mov
adc
jle
inc
into
mov
xchg
fs
cmp
jl
ss
pop
cld
pushf
and
sub
push
int3
pop
xlat
xor
xor
decl
popf
shll
das
arpl
mov
sub
push
lcall
repnz
out
icebp
aas
mov
pop
push
sub
lcall
decl
and
dec
fsubp
dec
sub
sbb
dec
repnz
xchg
inc
sub
out
ljmp
cld
js
lods
xlat
pop
or
testb
jae
or
clc
mov
push
add
jne
cli
lcall
cld
out
shl
aaa
aas
in
pop
addb
cld
xor
lcall
ljmp
pop
subl
pop
adc
negl
ljmp
decl
push
push
outsb
lahf
mov
cmp
mov
pop
iret
aam
pop
pusha
jg
sub
inc
sub
popf
mov
push
jl
movb
sub
mov
sub
icebp
outsl
adc
dec
adc
jg
mov
aas
push
mov
aad
out
out
xchg
lods
rcpps
fdivl
aad
lcall
or
icebp
ret
rcrl
nop
add
pop
mov
ljmp
push
pushf
xor
mov
dec
xchg
imul
cmp
jg
cmp
sbb
pop
lahf
adc
and
mov
repz
in
and
xor
sub
leave
push
outsl
outsl
jmp
and
dec
pushl
dec
cwtl
push
sub
pop
mov
cli
sub
inc
je
mov
daa
push
shl
into
jno
sub
pusha
cmp
dec
loop
inc
push
mov
test
or
push
lods
lahf
xchg
pop
roll
hlt
jle
mov
movsb
pop
jl
call
mov
das
adc
ss
sub
fwait
in
pop
fdivr
das
dec
bnd
cmp
adc
pushl
sti
adc
mov
in
rcrl
mov
and
aad
mov
loop
dec
sbb
and
sti
out
lds
dec
mov
jp
jecxz
jecxz
jp
or
mov
jnp
push
data16
lret
lahf
sbb
and
mov
mov
jg
daa
and
pop
add
add
adc
xlat
ret
and
sbb
loopne
dec
out
addr16
dec
inc
jnp
inc
mov
int3
inc
push
std
lahf
fsubrl
lahf
mov
adc
adc
and
or
jmp
aaa
mov
pop
xor
pop
adc
pop
cs
xorl
sbb
scas
mov
pop
popf
cmovl
mov
dec
fsts
pop
cmp
dec
mov
sbb
xlat
fwait
test
ljmp
test
dec
out
mov
dec
shl
sbb
pop
test
xchg
pop
pop
jns
cmc
stc
jmp
hlt
cld
insl
xor
aas
xchg
mov
sub
out
sbb
sub
add
std
xchg
shrl
mov
test
decl
sbb
or
mov
mov
subl
push
inc
xor
pushl
lock
ret
cmc
xchg
mov
fidivrl
mov
lcall
out
mov
adc
nop
cmpsl
inc
idiv
mov
sub
lcall
pop
pop
imul
sbb
mov
int3
fstpl
call
aad
lds
test
mov
sbb
add
push
xchg
pop
loopne
and
aaa
out
test
in
push
inc
sbb
loopne
repz
jmp
jp
repnz
ljmp
fldenv
fnstenv
test
aas
cld
pushl
incl
pop
add
imul
clc
push
push
mov
icebp
cs
xor
cltd
mov
in
jge
jo
fbld
mov
mov
inc
fdivr
testb
das
in
cmp
shr
jmp
mov
mov
xor
lret
jb
and
push
popf
ret
loopne
mov
pop
xchg
sub
push
mov
jnp
jne
clc
pop
sub
lcall
movsb
loopne
sti
jle
lret
or
inc
aam
adc
jecxz
add
push
cmc
in
mov
out
push
xor
or
lcall
rol
mov
xchg
mov
aam
jle
push
push
mov
push
and
fnsave
jmp
incb
nop
scas
mov
lcall
adc
jnp
ret
stc
cltd
inc
mov
mov
loop
push
push
xchg
inc
rcl
pop
fstl
push
mov
or
das
call
clc
fistpll
bnd
popa
or
pop
dec
rclb
stos
or
decl
push
or
nop
shlb
mov
cmp
cmp
adc
out
loopne
and
out
push
ljmp
mov
jp
xor
fbstp
push
xchg
scas
iret
inc
flds
xchg
mov
pop
mov
push
das
xchg
jmp
mov
mov
scas
sbb
push
xchg
push
mov
ficoms
int3
xchg
stc
test
nop
jge
add
push
mov
aam
pop
call
leave
popa
mov
xor
movsl
sub
stos
mov
mov
shrl
hlt
mov
or
popa
mov
aas
mov
pop
pop
lcall
or
and
sub
jae
cmpsl
in
fnsave
lcall
inc
cmp
sbb
jnp
xchg
dec
or
movsl
nop
hlt
dec
push
pop
rorb
cld
dec
repnz
sub
xor
cmpsb
in
jnp
cmpsb
pushf
jns
in
fistpll
pop
in
mov
xchg
inc
jg
push
jmp
dec
pushl
mov
insb
jge
inc
iret
and
sbb
push
je
imull
in
pushl
jo
pop
xchg
lea
cmp
mov
lock
adc
add
dec
jns
jbe
insb
sub
aas
push
xor
inc
fnstcw
mov
inc
pop
mov
jp
mov
arpl
or
jg
dec
pop
cmp
test
out
mov
das
and
mov
lock
pop
or
pop
outsb
andl
push
ds
aaa
push
into
push
jmp
mov
xchg
jno
push
pop
rcrl
mov
fistl
push
mov
call
fistl
xchg
sub
mov
sti
xchg
decl
sub
pop
loop
mov
scas
roll
mov
repnz
pop
clc
incl
loop
sub
and
pop
xchg
adc
call
cli
icebp
daa
dec
inc
in
addr16
sti
in
fsubs
addb
aaa
sub
push
pushl
add
fwait
inc
out
repz
jle
xchg
sti
mov
pop
incl
xchg
lcall
cmp
sub
jp
lcall
push
or
cld
push
inc
scas
jl
sub
or
push
xor
cmp
push
mull
imul
mov
dec
push
gs
inc
mov
std
cmp
inc
push
and
jmp
jecxz
xchg
lcall
inc
jle
test
mov
mov
add
dec
pusha
jecxz
jg
sbb
aaa
jb
adc
ljmp
inc
addb
arpl
push
and
dec
clc
add
xor
call
jp
push
pop
shlb
mov
pusha
mov
stos
pop
adc
hlt
jae
fcmovne
orl
cmc
pop
pop
jbe
sub
into
mov
fldenv
sti
xor
jo
mov
out
cwtl
cli
in
arpl
xchg
fisttps
je
cli
inc
jecxz
fwait
xor
jnp
jno
fwait
sti
xchg
push
stos
sub
cli
jbe
push
popf
mov
incl
cmp
hlt
mov
inc
andl
pop
aam
xor
lret
jno
jne
pop
push
cltd
jae
or
icebp
iret
aaa
ds
jg
push
push
jno
scas
and
cmp
dec
mov
jl
cmp
sahf
xchg
and
and
and
lods
xchg
cli
xor
mov
push
mov
sub
pop
mov
int3
xchg
pop
lock
test
faddp
add
jmp
clc
ljmp
xchg
out
ljmp
mov
pop
dec
aaa
lea
arpl
lock
idiv
dec
xor
lcall
lcall
and
or
xorb
lahf
imul
fsub
sbb
pop
daa
shlb
xor
inc
mov
cmpsb
jae
jg
loope
and
ficoms
call
jge
jns
mov
nop
inc
rorl
or
cmp
push
lods
lods
dec
jns
lods
cwtl
cmp
mov
push
addl
adc
test
icebp
ss
andl
bound
mov
in
pop
and
push
jp
mov
mov
adc
pop
std
decl
mov
xrelease
fldl
les
cmc
adc
push
mov
jg
leave
scas
sbb
dec
add
gs
and
loop
rcrb
shlb
js
popa
fdivrs
aam
incl
lods
pop
mov
loopne
loope
mov
rcr
inc
pop
mov
pushl
nop
mov
ret
ret
lret
push
jns
add
out
mov
incl
xor
jg
push
test
cmc
icebp
cmp
cli
jae
jne
popa
insl
xchg
push
mov
clc
aaa
and
mov
outsl
mov
leave
inc
test
jg
cld
call
adc
fs
lock
jge
shrb
xchg
ss
incl
test
addr16
or
pop
std
dec
sbbl
imul
mov
xor
mov
push
nop
xor
push
mov
mov
jg
incl
int
sub
jb
imul
jp
in
jo
pop
out
jg
or
mov
mulb
nop
add
fnstcw
add
lahf
dec
in
aad
fsub
pop
in
inc
test
adc
testb
aam
cmc
mov
std
repnz
pop
mov
imul
cli
mov
and
lcall
sub
repnz
xor
shrb
icebp
add
push
mov
mov
inc
fs
filds
adc
imul
and
pop
adc
sbb
add
ljmp
push
jns
inc
das
loopne
test
mov
mov
mov
sbb
fistps
or
fildll
xchg
xlat
pop
jbe
hlt
rcrl
in
sbb
cmp
or
call
iret
loopne
repnz
cli
sub
jg
data16
inc
mov
adc
decl
outsb
je
and
mov
xchg
dec
mov
pop
dec
mov
decl
jge
mov
mov
sub
in
out
movsb
jecxz
decl
test
ja
mov
xchg
mov
scas
adc
jg
jbe
xchg
add
jnp
andps
adc
add
call
ljmp
lahf
lock
icebp
lret
mov
jl
fucom
xchg
ficompl
call
test
lret
xorl
test
jae
or
cmc
lds
inc
scas
or
mov
or
jnp
and
sbb
jg
jp
mov
xchg
lods
orb
jns
push
daa
mov
add
pop
cmp
das
dec
sbb
popf
fucomi
ljmp
mov
cmp
loopne
jp
mov
pop
mov
lret
pop
mov
cli
or
loope
pop
hlt
and
shll
push
lcall
mov
xchg
pop
jecxz
fcomps
or
jmp
sub
loop
pop
push
cwtl
push
lcall
lock
pop
pop
inc
and
lea
ljmp
push
adc
int3
inc
mov
dec
stos
cltd
insl
xchg
add
fsubr
fbstp
dec
sbb
lahf
in
mov
push
and
std
aaa
pop
sub
mov
test
xchg
dec
lea
sbb
cmp
cmp
jb
push
xchg
test
lods
cltd
push
aam
xchg
cli
sbbb
sbb
clc
aad
fcomps
jmp
mov
add
jae
vorps
insb
imul
or
jge
xchg
insl
mov
and
decl
idivl
les
icebp
cmpsl
lods
push
adc
sub
lret
call
or
stos
lods
gs
jo
and
push
dec
add
loopne
cli
pop
pop
sub
int
sub
jae
pop
rcrl
lgs
jmp
and
ret
sti
mov
fs
aas
call
or
test
jle
pop
push
inc
pop
inc
mov
int3
ficompl
xchg
cli
inc
lcall
imul
out
cmpsl
insb
jns
pop
mov
incl
xor
xor
loopne
shrl
enter
adc
push
xor
sbb
ljmp
cmp
xlat
adc
push
movsb
and
lret
mov
push
jl
jnp
jecxz
out
bound
adc
cmp
push
aad
in
nop
cmp
ja
cs
ljmp
or
testl
sub
adc
fbstp
int
mov
aam
pushl
out
cmc
and
jo
repz
or
dec
lcall
imulb
adc
jmp
negb
dec
mov
cmp
and
loope
dec
push
repnz
mov
gs
ljmp
jne
push
aaa
sub
movsl
mov
add
repz
lahf
and
push
mov
push
mov
mov
push
mov
adc
cmpsb
cs
fwait
scas
cmpsb
ja
or
xchg
loope
push
cmp
and
jg
gs
int
aaa
mov
cmpsl
push
push
fidivl
sti
pop
das
cmc
lcall
cmp
inc
movsb
dec
sub
cmp
mov
lods
clc
lret
inc
mov
dec
imul
sbb
mov
mov
jmp
test
nop
ret
cmp
sub
add
pop
and
scas
gs
ljmp
push
jb
arpl
jae
mov
mov
mov
or
mov
fdivr
ljmp
xor
cmc
mov
andl
pop
mov
in
lea
lret
scas
cmp
std
pop
jmp
sbb
inc
sbb
pop
inc
pop
outsl
sar
aaa
add
adc
pushf
mov
test
ret
and
add
jmp
push
in
push
xchg
sub
cmc
lock
push
inc
jp
mov
mov
push
lock
ret
in
jmp
clc
nop
cmp
push
jmp
sub
inc
cmpsl
movsl
or
fbld
loop
sbb
adc
andb
push
pop
jle
sbb
enter
mov
int3
leave
or
adc
cmpsl
sub
int3
call
lcall
jmp
dec
shl
and
in
xchg
pop
pushf
xchg
dec
jl
push
lods
lods
movsb
mov
mov
aam
fcomp
xchg
or
or
pusha
aas
pop
jno
stc
sar
incl
mov
sbb
lret
cmp
ljmp
scas
push
xchg
popa
adc
decl
out
scas
gs
lods
or
mov
in
jp
fsub
test
and
ljmp
inc
mov
and
mov
ret
and
sbb
adc
push
pop
mov
dec
push
call
push
lcall
movsb
mov
xor
shl
mov
ret
mov
jnp
pop
std
lcall
push
mov
test
pop
repnz
sarl
jmp
mov
pop
imul
mov
fmul
and
add
lcall
int
stos
jge
addr16
push
or
xchg
xchg
adc
xchg
dec
movsb
or
ljmp
or
mov
mov
cwtl
shrl
cmc
sbb
cli
lea
aam
push
push
add
movsl
pop
std
outsl
idivb
movsl
in
or
fstl
and
lods
call
add
and
iret
bound
add
scas
and
adcb
pop
mov
int3
and
nop
ret
in
fistl
xchg
jg
pushl
pop
clc
cmpsl
outsb
sbb
mov
das
jbe
decl
hlt
adc
sbb
pop
fcmovnbe
adc
or
sbb
xor
jmp
sbb
fdivs
out
cmp
xor
dec
mov
shrb
inc
dec
or
or
adcl
icebp
inc
jns
sbb
lahf
iret
sbb
cmc
aad
clc
das
add
sbb
fdivl
jbe
test
mov
inc
hlt
test
cld
sbb
in
jne
xchg
popf
sti
hlt
mov
xchg
cltd
ds
mov
pop
mov
sti
mov
add
ljmp
sbbl
cmp
icebp
add
cs
fcoms
mov
lods
xor
test
cmp
mov
dec
ds
jmp
inc
sub
iret
jl
xlat
repnz
mov
xor
repz
popa
adc
jge
cmp
add
xorb
es
mov
cltd
fstps
mov
cmp
out
les
or
cli
sahf
ficoml
mov
dec
jmp
popf
mov
xor
in
mov
ss
call
scas
jne,pn
mov
aaa
test
gs
fisttpll
dec
cltd
mov
pop
mov
dec
inc
jle
push
sbb
je
xor
sarl
mov
push
mov
inc
movsl
mov
mov
mov
jb
scas
xchg
loope
std
in
inc
pop
push
int
mov
xchg
push
jl
xlat
mov
inc
ljmp
mov
outsl
dec
and
lret
decl
enter
mov
dec
sub
or
imul
sti
push
adc
mov
out
test
ja
gs
jp
lcall
call
mov
sti
and
cli
xor
sahf
aad
pop
jns
add
out
rcl
call
shll
test
xchg
inc
fucom
mov
pop
and
les
sub
lcall
jno
jp
xor
int
loope
outsb
mov
adc
push
or
incl
push
daa
aam
or
aas
or
dec
push
loopne
jl
pushl
test
or
sub
and
cmp
pop
aas
out
fwait
ret
ja
iret
jge
xor
push
mov
mov
call
push
or
cmp
and
in
aam
xchg
lea
das
add
call
lods
adc
sbb
sahf
xor
pop
inc
outsl
pop
cmpb
call
sub
dec
fldl
shl
call
negl
mov
xor
ret
mov
push
jo
xchg
je
decl
shll
sbb
cmp
jp
movsl
xchg
mov
ljmp
jo
xor
call
xor
lret
gs
lcall
and
repz
and
xor
inc
scas
daa
pop
scas
inc
loopne
mov
jnp
pop
loopne
mov
sbb
ja
test
pop
jp
leave
gs
dec
test
push
cmpsl
jns
call
clc
sti
mov
int
lahf
out
and
mov
push
xchg
dec
call
cmc
in
jmp
shrb
adc
or
cmp
pop
cmp
and
jmp
or
lret
and
or
mov
jnp
xchg
mov
xor
sbb
incl
cmc
ja
xchg
jno
pushf
dec
pushl
jns
fsts
shlb
aam
call
push
push
jmp
jnp
gs
mov
test
xchg
loop
xchg
adc
pop
popa
in
mov
iret
loop
jg
fnstenv
mov
inc
call
ljmp
fisubrs
sub
les
movsl
mov
iret
cmp
mov
lods
inc
cmp
leave
ljmp
cmp
inc
mov
xchg
inc
nop
jne
mov
sub
mov
incl
aaa
lret
imul
or
jne
dec
xor
mov
inc
cld
sarl
lds
adc
aas
rclb
jg
mull
shr
xor
mov
sbb
pop
fistl
repz
sbb
enter
jae
aaa
mov
aas
decl
mov
xchg
test
adc
fs
outsl
lret
aas
inc
add
mov
jmp
sub
cld
mov
mov
enter
dec
push
mov
std
ljmp
pushf
jo
sbb
mov
in
repz
sub
mov
add
inc
mov
inc
into
out
add
jg
call
pop
shll
mov
inc
movsl
jae
jmp
jle
add
adc
std
sbb
sub
sbb
bound
jne
les
out
dec
sub
js
and
mov
jmp
dec
mov
sarb
jmp
jmp
dec
push
sub
push
icebp
imulb
mov
pushl
jg
xorl
nop
stc
pusha
pop
xchg
jmp
jbe
and
add
dec
ljmp
movsb
call
pop
test
mov
mov
lcall
mov
cmpsl
and
xchg
les
andl
aas
pop
aaa
xor
sar
incl
cmp
mov
mov
and
loope
fidivrs
or
mov
or
bound
insb
xor
imull
fldl
insl
dec
sub
hlt
dec
xor
mov
sub
add
popa
mov
jp
outsl
jg
xorb
dec
sub
icebp
mov
or
clc
clc
xchg
xchg
or
inc
jb
stc
inc
lods
inc
inc
adc
outsl
js
inc
pop
ds
sbb
mov
push
pushl
cli
ljmp
push
popf
dec
adc
mov
stos
in
ja
sbb
mov
xor
jmp
add
pop
pop
adc
in
mov
jnp
jecxz
hlt
sbb
inc
push
fmul
call
cmpsl
push
and
clc
pop
mov
sti
mov
pop
ljmp
hlt
jmp
jl
xor
sub
and
mov
cmpsl
daa
vmwrite
insb
xor
movsb
mov
pop
adc
pop
ret
sbb
call
jmp
and
mov
pop
loop
jl
add
into
mov
test
dec
pop
xchg
cli
pushl
push
shrl
popf
and
inc
dec
lret
aaa
incl
add
push
pop
insb
fsub
iret
mov
into
adc
lcall
cmpsl
add
pop
mov
dec
and
filds
cli
pop
push
daa
testb
and
icebp
mov
sbb
jnp
sti
lahf
outsl
dec
adc
jg
lret
addl
movsb
push
mov
testb
pop
sub
mov
ljmp
adc
stos
jae
mov
out
jecxz
add
das
xor
stos
push
es
das
jl
outsl
loope
push
add
popa
dec
jg
or
xchg
fwait
inc
lcall
test
and
loop
insl
orb
dec
mov
add
ret
xor
jg
or
inc
pop
or
mov
dec
mov
stc
fidivrl
ljmp
lock
sbb
inc
mov
jmp
das
xchg
je
or
les
mov
inc
mov
fbld
mov
sub
jb
adc
push
fistps
pop
fisttps
push
lea
xchg
mov
pushl
xor
and
out
pop
jae
cmpsl
pop
cmp
dec
add
add
cld
rclb
cld
ljmp
cli
pop
xchg
fists
pop
jno
pop
push
mov
shlb
sub
outsl
hlt
xchg
sarl
movsl
xchg
sbbb
inc
fstp
mov
ret
ret
sbb
jle
leave
jo
imul
cmp
mov
mov
adc
das
hlt
incl
aas
sbb
daa
dec
fisubl
lock
and
insb
lcall
sbb
xchg
cli
push
movsb
js
jmp
xor
xchg
add
ljmp
rep
ret
inc
adc
or
iret
nop
inc
add
sbb
cmp
pop
or
jmp
cli
mov
and
lret
pop
or
push
bound
push
jno
sti
mov
incl
push
push
out
mov
imulb
push
cmpsl
ficompl
test
adc
mov
idivb
fisubs
xchg
push
mov
mov
call
rcrb
test
jne
dec
stos
push
jmp
add
cli
ja
in
outsl
mov
mov
adc
jmp
cwtl
in
sub
xchg
jmp
xbegin
jbe
cmc
inc
pop
popf
jno
fsubs
add
mov
es
xchg
lds
testl
or
xchg
push
jns
adc
stos
xchg
or
std
mov
cli
cli
dec
dec
loop
rorb
jno
out
test
insl
mov
cmc
lahf
sub
bound
test
stos
enter
incl
jge
mov
aas
mov
jmp
xor
xor
mov
cmp
int
jne
pop
jne
mov
es
mov
iret
and
and
ss
or
sub
pop
inc
add
xchg
or
decl
stc
test
rcl
adc
inc
and
fbld
mov
aad
aas
fs
adcl
or
pop
mov
adcb
sarb
push
dec
jl
mov
sarb
sub
popf
cmpsb
jbe
adc
or
sahf
cmc
inc
sti
popa
test
push
or
repnz
jg
push
jge
sar
cmp
inc
and
add
ljmp
in
ret
and
jbe
aad
adc
fwait
adc
repnz
incl
add
enter
jnp
mov
push
inc
pop
and
decl
mov
unpcklps
mov
xchg
mov
test
pop
scas
mov
dec
mov
mov
pop
xor
pop
daa
js
enter
mov
ja
inc
mov
lcall
jno
cmp
arpl
clc
and
mov
jg
add
mov
out
pop
in
daa
mov
xor
cmp
mov
stos
iret
in
mov
insl
jno
push
hlt
jo
ficompl
jb
push
cmc
adcl
call
push
popf
xlat
mov
in
out
ret
inc
popf
in
dec
cmpsl
pop
enter
decl
xchg
ljmp
or
insb
cwtl
sub
nop
ljmp
daa
shlb
repz
jno
popa
or
sub
sub
xchg
xchg
into
pusha
shll
dec
jg
add
xor
inc
inc
push
flds
push
jne
scas
fnstsw
jge
lahf
jnp
mov
enter
dec
dec
push
fcomps
mov
incl
sti
insl
inc
dec
cmp
mov
scas
shr
mov
push
mov
fdivrl
or
pop
xor
nop
lock
pusha
scas
imul
mov
adc
or
fistl
sub
xchg
or
filds
insl
stos
cmc
ret
pusha
pop
inc
dec
sti
and
pop
cmp
nop
xchg
repnz
jb
cli
int3
and
push
neg
out
sbb
and
cwtl
js
cs
dec
adc
out
out
inc
mov
in
xlat
sti
xchg
inc
mov
mov
inc
int3
jbe
push
mov
mull
push
dec
in
lahf
xor
decl
adc
lods
or
or
fiaddl
jle
add
test
call
push
inc
adc
stc
xor
fdivl
inc
mov
mov
mov
cld
xor
call
mov
add
leave
jb
xchg
movsb
sbb
dec
sub
or
add
shr
scas
pop
ljmp
icebp
or
cmp
in
sbb
outsl
hlt
lcall
mov
outsl
jmp
repz
and
mov
mov
jmp
xlat
cmp
mov
in
or
pop
in
test
pop
les
pop
cld
jg
aad
mov
test
dec
pop
and
lcall
mov
outsb
push
flds
xchg
push
mov
aad
lods
decl
xor
xchg
jae
mov
mov
adc
cli
dec
cld
call
push
pop
pop
sbb
push
loope
mov
dec
cli
mov
lcall
iret
push
les
sbb
or
fiadds
and
fildl
das
lock
push
inc
call
pop
stos
js
mov
sub
and
jmp
mov
rolb
call
pop
je
inc
dec
cmp
ljmp
aaa
mov
cltd
fs
clc
notb
hlt
sbb
mov
xor
adc
push
ss
pop
cmp
mov
mov
jg
xor
call
stc
sbb
mul
sub
inc
sbb
or
outsb
out
add
data16
sbb
sub
lcall
jge
std
dec
pop
adc
xchg
mov
or
sub
xchg
cli
sbbl
jg
shll
sbb
icebp
lret
sub
aad
sub
lcall
and
lahf
mov
in
pop
cmp
and
mov
add
lods
outsl
std
lcall
ja
stos
push
insb
and
or
clc
mov
add
ljmp
cmp
scas
push
jg
sbb
mov
iret
xorl
movb
fnstenv
stos
sbb
jp
add
ljmp
cwtl
mov
xchg
adc
shr
outsb
lcall
pop
aaa
pop
and
lcall
test
lahf
into
stos
loopne
insl
mov
pusha
jb
xchg
pushl
mov
pop
dec
mov
jecxz
jmp
lds
mov
subb
inc
xchg
sbb
ret
pop
jge
mov
or
mov
ljmp
loopne
pop
sbb
pop
sbbb
jmp
adc
pop
xor
call
mov
std
orl
push
rcrl
pop
cmpl
stos
cmp
dec
ret
mov
rclb
jbe
adc
xor
lcall
fdivrs
imulb
or
ljmp
cmp
repz
mov
inc
loopne
cltd
mov
outsl
sbb
movsb
mov
lods
add
lea
and
xorb
imul
in
outsb
aaa
xchg
xchg
jecxz
repz
outsb
lret
fidivrs
adc
xor
shlb
insb
add
lcall
xchg
leave
add
addb
cmp
mov
fidivs
jg
sub
or
sysret
aas
push
pushl
jg
lcall
ss
imul
data16
xchg
and
imulb
mov
test
jmp
movsb
sti
jmp
lahf
xchg
fcompl
jmp
leave
clc
lcall
mov
push
in
lds
xor
ret
jnp
rcll
aaa
dec
arpl
or
lcall
pop
dec
mov
repz
mov
das
adc
xlat
dec
push
nop
sub
outsl
jmp
shll
insl
frstors
imul
sti
mov
or
inc
fwait
jecxz
xlat
cmp
sbb
mov
jmp
orb
mov
mov
mov
add
jae
shrl
repz
mov
push
fstps
or
es
lcall
jo
mov
lds
outsb
xor
insl
les
ret
decl
mov
fistps
jno
lock
and
sarb
in
int3
and
test
sarb
ds
and
dec
jns
or
jmp
out
mov
loope
in
daa
add
in
fstp
mov
sub
pop
ljmp
inc
and
test
cmp
push
mov
dec
push
dec
dec
cmpb
clc
je
or
xor
cld
jb
loope
das
icebp
add
pusha
adc
dec
mov
xor
imul
mov
sub
xchg
pop
jno
mov
inc
xchg
aas
jb
mov
out
lcall
ja
add
sbb
add
dec
outsb
pop
dec
ss
mov
shlb
ljmp
incb
ja
enter
xor
jg
inc
lods
imul
cmp
xor
sarl
pushf
pop
out
dec
adc
mov
adc
cwtl
cmp
fistps
or
ljmp
sbb
pop
in
int
insl
aaa
in
cmpsb
mov
sbb
cmp
ret
pop
pop
mov
decl
sub
in
or
and
jo
add
jmp
or
in
or
lds
pop
mov
in
mov
call
mov
fs
dec
dec
rclb
lds
incl
test
xchg
mov
xlat
shrb
ljmp
adc
mov
sbb
pushf
ffreep
scas
sbbb
pop
cld
inc
cmp
inc
lods
xor
sub
mov
jne
mov
sar
pusha
sbb
jbe
out
jae
xlat
aam
push
dec
push
pushl
clc
mov
dec
fsubp
cmp
enter
xchg
repz
mov
mov
push
push
sub
adc
pop
jmp
adc
out
lret
incb
sti
test
pop
mov
push
jae
mov
loopne
int3
sub
outsl
shr
incl
xchg
push
mov
test
fsubrl
incl
jp
dec
sbb
out
xchg
or
cltd
lods
testb
movsl
mov
mov
fistl
fwait
popl
mov
and
ljmp
mov
sti
lock
jnp
int
negb
jmp
sub
lret
xor
movsb
xchg
lods
pop
adc
leave
jge
push
mov
call
push
adc
push
cld
icebp
lods
mul
test
aas
push
mov
sbb
mov
lock
lock
adc
mov
in
stos
ljmp
loop
xlat
dec
add
stos
or
ret
and
rcrl
pop
and
mov
xchg
decl
pop
sbb
inc
adc
aam
xor
adc
xchg
lcall
enter
xor
hlt
scas
in
lahf
xchg
mov
and
imul
mov
addb
dec
aad
adc
aaa
enter
mov
fs
ljmp
dec
lods
or
push
fisttpl
loope
imul
jbe
jns
dec
mov
scas
lcall
ret
mov
add
aad
dec
jnp
add
imul
imul
int3
ljmp
lcall
cld
mov
icebp
fdivrp
and
xchg
pop
test
dec
mov
call
xchg
cs
pushf
mov
xchg
cli
lret
lea
jg
cmpb
test
add
and
dec
cld
fidivrs
sar
jmp
out
stc
dec
sbb
mov
push
cmpsl
xchg
mov
test
ljmp
adc
dec
arpl
xchg
mov
sbb
fwait
push
mov
xchg
inc
add
jg
nop
or
fstpt
in
ss
outsl
in
pop
push
cmp
enter
or
cwtl
sub
mov
mov
addr16
xor
cmp
or
fisubl
pushl
out
adc
aaa
inc
cwtl
mov
movsl
setb
pop
aas
mov
test
daa
movsb
fs
icebp
aas
call
cld
pop
cmp
cwtl
insl
mov
cmp
xor
mov
pop
into
mov
inc
mov
jge
das
lock
jl
imul
sbb
gs
js
lods
into
jg
inc
xor
stos
movsl
fstps
jnp
lahf
repz
sub
sbb
add
and
mov
pop
inc
add
sub
ret
add
or
pop
sub
scas
in
add
pop
push
push
sub
sbb
jbe
lods
adc
or
xor
inc
outsb
je
movl
xor
cmp
and
adc
cmp
sub
push
mov
nopl
jae
jbe
sbb
pop
add
pop
or
adc
es
push
pop
and
pop
jb
or
jne
stc
pop
inc
pop
dec
push
or
sbb
rcrl
adc
aas
insb
jb
mov
jecxz
pop
es
or
push
sbb
movups
jge
mov
add
adc
add
or
add
jne
xchg
popf
sbb
sbb
add
sbb
xorb
aaa
sbb
add
insb
add
sbb
sbb
sbb
mov
add
push
insb
nop
and
push
pop
adc
sbb
jbe
clc
addb
add
add
sbb
fsts
or
add
add
add
addb
sub
push
call
or
push
inc
sar
mov
mov
faddl
mov
inc
mov
movsb
or
lock
pop
mov
dec
call
sti
lcall
or
shrb
mov
sub
xor
insb
fs
mov
add
lcall
data16
sahf
sub
movsb
cwtl
adcb
mov
xchg
or
les
call
test
std
mov
sub
movsb
jmp
incl
call
rorb
mov
negl
push
bound
call
inc
cs
pusha
movsb
push
xor
xor
xchg
lcall
sbb
movsl
out
enter
mov
into
out
lods
cmp
ret
xor
dec
ffreep
stos
int
mov
dec
or
loope
push
ds
mov
dec
out
xchg
jne
jmp
or
cmp
insl
scas
jno
inc
dec
cld
imul
loope
dec
dec
mov
bnd
pushf
aam
decl
sub
shll
lcall
bound
flds
das
and
sar
in
dec
jns
fwait
jp
xor
outsl
push
inc
cld
aas
arpl
sbb
cmc
decl
ret
mov
loope
mov
addr16
fimuls
js
inc
adc
fldt
fisubs
pop
lret
test
popa
lea
dec
xchg
repz
popa
adc
aaa
ret
out
not
aam
sub
jg
ret
fdivrl
push
pop
cmp
push
jne
mov
gs
call
sub
xchg
imul
xor
sub
cltd
stos
lods
popa
jne
mov
push
aaa
pop
lds
sbb
ret
fidivrs
jl
inc
ret
cld
sub
xor
cmp
incl
xchg
xor
sbb
loopne
js
jb
adc
mov
sarl
call
xchg
ljmp
subb
inc
jmp
pop
decl
add
or
call
std
jl
or
pushl
cli
insb
lea
mov
cmp
bound
add
pop
jecxz
shll
jmp
mov
cmp
add
mov
pop
call
mov
and
pushf
insb
push
or
pop
cmpb
xchg
xor
incl
inc
imul
jo
cmp
and
out
insb
mov
call
bound
push
jo
loope
ficoms
pop
sub
mov
insb
fucom
push
sar
sar
dec
pusha
mov
or
xor
cmp
loopne
sbb
call
mov
add
xchg
lods
push
fwait
jns
xchg
sub
xor
cmpb
xchg
push
stos
add
insb
decl
sub
test
call
mov
xchg
sarb
sbb
les
xchg
add
adc
loopne
fcmovnu
pop
inc
sub
mov
test
stos
jg
cmp
es
test
cld
stos
mov
jmp
ja
das
orb
sub
or
daa
popa
lds
out
movsl
push
push
movsb
gs
and
lcall
mov
adcl
leave
arpl
sti
pop
std
jecxz
movsl
test
andl
call
inc
cmp
push
aas
or
and
or
add
and
and
cmc
mov
daa
sub
push
cmp
jo
jbe
rorb
adc
test
decl
xchg
dec
jecxz
call
push
into
xor
jg
xchg
in
out
rcrb
mov
movsl
mov
scas
add
mov
jno
iret
outsb
mov
pusha
cmp
mov
dec
xor
rorb
mov
ret
call
mov
jo
adc
ret
xor
mov
js
pop
add
mov
shlb
mov
mov
hlt
sub
or
in
xchg
insb
mov
mov
fldz
sub
jge
pop
pop
test
fmull
lret
vpmacswd
pushl
mov
xorps
sub
push
jns
test
push
and
mov
cs
repnz
pop
loopne
push
outsl
xchg
hlt
or
das
int3
popf
js
pushl
jns
or
popf
test
pop
lods
pop
stc
notl
iret
sbb
sub
push
lds
inc
jb
jmp
inc
or
imul
outsb
insl
xchg
clc
cli
jnp
popa
or
lcall
cmpsl
aaa
adc
shlb
inc
cmpxchg
jnp
cmp
arpl
jp
jns
bound
jecxz
pop
push
jecxz
repz
xchg
add
incl
in
in
adc
adcl
dec
test
pop
nop
dec
mov
mov
mov
inc
pop
cmpsl
js
sahf
pop
pushfw
inc
dec
iret
scas
and
dec
cmpsb
pop
cli
aas
test
je
idiv
mov
in
sub
inc
imull
in
jb
imul
jmp
cmp
push
dec
aas
fstpt
aas
mov
push
aaa
out
sbb
fnstcw
adc
inc
repnz
add
dec
pop
dec
test
lock
lods
mov
test
insl
jnp
call
call
ftst
es
cld
adc
mov
sub
xchg
into
cwtl
mov
negl
mov
mov
addr16
adc
adc
outsl
push
mov
shll
cwtl
cmp
mov
daa
sbb
das
std
jg
arpl
out
adc
fsts
ljmp
xchg
outsb
std
add
pop
out
mov
pusha
testb
testb
dec
imull
dec
ljmp
inc
movsb
cmp
outsl
lods
stc
mul
push
sti
push
jg
js
mov
pushl
icebp
pop
jo
mov
pop
mov
lea
insl
push
dec
pop
stos
ljmp
das
inc
sar
cmc
fstps
movl
cmp
push
add
mov
call
nop
loop
and
ds
sbb
icebp
and
aas
setl
addr16
or
push
movsb
jae
arpl
iret
jmp
cmp
jo
sbb
das
pop
out
cmp
ja
cmp
orb
rclb
aas
fwait
test
push
ljmp
int3
sub
mov
std
xchg
xchg
cmp
mov
lcall
rcr
mov
ret
jmp
mov
test
outsl
hlt
ljmp
je
mov
dec
int3
sbb
test
sub
mov
pop
lret
or
rol
cli
lea
xor
or
mov
std
push
loop
sbb
dec
adcb
mov
mov
mov
rcll
sub
int
push
add
pmulhuw
xor
push
fwait
ljmp
loop
jns
or
jmp
pop
mov
jmp
dec
es
push
sar
pushl
push
and
cmp
mov
cmp
dec
mov
lods
add
mov
loop
adc
pop
inc
mov
jg
fucomip
cs
cmp
push
inc
fisubs
dec
stc
rcll
mov
out
push
dec
sub
mov
aas
or
mov
std
out
inc
ret
cmc
sub
xchg
hlt
or
std
adc
mov
aas
add
mov
daa
dec
cli
push
fists
mov
push
cmpsb
cmc
lods
mov
add
xchg
sub
jne
xor
inc
pop
pop
in
mov
popa
bnd
push
ret
add
incl
call
stc
outsb
dec
fsubrl
and
int3
pop
shr
stos
or
ljmp
std
jmp
loope
sub
rcr
cmp
das
negb
fisubrl
sbb
and
add
arpl
jle
sti
lods
pop
xchg
imul
mov
push
popa
decl
inc
push
cld
add
xor
jae
pop
ret
cmp
out
cwtl
out
sub
sti
or
out
sub
xor
add
xlat
call
jbe
jnp
std
enter
out
ret
cmc
ret
out
jno
out
adc
repz
push
jp
xor
fs
mov
cmp
inc
sbb
test
insb
sahf
sbb
ljmp
xorb
mov
and
sub
pop
loope
adc
jg
lock
lcall
jge
cmpsl
cmp
mov
add
mov
mov
in
jns
sbb
lahf
cli
push
sub
cwtl
fidivl
repnz
sar
jmp
lcall
mov
pushl
mov
adc
lds
lea
aad
cs
xchg
daa
add
fstps
imul
das
icebp
cmp
or
jns
mov
cmp
shlb
mov
xor
sub
sbbl
ret
paddusw
jmp
fidivs
jmp
pop
mov
movsb
inc
inc
in
xchg
imul
insb
jmp
imul
mov
xchg
sub
inc
insl
and
or
out
aaa
pop
jle
xchg
test
ret
lea
out
xor
imul
incl
xor
push
pop
push
lret
inc
fimull
sbb
add
and
lcall
cmp
arpl
jge
inc
repnz
xchg
aad
cli
inc
mov
jmp
test
jecxz
lock
rcl
pop
sub
mov
leave
icebp
mov
xor
in
mov
call
dec
iret
and
pop
cmp
insb
std
aam
push
dec
and
jb
or
mov
loop
js
test
jecxz
std
outsb
xor
stc
pop
lcall
mov
mov
fsubl
lahf
jle
or
rcrb
sbbl
lcall
test
xor
dec
push
dec
aad
sarb
inc
ljmp
mov
ss
ljmp
mov
test
addr16
das
hlt
dec
jbe
add
push
sub
adc
mov
jae
and
mov
lret
jmp
dec
add
jg
adc
dec
or
popa
cld
jg
dec
push
ja
sti
mov
adc
scas
pop
cltd
movsb
lcall
lcall
sbb
pop
out
dec
lods
dec
push
inc
xchg
call
and
jnp
mov
mov
xchg
push
outsb
mov
das
std
pushl
mov
scas
test
shll
cmpl
in
jno
icebp
cs
imul
arpl
andb
lcall
inc
test
dec
outsb
nop
outsl
cmpsl
fstps
das
mov
in
into
mov
and
pushl
push
cmp
cmp
push
popl
call
xorl
jmp
xchg
xchg
loope
lds
xchg
fs
scas
pop
jecxz
pop
cli
lcall
lret
ja
loope
xchg
xchg
inc
out
int
push
mov
push
push
add
xchg
scas
and
push
cld
popa
fs
mov
lock
add
jecxz
lcall
adc
test
add
cmp
jl
mov
popf
sub
leave
pop
xchg
xchg
outsb
sub
out
fwait
mov
jns
rcrl
lock
adc
cli
fbstp
shlb
adc
push
add
inc
push
ficomps
mov
pop
mov
add
inc
leave
push
sbb
fwait
jge
and
jg
mov
push
lea
adc
cmc
cmp
loop
pop
fbld
and
movsb
push
push
mov
mov
arpl
or
hlt
dec
xchg
insl
popw
cmovge
cmp
out
mov
out
push
xchg
lcall
push
sbb
mov
mov
out
ret
push
jb
adc
jns
sbb
ds
xchg
lcall
and
mov
movsb
clc
mov
push
mov
push
add
mov
test
mov
rcrl
add
in
push
pushl
mov
xchg
mov
bound
ja
pushf
mov
out
ljmp
pop
in
lock
pushl
out
xlat
push
push
mov
cmp
outsl
sar
ljmp
mov
jl
xchg
xchg
adc
cmp
jmp
inc
movsl
jg
adc
int3
fmull
pushf
fimull
lods
fdivl
pop
fisubl
aad
es
mov
out
and
mul
xchg
mov
aas
mov
insb
xor
fcom
lea
mov
out
flds
into
mov
mov
test
daa
jno
inc
in
pop
pop
gs
jns
loop
outsl
push
je
lret
pop
cld
in
fs
std
test
jne
int
test
push
mov
insb
sbb
jp
lods
ljmp
xor
fld
mov
ljmp
cmp
jp
cmpsl
rolb
mov
jmp
push
xchg
dec
dec
or
movsl
mov
mov
lahf
iret
pop
push
insl
std
sub
cli
cmp
mov
out
je
xchg
jo
jg
jle
repnz
test
cmpsb
jmp
pushf
aas
xor
jb
or
std
dec
lcall
dec
pop
pop
or
clc
adc
js
popf
stos
inc
fldt
cld
js
mov
fbld
mov
aas
xchg
loop
add
call
jo
aaa
fistps
das
mov
lret
hlt
xor
imul
addr16
mov
jg
pushl
mov
aas
xchg
clc
int3
push
pop
pop
inc
cmp
pop
repnz
jl
or
incl
add
sbb
pop
xor
jmp
adc
lods
xorb
xlat
scas
insb
mov
scas
shll
out
push
lods
fiaddl
das
icebp
lcall
or
or
xchg
stc
loopne
hlt
mov
jne
ss
pop
loop
push
out
jge
mov
enter
leave
mov
add
roll
inc
incl
sub
cld
aad
mov
stos
cmp
push
fcmovnbe
cli
call
clc
inc
das
mov
lea
mov
lcall
pushl
add
jb
int
cmpsb
mov
inc
mov
add
outsl
cld
pushl
insl
adc
inc
je
das
add
mov
sbb
stos
pop
clc
outsl
dec
shll
dec
add
sub
sub
mov
jg
int3
jmp
mov
mov
lea
inc
into
aaa
mov
je
push
mov
aad
dec
hlt
jne
inc
aam
jge
cmp
out
mov
sti
jge
jp
dec
push
subl
iret
and
test
ss
call
shrl
dec
mov
adc
mov
jbe
cmc
or
icebp
ds
gs
or
cmpb
lock
stos
xor
sub
add
mov
pop
je
jmp
xor
jmp
stos
add
scas
mov
jbe
sub
push
scas
addr16
orb
push
jg
mov
outsl
mov
xchg
clc
mov
ret
mov
les
adc
inc
push
mov
mov
jmp
mov
ljmp
push
in
andb
adc
pop
jb
nop
add
push
ljmp
ljmp
cmp
popf
adc
lods
in
jg
out
pop
cli
out
cmpsb
mov
lcall
inc
xor
mov
decl
inc
outsb
cmp
mov
pop
xor
std
xlat
mov
mov
sbb
xchg
popl
xor
leave
mov
pop
cld
adc
xlat
pusha
call
adc
jp
pop
ds
decl
lods
shl
movsb
and
mov
ss
mov
decl
cld
addr16
lret
cs
or
clc
dec
icebp
les
mov
das
aas
dec
pop
std
or
add
xor
out
mov
cld
xchg
cmp
jmp
mov
mov
iret
repz
ljmp
sbb
cmp
mov
push
ds
ss
out
movsb
sti
mov
test
pusha
mov
in
cmp
test
pop
and
pop
in
enter
ljmp
cmpb
enter
push
cld
leave
stos
xchg
cs
mov
stos
mov
jae
popf
mov
inc
and
mov
mov
decl
in
cmp
pusha
add
fldl
mov
xor
pop
out
insl
inc
pop
inc
cmpsb
sub
cwtl
sbb
mov
roll
mov
jmp
jmp
inc
popf
dec
shrb
movsl
call
test
or
cmp
push
stos
sbb
cmp
pushl
mov
xchg
leave
clc
lret
xchg
inc
lcall
dec
jmp
xor
std
loop
insb
cmp
cli
xor
pop
cltd
aam
movsl
inc
and
or
jns
test
mov
filds
dec
mov
inc
sub
jnp
adc
lret
push
in
shlb
iret
jae
sbb
in
jl
mov
jns
je
cwtl
or
stos
lea
mov
or
jp
insl
jbe
daa
xchg
fnstsw
sbb
adc
inc
jl
lahf
subl
mov
pop
jo
cwtl
jns
sti
cmpsb
or
std
jmp
int
sbb
aas
dec
out
jmp
sti
mov
aaa
xor
or
cmp
sbb
push
movsb
lret
or
addl
and
or
call
cmpb
adc
fiaddl
repz
out
faddl
pop
cli
lcall
out
mov
inc
aad
loopne
into
xchg
mov
push
js
adc
dec
outsl
cld
lcall
or
ljmp
test
js
jp
and
cmp
xchg
clc
dec
mov
in
jno
int3
gs
xchg
repnz
pop
lds
ljmp
cld
push
fstps
aam
js
mov
movsb
jge
out
xor
pop
stc
pop
je
xchg
call
or
stc
std
ljmp
sti
out
pop
sbb
adc
dec
pop
mov
dec
aas
jp
call
insl
jnp
mov
sbb
ljmp
cmc
pop
aam
jbe
mov
bound
negl
xchg
cmp
jg
ret
ljmp
mov
push
cmp
hlt
add
fstpl
sti
lea
ljmp
sbb
out
xchg
mov
cmpsb
push
and
xchg
or
clc
incl
mov
lea
sbb
pop
cmpsl
xchg
ret
nop
pop
xor
jg
mov
xchg
add
adc
push
cltd
mov
pop
sbbb
push
mov
fwait
pop
test
jmp
and
fcomp
pop
iret
bound
jns
aas
test
pop
sarl
call
cwtl
jmp
sub
mov
add
push
mov
outsl
push
les
sub
jb
pop
adc
pushl
mov
jmp
mov
push
xchg
js
iret
push
or
mov
ljmp
stos
push
je
jg
clc
ljmp
int3
jge
inc
mov
inc
imul
fld
clc
scas
adc
repnz
jo
fdiv
neg
pop
xor
and
loope
ljmp
lock
stc
and
or
xchg
or
arpl
cltd
and
decl
pushl
mov
fmull
fnstcw
in
sub
xor
cmp
inc
rcl
sbb
jns
inc
test
arpl
inc
int
std
shlb
out
ljmp
mov
outsb
or
icebp
das
mov
mov
incl
dec
xor
imul
xchg
push
adc
and
cmp
sar
fucomip
pushf
jp
out
mov
fistps
xchg
pop
lahf
push
cmp
mov
sbb
mov
cmpsb
or
mov
xchg
sub
fidivrs
add
aam
add
out
and
idivb
cmp
pusha
lret
cld
cmp
xchg
psllq
fldl
or
mov
ljmp
sub
cmpsl
push
adc
lods
sub
cmp
dec
ljmp
pop
ficomps
mov
mov
outsl
xor
decl
cmp
and
enter
call
lahf
mov
and
or
pop
mov
add
pop
enter
cs
mov
ret
bound
jle
jnp
mov
lret
shl
les
cld
push
mov
test
xchg
lods
push
scas
in
outsb
imul
xor
in
inc
testb
push
cltd
repnz
mov
scas
hlt
aam
cmp
movsl
into
test
mov
in
lea
lock
cltd
leave
lock
ljmp
mov
testl
adc
cwtl
addb
inc
sub
movb
and
gs
pushl
scas
or
jne
sbb
mov
out
ja
pushf
and
sbb
xchg
cmp
outsl
std
or
incl
xor
mov
inc
lods
je
xchg
xor
mov
add
or
add
popa
mov
cs
shlb
movsb
lcall
pusha
inc
aam
mov
cmpsl
push
and
lahf
xlat
xchg
pop
arpl
out
scas
cltd
ljmp
mov
push
pop
movsb
stos
aaa
mov
imul
xchg
outsb
sti
push
ljmp
add
stc
repz
sti
aas
dec
sti
jmp
dec
mov
mov
mov
out
sbb
mov
mov
out
or
repz
pop
sub
xor
outsl
lock
mov
fadds
and
ss
cmpsl
cmp
adc
lahf
pop
cld
sub
pop
jns
xor
mov
lods
rorb
dec
nop
ljmp
push
decl
out
aaa
in
mov
nop
outsl
std
das
lock
inc
mov
inc
cs
cltd
add
popf
ljmp
test
cmpsl
push
sbb
mov
inc
pop
dec
pop
adc
inc
mov
fistpll
aaa
stos
popf
adc
push
mov
shrb
xor
push
sbb
xor
iret
jg
js
jg
inc
xchg
into
call
mov
sub
cmp
pushl
lahf
pop
xor
mov
inc
rcll
mov
add
js
pop
push
pop
aas
lcall
jmp
int
popf
pop
enter
into
lcall
mov
push
push
lcall
shr
incl
jle
mov
inc
fadds
cmp
lret
pop
jmp
sub
cwtl
fdivrl
push
xor
sbb
popf
mov
jo
loop
outsl
std
call
push
fst
inc
pop
fcmove
jae
sbb
mov
push
jbe
lods
and
or
pop
lock
mov
jmp
cmp
mov
cmpsl
movsb
pop
pop
ja
mov
mov
ja
clc
pop
cli
lods
arpl
xor
sbb
mov
jmp
pop
jno
rclb
pop
daa
imul
nop
int3
pop
jge
xchg
dec
fnstenv
gs
cld
stos
jae
mov
bswap
mov
filds
xlat
shrb
shll
jmp
lcall
imul
push
mov
insl
test
pop
mov
pushl
sbb
sbb
sbb
jge
leave
cli
sub
sbb
out
test
dec
fcompl
mov
nop
outsl
add
push
dec
push
inc
and
lret
hlt
cmp
sahf
sar
sbb
push
mov
jnp
dec
jae
mov
jae
into
call
test
rcl
add
call
mov
mov
adc
push
lea
fnstenv
fistps
mov
lcall
or
inc
lahf
xchg
ficoml
nop
mov
test
dec
daa
mov
mov
outsl
push
cmc
pushl
stos
adcl
pushl
push
sarb
cmpsl
pop
xor
cltd
xor
mov
ljmp
mov
push
loopne
jp
call
xor
add
cltd
fisubrl
cmp
in
inc
sar
lcall
mov
xor
and
pop
push
ss
leave
repz
jo
repnz
out
mov
je
mov
jnp
mov
cmp
lods
sahf
xchg
push
test
lcall
js
rolb
mov
loope
nop
ja
or
aam
in
sahf
push
std
or
test
pushl
xchg
movsl
cwtl
lcall
pop
adc
ret
xchg
mov
call
fstps
cmp
and
sahf
push
mov
fidivs
test
dec
arpl
das
adc
stc
std
lods
adc
loope
jae
incl
add
add
inc
cmp
xchg
into
das
cmc
ljmp
jns
rcrb
mov
stc
jg
push
fwait
push
vmaxsd
lcall
addr16
ret
js
push
jnp
pop
pop
movsl
cli
mov
popa
jg
insl
sar
adc
das
gs
out
adc
repnz
out
xor
xor
pop
lcall
xor
cwtl
test
mov
cli
call
mov
out
sub
push
dec
cmp
out
cli
push
bound
ficompl
xchg
add
sub
cmp
fucomip
fistps
mov
cs
out
out
pushf
cmp
ds
inc
call
les
adcl
add
adc
loope
push
add
addb
lock
jne
xchg
ja
lcall
fdivrs
icebp
add
mov
adc
lcall
das
leave
sahf
sbb
and
jnp
dec
push
jno
ljmp
sub
and
test
or
pop
shrb
fbld
fnstsw
or
mov
mov
repnz
pop
dec
ret
pop
lods
int3
add
ljmp
mov
in
inc
or
test
lock
inc
inc
in
pop
xchg
hlt
sbb
js
incl
sbb
lret
mov
jge
dec
repz
imul
mov
mov
call
call
test
loop
sub
inc
test
test
ja
out
xlat
sbb
hlt
decb
and
aam
ds
mov
fisttps
rol
mov
inc
dec
decl
ljmp
inc
mov
add
ss
andl
leave
and
pushl
jge
xchg
and
jae
test
popf
fstpt
cmpsl
std
int3
push
outsb
sub
jne
call
mov
mov
dec
mov
mov
inc
jb
mov
clc
pusha
int
mov
mov
xlat
repnz
add
lahf
push
into
mov
sbb
call
push
mov
ljmp
cmp
sbb
les
stos
jecxz
sub
push
cs
ljmp
and
jmp
and
xor
mov
and
jo
sub
mov
fbld
jno
xchg
andb
sub
cld
jg
and
or
mov
pop
sub
test
dec
push
addl
ljmp
call
adc
fistps
int
int3
imul
jg
pushl
mov
pusha
push
shr
push
xorl
out
fsubl
cs
cmp
call
add
loopne
push
dec
add
sbbl
pop
pop
and
sbb
mov
pushl
pop
stc
int
test
out
sub
scas
fdivr
ljmp
clc
loop
or
xchg
mov
pop
mov
jl
xchg
sub
hlt
ret
pop
lret
test
add
xchg
out
ljmp
ljmp
inc
sub
dec
mov
loop
rorl
sbb
sbb
subl
jp
mov
loope
xor
outsb
xor
fsubs
mov
mov
shrb
scas
call
and
jbe
js
mov
cmpl
or
cli
fucomip
mov
dec
rcr
and
mov
xchg
push
push
jae
sub
call
or
sbb
je
pop
addr16
inc
mov
and
into
dec
jmp
xchg
bound
jmp
push
gs
inc
sbb
cmp
pop
loopne
call
in
lcall
sbb
jns
fistl
imul
fcoml
leave
xchg
push
xchg
push
xor
jae
and
je
mov
call
fwait
sub
sub
mov
cmc
adc
sbb
outsl
scas
sub
int3
cs
cmp
and
or
inc
loope
into
xchg
jno
ljmp
call
or
std
cmp
aaa
inc
adc
push
pop
fwait
inc
enter
mov
jns
addr16
adcb
in
lsl
adc
jmp
stc
pop
js
imul
in
insl
adc
mov
imull
in
push
jno
and
ljmp
inc
insl
in
cli
or
lahf
je
test
movsb
inc
dec
mov
pop
cmpsl
and
enter
sbb
push
push
stos
hlt
push
cli
imul
push
sarb
std
cmp
sub
jmp
adc
arpl
decl
out
mov
or
pop
jg
sbb
jb
clc
pop
jmp
sarl
loop
es
mov
out
outsl
sub
push
outsb
lock
aam
into
sbb
movsb
ljmp
inc
mov
lock
in
mov
sar
andb
test
decl
sub
mov
sahf
ja
adc
mov
pop
inc
in
cmp
mov
mov
mov
rclb
sbb
faddp
or
leave
inc
jno
lret
idivb
dec
add
xchg
shl
mov
ljmp
sbb
cmp
cmp
popa
adc
cmp
push
sar
sti
dec
clc
jp
loop
sub
leave
lock
xor
cmp
mov
cmp
popf
cmp
in
add
or
jle
mov
dec
sbb
add
mov
jns
pop
das
push
icebp
mov
jl
jg
mov
sub
imul
sbb
pop
and
imul
stc
jecxz
or
add
cmp
aad
jg
ja
push
push
mov
jb
add
and
adc
jo
nop
pop
and
test
das
js
or
cmp
push
or
mov
pop
adc
cmp
jnp
and
inc
add
and
push
dec
jmp
mov
push
pop
test
xor
add
jg
inc
xor
inc
sbb
fsts
jmp
std
jl
lock
leave
push
hlt
cli
in
push
insl
mov
cmp
and
test
call
jne
imul
xchg
push
xlat
inc
iret
call
jo
sbb
dec
cmp
xor
lcall
adc
nop
adc
mov
cmp
stos
inc
cltd
or
fsubrl
leave
add
fs
dec
test
push
inc
mov
lret
sub
push
mov
enter
mov
mov
mov
push
cmpsl
js
lods
aam
xor
into
lahf
inc
mov
fimull
cld
scas
inc
out
mov
outsb
nop
enter
sub
add
adc
dec
lods
push
mov
cmp
lret
in
pop
rorl
and
push
push
xor
dec
scas
lret
cmp
jmp
sahf
sar
sar
stos
ror
sub
pop
dec
jle
iret
fstpt
stos
sbb
xchg
mov
jmp
aad
notl
adc
cmovg
insl
dec
call
add
in
in
xchg
rorl
inc
xor
enter
in
sti
inc
rcr
stc
push
jmp
and
pop
es
lcall
mov
in
call
call
mov
push
mov
and
stos
lahf
fwait
sub
and
andl
mov
mov
imul
ja
pop
outsb
arpl
inc
jge
outsl
add
lea
jbe
not
mov
push
call
or
jle
add
outsb
push
pushf
dec
adc
or
mov
mov
test
test
push
push
mov
fstpt
inc
in
ror
sbb
inc
mov
mov
movb
loopne
push
xchg
adc
push
adc
shl
inc
fildl
push
cmp
cmp
fimuls
mov
testb
mov
jnp
in
push
mov
inc
push
clc
clc
cmc
decb
sub
insb
andl
outsb
loope
cmp
stos
pusha
push
lock
jbe
mov
outsl
sub
xor
call
stos
stc
or
sub
call
call
ja
orb
cld
mov
pushf
int
call
int
fs
sub
adc
mov
sub
pushf
push
js
jmp
push
scas
stos
call
fisubrs
nop
xchg
adc
popa
lea
and
pusha
jmp
jne
mov
add
sbb
add
ficompl
or
push
mov
test
sub
or
cmp
add
or
outsb
add
sbb
mov
nop
mov
mov
ja
ja
or
into
in
cs
push
push
stos
test
pop
insl
xor
shr
popf
es
xchg
xlat
pusha
ror
test
mov
jae
inc
mov
or
stc
orl
jne
inc
pushf
or
pop
cwtl
adc
stc
and
out
sti
testb
and
stc
out
xchg
std
inc
pushf
mov
notl
and
sahf
bswap
jno
stos
adc
jae
call
xor
and
or
ret
idivb
cmp
clc
andb
inc
push
out
cmp
out
lret
rclb
jmp
xchg
mov
inc
test
out
cmp
inc
inc
adc
add
out
xor
mov
bound
cmpb
jmp
lcall
add
cmp
adc
mov
mov
cli
xor
cmp
clc
dec
jmp
idivb
addr16
aaa
jmp
roll
pop
add
pop
pushf
push
xchg
out
push
or
mull
jmp
int
fsubrl
jbe
adc
call
adc
es
testb
out
push
rcl
jne
in
decb
sbb
cld
test
mov
ret
cld
push
adc
jne
shrl
out
call
subb
popf
iret
rcrl
push
out
lods
call
shrd
pop
cmp
shl
sbb
shr
xchg
insb
in
xchg
jle
jg
jmp
push
xchg
out
mov
into
push
xlat
cld
inc
xor
mov
fbld
pushf
test
stc
call
dec
adc
enter
mov
push
fnsave
fbld
movl
adc
call
or
push
xchg
pushl
dec
adc
outsb
dec
xchg
push
ljmp
mov
mov
and
sub
jle
mov
jno
xlat
mov
mov
adcb
cmp
dec
call
jae
xchg
out
pop
psraw
mov
out
scas
out
ret
or
arpl
push
pushf
cmp
lods
adc
xchg
cmp
inc
and
xchg
arpl
jle
cwtl
mov
mov
mov
call
mov
jmp
ja
sub
mov
sub
test
push
out
xchg
fstpt
sbb
sarl
mov
mov
pop
sub
mov
movb
pusha
jo
cs
or
cld
xlat
sti
mov
pusha
iret
or
cld
cmp
mov
jo,pn
xlat
ds
movb
mov
arpl
sti
call
pop
sbb
mov
mov
pop
jnp
push
jmp
call
or
stos
imul
ja
inc
or
cmp
sub
rorl
lods
rcr
leave
sub
push
ja
add
call
loop
imull
pop
js
rorb
lds
jno
lea
pop
sub
sub
test
or
push
cmc
and
push
stos
cmp
push
lods
fninit
add
icebp
pushf
push
outsl
mov
sbb
pop
cmp
add
addl
movsb
and
and
cmp
int
mov
rorl
fwait
std
jmp
jo
adc
adc
ja
cmpsl
fistps
pop
cmp
or
push
icebp
pop
pushf
sub
pop
pop
push
lds
pop
pop
and
aas
ljmp
lods
mov
jmp
daa
in
jo
jo
icebp
inc
rcrb
repnz
addl
xlat
sbb
xchg
lret
mov
mov
nop
push
std
sbb
imul
sbb
outsl
mov
aaa
xorb
mov
mov
jp
pop
mov
pop
and
push
jmp
xor
test
out
aam
mov
popa
add
fabs
test
xchg
outsb
jg
or
push
jbe
clc
hlt
or
sti
cmpsb
jmp
out
fisttps
pop
leave
inc
ja
sar
cmc
andb
inc
lahf
movl
jecxz
pop
fmull
push
int3
sub
sub
lods
mov
xor
cld
mov
ss
xchg
orb
cltd
imul
in
inc
ret
lds
out
jbe
jl
mov
rcll
push
fs
xchg
mov
jmp
shl
ret
sbb
mov
test
cmp
pop
daa
movsl
cmpsb
lret
loope
or
jno
fdivl
addr16
leave
mov
fnstsw
mov
pushf
pop
dec
ljmp
push
ss
dec
adc
adc
pop
loope
test
xor
jmp
out
ret
xor
sub
or
sti
jae
adcl
das
fildll
sbb
push
cmpsb
lret
pushf
fcomps
jp
mov
adc
mov
sbbl
andl
imulb
xor
cld
mov
xor
push
push
lods
popf
jmp
test
imull
or
aam
fildl
push
scas
mov
ret
rcl
adc
lock
cltd
outsb
or
out
gs
lret
mov
arpl
rcrl
inc
ss
push
fimull
xchg
cmp
xchg
rcll
loope
stos
leave
xchg
or
push
dec
js
adc
pushf
mov
shlb
add
jno
pop
pop
pop
test
jmp
dec
popf
sub
dec
call
ret
push
jmp
fsubrs
test
adc
mov
push
push
dec
scas
and
dec
mov
repnz
adc
aad
nop
std
stc
mov
aam
roll
adc
dec
inc
sbb
decb
mov
add
pusha
xor
sti
cltd
sti
jbe
cmpsl
sbb
jl
and
add
cmc
data16
lahf
fdivr
mov
rol
nop
push
ja
xchg
fdivrp
test
iret
faddl
push
outsl
add
xorb
mov
fwait
in
mov
jmp
mov
adc
rol
mov
out
insl
add
les
cmp
add
push
sti
ljmp
pop
jmp
pop
test
mov
arpl
jmp
mov
mov
daa
fistps
maxps
stc
add
call
test
outsb
mov
es
shrb
push
aam
je
data16
mov
adc
or
jnp
lret
cwtl
or
push
xchg
mov
jecxz
pusha
push
and
rcr
stos
add
shlb
lret
dec
inc
mov
jle
scas
push
insl
xchg
sub
mov
mov
std
and
or
cmpb
roll
repz
xor
or
jnp
mov
cmc
call
out
int
icebp
into
mov
js
fwait
imul
lret
pusha
nop
add
sub
sub
sub
test
and
sub
push
lret
sub
icebp
cli
sub
adc
repnz
out
xor
cli
cwtl
pop
jo
mov
jecxz
test
clc
sub
stc
dec
push
aaa
out
push
adc
mov
push
mov
pushf
and
call
sbb
mov
in
cmpsb
fcoms
cld
pop
subl
sbb
shr
xor
cmp
or
popa
adc
fcompl
cli
lcall
jp
xchg
shl
pusha
jg
add
sti
scas
std
mov
push
notb
push
je
xchg
loopne
sub
xor
mov
in
aad
insl
jg
xor
icebp
cmp
xchg
roll
in
repnz
mov
ss
inc
xchg
inc
inc
mov
push
xor
xor
sub
cmp
mov
adc
movsl
push
or
pushl
mov
in
rol
lea
shr
pop
pushl
cmc
test
cmp
cmc
push
lock
fdivrp
inc
std
mov
cld
push
call
sub
or
jmp
pop
in
inc
xor
pushf
notl
clc
mov
ja
jge
ja
ret
lock
call
mov
mov
pop
aas
adc
bound
hlt
jmp
sbb
dec
sarl
dec
call
jbe
call
xor
jle
jmp
lret
inc
xchg
shlb
xchg
add
pushf
xchg
dec
add
outsb
xchg
mulb
aaa
xchg
popa
adc
pusha
clc
jmp
sti
jb
insb
xlat
nop
add
ja
fs
test
or
test
in
pop
dec
sbb
add
test
sub
pop
fwait
jns
xlat
inc
pop
loopne
xchg
pusha
icebp
int
mov
jmp
cmpsb
lods
les
ret
out
stos
ret
mov
sbb
cmpl
inc
ret
sbb
or
hlt
pusha
popa
call
lods
add
cwtl
jl
sete
pusha
push
jmp
pop
shr
xor
mov
hlt
mov
jl
cmp
lock
lcall
std
std
test
xchg
pusha
lret
mov
ret
jno
jns
mov
mov
mov
pop
mov
jmp
mov
jge
pop
in
clc
dec
dec
js
repnz
push
idiv
decl
das
adc
test
jmp
fwait
add
inc
incl
out
in
xchg
push
mulb
and
mov
enter
rorb
lock
ljmp
aam
dec
and
jb
xor
jb
imulb
jle
dec
ret
inc
or
decl
and
fnstenv
or
fsubr
push
sbb
push
inc
sarl
lock
add
ljmp
fucom
xchg
add
pop
fbld
sub
ret
ss
sub
pop
sbbb
cltd
cmp
stc
mov
jmp
decl
js
dec
scas
orl
rorl
pop
sbb
mov
neg
test
out
stc
xor
or
sar
decl
movsl
lahf
stos
ja
xor
or
pop
sub
inc
outsl
orb
aam
jmp
popf
inc
ljmp
popf
mov
cmp
icebp
mov
mov
nop
ja
fcoms
aas
mov
adc
out
and
push
lret
call
or
jo
cmpsb
jnp
pop
adc
insl
xchg
arpl
test
pop
arpl
clc
in
andl
mov
xchg
and
jbe
mov
leave
int
lods
sub
jg
aaa
pop
push
call
mov
xchg
or
hlt
and
aam
pop
lret
das
icebp
ljmp
test
out
in
lahf
push
mov
in
add
add
lods
in
mov
icebp
mov
mov
inc
int3
adc
dec
cld
das
das
insl
xchg
mov
pusha
jb
cmc
xor
and
push
cmpsl
pop
aad
sar
in
stc
outsl
lods
pop
jge
cltd
in
mov
das
aam
pop
enter
sub
fwait
incl
mov
mov
out
and
mov
mov
fistl
nop
insl
fcompl
fimuls
ja
push
mov
test
mov
cmc
sti
ret
ret
pop
and
insl
add
cs
dec
pop
popf
xchg
jl
pushf
jge
jle
in
push
fstl
or
outsl
pop
jecxz
pop
sub
pushl
pop
and
add
cmc
adc
cmpsl
xchg
jne
mov
pop
test
dec
mov
ret
adc
arpl
mov
ret
icebp
jmp
sarb
aam
rorb
popa
leave
push
insl
daa
pop
lcall
or
jge
leave
popa
push
movsl
sti
aam
push
shrl
lcall
xchg
push
mov
or
decl
leave
inc
lods
mov
jns
inc
pushf
add
or
jg
adc
mov
xchg
outsb
xor
dec
ss
mov
leave
lahf
pop
and
add
sar
dec
pop
cs
in
jge
mov
icebp
mov
pop
and
aam
pop
ret
pop
xchg
xchg
out
sti
jmp
and
test
scas
inc
test
fildl
push
adc
insl
in
sbb
mov
filds
lcall
jo
test
int3
scas
sub
mov
insl
addr16
push
clc
and
loope
and
sbb
fildll
fsubrl
test
jnp
nop
push
and
leave
add
in
outsl
fisubrs
and
movsb
in
inc
pop
stos
mov
clc
hlt
adc
loope
pop
xchg
insl
lock
ret
jl
mov
lret
test
mov
adc
adc
outsl
pop
int
jp
pop
dec
mov
pop
xchg
pop
push
data16
rolb
mov
add
test
dec
subl
and
mov
fidivrs
adc
dec
insl
mov
movb
sbb
iret
scas
dec
sub
out
enter
pop
outsl
jl
jge
mov
inc
or
loope
push
push
mov
fisubs
xchg
es
test
insl
xchg
xchg
mov
loopne
mov
mov
push
scas
hlt
lds
rorl
das
fcoml
sbbl
mov
adc
inc
ss
dec
dec
and
clc
outsl
std
mov
sub
loopne
out
je
in
dec
dec
dec
add
mov
push
leave
out
fisubs
adc
test
jge
push
rcll
sub
ret
cmp
mov
fwait
xlat
add
shl
xchg
outsl
mov
fldl
jno
dec
icebp
fcmove
in
das
icebp
pushl
jmp
fsubs
loop
xchg
lahf
lds
fstl
cwtl
scas
call
push
cmp
jb
add
std
ljmp
insl
loopne
jae
pop
inc
xchg
mov
xor
insb
or
jns
xchg
mov
pushl
mov
sbb
cmpsl
dec
in
add
sub
imul
mov
test
cs
aaa
mov
int3
mov
enter
addr16
jne
dec
mov
in
pop
cmp
dec
aad
xor
popa
inc
xor
jns
mov
call
leave
popf
push
mov
lret
lret
out
adc
mov
fadds
xor
cltd
sarb
xchg
push
cmp
mov
xor
cwtl
mov
pop
xchg
sub
add
mov
lret
jb
sbb
and
push
lds
pop
movsb
adcb
xchg
fwait
dec
cmp
iret
push
arpl
ja
in
adc
pop
adc
mov
xor
jne
jecxz
cmp
ret
incl
pushf
scas
push
ror
dec
mov
in
mov
and
movb
stos
or
ljmp
push
mov
jmp
insb
push
sbb
adc
aaa
or
mov
outsl
lret
mov
sbb
jno
sub
cmp
jge
nop
fwait
cmp
fldt
or
add
imul
test
adc
mov
xor
inc
aad
jge
addr16
mov
fisubs
fiadds
sar
pop
mov
clc
jecxz
push
mov
cld
addl
adc
push
aam
out
arpl
fsub
call
fistpll
sahf
lret
adc
loop
aas
pop
jg
adc
fwait
mov
ret
mov
call
dec
sbb
push
mov
and
mov
cmc
jg
das
adc
daa
dec
or
cwtl
lods
out
dec
dec
sbb
popl
arpl
dec
adc
clc
jg
inc
pop
adc
jle
xchg
fidivl
movsl
jmp
cmp
xchg
fcom
and
incl
pop
xchg
cli
nop
imul
mov
ret
cmpsb
sbb
inc
loope
jg
pushl
jge
xor
jae
mov
xchg
mov
sub
lea
and
ljmp
test
mov
js
fisttpll
mov
sbb
push
dec
cmpsb
jo
xor
enter
push
iret
mov
inc
shlb
mov
mov
mov
cmp
add
jne
pop
lods
pop
popa
mov
jg
push
fldenv
dec
addr16
cmpsb
mov
pop
cltd
sub
pop
cmp
xchg
ss
loope
cld
dec
imul
inc
adc
dec
sub
push
pop
jp
mov
jns
xor
in
lock
lds
add
xor
dec
int
and
daa
das
call
mov
mov
sahf
mov
cli
jae
jge
inc
in
ds
and
mov
and
dec
lock
addb
mov
stc
jge
push
cmpsl
inc
lock
cmc
push
jae
lea
cmp
decl
mov
and
jmp
sub
call
sub
pop
stos
cltd
lahf
mov
inc
jecxz
or
mov
out
pop
adc
outsb
clc
jg
inc
cmpsb
pop
outsb
in
jmp
inc
adc
popf
clc
jmp
andb
arpl
cmpb
adc
sbb
movaps
push
and
fsubp
insl
sbbb
nop
into
or
xor
mov
mov
xchg
inc
adc
std
sbb
xchg
cwtl
and
or
aaa
and
ret
imul
lahf
cmp
pop
into
xchg
adc
call
add
xor
pop
and
das
icebp
xchg
test
adc
adc
mov
daa
and
push
fsubs
mov
sub
incl
and
push
mov
sbb
or
scas
sbb
lods
fs
addr16
push
dec
mov
xchg
cmp
ret
ds
add
jbe
xlat
pop
lahf
inc
mov
sti
aam
sarb
sbb
scas
shlb
lea
lcall
sbb
sub
ss
mov
fwait
ja
adc
call
scas
mov
cwtl
lds
sbb
lcall
aaa
and
rorl
clc
subl
add
lock
push
xlat
loope
fstsw
mov
gs
incl
fildll
leave
ss
call
mov
jge
xorb
add
lock
pop
pop
xlat
inc
sub
arpl
out
sub
movsl
mov
xchg
adc
mov
jb
jmp
test
sub
insb
pop
sub
pop
arpl
les
jmp
jecxz
sbb
or
testl
jnp
outsb
xchg
and
xchg
mov
adc
movsb
cmpsb
mov
pop
and
jg
loope
mov
push
je
jno
out
insb
packssdw
outsl
icebp
jg
dec
outsl
mov
std
les
imul
int
les
xchg
lahf
mov
fldt
fmul
shll
stos
daa
sbb
jg
inc
test
adc
inc
inc
aad
pop
and
ljmp
fiadds
stc
out
hlt
xor
bound
pop
clc
mov
jae
rorl
sub
lock
das
fbstp
fs
jmp
incl
rcrb
xchg
lahf
dec
loopne
push
xor
in
das
add
cmp
mov
jg
das
insl
imul
sahf
jae
jmp
dec
out
sub
and
ljmp
lret
pop
hlt
inc
nop
sbb
pop
std
push
mov
xor
mov
jns
arpl
loope
inc
add
mov
aas
and
out
loop
hlt
aaa
cli
pop
inc
inc
fdivs
lret
and
jmp
pshufw
and
xor
stc
int
push
addl
xor
cli
or
lock
mov
iret
and
push
js
lea
adc
hlt
test
ljmp
mov
jecxz
das
rorl
mov
inc
stos
push
push
ljmp
adc
cmp
xchg
ret
aad
dec
mov
mov
push
cmpsb
fiadds
mov
and
xchg
repnz
xorl
aad
ja
addr16
dec
std
or
adc
imul
jg
xchg
clc
ror
xchg
ret
movsl
inc
loopne
pop
xor
and
jnp
inc
push
neg
clc
pop
mov
inc
dec
push
orb
insb
icebp
or
mov
push
iret
lahf
adc
hlt
jae
mov
das
adc
pop
mov
fs
fdiv
jmp
jbe
in
mov
xor
ljmp
aam
add
ror
faddl
aad
nop
cmp
test
jp
pop
adcb
sbb
fsub
fldl2e
call
sub
push
enter
dec
insb
add
test
or
mov
test
xchg
loope
xor
clc
call
call
mov
jge
mov
mov
mov
das
icebp
aas
imul
test
sahf
jge
imul
jg
pop
dec
adc
fiadds
clc
clc
lret
andb
ljmp
push
push
ret
adc
xor
pop
jge
push
aad
insl
xor
lock
fistps
add
rcrl
mov
in
mov
dec
push
dec
shrl
hlt
pop
mov
imul
and
sahf
jg
jmp
mov
and
pop
les
jmp
lahf
jle
incl
lret
dec
or
mov
push
arpl
lcall
jmp
cmp
daa
mov
jbe
cmc
loopne
xor
mov
and
or
insb
out
add
das
jne
jb
xor
orl
insb
mov
fs
jmp
jl
cmp
lods
jns
xchg
mov
push
add
jmp
call
dec
push
jns
lods
xchg
xchg
dec
das
or
pop
mov
mov
adc
movsl
test
or
jge
xor
insb
inc
adc
mov
aaa
pop
or
cmp
xor
adc
jg
push
sti
ret
pop
pop
dec
xor
push
mov
jmp
pusha
lahf
xor
data16
js
sbb
ljmp
aas
sti
inc
inc
xchg
hlt
pop
pop
lea
daa
inc
cs
jecxz
lcall
lds
loope
clc
add
ret
lcall
xchg
aam
test
jg
pop
dec
dec
popf
mull
insl
outsl
mov
mov
xchg
lea
lods
add
dec
inc
push
insb
add
cmpl
add
push
lock
imul
filds
mov
add
repnz
dec
popa
inc
jb
jb
add
mov
add
add
fcmovnu
mov
sub
jb
cmp
imul
pop
mov
idivb
outsl
data16
or
xchg
xor
push
push
pop
inc
rcl
inc
push
and
mov
mov
sbb
add
jo
dec
sahf
std
outsl
filds
sbb
outsl
push
imul
imul
push
outsb
dec
pop
mov
insl
popa
jo
imul
inc
insl
pop
jbe
mov
test
jo
mov
inc
dec
and
sbb
insl
fwait
add
mov
insb
inc
fcmovnu
lret
mov
sub
inc
je
sbb
inc
ja
fsubrs
adc
outsl
ja
andb
je
jo
subl
push
iret
jnp
popa
insl
gs
inc
outsb
jbe
outsl
aad
xchg
bound
jo
ja
inc
aad
jbe
dec
push
je
fnstcw
sub
dec
outsb
outsw
adc
jb
push
push
shrl
in
add
jo
and
fildl
addr16
mov
nop
add
add
add
call
mov
insb
pop
int
pusha
sub
popa
imul
xchg
cmp
arpl
pop
adc
or
dec
mov
mov
or
pop
ja
lods
jae
dec
add
aas
aas
divl
mov
inc
pop
push
add
cmp
pop
pop
fs
pusha
leave
pushf
popa
outsb
gs
or
push
shll
pop
pusha
mov
mov
popa
mov
mov
mov
aam
imul
test
or
jne
or
mov
je
data16
jo
arpl
ss
mov
or
aaa
lcall
jns
punpcklwd
adc
jae
lret
int3
mov
mov
add
lods
add
jmp
das
jbe
add
popf
xor
in
sbb
mov
and
scas
cmp
sub
add
and
xor
je
add
or
adc
ss
or
cmpsl
cmp
sbb
push
nop
and
enter
je
pusha
mov
push
add
sti
shlb
and
or
add
dec
mov
daa
je
fisttps
cmpsb
add
add
dec
loope
fimull
pop
popa
mov
mov
in
push
and
add
add
pusha
or
add
add
add
cmp
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
