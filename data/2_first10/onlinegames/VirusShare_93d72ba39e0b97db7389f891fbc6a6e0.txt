jg
add
adc
add
sbb
inc
add
sub
mov
mov
or
sbb
add
push
mov
mov
mov
rclb
fisttpl
mov
rorb
loope
stos
stos
stos
in
xchg
idivl
jle
testl
imul
add
test
add
add
pop
cmp
push
call
pop
pop
inc
mov
repz
push
push
jo
pop
push
or
add
lea
jne
jnp
fdivrs
pusha
inc
jne
sti
jge
push
sahf
adc
xlat
mov
push
dec
pop
mov
insl
dec
mov
sbb
pop
gs
hlt
and
mov
add
mov
push
inc
pop
cmp
ret
fiaddl
mov
pop
cmp
out
sub
fsubr
std
mov
add
mov
pop
movb
loope
cmp
gs
popa
enter
lret
sbb
ret
lret
outsl
int3
int
into
push
jo
shrb
shlb
shll
jo
sbb
aam
aad
popa
xlat
jo
jae
xchg
loope
push
loopne
loope
cmp
jb
outsl
jecxz
in
in
cmp
out
xor
xor
inc
ljmp
jb
jae
je
push
jo
sbb
icebp
jb
outsl
repz
gs
jae
push
jecxz
divl
clc
xor
dec
je
jo
cli
gs
js
je
mov
rcl
sub
mov
jg
push
xor
call
lock
push
mov
les
test
je
push
call
mov
or
repnz
add
push
gs
pushf
inc
sub
jle
imul
hlt
fcoms
mov
shr
push
aaa
jge
mov
je
inc
push
int3
jmp
cmp
rcrl
xor
ficoml
jb
and
rcrl
jb
sub
or
movsbl
sarl
inc
gs
and
sbb
sahf
inc
and
push
add
push
sub
and
add
movsb
or
mov
sub
mov
inc
inc
test
mov
jne
push
jbe
hlt
andb
sub
into
imul
add
or
mov
inc
cmp
jl
pop
jg
add
je
pop
and
inc
cmp
arpl
inc
daa
shll
cmp
je
sub
sbb
nop
andl
inc
ja
add
xor
lea
pop
arpl
mov
mov
mov
in
inc
andl
sbb
pop
sbb
cmp
push
push
inc
inc
or
cmpl
daa
add
in
call
out
push
out
push
inc
shl
sahf
std
add
inc
push
jp
add
add
lea
dec
in
cmpb
jbe
lea
orb
std
pop
push
inc
add
jge
mov
int3
clc
push
adcl
cmp
fdivs
pop
add
jbe
push
roll
pop
xor
clc
jbe
push
push
jle
cmp
or
clc
jmp
shlb
aam
inc
outsl
cld
ss
mov
cmp
mov
call
and
mov
push
hlt
inc
hlt
loope
out
and
loopne
cmp
jl
mov
push
enter
mov
inc
sbb
scas
pusha
xor
jmp
pop
inc
sbb
mov
sbb
sbb
add
adc
or
add
cld
repz
je
fmul
arpl
dec
push
xchg
xor
jb
jo
push
fildll
loope
loop
jecxz
sbb
xchg
in
in
out
out
jns
mull
int3
dec
outsl
popa
fs
sahf
out
imul
sahf
jb
inc
mov
push
cmp
dec
sbb
ret
shll
ret
pop
loope
les
outsl
je
movsl
out
sbb
arpl
dec
mov
xchg
ret
leave
mov
push
push
sub
orb
adc
dec
cmp
fldenv
jmp
push
pop
das
xchg
cmp
sbb
and
mov
sub
sub
sub
xor
jle
add
in
jae
sti
push
xlat
pop
inc
mov
pop
add
lock
shr
dec
mov
pop
call
jmp
sbb
add
jmp
stos
add
push
or
add
dec
add
sub
lret
mov
fwait
mov
xor
mov
mov
inc
dec
jne
push
jp
sub
xor
lret
sub
hlt
mov
push
imul
divb
bound
xor
push
push
xchg
push
push
rolb
iret
jmp
and
sub
jne
jp
pop
cmp
inc
cmp
jle
add
cwtl
push
jno
or
in
roll
je
aaa
flds
add
cmp
mov
pop
mov
or
jle
imul
scas
pop
mov
scas
insl
push
mov
adc
push
inc
addr16
cmp
je
and
fisubs
js
je
cld
add
add
inc
cmp
sbb
shll
repnz
jecxz
adc
mov
nop
mov
pop
test
inc
adc
mov
sbb
fidivrl
jmp
add
lret
push
out
or
insb
into
lea
or
sbb
cmp
fs
ret
cmc
movb
mov
sub
push
mov
pop
adc
push
sub
push
jp,pn
ja
mov
dec
fs
aaa
lea
in
and
addr16
inc
jne
lock
in
or
xorl
dec
das
adc
cld
sub
aam
je
int
lock
fdivl
inc
xchg
in
push
stos
repz
xor
in
aam
cmp
xor
inc
cmp
cmp
pinsrw
xor
jne
sbb
fmul
mov
je
int3
int
iret
inc
or
jns
rcrl
jns
cs
mov
dec
mov
rorb
push
shrl
ret
jb
popa
jle
arpl
iret
repz
lods
lods
scas
scas
mov
iret
repz
mov
mov
mov
cmp
repz
mov
call
lods
or
shr
and
rorl
jnp
push
or
cmp
gs
sbb
add
add
adc
or
pop
or
scas
cmove
shl
mov
mov
sub
mov
es
push
pop
call
push
or
cld
ljmp
cld
add
jmp
fisttps
int
mov
sub
mov
mov
mov
inc
dec
mov
or
test
sarl
das
jmp
push
adc
test
xchg
lea
or
xor
mov
mov
ja
mov
push
pop
cmp
gs
add
gs
cmp
mov
inc
jb
lea
xchg
add
loop
jne
cmpl
in
pop
adc
push
clc
sub
enter
push
neg
push
int3
ss
ljmp
fsubr
out
sbb
ftst
test
push
inc
mov
loopne
or
cmp
push
jecxz
push
gs
xchg
cmpsl
mov
sarb
gs
aad
jno
stos
or
xchg
cmp
dec
push
jns
je
insl
jo
out
sahf
inc
imul
popa
jmp
or
mov
lock
out
mov
imul
insb
gs
inc
add
pop
xor
aam
cwtl
sub
jg
mov
cld
popf
mov
mov
test
pop
leave
std
jne
jae
enter
fcmovne
dec
decb
push
packssdw
out
xchg
mov
sbb
das
addr16
mov
out
mov
dec
adc
mov
xor
sbb
inc
cmp
or
test
sbb
repz
sbb
das
jg
nop
adc
xchg
fdivp
jae
call
mov
es
test
dec
jp
fcom
add
pop
pop
push
push
dec
sbb
cmp
lret
clc
orl
push
push
aam
cmpsb
repnz
fnstenv
xlat
pop
pcmpgtb
rorb
xchg
ret
add
test
mov
fwait
cld
movsl
movsl
movsw
movsb
push
es
addb
mov
sbb
addr16
cmp
jne
xor
pop
add
aaa
adc
repnz
std
push
imul
inc
loope
push
push
jecxz
cmp
push
pop
leave
ret
pop
ljmp
ret
push
cmp
push
pop
mov
and
add
sub
pop
push
stos
lods
pop
dec
inc
mov
xor
add
pop
jge
jnp
pop
idiv
cmp
jle
add
jl
popa
jle
jp
add
sahf
jecxz
jl
inc
mov
popa
jmp
sbb
jo
push
push
pop
inc
mov
pop
lret
lret
cli
xchg
divb
mov
mov
bound
fadds
cwtl
sti
cltd
sti
mov
cld
popf
cld
jl
pop
sti
sbb
xor
jge
popa
adc
dec
push
xchg
jge
pop
add
lods
stos
into
pushf
push
icebp
adc
es
lahf
cmp
cmp
imul
push
in
pop
in
jne
int3
ja
ret
xchg
mov
jb
movsl
or
outsl
mov
mov
jge
movsl
les
inc
addr16
enter
push
sbb
xor
pop
addr16
adc
push
std
les
sbb
push
or
outsb
push
push
mov
adc
into
xor
pusha
shll
sahf
daa
adc
gs
out
jns
outsb
insb
xor
js
fiadds
add
rolb
xchg
gs
repz
inc
imul
push
cmpsl
lret
fadds
outsl
fidivl
xchg
loope
jns
inc
insb
fbld
pusha
sub
loopne
loope
inc
aas
iret
arpl
jns
pop
leave
repz
gs
js
mov
xor
mov
cmp
pushf
cld
xlat
mov
in
stc
xor
mov
mov
fldl
sbb
in
cmp
insl
test
enter
mov
sub
test
xor
push
push
or
movsl
cmp
push
popl
add
imul
pop
or
jne
movsl
mov
lfs
push
xlat
ss
aaa
pop
jp
cmp
test
ret
inc
ss
pop
fisubs
out
psraw
test
incb
push
outsl
out
sub
pop
adc
call
jne
subl
in
ljmp
mov
daa
dec
xchg
cmpxchg
push
ficomps
adc
xor
push
hlt
inc
stos
ljmp
aaa
or
mov
mov
int3
inc
movsb
outsb
fbstp
xor
je
push
mov
cmp
jmp
push
cmp
je
cmpb
xor
jecxz
fsubrs
add
push
pop
and
xchg
jge
sahf
sub
movsb
ljmp
mov
mov
daa
add
or
fsubl
lock
add
pop
pop
icebp
ret
push
popa
mov
add
pop
cmp
jae
mov
push
shl
imul
pop
pop
pop
cmp
cmp
test
xorb
sbb
add
fadds
addl
frstor
jge
mov
leave
pushf
add
out
in
mov
or
mov
xor
loope
lea
lea
cmpsl
sbb
test
adc
out
sub
jno
adc
ja
pop
pop
mov
clc
mov
add
jp
cmc
test
cmp
hlt
std
mov
cmp
gs
xchg
push
cld
push
std
push
incb
imul
es
xchg
cmp
cwtl
stc
clc
pop
push
adcl
inc
stos
push
inc
or
and
dec
or
or
sub
movsl
fisubs
addr16
mov
fidivs
aam
sub
xchg
out
xchg
pop
xor
ljmp
xchg
stos
imul
jb
mov
mov
push
xchg
mov
add
int3
stos
jno
push
adc
mov
add
push
xor
jbe
cmp
jl
jmp
push
adc
xchg
mov
adc
cmpb
and
clc
cs
push
sar
add
xchg
xchg
mov
push
xor
mov
add
aam
push
fcomps
ret
pop
push
push
repz
mov
fcoms
inc
or
test
add
jmp
xor
push
cmp
mov
rcl
jmp
clc
push
pop
mov
insb
lret
lods
fdivr
push
arpl
pushf
jo
mov
inc
clc
imul
shll
test
jnp
hlt
pop
call
mov
lods
sbb
neg
arpl
xchg
jmp
pop
pop
pop
enter
push
mov
pop
push
cmp
aad
push
mov
pop
jecxz
jae
insb
sub
hlt
cmc
sub
push
loope
stc
xor
xor
cmp
cs
fs
insb
xchg
inc
ds
arpl
sbb
push
iret
insb
inc
js
xor
in
jne
je
and
insb
js
icebp
push
push
lea
push
push
inc
rorb
push
push
adc
adc
push
pop
xor
adc
push
flds
inc
jge
arpl
cmpsb
adc
mov
push
sbb
jns
push
popa
pop
and
push
sbbb
adc
int3
bound
adc
and
mov
mov
xchg
cwtl
pushf
mov
mov
mov
mov
mov
mov
mov
shlb
cmp
sub
or
sbb
addl
shll
call
sub
or
sub
sub
or
les
mov
pusha
sbb
jp
out
adc
mov
stc
push
loop
or
mov
std
inc
xchg
lea
leave
cmp
xchg
out
nop
mov
aam
cltd
cmp
or
shlb
mov
cmpb
jne
inc
inc
mov
xchg
mov
cmp
je
cmp
lock
xchg
inc
shlb
testb
je
movzwl
mov
mov
mov
or
or
loop
cmp
scas
cwtl
int3
fadds
js
mov
mov
mov
push
push
call
or
mov
push
jl
enter
push
fadds
mov
inc
les
ud2
in
jmp
jo
lock
xor
out
sahf
sub
dec
pop
insb
jns
out
jl
pushf
scas
mov
out
clc
add
xor
iret
repz
ss
pop
push
cmp
repz
pushf
test
into
loop
pop
icebp
cmpsb
ss
repz
or
jae
shll
mov
repz
xchg
pushf
cmpsb
mov
cmp
repz
int3
aam
repnz
jns
icebp
or
adc
sub
out
sahf
out
pop
push
mov
idivl
insb
xor
cmp
xor
xor
fisubl
addb
sub
sub
int
and
ficoms
xchg
inc
jb
cmp
jge
lods
xchg
add
gs
jb
arpl
fs
jae
add
outsl
popa
fs
imul
add
mov
inc
bound
push
je
imul
dec
outsl
fs
gs
stos
pop
pusha
pop
imul
xchg
or
jb
je
push
dec
fs
insb
outsl
test
gs
popa
outsb
fs
xchg
fdivs
mov
pop
out
shll
inc
lcall
sbb
fdivrs
ret
in
xchg
out
push
loopne
imul
sub
arpl
ror
sub
lods
cmc
sub
inc
lret
adc
push
outsl
jo
sub
jnp
push
or
sbb
dec
je
inc
jns
inc
int
push
outsl
push
imul
loopne
jns
insl
inc
imul
je
push
outsb
insl
popa
jo
imul
dec
dec
popa
flds
jecxz
outsl
fs
mov
fnstcw
mov
xchg
pop
loope
je
pop
jno
jae
pop
shlb
jo
push
das
fcmove
out
jb
test
adc
imul
push
ret
jns
inc
outsl
out
outsl
ja
push
loop
add
ss
push
push
push
adc
outsb
jbe
int3
out
fs
add
add
popa
bound
push
dec
inc
dec
xor
cs
dec
dec
ret
cltd
ja
jae
xor
scas
mov
shlb
shr
pop
adc
cltd
ret
bound
push
fcompl
mov
fdivrs
gs
fsubrs
xor
pop
push
sarl
xor
clc
cld
push
dec
mov
mov
lret
mov
es
jb
dec
xor
fisubrs
pushf
xchg
and
cltd
mov
mov
cmp
cmp
push
lret
push
dec
inc
push
push
loopne
insb
push
imul
sub
sub
arpl
mov
je
xchg
jae
dec
push
insl
sub
fistl
xor
addr16
jae
dec
mov
fs
imulb
imul
hlt
xor
arpl
insl
gs
xor
or
push
jo
jp
push
je
jo
xchg
sub
insb
data16
pop
add
inc
inc
push
inc
push
dec
add
pop
inc
je
jne
dec
outsb
stos
sbb
add
add
add
and
mov
mov
test
mov
or
mov
mov
push
cmp
add
mov
cltd
add
ret
lds
and
nop
inc
out
dec
outsb
std
fwait
rep
shl
sbb
pop
push
call
pop
sub
lea
push
ret
mov
loopne
jbe
add
cmc
add
sub
add
mov
nop
mov
lea
xchg
sarb
or
pusha
mov
adc
out
dec
nop
mov
add
add
sti
add
push
push
push
push
push
mov
call
nop
mov
rep
popf
popa
add
xor
cmp
cmpsl
inc
sub
or
jmp
mov
push
add
rcr
mov
out
mov
daa
arpl
and
mov
inc
mov
mov
inc
inc
inc
dec
jmp
push
mov
out
jne
into
aam
lret
mov
xchg
incb
frstor
sarb
test
inc
inc
or
shlb
fldl
fs
mov
xchg
ret
testb
cmp
std
enter
jb
push
rdpmc
shrl
pop
jae
jecxz
stos
rorb
push
mov
jnp
ds
jecxz
rorb
call
push
xchg
mov
movsl
jns
or
inc
gs
test
add
addr16
inc
or
dec
data16
mov
push
cmp
fcoml
push
inc
jp
jecxz
xor
mov
dec
shll
mov
add
nop
sub
scas
into
stos
inc
orb
and
add
mov
int
mov
push
jo
jb
sbb
shlb
arpl
pop
ret
bound
ret
and
dec
push
and
and
or
and
fimuls
loopne
add
add
xchg
cmp
mov
subl
sub
cmp
sbb
inc
sbb
jl
add
pop
or
jo
pop
test
xor
loope
mov
add
ret
test
mov
pop
push
or
pop
data16
push
insl
pusha
pop
sbb
stos
cmp
cmp
inc
gs
push
dec
fildl
add
add
mov
or
loope
outsb
ss
sub
xorb
dec
or
push
ja
in
mov
add
add
xchg
cmp
push
push
xchg
shll
sbb
mov
add
add
mov
mov
or
xchg
test
inc
xchg
xorb
adc
mov
add
sbb
mov
in
jmp
jns
daa
mov
loope
add
add
les
cmp
adc
jnp
filds
and
dec
pop
dec
and
mov
shll
add
add
in
xlat
in
lods
cmc
cmp
push
addr16
fxch
mov
cwtl
sahf
pop
insl
data16
mov
adc
jns
add
add
push
xchg
call
imul
cmp
adc
xchg
mov
fbld
pop
gs
add
jle
movsl
cld
pop
jb
jae
ja
jecxz
pop
sub
aad
aad
pop
or
cltd
mov
or
add
add
into
sbb
jp
jge
push
push
or
sbb
xchg
rolb
into
jge
ss
sub
jbe
push
lret
add
add
pop
jl,pt
out
adc
inc
push
xor
idivb
mov
sahf
data16
test
pop
aad
cmpsb
cmp
dec
pop
outsb
sub
fidivrs
loope
addr16
pop
in
mov
adc
add
xor
add
pusha
arpl
lea
jmp
dec
inc
add
add
iret
or
stos
and
xchg
rol
loop
dec
push
push
add
add
cmp
xorb
addb
mov
test
adc
pop
mov
sub
add
add
enter
out
pop
clc
pop
shlb
faddl
jmp
dec
or
xchg
pop
push
insb
ret
push
outsb
jp
xchg
test
scas
pop
add
add
lret
test
and
cmpsl
lods
jle
rol
inc
into
scas
xor
or
lds
pop
icebp
mov
adc
pop
out
std
mov
dec
xor
nop
jb
and
adc
sub
xor
jle
xchg
stos
mov
add
add
pop
mov
int
push
add
je
dec
loop
cmp
sbb
add
lds
or
int3
push
inc
add
add
loop
push
pop
das
nop
loop
mov
movsb
imulb
out
xchg
inc
int
jo
cmp
sti
xor
rclb
fldt
movsl
ja
out
hlt
les
mov
adc
add
testb
ljmp
add
lahf
loope
out
sbb
inc
add
jmp
out
ret
inc
add
add
add
inc
inc
loope
stos
xchg
aam
mov
inc
outsb
inc
and
mov
addl
add
inc
dec
sub
clc
mov
aaa
ja
inc
or
xchg
mov
fisubrs
mov
add
push
xor
ss
ljmp
adc
fs
repnz
out
iret
jnp
je
jle
add
add
aam
xchg
xor
cs
leave
mov
and
insl
int
pop
stos
sbbb
in
add
insb
add
jbe
jns
sahf
sub
mov
mov
add
add
test
roll
mov
sahf
sbb
data16
js
lret
xchg
rcrb
testb
das
loop
add
shr
test
jne
or
ja
xchg
add
cmpsl
shlb
xchg
mov
pop
push
mov
loope
or
and
xchg
mov
call
xchg
es
add
add
lahf
aam
movsl
push
leave
aad
sub
mov
inc
inc
pop
scas
add
sub
sbb
add
iret
and
lods
mov
stos
xor
mov
push
jle
adc
int3
sahf
add
add
dec
dec
mov
stos
adc
nop
mov
adc
out
call
inc
push
adc
xchg
add
add
rorl
leave
sub
lock
sub
and
pop
sub
xor
test
cli
sub
lock
push
add
lock
cmp
js
cmc
jb
cmc
lret
mov
add
xchg
fisttps
jl
dec
add
jecxz
cmc
jp
test
jbe
jge
orl
add
mov
cmp
sbb
add
mov
cmc
shrl
or
sub
pop
aas
inc
je
inc
xchg
int
xchg
bound
fldcw
pop
data16
lods
lods
cld
out
inc
ret
push
jnp
add
add
stc
ret
xor
xor
pop
mov
adc
data16
cmc
out
push
jns
add
jmp
xchg
test
negb
inc
push
insb
daa
and
lcall
subb
push
mov
hlt
inc
add
in
mov
cwtl
imul
in
stc
mov
adc
xlat
out
fidivrs
stc
ror
cmp
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
popa
xor
pop
shr
int
xor
lods
cwtl
jb
add
add
add
roll
cwtl
sub
out
shll
jb
dec
sub
push
sbb
test
or
add
add
dec
pop
cli
mov
cwtl
xor
lea
jmp
cld
rclb
adc
xor
add
add
shrl
nop
test
jecxz
mov
fwait
lods
push
jbe
rcll
in
adc
cli
adc
or
sbb
sub
cmp
dec
push
mov
test
and
imul
je
inc
stos
fdivrl
fildl
push
insb
into
pop
sbb
ret
std
push
push
cmp
js
cmp
add
inc
jne
fwait
xchg
in
mov
aam
cli
cmp
mov
and
cwtl
inc
add
add
outsb
cmpl
lds
and
dec
mov
and
sub
sbb
add
mov
shll
fnsave
ds
add
add
cmp
ficoml
scas
aam
out
dec
jg
dec
cmpsl
sub
add
sub
jbe
xchg
xorb
add
sub
and
sti
pop
pop
cmp
pop
adc
add
pushf
sti
xchg
cvttps2pi
outsb
xchg
pop
ljmp
mov
cltd
inc
cmc
adc
adc
sub
pmulhw
fidivs
pop
push
repnz
inc
fisubrl
add
fs
leave
cmp
lcall
into
cmpsb
rcr
mov
xor
mov
add
fisubl
mov
mov
jle
mov
ror
jae
push
push
xchg
lods
xlat
insb
add
xorb
stos
out
mov
bnd
xor
bound
lret
in
idivb
loopne
add
test
add
add
ja
enter
aam
lock
mov
int
cmpsl
shll
jno
in
add
ja
jg
mov
cmp
movsb
add
pop
je
mov
lock
fldl
jae
xchg
clc
jae
add
lock
std
divl
mov
loopne
test
cmp
mov
outsb
arpl
cmp
add
push
lcall
pop
add
add
out
lods
pop
outsb
scas
and
fstl
gs
loopne
pop
lret
movsb
dec
mov
add
add
jb
inc
pop
dec
rorl
ja
popw
push
xchg
inc
or
xchg
pushf
adc
dec
jmp
add
repz
clc
inc
jmp
jo
mov
lods
arpl
mov
out
sahf
fsubrl
dec
or
add
insl
sti
mov
or
nop
mov
mov
mov
jecxz
iret
mov
add
popl
ja
out
std
shrl
shll
imul
jne
int3
push
loopne
test
orl
insl
subb
addb
add
pmullw
imul
or
xchg
inc
dec
out
adc
cmp
sbb
mov
sbb
add
add
pop
sti
mov
wrmsr
push
das
frstor
rcrb
sbb
sub
jo
xor
and
add
icebp
inc
fldcw
add
sarl
js
outsl
push
pop
fs
jl
jge
push
add
out
out
je
iret
xchg
outsb
pop
mov
mov
out
add
add
cwtl
das
dec
insb
push
mov
adc
pop
inc
xor
fwait
pop
mov
inc
xchg
pusha
insl
add
add
mov
ret
ja
cmp
out
pop
daa
mov
push
in
jo
cmp
dec
cmp
jle
add
add
ret
hlt
lret
cld
shlb
mov
mov
mov
pop
cltd
or
incb
add
daa
push
or
inc
jmp
xor
cmpsb
mov
add
and
push
shll
dec
mov
add
add
cld
add
leave
dec
pop
dec
xor
test
adc
aaa
gs
nop
fstps
mov
xor
movsb
inc
div
test
push
lds
add
adc
fcmovne
aam
sbb
out
cld
mov
add
ja
xchg
or
idivb
lahf
jge
jmp
jns
mov
jecxz
add
add
mov
iret
jle
scas
out
fdivl
loop
add
pop
cmp
dec
adcb
inc
sbb
add
add
mov
sub
push
scas
jmp
jbe
xchg
repz
mov
dec
xorl
call
jmp
push
ret
nop
push
aad
lret
mov
inc
push
sub
add
lea
loopne
sbb
add
jb
inc
xor
inc
dec
jne
test
and
add
enter
call
mov
jmp
xchg
and
insb
popa
inc
push
out
adc
pop
nop
pop
dec
push
popf
sbb
mov
call
push
push
pop
pop
nop
jns
sbb
adc
xor
mov
add
add
mov
cmpb
je
popa
rcrl
pop
loopne
or
add
jmp
movb
cmpb
pushl
sbb
add
fsubr
push
mov
fsubr
dec
pop
add
add
mov
mov
dec
sbb
in
call
pop
call
and
addr16
push
push
push
add
jno
xor
sbb
push
je
fisttps
xchg
sub
das
inc
cmp
and
call
mov
cmp
clc
push
data16
cmp
mov
hlt
jecxz
data16
aam
sarb
jecxz
in
int3
cld
das
pusha
pop
sbb
enter
mov
nop
inc
mov
ret
jmp
es
push
int3
mov
push
mov
cmp
jge
mov
mov
call
dec
pusha
loope
mov
pop
ret
out
andb
cmp
cmp
dec
aad
pop
adc
cmp
fimuls
ret
loope
mov
fstl
loope
sub
shlb
push
or
push
push
mov
add
lahf
lahf
jae
ficoms
ficoms
push
push
add
inc
xchg
pop
shrb
pop
push
es
lods
sbb
inc
pop
in
fcmovu
xchg
push
xchg
adc
call
xchg
mov
rolb
pop
fcoms
leave
add
es
call
lods
add
fmuls
add
xchg
es
rclb
mov
sbb
cmp
pop
ficoml
pop
xor
pop
pusha
lods
push
stos
scas
pop
shrl
fadds
lods
mov
adc
add
pop
fnstsw
or
shl
ficoml
sub
scas
xchg
or
into
add
adc
mov
fdivrs
dec
push
xchg
call
aas
clc
dec
dec
mov
mov
rcrb
shlb
cmpb
and
inc
fcomps
inc
sbb
mov
faddp
fimull
scas
in
mov
sbb
mov
add
lods
es
test
es
push
jmp
popf
xchg
add
jo
push
loopne
push
push
iret
xor
xchg
jo
lock
and
icebp
adc
push
rcll
push
out
movsb
push
jno
mov
dec
xchg
mov
jl
adc
adc
ljmp
mov
sar
xorb
fidivl
pop
pusha
pop
sbbb
adc
aaa
add
add
and
add
subb
daa
sbb
in
aaa
into
push
push
clc
inc
fsubs
shrl
daa
sub
or
adc
fdivs
ficoml
ja
xor
lods
mov
xchg
ret
test
add
jmp
cld
mov
sub
ja
jmp
sarb
rcrb
rol
aam
xchg
shrl
dec
pop
js
fmuls
jg
add
mov
or
out
dec
imul
mov
cs
push
cld
mov
sahf
loopne
inc
pop
push
adc
fsubs
dec
adc
mov
jge
jne
mov
mov
jns
popa
ficoms
ds
or
lods
add
movsl
mov
jbe
cltd
push
stos
add
jno
cmpsl
add
add
repnz
push
leave
inc
pop
and
rcrb
jbe
adc
push
inc
test
push
cmp
cwtl
cmp
adc
les
ljmp
cmp
mov
mov
int3
cmp
pop
sbb
lret
into
mov
pop
outsb
mov
push
int3
sbb
aam
mov
roll
push
jl
inc
cmp
pop
outsb
es
or
popf
cmp
inc
pop
sbb
inc
pop
in
inc
push
xchg
mov
pop
mov
pusha
mov
rcr
adc
pop
std
lods
add
xchg
add
inc
es
sub
add
pop
push
push
mov
push
mov
cmp
xlat
ljmp
adc
popa
outsb
adc
mov
jb
es
out
jbe
pop
cld
loop
rorb
add
daa
int
cmp
adc
xchg
andb
sub
mov
or
repz
mov
mov
sarl
xlat
ret
js
lods
or
sti
ljmp
fs
lods
jmp
mov
imul
das
fadds
out
mov
push
jmp
push
loopne
repz
fdivs
sbb
xor
sbb
jecxz
push
sub
push
jecxz
insb
adc
jmp
and
sub
xor
and
mov
cs
xor
jo
mov
fdivs
or
or
out
lods
sbb
push
mov
adc
push
and
pop
and
jp
aaa
lods
and
je
arpl
cmpsl
mov
mov
xchg
sbb
addr16
adc
or
es
dec
push
es
fidivl
xchg
push
pop
popa
or
cs
push
fsubs
xchg
fadd
sahf
xchg
mov
pusha
movsl
cmp
mov
scas
push
push
sub
or
pop
mov
arpl
cwtl
mov
sarl
ljmp
out
and
cmp
cs
push
sbbl
xchg
and
cmp
mov
jno
pop
and
sbb
xlat
or
or
xchg
dec
out
or
es
lods
jo
xchg
shlb
jns
lods
je
lock
add
pop
mov
mov
sahf
rorb
sahf
shr
cld
mov
cmp
loop
sub
push
xlat
lock
cmpsl
subl
jmp
adc
sub
ret
data16
fldenv
cmpsl
andl
mov
loop
add
imul
fcoms
popf
insb
add
jg
push
xchg
add
pop
jge
mov
pop
push
fcoms
xchg
scas
shrb
or
cltd
rolb
int3
dec
imul
imulb
pop
andb
mov
cmpsb
inc
mov
mov
jo
sbb
andl
adc
es
sbb
scas
stos
and
popa
xchg
push
pop
dec
inc
call
incl
dec
adc
sbb
or
sbb
fcoml
pop
into
add
andl
mov
ss
pusha
popa
push
addb
cmp
mov
inc
leave
ret
adc
loopne
jmp
ret
mov
nop
lods
xor
add
mov
jmp
ret
xchg
mov
add
jmp
jmp
pop
xchg
pop
pop
cmp
and
add
add
and
xor
ds
adc
dec
sbb
mov
ss
pushf
es
cmp
sbb
add
cmp
add
aaa
ss
ja
pop
pop
stos
mov
sbb
and
jo
adc
pushf
and
mov
add
add
mov
cld
pop
xchg
fdivl
inc
fsts
addr16
sbb
inc
sub
cmp
cmp
jo
add
pop
push
repz
sbb
mov
add
add
push
jb
push
push
inc
cmovs
inc
les
lret
pop
and
pop
imul
push
jnp
addr16
push
add
add
jecxz
jnp
dec
je
imul
pop
rep
push
pusha
push
lods
push
jge
add
loopne
inc
movl
cmp
and
xor
add
add
mov
inc
pop
imul
pop
xor
adc
je
fisttpll
add
pop
inc
aas
in
jnp
xchg
repz
pop
add
lock
mov
mov
sbb
pop
push
sub
bound
inc
push
add
add
call
lods
dec
mov
and
cmp
jno
lcall
das
or
push
outsl
outsb
push
es
pop
pop
pop
xor
add
jle
mov
jo
fcoms
dec
ja
add
mov
dec
add
add
shll
push
mov
xchg
or
adc
adc
das
push
scas
inc
mov
popf
mov
and
xor
add
add
push
scas
mov
pop
pop
andb
fsubs
adc
jbe
push
pop
dec
pop
insl
test
add
add
add
push
add
or
push
pop
dec
add
sub
subb
pop
push
push
inc
sub
add
add
or
repnz
mov
push
lods
and
inc
stos
movsl
push
and
insb
add
jae
or
fadds
add
dec
mov
mov
sbb
adcb
mov
inc
leave
adc
xorb
mov
dec
scas
jbe
add
orb
ficompl
push
test
inc
inc
inc
adc
nop
push
mov
dec
xchg
sub
add
and
add
inc
mov
pop
imul
add
mov
push
add
ficompl
pop
push
push
xorb
cltd
mov
popa
adc
xor
sub
sub
rolb
mov
push
push
jecxz
pop
filds
add
cli
mov
jae
mov
xor
push
int
pop
sbbl
dec
sbb
push
push
add
add
sbb
test
mov
push
xor
xlat
xchg
and
inc
and
inc
xchg
mov
data16
inc
add
and
ret
and
add
mov
add
pop
rolb
pop
mov
lea
daa
lret
dec
sub
aad
dec
add
add
pop
rcr
add
adc
jbe
jl
cmpsb
mov
inc
lods
sub
add
push
test
or
inc
cmpsb
fisubrl
adc
cmp
push
push
push
inc
or
add
adc
add
push
iret
js
jno
adc
mov
rolb
pop
jne
add
add
int3
xor
xor
xchg
push
ja
mov
push
xchg
inc
es
insl
mov
stos
add
pusha
dec
pop
andb
imul
add
pop
mov
dec
inc
roll
fiaddl
mov
gs
pop
sbb
repz
pop
add
pushf
or
outsl
mov
jmp
sub
mov
insl
fmuls
inc
xorb
add
lods
shlb
es
pop
or
ret
fs
add
mov
stos
jg
add
das
add
add
ja
push
mov
daa
dec
int
mov
gs
mov
daa
ja
aam
add
lds
push
xor
cmp
dec
sbb
add
inc
aas
push
imul
fimull
inc
rcrb
mov
push
dec
lock
add
inc
fiaddl
xor
lock
push
scas
orl
sbb
mov
daa
add
jnp
pop
lods
cltd
ds
jl
out
es
lea
adc
inc
pop
sahf
or
mov
add
ja
pop
adc
push
arpl
and
cli
pop
daa
shll
jnp
and
or
sbb
add
or
cs
inc
mov
and
les
cltd
sahf
repnz
mov
ja
subb
lock
pop
pop
cmpsb
pop
adc
or
mov
subb
mov
jmp
fcmovnu
add
test
add
add
mov
adc
in
add
push
add
dec
push
sbb
sub
inc
adc
add
add
mov
xchg
pop
cmpsb
jae
pop
xchg
pop
mov
pop
call
mov
mov
shlb
pop
mov
pop
mov
add
add
cmp
mov
mov
mov
add
mov
xchg
jecxz
jg
mov
pop
dec
xchg
je
jb
xor
add
cmp
insb
add
add
jecxz
jle
aaa
pop
mov
xchg
ret
sbb
fcmovnb
dec
push
lock
push
icebp
mov
sete
add
dec
dec
add
movsl
mov
adcb
inc
adc
pop
cmp
and
mov
add
mov
push
movsb
mov
or
xor
add
out
cmp
lret
xor
aaa
repnz
adc
add
xlat
sbb
dec
imul
int3
mov
xchg
lock
add
push
inc
mov
lods
jns
or
xor
add
rclb
popa
add
arpl
psrad
xor
aad
ret
fildl
mov
inc
pop
add
cmc
pop
or
popl
add
jg
add
cmp
pop
push
mov
lods
test
fdiv
sbb
iret
inc
scas
add
ret
inc
cmp
mov
xor
add
add
mov
pop
or
stc
arpl
inc
push
lds
or
adc
add
mov
cmp
fidivs
sub
jl
sbbb
dec
das
daa
jmp
xchg
stos
or
incl
xor
add
cmpsl
add
ss
fcmovnb
shr
sbb
dec
dec
push
push
pop
or
add
push
outsb
loope
inc
pop
ja
xchg
and
pusha
add
mov
dec
xchg
xchg
dec
fwait
stos
push
mov
add
lcall
jb
adc
sahf
adc
adc
jmp
xor
add
gs
push
stos
lods
daa
pop
pop
arpl
add
fidivrl
loop
cmp
aad
add
add
adc
dec
push
fisttpl
loopne
fisubl
jle
fstl
addr16
fsubrp
xchg
ret
mov
add
add
rorl
rol
push
vrsqrtps
xchg
push
lret
pop
mov
ficoms
lock
js
push
fisubrl
pop
mov
jae
xorb
cs
add
push
add
xchg
inc
in
mov
sub
push
jp
add
add
js
mov
outsl
inc
lock
or
cmp
or
jae
movsb
lcall
add
mov
arpl
pop
mov
and
adc
add
add
int3
rcrl
lds
jg
icebp
push
mov
inc
xor
push
cmc
pop
push
hlt
out
subb
sti
inc
mov
pop
jb
into
in
add
add
jae
aaa
sbb
xchg
test
fisttpl
mov
jns
jp
fwait
pop
pop
cmp
lar
add
rorl
rorb
mov
mov
je
rolb
clc
mov
mov
add
pop
or
jecxz
sbb
push
in
add
inc
pop
std
inc
cld
adc
adc
sti
cli
out
add
push
add
push
in
fs
cmp
aam
lcall
mov
fadds
mov
add
xor
mov
push
mov
outsl
pop
dec
aam
pop
cmp
and
add
inc
lret
popa
sbb
or
lods
push
add
push
cmp
dec
dec
xchg
loope
ja
outsl
jecxz
add
lock
lods
push
mov
xor
in
dec
aaa
sbb
push
aam
lock
jg
arpl
xchg
sti
push
cmp
int
push
pop
add
add
pop
and
mov
mov
jo
mov
and
add
add
add
ftst
jnp
inc
add
idiv
sbb
or
jp
add
inc
lahf
inc
or
xor
lahf
jno
addl
add
jno
push
mov
rolb
and
dec
in
jo
adc
dec
xlat
add
add
dec
jb
inc
cmc
pop
xlat
addr16
sbb
loopne
sbb
dec
pop
fstp
testl
add
dec
dec
fisubrl
outsb
xchg
dec
xlat
enter
int
mov
add
or
cmp
cltd
addl
add
add
jbe
les
xor
inc
inc
addr16
shlb
shlb
push
pop
sbb
and
inc
or
and
outsb
iret
adc
add
push
add
outsl
or
rep
mov
roll
ja
mov
sbb
fistpl
repnz
repz
adc
push
shlb
push
add
inc
dec
out
fbld
inc
xlat
iret
xlat
rol
pop
inc
jp
add
add
iret
fst
jne
sub
sbb
inc
dec
popf
mov
pop
arpl
and
push
jno
cmp
jg
ss
pusha
outsl
xchg
inc
mov
mov
jnp
push
inc
push
es
ficoms
dec
mov
arpl
jp
leave
sbb
inc
adc
xorl
xor
inc
add
fcomps
ret
shll
mov
mov
mov
push
xchg
mov
out
shrl
mov
int
aaa
aam
add
add
push
rorl
daa
sub
dec
pop
push
mov
xchg
xchg
nop
mov
mov
add
or
push
repz
mov
sbb
add
mov
jno
push
das
jno
bound
inc
jae
adc
jno
ret
je
ja
xlat
sbb
add
or
lahf
add
dec
ss
pusha
fcmovbe
add
inc
mov
les
add
pop
dec
data16
es
setg
loopne
or
popa
and
dec
rol
ja
cmp
cmp
xlat
fidivs
idivl
mov
adc
lods
popa
mov
jnp
inc
adc
add
outsl
cmp
xor
add
fildl
or
mov
sbb
mov
and
adc
mov
xor
daa
dec
mov
mov
mov
or
add
mov
cmpsb
ret
jno
jae
and
pop
test
push
scas
cmp
add
jae
add
lods
mov
jo
jecxz
mov
add
mov
test
push
stos
push
or
jp
data16
arpl
add
add
stos
adc
dec
aam
sbb
test
test
sub
imul
leave
lret
ret
add
add
add
add
pusha
add
adc
repnz
rolb
xor
fwait
stos
mov
and
leave
and
add
sbbb
add
aaa
in
fwait
imul
pop
adc
popl
add
add
loopne
pop
cwtl
adc
test
andb
xchg
xor
push
jb
outsl
jp
outsb
ja
cmp
xchg
add
add
ss
lret
jae
stos
mov
cmc
add
jae
je
repnz
lock
add
push
rorl
xchg
repnz
mov
push
add
cmp
add
dec
inc
push
xor
repz
xchg
leave
aad
cmp
inc
add
repz
add
add
push
inc
add
lods
inc
mov
fwait
adc
mov
or
add
fcompl
add
add
shll
or
lahf
scas
sbb
add
mov
jns
ret
lea
aas
fimull
aas
inc
sbbl
leave
xchg
inc
imulb
add
cltd
arpl
dec
out
ss
add
clc
ja
pop
mov
lret
jge
fildl
mov
jge
in
mov
cmp
add
add
cltd
bound
sbb
dec
imull
xor
cmc
outsb
shl
jbe
sti
and
cli
jne
stc
lret
add
inc
clc
jp
inc
ja
pop
cld
es
jecxz
loop
loope
loopne
adc
out
in
in
jmp
ljmp
call
in
adc
in
ficoml
xchg
out
sub
add
sub
xor
bound
pop
lcall
cwtl
ficompl
pop
pushf
or
jno
xorb
test
test
add
xchg
mov
dec
mov
inc
mov
mov
clc
mov
cmp
push
lret
mov
mov
add
push
jno
pop
mov
adc
mov
jae
inc
sbb
add
jae
xor
pop
mov
mov
add
cmp
add
movsl
inc
movsb
bound
push
xor
add
test
scas
jno
and
cmp
call
repnz
dec
add
fwait
mov
cmp
lahf
lret
jecxz
lods
add
fdivrp
sbb
add
bound
cs
popf
sbb
jne
inc
pop
and
dec
mov
repz
add
js
ficoms
shll
jno
aaa
xchg
pop
push
imul
lret
bound
or
sbb
push
jbe
add
lea
mov
or
mov
mov
iret
lods
jecxz
adc
add
arpl
into
xor
inc
pop
sub
sub
xchg
scas
jb
add
add
dec
cmp
in
or
push
push
push
add
pop
mov
cmp
imul
loope
add
fildl
jbe
fs
subl
enter
inc
pop
add
test
push
add
std
dec
push
lahf
and
xchg
push
adc
add
addl
mov
xchg
test
mov
add
in
push
syscall
mov
xor
xchg
or
lock
add
inc
jg
pop
mov
inc
daa
pop
dec
popl
add
add
mov
push
adc
in
xchg
dec
jno
dec
xlat
jno
dec
jno
fsts
jecxz
xchg
fcmovbe
inc
sbb
inc
adc
aaa
repz
inc
inc
dec
mov
mov
mov
push
mov
add
or
jne
mov
data16
inc
pop
mov
add
addb
inc
inc
movsl
jo
ret
pop
fsts
fs
cwtl
ret
loope
rolb
add
hlt
lock
filds
je
mov
outsl
adc
rclb
sub
add
mov
dec
and
addr16
jb
pop
arpl
or
popl
dec
add
add
rcl
mov
scas
pusha
movsl
aam
es
stos
mov
push
inc
arpl
add
add
sti
push
lahf
jl
inc
and
arpl
pusha
xchg
add
iret
pop
adc
push
mov
push
mov
mov
xor
pop
fisubs
push
fldcw
and
lret
sub
mul
fwait
and
imul
xchg
lahf
add
push
loopne
mov
dec
add
add
ja
sbb
ret
adc
pop
dec
fsubrs
push
push
mov
test
pop
out
js
jge
add
mov
pop
add
cmpsl
repnz
mov
dec
add
dec
jno
add
add
cmp
lahf
rorl
dec
outsb
adc
pop
inc
pop
fldcw
mov
mov
add
dec
jmp
push
je
ss
adc
arpl
push
int3
icebp
cmp
pusha
jnp
pop
add
add
sti
jnp
jmp
cmp
adc
xlat
jb
adc
add
cmp
and
pop
mov
mov
sbb
mov
or
xor
add
fcmovbe
push
repz
dec
ljmp
pop
cmpsl
xorb
jbe
add
inc
dec
sbb
jg
mov
jle
mov
mov
cmpl
inc
ret
add
test
jno
push
or
inc
pop
adc
arpl
and
stos
fcmovne
stos
mov
xor
sti
lods
inc
and
daa
add
jnp
insl
cmp
add
add
pop
push
jnp
xchg
jbe
fisttps
dec
pop
ret
jp
shll
push
lods
nop
and
pop
or
je
rorb
pusha
push
pop
mov
or
addb
mov
stos
fsts
mov
mov
add
arpl
loopne
or
jo
inc
shll
add
mov
ret
test
pop
orl
inc
outsb
mov
dec
xchg
add
add
sub
dec
rcl
jmp
mov
int3
lret
xor
xchg
inc
add
out
inc
ret
add
pop
addb
and
pop
pop
add
push
cmp
inc
aaa
jo
dec
push
add
add
dec
sysret
dec
mov
shll
and
imul
lock
and
outsb
movaps
push
pop
push
and
leave
add
add
add
fistl
or
pop
fldenv
mov
jmp
mov
lea
pop
lods
add
add
add
pop
dec
pop
xor
dec
outsb
mov
adc
and
sbb
xchg
and
mov
add
add
adc
cld
or
pusha
mov
mov
scas
or
cmpsb
out
adc
add
adc
daa
push
push
jl
mov
iret
jno
lret
dec
fisttps
ret
add
int3
bound
sarb
stos
out
and
dec
lcall
xlat
jne
cwtl
add
add
push
push
or
xchg
sbb
push
fisubrs
sbb
push
adc
dec
scas
adc
cmp
ret
xor
mov
add
ret
dec
lahf
push
in
cmp
mov
test
mov
add
or
fstpt
mov
add
sti
sbb
mov
jge
aaa
ja
push
jge
dec
add
rcll
lahf
pop
rorb
xchg
add
xor
daa
dec
aad
or
add
pop
aam
cmp
lahf
pop
fimull
out
dec
fsubs
add
hlt
faddl
add
pusha
test
sub
inc
and
or
add
or
dec
and
daa
xchg
lret
push
iret
add
jne
je
int3
lea
repz
lahf
sbb
pop
lock
jne
add
cmc
cmp
and
jmp
stc
pop
push
imul
pop
adc
add
cmc
lret
add
ja
adc
adcl
sbb
xchg
test
aaa
mov
mov
sbb
add
add
mov
lea
cmp
mov
mov
fidivl
jae
add
add
fdivr
daa
shl
outsl
addr16
lea
loope
loopne
add
lahf
jb
xor
xchg
adc
sub
dec
loopne
add
ljmp
sub
push
adc
add
sub
addr16
aaa
lahf
aas
aas
aad
fwait
aaa
aaa
ljmp
xchg
out
adc
cmp
cmpsl
add
repz
rcrb
in
icebp
inc
in
add
xchg
loope
xchg
mov
mov
shlb
xchg
sub
fwait
add
add
clc
cmc
cltd
adc
in
jnp
mov
pop
jae
leave
add
imul
jl
sub
add
mov
insb
stos
cmp
xchg
push
and
out
push
out
jp
nop
jbe
jle,pn
add
xorb
and
lods
dec
mov
iret
adc
or
add
add
dec
dec
sbb
aaa
imul
add
jp
popa
fwait
jge
int3
dec
pop
add
add
addr16
inc
std
adc
adc
movsl
jb
mov
faddl
xchg
jg
aad
fstps
or
pop
add
dec
dec
and
nop
xlat
add
aaa
in
jns
jo
add
add
ss
sbb
and
cmc
or
inc
daa
pop
jle
pusha
jne
out
dec
dec
std
inc
pop
iret
add
add
pop
xchg
jge
inc
mov
jae
mov
sbb
add
adc
inc
lea
movsl
jle
aas
push
test
add
mov
pop
mov
adc
xchg
aas
jo
adc
add
pop
mov
repnz
cmovo
fs
cmpsb
add
inc
xor
push
pop
xor
add
add
cmp
xor
dec
in
push
scas
lret
jecxz
sbb
movsl
stos
adc
sahf
push
add
pop
xchg
stos
adc
into
jnp
xchg
pop
inc
ret
clc
lds
pop
sbb
sbb
ds
xor
add
add
into
pop
add
add
push
pop
sbb
inc
push
jae
pop
add
ss
add
add
sbb
add
inc
jp
insb
inc
add
push
cmp
add
mov
or
fsubs
fisubrl
inc
and
rolb
sbb
and
jge
dec
jmp
ret
inc
pop
notb
shll
shlb
ret
daa
adc
and
scas
add
add
and
mov
je
add
xor
adcl
repnz
imul
jge
mov
pop
stc
fildll
imul
shlb
mov
push
mov
and
pop
lret
mov
adc
mov
inc
aas
add
sbb
cwtl
jae
mov
cmpsl
ret
pop
sbb
add
add
fisubl
sbb
pusha
fidivl
push
addr16
pop
xchg
sbb
inc
fs
add
jno
adc
add
fwait
inc
push
sbb
inc
insl
jae
pop
insb
sub
adc
ja
adc
adc
jns
or
bound
push
push
jno
adc
dec
add
fs
stos
inc
xor
xor
stos
add
xor
popa
pop
aaa
shrb
jno
xor
sub
adc
jp
adc
xor
pusha
cmp
mov
adc
roll
add
rclb
adc
adc
lds
lret
popa
push
lret
push
add
cmovne
cmp
add
add
inc
add
sub
mov
into
inc
xchg
sbb
xchg
and
jl
cmp
xchg
loop
ret
add
pushf
and
jno
pop
rcl
fcmovbe
inc
xlat
ja
jnp
cmc
inc
sbb
add
add
pop
fcmovu
fcmovu
inc
fbstp
sbb
sub
xor
push
ss
ret
imul
inc
shll
add
push
dec
adc
and
ja
scas
xchg
and
pop
popa
sbb
leave
dec
push
es
and
lret
xor
int3
inc
add
enter
insb
fldt
ret
sub
jns
fimuls
fwait
dec
add
jne
cmp
or
jge
sub
add
jg
imul
or
out
cltd
dec
in
loope
in
sbb
add
mov
and
ljmp
pop
ds
push
scas
daa
outsb
out
pop
jecxz
jecxz
cltd
add
add
or
jno
fadds
mov
pop
dec
call
int
nop
cmp
xchg
testb
add
icebp
test
out
dec
xchg
hlt
mov
inc
daa
in
inc
mov
jns
adc
imul
add
jo
scas
jno
inc
shr
push
pop
popa
pop
faddl
stc
js
mov
add
aad
adc
mov
inc
and
subb
repnz
dec
movsl
fidivl
fwait
push
add
add
stos
pop
dec
fistpl
stos
fnstsw
js
addb
loop
lret
jne
flds
sbbb
aad
jns
js
adcb
mov
add
ljmp
rcrb
popa
or
lea
add
orb
outsb
dec
adc
pop
add
add
pop
pop
fsubs
mov
inc
jmp
mov
jne
ret
cmp
mov
push
pop
cmp
or
add
add
mov
jge
sub
push
daa
pop
mov
and
mov
rorl
inc
mov
mov
sub
or
xchg
mov
jno
pop
inc
mov
add
add
mov
mov
xchg
mov
sbb
mov
xchg
push
add
pop
push
push
ja
dec
push
or
jmp
imul
in
pop
jnp
subb
mov
inc
mov
jno
pop
push
sahf
add
test
and
adc
sbb
inc
add
aam
dec
adc
add
popa
cmpsl
push
jl
addl
pop
das
mov
inc
add
add
jns
loop
mov
push
sbb
cld
push
dec
jae
xchg
add
add
cmpsb
inc
sbb
pop
add
popa
rcrl
in
popf
mov
add
add
or
add
in
push
cmp
sbb
repnz
inc
jecxz
adc
stos
stos
mov
add
hlt
adc
and
icebp
pop
fcomps
cmc
pop
fiaddl
add
mov
sub
mov
sbb
sbb
nop
lea
inc
mull
xchg
loop
int3
jnp
jb
arpl
xchg
aad
add
add
sbb
mov
dec
mov
aam
adc
test
pop
fistpll
cli
lods
mov
push
inc
scas
push
dec
add
scas
and
in
fadds
out
scas
in
movsl
cmp
cmp
mov
adc
les
adc
sbb
push
cwtl
push
add
inc
fsubl
push
sarl
add
lret
mov
fwait
xchg
repnz
addr16
aaa
jecxz
pop
jge
fsubrl
pop
adc
add
add
repz
rol
pop
test
jbe
mov
clc
and
mov
add
add
rcr
pop
push
pop
push
rcr
daa
jle
repnz
push
pop
je
sbb
jne
or
or
rclb
pop
push
dec
jno
push
lock
push
sarl
push
jle
dec
popl
and
adc
sti
gs
es
mov
or
add
pop
ja
test
lahf
testb
imul
iret
xchg
push
das
and
mull
jg
xchg
push
popa
aaa
std
cs
dec
in
aaa
fsubrl
jb
sub
mov
add
sbb
outsl
xchg
aad
out
in
push
jne
aaa
push
xor
pop
cmp
pop
xchg
into
nop
test
sbb
pop
ja
add
hlt
add
inc
lods
add
and
addr16
add
inc
jp
xchg
ja
pop
cmp
xchg
jb
jb
cmc
sub
lahf
popa
jmp
adc
xchg
imul
or
aad
add
xchg
add
int
or
and
cmp
inc
pusha
ret
jge
aaa
aas
fdiv
adc
bound
add
add
add
xor
daa
js
jge
ja
sbb
aas
mov
adc
mov
syscall
lret
adc
add
lock
cmp
lret
leave
scas
enter
into
and
and
add
add
ss
sahf
cwtl
pop
lahf
sub
ficompl
adc
add
inc
fsubrp
lret
cs
inc
xchg
jno
xchg
pop
nop
xchg
add
xor
mov
shrb
ret
sub
jno
rcll
sarb
jae
push
aas
or
xor
es
xlat
ljmp
cwtl
adc
rcrl
sbb
js
repz
jo
rcrb
out
int3
cmp
repnz
add
xor
add
cmp
push
repnz
adc
rcrb
lods
add
add
xchg
inc
das
push
push
dec
mov
jnp
stos
mov
push
aaa
dec
mov
cmpsl
jns
push
mov
add
or
pop
add
push
adc
fwait
sbb
fcomp
push
push
add
add
movsb
mov
inc
jnp
into
rclb
jp
and
push
mov
add
imul
pop
lret
sbb
add
pusha
jnp
mov
push
nop
add
add
cmp
fwait
in
imul
add
out
push
outsb
push
jle
add
or
daa
sub
push
cs
bound
add
add
adc
mov
inc
andl
add
add
push
iret
dec
movsb
add
push
xchg
repz
jnp
pop
pop
xchg
inc
mov
add
xchg
dec
insb
push
push
es
das
add
xchg
sub
fldl2e
and
call
cmp
adc
and
push
add
adc
push
dec
pop
js
aad
jl
aas
jne
sbb
mov
add
add
pop
mov
mov
shrb
jae
cmp
ficoms
stos
or
adc
rcrb
add
xchg
pop
xchg
idiv
mov
add
lret
jae
arpl
xlat
push
fldt
repnz
push
shr
imul
push
jge
bnd
pop
dec
hlt
push
loopne
cmp
add
lods
push
inc
psubb
xor
pop
mov
mov
push
je
in
inc
add
push
imul
jp
add
sarb
imul
dec
sub
js
sarb
lods
add
push
jle
lret
test
inc
push
fiadds
loopne
add
adcl
shlb
mov
mov
int
add
icebp
sub
mov
adc
add
out
fmulp
mov
add
movl
adc
cmp
sbb
jmp
xchg
xor
add
xchg
add
jne
rclb
inc
bound
add
or
dec
pop
mov
nop
movsb
rep
addr16
push
mov
pushw
clc
inc
xor
pop
daa
pop
mov
clts
add
bound
pop
inc
pop
int3
call
out
stos
add
add
int
adc
xchg
stc
aad
inc
cltd
testb
gs
scas
xorb
jle
lcall
add
push
add
aam
dec
xchg
pop
push
repnz
xor
mov
push
and
scas
sbb
inc
xchg
dec
pushf
jle
adc
add
push
stos
rolb
pop
push
stos
aaa
cmpsl
xchg
jecxz
les
sbb
xor
icebp
dec
rolb
jno
inc
out
add
and
cmp
inc
ret
pop
subl
pop
arpl
add
push
jbe
inc
lcall
stos
pop
lods
sub
rcrb
cmp
pushf
inc
gs
hlt
xlat
imul
add
ss
xor
inc
cs
fs
lods
jnp
mov
push
xchg
push
mov
in
add
add
sub
icebp
cltd
push
stos
hlt
bnd
pop
cmp
rcrb
addb
daa
mov
lahf
in
adcl
sub
addr16
jg
inc
push
pop
adc
xchg
jae
das
add
add
inc
aam
pop
cmp
or
ficoml
gs
push
dec
fsubs
inc
dec
xor
sub
add
ja
mov
pop
scas
fidivrl
mov
push
push
add
rclb
xor
inc
dec
test
popa
dec
mov
and
adc
add
cltd
rcr
sbb
jae
cmp
sbb
sbb
sbb
or
ja
and
xchg
orb
push
add
lcall
rcr
inc
add
das
les
xchg
ret
push
sbb
outsb
pop
inc
push
js
jno
add
add
pop
sbb
jne
in
mov
stos
es
xchg
popa
xor
les
push
cltd
cld
push
or
add
fildll
add
jae
loope
movsb
scas
pop
sti
xor
xchg
push
jae
sbbl
adc
sbb
mov
mov
add
pusha
xchg
lret
push
cs
gs
cmp
xor
mov
add
add
movsb
pusha
xor
mov
cld
popf
icebp
and
ficoml
call
popa
and
cld
in
nop
in
add
add
lock
adc
and
or
inc
add
push
rorb
pop
push
jne
cltd
dec
mov
mov
add
pop
push
insb
fwait
mov
scas
imul
cmp
mov
dec
push
cs
jge
movsl
or
inc
icebp
mov
push
jecxz
mov
test
add
flds
ss
dec
test
aad
pop
bnd
pushf
jle
add
js
adc
sub
cmpl
add
add
pop
add
sti
push
xchg
or
sbb
sbb
clc
ret
and
dec
cmp
add
in
mov
pop
les
add
jecxz
push
push
sub
add
add
cs
mov
aaa
jae
mov
jne
add
or
nop
dec
or
pop
call
pmullw
jg
int
lds
dec
inc
xor
mov
sbb
pop
pop
ret
add
fadds
dec
aaa
dec
mov
andb
cmp
or
addl
xlat
ja
mov
in
add
add
pop
cmpsl
test
sbb
inc
les
lahf
clc
pop
mov
jae
add
add
lods
inc
cli
pop
jmp
jns
aad
imull
or
dec
pop
ljmp
cmp
leave
pop
push
shll
push
add
jle
dec
xchg
xchg
add
add
jp
push
inc
or
or
testl
add
or
out
stos
xor
into
jp
gs
add
daa
or
adc
xchg
in
add
push
add
pushf
xchg
enter
jno
inc
jmp
int3
mov
add
fistl
dec
push
int
cmc
int3
je
out
fldcw
pop
ja
cmp
ret
xor
add
add
inc
mov
out
jb
popa
jns
cmp
loope
jp,pn
fwait
loope
dec
xchg
loop
push
sldt
push
add
inc
jbe
sbb
cmp
sahf
xchg
add
inc
cltd
aaa
mov
popa
aad
adc
test
test
insl
push
rcll
xchg
mov
gs
mov
fimull
cmpsl
sbb
jg
adc
or
repz
add
add
push
adc
iret
mov
add
inc
or
mov
push
jnp
scas
shlb
adc
add
add
or
outsl
jns
pop
jge
push
lea
ja
push
lret
stc
scas
dec
jmp
add
add
add
orb
sarl
clc
or
pop
adc
cld
and
jmp
push
rcl
mov
push
and
add
xchg
push
ja
dec
aad
xchg
addl
and
add
pop
and
fimuls
imul
stos
jb
ffreep
add
add
inc
push
jno
inc
ror
stos
adc
addr16
movsl
dec
dec
jp
mov
mov
fwait
sti
bound
add
inc
push
add
inc
dec
add
adc
pop
pop
push
pop
xchg
shll
fadd
add
or
inc
int
adc
je
mov
cmp
push
push
add
jge
ret
adc
mov
and
fisttps
add
jnp
les
mov
pop
xchg
pop
outsb
xlat
add
add
lcall
push
pop
pop
push
adc
mov
fildl
cmpsl
popf
push
xchg
adc
cmp
andb
sub
pop
in
stos
adc
sub
adcb
fdivl
adc
stos
sbb
xor
in
adc
dec
or
dec
test
inc
push
add
xor
testl
cmpsl
cmpsb
fisubrl
out
add
andb
cmp
adc
or
push
std
pop
loop
pop
add
jo
jp
adc
jmp
fcomps
or
adc
les
xchg
or
outsl
cmpsl
stos
adc
dec
mov
mov
fisttpl
mov
add
mov
inc
mov
aaa
outsb
scas
pop
pop
stc
xchg
and
sub
add
notb
xlat
mov
stos
cli
cmp
jp
scas
xor
int
sbb
add
xchg
and
sarl
jo
pop
fildll
cmc
cmp
inc
adc
jo
shll
push
cmp
aaa
sub
sbb
inc
and
add
fs
push
pop
push
iret
xorb
add
les
push
jb
lods
dec
fwait
hlt
mov
addr16
pop
mov
inc
lahf
fwait
add
sub
push
addl
mov
mov
mov
mov
add
sbb
cmp
sbb
inc
sbb
outsl
sub
pop
add
add
pop
xlat
pop
mov
daa
call
nop
ja
adc
xchg
repz
sbb
ret
out
lret
add
add
mov
add
fwait
inc
pop
lcall
clc
mov
fldt
imul
sahf
js
push
add
out
test
movsb
icebp
add
popa
arpl
pop
inc
in
int3
jp
aam
popf
movsb
stos
dec
ret
pop
add
fldt
mov
push
adc
lock
add
ss
lcall
fdivs
lods
mov
daa
dec
repz
jle
insl
mov
rolb
add
inc
ficomps
cmpsl
add
ret
pop
adc
add
push
inc
jle
loopne
xorl
mov
fstpt
or
jl
pop
jns
adc
popl
mov
xchg
pop
xchg
pop
cmpsb
sbb
add
add
sbb
fisubrl
bound
inc
aas
jp
pop
adc
je
cmp
mov
sub
mov
and
jge
bound
aas
inc
or
mov
je
jno
xchg
ljmp
push
mov
push
mov
push
and
xor
jp
sbb
mov
scas
fidivrs
mov
add
add
jno
notb
cmc
hlt
inc
cli
ja
sbb
ret
pop
std
cld
fninit
push
int3
cld
add
add
aam
out
adc
lcall
add
add
loopne
popf
xor
add
add
sbbb
cmp
xchg
mov
adc
daa
xchg
and
add
xor
cmp
jo
and
in
out
adc
cmp
add
add
jl
test
and
inc
jl
arpl
es
fists
add
xchg
xor
bound
dec
cmp
add
fcoms
insb
jo
inc
push
fildl
and
ret
and
stc
sbb
jbe
or
dec
xor
jns
jne
inc
xor
aaa
popf
and
das
xchg
ja,pn
stos
xchg
mov
ja
or
add
add
inc
and
stos
inc
and
fucomip
adc
sbb
ds
dec
adcb
loopne
fildl
cmp
jg
inc
sbbl
cmp
mov
add
adc
add
inc
ja
and
ja
jmp
add
sub
add
lea
jmp
les
ljmp
pop
out
cltd
fucomi
aaa
pop
adc
lcall
inc
sbb
xchg
pop
ret
sbb
sbb
lds
pop
adc
add
xor
cwtl
aam
pop
aas
adc
divl
das
iret
adc
sbb
ja
pop
popa
jg
shll
add
enter
arpl
jg
adc
ja
fsts
pop
addr16
ret
sbb
add
add
jnp
xchg
leave
stos
push
fstpt
clc
add
mov
cmp
mov
adc
add
add
push
insb
adc
mov
mov
hlt
inc
jae
jno
in
dec
and
sub
je
cli
add
rorb
add
add
add
je
add
xchg
xlat
test
cmp
pop
fmull
sbb
add
jg
shrb
daa
adc
pop
jbe
fcmove
and
dec
rcll
pop
pop
xlat
adc
add
add
push
fcmovne
push
inc
dec
loopne
and
add
in
push
jle
mov
mov
and
xlat
jae
inc
sbb
add
inc
xor
aad
bound
mov
jp
jb
inc
pop
jo
jmp
jno
in
add
rolb
and
je
rolb
xchg
lret
outsb
xor
add
outsb
sbb
out
orl
pshufw
mov
or
inc
push
arpl
fisttps
add
pop
xor
push
jo
add
sbb
andb
sub
and
inc
stos
sub
cmp
push
add
pop
add
push
mov
lahf
int
pushf
jb
dec
pop
cmp
inc
dec
or
add
imul
dec
cmovno
das
mov
inc
add
dec
jmp
xchg
test
jno
leave
lcall
sub
pusha
pop
or
ret
fwait
cltd
shrl
cmpl
das
push
subb
stos
lret
or
cmp
push
xchg
push
sub
add
add
push
rcrl
shll
mov
cmpsl
ret
push
andb
xchg
popa
shrb
mov
shll
push
mov
jns
xor
pop
stos
and
push
mov
fidivrl
mov
add
test
or
mov
jnp
dec
cmpl
push
cli
lock
add
das
add
test
add
adc
sarl
sbb
add
cltd
xchg
adc
and
gs
xlat
sbb
icebp
add
add
shrl
movsl
mov
or
dec
add
ret
inc
cmp
imul
aaa
add
inc
fcmovb
dec
jp
lea
rclb
pop
or
mov
lret
imul
mov
std
add
add
cwtl
stos
sbb
pop
xor
pop
or
mov
pop
sub
pmaxub
xor
add
add
xchg
sub
inc
adc
cmp
add
nop
add
out
out
shlb
jne
xor
add
add
push
xor
cmpb
mov
add
js
les
fcomps
dec
add
inc
pop
add
add
jne
add
cwtl
cmp
insb
xor
adc
andb
add
outsb
and
cmp
daa
sbb
jle
add
js
mov
jae
xor
jns
jbe
xor
pop
test
fwait
bound
add
and
mov
pop
sub
or
sahf
or
dec
add
inc
mov
stos
mull
add
dec
xchg
pop
jnp
fistl
lods
or
scas
xchg
iret
mov
mov
das
and
frstor
add
xor
daa
inc
cmp
lahf
cmp
sbb
xchg
and
addr16
jbe
xchg
xor
xchg
add
dec
cmpsl
xchg
xor
or
hlt
pop
stc
rcrl
add
add
add
jmp
mov
and
inc
shl
push
adc
je
cmpb
pop
cmp
add
notb
fwait
mul
pop
inc
dec
jmp
inc
xorb
dec
out
jnp
dec
lret
push
ret
add
pop
out
jb
addl
mov
add
add
xor
pop
jne
sarb
adc
jb
lods
inc
xchg
add
add
cmp
cmc
xor
mov
push
jns
cmp
inc
js
sbbl
add
push
inc
data16
clc
addr16
aaa
cmp
in
xchg
daa
pop
xchg
sub
mov
add
insb
js
sub
adc
add
add
aaa
loope
js
pop
inc
jb
cmp
adc
data16
jg
shlb
push
popl
add
pop
fisubl
cs
lret
dec
inc
add
dec
mov
shll
sarl
add
add
jne
inc
mov
adc
shll
stos
fcmovnbe
test
dec
scas
add
fiaddl
ret
add
shll
js
sbb
shlb
xchg
dec
xchg
add
cmp
jo
rcl
pusha
xorl
lret
cmp
popa
inc
lret
sbb
sbb
ret
repz
repnz
adc
or
add
sbb
movsl
sub
xor
cmp
fidivrl
das
mov
outsb
push
add
sbb
push
jecxz
out
inc
out
add
add
jno
pop
out
out
fcmovnbe
in
sub
adc
dec
nop
or
xchg
jl
popa
xchg
xchg
fwait
ja
sbb
push
add
sbb
inc
sbbb
das
add
xchg
test
pop
mov
bound
add
pop
outsb
fidivl
add
xchg
xchg
lgs
mov
cmp
sub
lret
cmpl
adc
daa
insb
sbb
jns
push
inc
inc
es
scas
add
mov
enter
add
add
out
inc
mov
ja
push
inc
add
add
std
imul
jg
pop
adc
or
or
add
sbb
pop
push
fwait
push
rol
les
movsb
cwtl
pop
jp
outsl
cmp
pop
outsb
pop
or
sbb
or
outsb
xchg
adc
add
add
adc
test
bound
pop
and
out
ss
inc
jl
popf
add
inc
ds
sub
jg
and
sbb
loope
push
add
or
cmp
add
out
sub
jbe
or
or
add
add
push
mov
and
mov
sbb
div
mov
xor
inc
mov
in
pop
and
push
cmp
punpckhdq
jne
pop
jo
add
orb
stos
inc
cmp
push
pop
cmpsl
aaa
pop
cmpsb
fsubs
lods
add
and
jne
insl
pop
test
add
and
add
add
aad
push
inc
push
scas
sub
aas
dec
mov
lahf
in
push
inc
lret
dec
cmp
shrb
mov
arpl
add
add
orb
mov
scas
cmpsb
addr16
sbb
add
add
or
push
es
adc
mov
faddl
add
repz
stos
mov
int
mov
aaa
adc
inc
imul
outsb
daa
aam
add
mov
loop
jnp
test
mov
push
inc
lods
adc
add
add
mov
jle
lret
sahf
mov
aas
sub
sub
cmp
add
add
es
add
leave
dec
adc
mov
and
and
pop
sbb
adc
sbb
add
iret
lock
xor
xorl
imul
inc
and
or
roll
shrl
pop
dec
in
and
arpl
add
cs
mov
mov
les
shrl
or
push
adc
stc
push
into
xor
mov
add
rcll
enter
mov
add
pop
mov
sbb
jo
dec
push
cmp
mov
stos
movsb
stos
push
inc
aam
adc
add
add
mov
and
jecxz
ficoml
xchg
pop
or
in
mov
inc
xlat
stos
xchg
lcall
pop
lods
lea
stc
fs
lods
bound
call
inc
cmpsb
mov
hlt
sub
pop
adc
rorl
jge
mul
add
add
inc
jg
and
sti
fbstp
xor
xchg
dec
push
insl
in
sarl
mov
sahf
pop
shrb
lods
pop
pop
pop
test
pusha
pop
std
dec
add
xor
xorl
mov
add
add
bound
fists
jp
inc
xor
xchg
ja
in
cmp
lret
lods
out
cmc
sbb
cwtl
push
adc
mov
dec
stos
addl
mov
mov
add
dec
adc
mov
add
fildll
pop
das
pop
js
jnp
mov
add
pop
addl
mov
push
dec
es
pop
mov
add
shlb
sbb
mov
mov
pop
xchg
push
xchg
push
push
pusha
mov
inc
outsl
mov
add
add
loope
pop
scas
icebp
cmpsl
fimull
mov
pop
inc
stos
scas
cmpsl
and
add
rolb
ss
fidivl
test
int
daa
dec
and
add
sbb
lret
jecxz
inc
popa
add
shl
adc
jb
aaa
inc
loopne
scas
add
add
test
mov
add
adc
das
pop
pop
push
nop
mov
icebp
aam
add
xor
fwait
lret
fiadds
lock
and
add
out
adc
test
pop
sahf
push
jl
add
lret
sarl
addl
sbb
and
stos
dec
ja
jle
mov
subb
test
pop
adc
addr16
add
cwtl
sbb
sbb
or
fldenv
pop
ja
mov
add
pop
sbb
test
flds
pop
adc
jae
adc
jo
push
add
add
pop
push
push
mov
adc
inc
adc
fildl
push
or
pushf
dec
pop
add
shlb
out
jl
leave
les
inc
jbe
add
add
lock
sbb
nop
cmp
jp
dec
hlt
mov
jp
push
rcll
cmpsl
rorl
xchg
pop
sbb
add
and
sbb
aaa
pop
sbb
mov
add
add
pop
push
inc
ficomps
xlat
adc
pop
xor
push
cmpsl
dec
mov
jmp
fwait
aaa
ret
add
rolb
popa
dec
lret
pop
iret
repz
ret
sti
fwait
pushl
jecxz
out
jmp
sbb
add
xchg
jb
ret
and
xor
jnp
pop
sub
add
add
mov
cltd
pop
adc
pop
fdivs
insb
mov
lret
or
or
mov
repnz
pop
add
rcrl
fisttpl
mov
add
shlb
push
addr16
arpl
fisubs
add
add
scas
push
sbb
lods
orb
push
mov
mov
inc
inc
add
sub
add
ud0
out
rcl
nop
add
add
pop
xor
ret
lods
push
daa
push
xchg
pop
push
es
add
ss
pop
add
aad
inc
inc
add
gs
pop
loop
repz
xlat
scas
rorb
add
add
gs
leave
bound
adc
movsl
adc
push
es
jbe
add
add
data16
pop
fnsave
inc
pop
mov
cltd
sub
jnp
into
sti
sbb
xchg
cmp
add
add
pop
aaa
popa
xor
pop
pop
aad
pslld
sbb
or
or
xchg
es
bound
arpl
push
jecxz
push
or
out
call
lock
push
jo
pop
xlat
xchg
ss
roll
jb
mov
push
dec
add
fisubrl
jno
jbe
cmp
pop
sbb
add
add
push
push
aas
xchg
sub
flds
testb
mov
fs
add
nop
notl
inc
inc
sub
add
sbb
pop
notb
ficomps
add
add
ss
jmp
dec
orl
nop
repnz
in
jmp
and
cwtl
gs
add
add
add
fnstcw
out
and
cmp
xor
frstor
hlt
push
mov
shrl
pop
int
std
jmp
fwait
inc
lcall
sub
add
mov
pop
jno
insl
pop
fidivl
sbb
ret
add
popf
pop
lea
pop
jg
imul
filds
subb
ja
add
pop
pop
bound
xor
aaa
sbb
sbb
cld
mov
es
das
ja
sbb
ret
jecxz
add
clc
xchg
inc
ja
sbb
pop
jno
xor
pop
mov
push
add
cmp
ja
sbb
ret
fsts
sub
ficompl
loopne
mov
lret
pop
add
rcrl
fcmove
push
inc
imul
roll
fs
push
add
pop
sarb
jo
add
push
pop
mov
dec
xchg
add
mov
push
mov
inc
add
push
pop
idivb
mov
dec
mov
inc
or
mov
flds
dec
add
xor
popf
dec
lock
pop
cmp
adc
add
pop
cmp
pop
push
jnp
mov
add
or
add
shll
emms
shll
and
inc
inc
cmp
jae
sub
and
add
ret
and
and
popf
fwait
jp
stos
dec
insl
add
add
lret
add
cmp
aas
sti
sub
adc
sub
mov
push
cmpsb
or
add
stos
and
push
out
add
dec
loopne
nop
and
sub
repz
adc
sbb
cmp
add
jo
daa
adc
and
xor
jle
imul
add
cmp
xor
add
cmpb
adc
dec
push
push
cmp
es
adc
lods
loope
pop
add
add
sbb
aaa
outsb
out
or
inc
dec
rolb
cmp
pop
add
in
addb
mov
xor
pop
add
add
addr16
in
xchg
adc
sbb
adc
sub
sub
cmpsb
jno
insb
pop
mov
sahf
or
loop
pop
fildll
add
cmp
inc
add
cmp
push
add
mov
faddl
cltd
sub
add
add
adc
pop
push
pop
adc
fnstsw
dec
add
add
sub
push
and
add
add
popa
jge
sub
jno
mov
push
mov
adc
dec
adc
or
inc
pop
dec
add
inc
add
add
add
popf
adc
adc
sti
adc
sub
dec
inc
xor
sub
mov
add
clc
pop
adc
inc
or
sub
scas
lods
andl
add
popa
leave
cmp
insl
cli
inc
and
stos
xor
sarl
mov
xor
cmp
gs
stos
add
addr16
aad
add
and
pop
xor
add
add
aad
and
adc
or
inc
imul
shrb
and
das
aam
aam
cmp
cmpsb
xor
xchg
or
cmp
xor
cmp
pop
mov
push
lock
pop
push
push
add
push
fs
in
xchg
sbb
add
add
movsl
mov
jecxz
out
sbb
add
xor
popa
sbb
js
dec
pop
pusha
inc
add
into
daa
loope
fnstenv
inc
add
loop
sbb
add
add
addr16
dec
cmp
sbb
mov
ficoms
xor
lret
sbb
add
sub
in
pop
ss
inc
pop
xchg
sbb
cmp
jmp
into
lea
cmc
mov
cmp
pop
xor
add
add
sbb
pop
int
ret
pop
and
imul
out
xor
add
add
sbb
add
pop
adc
add
inc
adc
hlt
adc
adc
or
pop
and
push
inc
add
add
add
xor
repz
cmp
pop
jne
shlb
dec
jb
push
sbb
out
mov
add
and
es
sub
sbb
mov
add
jno
movsl
sbb
negl
or
xchg
aaa
push
orb
fadds
pcmpeqd
jno
sbb
add
add
cs
push
mov
dec
scas
adc
push
ret
jae
fwait
pop
mov
push
push
mov
push
aaa
add
add
inc
pop
dec
xchg
mov
pop
xor
push
jp
imul
or
loope
enter
adc
push
cmp
fstl
add
mov
inc
mov
jae
or
push
mov
dec
push
enter
add
dec
add
xchg
pop
adc
adc
adc
jl
add
sbb
pop
pop
or
cmpsl
sub
ja
add
cmc
push
dec
xlat
in
subl
sbb
ret
orb
and
xor
fstpl
add
add
push
mov
xchg
scas
jbe
lds
shl
add
rorb
sub
jge
cwtl
jbe,pt
cmp
sbb
fs
arpl
xor
add
add
pop
dec
sbb
mov
sbb
dec
jge
popf
cmp
mulb
and
add
gs
cmp
and
imul
fsubl
xor
push
inc
cmc
adc
add
mov
test
stc
inc
mov
adcl
push
push
fwait
cwtl
push
or
add
xchg
mov
mov
xchg
jmp
in
add
add
mov
xchg
test
mov
xchg
sahf
stos
ja
or
cltd
xchg
pusha
in
add
add
in
ficomps
adc
pop
out
in
mov
test
lods
sbb
scas
xchg
test
add
add
mov
jp
mov
lcall
add
inc
xchg
hlt
add
mov
nop
cwtl
inc
jecxz
out
xchg
adcb
pusha
pop
or
xchg
push
and
inc
xchg
add
add
xorb
dec
out
mov
in
jmp
testb
test
add
push
in
call
and
push
xchg
stos
js
mov
add
add
push
fcompl
pop
mov
cmpsl
jg
repnz
inc
out
cwtl
add
inc
cmp
popf
or
inc
loope,pt
dec
pop
and
jp
xchg
fnstsw
sub
add
adc
xchg
cmpsl
sbb
add
mov
mov
inc
xchg
cmp
push
imul
stos
rcl
popf
mov
or
test
jnp
mov
mov
sbbl
pop
xchg
aad
sti
pop
push
lcall
addr16
pop
outsl
pop
adc
add
add
jecxz
popf
jg
xchg
mov
push
sahf
lods
inc
mov
lret
sbb
sub
jmp
roll
clc
cmc
ja
idiv
into
jns
in
arpl
xchg
sub
loop
leave
add
add
data16
btc
andl
pop
mov
mov
mov
andl
or
arpl
repnz
adc
popa
inc
jl
jbe
arpl
inc
pop
adc
lea
cmp
xor
or
jo
add
aaa
pop
mov
dec
dec
jns
inc
sbb
pop
push
add
in
or
jmp
jg
sbb
mov
add
addb
sub
sub
dec
sub
fistl
clc
dec
pop
and
roll
add
push
inc
stos
pop
mov
pop
inc
pop
lahf
movsb
ljmp
add
faddl
pop
es
sub
sbb
fsubrl
rolb
and
add
add
pop
hlt
sbb
fsub
pushf
mov
rcr
or
fnsave
sub
add
cmp
stos
lahf
scas
inc
push
sbb
pop
dec
gs
xor
fstps
rorb
dec
add
add
shlb
loopne
nop
adc
cmp
andl
inc
push
add
add
jb
or
outsl
out
in
pop
push
imul
cld
pop
jmp
push
popa
in
add
add
or
pushf
and
pushf
rcrb
call
loopne
pushf
lea
nop
push
outsl
pop
rolb
loopne
nop
addb
sbb
pushf
sub
pushf
out
pushf
add
xchg
mov
shlb
loopne
nop
adc
add
or
sub
iret
mov
in
sub
mov
mov
mov
pop
insl
jnp
bound
lcall
sbb
add
scas
push
push
sbb
push
stos
or
sarb
sbb
cmp
add
sbb
fcoml
lcall
bound
dec
xorb
insl
push
pop
ja
pop
insb
insb
and
int
jecxz
or
mov
popa
push
mov
pusha
inc
loope
call
aas
xchg
addb
add
mov
mov
jl
fs
mov
stos
es
shrl
scas
push
imulb
push
loopne
jmp
in
insl
xchg
insb
xchg
mov
gs
sbb
xor
xor
add
ret
pushf
repz
sti
pushf
jmp
in
pushf
xchg
nop
sahf
fs
lock
jecxz
imul
mov
nop
add
pop
xchg
sbb
mov
push
add
lret
pop
into
adc
ljmp
add
add
into
mov
pusha
int
adc
xorb
hlt
xchg
and
icebp
dec
add
add
js
cmp
jp
adc
pop
xor
rcrb
sbb
dec
pop
push
cltd
jmp
add
mov
es
mov
mov
push
add
mov
loop
push
out
push
push
bound
dec
mov
add
add
adc
mov
dec
push
gs
into
add
xchg
outsb
mov
insb
mov
add
mov
fs
popa
pushf
outsb
pop
sbb
fdivl
and
fistps
pushf
clc
hlt
cmp
imul
xorb
cmp
add
add
dec
and
sbb
push
sub
das
sub
sahf
push
mov
add
jae
je
xor
jge
sti
mov
mov
outsb
or
push
pop
insl
insb
mov
pusha
mov
mov
add
push
out
lds
lcall
mov
pop
pusha
and
add
add
and
fcompl
cmc
xchg
insb
mov
stos
or
jns
xchg
sbb
dec
pop
inc
dec
gs
xorb
cmp
and
sub
out
lcall
and
jp
dec
jae
dec
push
out
sub
xchg
push
ja
xchg
jp
sub
mov
push
arpl
jae
add
add
shr
bound
popa
aas
mov
lahf
mov
addr16
mov
je
lds
add
adc
xor
aam
hlt
rcll
out
mov
mov
push
add
gs
mov
mov
mov
mov
lds
lret
aam
add
or
or
and
cmp
mov
add
ror
repz
loope
jmp
in
mov
andl
mov
lods
mov
dec
mov
lods
subb
cmp
mov
cld
push
lods
fldenv
gs
outsl
and
add
sbb
scas
or
mov
xor
int3
fcmovne
lret
int3
stc
int3
in
out
int3
xchg
int3
pushf
int3
outsb
xchg
or
mov
mov
mov
aam
imul
jge
outsb
xchg
push
mov
mov
mov
outsl
pop
pop
daa
bound
sbb
ret
sbb
faddl
call
push
add
mov
mov
mov
jg
add
add
loopnew
nop
jo
mov
push
arpl
inc
push
std
test
push
pusha
mov
lea
fcomi
jne
popa
mov
xor
sub
add
cmpl
je
add
pusha
test
push
mov
mov
mov
push
mov
nop
int
popa
je
add
call
add
add
pop
add
sbbb
add
add
add
add
add
add
addb
add
add
add
dec
add
add
push
add
add
add
add
push
add
mov
mov
add
mov
add
mov
add
add
add
add
add
add
add
ljmp
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fsts
dec
mov
int3
insb
adc
add
imul
cmp
cwtl
negl
add
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
mov
mov
inc
xchg
sub
shll
ret
loope
add
les
xor
ret
xchg
add
cmp
mov
aaa
jo
or
push
pop
add
mov
jle
shlb
mov
add
cmp
mov
adc
jg
cmp
fcoml
bound
pop
sbb
neg
push
jmp
push
call
adc
mov
mov
add
pusha
or
add
mov
mov
mov
add
lea
sbb
lods
stos
nop
cmpl
je
mov
test
je
mov
cwtl
mov
add
cmp
test
repz
lcall
add
lea
leave
or
inc
nop
outsl
inc
jb
mov
mov
iret
ret
push
push
aaa
ret
or
test
idivb
add
outsl
add
test
push
add
add
sub
test
je
mov
push
inc
push
fs
loopne
jnp
xchg
stos
sbb
scas
jne
loopne
cltd
cmp
sub
je
push
and
jg
lea
push
mov
pop
dec
add
in
or
enter
popf
push
rcrb
movsb
insl
loope
push
stos
je
arpl
dec
push
test
jp
add
inc
or
dec
inc
mov
int3
fcom
add
test
add
mov
cld
push
call
test
mov
and
or
add
xchg
pop
pop
ret
push
mov
add
add
push
cmc
pop
sub
fisttps
lret
push
call
mov
add
jle
add
roll
sti
xor
add
je
push
mov
add
loopne
cs
jne
xor
add
add
jmp
add
jne
pop
fwait
jno
leave
jge
fldl
or
dec
and
add
push
or
pop
add
data16
iret
mov
mov
jmp
or
into
stos
cltd
call
aas
fimull
imul
or
js
movsb
push
jmp
int
xorb
inc
adc
jne
test
filds
cld
add
add
pop
adc
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
adc
inc
sub
jne
shr
rol
xchg
pop
jle
fldl
add
add
std
adc
adc
xor
push
xor
jmp
inc
sbb
pop
push
add
or
clc
sub
pushw
adc
add
push
push
call
adc
xor
push
and
pushl
daa
cmp
popf
push
mov
mov
xor
cmp
sar
rep
rcrl
add
xchg
push
ret
shrl
out
stos
pop
cmp
mov
fsubrs
lret
jne
es
inc
sbb
fldl
xchg
add
push
push
push
adc
pop
cmp
pop
xor
in
and
imulb
enter
lcall
sub
repnz
mov
mov
gs
push
or
dec
mov
push
je
push
add
pop
cmp
in
call
mov
inc
je
pop
adc
cmp
aam
mov
and
pop
pusha
sub
pop
cli
cmp
jne
jmp
aas
mov
arpl
seto
loopne
sub
iret
mov
mov
out
enter
mov
push
movsb
mov
stos
sbb
mov
je
adcb
inc
dec
ss
jge
frstor
add
enter
push
push
call
mov
push
cmpsb
imul
adc
lds
jbe
scas
jno
bound
sbb
sahf
or
mov
scas
testb
xchg
out
test
cltd
call
mov
dec
cwtl
xchg
cmp
nop
push
pop
jae
dec
jne
insb
out
aam
adc
sbb
cmpb
imul
mov
test
fs
cmp
mov
inc
push
test
or
jmp
push
mov
nop
inc
lods
xor
sbb
inc
inc
pop
mov
test
add
aam
popf
jmp
fsubrp
insl
ret
test
ja
pushf
inc
cmp
sub
mov
push
or
push
push
scas
fwait
jno
or
sub
int
xchg
and
inc
cmp
adc
jl
sbb
shr
rclb
clc
loope
push
lea
add
sti
push
pop
cmpb
pop
test
sub
mov
pop
out
scas
mov
cltd
xchg
cltd
idivb
jne
cmp
jno
or
cmp
add
insb
imul
and
jb
jb
pop
add
sub
jb
jo
add
and
nop
sub
arpl
jne
and
pusha
jne
and
je
bound
loop
in
and
rcll
mov
test
sub
popa
insb
fsubs
add
xor
push
add
divb
xor
add
jae
popa
addr16
flds
gs
outsl
js
add
subb
je
imul
sarl
imul
inc
push
xlat
add
insb
add
outsb
inc
gs
lds
std
jge
insb
push
imul
mov
sbb
inc
arpl
cmp
out
mov
mov
jmp
mov
dec
jp
popa
or
pushf
movsl
sbb
adc
add
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
mov
add
add
mov
add
add
jl
add
add
inc
add
add
je
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
