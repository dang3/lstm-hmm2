out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
inc
push
push
push
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
push
sbb
push
adc
fwait
out
mov
add
add
je
add
jle
out
add
jae
test
push
sti
mov
mov
fs
add
adc
and
out
dec
push
imul
sti
jbe
mov
push
inc
sbb
dec
loopne
and
add
or
pop
mov
and
test
fiadds
add
in
int3
and
push
xor
pop
mov
sahf
or
dec
pop
mov
shll
mov
push
hlt
add
bound
lret
add
push
xlat
push
add
sub
popa
je
sub
in
jbe
lock
xor
loopne
inc
push
push
pop
mov
push
shlb
jp
arpl
xor
data16
loope
frstor
jb,pn
insb
outsl
arpl
sti
add
test
xchg
xor
inc
mull
mov
shrl
add
mov
imul
test
xor
push
ds
cmpsb
inc
push
inc
sahf
and
dec
shll
je
xor
shll
movsb
mov
shrb
shl
repnz
sahf
cli
or
sbb
dec
pop
dec
shll
lods
enter
xor
ljmp
cmpsb
imul
rcl
xor
rol
mov
test
mov
mov
shll
shlb
mov
pop
mov
imul
mov
pushf
movsb
mov
lcall
loopne
hlt
mov
mov
cld
push
mov
dec
idivl
add
mov
dec
shll
pushf
nop
test
mov
das
mov
call
cmp
outsb
add
xor
adc
mov
inc
mov
verw
pusha
test
je
jb
gs
xchg
mov
pop
lds
push
gs
fs
sub
jo
incl
dec
jo
outsb
push
jb
inc
adc
jg
push
sub
dec
dec
inc
push
and
mov
sbb
ss
or
in
int
add
sahf
in
adc
sbb
pusha
add
add
sub
jnp
push
pop
pop
add
adc
add
add
pop
dec
cmpsb
and
flds
lret
and
test
and
and
add
mov
fnstenv
aas
adc
stos
mov
xchg
add
pop
roll
incl
xchg
pop
fsubr
and
add
inc
fldcw
adc
add
xchg
inc
mov
mov
xchg
pop
mov
sub
pop
add
push
enter
xchg
stos
pop
sbb
and
cli
mov
pop
xor
ud2
push
add
sti
or
add
jae
push
lds
add
jb
gs
sbb
jmp
js
push
sub
add
fdivr
jg
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
addr16
xor
push
xchg
mov
call
call
cli
je
sub
or
push
lea
jmp
hlt
fmul
xchg
or
ljmp
imul
data16
push
push
lret
dec
je
jo
incl
stos
lahf
jno
gs
inc
js
push
test
fiadds
outsl
je
lods
push
jns
mov
pop
push
mov
outsb
sub
add
mov
fdivp
adc
jne
add
jb
aas
add
pop
add
jle
jb
arpl
popa
insl
pop
push
dec
inc
xor
jg
lea
outsl
data16
cmpsb
outsl
ja
and
mov
jbe
pop
inc
jne
jb
je
xor
pop
dec
mov
cld
std
jb
inc
popa
jb
pop
addr16
arpl
dec
adcb
push
push
lea
and
push
and
mov
lea
fs
or
daa
jg
ret
push
add
push
cwtl
cmp
adc
insb
or
sbb
mov
pusha
jmp
xchg
mov
pop
addr16
or
sbb
cs
pop
add
into
mov
stos
xor
push
bound
mov
addb
push
pop
push
leave
lahf
lret
pop
jnp
xchg
dec
dec
dec
inc
jns
fistpl
test
sbb
pop
pop
jb
push
mov
loop
fistpll
in
sbb
pushf
fstpl
push
add
sti
pop
jg
in
push
push
push
and
mov
and
push
push
push
mov
cmp
inc
add
push
push
mov
push
mov
outsl
mov
sbb
rorl
call
loope
flds
loopne
inc
in
push
push
call
in
add
std
in
lcall
mov
sub
sub
mov
movb
inc
or
movb
or
push
push
xor
add
imul
orl
or
mov
lock
cmp
push
mov
jae
fcmovnu
jne
or
or
mov
fbstp
pcmpeqd
mov
es
call
fucomi
and
lcall
push
movzbl
rorl
insb
jae
cs
adc
mov
andb
mov
push
add
xor
aas
sbb
cmp
in
data16
adc
mov
mov
nop
mov
mov
test
jne
ret
cmpw
jne
mov
add
cmpl
jl
add
xchg
adc
adc
and
add
adc
sub
and
xchg
pop
jae
hlt
setno
cmp
or
sbb
test
push
push
or
in
jg
sbb
call
mov
cmp
jg
add
jge
push
push
lods
fistpl
ficoms
sbb
aas
movups
push
push
and
sbb
xchg
or
jbe
adc
dec
mov
pop
sbb
sub
fiadds
call
push
or
and
outsb
cwtl
decl
pusha
ljmp
push
or
movsw
mov
cmp
repnz
movsb
mov
jo
mov
mov
rep
jb
jge
mov
int
dec
dec
mov
or
or
or
mov
fsubl
push
aam
xor
or
incb
cmp
ja
jmp
sbb
pop
clc
fcomps
gs
inc
push
idivl
jbe
orl
daa
add
push
inc
clc
push
cmp
repz
push
sub
or
jb
mov
pop
mov
add
enter
and
pusha
xor
adc
insb
scas
adc
or
insb
mov
xchg
or
and
call
pop
mov
orb
js
jnp
cmp
pop
jmp
adc
fsub
cmp
pop
jo
loope
ret
xchg
pop
push
ret
idivb
loope
or
jle
xor
cmp
jle
clc
lea
pushl
jno
cmp
ja
shr
clc
or
je
test
cmp
lock
outsl
push
inc
hlt
mov
push
in
jne
cmpl
daa
incl
mov
cmp
jne
or
inc
push
inc
clc
xor
pushl
jmp
andl
inc
add
cmp
leave
jno
jl
inc
cmp
mov
fdivrs
fcoms
jmp
sub
mov
push
and
pop
jbe
xor
adc
lcall
push
data16
ja
jne
cmpw
ja
dec
jmp
sbb
shl
mov
xchg
in
in
ret
mov
cmp
mov
aaa
ret
add
mov
mov
test
push
and
pushf
jge
xor
loope
push
jmp
adc
insl
sti
addl
add
sbb
call
clc
insl
or
xchg
insl
mov
iret
fucomi
mov
inc
idiv
adc
jg
pop
pop
sbb
in
aaa
clc
inc
jmp
andb
add
add
shl
fs
add
enter
test
adc
test
dec
pusha
inc
stos
mov
and
insb
cmp
scas
rclb
adc
or
pop
faddl
stc
and
jl
and
sbb
insl
repnz
xor
adc
clc
cmp
cmp
jecxz
mov
fs
ja
xor
dec
jbe
cmpb
clc
pushl
es
movb
inc
cmp
jb
mov
inc
decl
add
andl
push
or
sti
shrl
ja
xor
adc
jo
out
outsb
add
push
add
fmuls
or
fs
cmp
jecxz
push
fstpt
filds
cmp
loopne
cmp
jae
incl
lret
loopne
mov
shr
add
imul
mov
dec
or
fcmovnb
or
lods
or
inc
mov
mov
jne
rol
inc
loope
lahf
sbb
pop
imull
jg
mov
mov
add
loop
or
adc
or
jl,pn
mov
lds
jne
cmp
push
cs
pop
pop
jbe
push
add
pop
decl
stos
pop
fwait
xorl
bound
fbstp
jbe
or
cmp
sti
not
and
mov
mov
push
jl
and
or
add
lea
and
shr
shl
or
mov
add
mov
and
not
and
testl
outsl
lock
push
mov
and
shr
shl
push
js
add
push
mov
outsb
jnp
mov
or
fisubs
fimull
add
stc
outsl
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
pop
sub
lods
inc
sub
mov
and
not
cmp
lods
std
out
add
repz
mov
jne
push
shr
or
add
dec
daa
pop
jg
push
outsl
sub
xchg
sbb
mov
push
lods
fistps
xchg
loop
mov
push
push
adc
not
and
sbb
and
insl
mov
inc
mov
fidivl
pushf
loope
sbb
xlat
loopne
fiaddl
fcmove
outsl
lods
adc
sbb
inc
xor
scas
roll
mov
test
sbb
pop
int3
xor
add
add
out
ja
bnd
and
cli
sbb
imul
rolb
fcomp
cwtl
subb
jns
out
sbb
add
rcr
mov
pusha
adc
pop
scas
testl
sti
mov
pop
les
or
sub
add
idiv
fisubl
jo
add
sub
fcom
add
mov
pop
mov
pop
fyl2xp1
mov
pop
xor
out
mov
or
xor
xchg
out
nop
fmull
or
xchg
jno
std
aas
mov
cmp
push
cld
mov
sub
fidivrs
xchg
pop
imul
das
push
mov
cmpsb
pop
int
imul
inc
cmp
sub
ja
test
cmp
and
or
popa
pop
mov
lods
adc
add
or
mov
ret
pop
ja
pop
add
and
aad
aam
pop
cs
in
and
sbb
jle
idiv
add
and
jg
jge
dec
cmp
inc
rcrb
outsb
jns
or
fadds
hlt
push
mov
daa
clc
jb
repz
pop
pop
adc
repnz
sar
pusha
sbb
test
stos
mov
lret
ss
lock
call
icebp
imull
mov
xor
das
call
xlat
lods
mov
sbb
shlb
adc
sbb
mov
data16
fcmovnb
and
pop
and
cmp
pushw
clc
cmp
mov
repnz
fistpl
enter
jg
mov
fcmove
or
add
fwait
aaa
pop
fidivl
and
sbb
loopne
fistl
popl
add
pop
aaa
or
movsl
imul
mov
push
fbstp
xchg
mov
cltd
xlat
sbb
mov
sub
cmp
gs
fwait
aaa
or
call
inc
loop
insl
adc
or
xlat
fdivs
faddl
sbb
xorb
cld
xor
enter
in
in
stos
daa
sub
aad
flds
outsl
adc
cmp
xchg
dec
fists
les
mov
adc
js
jge
or
xor
test
mov
sbb
test
xor
mov
call
divb
adc
xor
cs
js
lds
popa
popf
insl
adc
inc
sti
xor
mov
jns
jno
repnz
or
in
mov
sub
divl
mov
inc
inc
ljmp
xchg
sbb
xchg
mov
push
adc
cltd
jb
xchg
mov
outsb
repz
pusha
mov
ffreep
dec
mov
cli
xor
rcrb
mov
xchg
mov
jae
or
mov
repnz
cli
xor
jle
sub
int
in
testl
imul
js
pusha
jp
mov
mov
fidivl
lods
xor
test
out
aam
xchg
jae
test
out
sub
xor
add
add
xchg
lods
mov
or
push
aas
sbb
cmp
into
sub
fstps
push
in
loop
les
in
jle
ja
jns
out
idiv
ss
in
clc
jl
pop
insb
cmp
pushl
in
jnp
xlat
or
aam
gs
lods
les
mov
jne
cli
mov
mov
js
xorl
and
stos
rcrb
fucomi
jp
sbb
push
or
in
sbb
jl
stc
test
inc
int3
or
inc
push
es
xchg
or
mov
jns
and
int
mov
mov
mov
cltd
or
cmp
fcmovnbe
mov
ret
pop
pop
gs
sub
xchg
in
push
rcrl
jns
lock
int3
or
push
or
ja
jno
dec
mov
in
jge,pt
out
call
unpckhps
sbb
adc
rcrl
test
sub
jmp
dec
xor
xchg
fstpt
test
jecxz
jp
mov
add
xor
mov
loopne
sub
jecxz
jp
ret
xor
mov
add
or
ja
mov
fwait
mov
lds
jp
mov
lea
mov
xor
lcall
mov
mov
outsl
xchg
ret
rcl
sub
pandn
repnz
repz
rclb
pop
jecxz
mov
push
dec
mov
pop
jge
push
insl
jmp
push
add
movsb
mov
scas
push
loope
xor
addl
mov
cmp
mov
or
cmp
jl
js
sub
inc
aaa
jb
push
push
push
testb
lcall
inc
outsb
dec
push
insb
js
adc
sub
xlat
pop
fisubrl
jle
outsb
mov
inc
pop
inc
loope
insl
dec
addr16
iret
jb
adc
out
pop
into
ljmp
add
sbb
inc
ja
add
push
dec
jne
xchg
imul
add
push
rorl
adc
cwtl
out
push
dec
imul
lock
inc
push
fmuls
ja
sub
jmp
cli
sbb
lret
add
stos
cmp
cmp
cmp
xor
sub
int
in
int
xor
pop
mov
push
xchg
cli
mov
cld
call
sub
fwait
or
scas
pop
pusha
mov
dec
cmp
jb
jmp
imul
lea
ret
pop
int
xor
js
xor
pop
adc
xchg
mov
fmul
lods
mov
push
loopne
pop
int3
shlb
mov
call
push
loopne
cmpsb
pop
dec
std
call
mov
imul
push
or
ds
ljmp
iret
out
repz
jo
hlt
gs
addr16
ljmp
mov
mov
fisttps
mov
dec
add
or
call
out
mov
ret
push
insb
int
push
cmp
fcmovnb
inc
mov
inc
lods
outsb
ret
je
pusha
rcr
mov
fmull
inc
push
pop
outsb
push
add
ds
pusha
loopne
push
dec
xchg
in
add
in
push
push
movb
xchg
fildl
dec
out
push
out
push
lock
push
fdivrs
icebp
inc
repnz
mov
mov
push
jp
shlb
push
push
lret
data16
add
xchg
push
aam
sub
insl
and
hlt
or
push
pop
add
and
or
inc
sub
lret
cmp
and
jnp
call
jge
or
sbb
in
push
push
add
dec
clc
push
add
dec
pop
inc
pop
stc
cwtl
in
add
cmp
int
mov
xor
test
and
push
imul
jle
f2xm1
cld
das
sub
push
cmp
cmp
insl
lods
jo
adc
push
adc
out
movhps
mov
lea
test
lcall
or
push
jmp
mov
loopne
push
push
mov
pop
lock
adc
adc
mov
jl
std
or
cwtl
popa
and
mov
subl
and
xor
jb
sbb
inc
sbb
in
mov
xor
sbb
pop
leave
dec
rolb
jle
lock
hlt
push
shlb
push
and
push
pop
call
mov
sbb
and
inc
inc
inc
jp
ficoml
mov
jb
mov
push
jl
pop
cmp
jne
icebp
add
mov
adc
jmp
add
pop
insb
inc
rorl
adc
andl
mov
into
popf
jg
insl
add
into
subb
pop
jb
bound
mov
lahf
push
push
movsl
adc
cmp
out
clc
xrelease
out
subb
lods
jae
cmp
je
dec
dec
pop
cmp
pop
push
arpl
inc
add
cmp
das
fsubrl
xchg
push
add
cmpsb
ret
push
sbb
xchg
push
mov
push
sub
or
cmp
ljmp
cmp
test
movl
mov
into
dec
popf
inc
sub
inc
add
sahf
sbb
mov
mov
adc
push
adcb
cwtl
int
sub
xchg
jo
clc
sbb
sbb
cmp
sar
push
call
pop
lcall
add
adc
adc
clc
inc
push
outsb
call
loopne
cmp
jbe
or
mov
xor
add
repz
orb
movsl
dec
mov
pop
movl
push
inc
call
and
or
xor
or
or
push
je
js
out
ss
jne
dec
or
inc
add
je
cmp
jne
jl
enter
outsb
aam
hlt
ss
mov
adc
jns
add
aas
stos
les
jbe
pop
stos
mov
fs
mov
and
test
ss
fcompl
or
enter
mov
jae
aaa
bnd
fsubrl
cmp
fdivl
rorl
outsl
mov
push
fsubl
ret
push
dec
je
jae
inc
jmp
les
sarb
pusha
imul
popf
mov
sbb
scas
mov
test
fisubrl
mov
xchg
push
push
push
nop
dec
inc
daa
loopne
or
mov
and
jl,pt
and
push
fs
jo
dec
mov
jne
mov
ffreep
into
and
pushl
cmp
mov
sub
fdivr
imul
out
sbb
sti
sub
mov
xor
push
fucomi
test
or
imulb
call
pushf
call
cmp
pusha
iret
xor
mov
pushf
push
mov
pop
outsl
mov
push
cwtl
neg
mov
decl
int3
cmp
mov
loope
add
mov
adc
scas
or
push
jo
mov
jo
push
popf
shll
pop
dec
xchg
data16
aaa
data16
and
std
outsl
in
outsl
xchg
xchg
in
sbb
pop
adc
pop
pop
call
mov
pop
jmp
call
mov
pop
or
cmpb
int3
sbb
je
jmp
pop
dec
mov
cld
xchg
adc
inc
insb
sarb
pop
dec
mov
aaa
and
push
cmp
call
sbb
push
test
mov
xor
push
sahf
mov
pop
push
push
pusha
stos
or
decl
pop
push
or
nop
leave
lods
jb
pop
lods
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
mov
push
fsts
rcl
js
shlb
insb
jbe
mov
aam
aad
xlat
pop
fsubrs
fsub
dec
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
fxch
or
ret
cmpsb
imul
enter
lcall
int3
hlt
xchg
push
fwait
cmpsb
jmp
xchg
xchg
mov
inc
jbe
xlat
insb
mov
pushf
adc
sub
push
mov
insb
add
test
push
test
es
cmc
div
clc
or
inc
xlat
ds
hlt
cli
jns
lea
xor
mov
jne
imul
pop
addr16
push
sub
or
sarb
xor
rcrl
cld
cmp
fisttpl
jmp
out
sub
dec
ds
aaa
jbe
mov
in
lcall
cwtl
jne
pop
xchg
nop
int
leave
xchg
xlat
xchg
adc
adc
mov
or
jg
mov
xor
sar
sub
push
inc
dec
xchg
xchg
pop
jge
sti
add
mov
jo
adc
adc
pop
shl
and
dec
out
into
imul
xor
inc
pop
cli
inc
ret
sbb
imul
test
or
push
push
int3
fisubs
fldl
scas
nop
jmp
aaa
xor
pop
sbb
das
nop
cmp
mov
adc
cmp
aas
mov
hlt
mov
nop
sti
rcrb
inc
arpl
or
dec
aaa
pop
andb
sbb
jno
and
dec
outsl
mov
mov
mov
sbb
fadds
pop
adc
fdivrs
and
or
and
inc
or
push
arpl
mov
daa
lock
mov
inc
daa
mov
sbb
cmp
or
lret
bound
dec
les
xchg
addb
outsb
pop
xor
test
aaa
or
add
jmp
push
icebp
das
aam
or
jae
rclb
ljmp
jb
or
push
mov
mov
pushf
inc
lret
add
lock
pop
aad
je
push
or
pop
daa
cmp
outsl
int
pop
mov
xor
mov
cmpsl
dec
ret
push
ljmp
xor
loop
sub
shll
adc
pop
add
fmuls
push
inc
push
jl
cwtl
ret
jne
adcl
clc
pop
push
push
movsb
insb
push
mov
sahf
mov
xchg
ror
cmp
push
add
jp
js
jnp
push
jmp
in
movl
in
std
loope
in
popf
inc
cmp
int
call
and
fsubs
cmp
add
cmp
fwait
xchg
mov
mov
cmp
bound
pusha
cmpb
xchg
nop
out
jae
mov
push
jbe
mov
and
cs
push
pushf
cld
popa
sbbb
insl
dec
lods
incl
dec
sbbb
and
mov
jle
add
inc
int
adc
cld
adc
jmp
and
fcomps
sub
call
jmp
push
add
insb
hlt
adc
or
leave
je
call
ficoms
and
data16
jle
call
fcoml
cmp
inc
pusha
xlat
fidivl
mov
mov
jnp
dec
mov
ret
insb
outsb
sarb
gs
push
int3
dec
int
jp
imul
insb
insb
popa
push
dec
mov
push
imul
imul
fidivs
cmpsb
pop
outsb
cmpsb
fbstp
xor
xor
pop
std
cli
sti
insb
mov
cld
std
insl
mov
shll
mov
mov
mov
xchg
push
mov
mov
mov
fs
shll
pop
xor
pop
mov
mov
pop
lret
in
out
pop
cs
mov
jmp
rol
jmp
lcall
jb
and
mov
jo
iret
inc
add
cli
mov
mov
mov
mov
js
inc
sbb
aam
jb
pusha
push
shrb
mov
push
xlat
pop
push
xchg
add
sbb
pop
rcrl
xor
mov
subb
in
mov
mov
scas
push
rclb
pop
adc
sub
push
mov
out
dec
cli
sub
imul
imul
lret
test
outsl
out
ja
jne
imul
jb
xor
mov
insb
insb
je
sahf
nop
insb
cmp
xchg
push
add
sub
mov
mov
xchg
xchg
sub
push
fsubrl
sbb
dec
sub
lret
or
add
pop
js
bound
idiv
or
sbb
dec
shlb
sbb
xor
das
cmp
loopne
mov
add
or
or
aam
or
call
fdiv
jnp
mov
mov
in
xchg
dec
clc
lock
jge
cmp
and
push
inc
adc
jl
push
lret
fiadds
xchg
repnz
fnstenv
hlt
in
sahf
test
fisubl
sub
fstpt
iret
push
pop
push
adc
dec
in
push
or
xchg
xor
les
push
and
and
jnp
xor
es
sbb
push
js
mov
outsb
dec
sarl
es
fnstenv
mov
jae
imul
xor
mov
rol
lcall
xchg
dec
mov
addr16
lret
int3
lcall
into
iret
rcl
jmp
rcll
aam
aad
scas
imul
mov
lcall
fnstsw
jae
shll
in
pop
call
jmp
dec
xlat
xor
out
out
fs
cmpsb
stos
imul
imul
jge
adc
add
cmp
xchg
mov
mov
rclb
and
dec
insl
daa
jae
aad
cld
or
out
insb
fmull
jb
mov
jb
nop
jb
and
or
pop
in
or
mov
cmp
pop
xor
mov
jl
and
out
xchg
pop
call
jl
lret
add
inc
sbb
adc
in
test
data16
dec
sbb
push
out
mov
push
mov
dec
jmp
cbtw
stc
inc
addr16
bt
pushf
push
sub
jmp
sarb
jl
cs
jnp
mov
lods
xor
pop
outsb
push
and
add
or
adcl
bound
outsl
arpl
scas
xor
add
lea
popf
add
jmp
out
in
jmp
lods
xor
xchg
jbe
jge
ds
mov
mov
mov
cltd
idiv
mov
mov
xor
outsl
adc
add
sbb
je
xor
push
cld
call
sbbl
jb
mov
lahf
scas
push
sbb
popa
sbb
les
aad
sbb
pusha
adc
jmp
outsl
ljmp
data16
test
xor
shl
mov
sub
jmp
cmpl
push
sbb
dec
and
cwtl
push
rolb
je
mov
jl,pn
jbe
mov
xor
push
pop
fisttpll
mov
pop
cs
push
movsl
and
pop
push
xor
shl
fistl
ljmp
add
lds
shr
xor
pop
loope
xchg
adc
fstpl
mov
in
fcomi
fadds
int3
lea
adc
roll
mov
rcll
mov
cltd
mov
decb
mov
xor
xor
insb
enter
mov
negl
mov
lret
pop
inc
add
mov
test
stc
or
pushf
pusha
sub
push
push
jp
push
sbb
cmp
xchg
cmp
stc
xchg
push
mov
adc
pushf
outsl
and
cmc
sub
mov
bound
enter
mov
or
dec
mov
shlb
xchg
cmp
test
or
jg
ffree
sar
loope
or
ror
not
shl
rcr
sbb
sti
jmp
setnp
rcr
cmp
inc
mov
jmp
sub
jnp
sar
sub
dec
jb
std
cmc
int
popf
fldcw
mov
cwtl
pop
or
adc
ror
in
lock
rcr
mov
pushf
stc
jmp
js
mov
outsb
mov
or
idivl
je
dec
insl
mov
jmp
aas
add
and
test
pop
and
fstpl
and
adc
push
xchg
test
push
iret
clc
out
mov
pushf
cmp
push
and
sub
dec
pop
xor
imul
cmc
bound
scas
pusha
jmp
mov
xor
shrd
pusha
sbbl
push
push
je
in
mov
pop
jg
jmp
test
aas
bound
adc
add
sbb
cmp
adc
pop
fsub
xor
jmp
outsb
mov
xchg
inc
mov
popa
ss
cs
fcomps
inc
pop
push
mov
inc
ds
mov
hlt
cli
sub
xor
mov
hlt
pop
stos
enter
adc
call
jae
mov
inc
shl
mov
cmc
sti
sub
sti
fmulp
push
pop
out
stos
mov
call
mov
push
push
push
shlb
add
adc
dec
push
cs
add
jge
loope
sub
jle
adc
and
mov
fdivrs
add
xor
fisttps
and
into
js
clc
and
cmp
fs
cld
sti
mov
loopne
push
or
add
fdiv
adc
mov
into
ret
jmp
or
lcall
mov
add
ficoml
pop
ret
jp
adc
xor
inc
or
sbb
dec
inc
rcll
rclb
in
cmp
stc
divb
xor
hlt
sarb
fldt
xlat
cmp
imul
mov
std
sbb
pop
mov
push
je
push
or
mulb
cwtl
call
orl
je
push
dec
jo
arpl
divb
cmp
movb
mov
or
adc
mov
pop
push
je
push
and
adc
pop
sub
add
mov
adc
add
push
jae
push
cmpsl
xchg
test
adc
sbb
int3
enter
push
mov
or
clc
popa
sub
mov
lret
int3
rcl
fcomp
in
rorl
pop
dec
or
xor
ss
xor
test
sbb
sahf
lcall
adc
adc
je
inc
shrl
xchg
sbb
xor
inc
lret
or
fcmovne
lea
push
pop
mov
hlt
adc
test
inc
insb
sar
and
in
or
push
lcall
shrb
mov
mov
hlt
cmp
and
mov
hlt
xor
add
or
inc
and
subb
sub
push
push
sub
mov
in
xchg
movsb
push
xchg
adc
or
data16
out
sub
aam
push
dec
mov
push
jl
xor
push
fstl
dec
mov
lret
mov
dec
inc
push
cs
mov
insb
aaa
add
pop
fs
insb
xchg
gs
xchg
jne
cs
insb
inc
arpl
push
mov
dec
outsb
je
push
jb
in
mov
mov
mov
jbe
cmpsb
pop
cmpsl
push
gs
xchg
pop
stos
push
lods
lods
pop
dec
je
lcall
cmpsb
imul
pop
nop
gs
roll
aam
mov
lcall
lea
jne
mov
gs
xor
push
sbb
sub
dec
rcll
cwtl
js
dec
shll
je
cmpsb
or
inc
push
fnstsw
cmp
imul
in
out
imul
fnstenv
mov
jb
mov
or
jne
jb
outsl
mov
mov
mov
arpl
mov
les
in
fdivl
inc
inc
fsubr
mov
xchg
or
enter
jg
sub
shlb
fdivrp
xlat
je
mov
sub
into
mov
adc
pop
dec
push
xchg
xlat
daa
stos
jne
imul
iret
xor
addb
sub
repz
in
cli
aas
sbb
jo
mov
jmp
push
pop
xor
add
dec
xchg
gs
jecxz
pop
in
je
push
adc
or
add
loop
rcll
xchg
imul
sub
ss
dec
mov
movsb
or
repz
adc
adcl
pushf
add
push
mov
or
pop
xor
xor
adc
insb
dec
push
aas
jne
pop
aad
jmp
push
daa
out
dec
sub
pusha
outsb
sbb
test
jmp
leave
jns
out
fnstenv
mov
sbb
fimuls
addb
mov
std
subl
mov
inc
pop
bound
int
hlt
out
cmpsb
daa
cmp
and
adc
outsb
js
stos
sbb
jne
or
cmc
xchg
jmp
push
mov
je
pop
mov
or
icebp
lock
pop
inc
inc
shl
fcoml
movsb
hlt
pop
je
scas
add
ljmp
and
fisttpl
and
js
mov
adc
push
mov
hlt
sub
pop
or
mov
insl
scas
les
test
inc
test
clc
push
cmp
sti
std
mov
xor
pushf
xor
jmp
jle
sbb
or
loope
ret
cmp
xor
into
sub
popf
addl
test
daa
cld
clc
outsb
lods
mov
adc
stos
or
enter
pop
je
adc
and
in
pop
or
sub
es
sub
add
arpl
add
je
sbb
lret
lret
lret
je
add
jl
push
jle
adc
jl
pop
jg
jb
push
out
aaa
xor
sub
and
push
jmp
aas
jno
ss
adc
cmp
sbbl
cmovb
fs
in
andb
xor
mov
call
dec
inc
cmp
or
pop
xchg
in
imul
xchg
je
je
outsl
add
pop
xchg
arpl
jne
push
cltd
rcr
mov
push
lcall
dec
out
adc
and
dec
or
sbb
dec
xchg
or
inc
jbe
and
dec
pop
jne
scas
xchg
mov
push
dec
cmpsl
and
sub
xor
cmpb
add
and
out
xchg
jge
jle
or
cmpsb
jnp
push
adc
cmp
pop
out
inc
cmp
or
cmp
push
cld
pop
clc
push
and
push
pop
push
das
cmp
dec
mov
mov
or
in
aad
mov
push
ljmp
faddl
pop
fdivrs
bsf
push
sub
xchg
sbb
jno
push
les
sub
pop
cmpsb
mov
addr16
in
push
mov
mov
add
push
cwtl
add
fidivrl
xchg
mov
push
sbb
fdivl
inc
pmaddwd
imul
mov
add
adc
dec
dec
sbb
mov
nop
mov
in
add
rol
fnstcw
popa
arpl
xor
imul
les
or
shll
es
and
xor
and
xchg
movsl
xchg
popa
arpl
pop
xchg
imul
pop
xchg
arpl
je
outsl
fstl
jne
shrb
mov
sub
popa
arpl
jb
imul
mov
push
loopne
loope
jns
push
cmpsb
imul
aam
cmpsb
imul
shll
outsb
imul
inc
data16
jp
shll
cmp
xor
jo
je
add
jbe
and
into
jmp
or
jmp
add
and
in
adc
std
lods
push
adc
jbe
sti
lods
stos
rep
and
push
repnz
pop
jne
call
in
xlat
frstor
fsubrl
fstp
pop
inc
ljmp
inc
cmp
push
sbb
jl
lcall
xor
stos
dec
rorl
addr16
jb
cmpsb
imul
sti
rcr
imul
sbb
sbb
outsl
popf
xchg
xchg
int
mov
cld
adc
pushf
fdivr
xchg
leave
insb
ret
jbe
stos
add
sub
xor
xchg
fdivr
push
fmul
sbb
sbb
or
xchg
inc
ret
push
jb
out
fcoml
dec
cld
push
cltd
je
mov
je
or
lds
sbb
adc
ret
and
incl
add
test
mov
mov
cmpsl
add
fbld
mov
mov
pusha
xchg
call
popa
out
push
insl
sbb
adcl
test
mov
ret
icebp
jmp
call
out
iret
data16
adc
add
xor
mov
push
shll
jp
hlt
fsub
adc
data16
aam
and
iret
call
shlb
loopne
sub
aas
test
in
sbb
subl
cmp
cmp
cmp
je
bound
mov
insl
aad
fxch
movb
push
jo
aas
mov
sbb
cmp
repnz
sbb
xor
cld
in
add
std
insb
shll
gs
add
xor
outsl
imul
dec
push
pop
sub
aad
inc
stos
pushf
xor
mov
mov
movsb
mov
cmp
lock
mov
dec
push
inc
ds
sub
cmp
jb
andb
inc
orl
add
inc
icebp
ljmp
sub
lahf
ja
mov
gs
xor
cs
fs
enter
lcall
arpl
outsb
push
imul
cmp
push
pop
cltd
call
mov
stc
mov
cld
pop
dec
je
push
push
mov
je
sub
lcall
lret
inc
mov
nop
in
enter
xor
pusha
cmpb
outsl
test
cmp
sti
mov
adc
sub
iret
mov
dec
xchg
nop
jns
cld
andb
inc
and
call
sbb
jae
loopne
sbb
add
sbb
fstpl
loopne
pop
nop
loope
mov
jne
push
push
data16
push
push
loopne
sbb
pop
push
dec
xchg
sbb
add
mov
add
mov
or
xchg
movsl
movsb
dec
cmc
loope
sbb
hlt
and
pop
pushf
xchg
xor
sbb
adcb
stos
inc
mov
dec
jnp
mov
cmp
add
xchg
pop
out
inc
sub
movzbl
xorl
testb
push
mov
rolb
cmp
mov
andl
and
add
add
push
push
mov
sub
push
dec
jo
jo
cs
aad
insb
insb
cmp
pushf
sub
mov
inc
fs
je
dec
shll
dec
outsb
push
outsl
subl
lock
les
icebp
jne
inc
cmp
pop
add
push
sbb
xchg
xchg
xchg
or
mov
outsl
jne
insb
pop
and
lds
sub
dec
inc
xchg
xchg
dec
cmp
test
adc
mov
pop
and
stc
outsb
inc
cmp
add
dec
cmp
ret
ret
add
push
ror
aas
movsb
lea
sbb
mov
xchg
popa
add
sub
imul
int
push
movsb
mov
add
hlt
inc
movb
inc
lretw
jle
mov
sub
push
pop
int3
cmp
cmp
cmp
mov
int3
fsts
aaa
cmp
adc
dec
shr
in
bound
cmpsb
sub
jne
jl
inc
push
lea
xorb
xchg
mov
sub
mov
mov
add
mov
cmp
jl
add
jg
inc
cmp
rcrb
sarl
ja
aam
xorl
sbb
dec
xchg
ret
je
add
cmp
aad
xlat
fs
fcomp
ja
imul
fstpt
cmp
lcall
cmp
push
arpl
insl
cmp
xor
imul
imul
imul
xor
jb
daa
leave
int
call
aam
imul
imul
movsb
imul
cmpsb
imul
cmpsb
imul
test
lcall
xchg
gs
push
js
das
gs
xor
fs
insl
vpaddd
leave
xchg
cld
cmp
fcoms
aad
leave
stc
ljmp
enter
dec
jl
sub
add
jl
pusha
jb
mov
xchg
mov
mov
fsubp
mov
call
xor
jp
mov
pop
shl
jmp
adc
push
pop
add
inc
jnp
or
fdivrl
movsb
push
call
cmp
pop
add
fmuls
scas
mov
adc
cmp
ljmp
cmp
or
jmp
mov
push
mov
xor
cs
add
mov
adc
or
mov
dec
sbb
sbb
mov
fidivs
jbe
mov
iret
mulb
adc
push
dec
xor
js
insl
lea
fidivrs
xor
jle
sbb
push
fwait
xorb
scas
jne
push
pop
std
mov
ja
fldenv
or
push
and
cmp
and
cwtl
movsb
adc
or
push
fstl
fildll
push
pop
mov
jne
pop
adc
lock
push
xchg
and
dec
or
sbb
and
popa
in
xor
in
and
inc
or
mov
call
in
call
insl
inc
fcom
push
cs
adc
and
in
sub
ds
push
add
push
sub
pop
call
add
adc
mov
int
mov
jo
xlat
sbb
jb
xchg
pop
mov
lret
fs
jb
lcall
push
outsb
fs
outsl
insb
sub
push
mov
negl
push
imul
dec
jne
jo
xor
push
rol
ret
outsb
fs
sub
dec
popa
pop
out
cmpsb
imul
push
cltd
push
test
cmp
xor
outsl
outsb
xor
push
push
mov
mov
mov
cmpsb
jp
cmpsl
test
sub
xor
or
iret
mov
push
cmp
mov
mov
cltd
pop
das
mov
mov
daa
mov
rorl
and
aaa
andb
add
jmp
and
fsubl
ficoms
aas
mov
je
dec
cmp
mov
jbe
fldl
add
xor
cmp
or
sbb
mov
and
jmp
loop
rcrb
les
cld
and
leave
repnz
cmpsl
add
or
jp
nop
and
mov
in
clc
dec
lods
call
call
and
mov
cmp
jl
test
add
clc
int
mov
mov
imul
add
les
cltd
cmpl
xchg
sbb
popf
pop
mov
mov
sub
mov
mov
out
pusha
jl
icebp
fldenv
mov
add
into
into
or
in
shlb
dec
bound
xlat
movsl
aad
loopne
cmp
hlt
inc
push
jl
adc
xchg
xor
jbe
xor
mov
push
pop
scas
xor
lods
lgs
arpl
or
cmp
inc
sbb
mov
adc
sub
call
mov
mov
or
loopne
pop
xlat
rcr
ret
or
out
jmp
movsl
stos
add
outsb
ret
jo
cmpsb
js
ret
enter
push
test
ret
addr16
pop
mov
je
pop
xchg
gs
inc
outsl
jne
sub
push
insl
inc
imul
insl
bound
inc
dec
mov
loop
in
inc
imul
outsb
imul
std
mov
into
fcmove
cmp
fistpll
bswap
sarl
pusha
mov
add
cmp
cmpsb
jne
push
call
adc
adc
clc
daa
call
call
test
aas
jmp
inc
jo
sub
mov
mov
sbb
enter
mov
cli
in
call
jbe
jmp
jno
inc
inc
hlt
ja
jnp
xor
js
push
and
mov
out
rcll
dec
adc
or
pop
test
bnd
in
out
and
cmp
loop
and
dec
cmp
cmp
cwtl
mov
add
push
xchg
fists
cmp
inc
cmp
jl
fstpl
mov
je
cmp
xchg
cmpb
adcl
add
jo
testl
dec
or
imul
push
rorb
add
add
fistpl
sub
or
push
sub
dec
sbb
inc
dec
sbb
pop
add
xchg
mov
pop
and
movsl
sbb
add
test
outsl
jge
int3
inc
mov
lret
add
sar
outsb
mov
adc
jne
mov
das
mov
sub
mov
lods
mov
data16
mov
lahf
add
cmpl
std
add
andl
or
jmp
ja
mov
mov
mov
jne
daa
add
ljmp
popa
push
cmp
jne
repz
rcrb
adc
push
sarb
jmp
or
jne
or
sub
fcomi
add
ss
adc
and
or
xor
imul
int3
outsb
adc
mov
ljmp
cmp
jl
add
std
adc
pop
test
lods
or
jae
jb
in
cs
push
jno
push
mov
and
dec
je
adc
pop
lahf
pop
or
mov
adc
iret
mov
clc
test
and
mov
pushl
pop
mov
push
scas
mov
add
pushf
and
sub
mov
inc
lods
add
adc
fstps
stos
movhps
data16
fisttps
sbb
pop
lods
push
mov
call
outsb
inc
mov
int3
jbe
pushl
lcall
ret
adc
les
push
and
aad
pop
jl
adc
sub
stos
push
ktestb
or
hlt
push
orl
and
pop
mov
icebp
mov
and
inc
cmp
jbe
mov
and
inc
sub
outsl
inc
shr
or
push
xor
sti
xchg
test
jae
jo
adc
cs
out
sahf
enter
push
adc
mov
or
mov
add
mov
push
xchg
cmp
and
inc
ja
xlat
mov
pop
ja
adc
jmp
jp
les
adc
std
in
pusha
sub
dec
xchg
mov
js
insb
outsl
cmpsb
imul
gs
fs
test
insb
jb
sub
insb
xor
jg
cmc
in
js,pn
je
push
into
sbb
cvtpi2ps
dec
lock
in
push
or
add
mov
xchg
popa
mov
adc
xlat
mov
pop
add
add
in
jne
imul
icebp
push
and
loop
cmp
mov
scas
mov
shlb
xchg
sbb
mov
dec
or
or
pop
mov
inc
pop
cmp
pop
or
or
push
popf
scas
subb
loopne
cmc
dec
jge
add
cmp
cmpsb
pusha
adcb
les
jne
pop
push
jne
in
pushl
mov
push
rcl
fst
or
push
cmp
aaa
add
pop
or
push
adc
loop
jb
pop
sub
xor
and
jl
mov
loopne
nop
mov
pop
sbb
sub
jecxz
mov
xor
fadds
xchg
cmp
add
sbb
pop
aad
push
xchg
adc
sbb
test
lock
into
inc
push
fsubrl
cmp
stos
inc
push
and
push
mov
int3
pop
minps
cltd
fcomps
cmp
jno
cmp
mov
push
mov
daa
fwait
adc
jmp
mov
loop
cmc
pop
add
jle
push
mov
inc
insb
dec
add
xchg
ret
fs
xchg
fwait
push
pop
stos
add
mov
and
addr16
mov
sub
sbb
cld
insl
or
inc
cmp
jl
push
sbb
insb
movsl
cmp
aas
stos
or
push
push
mov
iret
inc
or
pop
sub
jo
repnz
sbb
arpl
inc
mov
in
data16
pop
dec
data16
imul
xchg
addr16
in
in
out
push
or
jo
out
enter
cmp
std
jae
std
pushf
sub
loop
jcxz
jne
xor
ret
lret
test
popa
mov
gs
gs
xchg
xor
xor
aaa
pop
xchg
popa
jns
cs
sub
cmp
nop
xchg
ret
orl
or
por
aaa
fisubs
mov
sbb
lods
xlat
and
push
xlat
sarl
add
adc
cmp
push
mov
push
loopne
pusha
aam
xchg
add
insb
test
xor
sub
xor
jo
lea
push
mov
andb
mov
cmp
cmc
cli
mov
cwtl
and
pop
adcl
adc
and
enter
roll
and
iret
and
xchg
gs
xchg
gs
insb
outsl
jb
gs
xchg
gs
gs
lock
pop
in
jnp
sbb
pop
mov
in
push
dec
enterw
or
leave
std
mov
sub
lds
das
cmp
cmp
mov
add
jbe
std
into
pop
cs
cli
mov
or
notb
ja
inc
push
popa
adc
add
inc
mov
imul
add
cwtl
cmp
int3
inc
mov
fisubl
mov
jmp
pop
push
pop
fcoml
or
test
xchg
repz
flds
cmp
fs
pop
int3
add
inc
inc
xor
and
iret
out
xor
adcb
enter
xchg
xchg
mov
inc
loopne
in
stos
call
mov
and
repnz
pcmpeqd
adc
mov
mov
mov
into
sbb
or
push
jns
mov
scas
sbb
gs
movsb
lea
dec
inc
imul
shll
cwtl
add
dec
inc
pop
inc
imul
test
inc
inc
or
pop
sti
call
outsl
arpl
jae
add
adc
gs
outsl
outsl
insb
push
ljmp
xor
popa
jo
push
add
jb
jne
insb
arpl
mov
jo
inc
std
outsb
adc
add
inc
insb
inc
cwtl
add
inc
dec
gs
xchg
cmovbe
jae
arpl
fistps
in
push
imul
add
dec
adc
jne
adc
xchg
jne
mov
outsl
popa
fs
imul
jg
insl
in
xlat
adc
inc
push
leave
fidivrs
jns
add
or
and
movntps
roll
jb
lea
lods
fnstsw
sub
or
out
dec
movl
insl
jo
adc
push
xor
cmp
push
imul
jno
dec
int
lods
mov
xor
popa
popa
mov
add
gs
mov
pop
aaa
stc
jae
popa
push
shrl
hlt
and
mov
push
outsl
imul
sbb
fstpl
ret
jns
mov
inc
scas
dec
sbb
mov
pusha
fldt
push
push
imul
mov
and
outsl
jo
xchg
fists
sbb
jmp
jne
mov
call
jnp
ret
je
outsb
addr16
inc
push
dec
and
push
andl
mov
sbb
adc
inc
jnp
pop
push
js
test
mov
orb
dec
outsl
xorb
lods
std
pop
sbb
add
add
inc
cmpsb
cld
adc
addl
ret
add
outsl
pop
fcoms
dec
jmp
outsb
push
sbb
js
or
rcr
dec
inc
push
dec
inc
sub
mov
jae
jae
data16
push
movsl
mov
add
add
loope
inc
jmp
mov
outsl
push
jb
cmp
sbb
icebp
push
mov
add
inc
ds
pop
pop
and
leave
push
test
fiadds
fidivs
ds
mov
jne
xchg
lods
frstor
push
push
push
mov
push
hlt
cltd
jmp
or
push
pop
sub
in
movl
arpl
aam
push
sub
push
jb
insl
ret
idivb
mov
insl
outsb
bnd
and
lea
dec
pop
imul
jne
dec
cmpb
pop
imul
cwtl
in
mov
adc
push
add
jne
add
mov
pop
add
jl
imul
ret
xor
jg
jnp
jb
cmp
adc
inc
outsb
jne
ret
jle
insl
inc
inc
push
inc
push
xchg
mov
pop
push
pop
cltd
add
xlat
call
lret
arpl
xor
push
cmp
or
pop
mov
jns
roll
imul
add
dec
xchg
inc
sub
popa
push
mov
ds
adc
add
adc
jns
mov
adc
or
xchg
lods
aam
mov
cmp
mov
xchg
int
dec
ret
fsubs
testb
add
xchg
loope
jae
mov
xor
nopl
sbb
xchg
ja
sti
and
and
test
or
out
jnp
adc
outsb
sub
or
loope
clc
pusha
in
pop
jbe
add
cmp
lret
ret
cmp
dec
add
popa
ret
add
dec
loopne
mov
js
ret
comiss
mov
insl
rolb
addl
cld
pusha
sub
push
push
sbb
adc
cmp
xor
push
popa
jbe
and
cwtl
adc
lods
sbb
xchg
leave
add
dec
dec
push
mov
dec
sub
sbb
dec
bts
adc
mov
cli
xchg
call
test
cmp
clc
sub
pusha
pusha
push
jmp
rcl
sar
inc
jne
xlat
mov
testl
add
pushf
push
or
fstpl
push
inc
cmpsb
jmp
sbb
jne
mov
addl
movsl
and
jne
push
out
add
pop
push
jo
gs
sbb
and
push
js
inc
dec
sub
or
test
stos
or
or
jg
fdivrp
rclb
test
arpl
and
pushf
movsl
pop
ljmp
lods
in
decl
ss
jl
mov
push
aad
cmc
add
pop
popa
movsl
push
out
mov
sbb
lcall
pusha
push
outsl
push
xor
or
add
int3
shll
sub
popa
push
ds
outsb
mov
call
and
inc
mov
sub
push
pushf
arpl
xchg
push
mov
adc
pushl
std
aas
push
mov
jnp
lcall
cs
insl
or
das
mov
test
mov
sbbb
add
popa
test
cmp
in
push
sub
mov
lea
insb
pushl
adc
je
mov
loop
jle
out
out
lret
xchg
inc
xchg
push
add
stc
xchg
rclb
stos
mov
fisubs
inc
addr16
std
repnz
imul
imul
mov
testl
fs
and
call
shlb
push
sar
decl
fsubs
pusha
xor
pushf
push
push
hlt
stc
add
cmc
pushf
ror
mov
neg
cmp
call
cmp
shrd
shr
xchg
neg
btc
mov
push
call
pop
inc
test
adc
push
ljmp
cmp
pushf
add
push
mov
pushf
push
imul
cmp
ret
out
pop
shl
cmp
push
sbb
outsb
outsl
jle
mov
mov
or
pop
mov
rcl
shlb
xchg
cmc
add
mov
mov
add
les
jns
data16
jg
add
les
pusha
cmc
cmc
xor
test
clc
add
cmc
sbb
mov
call
sub
mov
pop
aaa
dec
or
lea
add
test
xor
sti
and
add
call
cmp
lods
sti
in
jg
push
call
jne
jmp
cmp
dec
push
inc
ret
and
adcb
and
jmp
or
imulb
mov
xchg
into
rclb
out
scas
pushf
jg
jmp
xor
push
pushf
jo
inc
jmp
jmp
or
imul
lret
dec
xrelease
jmp
push
jmp
cmc
out
jmp
ret
cmovge
lcall
es
call
ret
pop
ja
sub
jmp
std
cmp
jmp
inc
pusha
rcl
lock
dec
call
pop
jno
pop
mov
inc
loope
pusha
call
fidivrl
pop
fstl
sbb
fs
repz
jmp
jbe
sub
repz
decl
sub
xchg
dec
cmp
call
in
dec
and
mov
pusha
jmp
int3
mov
push
adc
adc
inc
sbb
aaa
sbb
je
daa
jg
loopne
jne
jo
loope
xor
jmp
mov
inc
std
pop
adc
pop
cmp
dec
and
cld
pop
test
popf
setg
push
xor
out
or
ljmp
daa
or
lahf
mov
sbb
push
xor
xor
call
fistl
pushf
adc
mov
or
mov
test
out
pushf
mov
push
and
hlt
lds
aad
fs
idiv
mov
repnz
cmp
out
add
rol
cs
mov
jle
add
lds
fstpl
push
icebp
stc
je
mov
jmp
pop
cmp
neg
push
call
push
cmc
sbb
call
or
push
icebp
xchg
jbe
and
fmuls
divb
cli
sub
aas
mov
push
loopne
call
cmc
or
dec
mov
mov
jge
flds
add
sub
push
pusha
cwtl
test
and
inc
cs
fcmovb
pop
mov
push
popa
inc
shl
xchg
mov
push
pushf
sub
jae
cmpsb
fists
in
shl
mov
setb
loop
outsb
pop
pop
rorl
pop
addr16
xchg
pop
sar
mov
pushf
dec
pusha
pushf
xor
add
jecxz
push
adcl
pop
movsb
adc
ret
adc
sbb
cld
push
not
mov
and
call
hlt
idiv
cmpsl
add
ret
popf
add
icebp
push
xor
int
aam
lods
dec
cmc
stc
cmc
lock
filds
sbb
sbb
and
mov
adc
sbb
cmp
cmp
mov
sub
mov
stos
jecxz
cmp
sub
jmp
ret
xchg
sub
mov
out
dec
or
pop
repz
sub
lcall
mov
push
outsl
xchg
adc
or
call
fcom
sbb
jmp
into
mov
loope
insl
add
mov
scas
insl
outsb
sub
fsubr
add
xor
fisttps
test
jmp
data16
pushf
jae
roll
enter
ss
imul
aad
mov
cli
mov
in
lahf
push
adc
fdivrs
test
jmp
sti
or
imul
xor
aaa
push
xlat
ret
adc
and
inc
lock
push
ret
insb
call
movsb
and
pop
push
pop
test
cmp
in
sbb
movsl
shl
lret
xchg
pop
daa
lds
pop
sub
movsl
decl
inc
call
adc
std
cld
popf
push
push
pusha
pop
outsl
push
insb
outsl
ljmp
sbb
lock
loope
push
pop
ja
jmp
insb
mov
or
add
cmp
lock
aas
or
dec
sub
jg,pn
les
push
xchg
adc
lods
jge
int3
bound
mov
mov
bswap
mov
stc
stc
jmp
jle
cli
add
stc
cmp
sbb
and
in
sub
and
jp
lods
jp
pusha
out
stos
mov
call
leave
sub
les
add
out
call
iret
jno
es
jb
xor
insl
mov
outsb
xor
enter
scas
imul
add
adc
icebp
mov
and
repz
ret
pushf
aas
jmp
mov
mov
test
fyl2x
or
push
call
and
lret
ret
inc
xlat
inc
shlb
roll
rcrl
inc
shr
rolb
enter
inc
bnd
sub
or
adc
mov
cli
jp
push
sbb
rolb
jno
cmp
cli
push
repz
mov
mov
mov
setae
jg
sbb
jmp
stos
xor
shll
sbb
aam
sbb
out
mov
in
xor
testl
je
fidivl
aaa
mov
pop
cmc
lods
lds
adc
clc
lds
call
loopne
cli
or
dec
clc
sub
aaa
pop
jmp
sub
test
stc
repz
add
shlb
push
mov
push
push
cmp
ret
out
subl
cmp
mov
jl
ss
adc
aaa
mov
movsb
xor
lods
push
shlb
jle
xchg
in
add
push
inc
pop
jb
sub
pop
adc
mov
call
push
clc
cmp
xchg
lock
cltd
xor
adc
cmpsb
pop
mov
xchg
mov
daa
aas
mov
mul
xchg
rolb
vaddsubpd
daa
iret
loopne
call
mov
cmpsl
dec
cmpsb
and
xor
push
jmp
int
jo
call
daa
sahf
push
mov
pop
loope
cmp
jbe
scas
test
scas
call
push
pop
call
ss
in
mov
test
add
and
push
in
mov
das
mov
cmovne
imul
adcl
push
push
es
push
sbb
in
dec
cld
or
adc
lret
rorb
xchg
push
rolb
push
enter
cld
loope
sbb
lret
ljmp
jns
mov
sbbl
pop
push
sti
push
test
scas
scas
mov
cltd
or
jp
xor
lods
sub
mov
dec
xor
jb,pn
xor
pop
sbb
inc
sub
lret
adc
out
rclb
clc
aas
in
loope
stc
sub
jb
xor
call
mov
and
int3
outsb
das
lea
in
in
in
fwait
add
adc
and
and
pop
imul
pop
pop
sub
fwait
std
push
repz
das
push
arpl
sub
mov
aaa
sti
int
sbb
add
xchg
repz
out
mov
imul
jl
movsb
fsts
and
xor
jo
fsubrs
sbb
pop
rorl
test
mov
movl
xor
xchg
out
lock
mov
fwait
cmp
adc
sub
clc
stos
pop
push
out
mov
daa
das
fdivrl
lock
sbb
cs
ret
loope
sahf
cld
jo
inc
cmp
aaa
sti
mov
cmpl
fdivrs
xchg
add
pop
outsb
adc
ret
xor
aas
mov
push
jmp
fbld
cwtl
icebp
xchg
das
mov
cli
jle
sbb
cmpsl
push
jae
sbb
ja
jnp
js
or
stos
lret
push
arpl
and
mov
stc
adc
fwait
lea
mov
mov
aas
scas
pop
out
push
bnd
inc
jnp
add
push
out
mov
out
stos
or
mov
ja
shr
adc
aaa
aas
mov
xchg
aas
daa
fldt
fwait
icebp
fidivrs
scas
xor
push
divl
out
sub
loope
push
out
cmp
lret
arpl
imul
movsb
outsl
aas
xchg
adc
hlt
inc
xchg
pop
mov
push
jle
inc
mov
jmp
add
xor
inc
roll
add
cmc
push
push
pusha
pop
sbb
dec
je
and
ljmp
ds
push
push
jb
mov
mov
or
stc
cmp
pop
sbb
daa
adcb
or
push
cmp
mov
push
mov
call
jb
fs
gs
aas
and
nop
clc
das
mov
in
incl
js
pop
or
imul
add
repnz
rcr
pusha
xor
adc
test
ljmp
daa
outsl
push
xor
mov
subb
pusha
faddl
cmp
xchg
into
nop
add
push
cltd
cmp
mov
xchg
xor
test
sub
mov
loope
repnz
dec
push
insb
add
mov
add
hlt
cmpsl
cld
fistps
jecxz
push
movsb
jmp
outsl
rcr
jp
pop
ljmp
mov
jae
insb
ficoml
sub
inc
jmp
jae
out
sub
test
sti
push
out
pop
pop
push
into
sub
cmp
pop
fmull
add
or
mov
fistpl
pop
cs
clc
cmp
outsl
pop
add
popa
or
data16
test
push
add
add
loopne
fidivs
cmc
gs
or
cmp
roll
aam
mov
pop
in
stc
sub
jecxz
pusha
inc
sbb
ret
jbe
loopne
fnstsw
pop
mov
imul
dec
mov
out
ds
sub
mov
adc
cmp
aas
testl
sbb
cmp
mov
inc
push
out
inc
pushf
mov
jns
scas
push
mov
adc
mov
sbb
mov
jecxz
inc
add
xchg
sbb
push
jmp
fstpt
adc
repz
xlat
push
push
fwait
cwtl
adc
push
pusha
test
cmp
push
jge
cmpsb
insl
hlt
or
mov
cmpsb
roll
inc
punpcklbw
out
sahf
out
xor
adc
adc
adc
push
sbb
cld
jne
or
pop
idiv
jmp
icebp
xchg
movsl
data16
xor
mov
push
mov
insl
leave
push
add
stc
adc
stc
push
mov
jne
jbe
pushf
add
ljmp
cmpb
sub
xchg
inc
dec
push
loopne
sub
jmp
sbb
push
mov
inc
dec
fcmovb
mov
cmp
or
push
das
jmp
or
push
repnz
jmp
test
jmp
rcr
jae
call
push
sub
loop
and
cli
cltd
jmp
mov
xchg
xlat
mov
xor
pop
jo
mov
cld
lret
popa
pop
mov
mov
call
jbe
mov
shrl
lods
call
pop
jno
sbb
lods
fsubs
push
imul
lock
cmp
outsb
out
jmp
add
jbe
out
clc
pusha
xor
cmp
push
add
daa
cmp
cbtw
jmp
inc
inc
aam
push
repnz
jne
addr16
inc
push
ret
cmc
adcb
pushf
test
fprem
mov
call
test
and
scas
and
roll
xchg
mov
mov
roll
ret
outsl
mov
push
data16
aaa
cmp
pop
xor
lret
pop
cmp
inc
call
push
inc
xor
push
out
pop
inc
cmc
or
pop
sbb
mov
push
jbe
pushw
or
bound
cmp
adc
xchg
push
mov
jno
inc
mov
push
paddusb
xor
dec
xor
mov
xchg
loope
jg
push
call
rcrb
stc
in
or
cmp
es
addr16
xor
xor
test
xchg
xor
jg
test
stc
lea
push
rcr
ror
add
or
cli
seta
mov
pusha
shld
cmc
and
push
cmp
sbb
sub
add
iret
pop
les
daa
pushf
mov
stc
pushf
xchg
add
in
js
push
sbb
push
pop
lods
lret
mov
xchg
add
jne
pop
sbb
pop
popf
das
cmp
mov
dec
push
outsb
mov
xor
clc
sbb
fcmovnb
loopne
push
stc
dec
movb
call
outsl
cmp
rorb
roll
out
pusha
incl
push
rcr
sbb
mov
js
add
shl
cmc
outsb
rcl
aas
subb
js
pop
jbe
push
sbb
jbe
dec
xlat
roll
add
addr16
movb
leave
mov
mov
inc
mov
cmpsb
out
dec
std
add
out
sar
fmul
xchg
adc
out
jns
icebp
ret
adc
sbb
pop
jno
pusha
notl
mov
dec
push
shl
rorb
andl
mov
popf
sar
stos
mov
test
pushf
xchg
jno
pusha
jne
mov
jmp
movsl
das
push
push
push
aas
fs
outsb
je
shlb
pop
aaa
inc
add
mov
loope
pushf
mov
scas
dec
cmp
insb
cmp
mov
loopne
push
call
in
push
mov
in
xlat
inc
or
bound
arpl
adc
lds
aaa
or
inc
xor
cmp
popa
pop
inc
es
mov
clc
sbb
pusha
push
fadds
mov
jno
add
aas
test
psubusw
pop
clc
es
cmp
loope
shlb
mov
mov
and
cmpb
loope
fst
fcomps
jge
push
testl
call
jp
xchg
jmp
jmp
pop
push
fstpl
add
mov
sub
and
icebp
lds
xor
inc
jle
and
repnz
aas
mov
cld
xor
push
aas
idiv
jmp
sar
lea
clc
rolb
or
or
ljmp
ljmp
cmp
call
inc
in
push
in
push
daa
xor
xchg
dec
cwtl
test
jecxz
out
imulb
mov
aas
aam
mov
jl
cli
dec
pop
shl
cmc
push
ljmp
int3
clc
push
mov
jmp
push
sarb
in
fucomi
jnp
add
call
pop
loopne
ja,pn
movsb
mov
lret
and
rcl
scas
pusha
sbb
add
mov
or
push
xchg
pop
negl
sahf
jne
mov
int
shufps
xor
dec
or
cmpl
jl
pop
bound
int3
call
outsl
lds
jae
sbb
int3
mov
repnz
cs
sub
jmp
decl
cmpsl
adc
in
mov
out
test
pusha
xchg
xchg
mov
xchg
pop
mov
ljmp
dec
adc
adc
shrl
sub
scas
xchg
vpshab
iret
push
addl
sub
jp
and
aad
xlat
out
fcmovnbe
scas
orl
mov
lret
inc
push
incb
cmp
call
mov
adc
adc
inc
lods
push
inc
sub
mov
push
cmp
fistpll
mov
or
in
or
lock
cmp
in
fsubl
addr16
jg
into
push
enter
push
sbb
call
fsubrl
call
dec
es
jb
jo
ret
xchg
cmp
in
or
call
mov
mov
fcmovnu
mov
daa
sbb
int
pusha
clc
pop
aaa
testb
lods
xor
or
xlat
push
sbb
in
cmp
push
lea
pusha
gs
mov
fbstp
xor
xor
jno
mov
ror
sbb
mov
and
sub
mov
push
jmp
out
sub
mov
rol
fadds
mov
seto
or
add
subl
loope
ss
xchg
repnz
dec
outsb
jecxz
mov
add
mov
cmpsl
mov
pop
das
cld
aaa
cmc
dec
rcl
mov
clc
sub
xor
and
fcomi
mov
add
test
cmc
and
jno
adc
fs
add
and
test
push
cmp
stc
call
mov
lock
sub
pop
cmp
clc
pushf
fstp
insl
cwtl
sbb
into
inc
outsb
sub
add
cld
psraw
cld
imul
add
mov
push
call
pushf
xchg
test
mov
adc
sbb
add
cld
mov
aas
ret
xchg
mov
dec
jmp
jbe
ljmp
push
test
xchg
aaa
mov
cmp
and
gs
mov
setg
clc
inc
clc
inc
xor
loop
mov
fildl
dec
mov
jo
out
adc
aaa
mov
call
mov
imul
xchg
lret
insb
or
add
mov
icebp
std
pop
out
adc
ja
arpl
cwtl
xchg
xchg
mov
mov
pushf
fwait
push
push
lcall
imul
std
shll
fists
jmp
pop
js
jp
dec
loop
ficompl
cmpsb
cwtl
jo
sub
xlat
repz
call
lea
ret
out
es
mov
and
push
xchg
jno
test
jmp
jg
xor
mov
imul
repz
push
movsl
sarl
cmp
add
xchg
scas
mov
mov
imul
jg
in
jae
jl
imul
imul
or
cmc
jg
cmp
adc
push
push
adc
sarl
and
ss
ljmp
lahf
pop
mov
mov
add
mov
mov
orb
adc
jmp
pop
fdiv
stos
out
ret
sub
nop
pop
loopne
call
sbbl
into
popa
mov
test
or
jmp
jg
ss
fisubrl
add
mov
mov
add
lods
sub
das
fstpl
inc
push
inc
subb
das
fadd
sbb
jge
in
xchg
mov
movsb
push
mov
into
mov
or
jne
clc
sti
add
mov
mov
mov
sbb
adc
sub
mov
xchg
adc
movsb
xchg
sub
pop
and
je
ret
mov
mov
loop
incl
cmpsl
aam
fisubl
imul
testb
inc
inc
jle
cmp
sarl
add
sub
mov
fiaddl
sarl
push
cmc
push
cmp
pushl
xchg
insb
pop
hlt
mov
inc
ss
les
adc
ss
data16
xchg
push
enter
cld
mov
and
xchg
mov
cmpsl
pop
mov
icebp
clc
dec
jo
or
pop
pop
sub
rol
xchg
push
jg
lcall
aad
arpl
sbb
lds
cmp
dec
mov
inc
mov
mov
mov
js
inc
jl
xchg
rclb
jl
dec
mov
lahf
outsl
jmp
inc
out
fdivrs
mov
inc
push
xchg
in
call
mov
mov
adc
sub
stc
testb
cmc
mov
cmpps
cmp
and
sbb
call
fldt
fstpt
cmp
cld
xchg
inc
sbb
std
pop
cli
scas
inc
mov
jne
inc
and
add
rcr
icebp
decl
cmpsb
imul
pop
mov
cli
out
fnstenv
popa
pop
jmp
mov
outsl
lock
xchg
lret
cltd
inc
addb
inc
xor
adc
out
cmpsl
mov
movsl
lock
in
repz
testl
push
xchg
cltd
ds
dec
jbe
adc
and
mov
push
sub
test
fdivrs
imul
jmp
push
xchg
sbb
lds
pop
adc
pop
inc
jo
fisttpl
outsl
icebp
mov
arpl
xor
xor
jnp
jmp
divl
mov
pop
fcmove
aad
iret
les
xor
test
out
arpl
adc
shrl
fwait
cltd
mov
dec
push
push
gs
add
das
cld
js
mov
test
adc
nop
repnz
mov
fisttpll
lds
jbe
pop
fsub
stos
and
jae
rcll
or
fdivrp
adc
xorb
pop
mov
fcoml
lcall
mov
test
cmc
jbe
pop
repnz
pop
jno
ret
pop
push
mov
out
push
mov
dec
ret
inc
and
xchg
loopne
fadds
clc
shrl
cmp
xchg
fnstsw
idiv
stos
outsb
push
mov
inc
jno
xchg
cmp
mov
les
mov
scas
jmp
movsl
call
xlat
sahf
pusha
pop
je
mov
mov
aaa
fs
jecxz
pushf
mov
lcall
cmp
lret
outsb
cld
pushl
dec
inc
mov
cltd
pop
mov
and
ret
mov
lahf
out
mov
stos
sbb
fstpl
mulb
das
aaa
xchg
pop
outsl
push
es
imul
scas
jecxz
cli
incl
sar
fdivl
fisttpll
or
ljmp
arpl
xchg
pushl
mov
mov
rcr
rclb
inc
sbb
sbb
outsl
cld
add
mov
aam
mov
outsl
sub
dec
dec
pop
inc
push
call
mov
ds
push
xchg
mov
stos
or
clc
jl
rorl
jb
sbb
divb
sub
fdiv
mov
nop
cli
incl
fidivs
jle
push
fcoml
rcr
cmp
adcb
cwtl
in
out
mov
xchg
ja
mov
in
push
lods
or
cmp
xchg
jmp
out
incl
sub
ds
testb
jmp
jne
add
je
mov
or
fistps
pop
mov
dec
xor
or
mov
stc
shlb
push
xchg
hlt
sbb
xchg
cmp
test
ljmp
shlb
lahf
xchg
mov
xchg
adc
scas
push
lds
cmpsl
cmpsb
fs
sub
mov
aaa
pop
int
mov
cmp
insb
jl
ljmp
call
cmc
add
mov
mov
sub
sub
mov
xchg
cli
inc
int
dec
cmpl
nop
inc
dec
f2xm1
fstpt
sub
pop
mov
sbb
push
outsl
call
int
shll
xor
bsf
rcrl
xor
push
cmp
leave
popf
mov
jmp
and
fwait
imul
pusha
aam
push
mov
mov
lock
pop
lds
sbb
dec
fisubrs
cli
inc
shl
pop
inc
adc
pop
loopne
mov
dec
js
sbb
int
lea
aaa
jae
call
idivb
lahf
xchg
gs
lods
test
push
dec
stos
push
pop
sub
outsb
sar
outsl
pop
fistps
jp
push
in
inc
pop
jae
insl
shll
shll
jg
cmp
sbb
lods
mov
repz
pop
into
jmp
jo
mov
xchg
push
lock
in
icebp
fwait
adc
pop
xlat
mov
xchg
aad
sbb
enter
call
test
loopne
fistpll
mov
pop
adc
loope
imul
sub
xor
and
lds
vpmaxub
or
pusha
jae
cmc
incl
add
mov
mov
xchg
cmp
mov
push
cld
xchg
fadds
push
andl
icebp
push
andl
aaa
inc
jns
int
dec
aaa
cmp
add
sbb
sahf
pushl
adc
fwait
cmp
cld
aad
mov
jecxz
rcrl
xorb
mov
xor
aad
jmp
scas
mov
push
pop
mov
pop
outsl
jns
and
lock
cli
call
mov
jae
lods
mov
popw
iret
xchg
jne
inc
std
jmp
push
push
aad
mov
jl
cmpsb
lods
scas
mov
push
mov
push
push
outsb
add
push
cli
adc
cmpsl
xor
mov
incl
repz
hlt
push
inc
mov
jge
lret
int
std
stos
xchg
in
dec
lock
push
xchg
aam
arpl
jmp
push
jecxz
xchg
sbb
in
mov
leave
xor
outsl
insb
lock
pop
jmp
pop
pop
aam
subb
shll
clc
push
lcall
jg
lods
and
pop
nop
out
or
js
mov
push
test
adc
out
mov
fs
dec
cmpsl
rcll
imul
inc
ror
lcall
cmc
push
inc
pop
lock
lahf
je
xchg
fisubrs
hlt
mov
fldenv
mov
or
outsl
insb
inc
aam
mov
cmpsb
shrb
or
scas
in
out
jmp
sub
pop
and
jae
aam
mov
cmp
rorb
sar
jmp
or
add
ret
jb
int
jno
mov
mov
inc
and
clc
pushl
mov
mov
pop
dec
negl
nop
popa
add
pop
call
mov
call
stos
sbb
xor
pop
gs
jns
loop
dec
jl
sub
sbb
jmp
std
mov
cmpsb
jo
sarb
lcall
cld
or
outsl
les
icebp
test
call
jno
cld
test
subl
push
push
aad
inc
xlat
scas
int3
testb
sbb
pop
adc
shlb
jae
dec
mov
mov
add
jno
mov
mov
outsl
ss
xor
xor
movsl
sbb
fs
fidivrl
test
pop
out
leave
orps
jg
cwtl
or
push
sbb
jmp
xchg
test
pop
out
adcl
fistpll
fildll
xchg
inc
push
sbb
fstpl
sub
notb
jp
mov
inc
or
mov
cmp
jmp
jbe
pop
xor
fdivp
xor
or
mov
xor
xchg
mov
sbb
rorl
adc
aam
jl
xchg
cmp
dec
test
mov
mov
push
sahf
fdiv
idiv
insl
fcom
mov
int3
in
loope
mov
sahf
jg
clc
neg
es
xorb
mov
dec
adc
mov
inc
test
fistpl
fwait
call
pop
dec
repnz
scas
mov
mov
aaa
cmpsl
add
popl
insb
sti
bound
lcall
mov
push
and
arpl
sahf
xchg
sti
call
cld
call
in
xor
cmpl
cmp
test
jg
or
xchg
push
add
xor
jmp
aaa
cli
mov
pop
pop
mov
and
xchg
xor
popf
pop
pop
cmc
out
outsl
jmp
insb
cmpsb
scas
out
lahf
lods
xchg
fildl
iret
mov
xchg
add
mov
adc
cmp
cmc
dec
mov
mov
call
mov
mov
cmp
cmp
repz
xchg
mov
nop
adc
ljmp
repz
mov
add
sub
ljmp
and
add
test
dec
shr
jl
insl
jle
ficomps
mov
or
add
mov
xchg
sbb
mov
ljmp
icebp
adc
jae
mov
cmc
ljmp
mov
movsb
mov
lahf
mov
dec
and
xor
rolb
push
jg
mov
test
push
jge
sti
push
mov
icebp
adc
pop
sub
xchg
loope
call
filds
je
insl
scas
mull
mov
xchg
push
out
ljmp
lea
lods
in
jmp
out
fnsave
mov
dec
xor
orb
addr16
scas
sub
outsl
cmc
ljmp
aaa
sbbl
xchg
cmp
iretw
clc
push
test
jae
xor
fwait
je
mov
cmp
mov
in
ja
mov
sahf
popa
jg
in
ja
cltd
dec
pop
push
pop
shr
adc
xlat
lcall
call
enter
xchg
xchg
rorb
in
fdivl
pop
ret
popa
adc
test
xchg
andb
cmpl
aam
mov
or
out
icebp
push
xor
lds
jg
stc
add
lret
jae
fcomps
adc
repnz
push
into
cmp
cld
or
nop
mov
mov
cmpsl
xchg
dec
add
lock
pushl
jge
iret
lcall
js
iret
lss
cmp
sbb
scas
test
sbb
call
lea
ss
jg
movsb
mov
out
or
xchg
loopne
stos
test
mov
mov
xchg
xor
mov
inc
fidivrl
cmp
jb
aaa
jbe
shr
jbe
fs
inc
loope
pop
pusha
mov
in
pop
push
in
push
es
imul
sub
cmp
push
test
xchg
test
dec
xor
mov
mov
sbb
cmp
pushl
aas
jge
dec
std
addl
test
mov
mov
icebp
in
lods
dec
sub
test
stos
imul
xchg
aas
movsb
ss
ja
inc
movsb
mov
xchg
mov
int3
push
xor
and
mov
or
popa
int
clc
mov
lcall
fisubrl
fidivl
insb
jmp
std
jmp
outsl
cwtl
aaa
stc
lods
jae,pn
movsb
cmc
leave
jnp
pop
dec
xorb
jge
mov
dec
sub
fldl2t
inc
adc
adc
pcmpeqb
add
outsl
fidivrs
js
outsb
outsb
imulb
stos
aad
jns
fcmovnbe
pop
cli
adc
xchg
dec
push
in
push
inc
lods
call
mov
mov
add
xor
dec
shrl
mov
cmp
aam
repnz
cmp
sub
inc
sub
pop
stos
jp
xor
mov
cltd
inc
push
xchg
adc
pop
ret
aad
mov
pop
insb
adc
xchg
cmc
rcrb
lcall
inc
cli
cmpsl
std
xor
xchg
adc
xchg
and
or
inc
insb
in
lret
leave
and
xchg
xor
xchg
decl
push
hlt
cmp
les
xor
repz
aaa
in
test
popf
mov
nop
push
pop
cmp
das
jp
sarl
jmp
jl
mov
ja
or
enter
cmp
je
inc
mov
push
es
xor
ljmp
popa
inc
jo
clc
es
pop
add
pusha
sub
xor
jp
jg
jle
push
fidivl
jmp
push
cwtl
dec
jmp
pop
jo
inc
xor
push
fimull
dec
and
scas
cmp
inc
movsl
jg
jecxz
sub
popa
sbb
dec
pop
es
sbb
mov
stos
mov
push
insb
pop
and
sar
lcall
mov
xchg
je
xchg
mov
lds
or
pop
or
in
mov
pop
loopne
cmp
or
enter
jg
ss
ficoml
decl
sbb
fisubrs
imul
xchg
loop
std
gs
add
jecxz
pushl
mov
dec
mov
inc
mov
or
imull
push
fcoms
clc
pushf
mov
out
cmpsl
pop
repnz
mov
enter
mov
sbb
sbb
scas
push
add
and
daa
jl
pop
pusha
lods
jmp
add
sbb
push
das
cmp
mov
adc
xchg
dec
cmp
or
cwtl
aam
fstl
cmp
jb
in
mov
jbe
xor
add
in
out
sub
pushl
inc
xchg
scas
lods
xor
lea
pusha
lcall
cltd
mov
jmp
int
in
mov
es
stc
lcall
bnd
push
mov
push
mov
movsl
in
xchg
pop
cmc
mov
xor
outsl
lock
pop
cmp
movsl
out
shlb
je
sub
icebp
add
out
loope
insb
lret
cmp
sbb
push
call
cmp
or
push
lea
pop
pop
decl
ret
mov
cmp
dec
sub
pop
jl
sar
ljmp
out
inc
xorb
cmp
lods
pop
cmpsl
push
js
xor
mov
mov
inc
mov
mov
dec
cwtl
sub
movsb
incb
inc
push
fdivl
in
dec
pushf
cmpsl
daa
lods
pop
xchg
or
push
dec
in
push
cmp
pop
dec
pop
arpl
sbb
sub
rcr
dec
jmp
add
pop
push
scas
and
and
rclb
mov
call
inc
test
insl
rclb
sbb
icebp
adc
ljmp
decl
cli
pop
sbb
fnstenv
push
mov
lock
call
mov
data16
pop
stos
jge
and
clc
mov
cmc
adc
mov
test
xchg
icebp
addr16
cltd
ret
xor
pop
clc
jg
dec
std
sub
ror
fnstenv
or
lock
repz
inc
jecxz
pushl
cli
mov
jbe
lret
loop
jno
pop
std
pop
sahf
mov
popf
jbe
sbb
inc
cmp
xor
sbb
cmp
outsl
cmpl
cmpsl
sbb
and
jge
fcoms
xor
nop
ljmp
sbb
inc
push
adc
mov
xor
dec
jno
or
outsb
jnp
or
sbb
ret
into
call
decl
cli
icebp
xchg
mov
jge
js
push
push
mov
sti
call
and
hlt
fsubrs
mov
ss
push
ret
leave
xchg
pop
push
and
dec
jno
xorl
lcall
jno
fstl
jno
imul
test
mov
mov
lcall
dec
in
adc
cmp
xor
in
cwtl
jecxz
inc
ja
ja
add
cmp
jge
pushl
loop
inc
pop
push
cmp
scas
fs
fbld
push
push
out
call
or
loopne
cmp
insb
test
jbe
xor
push
or
mov
mov
fcoms
jmp
cmp
movsl
ljmp
insb
out
mov
and
fs
decl
and
rclb
jg
dec
les
inc
aaa
fadds
mov
push
or
dec
sub
loopne
pop
sbb
sub
addr16
jmp
and
and
pop
or
mov
add
pop
cmc
sub
sub
jnp
sub
mov
sti
ret
insl
cmp
or
sub
decl
fistl
call
cmp
insl
and
dec
fidivs
scas
fsubs
lods
ds
cld
mov
in
pop
sbb
and
leave
out
lea
sub
dec
pop
pop
into
or
dec
movsl
push
mov
xchg
je
aam
loope
les
stos
push
ljmp
and
outsl
jmp
test
test
add
stc
shr
jmp
pop
call
outsl
xor
cmp
aas
in
dec
mov
fdivrp
pop
testb
subl
pop
dec
insl
mov
pop
fst
loope
lods
xchg
jg
lcall
push
ficoml
and
xchg
mov
cmpsl
inc
push
cmpb
or
dec
int3
testb
lock
fsubl
xchg
xchg
xor
incl
cmp
cwtl
repz
pop
leave
loope
sbb
lods
jmp
es
repnz
xor
insl
ljmp
jle,pt
inc
push
xchg
ret
mov
scas
add
popf
jae
xchg
negb
popa
dec
not
add
std
lcall
negb
mov
jl
shrl
inc
test
cmp
sbb
jmp
adc
repz
out
insb
and
in
out
mov
sti
push
loop
decl
dec
jno
lea
pop
sar
xor
add
das
mov
dec
and
pop
cwtl
pusha
outsl
mov
outsl
xchg
popf
fwait
inc
pusha
mov
mov
ret
add
cld
fsubs
or
popa
into
cmp
xor
sub
mov
test
loop
repnz
imul
shll
add
mov
mov
push
inc
icebp
imul
pop
sti
xchg
jl
inc
in
pusha
xchg
call
push
and
movsb
pushf
out
cmpsl
inc
outsb
push
and
add
pop
sub
or
sub
add
je
cmpsl
mov
movsl
shl
out
outsb
clc
jle
jnp
mov
mov
pop
std
js
fsubrs
mov
daa
and
out
mov
mov
xor
decl
xchg
add
imul
mov
and
out
sbb
pop
lret
imul
lcall
jae
roll
and
je
ret
out
jbe
ds
push
lcall
subb
clc
mov
dec
add
decl
lods
data16
repz
aam
sbb
or
push
in
or
xor
mov
mov
dec
inc
mov
pusha
aad
pop
out
jmp
insb
mov
pop
lret
repnz
ss
out
cmp
mov
inc
andb
xchg
sbb
jg
rolb
subl
dec
and
mov
pop
sbb
jl
in
inc
call
lock
lcall
rcrb
mov
cs
xlat
cmp
lea
pop
out
in
outsl
cli
push
mov
xor
and
outsl
mov
pop
pop
ds
sub
int
mov
sbb
mov
dec
mov
int3
mov
add
movsl
outsl
jg
sub
adc
cmpsb
add
jns
inc
pop
cmpsb
fwait
daa
in
das
inc
fsubrs
outsl
jmp
sbb
inc
ret
or
xchg
add
movl
xchg
jno
fcompl
shl
nop/reserved
inc
mov
jne
cmp
je
mov
shll
in
mov
xchg
jno
inc
and
adc
sahf
dec
sub
fcoms
imul
jg
mulb
cmp
mov
inc
xchg
fcos
ljmp
mov
dec
mov
loope
ret
mov
cmp
iret
pop
or
xchg
cld
dec
pop
ljmp
icebp
fistpll
push
cwtl
lcall
cld
lcall
add
sbb
dec
sbbb
ljmp
cmp
mov
and
leave
mov
pop
shll
fdiv
mul
inc
adc
pushl
scas
xchg
mov
push
inc
xchg
xchg
mov
test
mov
sbb
add
dec
in
mov
jmp
jmp
sbb
sbb
pop
or
xchg
lock
inc
test
jle
inc
lds
jmp
loop
cld
incl
jge
inc
lea
sbb
lock
ljmp
mov
pop
les
mov
in
int3
fistpll
shlb
cmp
push
jne
inc
cmpsl
push
das
cld
aaa
cli
cmp
aam
dec
sbb
push
icebp
in
repz
jae
sar
in
lret
sbb
xlat
xchg
cwtl
mov
mov
xor
or
mov
jle
push
arpl
push
push
outsl
inc
mov
dec
stc
push
dec
pop
or
imul
xchg
or
add
lea
notl
add
sub
nop
sub
mov
add
cmp
pop
sub
xor
push
dec
jae
xor
orb
push
sub
bound
roll
xorl
xchg
lcall
iret
push
cs
mov
ret
mov
pusha
adc
or
add
add
cs
jmp
lret
out
cmp
mov
inc
les
outsb
dec
sbb
cmpsb
inc
lods
stos
add
sbb
sbb
into
cmp
loop
std
adc
nop
fwait
cmp
mov
or
fdivrp
mov
inc
lea
mov
lret
pop
test
add
ljmp
jg
outsl
jbe
aaa
enter
test
push
sub
idivb
and
repz
pop
inc
xchg
dec
jmp
or
decl
xor
mov
mov
popf
push
mov
lcall
jge
inc
test
clc
ds
pop
mov
jecxz
dec
insb
pop
stos
inc
cmp
push
pop
shrl
lret
ss
inc
fucomip
push
fwait
call
push
inc
sub
jg
je
push
add
nop
pop
jmp
sahf
lock
xchg
loopne
lret
pop
mov
inc
hlt
out
push
push
aad
jg
call
cmp
xchg
pop
xlat
pop
dec
push
jo
fwait
cli
mov
in
xorb
or
add
inc
or
pop
and
sti
mov
icebp
lret
pushl
push
pop
lods
cs
cmpsb
outsl
or
and
std
fildll
shrb
mov
dec
inc
push
xlat
mov
in
adc
cmpb
pop
push
mov
jne
ficoms
and
mov
out
adc
icebp
jne
les
sbb
mov
lret
sub
into
in
adc
jo
rcl
les
or
lock
adc
setb
loope
in
cld
idiv
imul
push
hlt
mov
out
insl
push
scas
xor
hlt
cmpsb
icebp
test
mov
push
shll
xchg
stos
das
cld
mov
inc
mov
clc
addr16
cmp
cld
jg
mov
rcrl
and
loope
jae
sbb
mov
decl
incl
mov
sub
lds
add
pop
cmp
ljmp
xchg
mov
sbb
ret
jl
test
adc
mov
call
cmp
ljmp
mov
jecxz
adc
xchg
rclb
fildll
push
jecxz
or
clc
call
jp
js
pop
mov
mov
pop
pop
inc
cli
pop
and
adc
loopne
mov
xlat
xchg
push
cmpsl
jns
and
lock
ljmp
add
inc
repz
orb
lret
int
lods
sub
rorb
ljmp
inc
arpl
nop
mov
or
pop
cmc
leave
pop
jae
into
cmpsl
or
idiv
fistl
in
popf
adc
mov
lcall
jnp
lret
jbe
sub
fwait
cmpxchg
inc
arpl
dec
fists
cld
mulb
and
stos
in
stos
push
cmpsl
xchg
shlb
mov
cmp
jmp
lods
ss
pop
data16
cwtl
xor
in
call
push
js
idivb
add
rcrb
repz
popa
mov
fildll
sti
sub
push
loope
push
jne
dec
mov
dec
sbb
jle
sar
pushl
cmpl
or
cli
push
mov
mov
out
cli
sbb
adc
iret
adc
stos
jae
mov
xor
adc
adc
push
cli
in
xor
outsb
bound
push
push
inc
dec
cmp
ljmp
jl
cld
dec
pushl
xchg
lods
outsl
mov
adc
lds
jg
sub
push
ja
scas
scas
dec
pop
xor
xor
add
mov
popl
call
out
inc
push
mov
or
jo
pushf
in
pop
sbb
das
movb
shrl
lret
call
or
mov
add
sti
lcall
sbb
ret
or
mov
xchg
pop
mov
mov
mov
jg
and
cmc
aas
cmpsl
sahf
out
add
das
cmp
scas
mov
out
sti
call
aad
sar
ret
cmp
imul
int3
adc
xchg
mov
loop
insb
mov
cmp
push
mov
mov
imul
sbb
mov
mov
mov
jg
or
mov
inc
push
push
dec
adc
fldl
jnp
movsl
mov
leave
and
push
add
dec
or
push
cmp
jo
xorl
loop
push
cmp
mov
push
inc
scas
hlt
xchg
into
push
xor
sub
test
mov
dec
ja
rorl
push
sahf
or
test
and
push
jmp
pop
cmpsl
shrb
out
stos
mov
in
mov
jno
rcrb
movsb
test
push
push
or
icebp
decl
push
adc
jb
mov
sti
jo
lea
xchg
jge
mov
in
push
fisttps
mov
push
inc
popa
cld
sbb
jb
decl
cld
mov
sbb
scas
mov
xchg
shl
jns
cli
call
arpl
out
xchg
mov
test
push
push
sbb
stos
and
xchg
stos
outsl
xchg
aaa
aad
xchg
mov
lds
mov
addl
stos
movsl
push
xor
adc
insl
pusha
test
pop
mov
pusha
icebp
or
ret
cs
in
add
dec
pop
jne
cmp
xor
loop
adc
pop
sahf
in
sbb
loopne
adc
lret
or
sub
and
or
jl
outsb
push
and
call
dec
pmulhw
loop
xchg
call
and
ljmp
in
xlat
aam
in
pop
popa
push
mov
cmp
jmp
ss
stc
adc
lcall
cmpsl
adcl
push
cli
shl
arpl
mov
inc
iret
adc
repz
ljmp
cmc
std
outsb
clc
or
mov
jae
sub
mov
rcr
ljmp
cmc
pop
xchg
lods
adc
adc
decl
sbb
mov
lahf
clc
pop
xchg
scas
repz
mov
jl
dec
cmp
push
imul
sahf
dec
push
frstor
mov
jmp
and
inc
dec
subl
mov
les
push
xchg
inc
fld1
push
inc
fsub
cli
xchg
fimull
cmpsl
fwait
push
dec
lret
fldt
mov
ret
scas
cld
dec
dec
lret
xor
in
call
pop
es
pop
mov
pop
das
jmp
or
enter
mov
jno
mov
xchg
int
push
ret
out
mov
clc
ret
pop
icebp
int
mov
cmc
mov
jmp
std
std
xchg
xchg
insb
out
lock
inc
jo
pushf
fcmovnb
dec
sub
pushf
mov
pop
push
ss
movsb
fisttps
jnp
fxam
icebp
test
dec
inc
and
aam
push
int
mov
call
mov
mov
dec
add
ret
mulb
xchg
push
jbe
and
pop
jge
iret
mov
fistpl
int
loopne,pt
jmp
rolb
sub
inc
pop
push
push
rclb
jmp
mov
lahf
out
shrl
mov
cmpsl
outsb
dec
xor
jo
xchg
frstor
insl
jns
jg
dec
and
mov
fidivl
stos
jmp
dec
stos
dec
int
int3
cltd
shl
lcall
inc
aas
xchg
cmpb
or
nop
pop
sbbl
outsl
cld
mov
cmp
xor
sahf
fimuls
leave
sbb
mov
incl
mov
ret
jno
xchg
xchg
into
into
das
lods
and
paddb
push
inc
pop
sub
mov
int3
jge
jae
in
push
push
aam
push
enter
lahf
or
ret
lods
xchg
popa
popa
scas
mov
inc
push
clc
andl
cld
ljmp
sbb
mov
jo
sub
and
decl
outsl
jg
cmp
push
jno
xorb
jg
and
or
aas
das
out
mov
inc
cmp
mov
inc
inc
lock
jg
mov
jecxz
cs
test
or
and
xor
mov
hlt
lret
fistps
ret
insl
xchg
lret
mov
and
mov
loope
fisttpll
xorl
ret
jae
test
leave
prefetch
push
icebp
add
pop
aas
fmull
popa
cwtl
in
aaa
decl
lea
aam
pop
loope
sub
test
or
jge
sub
flds
inc
inc
mov
insl
mov
shlb
sar
adc
mov
enter
adc
push
mov
dec
push
lea
std
and
cld
push
ja
pop
aaa
xor
dec
in
jge
sbb
push
clc
dec
dec
dec
and
aam
push
lret
clc
jg
mov
daa
test
cmc
dec
pushf
shl
xlat
add
test
mov
movsb
mov
nop
xchg
fcompl
iret
test
and
pushf
sbb
addr16
addr16
pop
mov
cld
inc
xchg
jo
dec
outsb
sub
ret
and
pop
xchg
jge
mov
insl
mov
xchg
and
aam
pop
incl
dec
loopne
adc
test
cwtl
addl
std
test
movsb
inc
push
test
jbe
xchg
add
int3
sub
or
call
push
andl
bound
inc
push
pop
rol
out
stc
bswap
and
or
pop
jo
add
iret
mov
jne
js
inc
out
pop
aam
lret
rcll
icebp
jmp
adc
test
jp
decl
dec
or
mov
loope
or
repnz
and
aam
lea
je
call
shlb
test
and
xchg
mov
cli
jg
jp
in
clc
dec
dec
dec
and
push
sub
out
fldt
adc
test
jno
adc
sahf
in
ljmp
movsl
lds
es
mov
call
pop
adc
inc
xchg
in
call
xchg
pusha
sbb
dec
imul
aas
fstp
add
jg
inc
js
mov
lahf
cmp
insl
mov
dec
pop
pop
mov
push
loop
into
mov
sub
addr16
shl
call
out
mov
add
movsl
inc
cmc
sbb
out
push
lods
or
cltd
adc
aas
dec
loop
inc
inc
mov
out
add
push
jnp
stos
mov
iret
outsl
lcall
sub
adc
lret
cmp
jns
lods
dec
shll
fwait
dec
gs
mov
movsb
stos
in
lret
inc
ret
leave
ror
jbe
mov
mov
stc
ljmp
sahf
test
ja
xlat
mov
nop
dec
out
xlat
dec
sub
aaa
inc
jb
mov
bswap
push
jne
rdtsc
push
jg
xchg
jle
fistps
mov
xor
and
lcall
mov
xchg
fsubs
popa
test
cmp
xchg
les
out
jb
iret
mov
pop
das
nop
xchg
scas
and
fdivrp
repz
sub
fsubl
mov
jns
out
pop
fisubrs
scas
pop
call
mov
jg
push
ret
fcoms
int3
outsb
idivb
loope
xor
mov
mov
push
fs
mov
push
ret
jmp
filds
mov
int
fwait
or
and
xchg
lock
sbb
dec
jg
enter
scas
jns,pn
cmpsb
outsb
fnstcw
dec
out
and
xor
mov
in
cs
pop
xchg
lcall
push
jl
jge
test
add
cmp
push
int3
jle
and
cmc
outsl
icebp
test
push
popa
fidivs
mov
add
iret
ljmp
jbe
xchg
lds
jmp
xchg
test
sub
roll
incl
outsb
push
int3
push
jbe
dec
mov
pop
jmp
call
out
outsb
cmpl
ljmp
ds
push
mov
and
mov
outsb
push
test
mov
jg
stos
mov
idivl
mov
test
mov
cmc
aas
cltd
mov
stos
orps
stc
mov
jg
mov
xchg
fldt
mov
mov
mov
push
jle
ret
push
sahf
incl
lret
mov
inc
sub
jno
loope
cmp
cld
jmp
and
mov
dec
popf
jbe
xchg
or
mov
movsb
scas
in
cmpsb
jmp
fdivr
pop
loopne
mov
icebp
xor
mov
xchg
in
scas
inc
mov
call
xorl
or
cmp
push
rcrb
mov
pop
sub
sub
adc
mov
outsb
arpl
cmp
jb
jbe
xchg
cmp
jmp
stc
lds
fidivl
jecxz
in
lds
jmp
push
add
xchg
lret
dec
test
addr16
pop
clc
pop
push
pop
pop
pop
cmp
or
out
xchg
dec
fistpl
sbbl
stc
add
pop
fdivrp
lods
pop
fimuls
ffreep
iret
test
cmp
rolb
dec
add
lcall
xchg
jbe
lcall
xor
aas
repnz
stos
in
sub
ret
outsl
push
cmpb
push
test
ss
ficoms
add
mov
cli
test
adc
fisubrs
mov
ret
mov
mov
jno
movsl
in
outsl
lods
mov
outsb
nop
xor
jb
enter
xchg
xor
mov
nop
inc
pusha
add
pop
dec
stos
add
lods
lcall
cld
incl
lcall
push
call
call
repz
dec
addl
inc
frstor
fcomps
ljmp
cld
aam
leave
or
push
pop
pop
mov
aas
mov
and
sub
adc
lret
outsb
mov
das
sub
push
jbe
xchg
mov
adc
stos
jne
stos
lock
cltd
pop
icebp
outsl
dec
lcall
mov
sbb
xchg
test
dec
mov
add
push
jle
test
call
rclb
mov
out
add
push
out
cmp
dec
cmp
cmp
cmp
mov
mov
cmp
in
call
cmp
sub
decl
dec
ds
dec
aas
mov
xchg
aas
popf
aas
int3
aas
fdivrl
jmp
stc
aas
aas
ljmp
dec
or
push
xor
xor
xor
xor
xor
xor
xor
cld
xor
xor
jne
xorl
ljmp
xor
xor
das
xor
xor
xor
mov
and
xor
xor
ds
push
dec
sar
mov
divl
jle
test
popf
xor
call
xor
xor
xor
mov
in
divl
add
adc
daa
xor
add
xor
xor
xor
xor
xor
inc
xor
xor
enter
fdivs
ss
ss
arpl
ja
xchg
aaa
mov
pushl
xor
cmp
cmp
cmp
fidivrs
dec
cmp
cmp
pushl
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
imul
ds
ds
mov
ds
ds
ds
or
sbb
xor
cmp
addr16
insl
stc
outsl
mov
aas
xchg
pop
mov
aas
mov
test
mov
xor
push
mov
pop
xor
xor
xor
jbe
dec
sub
movsb
xor
xor
scas
jns
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
in
pushl
xor
xor
xor
xor
xor
xor
ss
or
pop
pushl
or
cmp
cmp
jge
mov
mov
cmp
int
cmp
cmp
lock
decl
fs
cmp
cld
cmp
ds
enter
add
adc
and
sarl
aas
in
out
jmp
mov
xor
xor
xor
cld
fcomip
pushl
rdmsr
pop
xor
insl
xor
pop
lds
int3
xor
xor
sbb
and
xchg
or
cmpsl
xor
xor
sarl
mov
xor
dec
xor
cmp
mov
mov
inc
aaa
xlat
aaa
in
repz
stc
aaa
add
cmp
cmp
cmp
cmp
cmp
jg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
je
xchg
sbb
and
sub
lock
outsl
fistpll
ljmp
and
sub
cmp
inc
aas
dec
aas
pop
aas
jae
je
aas
xchg
lods
aas
mov
mov
xor
cld
outsl
lea
xor
xchg
fidivl
add
call
clc
xor
xor
xor
cmpsl
xor
inc
xor
xor
xor
outsl
mov
dec
xor
xor
lds
ss
and
ljmp
aaa
dec
aaa
dec
aaa
pop
aaa
pop
aaa
push
aaa
jle
xorl
aaa
lcall
mov
aaa
mov
aaa
iret
aaa
aam
loope
out
aaa
divb
cmp
cmp
cmp
inc
cmp
pop
cmp
push
cmp
test
mov
nop
cmp
sub
cmp
loop
jmp
push
cmp
push
cmp
adcl
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
adc
and
cmp
aas
cmp
push
cmp
outsb
cmp
cmp
cmp
outsl
pop
loopne
cmp
icebp
and
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
sti
pop
jg
sahf
cmp
cmp
cmp
mov
sar
fistpll
cmp
cmp
push
xor
jge
mov
jo
jnp
pushf
pop
sub
ds
int
nop
aaa
std
jmp
mov
mov
xchg
xor
xor
mov
xor
xor
xor
xor
xor
xor
lock
dec
xor
xor
xor
xor
leave
or
xor
cli
xor
mov
ss
ss
ss
aaa
insl
aaa
je
xchg
cli
mov
test
mov
les
fnstenv
loopne
in
aaa
repnz
out
mov
repz
cmp
cmp
imul
call
cmp
cmp
cmp
cmp
mov
cmp
decl
cmp
cmp
xor
cmp
cmp
pop
cmp
cmp
std
cmp
mov
push
andl
lods
mov
or
loopne
xchg
xor
andl
push
aaa
inc
cmp
cmp
push
mov
mov
jns
mov
idivb
mov
pop
pop
popf
rcrl
cmp
decb
popf
fstps
cmp
test
cltd
cmp
cltd
and
out
js
leave
fcoms
and
aad
add
xor
add
inc
daa
pop
loope
addb
mov
xor
cmp
pop
sub
mov
jle
imul
push
je,pn
js
or
subb
nop
jmp
jge
sbb
and
pusha
push
mov
lret
pop
jnp
dec
xchg
lea
or
jb
jb
sub
fwait
cmp
and
cld
push
mov
lahf
pusha
and
inc
popf
and
inc
xor
push
add
lock
movsl
mov
inc
mov
mov
jnp
loopne
adc
adc
inc
and
inc
dec
add
mov
mov
call
sub
jl
adc
adc
push
sub
push
cs
loopne
push
mov
fldl
add
pop
pop
in
sub
push
pop
mov
xchg
movsl
or
inc
lods
in
or
mov
std
adc
int
loopne
movsl
movsb
test
add
push
xor
mov
je
pop
add
push
hlt
test
push
inc
or
fcoms
push
add
fldenv
adc
test
call
mov
mov
fwait
or
fcoms
or
je
sub
add
int3
jge
push
sub
cmp
jbe
test
flds
dec
lock
add
insl
jnp
je
push
sbb
shr
int
fsubrp
cmp
pop
pop
push
out
lahf
lock
sbb
or
ret
loopne
jbe
orb
xor
add
jne
hlt
cmp
add
idiv
fdivs
cmpl
jbe
xchg
xor
fstps
inc
test
adc
sbbl
push
inc
in
mov
out
adc
and
ja
pusha
mov
sbb
fidivs
test
pop
pop
es
mov
lret
pop
and
push
and
in
and
les
pop
sbb
xlat
add
fildl
repnz
xor
insl
hlt
push
or
insl
add
popf
popf
sub
adc
cs
pop
xchg
sub
dec
insl
xchg
test
fs
jae
je
movsl
orb
insb
dec
and
dec
inc
jg
repnz
sub
add
mov
mov
add
sub
mov
gs
dec
inc
shlb
insl
gs
mov
fwait
int
or
lcall
push
add
inc
adc
inc
aaa
jb
inc
ss
lea
jecxz
mov
lds
dec
call
add
adc
iret
cli
call
or
jg
test
std
movsb
scas
lea
push
push
fsts
sbb
mov
mov
dec
mov
jns
cmp
sahf
jbe
adc
push
push
push
ret
xor
sbb
add
jne
or
rolb
jno
xchg
pusha
ret
inc
and
ja
and
cmp
or
mov
sbb
repnz
clc
xchg
adc
lret
fimuls
adc
or
and
push
or
stos
call
std
stc
xor
clts
jmp
xor
or
int3
or
insl
pop
aaa
and
or
mov
ret
sbb
add
leave
mov
cmp
clc
loope
add
pop
jae
pop
das
sti
cmpl
jno
and
xor
ret
pop
out
sub
adc
outsb
imul
xor
jo
push
inc
push
xchg
or
add
inc
inc
xchg
adc
inc
bound
sub
push
cmp
sbb
sbbb
ret
enter
mov
sbb
or
adc
ret
nop
mov
inc
je,pt
push
popf
orb
clc
xor
and
inc
das
jge
mov
and
dec
test
push
cmp
or
cmp
jl
int3
cld
mov
cmp
or
push
inc
das
add
das
or
lods
repz
lods
add
push
adc
jg
push
lret
andl
pop
mov
push
sub
mov
lret
mov
add
mov
sub
gs
cs
insl
mov
gs
aam
aad
add
xlat
popa
pushf
jne
lret
mov
outsb
arpl
or
loopne
loop
pop
xchg
lods
push
js
bound
pusha
lock
fs
sti
xor
call
outsl
add
jne
loope
call
and
ss
hlt
pop
je
negb
cmp
gs
add
leave
lret
imul
imul
dec
xchg
imul
rcl
xor
mov
push
cmp
or
sar
imul
repnz
movb
std
jmpw
enter
test
bound
mov
sub
or
jmpw
inc
std
js
loop
pop
pop
push
ja
dec
aad
inc
add
fcoml
add
fs
pusha
lods
leave
mov
pushf
cmp
divb
push
push
inc
sub
es
sbb
sub
push
mov
rolb
nop
cmp
adc
lods
lds
mov
mov
ret
or
adc
dec
std
bound
xlat
push
push
adc
or
jg
int3
sbb
dec
push
decl
jne
in
or
jl
outsl
push
add
sbb
aaa
je
test
xchg
imul
insl
mov
jmp
and
adc
mov
sbb
rol
scas
and
mov
shlb
push
add
mov
je
in
fxch
mov
push
mov
loope
sbb
mov
or
nop
inc
aaa
xchg
cmpsl
jle
fucomp
cmp
mov
rorl
mov
outsb
rcrl
cmp
call
sbb
call
add
lret
cs
xor
fldcw
iret
fsubrl
cmpsb
imul
jae
add
gs
gs
xchg
gs
insb
popa
jne
cmp
outsb
arpl
cs
mov
movsl
or
jno
outsl
sub
cmc
mulb
gs
mov
jo
xchg
gs
insb
outsl
jb
mov
gs
fstps
mov
mov
call
cmp
cs
mov
ror
mov
xor
mov
shr
or
fdiv
add
movsb
loopne
inc
push
rcll
leave
xchg
std
cli
loop
fstl
mov
inc
add
cltd
adc
mov
stos
pusha
dec
push
xor
out
movsl
sahf
adc
repnz
sub
je
testb
ds
addr16
push
pop
pmaxsw
sub
adcl
mov
jne
push
js
imul
inc
mov
subl
add
mov
or
aam
add
fdivr
push
add
mov
movsl
inc
mov
in
xchg
int
les
in
mov
mov
add
es
dec
inc
and
mov
pusha
pop
sbb
pop
add
testb
push
or
and
cmc
push
insb
mov
insl
add
mov
lret
xor
jp
add
sti
sub
sete
mov
pop
xor
pop
cmp
leave
pop
mov
arpl
inc
add
jae
fsin
fisttpl
or
mov
or
jo
add
inc
call
pop
pop
add
adc
fdivrp
or
add
push
and
cmp
inc
inc
pushf
nop
pop
and
inc
push
lcall
push
sbb
inc
push
enter
add
addb
cmp
lret
fiadds
push
adc
test
mov
and
jo
and
inc
push
jnp
cmpsb
add
fcoml
cmp
push
add
ret
or
std
mov
jne
mov
jmp
mov
cmp
je
ja
aad
adc
mov
cmp
je
movsbl
test
filds
fldt
sti
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
fbld
je
and
dec
inc
mov
divb
sub
jl
add
jg
xor
mov
inc
cmp
shll
std
sbb
cmp
je
rcrl
mov
xorb
addb
imul
mov
test
lds
push
cmp
sti
jge
jbe
adc
jmp
add
jae
sub
in
movsl
ret
les
loope
inc
mov
int3
cmp
inc
shlb
popa
shll
inc
cmpsl
add
dec
test
fadds
pop
inc
pop
cmpsb
imul
lcall
sahf
mov
xor
mov
out
inc
ret
scas
cmp
test
dec
inc
cmp
cs
mov
imul
inc
mov
cmp
pop
rorb
inc
jo
stos
push
mov
sbb
mov
mov
push
push
out
or
add
or
xchg
pop
or
mov
jg
jl
dec
popa
jns
jne
jae
xor
or
sub
add
sub
sti
imull
xor
jg
outsb
xor
or
js
frstor
scas
xchg
jnp
push
jg
jae
sub
push
push
mov
mov
add
add
pop
push
cwtl
inc
adc
nop
rcrl
inc
in
add
or
mov
dec
inc
jo
fs
add
and
and
adc
adc
loopne
fmull
sub
mov
repz
leave
adcb
inc
pop
shll
and
adcb
and
arpl
mov
sti
jo
mov
or
mov
add
jns
add
cmpb
adcb
or
sti
sbb
inc
xor
imulb
outsw
es
loop
outsb
insl
loope
sub
adc
mov
push
stos
sbb
jle
jo
jle
lcall
mov
and
mov
push
outsb
jb
adc
fmuls
outsl
inc
mov
inc
outsl
js
xchg
sub
dec
jge
xchg
dec
gs
jae
inc
sbb
push
add
adc
and
scas
and
add
xchg
add
inc
nop
and
mov
jg
in
lret
cmc
lods
push
cltd
insl
insl
dec
jae
mov
push
add
sti
add
cwtl
or
jb
lret
dec
pop
js
sbb
bnd
mov
mov
jne
mov
outsl
jb
inc
std
add
pop
adc
cmpsb
jmp
sbbb
cwtl
pop
stos
ss
mov
inc
int3
dec
pop
or
shll
jmp
mov
pushf
dec
xlat
xor
mov
sti
rorl
shlb
or
mov
add
jecxz
pop
jge
adc
dec
xchg
or
or
mov
rclb
test
insb
mov
and
outsl
xchg
push
jne
adc
push
lret
jnp
mov
adc
ret
adc
xchg
mov
cmpsl
fs
jno
lds
adc
mov
mov
push
dec
or
mov
mov
jnp
imul
fadd
fsubrs
xorl
fisubrs
outsl
pop
jns
pop
pop
pop
adc
loopne
lret
je
pop
fistpl
popw
lds
adc
shrb
cltd
stc
roll
imul
mov
sbb
add
add
orb
int
pop
add
add
lret
push
clc
pusha
push
aas
add
int3
ja
adc
pop
movsb
push
or
jne
mov
cmovns
gs
mov
jae
inc
mov
add
push
sub
add
jb
inc
jae
mov
pop
push
gs
pop
jb
lret
outsl
and
mov
rolb
xor
jecxz
inc
and
add
outsb
inc
jae
and
imul
add
movsl
popa
and
insl
ret
int3
add
addr16
scas
jnp
aaa
jo
imul
xchg
and
add
and
push
adc
or
imul
fnstenv
xor
jmp
scas
popa
pop
aaa
outsb
xchg
insb
popf
xchg
pop
ds
sbb
jo
popf
addr16
mov
sub
pop
xor
xor
inc
mov
push
sub
or
insb
mov
imul
dec
dec
imul
push
mov
out
daa
jbe
mov
mov
outsl
pcmpeqw
jae
mov
or
xor
inc
push
imul
and
arpl
stos
sbb
out
add
push
push
pushf
or
js
popf
test
nop
std
mov
sbb
sub
incl
mov
xor
xor
xor
sub
push
xor
insl
cmp
xor
xor
xor
xor
test
mov
adc
ss
aaa
dec
cmc
aaa
mov
fstpt
cmp
incl
cmp
cmp
cmp
cmp
sarb
cmp
cmp
jo
mov
loop,pt
cmp
ds
ds
jle
movsl
ds
ds
xor
sub
aas
xchg
aas
jbe
fwait
dec
xor
push
xor
and
sub
bound
or
sub
xor
add
test
sbb
mov
loopne
pop
idivb
test
jb
add
hlt
jl
xchg
out
fistpll
adc
fildl
inc
out
flds
test
enter
maskmovq
notl
add
in
aaa
mov
out
add
into
adc
or
add
enter
pusha
and
mov
lds
popa
xchg
inc
xchg
outsl
iret
adcl
add
push
repnz
lods
add
ja
adc
adc
dec
aam
mov
daa
inc
push
dec
aam
push
mov
adc
push
cmp
gs
bound
xor
push
das
cmpsb
imul
cmpsb
imul
cmpsb
imul
jmp
ja
sub
dec
xor
pop
in
add
fcoms
flds
scas
int3
jp
pop
sbb
cwtl
xor
add
inc
sbb
add
add
adc
shl
test
dec
lcall
out
and
fwait
outsl
lds
or
test
mov
sbb
outsl
jmp
stos
xor
dec
push
or
pop
adc
add
xor
sti
fadds
stc
and
daa
mov
add
or
xchg
mov
jmp
in
or
and
dec
push
sbb
aad
and
adcl
or
add
inc
dec
push
and
and
and
mov
jns
and
push
xchg
es
or
jne
and
daa
add
mov
out
pop
sub
std
out
sbb
fsubr
push
data16
mov
cld
and
icebp
nop
inc
cs
call
jb
cmp
mov
mov
add
call
clc
mov
lret
push
push
in
pop
rcrb
repnz
ja
das
cld
lea
cmpl
test
ret
loopne
das
sbbl
inc
movsb
leave
ljmp
andb
mov
mov
inc
hlt
out
cmp
add
addl
movsl
ljmp
xchg
mov
push
faddl
xchg
xchg
call
add
mov
push
fnstsw
imul
pop
push
aas
pop
cmp
inc
push
pop
mull
cmp
out
cld
push
dec
adc
fnstcw
xor
mov
call
or
data16
pmulhuw
sbb
shlb
or
xchg
mov
cmp
pop
popa
jle
add
pop
clc
daa
push
hlt
inc
push
ss
dec
mov
xor
jl
jmp
imul
inc
pop
and
sub
int
or
and
stc
lock
mov
repz
call
je
loope
push
mov
add
int3
adc
mov
cmp
push
adc
mov
jmp
pop
jle
inc
add
lea
jg
mov
push
cld
mov
dec
mov
jne
es
pushl
push
push
or
in
inc
add
imul
mov
pop
cmpsb
mov
pop
das
fcoml
mov
pop
mov
mov
and
in
pop
pop
loopne
sbb
clc
dec
call
inc
mov
jg
mov
jle
lea
jo
inc
sub
or
scas
popl
jne
mov
inc
nop
add
fnstenv
dec
inc
jecxz
xor
mov
xor
je
inc
nop
and
sub
lcall
mov
mov
add
jmp
pop
mov
inc
and
adc
rolb
and
test
adc
pop
daa
add
add
cmp
xor
cld
jns
call
push
adc
daa
lds
push
inc
push
mov
out
mov
int
push
das
adc
mov
mov
in
out
cmp
add
inc
inc
aaa
sbb
inc
pop
fstpt
add
push
lea
int
jne
pop
mov
rep
mov
pop
ficomps
lods
jb
dec
xor
decl
mov
or
sarb
pop
jl
jmp
push
mov
imul
js
fadd
clc
push
add
out
jp
xchg
sbb
mov
je
xchg
add
and
inc
ljmp
cwtl
and
or
xchg
mov
sti
add
mov
push
lea
or
cmp
pop
mov
push
mov
push
int
fnstsw
sbb
in
push
negb
sbb
call
xchg
inc
lcall
or
add
push
push
mov
leave
and
sub
xor
mov
int3
jo
xchg
and
jno
push
mov
push
push
call
loop
aas
add
in
fdivp
int3
stc
clc
adc
movsl
and
inc
int
fidivs
add
sbb
inc
lahf
add
addr16
mov
dec
repnz
call
push
in
fidivrs
loopne
dec
test
and
xchg
mov
add
imul
adc
jns
fistpl
sbb
sbb
fstp
fistps
sbb
sbb
loope
jecxz
sahf
or
in
aam
inc
inc
inc
inc
xlat
fcomp
inc
inc
inc
inc
fcmovu
inc
inc
inc
inc
loopne
dec
sahf
inc
inc
loop
loopne
test
idiv
decl
int3
xor
je
cltd
cmp
sbb
lret
inc
sub
inc
xchg
movsb
dec
andl
xchg
out
nop
aam
mov
sbb
rcl
and
pop
in
sub
call
adc
and
fcoml
insl
sbb
push
push
popa
in
push
cld
je
notb
loopne
inc
jnp
sbb
out
mov
cmp
test
or
and
in
sarl
jl
inc
dec
mov
and
arpl
das
mov
pusha
add
cwtl
inc
push
add
sbb
or
adc
les
xor
shlb
xor
add
add
mov
xor
add
add
mov
mov
or
mov
add
add
pop
xorb
lahf
bound
mov
je
or
sub
jbe
adc
jo
inc
outsb
jbe
sbb
xchg
aas
jae
or
lods
insb
jle
xor
cmp
lods
push
lret
inc
and
sub
mov
and
cmp
xchg
cmp
rcrl
add
inc
cmpb
movsb
sbbb
jbe
jb
jb
mov
ret
add
pop
dec
outsb
das
fisubrl
inc
sbb
inc
jns
es
in
lods
je
outsl
insb
jae
dec
into
insb
xlat
adc
and
pop
cmc
xchg
add
stos
add
sbb
push
inc
je
and
xor
in
rolb
das
fdivl
fwait
scas
sbb
enter
fdivs
outsb
or
out
daa
dec
sub
mov
pop
sub
inc
nop
das
dec
xor
or
incl
xor
xor
xor
xor
xor
jg
xor
mov
xorl
mov
ss
aaa
mov
xchg
fldt
inc
pop
loopne
cmp
cmp
add
adc
cmp
cmp
jle
or
jl
mov
xchg
cmp
adc
inc
cld
cmp
cmp
arpl
mov
or
cmp
bound
mov
dec
cmp
sahf
cmp
push
popa
push
push
or
inc
mov
cmpsb
xor
mov
and
add
jp
xor
push
add
lret
cmc
push
gs
jne
arpl
sti
notb
outsl
data16
cmp
add
aaa
mov
ja
add
push
sub
aad
sub
or
add
sbb
pop
or
int
shrb
test
mov
sbb
lock
mov
dec
push
inc
cmpsl
je
inc
push
and
hlt
push
stc
gs
repz
int
add
and
arpl
inc
int3
sub
mov
add
adc
hlt
mov
add
nop
add
ljmp
scas
xor
or
dec
and
or
add
sbb
add
pop
and
push
push
dec
mov
add
sbb
imul
add
in
inc
add
adc
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
