int3
add
add
add
add
cmp
add
mov
add
or
add
add
add
call
add
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
add
jo
add
test
add
xchg
add
add
add
pusha
add
add
add
test
add
xchg
add
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
add
add
add
add
add
add
adc
adc
add
pop
sub
or
pop
sub
push
add
daa
push
add
sub
adc
adc
sbb
pop
or
ud2
sbb
inc
sub
or
pop
push
pop
sub
or
adc
or
ud2
sbb
inc
sub
pop
or
sub
or
add
or
daa
or
push
sbb
push
cmp
add
daa
or
push
add
pop
add
push
sbb
sub
adc
push
or
adc
adc
or
add
sbb
or
adc
sub
sub
or
or
adc
sbb
daa
adc
sbb
sub
or
or
or
or
pop
sbb
pop
add
adc
sbb
sub
or
or
or
pop
sbb
pop
add
sub
add
or
add
sbb
push
sbb
or
or
or
sub
push
add
or
push
add
daa
or
or
or
sub
push
add
add
or
aas
sub
or
and
sbb
xor
and
and
or
add
push
sub
or
jno
or
sbb
add
or
sbb
push
pop
push
sub
xor
sbb
add
push
adc
add
movlps
add
sbb
add
or
or
adc
dec
push
add
adc
add
or
or
pop
cs
sub
and
sbb
or
sbb
lsl
add
adc
adc
adc
adc
adc
sub
sbb
aas
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
es
iret
add
pop
push
or
add
pop
add
add
sbb
add
add
outsb
push
add
or
push
add
daa
or
or
or
or
or
adc
sbb
sub
add
es
adc
or
add
push
pop
es
unpckhps
or
pop
sbb
or
daa
or
push
add
sbb
and
add
sbb
pop
add
dec
and
add
sub
and
adc
add
add
add
add
add
and
or
adc
or
or
and
add
or
or
or
or
adc
mov
add
pop
or
adc
or
or
or
or
adc
mov
add
pop
or
adc
or
or
or
or
adc
mov
add
or
add
add
add
or
push
daa
push
adc
sub
adc
add
add
add
or
add
add
push
sbb
add
adc
or
add
adc
sub
adc
or
add
adc
add
sbb
push
add
adc
or
add
add
adc
add
pop
or
or
or
add
add
add
add
add
add
or
or
wbinvd
or
push
adc
add
or
or
sbb
add
add
inc
or
add
push
add
adc
or
push
adc
sub
and
inc
add
or
sub
or
add
or
add
add
push
or
or
add
and
push
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
or
add
push
pop
push
pop
push
sbb
add
and
or
daa
add
add
pop
add
add
add
inc
or
and
or
adc
or
or
or
or
adc
mov
add
adc
push
add
add
add
or
add
add
add
or
push
sbb
add
or
pop
add
add
sbb
adc
add
sbb
adc
push
add
adc
pop
push
das
or
pop
push
add
add
or
add
pop
sidtl
push
and
adc
or
push
pop
or
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
cmp
cmp
or
add
adc
pop
or
add
add
or
adc
add
push
pop
push
add
add
add
add
add
add
add
add
add
add
adc
gs
add
add
add
adc
add
or
add
adc
or
add
add
sbb
mov
add
incl
add
add
add
add
push
add
in
add
push
jb
adc
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
add
dec
inc
add
add
jg
aad
xchg
cld
inc
pop
add
xchg
bound
out
aad
pop
bound
inc
push
sti
aas
add
mov
rorb
add
mov
dec
loop
lock
insl
mov
dec
push
divl
dec
mov
into
cmp
cmp
nop
cmp
test
jl
jno
cltd
push
adc
mov
sub
mov
push
pop
mov
les
inc
aas
inc
or
std
pop
sub
adc
cmp
subl
rolb
push
test
lods
adc
out
inc
call
rolb
test
inc
enter
fwait
xchg
aam
inc
xchg
add
rclb
mov
pop
loop
cwtl
jbe
scas
mov
adc
inc
movsl
sbb
xchg
cltd
sbb
pop
xchg
imul
gs
push
inc
rolb
add
push
push
fs
xor
xor
jae
sbb
sub
fsubrl
push
adc
and
mov
ret
cmp
dec
aam
data16
ja
lds
pop
nop
cwtl
scas
xchg
loop
sbb
add
ret
ss
stos
or
fistpll
inc
xor
push
inc
sub
or
and
push
loop
xor
lea
xor
pop
mov
push
push
rcrl
mov
adc
aam
jl
insl
jno
dec
or
xor
mov
in
mov
mov
mov
stos
push
movsl
xorl
or
fdiv
lret
out
outsl
mov
test
popf
lahf
roll
popa
dec
inc
add
cs
adc
add
cmp
push
cwtl
sbb
cs
pop
push
aas
scas
fwait
test
sub
xor
aam
push
pop
inc
inc
outsl
out
add
push
insl
pop
cwtl
ds
dec
sub
sbb
sbb
fwait
inc
xor
mov
mov
orb
inc
cmp
enter
cmpsb
sbb
movsl
cmp
cmp
fmul
les
mov
mov
repz
mov
and
cmpsb
xchg
cmp
dec
xor
jns
and
fstpl
repnz
dec
iret
sub
andb
add
loop
push
or
add
test
repz
mov
enter
add
push
mov
and
add
inc
imull
dec
add
cmp
mov
rorl
and
shlb
lcall
outsl
sub
shrl
cmpsb
in
jge
mov
scas
add
or
dec
lock
inc
dec
jae
addps
lahf
sub
mov
das
lock
sub
das
pop
mov
or
les
sub
js
sub
jo
and
mov
lret
cs
add
mov
outsb
and
daa
fsubrs
and
adc
jecxz
movsb
pop
mov
xchg
xchg
lds
test
and
jp
sub
mov
mov
mov
inc
aad
sub
push
inc
incb
add
test
pop
jecxz
add
scas
pop
aas
out
inc
cmp
in
or
mov
mov
dec
imul
jecxz
addr16
inc
cld
cmp
subb
test
pop
push
jle
sbb
mov
and
js
mov
cld
cmp
andb
imul
icebp
outsb
push
jne
sub
sub
test
and
lret
iret
shlb
test
xchg
or
les
adc
lret
jecxz
int3
inc
and
cmp
mov
js
xor
andb
jecxz
mov
push
xlat
jbe
adc
lahf
mov
mov
fcmove
in
test
in
cmp
jne
loop
push
xchg
lea
mov
adc
scas
ja
stos
sub
xchg
andb
adc
sub
inc
push
push
cwtl
mov
and
lods
push
outsb
mov
mov
dec
and
mov
in
push
push
addr16
dec
adc
and
stos
sbb
push
jne
inc
imul
mov
mov
leave
adc
rcrb
and
fcmovne
inc
xor
jns
push
mov
jb
cmc
aas
push
sub
fwait
and
sbb
les
xchg
push
push
sbb
push
jecxz
and
notl
jg
lods
mov
dec
adc
mov
xor
or
push
bnd
out
sub
sub
ss
out
hlt
js
xlat
cmpsb
or
scas
fcomps
push
sub
jb
mov
push
str
mov
cltd
cmpb
sub
dec
mov
xchg
push
push
mov
popa
inc
or
or
sbb
push
inc
add
mov
add
fcom
dec
subb
loop
inc
push
sub
mov
mov
out
mov
jle
pop
sub
xchg
test
inc
ja
lds
test
pop
adc
ret
outsb
adc
ret
jl
lahf
loop
inc
scas
orb
push
cmp
pop
aad
cmp
ret
inc
mov
or
inc
or
xor
push
lods
in
dec
lds
mov
stos
dec
mov
mov
or
scas
out
icebp
adc
mov
mov
stos
mov
pop
cltd
mov
dec
dec
cmpsb
sbb
push
stos
test
adc
loop
mov
cmp
aam
shrb
andl
or
cwtl
and
sbb
leave
out
xlat
icebp
stc
xlat
inc
les
popa
dec
jg
xchg
insb
int
sbb
adc
sbb
sbb
mov
xor
sub
and
and
mov
test
es
sub
aas
xchg
int
push
repnz
mov
sti
fmuls
push
dec
pop
lods
sub
or
adc
pop
mov
mov
pop
sbb
stos
sub
in
add
xor
sub
cmpsb
cwtl
test
or
sbbb
pop
inc
and
and
pop
dec
and
push
loope
fldl
andb
hlt
jle
sbb
push
aas
rol
xchg
sahf
xchg
sbb
xchg
sarb
jl
fisttps
sub
insl
push
enter
mov
roll
jmp
mov
fmulp
pop
mov
fidivl
jns
into
adc
xchg
ja
int
leave
pop
in
leave
mov
inc
sub
dec
decb
or
adc
push
add
sub
fmuls
jno
or
test
insb
cli
push
popa
push
dec
ret
imul
dec
lret
mov
xchg
xchg
mov
dec
cmp
stc
or
mov
adc
mov
loope
cmc
cmp
sub
xorl
imul
iret
jecxz
sti
je
and
jno
cmp
stos
inc
sbb
movsb
lret
inc
stos
psubusb
jbe
sahf
sub
add
imul
dec
scas
sbb
aad
andl
cmpsl
sbb
in
inc
insl
and
ds
popf
jno
inc
fsts
lods
ficompl
mov
les
inc
push
inc
pop
xchg
inc
lods
push
and
jbe
adc
test
sub
sbb
adc
or
in
bound
cmpsb
mov
cmpsb
mov
xchg
mov
cld
outsl
push
iret
ret
jae
pop
gs
push
fsts
cmp
bound
cmp
mov
pop
out
or
push
rclb
imul
pop
fcoml
outsl
sub
inc
pop
mov
lods
pop
es
jno
mul
pop
sbb
stc
es
movsl
nop
jno
mov
iret
pop
or
and
in
inc
out
cltd
xchg
movsl
cltd
adc
js
js
cmpsl
mov
pop
loop
repz
xchg
stc
mov
inc
addr16
xor
mov
call
add
sub
repnz
in
jns
xchg
push
push
shll
pop
fsubrl
gs
sub
test
mov
jmp
push
fdiv
test
gs
inc
xchg
mov
inc
cmpsb
mov
mov
push
push
test
inc
shl
out
sub
inc
jb
scas
in
push
scas
aaa
xor
mov
rcrb
cmp
and
pop
pop
test
outsb
lds
cli
add
stos
push
popa
cwtl
shlb
xchg
cmp
adc
or
push
aas
loop,pn
and
mov
mov
inc
push
push
cld
adc
pop
fdivr
inc
jecxz
sbb
and
or
pop
xor
movsb
int3
dec
lds
subl
mov
mov
shrb
add
lret
inc
sbb
xor
mov
jb
xchg
cmp
stos
rorl
pop
jmp
fisubrs
fsubl
es
int3
out
pop
push
adc
mov
fidivrl
loope
jg
jl
sub
pop
aad
push
push
subb
mov
cmp
pop
mov
jo
ljmp
sub
mov
insb
mov
inc
cli
sub
and
sbb
mov
loope
push
mov
adc
xor
sub
fdiv
mov
ljmp
adc
sarb
es
out
mov
or
pop
cmp
pop
lods
shl
mov
mov
dec
sub
je
xlat
in
dec
repnz
push
aad
dec
shll
stos
imul
lret
cmpsl
mov
pop
insb
fnstsw
test
les
in
xchg
push
mov
sbb
xchg
cmp
movsl
mov
xor
lods
subl
add
and
mov
std
mov
in
mov
test
enter
mov
lods
push
pop
lahf
in
sahf
lock
or
test
sbb
cmovge
mov
dec
dec
add
out
or
popf
fwait
jmp
inc
or
jnp
pop
adc
sbb
adcl
test
push
or
sub
xchg
stos
cmp
out
icebp
jb
adc
sub
jmp
mov
cmc
and
call
out
cli
loopne
push
cli
dec
inc
adc
aaa
hlt
push
sarl
ds
call
or
inc
mov
je
and
cmp
loop
pop
in
test
mov
cmc
mov
adc
sub
sub
adc
mov
pusha
cmp
pop
je
cmpsb
push
aaa
insb
aam
inc
mov
and
cmp
push
sub
lods
mov
jb
xchg
and
mov
cmp
data16
and
add
sub
mov
fadd
xor
adc
inc
imul
cmp
and
jl
sub
fcoml
push
or
mov
jo
push
add
add
test
pop
pop
pop
test
jb
inc
ja
cmpsl
and
add
mov
and
ret
or
add
lcall
mov
out
pop
insb
push
dec
add
bound
lcall
xor
loop
sbb
adc
andl
or
divb
xchg
adc
inc
leave
or
mov
add
cltd
rcll
rolb
clc
push
test
adc
mov
sbb
ja
add
add
dec
mov
inc
cwtl
jmp
test
fisubrl
and
sub
dec
stos
xor
sub
xor
or
cmpsl
and
add
mov
aam
bound
sbb
shl
xchg
mov
lcall
xor
push
shrl
xchg
pop
inc
pop
stos
push
cmp
mov
sbb
cld
mov
add
or
pop
pop
jb
aad
sub
xchg
or
mov
aam
sub
dec
push
or
lods
cli
push
mov
lock
dec
aam
cmpsl
adc
push
lcall
adc
sbb
sbb
jbe
jecxz
sub
inc
lods
test
jecxz
jnp
pop
mov
cmc
mov
add
pop
push
xchg
and
and
bound
leave
inc
pop
jp
dec
stos
shl
orl
outsl
test
xchg
aam
xchg
cmpsl
testb
xor
mov
xchg
cmpsb
mov
cwtl
rorl
fcoml
dec
push
mov
or
popa
jl
in
inc
enter
sub
sub
inc
and
push
dec
add
and
mov
pop
dec
sub
push
test
sbb
stos
dec
jmp
mov
xchg
cmp
andb
fwait
jne
scas
dec
scas
inc
lds
cmp
adc
icebp
aaa
lcall
imul
inc
push
shrl
pop
or
popf
add
add
mov
les
arpl
push
add
adc
inc
xor
push
jle
cmc
fiaddl
push
xor
or
pop
fwait
cmp
mov
call
lea
inc
insl
jmp
in
bound
mov
test
cs
js
scas
into
bound
adc
cmpsb
sbb
xor
aam
dec
push
test
inc
shlb
mov
xor
ret
pop
and
aad
push
inc
or
cli
js
xchg
xor
jl
loope
pop
lahf
insb
push
mov
and
jb
inc
lods
or
xor
dec
mov
repz
jmp
mov
mov
lahf
inc
test
cmp
or
adc
xor
dec
or
sub
movsb
mov
iret
mov
sbb
aas
cmp
mov
mov
call
mov
sub
adc
or
or
rolb
inc
jns
jecxz
enter
dec
cmp
mov
or
xor
fidivrl
mov
fidivl
insb
lods
jle
jne
mov
adcb
sub
scas
mov
mov
imul
lret
dec
pop
test
pushl
push
sbb
aad
xor
mov
pop
lock
dec
imull
retw
cld
add
cld
mov
dec
pop
sahf
push
push
int
and
push
dec
pusha
subb
ljmp
sub
test
and
insb
adc
mov
mov
pop
or
stos
mov
jecxz
dec
mov
rcl
in
mov
jb
cmp
xchg
lret
add
dec
cmpsb
xor
in
ror
out
mov
jbe
and
inc
dec
mov
inc
scas
push
ja
les
mov
ds
jo
mov
mov
shrl
push
aaa
rcrl
mov
or
adc
loop
add
xor
mov
and
lock
in
pop
jb
insb
lea
icebp
inc
call
mov
insb
mov
unpckhps
or
xchg
dec
pusha
mov
xor
sub
sbb
xchg
and
or
mov
xor
scas
rclb
xchg
adc
insl
mov
xchg
cmpsb
pushf
dec
sub
in
or
xchg
add
cli
loop
mov
sub
xchg
sub
bound
cmp
fdivs
lret
fisubs
jne
and
jnp
idivb
incl
pop
and
test
rorl
cmp
adcl
pop
rclb
push
sbb
in
ss
cmc
pop
inc
invd
in
pop
mov
pop
dec
pop
mov
mov
jne
jo
aad
leave
push
aas
mov
cmp
fimuls
sahf
mov
jo
xchg
cmc
cmc
adc
lods
nop
pop
ret
js
push
jb
mov
add
das
mov
dec
pop
push
pop
aad
add
cmpb
push
mov
fldcw
add
subl
push
adc
inc
mov
jle
dec
mov
mov
cs
or
cld
lds
xchg
inc
push
lods
shl
cmp
hlt
ret
jecxz
dec
mov
scas
inc
fistl
xchg
sub
nop
or
cmp
mov
dec
inc
push
popf
or
aad
scas
xor
lds
sbb
push
es
in
ljmp
les
push
sbb
fstps
sbb
xchg
int3
xchg
inc
push
ja
dec
lods
rorl
out
inc
mov
mov
pushf
popa
movsb
jbe
xor
xor
aam
or
mov
lret
ret
cld
lret
dec
pop
test
mov
adc
roll
pop
and
es
and
push
push
xchg
in
or
out
push
push
xchg
in
or
push
xor
fs
mov
cmpsl
pop
addr16
aaa
ret
or
arpl
movsl
xchg
lds
jmp
repnz
rcrl
scas
mov
mov
cltd
mov
inc
or
and
xchg
mov
jno
or
sub
push
push
jle
in
lods
jg
adc
and
jmp
xchg
addr16
outsl
arpl
jecxz
mov
mov
adc
aaa
inc
push
xchg
insb
aaa
aam
add
pop
or
mov
movsl
fistl
xlat
xchg
jbe
and
sbb
es
outsb
lock
dec
mov
xor
prefetch
add
mov
jecxz
insb
mov
aas
into
out
inc
jns
data16
or
imul
push
push
xor
imul
mov
repnz
or
fsubl
int
jb
mov
subl
pop
sub
xchg
stos
aaa
lcall
rcrb
in
addl
sub
mov
lds
jle
sub
xchg
pop
push
mov
testb
test
add
push
rolb
lret
and
enter
stos
clc
dec
sti
xor
sbb
inc
hlt
mov
xchg
mov
roll
lret
sti
roll
sahf
mov
dec
mov
adc
or
adc
push
jo
sbb
faddl
mov
push
int3
mov
call
add
adc
jns
enter
pop
mov
xchg
stos
iret
pop
sbb
push
test
pop
lret
and
and
lds
pusha
js
jl
sbb
sub
aaa
sub
aad
push
bound
test
roll
flds
adc
test
test
dec
test
repnz
xchg
adc
adc
inc
dec
push
adc
dec
aam
sub
adc
dec
les
loop
xor
xor
adc
dec
je
pop
dec
aam
adc
adc
xor
das
xor
flds
jge
das
mov
pop
sahf
lret
adc
ss
sbb
xor
adc
jecxz
dec
inc
sub
das
lcall
adc
xchg
je
cmp
jb
push
cmc
inc
add
outsl
lods
xchg
cmp
adc
jle
mov
pop
jbe
xchg
sub
push
nop
ret
je
pop
aam
gs
stos
cmp
fidivs
cmc
jb
adc
in
or
in
mov
dec
mov
hlt
cli
jp
popa
dec
lcall
cwtl
add
arpl
dec
dec
push
pushf
adc
testl
jb
xchg
js
add
rorl
dec
icebp
lea
out
sub
movsb
and
jl
push
in
push
mov
cld
ja
leave
pushf
insb
and
sbb
or
rcl
cmc
push
rorl
cmc
push
mov
push
jmp
push
inc
dec
jl
cwtl
mov
popf
or
dec
daa
xchg
sbb
out
fs
rolb
adc
push
xor
dec
or
shrb
addb
mov
pop
cmp
mov
lea
cmpsl
dec
lds
inc
cmc
mov
or
jle
je
push
jo
ljmp
xchg
shl
bound
pop
je
pop
and
lds
xchg
hlt
test
inc
hlt
int3
fcmovb
sbb
xlat
and
push
sbb
popa
push
sbb
sub
xchg
xor
xor
leave
mov
sbb
sub
sbb
popa
mov
imul
dec
add
jle
sbb
lcall
mov
or
sub
imul
stos
and
sbb
lods
mov
pop
aaa
stc
cmp
stc
mov
xchg
mov
je
sbb
aam
jae,pn
xchg
jb
mov
dec
mov
gs
inc
pop
add
or
pop
fs
ret
dec
or
adc
sub
lods
cmp
jns
in
cld
lods
mov
hlt
adc
push
cld
out
mov
push
jo
mov
sub
xlat
js
xchg
fisttpl
jbe
nop
movsl
stos
pop
shl
les
jecxz
mov
repz
repnz
xchg
sub
sbb
sbb
dec
xlat
stos
fstps
xchg
inc
sbb
pop
cltd
xchg
divb
push
mov
gs
imul
leave
xor
xchg
cmp
jmp
int3
cmp
dec
ss
mov
mov
jns
push
push
pop
es
aaa
jmp
push
in
in
mov
mov
add
dec
mov
sub
jg
adc
push
inc
inc
flds
fistps
sbb
ljmp
inc
es
add
ja
cmp
adc
sahf
enter
ficompl
sub
mov
inc
test
outsb
das
dec
or
jbe
outsb
loopne
mov
mov
xor
cltd
movsl
lcall
jmp
mov
jmp
cmp
leave
mov
sub
jne
test
add
push
lds
add
xor
fisubrl
or
pop
insl
pop
test
add
int
pop
test
mov
jle
cmpb
add
clc
arpl
and
into
add
lods
ljmp
mov
pop
mov
pop
clc
ret
ds
jo
push
mov
out
xor
mov
mov
loope
sub
cmp
rcl
adc
adc
and
mov
xchg
cld
inc
xchg
cmpsb
lret
icebp
add
xchg
in
pop
cmp
roll
mov
mov
mov
adc
testb
add
or
push
xor
xchg
out
faddl
push
fists
mulb
aaa
dec
dec
lcall
inc
sub
inc
stos
xor
dec
mov
or
adc
fisubs
and
mov
dec
jae
ja
lds
xchg
xchg
or
sub
ss
push
movsb
outsl
hlt
rorb
fadds
sub
popa
ja
jnp
cltd
loope
sub
movsb
mov
push
ljmp
out
cld
mov
lods
mov
adc
incb
mov
mull
mov
loope
ss
or
dec
jae
sbb
lods
or
sbb
sarb
stos
jmp
inc
ret
addr16
sub
enter
imul
call
jnp
mov
cs
repz
lock
mov
call
xchg
add
xchg
xor
cmp
inc
jnp
sub
cmpsl
mov
dec
or
xchg
push
sub
sbb
test
pop
not
sbb
jmp
jb
mov
xchg
icebp
daa
data16
add
push
sub
sub
pop
jno
or
adc
jo
clc
pop
sbb
movd
xchg
pop
adc
gs
add
mov
call
loope
lea
add
shlb
mov
dec
or
into
xor
fldt
ljmp
imul
push
movsl
cmpl
cmp
inc
xor
js
mov
dec
xchg
lock
add
ja
pop
add
cmpsl
add
fdivl
inc
jecxz
mov
xor
hlt
inc
xor
lahf
dec
inc
lret
aam
jb
or
clc
jbe
loope
cmpl
jb
xchg
and
ret
stos
adc
cltd
scas
bound
or
sub
enter
rol
pop
cli
test
inc
pop
out
jns
or
sbb
les
shrl
movsb
stos
mov
loop
add
dec
add
pop
je
cmc
clc
dec
add
and
dec
icebp
xchg
inc
inc
arpl
stos
pop
pop
fmuls
fisubrl
aaa
out
sub
pop
cmpsb
push
dec
cltd
sub
adc
mov
xchg
mov
pushf
lret
mov
push
xchg
test
pop
xchg
insl
loopne
rolb
out
push
divl
aaa
movsb
rclb
jg
and
ficompl
mov
test
mov
loopne
cmp
mov
inc
pop
cmp
inc
ffree
movsl
or
inc
cmp
cld
inc
lds
sbb
dec
outsl
mov
dec
shll
jo
add
nop
mov
mov
and
aam
es
mov
mov
mov
idiv
pop
mov
adcb
push
scas
mov
std
in
push
pop
inc
xchg
push
pop
mov
inc
bound
cwtl
mov
jmp
test
adc
pushf
sbbl
push
lret
mov
movsb
sub
dec
jae
test
mov
and
pop
adc
out
or
fs
inc
cmpsb
andb
movsb
andb
test
aas
lahf
jmp
inc
fisttpl
mov
int
stos
fidivs
mov
aam
push
cmc
add
call
xchg
sub
xchg
mov
xlat
fcoms
add
push
out
in
adc
aam
xchg
fs
and
or
negb
dec
lcall
ja
test
lock
pop
xchg
je
mov
sub
daa
inc
push
test
jmp
aas
pusha
dec
mov
cmp
cmp
or
mov
adc
sbb
mov
mov
out
adc
dec
and
and
inc
and
push
dec
sub
aaa
sub
add
outsl
cmp
mov
inc
inc
jg
and
pop
clc
and
in
roll
or
sahf
push
das
pop
in
sub
jge
adc
sbb
cmpsl
adc
push
movb
sub
mov
mov
sbb
mov
and
in
pop
add
iret
out
lret
andl
stos
and
shrl
addb
lret
mov
push
icebp
stos
les
cmovge
adcb
push
push
sub
add
cld
loopne
stos
and
xchg
push
xor
push
adc
adc
mov
cmpsl
fbstp
inc
xchg
inc
cmovbe
sbb
sbb
mov
int3
mov
fs
push
push
in
cli
or
or
ret
fsubl
and
and
push
add
sbb
lahf
mov
xchg
jae
fildl
push
sti
add
or
push
mov
inc
addl
dec
pop
or
pop
xor
mov
int3
or
stc
push
cwtl
add
mov
jle
roll
fsubs
insl
mov
cltd
jne
push
cmpsb
mov
aaa
es
add
fildll
mov
push
jmp
and
push
mov
jmp
hlt
pop
pop
mov
cli
mov
movsl
daa
mov
inc
add
adc
xor
xchg
and
push
mov
push
pop
jmp
insb
adc
sbb
dec
xchg
push
test
imul
dec
int3
jno
push
mov
sub
aam
push
xchg
adc
adc
xchg
test
pushf
sbb
mov
mov
push
add
sti
and
hlt
add
xor
jns
pop
lock
ljmp
lahf
pop
jecxz
adc
add
push
in
or
jne
lods
sbb
xchg
inc
adc
sub
jb
cmc
sbb
mov
add
adc
cmp
stos
inc
mov
push
addr16
cs
xlat
or
ret
scas
movsb
push
xchg
rcll
ficoml
cmc
sahf
mov
pop
dec
in
imul
stos
rolb
or
imul
into
ljmp
rol
xor
add
sub
sub
inc
and
enter
push
sub
pop
xor
xor
test
stc
cmc
cltd
adc
andl
cmp
decl
stos
and
ljmp
movsl
pop
adc
adc
sbbl
sub
shll
add
ficoms
test
in
push
repnz
cmpsl
jecxz
negb
outsb
pop
or
sar
pop
out
xchg
jae
cmp
pop
mov
inc
jl
popa
adc
lret
pop
add
mov
mov
rorb
cli
jb
inc
xchg
rclb
lahf
jg
mov
sbb
addr16
mov
add
and
lods
cld
aad
scas
stos
adc
inc
or
adc
sbb
dec
mov
dec
or
push
paddb
jecxz
dec
or
into
dec
pop
sbb
sbb
rolb
repz
mov
mov
add
adc
je
inc
rolb
movsb
push
movsb
mov
bound
sbb
xchg
push
into
mov
sbb
daa
jmp
jno
aam
and
sub
movsl
lods
inc
lret
clc
pop
jbe
inc
popl
lea
popl
push
jmp
xchg
test
in
les
gs
push
inc
cld
cmpsb
or
gs
mov
sub
mov
and
mov
and
dec
mov
lds
mov
xor
dec
or
lods
mov
inc
rolb
cmpsb
inc
shlb
mov
xchg
popa
iret
outsb
inc
sahf
aam
push
xchg
mov
std
repnz
popa
dec
cmp
aad
pushf
mov
mov
stos
es
lret
mov
aad
dec
mov
pop
mov
pop
inc
ljmp
and
add
adc
cmp
les
pop
insb
and
clc
pop
pop
clts
gs
jbe
xor
jne
popa
popa
sub
lods
or
in
inc
cmp
inc
sub
push
cmp
shl
push
imul
pop
xor
lods
daa
mov
cmp
mov
in
xchg
xchg
das
pop
loop
insb
push
popa
inc
push
daa
or
mov
andps
and
call
test
xchg
je
jb
and
jp
shll
push
push
pushf
mov
mov
pushf
mov
sahf
add
or
popa
dec
dec
jne
pushl
fs
inc
xor
movsb
adc
push
ljmp
ss
bnd
fiadds
mov
dec
dec
lds
pushl
cwtl
mov
iret
dec
cld
inc
pusha
lret
je
jmp
cmp
popa
xor
aaa
or
cmp
inc
adc
fisubrs
jge
add
test
mov
pop
je
or
xchg
scas
xchg
jne
ss
sbb
mov
or
and
test
sbb
mov
repnz
mov
push
sbb
lahf
inc
les
cld
and
popl
shrb
sub
mov
adc
out
xchg
movsl
and
es
pushf
push
daa
or
pop
cmpsl
mov
mov
xchg
jmp
enter
and
adc
bound
mov
jno
inc
mov
or
mov
aad
adc
push
inc
cmc
jmp
test
stc
jne
enter
loope
popa
pop
bound
or
and
fs
movsb
mov
or
lcall
test
out
and
sub
inc
or
jne
scas
gs
add
test
and
adc
cmp
out
dec
or
push
inc
rolb
mov
outsb
pop
lods
or
ss
push
loopne
sbb
imul
inc
and
enter
lea
sub
fisubl
pusha
aas
pushf
pop
push
in
and
inc
push
pop
lock
xor
jg
pop
in
jmp
or
add
add
xchg
xchg
ds
call
push
add
mov
ss
pushf
add
xor
shl
arpl
jmp
sbb
mov
insl
movsb
subl
jg
pusha
mov
pop
push
adc
sub
fstl
test
mov
jl
iret
or
sub
mov
xor
mov
jne
fsub
lret
mov
movsb
arpl
cmp
hlt
mov
shl
std
pop
mulb
addr16
push
aad
sbb
xor
jae
inc
mov
cmp
mov
dec
test
cmp
xor
xchg
sbb
mov
sub
sbb
sub
lret
pop
cmc
xchg
pop
add
movsl
xchg
ss
jne
xchg
push
inc
rcl
adc
leave
cmp
xchg
push
loopne
push
and
xlat
sub
mov
pop
loopne
or
sbb
inc
fwait
xor
cmp
mov
pop
xlat
insl
mov
fs
das
dec
ffree
mov
jo
mov
xor
imul
cwtl
mov
in
push
pop
cmp
or
iret
jmp
orl
push
adc
jmp
and
shrb
shr
inc
out
mov
dec
pop
mov
loope
mov
or
popa
sub
xor
frstor
mov
iret
mov
jl
xchg
pop
inc
cmpb
pusha
movb
dec
dec
or
out
jb
add
enter
aam
nop
pop
insb
popa
mov
fisubrl
mov
jecxz
lcall
cmp
ja
sub
inc
pop
into
and
dec
out
std
cmpsb
sbb
cli
clc
xchg
adc
pop
add
scas
mov
sbb
mov
xor
xchg
sbb
xor
pop
mov
aad
lcall
and
add
sbb
mov
sbb
popf
xlat
push
fisubrl
pop
out
pop
and
incb
pop
pop
out
inc
stos
inc
push
mov
sub
adc
test
cltd
mov
pop
push
cmp
inc
push
inc
ds
mov
inc
sbb
cmpsb
sub
add
jle
adc
cmc
inc
gs
test
lret
adcl
lret
xchg
mov
adc
in
aad
inc
inc
repnz
jl
test
mov
mov
inc
cmc
mov
jl
jns
cli
pusha
inc
sti
adc
ds
or
xor
popf
add
andl
imul
inc
sub
scas
sub
pop
mov
pop
roll
sub
and
sub
hlt
add
mov
push
add
inc
pop
push
imul
repnz
xlat
push
fisubrs
cmp
push
dec
or
jecxz
mov
jg
mov
jp
inc
pop
jge
cmp
push
add
pop
fs
ss
mov
inc
das
sbbb
or
decb
inc
push
mov
mov
iret
call
aaa
ret
cs
popa
mov
bound
mov
push
ja
insl
add
sbb
push
pop
jns
ja
clc
push
scas
jge
aad
sbb
dec
add
shll
add
inc
pop
pop
add
lds
mov
scas
sbb
outsb
mov
cmp
sbb
sbb
scas
ret
lea
rcll
loop
clc
lods
es
test
fs
cmpsb
pop
mov
and
popa
xchg
pop
inc
jns
mov
fcomps
pop
rorb
and
mov
pop
shl
mov
inc
int3
test
push
or
pop
fwait
sub
sbb
and
inc
push
push
mov
xchg
insb
xchg
mov
jo
push
aad
arpl
mov
push
aas
mov
dec
push
mov
mov
and
pop
fsubs
jne
mov
mov
cld
inc
pop
loope
dec
sbb
and
jmp
sbb
push
fs
mov
mov
add
stos
stos
dec
cmp
or
scas
clc
into
jb
nop
loope
sub
push
andb
xchg
xchg
or
inc
sub
xor
cmp
add
lock
loopne
dec
cmc
das
aaa
mov
or
mov
into
or
jmp
cmp
add
ja
in
or
ret
xor
scas
lds
push
cmp
inc
pusha
dec
xlat
shr
aad
xchg
and
sbb
xor
push
ljmp
lea
add
test
xchg
push
push
fiaddl
icebp
jmp
pop
rcll
mov
mov
mov
jo
js
pusha
dec
stos
mov
or
cli
mov
dec
inc
pop
adc
js
and
pushf
inc
inc
in
add
pop
add
enter
aad
mov
dec
or
or
and
sub
dec
add
push
stos
into
push
mov
and
hlt
fildll
mov
cli
sbb
out
insl
pushf
es
inc
in
adc
cmpsb
test
jle
jge
subl
mov
or
subb
mov
pop
loope
das
hlt
push
int3
add
sbb
aam
push
lods
xor
jge
mov
xor
test
sarb
xor
sbbb
int
jb
scas
lock
lret
push
lods
inc
imul
jo
push
pop
lods
scas
mov
in
add
insl
mov
clc
lea
mov
pop
popl
imul
scas
cltd
mov
dec
les
and
and
pop
and
popf
addl
inc
xchg
jo
dec
xchg
sub
xchg
xchg
or
cmp
jns
jno
inc
sbb
pop
out
je
adc
bound
adc
xchg
cmp
pusha
int
stos
dec
sub
mov
in
mov
fs
sub
mov
hlt
scas
add
mov
push
outsb
cmp
fwait
dec
xchg
mov
jae
fs
enter
out
lret
movsl
push
rcl
xor
rcll
fiaddl
adc
add
insb
cmp
test
cltd
out
push
inc
push
enter
in
xlat
scas
xchg
cli
test
mov
adc
or
and
insw
push
popa
cmp
test
xor
add
stos
inc
pop
int
and
adc
sub
addr16
arpl
jne
sub
jmp
lret
rcrl
mov
pop
sahf
mov
xor
mov
sbb
push
push
and
ljmp
push
adc
sbb
push
inc
adc
mov
mov
insb
and
lret
mov
cmp
sbb
scas
inc
aas
mov
push
fidivrl
test
jge
insb
jne
sbb
push
sub
sbb
nop
fs
pop
xchg
xchg
add
jl
inc
inc
and
xchg
addb
ret
xchg
and
xor
pushf
shrb
cmp
xor
inc
cmpsb
cmpl
icebp
pop
adc
mov
scas
dec
push
pop
jne
jo
or
cmpsl
loope
sub
pushf
roll
jbe
ds
je
cmovnp
cmpsl
sub
aas
dec
into
mov
stos
push
pop
inc
cmp
cmp
aam
pop
loop
xor
popf
loope
pusha
stos
popa
out
or
lea
mov
cmpb
cmp
loopne
syscall
add
or
and
mov
mov
adc
sarb
loop
adc
or
nopl
sub
and
cltd
xor
test
dec
iret
lret
mov
add
inc
clc
daa
and
stos
or
dec
test
fwait
jge
orb
popf
push
mov
xchg
xchg
lock
jge
add
jns
mov
ja
in
mov
mov
sbb
call
xor
addl
inc
or
out
test
insb
adc
adc
pop
int3
subb
jae
push
jae
sarb
sub
call
jecxz
cmp
js
loop
out
adc
out
pop
test
cld
out
jge
xchg
mov
fisttps
mov
add
sbb
and
ljmp
xchg
adc
add
mov
mov
enter
scas
add
mov
inc
lea
inc
rorl
imul
adc
outsl
inc
jg
sbb
aaa
ret
push
mov
sub
and
mov
pushf
inc
mov
clc
mov
push
or
lds
sub
add
sbb
pop
rclb
adc
ficoms
dec
pop
mov
shlb
mov
lret
xor
aam
repnz
adc
push
pusha
fbstp
xchg
sbb
inc
adc
sbb
rorb
stos
push
loopne
pusha
aam
in
jge
dec
xor
xchg
mov
jl
mov
leave
test
pop
je
lea
push
push
aad
pop
in
aad
scas
cs
popf
or
sbb
xor
pop
cwtl
out
sbbl
int3
mov
decl
into
add
push
jb
mov
enter
movsb
fwait
adc
jecxz
out
xchg
mov
cmp
lret
enter
movsl
scas
pop
mov
divb
push
int3
int
mov
inc
arpl
sbb
lcall
mov
lret
sbb
inc
xor
jae
dec
fldl
mov
xchg
mov
shll
lcall
inc
or
adc
shrl
mov
jmp
push
mov
int3
pop
js
xchg
jne
divb
or
and
adc
mov
test
cmc
test
js
pop
cwtl
mov
or
or
das
inc
mov
push
rorl
cmp
sbb
out
dec
shl
fwait
addb
adc
inc
sbb
mov
cmp
loopne
mov
jle
or
add
incb
scas
or
mov
movsl
push
dec
sub
inc
pop
xor
subl
cmc
mov
sub
sti
dec
dec
mov
mov
add
mov
lret
push
pop
mov
xchg
mov
in
clc
add
adc
cmp
loope
mov
fmuls
mov
aas
clc
sub
cmp
push
mov
fcoms
pop
inc
rcll
sbb
and
or
test
cwtl
pop
pop
scas
add
adc
mov
xchg
les
cmp
adc
inc
sbb
andb
sbb
stos
repnz
js
cltd
test
es
push
xchg
scas
test
inc
dec
pop
cmp
jp
rorl
cwtl
cmp
lret
sbb
mov
inc
jne
push
in
add
out
and
ljmp
and
or
jno
ret
lea
imul
inc
fisttpl
mov
ss
lea
inc
test
pop
adc
mov
xor
cmpsb
daa
xorb
sbb
jmp
push
adc
sbb
push
mov
xchg
dec
test
add
add
dec
inc
add
add
add
add
gs
xchg
and
inc
orb
std
add
push
in
pop
and
jae
fimuls
push
push
and
sub
mov
xor
repnz
aaa
adc
mov
popa
jecxz
ss
or
fisttpll
xchg
mul
push
je
mov
sub
adc
in
mov
mov
cwtl
mov
enter
adc
shrb
sbb
in
pop
mov
push
adc
dec
jo
or
dec
xor
dec
push
and
sbb
test
fisubl
int3
shll
push
or
rcl
test
xorb
push
insb
pop
xor
inc
js
jno
jae
adc
mov
and
sbb
aam
rcrb
nop
and
and
cmp
fdivrs
xchg
lds
fstpt
mov
add
rcrl
out
cld
inc
sub
mov
mov
adc
pushf
sbb
cs
fwait
mov
dec
stos
dec
repz
out
shll
push
jo
push
mov
adc
or
testb
xlat
and
adc
cmp
aam
xor
jb
xchg
adc
push
lock
out
inc
cmp
data16
mov
cltd
dec
or
mov
and
dec
stos
push
dec
cltd
xor
push
in
mov
xor
xor
pop
push
subl
add
lret
fs
cli
sub
and
fs
mov
sub
outsb
pop
out
sbb
xchg
add
and
pop
aaa
mov
fidivrl
fcoml
loop
adc
lret
scas
lea
fiaddl
mov
mov
or
aas
or
sub
and
addb
xor
jae
xor
insl
movsb
mov
pushf
aaa
shlb
dec
rolb
loop
repnz
lods
mov
sub
adcl
sub
add
jno
or
je
push
push
add
insl
sub
push
out
imul
iret
pop
mov
push
sbb
mov
pop
push
loopne
movsl
dec
jnp
add
stos
ror
fsubr
mov
test
mov
inc
fs
movsb
xor
or
es
rorb
mov
jb
js
xor
push
sub
xchg
insb
pop
mov
lea
inc
arpl
mov
add
xchg
outsb
sbb
mov
shll
dec
xor
mov
mov
pop
arpl
inc
pop
inc
inc
inc
in
jns
int3
or
add
pop
lods
pop
cwtl
dec
lds
adc
mov
xor
shufps
mov
add
cmpsl
inc
sbb
xor
sbb
js
neg
out
push
dec
ss
dec
cmp
add
lock
out
push
test
mov
gs
lods
clc
dec
jns
shll
or
fidivl
test
adc
add
sub
and
sub
insl
aaa
inc
pusha
or
andb
push
test
pop
addb
dec
xchg
sbb
inc
push
mov
mov
push
popa
xor
pop
mov
mov
sub
jb
pop
mov
add
pushf
inc
fsubrs
sahf
mov
xchg
bound
popa
mov
dec
adc
cmpsl
dec
add
sub
pop
ljmp
add
insl
cli
adc
xchg
push
dec
cmpsb
or
and
popa
dec
aam
xchg
fldenv
push
arpl
pop
dec
push
jnp
loope
mov
adc
add
add
lock
dec
inc
add
add
add
add
in
cli
and
adc
cmc
mov
icebp
xorl
lret
fildl
mov
outsl
shl
dec
pop
pushf
adc
pop
pop
out
sub
mov
movsb
addr16
popf
aas
idiv
jmp
fimuls
push
jnp
arpl
pop
fcoml
pmovmskb
rclb
int3
adc
cs
adc
loope
inc
data16
jo
push
aas
mov
in
fstps
inc
pop
sbb
jge
sbb
inc
test
cmovns
dec
test
out
xorb
js
in
adc
cmp
jg
cmp
mov
out
fidivs
inc
lret
test
movsb
jbe
test
ret
enter
outsl
fwait
jge
test
inc
ficomps
aaa
fldl
hlt
pushf
jno
in
fistpll
sub
jmp
dec
test
sub
das
mov
shl
repnz
loope
cmp
cmp
in
mov
push
xlat
cltd
mov
xchg
movsl
jl
xor
aas
arpl
fnstsw
mov
das
fwait
cmp
and
xor
rcrb
lods
push
cmp
cld
push
ret
mov
in
in
iret
popf
test
push
cmp
sub
mov
hlt
daa
ja
frstor
into
fistpl
int
mov
in
movsb
cmp
pusha
lock
or
dec
mov
test
xor
stos
nop
pop
bound
je
sbb
loope
adc
mov
out
push
push
pop
shr
iret
lds
outsb
fdivrp
or
pop
cmpsb
jnp
pop
fcmove
xchg
idivl
mov
in
popa
in
cmp
jg
lcall
popa
xchg
mov
cltd
jmp
sbb
outsl
cmp
mov
pop
das
xor
xchg
jbe
jge
es
in
mov
cmc
mov
in
push
cmp
lods
rolb
jp
mov
push
adc
sub
inc
pop
and
mov
pop
lock
and
jmp
cmpsl
in
and
pop
cmp
push
dec
jl
sti
xchg
push
pop
mov
mov
cmpsb
sar
add
mov
pop
cmp
lock
sub
dec
outsb
popf
hlt
dec
ljmp
mov
and
jno
popf
outsb
les
jns
cwtl
add
ret
iret
pop
das
repz
adc
insl
out
mov
push
fistps
mov
ffreep
fisttpll
sbb
mov
xchg
adc
push
fnstsw
xchg
mov
bound
cmc
loop
fldcw
loope
push
mov
fistl
mov
sbb
adc
stos
in
mov
push
sbb
lods
test
xor
cmp
or
dec
xchg
mov
iret
or
mov
jo
mov
cmp
mov
out
les
aam
xor
add
shlb
xor
daa
test
xor
or
push
in
inc
shl
nop
mov
mov
imul
dec
cmp
inc
lcall
mov
mov
jb
mov
in
insb
mov
cwtl
xchg
js
jmp
divl
mov
jl
mov
pop
fistpl
call
in
push
shl
inc
sbb
adc
fadd
roll
ja
andb
mov
lret
pop
pop
out
fdivr
ds
pop
fbld
mov
mov
loope
jmp
ljmp
xchg
jmp
out
cmc
mov
test
pop
sbb
sarl
cmp
movsb
js
fldenv
jp
insb
test
inc
dec
mov
mov
loopne
shll
icebp
in
dec
lods
test
idiv
out
fs
flds
jne
mov
mov
jmp
xor
dec
mov
inc
nop
dec
jge
iret
xchg
mov
fs
stc
cld
into
out
aaa
inc
sbb
and
mov
cltd
call
xor
cmp
je
fnstcw
and
adc
repz
int3
cmp
mov
popf
adc
push
inc
stos
sub
fwait
mov
pusha
cmp
xlat
in
notb
popf
jmp
adc
int3
xor
jns
push
mov
ucomiss
jae
dec
jge
fmul
mov
test
stos
mov
xchg
sbb
xchg
ret
sbb
sub
pushf
mov
lcallw
test
and
cld
cmpsb
shlb
pop
stc
or
ret
xor
cmc
mov
hlt
lea
xchg
lock
sbb
push
pop
mov
mov
icebp
aad
cltd
and
cmp
andl
js
repz
jbe
mov
sub
pop
outsb
inc
xor
dec
test
out
dec
popa
xor
hlt
dec
dec
mov
sahf
fwait
leave
cmp
mov
jae
mov
push
mov
mov
mov
or
cwtl
push
inc
adc
shl
jmp
pop
fisubrs
ret
jno
cmp
lds
lods
adc
ret
lcall
les
cmp
push
out
pop
jl
int
jge
mov
dec
push
test
cmpsl
fwait
xor
xchg
loope
mov
jno
jb
mov
xchg
cmpsb
and
sbb
lcall
js
ja
xchg
stos
sti
and
inc
pop
pop
or
inc
aaa
jno
xchg
std
pop
out
call
out
mov
aam
std
outsl
sbb
lea
fistpll
jnp
aas
jb
iret
sub
xor
sbb
or
push
fists
cmpsl
adc
fidivrs
icebp
mov
fdivp
lods
sti
mov
pop
bound
jb
scas
ss
mov
pop
arpl
and
sahf
popf
roll
sbb
fs
xchg
mov
lods
aad
clc
jle
in
ret
es
cld
pop
mov
std
push
xchg
push
pop
jge
sti
lock
cmp
pop
dec
data16
mov
mov
mov
dec
leave
dec
ds
jle
shlb
lret
ss
lea
inc
jecxz
ds
dec
ret
cltd
adc
lea
out
aas
dec
int
mov
shlb
dec
negb
mov
sahf
aaa
loop
imul
enter
sbb
jle
sbb
movd
mov
mov
adc
das
mov
add
sti
icebp
out
ficoml
xchg
addl
mov
shrl
addr16
std
jmp
lret
mov
popf
push
fcmovnb
jg
out
mov
jmp
mov
popa
jo
fidivrs
jb
sub
jmp
jp
cmp
pop
mov
mov
mov
adc
mov
dec
dec
pop
imul
cmp
sub
ss
dec
lods
iret
outsb
sbb
xchg
aad
xlat
mov
fsubs
fnop
jne
data16
jmp
jg
loop
std
test
fldenv
hlt
sti
loope
lahf
pop
push
cmc
jmp
loopne
sbb
fsts
bound
add
movsb
scas
in
popa
ret
jae
daa
sub
mov
repz
adc
jmp
fidivrl
dec
cld
inc
xor
hlt
sarb
std
pop
fwait
fs
sti
xchg
cmp
pop
outsb
push
adc
adc
mov
mov
out
or
pop
lahf
cmp
test
sti
xlat
lods
pop
cmc
idivl
mov
jp
lock
fdivs
jge
scas
dec
das
outsl
mov
cwtl
popf
or
fists
jb
mov
test
jmp
xchg
xchg
xchg
les
or
or
push
fucom
or
pop
mov
repnz
std
inc
mov
sbb
jmp
sub
bnd
imul
or
out
push
scas
scas
mov
out
sub
fcoml
jmp
shll
add
cmp
rcrl
jl
fiadds
lea
mov
pop
mov
xchg
cmp
mov
cmp
call
xchg
jge
xchg
jmp
sti
test
pop
loope
cmp
cli
cmp
pop
jae
inc
push
mov
dec
mov
lods
fidivs
js
xor
call
jae
ljmp
sti
cmpsb
bound
dec
out
aas
pop
dec
std
insl
repnz
loopne
mov
pop
hlt
aas
negb
ja
scas
mov
pop
mov
hlt
cmc
daa
mov
xor
out
fistpll
hlt
mov
inc
les
stc
shlb
ret
lods
mov
outsl
push
incb
in
stos
es
pusha
xchg
js
call
imul
mov
sahf
pop
repz
popf
mov
mov
int
lea
dec
mov
lret
sub
insl
pop
mov
data16
dec
loope
fisttpl
sbb
ljmp
jbe
js
mov
fstl
jle
dec
cmpsb
js
test
data16
inc
mov
aas
rcll
lods
xor
sbb
push
rcrb
jge
hlt
loope
xor
gs
jge
lahf
sti
cmp
jne
push
cmp
mov
shll
push
stc
mul
iret
lds
in
jmp
lea
dec
cmp
aaa
push
xlat
icebp
cmpsl
mov
mov
icebp
fs
sub
add
push
mul
in
inc
mov
push
fs
jne
lret
sub
inc
shrl
dec
mov
insb
hlt
test
push
lods
outsb
cmp
mov
pop
mov
outsb
icebp
test
fistpll
jecxz
mov
sbb
in
cmpsb
sbb
out
pop
xor
xlat
jp
adc
lcall
pop
inc
enter
pop
shll
mov
out
dec
cmp
xchg
test
ljmp
lret
test
add
xor
and
rol
mov
test
pushl
fs
ucomiss
insl
mov
xor
test
out
push
mov
imul
mov
push
dec
dec
adc
sub
inc
dec
push
push
repnz
mov
cmp
scas
mov
in
mov
cmpsl
adc
cltd
dec
mov
pusha
inc
fstpt
pop
or
not
addr16
adc
repz
ret
pop
nop
loopne
pushf
pop
mov
enter
mov
cld
xchg
mov
fiadds
pop
lahf
cmpsb
pop
jne
enter
or
mov
repz
and
fiadds
or
mov
rcrl
in
mov
xor
daa
and
jb
cld
adc
cld
imul
xor
mov
repnz
mov
ret
pop
rorl
loop
xlat
xchg
pop
fsubrl
cli
cmp
cmp
push
into
xchg
lods
push
xchg
jne
sarl
stc
mov
out
push
mov
je
xchg
add
push
pop
jns
int3
mov
and
xchg
xor
jnp
jg
ljmp
fucomi
fmuls
mov
fimuls
xlat
insb
xor
mov
testl
jl
rolb
imul
lahf
jb
aam
xchg
inc
out
fstl
test
xor
mov
push
jge
xor
hlt
jmp
dec
or
jbe
mov
or
movsl
leave
dec
mov
inc
cli
and
outsb
test
int
stos
icebp
daa
or
cmpb
bound
and
adc
push
xchg
pushf
lahf
jno
in
in
adc
loop
push
out
cmpsb
xor
paddusw
inc
into
lea
out
jne
mov
sti
das
lea
jmp
jle
dec
loopne
lods
mov
into
cld
jle
mov
cld
mov
xor
aam
cmp
mov
cmc
aad
push
scas
lret
enter
mov
add
add
add
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
mov
add
add
add
xchg
enter
jle
add
and
push
ds
mov
lods
arpl
adc
imul
xor
push
sahf
rcll
mov
inc
sbb
add
sbb
lret
dec
nop
push
js
mov
in
pop
out
cmpsb
pop
movhps
daa
inc
push
mov
push
lret
dec
mov
les
jo
dec
cmp
repz
inc
sete
stos
mov
push
cmpl
adc
dec
pusha
mov
pop
pop
popf
das
fdivs
rorb
rcrb
inc
ret
xchg
lcall
scas
into
rolb
std
hlt
cmpsl
mov
xchg
hlt
stos
fxch
pop
out
xchg
and
ret
add
movsb
xchg
cmp
ss
mov
packssdw
pushl
xchg
popf
ds
xchg
cwtl
rorl
aas
pop
decb
outsb
xor
xchg
into
or
testl
pop
cmp
cld
push
loope
pop
push
cmp
test
ret
inc
inc
lret
je
imul
mov
cltd
mov
je
fdivr
add
inc
xor
sub
xchg
dec
repz
data16
je
xlat
mov
jno
sub
imul
popa
inc
and
mov
mov
in
xor
and
aad
ret
call
or
dec
stos
pop
dec
flds
movsl
dec
orb
add
sub
dec
xchg
mov
or
and
adc
sub
mov
lea
sbb
roll
ljmp
add
fwait
pop
mov
cltd
push
xorb
push
jb
pop
or
mov
cs
jecxz
pop
jle
xchg
sti
rcrb
jg
loope
fidivrs
sub
inc
cld
xor
loope
mov
inc
enter
xchg
jp
sub
sahf
fcompl
mov
cmp
mov
xchg
testl
pop
lea
loope
push
mov
dec
pop
mov
sbb
push
movsb
jle
shl
jp
icebp
lret
ljmp
push
rcll
mov
sbb
pop
xchg
jle
imul
outsb
rol
aaa
mov
cld
sub
inc
xchg
subl
into
jbe
add
sub
or
js
rorl
ficomps
cmp
lods
xchg
mov
test
loope
jmp
sbb
pop
hlt
in
lods
adc
add
push
inc
roll
and
iret
pop
lock
push
cmp
std
xor
or
inc
mov
test
mov
add
or
dec
test
xlat
xor
xor
xchg
pop
pop
pop
loope
js
mov
inc
cmp
pop
inc
cmp
or
push
jb
insb
gs
xchg
iret
adc
pop
xchg
adc
insb
cmpsb
out
fwait
jo
add
repnz
xchg
in
addr16
mov
xor
addr16
imul
cltd
shl
jmp
arpl
and
push
loopne
mov
fcmove
jbe
cs
call
xor
shlb
adcb
jb
push
inc
cmp
pop
insb
dec
add
cs
inc
cld
fists
je
and
lods
mov
inc
pop
ret
add
dec
cli
out
mov
xchg
loopne
jo
cmp
icebp
or
insl
rorb
iret
add
mov
das
xchg
cld
lds
mov
cmpsl
ss
sub
jne
fsubrs
movb
imul
rorb
stos
mulb
icebp
imull
shl
int3
ret
push
pop
mov
mov
dec
jo
mov
push
mov
dec
out
jo
push
popf
and
xchg
stc
bound
clc
addr16
loope
dec
ret
leave
repnz
popa
push
test
and
jle
fnstcw
mov
das
dec
fnstsw
push
dec
scas
xchg
fnstcw
sbb
adc
jle
orb
jmp
in
cmp
dec
push
mov
mov
stos
xchg
xchg
xchg
or
loopne
add
sbb
rcll
jecxz
out
xorb
fidivrs
shr
xor
cltd
sub
std
mov
and
mov
lods
jl
mov
or
mov
lret
inc
les
cmpsb
dec
bnd
stc
push
mov
movsb
fs
sub
cmpsb
push
mov
jne
push
mov
mov
es
and
and
lcall
push
mov
jns
ds
inc
test
lds
iret
cmc
or
dec
je
push
mov
out
mov
pop
xor
inc
mov
cmp
out
adc
pop
or
cmc
inc
sub
mov
movb
mov
insb
adc
ss
xchg
lods
daa
xchg
inc
int
xchg
adc
cs
cwtl
sub
xor
jns
inc
into
mov
loop
inc
lds
in
sbbl
and
fstpl
mov
sahf
jo
subps
outsl
es
fdivs
js,pt
push
mov
sbb
sti
or
jle
mov
push
jmp
and
and
jecxz,pt
pop
das
push
jns
jmp
stos
pop
cmp
inc
xchg
jo
cmp
push
test
out
in
sahf
inc
ret
andl
cmpsb
add
pushf
add
loopne
outsl
or
or
scas
vpunpcklqdq
sbb
daa
pop
sbbl
xchg
xor
adc
fwait
packuswb
icebp
mov
or
pop
jmp
pushf
pop
jg
fisubrs
stos
call
and
pusha
mov
test
pop
push
pop
sub
sbb
mov
dec
movlps
or
mov
xorb
or
push
addr16
inc
mov
xchg
imul
mov
fwait
loop
popa
mov
jmp
cmpsb
cmp
sbb
jl
insb
mov
pop
dec
cwtl
dec
lahf
sub
aam
and
scas
pop
sbb
dec
mov
add
lret
and
mov
aad
out
pop
popa
ljmp
xlat
sbb
xor
adc
stos
cmc
fists
nop
xor
xor
rcrl
mov
ret
push
ljmp
sbb
in
dec
mov
outsl
pop
sarb
fisttpll
mov
ja
pop
sub
dec
test
lret
cltd
pop
pop
imul
std
jns
movsb
pop
aas
xchg
decb
cwtl
mov
mov
cmp
push
stc
mov
ret
das
call
cmp
sbb
mulb
mov
jne
xor
pusha
int
or
out
sbb
lahf
test
out
loope
push
ljmp
adc
mov
jle
or
add
das
xchg
adc
add
hlt
enter
test
ret
cli
das
arpl
xor
fsubrl
hlt
dec
jns
jp
mov
pop
rcrl
sahf
insb
and
sbb
lds
repz
das
mov
jae
jle
or
xchg
mov
icebp
out
fistpl
adcl
add
data16
scas
push
push
shrb
das
loopne
inc
sub
mov
dec
dec
adc
das
sarl
loopne
aam
repz
lret
sub
inc
shrl
stos
paddd
jge
push
or
mov
jnp
pop
or
push
xchg
or
push
cmp
lock
out
push
test
test
clc
mov
xor
mov
mov
insb
insl
decl
sbb
xor
pusha
pop
test
xlat
adc
in
in
dec
fdivrl
leave
xlat
idivl
fisubrl
cmp
call
adc
psllq
popf
jle,pt
icebp
lahf
push
or
sbb
fwait
rcl
inc
test
xor
xchg
push
dec
add
dec
xchg
jle
push
ficomps
push
adc
aad
add
push
ret
jmp
push
arpl
pop
mov
cmp
and
in
fs
mov
or
cmp
inc
push
mov
inc
xlat
sbb
add
inc
xchg
jnp
mov
std
out
pop
insb
mov
movsb
pop
repnz
outsb
lods
xor
sub
and
push
aaa
ljmp
rclb
lret
jne
dec
push
testb
dec
xor
inc
js
push
dec
jbe
push
sub
leave
fimull
int
lret
addr16
stos
xchg
push
jo
or
adc
jbe
repnz
jge
bound
xor
inc
dec
fcmovu
mov
xlat
fidivrl
mov
fld
xlat
jo
mov
loopne
fldcw
hlt
or
xor
jle
jnp
mov
xor
push
jg
es
ss
sbb
lret
or
lcall
adc
cmp
sub
sbb
ja
mov
xchg
js
in
push
iret
xchg
mov
adc
mov
nop
adc
or
loope
adc
sbb
inc
jne
lahf
rolb
jle
mov
or
inc
jge
into
nop
mov
shlb
push
push
or
jnp
adc
ucomiss
jae
sbb
cmc
repz
dec
std
ret
push
add
mov
popa
mov
call
jge
mov
pop
or
gs
pop
lods
adc
es
int3
sub
mov
sbb
jge
test
fdivrp
lahf
xchg
fisubrl
xchg
pop
or
mov
and
ds
push
and
ret
inc
sbb
adc
gs
loope
fiaddl
mov
and
pop
sbb
sbb
mov
popf
pop
test
mov
sub
sbb
mov
push
mov
loope
shrd
in
jl
mov
out
rcr
cmp
repnz
mov
push
mov
adc
mov
sbb
shrb
inc
sub
dec
test
mov
das
add
sbb
lods
push
and
jb
adc
ljmp
repnz
xchg
jmp
pusha
in
fwait
cli
test
cltd
insl
and
dec
out
hlt
sbb
ljmp
fbld
dec
adc
popa
outsb
in
je
shl
push
out
outsb
cmpsl
scas
ds
lcall
not
push
xchg
lret
loope
movsl
out
loopne
arpl
adc
pusha
dec
and
mov
mov
dec
js
push
push
gs
outsl
rorl
dec
bound
in
inc
orl
push
dec
xchg
jbe
in
int
add
pop
pop
or
jge
sarl
arpl
jns
dec
adc
lock
xor
xchg
aas
shl
dec
and
stos
fsts
cmp
pop
inc
fbstp
sahf
push
add
ljmp
inc
inc
in
movsb
cli
les
arpl
es
xor
stos
mov
mov
sarb
pop
jle
data16
test
test
add
cmc
icebp
lcall
cmp
cmp
andb
js
std
push
xchg
fsts
xor
dec
adc
mov
sub
clc
push
xor
hlt
sbb
sbb
dec
ret
fildll
mov
push
mov
in
std
adc
faddl
mov
xor
stos
test
mov
test
outsb
jle
sub
icebp
inc
das
in
xor
arpl
nop
cwtl
stos
push
movups
insl
cmpl
cmpsb
push
lock
xchg
in
es
mov
xlat
add
fwait
hlt
sbb
add
fcoml
jp
cmpl
ret
stos
mov
jle
bound
popf
dec
movswl
xchg
sbb
inc
inc
andl
mov
repnz
popf
icebp
pop
mov
mov
sbb
push
adc
push
pop
arpl
stc
dec
fmul
aad
mov
bound
pop
sbbl
push
shl
dec
mov
bnd
xchg
lea
lods
lcall
loop
mov
mov
psubusb
push
cmpsl
pop
inc
cwtl
pop
stos
imul
je
xchg
out
xlat
push
leave
ret
jecxz
int
push
std
aas
push
mov
fistl
push
mov
xchg
hlt
lods
mov
jmp
dec
sarl
or
das
and
dec
lea
jns
loope
and
popf
test
inc
hlt
shlb
cmp
mov
xchg
jnp
xchg
mov
cmc
pop
xor
push
lds
outsl
clc
inc
imul
sti
dec
jmp
test
sti
insl
fucom
loopne
aam
lds
and
cltd
mov
test
testb
aas
lret
out
jns
mov
mov
mov
push
mov
or
dec
mov
inc
hlt
test
add
lds
xchg
xor
insb
fisubs
jp
xchg
pop
adc
adc
xor
fiadds
mov
adc
ds
ret
mov
mov
loop
pop
lea
push
pop
imul
mov
dec
sub
lods
cmp
mov
in
fmul
push
fbstp
jmp
mov
sub
out
lcall
imul
push
cmp
jo
mov
out
pusha
xor
jb
add
xor
pop
nop
ds
add
mov
loop
push
pavgw
pop
or
cmp
pushw
pop
cmp
shll
call
cmpsl
mov
lods
xchg
sub
cmpsb
jecxz
xchg
repz
rolb
xchg
fcomp
fdivrs
sub
inc
sub
xchg
mov
clc
lock
shll
pop
lret
ss
mov
sbbl
inc
cld
pusha
iret
adc
loopne
fisttps
xchg
rolb
mov
rorb
add
inc
jnp
add
fucomi
jmp
push
into
mov
add
xor
popf
scas
dec
imul
call
rcll
pop
push
pop
mov
mov
adc
fcoms
dec
scas
daa
jge
in
sysenter
aas
pop
mov
push
andps
add
adc
hlt
jo
and
andl
mov
jp
ficomps
shlb
and
cmpsb
fbld
aad
pop
cs
push
sub
jg
and
scas
insb
adcl
rcrl
aas
xor
sub
jbe
lods
enter
ja
cwtl
stos
jmp
adc
lds
aas
das
cmp
popa
push
pop
mov
shl
imul
sbb
fldenv
xor
push
popf
or
xor
inc
mov
xchg
push
push
sub
xchg
loope
or
jnp
hlt
leave
das
push
push
mov
sbb
lock
xlat
mov
or
andb
roll
sti
lret
xor
add
scas
incb
lock
jb
and
test
jns
rcrl
push
fxtract
dec
cmpb
pop
daa
push
pop
daa
js
fldt
lds
shr
lret
xchg
sbb
popa
in
std
jbe
stc
jge
xchg
mov
inc
inc
rclb
fdiv
jecxz
cmp
cltd
outsl
scas
cs
out
add
loopne
push
xchg
inc
push
xchg
shlb
cltd
push
pop
cvtps2pi
sbb
in
ret
rcrl
pop
lahf
outsb
mov
sti
lock
pop
leave
sub
rcrb
cmpsl
outsb
and
mov
cmp
and
clc
sub
jo
jo
xor
pop
mov
aad
mov
xorb
lods
ret
mov
cld
mov
lods
inc
pop
jb
stc
sub
adc
sub
add
adc
stos
adc
loop
mov
jle
in
aad
lcall
sahf
popa
outsb
jae
mov
ret
jnp
xchg
sbbl
dec
fiaddl
pop
jecxz
stc
push
dec
push
mov
ds
ret
movsl
lahf
xor
pcmpeqw
inc
pop
ja
mov
add
xchg
mov
addr16
inc
push
pop
or
in
mov
xchg
xor
cltd
sub
add
idivl
loop
jb
popa
push
shll
mov
movsb
push
sbb
test
sti
mov
push
adc
rorb
dec
daa
js
adc
and
dec
push
dec
lods
or
je
or
rcrl
mov
mov
inc
push
std
bound
xor
adc
sbb
cmp
and
dec
cs
jne
fsubs
xchg
dec
sti
loopne
fcmovnb
mov
jmp
test
mov
fcmovne
mov
out
das
sti
ss
cmp
sub
shl
js
cmp
mov
cld
lods
sub
add
xchg
xchg
fistps
mov
and
je
inc
jae
inc
test
int3
xor
jle
into
test
xlat
sub
dec
popf
xlat
ffreep
jp
sub
jns
and
out
rcrb
xor
push
addr16
push
add
lea
lahf
jp
push
pop
ja
stos
and
pop
mov
ljmp
lret
fbstp
or
sbb
cmpb
mov
cmp
imul
push
dec
jns
fdivl
or
insl
pop
roll
dec
jbe
movsb
and
dec
cmpsb
cmpsl
js
push
cmp
mov
inc
cmp
xchg
movsl
pop
lret
xor
mov
stos
or
mov
lcall
sbb
test
dec
hlt
in
cld
inc
stc
pop
mov
aad
cmp
pop
imul
or
je
push
add
fimull
xchg
lds
out
mov
and
scas
iret
sbb
cmpsl
xlat
hlt
aas
outsl
jno
cmp
sub
arpl
add
cmp
mov
or
jae
ds
mov
mov
push
loopne
inc
jecxz
mov
sub
sub
fcoml
cmp
stos
jbe
gs
lcall
rclb
cmp
mov
call
sub
cwtl
lods
mov
pop
and
mov
imul
lret
inc
scas
mov
sub
mov
push
inc
rcrl
loop
loopne
xchg
xchg
testb
push
fdivrp
xor
fcompl
mov
sbb
outsb
jns
arpl
hlt
add
fsts
shll
std
ds
loop
add
pop
fisubrl
call
mov
hlt
ret
sti
pushl
mov
lods
lret
dec
and
sub
push
cld
out
cmp
sbb
scas
mov
mov
jp
push
xchg
mov
lds
push
loope
pushf
and
mov
inc
lea
add
xor
mov
or
lret
mov
add
subl
ret
dec
or
fdiv
push
xorb
test
or
jmp
lock
decl
add
outsb
lods
pop
pop
stos
cs
sub
loop
pop
lret
or
lret
pop
mov
and
rcrb
add
adc
popl
mov
add
mov
insl
or
sub
mov
inc
mov
push
mov
movsb
cmpsb
imull
dec
sub
popa
push
dec
lock
sbb
xchg
jle
cmc
xor
push
push
adc
movsl
jne
push
push
push
fiadds
push
cli
gs
jo
push
repz
or
lock
shrb
imul
or
dec
fbstp
pop
dec
ja
not
pop
rcll
scas
insb
pop
sbb
push
test
jp
cltd
cmpsl
aaa
pop
jg
lock
push
insl
mov
sub
sarb
test
sbb
xlat
sbb
fiadds
mov
fidivrs
xchg
xchg
testl
lds
subb
cli
dec
sbb
inc
test
and
add
xabort
es
add
jmp
jnp
ds
mov
lods
push
pop
jg
sbb
mov
nop
mov
pop
jns
inc
cwtl
aam
repz
pop
mov
dec
cs
dec
xchg
xchg
clc
gs
cmp
shlb
cld
inc
cwtl
cmc
cli
xor
loope
xchg
xchg
mov
mulb
dec
jmp
or
mov
push
push
fbld
dec
push
pop
sub
fadds
in
lds
jp
loope
pop
insb
into
dec
stos
push
aad
int3
add
push
cmp
aaa
push
fwait
pop
stos
jmp
ss
in
cmc
loop
testl
cmc
popf
repnz
and
mov
mov
sbb
push
je
mov
and
js
mov
popf
orl
sub
test
or
xchg
lcall
pusha
sbb
je
mov
repz
jmp
and
and
pushf
pop
iret
std
push
xchg
inc
cmp
xchg
lds
push
sub
lds
sarb
arpl
pop
xor
ficoms
scas
inc
sti
inc
or
mov
aam
xchg
fwait
inc
or
xchg
mov
out
lock
push
incl
push
or
arpl
ds
xchg
inc
mov
int
jle
stos
mov
loop
mov
ljmp
ror
push
pop
add
popa
es
cmpsb
sub
cmp
pop
sub
lret
xor
dec
mov
cmpsl
cs
in
repz
cmp
mov
xchg
cli
xor
jp
mov
xchg
push
js
jno
jno
jbe
lret
add
pop
ljmp
in
cmp
pop
jmp
std
rcl
outsl
cs
sbb
dec
inc
lods
fidivrl
mov
test
mov
pop
mov
jp
mov
in
sub
pop
imull
lret
jno
cmpb
insb
push
xchg
push
pop
iret
fucom
add
xchg
sarb
mov
sub
mov
push
and
lds
out
xor
neg
sub
lcall
jno
negl
push
int
stos
adc
pop
cmp
inc
dec
push
out
mov
lcall
in
cld
ret
aaa
jecxz
xchg
mov
aad
shlb
xrelease
push
sbb
fisubrs
int3
inc
mov
pop
cltd
mov
repnz
jmp
jl
push
es
jecxz
fisttpl
add
test
nop
mov
jmp
mov
sub
repnz
call
mul
lahf
xor
loopne
into
aas
jle
dec
push
mov
mov
int
xchg
xchg
or
push
jns
fisttpl
jl
mov
cwtl
lahf
push
sbb
lods
clc
push
add
gs
aam
clc
ss
roll
xor
add
dec
das
push
in
mov
insl
lods
dec
dec
es
repz
in
pop
mov
icebp
imul
stc
sbb
and
add
mov
icebp
xsaveopt
lret
xchg
jno
outsb
jp
popf
cmpsb
dec
push
xchg
jg
mov
shlb
in
push
dec
cmp
xor
inc
in
addr16
xchg
mov
popf
push
xchg
mov
mov
sbb
call
loop
js
cld
mov
jl
inc
fistpll
jmp
js
js
dec
dec
imul
das
aad
cmp
test
sub
xchg
sbb
rolb
sub
jge
cld
lea
mov
sbb
push
and
test
aam
int3
inc
and
jge
scas
pop
jle
add
push
std
inc
cmpsl
aaa
ja
and
movsl
cmpsb
scas
xor
push
ja
and
jb
pop
stos
in
sbb
lods
lret
repnz
xlat
lcall
sub
lahf
adc
jne
fwait
sub
cli
mull
add
adc
test
jl
popa
xor
jge
into
lds
adc
popw
loope
test
xchg
imul
outsb
ss
mov
push
cmp
and
pop
test
mov
cs
pop
xlat
insb
cld
cmp
rcl
sbb
sub
xchg
test
push
cmpsb
cmc
mov
xor
sub
dec
xchg
mov
pusha
cmp
aaa
jl
into
xor
sbb
sbb
jg
push
jmp
mov
imul
sbb
lods
mov
sahf
inc
mov
lret
mov
dec
dec
aad
rcll
inc
pop
aas
scas
mov
outsb
scas
insl
mov
fsub
popf
jne
icebp
xor
pusha
arpl
repz
jne
or
cmp
inc
cmpsb
jb
or
mov
arpl
orb
mov
sbb
gs
clc
mov
es
aam
in
mov
sti
push
shll
ja
inc
fbstp
loopne
jo
mov
jnp
cwtl
mov
mov
js
in
jmp
ja
push
pop
movsb
cmp
andl
jbe
inc
dec
fwait
cld
stos
pop
dec
clc
push
cmp
testb
call
testl
pop
ficomps
cmp
insb
cmpsl
push
inc
mov
ret
xor
pop
fs
dec
scas
mov
or
add
dec
push
cli
les
cmc
cmp
sub
mov
cmp
cmp
mov
ss
dec
or
in
mov
mov
cmpsb
jp
xchg
int3
test
and
jo
jge
push
sub
or
mov
and
sbb
fdiv
fstpl
mov
xor
mov
adc
clc
rolb
loop
adc
or
jne
sbb
icebp
out
roll
leave
js
in
mov
cwtl
test
bound
scas
loope
push
pop
test
arpl
sbb
add
mov
shrb
je
subb
sub
adc
inc
adc
subl
xorb
dec
decl
mov
sub
rcrl
test
or
push
out
xor
out
xor
sub
and
sbb
cli
mov
jecxz
push
inc
mov
adc
xchg
in
push
outsb
add
xor
inc
lds
xchg
insl
ret
pop
xchg
mov
insl
jo
sub
in
dec
dec
sub
adc
ret
daa
imul
sti
pop
push
push
dec
cwtl
test
bound
test
mov
leave
mov
push
xor
cmpsl
cltd
ss
push
addb
add
lock
lret
adc
clc
push
movsl
inc
sub
cli
inc
adc
es
test
sbb
lret
int3
mov
cmpsl
out
xchg
adc
or
dec
mov
test
xor
ds
push
sbb
mov
mov
sbb
mov
imul
mov
mov
xchg
into
outsl
movsl
into
aas
enter
fidivl
sbb
push
vmaskmovdqu
stc
divl
rcll
mov
xor
xor
jb
js
jnp
xor
mov
sub
cmpsb
pop
in
in
sub
imul
pop
pop
sub
mov
shl
jns
test
push
mov
sub
iret
mov
xor
pop
pop
xor
push
mov
pop
pop
add
mov
push
in
sub
outsb
repnz
aam
dec
stos
out
out
aaa
adc
push
or
cli
stc
test
sbbl
pop
mov
mov
jb
test
push
sbbb
gs
xchg
push
out
push
jecxz
std
adc
jb
inc
dec
push
xadd
sub
mov
inc
xor
fnstenv
jl
movsb
lcall
xchg
add
jae
add
add
int
cmp
das
push
jge
popf
or
jmp
outsl
add
mov
sbb
xor
pop
in
push
call
jno
test
sbb
mov
fs
xchg
adc
bound
xchg
cmp
xchg
leave
clc
mov
data16
out
or
push
inc
push
jge
cwtl
lds
loop
adcl
in
jbe
sub
mov
outsl
jg
test
push
cmp
dec
push
sbb
mov
enter
imull
xchg
push
jmp
push
fcmovnb
jnp
and
mov
pop
push
test
out
dec
mov
movsl
out
adc
xor
popf
and
ret
std
sub
fadds
push
movsl
push
cmp
les
mov
pop
push
jno
mov
cmp
mov
repz
lea
mov
add
andb
adc
popf
adc
and
shll
inc
mov
testb
shlb
xchg
cld
jno
pop
lds
pop
push
sbb
add
js
jecxz
add
push
push
cmpsb
daa
movsb
movsl
mov
lds
cmp
jmp
mov
arpl
mov
dec
icebp
and
fstpl
js
add
dec
outsb
or
adc
popa
rorb
dec
and
xor
cwtl
into
stos
or
es
mov
jp
pop
jnp
lea
scas
push
pop
jo
xchg
xchg
mov
in
cmp
xchg
mov
popf
lods
ljmp
std
pop
nop
mov
mov
mov
sbb
das
inc
std
testl
mov
mul
pop
mov
sub
jbe
arpl
inc
ljmp
repnz
shrl
adc
jo
xor
cmpsl
mov
mov
mov
popf
leave
xchg
cmp
push
repz
push
dec
sub
dec
fmul
test
mov
add
mov
lods
mov
mov
mov
mov
inc
pop
adcb
dec
movsb
push
jae
movsl
inc
xor
fists
jmp
push
shlb
cmp
push
sbb
adc
loope
inc
stos
ja
inc
movsl
test
xchg
dec
stc
pushf
insb
ror
adc
fisubs
and
out
aad
push
test
pop
in
scas
mov
int
mov
gs
cmpsb
mov
nop
in
push
jb
add
es
popf
pop
sbb
repz
adc
sbb
sti
inc
cmp
not
shll
fidivrs
dec
adc
imul
mov
pop
push
push
mov
push
pop
das
push
shl
jbe
cltd
push
cmp
jp
xor
fcomp
inc
call
das
jmp
pop
cmpb
daa
add
jbe
sbb
mov
cmc
lret
ljmp
sub
xor
js
mov
mov
adc
jne
and
loopne
add
testl
add
les
xor
fcmovnb
aas
mov
xor
pop
sub
cmc
or
not
and
js
mov
repz
mov
cmp
adc
movb
fcoml
dec
lea
cmpsl
mov
mov
jmp
das
mov
lret
xchg
inc
and
adc
sahf
bound
push
cmp
xlat
dec
mov
mov
xchg
ljmp
daa
cmpsl
push
jp
mov
ljmp
cmp
pop
test
inc
pop
mov
cmpsb
mov
sbb
ret
add
shl
test
icebp
mov
lock
cmp
push
xor
mull
adc
dec
mov
insb
ret
push
stc
mov
in
xchg
std
add
int3
popf
lds
pop
imul
dec
push
or
fwait
rclb
mov
pop
iret
fwait
imul
push
mov
js
dec
aaa
mov
jmp
sbb
std
movsb
cmp
fnstenv
inc
cmp
adc
stc
dec
mov
pop
adc
sti
cld
inc
fildll
xchg
pop
test
or
inc
add
mov
cmp
mov
mov
sarl
fimull
fcomps
mov
sti
dec
jnp
pop
or
dec
add
push
mov
jne
xchg
das
inc
or
lret
pop
jmp
xlat
repnz
mov
fwait
rol
aam
xchg
stos
leave
sarb
pop
jae
call
xor
insl
push
std
xchg
dec
int
lods
les
push
push
xchg
test
fcompl
test
mov
jg
loopne
or
pop
and
mov
out
add
mov
adc
sti
insl
std
adc
adc
aad
pushf
enter
pusha
dec
sbb
push
stc
cmp
ljmp
sahf
fpatan
andl
pop
mov
and
push
ret
jns
loope
xchg
lock
test
outsb
inc
adc
or
popa
xor
movsl
movb
leave
mov
ljmpw
mov
aam
mov
push
cmpsb
aad
shrl
ret
nop
ffreep
std
out
leave
cmp
es
loopne
xor
in
mov
mov
adc
xchg
sti
sub
leave
push
loope
push
push
fdivp
pop
lods
lcall
cld
icebp
outsl
imul
shll
mov
aas
mov
adc
push
test
aam
sub
xor
mov
xchg
mov
fnstsw
push
xchg
mov
je
mov
dec
jae
sbb
sahf
adc
sbb
dec
or
cld
add
fmull
stos
add
and
pop
jns
mov
mov
js
mov
lods
mov
push
inc
imul
xchg
hlt
stos
mov
cmpsl
jno
push
jle
sub
out
dec
or
imul
das
arpl
pop
fs
lret
clc
or
or
jge
sbb
adc
aam
fdivr
scas
into
out
inc
subl
push
adc
dec
cs
adc
es
dec
std
mov
rcrb
dec
aad
es
xor
out
cmp
xlat
adc
mov
rclb
dec
pop
pop
dec
mov
add
movsb
inc
push
roll
xor
sub
aaa
lods
xchg
adcb
inc
jle
add
addr16
fmuls
push
xchg
sub
cmc
add
mov
scas
je
xchg
mov
ret
aas
jmp
xchg
imul
jno
pop
pop
dec
test
leave
sahf
inc
mov
das
dec
mov
pop
inc
sbb
mov
nop
rcr
scas
loope
lods
jle
jl
mov
out
push
adc
add
jp
dec
sub
mov
outsl
add
fdivs
fsubl
out
mov
mov
xchg
call
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
xor
push
repnz
lds
mov
push
fsub
adc
dec
int
in
pop
mov
jge
xchg
iret
xor
cmp
jecxz
and
cmpl
bound
push
loopne
cmc
cltd
aas
arpl
incl
jmp
call
add
jmp
call
mov
add
dec
cmp
and
adc
push
or
or
add
or
inc
dec
adc
pop
sbb
and
das
insb
sub
adc
adc
jbe
inc
mov
push
adc
and
sub
push
sbb
xor
and
and
adc
mov
xor
insl
wbinvd
or
or
sbb
push
push
jno
and
or
add
add
or
push
sbb
sbb
bndldx
add
adc
push
daa
daa
xchg
inc
aas
xor
xor
and
or
push
sub
cmp
subb
and
inc
add
pop
ss
or
popa
or
or
or
push
sub
inc
inc
inc
dec
sub
adc
add
pop
or
add
or
lcall
