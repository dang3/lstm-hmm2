out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
inc
push
dec
dec
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
cmc
push
sub
jle
out
cmc
push
shlb
xor
cmc
pop
sub
cmc
push
sti
mov
std
daa
mov
mov
pop
jmp
push
lock
out
dec
push
imul
and
adc
add
dec
loopne
and
out
in
or
push
or
add
and
addb
add
mov
das
add
xor
and
xor
ss
pop
push
jo
dec
dec
pop
cld
inc
push
lret
cmp
mov
adc
add
add
mov
mov
pop
fdivr
std
bound
pop
hlt
adc
enter
cs
je
mov
dec
movb
cs
push
push
pop
dec
dec
rorl
daa
add
arpl
xor
out
gs
imul
jb,pn
insb
outsl
arpl
sti
adc
xor
push
rorb
jmp
lea
imul
mov
add
in
dec
shll
push
mov
inc
push
bound
adcb
cmpsb
pop
stos
mov
xor
cmpsb
testb
sbb
inc
dec
shll
lods
mov
lret
mov
jmp
and
cmpsb
imul
mov
lcall
test
aas
shll
xorl
pop
xlat
xor
ficoml
pop
cwtl
loop
in
add
mov
mov
xor
out
popf
cmpsb
imul
jo
imul
cmp
add
or
fdivrl
outsl
pop
cmp
add
add
incl
outsb
je
jb
gs
andl
sbb
int3
std
adc
popa
fs
sub
dec
jo
rcll
insb
inc
adc
dec
enter
dec
dec
dec
inc
push
and
add
sbbb
fmuls
xchg
or
mov
aaa
sbb
sbb
cmpsb
jns
pusha
add
pop
sub
add
push
pop
inc
adcl
incb
and
add
sbb
fistps
or
popa
jmp
add
xchg
xor
add
pop
add
test
mov
lods
adc
ja
aas
dec
inc
sbb
test
mov
insb
or
add
pop
push
push
jb
add
and
add
cmp
inc
xchg
inc
xchg
pop
inc
test
lret
pop
stos
nop
mov
mov
addr16
stos
add
sti
cmp
fs
outsl
je
sub
inc
add
pop
cli
mov
add
sub
out
outsb
cmp
notl
stc
stc
call
inc
das
in
imul
push
sub
mov
je
or
jno
gs
mov
js
out
outsl
je
pop
push
lret
mov
sarb
adc
je
outsl
outsb
xor
mov
daa
mov
add
pop
scas
je
jo
jne
pop
in
mov
bound
pop
add
jb
arpl
popa
insl
pop
jge
in
mov
inc
push
inc
pop
dec
adc
outsl
data16
mov
fbld
and
pop
inc
jne
jb
je
xor
test
ljmp
dec
mov
inc
popa
jb
pop
arpl
loop
gs
cs
out
shll
push
mov
push
add
xchg
push
nop
cmp
adc
pop
pushf
and
or
mov
pusha
jp
jmp
cmp
int3
outsb
insl
arpl
sarl
int
mov
out
sarb
mov
rol
enter
push
lahf
cld
ret
and
mov
stos
mov
push
push
sbbb
xorb
aas
mov
cmp
pop
aas
cmp
mov
js
outsl
jne
sub
or
and
push
popa
insb
jecxz
divb
mov
xor
add
xchg
lret
ret
pop
xchg
add
or
cs
cmp
sarb
mov
je
add
inc
cmp
cmp
pop
jae
mov
testl
rol
andl
out
push
or
mov
add
jge
testl
or
call
cmp
outsb
fists
or
movb
pop
jle
fcoms
fmull
xchg
outsb
clc
lcall
jg
incl
shr
mov
push
shl
push
push
mov
filds
sti
in
jge
movl
push
mov
call
out
mov
sub
lea
push
sub
push
lea
push
idivl
outsl
adc
mov
or
mov
mov
loopne
mov
pop
pop
leave
ret
push
or
iret
sbb
call
sub
out
pop
sbb
dec
bound
mov
push
push
fistpl
sbb
xchg
adc
mov
dec
in
out
aaa
cmp
jne
call
incl
pop
add
lea
or
mov
mov
pcmpeqb
mov
imul
iret
repnz
and
and
and
mov
add
orl
in
arpl
push
jmp
adc
and
jmp
jg
xchg
sbb
pop
jmp
adc
fisubl
mov
jg
xchg
fwait
push
ret
cwtl
jmp
ret
cmc
adc
cld
call
shr
sub
and
sub
push
mov
adc
xor
push
cmp
loope
inc
jo
xor
add
xor
mov
test
aas
cli
sub
adc
movsl
jbe
fs
aas
decb
jmp
adc
ljmp
jmp
repz
lcall
ret
adc
and
add
pop
fcomp
hlt
push
repnz
inc
je
jmp
jo
movsb
or
cmp
pop
ljmp
push
jecxz
cmpsl
mov
mov
mov
mov
andl
push
push
xor
mov
cld
stc
mov
inc
add
push
int3
push
push
mov
in
push
call
push
js
in
add
movb
sub
xorl
ljmp
add
jecxz
imul
inc
add
sti
push
push
inc
call
outsb
in
in
sbb
dec
out
jb
test
in
negb
mov
push
fsts
mov
mov
test
out
inc
cmpsb
pop
cmpl
or
movsl
sarl
and
mov
and
stos
inc
pop
in
sbb
push
movzbl
ret
out
inc
cmp
cmp
mov
pop
loopne
xchg
clc
add
mov
andb
inc
or
fisttpl
xor
aas
mov
sbb
fwait
in
jl
push
aaa
or
mov
push
mov
cld
lods
mov
test
jne
cmpw
jne
dec
cmp
add
adc
jne
mov
jle
push
add
adc
and
adc
inc
nop
dec
adc
adc
add
cmp
and
push
xchg
nop
pushf
sbb
push
sub
or
fcmovnb
push
jle
push
int
xor
fidivl
icebp
lcall
and
pop
xlat
mov
sbb
mov
add
jge
push
push
jb
es
ds
jae
push
push
push
and
pop
mov
pop
pop
pop
xchg
or
mov
mov
push
pop
sbb
call
push
or
pop
ds
and
decl
shlb
xor
mov
lock
iret
movsb
mov
movsl
add
repnz
movsl
mov
movsb
mov
push
and
pop
mov
in
mov
and
rep
mov
xchg
lods
dec
dec
mov
jnp
adc
enter
sbb
mov
mov
dec
pop
mov
sbb
push
lock
dec
add
or
ja
jmp
das
pop
adc
or
or
push
cmp
jbe
mov
ds
push
push
mov
clc
push
sub
unpcklps
divl
add
mov
pop
pop
leave
dec
repnz
inc
xor
adc
adc
adc
or
dec
xchg
in
shll
call
pop
test
repnz
and
cmp
rol
xor
push
adc
jne
fwait
in
addl
cwtl
icebp
call
or
fs
and
add
mov
mov
cmp
stc
sbb
dec
lods
gs
or
nop
or
or
adc
jae
pop
xchg
negb
or
pop
clc
cmp
pop
popa
push
xor
mov
pop
sub
filds
clc
jle
xor
cmp
jle
push
ds
sbb
std
hlt
cmp
ja
xor
sbb
cmp
je
test
test
scas
mov
push
fstpt
push
and
jne
cmpl
daa
adc
insl
imul
add
inc
cld
jne
xor
cld
aaa
xchg
or
clc
add
add
mov
hlt
test
sbb
addr16
inc
cmp
les
fnstsw
mov
jno
imul
mov
or
jge
loope
stc
faddl
ja
jne
cmpw
ja
or
or
mov
push
push
inc
popa
cmc
or
mull
push
and
inc
mov
or
jne
cmp
pushl
cmp
shll
int
adc
sub
cmp
jne
or
sub
bswap
mov
dec
leave
or
ss
jg
dec
jge
shr
ret
sbb
lds
leave
jne
or
test
je
inc
fcmovnbe
decl
xor
test
add
and
push
fdivr
in
and
icebp
or
test
je
cs
jp
rorl
mov
shl
mov
lret
and
xchg
adc
adc
test
aas
mov
loope
sbb
aad
push
cmp
lods
mov
fildll
pushf
adc
push
mov
push
repnz
jmp
sbb
fstp
testb
mov
and
jg
imul
imul
mov
push
adc
rorb
and
fcomps
add
je
jmp
jne
add
sub
mov
pop
push
mov
mov
and
xchg
pop
mov
cmp
jne
or
jl
mov
hlt
subl
pop
pop
ret
jmp
or
rol
mov
cmp
dec
shlb
orl
xor
mov
hlt
push
je
rolb
out
pop
and
jge
xchg
mov
dec
xor
aaa
push
jmp
insl
sti
sbbl
jmp
add
sbb
mov
add
or
xchg
jmp
pop
loop
out
or
idiv
adc
jg
push
outsl
bound
mov
inc
inc
jmp
andb
repz
adcb
popl
mov
enter
dec
sbb
popa
in
insb
push
inc
add
cld
sub
add
xor
adc
adc
adc
cmp
call
pop
adc
iret
cmp
decl
and
aam
and
lahf
dec
insl
cmp
imul
decl
xor
dec
jbe
cmpb
xor
inc
cmp
jb
push
or
or
shrl
or
mov
pusha
mov
or
ffree
call
inc
sub
and
or
imul
out
mov
adc
and
push
add
in
mov
adc
cmp
jecxz
std
mov
lea
add
cmp
loopne
cmp
jae
incl
jo
mov
jbe
add
imul
insl
xor
or
inc
mov
mov
mov
roll
pop
sub
jo
mov
add
push
mov
adc
or
mov
cmp
push
cs
push
add
xchg
mov
xor
out
or
scas
in
mov
pop
jbe
or
cmp
mov
not
and
or
jl
and
or
add
lea
or
ljmp
jo
add
fucomi
push
cli
not
and
testl
lea
test
or
js
add
out
mov
push
aam
or
fisubs
fimull
add
pop
or
lea
shr
shl
push
mov
fistps
inc
sub
mov
and
not
cmp
outsl
scas
mov
repz
mov
neg
adcb
jmp
or
add
dec
daa
pop
jg
pushl
add
lea
sbb
jge
lods
loop
mov
push
push
xchg
test
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
pushf
loope
insl
roll
mov
sbbb
adc
fidivrl
adc
or
scas
roll
mov
notb
sbb
pop
int3
push
push
add
add
sbb
or
out
xor
add
sbb
and
les
repz
fsub
in
repz
addl
repz
test
fisubrs
pusha
adc
mov
scas
testl
xor
pop
sti
cmpsb
pop
les
subb
add
lahf
in
insl
idiv
loop
movups
push
push
pop
push
add
jns
fdivrs
pop
fwait
test
mov
pop
xor
out
xor
out
and
nop
imul
pop
mov
or
or
fmuls
out
mov
stos
lods
es
mov
mov
add
and
fidivrs
fstl
enter
das
push
mov
cmpsb
push
scas
mov
cmp
sub
adc
cmp
sbb
popa
adc
add
or
jbe
loopne
ljmp
and
lods
jge
jmp
mov
bound
cs
test
xchg
and
sahf
pop
clc
cmp
dec
cmp
inc
rclb
push
mov
or
fadds
hlt
push
and
jl
push
pop
clc
jb
repz
pop
pop
es
adc
inc
mov
repnz
shll
and
int
mov
lock
call
mov
mov
insl
mov
adc
cmp
sbb
loop
xlat
lods
mov
mov
adc
inc
add
rorb
fbstp
pop
and
out
dec
lods
clc
cmp
mov
fnstenv
mov
enter
jg
or
sub
stos
mov
mov
mov
stc
out
shl
int
and
sbb
loopne
ret
push
in
popl
roll
aaa
or
mov
mov
mov
push
fbstp
ret
fimuls
xchg
imul
gs
int
push
fsubrp
mov
adc
inc
loop
or
repz
out
or
fcmovbe
fdivs
faddl
sbb
shlb
cld
lcall
push
and
cld
not
daa
sub
aad
flds
outsl
adc
int
movl
mov
mov
adc
mov
xor
xor
test
fstpl
cmp
sbb
test
xor
in
and
cmpb
divb
adc
or
cs
js
repnz
adc
inc
sti
xor
in
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
push
sbb
sub
push
adc
cltd
jb
push
outsb
gs
fmuls
xchg
int3
pop
pusha
dec
mov
cli
cld
idivb
sbb
mov
insb
or
or
mov
xor
jle
sub
jae
int
in
lea
xor
imul
out
mov
fimuls
xor
xor
test
test
lods
xchg
jae
adc
fidivs
test
aaa
or
cmp
mov
in
or
push
aas
sbb
pop
loope
sarb
cmp
aam
cltd
js
sti
loop
into
jbe
les
in
jle
ja
out
in
idiv
ss
in
cmp
fstpt
jl
pop
je
dec
jnp
xlat
insb
pushl
or
aam
gs
lods
les
cli
cmp
cli
mov
js
subl
sub
popa
fldt
push
repnz
sbb
jl
inc
int3
or
repz
ljmp
inc
push
or
outsl
dec
sub
stos
adc
lock
pusha
fxch
fwait
hlt
cmp
adc
xor
aas
and
ja
cmp
pop
pop
gs
sbb
shl
pop
jo
or
lock
int3
or
rcrl
push
or
ja
lret
repz
mov
dec
jge,pt
out
call
setnp
sbb
pop
inc
movsb
or
test
dec
jns
pop
int
jg
call
outsl
sbb
das
mov
push
jp
sbb
int
pop
jb
xor
sbb
out
jecxz
pusha
call
ret
mov
ljmp
fdivl
mov
enter
cmpb
lds
jae
mov
sbb
imul
repnz
fcomp
sub
xor
fiaddl
mov
in
jns
pslld
ret
repz
mov
roll
dec
rcrb
mov
pop
jge
xlat
pop
add
pop
movsb
push
add
inc
or
or
inc
mov
mov
jp
js
addb
mov
mov
xchg
jge
cmp
jl
js
sub
push
push
push
testb
xor
inc
insb
js
adc
inc
inc
insb
xlat
pop
fisubrl
insl
push
push
lahf
inc
pop
inc
jl
insl
test
jb
adc
sub
into
ljmp
add
sbb
loop
sub
jne
xchg
insb
jg
adc
inc
add
push
push
inc
stc
sub
dec
shlb
or
mov
rorl
sub
fmuls
arpl
clts
jl
cltd
test
data16
add
repz
add
stos
cmp
add
in
insb
jle
or
cld
std
aaa
aaa
dec
jae
cld
inc
cmc
push
adc
std
iret
or
sub
aam
push
adc
stos
mov
and
pop
test
fcomps
inc
shrb
outsb
adc
push
mov
nopl
push
sub
pop
imulb
push
push
imul
inc
test
mov
in
push
inc
test
and
cmp
pop
dec
lods
lret
loop
in
sbbl
and
mov
loope
add
pop
push
call
jecxz
sub
fcoms
add
sahf
push
or
adc
and
jne
inc
or
add
jbe
popf
push
sub
ficompl
mov
sbb
fsubr
insb
insb
out
cmp
cmpsb
jecxz
pop
jnp
out
add
sbb
add
cmp
pushf
sbb
nop
paddw
inc
pop
pop
mov
jl
mov
into
mov
sub
push
jl
push
je
outsl
mov
pusha
adc
inc
lods
aas
jbe
pop
outsb
add
and
xor
in
es
mov
mov
imul
mov
lcall
mov
xor
ret
ret
lds
scas
imul
pop
leave
lret
data16
fs
int
das
into
iret
jmp
cmpsb
imul
aam
cmpsb
jmp
xlat
aaa
fcomp
mov
pop
cltd
ficompl
cmpsb
pop
ss
ficomps
fnstsw
jae
loop
mov
lcall
out
mov
ljmp
insb
fwait
cmpsb
jmp
icebp
push
pop
xlat
repz
sbb
divb
jo
in
clc
inc
add
inc
cli
cmp
jg
sbb
cld
push
mov
mov
mov
aaa
ja
mov
adc
sti
and
in
inc
adc
cld
jae
lods
add
outsb
mov
icebp
push
adc
sub
sti
sub
fdivs
push
adc
cmc
xor
adc
sarl
xchg
sub
inc
sub
outsb
adc
lea
xor
call
cwtl
dec
push
and
fidivl
lds
xchg
adc
pop
clc
outsl
lock
pop
icebp
or
roll
gs
lcall
sub
mov
bsf
setbe
pushf
imulb
fcom
rol
pop
inc
sar
sub
ror
push
push
das
icebp
out
testw
add
outsb
stos
in
sub
lock
mov
or
add
and
stos
or
adcl
adc
pop
cmpsl
add
lea
int3
add
cmpsb
cld
call
jge
aas
and
xor
loope
push
mov
cld
test
ds
xchg
mov
movzwl
cltd
idiv
push
test
add
lods
cld
dec
push
sbb
sbb
xor
mov
call
dec
call
mov
mov
scas
aas
and
scas
mov
push
xchg
cld
jae
sbb
mov
pushf
popl
xchg
add
es
std
inc
or
data16
add
lock
xor
scas
subl
bnd
les
and
adc
cmp
sbb
test
xchg
fs
mov
sub
push
push
xor
mov
mov
dec
clc
push
push
push
push
fucomi
and
nop
movsb
lret
mov
xchg
ljmp
pushf
push
mov
jnp
scas
mov
fistpll
sub
mov
pop
shrl
xlat
and
xor
mov
mov
jmp
sub
mov
jmp
mov
and
mov
daa
push
call
push
pusha
cs
addl
mov
inc
add
clc
std
insb
pushf
mov
or
push
out
jbe
inc
add
lods
movsb
jg
adc
dec
push
xchg
fidivs
inc
jmp
shll
in
sbb
jmp
push
jge
in
mov
fcmovnbe
lock
mov
fmuls
aaa
or
jns
push
adc
ss
adc
mov
ds
loop
mov
aas
cmpsl
clc
cmp
dec
jg
mov
xor
push
cmp
dec
loop
popa
add
call
pop
ret
loopne
insb
fistpl
pop
cmp
dec
cwtl
pop
data16
fists
int3
loopne
push
cli
or
sar
rol
xchg
fimull
notb
ljmp
ja
in
jg
sub
push
rcl
ljmp
lea
xchg
orb
call
pushf
mov
push
mov
sahf
jns
jg
jle
test
mov
fildll
xchg
jns
jle
mov
add
ret
sub
or
loopne
add
fstpt
xor
imul
mov
into
push
jnp
pushl
loope
mov
cld
mov
pusha
xor
les
in
in
xor
and
and
push
data16
push
or
jns
or
sbb
call
or
push
stos
movsl
in
adc
adc
stc
cld
clc
add
out
cmp
cli
adc
cmp
call
outsl
orl
iret
xchg
fwait
mov
fucomi
adc
mov
jmp
inc
pop
push
ljmp
test
jmp
cli
mov
int3
jae
add
call
inc
fnstenv
xor
fs
testl
std
enter
sub
sti
insl
mov
push
jnp
sti
lcall
cmpsb
adc
psubsb
jl
and
sub
loopne
into
bound
dec
outsb
adc
and
aaa
jae
loope
mov
add
xchg
mov
or
or
add
and
xor
leave
xchg
jg
bound
and
inc
push
mov
mov
into
ret
jmp
orl
repnz
in
jo
pop
mov
pop
xor
cmpsb
ljmp
mov
add
jne
or
push
add
cmp
outsb
cltd
ljmp
push
fwait
lods
imul
mov
adcl
int3
mov
jl
test
mov
dec
push
dec
mov
cmp
cmp
je
push
dec
push
arpl
mov
je
leave
cmp
sbb
sub
mov
or
faddp
push
out
mov
mov
pop
push
je
dec
hlt
pop
inc
mov
xor
bound
pusha
push
daa
sti
call
addb
popa
adc
aad
jns
lret
dec
movl
cwtl
xchg
daa
insb
pop
jae
clc
xchg
sub
mov
lret
mov
aam
fsub
jb
ja
call
call
add
or
push
mov
add
mov
lea
loopne
adc
adcl
xchg
inc
insl
in
mov
scas
adc
inc
xor
lods
adc
mov
adc
push
push
in
add
out
pop
mov
pop
mov
jo
bound
clc
mov
push
inc
sar
add
mov
adc
adc
or
xchg
add
pop
rcrb
das
or
hlt
cmp
and
mov
xor
add
pop
and
ljmp
filds
clc
xor
push
push
push
mov
pusha
ss
push
ret
imul
xor
push
sub
insb
cmp
lcall
push
mov
dec
jb
dec
mov
clc
stc
inc
out
cli
push
sub
cs
std
insb
insb
js
pop
fs
test
sub
or
shrd
sub
scas
scas
or
mov
packssdw
gs
mov
dec
imul
push
rorb
rolb
jmp
in
shll
aam
aad
xlat
dec
sub
int
fcoms
jno
jne
sub
data16
jae
inc
inc
loopne
fnstenv
dec
rcll
ds
cmpsb
jmp
mov
mov
mov
movsb
js
xor
insb
dec
movsl
cmpsb
push
dec
je
shll
fs
ficompl
out
testb
dec
in
in
out
out
lock
dec
mov
xor
mov
shlb
ret
mov
les
outsl
mov
enter
in
inc
leave
arpl
lret
int3
mov
mov
in
enter
xchg
in
hlt
xor
into
mov
cwtl
cmp
clc
add
push
adc
push
std
xor
into
fistpll
xchg
mov
jo
dec
cmpb
add
mov
xor
push
nop
cmp
pop
repz
cmpl
outsl
dec
mov
jmp
push
pop
int3
pop
jp
and
sub
stos
sti
je
push
add
cwtl
mov
sahf
pusha
mov
adc
inc
pop
xor
push
xor
ftst
sub
push
shrb
cld
shlb
cmpsl
repz
fcmovbe
and
negb
mov
push
push
shrl
imul
xor
daa
rolb
leave
xor
sbb
or
outsb
xor
sbb
call
mov
negb
or
xchg
or
in
ja
adc
aas
stc
and
rolb
add
sub
adc
inc
push
lretw
or
push
out
je
push
mov
aam
or
xchg
sbb
ja
push
jne
call
fildll
adc
cld
inc
je
xor
cs
mov
adc
jns
icebp
lock
xor
mov
in
cltd
jne
adc
mov
xor
ret
push
sahf
push
hlt
decb
mov
pop
jae
je
dec
or
mov
loope
fidivs
sbb
mov
xor
fstp
sub
dec
aaa
call
sub
mov
das
popf
cmp
xlat
jne
jmp
jle
jg
pop
mov
add
test
insb
xchg
xor
push
popf
adc
jg
mov
pop
outsb
aaa
stos
sub
sbb
pop
je
adc
sbb
or
pop
or
and
mov
sub
insb
lock
xchg
add
jns
jne
pcmpeqb
sbb
je
js
jns
or
jle
adc
adc
movb
jecxz
cmp
repz
and
rorb
inc
cmp
sbb
cmp
pop
mov
pop
mov
sbb
in
in
andb
cmp
std
add
outsl
call
pushf
cs
cmpsl
popa
lret
mov
lret
je
outsl
outsb
cmp
sub
je
outsl
arpl
int3
mov
imul
jp
sub
xorl
jg
jmp
inc
cmpsb
mov
xchg
dec
sub
lock
fs
dec
pop
jne
scas
push
lods
sub
pop
ds
inc
stos
xor
add
pop
jae
adc
out
xchg
insl
cmpb
fisttps
je
jnp
push
adc
cmp
jne
ss
cmp
icebp
or
xchg
pop
clc
push
pop
xchg
in
push
push
insb
push
das
cs
mov
mov
pop
leave
mov
leave
repz
mov
aas
jge
mov
add
bsr
push
add
cmpsl
and
pop
push
mov
subb
push
mov
std
push
mov
and
pop
mov
sar
fs
cwtl
add
fdivrs
jb
cmp
push
sbb
int3
jne
popa
pop
out
sbb
jae
call
fsubrl
fmuls
lcall
in
call
mov
or
pop
add
les
movsl
lcall
push
imul
cmp
nop
inc
lcall
xor
mov
mov
pop
xchg
sub
aas
popa
arpl
xchg
imul
xchg
arpl
je
mov
pop
xchg
outsl
outsb
es
pop
shll
rcl
aad
xlat
xor
mov
shll
fcmovu
sub
fs
fstpl
jae
loopne
loope
jns
dec
shrl
in
out
add
imul
mov
sub
outsb
imul
cmp
cmpsb
imul
imul
mov
add
or
arpl
sbb
imul
movsb
add
xchg
mov
mov
pop
push
adc
mov
mov
sbb
fisttps
add
jne
je
int
jne
call
iret
and
pop
ret
fstp
sbb
inc
cld
jmp
and
sbb
popw
popf
fdivr
lods
movsb
imul
or
cli
mov
cld
lock
sbb
outsl
xor
mov
into
mov
cld
xor
sahf
xor
mov
dec
dec
jmp
sub
cmp
mov
adc
push
ret
dec
inc
mov
stc
mov
cmp
sbb
out
aaa
fstpt
cmp
mov
mov
incl
scas
sbb
jmp
dec
cld
les
xchg
push
mov
mov
cmp
psubusb
mov
fdivr
shlb
fildl
clc
mov
jl,pn
and
mov
inc
push
add
sbb
sar
or
push
mov
daa
or
adc
push
aam
sbb
inc
sbb
pop
leave
enter
std
jg
dec
jb
std
cld
in
push
outsb
popa
arpl
cmpsb
jmp
cmp
cmpsb
insb
popa
jns
jb
cmpsb
imul
or
fwait
push
push
imulb
mov
enter
mov
push
test
mov
or
cld
jbe
mov
pushw
inc
inc
mov
push
cmc
inc
cmp
jb
shll
movb
pusha
push
mov
hlt
add
dec
gs
xchg
test
mov
xor
xor
fsub
fs
jmp
arpl
movsb
imul
mov
jne
stc
loopne
test
jmp
cmp
out
data16
sub
lahf
divps
sbb
push
shll
scas
idivl
mov
cmp
xor
test
mov
sbb
inc
pusha
xorb
cmp
dec
and
sub
lret
insl
jp
pop
mulb
imul
aam
cmpsb
fmulp
sub
pop
mov
cmp
cmp
icebp
xchg
mov
mov
and
cmp
fldl
jae
adc
loope
stos
jne
push
pop
mov
ret
adc
dec
push
pop
mov
adc
pop
xor
and
and
lods
xchg
push
mov
js
cs
mov
jge
out
movsb
jo
sbb
int
jae
out
loope
and
pop
and
xchg
addb
adc
rorl
sub
inc
rcrl
or
lret
hlt
push
mov
inc
movzbl
sbb
div
cmc
xlat
fmull
cmp
dec
mov
lds
or
shlb
and
push
shrb
aaa
clc
add
movsl
jmp
icebp
mov
xor
shll
jo
jo
push
xor
shrl
fs
insb
pop
pop
stos
and
inc
gs
fs
cltd
jb
and
outsw
sbb
xor
sbb
pop
add
mov
dec
xor
icebp
jne
add
and
rolb
orl
add
outsl
jne
mov
dec
fs
gs
push
dec
inc
xchg
xchg
xchg
dec
shll
and
xor
adc
ja
or
outsb
inc
cmp
push
mov
cmp
ret
push
cwtl
dec
int3
xchg
cmp
orl
xchg
enter
sbb
sbb
add
in
push
ss
hlt
add
imul
movb
call
cld
cwtl
das
cwtl
cmp
inc
gs
xchg
xor
lock
xchg
sbb
inc
hlt
cmp
xlat
jl
sbb
or
lea
push
loop
mov
lea
popa
mov
push
cmp
mov
dec
xor
imul
shrl
arpl
insb
insb
jbe
sub
jae
outsl
outsl
jb
lcall
fisubrl
fstpt
imul
push
lcall
outsb
push
cmp
xor
imul
ss
pop
movsb
das
pop
hlt
outsl
cmc
imulb
xor
or
popa
jae
or
js
call
xor
lcall
je
jo
lcall
insb
cmpsb
imul
imul
cmpsb
imul
lcall
lcall
xor
das
xchg
cmpsb
imul
imul
dec
sar
std
mov
lret
rorb
icebp
insb
imul
in
cli
sti
pop
ljmp
jns
pop
nop
mov
dec
jl
push
test
pop
in
ja
jge
and
and
pushl
mov
fwait
xor
pop
mov
js
pop
pop
add
pop
mov
dec
testl
mov
and
dec
inc
xchg
stos
or
fistl
daa
push
jge
mov
cwtl
paddb
mov
sub
adc
call
insb
outsb
aaa
insb
adc
scas
sub
lods
mov
sub
loop
sub
mov
int3
push
inc
lock
mov
pop
out
call
and
insl
enter
dec
fnsave
daa
cmp
and
std
fidivrs
jbe
add
cmpps
inc
les
fnsave
pop
cmp
loopne
bound
mov
mov
and
sbb
pop
mov
add
xor
adc
adc
les
dec
call
jb
adc
js
push
das
cmp
adc
fimull
or
addr16
ret
jmp
imul
in
sub
fists
stos
xor
cmpsl
fimuls
add
adc
cwtl
or
lea
shrl
inc
xor
xor
cmpsb
jmp
aas
jg
add
gs
pop
jo
pusha
ret
push
or
and
in
pop
dec
inc
nop
add
mov
test
push
mov
or
mov
popf
xor
inc
adc
repnz
pop
das
popf
pop
enter
or
shlb
push
push
fs
jne
rorb
mov
jb
sbb
fmull
icebp
int
cltd
aas
pop
inc
lods
lock
call
jns
jnp
or
loopne
scas
stos
sbb
call
ret
add
mov
mov
scas
pusha
mov
or
add
jbe
rorl
mov
pop
int3
push
outsb
loopne
iret
mov
jmp
pop
pop
or
idivb
inc
out
and
jl
test
xor
jb
fdivrs
adc
sub
sbb
shll
outsl
lcallw
ja
jb
pop
roll
push
imul
icebp
lods
mov
mov
add
mov
fs
clc
adc
cmp
push
icebp
push
mov
push
je
lcall
sub
dec
outsb
insb
imul
gs
push
gs
xchg
gs
je
outsb
jae
mov
outsl
xchg
outsb
inc
outsl
gs
or
pop
ljmp
je
dec
je
push
jge
aad
or
je
pop
loope
jmp
mov
mov
sbb
jmp
nop
jmp
push
jl
jg
fildl
inc
push
or
fisubl
cmp
dec
cmp
cmp
sub
sub
pop
or
pop
lret
inc
inc
or
or
outsb
lea
xchg
jb
inc
js
je
mov
add
cmpl
mov
adc
imul
push
jl
fisttps
sub
fisttps
sub
push
inc
dec
sbb
stos
ss
inc
test
sub
mov
pop
push
lcall
dec
or
ror
aas
lcall
add
add
jmp
out
lods
mov
adc
js
imul
mov
mov
lods
and
pop
or
add
ljmp
mov
sbb
jle
jno
shr
jle
movzwl
mov
jne
daa
add
sub
cli
pop
mov
adc
add
jmp
cmp
jne
xchg
into
mov
add
or
sub
ss
adc
or
jae
push
enter
xchg
xor
outsb
adc
pop
pop
pop
inc
mov
inc
inc
cmp
test
jg
xchg
add
jmp
inc
xor
pop
insl
push
lods
add
dec
dec
jo
pusha
adc
data16
sbb
dec
je
test
sbb
loop
inc
adc
iret
aas
inc
xor
outsl
clc
test
je
and
mov
pushl
add
push
addr16
mov
clc
in
sub
mov
mov
lods
fsubrs
add
jp
adcl
add
xor
push
lea
sbb
lods
push
mov
call
sub
lahf
inc
aaa
incl
lcall
or
push
mov
sub
push
outsl
aad
fmul
pop
add
push
push
out
out
inc
cmp
cld
push
or
pop
in
mov
jg
jge
arpl
pop
add
ret
mov
or
and
inc
cmp
testb
je
pop
inc
sub
adc
shr
or
or
inc
fwait
push
pop
sbb
pop
add
jae
mov
push
push
data16
adc
mov
jle
call
mov
cmp
and
loopne
push
test
sub
mov
sub
sbb
mov
jmp
and
mov
cmpsb
in
sbb
dec
shll
js
insb
outsl
shll
cs
xchg
cmpsb
fs
xor
insb
js
pop
cmp
js
je
jge
xor
mov
addr16
in
push
or
xor
or
xlat
mov
pop
or
fildl
or
negb
add
add
xor
cmp
sub
push
mov
jmp
add
pop
mov
mov
or
pop
test
outsl
xchg
push
sbb
adc
mov
loopne
jb
add
and
int3
mov
clc
les
jne
imul
mov
push
xor
xlat
sbb
aad
jl
mov
jmp
push
adc
ljmp
add
jp
push
call
add
jno
jge
aam
bound
insb
or
xorb
lock
and
clc
mov
or
mov
jge
pop
scas
je
sahf
jbe
movsb
call
dec
inc
mov
ror
test
adc
push
fsubrl
pop
call
jbe
lea
or
inc
inc
ss
fcomps
sub
cmp
mov
adc
das
cmp
daa
test
mov
or
pop
push
jle
rorb
pop
fstpt
push
fmuls
push
lfs
add
pop
cmpsl
cmc
inc
rclb
mov
mov
imull
sbb
xorl
xor
pop
test
loopne
or
mov
push
mov
rorb
andb
in
mov
jmp
stos
test
pop
pusha
test
sbb
enter
and
pop
adc
out
out
adc
int
arpl
in
in
jns
inc
in
data16
imul
jmp
sbb
fsubrp
in
in
shlb
out
push
out
xchg
fwait
jmp
std
jae
std
int
rorb
in
push
push
push
inc
ljmp
data16
xchg
gs
xchg
data16
mov
sbb
ss
mov
lret
je
popa
jns
push
pop
push
repnz
test
push
fdivr
add
mov
mov
xor
sbb
mov
push
and
push
mov
pop
std
xlat
and
jp
and
xlat
daa
cmp
sbb
push
mov
pop
dec
or
movsb
xor
sub
xor
cmpl
dec
push
and
fmull
mov
jg
lret
in
call
push
scas
mov
and
and
adc
pop
or
sarb
add
jge
pop
andb
addr16
aad
lock
rcll
mov
xorl
js
test
xor
pop
in
jnp
imul
push
or
inc
out
dec
inc
pop
jb
enterw
jae
sub
movsb
inc
enter
pop
data16
cmp
movsl
cmpl
addr16
loop
mov
fwait
mov
sbb
out
push
popa
jne
adc
xor
inc
mov
in
mov
cs
fsubl
int3
inc
movsl
rorb
sbb
and
sbb
push
pop
mov
lret
int3
jmp
mov
lods
test
xor
repz
xor
and
and
iret
out
xor
push
adc
fwait
xchg
sub
xchg
push
cmp
xchg
hlt
mov
sbb
and
dec
cs
xchg
adc
lret
dec
cs
enter
mov
mov
ret
ss
mov
arpl
andb
or
inc
popa
mov
mov
jg
mov
arpl
gs
js
decl
movq
outsb
imul
insb
imul
or
and
xchg
mov
add
dec
gs
jbe
leave
add
dec
cltd
add
push
mov
dec
gs
sysenter
add
fdivl
je
inc
outsl
aas
inc
jno
and
add
mov
cmpb
int3
sbb
inc
leave
mov
iret
mov
jae
dec
push
popa
imul
imul
aas
push
outsl
outsl
insb
push
fcmovnu
mov
jo
push
push
and
or
je
push
mov
out
mov
jo
adc
pop
inc
insb
call
cwtl
add
xchg
btsl
imull
loop
jg
or
xor
jnp
inc
add
and
jg
dec
outsl
fs
adc
sub
dec
outsl
lods
dec
imul
dec
pop
movq
push
imul
and
dec
sbb
ret
pop
mov
jns
add
or
and
popa
fadds
mov
cmp
test
outsb
dec
outsl
add
or
push
xchg
fsubrl
loope
aad
gs
jo
mov
sbb
rcrb
xor
cmp
paddq
fdivrl
je
jbe
call
loope
das
push
lea
push
leave
cs
push
stos
cmp
push
jae
stc
jae
outsl
adc
push
jno
hlt
and
sub
decb
sti
or
imul
adc
fst
push
add
les
xor
fbstp
mov
imul
and
pop
test
imul
outsb
addr16
js
icebp
pop
js
mov
das
je
sbb
adc
inc
add
test
ret
out
push
rcr
arpl
lods
sbb
add
cmp
push
jmp
aad
inc
push
idivb
add
arpl
cmp
fists
pusha
pop
push
test
xchg
pop
add
decl
dec
inc
push
dec
inc
lods
add
stc
fnsave
jae
data16
add
jae
popa
inc
inc
test
aam
ret
fisubrl
xor
popa
mov
push
xor
insl
push
lds
das
mov
adc
push
or
xchg
sbb
mov
pop
add
addr16
dec
mov
jge
xor
xor
jb
out
jae
adc
and
cmovne
insl
add
cmovno
push
xchg
xchg
add
insl
pop
roll
jo
aaa
lret
jo
cmp
xor
mov
ds
or
pop
mov
dec
add
pop
adc
adc
popf
mov
xchg
dec
xchg
popa
dec
mov
and
push
xor
in
div
adc
jns
imul
jo
insb
lea
xor
fwait
cmp
xchg
stos
aas
daa
shrl
mov
inc
pop
rdmsr
pop
repz
cmp
dec
pextrw
arpl
loope
jbe
out
fdivs
data16
mov
ss
ret
daa
mov
mov
ja
mov
outsb
movsl
or
test
mov
ljmp
cmp
mov
jmp
mov
in
pop
test
cld
pushf
jmp
xchg
dec
scas
add
aam
cmc
icebp
sub
inc
sbb
push
out
movsb
xchg
push
mov
or
pushf
sti
jbe
mov
test
add
jge
and
or
stos
jae
fldl
cwtl
setl
sbb
push
subb
cli
mov
adc
add
adc
sub
add
cmp
pusha
ss
std
stc
or
rcrl
gs
xor
push
cltd
cmp
decl
daa
pop
int3
pop
andl
mov
lret
fldl
loopne
les
dec
pushl
cmpsl
lods
int
ret
push
scas
pop
inc
pslld
mov
xchg
add
inc
adc
stc
rcll
mov
or
mov
mov
ficoms
arpl
jg
xchg
cmp
lcall
jbe
pop
xchg
and
pop
add
or
divl
out
repnz
dec
mov
fwait
adcl
pop
loop
ror
in
add
test
pusha
push
pusha
jo
pushl
pop
dec
sbb
inc
mov
add
adc
cld
dec
cmpsb
mov
daa
ljmp
mov
and
pushl
jp
stc
sub
add
jno
or
pusha
push
push
inc
repnz
adc
enter
xchg
not
push
movzwl
lcall
lahf
ffreep
and
shl
shl
jnp
xor
lcall
out
ret
push
mov
jbe
cmp
or
lcall
aam
sbb
clc
push
add
pushf
mov
pushf
pusha
push
dec
push
scas
xchg
arpl
mov
call
outsl
and
ror
insb
outsl
pop
and
xchg
push
or
adc
sub
movsl
repz
stc
movzbl
lea
sub
mov
in
and
rol
insb
testl
mov
in
loopne
fistpll
rorl
jmp
cwtl
testb
int
sbb
add
pop
sub
stc
add
lcall
call
call
xlat
mov
and
jl
mov
outsb
call
test
shr
test
rcl
mov
pop
outsb
decl
push
pushf
dec
add
push
dec
out
shl
sub
sub
pushf
sub
adc
fdivrl
outsl
mov
push
jmp
jmp
stos
sbb
cmpb
or
and
out
out
out
pushf
mov
jmp
loope
pusha
sbb
or
rcrl
xor
scas
push
call
lea
mov
fsubs
jnp
mov
leave
pop
pop
and
test
pop
popf
mov
jmp
cltd
adc
data16
xchg
xor
fisttps
cmp
jnp
xlat
dec
mov
mov
mov
ss
inc
test
cwtl
jmp
inc
xchg
mov
es
and
dec
adc
sbb
mov
insb
mov
enter
std
lea
lea
mov
sbb
sbb
or
adc
std
outsb
in
scas
loop
setnp
dec
sbb
sbb
mov
mov
aad
jmp
mov
dec
push
cld
mov
xchg
int
cmp
adc
push
mov
push
fistpl
pusha
data16
pop
aam
ret
and
mov
daa
pushf
push
adc
sub
mov
shll
push
insl
sbb
jmp
stos
mov
test
sarb
mov
pushf
xchg
or
sbb
pop
push
or
cwtl
lahf
pusha
psrld
add
mov
addb
int3
loopne
getsec
pextrw
or
call
aas
pushf
sbb
pop
push
call
clc
xor
add
xchg
xchg
adc
and
fcompl
push
call
push
xchg
xchg
mov
in
sbb
mov
popf
jmp
filds
mov
and
daa
ret
call
pushf
not
push
mov
lea
adc
sar
push
pop
xchg
fsubrl
push
or
sti
mov
call
loopne
fstl
loopne
stc
into
pusha
and
dec
les
mov
adc
jae
jg
fldt
and
testb
sub
pusha
xor
add
pop
aam
loope
adc
stos
sub
mov
dec
push
mov
scas
inc
je
ja
adc
pop
push
xor
jmp
push
out
outsl
mov
add
aam
ret
shr
dec
cmp
mov
xlat
dec
call
pushf
cmp
stos
clc
mov
das
call
sar
sar
stc
int
fsubp
je
add
rcr
fs
push
arpl
and
mov
mov
push
jne
pushf
fistpll
clc
cmp
jmp
out
aaa
roll
daa
test
lods
adc
ret
dec
fsubs
fsubr
mov
sub
test
ja
in
add
call
call
cmp
jb
mov
add
jnp
ljmp
and
push
mov
and
lock
cmp
add
jmp
mov
add
ret
add
shll
mov
ret
adc
mov
add
je
sbb
xlat
xchg
mov
adc
stos
adc
not
pusha
loopne
xor
rorb
rorb
lcall
mov
stc
rorl
push
adc
insl
jle
sbb
push
cmp
orl
xchg
icebp
pop
nop
xorb
mov
mov
call
push
add
outsb
scas
dec
jmp
cld
mov
push
push
test
pop
push
lcall
popf
inc
fs
sbb
mov
dec
add
pop
jmp
pushf
mov
or
out
fstl
inc
push
xlat
or
sub
fsubrs
add
sub
sbb
daa
xchg
push
std
out
iret
cmp
test
mov
sysret
call
shlb
repnz
sete
mov
mov
aam
mov
lds
xlat
test
sbb
imul
sbb
jbe
popf
push
out
out
pop
push
fdivrl
outsl
adcb
jmp
outsl
clc
shr
pop
rorb
sub
mov
pop
push
pushf
movsb
inc
nop
es
jmp
loope
push
mov
imul
cli
push
pusha
mov
mov
dec
enter
icebp
sbb
jmp
lcall
outsb
js
xchg
lcall
pop
stc
add
cmp
cmp
lods
mov
jmp
xlat
aaa
jle
ret
xor
sahf
push
clc
push
sbb
jmp
or
mov
inc
xchg
jno
ret
ja
out
pop
xchg
cmp
or
rorb
dec
divb
in
mov
std
xor
add
or
push
pushf
lcall
movl
rcl
seta
fsubrl
cmp
mov
test
dec
adc
adc
stc
xor
ljmp
jne
sti
popf
xorl
jl
fxch
es
sub
adc
ss
pop
jne
cs
sti
outsb
lahf
shl
rol
dec
jne
into
jo
mov
xor
adc
fcomps
xor
mov
popa
sbb
add
mov
call
clc
xchg
mov
insb
lcall
mov
cmp
fistpll
sub
ljmp
add
dec
xor
stc
mov
pop
pop
fbld
leave
and
mov
mov
je
ja
jmp
push
fsubr
dec
popf
inc
xor
jmp
pusha
scas
sbb
cmp
ficoml
in
mov
pusha
push
sub
mov
xchg
push
mov
fidivl
test
pop
fdivl
lock
nop
jmp
ror
decb
sarb
pusha
and
mov
xchg
shr
scas
stos
jge
test
and
int3
leave
jge
xchg
adc
push
xor
ret
mov
cltd
sub
jecxz
or
dec
popf
sahf
mov
mov
out
ds
pusha
push
popa
fidivrl
adc
mov
movsb
stos
out
or
mov
sarl
jno
insb
push
orb
xchg
and
cld
push
js
les
lock
xor
flds
test
or
popf
ficomps
adc
xchg
sub
mov
int3
adc
cmp
pop
clc
ds
les
pushf
pop
or
mov
pushf
xor
fsubrl
jmp
out
push
xchg
stc
dec
outsl
mov
clc
ds
sbb
jmp
and
daa
in
pusha
cli
loope
call
cmp
pop
push
push
mov
cmp
test
int
adc
pop
mov
or
loope
jbe
insb
push
xor
push
pop
sbb
rclb
xor
adc
loopne
aad
mov
push
scas
out
aas
jae
sub
xor
sahf
ja
xor
imulb
movb
pushf
jl
cs
pop
sti
test
subl
xchg
push
insb
mov
sub
shll
dec
push
lock
xor
andl
push
int
jmp
or
mov
outsl
ja
rorb
cltd
pusha
push
outsb
ror
lea
cs
insl
pop
adc
or
popa
cmp
xchg
iret
ja
cld
mov
testl
and
jb
sub
in
push
mov
xchg
sti
pushf
add
or
mov
ja
fidivs
fcomip
lret
xchg
pushf
cmp
call
arpl
pop
cmp
jp
pushf
pop
pop
or
scas
out
cmp
fistps
cld
or
lock
call
add
mov
xor
xchg
xchg
dec
sbb
pop
cltd
jmp
jmp
inc
pop
mov
pop
add
bnd
jns
aas
mov
lret
fcom
into
loope
add
stc
sub
mov
fidivs
or
loop
ljmp
rcl
jo
dec
pop
inc
fcmovbe
lahf
dec
fcompl
adc
into
out
and
stos
out
mov
and
sbb
push
les
mov
inc
pusha
stc
or
push
xor
shrl
sub
ja
cld
push
pop
sub
mov
loopne
jg
imull
fdivr
call
add
ret
pop
mov
push
push
test
cli
add
fmull
cmp
sub
pushf
cmp
cmp
cwtl
xor
divl
loop
test
and
dec
in
scas
rcrb
push
lcall
fdivl
fildl
add
mov
mov
es
rol
ljmp
outsb
dec
ss
fnstsw
sqrtps
lcall
fiaddl
ret
lock
mov
lcall
jge
fadds
xchg
jg
fldcw
les
mov
popf
adc
das
fisttpl
mov
out
jae
stos
adc
sarl
pop
rcrl
pop
and
sub
leave
imul
jnp
enter
or
fucomi
mov
jae
jg
dec
sbb
fidivrs
mov
mov
repz
mov
fmuls
ficomps
pop
dec
jae
loope
testl
into
jle
leave
outsl
aas
stos
les
das
cltd
fcmovnu
mov
pop
imul
pop
mov
sbb
iret
lret
js
mov
fwait
dec
adc
loope
ja
das
push
pop
fwait
or
mov
fdivrl
xchg
mov
bswap
xor
mov
lahf
in
mov
dec
out
dec
sahf
cmp
rcrl
iret
xor
jnp
comiss
femms
out
sbb
pandn
cmp
add
out
int
jnp
mov
filds
daa
cmp
js
push
mov
mov
iret
mov
fwait
addr16
xor
mov
setg
pop
jnp
fidivs
jnp
sbb
scas
daa
jnp
xlat
push
xchg
push
fldt
jg
inc
fidivrs
cld
sbb
lahf
popl
sub
das
lcall
sti
fistpll
cmc
xchg
push
push
mov
arpl
nop
mov
or
sbb
jbe
loopne
insb
insl
pop
nop
mov
or
daa
mov
rorb
hlt
sbb
sti
lea
sbb
mov
push
jno
jo
mov
cmc
cmc
cmp
shl
jmp
rclb
xor
or
xor
jne
or
xlat
pop
push
add
jg
and
mov
outsl
mov
cmc
jecxz
in
imulb
pop
sub
test
sub
je
shll
sub
cmc
pushf
sbb
adc
call
sti
xchg
dec
cmp
push
addr16
loopne
arpl
imull
mov
add
test
loopne
loopne
jmp
dec
rorb
jg
jecxz
or
nop
sbb
es
call
dec
and
shr
sbb
pop
or
mov
mov
es
and
daa
xchg
test
pop
xor
pusha
nop
and
xchg
and
sub
loopne
shlb
xor
adc
jnp
pop
mov
xor
mov
jb
adc
outsb
push
pop
push
faddl
dec
mov
add
rorl
shl
or
scas
jmp
pop
push
and
mov
cmc
movsb
adc
or
dec
js
add
insb
or
gs
xor
pusha
add
cli
pop
outsb
or
out
xor
jmp
mov
pushf
cli
adc
jecxz
jne
loopne
push
pushf
cmpsb
aad
dec
xor
sbb
xchg
subb
pusha
sti
xor
jo
add
nop
and
inc
and
jecxz
inc
adc
das
xchg
inc
popl
cmp
mov
out
lcall
mov
test
jmp
scas
add
mov
push
push
push
daa
pushf
dec
pusha
pop
mov
int3
cmc
lds
or
or
adc
add
fdivrs
dec
loope
push
repnz
pop
sti
cmp
push
imul
data16
ret
das
push
ds
icebp
pop
mov
inc
div
adc
shl
movsb
mov
add
jo
pop
xadd
call
xlat
lret
cmp
pop
hlt
loopne
jbe
mov
add
sub
ss
jecxz
divl
into
push
push
sbbl
add
or
mov
test
push
sarb
jmp
sbb
cmpsb
xor
cmpsl
push
ja
jle
sbb
inc
jae
subb
mov
push
push
inc
add
icebp
test
ljmp
jmp
pop
rcr
lret
cmp
aam
add
pop
inc
pop
jecxz
pop
das
push
cmc
pop
scas
mov
pop
xor
ret
lods
ficomps
mul
sarl
out
std
in
testb
push
sub
repz
aam
mov
rorl
popf
pop
cmp
enter
push
jnp
test
ret
sbb
lds
iret
testb
sbb
stc
jle
je
insb
call
ret
aaa
idivl
pusha
not
add
jmp
test
or
rol
pushf
xlat
mov
cmp
xor
xchg
cld
jmp
xchg
jmp
xchg
mov
pusha
and
fdivrp
and
adc
cmp
cli
bound
mov
push
push
outsl
dec
repnz
add
inc
out
xchg
je
inc
ss
add
ret
das
hlt
cmp
cmp
movsb
stc
jmp
adc
mov
aam
add
cmpsb
sbbb
and
ficoml
mov
pop
lods
std
mov
xchg
aad
cld
jp
xchg
imul
jo
mov
sbb
mov
push
test
jmp
add
ffree
pusha
movsb
pop
aaa
lahf
jmp
pop
dec
cmp
mov
in
shl
jmp
negl
or
loop
xor
out
into
add
aam
add
repnz
insb
push
mov
out
pop
fldl
mov
adc
test
fsubrl
inc
lret
mov
mov
outsb
mov
xlat
test
or
mov
lods
fsubr
xor
xor
xor
sub
sbb
rcrb
daa
mov
pusha
inc
hlt
daa
lcall
mov
cmp
ja
loop
ret
clc
mov
lahf
adc
mov
add
mov
loopne
and
xchg
mov
cmp
and
or
lock
out
jno
dec
lret
cmpsb
test
ss
dec
repnz
es
adc
dec
sbb
daa
pusha
xchg
loope
add
adc
pop
mov
std
rclb
pop
pop
lods
lock
fsubrs
dec
out
add
out
stos
scas
sub
sbb
mov
lea
lret
pop
mov
pusha
in
mov
cmp
adc
aam
mov
pop
negl
push
fwait
movl
cmp
jae
int
mulb
shl
outsb
or
cmc
add
push
add
data16
mov
jmp
mov
loopne
xor
loope
sbb
pushf
or
lock
push
add
mov
xchg
lods
jo
call
and
stc
fisttps
neg
pushf
test
sbb
mov
or
fildl
cli
inc
mov
pop
call
sub
inc
ss
out
mov
pushf
push
mov
call
and
fsub
mov
xlat
mov
lods
pop
std
fwait
or
sti
adc
pop
pop
xor
xadd
es
adc
repnz
mov
cmpsb
sbb
call
fistpl
loop
mov
faddp
pop
mov
mov
push
mov
out
mov
sbb
aaa
xor
adc
cltd
cs
arpl
mov
icebp
call
mov
inc
fadd
jg,pt
imul
idivl
shll
je
int
in
test
cmp
adc
dec
lea
jnp
pusha
in
fiaddl
mov
mov
rorb
push
lret
loope
inc
dec
push
mov
mov
jne
insl
scas
call
and
adc
add
out
mov
mov
pop
roll
andb
fdivs
into
sbb
pop
testl
clc
call
lret
mov
mov
xor
icebp
jne
or
das
inc
push
adc
xchg
out
cmc
adc
std
fldl
out
pushf
cmp
clc
mov
and
pop
notl
into
mov
je
clc
or
jp
pop
xchg
out
cmpsl
push
ret
sbb
jmp
fsubrp
cs
clc
stc
call
rclb
sub
jecxz
xchg
ljmp
std
rorl
dec
cld
push
sub
mov
daa
pusha
loope
lods
inc
mov
das
test
fdivrs
les
in
test
jl
icebp
je
mov
jecxz
mov
add
lock
sub
xchg
aas
ljmp
jmp
sbb
cmp
cmp
jb
pop
mov
jp
cmp
data16
jge
jle
lock
cmc
push
adc
insb
dec
add
jne
not
lods
out
rcl
fsubrs
sub
into
jmp
xchg
inc
dec
loopne
or
mov
sbb
cli
fcmovnu
filds
dec
ret
mov
fbstp
shrb
lods
cli
push
call
rcll
inc
jp
xlat
aas
push
adc
jae
jbe
orl
inc
jp
and
enter
inc
adc
sub
xor
es
fs
rcrl
jae
pop
cld
fdivl
fadds
clc
and
lret
adc
jns
jmp
push
stc
push
sti
decb
pop
aas
xor
nop
int3
jns
push
outsb
jl
fisubl
stc
sub
repz
ret
cmp
movsb
cmpsl
sti
xchg
clc
scas
mov
movsb
xor
lcall
fdivrs
jecxz
jae
push
or
push
push
int3
xchg
arpl
mov
push
sub
repz
aaa
mov
in
inc
test
jbe
mov
outsb
adc
sub
jo
push
mov
lcall
mov
fwait
pop
and
aad
rol
adc
cmc
cs
test
in
loopne
dec
dec
dec
mov
jae
lahf
dec
fcmovnb
cmp
dec
gs
sbb
ja
jbe
xor
sbb
pop
cli
jo
mov
jne
sbb
lock
scas
fsubl
pushl
sub
jne
lods
cmc
mov
or
jmp
adc
enter
imul
inc
xorb
out
xor
sbb
lcall
call
jg
mov
pusha
pop
sub
stos
or
mov
push
cmp
cld
incl
fdivrs
xor
test
push
int
and
out
sub
mov
js
fwait
es
pushl
jns
mov
or
inc
mov
fimull
aas
imul
incl
add
sub
out
mov
xchg
xchg
stc
dec
cmp
shrl
pop
inc
lods
mov
mov
jp
jl
cmp
push
ljmp
call
dec
push
mov
repz
xchg
inc
jb
aaa
add
add
mov
repz
popf
mov
cld
pushl
cltd
aam
add
sbb
cmpsb
test
int3
data16
enter
pushl
sarb
xchg
pop
cmp
stc
fdivs
data16
adc
mov
lcall
rclb
xchg
aam
xchg
or
dec
or
mov
decl
std
int3
subb
cltd
jbe
loop
dec
pop
mov
push
xor
movsl
aas
sbb
mov
jecxz
add
and
imulb
cld
mov
and
scas
ret
nop
mov
cmp
lock
mov
test
xor
mov
loope
scas
xchg
test
cli
fs
push
jecxz
pop
aad
stc
jg
lcall
pop
sub
ret
cmp
and
inc
fstl
mov
lea
gs
das
add
test
cmp
inc
dec
pop
jecxz
mov
jle
xchg
mov
test
aam
cwtl
jbe
or
lea
xor
call
dec
pop
cmp
mov
adc
xlat
scas
in
push
pop
push
dec
and
inc
pop
fistps
icebp
mov
and
dec
adc
cli
shll
jl
cmpb
jmp
lret
push
adc
movsl
or
les
lock
in
call
push
adc
das
inc
dec
sub
mov
mov
out
aam
icebp
loope
lods
mov
pushl
mov
lret
jl
add
mov
lds
sahf
dec
das
imul
lods
das
mov
pop
mov
cmpsl
mov
mov
idivb
and
aas
cmp
pop
out
dec
pop
add
jne
pusha
inc
sbbb
lods
adc
out
or
cmp
push
loope
cwtl
mov
pushl
ljmp
sbb
jmp
and
mov
data16
sub
jl
cli
int
stos
std
in
out
mov
popf
sti
jp
mov
das
arpl
inc
xlat
fidivl
aad
inc
mov
push
std
ljmp
scas
push
pop
mov
daa
outsl
xlat
xor
movsl
repnz
add
loop
cmc
sbb
mov
lods
repz
cmp
aas
fcoml
stos
pop
ficoml
push
or
and
mov
outsl
fmull
dec
pop
rolb
sbbl
sbbl
pop
adc
jno
xor
call
sbb
les
sbb
and
sub
sbb
pop
xchg
pop
ljmp
outsb
push
jns
mov
mov
mov
inc
movsl
jns
dec
stc
arpl
das
hlt
pop
enter
add
insb
jb
mov
lret
inc
mov
push
lret
psraw
arpl
mov
and
mov
add
xchg
das
mov
cltd
pop
or
lock
test
cmpl
adc
adc
dec
cli
sbb
ja
sbb
pop
cld
std
and
xlat
dec
fidivrs
mov
jmp
jo
mov
pop
adc
call
sub
or
aas
lret
xor
aad
das
jne
adc
or
or
jp
cmpb
divb
push
push
mov
mov
inc
in
arpl
incb
es
lock
addr16
sbb
mov
xadd
ljmp
hlt
mov
rolb
cmp
or
ss
sbb
jge
cmpsb
jg
inc
iret
pop
int
xor
adc
push
fisttpl
xor
mov
pushl
or
pop
adc
aam
inc
into
stos
mov
xchg
adcl
mov
or
out
fiaddl
fst
mov
fisubl
mov
stos
xchg
das
hlt
jmp
dec
ret
mov
or
inc
clc
cmp
out
ljmp
mov
outsl
or
pop
shlb
mov
sbb
nop
in
xor
xchg
pop
xor
ljmp
jae
scas
popa
aas
subl
or
cmp
lret
dec
pop
cmp
xlat
imul
repnz
sbb
call
push
push
inc
test
mov
cmc
ret
pop
test
ret
insl
out
mov
outsl
lds
or
dec
daa
jnp
push
add
mov
lock
in
addr16
jg
repz
sub
xchg
clc
pushl
push
or
sub
jp
mov
int3
shl
lcall
fidivs
sbb
sbb
lods
mov
adc
hlt
je
mov
out
rcr
dec
add
mov
pop
in
push
adc
stos
sbb
call
push
sbb
fistps
xchg
push
cmp
in
adc
lds
jmp
fiadds
mov
pop
or
into
imul
sub
dec
ljmp
cld
cmp
pop
sub
popa
mov
dec
cld
sahf
and
xor
clc
sahf
cmp
mov
fsubrl
mov
sbb
pop
mov
incb
shlb
inc
outsl
call
int3
sub
ret
sbb
test
insb
mov
xor
jo
inc
mov
or
xchg
fbstp
mov
and
clc
sbb
jbe
adc
cmp
loop
sub
mov
in
adc
jl
mov
out
int3
add
push
adc
push
xor
add
mov
repz
dec
push
jmp
adc
pop
nop
fsub
xchg
push
hlt
push
mov
lcall
jno
fwait
cld
das
icebp
and
stos
xor
or
cmp
push
lcall
sbb
fisubrs
rorb
push
lock
push
mov
mov
pusha
push
xor
mov
cli
sub
pop
loopne
loopne
mov
movsb
push
fsubrs
push
insb
movsb
pop
jno
idiv
cld
pop
or
jl
jecxz
cwtl
mov
mov
mov
bound
insl
cmpb
sub
fs
xorb
movq
dec
cld
mov
add
dec
dec
push
and
pop
andb
pop
xlat
cli
fsubrs
insb
ljmp
push
sub
imull
xor
shll
xor
aaa
clc
lea
nop
pop
scas
enter
adc
cmpsl
mov
fmuls
out
out
fidivrs
sahf
pop
rcl
add
je
push
fs
shrb
sub
push
shlb
stos
lods
iret
imulb
arpl
aaa
mov
mov
pop
cmp
sbb
sub
jne
pushf
jg
lcall
jb
rcr
faddl
inc
ret
icebp
rcrl
sub
mov
fcmovnb
add
push
mov
imul
push
or
xchg
xchg
fistpl
frstor
cs
mov
scas
sub
or
call
pushl
test
xor
inc
dec
xor
in
rcl
inc
push
xchg
add
js
rcrb
xchg
ret
iret
les
add
mov
mov
mov
or
imul
sub
adc
lret
std
or
lret
enter
pop
pop
jmp
dec
stos
jge
and
jne
scas
xor
out
lock
xchg
cmp
pop
push
add
in
test
outsb
fcmovbe
jnp
call
es
sbb
incl
jge
push
mov
pop
leave
mov
out
out
pop
lods
dec
or
dec
int3
aas
std
incl
lahf
mov
cmpsb
mov
out
xchg
pop
mov
cmpsl
cltd
scas
aam
or
mov
mov
leave
es
cwtl
xor
push
or
lock
push
cld
dec
lock
xlat
enter
or
fistps
or
cwtl
add
pop
xchg
adc
pop
lock
jge
cmc
pushl
cmpb
hlt
in
test
mov
add
jle
idivb
mov
in
mov
xchg
mov
and
lds
das
push
push
les
mov
nop
dec
leave
inc
adc
popf
sti
mov
xor
fsub
stc
xchg
xorl
add
jecxz
dec
cld
mov
fildl
inc
xchg
pop
and
int3
movb
ret
xchg
push
test
lock
add
jae
call
push
loopne
cmpsb
bound
add
jmp
out
rcl
cmp
xchg
stc
out
lea
dec
daa
icebp
add
xor
das
add
shlb
pop
imulb
loop
ficompl
lock
or
mov
cmp
pop
imul
inc
es
push
adc
adcb
rclb
ret
mov
cmp
loope
jg
sub
lahf
gs
mov
testl
inc
sub
pop
aas
incl
flds
lret
imul
aam
sbbl
fidivs
and
mov
lcall
add
nop
jbe
std
mov
push
mov
mov
leave
dec
iret
mov
and
int
push
shrb
icebp
fucomp
ret
or
mov
jp
popa
mov
out
inc
lea
fcos
incl
divl
pusha
insl
or
and
dec
decb
jmp
insb
push
adc
mov
pushl
cmc
xor
lret
sbb
and
pop
dec
jmp
push
stos
clc
pushl
clc
dec
or
repnz
fs
push
push
push
xchg
mov
cmp
inc
inc
xor
push
lcall
sbb
xor
mov
jg
sub
nop
xorl
sub
dec
adc
cltd
stos
inc
push
mov
out
fwait
push
movaps
insb
cwtl
hlt
lret
or
fcmovnb
sarb
les
fildll
idivb
jno
loop
movsl
test
pop
fdivl
jmp
ss
rolb
mov
loope
icebp
mov
inc
jmp
jecxz
adc
fsubs
nop
into
call
jbe
jmp
sub
loopne
pop
pushl
push
movsb
push
test
loopne
movsb
ljmp
cmpsb
sbb
call
jmp
cltd
adc
inc
cltd
mov
fisttpl
xchg
xor
andl
cmc
cmp
ljmp
sbb
sbb
mov
pop
mov
sub
jg
mov
mov
daa
fsub
lret
call
mov
xchg
addr16
lcall
push
and
in
mov
fcomps
loope
mov
cld
test
xlat
dec
das
inc
daa
sbb
movsl
xchg
stos
subb
daa
mov
cmp
sbb
inc
aam
sub
xor
mov
inc
xorb
out
mov
repnz
daa
jno
dec
inc
jmp
push
icebp
xor
cmp
popf
fistpl
jmp
dec
nop
daa
mov
fsubs
sub
mov
xor
lods
fmull
mov
pop
test
xchg
inc
ljmp
mov
fdivl
push
pushf
mov
lcall
popa
lods
dec
xlat
int
xor
decl
loop
loopne
xchg
add
cmpl
rcll
incb
stc
lcall
mov
fdivr
adc
add
jbe
gs
pop
hlt
lods
push
pushf
xor
inc
popa
jg
push
imul
pop
nop
lcall
repz
inc
out
pop
mov
loopne
out
mov
pushf
mov
cs
imulb
call
jmp
dec
pop
adc
std
or
lods
sub
out
mov
andl
xlat
pop
mov
mov
call
push
sbb
xlat
loopne
dec
fmull
inc
je
xor
dec
decl
mov
pusha
add
test
add
stos
pop
repnz
cmp
imul
outsl
add
cmpl
mov
dec
adc
outsl
sub
sbb
add
push
lcall
cmp
jle
adc
lcall
aaa
sub
push
cmp
lret
and
lcall
clc
cwtl
nop
aam
hlt
mov
mov
mov
sbb
adc
outsl
push
jmp
pop
loope
push
adc
xchg
inc
mov
decb
lret
add
outsb
cmp
int3
pop
lcall
std
pushl
xchg
rolb
jnp
outsb
xor
lods
mov
dec
mov
decl
fstpt
nop
ds
pushf
stos
cld
out
test
in
stos
sbb
test
dec
in
or
in
xchg
mov
adc
fldt
pop
jmp
inc
pop
lcall
pop
sbb
cmp
inc
mov
and
push
push
add
cwtl
cmp
inc
jmp
dec
dec
mov
pop
sbb
sti
and
mov
sahf
js
movsl
mov
call
sub
dec
and
outsb
sti
mov
rorl
sub
rcrb
enter
das
fsubl
cmp
cs
dec
inc
xor
imul
in
rol
lods
scas
jle
fnstenv
test
lock
sti
out
cmp
xor
jp
push
adc
xor
and
rcrb
outsb
fnstsw
pusha
add
xchg
lret
inc
dec
cmp
sbb
addr16
pop
subl
jg
xchg
int3
or
sbb
cmp
push
dec
sbb
push
sbb
push
sub
mov
das
or
xchg
xchg
inc
jle
hlt
sub
add
inc
dec
mov
mov
lods
pop
int
cmp
xchg
dec
aaa
push
mov
rorb
js
test
jl
outsl
sub
cmc
mov
jecxz
dec
xchg
std
xor
xor
push
fisttpl
xor
lock
pop
loopne
inc
lret
call
inc
cli
push
pop
pop
in
adc
pop
lea
mov
or
xor
out
mov
addr16
sub
xlat
imul
roll
orb
ffree
orl
jns
xchg
cmp
std
scas
adc
popf
cmc
push
mov
xor
incl
xchg
popf
pop
mov
mov
cltd
cmc
shll
fisttps
push
cld
push
or
hlt
ds
and
mov
adc
xor
mov
pushl
add
or
rol
and
jae
packuswb
mov
imul
ss
jg
in
jge
adc
loopne,pt
mov
roll
insb
jg
mov
das
pushf
lock
add
adc
scas
ja
fsubl
cld
call
xor
scas
vpxor
cmp
push
and
pop
loop
das
lahf
icebp
dec
jle
hlt
ljmp
dec
jnp
in
or
cmp
xor
and
mov
xchg
fnstsw
fcmovnu
imulb
push
mov
push
test
jmp
jns
push
repz
sti
lds
insb
in
dec
lahf
imul
xchg
fcmove
cs
movsb
rcl
nop
push
inc
xor
out
pop
sub
in
sub
push
pop
fs
jmp
xlat
mov
jg
std
lcall
xor
pop
cmp
xchg
in
xchg
lods
sbbl
pushl
sbb
push
out
loop
inc
jle
out
cwtl
adc
adc
nop
es
decl
movsb
je
std
prefetch
jg
mov
frstor
sbb
and
inc
jb
cld
call
out
fisttps
incb
aas
lea
test
or
jmp
push
rcr
or
pushl
stos
and
bsr
jmp
xor
hlt
faddl
enter
incl
imulb
jo
in
lcall
xchg
cltd
push
hlt
dec
push
mov
xchg
push
lods
push
and
push
sub
test
inc
cld
shll
dec
add
sahf
fnsave
jae
push
subb
mov
clc
cmpsb
xchg
mov
inc
and
dec
and
loop
inc
sub
fimull
sti
test
rclb
test
testl
sbb
lods
mov
mov
mov
fidivs
xchg
pop
loop
pop
les
adc
mov
and
fldt
fucomip
loope
xchg
xor
fsubrs
and
call
or
outsl
pop
xor
lret
dec
cld
ljmp
fildll
or
lret
pushf
test
cmp
mov
pop
inc
std
and
xchg
dec
std
decl
sbb
int3
shrl
incl
call
add
jne
mov
dec
adc
aam
test
cmp
jbe
std
jmp
pop
cmp
les
jo
mov
nop
add
xchg
cmp
lods
lods
imul
les
lods
in
mov
aaa
stos
xor
pushf
fcmovb
xchg
add
add
xchg
mov
mov
xchg
addr16
cmpsl
push
mov
xchg
pop
xchg
mov
adc
std
icebp
sbb
fucomip
jmp
fcompl
testb
mov
sar
icebp
fadds
lahf
add
cltd
testl
mov
mov
sbb
push
fdiv
sbb
adc
mov
cmp
insl
pop
imul
popf
aaa
cmp
sbb
clc
push
pop
push
push
dec
cmpsb
in
mov
xor
mov
int3
pop
lcall
ljmp
rcl
pop
mov
mov
fwait
test
shll
xchg
or
fmull
push
jmp
add
in
mov
frstor
pop
push
outsb
clc
xchg
subb
mov
dec
lret
jo
cld
inc
pop
pop
push
mov
mov
jg
ljmp
push
xor
xor
inc
and
arpl
dec
test
lcall
lea
inc
inc
cld
outsl
test
jae
lret
mov
mov
or
mov
aam
nop
xor
ss
call
outsl
mov
arpl
mov
cmp
notl
jnp
jmp
ja
ja
jecxz
clc
dec
cld
inc
jg
and
ljmp
sbb
std
mov
xchg
xor
adc
push
push
rep
mov
cltd
jae
inc
stc
scas
mov
add
and
add
dec
add
add
mov
and
dec
dec
call
push
pop
and
pusha
push
sub
mov
les
fimull
mov
test
out
pop
loopne
mov
dec
mov
add
mov
sub
xor
aam
jmp
inc
sysexit
jl
xor
das
hlt
fildl
push
jg
imul
mov
sti
pop
xor
lret
push
push
mov
mov
sub
sti
pop
or
sar
jg
push
stos
stc
or
ds
clc
jnp
nop
xor
lcall
mov
mov
int
sbb
adc
and
add
fbstp
fimuls
mov
cmpsb
dec
subb
mov
js
les
sub
fwait
cmp
loop
icebp
inc
pop
subb
cs
push
out
push
pop
sub
test
shl
fsubl
jns
mov
mov
adc
out
jns
imul
stc
sahf
mov
dec
rcrb
ficompl
dec
cmpsl
and
lret
sarl
or
jp
mov
mov
mov
daa
idivb
std
loop
inc
ljmp
int3
pop
call
mov
jo
mov
imulb
enter
mov
stos
icebp
call
mov
lods
in
cmpsb
rcrb
jne
or
mov
mov
xor
ret
sbb
insl
sarb
inc
cmp
call
xor
or
mov
lods
imul
pop
sub
cltd
xorl
imul
lock
xor
call
aaa
outsl
pop
ljmp
xor
xchg
cmc
decl
push
lea
jge
pop
lcall
jmp
test
mov
pop
je
lcall
jp
pusha
lcall
repz
sub
aad
test
pop
mov
mov
or
sub
jp
mov
mov
fs
ds
xchg
cli
sub
mov
mov
cmpsl
add
cmc
jg
movsl
inc
pop
test
scas
and
mov
sub
xchg
sbbb
lods
outsb
jmp
ret
push
repnz
out
fwait
mov
ret
call
test
cmc
cmpsl
lods
adc
ljmp
out
je
mov
push
or
lods
pop
clc
mov
or
test
stos
adc
mov
stc
outsl
pop
leave
mov
stos
pop
mov
inc
movsl
fdiv
loope
jmp
jg
and
loop
mov
invd
icebp
push
and
icebp
mov
out
in
ret
nop
sahf
std
call
and
xor
insb
adc
or
arpl
mov
sub
push
mov
jo
dec
mov
cld
ljmp
sbb
leave
pop
sbb
scas
enter
ss
pop
loop
add
pmuludq
add
icebp
dec
add
or
fs
shr
sarb
cmp
pop
fs
jmp
cli
adc
pusha
ljmp
xchg
mov
call
xor
add
mov
or
data16
sbb
push
out
mov
aad
push
mov
fcmovnbe
in
rclb
addr16
iret
add
out
cmp
cmc
jg
leave
out
adc
into
sub
xorl
fisttps
icebp
jno
lret
mov
xor
pushl
xchg
rorb
jae
mov
mov
dec
cld
arpl
loop,pn
cld
idivb
lcall
out
fcmove
repz
mov
lods
das
push
push
add
ss
jg
out
mov
and
jae
dec
adc
jbe
mov
ret
jne
mov
sub
daa
ss
out
mov
xchg
daa
xor
jmp
mov
idivl
stos
dec
clc
push
fnstsw
pop
addr16
pop
pop
ljmp
lock
inc
xchg
cmp
xchg
sbb
mov
jg
or
call
add
xchg
imul
insl
pop
aaa
xchg
loop
idiv
aas
and
jae
test
in
pop
fidivrs
aas
loope
mov
cld
pushf
pop
movsl
fistps
push
pop
loop
sub
mov
mov
xor
mov
dec
lods
jg
lcall
int3
int3
hlt
pop
cmp
and
pop
xchg
ljmp
mov
add
aaa
lahf
pop
cmpsl
lahf
cmp
add
jle
call
clc
pop
or
and
sarb
pop
jbe
push
ljmp
or
cld
lcall
xchg
jmp
das
and
cmp
xor
mov
push
mov
sbb
call
cmp
lods
push
or
out
mov
movsl
shl
pop
inc
test
pushf
seto
mov
jg
pop
xor
mov
sbb
sub
outsb
cli
lret
pushl
and
ficompl
fidivrs
and
jnp
mov
mov
mov
mov
adc
jp
scas
aas
dec
lea
iret
jmp
mov
push
cmpsl
roll
push
fistpl
xor
cmpl
push
mov
inc
mov
mov
sbb
cmp
jmp
inc
rcrb
push
shlb
jbe
movsl
nop
fistpll
lret
xchg
pushl
popa
gs
or
add
popf
daa
jno
sub
cld
or
mov
mov
arpl
das
mov
xchg
cmpb
call
insb
aas
call
pop
dec
pushf
pop
push
fidivl
decl
in
xchg
loop
stos
cmp
loopne
aaa
and
mov
popf
jl
jg
addr16
jle
fsub
inc
outsb
mov
mov
ds
add
jmp
call
inc
repz
lret
int3
push
push
pop
inc
adc
ret
aad
gs
fbld
aas
test
jge
add
inc
pop
dec
sbb
scas
sub
and
nop
fists
jp
mov
aas
cmp
sbb
push
sub
mov
sbb
sar
ss
incl
or
sbb
les
in
and
hlt
add
lds
jl
das
std
push
jecxz
lea
jle
das
rol
xor
imul
jmp
lods
pop
mov
jl
jnp
in
les
aam
shrb
or
sbb
mov
outsl
push
ljmp
pop
jo,pt
cltd
cmp
mov
insl
mov
xlat
insl
das
push
aaa
mov
pushf
mov
push
lret
mov
xchg
push
stos
hlt
adc
sbb
stos
cmp
sub
dec
push
rcrb
lods
in
cmp
jecxz
out
or
cmc
call
cwtl
and
rorb
or
in
sbb
arpl
scas
mov
push
xor
jae
push
push
cli
call
mov
mov
mov
inc
dec
push
adc
das
cmc
xchg
dec
imul
push
or
add
jg
js
mov
enter
sbb
sbb
outsl
jnp
cs
icebp
cmp
dec
mov
cld
incl
sbb
fisttpl
jmp
or
insl
push
mov
mov
inc
lds
outsb
sar
xchg
adcb
imulb
cmp
rolb
fwait
xor
jle
jg
inc
adc
jmp
cltd
mov
xchg
jg
test
leave
data16
and
mov
es
adc
pushl
ja
pop
cltd
inc
loop
ds
mov
push
enter
pop
xchg
inc
inc
mov
popf
bswap
sbb
lods
jnp
adc
mov
push
cwtl
divb
adc
jmp
test
aad
ljmp
xor
mov
test
sbb
adc
sahf
js
mov
jb
ficoml
stos
or
aaa
jmp
ja
mov
cld
fsubrs
cs
repnz
les
je
cli
xor
sbb
dec
jmp
push
icebp
mov
ja
loop
out
or
mov
repnz
adc
xchg
jl
int3
mov
fimuls
inc
mov
ljmp
pop
and
ret
test
xchg
push
adc
mov
outsb
gs
in
fnstsw
movsl
mov
add
pop
mov
popf
adc
call
jns
jne
inc
cmp
sub
mov
push
push
jmp
mov
jns
cs
pop
mov
jo
pushf
mov
push
push
cli
std
aad
jecxz
movsb
mov
jns
fldenv
adc
in
adc
push
or
adc
arpl
adc
jecxz
lds
clc
push
xlat
mov
add
out
iret
pushl
mov
jno
adc
daa
movsl
popf
shlb
out
push
in
shl
or
push
outsb
in
movb
mov
push
lea
inc
js
test
sar
movsl
cmp
out
jae
push
cmp
fwait
lret
int
lock
lcall
xor
push
in
jp
cmp
jge
rcrb
cmpsl
mov
cli
cwtl
int
xor
outsl
call
testb
testl
repz
dec
test
iret
mov
aaa
push
rcrb
fs
jns
je
push
clc
pop
lret
leave
popa
mov
pop
loop
mov
ja
test
dec
add
jo
sbb
fiaddl
mov
loop
jae
ret
pushl
sarb
je
ss
sub
aas
fidivrl
jecxz
add
call
loope
mov
lea
mov
ljmp
incl
xchg
xchg
fisttpll
jg
mov
pushf
dec
decl
and
sbb
push
cwtl
arpl
fpatan
scas
insb
lods
mov
mov
mov
sub
notb
fcomip
daa
ja
jmp
jb
mov
push
add
pop
sub
in
loop
and
cli
sahf
scas
pushf
push
xlat
int
or
adc
push
mov
add
pusha
shlb
mov
outsb
fidivs
sub
cld
in
mov
hlt
outsl
cld
fists
scas
lods
in
es
outsl
push
ljmp
mov
mov
jne
jbe
xchg
dec
inc
pop
cmpsb
fdivl
push
push
sub
adc
lahf
sbb
pushl
jnp
or
jmp
jmp
lret
stos
cmc
mov
es
pop
cli
cld
xchg
cmp
insb
lods
clc
repnz
pop
add
pop
sbb
adc
ljmp
add
xchg
add
mov
popa
dec
les
push
jmp
jmp
sbb
mov
gs
cmp
jbe
jo
das
cmc
dec
dec
scas
cmp
jl
out
push
arpl
pop
int3
cmp
loop
jb
les
sbb
xchg
pop
fmuls
xchg
leave
fstpl
lods
mov
scas
hlt
pop
jg
cmpsb
repnz
call
fucom
jnp
vcvtss2sd
sub
dec
pop
lods
pop
and
pushf
cs
ds
stos
callw
xchg
and
xor
mov
push
lock
std
std
test
jecxz
ret
lock
mov
into
leave
iret
pop
and
xor
pop
into
ss
inc
mov
std
outsl
or
mov
dec
inc
inc
popf
push
pop
dec
add
in
xlat
cs
test
jno
adc
xchg
fsubl
incl
mov
outsl
std
cmpsl
test
popa
pushf
ror
sub
jmp
pop
xlat
inc
insl
sub
dec
xorb
mov
ret
jg
xor
insl
add
mov
pusha
test
jbe
in
push
mov
pop
push
fildll
pop
xchg
push
daa
test
inc
ficoms
lea
test
movsl
jecxz
repnz
xchg
mov
cmpb
add
adc
dec
fistl
notl
ret
jo
std
add
and
add
ja
push
cmpsl
inc
fldt
fsubr
jge
loope
dec
dec
movsl
and
stc
push
aam
push
shrb
sub
test
fsubp
add
jnp
push
xor
inc
mov
add
or
repnz
xor
dec
xlat
inc
popl
xchg
bound
push
jp
jo
lret
lea
repz
addr16
fwait
daa
rolb
cmp
jge
push
fdivrs
xchg
decl
adc
aam
pop
iret
out
daa
adc
test
cwtl
and
xchg
and
lcall
jbe
je
push
sub
cld
mov
fcom
and
jl
rolb
out
mov
decl
adc
ret
jno
pop
out
popa
ds
decl
lea
test
inc
cmc
and
aam
push
fbld
pop
clc
mov
mov
jbe
iret
in
xchg
icebp
popa
outsb
hlt
dec
je
xchg
mov
test
imul
clc
pushf
mov
push
insb
adc
inc
xchg
rolb
out
ret
jge
fsub
leave
jns
clc
mov
and
daa
pop
add
cmp
in
lret
lret
lcall
dec
in
dec
dec
dec
and
aam
pop
int3
out
shll
xchg
xbegin
loopne
pop
sahf
rcll
and
inc
xchg
and
lock
xchg
pop
imul
pop
je
sub
cmpsl
xchg
cmp
ljmp
mov
ret
jnp
push
pop
sub
xchg
in
and
sti
dec
pop
pop
decl
rcl
push
pop
ret
loopne
call
adc
outsl
mov
out
ja
cmp
insl
push
fcmovb
push
test
jmp
xchg
sbb
repnz
dec
mov
xchg
cli
mov
ret
jns
or
insl
and
lret
aas
or
mov
lock
xor
das
jg
stc
add
pop
pop
call
push
test
ja
inc
push
movsl
jecxz
push
fwait
pop
pop
xor
adc
xchg
inc
jl
jg
and
shrb
div
dec
sub
decl
scas
mov
ret
jno
add
lret
shr
das
push
pop
xchg
push
aaa
pop
cwtl
mov
rorl
sub
jge
add
outsl
xchg
dec
mov
pop
leave
frstpm(287
fldt
adc
test
push
decl
lret
dec
nop
and
test
mov
ss
push
push
add
cmp
stc
leave
or
xchg
inc
fildl
aad
sar
movsl
sbb
sub
ret
and
fisttpll
pop
call
repnz
pop
imul
enter
outsl
xchg
test
inc
and
push
dec
repnz
push
iret
loope
popf
push
pop
test
mov
xchg
lret
push
push
xchg
mov
push
mov
das
icebp
xchg
incl
test
call
mov
xchg
dec
fdivrp
ljmp
sbb
push
pop
mov
and
sub
outsb
aaa
mov
mov
cs
mov
jbe
add
fcmovnu
cmp
test
cmp
xor
xchg
int3
leave
sar
and
incl
lahf
scas
add
jo
out
cs
xor
shlb
adcl
std
lea
ret
aam
fldcw
push
lret
data16
mov
pop
mov
sub
jo
shrl
loope
ds
frstor
insb
push
mov
ljmp
jbe
xchg
ja
xchg
fs
aaa
movsb
movsl
jmp
les
cld
dec
popa
pop
hlt
xorb
xchg
cmp
jbe
dec
mov
inc
pop
call
andl
cs
aas
ljmp
cmpsb
sahf
sarl
fs
mov
push
les
data16
pop
dec
and
dec
test
mov
outsb
and
jle
lods
mov
ss
cltd
cmp
insb
int3
fidivrl
movsb
lods
call
out
fsts
cld
jmp
imul
lahf
push
es
push
push
call
andl
incl
mov
xlat
leave
add
pop
pop
mov
mov
call
enter
outsb
enter
push
mov
nop
dec
push
xor
test
incb
jo
mov
pop
jb
outsl
xchg
xorb
std
sub
lret
jbe
inc
call
call
cli
addl
cs
jle
test
incl
push
lds
mov
outsl
sub
adc
les
cmp
arpl
mov
jge
cmp
data16
bound
loope
dec
stos
cld
les
int3
xchg
lcall
outsl
add
xor
xchg
rclb
xor
adc
dec
adcl
mov
repnz
lcall
pop
inc
out
push
int3
push
jg
or
loop
dec
pop
ss
repnz
mov
ja
mov
dec
cld
call
jbe
cwtl
inc
gs
movsb
cmpsl
in
stos
dec
stos
cmp
xchg
jle
call
enter
in
cltd
fisttpll
cs
call
sbb
push
incl
or
sbb
daa
push
lds
test
repnz
daa
cwtl
adc
push
frstor
pop
decl
jbe
lahf
stos
addr16
fs
cmp
in
sub
int
xchg
jb
scas
and
mov
xchg
add
enter
cmp
outsb
ret
in
jecxz
xchg
fidivrl
add
sbb
fistpll
sub
pop
mov
xchg
sar
cli
movsl
fidivrl
and
loope
xor
sub
mov
sub
lcall
movsb
cmpsb
ds
stos
jmp
or
push
xorl
or
inc
push
inc
call
xor
inc
loop,pn
jbe
stc
jmp
ds
xchg
fists
jp
lods
xchg
jg
xchg
fcos
call
push
adc
ret
outsb
out
loope
cmp
mov
call
sti
in
pop
adc
fidivrl
movsb
movsb
jmp
dec
into
inc
sbb
jb
data16
pushl
xchg
pop
or
mov
sub
mov
cmp
xor
jmp
out
rcrb
xlat
sbb
into
fmulp
sbb
daa
jle
leave
or
push
ja
mov
mov
pop
out
inc
push
push
sub
mov
loope
cmp
frstor
pushw
mov
dec
jmp
fwait
jmp
jae
dec
add
test
push
test
or
bndldx
xchg
add
mov
test
loope
pop
lock
lret
jg
addb
push
push
mov
sarb
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
dec
cmp
popa
cmp
cmp
pushf
cmp
jmp
cmp
ja
pop
aas
and
dec
aas
push
aas
jbe
mov
aas
test
add
jl
xor
xor
xor
xor
xchg
jg
mov
xchg
xor
xor
xor
xor
xor
push
mov
inc
xor
shlb
fdivr
filds
out
xor
xor
xor
inc
xor
xor
pop
mov
xor
xor
xor
xor
xor
xor
xor
xor
pushf
xor
inc
aaa
push
aaa
icebp
aaa
or
and
dec
cmp
je
test
add
jo
call
cmpsl
xor
add
push
xor
xor
xor
lcall
gs
aad
loopne
out
out
xor
lds
int
add
cmp
cmp
jbe
test
mov
mov
cmp
cmp
cmp
enter
xor
ds
ds
ds
jle,pt
xchg
ds
lret
sarb
cmpl
shrl
mov
pusha
outsl
in
xor
nop
xor
or
add
jne
xorl
xchg
xor
xor
xor
inc
xor
popa
xor
pushl
mov
mov
xor
xor
xor
xor
lods
xor
xor
mov
jmp
out
popf
adc
ss
aaa
sub
aas
rcll
insb
cmp
mov
decl
cmp
cmp
jp
test
mov
lahf
cmp
cmp
cmp
cmp
cmp
cmp
test
cmp
cmp
arpl
cmp
mov
cmp
cmp
cmp
mov
idivl
cmp
and
pop
cmp
stc
cmp
adc
mov
fldt
ds
ds
rcr
ds
ds
decl
aas
adc
and
sub
xor
inc
aas
pop
aas
outsl
aas
xchg
aas
mov
imul
rcrl
xor
mov
jg
xor
xchg
xor
xor
xor
xor
xor
clc
mov
xor
fnsave
cld
xor
jmp
xor
ljmp
ss
jmp
lock
and
sub
aaa
pop
aaa
data16
lock
fisubrs
lahf
aaa
stos
aaa
mov
mov
aaa
lock
sti
decl
cmp
and
xor
inc
or
cmp
cmpb
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
je
mov
es
cmp
idiv
int
or
inc
insb
mov
xchg
idivb
daa
aas
sub
dec
out
pushl
lret
jbe
aas
subb
xor
call
clc
ja
clc
xor
xor
xorb
stos
xor
xor
aaa
jl
xchg
sahf
mov
loop
jmp
ja
aaa
cld
xor
xor
xor
xlat
inc
xor
xor
xor
xor
jge
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
ds
xor
fdivl
cld
jmp
ss
push
ss
mov
lret
ss
fdivl
loop
call
aam
fucomip
or
push
aaa
adc
sbb
aaa
cmp
cmpsl
orb
out
repnz
xchg
xor
or
xor
cmp
add
sub
sub
fsubr
sbb
mov
cmp
enter
push
imul
pop
popf
rcr
rcrl
cltd
push
stc
out
cmp
popf
fstps
cltd
cmp
cltd
shll
inc
fs
aas
and
nop
adc
fcoms
dec
leave
enter
and
and
aad
add
mov
nop
pop
andb
daa
pop
test
inc
pop
js
pop
xor
aaa
mov
push
xchg
insl
inc
aaa
mov
pop
in
xchg
test
add
nop
jmp
enter
jge
dec
and
push
xor
pop
mov
inc
hlt
jnp
or
fsubr
loope
jb
jb
inc
add
jae
adc
and
inc
fisttps
lahf
pusha
and
xchg
and
add
mov
mov
mov
lock
syscall
popa
std
mov
add
push
inc
and
push
nop
insl
add
adc
jl
out
add
push
subb
mov
in
push
inc
mov
sti
adc
out
mov
or
sbbb
push
cmc
push
add
pop
mov
mov
or
movsl
or
inc
mov
pop
push
mov
push
fsubl
cmpsl
cmp
mov
ret
int3
je
hlt
test
mov
and
fldcw
mov
mov
push
adc
xchg
or
mov
les
aam
push
mov
out
push
fcoms
or
aaa
pop
out
in
adc
add
fsubrs
sbb
or
xlat
cmp
mov
lods
and
xor
or
dec
lock
add
mov
jne
sbb
shr
cmp
jge
ja
pop
pop
push
jne
setnp
or
aaa
vmread
shll
and
mov
push
jnp
or
or
lds
test
jge
add
xchg
adc
test
into
out
lcall
xchg
mov
xorl
jb
shll
jge
aam
shll
mov
sbb
fidivs
pop
sub
stos
mov
out
dec
mov
and
and
and
fs
int3
inc
add
int
sbb
unpckhps
add
add
shrl
sub
insl
xor
fs
insb
mov
push
jo
insb
daa
dec
insl
sub
jo
insl
jae
je
mov
sbb
dec
add
inc
adc
jg
repnz
sarl
loopne
add
and
dec
mov
lret
inc
mov
push
mov
lret
je
dec
inc
dec
add
je
popa
insl
gs
adc
ret
rclb
jmp
xor
xor
xor
pop
inc
or
fs
adc
or
cmp
loopne
sti
sub
push
call
inc
aad
xchg
cmp
pop
sub
or
jg
mov
jge
add
push
push
enter
out
sbb
repnz
mov
jbe
mov
adc
sahf
stc
lea
dec
shlb
add
sbb
or
jo
enter
pusha
xlat
or
push
cld
outsb
and
adc
lea
clc
xchg
adc
adc
or
test
push
ret
push
jmp
call
push
or
int3
or
outsl
push
aas
das
or
and
sub
cmp
add
leave
mov
pop
jae
lods
loope
pop
pop
das
jno
and
pop
sti
subl
call
sub
mov
rclb
pop
or
jo
outsb
mov
xor
or
sbb
aas
push
add
jae
or
mov
and
pop
clc
std
pop
xor
popa
xchg
ret
lds
inc
cmpb
andb
cwtl
insb
ret
adc
mov
loope
lods
std
push
popf
orb
out
and
inc
das
out
and
fwait
jge
mov
push
push
outsl
mov
xchg
cmp
idivl
pop
inc
icebp
fisttps
mov
mov
jae
or
cmp
into
mov
popl
repz
lods
add
add
bound
fmul
push
and
push
mov
mov
mov
jb
dec
xchg
gs
outsl
outsb
outsb
jae
pop
add
sub
mov
repnz
aad
insb
pop
or
outsb
rorl
arpl
cmp
pop
adc
dec
loopne
loop
js
lret
mov
arpl
fs
shl
push
sti
xor
call
and
mov
jp
stos
call
pmuludq
je
sub
mov
mov
and
dec
movb
mov
daa
dec
outsb
int3
int
insb
into
dec
mov
dec
xor
xor
roll
rcl
push
cmp
jne
sar
xchg
das
adc
imul
lds
aas
std
enter
xor
std
std
mov
dec
xlat
pushf
popf
sub
or
inc
fidivrl
mov
std
js
push
ja
out
out
lock
aad
push
int3
add
fwait
or
shl
add
push
lods
leave
mov
fucomp
or
add
mov
push
push
inc
sub
andl
mov
call
jge
sub
rcll
push
cmp
and
jne
cmc
ret
in
push
sbbl
xchg
inc
push
push
adc
mov
imul
or
outsb
orl
cmpsb
enter
in
outsl
push
add
fs
je,pt
test
movsl
popa
mov
mov
mov
and
mov
data16
pop
scas
sbb
push
inc
loop
mov
dec
add
in
addr16
dec
je
mov
aaa
jb
enter
std
mov
in
xchg
push
xor
movsb
add
test
mov
ja
jb
xor
push
fsubr
fisttpl
mov
aaa
fiaddl
add
push
push
lret
mov
mov
jp
jb
outsl
dec
ror
mov
outsb
jae
je
inc
inc
shll
lret
mov
outsb
insb
popa
jne
pushf
sub
outsb
arpl
cs
lds
leave
gs
jno
add
int
mov
mov
cmc
mulb
mov
push
jo
gs
es
mov
insb
outsl
jb
sub
mov
pop
out
gs
js
jbe
mov
bound
jmp
clc
notb
or
je
xor
and
jge
mov
out
enter
ret
cli
adc
int
and
in
or
in
add
sbb
inc
push
leave
je
add
scas
std
adc
je
ds
addr16
add
nop
sahf
scas
xorb
out
movsl
cld
into
imul
pop
inc
je
mov
adc
inc
push
addr16
pushf
outsl
jo
push
loopne
call
jae
jp
xchg
adcl
mov
jne
push
js
sahf
addr16
jbe
pop
or
sbb
add
add
mov
or
aam
add
fdivr
push
iret
dec
mov
mov
mov
or
or
mov
sbb
add
es
dec
inc
and
mov
fistpll
nop
neg
sbb
pop
add
pop
shrb
sbb
push
ret
js
mov
inc
sbbb
fimull
sub
push
xor
cmp
ret
sbb
and
inc
xchg
cltd
sete
jge
xor
pop
mov
arpl
inc
add
fstpt
pop
cmpsb
jae
or
mov
or
jo
or
js
add
nop
mov
pop
pop
add
xchg
or
or
add
cmp
sbb
and
das
pusha
inc
inc
adc
lcall
push
leave
mov
dec
inc
push
enter
dec
inc
les
and
loope
xor
fmulp
pusha
shll
adc
mov
push
sbb
inc
and
jnp
and
cmpsb
add
xchg
push
fcoml
adc
add
fidivs
rclb
inc
adc
add
shr
mov
cmp
je
sbb
jg
fists
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
je
dec
adc
add
rcr
and
push
test
es
cmpb
cs
inc
cmp
stc
loopne
jl
add
jg
and
or
stc
mov
fucom
stc
shll
add
shll
lret
mulw
pop
mov
andb
xor
xor
mov
test
mov
add
idivl
adc
jb
sub
outsl
jg
test
pop
jae
sub
mov
or
loope
inc
push
add
int3
cmp
inc
popa
xor
inc
cmpsl
shll
test
fsubr
xchg
addr16
add
pop
sbb
add
cmpsb
imul
imul
insb
shll
mov
inc
dec
inc
lcall
and
adc
cmpsb
jmp
inc
add
dec
adc
ljmp
out
rorl
inc
int
stos
cmp
add
jp
mov
fs
out
test
adc
or
insb
pop
or
outsl
add
and
outsl
jne
jae
xor
mov
stos
popa
or
add
sub
push
imul
pop
push
inc
js
jg
outsb
xor
or
xor
loopne
js
dec
inc
dec
dec
or
insl
inc
push
sub
push
push
mov
pop
test
add
pusha
retw
les
inc
adc
dec
jae
xchg
clc
inc
in
add
int
xchg
inc
dec
inc
jo
add
dec
xor
ss
inc
xor
inc
add
lock
jo
testl
faddl
pop
add
sub
repz
mov
pop
mov
jo
repz
aaa
fs
push
pop
packsswb
add
add
jge
out
aaa
jo
mov
and
or
nop
ror
adc
cmp
iret
jno
sti
fstpt
inc
or
dec
outsb
outsw
es
lods
int
loop
int3
sub
push
pop
adc
mov
popa
popf
outsl
test
std
sbbl
push
inc
mov
fsubrs
and
mov
daa
cmp
js
sbb
cwtl
fiadds
lret
icebp
jno
and
cs
gs
and
and
xor
mov
or
xchg
sub
inc
mov
sbb
and
push
add
cmp
xchg
jmp
add
insl
insl
dec
jae
mov
dec
add
sbb
cwtl
int3
xchg
jmp
or
add
js
ss
fwait
in
bnd
mov
xchg
inc
cmp
sbb
or
dec
xlat
jne
adc
pop
stos
ss
int3
dec
pop
imul
pop
jmp
mov
scas
imul
or
and
jne
cli
xchg
or
add
jecxz
pop
push
movb
arpl
das
push
mov
adc
mov
xor
ret
je
inc
rclb
xchg
rorb
adc
xchg
push
jne
add
sbb
adc
sub
jbe
inc
add
adc
adc
fstpt
or
push
cmpsl
fs
enter
jne
or
ret
sbb
fisubl
pusha
fadd
adcb
int3
jle
xor
jnp
imul
or
add
xorl
bound
outsl
pop
jns
out
ret
jp
pop
testl
je
push
popw
loopne
lds
adc
fninit
je
stc
roll
sbb
sub
add
add
mov
int
cmp
xor
jle
push
add
clc
pusha
push
aas
add
ja
lret
xor
push
add
pop
jne
mov
dec
add
cmovns
iret
or
add
imul
dec
sarb
add
int3
add
test
sub
xchg
jbe
rorb
imul
out
pop
push
gs
lret
outsl
and
mov
scas
jnp
jecxz
inc
and
cmp
pop
mov
outsb
inc
jae
and
popa
cltd
pop
xlat
jns
popa
and
add
outsb
lods
fildl
arpl
inc
negl
mov
inc
push
ss
xlat
add
adc
or
jb
cmp
jnp
lods
imul
xor
mulb
xchg
insb
popf
lds
pop
dec
or
int3
in
test
mov
xlat
mov
xor
xor
pop
push
jmp
sub
mov
imul
dec
sbb
imul
push
daa
jbe
mov
inc
mov
fs
outsl
lss
mov
jae
pop
mov
inc
push
dec
fsubr
pop
imul
and
fstp
jmp
xchg
or
stos
sbb
aaa
jb
dec
lock
cmp
xor
shrl
xor
xor
xor
jne
xchg
xor
mov
push
xor
xor
outsl
xor
xor
xor
xor
xor
lcall
lds
xor
adc
xchg
ss
aaa
pop
aaa
je
mov
pushl
aam
aas
cmp
cmp
cmp
cmp
cmp
sarb
cmp
cmp
jo
mov
cmp
inc
ds
ds
leave
ds
xor
or
outsl
xor
addr16
ja
xchg
sarl
aas
aam
fwait
lods
or
decl
pop
xor
xor
and
sub
bound
inc
adc
mov
scas
dec
push
loopne
mov
test
jb
jge
xchg
push
hlt
jl
xchg
out
popa
ss
pop
inc
out
flds
xorb
js
sub
aaa
cmp
movsb
out
add
adc
dec
pop
cmp
and
and
pop
sub
and
in
inc
mov
test
mov
cmp
and
add
and
subl
dec
daa
inc
sub
and
push
mov
cld
adc
dec
xor
add
shll
movhps
add
push
dec
shll
sahf
scas
ss
shll
lret
cli
cs
sub
dec
xor
xor
out
pop
in
add
fcoms
lcall
jmp
sbb
pop
add
sbb
lods
inc
sbb
jg
sub
adc
shl
test
dec
lcall
lods
push
in
pop
out
and
mov
xor
adc
push
jge
inc
ljmp
imul
adc
add
push
rcr
adc
pusha
jo
mov
and
daa
and
push
add
test
adc
leave
and
adc
push
or
or
or
and
and
add
inc
enter
and
and
daa
in
and
and
push
inc
mov
dec
sbb
cmp
and
sub
pmulhuw
cmp
dec
es
or
or
sbb
arpl
pop
out
aaa
inc
je
push
jmp
cld
and
mov
xchg
lock
nop
call
aad
pop
loope
add
pop
hlt
xchg
in
add
call
jb
and
jle
loopne
pop
jle
or
pop
pop
cmpl
test
cmp
add
cmpl
jne
lea
leave
hlt
negb
push
pop
lahf
andb
mov
mov
or
fildl
pop
incl
incb
xchg
stos
add
dec
es
dec
push
fsubr
pop
leave
dec
inc
add
or
mov
nop
imul
dec
es
aas
pop
cmp
mov
sbb
push
mov
orl
aam
mov
pop
mov
xchg
mov
add
int3
xor
pmulhuw
outsb
mov
pusha
adc
mov
cmp
pop
test
testb
adc
clc
daa
sbb
je
jg
mov
push
inc
cmp
in
adc
jnp
jmp
pop
and
or
loope
pop
push
popf
mov
cmpsb
repz
inc
call
push
mov
cli
jmp
movl
pop
cmp
popa
or
sbb
pop
jle
inc
add
lea
jecxz
mov
call
mov
dec
mov
jne
es
pushl
sub
sbb
hlt
inc
add
imul
jne
cmpsb
mov
popa
and
pop
das
push
pop
add
pop
mov
loope
in
pop
and
mov
sbb
clc
dec
mov
jmp
fisttpl
lea
inc
sub
divb
jge
cmpl
jle
cmp
jne
mov
inc
mov
add
sahf
jecxz
mov
out
xor
mov
xor
out
imul
je
sub
lods
andl
mov
call
mov
jmp
and
nop
sub
rorb
daa
mov
das
pop
pop
cltd
mov
mov
call
inc
add
pop
sbb
mov
push
push
xor
inc
jns
call
jge
test
mov
daa
lds
mov
rcrb
xor
rcrl
ss
or
add
dec
cmp
cwtl
cmp
and
fcoms
aaa
push
inc
mov
fdivrl
icebp
jnp
add
push
lea
pop
mov
icebp
mov
push
rep
mov
jb
fnstcw
mov
xchg
mov
add
std
idiv
xchg
cmp
je
inc
add
cmp
jl
jmp
push
js
rclb
iret
add
add
lret
add
pop
and
out
jbe
dec
testl
sbb
je
sbb
cmp
incb
adc
stos
cs
cwtl
and
push
jo
lock
jmp
cmpl
pop
pop
shll
lea
aad
jl
xchg
cmp
pop
mov
push
cmp
fsubrs
push
jle
sbb
pop
xor
adc
roll
mov
int3
pop
add
mov
insb
xor
push
int3
and
add
nop
pop
repnz
sub
xor
stos
int3
jo
sub
push
push
jno
push
adc
cld
or
int3
push
push
call
je
stos
in
cs
in
scas
fwait
adc
pop
loopne
adc
sbb
cmp
sbb
fwait
add
stc
xor
xor
call
es
mov
jb
push
xchg
loopne
rcrb
push
and
cld
jne
imul
adc
mov
mov
mov
in
and
test
aam
and
and
xlat
fcomp
fisubl
and
and
fisubs
and
and
loopne
loop
daa
iret
and
loopne
cli
idiv
pushf
aam
fwait
decl
int3
xor
jo
mov
sub
inc
or
sub
mov
aam
leave
jae
and
adc
rcrb
call
and
fisttpll
or
inc
lea
push
test
push
cld
out
in
roll
sbb
adc
out
and
or
jbe
and
sbb
flds
adc
and
das
mov
add
or
inc
push
and
or
insl
adc
add
es
dec
rorl
xor
add
xor
outsb
imul
mov
xor
adc
sub
sub
adc
addr16
add
or
setg
pushl
arpl
or
inc
push
sub
inc
imul
jbe
outsl
outsb
xchg
outsb
fistpl
jae
jle
xor
adc
inc
pop
lods
or
dec
rclb
mov
add
or
lret
or
add
add
add
ffree
arpl
incl
mov
add
adc
mov
inc
pushf
outsl
jbe
lods
std
sbb
jb
jb
stc
pop
dec
outsb
das
fiaddl
cmp
mov
sbb
outsl
popf
adc
insb
jae
dec
into
mov
stos
add
xor
push
sti
popa
cmc
stos
add
sbb
mov
push
jl
iret
andb
push
into
das
fdivl
je
pusha
and
add
add
pusha
int
out
daa
pop
jo
rorb
xor
push
mov
das
decl
pop
xor
xor
xor
xor
xor
xor
xor
pushl
mov
xor
xor
in
mov
adc
jmp
aaa
mov
xchg
mov
mov
mov
cmp
cmp
jle
or
lcall
add
cmp
cmp
cmp
cmp
testb
test
xchg
bound
sar
cmp
dec
cmp
cwtl
cmp
push
nop
pop
add
add
sarb
add
aam
push
mov
add
mov
add
cvtpi2ps
add
xor
push
lock
push
sti
lods
and
push
iret
jae
jne
arpl
jle
dec
cmp
xor
jnp
setl
sub
inc
inc
and
pop
mov
sbb
shll
add
jb
addb
and
sub
js
push
sbb
add
popf
pop
add
cwtl
xchg
incb
inc
insb
add
add
dec
stos
pusha
mov
shll
add
js
and
pop
insb
dec
add
jmp
add
and
cmp
lock
int
add
mov
add
mov
xor
cmp
add
nop
sub
stos
push
add
adc
xchg
push
or
or
pop
add
lock
dec
and
dec
push
shll
xor
adc
popa
jb
rclb
stc
add
push
add
andb
add
aas
movsl
andl
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
