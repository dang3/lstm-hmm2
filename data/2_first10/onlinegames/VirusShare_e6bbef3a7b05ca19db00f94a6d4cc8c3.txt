sbbl
cmpsl
cld
mov
pop
pop
xchg
gs
dec
aas
das
sbb
xor
sarl
sub
mov
jae
gs
push
sub
mov
dec
cmp
sbb
mov
lahf
cld
scas
ror
gs
add
jns
insl
cld
arpl
incl
out
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
fimull
xchg
lcall
xchg
xchg
sahf
adc
dec
adc
out
lcall
daa
mov
iret
rcrl
cmpsl
lcall
ret
jmp
lock
fwait
fwait
shlb
testl
pushf
adc
leave
hlt
mov
in
add
es
lret
je
jle
xchg
idivl
jg
and
movsb
sub
adc
pop
test
mov
test
por
push
lods
cmp
mov
lcall
aaa
mov
hlt
xor
push
movsb
shll
xchg
xor
and
push
sub
mov
xchg
inc
xchg
sub
sub
daa
mov
es
enter
mov
cld
push
mov
cld
mov
mov
sbb
mov
rorb
cld
adc
call
mov
lret
or
and
mov
or
pop
push
mov
add
dec
add
cld
add
xchg
scas
add
jl
cld
pop
cmp
pushf
adc
out
mov
pop
aaa
out
jo
int3
or
pop
les
mov
add
imulb
je
adc
je
idivl
mov
int3
aas
adc
jb
addr16
cmp
adc
pushf
cli
xlat
stos
scas
test
ljmp
movsb
dec
and
inc
ljmp
jmp
dec
and
and
in
icebp
repz
out
pop
rolb
mov
or
mov
je
aas
repnz
mov
jl
jecxz
insb
ljmp
add
sti
xchg
mov
inc
or
in
test
adc
mov
test
loop
inc
mov
mov
cmp
xchg
stc
paddw
decl
dec
adc
cld
xchg
mov
dec
mov
dec
icebp
test
inc
int3
and
or
loop
inc
dec
xor
fbld
pop
les
test
shrl
or
dec
xchg
loop
out
jl
mov
jb
and
mov
scas
repz
jmp
sbb
movsb
dec
mov
fdivrs
mov
popf
test
call
mov
and
sub
lcall
stos
les
push
test
repz
fsubr
repnz
out
pop
scas
jae
sub
cmpsl
dec
iret
in
xor
test
data16
mov
xlat
bnd
repz
loopne
repnz
jo
dec
shlb
testl
cmpsl
pop
dec
inc
in
in
repz
cmp
jns
enter
sti
movsl
xor
int3
addr16
xchg
hlt
jecxz
inc
mov
neg
lcall
aaa
leave
sahf
ss
mov
dec
mov
hlt
idiv
mov
fwait
mov
out
cmp
pop
push
adc
and
or
clc
fcomip
je
push
popf
dec
cmp
sub
in
stos
jmp
add
pop
jp
out
stc
jne
sub
mov
mov
jmp
loopne
sbb
aas
jge
fidivrs
stos
dec
pmulhw
dec
jp
cld
std
ljmp
iret
jmp
lock
ljmp
jmp
jb
push
stos
pop
in
xchg
xchg
lods
out
cli
inc
sub
and
jb
ja
cli
movsl
in
mov
aad
pop
or
fildl
dec
test
cmp
aam
pop
add
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
inc
mov
mov
mov
mov
stos
fsubs
pop
enter
out
pop
dec
shrb
or
or
sti
test
add
repnz
add
sub
mov
mov
or
lods
test
jb
jmp
scas
sti
jg
pop
out
aas
inc
out
inc
adc
loopne
inc
push
repnz
cltd
push
inc
xor
lods
push
daa
and
add
xchg
or
movsb
jne
cld
js
and
clc
lret
xchg
push
ljmp
xlat
dec
mov
pop
popa
inc
jecxz
ds
pop
and
cmp
dec
test
loope
mov
ljmp
cli
sub
iret
test
adc
lods
dec
cmpsl
xchg
ljmp
jns
out
cmp
dec
call
jne
cmpsl
mov
adc
and
sub
add
xchg
jae
adc
sub
cmp
test
inc
pop
cmpsb
add
dec
lret
movsb
dec
stc
fimuls
mov
lret
mov
cld
mov
mov
lret
lcall
mov
mov
mov
xchg
cmc
mov
pop
jmp
cmpsb
mov
add
cmpsl
jbe
dec
cli
hlt
adc
pushf
loope
lods
pushl
cld
ljmp
ss
imul
into
sbb
scas
or
out
inc
ljmp
hlt
jno
inc
fwait
or
sub
add
aaa
cli
mov
adc
in
stc
xor
xor
rorl
dec
xor
js
xchg
ja
cs
lods
in
xchg
in
inc
add
add
adc
mov
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
lret
xchg
mov
cmp
inc
jnp
lea
cltd
clc
je
pushf
cmp
lock
pop
loop
add
xor
popf
xor
mov
fwait
pop
add
imul
in
sub
push
sub
xchg
repnz
aas
inc
test
add
add
push
ljmp
cltd
add
push
or
pop
push
xor
xlat
das
xchg
inc
push
and
inc
dec
xlat
inc
and
insl
jb
adc
hlt
xchg
dec
test
or
fcoml
hlt
leave
xlat
push
xchg
hlt
in
fcomi
dec
or
mov
nop
cmpsl
xchg
gs
xchg
mov
mov
shrb
mov
hlt
xchg
push
int
cmp
ds
cmp
sub
jg
jmp
cmp
jmp
and
cmpb
add
mov
jns
xchg
push
cmp
daa
push
jl
aaa
xchg
jae
pushf
shr
xchg
add
push
mov
shll
outsl
add
scas
daa
dec
adc
stc
pop
mov
popf
shl
xchg
cld
ret
jno
popf
subl
fnsave
jnp
ja
scas
insl
jl
ds
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
cmp
xchg
mov
push
ret
out
je
cmp
in
lods
fadd
fwait
dec
pop
jns
cs
sbbl
lds
inc
pop
xor
int3
jl
jno
adc
popl
push
adc
adc
movhps
ret
inc
jle
enter
pop
repz
or
sub
int3
mov
mov
ficoml
dec
enter
add
mov
xor
sub
jge
lahf
ret
jmp
hlt
daa
std
sub
out
xor
out
jae
outsl
jb
jl
outsl
cli
imul
scas
ret
sbb
sub
rorb
test
mov
aam
je
repz
push
movsb
lahf
jbe
sbb
mov
std
daa
push
xchg
in
xor
mov
fcoms
jl
mov
mov
aad
cmpsl
dec
ja
add
and
mov
mov
mov
cmc
imul
push
nop
mov
sti
stos
cmpsl
cmp
mov
std
jmp
push
push
repnz
in
cld
ljmp
pushl
lahf
jl
inc
sti
cld
add
inc
loopne
mov
pop
cld
icebp
loopne
icebp
decl
xor
inc
mov
stos
xchg
add
push
nop
cwtl
lea
xchg
xchg
nop
mov
popf
lcall
mov
mov
fists
repnz
fstpt
imul
cld
push
push
inc
data16
cmp
loopne
adc
dec
data16
adc
testl
xchg
enter
adc
scas
mov
out
jbe
dec
icebp
fdivp
dec
adc
es
stc
repz
clc
sar
out
cld
lcall
call
lahf
push
aad
out
clc
pop
cmp
stc
incl
test
jp
mov
mov
sti
mov
push
or
popf
mov
add
lahf
jg
rcrl
aas
in
lods
add
adc
lea
cmp
std
jecxz
fcomps
hlt
mov
ds
into
or
das
sbb
xor
fs
loopne
rclb
sar
cmp
adc
iret
add
aad
mov
mov
gs
xchg
gs
dec
inc
xor
push
xchg
mull
mov
push
inc
pop
cmpsl
jno
test
fwait
stos
mov
cwtl
gs
imul
sub
xchg
sahf
sar
into
and
cli
loop
dec
fidivl
dec
fisttps
iret
int
aad
int3
fstl
rclb
addr16
or
cli
xchg
ret
mov
in
fldenv
inc
xlat
jle
xlat
jp
pop
xor
imul
data16
repz
or
in
out
out
xchg
idiv
shll
frndint
cmc
jmp
test
jmp
mov
jmp
arpl
jmp
mov
jmp
out
fs
jmp
aaa
out
jmp
stc
jmp
out
daa
mov
out
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
clc
or
aad
call
pusha
mov
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
mov
notl
adc
pop
stos
adc
inc
js
sub
pop
iret
loop
lret
iret
cli
push
push
and
xchg
sub
loop
fdivr
in
fistpll
and
mull
xchg
sbb
xchg
mov
jp
movsl
cli
mov
rol
xlat
mov
inc
aas
mull
fidivl
lret
pop
jge
stos
jl
or
adc
cmpb
jmp
dec
and
addr16
jmp
inc
lret
add
pop
ret
in
cmp
xor
add
repnz
dec
push
and
lods
std
xchg
cmpsb
scas
dec
xchg
dec
dec
loop
shlb
or
cmp
mov
lahf
xchg
pop
sar
fwait
pop
test
inc
mov
and
clc
sbb
fwait
nop
jbe
pop
shll
xchg
shll
rcrl
xchg
lret
shll
xchg
xchg
lret
and
cwtl
lret
mov
clc
and
pop
lret
push
sbb
sbb
int
outsl
add
push
mov
xor
dec
sub
aaa
scas
cli
daa
scas
in
inc
mov
shll
jmp
or
cli
pop
xchg
not
lret
in
shr
sub
xor
inc
ret
xor
lods
lods
cld
cmpb
adc
out
stc
adc
aad
push
out
out
push
div
cmpsb
jns
stos
jecxz
mov
pop
and
or
subb
pop
pop
add
jl
sub
jmp
fcomi
xchg
mov
mov
je
cltd
jle
inc
add
xor
ret
jle
idivb
in
mov
push
scas
popf
pusha
jbe
pop
push
les
add
mov
lock
and
out
xorb
jl
in
dec
add
mov
mov
push
repnz
loope
cmc
cld
add
and
je
cld
mov
scas
mov
add
cld
jg
lods
in
aad
xchg
mov
cmp
sbbb
jl,pt
std
scas
and
pop
fildll
jl
sti
jl
adc
sbb
add
iret
cmp
mov
mov
jbe
fwait
push
aas
and
adc
repz
cli
je
ja
or
out
jno
mov
add
lahf
jb
imull
adc
adcl
test
cmp
adc
mov
je
imul
and
movsb
xchg
cltd
outsb
mov
cltd
out
adc
cmc
xchg
nop
bound
hlt
sti
mov
mov
loope
std
mov
sbb
adc
pop
pop
imul
testb
jbe
in
jmp
cld
mov
outsb
cld
mov
push
xchg
and
cld
mov
mov
xchg
je
sbb
mov
or
leave
mov
mov
stos
lods
add
cmpsb
cld
sbb
xor
add
sbbl
je
add
pop
and
rcll
cld
mov
rcl
fildl
popl
add
mov
cmpsb
xrelease
ja
mov
je
xlat
cmp
xchg
mov
int3
je
aaa
add
jl
jecxz
cmp
push
pop
jne
movsb
stc
pop
adc
movsl
sub
popf
in
xor
enter
lods
out
mov
gs
pushf
pushf
std
dec
jle
cld
lods
arpl
test
cmp
icebp
xor
xchg
xchg
sti
xchg
int3
lods
sbb
mov
insb
ficoms
mov
add
cmc
notl
scas
add
mov
mov
cli
and
cmp
cmp
mov
je
jns
je
ret
mov
or
movsb
mov
pop
xor
fsub
adc
repnz
inc
iret
je
adc
mov
or
cld
pop
jecxz
dec
out
fldl
mov
clc
or
jmp
jmp
repnz
imul
pop
mov
pop
cmp
mov
fbstp
addr16
clc
fucomp
jle
pop
repnz
and
and
ret
arpl
jne
cmp
mov
cmpsb
adc
jb
dec
not
jg
xlat
data16
cmpsb
imul
test
daa
or
or
pop
push
push
jle
subl
add
mov
std
inc
test
dec
mov
jl
shr
add
notb
test
lea
pushf
dec
xor
mov
repnz
pop
shr
iret
pop
xchg
sbb
sub
and
cli
xor
mov
dec
adc
mov
xchg
mov
or
push
sti
js
cli
add
fs
add
xchg
aaa
jae
add
aas
dec
dec
dec
shll
repnz
cli
inc
in
pushf
in
lcall
jg
jg
fcompl
enter
shl
in
rol
lahf
in
mov
stc
adc
xchg
neg
push
in
push
fbld
mov
mov
xchg
fwait
xchg
lcall
mov
pushf
mov
mov
add
xchg
popf
lea
sbb
nop
fwait
mov
add
mov
xchg
lcall
dec
rorb
xchg
rol
cmpsb
icebp
sahf
mov
sub
pop
jmp
mov
loop
xchg
xor
in
xchg
mov
sub
cwtl
xchg
loop
jnp
test
xchg
mov
sbbb
test
xchg
jecxz
lea
and
jl
xchg
lcall
lcall
fwait
enter
les
lea
lock
lret
dec
cld
scas
mov
and
and
pushl
jb
xchg
nop
jns
mov
testl
ss
nop
mov
sub
xchg
rcrb
xchg
mov
fdivs
fidivrs
jge
pop
mov
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
shl
test
mov
lods
mov
aam
ret
rcll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
sbbb
stos
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
out
inc
jnp
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
push
std
dec
jo
mov
xchg
mov
push
into
fdivs
mov
mov
add
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
push
iret
int
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
add
int3
mov
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
das
add
add
xchg
lret
jo
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
or
add
ret
imul
ret
push
ret
or
scas
incb
add
stc
pop
push
arpl
cs
or
js
in
lahf
insl
jb
clc
push
mov
jb
lods
mov
jb
ret
enter
jb
fmull
test
push
jb
push
and
and
popl
jb
or
shl
movsb
std
push
mov
fnstenv
clc
mov
call
jo
clc
das
and
lcall
mov
negl
jnp
icebp
in
mov
clc
cli
aas
xor
jns
clc
xor
adc
mov
clc
dec
fnstcw
jl
dec
add
popa
loop
gs
sarb
push
jg
adc
xchg
imul
adc
xor
rcll
hlt
jecxz
mov
lret
and
leave
mov
inc
clc
iret
rcrb
cltd
es
mov
sbb
gs
xchg
gs
mov
lea
gs
xchg
insl
pop
dec
jne
clc
sub
leave
mov
pop
jno
mov
lret
mov
int
test
sub
jne
push
inc
xor
daa
adc
pop
fxch
pop
xchg
gs
mov
gs
push
inc
test
jecxz
bound
xchg
stc
dec
pop
hlt
cld
aaa
push
inc
pop
and
pop
sbb
cmp
outsl
gs
adc
sub
clc
popa
cld
pop
push
jns
fs
adc
mov
xchg
cld
cmpsl
cltd
push
sub
mov
test
pop
push
mov
lret
mov
aas
aaa
sub
sub
syscall
sti
shl
out
lret
mov
fst
lret
shll
les
push
cld
sbb
dec
adc
pop
pop
sub
xor
mov
fs
cld
or
dec
test
and
mov
mov
dec
jg
loop
sub
dec
pushl
mov
xchg
movsl
or
enter
dec
inc
enter
in
out
test
mov
mov
add
cltd
pushf
pop
add
popf
cmpsb
lods
mov
stos
test
lods
mov
andl
jge
cltd
mov
mov
xor
clc
mov
clc
nop
cld
pop
lret
stos
mov
fidivrs
loopne
out
fstpt
std
pusha
idiv
cld
xchg
inc
int3
jge
xchg
lahf
pop
dec
push
mov
out
dec
mov
sti
sti
jmp
not
sahf
fdivr
and
cmpsl
and
cld
ficomps
scas
or
ror
dec
xchg
call
imul
loopne
mov
xchg
dec
outsl
loop
fildll
dec
stc
notl
mov
jmp
cmc
mov
add
mov
mov
insb
mov
aas
mov
in
jmp
pop
aad
scas
add
fnstsw
push
jg
jns
sub
jl
lret
fucomip
mov
add
lock
test
xchg
pop
sub
decl
pushf
dec
xchg
jl
mov
lock
loop
mov
testb
lcall
rolb
mov
mov
mov
cwtl
hlt
mov
test
ficompl
lock
jmp
div
in
and
cmpsl
cld
fadd
cld
stos
mov
mov
mov
lods
jp
repnz
stos
sbb
subl
mov
xchg
cmp
ds
mov
mov
test
in
cld
nop
mov
lcall
arpl
mov
rcrl
pop
and
dec
xchg
cld
push
mov
mov
stc
iret
pushl
ds
lods
dec
add
sahf
xchg
sahf
repz
push
cli
or
hlt
cmp
sub
pop
add
incl
aad
xor
push
hlt
mov
call
mov
lock
push
movsl
mov
gs
aaa
mov
lods
or
pushf
cltd
pusha
mov
lcall
sar
sbb
cld
xchg
rcrl
arpl
cli
fadd
jp
mov
stos
xchg
out
imul
fcompl
out
pop
fildll
adcb
xor
inc
xchg
imul
xchg
shlb
inc
mov
fiaddl
out
cmpsl
lock
hlt
xchg
adc
lds
pop
add
inc
sar
dec
sbb
arpl
mov
adc
pop
stc
pop
mov
sarl
aas
jnp
mov
pop
iret
sti
pop
mov
pop
xlat
scas
adc
mov
xchg
outsb
test
add
mov
xlat
inc
ret
repnz
scas
inc
insb
push
sbb
dec
mov
jb
cmp
push
je
aam
jl
cli
jbe
and
or
mov
pop
repnz
xchg
outsl
mov
and
clc
mov
jl
sti
adc
sbb
test
mov
jae
sbb
and
stos
imul
jp
xlat
repnz
xor
hlt
testl
xchg
fiadds
out
jne
pop
arpl
nop
dec
inc
mov
jecxz
xchg
inc
lock
mov
std
popf
fs
out
shll
nop
add
and
mov
jne
jg
icebp
pushl
repnz
iret
loope
push
adcb
add
cmpsb
addl
repz
je
jge
pop
xchg
pop
fs
cmp
jle
pop
lods
punpcklbw
jle
mov
mov
mov
cmp
mov
in
jmp
mov
iret
jp
ljmp
pushf
ljmp
cmp
loopne
xor
xchg
lea
and
add
les
mov
mov
mov
mov
addb
sbb
sbb
add
enter
out
sbb
jmp
icebp
shl
mov
xchg
xchg
add
sti
decb
add
xchg
testl
outsl
pop
rorl
adc
negl
scas
dec
jae
mov
cs
xchg
cmpsl
inc
test
and
incb
fstl
ljmp
xchg
loopne
dec
loope
icebp
mov
out
cs
daa
jno
xchg
xchg
dec
mov
out
movsb
sub
mov
sub
xchg
out
mov
xchg
push
jno
test
sti
lds
cmc
jb
cvtps2pd
cltd
pop
inc
jnp
mov
pop
pop
inc
mov
out
leave
dec
repnz
inc
in
cli
andl
jb
or
jg
mov
push
cmc
test
out
aas
out
stc
ljmp
dec
repz
daa
lahf
pushf
mov
dec
repnz
pop
mov
lock
out
push
scas
lea
dec
ds
js
cmpl
xchg
jmp
ss
cmp
fsubr
mov
pop
imul
scas
jne
fdivp
jns
jecxz
out
pop
jb
jnp
daa
dec
shlb
mov
repz
les
push
pop
rcrb
mov
rorb
es
fists
clc
pop
adc
out
mov
fs
jp
and
std
or
mov
xchg
out
cmpsb
lea
push
xchg
call
les
mov
je
cld
jno,pt
dec
js
int3
adc
and
clc
inc
jge
and
test
jl
mov
cmp
xchg
std
test
inc
push
add
lahf
and
ljmp
mov
movsb
addr16
pop
and
out
adc
notl
ss
add
lret
dec
cli
add
add
int
adc
enter
lds
inc
push
jl
adc
out
jae
or
inc
push
sbb
in
imul
scas
cmp
xchg
loopne
lea
nop
mov
in
mov
sbb
cld
cmp
mov
push
lods
pop
mov
rcr
and
idiv
cmp
iret
jne
mov
loope
les
sbb
pop
jle
mov
scas
icebp
fwait
mov
repz
lahf
hlt
stos
fdivs
jne
cmpsl
ljmp
iret
test
push
movsl
std
lds
push
pop
movsl
aad
iret
inc
icebp
cld
scas
dec
sub
xchg
movsl
inc
dec
cld
cld
scas
cmpsb
mov
outsl
mov
iret
mov
jp
xchg
mov
cld
into
incb
cli
decl
jae
into
ss
das
xor
ja
adc
in
or
dec
loope
or
push
add
lar
outsb
xor
jnp
jg
into
daa
mov
imul
push
and
ljmp
jecxz
out
push
cltd
std
out
push
jle
aas
out
jg
bound
cld
scas
add
repz
mov
arpl
cli
mov
lret
movsb
mov
or
mov
lret
mov
add
push
inc
in
sbb
xchg
xor
add
aaa
mov
jne
test
xchg
ret
iret
mov
fadds
in
pop
ficomps
add
dec
dec
test
pop
xchg
push
fdivrl
test
icebp
fisttpl
add
das
jl
in
cmpsb
outsl
in
std
outsl
das
cwtl
cmpsl
mov
jne
ret
test
mov
jl
mov
adc
enter
popa
sbbb
xchg
dec
jge
jp
xchg
iret
mov
and
dec
pop
cwtl
mov
aaa
es
in
arpl
cmp
aam
into
sti
fisubrl
aas
pop
sti
xchg
hlt
cltd
hlt
scas
sti
subb
clc
in
data16
mov
mov
hlt
pop
orb
mov
fcom
mov
std
int
mov
cltd
jmp
jno
int3
stos
mov
pop
iret
lahf
int3
pop
int3
sahf
inc
icebp
pop
repz
adc
inc
jle
int3
xlat
les
test
lea
int3
mov
xor
arpl
sti
int3
in
out
repz
and
movsl
and
sbb
mov
cmc
into
int3
push
cmovs
dec
mov
test
les
mov
inc
jno
lock
into
fldcw
add
adc
xchg
sub
and
cwtl
jl
sti
ljmp
imul
mov
int
mov
xchg
fucomip
repz
jle
mov
jl
mov
jmp
mov
sub
je
je
and
nop
jb
mov
push
mov
push
mov
cmp
ds
loop
mov
push
ss
movsl
lods
xchg
jecxz
enter
pop
mov
stc
call
in
add
out
out
sub
jmp
aas
sti
ds
add
rclb
mov
lret
mov
jg
cmp
lahf
push
movsb
mov
mov
dec
xchg
in
lods
push
mov
sub
pop
je
or
faddl
icebp
sub
or
add
out
jb
call
in
cmp
out
inc
stos
out
xor
add
nop
inc
or
hlt
or
cld
out
jb
enter
jle
cmp
adc
sbb
inc
adc
add
mull
hlt
inc
add
jb
les
cmpsb
ds
ds
add
inc
out
jmp
pcmpeqb
fmull
or
mov
push
mov
pop
ror
adc
inc
ds
add
hlt
jge
ds
hlt
or
or
adc
dec
inc
cld
and
in
lock
mov
adc
add
stos
or
adc
fsubrl
je
cld
mov
aad
js
je
and
cmc
push
scas
test
cmpl
nopl
push
mov
push
push
sub
ficoml
pop
inc
and
jl
inc
dec
dec
jecxz
mov
push
add
or
dec
mov
sbb
add
dec
dec
dec
push
hlt
fnstcw
jl,pt
lret
pop
daa
inc
push
xchg
addr16
adc
jmp
adc
and
leave
mov
inc
xlat
loopne
or
push
add
popa
push
add
je
pop
mov
aas
imul
stos
mov
out
push
adc
aad
daa
stc
sub
cmp
daa
cli
inc
sub
jmp
adc
inc
add
iret
stos
cmp
fucomp
outsl
xchg
adc
sbb
popf
imull
lret
and
sub
xor
and
add
js
int
mov
stos
add
and
sub
mov
mov
clc
dec
arpl
jno
xchg
movsb
je
pop
inc
and
test
jmp
dec
fcomi
js
or
cmp
dec
add
cmp
jmp
std
fdivp
dec
mov
cmp
inc
shrb
cmp
fsubl
sub
cmp
stos
je
popf
or
loop
and
hlt
sub
pop
orb
xor
aas
mov
mov
sub
adc
daa
cld
or
and
daa
or
movsl
mov
sub
ds
or
adc
cmc
fsubl
imul
jmp
cmp
push
or
push
xchg
jae
push
sub
iret
and
dec
jae
jns
call
mov
das
jo
adc
jo
inc
loopne
sbb
sub
sbb
jp
sbb
adc
daa
es
dec
shll
sub
xorb
aam
jo
dec
xchg
push
and
and
mov
dec
sbb
push
fisubrs
lcall
dec
xchg
and
out
popf
aaa
jo
sub
enter
jo
inc
jp
imul
cmp
and
xchg
js
sub
sub
icebp
cmp
lcall
fsubl
es
je
jmp
mov
movsb
sbb
and
inc
cli
mov
and
push
sbb
xchg
jo
jg
lcall
adc
mov
adc
or
mov
test
push
add
es
nop
cwtl
sub
icebp
cmp
sub
cmp
xor
jae
mov
cmp
sub
das
out
push
mov
dec
setg
ret
sti
push
add
int3
add
pop
pop
jp
jle
mov
jge
ja
jecxz
jge
shl
xchg
cmpsl
inc
adc
rcr
bound
add
in
jb
mov
mov
adc
fildl
and
int3
dec
fs
or
mov
push
mov
cmp
loope
xor
in
push
xor
push
and
mov
or
loope
call
dec
xchg
pop
or
mov
pop
in
stos
mul
lods
dec
jmp
inc
sbb
mov
sub
sub
iret
in
xchg
push
cmp
sbb
sbb
jo
cld
cmp
xchg
add
shrl
sbb
cwtl
int3
and
testl
sub
insl
iret
and
movsb
mov
jmp
add
xchg
cmpsb
inc
ja
adc
scas
dec
mov
adc
rolb
inc
xchg
jecxz
mov
xchg
cmp
stos
push
and
xor
xor
inc
or
lods
scas
dec
or
sbb
mov
push
push
mov
ret
scas
dec
jp
lcall
mov
insb
jae
sub
inc
ss
pop
out
mov
in
jp
test
loope
cmp
xchg
pop
stc
dec
int3
jg
dec
stc
mov
mov
bnd
sbb
in
inc
lock
fsubrl
out
test
cmp
test
out
leave
and
pop
insb
add
adc
loop
into
bound
push
push
push
sub
shrb
subb
cmp
movsb
lcall
repnz
loop
ret
xorb
lret
sub
xrelease
cmp
mov
adc
call
roll
loope
sub
or
loop
out
adc
in
xchg
mov
adc
icebp
loope
mov
add
test
add
nop
mov
stc
test
cs
int3
mov
out
sbb
add
mov
cmc
test
sbbb
pop
adc
std
add
and
pop
out
divl
inc
adc
lods
push
sub
sbb
sub
sub
dec
enter
pop
lret
inc
into
adc
imul
cmp
cmp
nop
inc
sub
addb
jnp
jp
dec
mov
je
sbb
je
lods
mov
into
movsb
adcb
xchg
push
shrb
mov
pop
jbe
je
stos
mov
mov
clc
mov
mov
stc
je
fidivrs
jg
fdivrl
ds
xchg
xchg
shll
lret
pop
mov
cltd
dec
das
pop
lods
out
les
fistl
xchg
pop
bnd
and
pop
movsl
dec
scas
jge
mov
test
xor
scas
xor
bound
clc
out
les
das
mov
out
rcrl
dec
arpl
int
pop
mov
clc
mov
mov
das
cmpsb
lods
add
pop
lods
ljmp
sub
xabort
aam
test
add
loope
dec
aad
hlt
mov
movsb
add
jecxz
sbb
xchg
or
pop
ljmp
je
cmpsb
in
lea
ss
pop
std
lahf
xchg
push
push
pop
push
lods
xchg
add
dec
xor
fwait
sub
inc
aas
cmp
mov
test
lods
xchg
dec
shl
das
mov
cmpsb
ljmp
lret
daa
mov
add
xchg
cmc
jg
mov
paddusw
testb
out
clc
repnz
dec
scas
inc
iret
repz
jle
test
loopne
bound
sarl
jne
pop
jns
sti
jne
lods
out
cs
xorl
adc
push
pop
and
lcall
ljmp
scas
repnz
sahf
sub
add
cwtl
daa
lcall
push
and
or
lcall
ret
cmpsl
xchg
dec
lret
jnp
aam
jb
mov
pop
ficompl
xorb
add
out
inc
rorb
in
cmp
stos
push
cmpsl
out
push
rorl
cmp
leave
xchg
movsb
xchg
dec
jmp
sti
test
loop
or
jg
cmc
pop
clc
xor
fwait
pop
sti
call
cmpl
fcomi
sub
mov
sti
div
mov
lahf
jmp
nop
ja
pop
jnp
je
push
pusha
les
iret
mov
or
bound
add
jb
notb
mov
aas
push
ret
lods
scas
loope
aam
testb
js
daa
jmp
mov
cmp
xor
xchg
push
aam
mov
test
push
ss
aas
cld
test
add
icebp
or
in
test
aas
in
popf
adc
ret
add
xchg
pop
or
jbe
fucomi
and
loope
push
jge
push
inc
sti
cltd
loope
add
inc
add
rol
or
icebp
pushf
cltd
je
sti
cltd
ret
mov
xchg
inc
mov
xchg
jnp
xchg
jg
fstps
fdivl
mov
mov
gs
sbb
inc
movsb
cmp
dec
sbb
mov
xor
ret
outsb
cmp
lods
test
clc
insl
cmp
pusha
xchg
adc
test
mov
add
adc
mov
mov
mov
sti
ret
rorb
jmp
cli
lcall
lock
js
pop
push
mov
cmpsl
pop
xor
fildl
mov
test
lahf
jmp
mov
and
mov
lods
hlt
shrl
into
adc
xlat
mov
stc
cltd
and
jmp
push
dec
pop
mov
add
xorb
aam
mov
adc
inc
cmpsl
fbld
fnstsw
ljmp
xor
xchg
xlat
and
std
mov
cmp
out
mov
adc
adc
inc
bound
mov
inc
xlat
jge
jmp
fisubrs
fistps
xchg
xor
sarl
and
fdivs
fisubl
dec
pop
movb
add
inc
dec
pop
mov
imul
mov
in
outsl
mov
iret
add
dec
inc
rclb
dec
outsl
xchg
jns
push
iret
push
outsb
jns
xchg
loopne
add
hlt
inc
std
jo
xor
xchg
pop
pop
jl
movsb
jbe
filds
push
je
mov
pop
jb
cld
arpl
sbb
mov
mov
dec
out
cmove
fimuls
clc
sti
mov
pop
sbb
in
rorb
rclb
mov
mov
xor
movsl
out
fstpl
push
mov
imul
mov
mov
pop
jno
adc
pop
xchg
sub
mov
mov
push
cmp
push
inc
add
insb
cltd
lock
call
in
insb
out
test
adc
test
je
lods
inc
out
jle
jae
leave
xchg
filds
jecxz
xchg
call
mov
and
nop
jg
lods
add
test
xchg
out
sarl
ja
adcl
mov
push
mov
push
xchg
cld
push
mov
xchg
dec
cwtl
xor
lea
test
dec
mov
push
lcall
inc
xchg
inc
hlt
inc
faddl
cld
inc
xchg
ja
negb
lcall
dec
sub
in
sub
clc
daa
dec
es
and
hlt
and
and
cmp
sti
mov
and
mov
cs
xchg
popf
sbb
aad
push
shll
aad
dec
xchg
gs
or
aas
sarb
sub
shll
push
jl
cmp
xchg
iret
and
aaa
ss
xor
mov
rorl
bound
aad
lods
or
and
std
xchg
stos
call
mov
xchg
cmpsb
xchg
outsb
loope
das
out
xchg
sub
aas
xchg
aad
enter
xchg
icebp
adc
gs
imul
push
arpl
lcall
cltd
shll
les
xorl
add
pop
and
aaa
sbb
mov
mov
stos
aaa
jne
push
adc
jbe
test
int
jo
dec
sbb
arpl
aam
cs
xor
pop
cltd
mov
lret
mov
cs
fs
and
insl
sub
fnstsw
pop
and
pusha
test
in
lahf
and
and
imul
inc
mov
push
adc
enter
cmp
pop
out
or
es
jecxz
inc
hlt
jb
por
sar
adc
pop
ficoml
pop
icebp
aad
dec
jle
pop
mov
xlat
div
jl
ss
out
or
mov
repz
or
outsl
cltd
adc
jle
mov
inc
pop
push
mov
les
daa
xlat
or
ds
daa
aas
loop
xchg
sub
ret
xchg
pop
rorl
lahf
test
push
ljmp
jno
addr16
mov
mov
jmp
fcompl
inc
cmc
movsb
lret
jg
and
jne
mov
sti
repnz
repz
cmpsb
jne
pop
mov
shlb
sbb
cltd
or
lahf
stos
pusha
out
xchg
inc
xor
inc
xor
stc
mov
add
in
mull
add
inc
sti
cmp
insl
pop
and
negb
dec
cwtl
add
adc
movsl
imul
xchg
into
outsb
fcompl
in
nop
test
lahf
xchg
mov
fsubs
push
mov
in
mov
test
and
aas
mov
std
cmc
inc
pop
and
mov
ret
cli
test
imul
gs
insl
pop
or
in
lods
mov
pop
loop
pop
ljmp
sar
out
test
mov
in
add
fists
sti
jae
pop
mov
cmp
test
es
mov
mov
jmp
popf
incb
push
scas
push
mov
stos
aad
loopne
add
mov
les
pop
add
in
leave
cs
test
into
loop
adc
out
dec
mov
adc
out
out
pop
shr
mov
or
data16
or
xchg
js
jmp
jno
adc
repz
push
pop
xor
add
lock
pop
iret
popf
sti
fdivrl
pop
mov
mov
xchg
adc
sub
cmpsl
idivl
push
mov
cmp
dec
jmp
pop
stc
aad
test
mov
outsb
jb
cmpsb
pop
ja
cmp
ja
out
insb
divl
pop
mulb
push
push
jp
cmpsl
jo
mov
ds
cli
jmp
mov
inc
jp
xchg
mov
or
enter
mov
call
stc
and
xor
ffreep
movlps
mov
cltd
inc
in
jp
test
divl
inc
cwtl
xor
xchg
ret
push
nop
cmp
imul
cld
mov
outsl
lret
mov
jle
jg
les
loop
or
int3
test
sub
ds
jbe
mov
pop
popa
popf
lds
xlat
mov
aad
aaa
mov
adc
lcall
xchg
loopne
in
mov
mov
sbb
jnp
mov
in
out
xchg
sub
adc
push
pusha
pop
in
cli
mulb
xlat
test
adc
lds
dec
mov
pushl
jmp
dec
ljmp
clc
inc
lahf
ds
shll
mov
punpckhdq
testl
push
icebp
pop
sbb
test
aas
inc
in
and
xchg
pop
jg
ds
mov
xchg
cli
test
hlt
das
lret
loope
mov
loop
aam
mov
dec
adc
rorl
in
xchg
jb
cmp
ds
bound
stos
jo
sbb
or
cmpl
pop
in
pop
aas
lds
jle
leave
out
sub
in
test
xor
inc
push
push
in
test
cld
bound
fs
je
stos
ret
push
popa
insb
outsb
ffreep
cmp
dec
loop
inc
insl
subb
sbb
xlat
push
cmc
aaa
std
xor
sub
std
sub
and
push
mov
pop
pop
xor
xor
mov
movsb
pop
stos
cmp
into
push
out
dec
je
out
pop
mov
aas
mov
in
cmp
ret
push
out
lods
jb
sahf
inc
jmp
cmp
push
out
clc
ljmp
and
mov
and
inc
ja
leave
mov
jp
add
test
mov
outsl
cmpsb
out
xchg
cmpl
movsl
add
cmpl
xor
push
test
shlb
or
push
fistl
or
aad
jmp
dec
mov
sub
fiaddl
xchg
push
xchg
cmp
loop
shrb
mov
push
scas
scas
test
jecxz
jge
daa
cmpsl
lods
in
outsl
cmp
fadds
cmp
iret
out
mov
add
lret
mov
int
out
xchg
lds
mov
push
in
mov
mov
dec
push
add
add
arpl
push
mov
adc
adc
pop
mov
fwait
xchg
xchg
sbb
call
out
sub
bound
mov
pop
lock
hlt
pop
in
mov
js
in
pop
cmpsl
pop
lock
call
dec
mov
scas
push
lcall
mov
mov
mov
lcall
dec
push
lcall
mov
ja
jbe
stos
sub
lds
jb
jle
mov
outsl
mov
inc
adc
inc
arpl
imul
in
push
push
imul
xchg
gs
inc
data16
xorb
bound
and
pop
mov
mov
mov
sub
sbb
sbb
mov
xor
shll
lcall
dec
sarl
pop
inc
dec
pushf
in
mov
pop
and
in
scas
test
ja
cwtl
fwait
fwait
fwait
jg
outsl
dec
iret
ja
in
mov
stc
cmpsb
lea
lods
xor
adc
clc
add
add
ljmp
xor
leave
push
out
out
mov
ss
cmpsl
xlat
cmp
or
mov
push
jb
xchg
ret
and
jb
pushf
inc
scas
subps
ja
adc
xlat
sbb
mov
inc
cwtl
lods
out
sti
mov
add
xchg
sub
mov
mov
aas
das
xchg
dec
les
repz
mov
mov
xchg
loop
push
jnp
and
ja
cli
in
mov
test
dec
mov
mov
ret
repz
sti
pop
icebp
cld
icebp
mov
ret
or
mov
je
pop
push
cmp
adc
test
xchg
insb
in
dec
testb
sarb
lahf
popa
cld
mov
mov
xchg
push
xchg
shrd
ficompl
cmpsb
pop
inc
in
lahf
push
adc
sti
dec
les
in
stc
sarl
in
sbb
lods
mov
rorl
cli
addr16
decb
and
jg
adc
jge
in
les
sub
adc
int
mov
mov
cmp
push
lds
cmc
xchg
add
stos
xchg
negb
lock
lcall
cltd
sbb
pop
mov
jb
dec
mov
mov
mov
add
pop
arpl
mov
lods
xchg
mov
sub
mov
pop
sub
lds
test
add
adc
mov
mov
push
lahf
jg
or
inc
les
dec
fcmovnu
clc
rcrl
enter
dec
pop
mov
sbb
data16
pop
add
mov
jo
je
test
and
push
aam
call
mov
repnz
jmp
pop
ds
pop
repnz
mov
icebp
mov
cmp
out
xchg
dec
test
loop
das
xlat
adc
test
mov
inc
sarb
push
sub
mov
test
pop
aas
negl
popf
dec
jns
jb
je
jp
fistps
sar
dec
scas
pop
xchg
in
shlb
mov
repnz
adc
jns
sub
inc
lock
loopne
xchg
push
gs
jle
sbb
mov
fisubrl
pop
xchg
sub
test
mov
or
mov
jg
inc
leave
outsl
dec
jl
sub
add
std
lock
sub
fdivrs
int
cli
xor
pop
nop
inc
pop
push
inc
push
js
sub
adc
dec
adc
cmp
ret
test
pop
mov
and
enter
push
pop
inc
push
sub
faddl
add
ds
cmp
popa
test
jmp
mov
cmp
cmp
pop
movsl
and
add
add
jg
cli
ret
xlat
icebp
faddl
imulb
push
lahf
cmpsb
cmp
or
in
cld
mov
insb
imul
ja
aas
or
cmpsb
cmp
pop
ret
xchg
adc
sahf
lock
mov
std
jnp
mov
xor
aad
xchg
add
rcr
ret
xor
ljmp
aaa
out
imull
lret
mov
xchg
nop
pushf
xchg
fld
xchg
lahf
lret
mov
pop
fiaddl
rclb
add
mov
pop
jp
jae
add
jl
mov
jle
pop
aam
lret
mov
je
pop
repz
mov
js
jnp
je
lret
ljmp
test
jb
subb
push
xor
xor
imulb
adc
or
nop
pushf
lock
pop
cmp
mov
fbld
aad
mov
xchg
lds
mov
cmp
add
push
xchg
clc
je
and
sbbb
stos
pop
cmpb
jne
jge
cmpb
aas
pop
int3
lods
jae
sbb
loop
pop
sub
push
add
leave
stc
inc
in
inc
outsl
pop
xchg
ja
sub
stos
xchg
pop
negl
jecxz
repnz
nop
ret
jle
jg
in
sti
mov
lahf
push
ljmp
cmp
push
mov
adc
int3
ss
push
int3
dec
repnz
inc
inc
and
sub
dec
nop
clc
inc
lock
jbe
add
shlb
outsb
and
ljmp
sbb
and
or
mov
je
mov
loopne
repz
sub
sti
les
ljmp
negb
jp
testb
push
pop
jne
mov
jecxz
dec
sbb
repz
ficoml
gs
xchg
xchg
gs
arpl
popa
xchg
xchg
xchg
xchg
mov
pop
mov
loop
inc
pop
fxam
rcrb
pop
fcomps
adc
gs
push
fcoms
push
call
push
mov
push
rclb
push
mov
lret
mov
rcrb
mov
mov
ret
aas
loopne
pop
push
in
hlt
cmp
cmp
push
cmp
popf
aaa
shlb
in
popf
subb
add
sub
mov
sub
sub
mov
int
or
movsl
and
mov
and
and
pop
xchg
sub
cli
pop
fs
and
in
jae
cmp
adc
out
fmuls
jg
ss
aam
je
test
je
dec
xchg
mov
in
mov
mov
adc
icebp
fnstsw
aaa
clc
das
adc
dec
adc
cltd
cmp
mov
xor
push
lock
adc
pushf
arpl
pop
mulb
hlt
push
add
loop
pushf
and
les
cli
pop
dec
fsts
push
or
loope
add
imul
jl
in
clc
imul
leave
inc
enter
aas
icebp
fwait
adc
jg
aam
jns
std
inc
cmp
cs
cmp
sti
xor
mov
ss
xchg
aam
cwtl
xor
movsb
sub
and
mov
in
mov
fiaddl
mov
loop
lock
lods
sti
bound
lahf
std
cmp
imul
icebp
lock
mov
xchg
push
push
aad
or
leavew
inc
lahf
xchg
sahf
loopw
or
in
sahf
xchg
mov
mov
or
pop
xchg
int
gs
out
nop
sahf
lea
xchg
lea
sbb
jae
pop
push
xchg
fwait
lcall
call
adc
and
xchg
test
xchg
lea
cmp
lds
pop
scas
cmpsl
xor
cmp
scas
sub
mov
lret
jne
iret
cmp
ds
loop
xchg
push
stc
jmp
je
sti
pop
xchg
xchg
push
mov
shr
jb
inc
jmp
repz
push
add
dec
sub
sub
je
divl
hlt
daa
cmp
or
dec
pop
xchg
push
mov
test
inc
cmp
mov
or
dec
sub
testl
xchg
or
aas
cli
shrl
mov
sub
cmc
pop
jb
push
dec
sti
fwait
in
xchg
mov
lods
cmp
imull
orb
stos
sti
jbe
dec
pop
iret
lods
cmpb
mov
cmp
enter
fmuls
xor
sar
xor
popf
xor
mov
sbb
gs
mov
in
lret
xchg
pop
outsl
iret
ficomps
fistpl
mov
jg
imul
xor
mov
daa
rcll
movsl
gs
out
adc
push
in
in
rclb
fisubs
dec
out
into
mov
fcoml
adc
insl
scas
mov
pop
aad
jmp
lahf
aaa
and
jmp
mov
test
jg
shrb
mov
mov
daa
test
into
sub
mov
out
mov
sbb
jae
fdivp
mov
push
fisubs
pop
sti
loopne
lods
lea
sub
fildl
sti
popa
incb
xor
mov
mov
xchg
xchg
outsb
fmulp
int
sahf
icebp
int
loop
xchg
xor
mov
or
mov
out
push
es
sysenter
add
in
xor
aad
sbb
repz
test
lock
adc
jmp
inc
pop
ret
repz
and
iret
lods
sahf
scas
cld
jp
outsb
ljmp
add
add
or
or
lcall
and
mov
shl
xchg
arpl
repnz
in
fmull
sahf
and
jge
mov
cld
dec
outsb
repz
fs
std
sti
movsb
mov
insl
mov
int
repz
adc
sbb
movsb
xchg
rcrl
and
hlt
mov
add
sti
pop
add
jne
negl
or
cld
mov
add
sub
add
add
stc
xchg
sub
pop
mov
rcll
shll
sbb
stc
js
mov
lret
xor
sbb
stos
scas
stc
fsubs
push
pop
in
xor
lds
mov
mov
fwait
lea
mov
fwait
xchg
lods
test
adc
std
sti
dec
dec
popl
adc
add
sub
mov
leave
or
aaa
frstor
mov
add
add
and
stc
sbb
push
sbb
push
sbb
int
aaa
dec
cwtl
pushf
scas
sbb
sbb
scas
pop
add
sti
sbb
add
imul
repz
shll
leave
mov
test
jl
fldcw
in
mov
add
sub
fistpll
out
call
xchg
aas
idiv
lahf
add
dec
gs
xchg
and
xor
gs
jl
fsubp
rclb
loopne
imul
popa
mov
je
test
imull
stc
push
jp
je
mov
mov
add
adc
pop
stos
lahf
pop
test
je
mov
rcll
cmpsl
pop
bswap
push
sub
pushf
inc
enter
cmp
je
je
mov
push
clc
add
xchg
cs
cmp
add
fcmovnb
call
iret
fsubr
jbe
sahf
mov
jl
decb
loopne
mov
jb
outsb
cli
test
add
xor
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
inc
add
call
ret
shl
mov
ret
lock
mov
and
push
sub
mov
mov
repz
pop
data16
push
xchg
std
jnp
mov
xchg
inc
loopne
push
nop
in
jns
lahf
xchg
mull
pop
jb
mov
std
lods
into
dec
scas
adc
mul
push
dec
xchg
iret
andl
test
xchg
xchg
sub
pop
jle
inc
je
test
jmp
cwtl
fiadds
adc
xchg
incb
test
dec
repz
and
aaa
dec
xchg
or
mov
push
movsl
cmpsb
enter
pop
cs
movsl
test
sahf
sbb
and
push
std
test
out
dec
cmpsb
stc
je
xlat
fimull
add
je
repz
xlat
loopne
sarl
mov
lahf
test
or
frstor
pop
idivl
adc
pop
pop
subl
jb
sbbb
sti
jbe
je
out
je
je
clc
test
inc
ljmp
pop
pop
int3
mov
push
mov
jmp
mov
add
xorb
xchg
pop
jecxz
lahf
imul
test
cmc
mov
mov
test
leave
cmp
loopne
fcomip
or
and
add
shll
out
ffree
xlat
mov
out
dec
xlat
jecxz
je
xchg
outsl
negl
and
and
cwtl
pop
adc
jl
mov
lods
mov
pop
out
sbb
enter
xchg
jmp
xchg
xlat
pop
xor
mov
cmp
mov
bswap
and
orl
add
popa
jl
jecxz
jmp
add
pop
jo
cmp
mov
fdivs
int3
or
jb
inc
pop
popl
or
lock
ds
pop
push
int3
adc
and
or
xchg
stc
mov
je
push
push
fsubrl
stc
push
cmp
lock
mov
sub
out
out
mov
repz
push
jmp
push
jmp
jg
cmpb
mov
mov
les
andl
and
outsl
popa
fdivs
jbe
scas
cli
push
fwait
xor
and
xor
dec
insb
mov
mulb
daa
adc
and
cmp
adc
arpl
enter
push
cmpl
jecxz
and
cmp
or
dec
sbb
mov
das
xchg
inc
cmp
aas
dec
out
or
sbb
dec
jno
mov
ds
scas
sub
add
in
and
and
andl
popa
cs
in
mov
enter
cli
test
cmp
subl
push
lret
cmc
push
sar
push
dec
ret
xor
out
or
cmp
jmp
test
lret
sbb
and
lods
cmc
pop
pusha
sbb
pop
js
sub
out
cmpsl
test
je
cltd
add
icebp
xchg
daa
idiv
sub
inc
lret
aas
push
push
mov
jbe
xlat
test
lock
std
test
nop
lds
test
cld
test
jmp
cwtl
mov
test
jmp
mov
test
lds
stos
jb
lods
scas
js
cmpsb
arpl
sti
xchg
pop
sbb
loop
xchg
lret
pop
jecxz
inc
jb
nop
sub
jbe
jmp
cmp
mov
repz
negb
scas
mov
add
xchg
int3
stos
push
cmp
add
inc
in
and
stc
lahf
sbb
stos
mov
sbb
pop
adc
jp
in
js
jg
repz
xchg
lods
das
mov
xchg
test
icebp
out
test
inc
jp
cld
cmp
mov
or
pop
ljmp
rcl
pop
leave
push
outsl
ret
insb
sbb
xchg
mov
push
lock
mov
cmp
or
mov
fistl
iret
out
js
fistpll
out
lret
ret
fstps
xchg
mov
divb
add
mov
mov
fisttpl
das
dec
es
fsubp
insl
adc
jge
scas
mov
in
clc
in
mov
ds
aaa
divb
repz
pop
jp
push
add
aad
enter
jb
sub
push
das
dec
je
dec
push
xchg
repnz
jmp
repz
pop
or
xchg
stc
or
mov
and
xchg
cmp
lcall
pop
stos
cld
fidivs
fiaddl
pop
push
in
cmp
and
js
fisubs
scas
rclb
in
sbb
cmpl
pop
aaa
aad
fsqrt
cli
js
pop
cwtl
pushf
sub
or
in
data16
out
adc
adc
jmp
pop
cld
mov
fdiv
xchg
mov
ret
out
outsb
xor
pop
fidivrs
pop
mov
inc
mov
inc
lcall
pop
loope
push
pop
dec
mov
adc
pop
sbb
fistpl
mov
mov
mov
ds
push
sub
lods
sbb
clc
cmpsb
jno
pop
ljmp
clc
sbb
and
aaa
sbbb
mov
lods
pop
pop
dec
rol
inc
sbbb
div
leave
pop
or
icebp
cmp
and
incl
lret
daa
shr
dec
std
cli
or
cmp
xchg
push
test
rol
vpcmpgtw
fimull
dec
sbb
fsubl
pop
clc
cwtl
mov
imul
int
nop
scas
or
inc
add
mov
scas
psubsw
or
jle
cmpsb
je
pop
sbb
push
jne
jecxz
push
outsb
aas
aas
jne
mov
jnp
cmp
cmp
push
ret
out
enter
mov
pop
insb
scas
hlt
push
out
idivl
pop
out
xor
clc
xor
loope,pt
imul
idivl
test
mov
pop
rol
jae
inc
roll
xchg
dec
pop
mov
pop
push
add
hlt
inc
push
or
dec
shufps
ffree
xchg
jmp
stc
lahf
mulb
or
cmp
cmc
add
inc
fildll
push
negb
cmc
mov
cli
inc
dec
stos
pop
je
jl
cmpsb
imul
mov
iret
not
fistpll
aas
mov
pop
dec
out
cld
or
mov
movaps
jg
imul
mov
cmc
jge
fildll
in
pop
test
aas
pop
nop
mov
stc
xchg
sub
cwtl
lret
and
out
lret
fsubp
cli
xchg
dec
fsubs
ret
push
loop
dec
fistps
ret
and
cmc
sahf
and
xchg
pop
jbe
inc
cmp
push
les
ret
cmpsb
push
dec
mov
jb
loop
les
cwtl
pop
fisttpll
jb
jmp
addr16
push
loop
ss
loop
dec
adc
push
lods
lahf
roll
cld
mov
adc
fadds
xchg
jae
pop
outsl
ljmp
leave
shrl
inc
int3
mov
fsubrl
ret
ret
inc
call
ficompl
stc
fcompl
cli
xor
popa
sbb
and
adc
push
xchg
test
sub
in
xlat
add
xchg
fadds
xchg
or
pop
repnz
out
jg
or
fs
xchg
iret
jo
mov
pushl
lahf
mov
stos
mov
sbb
das
std
dec
ficompl
scas
pop
push
ds
imul
bnd
and
nop
pop
mov
pop
outsl
cmpsb
ja
shll
daa
ja
cli
jno
lahf
jb
mov
ret
and
and
pop
jg
test
dec
cmpsl
sti
enter
shll
daa
ffree
mov
or
repz
dec
aam
repnz
repz
sahf
call
clc
sbb
imul
dec
jg
cmp
icebp
xlat
xchg
or
lret
adc
stos
adc
shlb
dec
adc
push
in
ljmp
or
lahf
test
push
mov
and
add
sbb
mov
and
lods
and
enter
push
pop
jb
xchg
add
xchg
aam
fimuls
out
sbb
pushf
jl
jnp
dec
jno
dec
dec
mov
sarl
xchg
xchg
push
cwtl
xor
rorl
ds
stos
adc
jns
push
mov
rorl
mov
cmp
cli
push
and
repz
sti
jp
aas
fistpll
clc
nop
xchg
ds
aaa
xchg
xchg
xchg
scas
lcall
mov
fists
push
mov
pop
fucomi
pop
cld
adc
jns
pop
dec
mov
jo
mov
sub
bnd
xchg
in
repz
ret
mov
rcll
lahf
out
cmp
cmpsb
pop
mov
fwait
ja
lcall
mov
repnz
jnp
nop
cwtl
push
mov
or
cmpl
mov
push
fwait
push
adc
pop
nop
mov
std
sbb
mov
mov
fstpt
js
outsl
mov
jne
cmp
pusha
mov
mov
decb
push
mov
je
stos
mov
hlt
mov
insl
pop
lcall
push
push
sarb
cmp
punpckldq
popa
mov
cld
repnz
repnz
jl
shll
icebp
pop
fucomi
in
cli
inc
mov
lahf
jmp
rcrb
pop
adc
add
out
mov
popa
adc
subl
in
mov
xchg
cmp
push
rcll
ljmp
cltd
xor
out
loopne
xchg
ljmp
pxor
pop
sbb
out
hlt
and
dec
daa
cltd
neg
movsl
mov
cmp
mov
dec
sti
std
out
push
adc
out
inc
inc
inc
pop
das
push
jbe
xchg
push
out
cmpsb
mov
ret
mov
fistl
push
clc
push
scas
mov
push
hlt
push
in
push
cs
mov
dec
push
in
dec
dec
dec
dec
cs
mov
fwait
dec
in
dec
dec
dec
inc
cs
mov
xchg
inc
in
inc
inc
inc
inc
mov
mov
push
inc
in
inc
aas
pop
ds
cmp
inc
cmp
cmp
cmp
and
aas
fistl
sub
xor
aam
ret
mov
sub
sub
sub
scas
enter
dec
and
xchg
in
pop
mov
popl
out
enter
xchg
xchg
popf
xlat
aas
and
push
adc
mov
cmp
adc
inc
pop
push
pop
or
in
fs
mov
pushw
mov
ljmp
pop
fsub
sbb
add
push
or
jmp
pusha
push
xchg
jnp
sti
into
adc
pop
sbb
out
fcmovnb
push
xchg
mov
scas
repz
push
add
mov
xchg
es
lret
inc
sti
lahf
cmp
sbb
pop
lret
xor
xor
jl
out
cmpsl
cli
mov
stos
scas
call
jge
pushf
insl
xchg
mov
mov
loop
xlat
cs
cmp
cmpsb
jmp
xchg
cmp
std
ljmp
nop
dec
fbld
pop
leavew
outsb
pop
pop
stos
jae
je
jae
jmp
lret
mov
out
je
jg
rolb
imul
ret
lahf
dec
dec
fistpll
iret
push
mov
in
insl
ljmp
jb
inc
std
lock
repnz
mov
test
ds
jg
cmp
inc
mov
mov
decl
aam
jns
adc
les
sti
xchg
addr16
data16
testw
in
mov
pop
or
test
mov
mov
imul
scas
aad
lret
add
inc
add
mov
xchg
and
std
test
lea
nop
hlt
jb
cld
xchg
add
scas
rep
ror
pop
daa
fcomip
shrl
adcl
arpl
in
repnz
in
dec
inc
mov
mov
das
jb
jge
xchg
mov
push
mov
outsl
dec
minps
mov
inc
mov
aam
jmp
shl
inc
into
cmpsb
pop
dec
cmp
jmp
mov
sbb
in
call
cmp
hlt
push
rolb
mov
jne
idivl
mov
dec
loope
mov
test
inc
add
mov
cs
jg
insl
das
scas
test
cmp
mov
pop
push
mov
insb
movsb
aam
inc
int3
or
cmpsb
mov
jle
ds
sti
cli
xchg
rcll
sub
movsl
test
fsub
xchg
add
aam
pop
sub
dec
aaa
inc
sbb
popa
adc
jecxz
cmp
xchg
ret
xchg
in
ja
aas
pop
test
push
clc
pop
bound
outsl
push
add
mov
decl
outsl
call
test
aaa
lock
mov
sbb
push
jb
iret
lods
aaa
sbb
pop
iret
jbe
out
orb
mov
fcompl
sbb
icebp
mov
subb
fmul
push
mov
jbe
call
ret
fildl
jnp
decl
jnp
std
jecxz
jmp
mov
jb
ret
sub
jb
push
ja
jp
or
jmp
stc
jp
sub
repnz
jmp
jns
negl
aam
mov
ret
xor
pop
sbb
add
outsb
ret
ljmp
maskmovq
fptan
insb
pop
out
jno
adc
scas
lods
jmp
pop
cli
fidivs
idivl
stos
and
cmp
fldcw
jl
repz
out
mov
lret
pop
jg
inc
cmc
sbbl
loope
aas
sub
and
jg
pop
stc
in
std
jbe
mov
xchg
mov
lods
aas
imul
mov
iret
cmp
add
loopne
stc
iret
cmp
lods
cmp
rcll
out
sbb
push
jg
mov
clc
sti
ret
je
int
mov
movsl
call
fcmovbe
mov
popa
jb
jns
lcall
pop
cltd
pushf
fdivl
aas
add
ds
sti
js
je
xor
mov
incb
js
cmp
iret
mov
mov
into
inc
mov
cmp
cmp
pop
jmp
add
jle
jmp
out
or
push
je
das
add
in
or
repnz
add
out
cli
jle
lcall
jae
roll
mov
lock
aaa
int3
out
std
inc
and
movsl
cmp
dec
pop
dec
push
xchg
inc
out
popf
adc
imul
jmp
cmc
leave
scas
inc
mov
pop
jno
lods
pop
mov
ret
mov
loopne
pop
jnp
mov
movsl
cmp
fcomip
sbb
jecxz
dec
divl
test
mov
lret
xchg
xchg
mov
fstpt
stc
int3
xchg
filds
jg
mov
cmpsl
ja
jle
xchg
out
test
iret
out
push
nop
sbb
mov
std
lcall
lcall
lcall
scas
xor
leave
lock
imull
mov
lock
jbe
rolb
aad
jp
push
std
xchg
pop
sbb
test
mov
loop
out
out
add
in
sbb
aas
imul
fwait
outsb
fxch
adc
xchg
xcrypt-ecb
cmpsl
mov
in
adc
xchg
mov
lret
lds
lcall
jbe
lahf
inc
test
sub
pop
gs
dec
imull
decb
cmpsl
pop
inc
and
mov
sbbl
je
stc
je
mov
and
dec
lret
iret
or
repz
test
pushl
sar
cmpsl
lds
jg
mov
or
and
fwait
mov
cli
out
fwait
andl
sahf
jg
repz
ficoml
cli
xlat
xor
cmp
stc
pause
lahf
ljmp
mov
movsb
jp
mov
dec
mulb
lock
cli
or
int
int
pop
add
pop
push
packsswb
jg
scas
mov
notb
sbb
jg
mov
in
fildl
mov
push
in
mov
in
sub
clc
sub
inc
cmp
jg
mov
pop
pushl
pop
popf
decl
fdivrp
dec
pop
fdivr
stos
adc
test
pushf
cmc
add
pop
test
mov
sahf
mov
xor
mov
xor
jg
dec
outsl
sarb
dec
inc
filds
rcr
pushf
out
pop
pushf
adc
cli
clc
ret
mov
jo
stc
call
clc
aad
jle
std
fiaddl
es
fcomps
hlt
jg
stos
popf
mov
imul
fwait
out
lcall
int
mov
std
hlt
cmpsb
push
xchg
jmp
jmp
incl
xchg
xchg
mov
cli
pop
mov
pop
sti
mov
jg
filds
dec
ret
cld
lods
lcall
mov
mov
mov
and
mov
mov
out
fcoml
idivb
in
dec
incl
pop
scas
nop
xchg
mov
cwtl
fdivrp
out
les
rol
jns
jbe
sbb
jg
incl
xchg
incl
dec
subl
cmpsb
push
nop
popl
xchg
mov
mov
jp
mov
lea
lahf
daa
mov
mov
cltd
adc
xchg
cwtl
ficoml
cmpsl
iret
std
cli
loop
adc
xchg
idiv
nop
push
lcall
sti
jp
and
jge
out
out
enter
push
mov
fidivrs
shlb
jmp
fisubrs
cmpsl
add
repnz
ret
mov
popf
cli
popa
loope
ret
lcall
sti
ficompl
jns
pop
test
and
inc
xchg
mov
popf
adcl
and
lahf
mov
jl
call
mov
pop
or
out
jb
mov
lret
lods
out
out
pop
xchg
mov
fidivs
sahf
stos
popf
in
or
push
xchg
cld
aad
cmpsb
ficompl
push
ljmp
call
fcmovu
daa
movsb
hlt
in
mov
aas
div
movsb
bound
and
sub
mov
repnz
bnd
pop
mov
out
ljmp
neg
divb
loopne
fwait
sti
out
ret
xchg
mov
xchg
cmpb
mov
xchg
push
sahf
ds
into
xchg
stos
cmp
xlat
and
sbb
cltd
xchg
outsb
test
popf
pushf
enter
les
jg
add
sbb
mov
jp
nop
fnstsw
in
xchg
loope
std
xchg
mov
dec
pusha
loop
movsl
xchg
cmp
add
xchg
inc
std
stos
cli
rorb
adc
aaa
subl
int3
mov
add
and
movsl
lock
mov
out
mov
mov
mov
insb
pusha
popf
lret
hlt
leave
or
sbb
xchg
pop
adc
jl
and
hlt
ds
std
in
xchg
shl
mov
pop
std
in
mov
jg
cli
out
call
repnz
jno
cmp
lock
fwait
addr16
ljmp
jp
out
jnp
push
inc
cli
xchg
cmp
hlt
icebp
xchg
sub
cli
ret
jno
out
mov
std
mov
xchg
xor
lods
sahf
mov
xchg
and
cmp
sbb
adc
or
insl
sbb
mov
dec
aam
dec
daa
xor
ljmp
imul
mov
aaa
lock
das
fsubl
ficompl
push
jb
fildll
jg
out
sub
cmpsb
push
cmc
incl
jo
lret
pop
ret
mov
stos
shll
add
xchg
rorl
rcrl
sarl
xor
add
rorb
rolb
inc
fyl2x
imul
iret
mov
iret
pushf
iret
insl
iret
push
iret
dec
iret
ds
jl
add
cmp
into
inc
into
adc
push
into
or
cld
int
int
ret
add
test
int
int
int
int
hlt
int3
jns
pop
int3
xchg
lret
je
nop
out
bswap
push
lret
lret
add
add
inc
lret
cs
adc
add
repz
ljmp
leave
cmp
sub
enter
str
and
adc
add
aam
mov
loopne
je
jp
add
imul
dec
xor
stc
inc
add
add
int
int3
call
lret
mov
lret
add
lret
insl
cmpsb
and
fistps
adc
test
ja
fs
pop
stos
xor
add
jbe
enter
enter
enter
enter
enter
adc
in
rol
add
add
mov
xchg
pusha
adc
lahf
lds
lret
ret
cmpsl
ret
arpl
pop
ret
adc
or
icebp
ret
pop
add
ret
es
roll
sbb
adc
mov
movsb
rcrb
dec
sarb
shlb
sbb
rolb
and
out
pop
mov
iret
loopne
mov
iret
int3
iret
ret
iret
mov
iret
jb
xor
es
and
add
add
dec
lock
jmp
into
stos
into
xchg
into
mov
je
pop
into
push
into
dec
into
cmp
sub
and
sbb
pusha
or
add
clc
int
int
int
int
int
add
int3
repnz
in
int3
in
movl
imul
ss
sub
and
add
ret
lret
cmpsl
lret
lret
xchg
ror
mov
lret
pop
lret
cli
add
add
leave
ret
leave
scas
leave
lahf
leave
xchg
leave
jg
pop
enter
pop
add
sub
and
cmc
add
sldt
mov
jo
imul
rol
leave
scas
lds
sahf
lds
std
out
jmp
add
incb
mov
test
les
push
les
add
add
cmp
sub
ffree
fadd
ret
or
cmpsb
ret
push
ret
sar
add
lret
fcmovb
mov
loopne
add
add
repnz
in
iret
xlat
iret
lret
iret
mov
stos
iret
cmp
daa
iret
sbb
adc
int3
add
cli
into
in
into
fsubp
mov
or
add
pop
int3
ret
int3
mov
movsl
int3
mov
int3
pop
int3
cs
push
int3
cli
lret
adc
add
repnz
mov
or
lret
xchg
lret
push
lret
dec
lret
xor
loope
leave
add
loop
into
aas
leave
mov
leave
movsl
leave
cltd
leave
mov
push
push
leave
dec
leave
cmp
pop
nop
add
sub
and
sbb
enter
enter
add
cli
imul
jmp
lds
les
stc
ret
insl
ret
pop
ret
nop
add
add
inc
ret
pop
ret
add
ret
ljmp
ret
sbb
ret
or
mov
pop
roll
shl
out
rcl
enter
inc
and
add
lret
out
int
int
inc
sbbb
dec
int
int3
push
int3
cmp
lret
icebp
lret
adc
push
fxch
rcrl
lret
adc
out
leave
out
fxch
mov
add
push
fs
mov
jl
jno
imul
enter
enter
add
mov
add
push
pop
push
dec
movl
and
adc
test
hlt
dec
fld
aam
leave
mov
popf
cwtl
jg
jp
outsl
cmp
add
popa
push
dec
ds
and
sbb
or
add
cli
lds
lds
andb
arpl
pop
lds
inc
lds
lds
push
push
lds
js
and
ds
mov
push
xor
ret
jp
je
pop
sbbb
ret
inc
ret
rol
shrl
xchg
sarl
shrl
and
je
add
mov
movsl
iret
jbe
cmp
xor
sub
and
sbb
adc
push
adc
sbbb
iret
push
mov
into
addr16
popa
adc
inc
into
jns
jmp
int
int
int
ficoml
xchg
pop
add
int
int
int
int
int
adc
lret
add
pop
ficompl
lret
ror
inc
lret
ror
lret
mov
cmp
add
inc
push
out
lret
xor
sub
sbb
or
repnz
enter
enter
enter
or
enter
mov
dec
cmp
xor
sub
and
mov
cltd
je
pop
movb
inc
shufps
and
mov
mov
les
mov
or
les
or
ret
lods
ret
movsl
ret
nop
ret
mov
nop
pop
adc
outsb
in
push
ret
cmp
xor
sub
adc
ret
sbb
insl
ret
pop
ret
inc
ret
in
sarl
jno
pop
jno
imulb
rcll
mov
scas
shrb
popf
rorb
jnp
cmp
shlb
and
sbb
adc
sarb
aad
test
std
pop
scas
fimull
adc
dec
pop
outsl
mov
insl
cld
add
incl
sahf
add
cmp
adc
pop
mov
xchg
inc
xchg
or
enter
inc
test
mov
inc
ljmp
enter
push
xlat
inc
jmp
inc
addl
int3
ljmp
push
std
mov
cli
shr
pushw
psadbw
loope
cwtl
cld
outsl
in
lahf
clc
lahf
mov
shld
shl
lahf
clc
pop
or
iret
cld
pop
lods
sahf
outsb
cmc
test
cmpsl
fwait
enter
incl
ljmp
jmp
pushf
cmp
dec
ds
mov
xchg
mov
clc
insl
std
and
cmpsl
cli
pop
fwait
loope
mov
into
sub
es
dec
push
cld
and
out
loopne
stos
iret
daa
test
pop
std
lods
mov
inc
or
xchg
gs
les
jg
movsl
mov
ds
rcl
enter
sub
test
cld
push
dec
mov
sub
pop
adc
xchg
aad
or
mov
push
lahf
jmp
mov
mov
fucompp
inc
pushl
push
fldenv
mov
mov
mov
aas
push
or
sahf
xchg
mov
inc
mov
nop
lcall
scas
dec
stos
lods
loopne
loopne
mov
mov
cli
xchg
lcall
mov
lods
jg
call
pop
cmpsb
cmp
cmp
or
mov
or
repz
inc
jmp
stos
dec
hlt
xchg
xchg
lock
test
adc
cmp
or
push
scas
pop
xchg
out
adc
jg
jb
or
popa
repz
inc
pushf
pop
mov
sub
sub
pop
filds
pop
mov
push
mov
xchg
lods
and
mov
sub
push
cmpsl
in
xchg
ljmp
mov
mov
leave
je
mov
dec
xchg
cmp
fwait
addr16
jl
fnstsw
push
ljmp
jecxz
push
shl
mov
out
stc
out
push
scas
stos
jb
popf
or
add
jmp
push
mov
add
add
jl
paddd
jns
or
frstor
mov
fcompl
mov
add
fdivrs
inc
clc
or
int3
and
inc
dec
loop
test
mov
sahf
pop
stc
subb
ds
mov
nop
fimuls
roll
sub
xchg
mov
out
fldcw
cmp
mov
idivb
sbb
mov
inc
or
idivl
xchg
xchg
in
in
aad
push
add
sub
add
jne
mov
sbb
sbb
sbb
leave
mov
je
lds
repnz
mov
mov
mov
fldcw
repz
das
ja
pop
push
adc
mov
sbb
cs
xor
lcall
cmpsb
mov
mov
sahf
xchg
inc
jge
leave
dec
addr16
mov
fistps
xchg
pop
ds
std
jbe
fstpl
jmp
push
sub
add
cmc
test
jecxz
adc
mov
mov
in
sbb
jmp
scas
loop
fsubl
mov
xchg
lds
dec
xchg
movsb
fmuls
leave
cwtl
movsl
mov
sbb
dec
sbb
adc
sti
int3
jb
xchg
out
arpl
jb
jecxz
in
scas
inc
insl
dec
testl
mov
ljmp
ds
pop
pop
clc
pop
xchg
xchg
xlat
mov
popf
jnp
jo
in
add
cmp
pop
test
mov
mov
into
nop
and
xlat
cmp
sbb
cmp
dec
lahf
sbb
lods
mov
jg
jo
cmc
test
jecxz
jmp
adc
test
loopne
xchg
xlat
mov
mov
jp
add
jle
fildl
ja
add
hlt
test
dec
mov
clc
in
scas
jmp
jae
jb
push
clc
sbb
movsl
ljmp
jge
fsubrs
insl
test
inc
ret
fld
testl
push
mov
out
fsubrl
mov
rol
in
push
ja
mov
mov
cli
decl
cli
out
pop
sbb
mov
jle
test
pop
insl
cld
pop
cli
stos
sbb
lret
inc
cld
stos
inc
cld
cmp
stos
shrl
std
pop
inc
inc
cltd
hlt
xchg
jmp
scas
dec
stc
dec
dec
dec
into
jmp
out
jmp
jb
loopne
fisttpll
xchg
add
push
add
inc
dec
or
pop
cld
inc
repnz
mov
test
stc
push
stos
lret
mov
push
aaa
dec
cwtl
fdivr
dec
stc
dec
add
lea
dec
add
dec
repnz
dec
hlt
dec
out
fists
cli
aaa
jnp
add
ljmp
adc
mov
sub
add
push
add
xor
lret
push
jl
xchg
sub
xchg
shll
fsubl
lcall
rolb
sti
mov
sbb
mov
ja
aam
imull
adc
in
jmp
sub
andl
lock
push
sub
mov
jnp
xchg
decl
fwait
ds
out
cs
cmp
aaa
jns
mov
xor
out
imull
mov
or
gs
jno
dec
enter
sti
faddl
ficoml
pop
mov
inc
xchg
in
das
inc
xchg
fsubrl
cld
jp
hlt
aas
enter
xchg
das
shlb
or
and
mov
aam
lcall
and
int3
adc
xchg
adc
orb
stos
dec
fadds
jb
push
ja
pop
rcll
fsubrl
out
or
xlat
fnstenv
jns
dec
jge
pop
into
sub
cmp
addr16
cli
imul
cmp
aas
clc
sub
jb
scas
cmc
xchg
mov
pop
xchg
jmp
and
sahf
in
xchg
push
daa
ljmp
shl
or
cld
sarl
loop
add
pop
sbb
cmp
cld
push
cli
jbe
jmp
aaa
mov
push
out
mov
repnz
add
gs
xchg
mov
stc
daa
daa
mov
xor
and
adc
clc
outsb
jle
sbbb
ljmp
in
cmp
mov
jbe
loopnew
mov
mov
ja
xchg
loope
mov
test
xor
jl
aas
stos
fisubrs
hlt
xchg
mov
mov
xchg
ljmp
decl
cmpsl
add
xor
sbb
lock
test
call
negl
mov
mov
dec
mov
jbe
rolb
jp
out
or
je
cmpsb
lds
mov
sti
repz
jne
xchg
out
xchg
fwait
mov
jae
fstpl
mov
dec
pop
adc
iret
lcall
pop
jle
jmp
daa
call
push
xchg
scas
cmp
aaa
jg
xchg
pop
outsl
jne
cld
sar
shll
inc
sti
mov
mov
repz
in
outsl
cmpsb
mov
rorl
cmpsl
sub
daa
sti
fdivs
repz
repnz
in
fbld
inc
fstpt
daa
lahf
filds
repz
stc
cmpsl
in
adc
fnstsw
loop
divl
out
outsl
ja
jb
jnp
lods
loop
fnstsw
adc
mov
jmp
pushf
pushf
idivb
std
mov
xchg
sub
jge
mov
mov
je
rolb
inc
in
aam
xchg
lcall
clc
dec
lcall
movsb
adc
aam
mov
icebp
je
stos
xchg
fsubl
adc
fiadds
pop
mov
sahf
out
push
and
pop
sub
xchg
fimuls
adc
mov
popa
out
ja
ljmp
xchg
testb
mov
xchg
xchg
mov
mov
insl
mov
ljmp
sub
sti
fldl
fstpt
lahf
fmuls
inc
in
dec
fucomi
neg
decl
jl
adc
int3
enter
dec
jmp
cld
inc
daa
shlb
xchg
sarb
js
xchg
xor
lret
mov
add
les
call
in
shld
sar
mov
testl
dec
ret
inc
aaa
scas
lret
lret
pop
movsb
adc
repz
xchg
hlt
into
clc
xor
sub
je
push
jbe
jl
jb
adc
repnz
repnz
fimuls
inc
scas
je
lret
or
jl
lret
data16
ljmp
jnp
pop
shlb
mov
test
daa
pushl
enter
fdivl
jnp
scas
mov
jmp
jg
insl
mov
inc
push
out
mov
call
dec
cwtl
inc
or
rorl
mov
out
jns
push
dec
hlt
mov
mov
pusha
jb
pop
in
test
cmp
mov
xchg
popfw
mov
jmp
nop
lods
iret
popf
dec
mov
fmul
je
inc
repnz
testb
push
movsl
mov
jp
ljmp
aad
mov
mov
mov
stos
outsl
cmp
cltd
xchg
pushl
in
adc
call
sti
mov
stc
pop
push
adc
cmp
std
scas
in
push
rolb
sbb
lret
lods
inc
push
aam
divb
mov
mov
add
inc
sti
adc
decb
nop
sti
pop
cmc
adc
dec
hlt
movsb
sar
fidivl
imul
cwtl
mov
and
or
mov
mov
faddl
cld
lret
popf
jmp
sbb
mov
rolb
mov
gs
cmpsl
sub
mov
inc
ss
mov
mov
xchg
enter
xchg
insb
loopne
and
and
add
in
push
mov
ljmp
adc
into
es
iret
cli
jg
pushf
and
xchg
push
jg
js
loopne
hlt
cwtl
out
add
call
cwtl
jo
in
mov
int
and
mov
mov
push
and
fwait
lock
clc
hlt
xchg
jmp
mov
xchg
jo
cmp
insl
loop
push
in
leave
or
ljmp
loopne
xchg
mov
pushf
decl
in
dec
mov
dec
push
lcall
adc
leave
test
in
cmp
test
lcall
enter
jne
push
enter
or
stos
cmc
xor
nop
stc
push
push
in
push
add
int
int
int
int3
mov
int3
lret
mov
dec
mov
lret
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
movsb
add
jb
dec
leave
enter
enter
push
add
add
cmc
mov
seto
mov
adc
cmp
xor
sub
push
lds
mov
enter
add
ret
out
ret
iret
ret
shr
sarb
stos
test
mov
mov
rcrl
rcll
rcrl
in
xlat
in
sar
xchg
scas
inc
je
lods
lcall
fildll
je
imul
fsubrl
mov
in
lods
ljmp
lods
ljmp
cs
jp
cmp
xor
mov
cmp
lods
fistl
fildll
mov
icebp
pop
aad
decb
push
mov
jae
cli
hlt
ss
stc
sub
insl
fstpl
cld
mov
jl
lahf
aaa
jne
sbb
pop
dec
repnz
xor
sbb
decl
jnp
ja
sbb
decb
cmp
inc
lock
out
shl
sbb
cs
rcrb
adc
pop
out
ja
js,pn
ret
dec
push
lock
pop
sbb
cltd
loop
pop
mov
imul
decb
insb
clc
fdivl
rcrl
mov
outsl
mov
mov
iret
jmp
in
aas
pop
dec
pop
in
cmp
cld
xor
fmuls
mov
std
idiv
jg
mov
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
