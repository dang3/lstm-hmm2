add
add
rolb
add
or
add
pusha
add
addb
add
bound
add
add
add
fadds
add
add
add
bound
add
add
add
add
add
push
add
add
roll
add
add
bound
add
add
add
loop
add
lock
subb
add
bound
add
add
add
add
add
cwtl
add
add
popa
add
adc
add
bound
add
add
add
add
add
rolb
add
popa
add
pop
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
jg
mov
mov
push
pop
mov
loop
test
roll
xchg
fists
fs
fwait
notb
insb
add
mov
xchg
xchg
xchg
mov
cmpsl
lds
sub
mov
mov
mov
mov
xchg
mov
call
fwait
movsl
xor
mov
cmp
insl
push
int3
sbb
or
pop
leave
std
jne
adcb
test
ficoms
inc
fsubrs
xor
aad
fcmovnu
push
mov
stos
push
sahf
sbb
cmc
orb
shlb
aad
xchg
mov
shrb
jp
cmp
cld
mov
adc
xchg
push
xor
mov
lcall
mov
pop
mov
sub
rolb
loopne
and
mov
and
gs
lahf
jo
jnp
cmp
repnz
rcr
je
push
clc
mov
or
arpl
and
cmp
adc
pop
es
add
adc
sbb
cs
fld
jbe
xlat
das
pop
push
jg
cmpsb
ret
mov
aad
ds
je
aad
xchg
mov
cmp
mov
hlt
repz
ljmp
ret
inc
js
xlat
adc
and
sbb
add
mov
inc
leave
mov
xor
add
adc
pop
rcrb
push
stc
movsl
lods
jnp
push
add
inc
insb
out
adc
paddd
add
out
or
dec
and
cli
mov
pop
mov
out
dec
xchg
cltd
dec
movsb
mov
inc
xchg
data16
shrb
mov
insl
xchg
add
rorl
sub
mov
lret
sbb
sub
cmpsl
jo
pop
int
jge
stc
sub
pop
push
lods
dec
gs
int
jne
mov
cli
jle
frstor
outsb
cmp
push
stos
sub
mov
sbb
nop
jmp
test
sbbb
xlat
pushf
mul
cmp
inc
and
xchg
and
imul
push
cmpsb
add
sbb
int3
push
xchg
sbb
adc
jl
arpl
ds
pop
insb
and
aam
repnz
js
sbb
add
pop
cmp
sbb
movsb
fstps
leave
rolb
mov
loop
mov
xchg
cld
inc
pusha
sbb
push
into
mov
pop
mov
xchg
in
jb
test
jnp
mov
inc
lock
imul
scas
mov
cld
pop
lahf
cld
lock
pushf
or
xchg
shll
xchg
adc
push
lahf
xchg
cmp
aam
sbb
inc
xchg
enter
push
mov
pop
lahf
in
adcb
stos
mov
gs
push
add
mov
push
sbb
mov
or
pop
pop
ret
sub
lret
and
loop
insb
push
ret
std
icebp
pusha
aas
dec
add
out
inc
pop
out
outsb
push
mov
mov
jecxz
fnstsw
mov
pop
push
adc
jne
add
daa
xor
iret
inc
shlb
pop
inc
jmp
loop
xchg
lcall
xchg
cmp
insl
stc
or
mov
shll
movsb
in
aad
jno
movsb
pop
iret
and
nop
and
mov
aam
enter
mov
pop
or
cmp
cmp
mov
in
fcomip
loope
out
mov
jg
fsubl
cmp
add
cmp
int
test
push
rcrl
int3
inc
xor
dec
sub
aas
shlb
hlt
or
aad
mov
insl
stos
into
cmpsb
adc
dec
xchg
es
pusha
dec
inc
into
enter
sub
imul
add
cld
jg
jp
mov
leave
pop
dec
fisubrs
jno
dec
fldt
dec
ret
xchg
or
fiadds
mov
push
xchg
aaa
shrl
clc
mov
int
sub
jecxz
mov
int3
fimuls
pusha
sbb
push
sbb
and
stos
cmc
in
mov
mov
xchg
jnp
push
bound
sub
mov
xchg
push
adc
lcall
cwtl
fs
lret
dec
pop
cmp
cmp
int
push
dec
xor
loop
push
dec
xchg
mull
jp
mov
ret
pop
loope
scas
inc
call
inc
rorb
insb
popa
jae
pop
data16
mov
les
xor
or
scas
cmp
js
pop
loope
cmp
and
jg
xchg
inc
idivl
push
dec
inc
and
out
inc
add
pop
pop
mov
push
outsb
mov
scas
xchg
ljmp
out
cli
push
xlat
jle
xor
bound
sbb
mov
into
lock
push
xchg
movsl
add
lock
mov
pop
mov
test
pop
mov
and
pop
mov
subl
loope
imul
sub
rolb
xchg
cli
and
aaa
jge
cltd
and
punpcklwd
fcmovu
sub
clc
cs
test
inc
loop
movsb
mov
pop
fbstp
mov
mov
clc
jp
addr16
sbb
int3
call
dec
mov
stos
int3
icebp
inc
push
lds
fsubrl
test
addr16
outsb
jae
dec
dec
and
xor
jge
mov
aas
inc
add
xchg
mov
sbbl
xor
jecxz
or
jmp
push
inc
les
jp
mov
and
fcmovb
mov
ret
icebp
fwait
loopne
nop
adc
adc
inc
ljmp
or
add
in
inc
cld
pop
js
jle
psraw
gs
or
js
fadd
aas
out
iret
add
push
jbe
pop
pop
mov
dec
mov
out
or
push
test
call
lock
adc
adcl
or
xor
cs
fildl
mov
enter
mov
scas
push
sahf
mov
mov
cmp
adc
inc
and
ror
mov
xor
cwtl
pop
outsl
lret
cs
mov
sbb
xchg
cmpsb
out
int
push
out
push
lock
cmp
add
xor
fstl
popf
insb
je
outsb
shrb
xchg
or
and
xchg
jno
cmp
adc
sarl
bswap
jb
ror
aad
sub
fistpl
push
jns
aas
jg
stos
push
in
scas
nop
in
mov
sar
les
push
lods
inc
dec
xchg
pop
or
bound
movsl
popf
aaa
cwtl
xchg
inc
movsl
mov
pop
adc
xchg
outsl
dec
cld
push
sub
sbb
or
in
xchg
repz
scas
aas
rorb
movsb
dec
and
lret
ljmp
jb
cmp
dec
je
add
jnp
inc
cmp
pusha
sbb
dec
sub
outsl
mov
fbld
addr16
ret
iret
or
pop
jae
rorl
and
jle
repnz
mov
pop
adc
xchg
stos
inc
iret
jecxz
mov
scas
and
aaa
push
aaa
inc
xchg
inc
bound
mov
mov
dec
xchg
sbb
sarb
mov
ret
daa
push
ljmp
inc
into
sub
push
in
popf
movsl
adc
lret
cmp
mov
scas
mov
fnstcw
fidivl
pop
dec
pop
pushf
mov
pop
jbe
add
test
aad
dec
jbe
sub
js
out
jle
shrb
mov
sub
pop
imul
inc
hlt
fucomi
mov
aaa
add
or
xor
sbb
hlt
mov
mov
loope
inc
loope
lea
xchg
jg
sbb
and
mov
inc
or
rcr
push
imul
push
in
roll
ja
es
int3
rorl
inc
and
shrl
mov
push
jmp
adc
pushl
je
or
add
popa
mov
cld
shrb
loop
lock
cwtl
pop
popf
jbe
leave
out
xchg
call
push
out
add
sub
push
shl
xchg
idiv
fistpll
inc
cli
faddl
fucomi
fdivp
movsl
sub
add
mov
aam
in
ss
hlt
sub
mov
das
outsb
xchg
adc
add
jb
dec
dec
mov
dec
pop
jbe
mov
iret
cld
movsb
scas
mov
enter
dec
cli
sbbb
lock
sbb
add
sti
mov
movsb
xor
inc
xor
jne
add
mov
enter
fsts
cld
mov
mov
or
stos
adc
pop
aam
sbbl
push
dec
sub
hlt
scas
sbb
add
xchg
dec
scas
and
mov
es
xor
mov
cmp
xchg
sarb
loopne
iret
insb
jno
nop
icebp
iret
cmp
addr16
bound
xchg
mov
jbe
dec
inc
sbb
popf
testl
adc
sbb
sbb
outsb
fidivrs
les
lds
adc
mov
xchg
xor
cli
test
mov
cmp
xchg
icebp
mov
mov
fildl
jbe
sub
shrb
sti
push
and
clc
repz
stos
std
jle
pop
cmpsb
push
subl
xor
dec
movsl
std
jg
or
or
sbb
adc
les
push
jg
cmp
mov
push
mov
roll
mov
mov
pop
add
mov
cwtl
mov
stos
pop
loope
add
adc
pop
and
lahf
call
pop
xor
dec
xchg
xchg
mov
das
pusha
dec
fldenv
and
rorl
dec
inc
add
dec
je
sbb
test
pop
push
pop
out
cmp
mov
jne
ret
mov
and
dec
mov
xor
jne
xchg
data16
sarl
and
lret
subl
xchg
repnz
les
add
outsl
pop
jge
inc
iret
xchg
ret
push
bound
outsb
jns
sti
pop
mov
pop
xchg
mov
in
dec
xchg
cli
sbb
adc
jle
popw
xor
dec
scas
jne
ds
jnp
aas
cmp
dec
into
aas
jae
push
dec
xor
add
ss
sub
jae
jbe
out
mov
or
adc
push
sub
or
cmp
xor
outsl
and
cli
leave
or
pusha
sub
sbb
lcall
push
fnstenv
jne
repz
or
jp
mov
movsl
lds
jnp
xchg
push
addr16
leave
cmpsb
loop
push
ja
push
ja
ja
inc
mov
lcall
lcall
repnz
testb
mov
xchg
dec
or
sbb
pop
push
mov
jmp
lahf
fs
cmp
lds
jge
lret
push
add
bound
outsb
inc
andb
xor
loope
and
scas
and
sub
push
stc
jge
or
cmpsl
pop
pushf
xchg
fwait
adc
dec
shlb
pop
outsl
enter
hlt
xchg
mov
sbb
xchg
dec
cwtl
daa
addr16
pusha
jge
pop
xchg
fnstenv
into
push
out
inc
mov
xlat
sub
nop
xchg
lods
dec
aad
stc
nop
mov
xchg
push
dec
mov
ss
call
stos
add
movsl
testb
jne
in
or
mov
sbb
mov
and
inc
mov
outsl
roll
push
push
sub
inc
movsb
cwtl
mov
ja
lret
je
lretw
sub
jne
out
mov
clc
jno
enter
aad
fcoms
pop
enter
sbb
into
push
in
leave
xchg
movsl
jecxz
mov
vpsadbw
into
pushf
call
les
jl
stos
pop
cmc
dec
xor
lcall
cmp
inc
xchg
xlat
or
test
lcall
mov
xchg
lahf
pop
fnstenv
icebp
cltd
pusha
loope
sarb
pop
push
daa
cmp
dec
mov
stos
mulb
xchg
xor
aad
jl
ss
hlt
xor
mov
add
sbb
clc
pop
pop
js
into
scas
cmp
in
cs
lcall
pop
rcrl
jbe
xor
and
hlt
inc
in
lods
jge
push
stc
fxch
data16
xor
pop
inc
mov
xchg
mov
fildll
enter
xchg
mov
add
loopne
repz
negb
jge
stos
adc
inc
mov
xor
mov
loopne
and
out
int
xor
in
in
pop
loopne
es
in
push
out
sbb
dec
mov
cmc
lcall
mov
adc
cmpsl
addr16
sbb
mov
adc
lret
js
shlb
pop
scas
out
lahf
push
repnz
ror
push
aad
mov
adc
mov
adc
inc
scas
pop
mov
dec
ret
inc
sti
push
into
in
push
stos
dec
xor
push
adc
lahf
sbb
movsl
imul
mov
or
repz
mov
ljmp
lret
jp
sarl
lock
xlat
addb
popa
jl
sbb
xor
sbbb
sub
cmpb
cmp
inc
jmp
mov
mov
insl
jnp
mov
sub
leave
xchg
xchg
lcall
inc
xor
cmp
cmp
imul
push
dec
mov
mov
mov
ljmp
setge
aaa
loopne
push
xchg
mov
inc
mov
jo
testb
pusha
dec
jmp
push
leave
push
and
shll
stc
xchg
int3
mov
adc
mov
pop
sbb
dec
mov
rorb
xchg
icebp
sub
inc
and
sahf
dec
mov
add
mov
movsl
test
test
dec
jb
or
mov
pop
mov
mov
cmc
jge
movsl
mov
cmp
xor
nop
and
inc
mov
or
xchg
daa
lcall
dec
fisubrs
jae
jo
test
lcall
xchg
cmp
mov
rol
fucompp
add
dec
sbb
sbb
jno
xchg
in
cmp
push
dec
cwtl
and
dec
and
xchg
es
mov
jg
jno
or
jge
mov
jg
stos
cmpsb
pop
repz
adc
jmp
roll
and
pushf
imul
popa
scas
scas
addl
xor
lods
cmpsb
sub
cvtps2pi
xchg
cmp
stos
adc
int3
dec
imul
in
jno
mov
mov
popa
jg
jne
je
outsl
push
loope
pop
ror
jns
mov
std
je
shlb
add
xchg
test
stos
lcall
jno
fldenv
ja
sub
push
notb
mov
inc
loope
sahf
daa
and
pop
std
xchg
in
int3
inc
xchg
out
into
sub
es
ja
jle
pop
shll
jp
ss
stos
lock
mov
stos
or
lret
mov
loope
ljmp
mov
lods
inc
push
mov
shrb
pop
jp
loopne
insl
add
push
lods
loopne
mov
fnstenv
xor
fists
mov
push
jns
xor
pop
xchg
movsb
out
sub
mov
mov
iret
sub
lods
test
shrl
push
xchg
sbb
pop
xchg
push
scas
inc
repz
pop
es
xchg
gs
test
xor
add
mov
hlt
aas
les
mov
adc
lods
and
andb
mov
out
loopne
jle
fsts
or
lods
pop
push
fisttpll
xchg
shl
add
sbb
adc
push
mov
lods
mov
shr
xchg
popa
scas
xor
cmc
popa
aas
mov
pop
lret
push
xlat
xor
test
rcll
test
scas
xorb
cld
cmp
stc
sbb
in
testl
add
cmc
adc
mov
cs
mov
lahf
lret
inc
cmc
jecxz
xor
test
or
add
mov
mov
jge
stc
into
sub
stos
jb
stos
and
cli
test
bound
pop
dec
pop
test
sbb
sbbb
xchg
fcmovbe
sub
mov
cmpsb
adc
sub
mov
insl
in
jne
mov
movsl
sub
cli
arpl
push
pop
dec
adc
std
cmp
scas
test
mov
jp
scas
inc
push
movsl
movsb
dec
xchg
mov
sbb
or
xchg
stos
repnz
cltd
or
roll
flds
rolb
dec
jecxz
and
sub
jge
aaa
xor
ss
loope
jp
adc
aad
test
and
mov
mov
negl
cmp
arpl
xchg
cmp
sbb
outsb
xchg
cmpsb
xor
mov
pop
jl
ror
cmp
sbb
lds
xchg
sbb
sbb
mov
mov
arpl
adc
shll
lds
push
mov
std
repz
push
adc
stc
fstpl
cli
out
mov
ss
cwtl
sub
xchg
inc
in
aam
sarb
adc
mov
test
or
les
xchg
inc
lods
outsb
jbe
lods
stc
repz
sub
sub
jns
ficomps
pop
mov
mov
inc
popa
inc
jns
sub
icebp
add
pop
cmpsl
out
std
pop
push
mov
add
or
lods
mov
xchg
in
sahf
sarl
nop
cmp
and
pop
add
pop
stc
xchg
and
shr
sbb
mov
femms
cmp
and
lret
jbe
imul
out
or
andl
jbe
mov
sbb
xor
jns
jge
outsb
fmul
mov
fsubrs
sysexit
sbb
repz
fisubl
ja
and
dec
mov
lods
mov
outsb
mov
push
mov
adc
imul
cltd
andb
push
push
sbb
mov
jmp
add
movsb
lret
iret
je,pt
movsl
divb
push
add
or
add
push
inc
mov
fwait
inc
jns
inc
enter
jmp
clc
rolb
notb
ret
ds
imul
outsl
jae
sub
mov
jne
pop
ret
fdivrp
and
inc
loop
jnp
jbe
push
mov
in
push
mov
mov
or
adc
inc
adc
add
popf
push
test
insl
pop
and
es
xor
jb
cmp
dec
and
xorl
fsubl
fdivrs
test
adc
test
insb
sub
mov
into
aaa
xchg
fs
sbb
mov
andb
jp
and
jbe
loopne
or
sbb
imul
sbb
les
gs
pop
repnz
mov
mov
daa
sbb
mov
stos
sbb
adc
jl
and
or
sub
sbb
enter
add
in
pushf
xor
subb
aad
xchg
repz
or
repnz
stc
dec
fistpl
xor
cmp
test
add
stc
cmp
repz
jb
xchg
popf
lock
xchg
mov
mov
cli
jmp
lahf
push
inc
incl
xor
pop
pusha
add
divb
daa
shll
add
mov
imul
mov
or
cmc
add
push
mov
sahf
push
data16
mov
imul
cmpsl
pop
fldl
fs
lret
int
adc
xor
mov
inc
push
std
movsl
cmpsl
xchg
cltd
sub
lock
in
mov
scas
dec
fcoms
inc
adc
pop
xor
mov
ja
xlat
cmc
cmp
int
xlat
jbe
sar
repz
jbe
jg
in
sub
mov
cld
and
fdivl
out
iret
xor
fs
push
flds
dec
or
movsb
shlb
cmp
push
inc
or
cmp
shl
add
mov
mov
inc
or
lcall
xchg
sub
mov
cmp
lock
sbb
xor
adc
ror
mov
or
loopne
adc
xor
popf
cmpsb
arpl
dec
or
push
cmp
jmp
jb
je
push
data16
inc
jmp
jo
inc
jbe
fildll
fidivl
mov
out
sahf
aam
mov
aad
pushl
mov
or
mov
cmp
or
inc
adc
push
nop
dec
jp
ds
addr16
xchg
push
xchg
subl
ret
sbb
mov
jge
mov
pop
sub
dec
push
xchg
stc
dec
sbb
jle
test
stos
clc
sarb
push
in
pop
idivl
pop
xor
sbb
lock
mov
or
cmpsb
scas
mov
xchg
fs
mov
jmp
add
in
test
jle
sarl
xor
xchg
lds
push
mov
pop
sub
test
or
popa
xor
mov
std
adc
and
xlat
xor
mov
mov
aam
or
sub
aas
push
data16
jns
xchg
rcl
push
rolb
lahf
or
je,pt
mov
outsb
push
pop
inc
jl
jl
icebp
popf
rcr
insl
push
in
jl
adc
cltd
movsb
vfnmaddss
loope
jno
bound
subb
adc
ret
jns
out
mov
or
out
sbb
scas
push
mov
mov
sbb
cwtl
arpl
inc
and
add
jl
stos
ljmp
jno
mov
jg,pt
out
ds
fstpt
pop
sub
ss
pusha
fdivl
lods
out
inc
mov
adc
popa
jne
enter
or
aaa
mov
test
in
jge
out
cmc
fcoms
cmpsl
test
pop
mov
and
clc
test
and
pop
mov
cmp
mov
out
stc
sbb
insl
push
lret
adc
push
mov
clc
jl
jle
adcl
inc
ficompl
and
scas
test
mov
lods
stc
fmull
movsl
pop
adc
inc
mov
rorb
push
das
mov
mov
push
push
mov
inc
andb
jns
scas
stos
or
rcrb
hlt
push
stos
rorb
dec
jl
cmp
pusha
push
ss
dec
jge
test
cmpsl
and
mov
xor
push
and
and
test
outsl
mov
scas
jb
insb
stc
jle
jno
cmp
xchg
pop
ss
cmp
mov
and
lret
repnz
inc
inc
rorb
mov
mov
fists
bound
mov
pop
inc
mov
imul
add
in
pop
xlat
mov
cmp
pop
push
aas
pop
dec
dec
rcrl
pop
sub
push
pop
sbb
frstor
pop
dec
cmc
flds
or
cmp
imul
mov
adc
repnz
mov
scas
inc
stos
stos
xor
add
mov
xchg
repz
out
add
stc
andb
bound
daa
adc
icebp
push
xor
push
popl
es
cli
xor
or
mov
lret
bound
xchg
xor
jp
mov
outsb
popf
scas
jb
inc
fcoms
cmp
scas
je
arpl
or
cmpsb
push
push
aad
cmc
xorl
adc
mov
cmp
rcll
das
loopne
cmp
or
pop
push
out
push
imul
jbe
out
hlt
or
sub
div
inc
push
dec
leave
inc
or
jae
pop
jne
xor
mov
pop
xlat
add
mul
cld
int3
mov
stc
cmp
xlat
inc
adc
cmpsl
cmp
aas
inc
bound
adc
outsb
fdecstp
mov
xor
into
fistps
push
push
insb
pop
cltd
lret
pop
in
js
mov
aas
xor
jns
mov
fwait
inc
sbb
and
dec
pop
test
lahf
es
fsubrl
data16
loopne
mov
shll
adc
xor
inc
sbb
cltd
movsl
inc
lret
outsl
jo
sbb
lods
rcrb
sub
add
jge
pop
sahf
pop
mov
pop
jle
pop
int
and
sti
sub
fimuls
ret
xchg
xor
addr16
clc
std
push
popa
les
jle
inc
fsts
dec
loope
cmp
outsl
jbe
cltd
pushf
insb
mov
xchg
fcomip
mov
dec
push
sbbb
inc
outsb
or
pop
mov
inc
add
fcoms
insl
jo
test
pop
mov
cmc
nop
loop
divb
cmp
ja
add
pusha
xchg
mov
add
jmp
dec
xor
stc
add
pop
decl
cmpsb
xchg
mov
mov
lahf
decb
cltd
pop
and
pop
jno
rol
mov
adc
cmc
je
lods
les
lret
push
repnz
xor
push
cmc
inc
in
push
jecxz
rcr
add
loopne
bound
pop
movsb
push
xorb
pop
in
pop
out
pop
movsb
lods
jmp
icebp
pop
xchg
and
mov
and
inc
add
jg
sub
sub
jnp
out
scas
cmp
imul
and
addr16
inc
jl
mov
sarl
inc
mov
push
mov
xor
fistpl
push
mov
adc
and
mov
jecxz
cli
mov
aam
dec
hlt
mov
clc
pop
cs
repz
test
into
lea
mov
es
inc
jecxz
xchg
ficompl
test
dec
dec
in
loopne
push
cltd
stos
clc
leave
or
jp
div
adc
stc
lds
lcall
test
mov
das
in
adc
or
sub
jle
sub
mov
test
mov
sbb
mov
or
jecxz
or
test
mov
testb
bound
jge
dec
rorb
dec
mov
and
out
xor
fstps
jae
in
sti
inc
push
cs
hlt
in
aad
in
xchg
and
les
dec
sahf
mov
sbb
sbb
in
xchg
daa
leave
sti
fmull
adc
ror
jl
popa
push
pop
loope
lods
call
sbb
js
outsl
jns
add
push
pop
sbb
pop
push
aad
adc
sbb
xorb
test
lea
xor
jns
and
or
push
or
fstps
jmp
mov
xchg
cltd
cmp
xchg
jle
fisubrs
stos
adcb
mov
push
jecxz
lcall
sbb
add
dec
ret
jg
add
adc
addr16
imul
cld
shll
mov
repnz
fwait
popa
sub
jno
out
adc
out
scas
into
hlt
inc
jae
pop
repnz
dec
or
aad
rol
dec
lds
stos
or
aam
imul
lahf
sub
or
mov
scas
es
pushf
mov
mov
mov
imulb
movsb
lahf
sbb
mov
js
pop
cld
fcoml
enter
test
pusha
cs
aad
mov
idivb
sub
and
lahf
popa
pop
mov
push
and
nop
shl
aaa
repz
std
mov
mov
xchg
dec
sbb
jns
movsl
adc
pop
stos
aaa
ss
ret
fwait
mov
repz
xor
sub
push
lahf
push
pusha
cmp
push
xchg
hlt
iret
jecxz
sub
cmp
jne
daa
mov
or
subps
add
jnp
jno
enter
add
adcb
dec
mov
push
xor
iret
std
inc
dec
push
cwtl
sbb
sub
mov
inc
sub
in
leave
jp
shll
mov
dec
iret
and
or
test
fwait
mov
iret
fistpl
inc
ja
push
jg
xor
in
lods
dec
jo
out
cmp
pop
jg
rcr
xor
insb
cs
pop
pop
mov
add
scas
push
jp
mov
inc
mov
xchg
mov
sub
nop
loope
jmp
in
in
mov
add
xlat
sbb
pusha
sbb
mov
pop
push
sub
mov
xor
and
div
movsb
or
imul
xchg
hlt
addb
or
xchg
mov
scas
dec
add
jl
adc
ja
dec
xchg
test
in
loop
dec
pop
mov
addr16
mov
pop
scas
mov
sti
test
sbb
cmp
clc
sub
or
sub
test
mov
or
add
add
adc
shlb
xor
sub
lea
or
and
orb
dec
cmp
call
shll
mov
sub
loope
or
mov
lods
inc
fwait
mov
inc
add
mov
mov
pop
out
cld
imul
adc
loopne
and
sub
mov
jbe
add
push
sbb
test
pop
and
cmp
pop
insb
dec
test
cld
stos
cmpsb
ja
push
int
iret
xchg
cmp
cwtl
xor
cmp
std
jge
jp
xchg
xorb
inc
adc
xchg
das
insl
push
clc
push
pop
xor
dec
inc
leave
sbb
ret
imul
fwait
jb
test
push
pop
fadds
mov
leave
icebp
sbb
xchg
jp
into
dec
or
xchg
bswap
hlt
jle
cmpsb
jge
fwait
ja
mov
xor
jo
scas
lret
les
lcall
clc
jmp
fisubrs
dec
and
lods
nop
or
and
xor
xchg
shll
arpl
mov
scas
popf
ss
fdivrs
and
pop
cltd
lds
sub
and
jl
mov
pusha
jae
mov
inc
int
push
add
xlat
xor
cmp
into
int
repz
ja
sub
push
ret
or
loop
fmuls
out
xor
or
dec
inc
mov
int
push
stos
outsl
push
inc
ljmp
loope
pushf
jp
add
and
xchg
push
cmp
mov
pusha
pop
jns
idivb
dec
jo
pop
sub
adc
bound
stos
lods
ss
mov
pop
out
imul
push
aad
repz
mov
add
int
call
xlat
lds
jge
adc
hlt
adc
int3
push
aas
inc
repz
dec
push
mov
and
lods
mov
sti
mov
push
icebp
in
or
mov
test
inc
dec
popa
inc
sub
add
xchg
inc
or
rolb
pop
add
pop
xchg
xor
fisubrs
push
xchg
imul
and
in
mov
repnz
lock
stos
mov
rorl
test
jb
pop
cmc
das
mov
jg
or
or
int
cmc
hlt
xor
cs
fstl
cmp
pop
mov
mov
adc
sub
mov
fucom
jle
mov
xor
pop
xor
adcb
xchg
es
scas
mov
insl
inc
aaa
js
cmp
adc
dec
push
mov
shlb
inc
add
lods
add
cmpb
leave
enter
sbb
inc
insl
pop
cltd
sub
fsubr
xchg
jmp
mov
les
mov
adc
in
add
and
mulb
inc
push
mov
sub
les
addr16
mov
scas
fnstcw
pop
mul
or
sub
dec
mov
adc
cmp
cs
push
jb
sahf
xor
cmp
popf
mov
out
test
gs
int
sahf
pop
mov
scas
negb
sbb
loope
jae
adc
mov
mov
xchg
cwtl
sti
xor
inc
jo
je
add
sbb
ret
jg
sbb
push
jne
lret
in
test
bound
ret
jno
scas
jmp
xchg
subb
pop
jb
lods
pop
stos
add
and
inc
stc
push
stc
ffreep
hlt
int
mov
and
adc
popf
xorl
test
lods
mov
add
pushf
popf
pop
xor
and
stc
insb
ret
aad
insb
pop
sub
mov
sub
fldt
and
iret
jo
dec
lea
cmp
sub
mov
xchg
imul
xchg
mov
dec
js
mov
jp
or
gs
insl
xorb
aad
add
xor
aas
shlb
negb
or
xchg
sahf
mov
xorb
push
cmp
hlt
inc
and
jle
jns
jb
dec
lods
dec
clc
in
in
outsb
call
xchg
cmp
xchg
clc
rcr
push
sub
insb
pushf
sbbb
xbegin
int3
cmp
stos
jo
repnz
out
push
pusha
ss
or
mov
push
adc
mov
shll
or
sbb
aas
mov
xchg
outsl
les
push
cmpsb
pop
loop
fbstp
scas
or
out
sub
shlb
mov
xchg
sub
add
cmp
popf
lods
data16
pop
sub
filds
popf
int
in
add
push
mov
test
or
jp
fiadds
add
ss
call
adc
stos
gs
lret
hlt
mov
addl
or
push
inc
rolb
jae
and
je
in
test
sbb
jg
dec
push
lret
hlt
fcoms
and
icebp
rcl
psrld
mov
adc
mov
jb
xor
ja
push
mov
mov
dec
jno
into
repz
ret
mov
imul
mov
ljmp
pop
sahf
shlb
inc
in
or
aas
aad
addr16
xor
xchg
ljmp
nop
js
insl
movsb
in
cld
movsb
or
in
push
stos
mov
push
push
adc
jbe
test
and
adc
jno
sbb
test
divb
xchg
inc
jns
sub
pop
in
sub
stc
lds
and
push
adc
adc
ret
aad
lea
xchg
xor
ss
fnstsw
fs
push
in
xchg
adc
in
cltd
aas
pop
and
xchg
pop
xor
mov
xchg
mov
push
mov
sub
ret
loope
test
dec
int
int
ret
add
popf
or
pop
rclb
inc
test
mov
imul
and
std
mov
mov
adc
pop
and
or
out
fidivrl
rcrb
add
pop
fidivrs
jno
insl
cmpsl
cmpsl
sbb
shr
sbb
cltd
cmpsb
fisttpl
adc
shl
inc
dec
mov
add
mov
pop
out
inc
pushf
nop
cwtl
mov
push
fcompl
lods
hlt
jge
and
cli
loopne
icebp
cmp
or
xlat
divb
lods
bnd
ds
ss
jbe
push
push
ret
sbb
cli
insl
inc
cltd
shll
pop
mov
inc
cli
xchg
lahf
cmp
in
inc
test
movsl
btc
mov
icebp
pop
mov
ljmp
std
or
cmc
jb
push
jb
cmp
and
inc
mov
int
dec
inc
add
sahf
jb
and
mov
shrb
loopne
push
fidivrl
push
mov
jmp
clc
jle
dec
sbb
xchg
push
add
sub
mov
leave
and
sarl
push
shlb
shrl
sbb
jne
and
test
and
mov
mov
add
cmovs
xlat
cmpsb
and
xor
adc
int
fcomip
aaa
mov
std
pop
into
lea
stos
mov
mov
dec
mov
xchg
jl
xorl
and
aaa
out
cld
push
mov
and
pop
dec
fisttpl
orb
mov
sbb
stos
mov
daa
rolb
imul
fs
adc
fwait
mov
jle
mov
dec
cmpl
lods
mov
adc
rcrb
mov
jmp
xchg
call
shlb
negb
pop
outsb
into
xor
inc
aam
das
push
cmpb
add
inc
dec
pop
sti
or
aam
dec
xor
jb
mov
and
lahf
mov
test
dec
lea
adc
mov
testb
sti
push
mov
lret
das
pop
dec
jmp
inc
sbb
mov
addr16
sub
xor
js
je
inc
xor
movsb
in
jb
mov
setle
pop
xchg
pop
adc
adc
loope
out
imul
je
cmp
pop
add
or
fidivrl
jae
roll
leave
dec
fadds
testb
shll
fs
pusha
ja
cmp
aaa
nop
jo
test
jl
jnp
push
je
mov
mov
mov
push
aaa
out
push
mov
in
lahf
int
mov
inc
leave
in
and
andb
cmpsl
jne
sahf
inc
icebp
es
adc
bnd
jmp
movsb
or
adc
mov
jmp
adc
cmp
pop
or
jns
sub
mov
xor
mov
adc
mov
icebp
cwtl
outsl
in
lea
cmc
dec
mov
leave
lahf
aam
sub
mov
and
cli
bound
aas
adc
mov
mov
fs
out
mov
mov
jecxz
fisttpl
mov
inc
fistps
xchg
cmc
jle
or
pusha
aaa
pop
mov
int3
and
js
or
cli
ljmp
sbb
out
xchg
fsts
pop
mov
ja
lret
mov
pop
cmp
cmp
inc
mov
dec
jp
or
gs
pop
xchg
jle
jge
shll
xorb
fcomps
inc
or
vpsraw
fwait
daa
add
aad
dec
ss
jae
fstp
push
aad
dec
mov
sbb
inc
push
test
and
cmp
pop
jno
push
jge
inc
lock
js
cli
addl
insl
fisubs
adc
rorl
imulb
sbb
rol
dec
and
mov
icebp
test
mov
and
ret
cmp
out
std
jns
jle
cmc
scas
orl
and
or
imul
shr
xchg
xchg
sbb
cs
mov
adc
pop
bound
pop
add
arpl
cmpl
pushf
sbb
sti
cs
cs
js
ljmp
or
jb
rcl
movsl
cmp
mov
out
jp
mov
movsb
pop
jl
sbb
addl
les
das
cmpsb
stc
testb
popa
cmp
popa
sub
jo
xchg
xor
inc
adc
xchg
sub
mov
clc
push
mov
mov
jne
push
outsl
shll
jb
push
movzwl
mov
push
cmp
in
jmp
sbb
popf
pop
ja
testl
mov
fmuls
out
testb
push
jg
fs
mov
lods
sub
enter
sub
pop
mov
jmp
add
out
sar
cli
mov
or
scas
or
pop
pop
fs
shlb
and
inc
or
stos
hlt
lcall
jmp
or
jl
inc
push
lods
mov
gs
jns
pcmpeqb
sarb
pop
movsb
lahf
pushf
es
fcomps
mov
lahf
xlat
out
in
push
jae
jp
jge
mov
and
mov
push
and
aam
or
shll
or
push
aam
aam
fdiv
movsl
inc
pop
pop
inc
aad
xchg
adc
jp
pop
push
pop
out
outsl
inc
pop
orb
add
add
pop
pushf
bnd
arpl
in
ret
dec
xor
sbb
and
jle
pop
pushf
aam
mov
mov
outsb
sub
cmp
jmp
lahf
xor
movsb
imul
xor
movsl
arpl
add
clc
fs
imul
pop
mov
ret
es
aas
ljmp
cmp
push
jae
sbb
fdiv
xlat
insb
mov
cli
cmp
clc
imul
movsl
data16
loop
fdivrl
add
sbb
push
aad
or
mov
test
leave
push
mov
inc
xchg
jns
sub
mov
icebp
addr16
icebp
xor
in
cmpsl
add
xor
cli
rcrb
mov
gs
inc
imul
push
push
jno
gs
pushf
fnstsw
movsb
dec
mov
xor
lcall
les
sub
out
mov
push
ficomps
outsl
xlat
cmp
fcos
dec
xor
sub
sbb
ret
roll
lahf
je
push
mov
lock
inc
cmp
test
in
jnp
ja
inc
xchg
ds
xchg
rcrb
adc
test
fs
push
cmp
xchg
push
jl
lods
sbb
add
xor
push
jae
push
ret
icebp
lea
outsl
stos
mov
je
repz
mov
sbb
xchg
jnp
sbb
xchg
inc
cmp
push
lods
inc
scas
mov
push
xchg
call
pusha
sub
lock
clc
push
jb
aam
js
popf
pop
jbe
outsl
ljmp
push
inc
and
scas
sub
fmul
pop
push
push
mov
cwtl
pusha
inc
ja
push
jmp
cltd
push
lahf
mov
ja
inc
pop
or
mov
cwtl
ret
loop
fnstsw
daa
push
les
pop
mov
lcall
mov
mov
sbb
imul
push
sbb
fisubrs
mov
loop
cmc
pop
leave
cwtl
add
add
inc
or
cmpsl
je
std
std
jnp
xchg
rolb
xor
call
imul
push
cld
and
xor
xchg
repz
mov
inc
xchg
mov
mov
mov
jg
xlat
aam
fsts
or
pop
test
cltd
mov
xchg
arpl
xchg
pushf
mov
push
js
sti
aad
test
or
jle
add
in
test
pop
sub
jle
add
add
lret
outsb
dec
jns
cli
je
cmp
jle
cmc
adc
xor
inc
inc
gs
add
add
and
mov
jp
js
pop
xor
out
fisubrl
shll
push
sarb
icebp
pop
insb
lods
mov
and
test
jns
mov
mov
jnp
pop
jle
add
aaa
cmp
sbb
mov
into
sbb
fisubs
mov
xor
fdivs
ficoms
cmp
push
push
clc
sahf
addps
or
mov
add
mov
push
hlt
fnstsw
sub
xchg
cmp
out
pop
and
lret
mov
sub
xlat
and
bound
and
sbb
pop
xor
sarl
sbb
cmpsl
fbld
jecxz
shlb
sbb
pop
xorb
adc
test
fldcw
enter
hlt
and
out
fwait
dec
cmp
ja
sbb
fwait
loopne
movsb
cltd
loope
bound
clc
add
aaa
not
push
fcoms
insl
dec
pop
sbb
dec
inc
daa
std
xchg
pop
iret
mov
jne
js
out
jno
inc
and
mov
fisubrs
push
sti
testb
pop
xor
les
pusha
insb
lahf
cmp
lods
mov
shlb
or
mov
and
mov
mov
mov
cmp
mov
mov
mov
popa
int3
in
add
notb
scas
mov
and
dec
daa
cwtl
push
icebp
sti
inc
hlt
in
pop
sbb
xchg
inc
pop
add
inc
jo
imul
insb
cld
shlb
popl
sbb
or
push
mov
push
jns
arpl
inc
in
mov
stos
pop
push
jmp
xor
dec
lahf
push
pop
and
xchg
ja
lock
dec
test
and
leave
push
and
xor
in
lods
orl
dec
lahf
pop
cmpb
pop
test
loopne
movsb
in
cli
je
adc
jno
pop
jns
cwtl
and
cwtl
xchg
test
push
mov
push
mov
jmp
and
adc
scas
add
cmpsl
jo
dec
nop
and
xlat
add
push
push
flds
push
sbb
sub
lds
pop
pop
imul
push
xor
hlt
xchg
aam
std
fimull
push
dec
idivl
xrelease
bound
loop
into
in
mov
dec
or
lret
mov
sub
imul
scas
test
repz
mov
lods
les
mov
sbbb
test
das
fisttps
mov
push
cltd
mov
pop
cmpsb
ljmp
fcomi
or
ret
stos
inc
mov
dec
xor
cli
je
outsl
jg
lods
jns
xchg
cmp
adc
shl
cmp
pop
int3
out
lcall
in
push
xor
cmp
and
jl
dec
lret
xor
push
xchg
push
mov
popl
pop
lds
cmp
mov
and
mov
cmp
js
out
rorl
pushf
mov
testl
inc
into
xor
jecxz
pushf
mov
call
pushf
add
outsl
sub
fnstsw
sbb
pop
pop
adc
pop
testl
push
xor
js
jmp
inc
jb
clc
shrl
popa
fiaddl
xchg
xor
sub
add
push
mov
test
sub
xchg
or
je
filds
inc
mov
ss
daa
mov
push
mov
xor
xchg
sahf
xor
out
arpl
mov
or
cmpsb
inc
adc
mull
or
and
xchg
repz
test
and
fildl
xchg
jbe
faddl
arpl
shll
movsb
je
lahf
lock
not
outsl
and
adc
or
les
adc
ret
outsb
cmp
repz
mov
mov
scas
sub
mov
mov
push
push
cld
push
sti
adc
loope
sub
xchg
mov
sti
dec
push
js
out
jae
dec
lea
iret
fs
js
mov
test
fdivrl
fdivrl
lds
mov
sub
sti
imul
mov
cmp
addr16
sbb
dec
popf
lods
lcall
fistps
push
pop
sbb
and
dec
mov
es
or
sub
push
pusha
mul
mov
xchg
cmp
pop
mov
adcl
imul
js
les
fwait
xor
fldl
shr
cmp
repnz
adc
fwait
stos
repz
or
bnd
cmp
push
inc
adc
mov
mov
mov
icebp
jb
cmp
xchg
nop
xor
and
subl
fsubr
sbb
and
pop
out
mov
mov
push
pop
addr16
fdivl
pop
push
out
pop
ror
repz
sahf
adc
les
subb
std
dec
lods
mov
sbbb
pop
testb
mov
popf
inc
sub
aad
rcrb
mov
sbbb
lock
mov
inc
pop
stos
jecxz
scas
idiv
xchg
and
xchg
cwtl
fnstenv
cmp
mov
or
cmp
mull
adc
jae
mov
adc
icebp
mov
xor
add
inc
cs
subps
mov
jo
xor
movsb
in
hlt
mov
jecxz
movb
scas
sbb
push
ret
insb
push
mov
stos
out
mov
rolb
data16
faddl
push
adc
push
adc
add
mov
jne
xor
mov
inc
xorb
mov
addr16
sbb
repz
dec
cli
aaa
rolb
shll
daa
aaa
sub
test
out
daa
and
xchg
repnz
and
dec
mov
out
data16
lock
pop
test
in
fcompl
ss
push
in
jmp
fnsetpm(287
mov
inc
xchg
fstpl
out
arpl
cmp
pop
mov
xchg
repnz
xlat
loop
mov
or
cld
lcall
lahf
cmp
imul
insl
imul
inc
mov
insb
pop
std
xchg
rclb
xchg
in
pop
mov
jns
jle
int3
add
iret
rolb
mov
push
cmpsb
in
and
inc
gs
mov
jle
pop
arpl
int3
test
test
jbe
leave
rcl
push
mov
cli
cmpb
hlt
push
std
jae
pop
daa
lods
movsb
insl
sub
pushf
or
cwtl
xor
repz
rep
std
mov
add
and
jnp
cmp
or
push
mov
jg
sti
test
cmpsb
mov
dec
adc
adc
mov
push
inc
ret
push
stos
jmp
cmpsw
inc
mov
push
xchg
mov
pop
xor
xchg
out
lods
add
ljmp
orl
add
sub
inc
xlat
ret
mov
pop
lret
pop
add
sub
sbb
outsl
aaa
cmpsb
test
mov
cmpsl
mov
pop
fs
mov
rcrb
repnz
adc
adc
dec
push
mov
rorb
outsw
rorl
movsb
add
fldl
arpl
mov
jbe
push
cs
xor
cmp
cmp
sbb
outsb
sbb
xchg
mov
xor
ficompl
jno
xchg
test
int3
into
cmp
push
fmull
inc
dec
jle
arpl
scas
lds
xor
or
inc
scas
cld
jo
xlat
js
bound
or
nop
or
lods
pushf
stos
in
fnsave
dec
scas
sub
in
fs
inc
mov
call
mov
xor
adc
aam
pop
sub
ret
and
mov
sbb
int3
inc
mov
add
mov
pop
in
pop
mov
les
stos
add
mov
fs
lret
enter
inc
jnp
js
mov
sbb
xor
push
pop
cmp
int
pop
push
aaa
js
stc
xchg
dec
ret
out
out
xor
pop
setg
movsb
fnstcw
arpl
sub
int
lods
jge
arpl
popf
in
sbb
push
pop
sub
dec
mov
in
lods
popf
jne
sbb
jg
test
push
fcompp
mov
cwtl
ret
imul
pusha
movsl
ds
fs
jp
xchg
nop
push
mov
aam
mov
mov
mov
mov
jl
dec
imul
dec
dec
adc
es
sub
lahf
ret
scas
xor
and
orb
ljmp
jecxz
jle
js
add
pushf
in
jge
daa
ja
inc
lods
out
push
call
and
and
cmp
imul
sub
sbb
fsubl
xor
cmp
adc
mov
push
shl
cmp
loop
cmp
cmp
int3
adc
push
and
mov
xor
jae
movsl
popa
inc
bound
jecxz
and
mov
je
bound
mov
jecxz
sbb
and
mov
cmp
popf
jg
mov
jge
ljmp
push
sub
push
jns
xchg
pop
nop
inc
in
pushf
sbb
lret
dec
lods
xor
cs
dec
push
fidivrs
xor
adc
out
adc
xor
mov
mov
outsl
adc
aas
cwtl
xchg
int
sub
pop
cmp
jae
adc
pop
insl
pop
clc
shrb
jg
pop
in
mov
mov
push
or
pop
pop
dec
jecxz
mov
mov
lods
mov
movsl
lret
cmp
cmp
leave
adc
enter
sub
sub
xchg
pop
je
push
ja
decb
cld
xchg
sub
decb
xlat
cltd
pop
sahf
or
insl
or
add
push
jae
mov
push
fisttpll
jno
aas
mov
xor
outsl
pop
cmp
fmuls
gs
xlat
cmp
mov
mov
hlt
adc
cs
loop
inc
dec
ja
xor
outsl
xchg
push
cmp
jno
sti
dec
adc
sub
mov
iret
add
leave
gs
pop
inc
xchg
shll
imul
test
orps
inc
or
mov
std
pop
imulb
std
and
lret
inc
adc
mov
jns
cmp
ljmp
sbb
add
jbe
cld
arpl
in
mov
sbbb
cmc
xor
xor
imul
scas
sbb
inc
xchg
push
push
push
cltd
jle
cmp
xchg
dec
jecxz
movsb
ret
sub
push
lret
jg
push
adc
lea
pop
cmovns
xor
int3
pop
jnp
cmp
mov
push
pushf
enter
scas
pop
xor
mov
jmp
xchg
add
sti
mov
xor
cmovo
ret
imul
sarb
push
xor
mov
sbb
adc
rcr
enter
inc
mov
jmp
push
mov
mov
sub
jbe
sarb
loope
xor
mov
fmull
aam
pop
xchg
push
xor
xchg
xchg
mov
xor
mov
dec
sbb
and
inc
mov
xor
std
sbb
sbb
xor
cmc
test
mov
add
pop
icebp
movsl
fwait
pop
cwtl
aas
sbb
xchg
test
in
pusha
jne
data16
imul
cmp
or
ret
outsl
pop
pop
xlat
jo
and
fistpll
imulb
mov
sub
mov
je
inc
or
inc
mov
fstps
cli
movsl
stos
inc
bound
out
pop
sbb
mov
cmpsl
and
jo
mov
loop
sbb
cmp
popfw
imul
and
sub
or
push
sub
pushf
dec
bound
sahf
xor
mov
shlb
add
mov
dec
aam
push
int
jg
push
leave
jns
sub
outsb
cmp
push
lea
push
leave
jnp
aad
fcmovnbe
xor
push
xor
fstps
aaa
test
pop
mov
aas
dec
sbb
xor
add
scas
lret
aaa
xor
jge
and
xchg
inc
lea
sub
push
mov
xchg
mov
jmp
mov
or
add
xlat
shrl
in
mulb
decl
lock
pop
std
icebp
cmpsb
sub
arpl
cmp
mov
cltd
or
push
mov
sub
xor
cmpl
mov
repz
out
leave
sbb
loope
jae
pop
fdivs
or
mov
add
call
rolb
or
xchg
lods
ds
pop
movsl
dec
dec
aas
dec
decb
js
push
sbb
negb
adc
out
js
cwtl
mov
ljmp
mov
cmp
lcall
cmp
cmp
sub
xlat
pop
fcoms
aaa
inc
sub
inc
and
out
les
dec
xchg
sbb
sub
jp
and
xchg
out
mov
lea
dec
mov
cmp
out
mov
jge
loopne
inc
test
je
in
add
orl
pop
repnz
je
nop
inc
hlt
nop
xchg
imul
push
ja
cmp
out
dec
ret
xchg
xlat
pop
mov
imul
negb
jmp
sahf
shlb
jle
jno
ljmp
pop
popf
mov
movsb
lds
add
lahf
les
xchg
push
lods
ucomiss
out
mov
pop
push
fcoms
pop
push
scas
fwait
jns
adc
lcall
pop
es
xor
cmp
rcrl
and
jle
imul
ret
enter
xchg
add
jb
test
or
dec
pop
mov
and
outsl
and
gs
cmp
mov
repz
daa
sbb
ja
xor
sarl
pop
pop
jne
pop
dec
inc
jmp
leave
adcl
lcall
pop
mov
push
xchg
cmp
out
repnz
jle
insl
call
sub
and
xchg
push
insl
mov
pop
ss
addr16
and
mov
push
adc
lret
cmpsb
dec
std
mov
jno
sub
gs
subb
dec
testl
jmp
or
push
cmpsl
and
cmp
pushf
out
ret
cmp
divl
repz
jl
jno
jmp
jne
fimull
pop
movl
jmp
xor
test
mov
add
negb
sub
ds
pop
and
jg
sub
push
cmp
and
dec
mov
add
pop
mov
jbe
xor
dec
mov
sub
sbbb
jl
push
lods
filds
jo
jb
in
adc
aaa
hlt
mov
hlt
fdivl
adc
lret
aas
push
sti
mov
inc
mov
mov
sbb
adc
test
repnz
das
dec
lea
cmp
xor
push
addr16
into
enter
xchg
iret
popa
arpl
push
add
mov
inc
in
mov
sti
jge
es
test
cmpsb
xor
mov
stc
cli
mov
sub
push
inc
mov
sub
jp
sub
xlat
xchg
loopne
cmp
cwtl
jnp
stos
in
mov
cmp
adc
inc
cmp
gs
ret
mull
insl
shlb
mov
es
int
aaa
add
cmp
xchg
out
lea
adc
cmp
or
add
jns
xor
addr16
dec
outsb
movsl
mov
and
pop
or
outsb
dec
test
orl
les
jle
push
xchg
loop
sti
and
push
cs
xchg
mov
adc
pop
xlat
jo
fidivrs
lock
js
xor
lahf
inc
adc
in
push
sbb
loopne
mov
cmp
dec
call
mov
mov
jbe
das
inc
cmpl
xor
movsl
push
std
cmpsl
sub
popf
sbb
sub
ret
cmpsb
or
push
lcall
add
or
dec
cmp
push
xchg
or
ret
pop
push
jbe
or
lods
int
mov
xor
out
packsswb
aaa
ja
cli
mov
punpckldq
jg
or
mov
mov
shlb
lock
adc
pop
lock
jno
daa
push
mov
ja
jp
ja
mov
sbbb
sbb
xchg
aad
sahf
icebp
mov
dec
xlat
dec
xor
nop
fwait
mov
sbb
sbb
push
xchg
imul
ljmp
aad
xchg
not
dec
testl
xchg
icebp
mov
outsb
pop
out
int3
repz
cmp
xor
mov
cltd
add
mov
cmc
shr
dec
or
addl
ror
es
push
mov
xor
stos
loope
js
mov
push
add
popa
out
pop
mov
mov
jg
mov
xor
adc
inc
leave
pop
xchg
cmpsl
imul
jns
or
and
xchg
push
fs
xor
shr
sub
jl
negl
cli
push
test
loope
or
inc
mov
jp
imul
in
pop
mov
scas
mov
std
call
loope
pop
cmp
cwtl
das
lret
pop
xorl
loop
ja
pop
lods
push
jb
push
cmp
out
sbb
jns
andb
daa
push
out
sbb
mov
mov
data16
lock
lcall
jne
adc
mov
sub
lds
mov
mov
fnstsw
pop
xchg
adc
push
xor
out
test
add
jmp
js
cli
jle
cs
adc
jecxz
dec
mov
or
mov
push
ret
xor
add
rcrb
xor
cmp
popf
stos
call
push
test
adc
xchg
cltd
mov
sahf
movsl
and
fwait
data16
sub
pusha
inc
in
dec
sub
jmp
cld
es
xchg
pushf
adc
test
push
js
push
sahf
xor
rcl
shl
aam
movsl
cmpb
imul
loop
mov
cltd
jne
fneni(8087
jno
or
xor
into
inc
dec
pusha
lcall
outsl
lock
loop
clc
rorb
aam
sbb
jbe
ja
cmova
js
in
dec
rol
loop
hlt
xchg
jae
sub
pop
loopne
dec
dec
mov
and
pop
sti
dec
out
repz
dec
divl
push
or
out
dec
pop
in
aam
push
pusha
push
xor
cli
add
testl
mov
lods
inc
test
sti
mov
leave
adc
into
scas
pop
mov
sarb
and
adc
jae
test
jle
and
push
and
cmp
sub
insl
or
out
jbe
add
inc
pop
stos
pop
lods
mov
sub
pop
jo
xor
sub
enter
xor
lods
decb
es
xor
inc
xchg
mov
cmp
mov
mov
add
test
mov
pushf
and
push
sub
cmp
add
repz
inc
sarl
sti
jnp
enter
push
adc
jl
cmp
mov
sub
cmp
and
test
mov
stc
fwait
addr16
cwtl
push
cmpsb
jg
xchg
shlb
popf
pop
sub
int3
or
sub
xchg
jecxz
sub
je
sub
xchg
cmc
sub
scas
imul
xchg
xchg
icebp
mov
mov
and
loop
cmpsl
add
adc
xor
mov
pop
mov
adc
cmpsb
test
cmp
xchg
push
popa
inc
stos
iret
insb
or
jp
push
jb
pop
pop
xor
add
stos
xorb
fisubs
pusha
insl
sub
outsl
jmp
and
movsl
mov
pop
xchg
int
test
out
or
fwait
mov
mov
xchg
insl
pop
jnp
cmp
je
mov
jmp
rcr
fsubrs
out
xchg
hlt
and
cmp
jge
mov
pop
and
icebp
mov
hlt
dec
lea
lds
in
jmp
aas
call
stos
lods
mov
out
jo
cmp
xor
jns
lods
div
fucomip
dec
adc
cmp
mov
mov
sarb
and
pop
je
push
test
mov
sbbl
pop
inc
and
ja
pop
loop
jne
xorl
or
pushf
in
pop
pop
xchg
lahf
cs
je
cmc
movsl
mov
test
mov
ret
pushf
dec
outsb
jge
cmp
sbb
push
in
clc
adc
pop
xor
sbb
push
sbb
scas
pop
sub
je
repz
sub
xor
cmpsl
mov
movsl
fmull
jmp
daa
lock
cmc
in
mov
decb
cmp
fidivl
dec
cmp
jns
cmp
xchg
inc
ja
cmpsb
shl
jmp
les
ret
push
fnstcw
lods
pop
push
out
add
movsb
scas
das
pusha
rcrl
inc
inc
jae
push
xchg
inc
mov
xor
sub
mov
xchg
movsl
aaa
lcall
pop
pushf
mov
mov
daa
frstor
pmulhw
ret
gs
adc
test
call
negb
or
jecxz
dec
jecxz
or
cwtl
aad
sub
aad
pop
mov
push
arpl
jns
dec
pop
int
cwtl
pop
js
dec
jo
sarb
imul
adc
adc
cmp
mov
mov
sbb
movsl
add
out
xor
push
es
iret
or
push
insl
cmp
sbb
clc
cld
sbb
mov
push
mov
lock
pop
js
stc
jae
sub
ds
dec
add
scas
ljmp
int
sti
dec
jp
sub
in
rolb
loope
aam
jecxz
int3
call
pop
mov
pop
xchg
dec
push
xchg
add
in
jmp
jns
push
inc
repnz
pop
addl
dec
xlat
mov
pop
sbb
xor
mov
xor
test
pop
out
dec
sarl
gs
int3
cmp
movsb
xor
sarl
jno
jmp
adc
xchg
sub
shlb
addr16
std
cmp
popa
repnz
cwtl
shlb
or
sbb
or
mov
movl
mov
paddd
insl
inc
rcr
rorl
in
aad
mov
jnp
cld
aaa
fildll
and
mov
cmc
jbe
call
sahf
adc
or
push
xor
ret
xchg
adc
cmp
dec
and
pop
lea
or
daa
inc
scas
mov
mov
cmp
out
cmp
imul
adc
rclb
out
sbb
mov
outsb
mov
movsb
dec
mov
lret
jge
sbb
pop
jecxz
ja
mov
jb
jmp
cs
xchg
imul
lods
jne
out
cmp
imull
jne
stc
add
add
mov
adcb
mov
cmp
repz
cmpsb
test
xor
nop
xorb
pop
insb
or
inc
cmp
aam
mov
dec
test
ljmp
nop
sbb
xchg
sarl
pop
scas
cmp
clc
test
push
clc
fxch
sbb
hlt
fidivrs
std
add
mov
outsl
movsb
add
fisubl
das
test
lahf
in
filds
inc
fsubs
aad
adc
fmull
repz
push
or
xorl
outsb
fcmovbe
adc
cli
cmc
je
sub
and
fiaddl
out
mov
adc
xor
popf
das
out
mov
push
les
sbb
or
fst
dec
in
inc
lock
dec
and
mov
mov
fdivl
sbb
lock
sbb
lock
rcrb
loopne
or
push
mov
je
mov
xlat
pop
in
fsub
into
push
inc
mov
mov
adc
and
inc
jge
sub
sub
add
in
sbb
mov
jmp
scas
and
aad
or
aad
lret
aam
stos
add
cli
test
cmp
jb
add
sti
and
outsl
add
adc
insb
cld
bound
xchg
imul
fnstsw
fdivrp
mov
xor
sbb
inc
or
cmp
push
xchg
insl
pop
jno
sbb
sub
mov
xchg
fnsave
jl
pop
aam
out
into
idivb
xor
xlat
mov
cmp
in
xchg
cmp
popw
mov
nop
pop
out
stos
stos
jae
lds
call
insl
sbb
mov
mov
bound
sahf
cmpl
adc
pop
fimuls
cmp
add
xchg
inc
and
fbld
aaa
cmpsl
shlb
mov
mov
je
jo
mov
psrad
sbb
lahf
push
xchg
dec
insl
cld
mov
mov
rcr
xchg
insl
int
loop
mov
sbbb
mov
xor
lret
jle
cmp
add
adc
push
xlat
lret
cmp
mov
mov
jmp
mov
sbb
mov
mov
mov
mov
pop
mov
dec
mov
jg
iret
decl
xor
lock
cmp
push
loop
pop
xor
lret
ret
fwait
push
mov
or
aas
xor
add
mov
mov
inc
movsb
cmp
push
xchg
mulb
dec
cwtl
jecxz
negl
push
sub
push
in
mov
dec
pop
inc
and
mov
insl
pushl
pop
cmp
push
pop
into
out
inc
and
mov
adc
xchg
sbb
repz
mov
imul
mov
push
popa
xor
cltd
jae
fsubs
test
dec
mov
pop
outsl
inc
fistl
mov
mov
mov
add
mov
xchg
mov
inc
mov
arpl
stc
cmp
pop
mov
sub
test
or
adc
imul
das
lods
sahf
stos
adc
sarl
or
adc
sbb
imull
jbe
flds
lods
into
mov
test
cltd
cmpsb
mov
outsb
jmp
js
test
scas
enter
and
cmpsb
mov
xor
jno
addb
mov
inc
aas
lahf
fdivrl
dec
mov
cmp
pop
insb
or
cmpsl
xor
mov
repnz
imul
and
jbe
mov
test
test
adc
enter
sbb
aas
xchg
testl
es
fcmovnb
push
xor
adc
or
add
xchg
pusha
les
sbb
lds
mov
fbld
dec
movb
call
mov
mov
and
aaa
add
dec
out
cmc
push
or
ret
leave
je
xor
xadd
or
add
ret
adc
pusha
mov
pop
add
jb
fidivs
mov
scas
addl
jo
add
cli
stc
adc
mov
mov
jae
mov
in
pop
stc
lds
mov
aam
pop
pusha
jmp
push
adc
inc
test
aaa
add
push
push
pop
xor
jmp
cmp
flds
pop
stc
leave
inc
cmpb
xchg
add
or
fidivs
cmpsb
popa
inc
movsb
jne
dec
inc
lret
ret
pop
xor
insl
ficoms
fildl
xchg
das
and
cld
push
add
mov
adc
mov
mov
mov
sbb
stc
enter
in
inc
incb
fs
pop
lcall
andb
addr16
pop
loopne
inc
cmp
add
or
inc
sub
data16
jne
jp
mov
dec
push
mov
fiaddl
mov
bound
insl
pop
in
cwtl
push
inc
ror
adc
jns
mov
push
rcrb
stos
scas
jno
inc
add
out
inc
or
test
popa
les
js
call
mov
push
sbb
push
sub
repnz
rolb
pop
dec
test
mov
das
mov
insl
dec
or
movsl
pop
and
lret
cmp
mov
into
lret
dec
sub
scas
mov
loop
push
xchg
sbb
dec
xor
fsubl
je
in
push
adc
or
xchg
or
pop
pop
sbb
mov
sub
imul
cmp
push
xchg
into
push
sbb
into
cmc
lret
data16
mov
shll
cmp
sub
in
pop
popl
repnz
jae
icebp
icebp
shr
pop
mov
cwtl
jecxz
neg
add
in
cli
sub
popf
aas
mov
push
adc
movsl
mov
pop
mov
xchg
aam
bound
push
and
sbb
mov
push
fnsave
cmp
repnz
sub
imul
fistps
testl
repnz
in
aas
fisubrs
lods
mov
les
xor
jge
mov
loope
rcll
xchg
test
xchg
dec
shll
sub
xor
mov
out
lods
mov
aam
es
rorb
pop
push
pop
pusha
outsl
pushf
dec
sub
data16
jl
jae
jbe
arpl
xchg
mov
lock
jns
jnp
lock
enter
inc
out
in
xchg
inc
push
dec
ds
jb
xor
subl
das
cmp
sti
enter
mov
dec
pop
rol
xchg
je
pop
pop
test
and
xchg
mov
loop
xchg
ficoml
pop
in
push
push
aad
dec
mov
movsl
arpl
pop
cmpsb
ja
aaa
jns
push
add
add
inc
jl
sbb
inc
fwait
sbb
xchg
nop
add
lahf
pop
out
inc
out
sub
add
jne
mov
jmp
xchg
shrb
add
jns
xor
sti
sub
and
out
jnp
lea
and
xor
pop
xchg
inc
add
test
cmpsl
inc
js
dec
ss
rcll
insl
adc
cmp
mov
fisubl
sbb
test
pop
push
mov
cltd
push
lods
dec
jp
test
emms
jecxz
icebp
je
mov
push
sub
add
test
cmc
inc
push
pop
mov
add
andl
cvtpi2ps
inc
pusha
popf
adc
cmpsb
and
div
add
pop
push
xchg
xchg
inc
push
shl
loopne
fisttps
outsb
int3
stc
inc
mov
je
stos
pop
push
fisttps
lods
out
pop
mov
test
test
in
xlat
mov
xchg
adc
dec
les
fnstenv
cmpsb
inc
pop
fmul
pop
clc
inc
ljmp
cli
in
repnz
sahf
mov
pop
or
cli
mov
and
ficoml
mov
clc
js
mov
mov
dec
outsl
leave
lahf
xchg
dec
xchg
add
jg
xchg
add
sarb
push
xor
pushf
inc
xchg
lds
sti
mov
sbb
lds
xchg
scas
enter
add
loope
fbstp
mov
add
shll
rclb
cmp
rcrl
mulb
cwtl
enter
or
mov
jecxz
jne
fsubl
sub
outsb
bound
xchg
stos
xchg
std
daa
jge
jne
jae
cmpsl
js
xor
sub
xchg
shlb
call
scas
in
dec
push
add
sbb
mov
andb
mov
add
insb
in
test
add
fisubs
and
out
fcom
lret
push
xor
stos
mov
into
imul
cld
jo
lret
adc
lahf
push
mov
and
xor
ss
sub
adc
mov
xlat
mov
daa
pop
ljmp
sub
xor
lret
push
sub
pusha
in
sub
test
pop
jnp
mov
cmpsb
scas
jle
mov
mov
add
sbb
add
push
shrl
xor
mov
inc
or
divl
lret
or
je
push
mov
jp
cltd
movsl
jnp
xchg
push
xchg
data16
out
in
out
jge
loop
mov
mov
out
call
jo
mov
dec
repz
pop
mov
int3
testl
pop
pop
mov
cmpb
sbb
push
mov
push
and
push
mov
mov
movsb
jbe
call
add
xchg
outsl
xchg
jl
and
cmc
loopne
adc
xor
arpl
out
dec
aas
jge
mov
out
lock
mov
fwait
daa
movzbl
xlat
ja
mov
inc
or
cmpsb
pop
mov
jb
xor
lret
xor
lea
dec
sub
mov
jbe
and
aaa
mov
test
movsl
or
dec
notb
jns
fisubrs
jbe
test
push
jnp
pop
ret
inc
stc
mov
pop
mov
dec
dec
jle
add
mov
test
ljmp
in
mov
scas
fidivs
sahf
das
fwait
mov
mov
xchg
in
mov
fs
stc
cmp
sub
lret
mov
cmp
sahf
sbb
testb
xor
add
mov
push
jns
int3
xor
ret
inc
mov
aad
rcll
mov
ja
in
push
adcl
mov
mov
jne
mov
rcll
in
and
adc
sub
stc
int
mov
push
aas
test
aam
push
mov
add
mov
mov
ret
pop
sahf
call
pop
mov
mov
jbe
mov
or
in
adc
pop
adc
sub
mov
or
and
inc
dec
adc
repnz
adc
cli
push
out
jnp
das
lods
adc
fcmovnu
shl
pushf
int
lret
xchg
mov
adc
xor
mov
mulb
daa
mov
inc
rcr
idiv
ret
es
xchg
mov
hlt
inc
mov
jge
mov
jge
daa
jp
jecxz
jo
mov
scas
jnp
mov
xchg
cmp
rolb
and
movsb
and
mov
aam
enter
and
or
inc
push
adc
ds
push
dec
cmpb
adc
je
nop
pusha
cmp
call
mov
mov
fdivl
stc
lret
dec
sbb
hlt
mov
fnstcw
push
or
cmpsl
mov
xchg
or
fstps
sti
xchg
std
mov
int3
sub
lret
jp
nop
cmc
jecxz
add
push
sar
sub
loope
pop
in
xchg
fistpll
and
sbb
lea
sarb
pop
fiaddl
add
xor
fimuls
sarl
popf
das
inc
push
cwtl
cmp
mov
and
dec
call
test
iret
outsb
rol
scas
call
stc
testl
ret
lret
lds
and
inc
lds
push
sti
aaa
scas
stos
push
mov
push
dec
lods
es
dec
out
inc
leave
repnz
fs
cltd
sbb
xchg
xlat
push
shrb
dec
jle
shll
int
cmp
cmp
pushf
add
bound
outsb
adc
add
xchg
test
mov
jmp
pop
mov
loop
inc
adc
and
lods
and
cmp
cs
or
pusha
fsubs
add
jne
aaa
inc
mov
mov
cmp
sti
test
jnp
mov
sahf
cs
mov
pslld
cmp
xor
inc
pop
lret
add
add
lcall
add
add
adc
pcmpeqb
loop
xor
add
xorb
xchg
or
hlt
mov
stos
or
and
test
lcall
mov
sbb
push
sarl
sub
into
jo
fs
sub
lahf
inc
or
add
adc
leave
ljmp
xchg
mov
int3
lock
aam
inc
imul
fisubrl
sarl
or
mov
mov
outsb
ljmp
push
pusha
call
inc
repnz
jl
das
outsb
pop
gs
lds
in
sti
or
xchg
repz
mov
mov
add
inc
inc
dec
inc
mov
mov
xorl
push
fs
fmull
int
insb
cmpsl
adc
jmp
push
xchg
cmp
jbe
fisubrs
repz
mov
sbb
jno
pushf
cs
mov
pushf
dec
aaa
and
pusha
inc
push
test
or
pop
cmp
inc
xchg
xchg
push
xchg
mov
repnz
andl
aaa
cmp
and
fs
pushf
mov
mov
xchg
movsb
bnd
add
lods
dec
xchg
int3
js
les
and
sub
jmp
push
xchg
jno
addb
sahf
repz
pop
movsb
inc
mov
ljmp
inc
repz
stos
inc
xchg
fwait
mov
dec
sbb
ss
mov
leave
adc
xor
iret
test
push
in
and
aas
pop
sahf
xor
loope
repz
shl
negb
loope
inc
pushf
jo
xchg
and
add
pop
push
loopne
or
iret
cmp
out
out
lds
mov
lock
dec
in
mov
scas
push
xor
addb
enter
or
mov
push
inc
std
andb
pop
js
cld
mov
in
adc
xchg
cmp
aad
mov
cs
rol
xlat
int
pop
movsb
or
sub
inc
mov
jne
mov
fldt
les
mov
fdivrs
ret
cmp
fsubl
sbb
loope
loop
push
loopne
push
lods
mov
aad
in
int3
push
cmpsl
xchg
ret
cli
cltd
std
dec
mov
outsl
out
movsl
xchg
popa
xchg
or
push
sub
xchg
inc
sbb
add
ja
add
iret
adc
pop
ljmp
jne
std
xchg
and
outsb
outsl
int
xor
or
stc
ds
jle
xor
in
cs
mov
adc
out
mov
lret
cmp
pop
or
das
pop
lret
cs
jmp
sahf
mov
mov
out
imul
pop
add
aas
fisubs
aas
lds
lock
fnstcw
xlat
inc
xor
loop
jnp
xchg
pop
cmp
or
mov
mov
add
out
jmp
ja,pt
mov
mov
insb
push
mov
push
dec
xor
mov
or
jle
or
shl
das
aam
ret
push
repz
pop
sbb
test
or
stos
xchg
mov
xor
or
lods
mov
sti
stos
and
adc
mov
sbbl
pop
xor
adc
and
or
jmp
mov
push
adc
test
out
inc
in
mov
fs
adc
sbb
dec
lret
stc
or
je
and
aas
cld
push
sti
les
movsl
aad
std
and
cmp
outsl
rclb
test
sub
sub
stos
enter
stos
sub
or
xchg
popf
or
push
fwait
ljmp
dec
scas
mov
sub
and
insb
cmp
mov
xchg
sbb
dec
inc
imul
popa
sub
mov
icebp
sbbb
and
cmp
jbe
adc
ficompl
and
pop
push
lods
movsl
pop
cli
in
shlb
jnp
mov
push
jno
lret
or
lret
sbb
fdivrp
adc
pop
jns
jno
ret
cmp
in
pushf
sbb
push
popl
cmc
loop
push
jnp
outsl
les
ret
mov
xor
inc
das
sahf
xchg
cli
cmp
mov
adc
out
push
movsl
push
leave
pop
mov
mov
int3
popa
addr16
outsb
inc
or
xlat
inc
popa
cmpsb
mov
rol
rolb
mov
cmp
push
inc
sarl
push
xchg
mov
mov
gs
lds
loopne
lds
jnp
mov
push
loope
sub
call
aas
test
pop
jne
sbb
sbb
lret
push
ja
xorb
jo
loope
xchg
xchg
dec
scas
xor
sub
sbb
dec
xchg
jmp
adc
mov
mov
cld
inc
push
cmp
mov
aaa
push
sub
push
dec
dec
scas
pop
add
rcrl
idivl
data16
xor
mov
pop
addr16
lds
cmp
mov
lret
outsl
sarl
out
mov
pop
cmp
nop
mov
fisttpl
inc
push
nop
inc
in
adc
jecxz
imul
aas
adc
dec
lret
push
xchg
sub
dec
fwait
dec
jecxz
je
jge
jl
xchg
movsl
cltd
out
adc
ljmp
adc
pushf
pop
mov
mov
std
adc
movsl
ljmp
mov
xchg
or
dec
fistps
fidivrl
xchg
loope
int
gs
add
in
inc
loop
inc
nop
std
movsl
enter
imull
rcrl
jae
out
mov
outsl
std
pop
nop
rcrb
push
fistl
jbe
mov
lock
sbb
jnp
sbb
dec
inc
sbb
mov
loope
inc
movsl
sbb
pop
clc
shlb
cmp
andb
cmpsb
scas
jnp
jno
sbb
adc
cmp
xlat
gs
imul
mov
pop
jae
mov
fldenv
xor
inc
jecxz
mov
test
inc
xlat
push
cmp
sbb
lods
lcall
out
sbb
cmpsb
or
cli
add
aas
pop
in
insb
push
or
push
sub
and
sbb
push
popf
jno
gs
adc
test
xor
mov
fmulp
sub
out
sbb
hlt
jnp
mov
fisttpll
and
add
fwait
mov
addr16
push
and
sub
sub
mov
pop
out
popf
jae
dec
stos
mov
xchg
inc
ret
rcl
push
dec
cli
call
xchg
inc
push
popa
push
test
mov
popa
push
or
in
movsb
xchg
fsubrl
mov
cmova
jmp
ds
psraw
push
cwtl
mov
fucomi
cmpsl
jge
cmp
sahf
push
mov
int
icebp
aam
xor
pop
mov
ljmp
mov
inc
pop
cmp
sub
inc
fcoml
push
cmp
inc
aaa
cmpsl
outsl
sub
push
mov
cli
push
cwtl
inc
lea
lcall
loopne
push
jmp
xorl
cmp
iret
loopne
insb
decb
add
xchg
enter
inc
lret
jbe
sbb
lcall
in
movsl
arpl
bnd
faddl
pop
sub
inc
mov
sub
das
sbb
sbb
jo
hlt
scas
clc
push
in
fwait
jns
adc
or
cmp
jp
sti
out
aas
xor
aam
lods
push
inc
mov
popf
sbb
mov
lods
inc
sub
inc
inc
lea
out
jnp
mov
pop
mov
mov
icebp
repz
clc
test
lret
sub
or
mov
and
add
je
ss
fs
jno
xor
xlat
or
mov
mov
mov
inc
pop
mov
sti
xchg
imul
sti
jbe
mov
testl
xor
aad
inc
xor
out
inc
push
aam
std
outsb
inc
jecxz
fildl
dec
ds
adc
nop
into
push
insb
leave
push
scas
sbb
add
push
jne
sub
cltd
movsb
call
iret
mov
xor
pushf
aam
icebp
ja
jecxz
mov
mov
cmp
sbb
shlb
and
push
and
xor
pop
adc
and
mov
mov
or
dec
shlb
mov
adc
hlt
xchg
mov
cwtl
xor
push
adc
inc
ds
jge
fldcw
aad
insl
dec
mov
mov
daa
loopne
shrl
icebp
jge
sub
movsl
repz
enter
mov
lds
sbb
arpl
jl
push
fsubl
sar
ljmp
aaa
xchg
sti
mov
mov
scas
pop
aaa
xor
cld
stos
add
call
loop
pop
adc
pop
xor
xchg
ja
push
jmp
dec
les
jle
scas
mov
clc
fstps
je
or
mov
lret
inc
sarb
xchg
add
xchg
movsb
xor
out
mov
call
xchg
ret
fcmove
pop
xor
lods
pushf
push
in
out
ja
fists
mov
mov
ljmp
jl
mov
test
xchg
xchg
xchg
inc
imul
xchg
add
scas
mov
pop
out
aam
outsl
or
jmp
sub
xchg
orb
mov
in
fmuls
int
mov
sbb
testb
aad
lods
mov
xchg
pop
mov
insl
or
jns
jne
or
movsl
je
jns
cltd
gs
fcomps
test
testl
test
pusha
xor
jnp
or
push
fwait
push
mov
aad
cltd
hlt
test
jbe
pop
jns
xorb
insb
in
lahf
shl
inc
mov
pop
lcall
sub
and
pop
push
mov
pop
sti
and
mov
loopne
mov
int
or
mov
or
ja
lock
bound
outsl
add
xor
cli
mov
int
sbb
adc
imul
xchg
mov
dec
sbb
or
movaps
sti
and
jecxz
cmp
adc
mov
dec
lret
popa
adc
jmp
out
les
and
test
inc
cld
and
xor
xor
adc
out
mov
neg
push
sbb
imul
adc
xor
cli
movb
sbbb
hlt
push
jmp
adc
cmp
mov
sbb
mov
fisttpl
cmp
mov
je
aam
cwtl
adc
cmp
shl
loopne
lcall
sub
lods
lods
fcomip
out
cmp
int3
push
push
cld
adcb
in
pop
sbb
mov
sub
jge
xor
mov
std
scas
add
push
out
punpcklwd
das
into
cmp
dec
adcl
add
aaa
push
sub
dec
push
jae
mov
cmp
xchg
vxorps
dec
cmp
adc
jecxz
mov
movsb
push
lret
push
xor
call
into
in
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
mov
add
add
add
push
add
add
add
add
add
add
add
