out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
pop
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
mov
ret
mov
inc
inc
test
jne
pop
xchg
pop
add
packsswb
jmp
adcl
cld
xchg
imul
ljmp
in
fadds
add
je
popa
imul
xchg
imul
popw
mov
jmp
or
roll
jg
xchg
or
pop
test
inc
add
leave
rep
mov
or
add
push
cmp
sysenter
pop
and
add
dec
inc
repz
inc
sbb
je
push
pusha
jno
sbb
pusha
pop
testl
and
leave
std
mov
jo
adc
das
pop
stos
cmp
or
or
fs
push
jae
pop
outsb
add
dec
push
mov
cmp
add
sub
pop
int3
inc
dec
mov
flds
dec
cmp
int
pop
iret
and
loop
in
roll
rorb
sub
dec
aam
outsl
or
js
jp
jb
cmp
mov
adc
jl
cmpl
xchg
and
push
push
fisubrs
or
mov
xchg
rclb
ror
mov
add
and
mov
outsl
dec
mov
add
push
cmp
cs
or
clc
je
jae
pop
mov
adc
shl
xor
xchg
int
pop
jg
or
popf
insb
dec
enter
xchg
js
shrl
xor
stos
ss
adc
adc
pop
imul
push
adc
xchg
xchg
sub
fcomp
xchg
push
into
lock
fldt
inc
sbb
mov
or
imul
andl
push
arpl
sub
jl
addr16
ficoms
push
sub
popf
cmpsl
cmc
or
push
jp
pusha
cmp
xchg
xor
adc
or
fsts
inc
jl
in
sbb
in
out
pop
out
fwait
in
mov
ljmp
xlat
insb
or
out
and
pop
pop
lock
push
mov
pop
test
pop
jp
inc
or
outsb
inc
mov
push
xchg
or
pop
sub
int
fsts
xchg
push
repnz
push
divb
dec
dec
je
adc
add
sbb
ja
dec
mov
ret
jmp
xor
int3
add
outsb
and
mov
add
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
pop
adc
and
mov
add
add
xor
sbb
lcall
push
pop
outsb
subb
imul
add
xor
cmp
cmpsb
imul
jmp
out
fiadds
rol
daa
mov
adc
dec
shll
push
add
jo
jge
stos
add
outsl
arpl
je
data16
stc
jg
insl
addr16
xor
xor
push
gs
bound
push
jb
jbe
insb
gs
dec
addr16
jae
jae
gs
xor
pop
add
push
push
push
inc
and
out
add
push
gs
outsl
imul
fs
int
pop
rclb
data16
jg
cs
and
imul
pop
sti
or
push
xchg
cmp
aaa
stos
mov
mov
fildl
in
adc
sbb
cmp
inc
adc
stos
add
dec
inc
dec
dec
inc
cs
insb
dec
add
dec
jle
push
dec
inc
dec
push
xlat
or
call
jno
push
pop
sub
jmp
push
add
add
out
pop
nop
inc
add
mov
inc
lock
pop
mov
add
cld
or
and
imul
popa
pushl
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
or
fidivrl
in
stos
ret
rcr
repz
mov
in
fldenv
cmpsl
pop
ss
pop
movsb
inc
in
sub
adc
push
pop
out
arpl
dec
movsb
pop
in
pop
push
in
dec
push
imul
mov
inc
dec
add
dec
adc
lds
or
push
or
add
add
mov
out
dec
pop
add
add
fxch
fiadds
pop
or
and
sbb
add
inc
lret
pop
and
mov
dec
rorb
mov
and
nop
fildl
leave
and
xor
add
bound
pop
or
xlat
push
mov
add
fs
je
dec
fwait
in
cld
fs
pushf
sbb
cs
push
push
xchg
xor
and
shlb
add
shrb
jae
xor
js
ja
pusha
add
jb
insb
outsl
arpl
sti
cmp
or
add
cmp
ret
enter
xchg
dec
roll
adc
repnz
lahf
imul
sbb
jbe
lcall
or
mov
ss
mov
int3
add
xor
cmpsb
imul
cmp
xor
roll
push
xor
stos
mov
xor
sarl
xor
shll
lods
mov
enter
lds
lcall
push
pop
insb
imul
sub
cmpsb
out
decb
sbb
imul
cmpsb
jmp
cmp
or
push
or
jp
fwait
add
mov
mov
pop
mov
ret
add
lcall
mov
cmpsb
imul
jne
testb
es
shll
inc
dec
push
dec
shll
add
lods
mov
xor
push
inc
dec
pop
add
call
scas
sti
int3
addb
jb
push
add
sbb
pop
mov
cld
leave
in
or
inc
repz
outsb
je
jb
gs
rcrl
dec
add
gs
fidivs
daa
dec
je
jo
jne
jns
outsw
inc
pop
out
lret
aaa
dec
jo
outsb
push
jb
adc
inc
icebp
out
add
dec
dec
dec
dec
inc
push
and
loopne
push
arpl
arpl
fbstp
clc
jmp
dec
inc
push
push
inc
push
inc
pop
dec
or
mov
je
pop
jg
fistl
lea
mov
jne
jae
in
jge
pop
push
pop
jae
outsl
outsb
sbb
in
inc
lahf
push
inc
insl
xchg
and
inc
add
lret
aaa
sbb
fadds
lahf
xchg
cmpsb
jns
mov
adc
sbb
pusha
sub
inc
lcall
mov
add
adcl
and
add
sbb
jmp
xor
or
testl
adc
add
mov
lret
mov
ja
sbb
mov
dec
inc
aas
add
pop
insb
or
rorl
mov
and
add
cmpsl
push
push
sbb
xor
adc
inc
fmul
cmp
pop
lret
lret
add
push
stos
nop
inc
pop
adc
mov
cmpsb
sbb
das
xor
sbb
pop
xor
ud2
scas
sti
add
add
outsl
add
jae
push
cmovl
lcall
add
gs
sbb
jmp
js
push
sub
add
fdivr
jg
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
addr16
xor
push
mov
pop
movzbw
add
jmp
inc
xchg
push
inc
outsl
insl
insl
cmp
mov
xor
les
push
push
ja
imul
or
pop
push
pop
xor
arpl
pushw
je
dec
push
flds
jo
jb,pn
jb
sub
flds
arpl
xchg
gs
xchg
pop
and
lahf
sbb
outsl
inc
pop
jb
aas
sbb
push
add
jno
outsl
mov
dec
xor
outsl
je
xor
imul
jo
jg
and
call
ja
pop
js
add
pop
and
pop
push
mov
mov
pop
cs
add
or
arpl
popa
insl
cmpsl
call
mov
inc
popa
jb
pop
jno
jae
jbe
sbb
lret
cmpxchg
xor
pushl
divl
insb
jae
or
stos
mov
clc
ret
psubq
mov
xlat
movsl
mov
or
cli
pop
jo
jo
adc
fsts
adc
fistl
fidivl
popw
popa
sub
adc
outsb
imul
and
pop
mov
out
decl
fmuls
cmc
pop
sbb
or
adcl
out
push
mov
add
push
pop
call
in
pop
mov
mov
fs
jmp
mov
clc
gs
mov
clc
cmc
test
add
xor
mov
mul
xchg
xlat
inc
add
adc
pushf
call
lret
mov
movb
mov
inc
and
sti
leave
push
jecxz
pushf
adc
xlat
outsb
ret
test
inc
call
or
add
or
or
push
add
push
mov
cmc
mov
and
idiv
add
in
outsl
in
dec
imul
jb
jns
sbb
cli
ljmp
insb
data16
add
jae
outsl
or
lret
xor
jae
pop
into
mov
out
stos
pop
pop
and
fs
push
cmovbe
push
call
fstpt
dec
arpl
cmp
or
daa
clc
pusha
push
mov
xbegin
pop
call
fnsave
xlat
rol
cli
mov
leave
mov
sbb
movsb
fneni(8087
mov
mov
mov
leave
scas
aad
and
pop
sar
out
xor
shl
in
aas
shlb
mov
mov
outsb
dec
fidivl
bound
std
xlat
jecxz
jbe
pop
mov
jmp
lock
shll
inc
shlb
fisttpl
enter
in
std
mov
ret
not
out
mov
or
ret
mov
mov
fmull
mov
aad
rcl
mov
loope
in
lret
mov
fadd
leave
mov
iret
ret
mov
pop
sub
jecxz
lahf
enter
rcl
enter
mov
aad
mov
insl
sti
leave
ffreep
lods
shr
and
mov
loop
movl
cli
call
enter
jecxz
lods
pop
jg
mov
fbstp
mov
iret
loopne
loope
into
loop
rol
xlat
xchg
dec
or
dec
scas
ror
filds
mov
sbb
adc
imul
adc
lods
rorl
std
iret
data16
lahf
cmpsl
mov
out
cmpsl
shr
jg
dec
les
fadd
iret
mov
fxch
lret
mov
andl
iret
sbb
ljmp
addr16
leave
xlat
in
leave
and
out
out
fcmovnu
push
rcl
mov
mov
imul
aad
ret
out
sub
mov
pop
loope
mov
push
mov
ret
das
inc
lods
push
insb
test
cmpsl
lods
sbb
das
pop
mov
lds
push
pop
pop
add
js
imul
mov
add
pop
movsl
fs
pop
and
adc
jg
and
lahf
mov
mov
dec
dec
dec
inc
das
pushf
inc
sub
xor
pusha
inc
fs
testb
das
mov
popa
inc
popa
in
xchg
lret
nop
arpl
cs
mov
mov
push
lcall
in
sbb
pushf
fstpl
push
add
in
push
push
mov
sbb
mov
pushl
or
push
push
mov
decl
in
push
aaa
jbe
in
pushl
add
mov
or
pop
ja
sub
les
or
call
xor
data16
xor
inc
decl
dec
cld
ljmp
pop
jmp
add
mov
rorb
lock
mov
mov
dec
andl
xchg
loopne
jge
push
mov
cltd
insb
sti
fmuls
inc
add
icebp
lods
std
movsl
mov
push
call
in
add
in
outsl
mov
sub
sub
mov
movb
inc
or
movb
fildl
ds
push
adc
call
fistpl
imul
mov
push
leave
inc
in
push
xor
or
or
ss
aas
or
mov
pop
and
mov
add
es
call
jb
movsb
loope
fimull
mov
dec
cwtl
mov
or
pop
adc
mov
andb
mov
inc
or
aas
mov
pop
cmp
pop
add
aaa
je
mov
nop
stc
xchg
inc
adc
stc
nop
jl
dec
jns
add
repnz
add
add
aaa
jmp
pop
popa
data16
inc
jge
rclb
inc
add
push
push
push
stos
add
sbb
je
sub
adc
and
or
pop
loope
outsl
pushl
test
jne
ret
cmpw
jne
dec
cmp
lret
mov
loopne
jmp
push
jge
scas
sub
sbb
and
inc
xor
sub
xor
and
repnz
adc
test
enter
pop
xor
out
jne
or
call
cmp
je
mov
cmp
je
or
divl
std
mov
adc
pop
cmp
ja
addr16
or
dec
insb
in
in
xor
mov
adc
cmp
mov
in
mov
cmp
jb
sub
sub
add
je
call
dec
sbb
inc
xchg
mov
lea
or
xor
xchg
test
jmp
xchg
push
arpl
jo
cwtl
jmp
or
notl
add
mov
mov
fadds
add
jge
push
push
push
sbb
rclb
add
mov
fistpl
push
push
and
loope
pop
mov
dec
ret
fcoml
push
sbb
pop
sbb
in
push
or
subb
js
lods
pop
out
or
or
xor
mov
jmp
movsl
add
or
movsl
mov
in
movsb
mov
push
fimuls
mov
lock
jle
mov
subb
dec
dec
mov
mov
adc
loopne
orl
push
mov
mov
dec
pop
mov
mov
cld
fstpt
xor
add
cmp
sarl
push
mov
add
divb
xchg
shll
sbb
flds
jnp
sbb
insl
pop
lods
push
add
sbb
cmpsl
test
movsl
ja
inc
arpl
adc
pop
loope
pop
adc
lea
inc
cmp
jbe
test
dec
aam
push
push
jae
push
outsb
jl
inc
clc
push
sub
adc
pop
jb
push
jle
in
pop
pop
pop
jb
add
push
rcrb
and
in
je
and
jo
and
leave
pop
nop
pop
lock
mov
and
loopne
nop
dec
test
and
lods
repnz
xorb
adc
lahf
in
jl
and
js
and
cmp
ds
xor
adc
push
ficoml
leave
xor
repnz
xor
adc
repz
fnstsw
xor
add
xchg
xor
cmp
jnp
pop
xor
insb
sub
fnstcw
clc
pop
mov
mov
adc
push
adc
mov
lea
rcrl
ret
and
ror
pop
inc
out
adc
adc
icebp
std
lock
ficoml
mov
cmp
xor
cwtl
xor
test
mov
mov
fidivs
push
jbe
or
add
jle
mov
shlb
popf
sbb
xor
jns
or
dec
jmp
mov
hlt
jae
cmc
data16
negl
outsl
and
xchg
jmpw
push
cs
fs
ja
imul
sbb
cmp
shlb
ret
push
jnp
ja
lret
in
in
sti
push
xor
dec
xlat
and
mov
cli
push
jg
inc
nop
movsl
or
loopne
cmp
decl
inc
fwait
insb
fistpl
add
clc
mov
push
pop
arpl
xchg
sub
mov
testb
sbb
and
lret
inc
nop
or
jno
xor
xchg
mov
xlat
mov
data16
xor
negb
jbe
out
test
enter
mov
mov
add
pop
add
add
fdivp
mov
jbe
add
ret
add
push
into
jle
jmp
jge
je
pop
lahf
push
pop
dec
cwtl
lods
aad
ds
mov
je
and
aaa
push
jmp
adc
jmp
fbstp
sbb
call
or
call
xchg
repnz
and
pop
inc
idiv
adc
mov
call
inc
jmp
andb
mov
jmp
add
add
xor
jmp
or
dec
xchg
enter
adc
dec
jle
enter
les
and
rorl
enter
cmp
jo
pop
fdivrl
mov
inc
aam
add
enter
xchg
and
and
inc
xor
adc
pop
stc
push
loopne
add
push
push
cwtl
pop
pop
push
jae
push
adc
jmp
add
lock
xchg
test
inc
and
lock
cld
int
jo
fs
ja
xor
mov
cmpb
jne
xor
dec
mov
jl
cmp
jb
in
pop
ja
aas
icebp
mov
imul
add
andl
push
or
dec
mov
clc
inc
sub
adc
imul
adc
and
push
add
mov
dec
adc
inc
jge
and
jg
sbb
rol
lea
loopne
cmp
jae
mov
inc
pop
lret
shr
add
stos
leave
add
inc
push
mov
dec
or
mov
mov
dec
push
pop
jne
adc
sbb
dec
repz
rorb
arpl
mov
loop
or
adc
or
cld
roll
fdivl
gs
pop
xchg
xor
pop
sbb
sub
push
xchg
pop
jbe
or
cmp
clc
mov
not
and
push
jl
and
or
add
lea
adc
xlat
sbb
out
push
jo
add
repnz
not
and
lock
jg
testl
mov
mov
shr
mov
or
js
add
push
aam
or
mov
aaa
inc
fisubs
fimull
add
lea
call
mov
shl
push
pop
inc
sub
mov
and
divl
pop
xchg
roll
repz
jle
out
into
mov
shr
or
add
dec
pushl
jg
push
fisttps
jl
out
lret
outsb
sbb
cli
mov
push
test
hlt
mov
not
and
sub
and
pop
adcb
sub
xchg
rcr
mov
pop
test
sub
xlat
rcr
imul
xlat
or
mov
repz
sub
adc
test
roll
mov
fisubl
jl
or
sbb
pop
int3
xor
add
sub
mov
xor
add
jns
sub
adc
jne
les
repz
mov
fcomp
cwtl
subb
addl
xor
xchg
xchg
repz
not
fisubrs
pusha
mov
or
adc
pop
scas
testl
sti
mov
pop
les
subb
data16
rolb
push
loop
mov
sub
sub
fcomps
or
loop
fdivs
xlat
pop
mov
pop
mov
rcrl
les
adc
mov
or
xor
cmp
out
or
or
xchg
jno
std
stos
insb
aas
mov
lods
es
add
and
imul
cmp
pop
aaa
out
xchg
pop
das
push
mov
cmpsb
pop
mov
xor
subb
push
and
xchg
sbb
and
or
popa
adc
outsb
xchg
in
jg
and
mov
mov
shl
ljmp
mov
fst
and
aad
aam
pop
bound
mov
pop
sbb
shl
add
and
mov
inc
lods
dec
cmp
inc
rorb
cmp
or
fadds
hlt
push
fisubrs
clc
jb
repz
pop
pop
or
push
repnz
roll
out
and
stos
mov
xor
out
call
inc
cmp
imull
mov
fldcw
call
xlat
sbb
fdivs
popf
fbld
push
adc
add
fcmovnb
sbb
fimull
out
fdivrs
clc
cmp
icebp
fistpl
mov
shl
je
int3
bnd
or
add
mov
mov
mov
out
loope
out
sbb
loopne
ret
inc
enter
pop
aaa
or
mov
push
fbstp
inc
fimuls
xchg
aad
adc
cmp
gs
or
mov
call
adc
adc
out
or
fcmovbe
lret
ret
fwait
insl
fdivs
test
popl
aam
mov
out
cld
stc
in
stos
xor
aad
flds
outsl
addr16
lcall
xchg
out
cmovge
mov
cmp
jge
xchg
adc
or
xor
test
bound
shlb
add
xchg
fdivl
test
xor
mov
and
jno
adc
lret
rep
test
lds
popa
popf
insl
adc
data16
add
xor
mov
repnz
out
push
mov
or
in
mov
mov
maskmovq
testl
sbb
push
popf
dec
xchg
mov
fimuls
lods
fmul
push
cltd
jb
repz
addr16
int3
pop
pusha
dec
mov
in
jae
pop
cli
xor
arpl
sbb
push
jo
mov
out
or
or
xor
jle
sub
jae
fistpl
in
mov
add
sbb
lock
cli
daa
mov
fidivs
popa
fisubs
fidivl
cmc
test
shrl
out
sub
xor
js
pop
out
mov
in
cmp
or
push
pop
loope
lods
aas
sbb
cmp
rcl
fstps
into
sub
push
in
out
in
mov
ss
sub
jns
in
clc
jl
pop
je
ret
xlat
insb
cmp
xor
in
jnp
push
lods
les
cli
xchg
subl
jp
fstpt
inc
and
stos
rcrb
sbb
push
or
test
call
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
aaa
es
mov
stos
adc
mov
lock
mov
in
hlt
cmp
adc
xor
aas
xchg
in
cmp
cmp
pop
pop
gs
sbb
jns
sub
rcrl
int3
or
push
or
ja
in
and
jge,pt
out
call
int
mov
unpckhps
sbb
and
test
pop
test
dec
mov
jg
call
outsl
push
mov
fninit
push
jp
sbb
int
das
mov
sbb
out
jecxz
je
mov
cmp
mov
ljmp
fdivl
mov
adc
dec
mov
lds
jp
xlat
sbb
mov
mov
xor
out
loopne
outsl
xchg
sbb
xor
aam
rcl
sub
jb
cmp
pslld
ret
repz
mov
insb
pop
rclb
xor
jmp
xor
out
xlat
pop
add
pop
movsb
mov
xlat
insl
mov
inc
or
or
and
mov
faddl
stos
inc
js
cmp
mov
cli
decl
cmp
jl
push
pop
sub
push
push
push
cmp
jmp
je
jne
xor
test
nop
xlat
adc
aaa
hlt
push
pop
fisubrl
jle
mov
pop
mov
lahf
inc
pop
inc
test
nop
iret
pop
in
sti
push
clc
pop
mov
mov
into
ljmp
rcrb
add
push
dec
jne
push
dec
inc
add
ljmp
push
cmp
ljmp
push
shr
cmp
je
sbb
push
sbb
adc
mov
sub
jne
inc
cmp
shr
push
in
jne
cmp
push
add
add
xor
adc
push
pop
adc
mov
scas
iret
mov
in
inc
jl
add
jg
adc
inc
cmp
insb
pop
call
add
je
rcrl
std
sbb
pop
mov
andb
stc
mov
mov
jnp
dec
insb
cld
push
outsb
adc
lea
inc
js
mov
jecxz
pop
push
inc
adc
xchg
pop
mov
lret
add
stos
pop
pop
push
aaa
fildll
pushf
or
dec
sub
jne
push
lea
add
fidivl
adc
je
pop
push
xchg
cmp
pop
mov
les
cld
fwait
test
clc
call
push
pop
pop
repz
mov
or
cld
call
daa
rolb
sub
xor
sti
mov
or
dec
cmp
out
or
testb
aad
shll
adc
adc
add
pop
adc
imul
jb
add
pop
jnp
fsts
loopne
pop
int3
rolb
aam
loopne
jnp
call
pusha
or
jp
adc
or
add
jl
push
or
ds
ljmp
iret
out
repz
jo
hlt
gs
mov
jo
das
xchg
lods
pushf
into
je
mov
pushf
or
add
outsl
or
out
pop
xor
or
call
sub
jnp
and
loop
pop
jae
inc
mov
lods
mov
cs
lcall
cltd
dec
cmpsb
xor
or
push
pop
jmp
pop
fldl
or
iret
bound
jge
fistl
push
ds
push
push
movb
in
dec
pop
cs
lret
out
push
out
push
lock
icebp
inc
repnz
mov
pop
shlb
xor
lock
cld
dec
push
sbb
push
pusha
inc
mov
dec
push
insb
andl
and
mov
mov
ret
add
and
inc
or
or
xchg
sub
sbb
inc
decb
or
inc
inc
push
push
aas
bound
mov
adc
leave
mov
and
cmp
loopne
add
xchg
je
fwait
insl
xor
cwtl
mov
lock
das
sub
pusha
mov
jecxz
or
xor
ret
adc
jnp
orl
push
push
add
and
cmp
dec
hlt
mov
sbb
xor
shl
push
daa
cwtl
xchg
shlb
nop
imul
adc
lea
movb
and
jne
mov
mov
inc
sbb
jbe
sbb
enter
add
shlb
jle
lock
hlt
push
insl
mov
xor
and
push
pop
call
sub
adc
mov
out
fadds
hlt
lods
inc
inc
inc
inc
push
mov
das
cmp
pop
jb
pop
jp
in
mov
xor
add
mov
repnz
pop
fstl
fstpl
and
add
loopne
mov
cld
pop
jb
xorb
pop
adc
cmp
mov
cmpb
lock
add
dec
dec
pop
cmp
aaa
lock
out
push
arpl
pop
ja
cmp
das
fsubrl
xchg
push
or
push
push
nop
js
push
sbb
enter
aad
shrl
push
xchg
cmp
cmpsb
loopne
sbb
movl
addl
pop
adc
inc
add
fcoms
jb
adc
mov
sbb
ret
sbb
mov
pop
or
or
lea
cmp
call
leave
es
and
mov
in
js
mov
inc
push
outsb
call
rcrl
jb
rcrb
imul
add
dec
orb
orl
cmpsb
xor
pop
push
inc
call
jns
enter
xchg
mov
inc
test
pop
js
push
lock
or
inc
add
mov
addr16
out
movsb
outsb
sbb
setl
mov
call
pop
pop
add
pop
jbe
pop
push
xchg
jo
int3
jae
xor
ss
fcompl
or
enter
mov
jae
or
bnd
fsubrl
cmp
fdivrl
or
ret
cmp
and
ret
adc
xchg
add
xor
rcr
addl
test
cmp
add
in
mov
loope
and
pop
repz
add
push
push
push
nop
aam
stos
insb
stos
pop
loopne
test
adc
out
push
sbb
mov
mov
insl
aad
pop
cwtl
and
xchg
or
xchg
add
cmp
mov
mov
pop
xchg
jo
fucom
jle
pushl
pusha
test
insb
push
lea
add
fdivrs
adc
pusha
jae
xor
sub
mov
push
pusha
pop
jg
std
or
xor
pop
mulb
ret
in
lods
sbb
xor
xor
cmp
sub
and
pushf
push
mov
lea
sti
out
pop
cmp
dec
je
cmp
mov
jb
add
mov
mov
std
push
lock
cmp
je
jo
or
jnp
push
push
pop
dec
int3
data16
xor
sbb
and
std
hlt
fwait
or
sbb
pop
jge
ficomps
in
pop
pop
call
call
push
pop
mov
cmpb
dec
inc
and
sbbl
adc
cs
cmpsl
pop
imul
pop
lret
sbb
pop
push
fisttps
ss
mov
mov
out
test
mov
xor
push
sahf
mov
pop
push
push
pusha
stos
or
decl
pop
push
xchg
pop
sbb
jg
leave
lods
jb
pop
lods
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
mov
push
fsts
rcl
js
shlb
insb
jbe
mov
aam
aad
xlat
pop
fsubrs
fsub
dec
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
mov
or
ret
rol
shrl
xor
lds
mov
leave
lret
insl
cmp
hlt
xchg
push
xchg
ss
xlat
xor
cwtl
cltd
lcall
fwait
pushf
adc
sub
push
mov
mov
mov
add
test
push
test
es
cmc
div
clc
ds
lret
stc
hlt
cli
jns
lea
and
pop
mov
ljmp
or
pop
lock
pop
xor
and
adc
push
call
cmp
mov
in
pop
test
out
lcall
and
ds
mov
outsb
sub
sbb
lcall
jmp
dec
rcrb
pop
cs
xchg
push
adc
cmc
adc
jge
lea
shrl
out
jo
div
shrb
clc
enter
mov
sti
push
movsl
leave
pop
adc
movsl
popa
lahf
movsl
push
push
shl
and
mov
into
imul
xor
push
outsb
leave
inc
ret
sbb
daa
mov
push
push
inc
sub
fisubs
scas
nop
jmp
aaa
sbb
push
mov
jmp
in
add
mov
adc
cmp
aas
mov
nop
mov
je
repnz
sti
gs
jmp
test
pop
andb
add
push
jno
outsl
mov
fsubl
mov
dec
adc
or
hlt
fcoms
fadds
mov
add
jnp
lahf
or
lea
daa
lock
in
lret
mulb
mov
mov
push
push
adc
sbb
push
mov
call
aaa
sti
add
bswap
pop
xor
aas
orb
mov
inc
push
loopne
aaa
add
xor
inc
push
cmp
jl
out
repnz
add
lock
adc
sbb
or
or
mov
ss
add
sti
adc
sbb
insl
sub
fistpll
mov
movl
add
aad
jne
jl
jns
ret
mov
jl
dec
add
push
add
fadds
adc
pusha
scas
sahf
mov
xor
addr16
ss
jmp
lahf
cmpsl
mov
in
add
shr
push
mov
jmp
adc
sbb
imul
inc
add
cmp
int
mov
jl
cmp
outsb
push
bound
mov
mov
mov
loopne
repz
call
inc
push
push
fdivrs
shrl
incl
ss
xor
daa
iret
sub
add
add
cld
mov
ss
adc
jmp
and
fildl
inc
or
and
xlat
jmp
hlt
adc
scas
fs
insb
xchg
inc
cld
call
xor
jne
andl
inc
or
call
push
mov
fcmovnu
sub
loopne
push
negb
mov
jb
out
mov
mov
xchg
mov
rclb
pushf
fidivrs
test
es
dec
cmpsb
mov
data16
jp
imul
insb
popa
push
dec
push
imul
fidivl
fildl
pusha
shrl
fstp
jae
fbstp
xor
mov
xor
xor
xor
or
iret
cli
sti
cld
lcall
lcall
mov
sub
cmpsb
jmp
mov
dec
xlat
mov
mov
lcall
jbe
nop
cmpsb
pop
xor
enter
adc
fsub
in
out
rcrb
mov
out
mov
inc
lcall
jb
dec
shlb
repnz
jo
sahf
xchg
mov
sub
push
dec
lock
cmpsb
addr16
cmpsb
jb
and
push
movsb
test
mov
or
pop
push
es
push
adc
movsl
pop
nop
gs
push
hlt
dec
mov
add
xor
sbb
pusha
adcl
hlt
int
adcb
clc
xchg
out
jmp
stos
sub
push
in
xchg
dec
shll
popf
cmp
imul
push
imul
call
lock
dec
xor
fwait
bnd
xor
mov
insb
je
fcoml
add
jge
xchg
push
add
cmp
inc
loope
add
or
cld
fstpt
inc
loopne
jb
push
add
sbb
les
out
xor
and
lcall
pop
push
insb
sahf
mov
add
xchg
mov
out
das
inc
sbb
insb
in
or
sbb
inc
andb
inc
or
add
push
movsb
incb
lret
hlt
xchg
clc
lock
and
cmp
mov
fldl
or
ret
imul
mov
popa
xchg
clc
inc
lods
sbb
jl
adc
lcall
test
pop
push
adc
and
push
or
jne
out
sub
or
and
imull
xor
int3
pop
mov
push
mov
and
movsl
je
inc
xchg
sub
stos
inc
xor
stc
add
shrl
scas
sbb
sbb
xchg
ficompl
push
and
jno
ss
adc
lcall
and
sub
lods
jl
xor
idivb
jmp
fsts
pop
or
cltd
sbb
insb
cwtl
and
xchg
add
leave
inc
dec
and
xbegin
or
sbb
add
lods
mov
mov
in
test
rclb
xchg
cmc
and
scas
adc
lock
and
imul
lahf
hlt
push
outsl
sbb
push
xor
mov
call
and
loopne
icebp
ret
push
mov
sbb
incl
sbb
sbb
aad
pop
mov
jnp
das
inc
jmp
cmp
pushf
inc
and
jbe
clc
das
out
jle
mov
pusha
pusha
or
mov
mov
jge
jbe
mov
mov
mov
mov
rcrb
arpl
jne
out
cmpsb
jnp
pop
sbb
push
in
sahf
cld
call
in
xchg
xchg
in
sub
inc
cmp
mov
inc
repnz
in
or
hlt
cmc
enter
cld
aam
or
icebp
xchg
mov
push
loopne
mov
outsb
andb
call
mov
and
sbb
or
mov
or
call
cmpsl
adc
or
mov
cltd
scas
push
sbbl
aas
mov
adc
roll
and
fisubl
in
idivb
mov
push
js
pushf
xchg
jmp
aas
repz
inc
push
pop
adc
pop
stc
push
or
aas
pop
push
sbb
pop
mov
fsubl
mov
rolb
cmp
sarb
mov
insb
scas
add
sbb
rorb
sbb
or
lods
dec
pop
jns
je
addr16
sub
test
or
fwait
sub
sub
loop
pusha
pushf
popa
cld
ret
dec
ret
movsb
push
idivb
add
xchg
std
push
fwait
pop
xchg
gs
ljmp
in
out
insb
dec
jae
cmp
xor
shll
bound
aaa
dec
shrl
and
cmpsl
bound
ja
out
inc
mov
dec
popl
mov
lahf
or
or
push
jmp
mov
addl
aas
lret
mov
jmp
jmp
push
rcll
stc
bsf
push
pop
mov
shl
inc
pushf
pusha
push
not
jmp
and
add
xor
push
lea
clc
push
and
jp
pusha
push
mov
or
sbb
lahf
pop
sub
xchg
nop
xor
pushf
xchg
push
scas
sbb
sahf
lahf
cltd
sbb
dec
and
add
pop
cltd
lea
push
mov
ror
pop
lahf
pop
pushf
pop
data16
mov
loop
lods
roll
cli
or
jmp
out
sbb
adc
mov
push
in
ficompl
loope
mov
lret
xchg
or
xchg
test
clc
sub
cmp
fstl
pushf
add
lcall
sarl
xchg
icebp
shlb
sub
xor
jmp
pushf
popl
xor
je
movsb
sahf
inc
daa
xchg
in
fiaddl
mov
push
xchg
cld
inc
fs
mov
mov
or
and
sahf
fs
cltd
cmp
sbb
or
add
jnp
push
lods
or
sub
dec
mov
sahf
and
and
add
fists
popf
icebp
fmulp
push
pushl
pushl
cmp
add
mov
pop
push
push
testb
call
jg
sti
stc
mov
mov
pop
ja
xchg
mov
sbb
xor
mov
lahf
loop
mov
fucomip
push
pusha
cld
and
pop
daa
imul
stc
and
sub
mov
push
dec
sub
mov
inc
lock
imul
jb
inc
pop
sti
xchg
int
push
dec
cwtl
mov
cmp
push
adc
or
adc
sub
cmpb
sub
clc
jp
mov
mov
dec
clc
aas
jl
sbb
mov
jmp
add
adc
push
roll
cld
pushf
je
rorb
xchg
pop
ret
jmp
aam
ds
call
repz
add
adc
cmp
sbb
push
dec
push
mov
mov
mov
js
jnp
mov
mov
xlat
inc
inc
int3
xchg
pop
daa
fsub
loopne
push
push
insb
and
jl
inc
jae
in
push
mov
popf
fcmovnbe
stos
ljmp
sti
jno
pop
inc
push
call
shlb
push
insb
cmp
lds
xor
cld
inc
std
clc
std
dec
addb
stc
rorl
leave
cld
adc
clc
push
mov
fmull
cld
dec
repz
lock
insb
filds
mov
adc
inc
ret
inc
inc
xchg
insb
inc
sti
mov
sub
cmp
inc
repnz
sbb
pop
pop
jbe
jle
popa
lret
add
cmp
mov
pop
xchg
add
mov
out
aas
stos
or
adc
xor
mov
inc
add
sbb
pop
add
lods
mov
sub
or
cmp
mov
or
inc
sub
aas
andb
sub
pop
add
hlt
lret
sbb
xor
mov
cmp
dec
and
hlt
and
cs
cli
imul
adc
iret
fsubs
mov
aas
sahf
mov
js
bound
inc
insb
fsubr
or
lea
outsl
sbb
push
push
stc
cmpl
jmp
ret
fcmovnu
xor
mov
push
stos
sbb
pop
ja
or
cmp
cmc
insl
sub
loope
sahf
sub
hlt
hlt
test
xchg
hlt
push
hlt
mov
sub
and
push
inc
add
mov
jns
inc
clc
outsb
mov
loope
inc
jns
sbb
test
push
or
fidivs
or
jge
clc
in
mov
pusha
xor
call
aaa
or
sub
dec
js
loopne
dec
jmp
mov
add
inc
add
jmp
or
outsl
mov
cmp
push
mov
shlb
imul
jne
cmp
add
jb
fstl
popf
dec
aaa
add
mov
jo
out
dec
inc
gs
in
fdivrl
and
int3
loopne
movsb
test
int3
iret
cmpsb
jle,pt
je
lcall
fadds
inc
inc
mov
mov
inc
inc
xor
cmovno
int3
jo
push
mov
and
xchg
add
fsub
mov
or
sbb
mov
pop
stc
push
mov
mov
jns
jne
push
pop
xchg
or
mov
insb
out
mov
jle
shrb
inc
add
push
rolb
mov
xor
push
push
sbb
outsb
xor
add
jbe
push
inc
sti
sbb
pushf
xor
daa
push
or
mov
pop
jnp
cltd
ljmp
fs
outsb
or
xor
pop
jns
mov
dec
pusha
hlt
test
sub
outsw
outsb
je
pop
movsb
sub
dec
and
ss
xor
lods
hlt
loopne
adc
xchg
mov
or
daa
jne
adc
mov
mov
aaa
sbb
gs
mov
fndisi(8087
call
cmp
scas
add
insl
outsl
iret
xchg
xchg
xchg
outsb
insl
addr16
xor
xor
or
xchg
imul
pushl
lcall
lret
pusha
repz
pop
inc
aas
dec
pop
pop
dec
cs
stc
jns
add
movsb
ror
or
outsl
or
adc
je
add
pminub
lock
push
int
cmp
mov
push
sbbb
aas
or
jmp
aas
and
sbb
and
in
xor
adc
jg
call
xor
adc
xchg
scas
mov
jno
cmp
testl
pop
sub
push
dec
sub
test
nop
push
inc
sbb
jb
cmp
je
subl
fisttpll
push
push
pop
pop
int
rclb
lock
inc
adc
scas
call
es
pop
fdivrs
fidivs
push
push
aas
lds
imul
cld
push
insl
adc
add
mov
fstp
sub
pop
into
push
test
mov
add
stos
adc
jnp
test
push
insl
loop,pn
ficoml
ret
js
sub
addr16
cmp
cs
inc
add
push
andnps
jae
cmp
mov
popf
std
cmp
pushf
repz
inc
lds
and
sub
mov
add
rcl
fcomp
mov
call
pop
add
adc
mov
xor
js
push
fisubl
mov
aam
pop
add
adc
cmp
sbb
push
mov
divl
adc
xor
pushf
popa
mov
and
pop
xor
insb
loope
xchg
cmp
daa
mov
or
add
shl
movsb
xor
cltd
mov
idiv
jle
xor
hlt
cmp
and
loope
xor
add
pop
push
xlat
inc
and
xor
xchg
dec
lock
pop
enter
ss
push
ret
add
cmc
jmp
or
clc
sub
cmp
pusha
orl
gs
dec
dec
dec
dec
lcall
fs
insb
pushf
sub
outsl
addr16
lret
mov
sti
insb
jne
cs
xor
mov
insb
insb
mov
lret
mov
cwtl
iret
sub
mov
push
jb
mov
mov
adc
push
gs
pop
mov
test
lods
lods
xchg
gs
add
mov
jo
outsb
aaa
or
gs
gs
jp
mov
aaa
fwait
shrb
roll
aam
mov
lcall
lea
jne
mov
gs
xor
push
sbb
sub
dec
rcll
cwtl
js
shll
fcmovu
pop
shll
push
fstl
fnstsw
cmp
xor
loop
in
out
dec
mov
ds
mov
mov
in
mov
lgs
inc
pop
xlat
xor
pop
mov
inc
mov
arpl
sbb
fs
fdivs
adc
psubb
enter
std
push
mov
adc
push
sbb
cmp
shll
xchg
add
cmp
adc
mov
cmp
mov
pop
repz
lahf
add
cmpsb
mov
pop
test
pop
inc
stc
mov
das
loope
pop
jecxz
or
push
adc
adc
cmp
push
out
inc
sub
cmp
add
into
imul
sub
or
shrl
movsb
or
repz
fimuls
cwtl
xchg
or
sbb
ja
push
mov
or
inc
sbb
pop
jl
popa
fildl
add
bound
lahf
or
dec
jmp
mov
add
mov
add
hlt
negb
popa
sbb
sbb
repz
idivb
push
lsl
push
scas
std
rolb
push
sbb
aaa
cmp
fcomp
aas
lea
sbb
sub
push
inc
cmp
cld
call
pop
ret
push
push
out
cmp
loop
mov
and
jne
call
jmp
mov
ljmp
mov
nop
push
cmc
cli
hlt
jne
bound
fimuls
test
popa
push
jno
or
inc
inc
xor
xchg
call
lock
je
xchg
sub
pushf
and
sbb
clc
mov
cmp
mov
jmp
call
push
jbe
add
and
data16
and
or
and
mov
jo
add
je
jns
xor
pop
or
dec
sahf
outsl
or
adc
dec
pop
sub
je
jp
imul
cmp
je
sbb
pop
ficomps
jbe
add
jl
push
jle
adc
add
jg
inc
in
repz
mov
das
sub
and
adc
add
xchg
sahf
and
sbb
in
pushf
and
loope
sti
jle
or
xor
loopne
dec
jg
push
sub
ss
je
cmp
imul
pop
xchg
jae
insb
outsl
arpl
orb
jae
jl
out
or
jmp
fld1
jmp
js
dec
xchg
call
lods
clc
imul
xchg
push
in
cwtl
push
add
in
data16
sub
push
cmp
xchg
mov
and
scas
sub
scas
xor
or
addr16
push
push
cmc
int3
pop
sbb
or
or
ds
pop
jbe
lret
push
pop
lock
das
pop
inc
mov
xorb
dec
or
dec
add
mov
xchg
int
lock
bsr
push
sub
fidivrl
mov
pop
push
js
lock
or
and
cmp
mov
push
mov
jmp
sbb
adc
push
push
cwtl
add
jb
jae
out
mov
push
lock
adc
es
jae
inc
pop
out
and
mov
fldcw
push
xlat
cmp
or
pop
add
xor
test
imul
cmpsb
outsl
outsb
cmp
xchg
gs
popa
shrb
imul
add
cwtl
mov
dec
aas
pop
mov
cmpsb
rol
les
lds
cmpsb
fnstenv
mov
enter
lret
imul
iret
rclb
shlb
aas
popa
cmpsb
imul
outsl
lcall
gs
mov
outsl
jns
lods
shll
aas
popa
mov
sub
icebp
insb
cmc
ret
or
imul
dec
shll
outsl
jp
outsb
shll
and
sub
add
pslld
int3
jmp
or
jmp
mov
les
movsb
in
std
clc
add
xor
push
lods
mov
ds
mov
sbb
div
sub
out
adc
jne
call
cmp
push
popf
fdivrl
pop
adc
push
cld
jbe
pop
inc
xor
mov
das
mov
fsubrl
and
cmpsb
imul
mov
lock
sbb
call
mov
cld
iret
das
jbe
sahf
sbb
push
pop
push
mov
dec
dec
jmp
mov
adc
adc
or
sub
mov
test
lcall
fsubrl
xchg
stc
pop
mov
inc
fistpll
sub
sub
cmp
adc
cmp
add
repz
incl
jge
push
call
dec
cld
rcl
call
rclb
divb
jle
mov
jnp
roll
shlb
fstpt
subb
add
cmp
sub
pop
jmp
in
aas
fwait
imul
push
mov
test
push
mov
daa
push
arpl
mov
mov
mov
pop
adcb
inc
lcall
cmp
sbb
in
imul
imul
insl
bound
jne
inc
lcall
popf
insb
or
bound
push
movb
jo
shl
pop
mov
cmp
sub
xchg
add
and
pushf
mov
cld
pop
sub
in
mov
dec
shll
jns
jb
xorb
push
inc
outsl
mov
push
cmp
repz
jmp
negb
lods
mov
jne
ret
inc
cld
pushf
clc
push
jg
xchg
stc
push
hlt
dec
int3
jbe
mov
ja
mov
sub
inc
fisubrl
dec
sbb
xchg
lret
sbb
add
out
xchg
ljmp
pop
imul
insb
add
out
fsubrs
int
out
call
imul
loop
nop
cmpsb
jbe
outsl
insl
jne
adc
call
adc
or
filds
add
icebp
mov
lock
inc
mov
cmp
xorl
shlb
xchg
iret
and
into
mov
inc
rcll
ja
cmpb
outsl
test
and
popl
stc
iret
cltd
push
dec
or
add
mov
cmp
xchg
cmpsl
push
cmp
adc
add
dec
cmp
xor
and
fucomp
mov
ljmp
pop
or
sbb
push
push
push
pop
fs
and
loop
jo
nop
sbb
int3
jo
and
or
and
add
mov
sub
lods
sbb
dec
cmc
ret
test
sbb
xor
fsubrl
add
or
mov
xchg
xchg
popa
add
shl
dec
adc
je
and
orl
shlb
pop
incb
sti
mov
mov
push
pop
clc
xchg
inc
push
sbb
div
ja
sahf
inc
loopne
cmp
pop
shll
test
hlt
test
mov
fisttpll
add
push
fcompl
dec
jo
or
insb
dec
fwait
insl
mov
icebp
popa
pop
repnz
cmc
div
insb
movb
push
je
cwtl
fs
cmpsb
jmp
gs
jb
and
imul
mov
mov
xor
icebp
jne
add
or
enter
xchg
dec
je
adcl
cmp
jne
inc
movsb
pop
pop
dec
push
orl
dec
inc
xchg
and
xor
ds
hlt
sub
mov
add
addr16
push
call
xchg
aad
or
or
es
cmp
mov
fidivrl
dec
fstpl
sbb
push
mov
sub
in
das
and
inc
lods
mov
int3
adc
aam
sarb
push
testb
cmp
out
out
cmp
fnstcw
fld
fcoms
adc
sbb
int3
mov
fistps
jbe
xchg
dec
in
mov
lea
test
scas
arpl
lea
xchg
lods
jb
sub
adc
pop
roll
repnz
and
mov
enter
push
inc
std
jmp
push
push
xchg
push
outsl
data16
ja
cmpsb
imul
imul
outsl
outsl
fs
xchg
movsl
mov
cmpsb
imul
cmp
gs
push
imul
fldcw
mov
pop
xchg
gs
dec
inc
popa
arpl
xchg
xchg
xor
sbb
inc
mov
mov
pcmpgtd
cmpb
rclb
pop
sbb
f2xm1
mov
fnstenv
adc
mov
das
jl
push
ds
xor
cltd
mov
enter
mov
ljmp
test
nop
push
adc
loop
jno
cmp
mov
mov
pop
mov
dec
les
jmp
testl
dec
sti
inc
in
in
ret
or
pop
adc
mov
stos
icebp
cmpb
lcall
pop
rolb
mov
dec
sti
inc
adc
imul
nop
iret
xlat
mov
cwtl
push
rep
sti
loop
xchg
in
sbb
ljmp
notb
cmp
ds
push
jnp
mov
movsl
jnp
inc
dec
push
sbb
out
fs
mov
push
or
or
pop
mov
popa
fisubrl
xor
mov
push
fnsave
dec
mov
dec
outsl
fistpll
dec
loope
je
daa
loop
jecxz
jae
xor
dec
ja
or
add
push
daa
jecxz
int
jb
and
arpl
aaa
lcall
push
xor
fcoms
sub
push
sub
shrb
sub
rcrb
cs
or
leave
xor
std
push
xor
mov
adc
je
dec
outsb
jp
push
data16
xor
ja
inc
gs
jg
lea
inc
ror
mov
leavew
insl
lret
ja
cmp
into
int3
and
into
arpl
fstpt
cmp
rcrl
aad
and
sbb
xchg
and
sbb
sbb
cs
shrb
int
fs
push
sub
shrb
insl
push
imul
jb
outsb
fstp
leave
rclb
outsl
jo
jno
jns
pushf
pushf
sub
jae
pop
sahf
cmp
cmp
jne
jbe
adc
xor
ret
sbb
mov
addr16
mov
fdivrs
and
shll
daa
daa
ret
sub
call
jmpw
or
or
or
cltd
ja
sbb
push
movsb
addr16
sbbl
lcall
movsb
sbb
lcall
pop
lcall
and
pop
lcall
pusha
aaa
popa
jb
mov
sbb
arpl
dec
js
gs
fnstsw
lret
mov
sub
push
ja
jb
mov
pop
scas
popa
scas
jae
je
insl
push
in
lea
cmp
sbb
push
rcrl
lcall
sub
arpl
ja
or
testl
inc
mov
iret
jne
addl
dec
nop
mov
jb
push
dec
fstpl
and
pop
outsl
mov
adc
pop
mov
or
in
push
push
pop
sahf
adcb
xchg
call
add
inc
cmpsb
jmp
push
or
or
lock
int3
stc
sahf
jmp
cmc
enter
std
push
or
orl
pop
push
jmp
cmpsb
jmp
fs
imul
dec
lods
jmp
jmp
pushf
pushf
pushf
in
in
out
repnz
lods
sbb
ds
xchg
dec
shrb
push
shlb
sahf
sub
shrl
aad
pop
stc
in
xchg
and
stc
fdivr
fyl2xp1
and
sub
cmp
jbe
movsl
mul
vunpcklps
clc
leave
inc
leave
clc
fdivr
xchg
cmp
and
cli
aad
fdiv
fs
sti
fsincos
paddb
popf
enter
pop
pop
ja
and
testb
cwtl
adc
jae
test
testl
mov
loope
and
testb
divb
rclb
mov
stos
mulb
push
lods
and
ja
or
insb
leave
data16
mov
mov
mov
sub
fnstenv
mov
pushf
pushf
sub
mov
rorb
pushf
mov
sub
leave
popf
sahf
dec
insl
lahf
mov
lods
mov
enter
movsl
cmpsb
nop
das
imul
aad
or
popf
dec
xchg
pop
xchg
dec
xchg
cwtl
popf
lea
test
fxch
shrb
imul
mov
mov
mov
mov
add
div
mov
repnz
out
clc
jecxz
cld
rol
inc
sahf
pop
aam
mov
mov
fs
inc
mov
pushf
nop
in
or
movsb
jb
popa
nop
mov
sbb
mov
pop
es
pop
test
pop
js
mov
or
hlt
nop
dec
lock
inc
push
hlt
fdivr
stos
dec
push
js
xchg
mov
mov
adc
sbb
ds
js
dec
js
add
dec
scas
call
call
jmp
add
jmp
mov
pop
mov
push
neg
push
cmp
mov
xor
int
sub
xor
sbb
dec
test
vmwrite
sbb
cli
sbb
ds
enter
mov
mov
orb
jge
pop
nop
add
fs
adc
mov
pop
xchg
push
sbbl
xchg
ds
mov
loopne
xchg
or
test
sub
addl
jno
mov
lret
jae
cs
or
dec
xor
xor
pop
adc
mov
aas
shl
enter
mov
mov
xchg
out
cmp
and
int3
cmpsb
stos
add
inc
inc
push
in
mov
rcll
lahf
inc
popf
mov
fwait
inc
mov
sbb
mov
out
in
xadd
pop
xor
sbb
add
pop
push
add
jne
rorb
push
scas
sbb
push
cltd
fdivrl
cmp
inc
push
push
mov
call
xchg
fcmovne
aas
dec
adc
mov
dec
enter
cwtl
add
sub
nop
lods
mov
jne
mov
into
add
adc
sub
xchg
fs
or
jl
or
pop
cmp
push
int
pop
dec
sub
movl
js
jae
jo
mov
imul
pop
sub
inc
nop
bound
das
xor
ljmp
xor
mov
movsl
sahf
imul
pop
pop
inc
sub
sub
mov
mov
orb
or
cmpsb
mov
xor
mov
add
xchg
gs
xchg
rolb
in
pop
mull
mov
mov
stc
cmpsl
test
or
push
cs
push
dec
and
pop
shl
sahf
bound
repz
out
mov
add
push
imul
stos
lcall
jnp
fsubrs
jns
xlat
lret
dec
xor
pusha
or
rcl
aad
int3
push
lret
push
cltd
or
fdivl
aam
or
push
out
jnp
xlat
fmul
call
pop
lret
test
int
add
fs
and
fbstp
jo
rol
ljmp
lcall
dec
mov
imul
scas
cwtl
mov
enter
int
sbb
in
or
mov
or
jg
pop
hlt
push
fisttps
dec
and
adc
push
call
out
inc
cmp
add
xchg
test
push
add
xchg
add
xchg
leave
je
xor
dec
call
ror
inc
lahf
in
pop
inc
cmpsb
imul
cs
loope
xor
push
push
call
out
jne
subl
push
add
and
pusha
cltd
mov
mov
adc
hlt
or
jmp
add
xorl
iret
stos
std
call
stos
dec
xor
out
shll
push
mov
jl
aas
pop
push
sub
cwtl
arpl
inc
clc
and
cmp
sbb
scas
into
popf
std
jo
call
xor
popf
decb
mov
jge
scas
push
pop
les
sbb
stos
jo
add
fcmove
cmovge
mov
mov
aaa
je
add
push
daa
add
push
ret
mov
pushf
and
inc
mov
mov
test
shrl
jo
adc
movsb
push
mov
imul
cmp
push
adc
adc
int
flds
divl
cmpsb
adc
add
sbb
and
call
fstl
push
cmp
adc
jge
ja
mov
fstl
push
mov
int
sbb
loopne
shlb
pop
movb
push
pop
cmp
xor
sub
sub
mov
lret
outsl
mov
mov
pop
adcb
jbe
push
dec
push
inc
inc
and
xor
movsl
cmp
pop
insb
arpl
ss
fisttps
adc
cmp
shrl
loopne
and
idivb
xchg
push
push
andl
outsl
int3
mov
mov
and
std
adc
mov
push
je
mov
adc
test
pop
cltd
fscale
ret
dec
adc
sbb
and
add
call
loope
push
mov
test
mov
lret
in
mov
roll
sub
inc
popl
mov
and
mov
or
shl
in
cs
ds
or
push
add
cli
incl
shl
xor
pusha
adc
mov
push
cmp
mov
stc
pusha
jmp
push
insl
push
aad
bound
jmp
jae
sbb
mov
push
cmc
fadds
adc
adc
pushf
and
mov
aad
cmc
sar
imul
pop
push
ja
inc
call
or
xchg
das
pusha
push
xlat
lods
push
mov
cmp
jmp
push
pushf
pusha
cs
add
or
test
pop
popf
dec
shll
outsb
or
int
jb
fisubrs
sub
mov
dec
inc
inc
fs
pushf
sub
mov
arpl
ror
adc
popa
gs
lret
inc
test
cs
outsb
sub
sub
jae
gs
push
loop
sbb
loopne
mov
mov
data16
inc
or
mov
leave
movsl
ljmp
sbb
daa
ljmp
fucomp
xor
hlt
inc
jne
jl
dec
add
cs
mov
sbb
dec
imul
add
push
mov
dec
testl
push
add
or
mov
add
movlhps
push
sbb
add
jg
out
mov
add
mov
imul
adcl
and
jecxz
push
push
push
test
addr16
call
push
push
jbe
dec
jge
mov
fcmovnbe
sub
pop
mov
and
mov
cwtl
into
and
adc
sbb
sbb
pop
push
pushf
cmc
xchg
test
xchg
dec
inc
sahf
xchg
sbb
loopne
jge
push
or
in
sahf
pop
inc
les
lcall
popa
popa
mov
mov
loop
negb
popa
xor
mov
sub
ss
fcomi
mov
mov
sbb
push
push
pop
hlt
inc
cmp
jae
fdivrs
fs
int3
les
sahf
add
mov
xchg
out
xchg
adc
cmp
fs
ds
xor
jecxz
inc
lret
add
lahf
add
mov
inc
enter
inc
pop
fwait
lods
pop
xor
sbb
subl
cmp
out
jmp
je
inc
pop
mov
pop
mov
sub
and
mov
pop
sbb
add
into
sbbb
in
fadd
popl
ss
xchg
and
cmp
fbld
fimull
sub
jl
and
call
cmpw
mov
cmpl
adc
mov
sub
xorl
jl
je
mov
sbb
jb
cmp
jge
jo
testl
dec
or
imul
push
cld
mov
add
mov
mov
sub
dec
dec
inc
mov
jmp
inc
dec
sbb
jle
insb
cs
mov
xor
lret
add
jg
stos
mov
add
insb
popa
pop
add
test
pusha
stos
sbbl
clc
mov
fcomp
lcall
adc
jne
mov
sub
mov
lods
xor
mov
add
dec
mov
mov
jnp
lea
shr
jle
movzwl
das
add
mov
jne
daa
add
movl
cli
add
push
adc
in
sbb
push
pop
inc
lar
adc
lock
add
or
sub
mov
mov
inc
adc
ja
cmp
xor
lcall
stos
inc
lcall
inc
inc
cmp
jl
add
jmp
cs
push
xchg
sti
test
cmp
inc
add
sbb
jbe
jno
inc
inc
jo
push
jo
dec
je
jbe
sub
adc
loop
inc
adc
lock
aad
inc
inc
xor
je
and
or
ja
add
push
scas
jb
jo
imul
adc
sub
mov
inc
inc
push
mov
mov
add
xor
lock
xor
andl
jle
sbb
add
mov
and
aaa
fwait
add
inc
aaa
pushl
xor
cltd
stos
push
sbb
xor
push
ja
or
les
mov
jae
xchg
and
sub
cmpsl
adc
sub
cltd
cld
les
or
push
mov
adc
test
dec
aaa
adc
mov
inc
testb
outsb
out
pop
and
inc
sub
mov
shr
or
adc
xor
xor
mov
test
cmc
inc
push
inc
xchg
xor
enter
push
sub
mov
xchg
mov
pop
cmp
mov
mov
sub
xchg
mov
mov
rcll
or
and
xchg
insb
add
lds
scas
gs
jo
js
mov
jb
bswap
mov
jb
pop
push
adc
pop
loopne
mov
mov
repnz
popf
insb
lret
push
sub
mov
call
and
pop
xor
mov
and
sub
mov
subl
jne
rorb
or
addr16
adc
daa
xchg
out
pop
shlb
adc
into
or
mov
or
in
adc
dec
test
and
and
or
cmp
cmp
cwtl
push
aad
je
rol
movsb
xchg
rclb
cmp
pop
ret
push
lahf
jmp
inc
aam
stos
and
mov
and
and
inc
jbe
or
mov
push
sbb
jl
xchg
fnstcw
fcomps
dec
adc
add
les
push
sub
jb
mov
cmp
mov
stos
or
and
or
mov
psubsb
and
inc
push
sahf
pop
or
sbb
scas
inc
je
sahf
ss
fwait
jbe
dec
push
aam
mov
pop
leave
and
lods
bound
stos
pop
mov
scas
mov
cmp
sub
movsl
sub
xchg
add
je
ret
test
or
jnp
xor
push
adc
adc
inc
jl
fisttpll
jle
enter
push
js
mov
sti
mov
or
mov
pop
stos
push
addr16
sbb
out
lods
decb
add
cwtl
out
xor
mov
push
jmp
fbstp
jg
or
inc
cmp
iret
mov
scas
sbb
pop
sbb
add
push
das
call
bound
inc
ss
inc
add
iret
movsb
ljmp
xor
pusha
xor
xchg
test
stos
leave
cmp
xchg
lret
insb
inc
inc
inc
int3
int
aas
repz
xchg
movsl
sbb
sar
ret
ret
and
jne
jne
pop
push
push
push
xor
pop
xchg
pushw
push
sbb
and
inc
gs
xchg
gs
jns
gs
sbb
xchg
js
test
cmp
inc
sbb
cmpsb
lds
mov
mov
lods
push
je
mov
xchg
pop
adc
mov
xor
xchg
mov
push
test
jle
and
inc
shlb
enter
sbb
stc
call
aas
js
cmp
push
xor
xorl
add
sub
pushf
sub
add
xor
ret
inc
mov
add
in
test
adc
and
gs
mov
jg
pop
pop
inc
or
sub
hlt
nop
xor
lcall
pop
xchg
gs
insb
outsl
xchg
gs
xchg
jb
jb
gs
adc
jge
xlat
and
adc
lock
fldl
push
sub
xor
mov
mov
iret
adc
lahf
or
xor
repnz
std
pop
lods
icebp
inc
out
je
loope
xlat
mov
push
stc
inc
insb
test
and
sbb
int3
sbb
dec
cltd
sbb
mov
sbb
adc
pop
arpl
push
add
jge
inc
mov
std
sub
mov
push
rorb
mov
fnsave
lcall
jmp
mov
pop
test
push
xor
enter
dec
imull
int3
jmp
inc
ss
fs
movsb
imul
mov
fs
add
sbb
adc
xor
xor
repz
cld
inc
sub
sub
cmp
and
daa
mov
adc
inc
inc
fwait
lret
outsb
push
rcll
aam
ss
lret
cs
mov
mov
dec
jo
or
or
xorb
adc
adc
jb
xchg
xor
test
lea
dec
adc
nop
mov
mov
mov
mov
inc
pushf
add
dec
insb
push
jb
arpl
jae
fs
add
outsl
outsl
insb
push
xor
popa
jo
push
add
fucom
push
imul
and
push
add
jo
pop
xorl
dec
inc
jo
jnp
sbb
outsl
shll
cwtl
add
push
dec
gs
xchg
adc
xchg
cmovbe
arpl
pop
insb
mov
jp
push
xchg
and
std
testl
fs
adc
adc
push
add
movq
push
jb
rorb
mov
inc
mov
in
fcmovnbe
bound
sub
imul
in
add
or
and
int
mov
inc
fs
dec
into
add
mov
push
inc
add
or
adc
test
sub
jb
outsb
and
ds
bound
push
push
gs
outsl
xorl
add
lods
mov
pop
jae
into
push
addb
push
pop
push
jg
adc
es
mov
push
push
xor
insl
insl
out
outsb
inc
pop
ret
andb
imul
daa
dec
pcmpeqb
or
and
pusha
xchg
push
mov
clc
add
push
add
sub
or
sbb
push
gs
shrl
stc
je
mov
sub
adc
adc
fcompl
pop
cmp
push
gs
addl
xchg
jge
jecxz
loope
pop
out
jae
pop
mov
insl
popa
mov
divb
adcl
mov
mov
shll
mov
test
cwtl
mov
jle
imul
mov
dec
lahf
inc
add
jns
fbstp
insb
insl
jnp
arpl
jne
xchg
addr16
test
gs
xchg
sarl
fistpl
ja
mov
pop
xchg
adc
pop
dec
or
sub
xor
push
mov
pop
imul
sbb
add
add
inc
mov
push
mov
add
imul
sbb
fcmovnb
arpl
sbb
push
outsb
push
fisubl
or
or
push
inc
cwtl
mov
js
add
jg
data16
push
subl
mov
jo
sti
push
add
sbb
gs
fs
popa
xor
lods
add
faddp
and
inc
pop
pop
and
push
inc
xchg
add
push
shll
push
fiadds
push
mov
sbb
popa
addr16
and
cmp
scas
push
jne
dec
xchg
int
or
add
fwait
mov
push
jae
inc
in
movl
or
and
adc
stos
jnp
and
jb
insl
jecxz
sbb
test
movsl
pop
and
rcr
in
add
sbb
dec
pop
in
pop
add
mov
imul
fildl
push
sub
test
adc
push
movsb
jne
mov
inc
push
pushl
pop
add
xchg
dec
gs
jmp
inc
iret
jb
cmp
idivl
loopne
or
inc
outsb
jne
push
jbe
mov
add
sbb
in
jae
pop
jo
inc
popa
arpl
filds
fcmovne
xchg
push
or
pop
inc
nop
test
testb
lock
add
insl
mov
xchg
or
lret
inc
movsl
arpl
lret
ds
jb
mov
push
data16
daa
mov
pop
addr16
pop
add
imul
xchg
dec
popa
fstpt
add
jns
out
sbb
adc
sub
mov
pop
inc
imul
in
movsl
pop
dec
aas
aas
xor
inc
pop
push
add
out
addr16
jae
nopl
sbb
mov
pop
dec
sbb
push
and
inc
mov
or
or
insb
out
lea
out
sub
lret
in
or
loope
pop
jbe
pushf
jmp
mov
ret
xchg
dec
add
adc
outsl
rep
ja
dec
push
push
xchg
adc
adc
dec
cmp
sbb
jle
dec
insl
push
inc
scas
adc
outsl
lret
mov
outsb
sbb
dec
add
push
loopne
cmpsb
mov
adc
sub
cwtl
xor
push
popa
jbe
inc
insb
add
orl
imul
dec
push
dec
xlat
leave
sbb
outsl
cmc
arpl
stos
shr
setns
lret
pop
xlat
call
ret
lods
pop
add
call
clc
rol
cmc
sbb
in
fiadds
loop
cmc
sub
call
inc
icebp
sbb
and
jbe
stc
in
pop
fistps
add
sbb
pop
mov
or
inc
adc
inc
or
lret
and
sbb
sub
xor
push
inc
shll
cmp
add
pop
cmp
xchg
stos
lods
and
sbb
pop
sbb
jp
jae
pop
fwait
sbb
inc
mov
mov
adc
test
jae
or
add
aad
push
xor
cmp
leave
mov
dec
fs
jp
iret
hlt
or
push
test
dec
ljmp
xorb
jno
and
pop
pusha
push
aaa
daa
inc
cmp
dec
jl
inc
jl
es
push
call
in
mov
jecxz
addr16
pop
sbb
lds
in
jp
add
ret
shrb
das
bound
pop
mov
test
xchg
in
ljmp
adc
lds
push
dec
xlat
jne
repz
inc
xchg
insb
ja
pop
lds
or
adc
inc
adc
scas
test
mov
inc
mov
lds
xchg
lret
push
dec
mov
outsb
cwtl
pushl
and
fisttps
stos
in
cmp
pop
insl
push
lods
imul
push
add
into
xor
add
push
mov
fbstp
adc
adc
add
or
mov
pop
xchg
or
sbb
add
and
test
pop
rorl
add
shll
aad
es
push
mov
and
call
rcr
clc
pushf
and
jmp
shl
jmp
add
lret
pop
mov
rorl
jmp
or
stc
outsb
cmpsb
stos
jmp
enter
sub
mov
not
mov
sub
fadds
neg
dec
push
jmp
call
not
sbb
std
xlat
and
push
call
mov
add
mov
pop
inc
lods
std
mov
adc
int3
testb
vpmacssww
daa
sub
sub
fcomps
or
mov
push
cmp
call
mov
fwait
stos
cwtl
ja
pushf
bt
mov
mov
sti
sub
mov
xor
les
cli
lods
push
adc
in
xor
xlat
jne
jle
lods
shrb
push
arpl
jmp
stos
pushf
daa
fnstsw
ret
les
pushf
pop
add
test
fisttpll
jmp
enter
mov
cmp
popa
add
lock
push
rol
inc
mov
mov
loop
ret
loopne
stos
add
or
out
xor
sub
in
imul
push
jge
jb
clc
add
jmp
jne
adc
mov
push
call
sub
call
insl
clc
mov
jae
dec
adc
jbe
sarl
cwtl
mov
incb
call
and
mov
cmp
call
mov
mov
add
push
xor
not
pusha
ss
fcmove
stos
sub
push
push
add
push
lods
pop
sbb
mov
incb
mov
pop
mov
add
imul
movsl
inc
push
dec
and
sub
clc
into
stos
jp
dec
in
scas
stos
mov
xchg
in
nop
pusha
cmp
mov
push
xlat
dec
call
lds
jge
repnz
rol
pushf
or
insl
sarb
sub
push
add
out
mov
inc
add
addl
cltd
call
fistpll
dec
sub
call
pusha
inc
jb
int
jnp
jmp
adc
adc
iret
or
push
or
push
adc
insl
fwait
pop
cs
add
or
mov
testb
mov
je
xor
scas
jmp
or
pop
lds
add
xchg
pcmpeqb
and
idivl
pop
jnp
cmp
or
je
add
sub
lret
fisubs
pop
prefetch
mov
mov
xchg
adc
scas
lret
mov
imul
out
mov
xchg
cmp
dec
jle
adcl
nop
push
iret
ja
push
out
mov
push
pop
popa
out
mov
pop
jae
mov
lret
movq
out
pop
sub
out
dec
fidivrs
negl
out
sbb
fsubp
mov
pop
jnp
idivb
lock
sbb
cmp
add
pop
stos
push
out
or
aas
nop
in
divl
and
lret
pop
pop
mov
mov
fistps
sub
rol
mov
loope
mov
cmp
pop
dec
ja
aaa
popa
idivb
dec
pop
pop
pmaxub
imulb
pop
jge
mov
stos
pop
out
stc
jnp
sbb
inc
daa
sbb
push
das
fstps
ja
jge
incl
lcall
dec
leave
fidivrs
mov
pop
jnp
ja
jnp
push
jae
adc
mov
decl
cvtdq2ps
filds
neg
dec
dec
add
and
lock
mov
scas
cmp
aas
mov
hlt
js
fwait
sub
dec
xor
out
sbb
sub
jecxz
negl
fwait
das
filds
pop
push
scas
jae
pop
mov
sti
cmpsl
div
xlat
push
xchg
outsl
pusha
sbb
mov
das
push
pop
insb
icebp
mov
cmp
jmp
ja
fcoms
pusha
xchg
popa
and
mov
aaa
jo
inc
icebp
jmp
or
push
jo
jle
cwtl
bswap
rcrb
fcomp
jp
cwtl
lock
mov
std
or
out
or
rol
das
dec
mov
std
adc
ret
add
rol
stc
clc
push
push
push
xor
imul
iret
push
inc
pushf
orl
sbb
sub
mov
out
fistps
fimull
mov
jne
subb
add
sar
decl
rol
and
xor
clc
ror
call
mov
ljmp
ss
or
rcrb
mov
push
push
mov
fbstp
mov
add
pushf
cmp
clc
sbb
pop
call
call
cwtl
pop
fdiv
pop
bound
add
inc
pop
jne
mov
cmp
int3
jmp
sahf
cmp
sub
lods
add
pushf
shlb
sbb
cli
movsb
mov
cwtl
into
test
and
test
test
push
jmp
call
add
dec
cmpsw
mov
mov
subb
dec
jmp
movb
nop
xchg
or
aam
mov
mov
fucomip
loop
ret
lods
lret
es
mov
mov
aam
call
cmc
or
mov
psubb
ljmp
xchg
push
inc
mov
insl
cmpsb
mov
loope
add
lret
cltd
vpshuflw
jae
mov
mov
test
xchg
inc
sub
int
shl
jmp
inc
jae
cmp
and
pop
pop
data16
in
jmp
out
fcoms
data16
sub
jo
jmp
call
cmp
push
into
cmp
cmp
rorb
sti
vhsubps
cld
cld
mov
push
ficomps
loop
dec
add
adc
call
lds
loopne
ss
not
es
mov
mov
and
call
and
in
adc
mov
or
and
jbe
mov
adc
mov
int
xchg
clc
cmp
test
pusha
leave
stc
cmc
les
or
or
arpl
lret
rcr
xorb
jmp
sub
add
loop
mov
pushf
and
push
repnz
mov
movsl
shr
xor
test
stc
cmpsl
pusha
jb
xchg
fsubrs
mov
ss
lret
frstor
mov
inc
cmp
not
push
shl
out
call
add
add
jnp
xor
ljmp
sub
shr
lea
loopne
adc
idiv
dec
test
dec
jmp
lds
icebp
dec
pop
test
xchg
cmp
data16
incl
insb
decl
or
push
call
jo
shl
fcomi
dec
shrb
xor
lret
inc
setae
outsb
jae
das
sbb
mov
aad
or
aad
rorb
push
sub
cmp
pop
fstl
mov
sbb
shlb
mov
cmp
inc
mov
shl
cwtl
sub
iret
je
outsl
adc
xor
add
mov
mov
dec
cld
add
movsb
and
push
adcl
iret
xor
mov
push
psraw
std
push
lea
call
push
test
lret
or
incl
ror
rcr
test
mov
xor
idivl
insl
push
stos
std
fistpll
jno
and
mov
outsb
lea
pushf
push
push
jbe
pushf
ljmp
xchg
or
mov
not
std
lea
jbe
sbb
rcrb
jmp
sti
shl
rcr
jnp
add
sti
push
test
mov
movsb
mov
push
cmp
loopne
cmp
pushf
push
mov
clc
inc
ja
inc
push
cwtl
mov
mov
jmp
sbb
fdivs
pop
in
pushf
sbb
mov
notb
cmc
call
sbb
das
arpl
pop
pushf
fsubrp
mov
adc
add
sbb
loope
insb
call
jo
and
data16
scas
sbb
mov
xchg
xchg
push
xorl
jnp
inc
push
xor
and
pop
cmpsb
pop
push
cmp
mov
jle
xchg
pop
push
imul
jo
push
sahf
mov
aam
push
jbe
cli
sub
das
add
shr
stc
cmp
sub
jmp
hlt
add
aaa
ret
pop
das
in
nopl
loopne
push
ss
jmp
int
imul
das
push
shlb
jge
rcrb
sbb
inc
js
jnp
add
fcomps
hlt
xchg
call
daa
mov
sub
add
jae
pop
xchg
cli
stc
shr
adc
ret
mov
pop
xchg
test
rorl
std
jno,pt
jmp
pmulhw
fidivrs
aas
incb
lahf
and
jmp
xor
sbb
sahf
dec
cli
jmp
or
mov
popf
fisubrs
jmp
and
in
popa
stos
inc
in
imulb
jg
aas
cld
pushf
stos
repnz
xorl
std
mov
call
imul
enter
mov
inc
cmp
push
shll
and
cmp
dec
test
fcmovbe
icebp
imul
jo
jns
lock
pushf
sbb
inc
shrb
mov
out
sbb
fsubl
add
cli
push
aam
addl
or
adc
mov
sub
popa
push
test
inc
aaa
mov
push
cmpsl
fiaddl
or
inc
mov
xor
sub
popl
adc
sub
aaa
mov
xchg
insl
pusha
pop
adc
jg
lock
loop
mov
stc
cmp
addl
or
push
push
loope
and
jg
iret
outsl
jns
sub
call
jp
aas
or
pop
insb
inc
popf
adc
cld
jnp
inc
mov
add
repnz
sahf
and
mov
cmp
dec
jmp
shl
ret
cmp
pop
insb
iret
clc
jmp
mov
es
adc
mov
ret
out
mov
and
in
fistpll
aas
cmpsb
in
test
loope
mov
pop
loope
in
nop
mov
mov
jo
shrl
xlat
or
and
stc
aad
mov
adc
fnstsw
std
inc
xor
imul
dec
and
jne
xchg
cld
sbb
sbb
loop
mov
xchg
add
push
xchg
lea
outsl
add
pop
sub
std
cmp
inc
popf
mov
jnp
sbb
pop
mov
xor
lcall
and
mov
adc
test
dec
or
fistpll
jl
cld
fisubrl
cltd
dec
or
push
pop
loop
cltd
adc
loope
or
insb
int
lahf
and
xchg
jmp
aaa
shrb
mov
push
and
mov
sub
xchg
int3
cli
into
mov
out
sub
fstl
out
jnp
loopne
loope
jmp
jno
xor
iret
push
insl
fs
call
push
fwait
cmc
aad
sub
popa
mov
in
clc
ror
and
pusha
clc
clc
repz
sbb
loope
arpl
pop
pop
decl
and
dec
pop
mov
push
add
mov
xchg
mov
xor
and
mov
mov
std
cmp
cli
shlb
or
inc
loope
cmc
adc
out
roll
fcmovnu
arpl
repz
repz
rclb
rclb
insb
sbb
sbb
ret
bndstx
or
add
add
outsl
pop
pop
fcoml
sbb
bt
mov
or
mov
push
lock
ret
inc
shlb
mov
sbb
loop
hlt
data16
das
mov
and
sti
ja
mov
jmp
push
rorl
xor
mov
push
or
mov
lahf
hlt
mov
mov
popa
jg
pusha
push
out
mov
fs
inc
sub
outsb
xchg
pop
inc
pop
add
jb
scas
out
test
push
mov
andb
or
movsb
das
fs
mov
in
jbe
fstpt
cmpsb
stc
aaa
inc
sti
out
adc
sub
sub
push
dec
jge
add
adc
xor
in
pusha
push
dec
xchg
add
out
jnp
shr
test
jmp
cbtw
mov
pushf
mov
cwtl
maxps
dec
mov
daa
roll
sub
data16
push
cmc
sahf
loop
mov
push
clc
adc
push
sbb
or
or
xor
out
addl
fldt
push
subb
adc
stc
fiadds
rcrl
adc
or
and
xchg
dec
call
sbb
inc
js
pushf
scas
push
inc
idivl
pop
sub
mov
pop
arpl
pop
mov
int3
pop
sbb
jae
iret
or
dec
xchg
pushf
cld
je,pn
mov
pop
pop
xchg
pop
pop
xchg
lret
pop
mov
out
jmp
loop
repnz
push
iret
xor
adc
icebp
sbb
or
aam
cli
sbb
pop
repnz
insl
ljmp
mov
daa
pop
mov
push
mov
jbe
adc
jge
call
repz
aaa
pop
xchg
popa
enter
cmpsb
clc
mov
aaa
imul
adc
sub
add
sahf
clc
or
push
call
in
std
je
cmp
fidivl
nop
rorb
xchg
xor
call
fldl
clc
inc
shlb
shrb
sahf
add
sti
and
sbb
xchg
push
pop
push
jo
jl
jo
divb
insl
inc
or
adc
cmp
ss
aas
cmp
inc
xor
out
outsb
stc
push
push
cmp
jp
fsubrs
shlb
pop
pop
lcall
insl
enter
sub
lds
or
mov
push
ret
pop
fsubrs
mov
dec
jle
pushl
or
push
push
dec
into
push
or
xor
mov
mov
jo
mov
cmp
pop
js
mov
neg
push
pop
std
sbb
fucomip
out
cs
jo
dec
xor
ja
mov
xchg
jbe
repz
add
mov
sbb
push
push
clc
aam
inc
or
fnstsw
idiv
stos
xor
adc
jg
jl
stos
scas
pusha
or
sub
and
ljmp
mov
mov
cld
mov
jecxz
pop
cmp
incl
dec
mov
xchg
jo
pop
jae
push
fcmovnbe
push
jmp
and
jmp
cmp
sub
mov
shlb
mov
movsl
mov
push
xchg
push
insb
stos
push
mov
mov
mov
popa
add
mov
inc
popf
dec
sbb
xor
cmp
sbb
ds
sub
adc
mov
stc
out
jg
xchg
and
mov
out
test
mov
jne
mov
jo
cwtl
lds
jg
or
insb
xor
cld
shll
repnz
in
shlb
cmp
pushl
insb
xchg
mov
adcb
andl
std
jg
dec
mov
fprem
scas
push
and
lods
sbb
push
or
out
lcall
xchg
adc
insb
pushf
fsubrl
scas
mov
push
push
pop
and
mov
push
xchg
inc
lods
sub
fadds
dec
fdivp
jbe
dec
pop
data16
jg
jmp
dec
mov
pop
mov
adc
sbb
ret
repz
mov
lcall
and
lods
mov
jns
add
push
shll
push
out
hlt
repnz
inc
fildll
and
stos
test
in
xchg
fstl
xor
pop
enter
popa
sti
call
inc
add
jns
jmp
fistpll
add
aas
and
jmp
and
lock
rol
int3
unpckhps
sub
dec
ljmp
in
je
sbb
mov
loopne
inc
cmpsl
and
fldenv
hlt
lret
ljmp
jae
pop
jmp
push
jne
daa
sti
mov
mov
dec
pusha
enter
cmp
scas
inc
dec
inc
fdivrl
sbb
popf
ja
xlat
mov
aaa
lock
mov
aas
mov
fcmovnbe
andb
xlat
mov
loopne
xor
nop
pop
adc
call
xor
pop
sahf
arpl
push
stos
aas
jp
mov
pop
sub
scas
push
outsl
or
loope
adc
sub
lcall
rolb
sub
xor
aam
jns
test
inc
mov
call
dec
rcll
xchg
lret
jno
adc
jle
lea
mov
imul
incl
mov
clc
lret
dec
lret
or
ret
lock
gs
xchg
mov
mov
xor
inc
mov
cmpb
fstps
popa
in
mov
movsl
jmp
and
decl
mov
push
ret
push
or
in
in
mov
repz
cli
jg
push
aas
xor
cmp
adc
mov
mov
sbb
adc
into
test
and
or
sub
lock
inc
jg
idiv
mov
or
and
and
inc
xchg
stos
pop
add
icebp
or
mov
orb
jno
push
push
fidivrs
imul
ljmp
jno
shrl
sarl
sbb
inc
sbb
jno
dec
cld
jmp
and
fisubrl
sbb
push
push
lret
adc
sub
fsts
lock
jg
negl
in
jl
mov
add
test
addr16
xchg
push
pop
stc
sbb
negb
icebp
push
cmp
lods
scas
jmp
sbb
push
lret
in
xchg
outsl
mov
mov
sbb
pusha
xchg
fucomip
ss
dec
sbbl
mov
mov
push
rorl
bound
push
ljmp
xchg
cmp
xor
sbb
call
or
lcall
push
dec
inc
cwtl
out
xchg
add
push
iret
pop
inc
aad
daa
aam
in
xchg
filds
je
pop
jnp
add
push
inc
sti
jle
scas
jae
sar
or
adc
ret
cmp
out
jecxz
mov
loopne
mov
push
inc
adc
jmp
and
aam
mov
lcall
ljmp
ljmp
jmp
les
pop
popf
push
dec
push
ljmp
scas
ret
es
push
pop
xor
test
and
int
mov
sbb
testb
dec
pop
shlb
mov
iret
rcrl
pop
pop
loop
decl
cwtl
cmp
cmp
cmp
iret
mov
out
inc
ror
pop
and
push
and
adcb
cmc
int
test
mov
pop
sbb
push
loop
pop
and
fldt
dec
rcr
xchg
mov
sub
lock
sub
rcrl
enter
cmp
ja
dec
mov
lock
call
lahf
mov
fstp
insl
adc
adc
mov
sbb
and
daa
shlb
mov
outsl
outsb
lods
xchg
mov
out
ret
and
mov
decl
and
shrb
into
in
mov
lock
mov
adc
cmp
lea
decb
shll
xlat
cli
lock
xchg
clc
xchg
mov
je
mov
ffreep
into
pop
icebp
xchg
decl
jmp
mov
pop
inc
pop
nop
inc
sbb
icebp
push
push
scas
jecxz
adcl
cmpb
out
or
xor
lahf
dec
sub
push
sbb
aas
adc
dec
push
ret
jg
ljmp
mov
mov
push
pop
sbb
cmp
nop
dec
adc
ret
ja
or
cmp
push
mov
and
push
idiv
jmp
or
out
sti
xchg
push
and
push
xchg
cmc
sub
sbb
scas
adc
stc
jo
les
popf
adc
pop
mov
test
push
icebp
push
jae
push
jg
addl
mov
cltd
pop
popa
pop
or
jo
inc
cmp
test
sahf
and
mov
inc
pop
lock
inc
push
ud2
dec
je
pop
jge
aaa
ret
add
cmp
or
std
out
cmp
pop
pop
out
dec
out
jnp
fsubrl
jnp
adc
or
jo
lcall
stos
scas
xor
mov
out
sub
imul
pop
jo
pop
mov
imul
test
pop
loope
lods
or
inc
cmp
mov
xchg
outsl
lea
pop
insb
jmp
dec
xchg
push
popf
cmp
pop
loopne
ljmp
sbb
jg
inc
push
push
add
add
int
sbb
push
inc
mov
aam
push
mov
bnd
adc
test
cmp
jle
mov
pushl
push
maxps
sbb
push
scas
mov
cld
mov
push
or
jg
xchg
in
aam
in
add
fnstsw
pushf
stc
cld
movsl
mov
cwtl
cltd
fst
push
push
mov
stos
popf
test
sbb
add
mov
fnsave
push
fcomp
sbb
popf
ret
jae,pt
add
add
pop
add
cmp
decl
or
or
test
and
and
mov
mov
insb
cmp
imul
lahf
aad
int3
adc
push
mov
enter
jl
mov
add
adc
icebp
hlt
icebp
in
loop
scas
call
insb
stos
or
iret
push
dec
mov
mov
jo
pop
cmp
mov
in
sbb
sub
xor
fnstsw
push
scas
scas
outsl
iret
call
mov
out
div
push
in
insb
dec
cld
shlb
jg
lods
dec
pop
pop
inc
cli
sub
sub
std
test
aas
adc
sub
push
addr16
in
das
push
filds
aam
sub
push
jp
gs
sarb
xor
pop
icebp
ljmp
mov
dec
pushf
sub
pop
stos
std
pop
mov
dec
movsl
mov
out
fcomi
or
ret
push
sbb
sar
aaa
push
jbe
cmovno
hlt
dec
movl
gs
push
std
sbb
fisubrl
jg
pusha
adc
mov
or
call
add
cmp
cmp
xor
jg
stos
repnz
enter
test
push
mov
inc
pop
call
xchg
adc
sub
mov
call
pop
or
shr
mov
lock
test
rcrb
pusha
adc
push
imul
popa
sub
call
jae
in
sti
iret
ds
add
inc
mov
or
aas
sbb
or
inc
sbb
aam
adc
lret
push
data16
movb
jle
pop
nop
lds
sub
test
scas
cld
inc
push
cld
sbb
cmp
dec
jg
sub
adc
clc
incl
std
xlat
into
scas
paddq
les
mov
testb
or
out
push
push
xlat
stos
outsl
mov
inc
decl
jns
call
out
sbb
movsb
outsl
jo
pop
outsl
pushl
add
addr16
stc
jl
test
rcrl
add
push
decl
inc
popf
xor
pop
cmpsb
mov
inc
divl
mov
fidivl
push
mov
in
js
stc
popf
and
out
loop
outsl
and
dec
xchg
stos
adc
cld
test
fs
in
pushl
or
cmp
mov
movsl
inc
in
pop
jge
clc
push
or
outsl
push
mov
stc
pop
insb
loope
jno
adc
pop
lret
add
mov
cltd
mov
scas
and
jecxz
jle
xchg
push
add
fistpll
loope
mov
int3
rcrl
cltd
and
out
lcall
cld
jmp
mov
dec
push
lahf
sbb
xor
jb
xchg
mov
pop
adc
ljmp
cmp
and
rclb
pop
or
jg
lea
pop
repnz
in
stos
sbb
rolb
inc
cltd
je
and
sbb
int3
sbb
out
fdivr
mov
jl
ljmp
or
psubusb
and
leave
mov
xchg
pop
push
mov
and
out
cli
das
push
aaa
adc
loop
sbb
dec
pop
cmpsl
push
adc
pop
pop
sti
inc
xchg
sbb
std
int
movsl
andb
adc
shll
filds
or
aaa
mov
std
mov
and
pusha
jmp
add
das
pop
sub
mov
jp
xchg
cli
lods
mov
ret
sti
aas
inc
ja
cmp
push
dec
dec
xchg
jnp
sbb
ljmp
out
test
and
stos
mov
outsb
sbb
inc
cli
in
push
and
aad
ljmp
mov
imul
int3
xchg
clc
pop
or
je
sbb
jg
mov
sbb
out
pusha
gs
jns
leave
int3
mov
imul
jg
pop
mov
pop
add
test
or
push
out
pop
sarb
js
cmc
cmp
xor
inc
fldenv
testb
sbb
in
incl
std
shlb
pop
cld
loopne
imul
mov
aas
clc
decl
push
jns
sarb
pop
cmp
sub
fld1
es
adc
mov
out
adc
and
call
sti
mov
cmp
sub
cmpsb
popa
jbe
shlb
popf
mov
in
sbb
cmp
push
rcrl
es
mov
and
outsl
pop
pop
lret
dec
inc
rcrb
leave
adc
push
dec
sub
in
outsl
cmc
hlt
add
dec
xor
aad
in
mov
jmp
xchg
mov
jmp
sti
addb
jnp
enter
push
and
or
loopne
xchg
or
push
xchg
mov
std
adc
push
popa
add
sbb
pop
pop
jg
test
pop
cmp
pop
cs
cld
xchg
fmull
jae
unpckhps
ret
cli
sbb
mov
call
jmp
jb
in
xor
pop
jne
ret
cmp
mov
xor
insb
jno
pop
sub
jmp
dec
mov
jmp
call
in
mov
std
push
call
push
push
xchg
mov
cld
and
dec
es
mov
fwait
cltd
cld
cmpsl
sbb
xor
mov
in
or
lods
cmp
out
pop
jl
inc
sti
pop
pop
lcall
add
and
adc
mov
fnsave
insl
iret
jp
call
scas
push
jmp
jg
into
std
jg
aaa
imul
punpckhdq
mov
iret
mov
daa
adc
aas
jl
test
inc
cmp
dec
mov
stc
push
ljmp
stos
inc
mov
mov
cmp
xchg
mov
pop
dec
xlat
ret
iret
ljmp
pop
addl
push
cmpsl
mov
jp
stos
xchg
pop
cli
ljmp
inc
arpl
outsb
cs
sbb
loopne
and
push
ja
jb
ficompl
mov
pop
xor
shlb
cmp
xchg
cmp
aad
leave
fldcw
cld
push
add
movsb
mov
popa
mov
sbb
or
and
add
pop
jmp
cmc
sub
andb
xchg
push
mov
push
jb
ljmp
ret
xchg
mov
sub
and
xor
add
mov
popf
jae
xlat
in
mov
dec
sbb
dec
insl
test
sbb
inc
adc
lcall
leave
mov
xor
dec
cwtl
mov
xchg
sti
imul
push
in
and
and
and
sub
inc
jns
cltd
cmp
fldln2
jge
decl
jl
or
or
andb
fisubrs
pop
mov
push
pop
clc
call
cmp
ljmp
xor
jg
call
rclb
mov
popa
dec
push
sub
jl
xchg
sub
inc
nop
adc
lahf
out
inc
pop
adc
mov
xchg
cmpsl
mov
lret
movsb
imul
push
mov
hlt
inc
arpl
popf
enter
mov
jle
and
das
icebp
inc
lcall
imul
mov
mov
aam
jmp
decl
xchg
jo
popa
jbe
jbe
rcrb
inc
cmc
inc
push
jp
jmp
jg
pop
out
sbb
lock
repnz
cmp
cmpsl
repz
inc
sub
pop
jle
call
in
mov
mov
and
dec
aad
or
cld
ljmp
in
in
and
and
inc
push
or
data16
outsl
cld
mov
cmp
adcl
inc
cltd
inc
out
and
lock
in
mov
data16
mov
sbb
loopne
imul
mov
icebp
and
jne
pop
lahf
fs
adc
push
sub
in
inc
ljmp
ret
fldt
add
sar
mov
repnz
mov
push
pop
xor
lret
push
pusha
shll
dec
lods
mov
inc
push
decl
jge
into
int
inc
or
inc
push
fwait
jnp
stc
cmp
inc
xlat
push
lcall
jno
dec
xor
jmp
jae
xor
sti
push
lods
mov
jno
mov
jp
sahf
mov
add
jno
daa
nop
mov
xor
cs
jo
test
dec
pop
mov
mov
pop
jl
loope
mov
shlb
loope
mov
lods
pop
dec
fs
jb
jno
xor
outsl
mov
ljmp
push
cmp
sti
imul
lcall
cmc
fbstp
pop
dec
hlt
sub
negb
cmc
mov
lcall
incl
push
lcall
jmp
movsb
jae
dec
pop
add
dec
pop
loop
jmp
lock
call
jge
aaa
clc
dec
xor
clc
or
adc
sbb
mov
jb
leave
jle
mov
xchg
lds
sub
fildll
roll
fwait
fwait
pusha
or
mov
jmp
aaa
push
dec
dec
jo
pop
mov
lahf
sub
push
stos
pop
mov
and
push
sbb
test
fstpt
xchg
pop
cli
movsl
test
rolb
xchg
cmpsl
repnz
sbb
inc
gs
and
popa
decl
icebp
out
dec
dec
rorl
sub
cmpsl
sbb
jmp
pop
lock
push
mov
out
nop
mov
adc
cmc
jg
pop
in
add
xchg
mul
testl
mov
lods
mov
mov
mov
movsb
xchg
fsts
rcr
loop
test
clc
mov
xor
mov
ror
jl
sti
test
push
dec
and
shrl
in
fs
xchg
pop
cld
cmp
add
negl
addr16
sbb
xchg
gs
sub
jb
repz
cmp
movsb
jecxz
lcall
das
ds
fistps
sarb
sub
mov
jo
add
clc
lahf
imull
movsb
stos
aas
cmpsl
cli
shlb
sub
enter
xchg
mov
push
or
dec
xor
loop
xchg
or
lcall
add
mov
ret
imul
jecxz
loope
test
and
das
jl
push
xchg
or
in
ljmp
je
fcomps
incl
sahf
movsb
dec
out
mov
mov
clc
xorl
jns
push
cmp
add
push
adc
add
mov
sbb
gs
sti
sub
leave
outsl
inc
jmp
andb
int
ret
or
movsl
rcrl
movsb
std
push
mov
push
lods
cmpsl
stc
sub
push
gs
aad
mov
jg
or
leave
adc
cmp
repnz
in
shrb
cmp
and
or
push
ss
push
inc
cld
jecxz
xor
add
push
dec
imul
and
jb
pop
fcmovnbe
shll
add
sti
pop
test
and
push
and
xchg
mov
push
mov
or
fildl
xchg
jo
jecxz
ss
mov
cmp
arpl
enter
mov
fucomip
add
enter
addb
clc
push
fistps
dec
into
fcoms
adc
push
fistps
icebp
push
loope
add
or
inc
fsubp
push
sti
inc
outsl
std
stos
dec
stos
shll
cmp
pop
sbb
sbb
mov
adc
mov
subps
lcall
jmp
ret
inc
xchg
movb
sub
movsl
xchg
fprem
std
push
fstpt
call
dec
js
repz
je
mov
icebp
dec
mov
sbb
pop
push
scas
add
sub
mov
addb
das
jb
and
sub
and
mov
mov
pop
jl
sub
lods
sbb
pusha
cmp
and
iret
mov
call
cli
clc
sbbl
icebp
insb
xchg
inc
loopne
pop
mov
dec
sub
dec
lret
sbb
jg
add
inc
xor
and
sub
sar
pushl
sub
cltd
iret
outsl
xchg
les
pop
mov
lods
mov
ret
ret
xor
cld
incl
dec
shlb
sub
cld
test
pop
in
mov
outsl
insb
xor
les
ss
lods
ss
pop
mov
pushl
add
loope
adc
mov
inc
mov
mov
fisttps
pop
mov
cmp
scas
subl
jb
movsl
jl
cmp
lods
stc
outsb
ljmp
mov
jecxz
xchg
stc
xor
push
add
fmull
sub
je
adc
fistpll
mov
jmp
sbb
sbb
add
jns
pop
clc
sbb
inc
fcoml
xor
push
mov
fstpt
cmp
rclb
or
scas
sub
add
ss
mov
jb
mov
add
imul
xlat
xor
iret
pop
push
or
into
sub
popa
ss
mov
ljmp
int
jns
lret
outsb
test
adc
lret
out
lea
bnd
sar
std
rolb
bound
sub
mov
mov
sti
lcall
or
leave
cmp
dec
shl
push
add
mov
andl
mov
std
mov
pop
xchg
mov
and
mov
lea
mov
push
sub
aas
sarl
ret
push
jecxz
out
rcl
out
shll
cld
fld
dec
ffree
loope
das
adc
addr16
jle
cmc
popa
lahf
jg
xor
sbb
xchg
jbe
aam
mov
sub
fdiv
fyl2x
cld
fwait
sbb
les
adc
mov
jno
jge
adc
outsl
jl
call
das
fldl
hlt
inc
add
pop
mov
aam
and
mov
sbb
jmp
adc
inc
jecxz
mov
dec
sbb
into
fwait
pop
xchg
into
nop
dec
icebp
daa
arpl
repz
nop
adc
cmp
push
iret
add
jne
icebp
inc
sub
outsl
push
mov
ljmp
idiv
outsl
cld
fucomi
pop
mov
jmp
std
pop
jmp
jg
jecxz
xor
fsubl
push
push
pushl
frstor
out
add
bound
sar
mov
loope
sub
adc
or
jmp
vmread
mov
mov
addr16
rorl
inc
repnz
inc
test
decl
push
add
pop
aas
imul
cmp
or
das
aaa
mov
cmc
pop
pushl
jne
or
rorb
mov
sti
pusha
add
or
fnstenv
adc
xorb
pusha
mov
loope
cmp
lahf
adcl
mov
push
mov
and
cmpsb
fldt
test
shlb
lds
cmp
outsb
into
ljmp
stc
mov
mov
sbb
sti
xlat
cs
idiv
decl
xchg
dec
mov
fcomps
daa
dec
fsubrp
fwait
xor
xor
fucomip
mov
adc
pop
or
shlb
std
ljmp
pop
cmc
push
xchg
js
imul
call
push
push
pop
popa
movsb
insl
fsubl
adc
xor
add
push
sti
decl
add
les
lods
fnstenv
mov
sbb
pop
mov
lcall
sub
int3
mov
mov
outsl
push
jmp
xor
sub
mov
loope
jle
scas
scas
push
inc
push
call
clc
bound
cmp
push
mov
fistps
or
aam
shlb
pop
push
xor
int3
shll
sub
hlt
fnstsw
or
sahf
imul
mov
sbb
fucomp
mov
out
adc
sbb
pop
jbe
adc
out
dec
out
mov
or
stos
dec
xchg
jno
xchg
lods
pop
jecxz
out
orl
mov
icebp
ja
std
in
cmp
rolb
rclb
stos
mov
cli
cmp
data16
cmp
or
das
jl
jl
fisttpll
push
sub
cli
sub
mov
mov
lahf
fidivrl
loop
jg
lods
lcall
mov
jmp
lret
cmp
or
lea
inc
inc
pop
sbb
hlt
sbb
fildl
imul
push
clc
loopne
mov
or
and
stc
inc
pop
or
jle
std
or
call
inc
xchg
sub
mov
out
test
daa
pop
dec
fimull
pop
repz
imul
push
test
ja
cmp
push
out
adc
movsb
lds
pop
call
shrb
jle
sbb
cmp
lcall
pop
or
mov
clc
pop
mov
pushf
cmp
dec
sub
aaa
inc
popf
rol
aam
insl
les
movsb
mov
push
mov
fildll
pop
xor
imul
jb
xor
jg
cld
sbb
sub
sti
sub
lods
iret
lock
adc
test
pop
enter
jle
cmp
jo
sub
xlat
stos
cli
fnstsw
subb
outsl
sbb
lock
adc
pushl
and
sbb
rorb
push
xchg
push
jmp
mov
mov
xlat
outsl
hlt
test
out
pop
push
outsl
sub
mov
jmp
cli
call
dec
test
es
repz
mov
loope
dec
sub
mov
dec
xchg
mov
jae
xor
ljmp
xchg
cs
out
das
hlt
add
inc
cltd
lret
scas
xchg
sub
lods
mov
mov
mov
adc
pop
jge
mov
mov
xor
xchg
fildll
cld
outsb
arpl
mov
loop
pop
aam
mov
and
mov
jg
jmp
mov
xor
jbe
jb
cmpsl
jle
mov
and
adc
push
jg
inc
inc
sbb
js
push
cltd
mov
imul
pushl
in
add
lock
inc
or
rclb
popa
lock
jnp
xor
lret
ds
sbb
call
pop
and
or
stc
mov
sahf
es
divps
mov
aam
or
cmpsl
jp
push
stos
push
scas
pop
adc
int3
das
push
fsubrl
fimuls
sbb
sbb
mov
sub
imul
and
enter
lock
jns
inc
pop
mov
add
insl
cld
popa
sbb
stos
jnp
icebp
mov
std
popf
dec
cmc
adc
lock
popf
mov
mov
jl
fiadds
das
sub
cmpsl
adc
dec
xchg
ret
fbstp
testl
addb
mov
hlt
lcall
mov
mov
aas
pop
cmp
jg
or
daa
sbb
sti
ljmp
mov
cmp
pushf
xor
sub
jg
mov
fs
add
iret
mov
push
fbld
notb
jno
push
xchg
push
es
xchg
push
repz
arpl
test
jne
insb
cmc
loopne
decl
cmpb
pop
mov
cmp
pop
add
repnz
stos
adc
xor
clc
add
aad
fcom
std
add
add
mov
xchg
dec
mov
mov
mov
call
mov
call
mov
mov
test
nop
adc
add
xchg
in
sub
xorb
test
jg
and
xor
adc
or
jb
sbbl
cmp
cli
in
or
fstpl
pop
cs
fidivrs
push
inc
sti
add
repnz
add
add
out
sbb
and
fisttpll
inc
dec
push
and
cltd
xchg
pop
xor
xor
adc
lcall
mov
push
dec
out
jae
dec
data16
js
in
inc
ljmp
daa
xchg
clc
cmp
fsubrs
call
hlt
push
dec
push
das
cmp
ljmp
push
xchg
adc
outsl
push
std
sbb
and
cmc
repnz
push
arpl
jae
sub
loopne
dec
cld
sbb
imul
mov
jl
stos
out
jmp
push
dec
mov
jb
push
jnp
add
add
xlat
mov
test
lods
push
es
sub
pusha
scas
lret
dec
sbb
jg
dec
xchg
push
icebp
leave
aaa
ss
xor
and
shrl
dec
xor
js
dec
sbb
cmp
mov
jmp
cmc
jg
push
mov
pushf
jno
and
add
ljmp
cmp
or
out
xor
loope
outsl
inc
mov
inc
fsubr
jecxz
scas
andl
lds
pop
add
mov
cmc
mov
sbb
shll
sahf
jl
test
ljmp
mov
movsl
adc
mov
inc
aad
fcmovu
outsl
je
je
fstpt
enter
dec
jge
add
jne
ret
ljmp
loope
dec
or
mov
jne
mov
xor
pop
clc
in
decl
fistpl
xor
ret
lahf
adc
mov
push
pop
pop
sbb
mov
sahf
mov
ret
adc
std
orl
sti
push
sbb
insb
xor
lcall
xchg
ret
push
std
lock
hlt
dec
add
or
adc
pop
clc
jnp
jbe
pop
add
lret
jle
arpl
mov
std
lcall
pushf
por
xchg
mov
pop
pop
dec
pushf
movsl
sbb
pop
ret
lods
in
arpl
es
sbb
insl
cmp
xor
std
pop
incb
add
pushf
std
mov
iret
bound
jmp
pminsw
repz
addr16
in
mov
fcoml
shrl
cli
xchg
iret
cli
xor
xor
mov
cmp
adc
sbbb
mov
sarl
test
mov
cmp
arpl
jecxz
cmp
pop
mov
shl
mov
dec
dec
inc
rcll
pop
mov
xor
xor
adc
xchg
popa
enter
push
sub
fcoml
outsl
push
inc
lret
xor
jecxz
fisubrl
adc
pop
clc
push
ds
leave
pop
jl
fidivs
sub
xchg
fucomip
ljmp
cmp
jl
hlt
imul
jbe
xchg
repz
mov
loop
inc
stos
sbb
sarb
outsl
mov
xor
mov
jmp
lock
test
call
sbb
mov
cs
push
aam
test
push
pop
std
std
lea
sub
inc
mov
cmp
lcall
decl
cltd
adc
pop
and
xor
jg,pt
dec
adc
add
xor
aam
pop
roll
sub
pop
test
pop
or
pop
add
std
inc
in
push
jp
in
xchg
push
movsb
xchg
cmc
in
movsb
or
mov
cmp
add
mov
jmp
pop
flds
lcall
inc
mov
ret
jbe
xor
into
jg
and
or
jg
cmpsl
pop
dec
pop
push
call
jne
in
mov
pop
push
call
adc
test
into
lea
add
mov
in
outsl
xchg
movsb
push
xchg
jecxz
cld
push
mov
js
jb
nop
dec
adc
inc
sub
aas
aaa
xchg
outsl
shlb
mov
enter
and
push
mov
rorb
test
dec
popf
and
aam
pop
ret
ljmp
loop
cs
test
xlat
insl
pushf
xor
push
addb
shlb
push
jg
in
filds
stos
xchg
test
shll
push
test
pop
jmp
adc
adc
dec
mov
call
xchg
int3
mov
ret
jge
mov
lret
lea
insl
inc
add
repnz
notl
nop
push
mov
pop
mov
jno
mov
jg
pop
fldcw
adc
test
in
fwait
shll
incl
icebp
in
inc
inc
arpl
das
std
xchg
dec
stos
hlt
adc
ret
dec
aad
iret
insl
mov
pop
aad
mov
daa
xchg
fs
pusha
ret
jo
test
iret
insl
sub
jmp
xchg
adcl
adc
or
inc
sbb
lcall
jg
or
pop
push
sub
test
xchg
push
cmc
add
es
mov
popf
xor
and
xor
test
bound
sbb
inc
cld
decl
mov
push
xchg
addr16
mov
leave
int
lea
pusha
and
push
mov
xlat
pop
aad
inc
mov
jl
jge
mov
decl
inc
and
aam
push
leave
and
push
testl
mov
push
les
cmpsb
mov
pop
out
sarl
lret
les
xchg
mov
mov
ret
cmp
dec
es
leave
fistpll
fs
pop
in
push
rcrb
testb
repnz
jge
stc
insl
mov
pop
push
int3
jmp
repnz
es
inc
aaa
ret
loope
fidivrs
mov
movsl
adc
decl
mov
aad
pop
jle
mov
mov
xor
mov
fisttpl
ret
jnp
mov
mov
repz
insl
icebp
xchg
and
mov
mov
jecxz
in
in
inc
and
aam
push
lret
xchg
out
aad
adc
call
xchg
xchg
xchg
sahf
cwtl
add
xchg
aaa
cld
ljmp
jmp
mov
sub
xor
dec
jl
xlat
dec
out
decl
mov
ret
jo
xor
vmaxsd
stc
in
fildll
nop
fisttpll
and
popf
and
jg
cmpsb
imul
test
lods
xchg
lcall
outsb
call
ja
xor
cltd
jecxz
inc
mov
xchg
ret
add
stc
cmc
repz
bound
sbb
dec
push
inc
inc
aam
leave
pop
les
pushl
mov
pop
sbb
cmp
leave
outsb
out
xor
jne
pop
frstor
outsb
fwait
incl
lahf
inc
arpl
movsb
lods
loope
dec
stos
aam
mov
fmull
sahf
or
add
fmulp
lds
cmp
lock
notl
cltd
pop
into
jb
fists
add
push
jo
pop
pushl
and
cwtl
adc
ret
outsb
add
insl
push
mov
dec
cmp
mov
push
fs
mov
ja
test
mov
lcall
fwait
adc
inc
mov
pop
and
ds
aam
cs
aas
dec
lods
push
rorl
leave
addl
imul
pop
lahf
das
jmp
pushl
js
pop
mov
aaa
adc
loope
cmp
frstor
cld
fdivl
xchg
cmp
data16
xor
les
pop
pop
mov
jg
pushl
xor
call
dec
mov
add
cs
jmp
fcomi
pop
jbe
test
xchg
push
push
les
pushw
aas
insl
pushf
sub
adc
or
loope
cmp
jb
jg
rorl
jbe
cwtl
enter
mov
xor
lods
jmp
dec
stos
lock
out
leave
in
call
aas
cmp
xchg
adc
sbb
out
push
cmc
cltd
call
ds
call
idivb
pop
fld
sbb
shl
stc
add
mov
ja
pop
mov
pop
adc
mov
push
nop
out
outsb
inc
xor
jnp
aam
add
or
mov
bound
ss
aaa
in
cmp
push
int3
pop
fcompl
sbb
fisttps
dec
mov
jg
sbb
xchg
iret
nop
pop
shr
xchg
or
shrl
xor
stos
jmp
jg,pn
push
mov
mov
into
pop
cmp
dec
mov
mov
iret
das
aam
movsb
das
pop
and
sub
sbb
mov
incl
pushf
hlt
imul
pop
inc
stos
adc
cmp
packsswb
jg
incl
xchg
imul
cmp
cmp
ds
cmp
stos
xchg
fxch
jg
fiaddl
pop
mov
fucomi
mov
push
int
jbe
dec
pop
call
push
aas
jmp
push
shrl
xor
outsl
or
sub
mov
dec
dec
jbe
lahf
xchg
jb
fidivl
ljmp
int3
sar
mov
mov
mov
loope
pushl
pusha
push
xchg
push
jne,pn
call
and
mov
fstp
cltd
xchg
mov
mov
mov
cmc
call
dec
sbb
pop
sub
and
ja
repnz
xor
jl
es
xchg
inc
pop
and
dec
aas
xor
enter
jns
sahf
adc
xchg
aas
lock
add
mov
mov
mov
push
loope
sarb
adc
inc
dec
addr16
or
push
js
jmp
mov
mov
sub
adc
enter
loope
cmp
loopne
pushl
ss
lods
adc
fwait
mov
movsl
outsl
aas
fidivl
movsb
movsl
jecxz
decl
ret
addr16
xchg
pop
inc
xorl
das
call
sbb
pop
pop
cs
movsl
mov
fistpll
rcrb
fsqrt
jb
xchg
flds
imul
or
dec
mov
push
shrl
jp
inc
gs
jmp
imul
xchg
repz
fwait
or
popa
dec
lods
jmp
mov
stos
sub
xlat
dec
inc
dec
out
mov
pop
loop
dec
pop
pushl
inc
xor
bound
and
xchg
xlat
adc
subb
and
call
cwtl
mov
test
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
xor
xor
cmp
xor
lcall
add
xor
xor
xor
xor
mov
xor
push
ss
ss
pushl
jno
mov
and
insl
or
aaa
mov
aaa
into
aaa
loopne
pushl
clc
out
aaa
stc
aaa
push
leave
cmp
cmp
cmp
cmp
cmp
cmp
mov
push
cltd
cmp
cmp
cmp
arpl
je
decl
pop
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
call
sbb
cmp
inc
ds
ds
add
incl
jg
cmp
cmp
cmp
push
fbld
jg
mov
cmp
cmp
cmp
cmp
cmp
xchg
sarl
cmp
mov
fdivrs
stc
ds
ds
aas
sub
aaa
dec
aas
cltd
aas
aaa
or
inc
pusha
xor
pusha
xor
pushl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
cli
test
xor
daa
xor
fcompl
lcall
adc
ss
inc
aaa
dec
aaa
pop
aaa
data16
mov
jmp
cmp
mov
fidivrs
sti
cmp
cmp
cmp
pop
cmp
jb
xchg
xchg
cmp
inc
cmp
cmp
cmp
adc
pop
cmp
cmp
cmp
cmp
push
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
add
dec
cmp
pop
cmp
leave
or
lcall
adc
dec
cmp
cmc
cmp
xor
ds
ds
bound
fs
mov
add
sbb
and
inc
aas
data16
call
push
aas
popa
aas
ja
jle
mov
xchg
aas
icebp
in
jo
mov
push
xor
popa
xor
addb
xor
mov
cmp
divb
pop
xor
xor
outsl
aaa
or
cmpsl
aaa
lods
aaa
pushl
mov
mov
aaa
add
cmp
jmp
push
mov
sbb
pop
cmp
lea
jecxz
cmp
fnstsw
jmp
jmp
cmp
mov
cmpsl
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
fnstcw
idivl
pop
ds
jb,pt
cmpl
notrack
push
mov
aas
test
mov
jg
insb
mov
test
xor
xor
xor
xor
std
pushl
inc
xor
xorl
xor
xor
xor
xor
xor
xor
orl
xor
loop
or
jg
xor
cmp
dec
ss
ss
mov
mov
ss
ss
add
jp
loope
stos
inc
mov
xchg
aaa
test
aaa
loop
rcl
pop
push
mov
fbstp
dec
test
cmp
xchg
xchg
cmp
les
mov
cmp
mov
jmp
cld
cmp
ds
and
mov
sbb
incb
cwtl
cld
aas
les
pushl
add
xor
xor
xor
xor
or
lcall
xor
xor
xor
fbstp
in
stc
xor
xor
outsl
cli
xchg
xor
xor
xor
xor
xor
xor
xor
decl
xor
xor
xchg
xor
xor
xor
xor
dec
xor
xor
xor
idiv
pushl
xor
xor
xor
xor
xor
xor
lock
mov
lea
xchg
repz
hlt
or
ss
jbe
fdivs
rorl
cmp
cmp
cmp
pop
sbb
mov
inc
int3
push
dec
sub
mov
mov
xor
xor
call
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
fsubp
pushl
xor
sbb
xor
adc
fwait
out
sub
bound
sbb
and
aaa
inc
aaa
dec
cmp
mov
aaa
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
add
dec
cmp
cmp
cmp
mov
sarl
rcrl
cmp
cmp
cmp
cmp
jns
push
pop
cmp
or
mov
jns
push
cmp
je
lods
call
sub
cmp
cmp
push
cmp
cmp
cmp
std
fcomip
cmp
cmp
cmp
cmp
cmp
cmp
pop
aad
fidivrl
cmp
cmp
cmp
lods
ljmp
cmp
test
ds
testl
inc
aas
inc
aas
dec
aas
data16
outsb
aas
sbbb
mov
cmp
mov
ret
and
out
out
cs
jecxz
add
adc
sbb
and
das
std
xor
xor
xor
jge
mov
xor
xor
xor
xor
xor
add
pushl
adc
and
sub
cmp
inc
xor
pop
xor
jae
xorb
xor
xor
dec
pushl
shll
loopne
jmp
clc
mov
and
sub
aas
xor
pop
mov
popa
xor
insl
xor
jle
mov
cld
xor
aaa
push
fildl
loopne
add
xor
insb
sbb
sbb
push
ss
mov
ja
lcall
aaa
jnp
xchg
aaa
mov
aaa
insl
adc
jle
jp
fcomip
ljmp
out
cmp
insl
cmp
cmp
cmp
cmp
unpckhps
and
cmp
js
cmp
cmp
cmp
cmpl
cmp
mov
rclb
cmp
cmp
cld
mov
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
outsl
adc
fcomip
jg
cmp
lock
cmpb
mov
xchg
ds
aam
ds
ds
rorb
sbb
ljmp
add
mov
add
and
test
cmpl
and
xchg
pop
add
xchg
or
add
fcomps
notb
pop
jns
mov
add
out
dec
sbb
pop
popf
rcrl
setno
stc
decb
popf
fstps
cltd
cmp
add
out
cltd
ds
aas
repnz
add
out
jl
mov
sub
sbb
add
insl
xchg
adc
mov
pop
and
andb
inc
daa
pop
ret
in
and
pop
js
pop
xor
cmp
cmp
scas
mov
push
jge
cs
add
je
sbb
int3
test
movaps
xor
addb
fld
scas
and
jb
inc
add
or
daa
inc
fldenv
sbb
out
adc
mov
push
dec
dec
fldenv
inc
incb
lods
addb
jl
jb
inc
loopne
mov
add
add
test
add
jl
and
inc
jle
push
add
addb
inc
push
lock
pop
push
add
stos
sbb
inc
mov
push
add
or
ret
leave
cld
and
nop
cld
notb
mov
push
jb
pop
imul
add
inc
sbb
push
mov
pop
mov
inc
enter
mov
xor
and
add
inc
adc
add
stos
leave
xchg
cmp
lahf
call
insb
inc
inc
fsubp
add
sub
jl,pn
dec
inc
into
adc
push
sbb
add
in
cld
dec
inc
adc
add
adc
push
call
jle
rclb
add
mov
adc
data16
lea
pop
or
xor
adc
popf
int
mov
out
enter
add
add
jns
dec
pop
add
add
xor
push
leave
repz
inc
movsb
inc
xor
xor
cmp
inc
adc
fs
xchg
xor
jb
or
add
ss
mov
add
repnz
jns
xor
adc
add
stc
pop
push
and
mov
and
and
stc
mov
adc
repnz
cmp
xor
adc
add
dec
pop
addb
rclb
inc
push
push
aam
push
movsl
push
pop
mov
fsin
out
push
rep
or
jp
inc
add
xchg
mov
and
add
das
test
and
adc
mov
or
pushf
mov
mov
les
pop
inc
jg
cmp
mov
fcoms
cmp
adcb
enter
jge
mov
push
xlat
cmp
jbe
test
push
inc
int3
insb
sarl
je
out
cmp
shr
cmp
sbb
pop
cmp
jl
mov
lock
sbb
pusha
or
xlat
jns
loopne
movlps
mov
loope
test
xor
add
push
mov
test
jno
mov
fwait
xor
hlt
mov
and
cld
inc
or
xorl
pusha
mov
pusha
out
jnp
shll
xchg
jnp
fcomps
mov
sub
xor
and
das
pop
and
push
push
mov
dec
int
rolb
clc
inc
out
imul
push
inc
shll
insb
and
dec
insl
insl
in
adc
popa
fldcw
push
das
dec
dec
sbb
cltd
inc
jg
mov
pusha
fisttps
rorb
xor
loopne
loop
inc
imul
cmpsb
imul
imul
dec
xchg
mov
aad
loopne
stc
adc
inc
inc
xor
loop
clc
dec
mov
cmp
dec
sub
add
iret
or
aaa
dec
call
xchg
adc
or
cmp
leave
rorl
testl
jmp
enter
mov
enter
xor
stc
add
outsb
adc
jnp
lea
dec
shlb
xor
sahf
jne
mov
lock
sbb
rcrb
sub
xchg
negb
pop
clc
fidivs
dec
xor
mov
xor
fcomps
jo
js
or
xor
push
cld
inc
inc
xor
mov
lcall
adc
add
out
mov
jne
ret
inc
xor
jp
jmp
movsb
mov
test
dec
xchg
leave
enter
or
mov
or
jb
inc
push
icebp
nop
pcmpeqw
push
std
push
ljmp
lret
and
and
dec
xor
cmp
fistpll
jecxz
inc
add
cmp
jl
push
xchg
pop
mov
or
add
shrl
lods
add
call
mov
and
push
divl
imul
xor
mov
adc
sub
jb
outsb
gs
cs
leave
mov
js
aam
aad
insb
xlat
fdivs
arpl
inc
pop
fldt
gs
lea
xchg
adc
gs
js
bound
or
jg
je
sti
xor
call
sbb
rorl
mov
adc
hlt
sub
int
outsb
adc
dec
or
lret
nop
pop
pushf
adc
push
into
jp
leave
leave
leave
iret
rcl
shrb
push
push
into
sarl
aam
cmp
pop
loopne
and
sub
xchg
std
mov
sub
std
aas
fs
cld
dec
imul
jb
inc
mov
inc
inc
js
aam
loop
adc
add
incl
in
orb
xchg
mov
sti
outsb
pop
dec
mov
fisttps
push
inc
sub
and
xor
push
jp
insl
push
mov
push
jge
inc
and
cmp
je
jns
test
stos
ret
or
inc
movsl
clc
pop
ljmp
push
adc
or
push
decl
jne
dec
mov
and
add
in
mov
call
inc
leave
repnz
inc
in
mov
pushf
and
and
nop
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
jns
jb
mov
push
insb
in
sbb
popa
pop
xchg
push
in
cs
add
std
cmp
pusha
lea
inc
je
cmp
push
xchg
std
pop
xchg
std
enter
xchg
std
xchg
std
xchg
std
stos
test
jmp
adc
gs
insb
outsl
jb
xor
sarl
mov
fsubs
stos
std
icebp
inc
sahf
inc
rcrl
mov
or
rolb
or
xor
jb
sbbl
xchg
or
int
imul
jns
sti
or
shll
std
in
jmp
xor
push
out
fldenv
pop
jp
xor
repz
hlt
cmc
div
call
insb
inc
mull
movsb
dec
add
jmp
xor
fsubrl
xchg
xor
pop
or
cli
fldcw
ljmp
xchg
popa
outsl
add
orb
je
sub
aam
jns
mov
lret
mov
insb
popa
jne
sbb
or
mov
mov
jno
cmpsb
imul
or
cltd
inc
js
leave
mov
imul
mov
jb
cs
pop
xchg
subb
js
ffree
in
bound
call
add
aas
xchg
pop
add
movsb
add
and
aam
add
les
xchg
xor
lret
call
xchg
mov
push
scas
jnp
stos
or
adc
je
push
mov
stos
dec
xchg
mov
jge
mov
or
push
es
mov
mov
leave
or
out
sub
xor
xchg
addr16
in
push
sbb
repnz
outsb
or
cmc
jp
repnz
scas
or
sbb
fbld
mov
xor
jo
pop
pop
out
dec
addr16
jbe
ret
repz
add
test
xor
dec
repnz
push
aam
add
rorb
es
ss
das
or
or
in
les
in
mov
cmpsb
mov
hlt
es
repz
clc
enter
mov
shlb
adc
pop
add
sbb
fistpl
push
ret
pop
adc
inc
add
or
adc
stos
xorb
repz
arpl
xor
mov
cmp
sete
loop
mov
push
push
fstpl
leave
pop
mov
push
movl
or
mov
or
jo
shlb
add
mov
pop
pop
out
mov
inc
sbb
push
cmp
inc
sahf
inc
aad
push
inc
xrelease
push
add
jmp
and
repz
inc
loopne
adc
add
mov
dec
mov
pop
inc
addb
scas
nop
ret
sub
lds
or
and
mov
pusha
inc
out
and
leave
add
shll
in
cs
push
sbb
inc
inc
or
inc
insb
xchg
add
mov
dec
int3
add
adc
idivl
or
jae
sub
mov
sti
xchg
or
mov
mov
inc
dec
test
and
pop
mov
dec
add
int3
or
jb
adc
mov
add
xor
shll
push
pusha
insb
je
xor
roll
pop
ss
shl
lock
fmulp
lcall
lcall
jb
inc
jae
xchg
add
jle
cmp
pop
aaa
pop
shll
xchg
dec
stos
pop
add
dec
shll
xor
add
nop
mov
aaa
aaa
sbb
dec
aaa
xor
xor
add
dec
dec
jo
add
mov
inc
orl
and
daa
push
xchg
pop
or
push
add
bound
pop
int3
and
outsl
jne
jae
xor
mov
xor
push
push
sub
sub
jle
add
push
dec
push
dec
jae
push
sub
push
push
dec
sub
rclb
adc
mov
mov
inc
inc
inc
adc
rolb
mov
xchg
movsb
inc
mov
and
flds
inc
stos
jne
mov
xchg
ret
jecxz
add
sbb
rorl
pop
mov
adc
mov
lret
sti
add
pop
packsswb
sbb
inc
cmp
sbb
mov
and
add
stos
cmc
inc
stos
and
mov
sbb
jno
movsl
sbb
push
push
sub
nop
adc
mov
repnz
adc
push
mov
addr16
sbb
inc
lcall
les
push
mov
push
outsb
jb
clc
sub
jbe
mov
js
nop
mov
xchg
dec
mov
sub
cs
jno
dec
nop
inc
shrl
pop
mov
and
and
adc
add
xchg
sub
aad
andb
cmc
cld
inc
add
insl
dec
jae
mov
or
jg
push
push
xor
add
inc
xlat
or
add
punpcklbw
in
add
add
es
inc
lcall
xor
sbb
cld
aaa
pop
xchg
or
fsubs
test
mov
shrl
out
lock
cld
add
dec
sbb
sub
ss
shll
pop
out
clc
or
imul
xor
jge
add
mov
add
jle
add
xchg
pop
sbbb
lea
pop
and
cmpsb
adc
fwait
dec
mov
adc
ss
inc
push
push
add
lods
in
out
adc
and
lea
jne
or
jg
push
adc
mov
xchg
adc
clc
push
in
adc
xchg
cmp
or
add
pop
lock
adcb
mov
jnp
addr16
mov
sub
dec
movq
jae
data16
jo
xchg
outsl
cmp
insb
pop
push
xor
or
and
add
xor
popa
adc
stc
outsb
das
fstl
imul
jns
add
and
or
incb
lcall
imul
push
shll
adc
fistpl
xor
ret
push
or
out
jmp
inc
or
add
imul
mov
jae
xchg
add
xorb
outsl
add
das
and
jb
addr16
insl
cmp
pop
jecxz
or
mov
cmp
xor
insl
scas
jmp
jecxz
inc
and
xor
cmovs
inc
jae
and
popa
jns
out
xlat
movsl
popa
and
add
scas
sbb
mov
gs
imul
outsb
es
push
insl
scas
fs
loope
adc
or
jae
adcb
cmp
imulb
xlat
fnstenv
xor
in
dec
xchg
insb
popf
mov
ret
xchg
pop
dec
or
lds
jge
jo
popf
addr16
pop
adc
xchg
pop
xor
xor
mov
inc
push
sub
frstor
or
daa
es
or
xlat
outsb
jae
addr16
xchg
mov
daa
jbe
mov
inc
test
and
pcmpeqw
jae
pop
ja
adc
inc
push
fistl
pop
imul
and
jnp
jmp
xchg
add
add
mov
iret
add
push
es
ljmp
xor
inc
mov
shlb
xor
xor
ljmp
pop
lea
stos
xor
xor
xor
xor
mov
fwait
xor
xchg
call
push
addr16
xor
xor
xor
xor
and
inc
xor
xor
xor
xor
xor
xor
cmp
mov
xchg
xor
dec
ss
jg
fwait
ss
aaa
xorb
aaa
stc
lcall
cmp
cmp
push
cmp
cmp
cmp
cmp
mov
cmp
push
aas
lods
cmp
cmp
inc
std
add
cmp
lret
cmp
mov
cmp
clc
jo
mov
xor
dec
xor
xchg
xchg
xor
jmp
and
jg
test
mov
lahf
xor
xor
xor
xchg
sub
aam
mov
xor
pushl
sub
push
ss
ss
ss
divb
and
aaa
mov
ljmp
xchg
cmp
cmp
mov
and
sub
push
add
inc
add
and
or
adc
in
xor
add
and
mov
mov
adc
push
dec
push
arpl
and
pextrw
and
add
or
testb
jne
pop
sbb
inc
outsl
pavgw
cmp
add
push
inc
or
or
inc
inc
push
add
add
shrb
add
push
rcr
es
jbe
pop
adc
xchg
pop
dec
cmovp
xor
jno
push
xchg
mov
test
adc
pop
inc
or
leave
xchg
add
add
pushf
pop
adc
push
es
stc
and
cmpsl
pop
cld
popf
add
add
je
stos
add
dec
stos
cwtl
es
addl
add
lcall
push
mov
xor
mov
sub
jno
sidtl
push
mov
sub
xchg
xchg
fwait
adc
and
pop
sbbb
add
xor
inc
mov
add
fldcw
cmp
pop
adc
pusha
mov
test
xchg
in
push
xchg
add
inc
sub
add
mov
adc
push
add
xchg
sub
add
add
xchg
mov
add
incl
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
