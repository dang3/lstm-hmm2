out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
push
dec
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
gs
push
mov
mov
add
cwtl
push
push
pop
xchg
mov
sub
jle
out
push
push
aam
add
pop
sub
push
push
sti
mov
cli
daa
push
pop
mov
pop
clts
push
shlb
out
dec
push
imul
cmp
stos
add
dec
loopne
and
add
repnz
stos
add
add
movsb
add
add
es
add
add
jae
and
xor
pop
in
mov
add
and
lods
leave
pop
fs
fldl
add
add
push
or
bound
mov
fcomps
xlat
push
andb
shrb
popa
je
insb
xchg
mov
fs
loopne
inc
push
push
pop
mov
xor
shlb
mov
jae
imul
sbb
jb
insb
outsl
arpl
sti
add
dec
mov
or
inc
idivl
mov
jo
pop
push
lcall
pop
imul
movsb
xchg
addr16
cmpsb
jle
lcall
int
jmp
sbb
dec
shll
mov
mov
fsubr
cli
or
sbb
inc
sub
xor
inc
imul
imul
xor
add
xor
xor
mov
dec
xlat
pop
movsb
add
fdivl
iret
nop
mov
add
adc
rcrb
lcall
or
jmp
arpl
mov
cmpsb
fsub
out
cli
add
or
and
xor
imull
inc
push
pusha
mov
fs
lcall
push
or
adc
add
into
sub
stc
add
call
sub
push
add
iret
or
cltd
imul
or
cmp
je
jb
gs
add
inc
mov
sbb
cwtl
sti
leave
adc
popa
fs
sub
dec
jo
fwait
andb
outsb
push
jb
inc
adc
dec
dec
nop
dec
cli
repz
dec
inc
push
and
add
xchg
mov
or
mov
and
insb
outsl
ss
xchg
add
aaa
sbb
pusha
add
das
push
add
push
pop
pop
mov
inc
jle
cmpl
fistps
push
lret
jmp
add
push
and
das
pop
add
push
or
shlb
ja
aas
mov
aas
add
pop
rorl
incl
and
mov
decl
lret
add
jno
test
lea
popa
xchg
mov
pop
push
and
add
inc
and
cmpsl
xor
stos
pop
das
xor
enter
add
and
pop
test
pop
in
xor
ud2
push
add
cld
ja
pop
jne
outsl
add
jae
push
packsswb
je
jne
jb
gs
addr16
popa
sbb
push
add
xor
add
out
call
jb
push
and
ja
or
push
mov
jae
pop
and
repz
addr16
xor
push
sbb
mov
lcall
add
movb
jmp
fisttpl
adc
cmp
div
call
call
data16
lret
dec
push
push
lret
dec
je
jo
jmp
jno
gs
inc
js
xor
xor
repnz
add
je
gs
jns
gs
fsin
jo
imul
ret
sbb
lahf
add
fwait
jnp
dec
rcrb
je
jo
jne
add
inc
incb
pop
cs
add
cli
into
dec
jb
arpl
popa
insl
dec
push
dec
jg
in
inc
push
push
inc
push
inc
pop
dec
imul
mov
outsl
ja
and
mov
jbe
pop
inc
jne
jb
je
xor
pop
dec
int3
ja
fdiv
in
std
jb
inc
popa
jb
pop
or
gs
inc
add
jbe
stc
xchg
int
repnz
lea
pusha
jmp
inc
lret
ds
cmp
add
cmp
jge
fisttpl
pop
into
mov
stos
xor
idiv
mov
pop
or
clc
shl
bswap
scas
or
into
in
leave
xchg
daa
enter
sarb
jp
inc
dec
shlb
sbb
or
popa
push
lock
pop
filds
addr16
and
mov
rcrl
fs
aas
xchg
and
dec
shlb
jl
dec
dec
inc
popa
jne
arpl
mov
jp
daa
jle
aas
and
aas
pop
inc
pop
and
jns
in
pop
je
rcrb
mov
cmpsl
stos
mov
pop
sbb
pushf
fstpl
push
in
outsb
jmp
add
in
push
push
loopne
mov
jecxz
mov
push
push
push
mov
cmp
mov
dec
in
push
mov
push
jg
cld
mov
push
call
jmp
movb
mov
sti
push
push
push
call
or
dec
cld
ljmp
pop
jmp
mov
ret
mov
xor
mov
arpl
push
add
inc
mov
clc
sbb
loopne
sbb
adc
or
clc
mov
push
push
push
call
lea
movb
ret
stos
sub
sub
push
add
fcmovu
repz
lea
push
call
pushl
inc
mov
repnz
pop
ret
mov
test
test
cwtl
push
call
or
fcomps
arpl
or
lahf
or
outsl
xchg
push
mov
es
jae
outsl
mov
sbb
push
movzbl
shll
std
arpl
cmp
jne
mov
andb
mov
mov
or
push
aas
adc
cmp
pop
jl
mov
xchg
nop
mov
call
inc
movsb
test
jne
ret
cmpw
jne
mov
add
cmpl
adc
mov
xor
push
push
leave
adc
and
add
inc
call
adc
add
xor
adc
xchg
xchg
nop
pushl
inc
mov
push
jne
or
inc
std
shlb
cmp
je
mov
fstpt
je
or
divl
adc
pop
cmp
ja
jge
fidivs
in
xor
mov
mov
mov
in
cmp
ljmp
jb
sub
je
addl
jg
push
sbb
inc
xor
int
adc
or
cld
jmp
loopne
jecxz
xor
mov
push
push
sub
adc
push
mov
int
js
outsb
cld
push
push
call
mov
imul
ja
mov
lds
push
xor
push
and
push
push
dec
pop
mov
fidivs
jg
add
jge
push
sub
call
insl
xchg
cmp
push
push
and
push
movsl
mov
pop
pop
pop
ret
dec
mov
mov
stc
fs
jbe
cmp
sti
and
jb
pop
testb
sub
ret
fcmovb
jle
out
outsl
xor
xor
sbb
call
push
or
jnp
mov
dec
cmpl
fimuls
push
adc
mov
mov
lock
add
repnz
movsl
mov
movsb
mov
jnp
push
xchg
and
mov
lock
int
jbe
mov
dec
dec
mov
ss
fmull
mov
fmull
dec
pop
mov
lock
push
push
and
cmp
ja
mov
fmuls
inc
das
xchg
adc
adc
push
push
cmp
jbe
add
js
dec
out
in
add
push
inc
clc
push
clc
mov
inc
mov
inc
jo
aad
or
add
pop
pop
leave
adc
xor
adc
and
cmp
fmull
dec
mov
shrb
movb
sub
cmp
js
test
leave
mov
cmp
je
jge
mov
daa
mov
inc
xor
loope
rcrl
jo
or
or
xor
cmp
sti
fisubl
push
mov
dec
xchg
or
jo
sub
lock
je
outsl
insl
ret
adc
call
push
sub
cmp
cld
push
add
xchg
mov
or
fnstsw
lock
push
push
xor
push
imul
push
adc
xlat
mov
xchg
jb
mov
fstpl
fstpt
faddl
ja
jne
data16
lcall
imul
or
fs
mov
mov
enter
sbb
add
fcmovnb
jbe
add
ret
add
loopne
jae
pop
push
cmp
push
je
sbb
push
cmpb
pop
and
xchg
in
in
inc
xor
aaa
push
jmp
adc
add
xor
test
popf
or
call
cmp
ret
sub
pop
inc
idiv
adc
jg
sbb
inc
sti
incl
jmp
andb
mov
jmp
xor
fldenv
pop
sbb
inc
inc
xor
adc
sbbb
stos
in
sbb
pop
mov
add
pushf
cmp
call
add
lods
cmp
inc
inc
jle
call
cmp
dec
pop
pop
insb
mov
lock
push
xor
pop
ja
xor
mov
jbe
cmpb
jne
movb
inc
cmp
jb
icebp
mov
incl
mov
imul
add
andl
cmpsl
fists
adc
ljmp
or
mulb
add
push
add
cmp
dec
adc
inc
cmp
jecxz
decb
push
add
cmp
loopne
cmp
jae
incl
add
mov
shr
add
imul
jge
push
mov
dec
or
decl
inc
mov
mov
mov
rorl
lea
push
dec
sub
pop
in
rorb
rolb
or
shl
sbb
dec
roll
fmul
es
test
push
add
test
or
pop
in
out
in
xchg
push
xchg
imulb
insb
mov
jbe
or
cmp
xlat
and
push
push
clc
divb
or
add
lea
ljmp
sbb
out
or
mov
add
std
in
ja
repnz
not
and
testl
mov
mov
test
or
js
add
push
aam
jge
fisttpl
inc
fisubs
fimull
add
sti
lret
jg
lea
shr
shl
push
pop
inc
fstpl
outsl
sub
mov
and
not
cmp
add
aaa
xlat
psllq
mov
shr
mov
sti
or
repz
dec
daa
pop
jg
push
idivb
add
lea
sbb
fcmovnu
out
mov
push
push
hlt
mov
not
and
sub
call
mov
adc
movb
gs
jecxz
sbbb
xlat
lock
dec
test
xlat
or
jbe
imul
adc
test
xor
imul
add
das
insb
in
sub
sbbl
int3
xor
add
inc
std
sbb
add
out
mov
and
cli
sbb
out
mov
rolb
fcomp
cwtl
subb
lret
fucomi
sbb
add
rcr
stc
test
sbb
pusha
adc
pop
scas
testl
sti
mov
pop
les
fldt
mov
mov
jmp
sarb
lret
addl
repnz
mov
fcom
add
out
fdivrs
pop
int
or
les
cmp
arpl
adc
xor
jns
jl
or
or
xchg
jno
std
sti
mov
fisubrs
push
cld
and
fidivrs
pop
aas
pushf
fistps
das
push
mov
cmpsb
pop
mov
insb
cmpsb
pop
jae
sub
in
mov
or
and
or
popa
adc
mov
outsl
jecxz
and
mov
mov
shl
ljmp
fildl
and
aad
aam
pop
bound
popa
imul
sbb
add
repz
inc
jge
dec
cmp
inc
ror
jbe
pop
or
fadds
hlt
push
and
fldl
daa
clc
jb
repz
pop
pop
es
mov
xchg
adc
repnz
shll
add
and
stos
mov
insl
test
out
call
xor
mov
pop
repz
hlt
pop
adc
call
xlat
lods
mov
fdivs
mov
adc
add
mov
lods
and
in
pop
and
imul
jge
pop
mov
mov
shl
jg
dec
cmpsl
int
or
add
mov
mov
mov
out
loope
out
sbb
loopne
jge
sub
inc
enter
aaa
mov
ret
mov
push
fbstp
pop
fimuls
xchg
int
adc
cmp
gs
jns
and
fsubrp
mov
adc
inc
push
mov
shr
or
xlat
fdivs
faddl
sbb
lock
aam
mov
pop
in
and
sub
aad
flds
outsl
addr16
pushf
mov
xchg
jns
icebp
rorb
mov
cmp
aaa
fistl
xor
test
pop
imul
test
xor
in
cli
mov
xor
cmp
mov
cli
cs
js
sbb
ja
and
insl
adc
inc
sti
xor
mov
repnz
or
in
aaa
je
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
mov
sti
in
mov
fimuls
cltd
jb
cmp
push
repz
repnz
jl
pusha
dec
mov
cli
xor
outsl
lahf
imul
jo
mov
mov
or
mov
out
outsl
jo
jle
sub
testl
outsb
sbb
lock
out
lret
add
mov
fidivl
cmc
outsb
lods
icebp
mov
push
xchg
jae
adc
cs
fwait
sub
xor
das
cwtl
pop
out
cmp
or
push
aas
sbb
cmp
rcl
fnstenv
or
push
les
pop
mov
out
divl
test
ss
in
clc
jl
pop
lretw
inc
fnstenv
pushl
imul
mov
gs
lods
les
lea
sti
mov
fcmovnb
fwait
or
mov
stos
rcrb
sbb
inc
xlat
or
push
or
in
sbb
jl
iret
das
faddl
xchg
ljmp
inc
push
or
mov
mov
jns
and
outsl
push
sbb
hlt
cmp
lcall
scas
xlat
pop
fistps
cmp
pop
pop
gs
sbb
lea
rcrl
iret
fwait
lock
int3
or
push
or
das
xor
ja
jno
dec
jge,pt
mov
call
unpckhps
sbb
push
adc
rcrl
test
sub
pop
xchg
dec
xor
call
scas
dec
jle
outsl
jecxz
jp
leave
push
jo
sbb
int
dec
fistpl
leave
insl
jle
loopne
sub
jecxz
jp
ret
incl
push
adc
add
pop
fdivl
mov
in
fiadds
sbb
xlat
lods
mov
fsubs
xor
mov
out
loopne
mov
ret
jns
aam
rcl
sub
pslld
cld
mov
xchg
roll
sbb
pop
push
dec
mov
pop
jge
mov
pop
add
pop
movsb
mov
inc
and
mov
xor
pop
add
cli
xchg
inc
js
cmp
sbb
je
sub
cmpb
in
mov
js
sub
push
push
push
outsb
adc
inc
or
dec
push
cmp
xor
xor
xlat
adc
inc
sbb
fisubrl
jle
xchg
insl
dec
mov
lahf
inc
pop
inc
addr16
iret
out
pop
loope
jb
adc
or
stc
mov
push
add
sbb
cmp
jne
mov
and
imul
mov
add
jl
inc
test
sub
dec
adc
push
imul
push
fldt
rorl
push
jl
jno
stos
inc
cltd
fcompl
jmp
test
loope
rep
cmp
mov
push
mov
cmp
and
xlat
clc
call
faddl
pop
cs
ficoms
push
cld
call
imul
jbe
lea
pushl
repz
push
cs
dec
cmp
out
or
inc
sub
lea
xchg
pop
xor
rorb
clc
pop
adc
cld
mov
outsb
int
or
fdivrs
int3
push
das
loopne
pop
int3
rolb
aam
call
jae
lcall
cmp
data16
add
test
out
scas
stos
jl
push
or
call
ds
addr16
gs
das
lock
jo
mov
gs
negl
lds
shlb
mov
or
dec
inc
add
or
out
add
jnp
and
ret
xchg
cmp
mov
lods
inc
dec
jecxz
mov
inc
lods
outsb
into
int3
push
rcr
mov
clc
enter
sub
sbb
add
movsb
repz
lcall
push
push
movb
in
dec
out
push
sti
in
mov
icebp
inc
repnz
mov
mov
add
pusha
and
or
lcall
sub
add
jae
sub
aam
mov
pop
cmp
insl
sbb
fisttps
and
or
cmp
xchg
and
jle
out
jbe
sbb
insb
xor
sti
push
push
add
flds
loope
mov
xor
lea
inc
push
imul
pop
mov
sub
push
nop
xor
xlat
adc
ret
pop
adc
and
rcr
push
mov
ret
leave
mov
mov
les
xor
mulb
rorl
push
mov
andl
dec
jne
pop
mov
push
push
nop
clc
loope
xchg
sbb
sbb
loope
pop
sbb
lea
xchg
cltd
adc
or
mov
sub
cs
mov
xchg
adc
insl
fstl
or
cmp
mov
hlt
push
shlb
mov
fldt
pop
call
cmp
jmp
inc
mov
sub
mov
jb
outsl
lds
test
enter
add
or
sahf
outsb
mov
repnz
idivl
sbb
pop
or
push
andw
mov
popf
push
cld
subl
dec
cld
pop
mov
pusha
cmp
cmp
stos
adc
adc
cmp
mov
and
out
subb
out
fcmovnu
mov
dec
dec
pop
cmp
pop
push
arpl
lret
pop
mov
cmp
das
fsubrl
xchg
jl
inc
pusha
push
push
mov
push
mov
add
aad
push
ret
sub
cwtl
cmp
jnp
xchg
movl
daa
mov
push
lret
adc
fwait
xchg
inc
add
sahf
sbb
lods
adc
push
push
sub
add
xchg
push
sub
sahf
xchg
or
lea
cmp
mov
fldcw
and
mov
adc
xor
aaa
clc
inc
push
sbb
call
stos
push
mov
xor
push
jo
orb
fidivs
pop
cld
movl
push
inc
call
nop
xchg
xchg
test
xchg
cmp
ja
pop
push
testb
mov
cmp
je
cmp
jne
xchg
xchg
in
add
and
cmp
adc
push
push
cs
fadds
pop
jbe
pop
and
nop
subl
adc
jae
mov
sbb
push
or
enter
les
cs
and
das
cmp
fdivl
cmp
and
ret
adc
inc
jmp
cmc
loopne
fwait
insb
nop
jle
test
push
fcomps
in
mov
mov
bound
scas
mov
test
mov
enter
adc
sbb
push
nop
fldt
mov
loopne
test
adc
mov
sub
les
mov
push
fs
jbe
add
daa
mov
and
xor
jecxz
pushl
cmp
dec
mov
add
cmp
dec
push
adc
or
sti
shr
or
push
cmp
and
pop
test
push
mov
lods
sbb
imul
mov
cmp
and
sbb
mov
or
sbb
mov
je
cmp
mov
mov
fimull
jb
jl
scas
or
push
pop
sbb
jo
mov
jo
push
push
pop
cmp
sbb
dec
jne
int3
and
std
imul
fists
pop
adc
pop
pop
dec
sti
pop
or
jge
add
mov
and
loopne
mov
push
shrb
adc
cs
xorl
adc
jmp
les
mov
dec
mov
jle
jb
cmp
mov
loope
jo
out
test
fldl
xor
push
push
daa
insb
out
mov
push
jo
fcmovnb
mov
push
test
sbb
jg
leave
pop
outsb
xchg
int
lods
push
insl
mov
lret
in
mov
mov
mov
mov
pop
cs
push
mov
mov
mov
outsb
mov
mov
mov
mov
fsts
rcl
js
shlb
pop
shrl
insb
aam
aad
xlat
pop
fmul
mov
mov
and
fcmovu
gs
loopne
mov
mov
test
loop
jecxz
pop
in
insl
mov
jbe
out
dec
out
call
lcall
jo
int
lcall
rcl
andw
ret
rcl
lret
insl
les
lds
mov
jb
jbe
leave
lret
cmp
int3
hlt
xchg
push
dec
shll
xchg
xchg
mov
mov
mov
pushf
adc
sub
push
mov
mov
mov
add
push
xor
mov
push
test
notl
stc
hlt
cli
jns
aad
or
mov
pop
mov
dec
xor
dec
or
cltd
mov
rcrl
jb
xlat
test
adc
aaa
jb
push
pop
or
out
pop
int3
jmp
out
fwait
gs
idivb
in
les
push
dec
push
hlt
cmp
xchg
insl
jmp
dec
rcrb
sub
sub
cmp
fs
xor
enter
sti
push
sbb
xor
out
push
out
jmp
test
clc
sub
push
dec
inc
jbe
inc
jge
sti
and
pop
int3
push
sbb
sti
shl
and
imul
jbe
shl
pushf
pop
cli
inc
ret
mov
test
fwait
jne
push
push
inc
sub
fldpi
pusha
aaa
sbb
test
movsl
jmp
sbb
cmp
adc
cmp
sub
jns
aas
mov
nop
repnz
add
fwait
outsb
out
insb
xchg
cld
std
push
hlt
cld
lea
cmp
pop
or
int
adc
std
inc
sub
stc
push
sbb
stos
sub
and
ficompl
mov
test
cld
fildll
roll
fdiv
std
mov
adcl
in
lock
insl
pop
imulb
pop
mov
lret
jl
jg
jnp
fistl
pop
adc
and
gs
push
cmpsl
adc
dec
in
xchg
loopne
mov
das
inc
loope
test
dec
ret
xchg
insb
icebp
mov
pop
ljmp
add
adc
pop
rorb
je
push
jae
lods
mov
stos
inc
ljmp
std
push
stos
arpl
mov
mov
outsb
popa
mov
popf
je
js
cmpsb
mov
dec
or
push
sbb
cmp
std
incb
loopne
pusha
jne
pushf
mov
loopne
inc
add
pusha
adc
rcll
mov
inc
ret
sti
cmpl
popf
repz
jne
push
dec
or
daa
cmp
in
movl
sbb
jmp
dec
dec
adc
fsubs
test
push
mov
cmp
dec
xchg
mov
cmp
cmp
testl
mov
out
lea
push
mov
fstpt
call
inc
push
push
xor
push
lock
cmp
xor
or
mov
dec
test
fmull
add
push
ret
sub
adc
cld
adc
jno
out
jmp
and
in
pop
sbb
call
jmp
push
add
scas
cltd
lea
in
xchg
mov
cld
call
sar
adc
andl
fmuls
ret
call
fsubrl
xchg
packssdw
ja
mov
mov
mov
xchg
js
cmp
push
and
test
dec
pop
ss
int3
dec
int
jp
imul
dec
push
insl
xchg
pop
shrl
das
fsubs
ja
fwait
mov
inc
fidivs
cmpsb
imul
pop
bound
sti
insb
int
fwait
cld
std
insl
jmp
fnstenv
mov
mov
mov
mov
rol
mov
mov
dec
pop
pop
xor
enter
fsub
in
out
mov
out
call
jmp
or
xor
cs
inc
jb
cmp
andb
idivl
cmc
mov
add
addl
mov
and
jge
pop
add
and
or
test
mov
xlat
pop
push
jbe
xor
subb
hlt
dec
mov
add
xor
in
xor
int
fstl
jg
xchg
inc
jmp
or
gs
adcl
sub
out
shll
imul
push
imul
in
outsl
out
ja
jne
repnz
mov
jb
xor
fs
rcl
dec
insb
insb
je
int
dec
fs
subb
rcl
sub
mov
mov
cmp
sub
push
push
fsubrl
sbb
adcb
lods
out
push
int3
add
add
pushl
dec
insb
add
mov
pop
popa
adc
fs
sbb
popa
es
cmp
loopne
fsubl
sbb
xor
and
add
dec
and
pop
in
mov
in
xchg
call
and
cmp
and
fldl
or
lret
ret
imul
xchg
push
clc
inc
in
push
lods
sbb
test
cmp
jb
sub
mov
jge
push
pop
push
adc
dec
in
or
sub
jne
xor
out
sub
and
and
scas
mov
jmp
jae
sbb
insl
xor
sub
mov
add
je
and
outsb
adc
mov
lcall
mov
cmpsb
imul
dec
rol
rol
adc
les
mov
enter
mov
lret
fs
int
das
into
bound
rcl
rcl
adc
or
pop
xlat
aaa
fcomp
lcall
fdivl
mov
sbb
loopne
loope
jecxz
lcall
out
call
jmp
in
daa
in
sbb
mov
out
fs
es
stos
outsb
repnz
sbbl
sbb
jge
mov
mov
pop
sbb
mov
inc
adc
jae
add
mov
or
mov
clc
sub
push
iret
adc
call
and
arpl
test
mov
js
loop
or
out
fst
mov
loop
inc
ret
pop
call
inc
or
cmp
cmp
cmp
sti
jg
jmp
pushf
mov
push
or
mov
pushf
mov
das
inc
stos
xor
fisttpl
in
rcr
add
data16
sub
inc
and
jmp
fucomi
sbb
dec
add
xchg
inc
in
cltd
push
xor
dec
jp
outsb
rolb
jmp
jge
and
add
or
mov
roll
insb
jb
scas
call
add
pop
push
sbb
sbb
jecxz
sub
jmp
or
cmp
jbe
fistpl
push
lods
mov
mov
mov
rcrb
xor
pop
mov
sbb
xor
call
repnz
lret
call
shr
inc
cmp
scas
adc
mov
jbe
scas
push
xor
les
int
or
mov
sbb
push
stc
leave
bt
sub
push
adc
rorl
stos
mov
shrb
loop
mov
push
clc
xor
pushf
pusha
setle
mov
pop
pop
shll
push
add
je
in
mov
pop
inc
nop
out
fs
mov
mov
arpl
fistpll
push
mov
push
push
and
mov
mov
out
xchg
xor
xchg
rcl
bsf
rdtsc
mov
mov
lea
daa
das
sub
cmc
aaa
rcl
cmp
add
or
cld
test
fstpl
sub
mov
xor
call
xor
add
push
mulb
mov
neg
test
xor
jmp
incl
mov
pop
aam
push
push
cmp
lcall
lods
pop
inc
in
mov
in
movsl
repz
not
pusha
mov
sar
pop
lods
into
or
insl
sbb
lcall
icebp
mov
imul
xor
push
iret
mov
xor
mov
repnz
shlb
or
aaa
cmp
mov
pushl
or
hlt
mov
pushf
into
add
pusha
bound
sbb
pop
sbb
mov
mov
xor
callw
int
ficomps
nop
shll
pop
mov
into
setb
stos
inc
push
mov
mov
lods
incl
push
push
setae
or
and
idiv
jg
rcl
rcr
cmc
mov
not
xadd
xchg
mov
and
adc
clc
add
cld
jg
lock
xchg
pushf
hlt
repnz
sub
mov
sets
inc
ror
add
sub
rolb
mov
outsl
add
leave
clts
stc
xor
sub
setne
mov
xor
scas
loopne
and
nop
int3
and
mov
call
iret
inc
dec
jle
outsl
js
out
sbb
add
cli
stos
mov
push
pushf
outsb
push
mov
stos
ret
add
ljmp
mov
ljmp
inc
mov
push
mov
fdivrp
adc
iret
popf
jmp
push
xchg
jnp
mov
sbb
jmp
pop
mov
outsb
mov
pop
mov
das
loope
dec
stos
rcrl
sbb
xchg
adc
pusha
roll
out
cld
cld
jae
mov
cli
adc
or
adc
stos
inc
outsl
jne
jae
cmp
iret
inc
xlat
imul
xor
mov
fwait
jae
inc
pop
xchg
sub
and
add
outsb
pop
frstor
call
int3
xor
mov
testl
jne
sub
xchg
fcomip
sti
sub
sti
sbb
pop
mov
call
lds
or
push
push
add
rcr
iret
adc
ja
cmp
jge
sub
push
test
jae
aad
adc
and
mov
and
push
rolb
nop
movsb
mov
or
in
fsubl
or
add
and
jbe
cmp
cmp
lret
pushf
or
cmp
push
add
mov
into
mov
ficoml
xchg
mov
cmp
iret
ds
mov
fdivl
or
sbb
adc
push
xor
mov
dec
adc
mov
aad
xor
loopne
mov
xor
jmp
loopne
test
sub
push
push
icebp
imul
out
imul
sub
push
pop
mov
cmp
je
or
data16
inc
test
pop
sbb
call
fdivrs
fidivs
dec
inc
add
cmp
mov
and
and
jmp
mov
enter
mov
pop
push
je
xchg
push
les
pop
nop
mov
mov
mov
mov
adc
push
btc
push
sahf
je
popa
xchg
cmp
in
xchg
add
mov
fisttpl
enter
aam
xlat
rcll
insl
shll
dec
mov
sbb
push
adc
add
data16
sbb
xor
mov
push
adc
fadd
push
cld
inc
shr
mov
cmp
adc
je
fcmovu
mov
or
mov
pop
jb
dec
data16
inc
jl
outsl
mov
pop
mov
adc
sub
push
jnp
mov
test
cltd
mov
mov
jle
dec
sub
adc
cmp
and
imul
mov
adc
xchg
mov
xlat
inc
and
clc
dec
xor
sub
sbb
cmp
arpl
sbb
push
ret
dec
push
mov
add
or
sub
mov
xor
push
out
pop
xchg
gs
dec
dec
dec
dec
xchg
gs
xchg
inc
push
cs
insb
mov
mov
ljmp
stos
gs
jb
imul
imul
sbb
mov
sub
je
jo
jo
lret
mov
daa
push
gs
gs
mov
jae
inc
xchg
inc
xchg
imul
lcall
pushf
inc
popf
sahf
lahf
fldt
mov
dec
movsl
shll
je
push
aam
dec
jo
outsb
fs
ss
notb
jmp
mov
gs
gs
sub
adc
lret
adc
je
sub
mov
outsl
outsb
outsb
arpl
inc
call
mov
ja
or
xchg
in
into
enter
mov
repz
sar
add
push
adc
fs
pop
push
push
cmp
outsl
std
lahf
aaa
in
dec
inc
cmp
int
ficoms
dec
into
add
inc
mov
hlt
xor
push
cmp
pop
mov
repz
jg
add
mov
push
jmp
push
pop
add
bound
fwait
stos
sti
je
push
add
mov
shlb
pusha
adc
je
insb
movsl
sti
je
jb
test
and
push
cld
loopne
shl
push
fcmovbe
adc
das
inc
mov
push
push
js
das
xchg
jne
dec
cs
sub
dec
ficompl
clc
aad
dec
pop
sbb
aam
stos
push
les
enter
lock
das
fmull
push
pop
jbe
xchg
sahf
lret
mov
lsl
pop
or
xchg
inc
push
inc
mov
icebp
sub
add
cld
out
cs
lcall
movsl
cmp
cs
fldl
cltd
lock
cld
loop
popa
add
or
sahf
imul
loope
lret
icebp
shl
cltd
das
mov
hlt
das
call
adc
ficompl
mov
in
popa
and
fisttpl
and
cli
lock
addr16
pop
jae
je
roll
out
mov
sub
dec
divl
push
sub
add
aaa
cs
mov
adc
xor
jmp
jle
mov
inc
or
xlat
sbb
subb
int3
jbe
popf
jle
jg
or
jae
dec
sbb
call
sub
adc
jo
inc
gs
push
fwait
sahf
mov
cmpsb
xor
aas
push
lcall
je
repnz
addr16
shll
jne
mov
jae
lea
jg
jmp
das
or
mov
push
sbb
adc
adc
or
jbe
imul
sbb
std
jmp
inc
or
inc
fcomp
push
mov
incl
sbb
push
in
dec
insb
and
inc
cmp
push
std
sub
jl
push
or
and
daa
lret
aas
popa
je
outsl
outsb
mov
lret
outsb
cmp
fdivs
imulb
imull
clc
daa
imul
adc
and
xchg
test
xor
xchg
sub
cld
ss
lock
gs
jmp
in
sbb
test
movq
pop
cmp
push
add
shrl
or
or
imul
lock
cmc
sbb
mov
adc
mov
adc
sahf
pop
dec
enter
sub
sti
dec
jge
mov
in
paddusw
push
sub
mov
dec
add
les
rolb
push
mov
mov
pop
cmp
and
pop
fcompl
push
xorl
movb
sub
dec
insb
xor
jne
cmp
je
pusha
and
push
mov
inc
in
dec
outsl
lods
insl
imul
add
je
xchg
and
and
or
stc
xchg
adc
adc
pop
cmpsl
cwtl
mov
in
rolb
roll
je
in
in
sbb
je
or
jle
or
push
pop
jg
movsb
jbe
repz
add
sub
and
push
jmp
aas
xor
add
mov
pop
adc
pop
adc
das
in
cmp
dec
pop
prefetchnta
js
push
pop
adc
dec
and
adc
cmp
out
cld
sti
enter
add
fdivrl
sub
das
mov
repz
in
xor
pop
jae
adc
jle
or
pusha
fs
xor
pop
xacquire
cs
or
out
jecxz
sbb
add
sub
imul
pop
adc
adc
call
stos
xor
inc
nop
in
and
fstp
leave
or
mov
xchg
pop
fdivrl
cmp
push
aaa
xor
adc
shlb
daa
jmp
cmp
jae
call
fisubl
pusha
mov
push
mov
pop
add
sbb
lret
popa
arpl
outsl
xorl
popa
orb
imul
imul
mov
mov
cmp
gs
outsl
outsb
gs
xchg
gs
gs
xchg
gs
xchg
imul
push
fstpl
lea
popa
arpl
jb
sub
imul
sub
push
loopne
loope
lcall
in
out
dec
pushf
push
mov
inc
iret
sub
shll
jb
jp
mov
or
dec
je
and
mov
add
inc
jmp
cmpl
or
jmp
mov
jns
add
movsb
std
rclb
add
xor
adc
loopne
aad
adc
test
jp
jnp
push
gs
stc
add
sbb
add
xchg
xor
xor
mov
jg
or
cmp
jl
in
add
dec
pop
inc
xchg
jl
adc
enter
sub
fdivr
data16
inc
fnsave
inc
inc
lcall
pop
shll
sti
cld
negb
cmp
out
ret
jne
cld
hlt
pop
out
mov
or
mov
clc
hlt
stos
add
out
movsb
imul
sub
fdiv
sub
xlat
or
leave
fdivl
sub
fs
sbb
insb
addr16
mov
je
mov
ss
inc
jle
mov
test
pusha
data16
push
incl
lahf
sbb
jmp
and
xor
and
mov
mov
fsubl
push
cli
call
popa
dec
adcl
movsl
push
jle
push
cmp
jmp
std
xchg
and
jecxz
push
sbb
push
movl
pop
jge
jb
and
inc
and
dec
push
loopne
push
cmp
inc
enter
push
fs
and
inc
loope
loopne
inc
push
adc
pushf
pushf
add
outsl
arpl
pushf
push
xchg
cmp
mov
lret
je
bound
jne
and
insl
or
pusha
in
fs
push
jo
icebp
repnz
push
mov
add
and
outsb
fcomps
push
mov
mov
enter
inc
in
jp
into
cmp
push
xor
leave
mov
arpl
outsb
cmp
jo
or
cmp
nop
or
fldt
imul
fstl
bound
scas
pop
test
cmp
sbb
xchg
add
jg
push
xchg
cld
in
scas
imul
lcall
flds
imul
push
push
iret
popf
insb
mov
je
int3
push
push
jno
lcall
jbe
mov
aas
stc
add
mov
shlb
xchg
or
sbb
mov
frstor
aad
movb
add
andb
imul
mov
mov
cmpsb
imul
cmpsb
jmp
jb
arpl
lcall
jbe
push
mov
outsl
insl
jne
mov
pop
cmp
add
pop
inc
outsb
adc
adc
mov
xor
je
push
push
mov
scas
xor
lcall
bsr
xor
pop
xor
inc
icebp
mov
inc
out
pusha
cmpb
sub
adc
sbb
adc
mov
dec
and
les
sbb
mov
fisttps
jmp
pusha
sbb
loopne
pop
push
mov
jne
push
cltd
adcl
xor
xchg
aaa
push
mov
aam
jo
inc
adc
add
cmp
dec
nop
mov
jb
lret
loope
rol
inc
push
fwait
cmp
enter
mov
and
rol
call
adc
lcall
inc
and
ret
sbb
loop
dec
mov
hlt
push
movsl
movsb
insl
enter
cmc
hlt
int3
xor
aas
dec
cmc
inc
push
cmp
lock
dec
int3
adc
loop
and
cmp
add
fiadds
pushf
call
fs
cmp
push
stos
hlt
add
insl
push
fcom
sbb
andps
adc
clc
enter
div
cmc
mov
push
and
fadds
cmc
or
cld
leave
and
cmp
pop
cmpsl
dec
fldl
jmp
push
jb
push
mov
xor
push
icebp
popa
cmpsb
insb
pop
repnz
fwait
div
insb
jae
je
addl
inc
fs
sbb
jb
dec
sub
push
cmpsb
lods
andl
addr16
jne
add
and
xchg
lds
xor
xchg
and
outsl
jne
sub
jp
into
dec
fs
gs
push
dec
inc
xchg
xchg
xchg
popa
shll
and
adc
sub
mov
sbb
imul
cmp
or
fisubs
push
insb
aas
lahf
ret
andb
sbb
or
jp
adc
push
jnp
add
sub
int
pop
clc
add
hlt
addr16
imul
or
push
mov
push
sahf
push
pop
int3
cmp
dec
dec
sbb
adc
sub
les
int3
mov
call
mov
xchg
or
dec
cwtl
push
jp
and
lea
orb
insb
inc
and
pop
in
adc
loope
icebp
adc
stos
stos
cmpsl
call
int
mov
or
xor
cmp
fldl
push
add
es
negb
mov
push
xchg
or
mov
into
mov
sbb
js
jae
fiadds
ljmp
xor
jle
or
jl
add
sti
push
fidivrs
lcall
imul
mov
mov
lcall
loope
mov
sub
dec
lea
add
roll
mov
lcall
or
xchg
pop
lea
test
out
outsb
inc
cs
sbb
jne
or
fs
dec
mov
aaa
push
dec
or
dec
mov
add
xchg
sbb
push
stos
insl
pop
ds
incl
mov
mov
stos
cmp
ss
cmp
mov
sbb
je
xlat
mov
push
mov
push
mov
insl
xchg
repnz
mov
lock
mov
mov
adc
push
jl
mov
je
repnz
push
cmp
push
mov
add
or
subb
test
ret
mov
xchg
ss
stos
lret
sub
cmp
and
bnd
insb
adc
pop
adc
sub
and
inc
and
jno
dec
sti
and
adc
inc
lock
cmp
adc
cmp
jl
add
jg
dec
push
out
negl
stc
xor
inc
pop
incb
fstpl
push
mov
cmp
pop
daa
lret
mov
xor
lods
fistpl
addr16
imul
pop
andb
lcall
cmp
or
das
xor
das
gs
xchg
gs
das
outsl
jo
gs
xchg
insb
cs
jae
call
dec
imulb
std
lcall
cli
sti
cld
inc
enter
sar
mov
or
mov
jo
leave
movsl
jmp
ljmp
or
pushf
pop
nop
add
rcll
pop
dec
lea
pop
ds
shlb
aam
sbb
imul
ja
pop
add
or
jne
xor
sar
outsb
arpl
jb
es
push
int
gs
aam
sbb
nop
out
cmp
in
push
call
cld
scas
mov
loopne
sbb
cmc
inc
in
push
mov
in
push
ds
fucomi
xor
shll
lret
cmp
mov
das
sar
int
popf
xor
pusha
cmpsb
xchg
xchg
dec
add
mov
add
mov
inc
psubsb
outsb
adc
call
jmp
pop
push
sub
shr
or
inc
jl
xor
je
cmp
test
pop
test
es
dec
jo
icebp
popa
add
fnstcw
shll
test
inc
cmp
push
test
push
jb
pop
jbe
aam
aad
sbb
add
sbb
arpl
mov
iret
adc
add
mov
push
adc
fimuls
push
and
mov
lret
mov
add
lea
add
jl
pop
lahf
test
inc
in
scas
xchg
fbld
pop
or
or
in
pop
in
in
jle
in
add
rolb
cli
ljmp
cld
xor
inc
pop
mov
pop
xchg
sub
push
popa
mov
clc
add
shrl
mov
xchg
mov
call
popa
push
or
nop
nop
mov
sub
in
mov
pop
adc
mov
mov
mov
xchg
xchg
mov
mov
lods
in
sbb
cwtl
push
push
cwtl
and
sub
in
sub
push
lea
stos
push
jo
cs
lods
lods
dec
scas
cld
scas
in
cwtl
pop
ret
in
inc
in
push
mov
jns
push
push
push
fldcw
arpl
in
mov
or
movsl
aas
inc
and
cmp
push
adc
xchg
mov
idiv
cmp
in
pop
sub
mov
pop
or
fadd
adc
ficomps
loopne
jg
add
and
enter
and
push
pop
xchg
gs
std
push
mov
lea
or
dec
iret
add
xchg
shr
call
jns
add
push
xor
mov
cltd
in
data16
icebp
shrl
hlt
ret
lods
pop
mov
push
cmpl
mov
cmp
imul
mov
iret
repz
add
pushf
cwtl
sub
ja
mov
sub
cmp
repz
push
and
jae
fs
push
in
test
cmpl
cmp
nop
out
fwait
and
dec
xchg
mov
and
jo
and
or
inc
mov
mov
or
xor
pusha
dec
xchg
add
rolb
lods
cld
mov
mov
gs
push
pop
mov
push
inc
dec
hlt
xchg
enter
movsb
adc
add
sarb
cmpsb
div
push
push
adc
adc
int
enter
jge
dec
push
dec
inc
aas
cmp
data16
jg
add
push
dec
popa
enter
fsubrs
adc
adc
xor
sbb
stos
pop
add
test
add
sub
or
aam
adc
les
arpl
and
imul
adc
popa
mov
adc
sbb
push
sbb
ficompl
rcrb
push
aam
arpl
or
adc
or
shr
out
sub
ret
or
xchg
scas
stc
lods
pop
mov
je
or
push
lar
push
add
push
or
ljmp
hlt
bound
inc
popa
dec
lods
loop
or
sub
mov
scas
shll
ret
xor
pop
mov
adc
popl
ret
push
lret
iret
fsubs
addl
jg
push
mov
and
out
mov
xor
sbb
and
iret
fdivrs
inc
xor
and
aas
pop
push
pop
sub
adc
out
mov
lcall
call
std
adc
xor
mov
pop
sarl
enter
add
pop
ficoml
dec
enter
and
call
lods
jmp
jecxz
aaa
cmp
mov
leave
dec
clc
in
adc
dec
pop
mov
pushf
dec
mov
outsl
jne
sub
and
mov
mov
fs
adc
insb
ss
xor
stos
int3
and
adc
fs
aas
sub
jne
sbb
neg
sub
sbb
cmp
scas
inc
dec
ret
push
jbe
sub
or
mov
addr16
loopne
fucom
adc
mov
daa
aaa
push
sbb
dec
sub
push
or
pusha
clc
loop
sahf
inc
or
leave
add
push
in
mov
mov
fmull
cmpsl
out
scas
aam
push
mov
shlb
lret
pusha
mov
push
cmp
mov
leave
out
jb
or
aaa
mov
sub
into
push
mov
idivb
mov
push
fstpl
jmp
clc
adc
sub
add
sbb
adc
adc
mov
sbb
pop
and
loop
loopne
push
and
or
mov
add
mov
movsb
push
lea
insb
mov
push
cmpsb
adc
mov
xor
mov
mov
leave
leave
mov
xlat
or
mov
stc
cmp
adc
pushl
je
lea
or
jmp
add
pop
push
jmp
sub
je
dec
dec
je
xchg
add
jne
add
add
add
sbb
test
paddb
test
or
xor
and
shl
or
je
aam
or
add
add
outsl
pop
in
jmp
mov
xor
out
lea
xor
movsb
imul
and
sbb
bound
fnstcw
lret
sub
pusha
mov
mov
fsubs
mov
mov
adc
imul
add
mov
mov
adc
xor
dec
cmp
dec
cwtl
es
and
addr16
ja
mov
mov
dec
roll
dec
and
and
dec
incl
mov
icebp
call
adc
pusha
in
loope
and
and
push
xchg
push
push
dec
xchg
gs
inc
pop
inc
outsl
pop
xchg
add
addr16
pop
mov
inc
adc
sbb
cmp
mov
or
and
call
outsb
int3
add
xchg
add
jmp
mov
subl
inc
fsubr
push
pop
or
popf
mov
inc
or
push
cmp
sarl
pop
pop
sbb
lahf
ret
dec
or
dec
hlt
jg
shlb
pop
in
je
idivb
push
sub
add
mov
pop
fmull
insl
imulb
push
dec
dec
inc
mov
or
cmp
mov
sub
push
call
sbb
mov
je
shrl
idiv
add
cld
dec
push
loope
pop
sbbb
pop
lock
icebp
clc
repnz
repz
cmp
std
fisttpll
xor
test
fcomps
into
std
mov
sahf
push
das
adc
fistl
rorl
adc
push
mov
and
in
lret
push
call
cmp
mov
ret
add
adc
movsl
add
add
mov
subb
push
mov
dec
mov
push
jge
or
and
rcll
jbe
fwait
loopne
pop
mov
add
ficoms
fdivl
into
sub
mov
cmpw
cmp
call
add
outsb
ret
xor
in
in
test
sub
cmp
adc
incl
mov
xorl
sarb
sti
jge
jo
add
jle
jb
dec
enter
or
imul
push
mov
mov
push
mov
pop
stos
or
fisttps
push
mov
dec
sbb
inc
add
rcrl
je
and
mov
mov
add
pop
add
jb
bound
ret
add
sub
and
mov
std
adc
jne
repz
pop
jnp
sbb
das
lods
idivb
ljmp
call
cmp
mov
dec
sbbl
fbld
jno
shr
jle
movzwl
mov
psubsb
ja
add
ljmp
cli
test
repnz
lods
mov
shr
add
dec
jae
mov
push
data16
lock
or
insb
fistl
sub
inc
adc
inc
add
imul
xchg
xor
outsb
pop
fcmovbe
scas
adc
mov
sti
inc
inc
adc
mov
add
insl
imul
stos
lret
cmp
add
aad
loope
insb
stos
push
jno
push
fwait
mov
lock
push
cmpsl
mov
ja
mov
adc
iret
aas
in
sbb
incl
lea
pop
mov
pushl
add
push
scas
mov
inc
test
lds
inc
sub
jo
inc
push
or
outsl
outsb
testl
sub
lea
sbb
call
push
jmp
mov
lcall
mov
inc
les
pushf
test
jae
dec
nop
cli
adcb
cltd
pop
ja
or
inc
jecxz
int
push
fcoms
or
jg
pop
mov
add
sti
lea
cmp
testb
je
mov
mov
pop
inc
sub
pop
mov
adc
mov
pop
stos
inc
or
cmpsb
je
jo
es
xchg
inc
mov
out
sahf
enter
push
adc
xchg
and
mov
add
xchg
rol
cmp
cmp
jno
mov
xlat
mov
stos
cmp
sbb
add
or
and
ret
pop
int3
andb
sub
gs
mov
gs
insb
outsl
pop
xchg
gs
jb
jb
gs
jb
outsb
push
insb
insb
xor
lock
or
js
je
push
inc
daa
mov
or
loopne
add
call
add
pop
mov
lahf
add
or
or
xor
scas
jge
je
addl
and
lock
mov
je
aaa
add
pop
mov
sub
leave
ret
fildll
aas
mov
jae
jno
add
add
cwtl
loopne
xor
push
mov
pushf
xor
pusha
data16
les
rolb
xchg
shl
mov
push
sbb
insb
fstpl
aad
jl
mov
cmp
or
sti
push
adc
xchg
inc
mov
pop
sub
sub
mov
mov
add
inc
cwtl
orb
fsub
adc
jge
aam
push
or
imul
xor
test
xchg
lods
add
scas
mov
mov
orl
or
test
fneni(8087
mov
addr16
fsubrl
lds
cmp
sub
xorb
mov
pop
subb
cltd
fcomps
mov
cmp
call
push
mov
mov
xor
sti
add
and
fisttpll
pushf
pop
push
test
xchg
test
jle
push
xchg
cltd
in
mov
add
push
or
adc
stos
push
push
sbb
lar
xor
je
clc
fdivl
adc
jns
insl
add
mov
or
inc
cmp
jl
jl
push
notb
fistpl
mov
pop
inc
test
rol
fadd
mov
dec
or
repnz
and
out
sbb
push
mov
or
idivb
imul
inc
inc
add
mov
in
out
xor
jg
pop
mov
std
jae
std
loop
sarb
in
jne
popf
in
add
dec
xchg
and
gs
pop
shll
leave
mov
lret
je
popa
jns
fmuls
push
push
test
daa
test
fdivr
inc
or
push
jmp
sbbl
jmp
jne
or
pushf
cmp
or
and
addr16
je
cwtl
hlt
loope
daa
mov
push
mov
test
loopne
push
mov
out
add
call
insb
sub
int
mov
mov
mov
and
push
push
xor
adc
sub
push
and
mov
aam
sbb
insl
lock
dec
into
add
aad
andw
fcomp
fisubrl
add
insb
stc
outsl
jb
dec
shll
dec
cs
push
adc
push
gs
jnp
jb
mov
cmp
out
push
and
dec
outsb
enterw
cltd
cmpsl
pusha
lds
add
ret
inc
aam
pop
ljmp
add
jmp
push
jno
mov
or
jmp
or
fwait
adc
pop
arpl
popl
mov
int3
movsl
les
mov
jl
xor
adc
fmul
shlb
lcall
jmp
xor
leave
push
idivb
adc
or
dec
ljmp
xchg
out
xchg
mov
pusha
add
and
iret
push
xor
pusha
xor
nop
dec
int3
and
loop
add
insb
lea
sti
jge
jl
adc
jmp
add
jae
sub
stos
or
or
loope
inc
push
xchg
mov
outsb
ret
jge
faddl
mov
jno
add
in
dec
push
inc
inc
call
fstl
shlb
adc
mov
xchg
mov
add
mov
or
mov
sub
nop
add
mov
push
dec
inc
hlt
mov
or
pop
add
add
lea
pusha
cmp
cmpb
inc
and
sub
aad
add
or
inc
fisubrl
lahf
adc
jae
dec
fs
pop
adc
gs
outsl
outsl
insb
push
xor
popa
jo
push
fcmovnu
incl
je
popa
insb
and
mov
pusha
cmp
ss
adc
pop
inc
insb
pop
mov
add
add
inc
dec
je
cs
cmovbe
aas
arpl
outsb
add
xchg
jp
push
jnp
std
add
sbb
fs
adc
mov
mov
outsl
popa
fs
imul
fnsave
movq
push
mov
pop
sti
imul
sbb
jns
add
ret
pop
mov
or
and
mov
jle
fs
cmp
sub
sub
or
add
fistl
nop
imul
outsl
jb
outsb
addr16
bound
push
push
gs
outsl
outsb
ret
pop
push
sub
add
insb
int
dec
sbb
push
addb
jo
xor
addr16
mov
add
mov
lods
insl
insl
mov
push
push
mov
imul
pop
dec
pcmpeqb
ja
push
punpcklbw
das
push
add
imul
stos
aaa
pop
insb
mov
push
imul
mov
adc
ficoml
ficompl
xor
push
btc
mov
mov
gs
or
out
idiv
cmp
sti
xor
mov
adc
outsl
jo
xchg
fucomip
jnp
in
imul
pushf
fwait
imul
jnp
daa
je
addr16
add
ds
jno
and
push
subl
dec
mov
sub
push
fistps
ret
add
fildl
and
dec
outsl
xorb
jbe
fcomps
push
jae
insl
lods
imul
fs
jae
add
add
arpl
push
outsb
mov
xchg
lods
xor
ljmp
mov
nop
lret
ja
jo
je
aaa
push
mov
push
or
pop
push
add
insb
sbb
push
outsb
or
insb
gs
ss
ret
addr16
fs
push
mov
and
jno
testl
xchg
add
mov
mov
push
shll
fiadds
sbb
mov
fsubs
jmp
std
sbb
outsb
mov
push
push
push
mov
push
mov
out
dec
pop
or
pop
pop
sub
adc
inc
in
movl
arpl
aad
push
sub
push
jb
insl
ret
divb
mov
outsl
outsb
bnd
and
lea
dec
movsl
jbe
pusha
mov
add
insl
inc
add
ret
cmc
add
adc
push
movsb
sub
xor
pop
xor
xchg
ficompl
pop
add
repnz
mov
jnp
aad
inc
inc
jb
sti
fdivrl
cmp
adc
inc
outsb
jne
mov
testb
xchg
scas
sub
add
or
in
add
sbb
pop
push
jb
call
idivb
fimuls
mov
pop
sbb
mov
roll
imul
add
dec
xchg
mov
movsb
popa
addr16
mov
mov
outsb
insb
jns
scas
inc
fisttpl
ficoms
mov
mov
cmp
mov
and
xor
inc
pop
sbb
xchg
loope
jae
movzbl
jmp
sbb
pop
outsl
push
and
mov
out
mov
jnp
mov
out
sub
or
loope
pop
jbe
ret
pop
sub
or
mov
mov
push
or
cmp
ret
sti
mov
or
mov
push
leave
mov
lea
daa
imul
addr16
mov
pop
pushf
fildl
add
push
pusha
sub
push
push
sbb
fisttps
jo
xor
cwtl
cmp
popa
jbe
sub
and
mov
mov
mov
dec
and
jg
je
sbb
push
mov
fwait
bts
cmp
fnstsw
mov
and
pop
int
int
dec
add
adc
cmc
cmp
adc
aad
cmc
popf
insl
add
jae
cmp
add
adc
jo
add
sbb
inc
add
jnp
sub
push
lret
cmpsb
jmp
dec
cmovl
push
icebp
cmpsb
pop
insb
mov
rorl
movsb
addb
and
inc
and
adcb
inc
push
sub
mov
lcall
fndisi(8087
aad
push
jae
dec
outsl
cmp
out
mov
lea
dec
into
pushf
mov
jmp
push
and
test
jl
jp
dec
ror
aad
mov
pop
hlt
sub
mov
call
aaa
xchg
mov
xchg
pop
mov
xchg
cmp
roll
incl
adc
mov
mov
mov
aas
xchg
loope
sub
aas
mov
mov
gs
xchg
arpl
dec
or
add
sub
pop
cltd
imul
orl
incl
mull
nop
mov
popf
inc
and
push
push
test
add
lret
pushf
shr
lcall
pop
jbe
jmp
and
mov
stos
mov
popa
sbb
pop
in
cmp
fisttpl
push
fadd
rcll
lcall
pop
sahf
pop
sub
cmp
setle
push
out
scas
loopne
rcr
or
pop
mov
aam
mov
pushf
mov
fstp
add
pushf
pusha
push
pop
cmp
inc
add
test
adc
mov
xor
sub
idiv
lea
mov
cmc
mov
inc
movsb
loop
test
aam
push
pop
enter
jp
add
or
and
adc
sub
mov
ficoms
inc
push
bound
xor
add
movb
adc
mov
pop
or
dec
enter
push
jmp
iret
mov
cmp
shl
pusha
lret
fldl
pop
call
mov
sbb
and
fcmovb
cli
add
test
lds
jmp
mov
inc
mov
ret
push
sub
roll
rol
add
dec
add
push
lock
leave
sub
test
jmp
les
mov
sub
sarb
stc
push
test
shl
sar
shr
rcl
dec
xor
xor
mov
push
shrd
shr
pop
or
test
adc
std
stos
xchg
sub
cmc
dec
cmc
jmp
mov
iret
repz
jmp
ja
push
jno
in
and
rcrb
enter
sub
cwtl
test
stc
push
imul
ja
push
cmpsl
add
add
mov
cld
push
call
gs
xlat
pop
add
push
mov
lea
cltd
insb
jae
incl
fdivr
xor
mov
in
adc
lret
xor
decb
loopne
sub
sub
shlb
lods
pop
jbe
out
push
xchg
sub
xor
lock
and
adc
pushf
data16
adc
xor
popa
push
aad
shll
cmp
adc
loopne
cmp
sub
xchg
add
push
or
ja
mov
shl
and
clc
xchg
fisttpll
lret
or
mov
repz
clc
jg
jle
test
js
mov
sub
addr16
cmc
pushf
aam
out
fidivrs
mov
cmp
pushf
addr16
inc
jmp
pop
xor
lods
xor
out
test
inc
je
or
into
xchg
adc
mov
mov
sbb
shr
jmp
adc
cld
cld
outsl
mov
push
jecxz
loopne
inc
stc
mov
lahf
rorb
fwait
jnp
mov
ds
xchg
jbe
dec
add
aas
stc
xchg
shl
or
pusha
clc
sbb
fisubrl
push
es
or
or
mov
mov
sahf
lahf
shlb
decl
xor
call
int
daa
mov
jle
push
push
pop
jmp
je
adc
or
mov
pop
test
enter
outsl
out
incl
ret
ja
cmp
xor
sub
sbb
out
in
call
add
mov
inc
or
or
inc
and
pop
sbb
idivl
jmp
jbe
sti
jecxz
repnz
and
jge
shr
mov
cmp
cmp
xchg
xchg
orl
rcll
sub
jmp
sbb
call
fs
adc
jo
mov
into
in
inc
pop
cmp
sbb
lock
and
adc
push
call
sti
testb
fimuls
cld
cmpsl
jo
clc
scas
cmp
push
mov
gs
jg
mov
mov
inc
stos
push
mov
in
outsb
mov
or
aam
cmp
jmp
lock
call
jbe
movsl
in
add
add
cwtl
jae
cltd
push
leave
aad
mov
mov
sti
rcrl
mov
mov
imul
cmp
fbstp
loopne
setp
sbb
inc
mov
push
ss
repnz
xchg
in
add
fmul
insl
sub
ss
or
call
xchg
aaa
subl
xchg
movb
ret
nop
jne
mov
mov
jb
fdivrl
lret
fdivs
ficomps
jecxz
std
in
outsl
xchg
add
neg
xor
and
outsb
outsl
mov
jl
aad
subl
loope
inc
push
mov
sti
outsl
or
add
shl
mov
fwait
cmp
in
push
outsb
sahf
daa
jecxz
sarl
lods
lret
pop
pusha
inc
jo
ret
inc
jnp
pop
jbe
lret
push
ja
inc
jne
pushf
ja
cmp
fidivs
enter
stc
test
call
add
dec
or
xor
insb
icebp
sbb
mov
xchg
pushf
inc
sbb
jle
leave
adc
dec
ljmp
fldt
or
mov
into
out
aad
pop
outsl
adc
add
clc
shl
pop
cli
or
imul
cmc
inc
call
sub
ja
or
pushf
pop
mov
gs
notl
jmp
xchg
sub
sbb
mov
std
scas
mov
push
hlt
jmp
mov
call
push
into
les
mov
mov
cmp
or
fcompl
add
pop
jmp
filds
jns
in
sub
jmp
clc
ror
jg
jne
jmp
mov
pusha
sbb
test
or
ret
adc
mov
adc
xor
fisubrs
outsb
mov
imul
cmp
incl
inc
push
mov
add
sahf
sbb
and
aad
pop
je
mov
stos
cmpsb
jecxz
icebp
mov
mov
jae
pop
add
scas
jns
aas
push
pop
mov
mov
and
xor
jmp
fsts
stc
fs
fdivrl
in
push
jp
cmp
fistps
push
pushf
xchg
std
hlt
lea
jp
loop
and
rcl
arpl
add
ja
sub
arpl
clc
shr
pop
or
call
ja
sahf
push
movsb
aam
orl
sub
jmp
mov
aas
clc
or
push
call
pop
pop
mov
mov
inc
mov
mov
in
out
bt
jmp
loopne
mov
clc
jle
add
frstor
aam
cbtw
mov
jmp
loopne
add
push
sbb
jbe
jmp
clc
jae
xor
loope
leave
push
inc
jmp
lock
cwtl
push
pop
pop
xchg
add
mov
arpl
iret
jge
nop
lock
pop
xlat
in
lcall
and
jne
fnsave
pusha
outsb
inc
mov
sub
dec
pushf
or
adc
or
js
sub
inc
stc
call
insl
ficompl
pop
or
pushf
dec
add
test
fmuls
mov
mov
pusha
sub
jp
hlt
pop
loop
cmpsb
jae
pop
pop
mov
call
shl
sbb
add
sbb
jmp
mov
inc
add
and
test
xchg
jp
rorl
pop
pop
jmp
int
popf
mov
fcomip
adc
jmp
jge
mov
pop
mov
xchg
lds
ror
xor
leave
mov
jne
dec
int
shll
cmc
setge
jle,pt
sbb
stc
das
out
in
or
or
push
insb
inc
xchg
in
in
ss
jmp
imul
loop
dec
sbb
gs
movsb
ljmp
jmp
xor
jmp
icebp
out
out
xchg
call
hlt
test
pop
lea
std
jmp
neg
push
and
adcl
cmpsb
test
out
jmp
incl
fwait
pop
xor
mov
mov
stos
mov
jnp
fs
bound
aas
mov
je
arpl
std
xchg
into
push
sub
clc
jae
sbb
pusha
adc
fbld
call
pop
push
mov
adc
xor
jge
inc
jne
sarl
pop
stc
jmp
mov
adc
les
sbb
aad
daa
aaa
cmpsl
cmp
sub
mov
pop
test
xor
outsb
pusha
pop
call
ret
dec
add
pushf
dec
popa
adc
and
mov
add
test
frstor
call
lahf
xor
xor
in
das
cmp
outsl
xchg
and
sbb
repz
lret
pop
cs
cli
fiaddl
and
insl
add
mov
out
hlt
and
fcmovne
cld
mov
ja
clc
sub
insb
xlat
xor
shlb
cli
and
out
fistpll
mov
pop
pop
jnp
jp
pop
in
iret
xchg
repnz
jne
stos
cmc
mov
enter
mulb
idivl
sub
or
sahf
iret
jp
or
add
pop
cli
ficomps
or
fwait
in
sbb
and
notl
dec
ss
inc
aaa
add
mov
ja
xor
out
lock
or
adc
fsubl
out
lcall
mov
jnp
daa
sbb
sbb
icebp
sbb
jnp
out
addr16
mov
pop
push
outsl
ret
add
shrl
fsubp
mov
das
ja
fidivrs
sbb
adc
jl
test
sti
inc
sti
ret
pop
ss
es
inc
pop
inc
ret
or
pop
pop
cmp
pop
pop
or
sbb
stos
or
xor
das
dec
decl
in
loope
in
lret
imul
out
mov
jne
sub
sub
fimuls
xchg
push
adc
fld
loope
jnp
xchg
push
dec
and
sti
das
arpl
sbb
stos
imul
mov
notb
fidivrs
fistps
pop
aas
and
mov
jae
jp
inc
scas
mov
pop
xlat
das
or
fsubp
sbb
inc
aas
ret
jnp
divl
and
mov
mov
repnz
loopne
cld
sub
call
movsl
mov
jnp
dec
imul
push
jge
sbb
loop
hlt
or
in
shl
and
add
mov
ficomps
and
call
sub
stc
pushf
cmc
mov
test
fwait
push
out
push
rcr
daa
mov
sbb
and
jg
mov
mov
sbb
rcr
dec
pop
jmp
pusha
mov
inc
out
mov
repnz
sbb
or
dec
cmp
mov
psrad
add
push
xchg
sar
push
int3
cmp
incb
enter
sbb
stos
sbb
mov
and
cmpsb
cmp
mov
clc
push
movsl
add
inc
int
push
ljmp
inc
adc
les
pushf
mov
insb
mov
push
and
cmpb
fsubr
test
pop
add
sub
and
cmc
lahf
sbb
push
clc
xchg
movsb
push
inc
mov
ja
xchg
stc
or
cmp
mov
sbb
call
out
cs
mov
fidivrs
insl
mov
inc
call
popa
mulb
pop
sub
and
and
jno
pop
jle
sbb
xchg
push
jg
push
lods
fimuls
ret
call
cmp
aaa
arpl
adc
icebp
jb
push
adc
cmc
das
cmp
and
in
cs
push
shlb
add
lock
loop
es
rol
pushf
std
add
and
push
push
ljmp
into
mov
hlt
pop
cltd
and
push
adc
scas
mov
stos
in
dec
outsb
cmp
ret
push
ret
dec
icebp
push
stos
mov
addr16
push
das
ret
test
cmc
not
jmp
enter
aad
pop
aas
in
mov
pop
test
jmp
mov
out
pop
not
test
call
mov
fucomip
or
filds
mov
loopne
cld
mov
sub
stc
push
add
mov
cs
addl
mov
cld
mov
inc
testl
push
das
pop
test
pop
fcmovnu
stos
fdivs
out
inc
jmp
cmpsl
add
inc
cmp
cwtl
cmp
int
addr16
int
test
mov
mov
xchg
xchg
jno
movb
lock
loopne
jp
add
addb
inc
out
lds
dec
pushf
daa
add
inc
clc
int
cmp
aad
fistpll
and
xchg
mov
and
pop
enter
sub
mov
fs
mov
or
ficoms
mov
xchg
stos
loop
repnz
shr
lret
push
out
xor
xchg
fbld
add
nop
stos
bnd
pushf
push
dec
ljmp
mov
cmp
gs
and
pop
and
call
mov
jne
pop
imul
mov
cltd
pop
repz
mov
jb
aam
call
aaa
lds
push
test
add
loop
push
out
pop
xchg
das
lock
movsl
and
pop
aam
cmp
add
dec
loopne
sbb
movsb
pusha
dec
lds
mov
jge
add
push
call
pushf
stos
xchg
push
or
ret
sbb
add
inc
cmp
jmp
xorl
outsb
mov
ret
mov
icebp
or
nop
xor
add
mov
negb
xchg
outsb
push
shll
data16
pusha
imul
sub
sub
mov
add
cmc
adc
pop
xchg
fsubrs
adc
in
scas
out
rorb
pop
lock
push
call
icebp
shl
stc
outsl
push
lret
jge
clc
inc
add
movsb
repz
inc
jmp
xor
push
mov
mov
imul
insl
push
out
mov
or
idiv
push
sbb
fsubrl
or
push
jmp
sub
mov
inc
mov
jne
jg
test
decb
add
and
push
in
call
cmp
outsl
fs
jno
je
xchg
sub
test
out
sqrtps
xlat
mov
add
int3
sti
xchg
mov
flds
pop
in
inc
sahf
jmp
push
test
push
inc
call
push
sbb
push
in
clc
adc
pop
imull
push
inc
add
bound
pushf
adc
movsb
and
xchg
xor
stos
pop
push
mov
pushf
test
mov
in
je
fwait
lcall
divl
jbe
mull
shrb
sbb
out
pusha
push
fildl
stc
test
lods
cmp
into
mov
push
fdiv
push
in
cmpsl
xor
push
scas
out
scas
fdivs
pop
push
xchg
and
xor
cs
jne
sbb
push
xor
test
pusha
insb
and
neg
shrl
sub
push
test
xchg
out
das
jns
add
xor
or
int3
inc
mov
dec
add
xor
testb
ret
adc
mov
adc
dec
inc
loopne
das
aaa
stos
fcmovbe
shlb
sub
pushf
icebp
in
xchg
popa
pop
pusha
mov
loopne
push
rclb
cwtl
jl
jo
rcr
cmp
dec
sub
pushf
cli
shr
rol
dec
loope
call
mov
sub
push
loope
orb
mov
inc
mov
jbe
pusha
mov
stc
mov
jmp
pop
lods
lret
and
adc
and
ret
xlat
movsl
mov
fadd
fcmovbe
ret
aaa
xor
mov
in
add
loop
in
mov
push
cmp
mov
cmp
iret
mov
push
enter
std
sbb
mov
jo
test
push
add
arpl
lock
mov
add
aaa
jmp
dec
mov
iret
mov
mov
es
arpl
call
cmp
loope
dec
out
jo
loope
rolb
mov
cmp
scas
inc
xor
imul
hlt
xchg
ljmp
fstpt
loopne
jae
fdivs
pop
icebp
inc
out
out
stc
or
decl
pop
jns
cmp
xlat
sub
ljmp
cld
aas
out
xchg
leave
out
mov
mov
mov
pusha
mov
ja
jmp
bound
push
xchg
and
push
jb
add
mov
mov
adc
lret
aaa
sbb
cmp
mov
adc
cli
mov
jp
mov
inc
std
ss
scas
and
nop
in
call
popf
mov
fcomi
push
sub
ja
test
fwait
sbbl
out
or
into
hlt
data16
fs
subb
push
sbb
adc
arpl
call
xor
mov
pop
adc
sub
ficoms
mov
cmpsl
xchg
push
xchg
dec
sbb
adc
ljmp
dec
divl
mov
js
mov
clc
fistpll
dec
push
repnz
push
xor
push
jmp
push
std
cmp
popf
les
mov
xor
aaa
jl
pop
fisttpl
push
mov
jecxz
push
sbb
jnp
push
cmp
dec
jle
sbb
daa
aaa
popa
and
enter
decl
add
in
js
add
lds
mov
or
jl
inc
int
out
mov
decl
imul
sub
sbb
in
pop
mov
mov
sti
ljmp
in
loopne
fisubrl
cmp
xchg
jl
test
xor
xchg
loopne
jge
sbb
int
inc
movsb
std
or
adc
push
stc
add
xchg
pop
popf
and
loop
mov
cmpsb
mov
mov
test
insb
mov
sub
pop
inc
pop
xchg
lret
and
in
inc
xorb
rorb
adc
aaa
xlat
xor
pop
inc
ss
popa
xchg
inc
dec
and
loopne
lock
xor
imul
mov
lea
and
arpl
ljmp
sub
aas
mov
adc
dec
and
enter
or
pop
movsl
mov
inc
sbb
pop
idiv
sub
test
mov
ja
rorl
out
sub
cmp
decl
in
mov
fcmovnb
insl
outsl
xor
sub
mov
stos
sub
mov
inc
mov
jbe
lea
jl
sbb
sbb
jg
std
std
orb
mov
test
mov
dec
ret
nop
lahf
lret
call
dec
adc
stos
ds
mov
imul
jae
add
mov
mov
aas
add
mov
fwait
mov
mov
pop
mov
nop
incl
dec
mov
popf
push
movsl
cmp
insl
mov
pop
ja
xor
xchg
pop
mov
pushl
loopne
sbb
lcall
push
rcrb
adc
push
insb
pop
fsub
lcall
and
or
leave
mov
sbb
call
cmp
add
inc
int3
pop
jmp
fs
movl
mov
lods
cmp
bound
lds
push
cmpsl
fld
mov
xor
decl
mov
or
rcrb
stos
fcmovbe
adc
pusha
lods
cmp
outsl
std
das
mov
arpl
loopne
sbb
dec
mov
jb
roll
int3
jg
xor
mov
sub
cmp
mov
aas
or
aas
cld
mov
inc
xor
adc
ds
dec
sbb
jmp
andl
cmp
mov
rcrb
popf
mov
cmp
fstp
ljmp
lock
jp
jge
lahf
fildll
andl
stc
push
pop
cmp
imul
incl
cmp
mov
mov
xor
xor
aaa
in
jmp
incl
mov
imul
lea
addr16
test
pop
lods
xchg
jb
push
stos
iret
lcall
fmull
jmp
outsl
fildl
xchg
sahf
push
outsb
sub
xchg
dec
push
sub
inc
std
nop
add
pushl
movswl
adc
hlt
push
sub
mov
sbb
enter
jg
mov
arpl
push
push
push
cs
dec
jg
lcall
push
pusha
push
imul
push
out
push
xchg
inc
into
fstpt
insb
inc
push
sahf
jmp
push
stc
jae
outsl
cmp
int
insb
clc
adc
push
add
cmp
pushl
aaa
in
add
ret
ds
ret
lea
sbb
stc
add
mov
and
rclb
xor
rcll
pop
dec
stos
adc
icebp
incl
pop
mov
xchg
sti
lcall
dec
repz
hlt
std
pusha
orl
jecxz
movsb
lods
popa
inc
jp
pop
bound
icebp
or
mov
mov
popf
cld
pushl
clc
mov
dec
je
loope
jnp
xor
add
adc
push
push
test
outsb
adc
aaa
jnp
mov
mov
das
cmp
dec
scas
iret
xchg
das
sub
mov
mov
jno
adc
jnp
cmpsb
or
aad
ljmp
lock
and
outsb
jb
dec
inc
adc
andb
jne
imul
pusha
push
addr16
sbb
or
xchg
push
sub
repnz
jae
pop
shr
pop
test
xchg
inc
inc
idivb
sti
lret
mov
movsl
das
xor
inc
bnd
int
sahf
jns
xchg
lock
call
stos
lea
push
dec
and
or
cwtl
pop
test
loopne
adc
mov
pop
lret
data16
inc
jg
adc
jno
xor
scas
ss
imul
mov
mov
jne
dec
or
mov
loope
pusha
sbb
push
mov
xor
in
outsl
mov
mov
jb
and
in
pushf
fucomi
and
pop
mov
fidivs
repz
jae
sbb
icebp
mov
cs
decl
mov
or
cwtl
movsb
insl
cmp
jg
outsb
call
sub
bound
loopne
imul
data16
es
loopne
sub
cmp
in
or
sub
lcall
adc
jecxz
stos
enter
pop
dec
aas
cmp
adc
call
aam
mov
cli
inc
out
aam
sub
mov
stos
std
add
or
insl
dec
nopl
and
inc
cld
pop
clc
daa
push
push
lahf
insl
sub
inc
push
sbb
clc
lcall
mov
cmp
mov
sub
sub
pop
ljmp
test
ret
cli
jmp
add
mov
pop
adc
shlb
in
cmp
in
cmp
cmc
test
rolb
pop
int
sub
cmp
sbb
into
in
movsb
add
inc
pop
cmp
ljmp
cmp
push
mov
stos
pop
cli
loop
inc
dec
or
dec
lods
hlt
cmpsl
in
jmp
out
loopne
enter
inc
xchg
push
pop
sub
dec
jb
add
imul
call
sbb
mov
mov
pusha
push
jmp
mov
das
int
xor
mov
gs
xor
add
fwait
dec
lods
dec
jae
pop
out
jno
loop
rorl
jg
movsl
decl
roll
fstps
add
xchg
enter
sti
call
in
shl
add
je
jmp
test
bound
cmc
jmp
shrb
pop
cli
pushl
outsb
bound
nop/reserved
repz
ljmp
roll
int
jo
ljmp
xchg
mov
rolb
mov
sbb
jg
pop
xor
pop
mov
idivl
ret
sub
pop
jns
lcall
cld
pop
lods
xor
call
pushf
sbb
ret
dec
cmp
lret
jae
cld
pushl
cld
fcmovne
sti
dec
xchg
dec
les
push
daa
or
arpl
jmp
xchg
add
out
cmova
ret
imul
out
mov
push
hlt
insb
call
push
icebp
leave
jne
pop
loopne
mov
lahf
inc
data16
cmpsl
hlt
inc
arpl
mov
call
mov
xchg
pop
push
mov
mov
test
lock
push
push
add
std
aas
aas
in
xor
inc
lods
xchg
sub
or
pop
cli
mov
xchg
lahf
cmp
divl
pusha
aas
dec
cld
jae
out
add
adc
shll
loope
insb
cmp
test
push
cmp
add
stos
lds
loop
jp
stos
push
lods
repz
hlt
xchg
or
push
mov
cli
push
mov
adc
daa
andl
bound
lcall
leave
jl
push
mov
sub
rcll
jle
push
cli
mov
cmp
jmp
pop
dec
sub
push
mov
int3
push
pop
jmp
inc
pop
and
xchg
int3
add
inc
popf
clc
bound
test
jg
loopne
fwait
sbb
pop
or
jmp
adc
and
cld
jmp
lahf
xor
push
test
fstps
ljmp
stc
inc
movsb
xchg
out
fcom
jno
inc
int3
aam
dec
aam
mov
movsl
pop
mov
icebp
lcall
adc
aas
push
cmp
ljmp
push
cmc
pop
mov
add
fsubrs
stc
mov
sahf
or
inc
jl
call
lds
mov
mov
pop
into
jg
jnp
std
cmp
fwait
repz
mov
mov
ret
negl
pop
push
cli
xchg
fisttps
xor
test
xchg
punpckldq
imul
out
sarl
adc
and
shrb
sub
dec
and
call
out
add
jle
mov
mov
filds
movsb
imul
incl
les
inc
mov
xchg
xlat
xor
insl
inc
cmc
dec
data16
xchg
push
scas
dec
cld
ljmp
pushf
jmp
hlt
mov
nop
mov
sbb
push
insl
rcll
sub
pop
sti
sar
ljmp
dec
dec
xorl
mov
sahf
iret
clc
xchg
push
sbb
das
inc
in
mov
mov
pop
xor
jne
rol
fstpl
cwtl
aam
leave
aam
cmpsl
push
notb
jp
decl
sbb
lds
jg
or
stos
fwait
scas
adc
mov
inc
mov
jne
xlat
xchg
je
mov
xchg
lea
push
imulb
hlt
insl
sbb
loopne
clc
mov
sti
out
out
out
in
lret
push
clc
sub
mov
addr16
jne
pop
push
mov
pop
fmuls
pop
fidivs
push
fwait
arpl
ljmp
xchg
js
shl
test
lds
loop
data16
data16
xor
sub
sub
mov
lcall
call
jp
test
ds
pushl
dec
ja
hlt
imul
daa
call
xchg
imul
mov
inc
incl
pop
stos
jmp
and
pop
mov
jp
jns
add
ljmp
push
in
pop
int
xchg
xchg
loop
pop
pusha
or
xor
or
fistpll
pop
or
jb
inc
fnstsw
sarl
mov
aaa
arpl
fdivrl
into
mov
aaa
cmp
jg
repnz
jg
and
and
shrl
std
lods
jmp
aas
add
outsb
pop
outsb
loopne
repnz
jmp
pop
dec
dec
cmp
rcll
ljmp
icebp
xchg
jns
mov
mov
gs
ret
fildll
cld
mov
std
sub
jl
xor
fisttpll
mov
test
mov
and
jbe
sbbb
lea
and
jg
mov
mov
jmp
jp
pusha
cmp
mov
decl
cmp
inc
mov
add
mov
das
xchg
adc
dec
shrl
ja
sti
fwait
ljmp
daa
inc
pop
clc
shlb
popf
cmpsl
xchg
orl
les
idiv
incl
jb
adc
leave
pop
dec
xor
arpl
rcl
nop
mov
push
into
cmpsl
aas
in
jb
js
shlb
cli
jg
fisttps
insb
es
push
mov
mov
jmp
lret
sbb
mov
jmp
imul
stos
mov
sbb
pop
jbe
mov
sbb
outsb
fsubs
cltd
jmp
adc
push
sub
sub
push
scas
xorl
loope
jg
scas
fiaddl
cmp
test
and
push
icebp
xchg
loopne
cmpsb
sub
pushf
or
adc
sub
inc
out
cli
jg
mov
and
data16
dec
in
pop
ljmp
jae
cmp
and
ljmp
adc
popf
mov
outsb
adcl
test
sub
ja
jmp
shll
out
rclb
mov
movsb
popf
je
sub
mov
das
jg
lret
pop
add
rorb
imul
cld
pushl
andb
sahf
mov
push
pop
sub
mov
xor
popf
jo
rclb
adcb
aas
movsl
movsl
outsb
aas
and
stos
inc
push
pushf
pop
stos
inc
or
mov
lcall
ret
and
cmpsl
sbb
sti
divl
es
lahf
lahf
movsl
xor
pop
sbb
lret
sahf
icebp
xor
in
int3
mov
or
ret
ja
call
xchg
sub
lcall
jae
pop
mov
das
out
das
mov
xor
mov
dec
popa
pop
std
das
lock
push
lret
push
jne
aaa
pop
add
xchg
jg
or
enter
xchg
cmp
cmp
mov
add
push
mov
mov
push
jb
mov
lock
pop
int3
sbb
xor
mov
das
std
mov
sub
rorb
mov
dec
pop
or
fimull
sbb
sub
cltd
and
testl
das
cmc
test
loopne
xor
inc
ds
jl
mov
pop
mov
sbb
mov
fmull
addb
lods
pop
jo
das
lock
push
pop
jl
inc
jl
mov
and
dec
in
in
or
sub
cmp
dec
xchg
out
sub
adc
pushl
adc
jecxz
mov
mov
outsb
pop
scas
packuswb
cmpsb
and
lcall
add
pop
clc
decl
pop
enter
ja
jo
out
ret
inc
out
stos
add
inc
test
xchg
mov
mov
ljmp
ljmp
inc
bound
add
mov
inc
xlat
add
sub
push
shl
outsl
jmp
mov
imul
jg
sub
cmp
out
inc
mov
pop
hlt
mov
fucom
jg
int
sub
lret
sbb
daa
das
push
mov
ljmp
inc
jo
int3
loop
outsb
mov
scas
pusha
lret
loop
call
push
ret
xor
mov
jecxz
scas
ret
xor
lcall
cld
jnp
pop
in
mov
lahf
jb
adc
fs
xchg
add
inc
mov
movsb
minps
mov
in
aaa
out
push
cmpl
lret
jmp
and
movsl
jo
into
xor
ja
sti
cmpb
lea
icebp
mov
sarb
xor
sbb
add
enter
outsl
jg
rcrl
cmp
adc
and
cmpl
pushl
je
jp
stc
inc
mov
pop
inc
rcll
cmp
sbb
push
lcall
pop
mov
imul
inc
sti
aam
aad
or
loop
xor
ljmp
test
mov
mov
or
and
pop
jge
cmp
imulb
mov
btc
jne
jb
insb
jb
icebp
push
mov
dec
ljmp
jg
pop
stos
adc
in
and
mov
adc
jg
outsl
xchg
iret
imul
inc
test
fsubl
mov
nop
pop
push
jp
jg
cli
shll
inc
orl
sar
pop
filds
fwait
pushf
sbb
xor
mov
xor
insl
lret
call
pop
lods
daa
imul
dec
out
mov
cld
add
sahf
mull
hlt
scas
js
jb
xchg
pushf
lahf
out
or
int
jae
out
pop
sub
in
mov
jl
jg
jb
jo
pop
in
rorb
test
xchg
insl
cmp
fisttpll
cld
cmp
mov
sbb
pop
dec
mov
push
pop
xor
stc
aaa
fcoms
mov
sbb
int
xchg
xlat
cmpl
add
cli
das
rclb
cmp
enter
jg
jl
push
xor
icebp
sbb
dec
dec
jnp
inc
gs
pushl
mov
xor
popa
loope
sub
mov
add
call
daa
push
std
lret
imul
and
fists
out
jecxz
inc
mov
movsb
movsb
inc
cltd
adc
aaa
clc
das
mov
loopne
test
sub
rorb
sbb
dec
mov
pusha
cli
aaa
pop
imul
dec
dec
mov
or
dec
divl
push
bound
xor
fstps
adc
push
jmp
mov
iret
faddp
mov
bound
jno
cld
jecxz
pop
std
jg
mov
and
popa
xlat
xchg
aad
adc
push
lcall
adcl
sub
sbb
xchg
in
cmp
xor
push
call
clc
pop
pop
stos
jae
sbb
xor
div
test
pop
mov
das
cmp
mov
or
pop
xor
into
loope
ret
pop
insl
push
mov
sub
decl
movsb
mov
mov
jge,pn
jecxz
xor
inc
lret
fs
cmp
push
cwtl
mov
adc
aad
cmpsl
inc
mov
pusha
push
ret
mov
cmp
cmp
dec
push
cli
test
mov
push
xchg
pop
pushf
fbld
out
es
xchg
mov
pop
nop
pop
pop
int3
mov
outsb
xor
sti
mov
push
sbb
mov
neg
mov
sub
mov
out
out
push
out
fwait
dec
inc
stos
icebp
pop
jg
mov
push
push
pop
mov
lock
sbbb
aam
test
stos
cs
icebp
aam
jg
fwait
ljmp
pop
mov
cmp
push
cmp
add
sub
in
in
pop
idiv
inc
pop
cmp
call
clc
popf
and
xchg
jae
cwtl
push
xlat
in
xchg
push
mov
dec
sbb
or
loop
cltd
js
jge
mov
iret
or
lods
or
xor
and
cmpsl
jns
sahf
mov
aaa
pop
jmp
or
cmpsl
ljmp
cmp
fbld
stc
jp
sbb
mov
jae
dec
popf
push
or
ret
lods
xor
in
pushf
inc
cmp
mov
xlat
rcr
loopne
jns
jg
cmpsl
pop
and
dec
jo
cltd
pushf
rclb
mov
shll
jb
dec
out
aaa
ret
cmp
jecxz
mov
xchg
adc
js
jae
sahf
fidivs
mov
pop
ljmp
mov
rcrl
jmp
or
xor
adc
in
add
aaa
mov
and
cmpsl
xor
xchg
push
nop
fdivl
clc
cli
sub
ss
inc
data16
push
leave
mov
clc
add
enter
push
ds
in
mov
mov
faddl
xor
push
mov
aam
xor
or
inc
xchg
and
test
fdivrs
icebp
stos
arpl
cli
mov
sbb
and
popl
test
and
jmp
fcmovne
inc
xor
call
mov
fsub
mov
jno
xor
cmp
sbb
sbb
push
mov
cmp
cld
jmp
fsts
in
sub
mov
pushl
cld
test
mov
jge
xchg
lret
sarb
lods
movsl
mov
aaa
fcoml
xchg
mov
dec
pop
inc
xchg
jmp
dec
js
mov
mov
aad
call
outsb
test
cwtl
jae
std
ljmp
jo
and
out
sub
pop
lods
fwait
lret
std
mov
adc
push
idiv
mov
insl
ljmp
loopne
and
push
push
lcall
mov
pop
cmpsb
dec
test
push
jne
fsubs
insb
fidivl
xor
pop
test
sbb
sub
lret
pop
fsubr
push
jns
or
iret
iret
mov
arpl
dec
jle
add
cmc
push
loope
cmp
popf
int3
enter
std
decl
inc
lods
mov
add
imul
rorl
sarl
call
jae
cli
mov
and
xchg
jge
and
roll
sar
pop
ljmp
icebp
enter
mov
int
std
and
call
iret
or
ljmp
mov
repnz
cmpsl
andl
lcall
incl
in
pop
rol
xor
insb
imull
add
out
pop
push
cld
mov
scas
insb
push
sbb
xor
push
flds
sbb
and
test
inc
rcrb
repnz
decl
aaa
mov
cltd
int3
sub
push
imul
add
mov
leave
pushf
int
fldenv
push
sbb
mov
dec
addr16
dec
pop
or
scas
xlat
pop
push
pop
push
cs
cmp
push
dec
enter
popa
idivb
rclb
inc
enter
jp
mov
mov
rcrl
dec
cld
cltd
mov
je
and
or
ficoms
incl
mov
loop
pop
mov
xor
sti
aaa
lock
pop
cld
mulb
ret
mov
jne
push
sub
mov
push
sub
sti
mov
xor
shl
daa
cltd
lret
mov
jns
lret
mov
add
dec
lods
test
adc
add
pop
cli
jmp
js
mov
dec
xor
push
js
mov
movzwl
cmp
pop
andb
decl
xor
xchg
mov
rcll
cwtl
pop
inc
xchg
sti
or
cmp
pop
shlb
es
or
lea
sbb
dec
xchg
repnz
in
pop
sub
leave
mov
push
pop
push
sub
mov
jg
mov
int
cld
mov
lret
cmp
fistps
leave
xor
shlb
and
ljmp
pop
cld
jle
dec
sbb
sti
adc
mov
rcl
lock
xchg
bound
incl
pop
dec
fcmovb
dec
add
in
xor
and
lcall
icebp
je
fs
decl
xchg
pop
stos
rcrb
cmp
clc
cmp
stos
pop
shr
pop
std
out
insl
lea
jne
fs
popf
inc
out
xor
loopne
lods
xchg
cmp
fdivr
pop
mov
roll
fucomip
mov
push
sbb
iret
movsl
ret
sub
das
and
inc
cli
xchg
push
ficoms
jmp
xor
adc
pop
and
jo,pt
es
pop
cli
cwtl
xor
add
mov
cmpsb
jecxz
push
hlt
loopne
test
fstps
or
nop
cli
enter
lock
es
pop
repz
clc
pop
pop
mov
pop
in
dec
pusha
test
mov
sti
scas
int3
loopne
std
push
pusha
dec
xchg
fdivl
sbb
push
dec
or
xor
push
xor
mov
insb
call
jo
sub
addr16
loopne
adc
mov
push
mov
inc
mov
push
adc
cmp
call
or
push
shl
jmp
ja
sti
sub
icebp
subb
sbb
dec
lret
pop
daa
pop
aam
push
icebp
jecxz
ljmp
jb
sarl
jne
stos
add
push
jp
jl
mov
cltd
inc
push
ret
into
lds
dec
imul
dec
pop
aad
in
daa
arpl
stc
inc
outsb
inc
mov
mov
mov
cmp
jge
outsb
cmpsb
and
icebp
mov
hlt
les
les
in
shrb
bound
fnstsw
jg
imul
fs
cmp
sti
jmp
pop
fbld
xchg
fldl
ffreep
fcoms
insb
mov
jno
xchg
cmpsb
push
lock
test
lea
adc
xor
and
jg
ret
xor
push
jg
jbe
fcomps
out
mov
adc
push
mov
out
loopne
pusha
mov
pop
dec
xchg
cmpsl
test
sub
mov
sahf
hlt
mov
or
rcrl
jg
xchg
xor
adc
jb
add
xor
arpl
in
popf
jmp
pop
sbb
mov
jg
ss
cli
mov
imul
lcall
mov
dec
vmwrite
in
jo
es
jbe
dec
push
pop
mov
xchg
mov
stos
push
sahf
cli
jge
xor
or
arpl
in
test
jo
test
das
ljmp
xchg
notb
pop
dec
cmp
repz
in
mov
jmp
mov
xor
or
push
xor
jmp
mov
sbb
lods
push
xor
mov
push
sahf
push
call
dec
js
cmpsb
gs
jg
jp
outsl
icebp
leave
jecxz
int
sub
sub
cli
insb
sub
ljmp
sarl
bound
movsb
xchg
mov
sub
loope
and
pushl
jnp
dec
xchg
dec
mov
out
and
cmp
test
sahf
cmpsl
xchg
push
push
icebp
or
jo
pop
popf
outsl
cmp
loop
std
psllw
lcall
and
xor
add
jl
pushf
add
pushl
aaa
push
aas
clc
filds
pop
mov
lods
fnstsw
fldt
jnp
mov
inc
fidivrs
in
ss
scas
pop
lcall
push
in
gs
xor
xlat
xor
cmp
sub
xchg
addl
int
dec
bnd
int3
jnp
adc
nop
cmp
pop
bound
push
jmp
ds
pushl
leave
imul
xor
inc
mov
inc
jl
mov
outsl
ss
push
scas
icebp
inc
pop
mov
inc
pop
xchg
mov
push
std
adc
xchg
orb
test
or
inc
and
xor
adc
push
call
dec
lret
arpl
adc
aaa
insb
stos
or
dec
adc
ds
dec
mov
loop
adc
add
stc
sub
add
std
mov
call
js
pop
cmp
sbb
sub
jmp
adc
insl
mov
idiv
jp
jb
shlb
sbb
loopne
add
mov
stos
xchg
cmp
shl
dec
or
mov
lock
popf
jmp
jno
jg
es
pusha
pop
pop
fcomps
pop
mov
sbb
mov
adc
pushl
int3
add
scas
push
and
dec
sbb
dec
bound
push
mov
jmp
xchg
push
movsb
mov
inc
push
mov
leave
das
pop
fwait
adc
dec
clc
cmpsb
cmp
push
jl
movsl
jl
or
add
pop
out
loop
pushf
or
mov
pop
inc
ret
pop
push
xor
xor
mov
pop
insl
jmp
adc
incb
push
ja
mov
pop
mov
and
xchg
jl
outsl
int
test
ja
out
lret
push
adc
jmp
int
pop
mov
jmp
cmp
xchg
or
mov
enter
add
mov
mov
aam
pop
cmc
icebp
sub
ljmp
mov
xlat
cmp
or
bound
frstor
std
pushl
insb
insl
mov
insl
in
dec
mov
fdivl
mov
adcl
std
outsl
mov
hlt
leave
loopne
mov
mov
cmp
pushl
std
addr16
leave
inc
cmp
lock
je
xor
movsb
orb
ret
mov
fldt
call
mov
add
test
cli
ljmp
jnp
lock
xorl
mov
icebp
cmp
pop
or
in
clc
call
callw
pop
stos
paddusb
rcr
aaa
mov
mov
fucomip
cmpsl
adc
add
mov
aad
ljmp
jl
jo
sub
icebp
dec
mov
cmpsb
ds
mov
int3
lods
rcrb
jmp
cli
cltd
mov
pop
mov
popf
and
decl
popl
inc
xchg
mov
and
jge
fs
in
pop
mov
mov
inc
imul
xchg
xor
insl
and
adc
ljmp
mov
dec
or
mov
test
mov
pop
ljmp
push
adc
cmc
or
lcall
xchg
je
lods
jmp
mov
mov
or
clc
mov
mov
mov
arpl
jns
jl
cmp
clc
aad
dec
jo
decl
sbb
ds
jne
push
pop
mov
iret
rcrl
pusha
xchg
aam
aas
xorb
movsb
cmp
pop
std
std
mov
pushl
dec
adc
mov
dec
and
pushf
mov
pop
sub
xor
orb
in
jge
cltd
in
sbb
repnz
aam
push
rolb
fsubl
adc
test
jmp
mov
sahf
inc
add
jae
xchg
push
data16
xchg
mov
inc
sbb
adc
or
jmp
adc
dec
insl
sub
dec
test
test
jne
inc
or
enter
pusha
addl
pop
inc
push
adc
jl
jge
sbb
ror
dec
xchg
and
aam
push
leave
push
das
in
sub
repnz
in
xchg
inc
mov
ljmp
test
jecxz
scas
les
jns
jg
ret
add
loopne
sbb
dec
lcall
lahf
daa
xchg
call
jbe
and
int
imul
fildl
push
divl
jge
cmp
push
clc
dec
ljmp
inc
or
aam
pop
ret
fisubrl
adc
test
mov
outsb
add
stc
lcall
xchg
mulb
cwtl
call
shl
inc
jg
sbb
inc
lcall
push
lds
data16
pop
clc
sbb
call
ret
aas
loope
aaa
sub
push
mov
dec
pop
jbe
xchg
add
fidivl
aaa
test
loopne
call
xlat
sub
daa
and
jg
mov
pop
mov
sbb
push
loopne
push
mov
mov
decl
mov
adcl
push
lret
xchg
loopne
inc
gs
lcall
mov
ret
jno
int
iret
std
es
jmp
notl
mov
adc
jg
cmp
shr
dec
dec
lock
aam
pop
enter
jg
fisubrl
adc
test
and
add
hlt
sub
lret
fbld
sahf
inc
xor
repnz
pop
mov
xchg
arpl
mov
ret
jge
jb
enter
sub
jecxz
jmp
xchg
pop
push
cmpsl
xor
jle
mov
adc
push
pop
mov
lcall
icebp
and
mov
push
mov
push
mov
out
and
out
leave
mov
mov
dec
sbb
adcb
mov
ret
adc
inc
ret
fisttps
add
pop
jmp
add
outsl
insb
sub
xchg
sub
and
aam
push
ret
insl
pop
loopne
in
frstor
fwait
es
test
add
pop
xor
in
repnz
fcomp
std
cwtl
cmpsb
in
push
sbb
in
aad
mov
incl
mov
addr16
gs
mov
ret
jp
dec
inc
vmaxss
repnz
xchg
in
imul
loopne
jg
dec
pop
js
cmp
add
shlb
pop
ret
cld
lcall
jae
pop
xchg
xchg
mov
adc
shlb
hlt
add
jp
pop
ljmp
push
xor
sub
inc
insl
adcw
pop
lock
ss
fistps
xchg
das
jns
mull
or
loope
gs
jb
inc
aam
push
in
fnstcw
popf
pop
test
mov
add
xlat
add
mov
inc
push
fadd
fcmovnb
lods
adc
arpl
test
andb
movsb
fwait
rclb
inc
loop
outsb
adc
xchg
movsl
outsl
cmc
inc
or
lds
popf
and
xchg
je
cmpsl
pop
shl
lahf
mov
nop
cmc
out
mov
loop
dec
inc
mov
xor
ljmp
pop
push
lds
and
ja
pop
dec
std
cwtl
shll
mov
and
dec
arpl
popa
lock
js
add
inc
pop
push
push
pop
adc
pop
push
ret
pop
in
data16
aas
popf
mov
and
and
inc
int3
outsb
add
jae
fcomp
xchg
ljmp
gs
mov
cs
pop
insb
add
out
inc
stos
lcall
ljmp
outsl
mov
aaa
fwait
mov
sarb
adc
jle
or
and
jg
and
jl,pn
mov
out
popf
sti
ljmp
sub
ja
jns
sub
enter
and
in
push
pop
pop
in
xchg
nop
push
jg
jg
lret
movsl
mov
loopne
inc
aam
pop
int
jecxz
sub
dec
cwtl
inc
jbe
sbb
roll
sbb
inc
inc
cwtl
repz
cmpsb
add
jg
in
jno
sub
inc
add
dec
inc
mov
ss
call
repnz
push
rcrl
std
xor
and
adc
iret
outsb
out
clc
mov
xchg
ss
frstor
in
jbe
xchg
std
outsl
jp
jmp
dec
mov
out
jg
jmp
cmp
xchg
daa
pop
rclb
sahf
push
xchg
leave
call
jg
jg
sub
sbb
jns
pop
dec
cmpsl
ds
iret
push
jl,pn
pop
in
mov
fucomip
mov
loopne
sub
pop
xor
lcall
xlat
frstor
imul
add
jbe
cltd
adc
addr16
jg
mov
stos
hlt
movl
cmpl
es
daa
xor
sahf
adc
cmp
loop
rcrb
lcall
push
enter
xchg
mov
lahf
loop
daa
clc
sub
adc
mov
xchg
pop
insb
xor
jg
frstor
mov
xchg
or
lret
lods
lock
lcall
jg
das
push
xorl
testb
ds
add
pushl
addl
push
fcomps
push
mov
ret
clc
pop
jl
je
dec
pop
cmc
cld
and
adc
pop
lcall
xchg
loope,pt
xor
dec
sbb
fcoml
fidivrl
mov
jg
dec
stos
ror
cmpsl
or
rorl
xchg
rorl
mov
push
pop
sub
ds
lcall
dec
xchg
xlat
and
sahf
fyl2xp1
imul
les
add
je
pop
jg
pop
leave
pop
clc
fcmovnu
and
scas
jo
shrb
loope
aaa
test
jle
call
mov
jbe
xchg
cltd
outsb
test
fidivrl
movsb
lods
in
jp
mov
dec
mov
popa
xorl
or
enter
dec
jle
repz
in
imul
andl
outsb
fldcw
leave
pop
jg
repnz
daa
mov
jns
ljmp
push
sub
xchg
xchg
call
pop
out
xlat
lret
cmp
outsl
push
mov
jbe
jle
call
xor
push
fidivrl
movsb
cmpsl
jmp
pop
mov
pushl
data16
popf
push
pop
ljmp
mov
in
jns
ljmp
fsubrl
lcall
add
push
jle
adc
int3
and
xlat
lds
cmp
jle
sub
xchg
es
adc
jnp
cmp
in
int3
addr16
lock
jmp
popl
cmpb
add
sub
in
pop
dec
lds
shl
lcall
push
fbld
dec
test
adc
cld
aam
dec
or
push
lret
push
mov
lret
das
xlat
lcall
testl
mov
cwtl
sahf
lock
in
dec
fidivl
stos
ljmp
dec
leave
sbbl
sarl
cltd
lods
add
into
negb
cmp
out
test
call
iret
xchg
fmul
sti
mov
and
add
xor
add
decl
sub
cmp
cmp
enter
fdivrs
outsl
std
call
cmp
ds
mov
in
fildll
aas
cmpsl
aas
fistpll
add
jl
xor
xor
bound
jb
xorl
pushl
lcall
xor
mov
xor
pop
pop
xor
jae
incl
xchg
lods
xor
xor
xor
xor
xor
inc
call
cltd
xor
fstl
insb
or
inc
xor
mov
xor
sahf
xor
xor
xor
xor
out
add
sub
xor
push
outsl
outsl
mov
bound
je
jnp
test
out
xor
xor
push
inc
xor
dec
mov
dec
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
pop
inc
or
pushl
xchg
cs
ss
ss
ss
ss
aaa
cmpsl
aaa
aaa
lret
aaa
aaa
hlt
call
xchg
cmp
cmp
xchg
cmp
ss
pop
loopne
or
in
std
cmp
cmp
lods
and
or
jb
jns
ds
ds
aas
pop
aas
test
fwait
pusha
add
mov
push
xor
insb
xor
aam
fdivl
fucomip
fstpt
adc
and
add
dec
xor
xor
std
lahf
xor
xor
pop
xor
xor
hlt
or
xor
jle
mov
ljmp
lods
enter
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
call
xor
xor
sub
clc
jg
dec
xor
xchg
cmpsl
ss
shlb
fnsave
in
fldt
sub
or
adc
stc
cmp
cmp
cmp
cmp
mov
decl
cmp
cmp
and
cmp
cmp
cmp
cmp
add
xor
aas
dec
aas
push
aas
mov
aas
leave
aas
sarb
icebp
jmp
fnsave
mov
xor
hlt
xor
xor
xor
outsl
hlt
xchg
xor
xor
pop
xor
xor
jge
or
hlt
xor
fs
xor
int
xchg
aam
xor
movsl
xor
test
fdivs
ss
cmp
xchg
or
pushl
inc
cmp
cmp
bound
leave
cmp
cmp
cmp
cmp
cmp
mov
push
cmp
cmp
mov
mov
pushl
cmp
scas
cs
cmp
mov
mov
stos
cmp
jl
xchg
nop
aas
mov
mov
lock
lea
xor
clc
incl
jbe
jl
test
mov
xchg
xor
in
fnsave
hlt
or
adc
sbb
push
xor
xor
xor
xor
xorb
idiv
pushl
xor
xor
xor
xor
xor
xor
xor
jae
jns
xchg
xor
mov
mov
xor
mov
cmpsb
ss
mov
test
aaa
sbb
and
push
mov
lcall
aaa
mov
ret
aaa
xlat
cmpsb
aaa
repnz
das
cmp
pop
cmp
mov
mov
mov
cmp
cmp
pop
cmp
cmp
imul
je
cmp
cmp
cmp
mov
pop
cmp
sbb
or
cmp
cmp
fwait
inc
add
sbb
insb
cmp
cmp
fbstp
pop
xor
xor
ja
xorb
std
fnsave
mov
xor
insl
xor
ja
xor
outsl
icebp
fcomip
xor
xor
cmpsl
lret
xor
xor
xor
dec
xor
lcall
xor
aaa
xor
push
xor
je
jns
sbb
xor
mov
mov
xor
incl
pop
ss
add
ss
ss
fidivs
out
aaa
sbb
ss
add
aaa
push
sub
aaa
xchg
jns
aaa
jmp
hlt
cmp
inc
aaa
cld
cmp
cmp
dec
pop
insb
cmp
mov
cmp
cmp
inc
jmp
cmp
fistpll
add
or
pop
cmp
cmp
clc
mov
cmp
jnp
mov
xchg
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
xor
cmp
dec
cmp
data16
jmp
add
cmp
cmp
cmp
cmp
jg
ljmp
and
cmp
cmp
mov
mov
push
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
das
std
inc
movsb
mov
cmp
xor
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
sbb
cmp
push
cmp
cld
cmp
or
add
mov
cltd
movsb
jecxz,pt
add
or
xchg
ret
data16
cli
movsl
aas
mov
mov
mov
xor
mov
cmp
pop
xor
xor
xor
pushl
loope
repnz
xor
sub
xor
xor
xor
xor
jbe
fdivl
mov
icebp
xor
xor
xchg
jo
mov
mov
ss
ss
lods
ss
or
cmp
mov
aaa
sti
cwtl
aaa
lods
cmp
cmp
cmp
cmp
ljmp
cli
cmp
cmp
cmp
pop
xor
aaa
cmp
cmp
sbb
mov
cmp
mov
ret
cmp
cmp
cmp
pop
add
jmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cmp
cmp
or
lahf
je
xchg
lock
cmp
push
aad
or
or
fdivrs
mov
lret
rcrb
cltd
aas
pop
pop
popf
shll
cmp
cltd
pop
paddd
popf
fxch
cmp
int
cmp
cltd
ds
aas
out
inc
repnz
adc
dec
adc
das
xchg
xchg
mov
sbb
xor
and
daa
pop
and
mov
js
pop
xor
cmp
addb
inc
ja
push
je,pn
js
cs
or
adcl
pusha
push
punpcklbw
stos
jp
xchg
xor
pop
jnp
sub
invd
sbb
jb
cmpsb
insb
insb
testb
jae
daa
inc
repnz
and
out
rorb
dec
add
push
rolb
push
mov
push
add
mov
mov
and
inc
adcb
sbb
call
jl
adc
add
add
in
adc
loopne
ss
push
push
pop
inc
push
shlb
pop
pop
pop
push
rcrl
pop
mov
fdivr
lods
push
rep
or
inc
mov
aas
or
movsl
movsb
inc
inc
cs
or
cmpsl
add
add
mov
adc
lea
pop
sahf
inc
mov
push
jb
push
xchg
or
inc
ja
jne
inc
cmp
addb
push
push
or
je
sti
in
mov
add
fsubrs
outsl
int3
jge
sub
cmp
jnp
push
add
mov
fisttpll
adc
add
fistpl
jne
sbb
shr
cmp
addr16
ja
pop
push
mov
stc
fidivs
sbb
es
adc
and
mov
cmp
sbb
lds
pop
xor
mov
aas
cmpl
jbe
lcall
or
mov
fwait
adc
pusha
mov
pusha
out
jnp
shll
xchg
sbb
fidivs
pop
outsl
and
stos
mov
lret
jnp
repnz
or
leave
es
int3
aaa
pop
adc
sbb
add
add
out
push
adc
hlt
imul
add
insl
insl
xor
adc
popf
fs
insb
cld
insb
je
mov
mov
adc
je
int3
mov
dec
in
insb
dec
dec
inc
fisttps
inc
fdivrs
repnz
rclb
jb
pusha
mov
loopne
and
cmp
dec
mov
insl
insl
inc
gs
sub
dec
dec
inc
dec
cwtl
popa
popa
add
dec
subb
movsb
or
rclb
inc
mov
aaa
xchg
shl
pop
inc
xor
inc
jg
jne
xchg
xor
mov
jmp
sub
ret
add
push
daa
adc
mov
notl
leave
jl
add
push
fs
push
ss
out
jb
and
sbb
xor
enter
mov
jnp
and
adc
enter
push
push
push
ret
push
push
orl
mov
lahf
mov
or
mov
pop
sub
jbe
mov
adc
in
hlt
clc
xchg
adc
adc
mov
inc
inc
scas
xchg
mov
push
or
push
aam
cmp
std
stc
xor
pop
or
icebp
xor
or
int3
or
aas
das
or
and
leave
mov
test
loope
add
pop
jae
pop
das
sti
cmpl
jno
and
xor
enter
out
sub
adc
outsb
imul
pop
or
pop
ret
push
inc
push
xchg
or
adc
inc
xchg
ret
popa
and
adc
pop
xor
lds
popa
fs
cwtl
insb
dec
mov
or
adc
loope
inc
nop
mov
pop
mov
orb
clc
test
nop
out
das
jge
fisttpll
subl
or
cmp
jl
or
mov
cmp
orb
inc
std
add
outsb
jns
stc
lods
repz
lods
add
das
or
lret
add
loopne
and
lret
sub
mov
inc
aam
push
push
jb
mov
sub
outsl
outsb
gs
mov
lret
je
gs
add
fs
insb
xlat
popa
lret
mov
sbb
outsb
arpl
lcall
loope
xor
hlt
cmc
mulb
idiv
sbb
insl
xlat
dec
stc
inc
cli
je
sti
xor
call
fwait
and
jne
inc
push
call
dec
mov
adc
hlt
pop
je
cmp
pop
enter
add
dec
movb
insl
jb
lret
outsb
int3
int
movsl
pop
lcall
xchg
movsl
pop
lcall
adc
mov
aad
add
imul
jl
movb
std
pop
mov
leave
imul
int3
sub
or
mov
std
js
xchg
push
push
ja
dec
aad
push
sarb
push
int3
add
sub
add
sti
outsw
sbb
xchg
add
inc
and
sub
sub
inc
inc
xor
xlat
push
push
sub
push
cs
cmpsl
insl
jge
inc
rcll
cmp
je
push
mov
outsl
enter
ret
enter
jo
dec
mov
push
push
adc
or
pop
cmp
outsb
orl
cmpsb
cmpl
in
outsl
push
add
ds
push
int3
or
in
mov
imul
jne
je
mov
mov
mov
inc
inc
rol
scas
enter
cmp
shll
jnp
mov
mov
mov
mov
or
mov
aaa
lods
test
cmp
mov
lock
inc
xor
dec
insl
mov
or
pop
push
fsubr
sbb
outsb
popa
fadds
fiaddl
add
jb
cld
cmpsb
imul
add
inc
int3
fs
into
popa
insl
xchg
lret
in
shrb
outsb
rcl
gs
shll
jae
cs
sub
shll
outsb
lret
mov
lret
insb
popa
jne
arpl
fwait
sub
jb
aaa
leave
gs
insb
add
outsb
mov
inc
xor
sub
insb
lcall
sub
mov
gs
insb
outsl
or
leave
mov
gs
js
bound
adcb
push
jle
and
je
xor
loope
mov
xchg
lea
add
data16
cli
adc
in
or
fs
add
clc
loopne
inc
add
inc
lds
cmp
mov
btrl
hlt
ds
addr16
cld
rcrl
sub
push
movsl
cld
into
or
pop
inc
je
idivb
push
addr16
push
mov
push
call
xchg
repz
adcl
mov
jne
push
js
roll
pop
negl
ret
xor
mov
lods
and
push
fwait
or
adc
push
aam
add
das
adc
push
add
mov
and
mov
in
xchg
or
stc
mov
mov
sbb
add
es
dec
inc
and
repz
mov
mov
add
sbbb
fistpl
cwtl
push
ret
mov
push
inc
or
mov
test
ret
mov
sub
mov
fidivrs
pushf
adc
sbb
imul
inc
scas
lahf
pop
lock
xor
pop
mov
arpl
inc
add
gs
outsl
out
or
or
adc
loope
call
pop
pop
add
jnp
sbb
or
add
push
mov
sbb
inc
inc
push
test
push
push
nop
test
and
daa
dec
inc
les
orb
test
ret
cmp
jnp
test
inc
inc
add
xor
xchg
pop
popa
test
and
jo
and
sbb
inc
andb
repnz
add
push
add
adc
mov
push
cmp
shll
mov
jmp
mov
cmp
filds
add
je
sbb
mov
cmp
je
jg
adc
mov
sub
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
push
aam
adc
loope
test
fcmovnu
sub
roll
clc
inc
jl
add
out
loopne
add
cmp
addr16
ffree
and
cmp
je
rcrl
lret
notw
mov
andb
xor
pop
fisubrl
mov
test
data16
pop
xchg
add
inc
and
scas
inc
cmpsl
or
cmpsl
add
lcall
sti
add
pop
sbb
add
dec
xor
shll
pusha
je
sahf
imul
xor
mov
inc
dec
inc
cmp
xor
roll
cs
adc
addr16
addr16
push
inc
add
dec
add
or
ljmp
or
mov
insl
or
add
out
push
inc
xor
addb
pop
or
mov
loopne
outsl
pop
and
outsl
jne
jae
test
inc
rorl
popa
fs
sub
add
inc
sub
js
sbb
sub
outsb
xor
or
js
mov
iret
add
dec
dec
inc
push
sub
push
push
mov
adc
cltd
or
les
inc
and
pop
inc
nop
clc
inc
lret
dec
ss
add
dec
inc
jo
int
xor
and
add
or
addb
shll
data16
or
and
cmpsb
mov
mov
pop
outsl
sbb
pushf
and
iret
sbb
jb
mov
or
popa
je
add
add
dec
and
sbb
and
imul
adc
or
jno
fistps
jb
or
dec
outsb
outsw
data16
insl
es
loop
xor
in
int3
sub
adc
adc
imul
adc
lcall
jle
and
mov
push
outsb
jb
and
add
inc
outsl
js
hlt
es
xchg
push
add
addb
inc
jo
push
jno
or
xchg
add
or
inc
nop
sub
gs
andb
andb
adc
push
add
push
xor
push
push
cltd
insl
insl
dec
jae
sarl
add
push
sti
add
fadds
cwtl
or
add
fldcw
cmpsb
js
sbb
insb
mov
mov
cmp
fs
scas
jne
mov
std
add
pop
adc
mov
mov
inc
mov
xlat
xor
pop
or
jo
jmp
xor
add
je
rorl
add
mov
or
add
jecxz
push
stos
mov
pop
call
arpl
adc
or
or
btr
je
inc
rcl
xor
rcl
or
movb
push
jne
int3
icebp
bound
adc
add
sub
lret
jbe
out
adc
cmp
dec
mov
enter
jno
sbb
adc
pusha
fadd
sbb
push
dec
or
xor
addr16
cmp
int3
push
jecxz
outsl
jns
jae
cltd
bound
pop
jo
push
outsl
push
ret
jp
pop
jns
pop
pop
test
fimull
je
sbb
pop
lds
jnp
adc
stc
push
dec
mov
roll
imul
fcompl
data16
add
inc
testb
mov
adcb
inc
cmp
insl
sub
clc
clc
pusha
push
aas
add
xor
outsb
xor
add
pop
movsb
push
or
dec
mov
aas
xlat
jne
dec
add
add
and
xchg
int
jae
xchg
add
sub
add
adc
jns
jb
inc
jae
pop
push
gs
lret
outsl
and
mov
xlat
mov
pop
inc
and
push
nop
scas
outsb
inc
jae
and
popa
int3
arpl
and
add
aaa
insl
ret
addr16
jo
jnp
jnp
imul
xchg
pop
add
fildl
sub
add
lret
pop
xor
push
jb
cmp
fnstenv
xor
xchg
xchg
insb
popf
bound
mov
adc
dec
or
out
lahf
sti
lds
popf
addr16
mov
fwait
jmp
add
xchg
pop
xor
xor
mov
inc
push
sub
frstor
or
daa
es
or
xlat
outsb
jae
addr16
xchg
mov
daa
jbe
mov
inc
mov
fs
outsl
flds
je
and
fstpl
pop
xor
inc
es
jne
imul
and
in
mov
outsb
push
insb
cmpsl
xchg
add
aad
out
add
lcall
mov
xor
xor
lcall
sub
xor
inc
xor
xchg
xor
xor
fbld
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
call
mov
leave
mov
adc
xchg
ss
aaa
pop
xchg
mov
aaa
aas
cmp
cmp
cmp
mov
push
cmp
sarb
cmp
jg
cmp
jo
mov
ds
ds
ds
movsl
ds
ds
xor
arpl
jl
cmp
addr16
ja
aas
aas
aam
fwait
dec
or
inc
icebp
xor
push
xchg
and
sub
bound
xor
push
add
scas
dec
push
dec
jmp
rorl
mov
push
hlt
jl
xchg
out
popa
adc
fildl
inc
out
flds
cmpb
ss
divl
mov
pop
add
into
in
or
and
mov
add
pusha
and
pop
push
sbb
push
push
test
push
dec
push
test
adc
sub
and
add
js
repnz
popf
inc
sub
test
daa
inc
push
mov
sub
inc
jmp
pop
xchg
add
movhps
add
push
data16
lcall
mov
lret
cli
cs
into
jge
or
xor
pop
lcall
fcoms
movsb
jmp
xor
sbb
xor
add
inc
sbb
xchg
cmp
sar
add
adc
shl
test
dec
lcall
out
and
mov
xor
adc
ljmp
cli
test
test
and
mov
push
adc
rorb
ret
cmpb
aam
cmp
add
and
push
add
cmp
or
leave
sub
or
or
push
repnz
sub
stc
mov
and
cmp
or
push
and
push
and
and
nop
pop
jb
dec
sbb
pop
and
cmpl
es
or
or
lds
mov
mov
out
out
sbb
fsubs
push
cld
and
insl
mov
and
inc
adc
loope
add
pop
hlt
xor
insb
pop
pop
in
add
call
pop
push
fisttpll
rcrb
bnd
push
jge
pop
pop
cmpl
jle
icebp
jne
add
subl
and
lea
leave
push
pop
lahf
and
fidivrs
mov
mov
pop
stos
or
fwait
incl
incb
inc
xchg
xor
inc
dec
es
push
fsubr
add
pop
leave
dec
jmp
sub
imul
jp
mov
es
sarb
pop
cmp
mov
mov
push
sbb
adc
sbb
rcr
cmpsl
xchg
pop
mov
scas
sub
prefetch
xchg
loope
in
outsb
cmp
mov
cmp
pop
popa
jle
add
jp
stos
mov
clc
daa
hlt
push
outsb
sub
xor
test
fbld
in
adc
jnp
push
fisubl
inc
pop
and
or
and
sbb
popf
mov
repz
shl
popf
mov
rcll
jmp
pop
imul
adcb
aad
adc
enter
and
adc
sbb
popa
negl
inc
add
lea
jecxz
cld
mov
dec
mov
fcmovu
in
lret
es
pushl
sub
cmc
in
push
push
add
call
data16
cmpsb
or
push
adc
or
das
push
pop
aas
mov
insl
push
push
pop
lea
and
mov
xor
inc
clc
dec
mov
sarb
fisttpl
lea
inc
sub
or
sti
outsl
mov
scas
cmp
jne
mov
inc
nop
add
aaa
xlat
inc
rol
add
xor
enter
xchg
xor
je
jb
dec
xchg
sub
lcall
mov
mov
mov
in
add
popf
addl
inc
cmp
das
pop
pop
cltd
adc
pop
push
push
add
daa
inc
fsubs
or
cmp
xor
mov
jns
call
cmp
dec
cmpl
rcrb
push
mov
mov
das
ss
add
int
or
es
jb
hlt
cmp
adc
or
inc
fildll
inc
pop
fstpt
add
push
lea
cmp
aaa
negl
call
movsl
mov
pop
js
lods
jb
dec
xor
mov
and
xchg
cmp
je
inc
add
cmp
jl
jmp
push
mov
std
outsb
js
rclb
lret
popa
pop
jecxz
add
out
sbb
mov
jbe
shll
mov
je
sbb
sbb
and
inc
and
cmp
and
aaa
jl
mov
xchg
mov
orl
pop
fdivrl
jne
lea
fbstp
jo
xchg
cmp
pop
mov
push
cmp
out
push
xor
mov
loop
sbb
sbb
call
dec
inc
lcall
and
aad
fdivrs
daa
add
sub
xor
and
jo
sbb
aad
sub
push
aas
inc
cmc
mov
push
push
call
in
aas
add
in
clc
ss
xor
and
add
sbb
cmp
sbb
or
aad
lret
inc
lahf
add
mov
enter
int3
int
mov
jnp
push
xchg
loopne
and
fstps
adc
stos
adc
in
fs
fs
loop
sbb
fs
aam
sbb
sbb
xlat
fcomp
sbb
sbb
fcmovu
sbb
sbb
loopne
cmp
sbb
fsub
fsubs
decl
int3
xor
ror
data16
adc
sub
sub
or
dec
andl
aam
sahf
xchg
inc
and
loopne
rolb
idiv
call
inc
xor
in
and
addr16
dec
pop
push
push
lods
inc
popa
in
push
cld
push
les
sbb
sbb
out
add
mov
mov
jmp
enter
adc
or
and
enter
mov
push
cwtl
add
cwtl
inc
push
and
sbb
or
adc
les
nop
xor
xorb
add
xor
inc
lcall
adc
inc
mov
sub
push
insl
sbb
test
xchg
mov
lods
or
je
adc
decl
push
fs
push
push
mov
jo
inc
outsb
jbe
outsl
outsb
xchg
sub
aas
jae
jle
adc
jb
xor
orb
lods
push
lret
sub
rorb
out
jg
cmp
jbe
or
add
add
push
or
inc
aaa
mov
mov
dec
testl
jbe
jb
jb
ret
mov
imul
dec
outsb
das
fisubrl
push
call
adc
mov
out
insb
jae
dec
into
and
stos
add
xor
stos
and
inc
in
add
sbb
and
and
push
lea
lcall
shll
add
add
mov
or
xorl
daa
dec
mov
push
insl
xor
decl
lret
das
dec
xor
xorb
xor
outsl
inc
cld
pushl
cli
xor
xor
xor
xor
mov
xor
xor
in
mov
pushl
fdivl
jmp
aaa
mov
xchg
aaa
stos
aaa
cmp
dec
in
movsl
mov
mov
adc
decl
add
cmp
cmp
cmp
cmp
jle
loop
cmp
xor
sub
cmp
push
dec
cmp
cwtl
cmp
or
pusha
lcall
add
mov
mov
push
add
cmovne
jnp
cmp
or
shlb
inc
inc
es
push
outsl
jne
arpl
sti
sub
xor
aaa
in
sub
mov
xchg
xor
jb
or
daa
add
sub
jmp
push
add
popf
mov
incb
add
rolb
shll
sbb
lock
insb
dec
push
je
inc
mov
je
add
sahf
add
push
add
add
int
add
into
das
push
and
arpl
mov
xchg
inc
xchg
lahf
adc
rcrb
adc
mov
xchg
or
or
and
add
dec
dec
add
push
and
push
shlb
adc
cmp
rclb
push
aas
stc
add
add
mov
add
add
add
addb
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
