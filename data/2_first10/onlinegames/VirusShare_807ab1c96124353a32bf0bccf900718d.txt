fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pop
jnp
bound
xor
aaa
or
cmp
cld
xchg
inc
sbb
aaa
and
in
sub
fnstsw
andb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
js
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
or
out
and
push
testb
je
adc
call
push
loop
addr16
mov
push
aad
and
push
je
xchg
mov
cmp
out
jnp
adc
aas
xchg
inc
cs
sbb
std
pop
jmp
or
cmp
mov
icebp
push
lds
or
lods
loope
bound
call
test
psrld
mov
inc
inc
dec
dec
test
jne
pop
fldenv
push
pop
jmp
lds
shl
or
push
jecxz
insl
mov
add
cmp
xor
sti
decl
test
add
and
aad
pop
clc
inc
and
inc
jnp
sbb
add
jl
jae
mov
adc
daa
push
aaa
in
int3
fistpll
sub
jg
push
bound
or
push
in
les
out
inc
jl
sbb
jbe
push
in
inc
mov
mov
push
pop
or
cmp
cwtl
pop
and
in
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
cmp
add
add
xor
test
adc
fidivrs
or
sbb
shl
mov
xchg
fsubr
pop
and
ss
xor
lret
pushf
imul
mov
xlat
inc
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
rcrl
data16
adc
pop
imull
shlb
xchg
or
xchg
sarl
sbb
movsb
icebp
les
std
stos
push
std
enter
mov
cld
std
dec
push
mov
iret
outsb
int
aas
cmp
push
pop
sar
fucom
data16
lods
jb
gs
cltd
imul
fldenv
out
imul
iret
push
out
imul
imul
imul
mov
data16
stc
cwtl
mov
lods
out
call
mov
jns
pop
jnp
sub
je
push
push
fwait
cmp
mov
or
mov
xchg
xor
xchg
and
add
and
mov
inc
imul
fs
in
rorl
outsb
ds
je
jae
in
les
pop
sti
bound
push
cmp
pop
xor
and
insb
movsb
cmp
outsb
and
cmp
int
mov
subb
or
fldenv
data16
call
mov
lods
and
jnp
jbe
xchg
push
or
cmp
outsw
dec
repz
or
jmp
addr16
pusha
jbe
cmp
ds
outsl
mov
fsubr
sub
outsl
sar
sahf
sbb
cmp
pop
mov
cmp
jl
call
jbe
adc
push
daa
cmp
sbb
add
imul
insl
nop
gs
out
and
cmp
fistpll
pop
lock
cmp
cmp
test
icebp
stos
idivl
sbb
fnstcw
mov
sbb
xor
lretw
adc
ret
fwait
or
in
insl
enter
enter
cmp
lock
cmpsb
dec
dec
sti
out
mov
push
ret
ljmp
frstor
or
in
lea
vhsubps
loop
dec
push
jb
sub
and
jae
sub
mov
or
loope
xchg
mov
addl
jbe
push
or
and
and
push
mov
add
and
ret
dec
push
dec
inc
dec
dec
inc
pop
ja
stc
add
dec
inc
dec
xchg
inc
push
dec
addb
fisubrl
inc
outsl
and
popa
or
lock
sbb
andl
push
add
add
nop
add
push
pop
ss
mov
inc
lock
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
and
outsl
repnz
adc
mov
rolb
stos
jae
vrsqrtps
jo
lds
daa
repz
cmp
mov
shrb
imul
mov
push
inc
add
in
dec
sbb
dec
adc
sub
addr16
and
add
or
xor
pop
xor
mov
js
add
pop
add
scas
cmp
cltd
dec
mov
push
xor
pop
insb
lret
push
jo
ja
mov
mov
nop
xchg
xor
cmpl
nop
out
insb
inc
cs
je
mov
lock
xor
loopne
inc
push
push
pop
sarb
pusha
cld
mov
dec
jb
insb
outsl
arpl
out
or
or
pop
mov
xor
mov
mov
xchg
test
into
ss
pop
inc
loop
daa
sub
add
xor
cmpsb
add
mov
mov
xchg
int
insb
shlb
in
add
imul
cmpsb
imul
imul
fnstenvs
enter
add
cmpsb
imul
imul
shll
push
data16
shll
nop
scas
mov
fnstcw
jp
shll
ja
cmp
sbb
cmpsb
pop
ss
loop
mov
imul
insb
fwait
into
add
push
mov
xor
lcall
pop
push
dec
imul
xor
inc
dec
bound
imul
cmpsb
imul
loop
jle
cmp
push
dec
ss
shll
mov
add
clc
scas
outsb
nop
cmpsb
pop
lcall
pop
lods
add
mov
adc
gs
mov
push
sub
cmp
pusha
imul
dec
sub
pushl
push
gs
fs
sub
dec
je
jo
jne
jns
std
xchg
mov
aaa
dec
jo
outsb
push
jb
adc
sarl
dec
dec
add
jl
fldcw
aaa
insb
add
add
or
rolb
mov
mov
adc
sbb
shlb
out
mov
push
pop
pop
test
test
mov
add
and
pop
flds
or
sbb
pop
sub
or
add
cmp
add
ss
and
mov
ja
xchg
xor
aas
mov
aas
add
fsubs
mov
rorl
incl
and
add
sub
inc
push
xchg
adc
ss
inc
sub
test
lea
fs
cmpsb
pop
das
xor
orl
adc
cli
inc
inc
ud2
push
add
outsb
int
outsl
add
jg
adc
arpl
je
jne
jb
gs
imul
or
push
gs
pop
mov
gs
add
push
inc
jb
push
and
ja
fisttps
ja
push
mov
jae
pop
and
stos
pop
mov
pop
xor
push
sbb
sbb
repz
and
test
pop
cs
add
inc
test
imul
insl
mov
push
dec
inc
push
push
inc
push
inc
dec
adc
outsl
data16
imul
ja
and
inc
jne
jb
je
mov
jae
outsl
outsb
dec
fwait
ja
jb
inc
popa
jb
push
aas
mov
aas
out
dec
inc
push
push
dec
xor
data16
stos
mov
out
je
jo
jb,pn
mov
fdivs
arpl
and
dec
xchg
ret
sub
das
pop
orb
dec
mov
push
aas
mov
push
out
insl
aam
jno
or
jnp
stos
xchg
stos
pop
mov
sbb
mov
add
push
ja
jne
mov
jne
mov
add
xchg
test
dec
sub
mov
mov
popa
outsb
inc
cld
das
movzbl
lea
jmp
lea
or
movsl
imul
or
cmp
inc
lock
movsb
aas
pushl
mov
mov
cmpl
push
aam
push
push
add
aad
dec
lea
mov
add
pusha
mov
xchg
add
jmp
or
or
mov
pop
dec
or
test
fs
mov
arpl
cld
scas
stos
fiadds
outsb
imul
and
mov
iret
jl
arpl
mov
pop
or
jge
popa
or
addr16
outsl
push
loopne
je
jae
addr16
cs
pop
add
cli
jo
add
add
pop
pop
push
fs
ret
adc
jmp
in
inc
push
dec
dec
dec
jnp
dec
dec
dec
inc
add
dec
add
inc
xor
add
jns
xcrypt-ctr
cmpsl
pop
stos
pop
mull
xchg
xchg
fcompl
sti
popa
decl
leave
in
nop
scas
nop
mov
lahf
pushl
cli
sub
mov
add
and
mov
cmpl
cmpsb
aad
cmp
dec
cmp
dec
lea
mov
cmp
je
add
inc
cmp
mov
cli
add
jae
mov
or
jmp
xor
ret
inc
mov
xlat
push
mov
call
insl
test
or
fidivs
add
cmpb
push
add
iret
movb
fisubrs
call
pop
jne
mov
incl
shr
mov
push
shl
push
push
mov
push
or
in
jge
movl
push
daa
mov
dec
addr16
call
fucomip
mov
lea
ret
clc
rcr
std
jmp
das
lods
les
ret
add
stos
mov
mov
rorb
sbb
push
add
pop
pop
rclb
in
and
in
fsubrp
cmpsl
fnsave
bound
mov
push
push
movl
fsubr
lods
adc
into
mov
inc
in
jne
call
incl
pop
add
lea
sti
insb
out
imul
mov
bswap
mov
mov
pop
imul
lret
mov
inc
and
and
or
lret
mov
or
test
cmp
fsubr
orl
push
jmp
adc
lahf
in
and
jmp
add
add
insb
in
fldpi
or
lea
pusha
in
lahf
or
ret
cmc
adc
test
setbe
mov
sub
mov
out
dec
ss
inc
cmp
or
xor
sub
mov
xor
or
mov
je
scas
sub
xchg
in
sti
inc
pop
jne
andl
jmp
adc
push
adc
fcmovne
mov
repz
lcall
cld
and
popa
outsl
or
insl
hlt
push
repnz
std
jns
fs
jmp
push
addl
push
je
icebp
ljmp
aas
pop
add
jle
add
je
sti
fwait
lds
cld
add
inc
or
add
jg
mov
add
sbb
push
push
adc
dec
add
je
adc
lea
movb
mov
sub
jle
roll
movb
add
pop
jl
or
push
push
call
jnp
inc
mov
or
out
in
cli
mov
in
ret
mov
mov
jo
push
pop
arpl
xchg
or
jne
xor
push
mov
in
add
fldl
mov
arpl
xor
or
mov
fiaddl
shrl
or
clc
add
mov
andb
jo
mov
or
push
aas
addb
lock
jl
push
aaa
sbbb
push
jg
nop
adc
or
add
inc
xor
adc
adc
adc
adc
xchg
pop
enter
adc
adc
adc
add
and
mov
add
lock
jb
dec
add
adc
sub
and
notl
push
cwtl
and
mov
add
adc
add
mov
cmp
push
and
divb
push
cmpl
pop
inc
xor
lret
jne
inc
enter
push
jnp
xor
adc
jle
xor
adc
adc
lahf
add
loopne
sbb
add
pop
push
pop
and
leave
xchg
mov
sub
or
sbb
mov
orb
pop
cmp
jl
push
ret
in
enter
clc
hlt
add
pop
jne
or
mov
push
push
fisubl
insb
pop
pusha
test
push
push
mov
push
add
add
jge
push
mov
sarb
pusha
negb
push
mov
and
pop
mov
imul
inc
insb
or
pop
sub
pop
adc
xlat
or
xchg
and
imul
cltd
lea
lock
add
mov
mov
mov
mov
xchg
mov
sbb
cmp
mov
rep
subb
pushf
ror
mov
gs
loope
fs
mov
movsb
pop
dec
pop
mov
push
aad
mov
add
cmp
or
or
sarl
mov
add
mulb
sbb
flds
pop
or
sbb
lret
jecxz
popf
jno
clc
add
sbb
cmp
je
xlat
jo
cmp
or
mov
push
clc
call
loopne
fwait
sub
pop
outsb
dec
in
test
js
rolb
outsl
mov
jne
sub
loopne
mov
pushl
xchg
insl
fstpt
pop
call
ficoml
sbb
lock
inc
inc
inc
inc
inc
jmp
mov
jb
pop
mov
aaa
lock
pop
jge
enter
cld
add
mov
mov
add
pop
cltd
in
ja
add
adc
andw
mov
int
push
cld
subl
cld
pop
xadd
fldl
mov
lcall
or
inc
cmp
imul
xor
or
and
lret
divb
xchg
out
mov
lea
cmp
jne
sti
lret
and
cli
pop
mulb
mov
stc
mov
cmp
sub
inc
push
ss
jae
loopne
ficompl
cltd
out
call
out
jmp
add
push
jo
fdivs
push
das
or
movsl
pop
sub
add
andb
outsb
pop
push
inc
cmp
cmp
jbe
cmp
out
or
jo
add
shrl
jl
xor
adc
cmpsl
in
push
popf
test
add
xorb
jo
enter
xchg
jl
popf
jl
add
js
add
je
js
in
add
out
outsl
cmp
popf
mov
add
sub
inc
sbb
mov
cmpl
cmp
and
or
pop
popf
lock
mov
pop
fldenv
xchg
lods
push
mov
add
jo
adc
adc
xchg
xchg
mov
pop
loopne
cmp
push
fadds
adc
clc
jle
xor
cmp
lcall
adc
push
mov
cmp
ja
in
push
jg
arpl
push
sbb
cmp
je
test
in
dec
mov
cmp
push
mov
inc
hlt
mov
sti
aaa
push
in
jne
cmpl
daa
mov
cld
jne
xor
sbb
inc
clc
xchg
cmp
cmpsl
movsl
aas
mov
mov
popa
test
inc
jmp
sahf
inc
cmp
mov
stos
sbb
negb
or
fnstcw
adc
mov
test
pop
sbb
jne
cmp
fcomip
cmp
je
adc
push
or
inc
cmp
loopne
insl
in
outsl
or
sub
cli
seta
dec
leave
or
mov
mov
or
jmp
lds
sti
incl
test
je
mov
shr
xor
test
jecxz
and
imulb
sti
in
icebp
or
test
je
cs
mov
loop
sar
inc
sti
out
add
shl
or
mov
and
xchg
sti
dec
push
je
test
jne
test
fabs
pop
sbb
aad
push
cmp
and
add
mov
movsl
insl
adc
push
sbb
sti
pop
scas
sbb
fcmovne
insl
fildll
sbb
add
test
or
pop
mov
xor
adc
dec
or
cmpsl
testb
lahf
and
add
fistpll
add
sub
mov
and
mov
aam
inc
add
mov
cmpb
inc
adcl
or
jl
cli
cld
sub
adc
fcoms
add
sbb
pop
ret
test
add
pop
shlb
aaa
ret
add
inc
push
loope
scas
ficoml
push
je
mov
lods
rol
mov
push
and
xchg
fadds
cmp
aaa
push
jmp
adc
add
testb
jmp
add
sbb
call
add
popa
xchg
cld
mov
dec
sub
xchg
sti
cltd
pop
inc
idiv
adc
jg
sbb
jmp
xchg
pop
clc
lahf
andb
mov
add
mov
dec
enter
push
push
dec
adcl
add
jg
or
dec
dec
or
add
push
call
dec
pop
inc
fcoml
add
dec
adc
push
mov
into
scas
adc
dec
lock
adc
mov
out
push
dec
jmp
inc
mov
xchg
stos
je
jp
sub
inc
pop
jmp
adc
jo
adc
inc
sbb
icebp
in
clc
movsl
incl
mov
imul
orl
idivb
inc
sub
and
or
out
mov
and
add
push
mov
push
mov
dec
adc
inc
jge
ljmp
arpl
mov
mov
sarl
roll
jae
decl
out
lea
ds
or
je
inc
push
mov
lret
ret
outsl
mov
dec
push
pop
jne
adc
repz
jbe
lea
pop
dec
jo
mov
add
loop
jno
pop
jns
adc
or
pop
add
fdivl
push
andl
dec
dec
je
mov
xchg
inc
dec
mov
mov
pop
jbe
or
cmp
mov
not
and
push
jl
and
or
add
lea
js
xlat
sbb
mov
pop
or
add
repnz
not
and
or
mov
add
lea
test
cs
push
js
repnz
aam
fucomi
fldt
or
fisubs
fimull
add
imul
decb
and
out
xadd
adc
pop
inc
sub
lret
lock
and
not
cmp
add
jg
mov
xor
into
mov
shr
or
mov
testl
adc
in
idivb
xchg
sbb
mov
push
lods
loop
adc
push
adc
push
cmpsb
jle
not
and
movsl
inc
add
shlb
insb
in
pop
adc
movb
jecxz
subb
repnz
xlat
loopne
fiaddl
mov
or
adc
test
mov
add
or
or
sbbl
int3
xor
sub
sbb
add
out
out
or
test
xor
add
sbb
jns
cs
les
repz
fcomp
cwtl
subb
repnz
sbb
add
rcr
jle
jnp
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
scas
sub
pop
push
mov
repnz
add
sub
subl
add
jns
fdivrs
pop
repz
inc
imul
negl
jns
adc
xor
fisubrs
and
or
xchg
jno
std
jle
xchg
lods
es
add
outsb
pop
push
fsubs
cld
fidivrs
movntq
push
mov
cmpsb
pop
mov
add
faddl
xor
cmp
or
rol
cs
jnp
adc
add
or
mov
ret
lret
imul
mov
mov
bound
or
or
lock
and
mov
clc
jg
dec
dec
cmp
sbb
iret
inc
rclb
push
fadds
hlt
push
ja
lods
xor
fdiv
push
pop
pop
andb
push
repnz
shrl
out
and
stos
mov
jl
out
call
lock
imull
mov
mov
hlt
pop
adc
call
xlat
push
mov
xchg
mov
sar
out
pusha
adc
inc
add
mov
xchg
fimull
out
dec
lods
pop
sahf
fcoms
push
clc
cmp
cld
jbe
sbb
cli
fnstcw
out
and
enter
mov
fidivl
and
xchg
xor
loopne
ret
inc
enter
mov
ret
mov
push
mov
popl
mov
int3
repnz
cwtd
xlat
sbb
push
imul
iret
aaa
outsl
sbb
mov
adc
inc
loop
shr
or
je
xlat
fdivs
add
xchg
mov
popf
aaa
pop
push
aam
mov
push
imul
daa
push
and
sub
repz
aad
flds
outsl
adc
lcall
fisttps
cmp
mov
adc
or
lock
xor
xor
test
jmp
fdivl
int
test
xor
mov
out
cmpb
divb
adc
test
cs
js
lds
popa
popf
insl
jecxz
add
adc
inc
sti
xor
mov
repnz
mov
enterw
std
mov
xchg
divl
mov
inc
inc
ljmp
dec
xchg
sbb
xchg
mov
fimuls
lret
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
mov
xor
clc
in
rorb
mov
or
xlat
mov
jle
sub
sbb
imul
out
testl
into
fwait
test
imul
out
lock
mov
mov
fidivl
cmc
test
xor
aam
xchg
jae
adc
cmpsb
orl
fidivs
test
lret
repz
cmp
or
ret
imul
sarb
cmp
aam
cltd
das
popf
pop
mov
push
les
in
xor
out
divl
idiv
mov
xchg
ss
in
clc
jl
pop
je
scas
fnstenv
dec
pushl
or
testl
cmp
add
arpl
mov
mov
stos
ret
mov
stos
rcrb
sbb
insl
mov
in
sbb
jl
out
outsb
addb
push
xchg
ljmp
inc
push
or
movsb
mov
jns
and
aaa
jge
mov
shlb
scas
xlat
out
dec
insb
mov
ret
pop
pop
gs
mov
inc
xchg
sbb
rcrl
out
lock
int3
or
push
or
xchg
sbb
rorb
frstor
out
out
call
unpckhps
sbb
movups
rcrl
test
sub
orl
jg
call
scas
dec
jle
outsl
jecxz
jp
in
cmp
sbb
int
dec
in
mov
sub
jecxz
jp
ret
rcl
fsubs
add
fdivl
mov
jb
outsl
cmpb
lds
jp
xlat
fidivs
sbb
repnz
pop
mov
loopne
mov
ret
mov
xlat
sub
pslld
ret
repz
rclb
xor
sub
pop
jge
pop
mov
mov
add
movsb
mov
inc
lods
rcr
inc
or
or
pop
or
inc
addl
push
mov
mov
sbb
push
dec
cld
cmpb
push
cmp
jl
push
pop
sub
push
push
push
pop
daa
je
imulb
xor
cmp
cmovne
adc
fisubrl
push
insl
sbbb
pop
inc
test
nop
iret
pop
pop
mov
mov
sti
mov
or
add
and
sbb
cmp
jne
xchg
and
rclb
adc
js
push
xor
adc
or
or
push
pop
xor
or
pop
push
cmp
adc
xchg
cli
jbe
lea
aaa
inc
outsl
decl
sub
add
cmp
out
or
testb
add
mov
sub
or
mov
adc
or
pop
jnp
jb
outsb
test
push
loopne
pop
int3
rolb
aam
pushf
jae
fsubr
or
xchg
jmp
xor
mov
push
dec
adc
out
ds
add
in
gs
das
cltd
out
stc
lock
jo
hlt
gs
adc
ljmp
ret
push
lcall
mov
mov
stos
call
sbb
adc
mov
lods
sbb
fmull
mov
inc
dec
xorb
stc
fimuls
fmull
inc
pop
sbb
jge
jae
pop
or
call
mov
fistl
push
ds
push
xchg
pop
test
in
dec
out
push
xchg
mov
out
push
pop
dec
inc
pop
mov
repz
cs
insb
mov
push
out
add
cld
push
xor
push
les
push
push
sbb
cmp
insl
mov
mov
int3
add
and
inc
mov
stc
and
pop
jne
call
outsl
jae
mov
push
and
mov
dec
enter
add
sub
clc
cmp
rcr
ret
xchg
je
data16
xchg
xchg
imul
cld
das
loope
clc
adc
xor
jno
js
data16
adc
lods
xor
push
unpcklps
sub
push
insb
idivl
dec
fbstp
dec
cld
xor
jns
or
inc
jmp
lret
adc
and
pop
adc
cmp
outsl
cwtl
push
mov
and
jmp
mov
add
cmp
je
dec
dec
cmpw
jne
pop
push
mov
mov
add
cmp
add
fidivl
mov
sub
ljmp
andps
gs
mov
int3
xor
cld
push
aad
dec
shll
sbb
aad
jbe
cmp
mov
addl
pop
jg
outsb
stos
clc
lahf
or
push
je
xchg
cmp
fucomip
fiadds
testb
mov
cmp
je
cmp
jne
push
jo
dec
lahf
insb
punpckhbw
outsb
add
jg
dec
pop
add
lret
or
jbe
ja
cmp
and
push
or
xchg
outsl
subb
xchg
add
mov
or
cmovp
cmp
int
test
cmp
subb
inc
int
stos
mov
jmp
loopne
push
dec
mov
pusha
xchg
insb
mov
hlt
dec
test
stos
in
mov
cmp
daa
inc
ret
mov
daa
mov
into
inc
or
pusha
inc
mov
push
nop
loope
lret
mov
cmp
push
mov
lds
xchg
call
jbe
movsl
xor
mov
cmpsl
arpl
and
mov
fsubr
pushl
mov
sbb
mov
cmp
adc
das
or
sahf
divl
sti
sub
mov
add
jg
std
and
not
pop
push
lods
fsubl
insl
pop
sarl
mov
and
pushf
push
mov
or
rcrl
mov
cmp
mov
nop
sti
jne
cmpl
negb
cmp
je
jo
into
cmp
mov
push
pop
dec
mov
in
mov
or
pop
mov
imul
sbb
pop
adc
pop
mov
outsl
jp
call
call
mov
mov
mov
cmp
js
inc
leave
mov
movsb
pop
cs
mov
or
data16
dec
mov
lret
push
cmp
ss
mov
inc
mov
mov
push
push
movsb
adc
sahf
lock
inc
push
jo
push
xchg
xor
or
in
mov
addr16
mov
mov
pop
cs
cmp
mov
in
lcall
mov
add
mov
fs
jmp
gs
insb
outsl
jb
and
fidivl
gs
in
dec
test
jbe
mov
loop
jecxz
pop
in
push
out
subl
dec
out
call
xchg
cmpsb
imul
lcallw
rcl
insl
xlat
insb
xchg
ret
rol
add
xor
lds
mov
leave
lret
lret
cmp
int3
hlt
xchg
push
xchg
xchg
mov
shll
xchg
push
cwtl
cltd
lcall
imul
int3
jb
insb
push
mov
mov
insl
add
test
xor
mov
push
test
notl
stc
hlt
cli
jns
aam
add
mov
stc
cmp
je
cmpsb
or
out
or
cltd
pcmpgtd
pop
inc
aaa
lock
push
mov
pop
pushf
popf
fadd
aaa
inc
in
pop
je
mov
lods
add
loopne
cwtd
in
clc
ds
jg
push
dec
cmpsb
pop
scas
or
dec
xchg
insl
jmp
dec
rolb
xchg
sub
cmp
pop
push
lock
enter
das
mov
mov
mov
push
mov
test
sar
xor
inc
jge
sti
fs
adc
push
jae
fsubs
shl
and
imul
and
cmpsb
out
pushf
pop
cli
inc
and
shl
sbb
daa
jnp
lds
inc
sub
adc
pusha
aaa
xor
ret
les
ret
ret
jmp
sub
jmp
mov
nop
repnz
in
xchg
or
hlt
cli
call
mov
add
lret
std
adc
cld
outsb
mov
mov
cmc
fsubrs
clc
std
add
inc
sbb
inc
mov
mov
push
lret
xchg
mov
lock
pushw
push
pushw
notl
inc
push
imul
pop
lock
sub
fwait
xor
push
cld
mov
rcrb
fnstcw
inc
add
js
jb
sbb
nopl
fdivrs
cli
and
aam
aas
or
sub
xor
lods
adc
sub
sbb
cmp
add
push
jo
movsl
jge
sbb
dec
add
loopew
adc
test
jnp
int3
inc
adc
or
data16
mov
mov
std
out
xchg
adc
pop
test
cmp
jl
mov
and
jns
xchg
leave
shr
insl
push
jge
outsb
jne
push
lcall
sub
and
cmp
xor
or
mov
and
mov
cmpl
or
sub
push
mov
mov
jl
in
pop
hlt
adc
cmc
mov
adc
in
lock
cmp
push
push
dec
cltd
in
nop
xchg
cmp
push
sbb
xchg
dec
rclb
mov
cmp
mov
fdivrp
push
sbb
jae
jne
pop
mov
ds
cs
loopne
imul
arpl
sbb
lock
into
mov
xor
adc
pop
jo
inc
or
cmpsl
sub
ret
adc
cld
adc
loope
pop
nop
and
pop
mov
call
jmp
mov
leave
lock
lock
fs
loope
xorb
cmpb
inc
mov
in
andl
cwtl
pop
or
mov
call
dec
outsb
adc
mov
ret
cmp
mov
adc
xor
inc
adc
pop
and
cmpsb
imul
imul
dec
mov
fidivl
fildl
fstp
xor
jb
jae
fbstp
xor
sub
dec
shll
jae
xor
orw
cld
std
insl
icebp
lcall
mov
mov
mov
mov
mov
sarl
outsb
inc
lcall
xor
enter
pop
lret
gs
xchg
dec
popa
js
push
pop
outsb
xor
pop
inc
push
xor
nop
jb
icebp
repnz
popa
shlb
mov
mov
adc
cmp
sub
inc
cltd
pop
cmp
xor
pop
push
sbb
sbbl
xlat
pop
push
add
push
sbb
or
hlt
dec
inc
xchg
add
in
push
lock
xor
mov
in
pusha
jmp
adc
icebp
daa
loop
andb
xchg
adc
inc
sub
sub
imul
ss
shrl
outsl
ja
scas
push
inc
pop
mov
leave
in
mov
fnstenv
data16
pushf
pushl
or
mov
call
shl
outsb
push
call
push
push
xchg
lea
cs
loopne
or
add
xor
fs
push
in
xchg
fmuls
ja
insb
into
test
xor
sbb
push
out
outsl
add
jo
adc
add
cmp
in
out
pop
cmpsb
stos
push
in
inc
cli
das
pop
sbb
movsl
add
clc
bound
and
lds
and
jnp
xlat
or
mov
or
fcoml
jmp
in
in
js
sbb
lret
mov
cs
fistpl
mov
adc
dec
in
push
or
xchg
xor
lds
push
and
and
jnp
or
test
aaa
in
out
push
hlt
push
mov
mov
mov
js
sub
clc
lea
push
movsl
movsb
orl
hlt
pushf
nop
sbb
sub
cwtl
xorl
outsb
mov
adc
add
movsl
popf
dec
mov
in
push
add
andb
pop
push
loop
push
xchg
pop
add
fdivs
movzbl
pop
push
pop
clc
imul
or
enter
push
push
ja
cmp
dec
jo
push
idiv
je
push
bound
out
add
push
adc
fwait
in
xor
push
dec
jo
or
insb
jb
insb
fwait
lock
popa
pop
repnz
fwait
in
fs
insb
repz
gs
rcll
je
test
popa
jo
shll
jbe
jb
dec
adc
xor
outsw
ret
aam
xor
loopne
sub
aam
jne
add
inc
push
sbb
xchg
jno
jecxz
xchg
jae
mov
fcom
mov
push
fmull
dec
xor
and
inc
xchg
or
xchg
ds
addr16
adc
hlt
mov
cld
hlt
xchg
scas
jnp
mov
cld
inc
cmp
add
push
inc
aas
mov
shll
loop
sbb
fdivrs
insl
pushf
or
inc
in
sub
in
insl
jl
stos
dec
clc
mov
sub
cmp
ret
lds
popf
mov
hlt
imul
jle
jne
bound
push
push
aaa
repz
cmp
cmp
insb
arpl
xchg
xor
lock
sbb
push
xor
ja
cmpsl
xchg
xchg
dec
jl
mov
das
push
mov
push
push
mov
or
push
xchg
mov
ret
jmp
call
add
les
mov
push
jns
cmp
adc
or
push
mov
fdiv
mov
ss
lret
or
and
dec
pop
push
shlb
aas
insb
xlat
insb
cmp
cmp
inc
dec
jle
mov
push
fcmove
out
adc
jmp
cmp
fsubl
jp
push
pop
adc
inc
push
sbb
mov
mov
sub
mov
pop
inc
add
jl
ljmp
mov
pop
add
push
push
inc
dec
dec
mov
push
cmc
cmp
nop
sbb
fstp
and
call
xor
adc
add
std
iret
xchg
arpl
sub
aas
sub
sti
enter
sbb
lods
rcrb
stos
pop
mov
push
std
adc
mov
popa
push
add
lret
push
fnstcw
daa
ss
cmp
pushl
insb
pop
sbb
test
mov
je
ljmp
xchg
sub
xor
int
mov
fwait
jae
es
sahf
xchg
dec
shll
mov
sub
cmpsb
imul
test
jae
pop
xchg
gs
and
xchg
jae
cmpsb
imul
imul
cmpsb
imul
outsb
es
out
enter
imul
cmpsb
imul
imul
fcomp
dec
rol
cmpsb
fcmovu
jo
imul
and
dec
shll
jae
add
arpl
jo
roll
xor
fs
push
jae
jg
jae
shll
and
or
hlt
call
xor
xchg
add
xchg
incb
jae
jo
mov
sub
xor
insb
fisttps
push
or
add
push
jb
push
fdivrs
into
and
sub
or
dec
pop
gs
in
mov
add
mov
jl
lea
js
fxch
fdivs
je
sub
push
dec
pop
into
leave
push
int3
mov
cmp
push
mov
sti
xchg
pop
or
mov
push
imul
out
xor
pushf
push
leave
or
enter
pop
sbbb
cmp
sbb
stos
jb
insb
into
aam
inc
cmp
dec
leave
sbb
add
xor
rolb
test
fwait
int
insb
jo
and
or
mov
iret
xchg
xchg
or
lds
pop
les
sub
mov
mov
pop
mov
iret
xor
outsl
lret
pop
lds
pushl
or
jne
adc
out
pusha
fwait
shr
sbb
shll
aas
sahf
mov
sbb
mov
push
jmp
adc
mov
icebp
faddp
lcall
xchg
rcl
jl
outsl
jnp
ljmp
inc
fildl
xchg
or
test
test
popf
add
hlt
mov
loopne
movsb
dec
rorl
in
inc
cmpl
repnz
cmp
xchg
je
loopne
adc
mov
test
in
or
jbe
daa
push
jne
or
shl
mov
push
adc
pop
push
sub
es
jg
ret
add
icebp
mov
push
xor
add
inc
mov
inc
cmp
mov
mov
es
vpackuswb
push
popf
push
push
push
pop
in
cmp
and
std
loopne
jl
in
shll
sub
push
js
or
mov
das
jo
dec
xchg
bound
push
or
das
clc
std
stc
mov
pop
jge
sub
enter
adc
adc
popf
mov
pushf
pop
std
std
stos
shl
insl
sub
inc
stos
shrb
xchg
inc
mov
adc
xor
dec
call
neg
adc
push
jne
and
imul
das
cli
push
xor
dec
insb
gs
xor
or
pop
add
pop
and
xor
cmp
ror
mov
jae
mov
rorb
mov
jmp
xor
loopne
outsl
fildll
push
fstpt
jnp
sbb
movsb
sti
adc
into
cmpl
pop
push
inc
fldt
call
shlb
fdiv
inc
pop
nop
fwait
cmpps
mov
stc
or
out
sub
sub
aam
lods
add
inc
cmp
sbb
test
push
push
testl
adc
pop
mov
push
push
inc
mov
jbe
pop
mov
sub
lock
outsb
dec
call
fdivrs
fsubs
and
push
push
imul
rcl
testl
lock
mov
push
cmpsl
outsb
or
xlat
pop
pop
pushf
cmp
call
ds
push
nop
out
test
push
js
mov
addl
icebp
js
and
stos
scas
sbb
iret
nop
jmp
adc
adc
push
push
loopne
pop
aam
sub
sub
and
cmp
call
lds
insl
lret
push
push
sub
lret
mov
lret
rcl
fcomp
in
add
aaa
ljmp
mov
rol
mov
repz
mov
testl
adc
inc
daa
clc
call
sub
add
dec
aam
jne,pn
xor
rcrl
mov
push
push
jl
or
mov
pop
mov
cmp
xor
sub
pop
or
cmc
paddusb
mov
idiv
add
pop
aam
shl
cmp
and
pop
pop
mov
loope
xor
add
outsb
sbb
ljmp
mov
outsl
je
xor
push
jp
sbb
or
lods
push
ret
pusha
dec
push
aam
pop
or
es
and
sub
dec
test
hlt
push
xor
push
mov
dec
dec
dec
dec
inc
pop
xchg
gs
push
cs
insb
pushf
sub
push
cmp
fs
lret
mov
out
jne
cs
xor
mov
insb
insb
frstor
ds
outsb
lcall
outsb
gs
lcall
gs
popa
lcall
aam
dec
inc
jnp
je
jo
dec
shll
jo
outsb
push
xorb
xor
mov
das
roll
aam
mov
mov
mov
nop
inc
xchg
gs
js
cmpsb
imul
mov
cwtl
js
lcall
je
inc
dec
xlat
xor
cmp
inc
loop
or
xor
in
ds
mov
dec
shll
mov
mov
lgs
or
outsl
mov
mov
arpl
rol
arpl
xor
rorb
mov
lods
fcomp
lea
xor
dec
push
cmp
clc
add
jg
lock
adc
std
cld
test
adc
sbb
push
mov
ret
push
inc
adc
mov
xchg
imul
cmp
test
subl
mov
call
mov
pop
or
dec
mov
xchg
das
scas
pop
mov
cmc
xchg
pop
sti
je
push
adc
pop
icebp
in
sbb
imul
lods
or
inc
insb
imul
sub
xchg
test
or
shlb
repz
sbb
stos
mov
push
mov
cwtl
js
jne
aad
pop
ds
cmp
add
insb
sti
shrb
xor
es
or
or
ss
xor
and
pop
negb
add
fimull
les
cmpl
bound
push
xchg
inc
lret
ret
call
ljmp
pop
or
shl
mov
push
push
dec
inc
and
inc
incl
sbb
enter
stos
flds
cld
hlt
and
and
sub
add
jae
pop
dec
cwtl
cmpsb
leave
xor
out
dec
shll
and
insb
jb
arpl
daa
sbb
arpl
xchg
sub
dec
insw
jne
push
jnp
ret
call
lods
or
mov
aaa
js
je
fildll
and
rolb
int3
call
xor
push
aaa
test
mov
or
xor
es
adc
xchg
gs
inc
out
mov
popa
jmp
ds
mov
push
iret
sbb
sub
mov
call
sti
or
xor
mov
or
std
or
add
jne
jb
and
cmovne
aaa
push
cmp
iret
mov
add
incb
shl
inc
mov
sahf
jns
mov
rorl
mov
mov
push
cmp
loopne
nop
loopne
aas
sbb
je
imul
lcall
clc
es
lcall
insl
movsb
push
and
and
daa
neg
inc
mov
call
std
call
leave
inc
pop
push
sahf
sti
xlat
xor
mov
leave
sbb
iret
std
ret
and
jae
popa
arpl
sub
and
cmp
lret
gs
outsl
jae
insb
mov
sub
mov
aad
mov
int
mov
dec
sti
push
jge
sbb
dec
iret
in
movsb
add
push
sub
jle
lds
push
in
sbb
fcomps
rolb
jb
and
std
add
xor
rorb
cwtl
shlb
xchg
dec
xor
xchg
inc
mov
int3
pop
aas
inc
lock
mov
loope
add
sub
cmp
sbb
je
sbb
cmpsb
imul
or
jne
pusha
ret
adc
sar
rcrb
jb
pop
loopne
int3
jmp
pop
je
cmpl
and
and
jno
jecxz
lcall
pop
addb
sar
or
insl
xor
stos
stos
imul
pop
jb
mov
stos
addb
jmp
cmp
fsubrs
fs
sub
xchg
and
pop
pop
lock
push
fisubl
add
mov
jmp
pop
repz
loopne
or
mov
pop
xadd
cwtl
int3
adc
ud0
loopne
sahf
loope
and
push
mov
push
pop
mov
lods
or
push
dec
cmc
daa
dec
push
mov
dec
fadd
popa
mov
loope
cmp
mov
or
test
adc
inc
ret
rorl
xor
xor
subl
out
into
sub
inc
push
fs
cld
mov
cmp
std
xchg
or
sbb
fidivs
adc
es
bound
and
inc
jl
cld
mov
adc
stos
clc
mov
iret
inc
push
pop
popf
or
std
cwtl
sub
in
dec
inc
cwtl
and
sub
mov
popa
arpl
mov
lret
outsl
outsb
cmp
lret
mov
popa
imul
cmpsb
imul
pop
push
mov
bound
mov
mov
mov
rol
ret
lcall
mov
mov
jne
int3
gs
xchg
dec
mov
popa
arpl
pop
xchg
imul
xchg
gs
jae
jb
jns
hlt
pusha
cmp
fwait
push
adc
fisttpl
mov
ret
dec
xor
outsl
jp
mov
push
dec
outsb
push
std
and
dec
xchg
les
dec
jne
or
jmp
push
shr
sbb
pop
pop
repnz
or
xor
mov
adc
mov
mov
mov
jo
mov
sbb
cmp
call
push
aaa
icebp
negl
push
xor
inc
in
lcall
mov
cs
push
adc
aaa
and
add
mov
lret
dec
mov
cmp
or
jae
arpl
xchg
gs
outsb
cmp
cmp
jb
add
push
lock
inc
fiaddl
jne
jb
jl
sbbl
mov
pop
xchg
lods
inc
in
scas
insl
enter
std
divb
cltd
popa
ret
xchg
lods
cwtl
sbb
clc
dec
shll
jb
add
xor
imul
outsl
popa
lret
mov
xor
jecxz
arpl
xchg
es
push
cs
jmp
repnz
jns
out
sbb
pop
dec
adc
dec
push
cld
push
pop
mov
stos
arpl
inc
mov
pop
dec
mov
and
push
xor
imul
xor
push
shll
pop
and
imul
insl
call
adc
jae
add
lods
imul
fistpll
push
ljmp
adc
lods
fsubl
or
and
sub
pushf
clc
mov
and
jne
push
hlt
push
mov
add
cmc
jle
daa
xor
rdpmc
divl
pusha
or
cmpl
or
cmp
jmp
call
in
ds
adc
add
pop
imul
xchg
movsl
orb
xchg
push
push
push
cwtl
xchg
loop
xor
xor
cmp
jo
push
adc
in
push
test
ljmp
pop
sbbb
in
sbb
movl
fneni(8087
pusha
hlt
xor
enter
xor
jmp
adc
and
xchg
in
out
pop
and
add
je
inc
and
fs
fs
jmp
in
sbb
outsb
data16
ja
ds
movsl
fnstcw
jae
frstor
movsl
pop
lcall
jb
fsub
cld
pop
loop
jecxz
in
add
sbb
cld
out
sbb
pop
iret
out
ret
mov
popf
mov
jg
je
call
pextrw
divb
adc
sbb
mov
sbb
add
iret
scas
leave
or
xchg
push
xor
jmp
stos
insb
xor
mov
xor
push
add
test
push
xchg
pop
mov
mov
sbb
or
leave
cltd
test
mov
xor
divb
pop
insl
rclb
lea
dec
xor
push
cs
push
aad
push
cmp
popf
loopne
testl
or
push
mov
rcrl
jo
outsb
add
and
es
scas
daa
push
sbb
xchg
lret
pop
ficoms
add
insb
dec
and
mov
and
pushl
add
xor
call
push
jg
push
mov
in
cmp
or
mov
adc
push
and
jmp
mov
add
push
push
call
add
mov
fstl
mov
clc
imulb
cmpb
mov
loopne
adc
mov
call
add
sbb
cmp
fwait
mov
out
fildl
xlat
ljmp
adc
xor
push
and
jmp
push
adc
out
or
mov
outsb
aaa
enter
insb
ds
xchg
call
js
daa
xor
mov
mov
add
es
cmpsb
push
subb
mov
cld
push
jecxz
inc
mov
test
or
xlat
lods
or
out
or
sbb
pop
pop
mov
pusha
pusha
inc
dec
cmp
int3
jae
call
inc
rclb
and
mov
mov
mov
pop
cmp
dec
outsb
pop
add
hlt
and
je
push
sti
andl
pop
adc
xor
idivl
push
adc
jmp
xor
add
xlat
add
sub
jmp
je
cmp
cli
dec
pop
and
outsl
leave
push
mov
je
dec
adc
enter
js
lock
ds
add
mov
dec
sahf
cmpb
push
mov
or
iret
mov
mov
jne
adc
sbb
sbb
ficoms
ret
jmp
xchg
push
dec
stos
or
jg
sbb
mov
int
lock
test
into
clc
stos
cltd
js
cmp
mov
lahf
test
jno
in
js
xchg
cmp
in
ljmp
addr16
rorl
ds
sub
fnstenv
xorb
xchg
cld
and
std
je
jl
push
mov
cmc
mov
add
imul
punpckhdq
push
out
inc
cli
cmpsl
push
popa
push
mov
jo
js
adc
push
fdivrl
jmp
adc
mov
mov
insl
es
ljmp
mov
jl
cmp
jg
push
call
xor
add
pushf
cmp
cld
xor
lea
jae
aaa
mov
and
adc
push
add
decb
add
jmp
pop
sub
push
inc
in
push
push
pop
aam
loopne
push
cmc
test
jae
and
mov
sbb
mov
jb
add
sub
pop
push
loopne
or
pusha
outsl
xor
xor
jne
xor
adc
add
mov
ds
fs
jl
outsb
fdivl
mov
icebp
nop
pop
adc
push
jl
icebp
add
xchg
mov
inc
fcmovu
xchg
mov
push
test
push
jb
mov
pop
ljmp
call
add
dec
adc
add
es
insl
jmp
push
jne
cmp
adc
add
insb
sti
in
add
add
add
xor
sbb
jbe
mov
fwait
add
mov
mov
inc
jl
cmp
jg
jg
push
shl
adc
or
mov
shrl
push
loopne
test
icebp
pop
push
mov
lds
dec
outsb
enter
cltd
mov
cmp
add
xchg
mov
lods
inc
push
inc
int3
and
fsubrl
dec
ret
or
mov
mov
out
push
mov
push
sarl
cmp
adc
jp
lods
mov
jne
loopne
push
jge
fimull
pop
mov
stc
sti
add
cli
mov
or
fiadds
push
add
push
add
pop
mov
outsl
call
std
xchg
and
sub
int
inc
push
pop
rcrb
rol
push
mov
ja
iret
or
mov
push
mov
adc
mov
daa
mov
ds
adc
push
je
test
xlat
lods
ss
xor
sbb
scas
mov
ss
mov
xor
cmp
jne
cmp
mov
dec
cld
loopne
in
mov
mov
adc
lock
clc
je
shrl
jno
pop
pop
aad
arpl
mov
sbb
xor
adc
and
jbe
out
jge
into
adc
ljmp
das
jo
cmp
movl
xchg
cmpsl
je
rorl
cmp
mov
popf
imul
and
fldenv
lcall
pushf
lock
sbb
mov
push
cmp
sub
inc
mov
pop
nop
push
lea
xor
or
xor
and
shr
pop
cmp
cmp
lret
push
lods
dec
or
inc
add
sub
push
pop
out
fcmovne
and
push
jbe
cmp
jb
add
cmpsl
arpl
test
or
mov
call
lea
sahf
dec
nop
adc
shll
dec
andb
push
data16
fdivrl
dec
jl
lock
daa
pop
sbb
jmp
mov
rcl
adc
add
jmp
adc
inc
jno
cmpl
cmp
add
jb
addb
les
mov
xchg
cmp
sbb
sbb
cmpl
cmp
cmc
incl
das
and
js
add
jo
add
adcl
push
or
dec
cltd
leave
je
add
push
lret
mov
xor
or
das
push
aam
add
mov
add
push
push
shrl
sbb
add
cli
cltd
stos
fwait
push
pop
and
ficomps
dec
or
rcll
out
mov
sbb
movl
mov
jno
mov
add
insb
mov
das
enter
cltd
mov
add
cmpl
mov
pop
add
andl
or
jmp
outsl
jle
movzwl
mov
jne
daa
add
aaa
sbb
push
cmp
or
adc
add
jmp
insl
xlat
sub
cvtps2pd
adc
lock
faddl
pusha
pop
or
sub
add
mov
ss
adc
mov
pop
xchg
xor
mov
scas
mov
push
cld
inc
pusha
call
jl
add
jmp
pop
push
xchg
push
adc
push
repz
pushl
test
mov
jno
push
sub
xor
dec
mov
or
or
mov
adc
iret
ret
das
xor
in
sbb
lea
pop
test
pop
pushl
add
push
scas
clc
add
sub
lcall
dec
loope
lds
mov
mov
inc
xchg
push
into
mov
push
sub
lea
sbb
lods
push
mov
call
fcmovne
jbe
lahf
inc
aaa
pushl
lcall
clc
xor
push
push
xorl
test
shlb
push
sahf
add
movsb
add
mov
loopne
les
lods
sub
cltd
push
les
adc
and
jge
xor
inc
jle
pop
mov
push
or
and
inc
cmp
testb
je
pop
inc
fidivl
push
inc
shr
or
xor
xor
jb
mov
sti
roll
fcomip
das
adc
enter
ja
push
xchg
mov
mov
cwtl
lds
sbb
loope
int3
es
std
push
lock
mov
mov
or
jne
nop
sbb
mov
mov
adc
pop
sub
lret
mov
in
gs
insb
jb
sub
daa
jb
js,pn
pusha
add
sub
pusha
xor
into
mov
adc
dec
enter
or
call
xor
loopne
rcll
pop
and
jl
jb
dec
aaa
mov
repz
add
add
inc
sub
pop
and
mov
ltr
cmc
sub
lock
iret
pusha
aad
call
fstl
pop
mov
orb
or
mov
xchg
or
shrl
lods
in
pop
pop
mov
lret
mov
outsl
outsb
je
adc
lds
loop
aad
mov
xor
sbb
adc
adc
jbe
and
loopne
jo
add
int3
push
movsb
add
add
push
stos
jo
loope
mov
pop
xchg
adcl
test
outsb
call
sub
sbb
jl
xchg
push
jecxz
cmp
mov
xchg
popa
add
add
xor
aam
push
sub
sub
push
push
lds
aas
mov
aam
std
sub
push
or
lahf
sbb
push
or
xor
or
or
or
enter
and
add
mov
xchg
sub
aam
insl
jb
imulb
pop
sbb
int3
popa
int3
sub
xor
mov
or
mov
cmp
loopne
pop
sbb
rclb
xor
push
adc
jmp
mov
cmp
ret
jle
cmp
push
mov
sbb
mov
incb
pop
push
push
lods
sbb
mov
gs
sub
bnd
inc
aaa
outsl
and
and
sub
sbb
jbe
adc
inc
push
scas
push
sub
popf
ds
cmpsl
sbb
sub
mov
and
and
mov
in
incb
adc
nop
iret
dec
mov
pmaxub
arpl
lds
xor
mov
outsb
enterw
dec
mov
addr16
rorl
aas
cmp
std
rolb
in
std
ret
ret
les
imul
std
and
add
jno
xor
gs
jae
mov
dec
xrelease
xchg
or
jns
xor
xchg
cs
jne
aas
inc
enter
or
and
or
push
or
pop
ds
push
int
sbb
cmc
inc
jno
adc
inc
lds
daa
mov
mov
add
and
xchg
add
adc
cmp
sbb
ds
push
sahf
pop
push
inc
int
cmp
mov
mov
daa
jg
sub
ret
and
xor
lds
sub
das
aam
rclb
sub
cmp
loopne
mov
frstor
push
pop
adc
lock
inc
sbb
test
xor
aam
aad
lret
mov
or
gs
sub
mov
insb
outsl
jb
jb
xor
mov
gs
in
pushf
movsl
mov
scas
add
sub
fadds
lods
jmp
push
add
mov
mov
mov
xchg
enter
shll
xchg
lcall
loopne
mov
add
cmp
add
push
mov
pop
sbb
push
repz
or
inc
adc
jge
push
inc
mov
je
aam
inc
mov
mov
shlb
lcall
jmp
xorl
dec
shlb
jb
or
rolb
in
jecxz
rorb
inc
jmp
sbb
mov
mov
xchg
xchg
lods
sbb
cwtl
pushf
int3
add
mov
in
adcb
prefetchnta
sahf
xor
inc
inc
inc
cmp
and
cmp
xor
adc
scas
add
fxam
dec
xor
stos
adc
sub
int3
mov
sub
das
fnstcw
adc
jle
fstps
aaa
cmp
adc
pop
fs
inc
mov
jg
add
daa
or
inc
fs
mov
arpl
inc
js
gs
mov
push
pop
hlt
jb
and
dec
outsb
imul
popa
insb
imul
or
and
gs
push
add
jbe
test
inc
bound
push
push
sbb
xor
dec
gs
push
add
jnp
sbb
and
aas
and
sbb
adc
addr16
adc
inc
iret
aas
fdecstp
notb
outsl
mov
popa
imul
aam
lret
push
aas
push
push
sti
mov
stos
push
jo
push
outsb
popa
jo
push
jbe
xchg
push
and
je,pt
push
sbb
dec
ss
add
add
pop
inc
insb
xor
xchg
jb
cltd
pop
outsl
imul
bound
jb
inc
packsswb
add
push
xor
jnp
out
mov
sbb
fs
adc
sub
pop
test
add
push
mov
mov
xor
sub
pusha
inc
mov
test
add
jg
dec
and
test
jns
add
or
mov
in
popa
and
mov
into
add
mov
ud2
push
pop
mov
stos
sbb
sbb
jno
inc
jnp
mov
and
push
push
jbe
xchg
push
gs
aas
xchg
lods
popf
mov
sbb
sbb
push
subb
inc
dec
push
int
outsb
adc
mov
aad
sub
push
or
fistl
xor
xor
inc
cmp
jae
mov
popa
mov
adc
jno
or
inc
and
pusha
xchg
testb
movsl
sbb
call
aad
jo
fwait
mov
fcomi
clc
jnp
sbb
int3
mov
or
aad
movsl
mov
jbe
loopne
fbld
notl
xor
fwait
mov
xor
push
daa
xor
fstps
in
outsl
jo
movsl
mov
in
outsl
adc
fbld
adc
jne
push
ret
loope
fnstenv
or
add
mov
pop
adc
jo
leave
fdivrs
add
pushf
fisttpl
and
cmp
call
xor
sub
inc
stos
adc
cmp
add
push
outsb
push
gs
inc
push
dec
inc
mov
lods
add
jo
je
sti
hlt
and
add
add
insb
popa
cmpsb
adc
push
andl
lods
popa
xor
sbb
inc
jle
mov
and
sbb
push
mov
movl
test
add
dec
xchg
mov
and
gs
aad
int
lods
fisttpll
push
push
mov
dec
xchg
int
or
add
fwait
mov
push
in
inc
lock
add
je
or
and
in
mov
mov
jle
insl
ja
sbb
mov
movsl
pop
and
rcr
in
add
sbb
cmpsl
movsl
mov
pop
xlat
push
mov
imul
push
add
sub
ret
adc
push
movsb
jne
pop
sub
mov
mov
pop
faddp
mov
add
push
dec
gs
jnp
jnp
arpl
fnstenv
inc
pop
jb
cmp
adc
inc
outsb
jne
movsl
fstpl
sbb
jne
mov
arpl
je
mov
jo
inc
popa
arpl
lods
insb
and
inc
push
inc
push
into
add
mov
fistpl
push
insl
jecxz
jo
cltd
add
insl
mov
xchg
fsubrs
or
lret
jbe
mov
jb
cmp
add
mov
mov
jnp
add
pop
adc
xor
int
adc
imul
dec
lret
out
dec
xchg
popa
jnp
insb
in
arpl
jecxz
popa
out
dec
xor
sbb
push
jae
mov
inc
pop
jae
xlat
pop
adc
jns
adc
fistl
or
add
outsl
imul
and
enter
xor
pop
push
add
loopew
popf
jmp
xor
dec
sbb
xchg
bound
outsb
cwtl
mov
lea
shll
xchg
jmp
add
icebp
xor
lcall
ja
cmp
js
push
push
inc
insb
xchg
adcb
rcrb
dec
insl
push
inc
aas
rcrb
cmc
mov
xchg
or
pop
add
cs
or
cltd
cmp
int3
popa
clc
adc
xor
sbb
pop
and
adc
xchg
inc
sub
pop
inc
sti
lods
xor
dec
push
dec
xchg
imul
icebp
pop
je
ja
addr16
sub
xlat
adc
xor
sbb
addl
mov
mov
setl
mov
movsb
mov
and
fisttpl
add
add
push
dec
add
add
insb
adc
mov
xor
mov
cmp
xor
dec
ds
call
aas
inc
aas
dec
aas
push
aas
pop
aas
fs
push
aas
test
mov
xchg
aas
cwtl
aas
lds
fnstcw
call
repnz
aas
add
or
push
xor
xor
xor
xor
dec
pushl
push
xor
jl
lea
lods
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
pushl
outsb
xor
xor
xor
sub
pop
xor
insl
xor
xor
xor
xor
xor
xor
pushl
sahf
xor
call
ss
ss
lea
lcall
pushl
divb
adc
xor
inc
aaa
push
aaa
fwait
aaa
leave
aaa
iret
aaa
aam
loope
out
aaa
cld
aaa
push
cmp
daa
cmp
cmp
push
cmp
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
cmp
cmp
push
cmp
mov
lret
cmp
cmp
cmp
cmp
cmp
out
pushl
cmp
mov
cmc
movsb
aas
mov
lret
aas
fidivrl
in
sub
push
sbbb
in
mov
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
or
sbb
dec
jne
jp
test
mov
fidivrs
std
ds
add
or
aas
dec
aas
leave
aas
into
pop
pusha
cld
or
ljmp
jo
popf
xor
xor
loop
lock
xor
adc
xor
js
xorl
jecxz
sti
and
xor
pushl
out
xor
iret
add
cs
ss
dec
aaa
push
aaa
jo
ja
aaa
and
aaa
mov
sbb
jmp
aaa
or
and
cs
cmp
cmp
pop
cmp
ja
cmpsb
cmp
sarb
aad
loopne
out
sub
jg
cmp
cmp
cmp
jno
xchg
lea
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
das
cld
cmp
cmp
cmp
cmp
cmp
xchg
cmp
dec
cmp
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
mov
movsb
cmp
out
icebp
cmp
ds
ds
lock
ds
pusha
xchg
mov
cltd
ds
aas
sub
jmp
pop
xor
pop
xor
jnp
lcall
xor
xor
xor
xor
lahf
xor
xor
xor
popa
xor
sbb
jp
xorb
xor
xor
sub
push
xor
xor
pushl
mov
mov
xor
lds
push
ss
mov
nop
ss
aas
inc
aaa
xorl
aaa
add
xor
cmp
dec
cmp
cmp
cmp
push
mov
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
fcomip
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
movsl
cmp
add
or
and
push
stc
dec
ja
das
xchg
sbbb
add
jne
mov
cltd
xor
xor
xor
in
aaa
xor
mov
xor
or
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
adc
xor
xor
jge
mov
fdivr
inc
xor
or
xor
xor
xor
xor
scas
xor
jo
shlb
adc
and
mov
mov
aaa
fidivs
jmp
cli
aaa
add
or
jnp
mov
cltd
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
jmp
push
cmp
xchg
xchg
cmp
xor
ja
in
and
bound
jb
test
fistpll
push
leave
lock
or
xor
inc
fcomip
aaa
stc
jbe
jg
ds
lods
ds
ds
ds
and
sub
sub
pop
nop
je
xor
je
sbb
lock
dec
xor
je
xchg
xor
xor
pop
fidivl
jecxz
ljmp
xor
xor
push
xor
xor
xor
jg
ret
pushl
stc
xor
xor
xor
xor
adc
outsl
xor
jg
test
jg
xor
adc
jmp
sbb
xor
xor
xor
xor
xor
xor
xor
decl
pushl
xor
xor
xor
xor
xor
xor
xor
imul
lcall
pushl
pop
xor
jno
xorl
xor
hlt
jg
xor
ss
ss
push
ss
ss
ss
ss
lret
inc
jecxz
fidivs
add
cmp
aaa
or
pop
cmp
xchg
cmpl
cmp
lcall
cmp
cmp
cmp
cmp
push
cmp
ljmp
fdivrs
out
idivl
add
or
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
cmp
test
scas
cmp
cmp
cmp
imul
fnstcw
dec
cmp
add
cli
das
ds
stos
ds
aas
inc
aas
dec
aas
push
jge
or
outsb
jae
aas
iret
jne
xchg
jmp
xor
ja
xor
xor
and
aas
xor
pusha
xor
clc
iret
xor
xor
jne
xor
ja
xor
inc
rclb
lret
xor
xor
xor
xor
xor
xor
ret
or
xor
xor
xor
xor
xor
xor
xor
inc
or
adc
fbstp
xor
dec
xor
test
xchg
xor
and
in
pop
ss
xchg
ret
pop
inc
clc
mov
xchg
sarl
dec
inc
mov
int
into
out
aaa
loopne
out
clc
mov
repnz
cmp
pop
cmp
cmp
orl
lret
or
add
flds
sub
sub
idivb
push
movsb
sarb
push
pop
shrb
fdivrl
push
sbb
or
mov
mov
mov
mov
pop
cmp
add
incl
inc
or
popf
sbb
or
inc
mull
cmp
pop
fsubrs
inc
aaa
pop
js
add
add
dec
push
and
dec
sub
and
add
add
dec
sbbb
clc
add
jb
pusha
test
and
enter
inc
sub
and
xor
push
sub
sub
dec
add
enter
xchg
dec
shr
cld
or
and
cmp
popf
pop
push
shll
mov
shll
or
dec
shrl
sbb
sub
adc
lcall
loopne
out
nop
imul
add
add
or
xor
jle
xchg
scas
sbb
jae
add
cmpsb
imul
js
xor
dec
dec
inc
and
lcall
int
scas
or
pop
and
push
push
or
add
bound
and
and
dec
popa
jns
jne
jae
xor
pop
push
testl
addl
cmp
add
cmp
jae
inc
dec
xor
decl
inc
push
sub
push
push
inc
and
push
add
insb
pop
add
in
xor
add
push
push
and
loop
lods
push
mov
jp
push
push
pop
mov
in
mov
rep
or
mov
add
es
adc
aas
push
sub
rcrl
hlt
mov
push
in
lea
jmp
and
add
inc
lea
stos
push
jnp
mov
ss
out
cmp
add
aam
int3
add
sbb
jbe
test
lods
std
mov
xor
adc
divb
mov
add
cwtl
in
mov
mov
fs
pop
pop
push
jecxz
in
jne
sbb
orb
and
jle
inc
rolb
adc
push
mov
push
sub
in
mov
cmpl
jbe
mov
or
xchg
mov
cld
sub
scas
loopne
fdivs
pop
and
into
jge
bound
push
mov
dec
mov
inc
sbb
lds
es
ds
ficoms
cwtl
lret
pop
and
or
or
add
sbb
inc
mov
mov
imul
es
fldenv
cs
insl
cs
fs
lea
dec
insl
je
sub
insl
and
inc
popf
insb
sub
xor
dec
inc
jg
adc
inc
icebp
pop
fdivs
and
xchg
or
insl
pop
xchg
in
inc
je
dec
inc
lcall
dec
popa
insl
pop
pop
add
fwait
gs
adc
dec
fsubl
andb
lea
daa
add
inc
sub
pop
dec
cmp
lea
sub
mov
call
xchg
adc
sahf
andb
or
jg
ret
lea
inc
inc
push
mov
enter
and
mov
mov
incb
and
aaa
js
leave
mov
out
xor
push
shrb
lods
aas
dec
sbb
xchg
or
mov
add
stc
inc
jnp
mov
pop
push
push
cmp
sbb
jnp
scas
jno
es
mov
jb
xor
pop
insl
pushf
mov
pop
pop
les
lods
and
inc
xor
loop
out
mov
adc
add
xor
xchg
iret
ds
adc
or
aas
push
adc
cmc
movb
jl
mov
pmulhuw
or
inc
je
push
rcrl
and
fsts
rorb
or
add
or
test
add
loopne
push
in
and
inc
add
cmp
jl
sbb
push
in
enter
call
inc
das
or
in
lods
repz
mov
dec
push
sbb
add
dec
scas
jnp
and
add
sbb
jbe
xchg
sub
inc
in
adc
mov
outsl
outsb
gs
sub
mov
cs
dec
or
fs
xlat
popa
xchg
fldenv
divl
arpl
push
xor
adc
mov
loope
js
bound
fcmovne
mov
fs
sti
mov
and
pop
dec
movsb
aam
adc
adc
loop
je
inc
or
push
jae
fs
gs
mov
xor
cs
mov
ds
stos
xor
mov
xchg
std
incl
popa
xlat
pushf
fdivrl
std
enter
test
std
mov
sub
xor
xlat
pushf
or
inc
std
mov
push
push
ja
rclb
data16
add
xchg
pop
sub
int
mov
dec
push
aaa
jnp
sbb
mov
addr16
push
inc
sub
clc
and
test
push
jnp
insl
push
mov
inc
adc
dec
xlat
sbb
sbb
jb
push
mov
jne
test
xor
or
mov
sbb
mov
into
fsubl
adc
addl
push
decl
jne
lock
dec
cs
pushf
xor
and
call
cli
mov
pop
push
inc
mov
nop
out
dec
pusha
add
jmp
test
gs
xchg
xchg
xchg
test
stos
stos
mov
lods
scas
scas
cwtl
xchg
xchg
xor
mov
scas
mov
dec
fadds
pop
scas
bound
jae
pop
sbb
movsl
jno
dec
je
fdivs
test
adc
cmp
std
lods
std
lods
or
adc
js
jo
insb
cmpsb
fnsave
rcrb
mov
lcall
push
mov
inc
and
jo
or
aam
xchg
inc
mov
lret
or
pop
xlat
and
mov
test
lcall
int
lret
mov
fldenv
sbb
andb
outsl
add
gs
xchg
sub
push
xchg
fldenv
mov
lret
mov
jne
arpl
fwait
sub
gs
aaa
mov
inc
jmp
jno
addr16
mov
inc
std
imul
sub
out
xchg
gs
xchg
gs
insb
outsl
dec
xchg
sub
gs
push
sub
xchg
mov
and
nop
jg
je
and
add
mov
push
cmpsl
pop
xor
xlat
and
xabort
and
test
adc
aam
adc
sbb
pusha
ljmp
out
mov
sub
inc
loopne
and
mov
cmpsl
mov
pop
xchg
cmpsb
addr16
or
repz
aad
push
icebp
mov
inc
shrb
mov
sub
sahf
inc
mov
repz
sub
sbb
outsb
adc
mov
jp
xchg
or
sbb
push
xor
jb
mov
inc
fwait
outsl
push
jno
aam
add
fsubrs
mov
fsubrl
or
in
shlb
pop
les
in
ss
mov
es
andb
mov
push
imul
data16
adc
push
sbb
jae
loopne
push
mov
insb
inc
fiadds
adc
push
lock
bound
fucom
xlat
or
divb
decb
xchg
shlb
fistpll
sub
push
pop
xor
pop
mov
pop
mov
cmpsb
ljmp
or
lods
add
mov
dec
or
jo
add
or
mov
pop
pop
add
add
testl
adc
push
enter
xor
sub
or
test
sub
in
das
or
pop
and
and
stc
mov
adc
sbb
addb
xchg
scas
dec
pop
add
sub
dec
cmp
in
mov
xor
daa
add
nop
int
and
add
add
xchg
sub
fadds
and
jns
mov
in
adc
enter
test
in
repnz
and
inc
pop
leave
sub
std
add
add
std
add
and
and
std
push
hlt
cld
adc
or
mov
and
add
add
daa
push
std
xor
enter
nop
subl
jo
add
and
cmp
js
andb
xchg
push
and
dec
and
mov
stos
pop
or
jnp
and
push
add
adc
mov
push
add
pop
pop
and
lret
decl
test
fwait
iret
dec
adc
add
adc
and
xchg
xchg
sbb
adc
adc
stc
sbb
pop
cmp
dec
adc
adc
or
enter
rol
movb
xchg
outsl
dec
inc
inc
cwtl
pushf
add
aaa
add
push
jmp
test
add
lret
adc
out
dec
scas
adc
je
push
dec
xlat
and
dec
push
cmp
shrl
adcb
mov
mov
outsb
pop
sbb
or
xchg
dec
adcb
pop
shlb
xor
add
jge
xchg
nop
mov
mov
push
sbb
sub
xchg
filds
cmpsl
push
daa
sub
cmp
out
inc
mov
pop
out
jns
sbb
mov
test
adc
mov
jl
pop
xchg
pop
push
jae
rcrl
imul
and
add
dec
jae
in
push
negb
mov
push
outsb
jb
and
add
adc
push
test
xchg
xor
dec
push
jno
sub
mov
inc
adc
add
insl
dec
jae
int
stos
jp
dec
adc
sbb
push
xchg
mov
and
dec
mov
add
mov
addb
and
shlb
xchg
mov
push
xchg
or
add
into
inc
push
inc
cmp
pop
ss
push
sub
ja
pop
sub
xor
or
in
gs
es
stos
in
inc
sbb
cmp
cmp
push
cmp
push
ds
imul
cmpsb
jmp
mov
imul
xchg
pop
fucomp
add
leave
add
or
mov
add
pop
mov
lea
pop
jmp
pop
mov
or
or
or
inc
jg
jo
pop
push
add
popa
int
hlt
movsl
xchg
and
rcrb
int
scas
js
addr16
hlt
dec
xchg
sub
pop
cmp
push
adc
enter
jne
or
xor
test
pop
adc
rorl
push
ret
adcb
pop
and
dec
xor
bound
pop
mov
push
pop
call
adc
mov
adcb
pop
jns
pop
add
enter
je
aad
push
subl
push
push
adc
push
stc
aas
inc
je
inc
frstor
imul
jns
add
in
daa
add
loope
flds
xchg
add
xor
mov
xchg
lret
inc
int3
pusha
int3
add
sub
shlb
loope
add
fstl
dec
add
cmovns
out
dec
mov
jae
loopne
cmpb
add
cltd
add
adc
mov
mov
pop
adcl
cmp
cmp
xor
fnstsw
jecxz
inc
and
jmp
outsb
inc
jae
and
mov
jns
popa
and
add
or
pop
idivl
aaa
outsb
es
push
mov
test
xor
imul
push
lods
imul
fnstenv
xor
mov
jne
xor
insb
popf
xchg
jae
lods
jmp
dec
or
lds
popf
push
xor
out
addr16
cmp
sub
jo
notl
add
fadds
sub
insb
mov
or
daa
dec
dec
xchg
dec
sbb
xlat
outsb
xchg
vshufps
push
daa
jbe
mov
lods
fldenv
fs
outsl
pcmpeqw
jae
pop
inc
out
sub
xor
inc
push
in
cmp
adc
and
in
mov
cmpsl
xchg
adc
out
add
and
fildll
xor
cmp
push
xor
pushf
decl
pushl
mov
xor
and
xor
or
or
xor
and
xor
pop
mov
das
inc
add
xor
data16
mov
ss
sbb
mov
aaa
clc
aaa
xor
mov
xchg
rorl
cmpb
cmp
lods
loop
frstor
cmp
arpl
test
lcall
fwait
cmp
cmp
cmp
cmp
cmp
sbb
decl
cmpsl
fstpt
pop
aas
insb
aas
cmpb
aas
lahf
aas
movsl
aas
mov
data16
arpl
test
xor
mov
lcall
xor
xor
xor
ja
fwait
xor
xor
xor
xor
dec
xor
lret
xor
xor
stc
cmp
xor
xor
xor
xor
cltd
test
pushl
xor
xor
xor
xor
xor
jge
mov
call
sub
ss
arpl
jne
pushl
pushf
ss
fidivl
loopne
out
inc
rolb
pop
xor
mov
ja
push
mov
nop
adc
dec
xchg
add
push
jo
mov
into
push
adc
stos
fisubrl
sbb
push
and
cmp
xor
mov
bswap
or
inc
and
and
cmpb
add
jno
jo
or
sub
outsb
add
xor
insb
push
stos
adc
add
add
dec
outsl
jbe
mov
stos
push
lods
addb
add
and
pushf
mov
add
aaa
sub
and
dec
add
flds
dec
shlb
lret
cs
add
add
sbb
sub
adc
pop
adc
stos
sub
sbb
push
pop
jne
dec
add
add
aad
imul
lcall
inc
mov
mov
inc
mov
push
sgdtl
sahf
sbb
add
add
add
gs
and
nop
ret
inc
and
fs
adc
in
or
mov
and
les
lock
add
jl
add
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
