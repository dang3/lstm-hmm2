mov
inc
and
and
add
in
sub
movsl
in
fnstsw
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
adc
int
stos
add
and
and
jmp
and
test
call
jbe
imul
les
test
mov
jle
pushl
mov
adc
and
mov
testb
pop
pushl
movzbl
push
je
mov
push
call
push
push
pop
lds
jnp
in
push
dec
inc
inc
dec
outsl
and
lods
das
dec
push
sub
sti
add
jne
push
inc
cmp
mov
pop
ja
pop
jle
sbb
loope
jbe
xchg
pop
pop
push
pop
pop
pop
leave
ret
xor
push
cmp
push
mov
add
or
add
fs
jo
insb
in
jne
jae
in
out
lcall
repnz
mov
call
pushl
mov
cmp
je
rcrb
inc
push
push
fdivl
dec
mov
rol
les
lds
in
mov
enter
imul
jb
xor
add
outsb
into
arpl
xor
rcl
pop
shlb
shll
mov
pop
sub
ret
pop
mov
js
movsb
imul
imul
imul
cmpsb
imul
mov
mov
gs
test
push
lock
jmp
lea
push
add
push
call
fwait
sti
aas
sub
clc
mov
pop
mov
push
mov
push
add
mov
popa
jnp
cmpsl
cmp
xor
adc
std
aaa
jle
xor
or
add
cmp
out
adc
repz
add
lcall
dec
sbb
in
xchg
lret
lea
push
adc
out
jl
clc
mov
movl
mov
push
mov
in
in
out
fucomip
cmpsb
pop
cs
lock
icebp
xor
repz
imul
push
loope
mov
cli
jecxz
pmulhuw
out
sbb
outsl
ljmp
je
lea
push
and
test
loope
cmp
sbb
push
or
cs
outsb
filds
jne
push
push
sub
mov
pop
mov
pop
roll
mov
lea
sub
jo
mov
mov
push
mov
jo
aaa
ret
inc
js
inc
mov
dec
xchg
or
test
mov
sub
sub
xor
jp
sahf
fldcw
cmp
or
pop
and
push
push
fstp
out
and
or
test
mov
je
mov
in
fistpll
jmp
push
mov
into
pop
push
das
sbb
lock
jns
aam
lret
xlat
xor
shll
fcmovnu
jae
dec
rcr
shrb
loope
jo
add
sub
fs
jb
jae
adc
shrb
jbe
sub
shrb
popa
js
jns
leave
rcrb
jl
jmp
xor
jg
or
fwait
in
addb
addb
mov
dec
xchg
imul
push
mov
adc
cs
lcall
popa
xchg
jbe
lcall
xchg
xchg
scas
jmp
cmpsb
cwtl
cltd
pop
lcall
inc
xchg
fistpl
lahf
orb
jl
out
add
inc
addr16
fdivl
enter
jae
jae
pop
xlat
insb
sub
ror
or
in
or
jbe
shll
shlb
inc
xchg
mov
int
dec
xlat
movsb
inc
dec
imul
xor
push
mov
je
sahf
loopne
push
divb
shlb
lahf
testb
push
adc
das
shlb
movsb
or
movsb
add
arpl
mov
imul
xor
adc
add
pop
xor
repz
pop
addr16
gs
negl
das
pusha
push
mov
and
fs
mov
arpl
add
cmp
or
das
arpl
jbe
out
or
test
cmp
dec
sbb
arpl
mov
and
pop
pop
jbe
repnz
std
popa
pop
loope
mov
sbb
cmp
jo
dec
out
jmp
jl
imul
popa
addl
mov
mov
repz
imul
outsl
sub
jg
push
or
jl
cmp
mov
fists
push
lcall
cmp
jge
into
out
push
inc
pop
push
pop
pop
pop
fcoml
jno
pop
addr16
xchg
jecxz
pop
mov
adcb
dec
shll
mov
pushf
pushf
aam
mov
jl
in
cmp
popf
add
dec
jp
xor
cmp
xor
ret
adc
les
pop
adc
xor
rcrb
int
pusha
adcl
dec
lea
arpl
cmp
jmp
movsl
jge
or
sub
movb
lret
pop
cmpl
inc
imull
jg
lea
sbb
jne
push
add
mov
dec
cmpsb
mov
imull
clc
push
push
cmpsb
imul
pop
cmp
andl
push
aaa
jle
pop
cmpb
or
test
or
xchg
cmpsb
imul
dec
mov
adc
adc
and
mov
add
pop
jb
sub
repnz
or
mov
daa
xorb
sub
or
push
add
xchg
cmp
xor
xchg
rcrb
repz
mov
subb
jbe
aam
aad
xlat
movb
xchg
lret
fadds
adc
mov
lea
dec
add
xchg
add
loopne
lea
and
adc
xchg
or
ret
insl
in
cmp
push
imul
imul
xchg
xchg
lods
xor
insl
outsb
outsl
in
and
jo
cmp
mov
and
loop
xchg
sbb
stc
pushf
pushf
in
test
or
pop
rol
les
enter
mov
xlat
leave
test
stc
test
jmp
adc
add
sarl
lock
std
mov
fs
jl
pushl
or
out
add
adc
adc
jmp
xchg
pop
pop
push
jno
mov
pop
pusha
popa
and
bound
arpl
and
gs
in
cmpsb
mov
jae
fdivl
cs
out
sub
add
ljmp
dec
lock
xchg
loopne
xchg
dec
insb
mov
test
add
leave
add
and
cld
insb
xchg
push
bnd
test
cs
mov
add
stc
mov
mov
mov
sub
jg
cli
aaa
mov
push
mov
lea
xor
push
loop
xchg
fcoml
loopne
push
loopne
je
adc
lea
sub
mov
call
roll
jmp
mov
aas
ret
mov
mov
fs
aam
mov
addr16
push
outsb
addr16
pop
add
or
je
jp
pop
xchg
gs
pusha
jne
shlb
mov
xchg
dec
sbb
jno
scas
adc
adc
xlat
loopne
dec
dec
push
and
daa
mov
pop
stc
jne
push
adc
iret
ret
icebp
adc
push
loope
fisttpl
mov
push
inc
jb
stos
lods
mov
jbe
or
xor
mov
mov
cs
lcall
mov
ss
xlat
insb
mov
ret
fs
test
push
cmp
jle
adc
enter
push
push
or
scas
aam
popf
fwait
insl
lods
pop
ja
mov
pop
xor
shrl
in
out
sub
pop
shr
ljmp
sub
pop
xlat
out
add
jbe
arpl
je
and
sti
xchg
notb
jb
cmp
jmp
jo
in
mov
xchg
inc
xchg
lret
xchg
jne
mov
jo
cwtl
sbb
mov
pop
popf
js
sahf
lahf
mov
mov
mov
mov
pop
int3
outsl
dec
mov
dec
jns
adc
or
icebp
add
mov
pop
pushf
adc
push
sub
cs
push
sbb
dec
or
lret
call
adc
orl
jl
jbe
pop
fcoms
incl
sbb
in
cmp
les
jmp
rcrb
mov
adc
pop
out
sbb
push
mov
shll
add
sbb
dec
xchg
sub
ds
cs
push
adc
dec
imul
std
stos
add
lock
loop
cltd
push
pop
inc
sub
test
lds
sbb
lcall
arpl
in
imul
data16
imul
imul
imul
nop
rcrb
jbe
add
in
leave
hlt
adc
ficoml
sub
lea
cmp
adc
clc
aam
aaa
daa
addb
push
repz
sbb
sbb
inc
pop
dec
sub
andl
mov
sub
mov
je
in
ret
test
aam
add
inc
jnp
in
xor
cmp
or
fadds
ljmp
push
inc
cmp
outsb
pop
sbbl
and
jmp
jo
mov
pop
enter
imul
jbe
mov
add
cmp
and
push
andl
add
fs
cmpl
les
in
add
sub
add
in
adc
add
or
testl
mov
nop
push
mov
cld
add
mov
inc
jmp
add
cmp
call
pop
ret
jmp
aam
dec
add
cmpsl
mov
mov
daa
push
inc
pop
push
jae
push
mov
add
bnd
mov
hlt
subl
repnz
mov
pushf
in
aad
cmp
push
adc
push
push
pop
imul
in
dec
push
cmp
cmovl
mov
push
push
gs
popf
mov
inc
enter
xor
jbe
cmpb
push
test
push
cmp
sbb
cmp
adc
mov
shl
mov
pop
test
mov
push
mov
push
adc
test
lahf
add
in
lods
adc
adc
xor
sbb
std
mov
sahf
leave
mov
push
inc
in
add
imul
sbb
jae
fcompl
adc
je
imul
outsl
int3
outsb
int
into
iret
gs
scas
fldcw
rcl
pop
shrb
arpl
and
sbb
and
les
pop
push
add
jns
sti
and
add
pop
xor
sbb
mov
sbb
pop
sar
add
fcompl
ret
test
gs
pusha
xchg
gs
gs
clc
stc
cli
sti
xor
rcll
inc
inc
gs
jmp
leave
push
js
add
pop
in
cmpsb
jmp
scas
in
out
out
call
imul
in
dec
inc
out
add
inc
into
arpl
push
adc
rcrl
push
lret
add
sbb
and
std
dec
stc
pusha
xor
mov
push
cmp
dec
popa
pop
enter
mov
negl
idivb
ret
pusha
and
mov
mov
insb
jns
sbb
arpl
mov
jmp
cvtps2pd
mov
mov
inc
mov
adc
int
fimuls
popf
rorb
ret
icebp
adc
xchg
inc
mov
cmp
cltd
into
cs
addb
xchg
mov
sub
add
popa
imul
jmp
ljmp
addr16
loopne
pop
je
popa
mov
cmpsl
shrb
and
out
mov
add
sbb
into
cmp
push
out
sbb
cmp
or
xor
push
movsb
and
cli
inc
cmp
imulb
jns
xor
cli
cld
imul
data16
cld
xor
xchg
cmp
std
pusha
popa
in
inc
dec
pusha
incb
xchg
xchg
mov
insb
cld
xchg
dec
push
jbe
cwtl
insb
cld
cwtl
lcall
cmp
pop
ret
inc
adc
push
sbb
and
lea
mov
and
cmp
and
sub
leave
xor
adc
cltd
sub
cmp
icebp
daa
push
push
push
popa
in
sbb
daa
mov
push
sbb
xor
inc
fadds
jnp
pop
mov
xor
pop
mov
sar
rorl
in
pop
mov
mov
mov
nop
mov
mov
xchg
pop
test
xor
stos
aas
repz
imul
pop
mov
imul
cmpsb
imul
imul
lcall
sbb
or
push
or
or
xlat
inc
xor
sub
rorl
aam
subl
sahf
dec
shll
cmp
dec
shll
cmp
dec
shll
xor
cmpsb
imul
xor
cmp
stos
cmpsb
imul
pop
pop
xor
cmp
dec
es
mov
lcall
xchg
cmp
mov
jo
push
enter
imul
xor
mov
ret
cmpsl
fdivl
shlb
sbb
aad
add
rorb
add
mov
and
mov
subb
push
andb
idivb
cmp
cmp
daa
fwait
nop
xchg
or
clc
dec
pop
xor
insl
or
sub
and
cmp
enter
sbb
push
xchg
dec
fsubs
cld
lds
test
es
and
dec
sbb
rcr
call
cmp
pop
in
sar
test
repz
movzwl
pop
cwtl
sti
addr16
mov
addb
add
lea
dec
and
sbb
pop
push
enter
leave
enter
jmp
jb
loope
fidivs
mov
push
pop
inc
mov
jl
push
in
and
sahf
daa
inc
adc
lcall
repnz
and
mov
movsb
mov
sub
fdivrs
mov
test
lcall
aaa
cmp
je
shll
jb
xlat
push
sysenter
dec
fcomp
fidivl
stos
sub
xchg
sub
ficompl
and
mov
je
das
jb
xchg
in
mov
xor
loopne
mov
dec
shll
mov
mov
fs
mov
pop
mov
mov
mov
rol
stos
push
adc
in
adc
mov
adc
mov
loopne
mov
push
or
aaa
jne
out
sar
roll
push
fsubr
popa
aam
mov
cmp
cltd
jne
pusha
sub
mov
xchg
and
mov
pop
adc
inc
in
or
or
push
pusha
fs
mov
pop
dec
pop
movsl
sub
and
hlt
cmp
pusha
cmp
or
pushf
mov
rcl
test
in
popl
and
sub
add
mov
sti
mov
sti
les
dec
and
popa
mull
add
adc
push
fnstenv
push
sbb
lcall
fidivrs
dec
out
pop
push
mov
sub
add
sbb
pop
push
lock
cmp
push
sbb
adc
or
lea
mov
sub
mov
inc
jne
push
sub
loope
shl
add
and
push
mov
loopne
js
cmp
sahf
xor
inc
sbb
push
pop
mov
out
jl
xchg
pop
mov
xchg
pop
sub
outsb
mov
xor
mov
test
adcl
sbb
or
mov
jnp
sbb
and
cmp
push
push
jecxz
insl
add
push
ja
test
ljmp
push
jb
gs
lcall
imul
ds
outsb
cs
and
mov
pop
insb
outsl
and
push
xchg
gs
jb
gs
dec
rclb
test
dec
push
mov
lret
mov
popa
imul
inc
jo
insl
xchg
gs
xchg
jae
popa
imul
sub
scas
scas
cmp
xor
xor
pop
shll
lcall
inc
test
inc
fnstsw
fwait
loope
or
rcll
out
imul
dec
push
dec
addb
movsl
pop
mov
popa
inc
je
pop
mov
push
inc
outsl
dec
xchg
xchg
inc
inc
jmpw
sub
dec
push
jo
cmp
xchg
xor
in
dec
dec
jmp
dec
push
jae
out
in
fs
push
popa
push
test
and
fs
push
jb
lret
inc
outsl
andb
sbb
or
jae
xchg
in
stc
sbb
movb
inc
ja
xchg
mov
js
jns
jp
insb
fidivl
mov
xchg
and
cmp
xchg
fstl
in
xchg
xor
mov
xchg
xchg
js
cwtl
cltd
xchg
sbb
mov
xor
mov
cmp
jb
fs
sub
jl
fnstcw
ja
decb
inc
lock
jb
cmp
mov
pop
outsb
fwait
in
addl
xchg
mov
sarb
mov
rcrb
ret
addl
pop
aas
cwtl
mov
mov
add
or
mov
adc
sub
mov
push
cmp
shrb
sbb
push
mov
insb
pop
repz
hlt
adc
pop
ss
cmp
lods
sub
lret
sbbl
cltd
nop
in
push
jne
jmp
dec
lods
aaa
adc
fcoml
adc
fdivs
repz
in
leave
add
or
in
lea
int3
cmp
subl
cld
es
insb
shlb
adc
inc
adc
push
sti
movsl
loopne
adc
xchg
insl
or
jne
shrl
cmp
pop
insl
sub
std
les
adc
rorb
and
inc
loopne
stc
fidivs
mov
inc
imul
hlt
jno
push
mov
sbb
pop
jb
jb
cli
push
mov
nop
cli
je
mov
jnp
dec
inc
pushl
test
or
jnp
sti
xor
js
mov
or
lea
or
mov
lods
sbb
add
push
shlb
rorl
bnd
cmpl
adc
imul
and
add
faddp
and
sbb
loopne
mov
push
iret
adc
sti
into
std
push
cmp
je
cmp
jb
dec
dec
cmpw
jne
pop
adc
dec
loop
dec
or
add
jne
lret
push
mov
call
fnstcw
incl
lock
sub
insl
adc
enter
cmp
andb
sub
jae
es
pop
adc
rcrb
pop
or
cmp
daa
mov
xor
cltd
xchg
cwtl
movsb
adc
movsl
sbb
outsb
sub
jo
jae
shll
cmpsb
test
data16
mov
xchg
outsl
fs
xchg
in
addr16
jne
imul
inc
lcall
or
xchg
mov
rcl
movsb
fsubs
dec
pop
adc
mov
jl
lock
ret
andb
dec
subb
adcl
pusha
xchg
pusha
cmpsb
dec
or
test
push
mov
xor
in
inc
fmuls
adc
inc
mov
mov
imul
stc
dec
clc
push
mov
mov
cmp
leave
jle
dec
xor
push
jnp
pop
mov
jmp
push
inc
test
inc
xor
sub
sub
stc
add
mov
mov
sbb
stc
or
add
cld
das
daa
in
sub
icebp
sti
lock
cmc
cld
flds
inc
ds
cld
ss
rclb
sbb
xchg
cmc
mov
sar
push
push
test
test
lahf
mov
pop
loopne
xor
push
and
bound
inc
orb
ficoms
and
mov
mov
das
popa
and
inc
add
adc
add
scas
mov
sub
fs
je
add
inc
lcall
mov
push
gs
jae
in
ret
lods
repz
hlt
js
pop
or
in
iret
xchg
and
mov
ret
add
adc
dec
outsl
enter
adc
xchg
push
gs
add
dec
lret
add
xchg
push
push
mov
lods
or
push
jnp
adc
adc
lods
mov
adc
mov
mov
sbb
lock
add
sbbb
xor
mov
das
test
repz
test
mov
je
addr16
pop
mov
sbb
or
dec
inc
jp
icebp
add
insb
dec
push
xor
push
jmp
push
dec
dec
dec
leave
dec
mov
cwtl
cmpsb
inc
push
xor
lret
std
ljmp
fs
dec
outsb
gs
jb
flds
je
mov
jbe
jb
mov
mov
mov
test
mov
pop
ss
jo
dec
jo
shll
mov
lahf
xchg
insl
nop
cmpsb
gs
inc
loopne
insb
fwait
cmpsb
imul
pop
rcrl
popf
sahf
pop
shll
mov
push
cmpsb
inc
inc
cld
or
xchg
in
gs
and
jp
jno
adc
fwait
sub
mov
dec
outsb
je
mulps
mov
adc
inc
lds
shrl
scas
movl
lret
mov
cs
enter
and
mov
in
mov
jge
xor
lods
inc
dec
dec
cmp
aas
leave
sub
sub
enter
sbb
mov
mov
or
mov
lret
mov
rcl
fcomp
loopne
bound
call
dec
es
lock
jl
ret
adcl
lock
pusha
sub
adc
jo
insb
lea
je
dec
mov
clc
pop
mov
pop
sub
inc
push
leave
cmp
mov
push
jecxz
adc
push
sahf
jge
adc
inc
bound
dec
hlt
mov
ret
out
inc
enter
add
push
adc
xor
jnp
mov
call
idiv
inc
jle
in
testl
or
and
dec
fistps
xor
sub
adc
inc
cmp
jl
add
mov
jle
xor
shl
add
dec
hlt
push
push
push
ss
cmp
cmc
sbb
mov
xchg
ret
adc
xchg
out
rclb
or
or
popf
push
test
hlt
push
cmpl
cli
add
or
cmpsb
arpl
and
push
jae
and
and
xchg
push
or
cmp
add
rcr
cmp
lock
fidivrs
movzbl
cwtl
fldt
xchg
mov
sbb
test
loopne
mov
movsb
xchg
xchg
or
scas
xchg
enter
cmpsb
inc
inc
mov
push
push
push
dec
insl
enter
scas
cmp
es
push
lods
push
mov
call
pop
pop
xor
jno
outsl
cmpb
xor
xor
inc
jb
insl
flds
shll
dec
outsl
imul
gs
mov
push
fs
push
imul
insb
push
xchg
gs
popa
jae
out
lret
mov
lret
xor
xor
pop
lcall
ljmp
dec
js
shll
lcall
xlat
xor
fmuls
xor
fcmovnu
fstp
xor
xlat
insb
sbb
rol
data16
outsl
jb
shll
outsb
fs
shll
pop
xor
xor
add
pop
lahf
mov
and
and
adc
in
push
sub
inc
gs
outsl
fs
xchg
jb
jb
dec
shll
leave
lret
sbb
xor
into
iret
fs
sub
mov
leave
addb
sbb
cltd
fs
mov
mov
push
aas
pop
push
mov
sbb
lret
xchg
sub
cmp
rorb
sbb
mov
mov
jmp
clc
daa
jns
aas
pusha
cmp
jne
out
add
mov
sub
decl
jne
pusha
push
jg
scas
rcll
add
push
jo
xor
test
int3
cmpsl
ljmp
fucom
adc
sub
dec
inc
movsl
and
add
add
addb
cltd
nop
add
or
sbb
sbb
sbb
push
dec
repnz
cld
xorb
push
jns
push
mov
cmp
mov
js
je
test
mov
xor
arpl
popa
insb
sbb
imul
shll
cs
lcall
bound
cltd
cmpsb
jne
shlb
dec
push
shll
fwait
insb
test
gs
mov
fisttpl
add
dec
mov
filds
lods
mov
iret
sbb
push
inc
add
add
enter
inc
mov
aad
add
bound
in
push
in
add
mov
sbb
cmpl
adc
adc
mov
lods
sbb
sub
lods
jmp
push
push
aam
int3
hlt
jle
sbb
add
pop
pop
add
cmpsb
imul
jmp
xchg
inc
clc
add
mov
jge
mov
leave
or
repnz
cld
nop
test
adcl
add
cmpsl
push
push
pop
aam
clc
mov
and
pop
cmp
xor
mov
shll
lds
paddq
mov
cmp
fsts
xor
imul
rorb
mov
push
push
cmp
lds
js
xor
and
div
push
jmp
sarb
lock
sbb
cmp
sahf
or
dec
pop
aad
aam
push
lods
ljmp
cltd
out
and
cld
cmp
cmp
add
or
scas
pop
mov
call
divl
insl
xor
add
out
mov
jge
fisttpll
adc
mov
lock
cmp
push
sti
xchg
pop
push
add
testb
xor
in
add
jl
push
notb
pop
dec
lcall
fs
mov
mov
and
mov
lock
mov
jp
rep
cmp
mov
add
ret
jno
adc
pop
xor
jl
push
fdivrl
mov
mov
incl
xor
or
push
mov
pop
les
into
xchg
sbb
out
mov
dec
mov
cmp
je
data16
and
pop
push
add
lock
pop
lock
xchg
jo
mov
rcrb
inc
stos
clc
mov
dec
ds
clc
sub
cli
xchg
or
xchg
ret
mov
jge
push
add
pop
test
mov
add
idiv
xchg
sub
jge
icebp
movl
inc
mov
xor
xor
rorb
mov
push
sbb
xlat
loopne
test
sbb
int
loope
pusha
cmp
and
ret
mov
xor
dec
dec
push
data16
std
pushl
pushl
pop
sbb
je
mov
xor
cmp
andl
mov
sbb
push
pop
mov
mov
lock
test
cmpl
fbstp
add
sarb
mov
jp
xor
add
cmp
sbb
jle
cli
add
jae
mov
or
jg
loope
pop
cmp
push
loopne
aaa
mov
mov
push
popa
or
mov
mov
aas
jb
out
xchg
or
mov
pusha
out
popf
mov
psrad
stc
sbbb
add
sbb
insl
add
je
mov
pop
mov
mov
jno
mov
push
aaa
sub
push
and
push
sbb
stc
in
jl
rorl
mov
cmp
xor
stos
add
xchg
pushf
inc
or
pop
ficoms
and
in
lea
cmp
cmp
lret
mov
sbb
sbb
and
mov
lret
and
and
and
out
or
add
orl
scas
imul
adc
xchg
lahf
and
jmp
add
or
or
lahf
test
insb
xchg
or
push
xchg
push
lcall
push
arpl
dec
in
jno
lds
or
xor
and
bound
adc
mov
push
xorb
dec
xchg
push
dec
xchg
xchg
test
xchg
and
xor
je
dec
je
add
pushf
cmp
aas
decl
jmp
adc
in
iret
mov
and
repz
call
push
sahf
sbb
insb
fwait
add
xchg
add
push
repz
cs
loopne
or
xchg
push
jmp
loopne
xor
inc
xchg
adc
roll
andps
xor
pop
pop
ja
jmp
lods
push
jno
arpl
fs
cmp
punpckhwd
mov
ret
add
and
aad
aas
gs
xor
cmpsb
test
fsubrl
dec
mov
mov
push
imul
lcall
inc
xchg
sub
lret
push
das
dec
adc
mov
loop
or
mov
or
popf
xor
in
and
lret
jae
pop
add
rcrb
dec
rorb
std
mov
push
or
cmp
int3
dec
shll
rcl
xor
shll
aam
xlat
adc
leave
rcr
int3
enter
mov
push
or
cmpsb
imul
ret
lods
andb
fcompl
or
or
sub
adc
shrb
pusha
push
xchg
fdivrs
movb
dec
sub
or
cmp
scas
insb
pop
addr16
jmp
add
sbb
xchg
push
push
inc
sbb
pop
push
inc
fmull
xchg
inc
repnz
jbe
fdiv
add
sub
mov
dec
jae
jb
enter
xor
fs
xchg
gs
push
mov
popa
insb
insb
dec
imul
push
inc
js
fisubrl
rorb
or
sbbl
imul
dec
mov
loop
jecxz
test
outsb
shll
dec
outsl
pop
shll
inc
movsb
js
sub
in
jl
lret
inc
sti
push
stos
inc
stos
add
aas
cmpsb
popa
nop
cmpsb
outsb
push
cmpsb
imul
movsb
imul
and
icebp
repnz
lds
or
mov
jb
aad
gs
xor
cs
insb
insb
pusha
popa
or
push
sub
test
and
fadds
and
je
outsl
fs
cmp
gs
insb
dec
cmp
gs
popa
insl
inc
mov
mov
pop
lea
pop
icebp
mov
shrl
xchg
aam
mov
or
cmp
andl
pop
int3
insb
gs
cmp
sbb
or
jb
sbb
or
aam
sbb
inc
fisubl
add
cmp
aaa
mov
mov
push
push
cmp
mov
ret
jns
call
mov
dec
shll
jo
dec
shll
jecxz
xchg
mov
adc
add
addr16
dec
add
push
bound
inc
je
lea
lcall
inc
cmpsb
imul
imul
loope
dec
or
test
cmp
in
mov
cmp
xor
shll
insw
outsl
outsb
xor
js
sub
mov
test
inc
push
rcrb
add
pop
jne
add
xor
xor
sub
xor
popa
push
cs
repnz
out
loope
mov
inc
ljmp
inc
xchg
sub
cmp
xchg
gs
je
push
push
cmp
pop
lcall
into
js
add
mov
add
mov
data16
mov
push
imul
mov
mov
mov
xchg
out
rorl
imul
int3
insb
imul
shl
in
insb
mov
push
mov
mov
imul
int3
inc
int
xchg
out
in
into
pop
iret
push
dec
shrb
dec
xchg
out
fs
pop
jne
aam
jmpw
aad
inc
imul
fcomp
dec
imul
lea
or
test
or
xor
decb
fistpll
inc
js
adc
mov
loope
inc
dec
test
sub
inc
sbb
sub
cmp
jmp
cmp
cmp
cwtl
pop
inc
test
imul
out
out
lock
gs
imul
imul
in
and
ret
stos
add
push
out
adc
push
popa
or
ss
aaa
jb
cld
add
fsubrp
add
cmp
push
mov
pusha
add
gs
popa
je
xchg
gs
xchg
push
outsl
outsl
insb
push
pop
insb
jo
push
add
and
hlt
sub
pusha
inc
xor
mov
push
jb
arpl
shlb
gs
xor
or
xor
inc
imul
sub
insb
push
outsl
arpl
mov
lret
gs
xor
dec
rclb
js
int3
mov
and
push
imul
imul
dec
adc
adc
mov
dec
pop
or
add
clc
jmp
fsubl
dec
popf
jb
mov
mov
add
mov
lock
adc
cmp
inc
stos
and
fstpt
sub
or
mov
push
cmp
inc
pop
adc
cmp
sub
dec
mov
in
jo
sti
jb
xchg
sub
div
inc
push
imul
mov
sbb
shll
gs
xorl
cmpsb
imul
mov
inc
popa
push
mov
push
mov
dec
or
xchg
push
or
push
mov
mov
pop
xor
push
mov
andb
adc
or
sbb
xchg
xor
mov
push
sub
inc
inc
hlt
jbe
call
in
pop
neg
sbb
push
and
adc
add
fcompl
or
push
or
sbb
lea
arpl
data16
add
mov
incl
add
jne
ret
cmpw
ljmp
cmp
lret
push
inc
lret
jne
mov
or
xchg
push
fcoms
stos
fistpll
je
lret
iret
je
inc
or
fistpll
cmp
je
adc
pop
cmp
ja
xor
add
or
jae
xor
push
or
fistl
arpl
out
cmp
jb
sub
je
addl
or
inc
lret
fadds
adc
jnp
int
add
outsb
add
xor
adc
jo
cld
or
inc
es
lods
adc
mov
mov
fcoml
or
enter
fstpt
cmp
stos
mov
mov
cmp
cmp
sub
inc
jb
xor
adc
out
mov
push
clc
lea
cmp
add
jg
subl
adc
add
cmp
jg
mov
cmp
xor
jb
jno
outsl
mov
xor
arpl
movsl
jmp
ret
dec
mov
lcall
je
add
cmpsb
jb
je
sub
rclb
icebp
jge
outsb
rorb
xchg
jb
gs
leave
mov
cmovg
and
into
or
in
mov
jne
je
mov
mov
dec
add
fs
outsb
data16
lret
mov
insb
xor
gs
insb
adc
sub
push
hlt
rorl
popa
inc
dec
insb
test
push
and
dec
outsb
je
mov
lret
gs
gs
or
mov
insb
outsl
jae
gs
mov
dec
popa
outsb
fs
push
call
or
lret
movsb
aam
ret
pop
lods
test
loopne
sbb
mov
or
cmp
dec
lret
ja
mov
stos
shrl
xor
pusha
xchg
fs
fisttps
or
jb
inc
shll
gs
push
jo
arpl
xchg
dec
xchg
test
outsb
jb
lcall
jo
imul
bound
push
sbb
sbb
and
mov
add
les
adc
sbb
lret
add
xchg
jle
jo
mov
scas
and
fwait
outsl
and
sub
ss
or
add
or
xor
push
pop
jmp
dec
mov
ret
or
inc
nop
mov
sbb
test
aad
ss
mov
loop
loop
cmpsl
popa
sbb
sub
movsl
sbb
in
cmp
aaa
push
adcb
xchg
cld
repz
push
sub
leave
hlt
add
add
push
add
lods
dec
dec
sbb
clc
cli
pop
stos
push
repz
or
or
adc
in
enter
adc
test
ss
mov
rclb
or
push
pop
ljmp
add
jmp
or
mov
or
add
dec
jmp
xor
or
mov
je
mov
mov
test
je
mov
inc
inc
jmp
andb
test
imul
push
test
push
je
test
jg
ja
inc
mov
enter
rolb
fnstcw
inc
jp
cmp
jo
adc
inc
push
jmp
add
add
sbb
shr
into
xor
cwtl
sub
dec
mov
mov
dec
mov
push
popf
clc
mov
cmp
dec
andl
aad
pop
pop
jbe
sti
sub
mov
cmp
mov
fadds
cmp
pop
jb
repnz
mov
push
jmp
icebp
dec
test
mov
ljmp
push
dec
loope
cmpb
add
clc
push
mov
mov
inc
inc
ja
cmp
pop
jecxz
adc
fildll
push
cmp
jle
mov
sbb
or
mov
jne
mov
sub
or
je
mov
cmp
add
or
inc
jmp
mov
add
mov
inc
mov
add
stos
lea
lea
ljmp
cltd
pop
cwtl
mov
testb
mov
mov
lds
js
clc
dec
adc
int3
mov
push
xchg
lcall
inc
push
roll
mov
mov
jl
cmc
mull
lea
jae
mov
push
adc
sarl
ret
mov
inc
jb
sbb
test
jg
fiaddl
iret
cmp
jbe
mov
jp
clc
pop
jle
cld
mov
add
cmp
pop
test
jo
rcr
mov
sbb
jmp
mov
cmpsb
lea
movzwl
loop
fildl
inc
sbb
orl
fsubrs
fdivs
cld
jae
cmp
jb
fbld
push
repz
add
fidivrs
cmp
arpl
movsl
hlt
pop
inc
jno
cmp
insl
sub
pop
loope
or
aaa
and
andb
fimuls
ds
push
sbb
mov
rcrb
or
neg
jne
adc
mov
xor
mov
inc
dec
ja
jge
ds
or
or
cwtl
popf
movsl
mov
or
sbb
mov
push
jno
adc
mov
lret
ss
sarl
cmp
mov
add
sub
sbb
cmp
mov
mov
andps
pop
popa
jno
incl
jne
adc
xlat
push
push
leave
jp
adc
ljmp
shlb
inc
je
push
movsb
fsubr
in
add
push
lods
pop
pop
xchg
les
ss
dec
add
or
jae
push
sbb
dec
cmc
ds
imul
ss
lods
js
imul
xchg
fcom
and
idivb
add
push
clc
push
lret
in
inc
pop
pop
or
scas
mov
or
mov
mov
fbstp
mov
movsl
cwtl
mov
into
mov
adc
je
outsl
negb
les
sbb
ds
mov
xchg
push
xchg
or
aas
bound
arpl
inc
dec
xchg
cmp
pusha
or
cmpsb
imul
cmpsb
imul
dec
xchg
mov
or
mov
stc
and
and
sbb
mov
je
clc
mov
add
sbb
or
cmp
add
jl
pop
std
adc
push
add
add
mov
inc
rclb
sbb
stos
dec
in
clc
push
movsl
cltd
negl
rorl
push
pop
or
into
push
insl
add
roll
call
jl
in
mov
rcrb
or
icebp
sti
pop
sbb
fstpt
ficoms
add
add
jl
adc
fistl
icebp
cli
cld
cmp
mov
inc
mov
adc
push
xchg
sahf
mov
mov
jle
je
jno
sbb
sub
mov
pop
sbb
adc
imul
dec
sbb
popa
xchg
pop
jge
rcr
mov
dec
add
pop
xor
out
jle
adc
roll
ret
push
sti
nop
nop
pop
add
jnp
cmpsl
cld
mov
and
xchg
inc
jl
dec
or
fisttps
cmp
loopne
mov
mov
xchg
test
stos
adc
jne
pop
xchg
gs
push
jb
jbe
inc
pop
xchg
gs
gs
adc
int
mov
pop
dec
shll
jae
data16
or
jae
mov
lcall
popa
xor
push
cmpsl
test
in
adc
icebp
mov
gs
call
test
rolb
add
or
jne
cmp
pop
sbbl
push
or
clc
adc
movsl
mov
movsl
enter
shll
outsb
fs
or
loopne
jae
daa
daa
lret
leave
imul
int
sub
test
jns
insb
lret
in
js
jecxz
push
or
mov
xchg
inc
xchg
add
mov
pop
lods
pushf
sub
aaa
cs
mov
popa
push
jge
arpl
or
push
sti
cmp
pop
repnz
or
or
outsb
sbb
mov
xor
out
iret
pop
sbb
ret
cmp
add
pop
lods
and
aaa
mov
in
bndstx
push
or
jl
nop
packsswb
out
and
mov
inc
mov
or
pop
lods
inc
adc
nop
in
sti
bound
syscall
lods
loop
or
add
and
sbb
popa
inc
mov
add
xchg
or
jo
cwtl
sub
jns
imul
dec
outsl
jbe
lret
mov
gs
imul
into
iret
gs
push
int3
ljmp
xor
push
xor
leave
ret
inc
dec
inc
insb
add
inc
cmp
adc
insb
gs
xchg
outsb
mov
imul
push
push
pop
int3
lret
pop
mov
bound
dec
and
adc
call
shl
fadds
mov
gs
shrl
sbb
cmp
mov
mov
ud0
sub
sbb
xlat
dec
enter
fisubs
xchg
xchg
xchg
iret
enter
xor
fsts
int3
add
into
je
insb
mov
add
mov
add
push
test
addr16
cld
xor
inc
cmp
lea
jmp
or
lock
add
pop
rcll
ss
mov
popf
cmove
add
xchg
jne
dec
add
sqrtps
adc
xchg
data16
cltd
add
fwait
mov
bound
or
add
fcomps
add
jb
aaa
sbb
in
arpl
daa
push
and
add
or
push
add
in
mov
pop
add
xchg
xor
add
decl
repnz
xor
jb
gs
xor
cs
out
fs
insb
pop
dec
jo
outsb
push
push
xchg
push
mov
in
outsl
add
insl
gs
adc
jae
jbe
idivb
push
inc
ret
stos
aad
maskmovq
idivl
aad
lret
enter
imul
mov
cmp
enter
mov
adc
jnp
out
jnp
push
subps
and
das
pop
jge
jge
xor
push
mov
insb
and
jb
jb
sbb
or
outsb
je
mov
lahf
addr16
gs
add
xchg
aaa
fs
push
add
cmp
dec
out
xor
gs
inc
in
outsl
fs
insb
outsl
push
mov
out
jb
push
jns
fs
fbstp
shr
mov
xor
outsb
dec
push
je
or
push
jge
push
nop
push
push
adc
mov
push
int3
roll
push
gs
insl
loopne
shlb
mov
imul
push
outsl
data16
je
outsb
addr16
sbb
sbb
sar
sub
outsb
sbb
lcall
data16
sub
insl
inc
push
adc
dec
out
ds
gs
je
mov
insl
push
push
cs
jo
sub
jbe
pop
je
bound
jae
mov
outsl
xchg
mov
push
imul
jne
insb
push
jne
jns
js
push
imul
outsl
dec
outsl
mov
jns
aaa
dec
push
xchg
jp
loope
push
mov
push
outsl
scas
adc
mov
fistl
je
gs
jno
dec
pop
imul
outsb
dec
popa
outsb
fs
sbb
outsb
imul
pop
xlat
inc
or
arpl
sbb
arpl
imulb
push
adc
arpl
fiaddl
inc
push
int
imulb
or
inc
xchg
cmpsb
inc
inc
outsl
pop
js
rcrb
xor
adc
inc
cmp
addr16
xchg
and
dec
popa
mov
dec
push
ss
fadd
sub
outsl
jae
or
test
adc
jb
cmpsb
push
jns
jg
jne
mov
adc
jns
insb
out
sbb
outsb
sub
and
mov
ret
loope
sub
outsl
outsl
insb
pop
insb
jo
xor
out
ss
outsl
mov
xor
inc
rcrl
pop
sub
or
mov
adc
das
fimuls
outsl
es
dec
jb
mov
jae
xor
sub
in
gs
lcall
xor
jbe
cli
outsl
imul
sti
addr16
xor
aas
ficoml
xor
mov
jne
dec
push
imul
jge
xor
call
bound
sub
jbe
fiadds
insb
pop
xor
adc
mov
sbb
xor
push
jo
data16
data16
and
jl
inc
sub
sahf
hlt
jo
je
inc
or
sbb
js
rcrb
into
xor
sbb
ja
jae
adc
or
ss
jne
ja
pop
mov
out
adc
sbb
int3
mov
mov
pop
pop
arpl
sub
push
bound
int3
mov
lahf
dec
sub
pop
jae
fstpt
aas
xor
inc
pop
push
add
jne
adc
xor
adc
or
mov
jae
imul
bound
pop
bound
aaa
arpl
push
loope
js
lahf
cmpsb
popaw
out
data16
jb
jns
aaa
push
jo
pop
divl
jo
das
xorl
adc
inc
xor
pop
push
ss
push
push
data16
sbb
orl
fstpt
inc
adc
add
pop
pop
cs
por
xchg
addb
pushf
dec
add
sbb
outsb
jne
add
js
decl
daa
adc
push
pop
or
and
sub
or
push
sbb
or
mov
paddq
and
or
aaa
push
cmp
pop
filds
push
daa
push
jg
xor
aas
or
sbb
sub
push
push
fldt
push
push
or
or
and
adc
push
or
lret
or
or
push
push
push
pop
push
prefetchw
add
pop
insb
push
add
or
adc
neg
decb
daa
jno
cmpsb
adc
and
push
adc
or
adc
sti
outsl
addr16
sub
xor
sub
sub
sub
outsb
in
fcmovnu
push
jp
push
or
push
push
or
add
outsb
xlat
pop
push
imul
push
sbb
sbb
sub
std
out
incb
or
pop
pop
or
adc
or
or
test
adc
mov
sub
add
jae
sub
lock
cli
out
testb
add
add
gs
pop
cmp
insl
lret
das
cld
jg
xor
imul
cmp
movsb
push
pop
adc
lock
add
add
jo
adc
ja
xor
aaa
adc
dec
aas
imul
in
or
imul
add
or
mov
add
movsb
sbb
add
mov
das
pop
pop
add
add
fistpl
lret
adc
dec
adc
sub
sbb
aas
daa
jbe
lcall
mov
adc
cwtl
adc
sub
pop
and
or
mov
sbb
fs
adc
sbb
pop
dec
pop
pop
jmp
mov
adc
or
cmp
pop
add
and
fldt
scas
lock
sbb
push
cs
idiv
fs
pop
add
stc
add
add
jg
cmp
or
cmp
push
adc
lock
xchg
popa
inc
push
push
daa
inc
push
dec
adc
adc
or
inc
lock
ss
add
add
push
adc
insl
push
add
adc
mov
cwtl
push
sbb
lock
push
add
incb
jg
add
dec
shl
add
and
add
loopne
adc
or
xchg
das
jb
or
addb
or
add
jmp
or
sahf
or
adc
push
adc
pop
pop
jo
mov
push
enter
add
dec
pop
popa
push
cs
or
adcb
jb,pn
and
sti
imul
pop
ja
inc
add
es
or
cld
je
shlb
mov
pop
cwtl
fs
mov
mov
ja
jmp
dec
lcall
xor
lcall
dec
fildl
add
add
add
add
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
loopne
add
add
fchs
add
movsb
loopne
add
loopne
add
add
lock
add
add
sti
loopne
add
add
push
loope
add
loopne
add
loope
add
loope
add
loope
add
add
dec
loope
add
add
add
add
add
add
add
add
add
jbe
add
add
add
jl
add
add
add
test
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
inc
push
xor
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
outsb
push
jb
arpl
jae
outsl
imul
add
je
insb
je
add
imul
inc
add
add
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
add
add
enter
add
fsub
add
add
add
add
add
add
add
int3
loope
add
loope
add
add
xchg
push
add
jecxz
add
in
loope
add
add
add
jae
arpl
fs
insb
add
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
add
add
or
add
fnstsw
add
add
add
sbb
add
push
add
push
add
dec
add
dec
add
add
add
add
add
addb
add
add
add
push
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
repz
arpl
arpl
xorb
lock
mov
stc
arpl
and
jp
lret
or
mov
je
faddl
xchg
and
cli
fadd
fwait
mov
cs
bound
mov
addr16
leave
mov
add
insb
mov
int3
and
das
shrb
pop
inc
arpl
push
in
icebp
ret
jae
stc
adc
nop
jbe
xchg
jno
fs
adc
add
inc
lods
in
mov
pushf
and
hlt
jns
std
sbb
dec
pop
cld
push
inc
mov
or
mov
push
dec
outsb
push
inc
dec
jmp
sub
add
mov
mov
push
dec
add
les
cld
sub
xchg
enter
insb
adc
imul
sub
mov
xlat
and
dec
inc
jb
popa
stc
fdivrs
aaa
dec
imul
and
aam
xor
mov
ljmp
orb
sbb
add
es
and
jb
or
movsl
cmp
push
cmp
xchg
divl
xchg
loope
fwait
in
imul
pop
jmp
xor
lret
shrl
mov
mov
incb
mov
xchg
bound
jmp
inc
mov
mov
jno
inc
sbb
inc
addr16
lods
xchg
test
or
push
rorb
pop
test
into
add
shrb
nop
inc
push
outsl
dec
stos
add
push
or
mov
js
rcrb
jb
pushl
push
and
aaa
mov
lds
sub
mov
mov
into
aam
mov
out
mov
pop
jle
outsb
sub
lods
in
dec
pop
in
sbb
lock
fstl
cmp
out
xor
hlt
dec
js
andb
mov
jns
aad
pop
enter
lcall
sbb
test
sub
mov
adc
and
add
mov
jb
pop
dec
in
dec
jg
ret
es
xorb
pushl
cld
mov
add
test
repz
add
mov
in
ret
jl
jmp
add
imul
pusha
pop
stos
xor
cld
dec
int
sbb
pop
mov
jns
sbb
pop
mov
cli
pop
sbb
push
or
xor
dec
lods
push
push
jnp
add
and
mov
cwtl
sub
pop
adc
xadd
int3
sub
and
lock
inc
pop
mov
repnz
fisubs
inc
rol
ret
insl
cld
out
aam
ds
mov
bound
xchg
imulb
cmp
outsl
mov
jge
mov
aam
pop
cmpsl
aam
repnz
inc
outsb
add
shrl
test
mov
dec
int
push
lods
cmc
cmpsb
les
stos
push
pushf
mov
mov
push
mov
fistpll
lods
mov
mov
sbb
bound
cmp
fmull
fstl
mov
stos
jmp
outsb
shrl
push
lret
and
pop
xchg
movsb
mov
sub
or
int3
fcoml
lret
insb
dec
inc
mulb
push
mov
push
fildl
int
mov
mov
push
int3
scas
inc
das
and
mov
xchg
mov
std
mov
mov
dec
adc
scas
in
xor
lret
mov
mov
sub
mov
imul
cwtl
std
fs
pop
dec
or
je
or
out
cs
icebp
in
mov
xchg
xor
lahf
push
fwait
in
fstl
ss
inc
xchg
mov
mov
mov
fsts
std
insl
out
mov
clc
pushf
inc
bnd
inc
jns
ret
les
insb
push
sbb
test
mov
cmp
mov
adc
nop
sbb
xchg
subb
cmp
push
fwait
xor
xchg
and
ffree
jb
inc
and
or
out
xchg
stos
nop
pop
pop
inc
pop
mov
shrl
insl
dec
inc
or
pop
mov
test
std
gs
cwtl
fsubrl
mov
call
mov
sbb
divl
sub
xchg
bound
inc
push
or
daa
enter
sbb
sbb
mov
add
mov
outsb
sbb
mov
movsl
call
and
add
sub
fstps
pop
out
add
mov
sub
dec
pusha
pop
lret
lods
lret
inc
mov
xchg
jle
shll
scas
fmull
cltd
mov
aas
jo
lahf
les
xchg
jbe
mov
xor
cmc
inc
scas
test
nop
mov
dec
dec
subb
xor
xor
mov
in
or
imul
repnz
adc
sbb
scas
sub
and
fwait
movsl
sub
inc
cmpsb
dec
repnz
roll
loopne
jecxz
xchg
sbb
pop
mov
push
std
mov
add
into
call
inc
jnp
fadd
outsb
xchg
rolb
scas
xchg
ja
xchg
push
out
mov
stos
icebp
fwait
or
dec
ror
jns
or
push
jmp
andl
mov
push
sahf
out
and
enter
lret
push
mov
add
fwait
pop
je
outsl
lea
add
into
sub
pop
add
into
jbe
jo
out
jge
daa
xchg
lds
mov
jl
pop
ret
loope
push
mov
test
or
adc
xchg
pop
xor
or
insb
rorl
rcrb
or
dec
push
sbb
cmp
pop
dec
dec
or
mov
push
xor
sub
aas
or
push
cmc
in
pop
fildl
cwtl
test
popf
mov
push
in
mull
fcmovnu
lock
loopne
push
lret
xchg
mov
inc
lea
enter
xchg
subl
pop
imul
pop
jmp
jmp
je
dec
or
mov
daa
divb
cmp
aaa
add
ss
push
iret
lods
push
jnp
cmp
xchg
mov
mov
out
jg
mov
imul
pushf
aaa
ss
jbe
jne
mov
out
jg
test
mov
add
fwait
test
lcall
aaa
xlat
jmp
leave
pop
loope
lret
xor
test
notb
int3
mov
je
jb
or
js
ret
bound
aad
jae
lds
pop
mov
pop
pop
je
test
add
mov
cwtl
ljmp
dec
sub
jns
push
add
xlat
and
shlb
fbld
popf
add
and
icebp
je
outsl
sbb
addb
arpl
pop
fnstsw
pop
push
ss
inc
jecxz
fdivp
int3
fadd
neg
out
hlt
xchg
repnz
test
in
xchg
mov
sbb
mov
arpl
fisttps
adc
cmova
aas
xor
cmp
movsb
xlat
jmp
mull
bnd
lcall
movsb
rcrl
push
sbbb
negl
or
repz
mov
cmp
in
outsb
push
dec
jle
loopne
or
lahf
std
pushf
jge
stos
push
in
inc
pop
adc
inc
js
js
imul
enter
push
lret
cs
lock
mov
punpcklwd
scas
ret
or
cwtl
daa
mov
pop
into
movb
lods
into
add
jl
cwtl
adc
fistpll
adc
dec
mov
push
or
scas
lods
pop
sti
add
sbb
xchg
loope
cmpsl
xor
xchg
lods
enter
pop
or
iret
sub
mov
pop
adc
aaa
push
mov
movsl
add
xor
xor
inc
sbb
xchg
or
add
sub
add
mov
adcl
xchg
or
decb
fldt
mov
out
xchg
ja
enter
loop
cmpsb
ficompl
sub
faddl
jnp
rorl
imul
lods
ret
xor
mov
cmc
call
test
mov
inc
rcr
mov
pop
pop
sub
add
jg
aam
adc
pop
outsb
in
sarl
imul
out
cmp
mov
xor
test
or
das
loope
mov
inc
icebp
inc
push
ficoms
sar
ror
cltd
or
repz
shlb
pop
pusha
mov
insb
sub
hlt
mov
imul
idivl
jg
aaa
fmuls
jecxz
add
or
lds
int3
lods
mov
and
mov
jge
add
aas
loop
mov
push
ret
add
and
out
loope,pn
out
mov
shl
std
lea
adc
inc
xor
jle
lock
dec
gs
jbe
data16
mov
test
xor
add
push
shr
dec
and
xor
jo
dec
pop
cmpsb
icebp
push
and
inc
dec
mov
dec
icebp
dec
enter
aad
in
popf
jns
add
stos
shl
inc
cs
out
ljmp
mov
mov
ds
xor
dec
call
out
inc
jb
mov
xchg
mov
or
push
cmp
andb
mov
cltd
mov
and
xchg
ljmp
dec
adcb
jle
int
clc
int3
cmp
mov
jp
xorb
loop
jmp
adc
pop
imul
jae
and
inc
roll
push
push
inc
shl
call
cmp
dec
add
sub
jecxz
mov
jge
fcomps
test
insl
or
in
sti
cmp
jae
test
push
enter
pop
sti
jge
gs
leave
ret
jae
imul
test
mov
cli
sbb
inc
fwait
sub
and
cmp
and
ret
mov
es
mov
sub
in
je
adc
mov
into
mov
loope
xlat
lcall
xchg
daa
add
mov
icebp
jno
js
or
jne
push
mov
iret
mov
hlt
fadd
jge
xchg
fimuls
jae
dec
rol
mov
roll
xchg
stc
scas
das
xor
repnz
sbb
js
dec
movsl
jnp
adcl
fldenv
mov
in
in
divl
inc
repz
dec
lahf
adc
gs
je
divl
mov
inc
movsb
jge
and
xor
lock
enter
cmc
shlb
pop
xchg
mov
jbe
adc
inc
dec
stos
cmp
outsb
pop
hlt
roll
enter
sub
xchg
dec
aas
cmp
sahf
xchg
addr16
mov
and
mov
clc
adc
pop
int3
xchg
pop
leave
leave
lahf
push
leave
mov
mov
incl
adc
jge
je
data16
dec
fs
pop
add
cmp
stos
xchg
pop
out
mov
mov
cmp
push
shrb
cmp
lock
mov
cmp
push
mov
mov
cmp
movsl
sub
mov
shrl
add
push
sub
sub
inc
sub
addr16
repz
scas
jl
pmovmskb
call
popf
test
fmuls
push
xchg
xor
les
xor
mov
fsub
js
ret
fisubrl
ret
dec
dec
push
repz
cmp
xchg
pop
lods
out
cwtl
xor
testl
mov
aam
mov
outsl
ds
xchg
dec
xchg
fldt
add
mov
rcrb
pop
push
mov
sub
and
cmp
fsubrs
rorb
push
pop
aam
push
mov
sahf
int3
mov
xor
hlt
jge
inc
adc
test
insb
pop
pop
aaa
mov
inc
cmp
sub
sbb
shlb
xchg
xchg
inc
or
mov
dec
addl
xchg
mov
mov
jo
or
add
adc
popf
mov
xchg
lods
lea
cmc
outsb
scas
mov
xchg
sbb
popf
jmp
jle
js
xchg
daa
jge
push
lea
push
jno
ret
divl
push
ljmp
shrl
cli
dec
or
xlat
scas
jle
ss
pop
xor
mov
cmc
and
ljmp
jno
lcall
cltd
push
jbe
jbe
scas
mov
aaa
stc
xlat
int
inc
bound
xor
dec
cmp
out
mov
nop
add
int
mov
jno
stos
pop
shlb
rcr
adc
int3
ja
mov
das
pusha
adc
pop
mov
loop
inc
pop
ljmp
and
fnstsw
adc
fucompp
stos
loope
ret
divl
lods
cmc
cmp
popa
mov
ret
sub
or
add
pop
xchg
stos
ret
shrb
mov
les
pop
xor
rolb
jp
jmp
repz
dec
jnp
je
pop
outsb
mov
jae
fwait
loop
pop
mov
notl
and
mov
xchg
les
int
insb
push
ret
repnz
adc
repnz
jg
and
pop
repnz
shl
adc
je
movsb
xor
imul
sbb
mov
add
dec
sbb
sub
push
jl
pop
pop
in
push
add
cmp
and
popf
push
pop
inc
enter
mov
xchg
repz
adc
cmp
nop
and
cmp
dec
mov
ja
dec
test
or
fnstcw
sbb
sbb
pusha
lods
cmpsl
sahf
les
scas
adcl
out
jle
nop
into
stos
inc
mov
xchg
test
jbe
jg
adc
cmp
call
popf
ja
popf
imul
enter
fstpt
gs
rcrl
es
xchg
imul
or
out
sahf
dec
push
int
pop
sub
cmp
push
and
and
push
ljmp
cmp
ljmp
pop
in
pop
in
icebp
iret
mov
lods
std
call
mov
dec
pusha
cmpsl
push
mov
and
mov
std
bound
sbb
cltd
fs
bound
rclb
push
in
dec
ret
out
pop
mov
inc
repnz
sub
hlt
repz
push
ljmp
out
mov
ljmp
clc
ret
xchg
hlt
push
push
movsb
in
push
out
repnz
cmp
jne
call
fbstp
ret
imul
in
ror
mov
cmp
loopne
xor
mov
cli
ds
fdivs
fisubrl
dec
pop
sbb
push
pushf
push
mov
jns
jb
inc
pop
cmp
fdivrl
stc
pushf
test
cmp
lret
popf
add
in
adc
fcoms
sarl
inc
nop
sbb
enter
mov
pusha
ror
cmp
push
and
subb
stos
push
or
out
test
jg
mov
pop
stos
add
sbb
jne
pop
cmpsl
popf
movsl
loop
ret
rol
jns
outsl
outsl
bound
push
vpunpcklbw
mov
or
scas
inc
mov
dec
mov
sbb
and
push
jle
and
xchg
loope
shr
jae
into
subl
mov
cwtl
mov
jnp
mov
add
js
mov
mov
and
mov
pop
push
out
sahf
add
jmp
xchg
jns
ss
or
sar
movsl
xchg
sbb
jge
fdivr
mov
lods
in
fiaddl
xchg
sarb
mov
fnstenv
cmp
sub
push
stc
xchg
jb
sbb
cmp
cmpsb
popf
mov
cld
mov
jl
sbb
pop
push
loopne
lret
scas
xor
sbb
incl
inc
mov
pop
cmp
adc
repz
or
ja
test
int
inc
pop
out
push
xor
xchg
xor
dec
mov
test
mov
mov
aad
add
sub
mov
xchg
cmpb
mov
mov
ret
shrl
rclb
mov
jb,pt
push
jbe,pt
and
lods
add
mov
cld
out
or
jno
cmp
xlat
fs
scas
std
sbb
pop
push
xchg
xlat
add
push
xchg
mov
js
add
push
rolb
or
mov
and
mov
cmp
xchg
pop
add
dec
enter
std
lcall
pavgb
leave
cwtl
push
mul
pop
lea
ds
cltd
lret
insl
or
aas
jmp
inc
test
lods
xchg
stc
les
adc
cs
and
lock
lods
or
xchg
notb
inc
mov
jecxz
xor
adc
sti
xchg
mov
cmp
pop
fsubs
mov
je
xor
push
mov
clc
or
push
scas
pusha
cmpl
fcmovnbe
pusha
in
hlt
inc
xor
cld
cmc
rcrb
inc
fsubrs
test
test
dec
out
lcall
mov
movsl
pop
jp
push
or
or
shrl
pop
std
sub
mov
jmp
mov
mov
jecxz
ret
int3
add
lea
fsub
jmp
mov
fiadds
mov
or
inc
jae
or
call
xchg
lret
mov
pop
mov
out
outsb
fnstcw
sbb
jbe
dec
cmp
addr16
mov
sbb
jg
push
lahf
sub
cmp
test
popa
mov
adc
shll
cmpsb
and
enter
pop
loop
xchg
in
jo
jne
insl
and
popf
popa
out
push
push
inc
sarl
sub
roll
mov
shlb
arpl
stos
inc
add
ret
pop
mov
adc
xor
mov
mov
test
imul
and
dec
jb
insb
fisubrs
mov
out
pop
outsl
stos
pop
or
push
xchg
mov
pushf
pop
dec
dec
jg
pop
subl
es
sahf
mov
mov
xchg
mov
lds
mov
pusha
cmp
inc
fbstp
mov
loopne
hlt
sahf
mov
jbe
dec
int
xchg
inc
mov
jne
xor
or
ss
rclb
in
jle
or
loope
ljmp
je
add
push
mov
sbb
into
xor
repnz
and
add
imul
mov
pop
cmp
cltd
inc
sti
push
pushf
into
hlt
pop
rclb
push
cld
xchg
xchg
leave
push
stos
cmp
and
dec
lret
movsb
in
sub
add
out
lret
xor
and
inc
mov
cmpsb
in
xor
xchg
push
call
jp
lds
and
cmp
mov
jae
daa
add
mov
sbbl
ja
and
xor
push
xchg
dec
negb
arpl
mov
daa
insl
in
add
sub
incb
jae
jmp
xor
push
add
cmc
cmp
jmp
rcrb
sbb
data16
stos
mov
xor
dec
fmul
pop
xchg
fistps
cmpl
push
push
jb
jne
sub
sbb
mov
test
std
gs
or
pop
testb
xchg
sbb
aam
cmp
mov
xchg
mov
fcoml
xor
fisubs
clc
pop
mov
xchg
mov
sub
jbe
adcl
pop
xor
fs
stos
shrl
cli
mov
cmp
lea
outsl
jp
lahf
andl
adc
ljmp
cmp
jg
test
and
mov
cmp
cmc
pop
inc
jmp
jmp
add
push
cmpsb
xchg
imulb
arpl
stc
mov
insl
stos
test
mov
or
pusha
xor
stc
jns
jbe
je
pop
dec
loop
shll
stos
pushf
fsubrs
xchg
jecxz
sbb
mov
stos
dec
inc
mov
jg
lds
sarl
clc
sbbb
cwtl
sbb
shlb
mov
dec
add
mov
bnd
mov
out
cmp
mov
jne
cmp
mov
or
sub
fisttps
cmp
inc
mov
lcall
push
cmp
sarl
or
cmp
mov
xor
jno
jp
rcl
push
and
mov
cwtl
push
je
ljmp
and
pop
mov
adc
xchg
inc
testb
inc
jg
push
imul
mov
bound
add
xchg
movsb
nop
loop
mov
fistpll
push
dec
or
daa
adc
test
xor
fisttps
dec
push
sub
daa
repnz
cld
mov
sbb
std
fnstcw
sub
cmp
or
jmp
cmp
fwait
sbb
cmp
aad
dec
push
rcl
in
mov
mov
and
jnp
push
iret
add
mov
mov
mov
add
scas
lret
fistps
jo
shl
xchg
call
jp
dec
je
inc
fistpl
or
pushf
pop
mov
inc
jns
jns
and
jmp
sub
mov
sub
cli
notb
out
iret
mov
int
enter
scas
rcr
mov
pop
lret
pushf
xchg
xchg
mov
in
in
pop
sub
data16
mov
sub
add
in
add
out
lahf
ja
and
jns
hlt
jle
dec
push
pusha
push
adcb
aad
mov
mov
out
and
mov
lods
inc
dec
idivb
lret
push
pop
inc
jmp
out
push
sbb
sub
repz
push
insb
inc
mov
scas
cmp
cld
hlt
lahf
outsl
xorl
sbbb
adc
and
leave
dec
mov
or
iret
pop
aad
dec
xchg
cmp
xor
sub
inc
rorl
sub
pop
dec
mov
pushf
inc
fsts
in
lock
mov
add
pop
push
sti
adc
push
xchg
and
push
dec
sbb
lret
ds
aaa
jbe
fmuls
push
jmp
fiadds
lock
decb
add
jae
stc
test
xchg
loope
in
xchg
xchg
inc
inc
jle
aam
jge
dec
and
jne
jns
fidivs
pusha
xchg
ret
jp
jl
shrb
pop
sbb
cmpsl
lcall
into
hlt
and
mov
cmp
nop
xor
xchg
js
sbb
cs
insl
int3
ds
lds
or
cmp
jge
mov
and
dec
pusha
mov
mov
jbe
xchg
fwait
sub
cmp
and
shlb
add
cmc
xchg
shrb
or
pusha
lds
mov
jno
mul
jle
subl
or
mov
fnstcw
xchg
mov
pop
in
adc
pop
and
add
pop
cmp
subb
jecxz
idivl
jp
xchg
fimuls
call
jg
jp
enter
pop
fsubr
repnz
ret
mov
ficoml
js
xchg
xor
shrl
scas
iret
cli
jne
inc
xor
mov
jmp
pop
dec
in
stos
mov
push
cmpsl
sbb
or
lods
sbb
je
cs
mov
adc
lods
lahf
mov
faddl
mov
loop
and
pop
push
cmp
das
jbe
cmpsl
xor
mul
inc
mov
xor
pop
repz
dec
pushf
daa
or
shll
pop
shr
mov
addl
arpl
push
mov
gs
orb
mov
sahf
sbb
inc
into
xchg
mov
pop
inc
addr16
lods
mov
sbb
out
cmp
scas
fs
test
cmp
imul
mov
cmp
hlt
outsb
loopne
stos
lret
call
inc
mov
pop
or
mov
lods
lret
jmp
in
pop
imull
idiv
cwtl
popa
and
add
stc
mov
arpl
imul
mov
xchg
mov
lock
scas
dec
lcall
inc
xor
sub
sbb
push
sbb
ljmp
nop
incl
test
dec
add
mov
mov
pusha
lods
lods
or
scas
rorb
xor
lcall
dec
iret
rcll
lcall
or
mov
lret
inc
fs
test
lret
pop
aas
inc
popa
push
mov
cltd
rcrl
pop
in
jl
push
icebp
fbstp
sub
add
out
daa
leave
adc
inc
ljmp
lret
inc
dec
in
push
mov
idiv
mov
xor
xchg
pop
das
leave
popf
je
add
inc
or
jle
pop
inc
push
pop
sbb
dec
je
test
xlat
fisttpl
sbb
shrl
sub
std
and
pop
jo
sbb
bound
ds
pop
insl
in
out
popf
mov
add
sarl
sub
ror
fidivs
dec
cmp
mov
outsl
icebp
mov
mov
xchg
cs
cmpsb
shl
aad
fcomps
mov
pusha
rcrl
loop
jmp
cmc
pop
pop
popa
xchg
mov
loop
add
mov
fwait
in
ljmp
push
push
or
es
data16
fcmovbe
sbb
insl
std
inc
pop
movsb
adc
shl
jl
inc
and
lret
or
pop
mov
imul
repnz
loope
push
pop
or
shlb
test
cld
or
std
sbb
les
pop
sbb
xorb
test
dec
add
lods
shr
lcall
sbb
into
pop
enter
std
dec
add
loop
jg
movsl
mov
std
or
xchg
push
jnp
fisttpll
testb
test
mov
and
lods
popa
test
add
stos
jnp
jle
adc
divl
xchg
mov
movsb
mov
dec
sbb
jbe
stos
fnstcw
out
imul
movsb
jae
scas
fimull
push
mov
pop
daa
mov
dec
mov
cli
andnps
mov
lds
loop
int3
jns
jmp
ja
hlt
fstps
add
pop
sbb
sub
int
loop
cmp
sub
add
add
cmc
mov
sbb
loop
dec
sbb
cld
pop
lods
ja
sbb
or
jo
jp
jecxz
xlat
sub
aad
xor
adc
or
pop
repnz
jae
call
daa
popa
sub
pop
and
add
insb
push
es
icebp
mov
mov
rcrb
cli
loope
dec
aaa
mov
mov
inc
lret
cmp
insb
ljmp
mov
push
sub
pop
cmp
and
sub
sbbb
outsb
xor
scas
data16
mov
jg
movsl
cmpsb
pop
pop
lahf
stc
add
pop
and
cmp
sub
add
ret
cs
sub
imul
xchg
rcrl
stos
pop
inc
imul
push
or
fdivr
ret
or
aas
clc
fimull
dec
jne
dec
dec
dec
ds
or
sub
test
push
or
mov
stos
test
mov
cmc
xchg
add
xor
sub
jecxz
mov
inc
xchg
rcrb
and
push
jo
xchg
icebp
dec
aad
mov
es
push
js
iret
sub
out
in
gs
add
adc
outsl
jecxz
cmp
stos
lock
dec
mov
cli
or
inc
push
aas
adc
jle
jge
call
cmp
mov
sbb
jbe
loop
dec
sahf
jnp
xlat
dec
testl
xchg
mov
gs
and
mov
dec
nop
cld
lds
push
jle
add
and
and
fld
andl
sub
xor
sub
sahf
inc
movl
mov
stc
shll
and
jbe
mov
fnstsw
mov
xchg
cmc
push
jp
jnp
mov
aaa
cmp
push
jmp
or
pop
jns
sub
int
or
xchg
pop
push
sbb
mov
and
jp
fsubl
mov
add
jge
popa
test
iret
lods
and
xor
loop
lock
pop
add
xchg
sbb
xchg
loopne
lret
and
pushf
jmp
movsb
sti
cmpsl
and
adc
pop
and
popf
adc
cmp
and
cld
inc
outsl
jno
adc
jo
dec
mov
loop
in
shrb
loopne
sbb
stos
leave
sbb
scas
fists
add
cmp
scas
mov
add
and
pop
xchg
aad
fdiv
inc
fisttps
mov
out
xorb
pushl
incl
dec
sahf
fidivrl
int3
xchg
xchg
fmul
sbb
shr
stc
outsb
lock
inc
dec
out
sbb
jno
push
loopne
movsb
int
mov
mov
mov
hlt
out
sbb
mov
popf
and
dec
neg
sar
pop
xor
jle
mov
stos
adc
imul
inc
sub
add
push
clc
and
es
sbb
je
sbb
push
mov
xor
jns
gs
dec
insb
mov
jbe
add
ficomps
push
xor
leave
test
les
xchg
xchg
pop
dec
pop
xor
add
data16
inc
or
pop
fsts
xor
xchg
mov
xor
xchg
clc
pop
and
insl
outsl
mov
mov
push
loopne
bound
lods
in
mov
inc
mov
dec
cmp
lods
and
and
mov
push
dec
mov
sahf
sti
or
lock
ret
jecxz
mov
jnp
std
sbb
mov
clc
das
add
imul
add
and
pop
cmp
mov
lea
xchg
add
daa
movsl
mov
sub
lds
cmpl
mov
mov
xchg
incl
sub
xchg
cli
addr16
lea
pop
stos
into
sub
jl
mov
or
and
fwait
test
jmp
bound
cmc
ret
push
sbb
xchg
ja
into
nop
lret
loop
add
mov
jle
jnp
sbb
or
jo
orb
push
dec
in
mov
add
sub
add
aam
mov
shll
adc
pop
adcl
inc
sbb
xchg
mov
mov
into
pushf
lahf
and
cmp
and
int3
push
adc
mov
je
cmp
stos
lcall
mov
cmp
xchg
pop
addb
sub
inc
mov
shrb
in
sbb
sarb
out
mov
lret
imul
inc
aas
cs
outsl
jl
dec
xor
test
lret
cmp
mov
inc
test
outsl
xchg
stc
stos
rcl
xor
and
cmpsl
nop
mov
xchg
push
cltd
dec
les
mov
adc
push
mov
pop
or
out
addr16
or
pop
daa
stos
jecxz
stos
cmpsl
hlt
aam
adc
cs
xor
mov
xchg
add
int3
mov
int
sub
cld
testl
fcoml
neg
out
pop
icebp
lods
rolb
js
lock
or
mov
xor
cld
pop
mov
xor
test
in
push
cli
xchg
cmp
pop
scas
jno
pop
lods
mov
insb
jmp
movb
cmpsl
frstor
movsl
loope
xor
hlt
ja
imul
arpl
xchg
dec
xchg
cmpsl
mov
aad
jmp
lods
jbe
mov
aam
sub
and
iret
inc
mov
inc
adc
xor
repz
pushf
rclb
rol
in
mov
inc
ret
push
and
out
dec
and
push
test
mov
pop
adc
das
mov
sbb
scas
in
and
in
dec
jns
sbb
add
pop
aam
mov
test
sbb
in
inc
stos
mov
jmp
dec
inc
inc
aam
out
pop
fisttpl
adc
xor
mov
clc
cmp
ret
jecxz
inc
es
repz
enter
int
add
insl
pop
sbb
push
pop
adc
jae
sub
pop
mov
push
std
push
bound
fisttpll
jae
or
sub
inc
pop
dec
sahf
mov
loope
aam
adc
and
outsb
cmp
fldl
adc
repz
or
sub
jnp
pop
into
cmp
xor
dec
dec
repnz
xchg
andl
dec
adc
in
bnd
cld
lods
scas
aas
in
es
or
pop
cmp
sbbb
inc
rorl
imull
mov
push
lods
inc
pop
xchg
mov
sahf
insl
or
pop
adc
pop
dec
lea
xor
mov
fbld
ret
jmp
mov
shlb
sbb
loopne
dec
or
in
ret
orl
call
sub
add
or
cld
jae
xchg
mov
in
fidivrs
sub
aad
jnp
inc
push
sbb
xchg
mov
pop
hlt
fwait
sarb
and
inc
mov
pop
leave
dec
je
bound
lock
sbb
inc
cli
xchg
pop
inc
dec
mov
imul
popa
movsl
fildll
loop
push
mov
xchg
or
imul
cs
mov
dec
mov
lea
rorb
cmpsb
jge
ficoms
xlat
das
jbe
inc
and
push
decb
and
xchg
and
in
enter
or
imul
or
mov
std
sarb
repnz
jno
mov
xchg
xchg
mov
adc
call
outsl
js
pop
lret
jne
js
pop
add
and
and
mov
pop
cmp
jne
movsb
shlb
lods
push
rcll
adc
or
ljmp
pop
mov
mov
lea
pop
xor
cmpsb
jnp
xor
ja
stos
mov
movsl
dec
stc
xchg
adc
push
jb
dec
lret
subl
mov
mov
int
mov
cmp
fcmovu
inc
lock
dec
es
nop
add
fmull
lahf
mov
out
push
xchg
std
int
pop
xchg
iret
aam
mov
xor
div
inc
jo
sbb
rolb
mov
ja
ljmp
ret
mov
mov
outsl
xchg
and
push
pop
push
loope
mov
rorb
jg
sbb
call
mov
sub
pop
ret
sbb
jl
jl
sbb
add
std
rorl
loope
lock
in
add
pop
push
and
jecxz
ret
xor
test
cmp
pusha
int
cmp
test
mov
jp
int3
jg
cwtl
imul
in
fst
lods
fxch
or
push
jmp
cltd
mov
aas
or
add
or
mov
push
cmp
addb
popf
nop
mov
dec
test
push
or
and
xlat
es
mull
dec
ja
aaa
ret
adcb
fsts
xor
hlt
ret
mov
icebp
iret
hlt
int
jl
daa
pop
sbb
dec
fiaddl
pop
divl
adc
cmp
negb
fidivs
cmp
int
push
mov
lea
pop
mov
std
lods
pop
sbb
jnp
mov
jns
cltd
xor
push
and
add
dec
mov
std
lahf
pop
cmp
sub
mov
das
inc
jge
mov
mov
dec
arpl
jnp
ss
add
je
mov
ret
jp
push
jae
nop
cmp
lcall
xchg
inc
cld
mov
bound
in
jae
mov
xor
adc
ficompl
inc
js
fcmovbe
ds
lock
mov
add
inc
ds
pop
fwait
movsl
fldl
push
pcmpeqb
mov
sti
mov
aas
outsl
sbb
ja
jno
pushf
sub
xchg
clc
add
das
sbb
mov
ret
outsl
nop
mov
fdivl
dec
inc
xlat
pop
sar
stos
jb
and
add
mov
arpl
pop
mov
int
mov
stos
and
xor
imul
repz
std
in
jbe
mov
adc
iret
leave
inc
cwtl
movsb
pop
dec
addl
push
int3
xchg
push
insb
jecxz
lods
gs
out
gs
sub
mov
bnd
pop
out
xchg
xchg
sbb
add
outsb
cld
mov
pop
notb
out
pop
pusha
and
mov
cmp
inc
arpl
aas
dec
mov
mov
mov
lds
push
decl
out
lods
pop
adc
jae
pop
idiv
dec
out
stos
pop
dec
mov
sarl
pop
lock
in
sti
mov
mov
js
decl
nop
jecxz
hlt
pop
push
pusha
or
cltd
pusha
movsl
xchg
fdivr
aaa
mov
sub
add
loopne
push
lods
jp
pop
ret
mov
mov
ja
out
push
add
in
mov
mov
cli
pop
jmp
and
sub
push
mov
daa
add
movsb
add
jle
cwtl
gs
iret
insl
popf
out
dec
sbb
xchg
adc
jbe
aam
push
jle
mov
inc
inc
inc
sbb
and
sbb
mov
jae
shll
mov
inc
push
lods
push
out
aad
addr16
in
push
pop
push
shl
or
push
sbb
xchg
imul
sbb
mov
loopne
out
movsb
fs
jo
inc
xor
aam
dec
stc
out
mov
push
xchg
test
push
fsts
jno
out
stos
std
mov
jnp
jb
adcl
insb
xchg
xlat
xor
sbb
adc
insl
lret
or
inc
clc
dec
icebp
ret
in
xchg
mov
dec
jecxz
push
popf
dec
cmp
loop
ficomps
call
xor
mull
sbb
mov
sub
daa
add
jecxz
lods
mov
xlat
les
cli
fldcw
enter
add
sbb
dec
mov
mov
aam
xchg
sbb
sar
sahf
mov
and
outsl
arpl
mov
xchg
scas
dec
dec
push
adc
push
bound
rcrb
adc
es
pop
pop
call
dec
mov
sbb
and
lret
push
sub
in
xchg
cmp
and
fdivrl
dec
mov
aaa
sbb
or
inc
jmp
jge
cs
pop
mov
test
jns
push
push
xor
sbb
scas
mov
ret
nop
jg
dec
repz
dec
movsl
cmc
xchg
push
jp
sub
ss
dec
and
sti
mov
jnp
movsb
sub
sahf
push
or
fwait
sbb
test
in
mov
shr
outsb
jle
pop
add
and
adc
cwtl
cltd
aad
or
inc
mov
or
lahf
xchg
cmpsl
mov
pop
lds
rcl
and
mov
cld
jmp
adc
gs
pusha
movsb
pop
push
sub
test
xor
xchg
rcl
mov
mov
or
pop
pop
or
rorl
scas
lret
mov
int3
aas
fidivs
adc
test
pushf
cmpsb
dec
bound
mov
mov
dec
sbb
ret
ret
pushf
andb
and
jle
inc
ljmp
xchg
jl
repnz
movsb
or
or
dec
cmp
mov
clc
in
sub
and
lods
jp
pop
push
dec
xchg
jne
ret
cmp
stos
rcl
in
repz
imul
sbb
int3
adcl
mov
push
cli
pop
jl
mov
mov
in
jge
inc
aad
and
repz
xor
js
xor
lea
bound
cwtl
fimuls
jo
add
addr16
add
popf
rolb
scas
sub
mov
fnstsw
xchg
pushf
enter
mov
and
in
cs
push
cld
xchg
into
dec
popf
xor
sbb
mov
test
cmp
and
add
mov
mov
pop
xchg
gs
imul
sbb
or
jnp
mov
push
lock
test
ffreep
cld
lahf
jnp
dec
xchg
divl
popa
arpl
mov
mov
repnz
cmp
test
outsl
sti
mov
push
mov
or
add
jo
out
sub
addr16
popf
mov
in
icebp
inc
in
or
dec
adc
lcall
repnz
iret
add
and
jno
jns
and
call
mov
loop
insl
movsb
mov
shll
aaa
std
std
and
loopne
push
stos
popa
imul
push
xchg
cmpsb
out
push
xor
dec
in
inc
xchg
popf
imul
jmp
mov
push
mov
sahf
push
push
shll
mov
inc
js
std
popf
inc
cld
pop
shl
test
int
insl
data16
pop
ret
and
fdivrp
out
sbb
fs
cmc
dec
or
out
mov
sbb
add
mov
aam
inc
ficompl
lahf
out
loope
test
pop
mov
cmp
push
xor
xchg
sahf
lods
pop
jmp
into
mov
es
cmpsb
cmp
dec
xchg
das
pushaw
push
xor
push
lea
inc
jo
pop
adc
push
or
push
aam
mov
cmp
addr16
mulb
mov
adc
cld
adcb
repnz
stc
pop
dec
add
jnp
sbb
movsb
xlat
bound
inc
dec
mov
jmp
and
add
shll
lods
push
out
arpl
push
mov
loope
imul
shl
xor
divl
xchg
mov
aaa
leave
push
push
fnstenv
jecxz
das
clc
dec
mov
fiadds
ret
scas
xor
push
inc
arpl
rclb
xlat
stos
mov
push
add
dec
add
fmull
cmpsb
jl
push
stos
stos
fcomip
mov
xchg
lods
dec
mov
je
shl
dec
inc
insb
in
mov
xor
sbb
pop
jmp
adc
aaa
out
shrb
adc
and
fimuls
lret
ffree
dec
jo
sub
sub
jo
daa
mov
aam
ficoms
sub
xor
arpl
lods
and
out
aas
popa
int3
ret
insb
rcrl
lret
lods
imul
lret
aas
mov
test
imul
adc
pusha
aaa
push
lds
repnz
dec
leave
jno
jg
pushf
xor
mov
cmp
insb
ja
negl
and
adc
jle
inc
cmpsb
mov
loop
fidivrl
push
push
cwtl
pop
test
dec
push
push
icebp
lods
ds
jo
adc
push
xor
lods
add
mov
adc
mov
xchg
es
add
jb
jb
mov
cmp
insl
cmp
sbb
iret
pushf
ret
bound
xor
in
into
dec
xor
xor
mov
test
dec
lds
scas
fs
add
xlat
lahf
rcrb
sbb
fwait
mov
inc
clc
mov
pop
push
test
jo
xchg
inc
call
mov
arpl
icebp
xor
mov
add
inc
jge
mov
shrb
pop
fisttpl
lret
cmp
push
sub
mov
mov
leave
imul
test
push
in
xor
xor
repnz
cltd
cmp
dec
cmpl
rolb
pop
push
loope
xchg
xlat
cs
out
pusha
push
sbb
mul
dec
xchg
dec
jae
cli
daa
push
mov
stos
and
jl
xor
dec
dec
push
push
int3
add
mov
repnz
jg
and
pop
stc
xchg
push
xchg
leave
cwtl
loopne
push
mov
aad
insl
push
cmp
adc
inc
cltd
jge
jecxz
int
insb
ret
insb
test
stos
cmp
pushf
stc
and
dec
jnp
jne
xchg
stos
icebp
xchg
iret
in
stos
push
sub
jno
outsb
mov
push
mov
xchg
cmp
enter
lahf
inc
pop
addl
dec
jle
fistl
xor
popf
inc
add
dec
out
aam
mov
and
sbb
adc
push
xor
dec
jmp
mov
ss
pop
or
je
xchg
call
aas
adc
or
push
xchg
mov
push
sub
adc
or
pusha
cmp
das
dec
arpl
xor
mov
iret
fsubrl
fildll
inc
or
mov
sub
jmp
cmpsl
jle
inc
notb
cmp
push
pop
pop
mov
pop
fildl
dec
sahf
jb
aad
cltd
xchg
roll
outsb
cmpb
popa
cmp
pop
ds
movsl
mov
lods
ss
call
sbb
es
enter
fbld
xchg
arpl
cld
mov
dec
pop
push
loope
mov
sbb
cmp
rcll
mov
fdivrl
testl
and
roll
mov
mov
and
mov
sahf
jne
shrl
imul
jne
add
cmp
sbb
addr16
xchg
pop
in
call
testl
push
jmp
les
pop
sahf
mov
mov
sbb
add
int
aad
dec
cld
jge
mov
lea
pushf
arpl
fistpl
nop
popa
arpl
icebp
inc
insl
or
dec
xchg
adc
bound
decb
sub
loope
stc
cmp
test
ja
xchg
cmc
movsl
push
dec
cmp
in
mov
int3
pop
pop
lock
lds
mov
fcomps
mov
inc
push
pop
lcall
in
daa
add
call
repnz
out
adc
xor
jecxz
sahf
inc
ret
clc
hlt
movsl
sub
les
cmp
cmpsb
xchg
mov
scas
in
iret
pusha
outsb
mov
loopne
adc
xchg
mov
sbb
shll
stos
imul
push
cmp
push
jg
leave
inc
jl
mov
imul
aad
test
xor
sarl
out
push
dec
xor
and
inc
aad
mov
dec
insb
loopne
out
shlb
jmp
frstor
jg
js
sub
sbb
jne
jp
daa
fldl
es
movsb
outsl
lods
and
adc
jb
adc
mov
pusha
cli
xchg
or
xchg
xchg
cmpsl
xchg
mov
mov
ret
and
xorb
cmp
sti
rol
out
mov
ja
dec
sbb
out
shlb
sbb
mov
push
leave
rol
dec
mov
pop
xchg
dec
mov
pop
iret
cld
lea
push
sub
les
cli
mov
insb
cmc
clc
and
icebp
or
dec
int3
imul
inc
and
les
and
sahf
pop
sub
mov
lret
enter
movsb
jl
loop
repnz
pop
sbb
xor
inc
cmp
fsts
add
cltd
mov
jmp
into
jne
jl
adc
mov
jnp
lcall
std
in
xor
jae
arpl
data16
pop
insb
adc
mov
xor
jle
or
jo
xchg
pop
fistpll
imul
fbld
mov
inc
leave
jge
stos
icebp
test
popf
nop
push
idivb
loope
test
ljmp
mov
popf
jne
sub
leave
fcmovne
xor
lahf
xor
mov
add
adc
cmpsl
fwait
cmc
out
sub
in
rcr
andb
fimull
stos
ds
xchg
fists
out
out
aas
mov
and
adcb
lret
mov
dec
mov
fisttpll
adc
fstps
dec
arpl
mov
jg
test
lahf
or
icebp
xor
fs
aaa
pop
mov
adc
repz
mov
mov
popa
test
and
nop
xchg
popa
test
scas
xchg
add
lcall
xchg
into
in
push
loope
bound
xchg
aad
mov
js
in
pop
xchg
fnsave
adc
pop
push
gs
loop
movl
aam
popl
aam
xor
mov
daa
in
xor
icebp
jl
mov
adc
test
pushf
icebp
scas
sarb
xchg
push
pop
lcall
xchg
iret
repnz
xor
sbb
jno
adc
push
push
nop
repnz
cmp
pop
rclb
shll
dec
mov
aas
out
movsl
sbb
loop
fs
inc
mov
jecxz
push
out
mov
mov
ss
mov
out
push
shl
mov
mov
mov
dec
test
ret
enter
lret
inc
rorb
mov
insb
sub
push
or
lods
sbb
mov
jge
push
xchg
xor
pop
popf
add
lret
fimull
jne
adc
stos
push
cli
push
out
insb
sbb
push
sub
rorl
ss
jge
and
dec
mov
mov
sub
repnz
jnp
popa
cli
lcall
lods
icebp
and
jmp
add
les
arpl
outsl
pop
mov
or
xchg
cmp
sti
stos
out
mov
call
das
sbb
test
cwtl
dec
jecxz
pop
scas
icebp
and
jno
pop
sub
stos
push
std
int3
cwtl
mov
pop
add
sub
xor
xor
xor
dec
scas
push
mov
mov
cmp
jne
pop
inc
loope
lock
cmc
mov
dec
addr16
cmpsb
or
xchg
test
movsl
add
popa
push
sbb
pusha
xor
push
les
and
inc
xchg
mov
jns
pop
cmp
aad
xchg
sub
sub
and
xor
mov
call
mov
icebp
aad
mov
jae
lock
inc
xor
cmp
sti
mov
test
notl
add
dec
push
test
lods
in
popf
mov
fs
adc
xor
rorb
cli
iret
jb
out
adc
xchg
xor
push
fcomp
and
sub
out
mov
arpl
pusha
xchg
sahf
sbb
mov
fs
out
mov
int
pop
cmpsl
sbb
movsl
dec
lahf
adc
mov
and
lods
xor
icebp
roll
stos
mov
lds
jle
jno
pop
test
adc
xor
loop
cmp
aad
dec
jno
leave
lea
lcall
subb
push
mov
movsb
je
in
mov
mov
and
xor
xchg
cmp
sbb
shlb
loop
mov
leave
lds
jae
lock
xchg
test
les
xor
lods
cmp
outsl
loopne
popf
test
das
scas
dec
fildll
icebp
xor
fsubl
aam
dec
pop
insb
pop
insl
cmp
inc
int
inc
add
mov
test
jo
repz
push
cmpb
cmp
fwait
loope
adc
incb
dec
test
mov
inc
sbb
cmp
shrl
jne
xor
and
jge
fsubs
aas
mov
pushf
xchg
ja
rclb
sub
adc
int
cmp
pop
cmp
sub
xchg
popa
gs
xchg
inc
mov
inc
call
xor
out
adc
iret
in
fwait
xor
shlb
les
daa
stos
adc
xchg
jecxz
adc
repnz
jmp
cld
inc
mov
cmp
sbb
lods
cmp
or
into
shrb
popf
mov
mov
shrl
xchg
sub
imul
aam
mov
dec
jmp
pop
xor
mov
jns
nop
cmp
cmp
popf
add
cmp
or
cmpsb
jecxz
mov
call
das
shlb
xchg
xchg
test
dec
sub
xchg
add
or
std
jno
xchg
sbb
int
mov
pop
jmp
lahf
fstpt
xor
adc
or
imul
popa
lret
inc
inc
mov
mov
outsl
jnp
jp
insl
pop
mov
dec
pop
mov
popf
or
test
dec
int3
xlat
or
jno
bound
mov
xchg
call
and
fwait
cltd
out
sbb
sbb
int
sbb
dec
in
fmuls
lahf
mulb
xchg
and
cmpsl
push
push
add
add
mov
clc
fs
sarb
jb
add
sub
push
sub
sti
mov
negl
clc
add
lcall
pop
cmp
sbb
lret
out
enter
jg
in
push
leave
scas
inc
negb
xor
pop
daa
dec
sbb
inc
adc
lods
and
inc
mov
or
std
mov
aaa
loope
mov
loopne
cld
mov
clc
cmp
cmp
sarl
fsubr
leave
or
and
stos
or
dec
ds
addr16
ljmp
mov
push
in
and
xchg
and
cmc
scas
popl
push
cmp
in
push
or
mov
xchg
cs
sbb
out
scas
stos
mov
and
in
add
les
mov
pop
setge
pop
outsl
mov
ljmp
xchg
pop
jno
fistpl
fidivl
int
das
mov
loopne
push
pop
inc
cmpsb
lock
pusha
mov
push
data16
aam
mov
inc
out
ds
and
pop
jge
out
xor
rolb
cmp
popa
pop
cmp
sbb
cmc
lret
cmp
sub
ljmp
std
sbb
fsubr
mov
ds
mov
mov
lcall
das
imul
fs
cwtl
jae
outsb
mov
jo
xchg
insl
push
mov
cmpsl
mov
popf
add
arpl
cmp
jmp
mov
sar
pop
and
arpl
inc
jb
aam
cli
jno
mov
dec
loop
pop
lods
push
in
sub
sub
sbb
mov
leave
jle
leave
test
mov
push
cmp
xchg
test
mov
sbb
inc
xchg
es
inc
push
fldl
sub
and
fidivl
push
insb
loope
test
mov
pushf
sbb
fildl
cwtl
push
test
pop
aad
push
outsb
jne
pop
outsb
loopne
cmp
inc
sub
hlt
stc
inc
outsb
jae
inc
push
push
add
dec
scas
cmp
adc
xlat
dec
sbb
pop
jg
and
mov
push
call
mov
lret
pop
loop
test
and
push
pop
clc
inc
outsl
fcomps
arpl
sub
mov
cmp
jge
push
add
stos
imul
or
xor
adc
leave
ljmp
fdivp
adc
add
sahf
sub
sbb
sbb
add
into
xchg
and
pop
dec
notb
xor
je
xchg
lods
inc
pop
sbb
in
orl
stos
into
xchg
mov
sahf
dec
add
jb
cmp
mov
mov
roll
add
sbb
xchg
rcll
sbb
add
pop
movsl
fcmovne
xor
mov
mov
call
iret
mov
arpl
mov
mov
aad
xchg
aam
adc
xchg
pop
adc
dec
nop
jae
xor
cmp
dec
out
loope
divl
ja
jp
inc
mov
imul
mov
data16
dec
sbb
lods
sbb
mov
fimull
or
popf
aam
jnp
cmp
ss
mov
test
push
test
inc
loop
mov
pop
fucom
add
sub
test
mov
xor
adc
mov
scas
adc
inc
imul
pop
scas
shl
icebp
pop
push
movsb
dec
jbe
or
mov
xchg
popf
test
add
jns
mov
into
xchg
dec
nop
cmpb
repz
shlb
jle
cmpsb
aas
popa
sbb
jecxz
cmp
rcrb
stos
xchg
cltd
scas
fwait
daa
call
les
push
sub
iret
lret
jg
imul
push
adc
inc
ret
mov
push
cmp
mov
cld
sbb
mov
outsl
pop
ja
ds
cltd
pop
in
pop
in
loope
in
xor
out
leave
leave
push
cmp
mov
test
inc
push
mov
ss
fstps
aaa
cwtl
push
mov
inc
and
and
add
in
sub
movsl
in
fnstsw
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
adc
int
stos
add
and
and
jmp
and
test
call
jbe
imul
les
test
mov
jle
pushl
mov
adc
and
mov
testb
pop
pushl
movzbl
push
je
mov
push
call
push
push
pop
lds
jnp
in
push
dec
inc
inc
dec
outsl
and
lods
das
dec
push
sub
sti
add
jne
push
inc
cmp
mov
pop
ja
pop
jle
sbb
loope
jbe
xchg
pop
pop
push
pop
pop
pop
leave
ret
xor
push
cmp
push
mov
add
or
add
fs
jo
insb
in
jne
jae
in
out
lcall
repnz
mov
call
pushl
mov
cmp
je
rcrb
inc
push
push
fdivl
dec
mov
rol
les
lds
in
mov
enter
imul
jb
xor
add
outsb
into
arpl
xor
rcl
pop
shlb
shll
mov
pop
sub
ret
pop
mov
js
movsb
imul
imul
imul
cmpsb
imul
mov
mov
gs
test
push
lock
jmp
lea
push
add
push
call
fwait
sti
aas
sub
clc
mov
pop
mov
push
mov
push
add
mov
popa
jnp
cmpsl
cmp
xor
adc
std
aaa
jle
xor
or
add
cmp
out
adc
repz
add
lcall
dec
sbb
in
xchg
lret
lea
push
adc
out
jl
clc
mov
movl
mov
push
mov
in
in
out
fucomip
cmpsb
pop
cs
lock
icebp
xor
repz
imul
push
loope
mov
cli
jecxz
pmulhuw
out
sbb
outsl
ljmp
je
lea
push
and
test
loope
cmp
sbb
push
or
cs
outsb
filds
jne
push
push
sub
mov
pop
mov
pop
roll
mov
lea
sub
jo
mov
mov
push
mov
jo
aaa
ret
inc
js
inc
mov
dec
xchg
or
test
mov
sub
sub
xor
jp
sahf
fldcw
cmp
or
pop
and
push
push
fstp
out
and
or
test
mov
je
mov
in
fistpll
jmp
push
mov
into
pop
push
das
sbb
lock
jns
aam
lret
xlat
xor
shll
fcmovnu
jae
dec
rcr
shrb
loope
jo
add
sub
fs
jb
jae
adc
shrb
jbe
sub
shrb
popa
js
jns
leave
rcrb
jl
jmp
xor
jg
or
fwait
in
addb
addb
mov
dec
xchg
imul
push
mov
adc
cs
lcall
popa
xchg
jbe
lcall
xchg
xchg
scas
jmp
cmpsb
cwtl
cltd
pop
lcall
inc
xchg
fistpl
lahf
orb
jl
out
add
inc
addr16
fdivl
enter
jae
jae
pop
xlat
insb
sub
ror
or
in
or
jbe
shll
shlb
inc
xchg
mov
int
dec
xlat
movsb
inc
dec
imul
xor
push
mov
je
sahf
loopne
push
divb
shlb
lahf
testb
push
adc
das
shlb
movsb
or
movsb
add
arpl
mov
imul
xor
adc
add
pop
xor
repz
pop
addr16
gs
negl
das
pusha
push
mov
and
fs
mov
arpl
add
cmp
or
das
arpl
jbe
out
or
test
cmp
dec
sbb
arpl
mov
and
pop
pop
jbe
repnz
std
popa
pop
loope
mov
sbb
cmp
jo
dec
out
jmp
jl
imul
popa
addl
mov
mov
repz
imul
outsl
sub
jg
push
or
jl
cmp
mov
fists
push
lcall
cmp
jge
into
out
push
inc
pop
push
pop
pop
pop
fcoml
jno
pop
addr16
xchg
jecxz
pop
mov
adcb
dec
shll
mov
pushf
pushf
aam
mov
jl
in
cmp
popf
add
dec
jp
xor
cmp
xor
ret
adc
les
pop
adc
xor
rcrb
int
pusha
adcl
dec
lea
arpl
cmp
jmp
movsl
jge
or
sub
movb
lret
pop
cmpl
inc
imull
jg
lea
sbb
jne
push
add
mov
dec
cmpsb
mov
imull
clc
push
push
cmpsb
imul
pop
cmp
andl
push
aaa
jle
pop
cmpb
or
test
or
xchg
cmpsb
imul
dec
mov
adc
adc
and
mov
add
pop
jb
sub
repnz
or
mov
daa
xorb
sub
or
push
add
xchg
cmp
xor
xchg
rcrb
repz
mov
subb
jbe
aam
aad
xlat
movb
xchg
lret
fadds
adc
mov
lea
dec
add
xchg
add
loopne
lea
and
adc
xchg
or
ret
insl
in
cmp
push
imul
imul
xchg
xchg
lods
xor
insl
outsb
outsl
in
and
jo
cmp
mov
and
loop
xchg
sbb
stc
pushf
pushf
in
test
or
pop
rol
les
enter
mov
xlat
leave
test
stc
test
jmp
adc
add
sarl
lock
std
mov
fs
jl
pushl
or
out
add
adc
adc
jmp
xchg
pop
pop
push
jno
mov
pop
pusha
popa
and
bound
arpl
and
gs
in
cmpsb
mov
jae
fdivl
cs
out
sub
add
ljmp
dec
lock
xchg
loopne
xchg
dec
insb
mov
test
add
leave
add
and
cld
insb
xchg
push
bnd
test
cs
mov
add
stc
mov
mov
mov
sub
jg
cli
aaa
mov
push
mov
lea
xor
push
loop
xchg
fcoml
loopne
push
loopne
je
adc
lea
sub
mov
call
roll
jmp
mov
aas
ret
mov
mov
fs
aam
mov
addr16
push
outsb
addr16
pop
add
or
je
jp
pop
xchg
gs
pusha
jne
shlb
mov
xchg
dec
sbb
jno
scas
adc
adc
xlat
loopne
dec
dec
push
and
daa
mov
pop
stc
jne
push
adc
iret
ret
icebp
adc
push
loope
fisttpl
mov
push
inc
jb
stos
lods
mov
jbe
or
xor
mov
mov
cs
lcall
mov
ss
xlat
insb
mov
ret
fs
test
push
cmp
jle
adc
enter
push
push
or
scas
aam
popf
fwait
insl
lods
pop
ja
mov
pop
xor
shrl
in
out
sub
pop
shr
ljmp
sub
pop
xlat
out
add
jbe
arpl
je
and
sti
xchg
notb
jb
cmp
jmp
jo
in
mov
xchg
inc
xchg
lret
xchg
jne
mov
jo
cwtl
sbb
mov
pop
popf
js
sahf
lahf
mov
mov
mov
mov
pop
int3
outsl
dec
mov
dec
jns
adc
or
icebp
add
mov
pop
pushf
adc
push
sub
cs
push
sbb
dec
or
lret
call
adc
orl
jl
jbe
pop
fcoms
incl
sbb
in
cmp
les
jmp
rcrb
mov
adc
pop
out
sbb
push
mov
shll
add
sbb
dec
xchg
sub
ds
cs
push
adc
dec
imul
std
stos
add
lock
loop
cltd
push
pop
inc
sub
test
lds
sbb
lcall
arpl
in
imul
data16
imul
imul
imul
nop
rcrb
jbe
add
in
leave
hlt
adc
ficoml
sub
lea
cmp
adc
clc
aam
aaa
daa
addb
push
repz
sbb
sbb
inc
pop
dec
sub
andl
mov
sub
mov
je
in
ret
test
aam
add
inc
jnp
in
xor
cmp
or
fadds
ljmp
push
inc
cmp
outsb
pop
sbbl
and
jmp
jo
mov
pop
enter
imul
jbe
mov
add
cmp
and
push
andl
add
fs
cmpl
les
in
add
sub
add
in
adc
add
or
testl
mov
nop
push
mov
cld
add
mov
inc
jmp
add
cmp
call
pop
ret
jmp
aam
dec
add
cmpsl
mov
mov
daa
push
inc
pop
push
jae
push
mov
add
bnd
mov
hlt
subl
repnz
mov
pushf
in
aad
cmp
push
adc
push
push
pop
imul
in
dec
push
cmp
cmovl
mov
push
push
gs
popf
mov
inc
enter
xor
jbe
cmpb
push
test
push
cmp
sbb
cmp
adc
mov
shl
mov
pop
test
mov
push
mov
push
adc
test
lahf
add
in
lods
adc
adc
xor
sbb
std
mov
sahf
leave
mov
push
inc
in
add
imul
sbb
jae
fcompl
adc
je
imul
outsl
int3
outsb
int
into
iret
gs
scas
fldcw
rcl
pop
shrb
arpl
and
sbb
and
les
pop
push
add
jns
sti
and
add
pop
xor
sbb
mov
sbb
pop
sar
add
fcompl
ret
test
gs
pusha
xchg
gs
gs
clc
stc
cli
sti
xor
rcll
inc
inc
gs
jmp
leave
push
js
add
pop
in
cmpsb
jmp
scas
in
out
out
call
imul
in
dec
inc
out
add
inc
into
arpl
push
adc
rcrl
push
lret
add
sbb
and
std
dec
stc
pusha
xor
mov
push
cmp
dec
popa
pop
enter
mov
negl
idivb
ret
pusha
and
mov
mov
insb
jns
sbb
arpl
mov
jmp
cvtps2pd
mov
mov
inc
mov
adc
int
fimuls
popf
rorb
ret
icebp
adc
xchg
inc
mov
cmp
cltd
into
cs
addb
xchg
mov
sub
add
popa
imul
jmp
ljmp
addr16
loopne
pop
je
popa
mov
cmpsl
shrb
and
out
mov
add
sbb
into
cmp
push
out
sbb
cmp
or
xor
push
movsb
and
cli
inc
cmp
imulb
jns
xor
cli
cld
imul
data16
cld
xor
xchg
cmp
std
pusha
popa
in
inc
dec
pusha
incb
xchg
xchg
mov
insb
cld
xchg
dec
push
jbe
cwtl
insb
cld
cwtl
lcall
cmp
pop
ret
inc
adc
push
sbb
and
lea
mov
and
cmp
and
sub
leave
xor
adc
cltd
sub
cmp
icebp
daa
push
push
push
popa
in
sbb
daa
mov
push
sbb
xor
inc
fadds
jnp
pop
mov
xor
pop
mov
sar
rorl
in
pop
mov
mov
mov
nop
mov
mov
xchg
pop
test
xor
stos
aas
repz
imul
pop
mov
imul
cmpsb
imul
imul
lcall
sbb
or
push
or
or
xlat
inc
xor
sub
rorl
aam
subl
sahf
dec
shll
cmp
dec
shll
cmp
dec
shll
xor
cmpsb
imul
xor
cmp
stos
cmpsb
imul
pop
pop
xor
cmp
dec
es
mov
lcall
xchg
cmp
mov
jo
push
enter
imul
xor
mov
ret
cmpsl
fdivl
shlb
sbb
aad
add
rorb
add
mov
and
mov
subb
push
andb
idivb
cmp
cmp
daa
fwait
nop
xchg
or
clc
dec
pop
xor
insl
or
sub
and
cmp
enter
sbb
push
xchg
dec
fsubs
cld
lds
test
es
and
dec
sbb
rcr
call
cmp
pop
in
sar
test
repz
movzwl
pop
cwtl
sti
addr16
mov
addb
add
lea
dec
and
sbb
pop
push
enter
leave
enter
jmp
jb
loope
fidivs
mov
push
pop
inc
mov
jl
push
in
and
sahf
daa
inc
adc
lcall
repnz
and
mov
movsb
mov
sub
fdivrs
mov
test
lcall
aaa
cmp
je
shll
jb
xlat
push
sysenter
dec
fcomp
fidivl
stos
sub
xchg
sub
ficompl
and
mov
je
das
jb
xchg
in
mov
xor
loopne
mov
dec
shll
mov
mov
fs
mov
pop
mov
mov
mov
rol
stos
push
adc
in
adc
mov
adc
mov
loopne
mov
push
or
aaa
jne
out
sar
roll
push
fsubr
popa
aam
mov
cmp
cltd
jne
pusha
sub
mov
xchg
and
mov
pop
adc
inc
in
or
or
push
pusha
fs
mov
pop
dec
pop
movsl
sub
and
hlt
cmp
pusha
cmp
or
pushf
mov
rcl
test
in
popl
and
sub
add
mov
sti
mov
sti
les
dec
and
popa
mull
add
adc
push
fnstenv
push
sbb
lcall
fidivrs
dec
out
pop
push
mov
sub
add
sbb
pop
push
lock
cmp
push
sbb
adc
or
lea
mov
sub
mov
inc
jne
push
sub
loope
shl
add
and
push
mov
loopne
js
cmp
sahf
xor
inc
sbb
push
pop
mov
out
jl
xchg
pop
mov
xchg
pop
sub
outsb
mov
xor
mov
test
adcl
sbb
or
mov
jnp
sbb
and
cmp
push
push
jecxz
insl
add
push
ja
test
ljmp
push
jb
gs
lcall
imul
ds
outsb
cs
and
mov
pop
insb
outsl
and
push
xchg
gs
jb
gs
dec
rclb
test
dec
push
mov
lret
mov
popa
imul
inc
jo
insl
xchg
gs
xchg
jae
popa
imul
sub
scas
scas
cmp
xor
xor
pop
shll
lcall
inc
test
inc
fnstsw
fwait
loope
or
rcll
out
imul
dec
push
dec
addb
movsl
pop
mov
popa
inc
je
pop
mov
push
inc
outsl
dec
xchg
xchg
inc
inc
jmpw
sub
dec
push
jo
cmp
xchg
xor
in
dec
dec
jmp
dec
push
jae
out
in
fs
push
popa
push
test
and
fs
push
jb
lret
inc
outsl
andb
sbb
or
jae
xchg
in
stc
sbb
movb
inc
ja
xchg
mov
js
jns
jp
insb
fidivl
mov
xchg
and
cmp
xchg
fstl
in
xchg
xor
mov
xchg
xchg
js
cwtl
cltd
xchg
sbb
mov
xor
mov
cmp
jb
fs
sub
jl
fnstcw
ja
decb
inc
lock
jb
cmp
mov
pop
outsb
fwait
in
addl
xchg
mov
sarb
mov
rcrb
ret
addl
pop
aas
cwtl
mov
mov
add
or
mov
adc
sub
mov
push
cmp
shrb
sbb
push
mov
insb
pop
repz
hlt
adc
pop
ss
cmp
lods
sub
lret
sbbl
cltd
nop
in
push
jne
jmp
dec
lods
aaa
adc
fcoml
adc
fdivs
repz
in
leave
add
or
in
lea
int3
cmp
subl
cld
es
insb
shlb
adc
inc
adc
push
sti
movsl
loopne
adc
xchg
insl
or
jne
shrl
cmp
pop
insl
sub
std
les
adc
rorb
and
inc
loopne
stc
fidivs
mov
inc
imul
hlt
jno
push
mov
sbb
pop
jb
jb
cli
push
mov
nop
cli
je
mov
jnp
dec
inc
pushl
test
or
jnp
sti
xor
js
mov
or
lea
or
mov
lods
sbb
add
push
shlb
rorl
bnd
cmpl
adc
imul
and
add
faddp
and
sbb
loopne
mov
push
iret
adc
sti
into
std
push
cmp
je
cmp
jb
dec
dec
cmpw
jne
pop
adc
dec
loop
dec
or
add
jne
lret
push
mov
call
fnstcw
incl
lock
sub
insl
adc
enter
cmp
andb
sub
jae
es
pop
adc
rcrb
pop
or
cmp
daa
mov
xor
cltd
xchg
cwtl
movsb
adc
movsl
sbb
outsb
sub
jo
jae
shll
cmpsb
test
data16
mov
xchg
outsl
fs
xchg
in
addr16
jne
imul
inc
lcall
or
xchg
mov
rcl
movsb
fsubs
dec
pop
adc
mov
jl
lock
ret
andb
dec
subb
adcl
pusha
xchg
pusha
cmpsb
dec
or
test
push
mov
xor
in
inc
fmuls
adc
inc
mov
mov
imul
stc
dec
clc
push
mov
mov
cmp
leave
jle
dec
xor
push
jnp
pop
mov
jmp
push
inc
test
inc
xor
sub
sub
stc
add
mov
mov
sbb
stc
or
add
cld
das
daa
in
sub
icebp
sti
lock
cmc
cld
flds
inc
ds
cld
ss
rclb
sbb
xchg
cmc
mov
sar
push
push
test
test
lahf
mov
pop
loopne
xor
push
and
bound
inc
orb
ficoms
and
mov
mov
das
popa
and
inc
add
adc
add
scas
mov
sub
fs
je
add
inc
lcall
mov
push
gs
jae
in
ret
lods
repz
hlt
js
pop
or
in
iret
xchg
and
mov
ret
add
adc
dec
outsl
enter
adc
xchg
push
gs
add
dec
lret
add
xchg
push
push
mov
lods
or
push
jnp
adc
adc
lods
mov
adc
mov
mov
sbb
lock
add
sbbb
xor
mov
das
test
repz
test
mov
je
addr16
pop
mov
sbb
or
dec
inc
jp
icebp
add
insb
dec
push
xor
push
jmp
push
dec
dec
dec
leave
dec
mov
cwtl
cmpsb
inc
push
xor
lret
std
ljmp
fs
dec
outsb
gs
jb
flds
je
mov
jbe
jb
mov
mov
mov
test
mov
pop
ss
jo
dec
jo
shll
mov
lahf
xchg
insl
nop
cmpsb
gs
inc
loopne
insb
fwait
cmpsb
imul
pop
rcrl
popf
sahf
pop
shll
mov
push
cmpsb
inc
inc
cld
or
xchg
in
gs
and
jp
jno
adc
fwait
sub
mov
dec
outsb
je
mulps
mov
adc
inc
lds
shrl
scas
movl
lret
mov
cs
enter
and
mov
in
mov
jge
xor
lods
inc
dec
dec
cmp
aas
leave
sub
sub
enter
sbb
mov
mov
or
mov
lret
mov
rcl
fcomp
loopne
bound
call
dec
es
lock
jl
ret
adcl
lock
pusha
sub
adc
jo
insb
lea
je
dec
mov
clc
pop
mov
pop
sub
inc
push
leave
cmp
mov
push
jecxz
adc
push
sahf
jge
adc
inc
bound
dec
hlt
mov
ret
out
inc
enter
add
push
adc
xor
jnp
mov
call
idiv
inc
jle
in
testl
or
and
dec
fistps
xor
sub
adc
inc
cmp
jl
add
mov
jle
xor
shl
add
dec
hlt
push
push
push
ss
cmp
cmc
sbb
mov
xchg
ret
adc
xchg
out
rclb
or
or
popf
push
test
hlt
push
cmpl
cli
add
or
cmpsb
arpl
and
push
jae
and
and
xchg
push
or
cmp
add
rcr
cmp
lock
fidivrs
movzbl
cwtl
fldt
xchg
mov
sbb
test
loopne
mov
movsb
xchg
xchg
or
scas
xchg
enter
cmpsb
inc
inc
mov
push
push
push
dec
insl
enter
scas
cmp
es
push
lods
push
mov
call
pop
pop
xor
jno
outsl
cmpb
xor
xor
inc
jb
insl
flds
shll
dec
outsl
imul
gs
mov
push
fs
push
imul
insb
push
xchg
gs
popa
jae
out
lret
mov
lret
xor
xor
pop
lcall
ljmp
dec
js
shll
lcall
xlat
xor
fmuls
xor
fcmovnu
fstp
xor
xlat
insb
sbb
rol
data16
outsl
jb
shll
outsb
fs
shll
pop
xor
xor
add
pop
lahf
mov
and
and
adc
in
push
sub
inc
gs
outsl
fs
xchg
jb
jb
dec
shll
leave
lret
sbb
xor
into
iret
fs
sub
mov
leave
addb
sbb
cltd
fs
mov
mov
push
aas
pop
push
mov
sbb
lret
xchg
sub
cmp
rorb
sbb
mov
mov
jmp
clc
daa
jns
aas
pusha
cmp
jne
out
add
mov
sub
decl
jne
pusha
push
jg
scas
rcll
add
push
jo
xor
test
int3
cmpsl
ljmp
fucom
adc
sub
dec
inc
movsl
and
add
add
addb
cltd
nop
add
or
sbb
sbb
sbb
push
dec
repnz
cld
xorb
push
jns
push
mov
cmp
mov
js
je
test
mov
xor
arpl
popa
insb
sbb
imul
shll
cs
lcall
bound
cltd
cmpsb
jne
shlb
dec
push
shll
fwait
insb
test
gs
mov
fisttpl
add
dec
mov
filds
lods
mov
iret
sbb
push
inc
add
add
enter
inc
mov
aad
add
bound
in
push
in
add
mov
sbb
cmpl
adc
adc
mov
lods
sbb
sub
lods
jmp
push
push
aam
int3
hlt
jle
sbb
add
pop
pop
add
cmpsb
imul
jmp
xchg
inc
clc
add
mov
jge
mov
leave
or
repnz
cld
nop
test
adcl
add
cmpsl
push
push
pop
aam
clc
mov
and
pop
cmp
xor
mov
shll
lds
paddq
mov
cmp
fsts
xor
imul
rorb
mov
push
push
cmp
lds
js
xor
and
div
push
jmp
sarb
lock
sbb
cmp
sahf
or
dec
pop
aad
aam
push
lods
ljmp
cltd
out
and
cld
cmp
cmp
add
or
scas
pop
mov
call
divl
insl
xor
add
out
mov
jge
fisttpll
adc
mov
lock
cmp
push
sti
xchg
pop
push
add
testb
xor
in
add
jl
push
notb
pop
dec
lcall
fs
mov
mov
and
mov
lock
mov
jp
rep
cmp
mov
add
ret
jno
adc
pop
xor
jl
push
fdivrl
mov
mov
incl
xor
or
push
mov
pop
les
into
xchg
sbb
out
mov
dec
mov
cmp
je
data16
and
pop
push
add
lock
pop
lock
xchg
jo
mov
rcrb
inc
stos
clc
mov
dec
ds
clc
sub
cli
xchg
or
xchg
ret
mov
jge
push
add
pop
test
mov
add
idiv
xchg
sub
jge
icebp
movl
inc
mov
xor
xor
rorb
mov
push
sbb
xlat
loopne
test
sbb
int
loope
pusha
cmp
and
ret
mov
xor
dec
dec
push
data16
std
pushl
pushl
pop
sbb
je
mov
xor
cmp
andl
mov
sbb
push
pop
mov
mov
lock
test
cmpl
fbstp
add
sarb
mov
jp
xor
add
cmp
sbb
jle
cli
add
jae
mov
or
jg
loope
pop
cmp
push
loopne
aaa
mov
mov
push
popa
or
mov
mov
aas
jb
out
xchg
or
mov
pusha
out
popf
mov
psrad
stc
sbbb
add
sbb
insl
add
je
mov
pop
mov
mov
jno
mov
push
aaa
sub
push
and
push
sbb
stc
in
jl
rorl
mov
cmp
xor
stos
add
xchg
pushf
inc
or
pop
ficoms
and
in
lea
cmp
cmp
lret
mov
sbb
sbb
and
mov
lret
and
and
and
out
or
add
orl
scas
imul
adc
xchg
lahf
and
jmp
add
or
or
lahf
test
insb
xchg
or
push
xchg
push
lcall
push
arpl
dec
in
jno
lds
or
xor
and
bound
adc
mov
push
xorb
dec
xchg
push
dec
xchg
xchg
test
xchg
and
xor
je
dec
je
add
pushf
cmp
aas
decl
jmp
adc
in
iret
mov
and
repz
call
push
sahf
sbb
insb
fwait
add
xchg
add
push
repz
cs
loopne
or
xchg
push
jmp
loopne
xor
inc
xchg
adc
roll
andps
xor
pop
pop
ja
jmp
lods
push
jno
arpl
fs
cmp
punpckhwd
mov
ret
add
and
aad
aas
gs
xor
cmpsb
test
fsubrl
dec
mov
mov
push
imul
lcall
inc
xchg
sub
lret
push
das
dec
adc
mov
loop
or
mov
or
popf
xor
in
and
lret
jae
pop
add
rcrb
dec
rorb
std
mov
push
or
cmp
int3
dec
shll
rcl
xor
shll
aam
xlat
adc
leave
rcr
int3
enter
mov
push
or
cmpsb
imul
ret
lods
andb
fcompl
or
or
sub
adc
shrb
pusha
push
xchg
fdivrs
movb
dec
sub
or
cmp
scas
insb
pop
addr16
jmp
add
sbb
xchg
push
push
inc
sbb
pop
push
inc
fmull
xchg
inc
repnz
jbe
fdiv
add
sub
mov
dec
jae
jb
enter
xor
fs
xchg
gs
push
mov
popa
insb
insb
dec
imul
push
inc
js
fisubrl
rorb
or
sbbl
imul
dec
mov
loop
jecxz
test
outsb
shll
dec
outsl
pop
shll
inc
movsb
js
sub
in
jl
lret
inc
sti
push
stos
inc
stos
add
aas
cmpsb
popa
nop
cmpsb
outsb
push
cmpsb
imul
movsb
imul
and
icebp
repnz
lds
or
mov
jb
aad
gs
xor
cs
insb
insb
pusha
popa
or
push
sub
test
and
fadds
and
je
outsl
fs
cmp
gs
insb
dec
cmp
gs
popa
insl
inc
mov
mov
pop
lea
pop
icebp
mov
shrl
xchg
aam
mov
or
cmp
andl
pop
int3
insb
gs
cmp
sbb
or
jb
sbb
or
aam
sbb
inc
fisubl
add
cmp
aaa
mov
mov
push
push
cmp
mov
ret
jns
call
mov
dec
shll
jo
dec
shll
jecxz
xchg
mov
adc
add
addr16
dec
add
push
bound
inc
je
lea
lcall
inc
cmpsb
imul
imul
loope
dec
or
test
cmp
in
mov
cmp
xor
shll
insw
outsl
outsb
xor
js
sub
mov
test
inc
push
rcrb
add
pop
jne
add
xor
xor
sub
xor
popa
push
cs
repnz
out
loope
mov
inc
ljmp
inc
xchg
sub
cmp
xchg
gs
je
push
push
cmp
pop
lcall
into
js
add
mov
add
mov
data16
mov
push
imul
mov
mov
mov
xchg
out
rorl
imul
int3
insb
imul
shl
in
insb
mov
push
mov
mov
imul
int3
inc
int
xchg
out
in
into
pop
iret
push
dec
shrb
dec
xchg
out
fs
pop
jne
aam
jmpw
aad
inc
imul
fcomp
dec
imul
lea
or
test
or
xor
decb
fistpll
inc
js
adc
mov
loope
inc
dec
test
sub
inc
sbb
sub
cmp
jmp
cmp
cmp
cwtl
pop
inc
test
imul
out
out
lock
gs
imul
imul
in
and
ret
stos
add
push
out
adc
push
popa
or
ss
aaa
jb
cld
add
fsubrp
add
cmp
push
mov
pusha
add
gs
popa
je
xchg
gs
xchg
push
outsl
outsl
insb
push
pop
insb
jo
push
add
and
hlt
sub
pusha
inc
xor
mov
push
jb
arpl
shlb
gs
xor
or
xor
inc
imul
sub
insb
push
outsl
arpl
mov
lret
gs
xor
dec
rclb
js
int3
mov
and
push
imul
imul
dec
adc
adc
mov
dec
pop
or
add
clc
jmp
fsubl
dec
popf
jb
mov
mov
add
mov
lock
adc
cmp
inc
stos
and
fstpt
sub
or
mov
push
cmp
inc
pop
adc
cmp
sub
dec
mov
in
jo
sti
jb
xchg
sub
div
inc
push
imul
mov
sbb
shll
gs
xorl
cmpsb
imul
mov
inc
popa
push
mov
push
mov
dec
or
xchg
push
or
push
mov
mov
pop
xor
push
mov
andb
adc
or
sbb
xchg
xor
mov
push
sub
inc
inc
hlt
jbe
call
in
pop
neg
sbb
push
and
adc
add
fcompl
or
push
or
sbb
lea
arpl
data16
add
mov
incl
add
jne
ret
cmpw
ljmp
cmp
lret
push
inc
lret
jne
mov
or
xchg
push
fcoms
stos
fistpll
je
lret
iret
je
inc
or
fistpll
cmp
je
adc
pop
cmp
ja
xor
add
or
jae
xor
push
or
fistl
arpl
out
cmp
jb
sub
je
addl
or
inc
lret
fadds
adc
jnp
int
add
outsb
add
xor
adc
jo
cld
or
inc
es
lods
adc
mov
mov
fcoml
or
enter
fstpt
cmp
stos
mov
mov
cmp
cmp
sub
inc
jb
xor
adc
out
mov
push
clc
lea
cmp
add
jg
subl
adc
add
cmp
jg
mov
cmp
xor
jb
jno
outsl
mov
xor
arpl
movsl
jmp
ret
dec
mov
lcall
je
add
cmpsb
jb
je
sub
rclb
icebp
jge
outsb
rorb
xchg
jb
gs
leave
mov
cmovg
and
into
or
in
mov
jne
je
mov
mov
dec
add
fs
outsb
data16
lret
mov
insb
xor
gs
insb
adc
sub
push
hlt
rorl
popa
inc
dec
insb
test
push
and
dec
outsb
je
mov
lret
gs
gs
or
mov
insb
outsl
jae
gs
mov
dec
popa
outsb
fs
push
call
or
lret
movsb
aam
ret
pop
lods
test
loopne
sbb
mov
or
cmp
dec
lret
ja
mov
stos
shrl
xor
pusha
xchg
fs
fisttps
or
jb
inc
shll
gs
push
jo
arpl
xchg
dec
xchg
test
outsb
jb
lcall
jo
imul
bound
push
sbb
sbb
and
mov
add
les
adc
sbb
lret
add
xchg
jle
jo
mov
scas
and
fwait
outsl
and
sub
ss
or
add
or
xor
push
pop
jmp
dec
mov
ret
or
inc
nop
mov
sbb
test
aad
ss
mov
loop
loop
cmpsl
popa
sbb
sub
movsl
sbb
in
cmp
aaa
push
adcb
xchg
cld
repz
push
sub
leave
hlt
add
add
push
add
lods
dec
dec
sbb
clc
cli
pop
stos
push
repz
or
or
adc
in
enter
adc
test
ss
mov
rclb
or
push
pop
ljmp
add
jmp
or
mov
or
add
dec
jmp
xor
or
mov
je
mov
mov
test
je
mov
inc
inc
jmp
andb
test
imul
push
test
push
je
test
jg
ja
inc
mov
enter
rolb
fnstcw
inc
jp
cmp
jo
adc
inc
push
jmp
add
add
sbb
shr
into
xor
cwtl
sub
dec
mov
mov
dec
mov
push
popf
clc
mov
cmp
dec
andl
aad
pop
pop
jbe
sti
sub
mov
cmp
mov
fadds
cmp
pop
jb
repnz
mov
push
jmp
icebp
dec
test
mov
ljmp
push
dec
loope
cmpb
add
clc
push
mov
mov
inc
inc
ja
cmp
pop
jecxz
adc
fildll
push
cmp
jle
mov
sbb
or
mov
jne
mov
sub
or
je
mov
cmp
add
or
inc
jmp
mov
add
mov
inc
mov
add
stos
lea
lea
ljmp
cltd
pop
cwtl
mov
testb
mov
mov
lds
js
clc
dec
adc
int3
mov
push
xchg
lcall
inc
push
roll
mov
mov
jl
cmc
mull
lea
jae
mov
push
adc
sarl
ret
mov
inc
jb
sbb
test
jg
fiaddl
iret
cmp
jbe
mov
jp
clc
pop
jle
cld
mov
add
cmp
pop
test
jo
rcr
mov
sbb
jmp
mov
cmpsb
lea
movzwl
loop
fildl
inc
sbb
orl
fsubrs
fdivs
cld
jae
cmp
jb
fbld
push
repz
add
fidivrs
cmp
arpl
movsl
hlt
pop
inc
jno
cmp
insl
sub
pop
loope
or
aaa
and
andb
fimuls
ds
push
sbb
mov
rcrb
or
neg
jne
adc
mov
xor
mov
inc
dec
ja
jge
ds
or
or
cwtl
popf
movsl
mov
or
sbb
mov
push
jno
adc
mov
lret
ss
sarl
cmp
mov
add
sub
sbb
cmp
mov
mov
andps
pop
popa
jno
incl
jne
adc
xlat
push
push
leave
jp
adc
ljmp
shlb
inc
je
push
movsb
fsubr
in
add
push
lods
pop
pop
xchg
les
ss
dec
add
or
jae
push
sbb
dec
cmc
ds
imul
ss
lods
js
imul
xchg
fcom
and
idivb
add
push
clc
push
lret
in
inc
pop
pop
or
scas
mov
or
mov
mov
fbstp
mov
movsl
cwtl
mov
into
mov
adc
je
outsl
negb
les
sbb
ds
mov
xchg
push
xchg
or
aas
bound
arpl
inc
dec
xchg
cmp
pusha
or
cmpsb
imul
cmpsb
imul
dec
xchg
mov
or
mov
stc
and
and
sbb
mov
je
clc
mov
add
sbb
or
cmp
add
jl
pop
std
adc
push
add
add
mov
inc
rclb
sbb
stos
dec
in
clc
push
movsl
cltd
negl
rorl
push
pop
or
into
push
insl
add
roll
call
jl
in
mov
rcrb
or
icebp
sti
pop
sbb
fstpt
ficoms
add
add
jl
adc
fistl
icebp
cli
cld
cmp
mov
inc
mov
adc
push
xchg
sahf
mov
mov
jle
je
jno
sbb
sub
mov
pop
sbb
adc
imul
dec
sbb
popa
xchg
pop
jge
rcr
mov
dec
add
pop
xor
out
jle
adc
roll
ret
push
sti
nop
nop
pop
add
jnp
cmpsl
cld
mov
and
xchg
inc
jl
dec
or
fisttps
cmp
loopne
mov
mov
xchg
test
stos
adc
jne
pop
xchg
gs
push
jb
jbe
inc
pop
xchg
gs
gs
adc
int
mov
pop
dec
shll
jae
data16
or
jae
mov
lcall
popa
xor
push
cmpsl
test
in
adc
icebp
mov
gs
call
test
rolb
add
or
jne
cmp
pop
sbbl
push
or
clc
adc
movsl
mov
movsl
enter
shll
outsb
fs
or
loopne
jae
daa
daa
lret
leave
imul
int
sub
test
jns
insb
lret
in
js
jecxz
push
or
mov
xchg
inc
xchg
add
mov
pop
lods
pushf
sub
aaa
cs
mov
popa
push
jge
arpl
or
push
sti
cmp
pop
repnz
or
or
outsb
sbb
mov
xor
out
iret
pop
sbb
ret
cmp
add
pop
lods
and
aaa
mov
in
bndstx
push
or
jl
nop
packsswb
out
and
mov
inc
mov
or
pop
lods
inc
adc
nop
in
sti
bound
syscall
lods
loop
or
add
and
sbb
popa
inc
mov
add
xchg
or
jo
cwtl
sub
jns
imul
dec
outsl
jbe
lret
mov
gs
imul
into
iret
gs
push
int3
ljmp
xor
push
xor
leave
ret
inc
dec
inc
insb
add
inc
cmp
adc
insb
gs
xchg
outsb
mov
imul
push
push
pop
int3
lret
pop
mov
bound
dec
and
adc
call
shl
fadds
mov
gs
shrl
sbb
cmp
mov
mov
ud0
sub
sbb
xlat
dec
enter
fisubs
xchg
xchg
xchg
iret
enter
xor
fsts
int3
add
into
je
insb
mov
add
mov
add
push
test
addr16
cld
xor
inc
cmp
lea
jmp
or
lock
add
pop
rcll
ss
mov
popf
cmove
add
xchg
jne
dec
add
sqrtps
adc
xchg
data16
cltd
add
fwait
mov
bound
or
add
fcomps
add
jb
aaa
sbb
in
arpl
daa
push
and
add
or
push
add
in
mov
pop
add
xchg
xor
add
decl
repnz
xor
jb
gs
xor
cs
out
fs
insb
pop
dec
jo
outsb
push
push
xchg
push
mov
in
outsl
add
insl
gs
adc
jae
jbe
idivb
push
inc
ret
stos
aad
maskmovq
idivl
aad
lret
enter
imul
mov
cmp
enter
mov
adc
jnp
out
jnp
push
subps
and
das
pop
jge
jge
xor
push
mov
insb
and
jb
jb
sbb
or
outsb
je
mov
lahf
addr16
gs
add
xchg
aaa
fs
push
add
cmp
dec
out
xor
gs
inc
in
outsl
fs
insb
outsl
push
mov
out
jb
push
jns
fs
fbstp
shr
mov
xor
outsb
dec
push
je
or
push
jge
push
nop
push
push
adc
mov
push
int3
roll
push
gs
insl
loopne
shlb
mov
imul
push
outsl
data16
je
outsb
addr16
sbb
sbb
sar
sub
outsb
sbb
lcall
data16
sub
insl
inc
push
adc
dec
out
ds
gs
je
mov
insl
push
push
cs
jo
sub
jbe
pop
je
bound
jae
mov
outsl
xchg
mov
push
imul
jne
insb
push
jne
jns
js
push
imul
outsl
dec
outsl
mov
jns
aaa
dec
push
xchg
jp
loope
push
mov
push
outsl
scas
adc
mov
fistl
je
gs
jno
dec
pop
imul
outsb
dec
popa
outsb
fs
sbb
outsb
imul
pop
xlat
inc
or
arpl
sbb
arpl
imulb
push
adc
arpl
fiaddl
inc
push
int
imulb
or
inc
xchg
cmpsb
inc
inc
outsl
pop
js
rcrb
xor
adc
inc
cmp
addr16
xchg
and
dec
popa
mov
dec
push
ss
fadd
sub
outsl
jae
or
test
adc
jb
cmpsb
push
jns
jg
jne
mov
adc
jns
insb
out
sbb
outsb
sub
and
mov
ret
loope
sub
outsl
outsl
insb
pop
insb
jo
xor
out
ss
outsl
mov
xor
inc
rcrl
pop
sub
or
mov
adc
das
fimuls
outsl
es
dec
jb
mov
jae
xor
sub
in
gs
lcall
xor
jbe
cli
outsl
imul
sti
addr16
xor
aas
ficoml
xor
mov
jne
dec
push
imul
jge
xor
call
bound
sub
jbe
fiadds
insb
pop
xor
adc
mov
sbb
xor
push
jo
data16
data16
and
jl
inc
sub
sahf
hlt
jo
je
inc
or
sbb
js
rcrb
into
xor
sbb
ja
jae
adc
or
ss
jne
ja
pop
mov
out
adc
sbb
int3
mov
mov
pop
pop
arpl
sub
push
bound
int3
mov
lahf
dec
sub
pop
jae
fstpt
aas
xor
inc
pop
push
add
jne
adc
xor
adc
or
mov
jae
imul
bound
pop
bound
aaa
arpl
push
loope
js
lahf
cmpsb
popaw
out
data16
jb
jns
aaa
push
jo
pop
divl
jo
das
xorl
adc
inc
xor
pop
push
ss
push
push
data16
sbb
orl
fstpt
inc
adc
add
pop
pop
cs
por
xchg
addb
pushf
dec
add
sbb
outsb
jne
add
js
decl
daa
adc
push
pop
or
and
sub
or
push
sbb
or
mov
paddq
and
or
aaa
push
cmp
pop
filds
push
daa
push
jg
xor
aas
or
sbb
sub
push
push
fldt
push
push
or
or
and
adc
push
or
lret
or
or
push
push
push
pop
push
prefetchw
add
pop
insb
push
add
or
adc
neg
decb
daa
jno
cmpsb
adc
and
push
adc
or
adc
sti
outsl
addr16
sub
xor
sub
sub
sub
outsb
in
fcmovnu
push
jp
push
or
push
push
or
add
outsb
xlat
pop
push
imul
push
sbb
sbb
sub
std
out
incb
or
pop
pop
or
adc
or
or
test
adc
mov
sub
add
jae
sub
lock
cli
out
testb
add
add
gs
pop
cmp
insl
lret
das
cld
jg
xor
imul
cmp
movsb
push
pop
adc
lock
add
add
jo
adc
ja
xor
aaa
adc
dec
aas
imul
in
or
imul
add
or
mov
add
movsb
sbb
add
mov
das
pop
pop
add
add
fistpl
lret
adc
dec
adc
sub
sbb
aas
daa
jbe
lcall
mov
adc
cwtl
adc
sub
pop
and
or
mov
sbb
fs
adc
sbb
pop
dec
pop
pop
jmp
mov
adc
or
cmp
pop
add
and
fldt
scas
lock
sbb
push
cs
idiv
fs
pop
add
stc
add
add
jg
cmp
or
cmp
push
adc
lock
xchg
popa
inc
push
push
daa
inc
push
dec
adc
adc
or
inc
lock
ss
add
add
push
adc
insl
push
add
adc
mov
cwtl
push
sbb
lock
push
add
incb
jg
add
dec
shl
add
and
add
loopne
adc
or
xchg
das
jb
or
addb
or
add
jmp
or
sahf
or
adc
push
adc
pop
pop
jo
mov
push
enter
add
dec
pop
popa
push
cs
or
adcb
jb,pn
and
sti
imul
pop
ja
inc
add
es
or
cld
je
shlb
mov
pop
cwtl
fs
mov
mov
ja
jmp
dec
lcall
xor
lcall
dec
fildl
add
add
add
add
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
