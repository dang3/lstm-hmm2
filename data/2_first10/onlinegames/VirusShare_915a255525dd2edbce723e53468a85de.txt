mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
in
mov
rorl
sbb
arpl
loopne
pushl
sub
inc
ja,pn
sub
in
aaa
out
or
fcompl
or
jne
push
into
imulb
sbb
sbb
incl
les
mov
mov
mov
dec
lahf
mov
jmp
mov
ret
adc
mov
sbb
lock
pop
leave
ret
cmp
add
scas
jmp
mov
andb
out
std
fwait
in
insl
out
les
or
lds
sub
popa
enter
lret
sub
outsl
int3
int
into
push
xlat
pop
rorb
shll
shlb
shll
aam
pop
mov
inc
aad
add
cmp
pop
fdivs
fnstenv
scas
jmp
fidivl
fisttpl
push
add
pop
loop
mov
arpl
in
in
out
out
jmp
ljmp
jmp
scas
in
aaa
lock
pslld
repz
scas
jmp
hlt
cmc
sbb
add
aaa
clc
stc
dec
mov
cli
pop
sti
js
cld
je
mov
lock
xor
sub
mov
mov
ja
dec
dec
mov
in
or
jne
mov
or
add
rorb
fsubrs
pop
lods
cmp
je
jg
push
inc
add
sub
push
mov
sbb
div
loope
adc
mov
pop
push
pop
je
cs
ja
outsl
and
adc
or
or
and
cltd
or
adc
and
pop
adc
addr16
xor
or
arpl
push
addr16
mov
mov
cmp
jne
stos
or
add
fsubrl
pop
push
sbb
or
loope
jmp
cmp
push
push
push
inc
fistps
adc
pop
ret
movsbl
arpl
and
push
jb
insb
pop
pop
ret
jmp
pushl
daa
mov
or
divb
push
push
xor
mov
test
je
jecxz
decl
mov
sub
inc
inc
mov
test
mov
jne
andb
ss
jb
push
inc
push
xor
movzbl
inc
cmp
jl
clc
idivl
std
pop
jg
add
adc
inc
cmp
shll
arpl
jg
cmp
je
sub
cmp
mov
pop
mov
pop
adcb
jbe
sub
xorl
or
clc
add
sub
pop
inc
or
stos
shlb
xchg
jp
push
pop
cmp
outsb
mov
gs
std
mov
push
push
push
pop
movsl
iret
insl
pop
and
out
push
gs
testl
pop
jne
cmp
push
insl
call
inc
inc
sub
or
push
inc
sbb
xchg
dec
inc
nop
gs
lcall
mov
std
lods
jae
dec
mov
incb
mov
cltd
mov
jge
lea
push
imul
clc
cmp
cmp
jl
dec
loope
jnp
popa
pop
jbe
inc
shl
movsb
lods
std
push
push
jbe
push
inc
cld
mov
fdivs
jmp
or
add
mov
bound
dec
daa
in
mov
xor
cmp
jbe
test
adc
ret
mov
push
clc
fdivs
jl
mov
push
or
shl
nop
mov
pushf
mov
stos
insl
lea
push
jmp
popa
out
outsl
adc
adc
adc
xchg
sub
ja
dec
call
push
neg
movsl
add
add
add
push
fidivs
fisttps
loopne
mov
outsb
int3
push
add
dec
shll
add
cs
xlat
into
xor
add
dec
bound
xor
shll
dec
imul
popa
jb
inc
add
mov
sub
add
and
dec
ret
imul
lds
mov
push
enter
mov
cltd
lock
mov
push
or
dec
decl
mov
js
lods
inc
clc
mov
aaa
ss
add
jmp
testl
inc
cmp
ljmp
lock
mov
xchg
subl
shr
dec
mov
in
pusha
adc
outsl
pop
sbb
push
addr16
loope
push
pop
ja
add
jg
leave
xorb
test
inc
jp
jae
xchg
or
or
or
jne
stos
push
push
mov
inc
push
cmp
jnp
xlat
xor
daa
mov
ret
adc
divb
hlt
and
push
js
push
pop
clc
sub
jns
inc
js
iret
jmp
fdivrl
jne
negb
or
jmp
push
add
scas
push
dec
cmp
and
je
adc
or
adc
ficomps
or
jne
or
and
add
mov
cmp
or
inc
je
call
je
or
ret
sub
sti
sub
lock
xor
cmp
shl
lahf
inc
into
xchg
sub
cmp
sbb
imul
cmp
mov
fsubs
push
mov
je
dec
movb
jne
add
aaa
xor
mov
xor
or
inc
cld
xchg
imul
adc
test
add
mov
dec
mov
sub
push
rcrb
mov
nop
aam
push
outsb
test
mov
test
add
mov
lcall
and
gs
cmpsb
imul
xor
jmp
pop
push
push
push
mov
lds
xor
ret
inc
les
dec
push
mov
add
lods
lods
pop
push
inc
xlat
pop
scas
adc
and
dec
mov
mov
mov
mov
mov
rcl
jnp
add
imulb
jg
mov
mov
adc
and
cld
dec
or
loop
mov
repnz
es
test
or
nop
cmpsb
lock
ss
nop
mov
es
add
inc
dec
repnz
xor
nop
and
clc
testl
mov
outsl
loop
adc
add
or
cmp
push
mov
pop
ret
mov
movl
mov
push
push
shll
loope
add
xchg
adc
push
out
clc
cld
jmp
sbb
mov
pusha
push
lea
imul
neg
adc
jmp
mov
pop
jg
in
jmp
jns
push
outsl
xorl
xor
push
mov
clc
mov
imull
lret
fcoms
fistpl
clc
jne
clc
mov
sub
push
push
mov
daa
popf
leave
fwait
or
cmp
add
outsl
push
pop
push
into
sbb
push
inc
cmp
cmp
xor
cmp
add
xchg
mov
inc
pusha
aam
sbb
into
call
test
xchg
jmp
test
pop
jmp
in
xchg
in
pop
jmp
pxor
pop
lock
mov
jb
imul
fcomps
xchg
xor
in
jmp
ficoml
adc
lods
pop
mov
ljmp
pop
imul
mov
enter
or
cmp
sub
adc
adc
push
les
dec
push
loop
push
push
cmp
push
std
fcomps
lods
iret
or
inc
ret
adc
pusha
inc
pop
push
mov
outsl
pop
in
enter
sub
ret
test
dec
sbbb
fmuls
adc
adc
xlat
inc
sub
daa
mov
adc
cmc
aam
sub
dec
lea
addr16
rcr
pop
mulps
add
test
push
mov
adc
or
fst
push
sub
push
in
rcr
jbe
or
adc
or
ljmp
outsb
cld
jp
movsl
movsw
movsb
push
inc
pop
ljmp
test
xchg
sbb
jbe
mulb
xchg
inc
addb
xor
clc
xchg
push
adc
jp
mov
mov
and
shll
cmp
pusha
push
and
sbb
or
cld
mov
daa
dec
jb
xchg
inc
mov
lods
push
fists
data16
xlat
fdivs
add
je
mov
xor
fimuls
js
jnp
pop
pop
pop
fdivrp
idiv
cmp
jle
add
jl
popa
jle
jp
add
adc
cs
jl
pop
add
cwtl
jb
jo
imull
out
pop
in
jecxz
push
pop
lret
cli
xor
xorb
cmp
mov
xchg
stc
adc
stc
movsb
cmp
lahf
adc
sti
adc
cld
je
mov
andb
pop
adc
inc
dec
adc
push
jne
mov
test
femms
sub
shll
popa
test
data16
iret
sarb
push
lcall
out
mov
fisubrl
inc
jmp
pop
mov
xor
push
daa
jmp
nop
stc
daa
inc
test
outsb
jbe
pcmpeqw
movsb
and
fsubrl
inc
push
dec
and
add
fs
xor
mov
outsl
sbb
cwtl
sti
ljmp
lea
test
xchg
cmp
jo
inc
add
out
push
lret
pop
divb
inc
push
out
lcall
mov
shlb
icebp
inc
repnz
inc
shll
repz
cmc
scas
notb
cmpsb
imul
lret
lcall
gs
imul
or
lcall
jo
fsubrs
cmpsb
jmp
lcall
jo
inc
stos
sbb
xlat
lds
mov
cmp
cmp
push
mov
jbe
imul
jmp
jnp
cmp
inc
shrb
rorl
bound
es
aam
inc
mov
in
xor
enter
lret
or
or
aas
fiaddl
inc
cmp
pop
dec
pop
adc
mov
push
and
call
mov
adc
cmp
je
add
jne
popl
mov
call
insb
fcomps
or
xlat
pusha
or
sbb
insb
aaa
bound
xor
or
cmp
adc
sbb
push
in
clc
pop
jbe
rolb
add
icebp
int
out
inc
inc
add
adc
push
adc
xchg
fildll
inc
dec
pop
jne
and
decb
xor
dec
xchg
xchg
adc
add
push
addr16
maxps
loope
xorb
je
jmp
cmp
mov
insb
mov
mov
shr
pop
adc
imul
xor
xor
pop
std
in
mov
jmp
insl
adc
pop
mov
pop
pop
adc
ljmp
add
popf
jl
xchg
jp
xor
adc
arpl
push
gs
push
mov
sub
int
push
imul
cld
andb
mov
push
rolb
jle
lock
sub
jne
loope
shrb
rorl
cmp
jae
call
xor
or
push
lock
pop
movsb
add
js
jmp
and
and
add
or
push
aad
testl
or
pop
bt
cli
mov
nop
pushf
mov
inc
pop
mov
pushf
movl
mov
mov
mov
out
xor
xor
std
dec
call
lds
std
inc
lret
icebp
push
call
cmp
inc
xchg
xor
dec
push
outsb
jmp
jl
pushf
inc
add
pushf
push
xchg
fwait
sti
divl
sub
add
jae
enter
sub
or
adc
testl
mov
int
xor
dec
cmovo
pop
testb
cli
mov
cmc
sbb
insb
sub
adc
cmc
sar
mov
adc
and
push
aad
adc
push
sti
pop
xchg
roll
stos
stos
stos
or
ret
inc
push
stos
in
test
cmp
add
test
ficompl
push
push
or
or
mov
pusha
fldl
push
adc
fsubs
fld
cmp
sub
int
pop
xlat
and
out
into
adc
pop
adc
xor
jge
adc
mov
lds
adc
cmc
fstps
cmp
cs
jno
mov
push
mov
mov
je
cmp
popf
push
test
push
scas
nop
cmp
inc
jb
pop
icebp
test
push
inc
add
and
lods
push
mov
int3
and
and
jo
push
add
pop
gs
jbe
inc
imul
and
pop
lcall
jo
roll
jge
out
push
adcb
cmp
adc
clc
test
mov
mov
sbb
push
cmp
pop
insb
or
sbb
and
xor
and
pop
cmp
outsb
fadd
push
cwtl
fdivr
jns,pt
rorl
adc
enter
cmp
jmp
mov
dec
add
lock
fs
and
inc
adc
jae
insb
xchg
jge
lods
adc
push
pushf
out
fisttpll
loopne
mov
in
xorl
fcoms
test
jbe
inc
inc
jae
hlt
or
out
gs
push
daa
movsl
jo
xor
mov
std
adc
rorl
pop
in
roll
pop
push
call
sub
inc
pop
jmp
in
xor
dec
je
ss
in
arpl
ret
push
push
inc
mov
rol
insb
shlb
add
jmp
jp
leave
roll
fcmovb
shlb
std
lea
add
int
stos
mov
push
mov
sub
rclb
aaa
sbb
dec
loopne
fdivr
mov
inc
fidivrl
mov
push
out
or
mov
adc
arpl
sub
pusha
xor
mov
jne
xlat
hlt
pusha
paddb
pusha
fmull
cmpl
add
cmp
dec
ljmp
push
mov
add
repnz
xor
cmc
mov
imul
adc
mov
cs
push
in
in
out
imul
or
mov
xor
cs
es
out
cwtl
jmp
mov
inc
push
pop
ret
adc
dec
cmp
fnstcw
test
push
adc
rol
pusha
pop
pushf
call
push
in
aam
add
int
wrmsr
jmp
mov
jmp
mov
and
xor
adc
fistps
pop
icebp
xor
fists
inc
pop
ret
int3
jmp
inc
mov
adc
xor
mov
mov
mov
add
cmpxchg
xchg
push
mov
push
sub
cltd
push
push
lods
icebp
xchg
fistpl
xchg
neg
sbb
in
dec
ret
int3
add
add
sti
mov
jmp
add
jae
sub
mov
push
cld
mov
or
loope
or
add
pop
push
dec
sub
or
stos
adc
rol
jge
movsl
sti
sub
or
inc
ja
cmpb
mov
sbb
xor
add
clc
adc
push
xchg
cmp
sub
fcomi
jecxz
jl
inc
insb
cld
fildl
mov
movsl
xchg
pop
out
cmp
fs
pushf
mov
add
dec
in
xor
jg
push
and
call
mov
inc
or
inc
mov
or
jbe
aam
ljmp
aaa
imulb
pop
ljmp
sub
rcl
jnp
sti
push
xchg
dec
shrb
insb
sbb
icebp
in
xor
sti
or
mov
test
cwtl
insl
mov
pop
fdivrl
aam
loopne
lock
lea
add
iret
and
and
shll
mov
xchg
mov
lcall
sub
negl
je
aas
pop
dec
shll
aam
add
add
add
inc
pusha
xor
mov
mov
ds
sub
adc
pop
ja
f2xm1
xor
add
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
scas
imul
sbb
es
imul
scas
ret
add
mov
and
mov
std
sub
movsb
and
mov
inc
cmovge
push
ret
popa
cs
pop
jle
jae
adc
mov
xor
pop
pusha
and
inc
popa
sahf
in
inc
adc
sti
jg
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
in
outsl
ret
mov
mov
push
push
aaa
shlb
mov
pushf
mov
jg
ljmp
incl
lret
xlat
ss
mov
jg
pusha
mov
mov
sbb
xchg
nop
cmp
inc
xchg
xor
cli
sti
xchg
scas
xchg
xchg
push
jae
xor
push
push
inc
push
push
xor
sbb
add
sub
or
jg
mov
jae
and
fs
or
dec
gs
gs
imul
xor
xor
pop
add
push
mov
add
aas
pusha
pushf
call
mov
js
xor
lea
je
lea
cli
jg
pop
sbb
adc
out
adc
jnp
add
add
push
std
out
call
daa
inc
push
push
mov
call
mov
pop
popf
popa
jmp
jecxz
inc
pop
pop
pop
adc
into
scas
loope
repz
mov
pushl
sub
xor
mulb
jno
pop
aad
jp
jns
jnp
xchg
and
les
into
jecxz
xchg
inc
xchg
rcl
idiv
pop
scas
pushf
sub
jne
jp
aaa
inc
outsl
insl
arpl
inc
std
iret
jle
data16
jae
mov
cmpsl
mov
pop
into
les
fidivrs
out
mov
aaa
and
out
add
mov
mov
inc
inc
dec
inc
sbb
pop
inc
daa
pop
jnp
out
fbld
aam
lret
rol
mov
mov
mov
aas
jno
insb
add
xchg
std
jg
in
mov
popa
arpl
and
shlb
fldl
inc
dec
ss
mov
mov
mov
pop
add
std
enter
insl
outsl
outsl
dec
xor
jmp
lods
mov
fcmovb
and
cmp
mov
outsl
jne
fs
sub
sti
pusha
cld
insl
jae
je
insb
fs
outsb
aaa
pop
jae
jae
gs
fistpl
mov
xor
in
push
push
xchg
insl
imul
arpl
sbb
in
outsl
jo
aaa
fs
add
add
mov
je
push
je
jns
or
add
or
js
push
insl
jg
pop
and
add
outsl
data16
div
or
jae
bound
imul
lea
push
inc
push
inc
pop
dec
dec
inc
push
fbstp
mov
imul
mov
stos
xor
xchg
lcall
mov
dec
mov
subb
and
add
add
inc
std
push
add
push
add
lods
nop
jbe
jo
inc
add
inc
add
or
push
pop
mov
mov
int
mov
push
jb
addr16
insl
and
outsb
outsb
outsl
je
filds
and
outsb
and
inc
dec
push
and
aas
in
aas
fmuls
and
out
fimull
cmpsl
mov
add
mov
out
cmpsb
pop
stos
fbld
pop
mov
mov
mov
movsbl
pop
mov
popa
test
pop
scas
jnp
frstor
mov
sbb
pop
ljmp
mov
dec
add
add
fmuls
and
add
or
sahf
jne
js
add
mov
add
add
pop
add
add
sub
push
jbe
adc
push
add
insb
pop
adc
mov
pop
or
mov
and
subl
or
les
pusha
in
pop
divb
or
jb
popa
je
add
mov
jle
jbe
sbb
cs
nop
lock
jbe
jo
shlb
xchg
data16
pusha
pop
pop
daa
xor
inc
cmp
jmp
jb
gs
outsl
arpl
lock
mov
add
jae
popa
arpl
pop
negl
repz
or
mov
or
enter
gs
loopne
adc
dec
rcr
add
pop
cmp
mov
adc
pop
ja
sub
addb
add
pushl
or
je
mov
jbe
inc
push
and
pop
test
daa
fnstcw
call
mov
das
inc
jge
idiv
stc
mov
mov
and
pop
xchg
rol
sbb
ljmp
and
and
cli
outsb
lods
pop
dec
fisubs
pop
mov
add
decl
and
push
loopne
inc
push
mov
rcll
mov
nop
les
add
cmp
mov
inc
cmp
incl
cltd
mov
cs
repz
fldcw
jl
mov
dec
ljmp
mov
sub
in
dec
mov
ljmp
mov
jo
and
stos
jmp
jl
pop
cmpb
out
mov
pop
lds
inc
sbb
ret
stc
xchg
decl
negl
jne
gs
mov
mov
mov
test
ljmp
cmp
cmp
xor
pop
dec
jp
xchg
mov
jne
decl
sub
mov
mov
push
cmp
push
push
stc
ret
cs
sub
jb
push
sahf
cmp
ljmp
pop
fmull
gs
pop
inc
mov
cld
push
pop
adc
filds
lods
jp
jns
incl
mov
sub
in
mov
push
lahf
cmp
jo
adc
dec
test
xor
lea
adc
out
mov
cwtl
lret
xchg
mov
cmp
cmp
mov
arpl
icebp
stos
addr16
mov
fiadds
gs
sub
mov
push
sbb
xchg
adc
in
push
mov
les
inc
dec
popf
mov
and
out
inc
xchg
xchg
jmp
xor
in
and
xchg
mov
jmp
or
in
rorl
dec
adc
fwait
ss
push
adc
jp
aas
fsubs
imul
inc
fnsave
jp
call
std
xchg
mov
or
sub
test
orb
sub
xchg
adc
incl
xor
fimull
cmp
dec
jp
fldcw
xlat
jmp
stc
inc
lods
push
decl
repnz
inc
lds
mov
mov
test
cmc
inc
push
js
cmp
mov
push
adc
stos
loopne
mov
ss
push
jge
mov
and
push
adc
gs
movsb
test
stos
mov
mov
dec
stos
or
insb
pushf
and
or
mov
hlt
aaa
ds
jmp
loope
leave
inc
pop
xor
xchg
shll
fldt
xor
outsl
fdivr
ljmp
push
daa
dec
movsl
aaa
andl
nop
fucom
cmp
std
ds
popa
repz
inc
dec
push
out
or
adc
mov
fildl
stc
pop
xor
inc
les
lds
dec
iret
xor
out
xor
or
mov
dec
out
xor
cwtl
test
into
or
rclb
ss
lods
sbbl
xor
ljmp
jg
mov
pop
out
push
mov
mov
sbb
loop
rcll
jmp
mov
insb
dec
sahf
pusha
pop
out
dec
frstor
test
mov
lret
icebp
xchg
jg
stc
cmpsb
aad
xor
dec
inc
and
and
xchg
jnp
xchg
loope
lahf
or
push
xchg
dec
mov
fisubrs
scas
loope
std
hlt
fisttps
cmp
add
jb
sbb
mov
iret
pop
outsl
inc
jnp
push
out
call
into
imul
inc
lods
add
hlt
adc
pop
testb
in
fwait
in
xchg
jg
aaa
ret
mov
and
out
adc
mov
lcall
adc
jae
inc
shll
mov
dec
rcrl
cs
ret
jecxz
aas
sbb
ja
idiv
call
ss
movsb
mov
mov
gs
orl
decl
clc
adc
mov
mov
loope
push
xor
jo
call
mov
insb
cmp
in
mov
inc
sub
lds
repz
xor
inc
mov
jno
rol
mov
addr16
pop
rcr
rcr
popf
sub
fdivrs
sbb
cli
call
lea
ss
insb
adc
adc
mov
jg
lcall
stos
test
mov
push
xchg
push
fsubrs
das
shll
decl
pushl
push
fidivs
dec
adc
sub
fwait
xor
lds
pushl
sub
xchg
add
dec
adc
pop
cmp
add
jecxz
push
outsl
xlat
fstpt
mov
sbb
adcb
xorb
sub
sbb
sbbl
xor
add
mov
inc
push
clc
cmpsl
insl
add
push
lcall
cmp
inc
mov
xchg
mov
call
getsec
xor
call
fbstp
cs
call
cmp
sbb
psubw
or
loopne
mov
cmc
jle
bnd
fstpl
roll
push
adc
lcall
scas
mov
push
ret
lcall
pop
jg
push
es
jmp
lret
pmullw
mov
daa
jmp
imul
js
dec
xor
out
jmp
ret
mov
fadds
out
test
mov
sti
mov
in
xor
fstpt
add
ljmp
xor
js
imul
push
cmpsl
mov
cs
pop
cld
ljmp
mov
cmp
xchg
or
or
push
push
sbb
lock
and
fildl
gs
lcall
pop
andb
js
movsl
sbb
push
mov
inc
fwait
inc
mov
push
jnp
pop
ret
call
xchg
mov
lds
movb
adc
decl
jno
dec
punpcklbw
and
cmp
lds
imulb
xchg
loope
xchg
ljmp
icebp
stc
cltd
xchg
stc
fiaddl
cli
sbb
cli
cmp
and
pop
jnp
jmp
jp
cltd
in
ljmp
inc
cmpsl
cmp
fs
sbbl
mov
xor
or
dec
add
fcmovu
or
cmp
xor
ds
pop
jmp
jp
pop
or
pop
js
jbe
pop
mov
loop
daa
fs
test
jg
mov
outsb
arpl
jmp
rcrb
jle
aad
out
sbb
cmpsb
jecxz,pn
lcall
pushf
xchg
jae,pt
movsb
incl
clc
lret
ss
pop
adc
popf
sahf
ss
movsl
iret
and
jae
xor
pop
or
sub
outsl
lock
iret
out
enter
comiss
push
fisubrs
repz
lret
jmp
mov
cmp
sbb
fstpl
mov
aas
add
jg
outsl
std
vcvtpd2psx
lret
shlb
inc
inc
add
incl
repnz
jl
or
andl
ret
jmp
sahf
out
jle
ljmp
xchg
les
xlat
mov
mov
stc
or
fcmovb
mov
outsb
mov
into
mov
jmp
stos
sbb
in
bound
mov
cmp
ss
sub
mov
jmp
lock
ljmp
pop
adc
or
xor
xchg
pop
jg
inc
pop
imul
or
incl
pop
xor
fnstsw
add
mov
icebp
call
dec
dec
fxam
lea
mov
decl
xchg
xor
fimuls
cmpsl
ret
mov
add
int
pushl
jg
aad
neg
jne
push
popf
and
enter
add
ljmp
dec
push
mov
inc
js
xchg
pop
xchg
sar
cmp
nop
dec
jne
fdivl
mov
mov
cmpsb
es
int3
pop
cmc
cmpsl
jb
and
sbb
rcl
dec
lds
mov
cli
pushl
data16
mov
lea
sbb
dec
aad
mov
jecxz
sub
lcall
and
movsl
mov
pusha
insb
add
das
xchg
sbb
adc
popa
movsb
pop
shll
out
sub
dec
mov
xor
lcall
xchg
push
pop
popa
mov
jecxz
and
mov
jns
fiaddl
test
pop
dec
sar
jp
decl
inc
loope
data16
outsb
ja
out
es
repnz
ds
daa
imul
cmp
adc
mov
in
pop
jb
out
jnp
unpckhps
pop
fmul
sub
lret
and
ljmp
xchg
sti
mov
xchg
xlat
adcl
cwtl
inc
decl
out
cmc
jp
jmp
das
dec
out
flds
mov
in
shl
dec
lahf
push
incl
xor
inc
jbe
inc
lods
dec
mov
pandn
jb
sbb
dec
jg
dec
dec
add
inc
adc
and
fcomip
or
pop
sub
xchg
dec
cld
adc
cld
ljmp
sub
sub
lock
push
fsubrl
mov
add
fdivrl
mov
or
outsl
and
imul
incl
lret
scas
ljmp
scas
in
mov
icebp
ljmp
lea
xchg
sbb
jbe
dec
cmp
cwtl
jnp
call
jbe
jne
lahf
loopne
add
pop
mov
mov
xchg
add
js
leave
sahf
ds
outsl
cwtl
jbe
loopne
pushf
arpl
into
repnz
lcall
sub
cwtl
push
and
and
mov
mov
movsl
test
fistpll
out
out
xor
push
or
je
fs
mov
mov
sub
mov
xor
sub
or
mov
xchg
cmp
mov
jg
stc
es
xor
outsl
pop
mov
movsl
scas
push
jae
push
push
mov
dec
add
pushl
xchg
and
cmpsb
ss
jb,pt
cld
in
lds
xchg
push
loope
mov
mov
and
pop
add
lret
fldl
sub
fs
je
js
mov
popf
lret
in
inc
ljmp
scas
aaa
addr16
jp
sbb
fs
insl
mov
int3
fwait
inc
xchg
mov
test
mov
sbb
jge
stos
lret
out
mov
push
cmp
sbb
out
pushl
std
pop
sub
js
adc
loopne
lods
loopne
data16
outsl
icebp
call
mov
cmpsl
pop
inc
mov
ss
sub
adc
stos
mov
and
sub
push
lahf
or
mov
lock
incl
cld
sub
cwtl
pop
addr16
fnsave
or
inc
aam
mov
push
movsb
repnz
das
nop
sbb
mov
out
test
push
and
xchg
mov
cs
jmp
inc
sbb
push
cmp
es
lods
data16
fisttpll
std
jmp
fwait
lods
dec
cmp
test
sahf
sbb
jl
mov
sub
xor
das
std
incl
inc
in
cltd
mov
repz
pop
inc
and
mov
hlt
cmp
call
pop
push
mov
push
lock
xchg
hlt
add
adc
inc
cld
test
adc
lds
les
push
push
repz
cltd
pop
cmp
dec
sahf
mov
aaa
clc
decl
pop
mov
in
das
jnp
jbe
out
mov
negl
das
call
repnz
push
popf
pop
ja
stos
jnp
in
out
lcall
lret
movsb
cmpsb
mov
incl
xor
ds
iret
loop
in
sbb
lods
les
mov
mov
lret
xchg
mov
mov
mov
push
pop
jb
repnz
mov
and
jno
shll
into
pop
nop
sti
movsl
jo
mov
mov
imul
cli
adc
pop
adc
cmp
pop
std
sbb
ret
cld
pop
shl
lcall
loopne
pop
incl
push
or
inc
icebp
sub
xchg
push
rcll
sbb
lahf
mov
test
loopne
cli
inc
adc
jb
inc
outsl
lahf
in
cli
aas
jle
push
enter
aaa
cltd
jmp
cmp
mov
incl
std
jecxz
add
sti
lock
repz
xor
out
push
lahf
cs
lcall
mov
sbb
jbe
dec
call
sbb
sub
mov
ljmp
std
and
rcl
pusha
addr16
lret
aam
jnp
in
fistps
xor
inc
aaa
cli
das
mov
bswap
jp
sbb
decb
aaa
incb
jge
out
negb
sbb
or
pushl
mov
rclb
cmp
and
cmp
movsb
not
dec
out
das
lock
icebp
jmp
cmp
sbb
movsl
push
pusha
xlat
lahf
lds
add
sar
das
and
sbb
lods
stc
fndisi(8087
and
icebp
call
xlat
lds
inc
rolb
lahf
pop
ss
adcb
das
icebp
add
sbbb
jg
jno
add
lds
mov
jo
xchg
add
pop
push
mov
cmp
andb
shrl
call
iret
clc
cmp
xor
out
xchg
rcpps
jmp
push
sti
adc
cmp
cli
jmp
push
xor
pushf
dec
fmuls
ret
data16
adc
mov
pushl
push
aas
std
lock
jns
scas
in
pop
mov
jle
aaa
pop
pop
mov
xlat
popf
inc
push
cld
cmc
imul
jo
mov
or
cmc
mov
mov
loop
rcl
lcall
mov
ror
add
ret
scas
int3
cmp
nop
in
xlat
mov
mov
daa
mov
add
mov
aam
daa
std
mov
test
and
adc
sbb
push
fdivrs
sbb
jg
sbb
inc
cmp
subb
shr
and
sbb
or
jo
jg
sub
mov
inc
xchg
ja
pop
jne
sub
jg
rolb
aas
js
add
and
outsb
jbe
sub
push
test
jmp
inc
sti
stos
and
repnz
pushf
in
lcall
mov
xor
xor
nop
adc
pushf
pop
jg
sti
shrl
cli
and
jg
push
iret
push
adc
in
adc
pop
push
pop
sti
cwtl
push
call
jle
xchg
mov
stos
adc
jp
pushf
sbb
pushl
push
cmp
inc
aaa
cs
cwtl
inc
cmc
mov
add
mov
dec
addr16
dec
and
decl
jl
out
mov
mov
mov
or
clc
fbstp
inc
sar
pushl
ds
mov
aad
roll
and
sub
pop
popa
mov
fcoms
insl
lcall
cld
ljmp
push
push
jg
rol
popf
inc
pop
xchg
outsb
lea
mov
jb
jae
stos
mov
cs
stos
pop
adc
xchg
cmc
jmp
test
adc
xor
movsb
dec
mov
out
je
or
add
ljmp
sti
mov
sbb
fcompl
scas
sbb
cmp
or
jno
cmp
cmp
mov
je
gs
mov
cmp
or
repnz
cmp
js
imul
cmp
push
push
std
data16
mov
cmp
mov
popa
loope
leave
cs
into
cmp
dec
jmp
mov
fimuls
push
dec
incl
into
pop
mov
add
push
jecxz
ret
cli
sub
mov
std
jmp
push
mov
mov
and
in
incl
lods
pusha
divb
lcall
jbe
push
or
loop
lcall
push
adc
or
in
xchg
fs
jb
xchg
pusha
mov
add
or
pop
ja
mov
xchg
insb
fmuls
push
jle
cld
jg
lcall
dec
lds
xor
ss
mov
insl
or
stos
dec
jg
ss
movsl
ds
in
pop
fiaddl
cmp
mov
jg
lcall
mov
insb
xchg
pop
push
add
jle
imul
in
rorb
mov
popf
push
pop
mov
shl
insb
or
dec
in
jg
pushl
addr16
push
mov
shr
rorb
sbb
stc
jno
pop
mov
pop
cmpsb
in
loope
jbe
adc
shll
lds
push
orb
mov
cmp
pop
clc
pushl
das
push
aas
inc
pop
dec
loop
pop
aam
cmp
pushf
jl
rclb
adc
scas
add
in
cmp
outsb
sub
xchg
int
int
cld
jg
sbb
or
ljmp
out
dec
loopne,pn
mov
xchg
or
mov
xor
fbld
clc
movsb
xchg
outsb
push
push
cmp
sbb
ja
push
or
pop
mov
mov
out
popa
sar
cmp
ja
pop
jo
sub
testl
scas
incl
cmp
and
and
outsl
icebp
lcall
jl
stos
xchg
fsubrl
mov
sbb
and
push
push
sar
jg
sub
cmc
in
jle
sub
mov
lret
pop
xchg
jle
adc
ljmp
out
pop
mov
aas
mov
arpl
mov
xor
inc
lock
ljmp
add
push
adc
and
into
xor
ljmp
cmc
out
inc
data16
xchg
loope
mov
jg
jmp
cwtl
mov
jmp
pop
out
mov
inc
xor
lahf
cmc
adc
cwtl
hlt
push
mov
or
je
pop
mov
mov
decl
clc
pop
and
stos
inc
and
mov
inc
pop
lahf
outsb
jl
adc
xchg
ss
fwait
adc
dec
mov
out
icebp
addr16
lcall
test
cmp
mull
dec
aaa
xor
hlt
rolb
jne
jbe
loopne
xchg
cmp
mov
sub
scas
insb
neg
add
mov
jns
or
out
xlat
fdivr
sbb
mov
bound
dec
lock
mov
repz
pop
dec
loope
xchg
push
mov
mov
sbb
push
imul
test
rcrb
dec
gs
in
test
incb
jg
push
jnp
cmpsb
std
scas
mov
fwait
movsb
xor
adc
out
adc
sbb
jle
jns
insl
xorl
sarb
dec
outsl
out
fists
in
jg
decl
mov
in
sahf
dec
pop
push
inc
adc
jmp
and
sbb
jo
add
cmpxchg
movsl
push
es
rorl
fisttpll
pushl
stc
sti
in
sbb
sbb
dec
sub
leave
stos
test
test
out
add
push
insb
mov
icebp
xor
or
dec
or
xor
mov
cs
fucomip
popaw
adc
sbb
add
cltd
and
push
xor
scas
int
popf
addb
cld
pushl
mov
popa
cmp
repnz
std
inc
in
popf
lock
call
sbb
and
sub
cld
jg
icebp
in
mov
push
jb
mov
aaa
cmp
fwait
nop
mov
sub
in
lcall
les
mov
cmp
add
mov
jbe
loopne
call
adc
jmp
cmc
or
jo
out
fsubp
sbb
das
cmc
mov
test
test
cmp
jg
fidivrs
ljmp
pushf
scas
nop
inc
gs
inc
push
pop
cmp
ja
lea
data16
ret
xlat
int3
jge
or
fnstenv
aad
adc
std
push
dec
pop
and
sti
decl
sub
mov
cmc
arpl
add
decl
xchg
fcompl
push
xor
fildll
call
jecxz
sub
dec
sarb
int3
fsubs
adc
call
call
inc
add
ficomps
dec
xchg
pop
outsb
andb
mov
les
call
mov
fisttpll
inc
movsl
das
std
cmp
dec
mov
push
lds
fwait
adc
push
jp
dec
jl
int3
mov
hlt
push
div
jmp
je
stos
mov
and
loop
inc
into
jnp
sub
clc
das
dec
ficoml
mov
nop
and
and
jge
inc
jg
adc
icebp
les
mov
adc
addl
xchg
push
dec
mov
in
dec
ficoms
mov
call
inc
mov
or
out
in
pop
dec
push
inc
sbb
sub
outsb
jae
mov
or
das
lock
out
and
sti
inc
adc
jns
dec
movsl
inc
and
jo
dec
cmpsb
int3
imul
ljmp
inc
jecxz,pn
mov
sub
iret
icebp
mov
push
repz
call
lock
cmp
add
inc
fst
icebp
lcall
enter
or
mov
jg
loop
ljmp
inc
jns
xchg
mov
and
pop
insb
mov
mov
add
add
divl
xchg
sub
sahf
fadds
push
cmc
daa
outsl
xchg
mov
test
jmp
push
jg
xchg
movsl
insl
cmp
cmpsl
mov
outsl
and
lcall
test
mov
lock
xchg
es
aas
repnz
fwait
dec
pop
in
xchg
mov
add
mov
push
mov
sbb
call
pop
xor
jmp
cmp
mov
lcall
lret
dec
sti
nop
pop
repz
jno
jg
jl
imulb
int3
or
fdivp
cli
pop
mov
bound
stos
decl
sti
sbb
loopne
and
movsl
adc
or
lods
add
pop
push
cmpsl
es
push
sub
push
imul
in
movsb
xlat
pusha
adc
mov
call
jle
jbe
pop
lahf
xor
jmp
mov
cmp
imul
iret
clc
mov
clc
mov
out
sub
or
int3
orl
hlt
push
lock
sub
int
sahf
add
push
sbb
sbb
xchg
jns
decl
std
aas
inc
sub
push
jae
jo
add
sbb
jg
xor
add
mov
cwtl
pop
fisttpll
aaa
stos
mov
ret
std
jnp
mov
push
jmp
fcoml
or
cs
lcall
dec
or
les
addr16
mov
lcall
ret
in
mov
jp
jmp
lods
add
es
cwtl
and
call
outsl
mov
add
ret
sub
mov
call
rcrl
test
push
insb
pushl
adc
push
pop
enter
xchg
cmp
jno
mov
cmp
insb
or
int
sbb
mov
les
fdivrl
out
es
or
bound
xchg
mov
jg
into
enter
adc
sbb
dec
mov
in
or
incl
test
lcall
push
fcomip
test
dec
cmp
mov
jp
lcall
mov
scas
or
and
or
xchg
leave
incl
xchg
jne
cltd
and
int3
addr16
jmp
ss
mov
jmp
mov
pop
jl
mov
adc
je
fisubs
mov
adc
cmpsb
lret
pop
jmp
div
shll
jg
jge
enter
jb
int
mov
rcrl
jg
loopne
mov
xchg
push
jne
or
decl
inc
xor
insl
pinsrw
pop
call
jmp
sub
cld
push
push
fcmovnu
clc
push
xchg
fldl
xlat
dec
inc
sub
pushl
les
xlat
pop
mov
imul
xorl
push
mov
sahf
call
ret
fistl
adc
or
sub
std
or
lods
cli
call
xchg
pop
mov
in
adc
sbb
sub
data16
mov
sti
cmp
mov
or
cmpsl
jo
mov
aam
mov
inc
lock
cld
sbb
mov
jmp
add
adc
lea
sub
test
sub
pushl
xor
ja
mov
aas
pushf
das
scas
subb
cmp
clc
xchg
xchg
fsubl
lcall
mov
pand
push
pop
and
and
jg
jmp
test
inc
fsubr
inc
mov
ss
inc
repnz
popf
in
lock
sbb
pop
aam
mov
inc
ds
cmp
sub
mov
pop
cmp
inc
fisubrl
dec
xchg
mov
push
dec
xchg
xchg
jns
call
xchg
mov
lods
call
cmp
dec
and
pop
loopne
in
aam
adc
jge
popf
shll
loop
loope
jno
xchg
in
cld
adc
das
dec
jmp
cmp
adc
ljmp
jmp
jle
out
xor
sub
mov
out
pop
pop
jecxz
cwtl
addr16
fucomip
ss
pop
push
dec
or
cmp
test
in
imul
inc
dec
dec
mov
xor
addr16
dec
xchg
cmpl
lods
adcb
cmp
add
mov
mov
ljmp
jp
xor
movsb
cmp
or
aas
mov
jae
es
pop
sub
lcall
inc
addl
jbe
pop
enter
incl
inc
lods
mov
out
sub
outsl
cli
frstor
test
mov
jl
das
mov
jbe
decl
xchg
test
adc
stos
sbb
inc
xor
jg
hlt
inc
jne
and
mov
jp
mov
pop
jecxz
fdiv
pop
das
cmc
mov
in
or
jp
inc
rclb
loopne
ret
or
aaa
repnz
xor
cmp
je
jns
dec
pop
mov
and
rcl
adc
jp
sbb
push
loope
add
jmp
or
or
push
add
and
mov
sbb
scas
add
pop
mov
fisubrs
or
mov
ljmp
add
and
addl
lods
in
jecxz
ret
clc
cli
mov
adc
pop
cmpsb
push
cs
je
movsl
in
jg
cli
fnstcw
out
repnz
push
mov
cwtl
and
mov
mov
and
int3
xchg
inc
aaa
in
loope
stc
jg
dec
lods
pop
adc
inc
dec
int3
jae
subb
lcall
imul
inc
and
push
mov
or
loop
mov
mov
lods
scas
negl
jl
push
push
pop
or
fadds
ljmp
je
js
dec
or
cmp
sbb
adc
mov
into
icebp
mov
push
or
cwtl
aaa
pop
mov
lret
mov
incl
repnz
cmc
mov
out
pop
cmpb
xor
mov
mov
daa
push
mov
inc
jne
stos
mov
ljmp
sbb
out
xchg
pushf
js
lock
outsl
xor
xchg
mov
ret
addr16
jno
or
mov
bound
daa
and
mov
push
ret
and
das
jno
in
and
in
int
stc
xor
push
xchg
call
shrl
fcmovnu
rorb
inc
mov
dec
stos
adcl
jmp
inc
push
pop
or
mov
incl
pop
out
mov
mov
nop
testl
pushf
js
cwtl
sbb
sbb
call
xchg
inc
sahf
pusha
leave
sbb
mov
cmp
std
cli
sbbl
fsubs
sub
and
cmc
int3
mov
xchg
inc
call
mov
xchg
mov
jmp
std
lods
dec
testl
scas
lods
mov
pushl
mov
jae
clc
pop
out
flds
rorl
xchg
sbb
sbb
dec
repnz
insl
repz
fwait
pop
movsb
or
jnp
sub
imul
sub
repnz
fsubl
shll
jne
popa
xchg
fisubs
inc
lret
mov
test
xor
aaa
insl
into
pop
call
push
cmp
pop
or
xchg
or
aad
cltd
test
ljmp
jmp
not
lcall
and
dec
xchg
out
inc
stos
pop
pushf
mov
lret
cmp
push
xchg
sub
adc
repnz
shrb
xchg
jg
fwait
sahf
xchg
or
das
cld
ljmp
je
popf
js
xor
enter
push
mov
icebp
jns
mov
imul
fcoml
sbb
pop
push
fwait
mov
sbb
cmc
inc
jmp
and
mov
je
lds
add
call
pop
ljmp
loop
dec
repz
sub
pop
loope
fwait
pusha
das
cmc
sar
xor
xchg
les
ss
loop
pushf
nop
pop
decl
call
mov
sbb
movsb
cltd
pop
sub
int
out
pop
sub
mov
std
les
mov
out
jmp
out
mov
adc
cli
call
jo
pop
dec
in
leave
loopne
mov
adc
mov
stos
push
cmp
mov
and
pop
fdivrp
sbb
mov
in
repnz
mov
xor
fldt
pop
jg
inc
cmpsb
mov
mov
sub
dec
ljmp
cmp
mov
inc
push
adc
or
sub
jae
xchg
test
mov
xchg
incl
push
xchg
mov
jle
dec
pop
popf
mov
mov
test
clc
mov
mov
jns
jmp
mov
sbbl
movsl
outsl
sub
std
ret
dec
sub
xchg
adc
add
ffree
sub
ror
enter
rcll
pop
test
decl
inc
mov
push
or
mov
incl
push
dec
testl
rcr
add
adc
js
lcall
repz
mov
addb
clc
jbe
cltd
nop
subb
adc
mov
jmp
xor
movsb
imul
inc
into
jg
adc
mov
mov
decl
add
add
pusha
jmp
push
jbe
sar
jg
jmp
out
out
jmp
mov
js
fst
inc
cmpl
call
mov
icebp
xchg
ret
sub
in
lret
mov
in
std
out
pop
mov
addr16
and
movsl
pop
daa
sarb
fmuls
push
pop
stos
in
jg
addr16
es
cmp
push
adc
jo
add
testl
jge
cmpsb
adc
inc
xorl
ljmp
test
inc
add
fistl
lcall
insl
dec
cmp
repnz
dec
cs
les
lds
ficoms
cmpl
decl
mov
cmp
and
adc
incb
dec
push
jg
sub
mov
movsl
mov
or
cltd
es
xchg
sbb
ljmp
and
mov
out
hlt
je
mov
or
ds
fstps
sub
sub
rcrb
aaa
pop
xchg
cmpsl
xchg
pushf
cmp
push
jg,pt
test
add
cmp
shrl
imul
adc
ljmp
cmpsb
cmp
or
int3
mov
sub
sbb
xor
idivb
jge
xor
pop
in
fwait
cli
mov
stos
mov
inc
enter
test
mov
jns
jl
nop
mov
scas
cmpsb
mov
cmp
xor
mov
stos
jg
fidivrs
xchg
add
mov
xchg
incl
and
or
or
xor
inc
cmp
pop
shlb
dec
mov
pop
dec
cmpsb
jnp
roll
or
rclb
ret
pop
ljmp
mov
cmp
cmpsl
mov
aaa
dec
xor
dec
cmp
insl
jne
jge
push
xchg
pushl
cmp
or
pop
push
andl
mov
test
sarl
movd
or
sbb
sbb
mov
and
enter
pop
jmp
mov
pushl
insb
mov
stos
insl
loop
adc
jl
gs
mov
nop
mov
mov
stc
test
xor
pop
cld
mov
xlat
lock
mov
jno
ljmp
jge
pop
jp
dec
mov
mov
and
add
push
les
or
decl
rol
ret
fwait
repz
sub
addr16
lcall
mulb
fisubrl
or
pop
std
ljmp
push
mov
fldl
orb
fdivrl
scas
inc
inc
call
sub
xchg
and
mov
jle
add
je
cmp
fwait
mov
popa
cmpsl
jns
lods
sbb
fcmove
in
xor
mov
xlat
lret
lods
rorb
push
incl
or
lret
out
jg
or
sbb
mov
jmp
pop
fadds
icebp
cwtl
orl
subl
push
shl
jae
sub
sbb
xchg
bound
pop
sahf
mov
inc
lods
cs
lcall
push
xchg
cwtl
jno
je
test
popa
testb
xor
decl
mov
jns
stos
inc
adc
and
adc
add
test
push
xchg
pushl
lret
cmp
jb,pn
fwait
dec
stos
aaa
or
push
int
outsb
fwait
mov
dec
jle
inc
and
jg
test
pop
jns
adc
hlt
ljmp
sbbl
jno
cmpsb
add
mov
jo
mov
ss
pop
movsb
call
jg
mov
cmpsl
jno
fcompl
insb
push
aam
sbb
pop
mov
ljmp
dec
mov
sub
ss
lea
cltd
push
sbb
pop
stc
ret
lahf
loop
fildl
es
or
inc
gs
mov
xlat
add
pop
cmc
mov
xchg
in
and
xchg
ss
ljmp
cmp
push
popf
loopne
mov
mov
decl
sbb
push
aam
arpl
bound
pop
jo
add
cmpsl
mov
mov
ljmp
icebp
pushf
mov
aaa
arpl
lret
add
jg
mov
or
lock
inc
pop
ljmp
add
fsubrs
jmp
enter
or
pop
mov
movsw
sti
fnstenv
gs
cmp
arpl
lret
jne
enter
pop
xor
idivb
call
clc
call
fsts
xchg
mov
shr
sbb
jne
push
outsb
mov
add
and
icebp
sbb
test
icebp
xor
xchg
lea
je
xorb
mov
dec
pop
adc
ret
cmp
add
aad
std
inc
add
movsb
fldenv
jecxz
mov
jne
xchg
sbb
ljmp
ljmp
dec
mov
adc
mov
gs
xor
bound
lock
lcall
call
dec
out
mov
inc
inc
nop
jl,pt
das
sti
and
lret
xchg
mov
std
cmp
sbb
mov
adc
aas
pop
jle
decl
sti
fildll
jmp
outsl
inc
xor
dec
sbb
adc
out
sub
stos
xor
adc
std
test
into
in
outsl
sbb
int
xchg
mov
adc
rorl
movsl
imul
fwait
outsl
nop
jg
popf
stos
pop
sahf
movsl
mov
mov
add
outsb
mov
jg
ficompl
xorb
fbld
push
cmp
dec
jnp
pop
or
in
dec
jg
or
jecxz
addl
fimull
fildll
fimull
fstl
cmp
xor
jl
out
pop
aaa
jg
jle
mov
and
lret
mov
fwait
jb
mov
or
pushl
dec
add
scas
mov
loope
scas
cs
push
mov
clc
repnz
lcall
aas
movsl
movsb
jnp
cmp
lods
and
outsl
sub
jg
call
inc
frstor
mov
les
hlt
add
decb
add
imul
lcall
mov
pop
pushf
lods
jnp
mov
add
sbb
mov
jmp
iret
cmp
jns
adc
sbb
jmp
cmp
jae
sub
cmp
dec
std
dec
adc
mov
jns
xor
pop
arpl
call
lcall
push
sub
lock
pop
push
push
add
sub
ljmp
ljmp
into
adc
mov
dec
loop
lahf
push
adc
add
and
movb
sub
pop
xchg
dec
xchg
xlat
fs
push
aam
adc
sbb
and
adc
jg
cmp
roll
sub
inc
push
lea
cltd
in
jle
ljmp
xor
xchg
mov
adc
cmp
mov
ds
cmp
jns
aad
sub
mov
aad
ret
jle
cwtl
or
xchg
sbb
and
xchg
or
call
in
inc
sub
push
scas
mov
popa
cmp
sbb
fnstsw
mov
pop
mov
add
fwait
in
mov
cli
in
pushl
movsb
es
addr16
stos
fnstsw
pop
jno
insb
fcmove
mov
lcall
push
sbb
outsb
sarb
sub
pushf
sbb
jecxz
jno
lret
or
inc
sar
push
jg
pop
jbe
adc
test
ret
inc
repz
lcall
mov
sub
scas
push
cmp
inc
cwtl
sti
jb
dec
add
lcall
jmp
out
jbe
inc
cmp
push
push
xlat
cmp
mov
aas
sub
fiadds
test
das
cmc
call
ss
lret
jmp
jp
sbb
mov
lods
mov
inc
in
cltd
push
xchg
mov
lret
cmp
decl
loop
mov
or
inc
inc
div
inc
add
fidivs
adc
incl
fs
add
fs
fadd
je
dec
dec
leave
je
je
xchg
xchg
fildl
inc
pop
enter
cld
jge
xor
outsb
dec
std
and
je
push
ljmp
pop
push
hlt
and
outsl
xchg
or
or
cli
adcl
ja
push
sar
inc
js
and
ret
inc
ficomps
clc
and
outsl
or
mov
mov
xor
ljmp
repnz
mov
inc
pop
pop
cmp
stos
call
fcmovbe
or
lcall
fidivl
push
in
test
push
sahf
add
mov
les
pop
ljmp
mov
jnp
movsl
pop
std
mov
push
shrl
mov
push
mov
push
in
dec
push
xchg
and
dec
add
and
test
sbb
sub
fnstcw
sbb
jmp
inc
jmp
fstpt
fs
ljmp
ffreep
insl
push
adc
dec
popa
test
sub
sbb
in
repz
jmp
sub
fadds
fidivrl
cmpl
xchg
stc
fld
pop
cmp
out
fnstenv
ja
iret
call
jmp
ljmp
and
adc
xchg
sbb
daa
fwait
rcl
and
cmpsl
or
cld
jmp
nop
lods
out
aad
adc
mov
cltd
arpl
pop
or
xor
stos
cmp
mov
daa
push
inc
xor
jecxz
adc
xor
lock
pop
call
xchg
and
sbb
filds
push
xor
incl
sbb
cli
imul
mov
inc
pop
cmc
outsl
adc
or
dec
movsl
mov
pop
ljmp
and
fs
pusha
sbb
lret
bsf
mov
lock
insb
sbb
add
cmp
shr
shlb
xor
imul
jg
pop
idivb
pop
testl
dec
xlat
push
pushl
adc
mov
push
mov
mov
movsl
stc
mov
add
cmp
pushl
inc
sub
lds
cmp
sbb
mov
cmp
nop
ret
nop
adc
outsl
incl
fdivr
cwtl
rcr
int3
test
lods
sub
cwtl
pop
lcall
push
sub
loope
fwait
xchg
sub
jmp
pushl
ret
xchg
sbb
in
in
xor
mov
or
push
jmp
inc
push
rol
test
push
fcmovne
and
mov
test
jno
inc
fnsave
mov
int
hlt
lret
cmpsb
imul
and
sub
call
fldt
dec
and
in
and
loope
dec
fwait
pop
push
stos
lret
cmp
rol
mov
loope
es
in
dec
jb
sbb
push
lea
jmp
test
fisttpll
imulb
loop
and
pop
nop
or
xchg
int
fistl
cmp
add
invlpg
lods
nop
in
gs
andl
pop
jne
stos
jl
enter
jmp
ljmp
sbb
cmc
adc
mov
ljmp
mov
fwait
dec
or
cwtl
test
sbb
and
xchg
fsubp
jae
mov
incl
xchg
push
fwait
jne
sub
cli
adc
dec
daa
arpl
incl
jg
je
sub
lcall
push
pushf
fdivrl
int3
fildl
ret
in
insb
arpl
stc
es
ljmp
lock
aam
cmp
pop
je
add
fldl
ss
out
or
loope
jns
mov
mov
or
jmp
lcall
push
outsl
cmc
inc
or
mov
xorl
je
std
mov
insl
test
jmp
out
jo
inc
fs
and
mov
lods
mov
fbstp
sub
jno
outsl
rorb
jmp
or
push
movsl
test
decl
out
ljmp
and
jg
cmp
stc
adc
imul
adc
ljmp
adc
sbb
dec
test
lcall
or
sbb
add
decl
aaa
and
cmc
test
cs
hlt
jecxz
jns
jg
or
das
lret
xchg
xchg
loope
cmpsl
aaa
pushl
ljmp
mov
xchg
cli
jno
pop
mov
or
and
lds
mov
sbb
lea
lods
leave
iret
sub
fucomip
fwait
push
js
test
scas
mov
das
inc
pop
das
in
cmpsb
stos
jg
incl
pop
orb
or
push
adc
call
push
lcall
inc
push
xchg
xchg
cld
fst
test
and
ud0
add
jge
dec
gs
mov
push
sub
cmpsb
xchg
leave
jmp
lcall
inc
jle
test
ss
pop
mov
xchg
mov
insb
insl
mov
cmp
outsl
mov
testb
decl
das
add
mov
xchg
ret
in
or
leave
jp
fucomip
fidivs
ds
imul
mov
xchg
cli
xchg
clc
push
or
stc
sbb
aad
pusha
xor
and
pop
int3
push
xchg
gs
jg
dec
xchg
mov
outsl
into
xor
ds
popa
lods
mov
push
add
hlt
jg
dec
xor
inc
insb
mov
adc
incl
dec
gs
lcall
lods
lret
mov
sahf
xchg
jg
aad
pop
lret
rolb
cmpsb
jle
fldcw
loop
mov
cmp
sar
call
in
into
addb
stos
ds
push
popa
inc
fisttpll
in
mov
rcr
pop
stos
stos
jp
call
lcall
loop
insl
repz
ss
call
fdiv
cmp
jbe
shlb
inc
xor
in
ds
je
lock
push
sub
shlb
mov
ja
adc
cli
jmp
and
idivl
sub
push
jnp
outsb
inc
dec
pop
push
gs
call
imul
xchg
inc
lret
or
nop
cmp
cmp
icebp
decl
pop
pusha
aam
and
sbb
push
jmp
int
or
lock
lcall
cwtl
in
cmpsb
lret
aaa
xchg
out
mov
incl
nop
fnsave
fsub
outsl
pop
or
outsl
aaa
cli
cmp
mov
dec
jb
out
mov
mov
icebp
push
outsl
hlt
in
stc
inc
in
call
test
mov
lret
mov
das
lock
inc
push
jle
lret
sub
movsb
rol
jno
incl
mov
rcrl
xchg
dec
scas
pop
test
adcb
ljmp
or
jg
js
in
adc
or
adc
sub
add
xor
inc
sub
add
daa
lds
mov
fistps
push
ljmp
pop
aad
push
cmp
sub
test
add
icebp
xor
fildl
jmp
scas
rcll
popl
nop
lods
xor
dec
jp
jge
xchg
cmc
add
mov
mov
lds
test
and
sbb
in
cmpb
mov
sub
xor
xor
ljmp
inc
or
fs
sti
cmc
mov
repz
fdivl
decl
pop
aam
cmp
scas
xchg
ja
pop
sbb
jnp
mov
popa
dec
lods
pcmpgtd
or
xchg
jbe
jb
xchg
jne
and
lret
cmp
sub
inc
inc
inc
mov
inc
cmc
neg
mov
movsb
pop
and
into
inc
shl
sbb
mov
push
xchg
lea
aaa
movsb
mov
pop
mov
cld
pusha
movsl
ret
push
and
cs
jbe
or
mov
jmp
adc
mov
ljmp
mov
mov
subb
jmp
cmp
insb
mov
rcr
and
and
outsl
lock
inc
dec
push
pop
dec
add
push
xor
aaa
in
dec
sbb
push
idivb
ljmp
repnz
jl
lds
mov
jbe
adc
jmp
movsl
jne
bound
lret
push
or
and
lret
into
and
jns
xlat
sub
call
decl
xchg
adc
pop
adc
mov
sub
mov
outsl
out
add
mov
fs
xor
add
call
cmp
repz
cmpsl
pop
xchg
icebp
sub
adc
call
imul
cmpsl
scas
push
and
jo
test
rcrb
cltd
mov
sarl
fnstsw
popf
sub
cmp
inc
repnz
push
adc
wrmsr
add
mov
hlt
lgs
cltd
test
es
jecxz
icebp
in
and
lds
imul
mov
test
mov
lods
ja
arpl
outsb
mov
cwtl
dec
jge
or
mul
arpl
lcall
xchg
or
mov
movsb
divb
mov
imul
mov
jecxz
xchg
movsl
in
outsb
mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
in
mov
rorl
sbb
arpl
loopne
pushl
sub
inc
ja,pn
sub
in
aaa
out
or
fcompl
or
jne
push
into
imulb
sbb
sbb
incl
les
mov
mov
mov
dec
lahf
mov
jmp
mov
ret
adc
mov
sbb
lock
pop
leave
ret
cmp
add
scas
jmp
mov
andb
out
std
fwait
in
insl
out
les
or
lds
sub
popa
enter
lret
sub
outsl
int3
int
into
push
xlat
pop
rorb
shll
shlb
shll
aam
pop
mov
inc
aad
add
cmp
pop
fdivs
fnstenv
scas
jmp
fidivl
fisttpl
push
add
pop
loop
mov
arpl
in
in
out
out
jmp
ljmp
jmp
scas
in
aaa
lock
pslld
repz
scas
jmp
hlt
cmc
sbb
add
aaa
clc
stc
dec
mov
cli
pop
sti
js
cld
je
mov
lock
xor
sub
mov
mov
ja
dec
dec
mov
in
or
jne
mov
or
add
rorb
fsubrs
pop
lods
cmp
je
jg
push
inc
add
sub
push
mov
sbb
div
loope
adc
mov
pop
push
pop
je
cs
ja
outsl
and
adc
or
or
and
cltd
or
adc
and
pop
adc
addr16
xor
or
arpl
push
addr16
mov
mov
cmp
jne
stos
or
add
fsubrl
pop
push
sbb
or
loope
jmp
cmp
push
push
push
inc
fistps
adc
pop
ret
movsbl
arpl
and
push
jb
insb
pop
pop
ret
jmp
pushl
daa
mov
or
divb
push
push
xor
mov
test
je
jecxz
decl
mov
sub
inc
inc
mov
test
mov
jne
andb
ss
jb
push
inc
push
xor
movzbl
inc
cmp
jl
clc
idivl
std
pop
jg
add
adc
inc
cmp
shll
arpl
jg
cmp
je
sub
cmp
mov
pop
mov
pop
adcb
jbe
sub
xorl
or
clc
add
sub
pop
inc
or
stos
shlb
xchg
jp
push
pop
cmp
outsb
mov
gs
std
mov
push
push
push
pop
movsl
iret
insl
pop
and
out
push
gs
testl
pop
jne
cmp
push
insl
call
inc
inc
sub
or
push
inc
sbb
xchg
dec
inc
nop
gs
lcall
mov
std
lods
jae
dec
mov
incb
mov
cltd
mov
jge
lea
push
imul
clc
cmp
cmp
jl
dec
loope
jnp
popa
pop
jbe
inc
shl
movsb
lods
std
push
push
jbe
push
inc
cld
mov
fdivs
jmp
or
add
mov
bound
dec
daa
in
mov
xor
cmp
jbe
test
adc
ret
mov
push
clc
fdivs
jl
mov
push
or
shl
nop
mov
pushf
mov
stos
insl
lea
push
jmp
popa
out
outsl
adc
adc
adc
xchg
sub
ja
dec
call
push
neg
movsl
add
add
add
push
fidivs
fisttps
loopne
mov
outsb
int3
push
add
dec
shll
add
cs
xlat
into
xor
add
dec
bound
xor
shll
dec
imul
popa
jb
inc
add
mov
sub
add
and
dec
ret
imul
lds
mov
push
enter
mov
cltd
lock
mov
push
or
dec
decl
mov
js
lods
inc
clc
mov
aaa
ss
add
jmp
testl
inc
cmp
ljmp
lock
mov
xchg
subl
shr
dec
mov
in
pusha
adc
outsl
pop
sbb
push
addr16
loope
push
pop
ja
add
jg
leave
xorb
test
inc
jp
jae
xchg
or
or
or
jne
stos
push
push
mov
inc
push
cmp
jnp
xlat
xor
daa
mov
ret
adc
divb
hlt
and
push
js
push
pop
clc
sub
jns
inc
js
iret
jmp
fdivrl
jne
negb
or
jmp
push
add
scas
push
dec
cmp
and
je
adc
or
adc
ficomps
or
jne
or
and
add
mov
cmp
or
inc
je
call
je
or
ret
sub
sti
sub
lock
xor
cmp
shl
lahf
inc
into
xchg
sub
cmp
sbb
imul
cmp
mov
fsubs
push
mov
je
dec
movb
jne
add
aaa
xor
mov
xor
or
inc
cld
xchg
imul
adc
test
add
mov
dec
mov
sub
push
rcrb
mov
nop
aam
push
outsb
test
mov
test
add
mov
lcall
and
gs
cmpsb
imul
xor
jmp
pop
push
push
push
mov
lds
xor
ret
inc
les
dec
push
mov
add
lods
lods
pop
push
inc
xlat
pop
scas
adc
and
dec
mov
mov
mov
mov
mov
rcl
jnp
add
imulb
jg
mov
mov
adc
and
cld
dec
or
loop
mov
repnz
es
test
or
nop
cmpsb
lock
ss
nop
mov
es
add
inc
dec
repnz
xor
nop
and
clc
testl
mov
outsl
loop
adc
add
or
cmp
push
mov
pop
ret
mov
movl
mov
push
push
shll
loope
add
xchg
adc
push
out
clc
cld
jmp
sbb
mov
pusha
push
lea
imul
neg
adc
jmp
mov
pop
jg
in
jmp
jns
push
outsl
xorl
xor
push
mov
clc
mov
imull
lret
fcoms
fistpl
clc
jne
clc
mov
sub
push
push
mov
daa
popf
leave
fwait
or
cmp
add
outsl
push
pop
push
into
sbb
push
inc
cmp
cmp
xor
cmp
add
xchg
mov
inc
pusha
aam
sbb
into
call
test
xchg
jmp
test
pop
jmp
in
xchg
in
pop
jmp
pxor
pop
lock
mov
jb
imul
fcomps
xchg
xor
in
jmp
ficoml
adc
lods
pop
mov
ljmp
pop
imul
mov
enter
or
cmp
sub
adc
adc
push
les
dec
push
loop
push
push
cmp
push
std
fcomps
lods
iret
or
inc
ret
adc
pusha
inc
pop
push
mov
outsl
pop
in
enter
sub
ret
test
dec
sbbb
fmuls
adc
adc
xlat
inc
sub
daa
mov
adc
cmc
aam
sub
dec
lea
addr16
rcr
pop
mulps
add
test
push
mov
adc
or
fst
push
sub
push
in
rcr
jbe
or
adc
or
ljmp
outsb
cld
jp
movsl
movsw
movsb
push
inc
pop
ljmp
test
xchg
sbb
jbe
mulb
xchg
inc
addb
xor
clc
xchg
push
adc
jp
mov
mov
and
shll
cmp
pusha
push
and
sbb
or
cld
mov
daa
dec
jb
xchg
inc
mov
lods
push
fists
data16
xlat
fdivs
add
je
mov
xor
fimuls
js
jnp
pop
pop
pop
fdivrp
idiv
cmp
jle
add
jl
popa
jle
jp
add
adc
cs
jl
pop
add
cwtl
jb
jo
imull
out
pop
in
jecxz
push
pop
lret
cli
xor
xorb
cmp
mov
xchg
stc
adc
stc
movsb
cmp
lahf
adc
sti
adc
cld
je
mov
andb
pop
adc
inc
dec
adc
push
jne
mov
test
femms
sub
shll
popa
test
data16
iret
sarb
push
lcall
out
mov
fisubrl
inc
jmp
pop
mov
xor
push
daa
jmp
nop
stc
daa
inc
test
outsb
jbe
pcmpeqw
movsb
and
fsubrl
inc
push
dec
and
add
fs
xor
mov
outsl
sbb
cwtl
sti
ljmp
lea
test
xchg
cmp
jo
inc
add
out
push
lret
pop
divb
inc
push
out
lcall
mov
shlb
icebp
inc
repnz
inc
shll
repz
cmc
scas
notb
cmpsb
imul
lret
lcall
gs
imul
or
lcall
jo
fsubrs
cmpsb
jmp
lcall
jo
inc
stos
sbb
xlat
lds
mov
cmp
cmp
push
mov
jbe
imul
jmp
jnp
cmp
inc
shrb
rorl
bound
es
aam
inc
mov
in
xor
enter
lret
or
or
aas
fiaddl
inc
cmp
pop
dec
pop
adc
mov
push
and
call
mov
adc
cmp
je
add
jne
popl
mov
call
insb
fcomps
or
xlat
pusha
or
sbb
insb
aaa
bound
xor
or
cmp
adc
sbb
push
in
clc
pop
jbe
rolb
add
icebp
int
out
inc
inc
add
adc
push
adc
xchg
fildll
inc
dec
pop
jne
and
decb
xor
dec
xchg
xchg
adc
add
push
addr16
maxps
loope
xorb
je
jmp
cmp
mov
insb
mov
mov
shr
pop
adc
imul
xor
xor
pop
std
in
mov
jmp
insl
adc
pop
mov
pop
pop
adc
ljmp
add
popf
jl
xchg
jp
xor
adc
arpl
push
gs
push
mov
sub
int
push
imul
cld
andb
mov
push
rolb
jle
lock
sub
jne
loope
shrb
rorl
cmp
jae
call
xor
or
push
lock
pop
movsb
add
js
jmp
and
and
add
or
push
aad
testl
or
pop
bt
cli
mov
nop
pushf
mov
inc
pop
mov
pushf
movl
mov
mov
mov
out
xor
xor
std
dec
call
lds
std
inc
lret
icebp
push
call
cmp
inc
xchg
xor
dec
push
outsb
jmp
jl
pushf
inc
add
pushf
push
xchg
fwait
sti
divl
sub
add
jae
enter
sub
or
adc
testl
mov
int
xor
dec
cmovo
pop
testb
cli
mov
cmc
sbb
insb
sub
adc
cmc
sar
mov
adc
and
push
aad
adc
push
sti
pop
xchg
roll
stos
stos
stos
or
ret
inc
push
stos
in
test
cmp
add
test
ficompl
push
push
or
or
mov
pusha
fldl
push
adc
fsubs
fld
cmp
sub
int
pop
xlat
and
out
into
adc
pop
adc
xor
jge
adc
mov
lds
adc
cmc
fstps
cmp
cs
jno
mov
push
mov
mov
je
cmp
popf
push
test
push
scas
nop
cmp
inc
jb
pop
icebp
test
push
inc
add
and
lods
push
mov
int3
and
and
jo
push
add
pop
gs
jbe
inc
imul
and
pop
lcall
jo
roll
jge
out
push
adcb
cmp
adc
clc
test
mov
mov
sbb
push
cmp
pop
insb
or
sbb
and
xor
and
pop
cmp
outsb
fadd
push
cwtl
fdivr
jns,pt
rorl
adc
enter
cmp
jmp
mov
dec
add
lock
fs
and
inc
adc
jae
insb
xchg
jge
lods
adc
push
pushf
out
fisttpll
loopne
mov
in
xorl
fcoms
test
jbe
inc
inc
jae
hlt
or
out
gs
push
daa
movsl
jo
xor
mov
std
adc
rorl
pop
in
roll
pop
push
call
sub
inc
pop
jmp
in
xor
dec
je
ss
in
arpl
ret
push
push
inc
mov
rol
insb
shlb
add
jmp
jp
leave
roll
fcmovb
shlb
std
lea
add
int
stos
mov
push
mov
sub
rclb
aaa
sbb
dec
loopne
fdivr
mov
inc
fidivrl
mov
push
out
or
mov
adc
arpl
sub
pusha
xor
mov
jne
xlat
hlt
pusha
paddb
pusha
fmull
cmpl
add
cmp
dec
ljmp
push
mov
add
repnz
xor
cmc
mov
imul
adc
mov
cs
push
in
in
out
imul
or
mov
xor
cs
es
out
cwtl
jmp
mov
inc
push
pop
ret
adc
dec
cmp
fnstcw
test
push
adc
rol
pusha
pop
pushf
call
push
in
aam
add
int
wrmsr
jmp
mov
jmp
mov
and
xor
adc
fistps
pop
icebp
xor
fists
inc
pop
ret
int3
jmp
inc
mov
adc
xor
mov
mov
mov
add
cmpxchg
xchg
push
mov
push
sub
cltd
push
push
lods
icebp
xchg
fistpl
xchg
neg
sbb
in
dec
ret
int3
add
add
sti
mov
jmp
add
jae
sub
mov
push
cld
mov
or
loope
or
add
pop
push
dec
sub
or
stos
adc
rol
jge
movsl
sti
sub
or
inc
ja
cmpb
mov
sbb
xor
add
clc
adc
push
xchg
cmp
sub
fcomi
jecxz
jl
inc
insb
cld
fildl
mov
movsl
xchg
pop
out
cmp
fs
pushf
mov
add
dec
in
xor
jg
push
and
call
mov
inc
or
inc
mov
or
jbe
aam
ljmp
aaa
imulb
pop
ljmp
sub
rcl
jnp
sti
push
xchg
dec
shrb
insb
sbb
icebp
in
xor
sti
or
mov
test
cwtl
insl
mov
pop
fdivrl
aam
loopne
lock
lea
add
iret
and
and
shll
mov
xchg
mov
lcall
sub
negl
je
aas
pop
dec
shll
aam
add
add
add
inc
pusha
xor
mov
mov
ds
sub
adc
pop
ja
f2xm1
xor
add
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
scas
imul
sbb
es
imul
scas
ret
add
mov
and
mov
std
sub
movsb
and
mov
inc
cmovge
push
ret
popa
cs
pop
jle
jae
adc
mov
xor
pop
pusha
and
inc
popa
sahf
in
inc
adc
sti
jg
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
in
outsl
ret
mov
mov
push
push
aaa
shlb
mov
pushf
mov
jg
ljmp
incl
lret
xlat
ss
mov
jg
pusha
mov
mov
sbb
xchg
nop
cmp
inc
xchg
xor
cli
sti
xchg
scas
xchg
xchg
push
jae
xor
push
push
inc
push
push
xor
sbb
add
sub
or
jg
mov
jae
and
fs
or
dec
gs
gs
imul
xor
xor
pop
add
push
mov
add
aas
pusha
pushf
call
mov
js
xor
lea
je
lea
cli
jg
pop
sbb
adc
out
adc
jnp
add
add
push
std
out
call
daa
inc
push
push
mov
call
mov
pop
popf
popa
jmp
jecxz
inc
pop
pop
pop
adc
into
scas
loope
repz
mov
pushl
sub
xor
mulb
jno
pop
aad
jp
jns
jnp
xchg
and
les
into
jecxz
xchg
inc
xchg
rcl
idiv
pop
scas
pushf
sub
jne
jp
aaa
inc
outsl
insl
arpl
inc
std
iret
jle
data16
jae
mov
cmpsl
mov
pop
into
les
fidivrs
out
mov
aaa
and
out
add
mov
mov
inc
inc
dec
inc
sbb
pop
inc
daa
pop
jnp
out
fbld
aam
lret
rol
mov
mov
mov
aas
jno
insb
add
xchg
std
jg
in
mov
popa
arpl
and
shlb
fldl
inc
dec
ss
mov
mov
mov
pop
add
std
enter
insl
outsl
outsl
dec
xor
jmp
lods
mov
fcmovb
and
cmp
mov
outsl
jne
fs
sub
sti
pusha
cld
insl
jae
je
insb
fs
outsb
aaa
pop
jae
jae
gs
fistpl
mov
xor
in
push
push
xchg
insl
imul
arpl
sbb
in
outsl
jo
aaa
fs
add
add
mov
je
push
je
jns
or
add
or
js
push
insl
jg
pop
and
add
outsl
data16
div
or
jae
bound
imul
lea
push
inc
push
inc
pop
dec
dec
inc
push
fbstp
mov
imul
mov
stos
xor
xchg
lcall
mov
dec
mov
subb
and
add
add
inc
std
push
add
push
add
lods
nop
jbe
jo
inc
add
inc
add
or
push
pop
mov
mov
int
mov
push
jb
addr16
insl
and
outsb
outsb
outsl
je
filds
and
outsb
and
inc
dec
push
and
aas
in
aas
fmuls
and
out
fimull
cmpsl
mov
add
mov
out
cmpsb
pop
stos
fbld
pop
mov
mov
mov
movsbl
pop
mov
popa
test
pop
scas
jnp
frstor
mov
sbb
pop
ljmp
mov
dec
add
add
fmuls
and
add
or
sahf
jne
js
add
mov
add
add
pop
add
add
sub
push
jbe
adc
push
add
insb
pop
adc
mov
pop
or
mov
and
subl
or
les
pusha
in
pop
divb
or
jb
popa
je
add
mov
jle
jbe
sbb
cs
nop
lock
jbe
jo
shlb
xchg
data16
pusha
pop
pop
daa
xor
inc
cmp
jmp
jb
gs
outsl
arpl
lock
mov
add
jae
popa
arpl
pop
negl
repz
or
mov
or
enter
gs
loopne
adc
dec
rcr
add
pop
cmp
mov
adc
pop
ja
sub
addb
add
pushl
or
je
mov
jbe
inc
push
and
pop
test
daa
fnstcw
call
mov
das
inc
jge
idiv
stc
mov
mov
and
pop
xchg
rol
sbb
ljmp
and
and
cli
outsb
lods
pop
dec
fisubs
pop
mov
add
decl
and
push
loopne
inc
push
mov
rcll
mov
nop
les
add
cmp
mov
inc
cmp
incl
cltd
mov
cs
repz
fldcw
jl
mov
dec
ljmp
mov
sub
in
dec
mov
ljmp
mov
jo
and
stos
jmp
jl
pop
cmpb
out
mov
pop
lds
inc
sbb
ret
stc
xchg
decl
negl
jne
gs
mov
mov
mov
test
ljmp
cmp
cmp
xor
pop
dec
jp
xchg
mov
jne
decl
sub
mov
mov
push
cmp
push
push
stc
ret
cs
sub
jb
push
sahf
cmp
ljmp
pop
fmull
gs
pop
inc
mov
cld
push
pop
adc
filds
lods
jp
jns
incl
mov
sub
in
mov
push
lahf
cmp
jo
adc
dec
test
xor
lea
adc
out
mov
cwtl
lret
xchg
mov
cmp
cmp
mov
arpl
icebp
stos
addr16
mov
fiadds
gs
sub
mov
push
sbb
xchg
adc
in
push
mov
les
inc
dec
popf
mov
and
out
inc
xchg
xchg
jmp
xor
in
and
xchg
mov
jmp
or
in
rorl
dec
adc
fwait
ss
push
adc
jp
aas
fsubs
imul
inc
fnsave
jp
call
std
xchg
mov
or
sub
test
orb
sub
xchg
adc
incl
xor
fimull
cmp
dec
jp
fldcw
xlat
jmp
stc
inc
lods
push
decl
repnz
inc
lds
mov
mov
test
cmc
inc
push
js
cmp
mov
push
adc
stos
loopne
mov
ss
push
jge
mov
and
push
adc
gs
movsb
test
stos
mov
mov
dec
stos
or
insb
pushf
and
or
mov
hlt
aaa
ds
jmp
loope
leave
inc
pop
xor
xchg
shll
fldt
xor
outsl
fdivr
ljmp
push
daa
dec
movsl
aaa
andl
nop
fucom
cmp
std
ds
popa
repz
inc
dec
push
out
or
adc
mov
fildl
stc
pop
xor
inc
les
lds
dec
iret
xor
out
xor
or
mov
dec
out
xor
cwtl
test
into
or
rclb
ss
lods
sbbl
xor
ljmp
jg
mov
pop
out
push
mov
mov
sbb
loop
rcll
jmp
mov
insb
dec
sahf
pusha
pop
out
dec
frstor
test
mov
lret
icebp
xchg
jg
stc
cmpsb
aad
xor
dec
inc
and
and
xchg
jnp
xchg
loope
lahf
or
push
xchg
dec
mov
fisubrs
scas
loope
std
hlt
fisttps
cmp
add
jb
sbb
mov
iret
pop
outsl
inc
jnp
push
out
call
into
imul
inc
lods
add
hlt
adc
pop
testb
in
fwait
in
xchg
jg
aaa
ret
mov
and
out
adc
mov
lcall
adc
jae
inc
shll
mov
dec
rcrl
cs
ret
jecxz
aas
sbb
ja
idiv
call
ss
movsb
mov
mov
gs
orl
decl
clc
adc
mov
mov
loope
push
xor
jo
call
mov
insb
cmp
in
mov
inc
sub
lds
repz
xor
inc
mov
jno
rol
mov
addr16
pop
rcr
rcr
popf
sub
fdivrs
sbb
cli
call
lea
ss
insb
adc
adc
mov
jg
lcall
stos
test
mov
push
xchg
push
fsubrs
das
shll
decl
pushl
push
fidivs
dec
adc
sub
fwait
xor
lds
pushl
sub
xchg
add
dec
adc
pop
cmp
add
jecxz
push
outsl
xlat
fstpt
mov
sbb
adcb
xorb
sub
sbb
sbbl
xor
add
mov
inc
push
clc
cmpsl
insl
add
push
lcall
cmp
inc
mov
xchg
mov
call
getsec
xor
call
fbstp
cs
call
cmp
sbb
psubw
or
loopne
mov
cmc
jle
bnd
fstpl
roll
push
adc
lcall
scas
mov
push
ret
lcall
pop
jg
push
es
jmp
lret
pmullw
mov
daa
jmp
imul
js
dec
xor
out
jmp
ret
mov
fadds
out
test
mov
sti
mov
in
xor
fstpt
add
ljmp
xor
js
imul
push
cmpsl
mov
cs
pop
cld
ljmp
mov
cmp
xchg
or
or
push
push
sbb
lock
and
fildl
gs
lcall
pop
andb
js
movsl
sbb
push
mov
inc
fwait
inc
mov
push
jnp
pop
ret
call
xchg
mov
lds
movb
adc
decl
jno
dec
punpcklbw
and
cmp
lds
imulb
xchg
loope
xchg
ljmp
icebp
stc
cltd
xchg
stc
fiaddl
cli
sbb
cli
cmp
and
pop
jnp
jmp
jp
cltd
in
ljmp
inc
cmpsl
cmp
fs
sbbl
mov
xor
or
dec
add
fcmovu
or
cmp
xor
ds
pop
jmp
jp
pop
or
pop
js
jbe
pop
mov
loop
daa
fs
test
jg
mov
outsb
arpl
jmp
rcrb
jle
aad
out
sbb
cmpsb
jecxz,pn
lcall
pushf
xchg
jae,pt
movsb
incl
clc
lret
ss
pop
adc
popf
sahf
ss
movsl
iret
and
jae
xor
pop
or
sub
outsl
lock
iret
out
enter
comiss
push
fisubrs
repz
lret
jmp
mov
cmp
sbb
fstpl
mov
aas
add
jg
outsl
std
vcvtpd2psx
lret
shlb
inc
inc
add
incl
repnz
jl
or
andl
ret
jmp
sahf
out
jle
ljmp
xchg
les
xlat
mov
mov
stc
or
fcmovb
mov
outsb
mov
into
mov
jmp
stos
sbb
in
bound
mov
cmp
ss
sub
mov
jmp
lock
ljmp
pop
adc
or
xor
xchg
pop
jg
inc
pop
imul
or
incl
pop
xor
fnstsw
add
mov
icebp
call
dec
dec
fxam
lea
mov
decl
xchg
xor
fimuls
cmpsl
ret
mov
add
int
pushl
jg
aad
neg
jne
push
popf
and
enter
add
ljmp
dec
push
mov
inc
js
xchg
pop
xchg
sar
cmp
nop
dec
jne
fdivl
mov
mov
cmpsb
es
int3
pop
cmc
cmpsl
jb
and
sbb
rcl
dec
lds
mov
cli
pushl
data16
mov
lea
sbb
dec
aad
mov
jecxz
sub
lcall
and
movsl
mov
pusha
insb
add
das
xchg
sbb
adc
popa
movsb
pop
shll
out
sub
dec
mov
xor
lcall
xchg
push
pop
popa
mov
jecxz
and
mov
jns
fiaddl
test
pop
dec
sar
jp
decl
inc
loope
data16
outsb
ja
out
es
repnz
ds
daa
imul
cmp
adc
mov
in
pop
jb
out
jnp
unpckhps
pop
fmul
sub
lret
and
ljmp
xchg
sti
mov
xchg
xlat
adcl
cwtl
inc
decl
out
cmc
jp
jmp
das
dec
out
flds
mov
in
shl
dec
lahf
push
incl
xor
inc
jbe
inc
lods
dec
mov
pandn
jb
sbb
dec
jg
dec
dec
add
inc
adc
and
fcomip
or
pop
sub
xchg
dec
cld
adc
cld
ljmp
sub
sub
lock
push
fsubrl
mov
add
fdivrl
mov
or
outsl
and
imul
incl
lret
scas
ljmp
scas
in
mov
icebp
ljmp
lea
xchg
sbb
jbe
dec
cmp
cwtl
jnp
call
jbe
jne
lahf
loopne
add
pop
mov
mov
xchg
add
js
leave
sahf
ds
outsl
cwtl
jbe
loopne
pushf
arpl
into
repnz
lcall
sub
cwtl
push
and
and
mov
mov
movsl
test
fistpll
out
out
xor
push
or
je
fs
mov
mov
sub
mov
xor
sub
or
mov
xchg
cmp
mov
jg
stc
es
xor
outsl
pop
mov
movsl
scas
push
jae
push
push
mov
dec
add
pushl
xchg
and
cmpsb
ss
jb,pt
cld
in
lds
xchg
push
loope
mov
mov
and
pop
add
lret
fldl
sub
fs
je
js
mov
popf
lret
in
inc
ljmp
scas
aaa
addr16
jp
sbb
fs
insl
mov
int3
fwait
inc
xchg
mov
test
mov
sbb
jge
stos
lret
out
mov
push
cmp
sbb
out
pushl
std
pop
sub
js
adc
loopne
lods
loopne
data16
outsl
icebp
call
mov
cmpsl
pop
inc
mov
ss
sub
adc
stos
mov
and
sub
push
lahf
or
mov
lock
incl
cld
sub
cwtl
pop
addr16
fnsave
or
inc
aam
mov
push
movsb
repnz
das
nop
sbb
mov
out
test
push
and
xchg
mov
cs
jmp
inc
sbb
push
cmp
es
lods
data16
fisttpll
std
jmp
fwait
lods
dec
cmp
test
sahf
sbb
jl
mov
sub
xor
das
std
incl
inc
in
cltd
mov
repz
pop
inc
and
mov
hlt
cmp
call
pop
push
mov
push
lock
xchg
hlt
add
adc
inc
cld
test
adc
lds
les
push
push
repz
cltd
pop
cmp
dec
sahf
mov
aaa
clc
decl
pop
mov
in
das
jnp
jbe
out
mov
negl
das
call
repnz
push
popf
pop
ja
stos
jnp
in
out
lcall
lret
movsb
cmpsb
mov
incl
xor
ds
iret
loop
in
sbb
lods
les
mov
mov
lret
xchg
mov
mov
mov
push
pop
jb
repnz
mov
and
jno
shll
into
pop
nop
sti
movsl
jo
mov
mov
imul
cli
adc
pop
adc
cmp
pop
std
sbb
ret
cld
pop
shl
lcall
loopne
pop
incl
push
or
inc
icebp
sub
xchg
push
rcll
sbb
lahf
mov
test
loopne
cli
inc
adc
jb
inc
outsl
lahf
in
cli
aas
jle
push
enter
aaa
cltd
jmp
cmp
mov
incl
std
jecxz
add
sti
lock
repz
xor
out
push
lahf
cs
lcall
mov
sbb
jbe
dec
call
sbb
sub
mov
ljmp
std
and
rcl
pusha
addr16
lret
aam
jnp
in
fistps
xor
inc
aaa
cli
das
mov
bswap
jp
sbb
decb
aaa
incb
jge
out
negb
sbb
or
pushl
mov
rclb
cmp
and
cmp
movsb
not
dec
out
das
lock
icebp
jmp
cmp
sbb
movsl
push
pusha
xlat
lahf
lds
add
sar
das
and
sbb
lods
stc
fndisi(8087
and
icebp
call
xlat
lds
inc
rolb
lahf
pop
ss
adcb
das
icebp
add
sbbb
jg
jno
add
lds
mov
jo
xchg
add
pop
push
mov
cmp
andb
shrl
call
iret
clc
cmp
xor
out
xchg
rcpps
jmp
push
sti
adc
cmp
cli
jmp
push
xor
pushf
dec
fmuls
ret
data16
adc
mov
pushl
push
aas
std
lock
jns
scas
in
pop
mov
jle
aaa
pop
pop
mov
xlat
popf
inc
push
cld
cmc
imul
jo
mov
or
cmc
mov
mov
loop
rcl
lcall
mov
ror
add
ret
scas
int3
cmp
nop
in
xlat
mov
mov
daa
mov
add
mov
aam
daa
std
mov
test
and
adc
sbb
push
fdivrs
sbb
jg
sbb
inc
cmp
subb
shr
and
sbb
or
jo
jg
sub
mov
inc
xchg
ja
pop
jne
sub
jg
rolb
aas
js
add
and
outsb
jbe
sub
push
test
jmp
inc
sti
stos
and
repnz
pushf
in
lcall
mov
xor
xor
nop
adc
pushf
pop
jg
sti
shrl
cli
and
jg
push
iret
push
adc
in
adc
pop
push
pop
sti
cwtl
push
call
jle
xchg
mov
stos
adc
jp
pushf
sbb
pushl
push
cmp
inc
aaa
cs
cwtl
inc
cmc
mov
add
mov
dec
addr16
dec
and
decl
jl
out
mov
mov
mov
or
clc
fbstp
inc
sar
pushl
ds
mov
aad
roll
and
sub
pop
popa
mov
fcoms
insl
lcall
cld
ljmp
push
push
jg
rol
popf
inc
pop
xchg
outsb
lea
mov
jb
jae
stos
mov
cs
stos
pop
adc
xchg
cmc
jmp
test
adc
xor
movsb
dec
mov
out
je
or
add
ljmp
sti
mov
sbb
fcompl
scas
sbb
cmp
or
jno
cmp
cmp
mov
je
gs
mov
cmp
or
repnz
cmp
js
imul
cmp
push
push
std
data16
mov
cmp
mov
popa
loope
leave
cs
into
cmp
dec
jmp
mov
fimuls
push
dec
incl
into
pop
mov
add
push
jecxz
ret
cli
sub
mov
std
jmp
push
mov
mov
and
in
incl
lods
pusha
divb
lcall
jbe
push
or
loop
lcall
push
adc
or
in
xchg
fs
jb
xchg
pusha
mov
add
or
pop
ja
mov
xchg
insb
fmuls
push
jle
cld
jg
lcall
dec
lds
xor
ss
mov
insl
or
stos
dec
jg
ss
movsl
ds
in
pop
fiaddl
cmp
mov
jg
lcall
mov
insb
xchg
pop
push
add
jle
imul
in
rorb
mov
popf
push
pop
mov
shl
insb
or
dec
in
jg
pushl
addr16
push
mov
shr
rorb
sbb
stc
jno
pop
mov
pop
cmpsb
in
loope
jbe
adc
shll
lds
push
orb
mov
cmp
pop
clc
pushl
das
push
aas
inc
pop
dec
loop
pop
aam
cmp
pushf
jl
rclb
adc
scas
add
in
cmp
outsb
sub
xchg
int
int
cld
jg
sbb
or
ljmp
out
dec
loopne,pn
mov
xchg
or
mov
xor
fbld
clc
movsb
xchg
outsb
push
push
cmp
sbb
ja
push
or
pop
mov
mov
out
popa
sar
cmp
ja
pop
jo
sub
testl
scas
incl
cmp
and
and
outsl
icebp
lcall
jl
stos
xchg
fsubrl
mov
sbb
and
push
push
sar
jg
sub
cmc
in
jle
sub
mov
lret
pop
xchg
jle
adc
ljmp
out
pop
mov
aas
mov
arpl
mov
xor
inc
lock
ljmp
add
push
adc
and
into
xor
ljmp
cmc
out
inc
data16
xchg
loope
mov
jg
jmp
cwtl
mov
jmp
pop
out
mov
inc
xor
lahf
cmc
adc
cwtl
hlt
push
mov
or
je
pop
mov
mov
decl
clc
pop
and
stos
inc
and
mov
inc
pop
lahf
outsb
jl
adc
xchg
ss
fwait
adc
dec
mov
out
icebp
addr16
lcall
test
cmp
mull
dec
aaa
xor
hlt
rolb
jne
jbe
loopne
xchg
cmp
mov
sub
scas
insb
neg
add
mov
jns
or
out
xlat
fdivr
sbb
mov
bound
dec
lock
mov
repz
pop
dec
loope
xchg
push
mov
mov
sbb
push
imul
test
rcrb
dec
gs
in
test
incb
jg
push
jnp
cmpsb
std
scas
mov
fwait
movsb
xor
adc
out
adc
sbb
jle
jns
insl
xorl
sarb
dec
outsl
out
fists
in
jg
decl
mov
in
sahf
dec
pop
push
inc
adc
jmp
and
sbb
jo
add
cmpxchg
movsl
push
es
rorl
fisttpll
pushl
stc
sti
in
sbb
sbb
dec
sub
leave
stos
test
test
out
add
push
insb
mov
icebp
xor
or
dec
or
xor
mov
cs
fucomip
popaw
adc
sbb
add
cltd
and
push
xor
scas
int
popf
addb
cld
pushl
mov
popa
cmp
repnz
std
inc
in
popf
lock
call
sbb
and
sub
cld
jg
icebp
in
mov
push
jb
mov
aaa
cmp
fwait
nop
mov
sub
in
lcall
les
mov
cmp
add
mov
jbe
loopne
call
adc
jmp
cmc
or
jo
out
fsubp
sbb
das
cmc
mov
test
test
cmp
jg
fidivrs
ljmp
pushf
scas
nop
inc
gs
inc
push
pop
cmp
ja
lea
data16
ret
xlat
int3
jge
or
fnstenv
aad
adc
std
push
dec
pop
and
sti
decl
sub
mov
cmc
arpl
add
decl
xchg
fcompl
push
xor
fildll
call
jecxz
sub
dec
sarb
int3
fsubs
adc
call
call
inc
add
ficomps
dec
xchg
pop
outsb
andb
mov
les
call
mov
fisttpll
inc
movsl
das
std
cmp
dec
mov
push
lds
fwait
adc
push
jp
dec
jl
int3
mov
hlt
push
div
jmp
je
stos
mov
and
loop
inc
into
jnp
sub
clc
das
dec
ficoml
mov
nop
and
and
jge
inc
jg
adc
icebp
les
mov
adc
addl
xchg
push
dec
mov
in
dec
ficoms
mov
call
inc
mov
or
out
in
pop
dec
push
inc
sbb
sub
outsb
jae
mov
or
das
lock
out
and
sti
inc
adc
jns
dec
movsl
inc
and
jo
dec
cmpsb
int3
imul
ljmp
inc
jecxz,pn
mov
sub
iret
icebp
mov
push
repz
call
lock
cmp
add
inc
fst
icebp
lcall
enter
or
mov
jg
loop
ljmp
inc
jns
xchg
mov
and
pop
insb
mov
mov
add
add
divl
xchg
sub
sahf
fadds
push
cmc
daa
outsl
xchg
mov
test
jmp
push
jg
xchg
movsl
insl
cmp
cmpsl
mov
outsl
and
lcall
test
mov
lock
xchg
es
aas
repnz
fwait
dec
pop
in
xchg
mov
add
mov
push
mov
sbb
call
pop
xor
jmp
cmp
mov
lcall
lret
dec
sti
nop
pop
repz
jno
jg
jl
imulb
int3
or
fdivp
cli
pop
mov
bound
stos
decl
sti
sbb
loopne
and
movsl
adc
or
lods
add
pop
push
cmpsl
es
push
sub
push
imul
in
movsb
xlat
pusha
adc
mov
call
jle
jbe
pop
lahf
xor
jmp
mov
cmp
imul
iret
clc
mov
clc
mov
out
sub
or
int3
orl
hlt
push
lock
sub
int
sahf
add
push
sbb
sbb
xchg
jns
decl
std
aas
inc
sub
push
jae
jo
add
sbb
jg
xor
add
mov
cwtl
pop
fisttpll
aaa
stos
mov
ret
std
jnp
mov
push
jmp
fcoml
or
cs
lcall
dec
or
les
addr16
mov
lcall
ret
in
mov
jp
jmp
lods
add
es
cwtl
and
call
outsl
mov
add
ret
sub
mov
call
rcrl
test
push
insb
pushl
adc
push
pop
enter
xchg
cmp
jno
mov
cmp
insb
or
int
sbb
mov
les
fdivrl
out
es
or
bound
xchg
mov
jg
into
enter
adc
sbb
dec
mov
in
or
incl
test
lcall
push
fcomip
test
dec
cmp
mov
jp
lcall
mov
scas
or
and
or
xchg
leave
incl
xchg
jne
cltd
and
int3
addr16
jmp
ss
mov
jmp
mov
pop
jl
mov
adc
je
fisubs
mov
adc
cmpsb
lret
pop
jmp
div
shll
jg
jge
enter
jb
int
mov
rcrl
jg
loopne
mov
xchg
push
jne
or
decl
inc
xor
insl
pinsrw
pop
call
jmp
sub
cld
push
push
fcmovnu
clc
push
xchg
fldl
xlat
dec
inc
sub
pushl
les
xlat
pop
mov
imul
xorl
push
mov
sahf
call
ret
fistl
adc
or
sub
std
or
lods
cli
call
xchg
pop
mov
in
adc
sbb
sub
data16
mov
sti
cmp
mov
or
cmpsl
jo
mov
aam
mov
inc
lock
cld
sbb
mov
jmp
add
adc
lea
sub
test
sub
pushl
xor
ja
mov
aas
pushf
das
scas
subb
cmp
clc
xchg
xchg
fsubl
lcall
mov
pand
push
pop
and
and
jg
jmp
test
inc
fsubr
inc
mov
ss
inc
repnz
popf
in
lock
sbb
pop
aam
mov
inc
ds
cmp
sub
mov
pop
cmp
inc
fisubrl
dec
xchg
mov
push
dec
xchg
xchg
jns
call
xchg
mov
lods
call
cmp
dec
and
pop
loopne
in
aam
adc
jge
popf
shll
loop
loope
jno
xchg
in
cld
adc
das
dec
jmp
cmp
adc
ljmp
jmp
jle
out
xor
sub
mov
out
pop
pop
jecxz
cwtl
addr16
fucomip
ss
pop
push
dec
or
cmp
test
in
imul
inc
dec
dec
mov
xor
addr16
dec
xchg
cmpl
lods
adcb
cmp
add
mov
mov
ljmp
jp
xor
movsb
cmp
or
aas
mov
jae
es
pop
sub
lcall
inc
addl
jbe
pop
enter
incl
inc
lods
mov
out
sub
outsl
cli
frstor
test
mov
jl
das
mov
jbe
decl
xchg
test
adc
stos
sbb
inc
xor
jg
hlt
inc
jne
and
mov
jp
mov
pop
jecxz
fdiv
pop
das
cmc
mov
in
or
jp
inc
rclb
loopne
ret
or
aaa
repnz
xor
cmp
je
jns
dec
pop
mov
and
rcl
adc
jp
sbb
push
loope
add
jmp
or
or
push
add
and
mov
sbb
scas
add
pop
mov
fisubrs
or
mov
ljmp
add
and
addl
lods
in
jecxz
ret
clc
cli
mov
adc
pop
cmpsb
push
cs
je
movsl
in
jg
cli
fnstcw
out
repnz
push
mov
cwtl
and
mov
mov
and
int3
xchg
inc
aaa
in
loope
stc
jg
dec
lods
pop
adc
inc
dec
int3
jae
subb
lcall
imul
inc
and
push
mov
or
loop
mov
mov
lods
scas
negl
jl
push
push
pop
or
fadds
ljmp
je
js
dec
or
cmp
sbb
adc
mov
into
icebp
mov
push
or
cwtl
aaa
pop
mov
lret
mov
incl
repnz
cmc
mov
out
pop
cmpb
xor
mov
mov
daa
push
mov
inc
jne
stos
mov
ljmp
sbb
out
xchg
pushf
js
lock
outsl
xor
xchg
mov
ret
addr16
jno
or
mov
bound
daa
and
mov
push
ret
and
das
jno
in
and
in
int
stc
xor
push
xchg
call
shrl
fcmovnu
rorb
inc
mov
dec
stos
adcl
jmp
inc
push
pop
or
mov
incl
pop
out
mov
mov
nop
testl
pushf
js
cwtl
sbb
sbb
call
xchg
inc
sahf
pusha
leave
sbb
mov
cmp
std
cli
sbbl
fsubs
sub
and
cmc
int3
mov
xchg
inc
call
mov
xchg
mov
jmp
std
lods
dec
testl
scas
lods
mov
pushl
mov
jae
clc
pop
out
flds
rorl
xchg
sbb
sbb
dec
repnz
insl
repz
fwait
pop
movsb
or
jnp
sub
imul
sub
repnz
fsubl
shll
jne
popa
xchg
fisubs
inc
lret
mov
test
xor
aaa
insl
into
pop
call
push
cmp
pop
or
xchg
or
aad
cltd
test
ljmp
jmp
not
lcall
and
dec
xchg
out
inc
stos
pop
pushf
mov
lret
cmp
push
xchg
sub
adc
repnz
shrb
xchg
jg
fwait
sahf
xchg
or
das
cld
ljmp
je
popf
js
xor
enter
push
mov
icebp
jns
mov
imul
fcoml
sbb
pop
push
fwait
mov
sbb
cmc
inc
jmp
and
mov
je
lds
add
call
pop
ljmp
loop
dec
repz
sub
pop
loope
fwait
pusha
das
cmc
sar
xor
xchg
les
ss
loop
pushf
nop
pop
decl
call
mov
sbb
movsb
cltd
pop
sub
int
out
pop
sub
mov
std
les
mov
out
jmp
out
mov
adc
cli
call
jo
pop
dec
in
leave
loopne
mov
adc
mov
stos
push
cmp
mov
and
pop
fdivrp
sbb
mov
in
repnz
mov
xor
fldt
pop
jg
inc
cmpsb
mov
mov
sub
dec
ljmp
cmp
mov
inc
push
adc
or
sub
jae
xchg
test
mov
xchg
incl
push
xchg
mov
jle
dec
pop
popf
mov
mov
test
clc
mov
mov
jns
jmp
mov
sbbl
movsl
outsl
sub
std
ret
dec
sub
xchg
adc
add
ffree
sub
ror
enter
rcll
pop
test
decl
inc
mov
push
or
mov
incl
push
dec
testl
rcr
add
adc
js
lcall
repz
mov
addb
clc
jbe
cltd
nop
subb
adc
mov
jmp
xor
movsb
imul
inc
into
jg
adc
mov
mov
decl
add
add
pusha
jmp
push
jbe
sar
jg
jmp
out
out
jmp
mov
js
fst
inc
cmpl
call
mov
icebp
xchg
ret
sub
in
lret
mov
in
std
out
pop
mov
addr16
and
movsl
pop
daa
sarb
fmuls
push
pop
stos
in
jg
addr16
es
cmp
push
adc
jo
add
testl
jge
cmpsb
adc
inc
xorl
ljmp
test
inc
add
fistl
lcall
insl
dec
cmp
repnz
dec
cs
les
lds
ficoms
cmpl
decl
mov
cmp
and
adc
incb
dec
push
jg
sub
mov
movsl
mov
or
cltd
es
xchg
sbb
ljmp
and
mov
out
hlt
je
mov
or
ds
fstps
sub
sub
rcrb
aaa
pop
xchg
cmpsl
xchg
pushf
cmp
push
jg,pt
test
add
cmp
shrl
imul
adc
ljmp
cmpsb
cmp
or
int3
mov
sub
sbb
xor
idivb
jge
xor
pop
in
fwait
cli
mov
stos
mov
inc
enter
test
mov
jns
jl
nop
mov
scas
cmpsb
mov
cmp
xor
mov
stos
jg
fidivrs
xchg
add
mov
xchg
incl
and
or
or
xor
inc
cmp
pop
shlb
dec
mov
pop
dec
cmpsb
jnp
roll
or
rclb
ret
pop
ljmp
mov
cmp
cmpsl
mov
aaa
dec
xor
dec
cmp
insl
jne
jge
push
xchg
pushl
cmp
or
pop
push
andl
mov
test
sarl
movd
or
sbb
sbb
mov
and
enter
pop
jmp
mov
pushl
insb
mov
stos
insl
loop
adc
jl
gs
mov
nop
mov
mov
stc
test
xor
pop
cld
mov
xlat
lock
mov
jno
ljmp
jge
pop
jp
dec
mov
mov
and
add
push
les
or
decl
rol
ret
fwait
repz
sub
addr16
lcall
mulb
fisubrl
or
pop
std
ljmp
push
mov
fldl
orb
fdivrl
scas
inc
inc
call
sub
xchg
and
mov
jle
add
je
cmp
fwait
mov
popa
cmpsl
jns
lods
sbb
fcmove
in
xor
mov
xlat
lret
lods
rorb
push
incl
or
lret
out
jg
or
sbb
mov
jmp
pop
fadds
icebp
cwtl
orl
subl
push
shl
jae
sub
sbb
xchg
bound
pop
sahf
mov
inc
lods
cs
lcall
push
xchg
cwtl
jno
je
test
popa
testb
xor
decl
mov
jns
stos
inc
adc
and
adc
add
test
push
xchg
pushl
lret
cmp
jb,pn
fwait
dec
stos
aaa
or
push
int
outsb
fwait
mov
dec
jle
inc
and
jg
test
pop
jns
adc
hlt
ljmp
sbbl
jno
cmpsb
add
mov
jo
mov
ss
pop
movsb
call
jg
mov
cmpsl
jno
fcompl
insb
push
aam
sbb
pop
mov
ljmp
dec
mov
sub
ss
lea
cltd
push
sbb
pop
stc
ret
lahf
loop
fildl
es
or
inc
gs
mov
xlat
add
pop
cmc
mov
xchg
in
and
xchg
ss
ljmp
cmp
push
popf
loopne
mov
mov
decl
sbb
push
aam
arpl
bound
pop
jo
add
cmpsl
mov
mov
ljmp
icebp
pushf
mov
aaa
arpl
lret
add
jg
mov
or
lock
inc
pop
ljmp
add
fsubrs
jmp
enter
or
pop
mov
movsw
sti
fnstenv
gs
cmp
arpl
lret
jne
enter
pop
xor
idivb
call
clc
call
fsts
xchg
mov
shr
sbb
jne
push
outsb
mov
add
and
icebp
sbb
test
icebp
xor
xchg
lea
je
xorb
mov
dec
pop
adc
ret
cmp
add
aad
std
inc
add
movsb
fldenv
jecxz
mov
jne
xchg
sbb
ljmp
ljmp
dec
mov
adc
mov
gs
xor
bound
lock
lcall
call
dec
out
mov
inc
inc
nop
jl,pt
das
sti
and
lret
xchg
mov
std
cmp
sbb
mov
adc
aas
pop
jle
decl
sti
fildll
jmp
outsl
inc
xor
dec
sbb
adc
out
sub
stos
xor
adc
std
test
into
in
outsl
sbb
int
xchg
mov
adc
rorl
movsl
imul
fwait
outsl
nop
jg
popf
stos
pop
sahf
movsl
mov
mov
add
outsb
mov
jg
ficompl
xorb
fbld
push
cmp
dec
jnp
pop
or
in
dec
jg
or
jecxz
addl
fimull
fildll
fimull
fstl
cmp
xor
jl
out
pop
aaa
jg
jle
mov
and
lret
mov
fwait
jb
mov
or
pushl
dec
add
scas
mov
loope
scas
cs
push
mov
clc
repnz
lcall
aas
movsl
movsb
jnp
cmp
lods
and
outsl
sub
jg
call
inc
frstor
mov
les
hlt
add
decb
add
imul
lcall
mov
pop
pushf
lods
jnp
mov
add
sbb
mov
jmp
iret
cmp
jns
adc
sbb
jmp
cmp
jae
sub
cmp
dec
std
dec
adc
mov
jns
xor
pop
arpl
call
lcall
push
sub
lock
pop
push
push
add
sub
ljmp
ljmp
into
adc
mov
dec
loop
lahf
push
adc
add
and
movb
sub
pop
xchg
dec
xchg
xlat
fs
push
aam
adc
sbb
and
adc
jg
cmp
roll
sub
inc
push
lea
cltd
in
jle
ljmp
xor
xchg
mov
adc
cmp
mov
ds
cmp
jns
aad
sub
mov
aad
ret
jle
cwtl
or
xchg
sbb
and
xchg
or
call
in
inc
sub
push
scas
mov
popa
cmp
sbb
fnstsw
mov
pop
mov
add
fwait
in
mov
cli
in
pushl
movsb
es
addr16
stos
fnstsw
pop
jno
insb
fcmove
mov
lcall
push
sbb
outsb
sarb
sub
pushf
sbb
jecxz
jno
lret
or
inc
sar
push
jg
pop
jbe
adc
test
ret
inc
repz
lcall
mov
sub
scas
push
cmp
inc
cwtl
sti
jb
dec
add
lcall
jmp
out
jbe
inc
cmp
push
push
xlat
cmp
mov
aas
sub
fiadds
test
das
cmc
call
ss
lret
jmp
jp
sbb
mov
lods
mov
inc
in
cltd
push
xchg
mov
lret
cmp
decl
loop
mov
or
inc
inc
div
inc
add
fidivs
adc
incl
fs
add
fs
fadd
je
dec
dec
leave
je
je
xchg
xchg
fildl
inc
pop
enter
cld
jge
xor
outsb
dec
std
and
je
push
ljmp
pop
push
hlt
and
outsl
xchg
or
or
cli
adcl
ja
push
sar
inc
js
and
ret
inc
ficomps
clc
and
outsl
or
mov
mov
xor
ljmp
repnz
mov
inc
pop
pop
cmp
stos
call
fcmovbe
or
lcall
fidivl
push
in
test
push
sahf
add
mov
les
pop
ljmp
mov
jnp
movsl
pop
std
mov
push
shrl
mov
push
mov
push
in
dec
push
xchg
and
dec
add
and
test
sbb
sub
fnstcw
sbb
jmp
inc
jmp
fstpt
fs
ljmp
ffreep
insl
push
adc
dec
popa
test
sub
sbb
in
repz
jmp
sub
fadds
fidivrl
cmpl
xchg
stc
fld
pop
cmp
out
fnstenv
ja
iret
call
jmp
ljmp
and
adc
xchg
sbb
daa
fwait
rcl
and
cmpsl
or
cld
jmp
nop
lods
out
aad
adc
mov
cltd
arpl
pop
or
xor
stos
cmp
mov
daa
push
inc
xor
jecxz
adc
xor
lock
pop
call
xchg
and
sbb
filds
push
xor
incl
sbb
cli
imul
mov
inc
pop
cmc
outsl
adc
or
dec
movsl
mov
pop
ljmp
and
fs
pusha
sbb
lret
bsf
mov
lock
insb
sbb
add
cmp
shr
shlb
xor
imul
jg
pop
idivb
pop
testl
dec
xlat
push
pushl
adc
mov
push
mov
mov
movsl
stc
mov
add
cmp
pushl
inc
sub
lds
cmp
sbb
mov
cmp
nop
ret
nop
adc
outsl
incl
fdivr
cwtl
rcr
int3
test
lods
sub
cwtl
pop
lcall
push
sub
loope
fwait
xchg
sub
jmp
pushl
ret
xchg
sbb
in
in
xor
mov
or
push
jmp
inc
push
rol
test
push
fcmovne
and
mov
test
jno
inc
fnsave
mov
int
hlt
lret
cmpsb
imul
and
sub
call
fldt
dec
and
in
and
loope
dec
fwait
pop
push
stos
lret
cmp
rol
mov
loope
es
in
dec
jb
sbb
push
lea
jmp
test
fisttpll
imulb
loop
and
pop
nop
or
xchg
int
fistl
cmp
add
invlpg
lods
nop
in
gs
andl
pop
jne
stos
jl
enter
jmp
ljmp
sbb
cmc
adc
mov
ljmp
mov
fwait
dec
or
cwtl
test
sbb
and
xchg
fsubp
jae
mov
incl
xchg
push
fwait
jne
sub
cli
adc
dec
daa
arpl
incl
jg
je
sub
lcall
push
pushf
fdivrl
int3
fildl
ret
in
insb
arpl
stc
es
ljmp
lock
aam
cmp
pop
je
add
fldl
ss
out
or
loope
jns
mov
mov
or
jmp
lcall
push
outsl
cmc
inc
or
mov
xorl
je
std
mov
insl
test
jmp
out
jo
inc
fs
and
mov
lods
mov
fbstp
sub
jno
outsl
rorb
jmp
or
push
movsl
test
decl
out
ljmp
and
jg
cmp
stc
adc
imul
adc
ljmp
adc
sbb
dec
test
lcall
or
sbb
add
decl
aaa
and
cmc
test
cs
hlt
jecxz
jns
jg
or
das
lret
xchg
xchg
loope
cmpsl
aaa
pushl
ljmp
mov
xchg
cli
jno
pop
mov
or
and
lds
mov
sbb
lea
lods
leave
iret
sub
fucomip
fwait
push
js
test
scas
mov
das
inc
pop
das
in
cmpsb
stos
jg
incl
pop
orb
or
push
adc
call
push
lcall
inc
push
xchg
xchg
cld
fst
test
and
ud0
add
jge
dec
gs
mov
push
sub
cmpsb
xchg
leave
jmp
lcall
inc
jle
test
ss
pop
mov
xchg
mov
insb
insl
mov
cmp
outsl
mov
testb
decl
das
add
mov
xchg
ret
in
or
leave
jp
fucomip
fidivs
ds
imul
mov
xchg
cli
xchg
clc
push
or
stc
sbb
aad
pusha
xor
and
pop
int3
push
xchg
gs
jg
dec
xchg
mov
outsl
into
xor
ds
popa
lods
mov
push
add
hlt
jg
dec
xor
inc
insb
mov
adc
incl
dec
gs
lcall
lods
lret
mov
sahf
xchg
jg
aad
pop
lret
rolb
cmpsb
jle
fldcw
loop
mov
cmp
sar
call
in
into
addb
stos
ds
push
popa
inc
fisttpll
in
mov
rcr
pop
stos
stos
jp
call
lcall
loop
insl
repz
ss
call
fdiv
cmp
jbe
shlb
inc
xor
in
ds
je
lock
push
sub
shlb
mov
ja
adc
cli
jmp
and
idivl
sub
push
jnp
outsb
inc
dec
pop
push
gs
call
imul
xchg
inc
lret
or
nop
cmp
cmp
icebp
decl
pop
pusha
aam
and
sbb
push
jmp
int
or
lock
lcall
cwtl
in
cmpsb
lret
aaa
xchg
out
mov
incl
nop
fnsave
fsub
outsl
pop
or
outsl
aaa
cli
cmp
mov
dec
jb
out
mov
mov
icebp
push
outsl
hlt
in
stc
inc
in
call
test
mov
lret
mov
das
lock
inc
push
jle
lret
sub
movsb
rol
jno
incl
mov
rcrl
xchg
dec
scas
pop
test
adcb
ljmp
or
jg
js
in
adc
or
adc
sub
add
xor
inc
sub
add
daa
lds
mov
fistps
push
ljmp
pop
aad
push
cmp
sub
test
add
icebp
xor
fildl
jmp
scas
rcll
popl
nop
lods
xor
dec
jp
jge
xchg
cmc
add
mov
mov
lds
test
and
sbb
in
cmpb
mov
sub
xor
xor
ljmp
inc
or
fs
sti
cmc
mov
repz
fdivl
decl
pop
aam
cmp
scas
xchg
ja
pop
sbb
jnp
mov
popa
dec
lods
pcmpgtd
or
xchg
jbe
jb
xchg
jne
and
lret
cmp
sub
inc
inc
inc
mov
inc
cmc
neg
mov
movsb
pop
and
into
inc
shl
sbb
mov
push
xchg
lea
aaa
movsb
mov
pop
mov
cld
pusha
movsl
ret
push
and
cs
jbe
or
mov
jmp
adc
mov
ljmp
mov
mov
subb
jmp
cmp
insb
mov
rcr
and
and
outsl
lock
inc
dec
push
pop
dec
add
push
xor
aaa
in
dec
sbb
push
idivb
ljmp
repnz
jl
lds
mov
jbe
adc
jmp
movsl
jne
bound
lret
push
or
and
lret
into
and
jns
xlat
sub
call
decl
xchg
adc
pop
adc
mov
sub
mov
outsl
out
add
mov
fs
xor
add
call
cmp
repz
cmpsl
pop
xchg
icebp
sub
adc
call
imul
cmpsl
scas
push
and
jo
test
rcrb
cltd
mov
sarl
fnstsw
popf
sub
cmp
inc
repnz
push
adc
wrmsr
add
mov
hlt
lgs
cltd
test
es
jecxz
icebp
in
and
lds
imul
mov
test
mov
lods
ja
arpl
outsb
mov
cwtl
dec
jge
or
mul
arpl
lcall
xchg
or
mov
movsb
divb
mov
imul
mov
jecxz
xchg
movsl
in
outsb
mov
std
jg
insl
mov
inc
daa
fiadds
insb
push
inc
ret
pop
sub
xor
pop
jge
lahf
push
sub
jg
add
out
lcall
enter
shlb
mov
into
es
aad
mov
rcr
sbb
xchg
je
test
pop
aam
sbb
sar
aaa
fdivrp
sub
ljmp
jg
or
mov
cmpl
imul
adc
mov
cli
cmp
popa
dec
xchg
inc
sub
in
jg
adc
pop
test
in
lcall
sbb
add
jp
mov
test
mov
push
test
cld
sub
jbe
xor
cli
std
cs
in
leave
movsl
or
mov
lcall
dec
add
adc
into
jno
rcrb
mov
jae
jae
pop
fistpll
cvtdq2ps
fisttps
push
jns
dec
int3
inc
xor
cli
mov
jmp
xchg
adc
sbb
sub
lcall
leave
mov
sbb
jp
in
stos
pop
mov
adc
outsb
mov
pushl
mov
and
leave
out
push
mov
std
hlt
loope
adc
ljmp
pop
pop
mov
xor
mov
fistps
clc
repnz
sub
decl
repnz
inc
cmpsl
push
ret
out
repnz
in
sub
out
pop
fs
fidivrs
mov
or
mov
test
dec
cli
popf
xchg
push
popf
sarb
scas
adc
decl
jne
inc
cmp
ljmp
lock
fdivrl
lcall
or
push
xor
fadd
and
jo
fisttps
cli
sub
push
pop
les
push
pushl
insb
jbe
subb
sub
adc
scas
ljmp
stos
ss
mov
ror
outsl
push
mov
fisubs
loop
mov
data16
decl
jecxz
mov
xchg
pop
cli
mov
mov
pusha
ret
xor
mov
mov
mov
out
mov
movsl
mov
insb
lret
push
sbb
mov
scas
test
incl
sub
fcomip
push
add
fisttpll
test
cmpb
ret
mov
lret
incl
movsl
cmpl
lods
mov
and
cmp
jbe
mov
loope
fucomip
call
in
lahf
jle
sub
test
pop
push
jne
jmp
mov
call
loope
cmc
aaa
mov
xchg
jmp
nop
lret
add
pushf
adc
jns
ljmp
popf
ljmp
add
mov
adc
inc
push
push
mov
rolb
jmp
xor
xlat
pusha
jmp
cmp
fisubrs
sti
outsl
ficoml
mov
decl
jo
jge
add
es
sbb
insb
loop
icebp
test
add
lods
addr16
xchg
lcall
xlat
sbb
pop
mull
cli
mov
shr
jecxz
ljmp
gs
test
cltd
xor
dec
inc
xorl
decl
sahf
sbb
sbb
mov
ret
aas
sti
idivl
mov
jl
jno
popa
iret
stc
xchg
addl
mov
std
push
mov
and
xchg
call
ljmp
mov
inc
ror
push
push
clc
int
jae
scas
test
pop
in
jmp
mov
mov
mov
sub
sub
in
aad
cmp
pop
mov
decb
iret
push
cmpl
sub
call
fldcw
fwait
fwait
jns
dec
aas
cmp
adc
aas
ss
sub
popa
arpl
decl
ds
jb
aaa
and
loopne
pop
mov
nop
imul
aas
mov
lods
add
inc
push
divl
cld
push
dec
stos
in
push
shlb
mov
ret
push
popf
jmp
push
movsb
or
push
and
mov
iret
scas
cmp
and
add
pop
mov
xor
sti
or
pop
cli
lcall
es
lea
fbld
sub
dec
mov
in
jmp
mov
pop
into
mov
sahf
addr16
jle
lret
mov
cmp
sarl
fcom
inc
jg
aas
jae
pop
mov
push
mov
pop
popa
ds
push
shlb
dec
push
mov
ss
int3
fwait
ret
mull
cltd
xlat
ljmp
hlt
pop
xor
push
push
push
sbb
push
and
lock
jmp
mov
mov
adc
xlat
adc
enter
sti
stos
inc
adc
incl
lahf
push
into
jbe
or
mov
push
cmpsb
mov
fs
test
pushl
jmp
lods
cmp
dec
cld
jbe
jl
push
and
jb
mov
sbb
int
sar
fbld
pop
cmpl
insb
add
adc
loop
mov
mov
cmovno
or
pop
jns
pop
pushl
movsb
int3
sbb
mov
mov
movsb
in
incl
incl
adc
sbb
jae
fmuls
test
sub
lods
cs
lcall
icebp
insl
ror
jo
sub
push
jmp
cmpl
fnsetpm(287
mov
fistpl
add
sbb
jge
imul
test
cltd
ljmp
bound
repz
out
aam
mov
inc
cli
inc
mov
and
stos
push
jg
fiaddl
push
mov
roll
movsl
ljmp
pop
mov
xor
addr16
repz
and
sbbl
call
fcomps
es
inc
ja
mov
leave
cli
mov
pop
stos
call
decl
lahf
call
push
in
inc
sub
test
out
cli
jg
cmpsb
inc
movsb
inc
pushf
dec
or
cmc
les
incl
sbb
jecxz
and
fimuls
pushf
cmp
add
pop
rcr
call
loop
adc
mov
imul
sbb
lcall
pushf
sarl
into
pop
add
clc
iret
lods
adc
test
xor
int
jle
xchg
or
sbbb
mov
dec
shrb
adc
push
scas
movsb
imul
loope
pop
sbb
jg
mov
es
add
fcmovbe
and
or
popa
sar
adc
add
mov
inc
mov
test
imul
sti
ljmp
push
jae
test
insl
sbb
xor
push
sbb
pop
aam
pop
jg
pop
cmc
pushl
js
hlt
jae
test
xchg
pop
sbb
das
jnp
jg
pushf
fwait
dec
in
pop
add
xchg
movsb
adc
dec
add
repnz
mov
pop
int
and
lock
orl
inc
pop
cli
add
add
imul
add
push
outsl
icebp
in
je
push
xchg
pop
or
pop
pop
sbb
mov
das
js
mov
ljmp
and
and
mov
xchg
cmp
add
xor
sbb
or
inc
xor
ljmp
cmc
lret
std
mov
aam
dec
pop
jg
lds
in
cmc
cs
sub
cs
aas
leave
jg
sub
std
or
pop
mov
inc
imul
xchg
or
sbb
inc
add
mov
and
int3
mov
addr16
imul
mov
fwait
sub
or
hlt
gs
js
ljmp
clc
xchg
cmpsl
sub
imul
mov
call
decb
cmpsl
andb
push
xchg
mov
adcb
es
loopne
cmc
fxch
dec
push
pusha
int3
mov
icebp
in
xorl
sbb
xchg
pushf
cmpl
ljmp
pop
ss
jmp
aam
lds
adc
push
xchg
mov
adc
pop
loop
decl
mov
mov
adc
push
shrl
mov
xchg
enter
fnstenv
jb
sahf
mov
dec
fcoms
pop
incl
mov
lret
xchg
jp
dec
inc
std
or
pushf
shlb
call
dec
pop
fucomip
mov
adc
mov
imul
mov
outsl
sub
test
mov
out
jg
sti
aas
and
push
imul
data16
call
push
jecxz
aam
xchg
outsb
add
roll
cmp
lods
and
sbb
clc
mov
aas
in
ja
int
iret
sbb
and
loop
andl
jg
aaa
sub
inc
xor
sahf
pop
lret
fimuls
hlt
out
call
rcl
jle
sbb
aaa
mov
sar
lret
jl
mov
repz
jg
mov
inc
adcb
xor
ja
daa
mov
inc
lods
and
xchg
pop
mov
mov
lcall
push
aas
and
movsb
sub
pop
call
pop
adc
out
or
movsl
mov
fwait
in
insb
jecxz
out
mov
pop
or
subl
add
stos
loopne
dec
jo
sub
adc
outsl
mov
jmp
iret
in
cmp
and
cmp
mov
fidivrs
xor
mov
sub
dec
loopne
out
jg
pushl
mov
pushf
lock
jnp
mov
outsl
mov
add
inc
inc
pop
mov
loop
out
imul
jo
stc
push
cmp
push
call
clc
enter
adc
adc
dec
data16
mov
imul
mov
or
test
clc
in
push
sub
fs
add
xchg
add
ljmp
mov
hlt
push
mov
or
pusha
lea
sbb
mov
inc
loop
sbb
decl
sub
call
adc
dec
mov
ret
les
pop
inc
push
arpl
movsb
add
inc
fdivs
jg
sub
lcall
inc
add
or
movsb
jp
jmp
ljmp
cmp
ja
mov
call
sbb
push
xchg
imul
mov
in
jo
jl
sbb
lret
cwtl
scas
loop
sbb
inc
or
and
xchg
scas
jbe
loop
call
hlt
repnz
fnstsw
popa
cli
xor
xchg
push
xchg
cmp
xchg
jbe
push
lcall
mov
jp
xor
cli
cmp
pushf
push
mov
popf
dec
or
lret
add
cmpsl
dec
loop
dec
loop
sub
cld
mov
pusha
and
ljmp
mov
cmp
push
fucom
sarl
out
mov
fucomip
out
mov
push
xchg
adc
nop
xchg
in
dec
push
cwtl
mov
push
imul
pop
sbb
jmp
and
xchg
sub
push
mov
std
cmp
sti
test
int3
jo
aas
call
pusha
call
or
pop
xlat
stc
inc
mov
fstl
popa
jb
ja
scas
xor
xor
pushl
inc
or
mov
in
test
ds
push
mov
loope
outsl
hlt
jmp
dec
fnstcw
fsubrs
jb
cmp
aad
cs
inc
lock
test
jle
add
xor
sub
inc
fstps
mov
push
fstp
xchg
adc
mov
sbb
incb
mov
and
jl
cmp
push
mov
cmp
mov
je
ret
adc
adc
fildll
push
leave
xchg
mov
or
call
xor
sub
dec
arpl
jge
mov
mov
loope
clc
mov
push
pushf
jge
icebp
inc
decl
dec
push
pop
jbe
jle
dec
push
sub
cmc
jmp
cltd
inc
cmp
sbbb
jle
mov
out
push
test
std
jl
or
aaa
ss
dec
sbb
lretw
or
dec
fstpt
ret
ds
fmuls
out
inc
jnp
fcom
lock
inc
dec
jge
dec
loope
out
and
insb
in
fidivl
mov
lcall
and
repz
mov
pop
xchg
stc
sarb
out
add
dec
adc
xchg
jno
scas
sti
dec
aad
out
pop
jbe
sbb
mov
pushf
in
mov
mov
jg
vmovapd
add
jne
sbb
mull
cmp
mov
cmp
jmp
push
flds
addl
push
mov
add
icebp
idivb
push
ss
push
lcall
in
mov
push
incl
or
mov
in
xlat
stos
mov
mov
cltd
ljmp
cltd
mov
movsl
pop
bound
mov
shrl
dec
pop
or
iret
outsb
faddl
pushl
nop
pop
xlat
sahf
int3
test
dec
out
lret
in
fld
jno
jl
js
adc
fcomi
jle
lcall
jno
pusha
dec
inc
mov
cltd
cmp
push
xchg
and
inc
clc
sarb
add
mov
cltd
scas
gs
dec
xor
push
jge
ret
mov
mov
mov
jecxz
and
and
pop
enter
fsubl
dec
subb
push
ljmp
xchg
lret
cmpsb
or
push
mov
xchg
fnstsw
lcall
aam
aas
shl
xor
icebp
ficoml
lods
lret
fstps
stos
mov
inc
dec
ja
sbb
jmp
jg
and
push
pop
push
mov
call
shrl
lods
in
incl
sub
dec
xor
ret
mov
mov
pushf
cmpsb
dec
mov
sub
mov
loope
add
rcrl
decl
mov
das
or
orb
in
pop
dec
pusha
jge
mov
push
sub
ljmp
cld
loope
sarb
and
dec
and
jno
insb
outsb
jp
out
jcxz
jg
adc
add
fcom
add
pop
jecxz
jg
mov
loop
fnstsw
sub
inc
cmp
cmpsb
xchg
sahf
jae
mov
dec
mul
cmp
sbb
push
or
insl
jge
cmp
addr16
sti
lds
divl
xchg
sub
xor
push
push
push
out
pop
cwtl
pop
add
or
popf
popa
ljmp
stos
inc
cmp
add
sbb
je
les
pop
das
sarl
sti
leave
pop
pop
jge
out
call
daa
or
sbb
mov
mov
sahf
out
pop
int3
cmp
leave
mov
cmp
insb
mov
fldt
pop
dec
cld
ds
adc
incl
test
roll
and
aaa
inc
aaa
push
inc
mov
nop
std
sub
jge
and
incl
popf
pop
sbb
scas
lock
or
sbb
jge
test
repnz
mov
and
sub
and
in
jbe
outsb
mov
sbb
lcall
lcall
mov
insl
aam
mov
dec
xorl
fldt
leave
cltd
xor
fistl
scas
xor
dec
fmuls
outsl
xchg
jl
mov
fbstp
sbb
pushl
out
test
aam
idivl
push
mov
test
incl
imul
shl
xchg
adc
xchg
cmp
cwtl
adc
mov
dec
inc
xchg
inc
push
lods
dec
call
leave
jnp
sbb
lcall
lcall
out
xor
mov
xor
ds
std
cwtl
sbb
mov
jmp
int
lea
xor
icebp
fcoml
fnstcw
sbb
xor
pushl
repz
dec
or
ljmp
mov
aad
lcall
mov
lret
push
out
jmp
mov
jns
lahf
pop
cwtl
cmp
jmp
cwtl
ss
ret
mov
in
lock
adc
lahf
int3
jl
mov
or
xor
push
jp
mov
sub
rcr
jp
test
xchg
dec
mov
mov
mov
nop
mov
test
inc
call
mov
in
dec
ficomps
cs
insl
in
daa
jns
pusha
shll
data16
decl
aaa
ret
fs
and
divl
jb
int
test
loope
xor
push
cmp
xorl
outsb
cmc
adc
mov
xor
inc
mov
ljmp
mov
movsb
jb
pop
push
sub
popa
xchg
push
dec
ret
and
in
sti
pushl
push
xor
ret
mov
jo
inc
lods
stos
fsubrp
inc
sub
stos
or
call
ss
std
cmpsl
mov
pop
xor
push
and
cmp
sub
pop
jle
and
lcall
sahf
jb
repz
xor
jnp
cmp
repz
mov
mov
sub
cltd
push
ss
ret
xlat
lahf
sub
sahf
xchg
pop
push
fsubp
push
sbb
or
dec
bound
ss
xchg
inc
adc
pushf
lock
and
mov
lods
jmp
pop
xor
pushf
test
jge
decl
inc
jmp
xor
lock
fwait
inc
out
jg
dec
inc
iret
and
xor
stos
in
fisubrl
dec
clc
scas
xor
pop
aad
mov
xor
pop
mov
das
ret
sub
dec
ret
jmp
aam
inc
xchg
sub
ds
stos
andl
insb
cwtl
mov
enter
cmp
and
mov
hlt
lret
adc
jl
push
lods
cbtw
shrl
sub
mov
lods
xor
jg
incl
sti
push
inc
stos
mov
push
add
or
clc
push
push
jge
loopne
imul
ja
stc
push
insl
mov
aaa
push
sub
fistl
xor
rcll
mov
inc
lcall
push
mov
into
insb
les
jb
xchg
sub
inc
dec
faddl
inc
push
lods
cmpsl
dec
inc
adc
std
xor
or
sbb
mov
add
sub
sbb
mov
sub
add
sub
cld
push
pushl
mov
push
sbb
jo
rorb
jb
fwait
sub
in
or
pop
or
jl
sbb
xchg
fistpll
adc
mov
iret
inc
xor
das
mov
pop
jnp
jns
aaa
outsl
nop
jnp
fisubl
aam
cs
push
jge
jge
xchg
clc
inc
cld
dec
xchg
aaa
cli
ljmp
int
in
mov
scas
outsl
xor
pushf
sbb
inc
and
and
pop
inc
int3
add
jg
rcrl
jmp
mov
aam
fmull
cli
mov
clc
ds
call
mov
fs
test
outsb
cwtl
inc
and
mov
ljmp
or
scas
sub
fidivs
sahf
xor
cmp
das
ljmp
leave
arpl
stc
pusha
inc
xor
inc
xchg
jg
repz
aad
jmp
test
ljmp
jne
pop
movsl
loopne
shlb
shrb
shl
xor
or
hlt
add
or
addb
pop
jae
test
mov
aam
hlt
xor
rep
jge
or
mov
jae
pop
rolb
pop
sar
xor
inc
jno
incl
mov
cli
dec
not
clc
push
stc
lds
or
std
cmp
dec
mov
call
ret
sahf
mov
fs
out
movsl
lret
jmp
stos
pushf
es
sub
and
xchg
mov
jg
ljmp
jno
push
and
fiaddl
mov
jmp
xchg
sti
sahf
cmp
ret
pop
mov
into
bound
push
ds
std
jge
mov
push
sub
xchg
mov
jns
jno
ja
pop
imul
cmp
mov
iret
add
std
loope
adc
clc
pushl
adc
js
mov
and
loopne
jb
pop
sar
pushl
shll
lret
mov
ficompl
adc
shr
pop
xor
call
incb
cltd
xor
jl
or
scas
inc
cmpsb
inc
adc
icebp
mov
cmpsl
mov
push
push
jecxz
ret
dec
stos
outsb
nop
dec
sar
jg
call
mov
jo
mov
icebp
jl
cmc
jmp
or
outsl
icebp
call
xlat
jno
imul
mov
ja
adc
call
sub
into
aas
mov
lcall
push
incb
push
nop
call
subl
sbb
std
call
ljmp
xchg
es
mov
pushl
repz
out
ret
pop
and
jb
int3
loop
sub
dec
pop
stos
outsl
or
das
hlt
jmp
push
in
sub
dec
gs
in
fcomps
inc
out
fisubl
ljmp
ret
jno
addr16
xchg
aad
int
rorl
jb
dec
mov
sahf
bound
je
mov
xor
mov
mov
sub
inc
dec
cmp
sbb
mov
sub
cmp
cwtl
sahf
jns
sbb
pop
add
out
into
cmp
jge
or
cld
in
cs
es
and
xchg
movsl
push
jmp
lcall
aas
fimull
pop
add
xor
fwait
repnz
pop
sahf
shll
out
cmp
loope
jmp
outsb
and
and
repnz
xor
in
jb
fcmovnu
adc
cmpsb
push
inc
mov
ljmp
std
popf
out
test
movsb
xchg
arpl
out
xchg
cmpsb
lods
ja
mulb
mov
outsl
in
push
jl
flds
cmp
neg
lret
fsubrl
popa
pop
push
xchg
incb
scas
aam
fists
in
mov
aaa
cli
into
gs
andb
inc
loopew
call
inc
add
shlb
add
aam
add
pushf
idiv
mov
cmpsl
or
repnz
jae
insl
call
add
dec
int
mov
push
ja
hlt
jg
incl
ljmp
aad
push
xchg
or
int
ljmp
cwtl
push
cmc
jecxz
dec
int3
push
jae
jno
cmc
clc
pop
loop
sbbb
pushl
imul
enter
int3
out
jmp
lock
lret
decl
cmpsb
mov
inc
dec
shlb
mov
stc
in
lock
stos
ljmp
mov
mov
dec
decl
sub
jno
test
ds
fs
fucomip
jmp
mov
out
add
repz
mov
fs
or
loopne
and
xchg
and
or
in
ja
stos
lcall
test
mov
movsl
out
jg
lahf
in
mov
enter
inc
push
movsb
or
aaa
lea
pop
mov
mov
call
mov
fbstp
dec
fwait
clc
and
mov
add
jg
cmp
mov
xchg
es
incb
lret
ds
xchg
push
fsubl
imul
lock
fwait
repz
stos
ljmp
pushf
lcall
out
nop
jnp
jle
insb
mov
fdivs
shr
shl
insb
stos
inc
push
mov
xor
cltd
and
enter
call
orl
and
cmp
mov
fcomi
jge
and
in
mov
cmc
cld
pop
dec
and
sub
cld
sbb
sbb
jg
fidivs
and
subl
dec
inc
cmp
mov
mov
jno
ljmp
out
aam
cli
fiadds
sbb
std
inc
in
pusha
insl
roll
das
mov
inc
adc
xchg
pop
cli
movsl
mov
xchg
push
mov
incl
adc
in
inc
in
in
shlb
add
xor
ja
inc
xchg
fs
std
daa
cmp
fadds
int3
lcall
pushl
mov
add
addr16
sub
mov
inc
into
jb
adc
incl
std
xchg
imul
data16
fldenv
icebp
lcall
pop
inc
adc
shrb
fdivl
enter
test
xchg
pushl
test
sub
sub
mov
jnp
jmp
loope
sub
jg
out
xchg
orl
mov
pop
adc
dec
xchg
adc
test
mov
jbe
jmp
xor
dec
jg
and
mov
pop
inc
pop
cmp
adc
andb
mov
jne
test
mov
int3
mov
imul
add
jp
ds
sar
mov
insl
repnz
jmp
xor
xchg
ret
push
pop
nop
ja
push
and
mov
dec
push
push
pop
aam
popa
xchg
dec
mov
lds
aaa
dec
pop
adc
rolb
mov
mov
jae
clc
mov
loopne
adc
dec
jno
decl
sub
push
and
inc
mov
imul
pop
mov
xorb
icebp
push
adc
ret
cmp
sub
imul
mov
inc
jg
jmp
and
leave
adc
xchg
aas
jmp
push
clc
lahf
shrl
xchg
lret
insb
incl
out
iret
mov
mulb
neg
mov
or
cwtl
sbb
or
ljmp
sarb
sub
xor
scas
mov
add
sbb
dec
cmp
js
sti
sar
and
pushl
scas
xor
jle
cli
mov
jle
mov
cmp
scas
lahf
aas
sahf
mov
call
fwait
jmp
push
dec
jle
icebp
repz
pop
call
jp
push
mov
sbb
fisubrs
sti
incl
add
lret
add
or
es
loope
in
pop
xchg
jnp
sar
sti
xchg
sbb
dec
push
mov
cmp
push
xor
mov
cmc
pop
ja
mov
incl
sarb
jl
stc
mov
xchg
pop
add
fs
lcall
nop
lock
jl
rorb
roll
icebp
shrl
mov
pushl
out
dec
xlat
xor
push
or
push
out
pop
cmp
cmp
inc
inc
mov
mov
incl
or
sbb
lock
cmpsb
inc
mov
cmp
rcr
lea
aaa
clc
stc
daa
pop
jecxz,pn
adc
xchg
rolb
jne
xchg
cmp
cs
decl
mov
ss
mov
enter
fcmovb
sbb
int3
pushl
fldenv
jl
incb
enter
adc
adc
in
pusha
inc
cmp
lcall
mov
bound
mov
push
movsl
pusha
pushl
lcall
out
jecxz
insb
jge
sub
jmp
sub
lahf
aaa
clc
jg
push
ror
jo
inc
add
mov
jne
subl
sbb
dec
sbb
leave
or
xchg
inc
mov
xchg
mov
imul
xlat
cmp
xor
pop
out
jae
add
lcall
jnp
gs
pop
push
add
je
sub
jp
xchg
push
push
sbb
jmp
movsl
mov
push
cmp
xor
sub
mov
add
fidivs
in
jg
aaa
push
frstor
mov
and
arpl
push
adc
or
clc
incl
stos
add
cld
mov
data16
adc
and
decl
shll
cld
mov
jge
cwtl
sub
rolb
fildl
mov
fucomip
idiv
mov
movsb
fcoms
ljmp
jae
pop
decl
cld
ljmp
cmp
jne
cmp
stos
aaa
lret
jge
jb
ljmp
hlt
sub
stos
push
sub
inc
ret
fnsave
call
outsl
jmp
mov
nop
imul
jp
int3
lods
cmpsb
or
mov
xor
in
cmc
xchg
orl
jmp
and
xor
outsl
mov
lea
les
and
clc
lods
aas
fdiv
jmp
xchg
cmp
mov
push
movsb
mov
decl
cld
push
lods
out
xchg
push
popa
fcomi
dec
nop
scas
inc
push
push
mov
das
lock
in
push
clc
push
test
jb
clc
shlb
sub
push
fucom
or
mov
cmc
outsl
push
dec
fstl
mov
outsb
test
loope
pushl
scas
cmp
xor
mov
jmp
xchg
ljmp
mull
cmp
in
int
lods
add
or
lds
rcrb
call
inc
mov
adc
mov
adc
loopne
sbb
stos
and
mov
xchg
stos
adc
xlat
es
ss
xor
incl
lret
in
xchg
mov
mov
cmp
sub
or
sbb
mov
pop
pop
dec
lds
pusha
xor
inc
popa
push
push
cli
mov
lcall
nop
sbb
stos
cmpsb
sbbb
adc
jmp
enter
mov
jmp
outsl
popf
dec
mov
in
push
leave
ljmp
mov
test
mov
popa
das
nop
pop
pop
mov
inc
shll
pushl
sbb
loop
inc
orb
cmp
mov
lret
movsl
sbb
adc
das
insb
cmc
lock
clc
and
sbb
sti
mov
push
jge
sub
loope
fbld
mov
inc
cmc
lret
inc
movsl
popf
enter
or
stos
jg
call
xchg
and
orb
jle
jecxz
ftst
dec
mov
hlt
in
and
out
nop
insb
xchg
fmull
xor
cmpl
and
add
dec
popf
sub
nop
cmc
gs
outsl
cmpsb
fld
addr16
ja
fwait
cli
decl
xor
lahf
push
dec
roll
dec
addr16
ljmp
mov
outsl
repnz
clc
cmc
or
jle
sub
les
in
push
mov
leave
add
roll
jg
call
dec
out
out
pop
xchg
inc
in
push
pop
sbb
mov
inc
mov
cmp
add
push
push
mov
fildl
pop
dec
cli
scas
jp
mov
xchg
mov
mov
adcb
mov
xor
lcall
incl
xorb
adc
cmp
test
call
in
mov
mov
mov
mov
sbbb
xor
jg
fcomip
daa
xor
sub
push
jge
fucom
push
xor
mov
push
mov
jg
sub
stc
es
mov
xlat
or
int
decl
pop
and
jecxz
jg
cmp
inc
loope
insl
enter
dec
loop
push
in
call
and
pop
cli
call
repz
and
dec
ret
je
mov
test
mov
aas
adc
aas
push
push
and
cwtl
xchg
roll
mov
in
or
in
jle
lcall
test
push
lds
push
in
push
mov
das
cld
mov
je
setns
mov
pop
xchg
lret
pop
sub
call
repz
xchg
daa
sbb
jo
push
sbb
push
jnp
fucomip
shlb
aas
jae
jb
ror
mov
cmp
jg
mov
insl
cmp
mov
popa
inc
stos
sbb
inc
ds
mov
jg
ficomps
add
cmp
mov
movsb
arpl
stc
push
mov
out
jns
push
in
mov
lret
cltd
xchg
jne
icebp
jg
or
inc
fidivrs
dec
pusha
lret
test
pop
ljmp
mov
scas
add
ljmp
mov
mov
in
inc
lahf
and
dec
mov
xchg
mov
jb
push
incl
testb
pop
daa
or
cltd
dec
aaa
jae
lret
xchg
incl
jl
jg
lahf
repnz
bt
pusha
mov
mov
push
xchg
xchg
decl
ljmp
addr16
and
jg
subl
rcrl
jmp
inc
ja
cmp
test
pop
jp
test
jg
mov
int
aad
push
cltd
and
sarb
adc
and
loop
mov
enter
decb
dec
jnp
cmp
lcall
mov
lea
mov
lock
pop
and
jnp
jae
daa
mov
aas
hlt
fistpll
jae
stos
and
incb
push
cmp
xchg
sub
bound
lock
in
cmp
mov
mov
jecxz
mov
mov
xchg
push
js
hlt
lds
jmp
add
bound
push
fwait
jmp
jle
push
andb
inc
lea
lret
imul
js
push
daa
test
push
xor
inc
in
cmpsb
incl
mov
pushf
stc
sbb
pop
mov
cmp
jne
ret
stos
fstl
jne
cli
jle
addr16
out
sbb
mov
mov
or
jecxz
lods
stc
addb
xchg
nop
or
lods
out
loopne
pop
xchg
pop
add
fcomps
mov
cmpsl
adc
data16
popa
cmp
test
jg
ret
les
inc
fadd
loope
icebp
pop
call
adc
inc
inc
mov
call
lcall
int3
es
lahf
jno
cmpl
or
jecxz
mov
js
adc
jno
mov
hlt
std
pop
pop
cmp
ret
subl
hlt
mov
xor
addr16
inc
mov
movsl
inc
sub
ljmp
inc
call
jg
cli
inc
lea
xchg
mov
ljmp
incl
jge
lret
xchg
nop
ret
dec
scas
adc
lahf
jmp
add
imul
ljmp
xor
lret
push
xchg
into
jns
sub
xchg
int
sub
cltd
insl
push
xchg
in
jmp
jns
test
cltd
insb
mov
scas
push
xchg
sub
fldl
cmp
std
clc
xchg
xchg
jge
insl
and
lret
jg
jo
and
adc
jl
jg
lcall
adc
cwtl
psubb
aaa
iret
jl
daa
and
loopne
addb
shrb
lds
mov
out
dec
adc
enter
push
data16
mov
ds
mov
stc
or
fwait
dec
scas
icebp
adc
xlat
pushf
cmp
sbb
sbb
or
mov
call
cli
int3
jge
out
cltd
arpl
popa
lods
mov
mov
nop
aaa
jbe
adc
or
incl
pushf
sub
rclb
sbb
imul
mov
cwtl
mov
xor
out
pop
or
sub
ljmp
cmc
sbb
jle
ret
test
add
in
pop
jmp
jb
cmp
fucomip
jmp
das
js
daa
out
jne
and
xchg
int3
adc
push
les
jecxz
fucomip
call
and
notl
adc
pop
mov
loop
mov
and
call
xlat
inc
mov
jmp
sub
push
mov
inc
dec
pusha
out
call
mov
push
sbb
sub
add
sar
movsl
call
ljmp
pop
mov
into
in
ss
mov
adc
pushf
cmc
pop
fs
add
sbb
inc
xor
adc
pop
in
inc
mov
je
imulb
sbb
xor
rcll
xchg
pushf
nop
shr
aaa
nop
lods
mov
fdivrp
movsl
mov
cmp
push
outsl
lock
add
cltd
out
imul
mov
mov
gs
xchg
rolb
jg
fdivs
nop
mov
insl
fsubl
push
lahf
std
dec
xchg
fxch
incl
decl
int
mov
call
or
fidivl
lret
mov
adc
in
mov
mov
popf
stos
or
jp
fwait
inc
mov
fisttpl
ljmp
cld
adc
sbb
out
cs
inc
ret
adc
jge
test
ljmp
stos
aas
aas
dec
sbb
sub
out
sbb
aad
xorl
ljmp
popa
push
aad
cmp
pop
clc
sub
aam
mov
addr16
js
ret
int
fdivrs
cmp
adc
fistpll
loop
mov
incl
fistpll
cmpsl
les
mov
lret
pop
mov
pop
xor
imulb
ljmp
sbb
and
jns
aaa
movsl
loope
xchg
mov
movsl
xchg
shld
decl
fdivl
pop
ficomps
adc
fbld
in
cmp
out
mov
mov
dec
or
das
cld
add
fdivr
push
cmp
filds
mov
cmp
dec
fcomi
pop
push
icebp
jecxz,pt
mov
jmp
pusha
xor
mov
ljmp
cmp
nop
mov
xor
into
xor
loopne
cld
inc
int3
pop
dec
dec
mov
mov
dec
std
shlb
xchg
bound
xchg
test
fadd
in
mov
jg
jg
sbb
std
pop
mov
inc
insb
rolb
sbb
insl
test
mov
mov
mov
aas
repnz
mov
cmc
mov
adc
sub
pop
fwait
mov
jmp
movsl
pop
add
xor
dec
add
mov
insb
mov
lock
xor
sbb
popa
loope
in
inc
sbb
mov
pop
outsb
sbb
push
jb
aam
sub
incl
push
xchg
ljmp
mov
outsb
scas
mov
push
loopne
sbb
jns
das
adc
cld
and
lds
add
and
jmp
jb
sub
jns
outsl
jle
outsl
daa
push
sbb
nop
std
sub
mov
add
ljmp
std
push
loop
cltd
scas
adc
into
lea
fdivrp
pushl
loopne
pop
in
out
cld
or
lds
sub
ja
cltd
imul
jecxz
icebp
or
ljmp
std
jne
nop
jmp
jne
addr16
mov
idivb
stos
sub
push
lcall
subl
out
mov
push
std
adcl
mov
in
and
add
fldcw
pop
ret
stos
jmp
xchg
pop
jl
fstpt
sti
mov
rcl
stc
xor
lock
repnz
outsl
jg
sub
push
cmpsl
repz
xchg
fadds
mov
pminsw
mov
mov
and
insb
sub
mov
and
xor
jle
jg
rcrb
call
cli
mov
idivb
sub
stos
ret
adc
pop
dec
iret
call
ljmp
xchg
movsb
lods
in
push
in
jo
cltd
xchg
aaa
cli
call
shll
xor
mov
lods
sbb
push
popa
loop
lcall
fsubrl
test
mov
mov
fldenv
sbb
out
shr
das
leave
xor
icebp
pop
icebp
fwait
push
rclb
in
cltd
js
gs
es
inc
mov
mov
out
mov
in
test
pop
xorl
push
jecxz
push
imul
ret
aas
push
pop
mov
sub
cs
inc
mov
sbb
daa
loope
cld
jnp
subb
mov
or
imul
xchg
push
sahf
sar
lcall
mov
in
adc
mov
add
xorb
aam
lret
mov
jmp
xchg
jbe
imul
pushf
test
cmpl
ficoml
mov
ss
cmp
sub
loop
mov
mov
or
dec
mov
mov
movsb
fwait
or
push
call
aas
outsl
mov
mov
test
jge
dec
push
mov
outsl
pop
xor
xchg
ljmp
or
sub
pop
mov
adc
xchg
decl
push
xchg
jno
loope
pop
push
movsb
lods
iret
push
jae
fmul
popf
xlat
pushl
in
movsb
xchg
in
jb
mov
mov
pop
cli
pushl
pop
or
push
movsb
xor
lock
xchg
test
lcall
fwait
cmpsb
jl
add
mov
jbe
repz
sarb
pop
into
lods
fildll
push
cld
sti
inc
jno
rep
icebp
idiv
ljmp
mov
cmp
adc
push
jno
jmp
push
ljmp
or
insl
scas
and
test
push
popa
add
mov
xor
pushl
pusha
outsb
add
inc
ret
mov
add
lods
jbe
ss
scas
std
cld
mov
ljmp
ret
ret
xchg
sbb
xchg
in
mov
pusha
xor
ljmp
lcallw
sbb
mov
cwtl
sarb
cmp
cmpsl
in
orb
inc
xchg
andl
scas
dec
xchg
clc
jmp
mov
popa
xchg
outsl
cmp
pop
pop
push
testl
sub
ljmp
dec
push
mov
sub
imul
dec
rcrl
ds
push
ret
pop
pop
mov
dec
xchg
dec
sub
loop
add
shlb
call
jnp
jle
adc
and
repz
lahf
insb
test
inc
or
sbb
ljmp
stos
xchg
xor
call
je
cmp
test
or
adc
jmp
jmp
dec
mov
mov
fdivl
incb
xchg
lods
es
scas
arpl
leave
scas
push
mov
mov
pop
popa
and
xchg
add
cli
incl
out
pop
int
hlt
or
sub
cld
dec
imul
aaa
pop
adc
jl
iret
push
xlat
and
in
push
add
js
push
and
test
mov
dec
mov
inc
inc
pop
fld1
fs
mov
lcall
add
mov
sub
mov
clc
jle
pop
int
ja
jg
pop
movsb
enter
loopne
push
aad
jns
xlat
addr16
pop
call
jb
std
sti
lahf
and
mov
sbb
jo
pusha
push
push
sbb
jg
sub
enter
mov
push
lcall
jns
in
push
fimuls
push
pushf
xchg
mov
cmp
loope
pushf
jo
xchg
paddusb
or
pushl
mov
push
push
push
cmp
mov
dec
shlb
lcall
xchg
adc
adc
outsl
stos
sub
mov
inc
es
enter
lcall
cmc
aam
cmp
push
mov
or
repnz
repnz
stos
nop
leave
mov
inc
call
xor
loop
inc
push
imul
xor
in
call
inc
push
adc
adc
in
scas
mov
push
clc
jmp
pop
pushf
adc
push
int3
cmpsb
imul
push
test
cli
call
push
cld
hlt
aam
mov
or
dec
jge
inc
push
mov
les
mov
inc
sub
sub
xchg
es
mov
pushf
mov
adc
jp
pop
inc
sub
das
icebp
jmp
mov
and
in
pop
iret
lods
mov
das
cmp
mov
cld
mov
sub
aam
leave
loopew
and
mov
adc
mov
push
sbb
inc
push
pop
stos
xchg
fildl
lcall
inc
pop
xchg
rorl
ret
movsl
push
lret
lcall
fistps
fnstsw
sbb
rol
adc
fcmovnb
fcoml
movsb
pushl
mov
test
pushf
sub
xchg
push
xchg
aam
outsb
sub
sub
mov
decl
jmp
rorb
jno
jmp
cld
repz
pop
lds
inc
aad
bound
cld
mov
or
mov
jl
pop
inc
arpl
fists
lcall
ljmp
je
enter
mov
add
xchg
sahf
scas
cltd
jge
aaa
fsubrs
popa
jg
lea
xchg
lahf
out
xchg
pop
xor
push
xor
jl
shlb
decl
mov
sbb
mov
int3
add
jl
jl
push
adc
fstl
mov
cmp
and
add
ficompl
add
mov
test
push
cmpsb
out
sbb
outsl
pop
addr16
data16
mov
mov
jg
insb
pop
sub
mov
jns
test
mov
xchg
inc
pop
ss
out
repz
jmp
mov
sbb
out
push
or
sbb
cwtl
lock
pushf
xor
decl
dec
push
mov
xchg
movsb
cmp
imul
mov
mul
mov
cmp
jg
jo
movsb
xchg
mov
sub
addr16
push
lret
push
into
mov
pop
gs
call
es
fildll
cmp
pop
mov
inc
imul
popf
xchg
lcall
mov
jns
jecxz
addb
push
push
ss
or
jae
lea
lea
lret
adcl
call
les
test
inc
push
out
inc
loop
pop
push
jecxz
stc
insl
mov
movsb
xchg
xchg
cmc
cmpsb
std
imull
inc
rcl
jae
std
ljmp
xchg
mov
jns
mov
rorl
xlat
in
out
fsts
add
jmp
mov
shlb
test
xchg
xor
rclw
push
sbb
pop
test
adc
jl
sub
js
and
out
mov
pop
pop
ljmp
cltd
adc
imul
and
push
xor
mov
lret
mov
lock
mov
loope
pop
filds
or
cli
push
jmp
cld
lcall
pop
dec
inc
push
and
fcomp
jbe
cwtl
leave
sar
outsl
xor
stc
dec
repz
bound
mov
pop
test
fcos
fbld
and
test
pop
cltd
cld
call
mov
jmp
in
out
xchg
outsl
addr16
out
call
jns
repz
sahf
xchg
ljmp
enter
mov
mov
push
out
xor
adc
ret
sub
sub
sti
js
ljmp
xchg
in
push
insl
and
es
test
mov
outsl
jge
leave
cli
or
add
mov
outsl
into
repnz
pop
in
xchg
cmp
int
aaa
call
sti
xor
sbb
and
adc
cmp
xor
fwait
incl
outsb
test
out
fisttpll
pop
stos
xor
adc
cmp
push
ret
or
movsl
addr16
mov
mov
test
cmp
pop
out
add
pushl
clc
mov
inc
icebp
pop
cmc
sahf
popa
mov
jbe
cmp
pushf
lahf
aaa
pop
loop
jnp
push
mov
out
stc
sub
lret
sar
jmp
xchg
or
jl
inc
add
and
pop
popa
ljmp
insl
in
mov
pusha
jg
cmp
push
int
pop
cs
mov
ss
sbb
std
iret
inc
inc
frstor
mov
lock
jns
enter
ljmp
cltd
inc
aam
mov
out
int
push
lret
loop
fidivrs
mov
lock
jmp
notl
aaa
mov
call
rol
jbe
cmp
push
sub
in
sub
sahf
or
ljmp
mov
mov
stos
lods
pop
nop
and
lea
hlt
int3
mov
push
out
mov
decl
test
pop
pop
call
sbbb
js
outsl
jmp
jmp
cli
popf
dec
icebp
into
scas
je
movsl
xchg
and
push
aam
xchg
fcoms
or
cmpsl
sub
pop
cli
std
inc
aad
xor
xchg
jmp
jo
aaa
insl
and
dec
filds
fadd
data16
stos
iret
mov
push
aaa
aad
jle
mov
sbb
test
aas
pop
add
ljmp
hlt
lcall
hlt
xchg
sub
pop
call
sub
mov
pushl
mov
xor
cltd
adc
ss
add
mov
xchg
faddl
cld
decl
push
xor
out
sub
aam
arpl
rcr
push
cltd
arpl
ljmp
adc
test
push
popa
dec
xor
outsl
lock
push
inc
cmp
dec
fucomip
ljmp
cs
pop
or
fnstsw
lea
cld
jg
fwait
incl
fwait
lea
jae
movsb
sbb
shll
cwtl
sarl
je
fdivl
insb
idivb
cmp
cmp
add
jno
pop
shll
int3
imul
stos
push
mov
iret
inc
add
pop
sub
xchg
push
push
push
fstpl
incl
lods
mov
aaa
pop
out
mov
mov
aam
scas
xchg
mov
push
lcall
fdivs
cmp
aam
cmp
test
or
test
and
jl
cmp
lahf
dec
mov
and
test
dec
push
fdivrs
rcrl
popf
outsl
inc
push
jmp
ss
call
cmp
mov
jbe
mov
sti
dec
xchg
call
add
jne
test
cwtl
sbb
cmpl
lcall
add
or
fwait
imul
push
sbb
dec
xor
mov
js
jl
lock
call
mov
or
xchg
js
cmp
incl
jp
or
daa
stc
mov
push
popf
jle
imul
or
dec
cli
test
cltd
daa
aaa
popf
movsb
rcrl
cmp
lea
mov
lcall
or
dec
pop
movsl
data16
jae
out
mov
aam
shrl
pop
push
popf
insl
incl
int3
sub
jne
mov
daa
mov
mov
aaa
cwtl
mov
incl
stos
aad
pop
sbb
sbb
cmp
and
jae
xorl
cwtl
aad
imul
rcll
xchg
fdivrl
imul
pop
inc
xchg
cli
decl
mov
inc
gs
cld
and
addl
hlt
or
jmp
dec
cmp
faddl
cmpsl
or
mov
and
adc
xchg
subl
ljmp
jbe
sbb
gs
dec
iret
stc
out
testl
lcall
pushl
call
rorl
int
xor
dec
in
mov
les
jl
xor
lahf
inc
mov
std
push
and
add
call
adc
inc
sbb
push
pusha
or
pop
xchg
xchg
jg
add
mov
cli
cli
aaa
lcall
outsl
inc
pop
out
push
jmp
jns
push
out
jbe
rorb
inc
dec
mov
lods
fistps
out
xor
pushf
mov
and
jmp
into
jmp
xorl
lods
cmp
add
sub
pop
cmp
mov
add
pushl
xor
pop
push
int3
out
jbe
mov
mov
sti
or
jg
scas
add
mov
inc
jbe
add
sbb
jg
mov
leave
ljmp
in
pusha
lret
mov
mov
cmp
das
ss
addr16
call
sub
jg
dec
repnz
loope
mov
vpaddusb
mov
lcall
mov
aaa
mov
jp
sub
xor
adcl
mov
into
mov
xchg
add
dec
sahf
xchg
call
push
jecxz
or
pop
push
ret
inc
sub
sti
mov
adcb
xchg
push
sbb
stos
mov
and
or
fucomip
sarl
push
jb
and
iret
adc
lock
push
sbb
incl
pop
cli
sti
pop
scas
xor
pop
mov
cmpsl
call
jns
in
jl
in
add
std
fisubs
rdpmc
dec
stos
sbb
lcall
fiadds
clc
rcl
jb
call
outsl
popf
cmp
dec
pop
inc
lods
jae
jbe
out
lds
incl
mov
adc
stos
xchg
pop
sarl
mov
mov
ffreep
ret
lcall
jg
pop
adc
je
divl
jl
lret
lret
or
xor
cmp
das
icebp
dec
in
out
or
inc
or
inc
subb
xchg
sub
lcall
cld
je
mov
mov
into
or
sarb
repz
addl
stos
mov
repnz
inc
jbe
pop
stos
mov
cli
add
sub
mov
roll
fs
call
mov
stc
js
mov
popf
add
lods
pop
mov
ljmp
mov
xor
jns
pop
outsl
lock
push
cmp
rolb
repz
push
outsb
jbe
clc
jo
jae
jmp
sar
movsl
add
inc
cmp
imul
gs
lret
idivl
xor
decl
push
add
cwtl
fisubl
jle
mov
cmp
es
loope
into
fldt
jg
lcall
sahf
cmp
ja
sbb
in
rcl
mov
out
mov
decl
push
xchg
fdivl
sub
mov
push
and
mov
xchg
pusha
aad
incl
es
repz
stos
repz
jp
in
mov
orl
and
sti
xchg
sbb
push
pop
jne
and
loope
imul
decl
stc
and
and
xor
mov
call
shr
fstpl
in
push
mov
push
data16
in
jge
sub
pop
cmp
mov
ret
jl
mov
sbb
call
mull
inc
das
outsl
jb
cmp
cmp
sar
sub
jo
idivl
fistps
fsubrs
pop
push
add
fbstp
jno
jb
outsb
fnstcw
dec
aas
flds
fmuls
repz
push
inc
hlt
mov
aad
aam
idiv
repnz
sti
les
das
xchg
add
xlat
jp
mov
lods
arpl
sub
cmpl
js
push
in
in
cmp
fidivrl
mov
push
push
or
xchg
ljmp
mov
ljmp
lods
lods
pusha
cmp
call
pop
mov
dec
icebp
cwtl
cmp
mov
fistl
mov
movsl
xchg
imul
or
add
sub
xor
xchg
es
std
incl
nop
and
xlat
iret
inc
dec
xor
bound
push
inc
idivl
push
das
cld
call
repz
mov
lods
pop
cmp
xor
ljmp
adc
inc
adc
add
or
push
adc
adc
in
mov
xor
bound
popa
scas
aad
aas
add
sbb
lds
dec
jb
inc
loope
fs
mov
call
popa
mov
fsubrl
aad
cs
lret
dec
mov
call
mov
inc
xor
cmp
js
jmp
orl
push
pop
sub
es
adc
in
iret
mov
xor
jmp
push
lds
stos
pop
sub
mov
mov
and
decb
incl
push
push
push
sbb
nop
jecxz
xchg
pop
incl
lea
adc
mov
mov
or
pop
pop
jns
xchg
inc
jle
test
mov
scas
test
pusha
sbb
push
pop
call
xchg
pop
sbb
cmp
dec
dec
or
sbb
cmp
xchg
mov
pop
mov
jbe
push
push
sub
cmp
sbb
fstps
imul
outsl
std
cli
fdivl
pop
xorb
repz
and
or
aaa
cli
ret
or
iret
push
push
xor
mov
sub
jp
pushaw
xchg
adc
add
sti
ljmp
leave
movsl
sahf
jne,pt
jg
in
push
inc
hlt
jp
cmp
ret
into
jle
es
loope
push
fs
mov
loopne
test
stc
and
push
scas
mov
fildll
inc
push
jae
sbbb
pop
jg
mov
add
incl
sub
cmp
push
dec
out
es
into
xchg
ret
cltd
dec
mov
js
mov
decl
out
in
adc
scas
fdivp
std
push
test
mov
or
clc
loope
ljmp
insl
add
pop
lods
out
pop
xor
aad
add
fisttps
and
ud2
mov
es
clc
sbb
aad
pushf
mov
bound
mov
movsl
pop
cli
decl
mov
nop
jnp
pop
ficompl
insb
jecxz
mov
loop
add
test
int3
loope
or
aas
sbb
jg
sub
adc
push
sub
movsb
jle
fistps
in
decl
cld
jg
adc
outsb
std
add
test
xchg
cmpsb
inc
in
imul
stos
push
dec
jmp
push
xchg
mov
out
call
out
sub
and
sub
insb
outsb
int
cmp
fs
mov
cmp
movsl
cs
and
inc
dec
jae
pusha
jae
psrld
rorb
xor
xlat
ja
jecxz
jmp
sub
sbb
or
call
lret
mov
cmp
jg
aad
xchg
jb
xchg
pop
jae
mov
pusha
mov
in
test
lcall
add
clc
mov
scas
cltd
pop
mov
lods
lds
lcall
mov
fnstsw
es
and
fwait
pop
bound
mov
jae
mov
fdivrl
enter
pushl
sahf
shrb
popf
sahf
xchg
xor
hlt
fmuls
jae
push
out
mov
mov
mov
loope
call
sahf
mov
push
pop
icebp
loopne
psubw
dec
addl
std
out
rclb
shrb
add
out
sub
pusha
add
jge
and
mov
or
out
jae
leave
mov
jmp
call
add
xor
jb
mov
movsl
adc
je
std
jmp
sti
bound
adc
mov
sbb
adc
add
jno
gs
add
daa
jae
mov
loope
push
xor
jmp
mov
sbb
add
mov
lret
pop
pop
loopne
pusha
ret
inc
mov
pushl
das
jg
mov
mov
aas
xchg
push
dec
pop
in
cmpsb
or
int
pop
cli
push
icebp
xrelease
jl
paddw
dec
pop
jmp
mov
xchg
loopne
adc
push
add
push
jl
inc
sub
xchg
ljmp
xchg
ds
or
movsl
loope
lcall
dec
arpl
or
push
movsl
es
pop
shr
loop
in
mov
cmp
stc
repnz
lods
xchg
cld
push
int
je
mov
aam
mov
pop
fucom
push
ljmp
lock
sbb
fsubrl
out
stos
testl
test
outsl
lock
adc
cmpsb
jnp
imul
mov
lea
or
jp
aam
and
cmp
in
dec
xor
ret
imulb
ud0
add
mov
test
xorb
cmpsl
add
mov
pushf
bound
or
cld
mov
pop
mov
call
jbe
loop
dec
loop
subb
popf
xchg
inc
jp
decl
jge
inc
adc
cltd
mov
stos
sub
dec
cmc
je
test
jg
test
lret
call
lods
adc
cmp
aaa
add
into
xchg
jne
xchg
push
ss
dec
out
mov
and
loop
inc
jl
aam
loop
gs
sbb
sub
call
jmp
mov
test
inc
daa
jp
mov
sbb
push
arpl
fnstsw
incl
or
sbbb
mov
or
ljmp
or
pop
movsl
mov
adc
sub
sbb
les
mov
lea
xchg
jb
nop
xchg
orb
ljmp
push
rcrl
push
sub
adc
cmp
pop
dec
enter
fldl
jmp
aas
jge
cmp
jbe
and
pop
cmp
scas
xchg
sub
fcomp
mov
rolb
or
mov
sub
dec
imul
sbb
push
in
adc
outsl
pusha
push
rcl
fwait
sub
mov
aaa
out
push
mov
inc
pop
negl
add
in
jg
mov
clc
xor
mov
and
sub
jp
arpl
ficompl
call
xchg
enter
jmp
fistpl
iret
or
ljmp
fldl
push
ja
mov
push
lret
fdivr
pop
mov
adc
xlat
push
dec
add
xchg
jns
mov
mov
mov
xor
mov
and
leave
cmp
cmp
jnp
data16
rolb
int3
mov
ljmp
hlt
xchg
mov
mov
cmpsb
or
mov
inc
pushf
jmp
dec
outsl
stos
ljmp
aaa
pop
call
xor
or
lds
aas
dec
push
je
popa
sub
or
ljmp
jo
fidivrl
lea
push
jnp
loopne
lds
cmp
inc
ljmp
add
mov
xchg
js
push
negl
xor
pushl
incl
push
loop
idivl
rclb
movsl
into
in
insl
mov
jmp
mov
cmpsb
mov
imul
cmp
dec
addr16
cli
enter
mov
jl
xchg
hlt
pop
sbb
fcomp
scas
scas
ret
aam
adc
jg
push
dec
mov
push
cmp
cs
call
sbb
inc
repz
xchg
outsl
lret
sbb
jbe
xchg
sub
or
jmp
or
iret
add
push
lcall
push
int3
jge
into
ljmp
lock
stc
in
lea
jns
mov
push
std
int
fdivs
stos
cld
jbe
cli
ljmp
incb
sbb
divl
pop
mov
js
xchg
fisttps
sbb
das
cmc
push
pop
aas
cmpsb
push
fcom
rorl
ficompl
sbb
cmp
sti
mov
or
vpsubsb
loop
mov
mov
cmpsb
add
xor
pop
mov
sahf
cltd
push
shll
inc
enter
or
clc
jg
cld
clc
inc
and
sub
mov
sbb
inc
cld
pop
loopne
pop
pop
sbb
lds
mov
xchg
inc
lahf
lods
sbb
jg
fistpll
lret
insb
ja
enter
dec
int
jno
jmp
mov
loop
ret
cld
inc
dec
pop
xchg
push
test
mov
sub
lcall
cmpsb
cld
jg
incl
daa
ret
mov
and
out
ljmp
rcrb
sahf
xor
xchg
fwait
aad
test
push
cmp
jp
inc
sub
xchg
adc
cmp
push
loope
push
and
or
addr16
into
pop
add
xor
xchg
push
fwait
mov
cld
mov
jl
idiv
add
push
fwait
movsl
jne
sar
pushl
sub
pop
or
sub
fcoms
mov
adc
decl
jnp
xor
push
xchg
ds
pop
je
clc
insb
jb
cmp
rcrl
loop
int
xchg
and
aam
lds
std
lcall
clc
fwait
das
push
mov
jo
adc
lahf
add
data16
call
test
adc
mov
adc
xlat
xchg
lods
dec
shlb
xchg
pushl
fwait
xchg
cli
add
mov
movd
lcall
std
push
mov
push
aaa
addb
fistl
in
lods
call
inc
fistpll
lcall
test
fs
in
mov
call
imul
dec
cld
stc
cmp
and
ret
pop
xorl
dec
addr16
arpl
adc
into
das
cmpsl
cmp
sbb
pop
mov
inc
lods
add
clc
daa
push
and
mov
repnz
adc
incl
adc
and
inc
lea
jnp
mov
fcmovne
cmc
ret
clc
call
lret
pop
lret
arpl
mov
daa
add
cmc
jl
xchg
fwait
mov
cmp
lods
push
inc
cmp
push
jg
dec
or
mov
stos
and
mov
and
jmp
mov
jmp
xor
loopne
shlb
ds
lods
xchg
cli
pop
cmp
icebp
lcall
rcrb
jne
ret
popf
cwtl
js
xchg
ljmp
push
or
aas
adc
daa
movsb
mov
mov
push
dec
and
hlt
popf
jg
fnstsw
mov
fisubs
add
test
cmp
mov
rolb
andl
cmp
cwtl
inc
inc
nop
call
sbb
rol
push
xlat
aam
cwtl
sub
cmp
jmp
inc
dec
leave
lret
push
mov
cmp
int
leave
jnp
subl
jb
pop
test
hlt
jl
push
sub
pushf
add
aam
lcall
xor
inc
pusha
or
mov
mov
sub
or
ljmp
lea
xchg
test
in
cld
and
lcall
outsl
out
fucom
cld
cli
adc
jb
xchg
sub
ljmp
dec
movsl
pop
test
ffree
push
sub
nop
xorb
stos
loope
cmp
aas
push
jne
mov
loop
push
dec
jae
xor
mov
jg
loop
push
jmp
sbb
cmp
int3
push
aaa
and
pop
xchg
cmp
in
in
pop
push
xchg
icebp
sub
sub
decl
inc
jge
shrl
mov
xlat
mov
incl
and
jbe
insb
pushl
add
lcall
pop
fimuls
mov
lret
imul
movsb
mov
jg
adc
cmp
popa
jle
mov
pusha
add
cmp
leave
jecxz
popf
xor
inc
in
dec
pop
pop
call
adc
nop
pop
shl
push
arpl
jns,pt
sub
sti
dec
sbb
pop
dec
dec
aaa
repnz
test
in
xchg
mov
push
sub
push
sbb
or
std
out
xchg
adc
fmull
ss
dec
lcall
std
fcomi
popa
cltd
xor
xchg
xchg
sbb
ret
cmpsb
pop
out
lret
iret
stos
mov
lock
mov
dec
hlt
mov
movsl
dec
and
aam
test
lcall
inc
xor
dec
dec
push
or
push
jae
push
jmp
inc
std
inc
xchg
jp
cmp
or
cmc
push
xchg
mov
shrb
lahf
xchg
iret
testb
push
sbb
andl
clc
mov
dec
mov
pop
xchg
xchg
lret
push
js
inc
push
je
xor
lretw
mov
push
xor
sarl
mov
xlat
lods
sub
jb
xchg
sbb
or
mov
add
fs
scas
and
jmp
or
jo
sbb
inc
imul
and
xchg
inc
repz
fld
rcl
and
incl
into
jg
inc
jmp
jp
mov
stos
or
cmpsl
xor
outsl
cmc
and
xor
jmp
mov
add
mov
lahf
mov
mov
out
cmp
movsb
xlat
cmp
jo
pop
pop
sbb
sub
push
fdivl
adc
insl
fisubl
inc
popa
dec
mov
mov
mov
loop
ljmp
pop
sbb
lret
push
push
out
sub
push
inc
cmp
mov
pop
rolb
cltd
pop
fwait
sbb
adc
or
xor
out
pop
jge
mov
cld
incl
out
inc
out
es
and
lock
addr16
mov
mov
push
scas
add
inc
pop
cmc
cmc
mov
lds
mov
incl
loop
cmp
inc
push
out
movsb
sti
insb
push
mov
push
mov
fucomp
or
out
das
adc
subl
mov
push
lods
fldenv
ljmp
popf
jg
insl
pop
sbb
inc
add
std
insl
push
cmp
lcall
adc
ljmp
test
dec
xchg
or
imul
pushf
xor
dec
inc
popa
cwtl
push
or
in
xchg
ret
mov
cs
xor
xlat
fstl
incl
jge
fwait
outsl
aad
popf
pop
loopne
add
lret
sbb
mov
test
lcall
daa
xorl
gs
mov
hlt
jo
je
jno
adc
jg
ljmp
xchg
sbb
stos
and
shll
enter
jmp
rcr
mov
mov
hlt
je
bound
std
fmuls
dec
push
cmp
fucomip
fdivr
adc
add
popa
cmp
inc
adc
repnz
jne
enter
cld
mov
inc
mov
adc
das
cltd
pop
jp
test
mov
mov
bnd
inc
inc
mov
jne
outsl
cld
in
pushl
cld
roll
inc
adc
cltd
push
mov
ljmp
cmp
dec
cld
iret
xor
sub
in
repz
or
dec
mov
gs
in
lahf
icebp
call
das
clc
in
sbbb
rclb
into
or
push
mov
fstps
xchg
dec
in
hlt
pop
fs
je
pop
orb
js
int
sub
dec
leave
xchg
outsl
push
imul
lcall
jg
je
add
decl
mov
mov
dec
cs
call
ss
frstor
mov
jle
jmp
std
mov
push
call
xor
sub
jmp
xchg
les
jmp
or
jns
mov
jp
sub
pop
xchg
mov
popf
jge
es
mov
sti
aad
fidivrs
lds
xchg
and
ds
icebp
xlat
lret
int3
shr
ret
cmp
aaa
clc
int3
jnp
dec
mov
lret
xchg
xorb
test
call
push
pusha
dec
adc
iret
stos
dec
fwait
loopne
xchg
dec
add
and
mov
mov
incl
gs
sarb
inc
mov
push
aas
mov
dec
incl
or
push
mov
mov
sbb
xor
mov
adc
cs
dec
mov
cli
dec
subl
insl
cli
call
aaa
push
jg
sub
rclb
adc
enter
std
sti
rcll
pop
cmp
xchg
pop
loopne
pop
cs
mov
loopne
ljmp
mov
popa
adc
push
sti
lods
std
mov
lods
ss
mov
sbb
adc
mov
ja
pop
pop
test
ljmp
leave
out
cld
xor
test
jae
jb
stos
popf
ret
inc
sbb
call
dec
popa
push
xchg
cld
lock
push
dec
adc
xchg
daa
out
and
rcll
mov
call
insb
hlt
in
call
cli
roll
std
outsb
push
jbe
out
pop
incl
xlat
lcall
mov
lcall
inc
aas
mov
pop
fadds
insb
jl
ret
cmp
stos
int
sbb
lcall
adc
dec
push
push
dec
mov
push
pushf
mov
test
jmp
ljmp
or
pop
ja
push
lahf
add
ja
idiv
ljmp
cmp
push
add
sub
sbb
movsl
inc
in
mov
pop
add
icebp
pop
add
cmp
pushl
clc
cmp
add
xchg
in
push
out
enter
xchg
mov
shlb
cltd
cld
jmp
sbb
cli
lods
nop
sti
stos
mov
lahf
out
testl
cwtl
lret
mov
and
jmp
dec
adc
lcall
or
imul
pop
sbb
out
dec
push
inc
inc
jno
ss
sbb
fdivr
mov
mov
mov
dec
aaa
sbb
add
adc
das
cld
jmp
mov
and
pop
and
in
jg
push
fwait
xchg
add
insb
xchg
jmp
lret
xchg
mov
scas
ror
xchg
push
push
xchg
adc
dec
movsb
incb
or
outsl
jge
outsl
insl
adc
pop
add
aaa
mov
push
jmp
stc
je
inc
sbb
xchg
mov
xlat
fsts
test
jle
jp
enter
lcall
std
mov
divb
jecxz
sbb
xor
mov
or
adc
xor
xchg
xor
xorl
xlat
sarb
hlt
rcr
inc
clc
push
movsl
outsl
ds
pushf
je
pop
sub
pop
sub
xchg
cmp
out
jg
jmp
bound
pop
cld
mov
cmp
mov
aaa
test
repnz
outsl
cld
incl
mov
mov
gs
lcall
push
sub
add
pushl
and
aam
out
push
adcl
pop
xchg
nop
xchg
adc
cld
push
sti
sbb
dec
inc
pop
xor
leave
das
mov
fnstsw
popf
lea
movsl
cmp
in
call
dec
imul
mov
bound
xchg
scas
ljmp
jae
jg
pop
jmp
sarb
pop
pushf
stos
fnstcw
ljmp
pop
rcrb
psubsw
sbb
sti
mov
push
xchg
in
ror
lcall
fstl
cs
lcall
punpcklbw
enter
das
shr
cmc
add
adc
dec
repz
loopne
add
into
ud0
push
mulb
adc
repz
outsb
call
ret
fninit
xchg
repnz
cli
scas
inc
xor
cmc
push
push
adcb
aam
call
xor
sub
jecxz
inc
sbb
ret
cmp
or
mov
lcall
aam
sub
dec
es
lahf
loop
popa
aaa
pop
icebp
xor
std
mull
push
popf
stos
mov
lods
outsl
insl
stc
test
cmpsb
ror
in
sbb
test
rcrb
filds
iret
bound
in
cld
icebp
push
dec
ljmp
mov
push
rolb
mov
sbb
leave
aad
jge
out
sti
mov
xchg
inc
fs
push
push
mov
shll
push
scas
push
mov
cmpsl
add
std
cmpsb
adcl
mov
lcall
lret
push
add
gs
and
popf
mov
test
mov
fwait
lea
cmp
push
mov
lahf
js
repz
cmp
adc
or
and
mov
fldcw
sub
je
into
pushf
jmp
xor
fistl
ficomps
je
dec
push
lcall
sti
nop
jbe
stos
mov
repnz
push
mov
jmp
out
add
inc
lahf
out
in
sub
jbe
mov
outsl
sbb
xchg
or
out
adc
cli
mov
jg
mov
js
js
std
mov
shrl
inc
sar
lock
in
notl
sbbl
out
xchg
call
mov
stc
adc
dec
adc
fimuls
push
add
ljmp
icebp
xchg
cs
pop
adc
ljmp
cmpsb
aad
sar
pop
ljmp
cmc
xor
ja
into
inc
xchg
in
push
sbb
add
adc
inc
ljmp
in
xlat
mov
push
stos
ss
jl
pop
ja
call
repz
cmpsl
jp
pop
in
mov
test
cmp
mov
incl
jo
lea
xchg
test
stc
xchg
dec
loop
lock
jno
push
lret
sub
adc
roll
imull
scas
pop
cmpsb
dec
push
xor
mov
and
incl
add
pusha
sbb
fmul
mov
jb
fsts
sbb
out
xlat
decl
push
and
repz
loope
testb
mov
call
mov
and
cld
sub
ljmp
add
sar
jne
xchg
push
nop
inc
leave
xchg
and
sub
or
adc
pop
pop
sub
lea
mov
jno
cmpsl
movsb
mov
jecxz
ss
mov
clc
call
out
dec
sub
out
or
cmc
sub
xchg
lcall
dec
xchg
aaa
sbbl
out
pop
stos
leave
int3
sbb
sbb
cmp
jmp
push
ja
aad
jge
inc
lods
dec
add
aad
leave
stos
cld
lcall
ficoml
sbb
dec
cmp
mov
cs
ficompl
mov
ljmp
push
push
stc
xor
cmpsb
pop
jo
adc
jecxz
cmp
or
movl
test
cld
decl
cld
jl
dec
add
pop
push
in
arpl
xor
xchg
add
lcall
or
dec
out
movsb
sahf
loope
lret
fcom
cmp
jae
xor
call
or
and
xchg
mov
aaa
pop
mov
cmpsl
mov
add
in
lcall
cmp
adc
cmpsb
jg,pt
addr16
ja
adc
and
mov
mov
fisttpl
sarl
or
sub
xchg
sarb
jge
hlt
mov
dec
sbb
jmp
mov
cmpsb
push
insb
mov
jmp
xor
into
pop
inc
das
mov
jnp
test
mov
pop
sub
push
notl
scas
pop
push
push
sub
fbstp
popa
incl
mov
ret
mov
cmp
pop
add
cld
in
add
push
sbbl
jmp
mov
inc
std
inc
insl
inc
mov
lds
insb
mov
mov
test
cmp
ss
cmp
into
add
ljmp
push
add
sub
movsl
mov
xchg
inc
dec
mov
jmp
shl
cld
adc
adc
fcmovnu
in
jbe
cmp
jg
sub
movsb
lds
mov
cmp
ljmp
mov
in
push
insb
mov
fwait
data16
push
xchg
sub
ret
jle
mov
pop
daa
push
ret
xor
enter
test
test
mov
clc
incl
or
sub
xchg
cmpsl
adc
inc
sbb
push
pushl
out
push
in
push
xlat
xor
imul
and
dec
aaa
dec
pop
cli
jmp
push
sbb
int3
lret
hlt
mov
dec
test
pusha
cmp
jmp
call
jmp
mov
xchg
xor
daa
sub
jb
loopne
inc
inc
pop
fs
lods
lcall
lahf
mov
in
add
jo
stos
or
dec
mov
xchg
jmp
out
das
mov
mov
xchg
test
fistpl
lods
jle
xchg
ljmp
sbb
mov
rcrb
mov
int
jge
lcall
mov
lahf
add
sub
fsubrs
xchg
dec
aam
shlb
add
lock
jmp
mov
fcoml
adc
pop
popf
sub
loope
pop
fsubs
out
outsl
aam
outsl
cmc
lcall
cmp
in
inc
popa
mov
inc
push
xlat
jecxz
movsl
mov
outsl
xchg
jb
jmp
imul
mov
arpl
push
call
out
call
mov
xchg
sbb
jg
jp
sarl
call
adc
fwait
cltd
jle
iret
into
mov
add
lret
rcll
sbb
mov
sbb
pop
jo
inc
aaa
dec
xor
shl
adc
out
xchg
dec
pop
or
idivb
xchg
inc
adc
mov
lcall
aas
cs
movsl
cmp
or
mov
in
jmp
fdivp
lcall
fucom
cmp
inc
ds
ljmp
int
cmpsb
call
jno
jle
lds
insl
lods
xor
aaa
cli
inc
data16
ret
dec
clc
xor
insl
sti
je
call
jns
jmp
into
in
bound
call
pushl
cmp
mov
xor
inc
mov
sahf
cmpsb
mov
ret
out
pop
std
mov
outsl
hlt
inc
pushf
xchg
mov
sub
mov
jmp
push
pop
loope
mov
scas
mov
icebp
xchg
mov
es
repz
lret
pushl
test
loope
jge
add
xor
out
adc
pop
mov
lcall
std
sbb
or
cltd
add
sub
and
jb
fmul
es
fistl
call
xchg
js
imul
loope
pop
pop
or
jecxz
lds
es
decl
in
scas
orb
fidivl
arpl
lds
add
fldt
fdivl
es
loopne
addr16
lahf
testb
mov
pop
out
or
ja
fndisi(8087
stc
call
idiv
das
lock
stos
cld
inc
adc
stos
mov
outsl
pop
decl
or
adc
push
addr16
jle
xor
in
cmp
fnstsw
loope
add
mov
ljmp
sbb
outsl
jl
call
cmpsb
cmpsb
lods
and
fimull
adc
daa
lcall
fbstp
cmp
daa
and
rol
dec
push
push
cs
fisubrl
dec
test
pop
clc
mov
aad
fcmovnbe
mov
xor
cmpb
or
stos
incl
rcrb
inc
mov
jp
jg
ds
mov
fwait
insl
in
ss
stos
push
insl
aaa
cld
jnp
or
data16
mov
bound
ljmp
mov
fcoml
mov
push
jae
pop
sub
and
mov
cmp
xchg
leave
loope
cmpsb
adc
iret
loop
aad
lods
mov
add
ljmp
repz
fdivs
jmp
or
pusha
adc
push
call
fldt
mov
mov
pop
sub
jmp
incl
pushl
mov
inc
cmp
mov
jg
xor
aam
jle
push
ss
add
repnz
jg
scas
cmp
cmp
and
add
adc
pushl
jmp
test
jb
lods
popf
xchg
ljmp
sub
das
jo
incl
push
pop
push
aam
push
mov
and
and
jne
loop
sti
xchg
and
pop
jo
rcll
ljmp
in
add
xor
aas
scas
daa
fwait
dec
jb
cs
ljmp
hlt
fsubs
jecxz
es
test
and
insl
mov
out
xchg
xlat
and
lret
pushf
mov
stos
shr
and
aam
out
addl
call
or
and
into
mov
lret
rcl
bound
enter
decl
lods
rcrl
sti
jae
fsubs
loopne
jno
aam
movsb
dec
loop
xchg
decl
test
xchg
inc
jecxz
xlat
jnp
popf
lret
xchg
and
push
clc
add
stos
mov
sub
jo
cmc
xlat
arpl
and
push
push
jo
das
les
mov
pushl
jns
xor
ret
loopne
scas
pop
out
mov
lea
fs
or
stos
sbb
sti
push
sbb
movsl
cld
inc
lcall
cmp
in
mov
sub
push
sbb
pop
pop
sbb
pop
lcall
or
lock
gs
push
xor
jecxz
ret
cmp
andl
lcall
add
jae
int
push
test
mov
mov
add
out
out
dec
cs
cmc
and
xor
pop
ret
data16
pop
cld
cmp
push
jg
incl
cwtl
and
in
cmp
push
daa
xor
xchg
dec
incb
insb
decl
dec
repnz
push
into
mov
mov
push
int3
adc
in
shll
cld
push
dec
add
jmp
pop
jnp
clc
jno
stos
adc
je
fisubrs
mov
imul
repnz
xorl
add
call
pop
cmpsb
xlat
mov
or
in
jg
mov
mov
or
cmpsl
and
lcall
dec
dec
out
fwait
movsb
movsl
push
sti
ja
outsl
std
lcall
sbb
dec
mov
adc
sti
test
dec
mov
decl
fiadds
sahf
ss
fwait
mov
adc
jo
mov
xor
loop
pop
call
pop
add
inc
add
test
ja
sub
xchg
lret
jmp
pop
lods
push
sub
and
xchg
push
inc
addr16
lret
xchg
sub
neg
add
xchg
inc
ret
push
iret
leave
sub
rcrl
dec
cld
lcall
mov
mov
out
or
mov
mov
outsl
add
ljmp
int
pop
add
jo
scas
sbb
xor
xchg
inc
push
and
imul
jg
mov
jno
ljmp
jnp
inc
aad
push
cmp
lret
dec
lods
idiv
call
clc
mov
pop
es
xchg
mov
sbb
mov
push
call
mov
les
icebp
dec
lods
jg
xchg
in
adc
out
outsb
and
scas
jge
or
arpl
in
cmp
mov
jge
ljmp
mov
aad
xor
lock
pop
pushf
or
push
or
cwtl
jns
inc
cmp
in
mov
mov
cmc
dec
lock
sbb
call
imul
mov
decl
or
cltd
ret
or
loopne
cld
mov
push
leave
jg
incl
ljmp
or
mov
out
and
sbb
pushl
aaa
push
lret
arpl
lahf
mov
insb
mov
insl
or
dec
lcall
sub
or
mov
call
stc
rorb
push
mov
cmpsl
fwait
test
imul
inc
or
mov
pop
sbb
adcb
xor
rcr
lret
or
inc
fmulp
jno
mov
leave
outsb
int3
cpuid
pop
dec
or
cmp
lcall
and
and
xchg
scas
sti
xchg
cmp
int
push
test
hlt
ljmp
stos
inc
shl
cltd
iret
rorb
lcall
sarl
aam
mov
ljmp
and
in
insb
test
in
sbb
jl
xchg
xchg
sbb
std
imul
pop
call
mov
aas
daa
outsl
int3
cmp
mov
sbb
sub
sub
ljmp
xchg
adc
xor
cmp
daa
inc
popa
xor
loopne
jp
in
decl
dec
cmp
mov
dec
mov
rorb
xchg
inc
sbb
decl
push
pop
adc
lods
sub
setnp
jl
pop
insl
lock
pop
push
mov
cmp
pop
movsb
sbb
adc
jbe
js
lcall
jge
push
cld
push
inc
xor
gs
daa
wrmsr
mov
iret
ljmp
aad
push
xor
loopne
add
sbb
aad
inc
sbb
testb
fwait
out
movb
mov
mov
lods
je
lods
inc
mov
sub
xchg
cmp
mov
mov
mov
xor
push
fdiv
fcoms
aas
add
mov
test
jle
popf
shll
adc
sub
pop
jns
test
mov
mov
fsubrp
gs
push
stos
icebp
loope
push
mov
inc
je
jno
jecxz
pushl
sub
sub
scas
mov
in
xlat
sub
jmp
arpl
cmpsb
cmp
mov
idivb
adc
and
clc
mov
out
and
jg
dec
mov
mov
inc
and
mov
dec
aad
insl
jp
mov
pop
inc
shll
pop
test
mov
xchg
and
in
aaa
mov
cmpsb
loop
pop
iret
xchg
in
sahf
add
repnz
push
mov
icebp
mov
lea
mov
dec
fldt
les
out
call
clc
incl
mov
into
push
mov
dec
xchg
flds
shl
fadds
decl
mov
jae
rcr
adc
push
shll
push
push
push
aaa
mov
push
sub
in
rclb
je
insb
jg
mov
lods
and
popf
sbb
daa
lcall
das
pusha
je
ljmp
lcall
std
rorl
xor
or
mov
mov
jecxz
insb
test
data16
ljmp
push
xchg
rclb
in
rol
mov
adc
int3
jo
je
jg
cmp
ss
pop
iret
dec
loop
mov
call
xchg
jno
repnz
fs
push
jns
incl
pop
test
mov
ret
ds
jmp
popf
jnp
and
push
pop
sub
dec
push
in
decb
nop
and
inc
scas
insb
mov
sbb
aaa
out
pop
les
add
sbb
cli
incl
inc
add
or
out
int
add
ret
xor
fistps
subl
in
leave
dec
arpl
insb
imul
jle
adc
ss
dec
xchg
fs
subl
fucomi
mov
push
je
icebp
jne
rorl
cmpsl
pop
xchg
hlt
adc
fwait
out
pushl
popf
cli
push
out
ja
add
aad
in
or
fbld
pop
ljmp
cli
dec
push
xchg
push
xchg
mov
call
cmp
scas
ja
jmp
stc
pop
fwait
dec
mov
addr16
out
scas
cmp
dec
sub
sub
decl
lock
push
ret
in
or
push
dec
sbb
and
test
lock
call
jno
jb
xchg
loop
outsb
cld
out
and
push
push
push
xchg
aam
or
jae
pop
xor
jns
and
mulb
fs
inc
call
aad
pop
sbb
mov
les
mov
dec
aaa
clc
call
shr
add
mov
bnd
xchg
adc
sbb
jnp
dec
sbb
out
jnp
sub
mov
push
movsb
stos
aad
jp
call
jno
jbe
fcoms
jg
mov
insb
mov
sbb
aad
xor
out
ljmp
std
inc
push
test
sub
imul
push
and
cmp
lcall
jle
jb
xchg
push
clc
xor
xor
leave
ficompl
jg
ret
xor
rorb
xorb
mov
incl
arpl
insl
mov
add
sar
test
add
sarb
shrb
mov
addl
cmp
mov
jo
jp
mov
jmp
data16
sti
sbb
rclb
ljmp
pop
fidivs
xor
sub
add
dec
nop
mov
ret
mov
or
jl
icebp
pop
clc
pushl
xor
push
js
das
out
into
push
cmp
jns
jbe
push
hlt
adc
push
ljmp
add
mov
mov
xlat
in
outsb
xchg
call
inc
shlb
fidivl
popw
cmp
lods
inc
push
jp
out
mov
lods
jmp
stc
adc
in
sbb
in
mov
xchg
jg
popa
sbb
mov
stos
inc
ja
data16
mov
stc
in
add
imul
outsb
adc
mov
pusha
or
es
inc
inc
call
ds
jmp
popa
fidivs
inc
lret
scas
or
incl
inc
xchg
xlat
jne
sahf
xchg
imul
out
stc
clc
ss
fildll
sbb
cwtl
cmp
add
mov
jnp
fs
xchg
sahf
xchg
hlt
dec
aad
test
add
dec
xchg
push
pop
inc
std
and
jae
jbe
pushf
es
inc
enter
icebp
mov
mov
and
fstps
decl
inc
insl
sbb
jne
add
inc
mov
in
lods
cmp
pop
ljmp
xor
imul
xchg
subl
sti
lret
mov
lcall
in
cmpsl
mov
adc
mov
inc
mov
aaa
stos
mov
incl
sbb
jmp
adc
sahf
mov
adc
fidivrs
xor
add
xor
xchg
clc
out
xlat
pop
in
xor
sarl
incl
lods
mov
cmp
xchg
lods
ljmp
pop
add
test
nop
push
and
das
cmc
outsl
mov
nop
scas
jne
loope
leave
fisubrs
adc
fdivr
outsl
push
cmp
loop
andb
test
incb
sub
mov
lret
pop
mov
inc
sub
cmpsb
int
nop
pop
call
pop
sbb
lods
ljmp
lods
ljmp
pop
in
jmp
aaa
sub
inc
sub
std
mov
cltd
mov
mov
hlt
sbb
sahf
rep
fdivp
xchg
jmp
cs
decl
mov
shlb
xchg
mov
xlat
ret
fcomps
jg
ljmp
aam
inc
cs
loope
fistpll
int
xor
push
xchg
in
in
decl
sahf
stos
fildl
pop
mov
ror
mov
xor
push
mov
sar
mov
cltd
ljmp
idiv
jecxz
out
jmp
fidivrl
ud0
js
fsubr
inc
mov
pop
pusha
pop
dec
and
ljmp
int
std
lods
jb
inc
push
mov
dec
insb
mov
fsubrp
add
mov
int3
loopne
xchg
clc
in
jmp
loop
pop
add
cwtl
inc
pop
es
push
in
sub
lcall
dec
jae
push
jg
cs
push
ret
aad
andb
loope
cmp
cltd
cli
push
test
inc
test
mov
lods
je
inc
lods
scas
cmp
movsb
data16
push
sub
inc
in
mov
insb
or
incl
incl
xchg
xchg
loopne
lods
dec
ds
inc
insb
lods
and
xchg
cli
das
cld
mov
stos
push
mov
loope
insl
lret
in
cmp
jmp
test
test
jne
addr16
mov
out
mov
cmp
xchg
inc
jno
cmp
pop
icebp
adc
mov
inc
inc
das
jg
pushf
je
test
lcall
repnz
mov
movsl
mov
mov
jg
int3
xor
test
jecxz
decb
cmp
and
jmp
aaa
loop
cltd
pop
cltd
les
push
jle
jne
out
jmp
sbb
ljmp
lock
mov
sub
push
sbb
jne
sbb
gs
lahf
sub
outsl
icebp
das
hlt
mov
cli
lahf
movb
xlat
incl
pop
clc
aaa
scas
push
lret
movsb
pop
push
sbb
jg
stc
shl
loop
gs
xor
popf
mov
push
imul
stos
addr16
mov
adc
aam
icebp
pop
push
sbb
sbb
stos
xor
ja
mov
push
shll
jae
mov
ds
xchg
ljmp
je
cwtl
add
test
xorl
jge
push
jge
sub
std
jmp
push
xchg
addr16
in
jbe
and
sbb
pop
jo
and
pushf
cmp
nop
cmc
sbb
or
jnp
cltd
and
mov
clc
daa
pushf
ljmp
sti
aaa
cmc
dec
mov
movsl
out
repz
nop
ret
cmp
lret
enter
clc
pushl
jmp
out
lock
cli
push
cwtl
sbb
scas
mulb
out
push
incl
lret
pop
mov
add
xor
push
push
inc
fildll
sub
leave
push
in
lock
cltd
or
iret
fstl
mov
pop
mov
jmp
call
int
aad
lods
sub
fsubrl
shl
das
pop
lock
inc
jb
cmp
mov
ljmp
pop
test
add
add
nop
jae
sbb
outsl
into
pop
call
and
jb
into
leave
xor
push
mov
es
lds
mov
iret
lret
das
mov
ror
popa
ljmp
mov
inc
jg
decl
and
ror
outsb
add
sub
xchg
cltd
insl
xor
aas
mov
cwtl
fucomip
decl
aam
sbb
xchg
push
or
inc
aaa
movsl
bound
pop
aam
xor
cmp
stos
in
sbb
add
add
mov
cmp
mov
insl
sti
cltd
jns
movsl
adc
aad
test
cmp
stos
fbld
push
mov
loopne
fxch
sub
stos
sar
push
outsb
add
ret
je
mov
mov
push
adc
loop
neg
lods
shlb
fxch
adc
adc
icebp
stos
ret
mov
jne
loopne
push
pop
negb
mov
fsts
and
les
cld
cmp
xchg
pusha
insl
pop
stos
dec
adcb
aad
imul
aaa
cmp
cmp
adc
jmp
xlat
pop
xor
aad
call
fwait
nop
cmpsb
fnstenv
inc
fwait
pop
sbbl
cmpl
movsb
push
dec
sbb
mov
adcb
andb
std
outsl
incl
cltd
dec
loopne
divb
and
out
and
pop
adc
test
call
ljmp
push
mov
cmpl
pop
cli
or
jg
push
push
mov
or
into
lods
and
outsl
mov
arpl
clc
xchg
and
clc
outsl
hlt
lock
jno
add
lahf
stos
daa
and
testw
ljmp
hlt
mov
data16
es
inc
les
mov
mov
lcall
call
in
xchg
je
inc
jmp
add
sub
push
mov
call
leave
cmpsl
and
sub
xchg
and
das
mov
sub
lcall
std
decl
inc
cmpsl
push
fildl
std
pop
lods
negl
arpl
mov
in
cmc
out
mov
xchg
test
xor
ret
shll
jmp
cmp
mov
outsl
pusha
pusha
cmp
push
iret
and
sub
incl
sub
adc
cmpsl
fistpl
pusha
dec
dec
sub
decl
rcr
push
mov
shlb
mov
mov
jmp
shrl
mov
lcall
in
xor
pop
clc
jg
dec
popa
push
push
icebp
int3
lret
mov
mov
cmp
leave
mov
stc
pop
sub
lea
mov
scas
popa
mov
mov
xor
nop
inc
and
fnstenv
pop
clc
jg
mov
negl
lret
pop
mov
inc
fnsave
mov
ja
lahf
fimull
push
gs
lcall
mov
sbb
movsl
rolb
cltd
neg
cld
sub
clc
dec
adc
push
in
sar
test
in
jecxz
dec
dec
in
cmc
shl
decl
pop
fsubr
ret
jnp
sbb
mov
pushl
xchg
and
lret
repz
pop
inc
jb
ljmp
lcall
stos
ljmp
ljmp
les
inc
mov
cmp
mov
cmpb
xchg
adc
subl
repz
sub
hlt
decl
pop
jle
loop
xchg
rcll
imul
pushl
in
insb
vunpcklps
repz
push
inc
cmc
sarb
pop
ffree
cmp
ljmp
gs
dec
sub
aaa
nop
into
jae
pop
mov
ljmp
jo
inc
fstpl
xchg
mov
mov
scas
lahf
cwtl
pop
sahf
divb
ret
lret
movsb
lret
repz
push
lahf
in
jmp
pop
cltd
pop
mov
inc
frstor
push
dec
xor
outsl
cmc
test
test
push
jns
xchg
mov
call
jmp
test
mov
cmpsl
inc
test
std
popf
push
pop
negb
mov
lock
pop
in
pop
or
fs
jle
push
xchg
jmp
mov
ret
aas
lret
fildl
dec
into
add
mov
jb
xchg
xchg
or
lods
pop
xchg
daa
cmp
or
fwait
in
call
and
lods
js
int
jp
sub
cmp
sub
cmp
mov
lcall
xor
mov
cmp
sbb
jle
push
nop
out
lcall
aaa
jns
fs
and
pop
mov
leave
or
mov
xorl
lds
ret
pop
push
fstps
dec
cmp
fnsave
push
out
xchg
jle
fsubl
cmc
sub
push
std
das
jnp
call
rorb
popf
pop
dec
mov
stc
movb
or
xor
inc
add
clc
cmc
aam
in
push
lahf
int
loopne
fstl
lock
test
out
inc
jbe
mov
xchg
mov
cmp
jnp
sub
xor
decl
push
in
aas
dec
mov
dec
pop
pop
and
fucom
mov
jo
jle,pt
inc
inc
daa
call
clc
mov
bound
xchg
aam
cld
mov
cltd
pop
add
call
and
mov
adc
inc
insb
imulb
stc
mov
mov
push
mov
push
cmp
incl
lahf
fisttpl
dec
dec
jb
mov
push
push
mov
fdivrs
stos
out
jmp
xchg
aas
fiaddl
push
imul
sub
xor
sub
clc
adc
scas
movsl
popf
pop
test
mov
xor
jo
or
push
lcall
cmp
mov
test
js
adc
dec
mov
mov
ret
repz
fcmovbe
xchg
inc
sahf
je
mov
aas
mov
insb
adc
xor
add
mov
cli
xchg
out
cmc
lret
add
es
sub
dec
sbb
sbb
sar
into
jg
pop
pop
gs
pop
lahf
cld
pop
pop
mov
imul
push
mov
ljmp
push
push
stos
cwtl
sbb
test
push
clc
xlat
and
push
or
jae
mov
sbb
in
sahf
outsl
cli
mov
xor
mov
ljmp
into
rorb
sub
scas
roll
mov
push
mov
aaa
incb
aaa
sbb
sbb
pushl
pop
push
jl
rcll
mov
fnstsw
clc
jl
sarl
mov
cmpsl
pop
xchg
inc
jmp
arpl
decl
push
je
lahf
ljmp
ljmp
insl
push
push
ss
outsl
mov
mov
lret
arpl
pop
dec
adc
rcll
loop
jmp
sub
push
stc
cmpsb
fstl
adc
sbb
out
fcoml
or
in
ljmp
and
data16
cli
xchg
dec
mov
sti
stos
rcll
jg
incl
in
je
mov
das
pop
ljmp
xlat
jae
or
sbb
into
xor
push
jp
pusha
or
cmpl
push
in
lret
outsb
shlb
or
fidivs
cli
jmp
push
push
roll
iret
jecxz
push
add
cld
les
adc
test
incb
incl
cmp
add
dec
push
ljmp
scas
and
push
out
mov
repz
cmp
lods
mov
ljmp
bound
xchg
lcall
xor
xchg
popa
sbb
jmp
jns
movsb
adc
push
stos
jg
sbb
mov
inc
and
inc
jmp
push
outsb
push
sbb
call
mov
cmp
xchg
push
mov
mov
lcall
inc
out
dec
aaa
imul
sub
pop
sub
or
lahf
clc
imul
mov
fwait
aas
push
jbe
daa
loope
cmp
mov
mov
cld
and
mov
mov
fildl
push
add
mov
movsl
inc
jg
fmull
decl
mov
imul
adc
sti
inc
push
outsb
sub
pop
xor
push
sbb
sbb
inc
push
stc
loop
mov
pushl
ror
rcl
test
cmp
adc
or
dec
js
je
mov
add
or
pushl
xchg
mov
pop
push
fisttpll
mov
roll
add
pushl
add
mov
fldlg2
inc
loope
mov
arpl
xchg
rorl
rol
aam
lcall
pop
fs
repz
or
ret
push
clc
int3
idivl
jg
outsl
or
push
int3
out
or
mov
xor
rcrb
call
cmc
and
or
jecxz
or
and
cmp
jmp
xchg
std
push
jecxz
in
out
gs
std
iret
and
sub
aaa
or
divl
loop
mov
subl
cwtl
inc
decl
inc
push
push
loopne
test
xchg
adc
cli
or
mov
push
vpshufhw
enter
lcall
leave
roll
dec
jbe
jae
push
daa
popf
mov
mov
mov
jmp
cmp
shrb
rcll
jae
mov
push
adc
lcall
cld
ret
ffreep
sub
iret
push
mov
mov
dec
fs
mov
repnz
pop
cmp
dec
popl
mov
call
imul
sbbl
fcmovnu
inc
sub
fnstcw
jmp
int
loopne
imul
jae
jmp
and
pop
pushl
je
outsl
push
lea
mov
mov
insb
add
repnz
or
cmp
and
cwtl
mov
in
movsb
inc
or
dec
jecxz
ja
xor
dec
leave
sub
ljmp
inc
xchg
inc
mov
jbe
int3
pminub
ljmp
fcmovbe
shlb
pop
push
mov
lods
aaa
pop
fistl
nop
fdivs
xchg
pop
pop
jbe
pop
clc
mov
insb
test
pop
push
popa
ljmp
jmp
xchg
incl
gs
fidivl
mov
clc
cltd
sub
or
or
or
aad
cli
inc
push
aad
adc
cmpl
ljmp
out
sub
das
pop
mov
xor
sbb
fstpt
and
jmp
clc
pushl
or
sar
xchg
inc
int3
sbb
ret
adc
xchg
stos
lods
add
and
cmp
fbstp
popa
stos
hlt
push
or
clc
sbb
nop
inc
xchg
imul
adc
xchg
arpl
jg
mov
xor
icebp
jg
sub
xchg
fstl
push
cltd
ss
xor
sbb
adc
decl
or
and
xor
sar
or
inc
cwtl
inc
add
push
adc
mov
fucom
or
pushf
push
stos
fcmovbe
pusha
sahf
insl
mov
push
stc
ja
insl
xchg
lds
in
push
jns
mov
cmp
adc
div
rorl
mov
jno
xor
mov
cmp
jmp
shlb
inc
mov
mov
fcompl
or
pop
rcrl
decl
adc
popa
and
push
add
popf
add
pop
pop
push
or
inc
jno
jg
cmp
xchg
xchg
inc
cmpsb
cmp
and
mov
push
or
fiaddl
pop
push
and
das
icebp
ljmp
xchg
inc
in
sub
push
dec
sub
cmp
sub
mov
pop
cmp
cmp
and
jmp
mov
repz
and
lret
jl
add
fbld
mov
or
cmc
jbe
mov
jno
aad
push
push
mov
aad
mov
int
xor
fs
mov
decl
movsl
aaa
push
adc
sub
out
mov
pop
xor
pushl
shl
lods
add
insb
pop
cmp
popa
push
sbb
das
add
shll
xchg
pushf
dec
clc
xor
and
decl
loope
insb
mov
adc
pusha
stc
inc
xchg
scas
pop
lods
xchg
jne
aas
mov
ja
fdivrs
and
call
xchg
adc
movsb
xchg
out
and
cmc
mov
pop
lods
jmp
call
pop
nop
pop
mov
lahf
cwtl
imul
pop
call
decl
std
xor
dec
mov
nop
je
call
cmpsb
cmp
aam
mov
mov
dec
loope
fisubs
outsl
cmp
sub
jne
mulb
xor
leave
arpl
xor
mov
sbbb
outsb
sbbb
fisttpll
mov
push
aaa
clc
mov
sbb
out
movsl
ficoml
pushl
mov
test
jle
pop
mov
dec
cmp
test
aas
sub
xchg
cmpsl
in
ss
or
add
loope
xchg
dec
mov
jp
and
aad
setg
nop
gs
xor
and
mov
xchg
sarl
and
outsl
and
mov
arpl
push
sbb
scas
sahf
inc
movsl
pop
test
or
sub
jmp
int3
push
jmp
cs
dec
xchg
into
cmp
pop
pop
stos
xchg
jmp
xchg
push
lock
in
xchg
mov
decl
lcall
push
rcll
mov
stc
insl
sub
je
rcr
add
push
lcall
xchg
adc
and
dec
sub
push
rorb
jl
lock
call
mov
mov
lea
adc
dec
imul
out
cltd
aam
fucomip
das
leave
xlat
testb
insb
pop
mov
popl
call
cwtl
pop
sti
sahf
js
daa
cmp
dec
jnp
iret
ffreep
push
adc
in
mov
icebp
ljmp
mov
enter
insb
sbb
scas
imul
lcall
pop
mov
ret
pop
scas
mov
sub
sbb
dec
hlt
xor
and
dec
fdivr
ljmp
mov
sub
or
testl
xor
jmp
adc
or
aad
jae
imul
jmp
aaa
mov
shrl
rcrb
dec
add
test
push
out
scas
adc
pusha
mov
cmpsb
mov
data16
mov
movsl
enter
incb
lret
xorb
std
mov
test
dec
inc
rclb
aam
leave
iret
mov
in
call
inc
es
xor
int
push
mov
dec
lods
into
cmp
dec
popf
lods
jbe
and
out
push
pop
pop
adc
xor
adc
nop
mov
dec
mov
and
imul
call
enter
int3
cmpsl
jns
ja
push
hlt
lock
cli
arpl
xchg
jns
pop
cmp
mov
mov
mov
icebp
incl
pop
movl
pop
popa
clc
jae
out
mov
das
cmc
dec
xor
adc
cmpb
pop
pushf
mov
pusha
sbb
or
sar
decl
dec
mov
ret
rcrb
sbb
jns
jle
pop
sub
lcall
icebp
mov
in
push
inc
push
loopne
pop
mov
incl
dec
pop
jb
negl
leave
movsb
pop
aam
incl
call
call
ss
andb
loop
popl
mov
pushl
xor
jecxz
lret
mov
into
mov
xchg
cs
call
xor
lret
je
popf
mov
lahf
mov
aaa
or
push
imul
xor
cltd
push
ret
dec
les
xor
enter
nop
and
add
lods
xchg
xchg
gs
jp
push
mov
int3
dec
jno
mov
sbb
and
sbb
adc
scas
xchg
jle
incl
cld
mov
jns
jmp
into
js
insl
dec
pop
push
sub
push
or
inc
repnz
movsb
frstpm(287
mov
call
mov
sbb
icebp
jmp
ds
mov
test
jbe
test
pop
dec
fbld
fmul
cmpsl
jo
inc
pop
data16
in
xor
fcmovnu
xchg
je
xchg
mov
test
loope
leave
mov
sti
push
cmp
mov
pop
std
jmp
adc
gs
aad
xchg
ret
pop
adc
xlat
rcll
fisubrl
jg
dec
pop
sub
aam
std
add
into
ret
outsl
popf
test
or
adc
out
gs
insl
fldenv
mov
cmpsl
lcall
xor
mov
push
in
jecxz
cmp
mov
pop
insb
and
fdivr
cmp
jns
jnp
loop
push
mov
sbb
dec
outsl
push
loopne
mov
js
mov
mov
mov
pushf
mov
das
lock
cld
and
add
mov
mov
add
xchg
aaa
incb
adc
cmp
or
imulb
cmp
cmp
adc
adc
dec
lea
cld
push
push
sub
pop
call
iret
pop
cmp
cmp
add
pop
and
into
in
les
mov
push
paddb
int3
cmp
or
adc
pusha
int
jo
hlt
jmp
push
xor
jns
aaa
fadd
xor
pop
loop
dec
or
and
popf
rorl
mov
test
nop
sbb
pop
cs
dec
ljmp
rcrl
sub
movsb
popa
and
stos
sbb
mov
div
xchg
nop
sub
inc
aad
sti
xor
and
push
sbb
int3
test
dec
stos
mov
or
popa
dec
in
mov
cmp
adc
fistpll
in
jb
cmp
js
inc
out
int
mov
pmulhuw
mov
pop
fsts
pop
sar
push
jl
pop
cmp
incl
outsb
push
xchg
mov
loope
out
xor
les
inc
cmc
notb
xor
sub
push
sbbb
std
outsl
icebp
pop
and
mov
dec
nop
into
and
mov
xor
pop
fistl
divb
lea
sub
int3
js
ret
xchg
test
push
and
inc
jbe
movsl
xor
push
jnp
mov
mov
cld
std
std
sub
mov
inc
pop
bound
pushf
lods
cmpsb
ficomps
rclb
lods
lods
decl
ret
ret
cmp
lock
xor
dec
fbstp
adc
mov
add
imul
rol
pushl
clc
insl
int3
sub
fmul
pop
cmp
cltd
lret
mov
call
call
push
sbb
push
jg
add
fwait
lods
test
movsb
loop
jo
or
pushl
imul
mov
lcall
sbb
aas
add
cltd
dec
dec
int3
push
decl
insb
sub
lret
mov
xlat
test
daa
mov
dec
push
mov
cltd
ud0
decl
adc
rcll
pop
inc
into
fildl
add
pushl
iret
and
fstpl
insb
gs
jl
decl
ljmp
inc
xorb
fisubs
rorb
in
xlat
call
or
mov
aam
pop
mov
jb
lahf
push
pop
xor
outsl
cld
decl
popa
shl
mov
mov
adc
mov
inc
cmp
sbb
dec
jmp
imull
es
andl
xor
mov
lds
dec
cltd
add
mov
lods
into
jo
repnz
dec
shll
cltd
mov
dec
add
jmp
jmp
mov
xchg
in
vmovaps
add
dec
aaa
mov
xchg
pushl
cmp
fstpt
aad
adc
pop
repnz
fisttpll
push
outsb
imul
in
clc
jb
icebp
xorl
gs
or
cmp
jp
push
cli
ljmp
or
leave
rclb
xor
ss
leave
sti
jl
in
fdivrl
icebp
add
xchg
cmp
aaa
adc
imul
fldenv
icebp
cld
dec
shlb
add
mov
hlt
nop
pop
push
or
inc
cmc
js
mov
scas
lea
sub
bound
scas
jmp
pop
pop
add
pushl
fs
scas
xorl
testl
mov
orb
xchg
xchg
out
jmp
adc
inc
test
mov
nop
xchg
push
push
dec
xchg
shll
adc
std
push
adc
sbb
call
cmp
stos
lods
pop
out
cmpsb
decl
push
add
mov
test
in
in
dec
leave
in
cmp
decl
mov
idiv
clc
pop
enter
sub
data16
daa
mov
xchg
jne
cmp
call
clc
ss
inc
gs
mov
mov
pop
sub
xor
mov
int3
and
incl
lea
pop
and
gs
mov
int
add
inc
fsubl
push
pop
mov
cld
ljmp
sbb
mov
sub
sub
aam
push
mov
jmp
mov
mov
lds
pop
sub
sti
je
out
cmp
mov
aad
mov
adc
out
jno
aaa
adc
sub
ffreep
jg
aas
push
adc
add
mov
lods
and
dec
pop
std
inc
push
and
push
daa
mov
or
pushl
inc
push
sbb
add
mov
ljmp
sar
inc
push
inc
dec
ja
sbbl
pop
inc
push
xchg
pop
mov
or
dec
xor
pop
mov
xchg
adc
mov
fidivrs
sahf
pop
inc
aad
out
decl
jae
cmpsl
mov
lret
lret
adcb
mov
call
shlb
mov
rcrl
lret
mov
cmp
xchg
pop
add
mov
outsl
push
sti
insb
idivb
test
lock
out
mov
cmpsb
daa
dec
ljmp
insl
add
xchg
lahf
dec
and
ret
push
bndldx
cmp
out
aaa
call
jnp
loop
cmp
daa
decl
mov
push
and
pop
sbb
fnstsw
lock
mov
je
movsb
ret
outsb
stos
gs
pop
mov
push
js
mov
fsts
rclb
addr16
lds
movsb
cmp
adc
lret
inc
add
lock
hlt
cmp
hlt
insb
ret
pop
popa
dec
mov
xor
divb
mov
sbb
lods
jne
xor
xor
dec
xor
inc
sub
mov
jg
dec
movsl
add
ret
mov
sahf
sbb
mov
or
mov
flds
call
out
xor
lea
sbb
sub
push
cld
negb
sub
enter
inc
int
stos
fdivrs
ret
enter
or
ret
pop
add
pusha
ljmp
cld
outsl
jno
mov
int
rcll
xchg
fstpt
add
cmp
outsl
std
call
cmp
out
mov
sbb
shlb
fwait
sub
jmp
add
pop
mov
hlt
arpl
pop
mov
daa
inc
incl
lock
loopne
int3
rolb
sti
sbb
aaa
mov
sbb
sbb
daa
cmp
fidivrs
icebp
mov
mov
cmc
fsubr
fwait
js
pop
insb
jne
push
push
loope
in
push
mov
pushl
loope
xor
out
sub
out
mov
orb
clc
cmp
cmp
pop
add
int3
in
dec
mov
xor
das
jl
pop
pop
fldl
pop
int3
fwait
dec
xlat
mov
inc
call
nop
es
scas
lret
cmpsl
push
and
pushf
mov
or
insl
iret
mov
jmp
mov
jns
xchg
lods
fimuls
rcl
jp
or
sbb
push
repz
jmp
ljmp
idivb
scas
in
sti
testl
sbb
mov
cwtl
test
sub
cmp
or
adc
pusha
dec
mov
adc
push
aad
push
pushf
popf
dec
mov
rcrb
data16
xor
test
jb
and
sub
jmp
mov
ljmp
xchg
mov
inc
dec
or
mov
cli
pop
pop
stc
fs
or
fildll
ljmp
dec
gs
stos
and
push
std
xchg
jne
andl
jmp
and
shll
inc
and
mov
loopne
and
adc
mov
and
mov
pop
mov
ljmp
lea
adc
fildll
xchg
orb
xor
incl
mov
pop
add
les
xlat
repnz
inc
or
xchg
jb
ds
mov
loopne
adc
mov
hlt
loope
mov
in
dec
fnstcw
loop
sbb
push
mov
push
lahf
xchg
hlt
sub
cmp
les
cltd
xchg
cmp
dec
idivl
ds
mov
pushf
aas
cmpsb
outsb
lods
lods
push
push
lcall
fwait
push
jbe
shrb
incl
pop
ja
sbb
imul
int
arpl
fisubrl
mov
test
daa
shrb
lcall
out
fidivrs
mov
aad
je
dec
jge
sahf
pop
call
jns
mov
mov
mov
cltd
add
cwtl
das
mov
dec
mov
dec
push
fwait
xchg
mov
cmc
inc
gs
mov
push
mov
das
mov
decl
out
in
fwait
inc
push
mov
push
mov
sbb
aas
js
pop
dec
cmpsl
dec
shlb
decl
les
mov
fisubs
mov
out
loop
ret
jbe
mov
lret
jle
and
scas
mov
sub
xchg
insl
inc
push
jo
dec
jns
or
cmp
inc
cmp
lahf
cmp
imul
push
push
outsb
inc
int
rorl
add
sub
jle
cmpsb
clc
in
jecxz
ljmp
adc
insb
and
xor
cmp
icebp
jp
insl
sbb
hlt
pop
lods
rcrb
pushf
je
nop
sti
xor
jae
call
xchg
jge
stc
iret
push
push
sub
jmp
aam
sbb
pop
mov
hlt
sub
fmuls
inc
imul
imul
dec
ljmp
ret
mov
mov
incl
inc
adc
lahf
int3
lods
out
mov
adc
clc
mov
int3
fildl
cld
pushf
push
jno
jl
adcb
das
hlt
ljmp
push
mov
jae
mov
push
in
push
cltd
movsl
jb
in
in
sub
pushf
and
jb
and
pop
pop
sbb
or
out
cmpsl
fwait
ja
stc
js
mov
call
negl
cmp
sub
sub
cltd
xor
scas
and
sub
les
add
push
bound
loope
jecxz
pop
nop
ja
or
aam
in
sahf
mov
pop
cmp
jns
inc
jle
xchg
and
cli
lcall
movsl
sahf
mov
dec
and
mov
in
cmc
in
js
inc
sarb
mov
pop
cs
imul
in
jns
xchg
dec
sbb
jmp
fs
adc
outsb
inc
ret
and
call
mov
test
lcall
pushf
aam
out
scas
out
mov
in
jle
sub
mov
adc
sub
iret
xor
dec
andl
stos
cmpsb
ja
jg
lcall
outsb
int3
cs
loopne
mov
outsl
pmaxsw
loopne
adc
fistps
push
fldcw
icebp
dec
lea
sbb
adc
sbb
shlb
ljmp
call
xchg
imul
jae
push
xor
fldl
jmp
leave
out
dec
cld
or
xlat
out
push
cwtl
mov
inc
movl
ret
enter
mov
xor
adc
push
or
mov
jmp
pop
jbe
sub
add
xor
pusha
les
aaa
js
outsb
mov
jne
or
js
jg
rorl
and
jl
sbb
ss
push
leavew
bound
pop
lcall
jge
jp
in
cmpsl
xchg
jp
mov
ffree
xchg
pop
xor
xchg
sbb
call
adc
or
dec
jne
cmp
out
pop
adcl
jbe
and
outsl
cld
lea
xor
cld
mov
mov
add
mov
push
or
ret
stos
xor
or
mov
push
jnp
das
icebp
mov
sahf
sbb
jns
pop
jbe
cmc
out
iret
add
call
pop
pop
push
cmp
fxch
xor
call
sub
in
call
mov
or
and
out
fcompl
cmpsl
or
call
orb
lods
pusha
or
repz
mov
mov
daa
push
push
outsb
fmull
mov
call
jp
sub
stc
fwait
das
xor
mov
in
bound
outsl
mov
dec
adc
push
icebp
fucom
inc
lret
push
jle
pop
aaa
pop
adc
push
popf
jo
lcall
inc
fdivl
pop
inc
movsl
pop
and
mov
cld
adc
pop
repz
jmp
dec
add
lret
int
push
push
mov
add
jle
fistpl
xchg
push
bound
sar
pushl
xchg
xchg
fdivs
hlt
cli
std
adc
insb
int
call
mov
lret
icebp
insl
push
sahf
hlt
push
lret
inc
jge
call
adc
lcall
ret
and
mov
or
addr16
movsl
jmp
insl
lock
outsl
mov
into
cltd
mov
pop
cmp
incl
cwtl
pop
sub
pusha
ja
sub
sti
ret
cmp
cmp
mov
mov
ljmp
add
lcall
xchg
les
pop
jg
push
mov
jae
mov
mov
ljmp
loopne
icebp
and
jnp
jns
mov
cmp
jle
mov
jne
lods
adc
pop
mov
test
cli
icebp
push
mov
decl
cld
scas
mov
inc
and
pop
icebp
jno
pop
pop
mov
add
fucomip
pop
xchg
shll
xor
inc
cmp
push
lock
jne
test
ljmp
pop
imul
add
sbb
outsl
xchg
mov
incl
pop
add
inc
rcl
mov
je
add
lods
loop
ret
clc
jmp
jl
lods
jnp
iret
jmp
or
lcall
mov
xchg
pop
inc
pop
int
push
aad
push
fsubrp
mov
inc
fdivrp
jg
fcmovbe
data16
jae
mov
jge
jmp
push
pushf
dec
ret
adc
ja
xor
daa
cmpsl
aaa
mov
pcmpeqd
or
ficoms
mov
aad
outsb
add
call
or
push
or
mov
lea
mov
xorl
lcall
lcall
pop
mov
testl
mov
cmpsb
sub
mov
decl
inc
lods
in
sub
mov
push
sbb
inc
fs
jmp
fistps
cmp
jae
call
testb
cmp
push
jmp
jb
sbb
call
out
sbb
add
push
lea
or
inc
outsb
jbe
or
decb
inc
pushl
cmp
insl
imul
cmpsl
push
xchg
jmp
imul
mov
pop
leave
ja
lods
pop
adc
cmp
movl
xchg
pop
call
data16
push
lcall
and
jb
mov
mov
das
mov
and
push
add
mov
mov
dec
inc
loopne
jg
add
pop
or
movsb
stos
pop
repz
mov
fbld
divb
pop
and
sub
call
cmc
outsb
adcb
lods
es
pop
lcall
xchg
mov
sub
sbb
xor
loopne
xchg
pop
push
xchg
loop
or
mov
fsubs
inc
mov
cmp
cld
ljmp
inc
lret
shrb
inc
xor
orl
out
or
ljmp
lods
roll
and
notb
fnstsw
mov
fidivs
std
sbb
mov
out
inc
shll
mov
pushl
xchg
mov
movsb
int3
mov
mov
nop
lret
in
add
in
mov
adc
stc
add
dec
aaa
xor
add
idivl
stos
adcl
cs
fisttpll
fnstenv
push
lea
ljmp
cmp
or
jp
mov
outsl
in
sbb
loope
fidivrs
mov
xchg
cmp
lcall
cmpb
into
inc
dec
jnp
divl
mov
leave
sub
repnz
pushl
pop
js
jb
stos
ror
movl
push
xorl
add
out
mov
add
jmp
push
ret
call
mov
aaa
jne
fldl
mov
pusha
mov
test
mov
xchg
or
xchg
test
or
in
dec
push
mov
adc
incl
scas
jne
cmp
jne
lea
jmp
push
imul
insb
sbb
rorl
inc
jb
gs
fnsave
sub
je
arpl
xchg
add
ja
add
add
jp,pt
or
add
imul
add
or
ljmp
jle
push
mov
jbe
and
or
push
and
mov
add
jg
sar
das
pushl
push
push
call
cmp
jne
add
out
cmp
test
movsl
or
or
je
js
lods
cmp
xchg
mov
cmp
je
inc
dec
jmp
mov
or
add
imull
add
push
add
add
aaa
lock
into
pop
pop
pop
pop
jmp
pop
dec
mov
add
mov
sar
rep
popa
loope
rep
pop
movsb
outsl
add
test
ret
ret
test
jge
dec
sbb
mov
dec
or
or
fisubrs
call
je
mov
shr
mov
popf
adc
mov
mov
ja
dec
je
mov
or
jmp
xchg
mov
jmp
sti
add
je
add
loope
and
sub
and
add
jmp
push
outsl
das
leave
xor
or
cmp
outsl
dec
add
mov
lcall
adc
repnz
sar
ret
das
add
mov
lods
stos
jmp
mov
aaa
push
push
push
or
jae
and
inc
ja
insb
sbb
dec
test
pop
ja
test
add
xlat
mov
insl
xor
sbb
cli
rorl
ja
in
test
push
movsl
sub
ret
add
jne
add
inc
inc
push
lods
xor
jg
mov
cwtl
fadd
cs
std
jne
and
push
mov
adc
pop
sahf
fildl
ss
cltd
sti
push
jmp
xlat
cmp
jne
sub
dec
shl
xchg
mov
mov
fdivr
cmp
pop
cmp
add
add
pop
jmp
sub
ret
mov
and
cmp
xorl
mov
mov
add
ds
or
jo
jae
mov
sbb
mov
cmp
push
push
add
pushl
dec
insl
lock
push
push
movzwl
add
lea
incb
popa
inc
add
cmp
dec
movsb
sti
jg
jne
inc
mov
add
inc
pop
loopne
add
and
or
and
cltd
mov
std
mov
mov
loop
or
sbb
outsb
mov
push
or
or
sti
test
add
ret
or
outsb
fwait
mov
push
dec
sub
mov
data16
or
cwtl
mov
sbb
fstp
mov
call
jne
push
lea
lods
mov
sub
pop
mov
cmpsb
add
push
pop
imul
fcmovb
test
js
je
jne
sbb
mov
popa
addr16
outsl
js
add
jo
imul
or
inc
inc
push
and
push
dec
push
add
pop
stos
jo
cmp
gs
xchg
fldt
jb
movq
push
inc
pop
ret
jne
and
stos
popa
je
mov
scas
je
fs
popa
insl
imul
shl
fnsave
cmp
imul
mov
lcall
ret
rclb
shlb
xor
dec
jne
lods
cmp
jmp
xchg
pop
ret
add
jg
inc
filds
add
xor
sub
inc
xchg
movl
stos
sub
sbb
or
pop
and
mov
jae
pusha
add
sbb
test
pop
nop
or
stos
mov
push
in
push
mov
dec
out
push
call
and
push
xchg
and
sbb
push
sbb
or
mov
incl
pusha
aaa
sub
push
loopne
and
and
add
sbb
ret
add
insb
dec
clc
incl
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
imul
fistps
inc
inc
or
or
call
or
or
adc
add
orl
rcll
push
push
cmp
divb
add
xor
mov
mov
inc
mov
xchg
out
mov
inc
adc
or
loopne
and
mov
fucomi
add
decb
cmp
jae
pop
mov
lods
mov
sub
shr
mov
inc
add
add
pop
mov
mov
add
daa
jle
push
add
mov
pop
fnsave
push
mov
add
pop
push
push
push
push
xchg
push
mov
jnp
stos
sub
mov
rep
mov
dec
and
pop
loope
jbe
xor
mov
mov
pop
add
cmp
mov
jb
mov
pop
pusha
je
sub
inc
or
incl
sbb
leave
jecxz
mov
sti
std
pop
mov
or
adc
xor
shl
add
sbb
insl
and
xchg
push
pop
fsubrl
das
xor
cmp
mov
mov
insb
or
bound
jb
mov
into
fucomip
sub
mov
mov
imul
pop
cmp
or
jmp
mov
stos
sub
sub
dec
cmp
faddl
add
or
jnp
xchg
jge
maxps
ja
daa
sbb
adcb
rorb
leave
test
adc
jbe
mov
push
je
xchg
push
mov
test
pop
test
or
cmp
jo
lea
ja
inc
mov
cmp
enter
mov
andl
push
jno
add
jb
mov
mov
inc
mov
inc
fimull
mov
out
insl
mov
push
scas
ret
pop
lret
stc
sub
out
or
adc
lret
or
add
test
sub
lcall
mov
out
jmp
cmp
jae
add
sbb
outsl
pop
mov
dec
ljmp
xor
mov
mulb
and
xor
adc
sbb
sub
sub
jns
cli
mov
add
sbb
outsb
ret
jb
jae
xchg
add
js
inc
add
mov
sbbl
int
xor
aas
mov
add
push
loope
std
out
push
call
xor
mov
and
or
mov
repz
cmp
xchg
lea
push
push
jbe
call
lea
xor
xor
sub
mov
push
mov
ret
add
and
jmp
add
dec
lea
or
inc
add
addb
jnp
call
add
mov
mov
adcb
insl
scas
pusha
aam
or
xchg
xor
rcrb
pop
fcmovbe
and
lea
mov
mov
call
or
notb
and
xor
adc
or
aaa
sbb
cli
enter
adc
lea
ja
repnz
mov
call
scas
imul
xor
push
or
adc
mov
add
and
sbb
jbe
pushl
inc
jmp
jne
push
pop
mov
and
add
dec
cmp
jge
mov
dec
mov
jg
jmp
inc
sbb
fistl
xchg
push
sub
daa
push
jmp
js
cmp
pop
lahf
jne
push
add
aaa
in
adc
mov
sbb
lea
push
call
std
lock
test
lea
and
adc
sbb
add
mov
jl
add
out
rorb
sbb
push
lea
movsb
push
imul
jecxz
pop
sub
in
pop
or
int3
movl
xor
xchg
inc
ret
mov
call
jae
out
mov
fcmovnu
mov
inc
cmpsl
push
and
sub
pop
or
adcl
and
outsl
das
loopne
shr
es
pop
jecxz
pop
push
push
sub
rclb
or
aam
mov
xor
insl
lods
xor
or
jb
xorl
aad
or
xor
push
or
movsb
pop
daa
aad
ljmp
fsubrl
lret
xor
imul
push
lcall
mov
pop
jmp
xor
xchg
das
pushf
fwait
xchg
xor
je
cmp
jb
mov
xchg
sbb
push
outsl
std
push
inc
add
push
jle
sbb
data16
adc
outsb
jmp
aad
sar
imul
mov
lods
stos
mov
enter
test
sub
and
add
int
sbb
jmp
adcl
and
mov
pop
mov
loop
pop
push
xchg
sub
fcom
imul
and
xchg
iret
xchg
adc
imul
adc
hlt
jmp
xchg
mov
push
loopne
sbbb
inc
lea
cmp
pop
clc
outsl
mov
jae
shrb
roll
adc
test
inc
mov
enter
rorl
call
cmp
sub
sbb
lods
and
lcall
fbld
fwait
int
or
sbb
test
and
inc
and
fs
push
dec
outsl
cmc
insb
gs
popa
popf
shll
outsb
and
adc
fs
xchg
test
test
push
mov
add
cmpsl
dec
push
xchg
call
testl
test
pop
and
ss
xor
movsl
movsbl
cmp
outsb
cld
sub
inc
nop
lods
or
cltd
outsl
addr16
mov
testb
adcl
xor
jge
sidtl
daa
push
testl
divl
add
sbb
inc
push
shlb
or
dec
testl
jnp
test
sti
mov
adc
xor
dec
daa
push
jmp
jb,pt
jb
add
mov
pusha
push
adc
daa
pop
add
or
sbbb
adc
in
test
movsb
daa
sub
xorl
mov
cmp
dec
rorl
cltd
pusha
ret
adc
pushl
adc
adc
sbb
adc
sarb
decl
inc
pop
jbe
fimull
pop
dec
std
rolb
sbb
pushl
push
loopne
stc
jo
loope
out
jg
outsl
mov
out
dec
push
idiv
jg
push
pop
xchg
loope
push
and
in
in
adc
dec
lods
imul
push
ret
xor
push
xchg
fstps
subpd
sub
or
push
cmc
insb
mov
push
push
xor
idivl
addr16
dec
mov
cmpsw
xlat
xchg
inc
adc
shrl
lcall
sbb
js
xchg
out
cmp
jb
and
cmp
add
out
test
lcall
decl
dec
mov
nop
ss
adc
adc
jmp
mov
jmp
sub
sar
test
aam
repnz
ret
bound
jno
add
imul
jmp
fnsave
shll
pop
clc
inc
pop
xchg
mov
and
imul
lcall
mov
xchg
test
and
lahf
ret
jg
or
shrb
cmpsl
enter
lock
das
shll
inc
test
jmp
jmp
mov
sbbb
lret
add
loop,pt
cmp
icebp
clc
incl
jns
sbb
mov
sbb
cltd
ja
sub
inc
lcall
and
ss
pop
data16
lods
ret
add
cld
and
stos
mov
jmp
lret
sbb
into
sbbl
sub
int
mov
fists
sahf
add
std
xor
adc
mov
ss
ss
inc
addr16
cmc
push
xchg
push
jecxz
jnp
push
icebp
arpl
int
roll
outsl
push
and
call
std
or
jge
paddd
call
scas
inc
js
cmp
lea
lcall
push
mov
mov
adc
stos
iret
mov
decl
inc
or
dec
adc
inc
sbb
jg
pop
fwait
bound
and
add
add
out
and
fisttpll
pushl
cs
aam
push
jle
pop
xchg
mov
std
test
sub
decl
aam
rclb
sbb
fs
mov
hlt
jns
bound
mov
lahf
adc
pushl
hlt
mov
xlat
add
loop
dec
sub
inc
push
mov
cld
pushf
call
mov
fmul
call
lret
cmc
and
xor
test
lods
add
mov
ljmp
inc
fisubs
xor
sbbl
mov
std
pusha
mov
sbb
mov
fadd
adc
lret
in
scas
cmp
sbb
shl
inc
cmpsl
pusha
xchg
les
mov
leave
jp
push
pop
dec
pushf
rclb
aas
or
lret
mov
dec
jmp
stc
push
daa
cmp
mov
les
loope
xchg
fwait
xor
pop
fstpt
das
cmc
mov
inc
ds
adc
lahf
mov
mov
jnp
dec
sar
hlt
mov
or
dec
push
mov
lods
mov
mov
mov
dec
stos
xor
or
gs
call
cli
icebp
outsl
cld
insb
push
arpl
xchg
jbe
push
mov
shlb
incl
nop
and
stc
pop
scas
xchg
cmc
arpl
dec
xchg
sbb
test
sub
push
dec
test
data16
jno
dec
cltd
popf
jo
mov
or
adc
scas
cli
or
iret
adc
sbb
push
test
pop
pop
mov
loopne
int3
push
and
pop
scas
ss
cmp
mov
jno
jmp
mov
or
pop
xor
sub
jle
cmp
call
cmc
aad
dec
or
cld
pop
mov
out
js
pop
lea
xchg
dec
xchg
push
in
pushl
xchg
adc
fiadds
jnp
and
jnp
add
out
and
cmpl
lcall
or
mov
jp
fcomip
sub
and
mov
ljmp
push
mov
dec
inc
daa
sub
mov
jg
outsb
lcall
push
mov
pop
pop
clc
cmp
or
rclb
in
in
aaa
imul
ror
lock
add
call
inc
test
and
lcall
fimull
test
out
jg
jmp
mov
dec
xor
fnclex
mov
mov
in
jg
decl
or
dec
add
lahf
xchg
pop
push
xchg
popf
jge
es
jmp
xorl
xor
pusha
test
mov
pop
pusha
xchg
sbb
pushl
push
scas
adc
fcompl
rorl
hlt
loope
into
test
test
arpl
jecxz
ja
test
out
or
call
in
aas
jmp
shld
dec
repz
ss
cmp
pushl
or
pushf
sbb
or
loopne
inc
jecxz
in
jmp
pusha
repnz
sbb
fidivrl
push
inc
aas
cs
push
push
orl
xchg
stos
outsl
mov
inc
in
out
clc
pop
scas
and
sbb
decl
mov
inc
mov
xor
push
das
rolb
daa
sub
jl
jl
push
ds
mov
jo
fidivl
mov
lret
sub
aam
stos
stc
mov
jnp
add
adcb
cmp
into
fidivrl
ret
pop
xchg
push
repz
clc
jge
cs
mov
mov
addl
dec
mov
dec
inc
jns
jmp
mov
stos
adc
popf
mov
scas
call
xlat
loope
out
scas
insl
mov
pushl
out
ja
and
clc
dec
gs
fstl
push
f2xm1
dec
hlt
scas
pushl
xor
bound
aam
adc
insb
xor
mov
lcall
xchg
or
pusha
lock
push
popf
dec
mov
push
mov
adc
sahf
pop
clc
dec
mov
dec
fsubl
insl
cli
dec
inc
fcompl
cld
jg
fbld
and
rcrl
dec
jge
in
adc
mov
mov
test
sub
xlat
push
inc
mov
popa
push
ljmp
std
lcall
mov
push
out
clc
push
fnstsw
pop
loopne
mov
aam
pushl
push
adc
ret
loop
and
add
movsb
aam
cmp
idiv
push
pushl
ja
inc
dec
sub
data16
pushf
icebp
mov
out
push
jl
mov
shrl
movsb
cli
fbstp
inc
flds
sbb
mov
sbb
mov
xor
jnp
or
mov
sbb
pop
cld
fsqrt
out
sub
frstor
sbb
pop
mov
mov
dec
cmpsl
popf
cltd
push
aam
popa
into
xchg
outsl
fst
jnp
mov
push
inc
xchg
sbb
mov
incl
cmp
jbe
int3
idivl
dec
xor
popa
or
mov
mov
ljmp
sbb
ss
leave
es
aas
ljmp
mov
es
push
sbb
cmp
and
in
lcall
jno
rclb
pusha
push
mov
pop
xchg
push
aaa
sbb
pushf
negl
xchg
cmp
call
std
lods
push
les
insb
ss
rclb
inc
aaa
mov
mov
ret
xchg
mov
or
inc
sub
loop
in
inc
adc
inc
or
ljmp
insl
and
xor
movsl
repnz
push
pop
inc
inc
inc
add
loope
mov
push
clc
xchg
xor
lock
call
inc
shll
fwait
jl
test
roll
sub
xor
lret
xchg
in
dec
mov
shll
mov
insl
std
mov
stc
mov
mov
sub
pop
xchg
sub
cmp
decl
sbbl
inc
lods
xchg
and
inc
sbb
add
das
les
xor
xchg
cltd
movsb
xlat
pavgw
decl
nop
cs
data16
test
orb
mov
sbb
int3
mov
sbb
jb
xor
lods
push
adc
cmpsl
push
dec
mov
popf
fisubl
xlat
out
jmp
cld
idiv
pushl
sub
push
movsl
mov
icebp
fildll
js
dec
cmc
add
or
pop
jo
into
lods
pusha
jb
test
pop
sahf
mov
jno
or
out
pop
cli
jmp
out
xor
shrl
iret
mov
push
inc
clc
xor
mov
mov
incl
pop
rcll
movsb
imulb
ja
ficoml
fmulp
shll
pop
lock
cmp
mov
clc
mov
sarl
stos
mov
push
not
scas
xchg
adc
dec
jo
shll
ficompl
imul
inc
adc
scas
cmpsl
stc
mov
imul
push
pop
mov
pop
push
stos
sbb
cld
jmp
out
call
cmpsb
aas
mov
js
jne
xor
jnp
roll
movl
push
mov
aad
subb
mov
cltd
das
jmp
lcall
jp
add
out
pop
icebp
mov
imul
or
jg
cmp
push
into
aaa
rol
fstpl
shrb
ret
mov
mov
or
dec
push
insl
sbb
and
mov
add
mov
mov
push
insb
inc
pop
mov
push
subb
ljmp
jne
inc
pushf
stos
lock
cmp
jg
sbb
xor
prefetch
or
addl
push
call
cmp
jl
push
gs
rcl
xchg
into
and
jg
mov
rorl
ds
add
mov
xchg
jnp
repz
xorb
pushl
out
jno
jl
outsb
and
stos
jg
add
inc
jle
mov
push
jo
cmp
hlt
pusha
fcomp
je
or
inc
mov
test
icebp
dec
cwtl
pop
js,pt
sbb
add
mov
cmp
xor
adc
jbe
aad
jg
fnstenv
push
mov
jb
and
and
mov
das
cmc
xor
mov
idiv
daa
sbb
cwtl
sub
fs
fwait
jbe
pop
or
xchg
leave
jne
mov
mov
jmp
ljmp
insb
fldcw
gs
dec
ret
push
mov
mov
ja
add
mov
test
xchg
pushf
movsl
pushf
jno
das
into
rcrb
adc
push
xor
out
mov
push
fcmovnbe
pop
mov
jb
or
sub
and
push
cltd
xchg
push
std
sbb
push
faddl
or
add
andl
and
jnp,pt
and
into
mov
addr16
lret
hlt
mov
lret
ljmp
cmc
decl
push
xchg
cmp
lret
jno
inc
rcll
ds
dec
in
movsl
addr16
dec
inc
es
gs
mov
push
push
stos
push
pop
sti
or
imulb
cmp
jg
jg
dec
cmp
iret
push
dec
in
adc
and
jb
std
in
jle
lretw
lock
mov
ljmp
and
adc
stc
push
cwtl
stos
xor
pop
jmp
aaa
dec
inc
push
and
sub
lods
call
insl
pop
sub
enter
pop
mov
fnstenv
mov
jle
ljmp
mov
add
inc
fbld
lahf
test
int
dec
add
decl
shll
dec
lods
pop
cmp
adc
sbb
jge
and
mov
clc
dec
jno
int3
dec
fwait
inc
cmp
lcall
shl
dec
jnp
push
adc
fwait
sarb
repz
outsb
imul
lcall
out
imul
mov
xchg
jb
sbb
push
icebp
mov
xor
cmc
or
ljmp
mov
rcll
test
push
cs
cmpsb
ud0
mov
push
add
jl
dec
mov
sub
into
mov
mov
push
stos
test
faddl
je
push
adc
stos
pop
push
mov
mov
pop
or
int3
pop
hlt
shll
lcall
xchg
xchg
inc
mov
add
repz
scas
inc
out
call
fnstsw
adcl
mov
popa
push
lret
push
stc
scas
out
push
fstpt
call
out
push
lret
inc
cmp
lret
rolb
js
dec
jmp
fwait
cmc
es
mov
pusha
xor
scas
test
mov
sbb
cli
cwtl
dec
pusha
mov
pop
loop
call
js
push
or
ljmp
fwait
lcall
inc
outsb
xchg
addr16
int
jae
les
out
push
fucomip
fldl
sbb
xchg
movsb
in
push
mov
les
mov
mov
jecxz
or
ret
adc
mov
inc
shll
test
sub
insb
insl
call
bound
mov
and
jg
sub
sbb
mov
cmpsl
push
cmp
data16
lds
mov
cmp
lods
mov
mov
inc
jle
push
push
incl
call
dec
pop
xchg
cmp
into
sti
lds
mull
incl
or
ja
test
ds
fxch
sub
add
outsl
sub
pop
into
xchg
pop
mov
xchg
gs
mov
add
pusha
jecxz
push
jo
pop
or
inc
fmuls
sbb
or
xchg
rcl
shll
jle
ljmp
jmp
ret
pop
ds
adc
sbb
xor
mov
inc
mov
xchg
mov
inc
push
dec
cmp
jns
aaa
xchg
inc
aaa
lods
dec
or
out
adc
and
cld
dec
aaa
repnz
xor
sbb
call
or
stc
inc
and
sbb
js
sub
sbb
lods
xor
lock
jnp
push
rcll
in
pop
sub
lods
ljmp
std
lahf
mov
incl
push
hlt
push
leave
cltd
xor
imul
enter
call
add
out
and
and
popa
shll
std
test
cmp
mov
ja
daa
pop
lods
xchg
cwtl
inc
lods
pop
sti
jmp
add
imul
xchg
mov
repz
sahf
ret
mov
lock
mov
int
mov
pop
rorl
lea
push
cmp
fwait
or
aaa
clc
ljmp
movsb
push
adc
dec
mov
and
call
shrl
pop
and
xchg
popa
int3
dec
sbb
pop
into
sbbb
jge
int3
jo
jge
jae
sar
call
int3
pop
sub
leave
cmc
mov
push
flds
adc
je
mov
cmp
subb
jae
mov
mov
nop
push
push
xor
cli
jl,pn
jb
jmp
jns
jle
repz
cltd
fidivrl
rorl
test
or
cmp
lods
shr
nop
dec
push
dec
and
cmc
pop
pop
fadd
incl
cmpsb
cltd
sahf
fldl
mov
lock
jb
in
nop
repnz
fisttpl
push
pop
aas
cmp
outsl
lock
jo
stos
adc
push
sti
pop
repz
mov
lcall
mov
push
repz
in
xchg
pop
push
adc
jmp
inc
stc
add
ds
inc
xor
addb
pusha
out
test
lock
jge
mov
std
adcb
mov
or
clc
call
lret
xchg
stos
mov
test
cltd
or
jb
mov
out
std
imul
fisubrs
das
std
pop
mov
xchg
daa
repz
jl
push
pop
lcall
lods
and
pop
lods
ret
aas
push
sbb
decl
repz
add
jbe
fmul
cmpsb
push
aam
add
pushf
ret
adc
clc
mov
sub
lea
sub
push
cmc
and
std
jg
nop
addr16
std
mov
call
xchg
insb
les
lcall
shrl
adc
int3
mov
mov
and
inc
ret
mov
dec
mov
lods
or
jmp
adc
mov
pushl
pop
popf
xlat
daa
cwtl
arpl
mov
pop
mov
mov
lcall
stos
fdiv
insl
aas
test
xchg
xchg
xchg
sub
mov
mov
jge
jmp
fstps
push
add
mov
jg
push
or
insb
cmpsb
lcall
das
xchg
jae
jg
ljmp
cld
in
movsb
cmpsl
cmp
sub
addr16
addr16
pop
fucomi
scas
dec
adc
fnstsw
lcall
sbb
push
sub
cli
daa
lcall
ljmp
jno
jg
jl
mov
arpl
es
rcll
aam
ljmp
insl
cmc
fsubrp
lret
jb
imul
aam
xor
dec
fwait
mov
loopne
jnp
and
mov
scas
or
imul
movsl
aaa
in
cmp
fnstenv
hlt
inc
inc
dec
xchg
ss
adc
lcall
cli
in
mov
and
mov
negb
jl
mov
mov
jmp
cmp
repz
mov
xor
xchg
mov
shlb
lcall
jg
adc
mov
es
adc
sub
out
pop
notb
loopne
sbb
mov
xor
addr16
aas
mov
jns
sub
pop
test
and
pop
in
xchg
push
js
aam
push
push
mov
inc
or
push
mov
jecxz,pt
gs
popa
mov
and
scas
stos
or
insb
clc
mov
call
shrb
and
pop
xchg
stos
sub
es
jge
or
pop
aaa
shl
or
out
mov
fs
aam
les
add
call
lcall
mov
cmp
es
pushf
sbb
fcmovnu
insl
adc
or
fs
incl
cmc
cmc
pusha
push
jne
aaa
fisubrs
mov
jmp
pop
add
or
adc
cmc
call
xchg
scas
clc
inc
sub
add
cmp
pop
call
rol
setg
mov
mov
in
test
pop
mov
orb
enter
push
jmp
pop
jmp
and
or
mov
jmp
xor
outsb
dec
stos
pop
loopne
jmp
aad
leave
adc
aas
shll
sub
cmp
mov
mov
insb
test
call
popa
xor
mov
xlat
mov
sbb
daa
pushl
jg
lahf
ja
cli
jno
test
cmp
dec
dec
add
dec
dec
inc
mov
das
hlt
decl
dec
insb
and
inc
or
imul
jmp
clc
fstpl
ja
aas
push
aas
filds
scas
pop
and
jg
mov
pushf
call
das
cld
cltd
je
cmpsl
mov
fwait
pop
dec
js
sub
shr
mov
pop
mov
addl
icebp
mov
push
aaa
movsl
mov
mov
add
adc
rol
jmp
dec
jb
popa
xor
mov
repz
lcall
xchg
mov
and
mov
mov
mov
sbb
test
sub
mov
fsubrl
mov
cs
sbb
mov
mov
out
add
repz
icebp
xchg
pop
cmp
incl
mov
das
sub
out
sub
incb
hlt
int
dec
test
mov
popa
test
fimuls
jb
in
or
mov
jmp
fwait
mov
mov
jecxz
lcall
and
dec
subb
loop
sbb
in
xchg
sub
pop
fiadds
call
imul
lret
or
lret
addr16
ljmp
dec
out
and
jb
loopne
xchg
bound
sub
mov
sbb
inc
add
jl
dec
mov
pop
outsl
inc
cmp
adc
and
mov
jecxz
ljmp
jmp
jne
adc
aad
fstpt
daa
lods
in
cmp
jnp
sbb
cltd
aam
loope
cli
incl
mov
movsb
jmp
inc
aam
inc
ffree
push
insl
jge
sar
jg
test
sbb
push
mov
sub
xchg
pushl
stc
leave
mov
push
popf
rcrb
cli
mov
jge
fs
sub
jno
xor
and
ret
aas
loop
addl
xor
pushl
mov
and
jecxz
mov
mov
cmp
decl
or
pop
icebp
fiaddl
sub
push
sub
sbbl
shrl
dec
push
adc
insb
sub
xchg
cld
cs
call
div
mov
int3
mov
inc
pushf
pushf
add
cmp
test
add
pop
test
dec
add
or
xlat
pop
lock
das
icebp
pushl
loope
and
sub
or
jno
xchg
cmp
inc
fisttpll
jp
sbb
add
hlt
inc
out
inc
icebp
mov
jo
mov
std
pushl
jge
push
pop
sbb
mov
jg
daa
aam
mov
decl
adc
repz
sub
sub
mov
fbstp
lods
lods
fldcw
cmp
dec
sub
decl
pop
dec
add
jg
icebp
jge
xchg
js
sbb
jecxz
mov
push
mov
cmp
sub
jbe
in
rcrb
add
stos
addr16
pop
and
pop
adc
lret
cmc
rorb
and
dec
test
sbb
xor
out
fs
jg
jl
mov
jnp
rcll
mov
or
mov
push
leave
jmp
inc
cmpsl
or
mov
inc
repnz
adc
shr
cmp
movsb
jne
test
jg
xchg
cli
fsubl
inc
jno
add
popf
aad
clc
lock
jns
ss
aad
jb
aam
out
push
clc
add
jge
mov
pop
and
mov
ljmp
test
incl
xchg
mov
jg
dec
mov
adc
lcall
cld
call
mov
adcl
leave
and
data16
jl
jno
jg
flds
clc
stos
pop
shl
outsb
inc
cmp
popa
das
fs
or
xchg
mov
lahf
ljmp
xor
cmp
mov
and
mov
bound
cld
decl
lcall
pop
and
adc
jno
inc
mov
mov
es
adc
out
and
int3
fldcw
roll
inc
addb
std
call
imul
lret
jo
jg
repz
xor
ljmp
adc
vpmacsww
dec
and
js
push
push
push
sub
ds
pushl
enter
mul
out
adc
mov
xorb
loop
or
out
inc
bound
outsb
iret
mov
loop
dec
xchg
push
xor
lcall
xchg
jb
mov
pop
hlt
lcall
call
aas
cmp
sbb
sub
sbb
das
loop
mov
fimull
incl
cld
push
mov
mov
inc
pop
sub
sub
dec
cld
scas
or
mov
jg
push
dec
sarl
loop
inc
xor
pop
push
out
and
lods
pushf
push
xor
jmp
es
flds
shl
stos
or
lret
pop
add
inc
pop
sub
mov
jns
aam
sbb
data16
dec
sub
clc
pop
add
pushl
inc
push
repz
mov
xor
cmp
out
push
or
decl
mov
aaa
mov
xchg
test
pop
add
movsb
adc
inc
cltd
or
nop
leave
pushl
aaa
fbstp
adc
xchg
andl
ds
pop
mov
insl
das
push
xchg
jmp
call
cmp
mov
test
out
pop
sbb
inc
mov
mov
jg
pushl
mov
jne
cmc
jg
stos
movsl
xor
ljmp
mov
add
mov
or
repnz
jl
fmuls
add
xchg
repz
mov
aam
std
adc
subb
adc
pop
or
inc
dec
push
mov
stc
mov
adc
out
inc
push
jmp
inc
lock
mov
cmp
outsl
and
mov
aas
pushl
neg
out
dec
dec
lods
pusha
enter
add
sub
xchg
decl
dec
int
inc
sub
repnz
sub
mov
and
decl
rorl
test
out
lahf
and
hlt
pop
or
sub
mov
incl
in
aad
fnstsw
inc
mov
xchg
aad
cli
emms
aaa
mov
lret
decl
daa
ja
scas
stos
pushf
jno
push
xchg
dec
cmpsb
es
add
in
dec
in
in
lcall
dec
scas
jle
hlt
dec
cmp
and
mov
cmpsl
mov
add
fnclex
test
jmp
stc
mov
mov
xor
inc
ljmp
andb
jo
scas
jmp
inc
mov
not
stos
aad
cltd
popf
fcmovne
lods
mov
in
sahf
lea
cld
jno
jbe
aaa
push
and
test
cmpsl
mov
lock
mov
push
out
pop
decl
inc
mov
xchg
and
pop
push
jg
cld
sbb
cmpb
mov
lcall
inc
out
ret
or
jns
lods
mov
icebp
pushf
push
jmp
aam
daa
push
shll
pushl
lcall
rorl
and
adc
adc
cli
push
lock
push
call
and
popf
out
fnstsw
int3
cld
cmp
pop
sbb
aam
mov
decl
aaa
outsb
jnp
fdivrl
lret
rcrb
popa
mov
das
notl
testb
mov
pop
mov
cmp
lcall
mov
iret
loop
xchg
dec
std
decl
shrb
xchg
push
out
in
mov
test
xor
sbb
clc
pushf
jns,pn
push
incl
cmpsb
ja
out
xchg
jns
sub
into
mov
sub
mov
jbe
jns
into
fucomip
lcall
mov
in
icebp
inc
pop
jge
adc
rclb
mov
sbb
mov
fsubl
adc
jl
outsb
and
pop
push
push
pushf
cli
loop
imull
sub
xlat
ret
mov
sbb
mov
call
sbb
fscale
sub
in
push
jno
mov
popf
add
sbb
and
call
xor
adc
test
mov
cmpl
sub
dec
std
imul
imul
inc
dec
add
lock
imulb
lcall
and
es
fs
jmp
rorb
popl
xchg
ss
adc
in
out
lock
inc
lods
je
cmpsb
xor
into
shr
push
popa
pop
in
pusha
push
ret
mov
std
bound
dec
sub
mov
or
lcall
and
ja
push
les
mov
popa
sbb
mov
mulb
cmpsb
inc
enter
movsl
daa
lock
jne
xor
jmp
fwait
or
mov
push
fmuls
sbb
xor
je
ret
std
mov
jg
js
xor
inc
out
testl
jno
std
into
lea
popa
repz
xchg
inc
test
mov
push
xor
cli
popf
sahf
sub
cmpsb
and
sti
cli
clc
leave
or
stos
nop
sbb
jmp
mov
inc
xchg
clc
sti
dec
enter
pop
dec
xchg
jmp
pop
pop
or
sub
jg
fnstsw
int
sbb
pop
fbld
es
sbbb
in
fldenv
je
aas
inc
notl
xchg
ja
es
mov
hlt
xchg
aam
xchg
test
loop
in
movl
adc
sbb
incl
xchg
roll
push
or
scas
iret
dec
aam
out
mov
test
popa
test
and
movsl
clc
mov
andb
dec
out
dec
jmp
enterw
stc
xlat
les
gs
in
add
out
add
in
xchg
out
fisttpl
pusha
pop
push
lea
fiadds
cmpsb
cmp
mov
mov
mov
mov
xor
and
test
fldt
cmp
unpcklps
mov
outsl
arpl
aas
xor
or
push
mov
fs
imul
loopne
aaa
scas
mov
xchg
and
arpl
push
mov
mov
inc
shrl
bound
sub
incl
sbb
jmp
mov
fistpl
xor
das
aad
es
jg
mov
adc
lahf
call
pop
je
lcall
aad
icebp
arpl
mov
push
test
cmp
es
pushl
jae
sbbb
mov
pop
ja
inc
dec
and
loope
ret
dec
add
jo
dec
ficoml
and
xchg
and
dec
fs
push
inc
mov
test
xchg
lcall
and
jecxz
aam
insb
ja
sbb
sub
sbb
mov
dec
jg
cwtl
and
mov
push
and
std
lds
fwait
icebp
cmp
adc
fsubrs
and
pushl
push
jne
movsl
inc
push
jne
dec
inc
push
jo
jnp
lret
movsl
cmp
xor
lret
mov
ss
ss
je
mov
pushf
lret
mov
sahf
jmp
push
mov
cwtl
sub
inc
aas
daa
sub
inc
xchg
aas
adc
pushl
push
icebp
adc
ss
xchg
jne
daa
cmpsl
xor
cmp
sub
mov
hlt
sbbb
in
push
jg
divl
fisttpl
pushf
xlat
xchg
decl
int3
sub
jg
xchg
mov
and
hlt
push
fadd
loop
sbbl
repz
mov
fstp
mov
sub
jae
fisubrs
push
lcall
into
arpl
adc
test
stos
or
imul
jnp
inc
xchg
incb
repz
sub
mov
adc
pusha
dec
inc
cld
mov
int3
xchg
push
and
push
jg
orb
pusha
lahf
push
fcompl
sub
mov
jmp
pop
ret
pop
push
data16
mov
push
rol
punpcklbw
sbb
fstpl
inc
adc
pop
xchg
mov
test
jne
leave
jbe
test
mov
decl
jmp
popf
aad
jge
movsb
mov
repz
in
repnz
mov
mov
dec
fidivs
push
push
mov
je
sbb
nopl
push
enter
ljmp
push
hlt
cmp
xchg
pop
rol
cmp
inc
aas
les
data16
fdiv
jg
mov
add
stos
mov
es
push
cmp
adc
mov
movl
jnp
or
mov
xchg
sub
mov
idiv
jg
icebp
pop
jmp
popa
push
adcl
mov
jns
addr16
ljmp
pop
mov
xor
sub
nop
int
and
cmp
js
in
inc
jo
cwtl
rcrl
mov
sub
fldenv
mov
mov
iret
jns
pushl
or
adc
mov
scas
cmp
mov
push
xorl
inc
push
imul
divb
push
cmpsb
fdivs
dec
repz
pop
push
sarl
push
inc
cmp
aam
jge
xchg
aad
xor
pushl
xchg
stc
aad
cmp
popf
fwait
imul
xlat
ss
jbe
dec
jmp
mov
cmp
in
leave
adc
xlat
sbb
fistpll
cmpb
jg
sahf
mov
push
cmpb
sysenter
fldcw
fistps
les
lcall
cld
repnz
fstp
int
fs
jle
xchg
and
inc
pop
incl
dec
fmul
sar
mov
enter
lock
cmpsb
push
mov
cld
or
fcmovnbe
cwtl
fwait
cmp
adc
cmp
test
mov
imul
stos
add
inc
and
je
aaa
clc
pushl
mov
stc
mov
jg
enter
pop
loop
fildll
movsb
sub
lahf
jno
dec
js
push
dec
fwait
push
ljmp
lcall
daa
mov
xchg
dec
mov
lods
lahf
mov
out
fbld
mov
inc
cmp
xchg
cltd
pop
enter
sub
xchg
test
movsl
dec
jg
lret
and
das
inc
mul
and
lahf
jbe
andl
mov
pushl
mov
add
out
cmp
out
jmp
inc
xchg
hlt
fdivr
mov
fs
flds
call
adc
or
pushl
mov
clc
fwait
jbe
xchg
pop
outsb
add
fidivl
insl
pop
dec
add
in
jg
sub
xor
dec
hlt
std
out
or
push
dec
push
or
dec
pop
test
mov
mov
and
ljmp
addr16
adc
mov
xlat
popl
push
mov
cmp
jl
aas
negl
adc
xchg
fwait
ljmp
mov
idiv
call
insl
es
jns
decb
push
pop
stos
jns
leave
push
xor
adc
movzbl
mov
idivl
xorb
inc
pushl
push
jo
popa
dec
test
in
add
mov
ret
popa
cld
add
clc
push
cmp
cmp
or
lret
outsb
adc
pushl
cltd
mov
cmp
jb
mov
mov
cwtl
sarl
aaa
jbe
adc
xchg
lret
and
xchg
jg
loop
das
push
lret
and
loope
inc
mov
call
ljmp
sahf
sub
mov
xchg
cmpsl
pop
int3
mov
call
cli
dec
push
ret
or
mov
and
mov
aas
jmp
cli
dec
cli
mov
jg
int
jecxz
jae
inc
fisttpl
insb
mov
test
cmp
ljmp
fldt
add
mov
subl
in
push
in
std
popa
sub
cmpsb
cs
loop,pn
fs
cld
div
xor
movsb
xlat
stos
out
call
daa
xor
inc
das
rcll
and
mov
aaa
fsubrl
dec
sti
sbb
cwtl
adc
adc
and
icebp
lods
push
inc
xchg
test
hlt
addr16
shlb
je
ljmp
rclb
lods
jp
mov
repz
shlb
jo
or
pop
fisttpl
and
sbb
notl
sub
jmp
mov
sub
inc
pop
pop
mov
ds
cmp
mov
shrb
pop
adc
sbb
mov
aam
das
cld
fisubs
lret
push
push
or
jp
mov
push
addl
push
jb
jno
ret
and
call
lahf
pop
or
int3
repz
jle
inc
mov
pop
xchg
lcall
mov
sub
cld
sub
mov
out
xchg
mov
dec
sbb
mov
mov
xlat
aaa
clc
mov
add
faddl
cmp
sbb
xchg
cmp
std
std
inc
rcrl
popf
insb
or
push
or
leave
test
pushl
loopne
fidivs
movsl
shr
decl
xchg
jl
jle
cmp
mov
test
in
fxtract
cwtl
ret
movsl
pop
ljmp
test
pop
mov
shlb
inc
mov
arpl
jge
xchg
outsl
sbb
pop
mov
lods
mov
push
or
jl
pop
jae
xor
or
jg
mov
cmp
add
mov
jecxz
lahf
in
sarl
sbb
jg
mov
mov
out
push
iret
inc
or
daa
jne
leave
lock
mov
stos
jns
push
aaa
mov
xchg
mov
sbb
fisubl
cmpl
push
mov
cmp
aaa
fisttpl
bound
dec
add
cmp
sti
sub
icebp
mov
push
imul
pop
fwait
or
ljmp
scas
sub
pop
xor
jb
cmpsl
or
pop
cmc
pop
jp
push
call
adc
add
insl
scas
int
call
add
cmp
mov
fsts
jno
inc
fsubrs
adc
mov
adc
jns
jns
sub
fdivrl
loope
cmpsl
scas
pop
lock
decl
loopne
jle
cmc
adc
movsb
mov
and
xor
mov
rol
dec
sub
out
pop
cltd
sub
mov
adc
jge
pop
test
and
cwtl
lcall
ds
cmp
je
or
ljmp
jns
jnp
lcall
test
sti
in
stc
fcmove
mov
cmc
adc
pop
sub
daa
jecxz
aaa
mov
aas
and
in
pop
dec
negl
fcom
add
sbb
ljmp
stc
mov
cmp
or
scas
inc
mov
and
jo
addr16
push
xorb
pop
xchg
mov
std
lods
pop
cwtl
mov
dec
lahf
addr16
pop
popa
enter
xchg
gs
in
mov
pop
sub
xor
insl
pop
inc
sub
call
dec
jecxz
ds
outsl
cli
lcall
dec
xor
push
out
xchg
cli
repz
jl
std
xchg
pop
insb
mov
fistps
shl
lret
lea
sbb
jmp
dec
mov
jle
push
inc
xchg
bound
shll
xchg
test
in
and
scas
jae
jae
movsb
in
jmp
incl
jmp
xor
ffree
sub
test
fdivl
add
loop
scas
mov
jmp
clc
movsb
mov
jne
fmull
iret
mov
mov
jg
mov
mov
dec
or
sub
cmpb
push
cmp
fwait
mov
test
in
or
je
jo
or
ljmp
sahf
cmp
outsb
jecxz
mov
movb
loop
sub
outsb
mov
fisubs
xchg
call
je
sbb
xchg
inc
pop
xor
stc
iret
loope
cmp
dec
ljmp
rolb
cmp
mov
movl
adc
shr
decl
hlt
scas
movsb
mov
jecxz
outsl
dec
jle
lcall
sub
ja
xchg
ss
pushf
ss
fnstcw
adc
or
jg
pop
sbb
jl
jl
xchg
xor
xor
dec
imul
cld
mov
js
xchg
cmp
ljmp
stc
test
mov
addr16
sbb
test
cmp
fistps
mov
dec
mov
mov
mov
xlat
mov
cltd
pop
leave
xor
shll
call
bound
sub
repz
push
int
ror
xor
add
pusha
pop
sar
ljmp
fstpl
adc
cmc
pop
test
ljmp
call
inc
add
lea
in
xchg
mov
jg
hlt
lea
push
nop
jg
movsl
outsl
cwtl
pop
inc
sub
clc
out
mov
mov
push
xchg
mov
fistl
and
jns
xor
ret
stos
ret
xchg
pop
fldcw
das
jnp
ds
xchg
arpl
shlb
stos
popf
enter
push
or
mov
cwtl
pop
sarb
scas
ja
test
pop
mov
sub
hlt
pop
jge
ror
or
ljmp
cmc
dec
mov
insl
rcrl
jmp
jle
sbb
push
out
mov
pushl
xlat
lret
sbb
movsb
mov
pop
mov
mov
jb
call
push
jne
in
add
repnz
dec
ret
adc
sub
pop
subl
call
call
daa
or
sbb
lret
mov
jbe
test
into
ss
mov
pop
test
loope
xchg
mov
clc
pop
and
adc
jg
addr16
imul
loop
xor
int3
dec
clc
pop
lret
movsb
adc
push
pop
adc
xor
sbb
fiadds
cmp
mov
outsl
icebp
push
push
xchg
sub
xor
ret
mov
adc
iret
cmp
or
test
push
bound
pop
ret
aaa
call
ss
sbb
out
aaa
mov
adc
rclb
mov
fwait
lcall
mov
sar
xchg
inc
cltd
and
adc
fidivrs
pushl
ret
add
inc
in
cmpsl
mov
cmp
sub
popa
adc
cmpsb
pop
sub
aas
xchg
outsb
js
cmp
int3
lcall
dec
dec
dec
sbb
call
fcmovnb
mov
in
lods
jne
sub
std
pop
add
out
ja
pushf
dec
psrad
decl
ficoml
adc
jg
mov
xor
sbb
decl
cld
ds
push
and
movsb
pop
adc
mov
push
mov
decl
cmp
jecxz
ret
and
or
xor
clc
mov
lcall
in
push
jp
xchg
mov
mov
lds
inc
ss
adc
imul
adcl
scas
lret
mov
dec
add
icebp
bound
pushf
mov
lock
sub
aad
aaa
stc
fistpll
push
pop
enter
ljmp
lds
xorl
dec
ss
xchg
sbb
sub
aas
push
dec
push
sbb
js
pop
mov
decl
in
inc
pop
sub
mov
je
stc
inc
cs
inc
jnp
lcall
sbb
jmp
ljmp
add
push
sub
xor
jg
in
test
jle
jns
add
clc
jmp
std
mov
ljmp
out
add
jb
mov
ss
and
das
and
add
mov
inc
cmp
mov
xchg
push
ja,pt
lods
call
adc
in
fdiv
arpl
adc
lea
sub
js
cs
je
addr16
into
fs
inc
dec
lcall
mov
sbb
jl
idivl
ds
dec
bnd
ficompl
or
xchg
stc
sarl
mov
and
mov
mov
dec
shr
mov
ljmp
push
in
or
adc
lods
ljmp
sbbb
icebp
or
stos
mov
mov
ss
sub
mov
sbb
add
cmp
mov
popa
dec
pop
data16
into
outsb
pop
pushl
push
lcall
pop
mov
push
mov
mov
pushf
sub
ss
adc
jg
jb
and
outsl
idiv
fsubs
fisttpl
fnsave
dec
or
outsl
jmp
push
icebp
pop
cmc
fidivrs
dec
cmp
loop
call
ljmp
insb
mov
mov
mov
scas
cmp
push
sub
sbb
inc
push
lea
and
mov
add
inc
mov
jmp
or
outsb
jne
ficomps
push
xchg
cmc
imul
jmp
mov
outsl
jp
ds
and
repz
jb
lds
mov
jmp
imul
sbb
dec
jns
pop
sub
inc
mov
ret
lods
cmp
incl
aad
and
sti
pop
lods
adc
sti
outsl
dec
incb
mov
add
and
outsl
sub
roll
sar
xor
pop
inc
aaa
xchg
scas
push
pop
lods
test
out
dec
imul
loope
mov
lods
push
push
xchg
dec
push
cmp
jl
outsl
jl
inc
dec
mov
xchg
in
pop
dec
xlat
mov
hlt
dec
or
mov
sub
stos
repz
cmp
mov
mov
push
xchg
xchg
sub
in
jg
addr16
out
fwait
imul
mov
clc
jbe
int
cmp
sub
aad
mov
fucomip
jmp
test
add
jae
loop
gs
inc
lcall
mov
pop
cli
incl
push
xchg
add
and
add
jne
int3
push
les
lret
dec
and
sar
incl
jb
clc
jle
fwait
mov
and
lcall
cmp
test
dec
xlat
sbb
fildll
aaa
push
clc
test
sub
movsl
insb
fistps
inc
mov
cld
mov
das
push
or
lret
mov
mov
pusha
les
popa
mov
push
jno
push
shrl
lret
xor
test
fisttps
hlt
ret
push
adc
clc
add
xor
lock
out
xchg
icebp
sbb
cmp
call
inc
in
mov
push
inc
cltd
mov
aas
push
je
fisubrs
jg
mov
out
cmc
pop
xchg
pop
cmp
dec
bound
xor
add
add
aad
dec
xchg
sub
mov
loope
add
ret
into
sarb
js
aas
inc
mov
aad
pushl
push
lds
lea
and
inc
mov
jg
lcall
sbb
jle
loope
jle
sub
stos
enter
xor
or
cmpsb
and
call
into
std
loope
adc
add
xor
jg
lods
sbb
xchg
or
sbb
cmp
ret
std
jp
xchg
sbb
repz
and
imul
xchg
mov
push
sub
test
call
pop
lahf
xor
fcoms
stc
jb
adc
pop
ljmp
xchg
in
ljmp
inc
movsl
enter
insl
imull
and
dec
jnp
test
stos
aaa
cli
incl
aaa
in
adc
sub
push
data16
mov
push
adc
mov
mov
test
je
cld
std
push
pushl
fs
orb
inc
fadds
ljmp
adc
std
lods
xor
fwait
cmp
ss
pushl
test
adc
lods
call
push
xor
sbb
xlat
imul
xor
mov
xor
add
das
hlt
xchg
clc
mov
test
or
adc
push
dec
call
arpl
jo
in
cltd
push
popa
jne
jne
push
xchg
mov
mov
or
sti
outsl
std
sub
dec
jo
sub
clc
inc
ds
add
pushl
jmp
popf
arpl
daa
mov
loopne
sbb
mov
jb
test
dec
cmp
popa
aaa
cli
call
cld
sub
outsb
iret
or
xchg
inc
xor
xor
sub
cmp
hlt
and
sub
sbb
out
pusha
mov
bound
jg
call
sbb
idivl
lods
in
ja
gs
sbb
fs
es
mov
cmp
scas
stos
mov
fs
rsm
fadds
outsl
les
inc
data16
and
inc
in
inc
adc
dec
sbb
outsl
and
ljmp
xor
dec
mov
xor
imul
out
pop
mov
add
fisubl
jns
ret
fldl
mov
dec
mov
mov
shll
mov
pop
sti
xor
aad
rolb
sub
jae
xor
shrl
push
mov
loop
jl
push
mov
lods
mov
push
mov
rclb
pusha
dec
repnz
decb
xlat
call
nop
cmp
sti
pop
xchg
xchg
push
cli
push
mov
dec
fwait
cs
clc
mov
lahf
sbb
ds
lea
in
rorl
adc
decl
jecxz
jns
inc
sbb
push
sub
mov
lcall
aas
inc
sub
call
ljmp
roll
add
ljmp
call
jnp
loop
push
sub
pop
dec
scas
or
xor
pop
enter
std
xchg
rcrb
rcrl
cmpl
cwtl
mov
mov
cmpsl
add
pusha
ds
outsl
lret
xchg
pusha
outsl
sub
sahf
xchg
call
sbb
and
push
stos
pusha
add
mov
lods
mov
flds
jmp
cmp
or
in
std
pop
lret
add
or
es
pop
pop
ljmp
rorl
jmp
andb
cwtl
xor
out
leave
mov
hlt
lcall
iret
adc
and
mov
lcall
ljmp
frstor
leave
xchg
outsl
lahf
pop
xor
repnz
jo
aad
in
rol
inc
clc
xor
or
jo
adc
lea
pop
mov
push
lock
je
or
cwtl
loopne
mov
stc
jg
pushl
add
dec
push
sub
in
repnz
addl
call
or
orl
mov
push
sbb
adc
fwait
sub
sub
pusha
ret
ljmp
movsl
decl
pop
gs
outsb
test
inc
js
fs
ljmp
loop
jecxz
lea
inc
fists
or
inc
xchg
lahf
dec
aas
push
mov
data16
test
mov
rorl
ficoms
nop
inc
and
pop
mov
decl
cmpl
lock
ja
lret
dec
mov
bound
decl
les
nop
es
in
int3
icebp
mov
xchg
mov
pop
push
ja
lods
mov
cld
test
xchg
cmp
test
adc
push
repz
fnstenv
sub
loop
das
lret
rorb
int3
or
call
mov
push
js
scas
xchg
pop
movl
out
fs
pop
and
inc
sub
or
cmp
sub
js
inc
adc
mov
test
dec
cmp
loope
jae
fisttpl
testl
xchg
mov
add
mov
inc
mov
and
scas
jbe
ja
outsl
push
cli
pop
idivb
dec
dec
cmc
pushf
fs
scas
pop
add
adc
imul
stos
mov
test
and
nop
xchg
xor
sbb
jne
hlt
mov
pushl
and
xor
test
adc
pop
push
inc
pusha
cmp
in
mov
call
outsb
enter
dec
lcall
mov
lods
xor
hlt
or
pop
mov
xor
sub
mov
cmpsl
adc
cmp
call
push
pop
fldl
or
dec
clc
sub
xor
daa
aaa
add
test
inc
push
or
pop
sahf
stos
popf
cmp
lock
push
stos
hlt
out
cmpsb
xchg
jecxz
inc
test
pop
mov
jmp
push
js
xor
sbbb
dec
mov
pop
lds
xchg
xchg
ss
sbb
sub
xchg
lahf
sub
push
cmc
fnstenv
push
or
ss
loop
aad
lret
incl
icebp
in
inc
shll
jae
dec
push
mov
lcall
lret
jne
in
mov
loop
mov
loope
sub
jb
lea
pushl
lret
adcb
mov
pop
adc
xchg
jl
and
inc
decl
fst
add
test
fdivr
cmc
pop
in
xor
das
add
xchg
dec
dec
movsl
ljmp
sub
daa
je
mov
cmp
lock
dec
cmp
xchg
inc
adc
repz
lds
shll
les
call
ja
mov
sbb
add
jae
xlat
dec
dec
roll
or
std
fdivr
call
adc
mov
in
add
dec
push
fbstp
jle
cmpb
cmc
sub
mov
add
adc
sbb
cmpsb
push
cs
test
dec
in
fistpll
mov
out
xor
xor
xchg
insb
pop
out
aad
aaa
aaa
jl
inc
movsl
incl
cwtl
mov
andb
movsl
jb
cltd
aas
cmc
xor
mov
or
nop
shl
pushl
sub
mov
dec
push
rcrl
clc
das
push
mov
pop
pop
fbstp
adc
adc
sbb
loopne
cmp
xchg
rcrb
mov
imul
xchg
cmp
pop
xchg
mov
jl
lods
and
cs
outsb
push
mov
pop
icebp
aad
push
movsl
decl
testl
jns
fdivr
fstpt
mov
repz
jno
push
mov
pop
mov
sbb
pop
and
add
roll
ds
jns
cmp
or
lock
iret
popa
and
pop
push
cld
pop
push
adc
ja
out
lea
lcall
add
sub
ja
loopne
jmp
mov
xor
jge
jns
stc
inc
call
pop
adc
mov
mov
loop
xchg
hlt
pop
push
ficoml
sbb
pop
sub
lcall
lods
sbb
xor
insl
loope
call
dec
imul
jmp
fucom
int
fldenv
div
push
ret
mov
in
push
fimull
mov
dec
push
mov
push
and
add
jl
sbb
gs
add
decl
ret
xchg
add
cltd
arpl
push
hlt
push
rcr
test
ljmp
pop
pop
xor
dec
ficompl
pop
or
pop
das
pop
repnz
jo
movb
decl
dec
adc
cltd
cmp
lret
subb
or
icebp
call
inc
dec
negb
jp,pt
push
call
xchg
movsb
cmpsl
stos
dec
mov
mov
push
push
int3
mov
pop
push
xor
je
ja
pop
fs
mov
ljmp
inc
lock
cli
xor
lcall
incl
int3
push
jmp
xor
or
xor
pop
cwtl
add
lcall
loopne
aam
xchg
testl
cli
sets
decl
push
xlat
jno
sarl
stc
cmc
jmp
mov
dec
loop
mov
icebp
ljmp
divl
pop
jb
xchg
or
jmp
jmp
or
pop
or
or
mov
in
in
lret
jg
pop
fmulp
xchg
mov
outsb
into
mov
popf
and
outsb
repnz
pop
dec
incl
std
decl
test
and
jge
mov
incl
jg
push
add
dec
xchg
popf
cli
mov
add
add
popa
out
or
cli
mov
jns
mov
push
idiv
cmp
or
mov
loopne
ja
or
dec
loopne,pn
or
dec
cmp
hlt
mov
sub
mov
mov
pushf
xor
xchg
mov
ljmp
mov
jl
test
push
mov
adc
xor
and
ljmp
cmp
and
push
rep
jmp
cmp
mov
jmp
in
pop
cmp
lods
mov
in
test
mov
mov
jmp
je
dec
jle
int
mov
mov
pop
sbb
dec
aaa
hlt
bound
iret
jg
call
and
jb
js
sbb
adc
pop
xor
ret
shrb
mov
mov
add
jmp
popf
movsl
cmpsl
cld
cli
jg
ljmp
leave
aad
pop
and
mov
jnp
cmp
hlt
jmp
mov
pop
xchg
in
stos
cmpb
mov
ljmp
cmc
incl
movl
lcall
dec
gs
in
push
in
cmp
push
cli
push
jb
dec
sarl
jg
dec
addr16
fcom
mov
insb
jnp
ret
aad
push
movsb
mov
adc
push
js
lret
insb
mov
mov
mov
cmp
and
xor
mov
mov
push
aas
inc
or
mov
inc
icebp
rclb
ljmp
push
mov
pop
add
rcrb
clc
pop
xor
inc
int3
arpl
std
lods
adc
xchg
pushf
and
xchg
jl
pushf
push
jne
outsl
cmc
fisttps
xor
test
pop
pushl
pop
clc
ficomps
les
rclb
push
paddsb
call
call
stc
mov
mov
mov
cmp
cli
xchg
fdivrp
dec
pop
cld
popf
jle
pop
jbe
inc
dec
movsl
inc
sub
mov
loop
insl
in
mov
cmpsb
stos
sbb
mov
dec
fcomip
cli
sbb
add
push
and
test
cli
xchg
loop
dec
dec
insb
push
jp
in
cmp
inc
mov
jae
lods
or
lods
movsl
call
rorl
shll
dec
clc
cmpsl
or
mov
xor
cld
inc
sbb
mov
push
shlw
inc
test
inc
out
fimuls
or
incl
ss
and
and
mov
pop
xlat
scas
pop
in
jecxz
xor
call
push
movsb
int3
or
or
mov
popa
outsb
sub
mov
inc
test
lcall
mov
outsl
jecxz
push
xchg
jg
inc
dec
sbb
cmp
aas
push
mov
xchg
imul
fildll
hlt
mov
push
xchg
push
push
lret
or
add
jmp
in
out
out
and
call
push
jmp
mov
inc
std
cli
loop
xor
test
les
call
mov
mov
dec
outsb
gs
dec
inc
inc
mov
ljmp
and
mov
inc
inc
bound
push
filds
repnz
xor
ffreep
lea
inc
pop
inc
jnp
icebp
mov
mov
or
or
mov
mov
pop
ljmp
hlt
stos
inc
add
push
imul
inc
sarb
lcall
push
inc
dec
jecxz
scas
fldenv
jge
gs
or
hlt
cld
jp
cmpsl
lock
and
jge,pt
cs
stc
gs
pop
fstl
cmp
arpl
mov
adc
sub
adc
push
lds
dec
cld
in
lea
insl
jb
je
mov
sahf
cmpsb
push
sub
push
mov
rcrb
insl
sbb
jne
and
xchg
mov
out
fs
mov
xchg
jns
sbb
dec
xor
test
mov
shlb
scas
test
mov
push
xchg
pushl
jge
mov
ret
or
ja
daa
xchg
jnp
mov
ljmp
in
xor
and
dec
mul
negl
leave
mov
inc
dec
jnp
dec
mov
jecxz
in
cmp
aaa
xor
sti
push
ljmp
push
inc
and
test
repz
cmpsb
pop
out
movl
incl
pop
ret
lods
jns
ret
push
pop
outsb
mov
fidivl
sub
std
mov
fdivrl
inc
xorb
xchg
ljmp
repnz
iret
fsubrl
cmpsb
and
stos
lcall
mov
dec
sbb
mov
ds
xor
mov
insl
fildll
rcr
jmp
xlat
pop
dec
mov
movsl
adc
int
xchg
icebp
scas
stos
lret
pop
incl
fucomip
jnp
sbb
add
sbb
lret
stos
popf
ds
pushl
out
sub
in
loop
imul
in
cmp
js
movsl
dec
test
jp
inc
popa
test
ja
adc
mov
cwtl
movsl
fisttps
sbb
jo
jbe
lret
or
pushf
lcall
and
shrl
mov
ljmp
ljmp
xchg
repnz
in
rclb
in
lock
xchg
jbe
and
xor
dec
jge
pop
jge
nop
outsb
call
test
decl
mov
sbb
pop
mov
adc
push
div
or
call
xor
or
mov
fstpl
out
xchg
lahf
hlt
sbb
bound
sub
test
pop
imul
dec
sub
add
imul
jo
das
mov
mov
xchg
call
repnz
ja
aam
add
mov
mov
rorb
std
sub
add
sub
ret
push
bnd
idiv
mov
into
shlb
jp
and
repnz
push
test
fildll
mov
mov
inc
ljmp
nop
movsb
cmc
mov
cmpsb
repnz
cmp
inc
daa
cld
sbb
adc
arpl
cwtl
add
lahf
loop
lcall
sub
xlat
sub
xor
cltd
xor
cmp
test
ljmp
sbb
jmp
cmc
loop
pop
scas
jg
dec
cmp
cmp
fistpll
outsl
rorl
inc
loopne
pusha
into
mov
mov
clc
lds
lret
jnp
sahf
add
push
hlt
lret
push
dec
jb
fistl
cli
in
or
mov
ds
incl
insb
and
mov
xchg
add
fnstsw
pushl
jmp
dec
fs
dec
movsb
push
lea
jb
jne
xor
cmp
mov
ljmp
sub
push
jne
mov
test
push
mov
jns
mov
mov
lea
and
jg
test
lea
adc
jge
icebp
cmp
and
ljmp
mov
or
add
pop
jl
jl
inc
and
sbb
or
mov
arpl
dec
sub
or
xchg
cmp
and
jnp
imul
rolb
scas
cmp
stos
loopne
pop
jno
dec
insb
push
hlt
and
dec
mov
mov
pushl
or
rorb
pop
sub
adc
pop
push
loop
pop
loop
cld
mov
test
cmpsl
sbb
stos
and
jge
lcall
enter
test
cs
dec
insl
repnz
loopne
pusha
sub
jp
pushf
cmc
pop
mov
ljmp
icebp
decl
scas
mov
xorb
fcmovnu
fsub
add
jge
pop
clc
pushl
loop
sbb
inc
xor
imul
and
cli
jmp
or
cmpl
mov
push
cwtl
orb
leave
es
inc
cmpsl
ds
pop
mov
std
pop
xor
or
dec
popa
out
cmc
incl
ljmp
xor
movsl
clc
jecxz
jmp
mov
aaa
popl
cmp
lcall
aam
adc
test
gs
gs
test
aaa
mov
test
dec
adc
les
add
push
int3
stos
test
leave
mov
or
fdivl
jno
lcall
cmp
jae
pushf
or
shlb
cli
adc
pop
dec
inc
push
sahf
outsb
sbb
cmc
arpl
incl
ficompl
adc
stos
mov
cld
mov
mov
neg
mov
ljmp
lock
ljmp
adc
inc
jo
ljmp
jmp
flds
add
int
nop
repnz
pminsw
insb
mov
popa
loop
scas
jae
xchg
fisttpl
rcrb
pusha
insb
jg
dec
lahf
pop
sbb
fwait
xchg
lret
lahf
jno
daa
icebp
pop
sub
pushl
inc
mov
stos
cld
in
pop
inc
aad
aam
pop
into
insb
pop
loopne
pop
or
popf
movsb
fstpl
jle
pushl
xchg
inc
repnz
shlb
scas
outsl
icebp
dec
data16
fldcw
adc
lcall
or
call
xchg
es
pusha
movsb
xchg
fbld
inc
add
repnz
jmp
aas
cmp
push
or
fbstp
cltd
jne
ja
addr16
out
or
and
lret
incl
mov
pop
inc
pop
inc
sbb
or
out
dec
lahf
mov
call
ljmp
mov
insl
adc
jmp
lods
add
call
inc
mov
add
sahf
out
shlb
hlt
pushl
sbb
jbe
icebp
test
in
mov
adc
sti
mov
loopne
add
xchg
mov
pushl
out
jecxz
xor
xor
push
sarb
pop
cld
mov
inc
aad
daa
into
pop
jg
lcall
ljmp
fs
pop
int
inc
in
repz
mov
inc
loop
sbb
mov
lods
loope
pop
mov
mov
inc
lret
add
in
cmpsl
push
mov
cld
adc
fs
or
push
lea
and
incl
test
cmp
inc
arpl
bound
imul
es
in
ljmp
jle
pop
mov
dec
ss
rolb
or
cld
into
cltd
pop
mov
and
loope
xchg
sbb
and
adc
in
ljmp
pop
cmp
mov
xor
jl
lret
push
sub
mov
mov
cmp
add
cs
add
movsb
mov
cmp
mov
sbbl
int
xlat
insb
xchg
loope
testl
loope
out
aas
jno
mov
int
mov
insl
xor
scas
daa
fstpt
mov
call
and
in
push
aaa
aam
xchg
fnstsw
xor
shrl
insl
mov
hlt
jnp
mov
lcall
gs
loope
iret
mov
jae
ds
and
idivl
imull
inc
jle
jecxz
pop
cmpsb
ljmp
das
xchg
mov
or
inc
out
xor
sub
cmp
sub
cmc
or
adc
and
jg
test
sbb
loopne
xchg
outsl
push
lods
inc
out
xchg
pop
and
mov
lcall
pusha
mov
pop
popf
push
andb
mov
lods
pop
push
js
xchg
fisubrl
ljmp
sub
mov
pop
add
cld
repnz
jae
pushl
ret
add
xor
jge
xor
inc
loope
cmp
jg
adc
inc
ljmp
cmc
aam
add
and
notl
cltd
lcall
nop
sti
cli
or
push
pop
sbb
mov
lret
mov
inc
bound
pop
xchg
inc
push
jg
mov
test
std
sub
loop
push
jl
sub
loopne
adc
lock
pushl
lods
ffreep
idivl
mov
in
in
mov
dec
pushl
inc
mov
pop
mov
movsl
or
js
std
call
shlb
mull
iret
jnp
jne
xor
pop
xor
ljmp
int3
ret
stos
call
xor
movsl
je
push
mov
cmpsl
or
cmp
push
push
sbb
imul
xchg
cmp
push
or
sub
call
sti
fidivrl
ja
inc
clc
out
pop
insb
lock
je
call
cmp
lcall
sbb
cmpsl
jnp
xchg
sub
and
mov
add
clc
decl
and
repnz
add
outsl
loopne
in
les
ljmp
dec
push
push
adc
loop
and
lret
rcll
mov
test
sbb
lods
xchg
xor
insb
xchg
mov
mov
je
test
cmc
pusha
push
ja
sbb
ljmp
cli
stc
and
sbb
jbe
lret
sub
xchg
pop
ficoms
repnz
mov
push
es
gs
call
push
int3
lds
xchg
fsts
add
mov
and
jae
mov
inc
incl
add
das
and
sub
fsubl
sbb
cmp
outsl
lock
fisttpll
push
std
inc
xor
mov
cmpsl
call
jo
fs
fnstsw
jle
pop
imul
inc
mov
or
cmc
shlb
bound
ljmp
pmovmskb
push
push
rcrb
adc
jb
rcll
mov
push
cld
movsl
pushl
clc
mov
ret
or
mov
or
inc
or
loopne
push
pushf
pushf
inc
daa
xchg
pop
je
adc
out
lret
sbb
icebp
das
call
test
hlt
xor
and
adcl
sbb
mov
leave
add
sub
out
fisubrl
call
xchg
ret
mov
mov
mov
aam
jno
xchg
notb
enter
insl
in
mov
fstpt
or
sub
mov
test
mov
ss
popf
pop
xor
dec
repnz
aas
aaa
scas
adc
jo
mov
push
inc
sarb
and
jl
jge
mov
lds
sahf
push
pop
pop
or
sub
fwait
or
inc
mov
aad
icebp
int3
pusha
push
dec
std
ljmp
jg
sbb
xchg
mov
mov
pop
lock
jg
test
aas
stc
lods
ja
fcmovnb
pop
clc
push
pop
scas
push
jge
sub
das
gs
stos
inc
mov
sti
xorb
cmpsl
xchg
nop
lea
pop
lcall
push
xor
and
push
mov
xor
add
sbbl
jmp
xor
mov
mov
popa
inc
jae
outsl
andb
cmc
movsl
push
mov
hlt
fcom
jno
cld
loop
and
push
jns
mov
out
mov
in
xchg
inc
cmpl
inc
inc
frstor
cmc
ljmp
or
sub
sbb
mov
inc
pop
cmpsl
add
les
fnsave
stc
sub
mov
jge
dec
sbbb
add
or
and
les
and
incl
inc
loopne
sahf
pop
cli
sti
sub
and
mov
or
clc
mov
xchg
inc
xor
enter
dec
or
mov
clc
cmp
movsb
stos
in
mov
rol
mov
jb
sbb
cmpsb
ret
outsl
mov
inc
fcoms
sbb
mov
xor
sbb
out
push
jl
iret
mov
cld
incl
neg
and
fadds
pop
jb
pop
cmp
in
xor
cli
xlat
sbb
ret
add
cmc
aaa
push
ret
popa
fcoml
mov
out
mov
mov
call
enter
cld
mov
xor
push
shlb
pop
int
push
adc
sub
cltd
cmpsb
addr16
lcall
std
xchg
mov
mov
mov
xchg
aam
stc
orb
cs
xor
or
mov
inc
inc
jae
mov
aam
ja
addl
jp
dec
testb
sar
xor
mov
clc
fdivrl
xor
movsb
rcrl
sbb
icebp
jg
mov
sbb
nop
inc
in
es
sub
sub
jle
lcall
shrb
adc
cmpsl
leave
cmp
push
stos
lcall
push
test
mov
push
xchg
cmp
dec
xchg
mov
and
push
incl
loope
or
jp
adc
lcall
jmp
fldl
sbb
adc
dec
xlat
mov
push
call
dec
aas
mov
call
mov
call
pop
lea
sbb
out
repnz
arpl
pop
ret
push
cltd
dec
and
jg
push
jmp
in
xchg
xor
daa
addr16
pop
in
dec
lcall
mov
mov
out
imul
scas
adc
gs
lret
xchg
pushl
xchg
fdivrp
sbb
xor
mov
mov
xchg
push
pusha
test
or
push
jb
out
pushl
mov
scas
push
xchg
dec
es
subb
xor
push
mov
xor
ja
fistpll
mov
stos
jno
jecxz
cmp
inc
xor
or
in
into
scas
inc
jp
jo
incl
push
sbb
xchg
and
mov
jmp
sub
cmc
cmp
shll
in
lock
ljmp
repnz
mov
insb
popa
dec
adc
in
jl
sbb
jp
xchg
jae
in
push
pop
jmp
rcrl
js
clc
dec
adc
xorl
fwait
or
call
lea
pop
addr16
stos
mov
xchg
shlb
loope
pop
sti
cmpb
pop
rorl
outsb
push
sub
das
mov
pushf
mov
dec
lcall
add
jecxz
mov
cmpb
arpl
pop
sub
jge
mov
pushl
shrl
adcb
pop
push
incl
pop
jne
repz
cmpsl
sbb
call
add
cmpsl
mov
call
es
jmp
outsl
lret
sbb
mov
imul
pusha
jecxz
sub
and
movsl
sub
xlat
rorb
fidivs
sahf
mov
jmp
inc
popf
pop
xchg
xchg
mov
je
add
sarl
or
push
lea
sbb
loopne
cmp
sahf
or
jecxz
ds
cmc
fistpll
mov
jbe
xchg
mov
xchg
xchg
jmp
icebp
fdivrl
mov
sub
dec
outsb
mov
jne
mov
fdivrp
js
xchg
jno
mov
es
stc
xchg
mov
jae
xchg
pop
popf
cmp
or
jmp
pop
jecxz
in
stos
clc
sbb
mov
dec
cs
jnp
cld
ljmp
mov
ja
xchg
rol
jl
dec
lock
pop
cli
pop
pop
dec
ret
fwait
push
stos
int
call
cmp
add
test
ljmp
jge
sahf
jae
push
jp
gs
fisubs
or
pop
xor
in
fbld
mov
fwait
inc
insb
jmp
xor
xor
dec
mov
mov
and
xchg
jne
cltd
jge
xor
insl
aaa
aad
pushf
int
cmpsb
testb
sarb
lods
call
in
int
xor
insb
mov
jg
mov
dec
in
mov
cmp
dec
mov
xor
jp
push
jp
nop
xorl
das
cld
shrb
lods
into
fcoml
mov
mov
hlt
xor
daa
out
mov
ret
and
cmp
sub
and
icebp
dec
pusha
and
mov
ljmp
cmp
inc
adc
pop
shll
inc
and
popa
push
in
je
jmp
push
push
add
jne
imul
pusha
jle
js
and
pop
push
enter
repz
mov
push
call
mov
inc
out
mov
mov
jo
addl
dec
pop
fiadds
sbb
adc
xor
call
sub
sub
fstpl
jge
bound
stc
leave
xchg
xchg
dec
mov
lahf
pop
dec
sub
jg
lcall
push
add
sub
inc
fs
sbb
data16
mov
jo
leave
xchg
ja
pop
repz
push
imul
cmp
lret
adc
movsb
std
and
jo
inc
push
fsub
adc
xor
add
ljmp
jns
inc
ret
test
test
jg
cmpb
lods
ljmp
dec
mov
jecxz
insb
je
inc
or
les
jno
daa
int3
loope
xchg
outsl
icebp
pushl
mov
sbb
in
mov
cmp
jecxz
push
js
inc
fs
je
out
les
imulb
jo
sub
fistpl
jmp
adc
mov
push
js
adc
movsl
push
xor
jl
pop
lret
aaa
dec
push
jbe
xchg
fsts
mov
ds
and
inc
inc
lahf
addr16
aad
mov
jp
decl
fucomp
out
fsubrs
push
out
mov
gs
cmp
cld
enter
daa
cli
jge
pop
scas
repnz
jbe
jnp
outsl
push
call
js
adc
push
lret
stos
push
pop
cli
pushl
adc
iret
jae
jno
inc
cmpsb
imul
je
push
leave
test
jnp
jb
sub
jo
push
xor
imul
xchg
orb
push
mov
sbb
jb
push
jmp
push
bound
add
or
push
lock
inc
mov
fnstenv
sbb
jp
fistpl
clc
leave
push
ljmp
ret
xchg
sti
jg
mov
mov
mov
adc
cmp
jp
mov
mov
stos
fwait
push
push
and
arpl
dec
jp
xor
jl
stos
outsl
jbe
and
cmpsl
aaa
ret
sahf
out
mov
jb
fs
ljmp
ljmp
mov
subl
rorb
decl
shlb
mov
fimuls
add
lret
and
in
fwait
repnz
fsts
cli
incl
in
repnz
imul
rcrb
and
inc
push
pusha
pop
mov
sub
add
shrl
rorl
hlt
sbbb
movsl
jle
movsl
out
out
jg
and
xor
xchg
adc
dec
js
or
subb
ret
loop
pop
sbb
mov
or
xchg
jmp
jle
or
addr16
adc
jae
mov
ljmp
or
pop
adc
sbb
jb
sub
cs
lods
dec
fldpi
in
jbe
inc
jmp
das
mov
jecxz
lret
push
je
mov
outsl
lret
add
or
or
decl
mov
lock
insb
xchg
stc
push
inc
insb
pop
sti
std
fldt
adc
adc
mov
xor
cli
jmp
xor
cmpsb
fcmovu
add
arpl
test
rcl
mov
mov
mov
addb
jmp
rcl
add
lcall
std
incl
lcall
cli
stos
xlat
lahf
je
jno
lock
adcb
lock
xchg
jae
popa
dec
sbb
inc
mov
add
rcrb
enter
pop
pop
sahf
push
out
and
in
imul
fcmove
xor
into
sbb
push
fwait
imul
cmpsl
xor
jmp
mov
es
push
fxch
jb
push
sbb
sarb
int
add
or
xchg
out
push
add
outsb
mov
out
xchg
lcall
sbb
icebp
or
add
mov
mov
cmc
stc
outsl
cwtl
xchg
icebp
adc
pop
push
xchg
inc
ja
sub
aaa
mov
call
mov
in
jecxz
sbb
xchg
add
add
mov
cli
addl
jns
gs
pop
ljmp
imul
scas
or
test
int
dec
add
fnstsw
inc
cmc
add
jmp
mov
cltd
in
push
lds
sub
cwtl
incl
jno
jae
ret
adc
cmp
push
faddp
shl
xor
lods
jmp
pop
je
bound
aam
push
dec
loope
test
mov
mov
xchg
pop
pop
cmpsb
iret
sarl
xchg
jmp
mov
aam
mov
or
out
add
lcall
aam
push
daa
rclb
fildl
jo
hlt
mov
pop
out
ficoms
jb
inc
pusha
push
dec
sahf
lcall
sbb
sub
sub
jl
xchg
add
ret
inc
push
or
sbb
loop
aas
jo
sbb
test
fidivrs
out
jp
cld
out
sar
mov
lcall
sub
xchg
or
incl
lock
sbb
xchg
and
xchg
ljmp
je
dec
sub
jle
ljmp
mov
sbb
loop
lcall
outsl
mov
lods
jg
popf
xchg
push
sbb
fcompl
out
enter
cwtl
mov
mov
loope
mov
out
xorl
popf
xchg
fidivrs
pop
push
cli
hlt
in
adc
cmp
imul
pop
dec
lock
pushl
jecxz
adc
cmp
fldcw
loopne
cli
in
mov
outsb
std
jg
nop
mov
shlb
mov
adc
mov
enter
das
hlt
mov
aas
and
lcall
add
and
popa
hlt
pop
jnp
and
sub
xor
call
push
mov
in
or
sbb
mov
add
cld
iret
cmc
mov
fisubrs
adc
sbb
clc
or
add
cmpsl
stos
sbb
xlat
xabort
outsl
jg
lcall
bound
insb
sub
add
pop
jbe
push
inc
mov
inc
cmp
icebp
pop
loop
aam
or
ds
arpl
fucomip
ljmp
push
repnz
adc
cmp
adc
inc
out
jg
push
lea
lcall
cmp
jge
into
fs
enter
lret
xchg
mov
lods
add
lock
incl
test
outsl
adc
dec
clc
rorb
clc
pop
inc
jl
xchg
in
mov
ffreep
jg
cs
pushf
xor
bound
jg
into
dec
add
xor
dec
mov
push
sbb
dec
jmp
mov
jo
cs
jmp
mov
fisttps
fnstcw
insl
xor
sub
fucomip
out
fisttpl
lock
stos
jmp
sbb
inc
inc
lcall
xor
aas
jnp
xchg
fnstenv
xor
mov
jg
rolb
xor
insb
out
imul
jo
enter
mov
loope
lock
decl
jmp
sti
push
xchg
pop
lahf
inc
es
insb
mov
mov
adc
std
mov
stc
jnp
and
mov
mov
call
ficompl
leave
insb
dec
push
pop
dec
mov
loope
jmp
cmp
cmp
repnz
stos
xchg
cltd
flds
inc
hlt
cwtl
gs
mov
aad
cli
out
dec
out
fcmovu
aas
test
call
decb
mov
fucomip
inc
lock
cmpb
fsubs
mov
nop
orl
insb
jns
and
jg
jecxz
lods
fdivs
push
xchg
clc
aaa
cli
pop
mov
and
and
outsl
mov
stc
mov
or
mov
push
popa
sub
rorl
cld
ljmp
dec
inc
popa
mov
lahf
add
pusha
es
rorl
mov
mov
arpl
das
hlt
mov
add
fsubl
or
mov
sbb
mov
les
ret
jns
mov
mov
inc
pop
jmp
hlt
scas
ret
jno
fmulp
test
mov
pop
movl
push
sahf
fwait
inc
movsl
outsb
in
popf
call
mov
or
insb
adc
outsl
cmc
jmp
arpl
dec
push
cmp
pop
push
cmp
adc
loope
cmp
call
push
mov
fisubrs
adc
sub
fcompl
cld
mov
sbb
sbbl
xor
mov
clc
push
xchg
pop
or
cli
sbb
scas
loop
inc
inc
pop
ljmp
lods
push
sbb
popa
insl
lcall
ret
cmpsb
stos
lea
shll
fistl
sub
adc
call
mov
cmp
fwait
sub
jecxz
or
jae
decl
lcall
or
push
pop
fcoml
xlat
inc
sub
pop
incl
sbb
data16
iret
in
scas
mov
mov
mov
out
clc
sbb
jmp
jmp
push
dec
mov
sbb
jge
fwait
adc
aaa
push
ljmp
cmp
inc
cmp
into
push
fisttps
call
addr16
cmp
sbb
or
call
stos
out
or
sbbb
out
push
cmpsl
mov
lock
pushl
cmp
pop
mov
pop
mov
jne
sti
sub
rorb
in
push
jl
push
mov
lods
aas
out
enter
cmp
jbe
cmp
in
lcall
mov
clc
jl
roll
pop
xchg
call
push
dec
adc
clc
ljmp
push
cwtl
lret
je
pop
lcall
decl
xor
daa
test
sbb
mov
add
ficomps
sub
ljmp
dec
xor
cli
decl
xlat
pop
js
inc
out
or
pop
pop
out
sahf
and
fbld
pop
imul
aam
mov
xchg
push
lods
mov
sti
popf
cs
mov
and
add
mov
mov
rorb
and
jne
addr16
jg
test
popf
jmp
dec
adc
cmpsb
inc
jae
xchg
rorl
mov
xor
mov
lcall
and
adc
add
jb
pusha
in
jns
loope
fsubr
ds
call
xchg
sbb
ljmp
adc
jmp
loope
bound
lods
ja
decl
jne
call
repnz
mov
das
psubusw
push
outsb
outsb
mov
lahf
or
loopne
lea
jmp
cld
fnstcw
cmpsb
jns
cld
push
pushl
clc
xchg
mov
pop
jmp
push
aad
inc
sbb
mov
call
dec
mov
clc
xchg
rolb
out
hlt
mov
xlat
stc
pop
lods
mov
sbb
lods
fwait
pushf
inc
adc
clc
ljmp
jg
inc
stos
stos
pop
add
shl
enter
pop
or
aaa
add
mov
add
dec
jnp
cli
popa
fcmovu
pop
sub
cmp
mov
sub
ljmp
push
mov
gs
adc
push
mov
cmp
cmp
nop
or
push
mov
add
sub
call
sbb
mov
inc
roll
cmp
inc
jae
jb
mov
das
jge
repz
incl
adc
sbb
xchg
cmp
hlt
cs
scas
inc
sbb
cmp
stos
inc
fistl
stos
cltd
sbb
lea
popl
clc
or
sbb
popf
push
xor
scas
ljmp
pop
loop
adc
mov
loop
inc
dec
sbb
pop
and
cmp
pushf
sahf
mov
push
xor
mov
es
dec
pop
gs
mov
push
xchg
ret
pop
sti
arpl
out
mov
xchg
pop
push
inc
addr16
sarl
and
push
mov
aad
push
add
lods
lcall
std
lods
sub
push
cmc
xchg
cmc
and
jmp
or
cli
fcompl
int
push
xor
aam
jge
imul
lods
jmp
aaa
push
xchg
fmull
and
add
jg
add
pop
mov
mov
xchg
xchg
jns
jp
sarb
mov
jmp
fwait
out
test
or
sbb
dec
mov
cmp
mov
mov
cld
movzwl
mov
mov
push
push
or
nop
mull
jg
or
pop
dec
push
mov
pop
out
xor
jae
pop
and
fbld
sbb
sti
js
or
insb
ja
mov
sub
lcall
movsb
mov
rorb
mov
mov
adc
rcrl
adc
push
push
dec
cmp
inc
pop
lods
push
sbb
pop
das
das
jbe
mov
cld
mov
cmpsb
in
std
push
ljmp
sbb
xchg
push
mov
mov
inc
ret
leave
in
ja
in
or
fimull
xchg
mov
or
call
fidivl
aas
xor
negl
sub
mov
push
cld
dec
pop
or
lods
js
jb
mov
aam
psadbw
aam
inc
push
dec
clc
push
ljmp
in
xchg
stos
xor
lret
jg
nop
mov
jp
ja
mov
call
lock
xchg
xchg
cli
mov
imul
or
iret
cs
sub
and
outsl
aam
fs
dec
bound
cmp
or
fstpl
mov
lcall
mov
daa
aaa
shld
or
aaa
loope
test
incl
pop
das
enter
popa
out
stos
adc
les
sub
mov
or
mov
push
cmp
cmp
cmp
roll
icebp
push
xchg
lcall
call
out
mov
inc
jnp
iret
cmp
pop
outsl
jmp
dec
in
scas
jns
testb
ret
adc
cmp
mov
daa
adc
and
aaa
clc
aam
add
fwait
jne
mov
or
pop
jmp
xor
insl
push
add
lods
int3
stos
mov
pop
and
call
ljmp
mulb
cwtl
sahf
push
out
loop
push
jp
in
lcall
add
cmp
shrb
jbe
outsl
dec
scas
push
inc
ljmp
ljmp
xor
ret
add
cs
outsl
test
xor
jmp
lret
lods
and
shll
vpcmpgtd
inc
shr
lock
mov
imul
addr16
sub
call
lret
hlt
xchg
mov
sar
inc
js
sbb
pop
ret
sub
pop
fildl
sub
outsl
mov
inc
dec
xorl
enter
pop
rcll
incl
ljmp
jbe
mov
adc
add
dec
inc
push
add
jmp
adc
into
movsl
jp
daa
and
loopne
sbb
pop
or
pop
cli
pushl
es
xlat
loop
scas
aas
shl
js
or
call
data16
outsb
and
push
test
pusha
lock
mulb
and
push
mov
scas
lcall
jmp
das
cmp
push
fisttpl
cmpsb
dec
hlt
js
stos
or
call
gs
clc
ljmp
pop
adc
xor
sti
je
lds
push
cli
repz
int3
mov
dec
out
sub
and
jmp
cmp
xchg
add
dec
div
sti
subl
insb
xchg
sub
jne
jge
add
sahf
js
inc
rcl
xchg
and
aaa
sub
in
stos
sbb
sub
repnz
fwait
xchg
popl
dec
and
mov
inc
add
or
mov
jecxz
stos
jecxz
sti
pop
clc
sbb
scas
mov
push
push
jmp
shrb
adc
call
or
and
cli
insl
std
pusha
dec
push
dec
mov
movsl
mov
aaa
incb
aam
lret
sub
mov
push
jb
call
popa
add
dec
sub
sbb
pop
movsl
jecxz
inc
std
out
sbb
pop
cltd
test
fsubr
jbe
leave
ret
pop
cmp
push
xchg
call
das
movsl
lcall
aad
mov
insl
xchg
add
iret
lahf
mov
out
mov
lret
inc
ds
fs
mov
pop
ljmp
jns
insl
scas
in
cltd
and
cwtl
test
xor
sbb
adc
in
decl
pop
add
inc
imul
scas
mov
stos
add
js
mov
jmp
jg
mov
sub
or
dec
orb
push
mov
push
jmp
xchg
in
pop
dec
in
sub
inc
cwtl
xchg
stc
jecxz
mov
addr16
sbb
push
aaa
aad
sbb
lahf
shll
daa
inc
incl
mov
aaa
pop
cld
mov
jmp
xchg
mov
sub
and
pop
jl
xor
daa
data16
sub
fisttps
adc
cmc
mov
jg
inc
jg
sub
ror
push
adc
pop
mov
es
jbe
mov
jmp
mov
std
and
sbb
inc
test
push
pop
testl
push
outsb
xlat
hlt
inc
push
lock
mov
mov
jp
mov
push
daa
adc
mov
shlb
fdiv
and
or
loope
dec
and
cli
cmpsb
js
pushl
leave
cwtl
sub
jne
push
nop
enter
loop
fwait
mov
mov
xchg
mov
sbb
lret
jno
clc
adc
movb
int
rcll
pop
push
jb
lcall
dec
cmpb
pop
mov
add
movsl
cmp
sub
outsb
sbb
dec
insl
out
add
popa
xchg
dec
mov
out
pop
xlat
clc
cmpsb
mov
fmull
jmp
lahf
leave
xchg
into
dec
or
notb
shl
std
sahf
push
cwtl
daa
in
incl
xchg
sbb
int
push
ds
mov
mov
push
pop
js
jl
fmuls
incl
xor
xchg
adc
cmp
pop
push
push
fstps
repz
shrb
cmp
das
repnz
stos
sbb
pushf
jae
pushw
aam
call
dec
ljmp
aad
inc
add
push
add
jns
mov
or
sub
pushl
movsl
out
les
push
and
pop
outsl
fldl
xchg
lret
jecxz
mov
std
push
adc
pop
push
std
cmc
icebp
xor
jp
rol
xchg
dec
sahf
sub
sub
and
test
sti
mov
movsl
lcall
roll
pop
push
test
out
scas
dec
mov
inc
faddp
loop
cmc
and
fucomip
mov
lcall
xor
into
push
lock
decl
cld
jg
xchg
or
jle
iret
cmp
into
cmpsb
repz
pushl
lea
ret
xor
xchg
ficompl
push
adc
loopne
dec
enter
mov
incl
movsl
testl
mov
jae
xor
inc
mov
not
outsl
pushl
clc
xor
inc
push
andb
sahf
aad
loop
inc
out
call
or
fwait
xor
dec
jno
das
push
cwtl
jecxz
add
mov
mov
shl
lcall
movsl
jmp
sub
fwait
mov
mov
lods
mov
rcll
movsb
jne
leave
inc
jb
int3
mov
js
clc
mov
dec
sub
pop
push
scas
pushl
pop
clc
ljmp
mov
sub
jmp
sub
dec
jmp
jns
sarl
roll
mov
adc
mov
xchg
out
push
mov
cwtl
ret
mov
dec
fdivl
inc
mov
loop
fstps
sahf
mov
jg
decl
dec
fldt
or
xor
jg
dec
push
pushl
clc
adc
or
lret
f2xm1
fbstp
dec
mov
mov
aam
pop
and
pop
leave
leave
out
loop
gs
mov
mov
lret
pop
adc
push
jp
sub
lods
cltd
sbbl
mov
mov
popa
ss
jae
int3
gs
mov
sar
jmp
movsl
xchg
in
add
pop
xchg
imul
cs
mov
ds
sbb
incl
inc
sbb
xchg
int3
jb
cmp
push
enter
xchg
xchg
mov
mov
xchg
mov
and
adc
aam
movb
dec
decl
pushl
cmpsb
scas
testl
and
pop
faddp
int
mov
lock
ljmp
and
jno
sub
ja
lcall
mov
pop
jno
mov
xchg
mov
lret
dec
data16
xchg
mov
cli
lcall
xchg
cltd
add
xchg
inc
or
aas
and
push
loop
sbb
fdivrl
xchg
and
dec
add
jecxz
mov
pop
or
ljmp
mov
mov
mov
insl
rorb
sub
clc
fidivrs
push
je
imul
jmp
mov
shlb
mov
fimull
dec
call
out
xchg
mov
std
call
in
or
pop
jne
mov
mov
xchg
sub
ljmp
fistpl
aad
push
je
orl
xchg
mov
fildll
mov
xor
jnp
cld
arpl
aas
cmp
ljmp
pop
mov
adc
js
popf
xor
sti
adc
imull
push
dec
and
sbb
jmp
lea
jge
inc
jno
jbe
hlt
fcomi
repz
out
push
jmp
jmp
js
ret
les
push
or
rolb
or
jae
repnz
incl
jnp
pop
sbb
pushf
pop
jle
fcoms
cpuid
jae
ljmp
add
hlt
movsl
adc
jae
shl
push
inc
mov
loopne
pop
div
mov
call
mov
cwtl
xchg
scas
dec
add
iret
sahf
xor
adc
ljmp
xchg
leave
sti
pop
add
cmc
vandps
imul
sti
and
push
stos
push
xchg
jne
test
pop
in
mov
outsb
imul
and
jmp
std
xchg
inc
xchg
mov
ja
mov
jmp
pushl
shll
cmpsb
dec
mov
jle
fbld
jl
mov
lahf
xchg
cmpsl
adc
call
inc
inc
pop
mov
jecxz
mov
dec
hlt
mov
push
cmpsl
daa
and
call
push
sbb
mov
mov
inc
dec
dec
shl
cmp
ret
jmp
incl
add
shrb
inc
lcall
mul
sbb
xchg
cmp
aad
and
call
dec
push
pusha
fdivl
jae
jae
mov
sbb
push
adc
ljmp
loope
mov
or
ja
sbb
cwtl
mov
aad
ja
jg
incl
mov
jmp
sahf
xor
inc
adc
adcb
dec
movsb
sub
add
adcb
jns
sub
adcl
loop
mov
pop
push
inc
mov
adc
pusha
fisubrs
jae
lcall
inc
pop
pop
pop
notl
pop
jmp
cmpsl
es
pop
lret
inc
decl
dec
xchg
ljmp
sbb
push
sbb
sbb
lahf
fmul
sbb
cmp
jns
mov
mov
rorb
pusha
xchg
mov
push
fdivr
cmp
mov
mov
call
push
mov
push
mov
into
test
adc
mov
adc
aaa
aaa
and
dec
outsl
xor
jg
adc
adc
jl
pop
add
decl
xor
in
jge
dec
add
movsb
or
dec
pop
pusha
enter
mov
jecxz
jo
cmp
test
sarl
sbb
outsb
fstl
hlt
cmpps
in
jg
sub
out
jno
mov
sbb
xchg
pop
fsubrl
scas
push
incl
enter
pop
jle
add
push
sub
icebp
add
mov
call
mov
in
dec
repnz
mov
mov
xchg
dec
into
ret
xor
xchg
push
incl
clc
incl
mov
xorl
jg
scas
out
mov
xor
in
sub
iret
outsl
pop
callw
and
or
scas
loopne
repz
pop
incl
mov
test
inc
adc
inc
lret
dec
cmc
je
mov
call
movsb
xlat
data16
in
in
xor
xchg
jno
mov
mov
ret
inc
or
pop
xchg
dec
cmp
cmp
imul
cs
movsl
adc
roll
frstor
lock
jle
call
call
fwait
pop
ljmp
insb
ds
or
test
mov
mul
pop
pop
push
push
sub
mov
mov
or
sti
sbb
jmp
fstl
sahf
lods
cmpsb
xchg
or
outsl
icebp
mov
insl
pop
loopne
fwait
jns
xchg
bound
incl
mov
sbb
xchg
test
push
pop
sarb
jae
cmc
push
stc
subl
sbb
sub
xor
stc
pushl
sbb
into
mov
jns
mov
div
dec
dec
sbb
mov
pop
clc
ss
fucomi
out
or
dec
loope
ret
outsl
pop
iret
push
inc
push
mov
mov
mov
cmp
ljmp
lock
xor
movsl
push
xor
push
jns
dec
jo
cmp
loop
pusha
insb
pop
ljmp
mov
aas
enter
popa
add
into
xchg
jg
fistpll
push
data16
mov
mov
sbb
xor
cs
adc
lock
int3
dec
mov
call
arpl
les
enter
add
call
fsubs
jno
jle
xchg
lea
pop
dec
fdivs
dec
cmp
aas
cmp
cld
xchg
andb
lahf
fcmovne
insl
lret
or
aam
pushf
add
push
call
leave
jno
pusha
inc
inc
stc
cld
bnd
lahf
sbb
lret
inc
adc
sbb
mov
lcall
add
push
lcall
iret
pop
mov
ficompl
add
push
mov
sub
movb
jno
into
in
orb
call
adc
and
cmpsl
push
pop
je
lods
xor
fstps
pop
dec
pusha
into
push
sbb
fdivrl
and
das
cmp
cwtl
cmp
mov
lea
addr16
lahf
push
icebp
jg
stc
adc
jge
mov
mov
cmc
and
mov
dec
sti
sarl
jne
in
pop
sub
mov
pop
in
jle
test
dec
cwtl
cld
mov
popf
pop
sbb
cmpb
xor
dec
mov
mov
cmpl
inc
int3
push
adc
mov
jmp
dec
fwait
push
pop
nop
pop
stos
in
xlat
xchg
cld
dec
dec
cltd
fistpll
inc
fists
mov
jg
pop
sbb
inc
xchg
insl
xor
jo
dec
imul
das
pop
dec
jecxz
fadds
and
push
sub
mov
or
pop
rolb
test
push
xor
xchg
ljmp
pop
or
les
shrl
sbb
pop
stos
mov
inc
pusha
cs
mov
shll
push
fidivrl
push
or
cmp
divb
adc
cli
int
enter
gs
xor
add
mov
call
and
popa
and
mov
push
jae
inc
sti
jmp
cmp
push
test
mov
xchg
pushf
xorb
mov
outsl
adc
push
mov
stc
aaa
push
loop
jns
pop
mov
push
sub
test
and
push
stos
cmc
cld
pop
cli
inc
call
jp
ss
aam
mov
mov
cmc
mul
int
dec
xchg
fcomps
lock
pop
add
and
xchg
jp
push
negb
or
or
cmp
negb
call
int3
inc
push
push
xor
inc
or
mov
cmpsl
xchg
je
dec
push
cld
push
into
mov
sar
push
arpl
mov
iret
push
rcrl
xor
ss
bound
inc
ds
das
mov
or
std
fstps
and
push
lea
sar
and
push
adcl
dec
mov
pop
jb
cltd
adc
mov
hlt
mov
movsbl
hlt
outsb
sub
lcall
or
sub
or
loop
push
sbb
and
inc
movsb
add
cli
incl
movsb
pop
mov
repz
gs
mov
adc
sub
push
sahf
movsl
xor
xchg
mov
pop
cli
insb
pop
xor
mov
cmp
jecxz
jmp
aas
daa
fcoms
scas
jae
scas
insb
sarb
cli
aaa
sub
inc
push
push
out
repz
cmc
sbb
lods
push
lcall
iret
in
inc
insb
dec
jnp
repz
adc
stc
cltd
je
arpl
scas
xchg
pop
jl
cmovle
sti
cmp
add
scas
dec
jmp
pop
pusha
mov
dec
repnz
push
inc
stos
sub
out
loop
and
into
gs
xor
fucomip
aas
cmp
insb
dec
ja
aaa
push
leave
roll
mov
mov
cs
orb
lret
pop
ljmp
incl
subl
and
out
adc
sub
and
pop
mov
jno
fdivrp
call
clc
inc
ret
push
cmp
xchg
fsubl
cmp
cmc
lahf
jmp
pop
add
push
decl
adc
mov
and
mov
mov
and
imul
int3
push
mov
or
xor
sbb
fnstsw
xlat
adc
xor
popf
sbb
adc
insb
push
fdivrl
jmp
movsl
pop
and
pop
adc
push
dec
hlt
pop
insb
sub
out
fcmovb
jecxz
loopne
lcall
test
cmp
push
xor
push
and
insb
dec
cld
aaa
add
cmp
dec
cmpsl
mov
imul
push
mov
int
in
sbb
add
arpl
lcall
mov
inc
adc
notb
lcall
mov
call
xchg
mov
les
xchg
cmpsl
adc
mov
call
test
sub
push
daa
popf
movsl
inc
dec
mov
lock
jmp
dec
cmpsb
push
in
insl
or
fnstenv
mov
add
jb
idiv
lea
insl
mov
popl
inc
mov
pop
pop
xlat
fistpll
fistpl
cmp
loop
inc
jno
mov
sub
pushl
jecxz
enter
mov
in
lods
pushl
pop
xor
ret
divb
push
inc
mov
enter
pop
mov
xor
jne
mov
dec
std
inc
andl
dec
popa
or
jns
push
call
jmp
rclb
pop
jbe
ffreep
sahf
scas
call
jno
out
insb
test
imul
clc
in
cli
decl
mov
xchg
mov
adc
inc
into
je
mov
push
push
sahf
clc
ja
nop
add
push
lea
add
addl
subl
scas
in
add
pop
push
push
sub
sbb
jbe
lods
adc
or
xor
inc
insb
jg
movl
xor
cmp
and
or
sbb
cmp
divb
sbb
pop
push
sub
outsb
scas
jnp
nopl
sbb
pop
add
push
adc
pop
push
pop
and
pop
jb
pop
jmp
add
inc
pop
dec
push
or
dec
sbb
adc
aas
insb
jb
push
mov
mov
inc
inc
or
sbb
movups
add
adc
xchg
popf
jge
add
or
add
sbb
sbb
xchg
jne
push
add
sbb
aaa
sbb
outsl
xorb
sbb
sbb
sbb
and
push
or
fadds
add
sbb
sbbb
add
add
adc
push
add
sbb
push
add
inc
dec
inc
dec
add
add
mov
andb
adc
faddl
in
scas
push
add
or
sub
in
out
aam
loop
aaa
stos
push
das
inc
ja
in
xchg
xchg
mov
push
jg
sahf
sti
out
out
cmp
aas
loope
add
add
clc
dec
adc
call
pop
int3
adc
mov
lahf
cmpsl
or
cli
ljmp
loope
push
mov
jp
cwtl
inc
pop
xchg
push
test
cmp
cmp
jg
mov
aaa
and
popf
repnz
mov
cmp
aaa
xor
inc
mov
divb
dec
or
out
jg
jmp
and
outsl
je
mov
mov
out
inc
or
mov
pushl
mov
fs
xor
xchg
push
mov
in
pop
ret
mov
xchg
into
mov
cmpsl
int
iret
iret
push
add
imul
ljmp
cmp
dec
std
jmp
sarb
mov
and
movsb
negl
jg
cmp
fstpl
sub
jnp
clc
mov
xlat
fld
adc
jmp
je
push
imul
fldenv
ror
pop
adc
hlt
das
test
cmp
incl
mov
and
cltd
dec
push
ds
adc
mov
shrb
popa
int
int3
je
jb
lret
jmp
cmp
cmp
inc
outsl
scas
sbb
scas
cs
pusha
call
jns
inc
daa
add
jmp
ret
in
imul
lcall
mov
jae
cmp
xchg
lret
lcall
inc
ficoml
mov
push
mov
cmp
sti
pop
jbe
enter
mov
mov
push
out
cld
shl
and
dec
lret
test
jle
aas
push
outsl
insb
mov
stos
mov
mov
and
outsl
faddl
out
xchg
idiv
inc
insl
into
jle
cmp
pop
mov
insl
addr16
sub
daa
pushf
inc
and
fdivrp
jmp
iret
mov
sbb
enter
pop
in
andb
adc
pushl
sbb
pop
cmpsl
loope
das
pop
call
jbe
ljmp
data16
push
cmpsl
rorl
mov
ds
sahf
arpl
out
xchg
aam
pushl
mov
jno
cli
outsl
clc
sub
sbb
ficompl
mov
mov
sbb
inc
push
and
sbb
leave
mov
decl
sub
sub
dec
sbb
push
and
insb
fwait
sbbb
sti
int3
push
bound
mov
or
pop
dec
mov
or
inc
push
int3
mov
dec
dec
mov
rclb
fucomip
pop
push
cmc
adc
cmc
out
divb
xor
in
jecxz
sub
dec
int
xor
incl
stc
outsl
lds
mov
pop
adc
xchg
pusha
je
mov
ljmp
jmp
fimuls
inc
jae
pushf
stc
cmp
imul
sbb
std
cld
jno
cmpsb
mov
lock
inc
cmc
icebp
scas
arpl
pop
xor
pushl
int3
outsb
mov
or
xor
jno
xchg
fsubl
mov
outsl
lock
mov
mov
js
cmpsb
stos
mov
jo
mov
mov
in
sub
sbb
stc
xor
mov
js
inc
les
test
sub
push
shll
sarl
mov
jnp
inc
mov
or
test
jae
call
aas
int3
mov
dec
rol
test
rcrl
push
movb
xor
xor
xor
pusha
icebp
pop
gs
jb
leave
shlb
insl
sbb
arpl
popf
scas
push
fadd
and
call
push
push
into
andl
test
sub
xchg
mov
call
adc
ds
lret
push
inc
inc
add
or
daa
ja
push
add
inc
mov
pop
mov
push
add
sbb
and
pop
stc
inc
mov
cs
sub
shll
or
aas
mov
outsl
push
fucom
inc
cmp
imul
xchg
jg,pt
sbb
aaa
xor
dec
sbb
inc
push
repz
and
sahf
mov
ljmp
and
or
test
mov
push
leave
and
scas
shlb
incl
sbb
inc
push
out
xchg
dec
test
sub
popa
das
mov
lods
pop
daa
jg
jmp
popw
add
lods
aam
mov
into
in
dec
lds
ljmp
push
popa
add
adc
inc
test
jge
ss
mov
movsb
dec
bound
in
dec
inc
mov
fs
dec
sub
cmp
xchg
mov
cmp
jmp
lcall
mov
and
push
add
fnstenv
adc
stc
xor
test
xchg
lcall
sti
mov
sub
mov
mov
jo
inc
andb
cld
cmp
addb
adc
aaa
repnz
push
int3
out
push
cld
scas
icebp
push
sub
jge
mov
mov
jb
mov
je
rcl
mov
lea
popf
incl
cmp
enter
in
push
and
inc
cli
clc
into
and
out
test
jg
int3
stc
pop
mov
sbbb
hlt
lock
add
and
sahf
jns
mov
sub
lock
cld
cmp
lcall
lea
bound
dec
mov
inc
ja
shr
or
sub
xchg
fisubl
mov
fstpt
sub
pop
jo
mov
out
decl
cmp
scas
popf
jle
lods
das
mov
mov
rol
leave
pminub
mov
mov
xchg
in
cmpsb
arpl
ficoms
push
lods
sbb
test
dec
outsb
push
mov
call
stos
cli
stos
ljmp
call
stos
shll
call
nop
inc
and
pop
jge
addb
jo
mov
sbb
imulb
xchg
dec
or
fmulp
adc
jle
jecxz
movsb
cmp
cld
decl
mov
sub
sbb
jb
adc
test
push
call
jmp
push
lods
xchg
sbb
push
mov
inc
cld
nop
dec
mov
mov
ss
incl
fst
lods
cmpsl
push
sahf
xor
mov
sbb
pop
xchg
pop
xchg
adc
push
imul
imull
clc
repz
rcrl
sub
ljmp
out
xchg
xchg
mov
lret
inc
cs
adc
popf
or
inc
dec
dec
mov
jge
inc
pusha
repnz
imul
incl
push
cmp
cmp
push
add
push
sbb
cmpsl
pushf
sub
imulb
jmp
mov
je
incl
lock
add
inc
push
lods
xor
nop
sbb
push
xchg
imul
push
clc
mov
adc
and
cli
and
in
dec
ret
imul
fdivrp
lcall
pop
sbb
dec
enter
enter
and
xor
mov
enter
dec
cld
cld
fs
cmp
mov
cwtl
iret
cli
push
call
pop
mov
ss
mov
pop
mov
xor
aad
aam
jg
repz
push
popf
neg
push
xor
jg
movsb
ds
incl
shll
xor
inc
and
push
test
bound
lcall
call
imul
shlb
xchg
xor
lcall
jge
pusha
mov
pop
mov
xchg
cmp
fs
aaa
mov
jmp
daa
mov
mov
jl
and
mov
imull
mov
jge
imull
jle
adc
ucomiss
rcl
mov
ret
mov
cwtl
call
push
push
ss
insl
mov
dec
int3
jno
adc
or
mov
decl
fldt
cmpsb
mov
adc
inc
add
fidivrl
daa
push
jg
pushl
fs
stos
out
scas
push
neg
jnp
dec
decl
ja
mov
fs
and
push
and
out
ret
les
lcall
fiaddl
jmp
repz
sar
icebp
mov
add
decl
cmp
in
add
mov
push
cli
popf
push
sti
test
pop
cld
das
add
and
cmp
pop
jle
xchg
insl
sub
jns
add
or
stc
movsl
cmp
ja
lcall
lds
push
and
ror
scas
orl
xor
jno
cmp
dec
shrl
adc
insl
xchg
lods
js
test
test
sar
loop
pop
adc
aas
mov
stc
test
jp
lahf
fwait
movsl
ljmp
inc
lods
adc
cmpsb
cmp
sbb
cmp
mov
seto
lret
push
ljmp
arpl
ret
loopne
pop
iret
inc
sarb
dec
jb
ljmp
int3
cwtl
insl
cmp
mov
loope
aad
imul
cmpsb
decl
mov
adc
test
dec
lods
mov
pop
in
cld
inc
cltd
loope
xchg
jg
or
loopne
mov
icebp
mov
ret
stos
fcmovnu
clc
lock
js
and
stos
add
int
jle
mull
sub
cmp
lret
push
mov
inc
xor
jp
inc
stos
outsb
and
xchg
mov
adc
mov
incl
add
test
aam
popa
negl
jbe
mov
loopne
outsl
out
add
mov
xchg
decl
aaa
aad
or
dec
cld
popf
les
hlt
sub
fcoml
mov
jbe
and
nop
inc
fcmovbe
cmp
fstpt
ljmp
inc
push
adc
mov
cmp
cmpsl
outsb
xor
xor
sbb
lcall
idivb
int3
addb
cmpsb
xchg
aas
adc
into
mov
sub
fwait
sbb
push
xchg
jp
adc
lahf
popa
pop
push
fnstenv
jb
lods
fstl
mov
mov
pushl
jno
call
sbb
jo
push
ljmp
sub
aaa
mov
aaa
xchg
add
movsl
and
jb
rorb
inc
sbb
stos
sub
push
or
xchg
cmpsl
jb
stos
cmp
add
xchg
mov
stc
popf
push
inc
adc
cli
decl
adc
push
push
xor
nop
and
fisubs
cmpsl
sbb
das
iret
mov
xor
ret
pop
nop
aas
ljmp
call
cmp
insl
jne
pop
or
sub
or
sar
das
xor
mov
aaa
pushf
push
bound
inc
hlt
xchg
out
fldl
clc
and
das
mov
sub
aas
insb
fstpt
push
dec
call
push
jg
mov
mov
sti
or
aaa
add
pop
ret
or
pushl
jge
push
mov
jge
clc
arpl
loope
es
push
cmp
mov
lahf
sbb
mov
movsl
jmp
icebp
mov
and
orb
call
push
pop
dec
rcl
adc
mov
add
jg
jnp
dec
adc
pop
adc
cltd
sbb
shll
adc
jns
mov
decl
sbb
ret
bound
dec
loope
cmpsb
mov
add
testl
xchg
test
sub
incl
decl
std
into
test
cltd
push
pop
insl
xchg
loope
cmp
jg
incl
notb
outsb
stos
shl
aam
push
cmpsl
imul
lahf
pusha
pop
jae
ljmp
lock
icebp
add
fadd
xor
cltd
cmc
dec
fdivs
clc
ljmp
push
fdiv
mov
popa
cli
fdivl
mov
sub
xchg
mov
shll
rclb
mov
xchg
inc
cmpb
jae
movsb
decl
cmp
out
cltd
add
cwtl
pop
pop
jmp
js
imul
loopne
push
mov
cmp
dec
mov
inc
cmp
lods
mov
jbe
inc
call
sub
shrl
rclb
rclb
das
cmp
mov
inc
leave
jne
adc
dec
sbb
jl
push
ficoms
sub
dec
adc
adc
cmpsb
leave
xchg
dec
out
clc
dec
push
lods
lcall
inc
rorl
xchg
mov
in
fs
test
mov
mov
test
imul
jg
test
int
cmpb
mov
lock
mov
mov
adc
lret
daa
jmp
jno
popa
mov
sub
cmp
fwait
add
in
test
xchg
sub
mov
rorl
in
scas
lods
stos
sbb
cs
imul
icebp
loop
ds
call
dec
sbb
or
inc
cwtl
shlb
cld
cmp
inc
cmp
xchg
mov
ja
dec
pop
rcll
and
shl
dec
pushl
sub
test
cs
dec
ja
scas
fwait
cmp
pushf
ja
repz
incl
mov
sbb
and
pusha
xor
testb
pop
iret
xchg
inc
push
std
sbb
mov
xor
les
loop
lea
cli
mov
sbb
or
adc
push
pop
xchg
fisttps
cmc
fists
leave
inc
mov
mov
shll
or
cmpsb
movzwl
sub
mov
mov
loopne
outsb
test
cli
push
jbe
jmp
jbe
push
or
testl
scas
push
pop
dec
mov
cmp
popf
mov
fwait
sahf
ljmp
hlt
test
jle
inc
or
pop
sub
incl
jae
lcall
xchg
out
ret
cld
dec
call
jno
pop
cmp
xchg
inc
icebp
push
das
test
pop
pop
cmpsb
pop
pop
pop
mov
lea
ficompl
pop
cmp
test
lods
frstpm(287
fsubr
sub
inc
sub
ret
scas
push
xchg
mov
int3
sbb
fisubl
dec
scas
andl
mov
inc
adc
lcall
mov
mov
adc
sti
clc
sahf
or
adc
sbb
rcl
sub
xchg
mov
dec
nop
lcall
in
inc
jg
lcall
das
sbb
xchg
jbe
je
mov
and
pop
cmpsb
insl
ja
popf
jne
cltd
cs
adc
outsl
std
xor
push
push
xchg
nop
adc
push
je
sbb
dec
lret
jb
pop
bound
rolb
stc
mov
xchg
clc
jecxz
inc
or
mov
fidivrs
movsl
mov
adc
roll
inc
cmpsl
pop
mov
mov
push
stos
jge
scas
fcomps
jle
and
or
lahf
jl
xor
xor
stos
sub
inc
dec
subl
adc
jg
xor
test
fs
daa
icebp
push
gs
lret
test
jo
sti
sbb
xchg
or
push
jg
push
dec
and
lahf
mov
jmp
mov
jne
pop
xor
and
push
arpl
dec
fistps
mov
in
mov
pop
cmpb
fwait
shr
adc
rolb
inc
loope
call
add
mov
rcll
call
lret
jl
pavgb
cld
push
ret
out
ret
inc
adc
adc
pop
mov
push
dec
mov
imul
lret
call
mov
fnstsw
add
aam
mov
pop
mov
cmpb
ret
cld
jg
ljmp
sub
icebp
enter
data16
lods
pop
inc
lcall
xor
shll
mov
sbb
cmpsb
rcrb
mov
test
sbb
jecxz
fnstcw
jg
mov
ret
jb
enter
popf
fucomip
insb
inc
jno
pop
clc
jmp
jb
cmpsb
fs
iret
aad
test
lock
clc
ljmp
cltd
in
ret
popa
add
and
dec
add
fadds
mov
les
mov
pushl
sub
push
in
lret
nop
shlw
mov
imul
push
dec
incl
fimuls
inc
lcall
sbb
outsl
dec
mov
jmp
imul
mov
push
out
xchg
daa
std
mov
rolb
mov
sub
bound
mov
lcall
ret
sarb
cmpb
push
cld
sbb
rcrb
ljmp
addr16
add
out
aaa
popa
cmp
ret
mov
mov
std
pop
ja
in
push
das
push
mov
cmc
sar
movsb
sbb
mov
lret
xor
nop
lahf
imul
sbb
xchg
sub
out
xchg
jp
pop
and
mov
mov
add
dec
jg
in
shrl
push
jg
call
aaa
lea
xor
stos
jo
sbb
sub
incl
imul
sub
xchg
fidivs
in
es
mov
inc
dec
pop
lock
dec
xchg
lcall
std
mov
dec
movsb
clc
xor
mov
cmp
xchg
aam
ljmp
pop
xchg
pop
shrl
lds
dec
aas
sub
fbstp
pushl
das
and
loope
push
pop
aam
bound
in
add
mov
in
lcall
aad
pop
ljmp
fcmovnb
std
ret
inc
flds
push
repz
cld
jmp
jbe
cmpl
pop
aas
test
repnz
leave
dec
lahf
sbb
pushl
inc
adc
add
insl
fimuls
pop
pop
mov
fidivl
add
cwtl
lock
mov
pop
mov
xchg
ljmp
icebp
mov
das
xchg
arpl
lock
fldt
xlat
dec
sbb
aad
cmc
test
sbb
cld
jmp
jmp
rol
lahf
ja
fwait
jmp
hlt
cmp
cwtl
ret
jle
scas
xchg
stos
dec
clc
push
mov
shl
test
aad
pop
xor
inc
enter
je
scas
xor
lds
insl
in
ret
xor
ds
or
mov
and
mov
push
sub
je
cld
jns
fucomip
movsl
call
pop
dec
arpl
test
push
push
enter
or
movsb
les
loop
outsb
add
dec
dec
lods
outsl
std
mov
scas
outsl
std
decl
in
jbe
mov
mov
xchg
int3
jmp
lcall
cwtl
xchg
mov
mov
cmp
cltd
push
add
xorl
dec
daa
sar
xchg
test
pop
fildl
arpl
jae
inc
out
pop
or
or
mov
ja
jle
stos
xor
xor
jg
push
or
cli
aas
mov
testl
mov
jmp
inc
icebp
mov
or
xchg
lcall
jno
cmc
clc
cmpb
xchg
inc
dec
push
fldl
hlt
mov
xchg
fisttpll
loop
sbb
jle
popa
dec
insb
mov
mov
add
mov
sbb
ret
ds
inc
mov
sahf
push
mov
xchg
push
hlt
decl
sub
insb
roll
jae
call
ljmp
push
mov
mov
sub
out
push
stos
mov
pop
mov
mov
xchg
pusha
or
push
incl
lcall
cmp
adc
or
xor
rcr
push
sbb
imul
inc
sbb
pop
cli
call
ljmp
pushf
mov
cwtl
aaa
add
insb
xor
outsl
cld
pop
push
fsubrl
inc
dec
mov
xor
je
or
pushf
mov
das
int
adc
roll
jns
jle
inc
nop
fsubp
xchg
loop
cltd
les
pop
faddl
jae
inc
mull
out
inc
repnz
imulb
mov
dec
mov
lea
push
xor
das
insl
adc
das
jp,pt
clc
pushl
adc
movsb
dec
sub
mov
testl
lea
adc
call
dec
inc
inc
insl
in
mov
daa
push
mov
adc
imul
push
and
inc
mov
arpl
sahf
push
fistl
or
hlt
sar
fadds
adc
or
sub
mov
or
mov
daa
pop
jae
or
cmpb
repnz
ss
mov
pop
sub
aam
xchg
sub
mov
mov
hlt
ljmp
mov
or
push
mov
cmp
into
scas
inc
mov
mov
das
clc
decl
mov
mov
cmp
imul
inc
xor
ret
int3
or
subl
and
jb
xor
mov
lods
sub
cmp
int
lods
sarb
clc
incl
mov
mov
fwait
add
call
push
icebp
dec
push
jnp
ret
in
dec
cmpsl
sbb
dec
inc
fldenv
bound
push
mov
stos
popf
lcall
mov
jno
std
aas
lods
leavew
push
inc
mov
outsl
call
call
fwait
sub
cmp
jecxz
lods
jb
xor
sub
jmp
call
mov
pusha
in
or
cltd
lahf
js
imul
addr16
xchg
flds
lea
sub
shll
dec
inc
inc
pusha
pop
mov
jl
cmpsb
add
inc
es
push
decl
mov
in
fisttps
fld
pop
icebp
xchg
inc
daa
popa
fprem1
sub
data16
pop
sbb
incl
lcall
pop
cmp
pop
dec
xchg
insb
testl
stc
push
jno
cmpsl
xchg
and
incl
cmp
arpl
icebp
cmp
call
cwtl
mov
jge
pop
fdivs
push
ret
aad
add
push
adc
testb
rcrb
or
inc
addb
in
jg
mov
lret
andb
outsb
mov
pop
cld
xchg
clc
fisubl
ret
jno
dec
in
push
or
shlb
das
cmc
pop
adc
repnz
nop
ret
mov
jbe
sub
sbb
lcall
pop
mov
daa
xchg
fstl
fmull
adc
je
mov
dec
syscall
jmp
insl
mov
incl
ja
dec
gs
sbb
stos
inc
mov
dec
test
sbb
sub
arpl
jo
pushl
divl
call
cmp
in
sbb
jb
xlat
xor
jno
fildll
xor
movsb
stc
je
cmpsb
pop
sbb
scas
ja
test
aaa
push
nop
push
cmpsl
insb
decb
loope
sbb
mov
stc
test
stos
push
sbb
mov
mov
inc
gs
repnz
jg
fcomps
lahf
cltd
ja
fisttpl
sahf
jp
adc
decl
jbe
lret
pushl
nop
dec
sarb
ret
and
pop
cmp
mov
pusha
xchg
and
pop
stc
fmuls
dec
cmc
sub
mov
add
sub
mov
sub
pop
jle
add
push
fisubl
std
incl
leave
js
les
jb
fnstcw
mov
xchg
xlat
adc
icebp
lcall
hlt
fldl
sar
fstp
lea
xchg
fwait
sub
lcall
cmp
bound
insb
sbb
xchg
adc
jle
les
into
mov
xlat
int3
inc
mov
outsl
or
sbb
sbb
dec
cmp
mov
icebp
jmp
pop
jmp
loopne
leave
scas
xchg
or
cmp
jno
cmpsl
cltd
daa
sub
decl
fxam
in
jns
or
pop
nop
pop
cs
aaa
dec
loopne
mov
cs
jl
loope
movsl
das
outsl
sub
in
iret
xchg
adc
lcall
push
jns
stc
push
scas
clc
and
pop
int
nop
xchg
stc
push
aas
fcoml
pop
imul
push
cmc
lret
or
pop
xchg
int3
hlt
jge
lcall
enter
addr16
mov
dec
mov
fmuls
mov
lret
pop
jne
cld
mov
mov
xchg
and
mov
xor
and
adc
lea
loop
repz
push
loop
int3
add
dec
or
pop
cmpsb
sub
insb
pop
test
pushw
xor
add
inc
fcmovu
dec
call
cmp
pop
cmpsb
inc
dec
ljmp
fadd
lret
jg
lcall
in
lret
je
pop
xor
add
and
cmpsb
call
cmp
cmp
mov
imul
push
stc
add
lahf
mov
mov
sub
add
xlat
iret
or
mov
mov
out
add
imul
jns
and
sarl
mov
pop
or
mov
mov
mov
sbb
pop
mov
xchg
in
mov
pusha
sbbl
aas
cmc
xlat
jmp
xor
adc
outsl
ljmp
decl
lret
gs
cmp
xchg
mov
iret
pop
dec
xchg
pop
stc
xlat
ja
mov
adc
mov
mov
adc
insl
xor
adc
outsb
inc
faddl
outsb
push
test
add
fistpl
popl
std
jmp
insb
lret
icebp
fwait
pop
push
cmc
pop
dec
dec
jg
inc
xor
push
ljmp
sti
outsb
jg
jno
fadds
xchg
in
shl
xlat
in
mov
mov
sub
ljmp
arpl
mov
bound
mov
sub
pushl
dec
repz
je
notb
in
push
push
xor
lcall
cld
testb
xchg
in
movsb
cmc
sbb
test
jo
mov
fbstp
stc
bound
mov
jnp
or
push
pop
call
jmp
or
push
add
inc
dec
cli
dec
push
pop
mov
stos
sub
cmp
and
imul
cmpsb
push
loopne
ljmp
nop
mov
mov
call
lods
adc
pop
adc
testl
inc
mov
cmovle
or
push
push
lock
jg
xor
adc
jl
jg
loope
rcr
add
jg
xchg
mov
inc
ret
loop
shlb
add
call
mov
mov
imul
sarl
pop
mov
out
call
stc
xchg
add
cmp
test
mov
pop
cmp
inc
inc
std
ljmp
xor
mov
xor
gs
mov
lret
stc
mov
mov
dec
out
dec
imul
fs
mov
test
test
mov
push
aas
sarb
jae
mov
mov
pushw
aas
sbb
dec
cmpsl
adc
mov
jo
pop
cmp
hlt
divl
jecxz
pop
movsl
std
call
push
pusha
pushf
sbb
sub
sub
mov
add
nop
cmp
test
fisttpll
lods
dec
jg,pn
dec
push
add
xchg
pop
lea
lcall
jb
dec
call
movsb
mov
cmp
or
aaa
or
out
test
mov
dec
ja
pushf
adc
mov
or
ss
dec
xor
std
ror
and
adc
arpl
inc
dec
rcrl
scas
cmp
pop
cli
ficompl
icebp
pop
push
or
mov
pop
movb
xor
mov
sub
gs
cs
jmp
ljmp
pushf
mov
lret
clc
push
or
xor
push
int
cltd
cmp
jge
incl
in
popf
outsb
push
aad
push
mov
outsl
ret
lods
stc
cli
call
add
or
push
lsl
hlt
call
mov
loope
dec
push
cmpsb
clc
filds
dec
pop
in
sbb
into
push
jne
or
pop
sub
or
ss
pop
or
sub
shr
pop
mov
push
subl
pop
loopne
movsl
rorl
sub
ds
jnp
adc
in
inc
push
decl
sti
mov
jp
dec
rcll
mov
scas
sbb
or
push
inc
repnz
fnstsw
outsb
rorb
jecxz
adc
in
negl
inc
jp
sub
push
xor
dec
push
out
inc
loopne
repnz
into
pushf
fwait
in
lods
mov
call
hlt
clc
cli
inc
andl
mov
pop
ds
xchg
sub
push
mov
adc
popf
xchg
cld
repnz
call
xchg
sub
dec
jmp
or
xor
jmp
addr16
xlat
aaa
jnp
lock
ret
mov
pop
pushf
rorl
push
cmp
adc
pop
sbb
push
jb
sub
add
cli
pop
pop
push
pop
call
icebp
stos
lret
sarl
in
incl
outsb
dec
insl
mov
pop
push
das
aas
mov
jg
addr16
call
and
movups
mov
aad
movsl
bnd
call
mov
popf
cmp
pop
add
pop
fadds
fbstp
lcall
mov
ror
les
xchg
imul
sysret
in
adc
aam
fidivl
jne
adc
cli
pop
jb
pop
jnp
or
pop
jle
repnz
cmpl
sub
mov
xchg
jnp
sub
add
imul
aas
pushl
call
js
adc
inc
mov
dec
xchg
cmp
xlat
shlb
jecxz
pop
jne
call
sub
sti
adc
pop
ss
xchg
mov
push
aam
mov
cmp
pop
pop
mov
call
jmp
jecxz
and
lea
and
cmc
lret
aas
loop,pt
ds
xchg
js
cmpsb
mov
into
ret
dec
push
and
sbb
inc
push
mov
call
inc
jge
xchg
outsl
jb
cld
sar
loop
test
jp
ss
ud1
jg
cmp
addl
scas
push
pop
mov
nop
and
call
xor
call
push
mov
fdivs
push
mov
mov
lods
and
stos
push
and
int
ljmp
arpl
jo
scas
hlt
ret
insl
push
xor
out
xor
cmpsb
mov
xchg
decl
std
lret
pop
push
ja
sbb
sub
jmp
popa
lea
adc
addb
pushf
push
stos
push
mov
flds
xchg
fiaddl
pusha
jg
mov
mov
mov
fmull
sbb
enter
fisttps
mov
xchg
jne
filds
lods
push
lcall
add
push
add
imul
dec
movsl
pop
sub
xor
xchg
js
mov
mov
dec
rorl
or
xchg
adcl
int3
add
dec
or
loop
aam
loopne
mov
inc
push
pop
mov
mov
movsb
pop
and
fwait
pop
mov
ficomps
mov
fcomip
sub
out
repz
ret
mul
test
push
or
sti
push
shl
add
push
lret
lahf
pop
outsb
lret
mov
stc
int3
inc
mov
lcall
pop
std
inc
or
pop
and
ficoms
lcall
mov
lds
mov
sub
pop
sub
xor
and
int3
add
mov
test
loopne
enter
or
in
leave
loop
pop
sbbl
ficoms
call
inc
mov
xchg
stos
mov
inc
lods
xor
and
out
lret
pop
cld
lcall
rcr
mov
subl
or
int3
imul
jg
mov
cli
decl
shll
lcall
jo
stc
movsl
fistps
int3
fmul
hlt
push
fwait
adc
test
or
jle
push
pop
mov
push
mov
pop
push
icebp
mov
je
push
pop
jne
lret
ds
dec
mov
mov
cmp
pop
dec
cmp
xchg
std
shlb
mov
lcall
cld
inc
aam
cld
jmp
int
inc
cmpsl
add
xchg
negl
mov
call
ss
insb
adc
push
mov
xlat
repz
pop
bound
cmp
decl
dec
es
ja
lods
aas
adc
mov
loop
xor
test
dec
mov
inc
aaa
add
jmp
and
mov
adc
ds
xor
icebp
pop
fists
hlt
stc
jecxz
inc
daa
mov
inc
out
test
xlat
sbb
loop
leave
sarb
ljmp
jbe
popf
pop
sbb
shr
cmc
andb
add
push
sub
mov
outsl
dec
xor
lcall
out
sbb
push
adc
push
sarl
dec
gs
test
daa
int
push
clc
fistpll
jae
jbe
enter
lods
mov
push
arpl
dec
movsb
or
mov
shlb
fwait
sub
sar
cmp
leave
pop
xor
stos
sbb
inc
scas
jg
cmpsl
mov
aas
xchg
addb
lcall
jns
xlat
aam
sahf
inc
arpl
sbb
sahf
push
sbb
mov
xchg
mov
mov
mov
stc
lea
adc
mov
xor
dec
testb
inc
dec
xor
pushf
cmpsb
sarl
cmp
jns
adc
out
sbb
xor
iret
xor
fwait
jbe
fisubrl
aam
xor
cmp
movsl
jbe
fnstcw
and
call
xor
movl
pop
sbb
in
xchg
enter
call
das
lock
inc
xchg
adc
mov
shll
popa
cli
sbb
mov
jmp
ret
in
jno
mov
pop
sbb
fnstenv
lret
pop
ljmp
insl
mov
push
and
ja
mov
test
ljmp
ret
daa
dec
sbbl
daa
inc
cmp
imul
shll
sub
pop
mov
inc
loopne
mov
jle
inc
stos
in
ffree
add
sbb
cltd
xchg
addb
sbb
jmp
and
and
aaa
dec
lret
add
movsl
add
mov
jbe
sub
rol
f2xm1
pop
cs
nop
mov
icebp
rcl
push
xchg
fiadds
jecxz
jb
lret
and
lcall
mov
cld
add
xchg
les
lods
xchg
sub
sbb
pop
push
lock
xchg
pop
mov
test
outsl
pop
xchg
mov
pushl
ss
push
pop
inc
jl
sbb
ret
sub
jp
addl
xchg
mov
inc
sub
leave
gs
add
fistpll
das
push
repnz
jg
pop
pop
out
mov
cmp
push
sar
dec
inc
dec
pop
pop
xchg
push
push
xchg
adc
mov
incl
pushf
mov
mov
xchg
in
mov
push
xchg
jmp
pusha
pop
call
or
and
xor
pop
cmp
push
out
insl
test
clc
decl
pop
push
jno
leave
rorl
bound
cld
mov
lcall
sbb
dec
xchg
call
inc
out
loopne
es
in
inc
xchg
scas
and
decl
std
jmp
pop
adc
and
ljmp
jle
pop
and
bound
cmp
decl
stos
or
les
popa
xor
and
pop
cmp
popf
dec
push
mov
sub
std
inc
push
stos
out
inc
mov
fs
rcll
inc
call
test
rorl
cli
mov
scas
or
xchg
fimuls
ljmp
aaa
add
cs
hlt
sti
cmp
adc
mov
pop
and
loopne
js
and
dec
jg
mov
inc
jbe
jmp
dec
leave
es
movsl
lods
xchg
lea
call
scas
loope
add
or
cmp
sarb
push
iret
dec
mov
jecxz
ss
fildll
mov
lcall
aad
addr16
pop
dec
cmp
jmp
mov
fadds
adc
pop
xchg
inc
jno
sti
dec
dec
ds
outsb
add
cmp
lret
push
int3
aaa
test
adc
mov
cmp
mov
pop
cmp
lea
dec
sub
test
fmuls
into
jmp
mov
aad
popf
push
in
adc
cltd
fisubrs
scas
mov
ljmp
push
stos
sbb
icebp
mov
decl
mov
cmp
into
sti
inc
mov
jge
mov
cmpsl
popf
insl
mov
sbb
ljmp
adc
pop
cmp
jmp
mov
mov
pop
aaa
mov
sarb
cmp
or
jmp
and
rorl
in
add
repnz
xor
cmp
in
pop
cmp
call
and
jmp
cmp
xchg
clc
test
jge
jo
sbb
fdivs
incl
jae
sub
shrl
jg
or
push
lahf
sub
in
lods
testb
push
add
xlat
les
xchg
xor
js
sub
incl
push
mov
ret
push
repnz
cwtl
mov
lcall
decl
cltd
es
cmpsl
cmp
outsl
repnz
lcall
pop
mov
sti
pop
cmpl
xor
mov
cmp
dec
std
push
repz
pop
roll
daa
mov
sahf
pop
push
lcall
rolb
mov
mov
std
fnstcw
dec
or
sbb
nop
xchg
xchg
or
lds
les
push
out
ror
cmp
decl
aad
icebp
and
xchg
cwtl
fsubs
mov
push
sub
dec
and
add
inc
mov
loopne
cli
decl
mov
int3
fldenv
in
mov
repz
push
movsl
sbb
pop
fimull
ret
mov
jb
xor
mov
xchg
data16
add
mov
xchg
pop
pop
int3
bound
xlat
pop
cmp
xchg
fwait
cmp
ret
push
ds
cltd
push
out
sub
lods
xor
mov
jle
dec
notl
ljmp
aad
mov
mov
call
sti
outsl
xchg
lock
in
pusha
inc
cmp
rcrl
sti
leave
sub
sub
dec
xor
mov
mov
cs
ljmp
sub
popa
adc
std
jg
stc
aad
es
ret
insl
fsubrl
inc
mov
xorb
xchg
test
std
decl
jle
cmpsl
sbb
jne
or
dec
outsl
sub
push
push
jmp
inc
ret
adc
aad
push
jae
daa
mov
addb
inc
xchg
and
js
or
add
inc
or
xor
pop
lea
idivl
loop
rol
dec
mov
pop
dec
xor
cmpl
lds
icebp
jmp
mov
lods
jp
xchg
ret
or
xchg
pusha
mov
mov
fistpll
insb
inc
jmp
and
push
add
add
dec
mov
mov
ljmp
mov
cmp
xchg
push
xlat
ljmp
scas
jle
daa
es
rorl
dec
mov
xor
aas
adc
lcallw
jmp
adc
ret
mov
lods
push
lods
xchg
int
mov
aaa
jmp
adc
sbb
push
sbb
test
stos
sti
add
or
mov
jecxz
call
fsub
pop
ja
int
xchg
sbb
mov
iret
outsl
add
sbb
push
mov
add
jmp
sbb
and
ret
xchg
lret
adc
xchg
dec
push
negb
sbb
fbld
clc
add
ljmp
adc
out
mov
sub
sti
xlat
xchg
mov
mov
roll
mov
mov
push
mov
pop
mov
enter
push
into
mul
jns
xor
cmp
add
inc
decl
imul
push
sub
divb
cmp
jg
sbb
data16
inc
cli
xor
aad
test
or
dec
sub
sbb
mov
dec
adc
test
insb
mov
xor
push
add
decl
push
ja
inc
jne
sbb
test
lods
adc
dec
mov
adc
push
decl
add
fwait
mov
pop
in
add
add
cmc
cmp
dec
inc
mov
push
fdivrs
mov
cmp
mov
mov
ljmp
xchg
mov
jge
gs
push
in
popf
js
and
mov
dec
jge
xchg
dec
popa
pop
fsubrp
out
push
inc
mov
lock
lods
vmwrite
mov
mov
ficompl
sub
test
add
bound
inc
ljmp
pop
adc
cmc
mov
jmp
cmp
mov
and
pusha
decl
sub
ss
and
notb
call
lods
pop
int
std
dec
jbe
ljmp
icebp
pushl
pushf
jne
mov
jge
das
jge
sub
in
mov
adc
mov
ljmp
or
mov
test
ljmp
das
icebp
or
adc
xchg
sahf
xlat
gs
fisubrl
andb
add
lock
jbe
clc
scas
mov
xchg
gs
pop
ljmp
or
mov
fnstcw
push
test
jmp
outsb
mov
xor
push
lcall
das
addr16
cld
or
mov
shlb
loope
or
sub
ljmp
xchg
aam
xchg
mov
das
mov
aad
xchg
jns
or
mov
enter
scas
orl
or
sub
ss
dec
fs
lcall
into
aad
sbb
arpl
rcr
dec
loope
imul
mov
sbb
xor
jg
call
jb
or
xor
mov
fwait
sub
movsb
mov
hlt
xchg
cwtl
mov
jae
sub
mov
jg
cmp
sahf
sti
inc
or
dec
into
xchg
xchg
repnz
lcall
out
xchg
orb
jp
push
scas
aaa
cmp
outsb
push
idiv
in
jg
incl
mov
je
les
adc
enter
sbb
ljmp
decb
insl
push
es
inc
lds
and
out
gs
cmp
fucomip
or
mov
xchg
mov
pop
scas
sub
lret
clc
out
out
push
add
cmp
sarl
std
maxps
pop
test
es
add
mov
mov
out
sbb
incl
imul
xorl
cmc
divb
push
adc
xchg
sbbl
je
cmovs
loop
in
daa
cs
je
inc
and
xlat
fbld
push
loopne
lret
ja
ljmp
xchg
cmpsl
clc
mov
pop
cmp
dec
xchg
test
pusha
mov
pushl
lock
popf
jae
fisubrl
loop
or
jbe
cmpsb
mov
icebp
sbb
loopne
cmp
cmp
ficompl
add
push
jo
mov
or
or
dec
lds
jl
jnp
psubsw
fsts
repz
lret
push
mov
jg
aas
incl
xchg
push
les
loopne
jnp
pop
ljmp
fcoms
daa
lock
jne
les
loopne
aas
pushl
lock
fwait
mov
lahf
sbbl
mov
movsb
push
je
mov
jmp
add
mov
mov
pop
push
in
pop
sti
push
stos
cld
dec
push
cli
je
stc
sti
sbbl
clc
jbe
fsubp
cmp
and
pop
pop
insb
fcomps
inc
inc
push
jg
ljmp
imulb
or
out
xor
mov
cmp
dec
cld
pop
test
pop
popa
gs
and
cmp
aad
int3
in
out
fcompp
mov
fs
inc
mov
add
mov
sub
mov
dec
scas
or
mov
pop
add
adc
push
add
mov
mov
push
sbb
mov
adc
adc
rolb
iret
rolb
or
das
adc
xor
and
xchg
test
dec
dec
dec
dec
adc
adc
dec
adc
call
aam
movsb
inc
push
mov
xor
aaa
cmc
inc
pop
inc
rorb
js
lods
in
and
into
les
mov
pop
daa
xchg
or
mov
mov
mov
push
cld
iret
adc
fucomip
pushl
aam
or
push
cmc
popf
test
out
test
dec
stc
push
dec
pop
cmp
push
mov
xchg
fistpll
mov
cmp
push
add
lods
imul
pop
sti
lock
call
or
mov
pop
aaa
mov
pop
scas
jno
or
and
cld
or
sti
insb
inc
lods
inc
pop
imul
add
sbb
cmpsl
loope
xchg
inc
sub
loopne
das
jp
adc
aad
push
xchg
cli
ljmp
xchg
je
loop
mov
out
pop
mov
mov
sbb
in
aaa
pop
xorl
xchg
mov
call
clc
adc
inc
bswap
data16
or
or
pusha
mulb
jge
movsl
scas
and
cli
push
es
push
es
and
movsbw
call
out
or
push
mov
mov
push
pushf
lahf
or
stc
pop
addr16
insb
sti
in
daa
pushf
pop
sar
not
mov
mov
jp
mov
sub
jne
in
std
sbb
push
push
jmp
and
call
adc
cld
mov
push
lds
call
add
mov
pushf
movups
and
insl
push
inc
in
stc
cmp
jmp
sub
ljmp
fsubrl
mov
mov
jmp
mov
lea
insl
fistl
out
rorl
pusha
jbe
fldenv
xlat
sbb
and
out
pop
jmp
call
inc
mov
add
call
mov
popa
pusha
sub
xor
cltd
cmpsb
stos
mov
fldl
push
push
mov
sub
jl
jmp
jl
inc
or
add
mov
insl
mov
mov
lahf
call
sub
test
fisttpl
lcall
fdivs
ror
stos
leave
xor
mov
lds
and
sub
pusha
aad
stc
in
xor
out
cmp
push
pusha
add
cmp
test
pop
push
push
push
call
into
add
movsl
fld
test
setae
sub
pop
clc
xchg
icebp
push
adc
cmp
aam
xlat
and
adc
add
out
pop
xchg
maskmovq
testl
jge
call
sbb
xor
push
push
pushf
inc
mov
pushf
stc
pop
out
ja
adc
pusha
push
push
lods
mov
jp
jmp
nop
into
mov
xchg
test
call
push
fdiv
dec
call
stc
stc
lods
call
inc
mov
jmp
sub
jmp
rdtsc
aad
push
xlat
cmc
insb
jo
or
push
adc
pop
sub
or
dec
sbb
jo
negl
push
movb
jle
sbbl
es
xor
push
pusha
rcrl
or
imul
xor
lods
mov
jp
call
in
xchg
movsl
dec
mov
cmp
in
jmp
out
popa
sub
call
push
sbb
ficoml
call
inc
outsl
xchg
adc
jp
mov
mov
sub
daa
das
cmp
pusha
sub
icebp
inc
and
ret
or
rcrl
adc
push
out
sub
inc
shll
jge
or
inc
jmp
call
adc
sbb
inc
inc
es
add
fildl
outsb
mov
pop
mov
cmpsl
bound
sub
inc
pushf
mov
in
cmp
mov
cmp
inc
xor
imulb
cld
push
fnstenv
push
call
dec
shll
aam
xchg
add
pop
mov
jmp
in
ret
out
ret
sarl
mov
fbld
or
and
sbb
cli
sbb
and
pop
mov
mov
arpl
call
sti
sbb
inc
call
cmp
movsl
push
sub
cli
dec
in
and
xor
push
dec
push
mov
fwait
stc
decl
mov
inc
push
aaa
addr16
and
test
xor
push
sbb
cmp
push
cwtl
sbb
pusha
fldl
out
idivb
sbb
xor
dec
inc
cmc
mov
pop
inc
xchg
lods
add
jmp
mov
push
sub
pop
xor
jo
std
fsubs
fsts
mov
jns
push
in
xor
or
lods
out
popf
rorl
mov
movsl
fwait
dec
lea
jp
or
testl
jp
rorb
out
add
mov
ja
clc
adc
add
into
sbb
out
aaa
push
inc
adc
pusha
jp
xchg
xchg
pop
jns
dec
ret
stos
xchg
outsb
xorb
mov
adc
rcl
sbb
add
jp
call
mov
dec
cmp
dec
lret
mov
fwait
cmpsb
mov
call
xchg
xor
and
call
mov
dec
call
std
nop
inc
repz
cmpl
leave
jmp
sbb
rcl
insl
mov
and
cmp
xor
mov
inc
push
adc
ja
jmp
mov
or
or
mov
jmp
mov
stc
aas
ret
jge
cld
sub
stc
or
adc
jmp
jmp
xor
jb
or
sbb
leave
sub
fsubs
sub
or
pushl
icebp
push
lea
cwtl
call
int3
add
cmp
or
jmp
cld
pop
jae
lods
or
mov
push
pop
and
outsb
arpl
or
jmp
sub
sub
pop
pop
and
and
inc
cwtl
insl
or
push
mov
inc
nop
data16
jo
loopne
ljmp
sbb
call
icebp
cmp
mov
and
mov
aad
pop
movsl
clc
dec
pusha
mov
cmp
jne
sub
mov
push
lret
add
daa
mov
sarb
xchg
into
out
cli
inc
mov
add
xor
push
cmpsb
sbb
jl
xchg
jo
fsubl
push
nop
out
fisttps
sbb
xchg
das
cs
hlt
jge
sti
and
and
loope
dec
or
icebp
pushf
stos
lahf
jmp
leave
jo
pop
pop
xor
jge
jns
adc
aad
shlb
nop
xor
sbb
xchg
movsl
fs
sbb
pop
repnz
cmc
addr16
pop
sub
fnstenv
ret
cmpsl
mov
jl
cmp
repz
and
or
sbb
loop
call
and
jmp
insl
int3
popf
outsb
push
xchg
xor
xchg
or
mov
adc
pop
adc
cmp
mov
adc
pop
out
orl
jbe
fucomi
jae
pop
mov
ss
test
lods
inc
add
mov
imul
mov
jmp
sar
loop
stos
xor
inc
dec
mov
sbb
mov
pop
mov
dec
xor
mov
loopne
cmp
jmp
test
adc
ficoml
cld
pop
mov
jno
decb
pop
repz
in
cmc
dec
popf
call
jmp
xchg
or
ret
xor
dec
cmp
cmpl
lcall
pop
das
cmpsb
inc
jbe
adc
rcll
pop
cli
sub
pushf
sahf
push
jmp
lret
push
ss
xor
xor
sahf
push
ljmp
mov
cmc
cmp
neg
lock
std
std
mov
push
push
pushl
dec
stos
js
cmp
mov
add
pop
ss
pop
das
or
jge
leave
in
enter
hlt
aam
lcall
add
ljmp
inc
test
sbb
stos
add
lahf
jae
xchg
push
aas
sti
pushl
in
push
test
js
xchg
jb
enter
fldl
xchg
incl
ret
jnp
sbb
cmp
add
xchg
jmp
jo
jo
mov
test
dec
mov
cld
ljmp
in
fldt
pop
test
lea
add
ret
inc
in
fbld
cmpsl
adc
data16
mov
mov
cwtl
rclb
aam
fldt
jg
inc
xchg
outsl
cmp
dec
popa
or
outsl
jge
popa
adc
lock
aas
das
xchg
jne
mov
jge
cmp
popa
clc
dec
dec
push
fistpll
into
insl
out
cs
test
int
mov
cmp
outsl
push
inc
inc
out
fildl
lods
add
fnstenv
dec
lcall
sar
call
insb
push
mov
ret
je
aad
ror
in
das
arpl
or
pop
cmc
xlat
xor
fisttps
jns
in
sbb
lcall
xlat
and
aam
pop
dec
in
shrl
adc
test
push
dec
sahf
and
mov
ret
std
cmpl
adc
mov
enter
inc
dec
clc
pushl
jbe
xlat
inc
insl
test
fnstenv
popa
sarb
outsb
enter
pop
add
and
mov
pop
out
dec
nop
mov
jp
in
mov
pop
and
aam
pop
enter
es
call
pop
sbb
or
ljmp
imulb
adc
sbb
inc
f2xm1
insl
lcall
stc
or
push
xchg
fs
nop
jae
sarb
outsb
rol
pop
xchg
and
aaa
pop
aas
fildl
pushl
jne
dec
dec
outsl
and
aam
push
lds
shll
mov
pop
xchg
lods
push
outsb
incb
loopne
fs
jbe
push
insl
movsw
stc
call
sub
enter
sbb
cmpsl
insl
int3
pop
rolb
outsl
fistps
xchg
fildl
inc
fsubrs
iret
lods
es
add
dec
cmpsb
outsb
mov
ljmp
orb
in
insl
and
int3
lock
hlt
aam
push
rorl
and
ljmp
mov
leave
popf
cltd
mov
inc
mov
and
sbb
insb
ret
ret
ret
insl
cld
adc
inc
lods
lock
ret
repz
jge
gs
fadds
push
les
inc
mov
sub
sub
jb
add
dec
stos
sbb
loopne
jmp
inc
push
mov
insb
cmovnp
fsub
xchg
add
cmp
jmp
add
test
inc
fsubrp
lods
push
xor
sub
test
xchg
xchg
std
jg
sarl
stos
mov
ja
push
jb
dec
scas
inc
outsb
in
fnstenv
popfw
int
pushl
pop
aad
ret
inc
inc
nop
pop
jno
test
mov
cld
xchg
adcb
call
mov
pusha
mov
scas
jo
cmp
fidivl
incl
ss
fisubrl
ljmp
in
mov
mov
inc
arpl
icebp
sub
mov
clc
nop
cmpsl
inc
sbb
sahf
push
repz
jecxz
out
cs
incl
into
shrl
or
jne
nop
dec
in
inc
sub
pop
sub
jmp
ficoms
pop
call
mov
ret
test
xorb
int
das
sub
push
movsl
imul
addr16
outsl
or
jge
test
iret
mov
aaa
push
leave
fbld
adc
mov
cs
jno
fiadds
hlt
push
ret
movsl
mov
aam
std
sub
jl
mov
adc
cld
ljmp
xchg
bound
dec
mov
ret
dec
int
addr16
hlt
mov
ja
add
mov
rcl
in
adc
leave
pop
in
out
pop
cmp
inc
std
lcall
adcb
mov
mov
decb
data16
clc
lods
xchg
jnp
aaa
aam
mov
dec
ret
jle
xor
icebp
lahf
mov
push
or
pop
jp
push
push
out
sbb
sbb
in
cwtl
addl
out
fisubs
test
dec
pop
rcrl
or
push
and
mov
loope
push
in
jne
insl
jmp
jns
fcompl
fimull
inc
clc
xchg
pop
jmp
mov
jl
test
je
add
fcoms
push
add
sbb
gs
xchg
fistps
pop
cmp
push
and
test
ret
mov
ja
das
cmc
push
das
and
popa
insb
or
scas
jg
xchg
mov
ud0
dec
pushl
notb
push
lret
cltd
pop
or
mov
mov
or
mov
fistpll
pop
jl
inc
mov
cmp
lret
call
decb
pop
xor
inc
out
jmp
orl
xchg
fwait
pop
sub
in
jmp
out
scas
leave
mov
jno
test
add
push
rcl
out
orb
dec
lock
es
xchg
into
loop
jmp
xchg
lahf
sub
and
inc
mov
dec
pop
xchg
nop
and
mov
add
add
mov
mov
popf
inc
dec
fildl
push
push
int
lcall
frndint
aaa
sub
sbb
jge
jecxz
std
inc
cwtl
sar
stc
pushl
jle
in
in
add
cs
loopne
das
inc
aad
xchg
or
daa
adc
add
add
pop
sbb
or
icebp
ja
push
sub
mov
mov
mov
lock
pop
clc
incl
rcll
pop
test
pushf
xchg
or
sub
adc
rcr
and
aaa
pop
mov
adc
pop
sbb
adc
mov
outsb
jle
cltd
ds
popf
int3
dec
inc
aad
js
inc
subb
fiadds
loope
call
stc
out
std
test
in
test
adc
inc
jbe
cmp
sub
xchg
out
imul
call
arpl
mov
aaa
stos
rolb
mov
xchg
ficoms
xchg
inc
or
mov
pop
dec
js
push
call
adc
fisttpl
adc
xchg
mull
xlat
es
subb
push
arpl
adc
call
jecxz
sbb
in
jae
or
push
dec
adc
push
ret
ret
in
xchg
cmp
push
rclb
jns
add
mov
sbb
in
or
push
loope
jle
ss
push
sbb
or
test
add
and
fwait
dec
call
cld
fistpll
sub
insl
stos
xchg
nop
push
jb
mov
sbb
ljmp
repnz
cmpsb
xchg
in
dec
cmp
movb
insl
jg
outsl
lock
pop
fiadds
loop
std
pop
mov
sahf
in
incl
push
cmp
movsb
mov
out
scas
push
pop
and
ffreep
mov
inc
inc
dec
out
stc
pop
xor
das
mov
mov
clc
fcomp
lea
xlat
dec
enter
fnstsw
jg
testl
es
imul
fsubrp
incl
inc
dec
std
mull
push
arpl
leave
sbb
pop
adc
loopne
and
lcall
pop
jbe
add
inc
xchg
das
mov
mov
mov
sbb
incl
add
xchg
cmpsb
sbb
mov
adc
mov
loope
call
jecxz
insb
or
jno
xchg
mov
call
jg
hlt
xchg
shrl
jns
pop
or
fsts
aaa
insb
cld
lret
outsl
mov
xlat
adc
inc
lods
outsb
pop
in
cmp
gs
into
jg
pop
incb
aad
inc
jne
frstor
xor
scas
repnz
jmp
push
dec
add
push
stos
int
push
xor
mov
loope
decb
subb
adc
mov
jbe
pop
and
lock
test
lock
dec
mov
mov
aaa
ret
cmp
out
and
lock
das
sub
lahf
adc
pushf
movsb
sub
mov
dec
popf
xchg
insl
lds
jmp
out
jg
cli
out
fildl
mov
pop
cmc
cmpl
cmp
decl
push
ret
add
xor
fwait
sarb
jb
jg
push
into
test
scas
in
mov
lea
mov
push
pop
scas
jo
subb
jns
xchg
lcall
addl
enter
mov
pop
xor
fwait
fwait
call
sub
mov
out
sti
xor
ja
dec
test
imul
jg
push
push
movsl
and
jp
mov
xchg
dec
stc
xchg
mov
filds
stos
mov
out
mov
adc
or
sbbb
xor
dec
mov
decl
repnz
call
mov
or
dec
rol
cli
enter
loope
mov
testl
pushl
ja
sub
fldz
sub
pop
int3
xchg
adc
dec
or
xor
icebp
ret
adc
sbb
cmpsl
insb
push
clc
das
loopne
mov
ljmp
aas
adc
inc
mov
mov
sub
jp
movsl
in
or
fdivs
sub
lahf
ss
jmp
adc
cmp
popw
push
and
or
shr
xor
push
push
popf
mov
xchg
xchg
imul
inc
push
adc
push
and
sub
loope
repz
enter
push
or
movsl
fwait
cltd
enter
add
mov
jg
rorb
pop
sbb
adc
lock
cmpsb
inc
sahf
in
test
mov
pop
iret
jne
adc
aaa
aaa
fimuls
stc
out
mov
pop
fdivrp
call
cmpb
test
mov
push
out
insb
sub
xchg
pop
dec
in
mov
int
repnz
mov
lods
fwait
add
bnd
inc
pop
jno
call
sub
mov
fsubr
jg
aaa
mov
adc
jnp
in
xchg
dec
add
dec
mov
ljmp
fs
jmp
jp
pop
inc
pop
mov
scas
xchg
push
pushl
mov
add
fdivs
lds
pushl
dec
xchg
mov
or
xchg
in
cmp
incl
mov
mov
insb
or
stos
jae
mov
mov
mov
roll
hlt
imul
jns
jge
sahf
xchg
push
or
fidivrl
mov
sbb
mov
clc
inc
cmpsb
cmp
cmp
int3
aad
sbb
imul
or
fadds
jg
lcall
xchg
add
in
xor
out
jg
cmp
mov
inc
inc
adc
pushw
ficoms
xchg
mov
lret
xchg
dec
jecxz
pop
xor
mov
cmp
stc
inc
adc
xchg
cwtl
xchg
mov
sub
inc
mov
push
test
adc
pop
lds
hlt
push
cwtl
int3
mov
popa
pop
das
icebp
inc
dec
cmp
and
lret
adc
jns
pop
loop
inc
aam
jmp
js
and
xchg
fcom
imul
scas
lahf
xor
sub
addb
call
adcl
jge
aaa
insb
or
enter
imul
sub
jl
pushf
pop
int
leave
push
nop
cmp
fnstsw
lahf
mov
nop
mov
iret
mov
das
stos
inc
fsts
adc
dec
lods
sub
xor
js
inc
push
push
imul
adc
stc
loopne
icebp
inc
mov
test
jecxz
xor
incb
inc
adc
scas
xor
dec
insl
orb
cmpsb
adc
lret
rolb
pop
push
xor
inc
dec
sub
xor
ret
cmc
push
xchg
cmp
jg
dec
sbb
out
mov
cmp
out
and
pop
lret
and
cld
mov
cmpsl
adc
cmovp
pushl
ljmp
sub
push
arpl
adc
xchg
add
sbb
movsl
ficomps
jle
xor
pushw
jmp
out
jae
ret
inc
js
mov
and
cld
and
or
jge
loopne
dec
jge
rcll
jns
adc
mov
movsb
jo
jge
mov
icebp
jmp
sub
mov
in
dec
ret
addr16
sub
cltd
cwtl
test
fldt
fnstcw
outsl
pusha
int3
pop
pop
out
adc
dec
mov
fisubs
mov
dec
pop
gs
sbb
or
int
loopne
sti
push
mov
gs
jmp
enter
mov
xor
or
sub
loop
inc
and
cmpsb
fisttpll
xchg
enter
dec
pop
scas
mov
jmp
inc
sub
mov
lock
dec
pop
pop
xchg
inc
lods
jbe
xchg
stos
lret
lahf
mov
repz
and
pop
ret
add
fildl
and
dec
frstor
or
sar
pusha
stc
das
sub
push
arpl
pop
fsub
clc
orl
mov
nop
push
sub
add
cld
cmp
add
outsl
jae
sub
ss
dec
jbe
add
popa
inc
jb
push
inc
add
jb
add
add
out
mov
outsl
jne
arpl
push
jb
pop
inc
imul
imul
push
imul
xor
adc
dec
push
push
gs
push
push
lods
xor
sbb
add
dec
xorl
push
imul
mov
fwait
push
imul
das
inc
jle
insl
popa
jo
imul
fnstenv
popa
enter
test
mov
dec
xor
addr16
dec
and
inc
mov
jo
sbb
mov
insb
sub
inc
je
int
lods
adc
testb
jae
outsl
jo
orl
mov
push
popa
insl
gs
inc
outsb
jbe
adc
mov
aad
fstl
imul
mov
imul
dec
push
je
ret
je
jo
mov
testb
outsl
adc
jb
push
push
add
jbe
push
jnp
insl
dec
mov
add
push
and
fldenv
mov
test
inc
and
add
or
push
loopne
mov
insb
pop
sub
insl
mov
insl
popa
xchg
insl
insl
insb
cmpb
arpl
pop
popfw
test
inc
or
pop
in
sbb
or
pop
ja
lods
jae
in
mov
aas
aas
xor
inc
pop
push
add
mov
xor
fs
outsb
gs
rolb
dec
out
or
pop
pusha
lods
or
adc
xor
cmp
mov
jb
imul
imul
pop
mov
jb
pop
loope
ret
adc
fs
jo
pop
push
outsl
add
insl
gs
or
sub
pop
je
and
outsb
cmpsl
sbb
adc
jae
lret
cmpsb
stos
xchg
outsb
lea
jb
fldenv
mov
sbb
inc
lods
xor
pop
add
das
lds
pop
push
mov
add
sub
mov
adc
pop
push
jno
adc
xor
add
or
je
add
test
adcb
pushf
rolb
and
cmpsl
cmp
jne
xorl
and
mov
pusha
je
frstor
enter
add
shll
popa
or
mov
orb
dec
sub
mov
jmp
or
or
pop
popa
mov
sbb
adc
and
ret
pop
into
add
inc
add
mov
add
add
add
and
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
