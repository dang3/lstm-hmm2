aad
add
add
add
add
sub
inc
icebp
fwait
sub
mov
mov
lea
rcrb
and
and
sub
iret
lds
push
sub
push
xorl
cld
clc
cmp
lret
hlt
ss
and
push
aad
push
push
dec
dec
rorb
out
mov
or
adc
cltd
lcall
pop
cmp
push
pop
out
js
add
fwait
push
xchg
addr16
arpl
and
leavew
add
sbb
lods
fisttpl
jno
mov
mov
mov
in
repnz
inc
push
mov
data16
mov
mov
mov
test
xor
and
inc
rcll
test
or
fnstenv
rcrb
fdivrl
jnp
and
push
test
cmp
mov
call
mov
pop
fmul
inc
incb
jno
push
xor
sub
movsb
fimull
call
xor
mov
imul
mov
rol
subb
mov
insl
and
pop
dec
int
cs
loop
pop
xor
cli
pop
or
mov
cs
mov
push
inc
adc
adc
sub
pop
inc
imul
xor
xchg
inc
stc
out
jle
popa
and
aas
and
or
not
jl
inc
cmp
orb
and
mov
and
mov
jae
push
jl
pop
cmpl
hlt
std
sbb
call
test
movsl
aaa
mov
push
xor
insl
mov
jp
mov
push
into
shll
sub
mov
dec
loope
int
call
in
jb
pop
push
repz
mov
mov
es
imul
add
lahf
enter
stc
sub
adcl
cmp
cmpsb
je
push
jmp
jp
nop
adc
mov
into
hlt
inc
ret
out
int3
fs
scas
jle
xlat
push
xor
xor
sbb
orb
pop
adc
in
add
mov
repz
add
lahf
outsb
adc
sub
inc
mov
ss
and
jle
pop
xchg
fs
xor
std
popf
lock
mov
xchg
inc
in
mov
les
jp
ja
aad
lods
out
imul
addl
hlt
jmp
mov
adc
or
mov
or
push
add
arpl
out
jecxz
xor
push
daa
shlb
adc
jle
jecxz
inc
cltd
mov
cmp
int
pop
movsb
mov
cmp
pop
xchg
add
or
repz
sub
push
and
xchg
sbb
adc
test
fwait
mov
outsl
push
and
and
je
ja
loope
sahf
xchg
jge
mov
call
aam
cmp
push
and
out
pop
pop
int
sbb
lock
aam
icebp
mov
ret
in
cltd
inc
bound
adc
jb
push
xor
adc
mov
dec
ss
imul
inc
xchg
mov
rcll
pop
notb
sti
pop
ficoml
cli
repz
pop
popf
out
cmp
mov
popa
int3
sub
dec
dec
pop
sub
call
jns
pusha
hlt
mov
sub
fbstp
inc
repz
jle
sub
pop
ds
lret
pop
or
inc
out
jnp
add
lcall
sbb
cli
mov
push
or
mov
in
stos
sub
cmp
sahf
insb
int3
sbb
lock
test
push
adc
pop
push
adc
pop
in
jo
je
imul
movb
lods
add
pop
mov
mov
xchg
pop
daa
in
push
jle
andb
or
out
and
ljmp
hlt
jg
mov
dec
xlat
cmp
mov
xchg
out
adc
mov
dec
pop
xor
int
inc
push
xlat
aaa
fstpt
pop
xor
pop
aas
mov
add
mov
cmp
push
or
or
sub
dec
pop
test
push
lods
fldt
add
cmpl
mov
mov
mov
and
xor
mov
testb
popa
sti
xor
scas
dec
fldpi
pop
aaa
inc
test
xchg
ret
inc
push
inc
dec
jno
popf
adcl
cmp
and
aaa
lcall
cmp
sbb
adc
cwtl
or
sub
xor
mov
lods
mov
jmp
int3
mov
loopne
jl
add
lcall
das
push
mov
adc
clc
and
xchg
cwtd
mov
ds
cld
adc
and
push
xchg
test
cltd
xor
pop
insb
or
xor
pop
mov
popf
insl
add
and
das
adc
ret
fldl2e
push
xor
sbb
jbe
clc
xrelease
frstor
mov
cmp
int
xchg
dec
ljmp
dec
add
add
pop
sbb
inc
dec
mov
pop
add
adc
mov
xchg
or
add
nop
mov
daa
movsb
cmpl
pop
inc
xor
mov
cmpsb
cltd
test
rorb
mov
fldenv
xor
cmp
loope
inc
add
test
shrd
test
mov
cmp
mov
pop
mov
repz
out
sbb
cmpsl
in
or
mov
outsb
ja
iret
stos
loope
test
ret
mov
push
jo
fists
fsub
outsl
xor
loop
test
push
mov
push
add
mov
fiadds
jecxz
push
jb
inc
and
ret
mov
lods
push
mov
clc
hlt
test
aaa
int3
mull
pop
mov
xchg
fsubl
sbb
xor
mov
adc
push
leave
repnz
or
pop
mov
adc
xchg
movsl
pop
xchg
mov
pop
mov
cmp
sbb
mov
loopne
pop
and
jo
leave
mov
and
imul
lock
jns
xor
pushf
and
push
stc
xor
or
les
stos
mov
clc
add
pop
jl
dec
arpl
sbb
les
out
js
in
inc
xchg
jnp
sub
sub
loopne
pop
aaa
daa
enter
sub
and
mov
xchg
cmp
pop
and
lea
sub
cmp
in
jo
jl
or
repnz
inc
jl
imul
push
sub
mov
xchg
push
mov
push
mov
push
into
loop
mov
mov
test
pop
mov
jp
aaa
ljmp
mov
cs
jbe
out
pop
add
imul
jno
aad
pop
inc
xor
inc
lock
or
repnz
bound
mov
xchg
shr
in
in
adc
roll
push
mov
dec
inc
mov
out
fldenv
cmp
and
ss
cmp
sub
jge
out
push
or
xchg
loope
je
and
outsl
add
jnp
jmp
shlb
mov
mov
pop
cs
sarb
in
clc
in
jmp
inc
xchg
and
add
int
test
inc
cmp
jl
cltd
xchg
push
mov
inc
iret
lret
sti
ficomps
out
cltd
cmpsb
nop
imulb
stos
mov
int
add
fsts
mov
rorl
sub
or
out
fisttps
or
clc
fisttpll
adc
sub
shrl
jbe
jge
les
adc
daa
pop
push
mov
push
dec
lods
and
sub
in
insb
ror
test
mov
add
xor
shrl
sbb
mov
jmp
mov
ljmp
dec
cmp
mov
xor
push
adc
jge
push
shlb
jno
jnp
ficompl
loope
popw
or
jg
xor
aam
in
test
in
inc
add
dec
adc
mov
pop
sbb
jnp
stos
lret
loopne
cmp
pop
sbb
in
mov
lret
jle
idivb
fadd
movsl
and
xchg
stos
sbbb
in
pop
fisttpll
and
push
push
cwtl
sub
je
mov
lahf
test
test
xchg
lret
out
jbe
ror
xor
cli
repz
cld
aas
call
lods
inc
push
pop
mov
sub
sub
sbb
adc
ja
loope
fldt
dec
test
xchg
add
loopne
test
sbb
sbb
les
inc
test
and
rcrl
cs
jle
adc
cmpl
clc
mov
shlb
and
cmpsl
inc
adc
push
or
test
mov
stos
mov
cmpsl
cmp
imul
mov
rolb
popa
repz
xlat
cmpsb
inc
inc
and
dec
sub
mov
popl
in
dec
das
and
dec
popa
mov
loopne
and
frstpm(287
jl
fiaddl
pushf
fwait
clc
mov
shrb
cltd
cmc
addl
and
pop
mov
mov
and
scas
imul
lods
iret
and
imul
push
in
mov
mov
pop
popf
leave
inc
jb
int
sbb
sub
mov
popa
lock
dec
jno
stos
xchg
inc
addr16
xchg
scas
fnstsw
pop
push
add
cld
mov
push
sub
mov
sbb
popa
add
iret
js
mov
push
int
repnz
dec
sbb
aas
jae
mov
push
enter
mov
xor
ret
jmp
jecxz
mov
sbb
jbe
pop
mov
add
enter
mov
dec
orl
add
lock
aaa
xorl
test
cmpsb
push
cmp
xchg
popa
testl
mov
ret
cmpsb
or
add
mov
jmp
inc
push
loope
jno
data16
sbb
rolb
pop
jo
sbb
in
inc
imul
mov
mov
ja
dec
or
shl
in
inc
std
pop
mov
in
test
addr16
gs
push
fwait
movsb
adc
pop
xchg
xchg
inc
in
sbb
hlt
lcall
adc
paddw
shlb
out
mov
jp
or
xor
jl
fistpl
push
push
and
js
ret
adc
pop
jle
xchg
cltd
int3
cld
jns
out
xchg
push
imul
mov
fcmovb
pop
stos
clc
xchg
xchg
xchg
mov
xor
imul
repnz
cmp
hlt
and
cli
gs
and
cmp
and
loope
insl
dec
xor
jbe
xchg
lds
scas
jge
sub
sub
xlat
lods
scas
aam
sub
pop
subb
mov
stc
mov
cmp
test
jno
cli
jmp
jne
in
in
jg
add
aaa
popaw
test
sub
dec
cs
imul
push
sub
xor
push
pop
idivb
maxps
dec
sbb
fists
cmp
cwtl
fs
mov
pop
js
fwait
xor
cwtl
inc
cmc
mov
cmpsb
shll
cmp
aad
idivl
mov
xlat
cmp
mov
insb
ror
ss
cmp
outsl
adc
sbb
or
mov
sbb
and
or
pop
adc
jmp
cmc
mov
popa
arpl
mul
inc
in
sbb
jns
test
popa
mov
mov
xchg
pop
pop
loopne
into
jb
out
mov
sub
in
xchg
push
rcl
out
sub
das
add
adc
lret
ret
adc
cld
popf
adcb
dec
cltd
and
and
push
mov
adc
push
stos
pop
push
sbb
lret
mov
mov
jge
mov
test
repz
inc
cmp
or
stos
movsl
stos
mov
sti
iret
ljmp
aam
hlt
and
xchg
sbb
fnstcw
das
arpl
fdivr
pop
lods
pop
cmpsb
sbb
std
xorl
in
pusha
popa
jg
call
sbb
adc
jmp
lock
fmuls
mov
jge
lods
iret
test
sbb
pop
arpl
sbbb
int
push
xchg
add
xor
mov
xor
jp
inc
sub
fcomi
inc
or
fcmove
jle
mov
push
ss
mov
inc
add
bound
addb
fmuls
push
das
std
cmpsl
and
xor
lods
cli
jns
loop
pop
arpl
push
push
jle
push
jne
shrl
in
cmp
in
add
mov
aas
mov
pop
sub
xor
aad
rcrl
add
inc
movsb
ljmp
sbb
loopne
push
mov
in
mov
pop
or
jb
cmp
jge
cmp
out
fwait
inc
dec
sbb
bound
sarl
cmpsl
test
push
idivl
repz
in
mov
mov
jbe
add
jnp
jg
ja
mov
add
inc
jnp
add
pop
into
or
fisttps
in
jno
inc
and
xor
cmp
daa
outsl
aad
orb
clc
das
mov
mov
lret
sub
xlat
cmp
dec
sbb
cmp
or
out
adc
adc
jae
dec
push
fnstcw
data16
out
push
mov
stos
inc
shll
mov
dec
cs
fwait
ja
inc
and
inc
jae
fs
sti
jae
push
fstps
pminub
xchg
int
in
jae
xor
mov
jo
jp
ret
dec
sti
cmp
ficompl
cli
mov
clc
into
xchg
mov
fisubrs
cmpsb
icebp
scas
mov
add
imul
mov
push
push
ss
pop
jns
push
push
aad
mov
dec
sbb
outsb
mov
xchg
clc
lods
xor
sbb
xor
lea
ret
jecxz
cmp
mov
cltd
lret
rcrl
arpl
pop
test
mov
and
cs
aam
sbb
dec
enter
mov
jp
mov
jmp
inc
push
xor
xchg
std
jmp
cmp
sub
sub
and
sbb
lcall
repnz
and
mov
mul
sub
jge
mov
dec
int
mov
dec
test
cli
pushf
dec
inc
rcrl
jnp
bnd
stc
sahf
pop
jecxz
sbb
subl
lret
test
xor
mov
push
jne
xchg
dec
jne
xchg
xor
out
mov
dec
mov
stos
jns
mov
lret
imul
or
or
cmpl
sbb
bound
pop
pop
test
pusha
data16
lret
jge
mov
xchg
int3
mov
movsl
inc
jno
push
int3
xor
loop
ffreep
leave
out
push
pusha
xor
lods
lods
adc
add
stos
xchg
aas
add
xchg
xchg
adc
stc
call
pop
std
add
insl
sbb
stos
movsl
xor
movsl
repnz
inc
repnz
cmpb
in
jae
lock
xchg
mov
mov
out
insl
aaa
sub
jl
fstpl
mov
fcompl
lret
xchg
push
call
imul
cltd
and
rcll
dec
jnp
movsl
insl
js
jecxz
out
cmc
aaa
cltd
sub
inc
jno
inc
rcrb
fs
popa
not
js
rcrb
and
and
mov
mov
test
popf
dec
mov
pop
cmp
inc
lods
push
jbe
add
mov
in
pop
scas
clc
xor
xor
stc
dec
gs
ljmp
add
int
pop
mov
and
sub
add
movsb
mov
jbe
jmp
repz
mov
xchg
dec
nop
inc
push
fwait
iret
enter
cwtl
fists
les
fwait
out
or
fisttpl
push
push
inc
adc
sub
push
scas
arpl
pushw
test
jno
mov
pushf
mov
dec
frstor
rorl
test
or
pop
pop
sub
std
fld
pop
xor
pop
jns
es
ja
dec
rorl
lock
cmpsl
neg
repz
clc
mov
in
cmpsl
push
mov
orb
cltd
cmc
sbb
add
mov
or
jle
xchg
push
adc
mov
and
xchg
or
and
mov
test
pop
ds
test
out
xchg
xchg
push
adc
pop
inc
int3
push
cwtl
and
bound
sbb
pop
pushf
cmp
fldt
xchg
xchg
and
jl
push
push
add
sub
or
repz
stos
clc
sub
xchg
shll
push
std
clc
gs
pushf
ret
stos
mov
int
aam
mov
mov
leave
imul
mov
mov
adc
es
js
repz
outsb
das
mov
adc
jbe
push
scas
xor
aaa
mov
pop
cmpsb
shlb
orb
xor
push
mov
mov
push
mov
gs
jnp
sbb
inc
pushf
shl
mov
mov
repz
xchg
and
pop
movsb
and
sbbb
dec
push
inc
mov
daa
out
inc
mov
sbbb
add
cmpl
insl
les
dec
xlat
jne
and
pop
rorb
mov
push
test
ret
fs
mov
sub
ret
in
mov
or
push
and
push
and
dec
into
aam
or
test
dec
mov
xor
pop
mov
and
in
add
adc
rolb
and
rcrb
fldenv
movsl
inc
xor
inc
cmp
or
pop
loopne
lock
popa
mov
mov
push
and
lea
scas
jge
imul
dec
mov
in
inc
push
shr
xor
popl
loop
jle
add
mov
push
jne
jge
xchg
push
daa
iret
xchg
dec
ret
pop
cli
mov
jg
jae
mov
pop
cltd
and
and
negb
aad
pop
sbb
or
adc
sub
repz
push
xor
adc
stos
mov
inc
mov
loope
sbb
in
sahf
jecxz
mov
cld
mov
xor
add
fdivrp
ficoms
xchg
stc
cmpsl
imul
test
xlat
cmc
test
mov
mov
sti
aam
vandps
fstpl
inc
loope
adc
dec
adc
dec
xchg
push
sbb
daa
lcall
lds
jg
or
btc
lds
mov
jae
jle
xchg
sbb
call
sub
mov
sbb
subl
sbb
mov
mov
test
xchg
pushf
outsl
icebp
jle
cmc
or
dec
xchg
inc
sbb
adc
xchg
mov
test
mov
int3
mov
mov
outsl
loope
adc
sbb
push
add
pop
pop
push
push
jecxz
pusha
push
push
es
js
mov
xchg
stos
inc
aam
test
pop
sbb
jnp
aad
out
sub
outsb
push
fsubp
test
push
inc
sbbb
lods
lahf
cmp
push
mov
arpl
push
adc
and
and
lds
jle
push
xchg
out
and
mov
pop
adc
dec
in
aaa
inc
out
ja
shlb
xchg
xchg
push
xor
outsb
test
test
inc
push
mov
pop
or
push
sub
and
inc
leave
in
cmc
sbb
mov
jmp
shrl
lret
dec
cwtl
pusha
in
dec
inc
sub
jmp
aam
lret
sbb
jbe
or
mov
hlt
out
outsl
fildll
xchg
inc
pop
cmp
mulb
mov
out
xchg
xchg
xchg
mov
push
dec
jb
xchg
stos
mov
mov
mov
cltd
cmp
pop
mov
imul
mov
add
shl
pop
dec
mov
mov
rcl
pop
mov
adc
push
xorl
mov
mov
stc
imul
xchg
shlb
push
sbb
cld
pushf
clc
mov
and
add
stc
dec
cmpsb
repz
push
stc
push
loop
jno
mov
fstps
stc
call
out
xor
xor
push
xchg
jmp
mov
je
fcmovbe
fisubs
shll
inc
xchg
jno
or
andb
mov
dec
xchg
lahf
jg
ljmp
es
hlt
loopne
ret
sahf
jmp
sub
mov
cwtl
outsb
test
adc
idivl
push
push
push
sbb
stos
into
cs
jle
lock
movsl
lea
jmp
in
mov
inc
pop
mov
movsb
jbe
arpl
mov
jmp
push
push
fwait
dec
dec
adc
test
jge
in
inc
das
cmp
or
ljmp
inc
push
fdivr
push
dec
mov
sbb
test
add
pop
rcrl
xor
aaa
test
cli
pushf
and
cltd
xlat
notl
mov
aad
dec
and
xchg
jae
dec
movsb
inc
shll
xor
push
lahf
pop
mov
sub
sbb
xor
xchg
fnstenv
insl
pop
in
cmp
hlt
jge
xorl
cmp
mov
jno
iret
gs
add
daa
or
xchg
movsl
cld
adc
xlat
adc
and
iret
mov
popa
ljmp
xchg
jne
movd
mov
loop
xchg
mov
sti
mov
lahf
inc
push
mov
xor
and
cld
fnstenv
push
xchg
stc
fldenv
sub
and
sub
xor
add
scas
int
out
xor
jo
stos
out
iret
cmp
push
mov
and
sbb
or
add
mov
xor
call
popf
adc
mov
mov
test
sbb
popa
movsl
stos
xor
sub
call
mov
cs
shll
jae
xchg
push
mov
frstor
mov
add
jns
mov
jp
jg
xchg
aad
dec
repnz
outsb
push
mov
xor
mov
or
sub
cwtl
cmp
ss
pop
ficoms
imul
pop
subb
mov
call
pop
daa
hlt
xchg
add
xchg
out
or
mov
sbbl
pop
nop
cmp
or
pop
mov
enter
jnp
pushf
pop
idivb
sbbb
mov
inc
xor
stos
sub
hlt
adc
jp
test
repz
xchg
stos
push
fdivl
xor
bound
dec
fsubl
bound
bound
fs
cli
dec
or
daa
mov
test
jbe
inc
jp
leave
fisubs
test
fcmovnb
loope
or
cmp
pusha
mov
fadds
add
inc
sti
mov
cmpsb
adc
cmpl
rcll
jmp
xchg
lahf
cmp
dec
xor
mov
scas
dec
pop
rolb
out
jg
sub
pop
pop
add
xchg
xor
icebp
dec
dec
ficomps
stc
dec
ficoms
push
mov
loopne
pop
xlat
and
jns
es
mov
cltd
sarl
lahf
pop
jne
dec
js
cmp
sbb
xchg
stc
xor
fwait
aas
das
lahf
jne
cmpb
pop
and
add
andl
mov
incb
sbb
test
daa
mov
xchg
mov
push
aam
add
nop
dec
je
insb
ds
lods
mov
or
enter
rolb
push
test
sub
inc
mov
lods
js
sbb
dec
adc
in
and
testb
nop
pusha
dec
sahf
enter
js
inc
mov
std
cmpsl
or
sbb
and
stos
xchg
std
jmp
js
cmp
in
adc
or
jp
movsb
sbb
ss
fwait
mov
and
das
push
pop
rclb
push
mov
frstor
fisttpl
pop
jo
fwait
int
rcll
mov
aam
pop
add
lcall
dec
out
add
cmp
xchg
popf
sbbb
cs
aam
repz
out
adc
push
mov
add
lcall
in
jno
std
cmp
andb
stos
jne
mov
inc
push
xchg
dec
loopne
decb
shll
mov
popf
fisttps
and
scas
inc
lret
pusha
vcvtsi2ss
pop
mov
daa
mov
test
sub
lret
push
arpl
dec
insl
cwtl
dec
vmread
cld
xchg
push
daa
sbb
adc
xchg
xor
cmc
fwait
dec
push
mov
loope
out
push
cmp
sti
pushl
clc
adc
daa
xor
loopne
clc
ret
lret
out
arpl
fwait
mov
fildll
hlt
in
cmpl
ret
jmp
add
lahf
movsl
inc
jp
inc
sub
sbb
sub
push
cmp
sub
sub
jnp
sub
xor
or
add
and
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
bound
out
cmp
rcrl
add
lods
lret
jmp
aam
cwtl
xchg
mov
and
setge
sbb
lahf
push
push
shlb
lods
movsl
bound
jbe
les
mov
xor
cwtl
mov
fistl
je
mull
ss
aas
mov
jle
je
cmp
lea
fildll
fisttpl
push
lret
or
jne
add
mov
dec
push
mov
icebp
fdivrl
pop
dec
mov
jo
scas
xchg
fists
mov
xlat
jl
xchg
xchg
stos
mov
bound
pop
lock
mov
sbb
push
xchg
or
jae
mov
stc
inc
dec
xor
fcoml
xchg
jb
dec
cmpsl
adc
shl
add
fdivp
cmp
xor
addr16
sbb
adc
les
inc
jo
dec
or
cmc
jg
pop
mov
out
xchg
ret
push
add
mov
mov
xor
mov
sbb
sub
pop
sbb
adc
mov
insb
cmp
mov
pop
cmc
add
push
push
jecxz
out
add
sbb
movsl
mov
movsb
push
lea
push
leave
scas
lods
cld
sub
cmpsl
xchg
xor
cmpsb
mov
rcll
insb
scas
jp
lret
in
jb,pt
push
or
sahf
icebp
jae
aaa
xchg
pop
adc
push
and
lods
movsb
push
divb
stc
add
xor
cmc
loop
add
aad
pop
sti
add
scas
nop
or
lcall
int3
mov
nop
push
jb
cmp
cmc
cmp
pop
jmp
fst
mov
ljmp
sub
out
jae
or
or
push
mov
test
push
lea
cmp
outsl
test
call
ret
mov
mov
arpl
add
fisttpll
mov
aaa
add
or
mov
or
lahf
jns
test
push
mov
sbbb
push
sbb
mov
cmp
lea
cmpsl
fisttpll
outsl
test
mov
jno
sub
sbb
mov
push
pop
jnp
les
cmp
pop
push
mov
add
pop
aas
add
dec
lock
gs
arpl
js
mov
dec
sbb
jno
jo
and
add
mov
call
lock
fucom
dec
lret
push
pusha
mov
stos
hlt
sub
or
in
pop
mov
fisttpl
mov
and
flds
mov
je
aaa
ret
sbb
iret
add
pop
and
fcmove
shl
fsubrs
das
pop
push
jp
mov
je
in
or
pop
shrb
orl
cmp
imul
mov
pop
andl
xchg
inc
lahf
dec
data16
push
sti
je
dec
popa
daa
scas
sub
xchg
test
or
pop
xor
jle
ret
dec
lahf
int3
adc
stc
popf
in
mov
popa
xchg
jmp
push
sbb
fwait
lcall
call
jecxz
int3
iret
adc
sub
sbb
add
neg
or
jb
es
test
jle
cmp
and
test
pop
mov
aaa
xor
cmc
shrb
in
pop
lret
jecxz
inc
xchg
out
xchg
loopnew
pop
sti
into
mov
mov
std
mov
xchg
cmp
test
mov
jo
add
adc
cmpsl
add
add
pop
daa
fidivrs
addr16
inc
aam
test
pop
jle
loop
dec
lahf
cwtl
push
mov
int
add
xchg
push
and
push
inc
sbb
jmp
mov
inc
pop
popf
add
scas
aam
mov
or
sahf
stos
in
jp
adc
imul
mov
enter
hlt
cwtl
cmp
je
lret
or
dec
pop
outsl
nop
mov
pop
add
mov
stos
adc
je
jbe
cmp
push
jle
xor
mov
popa
push
scas
stos
mov
cmp
adcl
cmp
mov
pushw
hlt
jp
in
or
lds
add
repnz
insl
scas
test
outsb
incl
orb
ds
ss
shlb
stc
lods
gs
arpl
and
and
fistpl
inc
rcrl
or
push
int3
mov
lahf
mov
push
cmp
fmull
pusha
call
sub
sub
mov
xor
je,pn
mov
sahf
and
mov
iret
aaa
movsl
adc
lods
mov
lods
lahf
fadd
mov
push
inc
or
inc
jo
enter
pop
pop
call
sub
sub
repnz
ds
mov
roll
add
pop
hlt
call
mov
dec
mov
jne
loope
pop
mov
pop
divb
shll
sub
push
mov
mov
or
add
xchg
sub
das
shrl
mov
push
mov
jo
inc
mull
inc
sub
popf
mov
bound
add
jp
pop
fnstsw
xchg
push
cmc
pop
insb
in
pop
sbbl
xor
ret
shl
pop
sahf
mov
jnp
sub
fnstsw
and
andb
cmp
pop
fwait
scas
fs
push
outsb
popa
inc
out
in
pop
pop
aaa
loope
mov
pop
pop
daa
mov
scas
mov
rorb
push
push
push
arpl
sub
dec
filds
mov
mov
xor
out
mov
jp
mov
jo
movsl
les
xor
mov
gs
fildl
jmp
jg
fimull
data16
lret
and
out
es
ret
mov
les
stos
inc
cmp
fiaddl
into
pop
movsl
test
gs
adc
imul
cmp
int3
aad
xor
andl
xor
pop
sbb
adc
std
xor
xchg
fnstcw
jno
dec
and
out
out
inc
cvtdq2ps
xchg
mov
lock
cmp
mov
std
leave
sbb
out
clc
lret
jnp
jle
pushf
lods
js
es
mov
mov
outsb
loopne
mov
cwtl
icebp
loop
dec
xsha256
cmpsb
pop
test
dec
mov
cld
addr16
mov
insb
lret
or
adc
xor
mov
andl
mov
test
ja
in
ja
sbb
sub
cmp
and
inc
jmp
insb
jbe
mov
sub
mov
icebp
shlb
sti
ret
insl
icebp
sub
testl
loope
mov
lahf
mov
lds
add
and
aam
xlat
mov
insb
and
scas
push
add
ja
outsb
imul
fdivrs
mov
cmpsl
negb
lsl
jle
testb
stos
fstpl
mov
stos
mov
xor
xor
xor
addr16
out
push
insl
push
push
pop
xor
mull
jae
cld
fisttpl
fcmovbe
shll
lds
pop
push
repnz
push
shrl
pop
shll
or
mov
insb
fisttps
inc
ret
push
icebp
icebp
mov
xor
in
add
scas
ret
adc
sub
movsb
fldenv
inc
mov
ds
fmull
dec
dec
push
imul
aas
sbb
inc
loop
sub
bound
mov
gs
fdivl
dec
int3
cmpl
mov
mov
xchg
data16
cs
cmp
mul
in
int3
leave
fadds
xor
lahf
test
xchg
jns
jg
ror
sahf
push
jne
cwtl
xchg
ret
gs
adc
mov
fstpt
inc
push
sahf
push
sub
cmp
fwait
push
pop
xor
adc
test
movsb
lret
cmpsl
leave
sbbl
sbb
decl
mov
hlt
and
pop
or
sbb
or
aas
lods
mov
loope
sub
xchg
or
in
and
lret
dec
lcall
pop
xchg
sbb
push
xor
mov
mov
ficompl
mov
pop
sbb
es
mov
or
sbb
test
adc
dec
mul
mov
icebp
test
es
pop
xchg
pop
pop
rorb
sub
mov
push
mov
xor
rorl
repz
sub
fs
or
jb,pn
cmp
js
repnz
sub
ret
data16
dec
loop
and
cmp
adc
mov
cmp
hlt
jecxz
cld
movsb
nop
iret
push
push
jnp
cs
sub
ja
mov
js
pushf
inc
fldcw
push
testl
push
pop
xchg
push
adc
dec
sbb
push
cltd
push
je
addb
xchg
cmp
icebp
ja
ffreep
adc
fistpll
jae
xchg
xchg
xchg
stc
xor
and
sbb
out
jl
adc
testl
mov
test
inc
outsb
cltd
or
addr16
jle
push
push
cmp
adc
lret
xchg
push
js
imul
or
arpl
inc
jne
mov
add
icebp
cld
cmp
mov
adc
incl
imul
arpl
or
fimuls
inc
ss
cmp
add
test
pop
aas
aad
sub
xlat
push
push
add
pop
or
mov
mov
ljmp
rcll
dec
out
je
xchg
xor
mov
sbbl
aam
mov
lcall
scas
sub
into
pop
out
fdivrs
mov
lret
jg
adc
adc
mov
clc
sbb
les
inc
nop
sub
inc
shl
lcall
aaa
pop
inc
hlt
ret
jae
enter
hlt
ds
mov
popf
add
call
pop
daa
aad
fs
cltd
push
sub
out
dec
jmp
mov
jge
outsl
adc
dec
aad
subl
dec
in
or
pop
jo
mov
repz
dec
and
sbb
loop
in
rcrb
mov
loopne
jl
subb
sub
jo
fadds
mov
out
les
mov
je
mov
sahf
add
jmp
add
xchg
fcoms
or
cld
loopne
pop
sahf
fwait
and
cmc
jge
stos
and
lcall
mov
fcomip
call
jne
xor
dec
hlt
int3
out
ss
ds
lahf
imul
iret
mov
nop
xor
mov
andl
popa
daa
or
add
das
add
in
xor
scas
stos
popf
rol
jbe
int
test
adc
and
jmp
pop
add
fbld
nop
xchg
dec
clc
icebp
scas
shlb
or
cmp
mov
mov
mov
shl
mov
adc
mov
mov
xor
dec
stos
addl
ljmp
push
int3
jb
popa
leave
mov
pop
pop
cld
repz
sub
xlat
or
pop
jnp
add
adc
inc
mov
dec
jne
jmp
mov
adc
mov
xchg
insb
push
stos
rolb
dec
cli
js
sub
out
mov
fcoms
jle
inc
ror
jg
xchg
pushl
iret
cs
in
pusha
inc
jb
and
clc
inc
push
clc
mov
pop
pop
mov
add
int
aad
icebp
outsb
xchg
int3
insl
out
in
pop
jno
scas
lods
mov
imul
out
sub
jbe
jle
testl
pushf
or
cltd
scas
inc
mov
sbb
ret
pop
mov
loopnew
adc
mov
into
loope
loop
adc
test
mov
mov
sub
jg
xchg
sub
outsl
test
push
sub
test
push
popf
sbb
lds
jo
mov
pop
loope
mov
andl
fs
inc
xlat
cmpsl
dec
gs
sarl
out
mov
int
pop
in
xchg
adc
sub
fcoms
mov
xchg
andl
xlat
mov
lea
mov
cmpsl
add
mov
movsb
push
pop
add
pop
adc
push
jne
jle
mov
outsb
dec
sbb
test
xor
push
in
mov
and
dec
orb
mov
loop
adc
inc
xor
xchg
int3
in
loope
dec
shll
in
dec
sub
cmpsb
daa
xor
je
push
cmp
add
in
cmp
sti
ss
push
mov
cltd
scas
ret
fimuls
lock
ss
mov
ljmp
push
or
mov
adc
idivb
test
push
inc
notl
mov
jg
mov
inc
test
dec
pop
sahf
cli
add
insl
push
xor
sbb
or
frstor
fcompl
icebp
icebp
push
fcomps
cltd
fiadds
and
mov
pop
pusha
jge
mov
test
xor
and
xchg
add
or
int
dec
sbb
and
sar
cmp
int
sub
cli
mov
das
cs
shll
pop
cmp
jmp
outsl
lods
pop
je
mov
orb
adc
or
add
insl
loope
inc
hlt
inc
loope
jmp
repz
mov
iret
mov
inc
insl
sub
test
add
adc
sahf
jecxz
xor
out
sbbl
test
dec
mov
inc
movsb
shll
dec
out
cli
mov
out
add
cs
mov
test
test
xlat
sbb
rol
mov
cmp
dec
jecxz
cs
scas
out
ret
pop
addl
outsl
ss
lea
loope
test
movsb
xor
push
cld
mov
add
xor
mov
lods
ret
mov
mulb
decl
mov
add
mov
jl
pushf
scas
bnd
xor
jle
test
xchg
dec
aas
cmp
push
jno
insl
mov
sub
mov
xchg
cmp
loopne
loop
test
push
pop
inc
pop
cmc
iret
fsts
ret
shl
mov
sub
in
sub
mov
cwtl
movsb
inc
sub
add
mov
sub
dec
shrl
mov
cmc
shl
and
pop
and
jle
out
adc
pop
das
in
add
push
sahf
mov
sbb
adc
imul
xchg
stos
stos
mov
das
push
mov
inc
lods
popf
sub
xchg
iret
out
insb
std
cmpb
xor
mov
xor
cmp
xchg
push
jge
divb
push
mov
rolb
cmpsb
out
aas
mov
cmp
lods
out
cli
lahf
cli
jp
test
je
dec
jbe
fs
mov
xchg
cmc
push
test
cs
and
mov
movl
adc
inc
dec
mov
sarb
mov
mov
les
jns
jg
std
leave
adc
mov
push
imul
xchg
test
inc
cmp
pop
les
cmp
mov
xchg
push
mov
xchg
fwait
cmc
xorl
mov
js
pop
xor
add
sbb
shrb
aas
cmpsl
leave
or
push
pop
outsb
or
or
jmp
and
out
inc
rcrb
mov
ror
ljmp
xchg
sahf
cmp
and
popf
mov
mov
xor
sbb
sahf
or
movsl
int
mov
mov
or
push
insl
jge
nop
lods
add
cmp
ds
and
jp
popa
xchg
nop
dec
and
lcall
sbb
scas
test
push
mul
inc
in
fadd
or
push
cltd
push
pushf
xor
popa
fstpl
mov
in
mov
push
movsb
mov
jecxz
fstl
pop
xchg
inc
in
pop
inc
mov
cwtl
mov
mov
pop
sub
adc
dec
outsb
int3
jecxz
inc
mov
cmpsb
mov
cmc
inc
xor
adc
add
xchg
adc
pop
mov
cmp
jnp
pop
jb
and
imul
inc
cmpl
and
xor
fsubrs
xor
mov
add
iret
fisttpl
addr16
or
or
outsl
test
fs
rcl
dec
daa
pop
dec
inc
sbb
sbb
stos
adc
lret
shrl
push
sub
insl
mov
pop
rclb
mov
adc
push
ja
testl
insl
ja
js
mov
test
fdivl
push
mov
sbb
fisttps
mov
mov
and
jg
and
std
fildll
dec
lahf
inc
call
push
cmpsb
ror
decl
or
mov
dec
push
mov
out
push
pop
mov
das
sbb
inc
mull
rcr
adc
mov
loopne
repz
sub
hlt
lahf
lods
stos
lcall
lahf
push
addr16
fisttpll
mov
adc
push
aas
add
in
xchg
dec
cmp
daa
aad
js
stos
scas
xchg
repz
mov
mov
cld
push
inc
repnz
dec
mov
cmp
adc
cmpsl
addr16
inc
cmp
add
or
insb
fildll
sbb
cmp
jnp
out
sar
rolb
and
xchg
lret
cmc
lock
or
rcrw
arpl
push
mov
and
stos
pop
imul
sub
mov
add
add
and
sub
es
aas
shrl
push
lods
inc
adc
mov
cmovb
jne
jmp
sbb
or
lock
mov
lcall
sub
xchg
jno
enter
xor
imul
dec
call
movsb
std
and
and
add
or
mov
daa
lods
push
mov
mov
adc
jge
loope
fidivrs
jle
push
pushf
sbb
movsl
dec
imul
pop
and
jae
adc
gs
aad
movsb
push
hlt
out
adc
scas
test
adc
aas
mov
pop
out
push
and
lret
lods
inc
sub
mov
xor
mov
dec
mov
sub
xchg
fldt
insb
insb
push
movsl
sbb
call
leave
dec
inc
and
cmpsb
inc
gs
cmp
lret
mov
xchg
adc
addr16
xchg
jno
imul
push
mov
xor
gs
adc
or
ficoms
push
jmp
test
and
pushf
inc
fdivl
arpl
push
bnd
pop
sahf
dec
int
mov
movsl
mov
xor
mov
mov
xchg
dec
icebp
loopne
sub
loopne
cmp
mov
push
aaa
clc
sbb
in
es
lock
xchg
out
ja
jns
push
push
push
and
push
adc
jne
push
xchg
and
and
or
pop
aad
jns
pop
dec
sahf
dec
cmp
lock
fs
sbb
in
fsubrs
lcall
jae
jecxz
push
ds
movl
popa
nop
xor
pop
xchg
jnp
and
pop
or
cli
sbb
sub
clc
pop
mov
loopne
xor
fists
mov
cmpsb
push
lock
mov
scas
inc
xchg
and
dec
mov
and
stos
mov
loope
push
test
js
push
fnsave
scas
addb
imul
xchg
clc
test
jmp
out
lret
cmp
cs
mov
sub
daa
outsl
sbb
cmc
mov
lret
or
adc
jno
popf
xchg
sahf
mov
adc
popf
mov
cmp
fsubrs
pusha
mov
xorb
fisubrl
lret
popa
iret
negb
adc
bound
stos
outsl
popl
into
adc
mov
and
loop
iret
das
mov
and
mov
notl
icebp
adc
fadds
test
cmpsb
cmpsl
lcall
jne
xchg
push
out
ret
and
jecxz
push
js
insb
xchg
adc
sub
filds
insl
testb
mov
push
and
adc
add
imul
or
dec
jle
loop
test
and
pushf
pop
cmpsb
pop
out
hlt
or
xchg
cmp
lds
enter
mov
or
andl
sbb
or
fstl
inc
cmp
mov
jmp
push
fdivrp
out
inc
in
adc
xor
pop
mov
xchg
out
scas
stos
shlb
xchg
lea
mov
xchg
imul
daa
mov
aaa
mov
push
aam
xor
jecxz
jne
stc
test
leave
mov
stc
int
xchg
sbb
push
rcrl
push
pop
cli
adc
jmp
push
push
jne
andl
mov
push
loope
or
mov
sbb
dec
mov
jecxz
cmp
testb
test
or
add
fsubl
insl
ret
cwtl
pop
and
or
movsb
mov
loop
in
lods
or
bound
push
clc
xor
jle
enter
inc
ret
or
je
push
mov
push
lock
test
mov
ljmp
jg
in
cwtl
pop
dec
out
xchg
mov
pop
insl
push
or
and
xor
pop
les
popf
out
pop
int3
stc
add
push
in
rol
adc
mov
cmpsb
jnp
dec
pop
mov
or
notl
mov
pop
mov
cmp
es
popa
cs
mov
add
xor
or
jl
das
test
mov
aad
inc
mov
cmp
dec
pop
js
push
cmp
loopne
pop
and
lahf
mov
in
jbe
popf
xor
inc
cltd
or
pop
pop
pop
jne
shrl
or
dec
jae
stos
addr16
cmpl
cli
push
push
push
jl
mov
pushf
leave
mov
int3
jne
mov
lret
jmp
roll
pop
mov
sar
shrl
cmpsl
aam
mov
push
dec
lahf
subl
shrb
and
mov
out
mov
imul
mov
pop
or
xor
add
sub
outsb
outsl
js
andb
lahf
cmp
jecxz
std
cmp
jnp
jmp
jecxz
popf
dec
sub
cmpsb
fsubrs
iret
jb
push
hlt
std
stos
jno
imul
testb
push
rcll
pop
jo
ja
jno
sub
xchg
and
imul
pop
flds
out
push
jb
in
iret
jmp
add
mov
jo
mov
sahf
adc
stos
push
and
popa
sub
mov
or
lcall
cmpsb
arpl
push
xchg
int
jmp
jo
dec
mov
rcr
sub
enter
xchg
dec
into
je
and
cmpsb
stc
adc
in
pop
mov
fwait
daa
fdivrp
movsb
jmp
mov
xor
cmp
cmp
es
or
adc
push
dec
push
mov
push
fistps
ror
scas
push
add
call
mov
out
mov
xlat
fstpl
push
negl
jmp
xchg
outsb
xchg
ljmp
adc
push
cmp
enter
add
loopne
lcall
dec
push
inc
jg
cmove
and
setbe
lods
fbstp
mov
int3
negl
out
imul
data16
jbe
xchg
and
jecxz
pop
pusha
test
stos
inc
push
sub
mov
sahf
test
rorb
cwtl
and
lea
mov
cmp
push
push
daa
inc
xchg
bound
cmp
ja
jne
adcb
in
add
and
fstp
and
adc
negb
inc
push
sbbl
aas
sub
dec
xchg
nop
pusha
insb
les
je
sub
adc
insb
inc
push
push
xor
mov
jle
add
fxam
jl
xor
fistps
jle
sub
fmuls
je
inc
pop
frstor
popf
jns
mov
push
enter
ds
cld
sbb
push
outsl
xchg
cmp
pop
jb
imul
pushf
jg
out
jmp
push
sbb
in
sub
dec
pop
and
or
enter
into
add
jg
pop
or
bound
xor
and
jbe
jecxz
mov
mov
add
addl
hlt
add
and
mov
gs
out
push
xor
or
loopne
jo
dec
adc
test
sub
gs
ret
mov
in
lods
lds
inc
fidivrs
aaa
xchg
sub
movsl
lahf
cltd
push
adc
push
scas
fimuls
cmpsb
dec
jle
outsb
add
inc
data16
xchg
mov
or
pop
fwait
repz
rol
xchg
rcll
sub
pop
add
leave
js
pop
pop
jg
sti
jp
or
cmp
mov
aam
movsb
jne
jne
cmpl
and
rep
stos
in
xlat
cs
into
mov
shll
es
adc
outsb
sbb
inc
into
cmpsl
add
jle
xor
pop
mov
fisttpll
iret
dec
sub
jb
pop
and
push
xchg
jbe
dec
fsubrp
test
jge
adc
cmp
jnp
lods
push
sbb
lret
aam
xchg
cmp
jle
sbb
or
pusha
stos
xchg
adc
popf
inc
stos
js
shrb
lcall
aaa
mov
bnd
rcl
dec
inc
dec
rorl
pop
stc
jge
jo
cwtl
jp
xchg
mov
aaa
fiadds
xor
outsl
jg
rolb
pusha
and
xchg
inc
xor
repnz
jg
cltd
hlt
xor
jno
divb
call
adc
jno
xor
mov
add
jne
push
cli
jge
sub
insl
rol
ss
gs
in
es
lea
roll
sbbb
lods
jne
out
sti
inc
inc
cmp
sbb
mov
lret
ljmp
outsl
jo
push
mov
push
out
lock
rcll
icebp
dec
push
add
mov
xchg
dec
test
xchg
sbb
pop
ret
mov
cld
lods
or
add
pop
scas
mov
jne
inc
mov
sub
adc
js
loop
xor
and
cs
adc
xlat
orl
cmp
mov
je
das
mov
inc
outsb
mov
icebp
cmpl
ja
out
mov
cwtl
push
or
add
rcrl
sub
push
cli
out
dec
in
mov
mov
sahf
xchg
int
jmp
scas
pop
or
insb
cmpsb
fstps
aam
push
loop
mov
mov
test
out
out
sub
loop
sbb
cmpsb
negb
xlat
mov
adc
in
push
sbb
pushf
xor
loope
inc
notb
pop
jbe
mov
jno
ficoml
xor
ljmp
push
in
dec
mov
pop
inc
jle
pop
pop
scas
inc
gs
in
test
push
outsl
addr16
mov
jno
sub
aaa
mov
cld
outsb
mov
ds
pop
cmp
jbe
add
and
fstpl
hlt
xor
mov
pushf
and
push
out
aas
lret
adc
xchg
jbe
sbb
mov
clc
out
mov
test
push
pop
mov
iret
dec
sbb
sub
mov
xor
or
xchg
sbb
cltd
xchg
jle
mov
jl
pop
lret
fwait
sahf
subl
loop
stos
cli
push
cmp
insl
nop
insb
jle
negb
dec
scas
int3
iret
push
movsb
or
popf
mov
outsb
iret
sbb
mov
push
mov
clc
jnp
iret
mov
xor
subb
push
push
jae,pn
cmp
mov
dec
xor
test
inc
shll
lret
fucomp
shrb
push
clc
and
jecxz
fucom
ljmp
xor
xchg
test
xlat
inc
rcl
xor
inc
lds
push
inc
pop
and
cld
ret
shlb
push
insl
insl
clc
out
mov
out
xor
sarb
mov
jno
xchg
cmpsl
mov
add
stos
ret
lods
push
lock
pop
sub
sub
mov
lret
mov
lahf
and
jge
les
jg
adc
add
shr
cld
jle
cltd
mov
jge
test
or
stc
fwait
mov
sar
mov
jp
out
fs
iret
rorb
arpl
lret
adc
sub
sti
imul
mov
xor
cmp
nop
mov
sub
xor
loopne
repz
cmp
jl
js
data16
notb
pop
sahf
inc
rorb
lret
hlt
jmp
mulb
inc
pushf
iret
clc
mov
cmp
lods
xchg
adc
xor
xchg
repz
mov
jb
scas
int
push
mov
xchg
cmpl
pop
push
lret
cmp
mov
push
aaa
add
xor
jle
rorb
hlt
inc
sub
test
test
or
movsb
sti
fwait
and
cmp
cmp
mov
rcrl
hlt
jg
lret
cmp
add
add
mov
cwtl
mov
fwait
mov
or
mov
ret
stos
stc
mov
or
sub
nop
cmp
into
aam
xchg
jl
mov
out
popa
push
rclb
xchg
aam
jb
mov
or
xor
dec
pop
sar
pop
inc
push
xchg
lret
leave
test
stos
mov
sub
push
sarb
mov
mov
fwait
cwtd
and
cmp
push
loope
sbb
imul
push
loopne
jne
jbe
pop
adc
and
ret
jl
mov
inc
push
inc
mov
mov
inc
sbb
add
in
fidivrs
mov
jecxz
cmp
icebp
jl
aad
aad
sub
repz
and
or
jne
out
inc
popa
flds
sub
add
mov
cmp
push
xchg
cmp
es
xor
xor
cmc
aad
jle
add
in
mov
xor
inc
scas
mov
jns
and
movsl
push
jle
or
pop
shll
lods
test
stc
insl
or
cmp
jbe
iret
aaa
fnstenv
sbb
fs
push
out
sbb
pop
or
jg
repz
add
mov
sub
repz
repnz
mov
sub
mov
mov
aaa
movsl
jmp
cli
jmp
dec
pop
imul
and
movl
pop
insl
notb
fiaddl
mov
in
mov
jge
or
adc
push
call
jae
ret
push
mov
shll
or
in
inc
jo
pop
adc
mov
adc
js
inc
inc
cmp
std
pop
sub
mov
pushf
negb
sbb
cmpsl
inc
arpl
scas
icebp
pop
out
mov
pop
xchg
in
add
jbe
inc
out
jp
pushf
call
mov
aad
pop
cmp
and
inc
push
insb
cmp
adc
sub
imul
out
rcrl
hlt
mov
add
fildl
fmull
and
cmpsb
dec
dec
jnp
shll
stc
test
test
cs
imul
fidivl
push
pop
push
addr16
adc
sub
sub
add
jecxz
xor
push
fdivs
jl
xchg
hlt
adcb
add
lea
xchg
in
and
sbbb
inc
inc
stos
xchg
mov
scas
out
pusha
xor
sub
and
cwtl
outsb
ljmp
outsl
adc
popa
cltd
test
inc
rorl
std
jge
cltd
pop
jge
imul
lods
pop
clc
mov
adc
pop
lods
mov
lret
mov
gs
rorb
push
cs
adc
and
das
rcl
js
idiv
cmp
out
rcr
sub
sbb
rcr
into
sub
ljmp
insb
sbb
add
loopne
cld
into
mov
jne
xchg
xchg
xor
je
cld
jb
jne
ja
outsb
mov
cmp
in
ficoml
adc
pop
xlat
iret
mov
adc
push
out
mov
mov
add
dec
in
loopne
loopne
mov
lock
cmp
mov
inc
sub
stos
pop
mov
das
sbb
jmp
insb
inc
outsl
arpl
xchg
sub
or
imul
xlat
shll
bound
test
mov
popa
ret
mov
jae
andl
jle
fs
lock
ss
push
sbb
sbb
or
jecxz
cmc
dec
out
fisubl
xor
cltd
sbb
aas
sbb
cltd
or
fs
sarl
mov
mov
imul
push
out
xchg
scas
jne
lret
add
fpatan
inc
sbb
cmp
inc
xor
mov
jbe
push
dec
adc
es
jg
pop
into
cmp
aad
sarl
sbb
and
jo
cmpsb
push
ss
add
test
fwait
test
stc
jmp
xor
pop
js
sbb
push
addr16
xchg
adc
lahf
pop
repnz
stos
push
es
sub
lock
popf
inc
jl
fsubl
pusha
popa
adc
cmc
test
inc
jp
adc
gs
adcb
pusha
shrl
pop
in
dec
into
push
sub
mov
xor
pop
repz
roll
pop
inc
int
stos
pop
rcrb
xchg
dec
and
push
dec
add
add
loop
je
cmp
sub
addl
stos
out
iret
repnz
out
cmp
push
out
xorl
xlat
out
testl
adc
stc
test
mov
je
jb
lret
xchg
out
add
rolb
aaa
adc
ret
arpl
inc
inc
add
sbb
jecxz
enter
or
mov
ret
sub
cmp
in
adc
push
lock
pop
inc
inc
mov
pop
iret
cmpsl
jo
hlt
and
jg
pop
imul
mov
jno
cmp
fsubrl
mov
mov
outsb
cltd
jg
dec
push
rcrb
mov
outsl
mov
jmp
sub
mov
and
movsl
fstps
mov
add
mov
pop
adc
bound
pop
mov
repz
cmp
push
sub
mov
add
xchg
shrb
mov
fs
popf
pushf
mov
inc
repz
push
lods
xor
aad
inc
adc
mov
fxch
or
lock
mov
sub
lcall
mov
mov
lea
in
mov
insb
ret
adc
out
lea
dec
dec
xchg
jno
ljmp
adc
jecxz
cmpsb
inc
jae
xchg
loope
xor
sahf
fldl2t
ljmp
insb
or
inc
in
shrb
mov
add
inc
daa
ret
divl
jl
adc
lods
stos
cmp
pop
and
mov
lret
or
ds
mov
jb
jnp
push
loope
or
stos
xchg
nop
je
call
inc
sub
jge
adc
movsb
ficompl
cmp
mov
dec
es
leave
bound
cmpsb
mov
push
ret
sub
xchg
jp
test
inc
add
stc
arpl
fisubs
les
leave
mov
loopne
xchg
leave
call
les
push
cmpsb
jg
mov
inc
insb
fucom
jl
sarb
mov
pop
iret
sahf
scas
ret
and
scas
insl
xchg
mov
xchg
sbb
ljmp
cmpsl
aaa
addr16
mov
sbb
mov
out
jns
test
xchg
sahf
sbb
push
xchg
mov
in
movsb
fisubl
dec
mov
and
scas
testb
pop
and
jne
cltd
aad
sbb
aaa
jo
or
mov
in
inc
xchg
sub
call
out
jmp
daa
add
insl
mov
mov
mov
sbb
mov
add
or
sub
cmp
xchg
or
cli
xchg
rclb
adc
cltd
outsb
mov
outsl
cmp
xor
cmp
mov
sbb
outsb
pop
add
insl
push
es
std
mov
mov
loope
int
push
add
sbb
fdivr
stos
fwait
inc
add
icebp
lock
xchg
jle
call
xchg
mov
loopne
mov
dec
adc
inc
mov
xor
pop
and
std
mov
out
mov
dec
jecxz
scas
cmpsl
pop
mov
mov
hlt
mov
negb
enter
mov
xor
or
push
lret
dec
push
lahf
add
or
test
mov
dec
fdivrl
dec
roll
lock
popf
es
xor
out
rcrl
or
je
sti
mov
loope
pop
push
xchg
sarl
fmuls
scas
mov
decb
imul
fmull
dec
xchg
sub
pop
pop
xor
addl
xchg
repz
xchg
dec
pop
mov
xchg
jne
cmp
outsb
pop
jns
sbb
inc
or
cmpsl
rorl
mov
out
sub
imul
inc
in
lds
test
sbb
repnz
mov
pop
sub
dec
add
loope
cmp
movsl
push
lock
lret
std
mov
addb
outsl
and
mov
add
out
fnstenv
mov
push
insb
pop
dec
xchg
daa
ljmp
jmp
mov
int
clc
pop
mov
jnp
mov
jmp
dec
jp
dec
std
aaa
pusha
jmp
push
in
mov
fldenv
xor
dec
and
push
gs
aas
rorb
aaa
pusha
leave
imul
les
xor
movsb
bound
xchg
ret
iret
pop
stos
stos
jae
call
mov
xor
mov
std
xor
lock
lea
js
ficompl
rolb
mov
in
sub
xchg
xchg
cmp
out
nop
cmp
popa
mov
pop
stos
testb
subl
adc
cli
cld
rcrl
out
push
cwtl
mov
or
lahf
jne
mov
notb
jmp
pop
leave
mov
lahf
xor
enter
sahf
mov
in
neg
les
add
mov
cs
xor
ret
nop
outsl
or
inc
ds
ret
or
dec
out
and
loope
jle
pop
inc
mov
mov
fidivrl
push
aas
cmp
xor
push
push
aam
cld
jl
and
jg
mov
add
negb
dec
sub
or
jl
push
fisubl
ja
dec
nop
mov
add
fstpt
les
push
mov
out
cmp
mov
test
inc
leave
ret
push
outsb
ret
add
andnps
pop
cld
adc
dec
mov
iret
or
mov
ret
sub
dec
or
sbbl
sub
int
dec
inc
clc
movsl
fwait
ror
mov
fmuls
jno
dec
and
das
mov
mov
sahf
ss
cmp
mov
xor
std
sbb
push
push
dec
pop
aas
decl
sbb
call
sbb
and
shlb
mov
and
test
aam
inc
cmpsb
ficompl
les
sbb
and
call
orb
xchg
in
jle
push
mov
jns
int
pop
in
mov
and
jp
lods
xchg
sti
push
cmp
xchg
data16
mov
push
dec
aad
ja
dec
loopne
lret
movsb
sbb
mov
xchg
mov
mov
sbb
sbb
daa
push
mov
imul
xlat
setnp
lods
in
inc
add
pop
mov
fists
and
jmp
mov
test
shrl
out
or
xor
lock
test
mov
sub
mov
and
std
cmp
push
mov
ja
jle
xchg
push
negl
fmull
sar
in
imul
popf
mov
jo
sti
outsl
imul
xor
sbb
es
outsl
inc
data16
or
and
pop
sahf
int
ret
sahf
mov
mov
aam
push
inc
sbb
and
pop
cmpsl
mov
mov
popf
pop
jle
jmp
and
sbb
jbe
add
dec
push
stos
flds
sbb
xor
je
imul
jle
icebp
pop
xor
lahf
mov
inc
scas
movsb
add
mov
push
sub
fs
ja
mov
or
out
fwait
inc
out
lods
inc
or
adc
test
flds
pop
jge
xchg
push
mov
mov
push
mov
ss
push
lahf
add
in
xchg
test
adc
ds
and
lock
or
cmovne
ds
sbb
pop
insl
cwtl
pop
ret
push
mov
lret
adc
dec
or
dec
mov
daa
nop
cmp
shrl
movsb
push
lds
inc
push
dec
or
insl
icebp
push
out
fcomi
andl
lahf
sbb
shl
fabs
add
sub
or
outsb
data16
xor
lcall
aad
xor
mov
loope
out
jl
push
scas
jg
pop
aad
sbbl
mov
loop
adc
jbe
cmpsb
mov
sarb
cmpsl
fldenv
mov
roll
fsubl
add
das
add
xor
stos
add
xchg
popl
push
and
enter
mov
fisttpll
lock
xchg
or
mov
push
add
shll
ret
loope
outsb
push
mov
imul
push
xor
dec
inc
loop
in
jecxz
xor
xor
mov
push
mov
mov
cmp
pop
dec
mov
dec
imul
btr
xchg
cmpsl
fs
pop
das
pop
out
lret
push
sbb
mov
xchg
xchg
inc
mov
dec
cmp
aas
addl
cmpsb
add
sti
popa
xor
in
mov
adc
das
into
xchg
adc
andb
mov
cmc
dec
xor
test
xchg
dec
stc
sarl
pop
pop
cli
ret
mov
movsb
xor
movsb
lahf
and
insl
out
xor
dec
in
sti
out
int3
ds
daa
mov
mov
call
lods
xor
inc
mov
cmc
int
cmpsb
push
or
test
and
sbb
push
push
leave
bound
cmc
js
icebp
pop
stos
cmp
cmc
jns
jecxz
jne
ljmp
stos
adc
pushl
and
or
push
pop
rorl
xor
clc
mov
aad
sub
xorl
and
pop
lods
out
imul
into
out
mov
push
dec
add
mov
icebp
sbb
push
in
lcall
cmp
push
loopne
stos
test
dec
inc
xor
jo
call
pop
out
pop
aaa
sbb
push
cmp
sub
cs
into
cmp
repz
xor
rolb
adc
incb
je
orb
imull
push
mov
stc
mov
sub
test
push
icebp
mov
les
movb
stos
pop
cwtl
mov
pop
xlat
daa
and
imul
jb
sar
call
jl
test
or
rolb
or
xchg
das
and
jae
or
sub
scas
nop
movsb
add
cld
repnz
cmc
push
mov
test
shlb
mov
inc
clc
mov
in
jmp
in
jmp
stc
xor
mov
lock
shll
cmp
mov
out
shr
jb
xchg
mov
jne
add
push
sub
aas
push
dec
aas
xlat
sarb
movsl
add
imul
aam
pushf
rorl
insl
mov
mov
rclb
pop
mov
mov
out
loope
mov
inc
push
sarb
push
adcl
cmc
jnp
push
nop
rorl
xchg
scas
xlat
mov
scas
shll
clc
mov
sub
call
imul
inc
add
cmp
push
decl
dec
fsts
out
icebp
movsb
cli
dec
xor
test
mov
xchg
fsubrs
add
inc
test
adc
jbe
cmp
ljmp
or
in
add
test
mov
sub
daa
and
add
or
xchg
lret
and
adcb
sub
ja
rcrl
cmp
jmp
cmp
mov
fimuls
imul
dec
mov
sbb
enter
insl
test
aas
sbb
sarb
aad
jl
or
shr
stos
mov
cmpsb
sub
cmp
jle
fnstsw
pop
and
loope
pop
dec
sbb
shlb
or
pop
call
out
mov
ja
cmp
into
cs
mov
aaa
pusha
xor
insb
cmpb
inc
add
and
cmc
lock
daa
loop
mov
xchg
adc
push
rol
mov
add
push
dec
dec
call
je
ljmp
adc
mov
movsb
outsb
pop
xchg
mov
inc
jne
mov
xor
dec
adc
scas
lret
sbb
daa
in
push
nop
inc
ret
pop
rcr
jp
push
xor
lcall
dec
ja
mov
hlt
dec
add
gs
mov
mov
inc
sti
scas
xchg
out
mov
repnz
push
mov
add
stos
fwait
push
clc
fchs
mov
dec
cmp
ficompl
sarl
pop
mov
sbb
dec
sub
test
push
scas
pusha
mov
scas
out
jae
aad
call
popf
shll
cli
js
pop
sbb
mov
sbbl
pop
push
and
test
insb
aaa
nop
popf
movsl
and
das
xchg
dec
repz
cmp
mov
xor
jae
push
dec
cmp
test
std
cwtl
adc
sub
jns
xchg
dec
out
neg
or
push
cltd
scas
jbe
push
hlt
cmp
scas
imul
jmp
lods
mov
gs
out
and
arpl
lret
xor
inc
mov
jecxz
push
sbb
and
gs
cmp
mov
mov
mov
dec
sbb
shll
sub
dec
adc
pop
pop
les
lret
fdivl
push
xchg
xchg
xchg
test
mov
push
mov
xlat
jle
pushf
sti
loopne
push
icebp
divb
xchg
aam
adc
sbb
cmp
lea
sti
lock
push
inc
cs
andb
pop
sub
cmp
dec
stos
movsb
orb
cmp
xor
dec
inc
ret
lock
ret
dec
sbb
xchg
add
jle
jne
or
xchg
mov
adc
das
xor
js
in
divb
adcb
rcl
xchg
xchg
mov
das
aaa
jl
jmp
xchg
test
sahf
ror
or
add
in
xchg
sbb
xor
adc
and
push
xchg
sbb
adc
jmp
arpl
test
mov
loop
sbb
into
jg
imul
dec
mov
fwait
mov
cli
aaa
pop
mov
scas
xchg
fcoms
mov
icebp
xchg
or
test
inc
adc
test
mov
loop
cmp
push
pop
cs
or
pop
cmpsl
sbb
sahf
xor
arpl
insb
mov
push
cli
aad
or
out
xchg
test
adc
adc
leave
arpl
mov
les
fidivl
inc
lret
fdivrl
xor
lcall
call
pop
xchg
mov
push
cmp
jl
push
sub
mov
adc
addr16
xor
push
fdivs
inc
outsl
data16
fmul
lea
jmp
fildl
sbb
lods
dec
mov
mov
adc
in
mov
xor
sub
cltd
mov
data16
movsb
fimull
xchg
iret
enter
push
mov
subl
bound
cmp
fwait
dec
mov
xor
in
pop
mov
lcall
or
mov
push
shll
xlat
es
jg
shl
xor
movsl
and
jne
inc
jmp
jl
lret
inc
and
add
and
addr16
popf
inc
lock
or
pop
sub
cmp
sbb
cltd
cmp
es
push
push
xor
xor
lret
mov
sti
jle
fcoml
daa
pop
mov
cltd
push
jmp
test
xor
xchg
mov
adc
fdiv
out
push
int
mov
jnp
aas
pop
in
lds
fwait
mov
adc
adc
or
nop
daa
shlb
push
aas
das
test
inc
stos
in
outsl
push
and
pop
in
repz
scas
and
pop
jl
and
inc
shrb
std
orb
insl
in
pop
cmpsb
push
shlb
and
fstpl
inc
lcall
in
pop
adc
popf
pusha
out
cmpsb
mov
std
jno
orb
clc
jmp
xchg
insl
jo
movsb
xchg
xchg
dec
sub
xchg
cltd
xor
subb
fcomps
xor
sbb
push
repz
mov
into
sbb
or
inc
mov
mov
jecxz
pop
xor
nop
jo
jno
rcrl
push
in
xor
std
pop
insl
mov
je
jmp
mov
mov
rclb
add
jmp
sub
xlat
lea
in
movsb
add
xor
arpl
ret
dec
insb
cltd
mov
repz
popa
mov
pop
cs
mov
adc
idivb
shr
repnz
cmp
push
add
mov
sbb
push
mov
and
pop
inc
adc
arpl
and
dec
inc
cmpsb
incb
sti
mov
sub
pop
fwait
push
daa
mov
pop
xor
xchg
gs
divl
fdivrs
out
int3
cmp
mov
mov
test
push
dec
pop
jbe
imul
sbb
js
sub
rep
inc
xchg
adc
mov
loop
loope
mov
rcrb
jge
mov
ss
mov
mov
cmp
and
inc
and
inc
loop
add
test
mov
or
pop
push
adc
mov
jbe
cmp
adc
fwait
xor
sub
fadds
xor
jbe
jmp
cmpsl
mov
sbb
xchg
dec
or
pop
js
aas
sub
andb
lret
aas
mov
pop
mov
sub
jge
repz
xchg
ret
xor
dec
cmp
cmp
xchg
and
mov
xor
clc
mov
or
mov
idivl
adc
jnp
add
pavgb
iret
mov
sbb
xchg
dec
inc
shrb
sbb
and
mov
mov
iret
scas
and
xchg
mov
mov
mov
xchg
dec
dec
push
ret
icebp
mov
inc
add
inc
sbb
mov
lcall
lock
sbb
xor
cmc
push
idivl
std
jmp
add
ss
push
inc
movsl
cmpl
xor
icebp
jne
leave
mov
xchg
add
mov
fisttps
mov
call
mov
push
pop
repz
xchg
mov
adcb
inc
stos
movsb
lret
mov
and
inc
imul
orl
xchg
ficoml
pushf
lock
lods
xchg
int3
add
sbb
jo
jmp
push
sub
dec
addr16
sub
mov
divl
hlt
push
xchg
arpl
sub
lods
loop
and
pop
fstl
jg
mov
lock
cmc
cld
push
pop
jae
shr
mov
jp
xor
je
jg
in
adc
mov
iret
test
daa
daa
cmp
stc
enter
add
ret
add
shld
filds
lahf
xor
fwait
jb
stc
and
sbb
push
iret
in
movsb
push
out
stos
cmp
jns
lock
clc
cli
ds
push
daa
xchg
loop
outsb
add
pop
sbb
rcrl
jo
orl
inc
scas
adc
mov
lock
lods
out
jbe
ror
mov
test
jmp
jmp
xor
dec
xorl
jmp
ja
loop
adc
mov
ret
and
jno
ret
mov
out
test
mov
aas
cmp
xchg
pop
cld
int
push
shl
sbb
lcall
xchg
test
out
aas
pop
lock
jns
fmul
push
lahf
adc
notl
or
pop
mov
sahf
imul
gs
mov
pop
jp
mov
in
repnz
cltd
in
js,pt
adc
sbb
xor
mov
and
sbb
pop
sbb
adc
imul
ja
stos
dec
xchg
pop
pop
fldenv
roll
push
hlt
in
in
aam
loope
inc
mov
push
dec
into
cltd
or
pop
cmp
mov
inc
mov
ja
pop
sub
fildl
fwait
adc
cmp
push
call
push
inc
and
sub
ficomps
cmp
mov
add
cvtdq2ps
add
dec
pop
pop
mov
mov
pushf
mov
sub
pop
aam
movl
sbb
fbstp
sti
loopne
push
lods
dec
pop
ret
out
cwtl
insb
ss
push
cld
jmp
ds
repz
mov
sbb
inc
test
daa
pop
pop
push
test
push
imul
leave
les
xchg
jnp
ljmp
loope
aam
sbb
test
jb
pop
cmp
and
adc
push
cmc
mov
jg
leave
add
sub
test
frstor
cmpsb
pop
inc
sti
stos
xchg
cmc
mov
xchg
imul
or
popa
jbe
pop
sub
mov
dec
xor
xchg
adc
xchg
dec
push
pop
sbb
fstps
and
mov
or
cltd
es
add
leave
cmp
ret
sti
popf
mov
les
add
std
fadd
pop
out
mov
mov
fmull
xor
push
xchg
mulb
or
mov
test
mov
out
inc
loope
cwtl
xor
push
andl
add
ja
out
ljmp
pop
cbtw
aaa
inc
cmp
inc
cmp
add
dec
push
push
lcall
jae
out
lds
les
cmpsb
test
add
xor
jle
sub
nop
inc
pop
or
arpl
mov
subb
jbe
xor
lds
dec
je
orb
or
push
shrb
inc
jns
push
fisttpl
fcomi
sti
inc
shll
xchg
inc
push
cmp
pop
sahf
xor
pop
int
cmc
outsl
js
or
jno
mov
adc
xor
pushf
mov
inc
xor
cmc
push
ret
sub
int
fisubrs
push
repnz
clc
pushf
in
daa
push
mov
cmp
jno
fistps
imull
les
outsl
jbe
imul
repz
mov
dec
pop
lcall
insb
cmp
push
pop
pminsw
jae
imul
lds
lods
xchg
push
mov
call
addl
in
mov
jno
lret
fs
dec
or
roll
dec
int
mov
mov
pop
push
xchg
push
fbld
idiv
pop
push
pusha
adc
dec
into
lret
push
mov
or
pop
arpl
and
push
fistps
add
leave
mov
clc
push
mov
inc
popf
imul
data16
jmp
mov
push
aas
pop
xchg
dec
pop
nop
pop
je
cmpb
inc
jb
pop
hlt
orl
pop
jmp
push
bound
test
xor
sbb
pop
adc
aaa
sub
jl
and
out
jge
imul
fadd
push
mov
mov
dec
fcomps
cli
push
test
movsl
push
mov
mov
inc
push
call
dec
and
lea
sbb
movsl
notb
jne
daa
push
daa
mov
cmpsb
andl
or
mov
sbb
cmp
mov
repz
aad
cmp
loope
mov
pushf
cltd
bnd
ret
add
out
aad
inc
jecxz
lret
jg
add
jmp
popf
stc
aaa
inc
mov
lret
xor
dec
out
inc
and
daa
addr16
pcmpgtd
and
imul
or
es
mov
push
and
rcrb
repz
xlat
add
jg
leave
or
jle
aam
fsubr
cmp
push
adcl
mov
sub
imul
mov
in
cwtl
clc
add
inc
not
ja
push
sbb
lahf
mov
in
sbb
or
leave
cld
mov
cmp
adc
out
push
std
pop
cld
shlb
push
or
mov
cltd
jmp
repz
aaa
test
pop
and
add
icebp
pushf
fxch
xchg
outsl
loop
inc
lcall
mov
push
cmpsb
out
mov
sub
int3
aad
mov
jbe
jbe
inc
push
pop
xor
inc
mov
pop
jg
sbb
sub
dec
xchg
dec
mov
xchg
pop
aam
cmpsl
cmp
pop
sbb
push
sahf
cmc
out
mov
scas
int
fildll
inc
inc
aad
aam
add
scas
fsub
mov
aam
test
pusha
xchg
adc
lock
push
inc
sub
repz
add
jge
dec
jae
dec
xchg
xor
in
ds
ss
add
aam
and
add
and
imul
stc
cltd
jb
int3
bound
loope
add
and
xchg
add
inc
pusha
movsl
sahf
aaa
loop
or
inc
push
test
cmp
mov
jg
inc
insl
fbld
cwtl
lods
pop
mov
lcall
je
inc
and
mov
dec
dec
shr
fistps
shl
and
test
fistpll
mov
ja
mov
inc
ss
addr16
ljmp
sahf
in
dec
cmp
jo
out
and
mov
out
jb
in
fisubl
xchg
in
xchg
or
mov
ffree
push
pop
push
lock
stos
mov
cmc
mov
ret
out
cmpsb
enter
repnz
add
sub
into
mov
and
mov
pusha
adc
cmpsb
pop
fnstenv
pop
jmp
es
pop
out
xorl
jo
loop
js
pop
ljmp
xor
xor
dec
adc
addr16
jmp
xchg
mov
ljmp
inc
inc
add
aaa
mov
mov
push
imul
pusha
jne
push
xorl
aad
sub
shlb
inc
ret
dec
out
push
push
fildl
ficoms
xchg
xchg
cmp
fcompl
divb
lock
dec
fsts
popf
push
and
movsl
sti
jne
div
sbb
push
stos
int3
xchg
lock
mov
fwait
popa
sbb
fistl
push
cmpsb
popf
or
sarb
dec
idivb
sbb
mov
in
cmp
cmp
sbb
inc
mov
xor
lds
in
mov
cltd
add
and
stc
xlat
mov
mov
out
cli
mov
in
sbb
lret
cmp
and
inc
dec
scas
pop
inc
aas
jmp
adc
rorl
decl
xor
aam
pop
adc
and
rcrl
fisttps
insl
adc
in
setno
dec
inc
mov
mull
jle
and
mov
mov
adc
mov
push
movsb
pop
pop
and
das
nop
jno
mov
sub
in
enter
test
in
xchg
sub
mov
leave
loopne
pop
mov
adc
inc
sarb
dec
mov
dec
cmp
sti
mov
lret
dec
js
scas
inc
outsb
inc
in
dec
pop
in
xchg
sbb
push
push
and
mov
xchg
out
in
js
or
sub
lods
pop
clc
fs
adc
inc
addl
jno
adc
out
mov
cmp
adc
sahf
pop
lods
adc
in
fstpt
sbb
imul
dec
hlt
movsb
outsb
add
in
sub
mov
cmp
and
sub
xor
push
rclb
andb
out
lods
mov
mov
lea
cmpsl
loop
add
mov
cmc
cmp
jle
ds
test
inc
fsubl
adc
dec
adc
fptan
cs
inc
mov
xor
sub
cmc
inc
xor
and
mov
xchg
dec
and
mov
outsl
jmp
jae
int
adc
xor
dec
xchg
popa
xchg
mov
jecxz
mov
es
mov
lods
jbe
adc
decl
idiv
push
daa
pop
dec
cmpsl
jo
and
mov
xor
push
stos
aaa
sub
push
add
int3
push
lret
ljmp
and
adc
cli
add
outsb
inc
sbb
or
lods
pop
mov
jne
fldt
add
cmc
and
aaa
in
out
sub
adc
sub
xorb
test
insl
out
mov
sub
sti
cmp
jecxz
pop
push
sub
stos
or
jnp
push
pusha
cmp
popf
in
cmp
jecxz
mov
mov
push
cmp
xchg
push
jg
mov
adc
add
inc
test
addr16
cld
popf
jmp
and
mov
jae
cld
xor
push
test
rcl
jo
xchg
loope
or
mov
scas
jge
mov
push
jg
sbb
mov
pop
push
dec
icebp
imul
outsl
jl
movsb
jb
popa
xchg
jle
aaa
push
dec
mov
and
cmp
jp
movsl
xor
pop
inc
in
pop
mov
or
rorl
jle
sarb
or
jmp
push
pop
outsl
push
jl
sub
xor
imul
mov
aad
pop
fnstcw
out
lods
ficoms
sbb
xlat
mov
mov
mov
mov
daa
into
pop
add
cmp
pop
hlt
movsb
jecxz
cmc
or
cmp
mov
pop
dec
xor
shll
into
inc
xor
insl
popa
and
cmp
pop
in
mov
jae
and
jle
jle
xchg
push
cltd
push
imulb
lock
xchg
mov
mov
test
sbb
add
mov
jns
adc
push
sbb
mov
lock
add
xchg
mov
arpl
pop
or
pop
sbbl
add
lret
adc
arpl
and
lahf
push
stc
xor
add
mul
xchg
bound
mov
pop
call
push
add
and
push
cmp
rcrb
insl
popa
mov
xorb
je
loop
pop
in
in
push
test
mov
mov
lahf
subb
scas
scas
inc
sub
std
inc
aaa
cmc
mov
int3
jge
out
xchg
inc
cld
push
sahf
sarb
push
xchg
pop
ds
mov
or
in
inc
mov
mov
jl
jae
pop
in
pop
fcom
xor
popa
repnz
lds
mov
dec
je
fs
and
data16
xchg
data16
stc
xlat
xchg
xor
sahf
pop
sbb
pop
sbb
mov
sub
inc
add
mov
out
adc
aam
sub
add
addb
das
mov
outsl
push
shrl
jo
cld
out
call
jae
cmp
inc
dec
in
cmpsl
xlat
iret
cmpsb
stos
shlb
negl
or
mov
popf
mov
scas
add
lret
inc
push
lret
dec
sahf
and
fistpll
add
cli
jl
jg
popf
sbb
push
fisubs
test
loopne
loope
cmp
es
jno
pop
push
addr16
pusha
pop
stos
push
inc
pop
push
bound
xchg
insl
pop
lret
add
lds
xor
and
xchg
sub
insb
cmp
pop
popf
cmpsl
adc
push
xchg
out
nop
hlt
add
adc
es
fdivl
mov
test
data16
stos
mov
leave
fisubs
movsl
test
mov
dec
pop
hlt
mov
hlt
cmp
sub
in
in
out
mov
sbb
sbb
addl
inc
movsb
mov
jl
mov
xchg
out
test
xchg
push
stos
push
push
xchg
mov
adc
sbbb
mov
jg
xchg
out
dec
rorl
sti
lock
mov
adc
push
mov
scas
hlt
roll
cli
std
jb
gs
repz
lret
out
test
push
dec
fstpl
ficompl
mov
push
add
mov
loope
mov
das
std
lods
push
adc
mov
inc
imul
bound
cmp
sub
imul
in
fmull
jmp
jg
push
stos
mov
adc
aam
xchg
mov
mov
lods
rorl
imul
adcb
out
jmp
xor
insb
test
mov
cmp
add
jbe
ja
fsts
out
xchg
jl
mov
cmp
aaa
pop
leave
cmpb
pop
jne
mov
mov
clc
bound
mov
jbe
jo
sbb
shlb
xlat
cmp
es
test
jp
xchg
neg
lock
mov
push
and
decl
cli
scas
jecxz
hlt
add
sarl
xchg
ss
lahf
mov
cmc
out
data16
dec
xor
ja
mov
in
in
cmp
add
es
popa
push
ret
dec
cltd
push
fcmovnu
test
shlb
leave
sbb
std
xor
and
inc
cs
gs
fisubl
sti
gs
jge
dec
and
pop
jne
push
inc
jne
test
mov
push
subl
push
cmp
clc
mov
ljmp
call
mov
jge
dec
ja
cmpsl
fwait
xor
es
jp
inc
mov
xchg
aas
push
mov
iret
xor
incl
loope
loopne
outsl
mov
adc
popf
or
sbb
rsqrtps
adc
mov
push
pop
xchg
push
jae
pusha
push
inc
repnz
xchg
mov
push
push
in
sbb
es
fists
insb
cmp
rcll
pop
xchg
loop
ss
cld
sub
test
repnz
repz
imul
test
pop
loop
mov
add
sbb
pop
aas
out
cs
mov
dec
int
fsts
pop
or
xchg
rcr
ret
xchg
adc
test
jae
sub
mov
popf
pop
fnsave
out
pop
mov
and
in
rclb
adc
mov
cmp
gs
cli
jp
outsl
xchg
push
adcl
aam
xlat
jmp
das
pop
mov
movhps
lods
or
xor
mov
mov
les
stos
sub
hlt
sbb
mov
and
cmp
xor
aaa
into
stos
push
outsb
ret
lea
jmp
test
or
add
sub
lea
mov
test
stos
fcmovbe
pop
scas
jns
push
incl
sbb
popa
xchg
push
adc
sub
dec
pop
mov
sti
xor
mov
inc
aaa
leave
and
fisubrs
dec
push
inc
ja
ficoms
sbb
lea
mov
mov
arpl
add
and
out
int3
cmp
enter
adc
pop
jmp
mov
pop
adc
xchg
push
or
and
dec
xor
fcmovu
imulb
pop
mov
cmp
fstps
xor
xor
ljmp
cmpsl
inc
dec
xor
cmp
xor
imul
pop
dec
and
jp
pop
jp
shlb
or
xchg
pop
lds
cwtl
xor
mov
out
cmp
cli
es
loope
mov
xor
mov
imul
aaa
sbb
loope
xor
mov
bound
sbb
filds
das
in
push
hlt
ljmp
mov
mull
mov
or
loop
test
lcall
in
xchg
pop
vpmullw
repnz
sahf
aaa
cmpsb
adc
enter
pushf
paddsw
sub
pop
sbbl
movsb
out
push
sub
shlb
pop
dec
aas
jno
jnp
scas
shl
aas
dec
hlt
and
sbb
push
lcall
inc
push
in
xchg
call
sub
decl
pause
dec
test
jg
sbb
ret
es
sti
mov
jge
and
loop
ret
add
repz
dec
rcr
inc
jbe
or
sahf
out
pop
je
jbe
add
mov
cltd
rclb
cmp
jg
jae
fmul
mov
pushf
cmp
fbstp
and
cmpsl
jo
int
aad
loop
into
pusha
pop
aam
mov
mov
ret
cmpsl
adc
movsb
sub
mov
push
rcll
sub
lods
push
adc
mov
and
icebp
lret
out
adc
adc
sbbl
dec
mov
mov
outsb
icebp
test
test
mov
jno
mov
push
pop
inc
push
and
insl
mov
cmp
add
adc
or
adc
pushf
mov
mov
or
scas
mov
rclb
sub
rorb
sub
push
scas
adc
movsb
mov
repz
mov
pop
mov
inc
fsub
and
fldenv
iret
sub
mov
fstps
push
fdivrp
es
cmp
insl
aad
jmp
pop
call
lds
mov
sbb
mov
or
aam
push
or
inc
into
cs
sub
mov
pop
lods
adc
mov
dec
in
aas
movaps
add
insb
into
inc
dec
dec
mov
ret
mov
fnstsw
ret
fwait
xchg
mov
or
cmp
test
and
repz
out
dec
arpl
pop
and
cmpsb
lret
inc
dec
movsb
pushf
inc
sti
je
and
mov
xchg
mov
sbb
shlb
pop
inc
dec
jmp
sbb
les
shll
and
sahf
nop
lds
pop
dec
mov
cmpl
ret
or
mov
dec
mov
lods
aam
rorl
int3
sbb
xor
pop
pusha
add
scas
push
incb
pop
fsubrs
out
stos
adc
sbb
lcall
xchg
mov
fnstcw
dec
mov
jae
cmp
icebp
enter
scas
stc
mul
sahf
or
ret
movsl
adc
fldt
fbstp
mov
mov
jae
xchg
sbb
out
mov
adc
sub
adc
push
pop
xchg
dec
arpl
mov
je
mov
or
pop
dec
and
mov
add
add
and
xor
movsl
push
mov
xchg
lds
pop
sub
push
and
mov
and
in
xchg
xchg
sarl
xchg
mov
push
inc
test
data16
jb
call
push
jle
fucom
push
repz
push
sbb
imul
stos
test
push
sbb
push
fdivrl
xor
clc
leave
pop
pop
insl
pop
pop
shrl
loope
sub
jecxz
aad
es
fs
and
xchg
pusha
test
mov
or
mov
mov
or
mov
mov
aad
jo
mov
cmp
dec
jae
and
out
add
roll
sbb
mov
filds
push
sbbl
insl
shrb
xchg
jmp
and
jno
sub
pop
mov
out
pop
sbb
mov
data16
test
mov
jg
dec
and
cmp
arpl
aam
xchg
call
fldt
rclb
add
cmpsb
repz
push
mov
fstl
sahf
jecxz
pop
pop
pusha
shlb
aad
aaa
sbb
loop
repnz
clc
cmp
imul
xchg
rorl
xchg
inc
cwtl
enter
jbe
rcll
rol
mov
pop
icebp
movsl
inc
lds
icebp
imul
sbb
fiadds
mov
mov
out
inc
cmp
sar
imul
mov
pushf
mov
iret
stc
push
fsubl
dec
imul
push
add
rolb
insb
xchg
cs
and
movl
or
add
in
inc
dec
mov
xlat
cmpsl
xchg
jbe
pushl
into
dec
sbb
pop
nop
pop
les
jecxz
pop
into
pop
mov
mov
mov
pop
iret
dec
loopne
sub
xchg
fiaddl
in
sbb
dec
xchg
icebp
cmpb
pop
out
push
xor
sbb
mov
fnstenv
cmp
cmp
dec
jmp
xchg
dec
pop
pop
inc
xchg
add
jo
in
adc
inc
add
xchg
bound
xor
aam
or
xchg
popa
add
pusha
inc
aam
and
inc
js
int3
push
scas
rcr
arpl
or
scas
sbb
and
mov
push
mov
mov
stos
push
out
out
ja
mov
pop
or
rorb
cli
sbb
adc
aad
adc
out
push
xor
movsl
push
dec
pusha
mov
fwait
jmp
jge
push
aas
or
roll
pop
mov
scas
dec
in
add
xor
xchg
pop
inc
adc
inc
fistl
fwait
sbb
cmpsl
add
lods
fsubs
pop
dec
pop
jecxz
push
dec
loop
or
out
ss
fs
and
inc
pop
js
sti
xchg
push
test
nop
xor
sbb
xor
orb
sub
fcomps
mov
xchg
add
int3
insl
out
jecxz
xchg
or
mov
xorl
pop
cld
jb
punpcklbw
jne
mov
shrl
xor
mov
into
pop
mov
outsb
push
in
xlat
imulb
push
gs
addr16
mov
add
mov
js
mov
lock
mov
das
outsb
adc
fcompl
std
and
dec
stos
fwait
rorb
cmpsl
mov
and
into
mov
dec
sbb
mov
repnz
dec
mov
mov
stos
aaa
cmp
jae
test
pop
jecxz
jae
lods
sbb
or
jnp
dec
or
faddl
loope
dec
dec
push
lret
scas
jecxz
dec
clc
call
jbe
jae
add
push
hlt
cltd
mov
mov
fstpt
xchg
dec
lds
xchg
pop
pop
or
push
ljmp
cwtl
sub
jg
pop
daa
shl
cmp
repz
jb
cld
pop
fdivrl
pop
rorb
cltd
or
loop
je
pushf
lret
or
dec
jl
push
js,pt
arpl
mov
mov
xchg
int3
pop
rolb
ljmp
sub
cmpsb
cmpsb
add
xor
xchg
es
push
es
pop
lret
xchg
mov
inc
inc
cmc
dec
int
pusha
and
cwtl
mov
and
pushl
xchg
icebp
xchg
lret
fldcw
push
out
repz
lcall
divb
inc
stos
xchg
dec
sub
inc
jbe
jecxz
dec
loopne
rclb
pop
mov
mov
or
cwtl
mov
xchg
add
or
adc
testl
sub
pop
pusha
xor
aaa
popa
xor
xor
jo
shll
mov
dec
aas
fistl
mov
jae
dec
jne
mov
rcrb
jmp
xchg
imul
shrb
xor
stos
pop
adc
add
pusha
stos
into
je
notb
out
notb
movsl
xchg
xor
xchg
xor
cwtl
mov
lcall
ret
js
popf
std
ja
daa
in
xor
fnstsw
cmp
lea
jno
addr16
push
call
addb
dec
xchg
dec
jle
arpl
lds
dec
pop
dec
push
jmp
ror
sub
jno
mov
scas
or
leave
sbb
cmpsb
insb
push
cmpsb
xor
fs
nop
pop
std
stos
mov
mov
adc
push
mov
cmp
xchg
es
test
pop
jge
inc
mov
push
clc
sub
aad
pop
xor
push
xor
pop
ds
adc
jo
pop
inc
mov
pushf
rcll
push
jp
daa
leave
sub
ljmp
adc
imul
repz
outsb
mov
sbb
int
ficoml
and
and
bound
mov
add
mov
push
data16
xchg
push
jae
inc
lcall
addr16
inc
or
cmpsb
sar
xor
das
loop
xor
jl
cs
push
or
sbb
lret
dec
push
fs
sub
or
rcrb
inc
popf
sti
jnp
xchg
jnp
push
and
in
add
stos
sub
clc
mov
adc
xor
movsl
or
push
xchg
les
gs
scas
ret
xchg
mov
add
mov
sub
data16
stos
ror
repz
sbb
cmp
inc
inc
out
mov
and
aas
pop
or
push
xchg
gs
sti
adc
es
xlat
fisubs
sub
dec
inc
rorl
jb
loop
jp
lret
mov
adc
mov
pop
pop
pop
jl
mov
xor
decb
xchg
xor
mov
aad
fistl
insl
adc
mov
add
jge
and
rolb
xchg
in
mov
fs
pop
popfw
dec
cmp
push
cmp
sub
test
jns
inc
xchg
in
rorl
pop
xchg
or
fdivp
mov
test
jmp
cltd
sti
repz
movsb
push
pusha
addr16
ret
sbb
mov
fistpl
lahf
add
insl
ss
or
add
cmp
mov
mov
pop
and
mov
cmp
out
inc
pop
pop
push
cs
aaa
repz
pusha
das
mull
xchg
jge
or
jne
outsb
fs
dec
gs
dec
ret
push
in
xchg
mov
mov
or
js
movsl
sub
sub
adc
push
xor
xchg
cmpsb
addl
pop
into
dec
icebp
test
int3
adc
lods
rcrl
push
cmpsl
ja
push
loopne
or
lock
popf
ror
test
sub
shrb
or
dec
pop
mov
js
jg
loopw
sbb
mov
subl
xor
push
test
xorl
inc
inc
shr
mov
in
mov
push
je
repnz
cmpsb
cmp
jp
xor
sub
jmp
push
hlt
push
xchg
pushf
add
outsl
jo
popf
xlat
aaa
enter
cmp
sub
cli
out
cmp
sbb
push
in
xor
roll
add
sub
and
sahf
int
pushf
or
testb
xor
test
jnp
scas
clc
pop
hlt
fdivl
or
femms
and
jbe
fdivl
dec
mov
sbb
cmpsb
push
cli
mov
lahf
loopne
mov
sbb
lds
jg
movsl
xchg
inc
jns
icebp
xor
in
or
dec
mov
cmpsb
xor
pop
jnp
sub
dec
mov
fnsave
mov
lods
inc
adc
in
out
jae
call
cmp
imulb
movsb
rdpmc
nop
push
hlt
scas
hlt
xchg
adc
lret
sbb
mov
mov
ret
dec
mov
cmpsl
enter
test
mov
aaa
xchg
dec
sub
adc
jle
mov
push
shll
rorl
ss
jae
cmp
sar
push
xor
das
push
int
push
inc
mov
rcrl
int
jl
mov
pop
ljmp
movsb
push
popa
incl
pop
ja
sbb
cmp
outsl
or
clc
aaa
adc
bound
add
lods
inc
addr16
xchg
int
dec
stos
nop
pop
cltd
movsb
movsb
cli
sbb
mov
outsl
mov
dec
popa
out
and
inc
adc
outsl
xchg
xchg
ficoms
push
xor
inc
shrb
call
or
pop
cli
cs
loopne
mov
pushf
mov
int3
or
in
mov
movsb
fildl
push
dec
mov
inc
sahf
xchg
mov
ffree
fnstcw
adc
xor
aaa
fstl
mov
sub
inc
test
faddl
mulb
jmp
and
mov
dec
iret
in
iret
xchg
stc
sub
and
push
mov
push
xor
xchg
or
sub
and
in
xchg
mov
mov
add
in
fiadds
int
mov
jl
push
sub
enter
shl
inc
dec
loop
push
adc
pop
adc
call
lods
repnz
inc
pop
or
adc
add
dec
test
mov
out
jecxz
test
bswap
push
lret
test
dec
fmul
mov
les
xchg
decb
push
fisttpl
dec
hlt
lahf
mov
pop
xlat
dec
call
data16
aaa
or
xor
sub
jo
int3
jle
idiv
sti
or
call
mov
lret
pop
notb
xor
adc
fistpl
pushl
lret
pop
push
sub
test
inc
jns
or
sbb
mov
cmpb
cltd
mov
push
fstpt
testb
xchg
xor
lret
ret
mov
cs
push
adc
xlat
repnz
xchg
push
dec
mov
jmp
xchg
icebp
xor
xorl
add
adc
add
cmp
test
or
xchg
mov
lods
stc
mov
in
test
or
push
and
adc
cs
out
xchg
or
mov
lret
fs
fwait
rep
sbb
loope
xchg
xchg
pop
mov
push
xchg
mov
mov
lods
inc
or
loopne
mov
sar
lret
cli
movsb
idivb
es
scas
cltd
mov
subb
and
xor
cmp
shll
lret
repz
cmpsl
shrl
push
jnp
leave
movsl
sbb
xchg
jp
mov
push
inc
adc
and
loopne
fxsave
push
mov
scas
dec
sti
std
loope
test
aas
cmpsl
sbb
test
pop
pop
push
shll
pop
xor
jbe
push
out
adc
shlb
jp
mov
popa
movsb
pop
xchg
leave
lods
cmp
das
jbe
and
mov
push
ret
ret
xor
or
fiadds
pop
cmpsb
mov
xor
pop
push
pop
jg
dec
enter
enter
fcomps
test
sub
stc
sahf
lods
outsb
loop,pn
mov
jp
sarb
cltd
lcall
mov
xlat
adc
aas
hlt
sbb
xor
std
dec
cld
mov
out
out
jmp
sub
push
and
test
sbbb
xor
gs
das
stc
cwtl
mov
jno
popa
and
mov
arpl
add
mov
sahf
fs
mov
mov
outsb
jns
sub
or
pop
adc
dec
test
pop
xor
xchg
shrl
mov
and
pop
hlt
push
sbb
insl
jns
or
cmpsl
test
and
cmp
sub
in
push
jb
adc
cmpsb
addl
iret
sub
sub
inc
mov
js
movsl
mull
push
pop
cmpsl
jb
jecxz
pusha
mov
movsl
shrl
loope
jbe
push
bound
rclb
add
repnz
lock
clc
mov
ljmp
cmp
adc
stc
xchg
mov
mov
es
lret
cli
mov
fildll
mov
push
xor
test
dec
cld
xchg
pop
mov
fwait
pop
test
mov
push
popf
xor
cmp
xor
push
es
mov
push
popf
icebp
ret
loope
and
stos
nop
mov
pop
sub
arpl
xchg
int
dec
inc
and
cltd
lods
pop
mov
add
xor
movsl
sub
in
outsb
pop
loope
rcll
in
aam
std
mov
cli
mov
out
outsb
inc
cs
inc
icebp
pop
pop
aaa
mov
jp
dec
and
in
mov
lahf
mov
ffree
jnp
mov
xor
push
fdivrs
addr16
lods
imul
add
fs
jns
in
loope
add
icebp
clc
fisubl
lods
xlat
jl
outsb
mov
andl
add
ja
in
xchg
adc
pop
punpckhdq
es
out
test
arpl
sar
ljmp
dec
jnp
mov
push
mov
jmp
jnp
lods
pop
adc
in
mov
orb
mov
idivb
idivb
cltd
lret
xchg
lods
sub
mov
push
push
jae
inc
imul
loop
mov
or
jmp
jne
cwtl
and
fdivrs
jne
daa
pop
fsub
jb
es
xor
int
add
mov
in
ret
lock
cmpsl
mov
cmp
lret
mov
inc
rcrb
dec
push
jno
ret
jnp
comiss
xchg
in
push
pop
lret
lea
fiadds
lods
es
push
or
fwait
mov
insb
and
mov
aaa
imul
lock
repnz
adc
pop
xchg
es
sub
add
sarb
in
movl
sub
lret
cmc
das
xchg
inc
jp
stos
sub
fdivrs
cld
adc
lds
mov
ss
mov
and
sub
add
jbe
mov
stos
dec
mov
push
adc
cmp
mov
clc
mov
addr16
add
mov
scas
sub
pop
insl
test
lahf
and
lock
sub
test
ret
lods
lock
or
or
dec
lret
sub
dec
jecxz
pop
les
lcall
add
daa
mov
mov
sub
loopne
jg
data16
jecxz
mov
sbbb
movsb
out
pusha
sbb
cld
push
cltd
push
push
cmp
sub
xchg
fbstp
mov
mov
mov
or
cmp
std
pop
aad
cld
and
jo
out
mov
jnp
sub
xchg
xorb
mov
xor
rcll
fucomip
sub
subb
jmp
ret
xchg
nop
mov
inc
add
xchg
jmp
data16
aam
jg
jge
popa
dec
and
or
xor
loope
and
sbb
into
out
outsl
jnp
pop
icebp
jmp
add
adcl
fiadds
push
pop
les
xlat
jno
test
fwait
xchg
and
stos
mov
mov
out
mov
test
lods
lret
mov
lret
repnz
inc
ret
xor
lcall
inc
mov
aam
jl
aas
fidivrl
aad
mov
in
popl
and
sar
rcll
lret
jno
jmp
pop
mov
lock
xchg
jge
jmp
loopne
xchg
xchg
sqrtps
pop
mov
out
push
mov
fs
mov
push
inc
or
inc
cmp
mov
xchg
dec
test
lret
repnz
adc
pop
out
cmpsb
pop
adc
aas
dec
mov
sti
mov
inc
xor
mov
xor
sub
fs
loopne
ds
hlt
xor
push
dec
mov
dec
pop
or
xchg
push
insl
scas
mulb
push
and
xor
xchg
std
xchg
ret
jo
sarb
pop
scas
sub
lods
fisubs
jns
mov
fldt
inc
mov
mov
xchg
inc
loope
repz
sbb
xchg
and
aad
or
add
jle
out
inc
pushf
movzwl
cli
push
in
xchg
imul
lea
mov
idivl
popa
je
fsts
push
mov
inc
test
cli
in
shr
or
cli
out
xchg
adc
sub
mov
pop
jl
mov
push
push
mov
sbb
mov
pop
rclb
in
aaa
mov
adc
lahf
loop
addr16
ret
scas
add
sbb
lret
mov
mov
xlat
cld
por
add
fsubrl
mov
imul
inc
rol
lods
repnz
scas
adc
and
pop
or
xchg
adc
lcall
cmp
leave
das
mov
mov
mov
add
and
test
outsb
ljmp
dec
arpl
mov
in
int3
jae
loopne
ljmp
adc
mov
inc
mov
std
sub
cmp
jns
xchg
rorb
fstl
jmp
out
mov
stos
arpl
shrb
fcoml
pop
jl
cmp
jb
jnp
lahf
cltd
mov
aas
shrb
sbb
jae
lods
xor
cld
mov
xchg
sbb
sub
cmp
push
mov
mov
mov
add
and
lcall
jmp
dec
notb
dec
clc
mov
gs
shll
outsl
stc
pusha
and
sub
cmp
mov
inc
mov
mov
loope
mov
mov
stos
mov
dec
scas
or
out
aaa
test
push
test
incb
nop
push
aam
and
and
sbb
in
push
lock
pop
loope
out
and
mov
ja
dec
mov
notl
adc
mov
mov
push
gs
adc
jns
call
mov
lea
call
scas
sub
mov
xor
test
mov
cmpsb
unpcklps
lret
cmp
lea
adc
out
inc
fisubl
mov
mov
adc
fdivs
mov
xchg
cs
andb
sub
sub
pop
mov
ss
int
mov
pop
jno
sbb
dec
mov
popa
test
pushf
cld
scas
loopne
aas
mov
jle
outsl
into
clc
fwait
repnz
xchg
pusha
and
pushf
fcoms
jb
jmp
xorb
xchg
pop
lock
sbb
jge
jp
into
bound
int
pop
xor
sub
inc
cltd
xchg
xchg
dec
movsb
pushw
loop
jmp
sbb
xchg
mov
fiaddl
xor
xor
add
mulb
and
call
ljmp
sub
aad
aaa
push
dec
frstor
push
sar
les
inc
aaa
sbb
out
inc
or
sarb
jle
jno
cmpsl
ljmp
xor
mov
mov
js
jne
xor
inc
jnp
push
lods
push
dec
mov
fwait
xchg
mov
push
cmpsl
addr16
adc
or
dec
lahf
bound
test
test
and
jnp
popf
push
inc
push
sub
pusha
into
lods
inc
js
out
sbb
mov
cmpsb
add
pop
stos
add
out
xorl
jnp
hlt
shlb
scas
jb
xlat
inc
sti
cmpsb
lods
mov
pop
xlat
xor
xor
push
clc
in
js
ficomps
nop
adc
pop
and
and
cmc
ficomps
out
push
movsb
and
adc
or
hlt
cmpsl
les
pop
pop
jae
jne
cmpsl
lahf
cmpsb
mov
adc
outsl
test
je
pusha
fs
adc
ficoms
cmp
mov
sub
clc
aas
js
xor
mov
xor
int3
movsl
pop
push
imul
test
pop
ret
es
fistpl
mov
movsl
gs
es
fbstp
loopne
inc
dec
call
pop
push
mov
adc
or
andb
pop
xchg
test
adc
mov
jl
dec
xor
inc
les
xlat
add
cmp
repz
adc
test
sbb
pop
xchg
push
add
add
hlt
stc
hlt
gs
movsl
or
lret
xchg
lcall
and
adc
push
aad
das
mov
add
jg
in
in
pusha
push
loop
add
jle
push
xor
mov
cltd
nop
push
pop
and
dec
mov
outsl
cmc
pop
adc
cltd
pop
adcl
sti
mov
arpl
es
fcmovb
adc
mov
adc
xchg
rorb
adc
push
leave
and
lods
cmc
sub
push
outsb
sqrtps
cmpsl
cmpsl
mulb
add
pop
xchg
out
aaa
repz
push
push
stos
sub
mov
mov
dec
or
lods
push
jecxz
ffree
icebp
pop
ret
fsubrs
jno
in
daa
pusha
insb
push
mov
mov
mov
push
mov
mov
xchg
push
mov
int
call
mov
mov
inc
sbb
mov
dec
mov
mov
loope
orb
ffree
inc
testb
push
jne
test
xor
jo
cmpsl
mov
mov
sub
pop
pop
hlt
aam
fisubrl
repnz
cmp
ss
dec
movsl
dec
xor
mov
lret
ret
mov
inc
ljmp
fsubrs
int3
add
loop
sbb
daa
inc
push
add
xlat
aaa
push
xorb
fildll
push
mov
pushf
mov
bound
push
pop
clc
out
mov
jo
push
or
add
xor
aas
stos
inc
cs
cmp
pop
mov
and
mov
inc
pop
mov
fcompl
fidivs
adc
push
jl
inc
fstpl
jo
negb
dec
or
xor
jns
rcl
movsl
ljmp
lahf
sahf
decl
sbb
sti
pop
sub
mov
sahf
add
mov
and
sub
push
jmp
mov
js
mov
pop
push
andl
mov
cmp
mov
xchg
insb
adc
mov
mov
or
dec
jp
inc
insb
lahf
mov
fsubrs
sbb
dec
test
cli
imul
dec
adc
std
int
push
fistpll
stos
rcll
pop
ffree
insl
push
cmpsb
xchg
popf
mov
inc
ljmp
out
pusha
std
shr
dec
aaa
test
xchg
ret
subl
pop
pushf
xchg
add
sbb
mov
stc
mov
enter
inc
adcb
lret
mov
sbb
or
add
int3
sub
dec
enter
repnz
pusha
add
xor
and
insb
jge
popf
stc
mov
notl
gs
jns
add
cmp
or
or
out
adc
insb
pop
add
hlt
imul
sub
mov
out
xor
imul
pop
xor
or
jmp
cltd
clc
sub
imul
xor
and
out
aam
ja
imull
in
xor
mov
dec
mov
fcompl
xor
adcb
add
shrl
lods
and
leave
xchg
jns
nop
cmp
sbb
sub
jne
inc
push
jb
cs
sbb
cmp
fwait
test
push
xor
fdivr
in
jmp
aaa
aad
stc
jge
mov
lods
push
push
push
fldcw
nop
cmpl
push
mov
jle
or
je
xor
push
jecxz
mov
bound
ds
fnop
sub
pusha
or
mov
and
pop
add
or
dec
inc
or
loope
shl
xor
lea
cld
mov
xchg
and
or
bound
push
fmull
hlt
lods
pop
and
shrl
mov
cwtl
mov
push
push
lods
cmp
inc
dec
jmp
sar
and
ja
idivl
mov
mov
stc
aas
mov
inc
pop
pop
pop
push
fsts
aaa
jo
in
xchg
push
insb
push
scas
add
and
mov
inc
jne
leave
and
mov
scas
push
adc
inc
jnp
cltd
push
sbb
call
cmp
int
jmp
mov
fsubp
and
adc
add
adc
jo
and
push
rcll
dec
ljmp
or
andl
insl
inc
dec
hlt
test
mov
push
inc
fs
out
pusha
shll
ret
cltd
sub
fildl
rcll
jge
mov
divb
mov
lods
fwait
cmp
mov
bnd
stos
and
pop
les
mov
inc
in
push
dec
in
adc
mov
test
ss
aas
orl
iret
cmc
subl
adc
aad
sub
mov
pop
mov
into
mov
pusha
xchg
and
jbe
mov
in
into
mov
adc
adc
inc
mov
fildl
ja
adc
outsb
stc
adc
adc
mov
and
sub
int3
int3
dec
shlb
bound
test
sub
imul
jno
xchg
aaa
fdiv
popf
mov
dec
insl
inc
cmp
adcl
daa
fbld
pushf
pop
sbb
sub
pop
jne
xchg
jne
mov
sbb
sub
outsl
hlt
sar
nop
mov
orl
xor
push
push
lahf
mov
jmp
pop
add
push
pushf
lret
jmp
mov
sub
push
mov
lret
push
jl
add
fwait
jecxz
xor
mov
inc
clc
jp
pusha
or
call
cmp
mov
adcl
sub
and
loope
rolb
out
imul
fnstenv
lods
loop
stos
mov
ret
inc
sbb
adc
cmpsl
aaa
cvtdq2ps
fadds
inc
ror
imul
adc
mov
mov
loop
int
call
xlat
cs
fs
iret
sub
out
adc
sub
xor
ja
adc
mov
xchg
adc
divl
shl
int
ffree
dec
sbb
insb
imul
icebp
test
inc
xchg
je
insb
cmp
js
mov
movl
addl
cli
adc
inc
mov
xor
ss
lret
cmpsb
push
pop
int
pop
int
mov
cltd
xchg
inc
adc
cmp
xchg
mov
jne
inc
aas
test
cld
std
ljmp
mov
mov
jbe
dec
cld
mov
stos
inc
filds
test
cmpsl
or
int
add
movsb
or
inc
sbb
sbb
out
add
cld
cs
fwait
repz
rcll
ds
pusha
inc
xchg
push
cltd
inc
sub
enter
in
dec
push
out
xchg
push
mov
xchg
insb
jmp
xchg
out
mov
mov
mov
imul
or
fnstsw
sub
mov
aam
pop
lods
clc
pop
xchg
jmp
cmp
outsb
mov
nop
cmpsb
je
leave
mov
and
xlat
and
push
ja
pushf
popf
sbb
adc
outsb
jl
inc
jecxz
subb
stos
inc
jecxz
rolb
push
je
insl
pop
pop
adc
adc
or
sub
shrb
imul
lods
not
outsb
and
mov
sub
div
xchg
movsl
arpl
and
push
jecxz
pop
je
int
add
pop
push
fstpt
std
movsl
inc
sbb
lcall
dec
jb
pslld
and
and
je
add
jl
nop
and
faddp
stc
lea
ds
sahf
xor
addb
mov
jmp
add
imul
sti
in
loope
push
xchg
fiaddl
fcom
call
jp
loopne
push
pushf
push
dec
dec
cmpsb
les
pop
add
movsb
aas
fidivrs
out
cmp
vpsadbw
sub
jge
repnz
cwtl
ss
mov
push
daa
pop
xor
subb
lock
push
pusha
popf
or
mov
lea
repz
push
pop
mov
or
pop
pop
test
or
sahf
jl
push
and
add
in
js
stos
sub
stos
and
js
cmp
dec
push
mov
pop
loopne
xchg
xchg
xchg
xchg
jmp
jl
sub
ljmp
in
out
jecxz
cmpsl
dec
leave
and
adc
push
mov
arpl
addr16
aaa
mov
ja
movsb
fsubrp
push
pop
clc
fcoml
jge
inc
xchg
clc
push
jle
cmpb
cli
js
pusha
scas
mov
js
mov
mov
fucomp
std
cld
dec
inc
test
sbb
popa
pop
and
clc
movl
xchg
jno,pt
outsb
bound
dec
sub
call
cmpsb
sbb
mov
xchg
sbb
loope
dec
xor
add
xor
mov
outsb
dec
icebp
push
lea
lock
shrl
sbb
aam
jge
loop
mov
loopne
push
test
xor
pop
inc
and
dec
push
push
subb
insl
cmpsb
mov
clc
mov
cmp
push
push
sbb
cmp
or
fstps
sub
xlat
jmp
in
int3
push
out
push
xor
je
test
and
cli
movsl
test
jo
into
leave
mov
pop
or
rolb
addr16
pop
iret
or
sbb
sub
pop
movsb
sarl
jecxz
add
ja,pt
lcall
push
ret
in
test
fwait
ret
roll
out
xor
fs
mov
push
mov
sar
pop
fs
dec
icebp
dec
in
aas
ss
scas
mov
cmp
stc
hlt
pop
and
jno
xor
mov
sbb
cmc
adc
and
sahf
inc
mov
mov
shrl
aaa
ja
outsl
rcll
pushf
push
ret
dec
pop
add
or
lret
in
jns
inc
aas
pop
pop
pslld
and
mov
in
xor
xchg
mov
lods
test
mov
inc
out
pop
jmp
fstpl
xor
pop
sbb
sub
outsl
dec
and
cld
popa
cmc
push
xor
inc
mov
jmp
in
jg
pop
leave
pushf
adc
scas
sub
cmp
sahf
xchg
push
outsl
fs
mov
sbb
loope
faddl
gs
pop
mov
pop
out
aaa
pop
repnz
fnsave
push
hlt
mov
lods
or
xchg
cmp
cmp
sub
popf
push
in
out
lcall
test
sbb
and
jp
jns
push
rolb
mov
dec
sub
sub
pop
mov
rcrl
adc
sub
sbb
mov
fmul
inc
xlat
dec
in
pushf
jmp
xchg
and
out
lcall
inc
pop
mov
out
inc
fldenv
xchg
mov
mov
stc
mov
push
fidivrl
push
inc
xchg
mov
push
andb
inc
pushf
cwtl
mov
sub
mov
fdivs
mov
inc
pop
enter
pop
push
stos
and
dec
mov
out
scas
fdivrl
ss
popf
jle
gs
cld
enter
pushf
pop
mov
cmp
movsb
push
popa
jg
xor
pop
aaa
mov
pop
push
cld
add
mov
cli
ljmp
cltd
outsb
and
shll
gs
cmc
inc
sbb
lret
push
outsb
push
lret
cmp
movsb
jno
into
pusha
lds
rolb
cmp
jp
mov
punpckhbw
mov
fnstcw
iret
aaa
test
mov
cmp
fwait
cmp
jbe
jbe
add
jne
ljmp
scas
mov
stos
pusha
push
cli
popf
sbb
mov
fstps
jo
mov
jae
xchg
or
imul
cmp
bound
xor
nop
mov
movsl
and
dec
add
pop
jno
inc
inc
imul
movsl
push
sub
popf
sub
fwait
jp
je
fsubl
cmp
xor
and
aaa
aas
mov
fsts
fidivrl
jg
popf
mov
leave
jae
jae
jne
cltd
call
fstpl
sti
or
lret
xchg
jp
icebp
aaa
add
sub
jne
jo
jge
dec
mov
push
stos
mov
decb
nop
push
jg
jge
jmp
imul
adc
jp
in
dec
mov
push
inc
xchg
mov
mov
jne
xlat
out
cmpsl
sub
test
outsb
dec
dec
mov
rorb
xlat
mov
jp
adc
fucomp
sti
inc
sub
sbb
mov
outsl
testb
adc
rclb
mov
ss
ljmp
inc
xchg
pop
xor
aaa
verw
clc
mov
xor
jbe
mov
ror
fists
int3
lahf
es
outsl
cmp
movsb
mov
mov
pusha
or
negl
lahf
ja
ljmp
jle
sbb
push
lret
loopne
stos
ret
cli
aaa
outsl
inc
jno
inc
pop
pop
outsl
test
push
and
loopne
pop
ljmp
sub
xchg
mov
sub
sub
nop
fcomp
lahf
xchg
or
jb
subl
cmovo
xor
shr
jb
lock
pop
loopne
pushf
xor
pop
sub
fisubrs
popf
lcall
lock
je
pop
jp
iret
hlt
cli
ret
test
outsl
add
push
inc
stos
in
jbe
adc
jne
movsb
jbe
das
dec
and
enter
std
mov
cmp
pop
mov
mov
das
adc
insb
adc
pop
pusha
idivb
hlt
repnz
mov
sub
mov
adc
mov
cmpb
adc
jle
xchg
pop
pop
test
jns
xchg
jne
jge
repnz
movsl
ljmp
dec
push
fwait
bound
enter
nop
or
xlat
adc
pop
cmp
lock
ljmp
mov
fidivl
adc
mov
stos
in
adc
pop
push
loop
push
jbe
js
data16
dec
jecxz
test
adc
stos
pop
aam
jg
fldl
adc
int
stos
fldl
jnp
shll
nop
push
and
call
stos
pop
sbb
pop
jae
dec
fiadds
mov
inc
push
hlt
mov
ret
sub
add
and
repz
cltd
int
pop
push
cmc
add
leave
cmpsb
mov
stc
xor
add
or
out
sti
les
or
pop
faddl
xchg
sar
push
sbb
hlt
sbb
cltd
lods
repz
fsubrs
scas
insl
and
popf
xor
in
jbe
push
pop
dec
or
stos
scas
mov
andl
xchg
mov
ret
jmp
pop
lods
push
lret
aad
pop
in
shlb
fsts
xchg
imul
lock
and
xchg
idiv
inc
std
xchg
xchg
test
mov
add
pop
cld
sahf
les
sbb
push
js
fdivr
jnp
stc
fstp
call
shrl
add
mov
adc
jnp
or
test
mov
lods
aaa
cltd
dec
popa
dec
shl
ss
push
mov
das
notb
icebp
in
mov
lcall
dec
test
jmp
outsl
iret
aas
cs
fwait
pop
ds
stos
fcomip
into
cltd
int3
pusha
rclb
xchg
pop
sarb
rorb
jns
out
jmp
adc
es
xchg
mov
aad
push
pop
push
add
dec
xchg
sbb
mov
add
push
sub
push
push
pop
inc
fwait
adc
push
inc
adc
inc
scas
icebp
pushf
adc
das
fldenv
cmc
insl
out
test
pop
dec
sbbl
mov
jb
mov
or
shll
xchg
int3
repnz
push
inc
mov
out
andl
xchg
and
or
pop
and
outsb
inc
fnstcw
lret
cwtl
mov
in
cmpsl
pop
or
adc
mov
push
movsl
insb
cmpb
cs
xor
mov
inc
movsl
sbb
push
hlt
xchg
jg
insb
popf
hlt
xchg
nop
inc
ret
xor
rcr
lret
test
cs
or
cmp
sub
cmp
sbb
cmp
or
inc
push
pop
outsb
pop
inc
dec
dec
rolb
and
xchg
xor
xchg
dec
push
and
lret
std
jmp
cli
popa
sbb
dec
push
loopne
jg
movsl
test
js
sub
in
push
imul
idiv
shl
xor
dec
es
mulb
fsubr
out
enter
jge
das
mov
les
nop
sub
mov
loopne
decl
mov
and
sarl
lods
lret
mov
scas
push
jge
inc
aam
pop
pusha
sti
in
gs
xchg
dec
pop
pop
cwtl
jge
fwait
shl
ret
dec
push
pop
add
cmp
mov
inc
sbb
mov
jmp
lcall
lahf
adc
fistps
frstor
mov
sub
cmp
dec
fcmovbe
rcrl
xchg
cwtl
lds
jns
es
cld
ficoml
xchg
cli
test
shlb
xchg
cmp
add
cmc
or
pop
or
cmp
pop
rcrb
lods
push
inc
lock
test
push
xor
movsl
xor
outsl
adc
mov
not
ja
shll
jl
les
xor
popf
mov
cmp
lods
insb
movsl
adc
icebp
pop
xchg
inc
xchg
flds
pop
jns
out
mov
int
xchg
jge
ds
mov
and
adc
rorb
test
cli
pop
adc
push
add
add
mov
mov
cmp
pop
push
sub
fildl
insb
es
stc
lock
mov
mov
dec
movb
and
jmp
sub
movsb
outsb
lods
xchg
insb
in
xchg
sbb
sub
jo
xor
or
mov
lods
stos
pop
or
xchg
mov
insl
insl
push
jne
insl
mov
popa
pusha
mov
insl
orl
mov
ficomps
popa
sbb
pop
fbstp
repnz
cwtl
repnz
je
inc
xor
dec
loopne
and
jo
test
pop
xor
adc
xchg
das
xor
or
sti
mov
pop
push
daa
jae
fsubrl
mov
jne
pop
mov
jo
adc
dec
arpl
mov
add
xorl
gs
mov
inc
sub
inc
shrb
push
in
push
add
sub
add
imul
scas
ljmp
xchg
mov
sub
add
push
mov
push
scas
jne
ja
add
mov
or
push
gs
pop
scas
imul
out
not
add
dec
add
push
bound
xlat
and
aad
cli
mov
outsb
testl
int3
adc
iret
sbb
and
xchg
les
js
cld
push
cli
sub
xor
movsb
flds
sbb
push
test
rorb
xchg
mov
dec
sahf
jns
bound
sub
xchg
loopne
and
add
icebp
pop
fwait
inc
data16
and
adc
paddusb
addr16
icebp
and
outsb
push
pop
pushf
mov
jecxz
cltd
mov
fwait
cmp
push
sbb
pop
loop
push
stc
and
loopne
pusha
xchg
push
xchg
cmp
jecxz
popf
mov
jecxz
jmp
pop
sub
mov
lcall
insb
bound
cmp
mov
jae
mov
xchg
out
int
in
xchg
aam
mov
sahf
mov
repz
lock
jae
mov
fstpt
and
xor
dec
lea
adc
pop
cmp
test
les
sub
pop
shlb
fdivl
dec
inc
outsl
aam
xor
sub
lock
sbb
in
cmp
cld
mov
sub
pop
in
fs
pushf
sbb
lods
xor
popf
sub
jge
xchg
in
mov
dec
cmp
xchg
mov
jle
and
dec
fs
mov
cld
ja
xchg
dec
fstpl
dec
mov
cmp
push
add
loop
dec
out
push
inc
and
inc
clc
in
and
pusha
sbb
add
jne
jno
jecxz
jno
cmp
add
ljmp
jo
add
pop
or
ds
jmp
adc
daa
outsl
sbb
sti
mov
or
mov
push
mov
roll
mov
lahf
pop
push
mov
pop
push
jno
mull
scas
cmpsl
fstl
sahf
add
pop
push
jecxz
iret
fisubs
cmpsb
int3
sbb
inc
sub
stos
out
cmp
mov
inc
xchg
dec
lods
adc
movups
outsl
insb
insl
jl
fcoml
dec
sub
add
sub
out
dec
push
roll
cmp
sbb
mov
cld
out
fimuls
mov
stos
popl
out
orl
imul
rorb
adc
pushf
stos
add
jo
mov
cmpsl
stc
clc
jge
and
xchg
push
outsl
dec
lds
rcl
sbb
xchg
sbb
jb
push
xorb
sti
fstl
movsb
jbe
mov
mov
jb
or
sub
sarb
rorl
arpl
cmp
sbbl
xor
cmp
inc
adc
pop
repnz
pop
add
out
fs
dec
test
cmpsl
xchg
xorb
insl
sub
dec
cmpsb
mov
push
sub
mov
lods
loopne
out
jecxz
ja
pop
xor
enter
out
push
pop
dec
cmp
cmpsl
adcl
cwtl
sbb
xor
shl
pop
inc
push
dec
mov
add
inc
ja
dec
xchg
push
inc
fidivs
pushf
out
lcall
or
cld
cmp
push
scas
fmull
jle
in
insl
xchg
lea
xor
lcall
outsl
push
out
inc
push
xchg
imul
fldt
and
sub
shl
mov
imul
repnz
dec
enter
aaa
or
dec
jne
add
pop
aad
push
in
cmpsl
adc
mov
xor
adc
sti
inc
enter
sahf
into
iret
orl
sub
xchg
dec
shlb
jp
mov
pop
adc
clc
pop
or
arpl
xchg
push
lret
dec
movsb
add
stos
cmpsl
lret
les
xchg
xchg
scas
iret
add
sbb
stc
imul
jmp
loop
pop
dec
leave
ljmp
sarl
movsl
fists
rorb
test
push
das
and
cmc
enter
mov
daa
negb
sbb
sub
inc
add
roll
mov
mov
push
xchg
insl
inc
adc
push
cmc
adc
mov
orl
daa
out
and
cmp
hlt
mov
pop
sub
jp
out
dec
inc
int
insb
sarb
push
inc
push
fmul
sahf
es
repz
add
push
adc
dec
ficomps
decl
dec
inc
loop
nop
add
fdivrs
mov
add
es
loop
mov
ljmp
mov
xchg
dec
sarb
fwait
lahf
dec
nop
xchg
jge
sub
insb
dec
in
icebp
addr16
cs
cmpsl
out
fs
in
and
scas
repnz
push
test
mov
out
sub
cmp
mov
les
mov
or
xor
mov
sarb
push
push
rolb
mov
fwait
sbb
into
cld
popf
push
push
scas
adc
pop
or
cltd
add
in
fisubl
test
inc
ret
add
xchg
je
fwait
sub
ss
or
add
dec
mov
shll
dec
out
push
clc
addr16
inc
mov
mov
cmpsb
lcall
rcrl
pop
xor
fisubs
jne
adc
cmp
xchg
xorl
cmc
add
leave
hlt
xor
ja
imul
repnz
sub
cmp
jae
mov
mov
ret
mov
pop
cs
test
cmpsb
cmp
mov
dec
and
inc
adc
ss
push
cmp
adc
or
dec
pusha
lcall
out
shr
mov
and
add
add
cmp
stos
and
movsb
and
prefetchw
test
mov
js
jle
xchg
imul
xor
sub
icebp
lods
mov
aas
dec
xchg
cli
dec
xchg
and
loopne
fwait
mov
mov
inc
add
aad
lods
cmc
or
inc
push
adc
icebp
mov
add
sbb
loop
xchg
mov
in
xorb
mov
jo
jno
iret
cli
push
outsl
push
popf
sbb
jne
je
test
or
xor
out
inc
pop
mov
fs
loopne
push
gs
scas
ljmp
imul
insl
insb
add
stos
int3
xchg
sbb
notb
mov
xchg
dec
shll
or
pop
lock
mov
dec
xchg
mov
fstps
popf
jno
mov
mov
pop
or
add
push
addr16
mov
mov
icebp
shl
movsb
into
stos
and
cmpsl
cmp
xchg
shrl
shll
lret
ret
in
cmpsl
push
jno
lahf
xchg
sub
loopne
in
and
inc
xor
add
jbe
push
add
test
addr16
gs
addr16
sbb
and
cltd
push
dec
mov
fldl
pop
ret
scas
sti
cmp
fldl
mov
stos
and
mov
pop
add
cld
lea
pop
dec
inc
repnz
in
add
pop
nop
xor
fdiv
in
mov
mov
cmp
aaa
inc
scas
xchg
sub
and
mov
mov
lods
add
lods
pop
inc
sti
inc
xchg
adc
shll
and
push
adc
lret
push
js
mov
scas
push
fsubrl
fs
adc
and
or
adc
adc
popa
and
cmpsl
dec
push
pop
cmp
pop
adc
dec
sub
stos
mov
xor
or
mov
insb
or
mov
imul
out
or
iret
sahf
xor
into
jnp
mov
push
or
jae
je
adc
push
scas
movsl
jmp
jp
shll
mov
mov
push
mov
jmp
inc
pop
gs
cmp
inc
jbe
mov
jp
cld
cwtl
cmp
daa
mov
scas
pop
inc
ficoml
inc
cmp
test
sub
shr
insb
inc
das
repz
inc
cwtl
in
insl
fldt
dec
jae
gs
and
or
xor
xchg
push
mov
aaa
mov
cvttps2pi
push
mov
mov
jbe
xchg
imul
adc
mov
mov
popa
cli
out
aaa
mov
mov
adc
notb
pop
mov
mov
clc
jae
filds
cmp
fwait
loop
cmp
mov
jmp
in
into
nop
lock
repnz
mov
out
cmpsl
nop
daa
mov
out
std
inc
lcall
dec
xchg
stos
lea
call
out
ret
aaa
or
ret
dec
inc
inc
inc
out
add
sbb
mov
adc
push
mov
pop
mov
dec
ret
lret
dec
loopne
mov
jnp
mov
sti
adc
cmp
ficomps
push
pop
cmp
and
push
mov
fwait
jnp
xchg
push
repnz
push
push
push
sub
inc
inc
adc
pop
xor
pop
iret
pop
roll
xchg
pmulhuw
xor
stos
data16
imul
and
call
push
pop
call
stos
outsb
add
inc
repnz
rcrb
mov
lcall
ret
hlt
into
push
push
repz
mov
cmp
jno
testl
out
jg
mov
xchg
fucomip
dec
cmpsl
mov
fwait
or
push
add
and
jecxz
pop
xchg
sub
arpl
xchg
jo
inc
shlb
inc
xchg
out
testl
mov
or
stos
ja
sbb
xor
mov
jno
xchg
push
cmp
push
sub
dec
add
push
lock
into
mov
out
inc
fisubl
pop
daa
popf
mov
or
movsl
test
loop
lock
loope
mov
and
cli
xchg
add
fwait
push
pop
shrb
cmp
inc
adc
inc
mov
lcall
int
outsb
dec
mov
dec
js
ja
icebp
and
pop
rol
into
dec
ja
jecxz
test
or
mov
test
pop
pop
out
les
pop
xor
inc
and
ftst
mov
repz
test
dec
je
mov
jmp
movsl
out
inc
addl
or
sarl
mov
out
mov
xor
xor
es
fcomps
sti
and
mov
adcb
mov
popf
icebp
popf
xor
and
popa
int
outsl
jle
add
cmpl
pop
jge
data16
je
ss
ss
cwtl
sbb
lret
push
push
negb
mov
out
lock
cmpsl
icebp
lock
jecxz
cmp
insb
cmp
nop
add
mov
repnz
mov
test
sub
aas
dec
rorb
adcb
outsb
mov
mov
inc
adc
mov
xor
pushf
jae
and
mov
pop
inc
addr16
mov
jl
lret
movsb
push
dec
mov
xlat
sub
popa
in
repz
inc
jecxz
jo
cmpl
nop
aam
pop
loope
loopne
call
test
fdivr
adcb
leave
inc
push
jne
dec
lods
xor
rol
inc
out
out
mov
mov
lea
or
pop
lret
js
sub
testl
adc
inc
adc
xchg
push
iret
repz
ror
add
mov
add
pop
xchg
jmp
fld
mov
pop
lret
lds
cmp
stos
les
loopne
jns
testb
clc
jl
and
or
push
rcrb
or
inc
lods
sarl
fwait
aas
fistps
das
fdivrl
negb
jmp
pop
jne
aad
iret
jl
jg
leave
xor
mov
adc
mov
out
hlt
les
and
adc
popa
adc
mov
into
fiaddl
shlb
clc
lock
jnp
xchg
insb
fwait
mov
dec
outsb
pop
mov
fnstsw
and
push
sbb
mov
dec
dec
cs
pop
je
repz
ret
jo
imul
imul
pop
or
sarb
push
test
jg
add
cmp
inc
loopne
sbb
bound
mov
dec
cmp
mov
and
push
pushf
into
in
mov
jns
push
mov
loope
or
or
adc
jae
cltd
cltd
xchg
mov
mov
mov
xchg
pushf
jle
incl
sahf
stos
dec
fxch
fwait
add
inc
inc
lcall
cmc
movsb
xchg
in
lcall
inc
repnz
aam
popa
mov
fcoml
xor
cmp
repnz
mov
roll
and
mov
xor
inc
shll
ja
sub
xor
xlat
xor
mov
sbb
and
pop
and
cmp
xor
mov
mov
in
mov
jnp
jg
lret
dec
pop
or
push
push
aas
mov
sbb
lds
sub
sub
cli
sub
nop
sbb
xchg
mov
jae
cltd
pop
scas
scas
mov
addl
mov
adc
das
cmp
add
fldcw
cmp
clc
mov
add
test
mov
stc
clc
aam
cmp
in
fnstcw
repnz
mov
push
cwtl
sub
jae
js
or
addb
sub
andl
and
stos
or
sbb
ds
das
jge
adc
sub
fs
add
push
inc
xchg
int
repz
xchg
out
inc
roll
imulb
dec
jmp
lods
out
xchg
fadd
lods
lret
loop
dec
stos
lods
xchg
lods
ds
in
adc
popa
lahf
in
in
and
mov
xchg
xor
mov
stos
ds
sahf
stos
xlat
sub
fbld
add
xor
mov
movsl
push
data16
dec
mov
cmp
xor
into
xorl
add
test
dec
out
dec
adc
cmpsl
stos
sub
fisubl
xchg
pop
fnstenv
cli
or
mov
cmc
xor
iret
call
addr16
enter
and
fsubrl
jae
adc
cs
xchg
insl
pop
xor
sbb
mov
mov
fstp
in
push
jle
pop
idivb
scas
cmpb
and
sbb
loop
and
inc
sub
in
xor
sub
sub
pop
lahf
jb
xchg
ss
loope
xlat
jbe
out
aas
subl
jmp
push
or
push
dec
or
xorb
pop
add
pop
repz
sbb
mov
shlb
xor
inc
scas
imul
mov
xchg
cwtl
xchg
cltd
lcall
popf
fisttps
mov
mov
loope
test
xchg
push
movsl
fistpll
repz
cli
cmpsb
adc
int3
pop
or
xor
pop
xchg
shlb
fdecstp
push
lds
scas
inc
les
and
xor
sahf
cmp
sub
fistpl
fsubrs
out
mov
out
lods
cmc
and
jmp
and
idivl
pop
adc
out
ds
pop
ret
out
sub
cs
out
jb
imul
cmp
add
jo
pushf
pusha
jnp
in
xchg
jp
int3
adc
inc
cmp
testb
mov
or
dec
push
xchg
add
xchg
push
cmc
repnz
ja
and
insb
or
cld
inc
insb
flds
roll
push
jnp
adc
adc
mov
inc
add
inc
pop
adc
fstps
cli
loopne
out
mov
icebp
sub
call
call
aaa
outsl
pop
or
scas
add
insb
sbb
outsl
push
xor
imull
sub
dec
inc
cmp
movb
adc
lahf
dec
outsl
int3
sbb
cwtl
fisubs
nop
imul
loopne
lea
xchg
fwait
mov
mov
pop
push
lock
sbbl
gs
cmp
out
hlt
bound
mov
mov
xchg
mov
adc
sub
loopne
push
mov
push
jecxz
gs
or
xchg
mov
lea
mov
into
in
dec
pop
inc
adc
xchg
mov
cmpsl
addr16
adc
cld
andl
mov
mov
mov
inc
clc
int3
dec
pop
std
add
pusha
dec
hlt
pop
fs
push
push
jo
daa
mov
xchg
push
dec
dec
xchg
ja
mov
mov
jne
mov
adc
ds
pop
cmc
stc
shl
or
fcoml
in
and
js
mov
xchg
cmp
mov
or
insl
in
frstor
adc
jg
adc
xor
jae
fwait
addr16
loop
test
lods
push
inc
lds
mov
lods
dec
insb
test
lea
fidivrs
bound
fs
out
cmpb
jg
sub
jbe
aaa
cmp
lcall
pop
stc
data16
push
popa
jne
scas
adc
ror
adc
pop
xor
adc
je
aad
rol
lods
mov
inc
xchg
xlat
cmc
cmpsl
jns
xchg
repnz
nop
outsl
mov
scas
ljmp
test
or
pop
push
js
int3
loopne
mov
mov
aam
shrb
rol
arpl
pop
repz
cli
sub
xor
push
addr16
xor
xchg
stos
jae,pn
cli
push
enter
movsl
mov
mov
or
sbb
cmpsb
shlb
test
mov
out
and
pushf
popa
sub
popf
arpl
dec
imul
mov
iret
mov
addr16
pushf
xor
push
mov
add
rclb
mov
pop
cmpsl
nop
lahf
loope
push
rolb
fsubl
cld
out
push
jnp
xor
punpcklwd
shlb
aas
out
pop
shrl
lock
mov
sbb
aam
push
ret
mov
xor
iret
adc
dec
mov
lea
ffreep
aad
fwait
xor
mov
xor
mov
aas
out
and
aad
lret
xor
loop
xor
rcr
mov
xchg
pop
andb
jmp
push
lds
mov
shll
inc
sbbb
adc
push
sbb
sbb
pop
inc
pop
int3
xchg
mov
xchg
push
popa
jecxz
mov
test
add
jns
pop
cmc
jle
cld
cld
mov
add
add
sub
add
add
add
and
add
nop
add
sbbb
add
call
add
add
add
add
add
add
add
add
add
sub
add
or
add
xor
add
pop
add
xor
add
addb
adc
add
test
add
rolb
add
clc
add
addb
add
or
add
pusha
add
add
add
add
add
add
add
add
add
add
in
add
add
add
or
add
add
add
mov
add
or
add
add
add
movl
add
add
add
add
add
add
cwtl
aad
add
push
add
or
add
add
shr
add
add
or
add
adc
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
add
add
aaa
add
mov
add
add
add
inc
add
addb
add
push
add
add
add
add
add
cmp
add
test
add
or
add
sbb
add
add
add
add
rolb
add
add
add
or
add
add
add
add
and
add
or
dec
add
add
dec
add
dec
add
add
add
add
add
add
add
add
or
add
add
add
add
adc
add
add
push
add
inc
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
cld
cld
add
add
cld
cld
cld
add
add
in
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
cld
cld
add
cld
cld
cld
cld
cld
cld
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
cld
cld
add
cld
cld
add
cld
cld
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
cld
cld
add
add
add
cld
cld
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
cld
cld
add
add
cld
cld
cld
add
add
in
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
cld
cld
add
cld
cld
cld
add
add
add
in
incl
add
add
add
add
add
add
pop
in
add
cld
cld
add
cld
cld
add
cld
cld
add
add
incl
in
add
cld
cld
add
cld
cld
cld
cld
cld
cld
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
cmp
add
cmp
add
cmp
add
js
add
clc
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
cld
add
in
in
in
outsl
in
jp
xor
in
add
cld
add
add
in
outsl
jp
in
push
in
add
cld
add
add
in
outsl
dec
dec
dec
dec
dec
in
add
cld
add
add
in
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
or
and
insl
gs
jo
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
fsubl
add
in
and
add
and
add
and
add
add
add
add
add
dec
and
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
lock
push
repnz
sub
call
cwtl
add
stos
aam
ljmp
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
addr16
js
add
and
adc
aad
and
test
xor
push
sub
pop
and
ss
xor
lret
mov
adc
test
pusha
or
jbe
or
add
pop
ds
sbb
or
mov
or
sbb
and
add
mov
aad
mov
sbb
mov
and
or
and
push
push
push
adc
sbb
pop
sub
lea
inc
cld
add
sub
fcmovne
push
inc
push
jbe
xchg
repnz
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
ret
jnp
test
rep
out
iret
and
je
in
imul
cs
push
call
add
lea
aad
jecxz
push
and
mov
call
mov
xchg
fld
sub
or
push
add
dec
lock
leave
cwtl
xchg
push
mov
cmp
push
outsb
push
je
mov
push
mov
mov
mov
clc
test
push
push
orl
lea
push
aas
inc
das
add
addb
push
mov
shrb
xor
test
lret
inc
xor
jmp
mov
adc
and
push
dec
inc
jo
add
test
ret
pop
lcall
cmp
or
sub
mov
cltd
cmpsb
cmp
and
add
add
ret
mov
les
mov
or
aas
pop
loopne
push
add
push
and
xchg
test
sub
adc
ret
cmp
sub
imul
push
out
mov
xchg
xor
inc
stos
pop
add
sub
in
xor
leave
push
ret
clc
push
sbb
popf
sbbb
ret
je
jmp
push
cmp
repz
sub
add
clc
lods
outsl
mov
mov
bound
sub
test
in
data16
and
lods
loop
idivl
jg
outsl
add
mov
jnp
mov
and
sti
loope
call
push
jne
mov
roll
dec
xchg
shr
mov
jbe
jae
shll
adc
add
add
ret
jmp
cmpsl
and
xor
call
push
push
cmp
leave
pop
add
or
nop
xor
rorb
inc
adc
fidivs
xchg
xchg
sub
insb
or
cld
inc
pop
jl
push
ss
iret
jge
and
rolb
push
adc
sub
cmovp
enter
arpl
cmp
mov
dec
pop
or
rclb
xchg
push
mov
add
pushf
movb
cwtl
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
test
cmp
jne
popw
jbe
push
add
cmpsl
decb
mov
dec
aas
es
out
loope
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
mov
cmp
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pop
jns
mov
hlt
push
fs
or
cmp
test
mov
push
fistps
mov
in
mov
rclb
jecxz
mov
inc
test
sub
neg
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
mov
add
fwait
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
jne
mov
dec
inc
xchg
dec
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
aad
mov
mov
adc
sbb
inc
inc
mov
mov
lahf
cmpsl
and
shl
dec
int
mov
cmp
sarb
push
adc
shl
add
in
test
repnz
push
outsb
mov
inc
push
dec
jg
pushf
push
inc
or
sub
add
out
push
inc
pop
cmp
ret
pop
outsl
pop
dec
stos
jb
add
inc
inc
lods
jmp
adc
mov
scas
repz
xor
icebp
mov
call
and
or
or
lds
imul
sbb
ret
adc
cmp
orb
jl
prefetchnta
shr
push
loope
push
leave
jbe
out
jne
iret
sti
orb
je
js
push
pop
sbb
sub
sub
and
cwtl
xor
and
xchg
ja
push
add
jbe
jmp
inc
jo
insb
push
imul
and
jecxz
popf
cmp
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
xor
pop
dec
outsl
popa
addr16
inc
outsl
js
shll
notb
data16
adc
cmp
or
je
nop
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
mov
fwait
sbb
jl
imul
hlt
jp
popf
xor
pop
dec
jmp
int3
and
adc
pop
cmp
or
mov
imul
orb
fwait
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
das
add
cwtl
and
add
inc
add
and
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
