fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
aaa
or
cmp
and
pop
sbb
xor
sub
imull
andl
andb
out
std
loopne
mov
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
pop
or
test
sbb
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
sbb
loope
sbb
movsl
adc
ss
mov
jecxz
pop
in
adc
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
push
test
jo
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
fwait
jmp
push
jno
dec
inc
imul
xor
xor
pop
ja
mov
pop
je
or
sub
lods
fnstsw
inc
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
or
gs
adc
cmp
cwtl
fstps
adc
aas
xor
enter
daa
sbb
fimuls
loopne
or
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
pop
pop
add
adc
xabort
in
les
out
inc
pop
or
jbe
mov
ret
in
inc
mov
cmp
subb
pop
or
ja
mov
daa
cwtl
pop
les
adc
mov
js
cmpl
inc
mov
pop
and
dec
shlb
add
std
add
arpl
mov
sbb
jge
ja
repz
lea
andb
rolb
lea
sahf
iret
out
stos
mov
loopne
adc
mov
add
xor
test
jecxz
push
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
jbe
les
push
xor
lret
test
xor
scas
jbe
mov
xlat
inc
into
xor
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
sbb
arpl
xchg
sar
out
enter
jmp
ja
leave
imul
fs
int3
je
imul
rorb
int3
clc
insl
mov
push
cltd
pop
flds
sti
adc
sti
cld
mov
sbb
sti
fcomp
xchg
int
cld
std
dec
push
mov
xor
xchg
mov
dec
mov
cld
mov
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
cwtl
mov
adc
call
lods
test
scas
mov
shrb
loope
or
jae
push
ss
dec
xchg
insb
les
fisubl
neg
cwtl
mov
ss
and
push
neg
fwait
pop
fs
mov
clc
je
jae
cwtl
shlb
sti
mov
into
bound
xor
jg
imul
idivl
fisttpll
mov
test
fldcw
xor
push
xor
mov
je
clc
add
clc
lods
jbe
popf
lea
adcl
jnp
aaa
movsb
pushf
or
insl
mov
mov
mov
call
push
bound
mov
clc
xchg
and
test
sar
jb
iret
sar
clc
sar
mov
push
push
mov
or
xchg
outsl
jbe
push
adc
cmp
cmp
popf
push
cmpsb
imul
insl
nop
gs
out
and
push
add
call
adcl
hlt
cmp
negl
xchg
shll
xchg
xor
and
hlt
fs
mull
or
sbb
xchg
cmp
aaa
gs
adc
ret
loopne
dec
dec
scas
cli
mov
jle
subl
and
jne
int3
add
or
pushf
sbb
push
cmp
lea
adc
jmp
in
adc
sub
mov
or
loope
or
push
fadds
inc
faddp
dec
movsb
inc
cmpsb
in
adc
mov
rclb
mov
sbb
or
push
dec
inc
dec
dec
in
test
push
dec
inc
dec
and
aam
inc
push
dec
cs
outsl
lds
or
push
sub
subl
add
and
add
push
add
add
enter
nop
add
enter
mov
inc
loopne
push
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
imul
mov
mov
mov
ljmp
dec
repz
xchg
outsl
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
popf
std
gs
and
add
or
cld
pop
sub
pop
adc
add
lret
xchg
pushf
push
add
push
xor
jnp
cmp
pop
push
add
fnstcw
dec
call
popl
mov
add
push
fsubrs
bound
add
jae
inc
adc
cmp
frndint
shrb
popa
je
rclb
adc
fdivs
gs
outsl
arpl
inc
and
sbb
inc
ljmp
in
push
mov
in
xchg
movsb
xor
shll
in
add
imul
imul
imul
cmpsb
jmp
sbb
cs
pop
shll
fs
inc
imul
add
js
pop
outsb
xor
inc
mov
push
xor
daa
and
pop
rcr
pop
and
and
mov
push
idivb
rorb
inc
in
fs
add
xor
mov
hlt
fdivrl
and
filds
and
adc
and
adc
lahf
add
cmp
lahf
add
and
inc
and
adc
and
cmp
add
inc
out
stc
test
enter
fdivs
and
adc
add
inc
sahf
nop
dec
movsb
and
adc
add
inc
or
aaa
sub
dec
inc
ja
push
sub
sbb
mov
fmull
leave
add
lcall
fdivrs
adc
push
popa
mov
jge
divl
push
pop
jmp
adc
mov
pcmpgtd
mov
add
orl
pop
rcr
loopne
lea
mov
mov
xchg
arpl
decb
ret
and
or
je
into
flds
pusha
mov
and
xchg
push
inc
fs
adc
jbe
mov
or
push
mov
inc
ja
pop
sub
pop
pop
leave
xchg
icebp
sub
out
andb
inc
cmpsl
xchg
push
clc
std
jae
arpl
loop
ret
pop
stos
xor
mov
xor
outsb
xchg
xchg
dec
sub
push
enter
xchg
clc
mov
or
call
adc
std
push
insb
pop
adc
adc
ds
addb
adc
adc
push
and
jecxz
xor
test
add
cmp
jl
or
shr
or
push
mov
push
idiv
mov
int3
insb
outsl
enter
jnp
icebp
cmpsb
sti
jle
addr16
mov
xchg
pop
pushf
mov
arpl
dec
jne
pop
call
sub
dec
ja
push
jmp
inc
inc
loope
cmp
or
loope
sbb
mov
test
dec
mov
pop
mov
xchg
sbb
cmp
cmp
add
mov
addl
xorb
mov
outsb
mov
sub
ror
push
hlt
push
inc
lock
sbb
dec
jno
neg
pop
repnz
mov
data16
shll
xor
incb
add
sub
adc
or
cmp
movl
neg
pop
sbb
dec
mov
or
add
out
inc
mov
push
mov
xchg
fsubr
into
xor
mov
add
cs
push
sbb
call
jmp
mov
test
aam
or
call
pusha
jecxz
rolb
cmp
fisubs
pop
add
adc
or
hlt
or
jb
adc
jl
fcomp
dec
out
out
int3
jg,pt
or
cmp
insb
mov
cmp
cmp
scas
outsl
mov
mov
or
ss
mov
testl
pop
push
mov
cmp
jo
lds
jnp
ret
push
pusha
push
mov
push
mov
cmc
enter
add
mov
lret
gs
insb
jb
mov
lret
gs
gs
cs
fisttpl
cltd
mov
xor
ja
imul
pop
fcmovnu
frstor
sub
push
rcll
loopne
loope
jecxz
ret
in
cld
mov
movsb
sti
in
adcb
add
sbb
cmp
inc
call
add
push
or
in
cwtl
pop
add
and
push
jmp
sub
scas
sbb
mov
call
mov
mov
push
shr
stc
sub
cs
insl
jmp
add
mov
vmwrite
cmc
das
popf
mov
add
cmpl
fbstp
dec
cmp
cmp
or
dec
daa
rcrl
sub
xchg
outsb
mov
mov
inc
cmp
jl
je
fiaddl
inc
cmp
sub
cmpb
js
pushl
mov
daa
cmpl
jb
dec
or
leave
je
add
jp
iret
push
aas
or
add
mov
push
popf
or
fisttps
ret
fbstp
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
add
cld
test
rolb
cld
jge
mov
add
sbb
cltd
mov
adc
mov
mov
mov
lods
inc
cmpl
fisttpl
add
cmpl
std
outsb
dec
mov
gs
and
lea
shr
shlb
mov
mov
mov
jne
daa
add
ljmp
shlb
cli
add
push
or
adc
xchg
mov
lar
data16
lock
jne
or
not
push
sub
add
aad
outsl
or
shl
or
cmpsl
xchg
xor
adc
in
cmp
clc
inc
mov
mov
std
sbb
xchg
add
jmp
add
imul
push
repz
jbe
push
mov
mov
dec
xorb
and
adc
outsb
inc
or
popf
mov
add
lcall
fcomip
and
mov
pushl
add
push
scas
clc
add
fildl
and
sub
sbb
mov
pop
or
push
mov
mov
jl
je
dec
push
sbb
andl
jle
sbb
icebp
test
call
call
int3
insb
aaa
pop
adc
lcall
xor
push
add
adc
pop
fwait
nop
pop
xor
inc
pop
or
mov
cmp
push
out
imul
xor
and
int3
mov
or
push
xorl
push
mov
dec
sti
lea
mov
or
inc
testb
je
ficompl
pop
inc
sub
icebp
insb
push
sbb
or
adc
xor
sti
gs
int
insl
push
mov
loopne
pushf
cld
inc
xchg
test
push
push
xchg
mov
mov
add
lock
lcall
or
sti
inc
test
lahf
cmp
nop
sbb
dec
jnp
jmp
ss
mov
and
or
subb
mov
jo
lret
mov
insb
outsl
jb
jb
das
lret
mov
gs
je
push
sahf
add
data16
mov
and
pop
pop
push
sbb
cld
or
loopne
clc
or
or
jl
mov
mov
mov
add
ret
movsl
pop
imul
fs
mov
lret
jne
push
in
and
leave
rcrb
scas
pop
adc
jg
dec
arpl
mov
or
cvtps2pd
mov
adc
and
mov
je
popf
xchg
mov
aas
les
enter
xchg
add
mov
xor
mov
cs
adc
cs
arpl
or
inc
sbb
int3
stos
push
pop
pop
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
ljmp
call
outsl
arpl
fs
jne
add
fs
imul
jg
jns
and
fs
inc
pop
fdiv
sarl
popa
insl
gs
xor
ja
mov
popa
je
and
insl
xorl
cvtps2pi
add
outsb
mov
mov
add
or
jb
sub
mov
jle
test
push
or
inc
ds
js
nop
add
imul
jb
sub
dec
bound
arpl
mov
gs
outsl
add
jae
sub
orb
adc
addb
imul
push
add
lea
xchg
dec
jo
mov
mov
push
xchg
outsl
ja
inc
xor
mov
test
mov
jne
mov
sti
mov
pcmpeqb
and
insb
mov
pusha
push
das
dec
outsb
add
push
pushw
gs
jge
xor
pop
jo
ret
or
imul
dec
fwait
bound
pop
push
js
xor
inc
int
orb
inc
sub
push
outsl
outsl
insb
dec
mov
sbb
popa
jo
push
push
ret
inc
popf
dec
push
orl
ja
add
out
cmp
mov
push
dec
inc
push
dec
inc
es
mov
lods
add
jo
pop
retw
push
push
mov
packssdw
pop
pop
add
jne
or
pop
mov
mov
outsb
sbb
outsl
adc
push
jo
pop
inc
push
xor
sti
shll
arpl
popa
jge
sub
rolb
mov
dec
outsb
data16
xchg
mov
movsl
add
add
std
outsb
aaa
insb
fstpt
inc
arpl
jo
inc
popa
arpl
fcmovbe
sub
push
inc
inc
push
mov
add
or
xchg
mov
sub
push
cltd
add
insl
popf
insl
ret
sbb
lds
ret
or
pop
inc
arpl
adc
ja
xor
dec
stos
and
jno
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
call
out
psubq
add
add
pop
xlat
or
in
inc
outsb
mov
adc
push
or
sub
or
pop
cld
sbb
iret
push
out
or
pop
dec
xor
push
add
pop
jmp
sbb
jbe
pop
jbe
add
and
shlb
cmp
dec
mov
dec
mov
push
xor
add
ja
in
cld
pop
or
push
les
fldcw
roll
out
jo
add
out
movsb
jnp
daa
mov
daa
movsb
imul
popa
push
lods
jg
sub
jg
xor
in
push
or
add
scas
in
xor
ror
mov
xlat
add
or
cmp
insb
mov
xchg
lods
testb
adc
scas
push
cmpsb
jmp
stos
add
cs
js
sahf
imul
xor
mov
stos
and
inc
pop
dec
shll
scas
mov
enter
stos
xchg
xor
bound
xor
je
cwtl
cmpsb
ret
cmp
lock
ret
adc
and
xor
mov
test
dec
shll
cmp
mov
in
test
dec
mov
push
cmpsb
fnstenv
dec
fs
mov
jp
mov
lcall
dec
mov
bound
shll
mov
dec
into
fsub
in
testb
or
adc
mov
scas
mov
sahf
add
orl
xchg
lods
mov
xchg
mov
push
addb
pop
mov
push
cmpsl
and
cli
mov
ljmp
push
mov
fs
add
and
mov
pop
je
je
xchg
add
mov
inc
add
mov
je
push
jne
jns
inc
aaa
popa
scas
aad
stc
push
and
adc
stos
in
outsl
adc
dec
add
pop
negb
ret
and
adcb
add
or
mov
and
insb
outsl
ss
xchg
add
aaa
sbb
pusha
add
das
push
add
push
pop
pop
add
filds
inc
push
test
insb
andb
test
and
negl
das
pop
add
mov
ja
dec
cwtl
sub
sbb
aas
add
mov
pop
rorl
incl
and
inc
inc
leave
test
call
add
jecxz
or
sbb
pop
inc
adc
sub
pop
test
xchg
inc
pop
ret
jnp
subb
das
addr16
fwait
xor
pop
push
mov
ud2
push
add
jne
ss
outsl
ja
adc
lret
je
jne
gs
pop
xlat
mov
or
push
incl
pop
xlat
sub
add
push
inc
jb
push
and
test
in
or
push
mov
jae
and
loopne
jo
adc
or
pusha
arpl
mov
pop
add
xorl
and
jp
pop
cs
mov
pop
lret
jb
in
mov
or
push
push
inc
push
inc
dec
adc
lds
add
dec
push
insl
shlb
cmp
jae
dec
mov
ja
jb
inc
popa
jb
push
push
push
lods
mov
call
push
stos
xor
insb
or
ss
push
mov
das
cwtl
sub
dec
aas
dec
push
push
lea
inc
daa
fwait
jle
subb
jno
popa
js
or
je,pn
xor
xor
push
gs
fisttpl
jne
pusha
push
mov
dec
insb
lahf
gs
jo
adc
or
pop
dec
pop
je
xchg
dec
je
dec
fs
aad
inc
cs
imul
mov
or
mov
aas
push
psubusb
pop
dec
xor
out
aas
ja
into
mov
stos
pop
pop
and
pop
jo
fs
sbb
jge
in
add
xchg
xchg
or
stos
and
and
cmc
test
xbegin
mov
push
mov
mov
mov
xlat
rol
cli
mov
leave
mov
mov
fneni(8087
mov
mov
mov
leave
scas
aad
jnp
pop
imul
pop
sar
out
xor
out
jg
mov
mov
mov
sti
in
mov
mov
and
loopne
mov
mov
and
std
xlat
jecxz
mov
stc
jbe
mov
mov
ret
mov
sti
mov
repz
add
leave
enter
in
xlat
ffreep
out
pushl
out
mov
or
ret
mov
mov
push
out
mov
lock
enter
aam
mov
lret
cli
mov
ror
int
int3
in
iret
ret
mov
pushl
jecxz
lahf
enter
rcl
enter
mov
std
fbstp
lret
leave
ffreep
lods
shr
and
mov
loop
jg
fstpt
leave
mov
enter
jecxz
std
add
lds
mov
loopne
loope
test
rol
xlat
adc
lret
scas
ror
fisttps
push
push
iret
sbb
mov
out
fnstsw
shrl
outsl
in
lahf
pop
mov
lahf
cmpsl
mov
add
movsl
out
cmpsl
shr
les
inc
fadd
iret
mov
fxch
lret
mov
sbb
test
push
sbb
adc
adc
lds
out
fcmovnu
push
rcl
mov
fistl
mov
out
sub
and
mov
push
arpl
lods
lock
ret
das
push
out
test
and
and
push
jmp
dec
shlb
add
mov
cmp
xchg
lea
sub
xchg
jae
fistpl
sbb
pop
add
fists
jae
pop
ja
sub
in
xchg
pop
sub
pop
pop
pop
jb
inc
mov
sub
mov
dec
cli
sub
mov
add
mov
lea
and
mov
dec
xor
lock
push
mov
pusha
adc
je
mov
in
adc
pusha
inc
lea
lds
loope
ss
ret
stos
sub
inc
jb
rolb
sub
daa
sbb
cld
pop
jl
shl
fs
mov
dec
lds
cmp
or
fnstcw
outsl
push
xor
adc
xor
enter
pop
xchg
shl
or
inc
adc
int3
loopne
test
arpl
push
mov
add
mov
mov
std
fldenv
mov
lea
xchg
jmp
sub
mov
movb
fistl
sub
sub
sub
inc
add
sti
push
adc
lds
pop
inc
inc
call
jne
cli
loopne
loopne
pop
ret
mov
outsb
insl
dec
and
cwtl
push
stos
pop
or
aad
or
or
fisttpll
push
or
pop
or
fwait
adc
mov
xor
fidivl
insb
and
sbb
push
psubusb
shl
mov
cmp
xor
push
mov
andb
mov
xchg
fcmovnu
or
push
aas
out
inc
pop
cmp
pop
jl
push
sahf
stos
mov
movsl
iret
scas
xor
adc
cmpsl
and
add
adc
add
inc
repnz
les
add
enter
int3
or
call
pop
xchg
aaa
dec
pop
cwtl
xor
dec
push
leave
add
inc
add
sbbb
add
mov
pop
stos
jo
mov
ret
cmpw
icebp
mov
lret
outsl
xchg
inc
push
pop
repnz
mov
sbb
adcl
xor
mov
cmc
cmp
xor
or
and
pop
dec
pop
inc
je
sub
je
jmp
cmp
pop
in
divl
adc
pop
cmp
ja
gs
or
pop
jnp
jae
repnz
loopne
mov
mov
in
cmp
out
jmp
cmp
jb
sub
je
addl
push
push
mov
sbb
int
or
or
jmp
xchg
and
ret
xchg
mov
cltd
mov
lds
mov
pusha
leave
push
mov
hlt
fistpl
ret
add
add
jge
push
mov
jp
push
sbb
mov
push
and
pop
and
pop
mov
dec
ret
mov
push
dec
xlat
xchg
push
pop
mov
inc
sbb
pop
dec
add
xlat
xchg
push
js
test
shll
les
lea
movsl
mov
arpl
add
mov
movsb
mov
popf
loopne
mov
mov
in
sbb
mov
rep
and
xchg
mov
rol
int3
or
mov
mov
push
mov
movsb
pop
dec
pop
mov
jne
mov
idivl
xor
xor
adc
adc
les
clc
call
mov
sub
xchg
test
push
xchg
test
insl
or
scas
mov
jle
lock
xlat
sub
jbe
pop
mov
fldt
jmp
pop
call
adc
outsl
fcmovu
sbb
faddl
hlt
cmp
inc
inc
stos
mov
call
cmp
pop
jb
fucomi
inc
icebp
xchg
cmp
jne
xchg
add
mov
jne
shrl
movsl
ficoms
push
andw
adc
insb
mov
mov
add
cld
pop
jb
or
hlt
sub
pushf
pop
loopne
push
aaa
sbb
sub
mov
mov
push
repz
adc
shll
sub
std
xchg
out
mov
lea
cmp
rcll
jne
and
imul
out
push
push
mov
jns
call
jo
mov
jmp
add
push
jo
sbb
call
adc
or
mov
enter
xor
call
out
pop
enter
in
jl
into
insb
xor
adc
add
pop
dec
rorl
push
xor
cmpb
pop
nop
xor
xor
in
cmp
xor
xor
or
and
xor
sub
push
enter
xor
adc
popf
dec
mov
xor
add
fwait
xor
pop
mov
pop
cwtl
xor
nop
xor
xor
movsb
and
arpl
sub
cmp
cmc
decl
pop
add
clc
sbb
imul
loope
pushf
loope
adc
push
cmpsl
mov
js
xor
push
and
and
in
fcoms
add
jp
mov
mov
cmp
mov
sarb
add
lahf
dec
mov
adc
insb
push
or
push
add
rolb
pop
in
push
jmp
adc
xor
sbb
call
or
sti
scas
roll
sub
pop
inc
idiv
adc
mov
dec
cli
sbb
jmp
sbb
call
add
bound
xor
enter
add
mov
or
dec
dec
xchg
adc
add
add
push
call
in
inc
fsubl
lock
mov
adc
lock
adc
inc
into
or
jmp
and
pop
lock
xchg
dec
and
rclb
pop
ja
xor
das
hlt
pop
mov
cmpb
add
add
jl
lea
pop
test
jb
in
sbb
mov
mov
or
andl
push
or
inc
sub
sti
shrl
and
or
imul
adc
and
add
dec
adc
inc
sbb
or
mov
shrl
sahf
loopne
cmp
jae
incl
lret
shr
add
jl
ljmp
mov
mov
sbb
mov
dec
adc
stos
icebp
push
pop
jne
adc
push
dec
insl
sbb
rorb
rolb
or
shl
pop
mov
cli
or
jne
lret
stos
xor
add
mov
stos
pop
call
xchg
inc
mov
push
and
jno
int
mov
sti
sti
not
and
push
jl
and
or
add
lea
dec
xchg
xlat
shr
mov
leave
jo
add
repnz
testl
and
testl
mov
jecxz
mov
out
lret
push
js
repnz
mov
outsb
jnp
mov
or
fisubs
fimull
add
stc
outsl
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
pop
sub
lods
inc
sub
mov
and
not
cmp
lods
std
out
add
repz
mov
jne
push
shr
or
add
dec
daa
pop
jg
push
test
scas
cmc
sbb
lock
loop
mov
jle
hlt
mov
insb
jg
not
and
sub
and
in
hlt
adc
movb
jecxz
sbb
sub
sbb
xlat
lahf
fiaddl
pop
popa
xlat
or
mov
jo
cld
sbb
inc
xor
fisubl
imul
filds
sbb
pop
test
jle
int3
xor
add
add
mov
xor
add
sbb
in
popf
adc
jne
les
repz
pop
fidivs
out
fcomp
cwtl
subb
addl
repz
imull
pop
rcr
das
pusha
adc
into
das
das
pop
scas
testl
ret
repz
cmpsb
pop
les
subb
add
push
lcall
movups
or
fmul
repnz
scas
add
jne
out
pop
mov
pop
mov
or
les
adc
arpl
or
xor
or
jns
jl
or
xchg
jno
std
stos
mov
inc
sbb
cld
and
mov
fidivrs
pop
jle
mov
mov
cmpsb
pop
mov
mov
mov
mull
test
xchg
icebp
and
or
popa
lret
idivb
and
mov
mov
shl
ljmp
pop
cmp
and
aad
aam
pop
sti
mov
imul
sbb
cmp
lock
and
jg
mov
mov
inc
mov
rclb
push
mov
or
fadds
hlt
push
and
clc
data16
fisubrs
pop
pop
es
adc
mov
or
sbb
and
in
ss
lret
and
call
mov
mov
adc
divb
shl
xlat
lods
mov
sbb
adc
add
sbb
mov
and
fisttpl
out
fcoms
push
cltd
jae
mov
cmp
mov
fxch
repnz
fstpt
out
adc
jmp
dec
xchg
stos
mov
mov
mov
jl
data16
int
and
sbb
loopne
ret
sti
repnz
popl
add
pop
aaa
or
mov
je
jnp
push
fbstp
int
mov
cltd
xlat
sbb
dec
sbb
gs
fldcw
xor
fsubrp
mov
adc
inc
loop
shr
inc
call
xlat
fdivs
outsl
add
sbb
add
mov
sbb
pop
enter
daa
xchg
out
scas
sub
aad
flds
outsl
adc
out
movl
sahf
ja
mov
cmp
or
int
in
xor
xor
test
jmp
lcall
xor
mov
call
divb
adc
sar
cs
js
lds
in
push
xchg
out
popf
insl
adc
inc
sti
xor
mov
out
xor
and
or
in
mov
lods
fcomip
xor
mov
sub
push
sbb
xchg
mov
jle
test
cltd
jb
pop
into
pop
mov
push
int3
pop
pusha
dec
mov
out
jno
cli
xor
rcrb
mov
pop
fcomip
sahf
aaa
or
or
xlat
mov
jle
sub
jae
mov
add
out
mov
lock
out
sbb
dec
mov
addr16
xor
fstpl
sbb
aam
xchg
jae
adc
fidivs
test
pop
xor
cmp
or
pop
cmp
push
aas
sbb
cmp
rcl
fldl2t
fdiv
adc
jbe
les
das
jle
in
mov
popf
aaa
je
ss
in
clc
jl
pop
int
xorl
or
mov
inc
gs
lods
les
sbb
sti
mov
mov
aaa
sbb
sub
lea
shl
ret
sbb
jl
sahf
pop
mov
push
xchg
ljmp
inc
push
or
mov
jns
enter
and
fidivrs
jb
hlt
cmp
xor
xor
xor
cmp
pop
pop
gs
sbb
sbbb
push
rcrl
pop
sahf
aaa
xchg
int3
or
push
or
pop
bound
dec
jge,pt
out
je
pop
sahf
call
unpckhps
sbb
cmp
in
rcrl
test
sub
push
and
jg
call
scas
dec
jle
outsl
jecxz
jp
sbb
int
dec
xchg
sbb
out
jecxz
jp
ret
incb
inc
fsubs
add
mov
adc
dec
mov
cmpb
lds
jp
xlat
sbb
ja
mov
xor
mov
loopne
mov
ret
repz
rcl
sub
pslld
ret
clc
int
and
pop
rclb
xor
dec
mov
pop
jge
ja
xchg
xlat
pop
add
pop
movsb
mov
inc
or
mov
imul
mov
in
sub
prefetch
push
mov
mov
or
add
dec
cld
cmpb
outsl
cmc
pop
cmp
jl
js
sub
push
push
push
test
adc
pop
data16
mov
or
insb
js
test
nop
xlat
adc
aaa
hlt
push
pop
fisubrl
jle
pop
stos
jne
xchg
lahf
inc
pop
inc
test
nop
mov
pop
pop
mov
mov
into
ljmp
mov
pop
sbb
cmp
jne
mov
sbb
mov
xor
add
cmpb
jl
push
int
pop
push
push
cld
call
test
lea
aaa
cmp
in
aas
sub
dec
cmp
out
or
testb
mov
repz
xor
popf
lea
in
enter
mov
add
outsb
test
push
loopne
pop
int3
rolb
aam
pushf
imul
mov
es
cmpsb
repnz
adc
lcallw
imul
in
out
or
call
gs
iret
out
das
lock
jo
hlt
imulb
divl
mov
pushf
mov
leave
sub
outsl
pop
rorb
mov
ljmp
mov
dec
add
inc
mov
jnp
mov
sub
aam
lods
outsb
les
sbb
fimuls
lahf
jnp
push
pop
push
aad
or
push
sbb
call
adc
rclb
aad
push
rclb
mov
add
dec
out
push
jge
push
call
inc
pop
mov
clc
orb
xor
mov
or
cld
push
xor
xor
repz
push
pusha
pop
mov
push
xor
pop
sub
add
adc
inc
in
test
arpl
jge
inc
decb
pop
adc
sbb
push
push
push
cmp
add
inc
stc
decb
xchg
sbb
xor
add
add
cmp
xchg
mulb
pusha
imul
xor
lock
das
sub
xor
xor
pusha
push
js
adc
out
sub
xchg
pop
push
cmp
adc
mov
mov
dec
loopne
test
bound
divb
loopne
mov
mov
push
aam
and
inc
push
out
push
clc
rolb
das
or
push
sti
adc
jns
fistpll
adc
subb
out
jg
cmp
je
dec
dec
cmpw
jne
pop
push
arpl
inc
add
cmp
pop
add
mov
stc
sbb
mov
add
ss
xchg
mov
push
outsb
imul
lret
subb
jbe
cmp
inc
addl
jbe
jnp
pop
fwait
ret
push
or
out
mov
push
je
xchg
cmp
fucomip
mov
dec
or
inc
add
je
cmp
jne
push
repnz
pcmpgtb
dec
mov
pop
push
outsl
mov
or
cltd
into
outsb
js
mov
stos
loopne
sbb
mov
mov
fdivl
loopne
enter
cmp
jg
subl
adc
movsl
mov
push
dec
inc
pusha
cmp
subb
inc
lahf
adc
lods
add
add
insl
sub
xchg
insb
test
stos
in
mov
mov
xor
mov
cwtl
mov
lret
cs
xchg
in
sbb
push
nop
rcr
add
mov
cmp
rcll
mov
lahf
sbb
add
outsl
mov
or
mov
push
jbe
pop
cmpsl
fs
mov
pop
enter
dec
xor
test
fldenv
sub
xor
mov
adc
int
xor
sub
mov
loop
jg
std
and
add
mov
cld
insb
int
call
cmp
and
pushf
push
mov
lea
rcrl
out
pop
dec
je
cmp
mov
mov
fisubrl
scas
or
ficoml
rolb
addr16
mov
sub
les
pop
movsb
cmp
dec
and
fwait
stos
into
mov
adcl
fstpl
pop
call
call
mov
insb
mov
cmpb
or
inc
lret
dec
lcall
pop
mov
bound
mov
jecxz
pop
dec
mov
lahf
fsubl
dec
jp
add
or
xlat
push
inc
mov
or
lock
pusha
sti
xchg
inc
insb
pop
sahf
push
jo
push
addl
jg
mov
lods
lods
push
insl
xchg
lret
in
mov
mov
mov
mov
mov
jb
pop
cs
mov
mov
mov
in
imul
pop
push
jp
fs
push
gs
sub
mov
insb
outsl
jb
insl
shrl
cs
fcmovu
xor
push
dec
test
loop
jecxz
lret
insl
xlat
insb
pop
in
push
out
dec
out
call
jmp
insl
jae
imul
aad
sub
pop
dec
bound
ret
rol
add
xor
insl
xlat
xor
enter
lret
cmp
pop
xlat
sub
int3
hlt
xchg
push
xchg
xchg
mov
lcall
mov
pop
cld
mov
mov
mov
mov
inc
add
cmpsb
xor
test
push
test
imul
or
jns
lea
inc
mov
popf
pusha
fisubl
inc
or
pop
mov
sahf
stc
pusha
aaa
aam
push
or
jle
aaa
inc
sbb
int3
xchg
sbb
lock
xor
popa
data16
jnp
xor
pop
scas
or
pop
insb
dec
rolb
mov
sbb
mov
test
test
cli
mov
pop
xor
out
rcr
push
std
sti
test
sar
push
push
inc
movsl
leave
enter
sti
push
ds
movsl
inc
adc
push
lods
shl
or
mov
and
imul
sub
pushf
pop
cli
inc
ret
in
lret
sbb
movsb
fwait
jne
push
push
inc
sub
fldpi
pusha
aaa
xor
xor
les
punpcklwd
ret
jmp
sub
jne
nop
repnz
jl
mov
mov
xchg
std
adc
hlt
cld
cmp
cmpsb
nop
daa
push
cld
xor
arpl
aam
pop
push
xchg
mov
enter
push
ss
ja
jl
cwtl
sbb
movsb
cs
adc
jecxz
sub
dec
inc
push
cld
mov
mov
cli
add
jnp
jb
pop
pop
imulb
pop
pop
push
mov
dec
xor
aaa
or
out
adc
into
sub
es
adc
xchg
cmp
sbb
xor
test
mov
push
jo
cld
sbb
dec
add
mov
test
jnp
mov
adc
je
adc
adc
push
addr16
stc
pop
test
cmp
jl
jns
sub
gs
ficomps
cmp
adc
sbb
mov
les
adc
fsubl
fisubs
or
cld
xlat
sbb
fs
push
addr16
add
push
jl
in
xor
adc
mov
and
aas
push
and
fsubs
cmp
xchg
xor
xchg
imul
jle
push
cld
xor
sti
filds
mov
mov
jae
or
xchg
mov
sti
ds
or
inc
push
jge
hlt
mov
adc
sbb
movsb
data16
insb
in
stos
lret
outsb
mov
or
data16
cmpsl
sub
mov
adc
jmp
and
ds
movl
xlat
mov
scas
lock
outsl
scas
fs
bound
shl
push
and
inc
mov
in
andl
adcb
rclb
aas
push
ss
or
negb
pop
push
addr16
jo
inc
mov
add
fs
pusha
mov
sbb
test
xor
sub
dec
outsl
jp
cmpsl
insb
shll
dec
push
mov
outsb
dec
imul
ja
sbb
fildl
fstp
jae
fistps
loopne
xor
mov
xor
sti
cld
mov
sbb
icebp
lcall
mov
shll
mov
jmp
mov
dec
adc
int3
push
outsb
fs
scas
or
xor
xor
enter
add
lret
popa
lret
mov
lret
js
push
xor
pop
ss
inc
jb
xor
and
cmp
cli
mov
shrl
loopne
push
ja
pop
pop
in
leave
adcb
cld
mov
sbb
pop
push
dec
sbb
or
pop
push
pop
and
add
movb
or
in
xor
push
sub
in
aam
lock
jmp
loop
andb
test
sub
adc
xor
shll
je
imul
outsl
ja
scas
enter
jo
das
and
andb
sbb
xor
cmp
lock
sbb
sub
pop
mov
fs
jo
mov
xchg
or
or
and
inc
or
popa
bound
xor
bound
daa
xor
push
out
outsl
or
addb
push
or
add
ret
imul
xchg
mov
lock
clc
lock
jge
lds
and
jg
xlat
or
mov
rcrl
xchg
repz
popa
xchg
push
stc
inc
in
push
lea
mov
lret
mov
sub
out
push
pop
push
adc
ret
roll
push
icebp
jne
xor
and
ljmp
xor
es
add
aas
push
mov
sbb
icebp
std
jmp
jno
lock
lea
push
movsl
movsb
adc
repz
cmc
hlt
pushf
push
scas
mov
sub
iret
lock
sub
out
adc
add
addb
push
jl
add
rclb
js
pop
dec
call
push
je
jl
jb
movzbl
xor
and
adc
or
cld
xor
and
in
xor
daa
idiv
and
push
add
jmp
mov
out
push
dec
jo
stos
mov
jo
cs
popa
imul
divb
insb
repz
gs
push
shll
je
dec
shll
outsb
test
pusha
xor
ret
ret
and
jne
sbb
pop
cwtl
xchg
push
inc
push
xchg
xchg
xchg
adc
dec
mov
xor
mov
push
dec
inc
orl
xchg
enter
ds
jo
push
into
sbb
mov
adc
call
mov
stc
enter
sbb
pop
add
push
cmp
aas
sub
xchg
test
or
rol
aas
inc
in
sub
in
cmp
outsb
dec
jl
stos
push
fcomps
adc
cmp
std
lcall
mov
mov
cwtl
sub
hlt
or
aad
mov
push
push
push
pop
int3
cmp
cmp
cmp
mov
int3
fsts
cmp
adc
out
insb
xor
xchg
xchg
sbb
gs
mov
sbb
arpl
lea
dec
cmc
fnsave
imull
add
adc
loop
inc
call
push
xchg
jo
cmpb
push
ljmp
je
mov
in
and
loope
pop
sbb
aas
cmp
sub
xchg
jnp
push
push
enter
nop
cmp
sub
adc
sbb
or
nop
inc
sbb
dec
xchg
mov
push
stos
cmp
xchg
sbb
in
push
sbb
les
sub
and
leave
test
ljmp
and
cmp
sysexit
and
out
mov
xor
add
push
mov
jns
adc
es
adc
inc
sti
push
or
jbe
or
pop
nop
mov
jle
arpl
and
loope
cld
jb
and
adc
fdiv
in
out
lds
mul
add
sbb
push
sub
adc
mov
mov
in
jnp
dec
push
fldt
or
mov
mov
ficoms
test
sbb
or
pop
loop
aas
inc
mov
cmp
lahf
mov
test
in
je
jne
push
loope
dec
fsubr
mov
mov
jae
negl
pop
sub
sti
cmp
or
jmp
int
push
xchg
std
aas
movsl
cmp
add
xchg
std
xchg
sti
aas
xchg
movsb
stc
add
xchg
sub
inc
add
leave
fnsave
pop
mov
push
cmc
push
jp
inc
or
add
add
mov
sbb
mov
daa
add
pushl
jecxz
cmp
sbb
je
cs
mov
mov
mov
dec
cld
gs
jae
add
popa
mov
cs
pop
lcall
shll
mov
imul
stos
and
xchg
gs
jo
and
mov
and
cmpsb
imul
lcall
lcall
and
or
fsubrl
enter
lcall
into
inc
scas
imul
lcall
pop
xlat
aaa
fcomp
shll
fcmovu
jo
imul
and
shll
and
xor
arpl
jo
aam
dec
cmp
push
jae
or
shll
inc
inc
cmp
inc
jae
repz
stc
push
ret
js
adc
aam
push
call
jp
pop
test
dec
enter
lcall
sti
push
jnp
sbb
stos
pop
filds
pushf
call
icebp
xor
xor
jnp
push
push
rolb
nop
cmp
jl
mov
or
push
or
adc
xor
mov
dec
pop
mov
leave
push
jmp
pop
lea
hlt
psubusb
mov
sti
pop
call
sbb
mov
scas
pop
adc
ret
mov
mov
or
call
cmp
sbb
mov
push
mov
sub
or
inc
mov
push
daa
push
add
push
pop
mov
adc
sub
lock
push
ss
leave
sbb
push
push
fdivrs
fwait
or
sub
push
imul
stos
sbb
mov
pop
push
adc
lea
pop
sub
jmp
mov
sbb
sub
ret
divb
test
push
inc
ret
inc
cltd
mov
js
daa
sbb
mov
lret
jne
fisttps
lret
adc
pop
adc
jbe,pn
daa
iret
enter
add
fldt
rol
popf
les
clc
stos
or
add
sub
mov
rcl
fcomp
in
outsl
mov
mov
dec
push
insl
mov
and
fists
ljmp
les
push
inc
jb
das
mov
sti
dec
inc
repz
call
inc
push
adc
aaa
inc
mov
push
aad
jo
sbb
pop
sub
or
test
je
les
repz
jl
rcrb
mov
in
cltd
mov
idiv
pop
clc
and
hlt
cmp
and
inc
jo
loope
xor
add
insl
add
sub
and
imul
xor
iret
add
mov
push
ret
push
sub
jne
ss
mov
in
mov
sahf
lods
push
hlt
push
xor
mov
lea
dec
dec
sub
mov
dec
dec
inc
push
sub
lret
mov
insb
insb
jno
adcb
insb
pop
xchg
gs
jne
cs
lods
call
test
dec
pop
adc
outsb
je
dec
shll
push
jb
dec
shll
je
inc
imul
lods
mov
imul
imul
movsb
imul
fwait
cmpsb
imul
pop
shrl
mov
gs
inc
push
es
js
xchg
insl
shll
xchg
inc
push
xor
xor
cwtl
js
lcall
shlb
fbld
cmp
inc
loop
in
pop
call
out
mov
pop
mov
lcall
mov
mov
mov
jbe
mov
mov
pop
jbe
mov
arpl
sbb
xchg
xchg
xchg
mov
fcom
popa
in
pushf
mov
mov
pusha
jmp
jg
and
sahf
std
cld
cmpsb
adc
xor
mov
add
int3
or
pop
xor
push
daa
and
pop
push
mov
iret
sbb
xor
mov
movsl
pop
repz
lahf
lea
loopne
lds
fcoml
xor
xchg
das
test
cli
push
icebp
sahf
scas
addr16
adc
jb
lock
shrb
in
insb
mov
inc
cmp
es
push
inc
fisttpl
movsb
imul
repz
sbb
stos
mov
push
add
or
loopne
insl
daa
leave
mov
cmp
push
add
ljmp
jmp
add
sub
movaps
add
add
bound
sbb
push
aas
je
add
lret
lsl
xor
jle
subl
mov
adc
mov
pop
hlt
ds
or
imul
mov
jb
add
clc
push
push
inc
in
fsubs
inc
cmp
jb
inc
pusha
out
scas
loope
movb
add
mov
bound
lds
pop
push
mov
or
xor
xor
fs
push
inc
sar
insb
insb
push
jb
push
add
arpl
jb
insb
push
lret
arpl
insw
aam
push
add
enter
mov
mov
cmp
cmpsl
push
lds
in
data16
lcall
aas
aaa
test
mov
icebp
fldl
xchg
in
add
cmp
hlt
cmp
mov
cli
fldl
jmp
call
jo
enter
aam
out
dec
inc
fld1
mov
push
divb
xor
or
call
fadd
jmp
push
jne
insl
push
cld
sbb
add
adcl
cmpsl
mov
loopne
xchg
cmpl
jns
jns
pusha
and
inc
rorl
mov
sub
mov
push
xchg
xor
lcall
xchg
outsb
cmp
jo
jae
insl
lcall
jne
and
jae
insl
bound
and
scas
aas
mov
add
cmp
orl
leave
inc
xlat
dec
out
jbe
int3
sbb
std
cmpsb
imul
imul
lcall
ss
cmpsb
imul
fldcw
in
in
mov
outsb
sbb
fisttpll
adc
shll
in
movsb
add
lahf
add
loopne
out
jne
fcomps
rolb
and
insb
xchg
xchg
mov
and
add
cmp
sahf
ljmp
or
test
int3
pop
cmp
pusha
sub
pop
insb
or
js
roll
push
sub
inc
js
push
push
je
imul
add
imul
adc
rolb
sar
pushf
xor
xor
pop
loopne
int3
pop
cli
inc
mov
hlt
je
cmpl
adc
cli
clc
or
pop
lcall
clc
cmpl
shr
jnp
pop
inc
pop
xor
stos
stos
imul
pop
jb
or
add
test
mov
lcall
xchg
jne
and
pop
cmpsl
jp
or
cmpsb
inc
iret
enter
xor
jno
repz
loopne
xorl
popw
jge
mov
sub
int
andb
mov
and
dec
xlat
mov
cmp
and
pop
sarb
push
mov
movsb
or
add
cmp
fs
adc
inc
sub
lods
or
test
jl
inc
mov
enter
mov
or
fdivrl
push
lcall
inc
inc
outsb
fdiv
cld
mov
and
outsl
or
or
stc
jle
xlat
add
fidivs
adc
in
xchg
es
call
sub
clc
jle
jae
add
cltd
std
pop
adc
rcrb
jmp
sub
popa
arpl
sub
mov
outsb
cmp
sub
gs
imul
imul
xchg
scas
push
mov
bound
mov
pop
mov
lcall
rol
ret
imul
mov
jne
int3
pop
xchg
in
lret
aas
popa
arpl
xchg
imul
pop
xchg
gs
jb
jns
cmp
dec
jne
fwait
xchg
test
testb
lds
outsl
jp
sub
push
std
and
dec
mov
adc
dec
or
pop
fsubrs
shr
sbb
xlat
cmpl
stc
hlt
push
mov
jns
dec
xchg
mov
adc
push
js
arpl
cmp
call
sbb
negl
push
xor
mov
push
cmpsl
call
mov
aas
push
scas
adcl
ss
jno
jns
push
xor
faddl
mov
inc
inc
jns
gs
jb
sub
arpl
xor
daa
lret
cmp
jb
inc
or
outsl
es
jne
inc
push
sbb
outsl
jbe
adc
xlat
jne
dec
ret
insb
sbbl
insb
lods
lods
inc
xlat
pop
add
in
scas
sub
test
xchg
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
jb
arpl
xor
xor
outsl
popa
jb
mov
sbb
sbb
in
fs
ljmp
je
out
jns
out
inc
int3
push
sbb
pop
cmp
inc
mov
jno
or
xor
dec
mov
int
pop
jmp
and
imul
push
xor
mov
push
flds
fwait
lock
imul
pop
je
adc
adc
shrb
pop
sub
cmp
dec
mov
add
mov
adcl
push
clc
jmp
and
jmp
push
cmp
or
push
mov
xor
jle
daa
or
pop
or
jge
mov
push
outsl
or
adcl
mov
sarb
jl,pn
sbb
or
js
call
jae
gs
push
movl
cli
imul
in
mov
mov
sub
shrb
aaa
or
stos
or
jle
xor
add
push
or
jne
lcall
data16
imul
imul
mov
pop
push
inc
mov
ret
gs
lcall
mov
leave
outsl
push
outsl
gs
xchg
test
xchg
gs
xchg
push
dec
inc
popa
arpl
dec
push
dec
leave
inc
shlb
xor
or
sbb
sbb
mov
push
push
sahf
mov
imul
xchg
fs
mov
addb
int3
add
aaa
mov
pusha
cmp
xchg
scas
rol
jns
cld
mov
jbe
mov
adc
mov
lods
or
test
mov
or
mov
mov
addr16
jae
jb
inc
cmp
dec
rcrb
xor
dec
mov
ret
loope
jo
cmp
push
push
mov
pop
cwtl
or
movb
popa
in
inc
add
sub
cwtl
cltd
add
stos
inc
push
and
add
int
and
adc
in
sub
shrb
outsb
out
shrb
ljmp
outsl
in
insl
mov
addr16
ds
sti
xor
dec
push
push
in
ficoms
rolb
cltd
lds
xorb
repnz
loope,pn
jno
jnp
iret
fldenv
pop
inc
fisttpll
push
mov
add
mov
adcl
je
push
adc
sub
xor
and
push
frstor
ds
aam
std
xor
fsub
nop
outsb
sbb
mov
stos
jns
out
cmp
and
vmwrite
cmp
dec
sahf
lret
inc
xor
rcr
mov
mov
push
test
jno
jae
test
mov
out
enter
lock
push
fs
mov
cmp
jl
into
or
jecxz
stos
sarl
push
mov
jmp
jmp
xchg
lcall
xchg
mov
in
cwtl
in
jle
lahf
cmc
or
push
ds
cmp
scas
inc
push
movsl
xchg
sbb
push
sbb
les
pop
mov
int3
sub
scas
fnstcw
sbb
xchg
aas
inc
adc
mov
sbb
popl
int3
popa
add
push
outsb
fadd
mov
test
popf
loop
arpl
outsb
mov
pop
mov
orb
mov
adc
xchg
mov
rcrb
adc
scas
mul
jb
fsubl
mov
mov
fwait
cmpsl
test
or
inc
push
mov
xor
ja
jne
sub
mov
mov
pop
gs
add
push
pop
cs
jle
lea
inc
scas
and
cs
mov
push
bound
xchg
mov
out
cmp
mov
add
xor
xlat
lret
pusha
or
or
int3
push
fmuls
mov
add
shl
int
fcmovnbe
inc
or
push
xlat
fmul
call
fwait
int
mov
roll
in
in
cmp
je
nop
xor
inc
in
push
shrl
mov
mov
mov
rol
ret
bnd
mov
arpl
and
mov
int
je
jb
std
or
mov
or
shll
out
push
and
xor
jns
inc
cmp
mov
pushf
xlat
call
imul
xchg
sbb
je
call
push
sahf
or
lahf
in
push
xor
pushf
or
add
mov
leave
xor
jecxz
mov
fadds
mov
movb
pushf
add
repnz
addr16
xchg
xorl
jmp
xor
jge
mov
add
xchg
mov
inc
in
out
jl
sbb
xchg
adc
push
xor
lcall
push
enter
and
loope
test
pop
mov
mov
xchg
jne
cli
scas
xchg
dec
repz
xchg
sbb
loopne
mov
repz
pop
mov
mov
andl
shll
movhps
mov
test
jnp
je
add
adc
clc
push
lea
insb
xchg
jne
movsb
and
daa
inc
out
dec
aad
mov
call
daa
fcompl
pop
fisubl
mov
and
fnsave
mov
jae
cltd
pusha
repz
stc
test
adc
inc
dec
cld
push
rolb
push
ljmp
adc
cmp
lret
gs
pop
adc
push
cs
adc
sbb
pop
push
clc
inc
xor
cmp
adc
sbb
cmp
test
xlat
push
mov
pop
out
cmp
mov
dec
rol
push
andl
push
cmpsl
mov
mov
mov
mov
rcrl
push
lahf
sahf
data16
loop
and
mov
push
sbbl
divb
pushf
and
jle
ret
and
in
and
int3
sbb
rcr
jmp
push
adc
push
out
mov
mov
mov
mov
inc
aas
mov
psubsw
mov
es
sub
fdivrl
pushf
dec
fsubr
add
mov
adc
btc
and
push
mov
push
clc
cmp
jmp
xchg
pop
orl
decl
sbb
aam
inc
add
and
enter
pushf
inc
mov
out
push
mov
pusha
call
fsubp
idiv
xor
mov
pusha
or
inc
jmp
ja
dec
jmp
aaa
data16
not
jmp
ljmp
enter
inc
lods
std
rcrb
lock
sub
sbb
push
fsubrl
pushf
ds
jmp
test
jmp
mov
pusha
sahf
sub
sbb
push
mov
adc
cmpsb
sub
test
movsb
outsb
jb
push
xchg
gs
xchg
cs
inc
inc
fs
dec
xchg
gs
arpl
pop
xchg
adc
xchg
popa
outsb
gs
xchg
gs
cs
outsb
jae
add
xchg
ja
jne
push
xor
test
xlat
daa
aad
adc
or
xchg
in
imull
jb
push
call
outsb
push
popf
repnz
fnstenv
ds
or
fnsave
hlt
push
jne
jl
dec
leave
cmc
push
cmp
pop
or
mov
ds
in
jle
sbb
mov
outsb
sarl
sub
dec
add
or
jns
out
jl
or
add
pop
push
mov
push
push
add
push
adc
in
sub
int
std
clc
cli
mov
push
sbb
test
add
fstps
push
bound
cmpsb
iret
pusha
jbe
add
imul
adc
int
pop
mov
add
and
sbb
jo
std
repnz
cmp
mov
test
popf
or
sahf
xchg
cmpb
jmp
sbb
xor
int3
test
and
inc
mov
in
adc
pop
mov
inc
mov
shrb
sub
fimuls
push
mov
scas
sti
sbb
mov
or
push
and
icebp
int
std
or
mov
andb
jle
loop
pop
pop
int3
cwtl
or
add
or
cwtl
scas
lret
xchg
inc
lods
xlat
and
jmp
je
movsl
pop
mov
sub
jo
or
dec
pop
push
inc
lock
mov
add
je
pop
mov
add
xor
mov
mov
push
faddl
cld
sbb
sub
xor
stos
lahf
sub
jmp
inc
scas
push
mov
or
jg
xor
mov
lcall
sbb
or
or
mov
fs
pop
sub
jae
sahf
add
adc
pop
add
dec
repz
clc
aas
inc
in
aas
add
jns
in
shl
inc
inc
sahf
enter
enter
sti
add
sbb
jl
lret
pop
orl
or
loopne
fdivrs
ss
xor
andl
mov
pop
out
adc
pop
push
pusha
inc
push
dec
cmp
mov
das
xor
sbb
pop
mov
adc
pop
fwait
sbb
in
push
or
adc
out
jae
and
or
enter
jns
push
inc
push
subb
adc
int3
xor
add
push
or
and
shlb
pop
xor
push
and
stos
inc
sahf
xor
shlb
out
or
mov
rcrl
fs
push
enter
and
sub
test
cmp
rclb
je
dec
sahf
cld
add
call
repnz
in
jl
add
add
add
add
adc
xor
xor
add
mov
dec
cs
xchg
outsb
inc
stos
lahf
jl
int3
pop
jle
jecxz
hlt
xchg
or
pop
pop
xchg
gs
outsl
outsb
je
pop
cmpsl
test
mov
cltd
cmp
cmp
jae
adc
adc
in
je
and
loopne
call
ljmp
lock
sub
or
mov
es
mov
xlat
frstor
popf
mov
mov
push
sbb
mov
loope
push
cmp
cmp
pushf
push
adc
cmp
jo
cmp
sub
push
sbb
scas
or
sbbb
jge
aam
push
or
mov
cmp
xor
inc
jne
pop
push
or
gs
sbb
rcll
mov
movsb
lock
add
cmp
repz
iret
push
and
lock
pop
pop
pop
mov
nop
xchg
sahf
add
xor
and
jo
xor
pop
xchg
pop
lds
pushf
push
mov
mov
test
or
sbb
mov
push
add
into
lar
insb
je
xchg
iret
xor
jg
outsb
sbb
cmp
inc
cmp
jl
ljmp
mov
lods
lock
dec
inc
stos
andl
ret
enter
les
nop
push
repnz
add
das
dec
add
in
out
lahf
subl
or
shlb
in
aam
fs
add
movsl
movsb
outsb
scas
xchg
out
cld
add
ljmp
mov
pop
add
add
xchg
adc
xor
cs
sbb
adc
shl
gs
sub
sub
jb
jb
andb
popf
push
inc
rcrb
fs
stos
add
faddp
adc
dec
mov
and
std
leave
std
adc
mov
mov
rclb
pusha
inc
mov
out
loopne
xchg
add
fwait
sbb
jb
push
mov
xor
sbb
mov
fucomip
movsl
les
add
cwtl
inc
fwait
pusha
xor
pop
push
pop
lcall
jmp
cmpsl
mov
rcrb
inc
dec
rclb
addb
shrb
add
sub
or
out
xor
js
jl
and
test
mov
sub
nop
iret
aaa
sbb
and
setno
add
and
xchg
xchg
xchg
sbb
adc
cmp
enter
xor
add
sub
mov
flds
fmulp
xor
cmpsb
insb
scas
sub
mov
movsb
or
cmp
xorb
adc
xchg
xor
data16
inc
add
xor
add
fwait
pop
mov
and
cmpsb
inc
jb
adc
or
frstor
ljmp
gs
jbe
ja
int3
inc
jne
inc
pop
pop
add
add
pop
add
sub
add
ja
and
push
add
jo
cmpb
dec
adc
enter
push
addl
aad
xor
loopne
xchg
xchg
add
outsb
adc
rorl
mov
outsl
pop
or
sbb
jne
or
stos
or
xchg
mov
popa
adc
mov
push
sub
push
push
push
pusha
mov
pop
push
lods
jno
pop
gs
sbb
sub
imul
xor
dec
fsts
imul
xor
js
rcll
pusha
adc
add
pop
push
outsl
imul
xor
arpl
cmp
popa
mov
sarb
mov
dec
or
mov
xorb
add
jns
mov
or
in
xor
adc
xor
mov
imul
sbb
adc
pop
ret
mov
jbe
jnp
pushf
icebp
imul
xchg
lea
sbb
xor
jae
xchg
cli
je
xchg
fst
adc
insl
test
xorl
mov
dec
pop
adc
dec
add
add
icebp
or
insl
sbb
gs
fs
and
or
inc
cmp
std
inc
pop
pop
and
xchg
ss
mov
in
mov
fiadds
lock
push
aad
add
and
pop
leave
out
dec
push
pop
pop
or
push
adc
inc
inc
cmp
ret
sbb
add
je
scas
adc
add
jb
xchg
jge
sub
sub
pop
and
mov
inc
and
mov
inc
dec
mov
arpl
push
and
bound
lds
inc
idivl
adc
and
pcmpgtd
stc
inc
outsb
jne
push
xor
test
adc
int3
fs
ret
or
dec
sub
dec
push
jmp
push
mov
pop
jnp
pop
push
sub
lcall
data16
xchg
inc
popa
mov
sbb
jae
jecxz
push
and
fsubp
or
pop
jecxz
sbb
jns
pop
adc
cmc
push
jo
push
and
cmp
stos
dec
pop
das
mov
mov
mov
aas
xor
inc
pop
push
add
loopew
dec
testl
dec
sbb
out
in
xchg
xchg
bound
outsb
mov
in
jge
in
or
or
lcall
xchg
push
shlb
stc
lea
movsb
sub
pcmpeqw
jns
insl
push
inc
pop
xor
pop
add
mov
and
sbb
clc
or
xchg
or
xor
pop
and
fcoml
adc
add
jnp
inc
sub
jle
xor
dec
inc
dec
push
dec
pop
daa
imul
and
popa
dec
push
int
adc
mov
inc
jne
cmpsb
mov
jg
call
push
jmp
jae
and
stos
inc
mov
imul
mov
ficoms
jmp
push
cmp
or
add
push
scas
xchg
pop
test
shl
mov
push
fidivl
paddsb
lock
pop
std
lods
push
mov
mov
test
push
push
add
push
repnz
push
rorb
adc
pop
mov
inc
cld
pushf
xchg
cmp
add
ficompl
push
pushf
lret
fstps
pop
xor
cld
lahf
mov
adc
ret
jle
jmp
cmp
test
pop
stc
cmc
fbstp
cmp
fbld
lea
push
jmp
and
and
xor
not
inc
push
ror
sbb
sub
jg
das
add
loopne
mov
mov
stc
sub
loopne
lcall
ret
clc
mov
mov
xlat
mov
jp
jae
cmp
mov
pushf
pusha
push
xchg
xor
inc
cmp
sti
and
adc
xor
loopne
pusha
jp
xchg
call
ss
mov
cmp
sbb
pushf
inc
adc
mov
pushf
mov
and
ror
test
mov
adc
push
pusha
adc
and
mov
xor
sub
cmp
jns
ret
dec
jo
outsl
jg
stos
icebp
pop
bswap
dec
cmp
loope
shr
sbb
fstp
jnp
popf
add
mov
je
jae
arpl
push
stc
sub
pusha
call
mov
push
mov
ret
out
xor
adc
cmp
leave
push
push
stc
xorl
js
sbb
clc
add
imul
jmp
ret
cmp
call
mov
jmp
mov
pop
shl
daa
call
xlat
jmp
push
leave
stos
iret
jmp
stc
clc
mov
ja
pop
jmp
inc
mov
out
scas
fisttpll
or
sbb
rcll
lods
xor
cmc
jne
mov
mov
jge
add
push
ds
test
adc
adc
fidivs
push
bnd
lock
mov
push
dec
jae
or
push
xchg
test
sti
jb
andnps
sbb
fucom
pop
mov
push
inc
and
sbb
call
mov
xchg
mov
in
add
cmc
mov
add
sub
dec
xor
jo
fwait
dec
pushf
xchg
push
mov
adc
in
fisttpll
push
jmp
mov
popa
xchg
sbb
cld
das
mov
pushf
not
cmp
or
xor
setge
shll
cs
mov
adc
mov
insl
movsl
cli
mov
fcmovbe
cli
mov
outsl
das
adc
dec
cmp
mov
mov
loop
mov
les
sub
or
in
mov
shll
je
inc
roll
neg
and
mov
repz
clc
cmc
std
jg
ficoms
jmp
not
lea
clc
cmp
in
into
cmp
in
fiaddl
cmp
shr
out
dec
loop
cmp
push
clc
stc
jo
not
clc
adc
out
fcomi
push
gs
incb
adc
push
call
and
add
pop
xor
sbb
lods
xor
fld
mov
cmc
or
imul
arpl
fnsave
cmp
repnz
rcl
fsubrs
popa
mov
imul
js
scas
mov
je
call
fucomi
mov
cmp
pusha
test
js
imul
call
sti
sbb
pusha
dec
sar
pop
decl
or
fmuls
stos
nop
pushf
push
bswap
es
mov
add
push
adc
lcall
or
mov
mov
cwtl
mov
ret
xchg
pop
or
mov
push
sbb
pop
scas
cmc
test
xor
add
sub
add
fucomp
dec
call
xor
hlt
xor
mov
lret
push
sub
arpl
ja
dec
or
sbb
call
ss
sti
cmc
out
gs
loopne
jmp
sub
rcr
fildll
xchg
push
mov
cmc
adc
lcall
xchg
mov
push
fsubrl
notl
jg
mov
icebp
fnsave
gs
mov
movsb
daa
mov
ret
lahf
cld
sub
mov
cld
jns
rep
inc
insl
mov
mov
push
testb
add
rorb
clc
push
mov
fs
icebp
pop
stc
insl
rolb
adc
inc
xchg
cmp
xchg
adc
pusha
ljmp
sub
call
cmp
fstpl
out
push
mov
pusha
test
rorl
mov
jmp
mov
pusha
and
adc
jbe
xor
aaa
stos
fucomip
inc
inc
cs
mov
mov
xor
mov
inc
xlat
lods
pusha
cmc
mov
insl
stc
pusha
ret
inc
mov
sub
pushf
push
mov
jmp
out
mov
add
cmpb
ret
add
xor
mov
divb
fwait
outsl
popa
mov
rcll
test
pop
lcall
and
mov
aam
jp
js
or
aas
movhlps
call
sub
fdivl
xchg
out
rcll
mov
xor
xchg
mov
xchg
or
xchg
call
jge
mov
movsb
jl
aaa
repz
push
adcb
cmp
and
adc
jmp
enter
dec
inc
lods
adc
daa
adc
mov
outsb
xchg
orb
ljmp
and
mov
lcall
sbb
add
call
push
xchg
jns
repnz
popa
jle
sub
sahf
lcall
scas
ret
or
mov
decl
cmpsl
add
jge
jmp
pop
push
pop
in
or
cltd
sub
daa
mov
ljmp
pusha
fwait
sti
addb
pop
or
add
pop
cld
shr
jp
jecxz
pop
lods
les
cli
aad
xlat
loop
fcoms
cmpsb
jl
mov
inc
ret
fwait
pushf
es
sahf
sbb
cltd
mov
aad
ret
lods
push
adc
sbb
push
xorl
cltd
js
cli
push
pop
aaa
sbb
mov
dec
dec
rorb
test
testl
enter
daa
adc
push
push
dec
and
mov
jne
loop
sub
shlb
aaa
push
ljmp
popa
addr16
call
jno
aam
pop
mov
mov
jle
out
cld
jmp
sbb
jno
dec
daa
inc
test
adc
push
cld
call
jmp
or
aam
add
enter
mov
push
push
fisttps
pop
mov
sub
pusha
mov
push
mov
mov
xchg
repnz
fwait
cmp
pop
push
xchg
and
mov
loope
cli
insb
and
test
das
sub
pusha
or
test
ret
cld
adc
movb
add
fidivrl
lret
pop
mov
pusha
or
lret
push
shl
into
jmp
fisttpll
add
fnstenv
mov
repnz
and
mov
push
imul
push
imul
ret
cs
pop
lret
fistpll
push
dec
rcrl
jg
repnz
push
adc
es
das
and
test
ja
cli
test
ret
lahf
jge
test
test
mov
mov
ror
sub
enter
fsubr
mov
inc
scas
lds
xor
es
dec
xchg
pop
ret
stc
mov
adcl
jnp
xor
fwait
mov
push
stos
xchg
mov
cmc
xor
mov
or
inc
clc
mov
call
cmc
sbb
fidivrl
fiadds
call
sbb
int
jecxz
inc
inc
aad
pop
pop
mov
sahf
hlt
mov
fucomi
push
mov
sbb
adc
push
or
mov
and
inc
inc
jmp
enter
mov
or
imul
mov
iret
mov
cmp
mov
ret
xor
push
xchg
sarl
hlt
aam
and
push
jmp
faddl
sahf
gs
cmp
fdivrl
xor
mov
push
fwait
dec
mov
cmp
xlat
cs
adc
out
sbb
jge
les
pop
push
repnz
xor
lock
es
sub
and
mov
mov
xchg
jbe
rcrl
xor
loop
int3
push
das
clc
loopne
test
fld
add
lret
sbb
out
stc
push
in
rorb
cmp
outsb
pop
cs
in
adc
lock
add
cmp
insl
lods
mov
or
in
adc
add
push
out
xchg
pop
sub
pushf
out
in
fnstenv
aaa
jmp
sbb
pop
fwait
xor
sub
inc
jmp
fsubrs
icebp
dec
pop
fldl
imul
fisttpll
sbb
mov
fistpll
jle
int
adc
xor
pop
jmp
fcompl
mov
enter
jnp
jnp
aaa
aam
inc
aad
daa
mov
in
icebp
pop
pop
outsl
jecxz
mov
dec
xlat
mov
dec
sahf
cmp
sub
cmp
ss
aas
jecxz
loope
nop
daa
dec
sahf
in
rclb
loop
nop
daa
mov
jmp
mov
jmp
leave
xchg
mov
jmp
mov
xchg
aaa
aaa
mov
lret
xchg
lahf
das
dec
xchg
cmp
outsl
repnz
ret
shll
aad
out
js
jle
sarl
and
fldenv
int3
xor
pop
iret
aas
lock
lea
pop
out
mov
aaa
fstpt
pop
mov
addr16
mov
es
in
mov
daa
mov
jnp
or
sbb
es
xchg
adc
jnp
inc
fwait
and
arpl
fidivrs
aaa
cmp
pop
mov
imul
aaa
outsl
pcmpeqd
mov
jnp
jecxz
ficomps
imull
bt
jg
mov
data16
iret
sbb
pop
fistl
fsubp
int
inc
sti
lahf
mov
movsb
ret
in
iret
mov
or
jmp
dec
mov
lsl
adc
std
jnp
jg
outsl
xor
xor
stc
push
ficoml
jmp
and
ljmp
sti
ret
and
sub
xor
cmc
cwtl
call
or
push
test
sbb
or
clc
push
not
cli
dec
cld
add
faddl
cmc
pushf
jmp
cwtl
push
xor
int
sahf
lahf
out
inc
loopne
or
push
shlb
stos
sbb
stc
pushf
dec
fsubr
js
or
incl
inc
and
nop
sub
pop
xlat
mov
aad
faddl
mov
xchg
fnsave
or
fistpll
stos
inc
test
xor
out
push
lock
fcoms
xor
inc
rol
out
out
adc
pusha
and
mov
and
je
loop
inc
or
mov
xchg
sbb
inc
mov
jmp
addr16
aaa
sub
adc
mov
out
ret
jmp
stc
mov
loop
outsb
jg
ror
rcl
sub
push
add
push
test
mov
jl
outsl
add
inc
shr
sbb
add
jmp
std
outsl
in
push
not
stc
cmp
mov
lds
xor
push
outsl
pop
mov
cmp
insb
sub
btc
insb
aaa
test
mov
fmuls
shll
sarl
int
pushf
not
xadd
dec
adc
loope
lret
xor
btr
or
ss
xor
jmp
lods
add
test
pop
mov
test
test
push
push
cwtl
push
jl
mov
std
lret
pop
jno
pop
mov
jmp
sbb
repnz
jmp
mov
clc
call
shrl
pushf
add
pop
dec
js
outsb
cs
incb
cld
cmp
adc
or
add
pop
xchg
rdtsc
fidivrl
in
jmp
and
adc
test
mov
cmp
out
mull
mov
cli
pop
je
push
test
call
and
xchg
rcrb
ljmp
mov
lock
fwait
sbbl
std
jg
add
incl
aad
lea
dec
sbb
cwtl
pop
mov
add
dec
filds
sub
xchg
shrb
ss
jne
ret
push
adc
inc
in
scas
in
test
xchg
pop
imul
inc
inc
cld
push
cwtl
jo
pop
neg
enter
test
das
les
mov
jmp
xchg
jmp
cmpsb
sub
mov
shll
leave
inc
out
bound
shr
lret
mov
call
jo
mov
pop
icebp
fwait
jb
adc
dec
je
out
ss
pop
call
mov
xor
mov
jmp
jle
pop
clc
add
icebp
pop
sbb
sbb
rep
and
jg
mov
sbb
repz
push
adc
push
imul
pop
popf
push
inc
xlat
mov
imul
mov
dec
adc
jmp
mov
out
aaa
cli
in
push
je
dec
js
push
jbe
jne
lock
and
imul
and
push
rcll
cmp
jle
in
jmp
insb
ss
jnp
out
jg
repz
mov
pop
pop
out
add
mov
adc
jmp
fildl
pop
leave
mov
movsl
lret
jnp
hlt
enter
cld
sbb
mov
adc
cmp
orb
xor
call
xchg
jbe
ja
add
insl
pop
call
xor
test
movsl
ret
fcom
scas
jp
cmp
lods
jo
dec
shlb
sysexit
testl
jne
mov
das
push
push
or
lea
sbb
jae
sub
fldt
fsubl
hlt
ljmp
ret
loopne,pn
loop
add
or
enter
add
xchg
das
cld
add
stc
lret
rclb
stc
gs
mov
insl
mov
pop
popa
loopne
push
jmp
out
dec
xchg
or
sub
popa
stos
inc
mov
int3
lret
push
testl
push
sti
jae
je
sbb
or
mov
jg
or
shl
setns
inc
lods
and
adc
add
insl
sub
ret
ljmp
ror
sbb
jo
dec
stc
push
movsb
fisubl
sub
mov
xchg
fidivs
mov
dec
sub
arpl
xlat
or
cmp
call
sbb
mov
fisubl
rcl
push
and
xor
inc
xor
pop
jge
or
adc
ss
inc
ljmp
or
push
jp
rolb
or
cmp
jl
xor
ret
mov
sbb
das
stc
xchg
jno
je
insb
aas
or
insl
rorl
jno
aad
jmp
sbb
pushl
movsb
push
sub
fcoms
gs
xor
inc
aaa
or
pusha
or
jmp
xor
daa
inc
pushf
out
add
fimuls
xchg
push
stc
ror
stc
jmp
scas
push
pshufw
mov
aad
lock
inc
dec
leave
das
mov
fsin
shll
das
inc
push
pusha
inc
les
pusha
inc
rcr
inc
mov
stos
in
in
mov
lahf
pusha
sub
push
in
pop
insb
neg
ror
scas
push
stc
call
lock
push
mov
add
rclb
repnz
incl
add
repz
mov
lods
pusha
int3
mov
push
clc
and
mov
fprem1
rcr
push
bswap
push
sbb
aam
aas
fidivrl
and
lock
jmp
ja
fdivl
jmp
insl
call
dec
ja
outsb
sti
mov
mov
sub
or
inc
dec
and
dec
jns
jmp
cmpb
xchg
cld
das
mov
adc
lea
sub
push
clc
xchg
pushf
sub
loop
sbb
aaa
or
push
addr16
mov
pop
fldcw
adc
ja
sbb
cld
sub
lea
lahf
cli
mov
dec
jmp
mov
lods
mov
mov
push
pop
xchg
mov
cld
pop
lea
lea
scas
adc
xchg
jb
add
and
cli
mov
inc
mov
mulb
sub
sbb
push
int3
add
xchg
test
clc
xlat
ret
or
dec
and
fsub
sub
icebp
mov
mov
mov
call
xchg
iretw
dec
and
lret
mov
xchg
stc
fsubrs
adc
addr16
loope
inc
decl
inc
sub
insl
sub
cli
out
cmp
int
in
ret
or
lcall
dec
aad
inc
ret
cwtl
pop
cmpl
jnp
pop
inc
lahf
mov
cld
xchg
in
les
cld
lcall
xor
pop
cmc
lods
std
xchg
loope
adc
add
or
jmp
and
arpl
loop
xchg
mov
jo
cltd
push
cmp
pop
daa
dec
ja,pn
bound
addr16
pop
push
insb
ja
push
push
call
js
sbbl
pop
addb
stos
mov
repz
mov
cmpsb
fmuls
lcall
xchg
or
xlat
sub
in
lods
mov
pop
lods
sub
fwait
popf
jg
mov
roll
mov
xchg
add
into
sti
sbb
call
outsb
add
imul
lret
adc
fisttps
dec
xchg
fisttpl
test
xchg
pop
cwtl
fdivrl
mov
push
push
and
insb
cmpsb
jmp
rcrb
enter
sub
and
decl
fstl
fmuls
fucomp
fisttpl
mov
mov
lods
popa
sarl
pop
fisubrl
fstpl
inc
jns
mov
mov
aad
jecxz
test
mov
add
scas
movsb
sti
pop
clc
call
call
imul
push
push
lahf
inc
ret
adc
orl
or
pop
adc
movsl
fstpl
or
lahf
pop
lahf
cmp
mov
cmpsl
out
in
cmpsl
cli
daa
in
cmp
cli
ret
push
add
and
pop
push
dec
pop
xor
mov
test
mov
std
js
sub
gs
or
out
cmpl
adc
mov
xchg
aam
lret
mov
xchg
out
cwtl
roll
in
mov
xchg
outsl
into
cld
jg
push
test
inc
into
call
insl
stos
jp
cmpsl
fwait
xlat
cmpsb
jge
inc
or
sar
ljmp
xchg
mov
scas
int3
popf
loope
rclb
mov
lock
xchg
adc
mov
push
push
mov
adc
inc
and
outsl
cli
fstl
jmp
shrl
fidivrl
inc
in
out
mov
inc
jb
imul
test
outsb
lods
mov
or
call
sbb
cmp
pop
mov
pop
and
or
je
outsl
cld
jg
icebp
aam
pop
scas
call
mov
ret
pop
add
jg
test
cmpsb
ret
and
mov
fcmovu
ret
int
jae
or
gs
inc
ficoml
imul
mov
mov
test
ss
ss
shl
repz
or
push
fwait
rcll
iret
movsl
rorb
cmc
inc
xchg
bound
jnp
jg
idivb
idivb
popf
cmp
cmp
xchg
sbb
call
aas
in
push
sbb
push
insl
xor
cmc
pop
lods
push
xlat
xchg
push
jae
jmp
jmp
xor
jbe
sarb
sub
out
movsb
sub
mov
adc
fucomp
pop
fnsave
fimull
test
mov
dec
std
push
xchg
cltd
leave
movsb
lea
lret
push
xlat
lcall
call
xchg
aad
xor
jmp
aaa
cmp
les
lods
decb
cmp
push
imul
cli
mov
mov
ret
ljmp
aad
fsubrs
fcomps
mov
lock
pop
sti
mov
ljmp
cld
scas
insl
fldcw
inc
dec
divb
out
addb
mov
lods
shll
ret
xchg
ret
xchg
mov
xor
cli
pop
out
xchg
cwtl
mov
mov
lcall
inc
in
jbe
jnp
cmpb
aad
xchg
lcall
popw
fs
decl
je
dec
xchg
leave
push
ds
das
mov
dec
xor
mov
lcall
aas
pop
pop
lea
jbe
cmc
gs
or
push
pop
cmpb
jmp
push
xlat
add
loope
mov
mov
lret
lods
movl
lods
mov
clc
aaa
fisttpl
and
pop
imul
je
pusha
aas
dec
xchg
movl
imul
pop
icebp
mov
pop
mov
sbb
sbb
outsl
imul
out
pushf
pop
fsub
mov
lret
xor
sbb
ljmp
pop
cltd
jno
pop
fs
insl
xor
xorb
mov
inc
dec
inc
popf
out
fwait
mov
push
rcll
cli
enter
rcrl
popa
aaa
insb
push
decl
punpckhdq
ret
mov
jg
mulb
repnz
jp
pop
sub
pop
test
movsl
jle
pop
dec
push
xlat
mov
movsb
mov
out
movsb
loopne
jmp
outsl
decl
dec
loope
adc
scas
ja
jo
bound
sbb
mov
jns
call
fidivs
xor
mov
mov
mov
rcrb
fucomi
adcb
mov
cmp
pop
incl
sub
and
inc
lea
loope
push
cld
inc
in
adc
dec
cmp
psubb
xchg
lea
xchg
in
or
cmpsb
sub
add
inc
or
mov
push
jno
cmp
lds
sbb
adc
push
pushf
mov
aaa
fmuls
sbb
cld
and
jge
ljmp
and
cld
inc
divb
inc
lock
cmpsl
repnz
pop
pop
jo
sbbl
xchg
inc
les
fwait
lcall
mov
mov
roll
jmp
sub
jae
jg
jecxz
pushf
jmp
jae
add
push
or
mov
int3
and
into
idiv
js
icebp
jmp
push
push
xchg
es
and
cli
jmp
fs
lock
xchg
push
fists
addr16
enter
sub
dec
push
dec
sbb
mov
mov
imul
mov
cld
ret
xor
mov
int
fisttpll
mov
sub
mov
mov
mov
inc
out
inc
test
lods
jle
jne
fwait
xor
push
sbb
add
push
inc
dec
sbb
shlb
sbb
mov
out
sbb
dec
shlb
xor
adc
lods
repz
add
popf
rorl
je
sahf
pop
cli
jg
lds
cli
fstl
dec
xor
pop
icebp
cld
and
ret
aam
test
daa
pop
aad
mov
xor
ljmp
push
sbb
hlt
int
mov
xchg
popf
pop
and
mov
pop
xor
insb
stc
loope
pop
jb
pop
aaa
loopne
push
inc
ss
jmp
test
pusha
rol
push
shll
rclb
rclb
inc
push
fprem
jmp
or
fmull
scas
mov
iret
push
mov
inc
xchg
dec
out
xchg
out
or
cmpsl
mov
cmc
push
int3
lret
pop
loopne
pop
aaa
test
aaa
ja
inc
or
dec
sub
mov
decl
in
or
dec
xchg
insb
imul
push
mov
aaa
movsl
stos
pusha
loope
jo
push
cmp
push
pop
outsl
es
jbe
push
xchg
xor
inc
mov
mov
scas
enter
sarl
mov
mov
add
mov
xchg
stos
icebp
xchg
fldcw
xor
add
cwtl
xchg
jae
lods
inc
decb
cmp
mov
ja
imul
xchg
nop
jle
pushl
insl
sbb
fwait
iret
leave
inc
ljmp
add
stos
subb
and
xor
fcmovne
incl
loop
lods
sub
scas
inc
sbb
xchg
push
jnp
fbstp
and
pop
mov
mov
cli
adc
aaa
mov
pop
jg
call
pop
add
jp
jno
add
cmp
out
movsb
fnstsw
fsubs
cmp
testl
fwait
jl
das
mov
out
pop
push
jbe
mov
jp
insl
add
lret
test
call
cmp
inc
sub
fs
ficomps
out
clc
inc
xchg
ljmp
ja
dec
add
push
test
cmpsb
loope
lock
mov
inc
scas
rclb
pop
dec
add
ljmp
jmp
mov
pop
jge
push
sbb
int
repnz
or
stos
cld
ljmp
js
enter
mov
pop
stos
imul
jg
popf
xchg
fsts
imul
and
add
orb
fwait
jle
in
xchg
stos
ss
arpl
daa
out
pushl
cmc
add
jl
push
lock
std
std
mov
popa
push
decl
mov
jbe
sarb
sub
add
ss
out
pop
dec
cmp
sarl
dec
xlat
and
aam
push
ret
jecxz
das
adc
test
or
jmp
outsb
fildl
ficomps
inc
mov
mov
sub
xor
les
push
add
jmp
jae
enter
fisttps
mov
mov
dec
jg
int3
dec
dec
lret
repnz
and
popa
movntq
jnp
add
jae
push
jmp
cmpl
lret
aam
pop
iret
in
sub
test
adc
dec
decl
add
das
ret
push
test
icebp
out
vpcomud
mov
adc
dec
lcall
push
push
jno
enter
lcall
fadd
xor
sub
add
leave
outsb
add
loope
lcall
mov
jnp
ljmp
movsb
lods
in
cli
dec
stos
inc
into
pop
mov
sbb
cs
or
xchg
xchg
inc
pop
xor
push
xor
mov
cmp
cs
shrb
cmp
cmp
mov
lods
jbe
mov
push
push
std
inc
pop
jecxz
lret
addl
lea
in
mov
clc
cs
jmp
jl
xor
xchg
outsl
or
inc
mov
dec
lret
repnz
dec
inc
loopne
pop
jge
cltd
xchg
pop
cs
push
or
lods
and
push
into
jg
shrb
ljmp
xchg
and
push
pop
add
inc
ss
adc
mov
mov
push
sub
push
fmuls
sub
dec
test
mov
sbb
lret
dec
pop
daa
arpl
or
xchg
pop
notl
jge
cltd
test
adc
cld
and
aam
pop
shr
js
mov
rorl
aaa
cld
call
add
xchg
xchg
inc
push
in
adc
scas
je
sbb
iret
mov
pop
xchg
pop
lock
fisubrs
ja
add
pop
jnp
push
mov
ljmp
lcall
xchg
pop
xchg
or
add
loope
cmp
push
mov
dec
int3
mov
push
cltd
test
fs
cmp
out
iret
cmpsl
pop
sbb
dec
aas
das
call
js
dec
daa
cmpsb
and
inc
bound
push
incl
sahf
xlat
pop
mov
and
sarb
mov
push
push
sti
dec
call
lcall
adc
int
inc
hlt
test
push
jmp
pop
aaa
push
test
jle
jg
std
jg
in
xor
cmpsl
push
push
rcrb
push
pop
push
cmp
jmp
jmp
fiadds
into
outsb
inc
cmp
dec
jbe
xchg
test
icebp
mov
inc
stos
fmul
out
fldenv
push
ud1
decl
ss
int
fsubrs
pop
out
mov
vpsubsb
xchg
ficomps
jg
lret
fs
fcmovnu
or
mov
test
insl
clc
push
cld
pushl
outsb
outsl
and
xchg
inc
rorb
pop
pop
sub
and
decl
lods
cltd
cmpsb
jmp
out
imul
pusha
jl
hlt
enter
test
imul
pop
add
or
int
cld
dec
jge
stc
in
inc
shll
aam
pop
jmp
daa
adc
das
cld
mov
xchg
sarl
xor
xchg
cmpsl
xchg
sub
outsl
popl
das
xor
mov
adc
dec
insl
xchg
gs
mov
add
dec
hlt
and
scas
push
or
pushf
jmp
mov
jb
mov
das
mov
push
mulb
enter
and
pop
insl
out
clc
lcall
add
xor
dec
adc
xor
push
mov
sbb
push
push
jl
pop
nop
int3
mov
es
inc
xchg
addr16
pop
insl
out
lret
pop
jge
imul
loope
adc
xchg
fldt
rcrl
call
lea
add
xchg
call
pop
push
jbe
ret
mov
mov
rol
jg
decl
sahf
push
int3
pop
je
mov
ret
sub
jmp
outsb
mov
or
outsl
push
mov
movsb
xchg
pop
outsl
test
fcomip
call
movsb
movsl
out
mov
ja
jns
sar
mov
mov
repnz
incl
xor
imul
inc
dec
fsubp
dec
call
stc
mov
fistpl
dec
fistpll
mov
imul
decb
ljmp
jg
stc
in
mov
cmp
mov
daa
cld
inc
int3
jnp
pop
jmp
cmpsb
in
cmp
dec
enter
insl
cwtl
mov
ret
jbe
es
std
into
jg
das
insb
and
nop
out
mov
mov
dec
dec
sti
and
aam
pop
ret
sub
pop
mov
adc
nop
adc
add
pushl
mov
xchg
or
mov
lcall
in
fimull
push
push
push
jg
sbb
pushl
test
jge
mov
outsb
clc
cmp
xchg
jnp
call
xor
jbe
xchg
jnp
in
pop
fidivl
ffreep
lea
fldenv
shrl
push
xchg
outsb
push
fcmovbe
jg
incl
mov
call
js
mov
mov
cld
lret
test
push
mov
lock
pushl
aas
test
lods
ret
pop
sub
push
push
sahf
jmp
cmpsb
out
or
pushl
shrl
dec
add
pop
jo
add
jo
sub
lahf
mov
jno
rolb
mov
data16
mov
dec
iret
jbe
xchg
push
pusha
xchg
data16
cmpsl
loop
inc
stos
faddp
mov
cltd
lret
lcall
loope
rolb
cmp
pop
hlt
jg
push
push
jne
jg
mov
mov
xlat
xor
scas
sarb
xchg
psllq
cld
ljmp
mov
mov
insl
sti
push
stc
dec
pop
mov
jge
xchg
jmp
sub
inc
inc
push
out
inc
jmp
mov
add
or
push
jle
das
mov
pop
fisubs
mov
jp
xlat
int3
outsb
mov
pop
imul
lods
ljmp
scas
fidivrl
movsb
movsb
jecxz
jmp
movb
out
pop
xor
pop
aaa
xchg
sbb
adc
pop
mov
dec
mov
ret
rcll
and
stc
ret
inc
dec
pop
dec
fdivrl
outsl
icebp
push
clc
inc
lahf
xchg
sbb
divl
pushl
jl
sti
inc
pop
outsb
scas
jmp
cmp
fistps
push
push
mov
push
fimull
jle
sub
test
aaa
loope
cmp
push
mov
lahf
outsl
jle
jle
push
addr16
cmp
jmp
leave
cmpsl
dec
sub
mov
loopne
ds
emms
add
fisubrs
stc
call
adcl
decl
in
push
js
stc
dec
jb
mov
pop
movsb
pop
mov
ljmp
xchg
fs
aas
outsb
cmc
std
test
aam
adc
pop
push
mov
mov
inc
outsb
in
leave
push
xchg
loop
lea
jno
fwait
repnz
into
pop
insl
sub
pop
lcall
mov
cmpxchg
jns
in
mov
sbb
fistpl
cs
xchg
push
imul
add
ja
jmp
ret
test
test
and
test
add
mov
ret
insb
adc
xlat
dec
or
js
call
data16
mov
filds
sbb
lds
jb
incb
bound
mov
inc
lcall
stos
cli
clc
test
mov
test
cli
aaa
fnstsw
aas
xchg
inc
add
or
lock
push
cmp
pop
add
loopne
mov
pushl
fsubrs
mov
cmp
fidivrs
arpl
push
hlt
dec
lock
cmp
call
cmp
jb
pop
mov
dec
cmp
std
daa
push
jecxz
insl
std
jno
push
rcrl
mov
sti
sub
jg
jl
jmp
jl
pusha
mov
vpcmpeqd
push
pop
mov
int
lds
enter
jno
das
mov
mov
insb
lock
out
loopne
push
jle
or
jmp
andl
cs
push
mov
xlat
jl
cld
fbstp
test
fs
inc
das
ds
or
subb
insb
and
inc
aad
aad
mov
or
lret
decl
outsb
mov
ret
jg
test
mov
das
lcall
cmp
mov
insb
in
jge
jns
dec
inc
das
incl
aam
pop
int
loope
es
fwait
sbb
in
xor
sub
inc
jbe
mov
push
movsb
mov
add
fdivrp
add
jg
orl
sub
inc
jmp
cwtl
xor
xor
xor
xor
xor
xor
hlt
xor
xor
or
adc
sbb
and
sub
jg
jg
xor
xor
xor
xor
movsb
xor
pop
pushl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
jl
xor
xor
repz
cli
ljmp
aaa
xor
cmp
aaa
pushl
xorl
aaa
mov
aaa
aad
push
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
dec
cld
pushl
add
cmp
cmp
cmp
cmp
cmp
cmp
std
ljmp
call
cmp
pop
cmp
popl
lods
sbb
lods
cmp
mov
iret
aaa
xchg
cmp
pop
lahf
cmp
cmp
cmp
xchg
pop
cmp
nop
cmp
or
dec
cmp
mov
lahf
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
incl
repnz
push
ds
mov
aas
jb
stos
aas
filds
test
lret
xchg
xor
xor
xor
xor
mov
lds
sub
xor
aaa
jno
jmp
xor
xor
xor
xor
xor
xor
xor
call
xor
push
xor
imul
xor
lcall
clc
shlb
push
ss
cmp
bound
pushl
jo
ja
jge
mov
shll
ss
cvttps2pi
aaa
sub
aaa
pop
push
push
pushl
pop
jle
mov
nop
aaa
xchg
aaa
sahf
aaa
cmpsb
aaa
out
cmp
cmp
cmp
cmpb
cmp
jg
cmp
add
cmp
push
cmp
imul
pop
xchg
pushf
ljmp
xor
std
jae
cmp
cmp
jp
test
lcall
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
push
je,pt
xchg
ds
pop
loop
ds
aas
cmp
ds
scas
dec
aas
push
aas
pop
mov
insb
sub
aas
pushf
aas
cmpsb
and
clc
and
clc
call
xorb
xor
xor
xor
xor
xor
outsb
xor
loope
xchg
mov
inc
lcall
xor
cmp
popa
xor
jl
call
lcall
xor
xor
xor
xor
xor
js
jg
sahf
ret
xor
rclb
ss
mov
ss
ss
xor
inc
aaa
insb
lret
aaa
ret
adc
sub
xchg
cmp
pushl
ret
cmp
repz
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
loope
dec
jle
test
mov
adc
and
cmp
fcomip
das
mov
push
cmp
cmp
add
cmp
cmp
cmp
fbstp
add
cmp
outsb
cmp
mov
mov
cmp
mov
ds
ds
aas
ljmp
xor
xchg
dec
xor
mov
inc
ja
pusha
xor
or
adc
push
xor
pushl
dec
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
cmpsb
jg
xor
je
xor
xor
pop
pop
push
xor
movsl
xor
or
jp
xorl
push
jp
jmp
mov
mov
aaa
and
sub
cmp
call
cmp
pop
cmp
jne
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
push
cmp
call
decl
cmp
cmp
insl
cmp
cmp
fwait
ss
cmp
cmp
cmp
cmp
cmp
pop
jb
outsl
mov
jg
mov
in
jmp
stc
cmp
in
std
jl,pt
xchg
ds
ds
aas
icebp
std
nop
call
decb
push
xor
insl
xor
xor
lea
xchg
xor
out
das
mov
xor
pop
xor
xor
pop
dec
dec
or
xor
inc
pop
dec
inc
pusha
inc
cli
xchg
pop
decl
xor
and
das
rcr
cmc
pop
test
dec
xor
xorl
test
xor
xor
xor
pop
lcall
jg
xor
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
cmp
popa
ss
xchg
ss
cmpsb
pop
cli
pushl
mov
ss
divb
ss
pop
aaa
sbb
scas
cmpsb
cmp
push
aaa
pop
aaa
gs
jb
mov
stos
aaa
mov
inc
aaa
lret
aaa
loopne
in
aaa
repz
pop
data16
js
lds
jecxz
fists
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
pop
cmp
mov
mov
xchg
cmp
loope
cmp
cmp
cmp
cmp
xchg
mov
sbb
and
xor
aaa
fdiv
popa
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cwtl
cmp
sarl
cmp
mov
push
ds
or
adc
sbb
sub
das
je
lods
aas
mov
mov
xor
insb
xor
xor
clc
mov
xchg
das
xor
xor
mov
icebp
dec
add
mov
xchg
mov
lcall
fists
add
or
adc
sbb
lea
inc
xor
bound
imul
jg
test
out
xor
xor
xor
xor
xor
xor
gs
fbstp
mov
xor
pop
mov
xor
xchg
cli
pushl
ret
xor
clc
in
ljmp
xor
add
dec
or
add
into
into
cmp
or
incl
inc
sbb
cmp
dec
push
add
std
scas
push
sbb
adc
mov
frstor
jl
mov
mov
je
dec
pop
shr
fdivrl
sub
mov
add
jno
inc
repnz
inc
add
cmp
add
addr16
jbe
in
loopne
and
add
test
pusha
mov
add
add
in
cmp
inc
enter
push
jae
arpl
ret
inc
pop
inc
push
bndldx
sbb
aaa
inc
xchg
push
cmp
xor
shrb
mov
call
sbb
in
xor
out
cmpsb
imul
cmpsb
imul
sub
imul
sbb
aam
pop
cmp
js
and
scas
push
push
inc
sub
inc
mov
sbb
push
dec
dec
inc
inc
adc
cmpsl
adc
sbbb
test
adc
mov
pop
or
mull
inc
aaa
test
dec
popa
jns
jne
jae
xor
pop
fsubrl
push
scas
popa
dec
outsl
jo
push
and
adc
inc
sidtl
add
inc
push
dec
dec
addl
outsb
gs
sub
push
push
adcb
add
push
push
pop
mov
dec
inc
jge
push
rep
or
and
test
or
mov
test
mov
adc
pusha
inc
lea
leave
hlt
add
and
push
or
mov
in
mov
pop
push
sub
popf
or
call
rcll
cmp
add
addl
jnp
out
stos
pop
sbb
jp
mov
xchg
jp
je
popf
in
pop
mov
cwtl
in
fs
neg
fsubr
pop
pop
push
jne
sbb
je
jnp
pop
stos
mov
inc
lock
add
push
xchg
sub
hlt
mov
ljmp
mov
cmpl
jbe
mov
or
or
cld
sub
call
popf
sti
ficomps
bound
push
mov
pop
sbb
sbb
sbb
and
xor
add
or
pop
and
pop
in
std
or
dec
les
nop
and
sbb
aad
test
add
mov
mov
or
sub
jge
insl
cs
fs
mov
insb
fimull
mov
pop
insl
insl
insb
add
inc
je
sbb
lret
mov
dec
inc
adc
test
es
mov
mov
mov
loopne
cmp
gs
insl
insl
inc
je
dec
xchg
gs
dec
inc
insb
cwtl
gs
lcall
xchg
stos
push
push
fwait
and
mov
shrb
clc
shl
and
add
das
sub
jle
lea
push
aam
push
cmp
mov
jle
dec
call
fisttpll
and
lret
addr16
in
add
push
addr16
es
test
out
sbb
in
inc
jmp
jb
mov
dec
adc
add
fs
aas
dec
mov
pop
leave
sbb
arpl
mov
mov
sbb
pop
push
movmskps
call
jns
and
sub
cltd
xchg
mov
push
push
or
pop
push
ret
xchg
and
scas
into
insl
or
pop
and
inc
loope
or
test
and
xchg
or
adc
cmp
or
cli
dec
jbe
loop
in
lahf
inc
cmp
xchg
add
mov
inc
add
xor
push
mov
or
cmovne
stos
popf
cmp
push
push
add
push
pop
daa
push
hlt
pop
or
pop
add
sbbb
leave
cmp
inc
iret
push
and
fs
adc
cmp
aas
mov
push
pusha
pop
leave
out
xchg
add
or
adc
xchg
adc
pop
push
and
xor
movsl
add
push
push
jnp
in
pop
add
ret
ss
dec
sbbl
or
int
sub
mov
mov
mov
arpl
mov
mov
mov
dec
mov
sub
mov
je
js
movsl
pop
push
mov
inc
mov
lods
pop
mov
dec
scas
je
outsl
jae
xchg
arpl
push
mov
push
mov
mov
adc
mov
mov
mov
sbb
stos
pop
add
push
and
mov
ret
lcall
imul
jo
push
cs
cld
arpl
push
mov
aam
jns
js
jo
fwait
in
xlat
insb
fsubrs
fisubl
jb
pop
xchg
mov
cs
stos
xchg
or
sub
mov
mov
scas
mov
adc
pop
insb
pop
jmp
and
fmull
push
or
pop
push
out
hlt
ret
add
pop
xor
ret
in
pusha
mov
fs
addr16
mov
or
jae
lret
mov
je
gs
pop
mov
icebp
outsb
insb
xchg
gs
xchg
popa
jne
arpl
add
fs
jb
aaa
rcl
dec
pop
lock
addr16
lret
adc
xorb
xchg
gs
mov
js
insb
outsl
add
addb
push
mov
mov
and
stos
adc
enter
mov
push
bound
inc
ret
jns
inc
sub
out
mov
xor
ror
and
adc
cmp
cmc
push
clc
insb
inc
lods
add
cmp
stc
mov
or
lret
cmc
inc
lahf
imul
sbbb
xor
sbb
add
push
jns
jbe
mov
ret
sbb
icebp
add
in
add
aas
into
shlb
inc
mov
or
add
fsubrs
inc
lret
or
mov
pop
adc
fwait
and
call
add
inc
lahf
and
mov
data16
pop
pop
mov
add
and
outsl
push
lds
ret
js
push
and
push
lods
sub
mov
xchg
mov
xor
movsb
sub
sbb
subl
fadd
jle
push
pop
xor
pop
mov
arpl
inc
add
cmpsb
gs
outsl
out
or
or
adc
loope
call
pop
pop
add
xlat
lea
add
or
enter
insb
sub
dec
test
add
push
out
xchg
adc
cmpl
and
add
adc
cmpsl
enter
das
lret
out
sub
or
adc
xchg
insb
lcall
jae
into
fwait
adc
dec
mov
bound
fmull
pop
mov
push
push
lds
ja
push
test
and
test
insl
push
lret
stos
dec
and
push
test
push
mov
pusha
push
sub
sbb
sbb
test
scas
lea
push
rcrb
lea
jp
bound
loopne
cs
clc
sub
adc
in
push
rcrl
sbb
out
lock
or
outsb
pusha
mov
mov
push
outsb
jb
and
lds
js
xorb
mov
sub
mov
jno
jno
push
lds
adcb
imul
push
test
xor
push
imul
insl
dec
jae
lods
dec
adc
ret
pop
push
lds
dec
test
daa
lds
sub
xor
mov
push
and
add
addl
xor
dec
mov
insb
push
add
xor
fmuls
lret
xchg
sub
sub
imul
inc
orl
add
insb
xchg
int
fdiv
xor
or
xor
mov
cmpsb
sub
dec
mov
out
mov
or
and
or
hlt
cltd
scas
jmp
xchg
leave
add
or
add
test
repnz
scas
or
lods
jno
adc
lcall
and
sbb
push
add
or
jo
dec
mov
hlt
rcll
cmp
mov
setb
mov
ret
xor
adc
lea
adc
jno
loope
gs
or
repz
in
xchg
adcb
orl
or
push
jnp
imul
pop
mov
jns
sbb
adc
outsl
pop
out
xor
ja
insb
pop
adc
or
fimuls
je
ret
mov
xor
adc
outsl
jecxz
in
add
pop
add
dec
outsl
sbb
sbb
inc
neg
add
inc
cmp
pop
add
movsb
xor
dec
mov
pusha
int3
add
lods
or
call
xor
scas
jmp
ja
dec
add
cmovns
popf
jg
mov
jae
and
and
add
pop
or
outsl
add
jb
mov
dec
pop
jecxz
mov
dec
outsl
and
mov
jmp
jecxz
inc
and
insl
scas
insl
add
outsb
inc
jae
and
add
movsl
popa
and
mov
out
add
addr16
out
inc
scas
sbb
imul
jge
push
sub
push
xchg
mov
lds
pop
mov
cmp
fnstenv
xor
sbbb
je
outsb
xchg
insb
popf
xchg
mov
adc
dec
or
lds
add
jge
addr16
dec
adc
jmp
sub
add
addb
pop
fs
je
insl
or
daa
fwait
insb
fmuls
imul
push
daa
jbe
mov
inc
shll
fs
outsl
flds
je
and
fstpl
pop
xor
inc
es
jne
imul
and
mov
insb
cmpsl
xchg
sbb
out
add
loopne
lods
aaa
shlb
lea
push
decl
adc
xor
push
xchg
gs
pop
sar
xor
xor
xor
xor
xor
xor
cmpsl
push
cld
call
lock
xchg
xor
and
pop
ss
mov
mov
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
adc
pop
cmp
lcall
pop
cli
cmp
les
cmp
cmp
cmp
cmp
cmp
aam
outsl
add
cmp
cmp
cmp
ss
adc
call
cmp
cmp
pop
ds
lcall
push
orb
addl
nop
dec
add
pop
outsl
jne
arpl
test
mov
mov
adc
add
mov
movhlps
or
sbb
cld
add
subl
sub
adc
ss
or
adc
and
ret
add
std
xor
jbe
jne
inc
mov
push
xchg
sbb
pop
cmpsb
xchg
ss
push
add
add
or
sub
sbb
xchg
fcmovnu
add
or
sub
dec
push
ret
shrl
or
add
push
mov
dec
stos
mov
add
sub
mov
add
movups
lea
add
int
pop
and
inc
mov
push
push
leave
mov
push
jns
pop
add
decl
add
push
add
cmpl
nop
add
add
lock
jo
jecxz
ljmp
xchg
dec
push
xchg
jbe
sub
stos
rcll
in
sbb
sarb
xchg
push
add
xchg
add
outsl
inc
add
add
add
add
nop
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
