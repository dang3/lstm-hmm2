cmp
mov
adc
inc
sub
mov
pop
dec
add
push
mov
mov
out
push
adcb
jo
push
rorb
in
and
mov
mov
xchg
xchg
bnd
out
mov
mov
jp
out
ja
jns
andb
mov
adc
mov
test
loope
fildll
imul
push
rclb
testb
out
arpl
mov
pop
jl
mov
imul
inc
out
adc
cld
xchg
adc
movsl
imull
sub
xchg
xchg
sub
rcl
push
in
negl
in
mov
xchg
mov
cs
ss
scas
cmp
sbb
jno
dec
aad
pop
int
xchg
je
into
je
pusha
inc
or
sbb
cmp
aas
push
fdivl
clc
inc
icebp
xchg
dec
roll
cmpsb
dec
js
pop
icebp
insl
in
jmp
loope
lahf
je
rcrb
rcll
leave
jg
jo
and
xchg
ret
jae
xor
cwtl
adc
mov
mov
add
push
cmp
mov
xchg
mov
fcomps
jle
push
adcl
faddp
push
mov
gs
jnp
mov
lea
push
loop
loop
sbb
std
ja
aas
mov
daa
arpl
xor
or
mov
aam
jbe
push
punpckldq
mov
outsl
jbe
out
jmp
cltd
iret
int
mov
push
dec
mov
xor
ret
sarb
loop
sub
notb
test
lea
xchg
mov
add
jp
mov
addr16
lcall
outsb
inc
sbb
dec
push
leave
inc
mov
ss
fcoms
inc
out
sahf
popa
and
aam
shrb
lds
inc
std
imul
cwtl
int
jno
pushw
fidivrs
sbb
scas
or
add
jae
adc
xor
dec
inc
notl
sbb
lret
sub
push
test
lret
rolb
out
inc
outsb
insl
jo
notb
adcl
sbb
or
dec
push
sub
adc
cld
pusha
push
roll
pop
jb
inc
fstps
ror
scas
outsb
cwtl
mov
fildl
inc
out
push
aaa
xchg
push
jae
or
repnz
sbb
ror
xor
popa
dec
aaa
mov
mov
fstl
jp
add
mov
and
sbb
outsl
mov
dec
lahf
mov
call
and
sub
fsubrl
jmp
out
dec
adc
fnstenv
rcr
xor
xchg
in
aas
insb
aad
cli
paddsw
cs
mov
popa
xor
movsl
jmp
mov
gs
sub
fld
fdivrs
xchg
scas
push
hlt
lahf
and
scas
stos
std
push
inc
repnz
enter
sbb
sahf
subl
scas
out
movsl
xchg
insb
pop
iret
push
mov
push
roll
and
or
jle
mov
rcll
jge
ja
push
push
roll
or
and
mov
ret
call
enter
jecxz
int3
and
dec
shll
cli
sub
xchg
inc
jo
jne
or
lcall
sbb
flds
pop
jle
or
inc
jb
int
or
xchg
inc
push
inc
fstp
mov
mov
xor
pop
lea
sbbb
mov
scas
jb
mov
xlat
lods
iret
mov
pop
daa
and
and
cmp
inc
jb
mov
int
loopne
xchg
rorl
xchg
dec
movsl
dec
jmp
pusha
add
jg
nop
out
push
dec
mov
pop
fs
dec
stos
push
lret
pushf
loopne
and
push
sub
std
add
neg
arpl
dec
stc
mov
int3
cmp
nop
repnz
fmulp
loopne
jl
pop
adc
add
inc
xchg
iret
mov
xor
xchg
out
pop
sub
mov
adc
adc
ss
mov
popf
dec
mov
jp
inc
push
sbb
sub
pushf
fisubs
jmp
lods
xor
xchg
ds
pop
pusha
shll
lahf
push
cmpsb
jge
sbbb
loop
loopne
mov
push
mov
push
cmp
leave
sbb
test
mov
add
fadds
push
ret
mov
jae
inc
mov
fildl
pop
in
xor
cmp
xchg
jmp
out
mov
sub
xchg
leave
sub
aaa
stc
xor
movaps
jl
push
cmp
xchg
in
and
add
stos
loopne
lods
mov
xchg
mov
cmc
jne
sbb
add
loope
pop
pop
cmp
test
fnstsw
inc
push
jbe
mov
and
sub
daa
into
push
jb
pop
mov
mov
ss
aaa
ss
sbb
xchg
or
jg
sbb
or
repz
add
std
fisttps
push
mov
sbb
and
mov
jg
pop
cmp
ds
je
mov
ss
pause
push
pop
inc
pop
test
inc
adc
and
jae
ss
inc
cmpsb
xor
sbb
mov
dec
loopne
adcb
sbb
repz
pop
dec
push
mov
push
mov
out
mov
int3
mov
and
mov
rcll
push
push
mov
hlt
sbb
cld
jge
sbb
lret
rclb
and
ret
xorb
mov
icebp
mov
add
xchg
inc
js
cmp
xchg
xchg
gs
out
sbb
scas
mov
push
inc
jmp
fxch
aaa
hlt
adc
push
stos
movsb
push
cmp
inc
push
repz
cwtl
jns,pt
loop
testb
or
xchg
dec
push
call
nop
pop
lock
fadds
adc
daa
clc
jnp
mov
and
roll
mov
cmc
adc
push
sub
push
repz
mov
ret
ds
mov
sub
out
sub
and
jl
fstpt
test
jo
or
js
sbb
repnz
inc
xchg
inc
jle
ficoms
push
popa
out
mov
jbe
loopne,pn
cmp
sbb
fisttpl
movsb
aas
js
or
pop
fnstcw
push
jl
cmp
lds
push
popf
insb
push
bnd
mov
fsubs
cmp
je
cli
sub
dec
pop
xchg
push
push
enter
cmc
cmc
cmp
cmpsb
dec
je
dec
adc
dec
sahf
add
outsb
insl
mov
ss
das
js
xchg
ret
cltd
mov
inc
mov
mov
jno
adc
sub
ss
lret
jge
mov
bound
in
adc
lods
xchg
or
out
jne
fs
rcrl
sbb
xor
and
inc
add
repz
inc
rcrl
repnz
adc
fwait
les
jns
out
mov
or
sbb
jecxz
fistpl
sub
mov
or
ljmp
sub
into
jmp
shlb
inc
and
sbb
addr16
xchg
xchg
pushf
adc
enter
cmp
out
mov
dec
pcmpgtd
sbb
jge
inc
pop
pop
lods
lret
daa
sub
call
mov
hlt
clc
jmp
cmpsl
mov
stos
nop
add
mov
call
xchg
pop
sbb
mov
xor
mov
imul
fstl
iret
addr16
out
xor
ficompl
sbb
sbb
inc
mov
mov
repz
das
bound
idiv
mov
aam
mov
ss
jl
adc
call
pop
add
ret
arpl
pop
je
pushf
movsb
push
lahf
adc
insb
out
mov
push
cmp
pop
clc
sbb
sbb
rcrb
mov
sub
jge
jl
lret
stos
push
fld
push
mov
lea
or
mov
neg
or
addr16
push
int
or
ss
xchg
outsb
push
loop
imul
xor
enter
sbb
mov
mov
aad
mov
push
out
lret
pop
in
fsubp
aam
imul
mov
xchg
jl
jnp
into
mov
adc
test
arpl
xchg
rclb
cmp
pop
sub
js
arpl
sbb
cmp
mov
xchg
int
fistpl
addr16
inc
cs
dec
aas
jno
insb
or
shrb
negb
movsb
fisubrl
push
test
mov
mov
sbb
xchg
out
in
pop
cmova
pop
mov
dec
xchg
icebp
test
lcall
mov
stc
das
mov
pop
xchg
or
enter
cmpsb
sub
insl
or
sbb
sub
jmp
sahf
in
iret
adcl
dec
xchg
cli
mov
mov
fstpl
lret
jb
jnp
std
cmp
int
dec
aam
sub
orl
leave
repz
es
int
loope
mov
ds
mov
dec
jp
arpl
and
jg
fistpl
clc
pop
push
jne
mov
xlat
rolb
sub
and
mov
lea
jmp
pop
cmpsb
aam
enter
es
insb
sub
sbb
cltd
and
sub
dec
lret
xor
inc
ret
repz
clc
mov
and
and
into
dec
xchg
cmp
cld
loope
addr16
sub
mov
pop
test
inc
xchg
insl
dec
xchg
xchg
dec
aaa
lcall
xchg
jmp
enter
sbb
fcmove
test
mov
xor
push
out
je
fcmovbe
xchg
cwtl
mov
leave
xchg
je
mov
xchg
or
jo
pop
ficoms
lret
or
inc
add
es
mov
pop
mov
mov
mov
popl
ljmp
mov
inc
push
xchg
xor
cmpsl
popf
push
fadds
inc
jg
mov
std
std
xchg
hlt
clc
mov
pop
scas
mov
adc
adc
enter
idiv
sub
pop
fildll
dec
arpl
mov
jmp
mov
shr
sbb
and
cmc
imul
fcos
pop
arpl
mov
xlat
pop
push
sub
add
xchg
fcoml
xchg
into
sbb
ljmp
xorl
fimuls
add
mov
lahf
nop
cmc
cmp
and
stos
push
pop
pop
mov
or
stc
popf
fldl
daa
xlat
sbb
xchg
js
adc
test
dec
mov
cmpsl
scas
ret
jmp
stc
outsb
mov
nop
mov
xchg
imul
je
aam
sbb
xchg
or
sub
cmc
dec
fidivl
insl
int
cmpsb
or
ja
xchg
or
stos
jge
cltd
push
and
fsubrl
dec
pop
inc
inc
testb
push
xchg
repz
cli
jo
cs
adc
or
or
xor
cmp
mov
lods
push
iret
stc
fs
jl
add
das
fs
cmp
xor
jl
sub
cs
jp
hlt
sbb
jns
dec
addr16
push
cmpsb
mov
jge
rolb
in
int3
movsl
push
cli
dec
adc
out
mov
xchg
fistps
add
and
lds
out
mov
cmp
loope
xor
pop
mov
pop
jl
inc
sarl
arpl
iret
pop
pop
dec
scas
mov
cli
lea
fs
sarb
adc
push
adc
das
subl
out
xchg
out
pusha
sbb
sub
adc
jp
cmp
or
sti
jbe
cld
jo
insb
sub
into
mov
daa
iret
mov
lahf
pop
popa
mov
cs
sub
cmp
fmuls
mov
outsl
pop
mov
cld
aaa
stos
mov
rol
nop
mov
xchg
sbb
xlat
xor
mov
mov
nop
fisttpll
mov
lahf
jb
pop
mov
push
adc
lahf
mov
cld
dec
in
jecxz
cmpb
insb
ljmp
xchg
rol
repz
pop
add
xchg
inc
dec
cmp
adc
idiv
rolb
cmc
cmpb
js
jl
or
lret
cmc
icebp
xchg
fs
xchg
jmp
or
sub
push
fmuls
aam
imull
cmp
cltd
arpl
mov
scas
or
lret
sub
add
mov
pop
jno
insl
jb
and
adc
xchg
sub
mov
jbe
sbb
mov
or
repz
pusha
test
xor
ds
xchg
sbb
jl
or
std
loop
cmp
cli
mov
out
jmp
push
pop
pop
call
add
ds
dec
push
ja
and
mov
enter
sub
mov
push
imul
cli
pop
stc
into
inc
xor
jle
outsl
mov
ficoms
lret
push
mov
mov
insb
pop
push
js
insb
sbb
mov
and
adc
cmpsl
jnp
cmp
xchg
cmp
and
pop
mov
lods
dec
adc
das
cmp
xchg
cmp
mov
outsb
push
jbe,pt
imul
fldt
xchg
jp
test
inc
mov
push
pop
ret
movzbl
fcom
mov
or
std
repz
jmp
sub
insl
add
cmp
inc
xchg
adcl
cld
lods
mov
inc
scas
sahf
or
popa
xchg
inc
push
call
aaa
in
lret
or
jo
mov
mov
outsb
outsl
movsb
jne
sub
es
stc
call
lahf
sbbb
xor
add
sbb
aas
jle
mov
cmp
jp
or
push
testb
sahf
jno
mov
lahf
and
lret
out
inc
or
cwtl
cmp
outsl
pop
adc
sbb
fsubrs
movsb
mov
enter
popa
cwtl
cwtl
filds
or
shrb
cld
ja
cmp
and
xor
pusha
sub
lcall
fdivp
adc
sti
and
lods
pop
ljmp
cltd
jne
xor
mov
push
in
int
adc
sbb
and
gs
sub
lea
int
int3
push
mov
cmp
pop
sub
lds
ja
xchg
cmpsb
mov
fldt
mov
daa
xor
or
mov
lods
mov
sti
xchg
ficoms
lcall
mov
imul
xchg
push
repz
dec
dec
lock
aaa
or
js
mov
sub
pop
xchg
push
movsl
push
xchg
pop
xor
mov
cmp
and
mov
inc
xor
jns
dec
push
aas
sbb
sbb
jo
xor
adc
mov
fisubrl
mov
outsl
cmp
shrl
orb
movsb
pop
loopne
popf
mov
push
mov
and
xchg
pop
call
push
aad
aam
lcall
dec
sti
pop
aas
push
inc
inc
pop
sub
dec
xchg
sbb
lock
add
rclb
mov
out
cs
dec
hlt
pcmpgtb
lret
mov
pop
and
dec
rcll
mov
xor
std
inc
pop
divb
and
sub
cmp
out
xchg
je
rorl
jae
ret
nop
push
mov
mov
mov
sub
and
adc
out
mov
mov
mov
ret
sub
inc
mov
push
push
pop
ja
push
out
inc
enter
sbb
inc
pop
test
rcrb
mov
out
out
cmp
cmp
in
cmp
and
mov
and
fstpt
addb
test
cmc
xchg
out
sar
mov
out
sub
fimuls
push
lret
push
mov
clc
subb
and
ficomps
aas
ss
xchg
xor
nop
cmpsl
or
pushf
push
fadds
mov
xchg
dec
jb
inc
in
jmp
inc
xchg
pop
jl
popa
jl
dec
in
js
cwtl
insb
push
movl
popl
popa
enter
inc
loope
ficomps
std
cmpsb
pop
dec
xor
ja
cmp
out
insl
or
jb
movsl
shlb
pop
xchg
shr
xchg
insl
fdivl
into
dec
jo
pop
call
cli
aad
int
fists
sbb
shll
add
fstl
arpl
and
lcall
daa
dec
and
popa
dec
shrb
pop
mov
sub
jg
cltd
xchg
divl
jo
cmp
repnz
insb
test
test
xchg
pop
cmp
shrb
fchs
push
ficomps
xchg
or
stc
fnstsw
dec
in
cld
cli
add
xchg
int3
pop
push
out
sbb
fistl
sbb
mov
cs
mov
and
fnstcw
cmp
dec
fs
mov
sti
icebp
in
or
sub
or
fbld
cs
imul
fistpl
mov
inc
jmp
syscall
cmp
lds
sbb
jl
jl
pusha
or
jno
jb
or
xchg
or
or
std
pop
jp
mov
push
in
add
int
fldl
rcrb
lret
loopne
sbb
xchg
add
mov
pop
jle
jne
dec
pop
push
add
lds
inc
pop
pop
dec
neg
cmp
bnd
insl
fidivl
inc
sub
jp
ja
bound
push
dec
sbb
test
mov
adc
fnsave
ror
test
add
lock
sbb
imulb
xchg
iret
ljmp
xchg
jge
xchg
dec
rolb
out
mov
lock
xchg
cmpsb
add
pop
sub
aas
and
cmp
in
xchg
dec
dec
dec
sbb
cmp
shlb
cmpsb
lahf
inc
pop
loope
aam
iret
cmpsl
rcr
mov
push
xchg
push
test
dec
jbe
cli
add
mov
sti
out
and
popf
sub
stc
push
lods
cmpsb
js
lret
call
shll
clc
cwtl
pop
pop
xchg
aaa
mov
pusha
mov
hlt
orb
lret
mov
ret
daa
retw
pop
aam
shrl
xchg
jmp
dec
fadds
cmp
and
pop
pop
arpl
clc
rorl
scas
jne
xchg
jmp
push
push
out
sbb
les
cwtl
xchg
fbld
xor
sbb
aas
nop
lcall
testb
stc
xorl
shll
sbb
mov
pop
xlat
enter
cwtl
push
int
xchg
sbb
sub
mov
push
add
loopne
flds
sbb
xlat
cs
sbb
dec
clc
stos
dec
adc
pop
inc
nop
loope
sub
jns
jg
push
mov
cmpsl
daa
mov
add
xchg
push
aad
out
pusha
pusha
fldenv
int3
cmpsb
in
xchg
sbb
fyl2x
das
or
out
mov
cmpb
cmp
pop
test
and
xchg
push
int
push
mov
jmp
aas
in
push
lahf
dec
rcr
dec
mov
or
xor
out
mov
bound
pop
ljmp
lcall
inc
lahf
mov
lods
sahf
pop
leave
xchg
cs
sti
mov
or
ss
ljmp
fadd
orl
movsb
adc
gs
loope
mov
inc
xchg
repz
bound
call
xchg
out
sub
pusha
cmp
pop
push
dec
repz
std
xchg
pop
push
jecxz
push
add
clc
lock
push
push
rorl
out
in
pop
mov
dec
and
cli
sbb
push
out
jl
mov
lds
movsl
xor
and
ljmp
push
pusha
nop
pop
xchg
ds
sti
push
xor
adc
std
scas
aas
cmpsl
mov
out
dec
icebp
pop
cltd
push
mov
cmp
lds
aam
ss
sahf
flds
fistpll
xlat
xor
push
mov
loop
and
test
fbld
dec
scas
mov
dec
pusha
xorb
adc
mov
call
clc
lea
inc
shl
cmp
jl
shlb
pop
stos
in
cmc
stc
movsl
xchg
xchg
push
push
pop
fisttpl
scas
or
pusha
inc
cmp
ss
jns
push
jmp
push
jg
incl
cmpsb
iret
dec
jno
inc
idivb
sub
mov
inc
in
and
pop
pushf
dec
xor
cmpsl
and
mov
sbb
dec
jge
push
in
jnp
icebp
cmp
call
jae
leave
sub
ds
cli
cmpsl
insl
mov
daa
dec
lcall
mov
cmp
mov
mov
add
mov
insl
jp
xlat
and
sub
jnp
dec
pop
add
das
push
andb
jo
fstpl
lock
xor
int
cmc
mov
negl
movsl
into
lea
iret
add
pushf
callw
jg
adc
repz
shll
ja
mov
fwait
dec
hlt
pop
je
adc
inc
in
add
sahf
scas
movsb
iret
xchg
fdivr
mov
sbb
mov
push
stos
roll
call
pop
fdivl
lods
in
sub
cmc
mov
cmp
mov
mov
fsubrl
aaa
lret
arpl
mov
loop
js
or
imul
xlat
inc
cmc
into
push
xchg
aaa
pop
sbb
or
mov
xchg
pop
arpl
push
xchg
out
loopne
stc
fdiv
vmread
xchg
fcoms
loopne
testb
aad
cmc
cld
add
push
sarl
stos
sbb
push
inc
loop
stos
xchg
or
fstpt
lds
jp
cli
adc
sub
ja
fisubl
loopne
mov
out
mov
aam
mov
loopne
cli
or
fsubr
push
adc
mov
inc
mov
out
int3
adc
xor
mov
or
sbb
clc
cltd
rorb
gs
cmp
mov
xor
decb
dec
std
scas
xor
add
dec
enter
lock
mov
dec
fists
jnp
in
lahf
push
ljmp
xchg
ret
xor
jnp
push
stos
and
push
adc
mov
and
out
gs
jmp
mov
mov
inc
mov
mov
inc
outsl
sub
ds
loop
test
int3
xchg
jo
lds
out
ficoms
fs
sahf
xor
or
mov
fiaddl
leave
outsl
mov
aad
jmp
fcmovne
cmp
mov
mov
mov
sbb
xor
or
insl
pop
leave
pop
sbbl
and
shl
addr16
nop
inc
jbe
sahf
ds
enter
dec
xlat
icebp
fwait
dec
pusha
push
gs
std
push
cmpsl
push
jbe
mov
dec
dec
cmpsb
inc
call
cmp
in
pop
push
dec
je
fwait
xor
xor
jno
ss
xchg
lds
adc
cmp
sub
lret
adc
test
repnz
pop
xchg
cmc
arpl
ret
hlt
adc
mov
pop
mov
mov
cld
jl
push
insb
cwtl
invd
in
cld
cmp
std
call
test
int
mov
aaa
fwait
xchg
outsl
push
shll
pop
lret
sbb
xchg
or
push
pop
mov
xor
addb
mov
cmp
jnp
mov
lret
test
mov
scas
loop
add
fsubr
xor
sbb
push
imul
adc
push
scas
jne
add
scas
inc
addr16
ficompl
cmp
jo
jl
lds
out
aas
shlb
jmp
mov
icebp
int
mov
js
stos
les
inc
sub
xchg
cmc
adc
pop
adcl
xchg
lods
or
ficomps
xchg
outsl
test
add
jo
pop
stc
or
dec
punpcklwd
jno
test
push
pop
cmc
movsb
popa
pop
pop
cmp
aaa
cmp
xchg
scas
aaa
sti
out
lock
in
outsl
lcall
mov
dec
inc
cmp
jnp
clc
lret
enter
xlat
xor
cmpl
iret
test
push
jp
push
ljmp
ss
pop
imul
ror
fstps
fmul
jnp
leave
inc
xor
incl
sbb
adc
add
jl
out
icebp
cwtl
std
arpl
ret
jbe
stos
bound
stos
sub
mov
cmp
xchg
xchg
ss
mov
xchg
jecxz
test
jns
and
add
xor
pop
fcomi
lea
mov
in
in
lea
push
sti
cmp
mov
and
mov
push
stos
cld
mov
inc
and
repnz
addl
iret
lods
xchg
sbb
addr16
mov
cwtl
call
out
mov
rcl
bswap
jl
jo
mov
xchg
call
mov
xor
mov
xchg
cmp
movsl
xchg
in
test
and
pop
fwait
into
or
rcll
pop
adc
ljmp
lret
clc
push
fcomps
mov
mov
mulb
add
push
faddl
mov
or
stc
mov
inc
inc
cmp
insl
add
push
dec
and
sub
push
insb
sbb
jno
dec
xor
sub
pop
lods
scas
pop
dec
lods
xchg
inc
popf
xor
jbe
outsl
in
int3
jnp
in
jb
mov
add
pop
jbe
aas
call
dec
fucomp
les
jo
xorb
movsl
loope
xor
outsb
mov
call
inc
inc
sub
insb
mov
cld
mov
inc
mov
les
jle
leave
lods
es
test
insb
cld
icebp
xor
cmpsb
das
xchg
cmp
mov
mov
mov
mov
sub
push
popf
mov
out
notl
shl
or
repz
pop
jl
mov
std
inc
std
mov
aad
inc
xchg
ret
sub
adc
ja
insb
sti
inc
push
in
cltd
fisttpl
imul
dec
adcl
xor
popf
test
mov
adc
ljmp
mov
cld
push
push
mov
push
int3
jecxz
push
notl
fs
pusha
ds
mov
jg
int
push
popf
or
sub
sahf
inc
fwait
pushf
and
push
xchg
repnz
fmul
lahf
scas
jns
sub
test
or
ljmp
push
mov
adc
movsb
stc
je
jle
imul
pcmpgtb
fcomi
imul
sbb
push
dec
outsb
fs
cld
xchg
jge
sbb
sar
add
mov
aaa
lret
cld
clc
out
rsm
sbb
push
cmp
jge
and
cmpsb
mov
aaa
adc
test
sahf
mov
lret
dec
pop
xchg
outsb
imul
popa
jg
xorl
scas
pop
sti
pop
inc
arpl
and
pand
stos
into
es
mov
sbb
daa
sbb
test
ds
xchg
iret
rclb
mov
js
outsb
jp
dec
cld
push
sbb
insb
and
mov
in
sub
lods
mov
mov
fdiv
cmp
sub
insb
add
shlb
mov
shl
in
insb
sbb
xor
scas
icebp
ds
mov
or
or
icebp
lock
daa
jp
sub
dec
and
in
adc
sbb
lahf
push
sbb
mov
mov
loopne
jno
mov
sub
data16
lret
sub
stos
movl
insb
pushf
repnz
jns
stos
gs
repz
int
push
mov
ret
mov
popf
mov
fisubs
out
jno
fdivrl
pop
fwait
dec
lock
adc
push
sahf
es
scas
dec
cmpb
mov
sbb
mov
jmp
cmp
jbe
les
mov
jp
sbb
shr
repnz
mov
and
mov
scas
push
pop
and
aam
aad
insb
sub
fistl
xor
or
or
inc
adc
sub
sub
loope
nop
mov
push
stos
mov
push
mov
stos
lods
jge
loop
mulb
es
mov
in
fucomi
mov
push
push
pop
cmpsb
xchg
sarb
mov
pand
data16
dec
pop
mov
out
jmp
push
xor
dec
inc
fists
scas
aaa
xchg
xor
sbb
stos
inc
dec
or
stos
nop
dec
rcrb
cmpsb
xchg
nopl
lahf
orl
sbb
or
hlt
ret
dec
mov
into
scas
sbb
mov
pop
sub
loopne
and
dec
ljmp
movsb
rol
mov
add
jb
push
adc
xor
popf
popf
add
and
mov
push
xchg
das
mov
stos
add
push
jb
sub
xlat
stc
add
imul
add
mov
int
popf
fsubp
ljmp
pop
inc
addr16
shl
adc
fisttpll
jg
leave
jl
leave
lods
push
lods
mov
jne
dec
mov
adc
insl
pop
in
cltd
or
ret
fbstp
or
push
mov
ret
and
shl
mov
arpl
dec
cmp
fcoms
pop
mov
xchg
cmp
pop
fcomip
xchg
out
ret
and
jle
stos
dec
ret
scas
adc
mov
out
xchg
sbb
jle,pt
popf
lahf
scas
inc
shll
jbe
mov
negb
jno
gs
cli
adcl
fwait
arpl
mov
and
popf
ss
enter
int
in
out
sub
rcrl
rol
push
stc
xor
dec
jge
mov
fs
jp
or
add
aaa
push
mov
inc
js
mov
cs
inc
fcomip
cmp
pop
xchg
out
jo
xor
mov
sub
jae
xchg
fs
pop
aad
out
das
lret
xchg
and
fidivrl
xor
daa
sahf
imul
xchg
sub
out
ret
test
jno
dec
jo
iret
cld
pushl
repz
adc
sub
adc
xor
sbb
je
jp
in
or
je
pop
pop
cs
jbe
dec
or
outsb
shll
mov
imul
imul
dec
cmp
jns
push
cmp
cmp
sbb
mov
ljmp
arpl
pop
mov
pop
lret
das
in
dec
test
mov
xor
adc
dec
adc
loope
enter
bound
xor
lret
pop
movsb
cmp
aad
mov
dec
test
inc
push
jbe
insl
pop
int3
inc
pop
jge
scas
add
cld
imul
cmp
insb
and
lds
pop
dec
fisubrl
leave
rolb
mov
mov
xchg
push
incl
in
or
ret
jb
bound
or
fwait
inc
push
insl
pop
jp
in
inc
mov
jmp
sub
cmp
and
push
lods
and
cmp
pushf
add
xchg
inc
test
pop
mov
mov
dec
or
stos
sub
dec
xor
daa
incl
imul
lret
loop
mov
imul
sub
mov
cli
mov
sar
xchg
or
push
pop
lds
jmp
jae
jae
insb
adcl
mov
pop
aaa
test
sbb
nop
lahf
lock
mov
pop
pop
jmp
sub
sbb
clc
xor
dec
xchg
fistps
arpl
dec
jnp
inc
xor
lcall
jno
arpl
jns
shlb
addr16
scas
cmc
or
or
std
lock
lea
scas
jno
mov
stos
aad
mov
sub
mov
pop
push
inc
lahf
xchg
es
mov
pop
enter
push
es
negb
outsl
dec
in
push
cmpsl
ljmp
jmp
lds
rorb
leave
in
sub
push
stos
aam
push
xchg
push
xor
mov
ds
outsb
pop
data16
mov
psrlq
add
mov
cmp
aas
sahf
sub
gs
out
cmp
sbb
inc
or
lret
data16
insb
fdivr
rcl
cmpsb
mov
sub
bound
mov
or
dec
and
divl
xchg
in
sbb
dec
sarl
jo
int3
xchg
and
test
xchg
rol
out
sub
add
dec
mov
jne
out
dec
js
int
pop
jl
lock
add
faddl
aaa
aam
loopne
aaa
sbbb
pushf
insl
cmp
or
sub
loopne
icebp
insl
cli
cwtl
shrl
flds
push
enter
add
xchg
xchg
mov
leave
call
lret
arpl
idivb
fadd
inc
xor
and
xchg
mov
push
xor
cmp
fwait
mov
pop
dec
data16
in
xor
and
fimull
push
push
neg
sbb
jno
fsts
or
mov
ret
cmp
fsubrs
leave
or
into
rcrb
fdivp
js
sub
out
int3
fdivl
mov
stos
adc
loope
jne
sub
mov
jnp
jl
xor
call
jl
lods
fsubs
xor
sub
push
call
dec
adc
pop
adc
xor
mov
xchg
in
repnz
mov
fs
add
sbb
pushf
pop
xor
ljmp
fs
push
fadds
in
stc
ds
mov
mov
shll
fimull
outsl
daa
pop
sub
adc
test
push
enter
fildl
mov
pop
sbb
addl
test
or
dec
mov
out
sbb
jl
mov
rolb
dec
adc
rep
jecxz
pop
loopne
lret
mov
push
decb
pop
mov
dec
mov
jge
cmp
das
bswap
insl
inc
shll
sub
or
mov
xchg
and
cmp
imul
popf
scas
test
lock
or
jecxz
iret
mov
mov
xor
and
xor
inc
dec
in
mov
rcrl
out
test
adc
push
cmp
enter
push
fsub
jb
adc
jg
mov
icebp
sub
rcll
in
mov
or
add
call
inc
jg
or
xchg
mov
dec
jnp
jns
xchg
popa
out
into
stos
shr
rorb
popf
sbb
cwtl
lods
inc
mov
xor
inc
cmp
data16
push
ja
stos
cmpsb
push
gs
adc
mov
and
leave
addl
fcmovu
loopne
push
xchg
repnz
mov
daa
mov
pop
mov
lds
ljmp
dec
addr16
repz
fsts
nopl
insb
movsb
cld
xchg
ljmp
dec
jnp
lods
stos
leave
jns
mov
addr16
sahf
ja
andb
testl
cmp
pop
arpl
in
dec
mov
ljmp
adc
in
mov
and
lcall
ljmp
stc
cld
clc
mov
aad
and
stos
dec
xchg
adc
jns
outsb
pop
pop
in
stos
outsl
in
fildll
ljmp
cmp
xor
jge
sbb
outsl
jns
mov
mov
inc
cwtl
es
aas
xor
or
fsubrp
mov
adc
shlb
dec
inc
mov
mov
out
cld
xchg
aad
repz
mov
xlat
cwtl
xor
pop
cmp
ds
add
cmp
lcall
pop
add
lcall
icebp
pop
add
jp
insb
cmp
xchg
mov
inc
adc
std
icebp
mov
das
fidivs
nop
jns
cmc
sbb
in
xchg
lods
mov
jg
cs
ljmp
std
push
or
inc
das
jle
dec
outsl
pop
jns
inc
test
and
dec
mov
cmc
jo
push
inc
pusha
jno,pn
lahf
pop
jecxz
lods
or
lahf
mov
pop
jl
movsl
pusha
and
or
outsb
xchg
or
lods
fs
hlt
fstl
sub
mov
push
mov
sbb
pusha
inc
mov
adc
scas
int3
xor
xor
mov
rcl
stc
mov
adc
cmp
popa
jmp
pop
repnz
lds
or
push
inc
stos
cltd
sub
or
inc
addr16
in
aaa
push
sti
int3
pop
repnz
sahf
pop
scas
sub
mov
inc
jmp
stos
sbb
std
xchg
shlb
hlt
push
sti
mov
stos
orb
jmp
pushf
in
inc
aaa
xor
stc
rcll
inc
rcll
xor
outsb
sub
movsl
leave
ss
cmp
push
repnz
add
cs
xchg
and
subb
mov
and
scas
rclb
and
xor
je
lods
jo
fdivp
sbb
dec
and
push
mov
or
adc
adc
in
jb
dec
std
push
loope
xor
pop
mov
pop
std
adc
mov
and
mov
push
ljmp
pop
lods
stos
lret
dec
popf
js
scas
mov
adc
pop
cmp
mov
out
ljmp
loopne
decb
hlt
sbb
push
push
dec
pop
sbb
jmp
jmp
xchg
mov
and
jns
sbb
push
out
mov
mov
jns
fbstp
pop
sarl
fcoml
xor
mov
jbe
hlt
and
int3
pop
cld
and
stos
insb
bound
jp
fbld
mov
jno
ljmp
or
xchg
arpl
xchg
shll
mov
gs
dec
push
enter
test
fmuls
sub
hlt
adc
cmp
addr16
dec
mov
and
push
dec
xor
repz
test
push
repnz
cmp
pop
and
scas
mov
jns
cmp
sbb
pop
xchg
xor
in
mov
and
orl
push
in
mov
adc
sti
pop
movsl
repz
and
je
in
outsb
sbb
out
mov
sbbl
repz
sbb
fst
jbe
outsb
add
movsb
jnp
xchg
in
pusha
sbb
sbb
addb
dec
popf
fidivrs
icebp
mov
fsubl
and
fwait
js
pop
outsb
jne
push
push
loope
mov
mov
lock
lcall
sbb
js
lock
cmp
lock
mov
xchg
es
jb
adc
jb
xchg
xor
shlb
mov
das
popf
aam
je
hlt
xor
inc
mov
cmp
in
in
cmp
loope
fsubr
cmp
push
lret
mov
imul
mov
dec
xor
xor
imul
lahf
addr16
dec
mov
jge,pt
std
pushl
mov
or
fcoml
repz
xor
imulb
mov
stos
xchg
adc
stos
jmp
test
pushf
out
inc
jne
push
sub
sbb
mov
out
popa
mov
or
stos
sub
int3
cltd
ds
adc
xor
pop
jo
lea
jg
xchg
daa
xchg
push
aas
push
cmp
stc
xlat
sub
push
cmp
push
xor
xchg
xor
jnp
jmp
add
add
xor
mov
sbbl
push
ljmp
bound
dec
push
xchg
cwtl
mov
inc
das
fwait
outsl
into
cwtl
sub
and
push
and
pop
pusha
push
lds
aam
push
popf
sbb
test
sbb
out
pop
pusha
jae
xchg
insl
dec
mov
jnp
and
xor
push
push
jp
cwtl
lods
es
inc
lock
cmpb
aad
fildl
jp
lds
or
andl
mov
enter
sti
ljmp
inc
insb
sar
mov
or
test
andb
enter
lret
aad
out
ja
pop
lea
add
mov
push
and
loop
pop
inc
push
push
add
push
fs
sub
mov
repz
ds
outsb
inc
cmp
mov
rcll
data16
mov
mov
pop
cmp
dec
loop
inc
idiv
pop
cmp
add
lds
lret
int3
mov
mov
pop
and
adc
stos
xchg
cmpsl
ds
test
out
pop
aas
sbb
jb
push
dec
scas
push
ficompl
insl
repnz
cmpxchg
cmpsb
out
bound
push
shll
mov
leave
jle
and
into
mov
dec
bound
jo
insl
jns
or
aaa
int
dec
aad
cmp
push
pop
jb
icebp
scas
inc
and
pop
test
cs
leave
mov
out
test
or
frstor
iret
adc
pop
inc
push
add
xor
ds
sbb
cwtl
inc
cmp
outsb
adc
mov
lods
testb
mov
push
jecxz
hlt
sub
or
imul
dec
mov
ret
push
jb
xchg
mov
jmp
xchg
xchg
es
cmpsl
cmp
adcl
or
mov
sbb
out
scas
mov
push
int3
test
adc
stos
aaa
out
pop
add
pop
shr
cmp
dec
outsb
xchg
int3
xor
xor
mov
loope
repz
dec
lret
jmp
mov
jl
lret
jbe
xchg
dec
mov
mov
jecxz
and
lea
movsl
inc
pop
icebp
int
test
fcoml
inc
cs
adc
rol
fbld
insl
jo
sbb
in
shlb
stc
sbb
cmp
ds
jecxz
test
mov
mov
push
xchg
das
xchg
stos
ljmp
add
iret
sbb
fcomps
mov
xchg
int
into
dec
cmp
pop
lea
or
popf
leave
mov
mov
cmp
mov
fisubrl
jae
lods
out
fbstp
mov
iret
in
cmp
lock
enter
daa
ficompl
or
inc
sbb
push
fistps
dec
lcall
inc
mov
imul
cmpsl
loopne
adc
lcall
loope,pn
lea
sbb
jb
jg
mov
test
jmp
imul
xchg
sub
fiadds
xor
fldl
sti
ret
lret
xlat
out
xchg
pushf
mov
iret
inc
xlat
jle
mov
in
je
cmp
fisttpl
daa
push
push
arpl
daa
ja
cmpsl
dec
push
mov
inc
add
jo
loope
jecxz
and
icebp
jo
pop
or
push
or
ret
imulb
xor
cli
jmp
xor
and
inc
dec
inc
ss
and
in
js
daa
adc
push
jnp
iret
das
into
cmp
jnp
pop
fwait
test
pusha
loop,pt
lcall
dec
addb
cs
mov
gs
mov
mov
push
xchg
and
jmp
stc
lcall
and
jmp
inc
ljmp
sub
and
lods
cmp
or
mov
push
jnp
icebp
std
push
sbbb
js
jp
out
xlat
add
and
mov
imul
arpl
cwtl
pop
stos
jl
aaa
xchg
leave
jmp
loop
sub
out
dec
daa
push
mov
or
mov
insb
movlps
and
shlb
or
test
in
pusha
pop
mov
js
push
push
outsl
sbb
mov
in
inc
and
mov
xlat
fcmovnbe
out
fs
pop
lea
imul
cld
adc
mov
jle
pop
cmp
adc
push
lahf
jo
faddl
outsb
sub
lcall
loopne
mov
repnz
add
leave
and
fmul
xchg
push
push
mov
add
sbb
xchg
fisubs
push
arpl
jae
xchg
xchg
and
imulb
or
sub
pusha
sub
insl
xchg
sahf
hlt
xchg
lret
roll
pop
xchg
pop
push
pop
pop
push
jnp
cmp
fwait
cwtl
daa
mov
loop
pop
mov
xchg
mov
test
push
cltd
xlat
data16
push
push
in
lret
pop
cwtl
fsubrl
add
sti
xchg
jbe
cmp
mov
vcvtpd2psx
sub
faddl
mov
push
leave
bound
mov
cmpsl
mov
ljmp
pop
adc
xchg
jge
hlt
call
mov
sahf
in
sbbl
cmc
jge
movsl
pusha
dec
and
popf
imul
mov
sbb
mov
and
lcall
dec
les
daa
and
dec
pop
bound
add
cmpsb
shll
ss
in
inc
inc
fwait
jg
loop
dec
in
icebp
cmp
or
popf
fstp
sbb
fsub
push
loope
xchg
and
fcompl
adc
aas
sbb
push
mov
xchg
mov
xstore-rng
cmpsl
orb
bound
scas
loop
leave
xchg
fwait
mov
mov
cltd
inc
scas
dec
and
mov
out
mov
inc
addr16
sub
inc
imul
push
jnp
int
ret
inc
cmc
mov
xchg
inc
jns
or
pop
push
popa
sti
mov
fstps
enter
push
hlt
cwtl
fstpt
aam
pop
push
adc
inc
lods
cmpl
push
cmp
scas
push
roll
xlat
repnz
into
es
sbb
xchg
mov
fnstsw
scas
pop
inc
add
and
dec
lret
sub
cwtl
test
xchg
xchg
cmp
std
ret
push
fstp
inc
jno
and
mov
cmp
gs
mov
jo
ljmp
sbb
aad
jmp
into
outsl
and
lods
pop
clc
out
and
flds
outsl
ss
stc
mov
or
fcmovne
into
in
insb
sbb
out
mov
ficoms
add
fbstp
sbb
push
jecxz
sbb
and
outsb
loop
jno
lods
sub
inc
fisubl
pop
inc
popa
in
mov
in
popf
mov
sbb
loopne
or
pop
or
neg
mov
xchg
fisubrs
rcrb
xchg
push
lahf
fidivl
jge
dec
ja
push
cmp
mov
out
imul
jge
je
add
and
fdivs
jp
jge
lock
subl
dec
and
push
sahf
mov
or
cmp
cmp
mov
enter
or
dec
xchg
fdivrs
gs
ficoml
push
xor
clc
loop
xlat
adc
xchg
rorl
pop
cmpsl
add
aad
sbb
push
aas
into
xchg
inc
push
cmpb
mov
jmp
cmpsl
dec
sbb
rclb
fcomps
and
nop
aas
movsl
cmp
addr16
aas
int3
cmp
clc
jp
testl
shlb
sbb
or
jmp
clc
pushf
scas
dec
bound
pop
mov
dec
nop
push
jle
test
add
xchg
dec
xchg
jne
js
jae
jmp
cmp
ljmp
fwait
mov
shrb
jns
pop
das
inc
jb
lods
std
adcl
sti
popf
and
jle
push
std
enter
idivl
mov
dec
inc
dec
jle
divl
or
in
out
loop
cld
xchg
jb
sbb
sub
push
jne
add
in
arpl
in
sub
mov
jbe
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
inc
add
adc
add
adc
add
add
add
add
add
add
inc
add
rolb
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
pusha
add
loopne
and
add
incl
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
add
out
add
stc
aas
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
aas
add
mov
