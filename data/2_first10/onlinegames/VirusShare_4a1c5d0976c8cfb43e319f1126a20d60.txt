fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pop
jnp
bound
xor
aaa
or
cmp
cld
xchg
rclb
cmp
push
mov
sub
fnstsw
andb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
js
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
or
out
and
push
testb
je
adc
call
push
loop
addr16
mov
push
aad
and
push
je
xchg
mov
cmp
out
jnp
adc
aas
xchg
inc
cs
sbb
std
pop
jmp
or
cmp
mov
icebp
push
lds
or
lods
loope
bound
call
test
psrld
mov
inc
inc
dec
dec
test
jne
pop
fldenv
push
pop
jmp
lds
shl
or
push
jecxz
insl
mov
add
cmp
xor
sti
decl
test
add
and
aad
pop
clc
inc
and
inc
jnp
sbb
add
jl
jae
mov
adc
daa
push
aaa
in
int3
fistpll
sub
jg
push
bound
or
push
in
les
out
inc
jl
sbb
jbe
push
in
inc
mov
mov
push
pop
or
cmp
cwtl
pop
and
in
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
cmp
add
add
xor
test
adc
fidivrs
or
sbb
shl
mov
xchg
fsubr
pop
and
ss
xor
lret
pushf
imul
mov
xlat
inc
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
rcrl
data16
adc
pop
imull
shlb
xchg
or
xchg
sarl
sbb
movsb
icebp
les
std
stos
push
std
enter
mov
cld
std
dec
push
mov
iret
outsb
int
aas
cmp
push
pop
sar
fucom
data16
lods
jb
gs
cltd
imul
fldenv
out
imul
iret
push
out
imul
imul
imul
mov
data16
stc
cwtl
mov
lods
out
call
mov
jns
pop
jnp
sub
je
push
push
fwait
cmp
mov
or
mov
xchg
xor
xchg
and
add
and
mov
inc
imul
fs
in
rorl
outsb
ds
je
jae
in
les
pop
sti
bound
push
cmp
pop
xor
and
insb
movsb
cmp
outsb
and
cmp
int
mov
subb
or
fldenv
data16
call
mov
lods
and
jnp
jbe
xchg
push
or
cmp
outsw
dec
repz
or
jmp
addr16
pusha
jbe
cmp
ds
outsl
mov
fsubr
sub
outsl
sar
sahf
sbb
cmp
pop
mov
cmp
jl
call
jbe
adc
push
daa
cmp
sbb
add
imul
insl
nop
gs
out
and
cmp
fistpll
pop
lock
cmp
cmp
test
icebp
stos
idivl
sbb
fnstcw
mov
sbb
xor
lretw
adc
ret
fwait
or
in
insl
enter
enter
cmp
lock
cmpsb
dec
dec
sti
out
mov
push
ret
ljmp
frstor
or
in
lea
vhsubps
loop
dec
push
jb
sub
and
jae
sub
mov
or
loope
xchg
mov
addl
jbe
push
or
and
and
push
mov
add
and
ret
dec
push
dec
inc
dec
dec
inc
pop
ja
stc
add
dec
inc
dec
xchg
inc
push
dec
addb
fisubrl
inc
outsl
and
popa
or
lock
sbb
andl
push
add
add
nop
add
push
pop
ss
mov
inc
lock
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
and
outsl
repnz
adc
mov
rolb
stos
jae
mov
push
jae
mov
mov
loope
mov
daa
xrelease
mov
pop
cmp
mov
test
shrb
imul
mov
push
inc
add
in
mov
loopne
and
ffreep
and
add
js
sbb
add
jnp
int3
pop
cltd
add
je
aaa
add
or
iret
push
jbe
push
xor
pop
push
shrb
sub
jb
insb
push
xor
push
bound
pop
hlt
sbb
add
popa
push
or
lahf
mov
loopne
inc
push
lret
test
jnp
daa
je
negb
jb
insb
outsl
arpl
cld
or
or
inc
pop
insl
lcall
push
test
pop
pop
stos
call
test
mov
mov
cwtl
test
cltd
movsl
add
clc
or
sbb
cmpsb
imul
cmpsb
imul
insl
lcall
sub
mov
xor
xlat
sub
dec
add
push
xor
sarl
mov
fnstenvs
test
lcall
inc
dec
push
imul
movsl
add
push
outsl
add
adc
fstps
enter
stos
add
sub
scas
addb
mov
lcall
mov
mov
lcall
mov
lcall
cld
shll
sbb
sub
stos
xorl
fnstenv
add
test
jmp
pop
pminsw
xchg
mov
ljmp
push
fnstenvs
add
xor
lods
popl
outsb
je
je
loope
dec
in
aas
notl
push
gs
fs
sub
dec
je
divb
jne
jns
outsw
inc
aaa
dec
jo
outsb
push
fcmovnu
ret
insb
adc
adc
dec
add
xchg
adc
gs
nop
add
leave
adc
lea
lahf
xchg
add
cmp
adc
sbb
pusha
add
xchg
or
inc
enter
pop
add
scas
inc
test
add
or
add
mov
mov
sbb
and
or
xchg
ret
pop
add
mov
mov
mov
ja
aas
and
ret
and
test
sub
decl
add
mov
and
pop
pop
sbb
pop
inc
fcmovne
push
xchg
inc
pop
add
aad
or
inc
mov
sbb
cmpsb
pop
fmul
dec
jae
xor
rcrl
xor
ud2
push
add
pop
mov
add
ja
adc
je
mov
add
gs
sbb
pop
add
mov
gs
add
fstp
jg
push
inc
jb
push
and
ja
or
push
mov
jae
add
and
addr16
xor
push
add
mov
pop
add
in
mov
dec
xor
arpl
xlat
test
shlb
je
jo
push
imul
call
sbb
sbb
mull
sub
je
outsb
dec
stos
imull
push
push
fistps
test
sub
in
push
dec
aad
inc
js
pop
sbb
cmp
outsl
je
jae
jns
ljmp
imul
jne
arpl
xchg
insb
popa
jne
mov
jne
or
gs
insl
pop
pop
insb
imul
pop
fwait
arpl
insl
imul
inc
add
jb
push
mov
and
add
repnz
pop
fldcw
or
into
mov
jg
jg
adc
clc
test
clc
int
jg
jae
rcl
mov
mov
mov
movsl
ret
mov
loop
test
mov
das
pop
mov
out
mov
ret
in
clc
mov
xor
into
pop
add
stos
lahf
jge
les
aam
imul
jmp
movsl
inc
imul
loope
sub
scas
out
sub
fmulp
mov
imulb
sub
stc
test
leave
icebp
sub
es
xchg
outsl
pop
outsb
push
mov
ljmp
aam
std
out
inc
cli
sub
mov
mov
enter
sub
fistps
lret
sahf
lret
xchg
outsl
xchg
lret
lock
mov
leave
rcr
jnp
mov
mov
mov
lret
std
mov
test
or
shr
sub
lock
pop
jae
xor
movb
jb
in
rcl
pop
mov
mov
jbe
mov
sub
shll
lock
cltd
lcall
dec
dec
mov
sub
mov
sar
int3
in
jmp
push
into
lret
sti
aad
fisttpll
lret
mov
push
shrl
xlat
pop
not
ret
mov
sub
mov
and
rcr
dec
into
in
xchg
ret
mov
out
sahf
mov
or
enter
test
pop
clc
out
icebp
mov
and
into
cmc
aas
lret
negb
mov
into
sub
aam
shll
sti
leave
mov
enter
mov
into
sbb
iret
sbbl
pop
sub
and
cmp
add
into
call
dec
insl
jle
xor
sarb
shl
mov
lods
mov
int3
push
or
rolb
lods
shll
in
mov
jne
add
mov
push
testl
xchg
rcrl
les
add
insl
pop
pop
nop
ja
insb
out
fs
out
test
adc
addl
decl
dec
inc
ret
fdiv
sarb
inc
daa
pop
add
in
xchg
lret
and
inc
xchg
pop
fwait
pop
cs
mov
pop
push
test
test
xchg
lret
dec
aad
flds
fstl
mov
pop
sbb
pushf
fstpl
push
add
sti
xchg
pop
push
push
mov
jle
lahf
aam
mov
in
cli
add
sbb
gs
push
xlat
dec
push
mov
sbb
jle
call
lea
adc
outsl
ljmp
in
push
push
call
in
mov
cmp
mov
sub
sub
mov
movb
inc
or
movb
or
push
push
inc
call
cmp
pushl
inc
pop
sbb
call
cs
or
add
mov
rdpmc
rclb
or
insl
push
mov
xlat
faddl
or
mov
inc
cwtl
je
mov
stos
fimull
and
lcall
push
movzbl
shll
in
pop
fldt
fcomps
adc
mov
andb
mov
fwait
in
insl
or
push
aas
mov
cmp
pop
jl
push
sahf
add
decb
mov
and
xor
adc
mov
add
les
add
enter
int3
and
xlat
adc
add
dec
mov
xor
adc
cmp
add
add
aas
and
cld
inc
or
push
push
leave
jl
cwtl
nop
xor
adc
push
in
push
mov
xchg
push
and
sbb
cli
fstpt
ret
cmpw
jne
dec
cmp
lret
sbb
or
mov
leave
inc
push
or
and
xchg
adc
add
push
adc
add
add
or
add
test
dec
jne
or
test
inc
add
jns
loope
shlb
mov
je
and
divl
fucomi
fists
adc
pop
cmp
ja
jge
add
or
jae
push
jg
repnz
loopne
push
or
or
inc
jmp
cmp
jb
fists
mov
sub
sub
decl
jnp
dec
dec
test
or
xor
test
adc
push
int
add
and
or
push
inc
cmp
push
mov
push
add
rcrb
add
jge
push
push
mov
adc
mov
cmc
push
push
push
and
int3
shl
in
pop
mov
dec
ret
fnstcw
insl
negb
fistps
sbb
orb
popa
add
xchg
push
js
test
shll
mov
lea
movsl
mov
arpl
add
mov
movsb
mov
popf
loopne
push
sbb
in
sbb
mov
rep
xor
and
sti
or
int3
or
movsb
mov
ss
mov
dec
pop
mov
test
and
shll
push
or
lods
pop
not
jle
push
mov
add
notb
sbb
flds
pop
lock
jg
mov
jl
pop
insl
jecxz
add
lds
cmp
adc
nop
sbb
mov
movl
cmpsl
test
or
test
faddp
push
clc
call
sub
aaa
pop
xchg
maxps
xchg
pop
mov
push
or
ljmp
cmp
jle
lock
mov
loop
and
mov
fucomi
push
pop
call
adc
or
add
mov
inc
inc
jmp
mov
jb
vmulss
cmp
jne
xor
add
mov
mov
pop
or
add
push
gs
adc
andw
mov
fnsave
adc
insl
add
cld
pop
jb
add
es
push
push
push
in
or
in
pop
and
subl
std
push
sub
adc
ss
stos
sub
jg
push
xor
xchg
out
mov
lea
cmp
loopne
insb
repz
and
jae
mulb
mov
fisubrs
mov
push
inc
push
pop
cld
call
insl
ss
call
xor
into
jl
in
add
push
jo
loope
call
aas
imul
inc
pop
or
movl
in
call
out
or
pusha
xor
adc
adc
adc
and
jo
add
pop
add
ds
pop
in
add
push
xor
adc
loopne
inc
pop
pushf
mov
xor
adc
xchg
pop
popa
add
adc
xchg
pop
repnz
push
andb
out
adc
xor
popl
pop
inc
mov
jnp
inc
mov
push
pop
jmp
adc
mul
data16
roll
fisttpl
adc
adc
fstpt
mov
cmp
mov
jbe
add
ret
add
sub
lock
lret
and
outsl
rorb
mov
cmpb
je
and
int3
pushf
pop
in
int
add
adc
add
xor
loope
xchg
push
push
xchg
bound
scas
cmpsb
sub
pop
inc
idiv
adc
jg
or
ljmp
inc
inc
jmp
andb
mov
jmp
xor
mov
inc
push
adc
enter
dec
je
movsb
xor
adc
or
and
xor
adc
daa
and
add
push
call
aas
xchg
inc
fcoml
add
loopne
and
cld
or
adc
pop
lahf
push
ds
inc
mov
push
mov
mov
and
jb
clc
das
cld
fs
ja
xor
mov
cmpb
test
add
lods
inc
or
icebp
movsl
jle
decl
add
pusha
add
dec
aas
mov
ljmp
or
imul
out
mov
adc
and
push
add
mov
add
inc
jge
lock
mov
xchg
jp
shr
lea
loopne
cmp
jae
incl
or
mov
shr
add
stos
leave
icebp
test
push
mov
mov
lcall
inc
mov
mov
jne
adc
sbb
mov
mov
mov
pop
imull
rolb
or
rcll
cli
or
add
add
jne
xor
sub
cmp
mov
shlb
pop
xchg
lcall
bound
pop
pop
imulb
fnsave
or
cmp
mov
not
and
push
xchg
clc
divb
or
add
lea
or
shr
mov
mov
jo
add
repnz
not
and
testl
lea
test
mov
mov
repnz
aam
cs
jbe
out
inc
fisubs
fimull
add
lea
pop
notl
shl
push
pop
inc
sub
mov
scas
mov
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
outsl
mov
pop
jg
push
lea
pop
mov
cmc
sbb
cli
mov
xchg
mov
add
hlt
mov
not
and
sub
movsl
ret
adcb
sub
xchg
mov
in
inc
mov
fidivl
add
ficomps
pop
popa
xlat
or
into
outsl
lods
adc
sbb
inc
xor
scas
roll
mov
pop
mov
adc
pop
int3
xor
add
push
push
sbb
add
out
ficomps
lret
and
cli
sbb
repz
pop
pop
les
repz
fcomp
cwtl
subb
in
out
sbb
add
rcr
cld
ret
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
cltd
ss
subb
add
pop
push
push
add
sub
push
pop
push
fcom
add
repz
pop
out
test
mov
les
adc
xor
mov
rorl
fcoml
fmuls
out
stos
lods
es
add
fnsave
fidivrs
pop
into
outsl
lods
pop
aaa
das
push
mov
cmpsb
pop
mov
add
dec
shlb
xchg
ret
or
mov
outsl
in
popa
adc
add
or
mov
jne
adc
ret
mov
faddp
mov
bound
sbb
add
shlb
clc
jg
sub
dec
cmp
inc
rclb
lods
xor
add
push
and
clc
pop
mov
repz
pop
pop
es
adc
lods
and
movsb
push
fbld
mov
insl
int
mov
and
call
mov
mov
insl
mov
adc
cmp
sbb
loop
xlat
lods
mov
mov
adc
inc
add
rorb
fbstp
pop
and
out
dec
lods
clc
cmp
mov
fnstenv
mov
enter
jg
or
movsl
xchg
or
fidivl
shl
int
and
sbb
loopne
ret
cld
xchg
mov
inc
enter
aaa
or
mov
pop
jmp
push
fbstp
xor
sbb
mov
inc
pushw
adc
gs
fwait
aaa
or
call
inc
loop
insl
adc
or
xlat
fdivs
faddl
sbb
xorb
cld
xor
enter
in
in
stos
daa
sub
aad
flds
outsl
adc
cmp
xchg
dec
fists
les
mov
adc
js
jge
or
xor
test
mov
sbb
test
xor
mov
call
divb
adc
xor
cs
js
lds
popa
popf
insl
adc
inc
sti
xor
mov
jns
jno
repnz
or
in
mov
sub
divl
mov
inc
inc
ljmp
xchg
sbb
xchg
mov
push
adc
cltd
jb
xchg
mov
outsb
repz
pusha
mov
ffreep
dec
mov
cli
xor
rcrb
mov
xchg
mov
jae
or
mov
repnz
xor
jle
sub
jae
mov
rcrb
lock
hlt
into
mov
fimuls
xor
xor
test
xchg
or
cmpsb
pop
jae
adc
fidivs
test
orl
out
cmp
imul
pop
or
push
aas
sbb
pop
mov
rcl
fstps
test
push
in
mov
xor
ss
in
jb
mov
clc
jl
pop
je
dec
testl
gs
lods
les
cli
cmp
cli
mov
mov
add
xor
sub
cmc
ret
rcrb
sbb
push
or
in
repz
addb
push
xchg
ljmp
inc
sub
lret
push
or
pop
sahf
outsl
dec
mov
stos
adc
fwait
xchg
lock
hlt
cmp
xchg
cld
cltd
or
mov
scas
xlat
mov
ret
pop
jo
lret
pop
gs
sbb
rcrl
or
lock
int3
or
push
or
sbb
repz
dec
jge,pt
out
call
unpckhps
fwait
xchg
sbb
pop
test
or
jg
jns
pop
push
call
outsl
jecxz
jp
sbb
das
dec
sbb
int
jb
pop
jb
fistpl
loopne
sub
jecxz
jp
pusha
call
fsubs
enter
add
mov
scas
aaa
pop
mov
lds
jp
sbb
ja
mov
xor
pop
imul
out
loopne
mov
aaa
test
xor
aam
rcl
sub
fldenv
pslld
ret
repz
rol
test
mov
mov
push
dec
mov
pop
fcmovnbe
pop
mov
out
xlat
pop
add
pop
movsb
mov
scas
push
push
mov
xor
pop
mov
js
cmp
add
pusha
pop
mov
cmp
cmc
xchg
cmp
jl
js
sub
push
push
push
cmp
jmp
je
jne
xor
test
nop
xlat
adc
ss
push
pop
fisubrl
jle
sub
inc
pop
inc
test
fbstp
pop
pop
mov
mov
into
ljmp
fdiv
insl
push
add
sbb
cmp
jne
add
test
sub
push
push
dec
jo
sti
daa
dec
cld
pop
add
int
xor
cmp
push
cld
call
mov
pop
jbe
lea
aaa
mov
adc
je
inc
add
cmp
out
or
testb
jmp
repz
js
call
mov
pop
adc
xor
add
test
push
loopne
pop
int3
cmp
pop
mov
add
fsubr
mov
lods
or
movsb
adc
push
dec
adc
imul
out
add
in
gs
stc
jl
das
lock
jo
hlt
gs
push
lock
imul
div
lock
stos
gs
pushf
mov
or
clc
out
fisttps
mov
mov
rep
call
sbb
adc
inc
sbb
mov
mov
lods
mov
sbb
lods
outsb
jmp
fimuls
cli
enter
enter
loopne
lods
dec
jge
push
or
adc
fistl
push
mov
add
cmpsb
inc
add
dec
lret
add
out
push
out
push
mov
mov
pop
mov
mov
dec
xor
dec
mov
jmp
or
push
cld
push
and
or
insb
xchg
and
mov
sbbl
int3
add
push
and
or
ljmp
incb
ficompl
push
les
js
xor
inc
pushf
nop
arpl
adc
stc
sub
jbe
cld
clc
xor
lret
fstpt
ret
xchg
je
in
test
imul
cld
das
sbb
or
xor
sub
test
push
pop
xor
xchg
or
push
notb
push
mov
or
je
push
dec
mov
pushf
test
or
into
jmp
sub
or
mov
sub
aaa
xor
adc
adc
subb
and
add
cmp
je
dec
dec
cmpw
jne
pop
inc
mov
mov
cmp
je
add
mov
xchg
cmp
in
add
inc
xchg
stc
unpcklps
gs
mov
cwtl
imul
sbb
lret
jbe
cmp
cmpb
inc
addl
pop
fwait
ret
push
outsb
mov
je
xchg
cmp
fucomip
fiadds
testb
mov
cmp
je
cmp
jne
push
xor
sub
add
outsl
ds
lret
or
stos
cmp
xchg
push
sbb
or
xchg
push
sbb
xor
loopne
add
jae
shld
inc
sti
outsl
fdivrl
mov
add
subb
inc
push
sbb
pop
adc
leave
add
andb
cwtl
ss
mov
mov
mov
mov
sbb
sbb
push
xor
fsubp
add
xchg
mov
push
adc
out
and
insb
mov
or
insl
xchg
popf
sbb
mov
popf
mov
sub
call
int
mov
dec
mov
and
fdiv
inc
xchg
adc
dec
jno
fiaddl
das
push
sbb
std
and
idivb
sbb
inc
loop
lods
int
call
loop
add
cmp
outsl
mull
mov
or
rcrl
mov
dec
je
cmp
ja
cmpl
cmpl
scas
or
push
jo
mov
jo
mov
sub
lods
jp
mov
cmp
add
pop
mov
aaa
push
popf
std
js
in
sbb
pop
adc
mov
pop
call
push
push
pop
fcoml
mov
cmpb
adc
inc
je
jmp
imul
idiv
xchg
add
adc
push
push
jmp
dec
mov
push
cmp
ss
mov
push
pop
frstor
mov
test
push
push
adc
jnp
out
sti
inc
inc
push
jo
push
xor
jge
xor
jbe
dec
or
push
mov
jb
pop
cs
mov
mov
mov
imul
jbe
imul
add
fldcw
mov
inc
gs
insb
outsl
mov
lret
mov
gs
and
insl
stos
mov
fcmovu
gs
dec
dec
test
in
lcall
in
push
out
fldt
je
out
call
imul
push
mov
cmpsb
outsb
je
rol
dec
ret
rol
add
xor
jb
xor
enter
mov
lret
cmp
int3
hlt
xchg
push
xchg
insl
shll
mov
inc
mov
imul
fwait
pushf
adc
mov
fistpl
inc
mov
insb
fwait
insl
movsb
inc
add
test
push
cmpsb
imul
pop
call
hlt
cli
jns
lea
cmp
cmp
je
dec
xor
shlb
inc
or
pop
iret
jl
xorl
adc
push
je
pop
aaa
in
les
inc
in
pop
xor
int
push
int3
jmp
sar
xchg
xor
and
in
sub
sbb
or
pop
insb
dec
rolb
mov
int
push
cmc
adc
sti
inc
pop
pushf
in
sbbl
jg
out
jmp
test
sar
int3
push
and
sti
cmp
adc
push
mov
xchg
xchg
loopne
into
imul
cmp
pop
cli
inc
push
xchg
pop
mov
test
sub
push
push
inc
sub
nop
jmp
aaa
xor
dec
cmp
sbb
inc
fmuls
ret
jmp
adc
push
mov
nop
repnz
lahf
fsubrl
hlt
cli
call
sbb
daa
add
add
cld
dec
enter
cmc
fsubrs
clc
std
xchg
xor
fdivl
cwtl
stos
pop
push
dec
in
sbb
mov
repz
fcoms
in
inc
xor
movsb
cs
insl
lock
sub
jnp
xchg
cld
mov
xchg
idivb
fistl
adcb
adc
and
mov
sub
and
shll
mov
sub
adc
or
out
adc
call
adc
sub
flds
or
sbb
sub
stos
mov
or
add
jmp
jbe
sub
lock
nop
inc
adc
rorb
mov
push
sbb
in
add
adcb
inc
cmp
jl
jns
fstpl
mov
cmp
mov
ficoms
movl
adc
cmp
gs
or
roll
scas
adc
leave
push
iret
ss
fs
in
pop
hlt
adc
cmc
cmp
adc
cmp
cmp
cmp
cmp
cmp
iret
and
push
cld
xor
cmp
mov
fdivrp
push
sbb
jae
jne
pop
mov
lods
cmp
clc
cs
loopne
imul
arpl
sbb
mov
jl
and
adc
jo
inc
or
add
test
adc
adc
jmp
cmp
jmp
and
push
and
sub
pop
call
jmp
mov
scas
xor
adc
cmpb
stos
push
xor
roll
and
andl
pop
or
call
or
adc
pop
or
jo
adc
fistpl
push
ret
xor
mov
pusha
mov
or
cld
cld
es
gs
jmp
mov
insb
insb
popa
push
dec
push
ss
lods
imul
fidivl
dec
mov
sub
inc
fidivs
shll
xor
xor
sub
dec
jae
cs
sti
mov
orl
insl
jmp
lcall
mov
lcall
mov
pop
mov
mov
imul
fs
lcall
xchg
lods
pusha
fisttpl
leave
pop
pop
lret
popa
pop
xchg
gs
js
push
jmp
inc
jb
push
xor
xchg
icebp
repnz
out
rorb
cli
mov
pop
test
push
mov
cmp
and
xchg
pop
sbb
sbb
push
pop
test
mov
adc
push
or
sahf
and
inc
mov
push
hlt
dec
mov
inc
xchg
add
in
mov
mov
sub
clc
adc
jmp
fsubl
andb
and
aam
mov
fildl
imul
push
fwait
outsl
ja
test
xchg
shl
push
shll
stc
inc
mov
lock
test
int3
dec
xor
adc
sub
shl
sbb
pop
insb
rcrl
lods
arpl
add
sti
mov
push
sbb
and
insb
into
test
xor
sbb
and
imul
push
fidivl
inc
inc
cmp
in
insb
test
cmpsl
jmp
hlt
xchg
test
rcrb
xchg
clc
lock
jge
mov
lock
jl
push
push
or
and
dec
xchg
int
sbb
stc
inc
xor
hlt
in
les
fstpt
mov
inc
test
pop
push
adc
or
push
or
jne
out
sub
or
and
ljmp
xor
int3
pop
mov
push
sbb
and
jmp
dec
mov
cmovno
push
mov
lret
xor
mov
gs
xor
or
jns
and
fiaddl
fdiv
std
dec
cmpsb
mov
inc
loop
add
sbb
xchg
adc
pop
fistpll
loopne
pop
cmp
jle
mov
call
mov
and
or
fcompl
mov
pop
mov
aaa
or
or
mov
jns
mov
jecxz
and
jg
or
fs
jl
mov
dec
das
into
mov
push
xlat
or
movsb
sbb
inc
sbb
xchg
enter
and
es
in
pop
push
sbb
add
pop
push
mov
dec
shr
or
pop
adc
adc
aam
bound
dec
inc
add
les
sbb
xchg
add
jno,pt
cmp
jae
or
sub
dec
push
push
push
clc
aaa
add
cmp
push
movsb
loopne
mov
inc
shlb
xor
imul
flds
lea
push
push
pushl
push
subb
movsl
mov
add
testb
aas
sahf
mov
push
cmp
sub
sbb
add
pusha
int3
add
xchg
fisubrl
fldt
push
or
add
fildl
xchg
pop
test
or
cmpsb
fs
popf
popf
test
hlt
hlt
into
cmpb
push
inc
cwtl
inc
ds
fmull
cmp
push
mov
and
inc
clc
jmp
jnp
xor
push
sti
outsl
jbe
inc
or
xor
or
or
and
fmuls
rorl
adc
dec
mov
je
pop
es
jg
dec
js
or
push
adc
pusha
inc
xlat
add
or
jo
jp
test
dec
xchg
movsb
and
lods
popa
clc
and
adcl
std
mov
mov
cmp
mov
std
int3
jne
mov
jbe
sbb
pop
or
sub
sqrtps
popf
mov
leave
mov
xchg
mov
inc
jb
std
jb
mov
mov
cmp
xor
data16
xchg
and
sbb
cs
pop
pusha
std
xor
fidivl
ljmp
mov
sub
jmp
call
rcrb
adc
mov
add
xchg
mov
jp
sti
aad
js
mov
xor
jp
fwait
jb
xor
xor
mov
push
jae
hlt
adc
lcall
mov
cs
cwtl
push
push
jmp
xor
push
pop
fists
push
push
es
insl
repnz
sbb
lea
int
stos
xchg
pop
push
xchg
fiadds
mov
sbb
jle
xor
mov
stc
mov
andl
push
loopne
mov
lea
rclb
cmp
cmp
sbb
add
add
ficompl
cmp
pop
pop
out
mov
pop
lock
addr16
sar
test
cli
aam
push
push
fsubs
fdivrs
fidivs
push
push
imul
rcl
adc
lahf
pop
lds
add
mov
mov
es
dec
mov
icebp
pop
sbb
mov
clc
add
fiadds
insb
inc
orb
icebp
js
filds
xchg
and
xor
push
into
inc
xor
aas
push
rorb
or
roll
push
cmp
xor
pop
sub
lds
xchg
jmp
mov
stos
or
mov
fcmovne
add
rcl
fcomp
outsb
lds
rcrl
add
aad
xchg
inc
cmc
mov
dec
mov
clc
das
mov
mov
jge
inc
lods
pop
stos
in
push
jne
mov
aas
call
cld
jbe
je
pop
lods
mov
xchg
les
adc
pop
jb
dec
cmp
or
les
dec
pop
rolb
movsb
sub
or
jnp
mov
cltd
mov
idiv
pop
clc
add
cmp
and
inc
jo
loope
xor
add
insl
add
inc
sti
xlat
inc
and
loopne
je
xor
xor
cmp
mov
mov
inc
or
test
push
sub
mov
xor
push
rcrb
dec
dec
dec
inc
imul
sub
nop
int3
addr16
sub
push
sbb
cs
sub
fs
insb
adc
or
aaa
dec
outsb
je
int
pop
gs
jb
mov
data16
movsb
push
movsl
cmpsb
pop
cmpsl
push
gs
mov
stos
stos
push
lods
lods
mov
lret
push
rorl
jo
mov
lret
dec
jo
outsb
loop
shlb
test
mov
fwait
shrb
roll
aam
mov
dec
rorl
lea
mov
es
pushf
lcall
xchg
xchg
xchg
lcall
push
cwtl
js
lcall
fcmovu
fcompl
scas
imul
loopne
loope
mov
jecxz
in
ds
cmpsb
imul
mov
jb
pop
xlat
insb
lgs
inc
mov
sub
mov
arpl
mov
mov
fs
sub
mov
lods
sbb
fdivrs
or
clc
lret
push
sarl
std
cld
or
pusha
mov
cmpsb
arpl
inc
xor
mov
adc
pop
jb
mov
adc
insb
cmc
cltd
add
xor
and
repz
lahf
lock
clc
roll
or
mov
fstl
shrl
das
scas
mov
cmpsl
addl
mov
adc
add
test
ljmp
in
inc
adc
imul
sub
xchg
test
cld
repz
pop
shlb
or
das
and
negb
test
jne
xor
adc
popa
or
add
add
shrb
cs
push
add
add
mov
call
sbb
dec
shrb
jl
mov
rcrb
aas
rorb
jle
adc
mov
push
or
adc
or
bound
inc
push
aam
push
mov
daa
adc
or
loope
pop
or
mov
push
jnp
mov
push
lret
sbb
inc
incl
mov
movb
mov
add
hlt
push
lock
lcall
xor
jecxz
in
mov
in
cs
cmpsb
imul
xchg
xchg
movsl
mov
jbe
das
jne
movsb
negb
addr16
pop
cmp
enter
outsl
lock
je
fildll
js
int3
enter
jnp
mov
lods
stc
addr16
cmp
mov
sbb
xchg
aam
add
or
hlt
out
ficomps
inc
popa
jmp
ds
scas
movsl
sub
enter
sbb
or
call
xbegin
jbe
mov
or
jne
testl
jb
and
push
push
roll
int
cmp
daa
and
mov
push
psraw
call
movsb
or
ret
or
lds
mov
shlb
data16
popa
shll
dec
rcrl
outsb
dec
shll
je
shll
jne
dec
shll
bound
and
and
andb
scas
cmp
add
cmp
jns
std
leave
xor
push
bound
stos
test
sbb
std
ret
and
lcall
imul
imul
sarl
inc
xchg
mov
pop
aas
es
mov
sbb
sbb
jg
das
adc
in
movsb
add
shrl
cli
es
std
fldenv
sbb
add
inc
push
test
cld
std
adc
movsb
data16
pop
cwtl
pop
js
push
cmc
xchg
into
xchg
inc
inc
loopne
dec
xor
xchg
inc
xor
xchg
int
pop
aas
andb
lods
out
xor
push
push
xor
orl
sbb
xor
shrl
imul
mov
pusha
add
sar
rcrb
inc
mov
sub
pop
cli
je
cmpl
decb
add
les
das
ja
xchg
xchg
dec
sub
push
jo
jge
jg
stos
stos
imul
dec
mov
jmp
mov
push
add
inc
push
jno
fs
pop
xchg
and
andl
and
mov
add
mov
loop
pop
repz
jge
mov
lock
xadd
and
mov
cwtl
out
gs
js
or
mov
and
jl
push
sub
lods
and
insb
adc
push
push
push
add
sub
push
xchg
loope
das
xchg
mov
sub
lods
or
test
jne
inc
ret
rorl
mov
nop
fstp
mov
mov
adc
inc
fdiv
cld
mov
inc
mov
nop
mov
dec
or
add
fidivs
adc
bound
es
call
sub
dec
stos
clc
in
mov
push
stc
jg
sub
out
std
cwtl
inc
cwtl
and
lcall
mov
mov
jb
movsl
cmpsb
imul
test
and
mov
lods
scas
scas
push
mov
mov
cmpsb
imul
lcall
inc
mov
mov
rol
ret
ret
les
mov
enter
push
lret
mulb
pop
aas
popa
arpl
imul
imul
addl
adc
fisttpl
mov
ret
dec
xor
outsl
jp
mov
push
dec
outsb
push
std
and
dec
xchg
les
dec
jne
or
jmp
push
shr
sbb
pop
pop
repnz
or
mov
int
testl
test
dec
leave
dec
insb
addr16
les
fmul
xor
jecxz
faddp
sbb
call
negl
das
xchg
add
xor
xchg
cld
xchg
dec
rolb
clc
js
rcrb
aas
sub
mov
aaa
and
xchg
rorb
mov
and
insb
shlb
je
jo
sub
outsb
cmp
dec
rcr
jo
outsl
mov
xlat
fcomp
fiaddl
sbb
sbb
repnz
popa
cmp
sbb
leave
adc
add
testb
scas
inc
in
scas
sub
ss
cwtl
sbb
sbb
ja
clc
popa
lcall
jb
arpl
xor
outsl
popa
jb
gs
or
call
push
mov
insl
pop
in
ljmp
push
es
push
mov
sbb
pop
push
fs
adc
cld
push
inc
push
xor
jbe
mov
push
pop
jmp
and
jp
sbb
xor
pusha
fisttpll
shll
pusha
sbb
push
imul
insl
call
inc
xchg
enter
mov
or
arpl
sbb
outsb
mov
dec
iret
jle
mov
add
aas
dec
or
mov
and
je
aaa
jb
jne
repz
mov
enter
jle
popa
stos
pop
add
cmovnp
insl
stos
in
jb
or
mov
adcl
or
cmp
std
fxch
imul
or
addl
add
push
movl
cli
mov
jl
mov
push
add
cmpb
dec
fldl
mov
ret
jbe
inc
into
and
jo
push
sbb
add
in
sub
and
ljmp
xor
xchg
test
mov
push
shl
xchg
push
sub
jb
in
ljmp
mov
sbb
in
out
stos
sbb
test
and
ljmp
add
in
xchg
out
inc
out
ja
ds
fcoml
pop
lcall
loopne
inc
mov
cld
jecxz
in
in
xchg
cld
in
out
push
out
push
sahf
cld
stos
mov
pop
push
push
je
call
sbbb
mov
addr16
mov
xchg
je
test
mov
xor
call
fdivr
adc
aaa
ret
cmpsl
cltd
push
cmpb
ss
adc
subb
insb
gs
add
push
push
arpl
xchg
movsl
xorb
jbe
das
and
cmp
shl
adc
jg
je
inc
cmp
jg
enter
dec
jnp
sbb
daa
call
mov
or
or
shrl
sti
mov
mov
push
mov
sub
mov
sbb
mov
mov
test
jbe
cmp
pop
scas
pushf
push
lret
adc
test
scas
lea
mov
and
movb
int3
add
add
negl
call
or
inc
xor
clc
add
cmpsb
imul
imul
add
inc
lcall
sbb
or
fstpl
daa
pop
or
push
or
fdivl
and
cmc
or
negb
gs
stc
add
fdivrl
or
mov
adc
insl
mov
cwtl
cltd
adc
lcall
cs
push
sahf
inc
lahf
push
xlat
addl
test
jbe
mov
sbb
jo
add
xor
cmp
sahf
gs
inc
dec
ljmp
cmpsb
jmp
sbb
test
pop
and
shrb
rcl
xchg
sub
aam
mov
xlat
mov
fcomp
fimull
mov
or
mov
mov
fmull
add
fdivl
mov
fnstsw
stos
loope
loop
push
jecxz
es
popa
mov
in
mov
js
push
or
lods
push
imul
insl
fwait
cmpsb
mov
mov
mov
orl
mov
mov
aas
mov
add
cmp
je
add
mov
std
mov
adc
scas
xorl
xor
pop
je
div
fs
push
sub
pop
xor
and
push
jb
xchg
sbb
sub
iret
and
pushf
mov
daa
jns
orl
popa
and
add
jp
xchg
jl
sbb
mov
dec
jb
rclb
js
lcall
push
je
and
pop
or
test
and
in
fstps
lahf
and
insb
sbb
frstor
mov
or
popa
dec
sbb
xor
lcall
mov
pusha
or
mov
rclb
xchg
push
xor
mov
mov
xor
ret
nop
paddb
push
pushf
int
lahf
es
ret
sbb
mov
dec
insb
ret
cmp
imul
inc
pusha
je
push
int3
outsl
jae
xchg
fs
mov
pop
and
and
test
jg
add
add
mov
idivb
mov
add
adcb
pop
push
and
data16
push
lods
add
jge
movsl
icebp
adc
pushf
mov
push
call
daa
arpl
adc
mov
xor
mov
es
inc
outsb
mov
mov
pop
je
add
mov
or
mov
jecxz
jb
lods
jmp
repz
and
sub
or
bnd
cmc
mov
adcb
mov
ds
movsl
lea
testb
les
or
fs
outsl
and
cmp
lea
push
pop
inc
or
lea
mov
jne
and
jb
mov
mov
std
xchg
inc
inc
cmp
adc
add
pop
mov
orps
aad
out
sbb
push
push
push
aas
mov
cmpsb
in
in
sub
mov
lods
gs
fs
daa
sbb
pop
inc
pop
jne
pushf
inc
sub
xchg
gs
lret
mov
xchg
gs
gs
lret
mov
imul
call
jp
adc
jle
xchg
aam
call
pop
xchg
pop
and
out
loope
les
fsubrs
inc
in
fstpt
or
cmp
jl
add
jg
mov
cmp
jl
adc
jg
and
fidivs
sub
out
mov
inc
jecxz
pushf
imul
or
sub
outsl
loopne
dec
mov
push
push
push
and
sbb
inc
mov
inc
fisttpll
aaa
loope
mov
inc
inc
sub
jmp
jg
dec
add
int3
nop
sbb
icebp
test
push
sub
dec
adc
fdivl
pop
cmp
shll
jnp
cmp
dec
adc
add
cmp
adc
insl
jmp
or
pop
and
scas
jmp
pushf
adc
mov
cmp
xchg
fists
pop
je
movsb
mov
and
xorl
inc
out
ja
xchg
mov
sahf
daa
cmp
and
cli
mov
cmpsl
mov
fstps
movsb
cmp
jmp
push
cwtl
sub
push
stos
call
push
outsb
mov
or
xor
aaa
pop
cmp
dec
sbb
jb
call
sti
int3
add
push
sbb
lods
mov
into
and
jg
test
xchg
cmp
dec
sbb
and
cmp
adc
xchg
sbb
cmp
or
push
or
mov
test
int3
add
pop
cs
pop
cmp
jae
es
stos
adc
mov
mov
jo
gs
ss
cmp
pop
xchg
gs
cmp
gs
xchg
gs
in
pop
xchg
bound
pop
add
or
mov
test
les
sbbb
jmp
mov
imul
sbb
sbb
mov
aad
adc
bound
pushf
popa
xchg
add
dec
push
xchg
mov
cmp
movsb
mov
cmp
push
lds
and
jae
imul
jae
arpl
cmp
imul
gs
pop
rcrl
call
mov
mov
pop
punpcklbw
dec
cmp
jmp
sub
and
pushf
push
mov
inc
cld
insl
adc
stos
mov
mov
iret
cld
push
add
out
test
pushl
js
mov
mov
mov
push
leave
inc
mov
pop
repnz
lds
loope
pop
mov
adc
mov
enter
fnsave
xor
inc
or
rclb
adc
sbb
and
adc
in
adc
pop
js
add
jns
pusha
push
fwait
xchg
out
inc
inc
xor
jne
std
xchg
add
push
xchg
subl
js
subl
das
mov
cmp
add
loopne
adc
cmp
f2xm1
in
repz
or
loop
and
cmpw
cmp
cmp
mov
add
clc
or
adc
mov
push
cmp
cmp
jl
je
sub
dec
jb
mov
js
cmp
pusha
add
mov
faddp
cmpl
mov
mov
pop
vsqrtsd
stc
push
or
add
mov
movsb
sub
dec
jmp
inc
dec
sbb
stos
dec
mov
push
add
test
cld
mov
pop
sbb
shrl
adc
mov
add
add
jmp
xor
mov
adc
jne
mov
sub
mov
lods
mov
mov
dec
int
sbb
lahf
add
fistpll
loop
adc
pusha
lea
roll
jle
movzwl
mov
jne
daa
add
inc
ljmp
shlb
cli
aaa
or
adc
add
inc
lar
mov
jmp
or
jne
or
and
jne
inc
adc
push
rorb
jg
jae
cmpsb
popa
lea
mov
add
adc
inc
inc
fistpll
dec
add
insl
call
mov
les
jae
ja
repz
jmp
jbe
jno
push
int
insl
push
dec
adc
add
mov
adc
iret
and
outsl
clc
test
je
and
mov
pushl
add
push
xorb
mov
sub
cmp
inc
pop
shrb
loope
and
shrb
push
daa
cltd
addr16
add
push
lock
xor
andl
jle
sbb
in
or
mov
push
call
adc
inc
aaa
pushl
lcall
sarb
push
xor
enter
inc
insl
pop
les
push
ret
or
push
fsubl
cltd
cld
mov
or
push
orl
es
scas
xor
out
sbb
call
and
inc
cmp
idivb
pop
and
inc
sub
mov
sar
or
adc
scas
sbbb
cmpsb
or
inc
sbb
xor
cwtl
inc
sbb
and
ror
push
push
or
mov
xchg
mov
xchg
xchg
or
xlat
dec
insl
xor
int3
sub
jbe
pop
cmp
push
out
adc
xchg
leave
or
adc
subb
gs
shll
jo
outsl
jb
xor
subb
push
mov
or
or
bound
mov
or
pop
mov
arpl
pop
mov
or
test
or
je
addl
jne
jbe
into
jo
mov
xor
test
fwait
adc
lahf
roll
in
mov
call
addr16
insb
je
xchg
cmp
dec
add
add
mov
flds
dec
shll
outsb
je
add
dec
and
jne
inc
xlat
push
pop
cmp
adc
adc
jmp
test
loopne
or
xchg
loopne
add
sbb
inc
pop
movsb
add
mov
les
mov
mov
es
push
jne
add
pop
push
mov
xchg
sbb
jl
jecxz
cmp
daa
ffree
and
or
mov
push
sub
sbb
inc
aaa
sti
add
inc
xchg
loopne
test
aam
or
aam
cli
cmp
and
negb
push
pop
or
scas
out
push
addb
roll
lock
cltd
sub
add
mov
imulb
pop
lock
push
sub
lea
cltd
ljmp
repnz
mov
fdivs
call
out
jno
cmp
sbb
push
push
mov
daa
stos
mov
xchg
popf
adc
jmp
mov
add
pusha
push
xor
jle
push
and
enter
mov
mov
je
inc
pop
pop
test
iret
out
aam
outsb
adc
mov
mov
sahf
adc
add
stc
push
adc
sbb
mov
cmp
addr16
adc
jl
sbb
push
lods
es
push
jge
push
scas
call
push
ret
and
lcall
inc
add
iret
xchg
pop
sahf
xor
arpl
lds
imul
mov
es
test
sbb
int3
int
aas
lods
jnp
xchg
pop
std
rolb
enter
or
insl
out
jne
ss
cmpsb
xor
test
test
dec
xchg
and
cltd
sbb
inc
adc
out
sub
mov
je
popa
jns
aaa
test
mov
js
test
insw
mov
xor
push
cmp
orb
xchg
pop
add
bound
jne
ret
jb
dec
mov
or
fiaddl
pop
jo
jge
push
push
jno
inc
pop
mov
mov
adc
pop
add
adc
adc
push
cmp
push
xor
sbb
xor
sub
jnp
inc
xor
ret
sub
lea
aam
push
xchg
mov
add
push
xchg
push
pop
addl
push
inc
enter
nop
xor
sbb
and
mov
gs
gs
xchg
js
insb
outsl
jb
pusha
xchg
gs
jb
gs
pop
adc
mov
loope
add
ja
mov
lcall
iret
lahf
push
add
int3
push
push
xorl
fistl
leave
std
sub
or
jae
test
out
rep
jno
and
push
add
jecxz
adc
push
mov
push
or
out
sub
and
push
cltd
adc
pop
stos
dec
loopne
add
je
loop
lcall
pop
test
mov
xchg
xor
mov
shr
pop
dec
inc
mov
jmp
xchg
push
xchg
scas
mov
sarb
dec
shlb
push
dec
dec
push
in
rcr
mov
popf
or
cmp
mov
mov
nop
dec
stos
or
out
pop
add
xor
and
pusha
fs
add
inc
mov
push
fs
and
sub
sbb
jmp
lock
sbb
sbb
hlt
clc
loopne
cmp
in
sbb
lret
test
jns
in
xor
test
enter
loopne
hlt
sbb
enter
or
mov
fisubrl
out
xor
pushf
scas
cltd
inc
add
fidivrs
dec
outsb
imul
inc
jb
arpl
push
arpl
mov
dec
gs
jbe
sub
fstp
add
pop
aad
inc
aam
add
inc
add
pop
or
outsl
arpl
jae
fs
ss
cmp
mov
xchg
mov
push
outsb
popa
jo
push
add
imul
push
stos
ja
push
jnp
cmp
ss
adc
pop
aas
lods
mov
inc
insb
sbb
sbb
in
ljmp
and
fs
imul
xadd
dec
push
fidivrs
or
popa
jnp
sbb
sbb
fs
adc
insl
adc
mov
sub
jg
int3
add
jb
pusha
jg
cwtl
loope
mov
adc
push
outsb
jecxz
imul
pop
fimull
sbb
sbb
jne
or
mov
mov
and
mov
push
mov
fcmove
add
dec
aas
sbb
pop
mov
stos
sbb
xchg
gs
nop
jno
fucomi
gs
inc
outsl
jb
outsb
and
push
lods
jmp
fsubrs
push
gs
outsl
push
adc
int3
dec
sbb
roll
push
orb
ja
sub
inc
repz
out
jmp
fistl
push
push
push
xchg
fcmove
mov
inc
cmp
pop
ret
pop
xlat
pop
fildl
inc
jno
dec
mov
adc
inc
and
pusha
xchg
pop
sbb
pushw
das
dec
or
scas
mov
cmp
fadds
jp
fwait
mov
pop
mov
daa
mov
and
push
outsl
imul
add
sub
loopne
xchg
mov
inc
filds
into
push
popa
push
inc
ss
ss
jecxz
shll
and
inc
add
jns
fbld
or
insl
sub
imul
outsb
aas
ret
iret
pop
into
mov
xor
or
pop
add
add
mov
subl
pop
add
fcoms
imul
data16
fstpt
dec
mov
sbb
xor
cltd
fs
pmaxsw
pop
sub
push
lock
push
dec
inc
loop
add
jge
fldt
inc
je
inc
push
fldl
out
add
lock
add
adc
sbb
pop
ja
push
addr16
fs
xor
push
adcl
pop
divl
or
std
inc
pop
pop
and
push
mov
push
mov
popa
mov
fiadds
sub
insl
push
jmp
pop
aad
push
fmull
scas
push
and
xchg
push
clc
add
mov
jns
or
inc
in
movl
test
sbb
mov
mov
insl
dec
sub
pop
popa
jnp
pop
and
sbb
int
fisubs
lea
dec
mov
jb
jne
int3
imul
mov
xor
sub
popa
xchg
pop
adc
push
cwtl
jne
sub
pop
xor
outsb
popl
lcall
jae
or
outsb
fiaddl
jo
inc
popa
arpl
add
and
inc
inc
push
inc
push
mov
add
push
insb
fistpl
push
jbe
jb
jns
add
insl
jae
or
adc
push
mov
xor
mov
mov
jnp
add
pop
adc
mov
iret
add
inc
xchg
outsb
pushf
mov
dec
fisttps
jae
jecxz
mov
lds
push
out
inc
lds
shrl
cmp
lods
mov
out
outsb
sub
or
mov
outsb
jne
add
test
and
xor
inc
pop
push
add
loopew
movzbl
jmp
sbb
out
outsl
push
and
or
mov
and
jbe
xchg
int3
add
fildll
dec
sbb
add
sbb
push
daa
dec
insl
mov
pop
pusha
scas
xchg
add
mov
pop
add
sbb
mov
push
add
adc
repz
fcoml
adc
add
xchg
in
mov
inc
dec
push
dec
scas
xchg
adc
je
or
or
lret
xlat
shrb
out
adc
and
xchg
lret
repnz
pop
aaa
popa
push
mov
paddsb
lock
fwait
sub
pop
adc
jnp
pop
push
ss
and
add
inc
push
repnz
add
add
aam
pushl
or
xor
cmp
inc
xor
push
xor
xor
je
js
test
mov
xchg
pushl
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jp
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
into
xor
in
xor
sbb
es
inc
ss
ss
ss
pushl
ret
ss
xorb
aaa
shll
cmp
cmp
cmp
cmp
cmp
and
xor
inc
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
fwait
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
incl
aaa
fdivs
or
or
cmp
cmp
cmp
cmp
cmp
mov
push
cli
cmp
cmp
push
jne
jp
into
cmp
cmp
cmp
cmp
push
add
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
loopne
sbb
fwait
movsl
jmp
das
aas
push
cmp
or
xor
xor
xor
xor
xor
xor
xor
pushl
xchg
xor
xor
xor
xor
pusha
xor
xchg
xor
xor
pushl
cld
pushl
fnstenv
in
jmp
cld
xor
xor
xor
cmp
addr16
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
jbe
jge
mov
pushl
int3
xor
in
in
xor
push
ss
ss
aaa
jg
xchg
aaa
shll
call
aaa
pushl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
decl
mov
mov
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
mov
cmp
xor
aas
ds
cmpl
in
idivb
adc
push
aas
insb
aas
jp
xchg
aas
mov
stos
add
lret
aas
fnstsw
ljmp
ja
scas
nop
xor
xor
xor
nop
xor
das
cld
lret
xor
xor
xor
xor
lock
xor
xor
push
xor
xchg
xor
inc
aaa
pushl
pushl
adc
and
sub
daa
test
xchg
xor
popf
xor
int
add
or
cmp
push
ss
bound
in
out
outsl
clc
push
ss
push
aaa
adc
aaa
cmp
push
aaa
ret
aaa
into
aaa
fisubl
out
aaa
push
cmp
lcall
cmp
cmp
push
cmp
je
test
lea
lcall
cmp
cmp
mov
cmp
xchg
mov
cmp
mov
repnz
xor
inc
cmp
cmp
cmp
cmp
jne
or
outsl
clc
jmp
cmp
mov
mov
or
cmp
or
push
ds
lcall
add
test
jae
xor
xor
sbb
and
sub
sar
jmp
xor
aaa
jns
jg
test
xor
xor
out
mov
inc
jmp
xor
divb
add
or
adc
push
sbb
inc
and
sub
xor
pop
xor
lea
xchg
xor
decl
xor
xor
xor
inc
cmp
xor
xor
sahf
xor
jg
jmp
ss
xchg
aaa
shlb
xor
xor
cmp
insl
sub
cmpb
cmp
cmp
out
clc
sarl
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
inc
adc
outsl
mov
xchg
cmp
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
insl
cmp
jp
cmpl
xchg
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmp
dec
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
mov
in
cmp
add
movsl
ds
ds
lret
ds
ds
add
mov
aas
inc
aas
dec
aas
push
aas
pop
aas
js
mov
fwait
aas
test
mov
aas
out
out
pushl
or
imul
xor
xchg
xchg
xor
mov
movsl
xor
xor
xor
xor
xor
xor
xor
stos
xor
fdivl
lods
mov
sti
xor
xor
xor
xor
xor
xor
xor
cmpsb
das
pop
loopne
xor
sub
cli
xor
xor
cmpsl
lcall
xor
xor
stos
test
xor
xor
xor
xor
xor
xor
xor
or
incl
xor
xlat
add
aaa
lods
aaa
mov
aam
lock
stc
aaa
pop
arpl
or
outsl
mov
cmp
cmp
cmp
cmp
cmp
jno
dec
movsl
cmp
in
icebp
jg
add
cmp
jle
jnp
nop
cmp
cmp
cmp
imul
ja
cmp
push
imul
xor
cmp
inc
ds
ds
ds
jo
mov
ds
ds
ds
mov
fidivrs
jecxz
jmp
aas
pop
scas
outsl
clc
das
cmp
cmp
movsb
aas
stos
aas
mov
fdivrs
loopne
call
cltd
mov
sub
ffreep
xchg
test
shlb
add
insb
xor
js
jle
test
pushl
clc
xor
test
loop
call
xor
xor
or
rcrl
push
xor
and
mov
lahf
add
and
call
pop
lds
add
mov
xlat
mov
mov
mov
daa
fmuls
mov
mov
pop
sahf
add
repz
mov
and
negl
pop
sub
mov
and
pusha
inc
subb
cmp
pop
inc
aaa
pop
js
add
sub
add
sub
mull
add
in
add
pushf
dec
pop
add
push
add
xor
add
pusha
addr16
jb
jb
ret
inc
and
xchg
add
and
inc
inc
xor
aaa
sub
push
sub
dec
add
add
cmp
call
pop
cmp
fs
push
dec
shrl
xchg
rol
push
aam
cld
shrl
gs
sbb
sub
cmpsb
pop
ss
adc
clc
cmp
loopne
mov
lcall
cmpsb
fnstenv
pop
in
hlt
add
or
push
sub
fidivrl
jle
xchg
xlat
or
mov
sub
xor
js
dec
scas
push
sarl
dec
dec
inc
and
and
push
pop
add
pop
aaa
stos
aad
xor
adc
jmp
pop
dec
gs
outsl
popa
jb
and
outsl
jne
jae
xor
cmp
push
mull
enter
push
add
js
fsubrl
xor
xor
adc
js
mov
dec
inc
dec
daa
inc
push
lods
dec
jmp
and
inc
and
pushf
inc
or
dec
or
test
jne
and
and
mov
mov
movsl
add
add
lahf
push
pop
mov
cld
insb
xchg
push
rep
or
mov
mov
dec
adc
inc
je
jge
push
stos
push
mov
js
mov
mov
mov
andb
mov
sbb
pop
pop
or
mov
cmpsb
jmp
les
clc
aam
add
xlat
cmp
js
jae
mov
dec
inc
fldenv
cmp
jp
into
gs
je
inc
cwtl
in
fs
fcompp
cmp
pop
pop
push
and
in
jne
sbb
and
inc
lock
imul
mov
in
jnp
xchg
sub
mov
out
mov
pop
cmpl
jbe
dec
cwtl
in
insb
mov
inc
cld
sub
daa
sub
xor
mov
testl
pop
mov
and
sub
mov
dec
sbb
add
lds
xchg
or
scas
jnp,pt
lret
neg
in
pop
and
sub
add
mov
rorb
jb
cmp
or
xchg
lods
lock
insb
std
gs
xchg
gs
insl
insl
dec
outsb
mov
cmp
xchg
dec
dec
inc
jg
mov
or
add
and
mov
add
sub
lret
insl
inc
je
dec
pushf
add
inc
insb
inc
dec
popa
and
popa
cwtl
fwait
jmp
push
in
ja
mov
loopne
adc
outsb
or
xor
inc
cld
cmp
lea
clc
sbb
in
out
add
aaa
dec
call
mov
push
shr
and
lret
ret
lea
push
addr16
mov
cmp
jmp
mov
sbb
js
adc
fstpt
mov
aas
dec
push
cmc
dec
sbb
jns
or
xchg
or
add
rclb
push
mov
cmp
pop
push
jno
mov
add
adc
call
cmp
push
testl
test
mov
inc
inc
int3
sbb
sbb
push
add
cmp
cli
adcl
rorb
push
sub
out
cltd
in
fsubs
movups
sbb
pop
testl
push
in
and
push
mov
mov
push
ffree
push
lret
inc
dec
jle
or
add
or
test
and
in
add
je
js
mov
add
cmp
jl
push
icebp
mov
push
fwait
and
pop
add
xor
xchg
lods
add
mov
fists
and
xor
push
mov
and
push
or
mov
in
pop
xchg
popa
outsl
outsb
gs
gs
xchg
jae
cs
leave
push
add
sub
movsl
jne
arpl
mov
fists
loope
js
cs
sti
xor
or
test
cmp
in
test
adc
je
mov
mov
add
mov
gs
xchg
xchg
xor
xor
lock
mov
cs
roll
xor
add
arpl
ror
dec
xchg
pop
ja
inc
std
incl
popa
aas
std
jmpw
enter
test
bound
mov
sub
or
jmpw
inc
std
js
addr16
pop
push
ja
outsb
dec
outsl
jb
data16
add
push
cmp
insb
mov
sbb
sti
es
sub
push
inc
fstps
or
mov
rclb
push
jnp
dec
cmp
push
jge
inc
xlat
mov
cmp
je
jp
jne
nop
xchg
inc
cmpb
fimuls
in
xor
push
push
adc
jmp
sbb
dec
push
decl
inc
xor
shlb
lock
and
hlt
inc
jb
aaa
call
and
lret
inc
and
mov
in
fcompl
and
jo
mov
scas
mov
xor
inc
dec
test
stos
xor
xor
stos
lods
lods
scas
xor
add
daa
mov
xchg
push
pop
dec
fadds
insl
cs
fstps
movsb
mov
lea
movsl
pop
cmpsb
jnp
mov
dec
je
test
test
mov
std
stos
std
lods
std
lods
jb
xor
jne
js
xchg
lret
in
jo
insb
shrb
rcrb
shll
cs
stos
mov
or
mov
sub
mov
mov
push
add
pop
inc
stos
aad
lods
and
out
push
call
add
insb
add
call
sub
mov
popa
outsl
outsb
mov
adc
stos
enter
gs
gs
xchg
gs
insb
popa
jne
gs
xchg
outsb
arpl
jb
pop
sub
js
leave
jno
mov
addr16
pusha
xchg
gs
outsb
cs
lret
mov
lds
js
push
ror
mov
outsl
gs
pop
adc
lret
cs
adc
sub
bound
mov
ds
je
and
add
jl
add
adc
stc
flds
adc
dec
inc
cs
xlat
faddl
call
mov
push
jne
lea
inc
lods
repz
push
and
fiaddl
adc
mov
inc
aaa
mov
shll
mov
arpl
mov
subb
and
icebp
daa
jno
dec
mov
inc
mull
outsb
or
repz
call
sub
enter
sbb
and
xor
push
cld
sbb
hlt
mov
xor
pop
mov
mov
in
sahf
push
loope
aam
add
outsl
insl
mov
jne
imul
add
ss
in
rorb
in
jns
mov
adc
call
and
inc
repz
lock
push
outsl
test
pop
pop
add
push
insb
sbb
jae
mov
mov
filds
add
mov
lock
fiadds
je
cmp
scas
mov
sete
xor
push
jae
arpl
mov
pop
movl
lock
mov
or
add
xor
sub
push
daa
pop
pop
add
sti
push
pop
dec
add
adc
inc
add
push
adc
xchg
pop
push
pmulhuw
and
arpl
and
jl
repnz
and
and
and
inc
inc
push
test
and
cmp
add
adc
les
cmp
pop
pusha
adc
pop
repnz
xor
and
dec
and
and
add
cmc
inc
push
loope
fadds
mov
insb
and
pop
adc
bnd
pushl
jns
repnz
adc
or
pop
and
jns
scas
std
std
add
and
test
fdivr
test
test
inc
enter
std
xor
or
xchg
pushf
xchg
add
add
std
enter
xor
enter
inc
repnz
pop
jo
push
and
repnz
or
inc
and
test
and
add
inc
cmp
mov
enter
add
and
add
jb
push
leave
mov
add
addb
sti
mov
dec
adc
in
stc
mov
add
and
insb
and
test
dec
adc
adc
adc
nop
iret
and
cmp
and
fwait
sti
jmp
rol
or
and
nop
dec
xchg
cwtl
xor
pop
xchg
pushf
add
aaa
add
out
cmp
addr16
test
adc
mov
movsb
imul
fdivs
dec
and
cmp
mov
test
pop
push
aaa
pusha
inc
mov
sbb
or
dec
sbb
push
cmpsl
call
xor
add
xchg
inc
xchg
xor
mov
push
or
sub
xchg
repz
push
daa
and
jno
add
or
sub
das
jns
sbb
sub
adc
mov
nop
adc
xchg
pop
mov
sbb
mov
sbb
add
dec
jae
push
inc
mov
push
outsb
jb
and
daa
popa
inc
outsl
js
xchg
add
dec
jp
or
adc
jp
jnp
mov
and
adc
cmp
and
incb
add
insl
dec
jae
jne
mov
xchg
add
inc
lret
sbbb
push
xchg
mov
or
sti
inc
dec
adcb
or
fs
roll
mov
sub
sbb
pop
add
inc
cmp
xchg
addl
cmp
sbb
mov
xor
sub
xor
or
fcmovne
fidivrs
es
stos
in
enter
inc
cmp
cmp
lcall
push
int
push
mov
pushf
push
dec
shll
inc
pop
mov
xlat
je
insb
test
lret
xchg
pop
frstor
clc
dec
xlat
jmp
cmc
leave
add
inc
inc
jmp
or
add
shrl
push
pop
mov
adc
mov
mov
dec
dec
cld
cs
inc
imul
jg
add
popa
aam
ret
or
or
mov
lds
jne
repz
je
mov
aaa
adc
and
push
adc
adc
lds
sbb
pop
ret
push
sub
roll
inc
push
inc
xor
imul
outsl
jns
data16
les
mov
push
pop
jns
pop
add
in
gs
movsl
bnd
xor
xor
ret
adc
sub
inc
imul
dec
outsl
sbb
daa
add
inc
adc
pop
loop
rcrb
xor
xchg
lret
inc
loopne
int3
pusha
int3
add
loopne
xchg
adc
loope
add
aam
or
dec
out
dec
out
jmp
inc
or
add
imul
or
aas
ja
add
xorb
outsl
add
sahf
sbb
jb
addr16
pop
sub
xchg
or
mov
cmp
xor
insl
scas
jmp
jecxz
inc
and
xor
cmovs
inc
jae
and
popa
jns
sbb
movsl
popa
and
add
addr16
fnsave
or
jo
imul
outsb
es
push
push
mov
push
sub
int3
xor
push
jb
cmp
fnstenv
xor
mov
xchg
pop
xlat
mov
insb
popf
xchg
pop
dec
or
lahf
sti
bound
lds
popf
addr16
mov
adc
xchg
pop
xor
dec
sub
inc
shrl
push
sub
or
pusha
xchg
sbb
imul
push
daa
arpl
mov
inc
inc
aaa
popa
pop
outsl
pcmpeqw
jae
popa
adc
xor
inc
push
fistpl
mov
push
mov
lods
arpl
loope
push
insb
cmpsl
xchg
out
add
fwait
and
aaa
mov
cmp
insl
pushf
xor
xor
xor
xor
aad
or
lret
xor
xor
xor
fnsave
daa
ss
mov
mov
mov
sbb
cmp
aaa
fnsave
clc
push
dec
cmp
cmp
outsl
cmp
push
or
cmp
cmp
cmp
xchg
ljmp
lcall
cmp
cmp
cmp
sbb
jg
xchg
lahf
cmpsl
fstpt
hlt
pushl
aas
mov
lahf
aas
movsl
aas
mov
fidivrl
aas
outsl
inc
jg
test
fwait
bound
jno
jp
mov
test
scas
rolb
hlt
pushl
fidivs
hlt
xor
ja
fwait
xor
lods
aaa
call
hlt
dec
daa
dec
xor
lret
sbb
mov
insl
jmp
iret
xor
xor
xchg
mov
xor
xor
aaa
sbb
sti
push
mov
mov
out
xor
ss
out
jg
jg
ss
arpl
jne
add
ss
ss
inc
call
fidivl
loopne
out
and
sub
cs
xor
mov
nop
subb
xchg
add
cmp
fs
imul
sbb
mov
sbb
xchg
bswap
or
inc
and
and
and
pop
add
inc
test
push
add
xchg
test
addb
pop
or
push
adc
mov
idivl
addl
adc
addl
cmp
sub
inc
fcmovu
fnstenv
cs
adc
add
or
int
add
pop
add
gs
add
inc
sub
push
pop
xor
push
and
push
add
add
pandn
lods
js
pop
insb
dec
sub
or
mov
xchg
add
add
mov
inc
push
dec
rcll
insb
xchg
cmp
add
shlb
or
mov
pop
fs
rcr
adc
pop
shll
sbb
rol
daa
mov
sbb
lock
loopne
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
