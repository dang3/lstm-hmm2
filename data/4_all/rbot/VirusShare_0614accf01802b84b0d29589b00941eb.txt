pop
or
mov
or
pop
add
test
sbb
dec
mov
add
jmp
jge
lahf
rcl
mov
or
lret
sbb
stos
setae
sarl
movb
push
es
out
sub
add
push
popf
sbb
dec
xchg
add
or
push
or
mov
addb
repz
dec
or
push
jne
aas
cmp
int3
setae
mov
inc
andl
jb
addl
xchg
dec
push
jno
push
jp
ljmp
hlt
lods
fdiv
test
and
repz
je
rcll
in
sarb
adc
sti
jecxz
clc
mov
and
or
cli
mov
stc
fidivrs
fsubs
out
subl
shll
insl
lea
hlt
daa
mov
mov
sub
pop
cld
xor
dec
xor
movsl
aad
lahf
and
dec
cmp
mov
adc
mov
lcall
xchg
sbb
fdivrl
mov
adc
adc
jns
outsl
jg
rorl
adc
adc
adc
std
mov
sbb
int
mov
adcl
leave
stos
sbb
rcrb
scas
xor
arpl
subl
dec
popf
xchg
adc
test
pusha
lcall
dec
int3
add
jns
pop
sahf
pop
je
lods
scas
faddl
in
xlat
pop
push
dec
push
pop
adc
and
lahf
push
sub
inc
pop
or
xchg
adc
sub
push
dec
lret
xor
out
lock
push
or
sub
push
cmp
xor
dec
xor
rep
aas
inc
dec
jmp
test
pop
scas
mov
je
push
lds
xchg
mov
lods
cwtl
cmp
scas
test
pop
push
cmpl
cmovb
push
int
out
lea
iret
test
adc
fcomps
sub
stc
push
inc
sub
mov
mov
mov
push
fiadds
sbb
sti
jle
adc
sub
push
imul
xchg
dec
dec
in
add
and
mov
out
shrl
mov
insb
dec
sbb
xchg
aam
xor
rcll
sub
lahf
arpl
test
add
gs
hlt
xor
mov
adc
daa
testl
push
rclb
adc
push
adc
mov
not
lahf
aas
rorb
cmp
ja
popa
adc
add
movsl
mov
mov
mov
cmc
dec
notb
jno
mov
clc
jle
add
scas
jmp
mov
cmpsb
es
sbb
pusha
sahf
lock
sbb
xchg
addr16
call
movsl
jp
in
je
cs
sub
sbb
pop
leave
xchg
sub
hlt
cld
out
push
jle
xor
out
pop
shlb
xor
cwtl
sbb
or
jmp
or
push
mov
mov
andb
mov
test
pop
xor
push
das
pop
inc
clc
sub
shl
loopne
lea
inc
sub
out
push
data16
pop
adc
shrb
or
mov
cmpsl
add
fldenv
lret
sub
sbb
rorl
test
mov
cmp
cs
cmp
scas
pop
sbb
lea
jae
lods
mov
and
popf
inc
imul
adc
iret
cmc
in
iret
fmulp
add
hlt
jmp
xchg
bound
jb
into
lahf
negl
add
out
in
jecxz
jmp
or
rdtsc
aaa
enter
xlat
mov
cmpsl
sbb
pop
scas
dec
subl
cwtl
in
cwtl
std
inc
and
decl
dec
add
inc
pop
jns
sarb
dec
lods
pop
mov
mov
shrb
aas
sbb
mov
call
mov
mov
loop
cmpsb
push
cltd
dec
sub
adc
cltd
xor
dec
jno
out
jmp
and
add
jl
xchg
adc
cmp
cmp
mov
stos
aam
in
xor
pop
xchg
xor
mov
lock
xchg
dec
and
fstps
jecxz
dec
dec
adc
lahf
adc
push
sarb
or
call
pop
addl
mov
jb
cltd
cmpsb
stos
xchg
cld
push
push
fbstp
outsb
inc
and
xor
inc
lods
mov
dec
mov
mov
dec
mov
rcr
mov
push
push
jmp
outsl
ljmp
mov
mov
lret
adc
ret
movups
shlb
xchg
pop
sbbb
cs
arpl
cwtl
clc
ficoml
dec
push
das
dec
sbb
xchg
mov
xchg
orl
scas
push
movsl
add
scas
pusha
push
outsl
hlt
incb
fiaddl
add
pop
cmp
imul
insb
xor
mov
sub
outsl
adc
cmpsl
adc
pusha
or
popf
cmpsb
or
mov
mov
mov
mov
clc
inc
jo
push
add
dec
dec
imul
lods
pop
and
mov
push
movsl
sbb
jmp
mov
adc
inc
fsubr
jmp
lock
push
mov
mov
arpl
xor
mov
jmp
and
syscall
int3
inc
xchg
and
pop
sbb
xchg
push
xor
pop
into
hlt
ljmp
in
cmpsb
push
xchg
add
xor
movl
dec
jae
mov
mov
aam
push
sub
add
int3
jno
inc
jecxz
dec
mov
sub
sub
dec
ds
sbb
mov
scas
pop
mov
inc
cltd
repz
pusha
fnsave
cld
daa
or
pusha
mov
shr
jge
ds
aaa
mov
push
out
pop
sub
pushf
sarb
jnp
jle
add
or
call
inc
mov
sti
mov
test
int
inc
outsl
inc
jl
test
cmpsl
das
sbb
pop
mov
xor
add
ljmp
sbb
cmc
push
cltd
xlat
cwtl
leave
cmp
dec
mov
and
jb
cld
fisttps
xchg
mov
pushf
pop
scas
ds
imul
out
jnp
pop
fucomi
fwait
insb
sbb
sub
psubd
aam
xlat
xor
hlt
inc
cmp
pop
push
push
xor
aad
push
xchg
mov
mov
push
inc
pop
ret
cmp
imul
xchg
dec
adc
mov
ljmp
shll
call
xchg
xchg
xchg
test
fisttpll
mov
fcom
pop
or
cmp
cmp
inc
lahf
add
xlat
fsubp
add
and
xor
dec
dec
outsl
leave
shlb
js
daa
xchg
in
pop
sbb
sub
lock
outsb
adc
add
fwait
scas
mov
sub
jne
loopne
adc
mov
sub
sub
jp
ret
pop
jb
movq
inc
pop
and
movsb
mov
sbb
or
adc
in
into
idiv
fwait
xchg
lock
mov
dec
hlt
add
sbb
adc
push
adc
mov
mov
cmp
jno
mov
or
int
fadd
in
das
add
aas
mov
je
clc
sbb
stc
cli
pop
mov
fmul
or
mov
pop
shlb
and
lock
repz
push
in
xchg
sub
outsl
arpl
insb
jmp
pop
insl
mov
sub
pop
sbb
popf
outsb
out
imulb
dec
aaa
and
sub
test
xor
les
push
mov
mov
nop
pop
movsl
test
inc
idivl
xchg
test
push
movsb
xchg
in
leave
cltd
lcall
aad
out
pop
enter
dec
cmpsl
lds
pop
sub
data16
adc
jg
out
jbe
sbb
aaa
or
dec
test
fcomps
and
mov
xchg
sbb
mov
scas
imul
loopne
aad
mov
faddl
mov
adc
pop
mov
ret
cmp
xor
loopne
push
mov
xor
xchg
mov
insl
mov
cltd
xor
mov
cli
mov
cmp
push
xchg
in
sub
out
mov
mov
push
pop
and
sub
inc
ret
add
add
and
std
cs
xchg
push
mov
push
movsb
or
lods
stos
sarl
sbb
andb
gs
adc
in
test
and
mov
mov
and
adc
clc
cmp
mov
and
mov
or
faddp
mov
test
lock
push
jnp
jnp
stos
adc
or
xchg
or
push
xor
dec
xor
xor
lret
dec
jmp
pop
frstor
lods
imul
sub
push
sti
or
iret
hlt
cmc
nop
aad
push
fcomip
dec
sbb
mulb
int
test
sub
rcll
sbb
les
mov
hlt
cmp
sahf
lahf
das
nop
lea
pop
cmpsb
lret
in
cld
push
jecxz
cmp
xor
outsl
subl
cld
enter
gs
dec
sub
sub
cmp
mov
xchg
das
cmpsl
mov
in
sub
sti
cwtl
jmp
enter
shll
outsb
cmp
xchg
or
cmp
cwtl
out
movsb
push
jecxz
out
inc
aas
scas
stos
pop
lods
les
sbb
dec
sbb
inc
mov
mov
jp
fsub
jne
outsb
mov
push
jns
scas
mov
clc
pop
or
dec
cld
dec
ds
jne
adc
ljmp
inc
insb
push
mov
inc
lret
std
stos
pop
repz
js
int
rcrb
pushf
std
out
sbb
push
cmp
mov
lcall
mov
nop
adc
out
out
mov
filds
push
cmpsl
std
push
sbb
fwait
aaa
lret
add
add
pusha
cmpsb
mov
dec
jge
fcoml
fs
and
push
mov
lods
dec
jle
lea
imul
sbb
imul
imul
pop
xchg
xchg
dec
push
int
shlb
add
dec
mov
bound
in
jb
lods
jno
mov
mov
xor
in
stc
mov
xorb
mov
mov
in
pop
in
sub
xchg
jg
cli
cmpsl
cmp
lea
pop
jp
push
repnz
push
insl
repnz
sbb
mov
mov
or
add
pop
mov
mov
and
test
scas
push
mov
cwtl
cmp
lahf
cld
mov
sub
enter
fnstcw
scas
aas
bswap
ss
lcall
mov
pushf
das
pop
xor
outsl
je
cmp
int
les
mov
stos
arpl
insl
pop
pmovmskb
and
push
ds
out
xchg
mov
mov
add
repz
sub
cmp
fdivl
rcrl
mov
add
rcrl
movsb
stc
adc
mov
push
lcall
inc
sub
cmpsl
std
gs
and
adc
or
dec
jae
sarb
stc
jo
fnstcw
and
ret
stc
push
stos
pusha
mov
lret
dec
mov
sbb
mov
lahf
mov
rol
mov
ja
fildl
mov
lret
repnz
add
or
and
pop
filds
mov
mov
mov
addr16
lret
out
sahf
pop
push
sub
cmpl
xchg
cmpsb
in
pop
ds
xor
pop
test
xchg
enter
roll
pop
icebp
psrlq
gs
insl
or
mov
sub
xchg
pop
or
dec
push
sub
cmp
int
xorb
adc
and
adc
jns
mov
aas
add
aas
pop
gs
xor
ret
xchg
xor
outsb
xchg
cmpb
imul
push
sbb
mov
dec
fisubrl
pop
mov
pop
mov
sub
addr16
or
jne,pt
je
int3
mov
in
dec
xorl
add
fimuls
subb
out
add
push
xor
push
loop
jle
and
adc
in
lea
mov
add
pop
es
xor
aad
push
xor
push
popf
loopne
mov
adc
lock
popf
jbe
xchg
sbb
jmp
mov
cmp
sub
sub
sbbb
mov
test
je
rorl
push
sub
dec
jle
xor
and
fwait
pop
in
cmp
iret
or
adc
inc
jmp
mov
dec
adc
jbe
adc
and
adc
loope
jo
lcall
lret
out
lcall
adc
or
je
push
fdiv
mov
clc
dec
pushf
lods
loop
loopne
pop
ja
lret
repz
outsl
sub
pop
mov
adc
ss
pop
and
sub
out
pop
ds
cs
shrb
jle
in
es
daa
scas
sbb
lock
lcall
mov
pop
xchg
hlt
cltd
sub
sbb
popf
xor
push
test
xchg
mov
xchg
orl
mov
mov
fists
in
sarb
enter
xor
lret
nop
lret
jmp
push
clc
dec
cltd
dec
xchg
ss
mov
push
call
fwait
aam
in
xchg
or
sub
insb
cmp
out
add
pop
lret
test
adc
pop
dec
or
dec
cltd
adcb
push
js
into
fwait
mull
lock
outsl
adc
mov
adc
dec
frstor
int
jns
loop
ror
mov
sub
cmp
clc
adc
in
push
lds
ljmp
or
es
jecxz
lret
iret
bound
pop
cs
aam
inc
add
jge
fisttpl
das
bound
dec
loopne
jp
sbb
nop
mov
xchg
mov
or
xor
lret
mov
dec
orl
imull
xchg
mov
push
pop
lods
ror
add
out
add
call
add
push
add
dec
js
adc
cmp
add
subl
shr
imul
mov
fisttps
mov
xchg
or
sub
fucomi
fwait
rcr
and
psrlw
nop
arpl
adc
fildll
dec
jmp
std
data16
push
adc
lods
imul
mov
jmp
movsb
andnps
flds
push
add
xor
push
xchg
xchg
outsl
xor
cmpsl
scas
push
jmp
push
out
pushf
add
js,pt
jmp
xchg
bts
pop
mov
imull
movsl
and
lret
and
pop
les
inc
pop
daa
lea
into
or
stos
dec
cltd
adc
add
xchg
scas
fsubl
or
jmp
jge
xchg
lods
out
sahf
movsb
sbb
push
fbld
shll
dec
js
xchg
cmpsb
sub
std
popa
or
sub
dec
lods
xchg
imulb
adc
and
ss
and
xor
or
jo
push
add
dec
sub
sub
shlb
cli
aad
in
call
rolb
lods
jecxz
xor
arpl
divl
outsb
xlat
pop
cmp
xchg
daa
rorl
divl
lods
xor
in
and
inc
dec
push
jp
fimuls
mov
pop
scas
adc
push
mov
pop
call
and
add
mov
icebp
add
push
dec
lret
pushf
push
daa
arpl
fwait
testl
sbb
in
and
orl
inc
cmp
es
jp
into
jno
lcall
inc
dec
jg
sbb
dec
mov
mov
jns
aaa
push
fdivrs
pop
mov
aaa
mulb
sbb
xchg
mov
in
shrb
or
xor
and
or
sub
outsb
sbb
add
xchg
and
mov
out
add
mov
sbb
pop
and
iret
aam
mov
add
mov
add
mov
xchg
inc
mov
imulb
dec
call
mov
pop
adc
inc
outsl
dec
sub
cmp
mov
jg
jmp
sbbl
push
call
fwait
aam
mov
xchg
cmp
shll
cs
or
pop
and
scas
jl
pandn
cwtl
lods
dec
add
dec
iret
outsl
test
movl
icebp
fsubrs
sahf
jp
push
faddl
xor
inc
mov
out
in
dec
xor
sbb
movsb
push
dec
sub
jne
mov
ror
sti
cmc
into
pop
call
push
pushf
movsb
test
adc
ljmp
fucomip
or
push
ret
sti
inc
cmp
adc
or
imul
movsl
insl
or
cs
int3
xchg
arpl
lret
dec
out
sub
cmp
imul
sahf
out
jg
and
call
out
stos
aam
in
xchg
or
sub
outsb
sbbl
lea
rorl
call
fistl
std
adc
cltd
sub
orl
sub
rcll
arpl
dec
or
data16
xchg
sub
sbb
je
es
arpl
pop
outsb
xchg
sbb
mov
cmp
movsl
dec
push
cltd
push
xchg
cld
popf
sub
std
add
sbb
cltd
and
jae
push
push
jno
add
jmp
incl
cmp
movsl
bound
lret
pusha
js
ret
xor
cltd
pusha
push
jp
push
and
push
orb
and
mov
jne
sarl
ds
stos
stos
jb
sub
mov
fs
add
dec
popf
rcrb
jecxz
jb
jmp
push
dec
dec
push
cmp
inc
aad
mov
sysret
maskmovq
negl
mov
dec
dec
push
jmp
adc
push
dec
or
je
ljmp
inc
fstpt
add
sub
call
cld
fisttpll
mov
jb
inc
push
or
xchg
outsb
pop
mov
imull
or
jmp
jno
enter
aaa
notb
adc
dec
inc
std
sbb
cmp
or
sbb
jne
mulb
dec
push
icebp
push
mov
xor
xlat
sti
push
imul
icebp
pop
loopne
dec
ret
fbld
mov
inc
jmp
inc
popa
sbb
dec
in
adc
es
lods
sbb
or
sbb
into
ss
inc
mov
dec
jl
stos
mov
mov
loope
adc
cmp
push
add
or
cmc
into
test
ja
add
outsl
call
mov
cmp
cld
gs
xlat
in
test
daa
push
and
push
or
std
xorb
out
lahf
sub
jmp
out
jp
inc
mov
rol
pop
ret
sbb
stos
lcall
dec
xor
lret
rolb
lret
add
inc
mov
lret
push
and
xlat
sbb
push
push
loopne
fstp
mov
inc
or
ss
mov
add
and
cmp
enter
and
adc
add
push
loope
inc
fidivl
in
mov
jl
lock
dec
negl
iret
in
into
push
xchg
divb
psrld
fsubrp
mov
sub
inc
in
dec
sbb
push
pop
and
mov
loope
lds
aas
pop
hlt
push
dec
jp
jns
insb
adc
mov
sub
inc
xchg
add
push
dec
pop
outsl
enter
xor
xchg
jnp
fstpl
ljmp
pop
push
cmp
xchg
nop
push
lea
loopne
dec
loope
in
std
mov
aas
jno
push
stos
or
das
pop
popf
addr16
mov
push
xchg
inc
mov
repnz
clc
mov
jmp
adcb
mov
rclb
add
lahf
pop
dec
enter
lret
mov
or
dec
outsl
rorb
test
mov
add
shlb
xchg
push
push
add
dec
and
iret
mov
add
lret
push
sub
jge
outsl
lea
sub
sbb
xchg
pusha
iret
out
mov
and
icebp
push
or
pop
imulb
rorl
mov
std
or
sub
push
jns
jp
sub
pop
sbb
mov
sbb
push
add
add
jecxz
rcrb
jle
xchg
pop
or
add
push
pop
lret
cltd
je
push
push
mov
xor
mov
incb
adc
dec
jns
cmp
pusha
mov
push
dec
dec
fs
adc
fmul
push
dec
andb
sub
mov
scas
push
ficoml
aam
push
push
rol
into
inc
das
daa
arpl
loope
outsb
inc
sub
addr16
std
push
insb
and
mov
adc
cmc
repnz
push
int
stos
adc
fcoms
ror
push
ret
push
mov
leave
fs
or
push
pop
mov
dec
cwtl
sub
fs
push
mov
adc
push
fdivrp
xchg
mov
fsubrs
jne
aas
or
out
mov
fisubs
mov
add
lret
and
sub
cmp
loope
push
sarl
icebp
jno
mov
push
lock
inc
dec
or
adc
cmp
cmpb
adc
cltd
jp
sub
pop
xor
jle
lret
and
ret
mov
or
js
add
mov
popa
out
out
dec
adc
aas
ja
ja
cmp
ss
clc
xor
ljmp
add
and
sbbl
ss
push
in
cmp
cmp
pop
xor
and
inc
movl
in
ret
insb
rolb
lds
rorb
jbe
sub
aad
lea
imul
jo
or
sar
xor
in
mov
jmp
leave
ja
jbe
dec
pushw
fldcw
xor
scas
dec
xlat
jp
push
add
xor
xor
and
dec
test
jge
notl
and
insl
ja
pop
fistl
iret
shl
enter
dec
cmp
hlt
rcr
cld
cmpsl
sub
jmp
orb
jnp
sbb
arpl
xchg
jmp
dec
in
push
loope
or
iret
insl
dec
std
lahf
push
inc
addr16
add
aas
adcb
scas
es
lret
and
push
js
cs
shlb
add
pop
imul
adc
repz
xor
pop
jne
inc
xlat
icebp
in
test
testl
jno
testl
rcrl
mov
rcrb
adc
xchg
pop
mov
adc
ficompl
pop
stos
leave
xchg
push
cmpsb
iret
cmc
sti
es
in
enter
pop
xchg
ss
and
push
jle
inc
mov
imul
incb
les
aas
push
hlt
sbb
in
mov
repz
inc
xor
xorl
out
daa
mov
and
jg
in
mov
ret
dec
hlt
jnp
rolb
daa
and
out
shrb
imul
daa
lods
add
add
out
imul
sub
mov
scas
fidivs
pop
adc
push
pop
jno
addr16
mov
mov
mov
sub
cmp
and
mov
mov
dec
push
sbb
rclb
push
std
sub
cmc
add
cmp
jnp
idiv
dec
or
xchg
js
clc
sub
mov
mov
div
out
popf
in
pop
xchg
pop
lods
out
repnz
aam
sti
push
std
mov
in
sub
push
xchg
xchg
repz
imul
mov
mov
or
je
push
cltd
sub
jle
cmc
sbb
push
pop
push
outsb
add
fisubs
roll
push
lods
fisubl
adc
push
or
add
mov
icebp
cwtl
inc
ja
mov
movsb
adc
jle
mov
xchg
or
sahf
hlt
imul
mov
and
shr
in
in
call
adc
mov
lcall
push
cmp
in
imulb
fldenv
cmp
sub
jle
ja
push
cltd
dec
notl
inc
test
dec
mov
out
xchg
scas
andb
cmp
loop
nop
mov
rolb
cmpsl
andl
outsb
jl
call
xchg
xchg
or
jnp
mov
pop
sar
mov
adc
cwtl
mov
pop
insl
sarb
les
push
test
cmc
enter
pop
in
mov
test
lcall
lret
jmp
mov
les
mov
xchg
shll
mov
insb
imul
call
in
adc
fcmovnbe
enter
cmp
sbb
jb
pop
cld
and
push
ss
xor
adc
dec
dec
cltd
jmp
or
dec
sub
dec
stc
lahf
loope
lds
repnz
jb
mov
insb
pushf
and
in
scas
inc
mov
jnp
pop
shr
mov
dec
jno
es
push
mov
icebp
mov
adc
out
cmp
jne
jg
sub
add
mov
add
mov
cmp
cmp
mov
aam
add
dec
push
outsl
arpl
shrl
sub
call
ret
xchg
cli
or
js
addb
leave
icebp
aaa
cld
roll
or
push
das
mov
mov
nop
and
cmpsb
cmp
pop
mov
jbe
clc
adc
push
push
dec
int3
cmp
mov
dec
cwtl
and
bnd
pop
jns
ljmp
dec
and
aam
xchg
lret
test
sarb
cmpsb
ds
mov
lods
call
fwait
cmp
jle
cmp
or
pop
out
mov
mov
sahf
xchg
cmp
jnp
clc
fisttpll
cwtl
dec
lahf
in
push
rolb
inc
sub
xor
call
xor
in
jp
cmp
or
mov
sbbl
fcoml
je
lahf
nop
frstpm(287
dec
out
sbb
insl
push
jns
fiadds
xchg
icebp
mov
mov
xor
roll
add
jge
jb
lods
mov
jmp
mov
das
xlat
fsubrs
sbb
hlt
sarl
xor
cmp
mov
pop
or
das
sbb
fucom
lret
repnz
outsl
jbe
jmp
and
out
fpatan
jmp
push
jo
bswap
into
or
mov
scas
scas
adc
mov
and
mov
out
xchg
push
insl
adc
mov
pop
xor
cltd
and
push
and
call
sub
or
fstps
adcl
lcall
inc
cs
mov
xor
popf
std
xchg
leave
fidivrs
mov
icebp
ds
mov
cmpsb
push
lea
leave
dec
insl
clc
les
fnstcw
add
xchg
mov
cmp
mov
jg
daa
outsb
shll
xor
cmp
stos
sbb
fs
xchg
and
lahf
push
test
ja
pushf
cld
mov
call
inc
dec
adc
inc
sbb
fisttpl
fcomi
adc
mov
mov
mov
sbb
inc
out
mov
cmc
shll
call
out
int3
xchg
lods
test
scas
inc
outsb
sahf
lret
mov
jge
mov
adc
xchg
xor
sbb
pop
xchg
fsub
add
js
mov
fs
cmp
sbb
fisttps
loope
adcl
leave
dec
jmp
and
jmp
sbb
lods
jl
or
sarb
mov
mov
imul
int3
mov
nop
sub
test
push
sbb
lods
mov
or
xchg
cmp
out
adc
sbb
inc
sub
jge
loop
imul
add
loop
push
cmp
cwtl
in
dec
cld
icebp
push
mov
test
cmp
shr
inc
leave
arpl
data16
daa
dec
dec
dec
mov
pushf
out
test
daa
pusha
lods
push
sbb
mov
rolb
sahf
fmull
enter
mov
hlt
or
xchg
jp
push
jae
aad
popa
out
jmp
daa
shll
add
push
popl
xchg
inc
je
mov
iret
fildll
nop
inc
sub
ds
pop
inc
nop
jne
je
mov
loopne
pushf
cmp
out
inc
or
cmpb
popa
idivb
std
push
add
mov
lods
mov
jno
lods
aas
or
lcall
pop
or
inc
xor
sub
pop
int3
sbb
sub
add
insb
mov
mov
mov
xchg
xor
lahf
jno
or
add
mov
or
sub
pop
and
stos
mov
sub
ja
aad
movups
rolb
iret
dec
call
mov
test
lods
pop
sarb
aad
call
add
movsb
insl
leave
mov
jb
out
pop
sub
mov
rcr
shrb
mov
jnp
cwtl
je
mov
movsl
lahf
pop
cs
xor
shlb
xor
sbb
xchg
sub
ss
ucomiss
mov
xchg
shl
lea
stos
hlt
jne
jbe
sbb
push
mov
jne
fisttpl
push
sub
in
jg
dec
in
loope
or
gs
call
push
shll
popf
idivb
push
out
ret
clc
movw
mov
xlat
mov
inc
mov
sbb
pushf
mov
jmp
mov
push
imul
fcmovbe
call
and
out
jp
iret
movsb
mov
mov
inc
xchg
cmp
jno
mov
ret
push
fsts
cli
mov
ss
fsubl
mov
mov
add
push
mov
js
int3
out
sub
incl
lahf
push
insb
sub
inc
xchg
xor
and
jo
insb
adc
cmp
cwtl
lods
push
adc
fwait
int3
pop
fwait
dec
shlb
test
bnd
cmp
aad
adc
dec
cmc
dec
lds
cs
lods
mov
sub
nop
lock
lods
lret
cmp
push
iret
sub
subb
dec
dec
cwtl
mov
int3
jne
dec
in
mov
movsb
jl
add
add
ss
xorl
inc
dec
pop
inc
or
je
daa
cmp
out
adc
leave
sarb
bound
nop
cmp
lret
addr16
inc
out
in
push
sub
pop
loop
mov
push
lcall
sub
mov
or
mov
push
int3
stc
ret
xchg
sub
imul
adc
mov
jo
psllq
aas
dec
fucomip
repnz
add
mov
and
insb
push
jae
aam
int3
jne
push
jb
je
jp
int3
rep
je
xor
lahf
cld
sbbb
addr16
outsb
push
sbb
test
mov
imul
shlb
shll
mov
jmp
add
je
test
int
sbb
lock
xchg
and
mov
cmp
pop
mov
sub
cmp
insb
movsl
adc
mov
out
inc
mov
push
out
dec
sarb
scas
sub
ja
orb
insb
inc
cmpsl
push
iret
dec
xlat
xor
ret
shl
dec
pop
dec
dec
jns
cmp
int
pop
outsl
inc
dec
call
movzbl
mov
mov
idiv
dec
pop
add
sub
lock
addl
mov
mov
dec
add
inc
lcall
int3
adc
test
cmp
pop
out
mov
add
mov
jmp
testl
mov
and
mov
imul
test
mov
mov
notl
pop
jb
ficompl
in
jns
xchg
adc
adc
mov
popf
push
rcr
push
call
fadd
lock
dec
iret
sub
inc
xor
fcompl
out
add
mov
arpl
imul
pop
sub
and
mov
iret
enter
clc
jle
inc
pop
lods
jg
mov
jmp
jns
and
mov
neg
xchg
pop
or
andps
ret
clc
mov
xchg
push
pop
outsl
sbb
aad
mov
inc
adc
or
pop
in
movsb
or
cmc
cli
dec
lock
adc
push
mulb
xchg
mov
mov
jmp
push
xchg
jb
sub
pop
das
in
adc
xchg
or
push
pop
or
and
add
gs
or
dec
out
pop
inc
sub
das
test
push
je
rcrl
popa
shll
sub
push
fimuls
sub
inc
das
push
aad
clc
pushf
jecxz
enter
std
mov
adc
ret
inc
out
aam
jns
push
add
shll
and
out
mov
inc
pop
popf
pop
xorb
sub
pop
jecxz
iret
call
fildll
int3
jbe
and
adc
add
outsb
push
shll
call
test
addr16
test
or
insl
hlt
mov
push
outsl
leave
or
pop
shlb
lods
add
inc
inc
cmp
outsb
stc
sub
or
sub
outsb
jl
hlt
shl
push
cmc
pop
out
lea
out
cmp
cmp
insb
inc
sub
cmp
fnstcw
out
sub
sub
jl
add
out
push
jno
push
aam
push
add
call
xor
jg
lea
pushf
add
fldl
out
jecxz
or
hlt
daa
movsb
push
iret
jmp
dec
add
add
jl
cmp
call
popf
and
sub
cmc
arpl
in
push
iret
idivl
pop
mov
rorl
jns
sbb
adc
mov
dec
fcomip
sbb
dec
jno
gs
mov
sub
stos
mov
mov
xor
test
shlb
push
adc
orl
shll
fxch
clc
testl
nop
ss
sti
and
aaa
loopne
lea
mov
cmp
or
jae
ss
std
fcmovbe
filds
jae
out
cmp
mov
inc
iret
test
xchg
xlat
pop
divb
fnstenv
dec
ljmp
int
orb
icebp
loope
in
push
in
push
shll
shr
push
mov
stos
cli
orb
into
pop
lods
jg
jmp
or
sbbb
loopne
out
mov
lcall
repnz
outsl
xchg
xchg
push
pop
cmpsl
inc
stos
push
orps
inc
xchg
fistps
inc
pop
ret
insb
xchg
mov
inc
cwtl
xlat
rolb
popf
jp
sahf
scas
sub
insl
iret
clc
loop
pop
dec
loope
adc
and
mov
fstps
cld
xchg
xor
and
inc
and
shl
das
fsubrl
and
out
nop
jnp
rorb
insb
js
xor
mov
cmp
mov
sti
cmp
add
push
test
sbb
movsb
mov
rolb
lea
add
outsb
sub
cmpsl
and
data16
dec
xchg
mov
push
insl
out
jle
aas
lock
dec
cmpsl
mov
fsubrs
cmp
push
push
out
cmc
ss
adc
sub
and
lret
mov
pop
out
lock
cmp
lret
hlt
dec
inc
jnp
rolb
mov
in
testl
into
sbb
and
gs
stos
call
fdivl
adc
cmpl
add
jno
adc
in
sub
adc
lret
xor
mov
bound
nop
pushf
xlat
call
pop
mov
push
sub
cmp
stos
add
push
dec
test
jno
js
jl
insb
jns
mov
mov
dec
mov
or
add
adc
mov
adc
xor
das
in
imul
lock
ret
or
addr16
test
cld
popa
add
int
mov
stos
mov
repnz
lret
in
repz
pop
insb
lcall
test
int
dec
pushfw
movsb
into
jle
rolb
or
mov
sbb
loop
pusha
sbb
inc
add
test
add
and
out
sbb
sbb
out
xor
ljmp
and
push
jle
sbb
filds
out
push
cmp
out
rorb
dec
fcoms
arpl
js
sub
es
mov
jmp
adc
sub
or
aaa
hlt
test
daa
add
mov
jp
mov
xchg
je
repnz
xchg
mov
sbb
cmp
mov
fiadds
pusha
stc
lahf
loope
sbb
jo
mov
mov
mov
outsl
sbb
and
sbb
xor
scas
fidivrl
sbb
pop
mov
ds
insl
repz
stos
adc
xchg
lock
add
inc
fldcw
or
mov
pop
mov
inc
push
mov
jg
inc
es
lock
cwtl
das
xlat
ds
addr16
push
outsb
lret
cmpsb
lret
les
in
bound
pop
push
and
or
or
jno
lock
or
cmpsl
jge
dec
pop
je
sbb
xchg
pop
push
mov
push
or
adc
sar
push
jo
loopne
aad
add
scas
add
add
mov
dec
shlb
pop
sarb
jne
lods
jmp
push
sub
mov
into
int3
lret
mov
adc
gs
fstl
push
mov
adc
movsl
fimull
ljmp
push
cli
xor
loop
jl
and
push
and
dec
into
pop
mov
sub
push
mov
fsubrp
loop
pop
dec
in
mov
push
test
out
insb
sbb
jecxz
lret
lea
pop
mov
or
js
in
pop
aaa
dec
clc
test
dec
sbb
daa
sti
push
add
fxch
adc
iret
scas
push
rep
lcall
or
fistpl
cmp
xor
add
cmp
mov
sbb
cmp
mov
and
dec
cld
xchg
stos
das
icebp
inc
mov
rorl
inc
xor
push
push
sub
xor
xchg
loope,pt
out
xchg
negb
enter
fcoms
mov
xchg
shrb
ss
shlb
push
andb
inc
cmp
aas
in
xor
mov
insb
push
mov
cmp
std
pop
mov
out
fiaddl
add
dec
sbb
jno
xchg
adcb
pop
movsl
andb
shrl
push
and
lods
inc
sub
sarb
out
jae
and
dec
in
jge
fmul
push
sub
notl
scas
gs
jmp
jae
addl
xchg
push
mov
sbb
jp
push
nop
mov
cld
inc
pop
mov
add
pop
mov
out
int
mov
sub
add
dec
xchg
adc
dec
and
cld
inc
sub
mov
subl
arpl
mov
leave
sbb
xor
cmpsl
add
les
pop
sbb
imul
fistl
xchg
neg
outsl
dec
and
push
jo
xlat
cmpsl
add
sub
jge
adc
push
mov
ret
jno
mov
test
fdivs
pop
or
stos
push
cmp
pop
clc
push
lods
or
xor
or
jns
xor
imul
cli
xor
aam
dec
int3
mov
jle
loopne
mov
movsl
xchg
inc
pop
mov
push
add
jp
mov
or
adc
sbb
fcoml
pop
and
in
repnz
icebp
nopl
ret
push
adc
rcr
mov
and
adc
in
int3
nop
std
stos
push
xor
adc
push
test
test
cmpsl
in
or
out
fcompl
push
push
push
js
loope
xlat
in
sub
push
sarb
sub
adc
dec
test
mov
cmc
sbb
in
xor
jl
push
and
fbstp
lcall
jns
inc
test
in
push
pop
adc
jb
adc
out
ret
out
push
decl
xchg
je
cltd
loop
shrl
mov
in
cmpsb
shll
pushf
icebp
xchg
sbb
addb
xor
pop
mov
or
and
jecxz
or
rorb
add
cmp
cwtl
outsb
shr
enter
adc
ljmp
xor
pop
or
pop
inc
cmc
iretw
imul
fstl
sar
or
cmp
rol
pop
cmc
cmpsb
lods
pop
or
pop
adc
loope
xor
pop
outsb
push
pop
lds
int
inc
inc
or
mov
jmp
push
jp
ds
inc
mov
scas
fstpt
jmp
in
xchg
adc
or
pop
cmp
mov
movsb
into
inc
mov
test
test
popa
pop
out
inc
ss
pusha
mov
mov
pop
adc
pop
dec
ror
inc
imul
cmpsb
xor
testl
lahf
test
sub
fsubs
rcrb
in
popl
mov
sbb
shlb
fcomp
sbb
std
lcall
mov
inc
push
add
inc
test
hlt
es
movsb
jo
jle
dec
push
arpl
into
rolb
dec
loopne
jmp
or
mov
fistl
add
cld
push
ficoml
aad
push
push
jnp
add
sbb
jmp
sub
ror
scas
ljmp
pusha
sub
xor
mov
addr16
jmp
add
jp
repnz
sbb
mul
iret
sti
add
and
int3
xor
scas
ds
imul
addr16
sbb
add
in
push
stc
add
push
and
sti
push
add
in
aas
sbb
scas
fsubrp
mov
sarl
ljmp
loopne
jo
cwtl
mov
mov
mov
sarl
loopne
sub
and
sbb
aaa
sub
hlt
and
or
jnp
daa
fwait
xchg
jge
cmp
adc
adc
repz
pop
shr
jo
daa
inc
jge
xor
pop
filds
mov
push
inc
aad
xchg
rorb
inc
stc
sar
dec
xchg
push
add
sbb
jae
or
or
outsl
mov
xor
mov
mov
popf
mov
fsubl
lret
add
ret
outsl
xor
cmc
fwait
xor
pop
movsb
jb
xchg
xchg
pop
sub
xor
dec
std
inc
cmpsb
sbb
jmp
call
adc
lret
aam
dec
inc
in
call
idivb
cmp
test
daa
pusha
repnz
cs
cmc
dec
jo
dec
rcl
aas
cmp
rorb
loope
cmpsl
les
push
not
aas
push
xchg
adc
sbb
fdiv
repnz
decl
cmpsb
xlat
add
lcall
mov
mov
and
leave
jno
stos
call
or
gs
jmp
rclb
lret
or
add
rcrl
decb
ljmp
xsavec
push
inc
repnz
dec
adc
pop
cli
lcall
add
push
add
fadd
jno
shrb
nop
or
in
fsubrs
test
xor
arpl
push
lret
and
cltd
test
xchg
mov
mov
pusha
fwait
out
mov
dec
fcomip
mov
hlt
dec
js
test
jp
aaa
push
test
jne
xchg
cmp
sub
fisubl
adc
mov
ds
adc
jle
cltd
adc
aas
jle
scas
aas
add
pop
fnstcw
das
loope
cmp
jbe,pt
pusha
sbbl
push
into
pop
mov
iret
out
arpl
hlt
je
rorb
push
js
sub
shl
dec
fmull
xchg
ret
rclb
rcrl
jbe
ret
adcb
mov
lcall
ret
inc
add
jecxz
popf
ret
cld
iret
test
xchg
dec
sbb
daa
mov
aad
sbb
sbb
aas
icebp
mov
sub
les
popf
cld
sub
ds
ror
or
cmc
fimull
fildl
scas
mov
call
sub
mov
in
out
sub
dec
add
fbstp
push
pop
mov
iret
push
pop
aas
pop
not
dec
add
mov
dec
rcl
mov
push
call
stos
mov
repz
neg
dec
hlt
push
lret
push
mov
aas
cmp
leave
cmpsl
sbb
inc
roll
pop
xchg
shld
push
push
icebp
sbb
dec
hlt
out
int
aam
shrl
sbb
xor
fsubrs
inc
out
mull
cmc
ds
adc
cmp
jb
mov
or
das
testl
dec
and
fadds
push
dec
shrd
iret
idivl
iret
xchg
lock
xchg
in
outsb
out
stos
mov
out
add
push
pop
dec
imul
cmpsb
xorl
dec
sti
scas
lods
mov
ljmp
stos
mov
ficomps
pop
cmp
xorl
call
push
xlat
pop
insb
push
mov
cs
ss
cmp
repz
and
iret
mov
fnsave
sbb
mov
iret
pushf
pop
int
xor
int3
or
scas
jl
sub
xlat
sti
pop
loope
push
in
rorb
nop
sub
mov
jns
or
jmp
jmp
adc
movsb
fstl
lcall
push
enter
les
lods
add
add
cmp
into
dec
ljmp
loope
icebp
jp
loop
lret
xchg
or
sub
lahf
pop
xor
arpl
jb
into
jne
sub
dec
jae
xchg
test
and
mov
mov
pusha
rolb
jg
shlb
push
fimuls
fiaddl
add
mov
push
dec
mov
jp
xor
insl
cli
in
out
jbe
inc
pusha
inc
sbb
lret
scas
lock
inc
jg
cmpb
add
fxch
neg
insb
inc
xchg
mov
adc
stc
inc
in
cltd
inc
pop
or
inc
push
fst
pop
jle
jmp
xor
push
adc
loope
cmp
xor
mov
inc
mov
jno
iret
ret
lock
enter
pop
and
cmp
in
hlt
test
arpl
push
in
cmp
pop
fisubrs
dec
pop
add
dec
or
push
jo
sbb
shll
push
test
sub
xchg
push
fsubs
loopne
leave
test
ds
out
cmp
adc
ss
lahf
notl
push
or
jmp
adc
std
enter
fildll
jae
in
xor
push
mov
sbb
and
addr16
pop
xor
fwait
mov
insb
mov
ds
cltd
sbb
jae
add
out
fstl
cmp
orb
mov
dec
and
and
jnp
inc
jne
sbb
push
setge
mov
mov
orb
xlat
rcll
mov
popf
xchg
int
push
stos
mov
dec
mov
jle
mov
cmp
hlt
xor
push
adc
out
lret
dec
adc
and
and
add
cmp
shr
or
int
mov
ficoms
scas
js
cmp
add
or
lea
mov
mov
fidivl
out
or
lods
xchg
sub
icebp
fiadds
add
arpl
aam
cmp
xorl
mov
repnz
mov
push
and
mov
int3
xchg
daa
cmp
adc
inc
test
loope
arpl
pop
xchg
loope
bound
sub
pop
or
pop
adc
xor
cmp
sbb
cmp
cmp
inc
cmp
out
lock
ds
xchg
jmp
mov
fnsave
imul
pushf
mov
lock
xor
dec
mov
int3
mov
jae
popf
pop
dec
mov
testl
mov
inc
jae
add
lods
cmp
insb
mov
and
lea
xchg
and
mov
or
pop
shl
fdiv
outsl
imul
pushf
jmp
ds
cmc
xchg
pop
push
push
jge
and
inc
xchg
and
or
sbb
push
shlb
bound
and
lods
xchg
xchg
pop
nop
jle
cs
scas
jbe
rcl
push
stos
std
and
int
xchg
xchg
push
icebp
out
inc
sahf
cltd
lods
addl
shll
xchg
ja
rcl
sbb
shrb
cmpsl
test
sbb
lods
cmp
rcrb
jbe
sbb
addr16
movsl
fmull
outsl
push
sbb
rcll
mov
outsb
dec
mov
rorb
scas
push
push
rep
lods
adc
insl
adc
mov
cmp
out
addr16
dec
dec
xor
scas
jne
jmp
add
aam
mov
mov
and
push
mov
popf
jp
sub
shlb
add
or
adc
nop
push
mov
push
jnp
roll
inc
daa
mov
loope
pop
cmp
aas
mov
mov
daa
jl
sbb
test
jp
jle
lods
sub
xor
and
pop
repz
das
xor
push
int
cli
dec
dec
or
xchg
jge
push
add
test
xchg
js
imul
test
in
test
dec
int3
jmp
adc
cmpsb
es
mov
inc
lods
mov
outsl
mov
inc
in
add
aad
dec
fwait
jecxz
xchg
mov
lods
cmp
mov
out
imul
xchg
xchg
ss
pop
jmp
jl
and
adc
fs
jmp
stc
lods
loope
sub
sbb
add
mov
mov
xlat
and
fdivrl
lds
scas
cmp
mov
jg
xor
faddl
add
dec
cmc
sahf
pop
aam
and
cmp
shlb
outsb
rcrb
lods
ds
aas
or
fldl
repz
and
jbe
call
jno
jg
cli
lret
aad
ds
out
lcall
pop
inc
std
std
sti
cld
xchg
loope
cmp
clc
stc
lahf
xchg
push
mov
data16
in
aas
xchg
out
test
call
push
int
mov
movsl
push
mov
push
push
fldz
or
aas
sbb
cwtl
popa
lock
in
aam
xchg
punpcklwd
hlt
movsb
mov
mov
inc
clc
jmp
sbb
out
adc
inc
dec
push
jo
outsl
push
inc
sbb
mov
scas
es
insl
or
push
call
xor
and
int
mov
inc
in
and
cld
ret
iret
and
popa
ret
inc
jp
cmp
repnz
in
jnp
and
insb
and
sbb
test
orb
pop
aaa
rorb
imul
dec
popa
mov
icebp
inc
inc
cmp
int
fadds
push
mov
jnp
jmp
fidivs
xor
lret
add
call
xchg
cmpsb
cmp
dec
in
or
xchg
sub
pop
pop
mov
jg
cmp
lods
in
sbb
mov
imulb
je
sbb
aas
divl
pop
inc
xor
dec
push
and
xor
pop
and
xchg
sub
ret
imul
push
test
jecxz
fs
aam
incl
ret
or
add
in
je
add
jns
test
add
dec
and
repnz
cmp
adc
leave
test
cmc
cmp
frstor
pop
aam
pop
dec
jmp
rcl
sub
rcll
fldl
cltd
pusha
jno
mov
pop
mov
faddl
pop
filds
pop
sbb
nop
popf
push
imul
xor
dec
mov
push
leave
arpl
iret
es
mov
add
repz
sbb
ret
pop
lock
xor
test
js
mov
icebp
cmp
imul
and
int
outsb
aaa
add
fsubr
fnsave
fbld
je
arpl
cmp
js
push
mov
jo
and
daa
pop
dec
dec
in
dec
inc
xor
adc
stc
outsb
xor
ljmp
dec
test
shrb
adc
movsl
addl
cwtl
or
fcomps
push
enter
xchg
cmpl
and
sub
negb
andl
imull
jg
aam
gs
int3
sub
dec
pop
or
mov
test
and
addb
sbb
dec
dec
pop
inc
add
test
xor
push
xor
les
xchg
into
mov
ds
sub
mov
push
push
ja
xor
or
inc
rcrb
iret
jbe
jae
jae
and
lea
cmp
sbb
push
outsl
mov
sub
or
mov
pop
jnp
cmp
mov
push
notl
mov
data16
aam
or
sub
lock
mov
or
and
sti
daa
mov
mov
std
push
pop
jmp
test
push
call
jp
jl
data16
mov
push
shrb
test
pop
xorl
ret
mov
ficompl
sub
adc
out
gs
lods
inc
stos
aaa
jmp
test
jg
or
cmp
jmp
pop
ljmp
ss
inc
sbb
xor
andb
cli
sub
push
jmp
fldenv
and
add
flds
pop
in
push
cmp
movsl
push
or
push
cbtw
out
ret
inc
int
loop
xchg
out
push
ficompl
inc
mov
mov
imul
imul
dec
jl
add
sbb
mov
frstor
sub
shll
cmp
or
adc
or
and
pop
lock
imul
jg,pt
push
sbb
push
out
sub
xchg
sub
mov
insl
fistpl
and
es
mov
rcrb
jnp
and
pop
sarb
arpl
push
int3
imull
push
dec
int3
lods
and
jmp
jne
dec
or
les
into
stos
lea
mov
in
adc
and
adc
pop
scas
jmp
xor
push
loopne
and
aam
pop
sub
xlat
cmpb
arpl
xor
clc
push
insb
and
mov
in
call
mov
in
test
jns
fs
movsl
int
and
sarb
push
sbb
jmp
sbb
out
mov
pop
sti
push
mov
nop
lret
cwtl
pop
push
dec
adc
aam
mov
scas
jmp
fcmovne
pop
fs
into
daa
cmc
mov
ss
std
dec
call
cli
push
cmpsb
push
add
cmp
cmp
xchg
fwait
insb
push
test
add
and
std
psubd
es
rcl
add
rolb
jns
ficomps
dec
push
pop
dec
setnp
add
iret
popf
cli
iret
push
popf
imul
push
outsb
pop
push
sub
ret
or
lods
nop
and
aaa
cwtl
fldt
sub
or
stos
push
xchg
sbbl
enter
sahf
push
jb
addr16
pop
je
es
push
push
into
push
imull
imul
pop
repnz
int
test
scas
pop
push
mov
insb
and
aad
cmpsb
loopne
insb
lods
subl
in
ja
xor
nop
jb
test
sub
jnp
sbb
pop
aam
mov
hlt
movsb
into
adc
in
cmpsb
out
xchg
push
mov
repnz
popa
sub
sahf
adc
dec
pusha
int
sbb
orb
xor
fs
mov
addr16
lods
arpl
gs
aam
shrb
pop
mov
shr
sub
rclb
push
lods
jecxz
mov
or
or
ror
jge
and
movsb
jl
push
mov
ret
mov
push
mov
ret
out
in
or
dec
and
out
sbb
cld
sub
shrb
and
dec
cmp
mov
dec
dec
iret
lret
in
jo
jmp
dec
push
rorl
pop
sub
test
mov
xchg
and
adc
shl
insl
sub
ffreep
outsb
test
pop
es
pop
in
pop
dec
mov
add
loopne
orb
jmp
aad
das
add
mov
or
je
mov
ficoms
mov
pop
cmpsl
rorb
add
pop
push
enter
or
cli
sbb
and
rcr
push
iret
xor
cmp
loopne
iret
fildl
pop
cmpsb
cld
push
sti
and
fs
in
and
jae
sbb
fimull
insb
sbb
ror
mov
out
scas
push
xlat
out
shr
dec
inc
xchg
les
mov
sahf
xlat
int
ss
pop
push
ja
mov
push
adcl
xchg
or
aam
xor
ret
sub
fucom
xchg
mov
outsl
in
sub
rcl
add
lock
stos
sbb
cmp
sub
sbb
lret
out
or
xor
test
negl
lods
fwait
mov
pop
ljmp
ja
jl
test
push
adc
mov
push
inc
clc
pusha
mov
rorl
idivb
adcb
sub
cmc
sti
mov
mov
mov
lret
and
inc
fmull
dec
push
mov
ljmp
xchg
or
pop
pop
testl
add
test
imul
ja
mov
gs
push
jmp
mov
pop
xor
jnp
push
iret
aam
mov
jecxz
daa
xchg
mov
cld
push
push
orl
pop
jno
hlt
xchg
dec
pop
and
adc
out
mov
divb
sti
jmp
lahf
dec
push
sbb
push
mov
repz
imul
add
add
or
imull
dec
sti
inc
push
ret
loop
mov
pop
sbb
or
xchg
pop
mov
adc
push
or
xorb
push
imul
and
lahf
fcmovnb
mov
icebp
es
inc
adc
outsl
sub
add
sub
out
ja
adc
ja
push
mov
outsb
clc
pop
fsubrl
and
xlat
imul
xor
fistpl
aad
out
add
dec
adc
ficoms
cmpsb
pushf
daa
xlat
dec
test
mov
add
mov
pop
sbb
out
inc
loop
call
rcrb
arpl
aaa
sbb
mov
add
into
scas
mov
les
into
ret
notl
outsb
loop
icebp
jle
loopne
xchg
mov
out
xchg
xchg
call
xchg
fdivp
inc
xor
sub
xor
mov
xor
aam
pop
push
sbb
lret
sub
repnz
sub
add
push
mov
mov
in
mov
cmc
lahf
cmpsl
ljmp
pop
jnp
inc
test
inc
fsubs
insb
inc
aam
out
or
lcall
or
mov
add
orb
flds
loopne
cmp
mov
xchg
insb
xchg
push
test
jmp
in
dec
xor
sub
cmpsl
xor
cmp
push
sahf
orb
orl
sub
shll
out
jbe
ds
sbb
mov
jle
adc
jle
adc
mov
adc
jecxz
jns
fdivrl
mov
xchg
mov
arpl
pop
js
adc
es
lcall
mov
dec
pop
sub
and
adc
dec
inc
and
sub
cmp
outsl
xlat
filds
cmpsl
cmpsl
mov
mov
cmp
icebp
lods
inc
push
sub
call
push
shl
in
ljmp
and
mov
push
aas
call
loop
fwait
xchg
or
ret
ljmp
push
dec
and
mov
cmp
cs
cmp
lock
es
mov
int3
jbe
xacquire
je
lock
in
hlt
cmp
aaa
outsl
cmp
adc
pop
sub
adc
popf
dec
sbb
add
mov
inc
outsl
inc
into
sbb
cmpsb
jle
pop
pop
dec
inc
lahf
push
rcrl
subl
add
movsb
test
addb
sub
adc
dec
and
faddl
shr
data16
sub
adc
hlt
test
mov
repnz
icebp
das
sbb
adc
cmp
push
jg
test
jle
cmp
mov
test
lea
fs
sbb
add
clc
pop
cmc
arpl
jmp
push
add
push
push
mov
notl
js
cmpb
xchg
dec
xchg
lea
cmp
add
icebp
sub
sbb
outsb
xchg
stos
popa
loop
lods
sbb
loope
cmp
adcb
fldcw
std
dec
rcll
add
mov
loop
jle
jo
inc
jno
bnd
mov
cmp
sbb
xorps
xchg
daa
jno
stc
push
add
sti
jg
shll
adc
jg
sbb
jnp
cmp
int
int3
scas
xor
jge
repnz
xchg
call
ljmp
mov
flds
or
popf
or
or
scas
sbb
std
mov
lret
aaa
xchg
leave
add
add
ret
pop
xor
sub
gs
jnp
sub
sub
fcoml
sub
pop
in
ja
mov
xchg
div
lds
jae
sub
fnstenv
pop
sub
repz
adc
faddp
xchg
mov
mov
add
xor
adc
into
ret
roll
mov
cmp
xchg
lahf
stos
cmpsl
mov
movsl
push
push
in
pop
sbb
fadd
cwtl
adc
push
mov
adc
sbb
imul
loope
test
rorl
mov
gs
jecxz
test
call
inc
add
ret
pop
adc
add
nop
dec
adc
sarb
jbe
repnz
repnz
mov
add
dec
cmp
popa
outsl
cmp
loop
xchg
mov
lcall
push
push
push
add
loopne
or
sbb
mov
adc
aad
inc
and
xchg
repz
mov
rorb
sbb
or
jg
or
sbb
fiaddl
fistpll
adc
inc
jg
sbb
cmc
push
lods
or
out
ds
int3
xor
pop
daa
lods
sti
adc
mov
mov
xchg
add
adc
cli
cmp
hlt
es
xor
jbe
iret
add
repnz
and
sub
loop
loope
xor
push
daa
iret
mov
ret
out
adc
ret
cmp
orl
xchg
cli
push
jo
ja
xchg
repz
cmpsb
add
stos
sub
sub
out
scas
xchg
and
jbe
push
sahf
jecxz
ret
pop
popf
pop
cltd
mov
and
xor
xchg
cmc
push
test
loop
push
stos
mov
or
roll
adc
mov
stos
imul
insb
in
jmp
add
test
mov
mov
fdivrp
loope
adc
clc
repnz
addr16
pop
push
fsubrs
mov
adc
xlat
out
jnp
subl
mov
popf
mov
adc
add
jbe
clc
shr
and
push
testl
mov
or
enter
and
or
add
fidivrl
sbbl
ror
lret
mov
pop
mov
ret
outsb
cltd
fists
inc
enter
pop
mov
sbb
pop
sbb
xor
or
push
mov
sbb
cwtl
pushf
es
cwtl
fdivp
into
filds
lods
add
sub
dec
push
push
out
and
fwait
xlat
incb
into
mov
or
in
repnz
jo
in
fisubs
push
mov
jne
sbb
xchg
xor
mov
jle
fimuls
add
call
xchg
and
cld
jns
and
dec
jle
jl
in
fldenv
xchg
or
into
lret
stos
dec
cmpb
jo
syscall
mov
or
stos
das
scas
cs
rclb
jge
jnp
lcall
repnz
aaa
or
sbb
jmp
cmp
jno
jmp
outsb
inc
test
mov
std
or
mov
outsb
cli
sub
pop
adc
aas
call
stc
cmpsb
add
rorb
push
adc
jns
fildll
lock
pop
xor
ljmp
adc
jmp
and
lock
adc
ss
inc
pop
int3
pushf
or
pop
loop
dec
test
std
das
ljmp
fistl
imul
js
pop
adc
std
inc
cmp
pop
notb
test
aas
test
pop
cld
int
push
int
add
or
dec
push
cmp
cwtl
pop
add
out
dec
arpl
dec
cmp
dec
add
faddl
jmp
add
jae
int
xchg
shrl
rcl
mov
pop
push
adc
mov
imul
jne
mov
cmp
push
mov
enter
insl
pop
sbb
cmp
call
mov
js
or
negl
movsl
int3
add
sbb
into
fimull
xor
jl
add
subl
int
out
add
sbb
inc
fldt
jne
fldenv
push
cmc
movsl
int3
addb
lea
cmp
add
movsb
adc
leave
cmpsb
in
aas
mov
aas
in
adc
push
mov
sub
add
jl
sub
pop
aam
inc
inc
cmp
lods
push
flds
stos
mov
sub
push
orl
lahf
imul
ret
xchg
es
ret
and
gs
push
jmp
cs
and
sub
lock
pusha
xor
pop
nop
sub
push
pop
lahf
lret
testl
and
jcxz
jmp
or
iret
adc
sbb
push
fidivrs
sbb
es
xlat
scas
rcrb
icebp
push
add
push
daa
fdivrs
mov
in
mov
add
dec
in
mov
sbb
add
roll
es
std
sbb
mov
mov
in
loopne
and
xchg
lahf
cmp
pop
lds
pusha
adc
shll
dec
lock
aas
and
call
push
add
xchg
and
pop
jg
or
es
mov
jmp
or
pop
test
inc
and
pop
stc
cld
repnz
insl
adc
and
lock
gs
stc
fwait
mov
dec
sbb
push
fisttps
dec
nop
in
add
fisttpll
xor
jg
sbb
sub
add
aas
cmp
sbb
fsubl
jle
fists
lods
and
sub
rclb
cmp
stc
jbe
rcr
sbb
lret
mov
int3
shrl
scas
adc
dec
jecxz
fsts
push
or
and
jnp
pusha
jns
test
or
fwait
lods
adc
xor
mov
pop
mov
mov
fdivr
pop
mov
mov
mov
push
icebp
adcl
add
pop
bound
jecxz
pop
cvttps2pi
imul
add
call
mov
clc
pusha
or
loope
sub
push
imul
dec
aam
ljmp
icebp
add
sub
std
sbb
adc
pop
xor
and
add
or
test
mov
or
mov
xchg
xchg
push
dec
and
rolb
loop
mov
ljmp
shl
push
push
ja
adc
call
push
les
inc
les
xchg
cmc
cmpsl
or
xor
adc
and
pop
mov
add
cmp
enter
lds
inc
push
lret
xchg
push
cld
inc
in
int3
push
enter
mov
scas
shl
fwait
and
push
mov
add
mov
xor
mov
aad
hlt
ljmp
stos
outsl
cmp
out
jge
repz
adc
adc
test
lods
add
mov
iret
cmpsl
shrl
std
mov
xor
xchg
mov
pop
fldl
out
or
outsb
or
daa
nop
aam
out
rcrb
fsubrs
orb
shlb
repz
daa
ror
jmp
add
xchg
fiadds
fwait
dec
adc
jle
inc
mov
pop
inc
adc
test
insl
sbb
movsl
or
xchg
inc
out
or
and
cmp
sar
jne
add
stos
mov
test
push
inc
mov
in
pushf
jae
faddp
mov
popf
ss
inc
xor
mov
cmp
jns
iret
adc
xor
cli
push
adc
mov
push
pop
ljmp
mov
sbb
call
lcall
out
pop
cmp
outsl
test
inc
or
dec
add
adc
mov
push
out
sub
popa
add
pop
adc
cmp
sbb
add
add
cmp
mov
sub
ljmp
enter
rcrl
loopne
rclb
repnz
nop
out
pushf
jns
loope
mov
push
and
lods
sbb
sub
ljmp
movsl
pop
out
or
int
inc
testl
jecxz
cmp
nop
xchg
shll
push
rorb
xchg
cli
push
xchg
dec
dec
sbb
lock
lret
and
dec
jmp
rcr
int
aas
or
push
popa
das
jecxz
jae
sub
dec
test
sub
mov
mov
mov
ds
jae
cli
imull
adc
imul
xchg
and
and
jnp
std
mov
dec
dec
mov
add
std
addb
pop
loopne
fcomps
cltd
adc
sub
jp
out
out
arpl
les
push
out
fidivl
fiadds
je
scas
adc
es
inc
je
clc
inc
jp
iret
mov
cmpsl
xor
lds
add
pop
out
test
negb
sar
repnz
sub
or
xchg
pop
cld
mov
cmp
je
and
inc
or
pop
push
lds
jle
into
mov
lret
lds
mov
cmp
dec
add
mov
ret
push
mov
mov
mov
cwtl
sbb
inc
adc
push
in
mov
test
loop
push
or
cli
dec
dec
lret
inc
loop
cmpsb
or
enter
mov
sbb
neg
xchg
test
cmp
inc
setns
mov
mov
cmc
cld
and
in
mov
pop
inc
popf
in
test
pop
int3
cmp
mov
cmp
stos
clc
je
ljmp
insb
push
pop
out
fisttpll
outsb
out
ret
xor
fimull
and
mov
hlt
push
pop
pop
cmp
dec
pop
jnp
and
fmuls
xchg
push
jb
icebp
sub
test
xchg
ret
and
adc
mov
out
mov
xor
hlt
call
adc
or
lock
xor
loopne
dec
insl
cli
aas
cmp
andl
outsb
sbb
jge
cmpsl
xlat
adc
outsb
push
mov
and
int
mov
jmp
fwait
dec
xlat
push
inc
fmul
aas
popa
and
lea
orb
pop
sub
cmc
dec
sub
dec
dec
sti
add
fisubrl
stos
loopne
jnp
negb
arpl
sbb
xor
cmp
aad
inc
or
out
mov
cmp
repz
lret
add
imul
and
xlat
icebp
add
sahf
out
or
adc
xor
repz
sti
in
int3
mul
ficoml
faddp
xchg
into
dec
xor
jmp
jne
lods
das
lahf
or
movsl
rorl
cmp
fdivs
adc
mov
or
sub
ds
lods
hlt
dec
cmp
lret
fsub
sbb
rorb
and
xchg
mov
arpl
pop
into
push
ljmp
in
xor
je
pop
comiss
mov
movsb
jg
and
cwtl
lods
jo
in
sub
inc
mov
jne
in
std
imul
inc
ljmp
stos
in
int
push
and
xorl
adc
or
mov
loope,pn
adc
and
lods
pop
out
insb
cmp
ret
xlat
notl
rcrl
xor
andl
cmp
movsb
push
insl
shl
test
insb
push
push
jns
and
adc
lret
rcrl
dec
repz
int
lahf
and
xchg
adc
pop
cld
flds
pop
fcomi
outsw
xchg
cmp
adc
call
push
add
jne
outsl
jae
dec
dec
sub
jge
outsb
xchg
mov
js
inc
push
outsb
mov
cmp
sbb
jae
gs
aad
sbb
imul
stos
inc
add
enter
int3
push
xchg
push
cmp
mov
incb
push
jb
mov
xchg
dec
mov
push
mov
mov
inc
in
add
cmp
jmp
std
sarb
lcall
test
int3
mul
gs
jecxz
aam
dec
or
inc
mov
enter
inc
mov
and
test
cmpsb
xchg
insl
es
ds
fimull
dec
xlat
and
xchg
rcrb
loop
lods
cmpsl
jo
data16
sbb
mov
addr16
in
jge
or
mov
jmp
mov
mov
and
add
lret
cmp
pop
mov
dec
jp
aas
iret
lahf
sbb
scas
ficompl
stos
mov
sti
lds
xchg
dec
test
test
repz
clc
in
mov
rorl
and
inc
je
and
xlat
pusha
cmp
hlt
aam
add
or
jecxz
and
sti
adc
lret
and
add
lock
iret
pop
cmp
and
mov
push
push
inc
lahf
nop
xlat
pop
mov
sub
add
jecxz
cmp
cmp
out
and
mov
aad
sbb
faddp
xchg
subb
addl
iret
jp
mov
push
mov
mov
xchg
dec
pop
jno
addl
jle
cmpb
xchg
xchg
dec
add
pop
outsl
cmpb
or
ljmp
or
rcl
pop
and
cwtl
pop
add
fcmovnb
dec
mov
and
sbb
jo
dec
mov
push
pop
mov
lret
cld
shlb
mov
jecxz
test
cwtl
lahf
out
ficompl
imul
dec
dec
pop
jns
xchg
test
dec
pop
idivl
fiadds
ja
insb
adc
push
xchg
out
xchg
pop
gs
pop
cmp
ljmp
push
lock
mov
cli
rcll
sub
scas
aam
push
xor
fnstenv
add
mov
arpl
fsts
shr
mov
aad
ss
or
mov
leave
jb
xor
dec
test
test
cmpsb
adcb
rolb
pop
ret
inc
mov
mov
out
jmp
push
ds
inc
icebp
or
mov
mov
jmp
lock
mov
add
imul
testb
stos
lahf
push
cli
test
outsb
int
out
or
mov
xchg
pop
aad
xchg
dec
arpl
test
jns
pop
adc
mov
fildll
stos
mov
lahf
fidivrl
in
shlb
adc
movsb
je
push
ss
repz
adc
aad
lods
int3
cmpsl
sbb
pop
insl
fsubl
popf
jns
or
popa
clc
jno
mov
subl
std
and
xor
rorl
imul
xchg
scas
addr16
insb
cmp
imul
xchg
das
cmp
test
and
mov
add
sbb
cwtl
or
inc
xlat
xchg
lods
test
lret
jbe
iret
mov
inc
daa
jge
test
inc
mov
jae
pushf
xor
jle
test
arpl
cmp
movl
addr16
jmp
adc
les
inc
inc
sahf
or
int3
xchg
mov
shlb
outsl
xchg
mov
std
rol
sbb
dec
into
ss
jmp
dec
mulb
int
outsb
hlt
icebp
shlb
jo
push
cltd
jns
xchg
out
pusha
inc
xlat
rol
loopne
fadd
idivb
inc
pop
out
in
or
cs
cmp
xorl
pop
icebp
xor
lea
or
cmp
sbb
les
rclb
sahf
mov
cs
fcom
int
cmp
or
xchg
sub
push
add
iret
mov
adc
and
repnz
addl
mov
add
loopne
or
repnz
or
outsl
inc
inc
stos
lds
push
or
dec
mov
or
adcl
sub
mov
cld
test
aas
das
mov
sbb
xor
lods
mov
push
sbb
jle
xchg
dec
out
ss
ja
mov
js
pusha
shll
ret
mov
mov
shll
ret
enter
stos
push
cli
add
push
scas
adc
jmp
adc
ret
mov
mov
xorb
sub
les
mov
int3
or
mov
xor
jnp
lock
icebp
sbb
push
arpl
inc
push
popa
cmp
pop
les
or
xchg
add
test
andb
xchg
popf
push
xor
lea
sahf
mov
fstl
lods
mov
xchg
popf
pop
dec
push
sbb
mov
xchg
in
aam
and
mov
inc
jns
add
jno
mov
xor
lods
in
dec
mov
pop
lea
nop
sub
and
cs
sub
iret
or
jg
lea
scas
int3
inc
add
mov
insl
mov
add
ljmp
push
sub
or
rcrl
jo
push
into
or
xchg
jmp
scas
xchg
push
shrl
add
or
xorl
int
push
repnz
sbbb
aaa
enter
fsts
inc
inc
sbb
daa
pop
jmp
push
sbb
sarl
sub
mov
xchg
mov
adc
sbb
in
lret
test
lret
adc
sbb
mov
inc
lret
rcr
notl
sbb
lret
lock
into
imul
dec
aam
adc
pop
inc
mov
leave
or
mov
inc
imul
inc
and
mov
mov
adc
dec
sub
mov
jne
test
sub
sbb
ljmp
in
push
insl
sti
xor
and
inc
jge
xor
and
rorb
cld
icebp
into
jb
jl
and
sub
shlb
insb
je
cmpsl
mov
sahf
sbb
push
dec
inc
lahf
jns
imul
insl
mov
push
sub
add
enter
cmp
lcall
out
xor
push
mov
cmp
in
pop
inc
pop
repz
hlt
sahf
mov
xor
in
sub
mov
ja
push
fyl2x
lds
outsb
cmc
stos
ret
cmp
scas
xlat
je
xchg
fidivs
test
shl
pop
dec
outsb
inc
fsubrs
pop
mov
xor
xlat
jns
or
mov
nop
lahf
enter
lods
sbb
sub
out
cmp
pop
inc
mov
push
out
test
frstpm(287
jno
xlat
jne
ror
loopne
ljmp
cmp
jp
cli
loope
incl
push
xchg
inc
or
ret
or
dec
jl
dec
jb
ds
xchg
lret
pop
sti
xlat
or
xchg
cmpsb
dec
and
adc
in
sarb
insb
push
mov
pushf
fwait
mov
pop
inc
lahf
std
aad
inc
cmc
out
in
inc
inc
sbb
icebp
std
jne
mov
pop
push
stos
dec
cmp
notb
jo
sub
jle
outsl
jmp
sub
cmp
mov
sub
push
aam
mulb
call
adc
cmp
jmp
iret
lea
aam
jecxz
arpl
daa
in
push
cmp
mov
xor
mov
in
pusha
and
stos
and
cwtl
push
xor
fstl
dec
sahf
sbb
ret
rolb
xchg
pop
jmp
imul
pop
daa
push
scas
sbb
shlb
mov
out
push
xor
pop
stc
sbb
push
std
test
push
and
clc
xchg
out
add
cmp
cmp
mov
add
loope
ficompl
aas
call
push
js
push
mov
cmp
sarl
lahf
fstpl
mov
imul
rcll
scas
sub
cltd
test
mov
fdivrl
mov
mov
mov
push
minps
test
ljmp
mov
subl
mov
mov
cmc
push
add
int3
mov
or
push
sahf
jbe
lcall
push
pop
mov
adc
and
jo
subb
test
call
test
sub
or
test
cmp
pop
xorb
cwtl
jecxz
jmp
inc
imul
sbb
and
pop
leave
in
loop
add
sbb
enter
lods
lahf
pop
fmulp
sbb
int3
mov
loopne
adc
sbb
or
mov
and
jg
cmpsb
fmuls
dec
js
nop
or
push
or
mov
hlt
loopne
push
cmp
adc
aad
cmp
aaa
pusha
lock
std
jge
and
mov
fistpl
push
mov
pop
ret
push
int3
js
pop
dec
rcll
stos
mov
bnd
test
jo
loop
mov
jb
jne
test
xlat
sub
call
sub
data16
pushf
xor
mov
es
push
rcrb
imul
xchg
dec
xchg
in
cmpsl
xor
sub
cmc
jmp
mov
mov
push
adc
jmp
push
push
adc
fnsave
sarb
mov
mov
lea
mov
clc
sub
jge
mov
loope
out
data16
pop
daa
push
out
rclb
add
incl
mov
inc
insb
jo
lock
mull
push
daa
cwtl
adc
shlb
mov
imul
sbb
call
aaa
out
scas
cmp
filds
mov
sbb
mov
sub
subb
fldcw
movb
enter
call
cmp
lds
or
iret
jge
sbb
push
cmpsb
and
cltd
sbb
push
jmp
xor
mov
mov
fwait
mov
fdivrs
and
lahf
or
and
xchg
cmp
movsb
inc
rcl
or
fstps
push
shl
into
in
push
cmp
ds
fnstsw
ror
das
add
pop
insl
inc
fyl2xp1
stc
cmp
fnstenv
bt
or
cld
cmc
repz
or
insb
sti
mov
sahf
xor
lock
adc
or
data16
das
xor
push
ljmp
sti
loope
or
pop
and
cmp
js
jge
xchg
xchg
mov
xor
insl
mov
cli
inc
push
jecxz
shlb
dec
adc
pop
shl
or
out
mov
cmp
mov
add
jecxz
fistpll
mov
in
push
mov
mov
and
mov
in
pop
in
lock
mov
lcall
xor
and
fisubs
cmp
sbb
or
xchg
cmpsb
into
xor
cmp
faddl
xchg
sbb
sti
ret
xchg
int
jle
lods
jge
pop
out
movsb
out
cli
lods
imul
sub
adc
xor
pop
cmp
dec
lret
mov
sbb
fwait
out
rorl
iret
xlat
jmp
mov
dec
or
jb
dec
pop
mov
or
push
std
jo
and
sbb
cltd
mov
mov
test
rorl
push
ret
adc
int3
pop
sub
xchg
call
xchg
push
cmpsb
and
xchg
shl
orl
inc
xor
add
ljmp
ss
lods
rolb
dec
enter
stos
hlt
in
push
int3
es
icebp
jg
rolb
xchg
add
ljmp
cmpl
pop
cli
in
outsl
and
cmp
cmp
inc
add
xor
xchg
adc
mov
popf
xchg
ret
imul
test
movl
or
adc
rcrb
add
pop
dec
mov
rcr
into
xor
ds
decb
sbb
push
jle
mov
xor
sbbl
jg
das
pop
lods
test
add
jbe
out
mov
mov
and
adc
in
sub
not
call
mov
js
jno
ds
pop
jmp
add
adc
lahf
pusha
xor
dec
das
in
or
xor
cmp
or
ds
test
int3
xor
mov
add
xchg
inc
fsubs
inc
repz
std
pop
jns
mov
add
aas
inc
mov
ret
mov
sbb
mov
imul
fistpll
scas
test
or
sub
add
xor
mov
in
outsb
push
ljmp
xlat
enter
daa
push
dec
out
test
sub
ss
push
adc
adc
push
sub
sahf
mov
cltd
push
clc
add
loopne
fldt
or
ftst
scas
push
jo
mov
out
adc
ror
loopne
fmull
inc
pop
enter
mov
imul
enter
ja
lcall
cmp
nop
push
dec
jae
jnp
mov
pop
addr16
in
das
loope,pt
cmpsl
scas
adc
xor
test
sub
dec
ficoml
xor
out
test
jnp
aaa
or
mov
cmp
or
iret
adc
adc
jbe
adc
mov
mov
fidivl
out
sub
cmc
mov
in
xchg
push
lods
add
and
and
xlat
push
add
sbb
push
rcrl
imulb
sbb
pushf
or
add
mov
mov
ret
loop
jbe
js
bswap
mov
jmp
jmp
in
pop
test
xlat
pop
loopne
daa
xor
sub
out
push
shr
fiadds
testb
and
adc
nop
cmp
jg
in
push
je
push
adc
das
sub
fcmovnbe
mov
dec
push
jg
hlt
std
jno
lods
fwait
imul
shlb
adc
or
mov
xchg
mov
dec
dec
aaa
mov
mov
and
cmc
js
pop
xchg
jnp
dec
cmp
lret
loopne
xchg
leave
arpl
add
add
push
fnsave
inc
out
xor
push
addr16
inc
mov
inc
adc
lock
or
pop
sub
sub
mov
push
into
push
es
sbb
fsubrl
inc
pop
lods
lret
pop
or
jno
or
mov
lods
cmpsl
ret
mov
pop
out
daa
cli
rorl
push
add
dec
mov
stc
int
ss
xor
dec
je
testl
inc
mov
pop
jmp
adc
and
test
sbbb
mov
push
shr
add
pop
sub
and
cmpsl
sbb
cmp
xrelease
and
mov
loopne
test
in
std
add
fwait
dec
jbe
sbb
call
sbb
in
stos
rcr
fsubrl
mov
push
add
dec
fildl
mov
add
in
adc
sbb
push
mov
adc
pop
popa
dec
sbb
or
sbb
push
out
aaa
jp
sti
mov
mov
je
lahf
or
cmp
sub
mov
dec
inc
js
mov
leave
fidivrs
movsl
push
or
call
sub
test
cli
mov
bound
push
sub
and
mov
ds
les
cmp
mov
add
ficomps
movsb
shrl
and
push
mov
scas
mov
and
jmp
mov
iret
adc
pop
xchg
shl
sahf
lcall
int
lcall
loopne
enter
xchg
cmp
push
mov
mov
pop
int
mov
sarl
das
sub
jp
int3
dec
push
shr
fcoms
sbb
dec
cmc
mov
inc
inc
jge
sub
push
test
mov
jle
add
jp
cmp
lahf
inc
adcb
pop
sub
jp
shlb
add
cltd
xor
in
sti
fisubs
ret
in
mov
scas
sub
aaa
sbb
adc
jb
sahf
cmp
movsb
orl
in
rclb
or
inc
sub
mov
fnstenv
xchg
add
movsb
cmp
cmp
cmp
mov
inc
sbb
fildll
mov
stc
cmovb
vpmadcswd
push
xchg
sti
mov
js
icebp
imul
xor
mov
insb
jae
push
fwait
jnp
sbb
pop
lock
inc
xchg
jecxz
sbb
stos
movb
jb
test
inc
xchg
hlt
or
xor
sbb
dec
adcl
cmc
imul
push
imul
pop
pop
jae
pop
fucomp
inc
nop
adc
in
std
aaa
sub
stc
lahf
imul
lock
cmpsl
mov
mov
nop
or
sub
cld
push
daa
scas
jp
int
mov
jno
mov
sbb
lret
push
lods
leave
repnz
dec
ffree
inc
mov
or
call
loopne
xchg
push
lds
or
push
xor
inc
cmp
fwait
insb
mov
xchg
fisubrs
lea
sti
cld
and
imul
roll
aas
or
mov
xchg
je
push
sbb
jns
rcrl
mov
insb
mov
dec
cmc
into
shll
xchg
stc
pmullw
jmp
sub
cmp
cmp
adc
cs
shrb
cmp
cwtl
in
xor
orl
or
mov
add
jmp
and
lretw
outsl
andl
dec
jg
out
ljmp
mov
cmpsb
shrl
cwtl
shl
cmp
out
ljmp
into
out
lds
sahf
orb
xlat
push
andb
les
fucom
cwtl
push
subl
jp
popf
ljmp
sarb
out
rcl
mov
inc
push
test
adc
inc
add
divl
pop
test
xchg
jg
popf
sbb
mov
fwait
push
ret
mov
pop
dec
cmc
shrl
pop
stc
out
dec
icebp
lock
pop
insl
insb
repz
push
in
lock
sub
mov
hlt
enter
pop
jo
adcl
inc
ljmp
xor
rorl
out
push
je
idivl
cmp
ficomps
sub
cld
sahf
xor
pop
rcr
enter
or
mov
sbb
in
dec
push
lea
imul
stos
dec
adc
sub
jnp
loopne
call
cwtl
ret
sub
sbb
add
mov
int
pop
outsl
es
dec
stos
add
loopne
ljmp
jecxz
or
lods
cmc
or
or
enter
push
mov
and
leave
push
popf
into
test
sti
ret
sbb
jg
out
fdivl
and
mov
enter
jmp
insb
insl
div
pop
and
inc
sahf
das
adc
call
jp
dec
ljmp
shr
pushf
loope
cmp
popf
adcl
rorl
shr
pop
lcall
lret
aaa
in
enter
xchg
mov
scas
ja
and
insl
jb
dec
adc
imul
mov
in
and
lods
jp
mov
sub
jo
sbb
sub
and
pop
and
dec
sub
mov
hlt
lret
dec
jle
xor
xchg
cs
xchg
cmp
mov
dec
leave
pop
in
mov
movsb
stc
movb
gs
je
cld
cmp
dec
or
insb
stos
addr16
test
imul
and
imul
cmp
push
sar
inc
pushf
outsl
lods
lods
js
mov
jns
lret
cld
pop
xchg
inc
and
mov
in
cmp
dec
jp
sbb
les
outsl
adc
je
sub
fldenv
dec
or
pop
cmc
data16
pop
push
imul
test
mov
lock
pop
mov
and
pop
xchg
and
daa
pushf
dec
cmc
into
dec
out
push
divw
cmp
aam
orl
mov
sbb
pop
rcll
scas
push
pop
pop
aaa
int
leave
push
xor
sbb
add
jb
add
es
add
mov
lahf
lds
hlt
lret
out
test
cmpb
ds
sbb
mov
sti
xchg
das
nop
push
jle
jnp
shll
cmp
dec
pusha
sub
imul
jno
sub
out
loop
add
fwait
es
inc
gs
fstp
jmp
sbb
mov
push
cmpsb
loope
das
inc
and
test
out
mov
push
or
loop
inc
adc
stc
dec
and
push
sahf
out
sub
and
mov
push
sub
aaa
add
inc
popf
adc
outsb
cli
rol
cmpl
or
dec
insl
fisttpl
sbb
in
ret
sbb
push
and
jbe
pop
sub
and
in
out
cmp
outsb
jns
mov
push
popf
addr16
insb
xor
adc
es
xchg
out
idiv
outsw
sub
aaa
mov
adc
mov
mulb
or
inc
cmp
rorb
cmp
or
cs
gs
pop
call
push
sub
sbb
push
dec
cmc
push
test
jecxz
push
mov
call
pop
repz
mov
cmpsb
sbb
fcompl
cli
mov
rcrb
loopne
or
mov
fsubrp
out
popa
nop
sarb
cltd
les
inc
inc
xchg
add
in
pop
mov
adc
xchg
enter
pop
xor
movb
sub
xchg
xchg
and
dec
pop
lcall
jo
fisttps
into
test
aas
or
mov
inc
out
jb
call
insb
pop
pop
adc
sub
sbb
loop
pop
and
addb
lds
xchg
out
mov
inc
call
in
add
insl
daa
inc
cmp
rolb
mov
int3
scas
pusha
cmp
insb
loopne
xchg
mov
adc
adc
or
imull
sub
xchg
int3
and
ret
je
xor
xchg
rorb
insl
stos
cmpsb
xchg
rcrl
xchg
push
lds
ret
xchg
imul
dec
pop
and
jg
push
popa
sbb
xchg
sub
mov
daa
xor
adc
inc
mov
cmpsb
adc
sub
or
out
sub
sti
xchg
push
jns
ljmp
adc
add
xor
xor
or
lcall
mov
insl
add
and
mov
xor
out
sub
push
and
sarl
jbe
sbb
jecxz
or
insb
xchg
mov
jge
sbb
aam
addl
test
in
cmpsl
iret
pushw
jnp
je
mov
ficoms
mov
in
adc
add
aam
and
mov
mov
cmpl
out
das
xor
and
out
popf
push
and
in
jg
testl
dec
mov
lahf
int
cs
adc
test
dec
outsl
gs
shrb
sub
sbb
xchg
sahf
aaa
iret
call
je
xchg
inc
nop
pop
mov
jle
mov
andl
xchg
daa
outsb
jmp
hlt
sbb
add
test
add
xchg
jns
fwait
jb
insl
fdivr
push
or
lret
inc
lret
push
sbb
mov
int
dec
cltd
push
stos
or
fs
fcmovne
ret
dec
inc
addr16
aam
or
stos
xorb
arpl
xor
aaa
cmpsl
adc
push
push
scas
addr16
mulb
enter
pop
pop
outsl
dec
push
mov
sbb
push
std
jns
sti
mov
fsubrs
sahf
ret
sbb
out
adc
ljmp
call
stos
lods
lods
rorb
jle
pop
adc
gs
inc
add
insl
lea
dec
adc
xorb
add
nop
sbb
enter
xchg
xchg
testl
fildl
lret
fisubl
or
sbb
insl
xor
movsb
je
jbe
inc
add
xor
call
sarl
push
dec
insb
insl
pop
fadd
add
pop
pop
lods
jbe
div
in
jg
dec
cmp
lsl
iret
mov
cmpsb
xchg
xchg
sub
jl
mov
imul
or
mov
int
add
cmp
fdivrs
lea
rsqrtps
push
loope
xchg
rcrb
push
outsl
aam
xor
mov
js
sysexit
xor
sbb
dec
test
xchg
cwtl
mov
fsubs
movsb
pop
test
psrld
xchg
mov
inc
ljmp
test
pop
ljmp
cmp
pop
cmpsl
jmp
popa
loop
pushw
pop
xchg
test
scas
dec
dec
xchg
test
call
cmp
cmp
lret
cmp
test
xchg
es
xchg
xor
sbb
cmp
xchg
shrb
outsl
iret
cmc
scas
sub
dec
push
and
add
mov
sbb
push
lods
std
call
lret
int3
outsb
js
ljmp
sub
fwait
sbbb
aaa
imul
es
sub
xor
mov
dec
push
fstpl
push
or
mov
test
dec
movsb
mov
test
mov
addr16
call
jecxz
sub
dec
mov
jnp,pn
rcl
adc
inc
add
ror
lods
push
sbb
ja
jmp
lods
pop
subl
pushf
xchg
and
notl
outsb
inc
cmp
std
inc
adc
es
add
enter
daa
cmp
psraw
cmp
lret
cmp
lahf
sbb
subb
les
jmp
push
lcall
pop
je
xchg
push
testl
xchg
lods
jne
js
out
jecxz
popf
adc
ds
cs
or
imul
push
cs
aam
mov
and
adc
pop
sub
adc
and
push
sbb
dec
pop
jne
mov
bound
out
inc
loop
xor
fs
cmpl
add
cltd
mov
push
lcall
adc
scas
sbb
xchg
sub
faddp
movsl
cs
stos
jp
and
outsb
xchg
mov
jg
push
shl
mov
inc
xor
inc
out
rcl
pop
ret
mov
push
push
sbb
enter
filds
ret
inc
cmp
lret
sub
aaa
mov
sti
out
xor
xchg
cmpsb
in
leave
push
popf
insl
pop
lods
adc
mov
pop
sbb
fiadds
shlb
adc
out
sbb
cld
sub
and
jno
in
dec
addr16
mov
scas
pop
sbb
cmp
mov
aas
mov
pusha
jecxz
cmp
pop
pop
test
or
jp
and
aaa
mov
or
sbb
xchg
pop
mov
gs
mov
push
add
lock
adc
sub
loop
or
sti
aas
push
mov
or
loopne
sub
mov
push
add
and
fs
mov
and
mov
fbld
iret
mull
int
and
lahf
aas
cltd
inc
inc
sub
lret
mov
imulb
mov
das
sbb
xlat
push
mov
notb
jl
test
push
sub
shlb
cmp
jbe
pop
aam
push
xchg
mov
or
outsb
arpl
sub
das
out
sbb
out
push
fsubl
mov
adc
and
push
lds
call
dec
rorb
vhaddps
push
xlat
das
mov
ds
lods
inc
dec
dec
cmc
push
rolw
dec
sbb
xchg
inc
mov
cltd
jp
shlb
int
push
aaa
ljmp
push
sti
jecxz
stos
cmc
sti
xchg
mov
xor
push
jno
push
fbld
addl
test
mov
punpckhbw
jnp
int
imul
inc
jns
and
dec
ss
shll
int
lods
int
adc
jmp
pop
xor
jns
arpl
push
out
dec
aas
pop
je
js
aam
dec
inc
or
test
pusha
push
lcall
ffree
das
mov
aad
cltd
ret
out
push
mov
add
gs
dec
sub
inc
xchg
iret
cmc
adc
out
push
outsl
and
imul
data16
loope
xor
test
ret
jmp
test
push
push
and
add
xchg
pushf
sub
mov
sbb
cld
rcll
or
mov
popa
pop
aas
js
jge
test
std
push
xchg
cld
int3
push
xchg
outsl
add
add
test
cmp
ja
stos
adc
mov
or
xor
push
pop
mul
mov
pop
adc
xlat
lea
add
stc
cmp
cmc
sub
push
mov
sub
push
mov
pusha
mov
xchg
add
movsl
lret
pop
adc
mov
rcl
jg
dec
dec
enter
call
push
inc
pop
jg
jl
pop
daa
jg
mov
cmp
aaa
mov
pop
xor
xor
divb
sti
iret
inc
out
lods
push
shrl
mov
int3
mov
hlt
je
dec
xchg
lret
jo
pop
xchg
loop
xor
or
xchg
xchg
adc
leave
inc
mov
andl
ja
dec
and
sbb
js
dec
xchg
das
dec
mov
decb
inc
fbstp
movsl
or
lcall
mov
xchg
out
out
inc
or
das
adc
mul
lahf
sbb
ret
cmpsl
leave
iret
int3
push
jae
popa
push
xchg
xchg
pop
sub
pop
leave
jle
lahf
rolb
sub
inc
push
mov
outsb
nop
daa
xor
lret
jmp
adc
cs
js
lret
test
fildll
mov
lret
inc
ret
fucomp
pop
subl
pop
lock
xor
xchg
rol
leave
xchg
daa
roll
push
into
ret
push
sti
push
leave
test
mov
sbb
testb
shl
fiaddl
ljmp
xchg
lret
and
push
movsb
into
inc
pop
mov
cmp
stc
into
xchg
push
rcll
lret
movsl
cmp
aas
popa
mov
sbb
inc
aad
or
jmp
gs
clc
push
jp
cmp
data16
push
std
icebp
pop
into
fidivl
pop
insl
and
in
xlat
jb
jp
dec
scas
dec
shll
testb
push
fisubrl
pop
add
dec
cmp
xorb
scas
test
call
lret
cmc
aad
aaa
jb
fsubs
arpl
and
and
clc
pushf
push
orl
xor
xor
call
mov
lods
jp
cmp
into
in
call
popf
orl
fiadds
push
jno
sti
pop
ds
xchg
fs
xchg
xor
mov
pop
ljmp
rcrb
call
out
push
add
ficoml
ret
xchg
or
les
testb
fidivs
movb
psraw
add
sub
mov
xor
test
arpl
cmp
and
fcmovu
std
and
mov
push
out
enter
ja
sbb
add
jl
adc
pop
sbb
lea
cmpsl
imul
jae
sub
das
das
test
dec
int3
mov
sub
and
fiaddl
adc
out
adc
xchg
push
pop
adc
inc
push
pop
dec
xlat
sub
mov
pop
in
mov
pop
sub
aaa
mull
xor
and
lahf
cmp
mov
push
dec
sub
sub
jae
enter
out
enter
int3
iret
js
jbe
or
int
sbb
xor
lcall
or
sbb
cmpsb
fists
pushf
pop
popa
mov
push
jnp
ljmp
nop
push
sti
xor
adc
test
into
sub
outsb
cmpsl
sub
out
and
inc
mov
pusha
or
mov
mov
stos
clc
aad
add
mov
not
sub
outsb
fadd
sbb
xchg
iret
cmp
push
xchg
fistl
mov
push
clc
clc
pop
call
addl
test
pop
bound
in
pop
test
clc
add
call
jbe
xchg
inc
scas
adc
xchg
adc
fwait
push
xchg
jne
push
scas
test
call
leave
jbe
fsubrl
push
inc
cld
add
mov
sub
mov
jle
imul
push
clc
es
mov
and
andb
loopne
sahf
adc
orl
xchg
inc
iret
sbb
andb
sub
mov
in
jl
sub
shlb
dec
rcrl
or
mov
dec
jno
pop
vmread
and
shll
inc
pop
push
call
lret
lea
pop
jp
dec
inc
mov
orb
in
jne
fcompl
jle
push
mov
out
adc
sbb
pop
mov
cs
imul
ljmp
test
dec
pushf
pusha
sbb
ret
scas
sub
int3
jbe
les
cmc
sub
mov
add
mov
mov
sbb
mov
fistpl
std
sub
jecxz
adc
scas
xor
mov
stos
cmc
cs
sub
pushf
fisttps
decb
std
test
sbb
mov
rorl
push
push
xorb
jbe
cmp
mulb
negb
orl
xor
add
adc
sbb
cli
cli
scas
aad
and
mov
xlat
popf
fs
out
add
into
jp
dec
adcl
faddl
lret
repz
mov
sti
leave
sbb
dec
xor
jp
scas
fs
sbb
es
mov
lahf
mov
addr16
gs
fisttps
dec
outsl
aaa
lds
pop
cmp
cs
lea
mov
stos
sub
push
push
mov
cmp
dec
pop
xor
push
sbb
icebp
in
sbb
lret
add
mov
inc
fmul
jmp
out
dec
push
and
cmp
xor
fisubl
xor
push
test
jp
cmp
in
insb
je
shll
sbb
lods
loope
sarb
in
jge
out
push
add
mov
mov
inc
or
xor
jle
adc
add
jae
jno
call
dec
lods
loope
in
outsl
mov
subl
shl
push
inc
cmp
pop
push
jb
fsub
fldenv
mov
push
int
pop
rcll
ret
sub
and
add
aam
pop
xchg
repnz
xchg
popl
shll
pop
and
shll
fstpt
jle
cmp
adc
mov
lds
add
lods
xchg
aam
je
ljmp
mov
and
incl
imul
or
out
add
xchg
cld
lods
mov
or
jnp
mov
sbb
mov
push
pop
cmpsb
les
sub
adc
shrb
adc
or
and
adcl
stos
xchg
sahf
inc
sub
or
xchg
jl
or
add
adc
pop
mov
xor
add
scas
sbb
and
cmp
add
in
arpl
xchg
imul
les
test
addb
sub
js
in
pop
leave
les
scas
out
mov
in
insb
jo
adc
sub
adc
repz
cs
dec
push
add
mov
enter
xchg
inc
aaa
in
lock
jnp
scas
adc
and
sbb
and
jg
pop
push
insl
dec
ret
add
andb
jno
sahf
inc
addr16
ds
jae
lock
mov
sbb
lahf
jo
and
mov
cmpsl
push
xcrypt-cfb
cmpsl
cmpsb
mov
sbbb
sbb
inc
sub
add
and
popa
jnp
gs
imul
jl
jp
cmc
sbb
push
xor
inc
rolb
rcrl
js
fwait
mov
divl
cmp
stc
sub
xchg
pop
rcr
jge
sbb
sub
jno
xchg
lods
mov
rolb
sub
lcall
fisubrs
movsb
or
inc
imul
dec
insl
jne
inc
sub
jle
adc
mov
repz
mov
jne
cld
dec
dec
mov
movsl
or
pop
sub
inc
xchg
lcall
sti
push
cmc
sarb
mov
les
dec
ret
fdivrs
call
arpl
mov
cmp
mov
and
ret
pop
mov
hlt
adc
dec
test
lcall
pop
and
sub
test
pop
imul
aas
pushf
adcl
mov
and
ds
in
orb
dec
dec
or
jbe
jecxz
out
or
cmpsl
sbb
shlb
enter
hlt
test
pop
test
xor
mov
mov
scas
in
das
bound
mov
xor
pcmpeqw
add
sbb
push
call
mov
inc
cld
and
jg
jo
inc
cmc
imul
pop
adc
out
ja
insl
sbb
ljmp
push
popa
and
inc
lods
jle
and
xchg
mov
movsl
mov
or
mov
sub
jg
xchg
mov
mov
sub
add
int
jp
fadds
cmp
and
imul
mov
fcoms
int
int
inc
cmc
cmp
mov
fsubrp
xor
outsb
pop
aaa
sbb
lea
insb
push
scas
icebp
shlb
dec
lret
fdivrs
xor
sbb
jp
pop
cltd
repz
enter
das
sbb
lock
add
mov
xlat
xor
fnstcw
jae
imul
fisubl
fstl
iret
icebp
shlb
pushf
push
popa
sbb
cmp
or
xchg
cs
add
dec
sub
push
in
pop
mov
jp
das
fildll
cmp
fsub
sub
mov
pop
xor
jb
mov
or
sub
dec
addr16
sarl
jmp
ror
in
add
out
jp
pop
push
jmp
je
and
out
test
pop
popf
pop
cmp
adc
dec
pop
jecxz
repz
cmp
fcmovb
ror
rclb
push
cs
sub
xchg
mov
xchg
and
cmp
jne
js
incb
out
fs
inc
dec
cmp
jmp
test
xor
adc
stc
inc
xor
lret
sbb
rcl
cmpsl
insl
out
and
push
sti
fildl
nop
xchg
psrad
cmp
dec
pop
out
out
adc
enter
jae
je
int3
repnz
or
pushf
pop
or
pop
sbb
pop
mov
insl
and
insb
mov
lahf
jae
nop
ljmp
cs
ret
pop
jge
and
cmpsb
lahf
je
xor
mov
popa
adc
fstps
fs
scas
jecxz
in
mov
xchg
div
fildl
adc
or
je
push
mov
or
pop
clc
and
mov
jg
push
mov
pop
sbb
out
dec
xor
mov
dec
mov
js
and
nop
push
aam
ds
push
push
or
call
rolb
daa
or
cltd
sub
lea
ret
or
adc
sarl
dec
in
loope
jne
and
test
fwait
xor
call
lret
iret
jne
xchg
fadds
mov
sub
arpl
adc
vpsllq
adc
in
pop
scas
jns
out
outsb
stos
push
in
pop
incl
mov
jb
pop
add
stc
mov
push
sbb
jmp
out
sbb
jns
inc
fisubrs
inc
cmp
and
sahf
dec
push
rcr
inc
stos
mov
xor
push
push
sbb
fiadds
dec
div
cli
in
stc
adc
bound
mov
lods
je
loop
lea
mov
add
mov
mov
adc
fcmovb
data16
adc
repnz
aam
sbb
in
call
adc
sbb
gs
jmp
pop
jb
jle
sbb
loope
ret
repz
jnp
pop
dec
or
adc
push
out
lds
jbe
clc
enter
xchg
or
pop
cwtl
mov
mov
jg
cld
pushf
test
out
stos
cmp
or
sbb
fdivr
ljmp
push
jg
fwait
outsl
mov
jl
or
push
shll
sbb
pop
sti
xchg
mov
pop
in
add
ss
mov
daa
pop
jnp
pop
outsb
dec
mov
std
fisttpll
push
lret
js
sbb
jmp
int
ret
test
inc
adc
imul
aam
mov
psrld
xchg
test
stc
movsb
push
adc
jns
imul
fldl
stc
cmp
mov
fld1
dec
orl
cld
out
and
jne
jbe
cltd
xor
fwait
loopne
and
loop
and
inc
push
cmc
clc
icebp
outsb
or
rclb
mov
sbb
add
test
lcall
pop
push
xor
adc
push
and
pop
sbb
adc
lds
push
ljmp
pop
into
mov
jb,pn
ret
push
add
test
mov
pusha
out
outsl
xchg
and
cmc
or
sub
and
loop
sbb
test
cmp
xchg
rcl
lds
push
jns
test
xor
adc
loope
out
jmp
cltd
aam
in
in
comiss
out
sbb
lret
cmpsb
adc
sub
and
call
addr16
fisubrl
push
xor
outsl
stos
inc
cwtl
movsl
mov
gs
jge
stos
andb
out
out
lcall
push
negb
add
fdivr
inc
and
or
arpl
movb
ret
int3
ror
xor
test
cmp
popf
outsb
sbb
shll
jbe
out
out
je
xchg
xor
add
pop
jge
fsubl
mov
out
jge
nop
lret
sbb
les
in
and
or
aad
sbb
mov
insb
and
lods
das
mov
xchg
or
out
jecxz
xchg
std
fdivl
int
pop
into
mov
iret
decl
push
ss
mov
mov
stos
andl
popa
fs
jecxz
movsb
cmp
xchg
pusha
dec
cmp
aas
and
mov
call
icebp
mov
sbb
repnz
dec
repz
inc
test
xor
pop
addr16
xchg
xchg
loop
pop
mov
dec
es
jl
and
jl
jg
mov
adc
cli
into
out
xor
lret
fwait
xor
jns
xorl
xchg
mov
adc
mov
sti
mov
bound
test
push
mov
pop
loopne,pt
cmc
sbb
lock
jo
xchg
gs
stos
mov
andl
movsb
outsb
push
push
mov
clc
roll
jg
loope
jne
cld
dec
ljmp
xor
std
inc
mov
lods
jb
rclb
xor
jmp
jbe
ror
pop
pushf
jmp
out
imul
sti
imul
pop
in
mov
adc
mov
mov
ret
mov
arpl
int3
shll
jp
and
cld
sbb
icebp
sbb
in
hlt
ds
pop
mov
ja
lahf
rclb
lret
test
sti
cmpsl
mov
push
sar
retw
jle
push
jb
lret
insl
les
jo
mov
lea
cld
call
shlb
rorb
fmul
xor
xor
es
dec
jns
push
mov
out
lock
shll
rclb
sbb
xchg
xor
add
imul
pop
stos
mov
adc
and
sbb
stos
test
xchg
sbb
or
mov
fcomps
inc
push
sbb
mov
jle
insl
les
outsb
stc
mov
fdivs
fimull
xor
nop
imul
in
stc
mov
stos
in
mov
jp
or
pop
dec
aaa
scas
push
xchg
lods
cwtl
xchg
fidivrs
sub
add
aam
push
add
repnz
mov
push
mov
xor
push
outsb
fs
das
and
popf
add
aas
stc
fisttpll
test
ljmp
mov
sub
cmp
add
call
test
test
add
sbb
out
xor
mov
subl
jnp
inc
cmpsl
movsb
aam
lret
sbb
mov
adc
mov
fcomp
clc
pop
addr16
jne
lods
mov
arpl
fdivp
aam
mov
shll
push
orb
mov
fcmovnbe
and
add
mov
stos
movsb
xor
fnsave
pop
pop
and
popa
ja
mov
add
mov
push
test
and
mov
js
or
les
push
sbb
ljmp
or
mov
and
in
out
aam
out
sbb
sbb
add
mov
or
pusha
mov
jns
dec
adc
fidivs
jmp
or
inc
inc
stc
pop
loopne
test
imul
or
sbb
test
xor
and
mov
cli
sbb
adc
rcll
dec
mov
mov
repnz
dec
iret
push
push
outsb
int
mov
sub
push
or
mov
rcll
or
fwait
bound
int
cmpsb
cmpsl
lret
mov
pop
lret
inc
jne
or
sub
jl
mov
movzwl
out
sub
xchg
mov
dec
mov
mov
pop
xchg
xor
xchg
xchg
into
insb
shl
xchg
xor
jno
mov
mov
sahf
add
pushf
je
push
and
and
and
fistpl
loopne
xor
fnstsw
aad
in
insl
ja
les
fadds
push
sub
inc
fcmovne
ficoml
mov
push
int3
fmuls
incl
jmp
xchg
jle
mov
scas
xchg
in
mov
jmp
push
jbe
xor
movsb
add
in
lret
popa
mov
out
dec
sbb
jecxz
pop
or
jle
add
iretw
mov
pop
scas
sub
xchg
dec
add
data16
mov
aad
hlt
hlt
arpl
in
aam
lahf
jno
out
data16
in
fimuls
mov
cld
and
mov
scas
sbb
mov
adc
dec
sbb
cmpsl
shrl
xchg
mov
hlt
push
dec
inc
aas
cmp
rclb
xchg
pop
lock
push
mov
adc
adc
jle
xor
inc
mov
mov
adc
push
out
mov
sbb
or
cmp
mov
mov
dec
sti
push
mov
fdivs
mov
push
dec
je
dec
sub
rorl
add
int3
jle
cmp
inc
sti
es
int3
sbb
int
xchg
xchg
ror
psadbw
xchg
cmp
cmpl
in
mov
and
cmp
ljmp
stc
fisttps
ret
sar
sub
aam
dec
scas
push
jge
rcrl
jle
sub
popa
es
and
jp
jne
outsl
scas
orb
push
mov
xor
jne
push
cmp
es
push
jge
call
adc
das
notl
cmpl
cmc
call
sahf
in
push
jmp
ret
or
cld
adc
push
test
mov
pushf
lea
roll
mov
lds
jl
fcomip
and
push
mov
and
seta
in
push
lahf
jecxz
inc
add
push
dec
cli
pop
mov
dec
cltd
dec
into
std
subl
inc
dec
jns
insb
mov
xchg
xor
xchg
dec
jge
pop
arpl
dec
std
pop
and
pusha
push
xor
out
mov
daa
mov
in
push
xorl
and
mov
jecxz
mov
sbb
ret
out
xchg
mov
adc
sub
out
xor
mov
arpl
lahf
movsl
pop
lret
pop
stc
jl
mov
lock
xor
popf
inc
mov
xchg
test
jle
jge
rcrl
jecxz
dec
sbb
loop
add
ja
pop
mov
int
orb
sub
xor
pop
adc
ss
dec
sarl
mulb
movsb
mov
add
cwtl
inc
push
movsl
lahf
in
std
mov
icebp
ficoms
lock
push
test
or
mov
sbb
icebp
push
int
ja
ret
lret
mov
add
nop
add
int
jae
rcll
adc
sti
movsl
dec
fdivs
or
data16
or
or
mov
in
and
mov
xlat
cmpsl
fsubrl
xor
mov
mov
lahf
mov
pop
jae
jecxz
aad
dec
fwait
cmpsl
idivl
xchg
ret
xchg
imul
das
leave
outsb
pop
pop
iret
push
iret
jp
imul
add
xor
hlt
repnz
mov
outsb
out
xchg
sub
fsub
rol
jg
and
dec
dec
inc
imul
xchg
ja
mov
or
stos
adc
pop
lea
int
push
adc
sbb
shll
add
out
decl
imull
pop
imul
ret
rcl
gs
lret
nop
lds
mov
call
in
push
xor
fisubl
mov
jno
sbb
inc
mov
xchg
add
sbb
shlb
mov
arpl
pop
test
insl
pop
clc
xchg
into
xor
mov
rcpps
dec
or
pop
mov
push
out
scas
movsl
addr16
cmp
pushf
sub
xchg
decb
cmc
jge
sbb
xchg
jb
lcall
fnstsw
repnz
sbb
jae
sbb
mov
xor
add
test
in
add
xchg
adc
xlat
xor
xor
dec
jns
pop
rorl
adc
xlat
rorl
int
in
sub
data16
aam
push
sbb
add
sti
into
sahf
adc
and
movsb
mov
add
sbb
or
lret
dec
test
fisttps
or
adcb
xor
rorb
mov
clc
int3
xor
lret
or
lds
jl
pop
into
mov
jmp
in
je
test
roll
dec
in
mov
int3
jmp
push
sub
inc
cli
mov
dec
dec
or
fimuls
cs
mov
inc
or
mov
adc
or
fldl
test
sti
stos
mov
aaa
mov
pop
dec
jo
cmp
jle
ds
insb
repnz
lods
mov
push
into
jmp
fists
jb
loopne
dec
xchg
jge
call
push
shrl
lock
push
mulb
inc
sub
hlt
and
xchg
les
add
xlat
test
push
sub
idivl
pop
shll
aas
adcb
xchg
sub
popa
jmp
test
in
jg
dec
lea
rorb
lods
imul
inc
inc
lahf
mov
out
jle
push
push
and
pop
clc
and
es
mov
xor
pop
dec
push
addl
pop
gs
xchg
xor
mov
sbb
push
cmp
xor
dec
sbb
mov
insl
in
jmp
in
sti
cmp
cltd
test
in
mov
pop
mov
test
push
ljmp
repnz
jmp
pop
ja
andl
xchg
fwait
adc
pop
pusha
pop
dec
ljmp
es
jle
rcll
mov
adc
push
out
loop
les
inc
cwtl
jno
int
mov
cmp
rcrb
inc
jae
xchg
add
or
call
sub
cmp
iret
xor
pop
cmp
outsl
aad
outsb
inc
pop
bound
jl
cmp
lods
mov
imull
je
pusha
mov
out
jne
out
pusha
iret
fisttpll
sbb
insb
pop
or
lcall
fistl
cmp
pushf
ljmp
insl
jg
lret
stc
aaa
jge
and
std
cmp
add
inc
or
das
and
pop
addb
pusha
pusha
adc
aaa
es
stos
add
out
cmp
or
push
mov
scas
sti
leave
scas
mov
sub
int3
mov
xchg
shrb
cld
nop
pop
xor
inc
adc
cli
fsubrs
sbb
adc
enter
adc
xlat
push
add
mov
pop
shlb
lods
enter
in
lret
mov
imul
cwtl
ljmp
xor
fistps
adc
xchg
push
jmp
push
push
mov
scas
scas
inc
in
shll
test
mov
addr16
scas
adc
jnp
pop
stc
sti
in
dec
ret
je
enter
and
cmp
lds
mov
out
xor
je
cmp
ret
cmp
dec
sub
sbb
shr
jae
ffreep
cmp
test
subl
ds
stc
std
fldcw
mov
mov
inc
out
mov
loopne
shll
int3
add
or
rcr
ljmp
insb
xchg
cmpsb
fnstsw
sub
and
xchg
cmp
add
outsl
push
ljmp
cmc
rcll
hlt
insb
movsl
inc
mov
lea
inc
add
pop
mov
cmp
xor
sbb
je
inc
jbe
aaa
cwtl
in
stos
outsl
scas
push
and
push
cmp
adcb
fbld
fcoml
sbb
push
push
mov
sbbb
add
cmpsb
inc
mov
lock
sbb
shll
pop
xchg
aad
cmpb
inc
loopne
mov
push
mov
push
cwtl
pop
cmp
fidivrs
add
sub
push
or
pop
and
ret
pop
and
xchg
stos
sbb
pusha
outsl
pop
dec
fbld
adc
call
mov
xchg
ud1
orl
lods
nop
inc
pop
loopne
mov
lret
mov
data16
sbb
mov
dec
mov
sbb
rorl
cmpb
jle
movups
push
nop
mov
cli
out
shrb
clc
jno
ds
xor
push
jo
sar
sub
into
ljmp
hlt
dec
inc
or
xor
fmulp
inc
test
stc
jmp
sbb
push
mov
inc
call
fisttpll
pop
lds
mov
pop
movsb
xlat
inc
mov
sbb
test
push
pop
xchg
pop
xchg
mov
push
push
add
out
mov
dec
enter
inc
push
xlat
dec
push
rcrb
cmpsb
aam
mov
rorl
insb
rcrb
ja
fisttpll
test
xlat
or
insl
rcl
das
pop
lods
lds
push
in
movsb
movb
cmpsb
dec
int
jnp
mov
adc
decb
cmp
adc
dec
mov
rcr
xchg
add
mov
in
jecxz
bound
xor
movsl
adc
or
lahf
add
orb
out
ljmp
xchg
int
and
xor
aaa
shlb
ja
mov
aad
fistpl
cmpl
in
rcrl
jnp
cmp
push
shll
cmp
or
in
mov
push
es
cmp
dec
push
lcall
sbb
xlat
nop
test
sbbl
and
ret
in
dec
inc
sub
xchg
call
in
xchg
or
es
jg
mov
fistpll
int3
pop
lcall
outsb
call
rorb
aaa
sbb
je
inc
aas
cwtl
push
add
int3
sbb
sbb
orw
inc
push
jge
rorl
and
sahf
cmc
not
insl
dec
daa
stc
dec
sbbl
add
xchg
inc
bound
fistps
and
out
nopl
repz
sbb
ret
jne
lock
push
cmp
push
and
jbe
sbb
mov
and
mov
sub
lds
icebp
sub
sbb
sbb
pop
dec
cld
push
sub
mov
ds
and
pushf
scas
fsubs
fildl
and
roll
stos
mov
test
mov
fisubl
call
mov
push
mov
out
and
dec
hlt
xchg
rcll
pop
ljmp
push
nop
pop
cld
loop
sahf
mov
cmp
inc
or
js
aad
rcl
xchg
push
jns
mov
lret
dec
mov
fs
jle
and
fildl
mov
mov
cmp
lods
shl
pop
pop
or
xlat
and
ror
popa
and
outsb
push
xchg
xor
cs
sbb
jo
outsl
arpl
fsubrl
and
or
in
mov
dec
mov
mov
push
mov
cmpsl
cltd
jecxz
push
mov
or
pop
jmp
in
pop
xchg
dec
arpl
push
and
jp
movl
inc
mov
shrl
jmp
inc
mov
sub
cli
push
sub
jle
fldcw
push
fldcw
lods
jg
pop
gs
xorl
aaa
gs
mov
xlat
in
add
sub
add
cmpsl
sarb
int
shrb
clc
mov
clc
addr16
or
sarl
hlt
xchg
ja
sti
xor
insl
popa
shlb
push
jp
idiv
sbb
mov
push
fisttpl
xchg
scas
jo
jo
xor
adc
xchg
xchg
lret
cli
scas
adc
ljmp
sbb
jl
mov
cmp
shrb
test
and
xor
and
cld
mov
repz
pop
stos
nop
mov
adc
push
or
xor
iret
sbb
mov
testb
xchg
fnsave
pop
lds
push
addl
sbb
nop
imul
gs
sahf
aas
add
stos
push
cmp
and
sub
sbb
mov
push
push
add
sbb
fs
jae
cmp
mov
andb
push
fwait
ss
mov
xchg
std
add
in
mov
xchg
stos
push
aad
dec
and
aaa
cmc
mov
dec
add
sbb
mov
xchg
mov
pop
addl
ss
add
in
aaa
lahf
pop
mov
mov
pop
sub
xor
mov
add
arpl
jbe
jecxz
inc
add
or
in
mov
loope
pusha
icebp
inc
pop
aad
adc
fnsave
iret
pusha
hlt
jb
adc
mov
das
outsl
popa
xor
test
enter
push
mov
outsl
ljmp
lret
pushf
mov
push
add
ljmp
insb
pusha
fcoms
mov
dec
out
mov
push
daa
sahf
je
js
dec
push
pop
add
jb
dec
clc
xor
subb
lret
push
inc
sub
pop
xchg
lcall
mov
inc
xor
push
adc
dec
inc
jecxz
das
push
std
lcall
jl
cmp
adc
test
add
subb
push
pop
xorl
dec
repnz
mov
loope
or
imul
mov
cmp
cmpsb
repz
iret
in
fldenv
andl
and
jecxz
test
aad
in
xor
gs
shlb
stos
and
leave
in
out
and
sahf
and
pop
cmpsl
pop
lcall
jno
mov
imul
push
mov
sub
test
add
andb
xchg
pop
cwtl
lods
adc
call
out
and
and
iret
and
jl
xchg
inc
mov
jns
mov
loope
inc
mov
jmp
call
pop
mov
into
push
adc
out
dec
mov
dec
adc
sbb
mov
mov
mulb
test
xor
mov
add
sahf
sub
nop
push
in
xchg
xchg
das
out
sbb
xorb
out
or
adc
sbbl
inc
pusha
mov
in
push
jg
cmp
add
popf
or
lcall
int
and
push
pop
stc
in
sub
pushf
aad
out
push
xchg
jo
outsl
mov
sbb
adc
dec
adc
sbb
fistpll
push
push
xor
fstpl
ret
rcrb
divl
mov
xchg
and
and
mov
cmp
stc
dec
cmp
sub
mov
cmp
xor
int
dec
inc
mov
movsb
sub
fidivrl
lcall
push
or
cmp
add
subb
xor
or
cmp
hlt
cld
jmp
add
mov
fmull
cmpsl
and
cltd
popf
outsb
sub
or
cmp
clc
insb
and
call
cmp
ds
das
in
orl
mov
rcl
dec
sbb
cmp
lods
xor
adc
add
insb
inc
imull
push
dec
mov
xchg
xchg
mov
in
inc
inc
xor
and
and
cli
add
push
decb
pop
jle
popf
imul
pop
scas
or
mov
jae
stos
ret
mov
repz
inc
mov
xlat
divb
mov
popa
pop
sub
test
call
push
mov
jbe
loopne,pn
scas
sti
ljmp
in
pop
lahf
in
mov
faddp
dec
aad
in
insb
insb
jp
mov
dec
addb
cmp
imul
cmpsb
cmpsl
dec
fldl
jne
in
lcall
sub
push
daa
jnp
popa
cmp
movsl
cmc
mov
nop
fs
adc
and
or
rclb
imul
pop
pushf
mov
dec
leave
jle
movb
popa
mov
leave
sub
jnp
lret
mov
add
xchg
xchg
mov
sbb
mov
push
je
or
mov
addr16
sahf
push
or
pop
xor
mov
or
sti
loope
sbb
out
mov
pop
ja
mov
mov
or
sbb
mov
mul
mov
add
sahf
jge
push
out
stc
out
sbb
shll
xchg
jb
lcall
xchg
jae
cmp
jmp
cmp
jns
push
loope
icebp
outsb
add
push
jo
jmp
in
jbe
add
sbb
xor
xchg
jmp
jns
sub
sti
fucomp
mov
aam
inc
pop
sarb
cmpsb
jno
push
pop
ljmp
mov
jo
rorb
mov
mov
pop
add
jmp
test
jne
insb
xchg
in
mov
pop
shr
jmp
or
daa
mov
or
out
mov
pop
lds
sbb
imul
mov
sub
mov
out
sub
inc
mov
mov
test
inc
popa
cmp
xlat
mov
repz
mov
je
adc
outsl
mov
push
and
jle
scas
clc
lds
neg
nop
jnp
mov
fcompl
add
aas
jb
psrld
repz
mov
in
daa
sub
dec
sbb
or
fisttps
inc
pop
rclb
cmp
repz
cmpsb
fyl2x
push
fstpl
imul
cmp
stc
paddq
xchg
movsb
shrl
mov
stos
gs
mov
push
shlb
pop
nop
jge
jbe
mov
inc
shlb
cmpsl
sti
and
nop
xchg
arpl
adc
or
push
rclb
sbb
cwtl
xchg
mov
cmp
and
xchg
cmp
xchg
cmp
add
xor
test
aam
pop
in
shll
lgs
mov
mov
clc
arpl
or
add
repnz
fcompl
dec
inc
jp
lods
movsl
lods
out
mov
movsl
push
mov
rcl
std
call
mov
xchg
nop
aam
repz
iret
lahf
jmp
divl
insl
inc
and
lods
mov
add
push
mov
dec
sbb
fnsave
or
repnz
mov
test
cmp
pop
add
out
mov
inc
lock
out
sbb
pop
xor
imul
rorl
fistps
or
and
stos
sbb
push
ljmp
sub
xor
out
mov
pop
call
and
das
sbbl
insb
addr16
imul
jno
and
scas
or
int3
repz
loope
mov
sbb
out
and
push
movsl
leave
dec
push
in
divl
test
fadds
mov
lret
out
cmc
fs
push
clc
push
ljmp
ss
dec
sbb
stos
lcall
dec
xlat
mov
push
push
data16
mov
or
xor
sub
mov
in
ror
into
xor
mov
aas
repz
adc
repnz
sti
loop
lea
and
ficoml
mov
sbb
in
mov
push
and
les
jns
adc
jmp
test
xchg
or
pop
div
out
mov
sbb
add
mov
mov
shll
xchg
cmpb
neg
jns
mov
lods
or
das
lahf
sub
or
mov
out
push
push
repz
test
push
inc
mov
pop
loope
ljmp
clc
outsb
sbb
mov
adc
adc
mov
loopne
mov
mov
stos
outsl
fisubl
xchg
and
xchg
mov
dec
pop
pop
loop
mov
adcb
push
mov
es
xchg
xchg
lret
add
sahf
orb
push
push
incb
push
push
stc
lret
push
sub
out
adc
xchg
ds
sbb
insl
test
adc
imul
xor
mov
xchg
xor
xchg
sub
test
dec
test
ss
xchg
mov
xchg
push
loop
in
filds
sbb
rep
lea
orb
mov
jg
mov
mov
mov
sbb
mov
xchg
cmpsl
or
sub
test
int3
loope
jl
rolb
addr16
add
pop
jle
fs
inc
pop
imul
cmp
outsl
clc
into
sbb
es
aad
in
in
and
sbb
mov
mov
mov
psrlq
or
dec
addr16
in
lods
xor
sbb
adc
sbb
and
xchg
jmp
int
add
sbb
andl
lahf
imul
inc
out
xor
or
dec
cli
imul
dec
sub
xchg
sbb
lret
jns
imul
mov
mov
addb
push
adc
mov
stos
ret
mov
add
nop
adc
aad
mov
rclb
push
dec
mov
fldcw
inc
jge
xchg
loopne
out
test
dec
repz
jno
push
addr16
fiadds
or
lock
xorl
xorl
clc
dec
je
insb
cld
add
addr16
fmull
mov
mov
scas
clc
mov
sub
pop
push
or
mov
popa
daa
xchg
je
je
sbb
mov
leave
sbb
fsubr
cmp
mov
dec
ror
xchg
xorl
mov
out
sub
test
mov
mov
shl
das
testb
fdivr
dec
mov
cmp
lahf
dec
mov
sbb
fmull
mov
sub
mov
xchg
pop
mov
dec
lahf
cli
pop
stos
int3
outsl
lock
rcll
and
fsubrl
out
subb
clc
outsb
and
scas
dec
jp
testb
loop
xor
mov
cmp
imul
imul
sub
hlt
and
fs
imul
shl
inc
dec
test
sub
adc
fnstenv
fwait
std
insl
mov
sub
js
adc
and
xor
dec
in
mov
dec
mov
and
push
inc
cmp
or
les
std
imul
mov
dec
pop
and
nop
scas
cmp
das
mov
mov
xor
adc
iret
xor
lret
mov
inc
shlb
xchg
push
mov
jmp
jne
sar
jb
ret
fsubrl
inc
sub
add
ja
hlt
dec
jge
or
ficoms
in
add
push
mov
ds
and
cmp
outsl
into
mov
rol
lods
sub
loope
sbb
sarl
fdiv
lds
dec
jno
jbe
jns
adc
sub
dec
int3
pop
fsts
add
fistpl
and
imul
and
jbe
mov
notl
pop
imul
lods
daa
jne
cs
or
push
shll
ja
ljmp
xchg
pop
clc
or
add
shrb
pop
sahf
sbb
ja
clc
sahf
cmpb
arpl
nop
cmpsl
mov
ljmp
in
cwtl
or
push
jge
and
sbb
dec
sbb
stc
push
cmpsl
cld
popa
pop
inc
rclb
out
lea
pop
jg
in
aaa
pop
sahf
mov
stc
adc
adc
ret
aas
mov
mov
pop
inc
mov
pushf
test
mov
inc
popa
pop
outsl
or
jno
out
and
add
ja
inc
sbb
aaa
dec
jns
outsl
sbb
sub
into
push
repnz
push
je
lds
roll
mov
insb
loope
add
std
or
les
daa
lea
clc
icebp
lock
leave
mov
add
jns
jp
mov
cmpl
div
les
dec
out
mov
negb
je
popa
arpl
lret
loop
hlt
imull
cmp
mov
xor
sub
mov
icebp
jo
je
test
addr16
imul
dec
ds
nop
or
jg
pusha
sbb
xor
into
in
int
lea
rol
cltd
push
stc
and
xchg
das
pmaxsw
je
adc
or
mov
cmc
pop
mov
imul
btc
sti
outsl
xchg
enter
aam
dec
sbb
push
repnz
movl
xchg
shlb
loopne
std
stos
lods
stc
push
inc
pushf
jno
mov
fisubs
pop
xchg
out
dec
mov
sub
fsubrs
cs
jb
xlat
xor
push
mov
cltd
inc
cld
adcb
sbb
xchg
in
dec
mov
sbb
in
mov
mov
movzbl
sbb
jb
adc
dec
sub
les
lret
push
push
mov
outsb
lahf
jns
fdivrl
and
mov
cld
leave
int3
xor
push
xchg
out
ss
push
in
daa
add
push
mov
ds
inc
orl
push
into
insb
push
jmp
das
mov
pop
jno
fndisi(8087
mulb
push
mov
mov
test
adc
pop
lret
fadd
jae
call
ror
mov
xchg
jmp
outsl
ss
xor
pusha
ss
jns
shll
outsb
in
sub
iret
cmp
sbb
mov
mov
sub
jp
sbb
dec
xchg
fisttpll
into
data16
push
mov
sub
test
push
stos
stc
and
cwtl
jmp
lret
cmp
iret
pushf
xor
sahf
mov
mov
mov
mov
xor
faddl
movsb
mov
pop
sub
add
daa
and
fisttpl
mov
popa
jmp
adc
pop
mov
mov
sbb
int
xor
add
xlat
jp
add
sahf
mov
popa
inc
push
or
cli
sahf
out
sub
jmp
jle
sarb
je
fildl
pushf
jne
aam
lock
addr16
leave
add
jg
push
inc
aad
jecxz
fdivr
aad
subl
pushf
cmp
loop
pop
loop
insb
mov
jl
inc
jae
jmp
cltd
lds
sub
hlt
out
push
test
shl
or
je
adc
jle
mov
dec
and
nop
dec
mov
mov
mov
or
rol
adc
lods
aad
movsl
fdivrl
neg
push
or
in
xor
dec
ret
jle
or
pop
sbb
fiaddl
mov
test
mov
dec
mov
adc
xchg
and
out
dec
lods
or
xor
mov
push
fcoms
ljmp
add
cwtl
jp
movb
xchg
outsl
aam
add
pop
jns
js
cmp
insb
pop
gs
xchg
repz
fs
cmp
std
xchg
sbb
arpl
sahf
xlat
adc
sub
int3
popa
sub
out
std
push
xlat
pop
dec
cmp
xor
inc
js
push
add
mov
int3
jne
in
inc
les
xor
les
cmp
repz
pop
xchg
not
arpl
pop
or
add
jmp
sbb
xchg
das
cmc
mov
movsb
push
add
fsubr
sub
test
in
and
ja
jbe
dec
inc
xchg
xor
cmpsl
lret
cmp
dec
push
test
into
fdivl
add
movl
pop
movsl
mov
dec
mov
cmp
pop
ret
xchg
dec
fdivrl
push
mov
out
pop
or
lret
stos
mov
enter
fstps
pop
cmp
sub
sahf
scas
mov
out
xchg
popa
mov
fs
dec
vpcomuw
lret
jmp
push
ds
push
and
outsl
stc
aas
adc
lret
inc
dec
push
sbb
je
push
fidivs
jge
push
and
xlat
jb
test
xchg
stos
scas
dec
inc
cmp
je
ror
sbb
or
ljmp
ljmp
mov
aad
add
push
mov
int
add
cld
cs
imul
out
movsb
inc
mov
mov
je
fcmovnbe
aaa
inc
fwait
push
and
nop
pop
js
mov
pop
cmc
into
pop
cmp
mov
cmc
in
movsb
bound
mov
in
repnz
invd
xchg
xor
rorb
pop
dec
fcoml
fidivl
int
and
jp
sub
adc
imul
jmp
sbb
or
in
clc
dec
cli
loopne
or
push
iret
push
pop
rcll
iret
jge
pop
mov
and
popf
adc
sub
aam
pusha
sub
add
pop
mov
int3
outsb
movsl
jge
push
pop
das
mov
or
inc
sbb
ficoms
adc
add
xor
inc
jg
mov
insl
sbb
mov
lcall
ds
mov
pop
insl
sbb
dec
mov
clc
push
sub
lcall
bswap
movl
sbb
push
int3
outsl
pop
add
mov
mov
dec
pop
arpl
add
shl
dec
inc
push
outsl
mov
and
xchg
nop
and
icebp
or
push
inc
cmpsb
push
sbb
shl
lret
or
or
inc
sbb
adc
dec
jg
enter
pop
call
xchg
rorb
xlat
sbb
sahf
add
and
push
xlat
cli
xor
ja
or
or
add
ljmp
xchg
xor
adc
or
or
jecxz
mov
sbb
repnz
stc
push
in
addr16
lds
sub
cwtl
mov
mov
stos
jle
test
pop
xchg
out
nop
lods
mov
xchg
shlb
mov
in
xchg
mov
jg
shll
inc
xchg
clc
inc
lds
lea
faddl
clc
pop
sbb
leave
andl
fcmovbe
add
cmpsl
mov
sbb
lahf
xor
mov
pop
shrb
jl
mov
add
imul
adc
mov
or
jne
lods
or
shl
or
sub
cmpsb
jge
inc
movsl
pop
mov
xchg
inc
das
movsl
stos
mov
repz
pop
jno
das
and
adc
sbb
xchg
in
inc
dec
andb
lahf
xlat
mov
dec
xor
arpl
loop
icebp
mov
add
add
pop
lds
mov
push
mov
push
fldl2t
dec
inc
loope
mov
pop
repz
hlt
aam
push
mov
inc
arpl
out
aas
shlb
sbb
xchg
arpl
sbbb
rolb
shlb
loopne
add
sbb
loop
outsl
outsb
out
sbb
popa
cmpl
cmp
and
and
shl
cmp
xor
xor
jl
adc
mov
sub
dec
repz
xchg
jge
jp
test
sub
imul
out
outsl
adc
jl
iret
sbb
stos
xchg
in
mov
xor
jo
dec
lds
push
arpl
push
cmpsl
aad
inc
outsb
push
test
sti
sub
dec
fs
push
out
fwait
in
sahf
shl
jns
xorl
hlt
inc
cvtps2pd
cmpsb
repz
and
testb
lock
pop
in
and
shlb
push
push
cli
jnp
sahf
and
movhps
rolb
cwtl
xchg
cmp
ret
or
cmp
fisubs
dec
fs
sarb
push
arpl
imul
jmp
dec
adc
mov
push
jmp
addr16
addl
jmp
inc
test
jae
popf
mov
jecxz
lock
jns
dec
faddl
mov
lock
repz
mov
fldl
sbb
aad
xchg
sarb
fldcw
jae
loope
and
repz
mov
push
or
xlat
loop
mov
sahf
call
dec
stos
xlat
push
int3
pushl
adc
dec
sbb
mov
shlb
shll
sub
test
imul
xor
mov
fcomps
aas
pusha
inc
imul
pop
enter
xchg
add
inc
or
or
or
outsl
and
or
mov
ret
scas
push
ss
leave
xchg
loop
in
fwait
test
or
dec
call
jae
inc
imul
or
addr16
jp
xor
cmp
je
and
jl
xchg
outsl
mov
cmc
sbb
outsl
std
xor
sbb
adc
xchg
mov
cmp
sub
shrb
inc
scas
or
cs
jge
inc
orb
jae
aad
jo
cli
mov
fnstcw
sbb
test
clc
xchg
movsb
imul
push
decl
sub
imul
aaa
outsl
test
aas
cmpsl
adc
std
lods
adc
jmp
aas
adc
and
pop
cmp
mov
inc
roll
xchg
mov
adc
dec
fucomip
in
push
sub
sbb
hlt
sub
ret
mov
fwait
mov
test
popl
test
dec
les
sub
dec
insl
mov
inc
rclb
js
andb
sub
dec
rcll
mov
and
cwtl
mov
outsl
mov
dec
jno
sub
sbb
nop
dec
negl
xor
stos
dec
add
sbb
add
mov
loopne
shlb
jp
xor
xor
dec
lods
mul
das
xor
or
mov
ss
nop
aam
test
dec
jp
push
cmpsb
sub
test
imul
adc
fldlg2
daa
aad
cmpsl
mov
insl
invd
mov
add
cmp
xchg
mov
lahf
in
mov
cli
adc
fnstcw
scas
dec
gs
push
test
mov
clc
aaa
push
sub
pop
sub
das
fs
aas
add
or
cmp
les
imul
mov
inc
sti
or
outsl
lods
aaa
inc
imul
and
jb
lahf
call
inc
push
push
xor
sbb
push
in
mov
das
sub
lret
je
js
negb
out
sbb
movnti
dec
sub
cmpsb
rorl
data16
js
outsl
lahf
movsl
or
add
nop
pop
jb
pop
xchg
mov
push
jne
int3
test
xchg
sbb
sub
sbb
mov
push
lahf
inc
push
adc
and
sub
lods
adcl
jo
mov
rcr
lcall
testl
push
sbb
outsb
std
xchg
jle
xchg
out
mov
sub
mov
outsb
cmpsl
adc
cli
cmpsl
mov
mov
scas
dec
jns
or
mov
out
pop
addr16
inc
lea
mov
cmp
dec
into
xchg
es
fsubrl
pop
fldl
out
sbb
adc
or
pop
outsb
daa
cwtl
pop
out
out
pop
shl
or
xchg
psrlw
mov
push
inc
jle
cmp
shll
dec
adc
inc
cmp
loopne
scas
cmp
lcall
test
pusha
push
dec
xchg
ud0
scas
adc
das
stos
lahf
fiadds
pop
or
cmpsl
shl
mov
push
icebp
movsl
clc
jp
push
mov
rcrl
mov
jno
and
int3
shr
xor
sbb
jb
xor
inc
pusha
push
pop
push
gs
xchg
pushl
mov
mov
dec
jno
cmp
in
leave
push
mov
mulb
pop
iret
mov
repnz
jecxz
scas
aad
sbb
icebp
aad
sub
test
lret
std
nop
pop
mov
jecxz
mov
jg
iret
push
and
loope
nop
sbb
movsb
out
add
push
xor
adc
les
pop
pop
push
sbb
dec
adc
ficoml
mov
dec
out
fiaddl
mov
stc
sbb
inc
ds
in
and
cli
jnp
lret
push
mov
idivb
ja
vmwrite
sbb
push
repz
imul
xor
jmp
int3
and
mov
pushl
stos
mov
lret
icebp
sahf
std
loope
test
inc
push
jbe
and
pop
icebp
jns
rcll
or
lds
adc
aad
push
add
and
loop
in
test
mov
or
insl
cmp
enter
pop
out
push
mov
sub
pushf
and
jb
sbb
mov
es
and
sahf
sub
cli
shl
fildl
in
stc
mov
loopne
add
ljmp
inc
sbb
dec
jb
adc
push
dec
jnp
xlat
or
insl
push
sbb
add
pop
out
in
lret
addl
jp
cli
sub
or
scas
cmp
adc
adc
mov
testb
jmp
pop
sub
outsl
pop
fistpl
aam
sub
cmpl
iret
dec
push
dec
sbb
repz
sbb
mov
scas
test
lcall
xor
mov
adc
out
rclb
sbb
add
xchg
je
lods
xor
into
scas
out
mulb
lods
xor
dec
pop
mov
iret
mov
mov
mov
out
sbb
mov
mov
je
imul
mov
inc
sbb
dec
cmpsl
cmp
insl
dec
dec
xor
fcmovnb
ret
lock
ret
push
je
xchg
int3
or
xchg
lea
cmc
adc
movsb
mov
push
leave
dec
add
js
adc
fdivrs
or
shlb
push
mov
lret
out
pop
push
lock
mov
jmp
mov
push
mov
xor
movsl
add
int
add
push
sar
mov
cmpsb
jecxz
cmp
dec
push
lea
sbb
sub
inc
adc
aaa
push
add
test
sbb
es
aam
jmp
or
mov
adc
sbb
pusha
nop
pushf
loopne
fistl
testl
sbb
dec
imul
xchg
in
push
cltd
sbb
xor
stc
mov
insl
fcmovnu
pop
rorl
imul
or
xlat
popf
aaa
ja
push
push
ret
xchg
lods
movsl
cmpsb
and
nop
addr16
ffreep
inc
stos
out
adc
pop
sub
push
pop
cmpsl
cmpsl
insl
adc
arpl
cmp
loope
test
fmulp
mov
cmp
movb
cwtl
push
ja
adc
lcall
jg
outsb
stos
popa
and
ljmp
rclb
push
cmc
add
or
clc
ret
mov
rcrb
cmpsl
lahf
push
jno
cmpsl
aaa
aad
pop
push
push
mov
les
push
cmp
daa
movsb
jp
dec
cld
loope
mov
mov
dec
xlat
je
movsb
dec
inc
add
lret
nop
jo
cmp
pop
negl
jecxz
dec
sub
insb
cmpsl
mov
in
andb
jnp
sub
scas
lock
idivl
sub
sahf
and
test
add
mov
push
mov
adc
test
jbe
setnp
and
cmp
adc
sbb
jge
into
ds
adc
or
jne
or
inc
xor
xor
out
pop
xor
leave
xchg
fs
call
leave
icebp
inc
sbb
inc
movsb
push
aad
jnp
movsl
push
push
inc
insb
xor
xchg
fildll
mov
mov
cs
xchg
xor
pop
mov
pop
push
pushf
lahf
adc
cltd
insb
sbb
ljmp
xchg
sti
mov
dec
test
testb
cs
mov
mov
in
jae
sub
and
push
mov
cmp
fwait
lea
mov
shr
imul
sbb
movsl
jmp
mov
sub
sbb
jmp
shl
and
testb
scas
insb
mov
dec
and
sbb
push
jne
fsubrp
push
add
int
pop
loop
shlb
cmp
adc
pop
notb
rolb
std
pop
addl
loopne
dec
test
outsb
dec
dec
test
pop
xlat
test
xchg
out
pop
push
jg
mov
push
cld
lea
jmp
cli
dec
cli
dec
iret
add
pop
mov
or
fwait
cmp
dec
xor
sub
push
and
adc
adc
xor
jbe
push
pop
mov
stc
lods
adc
jle
addr16
inc
out
lret
add
and
ficompl
or
add
lret
fidivrs
push
inc
in
and
sub
out
dec
imul
xor
sub
dec
mov
push
add
stc
in
cld
rcll
adc
xchg
leave
fidivrl
mov
xor
push
xor
jne
xchg
movsl
or
gs
cmp
sub
cwtl
aaa
add
lock
sbbl
mov
lds
cwtl
push
adc
xor
inc
push
or
add
test
in
sbb
aad
add
push
push
add
and
pop
popa
mov
test
cmpsl
and
dec
or
imul
sub
or
adc
dec
add
dec
jmp
jae
add
push
jnp
decl
cs
adc
aad
fnstenv
das
mov
mull
mov
inc
mov
or
inc
jmp
std
mov
jmp
adc
shl
push
pop
adc
out
inc
cmp
loope
jns
xor
jg,pt
lock
push
or
inc
mov
sub
push
call
cmp
in
cmp
cmpl
ljmp
les
int
pop
lcall
push
fwait
std
daa
arpl
dec
stos
inc
lea
fstpt
jmp
cwtl
sbb
cwtl
dec
adc
out
dec
jbe
adc
push
push
jg
xchg
jg
mov
xchg
popf
imul
flds
sub
pop
call
sbb
xor
mov
and
and
or
in
daa
or
xor
dec
loopne
xor
lods
adc
adc
lock
push
mov
shl
pop
jl
and
js
outsb
and
shlb
loope
xchg
int3
into
mov
inc
fxtract
pop
fyl2xp1
cmp
scas
cmpb
loop
jae
lock
lahf
mov
sbb
or
or
dec
lea
jne
inc
psubsb
sti
pop
test
mov
shrb
or
mov
scas
sub
call
push
dec
mov
pushl
adc
jbe
loopne
popf
pop
insl
push
fldl
jge
sub
push
popa
int3
pop
sbb
out
outsb
inc
jp
push
movsl
nop
call
shr
mov
push
jle
sti
jb
adc
sub
cltd
aam
or
mov
xchg
pop
rcrb
lods
sbb
loope
out
ljmp
loopne
cmpsl
or
fldt
mov
mov
jp
jle
ja
inc
mov
pop
xchg
mov
faddl
xor
cmpsb
xor
sbb
mov
inc
mov
test
fsubp
shl
pop
cmp
mov
addl
and
aas
test
mov
or
and
inc
daa
sub
mov
pop
add
cmpb
ljmp
mov
pop
push
fwait
nop
movl
mov
mov
in
and
popa
pop
xchg
shrb
insb
hlt
ds
mov
cmp
pop
shl
iret
cmpl
ljmp
mov
mov
jbe
imul
mov
dec
sti
xchg
inc
inc
pop
popf
or
jo
movsl
jbe
bound
jle
shlb
mov
sbb
outsl
mov
fimuls
daa
call
xor
imul
inc
sbb
or
mov
pop
cmp
mov
xor
sahf
dec
push
xchg
loopne
dec
scas
sub
addr16
xchg
xchg
xor
dec
jl
mov
arpl
mov
fldpi
mov
push
mov
mov
sti
aam
add
pop
cmp
add
ret
cmp
push
loop
xchg
pop
xorl
cwtl
mov
scas
lods
and
fstpt
lret
jmp
lret
cs
rcrl
jb
notl
xchg
cltd
lret
jo
cmp
mov
sub
cmp
inc
push
pop
adc
pop
hlt
scas
xlat
adc
pop
push
pop
pop
cmp
leave
push
inc
inc
out
repnz
pop
lret
pusha
pop
xor
jnp
scas
sub
add
ds
pop
push
andl
and
jg
inc
mov
lea
into
dec
mov
rcr
test
dec
ss
lds
sub
push
mov
orb
xlat
sbb
adc
loop
jo
call
pop
popa
or
adc
into
stos
mov
jg
mov
sub
aad
push
adc
lds
jns
inc
sub
push
popa
and
inc
mov
xor
stc
xchg
rcl
xchg
movb
in
es
out
jbe
sar
incl
jmp
jnp
pop
loop
fistps
rorl
pop
xlat
mov
aam
mov
cmpb
bound
sub
fistl
fmull
hlt
lret
inc
push
insl
pop
pop
adc
inc
xor
sbb
mov
jb
lods
out
pop
add
xchg
or
sub
rol
mov
adc
mov
scas
adc
or
pop
dec
and
into
mov
mov
dec
xchg
xor
jecxz
mov
hlt
leave
adc
mov
sbb
fwait
sub
inc
inc
mov
test
test
stc
sti
pop
push
mov
push
mov
orb
hlt
xchg
out
leave
repz
inc
leave
mov
nop
cmp
jae
push
adc
add
fnsave
fbld
add
push
xchg
inc
mov
mov
inc
in
movq
sub
lds
add
add
jecxz
lret
or
andl
push
mov
into
add
adc
js
outsl
push
push
jno
pop
sahf
das
repz
add
cmp
movsl
mov
mov
popf
movb
and
pop
sub
enter
movb
aas
sub
fildll
push
imul
mov
or
and
das
or
or
adcl
cs
fistl
adc
aaa
ss
ljmp
out
sub
push
pop
mov
fxch
out
sbb
push
sub
inc
sub
xor
or
enter
add
push
sbb
je
xor
jle
aam
xchg
adc
add
pushf
push
push
adc
xchg
mov
scas
cwtl
mov
adc
jp
pop
mov
sbb
cmp
fs
sbb
jmp
int
shlb
aaa
or
hlt
flds
dec
iret
jge
jmp
xchg
fistps
inc
inc
jecxz
push
incl
lea
fldenv
lds
ljmp
xchg
lcall
xor
cli
int3
add
imul
cmp
and
pop
mov
lods
sub
xchg
adc
xchg
or
push
and
in
and
stos
pop
sub
dec
loope
push
fdivrs
pop
or
shrl
mov
aaa
xlat
test
nopl
out
subb
cld
jns
dec
lcall
xchg
or
inc
or
mov
xchg
das
push
sub
jmp
push
xor
loope
int3
and
outsl
mov
jbe
mov
add
sub
jbe
xor
call
cli
fwait
dec
lock
aam
lret
test
xor
sbb
mov
jl
jae
sbb
cld
movsl
jecxz
jns
gs
and
xchg
in
subb
pushf
sarl
in
repnz
sub
enter
lods
xor
stos
clc
pop
aaa
add
cli
adc
pop
adc
inc
jmp
mov
js
push
mov
xor
push
ja
push
fsubp
sub
add
push
sbb
dec
adc
or
aad
aas
xchg
pusha
fs
xor
sarb
leave
mov
clc
in
push
mov
jmp
pushl
into
add
mov
xchg
dec
mov
or
lret
jl
in
loope
adc
cmpsl
add
xor
dec
outsb
ja
dec
pop
push
adc
pop
push
ficomps
arpl
stc
mov
inc
arpl
add
pop
xchg
int
mov
iret
fldl
setg
or
xor
xor
sbb
iret
loope
push
cmp
scas
jns
repnz
test
or
lods
and
mov
xor
add
push
cmpsb
sbb
push
aaa
rorb
movsb
xchg
loopne
loopne
xchg
pop
fistpl
fildl
insl
sub
pop
jns
icebp
scas
cs
xor
sbb
inc
sub
mov
jle
and
outsb
dec
cmp
fisttpl
cmp
fdivrs
cmp
sbb
paddusw
dec
inc
sbb
mov
xchg
push
mov
jg
jl
cmp
and
xchg
push
fisubs
aad
jle
rclb
sbb
mov
pop
xor
lods
insb
mov
xlat
inc
rcr
hlt
fisubrs
mov
pop
mov
int
sub
push
repnz
arpl
popf
test
xor
sub
add
lret
mov
xor
sti
fcom
popf
dec
repz
ficompl
add
in
cld
lock
leave
inc
and
push
cmp
cmp
pushf
loope
or
in
cmp
xlat
int
jge
cld
in
xor
outsl
inc
xchg
popf
xor
movsl
add
cld
sahf
orb
std
xor
ss
or
insb
es
mov
cs
mov
inc
out
loopne
xchg
fistpl
sti
call
aad
fsubl
aad
add
cli
or
sub
push
sbb
es
ds
sarl
rcrl
mov
pop
sbb
rorl
mov
ss
xchg
push
aaa
into
sub
add
pop
stc
inc
add
lahf
add
or
mov
loopne
mov
cmp
clc
jns
cs
cmpsl
mov
jmp
push
xor
sbb
movsl
bswap
mov
mov
inc
or
mov
movsb
add
cmc
inc
fstpt
inc
xchg
mov
jne
call
sub
mov
lods
aaa
adc
inc
jno
lods
aam
call
fwait
pop
subb
xor
fstpl
and
xchg
out
xor
and
mov
add
adc
xor
repnz
push
cmc
frstor
rolb
xchg
push
adc
jns
mov
jns
mov
cmc
or
inc
int
mov
sub
add
rolb
popa
mov
iret
xchg
sub
inc
mov
mov
iret
push
fcmovnbe
add
movl
ds
sbb
and
mov
add
push
pop
sub
orb
popf
dec
iret
fdiv
adc
movsl
mov
sub
lret
mov
cmp
out
jg
imul
sbb
xchg
dec
jmp
xchg
ret
nop
add
inc
mov
icebp
aaa
fs
clc
or
sarb
lods
adc
or
sbb
push
shl
and
dec
sti
add
outsl
stc
aam
jno
pop
loopne
mov
xor
sarb
call
push
insl
iret
add
jmp
frstor
orl
xor
call
mov
push
aaa
push
dec
cmp
icebp
lods
mov
or
lods
xchg
sub
sbb
arpl
mov
adcl
les
lret
and
divl
scas
mov
cmp
push
sub
iret
jae
lods
enter
icebp
inc
popf
sub
mov
and
adc
xor
cmp
sbb
lock
fsubrs
mov
das
lods
cld
imul
xor
pop
inc
jo
or
adc
rolb
and
aaa
shll
xchg
gs
mov
int
out
je
pop
sub
ret
gs
lcall
dec
dec
cltd
mov
inc
cmp
and
xchg
push
bound
add
push
adc
mov
nop
jno
cwtl
outsb
inc
mov
sub
and
adc
pop
out
pop
lahf
cs
test
or
ljmp
insl
pop
test
scas
test
mov
xor
add
sbb
xor
jo
sbb
fnsave
out
mov
adc
xchg
dec
pusha
or
push
lret
xor
mov
and
fs
aad
xchg
jo
inc
aas
sub
mov
cmp
mov
sub
das
mov
into
aad
inc
ss
iret
mov
push
push
loopne
add
out
fs
mov
adc
stc
or
das
pushf
mov
js
ss
add
jmp
outsb
outsl
sti
cs
int3
test
das
lds
es
aas
adc
lock
fstl
repnz
sbb
fs
xor
les
fcmovne
das
xor
pushf
jns
mov
fst
aaa
clc
scas
dec
je
jmp
sub
loopne
sub
or
xchg
and
jmp
loopne
shll
pop
fisubrl
mov
int3
push
je,pt
mov
pop
lods
dec
popf
mov
loope
cmc
bound
pop
test
jecxz
or
xchg
adc
subl
mov
ljmp
add
pop
sbb
mov
jae
jbe
sub
and
gs
aas
std
add
mov
mov
inc
dec
mov
bt
add
push
hlt
xchg
dec
arpl
loopne
insl
aaa
out
add
mov
xor
xchg
mov
int3
adc
out
pusha
aam
outsl
out
jecxz
stos
je
imul
mov
scas
int
movsl
sub
mov
fsts
push
idivb
aad
dec
fistpl
xlat
xchg
mov
jmp
outsb
add
xor
in
movsb
int3
nop
pop
mov
in
lock
adc
push
pop
push
arpl
es
popf
push
aam
adc
adc
dec
xchg
mov
les
adc
outsl
adc
mov
leave
push
outsl
mov
xchg
jae
pop
inc
and
ljmp
nop
cmp
push
out
pop
dec
std
dec
add
mov
pop
add
xor
dec
cld
inc
adc
sbb
xor
push
cmpsb
fcomi
outsl
shrb
push
cmp
fwait
aad
sbb
dec
movsl
ficoml
in
sub
sub
mov
aas
dec
adc
aad
fcmovne
and
adc
push
and
cmp
and
mov
rolb
mov
mov
jmp
dec
sub
mov
mov
xchg
and
loopne
and
aad
cld
add
add
mov
lret
dec
js
inc
test
stos
lret
sub
imul
sbb
inc
inc
test
mov
lret
ja
jnp
outsl
mov
int
mov
lahf
ffree
fdivs
int
test
in
xor
addb
rol
lahf
adc
cmp
test
shr
jae
and
call
pop
push
jb
cs
lods
notb
jmp
or
cmpsl
pop
xorb
lods
bswap
int
mov
fptan
cwtl
icebp
mov
add
push
xor
sub
and
cmp
ficoml
imul
test
movsl
sar
rorb
sbb
jmp
add
std
xor
insl
jns
jg
fnsave
sbb
dec
sbb
push
mov
fcoml
jle
lea
leave
inc
inc
cmp
adc
adc
cld
ret
mov
mov
test
pop
dec
clc
jnp
out
popa
dec
sbb
sbb
xchg
xor
push
cltd
jecxz
test
xchg
and
mov
push
inc
fmull
mov
lahf
jle
out
jmp
jle
and
add
test
xor
clc
inc
shl
dec
xchg
rcrl
jmp
lods
mov
outsb
jle
js
test
test
sti
push
divb
aad
inc
jo
test
rsm
mov
inc
and
test
cltd
add
or
cmp
mov
cmp
lods
mov
mov
pushf
pop
or
iret
repz
mov
outsb
xchg
iret
enter
push
mov
outsb
inc
jns
fwait
mov
lret
sbb
movb
mov
call
push
xor
fisubs
lods
mov
mov
in
sbb
mov
mov
ret
scas
ds
ja
mov
fyl2x
sbb
add
push
orl
xchg
insb
xor
adc
insb
xchg
fstpt
sub
jbe
push
pushf
mov
and
out
aam
jns
cli
xchg
sbb
push
sarl
dec
jle
mov
in
lcall
js
mov
xchg
test
rorb
and
push
test
mov
sahf
ds
ja
shl
push
repnz
inc
fnsave
ljmp
shr
mov
out
pop
je
sbb
lock
mov
repz
stos
scas
push
sub
in
inc
dec
xorb
aad
mov
cmpsl
jno
pushf
dec
fsubrp
sub
cmpsb
or
int3
jl
push
xchg
jg
sbb
mov
aad
xlat
in
sbb
in
int3
dec
dec
repz
push
pushf
pop
gs
xchg
leave
xor
add
mov
popf
inc
je
inc
aaa
cmp
sbb
and
sar
add
loope
mov
pop
divw
dec
ljmp
cs
xchg
cli
scas
es
sub
ret
ficoms
sbb
into
daa
ja
mov
out
cmp
sbb
jbe
nop
inc
mov
mov
lcall
adcl
pop
icebp
and
lea
xlat
nop
sbb
mov
repz
dec
adc
and
mov
and
pop
pop
mov
loop
pop
add
sub
push
dec
jge
xchg
lcall
inc
cmc
mov
or
aad
test
adc
vpshufhw
add
rcrl
nop
ljmp
dec
int
lret
or
fidivs
lock
mov
jae
inc
dec
mov
scas
add
hlt
in
add
cmp
std
or
mov
mull
mov
xchg
push
fsubp
scas
fsubrp
daa
xchg
testb
cmp
ljmp
addb
sub
or
repnz
mov
movb
inc
mov
daa
mov
or
aam
adc
lods
jp
add
xchg
es
xchg
scas
insb
and
cmp
js
cld
jmp
or
sub
jp
mov
xchg
push
imul
ljmp
nop
hlt
je
inc
sbb
sbb
js
aaa
dec
jp
jle
adc
aad
out
mov
icebp
xchg
cmp
sbb
cmp
cmp
adc
sbb
out
dec
call
jb
ret
mov
rclb
push
out
pop
cmp
add
mov
dec
or
repz
pop
mov
stos
dec
mov
lret
js
jge
loopne
mov
pop
scas
out
rcr
and
xchg
and
insb
add
adc
sbb
imul
sahf
cmp
mov
add
cld
xor
inc
jecxz
icebp
and
jmp
ljmp
sbb
jp
jns
fdiv
adc
ds
cld
or
jl
in
cs
out
sub
xor
mov
outsl
in
lret
sub
inc
dec
stos
sub
xor
cltd
dec
mov
jg
xchg
and
mov
mov
sbb
sbb
fcomps
jne
xchg
push
movsb
push
out
aam
or
fs
das
test
into
jnp
daa
fisubs
adc
xor
cmpsl
ret
xorl
push
ds
push
into
loop
adc
or
sub
sbb
cld
pop
pop
push
iret
cmp
xchg
decl
loop
lret
sbb
cli
shrl
clc
mov
std
out
cwtl
jae
sub
sub
pushf
lcall
movb
int
roll
fmull
mov
add
jno
and
mov
sub
lds
push
iret
xor
xchg
out
mov
loop
daa
sbb
sub
jns
stos
mov
xchg
fcompl
inc
psubb
roll
divb
push
sub
das
pop
adc
push
popf
adc
mov
mov
bnd
jae
adc
fcomps
lcall
fcom
cmp
hlt
mov
sbb
or
push
aam
rcrl
out
sub
and
cmp
aad
add
jge
cld
cwtl
and
leave
std
xchg
or
icebp
insb
adc
or
mov
out
icebp
scas
aaa
pop
mov
or
jle
sbb
mov
lret
aam
add
mov
cs
fcom
xchg
sbb
push
adc
cmc
mov
outsl
out
das
adc
cmp
push
test
les
sbb
iret
fimull
stos
out
add
insb
insb
rdpmc
cmp
xchg
test
paddb
mov
sub
cmp
jnp
dec
insl
inc
jne
repz
pop
cmpsl
cmp
jns
int
lret
dec
insl
mov
jb
jb
dec
aad
filds
pop
adc
sub
std
xlat
test
mov
xchg
ret
mov
sarb
sub
jo
shrl
outsl
sbb
stc
or
cld
xor
stos
mov
or
ss
fwait
mov
lds
cmp
jo
inc
pop
xchg
or
xchg
lret
adc
push
adc
jmp
sub
shlb
test
out
inc
mov
leave
push
mov
xchg
cltd
inc
outsl
adc
dec
xchg
mov
mov
in
push
or
fdivs
ficoms
lret
jge
movsl
add
aaa
lahf
and
cmpsl
push
jne
inc
push
jne
out
push
pusha
subl
aad
jecxz
sub
insb
fs
xor
fsubl
dec
push
ljmp
out
adc
xor
enter
cmpsb
adc
jg
jne
push
sub
mov
inc
fstpl
cmpsl
out
pop
add
ret
scas
fldl
mov
out
cmp
push
out
fimull
out
push
jmp
stos
loopne
fsubp
out
jg
jo
stc
rol
daa
add
pop
jno
and
mov
lock
fiaddl
mov
mov
and
mov
pushf
push
mov
in
pop
inc
dec
lret
repnz
jmp
insl
sarb
adc
rclb
in
fs
lcall
push
jle
popa
shrb
adc
enter
stos
xor
mov
push
or
int
test
sbb
subl
sbb
mov
lods
movsb
mov
jbe
nop
pop
les
pop
xor
sahf
hlt
notl
mov
out
cld
int
pop
iret
xchg
dec
mov
cmp
rcrl
push
inc
scas
adc
jo
adc
push
xchg
xlat
fwait
mov
sbb
loope,pt
pop
lock
adc
rol
pusha
jae
jmp
int
sar
outsb
cmp
mov
test
add
imul
mov
add
mov
dec
and
add
cmpl
ss
mov
insl
adc
mov
lahf
iret
jmp
in
mov
push
mov
and
push
loopne
out
pop
jl
pusha
and
sbb
popa
push
xor
addb
test
cmp
pusha
pop
add
jl
pusha
mov
add
or
aas
adc
shlb
and
inc
ds
scas
xchg
sbb
aam
mov
cli
daa
sbb
scas
loope
push
xchg
xchg
call
dec
stc
jno
lods
inc
jae
call
es
jle
dec
add
xlat
jns
das
jle
add
loop
out
adc
les
rolb
leave
rorl
inc
xor
test
ja
push
iret
loop
cli
jle
leave
mov
mov
mov
push
sbb
jnp
nop
outsl
gs
sarb
les
xchg
inc
mov
xchg
inc
lret
lods
fcompl
jecxz
jb
nop
jne
dec
pop
sarb
nop
push
pop
repz
aam
jmp
push
sub
jmp
jecxz
pop
repnz
aad
cmp
cmp
addr16
dec
mov
cmp
rorl
fadds
inc
push
cmpsl
ret
aaa
jno
pop
sahf
ret
jge
mov
mov
ja
fnstenv
push
dec
xor
push
cmpsl
lods
sub
jno
dec
jecxz
mov
das
push
clc
jno
int3
adc
insl
fwait
stos
jne
lods
dec
outsl
inc
out
sahf
das
mov
push
push
je
das
sbb
out
add
lret
push
mov
push
int3
ret
hlt
jb
int
sahf
iret
jmp
jb
roll
push
cmp
lahf
ljmp
nop
cmpsb
out
es
jne
push
cwtl
xlat
and
inc
pusha
dec
jg
or
mov
ss
gs
xor
pop
xor
cmp
pusha
movswl
pop
adc
ss
inc
test
mov
add
adc
mov
jo
jae
ljmp
outsb
mov
aad
xchg
mov
sub
mov
sar
scas
fcmovnb
gs
mov
adc
leave
jnp
xchg
add
dec
jnp
std
push
lea
mov
icebp
push
jecxz
jnp
xlat
repnz
rcll
ljmp
cmp
stc
push
nop
pop
les
ljmp
xorb
pushf
xchg
jne
push
nop
sub
mov
lds
addr16
xor
sbb
mov
add
jg
or
add
or
cmp
adc
dec
pop
push
sahf
dec
bsf
mov
push
mov
fbld
mov
push
add
rorb
dec
sbb
es
lea
cmp
mov
aad
rorl
in
stos
enter
ret
loopne
pop
mov
add
in
mov
pop
jp
repnz
inc
lock
test
out
lods
aaa
cmp
sahf
inc
or
repnz
sbb
and
jno
lods
nop
popf
jb
ds
lahf
cmp
pop
mov
pop
pop
in
inc
subl
dec
mov
fisubrs
mov
mov
jmp
sub
ds
cmc
sbb
and
sub
add
and
push
xchg
pop
ret
xchg
fcmovnb
pop
pusha
jb
fwait
addr16
or
push
pop
jle
loop
and
or
rcl
sbb
cmpsl
mov
xlat
sub
mov
mov
out
dec
mov
sub
nop
adc
movhps
ret
lea
cmc
lds
fidivrs
int3
push
jle
jle
cmp
pop
xchg
movsl
dec
movsl
das
lea
fidivrl
in
xor
repnz
iret
fwait
or
cli
loope
hlt
pop
testl
ret
pop
insb
xor
stc
dec
mov
fs
add
cmc
or
jmp
add
xchg
pop
iret
aaa
call
or
movl
shr
mov
xchg
loope
testl
mov
xor
pop
or
scas
insl
adc
clc
push
xor
mov
es
mov
mov
repnz
dec
aas
cmpl
aaa
jmp
cli
lock
into
pop
scas
push
and
pop
adc
sbb
mov
mov
stos
aad
pushf
cmp
mov
call
add
mov
xlat
adc
mov
jne
es
or
scas
stos
mov
sti
ljmp
dec
scas
lret
mov
add
mov
rolb
outsl
out
in
add
sbb
fdivrl
stos
and
clc
inc
pop
outsl
pop
push
and
shrl
in
sub
roll
rorl
insl
rorb
dec
out
jno
imul
lret
dec
cmc
decb
cs
repnz
aad
fcoms
out
gs
fidivs
add
dec
add
jnp
or
pop
lahf
jnp
lock
dec
cmpsl
xor
add
push
adc
dec
or
or
testl
add
mov
jbe
or
testl
adc
xor
sahf
inc
and
stc
push
addr16
mov
mov
ss
idivb
pop
loopne
pop
dec
xlat
adc
loop
adc
movsb
jge
fnsave
in
dec
int
sub
cld
inc
test
fildll
test
outsl
aas
push
push
clc
icebp
gs
dec
pop
aaa
push
je
mov
add
mov
addl
and
mov
mov
mov
inc
adc
sbb
out
movsl
jno
int
inc
or
push
lret
mov
jle
mov
mov
adc
mov
in
adc
dec
add
jg
adc
mov
les
xchg
in
in
jmp
or
enter
negl
jb
xor
ja
mov
sbb
cmc
aas
mov
out
cs
test
test
or
outsl
test
in
iret
sub
add
dec
out
xchg
dec
add
testl
ds
xor
jno
stc
inc
daa
mov
pop
push
lret
jae
lods
out
mov
pop
sub
jns
pop
addb
les
insl
adc
lea
cmp
push
int3
push
xor
stc
dec
outsl
xchg
adc
stc
test
cmp
mov
aad
popa
into
sbb
movsb
adc
mov
aam
in
adc
add
fdivrs
addl
sub
or
mov
rcl
or
int
into
enter
sub
or
std
sub
repnz
in
cmp
or
in
int
or
mov
adc
loopne
xlat
aam
mov
push
mov
xchg
movsl
xchg
xchg
decl
or
dec
dec
cwtl
push
stc
push
xchg
loopne
pop
cltd
or
mov
mov
sub
lock
sub
mov
sbb
add
jmp
or
xlat
mov
pusha
sbb
call
jle
mov
pop
in
mov
sbb
rolb
int
cmp
jmp
aaa
iret
push
ljmp
insl
add
sbb
roll
xchg
js
pop
adc
cmc
ret
mov
dec
arpl
lea
pusha
sub
fcom
call
or
imul
int
out
mov
outsl
testb
add
mov
test
negl
in
dec
std
aas
jne
fs
aaa
xor
out
adc
gs
adc
pop
insl
repnz
mov
dec
int
insl
aam
lods
xchg
cmpsl
xchg
fisttpll
mov
lock
in
repz
jno
enter
out
adcb
push
push
mov
notl
data16
insb
fidivrs
mov
pop
mov
pop
adcl
sbb
aas
sbb
ret
add
std
in
clc
add
add
jb
sub
xchg
inc
or
mov
mov
lock
shll
push
orl
divl
sub
test
lea
aad
push
movsl
imul
imul
les
out
xor
int
cli
jnp
xor
das
push
loop
aad
dec
inc
sahf
orb
sbb
jl
xchg
popf
lcall
xchg
clc
adcw
rorb
mov
or
or
cld
jge
xchg
mov
mov
mov
rcrb
push
test
in
mov
add
adc
es
jmp
aam
and
enter
dec
les
mov
and
sahf
test
and
int
ss
sbb
sbb
lret
xchg
ret
dec
in
or
ljmp
mov
sub
xor
lret
or
add
xor
mov
mov
es
xlat
scas
sahf
stos
sub
dec
mov
in
push
sahf
dec
mov
aam
adc
int
out
stos
adc
and
pop
cmpl
fadd
fdivs
or
js
mov
pop
lret
add
pop
adc
popf
or
push
lret
push
lods
aaa
mov
dec
xor
cwtl
test
push
in
sbb
push
jp
add
adc
xlat
dec
jp
mov
cmp
aaa
lods
mov
and
sbb
scas
lock
call
push
mov
hlt
test
xor
pop
movsl
jo
scas
je
add
outsb
and
cmp
or
bnd
movsb
in
cmp
es
cwtl
lds
add
fisubs
hlt
sub
cmc
popf
cmp
xchg
mov
add
cs
jg
jno
jle
loope
jb
repz
cmp
or
jp
sbb
sbb
adc
ljmp
jg
jge
fsubl
adc
aaa
mov
loopne
inc
adc
int
xchg
nop
out
dec
jmp
fdivrl
xchg
inc
fwait
shrl
in
and
in
sbb
xchg
lret
mov
clc
into
and
inc
pop
pop
add
out
or
cmp
push
cmp
and
pop
mov
inc
cltd
aam
jns
loopne
sbb
outsl
push
cmp
cmp
pusha
lods
jne
cmp
iret
or
add
add
stos
adc
xor
cmp
into
jno
cltd
jg
aaa
in
fsts
jecxz
adcb
mov
add
ss
aam
loop
push
mov
push
int
sub
pop
xchg
shll
adc
push
ss
stc
iret
push
push
dec
jle
pop
iret
mov
mov
test
repz
lcall
dec
and
clc
rcrb
stos
ret
ljmp
insl
xchg
call
mov
mov
in
in
inc
iret
add
mov
push
xchg
add
mov
mov
mov
and
mov
sahf
dec
jge
xlat
dec
je
outsb
dec
xchg
adc
lret
ret
jle
adc
mov
aas
enter
xchg
in
loop
aas
cmpl
divb
ret
push
insl
mov
dec
dec
jns
mov
or
sbb
push
dec
jbe
scas
iret
test
addl
scas
arpl
outsb
push
shlb
out
cmp
out
dec
and
leave
lahf
sti
int
dec
rcrb
aam
mov
pop
in
shr
test
xchg
popa
outsb
cmpl
or
fldt
test
inc
sub
prefetcht2
les
sub
in
cmp
xchg
push
mov
jnp
faddl
adc
fs
fimuls
int3
inc
pop
mov
sbbb
aas
and
das
sahf
fistpll
xchg
jg
push
and
in
jmp
sub
add
repz
push
adc
repz
dec
xchg
cmp
xchg
cmpsb
jecxz
dec
inc
sub
fisubs
xchg
sbb
cmp
push
push
stos
xchg
notb
pop
push
lahf
ret
loop
out
and
xor
loop
outsl
out
or
sahf
and
push
inc
sarb
repnz
sub
addl
or
lcall
mov
in
push
jl
adc
aaa
add
jecxz
push
out
fmul
or
ret
jecxz
push
cltd
lahf
std
ficomps
fcomps
nop
ret
mov
insb
int3
iret
xchg
push
or
mov
std
hlt
xchg
out
repnz
and
sbb
inc
cmp
mov
adc
stos
test
mov
loop
sub
cs
punpckhbw
or
iret
sub
pop
add
icebp
adc
pop
xchg
xchg
in
mov
or
mov
in
dec
loope
push
add
loop
setns
xchg
pop
push
or
hlt
insl
in
dec
loope
fs
mov
loop
sub
shlb
es
pusha
mov
repz
outsl
jns
lea
xchg
inc
dec
xor
inc
and
popa
cmp
ljmp
fdivs
sub
call
faddp
lret
cmp
pop
arpl
repnz
push
mov
dec
stc
or
into
out
xor
or
aas
xchg
and
es
stos
jg
add
std
cld
push
fisubrs
lds
rcrb
xchg
dec
std
jge
ret
pop
or
cmp
add
xchg
or
int3
push
pop
xchg
notb
das
es
push
std
je
adc
nop
sub
or
test
scas
pop
mov
in
jo
movsl
js
add
cltd
jp
sbb
xchg
pop
test
xor
push
sbb
xchg
add
fwait
pop
pop
sbb
xchg
jbe
or
out
jl
push
jb
in
add
push
dec
addb
aad
push
and
adc
add
lret
enter
xchg
fistpl
xchg
cs
jle
jne
cmp
out
cld
outsb
pop
sbb
xchg
or
movsb
punpcklbw
or
push
filds
notl
in
repnz
arpl
rorb
ret
push
fistl
popa
sbb
lret
int
fdivrl
andb
cs
aaa
movsb
add
xorb
cmpb
cmp
push
and
dec
addr16
mov
mov
adc
pop
mov
out
repz
pop
xchg
stos
test
jb
xorl
cmc
out
cmp
dec
aad
daa
loopne
mov
in
inc
call
mov
aas
repz
sbb
push
cmpsb
andl
add
inc
sub
imul
bound
repz
adc
fisubrs
pop
divl
jl
lods
loope
icebp
test
push
mov
loopne
sbb
mov
movsl
ds
inc
inc
jne
out
mov
divl
xor
shrb
aam
rcll
ja
nop
hlt
rcl
sub
adc
dec
adc
fnstcw
jmp
cwtl
add
sub
test
mov
addb
xor
fidivrl
lods
loopne
sbb
cli
shll
adc
sub
push
push
mov
rolb
inc
mov
cmp
or
inc
shlb
daa
mov
scas
xchg
sub
adcl
pop
mov
inc
gs
jmp
adc
xor
aad
mov
dec
or
mov
push
mov
mov
test
data16
push
idiv
dec
xor
mov
ljmp
lock
lahf
in
jl
lods
clc
sub
test
xchg
in
into
push
mov
inc
or
sahf
push
aas
jne
push
lret
xchg
fistpl
testb
enter
jne
ds
bswap
add
push
nop
sbb
in
cmp
repnz
icebp
pop
sbb
mov
dec
push
sub
stc
stos
pop
add
xor
arpl
je
cmp
mov
inc
out
lods
add
rorb
xlat
stc
mov
or
outsb
xor
jp
xchg
xor
mov
jle
adc
sbb
sbb
push
sbb
mov
or
hlt
or
pop
jns
mov
cmp
adc
add
and
out
ret
xchg
push
test
add
sbb
and
pop
and
mov
cmp
push
shrl
rcrl
cmpsb
scas
dec
imul
mov
test
data16
push
jle
repz
repnz
add
hlt
sub
or
mov
inc
ljmp
mov
and
or
sbb
dec
lods
cmp
cmp
pop
dec
mov
sti
jnp
mov
mov
loopne,pt
iret
sub
call
mov
mov
cmp
iret
mov
sub
add
mov
aam
movaps
dec
lcall
mov
bound
pop
inc
sbb
mov
cmp
xchg
jp
fdiv
out
data16
sub
push
lods
lahf
mov
jns
jecxz
rcll
and
out
add
out
stos
add
jmp
or
cmpsl
ja
sti
subb
popa
or
aad
push
testl
aaa
mov
jmp
mov
jae
bound
aam
xchg
leave
lods
dec
and
inc
lock
dec
mov
xor
shlb
imul
fcomp
push
mov
or
nop
and
pop
idiv
fldt
xchg
movsl
dec
test
das
push
ret
les
rorb
stos
in
jl
adc
or
cltd
addr16
sbb
repnz
or
fcmovne
mov
pop
dec
xor
loope
lret
aam
adc
sbb
or
adc
add
jl
fiaddl
negb
sar
mov
into
push
insb
in
outsl
das
push
inc
ret
lret
mov
adc
mov
ds
jle
inc
enter
inc
mov
adc
sbb
ret
std
and
test
out
dec
outsl
imul
subb
mov
lahf
into
mov
adc
dec
dec
lret
pop
jl
xchg
pop
outsl
cltd
or
icebp
mov
rorb
xchg
pop
jecxz
jecxz
sub
addr16
mov
xchg
adc
add
adc
add
xor
aad
mov
and
lds
mov
out
in
stc
fildll
addr16
and
sbb
outsl
dec
pop
xchg
hlt
jle
addr16
fsincos
inc
cltd
mov
cmp
cmp
aas
dec
jno
imul
adc
mov
adc
cmpsl
mov
fdiv
scas
std
ja
cmp
push
out
fsubrp
aaa
shrb
cwtl
daa
idivb
int3
dec
fcoml
jnp
clc
push
test
lcall
and
popa
ljmp
mov
cld
daa
jg
in
adc
push
clc
mov
aaa
fldl
and
cmp
xchg
shr
or
enter
push
leave
add
push
or
addl
mov
push
daa
xchg
out
sub
into
mov
xchg
pop
and
mov
stc
andl
or
lods
jbe
push
movsb
stos
dec
inc
imul
cmp
jns
mov
jecxz
xor
rep
jno
mov
inc
jp
shlb
xchg
jo
add
and
addr16
loop
dec
push
push
cmp
les
add
jg
mov
outsb
add
mov
popa
xchg
test
in
pop
push
aas
pop
je
adc
shll
push
adc
cmp
jns
adc
lock
fstpl
cmpsb
hlt
inc
inc
dec
loop
jmp
jg
loop
push
pop
mov
add
call
cli
pop
dec
sub
adc
push
rclb
jge
in
push
cmp
lods
mov
aaa
ds
jbe
mov
jne
mov
mov
scas
loope
jne
xchg
push
or
fiaddl
repz
sub
dec
mov
sub
sahf
sbb
cmp
fs
repz
sbb
repnz
push
rcrb
cmpsb
mov
in
shl
xchg
pop
pop
sahf
xchg
mov
rolb
insl
lea
es
jecxz
cmc
dec
or
or
iret
cmpsb
add
ret
fisttpll
outsb
insb
xor
roll
pop
inc
and
sub
xchg
push
jle
lods
rcll
inc
mov
stos
jge
stos
push
xchg
scas
adc
xchg
lea
loop
inc
addl
jns
outsl
std
shll
or
pusha
stos
sti
clc
sahf
push
or
add
in
stc
sbb
cmc
push
mov
jae
push
ds
xor
rol
fistpl
stc
pop
or
out
repz
xchg
cmpsb
rcrb
pop
in
in
in
lcall
add
cmp
ret
fisubrs
jmp
ljmp
in
in
sbb
mov
mov
out
daa
adc
bound
fisubl
inc
dec
jno
cmp
add
cs
data16
stos
sub
outsl
xchg
push
cmpsl
and
mov
inc
xchg
push
lcall
ret
cmpsb
or
lods
push
mov
push
dec
ja
mov
rclb
in
cld
xor
jle
or
scas
push
xchg
dec
daa
jl
jle
mov
loope
cld
outsb
adc
in
ret
adc
inc
adc
outsl
popl
jmp
icebp
mov
push
xor
rcr
sahf
cltd
push
jns
mov
mov
sahf
mov
adcl
cmc
mov
jle
scas
or
sbb
jns
insl
push
dec
andb
rcrb
add
push
scas
sbb
mov
sarb
frstor
pop
js
and
pop
jae
mov
in
test
pop
test
pop
ljmp
mov
pminsw
lods
xor
jle
imul
call
aad
js
push
jge
stc
inc
mov
xchg
add
mov
push
test
cld
cmp
mov
cmpsb
or
dec
shl
icebp
cmp
fyl2x
cld
add
sub
clc
shr
gs
pushl
imull
sarl
and
popa
cld
icebp
jb
push
xor
and
cld
pop
sti
rol
hlt
xor
inc
jno
inc
lret
push
sarb
lea
iret
insl
fcomps
cwtl
xor
sub
ljmp
in
xchg
enter
xchg
sarb
sub
andl
sbb
int
add
mov
fs
xorb
xor
shlb
in
rcll
push
adc
sub
cmp
cmp
inc
push
jle
add
in
lret
add
cmc
mov
out
xchg
adc
fdivrp
int3
add
fcmovne
mov
inc
sub
aam
test
dec
push
jmp
or
fmulp
cmp
xor
xor
sub
in
outsl
mov
dec
push
fbstp
fs
rol
sahf
shrl
push
pop
adc
ror
adc
dec
sbb
sbbl
or
and
loop
push
and
rolb
xchg
das
stc
lea
rcl
in
in
pop
jne
mov
lds
push
sbbb
popa
inc
inc
or
dec
incl
sbb
ja
jo
outsl
sbb
xchg
adc
je
and
mov
inc
mov
and
or
mov
ds
fiaddl
divps
nop
xor
inc
ss
enter
cmpsb
xchg
pop
push
sub
cld
shrb
jg
es
xchg
add
into
or
sbb
repz
cmpb
xchg
cmp
sbb
dec
pusha
jo
out
add
out
or
shr
pop
leave
inc
jne
sub
xchg
sti
push
pop
pop
loop
data16
inc
enter
int
jmp
jmp
or
push
outsb
fsubs
mov
mov
mov
test
popa
gs
es
sub
push
lret
outsb
xchg
je
jp
and
js
std
mov
icebp
or
add
scas
stos
stos
push
ljmp
add
and
es
test
ja
ficoms
xchg
leave
rolb
mov
rcrl
dec
mov
pop
xchg
inc
cmpsl
fsubs
push
cmpsb
outsb
xchg
xor
insb
xchg
adc
scas
leave
hlt
out
in
or
out
jne
jae
xor
arpl
sbb
in
iret
mov
xchg
cltd
je
jl
leave
lret
or
pop
leave
cld
mov
cmp
clc
pushf
iret
or
stc
push
adc
cmp
int
call
adc
cmpsl
jo
mov
loop
add
xor
repnz
dec
fsubs
rcrl
in
fcoms
inc
adc
cmp
test
or
mov
in
xor
cwtl
dec
and
adc
fsubr
sub
data16
fldt
mov
lret
xor
fiadds
lock
sti
loop
xor
data16
sti
mov
mov
ja
add
ror
inc
or
lods
mov
faddl
add
push
sbb
sub
inc
imul
lods
and
ds
leave
ds
pop
in
lret
xor
mov
xchg
xchg
and
orl
xchg
test
and
push
clc
sub
lret
es
sbb
dec
fsubl
or
adc
mov
idivl
inc
adc
add
push
sub
std
test
and
push
lods
mov
shrl
sub
adc
pop
cmpsl
adc
dec
adc
pop
fnsave
outsl
loope
lods
rcll
add
rcr
loop
into
add
fadd
and
or
sub
push
push
or
dec
stos
inc
jle
fucomip
mov
pop
mov
jg
or
sub
in
fadd
lds
adc
add
add
push
dec
rol
int
in
in
aam
inc
repnz
cld
sti
dec
dec
pusha
add
es
mov
std
rcrl
pushf
push
sub
movsl
decl
inc
mov
inc
xchg
cs
dec
nop
and
push
dec
call
cli
add
or
inc
add
clc
inc
orl
or
iret
gs
mov
in
ljmp
inc
call
xchg
fnsave
mov
add
sbb
push
inc
or
push
out
dec
inc
loop
push
mov
aaa
nop
in
jno
fsts
sub
ljmp
mov
cmc
outsb
push
push
je
lods
lret
mov
stc
cmpsl
ja
cmpsl
push
or
and
ret
pop
jl
cwtl
inc
sahf
or
int
xchg
mov
mov
mov
sahf
scas
pop
xor
sahf
ret
push
push
mov
sub
push
jg
adc
adc
sbb
sub
arpl
adc
cmp
scas
ret
xchg
pop
scas
dec
int
and
scas
mov
dec
in
test
jp
push
and
cltd
lods
fsubs
test
cwtl
repnz
adc
and
push
jecxz
les
mov
pop
fisubs
jmp
lock
das
jp
shl
jae
dec
cmp
adc
add
or
cmp
mov
out
std
push
sbb
pop
push
xchg
jnp
into
cmp
fcmovu
or
jecxz
clc
jle
shll
jmp
xor
add
push
mov
xorl
scas
dec
leave
push
or
jmp
add
or
jge
jbe
mov
lods
daa
femms
add
or
jg
lea
and
mull
ljmp
or
cmp
pop
test
xchg
lret
inc
gs
jne
xor
pop
mov
in
out
xchg
mov
lock
push
sub
and
sbb
ret
mov
sbb
fisubrs
pop
push
outsl
cmp
popa
and
xchg
mov
jle
shll
dec
pop
cmp
ss
xor
or
xor
idivl
mov
xchg
pop
adc
jmp
xor
xor
scas
aad
aaa
xchg
push
jle
inc
test
repnz
jo
mov
push
fcmovb
pop
in
outsl
jns
mov
xchg
mov
mov
testb
and
jl
pop
sbb
push
cmc
xchg
dec
sbb
lcall
aam
jnp
loopne
out
hlt
shlb
pop
testl
scas
cmp
sub
cmp
pop
stc
loop
ja
sarb
push
xor
mov
and
int
pop
jb
out
mov
jge
rcll
adc
ja
lret
jo
mull
mov
nop
mov
mov
or
mov
bound
fwait
test
in
movsl
es
in
mov
sbb
and
lods
fistpll
repz
mov
iret
xor
and
push
dec
mov
lahf
movsb
jnp
add
lock
push
cmp
xchg
fldl
test
aaa
int
mov
clc
push
sbb
push
xchg
data16
addr16
fsts
lea
repnz
cs
sti
or
or
xchg
fadds
mov
add
js
mov
popf
and
inc
dec
or
bound
sub
mov
jg
mov
pushf
sbb
rcrl
lahf
lahf
push
push
in
sub
aas
inc
iret
out
out
jnp
insl
mov
or
inc
fsubrs
or
sub
cld
cs
loope
shlb
pop
push
xchg
mov
sbb
rcr
call
add
sbb
out
jmp
fsubp
test
test
and
das
pop
mov
subl
xchg
cmp
movl
loopne
pop
rorb
in
mov
mov
rolb
or
sub
mov
pop
adc
arpl
inc
enter
adc
push
je
mov
iret
pop
in
shl
xor
outsl
ss
and
mov
or
test
inc
and
sub
mov
xlat
or
out
mov
in
dec
out
pop
xchg
scas
add
sbb
aad
orl
mov
inc
or
sti
push
or
fistps
mov
dec
adc
nop
sub
stos
xorb
je
flds
push
or
and
pushf
repz
shr
test
ret
fdivrs
add
jp
lods
shr
enter
aad
and
mov
mov
push
add
loop
add
loopne
dec
sub
and
bound
stos
loop
sub
pop
mov
loope
jne
dec
sbb
mov
repnz
outsl
jl
mov
sti
imul
add
pop
sbb
imul
lahf
and
sbb
sub
xor
adc
jg
inc
lods
push
das
addb
push
iret
paddd
movsl
push
not
mov
roll
adc
bound
mov
dec
outsl
lods
xchg
inc
hlt
mov
push
adc
mov
pop
ror
clc
out
les
pop
out
ret
add
xor
jl
js
stos
decb
lahf
pop
lret
ret
in
das
adc
xchg
adc
add
divb
sub
mov
add
pop
cmp
loop
cmp
add
ja
sti
loop
xchg
jne
sbb
lret
jl
and
and
push
xchg
adc
cmp
mov
sbb
sbb
cltd
cmp
push
mov
push
push
jns
pop
rclb
orl
mov
add
push
jecxz
sbb
xor
inc
push
ror
inc
xchg
xor
out
cmp
lods
shrl
out
or
test
addr16
pop
push
adc
jle
shll
dec
enter
fsubl
adc
add
xlat
push
out
lea
mov
inc
lret
mov
jp
aam
movsb
mov
add
into
inc
in
add
sbb
mov
sahf
sub
imul
int
cwtl
in
call
sbb
loop
push
movsb
addr16
mov
mov
negb
push
mov
mov
add
cmp
daa
fsts
cltd
adc
fidivl
xchg
cmp
push
ss
lea
push
lds
cld
sbb
ja
ljmp
add
adc
adc
push
sub
push
sbb
or
test
inc
out
push
rorl
push
clc
and
xor
lds
cmp
shlb
push
xor
xor
inc
or
adc
xchg
testb
jo
push
xchg
and
in
lds
enter
and
and
pop
add
pop
iret
or
adc
xchg
adc
aaa
and
test
sbb
imul
adc
out
jle
scas
inc
mov
jae
outsl
jge
jmp
cs
inc
push
insl
mov
push
rep
insl
inc
popf
or
addr16
cmpl
mov
pop
cmp
enter
ror
addr16
jns
loope
inc
mov
xchg
and
enter
cmp
mov
loope
inc
sbb
inc
pop
jno
ja
push
mov
mov
cmp
in
outsl
push
fildll
sbb
insl
call
scas
outsl
stos
pop
mov
int
inc
loopne
mov
mov
mov
add
int3
push
jmp
clc
mov
cmp
incb
test
fisubrl
lock
mov
rorb
sub
leave
adc
decb
ja
repnz
cli
out
push
das
xchg
insl
outsb
xor
fldl
cld
enter
subb
mov
pop
out
roll
imul
fwait
mov
cmp
cmc
mov
xchg
lods
or
pop
mov
loop
mov
adc
sahf
daa
cmp
test
or
testl
jns
mov
or
xor
inc
lcall
inc
add
push
into
mov
fcom
cmc
push
adc
iret
loop
pop
adc
dec
dec
jle
loop
scas
test
mov
push
aaa
adc
cld
arpl
rcrl
roll
into
xor
jle
addr16
in
adc
enter
ret
mov
inc
pop
add
mov
or
test
inc
mov
mov
test
inc
outsb
int
and
aaa
and
sub
and
push
dec
fcoms
jp
rclb
mov
mov
icebp
and
cmp
or
inc
xlat
js
sahf
int3
divl
sarb
fs
in
or
jge
dec
adc
clc
cmp
lods
add
je
dec
aaa
lcall
pop
ja
mov
fldl
sbb
xchg
repnz
xorl
jp
add
xchg
xchg
call
negb
dec
sbb
call
in
popl
jecxz
sub
int
cld
push
mov
or
and
ss
pop
shll
pop
rorb
xor
mov
movq
setg
roll
sbb
and
adc
fwait
cli
lock
ret
sbb
fs
adc
test
mov
pusha
je
cmp
push
push
sbb
aad
sub
sahf
ficoms
push
sub
lds
sbb
movsl
iret
loop
pop
les
xchg
lret
dec
scas
js,pn
sarb
and
jnp
stos
stc
xchg
mov
xor
iret
test
fnstenv
fidivs
dec
xcrypt-ctr
cmpsl
sahf
test
jp
mov
iret
notb
sarb
sub
inc
jle
jmp
movsl
test
loopne
push
sub
push
mov
int3
pop
adc
add
push
cmp
sub
imul
loope
test
dec
pop
int
daa
loope
loop
rdmsr
lret
mov
push
add
mov
in
pop
es
or
inc
mov
add
in
loopne
fstps
lret
dec
adc
pop
pop
or
sub
mov
cmp
xor
gs
cmp
add
mov
and
jae
popl
clc
cmp
lret
test
add
cld
dec
aaa
std
sub
adc
add
idivl
mov
mov
inc
mov
pop
jne
cld
and
iret
push
sbb
nop
sbb
jg
fstpt
inc
in
cltd
int
jg
imull
and
ficoms
xchg
lahf
fiaddl
test
cmp
out
cmp
cmpb
push
imul
notl
cmp
leave
or
mov
dec
test
rcrb
and
nop
aad
add
push
jnp
cmpsb
leave
imul
adc
std
mov
test
stc
push
jl
inc
jno
add
ret
out
mov
pop
add
iret
scas
sub
fistps
xchg
fdiv
dec
nop
and
and
jg
or
ret
sbb
enter
clc
mov
cwtl
outsb
enter
add
sbb
sbb
mov
or
dec
jg
dec
pop
hlt
dec
sbb
gs
or
push
jge
sub
mov
cmp
or
repnz
push
adc
cld
sub
addb
and
rcll
pusha
jnp
das
into
and
mov
sti
es
xor
sbb
sbbb
xor
ret
sbb
rorl
sub
or
int
or
in
mov
add
sbbb
add
push
dec
outsb
fwait
ret
lds
xorl
sbb
pop
adc
and
mov
mov
outsb
xor
push
and
mov
imul
pop
mov
cmp
sbb
ret
or
mov
out
repnz
mov
enter
push
xchg
leave
fistl
lods
bound
movsl
jge
data16
int
jg
sbbl
adc
sub
push
mov
jecxz
or
xchg
fstl
ret
inc
loope
clc
xchg
popa
mov
jle
mov
lock
mov
inc
jb
out
shlb
ljmp
lock
jge
add
add
pop
add
jg
cmpsb
pop
dec
push
cwtl
addr16
mov
test
push
jp
insl
into
add
stos
dec
test
push
arpl
push
cwtl
sub
inc
and
jg
insl
out
pushf
popa
and
iret
xor
adc
test
into
inc
dec
enter
imul
and
lods
mov
aas
cs
add
aaa
xchg
adc
scas
xchg
xchg
jae
fiaddl
mov
cmp
daa
adc
outsl
mov
pop
sub
mov
sbb
xlat
enter
push
lret
popa
xchg
mov
sub
xor
or
xorl
add
add
aaa
fsubr
arpl
cmc
xor
jmp
push
lea
or
jmp
xor
fidivrl
test
inc
mov
mov
or
jno
cmc
in
cmp
cmp
cmp
into
dec
movsb
jmpw
push
xchg
rorl
cmpxchg8b
iret
es
dec
rcrl
mov
and
and
jb
test
pop
and
paddq
shll
das
dec
jbe
push
in
pusha
pushf
lahf
add
add
nop
aas
out
xchg
arpl
adc
cmp
out
vpackuswb
sahf
mov
out
xor
mov
loope
std
testb
test
leave
cmc
insb
test
popf
mov
out
push
sub
lahf
test
cmp
or
lret
jle
in
sbb
outsl
add
bts
ret
push
and
stos
aam
add
mov
int
int3
add
ljmp
dec
fisttps
mov
and
push
mov
in
inc
sbb
int3
jge
ds
popw
div
pop
mov
ret
pop
aaa
push
dec
inc
cwtl
mov
out
mov
insb
mov
add
dec
xor
das
push
sbb
inc
int3
nopl
and
lea
pop
fsubrp
in
flds
cmpsl
nop
cmpsl
or
bnd
xchg
stc
pushf
adc
jecxz
dec
mov
aam
out
loop
push
iret
sbb
in
fwait
les
jo
stos
fildl
into
jle
or
repz
xchg
inc
cmp
cmp
pop
jp
xchg
inc
push
js
shll
sbb
fsubrs
repz
dec
xchg
or
leave
xchg
rcll
cli
cmpsb
push
clc
andl
xor
fs
gs
mov
inc
jmp
push
adc
mov
mov
shl
mov
lret
sbb
cmp
out
es
enter
adcb
add
pmovmskb
fiadds
xorl
and
int
push
inc
stos
popa
adc
les
sub
xor
mov
fisttps
pop
push
les
mov
add
adc
mov
cmp
jae
pop
cmp
sub
bound
stos
add
sbb
xchg
std
incl
lret
mov
push
repnz
pop
sahf
add
sbb
pushf
test
cmp
pop
add
mov
out
mov
dec
pop
push
dec
cmp
add
mov
ljmp
cmp
sub
ret
rcrb
loop
insb
iret
inc
fcmovb
sar
pop
lea
lcall
sub
cmp
fadds
pop
xor
setae
leave
sbb
inc
nop
mov
clc
mov
xchg
dec
add
jns
fsubrl
fimuls
xor
fcoms
stos
and
lahf
arpl
cwtl
scas
fstl
ja
or
imul
rol
in
adc
and
mov
push
js
jmp
cmp
out
roll
cmp
inc
push
add
inc
stos
add
mov
cld
xchg
loop
call
push
push
ljmp
push
add
jmp
arpl
mov
adc
call
fwait
rcll
sahf
sub
out
cmc
shr
popa
and
lret
sarb
loop
bswap
arpl
mov
dec
out
into
aas
dec
insb
jnp
dec
fiaddl
mov
aas
out
cmp
sbb
cld
ljmp
js
mov
fdivr
push
add
sub
inc
push
cld
dec
dec
dec
xlat
xchg
and
lods
or
rcll
iret
fsts
or
sete
mov
and
aas
shlb
and
das
dec
mov
sbb
popa
xor
into
push
add
pop
mov
add
cwtl
in
mov
ds
aam
jp
fdivrs
add
xor
sbb
lahf
stos
shrb
fcmovnu
movsb
test
fldt
imul
push
ficoms
imul
mov
dec
mov
hlt
push
xor
or
arpl
jbe
sub
adc
pusha
stc
xlat
pop
or
inc
xchg
add
sahf
lahf
cltd
or
xchg
jl
out
sbb
sbb
jmp
xchg
test
repz
and
fisttpl
or
cmpsb
adc
cmc
and
orl
repz
je
push
inc
test
adc
mov
or
fwait
in
fistps
mov
dec
ja
pop
inc
in
aam
sub
pop
fs
push
jb
cmc
out
stc
fs
enter
dec
punpcklwd
cmpl
cmp
mov
lock
xor
push
out
adc
comiss
mov
or
cmpsl
xor
sbb
rorl
daa
ljmp
pcmpeqw
xor
ss
out
push
xchg
test
mov
add
jg
popa
aad
gs
add
or
test
and
das
dec
pop
push
sbb
cmp
jecxz
out
xor
cmc
in
jmp
dec
sbb
add
das
push
dec
int3
mov
fld1
das
dec
sbb
push
xchg
xor
aam
jecxz
insb
mov
in
jecxz
xor
mov
or
xchg
push
sub
mov
push
rol
iret
mov
das
pop
inc
mov
mov
push
das
es
ds
in
rcl
jmp
lahf
mov
insb
cmp
push
outsb
pop
or
mov
leave
bound
mov
lret
jo
add
leave
adc
clc
mov
and
int3
xorl
lret
lea
in
or
dec
clc
movsb
adc
mov
nop
ret
outsl
lret
adc
sbb
push
cmp
pop
fs
out
in
add
es
xlat
add
and
fimull
sub
xchg
inc
std
push
sbb
movsb
test
push
xor
cltd
fldcw
cmp
and
and
scas
cmp
addr16
add
cmc
or
js
mov
or
ljmp
or
insb
mov
out
jne
and
mov
enter
xor
pop
jle
in
inc
mov
mov
jmp
inc
cmp
subl
push
xor
add
and
sbb
int
jo
insb
mov
cmp
and
xchg
test
push
inc
lock
adc
mov
cmp
mov
ret
sbb
xor
and
mov
inc
insl
aaa
es
sub
push
or
xchg
add
or
pop
adc
or
lds
lahf
sbb
loope
or
andb
out
push
ljmp
or
jmp
rcrb
lret
out
mov
sbb
lcall
fisttpl
dec
mov
xor
fimull
in
pop
imul
sub
fisubl
testl
iret
imull
cmc
adc
ljmp
test
pop
xchg
in
xchg
ss
call
repz
addr16
jl
sbbl
and
xlat
sub
popa
ljmp
adc
sbb
int3
aaa
add
mov
lahf
xchg
scas
stc
cmp
xchg
outsl
xor
imul
aaa
mov
push
je
insl
lcall
adc
mov
xor
lret
leave
call
inc
push
cltd
sbb
or
mov
popa
ja
or
fwait
ja
adc
fsubs
int3
cltd
mov
cli
stos
jle
xlat
lret
or
enter
xor
data16
inc
sahf
idivl
xor
sbb
mov
insb
jns
iret
xor
js
sub
sahf
into
push
push
pop
xor
lds
add
inc
fsub
dec
rol
bound
push
xchg
and
mov
sub
mov
xor
dec
cmp
fidivl
xchg
xchg
cmp
ja
mov
and
push
push
sbb
and
movb
sub
lock
xchg
pop
test
bnd
movsb
outsb
mov
sbb
sub
ret
push
cmpl
cmc
lret
sbb
mov
in
or
sub
loop
cwtl
stos
sahf
pop
ds
push
and
sbb
lea
mov
sub
out
ljmp
lahf
sbb
scas
je
cmp
mov
mov
stos
jp
mov
pop
insl
push
das
cmp
jb
and
xchg
loop
dec
int3
or
inc
jo
add
dec
mov
jle
push
cld
mov
inc
adc
add
adc
sbb
mov
dec
push
cmp
push
lea
add
xlat
cmp
mov
notb
or
adc
add
out
in
jp
ja
out
pop
adc
subl
jb
or
scas
fisubrs
in
out
jmp
push
fdivrs
pop
push
orl
sar
pop
push
testb
push
cmp
push
andnps
push
mov
jb
jg
xor
push
adc
pop
adc
dec
or
test
popa
repz
ljmp
testl
pop
call
sbb
jo
hlt
cwtl
pop
xor
sub
and
lock
mov
add
and
sub
fcompl
loop
jle
cmp
iret
ret
push
test
pop
push
jle
into
clc
sub
or
cs
das
cmp
cmc
lahf
loop
jmp
je
mov
inc
push
cld
dec
xchg
clc
sti
fldl
ljmp
pop
xchg
int
sbb
push
and
pop
dec
jno
stc
sarl
mov
and
out
bndstx
lahf
push
loop
jl
xor
inc
push
dec
add
cltd
mov
ja
pop
dec
out
cli
sbb
mov
pushf
xchg
push
cmpb
clc
andb
dec
add
ret
fsubs
in
inc
ds
lock
imul
adc
inc
stos
insl
adcl
sub
inc
test
sbb
pop
nop
inc
scas
or
jb
and
jae
jecxz
lock
pop
jnp
sbb
into
mov
out
int3
xor
sub
sub
inc
inc
ss
xor
push
sbb
push
or
push
daa
dec
xchg
sub
repnz
lock
dec
push
sub
std
or
inc
fcmovnbe
enter
jle
adc
or
sbb
sti
sbb
cs
adc
and
scas
rcl
pop
mov
inc
inc
xchg
shl
or
js
pusha
insl
sahf
flds
scas
cmp
repz
xchg
popa
addr16
pop
in
mov
test
mov
fisttps
mov
rorb
outsl
jg
or
push
and
rcr
sbb
add
add
adc
test
and
in
jecxz
fcmovbe
sub
adc
test
dec
cmp
and
cmp
out
or
inc
mov
cmp
cltd
push
ljmp
dec
fmul
add
inc
jl
pusha
sub
pop
or
cwtl
mov
adc
mov
sub
and
out
mov
out
pop
leave
dec
loop
ficompl
incl
out
out
xor
jbe
or
pusha
ss
adc
cmp
xchg
cmc
hlt
and
or
mov
subl
or
mov
pop
hlt
jo
xchg
lcall
mov
mov
push
push
shrb
loopne
mov
pop
cmpsl
ds
std
test
fcoms
mov
js
add
mov
xchg
fidivrl
mov
push
or
out
cmpsl
fdivrs
push
aam
cwtl
rol
lret
or
cmp
out
divps
mov
pop
adc
cmp
in
push
cmp
icebp
or
in
mov
imul
addr16
cmp
out
jno
or
and
mov
sub
enterw
das
mov
push
jmp
or
xor
cmpsl
aas
and
inc
nop
xor
mov
jle
movsb
mov
fwait
out
mov
out
aaa
or
stc
ret
inc
pop
xchg
nop
clc
stc
sbb
lea
mov
and
std
mov
cmc
mov
push
xor
jne
lock
pop
test
pop
push
xchg
dec
push
in
xor
bound
stos
or
xchg
imul
and
push
cmpsl
add
imul
or
xlat
fildl
ficompl
outsl
cmpsl
pusha
xchg
jae
lds
cld
jmp
mov
fisttpll
xor
in
adc
mov
cmp
push
iret
fldcw
int
mov
and
xor
and
mov
jecxz
call
cmpsl
mov
orb
shl
fsubrl
jo
adc
dec
out
xorb
sbb
arpl
jbe
sti
dec
xchg
mov
lods
adc
adc
dec
fdivl
dec
or
push
mov
mov
dec
push
fisubrs
rep
stc
dec
mov
adc
pop
sub
jg
or
ret
sub
xor
call
and
ret
js
mov
cltd
faddl
push
pop
jecxz
lods
pusha
mov
imul
out
mov
mov
loop
xchg
and
adc
adc
shl
mov
and
gs
sub
dec
cmpsb
jg
adc
mov
mov
lcall
push
push
and
pop
pop
pop
nop
mov
mov
addr16
pop
sbb
add
sti
cmc
pop
jno
aaa
push
lods
ss
outsb
xlat
dec
setno
jmp
jmp
jno
mov
inc
jno
out
lret
stc
cwtl
jg
mov
loopne
decb
ret
loope
push
cmc
pop
imul
cmp
enterw
mov
add
cli
shr
pusha
and
mov
jno
in
xor
pop
mov
or
and
push
mov
dec
out
sbb
xchg
je
das
or
inc
xchg
enter
lahf
and
mov
mov
movzbl
jno
jg
rcrl
jecxz
clc
rolb
mov
daa
mov
sub
push
xor
and
cmp
push
stc
xchg
mov
or
and
xlat
push
cld
adc
insl
xchg
mov
xchg
jecxz
fstl
pop
mov
push
jg
pop
jb
jl
adc
mov
or
pop
or
lock
int
adc
fldcw
pop
mov
add
cld
jmp
pop
sbb
mov
je
lods
xor
sub
call
das
xchg
xchg
int3
addr16
lea
pop
int
cmp
pop
das
test
dec
sbbl
push
in
ss
push
mov
out
xchg
sbb
sbb
jle
lret
shl
daa
or
jge
add
mov
jp
pop
sti
iret
in
jne
cs
mov
hlt
xchg
jl
aas
mov
jne
push
out
int
jmp
nop
mov
mov
xor
das
imul
pusha
test
jae
pop
sbb
test
lahf
adc
inc
iret
cwtl
mov
xchg
mov
pop
mov
mov
icebp
int3
push
adcl
mov
ljmp
cmpsl
das
adc
lods
ja
jl
inc
js
ret
inc
je
push
fcomps
movsb
dec
jo
push
repnz
jge
testl
jno
cmp
icebp
nop
movsl
cmp
push
adc
sarl
filds
add
adc
dec
fwait
xchg
bound
adc
ret
jg
pop
push
out
sub
dec
repnz
pop
out
bnd
jmp
es
or
jmp
mov
jne
xor
aaa
daa
cmp
aas
popw
jmp
mov
lahf
fldenv
dec
fcompl
push
pop
xor
leave
sbb
pop
out
pop
jmp
inc
adc
cltd
pop
xchg
addr16
jmp
out
clc
in
xchg
stc
sbb
xchg
sbb
es
adc
xchg
xchg
lock
rol
das
or
stos
stos
shl
scas
lret
pop
dec
sbb
repnz
insl
mov
pop
in
mov
add
mov
or
shll
mov
sbb
inc
xor
in
adc
and
cmp
sub
push
mov
and
into
loope
lret
in
dec
sbb
sbb
rorb
data16
je
aas
dec
loopne
sub
les
and
pop
xchg
sti
rcll
popf
fidivrs
test
rcll
pop
dec
cmpsl
sub
inc
cld
xchg
std
cmp
mov
jecxz
repz
and
mov
imul
in
lock
adc
jp
pop
in
xor
xchg
and
sub
sub
mov
lcall
shl
mov
xor
stc
shl
aam
lret
mov
xchg
inc
lcall
ficoms
xor
mov
push
loope
rcrl
jg
xor
fs
jae
push
imul
xchg
ja
lret
idivl
jo
sarb
sbb
jb
test
and
push
repz
pop
jge
sub
sub
repz
and
jle
jecxz
stos
stos
lock
lock
cmp
cmpsl
pop
cltd
stos
repnz
movsl
sbb
adc
sub
mov
jbe
movsl
fcomip
pop
cltd
cmp
mov
ret
ret
lret
shll
fbstp
ss
jge
mov
sbb
push
mov
imul
jb
dec
dec
pop
dec
gs
xchg
xchg
int3
out
cwtl
shrb
pushf
in
leave
xor
cmp
xor
inc
sub
or
cwtl
stc
pop
cs
subl
in
xchg
or
adc
and
cld
mov
push
cmp
xor
xchg
push
lret
cmc
xchg
sbb
dec
iret
push
ljmp
mov
inc
in
shlb
adc
mov
cmp
lds
and
and
push
sbb
jecxz
sub
hlt
jne
lock
pop
pop
or
sub
dec
daa
push
mov
mov
pop
push
fcoms
fcoms
and
and
add
out
and
in
xlat
mov
push
dec
pop
xor
cltd
lods
iret
call
in
jmp
std
mov
push
pop
mov
daa
adc
aaa
test
mov
test
int
les
dec
adc
push
or
jmp
lods
inc
jno
xchg
dec
clc
test
js
add
pop
push
adc
mov
rcrb
aam
rorb
and
lea
or
sub
adc
lret
setg
inc
fisttpl
pop
adc
outsl
loop
push
add
pop
sbb
shll
adc
call
f2xm1
jecxz
pop
xlat
pop
mov
out
out
cs
sbb
scas
pop
insl
adc
ds
sbb
and
mov
sbb
jo
dec
out
rcpps
xor
or
sti
loop
xor
mov
cmpsl
ljmp
outsb
push
xor
xor
pop
push
cmp
inc
cmp
loop
push
mov
in
mov
ljmp
lock
test
sti
bound
loop
push
xchg
ret
mov
mov
aas
inc
xchg
jo
icebp
add
aaa
jmp
inc
sub
test
or
out
shlb
out
jecxz
or
add
icebp
rorb
int3
stos
push
jnp
lods
push
out
leave
xchg
lret
xchg
xchg
pop
popf
push
push
push
scas
enter
rclb
sub
cltd
lods
push
in
ljmp
sbb
sbb
add
or
jb
arpl
cld
outsb
das
int3
adc
inc
sbb
sub
scas
xchg
andl
jp
mov
mov
imul
aad
mov
loope
mov
mov
or
loopne
mov
and
in
dec
sub
dec
sahf
addl
fsts
loope
mov
mov
lock
mov
xlat
xor
jg
mov
stos
outsl
mov
sbb
bound
orl
or
sub
in
jmp
push
adc
out
je
add
xchg
pop
scas
icebp
cli
dec
lahf
enter
pop
pop
mov
xor
into
cmp
test
xlat
xor
lret
enter
push
lret
mov
push
fnclex
pop
mov
adc
add
pushl
mov
adc
adc
cli
ror
dec
enter
add
lea
ret
xor
mov
faddl
sti
sbb
cld
adc
dec
ljmp
arpl
push
jmp
fnstcw
adc
adc
stos
inc
xor
or
add
lds
movsl
loop
push
push
out
or
inc
cli
mov
pop
cs
imul
clc
scas
pop
jne
sbb
mov
add
mov
sbb
jo
cmp
mov
mov
push
call
js
pop
add
mov
sbb
aam
pop
jns
out
dec
rcrb
sahf
dec
call
sbb
cmp
rcll
ret
pop
or
lock
mov
sub
xchg
adc
lea
sti
cmp
fmul
rep
push
xchg
cs
sbb
adc
sub
add
or
cmp
xchg
dec
stc
jno
push
xchg
adc
int3
and
and
in
inc
jmp
movl
mov
in
data16
xor
movsb
repnz
xor
mov
add
aaa
pop
mov
jl
add
call
push
inc
push
cld
pushf
push
ljmp
aad
aas
out
mov
mov
push
push
sub
mov
inc
pushl
xor
aas
imul
dec
push
cmp
les
mov
out
and
mov
pop
pop
or
jp
xchg
and
jmp
sahf
movsb
fcoms
xchg
dec
push
cvtdq2ps
or
xchg
dec
adc
lea
fidivrs
add
insb
xor
daa
add
addr16
push
sbb
xor
push
loopne
dec
xchg
mov
adc
test
or
sarb
push
in
or
push
push
das
jmp
xlat
mov
fwait
cld
add
or
mov
or
stc
sbb
incb
lds
sbb
jnp
mov
push
cmp
and
test
out
scas
mov
and
stos
dec
sbb
pop
movsb
icebp
xor
xor
push
inc
hlt
ja
push
sbb
mov
movsl
xchg
movsb
in
mov
sbb
xchg
cmp
fldt
or
jb
and
push
nop
lahf
clc
push
cwtl
cwtl
jmp
out
inc
jbe
jns
mov
enter
jbe
mov
enter
fcmovnb
xchg
sub
in
adc
outsl
inc
into
push
add
push
lcall
das
nop
lret
aad
scas
cmp
cmp
arpl
mov
repnz
mov
mov
xor
stc
int3
jecxz
pop
rsm
vfrczpd
fdivr
stos
push
adc
mov
add
in
sub
pop
unpckhps
aad
mov
stc
or
xchg
ljmp
mov
subb
push
jp
xlat
push
cmpsb
cld
dec
cld
add
add
add
sub
int3
lret
xor
scas
arpl
in
xor
and
xchg
or
lock
or
jnp
xchg
push
invd
xchg
in
sbb
das
sbb
jmp
or
leave
adc
ja
fcompl
or
loop
mov
push
shlb
shl
sbbl
inc
loope
dec
fisttps
sbb
cmc
add
add
lods
jle
or
mov
pop
xor
push
dec
push
aas
test
adc
dec
shrl
lods
push
inc
test
adc
or
pop
mov
adc
mov
add
loopne
std
xlat
leave
mov
jmp
stos
lods
push
loope
or
mov
inc
call
xor
pop
pop
add
call
mov
imul
orl
mov
cs
adc
out
push
inc
in
jmp
in
sub
loope
in
and
pop
out
adc
ret
pop
jmp
ret
xlat
mov
in
dec
pop
jns
xor
call
ss
cmp
fucom
loopne
sub
add
jmp
pop
xchg
cwtl
push
out
stc
std
call
pop
fcoms
and
add
dec
cs
mull
sbb
adc
and
add
add
call
add
dec
lods
bound
sbbl
ljmp
push
pop
adc
xchg
shrb
cmp
popl
popa
or
fbstp
adc
mov
std
pop
add
loopne
add
jae
sub
fcmovnbe
xor
dec
adc
in
inc
sub
push
in
cli
jecxz
xlat
mov
fldl
or
or
mov
out
into
and
dec
mov
ljmp
fadd
shrl
sti
mov
addr16
xchg
xchg
mov
andb
or
pop
cmp
cwtl
lods
ret
sar
das
xor
roll
pop
addr16
mov
ret
insl
outsb
int3
cmp
or
mov
fnstsw
add
mov
insl
lcall
add
clc
scas
cltd
inc
and
xchg
xchg
dec
cli
sub
ret
cmp
push
fdivrs
lds
out
mov
shrl
fstl
sbb
push
fiaddl
mov
ds
call
mov
enter
jl
inc
fbstp
sbb
or
ss
test
jne
packssdw
push
and
iret
in
sub
aas
nop
dec
mov
dec
test
jl
pop
insb
hlt
arpl
cld
sub
sahf
cmpps
mov
xor
popf
cmpsl
insb
or
fisubrl
push
inc
mov
sbb
mov
xlat
pop
jge
push
or
cmp
lea
movsl
inc
pushf
notl
inc
mov
call
jmp
dec
hlt
xchg
adc
fwait
push
push
test
xor
fisttpl
andb
jge
dec
lods
and
cmp
enter
add
xor
pop
stos
shrd
push
pop
or
xor
jg
and
or
in
imul
test
mov
test
ja
inc
rcrb
iret
mov
xchg
adc
mov
sub
sbb
inc
enter
int
jae
add
inc
loope
fisttps
into
pop
out
pop
sub
leave
scas
xchg
jl
and
ret
mov
jecxz
cmc
mov
and
outsb
loop
and
outsb
jno
out
push
xchg
push
int
es
les
adc
xor
sti
push
in
scas
push
push
jns
ljmp
xchg
mov
mov
push
cmpsl
lret
push
mov
mov
fiadds
in
shl
sub
jae
or
pusha
and
xorl
and
xchg
cmp
popf
jno
mov
add
lods
fsubrl
mov
jecxz
sbb
jecxz
xlat
pop
inc
xor
imul
test
xlat
and
jmp
add
rcrb
add
scas
mov
mov
sub
lahf
ss
mov
xchg
push
pop
push
xorl
out
insl
xchg
lcall
mov
cltd
jle
sub
fwait
sbb
popa
adc
pop
jne
cmp
sti
mov
lds
push
addl
sub
mov
mov
mov
push
xlat
into
fs
jg
test
push
sbb
mov
sarb
jno
or
mov
inc
nop
fnsave
or
xor
inc
pop
mov
out
cli
sbb
cmpb
xor
dec
push
jmp
lock
xchg
pop
pusha
daa
mov
test
lds
xor
call
sarb
fiaddl
jmp
rorl
cmc
sub
mov
or
sbb
cwtl
jecxz
and
rclb
lahf
lcall
int
lods
mov
out
xchg
push
sub
ret
add
push
aaa
sbb
rclb
inc
fisttpll
enter
mov
jl
out
cmc
jmp
mov
pop
dec
daa
lods
ret
pusha
ficompl
cmp
jmp
sti
fbld
nop
into
lahf
cmp
mov
adc
aam
std
sbb
icebp
dec
in
rcrl
cmp
jnp
dec
mov
push
enter
xchg
jmp
push
pop
jp
out
pop
ljmp
lea
jmp
mov
inc
movsb
daa
xor
mov
ljmp
iret
pop
stos
out
sub
push
dec
dec
ljmp
sbb
add
push
repnz
push
aaa
push
cmp
mov
ljmp
into
and
adc
movsl
adc
pop
dec
mov
mov
sarb
pop
adc
popa
nop
jl
pop
cs
or
es
enter
fmul
mov
mov
push
inc
jbe
xlat
mov
mov
jne
jb
cmpsb
ret
ficoms
add
push
sbb
xchg
nop
das
xor
jmp
int3
insb
out
in
sbb
lods
mov
dec
fcmovnu
xor
ror
or
fidivrl
add
adc
mov
pop
sbb
push
mov
mov
and
enter
out
sub
int
jl
xor
rolb
and
xchg
dec
push
loope
xor
sub
cltd
lcall
lds
loopne
and
int3
push
leave
push
out
stc
lods
sbb
out
push
cmc
adc
mov
push
jp
out
dec
mov
dec
or
adc
stos
cld
mov
ja
mov
shlb
adc
xor
and
js
dec
out
lret
int
das
icebp
mov
xchg
xchg
add
mov
test
cltd
rcl
adc
ljmp
ficomps
inc
int
roll
cli
inc
sbb
les
lock
xorl
sahf
int
mov
pushf
loope
push
aaa
mov
dec
dec
movsl
outsl
gs
pop
pop
xchg
rorl
int3
cmpsb
repz
push
cs
inc
or
shll
cli
stc
or
sbb
in
pop
jno
pusha
hlt
jnp
fidivrs
sub
lods
insl
push
lcall
inc
sub
imul
ffreep
jbe
mov
or
adc
xchg
add
mov
push
dec
xchg
mov
movl
and
xchg
pusha
push
push
inc
inc
xchg
or
es
inc
inc
into
adc
rcl
mov
inc
pop
cld
cmc
and
scas
push
lcall
scas
pop
testl
std
fcoms
add
je
jp
or
add
inc
cwtl
lods
sbb
imul
test
jnp
mov
push
dec
es
int
or
loopne
jl
mov
stc
in
ljmp
push
ss
fcomip
xchg
xchg
stos
pop
inc
pop
shll
dec
mov
adc
xor
add
ror
lock
and
adc
cwtl
lcall
imul
lods
movsb
lret
inc
gs
cs
inc
push
adc
or
inc
jmp
aas
lcall
out
rolb
stos
ja
js
in
dec
test
xchg
jmp
das
arpl
inc
push
inc
sahf
inc
pop
jmp
pop
cmp
popf
xchg
push
dec
cmp
xor
in
sbb
das
div
xchg
or
das
insl
dec
and
dec
push
mov
insb
cmp
and
mov
and
dec
mov
cld
adc
addr16
ret
add
sbb
sbb
lds
mov
idiv
jle
fstpl
rcrl
mov
shr
outsl
inc
bound
xor
inc
shl
jbe
scas
notl
fcoml
out
cmp
loope
fbld
repz
fiadds
enter
fistps
movsl
xor
pushf
inc
xchg
inc
sub
jbe
mov
sbb
dec
dec
ljmp
jle
test
mov
mov
or
das
lret
pop
push
dec
or
movsb
sbbl
fists
lea
bound
int3
jbe
daa
add
insb
adc
dec
inc
adc
jbe
mov
in
adc
mov
scas
dec
add
pop
or
or
fwait
lcall
out
mov
push
leave
in
cwtl
add
pop
aam
lret
ror
pushf
dec
adc
mov
push
addr16
xor
dec
pop
fistl
dec
xchg
lret
imul
mov
roll
nop
out
aad
pusha
es
cmp
xor
lahf
jb
adc
mov
mov
mov
push
shl
cmp
dec
rcr
ja
mov
lret
roll
or
sbb
jno
lret
fldl
push
inc
inc
jo
or
dec
pop
gs
cld
xchg
cmpsl
test
idivb
sub
mov
xchg
out
xchg
sub
dec
jmp
fimull
add
call
enter
and
fimuls
imul
shll
gs
pop
sub
dec
andb
push
jle
push
faddl
or
rcrl
and
xchg
jg
data16
lret
out
mov
mov
xchg
cmpsl
int
std
iret
add
icebp
lret
loope
dec
adc
xor
imul
add
mov
lea
lods
adc
lahf
out
sub
xor
cwtl
jmp
lock
int
arpl
dec
pop
ljmp
add
mov
push
xor
xchg
gs
adc
into
shrl
stc
xor
pop
out
jno
mov
into
int3
outsb
aas
notb
lcall
xchg
out
movsl
cli
cwtl
pop
stos
add
in
fwait
loopne
and
pop
mov
adc
lea
sub
add
shlb
movsl
inc
lods
dec
xor
inc
mov
sarb
add
add
mov
and
jp
mov
adc
xchg
push
movsb
jb
add
add
cmp
pop
clc
cmpsb
int3
add
or
les
ror
mov
dec
mov
loop
jae
add
cmp
add
shr
or
dec
jecxz
es
out
or
sub
leave
test
lea
in
filds
lret
xchg
sub
or
inc
mov
xchg
or
push
sub
dec
jb
mov
fucom
loope
fadds
cmp
dec
dec
insl
pop
sbb
or
sub
xchg
fadds
in
out
mov
mov
mov
push
sub
in
jb
shrl
ficompl
mov
daa
cmc
test
lods
inc
or
ljmp
jl
mov
mov
adc
xchg
aaa
repz
dec
insl
add
rolb
fidivs
in
or
pop
adc
pusha
adc
sbb
jae
repnz
fstps
add
push
icebp
xor
mov
dec
dec
sti
scas
pop
aad
ja
aaa
stc
arpl
stos
leave
repnz
mov
and
fs
popf
sbb
sub
fcmove
in
es
xor
filds
leave
inc
test
subb
jmp
fdiv
enter
adc
int3
mov
js
pop
sbb
pusha
std
or
inc
sahf
pop
sbb
es
pop
add
and
ficomps
or
clc
fisttpl
iret
cmpsb
add
lea
cwtl
fcmovne
ja
push
out
mov
sbb
bound
xchg
mov
scas
jecxz
pop
fldcw
xorb
adc
mov
pop
mov
shll
sbb
push
sarw
mov
cmp
jbe
ljmp
pusha
push
adc
jg
cmc
mov
std
dec
push
jb
in
out
mov
repz
fsub
aad
pop
pop
xchg
sbb
sub
push
mov
or
mov
xor
cmc
orb
pop
out
xor
or
adc
cs
mov
jnp
out
fcomi
lret
sti
gs
mov
mov
pop
push
pop
mov
dec
add
cwtl
int3
orb
dec
imul
fadd
xchg
lret
int3
dec
inc
sub
xchg
lods
test
out
imul
ret
sbb
push
rol
cmp
and
lret
pop
pop
outsb
lods
daa
mov
into
test
orb
pop
orl
adc
adc
testl
pop
sarl
mov
mov
shr
dec
fisttpll
das
loop
sbb
sti
sar
push
fdivrs
pop
movsb
adc
test
push
pop
cmp
inc
fistl
jge
sbb
aam
cmp
sarl
adc
loope
sbb
mov
mov
sbb
dec
xor
mov
adc
xor
push
inc
pop
and
stc
enter
cltd
mov
nop
rolb
xor
jge
xchg
adc
testb
push
lcall
inc
cmpsb
add
push
test
mov
pop
fwait
mov
xor
push
mov
lret
rol
dec
push
imul
xchg
push
adc
out
jne
sbb
xchg
sti
mov
je
xchg
repnz
cmpsb
jo
jns
pop
lods
pop
xchg
sbb
sub
cld
adc
cmp
in
mov
push
mov
out
fidivl
int
xor
movb
fiaddl
es
push
jns
fdiv
enter
les
and
popf
jo
jl
arpl
aad
cmp
cmp
xor
push
push
bound
or
push
in
sbb
sbb
mov
loopne
sbb
ljmp
adc
pushf
or
jmp
pop
push
stos
int3
ffree
jp
aam
or
ljmp
sub
mov
je
inc
inc
fldcw
call
fninit
cmp
add
loopne
inc
fwait
outsb
lds
mov
mov
loope
xchg
aas
orb
out
sbb
inc
out
cmp
dec
jno
mov
push
mov
jl
aam
std
cmp
out
jb
mov
push
sub
repz
inc
mov
sbb
or
mov
ja
pop
push
or
mov
xorl
fldz
jns
xor
xchg
inc
out
fldl
mov
sbb
and
enter
sub
notb
testl
faddl
cwtl
pop
mov
jmp
sub
pop
xchg
jns
pop
jns
test
or
dec
rcrb
mov
ljmp
nop
iret
fbld
aam
sbb
int
fidivs
add
scas
gs
xlat
adc
es
fmull
push
inc
shl
sub
test
xor
lret
add
mov
jp
dec
mov
xor
outsb
pop
mov
dec
pop
lods
cmp
test
cmp
in
push
and
fwait
push
sub
pop
call
push
mov
inc
test
lahf
dec
das
xor
xchg
aaa
arpl
je
rol
push
fdivl
sbb
clc
dec
mov
fmulp
cmp
push
mov
cmp
mov
add
lods
mov
sbbb
orb
ljmp
imull
adc
and
cli
fadds
mov
sti
mov
icebp
jns
lods
jg
cmp
inc
pusha
fcoms
insb
jmp
js
or
in
ljmp
cld
adc
adc
mov
jmp
testb
mov
jge
lcall
icebp
fs
push
adc
ss
push
es
xlat
cmp
insb
mov
lea
lds
xchg
inc
sbb
int3
icebp
inc
sarb
pop
xorb
mov
adc
cmc
add
loope
push
icebp
fistpl
shll
enter
push
adc
fmull
lods
rolb
out
leave
int
and
sbb
inc
jecxz
mov
xchg
das
xor
not
out
add
xchg
add
cwtl
sub
sub
aam
stos
loopne
stc
sub
dec
outsl
pop
cmp
jnp
int3
fs
push
insb
pop
mov
cld
jbe
adc
in
pop
mov
mov
xchg
and
jnp
mov
cmp
pushf
lds
cld
fisttpll
pop
in
add
cmp
or
mov
lahf
out
leave
ljmp
inc
adc
cli
sar
leave
mov
test
dec
add
pop
lahf
ss
sbb
pop
jo
enter
dec
call
pop
cvtps2pi
stc
mov
jecxz
sbb
mov
push
add
jns
shrb
lods
movsl
cmp
sbb
cmpsl
stc
stc
insb
mov
cli
push
push
xor
inc
in
les
gs
lods
mov
test
sub
xchg
popa
sub
or
sbb
mov
dec
sti
dec
in
jns
addb
adc
mov
daa
mov
mov
mov
inc
imull
sbb
cmc
mov
adc
dec
movsl
and
fwait
adc
loop
in
out
xlat
sub
inc
sub
dec
test
es
imul
mov
pop
out
imulb
adc
ret
imul
sub
pop
jns
insl
movb
loope
mov
insb
push
pusha
jle
leave
or
cmpsl
xchg
dec
movsl
sar
shll
jnp
fmulp
inc
outsl
cs
sub
pop
or
push
and
pop
pop
push
mov
push
cs
lret
pop
lea
inc
cmp
cmp
add
cmp
scas
in
cld
push
mov
out
cmp
mov
add
inc
and
aad
mov
loop
sub
sub
testl
xchg
lods
xchg
shlb
lahf
push
icebp
imulb
adc
pop
inc
fwait
push
push
or
cltd
fisttps
mov
sbb
inc
imul
push
lret
mov
lods
xchg
cmp
xor
enter
xlat
pusha
addr16
aam
ja
jge
aas
fcomip
movsl
cld
inc
insb
lds
js
mov
and
int3
test
mov
sti
dec
sahf
ds
xor
leave
imul
sbb
pop
movups
mov
push
mov
pop
outsb
mov
lds
mov
dec
mov
jns
je
mov
jnp
mov
or
pop
push
pop
fnstcw
inc
jne
leave
ljmp
ffree
pop
inc
mov
jge
shr
imul
shl
lods
pop
sub
in
stc
popf
cs
call
lahf
loope
xchg
je
mov
xor
xlat
or
das
sti
sbb
shlb
iret
and
add
shl
ds
and
push
sahf
out
sbb
dec
iret
add
lea
pop
nop
ficompl
loop
xchg
fs
das
push
adc
add
mov
jo
loop
fidivs
pushf
imul
xor
sub
mov
sub
jae
fldenv
loopne
stos
jecxz
and
xchg
xor
test
inc
push
into
xchg
pop
mov
pop
jno
hlt
sbb
mov
sarl
inc
jo
arpl
shr
xor
pop
scas
cli
scas
inc
or
jmp
xchg
add
dec
fcom
sarl
mov
movsb
out
clc
adc
lret
enterw
in
ret
out
ret
add
sub
nop
imul
mov
xlat
fwait
in
fdivrs
xor
adc
push
sbb
pop
test
push
cmpsb
push
iret
lods
out
push
inc
aad
insb
inc
sar
daa
mov
inc
outsb
push
sub
sbb
xlat
xor
jo
es
cld
movsbl
mov
lahf
adc
js
sub
xchg
adc
jmp
inc
stc
adc
mov
and
call
fidivrs
fisubl
ret
mov
int
cmp
into
cmp
sarb
cs
inc
aas
xchg
out
push
sub
loop
mov
pinsrw
enter
cmp
je
scas
cwtl
jnp
pop
bnd
cld
jne
je
mov
and
add
and
in
sub
into
rorl
mov
xlat
stos
mov
pop
adc
cmpsl
cltd
dec
stos
or
fimuls
jg
inc
lret
and
cmpsl
or
pusha
xchg
outsl
and
and
sub
call
aas
popa
push
jb
ljmp
pop
stos
mov
xor
lea
add
int3
test
imul
sbb
jbe
push
mov
pop
xor
inc
in
cmp
jo
pushf
ret
push
jno
mov
inc
mov
xlat
shll
xor
das
data16
nop
les
xlat
jbe
jp
mov
sub
mov
lret
pop
pop
and
add
iret
je
add
int
inc
stc
add
pop
lret
push
fdiv
ljmp
loopne
cli
aas
test
fmull
cwtl
cmp
xchg
pop
int3
fiadds
stos
add
jnp
add
push
xorl
out
dec
je
xchg
call
mov
cltd
out
mov
xchg
hlt
rclb
sbb
test
sti
add
enter
repz
cs
xchg
sub
dec
dec
das
sbb
das
xor
push
clc
aas
fs
mov
and
mov
xchg
in
movsb
push
pop
movsl
and
fcmove
lss
shrb
test
rcrb
push
call
test
jmp
adc
clc
sbb
push
push
xchg
fnstenv
inc
pop
adcb
mov
and
and
imul
and
push
stc
mul
movsb
loope
fistps
pusha
lret
movsb
add
jns
lods
test
repnz
jbe
ficoms
mov
outsl
xor
ud2
or
imul
das
cltd
rcrb
hlt
std
mov
xor
jecxz
jne
dec
sbb
leave
loopne
xor
pop
add
orl
hlt
shr
cwtl
adc
pop
mov
test
xchg
mov
add
push
movsl
andl
xchg
jmp
sar
in
add
das
pop
or
das
movsl
mov
sbb
and
cmp
pop
leave
inc
or
dec
push
sbb
ljmp
pop
pop
rcll
dec
movsl
xlat
and
jne
shlb
ret
lahf
xor
out
lock
jno
cmp
or
sub
sbb
push
rcll
adc
into
mov
jnp
int
sbb
mov
push
sbb
mov
dec
sbb
daa
repnz
mov
test
xlat
push
xor
dec
mov
mov
xor
xchg
loopne
repnz
xor
in
inc
stos
sbb
push
sti
cmpsl
cmp
inc
sbb
xchg
sbb
out
mov
jb
lods
sbb
rcrl
push
or
lods
cmpl
cmc
xchg
aad
lret
cmp
insl
lds
ret
fsubl
test
scas
xor
fadd
xchg
sub
testl
pop
fimull
dec
mov
pop
repnz
lds
ret
cmc
push
lods
push
lods
mov
insl
mov
in
add
clc
xchg
pop
mov
das
xchg
push
int3
sbb
jmp
cmp
mov
es
mov
push
sub
or
ret
bnd
stos
pop
xor
add
jmp
loopne
lods
mov
ficomps
dec
xchg
lret
rcll
loop
adc
les
or
push
inc
mov
sbb
mov
sbb
cwtl
inc
mov
loop
lahf
add
es
push
add
or
xor
xor
sbb
mov
inc
dec
push
int3
add
mov
popl
mov
sbb
insb
into
in
xchg
enter
shl
pop
jg
and
mov
pop
pop
out
lahf
and
cmpsb
pop
xchg
imul
xchg
pop
pop
outsb
and
movsb
shrl
fmul
push
lods
or
sbb
sbb
movsb
shrl
add
sbb
movsl
lods
push
ja
xchg
test
lock
inc
pop
xchg
jl
or
lret
lcall
mov
fwait
adc
rcl
inc
pop
in
jne
or
loope
mov
shlb
cwtl
lods
insb
add
jge
pop
aam
sahf
push
pop
add
lods
sub
loope
pop
xorl
xchg
pop
ds
movsl
pop
or
pop
push
mov
dec
mov
adc
popf
cmp
and
cltd
mov
and
mov
and
lock
ret
fidivs
pop
dec
ljmp
hlt
dec
repnz
in
fistl
pop
test
add
push
sti
stc
xchg
or
lret
neg
out
lea
dec
push
xchg
xor
idiv
jl
push
sbb
fwait
je
add
das
in
xor
inc
into
cwtl
xchg
or
pop
in
mov
arpl
xor
mov
push
fs
cld
inc
pop
gs
negb
lcall
repnz
cwtl
icebp
cmpsb
pop
sbb
scas
rcll
in
mov
mov
mov
cmp
enter
xchg
sbb
xchg
adc
mov
loopne
ss
leavew
aad
fistpll
rcrl
callw
xor
sbb
ret
test
test
shl
fmul
pop
cs
hlt
mov
dec
xor
add
pop
jne
sbb
call
loopne
jmp
test
mov
stos
sbb
fstpl
ljmp
cmpsl
lret
sbbb
lcall
rclb
xor
jecxz
nop
sti
push
add
push
les
xchg
adc
ljmp
scas
pop
in
push
ds
sahf
lret
pop
das
pusha
aas
adc
jmp
shrb
sbb
loope
mov
test
or
lds
addr16
or
sbb
std
stos
add
jae
enter
sbb
fwait
repnz
sbb
and
dec
mov
cli
cmp
arpl
sbb
inc
jmp
shr
in
shlb
aaa
pop
push
mov
jg
leave
push
popa
lock
or
jb
mov
dec
inc
out
rolb
loop
lock
dec
mov
lods
jmp
sahf
sbb
es
stos
addb
cmp
add
sti
push
and
pop
inc
push
mov
pop
sub
insb
test
pop
mov
inc
xlat
push
cltd
or
sub
xchg
out
push
cli
add
sbb
pop
nop
and
add
mov
cmc
and
pusha
xchg
jne
sbb
roll
das
xchg
or
ss
inc
add
or
and
movl
or
clc
addr16
cli
jae
jmp
cmpsl
pop
int3
in
sahf
push
sbb
rcrl
stos
or
fsubrl
adc
fisubrs
adc
jle
outsb
xor
add
enter
out
rcrl
dec
lcall
xchg
mov
lcall
mov
test
jb
test
mov
sbb
mov
pop
scas
fcom
push
dec
sbbb
adc
fisttps
dec
push
mov
inc
mov
ljmp
add
inc
pop
ud0
cmp
or
mov
jnp
push
mov
lret
ud1
push
mov
push
push
xor
mov
out
add
mov
or
sub
pushf
daa
sbb
sbb
push
and
mov
pop
lret
fmull
mov
lahf
pop
loop
movsb
cmp
mov
bound
popa
inc
outsb
jp
adc
mov
insb
fmul
lcall
or
mov
es
iret
iret
mov
add
xchg
cld
jns
mov
lcall
inc
sbb
cld
inc
add
inc
in
cwtl
adc
out
mov
mov
shll
aas
sbb
sub
sbb
test
pusha
add
sub
mov
jmp
scas
jecxz
pop
xorl
lods
clc
daa
xor
enter
xor
mov
add
in
mov
cmpsl
fcmovnu
jno
adc
xlat
jae
out
pop
fists
cli
cmpsb
xchg
adc
call
cmp
sbb
nop
pop
iret
mov
adc
inc
jecxz
scas
and
add
cmpl
mov
cld
mov
mov
repnz
mov
cmc
mov
push
stc
push
push
aas
or
add
and
int
adc
and
out
mov
push
mov
enter
in
inc
mov
dec
lds
xor
lods
rcr
clc
xchg
ud2
xor
out
loope
andl
xor
fdivs
mov
gs
lea
imul
test
cmp
in
add
jae
pop
mov
aam
mov
daa
mov
sub
roll
mov
mov
or
pop
roll
shrl
mov
retw
jno
xchg
mov
stc
xlat
sub
out
jmp
paddusb
das
or
sarb
push
loope
leave
mov
cmp
int
aaa
por
inc
cmp
pop
pop
cwtl
test
out
push
pop
fists
into
adc
or
adc
and
fs
mov
inc
dec
stos
inc
inc
outsl
lret
pop
sbb
ds
xor
add
test
mov
adc
xor
sub
and
imul
imul
pusha
int3
xchg
add
loop
mov
out
adc
cwtl
mov
pminub
push
insl
lock
outsb
xchg
cmp
mov
pop
and
fists
pop
and
add
dec
inc
sbb
dec
leave
in
ss
jne
or
inc
aaa
adc
jl
sub
out
ret
rorl
cltd
lahf
or
ja
imul
push
pushf
into
mov
psllq
clc
inc
xor
pop
sbb
jmp
mov
scas
mov
mov
adc
jo
jle
inc
out
rcrb
loope
sub
xlat
adc
outsl
adc
or
stos
out
xchg
jle
mov
lret
jg
out
out
insb
imul
ret
push
lahf
test
lret
jb
xor
test
push
loopne
aam
or
or
cmp
test
sti
repz
dec
popf
jmp
or
out
sbb
cmp
push
out
int3
outsb
orl
adc
ss
arpl
push
cs
fsts
clc
cmp
dec
pop
repnz
mov
shl
iret
xor
xor
or
mov
add
or
or
cmc
cld
xor
icebp
lret
dec
inc
pop
jns
xchg
int
mov
ljmp
dec
inc
adc
mov
dec
add
bound
in
cmp
push
pop
mov
sbb
fdivl
std
daa
test
xchg
cmp
jae
test
insb
push
enter
das
adc
mov
stc
decb
mov
imul
push
push
cmp
mov
test
pop
loope
mov
xor
lods
push
inc
ljmp
cs
add
dec
mov
xor
cmp
mov
fwait
les
neg
fildll
addl
sub
dec
in
test
fistps
insb
or
push
xor
fs
jecxz
out
xlat
mov
sbb
xchg
or
mov
push
lret
cmc
push
fmuls
mov
movsb
ret
lds
or
iret
mov
sub
arpl
sti
aam
inc
sbb
mov
xchg
adc
xchg
mov
hlt
das
rcr
or
mov
xor
jl
pop
inc
adc
shll
adc
subb
das
test
test
mov
stc
fs
push
mov
cmp
mov
aad
aad
test
bound
movsl
data16
ljmp
or
or
popa
push
enter
rcrb
or
insl
and
inc
pop
les
mov
out
faddl
sahf
cmp
push
mov
mov
pop
push
jmp
add
and
lea
adc
adc
ljmp
mov
idivl
fidivs
jnp
and
out
loopne
in
sbb
cmp
and
addr16
mov
mov
and
in
stos
test
orb
lods
mulb
mov
addr16
lock
loop
sbb
mov
mov
push
mov
push
sbb
xor
add
in
testb
sbb
fiaddl
imul
fidivl
xchg
dec
cmp
outsb
movsl
and
testl
xlat
xor
jge
and
call
scas
popa
icebp
mov
stos
insl
jge
ret
add
add
enter
leave
out
adc
repnz
xchg
or
push
int3
cli
and
mov
mov
inc
mov
loope
sbb
cmp
aas
cmc
test
push
inc
pop
dec
pop
dec
push
stc
lock
sbb
aad
xchg
add
dec
mov
push
cmpsl
add
int
adc
add
xchg
in
lret
inc
push
fidivrs
add
push
or
in
mov
pop
inc
aas
into
mov
mov
mov
in
xlat
dec
je
jo
push
sub
shrl
jp
pop
or
stos
int
imul
sub
inc
in
mov
or
sbb
sarb
iret
cli
fmuls
or
lds
pop
push
fstp
jmp
sbb
mov
or
mov
jg
cmp
icebp
cmpsl
xchg
lea
or
rcl
xchg
leave
inc
sub
mov
sub
dec
mov
mov
mov
jl
adc
add
imul
or
jl
outsl
mov
imull
adc
mov
outsb
jo
outsb
xor
iret
and
lcall
push
fdivs
fcmovbe
cmp
jo
das
jno
adc
adc
imul
aad
movsb
sub
pop
fwait
sub
fdivrs
shlb
lea
push
popa
inc
je
mov
lods
mov
jecxz
jge
xor
icebp
sbb
cld
loope
outsl
rcr
testb
jge
sub
sbb
mov
mov
add
and
inc
jl
out
out
jmp
shlb
repnz
sbb
lds
fisubrs
fistpl
sub
push
shrb
push
cmpsl
xor
aaa
in
aam
pop
jle
mov
pop
mov
or
loopne
add
pop
push
bound
leave
fdivrl
mov
adc
scas
or
test
mov
out
cli
cmp
or
into
mov
dec
adc
and
lcall
adc
pop
stc
pop
sub
push
ret
jl
sbb
out
sbb
mov
sbb
fs
loop
enter
dec
xor
sqrtpd
fs
cmp
and
jge
negb
aam
and
cmpsb
and
pop
lcall
fisubs
mov
out
sbb
out
in
mov
and
xchg
add
jmp
xchg
daa
jb
popl
outsb
repz
mov
aad
js
dec
popa
into
mov
jae
push
cld
movsl
xchg
imul
push
hlt
sbb
popf
iret
inc
shll
das
push
xlat
mov
mov
in
stos
aaa
cltd
dec
push
popa
insb
push
lods
inc
xchg
pop
mov
add
hlt
mov
cmp
and
push
hlt
inc
or
xor
inc
xchg
jnp
or
add
lahf
loopne
or
xchg
loop
scas
out
pop
fwait
pop
cmp
or
dec
push
repz
jl
inc
add
pop
and
jne
lods
mov
fcoms
inc
cmp
xchg
in
addb
outsb
sarl
fidivs
push
in
ret
inc
adc
jge
insl
push
push
and
push
inc
std
gs
inc
mov
mov
push
or
add
and
lret
jmp
mov
mov
inc
xor
dec
sbb
sarb
sarb
sarb
addb
xchg
sbb
jg
mov
inc
iret
rcrl
rorl
or
popf
push
or
sbb
push
rol
mov
fwait
xlat
mov
sub
std
lods
pop
xor
mov
xchg
mov
test
ret
sbb
scas
sahf
and
aaa
lds
je
jo
inc
shl
xor
sbb
inc
mov
mov
jnp
xchg
stos
lods
jmp
shll
sub
push
cmp
push
cld
stos
or
inc
jo
stc
data16
hlt
out
call
push
mov
jno
jno
cmp
out
loope
sahf
cmp
cltd
jbe
mov
and
cli
cmp
lds
int3
mov
sub
jecxz
int
fistl
or
mov
mov
and
dec
enter
je
clts
mov
loopne
ret
xchg
in
loop
xlat
rolb
xchg
outsb
jp
sub
mov
out
lock
testl
cs
cmp
mov
mov
xor
mov
test
mov
incl
mov
lods
les
shll
dec
mov
pop
push
pop
movsl
popl
bound
jg
pop
leave
sbb
test
outsb
std
xor
aam
in
pop
cs
sti
es
xor
inc
cwtl
lock
aam
mov
cld
data16
lea
out
pusha
fisubrl
test
and
lock
xchg
sub
fucom
lret
loopne
inc
and
loope
lcall
add
fisubs
int
sub
cltd
add
stc
pop
notl
fwait
or
adc
out
adc
loop
fwait
out
mov
sbb
mov
cmc
mov
arpl
fcomps
dec
iret
ret
testb
mov
int3
arpl
loopne
int
add
fisttpl
xor
sbb
test
jmp
mov
nop
in
scas
inc
out
xchg
cli
and
fwait
pop
mov
out
xchg
sbb
lahf
xor
lods
add
ds
mov
dec
xchg
dec
fwait
sahf
push
xor
mov
jl
add
cmp
dec
sarl
ret
pop
insb
xor
das
outsl
or
jbe
arpl
lcall
or
or
mov
sub
popf
xchg
cld
push
int
push
rcrl
add
es
add
ret
jbe
mov
pop
in
add
xchg
lcall
sub
push
idivl
mov
hlt
repnz
icebp
cmpsl
inc
sub
jae
xorl
push
mov
or
fstpt
cvtpi2ps
ret
mov
cs
in
mov
xchg
mov
sbb
lods
push
cmpsb
sti
arpl
sbb
mov
cltd
adc
mov
std
pusha
xor
add
icebp
xchg
inc
ret
xor
imul
mov
lcall
or
ficoml
adc
lret
sbb
or
insl
and
cmpsb
jae
push
mov
mov
and
lods
mov
pop
mov
sbb
or
cmpl
ret
jmp
outsl
or
mov
test
pushf
dec
jo
cmp
push
insl
adc
in
jecxz
pop
insb
outsl
lds
inc
pop
pop
xor
add
lahf
sbb
pop
dec
jae
sub
pop
push
iret
sbb
push
decb
push
popa
les
or
mov
into
int
sti
int
jb
push
pop
movsb
das
inc
add
fsubl
mov
or
pop
dec
or
in
mov
fdivs
jno
or
jo
xor
or
ljmp
push
iret
sub
ret
dec
mov
add
sbb
ja
aad
mov
sbb
xchg
push
in
in
testb
pushf
jg
fisttps
pop
in
mov
xchg
jnp
jecxz
adc
adc
cmp
pop
add
sbb
push
mov
stos
mov
ret
jnp
pop
mov
adc
imul
adc
sbb
sbb
mov
mov
lods
xchg
xchg
movsl
xor
movsl
popa
sbb
sbb
in
outsl
ret
rolb
cmp
popa
cmp
lcall
leave
jns
xor
pop
lods
sbb
aas
repnz
jnp
jp
test
or
or
mov
push
or
and
push
sbb
lea
lret
out
push
mov
mov
mov
or
jno
adc
in
mov
sbb
ret
mov
cli
sub
pop
dec
push
pop
xchg
mov
ret
jno
push
int
xchg
or
inc
push
imul
daa
jnp
cmp
xchg
mov
loop
mov
or
gs
xor
add
fnstcw
sbb
xchg
imul
adc
dec
shlb
sbb
es
inc
or
mov
sahf
adc
adcb
icebp
push
xchg
adc
sub
in
sahf
cmp
xchg
or
out
ret
cmp
mov
and
loop
jbe
mov
jns
mov
fs
xchg
sbb
add
xchg
cmc
or
shr
mov
push
mov
scas
jne
xchg
push
jbe
lcall
sbb
movsb
dec
or
stos
mov
fbld
adc
xchg
fisttpl
imul
xorl
mov
mov
or
fdiv
cmc
sti
rcrl
mov
loopne
ret
or
sbb
dec
test
ja
cwtl
pop
jle
jb
jl
stc
iret
repz
fwait
inc
add
sub
shl
movsb
ret
aas
sub
or
scas
arpl
std
push
adc
and
jmp
loop
or
aaa
sti
inc
sbb
push
dec
rcrl
jmp
push
clc
and
xlat
mov
adc
and
mov
pop
push
popf
popl
jnp
mov
iret
cmp
daa
or
leave
xchg
test
pop
or
or
test
fcom
jg
pusha
shr
shrb
fwait
push
in
cmp
imul
add
shll
inc
idivl
add
out
xor
repnz
pop
cmp
jno
or
inc
nop
push
rorb
jp
dec
sbb
fnsave
or
imul
adc
adc
loop
icebp
call
pfmin
sub
and
call
aaa
mov
xor
jp
cmp
xor
push
mov
jb
fwait
cmp
xor
push
sub
jmp
loop
repz
mov
mov
adc
inc
scas
cmp
xor
fwait
mov
lods
das
adc
xchg
pop
mov
mov
test
test
dec
mov
and
push
mov
fdivrs
pusha
shlb
cmp
outsl
mov
insb
pushf
stos
mov
add
fisubrs
test
bswap
push
sbb
push
ret
leave
lret
adc
pop
cmp
cmp
rcrl
mov
test
sti
inc
jbe
outsb
or
jg,pn
pusha
clc
and
inc
dec
cmpsb
or
push
ljmp
stos
out
loopne
std
fadds
pop
rorb
push
xor
add
sbb
adc
adc
sarb
xchg
decl
ffreep
sub
sbb
lret
jne
cltd
mov
ficoml
xlat
cwtl
and
sub
jne
int3
dec
movsl
pop
call
jg
fimuls
movsb
pop
push
orb
xor
ud2
fisttpl
shll
aam
les
jecxz
pop
mov
cmp
pop
cmp
daa
clc
stos
cwtl
mov
jbe
lahf
mov
enter
adc
mov
divb
in
mov
pop
lahf
mov
and
rcl
cmp
mov
ret
shrb
outsl
sarb
subb
pop
mov
lods
das
fdivr
sub
les
into
or
test
fucomp
leave
push
dec
xor
cmp
ljmp
push
pop
testl
shrb
aam
dec
push
outsl
cmc
and
jnp
cs
pop
xor
pop
loop
sbb
adc
data16
xor
cmp
push
test
xchg
lods
push
dec
xchg
or
dec
mov
repnz
out
icebp
es
test
pop
sub
and
stos
test
cmp
lock
fcomps
scas
arpl
daa
jle
inc
repnz
mov
xchg
push
inc
das
adc
inc
xor
fisubrs
xchg
mov
or
xchg
ljmp
mov
aam
insl
loope
int
mov
in
inc
mov
divb
jge
sti
or
xchg
jecxz
inc
mov
sub
bound
js
push
jbe
mov
dec
pop
jg
loop
sub
sub
ss
out
imul
adc
testl
shrb
fidivrs
test
bound
insl
ret
int
shl
pop
mov
inc
cmpsl
andb
jmp
leave
outsl
xchg
or
jbe
sbb
aad
sarl
loop
out
orl
dec
inc
mov
in
lea
or
ret
sbb
cli
or
jnp
test
adc
push
push
ror
rcr
aam
shlb
mov
add
je
add
out
push
dec
pop
push
mov
dec
pop
cld
mov
add
add
bound
fsubrp
add
add
xor
vunpckhps
push
adc
movsl
push
inc
push
mov
inc
mov
aam
cmc
and
sbb
clc
scas
adc
mov
lcall
cltd
movsb
mov
popa
aas
and
orb
pushf
sbb
mov
sbb
or
mov
sarl
rorl
cmc
dec
inc
xor
dec
inc
push
or
cmpl
bound
cld
or
mov
mov
cld
jae
add
insb
adc
cmp
int
out
aas
mov
add
jle
imul
and
pusha
jp
xchg
xor
in
adc
jne
imul
int3
icebp
xchg
xor
jns
mov
mov
int3
push
pop
or
push
repnz
seta
jg
ret
aam
ljmp
xchg
and
inc
adc
mov
jmp
pop
mov
mov
fmul
mov
xlat
repnz
cmp
ljmp
or
in
fimuls
mov
xchg
clc
jb
mov
mov
mov
adc
xchg
clc
out
add
sbb
mov
fmulp
cld
lret
aam
roll
insb
mov
mov
jbe
xor
js
sub
jbe
pushf
adc
outsb
mov
sar
arpl
lods
cltd
lock
mov
lods
and
test
lcall
xor
and
sub
fnstcw
xor
rolb
clc
jo
push
mov
xor
sub
pop
in
lahf
sub
fwait
int
lock
push
sbbl
lret
int
mov
sarl
arpl
sbb
mov
jns
nop
imul
insl
lods
push
pop
pop
popf
lock
push
int3
rol
fstpt
pop
cmc
rcrl
mov
inc
neg
dec
dec
insb
push
mov
and
cli
or
push
scas
lahf
add
mov
fwait
aad
jp
jp
or
scas
cmp
add
faddl
mov
mul
int3
sti
sub
cmp
dec
push
imul
cmp
push
cwtl
xchg
idivb
addr16
push
shrl
ss
add
sub
dec
in
mov
sbb
cmp
push
sub
pusha
mov
lret
jno
dec
fsubrl
dec
or
pushl
push
mov
outsl
jb
data16
out
push
aam
in
lock
das
in
add
mov
xor
sub
and
pop
sub
outsl
mov
shlb
push
subl
hlt
push
jae
sbb
inc
movsb
push
shrl
and
cmp
rorl
xchg
xor
lret
cmp
cmp
pop
sub
inc
mov
cmp
lret
xchg
test
das
mov
movsl
movsb
sub
lods
cmp
push
add
or
push
shr
lock
out
add
outsl
and
cmp
faddp
pop
addr16
add
jecxz
ljmp
stc
xchg
loop
xchg
icebp
and
rolb
imul
addb
fsubrl
pusha
sbb
jb
sahf
cli
scas
lea
out
shrb
gs
jne
pop
sbb
mov
pop
xchg
add
mov
jmp
stos
mov
sbbl
inc
aam
out
sti
aas
loop
fldt
xor
lds
add
xchg
fstl
arpl
and
jns
adc
sbb
add
loop
in
movsl
sbb
push
int3
pop
hlt
loop
fwait
add
lret
leave
mov
js
ds
fwait
pop
lret
clc
insl
scas
fs
insl
mov
fisttpl
shr
push
lods
std
jmp
push
test
popa
out
adc
push
and
jnp
jne
mov
outsl
add
xchg
test
sahf
test
imul
mov
out
or
and
pop
repz
xchg
sbb
shl
jle
jb
mov
jl
das
mov
insl
mov
cmp
xchg
pop
int
fadds
aaa
inc
sarb
loope
cmp
rcrl
dec
xor
or
call
jne
push
rcr
je
cs
pusha
push
gs
aaa
adc
rcll
cltd
or
mov
sahf
mov
scas
fiadds
push
push
imul
packsswb
push
jns
test
popa
cmpl
push
xchg
addr16
sub
fisubl
cmp
xchg
mov
mov
iret
bound
insb
mov
pop
lret
cmp
clc
push
and
xorl
inc
lret
add
lds
or
lret
dec
add
mov
inc
mov
in
mov
mov
jae
add
pusha
xor
sub
aam
aas
insl
in
and
mov
sbb
xor
fldcw
mov
mov
cwtl
stos
stos
and
movsb
outsl
outsl
pop
pop
mov
push
hlt
es
mov
insl
in
fldt
dec
test
sbb
aaa
test
pop
add
and
pop
rclb
aaa
inc
dec
and
rorb
jnp
xor
xor
pop
sarl
xor
sub
push
test
lret
int
pop
push
mov
mov
cli
xor
fimull
test
leave
leave
bound
sub
daa
mov
push
in
outsl
fidivl
mov
sbbl
dec
dec
repz
inc
mov
stos
std
daa
pusha
jb
outsb
test
cli
dec
cltd
sbb
data16
lods
sahf
shlb
sbb
lods
fisubrl
dec
hlt
pop
in
leave
out
sub
int3
push
repz
sub
push
in
and
or
fiadds
ficompl
int
daa
aaa
rcrl
daa
push
lods
dec
js
movsb
push
adcl
dec
aad
sbb
out
xlat
fdivrl
sbb
jecxz
pop
or
out
icebp
inc
xlat
sbb
les
bswap
xchg
jecxz
and
adc
roll
outsb
hlt
pop
les
xchg
inc
inc
pop
loopne
scas
inc
jb
shl
and
and
adc
sarb
pop
imul
iret
ss
inc
test
push
testl
cmp
sub
call
andb
lahf
jo
imul
in
jnp
mov
andl
cwtl
xchg
insb
xlat
adc
icebp
mov
sub
jae
int3
jge
cmpsl
lods
lods
outsl
insb
pop
add
cmpl
xor
orl
xchg
pop
sub
nop
fldcw
adc
popf
jbe
jecxz
call
popf
jle
inc
and
nop
rcrb
mov
lret
jae
int
in
shr
xor
dec
lret
push
repnz
mov
mov
subb
jecxz
lret
imul
pop
mov
mov
div
pop
subl
push
dec
push
mov
xchg
jno
fnsave
sti
xor
ds
test
mov
aaa
std
mov
imul
or
jg
cmpb
icebp
call
insb
mov
cmpsl
mov
xor
mov
outsb
push
ret
test
fcoms
shrl
cs
cs
dec
cmc
daa
int
call
or
jne
aam
stc
dec
xchg
call
push
push
shll
xchg
adc
ja
jle
pop
mull
sti
mov
scas
or
xchg
mov
out
aam
dec
fcompl
mov
and
jg
insl
movsb
outsl
int3
add
adc
insl
sarl
andl
and
scas
push
ret
inc
xchg
outsb
inc
add
jns
aaa
shll
sub
push
sahf
lahf
jb
inc
into
sub
cli
addr16
shrl
inc
adc
lahf
shrd
mov
imul
push
xor
push
push
fisubrs
pop
das
shrl
clc
cmp
mov
push
lcall
inc
ljmp
adc
in
data16
call
jnp
dec
jl
xor
in
push
mov
mov
out
andl
inc
imul
xchg
mov
aaa
dec
daa
ret
insl
pusha
test
cmp
adc
xchg
mov
test
mov
data16
movsb
or
bound
inc
or
sub
add
ret
ds
hlt
sub
xor
movb
fistpl
ficoml
mov
jg
lea
out
adc
into
in
mov
pop
inc
popf
xor
lret
and
rol
cs
push
dec
cmp
outsb
arpl
dec
loopne
jge
std
arpl
push
adc
push
popf
add
jnp
jmp
sub
pushf
or
mov
mov
adc
movsl
scas
push
lret
lahf
push
arpl
rolb
rorb
xor
lea
shlb
mov
sbb
test
pop
mov
and
mov
add
mov
int3
dec
scas
cmp
mov
push
out
sarb
cmp
fstp
clc
shll
dec
test
imul
notb
stc
daa
jae
fwait
pushf
add
pop
mov
fisubs
jae
jecxz
cltd
stos
jle
test
in
les
outsl
fnstsw
jno
test
hlt
ffree
in
pop
mov
dec
lods
into
imul
orb
pop
rcr
sub
das
pop
jge
lret
xchg
daa
paddd
mov
fsubrl
lods
mov
test
lock
mov
mov
pop
les
and
sbb
shlb
and
jle
pop
inc
mov
ljmp
cmpsb
jo
mov
mov
mov
ljmp
dec
xchg
mov
inc
movsl
test
lret
or
testb
aam
fisttpll
jns
icebp
test
test
or
dec
cltd
jne
mov
fcoms
inc
les
adc
nop
loopne
mov
in
shl
loopne
fs
jbe
rorb
push
push
in
out
std
rorb
adc
or
lcall
mov
je
testl
outsl
in
fmuls
cmp
xchg
lret
icebp
shl
and
repz
inc
subb
out
bound
push
mov
cli
mov
cwtl
xchg
lgs
in
lahf
jecxz
mov
sub
cmp
adc
stos
cmpsl
imul
jl
dec
push
xor
out
jb
fistpll
push
and
jns
loopne
repnz
imul
loope
lock
and
pop
popf
sbb
idivl
ficoms
insb
lahf
xchg
xorb
movzwl
mov
pop
cmpl
pop
cmp
and
jecxz
sar
outsl
sbb
mov
cmp
das
sahf
push
jb
iret
ds
sbb
push
xchg
movsl
adc
insb
push
icebp
jecxz
sbb
mov
hlt
xchg
fwait
dec
fmull
mov
adc
mov
cmp
mov
scas
ds
fildl
das
in
out
neg
hlt
mov
cmp
std
fisubrl
ret
data16
jnp
mov
push
fnstcw
mov
imul
mov
and
imul
or
in
inc
test
jmp
mov
fcmovnb
ds
icebp
filds
xor
xchg
lea
movsb
sub
pop
xchg
jge
mov
jg
dec
adc
mov
mov
roll
pop
icebp
shrw
sbb
out
out
pop
pop
mov
pop
or
cs
add
mov
dec
or
cmpsl
sbbl
mov
mov
aam
lahf
lock
leave
or
jb
push
call
iret
roll
add
sub
nop
nop
dec
movsb
mov
dec
cmc
inc
cmp
sub
sub
idivb
insb
push
jb
mov
lds
js
or
add
xor
psllq
movsb
mov
push
sbb
mov
pop
flds
leave
add
mov
add
mov
das
mov
jmp
jbe
lahf
jmp
enter
pop
push
mov
or
sub
outsl
push
fisttpl
fs
rcr
lahf
cmpsl
pusha
add
pop
into
inc
icebp
mov
mov
push
fiaddl
cmc
outsl
dec
cwtl
sbb
xchg
jnp
ret
or
mov
push
int3
jg
cmp
lock
fistpll
fdiv
push
fdivrs
stc
lods
ficompl
adc
xchg
sahf
add
mov
leave
add
mov
pop
mov
je
fcom
mov
das
jl
jne
push
pop
mov
loop
loope
mov
in
fdivrl
mov
data16
and
lods
pop
pop
sub
dec
push
sub
pop
ficoms
cld
sub
fstpl
inc
mov
ss
fdiv
cltd
cmpsl
jecxz
jno
scas
clc
jmp
xor
outsb
movsl
sbb
push
xchg
mov
or
jne
push
sbb
out
loopne
xchg
stos
xor
push
insb
xchg
sahf
lods
scas
dec
clc
inc
subb
mov
sub
std
xchg
aad
bound
pop
lods
cmp
push
clc
fildl
mov
mov
fnstsw
and
dec
jge
sahf
cmp
and
push
fs
sub
aad
loope
test
sbb
pop
jg
inc
sbb
imul
daa
cmc
xchg
dec
pop
orl
jl
sbb
push
push
cmp
mov
mov
mov
cmp
add
int
stos
or
stc
inc
dec
xchg
cmp
mov
daa
sub
ret
add
int
add
xor
enter
mov
int3
xor
jge
insl
movsb
nopl
fucomip
xlat
sbb
out
mov
adc
nop
xor
into
xchg
test
in
das
pop
shll
idivl
push
sbb
sahf
mov
mov
fs
jne
pusha
inc
inc
lret
add
arpl
adc
jl
xchg
lcall
dec
inc
clc
mov
in
xchg
sbb
mov
outsb
scas
push
pop
loopne,pn
xor
jp
sbb
push
mov
mov
loop
jl
sbb
jle
mov
mov
in
or
jns
mov
and
mov
fs
test
push
shl
xchg
roll
imul
lahf
sbb
dec
xchg
cmp
jne
jmp
cmp
mov
je
mov
stos
jnp
fs
adc
fs
lahf
mov
push
fcomip
sbb
pop
in
mov
aaa
ret
inc
scas
lret
lret
sbb
and
xchg
push
inc
hlt
insl
cmp
fnstenv
ja
fcomi
xchg
popa
xor
dec
xor
mov
and
es
call
bound
insl
lds
mov
sub
das
xchg
aas
jns
test
aaa
aaa
and
and
adc
mov
lds
mov
mov
fisubl
push
mov
push
lods
iret
lock
imul
mov
jmp
sub
test
push
or
movsl
mov
push
jbe
pusha
cmpb
mov
es
push
mov
jg
insl
sbb
xchg
enter
orb
lods
lds
mov
inc
inc
adc
add
and
sti
sahf
sub
sub
enter
xchg
sub
cmp
sub
aaa
sarl
pop
loopne
push
add
add
std
lock
fiadds
add
outsb
pop
mov
jle
aam
pop
mov
adc
xchg
je
pushf
push
mov
leave
sbb
pop
push
fwait
rorl
mov
clc
cmc
push
shrl
je
cmp
pop
xor
dec
stos
icebp
sbb
test
add
cmc
jae
stos
fistpll
push
jns
cmpsb
jl
iret
jmp
and
xor
std
ja
or
ret
loopne
movsl
popf
fimuls
mov
pop
and
fs
stos
push
push
out
jno
dec
into
js
mov
loop
and
test
xor
stos
or
mov
data16
mov
mov
cmpb
add
mov
pop
stc
xor
nop
jecxz
fwait
pop
inc
lcall
push
pop
loope
jne
lock
dec
dec
imul
sti
fcoml
in
mov
xchg
pop
jl
shll
xlat
pop
sti
aam
out
jns
xchg
xor
and
or
insb
popa
push
in
jle
imul
xchg
jb
bound
push
pop
cld
pop
sub
jns
lods
adcl
or
fiadds
stos
aaa
jne
or
mov
int3
xor
imulb
aaa
mov
mov
dec
int
movsl
aas
jge
leave
inc
in
popf
gs
cmp
xchg
mov
roll
mov
cmpsb
scas
adc
jp
mov
fidivrl
pushf
push
cmc
addb
mov
les
bound
xchg
int
std
fs
imul
xchg
sub
outsb
stos
mov
adc
and
mov
sub
nop
sub
or
sbb
mov
rcll
les
cmp
js
push
push
mov
inc
fsts
loope
pop
xchg
lret
inc
xchg
cmc
dec
mov
inc
shll
outsb
iret
cltd
sahf
imul
enter
dec
xchg
notl
imul
invlpg
sbb
or
pop
and
jmp
insb
mov
imul
sub
scas
sub
out
mov
cmpb
loop
jnp
mov
aas
cmc
imul
in
in
add
mov
lods
das
inc
icebp
sti
push
mov
shll
and
mov
mov
ja
mov
cmc
dec
repnz
and
inc
out
int
mov
xor
ror
cmp
outsl
test
fs
aad
fld
pop
imul
mov
js
aas
jne
aas
and
arpl
scas
pop
lods
adc
xor
and
xchg
push
nop
pop
fwait
and
cmp
xlat
sbb
das
loopne
repnz
idiv
sub
subl
lods
in
cmp
sti
and
add
mov
push
xchg
rol
and
xchg
mov
fistpl
xor
sbb
xchg
pop
inc
xor
mov
mov
inc
lret
sbb
shl
test
jge
call
cmpsl
insb
lods
data16
dec
sbb
scas
test
add
or
repz
pop
xchg
fiaddl
mov
shrb
shlb
sti
inc
aad
sbb
ss
add
aad
inc
in
mov
push
mov
cmpsb
xchg
or
add
dec
loop
cmp
inc
add
pop
out
mov
mov
push
cmp
out
sbb
fsubrs
xchg
js
pop
xor
mov
fwait
scas
mov
cmp
xchg
aas
and
stc
mov
mov
sar
sub
ficoms
and
test
adc
test
idivl
nop
add
cmpsb
fcoml
mov
aas
into
and
or
add
mov
adc
ret
bound
jp
jo
out
sub
push
adc
sub
fbstp
hlt
loop
shrb
in
sub
mull
inc
idivl
pushl
adc
andl
pop
pop
test
jo
add
sahf
or
aas
in
dec
mov
xor
mov
out
repnz
and
jmp
lds
pop
lea
adc
add
xor
add
std
mov
adc
inc
xchg
jmp
fcmovu
in
outsl
adc
pop
push
rep
push
nop
mov
and
icebp
add
sti
pop
mov
into
ret
push
sbb
mov
les
lahf
sbb
in
stos
or
dec
and
pusha
push
test
movsb
je
or
loopne
aad
xchg
jge
mov
ret
pop
iret
decl
xor
add
hlt
iret
pop
adc
and
add
inc
test
fsubp
clc
pop
jl
xchg
ja
push
adc
aaa
repz
lret
fidivrl
into
cmp
fs
jp
jno
out
outsb
mov
and
fildll
fdiv
loopne
pop
sub
fnstenv
push
cmp
adc
pop
and
pop
iret
leave
cmp
aas
sub
push
jne
jb
leave
inc
dec
or
sbb
sbb
fisubs
std
pop
rorb
mov
enter
out
or
adc
add
pop
cmp
sub
inc
repz
adcb
cmp
dec
cld
dec
mov
rolb
es
rol
dec
rorl
dec
cmpl
push
xchg
btc
jb
cmpl
mov
dec
jl
jle
sbb
mov
lahf
mov
ja
sbb
mov
fnsetpm(287
jp
shl
sar
jo
das
pop
out
lock
sbb
cmp
outsb
bound
ja
fiadds
mov
js
mov
ret
roll
cmp
and
int
movsb
pop
ret
fidivl
and
imul
and
sub
dec
dec
xor
dec
lods
jns
jno
push
sub
add
inc
xor
inc
pop
sbb
aad
adc
scas
idivl
push
mov
pop
cmp
xor
mov
cmp
movsb
cmpsl
in
push
dec
push
loopne
and
dec
fidivl
dec
les
cmp
mov
sbb
xchg
and
insb
pop
in
xor
in
in
jne
add
into
sub
and
shll
lea
test
dec
pushf
jmp
mov
fsubrs
and
repz
sub
mov
mov
pop
lds
in
push
loope
mov
jbe
test
pop
fimull
in
in
inc
call
arpl
and
sbb
xchg
sbb
push
cmpsl
push
idivb
pop
out
cld
sbb
sbbb
sbb
sti
lods
fs
xor
mov
fidivrl
push
scas
call
push
add
xchg
sbb
mov
mov
nop
sbb
std
pop
aas
cltd
cmpsb
jo
pop
arpl
xor
aas
add
mov
rcrb
sarl
sbb
pushf
imul
mull
jb
or
xlat
or
mov
inc
inc
push
decb
dec
stos
cmp
jge
sbb
push
scas
adc
sbb
dec
xchg
movsb
jns
sub
popa
lahf
jge
sahf
adc
je
xchg
icebp
shlb
fs
outsl
and
xadd
mov
mov
in
das
mov
add
sbb
lods
insb
aas
ret
mov
pop
xchg
out
mov
fwait
and
or
stos
pop
gs
call
push
mov
jle
mov
inc
subb
shlb
push
cmp
es
jns
xor
sbb
xlat
sbb
orl
jmp
pop
xchg
les
and
stc
pop
les
sub
adc
and
pop
sbb
jne
jb
pop
mov
push
adc
push
pop
in
cmp
pop
fwait
aas
add
push
out
add
mov
lahf
mov
insl
lods
or
and
inc
jle
mov
out
pop
js
addl
out
or
js
mov
shlb
push
xor
lods
iret
aam
jle
jl
dec
hlt
popf
vphaddudq
push
inc
sbb
das
fldt
push
leave
dec
ljmp
mov
mov
inc
test
or
cmc
mov
addb
pop
jmp
or
mov
mov
enter
out
cmpsl
or
mov
adc
add
and
dec
je
fwait
icebp
lods
pop
sti
fcompl
mov
rcrl
out
mov
sub
iret
out
jmp
adc
push
scas
jge
sub
mov
mov
repz
mov
iret
arpl
xchg
cwtl
jbe
inc
or
bound
ja
data16
arpl
data16
arpl
sbb
test
cmp
jne
inc
mov
inc
shrb
ss
adc
fmull
jae
iret
ljmp
inc
sub
data16
jb
pop
fsub
mov
inc
lahf
fiadds
push
jb
out
rclb
inc
cs
cmp
lods
and
xlat
jp
incb
push
dec
inc
cmpsb
sub
mov
lods
inc
cmp
dec
mov
mov
adc
popa
std
push
addr16
lock
dec
je
cmp
jp
pop
adc
mov
in
js
in
and
lods
fcoml
in
add
pushl
lcall
jno
lcall
mov
call
mov
mov
xchg
fimull
xorl
dec
aas
bound
dec
lret
xor
repnz
and
hlt
fmul
or
add
or
sub
jp
outsl
cmp
pop
dec
sub
dec
sub
outsl
mov
rorl
jbe
test
icebp
mov
clc
fiaddl
sbb
into
cmp
push
sub
outsl
mov
shlb
inc
mov
das
mov
sub
dec
shlb
sub
and
sbb
sub
fnsave
rcll
div
sahf
int3
lret
pop
dec
jge
jo
xchg
dec
fs
subl
hlt
or
push
addr16
sub
and
mov
faddl
and
and
stos
sub
push
sub
dec
dec
mov
in
xchg
sarb
imul
int
aam
std
cmp
loopne
sbb
push
or
test
fcoml
and
inc
mov
dec
stos
xchg
rolb
fwait
divb
outsl
mov
cs
dec
les
sub
outsl
into
sbb
out
push
add
cs
sub
outsl
mov
scas
hlt
cmpsb
sarb
jp
test
or
mov
les
aas
out
in
psrld
sbb
push
flds
mov
out
mov
stos
hlt
mov
out
xchg
aam
mov
das
lods
or
mov
cld
fiadds
sbb
into
cmp
push
push
sub
outsl
mov
sarb
inc
mov
mov
lods
das
mov
sub
dec
enter
out
in
paddq
sbb
or
and
outsl
sbbb
hlt
mov
scas
cmpsb
out
mov
pushf
fdivrl
mov
lods
sub
dec
shlb
das
out
in
aas
ror
jno
add
jecxz
out
xchg
out
in
rorb
int3
mov
fs
push
mov
test
movsl
jae
popw
inc
hlt
or
push
addr16
daa
aam
sbb
xchg
aad
mov
aam
je
inc
fsubl
js
xchg
mov
pushf
jle
addr16
in
jnp
adc
daa
hlt
dec
adc
dec
adc
xor
out
out
push
test
inc
das
pop
or
dec
sub
dec
jl
addb
jle
imulb
jnp
dec
leave
cmp
hlt
push
adc
push
nop
movb
bswap
and
sub
dec
sub
outsl
cmpsb
push
mov
addr16
out
lahf
aam
test
das
rorb
cmc
mov
cld
fiadds
sbb
into
and
sub
outsl
mov
shlb
inc
mov
das
test
int
fsubrl
dec
lock
cmp
cli
add
push
and
outsl
xchg
push
into
hlt
xchg
fbld
out
mov
pop
cltd
test
movsl
mov
movsb
push
orb
in
and
sub
pop
push
sub
or
shr
out
call
mov
fsubrl
pusha
or
dec
test
addr16
in
ja
adc
pop
int3
dec
adc
jbe
and
or
repnz
cmp
pop
das
push
or
dec
sub
dec
jl
addb
jbe
outsl
mulb
jg
dec
leave
cmp
clc
push
sbb
push
or
cmp
mov
push
xchg
mov
pop
cwtl
xor
int
orb
mov
test
sub
outsl
ds
es
and
aas
addr16
add
push
in
mov
addr16
xlat
aam
test
das
push
sub
dec
mov
ja
push
in
inc
rorb
cwtl
pop
divb
int
clc
dec
adc
add
int3
sub
loop
int
and
inc
cmp
dec
push
popa
sub
outsl
inc
pop
sahf
hlt
jbe
jae
sbb
inc
aam
cmc
test
fsub
das
clc
or
dec
adc
movsb
or
lret
and
das
and
inc
mov
inc
mov
scas
out
in
xchg
dec
cwtl
fwait
divb
outsl
mov
cs
dec
enter
clc
push
adc
outsl
into
push
push
xchg
lret
xor
dec
and
xchg
out
in
mov
scas
mulb
lea
mov
sub
outsl
add
pop
hlt
shrl
es
aas
aam
or
dec
or
and
or
pop
sub
dec
dec
scas
xchg
rorb
xchg
idivb
addr16
sarl
fcoml
sub
outsl
adc
imul
in
lret
sub
outsl
mov
hlt
mov
out
mov
push
addl
sub
dec
fdivrl
andb
cs
aaa
rcr
cwtl
paddw
or
test
dec
cmp
in
fcmovnbe
mov
scas
mulb
mov
mov
lods
dec
mov
push
leave
pop
outsl
sub
xor
fcmovb
aas
addr16
mov
out
out
in
sti
rclb
int3
mov
push
push
mov
mov
mov
dec
hlt
push
rcrl
out
xor
ficompl
mov
cmp
jmp
loop
sti
sub
cmp
je
xchg
sub
outsl
jp
data16
outsb
sarl
out
dec
aam
stc
test
fcoml
fcmovbe
cli
mov
xchg
out
adc
mov
inc
cs
dec
js
xchg
sub
outsl
jp
hlt
push
jae
sbb
jg
adc
test
fsub
das
clc
or
sub
add
out
aaa
or
xor
push
sub
outsl
mov
shlb
inc
mov
das
mov
sub
dec
enter
out
in
rsm
cli
cmc
cld
test
dec
and
in
cmpsl
shlb
int
pushf
dec
mov
dec
movsb
push
lds
outsl
ss
cs
roll
lret
add
dec
xor
xchg
out
in
lret
rolb
int3
cmpsl
js
popf
cmp
pushf
push
mov
ja
push
pop
inc
hlt
push
rcll
out
sub
es
sbb
out
lahf
div
sahf
int3
pop
dec
jno
dec
cs
dec
js
xchg
sub
outsl
push
jb
sbb
inc
addr16
push
aam
in
hlt
fcoml
fcmovbe
cli
enter
and
and
pop
sub
outsl
stos
push
scas
hlt
pop
roll
jp
test
or
mov
enter
out
in
or
cmp
ss
and
hlt
add
addr16
mov
pop
test
or
dec
lods
push
adcb
in
and
sub
pop
adc
xor
ljmp
out
iret
aam
js
je
xchg
das
push
sub
dec
mov
jae
sbb
inc
rolb
cwtl
pop
divb
int
cld
dec
sbb
dec
sbb
add
data16
repz
pop
test
jne
dec
or
js
xchg
dec
push
jle
imul
cwtl
jnp
adc
dec
rorb
hlt
adc
push
add
repnz
mov
fcoml
and
inc
mov
je
addb
jbe
jae
sbb
inc
rorb
cmp
hlt
push
adc
push
add
mov
sub
mov
pop
mov
stos
out
in
mov
testb
mov
cmp
fcoms
sub
outsl
ficomps
push
hlt
into
ret
sbb
jecxz
cmp
xchg
ror
xchg
mov
test
cltd
das
nop
or
dec
mov
addb
in
push
sarb
cwtl
daa
imulb
int
in
add
loope
pushf
stc
cmp
lret
inc
dec
push
push
jne
inc
push
gs
outsl
pop
pop
xor
rcll
lds
or
mov
out
cmp
and
inc
sub
outsl
stos
push
mov
pop
roll
jle
test
sarl
xorb
fsubrp
or
and
cmp
das
dec
xor
xchg
out
in
iret
rolb
int3
mov
dec
test
test
sub
outsl
push
pop
dec
hlt
add
pop
addr16
sub
and
sub
insb
mov
add
rcl
xchg
test
in
xor
mov
add
jg
data16
cmpsb
sub
push
scas
stos
call
clc
mov
in
xchg
adc
lahf
insl
push
or
lock
cmp
ja
sbb
lret
mov
mov
aam
pusha
adc
mov
insb
test
sub
rolb
cmp
push
shr
sbb
mov
sbb
sarl
add
sbb
and
fldcw
lock
insb
mov
push
fwait
mov
pop
sbb
test
mov
jecxz
ror
jno
mull
jbe
sub
rcrl
inc
repnz
cmp
jbe
imul
pop
fistps
mov
or
cld
stos
sub
in
jle
test
ss
mov
add
jl
mov
jge
iret
jmp
xor
and
lods
fcompl
mov
inc
jmp
push
sub
loope
jle
mov
lahf
jg
push
popf
dec
lea
push
movsb
addr16
movsl
movsb
push
jmp
inc
cmpsl
shlb
or
push
add
mov
popa
out
cld
mov
jp
or
xchg
add
mov
dec
popf
mov
add
imul
jno
push
sub
sbb
adc
add
xlat
clc
push
aad
dec
es
call
lahf
and
mov
xorb
movsl
inc
sub
cltd
call
pop
mov
or
sbb
scas
ljmp
mov
outsb
stos
rclb
pop
hlt
ds
jg
jg
or
outsl
aas
jp
mov
imul
jae
and
mov
cmp
jbe
mov
mov
fwait
jl
jmp
mov
add
adc
inc
inc
shl
int3
call
shrb
faddl
jno
cltd
in
cmp
out
pop
mov
cmp
jmp
and
sbb
in
out
adc
ljmp
adc
jo
or
jns
jl
lret
lea
lahf
shlb
inc
mov
cmp
mov
and
cmp
negl
and
add
mov
mov
cltd
arpl
mov
mov
pop
dec
shlb
push
cmp
xor
mov
dec
mov
int3
or
sbb
mov
in
xlat
dec
fistpll
addr16
pop
pop
sub
in
inc
rcrb
ja
stos
movsl
shl
outsl
call
shrl
push
cli
mov
insb
lds
inc
int3
popf
and
and
xchg
ja
sub
sti
cmp
shll
out
data16
cmp
fs
loopne
xor
rcr
mov
sub
test
add
sbb
push
or
jno
sub
addr16
sbb
add
xchg
pop
xchg
or
lcall
cmpsl
mov
leave
pop
push
imul
jg
lock
and
inc
or
push
push
lret
push
xor
mov
rcrl
fs
mov
js
data16
adc
cmp
fcmovu
popf
adc
sub
pop
scas
dec
int
cltd
and
push
cmpsb
bound
adc
mov
ja
lret
test
pushf
ljmp
and
lret
xor
mov
push
or
test
mov
add
mov
ds
pop
mov
loop
loopne
mov
leave
loop
and
into
jle
inc
ljmp
arpl
pop
gs
call
faddl
cltd
in
adc
out
call
shrb
in
mov
cmpsb
ret
repz
push
cmp
push
add
xlat
movsl
push
lea
sbb
popa
mov
fwait
dec
sti
das
clc
imul
rclb
loop
pop
jae
insb
loope
fisubl
sub
pop
aas
in
cwtl
sbb
pop
cmpb
lret
lcall
push
and
out
mov
adc
popf
in
dec
shll
data16
jle
inc
fnsave
rorl
in
rcrb
adc
mov
adc
xor
loope
es
or
pop
sbb
xor
test
fsubrs
inc
call
rolb
sbb
subl
add
push
test
js
cmpsb
pop
push
cs
insl
shlb
fsubrs
outsl
jg
std
add
dec
xchg
iret
call
out
mov
in
dec
cs
cwtl
lahf
jbe
ja
fildl
mov
arpl
lret
mov
and
addl
jge
mov
pop
jp
mov
jns
rolb
lods
sbb
aam
les
xor
push
or
fstp
lret
cmpb
cmp
adc
dec
call
mov
add
fcmovb
arpl
int
sahf
aaa
fnstsw
std
test
leave
div
in
lods
mov
movsl
pop
adc
or
enter
lds
arpl
lahf
pop
addb
xchg
cld
cmp
lret
daa
fidivrs
adc
sbb
add
or
dec
out
xor
mov
xlat
inc
test
call
pop
es
sahf
arpl
lret
mov
dec
cs
push
fcoms
movsl
cld
out
cmp
inc
dec
or
sub
push
mov
lahf
call
imul
ja
add
outsb
mov
cmp
xor
add
mov
leave
sarl
xchg
mov
cmp
mov
sub
and
andl
scas
loop
ds
mov
call
adc
mov
ja
adc
lods
aas
les
loope
mov
sbb
mov
jg
or
subb
cltd
and
jmp
adc
arpl
addr16
imul
xchg
in
push
lret
push
jmp
sahf
icebp
lea
mov
adc
cmp
sbb
pop
mov
lret
xchg
ss
mov
lahf
fsubs
shr
das
data16
push
dec
mov
mov
lods
call
outsl
sub
jge
jg
mov
adc
jnp
fstpt
mov
cmp
lds
aaa
loopne
repz
sbb
mov
pop
mov
sbb
mov
icebp
hlt
cmp
out
add
add
pop
push
and
add
xchg
outsb
jne
sub
or
xor
dec
cmp
cmp
xchg
push
fcoml
insb
pop
lods
aas
rcr
rol
push
mov
xor
idivl
mov
lods
mov
ret
mov
fs
add
xor
popf
mov
and
or
out
rorb
adcl
rol
jno
popf
lock
sub
cmp
outsl
adc
fdiv
das
outsl
in
out
out
mov
popa
jge
fidivl
push
push
movsb
jnp
mov
fucompp
psllw
inc
call
cmc
ret
std
sub
xchg
aad
test
in
mov
jge
js
pop
nop
pop
shrl
outsb
adc
mov
push
ss
xor
push
and
fidivrl
jns
andl
mov
adc
cmp
ljmp
jmp
mov
lods
mov
lods
out
mov
lahf
test
insl
sahf
dec
ja
sbb
popl
iret
outsl
and
fwait
js
pusha
mov
enter
ficompl
in
mov
mov
pop
pusha
shlb
mov
nop
imul
jg
popf
add
mov
pop
inc
sbb
mov
adc
fmul
sti
pusha
push
das
add
adc
cmp
sub
sub
mov
mov
sbb
xchg
arpl
icebp
or
in
mov
or
sub
jg
es
outsl
lods
sub
cmp
and
cmp
ror
jmp
cmp
pop
mov
inc
or
stc
pop
scas
jne
push
xor
pop
mov
inc
adc
out
inc
push
aaa
test
cmp
arpl
aaa
xorb
fcmovu
mov
push
or
shr
test
fidivrs
sbb
add
cmpsl
ja
loopne
sub
ret
mov
imul
rorb
or
lahf
fldl
inc
test
inc
mov
add
cmpsb
pop
mov
fcoml
test
fcompl
addr16
jle
mov
divb
cs
dec
das
enter
sub
outsl
icebp
aad
aad
mov
mov
in
scas
mov
jmp
out
pop
mov
or
fstl
xor
fldt
jg
mov
inc
enter
xchg
sarb
inc
mov
stos
fdivp
mov
rcr
adc
out
in
add
cmp
mov
mov
pop
loop
js
adc
std
sarb
imul
push
ds
cmp
imul
add
sarb
cs
add
lahf
flds
xor
stos
add
mov
insl
fwait
pop
cmp
inc
lods
pop
xor
lahf
fistl
daa
popf
add
xor
or
xchg
or
mov
xor
xchg
in
enter
mov
sti
shrb
xchg
adc
sarb
sub
cmp
jge
sub
jno
mov
clc
call
data16
sbb
jle
fsubrl
insl
jge
aam
stos
push
dec
inc
popl
js
xchg
xchg
dec
sbb
mov
mov
sahf
enter
jae
stos
or
jbe
dec
mov
into
cld
in
push
adc
push
push
inc
loopne
cmp
inc
call
shll
es
inc
lods
in
sub
pop
mov
into
mov
fs
push
lods
out
or
sub
popa
inc
insb
rcrl
movsb
mov
xlat
pop
push
rclb
pushf
cld
inc
ss
in
in
mov
xlat
orl
push
imul
cmp
adc
mov
js
mov
hlt
bound
cmp
loop
mov
movsl
add
cmp
cmpsl
aaa
cmp
movsb
cmp
cmp
add
xchg
pop
bound
dec
in
cmp
js
mov
add
lods
out
rep
adc
cmp
in
in
xor
aaa
jno
sarb
lahf
insb
mov
pushf
xchg
into
push
mov
mov
inc
and
mov
sub
cmp
or
sar
movsl
jle
dec
pop
das
scas
popaw
out
xor
jmp
or
and
es
stc
fs
xchg
sbb
stos
fisubl
sahf
pop
out
cmp
daa
arpl
test
pop
out
cmp
movsb
push
call
mov
aas
insb
jno
mov
sbbb
and
rorb
xor
sbb
out
call
scas
cld
pop
mov
sub
outsb
sbb
sbb
outsb
and
jno
shll
cmpsb
flds
enter
sbb
xor
mov
roll
es
xchg
cmp
jecxz
andb
and
outsl
cmp
or
sar
lcall
fidivrs
or
leave
mov
lock
xchg
sub
loop
cmp
mov
mov
cmp
lods
xchg
xchg
or
push
ret
sarl
and
adc
push
fcomps
bound
pop
mov
add
mov
loopne
decb
lret
jne
push
imul
lmsw
std
inc
mov
dec
lahf
cmp
inc
lret
fimull
mov
js
pop
xchg
jne
mov
mov
xchg
pop
repz
rorb
addr16
jae
movsl
repnz
sarl
adc
stos
cld
icebp
jmp
mov
inc
in
jl
mov
hlt
xchg
mov
dec
mov
inc
out
fscale
decl
adc
inc
outsb
mov
cli
loope
inc
ficomps
arpl
jbe
fimuls
sbb
or
icebp
call
rcrb
in
shl
lea
popa
sbb
add
and
test
std
sub
mov
jl
cmp
je
fwait
ss
notl
in
mov
adc
repz
sbb
test
movsb
rcrb
mov
imul
shrb
aam
std
add
outsl
pop
arpl
rcr
mov
xor
jl
push
adc
cmpsl
pop
mov
je
add
push
inc
loope
daa
cmp
jnp
mov
lret
outsb
shlb
pop
adc
lds
popf
or
fiadds
mov
add
push
fiadds
xor
adc
sub
pop
sbb
xor
sub
mov
jge
fwait
imul
cmp
xor
mov
aas
or
push
jle
out
stos
jmp
daa
cmp
sbb
out
lret
testb
xchg
test
dec
add
jno
fistpll
or
test
adcb
mov
xchg
std
mov
stos
or
dec
pop
mov
jno
mov
mov
dec
bound
out
add
mov
adc
lea
arpl
addr16
jge
bound
stos
push
notl
lret
rcl
test
test
mov
lcall
jle
or
imul
xchg
inc
shr
jno
xor
mov
inc
mov
mov
sub
ja
mov
jmp
js
xchg
call
stos
cmp
outsb
jle
pop
and
jnp
outsb
mov
fs
jns
pop
cmpsb
in
cmp
xchg
sahf
jae
add
ret
rolb
lahf
iret
adc
or
hlt
xchg
inc
rolb
outsb
mov
enter
add
scas
mov
stos
pop
iret
ficoms
jae
rcrb
aam
dec
sahf
rcl
mov
or
aaa
jnp
pop
add
rcrl
xchg
idivb
insl
lret
dec
shlb
out
add
insl
es
stos
dec
adc
mov
or
dec
in
fs
call
mov
repz
dec
loope
mov
sbb
out
push
cli
jge
jle
ss
dec
into
popa
in
inc
imul
les
mov
cmpsl
xchg
mov
adc
mov
ret
aam
loop
scas
lret
adc
sub
ret
imul
lods
adc
ret
lret
mov
inc
sub
adc
xor
adc
add
ficomps
push
jge
jge
cli
pop
mov
iret
or
outsb
mov
inc
call
mov
add
xchg
cld
mov
pop
call
mov
push
mov
sbb
ja
mov
mov
imul
xchg
xchg
push
push
ret
lret
xchg
lds
push
mov
jmp
sbb
loopne
inc
add
jno
std
adcl
ja
rep
sub
adc
lahf
push
out
sahf
xor
lods
in
push
scas
mov
stc
out
mov
imul
and
mov
dec
jle
test
jbe
pop
inc
mov
push
xchg
inc
sbb
stos
loopne
gs
inc
adc
lods
sbb
lahf
dec
repnz
or
mov
shrb
inc
rclb
sahf
push
jecxz
mov
fnstsw
sub
subl
pop
insb
push
in
inc
and
test
test
pop
scas
push
mov
adc
push
ficomps
ret
jb
in
mov
lods
arpl
sti
test
cmp
shl
adc
orl
cli
call
jg
imul
push
outsb
sub
jb
sub
rcl
sahf
das
or
and
test
in
pop
icebp
jp
pop
lds
and
cmp
imul
int
xor
fwait
push
dec
into
sbbb
hlt
outsl
push
jb
push
mov
add
aam
pop
add
in
inc
cmp
xchg
lock
scas
sub
inc
add
fldl
xchg
mov
test
shrl
add
outsb
add
lret
and
fsubrp
outsb
inc
sbb
sub
movsl
jae
rcrb
js
lahf
adc
lret
stos
shll
adc
in
fistpl
jmp
frstor
jecxz
rolb
push
fdivrs
pop
mov
hlt
xor
or
cmp
jb
lods
cmp
arpl
fsubs
enter
or
sub
loop
adc
out
fs
int
add
jae
dec
pop
in
lcall
mov
pop
cmp
sbb
dec
adc
imul
xchg
mov
out
mov
and
push
das
adc
pop
dec
orl
lret
jns
iret
or
insl
xor
test
push
clc
mov
push
fldcw
in
xchg
sahf
dec
adc
add
push
sahf
ficoms
js
subl
mov
enter
mov
mov
add
lahf
out
es
pushf
ljmp
dec
push
adc
sahf
sub
pop
insl
mov
add
mov
adc
lret
call
or
sub
imul
idiv
mov
dec
cltd
sub
cmpsb
mov
sub
jnp
shr
shrb
lods
shrb
cmp
cld
sbb
call
cmc
es
sahf
jnp
push
test
mov
in
pushf
sbb
sarl
arpl
movsl
data16
shll
sub
out
into
outsb
lret
xchg
lret
push
adc
sahf
adc
aam
fiaddl
scas
lret
pop
lahf
add
movsb
jno
out
clc
pop
push
out
ja
add
shrl
cmp
cmpsb
mov
cmp
out
push
jae
movsl
pop
and
lret
mov
outsb
imul
add
cmpsb
test
jl
jp
imul
aam
ss
andl
mov
jae
push
daa
push
in
arpl
in
inc
popa
push
mov
pop
lea
or
insb
and
or
add
adc
pop
in
jecxz
sub
int3
pop
call
shll
xor
ds
mov
inc
lock
mov
xchg
test
outsb
sbb
fwait
mov
dec
mov
js
lods
or
push
rorb
lret
out
iret
inc
bound
rolb
inc
dec
sub
push
cmpb
loope
cmp
mov
pop
loope
in
mov
aad
add
call
aaa
sti
lahf
mov
sbb
sbb
insl
test
int
pushf
ja
xchg
and
in
or
das
sub
cld
insb
push
push
mov
add
fidivl
test
scas
adc
adc
add
je
pushf
loope
xchg
adc
cld
add
cmp
push
dec
push
jae
sbb
push
adc
call
sarb
xchg
lret
dec
nopl
jb
out
push
jp
mov
insl
inc
sub
ret
sub
xor
add
or
xchg
xchg
stos
movsl
or
insb
push
xlat
jbe
pop
ja
add
push
sbb
mov
es
mov
cmp
push
xchg
xchg
mov
fs
mov
in
cmpsl
movsb
lods
jne
jnp
dec
pushf
or
push
sub
popa
insl
adc
out
mov
mov
lret
fsub
clc
add
inc
mov
xchg
add
mov
xor
mov
cwtl
push
fcmovbe
xlat
and
sub
ljmp
cmp
mov
cmc
js
fiadds
scas
sub
sub
push
jns
jmp
je
insb
sub
adc
int
pop
add
jle
mov
jmp
rcl
lret
xorb
jb
pop
sub
fs
ja
jmp
sub
sbb
in
jl
push
pop
mov
adc
cltd
push
inc
je
adc
sub
push
cmp
aas
adcb
xchg
push
fcmovb
pop
and
jl
stc
add
jl
mov
imul
pop
cmp
ja
jmp
dec
movsb
js
fstl
insb
mov
push
sbb
and
inc
aad
in
sahf
mov
mov
adc
jp
and
int3
add
cmp
inc
movsb
sar
or
lods
sbb
shl
in
leave
push
adc
lret
cmpsl
push
loop
and
inc
push
movsb
fldl
dec
in
inc
rorb
adc
add
xor
in
cmp
and
inc
pcmpeqw
mov
sahf
ljmp
pop
inc
aaa
add
shll
test
xchg
enter
rclb
or
shlb
aad
mov
xlat
and
xchg
push
xchg
lret
add
lcall
cmp
fdecstp
fcomps
ficoms
lahf
cmp
int
out
push
and
and
pusha
sub
lret
imul
jp
gs
inc
jo
jmp
cli
mov
xor
dec
and
jb
shlb
or
fdiv
push
adc
sbb
jl
je
sub
rcll
mov
mov
fldcw
dec
sub
xlat
test
add
jno
cld
stos
jmp
mov
int
mov
out
ret
stos
and
add
push
add
das
outsb
mov
push
jne
ret
adc
xchg
push
jge
pop
lock
cmpsb
out
cli
or
int
stc
testb
jg
dec
movsl
adc
lcall
and
mov
xchg
clc
fadds
filds
leave
xor
push
mov
insl
lret
inc
jge
pusha
add
in
sub
jb
mov
aam
jb
mov
out
and
jl
add
or
test
jl
inc
adc
sbb
xchg
imul
fcoms
in
popf
jb
mov
arpl
jmp
xchg
ds
hlt
addr16
iret
sbb
push
cmp
in
jmp
or
imul
cwtl
push
fdivp
lahf
xchg
push
and
mov
inc
mov
jle
loope
mov
fs
jmp
in
push
xchg
inc
adc
stos
lcall
jno
imul
call
fs
pop
imul
std
imul
repnz
les
xor
fs
pusha
imul
xchg
in
movsl
sbb
sbb
jnp
xchg
cs
loopne
ret
jae
ret
jg
cmp
les
mov
jg
outsl
or
push
jno
mov
sub
outsl
mov
push
test
adc
add
sbbl
jge
ds
inc
mov
cmp
xchg
adc
dec
xchg
cmp
cmp
or
mov
xchg
pushl
push
pop
aaa
and
push
push
aaa
repnz
pushf
jns
push
add
mov
xchg
cmp
in
mov
pop
and
mov
aas
mov
ss
add
sbb
mov
xchg
cli
outsl
lahf
jmp
sub
dec
cld
adc
mov
movsb
nop
ror
cmp
or
inc
insl
out
int3
xchg
xor
cmp
jp
divl
das
push
push
push
dec
fsubr
sbb
add
inc
ja
push
dec
andl
sub
mov
jecxz
scas
shrb
fstl
and
mov
jmp
push
cltd
arpl
jecxz
ficompl
subl
in
xchg
test
inc
shlb
pop
jbe
aad
mov
test
hlt
bound
xor
lods
and
mov
or
mov
adcb
inc
or
inc
hlt
stos
enter
add
add
xchg
and
sub
xor
fcomps
roll
ss
mov
test
rcll
insb
push
pop
jge
insb
in
cmpsb
adc
shrb
cld
adc
mov
push
xor
jno
push
ss
mov
aam
mov
mov
gs
sub
inc
iret
sbb
data16
cmp
sbb
insl
daa
sahf
fstpt
ds
ret
scas
ss
xchg
rcr
push
push
sbb
call
and
adc
outsl
dec
push
inc
je
pop
in
add
adc
dec
movsb
sbb
jge
jle
out
lock
fwait
stos
and
xor
call
in
xor
test
mov
mov
pop
mov
les
sarb
and
xor
adc
movsb
and
cmp
dec
mov
pop
sbb
push
out
icebp
xor
adc
mov
aam
sbb
mov
stos
sbb
or
nop
cmpsb
add
addb
adc
add
mov
roll
mov
adc
inc
cmpsl
sbb
jg
ret
mov
insl
or
push
cmpsb
sub
or
js
fwait
lahf
das
mov
fwait
cmp
mov
movsl
push
mov
ljmp
out
push
outsb
enter
ror
cmp
adc
ret
int
push
in
test
in
ss
stc
and
cmp
sbb
aam
ret
mov
int3
fimuls
sbb
call
pop
adc
adc
loop
jp
jnp
leave
mov
iret
mov
into
sbb
or
sbb
dec
dec
aas
mov
mov
lds
sub
std
mov
or
dec
pusha
inc
xor
outsb
lcall
sub
push
outsl
leave
xor
add
fwait
pop
add
mov
out
pop
aaa
push
mov
sbb
sbb
shll
dec
sbb
mov
push
cld
call
adc
dec
adc
aas
addr16
sub
dec
fadd
fsubrl
push
daa
scas
fisubrl
jne
loop
out
fstpt
rcl
cli
sbb
mov
enter
dec
ret
inc
or
fnstsw
and
lret
out
jmp
test
out
insb
push
lret
sbb
xor
movsb
adc
sti
sbb
and
call
jnp
push
test
leave
dec
mov
dec
inc
dec
add
int3
push
pop
fildl
loopne
mov
cmc
and
cmpsb
mov
jno
fdivrp
or
clc
sbb
pop
cmp
stc
jl
mov
sbb
and
or
add
or
int3
mov
dec
ja
orb
int
test
shll
add
push
js
aam
xor
pushf
icebp
sti
or
xor
ss
std
pop
adc
mov
je
jne
inc
adc
cmp
call
aaa
fwait
lcall
mov
add
or
cmp
jo
adc
jb
push
subb
nop
push
pmulhw
mov
mov
add
jae
jl
or
push
xchg
jmp
or
xchg
ja
or
stos
sbb
outsl
sbb
jns
cmp
pop
jae
xlat
adc
inc
pushf
lods
sbb
cwtl
push
mov
stos
nop
pop
test
subb
and
pop
jmp
dec
sub
out
xlat
cmp
add
xorb
or
jp
sub
pop
fdivp
push
sub
clc
vcvtsi2sdl
insb
pop
rolb
lret
je
mov
and
mov
mov
imul
and
push
jmp
cmpsb
dec
rcrb
dec
je
jnp
dec
and
lahf
negb
jnp
push
in
push
shlb
sahf
fwait
xchg
mov
push
flds
mov
or
xor
adc
push
or
add
jbe
add
call
push
les
push
mov
out
add
pop
sbb
mov
mov
add
or
rorb
stos
add
dec
xchg
fisttpll
pop
cmp
or
int
add
adc
iret
pop
push
or
mov
mov
int
das
xor
jb
adc
cli
xlat
jnp
pusha
mov
pop
in
sub
or
cmp
dec
addr16
add
scas
mov
insl
aad
or
mov
pop
cmp
das
xlat
clc
das
ret
mov
loopne
punpckhwd
outsb
add
insl
movsl
fwait
clc
test
dec
lret
fiadds
sbb
test
ss
or
lret
addr16
lahf
xor
inc
add
lods
sbb
push
enter
mov
lret
rorb
inc
mov
push
in
mov
out
sub
and
or
jns
mov
jbe
cs
es
jb
es
jge
je
mov
aad
insl
xor
inc
adc
stos
mov
out
xchg
fistpl
cmp
nop
inc
test
xchg
cs
insl
shlb
into
ss
fidivrl
pop
jecxz
push
cltd
fwait
add
pop
call
xchg
inc
jnp
mov
dec
inc
lds
xor
arpl
das
pop
sbb
adc
push
lahf
sub
insb
rolb
outsb
stos
lock
dec
and
aam
add
pop
sub
in
inc
ficoms
nopl
mov
bound
stos
ret
jo
cwtl
mov
and
mov
jae
inc
fdivl
movsb
lret
inc
sub
jbe
inc
sub
into
adc
subb
sbb
adc
fwait
mov
aaa
lcall
adc
pop
cmp
jl
dec
pop
fcomps
pop
mov
add
xchg
jp
mov
push
jbe
cwtl
addr16
jg
pop
push
inc
sub
pusha
xor
mov
sbb
lahf
loopne
std
or
adc
push
cwtl
decl
mov
sbb
cmpsl
xor
test
push
rclb
aas
shrl
or
xor
lret
rcrl
popf
cmp
stos
inc
fwait
or
aam
sarl
or
push
cltd
inc
xor
insb
and
cmc
rorb
or
dec
insb
xor
scas
lods
scas
hlt
xor
fsubs
xchg
mov
jmp
loop
iret
jne
addl
out
jno
dec
mov
inc
push
aam
sbb
repz
aaa
cld
xchg
inc
mov
and
hlt
xchg
push
rcr
jns
push
mov
ret
or
or
dec
xchg
or
or
call
arpl
jb
push
aam
or
mov
scas
es
dec
xor
lahf
call
not
scas
cmp
mov
repnz
xor
test
shl
or
jno
fwait
repz
test
push
cmp
movups
or
add
sub
jns
repz
stos
int
or
in
add
roll
cmp
loop
add
jl
sbb
dec
int3
imul
jno
push
jle
test
imul
mov
jae
mov
mov
les
cmpsl
sub
cmp
mov
ret
dec
inc
aas
xor
je
xchg
aad
sbb
je
js
mov
in
out
add
or
add
fmuls
fstps
jb
adc
andb
mov
in
data16
sbb
add
shlb
sub
sbb
int3
add
cs
pop
stos
adc
out
mov
jge
ljmp
das
cli
sub
jmp
add
xchg
or
mov
or
jmp
and
push
popa
inc
cltd
or
mov
pusha
sub
in
push
dec
and
inc
jnp
icebp
sahf
xorb
dec
out
adc
push
lea
rep
and
pop
pop
pushf
hlt
cmp
jne
and
mov
inc
xchg
pop
push
pop
aas
or
push
xlat
adc
sbb
aad
mov
loope
add
sbbl
dec
mov
fdivs
pushf
jle
pop
es
mov
fs
mov
jne
push
sarl
imul
mov
adc
sub
inc
rcr
xor
int3
sarb
lcall
aas
add
loop
das
repnz
xor
jbe
arpl
js
arpl
adc
sub
jns
ret
or
sbb
call
sbb
orl
inc
or
aad
cmpsl
rclb
outsl
push
lea
adc
jae
iret
or
and
pusha
call
es
or
das
add
mov
cltd
dec
mov
sbb
cmp
inc
es
mov
or
xor
mov
dec
dec
ljmp
and
xchg
jnp
add
lods
jo
std
pop
cmp
sbb
std
pop
mov
rcr
mov
out
jecxz
clc
xchg
adc
movsl
movb
sbb
in
ljmp
in
dec
pop
pop
add
or
cli
gs
repnz
sarb
push
jl
dec
mov
out
jmp
add
adc
adc
fidivrl
jmp
ret
int3
sahf
xchg
jmp
ljmp
or
sub
mov
cmp
loopne
jo
fistpll
jecxz
or
jl
mov
add
out
xor
adc
or
js
adc
adc
push
inc
adc
cli
sarb
fsubrp
xor
adc
or
shll
scas
xor
imul
push
add
jg
sbb
adc
xor
lret
adc
out
push
push
sbb
in
orb
nop
dec
jle
lock
inc
push
mov
add
mov
cmp
push
std
cmpsl
subb
jbe
lods
xor
xchg
je
push
insb
lahf
loopne
add
iret
cmp
dec
sub
lods
insb
inc
pop
push
sti
stos
fnsetpm(287
testb
aaa
popf
jbe
loop
dec
scas
jnp
add
cmpsb
or
dec
adc
pop
call
ds
mov
add
push
mov
mov
stos
in
xor
or
cmp
andl
mov
pop
dec
cmp
pop
ret
int
mov
mov
push
dec
lea
pop
int
and
cmp
dec
adc
dec
lods
cmp
pop
fstl
add
pop
jnp
ss
ss
pop
pop
xor
popa
fnstcw
mov
sahf
cmp
jg
sbb
aas
mov
adc
aaa
rolb
fbstp
in
fwait
push
mov
fisttps
ffree
adc
fstp
loopne
nop
jnp
cld
in
outsl
mov
jae
sub
daa
into
sbb
jbe
ss
enter
lods
rorb
mov
mov
clc
sbb
and
outsl
stos
dec
add
mov
enter
ficomps
lods
mov
shlb
addr16
add
rolb
clc
sub
lds
mov
outsl
or
xor
adc
dec
cmp
lods
hlt
aam
inc
and
pop
faddp
outsl
xchg
jo
xchg
shl
rorl
cmp
pop
data16
cmp
mov
movl
cld
pushf
xor
push
push
dec
mov
inc
divb
int3
sbb
jae
clc
mov
jp
cmpsl
fildll
shll
mov
lea
popa
mov
or
jmp
cwtl
cmp
cs
sbb
test
call
mov
icebp
jne
adc
mov
mov
outsb
out
in
test
cmp
shll
push
enter
add
jmp
repz
rolb
mov
repnz
inc
data16
xor
sub
or
fistpll
movsb
pop
mov
aam
dec
inc
int
dec
stos
push
out
xchg
xor
in
mov
pushf
stc
int
push
jmp
insl
out
sbb
pushf
jb
pop
jnp
and
fmull
cmp
jge
rol
push
pop
cmp
push
inc
push
test
jb
jg
mov
xor
xchg
mov
sar
inc
mov
mov
enter
mov
dec
mov
in
data16
pop
out
fwait
scas
jbe
mov
imul
xchg
inc
pop
dec
orl
fidivrl
inc
and
inc
ret
xchg
pop
lret
aas
and
adc
jle
add
push
idivb
shll
xor
mov
xchg
sub
lods
sysret
out
adc
je
stos
or
push
pop
dec
lods
xor
loop
sbb
popf
add
mov
in
jnp
loopne
pop
cmp
add
movsb
lds
rcrl
nop
pop
push
sub
std
inc
lahf
dec
fmul
push
das
and
mov
cmp
dec
fildll
orl
ds
decb
loopne
sub
psubq
mov
jecxz
mov
mulb
add
cmp
jns
aaa
push
out
faddl
pop
sti
aaa
cmp
add
and
loop
mov
ds
rorl
pop
pusha
sbb
mov
jle
enter
and
fidivs
enter
or
mov
pushf
sub
adc
mov
add
fs
add
xchg
jno
adc
sbb
sub
lock
sub
scas
pop
in
int3
leave
sarb
psubsw
mov
fildll
cmpsb
mov
push
insb
sbb
push
mov
sub
sub
in
je
ss
xor
lods
enter
sbb
orl
nop
push
pop
sbb
addb
movsb
push
add
mov
or
push
cld
mov
and
xchg
mov
ss
pop
cmp
jmp
movsb
ljmp
mov
mov
xor
fwait
in
jg
add
mov
xor
std
leave
std
pop
shlb
loop
leave
jne
pop
lret
daa
mov
jae
andl
sbb
loop
scas
inc
enter
xlat
and
mov
das
sarb
imul
cmp
adc
jbe
addb
das
in
pushf
testb
int
sbb
jno
sub
mov
cltd
push
hlt
insl
push
scas
aam
fbld
mov
mov
inc
ljmp
mov
pop
mov
ljmp
and
out
clc
mov
out
repnz
jp
lods
ret
xchg
stos
mov
pop
js
adc
scas
addl
cs
movsl
adc
or
mov
decl
mov
int
or
arpl
mov
pop
push
and
aad
call
aam
insb
xchg
pop
jo
repnz
shrb
in
orb
mov
pop
es
test
ljmp
mov
lock
rclb
mov
stos
dec
push
and
push
sub
shll
jl
ror
lahf
sbb
filds
repz
cwtl
and
mov
pop
imul
mov
jge
sbb
pop
scas
mov
adc
lcall
sbb
and
inc
jnp
loopne
popa
or
cwtl
pop
repz
lahf
sub
adc
cmc
scas
imul
mulb
sub
push
inc
mov
cli
clc
mov
or
cltd
ret
test
ret
or
or
mov
cwtl
incl
ja
loope
icebp
xor
dec
ret
pop
ljmp
cwtl
sbb
gs
mov
sub
inc
cmp
aam
pusha
lahf
cltd
or
dec
jmp
mov
jbe
push
push
jl
push
jle
adc
mov
scas
movsl
pop
dec
mov
add
jl
jl
inc
es
popf
inc
js
lahf
sub
fadds
xchg
ret
movl
xchg
clc
mov
clc
shlb
insb
xchg
or
test
adc
mov
pop
leave
loopne
fildll
xor
lods
hlt
fcmovnu
mov
out
mov
subl
sarb
repnz
jmp
dec
pop
aad
loope
jbe
adc
mov
xor
daa
and
fcmovnb
jo
bound
out
mov
aas
pop
mov
outsl
fs
xlat
js
mov
mulb
pop
xor
jge
std
in
and
add
not
ret
push
push
gs
jle
addr16
lock
mov
jge
pop
packsswb
leave
pushf
or
es
nop
or
or
add
ret
pushf
add
ret
or
mov
fidivrl
pop
or
mov
jmp
and
adc
lcall
setnp
leave
popf
or
fmull
xchg
in
addr16
jmp
sub
cmove
jg
outsb
cmp
pusha
call
cmp
dec
push
les
or
mov
repz
pop
stos
into
xchg
push
mov
fwait
or
inc
adc
or
int
int
xor
int
jl,pn
call
jb
outsl
jbe
fldt
and
mov
leave
push
or
in
sbb
fs
add
jl
out
xchg
scas
and
cmp
push
jle
repnz
adc
shlb
pop
pop
mov
inc
lret
mov
inc
fs
mov
inc
pop
adcb
repz
push
sub
insb
adc
ret
mov
jg,pn
add
aad
or
movsl
pop
lods
in
mov
lods
mov
cs
mov
dec
out
sbb
push
addr16
decl
push
push
outsl
ret
mov
lods
ret
movb
lds
sub
cmp
fst
sbb
in
sub
imul
jp
push
push
dec
xchg
insl
movl
jl
add
je
out
aas
stos
das
mov
inc
fs
movsb
push
je
or
out
ss
push
mov
or
sub
push
dec
dec
leave
mov
push
push
jbe
inc
dec
push
out
dec
movsb
inc
mov
or
inc
stos
xchg
add
push
and
xchg
leave
std
mov
sub
daa
push
adc
jge
rolb
mov
loop
lds
leave
les
jns
adc
pop
push
fwait
sub
jmp
mov
adc
int3
cmpsl
ror
rorb
lret
mov
cmpsb
push
loope
xchg
sbb
addb
adc
orl
into
pop
scas
cmpsb
or
dec
test
shlb
pusha
in
fnstcw
mov
ret
pop
fdiv
adc
jnp
jmp
xchg
mov
lods
pusha
sub
mov
jne
je
bound
jl
cmp
or
call
outsb
cld
icebp
push
xor
cmp
jbe
adc
rorl
cmpsl
aaa
or
jecxz
jo
jne
lea
jbe
das
inc
data16
es
cmp
cmp
fisubl
in
stos
hlt
add
fistl
in
lahf
out
push
es
pop
gs
lret
mov
sahf
in
xorl
xor
push
int3
ficoml
jmp
cs
sub
push
stos
pop
icebp
dec
sub
adc
roll
lcall
push
sbb
sub
add
xchg
pop
and
lret
lret
push
xchg
push
inc
ret
loopne
out
mov
lret
sti
jecxz
push
pusha
mov
cld
out
push
out
stc
push
mull
push
jmp
sub
jae
push
mov
testl
lahf
jbe
jmp
push
out
in
push
imull
xor
mov
xchg
aad
aas
and
push
out
enter
fldenv
hlt
adc
roll
lcall
xor
xlat
imul
pop
push
jns
loopne
in
adc
roll
cmp
adc
bound
push
in
cli
fwait
stc
shr
pop
repz
sub
add
jno
xchg
out
in
push
imull
cmp
aad
int
mov
pop
mov
cmc
faddp
or
cmpsl
pop
cmp
adc
cmpsb
scas
es
jle
adc
rolb
inc
les
test
test
mov
push
sub
mov
roll
push
movsl
xor
and
push
adc
sub
ja
mov
inc
push
sbb
stos
or
ficompl
adc
dec
push
adc
pop
add
jb
dec
test
add
aad
sub
sbb
push
es
inc
mov
rcrb
xor
nop
jne
cmp
push
jae
pop
pop
mov
test
fnstcw
cwtl
scas
jns
mov
nop
int
jae
or
scas
push
lret
pop
pop
lds
insb
lret
stc
or
or
jbe
and
leave
dec
and
in
mov
and
fmul
bound
inc
stos
jmp
add
dec
pushf
or
aas
sub
lea
testl
or
jle
imul
add
sbb
std
xor
shlb
js
js
xor
sarb
sbb
gs
sub
rol
sub
cmc
aad
pop
aad
iret
loopne
icebp
add
icebp
jmp
scas
icebp
popf
ret
push
ds
divb
or
ret
xor
ljmp
mov
out
adc
jmp
inc
clc
xor
pop
lods
nop
ret
aam
sbb
rcrl
mov
push
sub
xchg
inc
mov
push
lods
fidivrl
fwait
mov
shlb
scas
dec
xlat
xor
sub
adc
hlt
in
mov
mov
sub
stc
fdivp
in
mov
into
dec
push
leave
mov
ss
sub
dec
fs
dec
int3
pop
into
rclb
push
adc
xor
lock
test
xor
sub
inc
push
dec
lods
in
cli
pop
jp
dec
sub
jmp
out
sbb
andl
jo
push
xor
fstps
test
mov
sahf
daa
sbb
jge
mov
jb
push
mov
sub
out
pop
lods
inc
dec
xlat
int
sub
outsb
sub
jb
sub
xor
cmp
imul
int
js
push
fsts
push
packssdw
pop
sbb
fnsave
sbb
ret
loop
ret
in
fldt
jbe
and
mov
sbb
lods
mov
sbb
push
ljmp
or
je
mov
mov
jnp
xor
les
xchg
leave
sahf
mulb
pop
aad
testl
fwait
rcrb
mov
cltd
mov
stos
sti
outsl
or
dec
push
shll
xlat
clc
aam
xor
aad
lret
mov
mov
fidivl
mov
mov
aaa
mov
or
add
lds
imul
push
dec
outsb
shlb
mov
adc
xor
mov
shrb
imul
andl
and
lret
in
and
inc
jg
cli
lea
pop
sub
or
cmp
out
xor
das
and
jb
loopne
imul
movsl
lcall
jge
lock
dec
out
mov
scas
mov
leave
lret
subl
cmpl
inc
xchg
lods
mov
in
ss
pop
sub
sub
dec
clc
push
dec
lock
int
scas
and
lret
or
movsb
lock
sti
outsb
ss
add
scas
push
inc
das
and
mov
int
cmp
out
xchg
ss
inc
and
or
pop
fists
push
xchg
sbb
inc
scas
or
mov
jne
stos
or
aam
mov
fsts
mov
outsb
cmp
cmp
inc
fnstsw
stos
adc
sub
lods
stos
pop
and
push
in
mov
das
movsl
stc
lds
jne
icebp
dec
push
insl
xor
sar
xchg
nop
push
mov
cmp
jo
dec
mov
outsb
mov
mov
sbb
es
sub
sbb
fsubs
jnp
mov
cmp
inc
add
imul
mov
data16
add
in
mov
and
cmpsb
in
xor
fidivl
testl
and
sbb
dec
rol
xor
outsl
shll
in
xor
mov
subb
pop
test
or
jl
je
aas
ds
xchg
scas
cmpb
imul
outsl
dec
jecxz
inc
movsl
pop
ror
out
aad
push
adc
xchg
test
int
jp
leave
or
xchg
insl
aad
cmp
mov
or
push
mov
std
popa
mov
xor
ret
ficoml
sub
enter
and
jbe
sub
jle
addr16
int3
insb
stc
inc
dec
clc
xchg
push
mov
ficoml
cmp
add
xchg
cld
cmpsb
les
aaa
pop
sbb
add
test
jl
jnp
cld
popf
pop
fisttpll
cli
test
outsb
test
mov
jbe
addr16
push
push
cmc
sbb
leave
mov
scas
pop
fcoml
mov
sub
in
push
ficoml
jecxz
sbb
sub
xor
add
and
fmuls
mov
jg
imul
xchg
jns
mov
gs
fidivrl
sbb
pop
add
hlt
into
ret
xchg
inc
sub
out
icebp
jg
sbb
cwtl
or
xor
sub
mov
mov
das
cmp
push
mov
lds
shrb
pop
outsb
push
lret
dec
dec
pop
push
jne
inc
push
jge
outsl
mov
stos
hlt
scas
shlb
pop
addl
sub
dec
lods
push
adcb
in
daa
shrb
cwtl
aaa
neg
int
adc
dec
add
loop
out
out
not
sahf
inc
test
das
dec
or
jl
popf
dec
insb
dec
sbbb
sbb
pop
enter
cld
cs
add
out
pop
shr
sub
or
dec
sub
dec
js
addb
jbe
outsl
mulb
jg
dec
leave
cmp
int3
push
in
sub
nop
cli
cltd
mov
sub
mov
inc
stos
xchg
rolb
fwait
divb
imul
cmc
dec
enter
cld
push
sbb
sbb
cmp
xor
push
mov
pop
mov
in
mov
pop
cwtl
xchg
dec
int
test
cmp
movsb
push
shrl
sub
xor
fcmovb
add
mov
in
loop
cli
hlt
xchg
ror
mov
nop
test
sub
pop
iret
fidivs
shll
addr16
test
dec
rclb
sub
outsl
es
ds
rorl
push
cmp
sahf
test
in
lods
dec
std
aam
cmp
mov
pop
in
mov
mov
xchg
inc
lods
dec
push
cmpsb
push
jnp
mov
jg
or
and
push
sub
outsl
mov
lret
bound
xchg
movl
push
enter
cmp
jge
jg
divl
and
adc
incl
add
in
dec
xorb
mov
test
inc
outsl
push
pop
push
hlt
cmp
pop
addr16
xor
ficompl
mov
fmull
cwtl
ljmp
out
push
mov
lahf
jno
nop
stos
sarb
xchg
andb
adc
scas
cld
adc
imul
xor
lahf
mov
into
xchg
mov
nop
inc
pop
and
lret
push
cmp
pop
pop
fwait
mov
fcomip
ret
inc
mov
push
dec
and
pop
cmp
or
mov
pop
push
mov
jl
lods
push
or
mov
iret
jle
dec
enter
lahf
dec
movsl
adc
jecxz
popf
mov
dec
popf
movsl
dec
mov
pop
pop
mov
sbbl
sahf
cld
inc
mov
jl
sbb
xor
mov
in
test
adc
sahf
cmp
pop
sbb
mov
add
je
int
push
add
push
adc
or
jns
imul
insb
mov
scas
push
fnsave
sbb
add
mov
lock
inc
sbb
fstpt
push
lds
sbb
leave
mov
movsb
add
clc
ror
dec
stos
pop
idivb
arpl
push
jle
cmp
pusha
sbb
cmpsb
lret
push
ficomps
decb
mov
mov
inc
xor
cmp
jmp
mov
iret
data16
shrl
adc
pop
xchg
mov
rcl
xchg
mov
mov
or
sbb
je
push
or
jbe
ficoml
outsb
pusha
mov
mov
pop
addr16
arpl
mov
pop
rcr
cmp
cmp
lods
pop
sub
and
or
mov
mov
cmp
repz
outsb
iret
jl
or
sub
ljmp
mov
mov
fisttps
cmpsb
movsb
decb
jnp
and
or
outsb
add
dec
scas
sbb
inc
aad
push
xor
cmpsl
repz
jns
lahf
mov
dec
inc
scas
ds
data16
daa
sar
int3
jae
lds
test
dec
cmpsb
mov
das
add
jns
lret
in
cmp
ret
mov
cli
ss
and
xor
call
push
push
sarl
mov
mull
fmull
sub
mov
mov
or
pminub
lock
mov
stc
sbb
xchg
daa
push
int3
popf
jmp
in
mov
jmp
shlb
mov
jns
enter
dec
mov
in
test
mov
mov
xchg
mov
loope
pusha
or
pop
fildll
mov
xchg
incb
dec
mov
ret
testl
lds
insl
fnstenv
sti
movsb
pop
cmp
je
xchg
pusha
xchg
hlt
sub
imul
rcrb
xorl
add
cs
mov
loope
in
and
ds
xor
mov
cltd
mov
adc
nop
and
ljmp
in
fidivrs
pop
xor
inc
scas
sbb
inc
sub
mov
xor
mov
jnp
sahf
jbe
lret
fs
int
out
daa
fists
js
push
jb
and
mov
es
aaa
and
or
pop
inc
sub
mov
leave
cmc
ds
out
adc
push
gs
sbb
inc
push
in
dec
shrb
push
jg
sub
imul
mov
insl
adc
inc
adc
fcmovnb
gs
push
js
xlat
pop
inc
mov
xchg
into
and
or
and
sub
addb
push
and
inc
fcmovnb
push
mov
xor
lahf
or
in
dec
jl,pt
jnp
or
dec
addl
outsl
jnp
cmpsb
cmp
jl
data16
jne
jp
sbb
push
inc
subl
fstpt
pop
jl
in
xchg
push
jnp
jno
insl
and
mov
mov
insl
cld
fnstcw
mov
lods
push
sahf
scas
mov
fldl
pop
mov
inc
adc
stos
lcall
jne
xchg
jne
dec
dec
jp
addr16
into
call
rcrl
std
pushf
xorb
jae
jae
inc
test
lret
out
adc
dec
mov
cs
dec
scas
push
shrl
sbb
sarl
mov
sbb
sbb
inc
out
in
fwait
rolb
imulb
push
dec
lods
cmp
dec
mov
jb
xor
push
xchg
ds
inc
xchg
sub
push
ret
mov
adc
out
fidivrs
daa
pushf
bound
mov
movsb
xchg
inc
xor
or
fwait
aad
cmp
test
stos
adc
inc
dec
cmp
bound
and
sbb
add
shll
sbb
xor
js
cmp
shlb
out
xor
cmpsb
mov
push
sti
dec
fidivrs
das
mov
stos
mov
xchg
enter
pushf
test
js
test
enter
pop
leave
inc
sbb
pusha
sub
add
add
hlt
inc
ds
shll
shlb
jo
mov
mov
fistpll
mov
cwtl
inc
icebp
cmc
mov
mov
xchg
push
loopne
imul
loop
aam
xchg
xor
jo
loope
sbbl
gs
arpl
lahf
jns
popf
push
in
xchg
filds
cmpsb
in
mov
testb
orb
adc
push
int3
outsl
lret
dec
sub
test
stc
test
pop
add
mov
sub
sbb
and
and
xor
mov
sbb
insl
frstor
pop
insl
test
aad
pushf
das
xor
and
xchg
aas
push
test
loop
sbb
loope
or
scas
stos
rorb
jp
mov
sbb
sbb
out
je
test
push
jbe
scas
inc
cmp
adc
xchg
cs
jbe
mov
fnstsw
in
lods
cmp
or
fcom
lret
and
push
sub
xor
cmp
test
xor
and
sub
jmp
aas
dec
loope
stos
hlt
pusha
test
jg
aaa
cltd
mov
rcrb
pop
les
cmp
cwtl
gs
adcl
xchg
into
inc
add
mov
mov
sub
pop
lods
popa
dec
or
push
out
arpl
jg
subb
dec
int
imul
mov
adc
arpl
jg
loope
jmp
popa
sbb
hlt
push
fs
shrb
stc
stos
xor
fbld
je
ss
in
jl
cld
or
jae
aad
add
inc
iret
jne
lods
lcall
scas
cwtl
movsb
adc
mov
mov
into
test
jbe
in
mov
aad
xlat
mov
and
subb
je
jl
jbe
jne
jmp
push
decb
bound
xchg
pop
cmp
sbb
jge
enter
aas
sbb
pop
dec
in
pop
mov
jnp
in
push
popw
dec
lods
outsl
dec
int3
xor
dec
push
xor
std
xchg
dec
push
cmp
pop
jno
ds
mov
xchg
dec
cmpl
in
or
push
int
outsb
and
into
push
lods
dec
loopne
add
cmp
stos
ret
pop
je
in
aaa
mov
imul
mov
jnp
inc
cmpsb
mov
mov
mov
fwait
lea
ja
fiaddl
jo
or
mov
cmp
sbb
pop
addl
dec
cs
mov
push
xor
es
jle
inc
mov
cmpsl
sbb
xor
sbb
lea
jl
add
in
xor
movsl
push
daa
and
push
std
icebp
ret
outsb
stc
test
cs
inc
xlat
daa
in
xor
loop
pop
jne
cmp
jp
push
cmpsb
ror
add
insb
adcb
cmp
push
sbb
psraw
mov
xorl
jmp
xor
movsl
fisubl
gs
inc
int3
jle
fisubrs
stos
jmp
ret
in
adc
add
testb
jo
dec
stos
cmc
jae
mov
mov
fisttpll
rcrl
pop
xchg
cs
pushf
in
xchg
fildll
sub
test
mov
pop
iret
mov
ja
or
movsl
insb
mov
stos
repnz
rcrb
bound
pop
xor
movsl
lret
dec
xchg
jle
cs
lahf
sbb
dec
sub
cmp
repz
pop
scas
adc
out
popf
mov
lds
test
sti
xlat
inc
arpl
add
test
icebp
gs
loop
xchg
imul
mov
ja
sub
call
scas
notb
outsl
jmp
mov
mov
fbld
pop
int3
xchg
icebp
out
cmpsb
cmp
jl
jp
fistl
fs
cltd
outsb
andb
cmp
pusha
imul
jbe
sub
inc
sub
push
adc
or
push
iret
addr16
xchg
inc
xor
and
xorl
dec
out
dec
hlt
mov
test
or
xlat
aaa
movsb
loop
xchg
push
subl
adc
in
scas
dec
jle
cmp
jge
add
testl
in
lods
dec
outsl
stos
inc
mov
in
das
dec
ja
sub
aam
inc
pusha
mov
jg
and
cmpsl
shll
fwait
jecxz
out
ja
push
jno
fsubl
mov
loopne
sahf
lret
inc
pop
inc
jg
inc
das
das
fistpl
stos
stos
push
fisttps
pop
xchg
jle
inc
push
xchg
imul
nop
loopne
push
push
fstps
mov
jge
fwait
fwait
or
mov
sbb
imul
and
adc
add
divb
cmpl
les
loope
outsl
rcrb
push
idiv
outsb
wrmsr
or
sub
mov
xchg
lock
mov
mov
scas
in
xchg
dec
call
fidivs
jmp
ja
ja
add
ljmp
pop
add
roll
mov
addr16
dec
ja
pop
dec
lahf
push
out
pop
lods
dec
xlat
pop
fimuls
aam
jg
inc
movsb
sahf
mov
scas
inc
hlt
jno
ja
push
sahf
mov
enter
mov
and
imul
mov
xchg
xchg
cmpl
xchg
xchg
inc
mull
sbb
in
cltd
fiadds
lahf
ljmp
mov
mov
leave
pop
mov
ja
cld
adc
mov
shl
sahf
sti
dec
mov
jns
aas
sbb
cs
sbb
mov
aam
int3
fwait
add
sbb
pushl
jge
and
jo
bound
push
fmul
sti
add
cmp
inc
jb
jo
repz
mov
xchg
rcrl
mov
lods
aaa
sbb
adc
jmp
lahf
pop
cmp
mov
cmp
addl
dec
aam
aad
hlt
xor
out
enter
rolb
outsb
add
hlt
cltd
cmp
test
insb
and
mov
and
cmp
sbb
outsb
aaa
cmp
movsl
scas
repnz
lcall
xor
and
and
cmp
lret
shlb
xor
push
jge
lock
xchg
cli
aas
sti
push
dec
movsl
cmpsl
dec
mov
ficoml
lret
hlt
mov
pusha
xor
mov
rcrl
fs
inc
and
notl
icebp
rcll
xchg
or
inc
add
sbb
in
icebp
aad
outsb
lods
insl
rep
scas
test
sbb
dec
mov
jp
not
out
aas
frstor
inc
dec
mov
cmp
inc
jg
popa
pop
test
cmp
mov
mov
test
jle
push
cld
mov
mov
xchg
mov
gs
dec
push
mov
lahf
hlt
adc
insb
in
mov
jg
add
test
out
js
mov
mov
lcall
cmp
xor
xchg
sbb
into
add
and
xchg
jg
or
mov
test
pop
rcrl
addr16
insb
jne
jl
mov
sub
jg
xor
les
push
add
xchg
mov
sbb
sub
test
jno
dec
pop
repz
mov
fnstcw
jns
and
cmp
cwtl
fimuls
movsb
adc
and
xor
ret
mov
mov
and
add
daa
jbe
aam
outsl
mov
sbb
insb
cli
mov
mov
add
scas
mov
xchg
mov
stc
pop
test
push
jns
push
dec
psrld
xor
mov
loope
jbe
frstor
jno
jne
xor
dec
jae
aam
dec
test
add
adcl
xchg
lret
insl
cmc
lret
sbb
in
sub
in
stc
dec
pop
xchg
lods
mov
and
imul
jg
sti
and
cmp
ror
orb
lcall
jp
fistps
or
and
scas
in
inc
or
inc
push
jl
xor
imul
scas
shr
pop
dec
or
arpl
dec
test
mov
jno
inc
inc
orb
sbb
push
sbb
inc
pop
jp
leave
in
mov
shlb
jp
sbb
xchg
jl
mov
fwait
icebp
cmp
xor
xchg
inc
dec
mov
inc
lret
gs
dec
and
xor
xchg
int
dec
sub
test
call
pusha
lret
outsl
adc
in
ret
syscall
subl
pop
mov
ret
sub
dec
add
hlt
xchg
push
push
scas
push
std
dec
dec
jmp
test
jbe
iret
fisubl
sbb
adc
mov
iret
rorl
or
cmp
arpl
fdivrl
adc
ret
sbb
sbb
or
int3
nop
rorb
clc
into
popl
out
mov
cltd
or
or
rorb
clc
outsl
sbb
pop
test
push
mov
adc
test
sub
fisubs
adc
test
inc
push
movb
lcall
scas
ds
sar
cmc
inc
or
fmul
inc
fmul
addr16
dec
push
mov
loope
adc
mov
push
push
iret
inc
add
pusha
in
mov
dec
dec
and
sub
xor
cmp
int3
nop
unpckhps
add
outsl
ficompl
pmuludq
rorl
lret
out
or
add
cld
push
push
sbb
movsb
hlt
or
sar
jnp
pop
sbb
unpcklps
call
push
cld
or
loopne
loopne
fimuls
sbb
addr16
movsb
outsb
push
push
adc
or
xor
add
xchg
and
dec
addr16
sub
sbb
mov
out
clc
push
push
iret
loopne
xchg
pop
clc
lret
jmp
ja
nop
xchg
sbb
mov
daa
sbb
and
pop
push
lret
test
ljmp
add
test
fcompl
cs
lock
jnp
mov
mov
not
int
adc
cmp
sbb
add
aam
adc
xor
adc
cmp
sbb
sub
or
fldln2
xlat
shrb
fcomi
sub
jns
test
xor
imul
cltd
cwtl
mov
add
jecxz
or
fdivrp
xchg
in
fisttps
std
adc
mull
and
stos
or
outsb
addb
adc
xchg
out
imul
out
push
lcall
or
push
pop
xor
dec
insb
lret
sub
popf
or
pop
orl
sub
repz
out
mov
mov
scas
aas
sub
push
mov
mov
leave
cmp
mov
sub
cmp
cmp
cs
xchg
outsl
adc
push
repz
lea
and
shrl
mov
mov
fcmove
ss
jecxz
sub
jle
in
sbb
pop
pop
pusha
fcmove
repnz
pop
push
insb
out
inc
inc
dec
loopne
icebp
mov
pop
mov
push
push
dec
call
or
cld
xchg
dec
in
mov
into
jmp
fsubrl
bound
cmp
fimull
add
push
xor
ficoml
clc
repnz
mov
imul
adc
ret
sub
push
adc
xchg
repnz
dec
ljmp
adc
subl
xor
add
or
jb
or
dec
xchg
sbb
rep
jmp
les
or
jo
jne
ret
fists
arpl
inc
mov
sbb
lcall
ret
aad
and
into
xor
or
fldenv
dec
adc
enter
out
test
das
inc
sahf
pop
pop
adc
outsl
inc
lret
arpl
jne
add
loope
mov
cltd
das
or
jnp
out
or
inc
mov
and
mov
push
imul
mov
insb
xchg
arpl
insb
jl
adc
das
aam
pop
in
movsl
pop
pop
xor
lock
mov
inc
mov
and
iret
repz
shrb
adc
fcmovnbe
push
sub
or
add
xlat
outsl
fucom
flds
xchg
decl
int
lods
xor
leave
sarl
inc
xchg
aas
shrl
shr
fisttps
push
or
loope
add
pop
movsl
mov
or
xchg
xchg
xor
and
mov
mov
sbb
sbb
lds
pop
dec
shll
jmp
movsl
add
xor
lock
pushf
push
shll
xor
hlt
sub
cmc
pop
mov
mov
xor
or
inc
js
pushf
fdivl
mov
push
add
dec
push
aas
sbb
jmp
jmp
jo
mov
sbb
dec
sub
rcll
ret
sub
fstpl
xchg
pop
dec
adc
repz
pop
mov
sub
xchg
add
or
push
cmp
cmpl
dec
lret
test
rorl
fdivrs
mov
pop
xchg
cmc
std
cmc
ret
scas
push
xlat
push
jb
adc
sbb
xchg
loop
fcomps
cmp
imul
jge
ret
inc
shl
sub
fidivrl
nop
movsl
sbb
rorb
je
sub
fwait
lds
ljmp
rclb
addr16
dec
inc
xchg
sub
inc
jmp
ret
adc
jae
sub
adc
sti
out
divb
xlat
sbb
fcomip
enter
adc
shrb
fdivrs
outsl
fninit
fnstenv
test
cmp
sub
add
hlt
mov
rclb
nop
cmc
and
or
sub
pop
orb
aam
es
out
lret
rorl
pop
cmc
cmp
xor
or
sbb
int
or
ret
aaa
cmpsb
xchg
sub
or
cmpsb
push
mov
int3
mov
push
loope
sbb
cmp
