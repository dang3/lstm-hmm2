mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
add
cmp
pop
xor
mov
mov
mov
fcoms
inc
ficoml
cmp
out
ret
push
add
add
pop
add
add
cmpl
jne
pop
pushl
jae
shrl
push
push
mov
push
pushl
push
imul
xchg
dec
pop
loop
add
jmp
xchg
adc
cmp
leave
ret
add
add
cs
inc
and
mov
pushl
add
adc
mov
int3
cmp
adc
pop
mov
mulb
mov
mov
push
je
mov
cwtl
and
inc
add
or
test
test
clc
ss
pop
inc
push
mov
mov
push
push
mov
fcomps
mov
add
bound
mov
dec
daa
add
push
dec
mov
hlt
cmp
or
mov
subw
divb
lea
push
push
sbb
fs
sbb
fs
popa
hlt
sbb
ret
push
addr16
cld
std
add
shl
push
push
add
cmp
and
mov
pop
jmp
jp
pop
push
aam
or
push
mov
hlt
push
cmpb
mov
pop
mov
xor
push
arpl
sub
jmp
int3
sarl
outsl
daa
push
inc
jae
jmp
loopne
and
movl
xor
fidivs
and
ljmp
cld
mov
popf
mov
xor
je
loope
ljmp
mov
jg
loop
pop
push
sar
imul
add
jmp
mov
and
push
xchg
cmp
cld
clc
sbb
clc
mov
push
mov
pop
jns
loopne
pop
je
mov
mov
fistl
mov
xchg
je
lcall
cld
mov
cmp
pop
inc
out
mov
enter
adc
and
push
sti
iret
pop
popf
adc
and
or
push
int
in
push
fnstsw
sbb
push
sbb
fs
add
sub
cmpsl
leave
movsb
xchg
dec
mov
add
inc
enter
inc
int3
gs
mov
lret
cwtl
js
pop
sub
push
or
cmp
clc
cld
cmp
or
adc
shr
loope
lea
aaa
clc
hlt
dec
in
sub
add
int3
rcll
push
call
jmp
clc
cld
cld
lock
jne
shl
add
xchg
and
pop
shrb
add
or
pop
or
xor
push
pop
add
inc
mov
cld
pusha
add
push
cmp
sbb
outsl
cmp
jmp
movl
in
xchg
or
xchg
out
jle
add
push
or
cmp
in
cmp
addr16
add
adc
xor
xchg
xchg
in
mov
mov
cwtl
sbb
lods
lret
cmp
setg
pop
inc
aam
sbb
adc
add
stos
dec
inc
jo
dec
es
cmp
sti
fcomp
and
imul
jge
xchg
in
pop
movsb
aaa
hlt
out
pop
call
ljmp
out
lock
xchg
js
and
pusha
push
icebp
sub
test
mov
movb
mov
xchg
jno
fadds
test
jbe
fstl
cld
sub
shr
inc
clc
enter
adc
and
aaa
into
enter
xor
push
enter
lret
xorb
cmp
push
mov
or
cld
mov
mov
xor
cwtl
shrl
pop
adc
je
fs
insb
xor
jmp
lods
fwait
push
sarl
xor
sub
adc
dec
aaa
mov
in
mov
leave
add
rorb
cmp
sub
mov
lcall
push
xchg
and
popl
jmp
std
leave
popa
andb
push
add
pop
iret
add
or
shrb
popf
sbb
push
subl
mov
mov
adc
orb
adc
outsl
call
ret
mov
pop
imul
cli
sbbl
jmp
inc
mov
pusha
cs
cmpl
lar
sbb
add
add
pop
pushf
call
xchg
add
je
sarb
push
mov
inc
xchg
loop
jnp
push
mov
daa
mov
push
jno
imul
cmp
in
sbb
pop
lds
push
inc
inc
sub
mov
in
loope
mov
push
inc
jb
aaa
rol
push
fiaddl
insb
call
sahf
loopne
daa
pop
arpl
adc
or
add
add
jne
mov
pop
iret
xlat
jg
test
or
xchg
lock
jb
or
sbb
nop
movsb
in
test
jb
jno
xchg
loopne
and
mov
mov
leave
cwtl
lea
push
cld
fldl
leave
call
pop
add
pop
inc
rcrb
test
out
fsub
call
mov
and
adc
cwtl
or
jmp
inc
mov
les
aam
xchg
or
jecxz
add
in
fs
xchg
rcrl
add
mov
lock
ss
mov
xchg
in
ret
fwait
jo
dec
xor
sub
mov
cmp
push
adc
pop
cmp
sbb
inc
in
les
ja
or
lret
jl
ret
adc
and
add
mov
mov
mov
pop
jbe
xchg
adc
subb
sub
fdivrl
fbld
mov
pusha
add
mov
ss
imul
and
mov
xor
inc
push
mov
das
add
and
dec
fcoms
pop
pop
or
rorb
push
call
jmp
popf
mov
cmpsb
mov
sbb
inc
cmp
xchg
int3
cltd
add
mov
fsubs
push
xchg
sbb
dec
shrb
mov
mov
rcl
dec
pop
jns
and
adc
mov
scas
mov
or
jne
divl
cmp
into
lock
mov
cltd
pop
and
ljmp
or
loopne
push
andl
data16
loopne
je
mov
xchg
dec
mov
wbinvd
push
sbb
add
cmp
sti
xor
jmp
pop
sbb
push
cmovbe
ret
xchg
mov
push
push
fildl
orl
lock
push
imul
pusha
cmp
xchg
push
cld
repz
outsb
bswap
mov
adc
adc
ret
xor
test
lea
push
push
leave
xor
mov
iret
rorb
out
leave
std
lea
sbb
push
rolb
add
jo
hlt
ret
or
mov
adc
mov
loopne
add
fistpll
fidivrs
movzwl
adc
mov
rcl
div
and
data16
jns
push
das
stos
sub
xor
cmp
and
iret
mov
push
push
push
xchg
jns
or
push
mov
call
xor
dec
sbb
dec
shl
add
test
je
xor
out
adc
mov
sarl
push
je
cmpsl
lock
xor
in
adc
dec
or
adc
pop
rcll
xor
clc
rcll
mov
inc
mov
xor
mov
add
cmp
adc
jo
mov
je
push
imul
test
push
push
sub
push
adc
cmpsb
mov
and
pop
or
ret
pop
fmuls
sbb
push
or
push
out
inc
xor
pop
cmp
push
rclb
and
jne
push
inc
sbb
insb
pcmpeqb
lcall
sbb
cmp
xchg
push
enter
sti
dec
lods
inc
imul
xchg
xchg
sub
call
cmp
push
push
mov
daa
cld
adc
push
es
sahf
cmp
push
lcall
mov
cmpsb
sbb
mov
inc
inc
sahf
inc
xor
jne
lods
sub
lods
sbb
fnstcw
call
pop
push
fisubrl
mov
adc
push
or
enter
fsubl
je
cmpl
push
add
pop
push
dec
dec
cli
pop
lret
pushf
shlb
mov
mov
pop
fwait
cmpsl
out
repnz
mov
mov
je
push
xor
xchg
pushl
pushl
test
or
or
sub
push
push
shlb
icebp
mov
xchg
jmp
cmp
addr16
lods
add
rol
enter
test
mov
les
inc
add
cmp
mov
xor
test
inc
jo
push
fcoms
repz
or
xchg
inc
cmp
sbb
ja
mov
jmp
or
out
sbb
cmp
movsl
pusha
push
jge
sub
push
orb
jae
bound
mov
addr16
jl
leavew
andb
sub
dec
lods
xor
mov
nop
mov
inc
jno
cwtl
pushf
pushf
pop
test
sbb
push
push
xchg
xor
pop
cmp
loope
lahf
addl
adc
hlt
push
jno
mov
push
loopne
mov
arpl
push
adc
jno
fmuls
shlb
stc
mov
rolb
out
add
loopne
add
push
cmp
add
push
and
jmp
ds
sbb
xchg
sahf
in
add
fdivs
mov
bound
mov
adc
mov
sub
enter
mov
ret
jmp
lea
cs
add
push
push
lods
xchg
jp
in
je
mov
pusha
repz
sub
mov
out
in
mov
call
clc
pop
push
cmp
mov
xor
add
push
jne
gs
jmp
movsb
in
insl
stos
pop
mov
adc
push
cmp
inc
mov
push
sbb
fcomps
enter
sti
sbb
and
jo
lds
popa
add
push
into
arpl
sub
shlb
shlb
push
mov
je
bound
je
lea
push
adc
add
jmp
sbb
pushf
test
test
and
pop
jmp
je
js
cmpsb
sahf
cmp
mov
popa
repz
mov
mov
ja
enter
clc
fs
inc
dec
adc
imul
mov
pushf
insb
mov
add
mov
mov
inc
push
xchg
adc
loope
pop
sbb
and
jecxz
test
sub
dec
call
push
fldcw
cmp
cmpsl
cmp
adc
scas
fs
jnp
push
push
and
pop
push
or
push
pop
jae
mov
sbbb
icebp
out
inc
mov
notb
mov
pop
xchg
adc
jo
dec
jl
sbb
adc
jl
jne
fprem1
cmp
adc
sarl
popf
loope
jp
movsb
jbe
inc
adc
xchg
pop
sbb
adc
hlt
sbb
je
dec
call
mov
xor
jp
jo
ss
and
int3
adc
sbb
add
jecxz
inc
jbe
dec
fwait
adc
fidivl
fldenv
mov
xor
or
jo
icebp
mov
jmp
xchg
insl
add
sub
and
sbb
decl
add
shll
xor
shr
test
loopne
add
out
pop
pop
cltd
sub
adc
int
mov
call
push
add
cmpsl
pop
test
pop
je
testb
jne
inc
push
rcrl
pusha
jnp
test
lea
lea
jne
es
lcall
movsb
jae
sbb
push
inc
ret
movsl
push
pop
mov
dec
push
imul
imul
cld
dec
jle
push
xor
loope
sub
or
push
into
and
xchg
iret
dec
rorb
shrl
rorb
loope
cmp
and
cmp
daa
sub
pop
cmp
xchg
sub
push
fisubrl
ret
loope
sbb
pmaxub
loopne
jo
sbb
loope
loop
jecxz
in
in
push
xchg
loope
cmp
adc
or
cmp
and
in
adc
push
sbb
xchg
out
dec
lock
adc
inc
ret
loope
cmp
pop
hlt
aaa
cmc
sbb
or
xchg
sub
inc
cli
sub
pop
mov
dec
mov
add
push
pushf
mov
sbb
jmp
sar
es
push
into
mov
mov
hlt
sub
fdivs
adc
add
add
xor
pop
inc
mov
out
sbb
testb
add
int3
test
inc
cmp
jb
dec
or
mov
add
mov
mov
lea
enter
lahf
nop
mov
push
cmp
mov
jb
pop
fadds
mov
add
adc
inc
and
adc
cmp
aam
fmuls
imul
mov
push
mov
or
xor
mov
lret
and
add
push
inc
cmp
mov
mov
sbb
dec
or
xor
lock
xor
sbb
call
iret
xor
pushf
pop
adc
inc
nop
pop
push
sub
cmp
push
aaa
inc
push
jb
sbb
jo
sub
cmp
mov
aam
push
pop
dec
xchg
mov
push
mov
and
shrl
cmpb
in
mov
sub
popf
mov
rorb
aam
dec
and
std
aad
addr16
ljmp
xchg
inc
es
push
inc
shrl
or
inc
xchg
mov
outsl
dec
pop
push
sub
ds
xor
ret
or
je
cmp
add
dec
sub
push
cltd
pop
idiv
rolb
push
add
mov
mov
clc
jb
clc
add
loope
push
cmpsl
jae
ss
cmpsl
lods
push
jmp
rcll
loop
push
xor
push
ss
jne
mov
mov
je
add
lret
push
jecxz
test
shl
out
pop
ljmp
cld
les
push
gs
ret
pusha
cwtl
pop
push
sbb
mov
sbb
or
jns
or
adc
test
lods
adc
std
sbb
adc
sub
push
out
fldt
push
push
push
xchg
mov
mov
push
inc
sub
add
sbb
loopne
fsubrl
test
mov
sahf
inc
xchg
push
mov
cmp
inc
xor
js
mov
sub
add
push
sahf
xchg
lock
scas
cmp
mov
adc
je
fidivrs
popf
lds
push
lcall
mov
fs
ret
test
sbb
push
jb
inc
fisubrl
xor
or
lcall
les
jae
xchg
pop
jo
and
push
jge
inc
lock
xchg
xchg
iret
inc
lods
subl
xchg
xor
jle
int
pop
mov
sbb
push
jno
mov
xor
leave
push
mov
push
push
test
sarb
and
js
add
popf
push
sbb
push
cmp
pop
psraw
fcoml
xchg
shll
sub
pusha
cltd
pop
das
xor
xor
xor
add
add
pop
jecxz
shlb
cld
push
lds
insl
test
jl
lret
je
or
add
je
mov
cmp
loopne
push
nop
cmp
rorb
ds
pop
test
pushf
loop
jmp
xor
or
jno
inc
mov
adc
xchg
iret
fcoms
pop
jo
cld
and
rep
movl
in
aam
xchg
lock
in
pusha
push
aas
repnz
jecxz
test
mov
jecxz
mov
inc
pop
sbb
pop
fcoml
subl
push
aas
int3
test
sbb
enter
lret
push
jae
push
je
cmp
mov
pop
xor
and
fcompl
out
les
lods
lcall
cmpsl
sarl
loop
xor
mov
xor
data16
push
gs
and
nop
jns
cwtl
test
aam
shr
incl
mov
push
jmp
mov
shll
ss
adc
cmpsl
add
pushf
xor
fs
push
gs
jae
stc
push
xor
std
pop
mov
xchg
rorl
or
sbb
push
adc
rcll
fmull
xor
movsb
adcl
or
imul
push
xor
pop
dec
jg
stos
push
jae
gs
pushf
mov
lahf
xor
cwtl
sbb
sahf
loope
push
jno
dec
mov
jo
shl
mov
or
pop
xchg
int
push
mov
mov
dec
push
cmc
out
and
mov
pop
adc
inc
hlt
jle
lea
call
ss
pop
xor
and
cmpsl
and
stos
sahf
fdivrs
and
xor
jle
mov
js
jmp
std
je
in
pop
and
dec
iret
dec
inc
daa
loop
mov
pop
inc
sarb
sbb
mov
add
adc
imul
enter
test
cltd
add
dec
pop
outsb
mov
sub
mov
sbb
jge
fdiv
sbb
divb
sbb
xchg
cmc
pop
cld
pop
sub
push
sbb
dec
ljmp
jle
push
jecxz
mov
jae
inc
push
out
test
mov
mov
push
mull
lock
add
and
mov
pop
dec
pop
jne
mov
cmp
int
arpl
lods
or
popf
sarl
push
cmc
inc
and
xchg
dec
call
push
mov
je
cmpb
jne
xlat
add
adc
pop
add
mov
add
movb
mov
push
dec
sub
cmp
jge
cmp
xchg
jge
inc
push
sarb
mov
addb
mov
cmc
cmp
inc
lret
mov
hlt
sti
inc
sahf
cmp
inc
mov
adc
pop
cmp
xor
or
adcl
cmp
pop
jne
sbb
test
push
or
ficompl
cmpl
push
cli
in
clc
scas
push
jne
or
or
mov
repnz
bound
dec
lock
inc
scas
orl
mov
mov
cmp
push
push
sbb
leave
inc
or
pop
mov
es
mov
rorl
and
dec
dec
lret
mov
icebp
cmp
lds
dec
add
testl
insb
test
add
shlb
sub
cmpsl
je
fstl
emms
js
pop
stc
in
xchg
sbb
mov
push
jae
xor
ficoms
mov
ja
and
adc
inc
dec
sub
fmuls
lcall
fistpl
xor
flds
cmp
inc
add
and
shl
mov
mov
adc
and
outsl
and
and
or
inc
xchg
fstps
addl
inc
fildl
cmp
in
mov
xchg
subb
adc
outsl
jnp
pop
adc
cmp
test
test
outsb
xorl
adc
aam
lods
je
inc
add
fnstsw
ja
mov
repnz
movsb
xchg
lods
xchg
arpl
les
clc
jle
imul
add
pop
pop
add
inc
push
shrl
dec
movsb
cld
sbb
lcall
jmp
cli
or
sub
adc
data16
cvtdq2ps
cld
sahf
jge
or
xchg
aad
jmp
jl
push
pop
fmul
push
lcall
inc
and
ljmp
inc
pop
mov
lds
scas
xchg
ret
lret
inc
shl
xlat
cld
test
rorb
and
mov
add
cli
push
cmp
mov
and
pop
inc
test
dec
imul
clc
data16
mov
mov
jnp
cld
mov
leave
cmp
lcall
pop
jbe
inc
or
and
mov
pushl
ja
pop
int
jbe
and
movsl
leave
stc
into
clc
call
in
mov
insb
ret
in
inc
jl
stos
pop
and
or
push
pop
lcall
mov
aam
cld
jmp
clc
pushf
cli
sub
imul
loopne
vrcpps
and
shlb
inc
xchg
fmul
adc
push
fwait
cwtl
lea
pusha
repnz
nop
mov
xor
popf
mov
or
jge
inc
pop
and
sarl
sti
mov
cmp
rcrl
test
cmp
mov
jnp
push
andb
nop
pushl
mov
pop
sub
push
clc
imul
neg
sbb
add
mov
insb
sbb
push
or
add
sub
call
in
pusha
lret
xchg
cmpb
je
mov
sub
jne
cmc
les
or
xchg
xchg
inc
cmp
pop
push
mov
fwait
test
and
arpl
nop
adc
xchg
shr
sub
insl
sub
inc
and
add
mulb
add
add
aad
iret
mov
dec
rcl
loope
inc
stos
jno
pop
jo
jg
mov
adc
ret
cld
cmc
and
mov
inc
jmp
sbb
pop
fidivl
mov
adc
int3
lea
mov
cmp
decl
sbb
and
jge
jae
in
lcall
test
ret
sbb
fmul
adc
mov
pcmpgtb
mov
xchg
or
sub
and
inc
sub
adc
jae
cmp
jl
das
sub
cltd
xchg
scas
fldl
sarl
pop
adc
add
lea
incb
mov
scas
cli
or
pmaxub
push
sub
mov
je
sbb
notl
or
adc
mov
mov
lea
add
xor
mov
pushl
xchg
icebp
pmuludq
xor
and
or
xor
adc
lcall
pop
out
sbb
dec
sub
out
movsb
lahf
push
cmpsl
movsb
js
icebp
mov
adc
adc
jmp
scas
imul
sbb
sbb
lea
xor
dec
ljmp
push
jle
call
insb
push
fmuls
push
sbb
aaa
iret
jmp
imul
fwait
lahf
movsb
sub
rcrb
ret
and
add
test
dec
sbb
and
mov
loopne
cmpb
jl
cmp
push
std
cld
pop
add
nop
cmp
xchg
jle
sub
aaa
test
jmp
pop
push
enter
ljmp
push
in
dec
xchg
xchg
sub
inc
aas
sub
xchg
push
in
push
sub
ds
mov
push
cmp
jnp
xor
xchg
mov
call
pop
aam
icebp
push
mov
cmp
inc
and
call
ss
pop
movl
jmp
mov
lret
sub
push
outsb
add
mov
mov
cmp
inc
mulb
clc
inc
mov
pop
sub
inc
lock
clc
mov
xor
cmp
cmp
in
inc
paddusb
icebp
inc
xchg
dec
in
clc
addr16
cmp
popf
dec
add
cld
fyl2x
addr16
adc
mov
dec
xchg
push
call
jne
mov
xlat
push
dec
jb
and
cld
or
cwtl
cmp
lock
test
adc
mov
push
push
lret
mov
iret
ds
cwtl
cmp
cmp
or
mov
jg
sbb
push
rcll
inc
mov
or
inc
rdpmc
int3
add
or
call
xchg
out
mov
push
nop
fnsave
xchg
vxorps
cmp
sub
pop
je
cmp
inc
xchg
cmp
pop
aas
fyl2x
jecxz
les
in
adc
jecxz
pop
ja
test
inc
call
sbb
jno
or
jp
in
xchg
sbb
loope
mov
clc
repnz
add
mov
cmp
fnstsw
cmpsb
clc
mov
iret
inc
xchg
jl
aas
cmp
in
test
movsb
fyl2x
inc
xchg
inc
lods
mov
sbb
loopne
je
inc
lahf
cld
jne
call
out
mov
mov
mov
inc
cltd
sbb
jmp
inc
cmp
pop
sbb
int3
nop
and
incb
sbb
inc
test
mov
sti
shlb
inc
int3
dec
shlb
rorb
sub
push
sbb
shl
iret
mov
testb
jg
cld
loope
mov
mov
push
cli
inc
lods
in
test
in
clc
mov
aaa
dec
inc
xchg
cmp
jbe
fyl2x
ret
lahf
sbb
pop
out
shll
mov
inc
xchg
cmovle
ret
add
jl
mov
sbb
stos
adc
addr16
dec
test
cmp
pop
jecxz
enter
es
and
das
int3
mov
push
ss
sbb
or
dec
idivb
xorb
push
pop
add
push
pusha
push
lock
mov
insb
in
cmp
sbb
cmp
je
jmp
popf
jge
aam
jae
ja
clc
mov
aam
pusha
mov
and
les
cmpsb
enter
loopne
aam
cmp
stos
es
xor
pop
sub
push
cmp
mov
arpl
push
push
daa
aaa
mov
jmp
xchg
insl
or
call
aas
aas
shr
lcall
sub
ret
lahf
pop
jg
cmp
out
xor
xlat
mov
pop
pop
std
xor
out
push
aas
cld
in
and
or
dec
lahf
xor
jle
stc
insb
pop
je
lahf
pop
inc
pushf
add
aas
clc
lock
xor
mov
aas
hlt
lcall
clc
and
xor
iret
xchg
mov
pop
cld
clc
or
icebp
xor
repz
sub
mov
cld
pop
xchg
das
pop
stc
icebp
out
jge
dec
les
jg
cld
xor
aas
cs
jecxz
in
cmp
aas
ds
sub
clc
repz
addb
pop
pop
stos
sub
xchg
push
pop
test
add
add
mov
imul
push
inc
jb
mov
je
xor
push
push
cmp
add
jb
mov
xchg
loopne
stos
jo
adc
mov
jne
add
push
fldenv
pop
inc
pop
and
push
sbb
cld
fs
pop
push
mov
adc
lcall
add
mov
jo
test
out
cmp
push
jbe
lahf
xor
jle
and
cmpsb
mov
pop
stos
mov
cmp
adc
jne
push
cmpsl
mov
prefetcht2
or
xor
out
das
jge
add
jmp
rcrb
pop
jne
mov
nop
pop
cmpsb
clc
repz
les
nop
jne
push
sti
call
or
je
in
cli
insb
push
inc
je
pop
arpl
sbb
lock
lods
pop
push
ljmp
xchg
push
push
in
xchg
loope,pn
or
mov
mov
push
jb
cmp
pop
or
sbb
sbb
out
push
out
jp
inc
js
aam
pop
adc
adc
pop
dec
test
clc
jmp
mov
add
mov
scas
sbb
xor
pop
inc
sarb
mov
mov
xchg
dec
test
push
loope
addl
sbb
clc
inc
jne
and
dec
jae
add
fcompl
ljmp
inc
fidivs
inc
leave
ret
in
push
xchg
jmp
pop
adc
pop
add
pop
jmp
pop
popf
jge
sub
add
xor
je
jno
push
push
inc
dec
popf
pop
xlat
add
sbb
fnstenv
cmp
pop
adc
fwait
pop
and
jge
jmp
mov
cmp
ss
sub
jbe
sbb
mov
fs
test
mov
inc
popf
and
sbb
sub
xchg
test
or
mov
mov
and
out
call
ja
mul
mov
flds
pop
or
and
xchg
pop
inc
dec
mov
sub
push
hlt
stc
pop
aam
pusha
dec
hlt
pop
je
add
aas
ss
push
add
mov
push
ret
mov
icebp
adc
adc
inc
es
pop
push
and
jecxz
cmp
ds
and
test
and
pop
mov
pop
sti
ret
and
lods
and
pop
sti
lock
pop
inc
and
sti
lock
and
and
lock
je
and
pop
adc
pop
loopne
adc
pop
call
mov
pop
xchg
adc
pop
jle
mov
pop
fdivrp
push
inc
pop
cld
stc
icebp
out
dec
js
aas
rcrb
repz
mov
pop
mov
fcomps
in
rcrl
jecxz
pop
aas
stos
pusha
popa
clc
sbb
cld
clc
loope
dec
sbb
jecxz
pop
pushf
xor
pop
jg
sbb
xchg
cld
clc
jecxz
pop
pop
mov
jge
fstl
adc
jg
clc
repz
adc
push
popf
sub
loope
sbb
push
mov
arpl
pop
sti
lock
push
adc
mov
pop
fs
adc
cld
js
aam
adc
loope
pop
loopne
adc
aas
cmpsl
adc
mov
jg
les
mov
push
dec
inc
aas
ds
stc
mov
loope
popl
or
push
test
repz
jl
jl
ret
xchg
fmull
adc
nop
pop
adc
pop
pop
push
ret
stos
sbb
call
insl
cmp
fadds
add
xchg
add
dec
add
xor
and
and
and
pop
test
cmpsb
xorb
jbe
pop
hlt
mov
mov
push
push
jbe
aam
dec
es
cld
jo
cmp
adc
dec
gs
push
mov
push
push
cwtl
adc
inc
xor
mov
dec
std
mov
sbb
add
mov
rorb
sbb
int3
loop
test
push
cmp
insb
pop
int
inc
push
dec
push
ljmp
lods
insl
adc
mov
add
ljmp
mov
lds
xchg
leave
push
dec
pop
cmpsb
popf
adc
adc
fnstcw
jmp
shrb
pop
testb
das
mov
mov
js
or
ja
ret
jmp
andb
push
test
lahf
subb
dec
cmp
jno
or
sbb
cltd
mov
dec
jle
pop
repz
push
hlt
mov
add
sub
lahf
inc
inc
push
sti
jo
or
sub
fdivrs
fsubs
jp
rcrl
stos
and
mov
push
imul
lods
xchg
adc
lahf
mov
push
lret
inc
xchg
push
push
or
in
subb
movsb
cs
cmp
mov
add
enter
sarb
imul
mov
push
pop
add
mov
mov
es
outsl
mov
xlat
mov
movsb
mov
and
push
push
adc
pop
dec
jle
push
roll
jae
or
lock
sarb
dec
idiv
push
sbb
insb
setne
call
cli
inc
sub
ljmp
loop
cmp
mov
dec
mov
jae
push
repnz
aam
test
or
mov
jno
xchg
mov
cmc
add
dec
adc
xchg
daa
pop
mov
push
lock
xchg
cltd
loopne
cwtl
and
lea
clc
push
add
mov
es
lgs
inc
push
imul
icebp
mov
pusha
imul
pop
mov
add
mov
mov
xor
in
aad
shl
mov
lahf
mov
imul
dec
clc
sti
popf
ds
and
or
xchg
mov
scas
repz
aad
and
sar
leave
stos
js
insb
test
cs
loop
mov
pop
xor
push
push
xchg
pop
cmpsb
cmp
add
inc
sar
je
push
addb
mov
cli
adc
sub
int
push
inc
int
push
wrmsr
pop
push
lds
repnz
push
fldt
je
inc
mov
push
mov
push
and
addr16
xchg
add
cmp
jle
dec
cmp
xchg
adc
push
inc
xchg
and
aam
jecxz
lods
push
push
mov
add
or
aam
or
push
push
push
pop
push
pop
cmp
jbe
cmp
popa
aam
adc
in
fdivrs
pop
pop
and
cmp
xor
sahf
je
pusha
sub
into
mov
ret
xor
fdivs
and
andb
outsl
or
add
mov
test
mov
xchg
fmul
lea
push
dec
add
mov
push
jl
sub
pop
xor
mov
mov
js
add
js
xchg
andnps
aas
mov
decl
push
cmp
cmp
jb
testl
clc
sbb
outsl
and
faddp
movswl
mov
push
ljmp
xor
mov
shlb
or
cmp
and
loop
stos
lea
mov
mov
push
iret
enter
inc
mov
adc
xchg
test
dec
nop
jbe
sub
or
pop
jbe
push
ret
sbb
cmp
push
inc
inc
inc
mov
add
aam
pop
mov
jle
ds
test
movb
xchg
loopne
stc
xor
inc
das
jbe
add
mov
jl
sbb
jp
push
shl
cld
or
jno
in
xchg
cmp
xchg
xlat
push
mov
dec
popa
int3
cli
or
and
jecxz
je
xchg
mov
jmp
shlb
or
lea
fistpll
testb
inc
sbb
or
lea
iret
mov
adc
rol
fcompl
push
push
movsl
push
xchg
inc
fdivr
loope
dec
aaa
sbb
addr16
faddl
arpl
sti
mov
pop
shrb
mov
cwtl
jo
mov
setae
mov
and
or
lock
into
daa
adc
lock
hlt
aaa
nop
xor
mov
adc
mov
movsb
aas
xor
scas
enter
testb
daa
lea
pushf
xchg
sahf
outsl
cmp
pushl
cmpsl
or
cmp
sub
xorl
test
dec
push
hlt
xchg
push
sub
cmp
jle
jne
dec
sbb
mov
das
sub
js
jecxz
dec
dec
insl
int3
push
adc
loope
ret
cmpsl
push
mov
arpl
cld
in
fisttps
call
je
cld
inc
cs
xchg
movsb
mov
cld
mov
sbb
xchg
inc
es
enter
daa
jmp
fcompl
jne
and
cld
leave
cmp
loope
inc
in
fcom
adc
xor
xchg
test
inc
and
mov
out
inc
movsl
jmp
loope
lods
dec
outsl
cmp
and
clc
and
sbb
pop
outsb
sub
mov
gs
test
push
and
je
out
imul
jl
ja
insl
sbb
arpl
inc
test
incl
testb
and
stc
cmp
push
mov
push
adc
sbb
dec
sbb
out
xchg
loopne
or
xchg
orl
push
daa
or
cmp
movzbl
imul
add
and
cld
mul
subb
lahf
mov
aas
jmp
push
push
adc
sub
and
loope
push
cmc
and
mov
inc
xor
pop
push
addr16
jmp
adc
stc
pushf
xchg
or
aam
outsl
cli
fisubs
inc
add
cld
mov
nop
clc
shlb
mov
inc
push
xchg
xorb
xlat
dec
push
or
cld
pop
lahf
nop
int3
cmp
dec
lods
xor
test
and
sbb
pop
lcall
sbb
xchg
pop
cmp
cmp
in
and
stos
clc
sub
je
js
popf
jne
push
or
testl
lcall
hlt
ficomps
sub
push
and
mov
fldenv
xchg
and
sti
mov
std
lret
mov
jp
sahf
fsubl
push
pop
adc
enter
inc
or
xor
jmp
add
jne
jns
in
rcrb
sbb
xchg
fiaddl
xor
add
fdivrl
nop
int
aas
mov
arpl
out
or
cmp
int3
inc
outsl
sbb
push
xchg
js
lods
arpl
mov
add
mov
gs
dec
mov
dec
leave
add
push
ja
push
add
out
push
pop
cwtl
loope
ja
dec
leave
adc
sub
adc
nop
stc
or
sub
mov
popf
xchg
jns
or
out
in
xor
insl
movsl
bound
dec
mov
xor
ret
or
cmpsl
mov
pop
sub
sbb
push
cld
sub
out
sbb
add
cmp
nop
push
push
aas
and
mov
test
inc
or
adc
and
clc
lcall
jo
pop
push
push
sub
sbb
push
push
mov
mov
les
gs
enter
inc
push
out
cld
sub
jp
imul
outsl
in
cmp
ljmp
and
adc
xchg
insb
shrb
daa
pop
mov
pop
lds
pop
mov
arpl
popa
jl
pusha
xor
or
aam
or
loop
push
popa
insb
popa
fisubl
aam
test
lret
mov
shl
xchg
mov
call
mov
adc
mov
xor
xchg
adc
in
dec
pop
push
cwtl
cmp
cmp
pop
adc
xor
jge
clc
pusha
push
lea
lock
and
sbb
pusha
sahf
add
push
adc
jne
push
dec
lret
jl
pop
push
jne
mov
pop
movsl
jo
jb
cmp
jle
jne
sbb
push
push
push
push
mov
rcl
push
adc
sbb
push
clc
mov
xchg
rorb
jns
pop
inc
jl
xchg
push
lods
push
sub
fmuls
mov
loope
adc
ficomps
pop
dec
enter
cmp
fldl
add
sbb
and
imul
rcrl
jle
xor
mov
test
pop
ss
xchg
fnstcw
cmp
shll
aas
adc
addr16
scas
sbb
mov
arpl
mov
sub
inc
and
in
pop
jne
push
sbb
pop
mov
mov
dec
std
sub
in
push
jno
jo
rorl
xchg
jecxz
cmpsb
mov
shl
out
mov
adc
xor
push
int
cltd
xchg
adc
push
jmp
test
daa
sbb
les
inc
sub
push
push
xchg
fistl
push
lods
iret
mov
sbb
int3
sbb
jns
add
js
xor
sub
push
jl
push
and
push
testl
stc
ficomps
aam
jg
push
icebp
push
cli
pushf
pop
inc
stc
adc
push
lods
push
fnsave
rep
mov
test
pop
lods
pop
pop
fisubrs
mov
enter
jmp
dec
pop
and
xlat
xor
pushf
sub
jo
je
lcall
mov
push
dec
mov
push
mov
sbb
xor
imul
inc
push
dec
mov
push
cmp
jl
cwtl
ds
addr16
lock
mov
cmp
testl
int3
or
xchg
dec
stos
pop
xor
imul
js
or
add
jl
mov
mov
ret
je
push
push
mov
lcall
adc
push
icebp
mov
mov
call
lahf
add
jbe
js
or
xor
mov
sub
push
pop
and
fsubrl
into
dec
push
jne
or
dec
inc
jl
data16
call
lock
mov
cli
icebp
sbb
loop
dec
aam
push
sti
shlb
xchg
push
addb
rclb
inc
in
jmp
pop
fwait
mov
push
mov
mov
jg
sub
mov
je
cmp
fistpl
mov
aas
add
mov
lods
pushf
ja
or
lcall
bound
sti
or
leave
inc
sbb
jg
ss
aam
imul
xor
stc
hlt
dec
inc
dec
dec
mov
sub
stc
dec
mov
xlat
rcr
fildl
push
adc
cmp
pushf
xchg
add
push
and
push
mov
mov
cld
push
sub
decb
flds
mov
dec
xor
push
enter
inc
addb
dec
push
inc
ljmp
xchg
call
sub
jge
inc
notb
adc
push
push
in
xchg
ret
sbb
fs
jmp
push
mov
out
or
jmp
sub
sbb
pop
cmp
push
xor
sbb
mov
pop
jne
jmp
inc
add
pop
push
scas
push
ret
adc
mov
nop
xor
cmpsl
popa
push
push
cwtl
dec
push
out
dec
outsb
aaa
js
or
push
cmp
cmp
push
and
xor
adc
xor
or
sub
mov
xor
andb
jmp
arpl
addb
inc
lahf
call
sbb
jecxz
imul
roll
add
test
mov
xchg
cmp
push
int3
push
test
adc
mov
mov
ficoms
dec
push
push
adc
leave
movsb
pop
sbb
leave
mov
xchg
mov
mov
bound
mov
dec
hlt
add
and
loopne
test
push
jne
jns
mov
insb
xor
adc
movsb
mov
ret
and
mov
push
inc
mov
pushf
push
mov
aaa
daa
rclb
adc
add
inc
add
lods
mov
mov
mov
inc
movsb
mov
xchg
mov
movsb
mov
mov
stos
sbb
adc
in
add
aam
jl
clc
dec
pop
cmpsb
add
pop
jb
push
adc
icebp
repnz
arpl
sbbl
xor
shlb
sub
xor
mov
das
test
fsubrl
push
pop
in
mov
out
sete
pop
enter
and
pop
pushl
rolb
and
pop
incl
sbb
inc
loopne
in
sbb
iret
hlt
sub
popf
dec
fisubrl
dec
fcoml
ret
sbb
xor
pop
ljmp
stos
pop
js
xchg
adcb
jle
push
jbe
push
test
push
and
mov
push
mov
add
adc
test
imul
dec
adc
push
jbe
inc
das
or
mov
adc
dec
sbb
es
inc
inc
dec
stos
movsl
cwtl
cwtl
arpl
pop
and
rolb
jb
jecxz
shrl
nop
bound
inc
or
pop
lds
jmp
sub
unpckhps
or
push
mov
test
mov
rolb
sub
xor
push
cs
sub
ss
or
sbb
dec
ret
cmp
xchg
mov
shll
cmpb
sbb
sbb
push
testb
hlt
idiv
movsl
inc
mov
mov
push
dec
mov
add
jp
mov
pop
mov
lea
push
cmc
mov
push
push
push
add
add
inc
cmp
aas
dec
stc
push
xor
inc
xchg
into
dec
sub
mov
inc
mov
test
mov
in
jmp
dec
aaa
cmp
cwtl
aam
xlat
cmp
xor
out
test
in
mov
inc
lods
lret
xchg
cmp
in
push
and
sbb
push
xor
mov
push
jmp
movsb
dec
leave
cmpsb
inc
mov
or
sbb
and
lds
dec
xchg
adc
sarb
pop
nop
lock
sbb
jno
test
push
adc
push
cli
jmp
call
xchg
ret
dec
mov
xorl
push
cmpsl
in
je
std
jo
out
sbb
jbe
dec
jp
push
repnz
and
and
ljmp
mov
pop
adc
leave
mov
dec
mov
or
rcrb
mov
adc
dec
popa
out
xchg
inc
or
sub
aas
push
add
xor
sbb
lock
pop
or
jae
andl
pop
ss
mov
push
adcl
inc
push
cmp
sub
lods
divb
dec
adc
fmull
or
pop
jo
pop
ret
mov
and
mov
dec
ret
or
xor
mov
push
aas
cmpl
adc
enter
xchg
jo
inc
push
in
dec
lds
push
idivl
pushf
mov
inc
cli
sub
mov
mov
cmp
lret
or
xchg
xor
push
out
push
aaa
imul
gs
add
xchg
mov
js
ret
push
xchg
push
xchg
inc
cmp
sub
leave
insb
call
jne
clc
cli
push
mov
jge
repnz
pop
push
dec
imul
sub
cmp
clc
ds
inc
mov
ja
push
stos
lock
sub
jle
mov
jo
or
jbe
inc
sbb
gs
sbb
xchg
xor
pop
dec
int3
lds
jmp
push
call
incl
pop
dec
push
aad
jle
jo
and
xor
add
mov
in
mov
call
jne
fbstp
fisubl
ljmp
cmp
in
dec
xor
and
loope
jmp
sbb
adc
std
push
push
xchg
xor
or
sub
inc
decl
xchg
mov
and
sarb
mov
enter
dec
mov
jmp
stc
dec
sub
mov
test
test
hlt
in
cld
push
enter
mov
mov
fdivr
mov
outsb
pop
push
adc
out
mov
in
pushf
rclb
in
dec
ljmp
fdivl
cltd
inc
adc
jl
jne
aad
dec
xor
push
inc
adc
std
pop
lods
call
cmp
test
in
xchg
pop
mov
adc
push
and
jns
mov
xor
dec
mov
xor
inc
mov
adc
mov
pop
xor
mov
pop
dec
dec
sbb
jnp
aam
sti
arpl
sub
inc
mov
sub
sub
or
repnz
ret
js
ficoms
addl
jl
cmp
jge
mov
mov
shl
cmp
lea
je
adc
les
daa
or
inc
inc
mov
rorb
fs
sub
xorb
xor
lods
pop
fsubp
push
inc
jg
cmp
out
jo
inc
je
xchg
xchg
xchg
lcall
call
dec
xchg
rolb
adc
sarl
data16
sub
jo
inc
add
sahf
out
or
sbb
mov
inc
or
movsl
mov
inc
jne
xor
or
test
sub
fmuls
mov
add
inc
or
out
flds
push
movsb
movzbl
cli
lods
jp
dec
inc
mov
push
push
xor
mov
mov
push
test
xor
inc
xor
add
adc
andl
inc
mov
jge
sub
lret
cmp
xchg
lahf
xlat
call
pop
inc
fidivl
inc
mov
cmp
jne
xchg
mov
es
and
mov
jg
push
pop
xorl
xor
lods
sub
xor
push
inc
clc
xchg
ljmp
cmp
inc
sub
cmp
mov
enter
inc
clc
inc
and
or
daa
aad
test
test
or
push
xchg
cmp
arpl
and
rclb
sub
out
push
lret
lods
or
jmp
mov
adcb
dec
mov
int3
ficoml
mov
insl
dec
rep
lahf
and
aaa
in
mov
dec
push
push
xchg
add
cmp
pop
mov
dec
out
push
dec
xor
jge
clc
insl
and
push
sub
dec
sub
push
jae
lret
inc
cltd
lock
jno
push
push
and
arpl
stc
cmp
pop
push
xlat
movsl
test
push
add
in
sahf
pop
rcll
cmp
lods
inc
movsb
cltd
lea
ret
insb
xchg
dec
cmc
fs
push
xlat
xor
mull
jne
and
mov
and
pop
fcoms
sbb
cmp
cld
add
adc
inc
pop
mov
ret
mov
loopne
add
mov
dec
sbb
xchg
mov
sub
shl
rclb
pop
aam
rcrb
adc
shrl
andl
jo
mov
aam
dec
mov
je
inc
je
inc
xchg
mov
or
outsb
mov
repnz
mov
sub
cmp
subb
jmp
movsbl
mov
stc
ds
in
inc
dec
lods
or
push
mov
xchg
push
push
push
icebp
xor
push
adcb
mov
xor
dec
adc
inc
fnstenv
sub
int3
mov
sub
mov
insl
mov
xchg
adc
or
sti
mov
jmp
jae
cmp
int3
push
adc
lods
push
mov
mov
inc
push
sbb
push
pop
subl
adc
xchg
in
in
pop
push
je
mov
cltd
xor
fimull
movsl
xor
cmpsl
cmp
test
and
inc
push
pop
cld
cmp
jge
push
ljmp
add
test
neg
mov
enter
inc
mov
pop
enter
sub
push
mov
add
push
cltd
add
insl
jno
push
adc
stos
and
ret
lcall
jns
sub
mov
dec
jne
mov
mov
into
xor
push
lds
xor
cmpsb
and
xchg
push
insl
insl
xor
cmp
xchg
fldcw
push
adc
inc
ret
push
xor
pop
xor
loopne
lock
sti
push
and
cmp
sbb
cmp
outsb
push
sub
rorl
push
lock
mov
jae
cmp
call
pusha
out
lret
repz
sub
nop
adc
sahf
adc
dec
dec
add
leave
or
lock
cwtl
insl
inc
push
clc
mov
sti
xor
xchg
cld
mov
jns
push
loopne
out
push
inc
xchg
jbe
push
lock
or
cmp
iret
imul
pop
or
jecxz
xor
subb
sbb
and
mov
loope
sar
hlt
push
xor
push
sub
cwtl
push
cmp
out
nop
adc
mov
mov
xor
cld
and
testb
and
es
pop
fimuls
push
rclb
push
push
lock
pusha
enter
mov
sub
pop
in
in
orl
les
cld
cld
add
cwtl
or
outsl
and
xchg
add
xchg
mov
test
insb
std
mov
test
movl
pop
push
hlt
popa
stos
lret
enter
push
cwtl
jns
xor
xor
popa
jbe
bound
push
insb
or
lods
mov
mov
pop
bound
jecxz
test
push
push
loopne
jo
pop
xor
dec
cmp
push
in
and
mov
stos
stos
stos
jl
push
insb
mov
inc
imul
test
je
and
add
rorl
clc
push
shlb
mov
enter
sub
stos
mov
cld
xchg
in
shrb
sub
into
jge
pop
rclb
xchg
push
les
and
cmp
inc
sbb
or
push
in
sbb
adc
fsubl
mov
cmp
ret
add
popf
sbbl
repz
jne
and
mov
out
roll
xor
shl
ficompl
rolb
mov
xorl
mov
inc
pop
add
adc
push
in
es
outsl
dec
sub
arpl
sbb
mov
mov
mov
adc
adc
les
imul
in
cwtl
pop
jmp
in
mov
push
xchg
sub
shl
or
push
mov
roll
aaa
pusha
sub
fcomp
push
mov
jne
xchg
push
xchg
or
mov
inc
cmp
dec
mov
insb
test
popf
push
je
lret
mov
stos
stc
pusha
xchg
loope
sarl
mov
cmp
push
test
nop
push
cs
lret
and
mov
adc
push
sub
inc
enter
push
les
adc
xor
mov
in
or
mov
call
mov
jmp
mov
fldenv
push
pop
mov
xchg
hlt
push
test
push
mov
and
xchg
pop
stc
cmp
iret
mov
in
sub
test
cmp
mov
sub
jne
pop
cltd
inc
or
pushl
test
adc
mov
and
pop
adc
xchg
pusha
mov
outsb
mov
lret
jno
or
loopne
xchg
rolb
lea
pushf
les
fs
xor
scas
push
lock
sarb
shl
sbbb
aam
pop
xchg
fneni(8087
out
xchg
jno
mov
xor
mov
fs
in
std
inc
dec
hlt
aad
daa
in
inc
ss
loope
xchg
call
xchg
int3
je
loope
xchg
or
jae
jno
sbb
inc
sti
jae
sbb
add
sub
cmp
xor
fs
add
or
add
add
les
jge
ja
cmpl
mov
je
mov
call
gs
hlt
jmp
inc
adc
mov
xchg
lods
pop
add
push
mov
xchg
popf
add
test
dec
je
les
out
in
es
mov
mov
pop
jno
mov
add
mov
stos
div
mov
fisubrs
enter
jbe
inc
test
pop
enter
loopne
xor
loopne
into
push
sbb
adc
mov
aaa
add
add
inc
xchg
add
clc
push
push
lret
adcl
sbb
push
into
mov
gs
push
hlt
imul
js
and
add
inc
scas
mov
jae
jns
push
mov
ja
mov
cmc
test
clc
or
xchg
icebp
imul
inc
ret
mov
pop
jno
mov
mov
xchg
cld
jge
jge
fbstp
iret
pop
push
push
push
movsb
into
pusha
sub
sbb
sbb
dec
and
xor
push
ret
in
mov
lods
sbb
fcoml
sbb
sbb
cmpsb
add
mov
sbbb
and
jle
mov
xor
inc
cmp
lock
or
jl
mov
ljmp
subl
adcl
mov
mov
xor
or
mov
sbb
shrb
mov
push
cmp
mov
inc
or
rcr
ret
push
call
pop
add
push
pop
cltd
mov
rol
push
inc
mov
push
sub
jmp
dec
lea
or
mov
mov
inc
dec
jmp
andb
adc
jne
cli
iret
or
adcl
ret
add
je
dec
and
loope
and
push
mov
mov
mov
mov
je
push
mov
inc
mov
inc
loopne
hlt
clc
cld
mov
bound
adc
push
out
push
cmp
call
xor
mov
and
decl
sahf
mov
testl
pop
jge
adc
arpl
call
test
lock
mov
in
in
cltd
clc
cld
mov
pop
sbbb
cli
pop
test
mov
movsb
jp
dec
lods
sbb
iret
mov
lds
push
pop
ljmp
in
call
clc
les
dec
xor
mov
xor
jo
lret
push
shrb
mov
mov
sbb
or
pusha
pop
add
push
jb
adc
dec
or
xchg
xchg
push
in
sub
popf
in
xchg
cltd
cmp
cmp
xchg
fwait
mov
scas
pop
test
and
push
mov
hlt
rcrb
int
movb
adc
mov
dec
jecxz
jb
scas
pop
and
jno
mov
push
push
sti
insl
mov
dec
xchg
xchg
jne
jmp
or
inc
popa
sub
movl
inc
push
mov
xlat
rcl
pop
mov
lcall
sub
sub
pusha
pop
push
je
jne
js
mov
or
pushf
add
std
js
cltd
fs
ss
add
sahf
aam
cmpsl
push
shr
jne
add
pop
xchg
sbb
inc
into
call
cltd
add
and
bound
push
fldenv
and
cmp
loop
add
in
je
mov
ljmp
mov
jbe
dec
rclb
mov
lds
sbb
mov
or
mov
fisttpll
sub
mov
imul
jae
adc
adc
and
inc
into
in
pop
ror
inc
je,pn
dec
adc
sbb
push
sbb
mov
daa
mov
or
mov
mov
push
pop
push
call
ja
sub
in
sbb
cltd
push
adc
jmp
clc
mov
lods
adc
mov
dec
push
ficoms
ds
mov
mov
push
rorl
pushf
add
out
and
sbbl
mov
and
xor
xchg
lods
push
or
ret
push
movsb
jae
mov
pop
arpl
xchg
inc
lods
or
mov
cmp
shl
jo
push
mov
mov
push
inc
push
call
push
or
inc
nop
adc
in
fdiv
sarl
xor
xchg
push
imul
inc
nop
mov
push
push
fcmovnbe
xor
sarl
adc
jb
push
mov
sub
push
daa
add
cmpsb
xchg
cmpsb
jne
mov
xor
mov
adc
test
push
inc
int3
xchg
cmpsb
push
sbb
jns
xchg
sbb
js
mov
push
aad
xor
mov
mov
jo
xchg
int
pusha
ret
adc
daa
sbb
xor
shrb
dec
push
dec
into
popf
or
and
test
loopne
je
in
and
add
lea
push
push
push
mov
hlt
sub
or
sub
cmpsb
push
fisubl
je
mov
inc
push
push
out
bound
or
fs
add
inc
pop
je
sub
in
mov
sbb
cs
jmp
push
xor
pop
jle
shr
sbb
fucomp
bound
or
adc
cmpw
jne
add
sbb
adc
pushl
daa
sbb
sbb
inc
andl
div
and
xchg
adc
push
mov
jne
test
ss
sub
mov
adc
lret
sbb
movsb
jbe
xor
mov
xor
pop
mov
xor
add
jl
and
jbe
pushw
mov
adc
cmp
loopne
jbe
pop
inc
sbb
lods
sub
inc
arpl
faddl
ret
mov
ss
rolb
repz
add
sbb
push
fs
cwtl
repz
lock
ret
push
arpl
adc
jne
xor
push
adcb
test
mov
mov
mov
in
js
jl
inc
faddl
mov
out
adc
lock
jg
mov
pop
roll
and
xchg
xor
sub
inc
pop
cmp
mov
and
cmp
jne
xor
inc
aad
dec
push
cmpl
clc
shlb
dec
es
push
flds
inc
addb
out
cmp
mov
je
cmp
dec
adc
hlt
inc
add
xchg
rcrb
jae
jmp
outsb
int3
call
rcr
sbb
test
fcompl
mov
sub
add
push
or
call
jmp
mov
aas
add
cmpsb
lcall
sbb
adc
cmp
jp
xchg
mov
lods
je
add
jb
and
pop
mov
pop
aad
lds
hlt
enter
pop
jmp
adc
mov
pop
dec
or
stos
jl
movsb
or
mov
fdivs
xor
push
je
mov
add
jns
in
dec
cld
and
cmp
jne
pop
push
inc
mov
push
xlat
subl
adc
andl
push
es
cltd
roll
xchg
dec
mov
clc
ss
cmp
xchg
adc
add
cmp
bound
in
push
mov
add
iret
inc
lds
xor
mov
mov
jno
cmp
je
inc
inc
inc
cmpb
adc
sub
icebp
xchg
pop
jmp
loope
or
push
lea
or
lds
ret
gs
mov
push
jmp
jo
or
leave
push
pushl
xchg
xor
stc
mov
ficomps
mov
mov
in
jle
lea
lahf
hlt
pop
sbb
fwait
xor
daa
dec
mov
sahf
ljmp
hlt
inc
in
push
mov
fnstsw
incl
cmpsl
enter
pop
mov
hlt
lods
xchg
out
add
scas
add
in
jo
xchg
das
jbe
adc
mov
mov
add
adc
mov
jns
jo
and
cmpb
jbe
imul
inc
pushl
jb
sbb
pop
dec
cmp
dec
je
gs
sbb
sbb
sbb
addl
fnstcw
in
fnstenv
mov
jno
mov
sub
test
test
push
adc
xchg
jmp
sar
or
idivl
ret
ret
pop
ret
mov
jmp
mov
sti
mov
dec
push
je
dec
les
mov
xor
push
ds
pusha
xchg
mov
and
or
add
ficoml
adcb
ret
pop
adc
add
sbb
mov
pop
push
inc
rcll
jmp
inc
push
lcall
xchg
inc
dec
addr16
jbe
aaa
push
pop
movsl
mov
or
fists
dec
mov
or
cld
test
or
jge
stos
inc
fmuls
jne
push
sub
push
je
pusha
insb
jo
add
push
mov
mov
cmpl
popf
out
lcall
divb
adc
insl
mov
mov
mov
insl
insb
pop
adc
mov
mov
mov
mov
stos
jno
xor
pop
fsubr
mov
mov
enter
and
aad
xchg
fwait
cld
dec
jno
pop
adc
ret
pop
cld
cmp
sub
mov
nop
adc
loope
mov
push
mov
lcall
inc
movsb
test
inc
xchg
call
and
cmp
lods
push
push
pop
xchg
enter
and
jge
jae
adc
mov
mov
mov
fs
mov
outsb
repz
pop
lea
dec
outsb
aas
test
mov
xchg
push
mov
xlat
add
jge
xchg
push
cmp
sbb
sub
imul
fldl
jecxz
mov
lcall
mov
push
mov
les
aam
pop
add
mov
jbe
lea
push
or
add
add
cmp
jb
sub
adcb
test
add
incl
cmp
xchg
inc
lods
je
cmpsb
mov
lods
add
cltd
fcmovne
jg
mov
cmp
jbe
mov
cmp
je
adc
or
lret
jmp
dec
jae
lea
add
push
add
mov
mov
jbe
jb
mov
adc
mov
movl
push
shr
inc
mov
push
or
xor
bts
unpcklps
in
or
aad
add
push
or
and
push
dec
pop
pop
push
mov
insb
jo
mov
incl
mov
sbb
xchg
and
movsl
test
adc
rorl
test
lock
push
mov
addr16
lret
movsb
pusha
inc
into
sub
in
jae
mov
outsl
rolb
lret
lea
ret
adc
loopne
xor
fstpt
jns
pop
jg
ja
or
scas
in
fnstenv
and
inc
or
push
xchg
and
xor
lret
lods
inc
mov
clc
add
sbb
ja
jns
xchg
cmp
add
rclb
push
push
xchg
inc
jb
inc
pause
sbb
push
and
testl
xor
jne
push
pushl
mov
mov
cmp
jge
jmp
sub
or
sti
pushf
fisubrs
add
jne
sbb
dec
cmc
shll
mov
mov
enter
movsb
mov
fs
or
xor
mov
pusha
imul
ljmp
push
mov
and
insb
pop
add
nop
or
rclb
repnz
or
mov
xor
xchg
adc
lret
pop
dec
pop
int3
adc
cwtl
cmp
movsb
cmp
mov
mov
movsl
xor
cli
inc
ss
hlt
loope
adc
sti
jp
or
pusha
testb
jne
push
test
cltd
and
pop
xchg
jp
push
sub
xlat
push
push
mov
jg
pop
sub
sub
pop
fsub
loop
pop
pop
jle
test
sub
movhps
in
adc
cmp
mov
lods
inc
cs
fdivl
enter
fsubl
or
movsb
push
adc
push
pop
lret
add
and
addb
add
subb
fmull
aam
cld
cmp
fistpl
into
fldenv
fs
scas
cmp
ljmp
cld
sub
shlb
repz
test
leave
ds
or
jns
gs
sbb
fsts
lock
add
sti
jns
fdivs
push
enter
push
inc
loope
jne
mov
aaa
sbb
pusha
mov
xchg
and
leave
test
jbe
dec
sub
or
fwait
int3
lret
frstor
or
cmp
outsb
outsb
mov
inc
data16
cmp
xchg
or
push
mov
adc
push
push
push
into
addr16
push
xchg
aad
sub
or
bound
es
xchg
cld
xor
insb
xor
fcoms
adc
popf
or
xchg
mov
repnz
shrl
in
insl
dec
imul
insb
in
push
xor
jp
xorl
add
cmp
mov
xchg
sbb
mov
push
popf
jo
fstps
clc
add
add
js
sub
adc
js
lea
xchg
pop
mov
xchg
dec
dec
lahf
lret
or
adc
pop
adc
push
mov
adc
sbb
mov
inc
jb
inc
jmp
bound
push
sbb
int3
out
icebp
jmp
sti
lds
jmp
int
mov
inc
dec
push
pop
mov
nop
inc
jle
int3
cmp
pop
jae
xchg
repnz
sub
sub
clc
push
lods
xor
enter
inc
pop
mov
cmc
lret
imul
lods
push
es
dec
ret
mov
fsubs
repz
adc
adc
in
test
mov
or
push
inc
icebp
xor
mov
jno
int
jae
fildl
subb
push
lods
sbb
pop
sbb
or
mov
jge
mov
insl
sbb
movl
pop
mov
push
cmp
lods
stc
sub
jbe
or
cwtl
cmp
push
nop
adc
movsl
rolb
inc
push
jbe
bound
pusha
test
sbb
push
test
cmpl
mov
dec
sbb
cmp
scas
mov
mov
mov
shlb
push
inc
mov
push
add
dec
in
xor
jge
jmp
jbe
cmc
jmp
xchg
lods
in
push
jb
mov
lret
adc
push
push
dec
call
sar
inc
les
pop
lahf
mov
fimull
lock
dec
cld
or
arpl
inc
imul
movb
jp
stos
sub
pusha
pop
std
push
in
push
pushf
popa
jbe
leave
xchg
cld
or
jnp
add
adc
cmpb
jne
cmc
enter
xor
divb
jne
inc
movb
inc
sub
test
ficoml
sbb
cmp
call
mov
xor
and
sbb
sbb
or
fs
fstl
int3
mov
rcr
push
dec
mov
adc
adc
cmc
movsl
dec
or
jg
mov
inc
sbb
add
lret
inc
ret
and
adcb
je
adc
push
arpl
aas
fbstp
fldt
dec
scas
scas
dec
mov
fadd
mov
orl
and
pop
inc
inc
fstps
imul
add
pop
fnstcw
movsb
sbb
sbbb
push
jns
pop
dec
push
aaa
gs
mov
mov
mov
jo
push
push
dec
mov
mov
or
mov
cmc
enter
sbb
ja
sub
aam
in
sbb
add
adc
and
and
push
mov
cmp
lods
and
pop
arpl
nop
xchg
add
fldt
pop
cld
shl
ret
or
mov
adc
pop
and
cmp
je
push
test
cmp
lea
in
mov
aam
adc
fxch
cmc
add
mov
and
jmp
cmp
sahf
pop
xor
out
push
inc
inc
push
jne
hlt
mov
push
push
push
and
add
sub
mov
lds
sub
xor
push
je
sub
popf
xchg
add
pop
mov
call
and
cmp
add
hlt
inc
push
or
sahf
lods
cwtl
pushf
jnp
aad
or
dec
jl
out
mov
mov
push
lea
push
push
pop
xchg
sbb
lret
cwtl
xchg
and
mov
push
sub
call
test
lea
fcom
in
call
add
cmp
mov
subb
jbe
or
dec
repnz
leave
dec
push
push
call
out
ljmp
and
shll
orl
sbb
push
cmp
jo
push
xor
loopne
aam
and
jl
cmp
adc
cmpsb
jns
loope
xor
sbb
jl
mov
and
push
adc
adc
mov
sub
push
pop
jbe
push
lea
jge
outsl
scas
mov
push
dec
aaa
xor
push
xor
mov
or
jge
je
mov
cld
pop
or
xor
inc
insb
xchg
inc
inc
loop
fcmovbe
mov
inc
cmc
shl
pop
jne
clc
jge
jle
sbb
jle
jle
call
jge
mov
pop
enter
jmp
divb
push
mov
iret
mov
push
or
fisubrs
inc
adc
test
cld
xor
ret
xor
pop
pop
push
mov
xchg
jle
mov
jo
xor
das
cmp
or
and
stos
movsl
dec
aad
cltd
xchg
jbe
adc
xor
add
enter
test
ror
rclb
mov
repnz
andb
dec
icebp
push
push
je
test
or
insb
push
cld
sti
daa
push
shl
cmp
and
push
neg
imul
sub
mov
jae
push
mov
add
sahf
popa
shlb
mov
pusha
nop
dec
sub
push
cltd
lods
adc
push
out
or
sub
push
nop
dec
push
in
pop
jne
ds
dec
push
aas
xor
inc
ljmp
jbe
dec
pusha
xchg
orb
call
inc
push
loop
adc
sbb
out
or
imul
xchg
sbb
lock
inc
dec
in
in
insl
lock
jl
lods
sub
jae
xchg
push
xchg
xchg
mov
out
inc
mov
mov
fistps
sbbb
mov
sarb
mov
mov
shrb
push
adc
inc
inc
xor
pop
mov
aaa
movsl
fnstcw
cmp
jne
mov
jne
inc
cld
mov
ficoms
cld
movsb
or
lds
sub
insl
cs
inc
inc
subb
pop
push
lea
or
push
adc
jl
loope
pop
in
jmp
ret
xchg
and
pop
enter
push
jne,pn
pushf
sbb
notb
cmp
in
inc
and
push
dec
dec
sbb
insl
sub
xor
test
jge
jb
mov
sub
add
aaa
cmp
ja
out
movb
inc
lods
iret
add
aam
mov
xor
sub
mov
js
je
fdivs
jecxz
add
lret
xor
shll
sbb
mov
mov
insb
cli
aas
idiv
mov
mov
push
mov
mov
lret
xchg
inc
adc
jae
dec
bound
jnp
dec
mov
push
aas
xor
xor
xor
or
push
dec
pop
push
lahf
les
sbb
lea
xor
xor
std
pop
scas
jp
jb
mov
test
mov
divl
jb
fsubs
cwtl
inc
enter
sbb
inc
int3
dec
cmp
push
aam
mov
fs
jns
sub
push
push
arpl
push
push
cmp
dec
lret
pop
and
les
xor
subl
push
cwtl
scas
nop
imul
add
ficoms
mov
lea
inc
aam
mov
dec
loop
sbb
mov
add
mov
xchg
sub
mov
inc
mov
cmp
sbb
les
mov
lahf
cmpsl
jb
and
push
cmp
push
pop
aam
inc
jbe
nop
leave
arpl
enter
iret
xor
or
push
cld
dec
test
inc
shlb
in
daa
les
sahf
adc
mov
xchg
pop
dec
and
ja
inc
insb
hlt
test
inc
int
push
dec
iret
mov
pop
inc
xor
adc
adc
mov
les
push
inc
or
fs
mov
sbb
mov
or
cli
sub
daa
add
adc
cmp
jo
in
push
push
push
stc
mov
mov
push
mov
dec
xchg
push
insl
shr
jno
out
or
mov
repnz
aaa
rorb
jnp
cmp
and
test
xor
leave
aam
and
pop
lret
inc
in
xor
sub
stos
enter
orb
mov
imul
add
and
mov
adc
jg
inc
xor
fmull
movsb
jno
adc
jno
mov
sub
and
and
shl
push
add
pop
sub
div
stos
and
adc
add
mov
insb
pop
and
push
mov
loop
cmp
cmp
je
es
xchg
stos
xor
aas
cmp
mov
rcrl
and
daa
pusha
push
dec
add
cld
push
sub
or
ret
push
mov
and
les
dec
xchg
lea
dec
mov
add
mov
jae
loopne
pushf
xchg
test
je
push
mov
inc
sub
jl
sbb
pop
jge
dec
aam
adc
test
daa
push
movsl
or
add
je
push
ljmp
mov
sbb
add
dec
sbb
xor
jb
mov
adc
andb
ret
jmp
and
xor
add
jmp
or
mov
fwait
cmp
lret
pop
jns
inc
sub
iret
incb
je
add
jo
lar
jne
fucom
cmp
push
nop
popa
into
adc
movb
adc
jl
mov
test
cmp
and
inc
push
push
sub
or
sub
push
inc
dec
call
add
and
js
push
push
hlt
push
int3
imul
lock
addr16
addr16
enter
gs
loopne
lock
mov
cwtl
lahf
shlb
xchg
cmp
mov
sbb
icebp
je
aam
inc
bnd
je
shlb
je
xor
mov
mov
add
or
inc
mov
add
popf
push
cmp
movl
cs
inc
mov
gs
rorl
jmp
mov
dec
dec
and
ret
test
dec
hlt
aaa
sbb
fisubrs
cmp
aaa
mov
mov
xchg
and
jl
jo
xchg
sbb
cmp
cmp
cmp
shlb
inc
aad
sbb
hlt
outsb
orb
fwait
aaa
cld
jmp
jnp
shrb
outsb
or
aaa
pushf
addl
mov
inc
int3
fldcw
and
mov
je
out
sbb
test
popa
and
jmp
push
ljmp
pop
cmp
addr16
and
inc
xchg
inc
mov
mov
push
insl
je
js
cmp
pop
mov
out
and
hlt
sarl
outsl
fsubs
test
mov
popf
fwait
call
dec
repz
fdivs
jecxz
call
arpl
rorb
icebp
mov
sub
in
in
fcom
xchg
inc
nop
mov
les
mov
cmp
and
nop
xchg
aaa
or
pop
mov
out
pop
cmp
cmp
enter
xchg
aaa
ret
es
cwtl
adc
mov
mov
xchg
sbb
fwait
and
loopne
call
sbb
cwtl
or
pop
cwtl
inc
ret
dec
mov
inc
sbb
cmp
ret
xor
xchg
pushf
in
sub
and
add
inc
mov
je
js
movsl
add
lea
dec
sub
inc
push
in
xchg
dec
enter
mov
fs
addr16
jo
js
xor
out
stc
mov
jecxz
js
scas
call
lea
fcomps
shlb
mov
icebp
les
and
xor
aam
out
arpl
call
stos
jbe
jbe
lock
clc
jl
cwtl
pop
mov
out
jbe
fs
sub
into
mov
xchg
repz
dec
pop
fs
mov
jmp
jmp
lock
adc
lods
jbe
sub
add
stc
add
mov
xchg
shll
das
cmp
xor
push
jbe
sub
leave
add
in
insb
pop
js
pop
movsl
in
in
in
in
adc
mov
int3
orl
jns
jno
or
je
jno
hlt
int3
je
test
inc
rcrl
push
mov
stc
stc
adc
inc
stc
in
or
test
jecxz
mov
mov
add
mov
fisubrs
xor
cmp
mov
sbb
loopne
mov
fcoms
xchg
call
inc
das
mov
inc
adc
xor
sub
cmp
jle
lods
adc
sti
jno
dec
call
shll
push
push
bound
cwtl
pop
xorb
outsl
inc
xchg
mov
mov
outsl
and
je
loope
ret
fstpt
mov
mov
inc
ffree
test
mov
rcrb
add
arpl
test
aam
cmp
sbb
push
xchg
popa
outsl
sbb
nop
cwtl
call
nop
mov
push
je
and
movsb
jbe
cmp
push
inc
sub
inc
pop
mov
cmc
repz
pusha
or
xchg
movsb
push
mov
or
sub
or
pop
nop
mov
fwait
mov
jp
push
dec
mov
aam
leave
inc
popf
rcrb
mov
sbb
sbb
fcom
pop
fyl2xp1
rcll
in
js
je,pt
add
cmp
cmp
daa
aas
es
test
jecxz
in
xor
cmp
dec
xchg
je
or
xchg
dec
inc
in
call
pop
jl
push
xchg
or
mov
pop
pushf
xchg
xchg
lods
std
fs
addr16
mov
out
sarb
xchg
lret
call
movl
adc
int3
fsubl
sub
add
cmp
mov
pop
pop
cmp
push
rcll
loopne
inc
or
xor
or
adc
xor
es
pushf
ss
jno
stos
and
pushf
sub
cmp
stos
mov
aas
stos
test
pusha
mov
aas
stos
mov
js
cmp
stos
mov
aas
stos
rol
mov
aas
stos
enter
cmp
stos
rcl
loopne
cmp
stos
fcomp
clc
xchg
aas
stos
loopne
adc
sbb
in
ja
out
lock
out
cld
cld
cmovs
mov
xchg
jl
ret
cmp
sub
mov
adc
pop
mov
notb
mov
movsl
jno
dec
pop
xchg
lcall
pushf
sbb
add
icebp
and
ja
aas
sbb
inc
lret
pusha
cli
mov
and
leave
lea
and
jo
inc
adc
lcall
scas
mov
aaa
xlat
inc
fiadds
pusha
cltd
pop
cmp
cmpsl
or
push
je
mov
add
mov
jne
xor
jmp
pop
mov
mov
repnz
fdivs
cmp
jne
mov
out
lock
add
les
pop
lea
mov
sahf
enter
xor
std
add
mov
inc
mov
mov
inc
inc
ret
xchg
cmp
jl
push
pushf
cli
or
mov
outsb
clc
shl
cld
aas
adc
push
fcompl
push
push
insl
lea
incl
shl
ret
and
inc
fnstsw
lock
add
push
arpl
cmp
jns
dec
mov
cmp
pop
push
sbb
push
cmp
cmp
xchg
inc
or
enter
fidivrl
ret
sbb
subl
adcb
sbb
sbb
fcoms
mull
lcall
push
out
fstpl
jnp
pop
jge
rorb
sub
out
insl
cmp
addr16
xor
movsl
sbb
in
mov
imul
jbe
push
mov
cmp
xchg
roll
jecxz
push
cmp
lock
cld
ds
ja
out
ja
in
es
and
push
sub
shrb
push
cmp
pop
rorl
mov
mov
add
xchg
push
iret
or
cs
and
add
cmpsl
mov
orl
call
stos
jno
fidivs
icebp
mov
pop
cltd
xchg
test
stos
push
addr16
loope
mov
test
sbb
push
dec
cmp
cmp
nop
enter
xchg
push
fists
jo
push
and
in
add
sub
roll
or
xor
inc
sub
bound
js
lods
mov
fstpt
pushf
sub
and
loopne
mov
or
daa
repnz
repnz
cwtl
subl
bound
push
add
enter
xchg
sbb
mov
or
mov
add
cmp
pushl
sbb
into
mov
out
lret
aas
cmp
lahf
in
mov
cltd
xchg
push
nop
sbbl
xchg
int
push
cmp
jp
cmp
icebp
inc
test
inc
addr16
cmp
fisubrs
push
test
add
inc
icebp
sub
aaa
pusha
je
fnsave
jmp
jecxz
into
clc
push
xlat
insl
test
and
dec
fsubrp
out
and
je
pop
sbb
pop
jge
fs
pop
mov
test
xor
cmp
push
jp
mov
add
adc
in
mov
sbb
push
jmp
cmp
lret
pop
adc
incl
add
call
cmpsb
or
xorb
sub
cltd
dec
pop
inc
adc
push
xorb
into
add
xchg
mov
fcoml
jmp
or
add
inc
mov
and
and
or
sub
cltd
mov
mov
push
cmp
inc
pop
aas
pop
mov
fs
mov
inc
sti
sti
sub
xor
push
cli
cli
push
adc
adc
push
add
shlb
je
das
xchg
arpl
je
ja
ret
pop
cmp
sub
inc
xchg
call
aam
call
pop
sub
rcrl
addb
push
sub
sbb
hlt
loopne
lock
jecxz
mov
mov
cli
inc
mov
imul
mov
ds
cmpsb
movsb
ljmp
ljmp
cwtl
jb
out
shlb
jo
pop
pop
cltd
push
sbb
push
bound
inc
fcomp
or
in
xchg
lret
xchg
cmp
hlt
or
stc
adc
pop
inc
xor
xchg
popa
je
push
rcrb
sbb
invd
cmc
dec
gs
mov
fdivrp
mov
and
int3
popa
pop
sub
mov
hlt
push
pop
push
mov
xor
push
pop
jnp
add
add
ds
stc
pop
xor
cmp
ret
daa
and
lock
pop
cmp
icebp
int3
mov
adc
loopne
in
loop
loope
or
pusha
movsb
dec
mov
ret
cmc
dec
add
mov
xlat
das
lds
in
jecxz
pavgb
pop
mov
in
mov
pop
mov
sbb
test
repnz
sub
rol
or
xorl
leave
push
pop
ds
scas
and
push
js
in
inc
movsl
sub
mov
mov
jp
pushf
mov
xor
enter
std
nop
mov
insl
inc
sbb
outsl
test
dec
xchg
adc
cld
leave
mov
mov
dec
mov
out
movsb
lret
jg
cmp
bound
xor
jbe
push
jbe
popf
pop
dec
inc
pushf
lods
push
insb
cld
pop
addb
xchg
mov
inc
push
sarb
je
cmp
je
mov
insb
push
out
jmp
inc
sbb
test
je
push
mov
fcmovb
and
cli
adc
push
imul
sub
and
sbb
xchg
int
dec
pop
mov
or
lcall
fildl
test
loopne
dec
jmp
rorl
loop
and
cmp
xor
xor
and
rcrl
add
jmp
nop
into
test
jle
mov
cmp
je
sub
jne
xor
inc
cmp
jl
xor
push
pop
inc
leave
sub
test
sbb
adc
cmp
jge
mov
inc
add
inc
cmp
jl
add
xor
pop
je
xor
lret
dec
data16
adc
mov
sarl
in
sbb
jl
push
mov
adc
inc
lds
mov
in
pop
inc
mov
mov
dec
jmp
in
icebp
popf
outsl
adc
test
xchg
cmp
pop
jl
cmp
jg
inc
xchg
sbb
rolb
mov
add
xor
xlat
sbb
movsl
mov
out
adc
mov
inc
enter
jle
cld
lds
add
pushf
or
inc
xor
pop
or
mov
mov
sub
aad
or
jle
mov
add
icebp
xor
or
lea
sub
iret
int3
add
mov
sbb
mov
mov
dec
jmp
dec
push
daa
call
icebp
and
xchg
push
xchg
add
shll
push
loop
adc
ret
inc
mov
cmp
jg
inc
sub
add
pop
ret
lea
and
je
and
adc
mov
roll
cmpsb
outsb
dec
pop
and
push
adc
mov
je
shr
xor
icebp
inc
or
lock
ret
add
pop
dec
adc
xchg
pusha
dec
lds
negl
test
fsubr
cmp
je
xor
jne
push
popa
push
add
mov
cwtl
cmp
fs
repz
aas
push
and
test
ja
pushf
leave
test
add
movsb
ret
push
mov
push
mov
mov
xor
adc
mov
insb
xchg
mov
jae
subb
dec
out
push
push
xor
jle
stos
cmpsl
inc
dec
sbb
lret
pop
clc
dec
dec
jl
mov
test
sbb
add
xchg
jge
push
xlat
mov
push
inc
push
lods
shll
or
fcoml
shlb
fdivl
movl
or
js
lods
js
or
cmpsl
jno
inc
and
sub
in
sbb
lods
imul
or
or
and
inc
xchg
addr16
fstl
push
repz
and
add
enter
mov
fbld
xor
addr16
hlt
dec
mov
push
in
incl
pushf
clc
inc
and
dec
jecxz
popf
cmpsb
sahf
inc
add
mov
and
je
mov
pop
mov
or
fidivs
mov
push
ss
arpl
jl
mov
test
mov
pushf
fldcw
mov
movsb
push
sub
push
xor
fwait
inc
aam
sub
fmuls
dec
pop
out
lahf
movsb
cmpsl
in
scas
jo
shrl
mov
insb
sub
push
cmp
fsts
add
repz
jbe
add
test
mov
xor
rol
loopne
out
mov
test
jo
inc
dec
in
or
ljmp
mov
xor
jmp
ret
out
movsb
insb
adc
orb
add
mov
test
jns
lea
mov
mov
les
scas
loop
fsubr
jne
jo
xchg
incl
lea
cmp
cmp
leave
movsb
push
sub
adc
test
add
sub
jle
push
jg
rolb
mov
jle
jmp
roll
push
adc
lret
gs
dec
mov
in
xchg
dec
aam
stos
mov
push
pop
xchg
ja
jbe
add
dec
orb
sub
adc
inc
cmp
and
push
je
and
test
shlb
inc
inc
push
ljmp
jle
inc
sbb
mov
mov
lock
je
dec
adc
sbb
dec
cmp
shll
pushf
lods
xor
push
jge
pusha
jbe
cmp
outsl
push
js
push
je
lea
cmp
movzbl
mov
or
pop
mov
push
stos
xor
stos
sub
mov
push
inc
sbb
je
pop
cmp
or
call
push
push
lods
stc
mov
mov
daa
sub
mov
xchg
loope
cld
mov
cmp
mov
adc
shl
add
add
add
or
push
pop
or
add
ja
add
cmp
popf
mov
pop
bound
xchg
inc
hlt
cld
mov
int
push
mov
andl
or
pop
mov
xor
adc
fadds
dec
ret
xor
mov
mov
mov
cmp
loope
cmp
and
sbb
pop
push
fdivs
mov
iret
mov
lods
mov
inc
xchg
add
pushl
push
or
sub
addr16
loopne
sub
and
mov
orb
data16
into
test
adc
hlt
lock
in
cmp
inc
push
xchg
and
mov
add
or
xchg
pop
fldenv
and
les
dec
dec
cmpl
add
dec
push
jae
lret
xor
push
outsl
inc
daa
add
xor
pop
outsb
jo
add
sbb
push
pop
and
int3
out
mov
mov
shl
and
lods
and
insl
fidivs
inc
dec
jmp
fadd
cmpsb
dec
dec
dec
loope
or
shll
push
push
adc
orb
mov
cmpsb
call
add
les
push
orb
dec
push
inc
mov
or
jnp
pushl
mov
pop
pop
pop
push
js
inc
and
push
leave
jmp
iret
push
and
fsubs
jg
lds
lock
ss
rcrb
in
add
cmpsl
in
lds
bound
mov
sbb
insb
rorb
mov
add
push
or
mov
xchg
add
lea
xchg
sub
dec
lds
xchg
inc
xlat
sbb
test
push
dec
sub
sub
adc
push
dec
inc
or
pop
mov
push
rcll
scas
jb
pop
push
sbb
enter
cld
push
cmp
test
cmp
sahf
cmp
cmp
je
dec
aam
xor
sub
scas
imul
add
pop
inc
js
and
insl
pop
adc
pop
mov
or
adc
xchg
push
arpl
test
push
xor
rolb
pop
clc
popa
in
stc
imul
sbb
sub
out
ljmp
lods
push
push
mov
push
cmp
xchg
rolb
ret
sub
je
pop
orl
fdivs
shll
call
mov
popa
test
jmp
pop
mov
push
and
in
int3
push
lahf
sub
jo
enter
int3
jae
mov
pop
icebp
outsb
loopne
cli
movl
pop
mov
in
test
call
or
sbb
push
in
push
mov
pop
pop
sub
push
dec
cld
push
fcoml
scas
int3
mov
pusha
inc
xorb
cltd
push
aas
movsb
mov
movsl
shll
xchg
test
call
push
add
in
or
or
sub
pop
xor
mov
adc
adc
outsl
xchg
push
dec
xchg
into
loope
stc
pushl
inc
adc
popf
mov
mov
push
repnz
std
add
pop
subl
mov
inc
add
scas
mov
mov
mov
arpl
icebp
leave
mov
cld
cld
adc
lahf
stc
jno
mov
xchg
rcrb
push
out
jg
sub
cld
clc
pop
xor
and
stc
pop
jne
sub
pop
popf
lahf
xor
cmp
out
jg
cmp
lahf
pop
dec
addb
out
aad
test
xchg
xchg
mov
lods
repnz
fdivp
mov
mov
inc
stos
hlt
inc
push
das
sbb
sbb
arpl
ss
mov
mov
lahf
mov
clc
and
hlt
mov
push
lahf
out
adc
addl
je
cmp
out
rcrb
call
mov
or
loope
mov
cmp
addl
fistpl
addr16
jbe
je
repz
loop
sub
or
or
test
cmp
add
push
sbb
jbe
cwtl
je
push
cmpb
mov
xor
pop
in
and
aad
iret
scas
push
clc
push
mov
test
les
mov
mov
cmp
ja
je
addl
addl
mov
je
push
movb
aam
ret
leave
mov
mov
cmp
push
fdivs
test
jecxz
add
sub
lods
popa
add
jne
push
push
jne
push
jl
xchg
add
ja
mov
dec
test
pusha
ja
je
sub
sbb
popa
adc
and
lcall
mov
push
cmp
inc
in
xorb
lret
push
dec
adc
call
es
lock
sbb
mov
jecxz
cmp
or
in
mov
mov
imul
lret
pop
cmpsl
lret
push
add
inc
push
aam
xor
xchg
pop
or
imul
clc
push
cld
pushf
js
faddp
jns
cld
es
in
sub
es
shrl
push
mov
lods
pop
adc
fs
jmp
mov
test
mov
rcrl
push
cld
push
inc
out
in
hlt
je
inc
ss
insl
sbb
imul
or
sbb
mov
shll
push
adc
push
lret
sub
mov
inc
lods
addr16
sub
and
pop
rcl
and
sbb
xor
xor
andl
cmp
out
movd
cmp
xadd
sbb
or
test
mov
jns
int3
into
jb
sbb
mov
and
and
je
mov
clc
jecxz
or
call
mov
sub
pop
imul
push
ret
mov
dec
sbb
out
or
sub
push
mov
inc
cmp
andb
and
js
andl
jmp
shll
cmpsb
sbb
stos
ss
cwtl
fninit
mov
sbb
jmp
popa
sub
movsl
sbb
movsb
push
add
orb
pushf
jae
lahf
test
xchg
fsubl
mov
jl
jo
clc
int3
cmp
push
lea
jnp
add
inc
add
cmp
test
jp
rclb
inc
ret
mov
mov
out
mov
lea
cwtl
dec
push
movzbl
push
mov
leave
repnz
icebp
sbb
mov
mov
scas
mov
les
add
mov
push
roll
push
imul
neg
lea
movzwl
add
inc
inc
cltd
adc
dec
jne
pop
jmp
or
sub
lods
and
add
and
adc
enter
or
not
ret
inc
push
push
or
xchg
sbb
jle
add
or
movl
jne
mov
mov
cli
add
mov
stc
imul
add
jle
je
dec
mov
pop
mov
inc
inc
pop
mov
and
test
lock
mov
inc
mov
lds
adc
mov
push
inc
rol
cld
push
int
fadds
push
dec
and
outsb
adc
xchg
aas
out
rorb
sub
mov
jmp
outsb
xchg
push
push
add
pop
orl
mov
aad
into
mov
push
cmp
jge
dec
mov
sarb
inc
bound
lock
decb
test
mulb
jne
mov
mov
dec
inc
jae
ljmp
adc
xchg
jle
lret
int3
jns
xor
shrl
sub
push
xchg
fwait
sbb
push
neg
mov
adc
or
je
and
icebp
mov
cmp
lahf
pushf
sub
xchg
jecxz
in
mov
int3
loopne
aad
inc
cld
push
aad
lcall
les
outsb
xor
and
repnz
push
pop
xchg
inc
sub
imul
mov
ret
sbb
sbb
shlb
lahf
inc
sub
lea
xchg
xor
cmp
dec
rorb
add
push
pop
fdivrl
add
aam
ret
push
push
xor
sbb
stos
fcomps
fisttpll
jne
mov
fbstp
aam
mov
push
sub
sub
inc
push
les
mov
mov
and
xor
xchg
fcmove
xchg
or
loop
in
inc
jge
dec
movl
add
cwtl
into
addl
adc
ret
aam
cltd
xorl
shl
push
jbe
push
movsl
or
mov
nop
dec
int3
mov
push
icebp
dec
cmp
scas
push
inc
mov
xchg
or
rorb
hlt
mov
push
add
and
insl
dec
jmp
dec
xor
out
and
mov
shl
xchg
je
icebp
add
jne
adc
or
aad
int3
dec
cmp
push
mov
mov
mov
sbb
and
xor
mov
adc
lea
jb
push
ret
mov
jmp
xor
adc
je
pop
adc
mov
jnp
mov
jmp
ja
xorb
jmp
call
enter
cltd
xchg
push
insb
fisttpl
sbb
test
nopl
mov
lds
sahf
and
enter
sbb
push
mov
adc
mov
sbb
test
call
in
addr16
ljmp
ds
add
imul
lcall
sarl
shlb
cs
add
push
ficomps
sub
sub
cli
mov
mov
add
shlb
pop
mov
or
sub
cltd
mov
int
push
add
inc
mov
push
lea
je
pop
fwait
inc
lss
test
in
mov
rcrb
je
push
mov
sbb
mov
sbb
stos
mov
cmp
std
sbb
sahf
popf
xor
popf
jge
push
dec
dec
rcl
stos
pop
or
in
mov
push
stos
pop
sub
es
dec
cmp
rolb
mov
out
clc
test
mov
mov
adc
aad
cwtl
insl
popa
frstor
pop
inc
push
jne
mov
jns
sbb
lock
mov
clc
popf
mov
xor
sub
or
mov
sbb
push
mov
mov
shrb
push
inc
nop
das
sub
add
xchg
and
push
lods
movsb
addr16
dec
scas
rcrl
sbb
mov
mov
scas
or
pop
pop
sub
xchg
outsl
dec
add
cmc
or
dec
add
and
enter
aam
or
out
loope
push
push
mov
dec
rclb
rolb
sbb
lds
add
sub
xchg
sbbl
mov
out
lret
popf
lret
lds
inc
sub
or
push
or
aas
mov
neg
and
test
dec
int
ljmp
mov
mov
or
mov
add
push
dec
sarl
lea
cmp
xchg
andb
orb
fmuls
sbb
push
imul
imul
or
sub
shlb
js
cmp
mov
push
popa
jo
mov
inc
pop
dec
add
sbb
stos
dec
addr16
push
ss
mov
or
incb
mov
add
cmp
push
popf
inc
mov
xchg
imul
clc
jno
pop
aam
jmp
and
lcall
mov
mov
inc
in
lods
jne
rcrb
cwtl
adc
push
xchg
mov
addr16
adc
in
mov
lods
push
add
test
int
adc
add
bound
mov
leave
pop
inc
cmc
xchg
inc
nop
xchg
sbb
dec
repnz
rolb
cmp
cmp
mov
inc
fldlg2
sbb
cmp
pop
pushf
pop
cmpb
sub
mov
popa
fwait
ret
jmp
xor
int
in
or
xor
or
sbb
cli
or
and
sub
mov
mov
pop
jae
nop
jbe
lahf
add
fists
out
adc
cli
pop
jmp
push
sbb
out
xchg
cs
jbe
mov
in
mov
mov
push
cwtl
clc
fsubrp
je
cmp
lock
aam
sub
xchg
push
pop
push
mov
push
sub
or
sub
dec
adc
sbb
daa
cwtl
jp
out
mov
mov
shrl
jb
pop
inc
enter
cmp
mov
cltd
xor
jecxz
mov
mov
push
shll
xchg
dec
push
insl
fs
shll
mov
adc
movb
or
xorl
into
shlb
jbe
inc
shll
inc
mov
lock
mov
hlt
lret
xlat
lea
loopne
cmc
inc
insl
push
pop
lret
lods
push
sub
mov
test
mov
inc
pop
jo
fisubrl
sub
push
nop
push
mov
xchg
inc
jle
push
push
mov
js
js
mov
icebp
lods
inc
mov
faddp
das
xor
gs
cmp
and
and
lock
adc
int3
stos
ds
rcl
cwtl
into
mov
mov
and
int3
imulb
loop
pop
fsubl
mov
adc
jb
adc
jmp
ja
addb
sbb
ja
and
enter
push
aam
pop
jno
mov
and
ret
push
cmc
mov
repz
push
stc
or
mulps
cmp
xlat
mov
inc
cwtl
pop
fsubs
clc
mov
ja
cmpsl
or
mov
jno
je
mov
jb
push
inc
fistps
loopne
push
out
mov
sbb
mov
push
push
int3
popf
push
xor
sbb
mov
daa
cmp
stos
pop
mov
loopne
xchg
stos
xchg
icebp
or
adc
aam
mov
cltd
add
hlt
push
add
add
sbb
xor
popf
or
popl
test
je
push
xor
inc
pop
xchg
push
fs
cmp
lret
xchg
or
sub
jge
in
mov
popa
push
push
pop
adc
cmc
les
mov
adc
aas
add
jae
inc
ret
shrb
aaa
and
and
ret
mov
mov
jno
inc
call
push
or
sub
pushl
xchg
mov
push
sub
adc
insb
jne
mov
cmp
das
adc
jo
ret
cld
inc
xchg
jbe
pop
sbb
inc
mov
and
mov
stos
cs
push
cwtl
push
aas
lret
scas
jo
push
or
push
xor
mov
push
decl
je
mov
je
jmp
mov
xchg
add
sbbb
je
adc
mov
call
popa
loop
std
xchg
push
loope
dec
movsb
add
js
sub
mov
mov
pop
cli
mov
inc
mov
je
push
ret
or
je
mov
push
jmp
or
ret
pop
mov
and
movsl
hlt
push
lahf
adc
mov
mov
cmp
loopne
loop
xor
and
ljmp
cmp
inc
jne
shll
pushf
imul
popa
hlt
ret
xor
shll
int3
int3
dec
dec
push
xchg
mov
inc
lret
mov
push
add
push
enter
je
rorl
into
mov
sub
test
sub
in
lock
dec
sarb
jb
xor
push
nop
pop
sbb
sahf
xchg
test
mov
clc
sub
sbb
add
stc
arpl
enter
jo
leave
mov
push
mov
xchg
rcll
test
in
jmp
sbb
and
and
daa
xchg
notb
mov
sbb
test
dec
inc
movsl
inc
push
imul
xor
xor
les
push
hlt
int3
inc
mov
lret
inc
cmp
es
push
cwtl
aaa
jmp
pop
pop
jns
jecxz
and
insb
out
add
repnz
and
dec
lods
jae
sbb
cwtl
adc
inc
cmp
jl
andb
adc
and
arpl
or
mov
popw
fcmovu
adc
dec
xor
rol
push
cltd
sub
movsbl
push
add
inc
cmp
jl
push
xlat
test
sahf
jnp
cmp
pop
cmp
ja
or
push
jno
orl
pop
pop
ret
or
xchg
stos
call
sub
movsb
add
lods
push
mov
outsb
int3
inc
dec
shll
andl
jne
subl
or
jl
pop
mov
add
mov
mov
pop
or
mov
mov
mov
or
jl
mov
loopne
repz
adc
mov
fs
xchg
adc
pop
stc
sub
sub
add
add
dec
in
fs
push
push
lds
inc
adc
cmp
push
sbb
push
jns
aam
and
pusha
cmpsl
rorb
mov
cmpb
mov
es
pop
aaa
add
shlb
inc
and
in
xor
dec
mov
mov
inc
hlt
adc
es
pop
mov
or
dec
or
xor
push
inc
cmp
jl
lret
add
call
mov
mov
push
pop
pop
ret
cmp
push
cmpsb
mov
adc
dec
push
and
cli
jae
in
int3
xchg
mov
fcoms
and
nop
mov
pop
xchg
packsswb
aam
adc
cmpxchg
notrack
cld
mov
and
out
movsl
push
push
je
mov
dec
push
out
adc
jmp
add
xor
xor
in
jno
mov
repz
push
hlt
adc
loop
inc
inc
movl
hlt
xchg
push
mov
outsl
xlat
sbb
adc
imul
sbb
call
mov
sbb
jne
jmp
and
mov
lods
cmp
mov
add
xchg
pop
cmpsl
or
popf
fiaddl
or
inc
or
cwtl
add
inc
adc
pop
sahf
cmp
arpl
dec
enter
pop
sbb
xor
push
outsl
test
leave
mov
add
cmp
fucomi
add
loop
sbbb
pop
and
mov
inc
aam
push
mov
mov
and
jb
or
mov
add
adc
or
mov
pop
test
pop
arpl
xor
or
pusha
clc
data16
jne
fldenv
inc
adc
xchg
sahf
aaa
das
mov
roll
mov
test
push
js
mov
or
jecxz
sbb
popf
cmp
push
loop
enter
xor
inc
shr
call
enter
in
push
int3
xchg
push
push
inc
in
aam
lock
push
pop
xor
jno
ror
test
into
push
stos
fsubs
mov
jl
adc
sbb
call
cltd
sbb
sub
jmp
in
xchg
js
addb
add
inc
and
outsb
mov
push
movsl
imul
jne
stos
arpl
push
dec
cmp
cmp
xlat
fmull
mov
ret
call
dec
pop
or
sbb
fiaddl
push
mov
lds
adc
cmp
cmp
dec
enter
push
mov
loopne
mov
lods
enter
sbb
icebp
cld
test
leave
push
cmp
pop
jnp
pop
jbe
test
inc
add
mov
xchg
leave
mov
jle
jbe
adc
mov
and
popf
mov
loopne
cmp
cmpsl
or
or
mov
jo
xchg
clc
or
sti
test
loopne
shlb
inc
test
push
addr16
cmpsl
mov
adc
hlt
loopne
in
inc
mov
inc
shr
scas
lods
out
inc
mov
fsubrl
and
shlb
lret
xchg
jmp
xchg
mov
mov
mov
loop
insb
cli
dec
push
jle
mov
or
or
dec
pop
inc
or
cmp
or
inc
adc
andb
adc
clc
insb
lret
mov
orl
js
cmp
push
icebp
add
pop
aam
push
and
and
inc
test
and
mov
call
or
pop
xchg
mov
push
in
test
ret
je
dec
mov
xchg
es
shrb
gs
adc
dec
call
sbb
add
pop
xor
jb
leave
ja
rcll
or
inc
add
aam
or
mov
xor
add
clc
pop
jb
push
divl
ret
mov
mov
mov
push
mov
push
nop
push
popa
test
xor
shl
insb
in
xor
mov
and
xchg
or
pop
lea
aam
cs
adc
popa
js
pusha
jmp
sub
pusha
leave
pop
xor
or
rclb
shr
cmpl
push
pushf
mov
mov
out
cwtl
add
mov
dec
into
cmp
xor
add
aam
push
rcrb
sbb
sub
cmpb
pop
or
adc
mov
test
lret
and
clc
lods
mov
rclb
xchg
rcrb
jmp
sub
inc
in
aam
bound
mov
push
int3
push
je
or
cmpsb
dec
hlt
xchg
mov
xorb
adc
lahf
xor
jmp
adc
cmp
jmp
sbbl
nop
push
inc
insb
cmp
lods
push
bnd
sub
and
je
inc
mov
bound
sarb
aas
and
mov
sub
cli
mov
inc
sbb
test
or
push
push
addl
sbb
insl
daa
ds
ja
jle
aam
mov
xor
call
insl
aam
outsl
cmp
cld
jo
fs
faddl
and
es
add
les
or
jp
arpl
jbe
rolb
mov
cmp
sub
cmp
je
cmp
stos
test
adc
or
add
insb
cmp
jne
ret
and
add
and
icebp
cmp
stc
pop
cli
sti
cld
or
push
nop
mov
jmp
cmpl
mov
push
and
xchg
icebp
or
iret
popa
add
dec
or
mov
fisubrl
clc
push
dec
sub
test
setne
nop
rclb
mov
inc
push
sbb
inc
xchg
add
daa
data16
adc
and
sbb
push
or
pop
outsb
rcrb
jnp
pop
shlb
mov
xor
stc
sbb
xor
inc
rcrl
ljmp
and
pop
rorl
xchg
dec
xor
mov
iret
js
jle
push
dec
pop
pusha
xor
sub
inc
aaa
adc
mov
mov
mov
sub
push
xchg
push
mov
loope
lea
cwtl
or
jl
test
dec
xchg
mov
add
add
adc
test
ffree
inc
out
push
enter
add
push
cltd
push
sbb
mov
sub
jne
mov
adc
inc
rcll
pop
lods
mov
pop
ja
cmp
jmp
push
inc
dec
test
add
mov
nop
imul
mov
push
pop
push
add
popf
add
pop
pop
pop
dec
and
test
jne
xchg
cmp
fmul
pop
add
add
add
cmpb
pusha
or
jnp
push
add
dec
aam
adc
mov
dec
pop
push
call
sbb
pop
cmp
add
sub
int3
adc
mov
mov
daa
sti
add
mov
sbb
push
jns
adc
adc
add
xor
or
jne
inc
push
cmp
jb
cmp
mov
push
lods
adc
pop
mov
dec
sub
dec
or
out
shll
jno
or
mov
in
push
lcall
adc
mov
rclb
adc
repnz
repnz
adc
sub
mov
mov
test
jp
fsubr
jno
lock
out
lock
aas
inc
xorb
aam
xor
imul
imull
pusha
add
mov
sbb
sub
push
dec
call
movsl
ljmp
jae
cwtl
xor
lods
dec
leave
sub
mov
mov
rcr
jmp
pop
push
cs
adc
inc
inc
invd
or
stos
in
or
icebp
orl
in
cli
inc
add
jae
aam
mov
fld
xor
out
int3
dec
rep
jne
xchg
lahf
or
jne
pop
movl
push
or
or
xor
adc
or
inc
and
cmp
push
xchg
and
ds
cltd
dec
lahf
fwait
adc
sti
push
xchg
jle
sub
dec
mov
cmpb
in
jns
aaa
xor
loopne
add
cmpl
mov
sti
cltd
ljmp
cmc
add
int3
xchg
stos
xor
popf
movb
dec
cmp
push
outsl
mov
pop
nop
es
xor
mov
mov
xor
pop
xor
mov
push
nop
mov
xor
xor
into
into
adc
pop
dec
out
xchg
mov
je
je
pop
push
nop
pop
pushf
push
in
sub
rolb
pop
mul
mov
fdivrs
mov
pop
popf
cs
leave
adc
je
dec
sub
popf
cmp
jb
fadds
arpl
and
fcmovnu
sub
push
inc
aam
inc
out
cmp
sub
cmpsb
mov
jbe
pop
rol
sub
dec
fildll
sbb
je
mov
or
sbb
scas
lods
popa
sbb
sbb
ja
cmc
and
adc
mov
adc
inc
jnp
cwtl
adc
mov
mov
js
xor
mov
sbb
jo
inc
rolb
jne
push
mov
out
lods
jecxz
inc
enter
inc
cmp
pop
xchg
mov
mov
out
mov
loopne
mov
xchg
adc
jge
sbb
mov
pop
out
sub
push
jb
push
ljmp
lret
sbb
aam
xchg
add
cld
test
mov
arpl
cwtl
jne
les
or
inc
out
adc
and
inc
test
out
or
jge
shrb
hlt
xor
inc
lock
insl
sub
mov
fsub
inc
mov
dec
sub
enter
jno
hlt
daa
clc
and
fcoms
je
sbb
cmp
ret
pop
add
mov
into
hlt
adc
cmp
add
arpl
sub
test
inc
dec
mov
mov
mov
mov
push
dec
and
mulb
jae
div
pop
mov
sub
arpl
cmp
arpl
idivl
or
pause
dec
adc
into
push
push
cmp
sbb
xchg
filds
sti
insb
and
loopne
jne
cmp
and
jne
roll
pop
xchg
jo
ljmp
add
outsl
adc
jmp
pop
xchg
and
and
loopne
cltd
clc
add
jmp
add
pop
ss
mov
xchg
movsb
mov
ss
push
ficompl
insl
ret
add
push
sbb
push
mov
add
add
fidivs
or
or
mov
mov
push
mov
leave
pop
ja
jb
cmpb
push
jae
push
cmp
ja
jns
jl
inc
inc
cmp
xor
out
icebp
sub
and
or
or
jae
sahf
ret
lods
sub
sbb
add
adc
cmpsl
inc
popa
xlat
call
ss
adc
push
shlb
and
lods
xor
lret
addl
adc
push
cmp
call
sbb
mov
iret
ss
icebp
pushf
scas
add
jo
into
aam
or
push
rcrl
sub
inc
cmp
xor
pop
out
ficoml
je
sub
leave
repz
jl
add
je
loopne
clc
and
cmp
xor
push
xchg
andb
or
sub
pop
dec
add
push
data16
xchg
js
mov
inc
dec
sub
mov
pop
test
or
hlt
mov
hlt
int3
mov
mov
push
call
pushl
xor
mov
clc
mov
jmp
test
iret
dec
imul
inc
stos
push
stc
adc
iret
xor
push
fs
std
add
push
test
stos
push
nop
xchg
cmp
sub
hlt
enter
inc
insl
sbb
sbb
popf
xchg
push
mov
mov
sub
cwtl
stc
movsl
jne
xchg
and
pusha
cmpsb
lea
xchg
in
repnz
fwait
push
cmpsl
jmp
out
repz
mov
inc
jmp
cmp
or
jb
aam
dec
dec
rcrb
repnz
rorb
xor
int3
call
fldl
push
push
push
inc
andb
push
mov
test
dec
mov
mov
add
lea
test
adc
add
iret
and
push
mov
jmp
js
lods
jae
jl
and
add
push
data16
test
lret
shlb
inc
pushf
jmp
pop
icebp
sahf
test
in
outsl
pop
rdtsc
inc
and
movsl
orl
popa
ljmp
sbb
pop
mov
stos
mov
call
dec
in
add
sarb
rorl
sub
pop
and
rcrb
push
mov
push
ret
shlb
inc
xor
leave
and
pop
jne
std
pop
lock
xchg
fs
test
std
test
and
mov
inc
fcmovnbe
jle
pushf
jge
mov
sub
rcl
pop
mov
shrb
movb
push
inc
ja
and
data16
or
popf
push
xchg
lea
fcmovu
sbb
je
in
xchg
gs
lock
add
adc
loopne
jmp
inc
jae
push
loopne
jae
lcall
jne
or
das
and
push
xor
sub
repz
call
in
inc
jbe
lds
mov
mov
cli
xchg
cmc
in
into
mov
sub
dec
mov
call
sbb
enter
mul
sub
loop
pushf
in
adc
popa
imul
or
mov
movsl
push
sti
inc
mov
lea
dec
leave
addr16
jbe
scas
and
dec
pop
cmpsb
adc
sbb
jp
iret
fwait
adc
pusha
push
mov
mov
push
xchg
xchg
bound
cmp
call
rol
xchg
comiss
jne
xor
bound
nop
jb
cmp
leave
pushf
rcrl
mov
or
popa
xchg
call
jge
movsw
pop
loope
push
add
test
sbb
and
incl
mov
mov
jmp
je
jne
push
test
mov
insl
adc
mov
dec
js
fmuls
aad
test
hlt
and
gs
call
mov
push
int3
dec
inc
rolb
mov
cmp
lea
jnp
inc
into
mov
fsubs
sarb
jne
mov
outsb
fsubrp
jmp
jo
inc
pop
sbb
dec
sub
push
cmp
cli
push
and
sub
xor
mov
popa
add
push
mov
mov
sub
int3
push
shlb
mov
sub
push
int3
pop
or
fs
or
xchg
mov
lret
iret
mov
mov
pop
enter
rorl
aam
sub
cmp
movsb
and
inc
mov
sub
test
push
inc
pop
cmp
cmpb
inc
sbb
jp
mov
push
repz
xor
dec
out
cmpsb
sub
push
and
adc
add
test
enter
push
sbb
mov
fldenv
xor
push
cwtl
lret
mov
adc
lea
faddp
test
pop
push
gs
adc
xor
dec
aam
or
jl
sub
mov
loop
or
sub
mov
aad
fstps
adc
daa
test
jb
dec
rcrb
sub
icebp
pop
shlb
xchg
adc
adc
cmp
arpl
shlb
daa
popa
inc
push
sub
pusha
sub
inc
mov
push
je
movzbl
leave
push
sub
mov
sub
pop
dec
sub
push
push
inc
inc
adc
dec
cli
cli
or
adc
sub
sahf
pop
lock
mov
sub
dec
popl
mov
es
xchg
in
sub
add
jae
adc
cli
xchg
push
mov
dec
sbb
mov
cmp
out
push
fsubl
call
and
jecxz
xchg
push
add
add
inc
cmp
push
xchg
push
or
mov
sbb
xchg
mov
push
and
cmpsb
add
imul
andb
xchg
ret
fsubrs
mov
ror
and
mov
jle
inc
aam
fdivp
cmp
rclb
js
loop
cmpl
sub
mov
enter
and
aaa
arpl
cmp
add
push
cmp
jle
xchg
addr16
jge
sbb
sub
jb
stos
rorl
cmpb
je
mov
lods
pop
js
pusha
mov
dec
hlt
jbe
mov
mov
or
jp
or
pushl
daa
inc
arpl
mov
pop
push
push
cltd
xor
insb
dec
enter
adc
in
adc
or
in
fdivrs
xchg
and
cmp
test
jle
sbbb
fists
push
adc
push
jo
dec
sar
inc
pop
jle
es
iret
out
adcb
lcall
and
jne
cltd
or
add
jp
lret
xchg
add
or
sbb
mov
pop
cmpsb
inc
lock
inc
and
or
mov
aad
fwait
sub
sbb
push
mov
sbb
int3
in
call
jb
and
stos
popa
popa
add
leave
mov
sub
mov
lods
jbe
fs
into
fisubs
mov
sub
int3
mov
cld
lea
mov
or
andb
hlt
push
push
mov
pop
cmp
loopne
jecxz
cmp
dec
mov
pop
les
movsb
stc
push
mov
icebp
test
sbb
cltd
jno
hlt
sub
ss
add
and
rolb
mov
fmull
sub
jbe
ljmp
and
inc
pop
in
sbb
jne
fsubr
sub
mov
nop
mov
sub
lods
in
insb
and
imulb
add
sahf
sbb
mov
je
xchg
es
insl
ljmp
nop
sti
cwtl
lcall
mov
jne
push
dec
mov
loope
push
hlt
cs
data16
push
fiadds
test
cmp
out
mov
xor
les
sub
push
adc
inc
into
movb
sub
xchg
dec
push
stc
adc
push
test
je
dec
add
mov
test
je
dec
sbbl
je
aas
push
cmp
push
sarb
js
incl
mov
push
or
repz
mov
aaa
inc
mov
jo
mov
jne
pop
in
or
mov
fsubl
aas
xchg
jne
std
xchg
xor
enter
push
add
pop
and
mov
and
pop
cmpb
loop
dec
and
inc
push
sbb
or
pop
cmp
cmp
repnz
or
mov
add
jge
cmp
inc
sahf
add
sbb
dec
add
push
mov
mov
cmp
jl
cmp
jg
or
adc
mov
pop
jmp
mov
cmp
push
test
add
push
bound
clc
add
dec
adc
repz
mov
xchg
mov
sbb
decl
or
push
inc
in
or
cmp
je
mov
or
push
jnp
add
pop
pop
daa
sbb
push
add
rcrl
cmc
mov
cmp
jne
mov
cmp
je
sbb
lret
or
sbb
js
loopne
cmp
pop
cmpsb
fwait
rcrb
jg
push
push
mov
nop
shll
call
adc
int
dec
add
lret
jp
jne
lock
pop
sub
push
call
add
push
add
rclb
inc
xlat
jl
notl
add
jp
sub
cmp
add
jle
rolb
add
xor
test
lcall
in
push
pop
inc
mov
ret
loop
pop
add
dec
jmp
sub
jmp
add
add
es
cmpsl
adc
popf
add
or
jmp
push
xor
and
or
jmp
mov
and
je
mov
ficoms
mov
pop
pop
or
cmpsl
pop
push
addr16
insl
ss
pop
inc
mov
sbb
xorl
cmp
jno
rolb
pop
push
outsb
ret
popa
mov
daa
sbb
mov
lahf
add
lcall
popa
xorl
test
lea
mov
aas
adc
push
mov
push
push
xchg
clc
scas
imul
test
jne
cmpl
sub
add
cmp
out
add
inc
bound
sub
shll
or
in
xor
mov
inc
and
push
jg
insb
mov
push
or
inc
add
rolb
add
ljmp
push
add
jns
bound
cltd
sub
add
out
push
pushf
and
rolb
pop
add
mov
gs
pushf
cmp
ljmp
arpl
sbb
test
repnz
inc
xchg
lds
or
std
xchg
xor
inc
cmp
add
cmpl
je
push
push
pop
xor
cmpsl
adc
push
push
push
outsl
jmp
mov
mov
aas
push
pop
and
sub
jecxz
sbb
das
dec
sbb
mov
dec
sub
addr16
mov
cli
insb
xchg
cmp
daa
scas
sub
movmskps
into
or
sbb
cmp
add
inc
mov
call
sub
push
test
jne
jne
cmp
enter
movsl
or
inc
mov
orb
cmp
jbe
jb
es
ret
sbb
and
lock
or
or
and
or
add
js
sub
jb
and
pop
or
add
enter
cmp
mov
lea
pop
nop
pushf
pop
xor
and
add
inc
add
inc
add
mov
lds
jecxz
lea
pushf
xchg
out
add
js
shll
gs
inc
in
cmp
repz
int3
les
mov
repz
in
cmp
arpl
call
cmp
lock
hlt
clc
sub
cld
cld
lea
xchg
sbb
add
lock
dec
popa
adc
sub
mov
cmp
fstpt
inc
out
sarl
jmp
inc
lea
jo
xor
mov
cmp
sbb
mov
addr16
lahf
cmc
lods
sub
fimuls
sbb
popa
mov
add
lahf
shrl
add
adc
add
mov
ja
mov
jno
mov
mov
mov
lds
ja
or
pop
xchg
loop
push
pop
cmp
repz
insb
je
test
fpatan
xchg
sbb
jns
out
sbb
adc
out
sahf
out
adc
or
jns
or
sub
jg
mov
lods
sahf
out
enter
cmpsl
mov
jnp
push
out
aad
fcomi
dec
enter
mov
lret
dec
dec
adc
call
dec
and
leave
std
inc
xorl
ret
sahf
es
inc
xlat
add
inc
and
or
adc
mov
mov
sub
push
sub
push
inc
in
dec
or
pop
mov
popa
xor
push
aam
push
push
out
push
movl
shll
add
sub
sub
jne
jb
fdivs
call
push
in
clc
adc
int
inc
decl
mov
sub
ror
cmp
std
cld
sub
movsb
out
inc
push
sbb
je
mov
cmp
sub
xor
or
shll
or
mov
sbb
xchg
jno
lret
mov
stos
inc
cmp
cmp
mov
jo
adc
push
xlat
inc
test
jae
pop
add
loope
fldenv
sub
push
ret
popa
inc
bnd
mov
cmp
adc
mov
cmp
or
and
cmp
jb
mov
adc
int
adc
xchg
inc
jne
mov
rcl
inc
ret
mov
pop
sub
add
inc
mov
pop
jmp
sub
inc
test
ret
repz
addb
xchg
mov
ja
fists
arpl
cld
dec
adc
loope
inc
sahf
inc
mov
add
cmpl
fiadds
push
fsubl
sub
test
addb
or
cmpsb
testl
ljmp
push
xchg
das
pop
pop
mov
popa
js
push
or
sarb
into
or
adc
jg
pop
adc
aam
shrl
mov
mov
push
fildl
or
mov
int3
or
inc
jmp
lock
mov
test
inc
sbb
outsb
stos
adc
add
push
movsl
xor
je
mov
nop
add
jmp
pop
push
cld
filds
fs
pop
hlt
cld
sub
cld
sub
test
inc
mov
or
cltd
in
mov
cld
push
dec
int
loopne
jmp
jno
in
in
and
clc
imul
lea
pop
jmp
mov
jb
stos
dec
cld
jne
cmp
jmp
test
loopne
hlt
sub
jmp
push
ljmp
ja
mov
fucomip
sbb
jb
cmp
in
cmp
stos
hlt
add
shl
xchg
jmp
or
cmp
popa
hlt
lea
mov
test
mov
cltd
add
adc
cmc
or
sbbb
js
mov
ja
mov
rolb
dec
out
or
push
pop
adc
xchg
popa
ljmp
push
and
sti
clc
push
cmp
mov
xorb
sub
xlat
subb
pop
in
popf
pop
add
jno
cmp
sarl
cmp
pop
jns
cltd
sub
xchg
or
jb
sbb
sub
jb
adc
push
mov
sub
popa
push
cmc
shlb
int3
out
pop
xor
fimull
popa
mov
jno
add
out
jno
lret
push
imul
subb
imull
test
xorps
lea
pop
adcl
mov
or
mov
and
mov
mov
loop
mov
clc
push
dec
gs
jp
es
loope
pushl
cmp
add
je
imul
dec
or
cmpsb
test
push
hlt
push
mov
les
add
lret
jne
sbb
add
add
loope
in
rolb
mov
jmp
leave
and
pop
mov
mov
jne
adc
inc
stos
xor
lea
mov
std
add
fstps
fdivr
fnstenv
cwtl
shr
pop
inc
inc
push
add
fnstenv
hlt
cmp
test
in
push
xor
hlt
mov
nop
test
adc
mov
adcl
test
mov
ds
or
hlt
aam
sbb
and
addr16
mov
orl
xchg
push
cli
sbb
push
or
jmp
aad
daa
mov
cmpsb
add
idiv
inc
ja
into
addr16
adc
push
out
js
xlat
data16
jnp
xor
cmp
mov
sub
into
hlt
add
filds
sub
xor
mov
xor
out
mov
or
filds
je
dec
pop
out
cld
push
pop
pop
mov
fidivrl
out
and
cld
adc
jge
xor
jns
call
shlb
jnp
jl
insb
xchg
loopne
jp
adc
fidivrs
inc
or
pop
adc
xchg
ja
adc
or
out
rcrl
rol
push
mov
leave
ja
stos
jl
cltd
jns
xchg
clc
pop
imul
clc
clc
fstpl
pop
fsubrl
mov
adc
jmp
in
cmp
mov
jmpw
insb
in
hlt
mov
inc
sbb
jmp
and
mov
push
pop
pop
adc
fnstenv
cmpsl
enter
mov
sbb
scas
je
enter
push
into
cmc
and
push
xchg
push
imul
addr16
push
mov
fidivrs
xchg
data16
mov
xor
add
stos
enter
scas
dec
repz
inc
je
mov
call
adc
add
and
adc
dec
xchg
int3
adc
rclb
sbb
ficompl
cmp
jae
inc
xchg
hlt
dec
test
popf
rcr
in
inc
ret
pop
je
test
push
sub
sbb
push
outsb
sbb
loopne
mov
jo
arpl
out
cmpl
movsb
pop
out
adc
fcoml
je
or
pop
icebp
pop
jb
loopne
or
and
inc
rorb
loopne
sub
dec
fs
cmp
mov
in
clc
add
inc
pop
jbe
mov
cli
xchg
insb
je
fiaddl
filds
xor
inc
pop
mov
dec
cmp
cltd
and
add
inc
inc
dec
push
xor
or
mov
mov
xor
add
mov
xchg
pop
add
add
lcall
adc
jbe
xor
enter
imul
dec
out
push
mov
adc
cltd
cmp
stos
or
movsb
push
dec
xor
and
xchg
out
es
cltd
mov
pop
adc
xchg
add
push
inc
nop
das
mov
push
add
mov
cmpsl
je
je
pop
and
mov
mov
sub
sbb
xchg
out
iret
aas
push
je
cld
or
scas
inc
out
xchg
rcrb
mov
sub
or
inc
mov
inc
je
push
sbb
sbb
cwtl
cmp
cmp
or
movb
cmp
inc
jbe
fwait
shll
test
mov
cmp
test
pushf
or
adc
lds
gs
cltd
fldenv
ds
mov
dec
jns
mov
mov
fcoms
cmp
lock
xor
f2xm1
movsl
push
inc
test
xchg
movsb
outsl
leave
jg
pop
xor
in
aad
movsb
fisubrl
fisubl
in
imul
push
sub
ljmp
dec
sub
imul
push
sar
mov
mov
jb
sar
in
mov
mov
and
in
jns
push
push
pop
sbb
mov
lret
jne
inc
sub
sbb
adc
ficoml
jmp
adc
test
add
jne
test
popf
mov
inc
cmp
rcrl
pusha
les
shlb
aam
mov
enter
pop
fldenv
adc
jmp
int
or
and
mov
mov
add
inc
inc
push
xor
xorl
nop
cmpsl
arpl
sti
mov
or
sbb
or
rcrb
cmp
jbe
mov
mov
sub
jbe
sbb
cmp
je
pop
mov
arpl
add
jo
fistpl
xor
cld
das
gs
in
sbb
aas
test
lcall
inc
mov
mov
mov
push
lcall
cmp
test
sbbb
xchg
push
std
add
fwait
pop
cmp
mov
add
dec
inc
clc
push
add
jmp
mov
or
iret
jmp
inc
mov
imul
mov
jmp
cmp
mov
in
adc
ret
rcrb
mov
mov
cmp
push
nop
fcomip
sub
and
xor
cwtl
aas
mov
hlt
add
jnp
adc
mov
cmp
adc
fisubl
std
mov
xchg
add
inc
sahf
push
push
push
xchg
repnz
shrl
shlb
pushf
sbb
stos
outsb
mov
test
out
push
popa
leave
sub
scas
pop
mov
mov
add
mov
sub
pop
bound
sbb
mov
cmovo
movsl
sub
jo
sbb
test
hlt
insl
sbb
shrb
push
xchg
sbb
lcall
mov
lock
ja
clc
and
adc
dec
pop
add
adc
push
jg
clc
jns
fcoml
push
add
xchg
ret
imul
lret
lds
jmp
jbe
sbb
or
cmp
clc
mov
rclb
into
or
or
loop
cmpl
adc
add
xchg
inc
pop
jmp
lahf
ljmp
pop
sub
pop
inc
lods
push
push
mov
jp
sbb
xor
pop
push
lret
out
mov
gs
sbb
xchg
jmp
fsubs
repz
pop
mulb
and
ficompl
mov
fistpl
jl
cmp
movsb
test
aam
in
clc
pop
jne
dec
clc
clc
aam
lock
mov
xchg
pop
lret
xor
mov
sbb
les
cmpxchg
test
pop
push
jp
cmp
cs
je
dec
fwait
jns
shrl
movsl
xchg
xor
xchg
adc
std
aas
pop
into
std
ret
fstp
int
cltd
adc
adc
xchg
pop
fisttpll
ret
test
inc
dec
ljmp
inc
push
incl
aad
sbb
mov
daa
and
pop
popa
jg
jmp
test
cwtl
sub
shll
jne
mov
jno
aad
or
loop
in
xchg
inc
pop
add
jg
enter
shrb
inc
jno
push
jge
add
xchg
call
jo
push
jne
outsb
jecxz
call
aas
jmp
push
ljmp
cli
lahf
xlat
cmp
mov
xchg
fcomps
lcall
and
sub
mov
aam
mov
and
mov
sbb
mov
or
mov
sbb
xorb
outsb
bound
dec
icebp
jns
inc
lock
xor
and
in
out
jae
mov
aaa
and
add
mov
xchg
mov
insl
imul
bound
sub
nopl
jo
add
adc
adc
adc
leave
pop
sbb
and
inc
sbb
push
shll
push
jbe
push
xor
xor
jg
and
gs
cld
adc
adc
sub
mul
cmpsb
inc
hlt
pop
jp
mov
call
lcall
dec
fbstp
cld
or
repnz
push
adc
jg
pop
mov
and
mov
push
mov
or
cmp
jne
ss
adc
sbb
mov
into
adc
jg
adc
outsl
mov
int
dec
and
jmp
clc
or
mov
xor
mov
and
and
shlb
jle
pop
repz
xor
mov
or
adc
xchg
lock
ljmp
push
and
rorb
addb
jne
mov
pop
lods
jb
sbb
cli
fcomps
rol
push
jp
inc
popf
fbld
sbb
loope
rorl
xor
and
andl
dec
mov
cmp
sbb
negb
cmp
cmp
cmpsl
push
jbe
jbe
adc
sbb
jb
sbb
stos
mov
push
dec
cmp
mov
outsb
sarl
push
sti
jg
jge
inc
arpl
adc
test
dec
dec
movsl
adc
add
ror
inc
mov
or
jmp
adc
cwtl
notl
jle
lret
mov
mov
pop
jb
idivb
fidivrl
push
mov
repz
add
dec
sarb
test
hlt
push
subl
cs
jne
jmp
outsl
int3
lock
xor
addr16
mov
je
enter
inc
push
sub
and
movsl
pop
xchg
fnstcw
mov
pushl
stos
xor
ret
cs
daa
jbe
jne
cmp
and
jge
cmc
lock
push
nop
in
bound
sbb
push
mov
iret
out
into
add
mov
into
add
pop
inc
lcall
mov
dec
ret
jg
in
mov
jne
adc
xor
sbb
ret
dec
push
inc
dec
add
sub
inc
sub
call
sub
or
mov
fs
add
jp
dec
std
out
scas
sahf
push
mov
or
dec
in
je
cs
cld
into
test
aam
sbb
xor
inc
test
movlps
je
jg
lock
stc
adc
sub
xchg
js
cwtl
mov
jo
push
jmp
roll
sub
sbb
or
shl
or
jg
sbb
mov
dec
inc
dec
inc
out
ss
in
jno
push
cbtw
and
lret
ffree
ds
or
sbb
ret
loop
xchg
sub
arpl
cmp
push
sbb
roll
cmp
or
movsl
dec
jbe
adc
sbb
sarl
mov
xor
pop
clc
adc
dec
mov
sbb
daa
test
push
loop
xchg
push
xlat
pop
mov
mov
mov
sub
jns
adc
or
push
movsb
lods
lods
lds
inc
lods
adc
cmp
add
lcall
mov
pop
fcompl
rcrb
add
cmp
sbb
ret
out
sbb
dec
lock
das
adc
test
sbb
and
imul
mov
subl
int3
push
sbb
popf
cmp
movb
fisttpl
mov
int
ficompl
mov
lods
testl
cmp
adc
xchg
lea
imul
mov
lods
jae
push
jbe
sti
xchg
jbe
xchg
ljmp
jl
imul
out
mov
nop
mov
js
push
cld
icebp
xor
inc
mov
shlb
jecxz
pushf
push
or
mov
or
testb
aam
test
inc
cwtl
cmp
mov
add
add
test
push
aaa
jge
andb
movsl
or
pop
mov
pop
inc
pop
xor
test
in
xor
dec
lock
xor
or
je
cmpl
lret
imul
jo
push
add
cmc
aam
clc
loopne
mov
add
aaa
pushf
inc
lret
xchg
sar
add
roll
fldenv
leave
lods
pop
mov
in
lcall
push
sbb
xchg
and
sbbb
mov
xorb
sub
add
sbb
mov
jns
cmp
addl
jns
add
lret
loopne
test
jb
jno
mov
xor
lock
sub
cmp
jmp
adc
sub
in
mov
cmp
xchg
out
testb
or
inc
sub
or
sub
mov
add
mov
pop
or
mov
bnd
adc
imul
filds
push
data16
or
and
mov
jg
sbb
jle
sub
mov
into
mov
clc
add
cmp
mov
hlt
add
shrb
enter
mov
pop
inc
mov
gs
mov
and
add
sub
sub
adc
jns
and
dec
fnstcw
or
jb
xor
outsb
mov
push
adc
push
ja
adc
xchg
shrb
sbb
pop
adc
loopne
mull
adc
mov
jp
pop
ljmp
or
jp
lods
sub
je
or
xchg
pop
or
sbb
jae
cmp
inc
adc
adc
pop
in
push
in
or
pop
ret
adc
icebp
and
jno
sbb
jp
mov
adc
pop
inc
cmp
sub
cmpsl
and
mov
push
lret
jo
or
mov
mov
or
lock
lea
mov
js
add
cmpb
jne
mov
sbb
popf
push
cli
adc
repz
lds
orl
fnstenv
ss
adc
push
add
cli
cmp
adc
add
shlb
add
aaa
in
or
movb
sub
cmp
popa
mov
pop
pop
jge
into
shlb
push
cmp
je
jl
fisubl
xchg
mov
bound
push
sub
cmp
in
pop
jne
and
leave
sbb
or
jmp
jne,pn
and
lods
sbb
fs
inc
mov
sbb
cmp
jae
movsl
xchg
in
or
xor
rclb
inc
sbb
jno
loop
or
adc
mov
push
mov
cmp
stos
jl
pop
fsts
adc
mov
push
leave
adc
fwait
call
addb
cltd
call
push
pop
pop
lret
sub
or
je
aam
sub
xor
and
shl
xor
push
or
mov
pushf
pop
jmp
bound
flds
call
loopne
xchg
iret
cmp
adc
cmp
and
daa
sti
das
sahf
ret
lock
push
add
cmp
sbb
cmp
enter
inc
xchg
cwtl
pop
mov
pop
push
xchg
mov
xor
nop
call
adc
in
xchg
addr16
cld
cld
and
xor
pop
scas
dec
inc
in
dec
jecxz
or
add
psubsw
hlt
in
bswap
fildll
xchg
sbb
cmp
sbb
mov
jmp
jmp
inc
adc
rorb
shll
sub
or
jecxz
mov
adc
sub
lock
dec
push
sti
mov
and
cmpl
sub
mov
mov
inc
test
jne
sbb
xchg
sbb
push
ret
loope
dec
jns
and
add
je
jge
adc
clc
sbb
dec
fs
sub
push
mulb
test
stos
decl
jl
pop
inc
jl
mov
and
and
adc
or
xor
cmp
push
adc
lods
push
negl
clc
js
jp
sbb
adc
or
cmp
cmp
clc
xor
lahf
adcl
js
adcb
sbb
sarb
mov
orb
xchg
pop
adc
mov
mov
clc
pop
int3
push
or
sbb
mov
ret
pop
rolb
inc
stc
in
arpl
mov
xor
es
jmp
mov
adc
lock
inc
sbb
mov
loop
adc
aaa
cld
push
roll
les
in
adc
sbb
dec
push
or
loope
dec
adc
jb
in
mov
adc
mov
imul
ret
sbb
hlt
mov
jecxz
test
jmp
loop
fadd
sbb
push
jmp
add
mov
xor
bound
enter
or
cmp
ja
add
mov
inc
jbe
xchg
popa
cltd
dec
add
pop
mov
jmp
inc
ljmp
cmp
sbb
xchg
dec
popf
or
adc
and
mov
out
cld
fildll
mov
dec
push
add
and
cli
pop
mov
ss
cmp
adc
push
cmpsb
add
jmp
es
std
aas
inc
jno
int3
sti
pop
and
xchg
inc
stos
loopne
push
push
jecxz
add
enter
pusha
dec
div
scas
add
inc
add
cmpsb
mov
inc
sbb
leave
cmp
stos
sbb
je
dec
dec
not
mov
pop
or
mov
lcall
sub
push
sbb
cmp
xchg
adc
jecxz
sbb
jns
or
or
sbb
jmp
cld
cmp
fbld
sbb
scas
jl
lds
sbb
out
xlat
into
movsl
popa
cmp
je
mov
inc
repnz
loope
into
xchg
daa
push
adcl
or
daa
push
or
movb
adc
or
lea
and
pop
leave
add
cli
mov
add
adc
je
add
pusha
push
jne
or
add
cmp
shl
push
mov
mov
ror
loopne
inc
stc
xor
and
adc
fs
dec
fisubrs
daa
xchg
mov
dec
js
out
adc
or
pop
inc
js
add
mov
cmp
je
out
cmp
and
out
popf
imul
push
aam
xchg
xor
mov
fildll
cmp
push
xor
xchg
icebp
xor
sub
push
cmp
jo
mov
inc
adc
push
add
in
lret
add
mov
sar
xchg
orl
shl
mov
inc
lods
repz
adc
aam
add
dec
pop
dec
das
xchg
fisubs
mov
or
mov
cmc
es
pop
fisubl
ret
mov
mov
mov
loop
ret
aaa
dec
mov
sarl
in
fdivrl
insl
xor
cmp
jecxz
adc
lea
shlb
pop
cmp
inc
or
adc
push
sub
mov
and
mov
push
fdiv
sti
xor
lret
int
xchg
out
test
sbb
cmp
adc
inc
pop
xchg
je
addr16
or
jmp
fnsave
loope
fsubs
jae
outsl
jno
push
inc
in
inc
arpl
lret
and
clc
fwait
bound
cmp
add
mov
sbb
jle
or
popf
fcomp
rcll
ret
gs
dec
sbb
nop
mov
or
or
bound
ret
ret
stos
test
testl
add
add
pop
clc
subl
lea
adc
mov
or
loop
sbb
lcall
js
sub
sbb
and
cmp
es
and
lock
test
mov
adc
jg
pop
outsb
mov
or
sbb
imul
mov
lret
xor
add
or
sbb
cmp
test
inc
fwait
add
inc
mov
ja
in
adc
or
test
shr
inc
pop
add
jmp
sarl
or
jne
div
mov
sbb
pop
add
mul
add
jb
cmp
jb
gs
add
push
xchg
mov
cs
ret
dec
ret
push
lret
xor
or
sahf
out
cs
stc
cmp
or
inc
lret
jge
or
sub
hlt
shl
pop
adc
dec
pop
cwtl
add
neg
sbb
addb
adc
jp
push
xor
sbb
push
dec
mov
inc
cmp
sbb
and
mov
lret
addr16
push
in
faddp
shr
rcr
fcmovnu
cltd
cmp
icebp
sbb
inc
jle
adc
dec
cltd
xchg
daa
fidivl
movsb
cmp
push
fcoml
aaa
sbb
mov
and
lock
aad
push
fsubrl
imul
pop
ret
jbe
jp
or
cli
or
add
mov
jmp
adc
push
xchg
out
mov
or
test
je
add
adc
jae
dec
ror
out
hlt
rolb
dec
or
adc
shr
or
loop
in
call
dec
shll
push
sbb
andb
add
lea
fisttpll
int3
arpl
xor
and
pop
add
cmp
mov
inc
add
push
push
cmp
lret
les
and
mov
mov
or
pop
adc
pop
xchg
in
fucomi
aas
or
sarb
mov
movsl
push
adc
sahf
xchg
adc
xor
or
repnz
xor
bound
pop
add
or
push
cmp
jne
inc
inc
dec
je
mov
cmp
jne
mov
popa
or
mov
cmp
xorl
pop
ret
and
test
mov
repz
je
mov
mov
adc
cmc
add
addb
ljmp
mov
sbb
pop
cmp
fsubrs
les
lret
pop
ret
pop
rcrb
out
jne
adc
xchg
sarl
adc
int
repnz
test
in
fdivs
adc
or
arpl
xor
addr16
mov
xor
shlb
cwtl
push
es
lret
aam
mulb
sub
jne
mov
lock
and
xchg
mov
lea
dec
sahf
or
orb
xor
cs
enter
sub
fwait
adc
mov
test
jmp
push
or
mov
mov
dec
mov
inc
jbe
push
adc
mov
mov
cmp
xor
testb
call
out
popf
stc
dec
in
test
dec
sbb
sub
sbb
add
dec
jecxz
mov
std
scas
enter
mov
ficomps
cs
push
or
inc
jl
pop
jg
or
jmp
sub
pop
ss
outsl
pop
sbb
dec
xchg
in
std
dec
xor
vpmacssdqh
outsb
cld
adc
xchg
add
jge
cli
aas
pop
in
add
xchg
ss
test
rcl
scas
shrb
and
enter
ss
bts
adc
or
aam
add
add
xor
adc
ds
pop
and
and
lea
pusha
push
lea
xor
nop
mov
mov
xchg
add
hlt
ss
sub
jmp
mov
add
shl
aam
pop
xor
shrl
sub
je
push
movsb
jo
add
stos
fstl
pop
xchg
sbb
cld
enter
jmp
sbb
add
sti
arpl
or
insb
test
popa
clc
int
sub
clc
mov
push
or
push
cmp
xchg
sbbl
fsub
push
popa
push
push
decb
test
add
dec
add
nop
shlb
push
cld
movzbw
push
jmp
xchg
stc
pop
xor
mov
xor
jb
shlb
mov
inc
mov
mov
sbb
jo
or
js
repz
sbb
out
add
jmp
in
je
xchg
mov
jnp
mov
jmp
xchg
push
lock
xchg
ret
xor
adc
inc
push
rcl
and
jmp
pop
sbb
add
je
add
sbbl
dec
jmp
push
push
decb
mov
outsl
cmpsl
xchg
inc
jmp
pop
xor
push
push
stc
cltd
mov
or
sbb
or
fisubs
sbb
sub
or
aaa
subb
repnz
push
inc
andl
mov
lds
mov
sbb
push
movsl
fs
cli
push
dec
jne
cmpsl
je
dec
sub
mov
pop
sub
lahf
push
xchg
or
mov
adc
rclb
xchg
fwait
repnz
xchg
fildl
and
sbb
dec
xchg
add
xorl
adc
sbb
inc
or
js
push
dec
mov
push
jo
sbb
mov
inc
add
jno
inc
push
mov
mov
mov
sbb
inc
xchg
enter
mov
sub
das
ret
mov
lret
and
cmpsb
loopne
sub
add
aam
or
mov
mov
jno
int
or
pushf
or
shl
mov
adc
dec
cmp
addb
sbb
mov
pop
int3
cmp
push
xor
xor
cmp
inc
jge
rolb
adc
movsb
adc
ret
xor
push
shlb
clc
inc
aam
inc
push
cmpsl
xchg
rcrl
dec
xchg
pushf
push
and
cmpsl
clc
or
mov
mov
adc
jge
or
xchg
sbb
mov
inc
or
mov
cmpsb
cltd
mov
mov
xor
mov
inc
push
inc
add
aas
mov
mov
dec
xor
xchg
fbld
xchg
mov
or
cmp
add
push
rcll
fldl
or
inc
push
sbb
and
popa
arpl
sub
cmp
mov
sbb
inc
dec
test
add
aad
xchg
jl
pop
lods
jmp
lret
jmp
mov
pushf
inc
out
ss
mov
xor
rep
movsb
or
addl
or
clc
add
in
xor
shl
dec
xchg
roll
add
jne
add
jle
cmp
and
mov
ret
sbb
sub
call
sbb
pushf
loope
mov
lret
inc
jnp
jno
in
shll
jnp
imul
sbb
cltd
pop
sbb
jle
xor
dec
repnz
jmp
jmp
lcall
or
lock
and
add
imul
mov
jmp
fiadds
push
inc
fcmovnu
adc
ror
sub
mov
je
push
or
roll
add
mov
dec
jle
setp
mov
in
test
or
sub
call
int
inc
fsubs
fmuls
xchg
xchg
or
or
mov
mov
test
stc
and
nop
mov
push
out
adc
mov
mov
xorb
and
mov
xchg
shrl
cli
sub
insb
push
nop
insb
pop
ja
push
fs
in
mov
jb
pop
popf
adc
fsubrs
cmpsb
jno
pop
lea
xor
push
enter
lea
dec
fsubr
lea
cmp
sbb
aaa
xor
adc
lea
push
fs
push
test
popf
pop
lea
les
push
sub
xchg
inc
stc
push
sarb
lahf
dec
mov
mov
push
and
sbb
mov
sub
mov
test
je
pop
nop
lret
adc
or
leave
cmp
inc
leave
add
mov
lret
out
xchg
mov
pop
sub
jb
mov
pop
dec
daa
xchg
loopne
adc
sub
into
xor
imul
lea
fsubl
fs
xchg
daa
mov
xchg
insb
int3
jb
int3
into
int3
or
mov
int3
leave
push
inc
ret
jae
mov
dec
fs
push
iret
fs
fs
and
dec
or
cmp
lahf
ss
lcall
jne
and
sub
into
daa
or
or
in
sbb
nop
push
pop
xor
or
inc
popa
pop
pusha
pop
mov
inc
mov
push
mov
mov
sbb
push
lcall
imul
add
lcall
dec
jne
push
lods
adc
lea
lods
or
adc
push
je
aam
stos
int3
les
sub
lahf
pop
push
es
lods
add
push
mov
daa
jmp
incl
or
mov
sub
lea
push
mov
adc
sbb
mov
movsb
jmp
xchg
popf
ret
test
and
arpl
push
les
shr
fcompl
dec
insl
pop
push
cmc
loop
dec
loopne
adc
dec
add
jnp
lods
nop
or
sbb
incl
jg
lret
into
xor
mov
push
ljmp
sbb
push
or
movsl
sbb
mov
xchg
lods
lds
mov
icebp
mov
repz
adc
es
push
jmp
sub
jbe
test
jmp
mov
mov
dec
mov
push
xor
dec
repz
aas
ljmp
mov
test
and
leave
sub
leave
in
dec
fdivl
dec
test
andl
jmp
mov
mov
loope
or
stos
cmpsl
inc
cld
dec
push
mov
push
push
nop
fadds
aam
mov
mov
push
dec
jecxz
and
sbb
adc
shll
addr16
xchg
xchg
outsb
insb
and
or
dec
repz
xchg
pushf
mov
push
sub
sbb
fwait
shl
les
inc
mov
int
or
push
or
mov
lahf
in
add
sub
je
test
mov
add
add
movsl
dec
mov
inc
mov
fwait
and
or
adc
outsb
orl
enter
mov
mov
loop
mov
dec
add
test
lock
cmpsb
push
pop
and
ljmp
add
hlt
movsl
and
rorb
sbb
iretw
testb
cmpsl
cmp
loop
dec
push
das
iret
inc
push
pop
shlb
rcrb
test
lcall
sbb
cltd
push
imul
cmp
or
xchg
add
mov
mov
or
cmc
adc
outsl
jecxz,pt
test
sbb
int3
popf
roll
mov
push
cmp
push
adc
subl
pop
outsl
inc
fdivl
xchg
mov
add
mov
xlat
popw
sub
int3
jg
in
lods
ds
leave
xchg
mov
cmc
ret
push
push
movsb
dec
cmp
mov
xor
lea
outsl
xor
cmpsl
aaa
cmp
xchg
sti
cld
imul
jle
lods
lahf
xor
mov
xchg
nop
enter
loopne
xrelease
int
mov
leave
cmp
pop
jnp
xchg
and
fcompl
fldcw
jle
jo
mov
inc
mov
add
test
inc
jbe
add
ret
mov
fwait
mov
jne
jbe
sbb
pop
sahf
add
push
and
lret
sbb
pop
mov
popf
loop
or
pushf
adc
sbb
insl
cltd
xor
xchg
and
and
mov
sbb
sub
dec
xlat
add
lods
cltd
pushf
es
sub
call
leave
and
mov
sbb
mov
mov
popf
test
xchg
fldl
xchg
inc
cmp
adc
lret
test
xor
inc
js
fldt
xor
test
fadd
xchg
push
add
es
lea
aas
and
sbb
in
jl
aas
adc
test
js
mov
mov
sbb
sahf
lret
and
iret
repz
test
mov
xchg
mov
movb
add
add
pop
mov
stc
mov
mov
test
loope
mov
mov
add
jmp
in
add
add
dec
ret
popa
pop
xchg
loopne
jo
sbb
mov
cmp
jecxz
mov
xchg
pusha
shl
mov
addr16
mov
add
add
add
add
push
or
push
loop
pop
or
push
or
pop
rclb
or
mov
xchg
adc
jae
jl
adc
jnp
inc
stc
inc
push
cld
in
andnps
fdivrl
xchg
mov
fnstenv
or
movl
repnz
out
adc
leave
pop
mov
adc
mov
pop
cltd
or
cmp
fsubl
jb
sub
xor
cmp
dec
jmp
push
xlat
and
faddl
xor
fisubrl
mov
ret
add
fistpll
fsubs
and
push
add
pop
inc
jle,pt
push
orb
mov
je
hlt
lea
jmp
loope
fwait
or
jecxz
shlb
xchg
adc
in
push
dec
je
xchg
repnz
or
arpl
mov
dec
je
push
lods
push
pop
mov
jne
push
or
jne
push
and
mov
jbe
add
daa
in
cmp
iret
sti
hlt
push
xchg
or
rol
inc
mov
aas
inc
inc
jmp
fsub
mov
pop
pop
push
fs
or
mov
stc
iret
fcomps
inc
lret
addr16
clc
mov
lea
push
out
sbb
out
cld
orl
mov
in
xor
jo
sub
xchg
and
dec
mov
mov
push
mov
das
adc
hlt
iret
mov
clc
sbb
lea
mov
cmp
rcl
les
ljmp
gs
sbb
push
sub
add
and
add
sbb
mov
pop
sbb
nopl
inc
push
dec
pushf
inc
jge,pt
push
sbb
mov
subb
mov
jmp
jo
xchg
into
xchg
mov
cld
dec
iret
jp
rorl
push
xchg
rcll
imulb
insb
popf
push
pop
mov
cmp
adc
push
rcll
sub
outsb
fbstp
mov
sub
cmp
dec
push
test
filds
dec
adc
fists
xchg
inc
sbb
mov
fcmovnbe
inc
clc
imul
call
xchg
or
xor
int
adc
iret
ret
sahf
insb
out
push
mov
lds
push
jg
sti
push
mov
rorb
je
je
sbb
and
jns
outsb
sbb
inc
mov
hlt
mov
rorl
adc
jo
lea
mov
mov
adc
cli
mov
test
mov
mov
jns
and
sbb
pop
gs
test
add
add
jne
pop
or
pop
fsubl
xchg
lock
xchg
das
movsl
in
jbe
movsb
inc
jbe
sub
add
andl
rclb
push
xchg
cmpsb
and
mov
dec
inc
xchg
aam
xchg
enter
xor
push
lods
lds
inc
imul
mov
in
out
mov
sbb
icebp
dec
mov
loope
call
pop
call
mov
jle
push
roll
jns
movsb
loopne
pushf
push
ss
fidivl
fsubr
cld
cmp
fcomps
or
out
sarl
lods
fst
pusha
cmpsb
into
iret
xchg
shlb
or
inc
int3
int3
repnz
out
enter
push
xor
sub
out
push
or
loopne
pop
pop
pop
aam
jae
sbb
rcrl
mov
mov
cmp
sbb
lock
add
test
sub
jbe
xor
dec
fwait
hlt
sub
jne
push
orl
mov
add
pushf
sub
jne
mov
lds
fsubrs
xor
mov
adc
pop
push
and
xor
push
push
cmpsb
sbb
ja
mov
xchg
xchg
jns
xor
movsb
inc
jbe
mov
sub
push
push
push
jp
pop
sti
pop
xor
jmp
movsl
arpl
je
mov
cmp
movl
push
loopne
es
insb
inc
adc
add
xchg
clc
adc
mov
icebp
xorb
out
cli
adc
cmp
push
je
push
mov
xchg
arpl
add
jmp
fnsetpm(287
sbb
sub
fwait
je
cmc
nopl
sub
dec
les
shrb
rcl
mov
out
sub
jne
clc
jecxz
aas
sub
xor
jecxz
aas
out
cmp
test
out
clc
inc
inc
cmpl
or
out
add
xor
int3
xchg
idivb
sub
sti
and
push
push
subb
aad
aas
jl
orb
arpl
loopne
or
pop
push
rol
inc
fadds
xor
sarl
ss
xor
inc
and
fldl
sbb
cmp
xchg
jmp
lar
push
xchg
mov
inc
packuswb
inc
test
ja
or
sarl
int3
jnp
pop
mov
in
ds
fwait
add
sub
mov
and
ret
movl
clc
xchg
packssdw
imul
loopne
leave
in
push
add
cwtl
mov
mov
mov
mov
pop
fnclex
mov
pushf
in
sbb
inc
in
add
push
cmp
call
jb
push
xor
sub
sahf
sbb
pop
test
xchg
and
sbb
loop
cwtl
sbb
lcall
sub
dec
loopne
in
adc
dec
adc
hlt
lea
pop
js
mov
mov
adcl
xchg
lock
adc
ja
cmp
sub
call
ss
mov
sub
mov
aaa
in
sub
adc
insb
xchg
rorb
inc
push
add
or
xor
fimuls
push
jecxz
sub
mov
xor
sub
cmp
mov
in
test
pop
add
adc
popa
inc
mov
nop
jmp
call
add
sahf
mov
xchg
and
jae
sub
add
scas
xchg
mov
ljmp
sbb
in
jne
dec
pop
cmpsl
mov
sbb
stc
inc
jne
in
movsl
cs
in
sub
ret
or
and
aas
daa
test
jnp
sbb
inc
mov
movsl
push
inc
sbb
inc
mov
lret
stc
data16
loop
test
dec
push
push
shlb
push
cld
xchg
add
arpl
mov
sete
cmpl
jno
jne
sbb
xchg
enter
cmp
jecxz
inc
in
pushf
adc
out
cs
dec
stos
aad
dec
push
sbb
lea
adc
adc
pop
mov
inc
iret
fsubs
std
and
pop
sub
push
int3
les
and
pop
sub
push
pop
add
mov
in
xorb
fldl
pop
add
cmp
enter
push
lret
movsb
imul
sbb
push
inc
push
sets
das
std
inc
mov
cmpsb
mov
fisubl
mov
cmp
scas
popa
mov
repnz
cmp
jge
jae
dec
lahf
js
les
cmp
mov
jmp
mov
fimull
movsl
cmp
add
lret
roll
jg
lds
xor
sar
or
repz
lcall
je
shlb
lret
pop
out
or
xchg
popa
lea
push
test
xchg
sub
stc
pusha
and
stos
test
jge
dec
cwtl
in
jae
mov
addr16
sub
cmp
lea
sub
lock
shlb
ret
dec
and
cltd
mov
sub
xchg
scas
xchg
cs
hlt
shrl
stos
xchg
cmp
adc
inc
inc
int3
icebp
xchg
lock
mov
shl
sti
int
adc
or
sub
int3
sbb
or
xor
cmp
or
mov
adc
mov
add
mov
xor
jmp
push
sub
pop
mov
js
cmp
je
nop
jne
rorl
jp
shrl
int3
sbb
fs
cmpsb
pop
lea
cmp
stos
ljmp
daa
and
subl
dec
cwtl
cwtl
jmp
cltd
dec
cmpb
adcb
mov
adc
sub
insb
jmp
mov
cwtl
push
xor
test
sbb
dec
xor
adc
lret
test
pop
jne
loop
dec
outsl
js
xor
push
xchg
push
in
js
cmp
and
xchg
ja
fmuls
xor
std
add
jns
add
enter
xor
and
adc
orb
mov
cmp
sub
imul
add
and
mov
test
mov
fwait
out
push
mov
mov
lock
sbb
ljmp
imul
jecxz
pushf
outsl
jne
cmp
mov
mov
add
es
lds
adc
stos
mov
dec
xor
insl
xor
ss
xchg
bound
add
add
adc
mov
ds
aam
out
ljmp
adc
imul
fldenv
loopne
shrl
in
pop
jmp
icebp
push
es
je
or
add
dec
aam
cmpsl
jne
in
cmp
les
pop
test
je
jo
js
mov
mov
popf
gs
inc
mov
xor
rol
pop
and
in
mov
xor
dec
ljmp
loop
mov
scas
pop
dec
lea
shll
flds
mov
cmp
inc
xor
jne
in
mov
jns
inc
or
mov
adc
rorb
pop
sbb
aas
and
cmpsb
cltd
mov
lods
inc
pop
les
mov
into
enter
push
push
or
push
idivb
sub
mov
insb
nop
scas
jg
sbb
movsl
sub
sbb
add
and
lcall
in
mov
inc
das
mov
fsubrp
call
iret
call
inc
std
data16
inc
xchg
xchg
test
pop
int3
add
repnz
lock
lds
insl
mov
cmp
das
push
cmp
add
adc
mov
popf
not
repz
jl
negl
or
cmpsb
pop
add
sub
gs
inc
and
xor
push
shrb
cmpsb
push
call
add
cmp
out
lea
fdivrl
mov
popa
xchg
iret
push
ss
cmp
pop
ret
in
test
call
out
sub
outsb
loopne
mov
xchg
nop
pop
xchg
jb
std
pushw
xchg
mov
enter
hlt
fsubr
pop
sbb
cmp
aam
rclb
popl
enter
mov
cmpsl
xchg
mov
or
sbb
dec
xor
es
cmp
sub
push
pop
fcomp
sbb
cmp
push
mov
jmp
mov
push
jno
jl
pop
in
adc
jb
mov
mov
icebp
jmp
das
enter
xchg
or
adc
jbe
or
or
jp
shr
xor
aam
jne
xchg
cmp
push
push
or
dec
add
je
jae
xor
sbbl
adc
mov
fmul
jl
aad
mov
sub
loope
xchg
test
sbb
xchg
add
sbb
pop
lret
mov
lret
test
jecxz
fadd
add
jmp
sbb
add
dec
pop
cmp
add
sbb
mov
mov
loope
aad
rcl
lret
ret
xchg
sbb
lret
or
add
add
push
les
incb
mov
mov
bound
mov
push
push
rol
xchg
mov
and
xchg
loop
ret
push
xchg
and
fs
sub
adc
jno
add
or
shll
jmp
aas
movsl
xor
out
les
push
and
adc
push
mov
adc
and
das
cmp
into
shlb
dec
pushf
mov
pop
push
mov
insl
adc
lcall
int
sar
push
xchg
stos
cwtl
movsb
int
and
shlb
movb
xchg
xor
mov
lods
push
sub
and
push
and
sbb
push
adc
rsqrtps
and
cltd
push
lods
fidivrs
jbe
cwtl
pop
xor
jmp
adc
cmp
jge,pt
adc
sbb
test
test
insl
push
xchg
mov
test
inc
repnz
mov
lahf
movsb
iret
fwait
xchg
jnp
test
or
mov
mov
sub
rol
add
xor
ret
jmp
dec
xor
add
loop
imul
lea
subl
cmp
sub
or
add
and
sbb
leave
jge
jnp
and
and
push
xor
cmp
jb
push
out
lea
and
ja
sub
sar
inc
in
dec
data16
add
push
pop
and
cli
jp
add
aad
icebp
xchg
aas
imul
lret
int3
in
and
jle
addr16
stos
mov
iret
ret
jbe
pop
adcl
cs
lcall
mov
dec
les
sub
cmpb
je
mov
ret
sub
je
lcall
inc
add
or
mov
adc
add
dec
in
inc
daa
insb
sbb
mov
push
lret
xchg
jecxz
test
rcll
push
fldl
mov
add
mov
or
push
or
dec
ja
dec
cmpl
cmc
loop
loop
scas
pop
xor
sbb
and
and
xchg
inc
cli
adc
push
cld
sub
inc
or
jmp
jbe
mov
popf
cmpb
pop
and
rorb
loop
inc
mov
push
mov
cmp
rorl
divl
and
repnz
cmpsb
ret
ss
repz
gs
lock
push
xchg
call
adc
cmpsb
into
or
jge
or
movsl
push
rclb
aam
cmpsl
push
fs
add
inc
sub
jge
out
les
push
shll
sbb
addl
inc
aad
jg
pop
mov
xchg
hlt
or
fimull
and
dec
adc
loopne
jo
movsl
cwtl
in
jns
xchg
push
loop
loope
mov
jecxz
loop
or
jle
ss
add
loop
lds
lods
or
mov
add
testb
shll
je
sub
and
ja
dec
mov
popf
cld
push
mov
adc
daa
rcrl
lock
in
jno
push
call
push
or
inc
lea
xchg
add
mov
cmp
push
sbb
sbb
sbb
jge
popa
or
imul
into
loope
push
push
mov
add
adc
xchg
adc
pop
insl
std
cmp
dec
stos
jae
xchg
test
test
scas
push
or
mov
test
dec
add
jno
imul
loope
sbb
sbb
adc
inc
or
nop
call
mov
pusha
lret
add
les
or
fwait
cmc
testb
aas
or
push
movsb
insl
xchg
fisttpl
aas
inc
jle
add
mov
sub
mov
cld
sub
addl
loope
and
sti
fcomps
and
xor
pop
sub
push
sar
push
or
and
push
hlt
movsl
mov
dec
mov
push
adc
sub
and
inc
lea
sub
cmp
test
imul
mov
sbb
pop
in
iret
add
ret
mov
and
adc
in
push
imul
roll
mov
jmp
push
or
test
call
push
lea
js
push
and
ror
or
outsb
jns
and
add
dec
jo
mov
and
adc
mov
mov
hlt
push
cmp
or
mov
flds
mov
adc
xchg
rclb
xchg
xor
sub
or
test
mov
cs
sub
dec
dec
adc
hlt
push
pop
out
adc
and
inc
rcl
xor
mov
les
lock
xor
pop
das
inc
mov
or
or
clc
cmp
fs
mov
push
cmp
dec
cld
negb
lea
sub
push
adc
sub
loope
or
lcall
loope
inc
lock
jbe
adc
test
and
xchg
xchg
adc
movsb
mov
outsb
adc
cmp
xchg
fidivl
push
mov
sbb
xchg
and
mov
push
mov
or
or
or
or
sub
in
sbb
testl
push
xor
je
out
fsubs
dec
lret
ljmp
fdivrp
cmpsl
mov
adc
or
setb
clc
ja
dec
enter
clc
inc
push
mov
or
fs
mov
mov
inc
jne
cmc
arpl
stos
aaa
addr16
sub
loope
cmp
dec
mov
enter
inc
jmp
pop
fdivrl
dec
push
xchg
add
xor
sub
movsb
cmc
movsb
jo
xchg
cli
add
add
and
int3
or
or
dec
daa
repnz
jle
add
popa
sub
push
inc
adc
add
out
je
inc
xor
out
addr16
fsts
xor
arpl
inc
lcall
mov
and
inc
or
test
jae
and
sahf
test
mov
gs
arpl
popf
fisttpl
mov
adc
inc
fmull
cmp
push
add
push
ficoml
xchg
xchg
cmp
je
js
lock
clc
ret
or
mov
jmp
lods
push
mov
pop
xor
add
fucomi
xchg
push
xchg
xor
cmp
or
inc
mov
int
inc
test
mov
mov
movsl
in
or
adc
or
or
adc
fwait
mov
add
ror
push
mov
movsb
ljmp
xor
stos
add
and
pop
sbb
in
mov
inc
jmp
push
inc
leave
test
mov
rcll
xchg
aas
mov
stos
outsl
stos
dec
inc
mov
fisubrl
mov
cmpsb
xchg
add
dec
mov
sbb
or
incb
xchg
in
add
mulps
mov
adc
xchg
in
inc
imul
aas
dec
hlt
andb
push
mov
sbb
mov
push
enter
rcrl
sub
push
push
jp
dec
repz
push
inc
insb
jns
jmp
int3
cli
lea
or
sbbl
and
cmc
add
lcall
jnp
test
mov
test
mov
hlt
mov
stos
loop
loop
int3
mov
popf
sbb
fsubs
out
xchg
inc
outsb
hlt
movsl
pop
cmp
push
fsubl
bound
pop
outsb
pop
or
inc
push
fmull
cld
cmp
mov
xchg
push
mov
mov
xchg
mov
in
in
xchg
dec
outsl
or
enter
movsb
cmp
mov
cmp
popf
inc
into
inc
lret
sub
cld
xor
lahf
adc
inc
dec
dec
in
mov
inc
call
in
mov
push
push
pushl
cmc
and
in
push
or
ljmp
adc
aam
cmp
xorb
rcrl
out
sbb
xchg
jl
fisubl
dec
push
or
rcrl
test
dec
sbb
jo
daa
push
mov
shl
add
cli
mov
jge
pop
sub
in
dec
xchg
fs
fldt
xchg
sbb
cmp
cltd
js
dec
stos
mov
mov
sti
xchg
out
dec
leave
sti
xchg
push
mov
or
sete
pop
mov
int3
hlt
sbb
inc
shrl
mov
std
adcl
mov
mov
adc
jge
sub
insl
sbb
cmp
cmpsl
fsubrl
nop
lcall
sub
std
out
je
mov
lret
shlb
dec
jg
rorl
pop
xchg
dec
mov
push
mov
out
inc
mov
mov
xchg
or
jmp
dec
sarb
adc
adc
out
mov
adc
icebp
sub
hlt
cld
and
push
and
sub
js
data16
cmpsl
cltd
andl
sbb
rcrl
stos
dec
ljmp
shr
xchg
sbb
pop
dec
cltd
inc
insb
shr
or
jno
xorb
inc
lods
adc
ja
mov
cmovne
jmp
aaa
add
jp
dec
adc
xchg
loopne
inc
sub
ret
push
shr
jbe
mov
imul
les
rcrl
ljmp
shl
add
enter
lods
nop
lds
mov
push
dec
and
in
mov
mov
aas
jbe
and
scas
add
loop
dec
push
add
dec
mov
and
jae
cmpsl
test
pushf
fdiv
rcrb
mov
sub
mov
les
ficoml
and
mov
sbbb
or
movsbl
test
add
adc
shll
mov
and
and
mov
ret
les
ret
into
orb
or
testl
movsb
sbb
push
and
push
add
lret
bnd
adc
jno
mov
dec
lds
mov
push
shlb
leave
pop
push
xchg
cmp
and
sar
fcomps
inc
cwtl
fcomp
fs
fidivl
xchg
mov
push
in
mov
int3
sub
aam
fistl
adc
int
rorb
inc
out
cmp
sub
adc
cli
push
mov
jne
ds
xchg
and
inc
pop
xor
inc
aam
stc
push
out
aam
xor
fnstsw
in
call
cmp
cmp
mov
inc
orl
mov
aam
test
repnz
inc
add
popa
movsb
sahf
int3
xor
dec
into
or
pop
add
je
sarl
push
loopne
cmp
push
adc
cmpsl
mov
adc
xchg
in
pop
loopne
dec
stc
add
mov
and
mov
push
nop
lret
lea
mov
xchg
aaa
into
fcomps
lret
insb
fsubr
or
and
fmuls
push
repz
cmp
or
aad
pop
call
or
addr16
pop
pop
imul
mov
mov
mov
cmp
or
inc
xchg
fnop
pop
into
pusha
xchg
in
lret
cs
dec
cltd
lods
sub
clc
mov
mov
cmp
push
test
popa
add
scas
jb
cmp
mov
pop
push
or
ljmp
ljmp
jecxz
popa
dec
jp
or
mov
adc
adc
test
out
out
inc
mov
jmp
xchg
addr16
adc
in
addl
push
sub
out
dec
mov
sub
dec
jne
js
movsl
dec
popa
loope
imul
xchg
scas
mov
sub
lods
cltd
jo
ret
cs
add
or
push
shll
mov
cmp
dec
and
jbe
cmp
mov
rorl
cmp
pop
lds
cmp
fcomps
xchg
push
in
jb
dec
jno
jge
in
adc
adc
outsl
int3
in
or
mov
mov
out
in
inc
cmp
aam
and
inc
lahf
inc
and
xor
sbb
and
ret
mov
int3
jmp
call
sbbb
mov
shll
iret
test
inc
add
popa
test
mov
inc
or
pop
sarl
cmp
xchg
push
sbb
fs
ret
loop
dec
or
cmp
pop
lods
jecxz
fbstp
mov
mov
add
fwait
sbb
push
sarl
lock
lock
movsb
dec
mov
push
add
movsb
sub
cmpl
sbb
mov
dec
mov
dec
sub
ljmp
xchg
cmc
ror
test
stos
aaa
mov
jne
shrb
jno
xor
mov
fistpl
addr16
ds
popa
lcall
shlb
adc
shrb
mov
xchg
add
or
mov
mov
leave
sub
outsb
xchg
sbb
jl
shl
popf
shlb
jmp
mov
inc
cmp
sbb
fldt
inc
pop
aas
nop
sar
cmp
and
cltd
call
aas
in
dec
cmpsb
sbb
cmp
leave
mov
sarb
arpl
cmp
pop
lods
test
jno
jno
enter
mov
test
jl
jl
loopne
call
loopne
xchg
js
insb
movsl
sub
subb
mov
mov
push
mov
cmp
lock
xchg
push
xor
fildl
and
inc
xchg
push
leave
push
hlt
lret
adc
aas
mov
cmp
lahf
in
pop
cmp
or
in
jg
lahf
fsubr
mov
mov
cltd
ss
in
or
sub
push
ljmp
mov
mov
stos
insb
sbb
mov
loop
scas
sahf
lods
jo
stos
or
push
lods
sbb
adc
aam
les
or
js
dec
popf
xchg
out
add
movsb
fadds
fcomps
mov
pushf
notb
shrl
lea
sub
mov
push
mov
jne
mov
fmuls
lods
mov
pop
adc
add
rorl
or
adc
adc
mov
mov
sbb
cmpsb
jmp
sbb
xchg
ret
cmpsb
mov
sub
jg
es
mov
jp
cmpsb
ret
jbe
add
jne
add
aaa
pop
roll
xor
or
sbb
inc
dec
dec
enter
push
and
lcall
insl
mov
adc
add
adc
jge
cld
pop
xchg
cmp
mov
or
add
dec
push
xchg
xchg
in
mov
inc
dec
pop
out
nop
iret
cmp
hlt
jmp
pop
dec
push
aas
jge
frstor
and
dec
lret
pop
adc
jnp
dec
rol
mov
or
lret
je
adc
fldt
int3
lea
lods
pop
dec
fadds
push
xor
jmp
fs
les
js
ja
inc
lea
sub
rorl
cmp
push
shll
cmp
loop
daa
cwtl
out
xor
jmp
clc
mov
cmpsb
in
insl
fisubrl
or
ret
cmp
in
in
popf
sbb
jno
lret
rcrl
inc
movb
xchg
pop
inc
inc
and
movsl
mov
mov
lfs
cwtl
or
pop
fiaddl
mov
jg
xor
xor
pop
and
cmc
push
sub
hlt
fidivl
push
cmp
and
lcall
mov
fucom
in
add
and
leave
in
sbb
add
leave
lea
or
ret
insl
cmp
xor
mov
orb
shl
cmp
jmp
push
loopne
shlb
shlb
jno
popf
rcl
sbb
jmp
cmp
mov
out
shrb
cmpsl
mov
rorb
mov
sub
xor
jne
aam
aam
aam
test
adc
fiadds
addb
addl
in
in
add
lock
fbld
call
pop
xchg
xchg
sti
ljmp
mov
mov
pop
stos
data16
sbb
push
in
mov
jle
inc
pop
loopne
imul
mull
sbb
pop
loopne
mov
shl
mov
lods
aam
movsb
jb
mov
xor
in
dec
mov
in
in
sti
sbb
lea
insl
dec
pop
inc
push
dec
add
movsb
iret
mov
dec
lcall
pop
fadds
es
fwait
imul
es
and
cmc
xchg
icebp
and
and
and
movsl
call
jne
repnz
insl
ljmp
or
pop
fdivl
roll
xor
mov
mov
mov
inc
ljmp
sbb
imul
sbb
or
ficompl
mov
jne
imul
fdivs
pop
jp
xlat
rcl
add
and
rcrb
mov
nop
xlat
repnz
fs
and
cmp
add
jns
pop
sbb
push
std
sub
rolb
push
mov
imul
push
in
sbb
ret
inc
xor
sub
pop
fwait
lods
push
push
xor
jbe
je
orl
pusha
xchg
les
dec
outsb
loopne
in
sub
inc
dec
call
push
mov
test
shl
adc
stos
pop
mov
mov
les
push
lea
mov
sub
fimull
test
shlb
pop
out
add
jmp
fs
mov
adc
dec
and
outsb
mov
inc
jge
mov
or
test
aad
inc
sub
cmc
fdivr
cmp
jp
fdivrs
bound
jb
mov
or
push
sbb
rol
lock
enter
shll
flds
xchg
loope
into
sti
add
int
pop
mov
sbb
daa
push
sub
repz
stos
mov
fldl
test
and
mov
aam
test
mov
cmc
repnz
xor
and
pusha
dec
imul
xchg
pusha
ret
shlb
lret
or
xchg
fwait
std
sbb
jmp
jb
dec
cmp
clc
and
mov
pop
xchg
mov
or
or
jb
outsl
enter
inc
xor
or
cld
cmp
mov
repz
cmpsl
add
push
mov
adc
in
dec
pushf
in
push
repnz
out
sub
outsl
cwtl
and
mov
xchg
jl
movsb
movsb
lret
outsl
das
ret
and
cmp
dec
inc
or
fsts
add
into
xorl
adc
sbbl
test
addb
sbb
je
cmp
fimuls
push
pop
loope
mov
das
push
add
jmp
aam
in
cmp
ret
cmc
roll
cmp
sti
jb
hlt
jbe
test
cmp
test
test
cwtl
pop
lods
test
pushf
je
dec
inc
call
jp
in
jbe
rcl
mov
cld
call
ss
ret
dec
mov
cwtl
icebp
push
fucompp
ljmp
test
push
jbe
adc
xchg
cmp
sub
dec
cmp
into
icebp
sar
cmp
xchg
mov
jmp
push
pushf
jne
mov
subl
cwtl
bound
push
mov
scas
add
cld
sbb
mov
xchg
sub
lea
test
je
lret
out
push
pop
and
jno
and
cli
decb
jnp
pop
pop
fistpll
imul
or
test
and
add
add
addr16
push
movsb
xchg
aaa
dec
add
or
jne
xchg
inc
and
fld
and
popa
push
int
push
aaa
test
mov
xor
das
mov
push
add
cmpsb
inc
xchg
inc
ja
sub
sbb
in
adc
dec
stos
sbb
and
stos
xchg
mov
adc
adcl
movsb
add
das
xchg
mov
mov
test
test
testb
cli
pusha
push
mov
or
jae
xchg
js
cs
and
or
lcall
xchg
pop
stos
ss
cld
or
scas
inc
pushf
add
xchg
fwait
or
sbb
in
add
add
sarl
cmpsb
push
dec
in
lret
jb
inc
and
add
outsl
pop
adc
lods
jo
loop
jne
nop
jne
add
or
mov
out
push
adc
adc
call
adc
push
clc
or
inc
in
add
or
jne
or
test
in
scas
or
push
jp
mov
pop
int3
sub
clc
sahf
out
test
data16
mov
add
pop
mov
add
xor
stos
push
mov
mov
add
inc
xor
and
test
inc
adc
leave
xchg
in
mov
xor
adc
fiaddl
jae
popf
sbb
addr16
js
inc
aaa
or
or
sbb
test
add
push
or
stos
mov
nop
inc
or
arpl
adc
push
inc
aam
cmp
movsb
jp
jecxz
cmp
lahf
mov
add
adcb
add
inc
inc
sub
jmp
aam
nop
loop
lret
add
lods
nop
pop
sahf
rcrb
push
mov
enter
push
in
adc
mov
adc
xor
add
mulb
in
xchg
lock
inc
lcall
clc
mov
aam
sbb
dec
or
jecxz
stos
push
cli
or
cmp
mov
call
and
decl
and
jge
jno
sub
test
cli
push
sub
rorl
sbb
cmp
pop
ret
or
xor
fsubp
add
out
stos
add
inc
or
or
cmp
pop
in
push
les
and
xchg
aaa
lret
add
mov
in
mov
ds
xchg
dec
bound
in
or
faddl
xor
jae
movb
daa
call
jnp
and
dec
nop
lea
jge
and
dec
clc
and
insl
dec
inc
xchg
inc
pushf
incb
mov
test
pop
pmullw
sbb
mov
out
ds
mov
or
int
lahf
or
mov
je
add
push
hlt
or
inc
in
sub
sbb
push
jae
xchg
jl
or
xor
mov
mov
sub
pusha
push
mov
lcall
gs
in
dec
mul
cmp
push
adcb
mov
xor
xchg
mov
fmuls
je
incb
mov
fcoms
mov
mov
popa
shr
movsl
push
mov
pop
jae
mov
lret
xchg
lea
xlat
mov
lods
js
jmp
adc
xor
xchg
add
nop
mov
pusha
xor
or
cmpsl
das
sbb
sbb
or
xchg
push
sub
jle
cs
jne
xchg
xchg
push
jo
sbb
xor
insb
jne
push
push
sbb
lcall
push
add
cmp
ja
syscall
int
push
sarl
nop
les
inc
dec
arpl
and
mov
and
pushf
pop
mov
add
mov
sbb
jae
xchg
xchg
pushf
mov
stos
add
xor
add
fstl
es
jge
add
mov
sub
jge
push
fstl
fisttps
xchg
sbb
cmp
jge
lock
add
lret
sub
cmpl
sub
mov
mov
test
lea
arpl
add
and
mov
sbb
enter
out
ja
inc
xor
movb
movsb
inc
pushf
movsb
mov
push
repnz
dec
mov
mov
and
mov
dec
add
sbb
divl
dec
testl
test
test
add
add
jnp
xor
dec
adc
std
out
movsb
dec
xor
icebp
in
clc
imul
and
and
mov
pop
mov
xor
mov
push
addr16
xchg
test
pop
push
mov
adcb
popa
aam
or
and
pop
out
sub
xor
pop
ja
xchg
inc
lret
dec
adc
or
sub
test
bound
jp
in
insb
hlt
and
call
push
mov
cmp
adc
arpl
in
lock
std
cmp
and
pop
stos
add
cmp
pop
jge
testl
adc
sub
stos
push
adc
adc
shlb
popa
je
nop
int
fs
add
or
cmp
shrl
mov
inc
or
inc
ljmp
xchg
push
mov
insl
mov
mov
xor
sub
and
dec
test
push
and
leave
jns
addl
add
insl
and
fisttps
inc
in
mov
jae
cmp
les
cmp
pop
push
aad
inc
jle
jo
inc
jmp
adc
mov
xchg
and
or
jmp
cmpl
push
je
or
dec
lret
pop
mov
add
sub
inc
jmp
in
clc
popa
jp
dec
jmp
test
adc
insb
push
xlat
aas
test
push
jg
add
sti
lahf
addb
imul
cmp
xor
and
ficoml
sahf
sbb
or
ret
add
fstp
jne
fmull
add
insl
clc
fstpl
lock
out
fnstsw
test
jne
xchg
pop
mov
cmpsl
nop
fcompl
mov
je
lea
je
xchg
mov
in
push
pop
push
mov
jno
adc
movsbl
xchg
mov
push
in
rclb
push
xchg
inc
out
hlt
jmp
jnp
fs
add
stos
sbb
mov
or
xchg
push
xor
mov
mov
mov
mov
mov
inc
pop
ret
push
fisubs
push
sbb
push
out
cmp
je
mov
fcmove
lcall
and
mov
int
cmpsl
dec
dec
addl
adc
testl
or
mov
ljmp
jne
pusha
fstps
pop
inc
shr
les
or
arpl
or
pop
mov
and
push
out
push
mov
add
adc
xchg
adc
pop
dec
out
clc
mov
mov
mov
mov
mov
push
push
ljmp
dec
sbb
aam
lea
push
rcrl
or
xchg
test
inc
adc
push
and
sub
add
and
mov
sahf
cmp
pushf
lret
xchg
or
push
jmp
out
or
cli
mov
ficoms
adc
fsub
es
add
jb
leave
or
push
lahf
shll
insl
push
ss
mov
adc
insb
or
cmpl
andl
add
or
cld
cmp
insb
rcll
mov
sets
movb
mov
fs
in
mov
je
and
jge
push
sbb
or
or
and
fs
cltd
mov
fdivp
stc
or
orl
lods
jns
cli
test
mov
aas
cltd
add
push
xchg
add
sbb
push
pop
add
push
jne
push
movsl
jecxz
stc
sbb
daa
jp
xchg
cwtl
loop
adc
sub
adc
jmp
nop
shr
inc
lock
cmp
rolb
sub
jno
add
pop
incl
mov
dec
add
cmp
lret
mov
fbstp
aaa
xorl
cmpsb
sti
dec
mov
fldt
xchg
adc
stos
test
cltd
jnp
cmpsb
clc
adc
pop
enter
or
or
repnz
mov
sub
pop
jmp
and
iret
gs
push
push
adc
pop
sub
repz
test
add
push
hlt
addr16
xchg
mov
enter
fcmove
out
cmpsb
inc
cld
mov
mov
mov
int3
setl
sarb
mov
push
rcr
mov
cmp
sbb
jmp
pusha
sbb
mov
mov
xlat
mov
test
nop
xor
sub
mov
push
gs
push
stos
inc
jne
ljmp
sub
mov
xor
mov
fbld
push
sbb
adc
lret
push
test
push
or
mov
inc
adc
push
or
xchg
mov
pop
bound
cmp
and
addr16
inc
sbb
ja
popa
push
xchg
imul
hlt
stc
cmp
mov
jl
scas
sub
adc
push
cld
es
fwait
addr16
leave
adc
jne
mov
sub
lret
test
mov
pop
adc
jp
and
mov
test
shrl
test
mov
mov
push
jp
es
aam
and
shlb
jb
adc
and
jmp
test
rorb
bound
push
cld
pop
sub
dec
movsl
sbb
bound
mov
imul
mov
jns
xchg
push
pop
sub
dec
in
xor
push
cmp
pop
mov
mov
xor
pop
shlb
jle
sahf
mov
fmul
stos
xchg
sub
outsb
sub
out
and
aam
inc
in
push
aam
mov
clc
int3
push
push
loopne
xchg
loop
fwait
loopne
lret
mov
xchg
test
ret
ljmp
nop
sbb
jmp
inc
int
and
adc
inc
and
out
jmp
cwtl
inc
sbb
mov
push
dec
and
mull
mov
or
or
inc
in
push
and
inc
out
mov
in
lcall
movsb
test
jno
inc
in
or
aad
mov
inc
inc
hlt
dec
mov
xchg
xor
push
jno
mov
test
mov
mov
sub
xchg
movsl
shr
in
fbstp
xchg
loope
mov
and
xor
add
pop
inc
or
and
mov
lea
or
cs
enter
push
or
test
add
clc
xchg
out
rolb
lea
or
mov
movsb
jne
mov
pushf
push
xchg
call
lock
mov
lds
add
aam
sub
mov
mov
cltd
pop
push
mov
sub
cmp
pop
mov
sbb
cmp
lret
sub
push
and
inc
outsb
or
popl
add
je
pop
mov
cwtl
adc
push
aam
fildll
fisttpll
insb
push
pop
imul
das
push
cmp
movsl
mov
insl
rorl
test
mov
popaw
mov
jne
insb
sahf
jle
je
fmull
dec
mov
mov
push
pop
movsb
pop
jecxz
test
push
mov
push
or
lods
xchg
add
sahf
and
mov
or
inc
cmove
movzbl
aam
xor
inc
ljmp
test
or
mov
aad
cwtl
ret
stos
leave
adc
dec
xor
or
adc
jns
popa
lock
mov
mov
outsl
cmp
fsubrs
lock
ja
or
cmp
sbb
jmp
test
mov
in
fwait
loopne
mov
aad
out
repz
xchg
es
push
push
push
mov
xchg
push
int3
sub
push
out
in
sbb
push
lcall
addr16
mov
rclb
push
sbb
fs
ret
and
jge
aam
push
inc
rclb
test
dec
push
adc
out
and
inc
test
and
lea
pusha
imul
and
push
in
loop
sbb
in
movsl
mov
call
push
mov
imul
mov
xchg
aaa
insb
sbb
lea
dec
pop
cmp
shlb
out
mov
xor
addb
call
pushf
aaa
xor
xor
mov
inc
ljmp
mov
pop
xorb
and
push
jno
push
mulb
mov
mov
cmp
cmp
mov
adc
push
add
mov
scas
es
shrl
imul
mov
psllw
das
add
nop
xor
daa
sbb
fstpt
in
mov
sbb
and
lds
lret
call
mov
mov
mov
hlt
jo
inc
jne
mov
xchg
test
ljmp
add
enter
inc
cltd
enter
sub
mov
aam
dec
cltd
mov
or
push
sbb
adc
imul
fmul
ret
xchg
js
inc
cld
cltd
daa
imul
dec
push
xchg
je
push
sub
inc
ret
or
cmp
rclb
jl
mov
sub
mov
nop
dec
ss
inc
sub
repz
fldl
imul
nop
xorl
rcr
flds
sub
push
lea
lret
stc
mov
push
adc
dec
jl
out
pop
repnz
andl
fstl
dec
or
push
jmp
ljmp
dec
mov
hlt
jb
dec
dec
mov
and
les
mov
sub
or
pop
xor
or
lcall
mov
scas
lcall
push
ss
and
xor
inc
mov
inc
outsl
loope
jne
inc
jge
inc
rsqrtps
sub
mov
and
data16
fmuls
int3
and
sbb
clc
pop
pop
inc
fnstenv
bnd
mov
mov
push
sub
sbb
shlb
sub
push
jae
into
cld
cmp
xor
adc
lods
cmp
inc
add
xor
daa
aam
in
test
sbb
inc
inc
xchg
inc
mov
add
mov
xchg
mov
push
adc
sbb
push
pusha
cmpsb
mov
es
insb
xorl
jl
hlt
pop
lret
jle
sub
scas
sub
adc
adc
mov
call
add
add
nop
mov
aam
xor
imul
inc
sar
aam
lret
or
test
inc
stos
sbb
xor
push
adc
inc
sbb
ret
je
add
xchg
or
inc
int3
aam
push
jg
clc
das
dec
xchg
and
enter
je
cmp
mov
or
pushf
cltd
int3
push
or
incb
sbb
or
andl
sbb
imul
inc
lds
inc
aam
cmpl
ret
sbb
in
inc
out
mov
out
inc
mov
mov
arpl
jmp
push
int3
mov
test
xchg
stos
cmpsb
sub
clc
pop
out
lea
dec
cmp
sub
test
sub
mov
fimuls
jle,pn
inc
les
xchg
jne
jbe
mov
sub
xor
or
aam
mov
inc
call
int
imul
std
je
das
stos
and
dec
cld
cmp
jae
stc
inc
in
or
mov
xor
call
dec
sub
push
and
mov
in
push
addl
movsb
jno
dec
inc
pop
mov
pop
or
repz
sub
xor
add
push
fwait
ret
xor
clc
rcll
mov
and
loop
cmpsb
outsb
cmp
or
lock
es
ljmp
add
jmp
stos
push
xor
cmp
pushf
fwait
clc
push
dec
sbb
xor
sub
mov
ja
jecxz
dec
push
and
into
inc
pop
popa
adc
mov
sbb
push
inc
loop
clc
shr
sbb
addr16
inc
mov
ficoms
call
rcl
and
rcll
dec
bound
or
js
sub
push
mov
outsb
gs
sahf
xor
sub
inc
jp
add
int3
shlb
jns
sti
push
mov
stc
fcomp
stos
inc
shlb
pop
jno
ret
or
dec
push
add
push
jb
pop
fsubp
call
fs
imul
sub
or
and
inc
add
shlb
sub
pop
lock
mov
scas
ss
sub
bound
nop
or
push
mov
jno
mov
add
xchg
push
pop
test
pop
mov
in
xchg
mov
mov
repz
lea
mov
xchg
or
hlt
das
mov
cmp
or
pop
jmp
push
mov
ljmp
jb
push
adc
lcall
sub
or
cmp
or
scas
xor
imul
je
ss
jmp
push
add
test
xor
cs
cmp
in
add
mov
add
sub
and
je
xor
cli
pop
and
ja
inc
notl
jmp
rep
mov
cmp
lret
popf
sbb
and
sbb
sub
pop
mov
jg
inc
lock
push
sub
mov
inc
push
mov
cld
push
add
mov
lret
push
and
inc
jo
add
sub
and
loop
push
scas
or
xchg
repnz
xchg
sbb
nop
ret
pop
bound
in
pushf
and
data16
outsb
cmpsl
jmp
call
jns
push
mov
xchg
sub
in
cmp
jmp
mov
jo
and
sub
or
adc
movl
in
xchg
mov
aas
mov
push
dec
push
decl
cmpsb
mov
cmpsb
and
adc
jmp
cmc
add
les
loopne
in
add
push
lret
xor
xchg
push
out
add
jmp
jns
rcll
enter
sub
sub
shl
push
adc
xchg
pusha
dec
clc
mov
xchg
test
inc
xor
xchg
out
xchg
andl
imul
and
mov
test
pop
out
je
lahf
xlat
sub
jo
test
imul
in
das
sbb
inc
sbb
push
inc
in
stos
sbb
adc
test
nop
adc
push
xchg
mov
or
mov
adc
mov
adc
nop
in
adc
cmp
fisttps
data16
sub
xor
jne
ljmp
stc
sub
xor
inc
cltd
cwtl
adc
mov
das
sub
jmp
mov
test
or
cwtl
daa
add
and
cmp
lret
popa
or
pop
inc
stos
dec
adcl
sub
mov
or
or
incb
aad
jmp
sti
arpl
cmp
aaa
xchg
or
inc
incl
sbb
addr16
adc
mov
push
pop
and
jl
fwait
jmp
jno
adc
lock
sub
icebp
adc
lock
xor
push
enter
xchg
jnp
mov
imul
xor
mov
adc
cmc
inc
add
mov
int3
test
jmp
lds
fs
mov
stos
addr16
sub
cmp
fisubrl
xchg
lds
xor
outsb
pop
push
pop
lahf
cmp
inc
lods
jge
jnp
std
call
jle
in
sub
jns
dec
in
dec
and
push
adc
shll
clc
test
dec
jp
or
mov
mov
xchg
and
sub
xchg
mov
aaa
dec
cmp
aam
es
negl
push
and
call
or
xchg
or
imul
mov
add
sub
sar
push
testb
stc
sub
in
inc
rclb
sti
push
push
dec
stos
jnp
push
mov
in
adc
pop
mov
test
call
lcall
mov
or
mov
jns
inc
shl
adc
mov
adcl
inc
mov
xchg
nopl
bnd
push
and
jmp
jno
fsubrs
insl
xor
lock
pop
and
lods
adc
xchg
test
push
adc
inc
movb
adc
mov
cli
mov
pop
shr
xor
in
insb
push
push
dec
add
sbb
pop
mov
out
xchg
sbb
cmpsl
mov
and
and
or
pop
add
cmp
jae
movb
inc
leave
scas
mov
sbbb
movb
add
aam
ret
lea
out
inc
push
movsb
repnz
test
ljmp
push
xchg
push
fs
sahf
dec
push
sbb
sbb
inc
pushf
mov
pop
bound
dec
cwtl
cwtl
jae
sahf
mov
or
movsb
movsb
mov
cmp
lea
mov
loop
ret
and
pop
bound
xchg
xlat
nop
test
mov
and
adc
mov
ljmp
cmpsl
xchg
cmp
test
mov
and
mov
addr16
into
cmp
je
shrl
orl
or
rcr
test
or
add
pop
xor
test
dec
ss
mov
push
mov
push
push
cmpsb
movsb
out
xchg
mov
addr16
jge
add
adc
mov
inc
sbb
lds
inc
add
cmc
push
dec
les
adc
movl
dec
add
jmp
pop
inc
pop
mov
les
movsb
xor
mov
sub
lea
add
inc
push
enter
pushf
pop
or
dec
push
int
mov
pop
shl
inc
xor
cmpb
push
inc
xchg
pushf
les
mov
lret
std
fs
fiaddl
imul
daa
sub
subl
pop
lods
fcoml
sub
loopne
jae
jns
inc
xchg
and
int
lcall
or
xchg
xorb
mov
sub
or
ds
adc
push
sbb
push
add
jecxz
sbb
push
push
cmp
or
xchg
rol
gs
adc
pushl
repnz
xchg
lock
es
add
cmp
je
lea
mov
dec
loope
leave
loopne
or
jl
adc
xchg
les
ds
call
cmp
popl
or
test
mov
sahf
cmpl
push
push
or
sub
mov
push
or
sbb
or
push
mov
lret
add
inc
or
or
pop
ret
xchg
jae
inc
xor
pop
inc
xor
fcoml
inc
dec
and
fisubl
xor
enter
sbb
add
lea
push
insb
push
mov
adc
popa
cmp
pop
pop
mov
xor
pop
inc
pusha
fs
cmp
mov
sub
testb
inc
push
dec
sub
or
ret
or
xor
jmp
mov
mov
mov
test
pop
or
dec
or
pop
sub
movsb
inc
sbb
fildll
nop
je
and
jbe
xor
rorb
push
lods
pop
ljmp
jmp
decl
push
cli
sbb
push
mov
jae
das
movsb
testl
ds
xor
and
pusha
push
and
inc
test
movsb
je
and
push
repz
inc
adc
cmp
pusha
inc
cmp
jae
pop
sub
mov
xchg
push
mov
idivb
inc
xchg
push
and
jecxz
dec
adc
mov
and
addr16
xchg
rolb
jmp
jne
cmp
sub
aad
jae
pop
or
inc
add
xchg
xor
adc
push
movsl
and
cmpsb
push
sub
inc
ljmp
insl
and
iret
push
push
push
mov
and
push
inc
inc
cmpsl
push
fnstcw
enter
aad
scas
inc
cld
jle
fmuls
enter
and
sbb
fisubrs
and
stos
sbb
adc
or
outsb
sub
sbb
enter
mov
inc
sbb
and
lret
adc
subl
add
lret
dec
jb
inc
leave
ja
sub
loop
inc
loopne
mov
xchg
push
jp
lea
cmp
aas
movsl
aaa
cmpsl
sub
pop
vrsqrtps
cs
add
lcall
pop
in
mov
xor
sbbb
lea
adc
sub
mov
lret
or
mov
inc
xlat
or
jge
inc
and
in
mov
ljmp
adc
inc
mov
leave
jo
push
fadds
or
aaa
xchg
xchg
lea
or
or
pop
xchg
push
imul
mov
adc
cmpsb
push
or
ja
xchg
bound
add
popa
insb
mov
jno
inc
lret
or
orl
push
pop
inc
adc
jb
xor
sti
divps
movsb
mov
inc
dec
ret
jp
out
and
sbb
adc
test
inc
dec
adc
jae
mov
shrl
jmp
cltd
jbe
pop
rcrl
je
shlb
xchg
out
mov
ret
ret
sbb
add
leave
push
push
add
pop
rclb
das
lods
jae
mov
adc
cmp
push
in
adc
ret
dec
mov
fcmovbe
shll
push
aam
ss
add
add
repz
je
push
inc
sbb
fs
push
je
test
movsb
cmp
pop
xlat
push
inc
pop
arpl
jne
adc
mov
xchg
mov
notb
sub
push
and
xor
cmp
shr
adc
pop
adc
pop
and
loope
pop
or
xchg
mov
mov
adc
jmp
mov
cmp
mov
shlb
dec
or
or
inc
xchg
or
in
mov
je
arpl
je
nop
repnz
js
sub
mov
sbb
leave
push
or
inc
push
sub
push
push
pop
fisubrs
lea
jmp
jbe
push
jne
test
dec
sbb
xor
movsl
xchg
nop
dec
pop
add
sbb
sub
mov
sub
dec
icebp
and
adc
rorb
add
cmp
or
push
hlt
push
imul
xor
repnz
push
in
adc
fldl
test
and
nop
rorl
cmpsb
mov
dec
sbb
pop
lret
mov
jno
add
add
push
sub
test
test
push
xor
adc
lcall
incl
enter
or
push
loop
ret
xor
cmpsb
loopne
fwait
sub
adc
xchg
add
cwtl
arpl
pop
xor
mov
add
repnz
mov
dec
mov
jmp
jl
fstps
xchg
mov
jne
xor
jle
test
jmp
loope
mov
lods
push
je
in
mov
bound
in
mov
out
or
jae
inc
imull
mov
or
inc
push
jno
aad
mov
aam
mov
jns
push
inc
iret
mov
pop
inc
mov
stos
outsl
loop
dec
sbb
roll
jb
inc
in
push
mov
pop
dec
bound
fnstcw
xor
in
in
pop
inc
repz
jae
xor
dec
push
add
movsl
or
xor
lahf
or
fildll
add
dec
mov
xlat
adc
call
cmp
or
add
out
cli
and
pop
sbb
push
pop
sub
dec
adc
stos
lret
imul
mov
inc
and
imul
push
cmpsb
mov
sbb
sbbb
sbb
and
or
mov
xor
pop
decl
dec
aad
cwtl
out
enter
je
das
mov
les
adc
mov
push
movsb
dec
push
insb
xchg
or
pop
xor
cmp
mov
call
push
mov
daa
push
adc
mov
js
lea
stos
add
insl
fs
cmp
jle
push
test
sub
int3
jno
xchg
mov
push
inc
in
or
imul
push
dec
xor
cs
cmp
sub
jmp
ret
lods
pop
or
jmp
adc
ljmp
fbld
push
jg
mov
and
mov
sub
or
push
lret
stos
pop
adc
add
hlt
jmp
pop
sbb
mov
stos
test
xor
lahf
adc
or
jecxz
call
mov
mov
push
mov
pop
pop
cmp
out
pop
and
dec
rclb
jne
mov
or
iret
pusha
jg
and
sbb
pop
das
sahf
push
inc
stos
aad
or
mov
lds
sbbb
stc
inc
jae
and
shld
shl
ret
mov
pop
xor
and
shl
inc
pop
fs
xor
int3
push
and
loopne
push
fdivl
mov
push
dec
inc
sar
icebp
icebp
out
enter
sbb
pushl
cmpsb
inc
lea
mov
xchg
std
or
push
repnz
inc
int3
dec
jne
movsb
fidivrl
add
dec
mov
dec
adc
mov
call
arpl
bound
aas
shll
les
dec
mov
sahf
call
push
adc
add
add
repnz
and
movsl
adc
or
daa
and
fimuls
in
mov
out
sub
adc
or
jns
sub
inc
fwait
pop
lods
adc
lcall
add
or
push
sbb
adc
iret
and
mov
cltd
in
stc
mov
xchg
xlat
stos
and
loopne
mov
mov
adc
inc
addr16
aam
aam
adc
push
shl
push
stos
sbb
scas
push
pushf
adc
repz
adcl
xchg
flds
cmp
sbb
loope
mov
enter
push
in
aas
fdivrl
sbb
push
add
flds
xchg
mov
jle
cs
pushl
popf
add
mov
push
cmp
dec
push
adc
cmp
insl
mov
test
pop
test
add
adc
call
and
out
or
adc
push
fcmovnu
jg
pop
dec
mov
or
dec
mov
push
fmull
movb
jmp
xchg
sub
aad
test
push
and
mov
adc
mov
mov
dec
push
sahf
push
repnz
dec
xor
sahf
bound
sarb
scas
push
add
je
cmp
int3
add
pop
mov
daa
lret
les
iret
mov
rorl
pop
in
lds
push
mov
push
jge
xor
mov
insl
out
insb
shl
jecxz
cmp
adc
xor
fsubr
dec
or
dec
mov
push
jg
mov
sub
je
jg
xchg
mov
cmp
je
add
and
xor
push
add
dec
sbb
es
inc
sub
push
push
inc
enter
mov
sbb
repz
int
and
mov
repz
fdivs
scas
test
orl
cmp
insl
js
in
out
adc
lock
clc
cmpsl
int3
cmpsb
not
push
xor
xchg
mov
xchg
inc
fs
xchg
inc
test
add
inc
repnz
int
cmpsb
outsb
and
or
daa
mov
rclb
pop
push
jne
xor
pop
lock
fmuls
xor
cmp
fsubr
sbb
ret
push
push
mov
sub
int3
sbb
fadds
out
cli
and
sub
loopne
mov
sub
sub
adc
mov
cmp
or
sub
in
push
fdivs
xchg
inc
fs
icebp
lds
in
enter
out
loope
dec
push
or
repnz
out
xchg
nop
xchg
xchg
lea
dec
cmpsl
mov
add
xor
les
xchg
cmp
addl
lret
imul
pop
mov
rclb
rcll
mov
pushf
xchg
push
push
fsubl
outsb
push
cmpsb
jae
or
sub
adc
sbb
jmp
test
addr16
mov
mov
es
xor
push
jno
arpl
into
push
xlat
loopne
repnz
rorb
add
push
ljmp
punpckhdq
sahf
arpl
je
sbb
mov
add
and
hlt
adc
sub
lcall
push
mov
and
sbb
popa
and
fidivrl
dec
or
xchg
imul
xchg
ljmp
je
loopne
mov
sbbl
xor
add
loope
sub
pusha
jne
mov
inc
cli
fidivrs
sub
mov
or
push
or
and
push
and
movsl
adc
je
fnstenv
mov
cld
mov
mov
cld
cld
push
xor
xorb
daa
pop
sub
xor
std
mov
cmp
jbe
adc
adc
xor
pop
inc
sub
mov
push
int
dec
pop
add
testb
jmp
nop
push
fmull
lcall
int
pop
xchg
fsubrl
push
adc
shll
dec
inc
test
test
mov
stc
dec
clc
and
cltd
jb
andb
pop
in
push
outsb
cwtl
inc
fcomps
jmp
ret
dec
movsb
xor
sbbb
xor
pop
mov
cmp
insl
les
jae
mov
sbb
pop
mov
mov
dec
mov
jge
hlt
pusha
je
ja
hlt
hlt
sbb
mov
add
or
mov
cmpsb
add
sbb
test
leave
adc
dec
imulb
push
jbe
cld
hlt
hlt
lret
call
pop
jmp
ror
xchg
xor
mov
hlt
hlt
daa
sti
dec
cmp
jnp
dec
incb
xor
stc
mov
fdivl
jb
xchg
insl
fmul
pop
and
mov
iret
mov
jmp
sub
inc
js
push
mov
sub
mov
mov
nop
subb
sub
sbb
sahf
mov
decl
jns
out
xor
and
adc
sub
movsb
stos
dec
popa
adc
jl
inc
or
push
lock
sbb
out
sbb
push
inc
xchg
clc
pop
mov
sahf
ret
xchg
sub
std
sahf
mov
xchg
lcall
repz
lods
mov
shl
cmp
int3
aam
rcl
xor
jbe
and
sub
push
testl
frstor
xchg
sub
sti
ja
pop
cmpsb
add
mov
popf
or
mov
and
and
push
mov
add
clc
and
or
push
data16
fldcw
mov
inc
aad
xchg
in
lahf
cmpsl
movsl
inc
idiv
dec
pop
test
cmp
push
adc
test
mov
fadds
and
subb
je
adc
push
clc
push
aam
xorl
clc
outsl
and
dec
fs
leave
adc
mov
in
pop
outsb
dec
adc
push
inc
adc
or
sbb
or
jg
add
fidivl
xor
xchg
and
clc
ss
sbb
or
add
and
mov
inc
lret
jmp
or
inc
inc
out
cld
jmp
rclb
pop
es
sub
adc
dec
jno
fistpl
in
xchg
sub
adc
add
rorb
dec
nop
or
test
repnz
add
lcall
aas
dec
data16
jb
add
mov
js
leavew
add
mov
mov
popa
mov
mov
jae
sbb
cwtl
and
adc
sti
pop
add
add
or
jle
movl
jno
ja
js
xchg
cmp
and
or
dec
pop
cmp
dec
lret
jmp
mov
or
dec
icebp
test
sbb
xchg
mov
int
movsl
mov
sbb
inc
push
scas
je
add
sti
push
scas
add
enter
add
shrl
int
xchg
mov
lods
std
addr16
add
call
push
and
and
add
and
imul
dec
or
inc
mov
popf
lret
fmuls
shl
cmpsb
xchg
mov
hlt
sub
shll
test
xchg
mov
stos
and
add
in
adc
mov
or
xlat
xor
ret
addr16
cmp
cmpsb
or
cmp
cmp
sbb
add
cmp
and
add
test
and
adc
cmp
inc
inc
out
hlt
fwait
mov
adc
mov
xor
pop
shrl
sub
mov
pop
les
or
cmp
clc
pop
pushf
pop
lret
add
enter
scas
and
enter
ficoml
mov
fimull
push
or
lret
jp
cmpsb
aaa
notb
jl
clc
inc
sub
ss
push
xchg
cmp
aas
push
sbb
adc
nop
in
sbb
sbbb
xor
jg
dec
push
jle
jmp
mov
push
jbe
es
out
mov
insl
mov
dec
lcall
into
cltd
xchg
mov
xor
cmp
mov
pop
mov
dec
dec
movsb
add
dec
movsb
adcb
call
cltd
and
es
jmp
test
mov
push
hlt
aas
xor
fdivs
mov
out
jg
js
iret
scas
aad
add
or
and
pushf
and
push
mov
sbb
dec
in
out
mov
addl
movsl
adc
sbb
push
sbb
pop
inc
rclb
movsl
into
fadds
pop
hlt
xchg
mov
xchg
scas
rcrl
add
cmpsl
mov
or
sar
xchg
xor
pop
rorb
test
cmp
jge
jne
addb
cmc
imul
mov
jg
adc
outsb
mov
mov
push
cmp
fisttps
or
sub
in
mov
cmp
aad
cltd
inc
loope
mov
ret
std
jmp
add
jl
add
into
lret
dec
pop
sub
inc
andb
xor
or
les
shrb
in
push
adc
dec
sub
xor
mov
and
mov
js
and
popa
aad
adc
dec
in
push
mov
leave
fistl
faddl
push
dec
inc
cwtl
push
mov
adc
adc
dec
cltd
add
adc
lret
mov
adc
dec
in
sub
inc
add
mov
dec
pop
pop
ljmp
lods
mov
xchg
xchg
testb
hlt
clc
push
cld
adc
push
insb
sub
sub
cmp
nop
lods
dec
cld
adc
stos
daa
push
aaa
xchg
dec
xchg
rcll
push
push
jno
mov
push
jb
or
cli
xchg
in
repnz
push
aam
jae
sbb
lcall
scas
sarb
stos
mov
add
mov
out
scas
aam
mov
cli
dec
pusha
push
sub
pop
or
mov
adc
add
mov
xor
xor
dec
xchg
cld
xchg
enter
or
push
test
dec
jmp
sub
addr16
xchg
jne
call
in
cwtl
nop
in
inc
adc
add
insl
lcall
add
ja
int3
imul
dec
pop
cwtl
movsb
popf
dec
sub
sbb
sub
icebp
push
je
fcoms
les
ret
insl
flds
mov
sbb
mov
cmp
cwtl
dec
push
movswl
mov
push
dec
xor
cmpsl
jecxz
shll
mov
push
repz
lds
mov
push
xorl
xor
or
ljmp
xor
jle
sbb
lock
fidivl
scas
mov
incl
dec
adc
xor
adc
daa
cmc
scas
push
xchg
jne
jecxz
push
sub
sarl
adc
test
add
sub
outsb
inc
ds
incw
push
scas
stc
cmpsb
ret
or
pop
aas
fidivs
xchg
dec
clc
or
cmpsl
test
shr
or
fldcw
adc
data16
lret
xor
sbb
cmp
or
inc
add
adc
mov
xchg
test
sarl
daa
add
add
ljmp
es
xchg
insb
mov
mov
mov
add
sbb
push
cmpl
jge
test
push
mov
and
sbbb
inc
cmp
ss
outsb
pop
pop
push
mov
cmp
sub
pop
adc
icebp
add
movl
dec
lods
in
ja
cwtl
cmp
adc
pushf
or
adc
jl
aaa
ret
ret
jecxz
jg
add
fwait
adc
pop
cmp
xor
cmp
jecxz
adc
repz
adc
sbb
pop
fldt
repz
and
jno
sub
sub
out
pushf
sub
xor
jno
jns
das
sbb
out
pushf
idivl
inc
cmp
jns
inc
inc
inc
jge
divl
inc
dec
dec
jns
out
dec
push
dec
pushf
divl
push
dec
pop
jns
out
dec
pop
dec
pusha
divl
dec
fs
pop
out
pushf
push
faddp
jns
cmp
jge
idivl
jl
and
cmp
push
test
fnstcw
aas
mov
jns
popf
mov
inc
jns
popf
notl
fldcw
pushf
sub
fnstcw
pop
clc
inc
out
jbe
and
mov
mov
mov
and
jg
fstps
xor
stc
js
sbb
cmp
shl
pop
sbb
aad
or
mov
test
and
mov
test
sub
push
sbb
aad
sbb
aad
sbb
sbb
push
aad
sbb
aad
sbb
sbb
je
push
sbb
mov
ret
mov
popf
xlat
push
in
mov
xchg
cwtl
pushf
xlat
jns
xlat
mov
lahf
test
arpl
sbb
clc
push
pop
cmpl
push
push
add
in
adc
test
gs
push
clc
or
sub
jmp
clc
jno
sbb
ljmp
inc
push
cmp
push
pop
mov
or
jle
dec
fnsave
xor
mov
testb
add
push
cmpl
pushf
mov
dec
pop
js
imul
es
or
das
mov
mov
mov
lcall
lds
mov
out
sub
xchg
cltd
shlb
ds
lods
inc
adc
sub
test
outsl
cmpl
dec
add
push
jb
dec
sub
push
mov
mov
adc
add
push
and
xor
push
add
xchg
orl
lret
jp
daa
es
ljmp
sub
or
and
scas
imul
lret
xor
jg
mov
sub
mov
lret
add
adc
dec
push
hlt
imul
adc
loop
or
add
pop
adc
jbe
sub
popf
lahf
lahf
pop
andl
out
and
adc
and
cld
mov
cmp
imul
adc
fcmovnb
pusha
adc
dec
and
mov
add
inc
int
push
mov
mov
dec
adc
pop
mov
sub
test
sbb
dec
sti
adc
imul
repnz
sbb
insb
jge
negl
xchg
cltd
pop
mov
shll
pushf
notl
popf
sbb
sub
mov
push
into
sti
cmp
sub
mov
sub
out
jecxz
das
push
xchg
ret
xchg
mov
mov
js
pop
mov
ja
mov
dec
sbb
dec
jae
jmp
leave
jmp
lret
nop
ja
lret
cmpl
xor
in
or
push
dec
call
mov
insl
mov
pushf
pop
push
xor
add
loopne
push
shrb
in
pusha
mov
add
push
lahf
icebp
dec
rorb
or
lods
push
aam
dec
push
push
fdivs
lret
loop
jge
fdivrs
and
stc
push
pop
sub
dec
loopne
test
mov
call
out
out
sbb
subb
test
sarb
push
repnz
out
inc
fucomip
mov
or
imul
notl
adc
call
loopne
push
cltd
mov
jg
adc
cmp
andb
jmp
rorb
shrl
mov
xor
dec
add
add
int
fildl
jae
fcompl
data16
test
add
inc
add
mov
in
cmp
sbb
and
push
dec
pop
lea
sub
js
add
inc
lea
xor
rolb
mov
pop
sbb
mov
rdtsc
cmp
xor
jmp
jmp
rcr
inc
or
mov
popa
and
push
adc
shlb
fiadds
inc
xor
adc
jp
and
aam
sub
cmpsb
xchg
mov
lret
push
xchg
and
push
sbb
add
cmp
repz
mov
ljmp
push
add
push
push
xorb
add
pop
inc
bts
bound
and
or
nop
inc
or
sub
mov
and
sbb
and
fildll
jl
repz
jb
mov
dec
mov
test
adc
mov
adc
cmpsb
inc
push
jns
xchg
adc
scas
or
mov
cmp
dec
js
loope
cmp
and
adc
push
push
jmp
push
ljmp
jl
mov
push
add
fwait
cmp
adc
cmp
ret
movsb
pop
fwait
movb
and
cmp
shlb
ror
add
lea
dec
adc
cmp
adc
mov
and
mov
enter
and
pop
and
int
lret
inc
imul
mov
lds
and
pop
jl
enter
or
inc
aas
test
subl
sbb
test
adc
inc
sbb
add
add
sbb
and
clc
or
inc
xchg
or
bound
xor
insl
cltd
sub
sar
or
test
popf
adc
rorl
adc
push
roll
pop
adc
or
and
adc
xor
jmp
outsb
xchg
fnsave
js
test
push
add
test
xchg
mov
cmp
mov
fstps
or
cmpsl
pop
adc
inc
sub
cwtl
cmp
or
mov
sahf
scas
sbb
push
movsb
ret
in
mov
cmp
andb
mov
and
or
mov
adc
sub
pusha
jmp
dec
mov
aam
jnp
cltd
xchg
mov
and
xor
xchg
jns
fistps
mov
and
inc
mov
sub
sarl
push
ret
jg
mov
shll
xchg
vpmuludq
add
mov
xchg
shll
test
add
jl
lcall
jo
mov
idivl
jnp
arpl
ss
insl
mov
pop
out
lcall
sarl
cltd
sbb
jmp
ljmp
push
pop
xchg
sti
test
add
fcompl
cmp
nop
idivb
mov
fistpl
int3
shlb
call
push
clc
int3
je
jbe
mov
xor
test
aam
mov
or
push
adc
push
popa
jne
fwait
mov
clc
lret
push
dec
mov
and
push
inc
imul
jecxz
adc
pop
mov
popf
jne
add
or
and
aam
push
ds
shrb
sbb
or
add
arpl
test
pop
and
xchg
or
jmp
push
sarl
mov
adc
mov
pop
mov
and
adc
std
aam
mov
cs
xchg
adc
adc
rcl
aas
adc
sti
outsl
mov
icebp
jmp
divb
pop
or
fwait
in
ja
mov
orb
mov
inc
mov
cmp
daa
push
add
and
push
push
inc
xorl
or
sar
dec
push
dec
lea
jmp
lea
syscall
in
jns
and
mov
cmpsl
les
adc
sub
clc
outsl
push
in
sbb
rcrl
or
push
inc
push
movsl
cmp
sub
cmp
xor
fiadds
jmp
sub
push
mov
xchg
mov
decl
xchg
test
mov
cld
inc
test
popa
mov
cmp
xor
xchg
xor
dec
jb
lock
sub
jp
pop
call
sub
xchg
roll
test
sbb
mov
andl
fmull
mov
sbb
push
jecxz
adc
inc
and
mov
xor
push
leave
sub
xchg
pusha
fildll
xor
inc
in
or
cmovb
test
aam
xchg
popa
mov
in
add
je
sbb
adc
xor
je
add
xchg
je
cmp
adc
mulb
scas
outsb
cmp
sub
inc
rol
subb
into
je
cld
test
xor
adc
mov
shrb
filds
adc
jge
or
inc
adc
xchg
popa
adcl
pop
lods
ja
add
mov
adc
inc
cmp
mov
xchg
aaa
xchg
cmp
xchg
inc
lock
inc
mov
rorb
adc
mov
and
mov
xchg
push
or
sub
xorb
ficoms
dec
int3
sbb
and
fprem
rcr
leave
inc
jl
inc
jg
xor
nop
lods
gs
mov
push
shll
std
adc
sub
push
repnz
cmp
mov
cld
pop
push
leave
in
jle
cld
and
jp
sbb
cs
cmp
call
dec
mov
das
aam
inc
shrb
push
jae
adc
pop
mov
mov
cmpsl
or
cmp
mov
push
jmp
leave
std
xor
xor
cs
pusha
sub
mov
test
jno
shrl
test
mov
xchg
in
mov
and
and
sub
fisubrs
push
mov
add
sub
icebp
les
stos
sub
fldcw
pop
fsubl
sub
sub
sbb
add
lret
fs
cmp
lcall
call
mov
adc
dec
call
mov
lret
notb
or
xchg
push
dec
popf
lds
lock
push
iret
and
in
out
cli
push
dec
or
inc
sbb
add
movb
mov
or
fs
call
es
xor
nop/reserved
cwtl
stos
xchg
dec
cmp
sub
cmc
dec
add
pop
aas
xchg
loop
jp
or
sbb
dec
lcall
popf
push
and
int
mov
cli
add
call
jb
movsl
hlt
test
dec
cmpsb
imul
mov
loope
sub
test
add
gs
leave
cmp
mov
cmp
inc
in
aad
lret
arpl
stos
movsl
call
xchg
pop
aam
adc
stos
cmp
dec
in
das
hlt
adc
adc
mov
insb
add
fisubrl
mov
mov
rorb
add
pop
dec
repz
push
in
lock
jmp
xchg
int3
imul
add
sbb
push
lea
or
mov
test
bound
aaa
jle
out
push
hlt
push
or
or
pop
ds
mov
stos
addr16
in
cmp
repnz
ss
movsl
mov
cmp
xor
mov
call
sbb
xchg
lahf
jmp
jmp
and
jle
fistl
lret
push
jae
dec
popf
js
mov
mov
test
push
xchg
loopne
loop
insb
jl
sub
jl
sub
jecxz
imul
xlat
mov
into
add
mov
loope
push
adc
scas
xchg
mov
add
lea
push
xor
jge
sbb
movl
imul
mov
xchg
jle
inc
repz
roll
cltd
jmp
ds
das
jbe
mov
bound
int
dec
cmp
sbb
iret
orl
or
test
imul
aaa
mov
jns
stos
js
and
movsb
insb
adc
and
add
dec
int3
mov
mov
pop
hlt
jae
adc
movsl
xor
or
or
mov
imul
aaa
sub
insl
push
les
inc
sar
repz
mov
mov
jge
sbb
bound
dec
imul
pop
add
aad
je
and
daa
xor
clc
or
insb
sbb
sbb
loope
sbb
xchg
mov
push
xor
fadd
lock
fcoml
lock
gs
jmp
add
cmp
fstps
mov
and
ds
bound
and
add
pop
or
inc
and
adc
sub
rcll
xlat
data16
mov
mov
les
jl
pop
shlb
mov
pop
mov
shlb
mov
int3
add
and
mov
in
push
jmp
lock
push
xchg
xchg
gs
sub
mov
int
xchg
test
pop
movsl
xchg
nop
idivb
cmp
sarb
xchg
rolb
stc
lahf
pushl
sahf
dec
clc
cmp
ret
add
push
mov
add
call
adc
cmp
xor
movsb
jne
mov
fwait
add
xchg
jg
stos
inc
cmp
mov
pop
dec
jle
xor
pop
and
adc
or
int
movsb
push
shlb
push
add
sub
sbb
outsb
pushf
fwait
pushf
add
or
inc
movsb
pop
cmc
into
filds
jmp
dec
add
movsb
and
mov
push
lea
in
movl
jo
xchg
push
add
inc
adc
xchg
cld
arpl
xor
mov
jnp
mov
popf
lock
xor
cmp
mov
sti
js
jle
mov
add
adc
inc
push
pop
cmc
xlat
or
jl
pushf
imul
jp
imul
cmp
clc
call
test
jns
mov
push
adc
xchg
sbb
lret
xor
jns
adc
adc
movsl
or
jl
cmp
inc
xor
xchg
imul
lea
popl
xchg
xor
or
pop
int
sub
jge
xchg
in
enter
mov
shrl
imul
sbb
fldl
imul
cmc
idivl
jmp
xchg
xchg
es
sub
lcall
cli
mov
cltd
xchg
and
add
xor
bound
cmp
add
pop
pcmpeqd
dec
scas
mov
enter
sbb
xchg
xorl
and
pop
adc
mov
out
inc
push
push
or
sub
das
mov
xchg
in
and
and
jmp
cmpb
enter
loopne
jp
jmp
clc
adc
pusha
ffreep
scas
lods
stos
shlb
imul
ljmp
lret
enter
push
inc
fstpt
dec
inc
adc
scas
adc
int
adc
sub
jmp
imul
test
add
push
inc
push
adc
nop
cmp
dec
pop
insl
cmpsl
gs
cmpsb
arpl
fcmovnbe
sub
popa
jecxz
push
inc
sub
dec
fwait
jl
xor
jbe
pop
ret
inc
sbb
add
dec
or
push
cmp
shr
or
mov
adc
sub
lock
outsb
pushw
mov
imul
push
stc
fsts
call
rorl
add
push
enter
xchg
dec
jo
orb
or
xchg
sub
nop
test
mov
sbb
jecxz
mov
adc
std
jl
and
test
fisttps
and
sub
sbb
xchg
add
add
les
andb
xchg
dec
add
pop
js
ret
push
les
cmpb
sbb
lea
adc
cld
jne
xchg
mov
push
shlb
test
sahf
add
fcoms
ror
sub
je
xor
pop
push
into
repnz
sbb
fstps
aam
push
or
xor
test
fwait
mov
jno
pop
push
dec
stc
adc
stos
mov
jle
mov
add
mov
push
aam
lcall
sub
add
xor
or
ljmp
jns
sub
sub
and
stos
daa
popf
rorl
cmc
movsb
fcom
popf
push
shrl
stc
sub
xor
cmp
or
pushf
jmp
cmc
sub
dec
js
out
les
sbb
and
xor
les
movsl
push
push
js
sbb
nop
sbb
enter
nop
adc
mov
pop
lcall
fcompl
and
pop
lods
das
into
mov
outsl
bound
mov
mov
popa
mov
xor
and
or
addb
stos
jne
les
push
and
xchg
jmp
in
sbb
imul
fsts
sbb
add
xchg
and
mov
cmp
enter
mov
xor
cmp
mov
pop
call
int3
popw
cwtl
cwtl
imul
xor
sub
sbb
les
mov
fs
xchg
sub
js
in
sub
dec
cltd
lods
loop
inc
popl
scas
outsb
pusha
mov
cmc
jns
jno
mov
pop
mov
iret
outsb
or
dec
insl
test
mov
sub
adc
fiaddl
or
sbb
sub
adc
cwtl
hlt
rol
sbb
pop
xor
adc
in
pop
out
mov
cmp
mov
cmpsl
xchg
pop
or
loopne
mov
dec
mov
add
fldenv
add
jl
out
sbb
adc
out
out
dec
movsl
gs
xor
sub
push
lret
rorb
sub
test
cmp
test
out
cmp
pop
inc
sbb
push
push
scas
mov
pop
add
mov
shll
in
sub
dec
and
cmpsb
in
pop
sub
lods
adc
jbe
stos
xor
and
in
cmp
rolb
mov
nop
sbb
or
add
and
push
sub
dec
sbb
cwtl
loopne
hlt
gs
xchg
push
sbb
out
cwtl
call
adcb
lea
push
leave
push
in
push
dec
sbb
mov
dec
test
mov
jns
in
in
sub
cmpsb
xor
pop
call
sbb
push
xchg
hlt
daa
pop
jae
sub
sbb
push
jmp
inc
mov
mov
stos
push
xor
in
push
mov
mov
cmpsb
inc
jg
jmp
shrl
mov
ret
mov
and
clc
jne
xorl
xchg
arpl
cmpb
je
jbe
xchg
jg
es
adc
pop
mov
sub
fcmovu
repz
mov
push
add
mov
inc
and
xchg
daa
call
and
in
and
mov
sbb
arpl
sub
jecxz
jmp
mov
rcrl
mov
pop
adc
add
add
les
addl
add
sbb
ljmp
pop
or
adc
add
jl
movsb
repz
cwtl
outsb
dec
inc
mov
imul
xor
cmp
les
mov
or
in
idivb
adc
jne
mov
pop
sub
pushf
adc
dec
add
shl
hlt
adc
movb
repz
arpl
repz
mov
mov
mov
sahf
inc
fmuls
mov
test
stos
mov
cld
inc
sbb
cltd
cwtl
add
cmpsb
in
pop
xchg
cwtl
pop
out
arpl
nop
data16
mov
adc
adc
inc
fs
inc
add
or
inc
xchg
jne
inc
faddl
mov
sbb
aas
outsl
into
repz
cmp
inc
push
and
pop
movb
push
test
xor
in
adc
dec
andl
mov
or
or
pop
xor
and
push
hlt
lret
mov
xor
xchg
cwtl
xor
je
xor
jne
jne
push
test
ds
cmp
add
lea
dec
mov
insl
sbb
push
ds
addr16
mov
push
sar
sub
pop
sbb
call
pushf
leave
mov
sarb
popf
mov
cmp
test
enter
rorb
xor
mov
inc
popa
xchg
cmpsb
rolb
dec
dec
mov
lret
push
mov
mov
neg
insl
pop
movsl
rorb
loopne
cmp
jl
cs
inc
popa
movsb
movsb
je
addl
xor
cmp
movsb
sbb
orl
or
or
in
notl
addr16
iret
nop
add
nop
arpl
stc
xor
ss
xor
lea
shlb
or
rcrb
and
mov
jge
or
repnz
add
mov
push
xchg
jecxz
inc
cmp
aam
fmuls
mov
push
fistpl
add
arpl
add
ljmp
imul
int3
popf
lahf
add
jp
fmuls
das
push
in
popf
in
adc
aas
lea
movsb
shr
dec
mov
cltd
scas
fsubrs
ljmp
adc
cmp
adc
push
sub
xor
sbb
mov
ret
add
in
mov
add
xor
out
std
mov
out
mov
out
or
xor
sub
jne
es
and
sub
add
xor
ret
cmp
test
sbb
push
mov
adc
add
pop
call
mov
repz
nop
sbb
adc
add
mov
jg
nop
jecxz
jecxz
test
test
push
mov
inc
sub
add
add
dec
lea
das
push
in
add
enter
add
aam
inc
mov
mov
lds
inc
out
jmp
or
mov
out
sub
data16
or
xor
je
int3
cmp
jg
inc
mov
mov
clc
mov
push
cmpl
sub
ds
in
cmpb
cmp
push
push
mov
in
add
pop
mov
pop
stos
insb
cmp
cmp
inc
cli
lods
sbb
mov
jb
and
cmp
add
clc
add
pop
add
and
cmp
push
mov
sar
jecxz
test
outsb
lock
dec
inc
adc
shll
bound
inc
in
push
andb
sbb
dec
out
cmc
pop
jmp
into
jo
xchg
scas
jle
mov
test
mov
sti
pop
popf
mov
pop
adc
mov
mov
call
pop
mov
cmp
cmp
mov
movsb
movsb
test
rolb
inc
rorb
cwtl
mov
mov
sbb
mov
faddl
mov
inc
inc
out
lret
mov
pop
nop
inc
and
add
pop
shrl
xor
add
mov
push
jmp
jne
sarb
mov
movsb
add
les
ja
stos
adc
pop
xchg
mov
out
popl
sub
push
and
adc
adcb
push
push
adc
inc
int
mov
dec
popa
or
xchg
pop
test
sbb
xor
sub
movsb
inc
sub
push
ja
movsb
xchg
sbb
dec
mov
movsl
jmp
dec
in
pop
adc
mov
stc
jecxz
push
je
mov
xchg
ds
sti
xor
adc
repz
jnp
lea
cmp
fsubrl
aaa
and
xor
xor
mov
shrb
fimull
mov
andl
or
dec
pop
xchg
enter
lcall
out
push
push
mov
adc
or
ljmp
mov
xor
jp
mov
inc
xchg
mov
sbb
cmp
sbb
insl
add
or
or
insl
sub
sbb
and
adc
or
sbb
sbb
roll
add
xchg
fwait
sbb
sahf
enter
add
add
mov
sbb
push
clc
enter
jge
je
xor
fwait
xor
test
jl
mov
insb
pushf
cld
ret
lret
out
inc
sbb
iret
outsb
pop
and
test
lea
stos
sbb
test
lock
lds
adc
add
mov
xchg
add
push
push
mov
lret
and
and
imul
mov
imul
iret
mov
jns
add
popa
dec
cwtl
rol
pop
aam
sbb
jecxz
hlt
xor
cmp
repz
jecxz
sub
outsb
jns
out
add
sbb
jecxz
aad
sbb
add
jo
rorl
push
add
call
or
or
push
or
push
movhps
or
add
adc
test
add
adc
ss
xchg
arpl
mov
pop
sbb
movsl
adc
into
inc
movsl
adc
idivb
jecxz
add
mov
data16
dec
sbb
or
add
inc
mov
test
daa
or
test
sbb
jl
fisttpl
rol
ss
xor
mov
add
cltd
or
adc
rolb
push
out
sbb
pop
cmpl
push
int
add
test
test
popa
xor
or
mov
lods
cmp
out
xchg
inc
mov
inc
mov
or
clc
aas
test
and
xchg
add
adc
mov
test
pusha
popa
loopne
and
data16
add
movsl
cld
or
leave
add
push
bound
ret
pop
and
imul
sarl
push
adcl
inc
imul
mov
mov
lds
ja
shl
loopne
call
adc
clc
insl
jmp
repz
or
add
dec
pop
mov
lahf
push
pop
in
push
out
in
or
ja
popa
inc
mov
adc
add
mov
icebp
adc
pop
cmp
jecxz
mov
fdivrl
dec
aam
cs
std
andb
out
and
mov
int3
cmp
dec
pop
movsb
out
jno
cltd
inc
rclb
sub
fsubrs
sub
fdivr
adc
movsb
add
push
push
cli
out
mov
mov
cmp
cwtl
mov
rolb
pushf
sbb
popf
inc
mov
rclb
popa
aam
xor
sub
sub
sbb
aas
pusha
stos
xchg
lret
mov
xchg
fsubs
push
adc
or
outsb
add
mov
leave
subl
aad
fimull
lods
int3
call
xor
daa
jne
mov
add
mov
push
aaa
fsubs
jb
push
movsl
fcomps
xor
xor
jmp
lea
imul
int3
subl
sub
and
sahf
and
pop
mov
mov
sbb
or
mov
int3
push
loopne
loop
fcoml
icebp
cmp
ret
sbb
add
sub
xchg
ficoml
add
push
xor
or
or
cmp
add
aaa
out
cmp
fiaddl
mov
jns
jne
test
jno
aad
scas
mov
mov
sbbb
lea
cli
add
movsb
in
aas
adc
fimuls
test
xor
dec
popl
in
adc
jecxz
pop
imul
mov
push
sbb
add
push
adc
arpl
push
dec
clc
push
xchg
fimull
cmp
xchg
push
jg
in
xchg
aam
cs
sub
shll
ljmp
shr
cmpsb
xor
or
dec
jae
xchg
movl
push
pop
xor
sbb
out
cwtl
fdivrs
daa
xorb
pushf
addl
sahf
repnz
xor
mov
xorb
pop
fistps
jle
xor
xchg
das
shrl
ret
or
fildll
mov
pop
sarl
mov
shlb
shl
dec
adc
add
ret
sub
push
ret
stos
xchg
repnz
nop
out
lahf
test
daa
movsl
rcll
jne
jecxz
fmuls
push
xor
add
inc
int3
dec
sub
or
adc
sysret
sub
out
dec
inc
push
xor
xchg
push
jbe
inc
cmp
pop
aam
dec
mov
outsb
jno
dec
cmp
sbb
aam
movsl
jo
fcoms
inc
mov
fs
xchg
add
insl
lock
mov
pop
fnsave
fistps
mov
or
mov
jmp
movl
inc
cs
jecxz
inc
push
lcall
push
xor
sbb
push
scas
pop
dec
mov
dec
add
aad
inc
incb
je
inc
in
rcll
js
jmp
sub
and
pop
pop
mov
sti
jne
mov
aam
mov
jnp
mov
add
push
inc
mov
inc
cmp
je
sub
popa
inc
mov
cmp
sbb
and
or
popf
test
rcrb
rcrb
sub
js
incl
mulb
aaa
jmp
or
push
adc
push
xorl
nop
inc
int3
jno
daa
pop
fsubrs
xor
fcomps
aam
xor
ret
je
sbb
sbb
pop
or
jmp
sub
ret
iret
negb
jmp
sub
js
mov
dec
mov
mov
mov
xchg
shlb
or
mov
jge
mov
leave
add
fdivl
add
cmp
fmul
add
dec
jne
xor
shll
push
sub
cpuid
cmp
neg
aad
mov
fnstenv
xchg
out
mov
aaa
xlat
mov
js
cmp
das
in
cmp
ret
dec
inc
into
xchg
aad
or
add
decb
push
icebp
sub
fmul
xchg
mov
or
repz
sub
insb
icebp
xor
stos
mov
lods
in
inc
test
xor
mov
jge
mov
cmpsb
je
xor
push
gs
out
cld
or
xchg
mov
push
je
dec
push
cmp
mov
movsl
mov
add
mov
mov
test
movsb
das
test
andb
sub
push
jecxz
sub
push
ret
cmp
lret
clc
pop
adc
xor
or
aad
or
and
pop
roll
add
jg
fwait
add
jl
jge
or
jmp
dec
std
sub
lret
insb
rclb
nop
or
lahf
mov
add
outsb
mov
movsl
mov
xchg
es
lods
jp
inc
pop
sbb
daa
and
test
jb
aam
call
fdivl
into
scas
xor
push
in
sti
dec
mov
mov
add
adc
adc
pop
xchg
jg
and
stos
lcall
pop
fdivrs
pop
push
sbb
aam
cmp
xor
shll
leave
and
fsubrl
imul
sbb
or
cmp
xchg
pop
add
jne
repnz
jno
lret
insb
cld
rcrb
fwait
mov
inc
push
pop
dec
inc
lock
jns
push
push
data16
pop
in
or
lea
ret
jne
mov
sarb
or
mov
mov
into
scas
int
and
and
mov
cs
repnz
sbb
jno
and
add
shl
sub
movsb
adc
mov
sahf
int3
int3
sub
add
int3
jl
insb
sbb
fmul
add
mov
sub
mov
xor
nop
into
ror
insb
push
imul
add
mov
mov
fwait
mov
mov
or
out
or
into
mov
inc
or
xor
ret
call
lcall
out
mov
ljmp
movswl
daa
hlt
lret
mov
mov
lret
cs
xchg
jmp
pop
pop
shl
leave
jg
ljmp
in
xchg
cmp
fimuls
lea
jmp
enter
or
sbbb
mov
lret
mov
imul
sub
add
call
scas
add
int3
xor
adc
arpl
repnz
movsl
mov
testb
dec
add
fdecstp
divb
cmp
cmp
pop
sarb
xlat
add
aam
push
ficompl
and
mov
cltd
scas
out
sub
jns
xchg
lock
jne
jbe
rcl
mov
mov
mov
mov
adc
inc
lret
or
ret
mov
jns
ljmp
je
scas
cmp
fwait
sub
lock
call
mov
cld
xchg
incl
mov
cmp
adc
lea
shrl
incl
outsl
xor
test
add
ljmp
movl
jne
and
movb
repnz
imul
sub
mov
or
dec
mov
gs
or
dec
cwtl
sbb
fdivs
adc
dec
testb
jecxz
mov
arpl
pop
sbb
and
test
push
pop
fmulp
sti
push
xchg
fcompl
inc
or
jp
dec
movsl
frstpm(287
and
std
cmp
lret
cmp
add
sti
fs
das
adc
sbb
lea
inc
jmp
cli
lcall
and
pop
jno
addr16
add
nop
push
and
xchg
stos
pop
sbb
repnz
stos
xor
inc
fistpll
int
push
xor
dec
int3
movsb
sub
add
cmp
xchg
test
mov
cmp
xor
mov
add
or
hlt
cmpsb
ficompl
lods
adc
inc
scas
popf
mov
shlb
mov
add
inc
push
sub
and
out
insl
inc
jns
xor
loopne
stc
fistl
push
out
data16
cld
sbb
les
in
xor
mov
inc
cltd
aam
pop
mov
push
jbe
push
mov
push
mov
add
addr16
xchg
adc
outsl
pop
in
sub
cmp
mov
nop
test
aam
or
add
fisubs
out
xchg
dec
and
xor
test
je
enter
jl
sbb
inc
fnsetpm(287
add
sbb
jle
ljmp
add
inc
les
test
pushf
call
mov
inc
and
or
sbb
jae
jbe
les
jae
pop
stos
adc
rclb
mov
bound
add
loop
cmp
jl
adc
mov
cmp
jg
cmp
enter
lock
add
push
inc
outsb
daa
mov
fwait
pusha
cmp
test
mov
dec
mov
jl
xchg
inc
enter
repz
fwait
or
jns
fs
sbb
ret
xchg
mov
pop
mov
aaa
cltd
popf
push
arpl
jne
add
add
outsb
mov
fldt
mov
sub
jmp
inc
mov
push
repz
and
push
and
stc
mov
mov
push
testl
lret
lock
jmp
jmp
xor
xchg
sbb
and
xchg
mov
scas
push
pop
sub
lock
lcall
jmp
mov
mov
dec
out
lea
push
mov
stc
push
push
stos
inc
loop
mov
out
adc
jne
xor
jmp
pop
dec
lcall
mov
das
lock
mov
addr16
hlt
xchg
add
push
insl
jbe
jle
dec
call
call
sub
mov
or
or
sbb
push
rcr
stos
xor
sbb
mov
push
xchg
add
mov
mov
shl
cmc
sub
xchg
sub
or
icebp
ja
jmp
insb
add
aam
jae
adc
fs
and
in
mov
test
inc
rcll
dec
dec
arpl
pop
mov
jp
js
mov
mov
inc
mov
xchg
push
hlt
cmp
dec
push
jg
in
add
lcall
adc
int3
or
pop
xor
push
cmp
mov
pop
adc
not
and
inc
stos
cmp
mov
in
push
mov
and
rolb
std
pop
cwtl
stos
in
xchg
das
and
fisttpll
orb
dec
lds
push
xchg
dec
test
sar
jmp
jmp
cli
pop
add
push
or
push
mov
movsl
inc
pushf
jmp
imul
daa
jb
or
jecxz
inc
add
pop
shll
add
std
arpl
sub
mov
mov
push
xor
jns
add
pop
cmc
mov
popf
jns
inc
sbb
popf
push
imul
mov
les
addl
xor
add
push
jl
ljmp
push
xor
adc
sub
repnz
bound
loop
push
push
in
sarl
mov
adc
xchg
ret
inc
pop
pop
inc
ljmp
sbb
mov
jmp
and
mov
mov
mov
mov
lods
test
mov
pushf
cwtl
xchg
nop
shll
fcomp
loopne
call
in
lock
clc
icebp
daa
fcmovnu
cld
addr16
lds
or
addr16
sbb
addr16
sub
addr16
cmp
addr16
inc
dec
dec
addr16
push
pop
pop
addr16
fs
addr16
js
addr16
addr16
xchg
cwtl
pushf
jmp
addr16
into
into
mov
into
into
mov
mov
into
enter
into
into
into
aam
fsub
into
into
into
into
in
in
lock
into
into
into
hlt
clc
cld
add
mov
add
addr16
adc
addr16
and
addr16
xor
addr16
inc
dec
addr16
push
push
pop
addr16
pusha
fs
insb
jo
js
addr16
test
ret
in
in
in
in
ret
ret
in
in
ret
ret
in
in
ret
push
test
or
or
test
das
push
pusha
js
sbb
aas
push
test
adc
add
xchg
or
stc
gs
or
in
or
cmp
or
in
hlt
xchg
push
addr16
lds
jae
dec
sub
sbb
jb
inc
cmp
je
dec
out
lds
cmc
shll
fisubrl
ljmp
mov
push
add
or
mov
push
mov
dec
sub
fnstenv
cmpsb
jp
loop
hlt
scas
dec
inc
xor
shlb
lods
mov
stc
mov
sub
jno
xor
je
mov
adc
aas
inc
out
dec
or
scas
cmpsb
adc
inc
adc
xor
mov
mov
ret
pop
mov
and
jmp
mov
sbb
in
push
mov
adc
mov
mov
jnp
mov
loopne
stc
dec
inc
sbb
push
popw
xor
cmc
push
aad
and
adc
ret
icebp
sbb
jl
pop
test
sahf
and
push
pop
iret
mov
decl
ret
add
and
sbb
mov
add
lret
std
js
sub
cmc
pop
incl
daa
cpuid
inc
cli
fiaddl
inc
xchg
cmc
cmpsb
and
loope
repnz
inc
in
pop
pop
shl
cmp
in
divl
mov
lea
rorl
or
mov
mov
int
pop
adc
mov
andl
fdivl
out
fwait
sarb
ljmp
add
test
sbb
dec
aam
es
and
jmp
sbb
movsb
sbb
nop
test
or
push
jne
mov
sbb
not
mov
sub
inc
enter
clc
test
jo
cwtl
mov
lahf
or
sbb
add
jne
inc
inc
js
jmp
jg
mov
rcrl
and
sbb
or
xor
fs
xchg
ss
or
popl
dec
pop
pop
or
stos
mov
mov
loopne
sub
add
add
add
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
add
add
jmp
rclb
mov
sub
mov
sbb
add
xlat
add
mov
test
sbb
in
insl
push
mov
add
add
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
sldt
add
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
add
pop
cmp
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
and
or
adc
stos
sbb
add
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
loopne
sbb
lahf
xor
mov
js
stc
add
add
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
add
add
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
or
add
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
daa
add
in
cmp
mov
inc
movsl
fisttps
xchg
fadds
add
or
shll
jmp
outsb
xor
mov
sarb
add
add
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
add
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
orl
mov
add
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
add
add
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
sldt
add
lock
add
inc
push
imul
xorb
sbb
push
imul
aam
add
add
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
add
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
add
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
add
add
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
push
repnz
pushf
mov
test
add
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
add
es
outsl
ja
mov
out
jo
ud0
or
add
cmp
pop
or
adc
sahf
gs
clc
sar
imul
add
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
add
add
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
add
add
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
add
add
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
add
sub
jb
mov
je
and
dec
jae
jb
outsb
je
cs
xchg
lret
bound
addr16
insl
shll
outsb
add
cltd
or
insl
outsl
fs
push
sub
pop
xor
sub
jo
out
imul
outsb
mov
pop
popa
data16
decl
insb
outsl
jae
gs
xchg
or
imul
mov
push
add
roll
mov
mov
and
dec
mov
and
fnstenv
imul
fs
push
bound
je
xchg
repz
dec
pop
mov
push
pop
in
and
jp
and
sub
je
jae
jae
call
outsl
outsl
imul
lods
dec
fdivs
rorl
sub
and
sub
bound
sbb
sbbb
imul
mov
pop
jo
xchg
outsl
inc
xor
inc
rclb
cmp
lds
loope
std
mov
gs
jl
and
and
add
dec
gs
mov
mov
dec
mov
add
sub
fnstenv
push
js
out
jle
jb
loopne
dec
daa
enter
inc
dec
dec
push
inc
dec
dec
inc
insb
pushf
js
insb
jb
lods
lock
je
or
mov
or
dec
ss
mov
bound
jno
inc
fisttps
addr16
jno
loopne
ja
popa
jb
data16
daa
and
incl
xor
ret
lret
stos
icebp
jbe
lods
jle
mov
jmp
fs
in
mov
js
cmp
dec
fidivrs
inc
dec
inc
inc
inc
popa
data16
fcmovbe
test
sub
sub
js
xor
pop
lret
je
push
gs
mov
inc
mov
pop
dec
push
pop
push
inc
inc
sub
xlat
adc
push
mov
sub
mov
inc
gs
mov
daa
xor
movsb
push
lock
inc
mov
push
stos
addr16
mov
imul
out
nop
testb
pop
and
pop
mov
pop
mov
insb
jo
push
mov
data16
jns
hlt
jb
jg
inc
sahf
adc
movsb
imul
ja
je
and
imul
and
je
push
cltd
inc
and
dec
inc
pop
fwait
add
inc
inc
inc
push
push
push
push
pop
jne
inc
dec
inc
mov
leave
arpl
inc
inc
inc
sub
xor
outsb
inc
out
popa
cmp
cld
inc
in
jecxz
xor
dec
lods
pusha
push
je
sbb
sahf
add
imul
arpl
xor
ja
bound
rclb
outsl
cwtl
add
je
mov
xchg
or
dec
aam
sub
xor
outsb
aam
fnstenv
arpl
and
sti
xchg
fisubrs
or
cmp
inc
push
xor
and
mov
subb
mov
inc
stos
cmp
lcall
pop
daa
cs
mov
mov
mov
imul
xlat
dec
test
xchg
jae
mov
dec
popf
movsb
or
enter
jne
or
xchg
mov
into
and
mov
push
outsl
jmp
inc
mov
je
xor
push
xor
jae
in
pop
mov
arpl
sub
cmp
adcb
gs
incl
mov
sub
arpl
lret
mov
in
xchg
and
gs
addr16
and
and
jns
xor
mov
jne
gs
push
add
movl
add
add
pop
hlt
orb
xor
icebp
pop
add
cmp
pop
or
aaa
xor
push
push
pop
and
pop
pop
and
pusha
push
and
js
xor
mov
or
outsb
mov
mov
add
jmp
cmp
je
lods
inc
mov
pusha
inc
jae
imul
push
push
repz
arpl
jb
sbb
call
add
xlat
mov
and
bound
es
jo
mov
pop
push
mov
pushf
insb
outsl
into
lods
mov
adc
push
gs
xchg
and
xchg
lock
or
xor
sbb
xchg
ja
lock
inc
jne
xor
fs
cmpsb
or
fcoml
and
arpl
sub
and
or
jb
cmp
jns
pop
mov
or
adcb
loopne
sub
xor
fisubl
je
cld
sub
pop
sbb
sbb
scas
loopne
xor
dec
outsl
fs
dec
pop
push
gs
daa
or
dec
out
mov
pop
dec
dec
lds
data16
dec
loope
push
and
inc
pushf
pop
outsb
mov
mov
and
sub
popa
or
testb
xor
fs
in
negb
jge
add
test
add
sub
fwait
outsb
and
and
add
fildll
jb
jae
push
fisubrs
dec
popa
addr16
dec
test
in
mov
cmpsb
out
or
imul
in
push
jnp
inc
jge
bound
shll
ljmp
xor
mov
dec
ret
gs
out
popa
or
pushf
lock
dec
jae
data16
arpl
xor
pushf
je
dec
dec
lock
xchg
dec
add
dec
inc
push
dec
inc
dec
pop
mov
mov
ja
loopne
call
sub
add
xor
sub
dec
inc
fwait
mov
gs
add
dec
push
inc
push
pop
pop
addl
lret
leave
dec
js
lret
add
inc
inc
and
cmp
je
js
outsl
insb
cmp
cmpsb
jecxz
mov
mov
insb
xorb
xchg
fs
outsb
notl
popa
pop
leave
dec
scas
mov
enter
imul
lret
stos
shll
push
dec
dec
push
push
cmp
in
out
shrb
mov
dec
inc
and
mov
xor
push
xchg
arpl
xor
je
imul
cmpsb
mov
cli
lds
or
popa
imul
loope
fnsave
sarl
aaa
xor
mov
lret
xor
and
jns
xchg
insb
xor
xchg
cmc
aaa
pop
gs
rorl
fidivl
cli
xor
jecxz
adc
and
push
lahf
inc
outsl
out
mov
cmp
inc
sbb
jo
dec
fxch
repnz
shll
insl
adc
inc
sub
in
sbb
xchg
mov
test
fs
pushf
or
mov
mov
dec
test
in
xor
fadd
iret
imul
cli
push
mov
aam
test
adc
aad
dec
mov
mov
sar
in
pusha
pop
xlat
xchg
je
pop
cmp
dec
out
xor
dec
xor
addl
inc
addr16
mov
lahf
inc
xor
xor
inc
jbe
cwtl
sub
jne
add
lcall
add
outsl
js
adc
scas
mov
inc
popa
popf
test
push
inc
pop
mov
xor
popf
pop
jl
cmpsb
lahf
movsb
loope
shl
jo
inc
dec
mov
adc
dec
out
sub
ja
jmp
iret
shrb
cwtl
xor
xor
push
cmpsb
lcall
js
lcall
or
gs
ud1
imul
subb
push
gs
cmp
cwtl
mov
outsl
lds
in
imul
pop
jmp
jle
out
negl
mov
js
mov
cwtl
sahf
lds
jb
and
jp
aam
iret
in
mov
pop
mov
inc
fs
nop
inc
fbstp
dec
mov
cmp
xor
jb
popl
dec
aam
sahf
out
mov
data16
cwtl
sbb
test
xor
js
lret
les
outsl
inc
loopne
scas
jno
sbb
cmp
xchg
dec
mov
mov
mov
sbb
cmp
aaa
add
adc
and
fnsave
and
cmp
jae
imul
insb
mov
jns
fbstp
cli
adc
jnp
data16
shrl
lret
mov
lods
imul
and
fldcw
test
jb
data16
inc
hlt
or
cmp
outsb
jp
inc
xor
popa
push
leave
cmpsb
lds
addr16
jne
leave
mov
je
mov
push
arpl
adc
and
mov
or
aad
test
add
sbb
xchg
pop
ret
jae
jbe
aam
outsl
jne
ljmp
and
mov
call
repnz
insl
jmp
jmp
lret
fnstcw
addr16
jmp
dec
jbe
mov
scas
popa
lods
mov
popa
fs
xchg
arpl
fdivl
aam
into
in
inc
cmp
lock
xor
jp
popa
mov
movsb
fidivrs
andb
pop
ret
mov
push
shrw
jns
imul
imulb
mov
outsl
cmp
mov
push
das
sarb
lahf
inc
insb
sub
cld
shl
daa
push
shll
popa
sbb
iret
mov
pop
jmp
fwait
inc
leavew
xor
int
test
mov
xor
jns
imul
pop
jns
cli
xchg
fnsave
sti
push
jb
loop
mov
lds
test
rcrl
cmp
lret
and
or
outsl
arpl
inc
mov
sbb
les
fidivrs
lea
loop
fs
movsb
ja
mov
fstp
int3
cmp
or
push
test
lcall
and
xchg
jnp
inc
push
xor
sbb
add
push
orb
sbb
push
cwtl
push
push
dec
mov
int3
inc
bound
pop
sub
jns
cli
xor
mov
jmp
orb
cmp
cmpsb
inc
jns
rclb
add
int3
jmp
mov
xor
push
dec
inc
dec
dec
dec
inc
add
sub
cmp
cmp
andl
ja
shlb
jge
movb
pushf
mov
jl
mov
movsb
cmpsb
mov
outsl
lret
outsl
xchg
mov
inc
fisttpll
bnd
mov
inc
lods
add
ss
mov
xchg
ficomps
sub
mov
sub
sbb
out
jns
lahf
not
jb
xchg
icebp
fs
iret
insb
leave
fwait
jge
int3
cmp
aad
dec
dec
cmp
push
lds
lahf
std
cmp
jecxz
cmp
fcoms
das
jo
or
insl
sbbb
push
loopw
mov
cwtl
ret
icebp
repz
in
in
repz
jecxz
cld
push
out
xchg
out
ja
loope
cmp
lcall
inc
enter
or
pop
je
cmp
iret
movsl
xor
cli
pushl
pop
hlt
push
xchg
or
hlt
jnp
jbe
add
add
adc
mov
mov
sbb
add
cmp
mov
add
xor
xor
pop
or
push
mov
inc
jo
pop
xchg
add
xor
in
dec
push
cmp
insb
jae
mov
je
add
stos
adc
pop
aaa
add
jmp
pop
add
add
cli
jmp
add
sbb
cwtl
cltd
cltd
ret
and
out
cltd
adc
test
fsts
movsl
lcall
add
out
lcall
iret
into
enter
sub
subb
shrb
xchg
rol
pop
popf
fdivrl
adc
adc
mov
lcall
test
fwait
add
inc
into
adc
outsb
sbb
adc
lcall
in
cltd
xchg
lret
iret
data16
gs
cmp
add
leave
inc
mov
mov
cwtl
repz
imul
stos
pop
adc
popf
repz
lret
mov
insl
popa
or
les
jne
adc
inc
inc
pop
add
test
jnp
adc
mov
sbb
fbstp
leave
iret
lret
stc
add
pop
fisubs
mov
leave
mov
stos
mov
sbb
in
pusha
enter
push
dec
ret
shlb
ja
jno
addr16
mov
add
cld
in
leave
jmp
cli
fdivr
std
jmp
ljmp
add
cmpsl
push
lock
mov
loopne
cltd
aad
clc
std
aad
sti
jmp
jmp
sub
ljmp
lret
xor
repnz
shrb
cwtl
daa
lock
lock
clc
cli
jmp
mov
add
inc
pop
add
and
data16
outsl
test
push
push
jae
and
arpl
and
jmp
xchg
dec
into
aas
int
pop
jae
inc
or
jb
cmp
pop
insl
push
ljmp
frstpm(287
outsb
push
inc
push
push
inc
pop
mov
dec
fs
jb
pop
sub
in
push
cmpsl
dec
jp
and
inc
fwait
movsl
sub
out
aas
push
insl
sbb
pop
sub
repnz
pop
jnp
lahf
mov
jl
push
inc
movsl
jbe
mov
add
loopne
inc
pop
inc
adc
pop
pop
in
cli
sti
push
ret
shrl
or
xchg
int
and
push
add
and
pop
ja
and
sahf
or
arpl
mov
dec
pop
xlat
les
insl
imul
mov
cs
adc
fisubl
push
push
lea
arpl
pop
andb
and
dec
rcll
call
dec
push
push
jmp
inc
jb
push
mov
lret
imul
cltd
sub
sar
inc
jb
lods
sti
pop
imul
repz
enter
ret
mov
mov
jae
xchg
xor
xor
inc
jae
sbb
dec
pop
sub
dec
jae
mov
xor
pop
fs
xor
xchg
inc
sub
pop
xchg
das
clc
das
add
jae
mov
push
pop
cmp
mov
sub
sub
jne
sbb
shlb
popa
ffree
dec
xchg
add
add
imul
add
dec
inc
pop
add
orl
push
push
xchg
jb
es
mov
cmpsb
loop
sbb
rolb
xor
sti
cs
lahf
in
arpl
jecxz
xchg
popfw
and
dec
jae
add
jmp
adc
mov
jae
jae
bound
jae
xor
lret
movsl
adc
and
fadd
ss
jmp
add
neg
imul
lea
dec
dec
and
xchg
mov
js
add
je
je
iret
jnp
add
and
lock
dec
dec
insl
jae
rclb
cmp
sub
xchg
jecxz
scas
sub
aas
and
sub
sub
cmp
jae
je
mov
push
xor
ret
mov
ja
jnp
test
repnz
push
mov
inc
ficomps
mov
mov
shrb
dec
dec
inc
pop
push
push
inc
dec
mov
aam
inc
fnstsw
and
dec
jae
loop
xchg
hlt
add
sahf
out
push
adc
xor
inc
jns
out
dec
push
pop
fs
je
jns
out
mov
loopne
test
jge
xchg
lret
add
repz
lock
cld
out
push
or
sahf
out
sahf
xor
cmp
inc
jns
out
dec
push
pop
fs
out
sahf
out
nop
cwtl
mov
sahf
mov
ror
js
out
fsub
in
hlt
cld
add
repz
jecxz
adc
and
iret
repz
xor
dec
pop
cmp
repz
insb
je
orb
movsb
lods
mov
repz
mov
cmp
repz
aam
loopne
lock
repz
add
or
out
sahf
out
and
sub
sahf
out
sahf
cmp
push
pop
jns
out
pop
fs
je
mov
jns
out
mov
out
sahf
mov
mov
hlt
iret
repz
adc
cmp
repz
dec
dec
push
pop
pop
repz
repz
je
mov
pushf
movsb
lods
mov
iret
repz
mov
dec
cmp
repz
hlt
add
cmp
jns
inc
adc
inc
add
mov
inc
and
xor
and
popa
mov
andl
leave
jns
xor
xor
push
hlt
rorl
jecxz
xchg
xor
cmpsl
std
xchg
fcmovne
stc
or
dec
mov
int3
inc
in
pop
xchg
outsl
and
mov
push
test
jne
sub
add
ja
mov
adc
leave
push
adc
xor
popa
xchg
mov
add
or
out
in
xor
jnp
mov
jae
imul
mov
add
sub
sbb
xor
aaa
add
shll
dec
xor
ss
cmp
mov
cmp
xor
xor
xchg
fstpl
popf
xor
jno
mov
outsb
jle
jns
imul
or
andb
popa
movl
jns
mov
and
sub
jnp
xor
les
imul
bound
call
sub
lds
call
jno
cmpsb
shlb
xchg
dec
aam
push
fwait
jae
xor
mov
ja
adc
mov
pop
xor
jo
out
call
shll
cmp
jp
arpl
insl
sarb
mov
push
test
pusha
jb
sbb
sahf
lea
leave
xor
cmp
cltd
data16
fbld
mov
mov
jb
fxch
mov
into
iret
mov
fdivrs
mov
jns
dec
addr16
outsb
lret
fs
insl
sbb
sub
out
rcl
mov
fsubrs
or
gs
mov
loop
je
loopnew
jae
repz
jae,pn
insl
sahf
popa
fldenv
lods
push
subb
mov
out
into
sub
insb
bound
in
imul
lcall
xor
pop
xor
cmp
or
jae
insb
push
arpl
outsl
popa
leave
xor
sub
aaa
imul
arpl
jge
addl
outsb
xor
push
push
imul
negb
xor
sub
movl
dec
jg
sbbl
cmpsl
pop
cmp
movsl
adc
jae
outsb
enter
sub
sub
and
cmp
inc
add
pop
arpl
jl
sti
pop
dec
add
jne
inc
test
push
or
outsl
xor
xor
sub
fidivl
jae
decl
adc
gs
sub
mov
test
inc
push
inc
pusha
outsb
dec
mov
dec
inc
inc
push
insb
pop
dec
push
push
inc
push
and
fdivl
pop
xor
push
lahf
ret
cmp
and
sbb
dec
push
inc
push
inc
std
out
dec
dec
dec
into
leave
ds
dec
pop
in
in
shrl
and
or
push
push
dec
jge
cmp
push
jge
aad
aaa
insl
fmuls
xor
mov
adc
iret
cmpsb
push
sub
mov
push
mov
push
cld
mov
dec
xor
lret
dec
mov
stc
cmp
shlb
push
dec
push
sub
cli
cmp
mov
testb
push
rorb
idivl
into
push
push
dec
push
dec
push
inc
roll
inc
xor
mov
push
push
dec
stc
imul
and
rclb
popf
add
inc
mov
inc
fs
dec
push
loop
xor
adc
and
int3
sbb
lahf
cwtl
inc
sub
loopne
xorb
jle
stos
jle
pop
push
outsb
or
call
sahf
push
xchg
repz
inc
dec
inc
push
aaa
xchg
add
je
fbstp
je
mov
push
ret
setns
pop
jnp
jns
sbb
out
jle
mov
clc
push
and
test
mov
inc
and
cs
sub
cmp
xchg
repnz
fs
je
inc
test
dec
or
std
inc
jecxz
inc
xchg
inc
or
movsl
stc
bound
ljmp
jo
movsb
and
popa
insl
popf
adc
dec
ds
sahf
lcall
add
repnz
aaa
jp
imul
push
pop
int
dec
mov
inc
icebp
jg
shll
xchg
nop
arpl
and
push
cmpsl
addr16
sbb
add
push
sub
dec
and
jecxz
jb,pn
sub
mov
xor
leave
xchg
jl
divb
outsb
push
daa
test
pop
xor
movsw
lea
sarl
leave
dec
outsl
jge
ljmp
outsl
xor
xchg
pushf
jae
pop
xor
dec
popa
stos
insl
jns
xchg
push
out
add
jl
jp
mov
inc
jbe
mov
sahf
addr16
xor
sbb
sub
cmp
shll
cmp
push
sub
jmp
xor
xor
inc
or
hlt
jne
xor
lcall
jae,pn
or
jo
dec
and
pop
int3
bound
cs
jnp
jmp
sbb
outsl
std
xchg
jnp
fucom
adc
nop
push
ds
add
mov
pop
mov
ss
je
mov
imul
in
cmpsl
jno
inc
push
and
test
dec
inc
push
xchg
sbb
fs
and
push
fdivl
sbb
out
out
or
push
adc
cmpb
inc
push
push
mov
fistl
lea
pop
add
push
dec
mov
jne
inc
lock
sbb
sarl
fs
popf
clc
data16
addr16
push
inc
mov
inc
flds
pusha
jo
xchg
inc
cmp
mov
outsb
pop
pop
push
test
or
inc
dec
inc
push
out
pop
ror
fistl
jae
popa
mov
lds
popa
iret
aam
and
out
stos
imul
inc
int
mov
dec
jae
arpl
xchg
stos
dec
ficoms
negl
nop
jno
imul
insb
imul
pop
lcall
push
into
push
jmp
push
cs
jo
lahf
insb
xor
imul
inc
push
mov
add
decb
push
lea
mov
sbb
mov
cmpsb
fwait
mov
adc
inc
inc
push
dec
sti
ja
inc
mov
cmpsb
mov
arpl
mov
shl
or
dec
addr16
gs
add
js
adc
sbb
fiadds
sbb
xchg
jno
mov
outsw
imul
dec
sahf
and
icebp
jae
ljmp
insl
add
cld
xor
insl
stos
and
sub
outsl
jg
flds
imul
sub
repz
bound
cwtl
ret
stos
sbb
aaa
ja
jp
mov
add
aam
cmpsl
aaa
repnz
fs
mov
fimuls
testl
insl
fs
and
ror
mov
dec
sbb
sahf
pop
push
ljmp
adc
pop
test
jns
bound
cs
sub
xor
xor
mov
ret
ja
outsl
xchg
shrb
xor
ds
int
or
adc
cltd
pop
xchg
xchg
jmp
push
mov
mov
or
push
mov
imul
jle
ret
add
push
sti
dec
push
push
dec
inc
dec
mov
push
push
xchg
cs
and
jae
fistpll
gs
sbb
rcll
sub
in
fcmovnbe
loop
iret
pop
out
jmp
sbb
sbb
test
arpl
mov
sbb
inc
push
bound
in
adcb
inc
popf
xchg
mov
scas
sbb
popa
in
frstor
pop
lret
mov
fisttpl
push
xor
out
cmpsl
xchg
mov
sbb
mov
sbb
jge
scas
mov
add
jle
ja
mov
lahf
or
push
pop
lret
adc
call
adc
cmpsl
data16
fsubrs
pop
sbb
aam
jecxz
js
jl,pn
imul
mov
ja
in
das
dec
xchg
movsb
cs
push
outsl
dec
sbb
inc
push
xlat
cmp
push
ljmp
cmpsl
jo
lds
cmc
pop
out
add
inc
sbb
ja
jne
jge
pop
xchg
adcl
repnz
imul
or
inc
mov
shr
push
data16
dec
jo
and
xchg
dec
outsl
mov
hlt
mov
xor
dec
gs
test
jp
lds
sbb
idivb
aaa
inc
lret
sub
fdivl
aaa
nop
pusha
pushw
cmp
push
stos
arpl
sarl
xchg
pop
dec
cmp
inc
dec
dec
pop
xor
in
insl
pop
xor
mov
pop
jmp
arpl
push
daa
xchg
pop
jp
mov
subl
pop
fstpl
pop
mov
adc
mov
pop
xor
in
mov
jmp
or
divl
mov
or
sub
xchg
repz
xor
shlb
sub
fldcw
xlat
xor
add
les
gs
dec
lret
jo
inc
xlat
sub
imul
je
or
mov
dec
std
mov
cs
jecxz
sub
cmp
sbb
sbb
mov
push
mov
xchg
lcall
pop
out
mov
mov
stos
rclb
push
imul
xor
outsl
insl
insl
popa
in
sbb
pop
jae
addr16
push
push
sub
nop
mov
in
scas
dec
loope
pop
xchg
in
pop
icebp
testl
and
sub
mov
rorl
into
xor
push
push
inc
inc
mov
cs
push
bound
add
push
rcl
stos
fdivs
sti
push
cmp
xor
sub
pusha
jbe
jae
addr16
and
loop
fidivl
nop
fstpt
dec
loopne
cmp
aaa
and
fs
fisubl
xlat
in
ja
mov
ljmp
adc
push
sbb
mov
test
dec
inc
pop
imul
dec
sub
adc
xchg
je
mov
jecxz
jge
ror
cli
adc
fsubrl
stos
jns
insb
lret
push
sbb
mov
add
and
dec
push
sbb
inc
leave
testl
stos
ficompl
push
sub
fildl
pop
pop
cwtl
mov
decl
ja
jle
adc
das
add
xchg
lcall
pop
cmp
test
gs
roll
sub
mov
xor
arpl
repz
sub
das
or
mov
and
aaa
add
rep
arpl
out
mov
dec
arpl
mov
mov
push
push
movsb
gs
push
cmp
mov
xchg
dec
jbe
and
fidivrs
loop
pop
xor
sbb
movsb
xlat
out
mov
xchg
mov
ds
mov
push
imul
jno
dec
aam
cli
js
jb
negb
jnp
gs
ljmp
sbb
lcall
repz
mov
outsb
and
ret
insl
dec
shll
jmp
fnstsw
pop
jge
push
pop
cmp
fstpt
cmp
xor
xchg
jne
jl
cmp
das
mov
fisubs
xor
mov
mov
push
popa
mov
xchg
arpl
gs
sbb
enter
aad
xchg
push
push
sbb
push
daa
imul
inc
inc
push
ret
repnz
push
adc
scas
adc
mov
jno
cli
inc
imul
arpl
push
sbb
decb
or
call
popa
ja
cwtl
push
jb
and
xchg
mov
jmp
mov
insl
sub
pop
mov
jne
ljmp
stc
sti
fidivrs
fildll
mov
pop
inc
xchg
imul
sub
dec
test
lds
je
jmp
or
push
pop
inc
xchg
ja
mov
push
jno
pop
movsb
mov
xchg
rol
inc
xchg
icebp
adc
jne
add
and
inc
movsb
add
xor
inc
push
pcmpeqd
push
and
mov
jle
jg
fs
mov
jae
inc
in
and
and
insb
xchg
bound
dec
push
lcall
jns
dec
ds
lahf
js
popf
adc
pop
inc
inc
cmp
pop
std
sub
sbb
sub
fnstenv
sbb
sub
sti
iret
mov
sti
fnstenv
mov
arpl
insl
jbe
fsubs
and
je
movsb
clc
ja
imul
lret
mov
dec
lods
pop
rcrl
jae
dec
enter
fidivrs
and
pop
push
push
repz
xchg
mov
xchg
bound
sbb
icebp
pop
xor
add
sbb
addr16
lahf
mov
add
cmp
dec
std
lea
popa
inc
imul
jns
mov
arpl
shlb
jns
fistpl
jae
jb
pop
cmc
imul
shrb
lret
add
in
fcoml
aas
ret
ja
push
dec
inc
inc
pop
movsb
lahf
dec
outsl
pop
psrlw
js
inc
cli
jb
icebp
fidivrs
rcl
mov
inc
fcoml
jl
ffreep
adc
mov
and
push
cmp
mov
mov
add
mov
in
sub
mov
push
sbb
cmc
mov
xor
cwtl
outsl
movsb
leave
xchg
push
insl
mov
xlat
mov
rorl
dec
in
mov
mov
cli
mov
sbb
scas
jbe
mov
dec
mov
dec
out
push
push
lods
mov
stos
push
inc
lahf
xchg
mov
jnp
jns
and
push
xchg
imul
loopne
ljmp
push
lods
pop
inc
cmp
popa
push
jno
xchg
pop
scas
jmp
leave
out
cmp
sbb
iret
popa
push
dec
imul
out
insl
sub
pushf
mov
fnstenv
fsubs
jecxz
fs
jb
push
jmp
adc
rclb
push
push
into
inc
sahf
mov
jecxz
add
push
jmp
sub
inc
xchg
cmpsb
dec
push
cmpsb
jns
jne
dec
jo
sub
sbb
and
andl
mov
or
fisttpl
fdivrl
ret
add
push
mov
adc
data16
and
cli
push
data16
ret
aad
call
cmp
out
jo
dec
pusha
gs
xchg
inc
push
and
leave
mov
or
mov
or
inc
mov
aaa
xchg
push
and
jae
cmp
or
or
or
adc
adc
jl
jno
shr
jnp
and
inc
pop
mov
ss
repnz
xor
add
push
mov
inc
imul
cmpsb
insl
seta
add
rcr
bound
sbb
sub
out
push
iret
inc
cli
push
les
xchg
xor
cmpsb
imul
ljmp
or
mov
leave
push
dec
lret
loop
or
int3
fcmovne
xchg
pop
call
mov
es
bound
aad
popa
jae
push
mov
mov
les
add
and
sub
xchg
imul
add
pop
xlat
push
push
jmp
lock
fstps
mov
aam
xchg
mov
lea
repnz
and
mov
xor
test
adc
lods
fildll
jg
call
out
ret
imul
cmp
movsb
aam
jne
fcmovbe
rcrl
scas
mov
stc
sub
xor
add
inc
and
xor
push
sarb
dec
inc
das
jg
add
int3
sarb
add
lret
jne
inc
aam
push
div
aam
sbb
lret
rol
adc
shrb
fs
cld
adcl
lods
push
cli
cli
pop
outsb
hlt
xor
push
addb
jbe
and
dec
and
out
xchg
cmp
cmp
dec
and
lods
daa
data16
sahf
test
inc
mov
xchg
dec
and
dec
pusha
push
das
adc
xchg
cmc
xchg
and
stc
jge
sub
shll
push
mov
iret
xchg
outsl
mov
or
fiaddl
mov
xchg
adc
mov
mov
repnz
enter
inc
in
into
push
sbb
xchg
cmc
popf
push
rcrb
fs
xchg
fld
push
pop
mov
ja
rcll
popf
pop
out
xchg
sub
pop
sub
sub
mov
aad
inc
adc
pop
cmp
or
ficompl
repz
outsb
out
push
jae
or
cli
adc
cs
mov
cmp
dec
dec
adc
mov
je
push
cmovs
jns
sub
dec
dec
inc
or
je
je
lds
out
xchg
and
movsb
push
dec
sti
aaa
out
xor
das
mov
fstl
js
nop
arpl
push
out
imul
dec
ret
add
inc
cmp
dec
ffree
fwait
xchg
add
jbe
outsb
jno
nop
fidivs
fwait
in
mov
outsb
mov
test
pop
nop
icebp
cmp
xlat
inc
push
fidivrl
pusha
sub
mov
mov
pushf
sub
sub
inc
gs
jecxz
mov
sti
pushw
jns
lcall
xor
dec
add
cmc
jnp
fisttpl
jbe
gs
out
xor
and
dec
xor
dec
fisubrs
jo
repnz
sub
jae
jno
push
lds
or
push
inc
inc
pop
xor
mov
inc
cmp
cmpl
cld
popl
or
push
lds
add
pop
or
inc
cmpb
adc
adc
mov
pop
mov
dec
pusha
add
add
int3
sbb
call
push
xchg
lret
adc
or
push
sbb
stos
repz
add
imul
outsb
jns
je
lret
sbb
xchg
testl
and
xor
xor
leave
lret
pop
in
fs
leave
sbb
movsb
int
mov
sub
neg
jns
xor
push
inc
push
jb
jl
xor
imul
inc
mov
aaa
and
das
and
nop
push
cli
test
enter
popa
into
aad
test
xlat
pop
filds
dec
mov
push
xor
pop
sbb
push
jno
test
insb
dec
dec
xor
push
ss
push
pop
dec
push
and
stc
pop
pop
sub
sub
pusha
jno
or
dec
or
sbb
cmp
fcoml
xor
xor
add
sub
push
pop
and
pop
lcall
das
mov
jmp
inc
cmp
sahf
mov
mov
cs
popa
stc
pop
jge
idiv
mov
nop
mov
movsl
ljmp
and
ds
inc
pushw
nop
ret
adcl
mov
push
sub
mov
mov
pop
ss
das
outsl
fnstcw
in
sbb
test
fmul
mov
std
cwtl
test
adc
cmp
loop
dec
dec
or
mov
insl
jns
out
add
and
mov
xchg
xchg
inc
roll
jb
xor
call
fs
pop
xor
mul
enter
sar
sub
sbb
cmp
testb
jle
mov
rolb
dec
push
xchg
push
sub
push
push
inc
dec
inc
divb
adc
fwait
loopne
mov
cmp
outsl
icebp
xchg
dec
addr16
adc
shll
add
xor
adc
popf
adc
sub
sub
cs
jge
out
mov
and
cmp
les
nop
add
jno
and
sbb
rcll
ds
xor
lcall
cmp
inc
xchg
lret
in
das
inc
dec
inc
pop
sti
jle
mov
into
mov
xor
lds
mov
inc
cmp
sub
sub
inc
push
dec
cltd
sbbb
mov
xchg
ficompl
mov
and
test
and
mov
imul
imul
add
mov
mov
push
imul
add
cwtl
jmp
inc
and
and
insb
dec
jae
xor
jo
daa
or
mov
cs
cwtl
xchg
in
and
xor
add
cmpsb
adc
push
sub
add
cld
jns
sub
jae
xor
push
out
ss
out
hlt
and
cmp
cmp
sub
shl
sub
sub
pusha
cmpsl
mov
fbld
cmp
fidivl
xor
inc
mov
test
aas
jg
jl
lret
xor
push
dec
dec
cli
leave
int3
xor
imul
lea
fisubl
negl
dec
mov
imul
push
or
push
dec
les
xor
or
push
jae
test
or
dec
outsl
push
fs
pop
sub
jnp
push
or
js
jp
scas
jns
stc
outsl
jo
push
lods
lcall
iret
mov
jbe
sahf
subb
jae
push
dec
loop
push
mov
mov
cmc
arpl
jmp
push
bound
pop
inc
push
adc
cs
sub
push
ja
dec
cs
pushf
sub
call
jmp
cmc
arpl
adc
pop
and
mov
mov
push
jge
push
xorl
mov
xor
and
lea
adc
adc
jecxz
pushf
mov
outsl
inc
xor
insl
pop
mov
leave
sbb
xor
rcr
xor
pop
mov
pop
mov
mov
je
pop
insb
sbb
add
and
ss
into
sbb
jle
aaa
pop
mov
mov
ja
pop
xor
loope
js
into
sbb
pop
cwtl
fnsave
pop
cmpsl
inc
jo
xor
jnp
xor
cmp
iret
shlb
lret
mov
lcall
cmp
xor
cmp
xor
and
ds
cmp
xor
ds
cmp
aaa
es
cmp
cmp
sub
ds
cmp
cmp
xor
cmp
cmp
mov
ds
mov
mov
xlat
pop
fs
mov
pop
cmp
add
cltd
in
call
dec
mov
xor
sbb
push
movsl
jo
push
push
sub
mov
xchg
add
cmp
pop
int3
pop
push
jne
loope
mov
pop
push
add
dec
popa
aam
dec
dec
dec
loope
dec
pushf
mov
test
sub
shll
mov
pop
jmp
push
fnstsw
repnz
jo
into
push
mov
inc
mov
pop
push
fs
cmp
aam
data16
addr16
inc
dec
mov
push
add
scas
pushf
mov
pop
dec
imul
mov
test
dec
push
jne
push
mov
push
jne
daa
and
cmp
dec
add
push
shll
pop
inc
or
jns
es
cmpsb
movsl
jo
push
push
xchg
sub
lcall
add
call
dec
mov
popa
sub
cmp
pop
or
mov
clc
cs
fcompl
mov
inc
fbld
gs
pop
lret
adcl
lret
fcompl
mov
dec
rcrl
addl
pop
ret
xchg
mov
or
sbb
add
dec
dec
dec
inc
pop
nop
mov
sub
into
cmp
inc
push
cmp
scas
fwait
pop
xchg
jno
mov
pop
push
mov
mov
dec
cli
inc
rolb
inc
inc
push
in
and
pop
pop
add
into
fisubl
add
arpl
inc
dec
in
and
cmp
push
test
add
mov
xor
sti
xor
pop
lds
insl
gs
fildll
mov
jno
sub
lea
push
popa
push
xor
mov
out
out
mov
xchg
or
fsubl
jecxz
cmp
mov
xchg
or
push
out
mov
lcall
xchg
push
pop
sbb
cmp
lea
cwtl
pop
and
xchg
xchg
dec
jbe
adc
or
outsl
sub
xchg
fiaddl
into
fsubrs
aaa
fs
adc
jmp
xchg
inc
push
jbe
cmp
adc
pop
xchg
mov
sbbb
add
popa
jo
push
sbb
mov
add
js
inc
inc
add
ds
subl
push
push
lcall
dec
in
xchg
call
fwait
pop
jae
and
rcrl
ret
lea
cwtl
call
imul
stos
jmp
fsts
mov
addr16
int
xchg
jb
stos
xchg
mov
mov
outsl
mov
cmp
insl
cmpsb
mov
jae
mov
es
test
mov
mov
repz
xchg
fistps
jns
je
in
movnti
xchg
es
mov
jb
xchg
fcmovne
fstl
xor
mov
xlat
dec
dec
adc
jmp
sbb
iret
sub
mov
lods
cmp
cs
push
aaa
mov
lcall
cwtl
dec
subb
mov
fsubr
push
mov
fs
ds
fwait
jae
js
cli
dec
addr16
sahf
jno
inc
in
cmc
call
pop
sub
pushf
sub
into
stc
dec
and
mov
insb
inc
inc
cs
jg
cmp
push
aam
imul
arpl
dec
xchg
cmp
cmpb
int3
sbb
ret
test
or
inc
inc
dec
inc
sbb
mov
xor
insb
data16
add
inc
std
sbb
fs
test
push
dec
mov
inc
and
lea
test
pop
jae
xor
sbb
push
push
inc
bnd
fstps
insl
stos
inc
cld
lods
pop
push
daa
mov
inc
popa
add
icebp
gs
pop
ss
je
aaa
add
gs
dec
jae
jnp
movsb
outsb
push
nop
cmpsb
daa
testb
inc
mov
in
xor
xchg
imul
popa
dec
mov
jns
sub
jae
outsb
push
rep
xchg
jge
test
push
pushf
adc
data16
cld
push
mov
repnz
test
push
ljmp
fldenv
into
iret
adc
lret
lcall
iret
leave
cmp
and
outsb
add
xchg
jg
ja
pushf
leave
jl
xchg
adc
test
mov
dec
dec
rcrl
inc
jmp
dec
mov
xchg
sahf
dec
divb
clc
iret
mov
sbb
pop
insb
jb
mov
fwait
dec
mov
repz
shrb
das
xor
xlat
mov
imul
in
mov
negb
push
add
sub
push
ds
aam
push
xor
inc
ja
pop
lret
shll
push
and
and
outsl
bound
cmpsb
inc
arpl
int
sbb
sub
push
dec
inc
lret
or
jp
stos
das
aaa
outsl
outsb
xor
mov
ljmp
push
push
pop
les
inc
and
push
push
xor
add
dec
inc
mov
xor
shrb
dec
jo
cmp
cmp
cmp
xchg
data16
push
cltd
mov
or
or
push
mov
test
inc
insb
out
outsb
stos
je
inc
mov
lods
push
sub
fs
mov
inc
imul
bound
dec
out
lods
mov
lret
dec
xchg
push
in
shll
push
lea
mov
jge
std
and
push
pop
mov
and
arpl
shrl
gs
mov
mov
xchg
pop
stos
jb
fistl
sbb
push
loopne
jl
jbe
adc
gs
inc
cld
stc
pop
mov
pop
fs
pop
shll
push
movsb
push
xchg
pop
je
in
sbb
ljmp
imul
mov
cltd
and
jae,pt
sbb
imul
lcall
bound
inc
jmp
lret
inc
sbb
pop
dec
and
or
std
cmp
adc
xchg
icebp
dec
jb
lea
inc
sbb
add
icebp
stos
stos
icebp
and
int
adc
mov
pop
mov
jne
cwtl
int
cwtl
andl
leave
fldenv
xorb
inc
icebp
out
icebp
fwait
dec
sbbl
popf
dec
adc
mov
lret
movsb
inc
sbb
icebp
add
test
ljmp
movsl
mov
add
pop
fnstsw
adc
mov
mov
leave
adc
pop
add
int
enter
out
test
iret
popf
insb
es
add
add
adc
movsl
adc
mov
lcall
insb
stos
push
add
add
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
and
call
xchg
rolb
dec
xor
rcrb
add
jo
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
xchg
add
insb
xor
pusha
xor
jle
pop
adcl
dec
out
das
jge
sbb
mov
repz
jmp
pushf
in
xchg
jl
mov
fnstenv
and
adc
xor
popa
mov
popf
iret
adc
mov
iret
fcos
push
xor
movsl
aam
sbb
jno
and
dec
lods
testb
gs
xor
jbe
fnsave
xchg
shll
cli
cmc
imul
cmp
popf
cltd
xor
adc
inc
lds
adc
push
enter
add
and
dec
push
dec
and
movsb
or
in
stc
adc
mov
or
popa
push
adc
aaa
nop
xchg
ret
ret
mov
xor
cmpxchg
xor
pop
mov
add
and
xor
imul
add
into
mov
movb
adc
and
sub
lret
aam
imul
push
push
add
xchg
orb
shlb
push
outsb
inc
mov
roll
dec
outsb
cmp
dec
fcoml
shll
sbb
dec
xor
cmp
call
push
xor
push
fildl
add
mov
sbb
outsb
adc
addl
mov
jp
in
sbb
scas
xor
je
addr16
pop
jp
mov
jecxz
add
mov
pop
out
xor
xor
add
notb
sub
dec
sbb
push
mov
or
add
into
sub
add
add
inc
shlb
pop
lahf
add
dec
loopne
xlat
adc
insb
jecxz
and
fsub
inc
gs
dec
pushf
and
outsl
cmp
push
inc
cmpsb
lods
ss
in
xor
pop
pop
outsb
pop
mov
dec
mov
add
add
push
sbb
or
rclb
fwait
test
rorb
cmc
add
pop
aaa
sbb
pusha
fs
mov
push
jecxz
or
call
insb
and
cwtl
cmp
les
adcb
cmp
movsl
or
or
test
add
clc
xchg
jbe
shrl
cmpsl
cwtl
inc
cmp
lret
in
sbb
pop
adc
or
sbb
sbb
adc
add
add
aas
inc
jecxz
and
stc
jno
call
jo
popf
jmp
test
cmpsb
pop
aam
xchg
jle
scas
jg
out
call
insb
pmullw
mov
ljmp
aaa
adc
sbb
push
jnp
add
test
pop
jne
jae
addl
xchg
jmp
call
xor
push
mov
adc
jne
and
xor
jae
pop
xor
push
dec
mov
sbb
dec
jp
inc
jo
loope
sub
data16
add
sub
cwtl
ds
insl
pop
xor
dec
pop
push
lahf
stos
and
lahf
je
jbe
data16
sti
dec
test
pop
cmp
xchg
cmp
adc
jmp
xor
cmc
or
sub
add
pop
imul
jmp
lock
lret
out
jg
cmpsb
or
jb
aas
and
ja
cmp
es
icebp
or
push
adc
sbb
and
int3
jecxz
sbb
stc
sbb
xchg
movsb
ds
fwait
stos
inc
xchg
add
jne
ljmp
mov
and
insl
pop
inc
andl
mov
enter
xor
data16
mov
sbbb
mov
outsl
addr16
jae
test
xchg
mov
and
arpl
cmpsl
arpl
outsl
and
add
ds
das
lret
lock
add
or
sahf
out
sahf
sub
add
inc
or
sbb
mov
test
mov
cmp
out
or
sub
mov
sti
mov
rorb
into
mov
ds
std
push
and
cmp
es
fstpt
inc
ljmp
std
cmp
and
push
and
gs
and
mov
cmp
out
jbe
xor
mov
int3
and
movsb
cmc
mov
cmpsb
arpl
insl
jmp
xlat
bound
sub
mov
arpl
add
clc
loop
xchg
inc
outsb
sub
movsb
lcall
scas
and
in
jbe
ljmp
das
rorl
test
outsl
movsb
fnstenv
fldt
sub
cwtl
sbb
insl
dec
test
shlb
pop
lret
ja
fnstenv
and
sub
mov
mov
jge
mov
or
ficomps
pop
imul
inc
cmp
and
ret
or
mov
jae
fsub
hlt
jbe
out
cmp
nop
notb
cmc
outsl
shr
ja
arpl
scas
mov
push
dec
insb
mov
imul
inc
das
and
inc
ficoml
bound
out
sub
cli
xor
mov
push
dec
cmc
fimuls
sub
jmp
sub
sahf
sub
sbb
xchg
in
mov
leave
fs
dec
mov
scas
notl
jmp
dec
xor
fdivp
jnp
scas
pop
ja
fstl
push
sub
je
je
cmp
scas
push
nop
mov
mov
or
xor
filds
fidivrl
repz
sub
mov
es
push
test
xor
jae
imul
jb
jnp
mov
push
jecxz
xor
jb
mov
push
test
cmp
jae
or
jne
sub
adcb
inc
out
mov
sete
jmp
push
dec
ss
push
add
xor
jo
mov
push
and
add
cmp
xor
sub
jno
sub
jne
mov
mov
push
repz
push
gs
icebp
cltd
adc
add
insl
jne
sub
sti
ss
jmp
jmp
jecxz
push
cwtl
inc
jae
sub
push
add
fcmovu
mov
dec
movsb
push
movsb
fadd
inc
shlb
mov
out
push
xor
mov
xor
cld
add
push
xor
dec
gs
or
jg
cwtl
cmpsb
xor
addr16
and
dec
gs
ror
add
pusha
dec
dec
cmp
add
mov
xchg
adc
xchg
jge
mov
cmc
mov
mov
data16
in
xchg
dec
add
adc
shrl
cmp
mov
pop
push
lcall
dec
popa
js
imul
mov
mov
imul
enter
mov
push
lcall
cmp
dec
or
sbb
addr16
fwait
cmp
mov
push
xchg
push
fistps
inc
imul
inc
nop
xchg
test
add
bswap
mov
test
out
push
pop
popf
or
and
popf
int3
into
and
sbb
orb
inc
iret
push
fcmovbe
je
cltd
movsb
add
dec
mov
gs
push
jno
daa
jle
daa
push
fwait
cmp
rolb
inc
ret
mov
lcall
pop
xor
inc
sti
cmp
xchg
aam
jns
cs
subl
mov
daa
lock
and
sub
mov
enter
stc
sub
in
imul
push
lds
sub
mov
imul
mov
nop
shrb
sub
adc
mov
inc
sub
repnz
xchg
dec
mov
pop
xor
test
outsb
xor
lea
mov
test
lods
xchg
xor
rcrb
and
push
cmpsl
btr
sub
cs
or
lds
cltd
in
lods
jne
push
ds
jmp
add
cs
pop
dec
ret
clc
dec
inc
sbb
rorb
lcall
jae
push
jae
sti
xor
sub
cltd
cmpsl
loop
cli
cmp
gs
dec
sbb
or
imul
das
mov
decb
or
push
aaa
xchg
mov
cmp
mov
popa
push
or
out
pushf
adc
cs
push
ja
xlat
ret
and
ja
out
and
jle
ja
pop
es
out
sub
out
pop
cmp
aas
daa
ja
out
pusha
jle
scas
ds
in
out
xor
and
cmp
mov
sub
mov
das
repz
mov
pusha
xor
cs
loopne
adc
mov
and
cmp
mov
sub
sub
pop
repz
mov
jle
push
repnz
cs
mov
stc
pop
out
dec
cmp
and
xor
cmp
stc
pop
mull
out
clc
popf
and
into
out
cld
and
mov
jle
in
and
adc
and
mov
push
and
xor
add
pop
not
dec
push
inc
push
fnsave
mov
dec
bound
sub
or
pop
or
push
push
aaa
test
mov
jns
mov
test
enter
movntq
repz
out
cs
dec
dec
xchg
xchg
adc
push
inc
cmp
dec
push
add
add
dec
lea
test
clc
cli
cmp
mov
xchg
jl
inc
cmc
xchg
xor
cmp
or
out
ds
jmp
lret
sub
push
push
jne
jo
arpl
jne
pop
or
adc
scas
enter
stc
popf
das
xchg
in
lret
sub
imul
arpl
add
das
push
stc
jle
sub
mov
and
push
outsb
sbb
sbb
and
jo
pop
pop
testb
dec
es
push
xchg
imull
jae
and
fcomp
inc
test
dec
adc
mov
push
test
int
dec
add
push
jmp
xchg
stos
push
mov
jmp
fsts
popf
dec
or
push
mov
ret
jae
mov
sbb
pop
iret
pop
pop
repnz
mov
fists
stos
repz
xor
jae
loopne
sub
rcl
fildll
shll
mov
imull
mov
hlt
mov
mov
shlb
les
in
ja
nop
jecxz
lods
gs
cmp
fistps
in
jge
sti
sbb
jo
insb
test
outsb
cmp
mov
inc
add
pop
mov
pop
mov
cmp
insb
pop
hlt
fidivs
adc
pop
popl
outsl
jae
cmp
out
stc
jmp
lods
push
inc
mov
dec
dec
jl
gs
cmp
or
mov
dec
pop
push
inc
mov
inc
xor
in
imul
iret
or
fs
cld
lods
mov
inc
xchg
fmul
adc
push
adc
cmpsl
lods
and
push
jecxz
loopne
mov
aas
into
lock
add
cld
inc
and
mov
dec
push
inc
int
inc
jns
mov
inc
dec
pop
es
insl
inc
adc
popa
sub
jns
inc
inc
dec
xlat
xor
mov
xchg
or
mov
cmp
leave
push
imul
add
adc
and
gs
sahf
out
aas
pop
and
inc
cmpsb
inc
inc
dec
mov
pushf
jl
addr16
pop
jns
jns
or
std
push
test
cltd
inc
idiv
cmp
mov
push
daa
out
jle
lods
sbb
pop
jae
leave
je
jae
xchg
divl
insl
repz
mov
cmp
out
gs
arpl
pop
cmp
xchg
push
jb
push
xchg
repz
push
mov
inc
and
outsb
rolb
negl
mov
sti
push
cmpb
xor
xor
repz
popa
push
adc
jmp
dec
shll
or
ja
les
xchg
or
and
sahf
push
std
push
repz
iret
shrb
cld
jge
push
cs
fs
jno
add
mov
adc
rcl
orb
loope
int3
gs
hlt
inc
ljmp
jns
call
pop
xor
sbb
xorb
inc
loop
outsb
addr16
mov
inc
add
add
shlb
js
sbb
in
sbb
mov
lea
add
mov
lret
js
inc
and
xor
xor
push
push
or
cmpl
inc
jne
mov
add
movsb
jb
pushf
add
cmp
add
divb
pushl
repnz
push
call
repz
in
cmp
ljmp
add
call
pop
insl
add
or
pop
pop
pop
push
sub
sub
add
mov
lea
mov
rep
mov
stos
push
push
push
push
push
push
push
movsl
add
push
call
add
test
ret
orl
add
cmp
dec
mov
push
stos
mov
sub
dec
jmp
out
rol
or
hlt
je
pop
test
sbb
jae
std
add
lods
fcmovne
std
mov
cs
jle
push
imul
cld
cmp
jae
cmp
jne
adc
mov
inc
jbe
cmp
out
repz
mov
cmp
repz
add
data16
pop
out
pop
loop
push
lret
insb
adc
fs
push
insl
xor
xchg
decl
aas
bound
mov
pop
idivl
dec
xchg
inc
xadd
jns
scas
fwait
jle
push
dec
in
or
inc
dec
add
and
dec
dec
jp
adc
pop
cs
dec
cmp
sbb
inc
ljmp
mov
and
out
add
outsb
inc
mov
jnp
mov
inc
jne
out
mov
sub
cmp
xchg
outsl
test
dec
cmp
push
leave
cmp
out
test
push
imul
jno
add
xchg
mov
outsl
ss
sub
popa
popa
cmp
das
inc
xchg
dec
jnp
inc
push
sbb
aam
les
jnp
xchg
pop
sub
and
pop
xchg
test
xchg
add
cmc
sub
insl
andl
shll
addl
xorb
cmp
lcall
add
and
add
push
and
icebp
xchg
mov
inc
mov
neg
subb
push
enter
jl
imul
pop
or
cs
inc
test
xor
dec
sub
sub
push
ret
int3
push
out
mov
jbe,pn
lcall
inc
cmp
push
data16
dec
lods
idivl
mov
int3
jae
fbstp
inc
test
imul
jp
leave
popf
dec
push
adc
cmp
std
jae
rorb
or
inc
add
push
xbegin
ret
inc
pop
cwtl
jae
sbbb
inc
jecxz
inc
lock
sbb
ds
dec
add
sub
dec
sbbl
xor
xchg
out
mov
cmp
sbb
lods
mov
sub
mov
add
test
mov
add
addb
cld
ror
adc
je
iret
loopne
aaa
jp
out
push
adc
jb,pn
cmpsl
out
test
sub
or
push
std
adcl
out
lret
cwtl
push
mov
inc
cmpsb
clc
add
add
movsb
pusha
cmpb
loopne
lods
cmpsb
fbld
add
jle
cld
test
shll
filds
cmp
mov
iret
mov
add
in
call
xchg
mov
ficompl
pop
fisubrl
xor
jmp
fcomp
loopne
xor
call
push
or
or
inc
push
pop
pop
jbe
or
stc
mov
cld
or
or
jl
ficoms
push
movntq
out
repnz
shll
xchg
adc
repz
xor
repz
push
jg
pop
lret
push
push
mov
insb
push
xchg
dec
and
mov
fidivrs
inc
or
subb
jl
xor
repnz
ja
addr16
outsl
repz
mov
aaa
jecxz
sbb
int3
outsb
pop
lock
xchg
push
or
xchg
nop
and
aaa
inc
push
xchg
lds
lcall
xchg
insb
adcb
jno
pop
rolb
rorb
rclb
into
iret
repz
mov
nop
xchg
xchg
pop
ret
mov
in
xlat
xchg
js
xchg
sti
pop
repz
loopne
add
gs
and
iret
repz
fcoms
cmp
repz
adc
adc
iret
repz
hlt
and
int3
out
sahf
out
xchg
sbb
out
sahf
xor
and
adc
mov
jns
add
xchg
push
sbbl
add
cld
xor
inc
add
icebp
xor
dec
and
dec
loopne
add
xor
popa
push
movsb
icebp
das
in
and
and
xor
xor
xor
or
pop
rolb
push
jmp
or
inc
je
arpl
push
stos
cmc
jle
les
cmp
pcmpgtd
mov
push
pop
sbb
xor
push
inc
jp
mov
push
sahf
popf
sbb
jns
mov
inc
push
push
or
cmp
in
clc
cwtl
nop
dec
mov
loopne
and
insl
pop
iret
jecxz
mov
sbb
or
xor
pop
cld
and
js
inc
jo
aad
lock
push
push
or
cmp
sbb
pop
push
mov
and
inc
push
dec
out
in
pop
or
sbb
jnp
and
mov
xor
fsts
jge
cmc
pop
xlat
test
dec
out
scas
in
push
pop
adc
inc
adc
scas
jmp
xchg
push
dec
or
pop
fidivs
push
dec
push
or
xor
jns
add
imul
adc
fdivp
and
inc
inc
xlat
repz
test
aaa
sbb
mov
scas
addr16
dec
iret
fs
jno
xor
and
int
dec
cmpl
in
xor
add
push
xlat
lds
or
or
outsl
and
push
or
mov
test
mov
mov
push
inc
hlt
loope
xor
xor
mov
cmp
repz
pop
pop
inc
out
dec
cmp
cmp
jae
pop
add
iret
jecxz
arpl
jp
ss
add
movsl
sbb
adc
add
mov
mov
inc
adc
or
int3
jo
in
es
inc
in
dec
shll
mov
inc
aas
xchg
pop
out
cmp
cmp
dec
dec
mov
dec
shll
pop
in
bound
mov
decl
imul
cmpsl
xorb
add
cltd
js
pop
dec
dec
dec
mov
out
cmp
push
push
out
test
daa
sbb
out
testl
ret
movl
lock
ror
ja
pushf
push
inc
xchg
negb
push
pop
dec
dec
shll
dec
lods
mov
xchg
repnz
test
mov
out
dec
out
in
cmp
fisttpl
decb
cld
sub
dec
xchg
lock
out
fnstenv
sbb
in
mov
xchg
lods
sbb
repz
insb
mov
shll
pop
jbe
jno
outsl
sbb
cmc
adc
sub
fildl
popf
mov
clc
lahf
lock
shrb
dec
push
scas
xchg
mov
dec
lods
jbe
sub
pushf
mov
jo
sub
xor
out
push
cmp
mov
cmp
lds
into
or
out
mov
loop
call
out
loop
dec
jae
in
cmp
cmp
mov
fidivl
mov
xor
in
pop
cmp
repz
cmp
and
fsub
mov
ficompl
or
in
rolb
lock
fdivrp
xorb
jne
lock
sbb
jmp
in
cmp
out
shlb
movsb
jp
in
dec
lea
jae
mov
cwtl
xor
repz
dec
push
adc
mov
cmp
mov
repnz
mov
repnz
repz
das
dec
insb
clc
into
jge
xchg
mov
cmp
mov
test
sahf
out
movsb
pushf
xchg
mov
out
pusha
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
jns
out
cmp
xor
sub
jg
out
or
cld
xchg
loope
sub
sub
sub
sub
sub
sbb
enter
shrb
sub
pushf
sub
jg
loopne
call
stos
xchg
pop
mov
mov
mov
mov
enter
ret
cmp
ret
mov
adc
inc
sbb
push
and
inc
pop
mov
mov
ret
inc
and
sahf
mov
sub
add
add
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
cld
add
popl
cmp
cmpsb
iret
decl
js
outsl
loopne
jmp
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
add
add
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
add
dec
add
cmp
in
cmp
sahf
xchg
add
add
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
pop
fldl
xchg
and
and
int
int3
sti
aas
add
add
or
mov
fs
dec
lea
add
add
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
add
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
add
add
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
add
add
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
jmp
jg
sub
jge
mov
add
push
arpl
int3
and
call
cmp
jp
add
add
shrb
inc
xchg
mov
fmull
add
add
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
add
add
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
add
scas
push
xchg
jge
ficomps
frstor
push
xchg
lds
xlat
aam
fdivl
ja
mov
jecxz
push
cmp
enter
out
push
mov
lret
sahf
out
sahf
mov
dec
cmp
push
or
int3
loopne
mov
jno
lock
or
push
sub
cmp
repz
pop
insb
xchg
lods
iret
repz
mov
sahf
out
sbb
adc
xor
jns
out
pusha
je
cwtl
scas
mov
shl
in
clc
or
iret
repz
sbb
dec
pop
push
iret
repz
mov
iret
repz
or
and
jns
out
pop
push
mov
lods
mov
repz
leave
sbb
dec
pop
jo
cmp
repz
jno
iret
loop
add
sbb
sahf
out
sahf
dec
fs
xchg
cmp
fsubrp
add
adc
cmp
repz
ds
push
repz
js
mov
cmp
fdiv
add
push
jns
out
sbb
cmp
pop
out
sahf
out
jp
cmpsb
rolb
cmp
addb
sahf
out
sahf
pop
adc
sahf
out
or
adc
xchg
add
pop
xchg
push
push
and
imul
add
shl
add
testl
mov
aam
xchg
into
rcrl
push
imul
xor
dec
imul
mov
xor
movsl
pop
imul
mov
pushf
enter
dec
mov
inc
outsb
fs
mov
xor
aam
fldcw
les
pop
pop
cmp
add
sub
imull
std
cltd
xor
fidivl
fwait
ret
out
add
sbb
xchg
dec
aaa
je
push
das
clc
xchg
dec
sub
sbb
dec
jns
dec
dec
cmp
je
mov
and
push
jne
lea
es
jmp
test
insl
adc
inc
adc
xor
jge
les
add
or
outsb
repnz
js
add
fildll
test
inc
bound
fldl
repz
jbe
add
cmp
cltd
sbb
outsl
inc
aaa
adc
push
add
pop
xor
add
xor
gs
lds
inc
into
int
dec
cmp
push
cmpsb
hlt
push
sub
jns
callw
nop
stc
mov
mov
imul
mov
data16
xor
leave
sbb
add
call
sub
add
xor
cwtd
cmp
mov
cli
push
mov
out
push
fisttpll
push
push
xchg
push
outsl
aam
push
das
mov
movl
inc
test
mov
lods
xor
or
cmpsb
jg
pop
adc
and
inc
je
movsb
imul
push
cs
scas
add
inc
push
popa
dec
ljmp
cmp
mov
pop
mov
mov
mov
jo
arpl
fldenv
dec
data16
cmp
cwtl
mov
mull
xor
insb
cmp
push
out
adc
int
leave
xorb
lock
or
aam
rorb
fs
xor
add
jns
in
lock
mov
pslld
sub
not
mull
dec
out
pop
ds
bound
pop
jno
push
sbb
lret
imul
and
arpl
pop
inc
cmp
sub
add
inc
dec
aad
ss
mov
inc
sbb
cmp
add
and
xor
inc
and
adc
in
int3
add
xchg
push
and
movsb
cmp
cltd
sbb
cmp
testb
fidivs
fists
jle
fadds
mov
sarl
xchg
lods
add
mov
xchg
inc
incb
inc
cmp
jmp
jmp
pop
imul
mov
in
push
xor
notl
lret
push
mov
or
lea
inc
push
test
inc
loop
sbb
fs
pusha
sbb
add
mov
jl
insl
mov
stc
cli
adc
int3
add
insb
jae
push
lahf
add
add
jno
xchg
fisttpll
pop
adc
xor
pop
stos
test
jbe
add
xchg
xor
imul
adc
es
enter
popf
imul
inc
add
mov
pop
ss
mov
mov
arpl
xchg
xor
dec
xchg
cwtl
push
sarl
dec
rcl
mov
imul
push
popa
or
mov
add
sbb
decl
push
xchg
out
pop
or
ljmp
adc
jns
stos
lods
loop
je
and
xchg
jle
jl
fcomps
push
jbe
xor
jl
and
add
ret
add
iret
or
addl
xchg
aaa
js
mov
outsl
sub
stc
nop
xchg
imull
cmp
aam
push
or
popa
pop
pop
or
fs
in
imul
jns
and
jno
push
bound
sbb
lcall
cmp
or
dec
inc
xor
add
dec
sbb
aad
xchg
inc
lahf
sub
gs
out
push
push
mov
jno
and
jae
jo
shlb
push
jbe,pn
xor
adc
inc
imul
xor
sub
add
push
sub
mov
mov
dec
andb
jo,pn
bound
inc
sub
add
inc
add
mov
in
add
insb
adc
add
add
adc
add
add
add
adc
add
add
add
lcall
add
adc
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
add
add
mov
sub
push
push
lea
push
push
xor
call
roll
dec
loope
push
push
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
sbb
inc
add
stos
sbb
inc
xor
and
mov
adc
or
pop
and
push
rorb
sbb
inc
add
scas
and
sub
jle
xor
add
adc
dec
xchg
jl
int3
or
mov
cmp
push
xor
push
adc
lods
mov
push
sbb
adc
cltd
mov
adc
dec
adc
dec
sbb
inc
cmp
adc
push
lods
fcoms
in
stos
call
push
adc
add
push
push
push
call
xor
adc
inc
cld
push
push
wbinvd
push
push
sbb
ret
test
mov
or
xor
sub
add
inc
push
mov
cmpl
je
jae
test
sbb
push
mov
jnp
xor
ja
cli
cmpsb
lea
ret
enter
sbb
push
call
movsl
mov
repnz
inc
inc
push
push
lcall
and
movsl
push
insb
jle
cmpsb
mov
xlat
add
filds
addb
cmp
data16
cmp
xchg
lcall
test
inc
jne
xchg
jmp
notl
cwtl
addl
and
lea
pop
sbb
xchg
mov
mov
in
or
enter
pop
xchg
jb
adc
mov
mov
sbb
adc
and
jne
add
jnp
inc
or
inc
icebp
add
movb
dec
ret
add
js
inc
fcomi
dec
xchg
inc
sub
cmpb
pop
cwtl
movsb
popf
pusha
or
pop
pop
pop
pop
ret
adc
and
sbb
add
mov
xchg
rcrb
adc
push
call
or
inc
sar
xor
jne
rcrb
push
push
ret
pop
or
mov
stos
pop
add
jmp
inc
out
fbstp
or
push
jne
or
dec
shr
or
xor
mov
sar
xor
or
stos
pop
push
mov
xchg
and
leave
cld
clc
or
dec
cmp
or
scas
inc
xchg
movsl
dec
push
jmp
mov
add
sub
add
inc
adc
sub
pop
pusha
push
cltd
popa
inc
orb
sbb
in
add
cmp
jge
push
inc
xor
mov
add
sub
call
dec
jne
xlat
jmp
shll
cmp
and
jae
or
rclb
les
aas
addr16
lds
and
or
je
cmp
inc
xchg
in
add
adc
fs
add
push
scas
jecxz
fiadds
adc
push
push
call
sbb
scas
ds
lods
aam
jge
out
aad
test
inc
bound
mov
inc
push
xchg
lds
sbb
jae
jge
dec
or
mov
add
movsl
movb
mov
push
cli
pop
rcrl
stos
mov
adc
lret
shlb
xor
xor
push
jg
inc
call
mov
sbb
push
lock
add
xor
add
push
push
jl
lcall
cmp
mov
sbb
jge
fcoms
cltd
test
ss
pop
insl
sub
or
addb
leave
bound
hlt
push
sbb
pop
sub
mov
shrb
cmp
enter
inc
std
iret
and
adc
adc
popa
mov
jmp
pop
dec
nop
cli
cmp
jns
jne
stc
jmp
cmc
pop
outsb
push
shl
movl
mov
pop
mov
leave
jns
pop
inc
pop
xchg
jbe
sub
pop
cmp
lahf
mov
ficompl
jne
xchg
cmp
movsb
cmp
cmpsl
add
sahf
inc
adc
dec
mov
jmp
jnp
adc
push
push
push
push
insb
inc
pop
or
addr16
call
pop
xchg
outsb
jg
mov
inc
or
scas
sub
sahf
or
push
and
testb
cs
rcl
fdivrs
rorl
jae
jmp
push
adc
rorb
testb
stc
mov
movsb
test
xchg
dec
test
push
push
jmp
insb
cli
inc
or
cmp
insl
push
inc
jb
xor
ds
outsl
adc
dec
add
in
jmp
lcall
add
lock
call
mov
adc
hlt
call
ss
dec
xor
repz
cmp
subl
mov
call
sbb
sar
push
pop
mov
cmp
sub
sbb
or
ss
imul
scas
add
inc
outsb
jns
in
div
push
imul
sahf
or
fs
push
jbe
jb
iret
xchg
aaa
mov
and
mov
sub
inc
bound
xor
ja
ljmp
inc
dec
mov
cs
insb
and
push
mov
outsb
jns
loop
add
jne
gs
xor
mov
dec
popa
addr16
mul
mov
outsl
js
ja
mov
fimuls
adc
cmp
js
pop
pop
aaa
sub
dec
inc
fldl
outsl
dec
mov
dec
stos
sub
push
testb
std
or
and
sarb
hlt
or
add
repz
add
je
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
aam
pop
add
add
add
pop
add
adc
add
pop
add
add
and
pop
add
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
