call
in
sub
push
push
lea
push
push
xor
call
cmp
int3
jo
add
mov
inc
push
mov
push
add
lea
notb
push
data16
and
push
and
mov
es
insb
add
les
jle
add
pop
dec
xchg
mov
enter
adc
mov
pushl
and
or
or
ficompl
inc
add
fwait
mov
ret
lahf
add
fildll
push
jb
inc
test
pop
jle
mov
pushl
adc
inc
outsl
inc
add
jmp
pusha
andl
dec
icebp
icebp
adcl
add
xchg
sub
clc
decl
test
or
cmc
mov
or
add
jne
pop
aam
xchg
insb
push
std
out
and
pmaxsw
adc
xor
repz
jo
inc
sub
jo
fmulp
cmp
sub
adc
test
push
mov
xor
repz
pop
sti
inc
jecxz
pop
lock
add
push
das
xor
push
jns
add
lea
add
jg
neg
fidivrl
or
mov
ja
inc
lea
push
cwtl
loop
fsubl
lret
push
push
xchg
fidivrs
fwait
cld
mov
cmp
jmp
push
jl
pusha
stc
aaa
add
cmp
je
jmp
repz
push
fmull
add
in
pusha
daa
jns
add
mov
scas
mov
push
arpl
cmp
addr16
cmpsb
pusha
sti
je
mov
push
sub
sub
repnz
pop
mov
adc
adc
sbb
popa
sub
jne
or
adc
loopne
add
fidivl
add
js
insb
mov
mov
fildl
jae
sbb
sbb
sub
or
mov
scas
xor
mov
stc
arpl
add
ss
popa
xchg
loope
dec
jmp
sbb
mov
mov
dec
adc
or
movl
xor
and
bound
lods
mov
inc
pop
or
scas
cmp
popa
add
push
shll
or
xchg
outsl
sub
pop
mov
jge
lock
dec
push
mov
dec
out
push
sbb
or
sub
cmp
cmp
adc
in
adc
dec
push
push
cmc
dec
pop
in
mulb
adc
or
mov
add
xchg
cld
lock
cs
mov
pop
jbe
xor
jmp
jae
test
fdivp
push
pop
cld
clc
hlt
and
pop
aad
push
jo
jne
mov
je
clc
clc
cld
mov
mov
sbb
loopne
add
or
rcr
clc
shll
mov
pop
cs
and
xor
mov
out
jg
lock
outsb
mov
or
cmp
je
cmpsl
or
push
lock
mov
add
call
insb
fidivrs
js
out
push
push
arpl
adc
ds
sbb
in
jl
adc
test
cmp
hlt
loopne
pop
xchg
mov
push
mov
mov
pusha
fdivrp
adc
or
rcrb
loop
clc
push
lea
cmp
out
mov
pop
lea
rep
mov
mov
xchg
jl
jo
sbb
pop
cld
mov
stos
cs
imul
cmpl
icebp
mov
mull
add
iret
mov
lea
mov
inc
adc
pop
lds
cld
jecxz
mov
popa
jg
subl
inc
and
add
sbb
jp
pop
cltd
andl
mov
sbb
mov
cmp
or
mov
xor
push
sub
in
aas
aas
and
xchg
cld
sbb
test
ret
mov
sbb
pop
daa
cwtl
or
gs
xchg
cmp
js
adcl
seta
nop
rcrb
js
fnstsw
mov
adc
jg
cmpl
pop
sbb
mov
pmulhuw
adc
xchg
inc
ror
dec
dec
add
mov
or
push
test
lock
popa
test
xor
xchg
mov
int3
and
es
mov
repnz
lock
imul
push
and
jne
add
mov
cli
pop
jmp
pop
jne
sub
cmp
dec
rol
mov
popl
in
int
pop
add
leave
ret
push
jl
jbe
cmp
add
push
fmull
jb
jo
andb
sub
gs
push
jmp
fcoml
push
pop
rclb
iret
and
mov
cld
lock
cmp
in
push
pop
add
dec
outsl
push
push
ds
lahf
call
inc
cmp
jbe
xchg
inc
je
sub
stc
xchg
pusha
ljmp
pusha
pop
jne
in
das
inc
push
and
add
push
popa
shll
cmc
cmp
or
cmpb
adc
add
mov
jno
cmp
lds
push
xor
daa
dec
push
pop
clc
xlat
cmp
cld
fnstcw
nop
mov
add
je
cwtl
push
jne
adc
das
in
test
ud0
testl
jmp
cld
imul
pop
mov
pop
mov
jo
mov
pusha
jae
lahf
ds
xchg
push
ror
add
mov
cmpsl
lods
sbb
std
pop
and
andb
xor
sub
lea
push
push
push
mov
ljmp
rol
incb
mov
xor
mov
rolb
aaa
movq
pop
sub
cmpb
mov
push
lods
and
jbe
negb
or
fistpll
fidivrs
mov
out
sahf
cli
clc
lock
outsl
subb
sbbb
out
std
jnp
mov
or
repnz
push
mov
outsl
pop
jne
push
pushl
push
or
push
cmp
icebp
ret
dec
orb
fsub
repz
cmp
ja
jne
ret
movsb
imul
xor
shll
or
cmp
add
inc
inc
lret
mov
rolb
push
sbb
std
mull
insb
js
push
jo
mov
push
in
and
call
lock
loopne
jge
add
inc
fsubl
xor
lock
pop
inc
add
xchg
jl
adc
cmp
push
mov
jo
adc
je
push
or
rcl
push
lret
incl
lcall
cmp
in
inc
and
push
xchg
xchg
leave
shll
pop
sahf
or
mov
popa
ret
push
dec
lds
add
push
out
fists
jbe
or
or
scas
ret
jge
je
aad
pop
push
adc
mov
shld
clc
aaa
xor
cwtl
add
cmp
jb
out
lea
dec
pop
test
jmp
inc
jns
clc
test
hlt
xchg
clc
cmp
mov
daa
sub
jne
jg
cmovl
or
das
pop
lods
xor
push
lds
in
xchg
dec
lcall
ja
push
push
mov
scas
cmp
xor
push
cmp
dec
lea
pop
xor
test
jl
fisubs
adc
fs
xor
jle
or
xchg
push
pop
lock
mov
mov
add
or
xchg
das
or
pop
adc
enter
add
pusha
outsb
and
rolb
inc
cmp
and
add
ret
push
leave
mov
sbb
bound
jo
fmuls
test
dec
push
push
call
cld
add
inc
out
add
shlb
xchg
dec
pop
and
movsl
and
mov
cmp
dec
cltd
inc
mov
dec
pop
sti
cmp
dec
movsl
sbb
dec
and
out
jl
out
adc
add
mov
inc
add
mov
sbb
xchg
pusha
mov
lea
push
push
or
xor
push
xchg
in
pusha
sub
mov
in
sbbb
mov
or
pop
negb
sub
in
ret
inc
pop
cmp
jbe
push
in
in
outsb
out
adc
jmp
cmp
pop
fistl
mov
cmp
shrb
punpckhwd
push
cmp
pop
or
fwait
outsb
mov
gs
cld
mov
adc
pop
outsb
roll
sub
mov
or
or
push
call
adc
mov
or
repz
fidivrs
enter
jnp
push
fdivl
mov
adc
fdivr
inc
mov
cmc
sahf
jge
clc
inc
sarb
ret
hlt
je
rcl
mov
or
repz
jae
cmp
inc
fldcw
adc
hlt
dec
lock
lods
xchg
sbb
cli
das
add
mov
mov
mov
push
pop
inc
or
inc
push
adc
repnz
add
add
or
sub
testl
inc
push
loope
push
adc
sbb
testb
adc
cmp
flds
or
shrl
mov
mov
ret
lret
enter
adc
adc
cmpsl
pop
scas
cmp
aam
adc
sub
and
cld
cld
cld
sbb
and
adc
cld
xchg
sbb
icebp
push
mov
push
push
cmp
pop
push
jmp
pop
repnz
or
pusha
push
add
jle
enter
decb
jbe
cwtl
push
jnp
mov
or
adc
xor
xlat
mov
sub
and
sbb
out
or
xchg
xorb
ljmp
es
out
adc
push
mov
pop
ja
jbe
movsl
loopne
sub
sbb
popf
adc
sub
test
sub
sub
out
leave
in
ret
or
fsubr
dec
cmp
sub
aam
int3
pop
sarb
jecxz
dec
outsl
jmp
adc
mov
dec
pop
out
or
fs
js
cmp
push
and
cld
pop
dec
inc
je
shrb
cmp
push
pusha
rdpmc
xchg
std
push
mov
dec
pop
imul
mov
add
sbb
push
pop
lret
xchg
lea
mov
cmp
lea
cmp
xchg
ja
mov
push
mov
test
test
je
xor
mov
xor
and
jg
xchg
lock
mov
dec
jne
not
pop
ret
and
push
ror
sti
lea
lock
xlat
mov
es
inc
inc
push
es
out
sub
push
in
inc
push
decl
add
jecxz
divl
testb
je
dec
dec
add
xchg
cmp
ret
push
push
mov
and
sub
add
inc
add
loop
arpl
and
push
adc
fldl
fstps
or
pop
aas
std
cmp
rorl
xor
pop
call
mov
decb
sbb
mov
dec
shr
add
mov
dec
or
fiadds
lahf
fdivr
notb
add
adc
mov
std
jge
or
and
popa
ficompl
cs
sti
dec
or
dec
pop
jecxz
pop
bound
in
mov
pop
es
or
rol
inc
mov
adc
mov
sbb
lock
and
hlt
and
adc
push
adc
sub
enter
xor
enter
cmp
rcl
lret
cld
inc
xor
leave
inc
out
mov
jbe
jge
pusha
pop
mov
daa
ret
push
and
pop
inc
xor
add
and
inc
cmp
inc
and
sub
push
and
and
inc
and
and
inc
and
adc
inc
and
or
push
and
add
rdpmc
in
hlt
hlt
lret
or
mov
push
push
push
xor
push
clc
xor
mov
fdivrp
cmpsl
pop
cmp
add
cmp
jl
sub
ja
cwtl
push
cmp
jne
cmp
sarb
or
jge
incl
clc
mov
add
lea
cltd
idiv
mov
out
jnp
or
add
cmp
mov
nop
data16
shl
sbb
or
aaa
out
popa
dec
or
jge
dec
mov
jl
andl
out
or
jne
jmp
push
clc
adc
pop
or
mov
adc
jle
sbb
push
stc
dec
pop
push
or
push
pop
fcoms
mov
cmpsl
fnsave
pop
adc
jne
cmp
mov
int3
sbb
or
test
mov
cmp
je
inc
pop
inc
jl
lods
ret
mov
cmp
push
cmovne
adc
sbb
repnz
ja
push
ficomps
fcoms
subb
or
lahf
lods
add
sti
arpl
std
jg
lods
stos
and
je
inc
cmpb
jne
lea
dec
stos
lea
stos
fcomp
call
mov
mov
xchg
pop
pop
mov
test
loopne
dec
outsb
aas
mov
adc
rcll
jne
push
or
dec
sbb
inc
push
push
pop
inc
mov
or
insl
or
and
sbb
mov
inc
dec
jne
aaa
pop
or
lock
test
push
enter
sbbb
lcall
adc
sbb
pop
jmp
lods
shll
inc
sti
mov
cltd
adc
cmp
inc
or
pop
call
xor
sbb
dec
ret
mov
sub
and
sti
mov
enter
lock
jae
pop
jmp
sbbl
mov
dec
ret
pop
inc
cmp
jl
loope
mov
orl
sbb
sbb
enter
clc
shl
push
pop
sub
and
adc
call
inc
sub
jg
dec
lock
push
add
xlat
push
xor
es
sub
push
loopne
bndldx
xor
xchg
sub
pop
pop
sub
push
push
xchg
pop
adc
repz
rcr
pop
push
jo
movsl
push
mov
sbb
add
mov
sbb
and
push
push
cmpsl
add
subl
imul
xlat
scas
adc
adc
das
push
xchg
pop
jb
mov
repnz
push
pop
jb
xchg
test
mov
xchg
mov
pop
and
add
clc
jmp
and
shl
xor
pop
mov
xchg
sub
aaa
sub
bnd
ret
and
and
sbb
xchg
add
inc
mov
les
push
add
icebp
test
add
cmp
cmp
jecxz
loope
cmp
in
mov
sub
mov
ljmp
push
inc
or
fsubrp
paddusw
push
scas
add
icebp
andl
cmp
mov
dec
pop
jl
push
fcoml
mov
pop
push
aas
xor
push
popf
and
push
call
mov
enter
je
shr
jecxz
fbstp
dec
repz
hlt
cld
cwtl
mov
je
fnstenvs
je
push
inc
imul
out
mov
test
call
lock
imul
xor
xor
jnp
and
pop
push
mov
out
aas
mov
jne
push
and
test
push
jb
in
popf
push
insb
inc
aas
push
push
xchg
dec
addr16
xchg
jge
fidivrs
aaa
jl
aas
imul
push
cmp
inc
pop
lods
cs
shlb
insb
fists
dec
mov
add
and
test
int
mov
mov
jb
pop
std
sbb
sti
fcomps
lods
mov
push
inc
mov
gs
sub
sub
add
sbb
xchg
stos
pusha
or
sub
and
or
insl
adc
jl
mov
push
jne
or
mov
insb
dec
add
add
outsl
or
sbb
jp
sbb
pop
mov
mov
es
test
fdivl
outsb
gs
scas
mov
out
in
adc
test
pop
out
cld
std
add
movsb
enter
sbb
push
subl
mov
push
ret
cmc
fs
push
mov
lds
jge
cmp
fdivs
inc
loopne
mov
adc
push
sbb
xor
inc
fwait
or
xchg
inc
push
testb
cmp
sbb
push
or
cltd
add
daa
adc
aaa
inc
jg
pop
cmpsb
cmp
jb
jo
mov
fsubrl
pop
lock
aaa
jns
add
sub
push
shlb
repz
dec
push
cmp
sbb
pop
and
adc
add
sub
xor
inc
sbb
loopne
or
xchg
mov
movsl
push
pop
push
aaa
outsl
add
jmp
push
mov
xor
push
stos
and
incl
xor
adc
sahf
mov
insb
testl
mov
std
mov
pop
jmp
mov
jmp
pop
push
cmp
push
xchg
adc
and
inc
dec
cwtl
movb
cld
push
data16
popl
push
stos
insb
jl
jge
arpl
pushf
cmp
pop
insb
pop
repnz
hlt
ljmp
adc
jns
cmp
xlat
dec
push
jl,pt
dec
pop
or
inc
push
pop
mov
push
lds
and
mov
mov
cltd
adc
adc
pop
push
nop
push
cmpsb
addr16
push
push
mov
pusha
ret
cmp
cltd
push
push
jnp
add
push
lcall
sbb
jp
jecxz
mov
jg
jo
je
out
pop
jmp
adc
push
add
test
hlt
movsl
add
sbb
jg
out
and
mov
rep
push
stos
pop
out
cld
add
mov
ds
in
jo
aas
dec
stos
inc
fsubrl
test
push
daa
sbb
sbbl
push
pop
mov
sahf
push
popf
or
and
or
ret
inc
adc
fcoms
cltd
pop
add
lahf
pop
dec
mov
call
insl
jo
sbb
aas
jne
mov
fbld
loope
je
xlat
or
orb
jb
pop
pop
mov
mov
or
or
fs
or
data16
arpl
insl
add
mov
xor
cmpsl
clc
js
les
aas
cld
iret
or
adc
stc
mov
ret
test
or
push
sbb
xlat
out
mov
ffreep
push
inc
xchg
push
mov
nop
push
test
shrl
inc
lea
mov
test
mov
addl
sub
je
xor
mov
push
cltd
pop
idiv
cmp
jne
cmpl
jg
enter
dec
xor
popa
and
push
push
mov
and
fidivs
inc
scas
out
ds
xor
and
pop
repz
push
imul
lahf
aas
in
repz
lea
cmp
push
cmp
js
mov
nop
jnp
sub
sar
add
out
js
test
push
inc
xor
mov
push
or
cltd
fs
jl
xchg
dec
inc
xorb
mov
int3
int3
jp
cwtl
sbb
icebp
inc
adc
xor
jbe
and
adcb
or
jo
test
xchg
push
jecxz
ljmp
cmpsl
and
daa
cmpl
test
int3
ret
add
data16
sub
test
pushf
xchg
pop
push
std
enter
xor
jecxz
stos
add
add
dec
lods
in
loopne
push
mov
mov
push
xchg
out
mov
mov
inc
cmp
mov
or
sub
je
mov
add
cmp
push
mov
pop
inc
aas
cmp
adc
jnp
push
shr
cmp
rcr
int
cmpb
sbb
das
lock
pop
loopne
and
add
lock
dec
sub
jo
stos
das
inc
push
mov
inc
pop
xor
xchg
sub
adc
add
add
adc
clc
test
pop
test
jnp
sbb
xor
add
pushf
and
inc
dec
fsubl
fcmovb
add
sbb
mov
in
repz
jne
sub
testb
cld
push
insb
popa
clc
daa
lock
pop
push
jns
push
outsl
jae
or
mov
xor
cmp
dec
pop
push
jmp
dec
xor
enter
rclb
mov
adc
xor
daa
mov
fwait
nop
out
std
or
sub
loopne
repz
dec
jne
pop
adc
sar
ret
inc
fwait
push
jl
jmp
jp
add
nop
cmp
add
ret
mov
lock
fsts
ret
icebp
jecxz
xchg
xchg
lea
in
adc
inc
andb
push
jl
adc
ficoms
imul
add
ret
ret
sub
cmp
add
jbe
rclb
rclb
sbb
sub
xorb
fcomp
rorl
sub
push
adc
iret
pop
loope
pop
sub
add
mov
xchg
mov
fs
in
adc
daa
imul
cmp
jne
loop
xchg
jbe
jns
hlt
sub
les
or
test
mov
cmp
iret
hlt
out
cld
or
mov
movsb
mov
in
cmp
imul
bnd
vpcomub
mov
sbbl
sbb
or
inc
daa
xor
inc
sub
xor
negb
dec
adc
jle
mov
add
push
push
nop
pop
jmp
adc
in
xor
mov
je
addr16
xorl
jg
add
sub
xor
in
outsb
fs
out
fwait
jno
push
pop
pop
aaa
mov
div
pop
jp
leave
jae
cmp
mov
dec
xchg
cmp
pusha
cli
in
jno
mull
sub
sbb
pop
call
das
pushf
ror
add
adc
clc
les
shlb
xchg
push
je
dec
jae
das
cmp
cvtps2pi
xor
add
ret
jne
test
cmpsb
and
pop
push
push
sub
lock
add
pusha
sti
jae
popf
sub
cmp
xor
lahf
jbe
mov
lcall
jl
mov
pop
je
cmp
ja
mov
shll
and
call
cmp
add
test
inc
add
mov
jmp
lret
jecxz
test
mov
xor
test
ret
add
xor
je
push
cld
pusha
mov
pop
push
sbb
mov
xor
mov
adc
add
aad
leave
push
pop
aad
lds
enter
lea
sbb
fsubrl
add
pop
pop
pop
out
jae
lret
pop
push
rcrb
mov
frstpm(287
jge
faddl
mov
imul
fmull
fstpl
lret
mov
push
inc
pop
fadds
push
inc
mov
pusha
sbb
jne
push
cmpsl
ret
repz
fildll
in
adcb
daa
std
xchg
pushf
mov
add
cmc
push
mov
mov
push
insl
cmp
movsb
cmp
std
cmp
mov
mov
sub
mov
or
push
xor
insl
mov
pop
shrb
pop
jo
outsl
ds
sub
jmp
push
adc
int3
enter
popa
pushf
pop
int
sbb
cmp
data16
aaa
push
xor
aas
js
icebp
cli
add
sbb
xchg
cwtl
add
int3
lea
push
outsl
sub
push
mov
ret
mov
inc
cmp
ret
jmp
cli
push
or
adc
push
sahf
test
jne
movb
inc
cmpsl
mov
mov
sub
decl
dec
lea
cmp
jae
pop
movb
in
lahf
mov
push
add
adc
sub
dec
jnp
je
dec
pop
and
mov
ret
mov
and
adc
adc
cmp
add
sbb
movsl
xchg
sbb
and
idivl
jle
loope
mov
lea
push
add
pusha
repz
clc
call
pop
loop
mov
clc
rep
mov
jo
mov
mov
lea
push
aaa
xor
xchg
push
cs
ret
and
repnz
jne
cmpsb
fdiv
sbb
enter
mov
into
lods
mov
sahf
fwait
in
loope
pop
sbb
push
xchg
cmpl
in
dec
inc
push
repnz
mov
push
hlt
lock
dec
shl
dec
xchg
sub
clc
push
lcall
pop
push
stc
das
mov
imul
jo
arpl
xorb
pusha
sbbl
fsts
xor
sti
data16
into
mov
subb
adcb
adc
shlb
push
enter
cmp
pop
jmp
mov
cmp
jmp
sub
in
mov
push
imul
add
and
cld
jle
and
dec
mov
pop
pop
pop
inc
xchg
push
mov
xor
and
scas
jo
push
in
cmp
ret
mov
daa
cmp
mov
je
push
pop
lcall
mov
hlt
cs
lea
cmp
pop
jne
push
mov
mov
dec
mov
or
dec
push
inc
mov
push
int3
xchg
add
and
mov
pop
je
idivb
adc
mov
adc
fnstcw
faddl
je
je,pn
sub
push
push
ret
and
loopne
shlb
cmpl
or
sbb
adc
mov
data16
scas
mov
pop
adc
inc
jo
adc
lcall
mov
shll
and
mov
pop
mov
xor
movsb
jp
cmpsl
cwtl
and
out
movl
cmpb
shrl
adc
das
aaa
push
adc
sub
or
xchg
push
dec
xchg
jno
sti
pop
lock
jns
jl
or
pop
out
pusha
push
push
mov
pop
testb
add
push
lock
and
add
mov
pop
sbb
aam
in
mov
jl
push
fcoms
and
or
fmull
sbb
sbb
xchg
push
hlt
pushl
push
outsb
inc
call
xchg
mov
or
inc
dec
inc
push
mov
sbb
mov
push
sbb
mov
fisttpll
shlb
dec
cld
adc
pop
hlt
pushl
adc
jne
cmpl
je
and
ret
lret
in
in
addr16
push
test
testb
mov
ja
inc
ja
and
pusha
pusha
xchg
jo
lahf
dec
popa
or
leave
cltd
ja
comiss
cmp
mov
pop
clc
sbb
addl
dec
clc
outsl
mov
aas
sbb
or
loopne
pop
mov
push
or
and
push
nop
orl
and
adc
fldt
sub
add
add
imul
add
pop
std
adc
inc
cmpsb
nop
orl
lock
jmp
out
pusha
dec
call
sub
mov
xor
inc
inc
dec
jecxz
cwtl
fcomps
dec
pop
and
lock
jo
pop
cltd
mov
cmpsb
aas
adcb
push
pop
xchg
push
mov
sbb
in
jge
push
adc
add
sbb
sub
mov
les
pop
sbb
push
xor
sbb
sub
add
jp
inc
push
pusha
dec
rorl
insl
and
mov
js
cmp
push
jnp
dec
das
movsl
sbb
testl
mov
xchg
rorl
add
insb
push
dec
xor
xor
lcall
loopne
push
push
lahf
ja
inc
mov
or
jl
cmp
mov
jne
cmp
adc
inc
inc
loope
daa
ret
push
jne
cmpb
lcall
in
psadbw
test
je
push
push
lea
js
adc
push
in
sbb
add
mov
fucomi
mov
sbb
data16
inc
or
xor
mov
inc
jle
push
cmp
imul
add
jg
dec
decl
inc
push
mov
adc
sub
pop
xchg
jb
push
pop
xchg
add
dec
clc
fists
mov
iret
cmp
arpl
xchg
les
sbb
adcb
xchg
in
popf
clc
out
sbb
adcl
in
cld
paddw
sti
jmp
mov
sbb
or
jge
mov
sahf
test
loope
sbb
fldt
jmp
xor
pushf
add
or
push
jmp
movsb
ret
or
cmp
mov
jne
adc
push
mov
or
or
dec
pop
add
ret
inc
movsl
cmc
adc
bound
pop
aaa
jle
into
adc
cmp
pop
xor
add
out
aas
xor
lds
movsl
xchg
imul
test
push
pop
xor
push
daa
movsb
ret
movl
sbb
cltd
adc
call
or
jge
xor
test
jle
lock
or
mov
fdivrl
aas
xchg
ja
inc
cmp
jl
xor
pop
ret
mov
jmp
jl
and
int3
adc
clc
dec
je
add
dec
sbb
imul
or
fcomps
rolb
push
inc
movsb
cmpsl
or
sbb
icebp
or
je
sbb
loope
xchg
lds
jle
fldt
xchg
pop
push
or
sub
mov
cmp
or
movsl
cmpsb
iret
add
and
fistpll
stos
or
cmp
fcomip
xor
imul
push
push
push
xlat
divl
mov
mul
add
adc
push
loope
ret
cmp
cmp
ss
in
inc
jmp
dec
test
inc
int3
les
pop
lret
aaa
lahf
mov
push
lret
in
inc
js
fcoms
inc
call
repz
arpl
daa
or
pop
lock
or
jo
jnp
insb
cmp
test
and
cmp
sahf
or
sahf
pop
stc
push
shl
fnsave
push
dec
pop
ret
frstor
enter
ret
lock
pop
sub
pusha
testb
mov
sbb
adc
inc
dec
sub
push
xadd
pop
push
mov
pop
loopne
add
jb
js
leave
pop
push
aad
cmp
cmp
jae
mov
in
or
mov
push
lret
mov
testb
sbb
jno
or
pop
mov
cld
xchg
or
xchg
mov
int
popa
xor
and
rorb
mov
cltd
gs
pop
shlb
rolb
popa
loopne
sub
push
sbb
pop
cmp
dec
sti
dec
ret
push
out
ds
push
enter
and
mov
mov
nop
jnp
inc
pop
jns
mov
jle
inc
cwtl
stc
push
inc
lea
mov
movl
cltd
sarb
ret
xchg
jmp
jge
mov
mov
sub
insl
std
leave
cmp
dec
pop
add
mov
sbb
add
inc
jnp
rolb
xor
jge
jne
dec
jo
push
adcb
push
cmp
or
sbb
leave
cmp
jbe
cmp
lret
sub
in
incl
jne
cmp
jae
mov
movsl
lock
loopne
adc
mov
push
repnz
adc
fdivrl
mov
mov
xor
mov
sarl
mov
push
inc
dec
pop
pop
mov
out
pop
mov
mov
pop
je
leave
push
fistpl
sub
sbb
fidivs
sbb
push
inc
or
fisttpl
dec
mov
push
dec
push
in
add
sahf
xchg
aam
push
nop
cmpsl
push
push
std
andb
mov
inc
outsl
adc
nop
add
insb
in
mov
dec
pop
mov
cmp
push
movsw
cmp
je
idivl
test
jae
frstor
inc
and
sbb
jns
jbe
jg
mov
movsb
mov
jmp
push
sub
mov
lcall
push
push
pusha
fs
pop
call
cmp
andb
sbb
ss
cwtl
pop
outsb
pop
test
push
insb
pop
test
push
inc
inc
xchg
repz
sub
aas
or
gs
sbb
jae
sbb
add
sbbb
out
adc
popa
mov
icebp
dec
jb
inc
gs
jns
push
lea
push
xchg
jo
fcomps
div
imulb
cmp
push
pushl
xchg
je
data16
cwtl
stc
rorl
jmp
in
inc
es
and
mov
or
mov
inc
cmp
add
lret
pop
add
jo
test
add
xorl
pusha
pop
inc
inc
pop
dec
test
mov
xchg
leave
push
dec
js
cmpsb
dec
lds
andl
pop
jno
mov
lds
jbe
ja
mov
xor
dec
or
lahf
aam
or
push
lods
or
aam
dec
clc
mov
push
insb
adc
and
add
mov
into
inc
and
dec
xchg
ja
imulb
mov
push
mov
insb
scas
sbb
arpl
mov
inc
jnp
int
imul
cmp
xchg
xchg
out
xchg
testl
add
sub
adc
add
gs
pushf
xor
test
adc
scas
mov
jbe
sbb
add
or
cmpb
pop
decl
das
je
dec
jne
inc
or
add
outsb
adcl
sbb
xchg
loopne
and
pop
je
clc
mov
sbb
mov
cmp
arpl
add
frstor
sbb
cmp
cmp
add
xor
into
pop
or
mov
insb
ficomps
push
xchg
in
cmp
or
xchg
jns
add
rclb
out
xor
mov
or
out
push
shrl
fildl
inc
clc
xor
push
and
add
pop
pop
icebp
insb
loopne
cmp
icebp
push
movsb
lret
test
insb
test
sub
sub
and
or
dec
xlat
loope
inc
ss
push
inc
fiaddl
sub
cmpsb
cltd
cwtl
jnp
shll
jo
push
sbb
or
sbb
and
sbb
xor
test
mov
jo
shlb
popa
dec
jle
call
xchg
jae
cld
and
xchg
ret
adc
xor
mov
js
shrl
mov
cmp
add
addl
ljmp
add
xor
lar
push
loope
inc
sub
sbb
stos
outsb
aad
mov
data16
xor
mov
cld
xor
enter
loope
icebp
adc
cs
xor
xor
arpl
adc
push
pop
lods
xchg
push
or
ljmp
lss
insb
mov
jle
mov
jl
sbbb
pop
dec
loop
and
push
scas
or
cmp
dec
sbb
add
neg
lods
dec
or
ds
pop
pop
imul
push
sbb
xor
jne
or
push
sub
add
cltd
sub
test
pop
add
outsb
lret
pop
jbe
cmpb
jne
movb
jle
ds
push
inc
sub
lock
jb
jo
test
cltd
xlat
mov
add
gs
jb
mov
shlb
movsl
jno
sbb
loope
jmp
sub
sub
lea
mov
push
jmp
lock
push
jmp
sub
jmp
or
fsubl
or
loope
push
dec
mov
sbb
lcall
fistpl
inc
sbb
enter
clc
or
sbb
dec
insl
push
mov
dec
test
insl
aam
mov
cwtl
and
push
and
push
ljmp
and
push
cmp
insl
inc
call
subb
je
sbb
pop
rcll
push
repz
and
icebp
or
jns
or
push
inc
insb
pop
es
xor
fnsave
jo
xchg
push
in
jg
call
jmp
lea
mov
jle
push
or
pcmpgtw
pop
sub
popa
mov
xchg
xorb
shl
movsb
push
mov
xor
lods
repnz
jle
cmp
push
push
loop
pusha
pop
adc
mov
es
xchg
mov
cmpb
push
mov
or
add
pop
mov
enter
push
jge
test
fnstsw
adc
iret
imul
imul
cmc
xor
idivb
sti
mov
xorl
sbb
mov
cmp
jne
sub
hlt
mov
jmp
inc
mov
sbb
sbb
adcb
out
in
push
sbb
add
ljmp
je
int3
adc
imul
xor
out
std
jne
sbb
fisttpll
fnstenv
lret
mov
dec
pop
sti
xor
add
ds
dec
adc
out
mov
pushf
into
or
cmp
shrb
inc
push
mov
bound
into
es
add
jns
jg
push
inc
push
push
push
push
push
in
cld
push
cmpl
shlb
jae
fisttps
roll
push
mov
or
pop
adc
decb
enter
xor
xor
cmc
dec
fnstcw
push
sub
dec
cmp
pushl
jo
sub
xchg
adc
mov
cld
mov
decl
mov
lods
test
orb
dec
rolb
sbb
and
push
mov
add
es
push
xor
gs
ljmp
adc
mov
insl
fs
insb
sub
test
pusha
sti
cmp
push
cmp
jbe
pop
add
push
cmpsl
lret
xchg
mov
fistps
or
dec
push
push
push
lods
cmp
repnz
int
out
lret
or
out
int
fs
test
inc
mov
push
test
shlb
push
insl
fcmovnu
stc
in
imulb
das
repnz
shll
insb
andl
or
cmp
loop
test
push
cmpsb
adc
pop
dec
and
add
adc
sbbl
push
push
cmovbe
pusha
roll
shll
pop
pop
mov
cmp
imul
jl
inc
add
adc
jb
sbb
ret
addl
aaa
cmp
pop
pusha
cmp
popa
out
imul
add
inc
imul
or
mov
inc
loope
cmp
andl
lods
insb
shr
dec
dec
fcomps
in
jle
push
sub
add
mov
mov
push
xchg
pop
rcll
push
in
inc
jmp
push
std
dec
outsb
aad
and
xchg
mov
shl
ss
sbb
fcmovnu
mov
pop
les
clc
jl
mov
jne
push
out
jl
xchg
mov
mov
pop
pop
movb
add
add
das
sbb
add
dec
rorb
add
push
push
or
and
inc
jno
popf
aaa
mov
daa
adc
aaa
jne
repz
jne
repz
push
xchg
cs
xchg
outsb
imul
icebp
sub
aas
jb
sub
push
push
push
and
add
arpl
push
movb
mov
mov
pop
mov
inc
xchg
sbb
or
mov
adc
push
mov
mov
shll
cwtl
adc
mov
mov
insb
pop
push
imul
adc
cmpl
or
xchg
push
push
mov
or
inc
xorb
nop
or
push
jecxz
mov
pop
xlat
icebp
loopne
imul
call
push
aad
xor
pop
rolb
jmp
lea
xor
mov
fs
mov
leave
in
fs
leave
enter
mov
xchg
fldenv
dec
push
or
fnstcw
or
sbb
je
mov
in
clc
adc
xor
mov
das
mov
push
or
notl
loopne
cwtl
jns
mov
or
add
aam
add
fsts
sub
push
call
jmp
int3
shr
fbld
fiadds
xor
push
dec
xchg
cmpb
lods
adc
fs
leave
sbb
pusha
in
mov
jb
add
push
mov
imul
mov
and
in
pop
jmp
sbb
orb
adc
dec
loopne
das
js
insl
mov
cmp
in
movsb
push
sub
sbb
or
jae
enter
clc
je
in
add
cwtl
outsl
fs
inc
outsb
stc
or
test
nop
add
add
fmuls
mov
aam
mov
outsl
mov
cmp
sbb
cwtl
mov
sbb
jb
lock
jbe
pushf
inc
addr16
xor
shrl
or
icebp
mov
lock
mov
in
mov
cmp
pandn
add
int
in
push
mov
fcomps
hlt
les
enter
cmp
nop
mov
sbb
pusha
outsb
jl
mov
out
outsl
jns
hlt
cmp
enter
jb
nop
mov
pusha
xor
in
outsb
and
mov
std
jl
lcall
push
leave
in
orb
cmp
dec
leave
enter
outsl
sbb
leave
enter
nop
add
mov
clc
or
outsb
xchg
xchg
xchg
xchg
in
fdivrs
enter
outsl
les
enter
xor
mov
xchg
xchg
xchg
fldcw
xchg
xchg
xchg
pushf
push
xchg
xchg
outsb
push
jecxz
enter
pop
test
sbb
js
jo
sbb
sbb
push
jb
cmp
faddl
loopne
jbe
addr16
and
and
cmp
cmp
test
jno
lcall
out
sub
pop
add
iret
stc
add
and
and
aad
outsb
leave
inc
inc
inc
inc
push
cltd
int3
pop
inc
movsl
pop
xor
das
fs
add
faddl
je
andps
outsb
in
pop
sahf
movsl
imul
and
mov
mov
rorb
sbbl
leave
inc
cmpsb
lcall
icebp
in
hlt
in
enter
outsb
fs
sbb
or
mov
jb
mov
outsl
jl
fs
jbe
sbb
in
in
inc
sub
fstps
test
mov
inc
xchg
addr16
ljmp
outsl
push
lock
sub
and
lret
mov
push
fs
inc
inc
push
inc
push
xor
push
lret
sub
jns,pn
xlat
pop
mov
inc
scas
sahf
jl
or
or
inc
into
dec
sbb
les
mov
dec
inc
js
sbb
xchg
add
mov
or
in
lods
xlat
clc
mov
cmp
outsb
mov
inc
dec
cld
inc
nop
xchg
daa
pop
sbb
nopl
push
or
xchg
push
xor
mov
in
sbb
dec
add
or
jb
fmull
mov
push
xchg
sub
enter
push
aam
pusha
fs
daa
push
push
inc
mov
imul
inc
faddl
mov
xor
sti
orl
pusha
adc
or
push
shlb
cmp
jl
inc
in
jb
xor
int3
movsb
and
or
leave
in
adc
mov
in
lock
insb
movsb
mov
xchg
in
sbb
push
loopne
enter
mov
hlt
push
xchg
je
aas
xor
inc
pop
jl
sahf
sbb
add
adc
icebp
adc
xor
cmp
inc
adc
fsub
cltd
aaa
or
data16
in
mov
cmp
or
and
inc
leave
dec
hlt
adc
enter
sub
xor
pop
xor
cmp
inc
inc
leave
and
push
jb
and
pop
xor
push
push
pop
and
pop
inc
leave
and
and
leave
and
insb
or
xor
push
jo
lock
sbb
pusha
dec
pop
or
adc
sbb
or
jns
or
notb
xchg
push
xchg
or
xchg
jmp
fcompl
cmpsb
mov
push
dec
shrl
ja
inc
dec
addr16
pop
adcl
out
xorl
cli
add
push
or
aam
mov
imul
rcrl
sbb
nop
mov
or
popa
jmp
ret
sub
add
out
inc
sbb
pusha
inc
pop
shrl
mov
fstl
dec
cs
pop
adc
xor
adc
adc
jmp
inc
fistl
mov
jnp
mov
decb
mov
mov
int3
or
push
add
add
and
mov
mov
std
rolb
dec
sbb
sub
test
nop
bts
add
and
or
or
out
lock
in
jle
lea
sbb
loopne
inc
jle
addr16
test
shl
add
inc
xchg
out
jns
inc
cmp
rol
jecxz
cltd
inc
sub
das
dec
or
popf
push
inc
leave
and
lods
sbb
xor
pusha
test
cmp
sbb
mov
pop
loope
jmp
and
test
push
das
lods
sub
push
add
call
xor
sub
or
fs
lock
daa
jae
mov
jl
in
lock
push
sbb
dec
jbe
push
mov
push
rcll
or
xor
xchg
sahf
cmp
and
and
btc
lock
fldt
leave
mov
mov
vmwrite
clc
mov
cwtl
es
lea
lods
pop
rcr
inc
decl
mov
adc
jmp
pop
xor
jb
push
mov
leave
dec
jl
clc
push
clc
mov
jns
push
inc
xor
mov
sub
loopne
fs
bound
sub
dec
mov
mov
jns
cmp
adcb
xchg
cmp
nop
enter
test
add
leave
das
imul
inc
cld
push
in
adc
push
popf
mov
mov
call
rcr
push
xchg
mulb
rcll
pop
movsb
fistl
jmp
ds
or
xor
shrb
aad
or
aaa
insb
iret
nop
cli
int3
add
test
setne
cmp
call
dec
imul
ljmp
mov
adc
jo
sahf
push
outsl
mov
sbb
mov
fstps
push
inc
add
nop
fidivs
dec
push
pushl
sbb
call
jne
push
jmp
mov
pusha
js
push
outsb
dec
les
xorl
jne
leave
inc
imul
call
cmp
je
cmp
je
pop
push
mov
inc
insb
push
pusha
push
inc
test
push
mov
lcall
sbb
sub
xchg
or
push
ds
jne
notl
xor
insb
testl
cmpsb
mov
mov
push
sub
pushl
nop
add
dec
test
or
add
pusha
inc
int
pusha
jl
pop
add
idiv
std
cmp
mov
adc
cmp
je
or
xor
call
or
cmp
incl
dec
xor
cmp
je
cmp
jge
mov
sarb
xchg
std
loope
pop
or
pop
in
jmp
add
adc
shlb
out
popa
pop
jl
cmp
jg
daa
add
pusha
xchg
push
test
push
in
xchg
data16
popa
jge
sbb
daa
xor
sub
fimuls
xor
or
stc
or
icebp
cmp
lea
ja
cmp
je
and
push
fsub
push
xchg
stos
js
push
add
lods
add
xchg
pusha
inc
and
enter
cmp
inc
add
jo
sbb
stos
adc
inc
nop
sahf
rorb
push
push
rolb
dec
mov
sbb
cmp
je
jae
adc
mov
out
add
mov
inc
push
cwtl
inc
js
and
fcoms
inc
mov
adc
pop
in
push
sbb
push
gs
jno
mov
jb
loopne
or
sub
jns
add
aaa
xor
jne
sbb
movsl
pop
lahf
mov
adc
test
adc
jle
in
pop
movsb
pop
cmp
jbe
xchg
push
sub
imul
push
xor
push
lods
push
dec
repnz
xor
inc
test
pop
test
xor
push
pushf
cli
xor
data16
jno
add
aam
pop
sbb
arpl
test
mov
dec
shll
std
and
pop
mov
aas
je
lods
ret
out
push
mov
sub
or
aaa
push
push
dec
adc
or
or
cwtl
rep
lea
cmp
fildll
jl
push
mov
cmp
dec
add
clc
call
data16
or
dec
and
inc
mov
dec
cmp
jle
nop
inc
rcrb
mov
push
int3
shl
test
sbb
test
push
call
ja
stos
lods
xchg
mov
or
cwtl
xor
jo
mov
cld
cmp
test
lea
fs
add
add
popf
cmp
into
aas
jle
mov
add
les
negb
jb
popf
adc
push
lods
add
sbb
aas
and
xchg
jg
rolb
sub
mov
push
pusha
test
js
mov
or
jne
sbb
jle
incl
aas
cwtl
aas
lock
xchg
test
je
clc
jle
sub
add
jle
or
sbb
dec
in
loopne
cmpsl
jns
jmp
rcrl
inc
fdivl
lea
pop
pop
mov
js
test
dec
mov
mov
xor
ja
je
out
fisttps
loope
dec
dec
je
add
adc
arpl
decb
and
test
inc
rcrb
dec
es
idivb
push
fisttpl
jb
sbb
sbb
mov
sti
fidivs
sbb
lods
sbb
adc
jge
or
push
mov
push
insl
je
lea
adc
ud0
movzbl
and
mov
js
cmp
mov
push
das
push
and
int
lahf
xor
push
adc
sbb
xchg
inc
notb
notb
inc
daa
jl
sbb
xor
xor
shll
sub
rorl
jno
or
add
or
add
leave
add
or
or
jecxz
and
fildl
mov
enter
or
jnp
ljmp
nop
clc
mov
push
cs
dec
icebp
fimull
mov
xadd
push
xchg
mov
pop
fidivs
jl
or
inc
add
cmp
loopne
imul
pop
xor
sbb
sbb
inc
mov
or
add
ret
sbb
sbb
mov
jne
out
outsl
je
aaa
hlt
in
test
and
roll
jl
insl
mov
fmuls
adc
loopne
scas
sbb
pop
neg
arpl
fucomi
push
insb
mov
pop
ret
jecxz
shrb
push
xchg
push
ret
sbbb
aas
add
push
add
inc
adc
hlt
in
push
mov
sbb
lret
rorl
push
lret
fdivrl
push
rorb
andb
dec
in
incl
mov
adc
jle
movl
add
cmpsb
jmp
push
shrb
pop
cmc
or
adc
enter
dec
inc
or
pusha
les
sbb
and
shlb
push
lock
jg
xchg
xchg
xchg
mov
push
push
ja
xchg
adcl
fldl
stc
push
hlt
test
repnz
xchg
adc
cli
push
xlat
sti
push
lret
bound
sub
push
lock
add
sbb
orb
in
sbb
mov
mov
jnp
jge
mov
repz
cmp
dec
xor
cmpsb
fdivl
jo
popa
or
out
mov
push
jns
in
sbb
call
mov
stos
cltd
mov
add
dec
add
sarl
mov
sbb
and
xchg
leave
mov
in
sbb
inc
and
and
and
push
xor
leave
and
sub
and
and
in
push
leave
or
sbb
mov
loopne
enter
dec
int3
inc
fcoms
mov
pop
sub
push
push
test
adc
and
fsubs
sub
pop
aam
mov
or
cld
addr16
push
loop
pop
mov
cld
xchg
test
dec
scas
mov
lcall
xor
insl
sub
aam
xor
mov
xorb
mov
and
std
cmpsl
push
cli
jl
sub
xchg
or
inc
out
cmpsb
shll
sbb
or
mov
ror
test
mov
je
sub
ja
cmp
or
out
out
out
dec
push
adc
push
lret
mov
jle
pop
je
or
pushf
sbb
out
or
sbb
add
fdivrs
push
rcrl
data16
aam
mov
lcall
or
or
aam
pop
cld
jmp
orl
and
push
push
or
lea
jae
aad
lea
pop
push
or
aam
sbb
push
dec
rorl
cli
cmp
movsb
lds
test
jg
dec
lds
or
out
pushl
repz
js
pop
sbb
sub
in
xchg
adc
sub
inc
adc
outsl
push
fistps
loop
add
out
movsl
mov
int3
fisttpl
xor
or
lock
cmpsb
mov
test
sbb
pop
sub
inc
pop
xchg
add
lods
cwtl
test
call
add
mov
sub
pop
stos
push
shll
add
ja
adc
push
dec
gs
cwtl
rclb
xchg
dec
xchg
mov
inc
and
ja
repnz
push
fsts
adc
lea
mov
loop
push
sahf
jb
cmp
mov
sbb
sbbl
pusha
idivb
test
rolb
push
sti
ljmp
das
es
das
cmp
and
insl
test
ds
jb
inc
sbb
stos
shll
push
mov
mov
ja
xchg
adc
sarl
add
in
lods
pop
mov
jecxz
fidivl
xor
iret
pop
clc
dec
std
loopne
jl
es
pop
pop
sete
rorb
jmp
pop
jl
cmp
mov
es
xchg
push
in
cmp
sub
jge
pop
and
sub
mov
sub
pop
cmp
and
jl
bound
ljmp
push
cmpl
xchg
popa
sbb
inc
addr16
nop
cltd
sub
fs
adc
jns
adc
mov
and
sbb
mov
iret
cmc
cmpsb
fldenv
cmp
aad
push
pop
add
in
push
fucom
popf
aam
into
clc
call
in
pop
insl
icebp
lock
cmp
repnz
sub
in
imul
dec
pushl
pop
add
dec
je
pushl
push
mov
movsl
andl
call
sti
pop
inc
cmp
jb
jmp
or
in
cmp
xchg
ja
ret
jp
cmpl
into
or
cmp
pop
cmp
xchg
out
push
insl
loopne
and
jne
pop
inc
rclb
push
xor
addr16
mov
and
add
sbb
outsb
je
loope
imul
mov
adc
insb
js
inc
cld
jo
cmp
std
xchg
pop
je
roll
pop
enter
pop
sub
push
jmp
fbld
or
adc
push
stos
mov
dec
daa
sbb
insl
rorb
mov
push
repz
pop
sbb
hlt
das
cmp
xor
add
jg
mov
sbb
jb,pt
jmp
push
sbb
nop
lock
je
mov
pop
mov
das
scas
icebp
jg,pn
pop
add
push
adc
mov
jnp
js
cs
pushf
mov
mov
mov
repz
or
pusha
sub
repnz
and
dec
paddd
cmc
rolb
pop
lea
shr
inc
mov
fimuls
jg
aad
movzwl
add
inc
inc
push
negb
add
lcall
and
add
mov
shr
and
xchg
add
mov
shr
mov
push
call
and
mov
xorl
and
push
enter
sbb
add
sarb
sub
mov
mov
and
lods
push
inc
mov
and
or
sub
cltd
and
pop
and
adc
rclb
imul
mov
cmp
mov
out
orl
or
xchg
decb
push
and
push
das
bound
fbstp
and
jne
adc
cmp
jnp,pt
sbbl
rorb
fiaddl
and
sbb
mov
mov
lcall
jb
js
add
push
scas
mov
cmp
pop
div
or
push
sub
or
sub
icebp
dec
sub
imul
inc
negb
jg
stc
insb
sbb
sub
in
les
and
pushf
and
arpl
je,pt
xchg
push
rolb
in
jp
test
imull
loopne
lcall
jns
loopne
les
and
sub
leave
xchg
adc
sti
mov
push
fldt
arpl
sahf
ljmp
inc
fbstp
adc
jo
rclb
rol
mov
fimuls
movsl
and
fwait
push
xchg
das
imul
adc
popa
cmp
ljmp
add
adc
mov
shrb
xchg
ja
cmp
in
push
sarb
sub
out
jbe
lret
push
gs
int3
hlt
loop
sub
cmp
les
rclb
call
pop
inc
pusha
pop
add
fiadds
add
or
shll
pop
iret
in
push
add
sbb
xlat
jno
pop
cmp
hlt
je
cmpl
push
mov
je
pushf
clc
jbe
jo
test
ret
je
jne
push
dec
bound
shlb
lea
faddl
andl
test
fsubrp
cmpl
addl
inc
jb
mov
xchg
xchg
paddusb
mov
xor
or
je
cmp
inc
add
or
ja
mov
lea
push
jb
or
add
xchg
data16
dec
sub
xor
xor
xchg
in
mov
add
ret
sahf
cmp
lahf
out
aam
cmp
scas
jle
jo
mov
jmp
pop
lock
jnp
push
loop
pusha
add
sub
sbb
add
lret
stc
and
sub
or
xchg
lret
mov
or
popf
xor
mov
xchg
cmp
adc
mov
les
cld
mov
enter
push
or
shlb
pop
adc
push
pushf
adc
je
adc
pop
mov
adc
shrb
inc
call
push
xchg
rcrb
pusha
popa
cmc
js
cmpsb
lret
in
je
insb
add
jnp
test
or
sub
inc
push
inc
and
and
jnp
mov
pop
je
pop
adc
adc
cmp
push
xchg
adc
loope
mov
xor
repnz
fldt
push
xchg
subb
fistpl
push
ja
cmp
mov
jecxz
decl
pop
push
mov
xor
notb
mov
mov
pop
push
jns
test
and
or
insb
jge
loop
add
pop
ret
sbb
inc
mov
sub
lahf
cmp
add
sub
xchg
and
sub
fcomps
pop
mov
ret
xchg
fsubs
cmpsl
enter
sub
pop
push
pop
arpl
xor
data16
mov
add
add
xchg
nop
inc
je
add
mov
mov
push
arpl
jecxz
inc
inc
mov
adc
push
sbbb
rep
mov
and
aad
and
pop
xchg
mov
dec
xor
aam
add
dec
jne
sbb
sub
lock
cmp
and
ret
lods
push
jmp
push
rolb
enter
add
lret
fisubrs
test
hlt
sbbb
mov
pushf
push
mov
jmp
adc
jmp
dec
xchg
xchg
lret
add
imul
nop
push
xchg
inc
hlt
and
mov
stc
scas
test
insl
inc
cmpb
add
push
stos
or
ret
in
sub
call
sbb
jb
imul
xor
jl
push
mov
sbb
mov
pop
decb
ret
or
xor
notb
loopnew
outsb
aas
stc
aam
jb
and
mov
mov
sbbb
inc
lods
mov
inc
lock
call
xchg
ret
stos
pop
in
cs
sub
xchg
mov
ret
out
and
or
subb
push
rorl
out
sbb
jnp
push
cwtl
and
filds
adc
mov
stc
in
push
dec
xchg
aad
cmp
jbe
add
adc
cmpb
sbb
insl
add
cld
icebp
je
js
daa
push
call
stos
or
insb
pop
or
mov
dec
adc
xchg
xchg
gs
popa
add
jnp
call
push
or
ret
mov
adc
call
je
inc
jge
inc
nop
stos
jle
popf
cmp
movsb
int3
js
push
or
push
stc
lock
popa
stc
or
xchg
lahf
dec
scas
or
add
cmp
shrb
std
je
or
je
mov
mov
xor
sarl
push
mov
push
push
add
push
and
imul
pop
pop
pop
leave
mov
cmc
pop
jmp
insl
mov
mov
repnz
loopne
aam
inc
enter
out
icebp
xchg
aaa
push
or
and
jmp
sbb
aaa
push
or
xor
out
out
mov
dec
xor
cmp
dec
and
mov
div
ljmp
sbb
or
sbb
std
mov
push
push
mov
dec
cmp
or
add
adc
dec
mov
inc
mov
push
adc
and
cmp
sub
push
or
shrb
or
xchg
pop
inc
test
mov
and
mov
or
inc
mov
fildl
lods
ret
xchg
cmpsl
mov
inc
mov
test
pop
movsl
lds
inc
xchg
aam
pop
cmp
lods
jg
xchg
lods
sbb
jp
in
ja
add
add
movsb
cwtl
fs
fs
push
fsubs
dec
add
dec
fildll
or
or
andb
andl
push
out
sub
adc
pop
dec
jp
push
popf
mov
sub
ds
dec
out
inc
jne
pop
test
xchg
in
loop
jge
add
cmc
test
push
pcmpgtb
jbe
add
loope
cmp
inc
and
jg
cmp
jl
inc
pop
push
sbb
xchg
push
mov
sub
dec
nop
sbb
sub
pop
push
sbb
ret
inc
dec
out
cmp
add
clc
push
jo
je
pop
test
aaa
lret
je
jae
and
lahf
sarb
repz
fisubrs
xor
cmc
scas
icebp
aas
mov
xchg
test
add
and
cmp
add
movsbl
movb
pop
add
pop
jg
add
rcrb
popf
jnp
jmp
jns
pop
jge
adc
dec
cmpb
je
pusha
repnz
push
dec
mov
jb
pop
fcmovnbe
icebp
xchg
test
aas
movsl
add
fisubrs
inc
lahf
xchg
lods
arpl
jo
popf
xchg
pop
push
adc
sbb
icebp
aaa
push
mov
push
loop
mov
setbe
popf
mov
idivl
pop
sub
sub
daa
push
push
gs
test
call
je
xchg
or
je
jl
rolb
cmp
mov
dec
gs
or
inc
frstor
and
or
fsubrs
aaa
test
mov
addr16
sub
adc
je
mov
stos
ds
jge
mov
mov
cmp
outsl
loopne
es
mull
js
or
jbe
mov
insb
push
pop
les
mov
repz
jb
and
repz
cmp
inc
jge
inc
or
xor
popa
stos
or
push
sbb
cld
loop
and
sbb
xchg
movb
mov
pusha
add
push
lea
lahf
cmpl
ljmp
push
in
push
push
sub
call
cmp
imul
mov
insb
stos
fstl
es
mov
pop
cmp
push
pop
aaa
cmp
cmp
loopne
jo
pop
fsubrl
inc
mov
ds
or
in
sub
lds
cmp
and
test
nop
lahf
jbe
sub
stc
out
loopne
andl
xchg
jbe
subl
mov
pop
repz
shll
or
and
enter
sbb
mov
dec
mov
orb
cld
cmpsl
inc
in
enter
jmp
push
lock
mov
fwait
add
mov
xor
clc
cli
adc
lea
pop
pop
or
fstps
sub
jmp
enter
sti
int3
sub
and
jge
test
adc
pop
sahf
adc
inc
sbb
push
sar
pop
lcall
jne
cli
xor
sub
mov
andl
cmp
inc
push
jb
mov
or
fwait
push
pop
pop
xor
add
mov
les
xchg
mov
ret
inc
inc
pop
or
push
push
mov
jne
mov
hlt
icebp
pusha
sub
pushf
dec
outsb
mov
ret
mov
dec
add
data16
dec
mov
add
sbb
mov
sub
fisubl
xchg
out
pop
dec
sbb
fimuls
mov
xor
test
mov
push
mov
and
pop
lods
mov
ret
sub
cmp
push
mov
js
mov
pop
pop
mov
mov
push
push
loope
out
jno
ret
insb
hlt
std
into
lods
in
sub
push
pop
cmpb
fsubl
arpl
fistps
xchg
aas
popf
sbb
lcall
cmpsb
push
stos
shlb
or
mov
cmp
adc
fildl
xchg
adc
sub
ja
push
or
stos
addr16
imul
sbb
sub
push
and
je
jmp
and
enter
shr
or
xchg
fpatan
dec
repnz
das
pop
dec
lea
add
add
into
mov
cmc
call
inc
push
xchg
or
mov
test
adc
add
pop
push
rcr
inc
push
sbb
fsts
cmp
mov
cmpsl
lcall
aas
push
adc
push
loopne
and
and
mov
scas
push
sbb
jge
andl
cmpl
fbld
xchg
sbb
or
dec
dec
push
cmp
icebp
inc
jne
in
push
ss
stc
mov
xor
mov
test
jne
ret
add
inc
mov
cmp
sub
dec
jle
adc
sub
testl
lods
adc
fistpll
cmp
mov
xor
gs
sbb
mul
add
imul
sbb
adc
pushf
lea
rolb
and
repnz
fadds
call
pop
shrl
sbb
scas
ja
push
adcb
pop
and
xor
inc
cmp
addr16
js
imul
insl
add
adc
sub
and
mov
fisttpll
sub
dec
mov
push
push
test
sbb
dec
inc
sub
add
outsl
mov
pusha
sub
clc
cmp
mov
stos
adc
ja
roll
jg
fwait
cmp
mov
loope
cmpsb
test
je
xor
mov
mov
mov
push
lods
in
dec
fwait
out
sbb
sbb
inc
pushf
insb
adc
les
mov
in
aaa
test
push
rolb
cltd
in
lahf
in
pop
pushf
push
jge
xor
cmp
adc
cmp
ja
cmp
and
pop
mov
jmp
xlat
pusha
add
add
mull
mov
fildll
xor
mov
ret
rolb
xor
dec
add
dec
popf
push
push
xor
xor
adc
push
push
lahf
push
push
adc
fwait
and
xchg
sub
xchg
inc
jecxz
lock
cmp
mov
cmp
inc
and
and
std
roll
or
pop
dec
iret
inc
inc
scas
test
dec
sub
jns
enter
je
sbb
iret
lods
add
incl
insb
jb
mov
push
sbb
push
xor
add
fs
push
pushf
push
cs
xchg
in
inc
cmp
xor
test
insb
add
push
pop
sbb
and
fldt
xchg
sbb
sub
or
cmp
dec
sahf
or
add
inc
dec
lcall
call
pop
nop
rorb
sahf
pop
nop
movsb
sbb
nop
dec
sahf
pop
nop
test
push
pop
nop
push
dec
sahf
pop
nop
dec
or
inc
cmp
pop
nop
sub
push
push
nop
or
pop
add
jae
sbb
add
sub
add
mov
and
mov
jecxz
inc
pop
push
dec
ss
pushf
nop
test
leave
lret
dec
pop
dec
jmp
lahf
popa
mov
dec
jno
mov
and
mov
sub
push
in
mov
push
and
mov
stos
pop
mov
push
or
jmp
mov
cmp
js
inc
faddl
lea
data16
dec
sub
sbb
mov
mov
int3
cld
dec
and
mov
std
pop
std
loope
mov
lods
lock
pop
fildl
outsb
sub
pop
inc
and
inc
mov
jmp
cltd
sub
insl
push
sub
test
and
rcrl
sbb
and
mov
test
xchg
xchg
cmp
jne
cwtl
pop
insb
sbb
push
push
roll
xchg
or
xor
inc
mov
jae
mov
dec
and
add
lods
test
jo
das
imul
andl
stc
pop
add
jae
inc
pusha
xor
and
cmp
push
sbb
inc
je
lock
mov
fwait
and
lds
cld
inc
rorb
int
jge
or
mov
xchg
mov
mov
xor
loop
or
inc
cld
add
mov
test
je
sub
sbb
and
fs
ret
add
mov
inc
jb
inc
mov
jb
inc
xchg
inc
pop
enter
inc
pusha
test
xchg
and
add
jb
outsl
jo
mov
jo
data16
daa
adc
into
adc
push
pavgb
xlat
jo
or
test
imul
unpckhps
jo
pop
movsb
inc
push
jmp
int
cmp
xor
lods
bound
arpl
xchg
pusha
jae
inc
inc
xor
pop
cmp
xor
dec
pop
aaa
test
xor
adc
sub
arpl
pop
lods
cmp
mov
leave
inc
adc
sub
pop
enter
imul
enter
xor
mov
jns
out
inc
and
sub
pop
xor
movsl
sbb
jb
and
or
test
cmp
popf
nop
inc
xchg
push
outsl
sub
xorl
sti
dec
sub
mov
addb
sub
sub
xor
enter
clc
inc
out
insl
add
and
mov
test
xchg
add
pushf
or
test
adc
pop
in
inc
inc
negb
loopne
enter
inc
fmul
enter
aam
shl
orl
or
sbb
or
nop
ja
out
iret
mov
negb
pop
repnz
inc
stos
mov
test
and
pop
repnz
je
pop
xor
push
jb
jle
cli
jno
inc
sahf
cmp
int3
cld
sbb
inc
inc
or
mov
xchg
fmul
lds
sub
iret
or
mov
sbb
xor
fmull
cmp
and
clc
aas
mov
hlt
and
decb
fimull
out
call
in
pop
in
test
push
pop
out
push
pop
xchg
pusha
xchg
rcrb
mov
push
push
movzwl
xor
inc
mov
push
loope
es
and
in
out
sub
mov
out
mov
push
and
mov
pop
fmulp
mov
ja
mov
sub
mov
insb
data16
or
cmp
in
lret
dec
mov
inc
iret
and
divb
push
mov
roll
fcoms
push
das
inc
adc
pop
cmc
jne
mov
or
and
xor
enter
jae
cs
fs
adc
out
pop
adc
mov
push
fbld
and
push
verw
sub
push
adc
mov
cmpsl
and
add
and
imul
pop
out
or
cltd
lods
stos
sbb
xchg
and
push
inc
and
call
jbe
call
mov
adc
mov
and
sbb
add
inc
jno
div
ds
jge
mov
pop
dec
push
enter
sbb
push
sbb
loop
ds
ds
inc
loop
cmp
test
sbb
push
shll
adc
push
ja
pop
lds
adc
sub
mov
xor
mov
add
mov
push
lock
jno
test
enter
mov
jb
jb
ds
enter
cwtl
jmp
push
and
inc
enter
addr16
or
add
sbb
push
add
fs
or
lock
inc
xor
leave
inc
and
xor
in
sub
cmp
sbb
mov
cmp
aas
xchg
dec
jbe
les
ss
jno
mov
push
xchg
repnz
aas
and
xor
jns
test
xor
insb
adc
push
mov
dec
enter
sub
cmp
mov
cmp
jns
outsl
inc
das
push
call
adc
cld
decb
mov
mov
sub
jbe
mov
sub
or
shlb
mov
cmc
inc
inc
and
jb
clc
cmpsl
nop
sub
cs
lock
fldt
mov
enter
mov
nop
out
mov
sbb
sbb
sbb
or
sub
pmulhuw
sbb
xchg
es
mov
fs
mov
hlt
cmc
pop
ret
popw
bnd
sbb
sub
cmp
fldl
cmpsl
out
cld
int
adc
mov
push
and
and
lret
or
mov
xor
and
inc
cmpsl
or
dec
imul
enter
daa
roll
in
es
cmp
fdiv
pop
jnp
dec
test
lock
mov
mov
fisubrl
ret
les
mov
adc
or
test
cmp
in
pop
pop
lods
sbb
sub
pushf
mov
cmp
in
sarb
pop
test
pusha
nop
cmp
out
push
dec
outsl
sar
sbb
cmp
fisubs
nop
add
xchg
rorb
in
mov
xor
jmp
aaa
jne
push
in
jnp
fldt
cmp
adc
adc
add
pop
decl
jbe
cmp
ja
mov
adc
sbb
ds
inc
mov
lahf
pop
inc
push
push
movsl
je
xchg
sbb
push
push
mov
insb
mov
push
mov
insl
pop
push
repnz
cmc
push
sub
mov
in
adc
add
js
adc
mov
bnd
pop
lret
cwtl
xor
add
js
dec
xor
jo
js
adc
insb
orl
dec
jmp
ficoml
rorb
inc
push
nop
jl
push
aad
add
push
int
push
enter
repz
pusha
or
es
add
pop
mov
add
push
mov
and
sbb
enter
lea
cmp
cmp
cmp
add
add
add
or
imul
mov
fmull
pop
add
jo
inc
lods
mov
mov
and
pop
cmp
push
mov
das
in
jno
lods
pop
pop
loopne
adc
sbb
icebp
jp
loope
cmp
add
cmp
push
sub
xchg
push
popa
test
mov
test
sbb
cs
test
sub
jne
mov
adc
sub
sbb
je
insb
mov
push
pop
repnz
fistpl
xor
push
mov
xor
ja
and
jb
and
in
sahf
pop
cmp
cmp
test
xor
sub
adc
enter
setns
mov
rolb
sbb
rolb
push
test
xor
clc
inc
cmp
je
adc
xor
int
push
sbb
jge
push
daa
mov
int
dec
aaa
mov
or
faddl
test
mov
pop
shll
pop
movl
lods
popf
mov
adc
inc
dec
xlat
popf
sbb
xor
mov
or
test
and
fwait
mov
or
cmp
sub
push
xlat
push
or
mov
rclb
sbb
xor
stc
xor
stc
out
enter
call
xor
fwait
pop
les
fcoml
sub
das
fs
or
rclb
enter
mov
pop
in
adc
sahf
lret
xor
int
in
mov
sub
push
lds
sub
mov
jo
data16
add
movsb
imul
mov
dec
adc
cmp
and
inc
loope
push
test
mov
dec
mov
push
xor
jb
pop
and
jnp
xor
out
sub
das
in
and
push
dec
hlt
or
inc
add
sahf
pop
lock
or
pop
enter
mov
jae
int
jno
or
sbbl
xchg
arpl
push
dec
xchg
pop
xchg
mov
jl
adc
lcall
adc
xchg
cmp
cmp
addl
rcrb
gs
sbb
mov
stos
sbb
popa
mov
inc
or
lock
int3
xor
push
inc
inc
sbb
mov
fadds
shlb
enter
adc
push
std
mov
push
mov
push
sub
cmp
adc
sbb
stc
bound
push
icebp
xchg
and
sbb
dec
cmp
pop
add
inc
cs
cmp
push
sub
xor
scas
mov
pop
xor
divb
jns
and
add
fdivrs
movl
or
mov
test
arpl
lret
enter
out
add
push
jl
and
and
or
dec
adcb
int3
pop
popa
xor
and
aam
iret
xor
bound
inc
add
imul
inc
cltd
mov
adc
pop
cmp
pop
inc
bound
mov
repz
fistpl
add
inc
xchg
add
adc
lds
aad
popf
lock
scas
and
push
and
xchg
das
nop
add
add
push
push
fs
nop
push
push
sahf
andl
lock
xchg
pop
imul
push
add
add
test
push
xchg
push
fwait
xor
cwtl
and
dec
outsl
add
or
repnz
mov
inc
je
sbb
cwtl
flds
dec
mov
shlb
or
scas
mov
push
and
inc
mov
popa
xchg
xchg
outsb
rcr
push
push
pusha
js
xor
sub
icebp
imul
sbb
orl
xchg
in
andl
dec
or
cli
ja
jns
daa
clc
ss
pop
push
in
xchg
push
das
aam
les
ss
push
daa
and
xor
or
imul
fwait
clc
in
and
or
das
test
out
insb
orl
movsl
add
push
add
cmp
mov
mov
ds
add
in
rorl
cltd
inc
xchg
jl
enter
sbbb
inc
repz
add
and
cmp
jge
or
pop
adc
shll
lea
mov
test
gs
xor
sub
int
pop
inc
adc
mov
je
mov
mov
je
inc
mov
mov
adc
and
ss
add
push
cmp
insb
jne
mov
mov
dec
add
adc
cmpl
js
int
sbb
cmp
jmp
cmp
push
and
btr
jae
js
cltd
pop
or
mov
out
idiv
rorb
push
xchg
and
outsb
inc
push
push
out
ret
mov
xor
insb
mov
xchg
push
or
mov
mov
mov
sub
and
mov
fs
push
lea
outsl
mov
or
in
out
fiadds
aam
scas
or
dec
xchg
inc
push
push
push
cmovs
repz
arpl
push
inc
popf
pop
sub
sbbl
mov
movb
push
js
and
xor
xor
lods
mov
movsb
push
fadds
jmp
test
cmp
scas
mov
adc
addr16
adc
push
mov
adc
lsl
dec
mov
add
sbb
cmp
faddl
sbb
rep
cmp
mov
lahf
loopne
lea
dec
pop
adcb
inc
hlt
add
cmpb
jae
inc
jle
imul
inc
enter
repnz
popa
adc
int
int
push
leave
out
adc
int
int
inc
shl
int
testl
sbb
fisubl
outsl
pop
mov
push
inc
jmp
adcb
shrb
dec
mov
insl
sbb
or
mov
xchg
jge
subl
dec
add
cmpsb
push
inc
and
stc
pop
insb
cwtl
dec
sarl
dec
xlat
bound
or
ljmp
adc
mov
mov
cmp
inc
rorl
nop
and
or
pusha
clc
push
jb
pop
sbb
push
sbb
mull
insl
adc
rcrb
shlb
mov
jnp
dec
and
mov
or
sbb
or
lahf
or
cmp
clc
aad
dec
xor
adc
xchg
inc
clc
divl
dec
dec
sar
aas
nop
out
pusha
or
mov
xchg
add
sbb
inc
adc
cmp
inc
mov
mov
subb
add
inc
jb
out
inc
mov
xchg
sbb
fstps
movsl
daa
adc
test
rcrb
xchg
and
mov
sub
sub
clc
in
inc
push
sbb
xchg
inc
adcl
sbb
adc
stc
sbb
inc
push
and
movsb
stc
imul
movsb
mov
fs
jmp
stos
mov
popf
and
adc
add
inc
xchg
sub
lods
test
popa
out
mov
outsl
test
push
sub
pop
xor
xorb
add
and
sbb
mull
stc
or
xor
push
pop
add
popa
sub
sbb
insb
mov
or
and
inc
add
adc
xor
das
test
ret
mov
and
push
or
sbb
arpl
in
mov
pop
pop
or
inc
mov
xor
adc
or
fisttpll
nop
xchg
sub
ret
loope
out
sub
dec
lcall
push
repnz
enter
data16
add
je
and
adc
dec
clc
mov
adc
fwait
push
pop
std
pop
std
test
test
sub
rol
call
xchg
aam
outsl
jl
clc
xchg
and
outsb
mov
jl
and
out
inc
cmp
inc
pop
out
adc
inc
xlat
je
push
push
nop
aaa
push
pop
push
pop
fs
rclb
and
cmp
sbb
adc
add
xor
inc
mov
xor
repnz
les
ret
out
adc
int
lret
pop
jbe
and
popa
and
cltd
daa
test
fistl
dec
roll
jecxz
inc
xor
xor
inc
lock
and
nop
mov
into
std
ret
mov
sub
xor
or
sbb
sbb
xor
xchg
pop
jo
xlat
xorb
ret
mov
jns
jge
cmp
push
mov
shrl
xor
test
repz
cmp
or
scas
dec
pop
hlt
mov
mov
add
sbb
adc
shlb
and
addr16
popf
jns
shrl
push
mov
cmp
mov
enter
jae
lds
inc
sbb
push
insl
shll
dec
push
mov
sbbb
xor
cmp
push
cmpl
add
pop
inc
jae
or
mov
jae
test
cmp
xor
cmpsb
lret
xor
inc
sub
int3
add
add
outsb
xchg
adc
daa
leave
xchg
pop
or
loopne
or
xor
mov
add
pop
add
daa
pusha
cmc
imul
fwait
adc
fistpll
cs
pop
push
jmp
xor
xchg
xchg
jmp
pop
or
sbb
sub
negb
or
mov
hlt
mov
stos
fistpl
or
rcpps
jne
or
mov
sub
dec
clc
xor
cmp
xor
cmp
xor
sbb
je
mov
imul
pop
push
xchg
pop
mov
pop
xor
pop
adc
sbb
xchg
xor
xchg
sbbb
addr16
sbbl
pop
dec
imul
add
sub
test
addb
test
pop
cld
xor
xor
adc
fdivl
sahf
push
pop
dec
in
sbbb
cmc
inc
mov
cmc
jne
stos
mov
and
test
sbb
lods
mov
xor
les
lds
popf
pop
ja
cmp
jge
adc
les
push
and
inc
mov
insb
pop
mov
push
in
stc
cmovl
or
movsl
xchg
enter
push
dec
pop
popa
fwait
sar
dec
push
pop
stos
mov
jnp
dec
adc
je
inc
dec
cmp
addr16
mov
loopne
push
les
add
test
sbb
push
daa
sub
andb
dec
jmp
lahf
and
nop
fidivs
negb
pop
cmp
inc
ror
je
xor
jno
inc
xor
or
jbe
test
jne
lcall
sbb
jae
add
add
jg
xchg
sub
push
push
cmpsb
insb
pop
add
sub
adc
das
aad
inc
loopne
and
push
aaa
outsl
mov
gs
jmp
push
insb
aad
jb
jnp
fmull
xor
jmp
and
ret
shrb
xchg
inc
pop
pusha
add
xlat
adc
or
dec
mov
iret
aam
mov
movq
cs
or
fsts
shll
scas
adcb
inc
add
dec
ret
jnp
xchg
test
cltd
mov
fldenv
jbe
in
push
mov
inc
dec
sbb
adc
xor
cmp
sbb
sub
push
mov
push
pop
mov
loope
inc
cld
jmp
mov
and
xlat
je
fwait
adc
clc
push
push
push
mov
sbb
pop
pcmpeqb
mov
add
and
repnz
jb
in
inc
pop
mov
inc
mov
mov
sbb
xor
inc
dec
xchg
and
cltd
jo
cmp
inc
inc
add
cmp
mov
sub
stos
movsb
push
or
jmp
mov
xor
fldenv
je
mov
push
iret
add
int3
out
mov
pop
sbb
rcrb
stc
add
sub
sbb
or
mov
xchg
push
cwtl
sub
xchg
pop
mov
sub
xor
mov
rolb
and
xchg
in
jns
popa
popf
jle
sbb
dec
loop
xchg
mov
jbe
sub
repnz
inc
and
mov
and
sub
orl
lods
sbb
xchg
mov
ds
jl
adcb
jae
xorl
push
dec
pop
pop
enter
scas
and
sub
adc
clc
lahf
jbe
sbb
sbb
mov
xchg
xor
test
xchg
nop
int
je
int3
cld
lahf
push
sbb
popf
push
cmp
jecxz
and
movl
addb
xchg
sbb
iret
and
sbb
mov
jb
stos
dec
sbb
outsl
mov
je
stos
outsb
jl
sub
push
pop
loop
or
or
lock
xor
sub
and
test
pop
mov
gs
xor
sub
dec
and
sbb
enter
push
jns
push
popf
mov
incl
aam
into
push
and
cmp
or
sub
popa
xchg
adc
push
pop
push
dec
add
jno
mov
mov
loop
pusha
leave
fildll
pop
push
fadds
xchg
mov
jnp
cmp
cmp
or
out
fistl
jmp
pop
jge
or
std
addb
cmp
cld
and
cmp
pop
push
mov
inc
loopne
aam
rorb
and
push
push
imull
loope
lcall
push
hlt
jns
add
and
cltd
push
cmp
sbb
xor
popa
jecxz
sbb
int3
daa
mov
mov
daa
mov
clc
ss
ss
nop
sbb
dec
push
aaa
sbb
test
mov
push
and
adc
jl
mov
sbb
por
sbb
sbb
ret
xchg
dec
inc
inc
cmp
pop
jb
lea
cmp
movb
xchg
sbb
adc
int3
cmp
jge
jmp
sbb
pop
and
dec
add
sub
lea
mov
or
pop
add
sbb
clc
add
inc
cwtl
pop
idivl
movsb
lock
cmpsl
les
cmp
test
enter
imul
push
jecxz
cli
sbb
xchg
into
push
mov
sub
or
fbstp
inc
fnsave
callw
or
xchg
cmpl
inc
mov
andl
rorl
aas
cmp
popa
popa
lds
or
imul
xchg
js
jo
test
or
movsb
xchg
rdtsc
mov
xchg
lea
pusha
gs
add
sbb
aaa
rorb
push
addl
pushf
add
pop
adc
mov
and
or
and
dec
adc
repnz
aaa
sub
inc
sbb
sub
mov
xchg
test
mov
mov
inc
cmp
in
scas
inc
out
ja
inc
lahf
add
push
push
int
popa
push
gs
inc
pop
fwait
xor
sub
xchg
jne
dec
arpl
popa
fsub
sbb
or
jne
test
dec
sbb
or
jl
and
inc
test
adcb
inc
pop
dec
inc
sub
adc
cmp
in
sbb
clc
clc
lret
cmp
leave
leave
test
cmpsl
push
push
test
clc
sbb
dec
aam
mov
xor
cmp
ljmp
cmp
or
stos
cmpb
icebp
push
push
pop
mov
lock
jmp
fdivrl
push
and
dec
movsl
out
lock
add
daa
push
sub
and
and
fs
in
jne
push
mov
shlb
add
aaa
rorb
push
popf
inc
and
fdivs
pusha
xlat
push
mov
and
pusha
bound
push
jo
or
and
push
add
and
jo
je
dec
pop
test
inc
adc
adc
add
push
rolb
xchg
cmp
mov
daa
shrb
sarb
test
es
cmp
rolb
js
fstpt
mov
aas
inc
pop
add
sbb
mov
cwtl
add
add
mov
sahf
mov
sbb
jne
push
inc
add
and
sbb
mov
call
popf
cmp
push
push
mov
xchg
or
mov
inc
clc
push
adc
insb
ret
pop
shlb
adc
jne
pop
jge
or
pop
sub
push
daa
inc
xor
aam
push
fcomi
add
mov
sub
sbb
adc
rclb
subl
dec
jecxz
push
cld
cld
cmp
sbb
stos
push
orl
jp
aad
imul
mov
fadds
push
in
sub
inc
stos
aaa
and
and
mov
cmovb
pop
jg
push
lret
int3
test
int
lcall
lods
jns
sub
push
jne
pop
mov
sub
sub
fdivr
or
jne
rolb
add
cmp
adc
sahf
or
enter
jb
bound
int
mov
and
data16
cmpl
xor
sub
sarb
mulb
jo
push
cltd
rcll
push
push
inc
icebp
xchg
cmpl
out
std
rcrl
dec
dec
mov
and
sub
rorl
mov
jo
adc
es
adc
loopne
inc
cld
mov
xor
push
push
mov
push
dec
inc
pop
inc
inc
sbb
daa
add
or
call
xchg
push
cwtl
dec
push
mov
orl
imul
clc
or
and
scas
arpl
aam
test
out
pop
push
sbb
pop
les
hlt
mov
int3
sarb
push
mov
add
inc
lcall
inc
cmp
mov
mov
and
mov
pushf
std
push
pop
lock
mov
sub
aam
mov
xlat
cmp
mov
mov
add
test
je
mov
dec
dec
jge
shrb
jle
jg
js
pop
or
push
mov
mov
xor
pop
pop
add
xor
mov
adc
pop
and
mov
lcall
and
and
bound
mov
mov
dec
sub
or
jae
xor
neg
mov
orb
pop
inc
inc
inc
cmp
jb
sbb
lea
ret
cmp
mov
sub
lds
xor
add
push
sub
cmp
sub
jns,pn
push
fisubrs
or
xor
pop
jecxz
xor
adc
mov
push
jns
scas
mov
xor
dec
inc
mov
popa
aam
and
add
ss
and
inc
dec
inc
dec
cmpsl
xchg
or
or
xor
mov
sahf
mov
pop
xor
xor
mov
inc
inc
loopne
pushf
popf
add
stc
dec
sub
push
xchg
push
cwtl
das
ret
les
scas
adc
imul
jge
add
loope
and
icebp
pushl
jo
fcoml
cltd
sub
jl
sub
push
jl
jl
loop
push
mov
add
js
jae
push
xchg
mov
cld
push
push
add
ret
cmp
add
idivl
pop
adc
je
adc
lea
xchg
cmp
mov
dec
dec
fmuls
adc
jne
adc
or
sbb
sbb
fstl
sub
adc
xor
adc
aas
add
shlb
inc
sar
pop
add
dec
xchg
test
pusha
jbe
and
xor
dec
cmp
int3
or
xor
adc
xor
mov
xor
push
push
sbb
jne
int
dec
sub
add
cld
add
sub
insl
pusha
dec
pop
enter
cltd
xor
or
int3
push
popf
enter
cmp
adc
adc
adc
sbb
jb
dec
sub
cmp
xor
shl
push
js
in
dec
and
jb
dec
orb
push
roll
popa
scas
and
out
dec
cwtl
jne
mov
or
dec
cmc
xchg
cmp
jno
jb
jae
dec
xchg
sbb
and
ret
add
dec
push
scas
xor
int3
mov
adc
add
cld
fs
cmp
add
sbb
xlat
xor
push
into
cmp
pusha
mov
xor
xchg
jbe
inc
popa
pop
or
clc
data16
adc
add
flds
mov
sub
push
push
mov
cltd
add
mov
jo
roll
push
mov
cmp
into
adc
add
dec
fiadds
testl
pop
jb
cmp
inc
add
push
and
pop
xor
incl
push
cmp
test
clc
int
add
in
push
adc
xchg
pop
mov
push
or
pop
shlb
inc
fcom
iret
mov
popa
jbe
mov
iret
mov
dec
or
inc
cmove
test
or
push
pop
pop
and
aaa
pop
ja
cmp
cli
lahf
add
or
push
mov
and
jbe
mov
xor
jno
imul
fldcw
sbb
xlat
mov
and
mov
jbe
mov
add
jmp
and
pop
enter
mov
aas
jecxz
pop
adc
pop
ret
iret
clc
call
lea
mov
xor
mov
pop
adc
repnz
fsubl
dec
and
jecxz
push
dec
mov
jbe
adc
movl
and
jmp
push
xor
adc
jno
je,pt
shrb
add
xor
aam
adc
or
mov
sbb
pusha
test
pop
or
nop
hlt
sub
push
fidivl
popf
rcr
push
pushf
mov
xchg
out
popa
loop
js
xchg
test
je
hlt
pop
jno
iret
adc
xchg
je
movl
in
adc
push
and
pusha
pop
mov
push
popf
je
push
icebp
movsb
dec
popa
imul
mov
xchg
insl
pop
jnp
jg
jbe
mov
and
lcall
pop
andl
and
mov
idiv
sahf
fld
add
fistpl
add
sub
jo
xchg
cli
lods
add
or
sub
or
mov
shlb
add
cmp
jmp
ret
jle
mov
ljmp
test
or
xchg
test
or
insb
add
in
sbb
mov
test
lock
xor
pop
add
xor
and
nop
fistpl
push
outsb
xchg
into
idivl
int3
xor
xor
and
inc
sub
mov
or
pop
push
xchg
jno
leave
sbbl
pop
push
mov
aas
pop
pop
push
fs
test
push
inc
push
push
cmp
jnp
cmp
sar
int3
pop
and
insl
fmuls
mov
jl
push
adcb
xlat
jbe
aad
dec
nop
xchg
imul
pop
outsl
push
adc
pop
sub
cld
orb
cmp
sub
test
xchg
int
mulb
subb
push
push
mov
cwtl
inc
sarl
std
sarb
inc
arpl
xor
fildl
mull
push
sub
push
sbb
push
adc
fistps
jbe
sub
repnz
add
fbstp
cmp
ja
shlb
lods
mov
adc
out
jg
clc
pop
ja
jb
push
jae
push
pop
and
int
sarb
aaa
xor
cmp
sub
and
add
daa
int
sbb
or
jecxz
std
aas
sbb
add
pop
adc
loope
or
lock
pop
testb
mov
in
pop
adc
mov
movsl
pop
cmp
fdivs
adc
enter
fbld
and
jmp
and
jns
jne
sbb
inc
pop
jne
mov
aaa
nop
add
and
xlat
mov
cltd
sbb
lods
je
add
jne
cmp
je
or
jmp
dec
dec
gs
inc
and
push
hlt
call
lea
out
and
clc
and
pop
adc
or
inc
sbb
jmp
icebp
test
mulb
mov
add
xor
mov
cld
and
pop
dec
pushf
sti
int
stc
push
push
push
popa
jl
push
daa
mov
jnp
in
mov
ss
fwait
pop
ret
adc
clc
js
add
mov
mov
cwtl
sbb
cmp
roll
ret
and
jne
adc
add
nop
icebp
and
mov
and
dec
sub
push
mov
or
sub
cmc
xchg
mov
fs
outsl
xchg
xchg
rcrb
subb
jnp
xor
stos
cmp
push
mov
inc
jo
jno
sub
push
xlat
pop
xor
idivb
add
std
adc
in
inc
pusha
sub
adc
out
mov
ds
xor
push
lock
js
shll
dec
pop
inc
nop
dec
je
add
mov
mov
sbbl
xchg
test
fistl
and
test
add
jns
out
das
xchg
pushl
sbbb
mov
les
movzwl
pop
cmp
cmp
scas
or
cmp
cmp
nop
xor
sbb
jne
xchg
outsl
adc
and
sbb
or
xlat
mov
mov
gs
and
add
push
fstpl
outsb
loopne
adc
cld
mov
cmp
or
and
test
hlt
rorl
mov
inc
movsb
add
mov
fisttpll
rcl
pop
cs
inc
fsubs
outsl
iret
mov
pushf
mov
dec
jo
push
andl
clc
or
rorb
pop
inc
dec
rcrb
push
mov
and
hlt
cmpb
aas
in
push
inc
or
jl
cmpsl
test
pusha
pop
je
push
and
imul
adc
jmp
mov
je
cmp
in
jo
sti
and
popa
add
jns
or
fwait
movb
pop
sbb
lods
sti
and
dec
dec
push
test
in
adc
pusha
rclb
pushf
arpl
pop
or
nop
lods
push
lahf
cmp
mov
jge
test
mov
mov
cmpb
pop
adc
jecxz
jne
shlb
and
outsl
jmp
inc
mov
movzbl
bsr
enter
add
wbinvd
sbb
mov
adc
call
adc
mov
jge
mov
and
or
inc
cmp
int3
push
lock
rorl
push
add
jg
mov
inc
fwait
jns
pop
mov
add
lret
adc
shrb
mov
adc
xchg
push
push
adc
xchg
aaa
add
cmp
addr16
rol
pop
push
sub
imul
xchg
aas
and
and
push
jbe
mov
mov
xchg
sahf
inc
push
jge
push
es
xchg
rcrb
rcr
sbb
clc
push
sarl
lea
push
fnstenv
add
ret
xchg
ds
add
add
mov
imul
icebp
cmp
jnp
cmp
jne
andl
xor
xchg
sub
and
add
inc
fwait
mov
xor
add
in
lea
test
jge
iret
push
adc
mov
jle
and
add
pop
sub
cwtl
pop
mov
push
lods
and
xchg
js
shll
addr16
dec
xor
ja
sub
faddl
mov
lds
mov
pop
sbb
adc
fisttpl
in
out
call
sbb
pop
inc
aaa
test
push
sub
or
xchg
add
jo
imul
mov
inc
mov
and
jne
mov
or
inc
add
ret
cmp
inc
and
cmp
je
push
inc
sbb
ret
sub
sub
and
inc
fs
repnz
and
inc
pop
pop
hlt
test
sbb
lea
fistl
xor
add
aaa
call
cmpsb
pop
mov
and
xchg
and
xor
icebp
and
and
and
and
sub
xor
enter
mov
pop
or
mov
rcrl
or
cmp
adc
adc
inc
push
mov
mov
insb
std
inc
and
cs
int3
or
jnp
and
adc
dec
sbb
sub
mov
ds
daa
movsl
jbe
popf
in
jge
jbe
pop
fiadds
dec
push
pop
mov
sahf
xchg
cmp
pop
loopne
je
int3
lret
mov
pop
sbb
loopne
cmp
int
adc
rclb
nop
aaa
js
dec
movzwl
cmp
dec
jns
sbbl
outsl
sub
add
jle
pop
jo
add
cmp
xchg
scas
mov
sub
jno
repnz
cmpsl
and
shll
rorl
arpl
pop
xchg
cmpsl
push
sbb
shr
push
jo
js
push
add
add
or
cld
outsl
jae
push
push
adc
sub
cmc
stos
popf
dec
jecxz
mov
cli
dec
and
popa
jbe
movsb
adc
or
daa
pushf
and
sbb
mov
jo
push
cwtl
pop
jb
loope
push
and
das
dec
inc
dec
push
pop
hlt
jne
sub
push
xchg
adc
test
or
and
pusha
dec
test
dec
inc
rorl
cld
loop
sbb
pushf
pop
adc
dec
or
xor
sbb
cld
jecxz
jbe
hlt
lahf
cli
sbb
gs
fsubr
add
xchg
mov
fstl
pop
je
aas
dec
xor
push
les
jg
icebp
lock
lea
push
pop
jmp
add
add
jb
mov
shlb
inc
push
addr16
jmp
repz
mov
in
divb
push
jne
and
cmp
enter
cmp
push
push
mov
add
cmp
or
adc
cmp
aad
and
and
inc
xor
push
aaa
cmp
lock
or
test
cmp
dec
push
mov
push
test
xor
adc
add
fmull
fcoml
mov
mov
nop
sbb
lahf
sub
pusha
push
pusha
or
jecxz
cld
push
push
out
mov
cmpsl
and
adc
jg
cmpb
mov
std
pop
stos
adc
mov
cmp
jne
cmp
dec
test
or
mov
sub
decl
sbb
pop
je
decl
and
sbb
adc
fdivrs
mov
lock
xchg
mov
add
incl
stos
add
ss
jmp
cltd
clc
dec
pop
push
jbe
test
dec
das
iret
shlb
jmp
leave
inc
dec
push
std
jmp
or
adc
sub
jl
stc
or
je
pop
dec
cmp
push
cltd
clc
sahf
sub
jae
sub
or
add
mov
mov
fstpt
adc
push
and
popa
dec
jmp
jl
fildl
mov
int
aaa
mov
and
cmpb
repnz
or
sbb
and
fisttpll
loope
pop
flds
and
xchg
push
jmp
mov
loopne
mov
and
xor
adc
and
filds
inc
mov
cmp
mov
jne
xchg
sub
adc
mov
ret
imulb
jne
pop
imul
shll
loope
push
push
fldl
mov
mov
in
loopne
lock
cmp
mov
jns
adc
subb
inc
mov
sub
call
ds
ljmp
fcomps
cmpsb
scas
jbe
xchg
pop
adc
mov
das
add
or
pop
xchg
dec
test
fsts
push
stos
mov
dec
cmpsb
inc
dec
push
dec
push
in
orb
xchg
mov
mov
dec
push
loop
nop
inc
or
popa
sbbb
push
pusha
pop
mov
fistpl
mov
mov
mov
std
mov
mov
mov
adc
repz
mov
sub
popa
rorb
clc
push
call
idivb
xor
xchg
repz
cmpsl
inc
jp
fisttpll
inc
ja
adc
inc
push
sub
push
inc
push
aad
fildl
pop
fcomps
les
jmp
mov
loop
add
push
adc
push
loopne
and
mov
push
data16
enter
js
push
sub
mov
xor
ss
in
cmc
mov
cld
dec
mov
adc
mov
cmpsl
pop
mov
ja
add
and
scas
orl
lock
into
fcmovu
push
push
ja
pop
mov
xchg
mov
jbe
push
popf
push
pushf
xor
cwtl
cmp
adcb
pop
aam
push
xchg
int3
push
loopne
outsl
push
xchg
dec
sub
cmpb
jns
mov
aam
orl
xchg
rcll
pop
xlat
sub
xchg
adc
xchg
dec
mov
pop
mov
test
jnp
pop
mov
lock
cmp
inc
pop
mov
hlt
fnsave
stc
push
pop
add
mov
addr16
pop
aas
mov
xor
cmp
mov
jmp
pop
pushf
testl
cld
cld
pmulhuw
and
out
loop
jo
arpl
and
cld
add
inc
push
adc
cld
mov
stc
cld
jmp
pop
pop
into
je
mov
aam
push
xlat
test
sbb
inc
push
push
cwtl
fdivrs
adc
cmp
in
mov
dec
push
insb
and
push
inc
mov
repnz
xor
cmp
enter
pop
dec
cmp
fwait
push
test
pop
cmpb
popa
sbb
loop
push
add
int3
and
in
sbb
nop
aaa
xlat
inc
and
push
mov
ljmp
push
andb
sbbl
sub
mov
pop
int3
jne
xchg
out
outsb
enter
call
fiadds
repz
sub
pop
adc
ja
lea
jne
repz
pop
or
inc
push
or
fcoms
mov
loopne
scas
in
push
push
push
or
fs
hlt
jl
jmp
sub
aas
test
movb
sub
jecxz
xor
mov
pop
dec
xor
push
push
dec
rcrb
push
mov
and
push
jne
jnp
loope
add
add
pop
xor
xchg
xor
lods
push
xor
xor
cmp
mov
push
jecxz
push
add
or
pop
iret
fildll
push
inc
mov
push
sbb
push
adc
mov
xor
repnz
pushl
neg
sbb
and
add
mov
pop
movb
lea
mov
push
shrb
sbb
inc
mov
cmp
xor
ss
loopne
push
imul
push
js
cld
push
insb
cmp
outsl
sub
inc
jb
loopne
enter
push
fsubl
cmp
in
cmp
mov
inc
jl
cmp
ss
lea
fs
clc
jl
leave
cmp
adc
jne
shr
call
jl
add
push
repnz
push
mov
sbb
rorl
scas
call
loope
int3
int3
dec
or
test
sarl
jl
test
pop
pop
je
mov
add
iret
pushl
mov
mov
add
xor
xor
cmp
add
add
loopne
std
xorl
test
je
and
je
repnz
int
ljmp
or
jmp
add
add
xchg
mov
test
in
dec
cld
aas
flds
jne
jmp
mov
add
and
idivb
sbb
jmp
in
mov
and
je
push
lcall
push
jne
mov
pop
pop
mov
in
push
sbb
ret
das
push
adc
adc
dec
lock
arpl
or
or
divb
ret
lds
jo
les
inc
movsb
insl
mov
pop
xor
push
and
mov
inc
fidivs
sub
inc
or
call
cmp
std
pop
je
clc
sti
dec
in
or
ret
or
ret
mov
sbb
hlt
inc
rolb
roll
mov
mov
out
cmp
inc
sub
mov
push
sbb
and
cmp
push
negl
xchg
jp
add
and
inc
fwait
add
iret
inc
and
push
je
jle
pop
ja
lea
pop
or
jmp
std
jmp
jo
negb
push
arpl
icebp
fwait
data16
shr
jne
nop
sbb
or
add
int
jmp
xor
loopne
lds
adc
in
lods
dec
cmp
sbb
push
int3
add
xchg
pop
push
push
push
fwait
dec
lods
ret
js
or
jl
push
jne
jmp
mov
jl
pop
inc
shll
fisubrs
iret
popa
sbb
mov
and
dec
inc
aaa
sub
sbb
sub
adc
cmp
lcall
cmpsb
push
xor
cltd
dec
sub
or
dec
adc
jmp
scas
adc
sbb
adc
or
stos
sbb
jns
pop
jmp
in
or
ja
imul
and
or
jno
adc
out
mov
add
fnstenv
cmp
jb
xchg
and
aas
push
jle
stc
or
or
mov
leave
add
or
pop
stc
cmp
test
cmp
lods
mov
push
inc
shlb
cld
push
and
and
popf
into
fiadds
mov
lods
adc
fptan
mov
mov
jns
gs
add
add
nop
inc
add
add
mov
cmpb
cmpsb
imul
in
inc
in
xor
shr
call
shll
clc
cld
lock
aaa
cld
lea
clc
sbb
xchg
scas
imul
in
orl
inc
pop
or
mov
sti
and
add
dec
sbb
lea
leave
push
cld
xchg
cmp
pop
and
std
divps
cld
out
dec
ds
leave
push
pushf
cmp
xor
nop
pop
push
addb
fldt
jge
mov
fsubrs
inc
push
sbb
add
mov
addr16
add
pop
dec
hlt
popa
fwait
push
add
adc
push
adc
and
data16
aas
ds
sbb
sbb
cmpsb
imul
cmpsb
imul
mov
add
pop
or
jo
lds
test
aaa
pop
add
mov
mov
pop
and
push
or
push
out
pop
mov
ret
mov
inc
stc
add
sub
pop
test
push
and
pop
fimull
dec
jb
and
aaa
push
sbbl
in
jno
push
jnp
sub
and
xor
fs
add
or
orl
rol
es
in
std
cld
push
lock
add
test
xor
call
xor
push
add
fucomip
mov
adc
adc
jp
jae
out
sub
push
rep
jl
dec
ljmp
ret
mov
loopne
add
cmp
add
inc
or
cmp
jg
loop
and
cmp
jne
clc
js,pn
sub
add
lret
add
jne
fdivr
bound
rcl
add
ret
xchg
inc
aas
inc
adc
mov
mov
mov
xlat
or
push
mov
mov
into
mov
dec
sub
pop
adc
push
push
loope
pop
aas
adc
mov
in
jmp
pop
xrelease
icebp
sbb
inc
out
lahf
rorb
sub
sub
push
mov
sti
add
or
cmp
jmp
sti
pop
leave
lcall
popa
inc
add
add
lock
jmp
icebp
sub
fadd
pop
xor
mov
insl
sub
ja
mov
std
push
jne
arpl
fimuls
mov
pop
mov
pop
pop
iret
sbb
jl
adc
xor
push
outsl
inc
and
jne
dec
add
cmpl
out
push
mov
loopne
and
mov
dec
or
xor
cmp
sbb
mov
adc
jb
fiadds
aaa
or
cltd
mov
xor
inc
or
cmpsl
test
and
test
jnp
ja
jno
jae
jae
push
nop
pop
fiadds
dec
iret
adc
mov
push
lahf
add
addr16
sbb
or
stos
xchg
mov
push
adc
jo
cmp
and
pop
std
push
push
or
icebp
clc
cmp
shl
mov
lea
or
inc
lea
shlb
in
dec
cmpsb
pinsrw
test
jmp
jp
adc
pop
stc
mov
idiv
xlat
sti
popa
inc
rcrl
sub
test
jne
mov
jmp
xor
xor
rolb
sarl
cmp
aam
jecxz
add
jmp
cmp
inc
fs
mov
ret
pop
mov
sub
aaa
mov
ret
movsl
fs
dec
cmpsb
outsl
push
mov
xchg
ss
cli
aaa
pop
cmpsb
adc
je
test
je
pop
jp
div
jmp
fcoms
shl
push
adc
stos
add
divl
lret
adc
jmp
iret
xor
push
and
or
shrl
icebp
sar
or
mov
inc
mov
cmp
je
out
out
cmp
je
test
and
faddl
xor
rcr
jmp
pop
addr16
outsb
or
daa
icebp
loope
cld
jge
sahf
je
cs
sti
jg
ss
xchg
mov
cmpsl
je
sbb
dec
add
or
xchg
add
push
or
pop
xlat
les
xchg
sbb
inc
xor
push
jne
push
jno
sbb
inc
cmp
icebp
sub
loop
xlat
or
push
mov
adc
loop
push
mov
add
adc
or
divl
adc
xor
shlb
or
mov
or
lcall
and
jle
mov
sti
mov
and
cmp
jne
mov
push
mov
and
stos
sarl
fdivs
add
dec
or
dec
or
mov
cmpsb
xor
push
mov
mov
xor
sbb
pusha
push
pop
or
mov
dec
inc
ljmp
imul
add
add
xor
lahf
cmp
or
dec
sbb
int3
mov
out
and
aaa
sub
add
sub
aaa
and
enter
fcmovne
inc
jmp
inc
jg
aas
jne
jle
add
fiadds
clc
jmp
cmp
mov
lods
inc
je
mov
xor
push
push
ret
ja
enter
std
sbb
sub
fadd
inc
and
lock
or
inc
loop
jp
cmp
or
jbe
icebp
cmpsl
jbe
inc
adc
orl
outsb
mov
mov
jmp
push
and
out
pop
inc
sub
fistl
jne
jl
push
iret
mov
inc
adcb
sub
sub
xchg
sub
loopne
xchg
push
test
adc
mov
jle
sub
dec
push
push
push
je
arpl
jmp
bound
push
mov
xor
mov
inc
cld
dec
cmp
cs
stc
xchg
jo
loopne
jo
repnz
push
add
sbb
repnz
nop
je
jg
test
jne
jo
imul
subl
pusha
mov
mov
nop
dec
ret
rorb
cmp
in
shll
mov
lret
cmp
mov
jnp
jne
popa
pusha
inc
stc
repz
pop
pop
cmpsl
jmp
xchg
mov
jg
mov
sbb
mov
inc
test
out
das
inc
std
imull
jmp
xchg
pop
pop
xchg
pop
js
lds
mov
mov
dec
mov
dec
mov
outsl
hlt
sbbl
inc
add
xchg
std
pusha
inc
dec
cmp
mov
in
add
push
add
cld
in
les
add
aad
cmp
out
stos
adc
lods
shlb
cld
mov
cmp
adc
push
testl
adc
and
jo
or
popf
add
stc
xor
adc
xchg
ds
and
add
mov
js
cmp
andl
lods
fsubrl
pop
lret
inc
sbb
gs
in
call
push
inc
and
hlt
cld
sub
test
les
mov
xor
lea
adc
dec
cltd
cwtl
js
aam
push
sbb
inc
push
and
push
cld
nop
mov
cwtl
pop
adc
sbb
andb
inc
test
leave
xchg
repnz
add
or
in
ret
pop
pusha
fwait
cmp
divps
cmp
and
push
push
pushf
fsts
xchg
jae
adc
popa
data16
adc
xchg
push
js
pop
or
faddp
fcomps
add
cwtl
popf
cmp
dec
and
mov
arpl
add
call
sbb
adc
outsl
hlt
adc
lods
add
clc
loop
dec
lea
add
add
mov
pushf
sarb
sbb
popa
mov
jge
int3
dec
adc
mov
jnp
cmp
ja
inc
leave
cmp
jbe
pop
xchg
or
lcall
mov
or
idivl
ret
mov
mov
or
fsts
addl
popa
fidivrs
cmp
add
mov
add
mov
cwtl
enter
insl
lock
loopne
call
insb
es
daa
cs
adc
inc
add
sbb
xchg
cmp
push
jo
dec
ds
push
inc
cs
sar
in
mov
int3
test
or
js
loop
or
cmpsl
arpl
sub
arpl
pusha
mov
cmpsl
cmovs
xchg
test
push
push
mov
decl
mov
pop
pop
stos
cs
and
sub
mov
jp
aaa
xor
das
jl
add
mov
mov
push
adc
ret
fs
fs
or
pop
sbb
cmpl
push
jo
pusha
icebp
or
push
or
ss
mov
fildl
or
push
dec
add
add
imul
sbb
push
push
out
adc
inc
push
xor
dec
mov
inc
sbb
pop
int3
pop
pop
icebp
lahf
js
push
neg
add
inc
test
xchg
inc
inc
in
mov
outsb
cmpl
test
dec
ret
loope
sub
mov
push
or
leave
rorl
push
mov
pop
leave
fwait
lock
cmp
rcrb
loope
je
adc
cmp
mov
pop
ss
shll
and
sub
add
jmp
cmp
jb
repz
sub
inc
insb
ljmp
adc
daa
fs
cmpb
mov
add
sub
cmp
jb
pop
sub
imul
push
out
loopne
aam
call
inc
dec
movsl
dec
loope
or
or
stos
ret
test
xor
or
or
sub
adc
mov
ja
aas
clc
dec
sbb
cmp
push
mov
and
inc
pop
adc
push
fld
cmp
push
addb
xchg
sahf
pop
in
or
shlb
pop
or
mov
sub
mov
jae
cmc
add
lcall
rcr
fnstsw
divl
and
push
or
subl
or
and
mov
xorl
cmpsl
cmp
cmp
or
pop
jbe
inc
mov
inc
fcomi
add
hlt
or
push
sarb
repnz
jmp
jg
cmpl
and
mov
adc
int
pop
repnz
and
mov
xor
or
cmp
add
das
pop
cmp
mov
adc
add
nop
cmpl
add
sbb
loopne
les
in
fnstcw
enter
sub
test
xor
rclb
mov
push
or
mov
repnz
loop
outsb
sbb
test
jecxz
push
cmp
pop
cmpsb
test
icebp
call
fiaddl
sbb
sbb
xchg
or
jbe
push
inc
push
popa
push
fcoms
mov
sub
mov
dec
xor
lock
out
lret
fs
push
add
jmp
push
pop
pop
imul
fcmovnbe
ljmp
sti
pop
pop
mov
inc
inc
mul
pop
jb
cmp
scas
mov
push
jbe
dec
sub
sbb
or
pop
mov
push
sbb
lret
mov
into
aas
adc
pop
xlat
aas
push
push
push
xor
fistps
lock
xchg
sbb
imul
sbb
sbb
xor
lcall
cmpsb
loopne
sahf
jle
adc
jmp
roll
es
fcomi
sbb
pusha
xlat
insl
xor
cmp
add
dec
pop
add
sbb
or
push
daa
jle
mov
jp
aaa
mov
or
and
ret
push
das
inc
jb
or
and
pop
push
lock
fstps
idiv
jmp
cmp
jmp
fstps
mov
xor
cmp
jg
rolb
in
jbe
mov
shl
sub
das
fdivr
jge
loop
inc
adc
ret
mov
push
jmp
lret
add
push
push
push
imul
mov
xlat
push
je
test
mov
mov
cmp
push
add
call
cmp
jne
mov
pop
loopne
ficoml
adc
sub
cmpsl
scas
loopne
call
jns
into
sti
sti
idiv
sub
cmpsl
je
mov
mov
dec
adc
cmc
jne
sub
sbb
stos
popf
dec
add
pop
or
fdivr
imul
lret
outsl
dec
dec
lret
out
jne
adc
push
cltd
mov
loop
cmp
sub
filds
popa
loope
mov
jmp
push
push
lea
out
movzbl
jle
push
push
les
loope
or
pop
inc
jmp
out
pop
xor
inc
adc
jmp
adc
fdivs
sub
lahf
or
xor
sub
or
xor
push
mov
xor
dec
push
je
adc
fsubrs
mov
cmp
je
cmp
idivb
sbb
adc
mov
fnstenv
aas
add
add
mov
push
xor
sbb
mov
decl
cld
mov
test
je
repz
jmp
test
std
mov
popa
jl
or
das
and
add
leave
cmp
mov
es
cmp
jb
lods
cmp
jbe
add
sbb
mov
imul
scas
or
rolb
call
pop
rcrb
jne
clc
ds
adc
add
pop
jmp
daa
add
js
jmp
sub
mov
mov
les
and
out
ret
and
mov
xorb
lahf
jle
neg
sbb
fiaddl
rorb
mov
pop
mov
negl
cld
and
xor
xor
push
imul
call
adc
or
aas
push
add
push
dec
sarb
push
orl
sahf
sbb
sbb
imul
ljmp
and
add
test
cmpsb
sbb
xorb
xchg
pushf
or
jecxz
xchg
inc
cmp
jae
cmp
xchg
mov
or
cmpsl
out
jbe
adc
enter
push
inc
dec
add
mov
pop
std
movb
pop
jmp
adc
outsl
push
daa
sub
jmp
rorl
sbbb
add
iret
mov
dec
mov
adc
and
out
or
imul
xchg
sbb
dec
stc
cli
out
pop
jg
gs
or
jmp
sti
inc
jl
or
inc
and
clc
pop
jbe
popa
mov
inc
inc
or
mov
mov
clc
dec
aam
or
mov
cs
adc
adc
mov
jne
push
xchg
imul
fnstenvs
mov
cmpb
pop
loop
pop
inc
inc
inc
cmp
jb
imul
imul
push
leave
pop
lock
or
sbb
add
repz
sub
ja
loope
fistpll
mov
or
mov
push
leave
push
inc
out
adc
inc
enter
sub
push
push
ret
add
xor
stos
popa
or
mov
push
dec
adcl
ds
rorb
ret
cmp
enter
movsb
jnp
popf
sub
ret
add
sbb
mov
lock
jbe
and
push
push
out
pop
ss
je
out
or
and
pop
pop
hlt
outsl
sub
push
sbb
xor
xor
nop
jl
mov
or
test
add
dec
mov
adc
sub
test
je
mov
sar
ds
mov
mov
and
inc
fiaddl
mov
cmp
jae
cld
inc
arpl
clc
inc
cmp
jb
ret
cltd
push
mov
js
jmp
cmpsb
mov
push
sub
dec
or
mov
icebp
and
subl
data16
in
aas
popa
add
sbb
jecxz
shl
push
add
jns
test
arpl
jne
inc
or
mov
pop
adc
lock
jns
nop
push
cmp
pop
cld
arpl
lcall
dec
je
jbe
lock
inc
sbb
int
shrl
mov
add
push
je
test
or
and
daa
cltd
xchg
add
and
sbb
ret
inc
add
pop
idivb
ljmp
rcrb
dec
cld
inc
loop
jge
jmp
popf
adc
popa
rorl
sbb
cmp
pop
xor
push
adc
sarl
std
dec
mov
or
adc
test
mov
mov
scas
neg
add
clc
testl
cmpsb
mov
xchg
inc
pushl
jbe
jo
inc
jmp
lahf
fistl
scas
adc
cmpsl
subb
cmpb
jne
jp
loope
xchg
adc
push
xchg
inc
sbb
imul
dec
dec
addb
fimull
lret
repnz
jmp
dec
je
mov
shl
andb
es
aaa
xchg
sbb
pop
and
je
mov
inc
mov
mov
mov
iret
data16
and
push
ret
sub
jl
icebp
je
sub
ja
daa
sub
data16
inc
movb
imul
or
adc
sbb
stc
dec
xchg
inc
xchg
jge
adc
mov
sbb
pop
jae
cmpsl
mov
push
roll
jns
add
inc
adc
sub
inc
and
mov
mov
push
imul
pushf
jmp
mov
mov
mov
and
or
mov
pop
inc
in
in
xor
or
inc
mov
add
cmp
rcrl
adc
or
adc
rorb
sbb
test
xchg
xchg
cmp
popa
loopne
rcll
jmp
aaa
shl
pop
mov
arpl
popf
cmp
xchg
rol
or
jg
outsb
mov
mov
mov
push
into
dec
adc
dec
lods
adc
mov
enter
mov
and
xor
add
add
mov
leave
mov
dec
fisubl
cmp
jne
mov
sbb
dec
mov
inc
sbb
add
aas
push
daa
cmpl
push
jbe
mov
repz
jns
pop
loop
ljmp
lretw
mov
adc
push
jmp
lods
out
mov
or
loopw
add
dec
xchg
pop
jno
ret
jp
aam
pushf
sbb
xchg
dec
fwait
jbe
and
inc
or
mov
pop
iret
pop
fildl
cmp
adc
cmp
mov
pop
add
and
inc
mov
cmp
push
jmp
mov
cmc
or
cmp
push
add
jmp
push
inc
or
jmp
cmp
stos
inc
aaa
or
fcoml
push
xchg
jne
jge
popa
cmp
cltd
in
pop
out
bound
xchg
lea
xorb
mov
pop
push
or
pop
jg
test
out
add
pop
andl
orb
shrl
fcomi
dec
in
mov
pusha
push
xor
jg
aas
push
enter
or
and
das
repz
mov
push
aam
cmp
sahf
aad
sahf
xchg
pop
sti
cmp
push
je
mov
mov
mov
ljmp
orb
or
mov
or
imul
les
pop
in
add
pop
scas
jo
jecxz
add
fstpl
testb
cmp
add
je
xchg
push
jne
mov
int
cmpsb
cmp
lahf
xor
cmp
pop
loop
xchg
rcll
pop
in
int
and
insb
scas
ret
testb
inc
jns
sub
decl
js
mov
mov
jmp
daa
mov
mov
dec
rclb
or
ret
incl
add
shll
sti
sbb
insl
repnz
dec
stos
cmpl
mov
out
lods
and
dec
mov
je
jg
mov
call
sbb
push
jmp
mov
decl
imul
pop
lods
insb
out
add
sub
xchg
mov
lds
xor
mov
shrl
cmp
pop
cmp
nop
inc
add
mov
xor
or
psrad
test
cmpb
ret
adc
test
mov
add
fcomp
or
sub
mov
pop
addr16
in
ror
add
pushf
test
les
push
ljmp
add
bndstx
sbb
mov
cld
fwait
jmp
dec
adc
fs
sbb
add
scas
ds
sub
test
add
or
dec
dec
inc
test
lea
in
es
fwait
push
mov
mov
rolb
enter
rolb
shlb
push
mov
ret
push
sarb
or
and
xchg
setns
dec
lds
enter
and
jne
cmpb
mov
adc
push
cmp
cmp
xor
xor
jg
jno
repnz
imul
sub
repnz
js
pop
cltd
mov
nop
add
adc
ret
testb
jne
sub
ret
lahf
lret
xor
push
mov
addr16
pusha
cld
gs
fisubs
cs
inc
mov
sub
icebp
je
jne
loope
std
xor
jne
sbb
mov
das
mov
ss
adc
in
stos
mov
mov
xchg
and
repz
out
addl
inc
pop
xchg
add
mov
popa
shlb
pusha
dec
jae,pt
stc
push
rolb
xchg
jmp
je
mov
dec
pushf
add
fwait
pusha
jge
ret
pushf
jmp
lea
pop
jne
and
rorl
test
shlb
daa
cmp
inc
test
arpl
add
add
push
add
rorl
sbb
push
and
ljmp
cs
in
psllw
sub
testb
incb
push
aaa
lods
mov
or
call
cwtl
adc
ds
push
fdiv
jne
mull
ja
xchg
addl
aaa
cmp
xchg
imulb
dec
sarb
mov
movsb
cs
add
cmp
or
add
mov
aaa
test
gs
push
cmp
push
xor
into
jge
sbb
xchg
adc
jo
dec
arpl
xor
xor
mov
adc
sbb
inc
pop
inc
mov
call
push
mov
add
add
cmp
xlat
mov
cltd
addb
mov
daa
inc
dec
int3
xor
mov
repz
pop
stos
xchg
pop
test
add
xlat
loope
sub
int
dec
mov
iret
pop
mov
ret
lds
add
movb
jnp
ljmp
push
scas
push
or
std
mov
mov
and
je
out
mov
mov
jmp
push
or
mov
push
xlat
ret
pop
std
shl
mov
sub
sarb
or
jne
xor
ss
jl
decb
sub
pushf
test
pop
jg
cmc
cli
jne
xor
add
or
jno
cmp
push
notl
mov
or
lock
popf
and
sti
push
outsl
inc
and
push
xor
addr16
or
test
add
dec
aas
mov
pop
mov
jge
dec
mov
dec
jmp
lea
dec
pop
inc
or
pusha
cwtl
ror
cmp
mov
mov
jg
movb
inc
cmp
pushf
imul
test
mov
scas
sub
sub
or
or
and
mov
xchg
fidivs
add
mov
arpl
xor
mov
ret
jle
leave
dec
fisubrs
mov
div
imul
pop
je
add
xorps
xor
sti
xor
packssdw
sbb
lea
jle
enter
push
mov
add
nop
or
sub
mov
roll
jecxz
jmp
sti
mov
js
adcb
mov
mov
jno
cli
or
loopne
pop
adc
xchg
sarb
sarb
dec
add
pop
popa
inc
shrl
testl
pusha
jae
jl
pusha
dec
mov
mov
rdmsr
pushf
mov
jo
loopne
dec
std
pop
and
and
sub
xchg
decl
js
aam
xlat
ret
sbb
ret
push
sbb
and
ret
push
mov
adc
xor
inc
adc
repnz
push
pop
insb
mov
insb
jl
dec
inc
mov
test
push
lds
test
adc
imul
and
inc
pop
sub
xor
xor
or
mov
sbb
push
xor
mov
cld
mov
cwtl
mov
pusha
cwtl
out
sbb
sbb
dec
je
pop
or
pushf
jb
push
inc
cwtl
xlat
pushf
jae
insl
cmp
push
scas
ret
add
mov
test
lea
lret
jp
inc
rcl
pop
popf
cmp
jg
lahf
add
or
mov
dec
je
dec
jne
in
lock
inc
icebp
cmp
adc
test
outsl
xor
lock
adc
repz
cmp
xor
out
ja
shll
decl
dec
or
lret
lret
lret
je
outsl
je
js
inc
pop
jne
jmp
mov
jb
xor
ja
jle
idivb
sbb
decb
lea
sub
dec
mov
sub
sbb
ret
xor
or
pop
in
xor
jmp
jg
pop
jnp
push
mov
loope
cmp
stos
cmp
shl
xor
iret
and
je
xchg
fbstp
arpl
insl
inc
bound
insb
add
rcrl
cmp
or
scas
fnstenv
sub
test
outsl
and
or
xchg
out
xor
fs
push
js
pushf
insl
cs
sbb
and
shl
leave
rcrl
stc
jp
or
pop
fnsave
test
imul
pusha
cmp
mov
push
inc
lds
divl
mov
add
aam
cmpsl
sbb
adc
cs
fwait
insb
mov
xchg
add
mov
subl
lcall
pop
jp
gs
cmp
push
in
test
jbe
jne
xor
aas
stos
cmp
outsl
insb
pop
add
mov
inc
insl
adc
inc
xchg
sub
cwtl
jmp
nop
fdivl
mov
mov
int3
add
dec
movb
and
inc
fwait
hlt
add
sub
sub
pop
fucomi
jmp
imul
nop
fs
xchg
or
push
pusha
xchg
bound
in
or
les
or
sbb
test
movsb
mov
add
adc
dec
movl
ret
idivl
inc
sbb
mov
rcrl
cli
fisttpll
push
jb
push
sbb
jo
push
mov
push
xlat
mov
sbb
cmp
cmp
cmp
sbb
dec
push
sub
jp
cs
imul
gs
pop
add
and
add
in
jle
in
mov
mov
stos
xor
pop
repz
pop
sahf
push
fcoms
adc
push
cmc
nop
rcrb
and
adc
xor
inc
mov
xchg
cmp
fadd
or
inc
mov
fwait
pop
sub
iret
shrl
cmp
push
popa
lds
ja
pop
jne
dec
loop
pushl
or
jmp
inc
cmp
dec
mov
inc
mov
cmp
jae
mov
jmp
ret
test
sarl
shlb
daa
repnz
inc
shl
jmp
fwait
js
popf
add
into
and
mov
incb
div
shl
or
jmp
xor
xor
jmp
mov
adcl
dec
loope
je
dec
mov
orb
push
ficoms
jae
cmp
fs
rep
jo
scas
or
je
ja
push
or
test
dec
adc
add
add
add
pop
scas
mov
jae
or
or
xchg
add
xor
rol
sub
inc
shl
mov
pop
fdivr
lds
or
pop
mov
rcll
jmp
pop
das
push
and
push
cmp
test
pop
cmp
or
es
sbb
shl
inc
cmp
mov
jo
mov
mov
mov
inc
inc
loopne
sbb
sub
jne
leave
or
jo
mov
pushl
mov
bound
cmp
out
je
or
dec
xchg
jmp
es
xchg
leave
push
xlat
push
imul
outsl
pop
or
mov
fdivr
movsb
pop
push
push
pop
cmp
xlat
cmp
sahf
movsl
push
subl
xchg
or
mov
xchg
jb
sub
outsb
cmp
aad
push
cmp
mov
push
add
add
adc
movsl
mov
push
fcoml
xor
andl
sub
inc
jns
mov
and
imul
test
push
sbb
sbb
jnp
sbb
push
pop
lahf
outsl
jne
adc
cmp
les
fldl2t
aas
mov
roll
loopne
and
aam
jbe
mov
addr16
mov
popa
dec
data16
xchg
push
cmc
shlb
int
test
ret
xchg
inc
sub
xor
int3
jle
mov
mov
out
inc
sbb
xchg
sbb
xchg
dec
sub
adc
mov
ret
xchg
mov
and
neg
lds
clc
or
roll
neg
popa
aam
orb
or
add
loope
dec
aad
adc
fstp
mov
jge
shll
adc
fisubs
shl
fbld
cmp
mov
mov
inc
sbb
mov
add
ret
dec
je
negl
pop
andl
push
jmp
jne
mov
jp
icebp
out
xchg
addps
xchg
mov
adc
aaa
jg
test
pop
aaa
mov
xchg
add
jg
xchg
inc
cmp
adc
push
or
mov
add
pop
inc
push
push
enter
xchg
sbb
repnz
jae
and
mov
inc
lods
push
mov
cmp
push
faddl
and
cmp
mov
sbb
shrb
in
mov
jne
cmp
add
jne
dec
lea
inc
shl
mov
jo
jnp
stc
movsb
push
dec
call
dec
pop
jbe
loope
stos
inc
or
inc
push
and
or
in
or
inc
sub
rolb
sub
or
cmp
mov
mov
adc
jge
testb
leave
cld
inc
outsl
jb
add
mov
decl
mov
xchg
or
mov
js
mov
sahf
mul
pop
inc
fdivl
add
lea
lods
in
sbb
adc
adc
cltd
xorl
cmpl
jb
xchg
pop
or
cmp
mov
add
loope
les
add
cltd
add
dec
ja
jno
mov
adc
sbb
imull
cmp
test
inc
inc
mov
cwtl
test
add
scas
std
dec
dec
andl
mov
leave
or
pusha
out
mov
imul
mov
mov
mov
test
mov
adc
sub
and
sti
push
or
cli
add
add
popf
ljmp
incl
mov
inc
adc
or
cld
shr
mov
imul
add
mov
inc
add
mov
dec
pop
or
pop
sbb
aad
lea
mov
mov
out
sti
or
mov
test
pop
mov
sar
dec
cmp
jbe
mov
aas
pop
mov
cmp
mov
and
lock
pop
dec
jmp
dec
add
shll
pop
mov
rorl
jne
add
sbb
int
testb
les
push
pop
add
cmp
xor
dec
pop
add
mov
pop
js
hlt
mov
push
or
mov
mov
mov
jmp
clc
and
hlt
jmp
sub
and
sti
add
int
fidivrs
fidivs
mov
clc
imul
andb
jle
js
cmp
je
shrl
sti
and
pop
mov
shr
not
and
add
ljmp
xor
sbb
pop
xor
divb
fnstsw
pop
dec
add
lods
xchg
in
or
sbb
sbb
mov
jmp
fbstp
pop
lock
mov
cmp
lods
fstpl
pop
dec
or
adc
clc
leave
jo
mov
pop
paddd
mov
jge
and
push
xchg
cmpsl
pop
xor
call
inc
dec
or
imul
adc
push
mov
lds
cwtl
outsl
or
addl
inc
xor
xor
xchg
mov
fcomps
inc
or
mov
fildl
loope
add
scas
push
xchg
insl
das
jp
push
call
aas
gs
push
or
adc
sbb
mov
add
decb
adc
inc
mov
add
and
pop
jo
mov
adc
adcb
inc
ror
jbe
or
loopne
enter
lock
enter
lea
pop
mov
scas
mov
pop
cmp
inc
jbe
insl
or
xchg
mov
xor
inc
enter
mov
shll
inc
lret
movsl
mov
pop
outsb
push
cmp
sbb
pop
mov
stos
push
pop
pop
arpl
adc
push
sar
jbe
xor
mov
jbe
mov
ret
sbbb
nop
ja
push
cmp
lahf
jns
icebp
jmp
orl
mov
idivb
incl
in
pop
movsb
mov
fs
lcall
jno
add
loopne
stos
das
adc
stc
mov
imul
loopne
cmpsb
adc
pop
mov
add
add
dec
jne
push
mov
out
pop
jo
jns
push
jne
insb
pop
lea
jg
hlt
mov
inc
jmp
xor
inc
adc
dec
clc
incl
decl
std
rolb
cld
lock
add
sub
lods
jle
adc
add
xchg
add
jb
mov
adc
hlt
fs
inc
push
mov
pop
icebp
jmp
test
pop
mov
push
in
in
add
ss
push
adc
or
add
popa
lods
out
jb
jle
xlat
sub
pop
shr
das
mov
cld
mov
stos
movsb
icebp
inc
mov
in
add
fstpt
xchg
add
jns
adc
fsts
inc
dec
cmp
sar
and
xlat
loope
cmp
xorl
push
push
mov
pop
inc
cmp
add
add
push
dec
sahf
nop
es
adcl
aam
dec
or
jnp
add
and
into
add
outsb
jne
and
loopne
mov
dec
cmp
xor
ljmp
lea
jecxz
scas
movsl
jno
jg
or
xchg
gs
xchg
pop
dec
pop
pop
push
pop
pop
xchg
cmpsb
imul
aaa
sbb
and
nop
je
jmp
xchg
imul
adc
imul
inc
insl
xor
into
push
inc
sub
pop
outsl
cmp
out
mov
decb
pop
or
mov
inc
dec
insl
pop
fcomps
push
sar
dec
cmp
xor
add
sbb
pop
xlat
add
enter
cld
xor
cmp
in
push
scas
dec
je
cltd
push
sbb
scas
dec
push
pop
cmp
sbb
fidivs
addr16
pop
mov
mov
fisttpl
or
mov
out
pop
xchg
mov
dec
add
dec
shll
incb
in
stc
mov
into
mov
pushf
addr16
rdpmc
cmp
pop
xor
hlt
mov
cld
xchg
pushl
mov
push
push
push
rorl
inc
xor
push
cmp
cmc
leave
jp
lea
in
or
add
subl
nop
xor
shr
cld
mov
sti
fcoms
jbe
lds
and
decb
iret
jne
ret
adc
dec
fcmovne
or
jb
push
jne
negl
inc
or
inc
call
add
cmp
and
incl
mov
mov
mov
les
xor
add
es
mov
mov
cmc
mov
xlat
je
dec
imul
cmp
lret
ret
pop
insl
or
cld
jmp
cmpl
cmpl
pop
jae
out
andb
xor
dec
mov
aas
xor
fstp
int3
push
and
imul
js
addb
pop
and
decb
cmp
loope
test
cltd
call
push
rorl
mov
jecxz
imul
push
cmp
daa
das
inc
daa
rorl
cmp
cli
xchg
dec
pop
add
repnz
daa
adc
in
and
mov
push
pcmpeqw
fmull
in
sub
test
mov
pop
mov
lods
dec
push
and
mov
into
pop
jp
dec
jp
and
adc
or
das
pop
dec
jb
pop
popa
or
or
and
cs
sbb
out
inc
movsb
pop
cmpsl
sub
or
mov
mov
out
or
mov
push
mov
pop
adc
filds
sub
fsubl
fldl
lea
jne,pt
jp
lods
ret
add
xchg
cmp
sub
push
sbb
and
jge
add
mov
cvtdq2ps
or
push
push
pop
sub
cmp
std
inc
jae
dec
je
div
xor
je
push
and
test
cmp
testb
pop
push
push
sub
insl
jns
lds
push
pop
cmp
or
fincstp
in
pop
pop
in
cmp
in
mov
test
loope
adc
mov
xchg
mov
fcmovnbe
dec
sbb
or
sti
je
sarb
mov
or
andw
and
pop
daa
inc
or
push
ss
or
enter
loopne
lahf
jns
stc
push
cmp
or
sub
add
nop
fnstcw
sub
cmp
mov
shld
sub
fiadds
nop
dec
inc
outsb
mov
or
inc
or
iret
stos
rcrl
xchg
sarb
testb
call
mov
lret
sahf
adc
nop
lds
xor
and
addr16
dec
pop
push
add
mov
dec
cmp
dec
pop
mov
mov
sbb
rcll
pop
push
test
loope
inc
jmp
sub
adc
push
xor
jbe
or
inc
cmp
je
or
rclb
adc
or
lea
test
fadds
test
push
inc
outsl
push
lods
popa
xchg
mov
jae
mov
lret
inc
mov
add
adc
adc
lods
test
adc
mov
pop
movsl
outsl
sbb
push
jmp
xorb
lock
adc
rcrl
mov
add
iret
jmp
mov
mov
cltd
adcb
xor
cmpl
jne
dec
jp
lds
push
dec
rclb
inc
sub
rclb
orps
mov
mov
push
fstpt
in
test
je
cmp
xchg
cmp
loope
add
and
jmp
das
into
add
or
inc
adc
paddd
dec
out
cmpb
cmp
out
clc
push
jg
je
sub
je
or
je
push
in
rcrb
mov
test
or
jg
jne
filds
xchg
imul
pusha
sbb
ret
mov
jne
sbb
add
into
jmp
mov
or
js
nop
mov
into
sub
or
push
jne
pop
outsl
jmp
ret
addr16
idivb
iret
sbb
mov
or
and
das
into
push
or
test
pop
cmp
popa
push
pusha
cwtl
add
pop
or
rep
sub
inc
jns
sub
rol
push
inc
xchg
push
add
pushl
jo
mov
mov
or
add
mov
rclb
cs
pop
push
mov
pop
xchg
ret
inc
daa
je
ds
mov
xor
jmp
mov
mov
mov
arpl
cmpl
decl
add
or
push
or
cmpsl
add
push
loopne
lret
mov
addb
xchg
mov
mov
pop
dec
mov
das
inc
loop
inc
and
and
lret
das
push
cli
xchg
pop
or
or
lock
mov
adc
jns
cmpsl
adc
lea
jns
xchg
push
dec
and
xor
jno
movsb
sbb
xor
add
aas
adc
mov
jns
push
insl
add
and
cwtl
shr
testl
adc
xchg
lret
dec
adc
xlat
jmp
dec
cli
sub
add
pop
adc
inc
sbb
addl
cld
mov
adc
movb
fs
cmp
fwait
sarb
scas
ja
in
xor
pushl
js
dec
cmp
jae
inc
inc
insb
push
orl
sti
adc
jmp
js
outsb
inc
jb
pop
inc
std
xchg
or
add
adc
lock
xor
arpl
testb
mov
jne
movb
jae
mov
add
or
mov
jmp
lahf
add
out
cmp
xor
inc
je
popf
rolb
adc
mov
cmc
mov
push
add
lea
or
xor
or
or
cmp
rcrl
push
push
lea
pop
add
push
jae
push
add
cmp
fimuls
test
or
add
xor
insl
loopne
and
and
addb
push
nop
mov
pop
arpl
ret
jae
lahf
hlt
xor
inc
icebp
inc
mov
incb
lock
cmpl
ja
jl
add
jne
pop
pushf
jae
mov
cmp
testl
adc
mov
ds
pushl
xor
sbb
jns
xor
mov
inc
mov
adc
xchg
loop
add
jb
xchg
lods
dec
in
cmp
sti
jle
decl
inc
and
dec
lahf
dec
xchg
mov
imul
rclb
push
outsb
sub
insl
mov
cmp
sbb
add
cmpsl
push
add
jl
scas
xchg
sbb
push
pop
xor
add
pop
xchg
inc
xchg
cld
movl
push
mov
mov
jo
mov
or
inc
cmp
mov
les
mov
and
or
sbb
inc
and
lea
mov
push
test
xor
fsubl
mov
xor
js
sub
dec
outsb
js
and
pop
and
in
adc
dec
adc
pop
adc
xor
xchg
add
sbb
rcrl
inc
movsb
mov
fdivr
pop
pandn
mov
jecxz
int3
cmp
jae
lea
aad
or
call
sarl
cmp
insl
add
adc
push
inc
bound
or
or
lds
cmp
xor
inc
jmp
mov
and
mov
or
pop
pop
and
enter
mov
cmp
adc
mov
cmp
xchg
push
jl
test
fadds
mov
aad
cmp
dec
sbb
jecxz
xchg
js
cmp
xor
mov
pop
and
adc
cmp
push
cmc
testb
and
add
and
or
add
jae
daa
mov
xchg
scas
inc
pop
fsubs
push
mov
in
mov
sbb
lds
outsb
jge
add
in
lds
adc
push
addl
adc
adc
and
lahf
movsb
pop
mov
jmp
sub
cmc
xor
xor
outsl
xchg
push
std
push
cltd
ret
test
pop
gs
cmp
sti
shr
scas
jle
jb
pop
add
adc
into
aam
xchg
push
arpl
push
and
shrl
xchg
pop
sbb
cmp
xchg
push
fdivrl
mov
rolb
aam
cmpl
pushl
dec
push
sbb
sbb
jge
icebp
cli
pop
sbb
xor
inc
fisttpll
dec
or
insb
cli
mov
jmp
pop
aaa
cmp
dec
in
pop
jne
ljmp
mov
imul
and
lahf
jo
jle
sbb
int
test
push
push
cmp
or
aaa
jae
push
cmp
jl
pusha
xchg
mov
dec
adc
push
pop
outsl
or
dec
hlt
mov
aas
jle
and
pop
lock
insl
test
leave
frstor
lret
into
imul
xchg
sarb
incl
jg
push
movb
jl
sub
lahf
sbb
inc
mov
inc
cmpsl
lods
roll
pop
jl
stos
js
sub
popf
mov
sub
fstps
dec
pop
pusha
pop
inc
out
push
lods
cmp
push
and
fnstenv
xor
int
xorl
nop
pop
add
or
sbb
xor
xchg
dec
in
loopne
sub
hlt
mov
mov
mov
push
cmp
jg
push
fidivrs
jl
jae
mov
dec
call
or
or
mov
mov
in
jle
stc
or
test
mov
xchg
jns
clc
bound
sbb
inc
in
jg
xor
mov
int3
mov
icebp
call
sub
clc
add
or
inc
cmp
and
push
cwtl
sbb
and
jne
push
sub
mov
mov
lock
fstl
arpl
xchg
shrb
sbb
lahf
call
mov
insb
sbb
lods
enter
jge
xchg
jmp
lods
imul
push
clc
ja
jns
or
add
js
jbe
popf
loopne
inc
or
push
adc
mov
call
push
pop
das
xor
addb
sbb
mov
sub
add
shrb
push
adcl
push
add
daa
mov
inc
test
movsb
dec
push
arpl
push
xchg
dec
add
outsb
push
jbe
jne
fstpl
sbb
cmp
lods
ret
inc
lea
jno
jecxz
cld
fs
sbb
xchg
out
cs
mov
lret
and
rcl
ja
and
fs
lock
sub
jae
imul
test
adc
jge
lea
scas
scas
xor
sbb
push
popw
jg
dec
mov
inc
nop
mov
jle
xchg
loopne
sub
lea
cld
jae
mov
decl
adc
mov
adc
inc
inc
mov
inc
jnp
js
cwtl
jl
jmp
ret
ds
mov
push
push
out
jecxz
xchg
and
mov
add
addr16
xchg
and
idivb
test
mov
jb
jmp
sbbl
mov
icebp
in
dec
or
add
inc
mov
fsubr
jge
dec
mov
mov
or
fisttpll
scas
test
pop
sti
jnp
mov
jmp
pop
push
loope
mov
lcall
cmpb
shlb
xchg
sbb
push
sub
fsts
cwtl
mov
push
and
ja
inc
inc
xchg
xorps
cli
adc
shr
adc
dec
mov
or
into
add
fidivs
add
pop
push
subl
pminsw
add
xchg
sub
mov
or
lea
mov
mov
addl
in
test
dec
add
jnp
dec
ret
mov
mov
sbb
sbb
xor
ljmp
stc
jmp
test
cmp
sub
bound
cmpl
cmpsb
xchg
addl
daa
cld
das
add
aad
xchg
adc
insl
sub
hlt
into
movsbl
xchg
jle
pop
je
inc
arpl
clc
pop
add
push
mov
aam
inc
mov
mov
rorl
test
nop
nop
addl
mov
cmp
add
or
cmc
or
fldl
cmp
lock
or
icebp
arpl
out
mov
dec
xor
shl
lds
dec
mov
inc
inc
sub
flds
sbb
test
jne
dec
test
mov
test
je
push
mov
fnstsw
leave
xchg
jbe
or
dec
push
sbb
add
xor
mov
ljmp
aam
std
inc
push
push
add
mov
push
inc
cmpb
lds
sbb
leave
out
mov
xchg
loope
shll
in
adc
xchg
ret
add
jmp
mov
test
xchg
jo
sbb
push
call
cmp
daa
pop
ds
and
movsl
inc
mov
push
add
xor
cmpsl
jmp
or
adc
mov
repz
fstpl
mov
adc
or
cli
jle
add
jp
sub
or
enter
jg
loope
inc
subb
dec
jns
sbb
jg
daa
sub
or
cmpl
or
pusha
sub
lods
inc
push
ss
or
push
in
inc
ss
or
push
addl
jne
jp
push
or
pop
xor
sbb
sub
fiaddl
jbe
lock
add
loopne
jmp
ret
push
xlat
jmp
push
movb
lea
xlat
sbb
jg
lods
cmc
out
or
movb
jmp
add
cmpsl
in
ret
jle
sub
pushl
mov
inc
test
jge
neg
push
xchg
cmp
btr
jl
mov
mov
push
push
mov
inc
sub
xor
jbe
ss
inc
dec
lods
cmp
push
push
movsb
lods
sahf
push
mov
mov
mov
imul
int3
jns
cmp
mov
rcll
jl
pop
das
cli
xchg
jge
stos
or
mov
insb
addb
add
mov
jne
sub
xchg
sub
xor
add
jge
xor
sub
out
aaa
data16
jbe
xchg
push
mov
adc
mov
pop
add
pop
sbb
and
sub
add
cmc
mov
inc
lock
nop
cmpsl
in
and
sbb
imul
cmpsb
push
iret
mov
push
add
adc
push
ljmp
jo
push
push
int
xchg
sbb
jp
stc
sub
sbb
aad
sbb
jge
fsubl
jb
cmp
int
inc
int3
jbe
and
xor
sti
loopne
jo
mov
aas
test
les
jmp
dec
or
test
mov
shl
inc
push
add
cmp
std
mov
or
or
pushl
test
sbb
or
or
sbb
push
push
fdivr
jp
inc
cmp
add
dec
adc
push
scas
enter
cwtl
loope
xor
nop
adc
dec
cli
add
add
adc
sbb
inc
xchg
fiadds
and
cmp
divl
mov
mov
test
cmc
fs
rclb
out
mov
neg
push
push
fisttpl
xchg
mov
and
test
jmp
aad
jp
ds
mov
or
daa
pusha
es
xchg
push
fisttps
subl
add
jbe
cmpb
jmp
sub
mov
mov
jbe
in
shl
pop
fs
pusha
scas
enter
rcrl
sbb
add
jns
popa
out
test
cmp
js
cmpb
adc
or
sbb
ss
jge
sbb
scas
cmp
or
cli
mov
lcall
loopne
subl
jbe
loopne
aad
daa
gs
jecxz
out
addb
les
mov
mov
or
push
xlat
mov
jle
push
ss
mov
outsl
sbb
in
and
insb
mov
xchg
mov
pop
or
and
mov
sub
sbb
mov
cmp
xchg
out
mov
add
jl
sbb
mov
xchg
dec
js
jle
xchg
loope
mov
fistpl
or
mov
loope
pop
push
pop
aam
idiv
and
in
lret
imul
pop
andl
add
add
faddl
es
imul
jmp
and
rorb
sarb
push
dec
or
testb
insl
jmp
cmpl
ret
jae
fadds
lea
jmp
xor
or
or
pop
sub
cmpsl
xchg
mov
jne
lahf
insl
loopne
adc
pushw
js
jns
mov
aas
pop
jne
lea
les
js
sbb
pop
or
or
std
jle
aas
mov
mov
pop
add
orl
pop
pop
pop
cltd
addl
sbb
outsb
jge
jnp
int3
shlb
or
data16
es
pushl
inc
scas
insl
roll
pop
push
pop
jbe
inc
ret
xchg
inc
add
nop
int3
sub
dec
mov
and
pushf
cmpl
movb
out
out
fldl
add
movsl
add
ss
cs
jo
fs
ds
out
stos
insl
cmc
testb
push
xor
push
clc
iret
movsb
lock
jl
lret
and
sti
jge
mov
loopne
loopne
or
or
lods
and
smsw
in
add
mov
cld
mov
idivb
mov
fs
fimull
and
push
movsl
je
jns
movsb
push
insl
loope
mov
pop
iret
mov
mov
pop
mov
inc
inc
cli
sbb
jl
pop
push
mov
jg
lds
xchg
test
aas
xorl
cli
add
mov
dec
jnp
popf
fildl
pop
push
sub
xchg
cmpsb
int
clc
add
push
jg
adc
orb
sti
clc
add
lock
mov
adc
jmp
or
jl
pushl
jecxz
add
pushf
add
xor
cmp
lret
sahf
sbb
lock
lea
add
dec
push
inc
adc
sub
sub
pop
add
inc
das
dec
jno
push
iret
push
add
std
popf
pop
pop
jp
gs
sub
aaa
sbb
mov
ja
inc
scas
fdivrs
pop
cld
adc
or
push
push
mov
or
rep
stos
adc
ss
mov
mov
pop
test
mov
sbb
sub
dec
dec
xchg
xchg
jne
and
icebp
ds
sbb
rol
test
and
rcrb
pusha
aad
push
out
push
movzbl
shlb
das
dec
jg
sub
inc
addl
add
jno
loopne
and
stos
inc
inc
jae
xchg
out
pop
pop
push
cmp
or
cmp
mov
inc
cs
add
mov
cmp
or
pusha
inc
cld
inc
pop
imul
dec
mov
pushf
xchg
mov
xor
add
sbb
pop
xchg
mov
mov
jmp
js
xor
and
cmp
clc
mov
out
iret
push
clc
inc
jb
or
adc
enter
jnp
std
xchg
adc
add
sbb
jmp
mov
aad
cmp
sbb
ljmp
sub
mov
push
jnp
xchg
and
sub
test
cld
jne
out
sbb
lock
xorb
and
movsb
sarb
mov
mov
fbstp
xor
lock
jecxz
adc
mov
pop
sti
push
stos
pop
push
fldenv
xor
mov
push
sbb
ret
mov
mov
test
sbb
movb
xchg
mov
pop
lea
shl
and
adc
clc
fwait
jb
mov
jmp
mov
es
lock
add
mov
mov
nop
and
divl
inc
inc
iret
ret
bound
dec
ret
pop
in
xor
add
shll
rcr
xchg
pop
lea
dec
daa
out
movsl
movsl
pop
movsl
jmp
sub
sbb
hlt
inc
inc
cmpb
mov
jge
sahf
xor
inc
cmp
mov
sbb
outsb
jmp
sbb
in
xchg
jmp
cmp
out
and
or
xchg
movb
push
xchg
adc
pop
lcall
push
aam
mov
sbb
loope
and
push
cwtl
cltd
cmp
dec
test
mov
xchg
pop
sti
adc
inc
inc
xor
sub
ror
subl
jmp
dec
jmp
pop
ret
inc
je
pop
mov
in
movb
lods
add
out
dec
arpl
lret
inc
sub
mov
dec
dec
adc
dec
rolb
cmp
pop
jo
loopne
push
adc
mov
push
divl
adcl
cmc
insb
push
mov
xchg
xchg
and
je
xor
inc
add
adc
or
fs
test
ja
add
adc
imul
jge
xor
mov
pop
jbe
sbb
enter
cmp
add
push
push
cmp
adc
pushl
sbb
js
sbb
pop
pop
pop
mov
push
ror
push
push
or
cmp
cmp
push
inc
orb
ret
sub
sub
add
push
bound
addb
ss
sub
test
mov
out
enter
add
or
or
push
sbb
dec
pop
add
sbbb
or
insb
push
sahf
sub
mov
mov
add
cmp
arpl
shrl
mov
cmp
jb
cmp
imul
add
add
add
adc
mov
mov
outsl
fistl
aad
popa
or
sub
inc
add
loop
fs
mov
popa
fs
popa
pop
adc
out
mov
das
mov
repz
lret
push
or
rcr
jge
adc
data16
idiv
lahf
sub
or
jne
mov
in
mov
into
push
ja
push
int
push
xorl
cs
jbe
nop
daa
or
xchg
test
and
xor
test
lea
and
xor
pushf
cmp
adc
jbe
xor
jl
pop
mov
dec
ja
push
pop
cmp
sub
cli
testb
nop
stos
dec
or
pop
cmp
test
xorl
hlt
xchg
fs
ja
lods
test
stos
loope
add
sar
inc
mov
rol
add
add
pop
mov
push
pop
mov
jbe
push
outsb
dec
and
lret
mov
add
rep
mov
xor
aas
xchg
add
ret
jne
mov
push
push
mov
ror
dec
fdivrl
cmp
push
jmp
jno
inc
add
ds
ds
dec
mov
push
lret
mov
negb
add
cmp
jne
ljmp
dec
push
lock
push
enter
les
cs
fdivrl
lock
cltd
pop
or
jp,pt
cmp
push
mov
cmc
movl
or
cmp
jns
push
rolb
mov
jmp
jmp
test
cmova
mov
inc
testb
add
sbb
je
cli
addb
sbb
cmp
jle
je
add
in
in
inc
pop
and
jmp
xor
mov
push
inc
and
mov
inc
inc
clc
sub
cld
inc
pop
je
cmp
ret
jne
fiadds
or
or
cmpb
add
btrl
cld
push
sbbl
pcmpgtb
pop
pop
incl
int
sub
idivl
cmp
sbb
push
add
or
jmp
rcr
dec
stos
nop
sbbl
or
in
lcall
push
and
adc
and
bound
jg
adcb
js
xchg
movb
sbb
lods
js
add
and
fdivs
add
sbb
lea
sbb
lcall
push
sbbb
mov
sbb
stos
and
rcrb
ds
and
sub
cmpsb
ret
lods
aam
sbb
cmp
push
stos
inc
loope
mov
inc
in
push
pop
jne
xlat
mov
push
cmpsl
ljmp
ljmp
cs
imul
jo
xor
or
mull
push
imul
adc
jne
or
repnz
push
push
sar
testb
xor
rcrl
jecxz
cmp
jno
pop
pop
xor
push
add
push
sbb
inc
cmp
sbb
adc
mov
xrelease
push
add
sbb
or
push
cmp
je
xlat
and
jbe
inc
sub
and
or
jp
cmp
icebp
inc
xlat
push
sbb
ret
dec
aas
popa
or
adc
movsl
or
xlat
jb
mov
int3
push
repz
inc
mov
lea
loopne
imul
xchg
cmp
add
sub
cmp
pop
ret
or
and
roll
incb
sbb
push
inc
inc
xor
pop
inc
xor
sahf
aas
add
or
cli
outsl
testl
push
imulb
add
inc
jae
aam
rcrl
addb
jnp
pop
pop
adc
pop
push
pop
push
push
lea
icebp
mov
imul
arpl
jae
int
popf
rcrb
scas
xor
js
ja
lock
fcomi
xor
xor
jle
add
cmp
sbb
imul
ss
xor
jmp
fadds
add
jmp
pop
jp
and
out
push
movsl
pop
sub
lret
push
xchg
mov
or
testl
mov
xchg
orb
mov
adc
neg
or
pop
ss
sbb
adc
and
icebp
into
sub
xchg
jmp
enter
add
jb
aam
mov
loopne
pop
inc
notl
xor
mov
push
lcall
jge
sub
sbb
lds
sub
cli
shrb
fldl
xor
and
pop
int
mov
adc
das
xchg
or
add
and
clc
mov
xor
ljmp
hlt
inc
mov
ljmp
or
push
jo
test
jo
cmp
cmp
int3
pushf
test
xchg
mov
and
cmpsb
outsb
add
mov
adc
pop
or
ja
mov
jmp
lea
push
push
mov
sahf
mov
jl
sbb
outsl
mov
cmp
push
add
mov
and
cmpsb
push
out
clc
or
inc
inc
adc
dec
jns
test
jne
cmpl
jns
push
cmp
push
das
cmc
mov
jne
inc
and
negb
pop
testb
sub
mov
pop
xchg
mov
mov
inc
add
push
pop
sub
push
adc
lds
int3
adc
xchg
js
sbb
xchg
cmp
sub
popa
push
push
fidivrs
aaa
add
loope
scas
shrl
call
cmpb
jl
ja
pop
add
xlat
adc
addb
popf
sbb
push
jb
cmp
xchg
add
lret
insl
add
aad
push
push
jmp
jg
mov
xor
push
hlt
push
adc
pop
fsubs
mov
add
hlt
sbb
addr16
adc
push
lock
xor
sub
cmp
decl
mov
xor
add
imul
add
cmp
fsubrp
les
jb
rcrb
adc
inc
std
mov
lods
leave
in
sarb
pop
call
in
add
lock
test
clc
jae
cmp
cmpsb
jne
jmp
sub
and
inc
push
lahf
add
incl
and
inc
add
int
push
dec
inc
lea
jl
xor
scas
sbb
push
pop
div
mov
push
sub
xor
pop
add
int3
inc
repnz
add
aaa
xchg
mov
shrl
adc
pop
or
je
rcr
add
loopne
sbb
sbb
daa
pusha
and
lret
jne
scas
or
jnp
mov
sbb
lret
inc
out
bound
shl
lods
aam
inc
inc
sbb
addb
inc
adc
hlt
mov
inc
pop
xchg
cld
rcl
dec
loopne
je
movl
xor
sbb
dec
loop
call
pop
loop
push
aas
mov
pop
jmp
add
add
or
push
mov
cmp
adc
pusha
sbb
cmp
movsb
add
dec
or
or
adc
jnp
xor
pop
push
push
pop
xor
ss
into
pop
subb
hlt
aas
dec
mov
jl
and
pop
mov
mov
or
jo
pushf
push
shlb
mov
mov
insl
pop
and
sub
sbb
or
mov
and
test
sbb
insb
fcmovb
call
mov
jb
or
call
out
cmp
in
mov
nop
cld
push
das
or
insb
adc
aas
call
and
mov
cmpsb
mov
mov
or
push
lods
mov
adc
cmpsb
imul
aaa
test
add
pop
adc
aas
pop
sbb
xor
sub
jo
dec
push
add
cmp
mov
sub
loop
add
add
cmp
jb
imul
sub
decl
lcall
and
aaa
mov
push
mov
jge
or
rorb
pop
or
adc
out
les
loope
mov
pop
add
push
cmpl
adc
imul
jne
jle
out
push
clc
adc
or
adc
hlt
jmp
or
jmp
add
stc
pop
imulb
push
jns
and
iret
jecxz
dec
icebp
sbbb
or
mov
sub
scas
xchg
je
addr16
stos
sahf
addr16
ficomps
dec
dec
push
push
push
adc
hlt
dec
orl
jns
adc
and
sbb
rcrb
and
jecxz
add
jnp
xchg
sbb
ja
add
xchg
and
jbe
push
push
cmpsl
add
sub
mov
or
lods
jg
jno
xor
bound
jne
or
adcl
not
les
and
pop
cmpsl
jns
sbb
dec
lock
fdivl
dec
sbb
mov
adc
pushf
xchg
xchg
lock
mov
popa
mov
or
pop
jecxz
rolb
stos
add
out
pushf
loope
mov
adc
mov
inc
sub
mov
mov
sub
mov
xor
push
cmc
aam
cmp
out
sub
ja
sbb
jecxz
fsubrs
orl
pop
jl
aas
mov
in
xor
fsubrs
or
or
addr16
or
lcall
mov
fists
cmp
pop
adc
lcall
rcrb
mov
or
sbb
pop
aaa
mov
fwait
test
push
xor
jns
rcrb
mov
dec
push
sti
jg
out
es
mov
test
add
add
call
mov
sub
je
xchg
inc
sub
xchg
or
imul
adc
xchg
outsl
adc
pop
adcb
or
je
xor
cmpsl
push
mov
sbb
push
aad
mov
jmp
lea
xor
fistps
add
lahf
test
mov
pop
pop
and
aas
xor
add
stos
push
pop
jg
je
jae
or
ret
pop
cmp
fmull
in
mov
dec
imul
dec
adc
in
jle
scas
jns
add
movsl
je
rcl
xchg
adc
push
mov
add
sub
push
test
and
js
inc
add
loope
in
xor
add
mov
adc
add
and
add
test
imull
sti
test
push
pop
mov
cmpsl
cmp
adc
rcll
test
sbb
and
mov
push
lock
das
add
mov
push
sarb
lods
jne
sub
in
jmp
sti
pop
out
or
or
dec
adc
fidivs
lret
and
mov
jl
add
outsl
mov
andb
or
sbb
ds
daa
testb
gs
or
in
test
jne
cmpl
or
pop
or
imul
enter
push
pop
xchg
push
mov
jno
sbb
lock
cwtl
rol
mov
inc
idivl
xor
cmpsl
lods
sub
xchg
icebp
xor
movsl
xchg
out
nop
mov
jle
int3
adc
push
cwtl
ret
hlt
or
pop
ss
rol
fdivrl
sbb
sub
cmpsb
jo
mov
cmp
mov
and
dec
data16
nop
rorb
or
adc
or
push
mov
and
ficompl
test
mov
arpl
pushf
jae
push
into
cwtl
or
or
inc
and
pushf
mov
pop
fsts
test
xchg
or
ret
loopne
and
inc
in
jmp
xchg
lret
xchg
push
inc
ret
or
cmp
or
jmp
inc
sub
inc
jne
jp
pop
sar
and
idiv
push
mov
popa
shl
adc
test
pop
push
std
fadds
inc
cmp
imul
inc
jl
mov
lods
add
sbbb
mov
add
push
jnp
push
mov
orb
xor
cmp
aaa
sub
inc
ret
out
push
das
sbb
sbb
add
pushf
mul
inc
std
call
ret
lea
push
lea
or
test
in
out
scas
mov
movsl
jl
out
fbld
test
and
cmp
jge
lcall
sub
nop
inc
aas
cli
or
pop
sub
push
xor
insl
add
push
es
cmp
fisttps
lock
add
add
or
nop
imul
lock
cltd
hlt
pop
or
lds
jne
lret
out
dec
sub
leave
and
shl
push
xor
pop
push
ljmp
or
jle
andl
or
push
pusha
mov
mov
icebp
jg
jl
aad
fildl
adc
jmp
and
rolb
dec
call
lds
dec
mov
or
subl
loope
roll
sbbb
mov
adc
aas
shll
add
repnz
hlt
adc
and
push
xor
sub
inc
fsubs
fdivrl
movups
adc
sub
aas
jle
jbe
xor
add
mov
xor
adc
jge
shll
fdivr
push
mov
mov
je
jbe
push
jnp
inc
xchg
stos
testl
stos
out
jmp
cmp
inc
or
and
in
add
mov
mov
add
add
pop
in
push
push
fcomip
popa
mov
idivl
add
cmp
loop
pusha
clc
movsl
jnp
adc
jecxz
neg
sbb
sub
orb
inc
jne
jle
insl
movsb
fcoms
cmp
ljmp
pop
test
inc
add
and
sub
xor
adc
sub
lock
cli
shl
pop
mov
xor
jl
add
jns
rorb
inc
jge
dec
or
xor
adc
xor
xchg
pop
dec
lea
jg
xor
mov
cmp
loope
jmp
insb
mull
pop
arpl
jl
aaa
xchg
icebp
lock
ffreep
cmp
xor
xor
and
arpl
and
xchg
jno
out
inc
push
rorb
inc
and
inc
inc
add
aas
and
add
orl
verr
pop
pop
add
cmp
jmp
and
in
pop
dec
sub
or
fildl
adc
rcrl
shlb
jmp
dec
add
cmpsl
lret
or
enter
inc
mov
or
out
push
loop
jmp
or
add
hlt
das
push
roll
mov
pop
shl
mov
pop
adc
and
inc
cmp
or
or
cwtl
jno
lods
inc
cld
stos
adc
movsl
daa
in
subl
lds
mov
or
mov
mov
cwtl
mov
mov
cmp
adc
js
jne
jnp
mov
push
mov
iret
repnz
or
or
and
iret
repnz
add
pop
or
inc
cmpb
pop
pcmpeqw
lods
lret
sahf
into
js
and
rorl
and
xor
cwtl
fldl
adc
mov
into
movsl
or
jmp
or
jmp
add
je
cmp
adc
nop
sbb
outsb
test
pop
sub
push
jbe
js
repnz
jle
ja
das
add
adc
and
ret
clc
rcll
push
inc
mov
mov
mov
or
fcmove
jne
or
push
jmp
or
inc
addr16
add
pop
jne
or
out
mov
or
lods
cmp
dec
jge
xchg
push
fstps
add
mov
not
and
adc
rcr
pusha
add
fsub
mov
test
insl
cmp
pop
mov
bound
cmp
mov
or
pusha
sub
push
ret
or
movb
scas
dec
and
out
repnz
xor
pop
enter
add
or
inc
mov
in
and
clc
sbb
jge
cmp
inc
outsb
mov
mov
rorb
les
sbb
or
or
add
jg
sbb
push
cltd
cmp
repz
mov
arpl
into
iret
or
enter
push
push
push
jl
into
daa
jp
sbbl
dec
fcompl
es
xor
nop
addl
outsl
sub
jg
push
push
fcomps
xchg
mov
test
daa
xchg
pop
dec
pop
or
in
aas
sbb
push
push
nop
or
or
data16
mov
push
add
mov
icebp
add
lods
jge
push
sbb
dec
push
dec
daa
int
subl
add
pop
je
cmc
mov
addl
inc
pop
mov
jno
xchg
cmpsl
mov
add
daa
push
shrb
lret
xchg
pop
push
pushf
mov
push
mov
lret
and
lahf
popa
rolb
int3
shl
fisubl
or
mov
mov
sbb
into
or
lock
sub
testb
jge
jg
outsl
add
or
sub
mov
enter
div
cs
je
mov
and
and
insb
test
cltd
imul
addl
cmp
xor
dec
mov
cli
inc
sbb
mov
pop
dec
inc
mov
sbb
jo
mov
fnstcw
or
pop
add
cmp
mov
in
xchg
dec
shlb
adc
stc
or
ret
xor
repz
inc
popl
inc
cmpl
jmp
and
movsl
andb
push
sbb
repz
xchg
mov
and
add
jle
cmp
call
cmp
jl
ljmp
mov
sbb
enter
jl
mov
gs
ds
int3
je
jg
fnsave
cmpw
daa
mov
cmp
roll
pop
and
aaa
js
cmp
fstps
or
sub
dec
push
push
dec
adc
enter
sbb
xchg
jnp
push
or
fidivl
inc
daa
xorb
add
xchg
mull
shl
xchg
pop
cmp
mov
mov
push
sarl
stc
fcompl
cmp
add
adc
adc
insl
hlt
nop
add
and
pop
sarl
sub
scas
jl
dec
xchg
lods
fs
decl
mov
mov
jle
adc
inc
mov
cmp
mov
rolb
lret
les
sub
pusha
push
mov
rorl
jp
je
xor
mov
sub
xor
dec
jns
rcr
jge
inc
mov
inc
sub
xchg
out
add
cmp
cli
push
dec
fsts
pop
sar
add
out
mov
insl
test
test
jbe
add
jno
ret
xor
sbb
or
jne
or
or
jne
loopne
xchg
push
push
push
nop
inc
xor
mov
pop
test
dec
das
testb
sti
loopne
mov
inc
daa
adc
pop
inc
aam
jb
pushl
imul
and
add
pop
ss
xchg
mov
adc
push
test
mov
rorb
sbbl
shl
es
add
add
add
sahf
xor
repnz
fnstcw
dec
dec
cmp
xor
xchg
xchg
rcr
sbb
enter
sahf
or
cmp
jge
stc
xchg
xor
add
dec
xchg
or
scas
je
les
shrl
or
push
adc
mov
and
movsb
push
sbb
leave
jo
jmp
jno
adc
mov
mov
xchg
shlb
or
icebp
dec
addr16
sbb
pop
mov
stc
aas
in
mov
jb
lea
lea
rcrl
dec
push
filds
jecxz
in
pop
sub
addb
test
cmp
sub
mov
or
notl
mov
sub
es
add
and
repz
or
mov
insb
bound
push
and
inc
pop
cmp
clc
or
sbb
or
mov
xor
sbb
add
cmp
insl
popa
test
aas
aas
adc
jge
lea
lea
inc
cmp
ret
divl
xchg
xchg
loop
mov
test
pop
cmp
adc
or
mov
dec
push
pop
push
pop
or
fwait
scas
es
jecxz
mov
and
js
jae
and
pop
or
xchg
push
movsl
push
int
cmc
sub
and
mov
jnp
mov
daa
dec
inc
or
ja
das
add
add
or
ja
icebp
ja
js
shr
mov
mov
mov
decl
xlat
shr
shl
or
pop
mov
das
pop
decl
mov
mov
mov
jmp
lcall
or
push
jmp
pop
inc
subb
mov
and
mov
or
ret
ds
dec
inc
cmp
mov
push
or
das
xchg
xor
push
movups
andl
fs
xor
pop
lret
jbe
test
aad
inc
xor
es
cmc
mull
scas
cmp
jne
stc
cmpsl
jne
mov
sub
mov
loop
cmp
and
mov
out
adc
or
add
loopne
add
imul
push
pop
test
je
imul
add
or
cli
mov
pop
sbb
pminsw
jns
dec
mov
jl
pop
mov
push
inc
jl
mov
push
push
or
mov
add
jge
inc
pop
cmpsb
or
out
xor
xchg
add
stc
inc
jmp
push
pop
dec
add
mov
sub
ja
std
fcmovnb
dec
aad
sti
xor
cmp
and
push
mov
ret
jns
stos
shlb
cmp
push
pop
in
es
loope
insl
dec
xor
push
sub
mov
insl
ja
mov
adc
sahf
cmp
jl
movsb
jle
xchg
scas
and
lret
lret
out
mov
xor
jle
inc
jnp
lret
lret
jle
arpl
gs
push
in
push
packssdw
out
xor
jle
mov
xchg
fs
orb
addr16
ret
jo
push
rorl
adc
jmp
dec
pop
pop
inc
jmp
call
nop
add
push
cmpl
pop
xchg
ret
imul
int3
sub
or
and
mov
fstpt
pusha
or
jne
or
addr16
test
or
mov
fstpl
fldenv
adc
loop
mov
fdivrs
and
push
sub
insb
jnp
fdivs
insb
clc
jge
jmp
dec
lea
rolb
push
fsubr
inc
gs
mov
or
or
imul
roll
xor
ret
adc
or
push
or
push
xchg
loope
pop
dec
add
lods
push
add
push
jecxz
and
mov
pushl
in
mov
xor
orl
pop
imul
or
and
sbb
andl
pop
gs
popa
ss
dec
imul
mov
je
sarb
fisttpl
sarb
pop
inc
mov
mov
addb
and
cmp
lds
sub
aas
jbe
cmpb
jl
mov
inc
push
pop
dec
es
sub
pop
adc
popl
sub
pmuludq
aad
mov
int3
cmp
xor
push
lods
bound
adc
out
fcmovb
jge
add
movsb
or
sbb
adcl
mov
jl
js
mov
lret
push
popf
out
mov
icebp
mov
inc
mulb
das
mov
ror
mulb
jnp
gs
inc
mov
sub
dec
add
pcmpeqw
mov
icebp
scas
sbb
jno
mov
inc
orl
or
inc
ret
xchg
push
ljmp
rorb
insb
lcall
rorl
xor
xchg
or
xchg
aad
push
sbb
loopne
enter
or
pop
dec
mov
movb
pop
in
cmpsb
imul
insb
lcall
jne
and
movb
jmp
loop
les
and
and
in
or
cli
cmpl
movsl
cmp
jne
mov
movl
push
shr
addl
push
in
cltd
jge
out
sbb
rolb
xor
outsl
jne
movsl
push
outsb
sahf
and
add
pop
add
lock
add
shrl
aas
mov
cmp
jmp
movzwl
mov
imul
add
imul
lcall
shr
dec
imul
lea
add
sar
movswl
out
jg
or
push
cli
mov
mov
mov
jge
aas
jb
sarb
cmp
jecxz
mov
cmp
adc
xor
shl
inc
add
add
and
add
inc
adc
clc
or
popa
cli
sub
add
fsubrl
or
mov
stos
xor
or
imul
dec
xor
shlb
adc
loope
pop
movsl
lea
movsl
movsl
dec
and
inc
push
rclb
or
ds
mov
shrb
mov
shr
add
and
mov
mov
sbb
xor
pop
adc
or
dec
jmp
shll
add
jmpw
add
movsl
das
movb
adc
sub
jns
push
add
adc
js
iret
and
mov
sub
sub
mov
int3
pop
enter
mov
mov
mov
adc
inc
jge
je
fisubs
pop
sti
pop
or
pop
mov
incb
and
adc
and
jne
sub
or
cmp
push
bound
or
in
or
sub
andl
ds
leave
pop
dec
or
pushl
daa
inc
or
xor
and
mov
movsb
ret
cmp
adc
xlat
dec
lods
jle
jae
adc
std
mov
aas
ja
adc
xor
mov
rclb
add
or
cmp
dec
mov
hlt
mov
lret
inc
enter
cmp
push
cmp
cmp
cmp
or
fidivrs
add
mov
dec
mov
call
cmp
pop
add
xchg
outsl
mov
sarb
sub
test
lret
add
stc
jmp
std
pop
imul
pop
jmp
mov
jecxz
leave
adc
insl
loopne
imul
outsb
icebp
and
adc
imul
and
shlb
and
aad
orb
mov
pop
pop
jg
movq
sub
hlt
std
mov
fadds
pop
or
add
in
dec
ljmp
aaa
rcr
push
pop
cmp
adc
sbb
cmpsl
xor
adc
ret
dec
jne
sbb
or
ds
push
xchg
test
ljmp
in
scas
mov
push
repnz
decb
hlt
mov
clc
push
or
and
jmp
neg
sbb
subb
pop
arpl
mov
sbb
adc
clc
add
jmp
cmp
je
jge
jno
or
mov
mov
sti
testb
or
xchg
js
jle
lods
pop
add
push
xor
jmp
mov
movsl
fcomi
pushf
stc
add
in
pop
movsb
sarl
add
and
xchg
test
insb
dec
push
push
or
mov
xchg
movsb
mov
add
dec
and
jecxz
or
shlb
and
inc
add
mov
push
outsl
je
insb
cmp
and
or
fbstp
sub
pop
jae
popa
outsb
pop
cmp
inc
js
negl
jo
outsl
imul
arpl
pop
sti
std
mov
or
outsb
and
xor
outsl
inc
fistpll
jnp
jne
jb
outsb
dec
push
cmp
sub
popa
imul
je
and
gs
jb
and
jb
fwait
neg
outsl
jb
cmp
ds
push
aaa
push
mov
outsl
xlat
push
inc
je
mov
std
cmp
jne
inc
lret
push
pop
nop
pusha
jns
cmp
imul
cltd
jns
pop
insb
outsl
jo
mov
dec
cs
je
ret
fmuls
sub
cs
dec
sbb
or
adc
loope
jo
xchg
cmp
push
push
jne
sub
pop
cs
outsb
xchg
push
xor
adc
sti
mov
xor
sub
data16
lods
std
push
outsb
addr16
js
sbb
call
lcall
arpl
aas
insb
mov
fidivs
mov
cmp
inc
in
fisttpl
dec
cwtl
pop
sub
fs
fnsave
adc
or
cmpsb
dec
sbb
jo
dec
inc
push
fucomi
loope
hlt
jle
inc
sub
mov
outsl
insl
jo
je
push
mov
add
inc
gs
dec
inc
dec
push
push
dec
testl
outsl
ja
dec
gs
cmp
movhps
pop
ja
ss
imul
sbb
pop
pop
imul
fincstp
mov
aaa
fs
sub
inc
and
in
and
jbe
push
push
iret
sub
mov
imul
pop
ret
sti
ja
arpl
cs
addr16
outsl
popl
fiadds
and
dec
push
dec
pop
jns
mov
imul
mov
xor
bound
daa
bound
push
cmp
in
mov
fs
outsb
rol
ja
hlt
dec
dec
and
pop
dec
cmp
add
int3
insb
insb
push
or
incl
jmp
pop
cmp
pusha
xchg
cs
adc
pop
movsl
xor
pop
cmp
push
arpl
xor
es
mov
fnstcw
jne
and
movsl
imul
jo
jp
cmpsb
inc
pop
jmp
xchg
test
dec
jne
bound
fcomi
push
push
arpl
dec
pop
jno
push
and
jbe
pop
in
dec
cmp
mov
adcl
push
dec
mov
xchg
pop
arpl
andl
push
imul
or
pop
adc
imull
loope
pop
dec
or
pop
adc
pop
add
push
dec
aam
fisubrs
inc
push
je
insl
inc
das
inc
lods
push
call
dec
push
dec
dec
inc
dec
inc
das
popa
mov
xchg
arpl
mov
xchg
or
insb
scas
jb
mov
jae
inc
mov
outsl
adc
xlat
pop
and
scas
xor
pusha
mov
and
dec
xchg
dec
pop
rorl
xchg
pop
test
inc
dec
inc
inc
movsl
or
insl
mov
xor
xor
insl
loop
adc
xor
outsb
adc
fisttpl
push
cmpsb
add
aam
add
push
mov
dec
inc
push
pop
stos
push
scas
push
lods
or
lods
pop
mull
fistl
out
stos
popf
shlb
adc
rcll
jae
imul
mov
fwait
jmp
jmp
push
or
outsb
popa
insl
scas
mov
insb
inc
cmpb
xor
xor
out
out
xorl
iret
popa
jo
push
aas
jo
adcb
cmp
out
mov
ds
mov
push
outsl
popa
fs
fiaddl
cmpsl
iret
dec
sti
out
leave
in
test
push
jns
je
or
outsl
out
push
mov
push
and
dec
sbb
or
adc
les
pop
cs
outsb
daa
cmp
inc
and
jb
aas
xor
and
push
jge
outsl
add
pop
sbb
jl
jo
inc
push
jb
cmpsl
xor
dec
gs
imul
in
dec
popa
addr16
xor
imul
cld
fcmove
xor
pusha
aas
add
inc
insb
imul
mov
push
mov
mov
lods
gs
sbb
incb
sub
iret
fnstsw
sbb
addr16
inc
jbe
pop
js
movsb
dec
pop
jmp
addr16
call
hlt
sub
jo
pop
icebp
subl
ret
push
xchg
insl
imul
jbe
or
les
je
or
cs
jg
mov
popa
push
out
mov
les
hlt
push
xor
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
ljmp
mov
sbb
dec
jno
repz
test
ficompl
jmp
pushl
roll
shrb
std
in
leave
mov
loope
incl
arpl
or
pop
adc
lcall
jb
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
lcall
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
fadd
pushl
aam
call
xor
mov
cwtl
push
loop
sar
loope
or
insl
or
arpl
hlt
push
imul
incl
test
insb
jnp
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
decl
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
hlt
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
cmp
out
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
call
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
incl
inc
or
das
es
lds
or
sub
mov
cmpsl
call
ret
pushl
iret
shlb
sbb
ret
es
pushf
mov
insl
add
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
add
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jge
incl
mov
mul
ja
outsl
ja
mov
out
sti
jo
aas
imul
pop
or
adc
sahf
gs
clc
sar
call
imul
push
js
or
push
addl
mov
cmp
cmpsl
testl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cli
lcall
mov
fidivrs
mov
jmp
mov
mov
mov
push
cmpsb
mov
sarb
sub
call
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
pop
out
add
das
xor
xor
xor
ss
cmp
sar
pop
bound
gs
imul
jo
stos
je
jbe
hlt
cli
js
jp
inc
incl
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
rcrb
xor
xchg
sub
and
sbb
inc
inc
inc
std
rolb
test
jb
insl
outsl
je
dec
or
push
or
push
test
push
push
xchg
out
jnp
lret
jb
jae
and
sbb
xchg
bound
mov
dec
push
outsb
outsl
cmp
dec
jae
pop
mov
lods
jge
sub
imul
es
dec
sahf
cwtl
add
jnp
shll
outsl
mov
jns
fimull
aas
mov
cmp
bound
xor
popa
adc
jo
clc
mov
ja
sbb
dec
data16
loop
jb
inc
popa
sub
mov
sub
pop
cmpxchg
cmp
add
inc
add
std
jnp
inc
lods
dec
test
shlb
iret
jae
xor
fmull
jp
xchg
lods
pop
jo
jo
lock
jnp
lahf
jo
jb
dec
push
dec
dec
dec
cs
inc
mov
push
push
dec
sub
and
cmp
subl
push
jo
push
rorl
ljmp
sub
ret
lock
outsb
insl
shll
data16
push
jne
loop
sahf
inc
pop
das
mov
fdivrs
mov
pushf
mov
fsubl
inc
xchg
push
aas
inc
mov
sub
inc
push
inc
jmp
push
arpl
cmc
lret
test
push
mov
fidivl
cmpsb
rcll
sub
lds
adc
mov
pop
adc
cmp
jno
fs
gs
jno
dec
imul
jbe
jne
mov
add
pop
lock
dec
fdivs
inc
mov
jno
loopne
inc
dec
add
into
fwait
xor
inc
dec
dec
mov
jb
loopne
scas
add
adc
and
adc
jp
outsl
pop
ja
add
je
pop
jbe
pop
pop
loopne
arpl
jns
mov
popf
add
stos
push
or
and
sahf
xlat
pop
sub
ss
xor
jl
jne
push
jnp
jns
jne
jae
jl
pop
sbb
jne
jl
jl
or
pop
add
data16
aas
mov
xor
popa
jns
popa
push
rcrb
insb
push
leave
jle
roll
loope
dec
pop
add
or
jne
ficoms
push
push
es
pop
pop
pop
popa
add
xchg
pop
jl
pop
bound
dec
mov
fisubrs
xorb
lret
iret
fldt
insb
jne
jns
imul
je
push
lods
pop
data16
push
rcll
cmp
loop
xor
ja
fs
jecxz
testb
mov
jnp
jbe
data16
jnp
inc
punpckhbw
inc
pushf
loope
jnp
jl
jae
jl
push
addr16
jl
push
add
add
je
icebp
fstpt
jp
daa
gs
push
push
inc
dec
push
inc
inc
mov
push
icebp
mov
cmp
fcmovnb
adc
inc
cltd
dec
push
dec
popa
push
gs
jge
and
pop
jo
lds
ja
or
push
xor
inc
orl
call
push
dec
dec
xchg
gs
xor
mov
xor
mov
pushf
inc
mov
cmc
sub
incb
inc
imul
clc
std
insl
imul
dec
dec
fwait
mov
xchg
inc
xor
das
fwait
subl
xor
dec
out
in
popa
push
push
push
popa
js
insb
adcb
daa
or
outsl
popa
cmp
jp
inc
ja
xchg
push
add
mov
arpl
xor
in
jo
outsl
popa
insb
jb
jae
mov
jbe,pt
mov
mov
adc
inc
dec
inc
dec
mov
dec
mov
lods
push
mov
lret
je
mov
jns
inc
inc
gs
cmpl
out
outsb
push
fiadds
push
inc
inc
inc
cmpb
pop
dec
sub
in
jge
fdivp
jne
sub
imul
jne
inc
pop
pop
pop
subl
roll
js
xor
negl
push
imul
xchg
shlb
pop
out
imul
and
jbe
dec
xchg
cmp
ret
aad
push
mov
jge
aas
inc
dec
outsl
push
push
push
sbb
or
cmp
xchg
popa
popa
jp
sub
inc
insl
push
sub
push
daa
pop
mov
pop
cmp
mov
sahf
xor
divl
sub
data16
subl
shrl
fdivs
fisttps
inc
ret
dec
inc
pop
or
inc
out
aas
xor
dec
inc
jne
sbb
and
push
mov
outsl
addr16
arpl
outsl
outsb
push
es
mov
outsb
pop
inc
pop
and
in
sub
pop
ret
rorl
inc
dec
pop
mov
and
jns
es
or
jo
in
sbb
push
and
shl
push
push
inc
es
jns
xor
sub
call
xchg
jae
imul
push
iret
dec
idiv
icebp
cmp
mov
sbb
mov
jno
ss
inc
mov
das
pop
adcl
jbe
int
ds
vmovaps
push
sub
or
popa
mov
jle
sarl
xchg
dec
dec
dec
dec
test
cmp
dec
dec
inc
dec
xlat
push
sbb
mov
stos
jae
xchg
popa
xchg
mov
data16
insl
mov
dec
imul
push
add
push
rcrl
popa
add
xor
and
push
push
cmp
cmp
push
xor
dec
xor
sbb
cmp
sub
out
jbe
outsl
dec
outsb
imul
insl
inc
inc
popf
and
aaa
jo
jo
addr16
push
xor
flds
insl
roll
push
jmp
jne
sub
mov
jns
xchg
cmp
pop
push
push
outsl
or
push
outsl
ja
mov
jb
jns
sbb
cmp
outsb
cmpsb
mov
xchg
add
fwait
mov
loop
test
jg
pxor
dec
jg
mov
mov
sub
out
push
sbb
incb
dec
inc
enter
add
popf
mov
jno
mov
popf
test
push
jle
and
xor
lcall
dec
dec
shll
inc
inc
xor
shll
inc
push
dec
dec
shll
push
inc
dec
shll
bound
dec
shll
js
insb
imul
dec
shrl
addr16
shll
jne
or
je
ja
sub
fildl
xor
pop
aas
jns
and
pop
subb
jl
pop
pop
jnp
pop
jge
cmp
jns
aas
adc
bound
dec
dec
pop
aaa
inc
inc
mov
mov
jle
sbb
and
push
push
cmp
and
je
mov
imul
xor
xor
xor
pop
shrb
and
flds
mov
cmpsl
and
aas
aad
push
and
xor
sbb
jecxz
jo
xorl
bound
pop
scas
imull
inc
outsl
out
mov
xor
xor
lock
cmpsl
xlat
lea
inc
and
gs
mov
push
pop
and
popf
sti
sbb
mov
sub
cmp
out
pop
js
daa
sub
pop
pop
sub
sub
and
add
dec
push
push
sete
iret
insb
xor
sub
push
rcr
test
push
inc
push
push
outsl
push
jns
nop
mov
inc
pop
daa
cs
ficomps
push
pop
push
inc
pop
xor
mov
insl
fs
js
and
push
push
jecxz
insb
pop
pop
jle
gs
out
popa
push
loop
inc
xor
or
imul
loopne
push
cmp
aad
bound
mov
dec
push
mov
xor
mov
fstpl
stc
cmp
jno
call
mov
mov
sti
add
je
jns
je
dec
xor
push
nop
nop
sbb
sub
mov
inc
sbb
mulb
movsl
sbb
inc
out
jg
pop
jecxz
dec
jne
cmp
cmp
sub
sub
pusha
ds
xchg
adc
inc
pop
adc
dec
dec
mov
pop
push
dec
push
cmp
add
fsubs
adc
jae
mov
sub
dec
pop
or
dec
mov
push
jl
xor
inc
push
dec
sub
shll
jae
dec
add
scas
xor
mov
jb
mov
imul
popw
fadds
cmpsl
inc
ds
das
cs
bound
addr16
cmp
pusha
adc
cmpsl
jae
sbb
movsl
aaa
in
mov
sub
subb
cmpl
cmp
xorb
inc
and
mov
sbb
idivb
push
sti
adc
xor
or
push
sbb
inc
adc
or
in
popl
add
das
gs
icebp
imul
xor
rcrb
inc
dec
push
sbb
cmpsl
les
sub
push
mov
inc
pop
insl
or
jno
cmc
pop
xchg
pop
and
sub
mov
rcll
xor
xor
dec
mov
sub
js
mov
push
addr16
test
and
addr16
fwait
pop
test
fdivl
xchg
pushl
inc
inc
mov
jbe
cmc
dec
push
dec
jge
ret
push
arpl
out
dec
push
or
cs
push
push
das
xor
push
iret
lock
push
gs
cmp
dec
outsl
add
aaa
push
int3
adc
sbb
xorb
outsl
imul
xor
xchg
mov
insl
jns
outsl
push
or
mov
shll
jb
cmp
sub
stos
sti
adc
out
sti
xchg
sub
xor
jb
sbb
insb
jp
pop
sub
ss
dec
popa
je
imul
fwait
jo
push
out
cmp
mov
popa
adc
pop
fmull
and
push
daa
sub
pop
sub
and
add
insl
insl
cmp
push
testl
into
push
add
jns
gs
int3
ret
xchg
das
outsl
jge
jecxz
call
sbb
das
xor
dec
sub
cmpsb
inc
sbb
clc
inc
inc
push
and
jo
fcoml
pop
and
and
adc
pop
sub
aas
bound
mov
mov
orl
mov
sbb
popa
movsb
push
ja
rcl
das
adc
popa
inc
roll
loop
push
push
jb
add
xorl
ss
inc
or
mov
inc
repz
scas
xor
aad
insb
lea
jmp
ss
push
dec
mov
mov
fs
dec
lea
inc
push
lea
mov
mov
push
aas
pusha
cmp
xor
inc
outsb
jbe
je
pop
jge
inc
mov
pop
mov
inc
fdivrl
add
shl
push
cld
cmp
sti
les
iret
arpl
xorl
jns
inc
push
dec
insb
jno
xchg
adc
adc
mov
dec
jo
inc
jle
sbbb
and
jo
clc
xor
cmp
inc
xor
loop
fldcw
fists
fsubrl
nop
jnp
inc
aas
sbb
mov
sbb
out
adc
in
add
mov
lretw
jne
pop
pusha
es
adc
pop
push
aaa
insb
subb
push
cmc
xchg
push
or
insb
scas
jo
push
or
jo
bt
bound
xor
mov
outsb
cmc
mov
repnz
popa
aas
out
xchg
sbb
int3
das
xor
sub
cmp
and
in
inc
subb
les
push
imul
jb
and
insb
inc
daa
and
daa
inc
cltd
cmp
pop
inc
dec
std
jle
xchg
mov
jae
data16
or
jge
mov
add
dec
pusha
daa
inc
xchg
fbstp
jne
add
cmp
push
ret
push
push
add
fs
int3
outsb
insb
in
cmp
push
adcb
or
and
out
adc
jbe
push
adc
ss
lods
dec
cmp
inc
aaa
mov
imul
mov
outsb
sbb
rcr
fidivl
push
inc
mov
rcrl
push
mov
mov
or
push
test
and
xor
pop
inc
sarb
dec
cmp
sbb
dec
jae
push
inc
jae
loopne
jl
arpl
push
cltd
jecxz
mov
cmpsb
ja
xor
fsts
mov
arpl
fucomi
pop
rolb
je
insb
sub
pop
loopne
inc
insl
xor
push
gs
or
push
add
out
icebp
mov
mov
sub
jno
outsb
fisubs
fs
inc
fistpll
jae
ds
sarl
cmp
aad
scas
sahf
pop
inc
mov
xchg
gs
sub
mov
testb
inc
sbb
sahf
sbb
pop
inc
dec
fwait
mov
mov
push
push
outsl
sub
dec
inc
push
dec
mov
and
imul
sub
cs
sub
mov
mov
jns
mov
test
fisubl
jle
jbe
ja
andb
int3
sbb
loop
fs
sub
bound
iret
sbb
popa
iret
inc
dec
test
jns
mov
movsl
pop
adc
fadds
jne
adc
jb
cs
lahf
or
lahf
mov
mov
adc
stos
mov
shll
test
aam
stc
lcall
outsl
addr16
insl
sub
test
or
popf
cmp
and
cmp
cmp
and
popf
addb
sub
pop
js
dec
rcrl
inc
daa
cmp
sbb
jne
popa
fmull
or
outsb
lret
push
xor
cmpsb
pop
imul
es
test
pop
inc
dec
dec
and
test
add
jbe
jo
mov
pusha
sub
jnp
jo
xor
fmuls
stos
xor
pop
mov
push
rorl
test
push
loopne
das
push
jg
fsubrs
xor
mov
inc
mov
sbb
xor
addr16
les
xor
lcall
imul
negb
es
jo
xor
ds
daa
sub
and
test
je
fbld
sub
imulb
jmp
inc
add
int
fbstp
test
imul
arpl
pop
jmp
loopne
sbb
out
cmpsb
sbb
dec
insl
dec
push
cs
mov
outsl
arpl
lret
arpl
jnp
cmp
data16
cli
paddd
jmp
data16
and
out
pop
jmp
dec
popa
inc
cmp
push
xor
gs
mov
pop
and
jecxz
and
daa
and
outsl
add
out
sbb
pusha
mov
pop
or
push
inc
popa
enter
rcr
ja
and
lahf
repnz
add
push
push
cmpsb
jp
test
dec
cmovle
or
cmp
out
orl
les
insb
paddq
adc
jae
xchg
xchg
xor
scas
mov
jb
das
inc
fisubrl
aas
push
and
jae
outsb
adcl
dec
push
or
xor
sbb
rcrb
push
push
or
bound
je
ss
in
daa
stos
sbb
inc
incl
loope
testl
fsubl
dec
mov
xchg
pop
and
fmull
xchg
dec
or
or
rcr
adcb
mov
test
mov
or
rcr
lods
out
inc
xor
test
paddq
lret
add
test
add
mov
jg
movsl
cmp
popa
nop
xor
test
and
mov
popl
mov
popl
fcmovb
mov
xchg
and
mov
push
adc
jecxz
and
and
push
dec
imul
dec
mov
es
mov
test
cwtl
or
xchg
ja
fnstcw
bound
pusha
and
xchg
arpl
leave
inc
adc
cmp
adc
arpl
fsubrs
adc
fwait
sbb
ret
dec
arpl
push
jb
lea
das
dec
shrl
xchg
pop
mov
mov
or
add
inc
mov
pop
data16
push
mov
xchg
js
push
sbb
xchg
addr16
mov
ret
push
outsb
add
push
add
and
loope
mov
and
pop
adc
xchg
mov
jns
pop
push
xor
cltd
das
loope
lea
mov
sbb
data16
es
cmpsb
lret
fnclex
adcb
push
or
pop
dec
inc
push
hlt
inc
bound
xchg
sub
pop
insl
cmp
mov
cs
xor
jbe
and
mov
mov
bound
jo
fs
jne
rorl
xorb
loop
jae
push
xchg
sbb
daa
push
xor
push
arpl
xchg
push
xor
dec
mov
push
jg
pop
shll
xchg
adc
sub
xor
jp
dec
loope
clc
es
jne
inc
lret
rorb
out
js
adc
shrl
pop
adcb
pop
inc
inc
ret
into
mov
les
xor
mov
test
add
fildl
ja
jle
cmp
nopl
repz
mov
cmp
shll
mov
outsb
xor
cld
mov
add
gs
or
inc
das
lahf
imul
cmp
fbstp
jo
mov
push
xlat
jp
outsl
jo
jns
add
orb
sub
addr16
xor
movsl
jo
sbb
pop
test
inc
sbb
dec
pop
outsl
fnsave
jge
imul
orl
stos
rorl
orl
cmpsl
inc
xor
and
push
mov
movsl
popa
rcrl
cltd
outsb
dec
cmp
push
imul
in
leave
ret
mov
orl
movsl
stc
xchg
flds
fwait
pop
adc
dec
fiadds
add
repz
add
pop
xchg
ret
lods
mov
fcom
dec
movsl
lds
push
js
add
imul
addr16
mov
push
mov
popf
adc
iret
dec
or
lods
pop
int3
mov
mov
repz
jbe
scas
dec
ror
sbb
sbb
sub
mov
sbb
push
mov
jge
dec
add
adc
popl
dec
shlb
jno
aad
mov
lock
aaa
add
fstpl
xchg
mov
inc
xor
aaa
jo
push
xor
push
sub
mov
or
jne
xor
fstps
push
lock
gs
insl
push
insb
xchg
push
push
js
cmpsl
push
sub
jae
mov
cmp
shll
push
mov
push
aas
sbb
pushf
das
jae
add
jg
mov
je
daa
push
pop
add
sub
adc
mov
mov
aaa
aam
or
dec
add
outsl
loop
movsb
inc
inc
dec
push
push
dec
xor
orl
dec
outsl
bound
imul
push
pop
push
cld
subb
inc
push
push
and
cs
sub
push
mov
fnstcw
and
arpl
loope
jae
add
das
xchg
add
icebp
pop
fisttpll
out
or
cmpsb
ret
stc
pop
test
arpl
pop
and
lods
pop
test
and
test
sbb
in
loope
icebp
push
mov
subl
push
push
dec
sbb
insb
scas
addr16
aas
outsb
mov
mov
pop
xchg
add
je
push
dec
nop
ja
dec
outsb
push
js
jo
data16
cli
or
and
lods
sti
clc
daa
lahf
add
inc
dec
push
dec
dec
dec
dec
and
jl
add
mov
pop
and
and
add
int3
push
sbb
xchg
ucomiss
in
test
pusha
push
jns
into
daa
sub
aas
pop
and
fcoms
sbb
push
mov
punpcklbw
sbb
aas
cmp
push
sub
sbb
pop
and
and
and
ret
fs
sub
jnp
pop
mov
push
push
push
or
inc
mov
push
push
dec
dec
inc
inc
pop
or
sub
sub
mov
lret
lcall
xor
and
test
into
mov
dec
mov
sarl
push
add
or
arpl
or
sti
push
xor
add
dec
pop
add
cmp
or
out
jb
jg
aas
sub
sbb
loopne
sub
addb
int
imul
loopne
mov
xlat
push
or
outsl
jg
popa
lods
jbe
out
ret
inc
fcomps
dec
push
loope
cmp
inc
outsb
lahf
out
add
inc
push
add
arpl
loope
inc
cmp
xchg
dec
jl
sbb
lods
fs
mov
jno
mov
adc
aad
add
add
daa
es
pop
dec
cmpl
cmp
pop
dec
mov
lret
and
pop
pop
mov
ret
jb
pusha
push
mov
test
outsl
jno
js
pop
push
mov
into
mov
out
icebp
cmovnp
add
and
aaa
pop
mov
frstpm(287
fildll
insb
pop
mov
inc
bound
and
bound
out
mov
and
cltd
cs
adc
mov
cmp
gs
movsb
pop
shll
cmp
jb
xor
jno
popa
icebp
mov
jp
lahf
cwtl
mov
dec
push
js
or
cmp
jno
lds
pop
jge
push
mov
adc
push
pop
test
insb
aas
pop
push
fldl
lret
pop
or
jb
add
gs
js
adc
popa
xor
jle
jb
outsb
jne
rcrb
iret
adc
jp
pop
xor
push
fsubrl
test
mov
push
dec
lds
add
movsb
std
loopne
pop
ss
add
rclb
pop
push
mov
cwtl
test
add
pop
pusha
push
push
push
das
aas
push
push
push
andl
and
mov
das
xor
mov
xchg
in
hlt
push
addb
xchg
xchg
pop
popa
dec
scas
fldenv
mov
pop
fs
pop
in
mov
add
push
pop
popa
add
popa
or
adc
mov
jg
inc
in
test
ja
setle
xor
and
fbld
scas
jle
cmp
xor
and
cs
xor
cmp
or
adc
add
add
inc
push
addr16
xchg
sarb
add
popa
cmp
loope
adc
dec
and
pop
addr16
mov
dec
dec
push
push
outsl
cltd
mov
stos
add
pop
lret
aas
or
xchg
pop
rolb
pop
scas
int
push
mov
adcb
enter
inc
orl
add
insl
sti
shlb
fs
cmp
mov
daa
xor
push
inc
pop
push
imul
sub
lock
movb
or
cmpsl
mov
add
dec
in
arpl
pusha
inc
pop
je
sbb
push
inc
jg
testl
xchg
xor
pop
sbb
ficomps
popa
sub
sbb
fcomps
flds
vmovups
fildll
ffreep
sub
fists
pop
xchg
sarl
dec
outsl
into
inc
add
das
fidivl
fbstp
inc
data16
lahf
ja
mov
push
daa
fistpll
mov
push
mov
repz
sbb
in
jl
imul
lock
dec
dec
sbb
dec
sub
enter
aas
ljmp
pop
fsubrl
daa
inc
inc
mov
mov
ret
jns
inc
lods
or
les
dec
dec
or
outsl
inc
out
push
dec
test
shll
out
xorl
insb
xchg
push
sub
and
inc
bts
or
and
inc
cmp
inc
scas
jp
or
dec
inc
popa
jge
push
dec
ficoml
jg
push
adc
and
fldcw
mov
xor
shll
nop
test
dec
or
das
bound
push
or
mov
shlb
fsubs
in
shl
incb
push
pop
test
mov
xor
fs
cmc
divl
pop
fistpl
push
rcrb
aas
aas
stos
les
mov
ja
dec
scas
shrl
cmpsl
sub
add
subb
inc
mov
dec
adc
aaa
adc
ss
cltd
sub
movsb
pop
les
aas
lcall
and
or
xor
dec
sub
addr16
adc
xor
packuswb
push
xchg
pop
or
test
mov
lods
arpl
movsl
pop
je
dec
mov
ss
xchg
mov
push
push
popa
popa
cli
xlat
aaa
hlt
aam
clc
insl
jae
das
inc
jns
aam
and
add
or
jo
popa
dec
adc
insb
insb
stos
inc
pop
push
rclb
lods
mov
push
and
or
outsb
pop
daa
xor
lds
nop
scas
cs
add
inc
pop
inc
mov
mov
or
imul
cltd
out
iret
imul
adc
dec
stc
ja
adc
subb
dec
repz
cmp
popa
popa
dec
xor
movsl
add
push
xor
inc
push
lret
popf
fimull
outsl
jb
out
jo
notl
inc
ss
xchg
andb
icebp
or
popa
and
mov
insl
push
and
dec
pop
sub
add
movl
pop
xchg
insl
xchg
mov
popa
mov
inc
es
stos
das
xor
mov
or
add
xchg
addr16
popa
addr16
xor
jae
lret
push
mov
neg
sub
or
adc
pusha
xor
jno
pusha
mov
xor
fcom
pop
adc
adc
ja
xor
xchg
imul
out
sbb
out
dec
sbb
enter
fnstsw
push
icebp
xchg
add
xchg
pop
push
jne
pusha
popf
les
fsubrs
mov
daa
inc
pop
adcl
sbb
add
cs
cmpsl
xchg
data16
sub
mov
stos
sub
adc
stos
outsb
hlt
add
sbb
jae
add
adc
sub
inc
mov
mov
movsl
lcall
dec
mov
xor
lods
xchg
push
dec
cmp
and
pop
cs
mov
or
jb
jo
sbb
add
or
rcll
push
adc
inc
cmp
loop
and
out
add
popa
push
inc
fdivs
dec
xchg
pop
jo
setne
lcall
cs
mov
jl
popa
jp
ficoms
mov
call
sub
jae
insb
jmp
js
inc
fdivl
push
adc
emms
xorb
inc
sarl
dec
andnps
inc
push
inc
or
sbb
push
and
mov
inc
mov
insl
xor
lret
sbb
popa
add
fcompl
notl
push
or
outsb
negl
mov
push
jecxz
jb
or
faddp
popa
ja
jns
arpl
popa
mov
sbb
popa
in
aas
push
xlat
out
cmp
xor
addr16
dec
dec
add
mov
mov
stos
cmpsl
pop
aaa
aam
lods
or
aaa
or
jno
jno
sbb
testl
push
push
adc
pop
notl
fldt
jno
pop
pusha
mov
aaa
ret
mov
lcall
or
jbe
sti
jns
outsl
mov
sarl
and
in
push
ja
dec
adc
xor
cmp
add
sbb
add
cmpsb
or
jno
sbb
sbb
xchg
in
dec
jecxz
arpl
rcll
popaw
xchg
fisubs
ret
in
jbe
or
push
shr
and
scas
inc
jo
add
sub
pop
shll
sbb
nop
pushl
inc
fsubrl
xor
es
cmp
imul
pop
jo
testl
out
pusha
daa
push
sahf
cmpsl
sbb
add
pop
pop
jno
insb
dec
loop
jne
mov
movsl
shr
pop
bnd
dec
pop
push
scas
das
int
pop
and
mov
add
test
xlat
mov
rorl
lea
cwtl
fadd
jae
js
add
aam
pop
add
add
stos
cwtl
cltd
fsubrs
sub
arpl
mull
jo
cmp
out
push
push
loopne
arpl
rorl
mov
fcomip
add
inc
fisubs
inc
das
add
add
xchg
ljmp
popf
movsb
adc
push
cmp
jbe
lods
das
divps
jo
loop
and
roll
xchg
je
ja
adc
dec
jne
push
outsl
inc
dec
mov
push
mov
aas
dec
insl
push
cmp
push
jg
mov
rclb
andl
ficoml
enter
mov
daa
push
push
arpl
enter
push
add
pop
roll
add
outsl
adc
push
mov
inc
push
outsl
sub
fadds
fcom
cmp
jle
outsb
mov
push
push
mov
out
jae
fidivs
std
sarl
xor
insl
andb
jbe
jbe
sub
dec
add
push
cmpsb
pop
scas
xorb
outsl
adc
test
add
mov
sub
mov
call
cmpsl
imul
mov
sbb
cmpsb
pop
inc
sub
insb
popa
and
inc
fistl
loopne
xchg
or
adc
sti
xor
pop
mov
add
and
std
insb
xchg
arpl
and
arpl
imull
xchg
fdivs
pop
jne
mov
xor
push
xchg
cmp
cmp
loop
mov
jae
incl
mov
push
dec
inc
push
push
inc
imul
hlt
push
inc
pop
dec
gs
stos
mov
xchg
push
add
xchg
pop
push
and
bound
dec
xor
adc
arpl
lock
sbb
jp
sub
push
lods
add
dec
adc
cmp
roll
xor
rcrl
pop
xor
andb
xor
pop
rorb
in
fnstenv
jae
ja
test
stos
je
pop
ja
adc
pop
shll
push
xchg
lret
pop
popa
aad
hlt
mov
loopne
scas
icebp
inc
dec
push
xor
rorb
movsl
ss
js
inc
cs
in
or
jle
add
into
mov
add
xchg
xchg
pop
inc
xchg
lret
mov
out
clc
ja
mov
adc
adc
sub
jg
aas
push
push
xor
mov
mov
aas
cmp
push
inc
push
stc
gs
cwtl
mov
push
pop
dec
outsl
imul
jns
xchg
pop
pop
mov
lcall
repnz
inc
inc
outsl
push
inc
or
fs
jae
mov
imul
adc
leave
das
sbb
lahf
into
mov
xchg
jle
out
fdivs
dec
pop
jg
fmuls
mov
mov
jae
inc
nop
lea
unpckhps
dec
adc
and
js
inc
loopne
insb
out
data16
and
cmp
cs
and
jbe
outsb
sub
imul
repz
outsb
stc
and
gs
and
fs
mov
mov
jmp
nop
enter
lods
mov
pop
sub
sub
rorb
or
dec
cmp
adc
lods
and
xchg
push
andl
jle
jle
je
loope
xchg
xor
inc
nop
push
jbe
movsb
jg
push
or
add
xlat
pop
mov
data16
sbb
push
fdivrl
mov
dec
inc
push
lahf
fsubl
lea
and
mov
push
addb
pop
xlat
add
push
dec
popf
mov
sbb
mov
inc
push
push
xchg
and
and
push
loop
sarl
arpl
lret
data16
xor
add
das
sub
sarb
iret
and
jae
je
dec
icebp
add
push
les
xor
mov
addb
addr16
push
cmp
dec
xor
push
mov
push
xor
mov
push
mov
out
and
push
mov
outsl
int
sbb
pop
cmp
or
and
or
ret
add
sbb
add
or
jo
adc
push
mov
lea
cmp
nop
mov
pop
jno
xchg
sbb
sub
and
or
addl
mov
pop
call
inc
dec
aas
shrb
xor
out
dec
rcr
inc
adc
inc
xor
addl
xor
sbb
in
sbb
cs
and
add
dec
xchg
sub
cmp
shll
inc
or
mov
or
xchg
das
dec
push
or
mov
mov
stc
lcall
and
inc
fiaddl
les
fsubrl
addb
adcl
jb
outsl
inc
data16
inc
popa
outsb
jns
int3
add
push
add
fisttps
dec
and
cmp
mov
xorl
jno
loopne
outsb
es
orb
cs
or
outsl
orb
jo
or
movsl
pop
xor
jne
cmp
xor
movsb
xchg
and
xchg
mov
lds
cmp
cmp
xchg
push
sub
dec
cld
mov
sbbb
xor
dec
dec
jp
clc
mov
dec
inc
add
xchg
sub
mov
push
cmp
into
xor
mov
aas
mov
inc
cmp
fsubp
inc
jne
sub
push
inc
lret
mov
push
add
adc
xchg
pop
dec
repnz
push
imul
sbb
scas
cmp
inc
sbb
or
add
aas
add
xchg
add
pop
int
bnd
xor
dec
inc
cmp
dec
push
xor
out
pop
mov
push
lahf
sub
and
jae
es
das
inc
add
adc
inc
dec
lcall
fsubs
xchg
mov
ds
push
lahf
xchg
mov
aaa
add
dec
pop
rorl
push
jg
fadds
mov
pop
sub
fstpl
pushl
inc
mov
xchg
das
out
out
and
rolb
cmp
sbb
dec
cltd
fs
out
adc
jo
or
mov
sub
sub
inc
mov
inc
mov
xchg
das
mov
daa
rclb
sbb
push
dec
push
mov
test
mov
pop
and
lahf
adc
xchg
rolb
push
sub
or
sub
sub
jmp
daa
into
jno
xor
js
insb
adc
xor
pop
lea
sbb
mov
dec
and
cs
test
jp
adc
inc
insb
ljmp
stos
incl
and
imull
dec
ss
add
or
lea
add
jg
cmpsl
add
and
js
pop
mov
inc
push
push
dec
push
mov
mov
sub
sub
mull
push
inc
cmp
jno
mov
or
mov
add
or
cmpsb
adc
jb
out
push
adc
dec
fisubrl
fsubl
es
das
adc
xchg
fldcw
xchg
inc
adc
cmpl
dec
adc
dec
sub
in
xor
jae
mov
test
add
xor
inc
fs
inc
sub
and
lds
add
rol
inc
js
sbb
test
daa
insl
icebp
fidivrl
adc
inc
add
pop
pop
out
cmp
add
add
movups
lahf
test
adc
add
cld
insl
aas
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
and
sub
pusha
push
add
js
or
sub
fsts
sbb
sub
add
dec
pusha
fdivr
push
or
push
sub
push
pop
data16
xchg
pop
push
push
cmp
pop
enter
push
dec
xchg
cs
cs
xor
aad
int
fisttps
xchg
pop
mov
fsubp
pop
jb
and
lods
cmp
rcrb
sub
sbb
fistpll
lock
or
jle
push
dec
andb
dec
jae
xor
jp
jmp
loope
inc
jnp
or
stos
inc
dec
push
mov
add
fs
and
mov
add
fs
push
nop
test
addl
test
addb
movsb
cmp
adc
inc
push
or
and
mov
decl
ss
jns
adc
aaa
add
dec
les
pop
add
add
fiaddl
stc
in
xchg
mov
push
push
lahf
fwait
mov
jns
pushf
jno
mov
mov
add
dec
push
push
sbb
mov
sbb
decb
xor
cmp
sub
inc
clc
xor
enter
mov
or
mov
imul
and
adc
push
flds
add
outsb
pop
or
mov
shll
or
test
mov
into
aam
mov
jp
push
ja
cmp
mov
stos
test
mov
aaa
outsb
mov
push
adc
pusha
jno
outsl
ss
xchg
cmpsl
jae
fs
push
jmp
lds
xor
ja
xorl
xchg
xor
mov
fisubl
or
les
mov
xchg
mov
push
gs
push
cmp
sbb
lea
xor
xchg
aaa
sub
inc
aaa
push
push
xor
scas
pop
das
cmp
pop
imul
ljmp
inc
cli
xor
adc
mov
push
push
add
iret
xorb
shll
xchg
dec
jno
and
inc
or
add
cmp
push
jae
xor
jno
push
adc
adc
xchg
push
imul
sbb
or
cld
push
jno
and
arpl
insl
cmp
dec
fildl
cmp
jo
daa
out
push
jb
fnstsw
outsl
int3
mov
push
outsl
aad
aaa
push
inc
and
lods
adc
sub
arpl
xor
cs
xchg
inc
lods
pop
adc
adc
or
js
and
loope
jnp
dec
jae
lret
in
loope
adc
scas
xor
push
test
or
add
inc
add
sub
stos
inc
sbb
xor
cmp
or
add
add
enter
sub
and
jecxz,pt
and
mov
sub
push
push
adc
push
push
lods
jo
cmp
inc
mov
mov
roll
jns
ds
dec
jmp
test
xchg
daa
pop
xchg
gs
xor
push
dec
outsb
xchg
mov
in
jae
cmove
das
dec
xorl
popa
pop
push
sub
xchg
lret
jnp
add
dec
adc
xchg
lods
xchg
stc
xor
jg
mov
pop
inc
push
cmp
bound
adc
orb
adc
cmp
inc
pop
mov
imul
push
mov
mov
outsb
je
out
inc
mov
dec
push
push
adc
mov
inc
dec
enter
ja
cmp
cmpb
imul
arpl
add
xchg
mov
cmc
xor
dec
fidivl
xor
movsl
leave
in
add
cmp
sub
addl
adc
stc
adc
mov
xor
adc
add
inc
nop
sub
leave
cmp
inc
adc
aaa
inc
jns
dec
sub
fs
jbe
push
out
fisubl
push
sbb
test
insb
jae
adc
xchg
adcb
insl
adc
xchg
das
addb
inc
push
add
int3
mov
out
add
test
mull
shlb
cs
pop
inc
sbb
or
xor
clc
in
in
aam
pop
inc
xchg
in
mov
jl
mov
shrb
sub
lock
in
fsubr
mov
xchg
adc
inc
sahf
sbb
jmp
jmp
fbld
sbb
lock
jbe
inc
xchg
ljmp
inc
in
jmp
sbb
pop
daa
xchg
sbb
call
nop
call
sbb
hlt
out
pop
ss
jnp
out
mov
out
xchg
js
inc
push
sbb
int
dec
lock
loopne
out
dec
lcall
fnstenvs
in
nop
mov
mov
mov
cwtl
mov
andb
xor
dec
inc
adc
jg
int3
or
mov
and
or
adc
pushl
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
decl
xor
sub
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
fistps
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
ljmp
loop
add
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pushl
mov
dec
adc
jnp
pop
pop
ret
xor
mov
incl
inc
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
decl
mov
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
lcall
call
stos
sub
int3
mov
aas
adc
jmp
out
mov
mov
lcall
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
pop
jg
cmp
call
data16
or
popa
xchg
test
lods
jl
xor
out
mov
test
add
fmull
mov
lds
shl
outsl
insl
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
mulb
or
lock
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
call
push
lock
sbb
add
data16
inc
sbbb
out
mov
incl
movsl
test
pop
mov
roll
lcall
inc
cmpsb
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
fwait
shl
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
ljmp
push
rolb
test
inc
ret
pop
arpl
sbb
push
aas
cld
call
jmp
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
mov
incl
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
mov
xor
movb
jns
sub
and
pop
sti
clc
jmp
xor
out
fists
jne
adc
push
push
das
stos
push
add
pop
xchg
std
dec
jnp
push
sbb
incl
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
decl
mov
pop
imul
mov
lock
mov
mov
dec
pop
sar
call
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
jmp
into
fcmove
and
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
xchg
imul
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
decl
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
incl
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
pop
ljmp
push
add
jae
xchg
ja
sbb
and
cmc
std
incl
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
ljmp
scas
loopne
push
fwait
ss
mov
arpl
decl
mov
js
push
pop
fldenv
mov
subl
jmp
sbb
adc
jae
lret
mov
test
push
sbb
cld
decl
in
fwait
mov
add
mov
mov
push
imul
repnz
lcall
and
mov
mov
jmp
lds
mov
mov
inc
dec
jmp
test
jo
dec
inc
sub
fildl
outsb
lods
jge
push
jmp
pushf
data16
jno
stos
in
call
lcall
mov
movsl
add
sbb
cld
fildll
dec
pop
inc
adc
cmp
in
cwtl
push
aas
gs
inc
pop
or
aas
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
dec
push
add
imul
out
mov
cmp
jo
imul
jae
ljmp
push
stos
sbb
pop
xchg
scas
fidivrs
inc
jge
mov
fidivrl
jg
jmp
add
pop
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
pushl
enter
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
xor
jns
xchg
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
jmp
aas
std
and
imul
xchg
test
fimull
je
lcall
mov
jmp
cli
sbb
or
ret
les
sbb
or
adc
sbb
incl
push
mov
mov
adc
xchg
push
fucom
cmp
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
jmp
or
repnz
sti
icebp
xchg
sub
mov
jo
jecxz
mov
aas
clc
ljmp
ljmp
ds
sbb
inc
cli
push
cmp
sub
sbb
decl
enter
leave
dec
cs
adc
ljmp
jmp
cmpsl
dec
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
add
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
clc
call
insb
mov
add
into
out
cmp
sub
outsb
pop
sub
pop
sub
fucomp
adc
int3
adc
xor
iret
arpl
incl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
push
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
and
sbb
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
ljmp
sub
out
mov
mov
cmc
push
arpl
sbb
ret
sbbl
inc
sbb
or
push
in
out
bnd
ljmp
jae
lcall
jl
fsts
pop
jecxz
fs
lods
and
stos
stos
mov
decl
fcmovnbe
dec
lret
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
incl
in
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
add
sbb
add
andb
lea
cmc
push
decl
hlt
lods
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
dec
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
cld
stos
add
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
decl
ficompl
inc
inc
jcxz
xor
jno,pt
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
aam
cs
push
and
aam
hlt
and
mov
mov
scas
std
jmp
push
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
hlt
lahf
pop
xor
or
insl
lods
jg
test
inc
daa
jmp
inc
cmp
push
out
and
stos
and
sub
fiaddl
ffreep
mov
sub
int
dec
xlat
movsb
rorb
out
lea
dec
mov
call
mov
hlt
jp
push
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
jmp
out
push
dec
cmc
xchg
mov
fsubrs
dec
mov
incl
test
xchg
sarb
adc
int3
xor
loope
push
dec
sub
stc
and
hlt
pop
jl
sub
jo
daa
add
adc
incl
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
lcall
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
fistps
cld
ljmp
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
lcall
mov
mov
cltd
or
jb
sub
mov
sar
xchg
mov
jmp
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
out
ljmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
imul
push
jnp
aaa
sub
aas
clc
insl
cmp
gs
rcr
or
add
xchg
mov
in
punpckhwd
lcall
fcmovne
or
xchg
mov
mov
adc
mov
cmp
incl
jmp
adc
xchg
loop
subb
inc
push
int3
decl
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
push
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
fs
lcall
xchg
mov
mov
fs
cmpb
jnp
pusha
dec
pusha
add
cmp
add
pushl
scas
inc
ja
cld
xlat
xor
xorl
lock
incl
add
push
mov
mov
popa
cs
mov
jmp
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
incl
push
loop
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
rolb
test
sahf
test
jg
or
test
xor
les
pop
pop
call
mov
cltd
dec
adc
outsb
sbb
fbld
mov
sbb
fdivr
incb
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
aas
ja
dec
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
mov
cmp
xchg
ffree
push
xor
ret
cmc
mov
mov
sbb
dec
or
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
call
js
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
jg
test
out
aad
les
push
into
mov
fnsave
lcall
call
loopne
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
dec
inc
daa
adc
fwait
mov
aad
jae
mov
jnp
add
imul
mov
lcall
cmp
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
clc
decl
push
jge
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
jg
aad
mov
loop
out
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
jg
cli
shl
pushf
mov
fwait
push
adc
fs
stc
mov
cmpsl
xchg
out
shr
das
call
imul
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
pushl
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
repnz
adc
pop
jno
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
inc
inc
shr
int3
push
cmp
sub
clc
sub
adc
add
pusha
jne
inc
push
xchg
idiv
out
decl
add
mov
lock
nop
cmp
sbb
lahf
jmp
xchg
sub
cmp
cmc
and
sti
stos
cmc
sbb
fdivrl
incl
clc
fnstenv
jne
std
mov
xor
add
ja
sub
ret
clc
jmp
int3
stos
pop
xchg
lods
int3
push
pop
call
bound
aaa
xchg
stc
and
ljmp
and
mov
mov
inc
cmp
fimuls
out
adc
scas
clc
jmp
std
sub
pop
or
inc
lcall
fisubrs
enter
incl
icebp
mov
sbb
ror
mov
push
jmp
push
cmp
ds
mov
test
ljmp
adc
inc
outsl
jmp
cmp
arpl
fwait
rcrb
ljmp
lea
pop
out
call
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
arpl
sub
incl
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
jmp
pusha
adc
out
jns
mov
cmp
push
mov
xor
dec
mov
sbb
not
mov
stos
call
sbb
sarb
cmp
or
sub
cmp
addr16
jl
stc
lea
mov
mov
sahf
notl
lcall
std
aad
inc
fldenv
sub
xchg
xchg
cld
out
jno
xchg
adc
decl
pushf
mov
pop
fs
shrl
shll
push
sar
jg
adc
add
push
icebp
loopne
fistpl
dec
fs
pop
lahf
fists
shl
sub
rcrl
bnd
inc
je
mov
jno
jbe
lcall
lahf
xor
fwait
aaa
or
sbb
fimull
fcomp
push
iret
jns
into
ljmp
ds
mov
push
add
rorb
notb
and
and
cmpsb
xor
incl
int
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
call
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
push
sarb
jno
add
push
lret
mov
pushf
jbe
sarb
push
call
inc
push
pusha
mov
inc
and
jbe
inc
test
ljmp
and
lret
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
jmp
jmp
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
fisttps
std
jb
cmp
repnz
insl
or
adc
in
mov
rclb
add
mov
mov
lcall
inc
ss
mov
lahf
call
dec
pusha
add
add
add
add
lods
testb
and
std
int3
addr16
jg
dec
mov
pusha
pop
or
cld
mov
xchg
adcb
adc
outsb
jb
or
mov
sub
inc
addr16
fistpll
mov
push
aas
inc
add
push
add
jg
add
xor
sub
add
push
outsl
sti
fs
fdivrs
daa
pop
les
int
mov
mov
pop
ds
and
xor
and
lods
stos
gs
cmpsb
lock
mov
nop
add
and
xchg
scas
fadds
jp
push
dec
mov
and
add
dec
pop
data16
or
adc
decl
loopne
sbb
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
xchg
fistl
scas
xor
xor
mov
sbb
punpcklbw
out
sbb
inc
xor
cmp
add
jmp
mov
jp
add
data16
outsb
fimull
ss
fcomp
or
or
insl
add
loopne
dec
adc
cs
shl
mov
pop
and
and
std
or
xor
add
xor
or
add
outsb
dec
xor
mov
testl
call
dec
add
pop
pop
out
xor
int3
loopne
jg
xchg
add
cmp
push
fstpl
outsl
dec
pop
xor
inc
cmpl
add
js
jb
out
add
arpl
jmp
nop
mov
cmp
pop
subb
xor
aam
inc
or
dec
dec
add
xchg
add
repz
rcll
adc
mov
call
mov
ja
mov
cmovno
cld
ja
cmp
xchg
xor
aam
sub
xor
imul
and
sbb
dec
shll
add
lcall
hlt
lock
imul
imul
imul
cmpsb
imul
xchg
nop
mov
lcall
imul
imul
sub
add
std
hlt
lock
xor
rol
mov
shrl
shll
pop
dec
xor
shll
cmp
sub
dec
xor
adc
fdivrp
cld
push
in
in
dec
shll
aam
shlb
cwtl
nop
mov
xor
cmpb
pop
dec
xor
shll
cmp
sub
fnstenv
add
sti
cmpsb
imul
imul
cmpsb
imul
push
dec
inc
xor
int
imul
dec
shll
fcom
enter
dec
shll
shll
fs
xor
shll
dec
inc
cmp
shll
adc
cmpsb
imul
cmpsb
imul
cmpsb
imul
pusha
pop
pop
push
dec
lcall
xor
and
fwait
cmpsb
imul
clc
mov
lcall
fwait
xchg
data16
cmpsb
out
and
loopne
iret
cmpsl
xor
sub
mov
popf
push
ss
es
enter
imul
mov
insl
fwait
cmpsb
imul
in
adc
mov
cmpsb
imul
nop
pop
movsb
sub
or
pop
sbb
push
pop
mov
cmpsb
imul
cmpsb
imul
mov
hlt
imul
in
fmul
inc
sub
aam
add
lcall
cmpb
adc
add
daa
cld
mov
mov
push
xchg
lret
adc
aas
jne
or
mov
sbb
stos
jns
imul
adc
icebp
mov
or
pop
xchg
iret
jmp
add
cltd
std
cmp
or
fsts
adc
xchg
adc
popf
shlb
jnp
icebp
stos
stos
inc
fdivrp
xchg
scas
out
ljmp
jno
sbb
jne
mov
fisttps
cwtl
bswap
icebp
cwtl
or
mov
add
add
out
inc
icebp
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
sbb
in
shl
cli
decl
test
movsl
mov
jnp
pop
fnstsw
mov
or
mov
adc
int
enter
sti
add
cwtl
pop
out
test
data16
ljmp
test
fsubl
lcall
insb
stos
push
rcr
xor
lcall
daa
mov
push
xchg
lcall
in
jle
adc
mov
xchg
cmpl
rclb
test
fwait
push
xor
rcrb
lock
jg
pop
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
je
mov
fdivp
adc
stc
jle
pop
loopne
pop
dec
sub
movsb
jns
or
lret
test
inc
adc
xor
jmp
push
out
bound
xlat
lea
adc
shrb
stc
decl
cmp
popf
fdivrl
rol
adc
pop
dec
js
pop
out
in
or
dec
xchg
sbb
adc
das
mov
pop
sbb
adc
lcall
sbb
ret
iret
repz
and
jo
push
repz
sub
pop
sahf
repnz
mov
adc
popf
stc
into
lret
xor
mov
std
fstl
insl
cmp
pop
jnp
adc
mov
iret
mov
pop
fbstp
sub
or
push
sub
in
lret
jge
sbb
enter
ret
ljmp
pop
scas
xchg
ja
mov
in
leave
jmp
cli
fdivr
std
jmp
outsl
idiv
cld
ljmp
cld
and
fcomps
insl
std
out
mov
lods
aad
or
lock
jmp
jmp
das
das
mov
fmul
push
repnz
in
sti
lock
jle
cmc
lock
jmp
ljmp
cltd
add
inc
jb
pop
aaa
hlt
push
enter
bound
add
mov
add
and
and
inc
shll
in
mov
add
lods
jg
pop
dec
push
dec
movsb
fs
xor
xor
dec
inc
xor
gs
stc
fistps
push
and
xor
push
jae
aad
xor
adc
ljmp
xchg
mov
icebp
push
pop
or
add
add
bnd
jae
icebp
cmp
add
and
outsl
inc
pop
jecxz
inc
xor
sahf
adc
mov
cltd
fs
lahf
add
inc
inc
inc
cmovo
sub
push
sbb
adc
add
jmp
dec
add
push
repnz
sbb
scas
xor
lret
adc
xor
pop
mov
ret
inc
xor
lods
push
ret
push
add
push
jbe
or
out
xor
add
push
fs
mov
jge
repnz
add
sub
sub
mov
mov
add
fbstp
add
push
insb
mov
sbb
pushf
and
dec
adc
fiaddl
es
mov
sarl
inc
cmovo
adc
outsl
mov
in
jg
sub
cmp
rclb
fwait
test
rorb
cmc
add
or
pusha
mov
and
decl
or
mov
or
in
add
setne
scas
jl
inc
fisttpll
xchg
lock
mov
add
adc
pushf
inc
sahf
clc
das
decb
adc
sub
pop
inc
xor
aaa
sub
out
push
add
adc
lods
or
push
psubusb
add
repnz
test
test
xchg
str
or
add
test
insb
jp
lcall
xchg
mov
popf
lods
rcrl
and
imul
add
add
outsb
xor
pop
and
sub
decb
mov
add
imul
and
popa
and
pop
jnp
ja
adc
rorl
mov
adc
pop
push
push
xor
add
adc
xorb
pop
dec
repz
pop
cmp
inc
add
sub
dec
xor
sbb
or
xor
jb
cld
adc
adc
in
in
xor
int3
add
cmpsb
sub
andb
or
iret
pshufw
xor
pusha
pop
push
dec
or
enter
xor
enter
and
enter
adc
add
cmp
clc
and
call
loopne
ror
sbb
sarb
test
xchg
nop
inc
push
sbb
sbb
je
inc
push
sbb
imul
leave
lods
pop
out
push
xchg
sbb
das
jns
sahf
cmp
shll
inc
iret
pop
pop
mov
jns
push
jbe
jo
xor
jbe
dec
das
data16
push
ja,pn
outsl
cld
lcall
xor
jns
inc
xor
xor
das
dec
jae
pop
xor
je
addr16
xor
lahf
std
inc
mov
dec
inc
pop
push
push
jbe,pn
push
inc
inc
push
fnstcw
pop
js
insl
push
aas
insb
fs
dec
jae
jno
xor
push
push
push
xor
sti
pushl
pop
outsl
cmp
jbe
dec
dec
xor
cmpsb
pop
jbe
inc
inc
xor
cmp
inc
jae
ret
push
das
cmp
push
xor
dec
inc
xor
pop
push
fisttpll
push
inc
arpl
test
cltd
ds
jb
inc
cs
pop
cmp
xor
dec
cs
inc
gs
aad
rcll
decl
xor
inc
cs
pop
jae
imul
push
jno
lcall
cld
xor
arpl
jns
jbe
push
push
gs
push
out
lock
ljmp
addr16
das
fs
push
push
inc
ja
insl
dec
arpl
imul
inc
jg
push
popa
inc
push
inc
xor
imul
inc
jle,pn
out
cmovne
push
jg
dec
das
ja
lret
push
cmp
inc
iret
push
insl
xor
adc
push
pop
xor
inc
push
ss
pop
xor
addr16
aas
cld
jg
fs
aaa
dec
push
jno
jb
inc
arpl
insl
cs
imul
pushl
inc
inc
outsb
das
xor
jp
jne
jno
addr16
pusha
daa
dec
aaa
push
iret
lahf
sti
dec
xor
imul
xor
cs
ss
push
cs
jbe
loope
aaa
dec
xor
xor
xor
jns
outsl
dec
jns
inc
aas
push
js
xor
lock
mov
in
ja
jns
push
dec
cmp
xor
mov
push
je
int
js
jae
das
aaa
pop
gs
out
add
sbb
mov
lcall
insl
insb
mov
dec
push
push
push
dec
or
mov
dec
cmp
xor
sub
xor
mov
or
hlt
sub
in
shll
les
test
cwtl
nop
mov
jo
push
pop
push
inc
cmp
dec
shll
or
shll
push
in
in
mov
ss
aam
int3
push
les
sarb
xor
shll
nop
mov
je
fs
push
loopne
xor
dec
cmp
sub
inc
lcall
sbb
or
xor
mov
hlt
es
ror
shll
nop
mov
xor
test
xor
shll
push
dec
inc
inc
shll
and
xor
ss
adc
clc
and
lcallw
mov
and
imul
mov
xchg
mov
test
or
sbb
xor
pop
pusha
les
push
insl
xor
push
sub
popa
xchg
and
decl
mov
add
fdivr
push
fisttpl
inc
loop
das
mov
cmc
xchg
dec
or
add
js
out
mov
fldl
or
or
xor
mov
aaa
incl
mov
mov
add
add
mov
mov
add
pop
mov
push
and
adc
out
push
rolb
xor
jb
adc
ret
decl
pop
mov
xlat
add
add
push
call
add
and
push
xor
das
sub
adc
jne
ret
call
push
pop
cwtl
in
dec
incl
inc
inc
pop
pop
pop
push
sub
repz
lea
mov
rep
out
insl
add
mov
stos
push
push
push
push
push
or
cld
xchg
mov
test
ret
outsl
push
jo
decl
shl
jmp
aas
xchg
push
cmpsl
mov
pop
cmp
inc
loop
aas
bound
jae
cwtl
sub
orb
push
addr16
inc
inc
push
cmp
fmull
jno
adc
and
mov
jo
popa
mov
and
fisubrl
cltd
pop
das
popa
adc
lds
sbb
mov
cmpb
push
loop
sti
aaa
adc
push
pop
je
jne
xor
pop
sbb
std
sti
mov
jl
mov
imul
fcmovb
subl
in
jle
jg
cld
mov
sbb
call
jmp
ret
je
data16
or
jl
dec
outsl
inc
and
pop
pusha
mov
stc
jns
idivb
ficompl
jne
fisubrl
mov
xchg
mov
js
jp
cmp
inc
xor
ficompl
aad
inc
movb
xchg
add
push
mov
data16
jg
sub
shr
aam
jmp
mov
pop
xchg
subb
fs
out
lret
xlat
in
movsb
call
pop
push
xlat
push
in
in
pop
imul
fistpl
js
xor
mov
jg
pop
add
aas
bound
shlb
nop
fwait
jp
lret
lret
lcall
fwait
and
shr
arpl
ljmp
mov
int
mov
or
out
mov
and
pop
cmpb
in
mov
das
iret
cmp
xlat
cmp
call
mov
cmpb
nop
sub
ret
pop
mov
xor
test
jmp
in
rorl
fisubrs
andl
leave
xor
orl
std
jl
repnz
jo
xchg
js
shrb
inc
mov
call
hlt
mov
pop
test
push
imul
lret
scas
das
mov
cld
shl
cmp
jne
pop
jae
daa
ss
push
dec
inc
add
pop
ljmp
push
cmpsl
cld
push
inc
in
xor
or
xchg
xchg
xor
mov
les
add
push
add
add
sub
mov
fs
jbe
sti
pop
out
or
mov
aaa
or
mov
daa
adc
adc
in
and
and
das
xchg
push
mov
xor
ret
das
insl
push
and
and
ss
jb
pop
andb
fdivs
addl
sub
inc
movsb
fbld
inc
aas
into
aas
xlat
pop
sbb
cwtl
sbb
sahf
sbb
sbb
cs
imul
push
add
es
scas
dec
cmpb
stos
jo
mov
insl
in
daa
sbbl
cmp
mov
decb
sbb
pop
inc
test
filds
mov
iret
mov
in
call
cmp
mov
ficompl
mov
xor
in
sub
fcomp
loopne
jae
jle
xor
pop
loope
pop
scas
push
xchg
or
pop
hlt
ret
pop
scas
movsb
push
adc
adc
and
xor
mov
in
pop
sbb
sbb
push
sbb
sbb
lret
mov
push
jns
jp
repz
in
pop
cld
or
incl
fidivrl
pop
jg
add
sbb
add
nop
add
nop
xchg
xchg
xchg
mov
sub
add
pop
mov
and
je
inc
rorl
imul
movl
call
pop
andb
inc
xchg
add
sbbl
in
push
add
enter
xchg
cmp
xchg
inc
pushf
or
ret
mov
inc
jle
hlt
adc
mov
lahf
jg
mov
mov
ret
inc
and
sahf
mov
sub
jmp
imul
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
sti
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lcall
cmc
rclb
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
addr16
fldl
xchg
and
and
push
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
inc
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
mov
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
clc
fmull
call
cmp
aaa
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
inc
ficomps
frstor
xor
xchg
mov
push
and
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
push
add
fnstcw
rclb
sub
gs
pop
dec
push
inc
and
inc
popa
sbb
rolb
inc
sub
or
and
sbb
pop
push
add
push
jo
outsb
dec
testb
outsl
and
sbb
pop
outsb
sbb
add
gs
imul
inc
dec
pop
inc
sbb
jb
outsb
fildl
jns
mov
loopne
sbb
adc
imul
add
mov
dec
add
add
inc
jns
pop
aaa
fxtract
push
imul
and
dec
rorl
jo
cmp
and
xchg
jge
xor
adc
xor
lret
test
in
mov
pop
or
sub
mov
add
rclb
inc
enter
int3
adc
inc
popa
je
je
imul
xor
test
pusha
mov
xchg
cmpsl
inc
dec
subb
pop
in
xchg
jo
orl
enter
mov
mov
push
outsb
or
bound
cld
out
daa
repz
imul
sbb
aas
xor
addr16
mov
jo
inc
int
mov
sbbb
lock
rorl
mov
sbb
popa
jno
and
xchg
dec
dec
arpl
sbb
adc
or
inc
and
sbb
fistps
leave
lahf
dec
inc
push
lret
orb
push
mov
stos
stc
push
dec
pop
cmp
js
scas
test
cld
or
xchg
and
add
mov
cmpl
dec
add
jo
xor
cmpsb
xchg
cmpsb
sbb
popa
fcoms
inc
inc
jno
or
js
orl
lcall
add
mov
mov
mov
and
testl
jne
jg
jae
mov
addl
loopne
push
dec
push
shr
shlb
ret
add
sub
adc
adc
les
add
fcoms
fidivl
mov
mov
fs
mov
pusha
xchg
sbb
pop
inc
push
add
sub
sbb
dec
sbb
cmp
add
inc
test
sub
aam
xor
xchg
pop
inc
sub
fildl
inc
dec
sbb
lods
add
fistl
in
mov
rcrl
push
je
ja
xor
add
jmp
inc
jae
movsb
jmp
jecxz
mov
xor
outsb
push
mov
or
xorl
sbb
sti
inc
std
dec
inc
bound
test
jmp
sbb
sbb
pop
inc
popf
ret
leave
or
jns
inc
or
rcrb
cltd
dec
add
add
pop
jecxz
flds
aaa
mov
or
fcmovne
out
cmpsb
mov
ja
jo
je
inc
daa
mov
sub
sarl
adc
lret
add
sub
mov
adc
or
scas
sub
mov
add
pop
inc
or
add
sub
sti
outsl
idivb
or
loopne
sidtl
add
mov
mov
mov
jo
pop
add
push
imul
movsl
sbb
adc
aad
neg
or
pusha
bound
add
push
repnz
mov
or
add
cs
scas
mov
lret
mov
and
jb
fmuls
testl
cs
dec
fsubs
add
mov
pop
add
ja
add
fs
cmp
pop
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
