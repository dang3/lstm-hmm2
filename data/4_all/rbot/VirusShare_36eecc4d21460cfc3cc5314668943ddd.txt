and
pop
mov
push
and
adc
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
sub
mov
xor
mov
jmp
mov
sbb
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sbb
mov
dec
or
dec
loopne
sarl
xchg
enter
jmp
mov
sbb
cwtl
dec
es
enter
mov
mov
cld
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
inc
scas
and
loope
mov
out
out
and
out
adc
cli
mov
xchg
xchg
mov
test
mov
je
jae
cmp
mov
test
and
lret
loopne
add
insl
imul
stos
add
out
and
loope
lock
in
pop
and
in
dec
pop
in
jecxz
clc
add
dec
add
ud0
lds
sbbb
repz
push
add
or
or
mov
je
mov
enter
add
and
adc
xor
call
lcall
or
aad
jmp
jge
push
mov
add
lods
out
add
sub
fcmovb
inc
fcoms
mov
sbbb
repz
call
inc
jmp
fsubl
call
inc
or
add
sub
lea
inc
orb
sbb
lea
add
ret
mov
inc
mov
push
add
jecxz
daa
sub
add
mov
mov
stos
aaa
andps
ror
invd
dec
cmp
add
and
bound
mov
mov
shl
pop
fsubr
inc
cld
mov
lods
enter
lds
mov
jge
or
jg
clc
or
enter
push
hlt
test
dec
rcll
shl
add
xchg
sub
xor
mov
cmp
jb
ret
or
ja
shr
out
and
popa
addr16
push
cmc
hlt
ret
or
adc
sbb
or
and
and
pop
lock
hlt
cmpl
jb
mov
shlb
fs
es
sbb
jbe
mov
cld
jb
sbb
or
mov
mov
cmova
cli
mov
add
sub
jbe
add
push
push
gs
std
pop
jae
es
pop
addr16
fisubrl
ret
adc
or
cmp
and
out
dec
icebp
add
push
or
cmp
xor
cmpl
pop
jbe
lock
sarl
cmp
inc
push
jne
cs
gs
push
push
push
test
lds
inc
push
test
inc
sub
push
lods
incl
and
sbb
xor
enter
mov
add
jg
int3
dec
inc
addr16
cmc
jmp
les
dec
and
mov
stos
pop
test
pop
sub
push
xor
push
mov
xchg
inc
cmp
imul
pop
les
mov
xchg
sbb
pop
andl
call
into
pop
mov
pop
addr16
ficompl
loop
add
popf
pop
lcall
xchg
stos
aaa
add
imul
lret
jno
jmp
lods
jp
pop
jge
xor
and
scas
lret
add
rcrl
and
in
xor
mov
and
shl
and
pop
jge
gs
movsl
xadd
jne
xchg
add
mov
shll
icebp
cmovns
add
ret
adc
rcr
adc
and
call
cmp
addr16
cmp
jmp
arpl
pop
pop
adc
addl
mov
shll
add
jg
xor
pop
mov
int
lock
mov
adc
ljmp
jle
jg
stc
test
daa
xor
inc
mov
mov
aas
add
out
lock
push
mov
jp
xchg
jnp
push
and
pop
jo
cmp
mov
cs
lret
pop
mov
stos
lock
notl
cmp
or
xchg
std
pop
mov
lahf
or
in
pop
cmpsb
add
fistps
add
mov
add
and
fs
pop
xor
pop
pusha
xchg
stc
dec
rorb
cmc
pop
mov
inc
pop
xor
mov
or
arpl
xchg
pop
mov
sub
sbbl
push
andl
xchg
jne
mov
loop
cmc
push
arpl
mov
sbb
pop
jecxz
sbb
or
popf
add
push
add
out
add
or
sti
ss
push
loope
xor
out
fsubs
mov
jo
fs
adc
xlat
jl
adc
xchg
fadds
mov
add
xor
leave
dec
out
mov
push
pop
pop
jmp
fidivrs
adc
xor
arpl
js
ret
add
jnp
push
lahf
jg
movsb
inc
dec
addr16
repz
negl
inc
cmpsb
fldt
jns
aam
pop
sbb
shl
call
mov
sub
nop
cmp
and
lret
loope
push
or
or
jp
fwait
out
push
cmp
cmc
or
mov
adc
add
insb
add
sbb
ljmp
dec
pop
rolb
push
mov
sbb
pusha
or
adc
out
clc
inc
enter
inc
cld
fidivrs
pop
call
out
out
imul
arpl
es
jae
rol
xor
or
and
imul
add
xor
and
add
sub
push
add
sbb
addb
push
dec
xchg
sub
add
jnp
sbb
push
add
stc
sti
push
or
xchg
iret
mov
lea
popa
cmpsl
in
mov
pusha
and
dec
int3
fisttps
pop
add
mov
cmpb
loope
mov
adc
inc
pop
nop
clc
outsb
pop
jl
ja
push
imul
insl
loopne
cltd
sub
add
jmp
cld
sbb
jg
inc
or
and
inc
testl
in
popa
pop
jns
sbb
push
push
std
push
jae
fldl
xor
add
in
flds
add
sub
sub
add
pushf
add
cmp
call
inc
xchg
mov
loopne
push
jl
add
rclb
add
int3
jbe
mov
dec
lds
cmp
enter
add
xor
mov
int
add
outsb
xchg
js
addl
lcall
cmp
outsl
dec
ljmp
cmpsl
push
ss
push
and
fadds
je
gs
rolb
daa
inc
movsb
aas
and
adc
add
hlt
pop
mulb
mov
test
xchg
sub
ret
cbtw
leave
dec
add
jo
xchg
and
or
mov
clc
cwtl
mov
mov
jmp
push
xchg
mov
bound
pop
xchg
jle
xchg
in
add
pusha
or
icebp
dec
dec
or
push
jge
adc
je
pusha
push
push
dec
add
jne
adc
pop
and
clc
or
mov
subb
pop
xlat
mov
xchg
insb
mov
aam
mov
shlb
or
fidivrl
pusha
cmpb
movsb
inc
decb
xorb
or
cld
inc
add
add
rclb
xchg
cmc
xchg
cmp
mov
xchg
sbb
cmp
outsl
push
push
imul
push
xchg
mov
lods
adc
mov
pop
mov
fdivrs
outsl
cmp
outsb
stos
inc
mov
jl
sub
jo
dec
jp
addr16
ss
pop
in
push
mov
sbb
das
dec
and
mov
push
mov
add
cmp
fmull
and
fstpl
or
fwait
cmp
inc
add
sub
movsl
mov
inc
test
mov
ljmp
mov
or
push
jg
nop
fcompl
sti
cld
lds
dec
adc
cmp
rclb
xlat
cmpsb
push
pusha
roll
mov
fadds
rolb
aam
add
ljmp
push
rclb
mov
test
push
add
mov
push
xchg
mov
add
out
jno
mov
fiaddl
std
test
add
add
push
or
scas
adc
jg
fdivl
jnp
and
ret
stos
or
or
mov
mov
cmpsl
lods
shll
push
sub
and
loopne
inc
push
popa
out
jecxz
xor
add
clc
mov
test
insb
test
icebp
push
adc
or
data16
mov
fildll
and
mov
pop
fcoms
push
xchg
cmp
imul
jg
cwtl
push
loope
stc
xor
pop
orb
data16
cld
xchg
imul
call
cwtl
pop
add
test
inc
or
lea
add
sbb
movsl
xorl
push
stos
or
jg
add
movsb
dec
int3
xor
out
pushf
and
rorl
or
cmp
xor
dec
adc
push
imul
movsb
or
cmpsl
xor
shrl
jle
add
mov
mov
nop
push
or
xor
stos
mov
mov
in
cmpsl
and
xor
cmp
xor
sub
sub
dec
inc
cmc
andl
andl
or
das
jg
pop
aas
pusha
cmp
sbb
xchg
sub
imul
pop
js
in
jae
adc
adc
out
add
pop
hlt
push
out
cmpsb
and
pop
push
sbb
sub
test
adc
sbb
out
es
pop
sbb
fdiv
ja
mov
inc
push
lods
or
fistpll
sahf
mov
dec
sbb
mov
negb
js
lods
cmp
in
cs
add
jb
mov
lods
sbb
loopne
add
mov
adc
adc
add
or
out
popa
shlb
pop
ja
sbb
xchg
pop
cmp
cwtl
popl
lock
jle
cld
lds
mov
js
orb
clc
pop
add
dec
aas
sbb
les
cmc
stc
bound
xchg
fwait
add
adc
stos
add
ja
inc
loope
jge
add
cmp
cltd
loop
das
add
nop
ljmp
xchg
cmp
les
sti
cwtl
repz
dec
push
jl
test
add
fdivrs
add
or
xor
adc
dec
mov
orl
aad
push
out
pop
or
pop
mov
lcall
add
xor
push
mov
push
adc
movsl
int
cmc
dec
incb
xchg
add
xlat
nop
test
sysret
sbb
repz
in
mov
cmp
daa
out
ret
fidivs
testb
jo
sahf
sbb
mov
wrmsr
jne
mov
jle
cmp
add
test
subl
sarb
add
mov
sbb
or
fmull
sub
sub
js
adc
dec
add
push
jo
push
mov
or
jns
outsl
ja
aam
push
push
enter
pop
int
or
and
imul
std
ss
jne
call
hlt
test
fiaddl
stos
mov
xor
fadds
xchg
test
imul
add
mov
mov
xor
mov
pop
xchg
in
int
xchg
fucom
test
shr
rorl
and
add
cwtl
add
nop
sub
xchg
jle
pop
rorl
xchg
inc
into
cmp
push
adc
mov
xor
js
rclb
mov
cwtl
mov
pop
jbe
cwtl
push
filds
or
call
out
or
movsb
subb
mov
and
pop
or
or
sarb
cmp
push
push
or
dec
mov
je
lods
cmp
add
out
push
movsb
cmp
fists
cmp
test
adc
sbb
popa
js
int3
int3
test
inc
add
xchg
push
mov
inc
vmulss
loop
in
ror
and
add
aad
test
test
jno
popa
xchg
xchg
test
or
lret
testl
cmp
daa
mov
in
dec
cwtl
and
jo
stos
add
idivb
inc
add
cmc
mov
mov
rorl
ljmp
jbe
test
punpckhdq
mov
mov
sarb
or
xorb
jnp
popa
lahf
mov
and
add
mov
scas
rcr
mov
insb
cs
scas
add
and
addr16
add
cli
mov
push
dec
inc
push
addl
adc
pop
fldt
adc
mov
add
mov
sub
adcb
sti
jge
lds
sub
scas
aam
add
mov
and
mov
adc
mov
add
and
sbb
push
push
fimull
int3
lahf
push
rolb
outsb
mov
sbb
add
addr16
outsl
sbb
pusha
add
mov
ret
movb
xchg
ret
pop
add
and
jae
in
mov
rolb
aam
push
add
jmp
or
mov
int3
cmp
xchg
pop
je
sarb
or
loopne
mov
jno
add
push
adc
lock
mulb
notb
mov
mov
adc
nop
pop
sbb
mov
xor
outsl
add
pop
rorb
push
fwait
sbb
lds
pop
inc
add
adc
mov
add
std
fwait
stos
jo
add
inc
dec
adc
prefetchnta
dec
add
and
imul
push
clc
adc
add
lcall
mov
cmp
lods
or
ds
mov
mov
dec
jbe
cmp
dec
jp
rcrl
pusha
adc
movsb
leave
push
shrb
fs
pop
or
push
pop
add
or
xchg
add
and
add
or
inc
mov
pop
add
notb
sbb
cmc
pop
movsb
ret
clc
pop
push
je
pop
or
xchg
scas
and
lods
fstl
inc
popa
sbb
or
test
push
das
pushf
loopne
aaa
sahf
add
clc
repnz
add
sub
add
push
mov
push
cmc
sub
jle
mov
mov
lret
into
clc
fistpl
cltd
pop
sub
inc
or
mov
mov
lcall
add
jle
cmp
es
adc
lods
add
cmc
dec
add
aad
sbb
sbb
enter
push
jnp
insl
test
lock
cli
addl
setno
ja
pusha
insl
jnp
inc
repnz
push
stc
cs
mov
push
xchg
int
loopne
add
xchg
dec
mov
add
sub
mov
dec
dec
xor
push
mov
fisttps
subl
add
aas
dec
add
cmp
or
sbb
shlb
sbb
rcrb
fs
in
or
add
mov
add
pop
jnp
adc
adc
add
daa
inc
lock
rcrb
add
ud1
test
pusha
push
mov
adc
lea
in
mov
sbb
mov
outsb
nop
jl
push
in
or
push
pop
icebp
inc
mov
fldcw
mov
xchg
pusha
or
mov
aas
pop
jp
mov
insl
mov
dec
fldcw
add
div
in
movsl
outsb
sarl
pop
add
jo
mov
shrb
xchg
es
and
adc
ja
adc
in
js
rolb
repnz
add
fistpl
mov
jl
divb
inc
hlt
adc
cld
movsb
add
sbb
mov
add
fadd
shl
rclb
cltd
add
dec
pop
or
je
movsb
add
fbld
push
add
stc
jbe
mov
sub
andb
out
jns
or
push
out
icebp
push
mov
pop
test
dec
pusha
pop
mov
mov
in
mov
push
nop
stos
pop
sbb
in
push
outsb
xor
add
ret
jno
test
shlb
leave
cltd
jo
add
xchg
add
mov
js
rcrb
add
push
add
insl
add
inc
pusha
popa
mov
pop
jo
pop
add
sub
push
add
sub
or
mov
shll
pop
rorl
add
jo
jmp
or
sar
cltd
add
test
push
adc
mov
jae
add
out
faddl
pusha
fisubl
cmp
jo
add
push
push
into
ja
push
jg
aas
lahf
pcmpeqw
sub
pop
and
clc
and
push
add
cs
jg
dec
fadds
xchg
cmp
xchg
sbb
cmpsl
or
pop
enter
and
or
jne
xor
je
and
push
add
addb
add
les
dec
mov
push
les
add
fwait
inc
xchg
add
insl
lods
inc
push
add
fidivrl
aam
sbb
sub
lret
xchg
jle
in
adc
bound
dec
push
shrl
and
lcall
sbb
movsl
hlt
add
and
dec
pop
mov
movsb
int3
decb
andl
jns
inc
xlat
inc
cmp
push
andl
mov
add
fs
lock
outsl
push
xor
and
jo
xchg
sbb
mov
pop
inc
push
mov
xor
mov
inc
or
frstor
mov
add
jb
cld
aas
outsl
or
dec
movsb
stc
repnz
mov
pushf
sbb
push
inc
mov
cmp
add
les
jl
sub
adc
mov
xchg
jnp
test
inc
xor
jecxz
mov
ljmp
mov
mov
push
sti
fmul
pop
lds
in
xor
pop
dec
in
pop
adc
push
pop
nop
popa
adc
inc
mov
fidivs
pop
hlt
push
out
loop
xor
xchg
xchg
out
jnp
sub
dec
lods
push
mov
jge
outsl
adc
sahf
sbb
aam
add
aas
xlat
arpl
xor
fwait
inc
sub
and
bound
in
xor
addl
adc
outsb
xor
andb
adc
fists
dec
mov
push
jne
cmp
mov
imul
bound
rorb
xchg
popa
fsubl
sbb
test
pop
dec
add
and
or
add
arpl
sahf
add
cmp
push
imul
jge
inc
cmpl
pushf
xor
arpl
mov
add
pop
pop
sub
sbb
jo
mov
add
and
push
and
add
aam
xor
test
in
add
lds
jle
inc
and
pop
outsl
stos
enter
dec
sbb
ss
adc
mov
fisubs
ret
jne
inc
dec
adc
int3
into
mov
cmp
loopne
out
jnp
lcall
inc
call
xchg
add
int3
loop
cmp
out
adcb
add
hlt
pop
jo
xor
js
mov
mov
push
xor
adc
fmulp
mov
xorb
fst
pusha
inc
sbb
fcmovbe
inc
out
cwtl
ret
test
fsubr
dec
sbb
jno
add
push
notb
push
cmpsl
jmp
add
ja
repz
outsb
std
bswap
jns
or
pop
adc
stc
add
dec
hlt
dec
mov
pop
adc
or
insb
pushf
jb
scas
mov
add
mov
mov
add
insb
cltd
btc
add
gs
pop
mov
inc
push
pop
mov
cmp
lahf
add
repz
fmulp
roll
adc
push
mov
xchg
add
mov
inc
dec
adc
int
push
sbb
cltd
mov
add
dec
xor
add
test
mov
mov
inc
sub
push
sbb
dec
adc
scas
pop
inc
mov
mov
jo
mov
adc
cld
movsl
add
sbbb
or
js
jnp
pop
mov
sbb
cmc
pop
cli
loopne
mov
mov
pusha
xchg
sbb
inc
xor
in
sub
cli
test
push
jo
fsub
jmp
popa
outsb
cli
faddl
imul
out
add
pushf
and
and
or
dec
push
pop
fmull
xlat
sbb
xchg
jmp
orb
jo
mov
push
mov
jb
into
iret
xor
ror
add
not
inc
leave
test
ss
push
mov
pushf
and
xchg
andb
sub
or
pop
in
sub
pop
dec
adcb
dec
xchg
repnz
push
andl
popa
imul
add
adc
ss
std
mov
cmp
aas
in
call
xor
mov
add
adc
mov
pop
jge
add
imul
xor
enter
fadds
jge
faddl
add
movsb
test
xor
add
sub
mov
sar
add
add
inc
xor
fidivrl
mov
lock
mov
int
or
cmpsl
jns
cmp
add
cmp
jb
pop
push
adc
cmc
inc
loopne
dec
adc
clc
jns
dec
and
pop
inc
push
mov
add
fdiv
cld
je
push
adc
ja
xor
fmul
jno
pusha
dec
call
lods
aaa
incl
or
in
and
add
leave
aam
test
cld
sbb
subl
jp
mov
add
lret
in
pop
cmp
xor
gs
fs
adc
fistps
in
add
mov
lahf
push
mov
jl
and
mov
add
out
in
fadd
sbb
out
mov
pop
add
bnd
and
mov
adc
jnp
or
ljmp
das
mov
pop
shll
icebp
out
xchg
cmpsl
sbb
fwait
lock
xlat
repz
jb
repnz
xor
aad
or
and
and
add
nop
stos
gs
cwtl
add
sbb
push
mov
xlat
inc
popa
fs
add
in
insl
push
pop
xchg
dec
pop
lods
jp
sub
sub
or
jge
ret
rcll
pusha
xlat
addr16
mov
rcrb
mov
filds
add
fstp
push
jb
xchg
mov
cwtl
inc
cltd
pusha
cs
xchg
cmp
or
in
jg
inc
pushf
popf
add
add
cmp
pop
nop
sub
jp
inc
iret
xorb
subb
add
jbe
push
add
aaa
rcr
jae
insl
jge
fadds
repnz
cld
add
fidivl
sbb
cmp
mov
je
jge
or
jecxz
push
test
inc
pop
ror
cmp
jb
roll
sub
into
xchg
lods
pop
inc
add
or
or
pop
gs
inc
enter
sub
xchg
leave
cmpb
lock
inc
mov
push
pop
mov
push
rclb
adc
cmp
cmp
popf
jge
adc
mov
shrb
add
dec
rol
sub
bound
rol
movsl
mov
dec
add
jmp
sbb
jb
lds
testl
inc
dec
push
adc
inc
pop
mov
push
sub
cmp
inc
push
in
add
mov
sub
popa
adc
aaa
add
sbb
add
push
cwtl
pop
push
cmp
adc
cmp
cmp
xor
xchg
test
lea
xchg
sbb
pop
dec
mov
mov
and
jmp
nop
fcmovnu
push
jle
pop
popa
or
sub
add
mov
int3
ja
cli
xor
add
ret
enter
test
mov
js
jge
cmp
pop
mov
mov
cli
fisttps
mov
js
jo
or
add
es
fldt
ffreep
icebp
jmp
dec
repnz
or
or
sub
sbb
call
jae
add
fndisi(8087
push
ds
inc
cli
incb
push
add
or
xor
fs
inc
or
sbb
add
subb
loope
int3
push
scas
out
pop
mov
or
mov
test
push
in
aaa
test
mov
pop
fs
movsb
in
or
and
pushf
sbb
push
and
xchg
add
hlt
mov
inc
stos
dec
adc
adcb
fildl
or
clc
hlt
movsb
jmp
push
mov
lods
mov
dec
les
lea
decl
test
mov
std
out
faddl
push
sbbb
pop
sub
dec
mov
add
sbb
inc
xor
fistpl
nop
mov
dec
pop
pop
sub
inc
ljmp
jg
pop
lahf
cli
cmp
jge
add
adc
sbb
bound
rorb
cld
subb
pop
xchg
push
out
pop
std
add
pushf
add
pop
sub
jle
pusha
or
push
add
lcall
cltd
js
fisttpll
mov
mov
rol
test
in
cmp
aam
mov
jo
push
pop
into
enter
fsub
mov
jl
mov
sbb
add
arpl
dec
outsb
test
repnz
imul
mov
mov
inc
xor
inc
lods
mov
xor
sbb
fistl
das
push
in
cmp
jno
jo
sbb
dec
pop
nop
and
mov
inc
out
pop
fistpl
mov
xor
lcall
test
push
push
mov
clc
add
rorb
add
jne
inc
xchg
fcmove
rcrl
jns
mov
sub
xchg
inc
or
fimull
jmp
sbb
fisubrs
std
and
fdivrl
sub
add
xor
sti
lock
mov
add
pusha
ret
es
xor
push
nop
pushf
mov
insl
xor
mov
mov
shlb
stc
adc
pushl
sbb
xor
mov
and
popa
xor
icebp
adc
por
enter
sub
aas
pusha
clc
ljmp
outsb
mov
mov
shlb
les
xor
cmp
cmpsb
adc
sbb
cwtl
in
xor
jo
int3
xchg
sahf
xchg
in
pop
cmp
testb
pushf
xchg
fs
add
inc
adc
jne
cmp
rcll
nop
adc
mov
and
divl
and
lock
mov
pushf
decl
jmp
es
inc
and
dec
nop
sbb
mov
mov
jbe
ljmp
nop
rcrb
mov
test
sbb
outsb
add
add
std
daa
inc
lds
dec
fldl
ds
mov
add
adc
mov
mov
mov
aad
or
arpl
stos
andl
or
hlt
xchg
enter
lahf
ret
cmc
pop
in
pop
pop
push
push
out
shl
rol
repnz
mov
test
adc
mov
call
call
and
cmp
fsts
rclb
push
rcrb
xlat
repnz
inc
jne
int3
pop
add
fstp
dec
mov
add
testl
xor
leave
mov
jnp
add
out
cmovns
and
xchg
ret
xchg
ffree
mov
push
pop
adc
or
lods
xchg
ja
faddl
xor
fildll
push
and
test
roll
lods
jb
adc
sub
ret
pop
clc
aas
and
mov
push
mov
push
add
call
or
repnz
lods
jecxz
outsb
jge
and
sbb
pop
xor
sbb
mov
rcrb
pop
das
push
and
shl
cli
or
nop
in
and
cmp
or
rorb
fcmove
add
xchg
add
addr16
add
dec
sbb
pop
xchg
add
decb
and
pop
insl
insb
scas
jle
faddl
pop
daa
aam
repnz
rorb
sbb
jg
fsubrp
jp
mov
sub
cmp
jg
adc
xchg
xchg
push
add
dec
add
sub
add
pusha
pop
cmp
pop
test
inc
call
and
clc
xor
jb
sti
add
adc
cmp
pop
mov
scas
insb
add
push
sbb
aam
roll
cmp
ds
clc
mov
cmovae
aad
mov
add
cli
sbbl
add
fimull
add
fdiv
cmp
add
cmp
sub
push
je
in
sbb
sbb
pop
add
int
or
jp
sarl
mov
imul
jo
repnz
xchg
dec
push
xchg
push
cmpb
test
add
and
xchg
xor
popf
btl
je
lret
add
adc
lds
mov
ja
dec
add
mov
cmc
xchg
and
pop
push
push
sbb
xchg
fnstenv
cmp
cmpsl
adc
rorb
mov
pop
add
loop
shlb
test
fdivrs
rolb
dec
pop
xchg
jne
subl
les
mov
push
mov
nop
popf
pop
and
sti
dec
pusha
xchg
shll
or
outsl
cltd
sub
xchg
mov
pop
mov
sarb
test
bound
adc
enter
pusha
mov
mov
inc
inc
cmpsb
outsb
rcll
movsb
cld
dec
int3
cmp
jg
add
inc
loop
lock
push
insl
andb
inc
ja
lahf
sub
lods
addb
jae
movl
cmpsb
js
push
add
fnstenv
xlat
aas
aam
dec
data16
test
dec
or
cmp
in
flds
aas
cmp
adc
mov
cmp
es
mov
repnz
pop
int3
or
xor
inc
es
movsl
out
imul
clc
call
or
mov
pushf
pushf
cmp
push
rcll
adc
and
pop
leave
bound
inc
push
lds
pusha
xor
or
and
push
mov
xchg
fucomip
mov
rclb
divb
push
leave
mov
andb
sub
push
jge
jecxz
clc
add
fcmovbe
nop
push
repnz
dec
cmp
cltd
cmp
sbb
movsl
mov
dec
std
mov
mov
push
mov
jb
int3
fcomip
popf
adc
jbe
adc
orl
movsb
ja
jmp
sarb
test
cmp
and
cmp
and
pushf
push
and
nop
mov
or
add
pusha
aam
call
sarl
dec
sub
xchg
mov
shrl
or
dec
jmp
dec
hlt
xchg
or
sbb
cmpsb
jno
aad
sahf
dec
or
mov
test
lret
xchg
jno
pop
aad
adc
and
mov
into
sub
mov
add
aad
or
mov
adc
push
sbb
and
fwait
mov
add
xchg
in
cld
lret
and
add
addb
mov
cmp
dec
addr16
and
push
aaa
sub
mov
cmp
inc
or
and
je
add
sub
hlt
jg
inc
lods
addl
and
daa
stos
adc
int3
int
jb
add
scas
movsb
mov
fcoms
shll
pop
rolb
lds
lret
data16
js
lcall
inc
call
into
add
out
and
adc
push
dec
and
add
or
sbb
cmpsb
fs
stc
dec
dec
mov
ret
loope
call
pop
push
fiadds
mov
adc
mov
cld
clts
cmp
sahf
fadd
cmpsb
adc
mov
push
pusha
xor
in
rolb
cmpsb
add
ror
cmp
adc
xor
das
hlt
adc
dec
rcll
or
pusha
mov
mov
cmc
aas
cwtl
push
mov
cltd
loopne
maxps
pop
add
jno
mov
pop
aas
sub
roll
insb
fcmovne
or
inc
decb
cmpsb
lock
stos
xlat
mov
pop
push
je
dec
shll
mov
mov
movsl
xchg
mov
mov
mov
or
nop
flds
das
cmp
mov
aas
mov
clc
pop
daa
shll
and
daa
mov
mov
orb
jge
add
imul
add
add
pop
jo
adc
je
push
movb
nop
nop
aad
jle
cmp
inc
add
push
cwtl
mov
int3
add
jne
mov
mov
mov
loop
add
test
or
in
mov
inc
add
add
aam
ffree
in
repz
andb
add
movsl
jp
or
fmull
push
add
add
pop
cmp
and
fmull
add
fldl
mov
in
es
mov
add
push
rcrl
cld
xchg
mov
aam
adcl
fs
add
fiadds
push
pusha
sbbl
aas
or
pop
dec
inc
insb
addb
out
add
add
or
push
pop
cmp
enter
adc
or
je
lock
mov
jge
jmp
mov
inc
rolb
pop
push
xor
cmc
imul
loop
xor
pop
mov
cli
xchg
push
mov
xor
push
repnz
jno
xchg
cmp
mov
adc
jb
in
inc
movsb
jecxz
mov
xor
add
fiadds
shlb
dec
fcmovne
push
mov
enter
cld
hlt
xor
add
popl
xchg
jo
inc
rorb
add
sbb
stos
inc
lock
xchg
cld
rolb
mov
das
add
add
xchg
fcmovu
js
aas
sub
cmovnp
push
in
mov
stos
mov
push
ljmp
xchg
mov
add
ret
inc
add
test
mov
enter
ljmp
jmp
push
add
and
pop
push
mov
inc
add
std
in
aam
pop
loopne
push
fldenv
fsts
sbb
push
testl
repnz
push
and
andb
rorl
cwtl
or
jb
add
addr16
mov
aad
roll
cld
je
push
pop
mov
adc
pusha
stos
int
adc
rorb
cmp
movsb
sub
hlt
js
cmovl
cmpsb
psubsw
test
pop
add
xlat
cmc
cltd
fadd
aas
gs
fistpl
lahf
andb
add
subl
stc
sbb
and
push
insl
xor
add
adc
mov
xor
or
dec
js
or
cmp
mov
dec
pmulhw
nop
dec
addb
xor
adc
sarl
lahf
sbb
pmullw
lret
popf
mov
imul
add
loop
adcb
dec
or
and
hlt
movsb
add
add
xchg
sbb
xchg
gs
add
pop
or
push
cmp
mov
push
push
imul
fucomp
jnp
sbb
and
adc
mov
aas
fisttps
add
ljmp
fmull
mov
rol
adc
or
arpl
mov
in
cld
ror
popf
sbb
orl
mov
shr
je
jg
movsb
pop
inc
and
fcomps
adc
cmp
pop
pop
push
pop
sub
xlat
rorb
add
in
out
pop
aad
adc
or
mov
sub
or
add
popf
fs
jecxz
xchg
or
mov
das
outsb
pop
shlb
in
jbe
loopne
jb
lods
mov
xchg
xlat
cli
sbb
data16
mov
sahf
and
dec
aam
fildl
dec
cwtl
imul
add
add
push
adc
push
or
shrb
sub
or
movsb
cmc
cmp
inc
jns
lods
mov
and
add
add
and
int
jno
or
nop
lods
pop
mov
jbe
sti
add
xchg
cli
inc
and
add
mov
dec
sbb
push
xor
cld
jl
mov
addr16
fadd
rorb
adcl
mov
or
add
loop
testb
lret
and
or
mov
pop
dec
in
xor
mov
inc
pop
jp
add
xchg
mov
lds
loop
jl
or
nop
mov
ror
sbb
loopne
insb
mov
test
add
push
xchg
aam
or
lock
push
test
push
mov
jge
popf
add
lock
das
inc
and
and
push
sbb
xchg
scas
sbb
xchg
add
aaa
or
test
imull
loope
shlb
pusha
fnstenv
lods
and
xchg
or
and
jo
daa
inc
jmp
xor
and
inc
js
lock
hlt
lahf
jge
in
sbbb
push
dec
test
fsubs
sbb
stos
dec
sbb
cwtl
cwtl
pop
inc
xchg
jo
adc
fisttpl
cmp
or
mov
or
push
fld
mov
rolb
mov
cld
add
pusha
shll
movsl
add
arpl
mov
xchg
mov
add
repnz
pusha
andb
das
enter
in
pop
xor
pop
add
xchg
cmp
ss
insl
add
xchg
ror
pop
outsb
or
ja
hlt
icebp
gs
jle
lahf
jl
mov
add
into
out
outsl
daa
jo
and
or
xorb
lcall
aam
inc
arpl
cmpsl
add
xchg
fimull
mov
repnz
cwtl
mov
pop
pop
and
dec
and
lret
ret
add
ja
in
jl
dec
sbb
push
inc
insl
cltd
jp
and
inc
je
dec
add
push
mov
jbe
dec
mov
xor
movaps
jge
add
cmpl
xchg
sbbb
dec
aad
enter
ds
push
sarl
dec
xchg
adc
mov
in
cmpsb
add
inc
cmc
ret
mov
push
push
jbe
sahf
jmp
popf
mov
and
add
test
jo
push
das
push
push
lods
hlt
push
enter
sbb
or
aad
in
popf
xchg
adc
shlb
xor
inc
xchg
imul
jbe
or
scas
cmpsl
hlt
les
push
into
and
out
pop
mov
imul
cmp
insl
adc
or
dec
add
jge
sub
or
mov
pop
jle
inc
or
add
and
push
aaa
sub
jl
push
pop
push
rcrb
jb
cmp
dec
in
test
pcmpeqw
fcoms
imul
mov
xchg
mov
test
dec
sbb
mov
add
pop
outsb
pop
pop
jecxz
and
js
and
xchg
push
sub
dec
jge
movsb
mov
fidivl
mov
xchg
mov
nop
pop
sbbb
push
into
sbb
fimull
lcall
push
cmpsb
pushf
cmc
push
dec
mov
adc
jns
and
xor
mov
sub
and
mov
and
daa
ret
mov
addr16
sbb
dec
adc
jns
sbb
leave
dec
pop
add
ds
in
leave
push
add
js
andl
fcmovnbe
inc
pop
or
sbb
dec
popf
cld
adc
std
sub
mov
lods
xor
add
popa
ror
test
rorl
cs
xchg
add
push
and
xor
mov
sub
nop
imul
cld
repz
aad
icebp
inc
fcoml
xchg
add
xchg
adc
shlb
xor
popa
push
add
cli
adcb
roll
pop
cld
add
in
fsubrp
ljmp
inc
cmp
arpl
xor
mov
add
jle
js
inc
xor
add
jp
jnp
sbb
enter
mov
pop
rolb
dec
clc
fs
mov
xor
mov
inc
or
add
add
ljmp
add
add
cmp
xchg
inc
sub
adc
in
xchg
lds
or
hlt
lea
adc
dec
add
out
inc
shrb
test
dec
push
pop
roll
xor
mov
icebp
jb
aam
test
das
insb
add
icebp
mov
pop
add
std
add
dec
in
jg
mov
cmc
inc
cmp
mov
add
loopne
daa
push
shll
fwait
xor
xor
hlt
add
lahf
call
or
xor
loopne
movsb
cmp
add
fimuls
ss
pop
rcrb
push
in
ja
aas
movsb
test
daa
pushf
ret
stos
mov
daa
in
inc
push
iret
dec
aas
cmp
int3
push
mulb
cltd
insb
mov
sbb
mov
xchg
pusha
sbb
jae
fs
dec
and
lock
xor
xchg
pusha
xchg
andl
fldl
dec
jo
fisttpll
in
and
mov
push
stc
orb
orb
pusha
pop
dec
inc
shl
add
sub
add
inc
sub
fwait
inc
add
inc
sub
fcoml
aas
or
cwtl
sahf
loopne
push
fidivrl
hlt
rcrb
jmp
cmpsb
pop
out
sahf
les
int
jecxz
cmp
adcb
or
arpl
daa
mov
bound
fisubs
movsb
lods
cmp
dec
imul
jo
dec
mov
out
sar
jl
and
add
jno
pop
shll
sub
xchg
repz
jle
add
rol
in
push
push
rcrb
fsubl
dec
test
outsl
push
stos
inc
xchg
daa
jo
pop
or
enter
cwtl
insb
bound
pop
xlat
andb
fiaddl
lock
popa
sbbl
push
add
mov
push
cmp
lret
jl
dec
mov
out
push
test
pop
sti
leave
in
adc
jg
sbb
adc
call
jge
inc
mov
xchg
add
outsl
push
pop
jo
xchg
mov
push
out
jge
lcall
adcl
ds
push
stos
sar
jo
or
cli
push
push
inc
push
inc
addr16
call
loopne
rol
or
mov
push
or
outsb
or
out
or
aad
inc
inc
jg
pop
mov
push
xchg
add
lods
inc
jmp
data16
outsl
xor
aaa
jns
mov
mov
negl
sbb
sbb
xlat
jns
add
add
add
and
daa
jecxz
adc
add
imul
and
arpl
inc
pop
pop
xor
lret
inc
mov
sbb
xchg
stc
loopne
fldenv
or
xor
sub
push
mov
cltd
sbb
std
push
or
or
jno
xchg
inc
adc
lret
adc
rcrl
push
and
jmp
aam
es
sbb
movsb
push
adc
mov
dec
lods
and
mov
sub
inc
stc
sub
shrb
call
adc
cmp
test
push
dec
mov
outsw
or
push
push
nop
cs
pop
test
push
inc
dec
icebp
daa
add
add
test
adc
inc
mov
sbb
push
mov
out
pop
push
lcall
lds
fadd
adc
adc
fsubrs
xlat
lods
and
dec
push
cltd
mov
mov
pmaxub
bound
inc
add
sub
mov
xor
imul
pop
lods
push
xchg
or
xchg
mov
adc
and
add
ds
mov
andb
pop
not
jns
sbb
or
dec
xchg
insb
les
or
or
inc
mov
test
ss
data16
pop
and
and
popa
xor
push
or
add
adc
icebp
fs
cld
add
aam
xchg
sti
add
push
push
mov
jns
les
test
fwait
test
ret
adc
inc
lret
and
and
and
and
cli
push
insb
in
adc
mulb
movsb
pop
jb
jo
pop
shrl
movups
out
pop
fists
rolb
cld
push
jge
loope
outsl
xor
scas
fnstcw
jbe
lods
cmpsb
cmp
sbb
nop
xchg
fisttpll
pop
xchg
mov
inc
mov
push
push
push
imul
mov
cltd
xor
hlt
xorb
jnp
test
xor
dec
push
add
pop
test
add
cli
jno
rep
cmp
add
scas
lods
jb
xor
stc
add
dec
out
or
roll
inc
test
movsb
inc
outsl
add
xlat
inc
jg
loopne
int
mov
push
or
add
jae
mov
cmp
imul
rolb
addr16
add
cmpsl
pop
dec
adc
push
test
mov
popa
mov
xor
mov
cmc
mov
test
cmp
call
subb
xchg
loopne
xchg
lar
cwtl
mov
dec
add
mov
mov
movsl
inc
add
cli
std
incb
andb
mov
leave
ss
push
cmp
jmp
sbb
push
push
jb
test
std
es
or
test
xchg
dec
add
mov
or
les
jae
inc
std
jp
lret
mov
aas
fidivrl
hlt
leave
in
cmp
or
inc
popa
mov
lcall
xchg
push
cmp
push
push
fildll
xchg
popa
lcall
xchg
mov
push
adc
cltd
add
test
adc
add
mov
testb
push
aad
cwtl
push
adc
pop
mov
loop
mov
or
fstpt
add
mov
pusha
mov
pop
mov
or
subl
fcoml
fistps
stos
nop
add
lret
or
stos
xor
cmc
ss
adc
jb
mov
mov
mov
in
loope
dec
sub
iret
out
daa
jbe
mov
ret
xchg
or
inc
and
pop
add
mov
lods
sbb
xchg
sahf
dec
loopne
sbb
jmp
lock
mov
add
aam
negb
push
mov
fldl
les
xchg
pop
imul
lds
mov
dec
ret
out
stos
add
bnd
sbb
loopne
testb
xchg
lcall
test
push
push
pop
std
mov
aas
adc
andb
hlt
xor
add
je
xlat
adc
in
add
jge
fidivrs
adc
loop
add
decl
xlat
push
or
cli
and
adc
jg
clc
sti
or
inc
pusha
inc
nop
filds
sahf
dec
idivb
insb
out
popa
lcall
xchg
in
pop
test
jnp
sbbl
push
into
pop
mov
cmc
loopne
decl
aaa
outsl
mov
xor
jmp
or
aad
in
fmuls
mov
in
and
inc
sahf
hlt
and
movsb
cmp
mov
insb
push
ret
wrmsr
cwtl
cmc
xor
gs
sub
sbb
stos
sti
add
fwait
in
fisttpl
mov
repz
jns
push
hlt
xor
aam
lods
adc
je
nop
xor
mov
push
fldt
push
popa
inc
enter
jo
xor
add
jno
inc
cmp
icebp
xor
and
cli
psrlq
push
pop
or
lods
cs
inc
sub
test
imul
out
cld
xchg
sub
mov
mulb
stc
push
leave
int3
aad
dec
or
pop
aas
push
adc
lods
push
mov
pushf
iret
outsl
pusha
add
push
int3
ret
int3
fcoml
mov
outsb
hlt
pop
aas
add
test
fsubrs
hlt
and
or
in
adc
rolb
inc
pop
sbb
cld
jle
daa
mov
ss
loop
adc
hlt
adc
push
jnp
pop
push
test
xor
dec
xchg
loope
rcrl
popa
xchg
loopne
push
subl
std
jns
add
in
fisubs
dec
sbb
psubb
inc
in
int3
mov
push
mov
add
fidivrs
in
outsl
xor
ds
xchg
sub
xor
insb
xchg
xor
add
mov
xor
loopne
jno
shr
clc
pop
das
or
push
xchg
mov
fstpl
gs
mov
mov
and
call
cld
cmp
push
jge
loopne
pop
pusha
push
repz
mov
mov
loopne
add
adc
adc
fdivr
or
jmp
imul
mov
into
andb
jl
push
pushf
or
mov
mov
mov
xchg
ljmp
movsl
push
pop
add
jb
pushf
add
and
add
fists
push
jae
adc
cld
or
ja
mov
cltd
imul
push
loopne
dec
add
in
mov
aam
or
mov
add
add
int3
mov
mov
add
pusha
and
push
adc
or
and
lods
push
and
push
outsl
pop
inc
js
fsts
xor
filds
in
mov
mov
xchg
pop
adc
adc
inc
lods
adc
sub
cmp
mov
push
add
pop
pushf
int3
lret
sahf
pop
bound
dec
cmp
inc
insb
pop
pop
and
jb
pusha
ror
divb
mov
mov
stc
mov
sbbb
add
out
pusha
push
fwait
add
mov
dec
adc
ljmp
test
xor
js
sbb
pop
int
daa
xchg
iret
add
repnz
cmc
sahf
scas
xchg
inc
pop
cmp
orb
imul
test
and
outsl
pop
lods
pop
std
add
adc
fwait
ja
or
and
cmp
or
mov
js
cmpsb
test
sbb
add
fs
cld
lock
push
adcl
and
mov
push
notb
shlb
pop
aas
xchg
call
insb
jge
sub
lds
fisubs
fmuls
jge
lcall
mov
fldenv
add
cs
aaa
popa
bnd
or
roll
xor
into
movsb
int3
jo
ss
ror
call
movsl
jo
sub
fisubrl
bound
cwtl
popa
xchg
repnz
or
add
clc
hlt
cmp
add
jno
idivl
sbb
hlt
push
add
ss
sahf
push
mov
push
test
jmp
je
pusha
add
hlt
js
add
jge
bound
sub
add
rorb
gs
ja
push
pop
shrb
or
popf
rorb
rcrl
push
ljmp
add
push
push
shlb
imul
xlat
sahf
inc
and
std
mov
cmp
cli
adc
pusha
shll
pop
inc
hlt
shlb
clc
sbb
out
xorb
jno
jmp
nop
push
sub
and
push
xchg
add
outsl
int
adc
test
or
rclb
jns
add
into
jno
adc
or
cmc
pop
push
test
test
lahf
lcall
dec
jmp
andl
push
in
aam
dec
hlt
push
mov
xchg
loop
or
icebp
test
in
sti
cmp
jno
add
lock
loopne
jge
push
push
pusha
bound
xorb
aas
mov
inc
daa
jb
or
lock
test
loope
int3
out
scas
fdivrl
imul
test
sbb
inc
call
and
in
sar
mov
xchg
rclb
add
and
loop
js
fadds
push
rcrb
sbb
dec
aam
pop
cmovae
out
and
mov
jnp
cmp
cltd
loopne
testb
outsb
inc
xchg
add
popa
hlt
test
xchg
rcrb
clc
mov
or
add
add
movsl
add
pusha
inc
out
jae
fcomps
lods
in
add
cmp
inc
pushf
add
add
js
mov
inc
mov
pop
push
fildl
mov
or
push
int
in
mov
enter
gs
pop
or
adc
adc
add
js
jmp
ret
div
ret
je
pop
nop
in
arpl
add
pop
push
movsl
sbb
or
fisttpll
call
stc
mov
pop
bound
in
in
fadd
mov
outsw
dec
js
mov
adc
xor
les
hlt
xor
jae
jno
jne
or
inc
pushf
je
jge
or
pusha
js
insb
sub
cs
mov
cld
xor
sub
movsb
add
jb
xor
je
cwtl
sahf
jl
sub
and
pop
dec
nop
fildll
sarb
popa
or
andl
adc
inc
push
loopne
push
or
hlt
outsl
fadds
sarl
xorb
adc
inc
sti
add
xorb
jne
inc
dec
call
mov
dec
inc
in
bound
popf
int3
je
sbb
out
cwtl
enter
aam
mov
pusha
pushf
dec
clc
adcb
arpl
jmp
add
aas
fs
cmpsl
roll
das
push
popa
mov
adc
frstor
cmp
jo
addl
mov
mov
cmp
in
sub
add
inc
mov
mov
fildll
jo
pop
or
rcll
fs
sub
cmpsb
adcb
bnd
aad
or
add
dec
test
mov
lods
add
je
jmp
pop
xchg
pop
xchg
add
cmp
adcb
daa
ja
jge
inc
adc
xor
adc
mov
std
add
vaddsubps
adc
and
mov
sub
mov
push
les
leave
mov
sbb
xchg
jae
nop
sbbb
je
add
hlt
in
shl
cwtl
xchg
jg
xor
nop
fmuls
or
in
xchg
jno
cmc
xor
dec
mov
ljmp
jmp
insl
xor
cmp
mov
cmc
sub
xchg
call
cmp
mov
and
adcl
add
or
movsb
repz
clc
xor
inc
ds
push
popa
push
insb
xchg
sahf
or
adc
fcomip
and
fs
jge
mov
dec
popf
jg
adc
add
xor
test
add
lea
jl
aaa
pop
adc
jle
pop
mov
xchg
cwtl
inc
push
aam
or
imul
loopne
jge
add
cli
push
jg,pt
dec
mov
lret
lock
xor
cmp
pusha
jns
popl
repnz
in
data16
add
or
or
cmc
jg
and
push
inc
pop
jo
dec
add
int
sub
mov
data16
hlt
mov
cmp
push
push
jb
mov
sbb
jae
enter
sub
adc
push
mov
stos
adc
mov
push
outsl
add
std
mov
mov
jb
data16
fs
ret
push
or
fstps
hlt
shlb
arpl
cltd
pop
add
push
pop
sbbl
pop
in
inc
dec
or
sub
add
fmuls
gs
add
in
movsb
and
clc
and
js
push
insb
add
cmc
inc
and
bound
adc
rorl
and
pop
fiadds
mov
in
mov
or
movsb
dec
out
imul
add
mov
popf
sub
xlat
dec
adc
cvttps2pi
mov
in
or
push
add
addb
cmp
push
loopne
fmull
adc
jle
cmp
out
cvtpi2ps
mov
cmpb
test
adc
dec
popf
or
out
movsb
mov
xchg
lock
test
test
pop
out
mov
mov
inc
sub
movsb
add
pop
mov
cmp
rclb
in
fists
pop
dec
cmp
mov
adc
or
lods
inc
mov
mov
jl
xor
sbb
enter
aam
cmp
sahf
je
or
fcoms
mov
pushf
decl
or
cmp
add
push
xchg
add
movsl
or
mov
jns
or
pop
inc
jl
cmc
xlat
inc
xchg
or
add
in
mov
lahf
jp
sbb
gs
outsl
xor
ret
fsubr
or
dec
fimull
push
out
mov
xor
js
hlt
sub
mov
movsb
xor
push
mov
jmp
xchg
and
fisttps
rorl
xchg
xchg
add
dec
add
loope
dec
sbb
sub
imul
sbb
pusha
add
adc
mov
sbb
aaa
sahf
xor
gs
aam
xor
repnz
adc
inc
mov
es
xchg
mov
add
jg
mov
dec
inc
fldenv
pop
testl
js
add
add
shlb
jb
sbb
clc
add
pop
cld
fnstsw
inc
ret
cmpsb
jmp
call
inc
je
in
and
or
xchg
inc
xchg
hlt
repnz
pusha
jl
or
orl
incb
cld
insb
add
mov
inc
jns
mov
mov
cmp
xor
adc
push
les
test
aaa
xchg
jo
and
stos
adc
or
call
mov
pop
add
xchg
fst
test
loopne
aam
push
add
fscale
iret
in
das
decl
or
out
insl
ror
notb
aad
pop
jno
nop
rcrb
xlat
mov
negl
ds
nop
punpckhdq
cmp
rorb
dec
jno
mov
adc
push
cs
adcb
insl
dec
jne
sbb
orl
es
subl
add
mov
int
add
pop
shll
add
xlat
adc
adc
hlt
cmc
push
and
xor
std
movsbl
outsl
pop
ficomps
sub
mov
sub
test
push
mov
sub
pusha
dec
sbb
loopne
dec
mov
cmc
adc
pop
and
enter
dec
sbb
add
push
pop
mov
push
add
imul
cmp
inc
mov
mov
aaa
out
xor
sarl
xchg
hlt
les
adcb
xlat
push
inc
adc
lcall
add
push
or
add
sbb
cmc
fwait
xchg
subb
scas
jb
repnz
jp
add
adc
insl
cmp
jmp
int
and
add
xchg
std
sbb
xor
mov
je
loop
fwait
es
push
hlt
push
or
lock
repnz
test
cltd
insl
int3
movl
sbb
xchg
lods
dec
cld
dec
dec
inc
test
popa
hlt
iret
into
lock
push
jo
cmp
xor
int
and
inc
imul
add
xlat
jno
popf
xorb
xorb
in
aam
or
mull
add
pop
je
inc
into
pop
inc
in
hlt
aas
and
rol
test
mov
or
nop
sub
add
cmp
frstor
jge
adc
inc
dec
inc
pusha
xor
add
in
es
lods
xchg
scas
dec
cmp
or
clc
pushf
aas
or
in
dec
inc
xor
lods
dec
jae
sahf
icebp
sbb
fwait
cli
cs
fdivrs
add
popa
subb
cmpsb
add
adc
or
adcb
aas
push
std
dec
add
xchg
dec
add
sarb
pop
xlat
sbb
mov
or
jg
subb
nop
cmp
adc
cmc
xorb
push
daa
push
popa
cmp
or
push
clc
add
rol
dec
cmp
insb
popf
pop
add
pop
dec
pusha
imul
dec
movb
pop
mov
sahf
aam
adcb
movb
add
rorl
mov
xor
pusha
jae
adcb
pop
in
and
pop
push
adc
inc
pop
aad
pop
out
mov
out
incl
push
mov
push
aas
lods
add
sbb
jge
insb
dec
jno
adcb
js
in
cmc
es
mov
xor
mov
jb
add
stos
push
daa
cmc
xchg
jnp
cmp
push
sbb
ret
pop
adc
ss
push
rol
add
stos
rclb
out
push
fldl
data16
std
or
or
bound
mov
ficoml
pusha
repnz
jbe
cmpsl
dec
fadds
or
lds
mov
adc
pop
jo
ja
jbe
push
andb
fbld
mov
stc
xchg
test
add
ss
xor
test
mov
mov
shrl
jle
or
mov
clc
insb
push
adc
mov
mov
repnz
push
or
xchg
je
int3
test
cmp
hlt
xchg
in
add
pop
std
fiadds
mov
and
mov
dec
cmpsb
nop
mov
dec
enter
fisttpll
incl
in
outsb
sarb
dec
adc
add
je
pusha
xor
jecxz
js
xlat
cmp
push
sub
pop
cld
or
push
sbb
cmc
int3
or
inc
jbe
inc
jne
sub
sbb
xor
cmp
test
rol
hlt
incb
add
clc
sbb
or
jbe
andb
and
jge
jae
sub
cs
dec
push
jo
ds
cmp
pop
push
push
leave
mov
cmp
call
pop
xchg
mov
add
and
and
xor
xchg
mov
adc
adc
icebp
adc
jo
inc
pop
dec
mov
add
push
movsb
inc
fildl
adc
mov
lds
stc
mov
int
fidivs
push
repnz
adc
pop
roll
fdivrl
fs
insl
dec
adc
xor
aas
movsb
or
cmp
and
xor
push
xchg
fs
mov
and
bound
inc
or
jns
cmp
in
push
repnz
pusha
mov
mov
andb
and
rclb
or
jae
jg
mov
add
xchg
push
ja
aam
clc
insl
sti
lea
mov
add
cmp
ss
je
jo
xchg
dec
mov
wbinvd
xor
jnp
out
adc
js
scas
std
mov
dec
fmul
add
push
lods
or
or
les
and
inc
cld
andl
fs
add
mov
stos
or
in
xor
jo
xor
jmp
push
out
jb
sbb
incb
fdivl
ljmp
xchg
das
adcl
sbb
inc
adcb
mov
mov
int3
arpl
adc
sbb
push
push
pop
dec
icebp
add
clc
push
insl
call
jbe
mov
mov
aam
or
in
aaa
xchg
adc
xchg
shll
or
add
xchg
inc
mov
aam
mov
jmp
mov
push
xor
rclb
aaa
lds
jl
pop
or
sub
je
inc
add
push
pop
fcompl
xorb
mov
add
repnz
jb
mov
int3
leave
sbb
mov
test
pop
sub
dec
data16
sbb
pushf
or
push
jecxz
jmp
jp
js
push
push
cwtl
inc
push
pusha
pusha
sub
or
int3
jp
ja
adc
out
jmp
inc
fwait
test
movsb
mov
aam
add
fstl
sbb
sti
or
nop
inc
cli
lods
jae
std
pop
movsb
mov
adc
push
adc
addr16
cmp
xlat
add
push
jns
or
xchg
push
stos
inc
xor
pop
sbb
push
dec
int3
hlt
pop
mov
call
dec
fmull
nop
shr
push
icebp
les
inc
adc
jl
jp
sub
and
leave
add
sbb
int3
jmp
jb
adc
dec
cwtl
addr16
stc
push
push
stc
xor
aam
mov
jl
or
jne
xor
bound
lea
shrb
mov
ret
fdivs
sub
add
mov
dec
mov
jo
shrb
addb
shl
js
sub
jl
mov
rcl
movsb
icebp
cs
mov
inc
push
fcomps
ljmp
mov
or
sahf
ret
and
mov
aaa
sbb
hlt
jns
andb
adc
out
aam
pop
ret
mov
dec
or
dec
dec
enter
in
data16
cmc
adc
mov
repz
rolb
shlb
xchg
xchg
inc
sub
jp
mov
pushf
cld
sbb
jge
push
pop
mov
inc
aas
add
ss
movsb
clc
std
hlt
or
mov
add
xor
add
in
add
cli
cmp
or
adc
jl
fsts
lcall
and
and
aam
test
in
or
pop
add
sbb
hlt
cld
pop
or
adc
notl
add
mov
push
xchg
test
or
inc
add
rolb
mov
adc
add
shll
popa
inc
dec
mov
xchg
addb
mov
push
push
or
cltd
test
mov
in
sbb
push
add
mov
jecxz
in
sub
cltd
popa
jne
lret
into
or
mov
push
inc
jecxz
mov
cmovge
adc
loopne
outsb
xchg
add
je
fsubrs
sub
leave
and
clc
or
mov
xchg
movsb
pop
add
hlt
arpl
mov
testb
pop
sub
arpl
aam
xchg
mov
xor
cltd
push
daa
push
popl
mov
ja
unpcklps
hlt
cmp
nop
add
loopne
mov
or
jo
cwtl
xchg
shr
ja
les
mov
cmp
inc
add
rolb
cld
mov
or
dec
mov
test
lcall
aad
sbb
nop
jo
xchg
test
shll
or
testl
adc
add
or
xlat
andb
push
dec
cmp
xor
adc
cld
ret
sbb
cmp
mov
orb
adc
clc
inc
pop
or
inc
mov
sub
add
push
enter
inc
cmp
hlt
mov
out
jns
or
pop
pop
mov
mov
daa
je
adc
pminsw
adc
xchg
sarb
hlt
outsl
pop
dec
inc
fcoms
mov
add
or
lods
adc
aad
cwtl
mov
cmp
dec
cltd
inc
fiaddl
mov
es
add
inc
ret
or
mov
push
loope
sub
enter
and
test
int
sarl
sarb
cwtl
push
add
adc
fwait
mov
ljmp
jne
repnz
sbb
dec
push
pop
or
or
push
js
add
sahf
stc
aaa
cld
jne
xchg
pop
push
add
xorb
in
and
mov
push
xor
xor
out
mov
add
and
and
adc
add
inc
sbb
insb
pop
push
das
shll
movb
add
xchg
rclb
icebp
adcl
adc
pop
das
pop
les
in
clc
jbe
test
or
lods
jae
addb
mov
ja
add
dec
pop
sbbb
dec
sbb
and
ja
fadd
pop
mov
jge
or
ds
adcl
add
add
cmc
cmpb
push
xor
jl
lahf
roll
addr16
mov
cmp
inc
dec
in
js
cs
cltd
adc
cld
test
jo
ficomps
insb
push
cmp
and
fildll
dec
loope
icebp
dec
inc
or
pop
xor
leave
outsl
add
push
jg
or
cld
xchg
popa
shll
and
dec
insl
ja
popa
sbb
rcl
add
xchg
sbb
testl
or
ja
insl
cmp
ja
add
xchg
repnz
push
add
or
dec
lcall
jnp
test
and
sbb
sarb
js
pop
inc
cmp
add
and
out
add
inc
adc
out
dec
push
clc
repnz
mov
ret
push
into
sub
iret
loope
fadds
in
pop
sub
mov
mov
mov
sbb
jne
scas
pop
aam
aam
or
insl
sub
fwait
addb
cmpsb
daa
sbb
add
jns
cmp
gs
sub
loopne
adc
or
xorl
call
aaa
test
or
pop
hlt
add
xchg
add
movsb
nop
mov
aaa
adc
push
or
mov
lods
aaa
push
adc
pop
loopne
add
xor
sbb
push
sbb
stc
cld
push
aad
loope
cmp
mov
and
pop
stos
pusha
push
flds
push
adc
xchg
test
adc
rcll
sbb
push
out
orl
pushf
lret
add
sbb
inc
mov
fs
sub
and
lock
std
sub
or
sbb
in
loopne
outsb
rcll
ja
push
orl
fcompl
push
enter
mov
xor
outsl
or
inc
xorb
add
add
cmp
dec
and
inc
pop
xor
mov
add
flds
pusha
or
cli
clc
sbb
rcl
mov
xor
add
adc
sbb
adc
popf
or
out
fs
in
or
cld
xor
cmp
aaa
adc
gs
pop
xor
shll
mov
das
fnstsw
out
dec
movsl
or
lock
mov
or
sub
pop
stos
sbbl
cmp
les
inc
xor
ja
jmp
adc
clc
xchg
push
and
adc
and
xchg
or
pop
adcl
pop
adc
insb
xchg
pusha
outsb
sbb
mov
sarl
xchg
aad
add
mov
mov
xchg
dec
or
out
push
loopne
pushf
mov
add
jecxz
pusha
mov
add
test
test
lret
enter
and
and
lock
orb
and
fwait
inc
mov
outsl
loopne
mov
shlb
pop
stc
jb
or
ja
std
add
hlt
int3
fwait
jae
and
lods
mov
sbb
mov
dec
aad
fs
movsb
xor
xor
adc
and
jns
cmp
xchg
xchg
sbb
mov
mov
mov
aam
test
pop
mov
mov
in
and
sub
add
nop
test
mov
ficoms
nop
add
aad
arpl
sti
dec
pop
xor
inc
and
mov
or
movsb
xchg
or
arpl
fnstsw
sub
jne
jne
xor
mov
pop
add
andb
jecxz
adc
sub
mov
or
arpl
or
dec
push
outsb
rorb
test
sub
dec
in
clc
xchg
call
aas
jo
sub
push
mov
into
sbb
dec
cmp
mov
push
dec
scas
cld
or
mov
aas
pusha
jecxz
gs
sub
xchg
mov
mov
jne
iret
mov
in
jns
in
mov
outsb
int
test
aas
insl
jns
pusha
hlt
fsubrs
or
lock
add
adc
sbb
sbb
adc
lock
aaa
push
mov
js
cmp
sbb
or
xor
sub
mov
xchg
mov
push
pop
sub
pushf
cmp
test
es
mov
loopne
cwtl
clc
xchg
add
push
inc
adc
movsb
dec
mov
sub
cmp
cmpsl
inc
lock
pmullw
shl
test
sar
stos
xchg
adc
dec
aaa
sbb
ja
mov
inc
xchg
mov
mov
fs
icebp
and
stos
mov
subl
decl
ja
sub
and
scas
outsb
or
hlt
inc
pop
add
dec
mov
add
ja
push
add
jle
or
cmp
xor
enter
scas
ja
lods
pusha
rolb
push
mov
pop
push
and
mov
out
mov
push
test
jle
ud2
aas
loop
in
nop
ljmp
dec
xchg
cld
push
insb
push
sarl
push
and
pusha
or
nop
xor
cli
adc
sbb
fcoms
in
sbb
mov
xorb
std
sbb
jb
rcll
push
pop
add
sub
test
pop
push
fisttpll
aas
dec
insb
cmp
lcall
jbe
add
idivb
lock
outsb
push
leave
ret
add
add
ljmp
push
dec
int3
arpl
mov
jns
ja
cmp
into
mov
mov
mov
stos
adc
ja
std
fisttps
or
ss
sub
sbb
xor
test
inc
jnp
xchg
test
mov
and
fmuls
cmpsb
data16
pop
or
das
mov
es
pushf
cld
lock
mov
inc
je
sbb
es
cmp
mov
ficoml
ja
call
inc
stc
or
test
enter
lods
mov
dec
dec
pushf
inc
js
add
cwtl
adc
push
adc
adc
jl
inc
bound
cwtl
cmp
sbb
nop
pop
add
sub
sub
mov
or
sub
push
nop
int3
sbb
jbe
cwtl
dec
mov
insl
adc
fcomp
adc
imul
xchg
jb
cmp
or
inc
xchg
rol
and
cltd
and
les
pop
leave
dec
sub
sbb
push
scas
dec
adc
sub
mov
adc
test
test
mov
pop
fs
js
shl
add
iret
inc
xchg
jg
icebp
cmp
mov
mov
js
fs
push
loopne
pop
sub
push
jne
roll
in
fnstsw
jae
enter
mov
mov
outsb
or
add
pop
les
outsl
dec
fcomp
sub
adc
cmp
and
push
xchg
or
inc
pop
repnz
inc
subl
rolb
ss
add
out
sbb
inc
jo
cmp
das
outsl
nop
dec
adc
xor
out
in
pop
jbe
cli
call
sbb
lock
push
sti
xchg
pop
test
mov
lods
movsl
adcl
adc
mov
cld
jne
sub
mov
loop
xor
xor
les
xchg
int
jne
sub
cmp
loop
sub
xchg
add
dec
clc
mov
dec
out
dec
movsl
xchg
ja
cmpb
cmpb
or
mov
cmpb
pop
hlt
sbb
cmp
inc
test
insl
arpl
add
xchg
jnp
pop
and
xchg
or
dec
xchg
add
lcall
add
xorl
ret
add
push
aaa
push
loop
and
xor
or
add
scas
dec
inc
mov
out
imul
xlat
movsb
push
add
cmpl
dec
push
adcl
call
shll
mov
ret
xor
push
or
ss
push
push
repnz
pop
add
push
cmp
xor
aas
jmp
inc
add
sbb
pusha
out
add
mov
push
mov
cwtl
repnz
sbb
add
pusha
ret
cmp
adc
mov
ds
mov
and
adc
jae
jp
push
add
xor
xchg
inc
ljmp
and
pop
pusha
mov
add
pusha
pop
add
sub
adc
xlat
dec
push
pop
ljmp
mov
or
mov
ljmp
push
popl
clc
loopne
call
cs
in
or
or
ret
daa
mov
cli
sbb
jb
mov
pop
push
mov
or
ret
pop
xor
dec
pop
push
and
pop
push
stos
or
flds
movb
xchg
arpl
bound
inc
xchg
cld
pusha
ljmp
fsub
aas
ret
inc
sub
pop
stc
repz
inc
push
adc
cmp
adc
cmp
ret
sbb
push
test
daa
daa
ret
insl
imul
and
ds
xchg
fistpl
sbbb
pop
mov
ljmp
test
lret
adc
mov
adc
or
iret
xor
mov
stos
ljmp
mov
push
cld
outsb
push
inc
or
push
mov
enter
lret
mov
add
pushf
in
adc
jo
pop
pop
xchg
and
shl
cmp
and
movb
xor
je
sbb
push
mov
jo
aas
addl
jmp
add
in
adc
repnz
cmpsb
dec
adc
call
push
mov
xor
call
add
add
push
ss
xor
pop
loop
ret
addl
push
in
push
adc
das
and
sahf
inc
orb
dec
ret
negl
pushf
aas
inc
mov
add
xchg
jmp
lods
movsb
and
inc
and
mov
inc
or
jp
jecxz
or
das
mov
lea
mov
sbb
mov
daa
or
ja
sbb
pop
mov
adc
fiaddl
mov
not
addl
aas
popa
out
jnp
fdivr
add
clc
sarb
jl
dec
or
pop
mov
add
pushl
xor
add
je
mov
push
xor
push
and
sbb
hlt
jge
push
sbb
fwait
push
jp
mov
adc
adc
lret
sbbb
pop
dec
inc
add
lret
sbb
addr16
xlat
pop
push
mov
mov
mov
push
xor
into
out
jg
jbe
mov
popf
dec
mov
mov
mov
add
inc
shr
jmp
or
pop
loopne
dec
insl
add
cmpsb
push
pop
xorl
push
imul
sub
pushf
dec
insl
cli
sub
inc
push
mov
mov
add
xor
jmp
sahf
push
push
push
loope
xchg
jmp
out
and
pop
push
xchg
aam
push
jmp
xchg
sbb
jne
sub
push
sti
test
in
fistpll
loop
add
sbbl
sub
inc
and
dec
mov
sub
ss
mov
popl
cmpl
dec
or
xorb
imul
mov
mov
pop
pop
mov
dec
jmp
les
cmp
xor
or
stc
call
push
inc
and
sbb
inc
scas
insb
orl
jmpw
adc
pop
jns
leave
leave
sub
push
popf
adc
cmp
dec
imul
roll
xor
mov
testb
push
rclb
add
leave
dec
hlt
idivl
add
sbb
out
andb
lods
rclb
push
and
subl
xor
and
roll
and
pop
or
je
and
outsb
add
xor
bound
mov
outsb
sbb
pop
xor
fucomip
push
or
mov
stc
iret
inc
out
bnd
or
pop
jmp
dec
fnop
loope
mov
lret
loope
or
ljmp
cmc
ljmp
sub
pop
inc
sub
push
mov
addb
mov
fs
int
in
daa
mov
int
leave
or
sbb
inc
pop
jecxz
cmpsl
jno
mov
xchg
and
fsubs
mov
repnz
rcrl
mov
push
adc
xor
movsb
pop
neg
nop
sub
and
sbb
dec
push
push
mov
sub
dec
out
push
push
es
or
inc
andl
adc
ret
xor
pause
sbb
and
add
and
sub
xor
rol
call
mov
and
pop
gs
mov
stos
mov
push
addl
xor
and
std
or
add
jg
stc
inc
mov
push
adc
or
es
inc
sub
mov
mov
push
lcall
pop
inc
pop
sub
arpl
push
mov
cmp
pop
es
add
shll
sub
aas
ljmp
nop
or
push
bound
pop
adc
xchg
jne
adc
sub
lock
sub
push
add
imul
xchg
sub
into
outsl
cmpsb
pop
jmp
or
xor
push
insb
outsb
lods
popa
lret
and
fildl
fs
push
fs
shlb
sub
inc
cmc
leave
add
pop
cwtl
push
popf
pop
xchg
mov
push
pop
xor
outsl
add
and
sub
xchg
and
in
test
aam
daa
aas
jb
inc
data16
or
xor
lods
pop
pop
jne
lea
jo
movsb
pusha
jl
pop
push
cwtl
loope
mov
sbb
shll
sbbb
xor
add
rclb
aaa
or
jmp
out
adc
and
lret
sbb
pandn
xor
push
ds
sub
clc
or
sbb
shr
add
or
jnp
mov
shlb
pop
aam
std
out
ud1
mov
loopne
sub
pop
pop
push
pop
jns
les
mov
imul
xchg
cmp
rolb
iret
or
pop
add
arpl
jmp
popa
sub
inc
subb
adc
jmp
lods
add
push
push
mov
sub
push
dec
push
add
inc
and
and
pop
negb
push
fnstenv
and
out
jbe
aam
and
sub
xor
push
inc
and
push
divl
call
xchg
ret
mov
xchg
push
scas
lcall
addr16
sbb
aaa
lock
sub
inc
pop
push
popf
mov
std
mov
sub
push
ds
pop
mov
ret
or
sbb
jbe
mov
ljmp
push
dec
push
inc
shlb
shll
pop
es
sub
repnz
into
subb
xor
sub
lods
jnp
add
sbb
mov
incl
mov
sub
repnz
or
mov
testl
inc
mov
rclb
adc
adc
inc
or
cmpsb
adc
rcll
jmp
pop
jns
pop
and
jb,pn
add
cmc
jmp
out
pop
add
cwtl
negl
xor
mov
or
mov
aad
pop
movsl
es
pushf
es
mov
loopne
pop
add
gs
loop
push
push
lcall
jmp
dec
jge
push
ds
loope
add
push
dec
add
rcrb
pop
cwtl
dec
adc
jns
mov
sub
nop
jne
cli
pop
push
pop
inc
stos
xor
pop
jp
enter
inc
out
push
cmpb
sub
pop
inc
shrb
arpl
out
pop
dec
xchg
mull
fnop
into
push
push
inc
int
or
inc
and
movsl
ljmp
ret
out
sub
lock
add
aas
out
adc
loopne
inc
addr16
insb
adcl
in
cmp
adc
jmp
dec
leave
push
push
les
xchg
jo
jmp
repz
fcoms
add
add
daa
pop
sub
pop
idiv
sbb
cmp
js
inc
das
push
and
cmp
add
pop
dec
adc
inc
jle
adc
pop
push
lods
xor
fsubs
popa
out
stos
or
ss
pop
sub
pop
xor
jecxz
xor
xor
xchg
and
inc
and
and
addb
add
addl
and
outsb
ret
push
gs
xor
cld
push
dec
jl
pop
out
rcll
insb
fmulp
jns
or
push
xor
xor
push
bound
in
adc
das
pop
xchg
loope
aaa
es
push
ret
js
mulps
aad
jecxz
inc
scas
mov
mov
mov
mov
pop
or
sub
push
loop
mov
test
fisubrs
pop
jb
pop
jecxz
xchg
push
shll
call
popa
jbe
adc
push
jle
int3
xor
mov
xchg
or
adc
mov
ds
dec
insl
dec
or
xor
daa
adcb
leave
shrl
test
dec
loop
sub
dec
imul
stc
sub
arpl
mov
pop
xor
adc
std
xchg
cltd
xchg
bound
add
fisubs
scas
adc
cmp
jae
mov
rcll
bound
sbb
add
mov
scas
adc
rol
pop
stos
sbb
add
mov
fsub
mov
pop
shll
neg
shl
sub
push
mov
mov
movsl
sub
pop
andb
sti
ror
dec
mov
mov
lret
mov
mov
and
mov
push
rcl
dec
mov
or
push
aam
adc
mov
out
xchg
stos
dec
cli
mov
sbb
xor
jg
mov
dec
push
xor
cmp
xchg
add
jp
movsb
scas
aas
sbb
jno
xor
and
push
add
cmp
int
loope
push
movsb
and
sahf
fimull
ljmp
repnz
enter
subb
xchg
jnp
push
inc
xor
push
ret
inc
ja
divps
cli
inc
dec
aam
and
call
fldcw
mov
test
jbe
mov
jo
dec
cmc
push
jnp
hlt
inc
mov
and
decb
vpsubb
lcall
cmpl
mov
not
add
sub
dec
add
pop
outsl
add
push
pop
xlat
add
jo
jb
lret
cli
imul
mov
movl
pop
pop
call
mov
push
or
mov
push
sbb
mov
sub
push
jnp
in
loop
negb
daa
in
xor
push
cmp
adc
mov
movsl
jns
xorb
fldl
jbe
add
push
enter
int
cmp
sub
pop
orl
dec
fistpll
jno
mov
shlb
push
lods
in
adc
orb
add
shlb
pop
cwtl
mov
xlat
lcall
jg
nop
ja
aam
pop
dec
xor
shl
lret
sbb
pop
dec
mov
pop
dec
jne
ja
leave
cmpsb
pop
push
cmp
icebp
push
sub
mov
pop
fwait
sbb
shr
push
inc
push
pop
sbbb
pop
adcb
add
pop
add
cmp
dec
and
mov
mov
sbb
ss
leave
flds
pusha
push
ljmp
add
mov
ret
xchg
or
hlt
mov
cmp
lret
lcall
add
orb
adc
jmp
add
inc
jp
ja
cmp
lock
gs
in
lock
in
in
push
and
pop
cmp
cs
int
stos
div
jmp
fstp
aad
pushf
xor
mov
push
inc
push
lret
cmpsb
bound
jle
mov
faddl
sub
and
adc
sub
lret
insb
std
mov
mov
push
add
push
jbe
fldcw
cld
or
pop
fs
adc
out
pop
mov
cmp
dec
mov
aaa
add
pop
push
inc
leave
popf
mov
push
xlat
sub
pop
icebp
push
fsubp
inc
mov
pop
xchg
shll
xchg
imul
dec
sbb
xor
push
mov
xchg
add
sub
jmp
scas
ret
xor
sti
sub
inc
pop
push
and
repnz
ja
mov
add
aaa
ret
fsubr
xor
sub
dec
cmp
add
jns
and
movsb
push
cmp
add
pop
pop
int3
or
mov
lods
in
pop
push
fsubrl
add
jne
mov
sbb
sub
inc
out
mov
cmpsb
loop
lar
pop
in
jmp
loop
adc
call
das
push
jno
fwait
sub
subb
inc
add
fsubr
or
icebp
jbe
add
bound
xor
pop
or
shr
shlb
mov
cmc
int3
jecxz
push
icebp
pop
push
jp
pop
xchg
out
or
push
cmpsl
rolb
xchg
adc
mov
pop
xchg
xor
and
add
pop
inc
shr
xchg
xlat
xor
or
sub
or
add
mov
and
inc
pop
jmp
bound
and
ljmp
xor
pop
push
push
popa
mov
add
out
add
shl
push
push
rorb
pop
sub
pop
sub
jne
ret
dec
loop
scas
pop
not
add
xor
jo
lret
loopne
loop
xor
neg
shll
enter
les
add
fidivl
add
mov
fisubrl
pop
rcl
jo
push
xchg
and
sub
rorl
push
push
sbb
jmp
sarl
je
push
jns
sub
cmc
leave
loopne
sub
pop
pop
xor
jns
xchg
movl
jbe
push
shrb
push
xor
and
pop
pop
js
popf
lock
xchg
push
fsubs
mov
xor
cld
aaa
xor
pop
rcrl
daa
inc
lods
addb
sub
cmpsb
rcl
jmp
and
lea
hlt
xchg
pop
xchg
and
or
call
stc
pop
xchg
ljmp
repnz
sub
xchg
sub
rorb
dec
cmpl
add
ljmp
je
loope
push
push
cmp
loopne
out
mov
or
call
jmp
mov
adc
pop
push
add
or
insb
pusha
add
adc
repz
leave
adc
adc
push
sahf
adc
pop
out
sbb
mov
jae
push
adc
mov
andb
add
sbb
mov
add
mov
adc
add
push
mov
mov
jnp
mov
stos
movsb
pusha
test
adc
arpl
in
adc
xorb
inc
aad
push
add
jle
mov
fwait
imul
lock
lcall
ljmp
or
and
shlb
cmp
push
mov
inc
loope
gs
fdiv
cmp
xor
push
mov
sub
ja
and
push
jne
add
pop
sub
push
push
bnd
dec
fcompl
xchg
and
xchg
cmp
mov
lret
in
inc
xchg
pusha
push
ss
push
push
cmc
cmp
sub
shl
adc
mov
pop
out
pusha
pop
clc
and
xlat
push
xchg
and
jbe
mov
push
jmp
fsubrs
add
add
movsb
sub
pop
movzbl
rorb
xor
fld
push
fistpl
lret
pop
pop
addb
ret
outsl
roll
and
add
xlat
mov
sub
adc
rclb
add
into
jmp
loopne
out
jbe,pn
xor
pop
and
aad
and
mov
fcompl
jmp
mov
inc
addr16
pop
in
push
inc
loope
pop
jmp
loop
orb
insl
lret
dec
popa
adc
pop
add
add
shll
or
adc
test
jb
push
rcrl
and
jnp
mov
adc
or
pop
jmp
or
xor
and
or
shl
mov
jmp
aaa
enter
cmc
inc
lahf
and
or
push
mov
test
add
fs
xchg
jecxz
mov
test
pop
sub
push
lret
dec
and
jb
sarb
cmc
decb
or
xor
arpl
add
inc
mov
sub
enter
jb
sbb
mov
hlt
lcall
xor
cs
insb
adc
cmp
fs
js
pop
push
push
andps
jl
cmp
movsb
outsb
rol
mov
jmp
int3
mov
sub
dec
divb
sti
add
pop
xor
mov
xor
pop
sbb
sbb
lret
nop
push
xchg
jno
shl
push
mov
loopne
popf
pop
idivb
rclb
xchg
push
adc
inc
push
jecxz
fisubrs
xlat
aad
or
inc
or
movb
cwtl
jae
negb
arpl
xchg
mov
clc
push
repz
sbb
adcb
add
xor
adc
push
push
inc
adc
push
add
jns
notl
jmp
shl
or
loopne
sarl
addl
stc
mov
cmpsb
shl
and
in
shl
out
shl
add
xchg
cmp
push
jnp
pop
cwtl
ss
add
dec
mov
rcl
mov
pop
dec
adc
pop
and
pop
add
cmp
add
mov
clc
jbe
lcall
daa
inc
sarl
stos
push
mov
dec
jg
mov
push
in
push
sbb
stc
or
adc
rol
pop
rcrl
out
xchg
test
xorb
lds
call
mov
xchg
mov
sbbb
jae
adc
clc
push
xchg
push
or
out
add
inc
pushf
cli
sub
jmp
mov
data16
or
cmpl
add
dec
not
sub
sbb
pusha
mov
cmp
lock
or
jge
and
stc
add
out
xor
xor
cli
jo
jbe
or
fmuls
sub
out
xchg
xadd
sub
hlt
sahf
xor
mov
dec
sub
xchg
and
mov
dec
not
sub
jae
pop
lcall
sub
xor
xchg
shl
out
mov
mov
dec
and
mov
sub
mov
shl
xchg
or
jno
lret
pop
and
or
pushf
dec
aad
add
xor
jmp
call
push
pop
mov
dec
imul
outsb
adcb
push
adc
ss
jecxz
inc
or
pop
cwtl
insl
xchg
or
test
stc
mov
data16
or
mov
jl
out
inc
push
cmp
or
or
sarl
pop
cmp
rclb
nop
addb
xor
push
nop
fldl
jno
icebp
test
les
cld
pop
add
xchg
inc
jmp
dec
adc
addl
sub
icebp
push
xchg
enter
fnstcw
pusha
cmp
filds
mov
jg
ficompl
inc
jle
lret
sbb
mov
mov
add
movsb
lahf
orb
fdivs
xor
inc
cmpsl
pushw
xchg
xchg
xchg
jbe
adc
mov
mov
daa
or
push
inc
mov
lods
adc
sub
push
pop
sbb
sbbb
enter
fists
decl
test
jl
lods
adcl
loop
xchg
pop
push
pop
or
mov
arpl
xlat
xor
xor
fldcw
adc
or
dec
imul
or
je
add
pop
cltd
nop
pop
add
add
jle
gs
inc
sub
stc
pop
pop
shr
mov
lods
mov
pop
je
dec
ds
vpsadbw
add
fadd
mov
dec
pop
sub
inc
xchg
dec
insb
xchg
cwtl
test
pusha
subb
inc
cmp
bound
jb
daa
lods
loopne
or
pop
pop
or
cmpsl
inc
and
popf
push
pop
dec
bound
add
jl
cmpsb
jle
sub
cmc
test
or
fistl
pop
lea
or
xchg
mov
inc
dec
lods
in
mov
xchg
sub
shll
add
lret
push
adcl
jns
rolb
adc
xlat
pop
push
mov
mov
pop
pop
push
iret
loop
adc
jmp
sbb
mov
out
inc
push
inc
movsb
les
popa
fdivr
mov
sbb
lcall
push
mov
aad
jecxz
iret
jmp
aaa
loopne
sbb
mov
inc
daa
fcmove
pop
pop
inc
push
mov
stc
sub
lret
mov
jno
push
pop
paddsb
pop
pop
data16
push
jmp
pop
push
pop
dec
inc
repnz
fildll
mov
imul
add
xlat
sbb
insl
pop
push
push
pop
push
xchg
adc
cli
icebp
push
out
sti
enter
push
sub
or
sub
pop
xor
gs
insl
sbb
push
mov
xor
les
repz
rcll
mov
xor
adc
mov
ret
jb
movsl
add
cmp
mov
mov
xchg
enter
mov
je
mov
push
aad
loop
push
into
or
lds
stos
leave
xchg
sar
leave
ret
sbbl
cli
or
repz
mov
stc
sbb
daa
inc
jmp
js
ljmp
repnz
jmp
stos
inc
adc
push
scas
push
ror
add
orb
and
add
repz
dec
xor
jle
jl
pop
sub
arpl
cld
out
jl
push
push
inc
sti
sub
cmp
cmpsb
pusha
cmp
outsb
fcoms
fmull
and
or
gs
xor
sarb
pop
outsb
jg
mov
pop
sub
mov
lods
pop
push
mov
sub
add
jecxz
sub
add
sub
sub
adc
adc
push
add
insl
sub
not
shl
sbb
push
fdiv
shll
repnz
pop
adc
pop
in
mov
sub
or
mov
pop
pop
iret
add
addb
sub
mov
add
jmp
add
pop
inc
hlt
adc
enter
icebp
mov
pop
add
add
and
call
sbb
and
inc
cmp
pop
jmp
cs
jl
xchg
adc
jmp
pop
fwait
ss
mull
add
jbe
xor
roll
xlat
pop
or
sbb
pusha
mov
inc
movd
inc
mov
lret
xchg
adc
outsl
or
xor
mov
rolb
add
add
jbe
das
push
sti
sahf
outsl
inc
push
mov
mov
sub
cmp
orl
adc
push
movl
pusha
mov
aam
xchg
insb
leave
push
clc
popa
dec
lret
data16
add
les
enter
sbb
dec
dec
test
mov
inc
mov
add
xchg
jae
std
mov
orb
or
sub
mov
in
dec
add
push
jne
ret
cmp
pop
mov
insb
or
test
arpl
xor
fwait
xchg
jle
repz
je
fcomps
shr
pop
add
int3
arpl
dec
pop
popa
rcr
push
pushf
jmp
push
jnp
sub
subps
sti
or
ret
or
dec
pop
fxch
cmpsl
or
lods
shr
pop
adc
sub
popf
add
stc
sub
loop
push
idivb
ret
xor
pop
xchg
or
jg
aam
ja
jp
andl
mov
mov
inc
adc
xorb
push
pop
jmp
call
mov
sub
or
or
xor
pusha
cmpsb
add
gs
mov
and
add
ret
enter
into
push
push
gs
mov
sub
pop
cmp
out
inc
jmp
jb
loope
les
and
flds
pop
nop
cmp
mov
outsb
push
scas
adc
push
int
imul
sub
xor
sub
repz
xchg
faddl
fistps
push
notl
xor
mov
push
xchg
mov
subb
inc
xchg
dec
or
push
and
mov
aaa
xchg
pop
mov
fadd
out
pop
and
cmp
dec
mov
or
ret
jmp
fsubs
sub
ret
sub
and
sub
push
add
sub
cwtl
ret
shrl
jecxz
and
push
mov
xchg
cmc
or
push
sbb
xor
stc
insb
and
sti
mov
shrl
or
push
xor
cmp
lret
and
mov
je
outsl
mov
test
or
push
dec
icebp
sbb
mov
mov
xlat
jns
das
adc
int3
ja
add
sub
ljmp
cmp
adc
and
sahf
push
dec
out
lret
add
aaa
push
outsl
dec
mov
adcb
decb
cmpb
xchg
sub
jg
adc
or
jb
sbb
lret
push
pop
scas
addr16
push
mov
push
loop
push
pop
ja
cmp
cmpb
jl
jmp
pop
mov
mov
movsb
icebp
mov
imul
xor
jge
sub
jmp
mov
mov
xchg
pop
cmp
xchg
in
push
lods
iret
aam
xlat
clc
mov
or
fimull
jge
xor
adc
add
aas
mov
repnz
xor
or
mov
or
add
pop
sarl
call
and
outsb
dec
test
add
xchg
daa
or
inc
mov
sub
pop
pop
cwtl
jb
outsl
pop
rorl
push
pop
xor
outsb
sahf
dec
dec
mov
nop
pop
mov
ss
or
add
punpckhdq
jmp
mov
xchg
loope
fstp
in
or
xor
xchg
push
repnz
les
jo
in
add
add
mov
xor
rol
jmp
sub
xor
mov
div
adc
and
aas
lcall
cmp
in
outsb
shrl
pop
adc
push
or
bound
push
rcl
cwtl
neg
icebp
push
mov
push
and
adc
xchg
pop
aaa
jecxz
push
jno
mov
mov
inc
mov
data16
and
add
loope
add
push
mov
dec
adc
lcall
mov
test
and
insl
lods
fwait
pusha
jle
sbb
mov
push
iret
add
mov
dec
jmp
and
adc
rcrb
ljmp
inc
push
sbb
pop
jns
sbb
inc
xchg
push
cmp
push
dec
push
aam
jmp
push
pop
int
add
jmp
sahf
leave
mov
pop
xchg
add
mov
shl
xor
adc
dec
int3
pop
mov
js
push
insb
add
repnz
dec
dec
adc
push
rclb
leave
inc
in
pushf
ljmp
inc
xor
sub
or
scas
xor
jmp
push
pop
mov
pop
and
and
and
cltd
nop
push
push
inc
mov
les
jecxz
mov
nop
push
or
cmc
add
push
add
rolb
mov
mov
push
stc
cs
pop
push
push
cmp
xor
push
push
ret
int3
mov
sbb
enter
mov
loop
dec
enter
adc
add
push
ss
shr
add
sub
xchg
xchg
jmp
xor
pop
pop
pop
daa
in
and
add
popf
sarb
adc
sub
jmp
mov
scas
sub
imul
data16
out
jns
sarl
loope
push
dec
jp
and
mov
daa
add
rorb
fidivl
in
cmp
aam
jmp
mov
das
sbb
mov
xchg
add
enter
xchg
aas
or
push
fnstsw
out
dec
and
out
nop
mov
pop
inc
scas
cmc
pop
test
add
xchg
or
addl
jns
mov
adcb
sbb
push
xor
or
jbe
sbb
pusha
into
pop
xor
xor
shl
add
dec
mov
add
incb
pop
or
mov
or
adc
jae
add
pusha
xor
mov
out
mov
neg
push
adc
sub
shr
std
adc
push
push
out
loop
and
fldz
push
ror
jmp
sbb
ss
repnz
fucomi
das
pop
mov
imul
ret
sub
xchg
pop
xchg
jns
jp
daa
push
insl
mov
adc
icebp
mov
add
mov
imul
add
lock
or
inc
dec
fdivl
cmp
mov
jne
push
mov
aas
lods
loopne
or
cwtl
cmp
push
pop
rorl
int
sub
push
push
xor
push
cmp
inc
mov
xor
bound
xor
or
loop
sub
adc
cli
popa
enter
stos
dec
xchg
jmp
mov
add
gs
icebp
rcr
sbb
mov
mov
add
pop
sub
mov
xchg
pop
loopne
add
sub
jg
xor
xor
mul
mov
adc
inc
inc
adc
jmp
and
mov
sarb
shl
add
xor
dec
and
loop
jle
add
mov
lock
pop
sub
sub
loope
lcall
pusha
aas
dec
inc
mov
push
testb
fildl
xchg
arpl
test
push
cld
jne
in
mov
mov
inc
dec
lods
or
xlat
xor
push
dec
or
adc
jle
je
dec
cld
jle
adc
lock
cmp
rcl
repnz
movsb
mov
scas
add
add
adc
cmp
bound
out
mov
mov
push
xor
out
cwtl
pushf
inc
add
fdivrs
add
pushf
adc
jno
xchg
mov
cmpl
addb
xchg
mov
mov
add
push
jp
cmp
mov
andl
mov
jae
lods
loope
outsb
push
je
xor
insb
or
adc
mov
mov
in
divl
stos
dec
notb
jns
and
mov
jmp
mov
xor
dec
and
lods
shr
add
xchg
pop
sub
out
push
pop
mov
or
push
mov
pop
rorb
add
nop
shll
mov
jl
and
sub
sbb
inc
inc
cmp
push
or
xchg
lds
mov
xlat
and
rcll
js
movaps
cmp
test
loope
aaa
imul
in
xor
not
or
insb
fidivs
pop
sub
and
jmp
idivb
or
sbb
idivl
or
adc
shl
push
mov
pop
je
mov
lock
mov
adc
mov
cmp
add
stc
jl
sub
pop
add
mov
int
ffree
insb
sbb
pop
jmp
mov
push
out
fs
cmc
leave
mov
add
and
dec
xlat
imul
jno
xor
ds
jl
add
dec
mov
mov
roll
inc
push
leave
and
or
and
push
icebp
js
cld
aas
jae
or
rolb
push
cs
loope
jl
dec
add
cmp
es
or
pop
cmc
xchg
add
shr
or
mov
arpl
pop
sbb
enter
test
daa
pop
inc
xor
fdivs
sahf
or
mov
sbb
mov
in
cmp
or
sar
pop
xor
add
dec
add
shr
pop
add
sub
add
cmp
movsl
inc
add
or
add
scas
dec
stos
pop
ss
dec
xor
push
jle
pop
jle
jp
mov
sbb
adc
daa
daa
imul
inc
dec
in
pop
add
pop
mov
or
pop
cltd
leave
jmp
mov
movb
into
sub
sub
test
ss
jl
sub
ljmp
mov
loope
pop
push
pop
insb
fwait
ret
rcrl
mov
aaa
dec
and
inc
jmp
pop
sbb
fmull
mov
jge
mov
dec
test
inc
or
pusha
stc
stos
fidivl
sahf
push
push
lret
adc
sbb
adc
inc
outsl
adc
insb
xlat
sbb
out
mov
lret
pop
and
xchg
leave
mov
sbb
aaa
adc
lods
sbb
add
dec
mov
cmp
pop
lcall
lods
and
dec
inc
xorl
mov
jbe
mov
jp
push
shl
gs
mov
stc
cmp
sbb
cli
and
js
mov
in
addb
push
not
inc
popa
xor
gs
jo
sub
shlb
test
inc
ror
mov
pop
sub
out
popf
xchg
repz
dec
scas
adc
inc
sub
mov
stos
and
xchg
add
cmc
pop
das
jnp
dec
rclb
pop
aam
xor
call
lcall
test
sub
cltd
cmpsb
rcrb
repnz
stos
icebp
decb
cmp
mulb
push
mov
insl
sub
leave
cmp
sbb
rep
adc
pop
es
jae
cli
leave
add
jmp
dec
div
call
aaa
loopne
mov
push
or
mov
push
xchg
je
gs
jmp
addb
lahf
leave
daa
cwtl
rcr
sub
mov
fisubl
jns
mov
cmpb
pop
rcrl
in
inc
xchg
adc
enter
add
pop
xchg
mov
pop
rclw
mov
adc
ret
sbb
sub
jmp
pusha
dec
cltd
add
sbb
jmp
xchg
push
xor
enter
add
add
shrb
imul
mov
lahf
mov
pop
out
mov
push
mov
into
push
mov
jecxz
cmp
push
js
add
xchg
jmp
push
cwtl
jo
in
xchg
cmpsb
pop
or
movsl
dec
lds
push
push
and
jno
in
outsb
cltd
jne
dec
dec
clc
sbb
adc
push
pushf
stos
leave
faddl
mov
add
mov
je
sbb
cld
aas
out
adc
pop
stos
sub
push
adc
mov
cli
outsl
pop
push
mov
or
fcomps
imulb
and
lock
cmpsl
or
push
out
inc
in
xor
sub
in
adcl
cwtl
and
mov
sbb
xor
xor
jg
cmp
pop
mov
lret
test
sub
mov
sub
jmp
shl
inc
enter
mov
mov
push
fsubl
loope
or
pop
and
jnp
outsb
adc
mov
cmp
inc
push
mov
add
fiaddl
dec
cwtl
cmc
or
sub
sub
or
cmp
pop
inc
test
add
dec
sub
rolb
not
push
mov
dec
push
loop
push
mov
add
sub
or
ret
fcmovb
ljmp
es
push
jnp
and
cmp
add
scas
add
push
xchg
push
adc
xchg
xchg
add
call
xor
into
xrelease
ss
mov
dec
sbb
roll
push
mov
pop
sbb
call
mov
add
movlps
inc
xchg
inc
add
mov
pop
sub
repz
inc
push
insl
mov
stos
xor
xchg
add
xor
jmp
andb
xchg
negl
sub
pop
lock
sbb
fildl
adc
push
scas
and
sub
daa
add
sti
add
mov
cmpb
pop
adc
movsb
jge
inc
repnz
mov
xchg
adc
mov
push
add
mov
shll
mov
inc
cwtl
ret
xor
mov
push
inc
xchg
pop
std
scas
adc
test
fwait
xor
adc
or
aad
push
push
add
jmp
cmpsb
insb
or
mov
or
adc
sbb
dec
xchg
subb
out
add
adc
inc
or
in
dec
hlt
or
adc
cmp
sub
pop
or
or
cmp
dec
xchg
add
test
in
inc
js
dec
ficompl
jge
cwtl
mov
sub
stos
and
dec
cwtl
push
jo
sahf
repnz
mov
add
push
and
add
arpl
adc
xlat
and
add
pop
push
sub
outsb
or
adc
sub
dec
push
add
repz
or
dec
outsb
push
cs
add
or
out
jae
rolb
fadds
mov
add
pop
imul
jmp
in
jno
cwtl
pop
push
lock
mov
or
xor
or
ret
adcl
dec
inc
ret
jbe
outsl
mov
add
and
lret
or
test
fisttpl
mov
les
jp
xor
sub
dec
dec
and
ljmp
mov
addb
push
aas
test
xor
lds
adc
pop
or
cli
cmp
outsl
push
dec
pop
lret
or
inc
lahf
fwait
xchg
aas
mov
cmp
adc
jb
fst
sub
mull
mov
sub
jecxz
daa
js
rorl
push
push
lock
out
pushf
xchg
mov
popa
add
mov
push
lods
jne
outsb
lret
fs
lret
popa
push
push
xchg
xchg
jmpw
push
mov
xchg
insb
sti
xor
jb
jne
mov
xchg
pop
and
push
add
ja
add
sub
out
adc
fdivl
data16
inc
and
add
push
bound
loope
sbb
lods
add
aad
fldcw
repnz
movd
mov
mov
ljmp
mov
sub
nop
pop
mov
mov
sub
xchg
ret
adc
pop
inc
push
mov
stos
test
mov
inc
es
mov
jge
js
imul
dec
add
clc
mov
pop
sarb
pop
mov
inc
data16
iret
xor
add
adc
adc
adc
fmuls
add
movsl
or
pop
xor
inc
stos
or
mov
js
add
xchg
bsf
out
cltd
rolb
into
push
xor
fdecstp
rcrb
lods
mov
je
xor
out
pop
out
dec
iret
cld
xor
xor
pop
or
dec
leave
jns
outsb
sbb
sti
lock
push
addr16
push
jb
icebp
cmpsb
out
imul
in
arpl
roll
orb
dec
ss
xlat
movsb
jnp
inc
dec
lea
bound
sbb
add
sub
mov
aam
xchg
ret
xchg
add
add
aad
or
call
push
mov
add
jmp
push
push
movsl
xor
ljmp
lds
sbb
sbb
adc
jno
add
fninit
pusha
mov
lahf
addr16
mov
push
push
mov
sbb
fcmovne
insb
xor
add
cltd
icebp
lcall
cmp
push
sbb
aaa
pop
mov
xchg
push
mov
sahf
push
ja
jmp
movsl
mov
mov
mov
pop
add
lret
jg
out
int
push
jmp
mov
aas
add
aaa
jmp
inc
jl
sbb
add
cmp
jecxz
jg
inc
push
jmp
bound
mov
fdivl
sbb
das
xchg
inc
adc
or
jmp
cmp
movsb
into
movsb
inc
or
jg
pop
or
loop
fldl
inc
add
jmp
pop
sbb
cmp
add
dec
clc
in
or
fldenv
rcr
cmp
mov
leave
and
and
popf
pop
mov
or
mov
movsl
movsb
in
imul
mov
mov
xor
ljmp
pop
push
push
pop
pop
cld
or
js
loop
sub
xchg
cltd
or
enter
push
xchg
pop
andl
push
mov
mov
imul
push
pop
dec
mov
in
sub
fcoms
pop
into
xor
ficoml
das
mov
leave
adc
and
call
xchg
fistps
or
add
imul
fs
xlat
xchg
insb
xchg
decb
jmp
das
clc
jmp
out
mov
je
add
cld
mov
stos
jmp
ds
xor
mov
aad
popa
lahf
xlat
sub
shl
add
subb
out
and
mov
sub
push
jmp
xor
push
pop
jb
rclb
fidivl
test
pop
add
lret
and
xchg
leave
out
in
cs
push
sub
icebp
call
mov
xlat
or
lahf
inc
xchg
test
pop
jmp
and
call
ljmp
loop
inc
stos
jnp
inc
inc
stc
add
bound
mov
inc
dec
cmp
std
pop
popf
adc
lods
fnsave
jae
push
add
pop
or
push
sub
sub
pop
sub
add
out
inc
arpl
mov
pusha
shll
mov
jmp
sti
scas
pop
jne
nop
mov
push
loopne
lahf
mov
jmp
sbb
jmp
add
push
add
cwtl
cs
mov
ds
inc
add
arpl
pop
incl
nop
push
push
mov
testb
xor
xor
addb
jp
imul
out
sbb
roll
xlat
push
gs
cmpsb
lretw
xor
sub
xchg
pop
jg
popa
and
add
call
xchg
testl
push
mov
lret
inc
dec
scas
jmp
xor
adc
clc
mov
cwtl
and
mov
xor
mov
inc
and
insl
push
jmp
scas
and
data16
lcall
and
pop
or
push
jl
sbb
pusha
iret
sub
mov
cmp
notl
add
pusha
jmp
and
dec
adcb
inc
movb
adc
popf
cmp
sbb
loop
fstps
sbb
push
sub
stos
mov
jmp
ljmp
adc
xor
mov
push
push
sub
popf
ds
and
ds
push
inc
or
lock
inc
jecxz
jle
or
aas
jmp
daa
repz
lcall
xchg
mov
mov
inc
pop
enter
inc
orb
xor
movsb
out
fadd
nop
mov
mov
push
jmp
and
fsts
pop
sub
or
adc
loop
test
sbbl
mov
inc
or
mov
dec
enter
dec
xchg
fnsave
in
sbb
pop
mov
sbb
mov
hlt
loop
xchg
xchg
adc
bound
hlt
leave
or
call
aas
es
nop
or
push
jl
dec
cli
or
push
xor
adc
cwtl
repnz
ljmp
dec
sbb
jns
clc
sti
pop
fcmovnb
es
cmpsb
adc
movsl
mov
add
cmp
ja
ret
out
add
es
rclb
push
shrb
pop
push
loope
cwtl
add
mov
test
loop
pop
push
cli
xchg
pop
aam
arpl
into
add
cmc
sub
daa
mov
inc
aam
gs
pop
adc
aam
add
insw
sbb
les
or
mov
lret
mov
fsubrl
daa
mov
addb
lcall
add
cmpsl
and
aas
jl
orl
cmp
arpl
jg
sub
cmc
push
ficompl
mov
out
dec
add
clc
and
xor
hlt
push
leave
loopne
jmp
cmp
incl
loope
push
push
mov
mov
sub
sub
rcrl
mov
xor
jg
push
shl
cmp
mov
mov
je
push
push
xchg
fadd
sub
testl
out
in
inc
cmp
orb
or
test
mov
and
sbb
fisubl
dec
xchg
adc
mov
sbb
and
mov
cmp
loopne
add
cwtl
add
pop
std
xchg
test
mov
daa
aam
xchg
add
xor
mov
and
or
jae
in
aad
adc
leave
ret
pushw
xor
lods
mov
out
pop
es
or
cld
dec
outsl
adc
add
push
push
add
or
add
lret
dec
inc
mull
or
push
add
push
sub
cltd
cli
adc
pop
add
pop
push
in
sub
sbb
nop
mov
jge
and
repz
xchg
sbb
lds
pop
shl
mulb
in
adc
cld
loop
pop
add
imulb
rclb
push
mov
jae
mov
or
js
sbb
sbb
gs
cwtl
movsb
add
rorb
mov
pop
xchg
jle
outsl
sub
add
push
adc
stos
cmp
sub
pop
and
add
dec
jl
pop
test
imul
cmp
xchg
mov
inc
int3
xchg
les
roll
int3
or
lds
bound
mov
ja
ficomps
and
scas
je
ret
outsb
adc
push
adc
dec
mov
sub
ret
js
nop
fisubrs
dec
insl
mov
daa
push
or
pop
inc
pop
inc
mov
les
and
movsl
add
xchg
xor
rcll
push
sbb
sub
jge
pop
jmp
push
cmp
pushf
push
mov
rcrl
loop
sub
mov
add
inc
fildl
push
stos
loop
sbb
call
lods
and
nop
bound
cli
dec
cmp
add
jge
loope
pop
xor
repnz
inc
push
add
push
cli
push
fdivrs
sub
add
or
push
pop
push
or
pop
push
add
ret
jnp
out
das
negl
or
fcoms
mov
mov
daa
or
lret
push
in
stos
mov
dec
pop
clc
testb
popf
popa
push
sub
mov
or
xor
adc
xor
js
xchg
inc
push
adc
pop
jmp
popfw
push
js
inc
add
add
mov
jnp
mov
add
and
or
int
out
hlt
pop
add
enter
pop
pop
push
mov
or
clc
test
xchg
mov
daa
mov
bound
aad
popa
ljmp
neg
pop
or
lret
cs
das
roll
xchg
arpl
inc
ret
stc
mov
pop
scas
and
add
lret
adc
xor
roll
fcomp
lods
aam
jle
xor
mov
pop
add
loop
inc
sub
incb
jmp
loopne
add
push
push
inc
cwtl
cmpsb
dec
sub
aas
push
sub
into
pop
mov
and
pop
mov
negb
lods
shll
mov
push
pushf
sub
cmp
jmp
inc
insb
ret
stos
xlat
repz
jle
imul
cmpb
pop
xchg
or
xorb
das
cmp
outsl
iret
xchg
sub
lret
or
outsl
jnp
jbe
cmp
cmp
cmp
movsl
mov
inc
push
gs
inc
call
mov
xchg
and
add
sub
adc
push
lahf
hlt
xchg
dec
push
fisttpl
dec
outsb
mov
cs
xlat
jmp
movsb
lods
loope
dec
dec
dec
orb
rorb
fiadds
adc
jns
mov
rorl
enter
pop
xchg
jecxz
pop
incb
xchg
push
jp
mov
add
jmp
add
push
mov
and
daa
and
popa
sbb
mov
push
das
mov
fdivrs
dec
or
push
pop
push
or
push
nop
adc
ret
dec
or
mov
mov
jecxz
push
pop
dec
das
jmp
cmc
cs
jmp
xchg
mov
xchg
push
mov
inc
push
dec
dec
jns
out
pop
push
div
loop
shlb
and
cmp
or
sti
xchg
pop
mov
adc
adc
in
clc
call
lahf
lds
jp
es
leave
gs
test
inc
push
sub
ss
adc
in
mov
cwtl
sbb
pop
hlt
dec
sahf
add
and
sub
faddl
fcomps
nop
add
lods
out
pop
pop
jbe
cs
jo
mov
add
jno
int3
mov
dec
mov
test
mov
add
xor
jns
mov
divl
xchg
pop
add
popf
add
xor
jae
or
pop
mov
out
lods
rcr
imul
add
ret
out
gs
lods
les
sbb
sbb
cmp
add
shr
dec
cwtl
xchg
add
rcrb
xor
xchg
test
fdivl
pop
js
push
dec
pop
loopne
push
pop
divl
jle
mov
or
inc
popa
cmp
add
xchg
call
xchg
test
std
or
dec
les
jae
jne
ds
jmp
adcb
add
and
adc
enter
mov
push
inc
pushf
mov
or
jge
lods
ret
pop
inc
je
stos
push
fdivs
sub
cwtl
and
sub
mov
mov
repz
dec
aad
aam
add
je
dec
hlt
mov
lret
notl
pop
fisttpll
std
jmp
fwait
lods
jo
nop
inc
rcl
pop
addb
es
pop
mov
in
cmp
pop
cmpsl
mov
jmp
flds
loop
push
jecxz
and
shl
orb
mov
sub
or
mov
pop
call
imul
cmp
adc
js
sbb
in
and
sub
lret
shr
js
jns
pop
pop
mov
sub
xchg
jecxz
mov
xor
jo
sbb
mov
test
rol
push
sahf
push
xchg
pop
cs
jp
cld
repnz
push
stc
adc
ret
push
pop
enter
and
jmp
add
popf
push
loope
out
and
cmc
mov
insb
or
xchg
or
cmpsb
mov
xchg
push
cmpsb
notb
pop
aad
subb
out
inc
std
loop
orl
into
lahf
xor
lock
ret
and
xchg
fsts
push
ds
adc
push
clc
and
mov
cmp
mov
mov
cwtl
push
pop
testb
inc
movsl
cmpsb
sbb
inc
sub
pop
dec
stos
push
pusha
add
and
or
pop
xor
mov
and
nop
add
or
add
aaa
xor
dec
mov
repz
lcall
test
arpl
lods
jnp
mov
test
cmc
pushf
sub
xor
add
sub
insl
repnz
fdivrs
cmp
add
push
push
and
push
pop
movsb
jns
pop
mov
push
mov
jmp
mov
stos
inc
pusha
fidivrl
dec
les
test
cld
lods
subb
push
sti
push
es
aam
mov
scas
insl
leave
and
mov
rcrb
xlat
lcall
jge
out
or
mov
ljmp
shlb
into
pop
and
mov
mov
mov
mov
add
jmp
fsubs
jno
incb
dec
fsubs
stos
dec
dec
inc
mov
mov
sahf
fsubs
loop
scas
cmp
ret
data16
xor
lea
add
out
iret
cmp
in
inc
adcb
add
push
mov
jecxz
stc
push
adc
pop
cwtl
add
pop
fadd
xor
neg
xchg
mov
test
lret
dec
aam
add
pop
push
ret
popf
mov
cmc
bound
into
ja
jmp
add
jo
pop
sub
or
xor
mov
push
repnz
add
mov
xorl
inc
mov
and
mov
data16
in
adc
cmpsb
aam
or
xchg
push
scas
jb
jecxz
fs
in
mov
jne
mov
cs
leave
pop
pop
and
out
add
pop
ficoms
roll
mov
xchg
xchg
jmp
push
out
bound
filds
loope
ret
iret
nop
mov
pop
icebp
out
sub
dec
mov
insb
add
pop
pop
and
or
jle
add
rolb
in
sbb
adcb
xchg
adc
pop
enter
add
cli
inc
js
jl
leave
fsubs
xor
and
ss
jne
loope
sub
lds
and
mov
pop
push
js
jne
and
fimull
pop
mov
jno
fs
push
pop
xchg
insb
mov
pop
cwtl
pop
add
jns
cs
adcb
xor
jmp
mov
pop
mov
je
loope
and
cbtw
enter
or
stc
test
pop
stos
xchg
xchg
jno
cmp
ds
add
jmp
or
add
inc
and
mov
test
pop
adc
insb
push
jmp
xor
and
fs
adc
push
add
mov
orl
add
pop
fbld
dec
sub
inc
dec
repnz
fs
popa
orl
mov
addl
sbbb
jmp
adc
test
aam
pop
lock
and
nop
push
jno
and
or
sub
fdivp
mov
lea
icebp
scas
pop
jb
shll
or
adc
bound
addb
inc
jmp
bound
add
mov
and
push
je
lahf
cmp
mov
xor
jmp
xor
pop
loopne
pushf
cmp
pop
std
xor
and
sbb
add
shr
stos
pusha
movsl
insb
in
cmp
imul
or
into
je
inc
pop
pop
in
pop
mov
cli
dec
and
mov
lock
push
ja
add
sub
adc
sbb
push
sub
mov
adc
aas
mov
dec
lret
inc
push
movsl
push
fisttps
sub
popf
cmp
xchg
mov
scas
adc
sub
addl
mov
sub
loop
es
lods
cmp
mov
inc
mov
adc
xchg
sub
xor
pop
push
add
jmp
shll
rolb
fs
pop
inc
push
mov
add
xchg
or
mov
mov
add
leave
out
icebp
mov
sub
or
int3
incb
xchg
add
or
push
pop
lods
in
andl
clc
or
xor
inc
ffreep
cs
mov
xchg
ljmp
sbb
dec
test
test
roll
push
xor
push
aas
pop
dec
mov
mov
add
pusha
repnz
lret
pop
push
dec
or
pop
in
mov
push
mov
mov
outsl
xor
xchg
flds
sub
cld
bound
loopne
movsb
mov
mov
ss
fdivl
stos
lea
ds
bts
bound
dec
xchg
stc
mov
sub
mov
xchg
or
pusha
es
fimuls
cmc
add
jo
mov
nop
lods
cmp
pop
jne
xchg
pop
push
sub
add
cld
rorb
pusha
mov
cmp
test
pop
pop
add
dec
pop
cwtl
cmp
pop
scas
dec
add
and
loopne
jnp
inc
pop
sbb
add
pop
and
adc
add
shr
mov
mov
xor
incl
shl
xor
shll
dec
dec
or
xchg
add
orb
add
jp
pop
stos
insb
sub
in
in
stc
lret
test
xchg
mov
pusha
adc
jne
mov
push
pop
pop
std
dec
sbb
pop
ljmp
xor
inc
out
fsts
outsl
or
cmp
loopne
rolb
add
jne
dec
push
test
ret
out
inc
pop
mov
xor
jmp
pop
je
shll
sub
mov
ret
jbe
sub
lahf
push
cwtl
and
inc
loopne
cli
stos
es
add
or
cmc
or
mov
arpl
push
pop
pop
shr
add
push
sbbb
fdivp
add
movsl
decb
mov
dec
cmc
inc
and
adc
and
xor
adc
dec
mov
add
mov
jb
mov
pop
out
jmp
add
xor
cmp
into
call
pop
sub
add
add
and
jmp
loopne
mov
movsl
fiaddl
aas
and
or
sub
jns
xlat
mov
pop
inc
pop
add
mov
pop
arpl
xor
daa
cmp
icebp
test
shrl
mov
lret
es
push
push
mov
mov
out
ror
jne
in
nop
sub
sbb
mov
add
mov
dec
clc
hlt
cmc
mov
xor
dec
xchg
imul
push
jg
xor
xorb
and
mov
cmc
or
aas
xor
sbbb
scas
std
adc
inc
fdivr
xchg
rcll
jmp
aas
push
int3
les
inc
adc
dec
rclb
or
xor
icebp
push
out
addr16
cmp
inc
lret
in
adc
mov
dec
inc
pop
dec
cmp
push
add
jns
and
adc
cmp
cld
or
xor
cmp
pop
fwait
xchg
pop
dec
jb
repnz
inc
nop
cs
jg
add
out
mov
pop
pop
shr
xchg
add
sub
jmp
test
xchg
sub
es
pop
add
mov
inc
add
xchg
adc
xchg
test
push
mov
cmp
rcrb
push
loop
sbb
mov
imul
sbb
jl
mov
pushf
insb
int
xchg
sub
icebp
insb
pop
jg
inc
pop
shlb
aam
mov
out
mov
cmp
das
mov
mov
movsl
jmp
add
add
jl
ljmp
push
inc
mov
mov
in
sub
inc
or
xor
fwait
dec
mov
test
cmc
cwtl
sub
fadds
pop
sbbb
xchg
cli
lcall
fwait
mov
ficoms
jo
sbbl
push
dec
add
out
jae
cs
imul
xor
cli
add
cmc
inc
insb
add
pop
mov
jle
popf
ret
test
mov
pop
push
enter
xor
dec
lahf
add
pop
loopne
repz
das
mov
out
andb
cs
gs
ret
push
xor
lock
xchg
xchg
js
push
ret
int
xchg
push
popa
jmp
add
and
dec
mov
hlt
mov
out
or
and
test
xchg
adc
addr16
xchg
into
shl
lods
jnp
or
loopne
sub
sub
lcall
add
or
sahf
stc
mov
and
pop
xchg
sub
jbe
fmuls
sub
sub
cmp
out
or
testl
jb
nop
xchg
add
into
mov
lods
fcmovnbe
insb
adc
add
pop
adc
rolb
push
and
sub
mov
and
cmp
push
pushf
pop
xlat
jge
fmuls
popf
push
dec
aas
inc
or
les
orb
out
add
out
dec
clc
mov
push
sub
in
xchg
icebp
jmp
scas
and
inc
mov
push
mov
push
mov
repnz
stc
xor
push
add
dec
lods
hlt
xor
sti
ss
lcall
aam
xor
jmp
and
roll
jecxz
push
lret
icebp
sbb
rorl
int3
add
cmc
dec
aad
mov
dec
iret
add
addl
sbb
jo
and
loopne
arpl
pslld
jl
jae
add
subl
cli
xchg
push
xor
xor
jmp
shrl
imul
xor
or
adc
jb
or
clc
jl
add
add
cmpsb
xchg
or
xorb
test
sarb
mov
adc
pusha
lods
dec
or
jne
adc
cmp
and
and
jbe
push
ret
iret
pushf
xchg
shr
dec
rcl
mov
jle
or
cltd
ja
jne
rcrb
mov
sbb
nop
aaa
repnz
adcb
fmul
addl
orb
ds
pop
sbb
dec
ja
cmp
jecxz
insb
mov
lret
jmp
outsl
stc
cmp
jmp
mov
push
test
dec
sbb
xchg
push
daa
pop
out
es
xchg
push
mov
iret
inc
or
sub
jns
je
mull
cmp
mov
bound
pop
ret
jbe
sbb
dec
push
xor
cmp
xor
adc
jno
mov
fdivrs
stos
jnp
xor
pop
pop
xlat
push
cld
or
or
aam
xchg
lcall
add
iret
mov
inc
stc
aaa
pop
dec
jmp
and
mov
gs
lea
pop
sub
inc
add
clc
adc
pop
mov
push
xchg
push
mov
push
xor
xlat
or
insb
push
and
clc
nop
in
sbb
cli
dec
xchg
mov
arpl
xor
inc
icebp
mov
int3
push
cmpb
sbb
testb
ss
cli
int
int
add
loop
ljmp
add
imul
add
xor
push
inc
add
xchg
insb
loopne
ret
dec
mov
inc
in
cmp
ret
sub
shr
cli
lods
pop
repnz
or
mov
pop
add
sub
and
dec
push
pop
mov
xor
les
jecxz
cmp
das
mov
cmp
mov
sbb
mov
sub
push
mov
jnp
or
cli
popf
insl
fmull
ds
mov
add
adc
jmp
push
es
in
out
movsl
dec
xchg
or
add
or
out
adc
or
jmp
sub
lock
xor
ror
sbb
sub
add
sahf
inc
dec
jmp
jb
lea
inc
add
inc
ret
xchg
mov
clc
mov
xchg
imul
mov
jmp
cwtl
pop
jo
insl
mov
aam
adc
or
add
inc
cli
push
xchg
les
cmp
test
mov
pop
xchg
jp
xchg
inc
fmuls
daa
xchg
popa
jge
daa
xor
in
dec
andnps
xor
inc
movsb
mov
mov
mul
push
pop
adc
xor
js
lret
mov
jg
mov
add
sub
xor
mov
and
icebp
sbb
fldt
stos
sub
push
pop
into
les
lds
jge
popf
mov
mov
and
jbe
mov
sti
clc
add
jg
push
lahf
mov
sub
mov
roll
fldl
jmp
fmull
adcb
jge
pop
popf
fmuls
push
add
inc
shl
pop
xor
stc
or
divl
sub
jbe
shll
in
and
inc
jl
sub
sbb
push
jmp
add
pusha
sbb
mov
lock
xchg
jo
xchg
insl
gs
in
mov
or
scas
push
jle
add
mov
fcoms
and
es
rolb
cmp
sub
out
enter
sarb
adc
xor
mov
call
mov
lcall
add
or
outsb
aad
and
sub
int
adc
mov
in
jmp
inc
add
sbb
sub
pop
icebp
imul
and
dec
test
adc
mov
das
rol
data16
mov
das
adc
push
lods
fs
xchg
aas
outsl
sbb
cmp
pop
lock
jmp
lods
nop
std
add
adc
or
adcb
sbb
jge
jg
xchg
dec
in
movzwl
push
fsubs
inc
dec
mov
inc
gs
push
xor
xor
mov
fdivrs
scas
sub
enter
and
mov
and
sbb
adc
clc
jmp
pop
mov
mov
addr16
sub
cs
das
jno
mov
inc
dec
add
add
mov
gs
je
loop
pop
pusha
jb
sub
inc
out
rol
movsb
repnz
jg
pop
lahf
sbb
hlt
add
dec
sub
push
loope
add
pop
imul
imul
mov
push
jmp
sub
shr
push
fstps
inc
sbb
adc
xchg
mov
jo
adc
pop
sub
sbb
mull
jl
or
add
push
push
jbe
mul
xor
adc
cld
xchg
mov
dec
mov
sahf
loop
stc
jmp
inc
int3
lahf
xchg
mov
pushf
pop
mov
adc
test
ds
sbbb
cld
mov
push
jmp
mov
popw
mov
dec
or
insl
clc
adc
jae
test
mov
pop
cmpb
pop
pop
sub
cltd
push
or
mov
sub
scas
mov
sbb
in
mov
mov
pop
dec
clc
add
cli
fisttpll
in
rolb
mov
mov
mov
jne
mov
mov
jne
and
flds
cmp
pop
sub
jg
xchg
xchg
mov
xor
cli
pushf
dec
xor
xor
jge
das
or
lds
in
sahf
outsl
cmp
daa
inc
jnp
add
add
fmull
in
mov
lods
jg
jle
test
push
cltd
mov
dec
xor
jg
push
xor
xchg
daa
add
jl
js
push
dec
mov
dec
movsl
mov
push
pushf
dec
jmp
sbb
int3
test
cld
pusha
adc
add
adc
or
sub
and
push
or
xchg
addb
lea
dec
cmp
fdivr
cmp
pop
xor
adc
xor
add
jl
rol
clc
push
test
inc
and
and
jae
and
mov
movsb
xchg
lock
inc
std
hlt
in
mov
in
or
call
pop
loope
jl
inc
mov
stos
jp
pop
out
into
cmp
into
or
daa
shll
xorl
das
clc
jno
and
sbb
or
add
jno
aaa
xchg
mov
add
hlt
push
dec
mov
mov
ja
popf
lret
or
jb
xchg
fwait
or
push
add
push
mov
push
mov
popa
rolb
sbb
das
daa
cli
sub
xor
movsl
ja
cmp
jl
enter
sbb
stos
sbb
lret
inc
jp
push
cmpsl
imul
cld
sbb
jno
loope
jne
lods
sbb
dec
mov
add
std
cmp
and
adc
inc
xchg
nop
jle
lret
notb
and
mov
or
dec
mov
add
call
sbb
lds
ret
cmpsl
repnz
push
inc
inc
fwait
mov
mov
dec
fs
push
fbstp
push
repz
pop
add
adc
mov
push
cmp
shrb
adc
ret
push
xchg
add
xor
mov
dec
adc
ja
std
or
add
pop
jns
dec
pop
push
pop
pop
push
mov
push
fwait
and
adc
and
mov
test
cli
or
pop
jg
or
adc
or
jmp
imul
xor
loope
or
jo
jno
shrl
das
daa
push
test
shl
lods
mov
or
das
sub
jnp
inc
dec
adc
pushf
add
data16
sub
inc
out
mov
dec
xor
dec
push
data16
and
arpl
pop
shll
jmp
mov
movsl
test
mov
push
mov
mov
repz
fstl
inc
add
xor
mov
imul
cmp
ja
push
pop
pop
test
dec
push
aad
mov
and
fiaddl
cmp
xchg
in
in
xchg
add
shl
adc
push
push
scas
imul
adc
fidivs
add
xchg
mov
movaps
push
sbb
pop
fmuls
push
das
call
push
push
icebp
jnp
faddl
push
sbb
loope
ljmp
push
push
jno
cmpsb
push
cld
mov
dec
rclb
lock
pop
das
adc
push
jmp
dec
int
xor
mov
cltd
add
arpl
and
icebp
jl
aam
mov
xor
add
testl
xor
div
loope
arpl
leave
inc
xchg
push
les
push
aas
jmp
fimull
rorb
xchg
nop
mov
add
les
xor
cld
ja
aaa
shl
push
pop
addb
das
in
inc
inc
mov
adc
fs
jmp
repnz
push
or
loop
clc
xor
mov
rorb
pop
push
adc
jo
xor
dec
inc
sbbl
xchg
pop
push
cmp
pop
adc
mov
mov
xchg
pop
mov
xchg
sub
push
dec
jae
sub
add
push
xchg
lret
pop
mov
iret
int
cmp
mov
jb
adc
fiadds
pusha
jb
xchg
push
cld
call
daa
js
push
and
sub
clc
sub
pop
sub
nop
cmp
lds
daa
add
sti
lods
and
xchg
mov
add
loopne
add
xchg
aad
insb
pop
sbbl
in
arpl
clc
or
lock
cwtl
orb
jecxz
pusha
xchg
pop
xor
or
cmp
test
repnz
popa
daa
or
add
imul
inc
xor
xchg
lods
cmp
push
push
sub
pop
imul
lock
into
add
sub
cmpsl
or
shrl
and
pop
xor
mov
repnz
pop
mov
mov
lock
cmc
clc
gs
pop
inc
iret
mov
loopne
loope
mov
mov
mov
push
lock
xchg
test
imul
arpl
sub
xchg
shlb
xchg
jo
cs
leave
pop
mov
les
and
adc
lahf
pusha
repz
sub
pop
popf
adc
icebp
loopne
xchg
jne
mov
les
mov
pop
cwtl
dec
neg
add
cwtl
push
inc
lods
rol
xor
lods
and
arpl
stc
jo
icebp
lret
inc
mov
iret
lock
loope
jne
imul
xchg
mov
push
mov
and
pop
shlb
insl
mov
inc
sub
mov
cmp
daa
clc
rcl
out
mov
aam
dec
pop
lods
mov
mov
push
fwait
xor
fcoms
imul
cmc
dec
xor
pop
cltd
icebp
imul
hlt
jmp
cmp
inc
or
add
add
aas
mov
sbb
or
fisubs
popl
sub
pop
jge
jp
loopne
push
daa
jge
call
mov
sbb
ja
mov
sbb
mov
jle
stc
jmp
ja
xor
mov
adc
dec
mov
push
push
push
ffreep
xchg
fadds
mov
fstpt
mov
inc
call
test
jbe
out
imul
pusha
loop
add
push
aas
ret
lahf
int
jmp
cltd
add
push
aam
jl
lret
sbb
and
push
and
stos
outsw
bnd
push
mov
les
call
std
das
mov
xchg
rorb
stos
in
enter
sbb
mov
fiadds
jmp
mov
aad
pop
sar
lds
adc
pop
in
sbb
movb
movsb
jnp
out
jmp
test
mov
xchg
or
lcall
lret
pop
aam
cld
and
or
xor
mov
aad
in
inc
ja
or
or
xchg
out
cli
dec
adc
std
dec
mov
sbb
xor
mov
hlt
punpcklbw
push
fwait
add
xor
jbe
mov
dec
std
fsubr
mov
fmuls
std
and
add
xchg
or
pop
int
mov
stos
mov
lods
xchg
inc
int3
push
add
xchg
inc
xor
rcrl
mov
mov
push
pop
push
lods
lds
inc
rcrb
rol
pop
pop
clc
add
add
out
out
push
sub
and
sti
dec
andb
xor
jp
and
mov
pusha
mov
mov
jp
and
in
jmp
jle
mov
pop
dec
ljmp
icebp
nop
inc
dec
cmp
rclb
scas
mov
xchg
cmp
xor
and
jmp
or
or
sbb
xchg
out
inc
cmp
push
adc
bound
rolb
mov
or
and
lret
dec
xchg
je
out
test
std
mov
les
lods
sub
insl
in
lahf
daa
pop
xor
mov
sub
dec
mov
sbb
inc
xor
push
sub
adc
dec
shlb
mov
sahf
add
pop
or
inc
js
adc
pop
das
mov
les
inc
clc
mov
inc
pushf
cwtl
cmp
mov
dec
add
xchg
lods
sub
mov
movsb
mov
mov
and
cmp
dec
mov
and
fdivs
rcl
sub
lock
xor
shl
jo
je
popf
rorb
repnz
add
das
popa
test
pushf
and
xchg
lret
shll
push
pop
xchg
mov
sbb
f2xm1
popf
dec
sub
add
push
push
dec
mov
push
decb
push
pusha
cmp
rorl
xor
pusha
xchg
cmpsl
addb
cmp
add
out
fwait
ja
xchg
loopne
pop
popf
shll
imul
pop
mov
adc
das
sub
sub
jnp
loope
dec
mov
adc
out
gs
dec
mov
fsubr
push
imul
mov
mov
cld
das
push
shl
mov
popa
pop
inc
push
imul
ret
jg
andl
leave
pop
fmuls
jmp
lods
movsb
mov
das
mov
adc
adc
xchg
or
ds
subl
in
sahf
aas
aam
xor
and
ja
hlt
xor
nop
pusha
add
sub
xchg
fmuls
xor
daa
dec
pop
mov
mov
cmpsb
jne
add
andl
or
int
ds
jl
push
mov
inc
push
imul
lods
mov
pop
ror
in
bound
cmpb
pop
jns
cs
jge
scas
add
pusha
sbb
scas
nop
aaa
dec
shl
dec
jb
mov
leave
out
cmp
or
mov
inc
push
cmp
mov
clc
pop
jge
jecxz
and
jl
mov
jns
call
cmp
in
dec
xchg
pop
mov
stos
and
pusha
addb
inc
inc
popf
adcl
lock
imul
dec
adcl
out
and
loop
xchg
mov
fimuls
push
dec
test
pop
imul
push
mov
scas
pop
dec
cwtl
rcr
faddp
call
cmc
xor
dec
test
cmp
sub
negl
mov
mov
cmovo
out
andl
int3
loop
jmp
add
sbb
aaa
test
dec
loopne
xchg
adc
jecxz
xor
push
xor
std
mov
mov
rorb
gs
fmull
out
and
dec
mov
mov
mov
clc
or
test
shll
cmp
mov
frstor
and
ljmp
mov
dec
mov
jp
push
cs
dec
into
testb
addb
dec
jg
cmp
xor
fadd
pop
cs
outsb
sub
sub
or
daa
mov
push
mov
loope
or
popa
lcall
cmp
fildll
xadd
xchg
add
sbb
or
jnp
dec
xor
icebp
pop
pop
mov
jno
es
dec
or
loop
fmuls
in
push
sub
cmpsl
sub
or
pop
lcall
shrl
das
iret
pop
pop
out
push
jbe
jmp
inc
in
pop
js
adc
or
repnz
das
pop
sub
push
mov
xchg
and
or
jg
mov
push
jl
pop
aaa
into
add
jae
cmc
dec
adc
mov
das
into
addr16
es
add
pop
test
leave
push
aas
or
shlb
dec
adc
sub
into
mov
add
pop
pop
cwtl
push
push
sbb
or
test
xchg
inc
or
shlb
cmp
shlb
push
loop
add
push
push
inc
add
xor
pop
sbb
push
push
fildll
test
dec
iret
sub
mov
test
add
or
popa
dec
enter
cmc
push
xor
jecxz
push
sub
xor
iret
xchg
sbb
testl
sub
jmp
xor
sub
stos
inc
int3
inc
dec
xor
pop
movsb
shlb
insl
lods
adc
add
dec
pop
lds
adc
pop
mov
dec
ret
adc
mov
pop
jl
jno
dec
inc
cld
stc
lahf
pusha
mov
subb
xchg
mov
je
inc
testl
or
ss
jp
sub
xor
roll
out
into
inc
insb
pusha
repnz
nop
test
rorb
cmp
outsl
enter
sub
xchg
pop
dec
or
mov
mov
add
in
jbe
or
add
std
imul
mov
pop
outsb
data16
dec
jno
jge
fldl
push
mov
jl
jbe
shl
addl
xchg
mov
inc
addb
mov
fisubrs
inc
out
pop
inc
mov
imul
call
dec
mov
repnz
push
scas
mov
adc
test
push
add
inc
jnp
jmp
add
and
shrb
leave
ret
push
xor
fimull
and
jle
pop
aas
int3
mov
xchg
clc
mov
pop
pop
shll
push
cmp
inc
jle
test
add
dec
xor
pop
add
mov
push
fwait
pop
ja
andb
inc
mov
mov
add
gs
xor
les
xacquire
sub
rcll
xchg
xchg
popf
nop
mov
inc
jb
cmp
stc
pop
push
push
inc
mov
cmpl
add
scas
mov
out
iret
push
adc
mulb
push
push
push
lahf
fnstenv
xor
and
nop
add
jg
aas
and
sbb
and
shrb
xchg
add
arpl
sbb
inc
jg
aaa
pop
mov
dec
lret
xor
cmpsb
cld
mov
jnp
or
fists
dec
jmp
int3
xor
add
or
sbb
dec
inc
lock
cwtl
and
push
das
or
push
xlat
push
xor
add
out
popf
pop
cmc
dec
add
jae
mov
scas
push
pushf
inc
add
mov
call
insb
ficomps
stos
pusha
jb
jmp
pop
pop
pusha
pop
or
and
lcall
add
xchg
dec
adc
sub
stos
inc
fsubrs
pop
mov
addr16
sub
add
rcrl
neg
andb
lds
lock
cmp
loopne
mov
addl
cld
ss
sub
stos
push
stos
daa
and
scas
push
jecxz
dec
pop
jmp
mov
cmpsb
insb
or
popf
aam
dec
jle
pop
sarl
mov
gs
test
cld
je
mov
fsubl
pop
xor
aad
xchg
stc
xor
push
insl
popa
or
mov
push
mov
pop
pop
fadds
add
cmp
push
dec
sbb
add
stos
adc
movsb
loope,pt
fsubs
xchg
jg
out
xor
iret
xor
xor
aam
insb
cmp
int3
stos
xor
fsubrs
inc
pushf
sub
jl
xor
push
cltd
decb
inc
add
push
loopne
pop
mov
bound
je
or
addb
in
imul
and
dec
or
cmp
test
and
jmp
repnz
cmp
xchg
mov
lds
movsb
and
ja
mov
sub
inc
cmp
jnp
jne
dec
mov
mov
or
ja
clc
rolb
pop
jp
xchg
and
pusha
in
test
sub
int3
subb
popf
and
enter
das
and
sti
mov
loope
jl
pop
fbstp
push
jmp
sub
sub
out
sbb
inc
popa
or
dec
aad
sbb
xchg
das
outsl
dec
lcall
test
add
dec
out
push
pop
sar
dec
lods
out
pop
shrb
sarb
shl
mov
in
cmp
push
pop
ficoml
push
pop
mov
ret
pop
push
dec
cltd
shll
std
add
xchg
add
call
pop
mulb
and
mov
push
mov
dec
cmc
fsubrl
iret
loopne
inc
sub
daa
pusha
sbb
pop
cmp
pop
pop
sub
add
in
shl
popl
xchg
adc
xor
jmp
push
testb
ret
push
fwait
push
mov
dec
sub
mov
and
addb
sti
mov
jge
jmp
lret
jl
mov
stos
mov
popa
fcomip
adcb
das
mov
or
add
in
adc
mov
push
aaa
call
mov
mov
jp
pop
ja
mov
lock
in
and
adc
cmovae
mov
or
insl
push
jp
jmp
mov
cmp
aas
ja
pop
pusha
cld
cmp
test
sub
xor
dec
jp
loopne
aas
ds
daa
out
fisubl
frstor
rolb
jns
adc
rcr
push
dec
es
jbe
daa
dec
lret
pop
sahf
add
push
and
xchg
fisttpll
rclb
dec
jb
mov
pop
xor
or
dec
sahf
pop
add
mov
call
test
xor
xor
lret
bound
fstl
xor
push
rorl
lods
outsl
mov
fmull
maskmovq
idivl
je
mov
cmpsl
in
lret
push
outsb
les
inc
clc
jmp
pop
dec
nop
test
sahf
cmc
das
icebp
out
dec
fiaddl
push
push
ja
adc
mov
adc
pop
add
jg
xor
add
pop
mov
jmp
outsb
sub
and
mov
int
and
pop
dec
and
or
sbb
call
pop
je
aaa
and
das
pop
divl
leave
mov
dec
loop
les
sub
inc
insb
subb
arpl
xchg
push
mov
xchg
inc
gs
add
sbb
mov
push
out
pop
dec
xlat
sub
push
sar
insb
or
or
dec
and
add
jge
xor
mov
pop
cld
insb
adc
popa
int
cwtl
add
mov
orb
js
add
ds
or
cli
jmp
adc
or
jne
loop
sbb
and
xor
push
mov
sub
pop
lahf
jnp
adc
mov
dec
pop
clc
mov
mov
mov
xchg
out
cmp
in
adcb
sub
rcll
inc
xlat
nop
cs
jle
test
in
sahf
mov
mov
sbb
push
dec
push
outsb
ret
iret
pop
mul
cmpsb
jle
dec
cltd
data16
adc
pop
ljmp
sub
xchg
scas
xor
jl
mov
push
xchg
and
dec
xor
xor
inc
inc
insl
xchg
stos
and
cmp
pop
jns
test
mov
push
out
or
ret
mov
mov
mov
addb
sub
aad
xchg
inc
jno
xor
enter
mov
cmp
add
jecxz
nop
adc
pop
inc
movsl
shr
adc
fisttpll
add
pushf
or
push
cld
push
aam
outsb
test
or
aas
test
push
insb
inc
xchg
daa
mov
std
add
negb
or
outsb
rclb
mov
adc
inc
xlat
xchg
add
inc
push
jno
cwtl
mov
jbe
leave
mov
inc
jnp
outsb
scas
and
xor
call
shlb
xor
not
push
ds
pop
mov
sti
dec
inc
push
into
xor
scas
roll
rolw
nop
xor
and
fwait
pusha
jmp
push
xchg
sub
sbb
fidivl
xor
movsb
mov
adc
jmp
sbb
aam
dec
fadds
jmp
adc
and
jmp
adc
in
ss
push
sbb
inc
and
sbb
jge
test
lea
sbb
outsl
pop
jbe
inc
pop
leave
and
mov
or
sbb
pop
cmp
inc
or
sub
imul
repz
jbe
dec
call
test
jg
xchg
call
arpl
fists
out
idivb
or
pop
lret
pop
add
mov
popf
xor
pop
data16
sbb
ss
decl
pop
cs
lea
sbb
push
xlat
inc
push
ror
xorl
inc
inc
sahf
test
sub
mov
gs
sub
mov
lret
das
jmp
pop
dec
push
dec
lods
adc
mov
fsubl
fs
jb
mov
jmp
xor
cwtl
leave
add
lret
fidivrs
pop
subl
out
add
or
or
cmp
mov
inc
add
mov
mov
pop
pop
xchg
in
pop
int3
icebp
das
loopne
movb
or
jl
dec
daa
or
neg
jo
shll
xchg
rolb
jnp
fmull
in
or
fbld
insb
jns
adc
adc
dec
fists
pop
sbb
mov
aad
negb
out
nop
dec
daa
popa
add
shrb
push
pop
test
push
xor
ja
fisubs
xchg
push
loope
flds
inc
es
xor
int3
sub
xor
flds
fcomip
dec
push
in
pusha
add
ds
pop
bound
sbb
push
outsb
fbld
cmp
add
imul
pop
shlb
fsubrs
add
stos
xor
add
jmp
sub
lretw
jae
jp
cwtl
and
mov
fdiv
js
mov
scas
fxch
xor
daa
adc
xchg
or
out
mov
dec
ja
add
sub
cmp
repnz
xchg
jle
push
ret
mov
inc
cmp
dec
das
mov
add
ret
gs
pusha
jns
dec
test
stc
xchg
scas
and
stos
loopne
stos
mov
push
add
js
nop
or
add
push
mov
repnz
ret
cmp
fisttpll
insl
fists
jne
jb
repz
sub
jg
cmp
enter
mov
mul
jno
mov
lock
out
pop
add
dec
lods
jg
adc
insb
les
ja
loop
stos
imul
movsl
fiaddl
add
popa
ljmp
add
inc
add
test
push
movl
int3
sub
or
pushf
mov
push
push
push
je
sub
popa
dec
loope
hlt
push
iret
sbb
cmp
lods
sub
out
jge
jl
and
test
or
push
jns
lahf
push
pop
lret
mov
lahf
fldenv
nop
imul
fsubp
pop
repnz
xchg
sub
dec
cmc
rorl
inc
fstps
sub
fisttpl
testl
push
test
jb
sub
xor
mov
push
je
lds
rcrb
fdecstp
cmp
ja
dec
call
ja
or
test
xchg
pop
add
outsl
add
imul
repz
pop
xor
or
push
dec
scas
pop
incl
mov
sub
rcl
xor
int
lock
ljmp
outsl
cmpsb
lds
popa
jmp
push
hlt
stos
lret
mov
pop
sbbb
push
movsb
filds
or
fcmovbe
lea
jb
jb
mov
jo
sub
xchg
fstpl
sbb
cmp
ss
inc
mov
loope
add
xor
xor
jo
jl
inc
mov
dec
xor
sbb
dec
sbb
and
in
xor
mov
adc
push
mov
cmp
jmp
out
push
enter
push
lret
jno
pop
mov
sub
rolb
cmpsb
dec
xchg
mov
cs
cld
fdivs
or
and
or
adc
jecxz
lods
xor
or
jp
clc
outsb
call
jns
add
add
and
sub
jne
jge
jg
sbb
push
adc
mov
pop
jo
ret
xchg
push
lcall
arpl
jnp
or
xor
jmp
int3
das
cwtl
cmc
ja
fwait
rorl
movsb
test
sub
pop
sub
ja
or
mov
jae
sbbb
movsb
add
mov
mov
mov
shr
xor
mov
and
sbbb
rorl
inc
and
pop
ret
mov
les
or
mov
dec
and
or
add
mov
je
or
hlt
arpl
mov
dec
jo
les
cli
gs
cs
push
fs
pop
mov
inc
cld
dec
pushw
iret
sahf
mov
push
push
mov
push
xchg
add
cs
scas
jne
cmp
dec
add
fsubrl
fldl
div
jo
or
movswl
and
push
push
mov
add
add
cmp
jmp
sbb
inc
and
mov
cmp
xorb
xchg
or
or
sub
xchg
dec
jmp
sbb
xor
mov
loopne
dec
pop
pop
jne
xchg
add
test
push
divl
insl
xor
push
cmp
dec
push
fldt
mov
mulb
sarb
call
outsb
jbe
sbb
int3
lods
sbbb
in
add
or
bnd
inc
sbb
pop
stc
subb
mov
imul
add
aam
push
and
xor
push
repz
pop
xchg
jne
sarb
jo
adc
inc
ret
out
test
aad
mov
pop
mov
rclb
cmpsb
cmp
push
gs
leave
cld
sub
adc
ret
cli
push
fcoms
push
add
adc
xlat
xor
daa
ja
in
insl
and
loope
popa
into
push
push
add
shll
pop
cs
xorl
pop
das
inc
popa
out
inc
loope
mov
sbb
cmp
pop
ror
jl
add
or
jmp
add
sbb
xchg
adc
divl
jge
daa
shl
mov
cli
cmp
inc
mov
or
dec
pop
push
or
out
imul
loopne
div
popa
cmc
dec
jle
lock
call
ljmp
push
or
xor
mov
incl
std
ret
pop
or
push
xor
neg
push
dec
mov
insl
movsl
movups
add
clc
pop
add
fcompl
pop
std
pop
pop
xor
daa
pushf
add
icebp
push
loopne
sti
rcll
add
inc
adc
or
cltd
push
out
jae
pop
setns
mov
dec
sbb
rcrb
jo
mov
pop
xor
adc
fdivl
pushf
insb
add
in
mulb
and
test
mov
push
enter
movsb
scas
mov
cmp
push
mov
in
in
ljmp
or
faddl
push
mov
rcl
pop
pusha
stc
push
xor
int3
pop
add
cld
sahf
sub
xlat
cld
stos
or
adc
add
negl
clc
pop
sub
jl
and
sub
jnp
repnz
push
dec
enter
mov
leave
aas
xor
jecxz
pop
push
sbbl
jno
jmp
aas
in
jle
adc
mov
pop
inc
xchg
or
mov
mov
dec
and
cmp
call
cmp
xchg
fmulp
jg
stos
je
cld
or
rol
jmp
inc
cmpsl
cltd
pop
bnd
out
adcl
rcl
mov
adc
incl
pop
jmp
stos
push
jmp
test
gs
jle
jecxz
dec
lea
lret
nop
pop
jle
sub
stos
int3
cmp
dec
stos
inc
cli
orb
add
cltd
push
mov
je
ljmp
push
push
leave
xor
add
ficompl
fimuls
push
push
lds
jl
and
sub
es
push
fsubr
xor
jbe
pop
sub
cltd
movsb
test
push
pop
and
push
and
sub
pop
imull
ljmp
jo
mov
mov
mov
inc
dec
push
add
sub
cmp
pop
jg,pn
imulb
movsb
adc
add
addb
fldl
jbe
xchg
dec
xchg
pusha
mov
bound
cmc
adc
testb
mov
and
xchg
xor
ret
out
push
adc
inc
mov
jmp
mov
decl
bound
dec
lods
or
xchg
pop
mov
mov
add
push
mov
push
xor
dec
dec
rol
shrb
mov
call
push
push
mov
dec
xchg
mov
cmpb
xor
psllw
sbb
adc
or
add
and
shr
das
jmp
sub
rcrb
inc
lcall
mov
jmp
and
pop
imul
dec
mov
inc
sbb
mov
out
cmp
or
add
sub
loop
stc
inc
pop
lret
add
fstpl
sbb
sub
fnop
add
or
clc
lret
add
ljmp
lcall
sub
clc
adc
or
ret
jmp
mov
sub
jne
fiaddl
shrb
jge
mov
jae
dec
push
mov
adc
out
or
sub
jmp
in
jne
pop
cs
lods
add
push
jo
cli
adc
adc
js
xor
cwtl
mov
push
lret
pop
or
fidivrs
mov
mov
bound
cmp
mov
repz
inc
ret
scas
and
and
mov
in
mov
sub
jmp
ret
or
fsubrl
jo
push
in
cld
pop
shll
and
and
in
in
inc
mov
subl
mov
cs
mov
or
jae
push
fsubrl
or
or
sbb
cmp
adc
mov
jb
sub
sub
cmpsl
sbb
add
out
icebp
movl
fildll
mov
add
jmp
out
adc
cli
mov
out
mov
imul
inc
ja
jnp
add
cmp
ds
sbbl
sbb
ret
inc
aam
loope
push
push
pop
inc
test
xor
ljmp
dec
mov
xchg
outsl
adcb
jo
out
jmp
or
cs
mov
push
addr16
push
pusha
test
loop
push
push
pop
or
rcrb
mov
in
mov
cs
adc
mov
test
adc
orl
inc
push
add
or
pop
add
sub
and
sub
push
xchg
scas
loopne
push
sub
add
cmpsl
mov
hlt
add
popa
sub
clc
mov
add
fisttpl
and
into
lock
push
add
mov
out
incb
cmp
adc
push
icebp
mov
pop
xchg
inc
push
add
rep
add
push
cli
sub
imul
enter
xor
or
cmpsl
imul
sti
lret
adc
pop
int3
cltd
or
jg
outsb
dec
clc
mov
mov
int3
xchg
jl
pop
loop
adc
cld
faddl
daa
clc
mov
lret
cmp
popa
and
push
inc
inc
in
imul
negl
mov
or
enter
cld
ljmp
cmp
xchg
add
repz
mov
call
push
xchg
xlat
cmpsb
sbb
xor
mov
es
sbb
pop
shll
test
addr16
addr16
into
imul
cs
and
push
mov
mov
fstl
jnp
pop
lret
pop
inc
cmp
mov
lcall
in
movsl
mov
adc
rcl
mov
cmp
xor
and
add
outsl
ja
out
lret
xor
inc
je
cmc
or
sub
ret
push
lods
mov
pusha
inc
test
imul
dec
neg
aas
mov
and
pop
dec
push
test
mov
inc
jae
pop
shl
mov
pop
add
lcall
dec
call
push
jg
cli
inc
mov
xchg
push
imul
out
mov
dec
in
jnp
cld
or
cwtl
idivl
cmp
jg
adc
cmpsb
inc
push
push
imul
xlat
outsl
add
add
ret
pop
nopl
dec
xor
pop
enter
cmpsl
in
popa
stos
outsl
xchg
or
outsl
add
and
adc
sbb
into
popf
push
aam
push
decb
pop
test
sub
add
add
mov
mov
mov
aam
fwait
dec
ret
mov
jp
xchg
stc
or
push
inc
mov
aad
inc
push
xchg
gs
idivl
push
inc
push
or
sub
xor
pop
call
xchg
inc
lret
rcrb
pop
repnz
clc
pop
mov
mov
out
xchg
lahf
jno
adc
jae
inc
add
or
test
xchg
mov
mov
pop
lretw
lcall
xchg
and
push
pop
mov
adc
test
jecxz
cltd
or
mov
incb
shlb
lea
loop
cwtl
or
incb
push
mov
cmp
sbb
add
pop
dec
lock
hlt
or
movsb
cmp
pop
das
mov
lea
fldt
ds
push
jo
sub
int
out
sub
inc
pop
shr
cmpsb
movsb
fidivrl
cmp
lret
pop
idivb
insl
arpl
movsl
and
mov
pop
lcall
and
adc
test
cmpsl
movsb
addr16
mov
mov
dec
push
rcrl
push
lods
mov
push
mov
or
cs
add
test
sbb
add
push
push
mov
movsl
cmp
sahf
jnp
das
std
xor
aam
adc
jo
loope
add
cltd
dec
shll
fs
or
jo
or
adc
sbb
les
pushl
and
cmp
mov
or
lods
imul
aaa
or
sbb
or
sub
push
adc
addb
pop
jae
push
and
xlat
sbb
hlt
mov
cmp
or
aaa
sub
jnp
bound
rolb
pushf
sbb
movsb
pop
sbb
cmp
or
orb
jnp
les
push
and
sti
dec
sub
push
mov
out
mov
xor
xor
push
adc
add
addr16
jecxz
adc
dec
or
and
sbb
xor
and
pop
mov
or
inc
inc
sub
sub
pop
jmp
or
or
aam
rclb
mov
pushf
je
sbbb
and
les
or
imul
ret
mov
or
add
iret
and
out
xor
testl
bound
addb
xor
les
bound
xchg
jp
mov
xor
or
scas
xchg
mov
iret
inc
and
shlb
sarl
je
inc
pushf
lea
adc
enter
or
mov
cmovo
inc
inc
mov
adc
les
outsb
sub
jp
or
sbb
and
aad
dec
or
pop
or
inc
cmp
or
je
das
int
arpl
dec
test
and
dec
dec
les
pushf
jno
cmpsb
dec
or
and
xchg
or
inc
cmp
xor
scas
ret
adc
and
lahf
aad
aas
dec
and
fsts
push
inc
int3
sbb
inc
xchg
in
mov
xor
dec
pop
add
orb
push
push
loope
add
prefetcht0
fsubs
or
jmp
xor
pop
or
mov
xor
or
out
mull
or
pushf
cld
call
sbb
inc
es
icebp
enter
adc
inc
sub
add
jmp
mov
mov
fadds
add
leave
jne
mov
xor
mov
rol
mov
imul
push
sub
jecxz
test
mov
mov
inc
jmp
fdivrs
out
test
mov
xor
clc
sub
cmpsb
push
rorl
cmp
mov
fldenv
and
nop
mov
xor
dec
js
nop
push
jmp
jecxz
mov
rcl
rcll
mov
outsl
push
ffreep
mov
sbb
out
xor
sahf
pop
cmp
sub
inc
fcoml
call
xor
data16
push
flds
jl,pn
pop
lds
popa
cmc
mov
fcoml
push
push
push
pusha
mov
jmp
lahf
aad
aam
int
test
mov
das
dec
add
pop
mov
jmp
xor
pop
and
jge
jae
dec
or
orl
jl
add
cmp
pop
and
push
sbb
shll
repz
mov
icebp
cmp
movsl
sub
sub
call
xchg
les
inc
dec
ret
or
push
xor
pop
pop
iret
push
dec
out
jge
add
mov
or
xlat
push
jecxz
test
daa
and
pop
mov
inc
push
or
clc
mov
or
aam
popf
add
ret
hlt
in
pop
xchg
in
jbe
adc
and
mov
and
jno
stc
add
mov
dec
add
ljmp
dec
gs
and
shrb
pop
sub
xor
jo
adc
popl
fisubrl
push
fbld
xchg
aaa
clc
mov
les
sti
fdivs
daa
iret
test
dec
cld
inc
sbb
pop
mov
xchg
dec
dec
scas
push
outsb
inc
inc
fdivs
dec
stos
mov
rcll
movb
adc
add
pop
lock
or
jmp
xor
and
sbb
cltd
cmp
cmp
in
xchg
popf
leave
add
aas
cmp
cmpsl
push
es
jle
push
out
cmp
jmp
mov
inc
loopne
aam
pop
pop
and
shrb
rolb
shr
negb
les
xor
pusha
into
xchg
mov
xor
cmp
ja
add
stc
xchg
sahf
pop
mov
daa
hlt
pop
jl
in
nop
lea
mov
mov
pop
popf
cmpsl
push
aam
jge,pt
mov
pop
pop
mov
pusha
inc
mov
jmp
jb
mov
mov
sbb
rorb
pop
outsb
and
jno
push
push
sbb
mov
lcall
movsl
sti
push
xor
pop
sbb
and
divl
rorl
mov
outsl
mov
push
cmp
push
scas
xor
sbb
into
adc
dec
call
dec
and
je
sbb
xchg
in
shl
mov
aaa
cmp
test
dec
inc
add
neg
jmp
pop
push
icebp
xchg
lea
fwait
adc
xor
dec
jp
call
pop
push
stc
stos
jp
jns
xor
arpl
inc
jae
mov
outsl
add
aad
dec
push
mov
adc
pusha
jge
lret
sub
clc
iret
or
and
jl
pop
lcall
sub
ret
imul
divb
dec
xor
test
jbe
push
in
mov
lcall
add
mov
shr
xor
out
push
insb
lea
and
sub
mov
dec
and
pop
mov
pop
jo
addl
xchg
xor
insl
in
in
into
pop
jns
xor
inc
pushf
pop
lahf
pop
sub
pop
push
push
push
pop
sub
mov
movsb
push
inc
repnz
in
jb
or
jns
xchg
pop
mov
cld
inc
int3
stos
pop
dec
cli
mov
jmp
pop
or
dec
dec
jno
imul
push
lret
pop
pop
cmp
inc
sbb
in
mov
jl
shrb
std
pop
imul
std
outsb
mov
mov
in
jl
sub
dec
cmp
dec
cmp
sbbb
adcl
dec
dec
or
shl
xchg
lret
fucom
sbb
jg
clc
shll
loop
and
das
add
aaa
push
call
pop
jg
xchg
adc
outsb
dec
adc
inc
and
and
cld
sbb
push
stos
xor
or
jnp
mov
dec
or
jno
movsb
sub
jge
push
mov
arpl
mov
inc
pushf
cmp
dec
inc
mov
jmp
pop
in
jbe
and
pop
pop
sub
outsb
add
cmp
adc
dec
sub
sub
loopne
les
aam
mov
das
inc
sub
lods
mov
pop
or
jmp
pop
lock
xchg
inc
cmp
xor
and
and
and
scas
add
pop
add
in
jmp
xor
pushf
dec
movsb
pusha
lods
sbb
aad
sub
decb
rcl
jge
pop
aaa
sub
xchg
add
dec
out
push
jb
movsl
dec
pop
sub
push
cld
mov
and
jae
push
mov
rorb
bswap
shlb
xchg
and
enter
jnp
aam
push
cmp
inc
fs
fisttpl
mov
inc
aad
adcb
fsubl
add
lea
adc
mov
in
insl
push
and
das
add
xchg
incl
in
out
imul
xchg
sub
shll
jmp
orl
lahf
cwtl
dec
mov
inc
pop
cmpl
xchg
adc
sbb
loopne
cmp
jo
repnz
mov
pop
and
or
pop
nop
xchg
es
subb
push
cmp
mov
cmpsb
adc
mov
adcb
adc
pop
push
rolb
stos
mov
xchg
xchg
leave
or
out
das
iret
pop
je
mov
icebp
xchg
push
xor
das
sti
dec
dec
orb
add
mov
enter
out
or
jmp
pop
pushf
arpl
cmc
pop
lods
jg
push
jl
xchg
in
repz
sbb
jne
pop
inc
test
inc
std
adc
mov
iret
mov
icebp
cmpsl
xchg
adc
or
fisubs
std
orb
fwait
mov
mov
pushf
inc
roll
add
ds
adc
outsl
ret
and
rcll
adc
jle
xchg
fwait
sub
xor
dec
pop
es
jl
mov
mov
and
pop
cmp
hlt
sub
or
dec
add
jo
dec
jg
sub
jle
sti
loope
movsl
or
jmp
sbbb
cmp
sbb
out
pop
mov
or
sub
push
sub
mov
and
scas
dec
pop
stos
sub
js
imul
mov
ret
mov
mov
popa
orb
clc
cmp
in
iret
in
adc
iret
pop
add
in
mov
inc
shrl
mov
les
or
adc
lret
jp
pop
lock
sub
scas
or
bound
xor
jo
sbbl
insl
scas
scas
fcompl
fldcw
pop
dec
xor
imul
cltd
dec
movsl
jne
fdivr
xor
and
movsl
push
cmp
mov
and
jne
and
and
mov
or
and
jle
push
and
sub
mov
test
jbe
adc
pop
fsubs
xor
cs
pop
dec
pop
dec
xchg
and
sub
pusha
call
test
adc
mov
sub
lret
xchg
fchs
jl
mov
or
lahf
and
push
sub
xor
add
std
pop
ret
or
mov
xchg
movsb
xchg
or
rcrl
adc
cmp
dec
inc
sbb
mov
push
inc
xor
mov
cmc
data16
pop
lds
out
pop
shlb
inc
dec
inc
and
fs
iret
inc
push
jl
loope
loopne,pn
jmp
or
dec
jns
and
xor
dec
loop
and
pop
sub
std
orl
repnz
xchg
ja
cwtl
movsl
jb
mov
inc
and
pop
mov
and
add
xor
ja
into
leave
pop
mov
inc
pop
mov
icebp
cmp
pop
neg
sbb
jmp
mov
jo
ljmp
mov
jbe
repz
loopne
out
adc
push
lea
dec
mov
gs
lret
mov
pushf
xchg
data16
iret
add
in
sbb
adc
jl
jmp
push
pusha
or
push
push
call
xor
mov
test
out
in
inc
and
shl
push
push
lahf
popf
inc
aad
sbb
and
mov
pop
add
push
or
lds
iret
sbbl
adc
sbb
adc
jmp
mov
ss
sub
lahf
mov
rol
inc
jmp
int
cli
cli
jl
jmp
es
or
daa
fmull
jae
sub
xor
jecxz
push
inc
mov
push
adcl
mov
jmp
in
and
mov
adc
push
subb
sbb
adc
insl
push
xor
adc
in
add
test
xor
or
jle
cmp
fistl
addb
and
mov
lret
mov
mov
sub
sbb
jl
and
loope
xchg
dec
cmpsl
jge
ret
adc
sbb
imul
movsb
xchg
push
mov
jle
jge
cmpl
mov
fisubrs
ljmp
mov
push
adc
dec
mov
inc
into
clc
popa
push
emms
shr
movsb
stc
aaa
lods
iret
shlb
jge
sub
test
pop
dec
mov
outsl
mov
sub
mull
fnstsw
nop
roll
xchg
pop
mov
mov
rorl
loopne
push
jle
jae
ja
jb
mov
push
jmp
sub
mov
movl
jmp
sub
push
bound
add
ss
loopne
push
pop
imul
pop
sub
add
hlt
jecxz
add
das
pop
dec
in
or
xor
xor
push
xchg
pop
cmp
dec
inc
subb
test
push
mov
fwait
movsl
mov
dec
jo
xchg
pop
push
cmpsb
sti
sub
xchg
imul
and
popf
je
loop
mov
shrb
inc
imul
adc
clc
gs
and
sub
mov
hlt
inc
pop
das
or
jecxz
int3
sub
out
or
lret
out
dec
loope
push
aas
or
xor
dec
out
or
cmp
inc
inc
mov
adc
inc
orl
mov
je
icebp
pop
in
divl
or
dec
xchg
or
mov
in
dec
push
lret
les
test
std
insl
les
xor
test
mov
std
mov
movsb
lods
add
inc
jmp
mov
add
iret
push
movsb
rorb
or
popa
imul
mov
mov
ret
xor
mov
jge
cmp
inc
mov
ja
jbe
push
xor
sarb
aas
adc
add
sub
xchg
out
adc
add
jmp
cmpsb
mov
mov
ret
push
sub
xchg
add
pop
mov
and
scas
push
xor
stos
dec
aam
shlb
dec
xchg
shr
gs
cmova
arpl
mov
push
mov
pop
mov
movsl
call
lret
dec
loop
shrb
add
mov
push
mov
add
ret
iret
ja
push
dec
jmp
in
push
push
rcrb
sbb
sbb
jmp
das
loop
shll
cmp
xchg
jno
adc
xor
jnp
lods
clc
adc
jp
xchg
sbb
push
sub
add
ret
ds
inc
loope
adc
or
out
dec
les
insl
xchg
fmuls
pop
hlt
inc
push
jmp
pop
stc
add
outsb
sbb
push
div
add
adc
daa
sahf
add
cmpsl
outsb
xchg
not
orb
add
push
push
add
arpl
mov
pushf
push
mov
pop
add
sbb
mov
je
xor
pop
iret
inc
sub
xchg
cmpsl
insl
ljmp
pop
pop
imul
push
fidivrs
push
sbb
lods
add
jmp
and
cmp
adc
jmp
adc
xor
mov
call
push
pop
add
sbb
aad
mov
nop
push
or
jge
cmp
leave
add
dec
push
fimuls
sub
pop
shrl
je
subb
push
not
loop
push
adc
xor
pop
sub
jl
jnp
in
popa
test
push
rclb
cli
push
sbbb
adc
sbb
andl
sbb
or
mov
jg
push
push
pop
mov
xlat
inc
scas
out
int
dec
pop
pop
arpl
sub
mov
add
popf
pop
lods
cmpsb
mov
test
jb
dec
pop
movsl
xor
and
fdivrp
sbb
jmp
jne
mov
mov
xchg
les
and
in
sahf
sub
hlt
cmpsl
or
sub
mov
add
mov
inc
add
arpl
jne
dec
inc
mov
xchg
cwtl
jl
imul
xor
or
in
push
pop
add
ljmp
inc
push
jmp
les
add
cmpl
loop
loop
pop
rcrl
sbb
sbb
negb
les
sub
rcrl
das
or
sbb
mov
mov
out
add
imul
mov
dec
push
add
jecxz
int3
pop
adc
jmp
fmull
xor
imul
repnz
rolb
bswap
insb
sbb
add
push
stos
js
clc
movl
jmp
mov
test
add
add
rclb
mov
shr
push
adc
push
jb
and
movsl
adc
js
inc
and
inc
shr
aas
nop
std
cli
and
das
repnz
mov
jmp
cmp
fisttps
jbe
push
pop
xchg
mov
jecxz
andl
cli
cld
jle
iret
mov
pop
pop
or
cmpl
test
pop
jmp
mov
imul
addr16
or
xor
xor
and
mov
aas
dec
jmp
add
adc
or
and
stos
dec
dec
pop
cmp
or
loop
inc
jnp
pusha
lcall
sbb
insl
adc
mov
mov
les
movsl
sbb
inc
cmp
cltd
test
lods
call
lock
jmp
shl
xor
icebp
and
scas
cmp
pop
in
out
xchg
mov
jo
cmp
push
mov
ds
lret
in
add
aad
mov
xchg
scas
test
shlb
punpckhbw
push
mov
push
mov
adc
cmc
dec
add
mov
xor
lock
not
sbb
in
popf
push
adc
bound
test
add
sbb
sub
rorl
jmp
stos
mov
adc
adc
popa
adc
fcmovnbe
es
mov
out
lea
mov
into
inc
imul
inc
out
sbb
dec
xchg
fidivs
fwait
insb
fnstsw
lock
dec
or
pop
mov
in
jno
cmp
shlb
rcll
xor
pusha
popa
jno
sbb
push
add
mov
fnstcw
push
stc
ret
pop
sbb
jecxz
pop
scas
aas
repz
dec
scas
mov
or
push
es
or
idiv
lcall
sbb
mov
push
hlt
or
jmp
mov
mov
inc
mov
dec
push
xor
int
ljmp
rcll
je
inc
cmp
pop
sub
adc
fcomps
sub
xchg
push
subl
shll
jbe
cmp
cmc
push
fwait
jmp
fnstenv
fisttpll
dec
adc
xor
popa
fwait
add
xchg
inc
pop
stos
inc
pop
push
pop
rcrb
pusha
lea
add
or
in
ret
push
movsb
insl
push
push
sub
out
jmp
or
cs
sbb
in
lods
push
push
pusha
mov
push
imul
sub
push
xchg
jmp
aas
gs
add
stc
out
inc
or
adc
push
mov
sbb
inc
jmp
and
or
es
hlt
pop
out
leave
outsl
cmpsl
or
iret
sbb
pop
push
sahf
mov
mov
shl
add
add
and
and
jg
xchg
inc
outsb
pop
inc
jae
mov
sub
pop
add
sbb
jmp
xor
sub
xor
mov
and
dec
push
sbb
xor
push
and
sub
jl
add
or
in
sbb
movsb
scas
insl
pop
nop
sub
push
sbb
jae
lock
add
xlat
jg
cmp
sbb
dec
adc
add
pusha
push
rolb
loope
dec
hlt
adc
xor
push
mov
call
lea
mov
inc
push
pop
and
or
out
and
imul
pop
in
dec
jbe
add
nop
dec
mov
sub
xor
and
sbb
out
or
dec
icebp
sbb
or
inc
test
out
cld
mov
xchg
ret
fadds
inc
pop
sub
push
jmp
ret
jae
lods
push
sbb
bnd
xchg
lock
push
bound
and
jmp
arpl
sub
cmp
dec
fisttpll
daa
out
ja
inc
mov
and
inc
repz
add
jmp
sbb
push
add
movsb
jmp
or
shll
push
inc
jecxz
pop
es
repz
bound
ret
jnp
mov
lahf
loop
jne
push
lcall
sbb
lret
xchg
jle
ret
out
rclb
clc
adcb
cmpb
xlat
xor
xchg
mov
and
adc
xor
mov
insl
push
aas
xchg
adc
add
jae
mov
adc
and
dec
pop
in
adcl
fsubrl
cmp
mov
mov
pop
push
sbbb
daa
push
ja
jle
inc
or
jmp
and
add
jmp
ror
shll
push
rcrl
jnp
jecxz
pop
cli
cmpsl
pop
mov
pop
call
pop
xor
cmp
in
mov
or
mov
sbb
roll
lcall
rol
jp
or
gs
mov
sub
lods
push
add
add
cmp
push
and
push
inc
jecxz
std
sub
inc
add
cmp
dec
inc
sbb
cmp
outsb
add
pop
clc
push
jne
adc
pop
sbb
dec
lods
mov
out
test
jne
or
jbe
int
push
adc
pop
hlt
dec
and
stos
ret
sub
in
ret
add
in
add
jle
or
ror
movsl
es
pop
xor
mov
popa
mov
push
push
mov
push
movsb
shr
loopne
or
ficoms
ljmp
xor
lcall
cmp
push
mov
nop
add
outsb
lahf
or
or
pop
mov
cmp
ret
sbb
xor
lahf
lods
xorb
push
jae
push
shll
add
out
xchg
in
pop
addb
data16
add
push
push
mov
add
pop
xor
pop
test
scas
jne
stos
sbb
aad
inc
imul
sahf
push
jg
lret
movsl
in
lcall
add
add
lock
clc
subl
loopne
sbb
push
mov
cmp
lock
in
pop
push
mov
loopne
inc
or
dec
sub
inc
or
sub
push
sbb
jbe
inc
shlb
mov
stos
push
mov
orb
hlt
and
mov
icebp
jl
ds
jns
inc
ret
fstps
jle
out
dec
stos
aas
jmp
add
push
add
das
lcall
neg
dec
add
pop
push
pop
orb
or
and
aad
addb
divb
mov
inc
pop
int
pop
pusha
ds
lds
sub
add
xchg
sub
xor
lcall
sub
stos
adc
mov
adc
testl
mov
test
out
inc
pop
mov
sub
gs
ret
adc
inc
sbb
xchg
sub
daa
cld
imul
pop
adc
pop
div
push
pop
mov
xchg
aaa
lock
push
into
dec
dec
and
mov
add
mov
or
xorb
test
push
inc
add
push
push
std
sbb
push
addr16
pop
lods
push
mov
pop
and
mov
movsl
cmp
adc
out
daa
pop
jno
or
pop
push
and
pop
gs
gs
or
push
mov
andb
sbb
jne
xchg
cld
into
pop
mov
add
or
xor
movsb
or
pop
leave
add
cmp
push
jmp
fiadds
mov
lds
lret
repz
cmpsb
in
pushf
mov
fcom
add
push
pusha
pusha
xsha256
cmpsb
push
mov
jg
iret
push
or
dec
push
jp
add
cmp
jl
fcomp
mov
add
inc
push
fldl
pop
mov
add
add
in
xchg
ret
adcb
jmp
es
pusha
mov
dec
or
mov
dec
adcb
mov
sub
jo
dec
fidivrs
sub
push
xorl
pop
sub
pop
jmp
icebp
repz
jae
dec
repnz
cltd
dec
adc
cwtl
imul
popa
shrb
cmp
xchg
inc
adc
testb
adc
loop
call
inc
idivl
xor
add
and
mov
pop
mov
in
pop
and
pop
gs
bnd
dec
add
cmp
mov
ljmp
jl
repnz
mov
inc
xor
pop
dec
shrl
in
ds
in
loope
ljmp
mov
adc
shlb
cmp
and
repz
inc
xorl
xchg
lds
shll
sub
add
repnz
sbb
aas
std
push
addl
add
cmp
pop
cmc
loope
dec
imul
lret
sub
jmp
aam
aad
and
jmp
jmp
lock
jmp
xchg
adc
pop
inc
shl
jbe
jl
leave
xchg
es
out
gs
outsl
subb
pop
jp
inc
dec
scas
jb
out
sbb
jmp
fstpl
lds
aad
mov
pop
jnp
dec
push
push
push
icebp
mov
cmp
not
sub
adc
sbb
inc
add
rol
xor
jmp
pop
test
fwait
stos
mov
mov
adc
cmp
in
or
in
and
clc
adc
xor
ljmp
cmp
and
les
add
pop
imul
call
cli
out
leave
into
add
repz
mov
rorl
lods
push
jl
mov
sbb
sbb
loopne
jle
inc
mov
sbb
enter
bound
js
sti
sub
js
push
das
mov
loop
push
pusha
jns
rolb
out
pop
mov
lcall
push
mov
repz
cmp
enter
push
mov
stc
sub
push
or
jns
pop
std
add
jecxz
xor
incl
ret
cli
fdivl
popa
loope
mov
and
testb
jbe
add
sub
pop
pop
inc
xchg
lock
adc
xchg
rcr
test
decl
mov
adc
push
and
mov
sub
sub
jmp
cmpsl
pusha
mov
mov
mov
mov
and
push
inc
repz
push
adc
aas
jmp
cmp
mov
outsb
shl
mov
cmp
in
sub
push
inc
push
in
dec
rorb
and
xorb
xchg
and
shr
jl
bound
repz
xchg
dec
jp
sub
loop
mov
mov
jae
popf
ja
dec
xchg
add
inc
push
push
cmp
inc
or
cmp
cmp
sub
dec
loope
shll
mov
movsb
and
or
adc
jne
out
or
and
fldcw
test
mov
pusha
orl
addb
mov
pop
out
lock
imull
test
sahf
push
inc
dec
add
lahf
clc
dec
xor
fiaddl
adc
mov
mov
popa
cmp
adc
cmp
pop
pop
imul
pop
cmp
xor
jns
pop
jle
loopne
das
das
xchg
cli
incb
or
in
and
or
mov
add
push
pop
xor
mov
dec
pop
hlt
and
das
in
jle
addr16
lret
stc
pop
mov
push
ss
mov
or
mov
or
cmp
dec
push
sub
or
or
pop
adc
push
sbb
inc
hlt
nop
add
shr
jae
add
ficoms
pop
sub
push
rcrl
xor
mov
adc
inc
cld
outsb
cmp
jae
sahf
dec
cmc
dec
xor
rclb
mull
pop
adc
es
out
xor
cli
cs
sbb
fsubl
mov
cmp
jge
andl
data16
sbb
sub
sub
cmp
scas
fscale
pusha
and
cmp
add
push
pop
imul
push
das
jmp
stos
or
rclb
dec
xchg
mov
adc
movsl
test
fmuls
ds
adc
aas
pop
scas
jmp
into
push
jmp
dec
call
jnp
xchg
imulb
ss
xor
jmp
lcall
popa
add
sub
rolb
sub
jmp
cmpl
sti
lock
lahf
sti
xchg
inc
adc
dec
and
or
int
ja
fdivs
daa
push
mov
divl
pop
sub
cmp
xor
pop
pop
lcall
add
cmp
cltd
adcb
ja
jl
or
icebp
pop
movl
orb
jmp
jle
js
adc
push
cmp
jmp
mov
sbb
test
negl
fsubl
sub
clc
popa
mov
xchg
adc
dec
enter
mov
gs
pop
pop
mov
mov
cmp
fwait
int
pop
mov
nopl
das
pop
das
int
popf
sbb
pop
mov
dec
fwait
mov
int3
hlt
mov
shr
iret
les
fstl
sbb
js
push
in
repnz
int3
sti
mov
roll
xlat
stos
mov
mov
and
test
lock
mov
call
cmp
adc
dec
in
push
int3
fsub
int3
lret
sub
jmp
loopne
mov
stos
adc
mov
pop
inc
and
adc
push
add
lret
into
and
or
inc
pop
mov
repz
scas
fst
push
lods
scas
xor
push
xchg
jg
hlt
lods
xor
das
jle
mov
push
mov
orb
and
jp
and
lret
movsb
sbb
pop
and
inc
das
or
cwtl
std
nop
sbb
leave
pop
inc
xchg
sub
add
hlt
mov
adc
aam
sub
push
lods
cltd
add
inc
ss
or
sub
adc
sbb
push
pop
or
push
cmpsl
rcrb
xor
mov
shll
aam
out
jp
fs
push
enter
shl
vmread
jl
mov
fldenv
jmp
or
sti
add
cmp
loopne
jno
daa
out
pusha
ret
mov
mov
cmpsb
inc
xchg
lea
push
js
adc
notl
sub
dec
cltd
popa
jbe
aas
out
pop
cld
outsb
xchg
call
in
add
or
push
shr
in
sub
fsubrp
jmp
push
div
xor
pop
addb
and
ljmp
mov
inc
pop
sub
add
add
shl
xchg
popa
jno
inc
or
xor
cli
sbb
test
dec
inc
imulb
and
les
rol
pop
or
sub
dec
jne
cmp
mov
mov
adc
xor
add
insb
push
adc
repnz
pop
int3
mov
pop
add
fs
dec
lods
hlt
movsb
push
dec
and
loop
or
or
xlat
xchg
sbb
mov
incl
dec
inc
sbb
outsl
fldl
xchg
and
pop
jo
mov
push
pop
mov
pop
cwtl
in
daa
bnd
sub
adc
stos
push
and
mov
bswap
jae
jmp
test
rorb
inc
pop
push
inc
sub
cmpsb
aad
mov
or
fstl
add
icebp
scas
aad
and
ljmp
aad
jo
cmp
pusha
sub
jo
jae
mov
mov
xor
push
out
or
xor
push
popa
xchg
adc
ja
mov
cmp
shlb
push
mov
mov
and
sub
add
clc
add
fadds
pushf
pop
sbb
push
out
movsl
inc
xor
push
dec
aad
and
add
fstl
adc
call
xor
dec
add
into
es
push
lds
cs
mov
mov
sub
pop
pop
clc
pop
mov
loope
and
rcrb
stc
data16
daa
jno
fcoml
or
jae
adc
cli
insl
dec
or
into
rcrl
rorb
sbb
lock
or
or
jecxz
fcmovne
mov
or
push
dec
test
lret
inc
jmp
lahf
xor
push
pop
idivb
or
repnz
sub
xchg
cmpsb
pop
enter
or
dec
add
mov
lock
cmc
ffree
aas
pop
loope
pop
pop
lods
sbb
push
outsb
imul
add
imul
cmp
dec
mov
insl
adc
sub
out
mov
pusha
mov
pusha
mov
lea
cld
sub
aam
mov
std
jae
pop
fidivrs
repz
sarb
sbb
add
das
dec
mov
stos
push
adc
sbbl
cli
mov
push
pop
dec
into
mov
xorb
movb
divb
aas
fsubrs
popf
stc
out
cmpsl
pusha
xchg
push
push
jne
lods
ret
mov
test
xor
inc
and
mov
aad
sub
mov
sub
movsl
test
adc
out
adc
push
xchg
mov
ret
jo
xor
add
ja
arpl
pop
into
sub
sbb
ret
andb
jmp
rolb
jp
popf
idivb
or
loope
mov
jp
loopne
dec
jle
xchg
ficomps
jmp
leave
and
sti
pop
jmp
dec
pop
adc
pushf
imul
pop
push
mov
push
push
push
xchg
mov
mov
xor
push
mov
xchg
loopne
ret
shlb
pusha
jp
lods
or
ret
xor
add
pop
call
ds
lds
imul
dec
mull
push
sbb
sarb
jnp
pop
mov
mov
xor
cmp
or
push
and
jg
push
mov
push
aaa
xchg
push
fmuls
fsubrp
add
xchg
mov
xchg
cmpsb
or
add
mov
stc
jne
and
sbbl
or
cmp
subb
test
idiv
xchg
rorb
lock
out
xchg
aaa
cltd
add
sbb
insl
xchg
movsb
sbbb
fistl
mov
aam
sbb
hlt
movsb
test
lcall
lcall
popf
popa
lock
mov
repnz
add
jne
orl
arpl
gs
mov
bound
dec
cmc
mov
and
add
pop
inc
je
aaa
sbb
notb
sub
mov
inc
gs
mov
adc
stos
shll
and
xlat
lock
xchg
pop
mov
pop
jmp
loopne
int3
xchg
push
orb
and
sub
or
popa
lcall
dec
movsl
ret
call
jmp
inc
lret
jmp
das
push
jo
and
push
movsb
gs
decb
adc
es
dec
jl
pop
test
mov
ss
adc
iret
push
ds
and
add
loop
outsb
pop
sbb
inc
adc
jge
jecxz
stc
xlat
and
out
pop
push
test
in
sti
cmpsl
adc
mov
jmp
mov
pop
mov
add
insb
mov
jmp
out
sub
lea
aas
jne
mov
xchg
mov
ret
adc
mov
repz
add
or
dec
ds
ja
push
leave
xchg
jge
sub
or
scas
cmp
fucomi
pop
sbb
movhps
std
subb
adc
dec
idivl
sub
dec
adc
or
add
insb
inc
jl
push
sbb
pop
mov
or
mov
mov
addr16
push
jmp
clc
xchg
sbb
ret
lret
stos
push
add
adc
imul
pop
jg
dec
rcl
push
test
add
xchg
dec
sbb
cmp
push
sub
xchg
hlt
testl
in
or
lret
call
push
sbb
sarb
add
dec
mov
xor
lds
pop
pusha
sub
push
andl
lret
xchg
mov
cs
pop
pop
bound
dec
test
test
adc
int3
leave
lcall
data16
push
les
add
jne
pop
inc
adc
addl
out
incb
fisttps
mov
or
jl
mov
sub
es
ret
fs
mov
mov
push
pop
mov
mov
sub
mov
sub
xchg
push
movsl
sub
jo
fdivp
sbb
clc
insl
shr
iret
pop
adc
pop
sar
aaa
push
fists
cmp
push
mov
pop
mov
dec
xor
not
pop
dec
lods
mov
sbb
fstpl
mov
loop
sub
sub
fdivrl
xor
cmc
xchg
dec
roll
push
mov
push
adc
scas
inc
mov
sub
loopne
out
and
stos
repnz
or
out
mov
add
push
add
and
adc
fwait
stc
stos
ja
mov
jl
rol
add
cltd
nop
adc
dec
iret
stos
push
and
sub
notl
or
ljmp
pop
pop
push
mov
arpl
out
and
ljmp
push
mov
sub
mov
jb
mov
fidivl
arpl
pop
sbb
ss
pop
shrb
pusha
in
popa
add
fs
int3
cmp
mov
sbb
ja
icebp
cmp
jecxz
push
pop
mov
lods
in
dec
fsubs
push
mov
jg
mov
repnz
xchg
or
push
ret
mov
mov
push
call
sbb
push
pusha
std
push
inc
cmp
addb
bound
mov
leave
pop
aaa
sbb
jmp
das
mov
inc
ror
stc
data16
mov
adc
in
sub
outsb
div
test
pop
loope
shrb
dec
addr16
inc
lcall
add
sub
bound
sbb
adc
pushf
gs
xor
and
out
pop
shlb
pop
and
sarl
inc
and
adc
mov
ret
movsl
push
add
xor
nop
or
push
sbb
and
mov
inc
stos
xlat
test
loopne
mov
sub
lret
loop
fstl
cmp
sarl
mov
pushf
mov
mov
pop
and
adc
mov
push
jmp
mov
outsb
stc
stc
sbb
inc
lods
cmp
das
sarl
pop
fbld
xlat
cwtl
pop
roll
pusha
lock
scas
adc
movsl
das
cltd
mov
mov
int3
imul
add
cmp
icebp
int
add
cmp
jb
or
outsb
mov
and
push
mov
dec
jecxz
pop
testb
jmp
aad
iret
add
out
mov
xor
push
push
xchg
jb
sarl
test
dec
inc
ja
in
push
jns
mov
pop
cli
ret
pop
pop
push
xor
dec
hlt
or
out
aas
sbb
mov
push
mov
loope
aam
fwait
das
pop
xchg
insb
out
push
rclb
mov
push
dec
xchg
sub
or
popa
data16
inc
dec
mov
subl
sub
inc
push
xor
adc
push
push
jmp
sub
addl
push
or
movsl
mov
jbe
or
push
sbb
outsb
movsl
out
cmp
inc
jle
cmc
push
dec
pop
add
fcoms
test
or
pop
test
or
adc
mov
mov
or
das
push
daa
je
pop
cmpsb
lds
movb
xchg
in
sub
enter
bound
adc
repnz
iret
xchg
dec
fmuls
rcrb
fiaddl
mov
lods
jne
pop
movsb
dec
imul
pushf
loopne
cltd
add
imul
xlat
incl
pop
je
pop
inc
aam
rorl
movsl
push
hlt
xlat
arpl
daa
aaa
fbstp
jo
int
adc
loop
popa
and
mov
in
mov
mov
outsb
int3
cmpsb
mov
push
push
orl
inc
pop
inc
stos
add
fnstcw
in
sbb
rcll
pusha
arpl
fisubrl
addps
pop
jne
int
and
das
and
and
dec
bound
push
push
mov
push
push
mov
enter
dec
stc
push
pop
scas
xor
mov
push
jge
je
sbb
dec
add
jne
jmp
add
mov
add
jle
fisttpll
lods
push
push
fistps
jns
xchg
dec
shrl
and
call
in
pop
hlt
std
ret
push
inc
lea
dec
pop
add
cmp
dec
mov
jnp
insb
pop
mov
xor
or
dec
jle
xchg
fsubs
pop
mov
pop
testb
ss
sub
xor
add
xlat
mov
push
lret
das
xor
xlat
decb
add
or
shl
push
pop
mov
popa
loope
aam
rclb
outsl
movsl
or
je
popa
lret
negb
pop
add
mov
sub
fiaddl
loop
insb
js
rolb
aam
rol
sbb
ret
push
add
dec
or
jmp
fldenv
mov
sub
dec
mov
pushl
cli
repnz
jmp
movsl
push
jmp
mov
dec
push
out
jge
sahf
xor
pop
ret
inc
insb
dec
in
loopne
sub
aaa
dec
sbb
push
sub
dec
dec
insl
sub
mov
pushw
jge
jmp
or
jmp
imul
inc
imul
adc
cld
out
fisubrl
cltd
and
call
push
mov
xor
mov
ret
jmp
mov
std
adc
mov
pop
adc
xchg
fistps
ds
in
mov
push
or
in
sar
inc
daa
jmp
daa
adc
cmpsl
pop
add
jno
test
sub
stos
loop
adc
mov
fstp
pop
or
repnz
and
sbb
or
lret
xor
fildll
stos
in
daa
pop
aad
dec
or
lds
add
sahf
pop
mov
leave
xchg
jbe
add
inc
or
xchg
and
sub
mov
xchg
cwtl
fsubrs
inc
adc
and
push
xchg
fstpt
adc
jmp
les
rorl
pop
in
push
mov
jl
data16
sub
jg
mov
mov
jmp
mov
jmp
fimuls
fildl
movb
sbb
dec
call
adc
cmp
cld
and
fxch
lret
iret
mov
push
sbb
adc
dec
cwtl
ret
insb
xchg
dec
jge
ret
push
push
outsb
mov
fadds
lds
inc
das
ja
adc
push
pop
jg
call
lcall
or
icebp
aas
inc
int
mov
dec
adc
dec
fadd
push
or
jnp
inc
push
lcall
aam
daa
xchg
mov
lret
imul
sub
fwait
mov
sub
addr16
mov
cmc
arpl
mov
sub
pop
ret
addr16
js
inc
mov
push
flds
das
mov
pop
fcoms
mov
imul
and
mov
ss
out
add
pop
mov
shlb
or
stc
sarl
popa
dec
cmpsl
insb
adc
clc
popf
dec
add
jle
add
scas
sbb
inc
enter
orb
loop
jmp
adc
pop
add
sub
lahf
rorb
jne
jecxz
push
iret
adc
add
pop
jmp
jmp
or
fnstcw
movsl
rolb
mov
jbe
jo
xor
int
shrb
dec
cmp
push
das
loopne
pop
dec
sbb
add
sarb
pop
clc
test
add
fsubl
in
or
pushf
push
or
push
ljmp
add
outsl
das
inc
sub
xchg
and
enter
adc
lret
or
pushf
mov
shl
add
push
xor
mov
pushf
mov
push
fnsave
cmp
dec
jmp
push
mov
jno
clc
lock
inc
adc
mov
push
mov
xchg
xchg
sbb
in
or
lds
push
das
or
pop
adc
insb
fucomp
in
pusha
lret
xchg
push
hlt
cmpl
sbb
sbb
xchg
add
and
in
mov
add
test
cmp
stos
xor
add
loop
sbbb
nop
adc
jmp
outsl
pop
or
adc
cmp
cli
push
int
aad
push
out
sub
xlat
cli
xor
jmp
mov
lock
xchg
xchg
add
and
mov
ljmp
ret
jmp
adc
mov
add
jae
sahf
imul
lock
inc
lods
mov
xchg
mov
add
push
push
push
jo
aam
and
adc
add
popa
pop
mov
push
inc
mov
pop
push
loop
fimuls
stc
cmp
or
push
sub
orl
xchg
lret
jo
inc
jns
jnp
or
mov
jmp
fnstenv
call
rclb
mov
pop
mov
pop
pop
lret
ja
jecxz
iret
adc
mov
push
sub
lahf
adc
sub
aad
out
mov
add
dec
jae
orb
pop
loop
out
pop
out
xchg
xor
pusha
jl
push
and
xchg
ret
pop
pushf
dec
mov
scas
push
sub
inc
jb
imul
and
inc
xchg
cmp
add
push
jmp
imul
cmc
push
sub
lahf
shl
push
mov
add
sti
in
bound
in
pop
jmp
and
sbb
xchg
cs
push
mov
or
in
scas
loop
adc
sub
test
or
ret
jno
jmp
out
pop
pop
punpcklwd
stos
add
les
xor
push
dec
sub
sbb
push
andb
jmp
neg
push
mov
in
and
leave
lds
in
cmpl
jmp
add
les
pop
and
pop
adcb
stos
jnp
cmc
sbb
add
mov
pop
dec
mov
mov
sub
jmp
mov
jmp
dec
test
sub
lds
and
pop
js
or
adc
jns
or
sbb
lret
push
add
ret
dec
jo
push
cwtl
pop
inc
test
mov
not
shl
inc
call
or
adc
inc
inc
out
inc
jne
popa
push
add
outsb
imul
mov
movsl
mov
push
jno
ret
fisttpl
jle
pushf
add
mov
lds
mov
cmp
push
xchg
push
add
push
sbb
and
mov
iret
lret
pop
and
test
inc
fdivrp
pop
xchg
imul
dec
mov
pop
jg
adc
and
div
jp
sbbl
mov
les
pop
and
or
push
push
sub
cwtl
mov
lahf
call
out
adc
mov
inc
add
dec
popa
mov
mov
push
daa
fisubs
push
lods
leave
testl
pushf
inc
mov
lods
and
jmp
add
xlat
dec
mov
sbb
imul
jnp,pt
add
clc
pop
fidivrs
xchg
inc
mov
or
insb
cmpsl
ret
or
std
and
and
or
xlat
or
add
sahf
mov
add
push
jno
int3
jno
mov
ds
pop
cwtl
insl
ja
mov
push
insb
bound
add
add
xor
xor
or
mov
inc
mov
popf
xchg
sub
xor
mov
popl
call
push
pop
cmp
inc
inc
inc
shrb
xor
out
shl
mov
adc
xchg
mov
shrl
push
jbe
pusha
out
inc
pop
mov
inc
jae
sbb
orb
cmpsb
sbb
pop
push
or
xchg
inc
bound
sub
and
push
adc
imul
xor
and
jg
es
test
xchg
enter
pop
jns
adc
addb
int3
sub
mov
jb
cli
pop
adc
sbb
jmp
dec
xchg
add
cmp
or
mov
shl
or
dec
inc
test
and
push
inc
sbb
das
push
and
pop
add
sar
sti
inc
push
mov
lahf
rorb
lahf
jns
leave
pop
jbe
push
add
mov
adc
stos
cltd
xchg
aad
std
out
push
sti
xor
lock
ja
or
mov
fdivr
xchg
iret
mov
or
jl
jl
dec
divb
xor
inc
push
pop
ret
aaa
cmpb
popf
inc
xchg
pusha
jmp
mov
stos
insb
mov
adc
add
xorb
xor
jo
cli
mov
add
jle
mov
insb
ds
call
sbb
ss
pop
dec
jmp
mov
add
ror
mov
ret
sub
push
push
es
inc
pop
pop
lahf
add
inc
dec
xlat
dec
and
push
mov
pop
pop
fmuls
pop
xchg
pop
pop
and
stos
fs
mov
adc
mov
dec
dec
int3
xchg
mov
xor
sbb
push
mov
add
or
inc
mov
shr
call
arpl
enter
xor
mov
and
add
loop
jmp
stc
shl
fs
inc
mov
or
andw
adc
out
out
mov
ret
push
push
imul
ljmp
in
popf
clc
test
pop
xchg
pop
ret
add
shl
mov
test
inc
jne
sbb
les
mov
mov
mov
add
and
aad
or
addb
push
and
push
aaa
add
scas
cwtl
adc
popf
cld
test
cmp
imul
pop
cmpsb
adc
push
pop
testb
testb
mov
mov
push
jl
push
push
sbb
shrl
and
clc
int3
test
push
push
sarl
sbb
add
and
fwait
sub
ljmp
cmp
filds
push
push
jmp
adc
or
sub
mov
call
ret
inc
mov
jp
xorb
and
mov
and
pop
addb
jb
pop
xchg
pop
popa
jmp
ret
xor
or
popf
insb
adc
mov
mov
mov
sbb
stos
push
add
idivb
lods
aam
pop
cmp
scas
aaa
mov
add
mov
fwait
xor
jb
inc
sbb
push
repz
popf
xor
lock
push
shll
scas
or
mov
je
ljmp
mull
push
mov
mov
add
lods
ja
and
sub
push
push
jmp
mov
scas
and
daa
testb
dec
and
pushf
imul
ds
fildl
aas
inc
aas
lock
cltd
mov
or
or
mov
cmc
inc
gs
test
test
pop
xchg
sub
cltd
xchg
jmp
and
mov
mov
jbe
jb
clc
jae
mov
xor
and
add
push
xchg
aaa
scas
xor
pop
lea
add
aas
xor
andb
dec
nop
mov
leave
enter
not
push
daa
ds
into
in
adc
pop
cmp
lods
push
add
dec
cmp
xchg
bound
sub
loopne
std
lods
jmp
pop
add
push
inc
jno
add
mov
aas
cmpsb
mov
sub
push
fsubrs
sub
popa
dec
loopne
ja
shrl
or
jecxz
push
repnz
bound
fdivrl
fimull
imull
xor
iret
imul
mov
and
or
or
pop
add
or
cmp
in
shl
sub
int
add
pop
push
das
cmp
mov
jg
test
add
outsl
or
cmp
sub
and
dec
ret
mov
jp
mov
cld
aad
cmc
add
inc
and
ds
test
sub
cmp
adc
sub
add
das
and
mov
add
sar
pusha
mov
inc
out
lea
mov
aam
pop
sub
adc
adc
shrb
jp
cltd
adc
dec
in
inc
jmp
in
outsl
lods
pop
dec
push
mov
xor
xchg
test
jno
xor
fs
dec
add
jp
out
inc
test
mov
mov
pushf
inc
cmp
sub
insl
add
pop
test
add
mov
dec
xor
push
imul
je
sti
cmp
imulb
fildll
decb
mov
out
test
jmp
push
push
shl
femms
adc
shl
pop
imul
inc
and
lea
jnp
xor
cld
pop
cwtl
jbe
add
xor
xlat
push
daa
mov
xchg
pop
adc
movsl
sub
add
ret
push
or
mov
push
dec
pop
pop
sub
add
dec
or
repz
push
xchg
and
sarl
mov
test
cmp
xor
out
cwtl
ja
sub
imul
push
jmp
inc
mov
xor
mull
jbe
cmp
xchg
sbb
pop
jl
shrl
jne
ljmp
mov
add
sbb
fiadds
mov
roll
repz
adc
loopne
pop
or
xchg
cwtl
dec
cli
fdiv
pusha
adc
pop
fcomi
add
xorb
push
add
push
mov
jmp
cmp
fisubrs
mov
cltd
pop
daa
call
inc
lahf
lods
outsb
repz
xchg
push
mov
testb
xor
or
inc
fiaddl
inc
push
push
aaa
push
jecxz
mov
and
sub
cmc
mov
push
clc
jno
ret
xlat
jmp
out
ljmp
outsl
outsb
dec
je
or
jge
or
gs
jmp
pop
gs
icebp
loope
jmp
scas
cmp
mov
adc
or
pushf
jmp
jnp
jmp
jae
pop
jmp
insl
add
mov
rcl
xorb
bound
pop
insb
cmc
or
sub
ret
or
pop
xchg
inc
pop
and
inc
fstpl
push
mov
lock
or
dec
lock
mov
andb
icebp
xchg
fxch
push
jmp
pop
cmp
filds
adc
or
arpl
or
xchg
dec
inc
rolb
leave
ret
call
xchg
pop
jns
and
ja
inc
pusha
mov
ss
mov
fldcw
sub
mull
shr
loopne
andb
add
add
jo
lahf
mov
loope
jo
dec
shl
test
mov
in
push
mov
es
in
jg
ss
fldl
pop
pop
jmp
testl
xor
aas
add
inc
scas
shrb
jmp
mov
inc
imul
imul
or
mov
movsl
jle
icebp
mov
aad
ficoms
add
ja
and
mov
les
mov
popa
stos
mov
add
sub
xchg
stc
inc
jl
mov
cld
lret
jle
sub
test
and
jg
ret
sahf
outsl
mov
clc
loop
call
js
push
pop
leave
mov
dec
xchg
arpl
push
mov
lock
cmp
dec
add
pop
ret
aaa
push
add
pushf
pop
sbb
cmp
add
sbb
ret
lods
cmp
stos
popf
sarb
pop
mov
mov
push
jmp
mov
stos
lds
rolb
and
lret
scas
add
fisttps
addr16
mov
mov
imul
push
mov
sub
sub
push
mov
out
xorb
xor
fmuls
xchg
push
or
sahf
push
cs
pop
out
adc
lcall
adc
lret
xchg
adc
les
xchg
aad
call
jecxz
xor
iret
adcl
pop
add
pop
mov
dec
mov
fmull
loop
xchg
and
lret
hlt
pop
push
es
adc
pop
dec
xor
push
sub
in
cmp
test
or
fimuls
movsl
into
add
gs
add
push
sub
xchg
mov
pop
push
jmp
mov
cmpsb
add
jge
or
ret
insl
adc
mov
out
mov
sbb
in
xor
mov
sub
mov
mov
fsts
jns
adc
push
sub
ror
inc
in
push
mov
add
mov
cmpsl
bound
in
gs
hlt
lret
sbb
jbe
cld
loopne
and
loope
insl
das
sbb
jmp
dec
push
call
lcall
int3
hlt
push
xlat
hlt
fldenv
inc
mov
insl
mov
jmp
dec
mul
push
andb
mov
data16
inc
dec
sub
repnz
in
rolb
add
test
pop
test
add
pop
pop
pop
add
inc
cmp
shll
add
push
popf
push
mov
add
push
or
add
es
xchg
push
scas
or
push
push
adc
shr
sbb
mov
fstl
xchg
fdiv
mov
lret
movsb
adc
sarb
push
daa
push
pop
nop
jno
ljmp
pmaxub
fsubrl
mov
int
jg
es
mov
test
pop
or
popa
xchg
sahf
jg
jo
pop
push
cmpb
decb
cli
into
jg
push
push
in
in
inc
aaa
xchg
ret
sbb
vmread
je
or
or
test
xor
int
test
popf
insb
pop
cld
and
out
rcrl
arpl
rcll
das
add
or
lods
cmp
add
and
jge
dec
mov
mov
fadds
jo
mov
and
xchg
mov
fwait
push
and
imul
sub
xlat
icebp
sbb
movhps
cli
cwtl
xchg
cld
push
pop
imul
in
jmp
scas
xchg
xchg
popl
push
loop
les
sti
dec
and
addb
cmp
out
cmp
jmp
push
push
mov
movsb
pop
add
mov
dec
adcl
and
or
filds
and
pop
mov
cld
stc
xchg
in
mov
or
enter
xor
or
dec
xor
rcrb
lock
dec
jns
sub
mov
stos
pop
inc
test
dec
push
adcb
loopne
les
add
orl
mov
and
movsl
cs
gs
ret
gs
push
and
dec
xchg
add
or
add
lods
inc
pop
daa
fsub
inc
or
stc
movsb
je
push
push
push
mov
mov
xchg
loop
psrlq
mov
xchg
mov
jbe
roll
cli
ja
out
sub
lods
out
cmp
sbb
sbb
popf
icebp
out
or
movsl
xor
filds
das
pop
mov
and
stc
mov
stos
push
pop
pop
mov
clc
and
push
jge
loope
push
bnd
mov
ss
add
xlat
push
pop
pusha
xchg
adc
popa
imul
bound
out
fnstsw
lock
jecxz
fnstcw
pop
cmp
mov
sti
adc
shlb
sub
pop
aas
lock
pop
mov
add
xor
and
es
mov
les
jmp
or
or
dec
jb
pop
push
jmp
pop
cmp
in
sti
and
aad
pop
push
ret
add
xchg
insb
lahf
xorb
push
push
mov
add
shr
dec
mov
mov
mov
lds
pop
dec
out
inc
adc
or
mov
out
xor
mov
push
and
loop
pop
mov
lea
inc
xor
push
add
and
sub
xor
push
or
xlat
mov
je
mov
push
ja
stos
std
test
mov
mov
addl
push
loopne
repnz
xchg
call
mov
mov
dec
out
jns
inc
push
jge
pop
arpl
vsubpd
add
adc
in
mov
hlt
push
sbbl
dec
imul
arpl
test
ret
fcoms
or
adc
or
jne
andl
xor
repz
pop
lods
push
inc
or
dec
cli
je
sti
and
pushf
int
jge
jl
dec
adc
jo
add
or
add
adc
adc
sub
lds
sub
inc
sub
or
fsub
divl
aam
addr16
lret
push
lret
inc
pop
push
repz
shrl
sahf
adc
xor
push
adc
loope
clc
and
push
push
add
leave
clc
sub
pushf
loopne
push
push
sub
mov
popa
sub
pop
std
adc
push
push
out
add
ror
dec
add
sub
insb
dec
xor
push
pusha
add
mov
repnz
dec
movsl
lock
lret
sub
sbbl
sub
pop
sub
jmp
stc
int
push
jmp
push
out
cmp
pop
out
push
cmp
sbb
daa
cmp
pop
stos
lea
divb
fnop
das
pop
ficoms
or
shrd
inc
pop
dec
bound
stc
push
js
pop
insl
test
sbbb
push
ja
sub
push
mov
pop
fldcw
push
add
adc
jb
or
out
or
jmp
hlt
push
test
sbb
outsl
es
xchg
pop
xchg
lock
or
sbbl
packssdw
cmpsl
jns
dec
lds
mov
mov
dec
fsubrl
sbbl
addl
dec
push
mov
imul
sbb
push
sbb
xchg
inc
addl
in
pop
push
pop
dec
mov
jmp
jns
iret
mov
enter
inc
shll
test
mov
mov
fwait
cwtl
aaa
or
arpl
lret
imul
stos
pop
pop
inc
mov
sub
mov
xchg
lret
fadd
call
xor
rcrl
pushf
shlb
rolb
adc
mov
jmp
or
clc
or
pop
add
jne
push
jb
pop
pop
loope
dec
and
lahf
and
mov
pop
and
pop
push
add
add
dec
push
pop
int
xor
sbb
lock
das
pop
xor
mov
jle
push
xchg
jmp
std
jg
cs
fucomi
dec
icebp
ror
aas
loop
cmpl
fldenv
jmp
xor
xor
inc
sbb
sahf
jmp
jbe
in
repz
jae
incb
push
sti
das
adc
xor
inc
int
dec
fbstp
add
inc
jmp
mov
fwait
push
mov
out
pop
cltd
filds
jmp
mov
jae
les
mov
out
popl
movsb
movsl
ja
jg
push
cld
repnz
shrl
dec
ficomps
cmp
pop
xchg
js
cmp
cmp
lods
ja
stc
push
xchg
cwtl
inc
add
aas
sbb
jno
imul
jmp
pop
in
outsb
movsl
scas
bound
push
cld
outsb
push
add
movsl
std
pusha
jnp
je
jle
int3
dec
pop
cmp
push
fnstsw
dec
stc
or
and
jl
mov
testl
or
pop
xchg
xchg
xchg
sbb
rorl
lock
sub
jae
pop
and
or
pop
dec
scas
adc
inc
int3
outsb
or
adc
mov
ror
cmp
lcall
pop
aam
push
mov
and
add
daa
mov
and
shrb
jl
inc
fadds
xor
fs
orl
dec
pop
popf
pusha
pop
scas
bound
leave
inc
sahf
into
aaa
mov
std
add
adc
mov
roll
pop
stc
pop
add
cmp
or
cwtl
popf
or
or
pusha
adc
jge
xor
arpl
lret
sub
movsl
andl
test
and
test
repz
test
jl
xor
es
fdivr
std
mov
sbb
pop
dec
enter
inc
jp
ret
outsb
lock
push
outsl
out
lock
xor
stc
rcrb
aam
dec
loopne
daa
push
sbb
test
pushl
bound
cmp
or
mov
xchg
adc
cmp
sub
pop
ljmp
push
pop
clc
add
dec
fimull
add
jmp
sbb
pusha
cmpsl
push
mov
mov
add
aaa
bound
insb
loopne
jne
in
sub
lret
pop
pop
xchg
push
inc
jmp
inc
push
mov
outsl
or
sub
dec
enter
mov
xchg
sahf
test
dec
cmp
sti
adc
pushf
jge
inc
adc
insb
cmpsb
addb
mov
mov
daa
add
orl
dec
or
sbb
pop
shl
sub
loop
pop
xor
adc
add
sub
leave
inc
loopne
xor
mov
adc
call
lds
pop
mov
jno
out
popa
mov
sub
cmp
pop
ret
shlb
add
cmc
ljmp
iret
lods
inc
inc
inc
scas
mov
sub
pop
leave
add
test
push
dec
stos
lods
mov
ret
jmp
add
scas
ds
addl
outsb
add
ret
adc
mov
sub
shll
push
mov
adc
sti
loopne
inc
or
jnp
rcrb
enter
jmp
das
jne
adc
cltd
das
mov
insl
lods
pop
sub
pop
pop
scas
inc
dec
dec
push
xor
sub
add
pop
pop
pushfw
or
mov
aad
and
xor
xor
cmp
gs
nop
add
jb
int
je
add
sub
imul
mov
cs
ficomps
push
mov
push
clc
lock
xchg
je
fadd
add
movsl
aad
rcl
arpl
cmp
mov
jecxz
or
aas
xor
fiadds
pop
lahf
jb
and
pop
cmp
jbe
cs
xor
inc
push
mov
and
dec
add
xor
jns
pop
pusha
ds
pop
iret
vpsubw
xchg
aam
jl
cmp
sahf
pop
dec
loopne
test
adc
xor
jge
push
sbb
push
dec
sub
push
inc
xor
cmp
movsb
and
jge
shll
jae
cmp
mov
sbb
adc
add
insl
aas
pop
ss
cmp
cmpsb
adc
and
mov
fdiv
cwtl
adcl
xchg
dec
add
and
adc
inc
stc
jmp
out
jo
sbb
pop
scas
pop
cmp
adc
neg
dec
add
fadds
xor
shll
jle
cmpb
sub
loopne
cwtl
and
sub
jmp
orl
sbb
xor
int
outsb
add
pop
dec
xor
inc
sbb
add
sub
cmp
cwtl
jle
js
lods
push
jns
rolb
mov
sbb
rorl
cmpsl
add
mov
mov
lock
mov
ret
sti
dec
iret
jp
mov
add
arpl
sub
int3
inc
dec
in
mov
sub
pop
fdivr
cmp
cmp
pushf
insl
xor
aam
and
pop
mov
dec
stos
add
dec
lcall
push
mov
pop
in
dec
adc
add
fs
nop
sub
xchg
lods
repz
lcall
sub
sub
pop
and
add
add
jae
dec
pop
mov
jp
sbb
rorl
add
mov
push
pusha
fimull
jbe
cs
add
aad
mov
ds
push
jmp
adc
mov
pop
xchg
stos
sbb
cli
sub
jl
cmp
mov
sahf
sbb
inc
dec
push
sbb
loop
jl
pop
xchg
and
adc
or
adc
or
mov
scas
push
sbbl
stos
xchg
and
cmpsb
int
aas
popf
in
cmp
xor
add
mov
pop
xchg
jmp
jp
cmpsb
adc
pop
stos
sub
push
mov
jmp
add
sbb
sub
xorl
iret
dec
pop
add
sub
maxps
dec
orb
inc
push
add
jmp
push
out
loop
outsb
mov
lods
jno
popf
push
jne
adc
dec
stc
cmp
nop
ss
jge
scas
js
into
movsb
jno
cld
xor
stos
mov
mov
xor
test
sbb
and
adc
sub
lcall
cs
stc
push
insb
pop
push
mov
inc
inc
push
inc
add
dec
pop
pop
push
aam
ret
scas
pop
adc
xor
test
test
dec
or
mov
insb
push
jb
push
push
ljmp
push
sub
mov
pop
cltd
loope
lcall
das
test
ficomps
rcpps
dec
clc
and
adc
sbb
jle
jo
lds
push
push
fiaddl
test
or
jmp
pop
js
mov
inc
daa
add
xchg
pop
push
dec
add
mov
fs
mov
insb
dec
into
inc
div
jecxz
daa
adc
add
adc
orb
dec
push
pop
test
stos
in
rorb
add
cmp
xor
jge
add
orl
idivb
cmpsl
xor
lahf
mov
out
cwtl
jns
iret
int
into
sub
mov
imul
jl
and
mov
sub
inc
sahf
jp
adc
neg
adc
dec
or
and
pop
je
add
jnp
inc
fs
addb
add
cmp
xor
push
sub
jmp
fidivrl
cli
pushf
repnz
pop
mov
mov
push
mov
int
repnz
and
adc
enter
xor
adc
dec
stc
rorl
cltd
mov
test
push
add
in
push
push
pop
cli
roll
xchg
mov
pushf
movsl
movsl
sti
ljmp
fdivp
dec
pop
ja
ret
shl
pop
mov
xchg
neg
or
jge
xchg
push
mov
mov
sar
flds
xor
and
clc
adc
scas
orb
cmp
sub
jne
cld
pop
pop
cld
mov
add
adc
push
xchg
jle
incb
dec
jmp
push
mov
push
push
pop
neg
add
sub
hlt
jmp
or
jnp
and
push
jns
shr
idivl
clc
test
aam
rclb
adc
jle
mov
rcrl
mov
sti
rcrb
shrl
jne
push
cltd
add
push
mov
add
sahf
push
or
mov
loopne
or
xchg
add
mov
rcll
push
lds
jg
xor
sbbl
lock
xchg
rclb
inc
mov
in
adc
inc
xchg
orb
ljmp
mov
mov
mov
add
stc
rclb
and
std
fcomps
gs
pop
push
js
addb
pushf
or
sub
pop
jecxz
or
roll
adc
and
jmp
decb
lods
inc
mov
fcomps
push
xor
sbb
sub
jmp
push
decl
ljmp
pop
lret
push
mov
cwtl
loopne
js
leave
adc
mov
jmp
pop
sub
ds
repz
and
push
in
out
jae
sahf
push
bound
jp
cwtl
pop
pop
addl
sub
xchg
and
orb
add
pop
jmp
adc
pop
jmp
pop
add
cwtl
mov
xchg
sbb
je
adc
mov
call
or
mov
xor
xor
les
in
pop
xor
sub
aad
mov
mov
call
stc
add
mov
push
and
ds
lods
clc
outsl
leave
pusha
inc
clc
adc
inc
insl
pop
repz
mov
sub
cwtl
and
mov
jmp
add
out
sub
pop
push
inc
pop
lret
push
dec
and
pop
cmp
push
test
push
pusha
xchg
mov
jge
lcall
xor
jne
cmpb
bound
inc
sub
pop
push
sub
push
popl
xchg
push
cmp
in
and
and
or
and
pop
cs
mov
repnz
pushw
jmp
adc
sbb
push
shl
sbb
aas
push
or
add
dec
mov
or
std
or
fldt
jmp
and
push
shrl
add
xchg
je
cmp
xor
mov
cli
test
or
add
or
inc
repz
push
fisttpl
pop
jns
bound
add
jae
sbb
pop
dec
hlt
ret
cmc
dec
mov
mov
xor
xor
mov
mov
cld
adc
mov
sub
adc
cmp
and
and
and
scas
mov
dec
mov
pushf
pop
loopne
or
adc
sbb
sbb
push
mov
repz
or
repnz
popf
js
add
arpl
jmp
aas
lods
sahf
rorb
xchg
sub
push
jnp
xchg
cltd
mov
daa
inc
jg
inc
add
fists
pop
roll
es
jle,pn
bound
rcrb
lahf
pop
iret
pop
add
jmp
dec
ljmp
daa
iret
push
lock
pop
push
in
or
pop
test
andb
add
mov
adc
xor
dec
sub
push
in
push
sahf
xchg
fildl
cmp
jnp
push
js
add
push
dec
clc
jecxz
pushf
sub
popa
cmp
cmp
mov
les
in
sub
xchg
pop
cld
xorb
enter
push
cwtl
dec
es
inc
ret
xchg
push
stc
jmp
dec
inc
in
daa
dec
dec
pop
pusha
push
mov
lds
pushf
adc
dec
push
jmp
inc
mov
dec
mov
jo
cmp
cmp
and
mov
sbb
xor
cmp
pop
pop
mov
nop
cmc
mov
sub
test
addl
paddusb
lock
xor
aam
pop
add
jb
mov
mov
add
xchg
scas
shl
in
mov
add
not
push
roll
ret
repnz
ds
sbb
out
dec
xor
dec
mov
xchg
imul
sub
pop
jl
inc
pop
les
mov
adc
add
add
pop
push
shl
or
pop
push
xorb
inc
fidivrs
push
push
subb
mov
sub
hlt
mov
leave
push
cli
sbb
push
push
dec
fstps
xor
test
xor
cwtl
scas
repz
scas
or
cmp
addl
jp
xor
mov
lahf
push
leave
inc
push
add
inc
add
add
xor
sub
aaa
add
or
lods
hlt
inc
dec
sub
mov
jmp
stc
and
jmp
sub
orb
push
sti
or
add
aaa
adc
xchg
mov
or
subb
push
push
out
mov
pop
mov
test
mov
movsl
fsubrs
sub
in
and
sub
js
lea
jae
dec
jmp
mov
add
pop
sub
mov
pop
xchg
push
in
add
add
pop
outsb
push
sub
sbb
fsub
pop
jnp
jle
mov
xor
andl
scas
jecxz
dec
test
mov
jmp
jecxz
sub
add
push
mov
jmp
mov
sbb
lock
add
cltd
pop
stos
xchg
lock
adc
or
xor
or
cli
jbe
mov
sar
rcrl
pusha
arpl
stos
inc
push
pop
cs
cmp
sub
or
pop
push
pop
push
pop
and
notb
add
addl
pop
daa
ficoms
ss
sahf
push
imul
jbe
and
and
lahf
enter
popf
adc
mov
div
adc
loopne
leave
push
es
push
sbb
cs
pop
repnz
and
add
repz
and
jle
and
or
dec
mov
pop
mov
out
xor
mov
and
movsl
mov
rcrb
out
lea
rcrb
adc
cmp
addb
xor
sub
ja
rol
dec
test
aad
xor
aad
mov
jl
scas
std
cmpsb
push
mov
and
cmp
pusha
jg
mov
fldenv
ja
or
daa
jmp
jp
or
dec
push
inc
leave
cmp
mov
sbbl
push
mov
repnz
jmp
push
lea
jnp
cltd
sti
dec
in
and
scas
stc
popf
add
ret
fsubrl
mov
inc
pop
sub
cli
ret
inc
xchg
test
stos
aaa
adcb
lods
in
lods
shl
add
aad
out
and
iret
stos
ja
sarb
push
push
leave
dec
pop
mov
xor
push
add
into
stos
pop
loop
pop
je
scas
jnp
pop
sub
std
xor
stos
jecxz
sub
or
insb
xchg
mov
test
lret
mov
jne
xchg
cmp
shll
aad
inc
cwtl
xchg
jne
imul
adc
mov
push
cmp
lcall
and
xchg
mul
pop
push
mov
dec
ret
icebp
rolb
pusha
adc
sbb
pop
aas
bnd
mov
mov
popa
pushf
push
pusha
pop
inc
push
punpckldq
lods
scas
fisttpl
enter
and
ret
imul
mov
push
shll
add
dec
jecxz
or
pusha
sub
int
jne
jnp
and
adcb
sub
inc
jmp
jmp
shr
aaa
dec
xchg
or
xorl
inc
cltd
cld
loope
stos
cmp
daa
add
jns
dec
pop
pop
jb
mov
imul
mov
push
ljmp
mov
notl
add
fldl
std
movsl
xchg
pop
stos
movsl
popf
fisubs
dec
out
sub
jmp
in
push
mov
push
scas
add
jecxz
pop
movsb
fadd
cmp
test
pop
out
stc
inc
push
jmp
cltd
mov
push
dec
inc
add
mov
or
in
push
xchg
leave
and
cmpl
outsb
insb
jp
in
sbb
dec
int3
sub
dec
xor
dec
lcall
sub
inc
dec
push
and
pop
inc
mov
or
pop
sti
or
jb
mulb
or
out
pop
add
mov
push
cmp
ljmp
add
add
loopne
addr16
cltd
push
sti
nop
dec
fmull
das
pop
add
cmp
call
dec
push
std
test
push
neg
add
fldl
cmpsb
orl
mov
loopne
ss
mov
insl
and
shlb
xchg
cmc
sbb
sub
addl
push
push
dec
inc
mov
mov
mov
loop
nop
xchg
xchg
lock
lds
enter
add
or
push
push
push
lds
add
ja
sub
xor
push
je
xor
sub
fadds
xor
mov
or
nop
xor
mov
mov
decb
cmp
testl
cmp
pop
sub
ret
fwait
cs
inc
test
mov
jmp
jne
ja
adc
xchg
mov
mov
rorl
lahf
push
jecxz
cmp
and
daa
jo
clc
sub
jg
or
mov
xchg
mov
push
sbb
lds
repnz
js
scas
loop
jbe
xchg
addb
dec
or
pop
push
aaa
xchg
pop
ret
pop
fisubl
pusha
push
shl
inc
setne
orl
add
and
pop
xor
adc
push
xchg
outsb
or
test
fs
loop
push
mov
dec
lods
mov
xchg
inc
loope
push
sbb
push
jecxz
ret
xchg
ror
cmp
inc
sub
cli
xchg
jecxz
mov
pop
jmp
dec
pop
jl
pop
filds
cmp
mov
fs
or
fistl
in
pop
rol
sub
in
fistps
pusha
mov
mov
rorl
push
push
outsl
inc
dec
mov
movsb
ret
test
cwtl
jns
ror
stos
mov
adc
sbbb
in
in
adc
xor
push
je
cmpsb
dec
mov
dec
orb
inc
dec
call
inc
add
or
jmp
mov
sub
and
add
dec
sub
add
test
jmp
xor
incb
sbbl
es
sbb
stos
cmc
or
pop
lahf
push
mov
sbb
jp
xor
cmp
sbb
roll
out
xor
jne
jl
dec
sub
scas
xlat
fimull
mov
imul
inc
shl
xchg
adc
jno
lds
aad
add
inc
push
scas
and
mov
mov
push
adc
mov
lods
out
fdivrl
jno
pop
into
andl
insb
pop
inc
inc
sub
mov
nop
mov
andl
mov
lods
repnz
arpl
nop
sub
cmp
sub
or
jmp
cwtl
bound
lcall
std
orb
ja
loop
and
ljmp
and
ljmp
out
fsub
mov
icebp
ffreep
cmc
fistl
pop
aam
jne
jno
xchg
cwtl
fimuls
nop
xor
fldenv
in
ret
xor
jbe
ficomps
imul
sub
fs
es
cwtl
adc
sbb
mov
adc
dec
out
rol
jle
test
in
inc
add
loopne
pop
add
sub
aad
gs
mov
and
inc
jge
jmp
lret
push
mov
ss
sub
popl
mov
push
sbb
adc
xchg
add
jmp
scas
inc
fs
loop
mov
jmp
add
pop
mov
mov
inc
add
and
pop
popf
jle
xchg
leave
cmpb
lret
dec
lahf
testb
sarl
jno
add
orb
iret
jne
cli
dec
xor
or
and
adc
inc
xor
cmpsl
sti
lds
adc
stos
cli
sub
cmp
jmp
sub
cmp
scas
popl
jmp
or
outsb
or
jne
out
xor
mov
or
outsl
and
pushf
adc
pushf
orb
sbb
mov
cmpl
add
sbb
or
nop
xor
jbe
add
push
das
pop
jl
xchg
ljmp
inc
xchg
jne
cmp
out
and
cmpsl
enter
inc
and
xorps
mov
test
mov
ret
mov
cwtl
out
mov
pop
xchg
xor
lret
fimuls
pop
icebp
push
daa
xchg
pop
xchg
ret
cmp
pop
jp
nop
mov
movsb
push
je
jns
cmp
lock
test
lahf
std
scas
rep
mov
jp
push
inc
push
jge
sbb
adc
cmp
ljmp
gs
push
push
in
mov
dec
dec
ret
add
jmp
jmp
sub
lock
mov
negl
test
push
rorl
mov
mov
and
sub
pop
dec
aad
in
mov
pushf
jno
inc
cmp
fs
push
jns
push
push
jmp
or
sub
pop
dec
sub
aad
push
push
subb
pop
or
shl
ja
pop
and
adc
cmpl
pop
jb
scas
dec
lret
dec
cwtl
push
dec
in
cmc
test
or
js
int3
push
xchg
imull
repnz
dec
stos
out
pop
xchg
add
or
aaa
das
data16
jne
jbe
adc
test
dec
fwait
push
cmp
jb
xor
jle
xor
push
adc
mov
cmp
je
jge
invd
fimull
and
inc
sti
add
push
sar
bound
xchg
pop
push
loop
pop
call
add
jbe
loop
jl
in
cmp
and
adc
mov
mov
sub
and
add
xchg
fistps
fisttpl
push
push
bound
or
enter
lea
mov
pop
movsb
push
jl
xlat
pop
adcl
fldenv
imul
mov
mov
jge
or
jb
inc
das
fadds
xor
dec
imul
ret
cmp
cli
jmp
add
test
int3
neg
push
add
sub
pop
jmp
pop
push
fbstp
stos
out
inc
dec
push
xor
movsb
and
mov
loope
in
xchg
add
in
add
int
int3
cmc
sub
push
addr16
xor
sbb
adc
push
adc
push
mov
jbe
aas
loope
push
add
and
idivb
and
je
sbb
in
xchg
pop
pop
sti
sub
decb
out
and
clc
jmp
jnp
stos
jo
pop
mov
testl
andb
sahf
loope
mov
xor
negl
fwait
es
faddl
daa
lret
push
add
rolb
mov
xor
sahf
fisubrs
rcrl
sbb
roll
mov
rcrl
jne
jmp
push
outsb
les
push
or
mov
cs
xchg
cs
inc
mov
sub
ret
mov
mov
cli
add
aam
pop
sbbb
sbbl
mov
es
push
cmpsb
out
fisttpll
push
outsb
add
shr
decb
add
out
insl
xor
push
outsb
rolb
fdivs
xchg
outsb
xchg
xor
xchg
pop
divb
test
adc
jmp
or
cwtl
push
dec
repnz
jmp
daa
stos
shll
adcb
out
insb
mov
pop
add
addr16
rclb
ljmp
stc
jp
mov
jo
mov
push
push
push
movb
cmp
pop
mov
dec
or
mov
lret
mov
fs
daa
mov
out
ja
in
lret
addr16
adc
mov
push
in
pop
pop
pushw
dec
repz
mov
int
pop
lret
call
adc
lods
push
pop
data16
jno
lods
stos
sub
call
push
sbb
mov
aaa
pop
in
imul
sbb
xor
xchg
sbb
sub
push
mov
sub
adc
sbbl
adc
ss
scas
adc
in
adc
mov
jo
mov
mov
mov
add
jg
cmp
enter
movsb
daa
faddl
xlat
stos
popa
adc
arpl
bnd
push
insl
xor
sti
pop
and
bound
pop
dec
sbb
adc
xchg
inc
pop
add
leave
je
jmp
fsubl
sub
adc
notb
cmp
mov
mov
jb
and
pop
sub
pop
dec
cmp
in
push
sbb
inc
push
push
sbb
addl
sub
lock
cmc
fisttpl
fnstsw
in
jns
subb
es
jecxz
mov
dec
dec
push
es
sub
sbb
rolb
enter
adcb
addb
inc
jae
xor
add
ffreep
mov
xor
aas
add
sbb
or
push
ss
call
pop
adc
repnz
shr
insl
and
and
outsl
fdivr
cmp
jecxz
daa
dec
push
arpl
loope
jg
inc
popf
fmull
add
mov
push
test
jg
cwtl
pop
pop
in
inc
movsw
das
sub
sarb
rorb
call
sarb
aaa
inc
add
jle
push
jecxz
adc
mov
hlt
push
add
sbb
repnz
fbld
or
mov
stc
ljmp
xor
icebp
repnz
or
cwtl
cmp
inc
dec
push
leave
cltd
loopne
pushf
cmpb
jg
inc
mov
jae
mov
jb
cmp
xchg
jbe
push
pop
mov
inc
adc
mov
cmc
xchg
inc
dec
jne
fcmovb
jbe
pop
push
pop
jmp
std
xchg
sbb
nop
insb
popf
pop
pop
mov
mov
push
cs
lds
push
ret
sbbb
xor
jae
in
or
adc
or
sub
inc
repnz
pop
vmovups
jl
js
mov
dec
ja
mov
mov
js
mov
push
aas
call
mov
mov
mov
xchg
mov
push
cmpsl
or
scas
cmp
pop
das
sub
sub
ret
or
xchg
jbe
mov
or
fbld
mov
loopne
movsl
popf
icebp
mov
push
push
fists
mov
pop
hlt
mov
xchg
cld
and
pop
or
inc
es
sub
add
sub
jg
pop
js
shlb
mov
xlat
pusha
jle
push
addb
stos
push
testl
jg
rcrb
cmp
mov
sub
ret
push
incl
dec
movsb
lret
mov
hlt
xchg
les
ret
xchg
shll
xor
pop
fmul
roll
outsl
pop
es
into
ds
mov
and
fmull
or
jo
and
inc
shr
push
push
mov
mov
jmp
dec
out
jg
adc
shl
push
mov
mov
jns
out
pop
jnp
sub
jge
ljmp
pop
add
push
sub
sub
imul
cld
add
addl
add
push
movsb
pop
jmp
mov
arpl
iret
not
mov
xorb
push
iret
and
sub
cmp
inc
jno
adc
pop
lods
add
mov
add
sbb
call
sbb
in
js
pop
push
push
jne
sbb
inc
push
bound
push
sbb
aas
cs
inc
add
imul
push
orb
arpl
cmpb
jmp
add
xor
push
je
lcall
imul
sub
add
mov
je
jp
lret
pop
dec
testl
mov
cmpsl
and
add
repz
pop
add
or
ret
jge
pop
out
in
jns
das
pop
cld
ja
or
pop
sub
push
jbe
fidivs
dec
aaa
in
push
or
adc
xor
ds
jge,pt
clc
cmpsb
addr16
push
bound
pop
mov
mov
xchg
je
inc
push
mov
cmc
mov
push
or
xor
outsl
push
pop
or
aad
push
std
mov
xlat
and
das
lock
xor
es
pop
dec
sahf
and
out
fs
outsl
in
jnp
cmp
fistpl
dec
sbb
mov
dec
push
push
leave
pop
add
mov
xchg
ljmp
cld
cmp
add
push
incl
cvtps2pi
or
or
jmp
lret
in
mov
inc
push
lret
cmpsb
add
xlat
jmp
dec
enter
mov
dec
dec
push
and
dec
mov
incb
dec
jbe
outsl
sub
vmovdqa64
lret
inc
shrb
adc
jle
or
xor
push
sbb
dec
pop
jg
pusha
out
and
dec
ss
fnstcw
jb
pop
fisttps
arpl
xor
xchg
pushf
dec
or
jmp
or
nop
pop
mov
icebp
std
pop
add
cmp
pop
mov
jne
dec
push
js
and
scas
adc
or
pusha
sbb
loopne
sarb
int
dec
adc
in
jmp
or
outsl
mov
mov
lods
xchg
fiadds
jmp
cmpsb
dec
add
andb
or
daa
mov
negb
fnstenv
mov
dec
pop
push
jno
push
add
mov
xchg
push
mov
mov
adc
or
popf
xchg
and
or
cmpsl
mov
fimuls
mov
popa
bound
dec
out
adc
fcmove
repz
xor
mov
sbbl
adc
imul
movlps
or
xor
ljmp
test
sbbl
fnstsw
lods
jecxz
scas
cmp
std
insl
adc
push
fcompl
push
repnz
rorl
scas
or
aas
push
and
jnp
fucomip
dec
lods
mov
dec
mov
or
neg
add
add
mov
stc
pop
push
jmp
pop
cwtl
add
stc
mov
jo
jge
mov
add
repnz
loop
rcpps
lret
ja
mov
nop
sub
lea
lret
or
and
insb
jp
subl
iret
sub
outsb
fdivr
pop
xchg
mov
push
stos
into
or
das
jo
and
dec
and
adc
lds
ja
repz
es
dec
mov
jno
loope
cmc
cs
es
test
cmp
iret
xorb
sub
jp,pn
or
lcall
add
sbb
inc
push
cmp
inc
sar
sti
adc
insb
jmp
rcrb
sahf
push
cmp
aam
adc
dec
add
jne
sub
add
add
and
xlat
xchg
lods
or
stos
dec
inc
push
add
or
add
and
jnp
push
sbb
or
aaa
dec
mov
cmc
in
or
jnp
push
pop
outsl
testl
scas
pop
insl
mov
aas
or
push
jae
cwtl
jo
nop
movsb
leave
add
mov
adc
pop
inc
in
push
xchg
xor
icebp
cmpsl
cmpsl
movsl
jb
dec
lret
mov
sahf
add
popa
push
mov
push
xor
mov
xchg
bound
popa
mov
js
sub
and
xchg
or
into
jns
gs
add
insb
jno
cmp
jns
mov
jge
add
lock
inc
es
push
gs
aam
jmp
inc
outsl
pop
mov
inc
inc
sti
xchg
addb
add
inc
xor
xchg
or
adc
mov
xor
xor
sbb
jp
out
cwtl
or
jge
xor
adc
scas
aad
imul
jmp
mov
popf
mov
fwait
add
add
push
lods
pop
xor
ds
push
and
adc
outsl
xlat
lods
and
out
rorb
clc
leave
gs
or
add
mov
sahf
lahf
mov
add
sbb
mov
pop
scas
push
cltd
mov
xchg
cmp
and
mov
mov
repz
dec
cwtl
jne
sbb
jle
push
pop
jmp
push
adc
pop
inc
nop
lock
sub
mov
leave
or
shr
sahf
shll
bound
pop
aad
in
loopne
and
cmc
cld
out
or
inc
inc
cs
adc
cltd
xor
dec
mov
fs
add
pop
and
mov
pop
lods
lret
push
scas
call
cmpb
and
je
cmpsb
in
pop
dec
xchg
push
or
push
pop
insl
or
mov
inc
daa
rolb
in
jmp
testb
jae
pop
add
push
lods
pop
cli
pusha
push
shlb
les
ljmp
test
dec
xchg
add
and
scas
int3
jne
inc
inc
add
xchg
mov
cmc
ds
xchg
loope
pop
adc
sbb
shlb
lahf
imul
enter
js
sub
test
mov
jb
leave
jecxz
push
or
sub
adc
adc
push
orb
aam
xlat
xchg
sbb
pop
out
and
adc
popa
pop
inc
sbb
xchg
adc
jle
int3
scas
sbbl
test
out
dec
mov
jne
cmp
and
inc
out
in
aas
xchg
sub
andl
inc
test
out
bound
cltd
pusha
mov
push
icebp
dec
push
add
ret
lcall
and
xlat
test
add
les
jno
push
xchg
stos
inc
inc
and
scas
inc
dec
and
in
sti
add
add
cmpsl
or
shr
dec
cmp
int3
add
cmc
fldenv
rol
mov
hlt
xor
sub
inc
sub
fldenv
sub
sub
mov
adc
jo
mov
out
xor
shl
add
sbb
sar
mov
add
jmp
pop
mov
subb
scas
adc
mov
fs
add
mov
pop
pop
int3
push
lock
jle
add
pop
cmp
fadds
adc
jmp
loop
jne
aam
xor
jmp
dec
xchg
mov
leave
pop
or
add
xor
sub
cmp
in
es
outsb
jbe
loop
lds
jmp
fisttps
sbb
or
out
cmp
outsl
pusha
jmp
int3
jne
jmp
xor
orb
cmp
dec
iret
mulps
out
leave
filds
ja
out
add
jb
xchg
jmp
add
sarl
pop
push
lea
mov
pop
dec
pop
lods
lods
xchg
lret
movsl
jb
and
mov
mov
fucompp
mov
and
popa
dec
and
imul
loop
js
sub
pop
mov
mov
data16
dec
leave
push
mov
clc
jnp
ljmp
sbbl
and
jecxz
or
adc
sub
add
add
xor
and
mov
jmp
push
out
add
inc
int
in
test
dec
xor
cwtl
jmp
rcrl
popa
push
adc
mov
lret
gs
daa
add
pop
pop
xor
and
jp
mov
imul
cmp
cmc
cltd
xor
and
or
lahf
mov
mov
dec
pop
lret
lcall
clc
bound
gs
pop
cwtl
arpl
push
add
cmp
sub
add
push
rolb
mov
dec
pop
jp
dec
push
insl
sub
jmp
pop
push
inc
insl
bnd
ljmp
push
mov
xchg
arpl
mov
jo
sub
push
mov
mov
jo
mov
scas
daa
and
arpl
ret
pusha
gs
dec
loop
lea
jmp
repz
sbb
jno
add
loop
js
xor
adc
inc
out
sbbb
into
icebp
adc
sbb
inc
and
shr
stc
jmp
push
pop
fisubrs
or
sahf
jle
popf
icebp
int3
shll
shl
mov
insl
and
pop
sbb
cmovg
push
add
push
push
repz
jns
inc
jnp
mov
push
leave
ret
pop
sub
jb
add
push
push
xor
cmp
jp
mov
mov
mov
dec
add
shlb
sub
mov
jns
and
nop/reserved
call
adc
adc
enter
je
inc
sub
test
xchg
int
out
cli
insl
pop
inc
inc
daa
leave
add
loope
or
push
or
inc
pop
jmp
sti
inc
frndint
aad
sar
das
pusha
adc
imul
sub
sbb
xchg
pop
push
sub
loope
lcall
xor
fstpt
add
daa
mov
push
adc
inc
mov
add
jmp
push
div
adc
test
adc
ja
rorl
pushf
mov
ror
mov
push
pop
add
inc
pushf
pop
aaa
cld
pop
daa
fbld
mov
or
jecxz
push
nop
arpl
fwait
mov
dec
or
sub
aam
or
sbb
jle
mov
add
arpl
fwait
jae
ss
shlb
std
push
jo
inc
popf
add
dec
add
mov
adc
or
mov
add
outsl
mov
push
mov
sub
mov
shl
lods
add
je
sub
add
and
dec
jmp
pop
daa
outsb
int
dec
scas
mov
das
xor
popa
cmp
dec
out
int
or
repnz
cmp
pop
jbe
imul
mov
lret
jmp
pusha
mov
pop
add
mov
pop
pusha
outsb
shl
aad
jo
xchg
inc
ljmp
cwtl
lret
jmp
pop
or
repz
aaa
lahf
jmp
mov
pop
out
mov
jp
dec
loop
lret
popa
push
stc
push
ret
inc
es
lods
scas
call
shll
inc
mov
sub
mov
mov
idivb
pop
jmp
je
xor
dec
popf
jp
mov
xchg
insl
dec
lods
cmpsb
inc
add
mov
pop
inc
je
push
or
push
sub
fadds
adc
aam
dec
xchg
xchg
add
xor
sbb
sar
xchg
adc
dec
jb
xchg
cmpsl
sbb
mov
or
fs
jge
dec
sbb
dec
mov
movsb
or
jno
popf
hlt
movb
aam
jle
add
sbb
loopne
stos
aaa
and
mov
mov
xchg
dec
jl
imul
cld
and
sub
lea
filds
and
sub
popa
dec
push
loopne
stc
xchg
lcall
fwait
leave
sbb
ja
pop
mov
sbb
jmp
jae
icebp
pop
lods
notb
bound
mov
pushl
addr16
dec
pop
stc
sbb
push
int3
xchg
mov
clc
mov
pop
rcrb
pusha
inc
push
add
mov
aaa
pop
das
jmp
lahf
out
frstor
xor
mov
loope
cmp
scas
pop
xlat
leave
shlb
movsl
rorl
or
sbb
or
push
adc
and
and
or
idivb
jo
jg
dec
dec
popf
int3
popa
cld
repnz
and
push
or
sbb
or
repnz
sub
sub
add
pop
xlat
loope
and
sub
iret
inc
test
xchg
xchg
loopne
in
inc
ret
mov
push
fs
add
jp
jl
inc
push
adc
adc
fcompl
pop
pop
adc
xchg
in
shl
hlt
addr16
mov
arpl
inc
cli
cwtl
jb
push
ljmp
mov
sar
lret
mov
imul
adc
idivl
jg
cs
or
fisttps
arpl
and
mov
jmp
lds
xchg
out
dec
into
mov
inc
add
sub
nop
jle
mov
or
add
andl
add
push
rclb
jns
add
aad
in
frstor
cmpsb
jl
and
inc
repz
cltd
jmp
fadd
int3
pop
or
ror
dec
in
xchg
or
xor
push
sub
mov
leave
or
std
jg
and
dec
jb
push
pop
mov
mov
jae
aad
stos
out
sbb
mov
xor
lahf
dec
ret
les
inc
push
ret
pop
movl
loop
shlb
fcmovu
pop
jbe
jb
hlt
adc
push
xchg
jne
enter
push
push
jb
cmpsb
test
mov
mov
call
jmp
push
lea
outsb
imul
fs
pusha
out
pop
xchg
loope
dec
push
dec
jp
cs
pop
dec
fs
mov
inc
sub
adc
or
sub
fstp
test
cmc
std
inc
xor
mov
push
call
gs
mov
fstl
ja
and
push
inc
jmp
and
or
push
je
mov
pop
aaa
add
cmp
out
ret
aad
aad
lcall
jbe
test
or
inc
mov
add
jmp
sub
xchg
cwtl
add
scas
jg
and
mov
add
inc
cmp
inc
std
sbb
add
jmp
repz
mov
jae
negb
mov
or
push
inc
mov
jns
or
mov
inc
dec
cmp
push
fdivp
lds
sub
mov
or
mov
and
addr16
loop
fsubrp
jge
movsb
mov
lret
das
outsb
fcmovnu
xor
fisubl
pop
jne
fs
cmp
movsl
xor
jl
jle,pt
xchg
mov
ret
lea
push
and
inc
sar
pusha
or
imul
mov
adc
mov
mov
sbb
popf
js
and
imul
loope
test
and
sub
mov
sub
push
stc
and
or
mov
arpl
pop
add
ret
or
ret
les
cmpb
mov
in
test
neg
lret
push
sti
mov
clc
cmp
dec
add
adcl
jnp
cwtl
jmp
xchg
mov
mov
cmpb
out
testl
icebp
addr16
in
imulb
pop
push
add
push
mov
xchg
cmc
iret
data16
push
pop
mov
or
aaa
hlt
jl
or
jmp
lret
hlt
sbb
out
mov
or
pop
sti
jne
ljmp
add
mov
lea
pop
aas
sub
xor
jae
out
or
jbe
push
das
push
pop
add
pop
mov
jmp
and
ss
dec
sbb
js
call
pop
and
inc
pop
or
scas
stos
fistpl
scas
push
imul
or
daa
lret
loop
inc
jns
subl
xorb
push
orb
inc
sarl
push
scas
jo
xor
mov
mov
ja
mov
repnz
and
pop
mov
mov
mov
subb
into
outsl
sub
mov
dec
add
sbb
scas
pop
pop
sub
xor
sub
xchg
dec
xchg
mov
push
xorb
or
jecxz
rolb
or
mov
push
jmp
or
dec
outsl
push
push
mov
movsb
stos
dec
ret
push
jbe
push
pop
xor
shlb
clc
frstor
and
xchg
roll
add
aam
push
pop
push
add
sarl
cli
test
test
push
or
cltd
or
xchg
out
out
js
push
daa
pop
pop
push
mov
lods
ret
popf
and
daa
imul
cmpb
xor
inc
add
push
jmp
pusha
fcompl
push
adc
push
in
shr
mov
stos
nop
pushw
sbb
inc
xor
mov
out
jns
ja
outsb
push
movsbl
shll
cmp
or
jp
push
cld
mov
sbb
xchg
add
mov
das
mov
pop
pop
push
addl
adc
adc
into
dec
inc
es
push
maskmovq
testl
dec
jmp
aad
jl
inc
push
xchg
xchg
sti
sub
jmp
bound
out
out
cmpsl
pusha
jbe
das
pop
arpl
fsincos
out
jecxz
fnstenv
cmp
mov
test
loopne
push
push
pop
pop
push
dec
mov
std
loop
push
out
pop
movsl
aam
imul
popf
jo
and
ja
push
ret
and
add
sub
bound
inc
scas
pop
sub
pop
inc
push
es
xchg
mov
sti
sbb
imul
and
pop
cmp
mov
ror
push
push
aas
adc
push
push
sub
fs
lods
pop
add
ret
push
mov
xor
idivl
sub
add
push
mov
push
mov
xor
inc
ss
jmp
mov
out
test
cltd
inc
adcl
push
mov
push
pop
cwtl
sub
aaa
arpl
xor
pushf
mov
lods
enter
pop
mov
add
and
adc
cmp
not
shr
ret
xorl
int
cli
or
lea
mov
insb
addr16
repnz
inc
dec
mov
add
ljmp
in
ds
decb
dec
jg
bound
xchg
push
test
mov
push
in
ucomiss
shlb
ret
daa
cli
jl
push
and
lods
mov
das
call
xchg
mov
push
jmp
adc
rolb
es
je
cs
ds
dec
es
lldt
lea
hlt
aas
adc
push
jo
clc
push
inc
add
test
das
dec
cwtl
scas
mov
add
not
xchg
push
add
mov
leave
repnz
out
mov
or
sbb
stos
mov
ds
sbb
push
loop
pop
jns
shr
out
push
rol
ss
mov
loope
adc
bound
pop
cld
sti
inc
adc
pop
sub
stos
iret
xchg
sti
aad
xchg
xchg
pop
lods
pop
push
loope
sub
push
das
mov
add
dec
push
decl
push
scas
inc
sub
out
inc
cmpsl
ljmp
jmp
mov
call
les
stos
cmp
test
xchg
jg
lea
or
jl
icebp
or
mov
xchg
add
or
xchg
pop
std
adc
xor
dec
fstp
inc
and
stos
xor
mov
xchg
popf
faddl
pop
cwtl
xchg
and
mov
add
inc
sbb
loop
push
ret
jb
rorb
xor
cmp
decb
pop
mov
js
jmp
adc
mov
aad
clc
jnp
pop
and
cmpsl
sbb
nop
cmp
pop
dec
xor
or
xchg
jnp
bound
xchg
popl
mov
xor
loopne
scas
pushf
lahf
pop
repz
sub
xor
shlb
addb
sub
or
mov
clc
outsl
cmp
sarl
mov
mov
jbe
mov
xchg
lret
in
clc
popa
xchg
pop
pop
push
mov
mov
int
mov
mov
aam
fsts
xlat
or
enter
pop
xlat
xchg
pop
call
ret
pop
pop
cli
inc
xchg
mov
sahf
push
sbb
enter
jns
mov
or
and
pop
push
push
test
cmc
out
mov
or
push
icebp
push
mov
and
movd
movsl
mov
insb
xor
sbb
aas
adc
enter
cmp
jp
dec
call
push
or
mov
mov
jnp
xchg
push
sub
jae
dec
aad
lcall
cs
pop
test
push
jmp
leave
movl
sti
inc
arpl
dec
aas
add
dec
ja
nop
mov
aaa
jmp
lods
aad
shlb
dec
fs
xlat
add
jne
cwtl
loopne
add
repnz
adc
notl
mov
jmp
push
pop
loop
pop
arpl
int
add
addb
les
jns
lret
dec
adc
lcall
adc
incl
jmp
cmp
and
out
jg
es
adc
sub
leave
rcll
and
jge
out
add
pop
push
push
clc
jmp
or
test
dec
cli
mov
cmp
xor
sbb
adc
daa
lcall
js
dec
pop
mov
test
xor
push
sarl
add
sub
sub
jns
and
sub
enter
sbb
jg
cmpsl
leave
fnsetpm(287
pop
fucomp
jae
jne
sbb
outsb
cmp
sbb
sub
sub
fdivrs
inc
enter
jmp
or
out
add
mov
push
aas
sbb
pop
insb
push
pop
pushf
inc
insl
adc
pop
inc
mov
push
xchg
mov
jns
mov
cmp
push
mov
sub
or
cmp
jecxz
inc
mov
clc
outsl
jmp
mov
frstor
mov
mov
mov
jle
bound
jg
jmp
adc
nop
and
adc
subb
and
fs
mov
jbe
je
xor
mov
jge
dec
adc
xchg
sub
out
mov
pop
cli
cmp
mov
jmp
push
mov
dec
inc
add
iret
negl
cmp
ds
jmp
out
mov
sub
or
cwtl
loope
pop
mov
adc
imul
cltd
mov
stc
jle
add
push
mov
mull
xor
pop
stc
dec
pop
cmp
ljmp
jne
sub
addr16
sbb
addl
jp
sub
into
add
ficomps
jmp
movsl
push
or
pop
in
dec
sub
inc
fistl
test
pop
jge
les
adc
jae
add
mov
cmp
mov
push
leave
stos
call
out
inc
mov
insb
mov
jmp
cmp
adc
mov
mov
adc
dec
adc
push
jl
js
sub
jmp
push
fisubrs
sub
dec
push
pushf
or
dec
sub
pop
sbb
mov
push
in
fwait
sub
shlb
jmp
mov
cmp
ret
or
xchg
adc
dec
inc
loop
inc
pop
loope,pt
stc
dec
cmp
test
hlt
shr
not
ljmp
mov
xchg
sbb
test
cmc
add
jg
cmp
xchg
sub
mov
adc
fsub
add
pop
add
es
inc
and
pop
int3
adc
dec
inc
test
xor
cld
sub
mov
pop
aad
jmp
loop
lds
dec
push
jmp
jg
and
fsub
xchg
hlt
in
pop
dec
mov
sub
out
cmpb
push
pop
push
lods
jle
mov
imul
das
popf
jae
push
add
add
lock
fsts
add
pop
lret
in
xlat
xor
std
pop
push
add
sbb
push
cmp
jge
cli
add
xchg
jl
or
sub
mull
lods
jbe
push
jge
jno
mov
iret
jmp
sarb
add
cmpl
xlat
sub
or
test
or
popa
jle
bound
ffree
stos
and
cmp
scas
call
outsb
loop
add
cmp
into
jge
sbb
not
or
call
or
cmpsb
dec
pop
or
icebp
sub
stos
or
jns
inc
pop
int3
scas
pusha
sbb
cmp
add
icebp
push
lahf
jle
push
jmp
sub
push
fld
adc
cmp
pop
push
and
xchg
cmpsl
xlat
cltd
daa
xor
jmp
and
hlt
xchg
mov
add
push
imul
inc
cwtl
cmpxchg
push
push
sbb
pop
push
ret
adc
dec
xor
or
cmp
notb
jae
mov
in
scas
fistpl
add
mov
inc
cwtl
mov
test
push
outsb
std
adc
jp
mov
movsl
pop
mov
rorb
jge
inc
pushf
std
pop
pop
push
sbb
push
test
imul
testb
push
xor
mov
push
imulb
cmp
and
and
pop
cld
sbb
pushf
pop
fisttpll
ret
jne
je
popf
into
out
adc
das
mov
jle
cld
jp
fiadds
aas
dec
jmp
pop
inc
outsb
jecxz
add
cmp
mov
les
cmc
mov
daa
enter
or
jmp
adc
sbbl
add
jl
jns
mov
inc
gs
pop
pop
mov
addb
xlat
push
dec
sti
das
xchg
popa
mov
or
scas
add
lods
sbb
imulb
test
pop
cld
sbb
push
jae
jne
pop
pop
sbb
fsubl
pop
mov
inc
jb
dec
dec
data16
or
out
or
repz
lds
or
jae
fidivrl
sbb
shrb
xchg
jge
fsubl
ljmp
inc
shlb
push
mov
call
data16
mull
and
loop
cli
aam
fwait
popf
leave
dec
xor
aad
add
sbbb
ja
adc
cmc
dec
jmp
out
or
roll
push
ja
mov
push
dec
mov
dec
pop
sub
push
sub
test
mov
test
cmp
popa
out
pop
imul
adc
xchg
icebp
pop
and
xor
sub
test
add
sub
pop
mull
xchg
push
daa
ja
xor
xchg
mov
push
jmp
cmp
xchg
add
xor
fldcw
arpl
ror
pop
pop
hlt
mov
adc
mov
pop
pop
and
adc
or
cmpsl
mov
or
dec
mov
jl
insb
inc
and
fimull
mov
fstpl
scas
mov
lcall
and
cmpsb
int3
das
daa
add
test
andl
lcall
rcll
push
int
inc
mov
add
add
fists
arpl
pop
js
xchg
add
push
cmp
push
cmpsb
adc
pop
and
adc
fnsave
clc
jle
inc
mov
orb
js
pop
pop
jmp
mov
cmp
push
mov
push
cwtl
repz
lahf
adc
loope
in
adc
push
mov
cmp
mov
jl
jg
cmp
mov
sbb
jge
pop
jae
cmp
sbb
xchg
mov
shlb
fidivrl
adc
ret
loop
push
adc
pop
pop
sahf
sub
push
add
aad
decb
add
cld
or
inc
pushf
pop
test
stos
and
and
addb
pop
push
cmpb
aam
shrb
jmp
pop
sub
inc
push
xchg
push
ljmp
dec
and
sbb
add
hlt
popf
push
push
jmp
nop
rorl
push
or
bound
mov
adc
or
ljmp
rcrb
cmp
cmp
ds
mov
inc
mov
les
push
push
mov
cmp
jp
cs
mov
fisttpl
add
cwtl
inc
lahf
mov
mov
lret
dec
inc
lea
icebp
pusha
lods
pop
inc
test
loop
pop
push
jmp
xor
jo
pop
pop
cli
bound
or
test
pop
imul
dec
inc
or
or
push
dec
or
mov
add
add
inc
inc
or
push
push
mov
aas
lahf
test
push
mov
dec
mov
ds
popa
loope
lock
pop
cmpsl
test
xor
jge
xchg
sub
insb
or
pop
sub
jmp
leave
push
pop
push
scas
into
pop
scas
or
in
mov
sub
mov
pop
fdivrl
xor
pushl
sbbb
pop
xor
mov
stos
fldt
sub
mov
mov
rorb
pop
lock
lock
mov
ss
push
shr
subl
sub
pop
movsl
jmp
je
popa
or
sbb
jmp
stos
pop
repz
and
or
fisttpl
shr
xchg
lret
or
xor
lret
adc
sarl
mov
pop
movsl
addb
idivl
pop
cmp
and
bound
pop
xchg
xor
xor
aaa
imul
dec
imull
dec
sbb
ret
ds
dec
pop
sbb
gs
mov
pop
dec
mov
pop
fwait
cmc
in
dec
incl
push
sbb
loope
std
js
add
scas
je
lret
sbb
mov
jge
inc
add
pop
jl
dec
mov
xchg
push
jle
pop
xchg
out
lahf
ret
pushf
notl
out
loop
pop
xchg
adc
inc
pop
xchg
jmp
add
fwait
add
sar
mov
dec
and
repz
mov
test
loope
add
mov
lahf
jns
daa
inc
outsl
or
pop
add
adc
inc
dec
mov
fs
rcl
ljmp
xor
sub
dec
dec
test
mov
mov
stos
lea
jle
into
dec
mov
inc
and
push
sub
and
pop
xchg
jmp
fmull
dec
cli
das
mov
inc
pop
call
add
inc
adc
xchg
dec
xor
dec
popf
adc
push
arpl
push
sarb
dec
add
sub
ds
xchg
aad
mov
jle
jecxz
jns
mov
inc
or
int3
popa
lds
cwtl
xorb
ret
mov
imul
sbb
push
jns
ret
ficoml
mov
mov
clc
pop
jmp
xchg
cmp
jg
imul
out
pop
pushw
inc
ljmp
pop
mov
mov
mov
mov
pusha
sbbb
inc
xor
call
or
push
inc
push
push
mov
sub
dec
sub
jmp
push
inc
fbstp
lahf
and
es
fnstenv
adc
inc
test
dec
mov
adc
pop
cmp
stos
xchg
jp
outsb
xor
hlt
xchg
pop
adc
jle
pusha
mov
lock
xchg
sti
sahf
mov
push
inc
inc
xchg
pushf
xchg
pop
mov
mov
jns
xor
cmp
je
sub
sbb
dec
call
imul
dec
xchg
pop
sbb
or
jmp
adc
pop
sub
sub
add
js
or
pop
dec
das
arpl
dec
xor
outsb
adc
insb
das
ret
lret
jne
das
popf
fistl
jne
test
mov
rclb
jle
jmp
xor
in
mov
push
pop
push
xchg
stc
scas
lret
and
inc
jmp
dec
pop
repz
jmp
imul
std
push
nop
lods
inc
pop
push
mov
lock
movsb
push
jb
jg
sbb
daa
dec
inc
jl
and
outsl
pop
out
std
adc
mov
ljmp
nop
nop
add
dec
mov
pop
or
fcmovne
aas
sub
ljmp
lret
pop
mov
or
add
nop
cs
or
pop
stos
jmp
ss
sub
jo
scas
cmpb
or
cmp
scas
xor
lea
add
mov
dec
add
inc
or
xchg
xchg
push
mov
enter
or
pop
add
outsl
pusha
js
lahf
pop
in
lock
mov
scas
dec
adc
loop
mov
mul
adc
mov
mov
fnstenv
cmpsb
fs
dec
pop
sub
xchg
fwait
inc
adc
call
lahf
hlt
cmp
jmp
inc
sub
or
imul
and
mov
pushf
dec
mov
pop
dec
dec
inc
and
and
js
pop
mov
cs
push
add
cmp
push
loop
das
sub
fstl
mov
xor
insl
daa
mov
popa
ficoms
and
in
es
push
inc
and
xchg
mov
pop
jmp
pop
ret
pop
and
adc
ljmp
cmp
loop
xchg
add
lret
add
jnp
ja
inc
pop
dec
adc
rclb
lock
pusha
xlat
dec
add
mov
jae
mov
pop
xchg
push
adc
pop
jno
inc
xor
repz
jg
push
std
cmc
inc
or
sub
jmp
lea
mov
icebp
sbb
adc
mov
pop
mov
insl
pop
dec
push
adc
dec
stc
test
mov
roll
inc
aas
mov
and
in
ret
mov
pop
pop
outsb
jb
sahf
pop
sub
mov
sub
cmp
jno
jbe,pn
daa
lahf
aas
cld
xor
neg
and
mov
mov
outsl
loope
xor
and
mov
lds
xchg
push
mov
les
mov
dec
or
sbb
loope
cmp
outsb
mov
loopne
push
mov
leave
icebp
les
cld
push
push
push
and
jno
mov
call
push
pop
in
add
mov
mov
or
cmc
add
jbe
sub
in
popl
imul
inc
lea
adc
push
push
sub
xchg
ds
pop
push
xchg
roll
add
out
pop
stos
jo
sub
nop
or
dec
sbb
data16
jp
add
shl
adc
cmp
stc
push
mov
jnp
inc
movsb
jle
pop
dec
push
mov
mov
xchg
pop
addr16
jb
cs
ret
into
lods
mov
out
sti
and
dec
fbld
xchg
cmp
push
pop
cmp
mov
xor
add
clc
call
cs
seta
dec
push
push
push
jns
adc
jg
push
mov
mov
lods
lea
lods
push
xchg
and
icebp
jmp
push
and
out
push
sbb
gs
aad
add
cmpsb
or
push
icebp
inc
arpl
or
mov
lahf
sub
push
inc
mov
and
leave
xor
shr
pop
gs
mov
adc
pop
aad
xchg
test
leave
iret
in
js
cmp
movsl
movsl
xor
fiadds
jmp
pop
inc
es
pop
xchg
clc
xor
mov
mov
rcll
or
pop
mov
xor
icebp
xor
ret
fdivs
aas
xchg
hlt
pop
lret
movsl
or
cmc
cmpsb
scas
shrl
cmp
dec
mov
rcrl
fdivl
pop
jecxz
in
xlat
pop
xchg
sbb
push
std
or
jns
inc
lock
mov
pop
out
sub
jno
or
push
out
jbe
xor
mov
leave
mov
push
or
ds
insb
in
test
test
es
ljmp
push
push
jge
dec
mov
pop
dec
mov
insl
incl
or
pop
push
pusha
mov
push
mov
test
jmp
add
jl
pop
leave
jp
and
mov
arpl
mov
fsubrl
xchg
mov
mov
ficomps
mov
add
inc
pop
call
inc
mov
sub
enter
mov
mov
add
je
jb
dec
inc
loop
rorb
mov
dec
mov
xchg
xor
cld
pop
push
mov
les
sub
in
sub
shrl
es
sub
inc
dec
add
clc
stos
mov
out
adc
sub
lret
dec
inc
mov
or
push
sti
jmp
out
push
idiv
and
push
mov
sbb
pushl
out
pop
lret
inc
aas
dec
inc
repnz
imull
push
or
je
add
insl
dec
jb
sub
push
jno
xchg
vmovd
xchg
sbb
inc
leave
push
and
jmp
js
inc
xor
push
inc
pusha
push
mov
mov
push
sub
shlb
cmp
dec
lods
mov
fimuls
pushf
xchg
mov
xor
add
xchg
pop
jbe
or
aas
testb
or
cmp
inc
mov
sahf
and
xor
or
cmp
push
hlt
sbb
pop
jmp
xchg
jmp
push
xchg
inc
data16
jbe
cmp
xchg
xor
andl
aad
data16
mov
fdivrs
jnp
mov
xor
arpl
icebp
pop
dec
adcb
loope
add
push
jne
push
loopne
mov
testl
cmp
movsb
and
icebp
pop
in
add
mov
xor
rorb
dec
cmp
data16
or
aad
rcrl
and
bound
mov
hlt
and
jns
sub
jae
sbb
adc
into
dec
cmp
fisttpll
sbb
hlt
repnz
loope
popa
dec
dec
add
lds
stc
xchg
add
mov
add
add
popl
mov
xchg
mov
jecxz,pt
pop
test
dec
pushf
iret
pop
sbb
gs
frstor
mov
xchg
leave
adc
pusha
imul
test
cmp
orl
xor
lea
or
add
xchg
mov
testb
insb
pop
ret
mov
aam
int3
cld
xchg
dec
rcll
add
lret
pop
cmp
int3
xchg
add
xlat
add
or
jge
out
mov
push
push
addl
push
cmp
lods
cmp
out
or
xor
xchg
or
pop
push
push
mov
inc
or
pop
mov
pusha
sar
je
jnp
scas
pop
xchg
aad
movsb
dec
jmp
jmp
call
stos
leave
jl
pusha
mov
jg
in
adc
scas
inc
push
push
push
mov
add
cltd
addb
insb
inc
xchg
jns
outsl
movsl
std
cltd
fidivrl
shlb
fcmovb
aad
add
sar
movb
or
sbb
jg
dec
cmc
les
pop
or
or
jbe
jne
aad
mov
pop
mov
ljmp
in
imul
negb
add
test
popa
andb
add
dec
xor
nop
in
xlat
mov
push
mov
cmp
repnz
aad
jns
add
lahf
jno
jmp
jnp
push
or
les
test
push
cmp
or
dec
sub
mov
pop
mov
sub
jp
and
pop
sbb
sub
orl
fadds
in
xchg
inc
cli
xor
xor
push
xlat
xor
push
jmp
loopne
stc
xchg
mulb
pop
stos
in
adc
mov
xor
xor
xchg
pop
loopne
scas
xor
clc
loopne
fucomi
imul
pop
pushl
inc
dec
pop
dec
adc
shll
and
loopne
adc
add
xor
dec
inc
mov
add
shrb
push
ljmp
inc
popa
inc
push
pop
jno
fists
inc
or
jb
sub
adc
popf
repz
mov
cmp
mov
movsl
jge
rcrb
sub
push
pop
mov
iret
dec
push
in
pop
sbb
pop
ret
call
call
imul
sub
and
add
movsb
lock
call
inc
ja
stc
xor
lods
pop
aam
mov
sub
lds
bound
scas
outsb
les
fs
fadd
pop
dec
cmp
cmp
push
scas
rcrl
lock
push
dec
aas
arpl
and
mov
inc
dec
cmpsl
cmp
pop
mov
adc
sub
jmp
xor
xchg
push
or
sub
or
inc
sub
mov
stos
je
mov
jmp
lahf
decb
das
mov
stos
mov
mov
mov
pop
inc
sub
adc
stc
add
notb
sub
daa
dec
ljmp
add
xor
mov
pop
daa
lock
sub
cmp
add
mov
mov
call
pop
jns
in
mov
inc
ffree
out
mov
push
mov
xchg
stos
pop
out
leave
loope
push
outsl
imull
xchg
adc
or
lds
call
movsb
sbb
popa
dec
fildl
inc
in
das
in
shrl
or
mov
repnz
inc
push
pop
or
and
add
mov
inc
sub
shrl
cmp
rolb
rolb
lds
mul
ficompl
inc
aaa
ret
notl
test
insl
test
add
cmc
sbb
fpatan
rorb
adc
or
push
arpl
cmp
inc
bsf
sti
mov
pop
xor
inc
les
call
test
push
push
loop
pop
aam
dec
out
mov
push
mov
and
pop
inc
jle
and
inc
sbb
imul
and
xor
ret
outsb
inc
xchg
negl
jae
and
xchg
mov
mov
mov
add
or
sub
shrb
add
mov
das
sub
dec
icebp
test
xchg
inc
addl
mov
daa
insl
sbb
dec
pop
scas
mov
sub
std
pop
xor
sub
lods
bnd
add
adc
or
xchg
aas
adc
sti
sub
adc
mov
add
adc
roll
cli
mov
sbb
cmp
push
sub
push
jmp
mov
sub
fsubl
out
mov
stos
cmc
xchg
xchg
xchg
jnp
inc
out
add
fldl
nop
mov
call
lock
jno
mov
imul
adc
add
outsl
sbb
mov
pusha
shll
pop
cmp
jl
adc
orb
aaa
cmp
sub
sub
lods
inc
mov
push
pop
mov
pop
in
push
xchg
add
mov
rorl
pop
xchg
mov
fsubrp
jg
push
or
clc
pusha
push
repnz
sub
dec
out
cs
gs
movsb
xor
sub
pop
jnp
cmpsb
call
and
popa
jl
push
dec
add
jmp
mov
inc
dec
fwait
add
add
dec
imull
ljmp
into
pop
insl
fsubl
and
push
push
cld
sbb
and
sub
mov
dec
fsubrs
or
dec
icebp
outsb
push
nop
and
dec
mov
loopne
inc
add
or
leave
pop
pushf
adcb
cmp
sbb
pop
dec
jg
jnp
mov
push
xor
fwait
pop
scas
sub
xchg
push
stos
sub
loop
jge
dec
push
int3
stos
mov
adc
sbb
adc
jmp
and
cltd
jbe
jnp
push
aad
js
insl
cs
mov
or
shl
jl
or
call
mov
mov
mov
adcb
scas
mov
push
inc
sub
addr16
adc
mov
mov
pop
jmp
fdivrs
fldl
das
mov
mov
cld
adc
mov
in
xor
aaa
pop
push
les
out
sub
sub
ret
add
lods
pop
sbb
push
jmp
xor
dec
ljmp
mov
mov
mov
frstor
pop
sub
or
mov
xchg
in
xor
add
jmp
ret
push
fimull
arpl
adc
ret
ds
mov
pop
cwtl
fisttpll
stos
je
xor
pop
std
aas
in
aam
mov
out
push
ret
jmp
cmpsl
mov
push
out
jae
push
xchg
bound
jle
push
or
jl
cwtl
mov
subb
inc
fdivrs
push
push
pop
push
out
cwtl
xlat
leave
dec
sub
les
movsb
jb
pop
cmp
mov
icebp
or
arpl
das
sbb
cmp
inc
mov
fdiv
into
or
popl
inc
out
cmp
jle
adc
fisttps
shl
ljmp
rcl
xor
fnstenv
jl
xlat
sub
aad
add
repnz
andb
int3
aad
push
aas
pop
iret
or
mov
pop
mov
sub
mov
ljmp
shll
cmpsb
dec
or
mov
vpaddsw
or
add
dec
adc
xchg
outsl
ret
mov
mov
pop
cmp
dec
in
addr16
mov
test
or
pushl
push
mov
sub
mov
xchg
jg
adcb
inc
push
xchg
pop
in
jmp
add
inc
ljmp
mov
jns
inc
xchg
pop
jns
imul
xchg
test
mov
or
jnp
fmull
jmp
xor
rorl
stc
add
push
fsubl
sahf
lret
dec
mov
pop
push
add
xchg
jb
ret
sub
xchg
clc
repnz
xchg
mov
loopne
aas
inc
outsb
aam
add
popa
fcomip
xchg
sbb
xor
test
mov
push
andl
xchg
popa
pop
mov
stos
or
fld
jns
ds
rcrl
and
pop
stos
std
mov
loopne
and
insl
xor
stc
lods
pop
mov
jns
cli
sub
cmp
cli
jp
sbb
or
pop
mov
mov
push
push
xchg
xorl
dec
sub
in
xchg
pop
rorb
push
dec
xchg
nop
and
rorl
notl
mov
daa
pop
push
jmp
mov
cs
mov
movsl
cmc
dec
cmp
push
jne
in
hlt
inc
lcall
mov
or
push
add
add
inc
xchg
stos
outsl
repnz
pusha
dec
in
sbb
loopne
xor
cmc
fnstcw
mov
dec
popf
adc
push
pusha
mov
shll
cmpsl
jmp
and
out
or
ds
or
mov
mov
sub
dec
sti
pop
xor
notl
movsb
test
jge
pop
mov
sub
jne
adc
mov
dec
insb
adc
sbb
loopne
gs
sbb
fiadds
push
int3
sub
jmp
fwait
pusha
iret
ja
jg
sarb
push
enter
cld
popa
dec
cmp
dec
add
repz
movsb
cltd
xchg
cmp
inc
or
daa
and
push
ss
mov
jmp
add
imull
inc
push
aam
setb
or
fs
xor
add
loopne
xor
pop
test
in
mov
xlat
andl
mov
push
dec
jmp
jmp
push
ja
xchg
hlt
push
add
popa
and
mov
je
xor
add
push
and
scas
imul
jmp
mov
xor
xchg
cwtl
xor
daa
pop
push
je
inc
push
or
jns
test
in
out
ja
mov
popf
pop
cs
adc
pop
xlat
or
lock
insl
jae
ljmp
sbb
add
add
frstor
xchg
leave
lds
out
xchg
addr16
js
lds
sub
scas
roll
jmp
fcomps
push
repnz
adc
ret
daa
fnsave
add
jmp
sahf
adc
or
push
xor
mov
adc
pushl
cmpsl
es
mov
inc
sbb
ret
hlt
in
sbb
imull
pop
and
mov
jo
and
out
cmp
cld
popa
jl
and
xor
ret
sbb
fidivrs
sub
and
stos
addr16
les
out
adcb
push
sbb
xor
mov
add
insb
imul
dec
popa
or
mov
xchg
dec
mov
cltd
mulb
in
and
dec
mov
int
cmc
sub
jmp
jmp
jo
dec
push
pop
adc
cmp
sub
roll
test
push
cmp
lret
das
xor
insb
mov
jmp
data16
iret
loopne
xchg
fld
jbe
cwtl
pusha
scas
jo
loope
mov
mov
sub
loop
push
aas
or
xchg
jp
fwait
sarb
outsb
sbb
imul
xor
sar
lret
lahf
out
in
std
jne
shll
mov
mov
jp
adc
lret
sub
ja
xor
fucomip
add
dec
lock
add
mov
sub
sub
inc
sbb
test
out
outsb
enter
pop
popa
mov
push
push
scas
mov
dec
stos
pushf
outsl
jmp
ret
ljmp
ljmp
pop
fcoml
popa
mov
bound
cltd
adcl
add
xor
push
mov
fdiv
movb
jmp
shll
loop
jne
lahf
add
fsts
sub
lods
pushl
fbld
out
lret
dec
xchg
mov
dec
sahf
shll
cmp
fdivrl
in
push
fidivrl
or
push
test
dec
push
jecxz
push
sub
sbb
push
pop
mov
and
roll
mov
or
pop
mov
shl
jg
outsl
xlat
inc
idiv
add
pop
test
test
adc
out
mov
xchg
or
adc
imul
pusha
or
fdivrl
push
jne
es
dec
adc
cmp
movsl
cs
xchg
dec
push
xor
jp
add
add
jno
add
and
adc
xchg
insl
mov
lock
dec
pop
adcl
scas
push
add
mov
mov
jnp
mov
shrd
dec
cmp
bnd
jge
add
add
push
gs
shl
push
sub
clc
out
insb
jmp
mov
jmp
popl
cli
dec
cmp
ret
cmp
or
inc
mov
clc
mov
xor
cmp
sub
lcall
jbe
xorb
or
js
sbb
je
stos
push
outsb
mov
sahf
xlat
decb
pop
test
or
push
pop
dec
stos
add
fbstp
repz
popf
mov
pop
mov
clc
enter
and
and
rol
add
lea
sbb
movsb
pop
inc
dec
dec
data16
add
xor
cmpsl
lock
xorps
mov
jmp
fwait
outsb
dec
out
sub
lods
push
xchg
xor
pmulhw
out
stos
shlb
ret
stos
fnstcw
inc
fs
pop
data16
jns
cmp
ja
es
out
pusha
test
xchg
test
mov
xor
fld
push
test
in
push
scas
enter
jbe
imul
inc
addr16
data16
fimull
push
lods
inc
jl
or
push
adc
jo
fld
mov
jae
out
out
dec
dec
sub
lock
xlat
pop
adc
fiaddl
jo
cwtl
push
push
mov
push
js
or
jmp
sbb
popfw
mov
addr16
std
cli
inc
or
sub
fbld
or
icebp
movsl
test
add
cmpsl
xchg
push
push
xchg
loop
jge
push
ret
psubsw
daa
aas
inc
xchg
fidivrl
inc
shll
jmp
adc
xchg
loope
and
in
popf
dec
pop
push
dec
adc
lock
push
xchg
xchg
cmc
movsb
imul
and
push
imul
adc
cmp
push
nopl
push
jb
int3
imul
pusha
js
mov
in
push
stc
mov
addr16
add
xor
add
js
loope
dec
add
into
leave
frstor
leave
push
test
dec
dec
stos
push
lods
add
or
cmp
loope
das
inc
pop
dec
enter
test
ja
fs
out
idivl
xchg
pop
dec
dec
xor
jbe
repnz
sbb
jg
push
mov
mov
aaa
rol
add
ljmp
sub
mov
in
cmp
loope
outsb
into
jmp
xchg
int3
lret
and
stos
lahf
pop
cwtl
cmpsl
push
mov
loopne
jmp
pavgb
bnd
cmpsl
sub
pop
adc
push
rclb
das
fsts
or
cs
add
sub
xchg
jecxz
push
sub
sbb
or
hlt
icebp
mov
pop
mov
adc
dec
aas
dec
sub
pop
dec
add
inc
push
mov
shl
add
jg
pop
inc
mov
imul
add
jl
jecxz
sub
shlb
into
out
xchg
jnp
adc
roll
adc
movsb
xchg
add
dec
xchg
daa
fsubrl
jmp
int
mov
pusha
call
or
jg
pop
pop
xchg
imul
cmp
leave
in
jne
orb
mov
cmp
or
repnz
fstl
jmp
inc
mov
mov
xchg
scas
mov
arpl
int3
or
pop
mov
in
sti
sub
xor
lret
rorl
or
push
das
gs
addb
inc
jg
sbb
out
pop
lds
outsl
push
push
scas
loope
or
add
sub
adc
jmp
ljmp
or
inc
inc
sbb
or
popf
jmp
imul
push
shrl
enter
mov
icebp
test
jle
sbb
dec
aaa
clc
outsb
mov
add
mov
push
icebp
and
mov
inc
cld
push
or
cmp
sub
adc
pop
sub
dec
mov
and
push
mov
sarl
fsts
sbb
adc
add
fsubrs
in
cmp
daa
faddl
pop
inc
xor
push
std
mov
pop
mov
inc
aad
mov
sbb
sub
xchg
in
sub
sub
ret
pop
mov
sti
cs
sub
arpl
fists
outsl
and
ror
push
mov
insb
insl
daa
jmp
negb
sub
inc
adc
add
xchg
stc
dec
jmp
fstpl
daa
sub
and
sti
iret
in
scas
popf
adc
xor
jle
mov
dec
cmpl
addb
sbb
push
add
jmp
addb
sbb
or
mov
ja
pop
mov
ja
addr16
scas
inc
stos
mov
lods
and
pop
mulb
loop
sub
inc
daa
add
mov
and
das
test
movsb
addb
pop
lret
jo
es
or
into
xor
bound
xchg
testl
jmp
add
and
mov
lods
rcr
adc
push
adc
pop
mov
dec
jle
loope
sub
jmp
cmpsl
das
mov
adc
push
inc
add
cmp
sti
mov
adc
cmp
lods
and
jmp
cmc
scas
pop
pop
les
jmp
testb
push
in
cmp
sbb
out
pop
and
lods
dec
mov
inc
dec
shl
pop
push
cmpxchg
into
rorl
and
push
mov
call
sbb
or
push
xlat
add
sti
fbstp
sbb
lret
leave
xor
cli
sub
aas
add
add
pop
bswap
or
cmp
add
add
push
mov
jmp
dec
rcr
add
mov
testl
and
fucomp
adc
cmpsl
ljmp
int
or
jno
or
leave
fadds
gs
jmp
fiaddl
pop
dec
es
jge
shrb
fs
mov
or
and
pop
or
pop
add
rclb
push
mov
icebp
mov
sbb
lds
addr16
int
jae
popw
fbstp
xor
adc
sar
fistpl
cld
push
adc
mov
test
or
add
inc
dec
push
fsub
stos
add
sub
into
jmp
mov
and
push
shl
xor
jno
mov
fiaddl
inc
stc
aas
mov
add
inc
popa
push
adc
fsts
pop
or
dec
push
sti
mov
add
rolb
ret
inc
into
ficoml
and
jmp
ret
lods
fnstenv
orb
sub
pop
jmp
sub
sub
shll
push
add
sub
outsb
sbb
mov
and
and
pop
sub
cli
movsb
jbe
pop
push
mov
dec
repnz
jmp
adcl
mov
js
pop
mov
out
mov
fucomip
in
repz
dec
jmp
push
popa
xchg
sbb
pop
dec
sti
xor
aad
stc
add
xchg
rol
xchg
mov
jmp
lock
add
pop
test
decb
fwait
inc
or
sbb
daa
das
enter
cmc
adc
data16
ficoml
cmp
js
sbbb
xchg
mov
xor
and
test
push
lea
sub
or
or
pop
add
cwtl
adc
add
and
add
shl
sub
fisubrs
into
push
xchg
or
pop
jmp
fidivrs
push
testl
mov
and
movsb
pop
repz
and
mov
not
add
xor
fcomp
sqrtpd
cmpsb
or
aam
push
jmp
rcl
cli
or
inc
notl
and
mov
xchg
xor
add
aad
jmp
adc
inc
sub
xor
xchg
mov
mov
inc
decb
push
mov
addr16
shl
mov
int3
lds
and
sbb
por
fcoms
adc
mov
mov
daa
sbb
jle
hlt
rorl
cmp
mov
icebp
bound
int3
addr16
sbb
aad
movsb
orb
das
dec
int3
dec
subb
nop
pop
or
mov
adc
pop
pop
cmp
ds
push
pop
add
cmpsl
call
dec
test
mov
pop
in
pop
xchg
incl
jg
push
xor
xchg
mov
arpl
pusha
add
push
sbb
mov
pushaw
fstpl
mov
xchg
pop
xchg
push
pusha
sbb
in
daa
out
test
jb
ret
loope
cwtl
outsb
dec
sbb
sbb
and
ljmp
xchg
ret
clc
rcll
sub
mov
push
pop
fld
pop
mov
push
or
cmp
sub
pusha
sti
mov
test
lock
rorb
sub
imul
inc
testb
stos
not
jmp
pop
jns
loope
mov
addr16
incb
addr16
loop
dec
sarb
ljmp
jge
nop
mov
xchg
hlt
mov
mov
push
sub
outsl
ret
popa
pop
inc
ror
push
xlat
jb
inc
dec
adc
stc
movups
nop
das
add
cmp
popl
aas
pop
pop
sbb
popa
mov
push
xchg
das
mov
je
or
stos
jg
jl
and
inc
cmp
add
jp
xchg
pop
add
xchg
stos
add
push
js
outsb
dec
jo
jmp
lods
dec
clc
ret
sub
jno
jp
nop
mov
cmpsl
mov
sub
je
push
pop
mov
mov
aad
rcrb
sbb
imul
add
call
sbb
jne
dec
inc
or
scas
je
xchg
orl
mov
inc
outsb
out
cwtl
idiv
mov
fcmove
andb
jo
jmp
out
fidivrs
or
loop
cmp
nop
cmp
out
cs
ficoml
jg
loop
hlt
jle
mov
pop
mov
adc
cld
sub
lret
pop
pop
xor
sub
das
cmpsb
xchg
shlb
imul
add
add
mov
sub
xor
xor
mov
loope
add
pop
in
or
or
push
sarl
fcomp
cwtl
xor
nop
jge
cmp
or
fs
jp
sub
loop
push
inc
and
sub
dec
test
aaa
repnz
dec
test
sahf
cmp
sub
in
aas
cmc
push
adc
ja
add
sub
xchg
idivl
fsubs
or
fs
mov
lock
pop
rcrb
inc
lret
loop
jne
out
in
into
push
cwtl
insb
daa
int
lret
adc
shll
xchg
mov
xor
into
hlt
loope
jb
mov
aas
xchg
fstpl
sub
pop
jle
xadd
or
cs
lds
pusha
jo
jo
push
xor
push
outsb
shr
pop
aaa
cmp
pop
das
icebp
adc
rcrl
jmp
add
out
imul
pop
loope
pop
jp
mov
inc
xchg
inc
shl
pop
pusha
lret
push
lods
sub
xor
fs
cli
les
clc
outsb
in
jl
or
jae
das
call
out
sub
jae
les
pop
jns
or
push
xor
scas
sub
cmp
or
pop
or
cmc
pushf
sbb
test
and
ja
sub
lahf
imulb
add
sub
xchg
lcall
es
lret
sub
insb
inc
and
pop
pop
and
addb
inc
aaa
add
and
loop
adc
pop
add
mov
add
imul
pop
sub
shlb
xor
outsb
in
out
cmp
sbb
xchg
sub
xor
xor
add
pop
ret
and
jmp
fadds
cli
inc
mov
push
std
lcall
push
ret
das
fs
ret
jl
adc
mov
push
loopne
jae
lcall
test
push
xchg
pop
xor
push
orb
inc
mov
div
jo
add
dec
push
test
fisttpll
jmp
enter
in
mov
adc
and
jle
inc
stc
in
or
inc
push
in
xor
sbb
or
mov
scas
and
cld
out
dec
les
mov
jle
int
cmp
movhlps
jb
jmp
mov
out
sbb
aam
loopne
aaa
mov
jecxz
repz
jbe
and
sahf
in
xchg
pop
sub
pop
mov
lods
and
sub
sbb
mov
inc
mov
pop
pop
adc
mov
cmpsl
popf
pop
jmp
clc
jo
ret
hlt
mov
mov
lods
inc
pop
in
pop
dec
lea
sbb
mov
in
add
jmp
jmp
mov
mov
xchg
push
sbb
jecxz
pop
xor
stc
xor
ret
and
ret
lods
bnd
adcb
pop
or
sub
jne
inc
or
shlb
mov
in
and
pop
testl
push
aaa
stos
inc
add
xchg
lock
hlt
and
cmp
pop
test
in
push
jnp
xchg
out
jl
mov
cltd
sub
push
shlb
cmp
adc
adc
gs
cli
nop
movsl
lods
push
stc
cmp
pop
pop
test
dec
sti
sub
mov
iret
adc
mov
inc
add
fmul
mov
xor
push
pusha
fistpl
imul
jne
std
ret
jmp
outsl
mov
test
pop
fsubrs
lret
and
mov
add
mov
jl
cmp
lock
outsl
ds
dec
das
push
ja
jg
sbbl
push
std
cmpsb
imul
jl
es
mov
mov
and
mov
nop
stos
inc
or
xor
and
ret
cmpsl
jmp
xchg
pop
xchg
mov
dec
mov
mov
inc
push
imul
dec
test
add
jp
nop
mov
orb
jae
daa
jl
inc
jmp
test
jmp
loope
jns
imul
fists
jae
push
jmp
hlt
test
sub
loope
lret
inc
fcmovnbe
shrl
mov
sub
dec
hlt
adc
inc
in
shl
jbe
mov
aaa
or
push
mov
jb
outsb
sub
rcrb
push
mov
scas
push
pop
cmp
rcr
test
sbb
sub
fidivs
and
cmp
pop
sub
mov
roll
popf
fldcw
inc
jg
pop
add
fwait
pop
dec
xor
mov
pop
or
pusha
sbb
jo
pop
lret
and
test
adc
pop
nop
int3
add
add
or
pop
in
add
push
jnp
int3
rclb
pop
xor
push
mov
in
inc
pop
push
lds
out
clc
outsb
mov
cld
enter
iret
imul
push
push
inc
xor
popf
fldl
and
pop
es
dec
add
imul
es
xorb
addb
shll
fmul
shl
js
mov
shll
loop
pop
lods
aam
push
out
jg
dec
mov
nop
mov
cmp
inc
jmp
scas
mov
add
push
xchg
aaa
or
scas
xchg
mov
out
addb
xor
out
add
pop
dec
shl
lret
repnz
push
mov
or
mov
push
outsl
push
pop
or
out
repz
push
stos
add
in
lcall
xchg
push
lds
add
inc
out
xchg
pop
adc
pusha
std
pop
iret
test
pop
push
repnz
bound
or
sbb
mov
pop
inc
mov
xor
pop
test
cli
pushl
call
pop
adc
repnz
xchg
fdivr
xchg
inc
xor
mov
mov
mov
xchg
cmp
sub
inc
or
jp
push
push
movsl
push
push
mov
jmp
and
cli
mov
rcrl
das
xor
das
dec
inc
jno
mov
mov
adc
shll
jnp
jno
jnp
xor
or
out
sbb
pop
adc
cmp
xchg
cs
jg
mov
xlat
and
push
mov
mov
pusha
cmp
clc
sub
lods
xchg
mov
push
jb
fisubs
ficomps
out
ret
push
mov
and
stos
insb
mov
ret
int
inc
push
mov
fisttpll
jmp
pop
stos
xchg
inc
adc
aam
test
xor
push
mov
shl
push
push
xorb
dec
add
cmc
stc
sub
xor
push
add
dec
dec
jns
add
ret
or
jge
jl
add
add
push
cmp
adc
hlt
mov
repnz
in
decb
sub
add
xchg
nop
dec
dec
aam
jne
and
loop
jl
adc
and
test
jns
xchg
inc
add
xlat
sti
inc
cmpsb
pop
sub
daa
sub
add
jg
push
daa
push
pop
es
or
stos
bound
cmp
movsl
fisubrs
push
fwait
jbe
and
jmp
ret
cs
imul
lret
cltd
lock
and
punpckhdq
out
inc
shl
cmp
cmp
xchg
jmp
int
es
and
inc
cmpsb
ficoms
sub
push
xchg
inc
mov
or
push
gs
xchg
filds
pop
mov
add
sarb
jno
or
mov
aaa
outsl
jge
leave
or
xchg
icebp
adc
lahf
jno
dec
pop
mov
jmp
jae
push
mov
sbb
out
dec
pusha
in
add
fs
add
push
jmp
push
popa
sub
and
dec
pusha
stos
popf
shll
les
jbe
adc
inc
inc
inc
mov
out
jl
leave
mov
sarl
sbbl
shll
sbb
jnp
pop
cwtl
pop
les
dec
fpatan
shrd
add
dec
arpl
movnti
mov
data16
xchg
ja
sub
lods
fimuls
bound
mov
pop
popa
sub
popf
dec
pusha
fnstsw
xchg
inc
movsl
sub
cmpsb
inc
add
cmp
sar
movsl
add
mov
and
or
adc
jbe
adc
fistpll
cwtl
stos
imul
jns
inc
push
xlat
scas
test
shr
repnz
xchg
and
pop
imul
setb
xor
xor
ret
aad
mov
sub
cmp
lret
rolb
hlt
in
push
inc
pop
or
push
roll
js
jbe
movsl
ljmp
push
add
and
rolb
pushf
jmp
lods
add
sub
pop
fidivrs
adc
rorl
mov
test
dec
out
mov
xchg
pop
mov
lahf
cmp
add
xchg
adc
rol
push
push
mov
and
icebp
hlt
push
push
sub
mov
pop
shlb
dec
pop
inc
stos
add
cmp
ja
adc
add
inc
push
mov
adc
inc
imulb
pop
jg
jmp
jge
clc
lock
fwait
xor
call
shl
nop
out
mov
jmp
and
ljmp
inc
mov
mov
push
dec
sar
push
stc
lods
out
in
loop
push
jge
test
push
jne
cmp
mov
shl
test
std
mov
ret
jg
andl
or
mov
sub
push
jecxz
sub
pop
pop
pop
sbb
pop
fdivs
dec
xchg
clc
push
push
push
mov
add
gs
mov
inc
push
jns
xchg
rorb
mov
jne
add
movsb
test
vpermilps
fisubrl
or
dec
fmuls
daa
movb
je
fdivrs
add
or
adc
add
pop
add
dec
test
pop
mov
imul
dec
or
xor
xor
aas
movsl
sub
xchg
loop
mov
xchg
insl
sarb
xor
and
insl
push
das
or
and
es
mov
mov
add
inc
pop
popa
add
clc
and
push
mov
or
adc
adc
pop
xor
jl
aas
cli
mov
ret
or
repnz
scas
mov
pop
mov
xchg
or
mov
cs
pop
xchg
inc
xchg
push
bound
xchg
into
cli
add
lahf
push
cli
and
shr
jmp
fidivrl
sub
loopne
test
in
ret
test
cmp
or
pop
push
fdivp
push
loope
ja
push
push
sahf
dec
push
in
and
ror
adc
in
adc
pop
cmp
icebp
push
mov
mov
stc
and
lods
cs
inc
dec
cmp
ja
rolb
mov
and
push
mov
lods
mov
pop
push
sti
fs
cltd
int3
and
add
mov
xchg
shr
ja
jmp
loopne
imul
std
psraw
cmp
rcrb
orb
ds
pop
lret
repnz
push
inc
dec
mov
stos
rcrb
ficompl
out
xorb
mov
sbb
ds
lahf
pop
pop
and
testb
jmp
loope
mov
outsb
les
dec
add
mov
test
and
mov
jmp
jge
pop
jno
aaa
xor
das
lods
fwait
loope
adc
pop
push
in
or
pop
into
dec
cmpsl
jmp
xchg
mov
mov
imul
ljmp
sub
adc
pop
xchg
lret
pop
sbb
popf
inc
decb
mov
add
imulb
inc
dec
sub
mov
mov
insb
lods
fadds
cmp
ljmp
rcll
loope
mov
jbe
sub
push
pop
adc
stc
lret
ret
or
clc
lds
fwait
dec
xchg
xor
jmp
xchg
cmpsb
je
push
cmpsl
jmp
mov
sub
adc
inc
ss
dec
popf
push
inc
add
icebp
neg
test
and
adc
and
xchg
fisubs
in
and
push
and
in
jbe
pop
xlat
insb
popf
into
push
dec
pop
ljmp
dec
xor
lods
scas
cmp
imul
push
lret
add
add
shl
cmp
insl
jo
push
dec
fprem1
push
sub
ja
push
jge
negl
in
mov
mov
cs
pop
xchg
push
inc
push
out
push
jo
sub
add
push
or
add
add
notl
cwtl
push
xchg
add
ja
push
inc
scas
out
sbb
push
shr
add
inc
stos
movsl
icebp
push
cli
sub
pop
mov
cmp
cs
and
xchg
dec
mov
jecxz
cmp
mov
fidivrs
mov
sub
in
dec
add
and
cmp
fisttps
jmp
sbb
cli
rclb
nop
push
mov
int3
ljmp
into
neg
or
mov
xchg
mov
pop
xor
test
sti
xchg
sahf
jmp
add
adc
lahf
shlb
mov
test
mov
push
mov
add
enter
jg
pop
pop
stos
leave
pop
lock
mov
inc
les
mov
pop
subb
ss
xchg
jno
loop
adc
bound
push
faddp
iret
jl
stc
push
or
out
cmp
notb
or
mov
mov
data16
in
imul
pop
cmp
dec
cmp
nop
dec
jmp
jb
call
les
or
push
add
or
pop
adc
jp
or
cmp
add
push
sbbb
and
popa
cmp
push
fs
mov
mov
imul
ret
pop
xor
into
ja
push
adc
fadd
addb
or
insl
imul
imul
jb
dec
sbb
into
loop
js
xchg
fs
and
mov
imul
mov
jo
push
pusha
pop
xor
mov
mov
fcomip
sub
ret
push
int3
jp
cmp
push
adc
push
jge
add
gs
mov
les
imul
or
adc
pop
in
mov
push
add
and
cmc
addr16
push
push
add
jle
sub
add
insb
data16
jmp
push
sbb
pop
in
movsl
cli
pop
sbb
jl
and
pop
jge
sub
or
fldl
hlt
test
rolb
or
inc
push
adc
iret
test
stc
dec
cli
inc
aas
idivb
fmull
push
stc
sbb
mov
fwait
jo
mov
sbbb
pop
shlb
sub
aam
jmp
push
ret
push
in
in
mov
pusha
inc
push
xchg
loopne,pt
mov
mov
andl
movsb
add
add
gs
sub
inc
fwait
mov
pop
lahf
in
iret
or
mov
cmp
cli
cmpsb
xchg
adc
inc
out
xchg
imul
dec
test
addr16
or
mov
mov
push
pop
int
fstpt
sub
dec
in
xor
ret
dec
lock
dec
xchg
hlt
das
or
rcrb
ret
jo
pushf
dec
push
pop
push
jmp
jnp
mov
movsl
push
jne
jno
cmp
xchg
jle
mov
shr
insb
dec
cmp
mov
sub
hlt
ss
dec
inc
divl
out
jae
pop
out
adc
mov
sbb
loop
sbb
and
test
mov
push
or
mov
rcll
dec
leave
leave
fiaddl
pop
dec
in
push
push
pop
mov
rolb
aam
hlt
lcall
jne
nop
adc
cwtl
sbb
movsl
and
je
add
fistps
shl
jns
jmp
or
jmp
aam
js
xchg
rclb
lds
sub
clc
add
adc
push
mov
push
out
push
inc
shrb
fsts
or
pushf
nop
call
add
mov
push
aam
sbbb
inc
sub
cs
adc
or
add
aad
sbb
xchg
mov
push
lret
daa
push
aad
dec
mov
mov
cmp
push
add
shlb
push
lock
xor
pop
out
inc
jp
int
inc
dec
mov
jb
enter
mov
add
xor
mov
xchg
fadd
sbbl
inc
leave
dec
addb
or
imul
and
pop
pop
sarb
sub
and
and
ss
mov
or
shrb
pop
jge
daa
lea
xchg
cmpb
shll
imul
push
dec
or
out
sbb
je
or
sbb
aad
or
imul
pop
pop
sbb
adc
lahf
jno
ljmp
out
or
fidivl
mov
inc
jecxz
jg
in
push
aam
and
mov
and
push
dec
sbb
sbb
into
imul
or
pop
push
sbb
push
pop
push
add
repnz
test
sbb
inc
push
scas
pusha
ficoml
push
jb
jb
add
orl
mov
ljmp
lods
pop
cmp
jge
movsb
bound
daa
popa
sahf
adc
inc
sarb
jo
or
andps
sbb
jmp
mov
sub
shr
and
jmp
push
ja
mov
clc
fistpl
pop
and
jb
lahf
jne,pt
test
movsl
sub
fs
mov
mov
leave
xchg
sbb
mov
inc
xchg
subb
xor
nop
and
inc
add
inc
sub
pop
cmc
jbe
sub
jmp
adc
pop
mov
cmc
sub
mov
into
out
dec
inc
mov
inc
sub
cmpsl
add
push
dec
jp
test
dec
mov
xchg
adc
andb
sbb
pop
adc
pop
ret
xchg
ficompl
movsl
sbb
call
mov
mov
je
js
repnz
aas
aam
cmp
xor
cmp
aad
add
jmp
repnz
add
mov
cs
rcrb
sbb
lds
ja
mov
xchg
les
or
mov
mov
jae
mov
out
pop
adc
orb
and
movsl
jge
xchg
movsl
xor
mov
mov
jo
rorl
dec
add
xchg
dec
push
xchg
mov
push
in
pushw
popf
and
jmp
pop
ficomps
fstps
xchg
rcrb
aad
push
clc
sbb
sbb
jge
or
and
es
and
insl
loop
add
bound
xchg
leave
sub
rolb
sbb
inc
icebp
outsb
shll
ja
add
clc
dec
push
adc
pop
aam
adc
or
pop
and
sub
js
mov
adc
in
in
idivb
fldl
cltd
les
fs
pop
fisttpl
xchg
fisttps
xor
shlb
stos
dec
stos
fsubrs
and
and
push
sub
inc
xchg
lret
pop
adc
stc
clc
adc
repz
sbb
add
add
leave
icebp
cli
push
rcll
dec
stc
and
jmp
cmp
call
cli
frstor
mov
rcll
pop
push
pusha
xor
in
or
sub
pop
or
sarb
jl
mov
xor
es
or
not
xchg
out
add
pop
and
in
xor
dec
lock
push
andb
popf
pop
inc
push
adcb
stc
sub
popf
adc
mov
int3
mov
das
xchg
aad
sbb
out
mov
mov
gs
inc
mov
inc
add
dec
outsl
and
add
pop
scas
mov
xor
in
fcoms
sub
std
pop
add
out
les
cs
pop
and
or
inc
sti
daa
out
je
lock
rorl
or
xor
cmpsl
mov
pop
xchg
xor
outsb
orb
push
pop
addr16
and
lock
or
out
js
ja
or
jge
movd
outsl
gs
mov
cmp
lret
or
data16
push
pop
popf
cmc
das
mov
mov
shlb
sbb
testl
enter
fildll
or
jg
and
sarb
dec
movsl
mov
and
jns
dec
popa
sub
fisttps
icebp
cmp
or
sbb
pop
sub
dec
ds
setb
pop
mov
dec
or
sbb
shlb
imul
mov
xor
lahf
enter
pop
pop
in
inc
mov
ja
jbe
or
hlt
push
xor
jno
out
add
rclb
or
cmp
sbb
nop
sbb
insl
and
dec
push
add
or
push
inc
dec
scas
add
sti
mov
xchg
aas
int3
roll
cmp
inc
out
scas
adc
incb
ja
mov
lock
rolb
push
push
push
ljmp
adc
repz
pop
js
add
jo
enter
hlt
std
cli
jecxz
adc
and
jecxz
test
pop
incb
jp
lods
add
inc
jmp
xchg
ljmp
cmp
std
lret
into
push
testb
nop
xor
push
pop
lock
adc
mov
addb
in
icebp
popa
pop
dec
mov
and
sbb
add
sub
mov
xor
sub
sub
pop
and
dec
enter
jp
fmull
negb
filds
clc
outsb
idivb
lret
pop
test
inc
jl
hlt
cmp
pusha
clc
rclb
xor
pop
xchg
inc
lcall
enter
outsb
jbe
stos
fcoml
xchg
mov
enter
js
push
cmp
xchg
mov
out
pop
mov
out
je
add
cmp
and
outsb
xor
or
popa
pop
aam
xor
and
or
mov
mov
dec
mov
in
iret
and
adc
sub
mov
mov
sub
shr
sbb
jle
dec
push
pop
jae
cmc
pop
std
sbb
js
lret
jge
and
add
add
rclb
orb
xchg
pusha
jmp
mov
pop
jnp
dec
mov
cmpsl
or
fs
push
mov
xor
mov
sbbl
inc
out
sbb
cmp
or
insl
dec
sahf
sahf
and
mov
divl
gs
into
pusha
pushf
sub
and
push
pop
inc
test
je
lret
jl
cmp
jge
xchg
dec
push
outsb
scas
sub
cs
and
test
push
add
pop
xor
push
das
xor
mov
sub
scas
bnd
jg
mov
out
xchg
mov
sub
mov
loop
adc
clc
loop
mov
dec
repnz
mov
jecxz
push
cmp
pop
scas
mov
fdiv
mov
mov
out
ss
inc
cmpsb
mov
popf
mov
push
mov
push
jmp
or
fnstcw
lds
dec
out
sub
loop
test
push
icebp
sub
imull
dec
cltd
adc
or
sub
arpl
testl
mov
add
stc
pop
dec
int
xchg
iret
bound
push
sbb
jmp
cmpsl
xlat
adc
xchg
outsl
add
insb
mov
test
sub
sub
sbb
movsl
nop
and
push
adcb
incb
push
push
add
push
mov
sub
lock
or
sub
daa
pop
mov
xchg
aad
sub
jmp
lahf
repz
jg
pop
mov
jmp
insb
in
adc
test
jmp
mov
int
popf
jnp
sub
das
push
out
jo
jne
pop
xor
sbb
pop
and
push
pop
cmp
adc
cmp
les
jmp
dec
repz
imul
push
pop
lcall
dec
xor
or
flds
mov
ja
cmp
or
jmp
jns
std
dec
xlat
push
xor
and
orps
loopne
test
pusha
stos
cmp
adc
jns
test
icebp
or
cmpsl
cmp
sbb
push
sub
inc
fmuls
mov
xor
arpl
imul
popl
cltd
dec
out
add
sarl
pop
mov
dec
fdivrl
cmp
lahf
add
mov
nop
pushf
out
push
sub
nop
andb
cwtl
dec
and
sub
dec
shlb
xchg
mov
push
mov
cmpsl
icebp
daa
mov
mov
add
addl
pop
and
add
imul
ljmp
jbe
nop
stos
inc
les
aaa
push
es
xor
enter
cmp
popf
lods
faddl
fcomps
shlb
ret
xchg
inc
cs
mov
push
mov
jbe
out
dec
pop
pop
daa
mov
gs
andb
push
xor
mov
add
mov
adc
xor
add
dec
scas
and
add
add
adc
aas
mov
pop
pop
mov
loope
cs
pop
loopne
jl
inc
ret
jbe
push
sbb
cmp
push
add
pop
dec
scas
cltd
xor
push
shll
daa
dec
jne
icebp
push
cmp
scas
add
movsb
inc
ljmp
cmc
ss
mov
loope
adc
mov
pop
jg
addb
jg
inc
call
stos
or
pop
push
jmp
test
call
ja
adc
push
lods
xchg
sarb
outsb
lock
loopne
dec
push
add
test
mov
rclb
xor
scas
xchg
mov
xor
adc
repz
push
mov
fidivrs
pop
mov
or
pop
push
xchg
or
jne
add
push
inc
pusha
and
xchg
out
xor
dec
inc
arpl
je
push
fisttpll
icebp
mov
es
insl
add
push
out
imul
test
sbb
pop
dec
mov
loope
shl
dec
mov
sub
jp
or
cmp
and
andb
ljmp
jg
xor
subb
pop
ljmp
aam
int3
les
test
dec
or
xlat
or
jnp
or
adc
pop
dec
hlt
sub
pop
mov
test
out
fcoms
adc
jp
arpl
dec
pop
jecxz
adc
cmpsl
jmp
std
je
lret
mov
xor
lahf
or
cli
mov
cmp
xchg
jmp
fs
jmp
inc
mov
sbb
hlt
pop
lods
xchg
sbb
rclb
ret
push
pop
or
sbb
mov
jl
mov
inc
fucom
dec
test
cltd
pop
ljmp
mov
lock
das
or
inc
test
mov
rclb
shl
scas
cmpl
enter
popf
loopne
mov
fldl
add
mov
xchg
xchg
cli
fcoml
lea
sub
sub
sbb
sub
xchg
pop
push
lret
xlat
or
jmp
icebp
mov
ret
outsb
popf
fcoml
sub
and
test
or
inc
inc
add
arpl
add
add
xor
and
push
xor
push
dec
mov
nop
mov
lds
fistps
pushf
cmp
aas
cs
sbb
scas
pmaddwd
rcr
cli
pop
push
lcall
xor
jne
cli
cwtl
and
adc
jnp
xor
rcrb
lret
mov
mov
adc
add
popa
pusha
in
inc
and
push
mov
add
jae
push
mov
jb
sub
and
imul
pop
out
pop
push
jl
jnp
sti
push
cmpl
sub
leave
sbb
pop
dec
push
adc
xchg
pop
ljmp
pusha
jmp
subl
ja
clc
mov
mov
mov
jp
cmp
cwtl
or
adc
cmp
xlat
xorb
outsb
mov
cmc
mov
fst
jns
sub
mov
sbb
sti
aad
ror
fucomip
testb
mov
pop
ret
imul
aaa
xchg
ds
lret
sub
sbb
push
dec
sahf
fdivl
das
pusha
dec
jo
cmc
das
aad
add
cmpb
jns
mov
test
sub
mov
loope
or
and
loopne
rcll
xor
jb
jmp
pop
push
test
call
xchg
jg
push
pop
daa
std
xchg
dec
dec
and
pop
ffreep
int3
mov
adc
jo
clc
push
pop
or
jl
dec
mov
ret
add
fmull
push
in
pop
in
xchg
or
inc
stos
inc
ret
test
rorl
adc
pop
xor
and
pusha
ret
aaa
mov
rorl
mov
pop
sub
push
mov
lock
push
repnz
inc
mov
jb
push
push
int3
mov
push
stc
pusha
cmpsb
xorl
shrb
sub
leave
pop
add
dec
arpl
pop
jmp
xor
pushf
rcrb
mov
mov
fcomi
jbe
dec
jecxz
stos
cli
fcmove
push
out
clc
push
mov
mov
jge
repnz
out
xor
cld
pop
test
lods
jmp
mov
sar
movnti
jg
outsb
dec
pop
adc
fs
push
mov
mov
cs
ss
fisttpl
jle
scas
add
inc
or
pop
je
xor
fwait
movaps
mov
push
inc
inc
adc
cltd
xchg
adc
imul
add
imul
cmpb
daa
subb
adc
mov
stos
sub
fsubp
push
out
call
pop
push
loop
into
xlat
pop
sub
ret
cmp
cmp
sub
mov
add
out
mov
out
dec
out
add
add
sub
rcrb
pop
andl
and
push
stos
leave
jne
inc
push
xor
push
adc
push
inc
push
cmp
outsl
dec
std
xchg
out
stos
xor
adc
clc
mov
pop
icebp
push
loopne
dec
je
or
ja
fildll
jge
les
mov
aad
inc
mov
adc
jmp
cmc
mov
or
std
adc
out
pop
push
roll
sub
xchg
pop
shll
cmp
fcomps
mov
pusha
fdivp
and
hlt
leave
xor
roll
aaa
or
daa
pop
dec
cmc
jle
test
int
sti
pop
push
pop
ds
push
scas
js
xor
push
add
adc
add
shll
and
lods
sbb
subb
lcall
jnp
flds
icebp
push
jp
mov
jno
ret
out
pop
repnz
add
push
pop
jbe
daa
negb
jmp
pop
pop
stos
or
insl
push
pop
jmp
movsb
add
clc
aas
jl
jmp
pop
cmp
dec
sbb
cmc
in
and
and
cmp
ja
or
push
jg
sub
pop
pop
repnz
push
cwtl
sbb
pop
cmp
pop
jmp
imul
clc
enter
icebp
dec
nop
test
mov
mov
cs
idivl
roll
mov
jp
sbb
into
mov
and
loopne
nop
rorb
sbb
pop
jmp
xchg
fwait
es
mov
dec
add
cmp
ret
mov
sti
sti
notb
sub
dec
testb
xchg
stos
pushf
mov
fldl
pop
mov
add
test
stos
in
xchg
mov
ret
shlb
movzwl
rclb
or
jle
test
mov
addr16
pop
out
outsb
stos
sub
push
sbb
testl
scas
arpl
scas
iret
out
pop
pop
cmpsl
push
test
sbb
and
icebp
xor
pop
xor
jne
cmp
adc
or
call
or
out
fistl
popa
dec
or
insl
or
xchg
sbb
outsl
aam
js
aad
add
push
fs
mov
mov
fs
mov
mov
mov
cmp
or
xchg
adc
scas
add
lods
sahf
add
rol
andl
sub
sub
ret
div
int3
cmp
and
pop
lods
adc
sbb
jle
vcvtpd2psx
andb
lods
cmp
and
jecxz
cwtl
jmp
ret
dec
mov
pop
shlb
push
add
sbb
test
ret
push
add
repnz
jo
ret
push
and
add
call
fldenv
xor
call
sbb
sti
cmp
or
sub
jp
add
add
rolb
jmp
cmove
xlat
mov
sbb
sarb
and
ja
inc
jge
or
add
add
repz
imul
push
xchg
jmp
xor
mov
xor
push
pop
aad
xchg
cmp
lock
xlat
inc
lds
ret
lds
inc
popf
dec
mov
and
mov
das
orl
sub
cltd
mov
or
test
sub
push
lock
add
pop
enter
jecxz
add
sbb
mov
mov
dec
push
push
shrb
es
jno
mov
ror
push
addb
insb
xor
in
iret
add
xchg
cltd
cmc
sub
mov
inc
mov
jge,pn
jbe
jbe
jae
sub
xor
lock
mov
sub
int3
inc
cld
lret
fldcw
out
and
outsl
or
cmc
pop
cmp
dec
out
mov
and
les
cwtl
dec
or
shr
push
and
and
or
sbb
inc
mov
sete
ds
adc
stc
es
imul
in
adc
rcrl
clc
pop
pop
mov
dec
stos
addr16
imul
call
out
xchg
in
mov
fs
and
adcl
inc
sub
lods
data16
aaa
or
lock
push
cs
push
in
test
inc
xor
fidivrs
sub
pop
adc
rcll
test
lret
outsb
dec
xchg
xor
dec
pop
shrb
pop
pop
lahf
bswap
inc
andl
adcl
mov
dec
cmpsl
push
arpl
test
clc
enter
push
push
jg
cwtl
fimuls
jbe
loop
fsubs
insl
sub
shlb
shlb
adc
mov
or
aas
add
push
jno
mov
pop
andl
cmp
dec
jb
pop
out
mov
mov
lds
popf
pop
nop
popa
jmp
push
movsl
test
lahf
jnp
pop
ja
jg
pop
scas
mov
sub
sub
cmp
sub
and
cmp
xor
jmp
fadds
repnz
pop
shrl
lock
rorb
shll
pop
pop
cmp
push
sub
add
test
jmp
add
orl
sbb
dec
stc
or
jne
call
mov
pop
stc
mov
xchg
test
stc
xchg
out
mov
add
jb
jl
lds
adc
jbe
mov
adcl
push
pop
aas
loopne
adc
sahf
mov
sub
lahf
loopne
std
adc
cmp
jnp
xchg
cmp
fcoms
out
push
sub
jl
push
and
mov
xor
inc
loopne
addr16
xor
idivb
into
lods
aad
mov
and
lds
scas
outsl
andb
out
dec
lods
call
jmp
lret
or
push
cmp
cli
adc
and
xchg
mov
adcb
pusha
add
fldl
cmp
xchg
dec
jp
jo
cmp
mov
jg
outsb
repz
pop
cli
and
jle
mov
inc
push
ficomps
cmc
in
testb
scas
or
pop
or
adc
xor
jmp
aam
pop
cmp
mov
push
shrl
outsl
sub
call
or
dec
or
jge
movsl
jne
xor
aam
test
mov
inc
test
push
mov
aaa
pop
inc
xor
mov
pop
jmp
add
inc
shrl
ficompl
jl
jmp
push
mov
inc
xchg
adc
jmp
jmp
ja
fcoms
fstps
mov
or
sbb
cwtl
shlb
fmuls
or
inc
lds
out
mov
sar
dec
mov
out
cmp
shrl
mov
std
cmp
pop
not
pop
in
out
inc
sbb
push
scas
adcb
dec
inc
sub
push
test
xlat
jmp
lock
es
or
add
cmp
jmp
mov
fsin
ret
test
out
or
sti
push
loop
push
imul
pop
clc
in
or
push
push
outsb
or
fdivl
adc
in
xchg
lods
push
loopne
and
pop
sub
jmp
iret
sub
dec
popa
jo
dec
es
popa
add
mov
aaa
shlb
subl
loope
inc
and
sub
out
fisubrl
jae
enter
add
xchg
test
dec
andb
jmp
or
jp
xor
jmp
mov
inc
push
into
dec
int3
lahf
insb
insb
iret
inc
xor
bound
sub
add
xor
icebp
nop
dec
pop
lret
mov
arpl
mov
js
add
pop
pop
push
cmpsb
or
cs
or
sahf
gs
xchg
pop
lcall
cmp
dec
out
sub
dec
inc
repz
xchg
add
aad
test
inc
push
sub
lahf
fmull
decl
pop
fsubs
js
ss
jbe
rcrl
cmp
and
sbb
lcall
test
add
repnz
cmc
inc
sahf
repz
sub
xchg
test
add
xor
add
push
jle
or
ret
mov
mov
ds
sar
fisubs
js
inc
arpl
and
push
ret
mov
sahf
inc
cld
jge
pop
jo
shl
pop
cmp
push
or
fstpl
sbb
xchg
xchg
jl
imul
js
lea
sbb
add
mov
adc
dec
fsub
ljmp
nop
arpl
out
in
pop
xchg
mov
test
adc
sub
and
aam
adc
repnz
xchg
pop
mov
mov
nop
or
dec
xlat
inc
pop
ficompl
jmp
push
and
dec
rcrl
mov
out
mov
jnp
adc
jmp
push
mov
dec
inc
loopne
pop
int
push
in
not
mov
je
cli
test
add
ljmp
sub
jecxz
scas
dec
xor
add
xchg
andb
inc
jnp
xor
fistl
fcoml
mov
add
inc
test
add
daa
pop
or
popa
mov
dec
mov
int3
pop
adc
rorl
sub
shrb
sbb
push
popa
out
inc
ret
dec
ljmp
push
adc
xor
cld
ds
ffree
aas
out
dec
or
push
or
jmp
cmp
cmp
sub
xchg
ret
mov
adc
test
fisttpll
mov
adc
dec
mov
mov
push
or
jmp
mov
sub
ljmp
push
ja
test
cltd
cld
push
daa
sub
repnz
fldl
jo
jp
pop
xchg
dec
adc
pop
aaa
xor
sti
or
imul
push
sbb
adc
jb
sub
hlt
test
pop
iret
lea
adc
lea
add
lret
cld
pop
jno
loope
cmp
mov
and
aam
scas
pop
sti
mov
xchg
jp
mov
cld
pop
imul
sahf
jns
daa
mov
add
pop
loop
adc
pop
cmp
mov
leave
dec
in
adc
dec
xchg
pop
lea
pushf
fidivl
push
jno
pop
sbb
bound
imul
gs
push
repz
xor
cmp
gs
mov
clc
push
jle
adc
outsl
mov
lods
pop
sbb
int
and
push
clc
adc
inc
or
push
xchg
int3
popf
push
je
jne
inc
push
pop
icebp
sbb
les
orb
enter
push
mov
pop
xchg
jmp
jmp
hlt
jae
daa
arpl
add
pop
adc
xchg
mov
push
dec
pop
jge
jae
leave
andb
and
jmp
aad
leave
jmp
rcrl
mov
stc
lds
cld
cmc
dec
ret
dec
push
jl
inc
add
mov
adc
mov
xor
out
lret
cld
loopne
mov
xor
pop
adc
aaa
scas
jns
in
movsl
std
in
xchg
cwtl
mov
xchg
mov
pop
mov
sub
das
add
into
jl
pop
scas
addr16
test
lds
cmp
sub
pop
shrl
cmp
cld
pop
mov
enter
cli
cmp
xchg
movsb
jmp
sahf
xchg
rcrl
dec
sahf
shrb
mov
or
jecxz
inc
xchg
das
dec
ja
lret
inc
dec
xchg
loopne
or
adc
push
or
ds
xor
pop
iret
mov
jnp
xchg
mov
mov
adc
nop
ljmp
lcall
inc
inc
ror
jmp
sub
xchg
add
cmpsb
daa
add
adc
ja
lods
xorb
inc
sub
push
mov
mov
cli
pop
mov
dec
incb
jne
xchg
inc
xchg
or
icebp
pop
int
out
push
jmp
fisttpll
cmp
loope
pop
sti
pop
stos
int3
rcl
aad
mov
lret
shrb
jl
adc
fadds
adc
xor
pop
push
shll
mov
cmp
lret
mov
stos
dec
pop
add
mov
xor
pop
divl
dec
push
int
sub
fsubs
push
lds
imul
sbb
jno
decl
insb
negb
mov
ljmp
mov
fwait
ret
or
or
or
or
mov
orb
pushf
testb
xchg
add
loop
add
mov
mov
push
adcb
adc
rorl
add
pop
je
jne
mov
std
test
test
js
jnp
inc
hlt
popf
fnstsw
mov
push
fwait
mov
dec
cmpsb
xchg
mov
lret
and
popa
dec
adc
bound
pusha
daa
sub
and
add
lods
mov
cmp
aas
lret
pop
pop
pop
jb
adc
dec
divb
pop
add
add
sbb
into
negb
sbb
addb
mov
int
test
pusha
mov
mov
xchg
mov
add
push
push
push
or
sbb
sbb
pop
cli
lds
inc
rolb
scas
es
jge
pushf
ficoms
and
jg
fisttpl
pop
or
jmp
xor
arpl
rol
jns
or
imul
outsl
aam
addr16
hlt
ret
push
cwtl
aaa
inc
adc
xchg
std
test
fs
add
lcall
add
sub
sub
push
pop
bound
pop
push
fistpll
out
dec
idivl
jle
cmp
jmp
jecxz
mov
popa
jne
mov
xchg
jge
rclb
add
add
add
jae
stos
pop
push
decb
addl
add
or
jmp
int
dec
adc
or
add
add
push
jnp
dec
clc
imul
call
stc
jne
cmp
cmp
push
mov
int3
and
xor
sub
pop
xchg
pop
mov
jge
jecxz
inc
fisubrl
dec
xor
add
and
mov
jmp
cmpsl
filds
enter
gs
mov
mov
pop
lea
xor
out
out
adc
adc
cld
repz
js
out
test
push
inc
clc
sub
andb
movsl
or
push
mov
jmp
sbb
iret
movd
loope
push
mull
jno
in
dec
mov
adc
dec
out
push
jno
ficomps
push
xor
dec
movsb
mov
sub
jle
and
popf
js
push
call
sbb
stc
dec
stos
mov
mov
or
insb
push
jecxz
js
jl
push
negb
xor
sbb
add
adcl
dec
mov
shlb
aas
popf
ret
jae
mov
push
mov
vshufpd
movl
adc
dec
sub
cmpsl
shll
and
push
dec
shr
loopne
cmpsl
pop
rclb
add
sbb
out
dec
loop
inc
in
jae
push
or
xor
imul
inc
dec
pusha
mov
pop
push
sub
mov
dec
inc
addb
out
das
popa
hlt
cld
lock
add
cli
pop
and
push
add
loope
jbe
adc
pop
imul
mov
adc
inc
mov
cmp
pop
mov
stc
pop
les
xchg
in
popf
in
or
in
in
push
into
std
movsl
aad
insl
jmp
es
mov
repnz
dec
cmp
sti
xchg
jo
xor
inc
or
std
stos
pop
and
inc
push
scas
xchg
mov
inc
push
popa
loope
je
testb
cmp
nop
and
leave
sahf
adc
dec
and
jnp
lds
in
sbb
xor
cmc
loopne
push
xchg
jae
jmp
mov
push
sbb
stos
pop
fiadds
cmp
lock
or
mov
xlat
add
sub
and
xor
sub
jb
jb
add
mov
pusha
lods
lods
adc
cmpsb
or
mov
add
pop
das
add
add
xor
loopne
and
int
popf
mov
neg
addb
or
add
and
and
cmp
and
scas
push
shll
cmpsl
daa
jae
or
dec
add
push
mov
add
cwtl
adc
std
or
jle
fcoml
add
and
jns
xchg
fstpl
jmp
fs
xor
add
leave
jo
pop
adc
repnz
dec
out
lret
lahf
ret
pop
jecxz
shrl
cli
inc
xchg
out
repz
cmp
push
popf
leave
xor
jns
sub
fstps
sub
add
push
cmp
inc
pop
dec
sub
dec
sbb
ja
pop
and
xor
dec
andl
pop
lret
loope
xor
rcrl
outsb
je
scas
mov
mov
cmp
cli
ret
push
fstps
pop
cwtl
punpckhbw
mov
xchg
sbb
cld
lcall
clc
movsl
push
mov
inc
or
ficoms
sub
push
aas
sub
jecxz
sub
inc
into
fsubr
pop
cmp
scas
jecxz
xchg
mov
sub
cmp
mov
std
push
sub
jnp
xchg
push
fisubs
es
mov
mov
jae
dec
je
ret
icebp
bound
xor
xchg
cmp
sti
fbld
pop
outsl
inc
jmp
pop
xor
push
int3
lods
jg
dec
jmp
push
inc
repnz
mov
ret
add
mov
sub
aas
enter
mov
xchg
call
rolb
add
push
cmp
decb
sbb
adc
dec
fs
sub
test
adc
loop
andl
xchg
pop
out
bound
adc
aaa
movsl
movsl
fbstp
inc
mov
pop
dec
outsl
ret
ja
adc
out
xchg
and
lret
mov
cwtl
adc
out
jge
adc
shlb
aas
in
adc
cmp
pop
sbb
dec
mov
or
push
xchg
jne
jns
cmpsb
xchg
mov
xchg
pop
mov
and
ljmp
push
pop
mov
js
out
jmp
pop
nop
imul
add
in
add
push
and
imul
sub
push
orb
lock
mov
stos
pop
or
pop
jno
jle
aas
pusha
or
cmp
jl
jmp
pop
repnz
xor
push
xor
pop
divl
lahf
push
loope
ds
inc
mov
jmp
jmp
aad
ljmp
pop
push
push
push
and
xor
gs
fimull
cli
loop
push
jbe
repnz
fcoml
pop
jne
imul
int
dec
jge
xor
inc
fiaddl
sti
add
push
or
fbstp
outsl
pop
push
pusha
xor
mov
cmpsb
mov
jg
fistpl
fistps
mov
fdivl
scas
leave
sbb
fsubr
fcoms
into
push
sub
mov
shl
or
pop
clc
idivb
and
jbe
hlt
xor
out
in
xor
adc
xchg
dec
and
fildll
test
lods
pop
fstl
das
hlt
dec
pop
pushf
add
cmp
dec
scas
inc
or
cld
cmpsb
sarb
xor
mov
clc
sub
stc
ja
gs
push
push
add
in
fs
jmp
dec
jp
les
arpl
dec
enter
or
stc
mov
xchg
pop
cld
mov
popf
inc
fstl
rcl
stos
ljmp
loopne
dec
pop
inc
ret
cmp
test
shl
pop
jge
fmull
push
mov
mov
arpl
out
addl
and
or
inc
fistps
xor
es
imul
aaa
daa
loopne
push
mov
push
pop
iret
sbbb
stc
inc
inc
ljmp
lret
and
pusha
popf
mov
jle
push
push
jle
mov
out
mov
sbb
shrl
ljmp
lds
mov
negl
mov
push
rolb
mov
faddl
pop
dec
sub
lods
jp
xchg
popf
push
sub
add
push
xor
push
and
cwtl
jb
add
lea
push
push
dec
jmp
mov
mov
push
mov
orb
sub
adc
rcrb
dec
jge
add
xchg
das
js
sub
mov
cmp
mov
mov
or
jmp
popf
adc
or
xor
push
push
pop
cmpsl
pop
outsl
int3
push
pop
or
jae
shl
cmp
cs
in
add
mov
dec
mov
stos
cwtl
mov
inc
pop
cs
leave
daa
jns
jmp
mov
dec
lods
flds
sbb
mov
adc
mov
and
pop
ja
push
ficoms
add
jl
lret
scas
fadd
push
add
shlb
icebp
nop
js
pop
add
outsb
mov
add
jo
jnp
test
test
rcrl
push
sbb
xor
fs
xor
pop
loope
push
cmp
and
adc
xor
das
out
pop
lods
xor
mov
push
mov
pushf
or
push
iret
push
mov
xchg
test
dec
iret
jne
sahf
sbb
or
aad
mov
inc
out
pusha
lcall
hlt
adc
cmpsb
lods
das
fdivrs
stc
jp
xor
sub
adc
out
sub
add
xchg
arpl
sub
pop
mov
pop
std
push
stos
sbb
sahf
dec
fnsave
lret
pop
push
add
jmp
jecxz
insl
std
dec
cs
add
in
mov
sub
in
lods
aam
adc
cs
movb
sbb
imul
cltd
daa
lahf
or
add
icebp
shr
andb
push
sub
sbb
xchg
orl
loopne
or
mov
bound
stc
add
push
loopne
fbld
pop
stos
inc
icebp
mov
add
lock
dec
xchg
mov
movsb
not
add
gs
xchg
xchg
push
movsl
push
or
add
nop
mov
jae
aad
adc
sub
sarl
push
stos
and
divb
cwtl
repz
sub
mov
jnp
shll
loopne
and
das
ljmp
incb
outsb
pop
xor
inc
jnp
adc
adc
or
xlat
mov
addl
pusha
idivb
es
jb
add
and
push
mov
inc
mov
pop
mov
jne
sti
jbe
xchg
fstl
cltd
cmc
xor
repnz
and
mov
loope
loope
sbbl
loopne
push
sub
sub
incl
xchg
xor
jmp
das
xchg
add
and
mov
cmp
cld
sbb
lock
xchg
adc
xchg
adc
sahf
dec
ret
or
xor
ror
inc
mov
sahf
adc
or
out
pop
and
dec
sbb
ss
dec
daa
push
xchg
inc
in
daa
cwtl
fwait
jge
lahf
bound
mov
aad
cmp
inc
push
idivb
dec
roll
in
int
push
pushf
add
icebp
loop
jge
mov
xor
out
stos
cmp
inc
add
mov
xor
adc
mov
fiaddl
cmp
adc
add
sub
mov
sarb
stc
push
out
pop
inc
xchg
pop
adc
push
sbb
subb
adc
pop
add
pop
or
jmp
lods
ds
dec
push
push
or
rolb
mov
dec
mov
dec
adc
scas
gs
xchg
adc
jp
das
pusha
xchg
bound
int
inc
xor
sub
add
or
jnp
cmovnp
rclb
jl
adc
shr
xor
pop
pop
int3
rorl
xchg
hlt
cli
mov
xchg
xchg
pop
mov
out
push
mov
out
add
shlb
and
and
outsb
adc
xchg
call
cmp
jmp
shl
mov
mov
inc
push
mov
sti
xchg
ljmp
push
dec
adc
and
cmpsl
shrl
xchg
xchg
dec
sub
in
js
push
jmp
pop
int3
dec
std
push
inc
idivl
test
nop
mov
pop
loope
xlat
into
outsb
dec
and
sbb
int
ret
arpl
cmp
outsl
xor
frstor
ds
in
xchg
cmp
jmp
and
out
mov
cwtl
adc
mov
dec
pop
jo
inc
inc
nop
mov
lods
mov
mov
mov
jg,pt
jne
fs
cli
sti
xchg
aaa
adc
jmp
jne
mov
lods
sub
dec
dec
fs
sti
sub
imul
and
or
bound
pusha
jmp
gs
ljmp
rcll
je
in
or
add
js
sti
add
jno
call
add
and
pop
pop
xor
test
push
lahf
test
sub
and
jbe
sub
pop
and
rorl
outsb
xor
adc
xorl
inc
lcall
mov
adc
loop
cli
jmp
loop
imul
sub
jnp
adc
pop
enter
mov
test
jmp
pushl
test
stos
test
dec
sub
lods
cmpl
xchg
ljmp
adc
xor
scas
pop
ret
jge
enter
lock
add
adc
shll
gs
and
add
ds
inc
pusha
sub
pop
or
lods
dec
mov
cwtl
out
fsubs
test
add
fwait
add
aam
push
jl,pn
es
pop
dec
repnz
int3
movsb
pop
dec
push
repnz
or
jmp
mov
rol
dec
stos
sub
pushf
cmp
pop
in
dec
and
test
jno
and
add
jg
inc
repz
call
stos
inc
sbb
lcall
add
mov
inc
or
nop
imul
push
pop
inc
jecxz
int3
in
sub
add
in
ljmp
stos
adc
sub
sub
jmp
push
pop
xor
bound
test
mov
dec
dec
mov
add
dec
push
add
fiaddl
cli
adcb
xor
push
jae
dec
testb
arpl
dec
push
add
mov
push
push
sbb
push
lea
add
xor
pop
int3
fucompp
and
fcomps
shlb
pusha
push
ret
icebp
jns
or
mov
xchg
pop
icebp
sbb
mov
popf
inc
inc
sti
cmc
aaa
sbb
jmp
ret
xor
pop
push
pop
daa
ret
fstps
add
int
int3
lds
nop
ss
inc
sbb
mov
addr16
out
std
in
test
hlt
test
and
test
add
push
out
xor
add
adc
idivb
pop
lock
jmp
dec
out
movsb
add
sub
mov
jge
xchg
inc
xor
jo
xchg
std
xchg
add
decb
xchg
cs
dec
or
loop
leave
push
push
inc
push
mov
add
mov
xor
mov
es
repnz
jb
shrl
adc
xchg
push
and
inc
cld
push
sub
or
ja
mov
mov
orb
or
loopne
push
xor
ljmp
fdivrs
xlat
cs
aam
add
xorl
jb
sbb
cmp
call
adc
dec
mov
out
pop
or
add
mov
push
adc
add
push
add
and
adc
pop
push
insb
pop
nop
shlb
sub
lds
sti
cmp
mov
in
daa
jno
and
jmp
ficoms
and
and
loopne
sahf
mov
pop
pop
loopne
mov
into
shr
push
add
adc
inc
cmp
popa
push
outsb
sub
outsb
rorl
cld
enter
cmp
mov
mov
mov
jb
push
push
lret
push
push
lret
push
out
xchg
sbbb
js
mov
insl
push
add
or
shl
mov
push
sub
pusha
bound
stos
lret
aam
push
push
push
jno
or
pop
inc
bound
mov
mov
adc
sbb
push
fldl
out
sub
add
sar
add
sahf
shlb
sbb
add
loopne
sbb
pop
mov
dec
sbb
test
adc
or
dec
jo
xor
mov
ret
and
pop
daa
cld
jno
mov
jbe
inc
movsl
push
jb
xchg
xor
mov
dec
add
popa
adc
imul
pop
mov
add
pop
sub
sub
jmp
jo
hlt
sbb
xor
mov
sbb
lcall
nop
or
or
and
insb
xor
jns
in
mov
push
xlat
and
data16
icebp
fs
clc
nop
loopne
mov
and
ficomps
sbb
pop
imul
stc
ss
adc
xor
testl
lahf
push
push
jmp
out
push
lods
pop
insb
sub
inc
push
mov
push
and
inc
jmp
xchg
lods
pop
popf
pop
add
rcr
scas
enter
jg
call
inc
adc
dec
jo
sbb
xchg
mov
xchg
loope
roll
and
push
push
mov
movswl
repnz
add
shlb
lds
shl
loopne
mov
jge
xor
push
push
ret
add
pusha
add
sbb
adc
adc
popl
and
mov
clc
mov
jne
add
add
mov
and
imul
ss
add
or
jp
clc
adc
rorl
inc
push
xor
rorb
adc
or
cmpl
clc
dec
or
into
jg
sub
inc
adc
aad
lods
or
nop
xchg
test
repnz
mov
dec
nop
mov
mov
fdiv
addps
out
mov
lret
daa
add
cmp
inc
stos
fnsave
mov
insl
push
aad
mov
pmulhw
jbe
scas
addr16
out
rcr
repz
inc
js
sbb
aaa
jbe
cli
cmpsb
popf
dec
data16
loop
jmp
push
add
inc
mov
fnstcw
and
hlt
popf
shll
mov
sbb
or
into
pop
dec
add
std
dec
ljmp
movsb
ret
add
mulb
cmp
push
add
subb
push
inc
dec
rcll
add
and
mov
add
es
test
ljmp
das
add
sbb
out
inc
push
cmp
sbb
and
add
sarl
push
clc
push
add
imul
push
fwait
or
add
pop
loop
adc
or
shr
stos
cmp
adc
out
add
lds
jnp
add
jno
mov
cmp
rcl
push
xchg
xor
add
ljmp
add
fcmovb
sahf
out
push
add
jl
dec
add
add
push
adcb
xchg
add
movsl
int3
add
icebp
aas
fisttpl
aad
jge
add
sbb
mov
add
lret
add
ficoms
sbb
inc
loop
mov
out
or
cmpb
negb
xor
cmp
lock
cmpsb
jl
jmp
jo
and
mov
pop
sbb
lret
icebp
leave
int
sbb
pop
add
and
sti
mov
stos
xchg
mov
and
cmpsb
or
fmuls
lahf
add
aad
setge
test
out
mov
call
clc
pop
mov
mov
cmpsl
sub
rcr
mov
ret
fisttpll
or
sub
xor
rcr
or
aad
ror
bound
cwtl
mov
cmp
int
hlt
flds
inc
leave
adc
faddl
xchg
push
lahf
nop
cmp
rolb
pusha
mov
adc
push
add
aad
lret
popa
xor
xchg
add
pop
xchg
cmp
push
mov
shrl
cmc
push
mov
hlt
add
cs
mov
test
fsubs
sti
rolb
cmpsl
and
addr16
pop
or
lea
pop
jmp
xor
push
pop
xor
cmp
sbb
and
imul
cmc
out
cmp
pop
sbb
sbb
sbb
int3
or
ret
cmpsl
cwtl
add
int
mov
cs
fisttpl
add
adc
dec
jmp
add
or
add
ret
test
dec
xor
lahf
inc
nop
test
sbb
or
nop
sbb
add
xchg
inc
mov
pop
xchg
icebp
xchg
inc
jo
sbb
pop
jle
cmp
addb
cli
int
pop
sub
add
sub
lea
enter
push
and
add
cwtl
dec
nop
dec
add
es
adc
lea
pop
jmp
adc
andb
push
add
inc
dec
jg
jnp
add
mov
pop
andb
repz
shll
rclb
add
es
sbb
sub
jnp
pop
inc
pop
imul
popf
sub
push
or
add
int3
dec
jbe
push
xchg
add
out
or
fisttps
dec
fyl2xp1
sbb
rolb
add
cmp
cmp
mov
pusha
nop
ss
cli
sub
call
mov
jge
mov
pusha
mov
pop
mov
xchg
inc
lods
mov
test
rorb
add
sarb
dec
aaa
jecxz
cmpsl
fdivl
cmpsb
xchg
and
cmp
cmp
sub
jle
dec
scas
cmp
adc
cwtl
push
call
add
fwait
jo
mov
dec
xor
mov
sahf
or
shlb
add
sbb
es
xchg
mov
adc
mov
dec
add
in
scas
pop
sbb
add
test
cltd
in
pusha
mov
xchg
or
dec
mov
jle
add
cmp
adc
pop
sbb
or
inc
in
clc
push
cmpsb
andb
xchg
push
les
add
mov
nop
rclb
roll
push
mov
dec
push
adc
out
pop
je
in
add
hlt
add
clc
push
mov
ljmp
mov
cmp
add
adc
add
or
lds
addr16
mov
sub
add
add
pop
cmp
push
inc
lock
xchg
cwtl
loope
lods
push
pop
add
mov
push
add
call
inc
in
aad
add
dec
insl
mov
rorl
add
mov
add
mov
lret
cmp
xlat
add
in
hlt
xorl
dec
jge
insl
sti
push
movsl
or
stos
stos
out
sub
sbb
add
test
jp
pop
or
rorl
fwait
add
aad
sub
int
ljmp
xor
pop
cmp
mov
into
add
or
add
or
leave
cld
or
sbb
dec
or
jge
js
insb
cmp
sarl
clc
pop
ret
jecxz
inc
lcall
bound
adc
xchg
jl
inc
mov
pop
or
adc
push
or
push
andb
jne
or
jle
mov
iret
ja
lret
pop
adc
add
fdivs
hlt
lahf
cld
pusha
arpl
or
cmp
pop
subb
xchg
push
pmaxub
es
mov
enter
add
iret
push
aas
sbb
out
mov
cmp
inc
sbb
sbb
orb
or
out
add
xchg
or
fistpll
mov
mov
xorl
pop
addr16
xchg
mov
adc
adc
mov
leave
mov
xchg
mov
loopne
pop
add
jmp
cli
jbe
scas
mov
mov
mov
jns
pusha
xchg
sbb
or
inc
out
dec
add
and
ret
cmpps
dec
enter
idivb
inc
xchg
push
fisttpll
repz
adc
xor
lcall
shlb
fnstsw
scas
hlt
cmp
and
sub
cmp
push
add
pop
or
cld
enter
cwtl
addr16
add
mov
test
daa
jne
and
push
xor
mov
mov
sti
popa
push
fidivrl
cli
pop
out
adc
cmp
cmp
push
cs
mov
mov
out
add
scas
push
test
dec
adc
rcr
add
arpl
mov
inc
and
scas
mov
pusha
out
adc
stos
js
and
mov
in
mov
and
push
push
roll
jge
xor
shl
repz
dec
shll
xchg
add
shlb
stc
jmp
dec
mov
sbb
mov
clc
or
push
pop
test
mov
inc
stos
mov
mov
add
sub
sub
js
lcall
pop
test
mull
or
inc
add
in
daa
dec
push
mov
add
addr16
jo
add
pop
loop
into
and
test
cmp
push
pop
mov
xchg
lea
and
push
adc
mov
es
outsl
orb
gs
mov
in
xlat
jmp
adc
mov
and
adc
pusha
in
loopne
shl
add
mov
dec
dec
xor
sub
das
jae
lock
inc
inc
fs
push
mov
insb
jle
add
lods
add
call
mov
ss
fsubp
sahf
sub
pusha
xchg
into
es
dec
and
xor
dec
pusha
mov
iret
rol
adcb
arpl
daa
add
push
mov
repnz
mov
movl
add
cwtl
stos
pop
xor
xor
loop
add
inc
es
pop
sti
imul
inc
pop
dec
mov
jecxz
loopne
mov
sub
lods
in
es
movsb
fadds
xchg
cs
in
out
or
rcl
ret
aam
mov
cmp
xchg
sub
xor
or
call
sbb
xor
mov
out
andl
mov
lret
cmp
dec
test
xchg
lcall
stos
and
rolb
mov
fildll
cmp
je
sbb
or
movsb
xor
cld
and
mov
xor
push
pop
xor
mov
test
xlat
mov
xchg
shlb
cltd
xor
and
add
add
xor
adc
push
jg
or
xchg
xchg
add
fldenv
je
lods
pusha
aad
inc
roll
ret
fmul
ret
or
mov
imul
mov
lret
adc
aaa
xor
inc
mov
mov
xor
sbb
sbb
scas
push
push
xor
inc
jmp
xor
adc
or
test
push
js
adc
pop
adc
mov
in
cmp
inc
sbb
outsl
inc
enter
pop
into
int3
orl
leave
add
or
mov
sbb
les
nop
in
adc
jmp
je
push
and
xchg
call
nop
or
push
adcl
xchg
inc
xchg
push
add
or
fimuls
in
mov
xorl
mov
push
xor
sub
push
dec
es
mov
mov
pop
int3
test
mov
add
mov
pop
sub
sarl
mov
inc
shl
push
fisttpl
rcll
or
jl
cwtl
cmp
pusha
add
fwait
insb
mov
push
xor
scas
aam
mov
mov
fs
test
ret
add
push
mov
inc
test
add
xchg
into
or
cwtl
mov
loopne
mov
xor
dec
mov
xchg
or
inc
inc
nop
js
adc
add
cmpsb
pop
pusha
push
inc
sahf
push
daa
sub
mov
mov
enter
movsb
xchg
ror
or
hlt
sbb
mov
inc
adc
out
cltd
mov
xchg
out
dec
xor
fwait
test
dec
ss
into
mov
adc
and
mov
or
push
and
loopne
adcb
test
sbbl
dec
fcoms
nop
dec
pop
xchg
pop
dec
es
sub
mov
jle
in
sbb
fstl
sarb
jne
and
inc
js
jnp
or
push
int3
inc
or
test
rcr
sbb
test
adc
add
push
xor
add
addb
jns
call
mov
inc
cmp
inc
mov
jmp
dec
add
leave
xor
in
mov
and
mov
mov
into
shld
ss
push
xor
adcl
adc
mov
lock
or
or
cmp
mov
and
mov
inc
mov
repz
iret
das
shlb
repz
push
daa
push
inc
and
rcll
dec
das
enter
jmp
or
xchg
enter
jle
cwtl
hlt
push
and
dec
push
lock
shrb
aas
add
shll
dec
mov
aam
movsb
imul
int3
cmpsl
add
shl
sbb
rcrl
sbb
je
inc
push
mov
add
mov
and
shlb
rol
scas
call
rolb
and
fwait
adc
orl
push
adc
dec
sbbl
push
push
clc
xchg
addl
mov
aaa
inc
push
xor
and
add
xchg
jo
sti
ret
cmp
cwtl
orl
adc
sub
push
rcrl
daa
mov
and
xchg
sub
into
lahf
pusha
xor
ret
js
sub
fs
pusha
pusha
or
xchg
jns
dec
bnd
ret
in
test
mov
insb
xor
mov
test
push
push
mov
cmpsb
pop
push
pop
nop
xlat
xchg
out
subb
mov
loope
rcr
mov
inc
pusha
aas
push
or
shll
or
or
lods
mov
repnz
mov
ds
and
sbb
test
xchg
in
push
int3
mov
or
lods
xor
xchg
adc
mov
xor
or
aad
jo
push
cli
mov
subb
mov
nop
or
in
mov
and
or
inc
xlat
aam
jmp
dec
fcoms
mov
adc
and
dec
loopne
in
loop
out
call
cltd
fcoms
hlt
xor
mov
add
adc
xor
sub
lret
xchg
les
jg
cmp
xchg
pop
add
nop
lret
shlb
mov
dec
prefetch
inc
movsl
add
inc
add
shrb
or
add
fxch
sub
mov
xchg
and
and
dec
cmp
rol
jecxz
inc
or
adc
das
add
mov
or
push
jmp
movsl
cmp
clc
dec
in
add
ret
movsl
xchg
add
and
mov
sbb
clc
cwtl
cmp
repz
sub
ljmp
aad
mov
add
in
jnp
loop
insb
cmp
add
jae
hlt
push
mov
sbb
push
add
add
push
inc
xchg
loope
push
add
xor
dec
cmc
dec
out
add
cmpsb
mov
shrb
test
stos
xor
pop
dec
and
scas
insb
cmp
push
add
jp
mov
fsubp
or
cwtl
sub
inc
jmp
jb
cmc
pop
and
fisttpll
add
loope
in
movsb
pushf
add
mov
sub
sub
mov
jmp
xchg
insb
add
push
and
inc
les
mov
cmp
push
or
test
sbb
jle
shlb
shll
mov
loope
loopne
adc
aad
into
xchg
sbb
inc
pop
sbb
sub
adc
mov
jo
xor
shlb
adc
inc
push
jne
mov
jmp
iret
add
int
call
jg
add
dec
sarl
subb
rcr
pop
cmp
dec
push
mov
dec
fnstsw
jo
arpl
inc
loope
pop
adc
xlat
mov
inc
test
sbb
mov
or
loop
add
jne
mov
stc
mov
cli
sbb
clc
fimuls
out
jecxz
xchg
outsl
pusha
shll
xchg
repnz
or
mov
sbb
pop
ljmp
add
icebp
in
pop
rcr
rol
add
mov
cmpsb
fistps
in
pop
data16
jno
jnp
iret
add
incl
loopne
into
repnz
add
call
in
jecxz
or
into
test
stc
inc
gs
mov
push
outsb
test
sub
jl
sbb
sub
add
stc
push
sub
in
les
imul
jno
pop
xchg
mov
loope
push
lcall
mov
enter
add
cmp
mov
mov
mov
sti
adcb
in
sub
cmp
xor
test
ss
xchg
jns
fldcw
in
aam
mov
test
clc
inc
test
cmpsb
divl
test
lret
dec
mov
pop
add
jns
ja
xchg
cmp
cli
cmp
lods
or
and
inc
xor
insl
stos
dec
push
adc
pushf
mov
arpl
jg
sbb
std
dec
mov
or
xor
push
xlat
sub
test
or
pinsrw
movb
cmp
inc
xchg
mov
or
out
into
jle
xlat
mov
cmp
xor
adc
push
inc
iret
repnz
pop
cmp
insb
or
iret
mov
xor
xchg
pop
scas
and
mov
add
iret
or
adc
pop
outsl
sbb
lret
sbb
js
jns
cwtl
or
js
dec
arpl
fisttpl
dec
dec
mov
inc
daa
out
push
cld
cmp
fnsave
or
fists
jge
outsl
pop
lahf
and
cmp
faddl
pusha
dec
lret
xchg
lock
add
push
pop
lgs
sbb
adc
cmc
je
mov
mov
pop
shll
adc
adc
inc
in
jg
int
mov
jbe
fsubl
add
sub
mov
xor
inc
inc
jecxz
pusha
aam
cld
aam
push
push
into
inc
pusha
push
inc
cmp
sbb
adc
cmpl
cwtl
or
jne
mov
pusha
push
sbb
sub
or
ljmp
add
jb
popa
mov
fldl
sub
in
sub
add
pop
inc
out
add
fnsave
aad
iret
or
and
les
dec
cmp
clc
sub
add
mov
xchg
adc
inc
mov
loopne
sub
test
mov
clc
add
dec
push
add
lock
ret
add
or
dec
les
mov
xor
sub
jbe
add
rorl
ja
out
xchg
cwtl
add
pop
lods
or
mov
es
inc
ss
sub
in
inc
sbb
xor
int3
inc
adc
push
je
scas
ss
inc
nop
andb
decl
mov
and
sbb
les
inc
xchg
and
fimuls
sbb
mov
adcb
rorb
js
sbb
mov
rolb
inc
push
pop
fsubr
out
je
js
nop
mov
jo
lret
mov
jg
mov
mov
paddb
add
fadds
adc
mov
and
mov
mov
mov
dec
rol
inc
ror
mov
adc
or
loope
mov
jbe
dec
or
pop
xlat
jl
sbb
add
sub
inc
mov
fcom
push
mov
pop
pusha
iret
xor
sbb
jno
out
adc
dec
fidivl
sbb
loopne
lock
add
flds
jne
call
dec
bound
mov
loope
inc
loop
addb
lret
mov
add
lock
les
das
mov
pushf
in
dec
sbb
mov
cwtl
fistpll
jmp
jecxz
inc
adc
dec
sbb
out
bound
jmp
in
out
push
inc
xchg
rcr
jg
jo
inc
jl
iret
imul
jne
pop
cmp
addb
dec
fidivl
outsl
pop
call
jmp
push
cmc
lret
into
lcall
cmp
cmp
sbb
les
insb
test
in
sub
dec
sbb
or
inc
pop
cmp
mov
dec
cmpsl
push
imul
fcom
adc
fs
mov
adc
sbb
or
push
pop
mov
and
dec
sarb
out
inc
je
adc
mov
leave
cmp
aam
jle
inc
inc
mov
fiadds
mov
adc
fsubl
sbb
nop
rcll
out
out
push
add
mov
add
adc
sbb
sahf
push
xchg
sbb
enter
imul
dec
xor
sub
fdivrl
and
nop
loopne
mov
sbb
fcomi
cmp
inc
add
jbe
inc
push
jg
and
loopne
call
out
xchg
pop
sbb
loopne
pushf
loope
or
push
out
sbb
sbb
mov
clc
pusha
call
inc
fsubr
sbb
mov
loop
lret
mov
jg
mov
xchg
into
les
adc
out
mov
adc
fadd
mov
sbb
shlb
fsubr
jo
cld
ljmp
sub
cmpb
inc
mov
sub
test
pop
mov
mov
jl
jl
adc
call
fmull
cmp
sbb
pop
je
fdivrs
rcrb
inc
and
pop
xor
shlb
sbb
lock
sbb
sbb
shl
jmp
push
add
or
jnp
jecxz
sbb
push
fisubrl
lcall
rolb
repnz
jns
stc
enter
sub
ret
sbb
sarl
push
add
xchg
outsl
and
movsb
rorb
add
aas
lahf
repz
or
and
and
add
mov
xchg
dec
test
push
cmp
mov
mov
push
pop
adc
lods
daa
mov
jne
add
dec
inc
mov
mov
imul
fs
add
jl
popa
xor
mov
in
addb
pop
dec
xor
test
test
pushf
rolb
cmc
xchg
mov
jbe
pop
enter
push
js
pop
pop
adc
jmp
enter
or
cmpsl
in
lock
call
mov
mov
jne
add
mov
sbb
add
pop
add
push
xchg
jmp
sarb
and
jbe
pop
push
mov
fldcw
andb
into
push
stos
sub
incl
pop
inc
das
test
mov
inc
int3
mov
fbld
push
test
cli
add
xor
add
push
inc
mov
lds
lret
movsl
rcrb
arpl
nop
shl
cmc
and
and
ja
cmp
shlb
out
sbb
mov
insb
push
mov
or
and
add
js
mov
scas
add
pop
add
repz
pop
mov
jo
push
jae
cmc
mov
fmuls
mov
enter
fdivrs
and
push
hlt
icebp
mov
cmp
add
sub
and
mov
push
or
mov
clc
xchg
adc
mov
or
sub
les
cmp
rclb
jl
sbb
pop
mov
push
cmp
stc
stc
sub
mov
jns
loopne
add
cld
add
jnp
jecxz
int3
or
insb
ret
addl
out
stos
ret
sbbb
sbbb
sbb
enter
adc
push
xor
insl
xor
cli
mov
xchg
sub
orl
sub
adc
mov
or
xor
nop
roll
add
pop
sbb
das
add
mov
inc
mov
loopne
pop
sbb
adc
punpckhwd
aas
pusha
add
adc
add
aaa
clc
jo
rcll
or
inc
ja
or
mov
xor
add
adc
sub
imul
ds
clc
pusha
test
insb
adc
adc
dec
dec
shl
push
xor
cmp
cmc
jno
rorl
inc
adc
sub
xchg
movsb
or
jnp
loopne
repz
subb
rclb
mov
je
pop
jle
mov
push
jae
pusha
and
js
push
movsb
adc
dec
jns
add
scas
push
xor
rolb
cmp
mov
enter
lahf
fs
lret
add
push
imul
adc
sbb
mov
sub
adc
enter
sbbl
mov
and
mov
out
imul
enter
movsl
push
aas
imul
sbb
fdivrs
pop
jae
adc
movl
push
incb
add
mov
aam
adc
push
mov
add
lahf
push
dec
popa
xor
scas
inc
push
jp
xor
pushf
push
add
cli
and
add
add
sub
repz
shlb
pushl
mov
andl
push
mov
jmp
push
rclb
mov
pop
jne
dec
inc
pop
mov
stos
iret
add
adc
and
repnz
jecxz
and
inc
pop
jl
xor
loop
fdivrp
mov
nop
pop
in
fstps
add
into
sbb
mov
sub
fwait
shlb
loope
dec
shrb
cmp
adc
les
cwtl
jns
mov
sbb
adc
add
mov
out
and
or
sub
xchg
fistpl
enter
add
mov
or
mov
addr16
mov
fsubrp
mov
dec
sbb
sbb
mov
js
add
icebp
xor
cld
addr16
mov
ret
ffreep
jmp
stos
cwtl
or
dec
push
dec
into
jb
mov
inc
test
push
pop
adc
inc
and
rol
sbb
push
or
in
mov
rcrb
sbb
and
shlb
gs
arpl
sub
icebp
push
cmp
je
addl
mov
fwait
xchg
push
add
imul
out
mov
sbb
xchg
or
andb
xchg
repnz
or
out
fmul
mov
in
rclb
stos
andl
movsl
mov
arpl
inc
out
mov
andb
unpckhps
fsubrl
incb
mov
xor
fstp
rorl
cld
jns
sbb
daa
add
mov
mov
inc
lea
sub
mov
add
stc
out
clc
call
popa
mov
icebp
nop
add
test
sbb
pop
sbb
add
xlat
enter
push
cmc
pop
iret
pop
cwtl
fimuls
sub
cwtl
jg
xchg
mov
jecxz
mov
push
call
inc
sahf
das
icebp
mov
xlat
jg
cmp
adc
sbb
loope
aad
cmpsb
add
pop
mov
bound
add
cwtl
xor
add
mov
icebp
cli
jae
jg,pn
cmpb
push
adc
das
outsb
in
mov
filds
and
dec
mov
cli
or
adc
sbb
jo
shlb
add
fiadds
jbe
pop
hlt
add
push
addr16
cld
push
fsub
push
and
dec
add
sub
lcallw
xchg
jmp
adc
sbb
push
mov
sbb
push
xorl
add
cmp
sub
dec
add
jmp
clc
ja
jns
scas
add
je
cmpsl
xchg
mov
jl
jns
out
test
cmp
dec
std
cmpsb
and
inc
lahf
sbb
mov
xchg
jle
mov
outsl
sbb
stos
pusha
add
add
push
repnz
scas
add
adc
fisttpll
mull
lock
adc
cli
add
popa
add
loopne
dec
insb
fwait
mov
jb
test
push
inc
test
sbb
add
inc
int
adc
stc
orb
rcrb
mov
pop
clc
fcoml
adc
or
or
fstl
inc
lcall
pop
popf
subb
jbe
pusha
pushf
xchg
mov
cs
in
pop
fisubrs
add
jb
and
dec
js
gs
loope
in
fwait
xchg
mov
cmp
mov
pop
in
sub
inc
xchg
in
popa
cmp
addb
ret
js
cltd
shlb
add
loopne
jae
cmp
push
or
ret
lret
push
int3
mov
mov
fists
xchg
add
dec
dec
adc
inc
adc
cltd
adc
shlb
and
pop
mov
sti
call
sbb
cltd
cmp
inc
adc
add
es
jb
mov
pushf
inc
addb
loop
ljmp
lds
inc
pop
pop
roll
enter
aaa
fdivs
gs
cmpsl
aam
test
shlb
fwait
inc
loope
cmpsl
and
adc
pushf
arpl
pop
adcl
xchg
inc
lods
aam
nop
pop
add
pop
jg
and
popa
loopne
push
mov
enter
and
movsb
adc
add
ret
and
inc
xlat
push
nop
subb
add
adc
push
shl
cltd
insb
add
adc
adc
bound
loope
dec
sub
hlt
add
sub
shlb
dec
and
lods
xchg
add
mov
jp
mov
pusha
push
mov
in
testl
jecxz
rorl
add
xor
cmpb
cmp
or
in
out
dec
adc
pop
mov
or
mov
jnp
clc
push
test
fsubl
rclb
lea
or
dec
mov
inc
or
mov
loop
rclb
mov
pop
adc
mov
add
dec
xor
push
mov
test
and
jae
cwtl
sub
test
add
xor
add
add
and
sbb
adc
and
test
jo
push
mov
pusha
push
add
push
and
xor
inc
imul
inc
jmp
cwtl
aaa
pusha
pop
arpl
fiadds
push
fsub
cmp
jne
clc
mov
mov
sti
bound
mov
add
in
pop
cld
fs
rcrl
in
dec
jo
cmp
add
and
lods
sub
inc
rolb
push
mov
dec
lcall
adc
pop
and
test
inc
mov
cmp
mov
addr16
sub
push
xchg
test
adc
pop
xchg
inc
call
inc
fnstenv
xor
mov
mov
repz
rcrb
xlat
aam
aas
mov
jbe
sti
mov
dec
into
mov
pop
dec
dec
fmull
or
faddl
data16
mov
mov
nop
mov
ficoms
in
jo
inc
xor
out
dec
pop
or
mov
cmpb
test
mov
inc
mov
sub
xchg
shl
cmp
mov
pushf
call
add
mov
int
xchg
je
js
adc
mov
nop
shll
mov
mov
jl
or
mov
les
or
pop
aad
pushf
xchg
arpl
rcl
rcll
ret
push
sbb
jno
decl
mov
pop
rolb
fisubrs
mov
mov
add
aam
mov
and
imul
outsl
cmp
inc
rclb
cld
add
loope
sub
sbb
pop
add
dec
fsubl
xchg
je
mov
loope
jg
push
pop
fiaddl
inc
cmpsl
fistpl
shrb
xor
fcoms
insl
inc
shll
dec
notb
repnz
rorl
sub
mov
xchg
jns
sbb
shrb
inc
repnz
mov
lock
fdivl
mov
rcr
loope
movsb
mov
xchg
sub
add
gs
sti
add
adc
lahf
andb
addr16
inc
add
push
sbb
dec
or
jo
pop
cwtl
or
dec
add
repnz
jmp
or
lret
or
pop
inc
faddl
inc
andl
cwtl
shrl
es
mov
adc
sub
and
andl
jnp
dec
pop
pop
xchg
addb
and
aas
cs
adc
fldenv
fcmove
inc
out
shrl
mov
cmpsb
dec
mov
lret
add
xor
dec
dec
stos
add
adc
adc
repz
xchg
mov
jne
cld
imul
and
out
adc
cmpsl
cmpsb
sbb
push
mov
sbb
push
add
xchg
js
outsl
mov
adcl
test
clc
int
sahf
pop
stos
movb
sub
xchg
enter
loope
add
shlb
and
cltd
adc
adc
or
sub
add
xor
and
movsb
fs
fadds
fmulp
jo
call
jmp
inc
insb
movsl
daa
sbb
je
inc
add
movsb
jle
jo
add
aad
dec
in
dec
add
insl
push
repz
fidivrs
out
test
imul
xchg
int3
pop
push
sti
in
in
adc
outsl
dec
fcoms
hlt
inc
add
lret
arpl
rolb
pop
mov
loopne
and
pmulhw
and
adc
add
add
push
add
ficompl
add
push
mov
sub
jg
pop
pop
decb
dec
sub
ret
cmp
adcl
shl
xchg
stc
pop
and
fmull
mov
js
cs
sbb
mov
repz
push
ret
inc
pop
pop
cmp
fwait
cwtl
fcompl
je
call
rorb
dec
int
pop
mov
aad
xchg
mov
rol
pop
mov
sbb
js
add
pop
cs
scas
dec
and
dec
mov
dec
add
adc
dec
aam
add
cld
andb
cmp
orb
inc
loop
add
cmpsb
test
dec
stos
cwtl
or
push
add
mov
sti
cmpsl
or
jg
in
lods
adcl
sbb
repz
or
nop
xchg
add
sbb
add
fildl
movsb
add
cli
xor
xchg
ljmp
leave
push
rclb
add
test
inc
xchg
jl
fsubl
pop
ret
inc
pop
xchg
shlb
mov
lods
out
pop
cmp
mov
add
inc
xchg
adc
or
mov
js
sub
add
gs
ljmp
xchg
mov
pusha
mov
std
addb
and
call
in
cltd
and
test
icebp
mov
xchg
lret
xor
or
inc
fs
push
in
or
inc
or
and
test
jmp
hlt
inc
jae
loope
lods
popa
pop
inc
cld
or
fcoml
push
add
push
and
dec
rorb
adc
push
call
je
sbb
mov
adc
mov
or
filds
popf
add
cli
sub
adc
lds
mov
xor
add
loopne
es
jb
inc
jle
test
add
pop
mov
dec
ficomps
in
add
jmp
sub
test
and
loopne
shll
int
shl
dec
add
frstor
lods
push
dec
jl
mov
lods
pusha
lea
jg
adc
pop
fmuls
sarb
dec
mov
or
dec
pusha
sub
cmpsl
es
inc
jg
movsb
out
jmp
sbbl
pushf
lock
mov
inc
test
inc
add
mov
add
dec
rcrl
std
adc
addl
dec
inc
call
leave
flds
push
loopne
cltd
lgdtl
dec
jno
adc
imul
test
push
dec
add
xor
jno
xchg
mov
mov
mov
dec
push
add
pop
add
cld
mov
add
mov
adc
pop
jl
jo
enter
sbb
sbb
or
ret
in
add
inc
fstpl
sbb
jo
cmp
adc
cmp
add
int
shll
ss
add
lret
mov
or
sahf
inc
mov
inc
xchg
outsl
decl
hlt
mov
inc
movsb
cltd
push
sbb
mov
mov
aam
inc
cs
sbb
out
sbb
jge
inc
xchg
sub
insb
enter
rolb
aaa
or
jbe
hlt
and
xchg
inc
test
add
punpcklbw
test
call
adc
movsb
pop
shlb
sub
fildll
sub
jge
add
adc
movsb
lret
divl
jecxz
les
stos
mov
loope
inc
fdivrs
lods
add
or
loopne
push
xchg
mov
mov
int3
inc
fsubs
sub
sub
jg
imul
inc
mov
push
mov
xor
shl
xor
and
mov
cmp
inc
clc
je
and
shrl
aad
push
adc
fldt
cmp
sbb
jnp
or
xor
js
inc
test
inc
xchg
popl
repz
push
xlat
or
outsl
xchg
aam
jg
mov
add
mov
jge
and
stos
jnp
jle
add
add
sbb
notb
jo
jl
or
leave
add
mov
or
shl
sbb
add
xor
mov
lods
clc
call
adc
std
inc
sub
fidivs
cmp
insl
in
or
addr16
push
mov
xchg
fmuls
fiaddl
pop
jle
fxch
lods
mov
bound
or
pop
dec
aad
pusha
cwtl
adc
into
jb
gs
mov
add
mov
xchg
jle
push
movsb
outsb
dec
mov
add
mov
sub
outsb
lret
sti
es
adc
and
inc
push
sahf
out
enter
pop
push
lea
addl
mov
add
jmp
loope
jo
dec
cltd
mov
mov
out
sub
mov
adc
ss
dec
adc
push
or
in
pop
mov
inc
mov
mov
mov
cmp
je
in
nop
lock
push
das
add
cmp
out
jecxz
dec
mov
sbb
pop
adc
push
hlt
lret
popa
pop
push
nop
mov
xorb
xchg
add
in
jo
dec
data16
mov
incl
test
dec
xchg
xor
dec
push
jmp
sbb
inc
int3
sub
inc
cmp
sub
adc
sub
fsubl
sub
popa
lock
mov
mulb
shl
mov
or
shl
scas
jmp
nop
jmp
mov
subl
nop
pop
dec
dec
mov
out
adc
rclb
loopne
mov
xchg
lcall
pop
xor
inc
pop
add
test
fstpl
sub
loopne
mov
sub
and
arpl
mov
andb
daa
xchg
in
pop
inc
sti
es
nop
add
or
clc
push
in
das
add
dec
jle
add
xlat
jbe
out
cmpsb
nop
push
pop
push
outsb
mov
add
pop
gs
mov
lcall
fdivr
insb
notb
clc
dec
and
pop
movsl
mov
inc
lods
pusha
and
ja
subl
popa
mov
and
ret
int3
lret
mov
in
adc
pop
fidivl
jne
icebp
adc
sbb
add
iret
cmp
inc
push
inc
add
push
movsl
add
popf
movsl
push
push
aaa
call
add
xchg
mov
mov
and
rcll
cmp
pop
xchg
movsl
out
or
movb
inc
in
fsubrl
repz
jbe
fadd
and
pop
mov
arpl
add
aaa
mov
or
pop
cli
mov
pop
push
dec
popf
mov
int3
mov
push
adc
inc
shl
movsb
jo
xor
xchg
imul
adc
cmp
lods
sbb
push
aas
popf
jmp
call
out
icebp
cwtl
rol
or
dec
xchg
ss
int3
push
cmp
sbb
adc
pusha
sub
mov
inc
movsl
inc
les
push
nop
idiv
xchg
mov
jg
or
and
idivb
lods
lock
cmp
adc
aas
scas
add
xor
add
cli
in
cmpsl
add
push
add
push
inc
mov
inc
or
mov
divb
pop
push
cld
add
mov
cmp
mov
add
ja
arpl
xor
mov
fwait
mov
mov
lret
add
andl
std
and
ds
adc
aad
sbb
leave
bound
imul
fsubr
add
stos
insb
cmp
push
push
fdiv
out
inc
cltd
cmpsl
loop
mov
cmpsb
and
cs
enter
cmp
xchg
inc
cld
xor
push
lock
or
cmp
push
xor
cmp
repz
mov
data16
pop
imul
jae
add
aaa
mov
test
dec
push
insb
cmp
sbb
popa
or
xchg
das
inc
and
push
xchg
push
leave
add
jnp
add
mov
sbb
cmp
pop
mov
add
or
les
cmp
cltd
pop
outsb
sti
shl
jae
pop
stc
adc
in
adc
addr16
ds
push
inc
and
mov
jl
mov
add
mov
and
pop
inc
sbb
push
pop
mov
or
or
sbb
mov
mov
cmp
xchg
and
jle
push
mov
jo
or
xor
mov
add
mov
cmp
mov
ret
mov
mov
push
xchg
iret
or
bound
add
movsl
or
adc
aaa
sbb
ret
or
sbb
cmp
movl
and
or
loope
lock
inc
hlt
shlb
push
inc
ret
mov
inc
outsb
pop
cmp
hlt
cmp
xchg
cmp
fs
or
leave
sahf
and
into
mov
push
aam
mov
dec
lcall
movntq
adc
dec
push
ror
sbb
sub
sub
xor
sbb
icebp
dec
cmp
add
mov
hlt
mov
sub
push
push
add
adc
nop
mov
xor
in
jmp
mov
mov
cwtl
loopne
clc
xchg
inc
test
xor
dec
add
shrb
or
cmpsl
jl
test
dec
and
lcall
add
or
js
out
mov
push
enter
stos
add
dec
in
mov
mov
adc
and
enter
pop
xor
addb
mov
pop
mov
jbe
push
jge
mov
andb
cs
adc
cltd
xchg
and
add
scas
gs
xor
add
test
xor
xor
cmp
xchg
xor
or
dec
cmp
xor
mov
and
test
and
les
or
pushf
mov
test
aad
cli
mov
add
inc
fs
js
sbb
fs
out
inc
add
call
xchg
mov
adc
clc
cmp
adc
int3
les
xchg
imulb
xchg
les
and
not
cmp
xchg
adc
lods
pop
cmp
mov
jl
cwtl
adc
xchg
mov
out
test
and
add
cli
jl
call
adc
fists
and
mov
je
movsb
outsl
push
mov
mov
testb
mov
mov
enter
popf
or
out
test
push
cltd
and
mov
rolb
xchg
mov
add
shll
mov
fbld
scas
and
mov
cmpsl
cwtl
inc
dec
pusha
shll
out
negb
mov
mov
and
adc
das
sbb
push
sbb
and
rclb
pop
stc
lea
push
push
pop
aaa
es
or
and
push
stc
fldl
mov
icebp
jge
jg
pop
ret
mov
idivb
cmp
adc
jmp
xchg
push
in
data16
pop
push
push
dec
sub
adc
je
lds
push
cmpsl
push
fsubrs
or
and
add
sarb
test
xchg
aam
adc
adc
dec
and
mov
or
mov
mov
dec
mov
adc
add
pop
cld
cld
rcrb
lock
add
lret
mov
movsb
or
sbb
pop
push
je
mov
lods
sbb
lea
cmp
add
mov
dec
xor
adc
dec
stc
add
cltd
xchg
mov
xchg
or
in
cmp
and
mov
sar
mov
in
cs
cmp
pop
mov
dec
push
pop
pop
mov
pop
pop
add
and
mov
fildll
pop
cmp
xor
je
test
pop
lods
sub
mov
je
out
cs
inc
mov
call
repz
mov
subb
inc
add
xlat
fwait
test
in
mov
mov
neg
dec
cmpb
call
ret
mov
sub
popa
lock
add
cmp
xor
std
out
lds
loope
xchg
or
add
and
add
xchg
ret
push
sbb
mov
jnp
decb
xchg
arpl
sbb
or
adc
cltd
sbb
jp
cmp
cmp
inc
mov
push
out
lods
cmp
push
jns
pop
mov
xchg
loopne
sbb
stc
mov
inc
les
cwtl
xor
rcl
add
out
sbb
and
loop
cmp
xchg
sti
push
sarb
add
sbb
push
dec
hlt
je
adc
jns
ret
in
shll
pop
pop
or
loope
outsb
pop
bound
cmc
add
mov
xor
lret
pop
leave
fsts
push
es
jo
ret
add
dec
inc
jbe
rcll
push
scas
mov
mov
push
mov
and
or
inc
or
pop
inc
cmp
aaa
je
rcl
push
pop
xchg
dec
sbb
dec
sahf
mov
jae
pop
or
sbb
cmpl
mov
pop
jo
pusha
push
dec
pop
lock
and
add
sub
mov
subl
nop
lock
pop
fwait
or
adc
mov
xor
stc
cs
mov
andl
and
xchg
mov
rorl
add
sub
adc
lock
jmp
jmp
fidivrs
xor
sbb
mov
jl
sub
enter
push
inc
in
and
add
mov
hlt
cs
mov
cmp
arpl
add
out
insb
mov
scas
mov
pop
ss
and
call
mov
gs
test
cmpsl
add
leave
addl
rorw
sti
icebp
jne
dec
cmp
rclb
addr16
push
or
or
adc
adc
js
call
mov
add
insb
ret
rcrb
mov
enter
pop
sbb
xor
or
push
shlb
jle
push
dec
fmuls
xchg
jae,pn
mov
and
insb
test
sbb
mov
lods
push
push
and
fnstenv
clc
sub
js
xchg
push
xor
mov
andl
mov
push
cmp
movsb
enter
insb
cwtl
loopne
mov
stc
mov
pop
mov
call
jecxz
add
xor
pop
fs
mov
add
dec
mov
sbb
adc
daa
outsl
rcrl
mov
cmp
nop
sbb
inc
sub
aam
fs
ds
imul
movsb
and
clc
sbb
mov
cwtl
mov
nop
add
movsl
idivb
dec
pop
jbe
hlt
in
adc
stc
mov
ret
pop
and
mov
add
fs
nop
add
and
aas
mov
and
add
ljmp
mov
cli
cmpb
fwait
sub
xor
mov
int3
inc
mov
clc
cld
push
icebp
xor
sbb
jbe
and
js
sbb
mov
pop
cmpsb
fwait
jnp
pop
pop
in
inc
lea
cmp
xor
lret
fsubl
cltd
xor
xchg
lea
into
mov
lret
xchg
mov
jecxz
ljmp
push
xor
movl
push
lock
repnz
out
pusha
or
cmc
or
rep
pusha
push
xor
dec
or
adc
adc
jb
cmp
imul
xor
aas
mov
jb
rclb
xchg
mov
push
inc
popf
cmpsl
lret
and
popf
mov
cld
out
loope
xor
jmp
mov
and
cmp
cmp
repnz
std
daa
lds
jge
nop
adc
or
or
and
je
lock
dec
stc
aad
cmpsb
add
mov
data16
ds
mov
inc
sbb
and
lea
mov
xor
adc
and
ret
cltd
es
or
fs
popa
sub
mov
or
dec
mov
sub
and
into
xchg
dec
inc
inc
mov
inc
rcrb
xor
lods
sub
or
fs
cmp
or
add
cwtl
js
add
aaa
xchg
xor
or
mov
shlb
dec
fwait
or
hlt
subb
add
add
xor
add
xchg
add
add
into
push
pop
and
call
mov
pusha
cmp
clts
mov
bound
sti
pusha
pop
add
jmp
mov
outsb
sub
inc
call
pop
pusha
sti
sbb
dec
add
sahf
lret
or
sbb
sarb
xchg
sub
sahf
xlat
mov
sub
push
add
push
xor
cld
insb
and
aaa
sbb
mov
mov
xor
mov
mov
xor
mov
pop
movsb
xchg
cmp
test
dec
cld
ljmp
add
push
cmp
jne
leave
mov
sbb
sbb
cmpsb
pusha
jno
lods
push
jnp
push
in
jl
mov
xor
stos
inc
test
xchg
shlb
cmc
or
mov
xchg
jnp,pn
pop
add
push
stc
and
lret
sbb
ret
dec
in
add
scas
dec
int3
inc
xchg
xor
roll
add
adc
mov
clc
push
pop
jns
or
lahf
dec
inc
sbb
dec
subb
imul
add
or
daa
or
xor
inc
ret
dec
bound
call
and
cwtl
in
add
shll
enter
mov
mov
jnp
mov
lea
pop
adc
or
insb
and
jle
cmp
jmp
or
lods
rolb
hlt
or
or
cmp
fdivrs
add
or
cmp
mov
xorl
lods
and
xor
sbb
jl
cmp
les
sbb
mov
xor
pop
and
add
in
mov
mov
lds
fimuls
pop
es
add
sbb
xchg
xor
inc
xor
or
in
sbb
pusha
shll
mov
mov
notb
into
adcl
xor
add
adc
add
xchg
or
mov
jl
push
sbb
mov
enter
fists
fstps
and
arpl
pop
sub
add
cmp
out
and
mov
in
addr16
pop
and
xor
push
es
sahf
mov
repnz
stos
cmp
mov
sub
mov
cmp
and
fsts
fs
pop
jecxz
mov
mov
ret
jl
mov
cmpsl
sub
inc
sub
adc
test
and
push
add
and
cli
mov
sub
inc
add
sbb
mov
out
add
imul
jge
mov
ffree
repz
push
fadds
cmp
fs
push
add
bound
mov
cltd
adc
mov
pop
or
dec
mov
sbb
wbinvd
pop
stos
or
movsl
repnz
add
push
or
cwtl
sbb
sub
aas
movsl
dec
or
cmpsb
shll
mov
adc
insl
mov
loope
or
vorpd
addl
push
sbbb
push
roll
lods
adc
sbb
mov
imul
or
inc
cmp
pop
jb
add
lds
test
sahf
cwtl
or
pusha
cmpl
rolb
fwait
xchg
adc
dec
mov
or
inc
add
repz
loop
pop
xchg
js
movsl
pop
adc
test
add
pushf
sbb
test
ljmp
mov
rcrl
cmp
add
mov
xor
nop
xchg
sub
push
stos
es
sahf
fadds
add
mov
orl
mov
dec
dec
imul
mov
xchg
and
cmc
pop
inc
mov
mov
cs
jmp
std
lret
lock
pop
pop
jo
pop
and
inc
mov
and
cwtl
sbb
orl
mov
mov
cmc
std
xor
pop
pop
add
mov
iret
inc
cmpsl
test
shrb
sbb
or
stos
and
mov
ret
nop
lret
mov
adc
test
mov
mov
sbb
jl
xor
sub
rcrl
adc
or
mov
shlb
push
and
mov
scas
lods
or
cmp
xor
mov
loopne
jecxz
pop
mov
pusha
inc
jnp
mov
roll
jl
push
add
cmpsb
inc
inc
xchg
and
push
lock
inc
push
inc
inc
sub
mov
lea
xchg
nop
sbb
xor
lahf
adc
inc
cwtl
dec
dec
and
iret
mov
mov
inc
inc
xchg
mov
cmp
adc
mov
or
roll
xchg
enter
fldcw
cltd
xor
nop
les
xor
sub
pop
inc
mov
mov
and
cmp
add
sbb
ret
xor
push
push
mov
mov
decl
ds
inc
add
sti
mov
sub
fdivrl
mov
inc
jecxz
in
cwtl
xchg
lock
add
stos
jb
mov
push
mov
es
push
je
shrb
ja
add
cli
push
xlat
dec
movsb
ret
xor
push
icebp
xor
pop
push
jmp
push
jmp
shlb
jo
std
or
and
imul
test
push
lcall
adc
xchg
push
ds
mov
and
aaa
pop
dec
les
in
mov
push
leave
jns
xor
fsub
shlb
sub
inc
shl
cltd
cwtl
push
jp
sbb
mov
add
jo
sbb
cmp
fld
inc
jb
cltd
adc
clc
xchg
aaa
scas
nop
cmp
mov
cwtl
sbb
add
and
or
mov
xchg
dec
sar
scas
cwtl
add
pop
jle
ficompl
xor
add
aas
in
enter
sbb
dec
fstps
pop
shl
jae
push
fstl
pop
sbb
popa
mov
dec
add
repnz
ret
frstor
or
add
dec
push
pop
dec
in
add
dec
loopne
icebp
add
xchg
popa
xor
sbb
out
xchg
bound
adc
lods
add
jnp
dec
aad
jb
nop
sbb
jno
fsubl
sbb
andb
loopne
inc
cmp
or
loope
sbb
and
fidivl
fs
push
dec
pop
cmp
faddl
jae
ljmp
lcall
and
fildl
por
inc
sbbb
and
adc
adc
mov
andb
dec
bound
insb
cmovl
shll
pusha
jg
lea
je
in
push
mov
in
cmp
push
jns
test
add
cld
in
inc
xor
dec
sub
mov
in
sar
adc
sub
rolb
add
notl
in
fs
and
sbb
push
mov
das
mov
imul
ret
imul
pushf
xchg
stos
cmpsb
aam
scas
icebp
test
repnz
mov
or
in
andb
xchg
roll
adc
pop
cmpsl
or
push
jmp
and
push
push
imul
xlat
and
fistps
sbb
loop
adc
sub
xchg
int
or
dec
and
mov
test
pop
and
push
add
mov
aas
pusha
xchg
loopne
incb
nop
jne
xchg
and
xor
sub
xor
negb
std
mov
lret
pop
xchg
test
sub
sbb
cltd
jl
in
add
and
sub
mov
sbb
das
push
call
cld
dec
test
mov
mov
inc
or
jmp
inc
mov
movsl
mov
adc
inc
int3
cs
pop
add
add
sub
sti
inc
xor
repnz
add
lret
out
cmc
xchg
push
mov
popf
inc
and
sbb
subl
cmp
inc
enter
insb
mov
rorb
into
scas
adc
xchg
push
sub
mov
fmull
push
fs
and
add
rcrl
and
push
stc
nop
or
or
clc
pop
pusha
adc
and
mov
cmpsb
push
sub
adc
sbb
xor
js
xor
mov
clc
cmpl
decl
dec
push
jmp
mov
cwtl
loopne
lods
shr
xor
ds
sbb
shlb
pop
fisubrs
inc
stos
and
xchg
or
xchg
nop
jecxz
in
test
stc
lock
mov
into
xchg
shlb
cli
jl
add
add
mov
or
sbb
movsb
xchg
jne
jo
outsb
mov
adc
jns
cmp
sbb
popa
ffree
inc
add
xor
add
adc
test
stc
sbb
jb
cmp
jecxz
dec
out
jl
add
cmp
add
scas
jle
ret
shl
fnstenv
mov
mov
push
add
inc
fisttpll
ljmp
out
inc
outsb
inc
add
adc
jge
insl
addl
lods
lds
scas
stos
rol
std
and
pop
lret
inc
push
out
cmp
shr
incb
cmp
movaps
mov
xor
mov
and
les
mov
and
incb
push
xchg
outsl
pusha
cs
cmp
and
test
jl
adc
fidivs
add
xchg
rolb
pusha
push
fldt
outsb
lahf
xorb
inc
add
or
femms
xchg
pop
cmp
test
gs
roll
les
ljmp
mov
inc
add
subl
mov
adc
xor
inc
pop
inc
sub
cmc
inc
adc
sbb
stos
jmp
xchg
or
aaa
pop
fnstcw
pop
lods
or
push
mov
mov
add
outsb
int3
in
sub
popa
or
shll
je
adc
sub
xor
add
xchg
rclb
loop
add
mov
enter
insb
lock
mov
cmp
jne
lgs
add
inc
inc
add
rclb
add
dec
xor
popa
testb
push
mov
pop
clc
inc
loop
push
jp
je
add
sub
add
movsl
add
add
cmc
adc
add
lods
pop
adc
add
inc
mov
cmpsl
cltd
fiadds
es
ror
sbb
pop
sahf
aas
add
xchg
repz
cmpsb
shll
xorl
add
push
add
add
decl
lcall
mov
add
into
sub
rcll
jmp
pop
leave
and
js
cmp
pop
adc
mov
add
jmp
es
and
jle
adc
add
scas
dec
mov
adc
push
push
add
je
mov
ret
pusha
stos
xchg
and
fs
jle
int
test
and
add
or
jecxz
sub
jnp
push
movsl
in
mov
loop
mov
lods
pusha
sbb
xchg
xor
movsb
push
lcall
aaa
aas
cmpsb
add
int
test
sti
fadd
add
rorb
jnp
lods
out
jno
sub
sti
aad
adc
shr
dec
push
xor
js
xor
pusha
add
sahf
sbb
das
clc
mov
pushf
add
jmp
lock
jae
imul
repz
add
jmp
sbb
cmpsl
jnp
hlt
or
push
fstl
mov
xor
pop
mov
inc
rcrb
ret
rcr
cmp
and
cltd
push
push
mov
or
aad
sub
ret
mov
mov
pop
scas
mov
dec
xor
cmp
and
arpl
nop
or
dec
je
jb
add
inc
sbb
lea
sbb
add
mov
mov
out
adc
or
xchg
mov
clc
inc
aas
jnp
add
cmp
sti
pop
dec
jecxz
xchg
rcrb
popf
cli
add
stc
inc
jg
cmpsl
add
or
movsb
fcmovb
pop
and
jns
psubq
stos
jge
hlt
lock
xor
jle
add
leave
cli
pop
adc
std
add
addl
xor
outsl
xchg
push
mov
dec
push
ret
stos
inc
dec
inc
jo
inc
adc
inc
sub
dec
in
mov
xorl
cmp
xchg
in
idivl
dec
cmp
sahf
adcb
arpl
stc
fcompl
out
ja
mov
dec
lret
and
dec
add
push
pop
push
push
pop
vmread
je
cli
les
pop
cwtl
mov
mov
sbb
aam
adc
popa
mov
test
adc
push
add
mov
xor
add
and
jp
in
add
mov
pop
in
jo
inc
push
or
orb
data16
add
mov
xor
scas
lock
push
dec
dec
ja
cmpb
lea
pop
test
xchg
cwtl
or
adc
add
pop
in
and
subb
pushf
or
ja
iret
cbtw
cmp
inc
add
dec
or
fists
add
cwtl
push
sahf
cli
adc
cmp
inc
es
jge
xor
push
inc
lock
mov
or
pop
cmpsl
add
test
sbb
fsub
popa
popa
dec
and
add
or
fsts
nop
dec
and
or
jae
add
mov
cmp
shl
stos
movsl
int3
push
or
shrb
jle
add
jp
push
mov
ret
add
cmp
out
idiv
xor
mov
repnz
push
cmp
sbb
cli
push
pop
jmp
shlb
sahf
mov
or
xchg
icebp
pop
xor
and
xchg
xchg
xchg
adc
pusha
mov
add
cmpsb
int3
push
dec
dec
aas
addr16
or
add
clc
mov
jns
add
call
mov
xor
shl
or
sbb
jae
add
aam
call
xor
lea
fildl
dec
xchg
out
sbb
ds
sahf
add
mov
movsl
or
aam
loopne
push
ja
adc
xchg
int
test
cmp
lret
mov
push
dec
out
cltd
iret
insb
rolb
jmp
xlat
adc
jae
roll
cwtl
adc
adc
inc
push
roll
dec
arpl
and
cmp
lea
inc
sbb
addr16
mov
jno
add
sti
ret
mov
adc
lods
push
adc
and
mov
jo
ja
pop
mov
cltd
sub
insb
sahf
xor
add
mov
rcrl
add
push
xor
leave
xlat
lret
sub
push
or
or
loop
aaa
imul
push
lret
mov
xor
xor
push
ret
mov
out
add
inc
adc
dec
jae
cwtl
cmp
iret
ljmp
add
out
das
and
scas
add
addl
ror
movsb
pop
push
jnp
add
decl
adc
stos
push
add
test
and
cmp
test
jle
adc
cli
testl
mov
adc
lahf
repnz
call
or
xor
fs
lcall
push
insl
sub
les
in
or
jge
or
out
mov
and
pop
jns
add
roll
sahf
pop
add
xor
jmp
mov
jo
fxch
push
cmp
xchg
iret
push
stc
sbb
xor
stos
add
pop
and
rclb
xchg
mov
cmp
mov
lret
test
dec
fiaddl
lods
or
xchg
jbe
pop
movsb
jg
cmpsb
push
aas
jae
or
dec
aam
sahf
cwtl
int
add
xchg
rcr
imul
rolb
lahf
lret
sbb
sbb
push
xchg
or
add
xor
mov
pop
loopne
xchg
adc
mov
push
adc
adc
shll
dec
mov
inc
in
loope
insb
fildl
sub
add
jb
add
mov
mov
add
lret
xchg
test
push
ja
add
in
dec
inc
jmp
or
pop
nop
das
cmc
mov
xchg
inc
jl
sub
mov
add
mov
stos
loop
cltd
rclb
rol
push
xor
call
pusha
lea
xor
adcb
add
clc
pop
cld
stos
lret
and
sub
jecxz
push
pushf
inc
das
lcall
mov
inc
rorb
movsb
std
shrl
aam
fs
popf
jge
add
pop
push
xchg
sbb
xor
pop
xchg
test
idivb
js
inc
lds
sub
add
mov
mov
add
jmp
daa
add
push
push
std
xchg
jae
xchg
dec
mov
fbstp
stos
dec
sbb
sub
or
mov
xchg
insl
ljmp
enter
mov
jmp
push
jge
cmp
mov
jae
sbb
dec
mov
in
pop
std
inc
mov
test
sbb
mov
inc
shll
les
pop
dec
pop
mov
cwtl
inc
jb
xor
nop
jo
sbb
test
sbb
jp
push
or
jmp
xchg
push
in
cmp
and
clc
inc
lock
add
insl
les
mov
pop
cs
pop
test
xor
adc
int
cmp
cli
sbbl
adcb
dec
adc
int
clc
mov
iret
movsb
and
pop
pushf
sbb
aaa
xchg
add
pop
and
cmpsb
inc
push
push
xchg
sub
in
push
add
pop
push
in
fstps
xchg
jg
stos
imul
cmpsl
xchg
pop
mov
add
lret
dec
cld
xor
add
push
inc
clc
sbb
add
push
out
jl
sub
jns
mov
dec
pushf
add
clc
xchg
mov
add
xchg
enter
hlt
dec
mov
pop
test
fbstp
pop
repnz
add
fistl
aaa
jb
add
xchg
add
jae
test
mov
cwtl
aaa
in
add
imul
sahf
dec
cmp
adc
xchg
cmc
fnstenv
decl
inc
sub
loopne
pop
call
cs
sub
cmp
cmpb
add
mov
pop
sbb
jge
cmp
cmpsl
ds
mov
xor
test
loopne
xchg
repnz
icebp
push
sbb
pop
add
das
add
mov
push
shrb
dec
inc
psadbw
mov
movsl
cmp
adc
stos
not
add
and
jge
pinsrw
push
mov
gs
cmp
subb
xor
mov
adc
cmpsb
cmp
add
insb
mov
pop
xchg
dec
cwtl
add
inc
or
lea
aam
add
lret
mov
push
fnsave
aam
pop
lret
push
icebp
sbb
jb
sub
or
mov
lret
faddl
jnp
in
and
aas
jp
sbb
aam
or
dec
pop
aam
inc
mov
sbb
loopne
push
loopne
sarb
loopne
lcall
mov
push
sbb
inc
ret
inc
add
mov
mov
mov
fstl
inc
clc
ficompl
mov
add
sub
data16
inc
movsl
push
sbb
cmp
xchg
mov
push
add
ret
in
sahf
and
mov
loop
pop
sbb
test
add
cwtl
jb
out
pusha
int
xchg
lock
negl
dec
xchg
and
add
jmp
xchg
and
add
cltd
adc
or
jae
mov
mov
push
loop
add
pop
dec
push
shlb
movsl
pop
mov
mov
fsubrl
jo
lock
test
aam
adc
dec
add
add
sbb
jl
or
rorb
mov
bound
fsubrs
lds
dec
mov
sub
adc
inc
adc
and
dec
test
orb
xchg
sub
cmp
pop
jg
fildl
jnp
and
lds
push
jo
xchg
and
adc
push
and
and
mov
push
inc
push
dec
test
cs
push
and
enter
enter
add
xchg
jmp
add
dec
pushf
mov
scas
cmp
or
xor
add
jge
in
sbb
xor
jl
inc
pushf
push
into
mov
adc
jns
adcl
mov
stc
pop
mov
cmp
mov
add
mov
scas
add
je
dec
jle
fdivs
push
pop
jmp
sarb
add
push
pop
movups
sbb
xchg
fiadds
mov
imul
jle
add
cmpsb
popl
xorl
pusha
jl
mov
insb
add
outsl
imul
lret
add
mov
and
hlt
xor
out
rorb
ja
outsl
cli
mov
jl
fcmovbe
addr16
xor
in
call
testb
pop
mov
or
addl
add
mov
xchg
pop
roll
roll
lret
or
enter
add
gs
into
pop
and
lcall
mov
xchg
add
sub
xchg
sbb
xor
es
mov
add
inc
ret
push
pop
mov
movsb
ljmp
stos
test
xchg
jne
in
fstl
sub
int
movsb
imul
test
cmc
or
push
mov
pop
cmp
lret
jb
or
jbe
cld
add
testl
ds
pmulhw
push
pop
add
icebp
xchg
push
leave
adc
add
pop
adc
adc
cmp
cmp
add
inc
add
sbb
nop
add
mov
stos
mull
lea
pop
cs
sub
dec
aam
sbb
jmp
sub
ljmp
jb
or
pushf
sub
cmp
cmp
dec
scas
lock
stos
bswap
mov
cld
and
inc
jge
xor
rcll
addl
inc
add
mov
xlat
add
into
push
fucomip
lods
lock
inc
sahf
push
xorb
insb
adc
idivl
add
sub
inc
mov
test
cmpsl
pop
dec
and
pop
insb
add
mov
push
mov
pop
nop
fildl
out
ret
push
ja
lret
movsb
sbb
inc
jge
cwtl
xlat
movsl
fistps
add
jmp
out
pusha
push
lcall
xor
pop
or
xchg
lock
test
inc
inc
out
add
jp
leave
add
les
mov
inc
nop
add
pop
dec
insl
cwtl
cmp
mov
lcall
jg
sbb
and
lea
aas
imul
pop
mov
pop
dec
sahf
je
jb
xchg
dec
fs
fildl
idiv
rcrb
dec
enter
roll
and
add
cmp
mov
enter
add
and
mov
xchg
aaa
cltd
pop
sub
sbbb
aaa
flds
out
sub
push
jne
icebp
add
pop
add
sub
push
jne
loopne
push
aam
cwtl
xchg
repnz
add
imul
out
mov
add
fdivrs
mov
nop
push
in
add
pop
sbb
jge
clc
mov
icebp
push
jp
adcb
jmp
js
inc
outsl
mov
sbb
ret
sarl
sub
cltd
movsb
sbb
pop
cs
and
lods
xchg
jg
push
adc
push
add
test
imul
add
loopne
pusha
pop
into
imul
rcrb
add
push
cs
jmp
test
sbb
inc
cmp
cmp
sahf
inc
and
xorb
jecxz
cltd
add
out
push
jno
jl
stc
add
mov
shrb
xadd
sbb
jl
push
and
mov
and
add
nop
add
std
push
sbb
ss
les
sbb
jb
jbe
test
sub
addr16
xchg
xchg
pop
mov
cwtl
mov
or
cmp
adc
into
or
add
cmpsb
out
pop
add
jp
adc
sbb
loopne
sarb
jg
inc
jno
cld
dec
cltd
mov
insl
shll
shll
ja
fstpt
aas
inc
mov
cmc
jb
idivb
in
neg
or
cmp
adc
jbe
test
push
mov
je
add
out
push
xchg
dec
cmc
add
ret
out
pusha
decl
into
inc
clc
cltd
insl
inc
loop
orb
push
mov
pop
aas
leave
xor
jo
xchg
fs
cmpb
sbbb
rorb
pop
mov
cmp
aam
pop
and
movl
cmp
or
cmpsb
add
mov
jns
rcl
add
mov
mov
jb
inc
xchg
jns
mov
dec
add
xchg
jne
es
xchg
jmp
xor
jnp
adc
xchg
add
dec
xchg
in
fsub
rolb
subl
rclb
adc
mov
inc
adc
pop
pop
cltd
repz
add
inc
aad
or
sbb
movb
and
add
movsb
test
jns
xchg
cwtl
mov
xchg
inc
int3
add
jle
pop
jp
jae
add
daa
imul
cmp
xlat
rcll
or
push
pop
xchg
movsl
es
add
out
mov
fidivl
adc
sbb
sbb
arpl
and
test
sub
mov
push
jae
stos
cmpb
shll
xchg
pop
repz
inc
dec
aam
dec
nop
dec
subl
mov
aas
mov
sub
in
popf
push
add
mov
test
xor
out
stc
jp
add
data16
out
sahf
mov
jg
sbb
sub
jle
hlt
jl
jp
js
fwait
push
jae
out
int
inc
xchg
mov
ret
add
pop
xchg
pop
mov
clc
add
cmpsb
xlat
adc
jmp
sub
xchg
dec
popf
push
pop
adc
addr16
cmp
daa
scas
and
mov
outsb
cmp
add
fwait
sub
pop
repz
push
ja
loopne
jb
sub
dec
sub
jns
or
add
mov
fcmovnu
test
jb
sbb
jmp
add
rcll
mov
and
mov
add
or
imul
jb
loope
or
out
rolb
popa
or
pusha
push
xlat
inc
mov
pop
push
inc
lret
and
ljmpw
mov
es
scas
ficoms
mov
sub
xor
call
pushf
add
and
inc
clc
pop
dec
mov
enter
inc
push
fidivs
pop
jl
leave
jp
add
mov
in
xchg
iret
shrb
xchg
adc
jmpw
push
pop
in
cs
mov
push
lock
popa
test
dec
lcall
and
xor
or
rolb
push
scas
add
jl
imul
xchg
and
and
jne
push
sbb
loope
ficoms
cli
sahf
dec
sub
and
add
movsl
cmc
add
cmp
push
scas
in
rorb
lock
clc
loop
mov
pop
or
test
add
jo
add
loop
test
leave
push
jae
bound
test
lea
fsub
jne
insb
scas
adc
dec
mov
stc
pop
push
jge
xor
xchg
add
mov
jno
pop
sbb
add
inc
cmp
jae
outsl
cltd
pop
inc
mov
imul
dec
xor
mov
mulb
lods
and
loop
gs
adc
inc
mov
sub
aaa
mov
adc
loop
cmp
add
sbb
test
inc
mov
pop
push
pop
and
dec
dec
mov
add
test
test
jno
add
lcall
popf
and
add
cmc
add
sub
bnd
add
imull
stos
pushf
subb
sti
loopne
pop
xchg
push
mov
jmp
js
jecxz
sahf
xor
pop
mov
mov
mov
cld
scas
aam
add
fnstenv
repnz
es
xchg
wbinvd
add
stos
pop
sbb
jg
mov
neg
xchg
sbb
push
mov
pusha
jl
in
add
add
jne
fdivr
or
cmp
sbb
dec
dec
add
dec
testb
or
out
sbb
lock
inc
popa
add
dec
or
add
icebp
outsb
loop
sub
shll
rcrl
ds
aas
lock
xor
mov
xchg
fisubl
lahf
sbb
cli
mov
outsb
xchg
insl
nop
std
push
stc
add
sbbb
add
push
add
rcrb
out
fadds
push
mov
pushf
int
dec
aas
push
insb
aam
add
push
jb
js
xchg
sahf
add
pop
ret
jl
outsl
pushf
pop
fwait
or
push
add
push
jb
in
enter
xor
sbb
cmp
sbb
movsl
dec
mov
lahf
xchg
add
fwait
movsl
xchg
xor
jmp
mov
inc
jno
sub
lahf
orb
sub
popl
push
rorl
adc
mov
mov
int3
ljmp
in
insb
call
add
cwtl
icebp
les
dec
add
lret
xorb
pop
or
fistl
cmp
jle
mov
dec
clc
cmc
add
pop
hlt
mov
iret
mov
sbb
mov
shlb
and
lds
mov
pushf
jmp
push
pusha
fidivl
jmp
inc
add
ret
or
movsl
fdivr
bswap
test
push
loopne
push
cli
adc
sub
mov
lret
or
jle
cmpsl
fdivp
daa
inc
add
lahf
pop
jp
fldenv
andb
shrb
add
cli
repz
out
scas
adc
fidivl
mov
and
pop
sub
cmp
into
icebp
int3
jnp
ljmp
outsb
jne
push
sbb
fcmovne
push
andb
pop
mov
add
aas
cmp
adc
pop
xchg
pop
mov
inc
add
cmpb
sub
das
lcall
in
cwtl
pop
aaa
push
sahf
dec
shl
mov
sbb
int3
sbb
pop
dec
and
inc
and
inc
push
aad
inc
sti
and
leave
push
mov
pop
add
and
jg
jle
add
inc
gs
stos
add
lcall
add
adcl
aaa
add
ja
mov
call
sbb
push
enter
add
cmp
sbb
cmp
or
xor
out
arpl
push
or
or
mov
add
fiadds
pop
add
pop
push
and
inc
or
and
and
dec
cmp
loopne
xor
mov
stos
movsb
lock
cmp
lock
rorb
sbb
loope
cli
adc
adc
lret
mov
shrl
out
imul
inc
lock
mov
int3
mov
mull
popa
pop
loopne
add
push
jno
mov
js
mov
loopne
jae
add
jbe
mov
jge
add
stc
sub
xor
test
fs
mov
out
cmpb
jp
stos
or
out
jns
pop
and
dec
pop
push
and
jge
xor
add
lahf
popf
test
inc
insl
xchg
mov
pop
das
adc
inc
cmp
add
sub
bound
pop
inc
pop
hlt
sub
out
ret
dec
shlb
jae
add
cld
loopne
add
mov
pop
aam
mov
or
mov
nop
jg
xor
iret
cmpsb
std
cmp
outsb
sub
push
ja
fcoml
fistpll
mov
add
sub
int
sbb
xchg
call
adc
pusha
dec
push
xor
adcb
sub
add
cld
loope
mov
aas
push
and
mov
and
sub
cmp
xchg
adc
aam
pop
test
cmpsl
push
pop
cmpl
in
mov
shl
lret
add
ret
mov
dec
movsl
add
bound
or
movsb
cmp
xorl
in
mov
outsb
cwtl
insb
add
nop
ja
jnp
inc
push
add
pop
ret
cmp
aad
cmp
add
pushf
mov
movsb
add
aam
stos
ret
dec
add
loope
js
movsl
adc
xchg
sbb
or
sti
inc
and
cmp
xor
push
std
cs
add
ds
jo
sahf
mov
adc
dec
sbb
test
inc
dec
lock
rcrl
push
add
xor
add
mov
xchg
xor
jle
daa
pushf
pusha
add
adc
dec
cld
insb
pop
dec
out
std
cmpb
add
sarb
sbb
jnp
mov
mov
add
and
out
add
inc
shlb
jbe
pushf
cltd
xchg
mov
jo
sti
mov
es
add
gs
dec
loope
mov
insb
add
nop
add
lret
pop
jmp
into
and
inc
mov
shrl
or
add
mov
cmp
lock
add
imul
repnz
rolb
loop
mov
inc
ja
data16
fnstcw
cmp
mov
adc
addr16
or
loopne
xchg
stos
xchg
cmp
lds
xchg
push
xchg
cwtl
mov
add
repz
sbb
addb
fnstcw
jl,pn
push
orb
insb
mov
jns
add
je
mov
subl
sbb
mov
movsb
pop
mov
es
stos
add
call
pop
mov
pop
jmp
movsl
fstps
xchg
cmp
test
push
aam
int
int3
add
daa
pushf
scas
sbbb
push
jp
movsl
xlat
xchg
es
lods
pop
sar
shlb
cwtl
jns
shrb
inc
addb
inc
xor
push
call
loopne
or
dec
dec
in
mov
jne
outsl
mov
add
adc
aaa
add
mov
enter
cmp
xchg
sbb
sub
xchg
add
push
shl
cmp
pop
or
pop
push
inc
inc
inc
mov
dec
cli
mov
fisubrs
lock
aas
dec
sbb
loopne
jg
dec
test
mov
mov
pop
mov
cmp
stos
loop
inc
loopne
mov
or
sub
xor
mov
mov
xchg
dec
mov
push
lods
movsb
push
adc
inc
sarb
add
call
testl
xor
mov
xor
cwtl
jl
and
lods
jae
pop
ficoms
cmp
xchg
pop
addr16
int
push
leave
inc
mov
out
stos
add
pop
mov
pop
and
mov
sbb
xlat
add
push
loopne
sbb
mov
outsl
jge
das
jne
pop
add
xor
std
into
add
vextractf32x4
sbb
mov
ss
add
in
pop
push
adc
add
bound
outsb
sbb
and
cmp
addb
jl
xorl
adc
jb
pop
mov
inc
sub
fstpt
sbb
test
fwait
cs
ljmp
sub
nop
fimuls
mov
stos
sub
push
jns
mov
movsl
pop
xorb
ds
add
xchg
pop
sub
test
mov
psrlw
dec
mov
addl
ja
loopne
adc
imul
gs
sub
andb
clc
dec
add
pusha
rorb
imul
lods
xor
pop
add
insb
ret
test
jb
dec
push
mov
xor
or
jge
mov
dec
xchg
jae
xor
cwtl
mov
add
sarb
sbb
cwtl
add
xor
lret
sti
fdivrl
filds
dec
mov
or
add
sub
cmp
rcrl
ja
test
cmpsl
sub
xor
ficoms
and
es
pop
adc
es
mov
push
sbb
add
aaa
mov
add
and
stos
shlb
jns
and
insb
jbe
mov
and
ja
or
push
pop
mov
and
xcrypt-ctr
cmpsl
fistps
dec
mov
ds
daa
pop
orl
xchg
dec
pop
or
nop
xchg
cmp
xchg
dec
cmp
lods
sub
pop
int
sbb
iret
adc
push
imull
adc
movsb
add
mov
clc
mov
mov
jbe
outsl
int3
cmp
or
cmp
lock
mov
sub
cmc
or
fadds
lock
cmp
push
pushf
cs
nop
js
iret
adc
mov
adc
mov
pop
outsb
jo
xor
sub
and
ficomps
rclb
mov
add
pop
fldpi
or
ljmp
add
and
mov
cwtl
in
in
add
xchg
sub
daa
dec
pop
shl
out
add
stos
jns
jo
add
sub
fcompl
add
cmp
mov
add
sub
pop
fcompl
enter
jae
pop
shlb
gs
jbe
idivb
pop
inc
fadds
dec
jl
inc
in
clc
dec
and
int
adc
push
iret
push
andb
inc
nop
pop
add
jb
mov
lcall
enter
repz
and
pop
jnp
xor
or
push
pusha
jns
mov
xchg
insb
inc
cmpsb
inc
pusha
lea
testb
pop
cmp
fimull
aam
dec
mov
xchg
in
add
jb
pop
adc
add
outsl
cmp
sarl
sbb
adc
sub
shrl
push
inc
cmp
and
repz
loope
xor
inc
pop
mov
aas
cmc
addb
lods
jne
cmp
pop
mov
jae
cmp
xchg
mov
jmp
iret
aad
xlat
movsb
and
out
cmpsl
imul
lahf
shll
andl
lcall
loopne
cli
add
cmc
loope
and
inc
mov
in
stos
and
jo
hlt
xor
subl
aas
insb
in
andb
gs
add
adc
fucom
push
jle
inc
xchg
enter
lret
xor
xor
fs
movsl
test
in
jns
mov
mov
aas
popa
out
es
push
loopne
pop
inc
cli
xchg
pop
sub
shlb
insb
inc
mov
add
add
pop
or
jne
push
jle
or
adc
add
popf
lds
cli
or
ret
add
arpl
pop
adc
cmp
leave
cmc
pusha
pop
int3
cmp
push
pop
push
fcoml
hlt
inc
mov
repz
sahf
and
jne
insb
xor
push
pop
incl
sbb
adc
repz
leave
cwtl
jle
aam
lret
movsl
fdivs
sub
pop
mov
sbb
push
out
adc
cmp
inc
pusha
jno
ja
loop
in
data16
aas
rorb
jbe
add
in
adc
outsb
add
flds
adc
repz
ja
stos
add
mov
movsl
inc
mov
push
out
sarl
rolb
mov
fcomip
sbb
jbe
das
nop
pusha
add
xor
add
iret
aam
movsb
push
xor
pop
sbb
dec
arpl
push
pop
repz
push
xor
stc
or
rclb
subl
add
lcall
cmp
add
pop
mov
pop
ss
jecxz
ljmp
lret
ror
xchg
lcall
jle
ja
mov
js
xchg
movzwl
jb
aaa
aas
dec
or
aad
or
addl
pop
stc
xchg
and
add
repz
fcoml
dec
shll
jae
test
add
lret
cs
lock
clc
ret
cmc
int
pop
jne
in
xor
xor
fadd
jbe
add
add
daa
add
icebp
lret
pusha
add
in
jecxz
adc
pop
aam
les
mov
adc
jae
fnstcw
xchg
and
jg
sbb
mov
mov
sub
add
inc
or
xchg
nop
shll
push
ljmp
dec
stc
cltd
in
adc
cmpsb
outsb
test
ret
out
push
xchg
imul
dec
call
jbe
mov
inc
int
in
or
aam
push
inc
push
imulb
pop
mov
push
jle
and
jmp
fiadds
mov
icebp
jp
sub
cmpsb
jo
fsubl
rcrb
xchg
cmp
mov
test
js
pushf
in
cli
into
xor
and
dec
cmpsl
xchg
dec
test
push
push
mov
pop
add
popf
mov
dec
push
xor
inc
cmpsb
sub
out
lds
mov
sbb
add
faddl
and
aaa
dec
hlt
inc
add
push
inc
pushf
stos
nop
mov
ds
daa
rclb
jl
cwtl
mov
scas
jbe
pop
les
jge
daa
push
adcb
push
mov
add
in
into
in
mov
jg
jp
fs
add
incl
mov
fs
mov
and
mov
pop
imul
shl
stc
popf
jo
add
mov
pop
std
jecxz
in
popa
add
repnz
xor
lea
dec
cmp
mov
sti
adc
xchg
ja
arpl
mov
dec
xor
sub
repnz
sar
push
xchg
dec
fimull
leave
in
jecxz
lea
pop
js
ror
adc
std
push
cld
pop
sbb
push
arpl
pop
adc
scas
pop
roll
aaa
fwait
sub
or
lds
rcl
inc
imul
aam
lcall
add
ja
lods
int
outsl
lea
dec
add
jno
sbb
pop
ljmp
lret
add
aaa
roll
sub
dec
cmp
mov
stc
inc
jmp
pop
add
jle
pop
inc
cmc
daa
imul
stos
bound
adc
jle
add
cmp
ja
sub
dec
addl
add
jns
push
ljmp
and
les
pop
push
fadds
mulb
mov
inc
add
add
mov
loope
jo
cmpsl
inc
rolb
mov
mov
cmp
xor
jg
idiv
push
add
int
inc
add
addb
loope
test
adc
mov
push
pop
adc
jo
out
sbb
repnz
sub
es
nop
add
ret
pushf
adc
add
cmp
in
jl
and
xchg
aam
ss
adcl
add
fcomi
pop
adc
jne
movsl
imul
popa
push
push
sub
out
ss
cmp
mov
dec
les
nop
mov
jmp
and
ds
popf
andb
jae
and
xor
test
xchg
leave
clc
or
inc
sbb
sbb
add
mov
push
sub
jge
jae
sbb
jns
pushf
aaa
inc
add
in
push
add
dec
xor
cmp
mov
jle
sub
jbe
cwtl
dec
inc
clc
mov
aad
je
inc
add
cld
add
adcb
jb
ffree
push
cmp
shrb
daa
lret
add
negb
out
and
adc
xorb
sbb
loope
add
enter
lock
cmp
cmpsb
andb
popl
outsb
stc
mov
push
mov
add
sub
pop
or
mov
pusha
mov
jecxz
add
mov
push
addb
rolb
popa
call
aad
jmp
adc
add
dec
mov
push
push
cmp
add
icebp
call
fisubrl
or
pop
pop
cld
push
and
inc
lret
lods
clc
or
in
movsl
into
mov
add
add
jmp
in
loopne
jle
cmp
mov
add
sub
lea
push
or
movsl
add
dec
jnp
xor
or
cmp
jg
sar
dec
xchg
out
jno
punpcklwd
cmp
pusha
addb
aam
add
loopne
cmpsb
ja
mov
cmp
add
loope
or
int3
dec
add
add
out
cli
add
sbb
pop
movsb
pop
scas
lock
shr
push
imul
adc
jns
negb
stos
pop
cltd
loopne
and
sub
sbb
in
arpl
mov
push
push
jg
jne
inc
push
cwtl
cld
sub
cltd
adc
add
add
icebp
ljmp
xor
int3
pushf
sahf
movsl
fildl
in
dec
aas
int
push
sub
inc
mov
sarl
lods
and
cmp
push
sub
inc
mov
lahf
and
rcrb
jp
or
or
mov
push
sub
jne
add
xor
mov
andb
sub
lret
leave
add
idiv
and
pusha
add
movsb
jne
pop
mov
mov
push
mov
pop
ja
pushf
add
cmp
adc
or
in
test
or
xor
dec
xor
ljmp
pop
add
test
sub
mov
pop
imull
fdivrs
dec
push
stc
cwtl
addr16
push
faddp
scas
cmp
xchg
push
movsb
mov
mov
les
mov
insb
sti
mov
add
or
inc
add
std
xchg
sub
add
push
sub
fwait
add
sbb
js
jmp
mov
pop
add
xchg
jmp
hlt
or
shl
leave
jno
jecxz
jae
jmp
mov
pop
cli
mov
jns
iret
dec
test
dec
nop
add
divb
call
push
dec
inc
insl
iret
popf
dec
test
add
cld
xchg
adc
or
inc
lret
int
rcrl
xlat
scas
insb
aaa
push
aad
ljmp
out
push
cld
xor
rorl
orb
or
add
push
rorb
pop
xor
mov
dec
xor
call
jno
adc
jle
add
fcomps
pop
push
movl
cmpsl
shll
or
inc
jnp
orb
inc
jg
add
fsubrs
sahf
decl
xor
mov
imul
pop
ret
and
jle
mov
push
or
ficomps
fildll
test
in
enter
pop
movsb
inc
and
jl
negl
xor
xlat
add
xchg
pinsrw
call
mov
sub
jmp
adc
int3
jne
cmpsl
xchg
lods
decl
add
push
mov
and
mov
lea
lods
sarb
cmp
inc
inc
jg
stos
sbb
dec
cmp
or
push
loopnew
ret
add
pop
mov
sbb
in
cli
mov
cwtl
push
clc
dec
call
mov
or
shl
and
aad
push
subl
repnz
jmp
repz
cmp
pop
scas
xor
xor
mov
mov
stc
inc
add
pop
out
jle
dec
outsb
add
mov
adc
mov
shlb
dec
add
popaw
loopne
dec
push
aas
inc
pushf
adc
in
or
inc
fwait
pushf
inc
mov
cmp
test
cmp
push
adc
add
dec
in
sbb
jno
mov
scas
add
out
lock
add
fnstsw
ret
lret
jg
subb
rcll
leave
lcall
lea
pop
add
inc
inc
sbb
and
mov
test
add
sarb
insb
add
shl
popf
sub
inc
sbb
lock
add
inc
clc
jbe
popl
add
fnstsw
ja
shlb
js
push
jecxz
inc
xlat
fsubs
cli
xor
mov
lea
pusha
mov
add
loop
std
inc
cwtl
adc
lds
fimuls
inc
dec
mov
in
xlat
add
icebp
jnp,pt
aaa
stos
jnp
into
test
add
jb
inc
jmp
inc
es
lret
cmp
push
ja
cmpsb
repz
push
mov
call
clc
ja
rolb
into
mov
popf
add
and
lcall
add
js
ret
cmp
jns
dec
int3
and
inc
cwtl
jbe
add
xchg
jb
andb
ds
pop
int3
data16
xlat
insl
mov
add
jl
pop
mov
dec
mov
cs
jne
addb
jb
shll
aad
insb
sub
ds
inc
shll
jg
and
xorb
jl
and
mov
cmc
ret
ds
popl
adc
repnz
mov
mov
or
and
add
sbb
and
cmp
int3
add
jb
idivb
cmpb
loope
fldt
add
gs
adc
sub
flds
or
xchg
add
sahf
add
mov
mul
shrl
jo
stc
out
mov
mov
pusha
popa
pop
xchg
dec
cmp
into
add
pushf
scas
cmp
ret
popa
imul
repz
sub
aad
shlb
or
and
cmp
push
mov
arpl
stc
or
mov
sbb
add
outsb
or
stos
outsl
lods
ja
loop
or
add
and
lahf
sub
arpl
bound
pop
inc
mov
repz
mov
dec
aaa
insl
fidivrs
push
adcl
test
push
arpl
pusha
out
shl
test
pop
pop
dec
jl
arpl
fimuls
mov
adc
push
test
mov
lock
mov
push
loopne
mov
cmp
ljmp
mov
add
stos
pop
xor
adc
pop
or
rorb
add
push
push
cltd
loopne
pop
adc
rorb
jl
dec
ret
adcb
cwtl
icebp
popf
roll
enter
mov
sub
fildl
pop
orb
add
lcall
dec
clc
jl
and
mov
add
cmp
cmp
rcrb
leave
xchg
dec
movl
inc
push
and
dec
xchg
int3
pusha
lods
and
jo
add
push
std
sahf
or
adc
mov
clc
mov
cld
cld
sub
inc
frstor
lret
hlt
push
stc
inc
lods
scas
dec
add
stos
and
and
adc
call
push
pop
or
and
mov
inc
dec
les
jae
add
nop
sbb
lds
inc
sarb
push
and
sbb
movb
push
jo
xor
popa
sbb
pop
pop
fcoms
shll
xor
cs
sub
dec
int3
jo
jae
push
ja
xor
pusha
aaa
lods
xlat
or
lock
test
jae
add
and
or
es
aas
and
push
add
jg
or
sbb
pusha
scas
je
lret
int
lds
push
and
rol
icebp
mov
cli
cs
mov
jnp
ret
adc
dec
nop
add
pop
jnp
push
loope
add
sbbl
fadds
cmp
mov
popa
insl
and
andl
mov
std
fwait
sbb
rcrl
cmp
lock
add
test
pop
add
inc
fwait
adc
orb
cmp
out
gs
je
xorb
xchg
push
pusha
add
xchg
sub
inc
push
subb
sahf
xor
and
mov
or
stos
push
pushf
adc
daa
push
or
mov
push
xchg
or
dec
mov
xor
pop
repnz
xchg
push
call
add
add
addl
inc
adc
cmp
jle
or
mov
cmp
jbe
sub
pop
xchg
xchg
popa
push
sub
and
or
imul
or
sbb
icebp
xchg
dec
pusha
and
or
xchg
pusha
loopne
arpl
add
test
enter
push
xor
aam
push
insb
les
ret
sbbb
jo
xchg
add
or
movl
push
test
add
inc
mov
push
and
and
icebp
push
add
test
andl
push
sar
daa
std
dec
cmc
and
testl
inc
xor
sbb
sarb
cmp
sbb
bound
sbb
repnz
test
dec
sbb
add
fisttpll
lret
sti
dec
mov
pop
testb
xor
sarl
movsl
mov
jne
call
daa
mov
jmp
mov
loopne
gs
add
and
notb
fnstcw
xor
test
popa
and
mov
sbb
movsl
push
stc
loop
sbb
sub
and
mov
add
pusha
les
mov
xorl
fdivl
xor
cmp
mov
xchg
push
je
ror
je
pop
call
mov
adc
rclb
jbe
mov
inc
mov
sub
stos
adc
cmp
inc
dec
pushf
aas
sbb
add
or
rolb
cwtl
sub
adc
add
ljmp
inc
pop
add
mov
and
fdivs
scas
clc
sub
testl
stc
mov
and
f2xm1
sbb
add
pop
in
hlt
adc
adc
sub
jo
sbb
enter
jae
cmpb
fidivs
cli
push
es
in
add
adc
push
incb
add
iret
cmpsb
xor
adc
adc
les
jecxz
out
mov
pop
lds
jns
inc
sahf
fcomps
and
inc
pop
jae
addb
pop
or
enter
mov
sarb
jne
inc
cmp
call
mov
sbb
pop
insb
adc
or
adcb
test
cs
xchg
andl
jae,pt
add
imul
sbb
call
fidivrl
push
pop
cmp
int3
adc
sbb
rcrb
dec
out
popa
add
mov
movsb
xor
cmp
in
push
mov
xchg
outsl
inc
call
add
fbld
scas
dec
mov
icebp
movsb
or
iret
xchg
jmp
repz
jge
inc
test
pop
int
repnz
or
pop
lret
xor
loope
out
mov
add
mov
inc
jne
scas
adc
test
mov
jmp
adc
jl
ret
jge
xchg
aas
add
sub
stos
lcall
and
hlt
sbb
or
arpl
mov
sub
sub
js
xor
mov
mov
mov
lds
jne
dec
or
sahf
dec
shlb
cwtl
sub
hlt
adc
xor
mov
cwtl
jge
addr16
pop
mov
pop
sub
cmc
push
mov
das
ss
add
or
inc
std
cwtl
adc
add
xor
sbb
xchg
jno
or
add
add
jecxz
pop
or
inc
cmp
xor
xchg
addr16
sbb
mov
sahf
repz
xchg
add
cmp
adc
sub
or
xchg
push
push
sti
inc
std
gs
testl
and
icebp
mov
dec
or
loop
stos
int3
sbb
sti
pop
fs
cwtl
jmp
inc
cmp
xor
or
js
repz
lds
sub
int
and
inc
sub
aam
aam
xchg
clc
adc
pop
and
ror
mov
and
mov
outsl
pop
add
xchg
rorl
cmp
fisttpl
dec
mov
mov
outsl
xchg
loop
add
mov
in
ds
test
push
or
mov
cmp
lahf
mov
orb
pop
pop
mov
pop
rorl
pop
int3
xor
lret
sbb
mov
shlb
insb
add
add
xchg
push
mov
and
and
pop
mov
aam
xlat
add
jl
insl
movl
or
js
inc
insl
or
ret
jno
push
rcl
mov
add
neg
les
and
xchg
test
daa
adc
sub
adc
andb
stos
dec
mov
adc
push
enter
add
sub
hlt
push
push
inc
xchg
dec
adc
or
leave
nop
adc
les
loop
inc
cwtl
push
xchg
push
dec
dec
aaa
rcll
push
subb
sarb
add
cmp
loopne
pop
xchg
mov
push
fmuls
stos
mov
pop
adcl
in
mov
les
mov
stos
cli
xchg
mov
sbb
lods
add
lret
imul
pusha
mov
test
mov
push
xor
adc
add
or
fiadds
or
cmp
fdivr
je
icebp
dec
lock
mov
imul
lret
inc
add
in
fidivl
call
shlb
mov
xchg
sub
into
test
stc
adc
add
adc
pop
jne
int3
shlb
popa
xor
add
int
xchg
add
push
aad
arpl
push
cltd
cltd
call
pop
insb
movsb
push
ret
inc
adc
test
adc
pusha
sti
imul
pop
fiaddl
hlt
jne
inc
add
enter
push
lds
add
adc
adc
mov
push
cld
outsb
push
not
imul
xchg
cltd
jb
jo
jns
js
add
mov
loop
push
xchg
push
rolb
cwtl
sbb
imul
jmp
je
push
mov
roll
repz
ljmp
idivb
mov
sub
jno
test
inc
mov
sub
xchg
iret
adcb
jno
mov
adc
stos
pop
jb
int
jae
dec
mov
mov
das
push
add
inc
push
jae
dec
bnd
or
xchg
xor
dec
mul
subl
adc
xchg
popa
push
popa
xchg
dec
sub
sbbb
pop
divb
mov
mov
push
mov
test
addb
fcomps
nop
sbb
add
sub
sahf
mov
add
loop
sahf
pop
repnz
jecxz
int3
je
int
out
adc
lret
daa
mulb
fmull
adc
jl
jecxz
pop
icebp
pop
je
mov
and
bound
sub
and
cmp
addb
into
enter
les
and
xchg
les
dec
adc
inc
ficoml
std
adc
sub
call
dec
adc
xlat
add
mov
stc
push
adc
cs
repnz
je
jae
add
test
popa
mov
adc
mov
xchg
addb
in
add
cmp
mov
cli
mov
add
dec
popa
inc
sbb
add
lods
mov
test
loop
and
xor
mov
add
cli
xchg
xchg
mov
lods
movsb
loop
sub
jge
scas
pop
stos
lds
cmp
inc
xchg
pop
and
adc
jne
push
lock
push
data16
mov
dec
imul
sbb
add
xor
jae
push
shlb
push
inc
sbb
inc
andb
popa
or
lock
aaa
loopne
imul
cli
mov
data16
and
pop
lret
cltd
ret
shlb
mov
cmp
cmp
xor
pop
mov
xor
xchg
loope
lock
add
leave
repz
or
jmp
rcrb
sbb
pop
xchg
scas
xchg
adc
sbb
pop
cs
jbe
adcl
aas
sti
fs
inc
add
push
cmpsb
bound
push
push
pop
sub
adc
cmpsb
jbe
mov
xchg
mov
loopne
dec
mov
or
push
and
roll
mov
jl
movsb
ret
mov
and
pop
cli
pop
sub
mov
faddl
inc
add
add
mov
adc
test
mov
call
push
popa
cmpsb
clc
dec
push
je
xor
push
inc
pusha
lods
pop
adc
add
push
mov
and
inc
iret
ja
shl
sbb
adcb
fidivrl
repnz
sahf
adc
mov
roll
decb
push
sub
int
mov
test
xor
adc
stos
adc
push
add
dec
scas
popf
add
lret
pop
imul
std
inc
ffreep
jge
jmp
push
incl
cmpb
mov
and
or
pop
repz
adc
add
inc
inc
push
add
dec
add
sub
or
pop
mov
rcrl
add
ret
push
stc
es
mov
sahf
sub
xchg
in
adc
mov
add
call
pop
xchg
xor
jg
sbb
dec
bound
std
jl
mov
jns
sbb
and
shrl
and
mov
lods
cmp
insb
sbb
xorb
jl
lret
xchg
dec
into
xchg
and
inc
sub
push
jb
add
jl
mov
and
add
inc
and
ljmp
in
add
lretw
push
roll
push
adc
mov
dec
xor
cmpsl
mov
stc
fmull
out
and
push
mov
ret
insl
add
ret
orb
lahf
cs
xchg
in
add
je
fcmove
lods
mov
enter
mov
shrb
dec
push
lods
xor
lret
or
xor
push
sub
or
test
lock
rcr
lret
sbb
andb
add
xor
mov
mov
iret
jnp
add
xor
lcall
or
xchg
arpl
or
movsb
addb
clc
sub
in
pop
test
out
sbb
sub
shrb
mov
adc
or
in
iret
pusha
ret
push
cmc
xchg
push
or
stos
dec
xor
pop
cwtl
lahf
pop
test
and
insb
dec
sub
mov
enter
push
add
stc
dec
mov
scas
add
in
and
cmc
sub
aad
add
scas
cld
outsl
adc
loop
neg
ror
stc
enter
and
mov
pushf
pop
cmp
fildl
clc
add
mov
inc
movsl
aad
cmp
scas
cmovo
cltd
ficompl
sub
or
in
addl
cs
mov
pop
dec
stos
ret
pop
cmp
xchg
jns
movb
imul
out
push
ficoml
adc
stos
add
enter
add
jns
sbbl
jecxz,pt
jbe
or
clc
mov
sub
dec
xchg
adc
mov
shll
stc
cmp
xchg
and
pop
fldl
test
lods
jg
mov
and
aad
maskmovq
divl
inc
push
xor
cli
out
lcall
clc
loopne
or
mov
adc
insl
xchg
add
mov
repz
mov
pop
adc
je
stos
pusha
or
inc
pusha
rcrl
lods
popf
sub
test
das
rcll
adc
je
andb
cmp
xlat
lahf
dec
lret
push
addb
xchg
or
jge
xor
jle
icebp
in
call
push
mov
sbb
or
es
iret
in
shrb
js
dec
cmp
xchg
sbbl
fs
sbb
xchg
stos
mov
mov
push
movsb
test
aam
or
out
inc
mov
cwtl
sbb
add
sub
xor
data16
ja,pn
push
xrelease
jmp
int3
fiadds
ss
inc
push
hlt
lcall
adc
cwtl
cli
adc
mov
and
cmpsl
fdivs
add
sbb
out
lcall
cmpb
iret
daa
and
push
test
adc
pushf
jne
mov
call
push
jle
clc
xchg
pop
rol
cmpl
sub
pop
or
jp
xchg
push
clc
jo
mov
adcb
push
hlt
loop
out
xchg
dec
and
lret
jno
aaa
sbb
xchg
sar
jp
mov
cld
popf
jmp
inc
int3
push
mov
adc
or
fucom
add
pop
aas
mov
add
insb
jae
test
addb
mov
mov
or
or
mov
sbb
hlt
mov
jno
sbb
pop
sbb
ror
mov
jecxz
out
gs
or
push
mov
adc
or
sbb
sti
push
in
add
out
xchg
mov
pop
arpl
mov
data16
pop
add
nop
cmp
mov
push
addb
adc
aad
lcall
lock
subb
inc
imulb
add
jb
mov
cwtl
sub
cmp
xchg
mov
sub
shrb
add
push
dec
mov
add
or
or
stos
fildl
cmp
inc
xchg
pusha
xchg
leave
push
push
pushl
clc
inc
mov
jl
pop
adc
ljmp
addr16
push
pusha
add
cmp
jp
sub
ljmp
dec
aas
sbb
fcom
push
xor
push
pusha
inc
pop
add
stos
cltd
push
repnz
adc
adc
add
outsb
fnsave
mov
into
jno
pop
sub
adc
pop
xor
mov
ss
movsb
mov
movsl
add
jns
out
add
loopne
inc
push
lds
sub
lahf
lock
add
mov
inc
add
test
popf
fnstenv
push
sbb
mov
test
sub
jmp
adc
je
clc
je
jne
and
pushf
dec
mov
fwait
add
jo
mov
adc
insl
add
dec
into
mov
test
mov
sbb
xor
add
dec
out
add
push
pop
xor
sbbl
cmp
xchg
jno
adc
or
xchg
mov
cld
xor
cmp
cmpsb
add
aas
adc
popa
dec
jb
and
cmp
cltd
jecxz
jge
inc
and
add
mov
dec
push
push
fwait
sbb
lcall
rcll
lock
movsl
addb
sbb
xor
xor
rolb
and
jae
xchg
dec
xchg
bnd
mov
sub
push
jo
ljmp
sbb
push
leave
jno
jb
cmp
testl
mov
dec
mov
repz
je
pushf
xor
add
shrl
push
add
pop
inc
fidivrl
sbb
push
test
fiadds
dec
and
push
cmp
add
mulb
sbb
aaa
add
jp
fadds
pop
add
int
add
lret
stos
mov
push
lds
add
cmp
push
pop
cmp
jae
bound
push
dec
aaa
adc
cmp
cmp
jmp
les
lahf
sbbb
xor
out
call
xor
out
add
sbb
add
stc
in
ret
add
jg
dec
push
idivl
stos
rclb
leave
inc
sub
pop
add
test
aam
sbb
push
cmp
cltd
insb
add
lds
add
mov
push
clc
fsubrl
jge
push
sbb
mov
add
xchg
mov
jb
push
jp
xor
xchg
xor
push
inc
and
add
or
push
add
mov
inc
fs
mov
and
adc
xor
push
add
cs
inc
dec
and
add
mov
and
xchg
pusha
js
and
xchg
and
adc
aaa
jl
inc
cltd
sbb
and
mov
ret
icebp
add
push
lds
out
loope
add
and
xor
cli
push
fstl
jo
aas
jns
jp
jns
add
sub
mov
enter
mov
xchg
inc
add
mov
sbb
mov
iret
aas
dec
stc
lret
nop
jmp
or
pop
or
insb
sbbb
lods
movb
ficoml
stc
ficomps
dec
jmp
sbb
mov
inc
adc
or
in
and
shll
pop
ficoml
or
mov
push
add
das
iret
mov
imul
sbb
cli
inc
lods
mov
movsb
and
inc
js
ds
sub
jge
les
add
add
fcomps
mov
cwtl
push
aas
jne
inc
jbe
arpl
mov
inc
add
mul
or
add
frstor
gs
mov
fsubr
icebp
lahf
rcr
lahf
add
mov
pop
xor
sahf
mov
mov
pusha
adc
fiadds
pop
push
aas
add
xchg
out
repnz
dec
jnp
add
testb
cmp
jg
test
addr16
movsl
movb
jl
or
xor
imull
mov
mov
je
js
inc
push
add
js
in
fcoml
enter
lret
dec
push
inc
jge
xchg
cld
add
out
jbe
mov
stos
add
or
and
sbb
sbb
xlat
mov
pop
arpl
cmp
mov
in
add
cmpsl
mov
adc
movsl
ds
sahf
test
shlb
jb
jno
pop
clc
js
add
pop
je
arpl
repnz
inc
mov
xlat
cmpl
xchg
push
adcb
cmp
repnz
dec
push
sbb
sbb
add
in
xor
xor
lock
cmp
nop
jmp
and
xor
cmp
mov
aaa
cld
push
jno
pop
out
fiadds
adc
push
mov
sub
insb
hlt
je
inc
add
es
insb
add
popf
bound
inc
jns
mov
or
xor
jae
jno
dec
xor
sbb
jp
popa
sbb
add
cli
mov
adc
dec
cmp
cld
cmp
call
or
pop
and
adc
jae
fldt
rol
mov
mov
mov
in
and
jae
add
mov
cld
dec
push
pop
rcrb
jp
inc
sbb
cmpsl
in
cmpsb
ret
mov
or
daa
test
loopne
cs
mov
sub
jo
cmp
inc
or
enter
sahf
setnp
pusha
jle
inc
xchg
mov
sbbl
das
and
xchg
dec
dec
or
or
call
add
insb
in
sub
push
std
clc
ffreep
push
loope
fdivs
rcrl
scas
gs
pop
es
mov
xchg
jno
movsb
insb
inc
dec
aaa
add
lock
or
jge
enter
dec
clc
xchg
inc
mov
sbb
js
daa
add
cli
movsb
jle
into
repnz
adc
scas
clc
jl
flds
add
lea
dec
xchg
cwtl
es
rclb
push
out
cmp
into
inc
aaa
movsl
push
fs
mov
cmp
push
shll
pop
inc
roll
stc
not
jg
int3
enter
mov
into
sti
mov
sbbl
add
or
and
jns
xchg
sub
adc
mov
in
les
add
push
inc
xor
fwait
push
jno
inc
xchg
out
mov
stc
aas
call
jle
inc
adc
xchg
movsb
xchg
add
jg
fstps
mov
add
lock
jg
sbb
sbb
dec
stc
fsubrl
rol
add
mov
rclb
ds
les
nop
and
sbb
cltd
or
push
and
sti
invd
push
inc
mov
jmp
push
xor
dec
mov
or
fildll
inc
nop
add
inc
in
jno
cwtl
aad
jbe
pop
push
insb
mov
sti
mov
mov
add
ss
stc
test
test
dec
xchg
lods
aaa
hlt
dec
scas
push
cmp
lods
testl
mov
out
rorb
movsb
xadd
jo
xchg
sbb
mov
mov
ret
cmpsl
push
addl
leave
jp
sbb
insb
lods
ret
test
iret
rorb
adc
sbb
sti
push
push
aas
out
repz
push
xchg
incl
clc
xchg
and
imul
mov
jne
sbb
mov
ja
mov
cli
orb
sbb
mov
cltd
jmp
and
fldl
ss
add
xchg
pop
inc
dec
call
cmp
add
lcall
testl
mov
and
insl
notl
inc
or
mov
fwait
icebp
std
cmc
or
sarb
add
mov
jge
lahf
das
inc
lods
imul
sbb
ss
add
les
mov
testb
imul
push
or
sub
test
cmp
mov
or
sbb
add
mov
movl
dec
js
ljmp
aas
insb
inc
mov
add
pop
add
lret
out
aad
inc
lock
sbb
outsb
sbb
pop
dec
nop
loopne
iret
and
std
dec
mov
aas
lret
pop
add
sbb
nop
mov
push
or
mov
xor
jnp
subl
inc
test
les
dec
rorb
add
mov
gs
adc
mov
push
push
test
xor
leave
mov
andl
idivb
mov
jno
sbb
jns
test
mov
mov
cmpb
leave
and
inc
rclb
mov
mov
cmpsb
roll
dec
jp
adc
xor
push
add
fdecstp
mov
lret
repz
push
sub
jo
mov
and
ja
add
sbb
mov
inc
cmpsb
adcl
add
lcall
sub
imul
sub
out
loop
das
xor
jne
mov
cli
add
mov
mov
jecxz
call
ja
adc
orb
pusha
sbb
pop
and
jae
outsb
or
pop
and
in
js
inc
mov
lret
pop
xchg
fs
insb
or
and
mov
lahf
hlt
test
aaa
fistpl
xchg
xor
pop
dec
push
push
sbb
arpl
subb
pop
rcrl
jno
or
fsubs
lods
add
test
sub
xor
cmp
lret
inc
sbb
add
push
imul
lock
out
sbb
mov
add
cmc
and
xchg
out
test
sbb
shlb
in
and
out
arpl
jle
jg
sbb
add
cltd
or
roll
ficompl
bound
ret
dec
add
fdiv
mov
and
test
testl
notb
rcrb
testl
test
cld
cmc
out
mov
in
sbb
xor
mov
jecxz
enter
lock
xchg
imul
sbb
mov
xor
in
xor
pop
or
ret
fldenv
mov
clc
rcrb
add
lahf
es
rclb
push
clc
rcll
scas
out
inc
add
ror
mov
ljmp
inc
test
add
mov
ljmp
into
mov
pop
test
shll
add
imul
add
mov
xchg
dec
or
or
cmp
pusha
repnz
and
add
and
or
sbb
jmp
leave
in
test
sbb
sbb
push
mov
or
and
mov
push
cltd
inc
adc
shr
jmp
add
pop
mov
nop
mov
std
sbb
ss
movsb
out
sti
mov
out
mov
adc
adc
ret
mov
sarl
lds
jge
add
imul
scas
jmp
mov
cli
inc
dec
ud2
add
or
add
stos
inc
mov
jge
adcl
lret
sub
mov
enter
cli
add
roll
addr16
ljmp
in
cmp
fwait
bound
and
inc
jge
sbb
sbb
add
dec
xchg
cltd
or
jbe
sti
sub
inc
push
jo
mov
dec
hlt
pusha
subb
cmp
mov
sub
out
adcb
pusha
sbb
mov
leave
cmp
mov
cmpsb
pop
test
xlat
loope
add
and
sbb
test
push
and
xchg
and
nop
stos
push
inc
jl
shrb
std
loope
ror
adc
push
mov
rorl
dec
lock
sub
test
pusha
icebp
and
and
and
cs
and
pop
insb
pop
add
sbb
xorb
in
mov
mov
fisttps
out
or
jmp
in
lret
and
int
add
mov
or
and
fwait
xchg
or
cltd
fnstsw
das
sub
fs
pop
test
fistpll
xor
push
test
sarl
shld
movsl
sub
test
cwtl
roll
pop
repnz
dec
in
mov
sbb
dec
repz
sbb
dec
mov
in
arpl
rcrb
repnz
pusha
call
ret
inc
popa
and
mov
iret
daa
jmp
dec
jl
ret
cld
push
and
xor
xor
xor
xor
dec
clc
fwait
xor
dec
cli
push
add
pop
rorl
fistl
cmp
lahf
jo
or
nop
add
in
cwtl
ss
cmpb
outsb
push
aaa
dec
stc
leave
adc
int3
jge
and
fildl
adc
add
das
mov
cmpsl
push
add
sub
inc
xor
rolb
lock
cwtl
negl
into
call
aas
lcall
in
pusha
pop
and
jle
pop
les
adc
es
sbb
or
cld
add
outsb
mov
mov
sub
cmc
cwtl
adc
pop
push
inc
idivb
or
push
mov
pushf
sub
outsl
aaa
pusha
cmpsl
mov
add
push
mov
fdivs
aas
scas
scas
or
push
in
in
add
movsl
or
mov
mov
push
xchg
ffree
add
jmp
mov
aaa
fs
xor
ds
insl
ja
add
vshufps
nop
shlb
out
sbb
fmul
pop
add
test
pusha
add
iret
xor
mov
bound
jae
sub
push
test
and
pushf
in
pusha
inc
insl
adc
xor
ret
add
adc
xor
add
xchg
pusha
and
lret
js
mov
pop
add
lods
cmp
ljmp
dec
lods
pusha
nop
and
in
or
adc
jl
lcall
sbb
shll
aas
roll
add
leave
stc
add
mov
out
mov
sbbb
dec
sbb
inc
lahf
sbb
pusha
sbb
jbe
jo
arpl
sbb
jne
mov
rcrl
and
lret
pop
gs
pushf
sub
xor
notl
clc
rorb
into
dec
pop
mov
sub
adc
sub
dec
inc
pop
and
adc
xchg
ss
aaa
sub
inc
call
pushf
mov
imul
mov
test
sub
adc
ret
pusha
and
jo
inc
in
mov
fsubs
sbbb
ds
je
inc
pop
and
pushf
or
xchg
add
cld
roll
les
test
xchg
fs
mov
push
mov
mov
pusha
rorb
roll
mov
mov
daa
jnp
xchg
xor
scas
xchg
clc
and
add
pop
mov
sti
aad
add
call
loop
mov
add
hlt
push
shlb
add
add
je
xchg
stos
in
loop
pop
popa
or
lods
mov
and
push
dec
or
add
fs
ljmp
dec
add
jbe
push
inc
test
pushf
adc
adc
int3
ret
leave
mov
add
pop
sub
pop
in
push
jge
push
dec
sti
movsb
sub
sub
jl
add
movsl
ds
lahf
or
fsubr
lods
mov
mov
push
clc
nop
adc
loop
inc
and
rol
sbb
xor
les
cmp
cmp
sub
ret
mov
or
sub
and
sahf
sbb
mov
cmpb
movsb
test
daa
pop
pusha
adc
jmp
jge
int
shl
pusha
fidivrs
sub
iret
sahf
xor
mov
in
aam
lahf
add
jmp
mov
into
jnp
jae
and
sbb
push
add
stos
mov
sbb
sbb
mov
add
cmc
movsl
into
addl
mov
faddp
lods
shrb
add
data16
mov
or
gs
mov
mov
lret
in
jns
adc
add
and
push
add
icebp
adc
sbbl
add
pop
movsl
jno
outsb
test
jp
bndstx
xchg
mov
push
arpl
xchg
loopne
nop
hlt
mov
adc
xor
and
cmp
cld
lods
test
adcb
inc
mov
jge
mov
or
xor
pop
sbb
enter
gs
les
pusha
xor
ret
mov
mov
adc
jecxz
add
mov
sbb
cmp
dec
clc
inc
sub
and
add
movsb
cmpb
ss
pop
xchg
xor
dec
sub
lods
rclb
loopne
add
mov
cltd
mov
cmpsl
xrelease
in
shlb
dec
test
rolb
test
push
sahf
dec
mull
cli
mov
adc
adcl
add
push
jae
icebp
mov
cmp
lahf
enter
cmc
adc
adc
rclb
hlt
out
add
lock
int3
mov
xchg
in
mov
add
lret
push
aas
push
rorb
in
ljmp
xchg
add
repz
add
dec
jecxz
mov
outsl
add
jmp
dec
add
leave
inc
or
add
adc
movsb
fidivrl
and
lock
lds
add
jo
js
mov
cld
rcll
add
sahf
push
in
movsl
addb
cwtl
adc
ss
xchg
pusha
jmp
jl
cmpsb
sbb
popa
add
sub
xor
push
xchg
mov
add
iret
subb
ret
scas
pop
adc
dec
mov
scas
mov
mull
xlat
xor
jge
lods
cmpb
mov
push
mov
push
jl
data16
mov
addr16
loopne
sbb
add
lods
jno
call
cmc
inc
adc
add
or
orb
pop
inc
dec
repz
sub
dec
test
add
jbe
test
mov
cmp
mov
push
subb
or
js
outsb
sahf
pop
shlb
ljmp
adc
dec
add
scas
rcrb
roll
mov
and
pusha
int
or
addr16
jle
cmp
add
inc
notl
iret
xchg
nop
rorb
or
lds
in
pusha
cwtl
xor
add
ret
rcl
pop
test
call
shrl
xor
js
gs
sub
mov
mov
loopne
sub
mov
int
jg
stos
mov
or
adc
xchg
stos
push
cmp
rcr
lock
mov
cltd
sub
and
mov
pop
sar
lock
add
cmp
add
fldenv
or
vpshufd
dec
and
push
jg
xor
mov
xchg
cmp
pop
das
icebp
push
push
adc
mov
cltd
sub
xor
mov
and
cmp
lahf
aam
mov
lds
test
out
loopne
adc
pusha
adc
cmp
movsl
inc
sti
hlt
lds
out
les
into
xchg
sbb
sub
mov
mov
cmp
and
xchg
jb
add
lret
inc
adc
cmp
push
jl
add
mov
pushf
repnz
xor
mov
mov
loopne
adc
add
xchg
lret
ds
hlt
inc
je
aad
sbb
cs
and
cmp
adc
jmp
inc
push
ret
cltd
stc
sub
mov
pop
add
add
cmp
js
cmp
imul
loopne
inc
mov
pusha
outsl
mov
mov
ret
adcl
mov
add
and
out
aas
inc
enter
add
rcrl
ret
push
and
sti
je
cmp
inc
in
jno
and
sbb
addl
push
scas
add
sbb
scas
add
aaa
lcall
add
add
into
mov
inc
xchg
fnstenv
stos
cmp
or
movsl
xor
test
adc
mov
loopne
pushf
nop
dec
inc
mov
hlt
mov
push
sub
shrb
fisubrl
and
sbb
xor
les
scas
and
scas
dec
adc
divl
xor
dec
fs
sbb
and
jne
or
mov
nop
inc
cwtl
in
pop
add
mov
jecxz
or
subl
movsl
pushf
add
test
xor
pop
cmc
add
cmpsl
or
cmp
mov
sbbl
mov
call
dec
addr16
andb
popa
add
sbb
and
mov
pop
aaa
mov
insl
sub
out
ret
bndstx
inc
adc
adc
daa
inc
mov
cmpb
adc
sti
mov
jb
in
mov
sahf
mov
sti
adc
hlt
pop
xor
rorb
addl
jecxz
and
lods
xor
push
inc
in
mov
push
xor
nop
sbb
fcmovnu
pop
push
rolb
push
mov
shlb
leave
cli
jmp
push
jno
mov
push
outsl
dec
cmp
rcrb
add
push
stos
in
and
mov
fwait
iret
insb
or
cmpb
add
mov
jb
jnp
pop
ficoms
and
movsb
sub
and
addl
xlat
lret
add
mov
rcrb
repnz
or
inc
cmpsl
add
mov
movsb
movsb
test
and
aas
pop
jo
loopne
test
cwtl
stc
sub
sbb
or
sbb
add
in
lret
adc
adc
xor
stc
inc
mov
rcrb
imul
add
add
sub
imul
addr16
lcall
fiadds
mov
call
fs
sub
push
mov
push
insl
jge
dec
xchg
cmp
icebp
iret
jmp
jns
sbb
adc
mov
add
sub
mov
jp
mov
xlat
push
inc
or
out
add
stc
mov
test
daa
push
ret
scas
arpl
pop
je
inc
mov
and
sub
pop
incl
andl
add
mov
lds
xor
cmp
jl
shlb
dec
or
test
mov
inc
mov
ffreep
in
mov
add
pusha
rorb
cmp
mov
scas
pushf
pop
dec
xchg
in
mov
dec
sbb
mov
ds
adc
ss
cwtl
sbbb
int3
inc
hlt
movswl
fbld
push
sub
xor
test
or
sahf
cs
out
jo
pop
adc
mov
mov
hlt
jmp
scas
push
out
dec
mov
mov
addb
mov
add
jecxz
or
pop
pop
push
mov
pop
lods
adc
hlt
pusha
jp
add
mov
cs
push
inc
mov
lcall
movsl
aaa
or
loope
push
push
jno
adc
mov
push
xchg
add
mov
mov
and
jle
pop
je
icebp
mov
in
sub
xor
imulb
mov
mov
lock
pop
add
xor
or
sub
mov
or
and
inc
lea
and
adc
movsb
xor
xchg
add
sub
sbb
mov
adc
mov
dec
rorl
mov
mov
adc
sbb
int
test
pop
mov
xchg
mov
add
pop
push
mov
cmp
mov
or
shll
xor
arpl
fs
mov
push
jl
xorl
mov
shr
mov
jns
loop
or
jb
or
pop
mov
adc
xchg
sub
inc
outsb
mov
or
lods
test
cmp
sbb
mov
mov
xchg
inc
or
aaa
mov
push
bswap
sbb
test
mov
xor
pop
mov
pop
pop
jns
add
adc
pop
sbb
dec
xchg
nop
aam
mov
imul
lds
pop
mov
push
in
xor
repz
shr
xor
test
sub
cmpsl
sbb
add
inc
lods
enter
add
lcall
test
cmp
jge
ret
add
ja
add
pop
mov
sbb
loopne
std
hlt
adc
stc
inc
push
or
and
push
shlb
and
in
stos
bound
fwait
mov
dec
pushf
dec
jecxz
stos
je
repnz
adcb
adc
addb
dec
and
mov
popa
sbb
insb
push
lods
cld
call
inc
and
jge
sub
push
push
outsb
or
jo
roll
mov
shlb
cmp
sbb
jno
mov
pusha
clc
mov
dec
lock
mov
clc
scas
inc
iret
push
nop
fs
orl
pop
inc
fmull
fwait
jb
loopne
cmc
jae
lahf
test
sub
sbb
inc
scas
add
and
cli
pop
call
sbb
xor
ret
out
or
loop,pn
sbb
aaa
push
shlb
mov
or
cwtl
rorb
mov
flds
mov
inc
arpl
xchg
adc
xchg
and
dec
and
ret
push
inc
pop
xor
pop
and
leave
mov
add
fistps
cmp
and
rclb
fsubr
adc
add
nop
adc
jo
idivb
xor
xchg
sbb
add
inc
sub
jmp
and
mov
test
jle
jo
lock
call
clc
mov
sbb
sbbb
pop
and
sahf
fistl
test
dec
ror
or
fsub
test
sub
insl
pop
xchg
or
test
inc
jl
cmpsl
popa
ret
lcall
inc
leave
sbb
lds
scas
ja
clc
add
mov
inc
mov
lret
sbb
dec
add
sbb
dec
mov
les
mov
xchg
into
sbb
mov
icebp
mov
adc
and
pusha
push
cltd
mov
pop
push
daa
mov
jl
mov
jnp
rolb
push
cltd
jecxz
test
mov
pop
fs
rcll
sbb
add
and
and
push
scas
rcll
inc
loope
lahf
out
mov
push
ds
add
cmpsl
jmp
jns
sbb
add
push
push
mov
push
add
adcl
or
mov
pop
xchg
add
push
insl
data16
xchg
icebp
addb
add
jmp
out
lock
push
and
mov
sarl
pop
iret
xor
or
nop
sbb
mov
xor
or
inc
insb
fldenv
add
push
xchg
mov
enter
es
adc
add
mov
cmp
mov
mov
adc
or
iret
jmp
jg
cmp
dec
jle
mov
daa
sub
inc
adc
push
mov
icebp
in
xchg
movb
sti
xor
mov
xchg
mov
movsb
push
add
cli
sub
jecxz,pn
popa
push
lock
mul
xor
sbb
push
jb
adc
enter
pushf
iret
lahf
xchg
enter
ds
or
fwait
or
test
cli
sbb
and
pop
fs
mov
sahf
xor
add
mov
movsb
add
cmp
sbb
dec
mov
sbb
add
test
xchg
push
les
inc
add
ja
mov
cmp
rolb
push
sbb
lahf
cltd
hlt
call
test
sub
lods
add
dec
pop
or
in
jecxz
jae
fisttpl
push
inc
in
fcoml
push
or
test
sbb
mov
mov
icebp
ljmp
cmp
mov
mov
sbb
jo
cltd
xchg
nop
aam
lahf
inc
popf
mov
adc
clc
sub
mov
push
push
sub
and
mov
loop
inc
lret
std
and
movsb
add
rcrb
add
lea
lcall
gs
jne
sbb
roll
sub
sarb
das
icebp
mov
add
inc
mov
jle
adc
and
push
sets
popa
add
jp
push
sbb
sbb
mov
in
pusha
pop
sub
mov
sti
mov
inc
or
cwtl
es
js
into
xchg
xchg
sub
push
loopne
cmp
mov
add
pushl
adc
punpcklbw
mov
inc
pop
mov
dec
mov
add
sub
lahf
outsl
add
inc
popa
pop
std
or
movsl
dec
push
xor
ret
xor
dec
call
test
xor
inc
xchg
orb
or
jbe
out
xchg
or
shl
dec
in
in
arpl
cld
push
or
bound
mov
lods
add
jge
stos
jnp
add
mov
mov
movsl
es
outsb
addb
add
rcll
popa
add
test
cli
pusha
leave
xchg
into
jnp
mov
sbb
sbb
sahf
cltd
sbb
xchg
das
clc
and
jo
popf
jb
pusha
movsb
jo
fwait
lahf
pushf
dec
es
dec
outsb
mov
fsts
and
mov
dec
iret
mov
mov
ret
inc
les
or
pop
adc
shll
sahf
add
sti
xorb
add
lods
jmp
cwtl
mov
inc
add
imul
sub
dec
jmp
pushf
orl
popf
inc
sbb
or
lock
sbb
add
mov
push
cltd
sbb
pop
dec
adcl
mov
mov
sti
inc
xchg
in
cmpsb
sbb
jae
cmpsl
cmpsl
xor
icebp
adc
cmp
dec
pop
loope
call
lock
iret
cmpsb
xor
or
add
pop
or
add
je
pusha
aam
les
std
fldenv
sub
and
nop
jl
lahf
loop
add
mov
or
or
push
push
loopne
jno
or
outsb
cmp
hlt
aaa
and
lret
sbb
call
mov
add
cld
aaa
call
xchg
fdiv
add
dec
aaa
and
dec
pop
inc
aaa
add
addr16
sbb
je
add
imull
nop
or
xor
in
pop
fs
hlt
push
add
mov
mov
imul
out
xchg
sbb
dec
jo
and
pop
int
in
push
fidivrl
xor
aad
xchg
mov
push
pusha
pop
inc
movsb
or
inc
in
xor
mov
jle
outsl
icebp
pop
adc
dec
and
mov
mov
pop
or
push
push
cmc
pop
inc
in
popf
xor
mov
cmp
outsl
dec
mov
hlt
mov
movsl
or
rcrb
mov
adc
adc
or
faddl
cltd
mov
lods
push
js
adc
cmp
dec
cmp
add
push
cmpsb
add
xchg
sub
das
out
dec
add
adc
ljmp
cwtl
jle
in
mov
sbb
movsl
pop
adc
enter
hlt
mov
add
jg
mov
jns
daa
xlat
cmp
in
xor
cltd
add
and
xchg
mov
pusha
jae
les
xorl
mov
faddl
or
scas
add
aas
mov
pop
inc
ret
jnp
sahf
aam
mov
roll
pop
out
adc
mov
xor
add
insb
daa
popa
push
repz
xchg
mov
xor
pop
cmp
decl
mov
hlt
pusha
add
scas
cmp
mulb
es
enter
arpl
test
mov
aas
imul
test
icebp
xor
xchg
and
test
roll
cmp
cwtl
shll
sbb
sbb
pop
dec
mov
or
test
push
mov
movb
cmp
add
cmp
mov
or
xchg
or
add
je
push
popa
das
repz
pop
xchg
mov
lret
push
roll
mov
cmp
hlt
cmp
add
ret
add
call
pusha
push
rorb
cmp
xor
mov
pop
xchg
movsb
and
scas
pusha
test
pop
add
push
pop
lahf
add
add
pop
jmp
imul
inc
xchg
inc
fcom
xchg
ja
add
lds
adc
rclb
test
int
mov
popf
xchg
and
push
out
xor
add
mov
pop
jno
add
push
inc
xchg
mov
out
sbb
fadds
imul
out
in
mov
loop
cwtl
dec
popf
sahf
sbb
jns
mov
add
incb
adc
in
pavgb
sub
cmp
mov
add
cwtl
mov
rorb
cmp
mov
imul
sahf
loop
pop
fisubl
adc
outsl
xor
mov
fcoms
dec
add
cmp
je
mov
dec
mov
mov
shrl
or
cwtl
ljmp
mov
aas
add
enter
adc
mov
adc
add
mov
cmpsl
rclb
cli
xchg
fxch
add
xor
out
mov
outsb
add
cmp
mov
test
sbb
pop
xchg
insb
or
fwait
jmp
std
dec
in
lock
push
pushf
adc
orb
add
test
mov
mov
push
or
pop
fldcw
in
mov
dec
fcoms
jns
dec
inc
add
cmp
cmp
or
les
mov
es
loop
shrb
and
loopne
rcrb
xchg
and
xchg
add
js
mov
adc
xor
inc
dec
xlat
in
ds
ja
or
jo
xchg
mov
xchg
insb
pop
or
pusha
cli
mov
or
test
sub
pop
add
pop
sbb
mov
inc
mov
test
cmp
pop
jecxz
mov
rcrl
fdivrp
insb
add
movb
cmp
mov
jno
loop
add
xor
rorl
adc
pcmpgtd
push
cli
xchg
addl
sub
add
and
mov
add
pop
inc
leave
pop
in
andb
xchg
cmp
mov
and
xor
ljmp
dec
pusha
jno
ds
dec
pop
fildll
lret
xchg
es
add
enter
and
xchg
xor
in
add
inc
aam
mov
pusha
xlat
incb
and
adc
adc
fistps
xchg
add
orb
adc
adc
outsl
and
lret
ljmp
pop
inc
sub
add
sub
andb
int3
les
cld
ds
enter
xlat
mov
xor
ret
xor
dec
or
rcrb
cmpsb
push
adc
pop
push
inc
pop
jnp
mov
and
pushf
ja
mov
sub
xchg
ja
sub
add
add
mov
lea
rorl
popf
ror
sub
dec
in
hlt
inc
add
je
add
sub
js
mov
sbb
mov
decl
dec
and
mov
cld
xchg
fsubl
nop
cwtl
sub
test
add
jo
mov
ja
inc
loopne
push
test
aad
dec
out
mov
mov
xor
inc
lea
test
push
les
sub
ret
push
lea
pop
add
mov
xor
mov
mov
mov
inc
popa
mov
cli
xchg
les
mov
ja
pop
xchg
bound
pop
pop
push
sub
ret
adcb
lret
jge
mov
jp
and
mov
aas
adc
loopne
pop
addb
mov
jmp
call
std
pop
sub
inc
mov
popa
outsb
inc
daa
popf
cmp
aas
add
fprem
mov
and
test
pop
divb
inc
dec
add
mov
push
ljmp
std
stc
xlat
push
ror
sbb
out
xchg
ja
pop
popf
arpl
sahf
mov
dec
dec
insb
add
scas
push
xchg
and
cmpxchg
cmp
inc
add
movb
lods
add
mov
daa
loopne
dec
orb
add
aas
xor
ja
add
insb
fimuls
sbb
and
xchg
test
add
or
and
hlt
and
decl
or
pop
cmp
mov
jl
iret
nop
mov
lret
push
ja
cmp
add
xchg
add
add
jl
ss
fwait
push
xchg
push
dec
js
mov
cmp
xchg
sbb
adc
rclb
push
cmp
add
pop
andl
jae
movsb
and
orl
loopne
test
andl
fisubl
enter
add
cltd
and
and
pop
daa
inc
ret
add
stc
jno
pop
cli
adc
xor
push
shr
mov
mov
daa
adc
pop
jl
xchg
aaa
nop
cwtl
jl
jmp
cmp
mov
call
popf
or
into
pop
cwtl
loopne
push
pop
xor
cs
and
test
cmp
xor
movsl
rclb
addl
and
aam
mov
inc
lds
adc
in
and
lock
leave
insb
jp
pop
js,pn
clc
je
push
push
dec
mov
loope
int3
jbe
push
call
fcoml
mov
inc
movl
std
or
push
cmp
repz
leave
dec
or
push
add
xor
dec
outsb
and
dec
sub
stos
shlb
mov
aaa
pop
inc
ljmp
inc
dec
hlt
xchg
lods
mov
dec
xchg
mov
aaa
mov
incl
lock
push
add
adc
clc
repz
push
lret
testb
mov
addb
mov
cmp
mov
inc
push
insb
push
sbb
sub
out
xor
dec
in
scas
filds
push
loopne
pslld
pslld
add
sub
pop
and
int
mov
lock
push
pop
or
add
mov
mov
add
pop
ret
xchg
cli
sub
in
pushf
push
push
lock
jp
sbb
movsb
xor
dec
xor
into
adc
stc
adc
lcall
adc
lods
cmp
push
mov
sbb
pop
inc
add
xchg
lcall
popa
push
imul
in
scas
cld
inc
rcrl
mov
and
mov
add
std
mov
jp
inc
xchg
jl
add
shr
stc
add
out
pop
xorl
stc
cmp
sarl
arpl
sar
add
jne
sbb
push
add
mov
pushf
push
cmpb
jg
std
dec
add
push
cmpsb
int
mov
mov
cmp
pop
ror
jmp
or
clc
add
mov
loope
xor
das
dec
jg
and
ljmp
xor
add
jno
jb
add
xchg
les
sarl
jnp
dec
pop
add
jno
iret
add
jns
mov
mov
adc
push
xor
adc
repnz
xor
sti
test
pusha
push
xchg
add
test
xorb
and
push
enter
add
stc
enter
sub
out
push
or
nop
inc
add
add
addb
dec
stos
in
sbb
mov
mov
addl
xor
sub
mov
in
jae
inc
dec
add
adc
jo
add
nop
mov
xor
adc
and
dec
add
push
mov
std
sbb
lea
fnstcw
ficoms
leave
in
popa
sbb
xchg
or
inc
mov
push
add
es
mov
and
out
iret
test
insb
pop
divl
fdivrs
xchg
jb
insb
push
sarb
ja
xor
fdivrs
push
mov
sub
lods
adc
call
push
mov
xor
out
jne
xor
xor
pop
add
xor
shl
loope
rorb
mov
int
inc
cs
add
adc
push
fiaddl
and
jno
adc
push
jbe
out
jp
add
in
dec
movl
cs
sbb
std
stos
adc
mov
scas
xor
test
or
aad
mov
add
add
and
and
add
pop
add
out
fcomps
add
pop
jg
fstpl
clc
or
in
jmp
cld
outsb
jno
jne
add
iret
lcall
in
sbb
push
in
cs
arpl
call
ret
scas
jp
repz
xor
jmp
add
jle
push
mov
movsb
xchg
pop
shl
rcl
add
jmp
lahf
pop
je
cwtl
inc
fdiv
push
cmp
adc
fisubrs
out
mov
inc
add
xchg
cwtl
push
sub
mov
xchg
idivl
push
xchg
mov
aaa
jae
add
sub
movb
or
dec
xor
add
aaa
enter
xchg
aas
sub
add
mov
jb
pop
push
mov
repnz
out
lret
add
or
xor
call
dec
sbb
pop
lret
fs
mov
loop
xchg
push
cs
inc
mov
imul
cmp
and
xchg
sub
mov
mov
push
sub
sub
xor
jae
cltd
push
and
outsb
xchg
add
cmp
mov
mov
cmovno
or
addl
inc
push
sub
pop
aaa
enter
xlat
mov
jne
sarb
cmp
jmp
cmpsl
cmpsb
filds
sbb
adc
and
sarl
sbb
testb
mov
add
addb
xchg
add
jge
sub
push
movsl
add
addl
icebp
js
mov
fidivl
insb
and
mov
lock
out
xor
xor
lods
in
adc
adc
fdivrs
sub
add
movb
adc
mov
cmp
or
loopne
int
jmp
out
mov
and
add
inc
pop
xchg
rolb
jno
lods
mov
iret
imul
shlb
xlat
test
adc
enter
jbe
pop
shrl
pushf
and
inc
js
ret
push
dec
inc
xor
dec
add
pusha
dec
std
sbb
fisttpll
xchg
popa
mov
repnz
xchg
pop
add
fs
add
adc
lret
jo
dec
sar
lcall
jne
dec
mov
dec
xchg
push
orl
loop
or
cld
mov
hlt
xchg
cmp
adc
or
fwait
ret
jbe
push
imul
inc
dec
bswap
dec
shlb
pop
enter
adc
mov
jnp
jl
inc
pusha
jno
xor
push
js
push
sub
dec
and
mov
pop
inc
or
pop
push
add
push
sti
int3
repnz
jae
test
xchg
xor
sbb
cs
hlt
adc
mov
je
aam
out
sbb
mov
cltd
lahf
cmp
pop
xor
pop
shrl
xchg
insl
inc
adc
add
ds
insl
rcrb
adc
testl
push
fsubrs
pusha
mov
jno
pusha
es
fstl
gs
call
pop
int
adc
mov
mov
shrb
or
add
rclb
lock
leave
xlat
lcall
ds
pop
sbb
leave
push
inc
mov
js
inc
in
push
sub
cmp
mov
mov
jg
adc
notb
xchg
les
les
dec
lret
aam
jbe
aam
dec
fiaddl
scas
rcr
sahf
pushf
or
or
ds
jge
pop
cli
pop
test
in
icebp
add
sbb
or
or
loopne
mov
add
cmp
xchg
inc
mov
rclb
mov
cli
pop
movsb
add
mov
add
push
out
ficomps
repz
xchg
jl
nop
jl
jne
loope
call
sub
jo
xor
shrl
adc
test
in
inc
mov
jno
add
imul
inc
cmp
int3
shr
mov
test
or
ljmp
jb
inc
or
mov
insb
movsb
mov
iret
jo
addr16
adc
stos
shr
pop
xor
mov
and
lret
aas
call
mov
cmpsl
dec
nop
fs
fisubrl
adc
addr16
cmp
inc
sbb
mov
js
inc
pop
dec
call
inc
movsb
pusha
gs
pop
pop
mov
mov
ja
shr
das
push
add
rorb
cmc
pop
inc
add
cmp
pop
jmp
jecxz
pop
das
pusha
and
pop
jo
shlb
pop
push
add
and
xor
popf
je
mov
inc
rclb
push
lcall
mov
das
mov
ret
inc
in
push
mov
cli
dec
addl
dec
aaa
es
mov
jo
mov
add
or
aaa
sub
mov
xchg
pop
add
jl
add
inc
inc
pusha
shlb
cwtl
mov
dec
xchg
mov
data16
test
loopne
jl
xchg
mov
out
lahf
mov
ds
and
adc
add
jnp
jae
fisubs
cmp
xchg
cmpsb
dec
movsl
addb
sbb
jge
rolb
xor
pop
jl,pn
fadds
xchg
fs
pop
subb
pop
jmp
lahf
pop
xchg
test
inc
lret
push
sbb
cmp
in
pusha
dec
push
stc
add
movsl
jmp
data16
loopne
pop
sbb
sti
les
lods
push
js
out
jl
addl
fsin
sti
pop
mov
add
popf
mov
jnp
pop
cmpsl
fadds
pop
add
jl
xchg
inc
push
enter
add
xor
cmp
or
inc
insb
out
out
mov
cli
and
adc
sbb
adc
xorb
lret
test
int3
and
add
adc
mov
out
cmp
mov
pop
mov
das
outsb
jo
cmpsl
or
mov
xchg
call
mov
cli
push
xor
jge
out
dec
adc
jno
mov
mov
inc
sub
mov
push
scas
shlb
dec
add
pop
cltd
cmp
cmpsb
dec
and
mov
test
cmp
flds
shll
cmc
jmp
pop
adc
cmp
adc
mov
repnz
xor
add
ret
add
push
mov
and
xor
mov
loope
sahf
mov
in
add
loop
lds
mov
add
adc
mov
mov
and
stos
cmp
leave
push
sarl
mov
and
jbe
stos
aad
inc
addl
sbb
jecxz
or
je
es
paddb
and
or
xor
mov
aad
lret
mov
in
xor
es
dec
push
mov
push
jmp
into
sub
add
inc
jne
ret
jns
sbb
mov
push
aam
cmp
lods
adc
dec
dec
je
loop
mov
xor
lea
add
push
lods
add
mov
pop
sbb
inc
adc
push
or
cmp
data16
mov
pusha
push
push
movsl
add
shrl
mov
add
xor
mov
clc
pop
dec
lods
enter
inc
adc
xchg
loopne
data16
push
or
add
test
incl
in
cld
mov
xchg
arpl
inc
insl
pop
add
xchg
sub
push
add
jb
adc
int
lret
in
mov
xchg
add
sub
pop
sbb
or
hlt
fsts
mov
jns
mov
jge
push
mov
test
push
inc
mov
and
add
jne
push
fsubp
add
in
inc
adc
pop
add
fdivrs
add
xlat
orb
pop
sbb
jae
loopne
push
xlat
enter
sarb
int3
mov
stc
inc
pushf
jl
fprem
mov
sub
lret
cmp
ret
jl
movsb
mov
test
push
dec
pushf
mov
and
stos
dec
cmp
cmp
roll
xor
xor
mov
dec
cs
or
push
mov
adc
jl
push
and
lock
lahf
mov
cmp
or
es
jo
rclb
dec
xor
pusha
cli
jmp
nop
shufps
sahf
lock
or
or
adc
or
push
mov
mov
les
mov
fdivl
imul
pusha
cmp
sub
mov
inc
mov
and
ja
inc
xor
in
cli
cmpsb
jo
int
sbbb
cmp
fimuls
cmpsl
inc
cmp
inc
arpl
cmp
xchg
inc
inc
cmp
xchg
pop
adc
insb
ror
enter
in
or
dec
sub
add
adc
lock
add
xchg
pusha
stos
mov
jl
bound
pop
dec
into
xchg
mov
jmp
nop
xor
cmp
icebp
or
sbb
push
mov
fwait
mov
mov
xchg
in
or
sub
or
jo
dec
add
loop
sbb
mov
pop
dec
roll
jnp
adc
cmc
orl
mov
adc
leave
mov
inc
push
int3
push
dec
mov
lret
test
fs
mov
jge
add
rcr
fistpll
pop
int3
sbb
push
enter
call
mov
sahf
add
pop
jnp
nop
add
xchg
frstor
or
push
xchg
cmpsl
push
inc
mov
pushf
cmp
inc
mov
lcall
out
rolb
pop
shlb
sbb
inc
mov
xor
cli
mov
loopne
sub
add
data16
mov
in
cli
lds
pop
inc
and
pop
outsb
inc
add
lods
push
push
jp
dec
mov
or
test
add
cmpsl
pop
inc
cwtl
mov
call
mov
jl
push
add
push
inc
pop
xchg
addr16
xchg
inc
cmp
adc
xor
in
or
mov
push
mov
aas
or
push
fisubrl
rolb
xor
add
pop
repz
js
adc
loope
insb
les
add
xchg
add
xchg
xor
adc
pop
lret
fs
lahf
shlb
push
push
icebp
loop
add
push
mov
pop
add
imul
and
and
aas
add
in
in
xchg
mov
fwait
mov
les
jae
in
xor
push
sbb
lret
mov
sub
mov
mov
or
stos
jmp
test
faddl
add
mov
adcb
inc
jno
adc
fs
mov
jp
mov
cmp
cli
daa
fucomp
or
cmp
xor
sahf
mov
xor
mov
push
loop
mov
xlat
mov
test
xor
cmp
xlat
sub
sbb
aam
pop
mov
test
and
repnz
mov
xor
pop
add
sbb
les
iret
stos
jle
add
movsb
lret
fs
cmpsb
or
movsl
test
push
clc
or
push
enter
mov
mov
add
icebp
nop
imull
jg
or
xchg
dec
lock
add
mov
mov
xchg
inc
jmp
cmp
fcoms
enter
fisubl
jae
push
adc
add
pop
test
shr
loop
or
rcll
inc
add
mov
sub
fcmovb
scas
pushf
mov
lahf
mov
or
push
call
xchg
push
xchg
mov
iret
addb
adc
scas
mov
pop
mov
cld
mov
xor
push
adc
mov
xchg
mov
cmpsb
dec
xor
adc
call
sbb
adc
pushf
xchg
inc
mov
fsubr
jo
xchg
mov
add
cs
sbb
mov
lcall
xchg
and
and
dec
xchg
pusha
dec
push
lcall
inc
fwait
and
push
add
jnp
or
fidivrl
jno
sub
lock
pusha
push
stos
sub
lock
cwtl
das
sub
cmp
scas
push
jge
fldl
shl
sbb
lock
aaa
loope
sbb
xchg
loopne
out
stos
pushf
cmp
movsl
fstps
mov
push
loop
and
xorb
add
sub
pop
push
inc
xlat
mov
mov
outsl
or
adcb
test
les
or
clc
adc
mov
pop
and
clc
fdivs
enter
mov
and
add
repz
shll
sub
clc
scas
scas
push
mov
addb
jl
leave
repnz
adc
rcrb
push
pop
mov
dec
scas
pop
add
std
ret
addr16
arpl
pop
inc
mov
mov
movsl
pusha
fdivs
in
lods
xchg
loopne
lcall
stc
pop
movsb
dec
xor
repnz
jno
push
cld
xchg
inc
inc
rorl
sbb
sarb
pop
aam
int
inc
xlat
sub
xchg
add
outsb
sar
mov
add
add
mov
xchg
out
dec
in
cmp
jecxz
mov
xor
add
jp
roll
xchg
ror
dec
push
imul
sbb
and
int
hlt
cltd
decl
aam
lds
mov
mov
add
adc
push
sbb
es
int3
sub
xchg
sbb
add
cmp
cs
mov
dec
scas
int
cmp
add
mov
jbe
es
cmp
fldt
mov
cmp
inc
roll
test
dec
insl
pop
lea
stc
mov
aaa
lods
aas
or
fs
or
push
inc
and
pop
hlt
adc
aaa
sti
jg
scas
enter
and
xchg
cwtl
jnp
push
add
das
sbb
dec
adc
add
sub
cmp
ja
add
mov
mov
mov
mov
clc
repnz
cmp
ds
xchg
jae
add
jns
push
mov
xor
fs
les
out
loopne
and
adc
jae
mov
pop
inc
mov
out
lods
aam
pop
push
sbb
dec
lods
inc
scas
je
pop
pop
lea
das
das
xor
int
xchg
push
sbb
dec
ljmp
fsubrl
add
sarb
adc
jg
pushf
sbb
sbb
int3
cmpsl
add
or
and
push
stc
pop
sub
shll
sub
fmull
xlat
sbb
in
sbbb
add
out
repz
loop
xor
rolb
xorb
xchg
push
pusha
sarb
fldt
and
push
xor
add
add
and
sub
mov
add
mov
sbb
shl
xchg
cmp
pop
mov
or
fs
cwtl
dec
pop
rclb
mov
sbb
add
mov
clc
pusha
mov
jb
and
insl
in
inc
push
rolb
jmp
push
int3
sahf
xchg
enter
mov
pushf
fs
inc
mov
mov
orl
aas
and
mov
repz
mov
mov
mov
sbb
dec
test
mov
rorb
dec
inc
out
rcrl
sbb
enter
add
add
movsl
mov
fs
je
sub
into
xor
sub
dec
nop
lahf
pop
sbb
call
incl
mov
add
add
xchg
xlat
or
loopne
pop
or
jns
mov
sbb
sub
mov
dec
xor
subl
mov
int3
jl
xchg
cmp
arpl
add
cld
sub
add
cmc
add
mov
aaa
cmpsl
dec
add
dec
test
imul
cmp
xchg
add
mov
and
test
aaa
add
mov
adc
sub
cmpsl
mov
lds
clc
inc
add
loop
hlt
js
or
mov
fadds
pushf
flds
push
sub
xor
lea
scas
jmp
in
pushf
mov
data16
push
lret
lcall
call
aas
lods
xor
mov
push
add
jl
daa
pop
data16
inc
aam
push
xor
inc
int
and
inc
aam
or
and
xchg
test
push
orb
ljmp
loop
imul
icebp
mov
daa
adc
daa
fstl
cwtl
gs
pop
dec
xor
hlt
pushl
mov
test
add
push
imul
stos
clc
sbb
fadd
jns
add
clc
and
clc
loop
lock
add
mov
outsb
cmp
loop
repnz
xor
xchg
add
outsb
sbb
sub
add
fsubrl
popa
xchg
pop
add
mov
test
je
or
movsb
popa
in
pop
push
movsb
shlb
mov
mov
xchg
sbb
push
dec
jb
add
adc
lcall
mov
push
bound
push
lock
shlb
hlt
lock
pusha
xor
aaa
inc
inc
jl
pop
xor
mov
std
mov
cmp
in
pop
or
pop
dec
dec
mov
imul
xlat
adc
fmull
xchg
dec
or
das
test
mov
inc
pop
cld
scas
lock
mov
jne
push
mov
inc
or
rorl
xor
hlt
lcall
mov
push
addb
sub
pop
movzbl
jp
push
mov
paddb
loopne
mov
add
jl
inc
ljmp
in
xchg
add
int
dec
dec
mov
add
adcb
ja
pop
pop
shrl
or
call
rolb
ja
add
push
fisttpll
sub
add
mov
or
dec
fmuls
fwait
sbb
adc
xchg
aas
jo
pop
adc
jae
adc
int
and
xchg
insl
call
mov
jl
orl
mov
dec
add
sub
pop
ret
push
xor
js
mov
cltd
rcrb
adc
aam
sbb
jp
les
sub
adc
pop
pop
pop
outsl
inc
or
fs
add
xor
pop
lret
push
addl
add
pop
scas
lahf
pop
mov
jae
js
dec
jmp
mov
in
sbbb
shll
inc
mov
and
adc
mov
mov
shll
sbb
stos
subb
cmp
dec
add
xchg
xchg
xchg
xchg
pop
dec
mov
mov
loopne
mov
xchg
arpl
add
pushf
sub
dec
inc
xorl
or
add
add
dec
cli
cli
insb
pop
or
cmp
mov
xor
ds
rcl
jo
testl
test
xor
dec
jbe
sub
mov
inc
lock
and
push
subb
xchg
dec
leave
adc
inc
mov
add
test
xor
clc
sahf
xor
pop
out
add
sub
mov
lcall
lods
mov
dec
icebp
fwait
sbb
add
ficomps
cmp
scas
shrb
jbe
stc
push
sbb
popf
sbb
iret
cmp
aam
sbb
call
push
push
mov
cmp
test
xchg
test
inc
rol
dec
addb
sub
nop
mov
inc
jns
jbe
pop
cmp
jne
popa
mov
adc
ret
inc
mov
dec
add
icebp
add
lahf
mov
add
es
fs
jle
lcall
inc
jecxz
xor
ret
aad
test
add
clc
xchg
adc
call
dec
inc
aam
pop
or
shr
xor
pop
xor
out
or
pop
add
aas
and
mov
mov
xchg
adc
mov
scas
adc
mov
add
and
inc
or
cwtl
inc
xor
mov
cmp
loop
add
ffreep
cmp
lcall
adc
mov
les
jo
or
popa
sub
out
lea
jge
add
rcr
loope
nop
das
int3
fs
and
mov
add
int
stc
lret
pop
push
jne
pop
orb
add
or
add
sti
sbb
xchg
cmp
and
jnp
adc
aas
push
data16
lea
adc
sbb
add
enter
dec
add
xchg
out
xor
je
push
pop
stc
nop
sub
call
orb
mov
ja
mov
movsb
add
pop
or
cmpsl
enter
inc
mov
addb
or
mov
mov
adc
mov
mov
adc
fs
dec
scas
mov
push
mov
enter
jnp
iret
shl
mov
mov
scas
fprem
dec
scas
or
mov
add
xor
inc
shrb
clc
adc
mov
push
mov
jmp
je
and
jp
mov
mov
inc
cld
cmp
pop
in
dec
or
rcrb
sbb
pop
scas
cmp
lret
in
loopne
daa
push
add
cld
in
iret
mov
lahf
movsb
hlt
add
addl
mov
dec
jbe
in
and
push
cs
std
icebp
rcll
push
das
push
cli
xor
adc
adc
jg
inc
add
xlat
arpl
rolb
jne
fucom
push
and
mov
jns
and
or
add
orl
and
mov
repz
cld
pop
inc
adcb
push
arpl
lahf
xchg
inc
adcb
arpl
pusha
shr
pop
mov
lods
cli
enter
daa
lock
adcb
test
sbb
add
pop
ss
nop
leave
in
mov
outsb
stc
cmp
add
add
xor
adc
adc
das
push
jae
loopne
add
sbb
icebp
jmp
insb
movsl
mov
fiadds
and
mov
dec
mov
subb
cmp
sti
and
repnz
lods
std
aas
fbld
orb
jo
adcl
mov
add
sbbb
mov
les
addl
xor
jl
rclb
xchg
out
or
add
pusha
mov
out
pusha
adc
xor
iret
cmp
addl
xchg
lods
inc
and
mov
out
ss
scas
shlb
fmuls
in
nop
cmp
inc
mov
inc
icebp
add
rcll
xor
adc
add
cli
pusha
sbb
mov
jns
mov
push
inc
int
or
sbb
mov
add
and
inc
push
and
inc
call
mov
xor
mov
dec
push
das
inc
sbb
xor
daa
xor
sub
add
dec
addr16
sub
mov
es
inc
dec
inc
xchg
pop
fbld
shrb
test
push
lahf
xchg
push
sbb
mov
sub
add
mov
sub
and
adc
mov
es
mov
rcrl
add
lods
mov
mov
sbb
push
mov
mov
inc
add
xchg
inc
ja
inc
pop
cmpsl
jge
inc
push
push
mov
pop
sbb
cmp
sbb
lds
or
cmp
jmp
pusha
inc
mov
enter
cmpsb
push
sbb
mov
inc
or
loopne
pop
lods
sub
xchg
gs
sub
sub
jbe
inc
jecxz
add
jae
xchg
out
push
in
aad
ficomps
mov
enter
cmpsb
lock
lahf
add
insl
xchg
inc
jno
clc
pop
and
mov
add
test
insb
xchg
shlb
jle
jl
pop
xchg
ret
stos
cmp
call
addl
jle
push
iret
xor
loopne
dec
and
cmp
and
add
jns
mov
sbb
mov
xchg
js
sub
addb
sub
je
fidivl
dec
enter
push
mov
or
cmpsl
fidivrl
push
push
mov
add
mov
push
sti
xor
inc
lods
adc
sbb
das
add
dec
jmp
mov
cld
push
repz
push
inc
sbb
xor
inc
les
sbb
add
push
iret
inc
sbb
rol
add
in
add
inc
je
dec
mov
adcb
mov
pop
cmp
add
xlat
mov
pop
les
flds
pop
sbb
sbb
pop
data16
xor
idiv
leave
bound
insb
add
repz
aam
cwtl
dec
inc
les
mov
fbstp
mov
push
leave
loopne
pop
add
add
jae
xchg
cmp
hlt
cmpsl
sub
push
pop
int3
sub
fwait
shrl
and
pop
xchg
sub
pop
mov
push
xchg
and
lcall
and
rorl
adc
xchg
mov
add
out
pop
xor
cmp
andb
shl
pop
les
cli
stos
call
jmp
pop
inc
shrb
loopne
sub
or
inc
dec
out
sbb
xor
sbb
push
inc
mov
outsb
add
je
js
pusha
lret
mov
push
int3
je
mov
sub
jmp
lods
inc
cs
cmp
push
fistpll
cmp
or
mov
dec
and
push
xor
cmp
andl
push
mov
dec
cmp
call
push
sti
call
sbb
jmp
add
cwtl
arpl
loopne
or
xchg
in
jae
ficompl
dec
inc
fstpl
lcall
add
flds
imul
sub
sbb
iret
mov
test
sbb
and
shrl
and
bound
sbb
mov
xor
xchg
pop
fmull
scas
lds
aam
clc
inc
lcall
rol
and
jnp
jo
iret
add
dec
or
push
cmpsl
xchg
push
pusha
mov
lods
pop
push
xlat
inc
or
and
shlb
and
push
sbb
push
push
xor
add
insl
frstor
int3
or
add
xor
push
rcrl
dec
dec
call
pop
lret
adc
dec
lahf
add
jecxz
imul
fdivs
cmp
mov
fwait
enter
dec
adc
cltd
or
fdivrs
cmp
rol
xchg
cmpsb
je
pop
pop
cmp
out
in
pop
add
xchg
push
imul
or
push
xchg
scas
test
popa
cmp
mov
movsb
leave
rolb
insl
adc
dec
mov
add
and
adc
add
mov
adc
push
enter
std
pop
loop
pop
pop
sarl
ret
cmp
pop
mov
sub
adc
out
cmp
jge
adc
sti
data16
and
pop
loopne
mov
popa
mov
add
nop
loopne
xor
adc
or
add
jb
subl
adc
cltd
xchg
dec
mov
inc
je
add
cmp
cmp
adc
jnp
pop
movsl
mov
adc
and
adc
cmp
in
sbb
jle
add
mov
fsubrl
push
rolb
cmp
adc
add
xchg
inc
int3
mov
gs
xchg
enter
cmp
insl
ficoms
mov
jbe
adc
inc
xor
add
daa
cmp
xchg
sbb
xchg
inc
in
ficoms
cld
pop
push
inc
pop
aad
and
push
test
add
dec
loopne
or
test
push
mov
add
adc
xor
and
clc
fs
movups
or
mov
mov
add
andb
test
cmp
or
arpl
in
push
push
nop
roll
and
inc
fstpt
jo
jmp
sti
ret
jo
sbb
rorl
fimull
or
stc
hlt
loopne
xchg
xchg
adc
adc
lock
mov
nop
cld
adc
pop
or
push
push
and
push
and
repz
mov
mov
add
xlat
or
push
xchg
add
ss
jecxz
dec
jle
fsubrp
mov
mov
aas
stos
lahf
sub
sbb
ds
mov
clc
pop
hlt
xchg
jno
mov
or
mov
sbb
ror
push
in
ret
and
popa
jl
shrl
in
fisubrs
mov
arpl
or
inc
fcmovnbe
inc
add
shrb
adc
hlt
or
add
add
pop
pop
cmp
jp
stc
mov
jb
inc
loopne
out
dec
sbb
xchg
mov
sbb
adc
into
test
imul
add
fimull
dec
lret
push
adc
push
sub
ret
imul
xchg
mov
filds
insl
lahf
out
fidivs
fadd
push
jp
pop
adc
into
insb
in
sub
andb
movsb
add
mov
test
test
inc
lcall
and
aas
xchg
jb
inc
dec
xchg
pusha
and
sbb
sub
mov
or
insb
fnstsw
or
test
xor
mov
inc
stos
cwtl
lret
cmp
es
clc
and
addb
adc
lcall
pop
movsb
adc
pop
in
lock
stc
mov
add
pop
cmp
push
sbbb
iret
add
add
cmpsb
lock
in
sbb
pop
hlt
lcall
mov
add
adc
or
enter
xchg
stos
sbb
lcall
and
cwtl
outsl
sahf
add
inc
aad
push
inc
loop
popf
dec
adc
cmpb
nop
leave
mov
sahf
enter
xchg
sbb
fadds
adc
inc
je
iret
inc
or
xchg
fdivrs
mov
subb
sbb
sub
es
push
rorl
sbb
sbb
push
ret
mov
sub
jno
mov
add
cmp
pusha
mov
xchg
pop
adc
sbb
sbb
pusha
adc
lea
add
inc
xorl
test
adc
sbb
iret
add
xlat
sbb
xor
adc
sti
or
adc
pusha
mov
incl
mov
xchg
addr16
add
adc
mov
push
mov
xor
dec
push
ljmp
mov
adc
mov
xlat
imul
ja
mov
push
mov
jmp
pop
cmpsl
fadd
jge
or
lret
movsb
ds
or
mov
jge
sbb
or
sbb
pop
pusha
sub
mov
jge
idiv
mov
ss
adc
andb
xchg
and
jecxz
pop
aad
and
test
clc
pop
scas
pop
fdiv
add
rcrb
lock
sbb
fsubr
add
inc
dec
rolb
pop
push
jbe
sbb
orb
scas
cwtl
insb
xchg
adc
insb
jbe
add
arpl
mov
cmpsb
test
fninit
push
aaa
mov
sub
xor
subb
andl
add
push
jmp
push
push
mov
and
mov
jns
push
add
imul
push
dec
pop
repnz
js
and
fiadds
dec
andb
push
cwtl
sub
pop
add
ret
push
sub
pushf
jle
xchg
mov
rolb
out
inc
mov
inc
add
adc
pusha
outsl
sbb
sub
cld
pop
add
xchg
lds
mov
dec
shl
and
mov
sbb
xchg
mov
fidivrl
push
subl
add
sbb
sbb
sahf
and
push
adc
sbb
mov
les
pop
and
imul
add
or
sbb
in
sahf
outsb
mov
outsl
test
addr16
in
in
aaa
clc
rcrb
and
xchg
xchg
inc
into
ret
test
nop
scas
call
out
inc
sub
mov
sbb
inc
or
lods
out
inc
les
mov
nop
add
fdivl
dec
push
xchg
add
inc
mov
in
pusha
push
outsl
mov
dec
jo
adc
aam
or
fnclex
xor
inc
mov
pop
jl
jle
notl
cmp
addl
inc
jno
hlt
cmp
les
mov
jne
repz
cmp
test
sar
mov
mov
xor
pop
cmp
push
sub
or
xchg
lret
jmp
or
imul
sub
scas
xchg
movsl
stos
cmp
add
test
mov
loop
xor
inc
push
xor
cli
mov
ret
dec
xchg
push
xchg
movsb
add
test
xor
orb
adc
pop
mov
adc
lcall
adc
jne
xor
enter
adc
cs
pop
faddl
push
filds
jnp
mov
sub
add
push
stos
scas
cmp
inc
mov
loopne
out
xchg
xchg
xor
nop
mov
adc
mov
sub
gs
test
rorl
jp
jle
adc
loop
lods
and
sbb
pop
pop
out
add
stc
pop
add
and
repnz
add
fs
jl
push
push
lds
add
or
test
add
push
dec
lds
add
push
add
imul
sar
xor
inc
orb
jo
or
mov
loopne
out
mov
mov
push
dec
ds
mul
insb
or
mov
mov
stc
dec
fistl
ret
js
daa
push
gs
in
pusha
sub
mov
js
cwtl
adc
mov
cmp
nop
cmpsl
jnp
mov
xchg
sbb
jle
adc
xchg
dec
cmp
add
cmp
iret
add
orl
and
sbb
stos
cltd
pop
scas
or
pushf
repz
pusha
cmp
into
push
jne
mov
add
dec
push
adc
cld
fcomps
add
and
push
push
pop
sahf
adc
cmp
rcll
and
add
nop
ljmp
add
leave
jns
andl
jae
lahf
movsb
divl
push
pop
inc
inc
mov
stc
cltd
cmp
ss
add
sbb
cmp
xor
jl
xchg
pop
test
add
mov
cmpsb
fdivrs
pop
sbb
test
rclb
xchg
outsl
adc
in
insb
jmp
ret
sar
cmp
pop
pop
mov
ss
rolb
andb
pusha
sub
jl
pop
cmp
pop
mov
xor
aad
xchg
lods
int3
push
test
xchg
imul
and
es
mov
cmp
adc
push
or
fcoms
or
bswap
in
pop
loopne
xchg
or
xchg
daa
into
rclb
xchg
add
mov
adc
mov
add
imul
mov
dec
test
xchg
mov
gs
jbe
adc
sbb
cmp
addb
pop
dec
mov
insb
fistl
mov
rorb
test
cmp
mov
inc
push
mov
xchg
test
fimull
addb
lcall
into
jns
pop
stc
cmp
imul
and
pop
add
int
je
aas
dec
lret
test
call
int3
and
fdivs
mov
xor
jno
push
call
imull
aad
dec
mov
lret
add
rolb
fsts
nop
lret
cmpsb
sub
mov
fcoms
pop
orb
loop
add
insb
xor
sbb
scas
sbb
add
daa
sub
test
xor
rcr
xor
or
je
out
add
dec
mov
aad
gs
pushl
int3
mov
lds
xchg
fstpt
xchg
xchg
nop
push
fst
dec
dec
jle
add
mov
and
adc
addb
aam
pop
stc
sbb
and
jnp
push
outsl
add
pop
popf
fmul
jg
insb
je
mov
popf
gs
xchg
mov
imul
jb
jp
das
jl
sub
cld
add
in
pop
pop
push
mov
repz
or
ret
movsb
test
in
insl
mov
dec
scas
repnz
jg
sub
cmp
arpl
in
add
fs
repz
add
mov
push
pop
movb
cld
push
jnp
xor
daa
mov
push
push
or
test
xor
pushl
push
call
and
nop
mov
add
inc
or
andb
push
ret
stos
mov
or
mov
or
mov
mov
pop
ret
adc
inc
push
ret
push
sbb
lret
sbb
call
dec
inc
push
sbb
ret
mov
inc
push
ret
loopne
test
mov
cmpsb
addb
push
cmp
popf
insl
or
adc
mov
insb
push
mov
clc
movsl
xchg
add
push
add
mov
push
mov
push
pop
adc
jmp
cmp
call
or
lret
inc
mov
pop
inc
sub
and
jbe
sub
mov
aaa
xor
aam
repnz
mov
cmp
mov
or
movhlps
push
cmp
and
add
lods
mov
or
inc
adc
push
frstor
lods
push
flds
mov
pusha
add
jae
pop
aas
mov
aam
adc
bound
add
sbb
sbb
add
test
sbb
iret
mov
push
sbb
lret
mov
or
push
movsb
int
popf
add
inc
ret
xor
nopl
pushf
pop
call
mov
in
mov
call
flds
lcall
aas
dec
loope
adc
enter
push
das
out
test
add
mov
gs
pop
ret
enter
inc
sbb
push
pop
js
int
sub
dec
sbb
push
mov
push
les
popf
frstor
ret
jb
out
mov
pop
nop
cmpb
push
or
aaa
movsl
outsl
clc
fnstenv
call
jo
adc
fcoms
add
shl
and
add
and
orl
ja
popf
daa
adcl
push
jge
mov
cmpsl
mov
and
in
xchg
pop
lea
iret
jns
push
inc
pop
pop
mov
mov
mov
and
mov
or
les
dec
add
insl
jno
mov
cmpsb
cltd
and
divl
inc
cmp
xchg
jge
shll
loope
mov
ret
push
sbb
subb
mov
inc
adc
adc
mov
rol
pop
aaa
sahf
bound
cmp
jmp
je
or
sbb
test
addl
repnz
test
test
inc
mov
insl
pusha
mov
add
inc
and
mov
popf
dec
pusha
inc
in
adc
jmp
or
movsl
inc
and
xchg
lock
nop
addl
or
jmp
scas
in
dec
pop
loopne
test
int3
sbbb
and
sbb
ret
imul
sub
sbb
inc
push
ret
inc
sub
mov
popf
mov
mov
pop
sbb
out
lods
jne
cs
fiaddl
lds
or
int
cmpsl
adc
push
popa
pop
ret
enter
jae
inc
push
ret
mov
fcmovnbe
inc
shr
daa
addl
mov
mov
xor
or
add
mov
imul
jmp
cmp
push
movsb
nop
das
adc
fisubrl
add
and
pop
or
inc
sbb
mov
pushf
call
xor
jb
push
pop
add
popf
nop
pusha
shl
mov
popa
push
pusha
pop
push
mov
add
add
ds
xor
sub
loope
adc
mov
xchg
rorl
stos
xor
rorb
rclb
ljmp
pop
ret
test
inc
mov
mov
inc
add
jle
sbb
mov
test
mov
adc
das
mov
dec
popa
outsb
int
fadds
jbe
jecxz
mov
jb
dec
std
mov
or
lods
and
push
jbe
push
add
mov
add
sbb
ret
sbb
sbb
aas
add
int3
cmp
ret
cmp
popf
test
sbb
inc
and
push
andl
pop
add
fists
adc
sub
sub
in
sbb
outsl
or
movsb
or
cmc
in
and
push
imul
in
je
sbb
aad
adc
notb
mov
ror
lods
add
push
out
or
dec
in
icebp
and
and
jnp
ret
dec
mov
mov
call
dec
int
ds
cmc
or
cmpsl
enter
scas
cmp
add
loop
mov
stos
lahf
pop
jmp
jp
daa
xchg
leave
xchg
aam
push
int3
int
xchg
push
dec
and
cld
cmp
push
mov
lahf
xor
push
mov
shr
xchg
push
push
or
inc
pusha
pop
jno
push
shll
jne
adc
push
mov
rorb
cmc
lea
cmp
pop
pop
pop
sbb
sbbb
pop
lahf
mov
and
lock
mov
mov
stc
push
pop
cli
cmovp
adc
and
nop
add
xchg
push
or
jae
aas
repnz
cmp
and
jmp
mov
fsubrs
mov
out
pushf
cmpsb
outsl
mov
dec
sbb
shr
bound
add
push
or
sbbb
xor
imul
push
test
or
push
push
adc
mov
outsb
add
popa
ret
rcll
push
pusha
cmp
push
add
sbb
inc
ss
and
cmp
lods
sbb
or
popf
int
sahf
jae
pop
xchg
or
sbb
push
mov
or
jno
mov
call
stos
adc
mov
add
mov
push
mov
loop
outsb
jb
popa
shlb
dec
push
test
push
shlb
xchg
add
lcall
pop
pop
adc
sbb
stc
add
cld
sub
or
adc
jg
mov
mov
mov
sbb
aaa
aad
mov
jg
es
lea
stos
jge
dec
add
sub
jae
popf
dec
or
xor
and
sahf
jae
outsb
pop
ret
and
mov
dec
les
fdivrs
sub
insb
fmull
mov
ficoml
xchg
cmp
jp
and
sbbb
pop
dec
sub
push
cmpsl
mov
add
fnstenv
mov
in
mov
adc
call
inc
and
sarl
sbb
popa
and
adc
lock
aas
sbb
inc
xlat
arpl
movswl
mov
mov
or
test
gs
push
xor
addb
xor
push
bound
std
mov
out
js
lea
push
sub
cwtl
ja
mov
sbb
cmc
les
pusha
adc
out
call
lret
pop
add
xor
add
jl
push
or
inc
and
push
iret
fmuls
jno
es
or
es
adc
dec
sub
and
sbb
jge
fsts
sbb
divps
aad
inc
pop
xchg
sti
sub
mov
in
lahf
les
sbb
xor
fstpt
lcall
dec
fs
cltd
push
ljmp
adc
pushf
xchg
add
cld
cmc
or
in
lods
mov
adc
out
jne
and
jo
hlt
pop
imul
jbe
cmp
dec
add
xor
jge
push
outsl
out
or
mov
sub
add
xchg
loope
insb
mov
add
into
xor
add
cs
mov
pop
shlb
fsubs
jno
sbb
fwait
push
hlt
and
add
aam
pusha
notb
pop
or
push
jmp
in
jb
insl
mov
cmc
push
or
pop
xchg
int3
test
push
fcmovbe
jge
push
je
cmpsb
mov
cmp
test
aas
test
mov
dec
int
pop
js
mov
iret
aas
inc
pop
and
pop
cmc
add
mov
jl
mov
dec
aad
or
mov
sub
push
or
push
stc
mov
aaa
mov
cmp
xlat
and
insl
ja
xor
mov
in
xchg
adc
ja
add
iret
lret
mov
or
lods
xchg
test
lods
adc
imulb
cld
cltd
cmc
fwait
lods
cwtl
sbb
mov
icebp
adc
orl
rcll
out
mov
fwait
add
popf
inc
push
fiaddl
stos
enter
loop
testb
sub
jp
or
popa
test
movsb
rcrl
add
pop
cmp
xor
push
ror
mov
or
popa
inc
lcall
push
test
test
dec
rcrb
sti
mov
lods
sub
add
or
cli
pop
pop
push
cmpsl
mov
fisubrl
add
insl
jl
scas
sub
mov
mov
inc
sbb
cwtl
mov
jg
sbb
pop
jmp
mov
fstpl
push
or
push
subb
data16
mov
sbb
cmovs
mov
out
mov
pop
adc
pop
and
inc
pop
cmp
rorb
testb
add
push
pop
imul
cmp
jmp
adc
imul
adc
mov
aam
push
rcl
out
inc
icebp
js
les
ja
out
fldenv
pop
mov
andb
scas
pop
or
inc
outsl
les
notl
test
les
lods
test
out
loopne
jb
add
sub
andl
fmuls
mov
pop
jae
jle
push
mov
cmpsl
mov
inc
xor
xor
mov
scas
add
mov
sbb
cli
loope
lcall
push
jb
orl
fsubl
decl
pop
inc
cmp
adcl
out
mov
or
pop
sub
mov
adc
aad
mov
ds
and
sub
mov
dec
or
clc
lock
jle
push
pop
add
movb
mov
lods
std
js
push
les
add
mov
pop
pop
nop
es
mov
lret
out
or
xor
push
mov
adc
lock
mov
stc
xor
arpl
push
aad
inc
push
loopne
into
fidivrl
xor
sub
pusha
sub
sbb
cmp
int
loopne
rorl
mov
mov
das
xchg
jo
popf
sahf
imul
add
test
xor
push
sbb
sub
stos
or
pop
add
push
out
push
ret
je
add
popa
pop
dec
dec
pop
out
jo
lret
add
mov
and
movsl
shl
mov
or
out
cmc
outsb
and
jmp
xor
pop
pop
orl
outsb
jb
andl
or
popf
or
jb
aam
popf
dec
add
scas
mov
fldcw
daa
inc
cltd
ds
popf
pop
add
repz
adc
pop
push
jmp
dec
push
adc
lcall
mov
call
pushf
jo
add
push
add
or
in
mov
mov
movb
push
stos
pusha
mov
and
adc
add
nop
and
sub
adc
mov
jns
xor
popa
mov
mov
jo
lock
sbbl
pusha
sar
out
cmovle
arpl
mov
gs
in
call
push
out
mov
sbb
pushf
lea
xchg
int3
repz
stc
pop
xor
mov
lods
cmp
rdpmc
orl
sub
imul
pusha
xlat
out
xchg
nop
adc
push
outsl
inc
xor
push
add
imul
popa
jp
mov
and
pop
inc
sbb
test
out
les
ds
sub
jg
mov
ret
popa
jg
jmp
mov
call
out
bnd
sub
add
lret
fldt
daa
mov
dec
mov
mov
mov
adc
pop
add
faddl
jnp
and
sbb
adc
aaa
and
or
ja
mov
add
xchg
push
adc
xor
mov
or
bound
and
xor
sbb
movsl
sbb
adc
sbb
lea
aaa
cltd
dec
aaa
or
xchg
or
bound
xor
or
pop
dec
push
popa
mov
add
dec
cli
inc
leave
pop
push
in
repnz
imul
pop
or
pop
jns
icebp
sbb
xor
scas
or
add
repnz
ljmp
lret
or
dec
loop
xor
aaa
shrb
mov
and
sub
sub
and
push
cli
ret
paddusb
dec
jle
xchg
mov
es
div
in
sbb
clc
lods
sbb
ret
rolb
hlt
rcrl
adc
mov
push
xchg
stc
add
pop
and
lds
xor
mov
out
loopne
xor
or
mov
test
push
sbb
and
shlb
add
insb
loop
mov
lods
sbb
mov
loopne
xchg
or
pop
popa
push
mov
and
add
mov
inc
sbb
mov
enter
mov
leave
adc
push
push
add
sbb
jge
xchg
sub
test
lock
dec
mov
mov
sbb
dec
lea
dec
xor
add
xchg
add
add
mov
push
incl
push
push
push
jns
lret
icebp
sub
push
es
xchg
stos
daa
das
mov
frstor
loop
add
imul
shll
popa
push
adc
pusha
clc
data16
flds
fiadds
dec
add
cltd
mov
andb
jmp
ljmp
or
out
jo
rolb
leave
lods
lock
dec
outsl
filds
ja
mov
mov
add
pop
add
mov
jno
or
add
jle
xor
cmpsl
andl
cmp
or
and
sbb
or
add
jmp
pop
sub
inc
jecxz,pt
and
repz
jo
adc
cld
dec
mov
outsl
adc
popa
mov
push
movsb
fs
incl
pop
add
jns
pop
mov
push
push
adc
fcomps
xchg
shlb
adc
notb
add
aam
xchg
pop
sti
pop
jbe
cmp
pop
mov
addl
and
push
loopne
or
lmsw
cld
sub
adc
adc
test
pusha
stos
js
test
out
dec
ficompl
shr
push
xchg
adc
dec
mov
xor
std
push
arpl
aas
add
jecxz
mov
pop
or
dec
mov
sbb
sbb
mov
push
in
bound
add
and
addl
enter
jns
sub
fadd
hlt
or
and
inc
dec
sub
stos
pusha
xor
xchg
cmc
dec
fistpl
sahf
pop
dec
jno
sbb
pusha
xor
sbb
jns
cmp
mov
xchg
push
mov
pop
hlt
mov
or
or
and
mov
and
push
clc
test
pop
mov
repnz
mov
mov
pushf
mov
adc
filds
or
push
test
in
mov
push
push
pusha
loop
btc
dec
popa
repnz
loopne
das
fistpl
popf
repz
or
enter
mov
jae
mov
cwtl
mov
lods
mov
sbb
pushf
inc
test
js
add
loope
add
test
cmp
es
sbb
call
mov
test
mov
mov
dec
mov
cmpb
lret
jnp
in
jae
mov
pusha
pop
fwait
incb
or
aam
shll
mov
sub
or
in
inc
popa
add
call
sarb
dec
adc
pop
rolb
jmp
fnsave
loopne
fs
loope
sbb
sub
and
pop
adc
rclb
pushf
or
sarb
test
push
shll
icebp
int3
xchg
pop
or
xchg
popa
or
sub
sub
add
into
push
sbbb
outsb
inc
jne
pop
jae
add
jo
aam
decb
cwtl
jbe
andb
cmp
push
cltd
xchg
aas
add
ljmp
or
sub
sbb
pusha
sub
je
xor
gs
or
adc
xchg
xor
addb
shlb
xchg
and
pop
les
sub
outsl
aad
or
cmpsb
imul
add
mov
dec
and
add
push
addb
adc
xor
sbb
jae
insl
cmp
or
imul
mov
add
out
lret
stos
jno
daa
mov
insb
lcall
push
sub
rorl
push
cld
popa
jge
shrl
inc
and
add
into
cmp
stos
adc
mov
mov
je
ljmp
or
push
cmp
andb
sub
andb
dec
or
ss
inc
and
ja
dec
xchg
adc
call
fwait
sbb
aaa
mov
jo
sub
nop
mov
mov
leave
cmpsl
das
mov
add
mov
scas
inc
mov
mov
es
inc
pop
scas
ficoms
shll
lea
push
aad
lods
outsl
dec
fistpl
icebp
dec
pop
cmp
mov
shl
and
lea
enter
add
ficoms
mov
add
xchg
shlb
pop
add
pop
aaa
or
sbb
leave
rorb
dec
loopne
inc
lret
xor
adc
add
imul
popf
aaa
stos
add
rcrl
dec
cmp
xchg
pushaw
push
push
and
mov
mov
xchg
and
adc
add
xor
imul
push
popa
and
daa
shll
mov
int
dec
repnz
xor
push
mov
mov
add
notb
test
mov
addb
test
loopne
xorb
sarb
je
faddl
sbb
les
xorl
ljmp
out
jnp
sbb
cmc
cmp
mov
adc
sbb
jbe
fisttps
add
mov
mov
mov
jmp
les
in
cld
xorb
cmp
push
lods
adc
into
push
imul
das
push
pop
out
push
xor
xor
rorl
mov
dec
nop
push
push
push
dec
out
pushf
push
and
mov
pop
push
jo
sbb
mov
mov
xor
sub
mov
cmp
and
imul
pusha
cmp
subb
js
push
aad
das
js
cwtl
ds
pop
adc
cmp
jb
dec
or
jno
xor
cmp
loope
stc
fcoml
push
cmpsb
flds
add
outsb
leave
insl
mov
jl
pop
repnz
sbb
aad
pop
ljmp
sbb
outsl
and
dec
pop
fldenv
and
pusha
mov
lds
inc
clc
pop
mov
cs
out
pop
in
cmp
popf
mov
movsb
test
std
sub
in
add
push
ret
and
loopne
fnstenv
mov
and
mov
add
cli
out
test
roll
inc
mov
pop
dec
or
fidivrl
inc
adc
cld
pusha
mov
pop
pop
pop
xchg
add
or
adc
roll
fucomi
popa
sbb
add
or
decb
mov
das
adc
sub
mov
mov
ret
mov
mov
leave
lret
aaa
in
and
add
popa
shll
sbb
pop
push
lcall
dec
popf
mov
adc
jne
sahf
cld
stos
test
call
jbe,pn
out
jnp
dec
dec
rolb
jb
pop
xchg
adc
and
xor
jo,pt
lea
jg
hlt
fs
shlb
pop
popf
inc
fcomps
lea
mov
mov
sub
orb
and
movsl
push
das
decb
popf
lock
pop
adc
cwtl
add
aam
ret
shl
cs
adc
lret
add
mov
dec
adc
mov
mov
xor
out
sub
adc
fcom
push
add
popf
aas
adc
push
and
xchg
push
adc
add
rep
dec
roll
mov
in
outsl
in
mov
into
xor
or
les
pusha
imul
cmp
add
cmc
sub
gs
in
pusha
adcb
lock
das
cmp
add
popf
add
mov
fimuls
or
adc
pushf
dec
faddl
in
lods
andl
imul
add
js
xor
adc
jnp
mov
popa
or
movl
mov
add
test
add
lds
xor
sbb
out
mov
xchg
cmp
cmpb
mov
dec
hlt
sub
stos
sub
loope
or
mov
cs
test
cmp
xor
cld
cld
subb
xchg
cli
adc
and
pop
in
adc
jns
inc
inc
dec
mov
pusha
outsb
std
add
cmc
xchg
mov
mov
test
loopne
sar
mov
xchg
fidivl
mov
scas
shr
addr16
adc
add
ja
imul
add
popf
jns
mov
cmp
pusha
add
popa
push
nop
push
mov
xchg
fwait
pop
sahf
rolb
jbe
dec
jp
dec
xor
and
push
aaa
mov
xchg
sub
sub
lea
push
daa
in
sbb
sbb
add
xor
enter
dec
pop
mov
adc
add
add
xchg
cmp
int3
aam
iret
adc
aam
fwait
vpmacswd
dec
pusha
or
inc
add
cmp
pop
fs
add
mov
clc
jg
popa
pop
cmpsl
imul
sbb
mov
jnp
adc
jl
sub
xchg
sub
movsl
stos
and
cmp
add
fdivr
and
jnp
push
lea
dec
adc
cs
fstpt
ret
pusha
pop
or
mov
lahf
mov
in
das
dec
or
cmp
inc
stos
dec
mov
popa
das
xor
or
jb
sub
jecxz
inc
insb
mov
mov
in
dec
cs
cmp
add
ljmp
adc
mov
icebp
jl
push
sbb
lods
xor
xlat
movsb
add
lcall
jne
push
outsb
pusha
push
pop
aas
mov
fcoms
cltd
jno
in
push
fisubl
daa
mov
jae
jo
ret
cmp
sub
adc
in
aam
dec
push
and
pushf
fistps
lods
dec
jmp
sbb
mov
lods
dec
xor
pop
mov
pop
icebp
xor
cmp
xchg
jae
sbb
gs
imul
rcrl
outsb
push
shlb
mov
data16
stc
sub
or
xchg
add
scas
pop
and
sar
enter
xor
ret
sbb
jo
aad
xchg
cmpsl
inc
push
sbb
mov
sub
push
inc
pmaxub
xorb
xchg
lret
pop
imul
cs
ljmp
inc
aad
sbb
add
sbb
pop
xchg
imul
test
repnz
add
jge
ss
addl
inc
add
adc
jmp
mov
mov
inc
sbb
out
mov
inc
and
and
int3
inc
roll
repz
cmp
push
or
adc
inc
adc
mov
popa
or
jo
push
and
jge
jnp
frstor
aas
loopne
ss
adc
imul
leave
push
pop
js
or
lea
mov
stc
mov
jbe
adc
imul
dec
fwait
jbe
dec
and
mov
or
movsl
scas
jae
mov
xor
roll
int
rcrb
shlb
xor
push
xor
mov
mov
mov
out
cmp
sub
push
stos
and
mov
add
pop
rcll
jle
sub
and
fisubrs
mov
jnp
in
and
mov
jae
leave
dec
es
int
cmpsl
add
rclb
mov
push
gs
push
shl
mov
cmpsl
fnsave
cmp
push
sbb
dec
rclb
add
test
paddusb
jnp
fnstcw
jno
jns
lret
sbbb
loop
xor
outsb
shrl
xor
popf
int
dec
and
mov
adc
addr16
jp
or
cmpsb
sub
popf
out
les
mov
stos
and
pop
xor
or
sbb
push
rol
sub
dec
jl
and
xchg
push
lock
mov
pop
pop
xchg
mov
fsubs
stc
jmp
fyl2x
xchg
mov
stc
jns
lods
jae
jo
sbb
stc
insb
and
push
or
xchg
or
pop
fstpt
sbb
sub
dec
xor
mov
adc
lock
and
cld
ret
pop
loopne
bnd
add
add
fistpl
shr
sbb
or
xorb
pop
pop
cwtl
pop
loopne
iret
xchg
dec
shll
push
or
nop
mov
xor
mov
fistps
test
mov
and
add
jns
mov
add
mov
and
mov
stc
neg
dec
push
jnp
rorb
loop
sbb
jmp
filds
sti
cli
call
out
loopne
mov
cmp
pop
pop
repnz
xchg
cmp
add
cwtl
fiaddl
jnp
and
sbb
and
das
ja
or
inc
call
jb
jns
dec
lret
ljmp
in
pop
aad
and
mov
add
mov
mov
add
sbb
aaa
sbb
arpl
add
xchg
mov
pop
adc
in
mov
sub
arpl
cmpsl
outsl
push
scas
push
or
dec
repz
outsl
jae
inc
pop
push
mov
dec
and
int
popa
pop
notl
lods
push
add
mov
shrl
xor
loope
in
pop
mov
orl
fwait
dec
shlb
add
gs
jl
sbb
pop
popa
sub
std
es
loopne
xchg
inc
adc
adc
add
mov
push
je
push
mov
mov
and
mov
popa
pop
mov
fwait
incl
dec
xchg
adc
xor
fs
inc
fistps
push
sbb
cltd
jno
xor
loopne
xor
enter
and
or
movsb
leave
adc
xor
dec
sarb
aaa
mov
out
cmpl
or
jae
insl
sbb
and
flds
ficoms
cmp
jge
add
psrld
or
inc
or
push
dec
jnp
lods
loopne
jmp
pop
mov
dec
xor
in
mov
adc
mov
add
loopne
subb
xchg
add
jno
add
jbe
movsb
inc
and
push
repnz
and
sbbb
rclb
push
add
rorl
decl
pop
or
or
xorl
scas
sub
addr16
mov
push
dec
leave
cmp
icebp
aas
jle
add
adc
mov
pop
xchg
mov
fcomps
inc
adc
push
fbld
dec
add
out
in
pop
mov
fmuls
cmp
jo
rcrl
jns
or
call
or
add
dec
xor
sub
aad
xchg
shlb
cmp
or
jns
mov
jae
pop
lods
sbb
repz
shlb
xchg
dec
lods
ljmp
in
movsb
mov
mov
lods
push
mov
or
and
daa
enter
and
push
sbb
inc
mov
xchg
shll
dec
push
fisubl
lock
cmp
mov
add
dec
nop
clc
adc
xchg
dec
mov
mov
mov
cmc
xor
popf
push
xor
sub
leave
das
and
xchg
in
adc
sub
js
movsl
adc
pop
repnz
sbb
mov
fs
lds
pop
inc
adc
popa
mov
idivb
cli
jg
lea
lret
adc
pusha
push
mov
add
push
js
jae
pop
out
and
pop
jnp
add
test
das
adc
mov
dec
sbb
and
or
stc
and
daa
jb
xchg
cmp
jle
add
negl
movaps
repz
aad
sub
inc
xchg
dec
sar
pop
int3
or
pop
nop
outsb
mov
test
cltd
jno
incl
pushw
xchg
inc
bound
pop
leave
popf
mov
aad
jnp
lods
xor
push
int3
inc
movsl
jo
adc
outsb
sbb
arpl
cmc
cmp
pop
enter
cltd
add
stos
aam
sbb
push
adc
mov
cmp
movsl
sub
jmp
push
mov
dec
jg
popf
xchg
and
mov
add
mov
int
inc
add
das
or
mov
pop
mov
out
inc
subl
cmpsb
sub
sbb
outsl
or
push
outsb
and
inc
ror
pop
and
xor
gs
or
adc
leave
sbb
inc
inc
mov
sbb
jns
mov
sub
xor
popa
push
pop
mov
jmp
adc
add
add
push
mov
stc
cmpb
mov
pop
add
in
inc
mov
or
xor
mov
cmpsl
or
sub
fcomps
pushf
sbb
mov
sbb
jns
mov
xchg
or
or
mov
mov
mov
cmp
push
aas
pop
lea
test
dec
cmp
or
out
add
jmp
pop
ret
jne
test
pop
jnp
decb
xchg
adc
xchg
addr16
call
dec
mov
sub
repz
mov
xor
movsb
add
sahf
cvtps2pd
aas
test
and
cmpsl
xor
inc
or
pop
iret
add
cmp
mov
xor
nop
sbb
mov
push
push
pop
cli
and
rclb
xchg
adc
out
push
mov
xchg
fucomip
xchg
imul
mov
not
sti
jo
push
mov
lea
stos
dec
fidivl
sbb
jp
or
push
lods
mov
mov
or
adc
mov
movsb
ja
push
and
dec
xor
fsts
add
jo
mov
jb
jge
lea
push
and
jne
in
aas
imul
lods
or
pusha
jp
push
or
popa
jb
cli
fld1
mov
add
xorl
test
adc
sub
in
jb
add
and
push
out
lret
les
adc
inc
daa
xchg
xchg
adc
xchg
scas
mov
mov
add
cmpsb
stos
xchg
cmp
pop
xchg
pushf
mov
lods
jno
mov
lods
mov
cs
rorl
jl
pop
mov
out
and
fdivl
negl
mov
sbb
and
arpl
ds
sub
fidivrl
adc
fdivs
pop
xchg
xchg
cmc
mov
shlb
loop
xchg
mov
sub
into
out
test
rcr
sub
sahf
ror
cmp
pop
nop
push
adc
add
enter
lret
cs
jmp
cmp
movsl
icebp
xor
pop
xchg
dec
test
aas
daa
fisubrl
loop
mov
addr16
jecxz
inc
xchg
cmc
insl
dec
sbb
mov
cmp
add
push
push
mov
js
push
dec
inc
mov
ljmp
lods
fdiv
cmp
push
or
roll
push
and
xor
fdivs
inc
and
inc
adc
rclb
mov
mov
aam
ret
adc
dec
jno
rcll
ds
and
sub
les
push
inc
sbb
push
jge
iret
lds
leave
jecxz
aad
dec
sub
aam
fwait
add
cltd
push
mov
scas
push
out
lods
push
sbb
dec
sahf
dec
adc
in
xchg
xor
pop
test
shr
and
repz
idivb
xchg
adc
adc
add
sub
add
shrl
outsl
add
push
mov
test
sub
pop
mov
push
push
inc
data16
add
addb
call
stos
cmpsl
cmovnp
push
lret
adc
pop
dec
sub
sub
lea
fisubrl
icebp
clc
jge
cld
out
adc
add
cld
addl
imulb
jo
push
stc
add
mov
scas
cmp
fsubrl
fcoms
mov
andb
pushf
test
xchg
mov
or
jb
movsb
cli
push
add
dec
cwtl
loopne
addb
inc
pop
add
jno
popf
pop
adc
data16
jno
pop
pop
ja
out
and
xchg
and
xchg
jnp
xorl
xorl
or
mov
xchg
xor
mov
nop
add
sub
call
mov
pushf
mov
mov
mov
pop
xor
xor
insl
stos
xor
and
popf
mov
jecxz
leave
cmp
push
mov
les
jno
xchg
movsb
jge
inc
sbb
jnp
inc
pop
mov
push
cmpl
and
stc
inc
push
sub
push
es
mov
mov
movsl
and
decb
or
addr16
pusha
xor
popa
push
xchg
mov
push
imul
jle
rcrl
loop
jns
or
mov
cmpb
push
push
sbb
add
hlt
pop
lret
mov
push
insb
daa
dec
cwtl
rolb
xchg
lahf
push
fldcw
xchg
int
shlb
in
in
add
pop
pop
sub
push
inc
roll
jg
mov
mov
adc
fistl
loopne
xor
mov
or
insl
or
sub
xor
xlat
lcall
fdivrl
in
lret
and
mov
jmp
lock
jle
cmp
or
cmpsb
enter
pop
sar
daa
cwtl
and
leave
xchg
mov
les
push
xlat
roll
sub
cmp
sbb
sbb
mov
adc
jmp
test
movsl
in
mov
or
stc
loop
mov
mov
mov
mov
push
stos
cmp
pusha
repz
std
negl
pop
push
call
add
sub
lea
add
adc
xchg
sti
xchg
daa
rclb
icebp
jo
sub
add
mov
cld
inc
xlat
mov
ror
or
and
jae
mov
and
ss
or
int
pusha
cmp
loopne
notb
scas
dec
popf
pop
pop
dec
movsl
inc
sbb
mov
sbb
xchg
cmp
sar
pop
imul
push
or
jnp
lock
adc
jmp
mov
mov
sbb
dec
inc
mov
mov
sbb
fstps
pushf
pop
add
xchg
add
ret
mov
pop
mov
insl
je
sub
add
ficoms
push
mov
pop
jl
rorl
daa
les
cmp
sub
mov
jo
scas
lock
and
mov
add
insb
or
add
inc
push
idivl
popf
cmp
repnz
vcvttps2dq
pushf
lods
sbb
add
lds
xchg
push
sbbb
lcall
mov
sbb
cmp
jne
fstpl
mov
sbb
lcall
cmc
and
adcl
mov
pusha
shlb
dec
cmc
ret
andb
popf
jnp
lds
in
cld
in
mov
mov
mov
lret
sbbl
push
mov
push
pop
mov
mov
pusha
push
das
add
mov
jge
std
mov
adc
or
sahf
or
push
mov
int
mov
sub
repz
adc
cmp
push
add
sub
pushf
mov
fwait
filds
cmp
es
mov
mov
sub
ret
scas
in
dec
xor
xchg
stc
lret
call
pop
pop
popa
jle
pop
jae
cld
test
mov
sbbb
and
adc
fdivr
mov
add
or
stos
jmp
imul
aas
cltd
sti
aas
subl
jg
add
mov
dec
sahf
and
scas
jae
mov
xchg
ljmp
loopne
add
mov
mov
test
and
and
fldenv
push
mov
shll
pop
mov
jp
add
cwtl
rolb
dec
sti
in
push
push
cmp
js
nop
leave
out
imul
push
add
jno
mov
int
aam
dec
dec
test
mov
jo
cld
cmp
xchg
stos
push
inc
ja
jp
dec
jle
negb
or
in
mov
popa
bound
push
bound
pop
mov
jo
test
loop
push
out
pop
ljmp
ljmp
pop
loop
push
sbb
pop
lea
pusha
add
jecxz
ds
lods
pop
jae
pop
sbb
fldl
fcompl
pop
mov
and
fimull
sub
cli
push
add
lcall
mov
test
mov
stc
and
clc
test
add
mov
sbb
iret
pushf
mov
xchg
pushf
dec
jo
sub
pop
sbb
xor
fldenv
adc
cmpsb
mov
jne
dec
xchg
sbbb
mov
adc
testb
jne
imul
setge
mov
popf
dec
or
xchg
mov
mov
and
lods
insl
aam
mov
les
cld
cmpsl
pusha
dec
lcall
sub
push
xchg
popa
inc
and
mov
jne
test
jns
jno
adc
xchg
enter
jmp
pop
push
mov
xor
repz
loope
adc
mov
push
punpcklbw
ljmp
sbb
mov
xorl
out
mov
and
aas
and
dec
add
xchg
mov
lcall
pusha
sub
in
xor
mov
pop
sbb
movsb
add
clc
addr16
jle
adc
dec
sub
mov
add
mov
aaa
dec
into
pop
pop
adc
repnz
add
mov
add
cld
stos
pop
xchg
fisttpl
push
dec
shl
loopne
xchg
mov
lahf
and
push
insl
xchg
pusha
and
repnz
adc
das
in
add
outsb
in
imul
inc
add
xor
cmpsb
add
or
mov
dec
popa
fildl
add
or
mov
add
or
push
data16
sub
stc
push
sbb
aas
jmp
insb
cmpb
adc
dec
dec
push
out
jae
fs
mov
mov
hlt
lea
enter
jg
xor
in
push
push
aas
push
xchg
or
imull
shll
movsl
cwtl
push
adc
pop
sarb
int3
rcrl
rcrb
out
loopne
rorl
dec
rcll
das
jb
sub
jecxz
sahf
addr16
fmuls
fadds
push
scas
cltd
or
xchg
popf
and
std
hlt
in
add
sbb
mov
ljmp
test
adc
mov
div
loope
outsb
cmp
pop
and
jmp
ss
dec
negl
adc
cltd
shll
cmp
jmp
loopne
xchg
ret
sbb
scas
shrb
sahf
rcr
push
pop
adc
inc
pusha
and
es
arpl
je
iret
inc
add
cwtl
andb
or
ret
int3
cli
dec
clc
fsts
adc
mov
add
push
xor
xchg
mov
pusha
add
cwtl
inc
leave
and
mov
pop
push
add
stos
mov
cs
xchg
pusha
test
test
add
or
lea
cmpb
dec
loopne
jle
std
add
and
adc
inc
pusha
xor
mov
xor
cltd
das
repz
cmpsl
popa
sub
fdivrl
test
sbb
pop
pop
out
or
mov
jae
pop
pusha
lret
fisttps
adc
mov
cs
pop
jge
push
movsl
mov
xchg
cmpsl
jns
imul
mov
or
mov
adc
imul
adc
pop
jmp
cs
and
aam
lcall
pop
loopne
andl
or
data16
in
pop
bound
adc
sbb
lock
pop
add
test
mov
or
adc
and
fnstsw
inc
jl
xorb
loopne
clc
out
mov
mov
mov
das
and
add
and
loope
lock
iret
jp
icebp
andl
lea
jg
xchg
dec
loop
adc
dec
bound
loopne
adc
sub
imulb
mov
das
xor
add
loope
add
outsl
dec
push
and
jecxz
add
sub
push
pop
or
add
xor
cltd
cmpsl
add
sbb
mov
mov
pop
cld
pop
sub
faddl
shll
mov
rcrb
insl
xchg
lods
and
adc
push
mov
or
test
mov
jbe
sahf
mov
mov
fimuls
pop
test
sub
jecxz
mov
pop
sub
mov
sbb
mov
pop
cltd
add
sbb
and
inc
notb
add
add
mov
xor
xchg
add
xchg
je
cli
xor
and
call
lcall
push
and
loope
mov
ljmp
add
jno
add
sbb
scas
xchg
xchg
sub
add
fists
sub
jl
push
xchg
stc
xchg
pusha
repz
arpl
jecxz
sub
in
mov
pop
lcall
adc
loope
jl
adcb
movsb
xchg
and
push
daa
int3
inc
sar
sub
adc
mov
subb
cmp
jmp
push
jl
push
mov
cld
call
xor
mov
jns
add
push
and
mov
pop
std
push
cmc
clc
pusha
adc
push
mov
loopne
push
ja
mov
sub
test
sti
jns
adcl
andb
loope
pop
scas
movsl
add
xchg
cmp
fldt
daa
and
or
add
jb
mov
pop
fs
xchg
and
sbb
pusha
movsl
jae
add
in
fiaddl
les
pop
nop
mov
or
dec
orl
sub
pop
test
fprem
pop
xchg
or
and
mov
inc
push
inc
in
mov
add
mov
inc
in
aam
lahf
loopne
add
xor
add
push
pusha
mov
sti
push
xor
ret
adc
xor
mov
add
jno
and
int3
pop
sarb
mov
or
xchg
ret
adc
dec
mov
jb
pop
dec
add
push
nop
movsl
xchg
mov
sbb
xchg
cmp
cmpsl
sub
jns
sbb
in
push
pop
mov
popa
mov
cs
dec
and
cmc
xor
daa
std
mov
in
or
inc
jmp
test
jle
mov
rcll
jmp
mov
in
and
sbb
call
repz
xchg
cmp
pop
lret
fldcw
addr16
inc
adc
mov
push
push
int
iret
in
add
int
jecxz
rorl
sbb
push
push
or
cld
fsubl
jl
cmp
sbb
sahf
pusha
pop
push
test
or
rclb
push
lods
data16
imul
lcall
xor
jle
add
pop
movsb
imul
sub
jno
mov
out
jns
pop
pushf
push
mov
sbb
fs
push
inc
lcall
and
imul
fmull
pop
pop
je,pn
mov
loope
add
ja
and
push
cmc
xchg
jno
push
xor
sub
or
fstpt
or
shlb
clc
push
adc
inc
scas
and
mov
sbb
dec
pop
addr16
cmp
int3
pop
add
lock
push
mov
push
jle
sbb
mov
or
push
movsb
dec
adc
stos
sub
mov
test
inc
pop
add
adc
std
lods
imul
leave
iret
sub
dec
je
adc
movsb
lods
jl
imul
jmp
lcall
mov
dec
shrl
mov
xchg
adcb
add
shlb
or
jmp
sub
sub
cmp
mov
pop
out
add
xchg
outsl
rcr
repnz
mov
movl
mov
cli
sub
fldenv
dec
loop
std
push
cmp
lret
add
mov
cmp
scas
jl
aad
pavgw
lret
add
jle
add
lahf
in
lods
jns
insb
je
add
adc
add
inc
mov
inc
add
jbe
cmpl
and
aad
stos
or
mov
push
dec
adc
sbb
imulb
orb
adc
ret
pop
push
or
gs
sub
sbb
dec
add
popf
andb
pop
push
rcrb
pop
cwtl
hlt
mov
dec
xor
shlb
jl
icebp
test
mov
aam
sbb
mov
movsl
leave
mov
js
sub
add
cmp
inc
ljmp
sub
rcrb
mov
aas
pop
push
sub
inc
dec
testb
in
repz
cmpsl
or
lock
sbb
push
inc
cmpsb
insl
push
or
pop
mov
mov
mov
ds
cmp
push
shlb
dec
dec
pop
add
bound
push
pop
add
dec
add
pop
outsb
adc
sahf
xor
and
mov
sbb
push
jne
dec
jecxz
push
xchg
aaa
lock
mov
push
iret
dec
out
xchg
add
sahf
lea
ret
mov
inc
inc
push
and
mov
sbb
in
push
scas
lds
clc
test
sbb
movsb
add
mov
adc
jb
adc
pop
jno
nop
jge
sbb
mov
xor
jae
add
adc
adc
mov
in
pop
mov
js
or
mov
xlat
shrb
test
add
mov
fwait
xchg
ret
mov
sbb
sbb
mov
inc
push
jmp
aaa
call
xchg
sti
jmp
mov
pop
stos
or
inc
aaa
cwtl
mov
push
adc
nop
lret
stc
mov
aas
lds
cmp
sub
mov
into
jnp
test
scas
test
inc
and
lret
out
mov
jnp
lahf
nop
stc
ss
std
adcb
dec
xchg
adc
adc
mov
incl
movsb
xchg
ljmp
ja
movsl
xor
jnp
mov
dec
loope
or
add
cmp
nop
fdivl
pop
je
popf
xchg
insb
rol
sbb
inc
sahf
add
imul
jbe
jno
add
push
fstps
mov
subb
mov
add
lret
shrb
mov
add
or
jle
mov
sub
mov
xlat
mov
lret
andl
fs
test
jg
adc
clc
push
adc
inc
cltd
fs
push
pmaddwd
push
dec
push
pop
inc
stos
mov
aam
xlat
leave
insb
inc
add
cmp
loopne
and
or
jg
jp
repnz
call
dec
lcall
imul
testb
iret
lahf
xor
inc
movsb
testb
scas
lcall
mov
jo
sarl
roll
sbb
add
jae
jl
jge
out
testb
xchg
ret
adc
lea
divl
add
ljmp
push
jl
inc
loop
add
popa
inc
jns
xor
push
sbb
jge
sbb
outsl
clc
mov
cli
adc
push
mov
xchg
add
lds
mov
or
add
scas
loopne
cwtl
orl
xlat
inc
ret
nop
pusha
imull
call
pop
add
test
lods
lahf
jmp
je
scas
clc
hlt
inc
jae
add
scas
fisttpl
lcall
and
add
pop
mov
daa
imul
mov
xchg
xor
test
js
ficoms
adc
push
cmp
xchg
add
push
subb
jg
push
lods
and
int3
adc
mov
fiaddl
pop
inc
mov
std
mov
enter
inc
sub
stos
jo
xchg
push
and
xorl
loop
add
pop
pop
dec
jge
pop
js
jb
pusha
mov
xchg
sbb
mov
add
sahf
andl
push
dec
test
or
into
xor
inc
mov
add
lock
pop
xchg
push
xchg
inc
xchg
subl
dec
inc
cmp
mov
imul
shlb
popa
test
jo
aam
test
adc
mov
loop
ret
jbe
ljmp
xorb
push
mov
and
adc
ret
add
inc
dec
inc
push
mov
mov
fmuls
pop
sub
into
and
test
add
pop
push
sti
add
xor
inc
or
and
xor
dec
sub
push
mov
cmc
lds
push
add
loope
roll
sbb
or
jmp
decl
or
fsubrl
stc
add
pop
pop
mov
adc
jns
add
jne
add
sarl
dec
lds
adc
mov
mov
push
or
mov
jnp
push
loopne
mov
inc
cmc
mov
cmp
mov
les
sbb
sub
pop
andl
loope
or
jg
addr16
adc
mov
add
int
add
and
lahf
sarl
add
mov
and
jmp
pop
add
mov
cltd
xor
mov
decl
sub
or
sub
clc
in
add
push
xor
pop
dec
inc
add
and
mov
jmp
nop
jnp
jo
pushl
sub
cli
xchg
push
xor
lock
dec
stc
pop
clc
dec
aas
jecxz
bound
or
jmp
add
mov
or
cld
js
cmpsl
adc
xchg
js
rep
outsb
xor
mov
mov
or
xchg
add
fistps
aam
add
ljmp
ljmp
je
xchg
mov
add
nop
pop
jno
pop
shl
sub
loop
in
xchg
lods
and
add
lahf
pop
adc
mov
daa
xor
jmp
ja
sub
fcomps
daa
jl
out
mov
cmp
mov
add
imul
sarb
pop
out
adc
cmp
adc
mov
pop
or
push
pop
loop
cmp
push
out
push
popf
push
sbb
mulb
popf
jne
jbe
imul
or
xchg
aaa
mov
jnp
adc
rorb
lret
adc
mov
cmp
repnz
push
mov
repnz
cmp
ret
loope
out
in
aam
cmc
test
pop
add
fstl
scas
pop
in
nop
jl
jge
stc
push
fimuls
mov
mov
daa
and
xchg
push
scas
les
test
add
out
and
sub
into
adc
cli
loope
and
popa
loopne
shll
pusha
mov
cmpsb
test
sub
jg
push
lods
push
inc
lret
popf
adc
pop
scas
orl
cmp
clc
popa
scas
sbb
popf
test
push
orb
push
add
in
lods
std
jnp
leave
ret
rcll
sub
adc
sbb
push
jg
cmpb
xchg
jg
cmp
xchg
addr16
jmp
xlat
iret
add
mov
adc
dec
out
mov
and
test
push
pop
int
mov
and
adc
fistpl
orb
ljmp
test
jge
mov
idivl
push
inc
xorb
cmpsb
add
fld
jmp
jns
in
fadds
rcr
out
call
dec
xor
int
sbb
imul
mov
mov
add
adc
pop
addr16
bound
lea
mov
add
add
dec
dec
lea
cmpsb
sbb
push
loop
in
fisttpll
imul
in
in
lock
or
mov
fisttpll
lcall
adc
jne
add
into
mov
sub
xchg
shrl
mov
es
mov
add
bound
outsl
fwait
inc
jnp
jns
add
hlt
pop
mov
mov
and
jne
sub
aam
nop
dec
hlt
mov
add
or
adc
pop
mov
into
das
push
adc
add
pop
add
push
adc
jmp
cwtl
push
daa
mov
aam
shrb
aaa
pop
stc
daa
adc
inc
nop
sbb
sbb
cmpsb
add
cmpsl
mov
inc
push
sub
shll
and
sbb
jecxz
push
dec
enter
loope
in
cmp
lock
jo
pop
mov
cmp
sbbb
out
push
test
inc
or
cld
addr16
mov
loopne
lahf
push
add
xchg
inc
insb
pusha
push
adc
std
inc
or
scas
pop
fs
push
fcomps
adc
add
cmp
bound
cmpsb
xchg
outsb
push
iret
lods
fadds
clc
or
fstpl
fimuls
xor
fs
fcmovbe
addl
inc
shl
fimull
add
mov
inc
js
inc
icebp
cmp
mov
fcmovbe
inc
addl
sub
addb
stc
push
stos
inc
pop
js
or
xchg
shl
add
fimull
enter
ds
inc
add
stc
mov
and
or
cmp
out
pusha
dec
xlat
mov
and
xor
push
aaa
xor
cmp
sub
inc
lret
ja
xor
insb
cmpsb
pop
add
pusha
fstl
mov
in
or
dec
pop
int3
ret
stc
int
sarl
into
pusha
mov
add
sahf
enter
mov
aad
nop
add
sub
mov
cmpb
in
arpl
rcrl
adc
mov
rsqrtps
mov
dec
pop
or
out
xchg
pop
into
jo
or
add
push
push
lods
mov
clc
mov
mov
adcb
sub
sub
mov
push
add
in
loopne
add
cmp
or
pop
das
pusha
mov
popf
adc
nop
in
adc
jl
pcmpgtd
sub
rcll
pop
lods
pop
mov
xchg
jno
inc
and
roll
xorb
xor
jg
dec
mov
xor
dec
hlt
mov
cmc
movswl
cmpl
push
push
dec
loope
out
mov
pop
add
pop
jnp
push
jmp
mov
add
xlat
call
push
dec
movsb
stc
jmp
adc
mov
mov
loope
xchg
sbb
filds
jp
js
fcmovnbe
adc
jno
add
mov
xchg
int3
in
jno
mov
push
test
cmp
push
jbe
mov
or
xor
popa
jl
inc
sbb
fcmovnbe
and
jmp
addl
js
imulb
rol
cwtl
and
push
dec
ja
mov
xchg
popf
in
add
jg
xorb
subl
in
sub
dec
push
out
and
sub
jae
add
test
mov
add
push
mov
dec
pop
cmpsb
dec
and
hlt
and
push
leave
nop
add
jmp
aas
add
stos
xor
fisttps
lods
and
fimull
add
rorl
cwtl
testl
push
push
jg
int
inc
jno
inc
add
lock
aas
and
rolb
add
xchg
cmp
notb
cmc
ja
mov
jle
or
push
mulb
es
pop
add
pop
mov
adc
xor
cmpsb
ret
xchg
xor
cmp
aam
aam
imul
sub
enter
sbb
sbb
and
bound
fiaddl
imul
jl
dec
jno
mov
mov
mov
inc
addr16
jbe
mov
pop
adc
gs
cli
dec
mov
cwtl
and
sub
adc
pop
sbbl
mov
push
adc
fwait
std
adc
jae
adc
xlat
pusha
enter
xchg
out
pop
inc
jle
add
frstor
repz
imul
mov
jmp
mov
jp
sti
pop
sub
cmp
inc
sti
xchg
sub
and
jmp
add
mov
mov
sti
add
push
inc
jge
in
sbb
loop
popf
sbb
sbb
mov
cmpsb
push
sti
imul
sbb
jg
pusha
inc
xchg
dec
sub
dec
nop
mov
push
add
pop
push
jl
adcb
add
movsb
jbe
pop
fisttpl
shl
xor
or
lods
sub
rorl
stc
push
shll
inc
ja
movl
clc
add
xchg
out
xlat
push
add
jmp
mov
and
mov
insb
insl
mov
fsubp
add
mov
nop
dec
xor
mov
scas
test
fistpll
jl
add
xchg
dec
stc
xor
jne
decb
mulb
mov
cmpsl
mov
lret
jle
movsb
add
shrl
xchg
mov
pop
jo
push
mov
cmp
push
cld
cld
sub
stos
cmc
sbb
dec
pop
int3
shl
fs
out
pop
je
push
dec
dec
jmp
shl
outsb
fsubl
sbb
pop
xlat
dec
sbb
stc
dec
or
jo
mov
pusha
mov
add
and
enter
xor
loope
fdivrs
ret
loope
ss
pop
pop
xor
test
sbb
mov
cmpsl
outsb
push
dec
and
sub
lcall
cmp
cs
movzwl
jp
xchg
sti
xchg
jno
clc
sbb
aas
mov
add
enter
clc
bound
push
or
sub
pushf
mov
mov
inc
test
in
sbb
mov
or
jno
mov
and
leave
cmc
fs
sbb
jns
mov
loopne
jg
add
mov
pop
push
addl
mov
mov
cmp
imul
and
push
mov
mov
mov
adc
clc
adc
jle
leave
pop
jg
call
sub
push
mov
or
mov
sub
pop
pop
push
sbb
push
pop
inc
push
mov
mov
or
lods
repnz
out
movsl
inc
sbb
lds
sarb
inc
xchg
sub
mov
xor
sbb
cs
fcmovnbe
fiaddl
sbb
jl
push
add
int3
sub
mov
add
push
stos
push
mov
sbb
int3
lret
mov
pop
shlb
jp
nop
mov
shrl
pop
popa
mov
cltd
or
mov
xor
sub
pop
gs
jo
xchg
ds
push
adc
pop
mov
repnz
mov
sub
push
or
and
and
ffree
outsb
xchg
add
test
push
popf
inc
clc
ljmp
and
add
loop
mov
push
mov
inc
pop
mov
cs
jnp
mov
stos
pop
rcr
inc
mov
movsb
push
loope
push
cltd
out
gs
sbb
aad
loopne
or
jb
mov
xor
call
mov
ret
xor
sub
loope
mov
sbb
mov
mov
pop
scas
add
add
push
add
test
ror
insl
and
or
dec
adc
xor
inc
sub
pop
pop
loope
sub
stc
outsb
shlb
jb
mov
mov
popf
xchg
mov
into
add
sbb
sbb
mov
sub
aam
sub
sti
jb
xor
add
cmp
mov
sbb
sbb
cmp
orb
mov
push
and
arpl
test
adcl
in
stos
xchg
cmp
popf
repnz
iret
cmc
dec
cmp
sbb
jle
and
pop
push
sub
orb
scas
hlt
sub
and
mov
inc
sub
and
mov
pop
xchg
cmp
mov
xchg
fcoml
xchg
inc
sar
popa
lods
sbb
add
loop
xchg
pop
fsubl
jno
cmp
mov
daa
jmp
xchg
loope
cmp
jno
mov
mov
inc
addr16
push
adc
pusha
xor
repz
popa
and
lods
int
sbb
dec
sub
lahf
lret
xchg
les
stos
rcll
orb
pop
xchg
sbb
xchg
adc
stos
jecxz
inc
mov
jp
repz
pop
inc
mov
add
add
xchg
ret
nop
je
add
lods
mov
push
cmp
mov
aam
sbb
xchg
push
pop
enter
and
and
mov
dec
xor
aaa
pop
test
ds
add
jp
pushf
insb
mov
das
cmp
test
or
adcb
or
in
mov
mov
out
fsubrl
and
nop
fmull
sti
outsl
enter
movsb
adc
add
mov
iret
and
rorb
test
dec
cmpsb
fs
pusha
mov
outsl
mov
daa
popa
aaa
mov
mov
daa
xchg
lock
dec
sbb
mov
sbb
daa
scas
std
pop
push
in
jno
das
mov
mov
loopne
add
adcb
dec
jmp
fmuls
out
cld
pushf
out
arpl
pushf
aad
add
cmp
mov
push
repnz
or
negl
add
in
xchg
xchg
push
dec
cld
sub
and
add
push
and
push
out
inc
jne
aas
add
int
lods
das
mov
cltd
jae
in
and
sarl
fiaddl
out
mov
fs
dec
add
mov
xchg
pop
mov
mov
dec
je
mov
cltd
cmp
mov
and
add
lods
pop
leave
fnsave
fcoms
mov
hlt
mov
mov
push
add
mov
repnz
out
xchg
repz
popf
dec
and
jmp
add
sub
popf
xor
movsb
rorl
sahf
jle
inc
sbb
mov
and
out
fsubrl
xchg
mov
faddl
testl
sbb
mov
sar
jo
arpl
loopne
popa
in
pusha
dec
inc
dec
add
adc
rclb
icebp
das
cmp
pop
dec
aam
sub
inc
push
psrlw
sti
roll
shrl
lods
adc
enter
or
dec
jle
das
sti
mov
cmpsb
push
jae
push
cmp
mov
mov
and
shll
scas
ja
cmp
cmp
mov
movsb
sub
push
sbb
mov
test
ficomps
pop
mov
xchg
imulb
enter
or
push
xchg
xor
cmpsl
inc
cmp
and
jnp
insb
or
out
mov
push
and
mov
jle
jno
inc
add
loope
roll
aas
scas
and
clc
inc
xchg
push
pop
test
cwtl
pop
xor
sub
bswap
sbb
jnp
xchg
jp
movsb
jne
mov
xor
jnp
mov
add
inc
pop
dec
shr
cmp
orb
mov
shll
push
les
adc
out
mov
mov
adc
jnp
add
add
inc
dec
stos
add
int
sub
inc
aam
ret
jle
pop
in
test
fbld
ss
jne
cmp
push
dec
pop
leave
pop
sub
lahf
rorb
xchg
xchg
das
mov
adc
ret
xchg
add
jae
clc
jecxz
sbb
adc
insl
mov
shl
testb
shl
xor
sbb
fcomp
mov
sbb
hlt
sbb
aad
mov
mov
test
mov
imul
dec
mov
jne
add
aad
pop
jae
das
push
cmc
mov
pop
dec
pop
jge
pop
mov
pushf
sbb
movsl
test
xor
shl
adc
fimuls
faddl
js
jmp
sub
les
cwtl
pusha
es
jp
add
mov
pusha
bnd
dec
pop
xor
mov
ret
popa
nop
outsl
jo
adc
imul
rorl
daa
dec
jb
test
add
fs
add
dec
loopne
dec
nop
add
pop
mov
fwait
add
rcll
fmul
push
add
or
in
sub
popa
or
mov
add
not
sub
shrl
daa
mov
cs
jge
xor
loope
iret
shlb
ficoml
pop
out
in
fcos
sub
aas
mov
push
and
or
xorl
cltd
mov
push
outsl
outsb
mov
je
shr
fsubs
int3
testb
mov
das
fwait
ljmp
stos
repnz
add
test
mov
or
add
inc
adc
lret
mov
rorb
dec
popa
mov
push
lahf
and
adc
daa
stc
sahf
adc
adc
mov
mov
mov
pop
cmpl
push
inc
xor
int
mov
hlt
lea
int
pop
shl
mov
pop
mov
inc
fimull
push
ret
iret
in
adc
or
jmp
xchg
adc
pop
pop
adc
out
and
or
mov
mov
add
mov
es
outsl
mov
notb
jle
add
bnd
stos
int
jnp
and
outsl
jo
mov
out
fimuls
mov
cs
repz
scas
adc
gs
fdivrs
aas
push
loop
sahf
add
pop
out
mov
adc
mov
jmp
adc
mov
adc
or
or
pop
cmc
sbb
int3
mov
sub
cmc
mov
movsl
fs
jp
dec
pop
ficompl
sbbb
icebp
push
xchg
pop
ljmp
xchg
inc
lods
gs
add
sbb
test
das
jp
adc
pusha
add
lods
stc
inc
adc
sbb
mov
in
pusha
mov
push
and
add
add
xor
pusha
data16
adc
popa
xchg
lcall
jge
xchg
loop
mov
cmpsb
push
or
pop
jno
inc
repz
adc
push
arpl
add
dec
mov
inc
clc
arpl
aam
fsubl
sub
or
sbbl
xchg
mov
andl
mov
pop
enter
fdivp
add
loop
stc
aad
fildll
imul
inc
dec
out
push
pop
cltd
sbb
sbb
sub
or
outsb
mov
pusha
mov
add
nop
push
mov
sbb
adc
iret
js
decb
inc
inc
or
push
mov
jo
cmp
push
ret
pop
mov
inc
sbb
push
nop
push
test
ljmp
adc
jp
out
push
push
leave
cltd
push
int
adc
pushl
loop
cmpsb
fimull
int
jmp
xlat
ss
inc
cmp
pusha
jmp
popf
adc
and
or
push
cmp
xor
ja
int
ds
mov
adc
add
mov
mov
sub
push
push
xor
pop
mov
out
mov
cs
notb
jns
into
inc
mov
sub
mov
add
lods
and
xchg
hlt
adc
lcall
lds
aam
xchg
mov
inc
adc
mov
iret
and
cmp
sbb
and
loope
cmp
jae
mov
add
cmp
push
cmp
lahf
lret
testl
dec
scas
xlat
sub
sbb
shrb
loopne
add
fs
les
cmpl
jg
add
push
rcrb
add
mov
imul
pop
dec
popa
mov
lods
mov
fwait
ret
cs
sbb
xchg
sbb
pop
in
jle
push
jg
cmpsb
sbb
cmp
cmc
int
loop
loopne
xchg
jne
sub
cld
inc
int
pop
sub
mov
dec
in
icebp
loop
sarb
lds
outsl
jp
add
mov
jg
inc
mov
es
enter
jo
pop
and
sub
add
pop
shl
push
cmpsl
adcb
adc
adc
push
out
jbe
std
pop
adc
dec
rolb
dec
push
sub
push
fstpl
and
lds
jb
xor
clc
aas
subb
or
lods
cld
mov
push
mov
jmp
test
hlt
push
add
idivl
add
pop
mov
jns
inc
jo
xchg
bound
push
pusha
and
adc
fisubs
pop
pusha
jbe
adc
pop
orl
add
add
and
push
inc
push
add
repz
gs
lock
mov
stos
popf
bound
pop
mov
push
xor
mov
jg
sub
xor
jae,pn
mov
aam
cltd
sbb
adc
push
inc
jo
mov
pop
outsb
mov
push
add
stos
push
add
mov
adcl
aaa
das
lahf
imul
mov
add
lds
testl
dec
push
sti
pop
pusha
pushl
push
xchg
sub
rorb
push
add
mov
pushf
cmc
fs
imul
jo
mov
mov
mov
push
inc
mov
adc
add
ljmp
pop
mov
add
mov
mov
aad
mov
xchg
shlb
sbb
pop
addr16
mov
inc
cltd
xchg
test
pushf
jle
dec
into
sub
in
jmp
ljmp
jb
icebp
pop
cmp
mov
jl
call
dec
mov
out
mov
add
mov
push
cltd
out
and
sbb
leave
out
add
data16
inc
in
push
stc
outsb
mov
movsl
add
jg
insb
jno
sub
jne
aad
mov
aam
repz
loop
dec
sarl
lret
outsb
or
or
fildll
int
addb
sub
mov
xchg
sub
push
sub
dec
pop
clc
fs
and
cmpsl
add
dec
fimuls
jg
pop
test
pop
pop
aaa
push
xchg
loop
mov
test
push
fwait
mov
push
mov
inc
rol
sub
ds
cmp
imul
add
lea
mov
in
sti
shlb
lcall
or
adc
cmp
inc
cmp
pop
mov
adc
sub
int
je
stos
push
adc
or
jge
adc
and
out
and
adc
mov
call
shr
fnsave
jnp
push
and
add
xchg
mov
mov
dec
ud2
mov
bound
jno
sub
push
and
mov
out
jo
inc
mulb
in
mov
into
int3
leave
dec
inc
xchg
cmp
adc
nop
mov
ds
mov
or
sarl
or
je
dec
mov
lds
mov
mov
lock
xchg
jbe
add
jne
sbb
mov
lret
inc
test
and
mov
pop
mov
incl
loope
popf
leave
or
test
xchg
sub
pop
push
sub
pop
push
stc
jnp
sub
test
sbbb
jmp
arpl
addr16
decl
enter
mov
repz
adc
decb
cli
inc
sub
adcl
push
mov
or
orb
ss
divl
add
imul
fdivrl
sub
enter
mov
cld
and
std
add
xor
push
push
in
icebp
or
rorb
mov
adc
adc
adc
xchg
mov
lcall
push
pop
out
add
insl
and
popa
push
ss
int
jg
or
mov
clc
sbb
fs
xchg
sbb
or
sub
sub
cmpb
hlt
dec
fiadds
xchg
cltd
pop
fs
mov
mov
sub
push
add
sbb
pusha
add
imul
add
push
pop
insb
pop
repnz
add
sub
or
hlt
add
and
pop
sarb
dec
daa
cmpl
inc
ja
push
fwait
pop
inc
mov
pop
lcall
ds
xlat
outsl
push
in
leave
loope
cmp
negb
pop
add
pushl
and
lods
hlt
mov
adc
lods
lds
lret
sahf
dec
stc
lret
pop
sbb
or
jmp
pusha
inc
sbb
ljmp
scas
fiadds
add
cs
add
cli
mov
mulb
fninit
adc
pop
and
push
inc
in
add
dec
sti
inc
cmc
xchg
xchg
mov
or
jns
das
int
fs
pusha
xor
push
loop
mov
loopne
push
sbbl
shlb
call
mov
sahf
pushf
pop
shl
jmp
and
pop
mov
inc
push
nop
mov
in
xchg
call
xorl
fcmovnbe
adc
inc
lea
pop
push
push
push
pushf
cmpsb
inc
mov
lds
paddd
and
and
sbb
fidivrs
mov
scas
xor
inc
mov
push
mov
jae
push
clc
add
gs
mov
sub
pop
mov
or
xor
in
add
and
mov
lret
sub
insl
fs
ret
push
fstps
and
pusha
cwtl
pusha
xor
or
add
xchg
mov
popa
pop
mov
lea
sub
arpl
or
cld
inc
xchg
pop
dec
fdiv
divb
xchg
mov
adc
add
inc
mov
scas
clc
out
cltd
daa
add
cmp
bound
int3
insl
loop
in
aaa
mov
mov
inc
ret
pop
xchg
cmc
mov
xchg
jns
push
lret
cld
loopne
mov
push
or
xor
xor
jg
sbb
sbb
mov
sbbb
pop
ss
in
subl
add
mov
xor
dec
or
add
sbb
pusha
ss
lock
add
dec
cli
pop
adc
mov
pop
rol
and
scas
movsb
negb
popa
mov
imul
mov
hlt
pop
fwait
cmp
insl
imul
jp
loope
int3
and
adc
lret
testb
gs
pop
mov
rorl
lock
lahf
or
test
mov
loope
divb
movsl
rclb
adc
pop
pop
test
mov
push
insb
ficoml
mov
mov
movsl
mov
ret
test
sub
lcall
xlat
js
add
into
xchg
test
and
xchg
pusha
cwtl
das
add
hlt
xlat
loopne
mov
inc
xchg
mov
xor
rol
imul
pop
jns
mov
xchg
mov
xchg
out
test
stos
add
mov
and
icebp
dec
sub
rol
out
pop
pusha
cmpsl
jl
mov
mov
pop
mov
jbe
xor
adc
int3
dec
add
mov
fldcw
ja
lods
ret
in
dec
xchg
adc
push
push
loope
das
mov
loopne
sub
pop
adc
add
cmc
mov
add
movsb
idivl
mov
mov
push
or
xor
pop
fstps
lret
cmc
dec
cmpsb
inc
mov
adc
cmp
cld
add
pop
mov
push
mov
andb
in
mov
push
sub
lods
mov
lods
and
and
js
adc
xchg
xchg
test
shll
or
xor
mov
jbe
fwait
dec
jp
out
pop
push
jb
mov
incb
inc
fldt
pop
dec
sub
daa
pop
add
in
pusha
inc
add
mov
add
out
mov
sbb
lods
pushf
popa
push
cmc
mov
sbb
in
icebp
int
dec
pop
add
imul
push
push
adc
fildl
mov
insl
outsb
pop
push
push
sub
adc
mov
clc
in
shl
movsb
scas
inc
mov
xchg
push
addr16
fcmovnbe
lret
push
out
popa
mov
pop
add
sbbb
in
aam
push
add
cmp
jmp
cmp
cmp
scas
and
inc
and
jg
lcall
cmp
ss
popf
aad
sbb
mov
xor
dec
rol
adc
adc
lock
mov
sbb
jmp
cltd
out
cmp
inc
psubw
cwtl
inc
stos
es
popf
fldenv
leave
jne
jbe
fmull
es
cmp
mov
xor
jmp
mov
add
adc
xchg
fidivl
ss
or
jle
mov
lods
test
repz
push
xor
adc
inc
adc
gs
inc
jle
jno
push
add
rcrl
in
les
pop
mov
sub
mov
sti
dec
pop
loopne
mov
xchg
mov
in
sub
dec
or
rorb
pop
mov
jbe
or
xchg
add
lahf
aad
outsl
sahf
cmp
add
xor
mov
test
adc
mov
push
xchg
mov
sub
out
mov
add
mov
sub
xor
jno
lret
inc
lea
stc
and
fdivrp
sahf
add
push
and
push
jle
jmp
push
imul
or
pushf
call
clc
bnd
jne
or
arpl
inc
xchg
dec
push
jnp
mov
xor
inc
dec
int3
test
adc
pop
les
mov
push
inc
mov
pop
and
ret
add
addr16
mov
xchg
test
lods
cwtl
loop
add
es
or
pop
or
or
sub
dec
xchg
push
ds
rcrb
and
pusha
or
popa
loop
mov
nop
sub
push
adc
cmp
push
notb
add
ljmp
imul
xchg
jbe
ficoms
fwait
add
and
or
scas
mov
divl
inc
xchg
ljmp
add
jno
add
clc
mov
in
loop
pop
clc
mov
mov
mov
sub
daa
mov
add
jno
das
dec
imul
cs
push
repnz
cwtl
mov
pop
mov
add
sub
rcrl
add
inc
add
fs
shlb
add
pop
xor
add
sub
cli
cmp
or
imul
xor
pop
push
dec
decb
movsl
ret
mov
cmp
pop
mov
sub
je
pusha
mov
pop
in
inc
inc
push
stos
mov
stos
add
add
out
cmp
push
add
pop
sub
or
mov
xchg
mov
jmp
inc
mov
inc
adc
xchg
and
aad
ljmp
jmp
xor
leave
cmc
jns
adc
mov
push
ret
loopne
xchg
jmp
test
xor
add
jne
jns
inc
mov
add
push
sbb
imul
push
insl
fiadds
repz
pop
fstl
xor
std
btr
ret
pop
adc
mov
inc
repz
loopne
mov
ret
pop
or
cltd
arpl
test
add
fldcw
cmp
outsb
arpl
mov
xor
int3
loop
xor
imul
int
adc
jmp
hlt
pop
add
cltd
gs
cmpsb
das
pop
mov
add
adc
cmp
icebp
mov
push
xor
pop
std
jae
mov
hlt
fisubl
rclb
xchg
test
mov
addr16
test
ja
out
cmpsl
rolb
mov
mov
xor
add
adc
add
dec
jae
sbb
jno
fists
or
cmpsb
mov
inc
pop
add
mov
sahf
sbb
mov
jl
fisttps
sbb
movsl
cmc
repz
or
orb
call
mov
jno
inc
sahf
aas
and
add
mov
xchg
xor
and
adc
mov
xchg
test
sub
push
cmp
lret
inc
je
pop
outsb
mov
stos
mov
push
flds
xorl
push
add
leave
loopne
cmp
mov
xchg
ljmp
adc
mov
imul
pop
and
mov
das
fisubl
xchg
jecxz
push
jbe
xchg
mov
aaa
mov
fldcw
and
loope
cs
repz
ret
dec
lret
or
mov
push
xchg
or
jle
mov
or
outsl
sub
lock
ficoml
mov
ds
je
dec
imul
out
ljmp
movl
cmp
sub
inc
pop
adc
sub
sbb
add
jle
or
out
and
hlt
mov
inc
test
add
mov
xchg
or
fidivs
test
test
adc
dec
adc
hlt
cwtl
add
mov
pushf
stc
dec
out
adc
sub
icebp
xor
and
hlt
xchg
jmp
and
push
test
lds
sbb
mov
mov
mov
inc
jne
stos
cld
add
mov
outsb
outsb
sbb
cmpsb
cli
sub
imul
lock
ficomps
popa
mov
adc
push
add
in
ds
pop
or
lds
out
pop
outsb
pop
add
fadds
enter
mov
add
outsl
pop
gs
mov
js
xchg
fcoml
call
inc
cwtl
jno
test
je
pop
pop
daa
cli
mov
pop
jmp
fisubs
shl
nop
inc
jae
cmpsb
push
xor
or
xchg
movsb
nop
adc
mov
fnstcw
out
xor
mov
sti
dec
popf
out
or
add
cld
pop
repz
sti
add
pop
mov
and
jns
inc
pop
jnp
add
lods
das
insb
loop
dec
imul
sub
pusha
stos
jae
imul
ds
or
popf
sbb
adc
cmp
adc
push
mov
hlt
iret
hlt
adc
cmp
push
push
ja
cmpsl
sti
sbb
and
mov
pop
test
ficompl
popa
xor
xchg
mov
cmp
cmp
adc
mov
inc
xchg
addr16
enter
add
jae
or
jbe,pn
jmp
push
and
xchg
pusha
xchg
mov
das
push
push
inc
in
stos
es
and
pusha
jecxz
gs
push
mov
mov
adc
push
sbb
or
adc
es
cmp
sbb
xchg
jbe
jmp
sbb
adc
jae
jecxz
dec
inc
pop
lock
jle
lds
or
jp
pop
addr16
push
push
ljmp
pop
xchg
dec
xchg
std
clc
in
mov
stc
push
mov
mov
jmp
and
mov
in
stos
mov
cltd
and
dec
fldl
test
sub
rcll
movsb
lods
call
insb
dec
xor
pop
inc
mov
push
add
jne
ret
call
pop
fdivl
mov
and
and
mov
push
mov
jbe
dec
fldcw
outsb
add
clc
adc
movb
daa
sub
and
jmp
jo
sub
es
stc
jbe
mov
add
filds
lret
fldt
loope
cmpsb
sarb
push
pop
lods
ds
negb
nop
mov
add
outsb
mov
cwtl
jo
cmp
cmp
pusha
mov
subb
push
mov
js
inc
add
adc
nop
mov
jp
ss
aas
popf
xor
adc
adc
jns
test
xor
loopne
inc
das
scas
aad
mov
adc
andb
mov
mov
adc
cs
jae
pop
mov
pusha
loop
into
pop
cltd
ss
js
sbb
or
mov
sub
mov
or
adcl
add
xchg
sub
inc
loope
sahf
testb
stos
xchg
cmp
mov
in
add
xor
add
fimull
rclb
jno
inc
addr16
sahf
and
push
add
add
or
leave
fwait
jge
cmc
cmp
pop
cmp
xchg
mov
jmp
adc
sub
cmpsb
pop
push
and
test
push
scas
or
mov
stc
lret
test
sbb
push
pop
shrb
pushf
push
lods
push
out
insl
filds
fcompl
ds
mov
inc
fdivs
mov
cld
movsb
cmp
fidivs
sub
popf
mov
mov
stos
aas
mov
mov
into
popa
mov
xor
lcall
cmp
mov
int3
dec
inc
dec
sub
and
int
hlt
lods
pop
xor
fdivl
add
push
ret
aad
sti
and
dec
je
lret
mov
paddusw
add
mov
and
das
sub
adc
rclb
ja
hlt
pop
xor
and
fs
gs
xchg
xor
mov
enter
pop
cmp
scas
mov
cmp
or
cld
sbb
push
mov
mov
mov
addb
pop
mov
jmp
fwait
outsb
jmp
mov
xchg
mov
jbe
je
push
or
pop
dec
add
cmp
mov
inc
push
arpl
loopne
fdivs
and
in
dec
pop
nop
cmpsl
mov
sti
xorb
mov
rolb
jae
add
pop
pop
pop
xchg
xor
sub
add
and
pop
pop
inc
int3
pop
movsl
adc
mov
fildl
sti
mov
insl
and
out
sbb
pop
or
shrb
or
jmp
xor
inc
mov
xorb
pop
mov
adc
jg
xchg
cmp
add
jmp
sub
mov
into
push
imul
push
adc
stc
xchg
pop
jg
dec
bnd
jbe
fcompl
jnp
addb
icebp
and
push
sub
cli
and
jmp
mov
data16
mov
or
inc
xchg
inc
out
add
mov
in
pop
mov
dec
pop
xchg
push
sub
dec
pop
xchg
cmp
push
xor
ljmp
cmpb
xchg
adc
inc
push
inc
cltd
and
adc
test
adc
loope
or
and
loopne
mov
or
mov
test
cli
mov
es
pop
xchg
inc
stos
and
dec
sub
cltd
fadd
inc
xchg
jmp
mov
rolb
add
jp
xor
nop
enter
and
or
push
push
xchg
fimuls
ret
outsb
into
hlt
out
fcmovnbe
rcrb
inc
andb
popf
cld
dec
xchg
xchg
mov
push
cmp
adc
fsts
mov
inc
int
dec
call
add
add
cmp
test
or
in
push
pop
pop
stos
movsb
out
mov
adc
inc
xor
divb
aaa
jmp
jmp
in
and
lahf
nop
daa
mov
mov
sub
mov
mov
dec
push
insl
repz
inc
and
cld
mov
sbb
in
cmp
add
lahf
sub
push
push
lret
inc
mov
stos
pop
jmp
jbe
in
xchg
mov
jnp
test
shrb
out
add
and
mov
inc
sbb
dec
push
jb
adc
popf
gs
add
lea
in
jl
fwait
and
cmp
push
sbb
cmc
das
sub
xchg
xor
aam
aam
sbb
push
pusha
pop
dec
test
mov
mov
mov
xchg
inc
and
xchg
inc
subl
lcall
add
addr16
pop
movsl
lods
mov
ds
mov
rdtsc
push
mov
mov
insl
mov
sbb
mov
jno
xor
sti
xchg
ret
add
xchg
pop
dec
mov
mov
add
add
mov
popa
pop
mov
sbb
pusha
sub
push
lock
mov
or
or
nop
push
dec
dec
xor
mov
inc
popa
or
or
push
push
fadd
inc
popa
sbb
loope
mov
xlat
sbb
jmp
rcll
pop
rcrb
jecxz
scas
or
loopne
popa
js
clc
adc
lods
mov
popl
mov
sub
jge
add
jns
lds
push
add
pop
add
jg
jge
addl
push
mov
aam
cld
add
mov
add
mov
out
push
cld
inc
sbb
pop
faddl
push
jbe
test
pop
sub
sbb
addl
jmp
stc
out
pusha
add
sbb
mov
test
ret
and
jo
daa
ficomps
testb
dec
xor
jl
inc
jo
mov
or
mov
push
dec
mov
out
lods
in
sbb
jo
call
loopne
repnz
clc
popf
dec
call
push
mov
add
repnz
mov
jbe
lret
pop
scas
add
mov
jns
push
xchg
pop
lcall
jmp
aas
pop
test
xor
adc
mov
mov
icebp
mov
cs
push
fwait
imul
outsb
lea
mov
cmpb
add
cmp
ja
add
cmpl
mov
and
out
outsb
mov
adc
rclb
loop
rcrb
xchg
cmpsl
inc
test
testb
jecxz
xchg
and
mov
add
xor
cmpsb
and
movsl
mov
push
out
push
add
xor
sbb
daa
pushl
and
int3
add
sbb
add
pop
arpl
xor
lock
mov
or
or
fisubrs
cmp
je
pop
fists
movsb
aad
xorb
add
cmp
loop
or
popa
pop
loop
sub
arpl
pusha
scas
jnp
add
or
aam
int
sub
imul
aam
mov
dec
fiaddl
or
pop
into
test
dec
mov
stc
mov
mov
pop
xor
in
adc
pop
fimull
mov
hlt
jae
mov
xchg
xchg
mov
fists
add
fmuls
std
pop
repz
xor
andb
popa
mov
dec
jg
add
imul
pusha
adc
mov
push
mov
or
in
mov
jo
daa
clc
push
jle
or
mov
andb
mov
shll
movsb
popa
call
add
push
clc
pop
push
pop
mov
jns
mov
sti
jmp
xchg
xor
add
es
adcl
sbb
test
mov
dec
imull
or
es
sub
push
xlat
sbb
inc
mov
mov
mov
add
and
xlat
addl
or
mov
add
adc
arpl
lret
divb
mov
popf
adc
imul
pusha
rcr
cld
popa
les
mov
pop
pusha
fcmovnb
stos
mov
dec
push
lods
aam
lcall
js
sub
and
pusha
jno
or
in
cld
fnsave
test
popf
jno
lret
push
xchg
add
fstl
cs
adc
mov
sbb
pop
or
cmp
inc
push
mov
xchg
mov
stos
enter
jno
lods
adc
mov
mov
push
stc
leave
or
loop
mov
lods
mov
cmovl
leave
movsb
fsubrs
sbb
sub
cltd
testb
je
lods
jno
mov
sbb
pop
inc
mov
xor
pop
jae
cmp
dec
cmpsb
add
pop
push
sbb
mov
jno
stc
push
push
cld
or
movsl
imul
aam
adc
popa
and
nop
mov
mov
and
jae
lods
dec
movsb
and
lahf
leave
sub
adc
cmp
dec
sub
and
and
mov
and
lcall
outsb
sub
xchg
cltd
sub
cs
lahf
sbb
add
jle
and
sub
popf
pop
push
lret
loopne
mov
cwtl
rclb
mov
pusha
int
stc
leave
jbe
or
adc
imul
loopne
divb
cmp
jle
jecxz
mov
lods
pop
sub
ljmp
popa
sub
cmp
aam
inc
aaa
iret
inc
andl
out
cwtl
mov
int
inc
sbb
jne
test
ficoms
into
jmp
jl
add
jmp
int3
sub
sub
movsl
push
adcl
lds
push
outsb
out
dec
or
repnz
and
nop
mov
hlt
rorb
sbb
das
dec
push
rol
daa
test
mov
mov
mov
popa
xchg
cmp
and
sub
loope
js
xlat
jle
add
add
mov
mov
mov
xor
into
call
xchg
mov
repnz
jmp
and
fsubrl
jns
test
imul
in
xor
in
iret
push
xchg
dec
sub
negl
outsl
test
test
add
mov
int3
jge
addl
jge
in
clc
cmp
fnstcw
movsl
pop
pop
push
sti
mov
std
cwtl
or
pusha
pushf
jno
testb
mov
add
and
je
fmull
add
or
into
ja
ja,pt
aaa
fidivs
test
popa
mov
pop
adc
daa
and
dec
push
cmpsb
mov
inc
xchg
jno
mov
xor
mov
push
in
je
sub
outsl
jmp
aad
fs
ljmp
dec
push
add
cmpsb
adc
or
jl
inc
mov
sub
add
cli
inc
add
inc
loopne
imull
sarl
imul
dec
das
int
mov
and
mov
movsl
jae
sbb
mov
shll
adc
fs
push
fistpl
lret
fs
fidivs
sub
aaa
add
mov
cmp
cmp
xor
push
and
popf
pop
andb
test
push
xchg
outsl
push
add
lods
cld
shrl
jnp
pop
cmpsl
jl
add
lods
and
rcrb
test
add
inc
pop
sbb
mov
add
fwait
aad
sbb
add
pushf
sbb
bound
mov
pusha
push
enter
pop
add
or
sbb
sbb
mov
dec
mov
int3
call
dec
cltd
roll
stos
jp
jnp
sub
popa
loope
rcpps
mov
rolb
or
mov
iret
add
mov
pop
pop
xchg
ficompl
inc
adc
adc
push
xchg
out
iret
rolb
jp
add
dec
cmp
adc
fsin
outsb
ljmp
divl
mov
pop
fdivl
add
push
test
out
fdivrs
and
fstps
sbb
add
dec
or
jg
leave
cld
pop
imul
add
mov
adc
push
test
fiadds
loopne
xchg
cmp
pop
mov
xchg
mov
dec
adc
test
and
mov
or
shlb
lock
xor
hlt
or
jns
inc
jbe
dec
adc
bound
loopne
dec
adc
inc
mov
and
sbb
mov
ret
jp
mov
xor
mov
sub
or
sbb
sbb
mov
imul
test
lcall
dec
pop
pop
gs
loope
movsb
mov
jle
xor
inc
lea
out
xor
or
pushl
mov
cmp
daa
in
movsl
mov
add
push
or
into
xchg
mov
loopne
inc
dec
test
notl
dec
lock
mov
popa
stc
pushf
clc
sarl
mull
repnz
mov
xor
cmp
pop
and
mov
std
add
dec
repnz
lods
cmpsb
ja
add
pop
fnstenv
out
outsl
inc
or
dec
insl
cld
movsb
cmp
enter
mov
push
pop
mov
sub
pop
jb
lods
fisubrs
mov
xor
lea
dec
push
push
xchg
clc
pop
std
inc
daa
inc
fiadds
pusha
aam
inc
mov
inc
aas
and
adc
sbb
ja
imul
fld
movb
subl
test
jnp
add
aas
add
cmpb
add
lret
and
fsubp
jne
lahf
push
xchg
stc
test
aaa
add
dec
inc
xchg
jp
or
xchg
imul
xchg
mov
add
int
mov
add
sub
xor
popf
sbb
xchg
orps
bound
lock
mov
push
or
faddl
es
int
rcrb
fcoml
sub
insb
sub
xchg
shrl
std
dec
xor
and
cmp
decb
call
dec
add
or
sbb
mov
repnz
sbb
pop
mov
xor
es
and
mov
sub
sub
and
or
cmp
xor
pop
add
mov
mov
mov
push
add
fstpt
or
sbb
pusha
mov
ret
sub
and
fcom
adc
repnz
xchg
mov
pop
and
daa
les
mov
stc
push
insl
mov
inc
sub
lea
lds
push
outsl
push
pop
jae
mov
push
leave
dec
lahf
inc
inc
bound
push
out
xorl
stos
data16
cmp
push
mov
pop
mov
xlat
xor
imul
ss
add
pop
pop
xchg
enter
fwait
int
nop
mov
and
pop
xchg
test
ja
ret
cmc
scas
rclb
insb
roll
inc
cmc
pop
lds
insb
hlt
arpl
adc
dec
clc
notb
mov
scas
and
cli
enter
loop
outsb
sbb
dec
mov
add
sbb
mov
and
pusha
mov
imul
and
and
jae
push
xor
dec
mov
push
push
or
in
pop
stc
stos
adc
push
and
and
add
xchg
pop
push
outsl
shld
or
add
xor
pop
out
and
add
jo
mov
and
cs
imul
push
push
aam
push
aas
and
cmp
out
pop
jns
rcr
lds
pop
sub
push
out
dec
leave
pop
scas
fs
mov
push
shll
sub
roll
mov
or
mov
arpl
and
sub
imul
fbstp
stos
idivl
pushf
fnstcw
sub
pop
jp
out
mov
cs
pop
dec
push
inc
int3
pop
or
mov
sub
xchg
xchg
xor
xor
lea
xchg
jno
pusha
mov
sbb
pop
add
lea
adc
popf
pop
sahf
adc
xchg
adc
lret
inc
jns
and
and
inc
stos
test
outsl
mov
lds
mov
jne
es
mov
adc
inc
mov
push
gs
icebp
adc
stos
pusha
mov
mov
sub
rolb
stos
int
sub
or
adc
mov
dec
inc
pop
cmp
ljmp
push
sahf
mov
mov
movsw
ret
iret
sub
jne
lods
adc
dec
aaa
fs
mov
sub
cmpsb
mov
test
fcomip
mov
cs
xor
js
es
xlat
jmp
and
dec
adc
push
cld
notb
es
jp
mov
loop
sbbl
jae
pop
jo
mov
pop
sbbl
xchg
ret
in
les
mov
subl
and
jmp
pop
and
or
mov
jle
inc
and
push
lods
add
jp
add
or
aad
fldl
out
pop
xchg
adc
inc
aas
movsl
call
lods
xor
into
mov
stos
jnp
add
adc
mov
test
mov
ss
jae
add
push
stos
loop
lods
daa
add
inc
fidivrl
mov
mov
lea
das
in
imul
scas
gs
jmp
cmp
mov
xor
cmp
stos
sub
and
popf
pop
inc
aam
xor
adc
push
mov
sub
das
out
xchg
stc
in
add
mov
cli
notl
cld
jmp
es
stos
repnz
sbbb
push
or
hlt
inc
rcll
xchg
push
inc
mov
stos
fisubl
push
jno
imul
ja
jno
sub
xor
mov
clc
cmp
sub
mov
ds
repnz
cmovg
bound
enter
add
mov
sub
fistps
pop
sti
into
add
lea
xchg
test
popf
ds
mov
dec
add
out
xor
cwtl
js
dec
pusha
mov
add
popa
loop
out
enter
clc
movsl
int
fs
pusha
dec
out
dec
mov
dec
fisttps
lods
in
and
mov
xchg
mov
ret
inc
push
jno
add
pop
inc
dec
bound
mov
push
xchg
push
push
mov
pop
ds
dec
stc
push
test
add
xor
jge
in
popa
pop
pop
mov
add
xor
xchg
push
and
mov
sub
mov
mov
add
std
bound
lret
mov
lock
aam
pop
push
aad
test
test
lods
lock
loopne
out
ljmp
pop
mov
cmpl
adc
adcb
fisubs
sub
push
outsl
pop
pop
andb
scas
jne
gs
and
test
pop
js
and
mov
and
rcl
mov
mov
xchg
test
sbb
mov
or
test
and
push
ljmp
repnz
pop
and
xchg
jnp
mov
add
mov
sub
jle
sub
fnstsw
inc
subb
add
adc
cmpsb
sbb
pop
mov
inc
pop
mov
and
pop
xchg
call
add
mov
cmc
mov
mov
xchg
lock
pop
and
inc
in
add
sub
add
fistps
inc
loop
xor
mov
das
jb
pop
ret
aas
xor
mov
js
xor
dec
in
insb
push
mov
scas
adc
addr16
movsb
jmp
and
testl
jl
call
add
mov
fists
push
push
sub
ror
or
pop
pop
jle
daa
push
sbb
test
and
jmp
jmp
sbb
pop
adc
sub
adc
sahf
es
test
pop
dec
sbb
cmp
add
lds
jmp
mov
sbb
push
mov
mov
pop
mov
add
sbb
adc
jl
push
lea
and
icebp
xor
leave
in
dec
popf
push
stc
add
cmpsb
xlat
leave
xchg
imul
test
add
es
pop
pop
lds
cmp
push
push
dec
ret
xor
ficompl
bound
ds
sbb
jb
push
and
and
das
xor
mov
aad
ljmp
xor
fisubrl
add
sub
dec
addl
mov
sbb
add
xchg
mov
addr16
mov
scas
cmp
add
adc
data16
mov
inc
xchg
xor
cli
xchg
adc
inc
xor
call
xor
call
lret
hlt
adc
in
jmp
in
dec
jb
adc
and
sub
adc
add
cmc
jmp
and
xchg
fwait
add
jo
xchg
in
fidivs
lahf
push
inc
bnd
mov
xor
sbb
mov
icebp
inc
das
cld
jo
mov
cmpsl
mov
push
mov
add
add
sbb
fbstp
outsb
test
sub
xor
jp
jg
dec
call
stc
insl
sub
adc
and
cmp
mov
mov
lock
daa
stc
add
jge
cmp
clc
inc
xchg
cmpsb
mul
ljmp
in
mov
lods
sbb
pop
mov
and
in
ljmp
pop
aas
jmp
jecxz
add
test
and
lret
in
sub
push
dec
popf
rcr
dec
and
sbb
gs
cmp
cmp
setp
fcoms
pop
jge
or
cs
pusha
fistpl
repz
andb
jge
jne
sti
and
xor
xor
fucompp
jb
dec
mov
or
mov
test
clc
addb
mov
aad
popa
int3
lods
add
lret
add
mov
xor
jo
or
loope
mov
popa
sbb
leave
adc
jecxz
add
aam
or
sub
cwtl
dec
sbb
xchg
xor
mov
shlb
mov
lret
pop
hlt
mov
call
gs
push
mov
mov
rdmsr
xchg
dec
cmc
sarl
dec
add
fs
cmp
pop
dec
pop
inc
in
pop
std
xchg
mov
stc
mov
mov
lods
inc
sbb
cltd
ja
dec
pushf
sti
and
or
fs
lods
ds
popf
icebp
adc
aad
out
cwtl
mov
sbbb
lock
xor
pop
dec
dec
xor
push
sti
mov
jecxz
sub
adc
movsb
xor
in
ret
and
mov
sub
hlt
lret
jmp
cltd
adc
inc
mov
xchg
test
adc
cmp
orb
fs
add
mov
inc
mov
dec
inc
add
mov
push
jge
jo
xchg
and
sbb
xor
aaa
jmp
xor
mov
sub
xchg
stc
out
popf
inc
push
jns
sbb
jae
cmp
mov
xor
test
inc
outsl
loop
ss
enter
dec
mov
mov
inc
not
jp
shrb
adc
stos
je
out
mov
fs
cld
sub
push
adc
push
and
iret
cld
sub
mov
push
pop
lock
shlb
jmp
or
ficoms
ja
or
mov
fnstsw
enter
cmp
lods
sub
subb
add
pop
test
xor
ja
adc
xchg
inc
adc
rorb
add
jp
sbb
dec
jle
enter
sar
cmpsb
inc
stos
imul
pop
add
pop
std
test
pop
cmp
aaa
inc
add
inc
pop
pusha
divl
mov
outsb
adc
lret
or
stos
call
xchg
adc
in
or
iret
sbbb
inc
add
pop
jbe
aad
adc
fstpt
subl
and
add
loope
lods
ja
pop
inc
test
stos
pop
add
xor
dec
or
sbb
push
pop
xchg
adc
push
sbb
add
scas
imul
pop
push
xor
in
ds
push
push
leave
push
arpl
dec
cmpsl
das
hlt
notb
inc
jle
add
xor
or
into
cld
sti
dec
pop
lock
sub
mov
insb
adc
cs
jno
sti
out
aas
add
mov
sub
or
dec
cmc
sbb
push
xlat
leave
cld
testl
sub
imul
or
scas
xchg
mov
idivl
mov
imul
push
loop
inc
sbb
add
movsl
jecxz
jmp
jg
mov
mov
sub
jno
mov
leave
nop
sbb
pop
pop
data16
out
jl
mov
and
cmpsb
daa
rcrb
xor
push
jno
clc
jns
xchg
inc
stos
bound
pop
mov
jne
jecxz
pop
mov
pop
pop
cwtl
push
fmuls
xchg
jle
arpl
fmuls
xor
push
mov
add
mov
pop
les
loope
dec
jg
dec
and
mov
pop
xor
rcrl
sub
aaa
mov
xchg
fs
mov
add
ret
mov
cmpsb
xchg
aam
enter
dec
xor
dec
mov
lods
cltd
rcr
or
in
addr16
sbb
add
inc
call
fcomi
fucomi
and
add
repnz
cli
push
shrl
subl
dec
and
mov
clc
xor
add
addr16
or
fs
gs
int3
daa
stos
mov
add
or
xchg
inc
push
sub
addb
xor
mov
mov
repz
pop
sub
jmp
pop
leave
pop
sbb
pop
push
fcoms
adc
lds
cmpsl
insl
mov
popl
iret
shl
mov
cmpsl
mov
or
sbb
fnstsw
test
pop
cld
jmp
and
shrb
add
loope
je,pn
mov
mov
hlt
add
mov
xchg
pusha
mov
popa
mov
push
sbbb
push
push
outsl
adc
xor
sbbb
fbld
imul
lcall
pop
xchg
add
mov
mov
sbb
or
adc
test
cmp
push
sti
rcl
shll
add
xchg
pop
sub
dec
or
xor
daa
lret
push
mov
ss
xchg
fs
jbe
mov
mov
xchg
jg
mov
sub
dec
decl
jae
push
dec
cmpsl
adc
sbb
out
adc
out
das
clc
push
insl
ret
mov
pushf
and
scas
rorl
cmpsb
sbb
clc
movb
stos
fisttpl
ljmp
mov
push
xchg
or
push
das
push
in
or
test
cli
fadds
mov
imul
or
xchg
jge
lahf
mov
mov
loop
aad
jae
shl
nop
insb
cwtl
sbb
lret
je
push
pop
jp
sbb
add
or
sub
mov
stos
pop
add
pop
mov
jl
divb
mulb
mov
xlat
push
pop
cltd
adc
jbe
loopne
xor
outsl
jecxz
and
push
stos
sub
or
pop
cmp
inc
push
or
adc
add
mov
pop
imul
ret
dec
es
push
fiadds
pop
xchg
stc
mov
push
cmp
xchg
jo
adc
test
rolb
es
and
mov
popa
cli
sub
dec
fadds
pop
add
mov
ljmp
lret
shlb
pop
and
ret
push
mov
and
dec
sahf
popf
lods
shl
outsl
pusha
daa
icebp
pop
xor
gs
std
mov
in
das
pusha
push
mov
add
xlat
or
add
xor
or
adc
sub
cltd
pop
sub
mov
popf
xor
adc
adc
fcomps
push
sub
jmp
xor
xchg
mov
mov
cwtl
sub
mov
jno
in
jl
add
sub
xor
adc
rclb
cmpsb
shlb
out
inc
jno
sbb
pop
mov
push
repz
sbb
sbbb
or
rorb
cmpsb
or
jae
aad
mov
sbb
scas
pop
push
sub
bound
mov
inc
dec
lea
jb
lret
add
mov
mov
scas
pop
imul
inc
sub
sub
inc
lock
pop
mov
and
push
test
rdtsc
mov
imul
lods
pop
cmpsb
pushf
repnz
jle
push
rolb
das
popf
push
mov
insl
inc
cmp
mov
arpl
scas
mov
or
mov
push
loop
mov
cmpsl
test
fcmovnu
es
lret
add
pop
pusha
adc
and
stc
inc
lcall
adc
mov
xchg
and
daa
subb
lea
pop
mov
cwtl
test
gs
ss
sub
xor
adc
jne
mov
mov
or
adc
cmp
sub
pop
adc
test
mov
mov
adc
jbe
cmp
mov
mov
xor
fdivs
lea
pop
xchg
test
pop
jg
in
and
pop
pop
cmp
and
push
insb
push
inc
fs
push
mov
ret
adc
mov
xlat
out
popa
and
es
xor
fsub
jns
add
mov
and
or
mov
or
sbb
dec
xor
add
in
test
add
cmc
pop
fs
inc
shrb
fisubrs
mov
fbstp
inc
je
mov
outsl
pop
xchg
test
ret
mov
out
adc
por
pop
sbbb
pop
adc
cld
stos
fistpl
popf
mov
xchg
mov
shlb
outsb
movsb
cltd
or
mov
push
mov
incl
lds
cmp
mov
mov
xor
or
push
xchg
jne
pusha
add
dec
clc
sbb
outsb
sub
push
xlat
add
movsb
fwait
mov
loope
mov
mov
pop
push
lahf
aam
adc
scas
push
pop
das
cmpsl
xor
fcompl
jp
ljmp
es
cmp
mov
inc
inc
addl
ljmp
aas
adc
and
dec
sub
filds
outsl
and
mov
xor
orb
jnp
xchg
sbb
pusha
sbb
loope
or
or
scas
into
pusha
mov
callw
sub
popa
inc
pusha
lcall
add
add
sbbb
fnstcw
and
mov
or
mov
incl
mov
das
dec
cmc
in
add
test
fldenv
pusha
lds
daa
sbbl
mov
push
add
pop
add
mov
or
and
outsl
lret
add
popf
push
loope
sbb
xchg
insb
adc
orl
adc
je
out
call
xchg
xor
jp
add
xchg
pop
inc
mov
jecxz
add
or
mov
lret
push
jmp
test
in
xor
sbb
fldl
mov
popa
adc
out
lock
aas
cmp
sub
pop
pusha
xor
push
mov
popa
mov
int3
cld
push
mov
orb
fwait
jbe
fisubrl
sub
cmc
mov
xchg
dec
roll
lahf
push
mov
jae
fldcw
testb
inc
pop
add
sbb
push
push
stos
xor
fists
loopne
cwtl
dec
cld
add
bound
mov
flds
test
pop
push
push
pop
jmp
add
and
sbb
shrb
ror
loope
pop
outsl
in
stos
popf
andl
push
pop
pop
nop
jne
inc
push
dec
push
lea
sub
insb
cmc
push
test
sti
pop
repnz
popa
jb
cmp
mov
leave
add
leave
sbb
and
popa
mov
popf
jb
int
xchg
cltd
lret
mov
xor
daa
or
outsl
decl
xor
inc
shr
inc
loope
hlt
inc
fiadds
xor
faddp
loop
dec
mov
and
pop
test
notb
gs
adc
adc
fwait
mov
call
mov
jb
dec
pop
sub
or
jge
sub
mov
ret
add
or
dec
cmp
gs
sbb
sub
and
in
add
push
mov
adc
pop
mov
cmpsb
jb
push
jp
jge
mov
daa
inc
xchg
mov
push
add
sti
clc
jg
mov
lods
movsb
xchg
cld
bound
rolb
movsb
inc
arpl
sub
add
pop
and
inc
sbb
jle
scas
push
xchg
xorl
jbe
mov
icebp
stc
std
in
les
cli
idivl
xlat
ljmp
mov
add
inc
mov
pusha
mov
mov
sbb
add
lods
rorb
cs
add
inc
and
mov
clc
dec
push
call
cld
cli
xchg
call
test
out
mov
pop
stc
mov
idiv
scas
faddl
mov
sbb
lcall
mov
ja
xchg
movsb
dec
pop
mov
xchg
call
jg
imul
fcoml
push
mov
mov
xlat
int3
sbb
push
cmp
popf
pop
jo
add
pop
popa
test
mov
shrb
cmpsb
dec
add
xor
daa
aam
or
into
cltd
and
ja
pop
mov
ret
clc
cmp
inc
jae
arpl
sar
je
test
repz
test
sbb
lcall
pop
in
dec
or
cld
adc
dec
and
xor
shl
push
jmp
lock
mov
test
in
and
popa
add
cltd
cmp
pop
jg
xor
and
rcrb
mov
xchg
movsb
inc
pop
inc
test
les
add
mov
xor
lcall
xor
mov
xor
movsb
mov
xchg
inc
inc
adc
shlb
aad
test
jmp
sbb
scas
mov
lods
nop
lahf
pop
cmp
inc
sub
jg
rolb
out
sub
fsubl
lods
dec
mov
xlat
fildl
sub
jge
out
cmpsl
ror
fisttps
or
push
mov
es
adc
loop
mov
mov
mov
mov
cwtl
fcomi
fbld
jns
lds
in
pop
stos
cmp
mov
dec
mov
mov
inc
sub
mov
test
and
sbb
xchg
pop
adc
int3
rolb
mov
xor
jmp
cmp
jno
fwait
mov
dec
decb
aad
ja
ss
pop
adc
pop
mov
gs
idivb
popl
notl
mov
and
pop
fs
xchg
les
pop
mov
jg
xchg
xchg
fisttpl
sbb
mov
mov
mov
mov
je
imul
sub
lcall
lea
popf
pop
jnp
roll
and
adc
pusha
in
sbb
out
outsb
fldt
xchg
ljmp
fisttpll
std
les
into
jmp
pop
mov
mov
out
in
jno
popf
rorl
stos
xor
mov
or
push
and
mov
popf
or
mov
dec
jae
sahf
mov
sub
fsubs
or
xchg
lea
idivl
ret
push
fwait
add
mov
sahf
or
push
inc
adc
sub
xchg
add
adc
cmpsl
nop
bound
jns
nop
mov
dec
inc
xor
lret
or
mov
sub
daa
pop
sub
add
rcl
sub
mov
rdmsr
pop
lcall
push
lds
xor
mov
scas
pop
mov
mov
or
pushf
dec
faddl
out
push
imul
jo
add
sahf
mov
mov
sub
mov
cmp
mov
pop
pop
lahf
int3
mov
sub
mov
rcrb
fisttpl
pop
daa
pop
iret
lock
xor
add
popf
push
cmc
jg
jmp
aas
dec
mov
in
lret
cmp
adc
and
inc
sbb
outsb
gs
lar
idivb
mov
mov
lods
push
sar
je
mov
fisubl
mov
add
hlt
jmp
push
pop
sub
mov
pop
mov
loope
or
xchg
stc
lahf
sti
sub
les
cwtl
dec
loope
cmp
decl
loopne
or
jnp
push
jo
mov
inc
inc
jno
sub
and
ret
xchg
pusha
dec
add
enter
add
push
in
and
mov
out
mov
mov
fsubs
lret
pop
stc
orl
ljmp
stos
adc
adc
push
mov
mov
stos
xchg
mov
xchg
popf
in
aad
inc
test
fisubs
ds
shll
mov
daa
pop
pop
std
adc
popa
cmpl
nop
outsb
mov
jns
in
cs
sti
dec
add
fmuls
mov
insl
push
adc
inc
mov
mov
stos
outsl
pop
and
out
hlt
or
push
inc
es
loopne
pop
mov
jne
popf
clc
inc
mov
mov
les
pusha
inc
stc
xchg
and
or
pop
or
mov
cmpb
dec
push
dec
sub
inc
inc
sbb
add
jo
mov
ret
add
inc
pop
or
sbbb
ljmp
mov
mov
idivb
fcmove
adc
fwait
shrl
fnstsw
and
xor
outsl
xchg
scas
pop
add
jmp
pushf
movsl
es
xchg
mov
orb
stos
jno
xchg
push
push
mov
jbe
add
insb
outsb
je
jge
cmp
cmp
xchg
pop
push
xchg
inc
or
ret
aaa
js
push
push
lds
call
cmp
push
icebp
mov
aad
and
or
pop
xor
xor
out
jnp
addl
pop
mov
mov
dec
pop
popa
hlt
xor
adc
push
arpl
mov
lock
jge
jg
jnp
pop
xor
test
mov
jmp
cmc
or
add
jno
insb
lds
add
lock
push
dec
outsb
test
mov
pop
jg
imul
lret
stos
jle
iret
push
repnz
pop
mov
ret
nop
stc
aaa
mov
adc
mov
add
xor
pop
push
fiaddl
into
popa
mov
add
push
add
mov
push
mov
outsb
adc
jmp
jmp
nop
int3
int
adc
adc
imul
add
dec
add
lds
xchg
adc
je
popf
mov
xchg
cmc
xchg
lds
dec
cmpl
xchg
insl
je
pop
pusha
fistl
xor
ds
dec
lock
and
cltd
bound
aad
inc
movsl
jne
cs
add
out
dec
outsb
adc
nop
sbbb
dec
mov
call
inc
iret
sub
mov
shl
das
loop
test
or
arpl
test
cmpsl
add
addr16
pop
aas
cmovno
cmpsb
add
stos
sahf
out
add
lds
lcall
mov
shr
sub
push
cmp
cmc
stos
fsubl
mov
xor
add
and
adcl
mov
push
jecxz
pop
mov
adc
pop
xor
mov
lock
or
push
cwtl
fmuls
int
ret
aad
xchg
mov
dec
sub
xchg
mov
mov
mov
imulb
bound
xor
adc
fcoms
iret
or
enter
je
cmp
mov
dec
sub
in
pop
and
pop
sahf
negb
cmp
push
dec
and
fs
mov
daa
incb
mov
push
stos
outsl
or
rolb
arpl
add
mov
inc
popf
and
jnp
mov
add
repz
mov
mov
push
push
insl
jae
in
mov
push
sub
pop
insl
sub
pop
lret
or
jno,pt
xchg
stc
loopne
clc
xchg
cld
mov
jmp
adc
sub
lds
push
sti
sub
addb
push
xchg
add
aam
jno
jne
xor
sbb
sahf
push
add
mov
pop
lds
and
ljmp
mov
enter
add
dec
mov
or
mov
sbb
pop
jbe
or
aad
xorl
ljmp
nop
repz
and
insl
cwtl
push
cmp
pop
pop
dec
add
push
mov
sub
clc
loope
pop
int
pop
xchg
push
mov
add
movsl
popf
test
mov
outsl
mov
mov
je
jmp
push
nop
jg
inc
stos
add
sbb
cmp
fdivl
les
sti
xor
incl
aas
lods
aad
xor
inc
sbb
push
jne
adc
xchg
adc
or
push
adc
xor
je
and
shrb
movsb
jnp
push
push
leave
stos
pop
mov
xor
pop
loope
xorb
sub
in
fildl
loope
mov
or
sub
dec
cs
in
push
adcb
mov
xchg
xchg
adc
pop
das
loop
mov
mov
and
pop
cmpb
fbld
fstps
test
rclb
scas
sahf
xor
sub
sbb
or
pop
cli
adc
xchg
loope
push
out
mov
ss
cli
xchg
in
pusha
or
jge
es
in
jl
ds
sbb
mov
sahf
sub
cmp
adcb
mov
ss
inc
and
push
adc
shrl
xor
pop
push
or
mov
in
add
dec
jmp
sbb
rcll
imul
in
add
sahf
or
add
pop
push
cwtl
dec
fcoms
dec
lods
adc
or
push
xor
and
fdivr
ds
shl
and
rclb
flds
and
xchg
dec
jmp
negb
add
outsb
movsl
ljmp
sbb
add
and
frstpm(287
into
xor
scas
fs
loopne
fsubr
mov
scas
adc
loopne
jo
pop
add
mov
push
in
xlat
icebp
add
add
and
sbb
cmp
sti
dec
outsb
add
push
cmc
xlat
mov
jmp
sbbb
jae
cmpsl
add
loope
push
les
add
leave
movsb
imul
push
popf
or
dec
cmc
call
jecxz
pop
inc
sub
hlt
jp
add
in
fistl
mov
push
mov
xor
and
les
adc
add
das
enter
mov
cwtl
out
pop
ljmp
fwait
dec
adc
or
ret
in
adc
or
cmpsb
es
dec
cmc
inc
jecxz
cld
add
pusha
jo
dec
lahf
push
cmp
in
pusha
xor
loop
out
dec
out
add
jo
mov
push
and
popa
push
adc
ljmp
mov
pusha
or
outsb
mov
and
pushf
adc
sbb
fmuls
sahf
fcoms
mov
cmp
lods
cli
insb
push
mov
test
mov
popf
xchg
iret
dec
add
jecxz
add
mov
sbb
cmp
jne
addb
push
sbb
dec
push
rorb
mov
inc
add
or
js
adc
cmp
sub
xlat
or
cmp
pop
pushf
mov
les
jg
movswl
andb
es
add
addr16
jecxz
push
and
cmp
xchg
lds
xchg
clc
js
add
or
xor
pop
pcmpeqw
ret
popa
mov
icebp
add
mov
inc
sahf
add
xchg
mov
adc
insb
into
movsb
incl
add
jl
mov
adc
push
xchg
lock
stc
repz
cld
pop
cmp
push
aas
xchg
addb
in
mov
inc
mov
lea
cmp
add
das
scas
ffree
mov
dec
add
jp
or
xorb
dec
adc
subb
imul
xor
bnd
xor
mov
jno
cmc
cmp
sub
add
iret
jl
jns
jle
add
ret
push
aaa
dec
mov
xorb
add
add
mov
cmpsl
sbb
mov
add
je
cld
dec
shll
lahf
das
clc
aas
fimull
call
xor
inc
leave
jg
mov
cld
mov
jne
dec
sub
dec
xchg
rolb
fadds
add
je
repnz
jo
inc
push
add
fiaddl
sbb
movsl
push
dec
aam
add
cmp
cmp
scas
ficoml
fists
add
pushf
jno
mov
cmp
mov
sbb
stos
movsl
ja
sti
mov
mov
pusha
push
arpl
cmp
pop
and
jmp
movsl
js
call
ror
add
or
out
loopne
or
push
jne
pop
mov
aas
xchg
xchg
add
xchg
stc
xchg
jp
les
outsb
add
in
or
ss
mov
pop
jg
jmp
adc
mov
es
xchg
fdivrs
fsincos
push
iret
cwtl
bound
mov
and
mov
cmc
loop
mov
jbe
fcomps
mov
subb
dec
push
adc
adc
sbb
add
mov
xlat
rcl
aaa
sbb
lds
sarb
xor
into
std
xor
clc
lock
das
add
fsubr
sbb
subb
push
cmc
and
mov
hlt
dec
add
ficomps
or
xchg
xor
pop
or
in
scas
repnz
aaa
pop
or
lock
add
leave
sti
add
sti
mov
mov
fsts
notl
fdivl
out
mov
add
test
xchg
les
mov
ljmp
add
sub
add
add
sbb
push
jg
add
test
or
pop
data16
out
mov
sti
hlt
inc
pusha
call
daa
push
sbb
rolb
int3
push
cwtl
jge
pushf
lods
in
stos
add
pop
mov
aam
mov
xor
out
es
mov
outsb
sub
xlat
adc
aad
mov
mov
sbb
in
nop
cmp
add
call
and
ret
movsl
mov
and
inc
mull
pop
negb
aas
pop
mov
pop
mov
in
cmp
and
add
pop
aas
push
sub
push
pop
leave
ljmp
insb
movsb
jg
add
aad
adc
jp
mov
add
shl
testb
cmp
pop
sub
mov
stc
iret
mov
push
addl
dec
jb
push
repnz
add
push
shr
bound
mov
sbb
out
insb
les
mov
ss
js
sti
add
repz
insl
testl
xchg
add
shlb
add
adc
rclb
int
dec
jl
pop
sbb
add
movsb
lock
loopne
inc
push
push
mull
adc
add
mov
insb
add
mov
add
and
inc
cld
cld
push
push
inc
ds
mov
les
add
mov
cltd
icebp
ja
push
out
sar
sti
mov
fisttpll
hlt
push
add
out
xor
subb
icebp
xchg
popa
test
lods
mov
repz
mov
add
fmuls
inc
int
xchg
and
test
add
fisttps
add
ficomps
movsb
mov
jg
cli
add
inc
mov
in
hlt
insb
xlat
andb
mov
add
dec
daa
lcall
add
adc
mov
add
xor
add
jl
imul
cmp
adc
mov
jb
cld
adc
mov
xchg
clc
pushf
sbb
or
adcl
sbb
scas
push
sub
in
xchg
lcall
into
sbb
aad
jnp
and
out
xchg
mov
loop
or
push
ficompl
repz
add
add
sahf
lret
int
sub
xchg
shrl
xor
sldt
add
ds
jp
add
dec
outsb
xchg
subb
inc
mov
mov
imul
idivb
mov
add
sub
add
adc
pop
or
inc
fwait
cmp
shrl
add
aas
in
cmc
add
xchg
es
mov
fwait
jle
add
repz
pushf
push
pop
add
mulb
jno
enter
xchg
nop
inc
add
add
xchg
ds
cmc
icebp
fiadds
and
aaa
xor
gs
ud1
adc
pop
repz
add
fdivs
add
out
les
je
mov
sbb
sbb
jl
mov
mov
or
adc
push
adcb
xchg
xchg
sbb
or
inc
imul
adc
orb
push
cli
test
pop
lea
aad
lock
sbb
or
xlat
adc
ja
cwtl
in
add
pop
ficoml
mul
mov
dec
clc
xor
out
push
mov
mov
adc
adc
xchg
sbb
out
xchg
jg
addps
mov
pusha
int3
sub
adcl
inc
cmc
or
adcl
add
adc
scas
or
push
pop
dec
mov
adc
sbb
push
int
dec
loope
gs
jo
sysenter
xor
sbb
cmpb
push
sub
xor
popf
rorb
out
icebp
loop
or
pusha
scas
cmpb
adcl
inc
add
push
jo
xor
filds
int
inc
rorl
inc
sbb
icebp
cld
addl
outsl
enter
hlt
sbb
cmp
xor
or
enter
aas
push
gs
cmp
insb
dec
rol
fwait
jne
lret
jae
mov
inc
js
mov
sbb
adc
pusha
ret
mov
mov
or
mov
lcall
inc
loopne
add
insl
and
sbbl
outsb
sbb
stc
jecxz
mov
dec
xor
mov
mov
xchg
fists
jno
xchg
push
dec
sbb
inc
sbb
add
mov
mov
ljmp
fstpl
out
mov
fwait
mov
add
adc
xchg
push
fldl
sbb
pusha
jae
cli
sbb
add
pop
mov
jo
push
add
leave
dec
enter
cmpsb
jg
mov
adc
inc
push
mov
push
hlt
addb
call
mov
ja
mov
cmp
jne
sar
xor
aaa
cmp
adc
sbb
push
out
lods
mov
mov
jmp
add
push
fwait
add
cmp
push
in
pushf
jne
sub
out
mov
ljmp
loope
andl
xor
cmp
add
stos
aam
push
xlat
pop
fldcw
adc
add
adc
inc
shl
mov
pop
add
pop
mov
xchg
inc
out
lock
sub
xchg
mov
pop
lods
in
add
clc
aas
push
cmp
add
mov
push
mov
hlt
popa
ljmp
jge
cli
and
or
jmp
mov
shlb
aas
cmovnp
push
div
cmp
sbb
sbb
lock
adc
js
or
sub
or
icebp
and
mov
jmp
mov
cld
fistpl
dec
mov
shlb
or
mov
unpcklps
xchg
cmc
adc
js
movsl
or
outsb
add
mov
sbb
shr
jmp
or
data16
nop
add
cltd
sbb
mov
pop
clc
sub
cmpl
cwtl
repnz
movsb
loop
arpl
aad
or
ljmp
mov
add
add
test
pop
js
add
shlb
insb
lds
stc
cld
jb
arpl
fimull
jae
in
add
dec
add
es
lahf
adc
mov
addl
sbb
adc
push
dec
icebp
dec
add
mov
out
add
mov
inc
mov
xor
mov
xor
shr
outsl
nop
cld
add
xor
ds
cltd
fcompl
int3
sbb
mov
scas
sub
cmpsb
aad
and
orl
jmp
pusha
addl
sbb
test
push
movsl
enter
pop
jo
fildll
push
fwait
add
ret
pop
fsubp
stc
add
xchg
repz
jbe
insb
push
fstl
push
sbb
aaa
sbb
fxch
jp
cmp
out
cwtl
lea
or
xor
and
cmp
outsb
jb
fcomp
aad
add
leave
jmp
mov
es
shlb
outsl
add
push
cs
jnp
in
idiv
pop
mov
push
test
jge
les
loopne
sbb
sub
pusha
xchg
sbb
push
jb
inc
jecxz
mov
xor
mov
xor
addl
inc
fstps
adc
pusha
pusha
mov
jnp
sbb
sub
call
inc
mov
shl
mov
nop
ds
repnz
pop
or
out
rolb
icebp
inc
fldcw
shl
iret
xchg
popf
aad
add
repnz
add
mov
jle
inc
xor
xor
xor
repz
jnp
loopne
or
lods
lret
loopne
jne
add
dec
push
jnp
movsl
adc
and
jb
cmp
jo
add
sbb
lods
gs
mov
pusha
call
push
jle
orb
addr16
pop
pop
pusha
aas
adc
push
insb
out
add
sbb
mov
andl
push
insb
cmp
rolb
sub
cmp
pop
mov
cmp
or
hlt
sarb
xchg
arpl
negb
mov
movsb
or
add
lds
adc
add
stos
and
add
dec
inc
vminpd
cmp
clc
xor
insl
jbe
loopne
add
sti
or
dec
pushf
xchg
cmc
inc
cmp
xchg
sub
enter
xchg
clc
xor
gs
xchg
inc
insb
dec
mov
mov
xchg
add
imul
sbb
cmp
add
xchg
js
inc
out
add
lret
fisttpl
orl
xor
mov
shll
addb
ds
out
lahf
push
sahf
aaa
inc
mov
add
lea
sahf
cmp
and
and
or
arpl
adc
xlat
inc
add
sub
out
mov
push
aad
popa
cmp
inc
push
ds
adc
dec
fsubrp
adc
sub
cmpl
and
pusha
or
es
adc
push
add
out
mov
mov
jle
add
mov
xchg
cld
jecxz
add
stos
fs
pop
fsubrp
xor
push
ds
ret
cmp
jg
pop
mov
add
dec
xor
cs
jo
mov
adc
push
pop
pop
sub
hlt
mov
or
cld
jge
adc
mov
add
push
jbe
fwait
lcall
inc
cmp
ret
push
sub
dec
test
xor
and
testb
and
pop
test
imul
inc
jmp
adc
cmp
data16
fchs
add
pop
test
cmpl
popf
outsb
and
mov
and
in
add
lds
lock
test
pop
arpl
push
dec
add
dec
addb
cmp
inc
aad
pop
jbe
xchg
and
data16
jp
push
add
mov
pop
lret
icebp
cmc
adc
cli
adc
arpl
out
jno
in
hlt
adcb
jbe
push
lret
js
xchg
jecxz
mov
push
cmp
mov
clc
sub
arpl
ds
push
mov
dec
pop
sti
cli
sub
mov
dec
inc
rol
dec
test
dec
add
dec
mov
pop
push
dec
xchg
psubsw
adc
popa
sbb
add
out
sbbb
rolb
pop
push
sbb
and
jbe
add
shll
jnp
mov
sti
mov
sbb
ss
nop
sub
sbb
xchg
cmp
jp
insb
add
and
add
xor
sbb
jp
pop
add
inc
shll
sbb
add
pop
outsb
aaa
adc
jnp
iret
insb
add
nop
add
jmp
cmpsb
and
and
pop
jle
scas
ret
int3
jns
inc
jmp
pop
data16
in
cmp
mov
mov
shlb
xor
pop
dec
jae
ss
add
das
push
or
mov
add
mov
sbbl
add
jns
adc
call
mov
inc
shrl
repnz
add
aaa
or
pop
fwait
jg
je
add
cmpsl
outsl
push
les
add
xchg
mov
cmpsb
nop
push
add
mov
xlat
xor
jo
clc
sbb
push
nop
pop
xor
insl
test
fiadds
sub
push
inc
adc
rol
ss
push
ret
popf
and
add
mov
inc
lea
popa
sub
jae
mov
idiv
loopne
xor
pop
mov
insl
ds
mov
xlat
popf
inc
sti
lret
loopne
sbb
cmc
jae
data16
fcmove
add
push
jp
xlat
add
test
in
nop
add
mov
js
mov
or
add
mov
lea
and
push
xchg
add
dec
cmpsb
lret
or
iret
adc
pusha
push
inc
daa
mov
dec
xor
inc
cmp
jl
xor
jg
lret
mov
fimull
or
mov
fidivs
addl
clc
bound
mov
das
ja
add
stos
mov
add
push
cmpsl
cmp
sbb
add
or
inc
insb
mov
add
repz
xor
movups
stos
mov
in
push
jmp
mov
lahf
jns
add
imul
or
aas
mov
add
fldt
add
and
mov
mov
movhps
xor
dec
xor
loope
xchg
jns
js
add
cmpsb
sbb
or
cltd
mov
sbb
inc
fcmove
add
in
icebp
mov
insb
in
call
lret
mov
pop
cmp
in
add
sbb
dec
xor
mov
daa
adc
add
add
imul
ret
aaa
push
repz
mov
or
xchg
js
and
aad
pusha
loop
sub
mov
sub
sub
ret
rorb
sti
cli
popl
or
decb
pop
rcrb
call
jnp
inc
aam
idivl
rclb
cmpsb
js
pushf
push
enter
add
call
faddp
add
pusha
mov
mov
mov
div
add
sbb
jmp
js
outsl
adc
jl
add
lret
push
inc
mov
push
jl
add
cltd
add
in
ss
xchg
sbb
inc
jbe
add
xor
add
mov
dec
sub
je
loop
or
jo
sbb
inc
stos
test
int
push
rolb
arpl
pusha
loope
jbe
add
sub
fldenv
nop
mov
notl
into
stos
ret
jno
shlb
add
or
loop
sahf
iret
out
push
add
stos
add
inc
stos
daa
add
pushf
int
xchg
cmp
cmp
add
jl
and
and
xor
popa
dec
and
pop
jl
jns
and
mov
inc
mov
repz
jne
mov
xorl
jmp
dec
ss
fiadds
pop
test
sub
and
scas
sbb
hlt
mov
jo
rorb
push
in
cmp
mov
add
setp
popa
dec
bound
add
in
cmp
jecxz
sbb
pop
fadds
imul
aam
cltd
mov
or
mov
mov
adc
ja
xchg
add
push
jp
ds
sahf
adc
jecxz
mov
and
sbb
out
adc
or
int
push
dec
lea
fwait
lret
push
jp
and
add
pop
cwtl
mov
inc
mov
pop
jp
sbb
push
or
hlt
addb
arpl
les
adc
push
lret
push
ret
jo
nop
xor
loopne
xchg
mov
mov
pushf
and
adc
pop
arpl
inc
addr16
cmp
in
loopne
pop
lahf
data16
add
dec
notb
and
dec
mov
aaa
or
repz
adc
cmp
rcll
rolb
xchg
sub
jg
sti
sbb
incl
mov
xlat
cmc
pusha
push
jo
mov
mov
xchg
arpl
jne
xchg
fldlg2
pop
or
lods
jns
mov
push
mov
jl
mov
cwtl
add
int
aad
jg
xorb
mov
add
inc
sbb
cli
loop
push
add
movsb
push
xchg
mulb
out
xor
js
cwtl
add
mov
dec
mov
adc
sub
cltd
or
adc
add
lea
mov
and
sub
mov
mov
cmp
or
adc
cmp
jl
mov
bound
adc
shl
xchg
push
andb
aas
or
sub
mov
jbe
fdivr
test
inc
rorl
xchg
bound
inc
cmp
loop
pop
sub
mov
js
fiaddl
das
or
push
push
inc
ljmp
inc
cmp
jmp
sub
imul
add
ficompl
movl
orb
bnd
sbb
cli
orl
roll
push
fwait
push
add
outsl
dec
call
and
xchg
cld
mov
or
jecxz
out
sub
aas
dec
adc
add
loope
and
add
or
jp
add
sub
pop
enter
push
or
jmp
pop
inc
cwtl
cwtl
aam
hlt
pop
pushf
into
dec
jl
push
push
ret
cld
mov
xchg
sarb
add
popf
lods
add
jp
jb
cli
hlt
add
mov
in
add
or
xchg
test
xchg
outsb
pop
sahf
or
sbb
inc
adc
int3
cmp
add
gs
test
push
loop
pop
lahf
test
call
pop
add
sub
add
sbb
and
mov
inc
xlat
add
test
mov
sub
xchg
pop
jb
scas
inc
loopne
lods
scas
insl
inc
add
push
lret
repz
div
sbb
scas
and
pop
xchg
cld
jae
add
outsb
loop
dec
inc
xlat
xor
jp
pop
pushf
adc
es
loope
and
pop
les
adc
out
cmpsl
or
and
cld
add
jo
es
repnz
dec
fildll
lods
jb
and
sub
out
push
adc
and
xchg
sub
mov
mov
jae
add
inc
jl
or
sbb
in
loop
sahf
ret
pop
pusha
mov
int
cs
faddl
sbb
jmp
and
loopne
fistl
or
push
cmc
nop
add
hlt
std
mov
lea
loope
js
call
test
insl
rorl
mov
lahf
movsb
inc
daa
pusha
jmp
rcll
pop
ror
mov
add
xchg
cwtl
das
sbb
add
std
imul
inc
mov
and
and
ds
mov
jno
jae
add
push
cmp
or
xor
jmp
add
mov
out
fcomi
add
jmp
add
mov
xchg
and
fnsave
pop
aaa
movsb
add
or
testl
ja
inc
mov
ret
inc
mov
lsl
xlat
mov
mov
hlt
in
outsb
test
add
pop
fstpt
sysret
test
dec
xor
fldl
ret
lret
add
rolb
mov
dec
sub
in
cmp
ja
ret
int3
jno
inc
sub
mov
or
inc
add
jmp
arpl
dec
xor
aas
insl
push
test
stc
nop
dec
inc
lods
push
cwtl
stos
sbb
arpl
cmp
iret
jb
fstpt
pop
pop
cmc
and
icebp
mov
and
pop
lods
add
push
shr
fsubl
mov
add
dec
inc
push
xchg
repz
inc
jb
pop
testb
jmp
insb
dec
xchg
mov
pop
xchg
lret
jno
add
push
adc
inc
dec
inc
inc
xlat
xor
loopne
aam
stc
sbb
add
pop
pusha
rclb
shll
popa
add
pop
xchg
adc
sbb
jl
mov
jmp
sbb
xchg
cli
jmp
fs
cmp
adc
fisubs
cmp
les
cs
jno
inc
pop
rclb
cmc
jle
adc
mov
sbb
fmuls
cli
add
push
fcomps
lods
fsubs
add
mov
pop
xlat
ljmp
xor
push
add
inc
xor
sbb
cmp
mov
add
push
and
inc
sub
add
push
mov
loopne
push
inc
aas
xchg
outsl
jmp
scas
add
pop
mov
mov
sub
sbb
add
jbe
mov
dec
jmp
rdpmc
xchg
cmp
pop
jnp
xchg
xor
ds
pop
mov
out
add
ljmp
mov
add
pushf
popa
mov
jecxz
add
out
sbb
add
add
mov
and
add
out
inc
mov
cmp
sub
fisubl
sub
xchg
cmpsl
mov
add
sbb
mov
add
imul
adc
popa
sbb
add
add
push
xor
int
inc
cmc
cmp
add
mov
inc
movsl
mov
cwtl
inc
test
add
fists
clc
out
nop
pusha
mov
fcomi
sti
or
les
testl
xor
inc
add
mov
sub
sub
aaa
ljmp
or
pop
sbb
push
or
push
mov
ret
or
jne
imulb
lahf
xchg
pop
push
push
pop
inc
xor
jle
jmp
dec
cwtl
or
jbe
sub
push
sar
pop
add
mov
mov
in
sbb
jecxz
lret
mov
gs
leave
pop
ja
xor
jmp
cwtl
loop
dec
and
add
inc
scas
pop
mov
lret
popa
mov
repnz
lret
mov
pusha
ljmp
shlb
repnz
jg
jne
xor
add
cld
dec
adc
adcl
xor
imul
push
pusha
aad
hlt
push
add
pop
add
fs
pop
inc
add
stos
mov
lock
jo
je
inc
rcl
push
mov
xor
xor
adc
rorb
scas
js
add
adc
inc
inc
repnz
faddl
xchg
push
push
addr16
nop
sub
jmp
add
mov
int3
adc
jle
testl
or
cmp
cmpsb
fsubrp
cmpsl
inc
mov
xchg
mull
sub
pop
test
dec
dec
lret
push
andb
inc
lcall
and
pop
adc
push
lods
repnz
cmp
inc
add
xchg
adc
or
and
sbb
lret
push
push
insl
out
shl
pop
mov
rorb
divps
fsubrs
mov
call
jge
xor
add
pop
or
je
jne
out
pop
add
lahf
push
fucomp
jmp
loop
xchg
inc
mov
in
add
fdivl
mov
sub
inc
sub
add
pop
addb
or
ret
mov
add
sub
and
lcall
adc
ljmp
out
dec
pusha
pop
lock
mov
or
test
out
jno
add
fists
sbb
or
sbb
mov
jno
test
cld
mov
nop
mov
jmp
push
jp
sub
jle
push
or
or
and
add
adc
pop
sahf
aam
loopne
fs
lea
push
nop
sub
nop
jae
sbb
in
lcall
loope
scas
mov
dec
rcll
shlb
add
lcall
sbb
and
ror
rorb
rcl
push
pusha
test
jb
sub
fadds
pop
mov
add
pop
xchg
or
and
add
jl
add
scas
jae
movsb
ljmp
inc
aaa
das
shlb
pop
out
xlat
subb
fnclex
mov
nop
pushf
pop
pop
xor
popl
pop
outsb
fstp
ja
fisubrl
mov
ret
add
mov
dec
lods
sarb
inc
scas
mov
push
aad
insb
insl
inc
xor
pushf
mov
add
iret
into
or
cmp
scas
pop
jne
xchg
pop
jbe
and
lcall
inc
out
sarb
dec
orb
xchg
cmc
adc
aam
xor
adc
rorl
bswap
xlat
aaa
leave
pop
xchg
cmp
add
mov
sbb
cli
cmp
mov
or
and
movsb
fadds
xchg
lock
xor
rolb
outsb
pop
loopne
fadds
test
sbb
add
aaa
fwait
inc
dec
je
cmp
sahf
jg
xchg
add
stc
std
scas
mov
lods
add
cmp
dec
add
in
stc
dec
inc
sub
adc
xorb
or
add
xadd
push
add
inc
sub
ljmp
fs
xchg
ret
out
and
rcll
pop
sub
enter
push
add
jne
shlb
mov
pop
add
or
cmp
dec
xchg
ljmp
ret
jp
nopl
mov
loope
or
push
lahf
bound
mov
xchg
add
add
lods
adc
cmp
mov
in
add
repz
or
inc
jecxz
sbb
and
sti
jb
mul
dec
outsb
gs
cmpsb
out
ss
add
lods
imul
daa
fidivs
fdivrl
rclb
push
push
addr16
fwait
adc
dec
or
ja
sbb
mov
test
xchg
and
mov
and
popa
enter
pusha
movsb
pop
add
not
ds
xor
xchg
test
push
gs
andb
jbe
add
sahf
aam
clc
cmc
lret
sub
addb
mov
pop
sbb
shrb
bound
jbe
and
ss
add
aaa
sub
add
ror
jmp
cmpsl
add
loope
les
stc
pusha
xchg
add
and
pop
lret
fdivrl
icebp
pop
insl
scas
and
xchg
pop
add
insb
idivb
jbe
sbb
sbb
xchg
loop
add
cli
mov
mov
shll
mov
scas
prefetchnta
and
adc
sub
xchg
call
add
in
dec
dec
adc
sub
add
sbb
sub
arpl
rcll
add
pop
push
and
mov
add
cmp
push
shrb
faddl
xor
shr
push
dec
mov
pop
leave
das
cmc
repnz
call
jge
in
fadds
sub
enter
add
dec
cmp
pop
jns
cmp
out
mov
xor
das
std
adc
jae
add
cmp
sbb
dec
out
cmc
or
adc
lods
mov
mov
sahf
subb
cmp
inc
repnz
out
loopne
mov
pusha
mov
add
out
push
add
sti
outsb
push
loopne
sub
in
xchg
sbb
pusha
pop
jmp
sbb
or
inc
pop
cmpsl
pushl
dec
and
lods
or
lock
in
jle
cmp
pop
mov
sbb
jnp
add
clc
sbb
sbb
add
in
add
pop
push
jne
ret
mov
test
mov
mov
fstpt
scas
mov
pop
icebp
cmp
xchg
inc
mov
pusha
pinsrw
mov
lcall
sub
xlat
sbb
jbe
and
add
mov
ss
dec
mov
pop
push
cltd
inc
and
jp
psadbw
mov
cltd
add
cmpsb
cmp
xchg
repz
jno
push
xor
aas
xchg
or
shlb
fcoml
ss
lret
aad
lock
imul
xchg
ss
jle
jns
add
add
dec
adc
std
inc
inc
push
xlat
lds
xchg
add
cli
jbe
add
movsb
xlat
hlt
aam
cmp
cmpsl
add
add
inc
pop
and
sub
push
dec
add
leave
decl
mov
addb
sbb
push
lea
and
inc
mov
imul
cmpsl
hlt
add
pop
cwtl
shrl
shl
cs
loopne
inc
in
lcall
xor
dec
bound
push
add
sub
push
mov
rolb
jle
cmp
mov
sub
push
pop
sub
inc
add
or
pop
str
popa
aas
je
push
add
xchg
or
lret
pusha
inc
stos
mov
pop
mov
aam
xchg
pop
out
stos
cmp
std
dec
pushf
xorb
pop
test
sub
and
js
pop
mov
lods
orb
or
clc
js
push
popa
notb
add
xor
in
add
lret
jmp
pop
leave
jl
cmp
ja
adc
mov
and
cld
add
adcb
dec
nop
add
out
sti
mov
mov
lret
push
rorl
mov
add
jbe
lods
icebp
cmpsb
rolb
repnz
sub
ret
inc
aaa
mov
out
jnp
cmp
xorb
pop
dec
lods
jne
jae
add
mov
movsl
xchg
test
mov
pop
cli
insl
push
mov
mov
or
mov
push
jp
sbb
cmp
rcll
fwait
or
push
push
testl
add
mov
cmp
clc
outsb
jge
int
or
mov
pop
cli
pop
and
aaa
test
mov
iret
mov
and
mov
fnstcw
pop
add
out
call
pop
pop
fstpt
test
clc
lcall
das
cmp
ror
add
pop
fistl
fsub
dec
add
add
notl
fistpl
js
jbe
xlat
inc
xchg
push
sub
add
sbb
outsb
xchg
mov
dec
sbb
add
and
add
cmp
cmp
fcoml
add
ja
fcmovnu
shll
cli
add
push
xchg
in
movsb
sub
fidivrs
sbb
outsl
sbb
xchg
inc
dec
sub
mov
add
lock
and
std
aad
push
add
sti
roll
jge
dec
fs
jmp
dec
inc
std
add
hlt
fidivrs
cmp
jp
fsubrs
cld
loope
mov
jnp
stos
xor
or
lds
add
mov
bound
roll
scas
jae
add
xor
add
rclb
mov
add
enter
sbb
frstor
mov
inc
pusha
sub
mov
daa
mov
cmp
mov
stos
es
sbb
inc
flds
mov
fidivl
rorb
sub
pop
and
sar
out
aad
mov
add
iret
test
sbbl
fdivrl
dec
add
sbb
xchg
push
outsb
add
sub
test
sahf
orb
or
add
std
nop
mov
loop
sub
jp
lea
subl
icebp
test
add
loope
in
mov
or
mov
jge
add
sub
sahf
pop
add
fs
pop
add
push
xor
cmp
in
aam
lcall
insb
push
add
movb
push
insb
test
push
out
mov
mov
shlb
add
push
movsl
inc
pusha
jle
scas
jg
jno
sub
and
roll
movb
pop
imul
mov
shll
enter
jle
add
hlt
popf
adc
xchg
mov
subb
sub
fbstp
or
inc
addl
or
and
push
xchg
andb
xor
sub
jg
push
loopne
loopne
mov
jns
or
sub
add
push
mov
outsb
sbb
or
mov
mov
pop
push
pop
cmp
inc
jecxz
rolb
add
sub
xchg
lds
ss
cmp
or
lret
mov
shrb
roll
add
cli
jne
out
xor
jae
mov
add
xor
loopne
shll
test
fsubp
mov
lods
or
ret
add
cmp
call
mov
data16
or
xor
xchg
cmpsb
cmp
or
jl
pop
add
test
inc
xchg
arpl
cwtl
pop
lods
out
loopne
add
xchg
fwait
mov
es
sbb
out
insb
mov
clc
and
add
jo
lret
mov
rcl
pop
adc
cmp
fiaddl
lock
cmp
add
inc
nop
jbe
xor
ljmp
lret
mov
adc
orb
sti
rdpmc
push
or
add
cmp
cmp
sbb
sub
add
push
or
add
push
stos
push
add
icebp
jge
sub
adc
xchg
test
test
add
mov
inc
cmp
movsb
add
adc
or
stos
negl
sbb
xchg
and
add
loope
mov
add
cwtl
fisubl
sbb
xor
test
xchg
jb
dec
xchg
sbb
push
lea
adcb
loopne
dec
xchg
outsb
pop
jne
pop
mov
add
std
sti
pop
jns
add
add
xchg
inc
sbb
add
cmp
mov
repnz
in
bound
pusha
test
or
add
sti
and
ss
dec
clc
inc
adc
and
sub
pop
sahf
insb
testl
test
sub
ret
sbb
notl
movl
idivb
adc
push
add
loopne
call
enter
subl
cmp
ljmp
fidivrl
add
cmpl
jno
and
add
shlb
das
add
and
cmp
fwait
aam
sbb
jno
dec
fldl
movsb
sbb
xor
mov
aaa
dec
hlt
pop
pop
gs
shl
ds
ss
mov
and
sub
push
push
inc
in
pushf
cmp
add
mov
icebp
hlt
mov
jno
mov
rcrb
sbb
into
pop
mov
aaa
cmp
jge
push
xchg
cmc
push
mov
daa
roll
sub
inc
add
inc
and
or
in
ds
cmp
xor
popa
add
mov
les
lcall
dec
jmp
fsubs
cld
or
add
jbe
add
mov
daa
inc
dec
push
pusha
dec
cld
cmp
cmp
or
iret
mov
pop
and
xor
pop
inc
dec
data16
pop
jne
push
push
jl
cmc
adc
ss
aam
add
xchg
add
out
mov
or
jg
sbb
mov
pusha
andl
mov
daa
or
outsl
push
aad
jne
loopne
mov
adc
cmp
pop
mov
jl
test
adc
in
icebp
cmp
add
jb
adc
pushf
adc
dec
dec
adc
insb
lock
xor
dec
jns
jmp
or
enter
xorb
mov
mov
popf
cwtl
in
in
aad
add
adc
iret
jl
ret
pop
mov
es
dec
out
outsl
movsl
jnp
rcrb
test
dec
push
cmp
dec
or
enter
sarl
fnstenv
xor
outsb
sbb
pusha
ss
int
mov
adc
and
xchg
adc
pop
adc
cmp
inc
jno
pop
dec
mov
mov
and
movsl
push
pop
mov
xor
mov
pop
lods
std
add
add
adc
lahf
adc
and
add
cmp
lea
lret
inc
stc
inc
stc
iret
xor
cmpsb
inc
add
cmp
rcrb
sub
xchg
enter
adc
add
lea
shlb
mov
lret
repnz
adc
jno
call
daa
sub
dec
mov
test
sahf
and
imul
mov
lock
dec
ficoms
xchg
andb
pop
or
aas
mov
jmp
scas
push
outsl
insb
clc
iret
call
xor
mov
ds
dec
add
mov
int
emms
push
mov
stc
out
add
jg
pop
or
or
or
rolb
aas
sahf
outsl
jbe
inc
push
daa
sub
sub
lahf
or
loope
arpl
pushf
xchg
daa
data16
sbb
add
mov
or
add
pop
mov
call
movsl
jmp
inc
pushw
out
add
xor
xchg
add
leave
out
lea
mov
push
jae
lods
add
mov
add
dec
mov
or
int
adc
rorl
fstpl
and
movb
sahf
lret
and
lcall
in
loopne
cwtl
imulb
push
int3
mov
dec
fisubrs
mov
mov
sbb
push
mov
dec
jle
push
sub
sub
mov
test
xchg
dec
data16
sub
fstpl
test
push
xchg
sub
adc
ds
gs
and
aaa
inc
mov
dec
mov
in
inc
adcl
insl
adc
push
push
jo
xorb
jno
and
lods
or
or
outsl
scas
adc
push
out
or
sbb
movsl
fildl
inc
test
jmp
xor
sahf
inc
std
dec
push
jp
sbb
mov
sub
int3
cmp
push
out
xor
rorb
mov
add
xor
ja
add
int
mov
enter
pop
leave
in
adc
cmc
loop
sub
sbb
xorb
int3
jns
mov
enter
add
mov
popf
adc
jbe
mov
or
mov
call
add
pop
mov
mov
cwtl
adc
shlb
cs
mov
cmpsl
add
leave
ja
add
adc
sub
mov
mov
pop
add
call
mov
in
add
movsb
ss
sbb
mov
mov
sbb
lahf
adc
clc
mov
cmp
insl
jmp
fstpl
inc
sub
icebp
xor
or
out
dec
jnp
cmp
add
push
xchg
rolb
repz
or
add
pushf
push
mov
push
adc
and
jle
xor
cwtl
xchg
loop
pop
add
mov
mov
gs
movb
arpl
pop
add
fildl
icebp
dec
bound
jmp
dec
mov
stos
movmskps
inc
push
lcall
pop
jle
pop
nop
rorb
shrb
rcrb
cli
pusha
aam
dec
jecxz
add
jns
push
je
mov
js
out
nop
mov
push
test
sub
into
xlat
mov
sarl
scas
pop
push
nop
push
arpl
dec
fs
xchg
enter
xor
mov
gs
mov
sub
fdivs
aas
loopne
inc
xchg
inc
popa
jno
fcomps
and
in
rolb
jne
nop
rcrb
insl
xchg
sbb
xor
sub
dec
fisubrs
push
mov
lahf
and
push
add
pop
sub
or
fisttps
test
shlb
test
pop
mov
mov
sub
out
call
and
pop
jne
add
dec
aaa
movq
xlat
inc
lcall
push
sub
mov
add
inc
push
je
dec
pop
mov
addb
mov
lock
lcall
push
out
cmp
inc
and
dec
mov
dec
lcall
insl
push
ds
rcrb
fs
shll
sbbl
adc
mov
push
adc
inc
leave
lcall
int3
js
jns
mov
mov
xchg
jnp
lret
in
repnz
push
movaps
mov
sub
cwtl
jb
sbb
mov
scas
icebp
push
push
mov
add
mov
mov
rcll
mov
setl
loop
ret
addb
data16
cli
push
sbb
xchg
jb
push
or
jo
mov
push
mov
add
sarb
mov
callw
or
jg
nop
idivb
add
sbb
fchs
pop
icebp
and
fs
in
xchg
sbbb
add
mov
lock
xorl
and
or
push
adcb
bound
pop
out
rcrb
rcrl
pusha
add
jbe
mov
add
pushf
ret
inc
jp
pop
aam
out
xchg
add
cmpsb
mov
or
and
xchg
add
jl
bound
cmp
jg
adc
add
fdivl
insl
inc
cmp
cli
je
pop
add
lea
arpl
fcom
cmc
add
pop
adc
mov
sar
aad
sub
or
pusha
push
in
sbb
jae
iret
push
push
orb
pop
or
cwtl
jecxz
push
ret
js
or
add
adc
xchg
mov
movsb
jnp
mov
push
push
bound
jecxz
mov
movl
dec
inc
repnz
mov
in
cld
adc
jmp
inc
push
lock
das
adc
ret
and
mov
mov
xor
out
jno
lret
add
movsl
and
dec
xchg
cltd
in
add
inc
lods
cld
icebp
filds
jns
jecxz
xlat
out
push
add
push
xchg
sahf
icebp
lret
ss
jbe
dec
outsl
in
andb
or
and
orb
das
sbb
in
add
cmp
popa
int3
shlb
imul
jg
fs
cmp
add
repz
mov
add
mov
mov
cmpl
add
fs
stc
jae
cmp
sbb
xchg
lcall
mov
mulb
jnp
mov
jb
push
repz
push
fadds
jle
lret
arpl
pusha
stos
mov
sbb
sub
push
push
subb
subl
loop
aad
imul
sahf
pop
add
pop
lahf
aam
mov
push
addr16
xor
add
es
leave
adc
movd
pop
out
add
sub
adc
popf
dec
and
cs
mov
enter
add
jl
divb
add
add
outsl
push
xchg
add
jge
add
movl
shrb
mov
dec
lds
mov
xor
aas
mov
fiaddl
or
sbb
add
xchg
movsl
mov
enter
push
shrl
pushl
imul
xchg
fstps
dec
out
sub
sbb
add
jb
lods
lds
ret
aas
xchg
js
sbbl
call
popa
sub
ret
and
fdivrs
push
repnz
jnp
add
pop
xor
ljmp
lock
ja
mov
xor
add
aad
jg
jnp
pop
pop
out
rolb
and
arpl
push
ret
xor
xchg
aad
pop
mov
xchg
sahf
jno
add
xlat
jnp
push
mov
ret
cmp
sub
add
xor
and
pop
es
sub
out
popa
sbb
pop
sbb
dec
ljmp
jmp
leave
mov
jl
add
and
lds
imul
fadds
adc
mov
add
xchg
xor
jecxz
mov
jne
push
dec
sub
push
out
add
cld
sub
iret
mov
pop
xchg
add
popl
imul
jo
sub
fimull
es
and
sbb
cmp
push
pop
add
add
cmc
cmp
jecxz
mov
mov
fsubrs
cmp
mov
arpl
mov
mov
sub
gs
pop
and
xchg
outsb
push
and
fnstsw
movsb
jbe
mov
push
test
dec
lock
out
jecxz
mov
test
jne
arpl
inc
pusha
ja
lea
mov
xor
mov
push
or
hlt
push
pcmpgtw
test
addb
push
sbb
add
and
pop
add
faddl
sub
in
jmp
ficoms
aas
pop
pop
xorb
fstpt
mov
add
sahf
jne,pt
sbb
add
ret
subl
add
sub
jle
rcr
rclb
sbb
test
subb
push
cld
ljmp
div
addl
pushw
loopne
xor
mov
add
sti
clc
add
stos
and
pop
and
mov
out
mov
dec
pop
filds
mov
in
cmp
dec
inc
add
rol
hlt
cmpsl
sbb
sub
sbb
dec
inc
lcall
dec
ret
lds
adc
xor
mov
add
add
sbb
xor
sub
dec
push
fcomp
rclb
mov
sar
pop
push
stos
and
notb
nop
add
jae
pop
and
inc
aaa
cs
out
inc
pop
cltd
sbbb
pop
and
add
xchg
add
loope
push
gs
cmp
jg
test
cmpsb
iret
mov
subb
jno
cmp
in
pop
mov
mov
aas
popf
jecxz
fsubp
jnp
inc
sub
pop
inc
add
out
dec
adc
int
daa
lock
ds
xor
lea
add
in
cmp
add
add
push
repz
adc
pushf
mov
add
mov
mov
push
add
mov
pop
add
nop
aas
insb
and
inc
mov
les
jno
pop
pop
in
shrl
shll
cwtl
out
pushf
cltd
scas
ja
add
jmp
roll
leave
repz
cli
or
and
pop
or
xchg
mov
mov
es
out
fld
outsl
fwait
mov
int
pushf
add
andl
xchg
add
add
stos
pop
add
jle
scas
inc
adc
dec
sub
add
and
inc
or
inc
and
dec
cmovae
push
xchg
jb
pop
sbb
incb
es
xor
fidivl
jnp,pt
push
pusha
push
pop
rol
jge
jle
dec
sbb
sbb
or
xchg
adc
push
test
and
ss
add
in
xchg
out
inc
jmp
dec
jnp
lret
mov
rcrl
mov
hlt
or
pusha
jmp
mov
shlb
sbb
loopne
inc
idiv
add
or
jg
add
movsl
mov
pop
add
les
cwtl
clc
mov
and
add
cmp
sub
push
xchg
add
hlt
push
fs
jno
fcomps
lret
jp
ja
jae
ds
pop
adc
sub
add
out
aas
mov
out
mov
mov
lea
add
sahf
imul
jae
testl
imul
std
stos
mov
mov
push
fadds
shll
cmp
add
cs
xchg
adc
inc
daa
faddl
xchg
and
dec
test
movsb
mov
xchg
dec
cmpl
and
or
fdivrs
repnz
cmp
test
test
add
scas
adc
mov
add
aas
xor
test
ds
mov
test
jg
test
mov
fs
and
add
inc
inc
dec
ja
add
into
or
pop
sub
mov
clc
cmp
pop
jns
add
loopne
mov
lret
or
jg
and
mov
stc
mov
adc
mov
insl
rolb
jno
loopne
add
stos
daa
add
xlat
xchg
push
mov
aad
push
push
push
js
mov
xorb
loope
ret
arpl
lret
ds
rcrl
out
pop
dec
cld
xor
in
mov
sarl
rorl
leave
add
test
dec
ss
add
mov
push
daa
add
aaa
decb
fcompl
push
jnp
pop
cmp
adc
stc
mov
add
add
aad
sbb
and
rclb
ffreep
add
mov
mov
add
add
cs
jmp
xor
adc
out
imul
push
sbbl
mov
push
cwtl
imul
pushf
rcr
in
in
cmp
add
jae
int
and
sub
push
inc
addb
popf
jbe
add
sub
jl
cmc
ret
jne
add
adc
jns
ret
pop
add
pop
or
adc
lds
sahf
std
mov
inc
sbb
add
fsubl
out
jnp
push
mov
rclb
add
xor
fsubrs
inc
inc
pop
cmp
pushf
mov
sarb
add
inc
fisttps
dec
dec
adc
sbb
sbb
scas
leave
test
push
arpl
cmpsl
enter
add
mov
jne
repz
add
scas
xor
andb
rorb
ficoml
or
es
dec
jns
push
mov
and
leave
enter
pop
neg
push
mov
push
and
test
mov
jae
shrb
fwait
add
add
fistps
hlt
cmp
add
dec
stos
push
add
in
inc
nop
jno
in
mulb
add
mov
add
lcall
hlt
xor
and
cmp
jmp
clc
dec
add
dec
mov
sub
dec
or
or
stc
add
inc
sbb
fildll
jge
dec
iret
or
js
inc
loop
mov
aas
cmp
add
out
mov
push
mov
bound
les
daa
lock
dec
sbb
add
xchg
cmp
clc
cmp
add
aam
inc
adc
push
inc
pop
imul
add
jae
std
pop
repnz
sarl
add
push
xchg
mov
pop
jbe
stc
push
data16
pusha
adc
movsl
lcall
add
ud0
inc
inc
xchg
or
jnp
rcll
add
xchg
inc
and
pop
jg
add
jl
out
repnz
loopne
es
mov
icebp
and
pop
dec
add
test
pop
lcall
out
and
add
adcb
jae
and
enter
xor
fucomi
push
inc
in
push
subb
jle
mov
add
sub
leave
ret
int3
popa
push
push
jne
pop
and
push
jge
sub
fsubs
cltd
xor
aad
dec
iret
cli
ds
add
jp
loop
add
lods
push
cmc
in
mov
xor
dec
clc
addb
jns
add
adc
sti
sbb
add
cmp
dec
pushf
nop
int3
out
sbb
xchg
jg
nop
inc
scas
pop
xchg
cli
je
add
pop
xor
add
push
cmp
add
dec
iret
mov
add
dec
mov
lock
mov
xchg
jmp
inc
pop
push
cmc
sti
mov
shl
or
sarl
jae
add
mov
sti
add
dec
testl
cmpsb
xor
out
nop
lods
andb
adc
clc
jle
push
lret
data16
and
fnstsw
fiadds
loopne
and
and
movsb
add
dec
dec
dec
pusha
stos
and
or
xor
xor
mov
scas
add
or
fiaddl
addr16
sub
lods
jle
add
pop
int3
imul
negb
pop
and
push
add
sbbl
push
clc
sbb
add
push
fdivrs
xchg
pop
jo
push
add
pushf
scas
outsl
add
dec
popa
sahf
fwait
sbb
add
cmp
dec
jmp
push
fdivp
das
add
sbb
adc
cmpsb
mov
iret
add
dec
or
xchg
mov
lahf
mov
repnz
fldl
cltd
jp
fcompl
repz
inc
push
psubb
jl
mov
dec
ret
mov
dec
xchg
xor
adc
jo
pop
add
pop
cmp
and
pop
push
jl
cmc
out
inc
sbb
call
sbb
in
or
mov
cmp
pop
pop
test
add
cld
out
add
insl
leave
dec
fistpl
fnop
jmp
sbb
psrlw
loop
cwtl
in
cmp
pop
jg
add
push
add
sbb
jnp
xchg
inc
fidivl
add
in
inc
aas
rcrb
add
push
pop
std
lahf
lock
push
push
outsb
aaa
inc
xor
cmpsb
and
pushf
add
mov
mov
jg
dec
and
daa
pop
adc
aam
das
dec
cmpsb
add
mov
stc
push
shlb
clc
lods
dec
add
sub
xlat
bound
xchg
cmp
nop
push
in
flds
cltd
mov
xor
lcall
add
call
sub
movsb
fdivs
ljmp
pop
ds
or
mov
outsl
std
fiaddl
icebp
jp
adc
xchg
add
in
pop
and
mov
cmp
hlt
jle
pushf
call
adc
add
and
or
pop
and
push
and
roll
add
repz
loop
pop
add
fnstenv
pop
dec
les
sub
xchg
jnp
xchg
add
addl
into
clc
pop
notb
addb
inc
shl
test
pop
mov
pop
xchg
xor
in
xor
add
xorb
pop
or
out
lds
cvtps2pi
pop
cmp
dec
pop
ljmp
mov
dec
stc
aaa
push
push
cmp
out
imul
je
pop
inc
syscall
xchg
jg
pusha
cmp
int3
add
pop
in
cmp
filds
call
call
hlt
push
loope
mov
bound
cli
pop
pop
ja
mov
jbe
inc
add
fildll
dec
shrb
mov
imul
or
and
sbb
sahf
jno
or
dec
popa
sub
push
sbb
mov
add
dec
jmp
sbb
lea
pop
mov
shlb
cmc
fadds
dec
test
push
repnz
dec
adc
adc
pop
fwait
stc
or
sbb
testl
leave
cli
sub
sbb
cli
push
push
jl
pop
dec
mov
xchg
add
ljmp
aam
mov
imul
jo
xor
lock
xchg
test
out
add
repz
leave
bound
sbb
or
pop
and
mov
rolb
cmp
add
sub
add
jle
sub
mov
fdivs
jmp
addl
pop
cmp
in
push
testl
adc
jnp
mov
cmp
add
into
mov
ds
jne
dec
add
jb
dec
out
insb
xchg
pusha
lcall
les
dec
lods
femms
push
jmp
sub
js
jae
add
cltd
mov
add
sbb
fadds
mov
icebp
mov
pop
pop
sbb
mov
add
mov
xchg
jo
test
arpl
hlt
inc
sbb
sti
call
jecxz
push
aam
dec
sbb
in
pop
inc
out
adc
addb
pop
pop
add
fistps
test
daa
das
imul
addr16
test
clc
cli
push
mov
out
insl
das
mov
aam
pop
inc
inc
pop
lock
pushf
jmp
cltd
ja
addr16
addb
push
popf
stc
mov
loope
cmpsl
mov
scas
mov
decb
insl
lods
nop
xor
ljmp
fsubl
rcll
add
fs
fdiv
into
adc
in
data16
lods
js
push
dec
mov
and
mov
orb
mov
mov
neg
jne
dec
sub
mov
sbbb
mov
xchg
jg
jmp
inc
fstl
scas
pop
fdivl
js
lock
int
jne
add
mov
addr16
adc
cmpsb
cltd
in
cmp
das
sbbl
pop
jbe
jne
mov
pop
inc
jnp
mov
das
sub
adc
arpl
jnp
mov
sub
or
push
and
ffree
in
lock
aaa
add
aad
pop
add
test
lea
and
movb
cmpl
cltd
add
loop
pop
jmp
sub
movsl
push
shlb
xor
cmpsb
cli
xchg
jg
addl
cwtl
cmc
fisttpl
mov
jne
push
cmpsb
pusha
add
into
push
fwait
or
or
inc
pusha
sbb
cli
pop
adcl
ficompl
sbb
das
sbb
xor
std
incb
add
dec
sub
jns
cwtl
mov
jg
add
outsl
xchg
fcompl
xchg
mov
jmp
movsl
inc
loope
jle
add
pop
gs
add
xchg
rclb
jmp
mov
xlat
mov
pushf
inc
movsb
xchg
popa
test
lea
fdivrs
xor
lock
imulb
push
in
adc
test
and
or
jle
fimuls
and
mull
sti
repz
loop
pop
int
mov
mov
and
mov
lcall
add
mov
add
pop
es
mov
add
pop
push
push
jb
adc
jbe
hlt
mov
pushf
mov
pop
xlat
inc
out
or
fs
mov
mov
and
decb
add
jecxz
cmp
adc
pop
rclb
mov
subb
sbb
cmp
xchg
jne
pusha
jns
mov
std
mov
or
imul
push
adc
sbb
fcomip
repnz
mov
sahf
sub
ficomps
iret
std
add
xor
pushf
cs
jne
and
fucomi
lret
inc
enter
xchg
mov
adc
add
add
inc
bound
lret
outsb
sub
and
movsl
mov
daa
ret
add
icebp
push
addb
dec
jne
push
mov
popl
cltd
jo
push
iret
stos
jno
loopne
add
sbb
push
aad
je
test
jnp
insl
push
add
jno
mov
in
faddl
test
mov
and
test
pop
lahf
nop
jne
addb
pop
shrb
dec
push
in
js
add
cmp
pushf
inc
mov
cs
push
xchg
pop
rcl
clc
in
or
fstps
fildll
dec
aam
divl
hlt
mov
sar
lods
add
rorb
pop
add
sub
cmpsb
jmp
pop
movsl
sbb
fcompl
pusha
adc
add
repnz
fidivs
lock
dec
mov
inc
add
add
add
jp
cmp
out
lret
cmp
mov
mov
in
int
lock
sub
movsl
dec
add
insl
add
sbb
dec
add
or
je
or
xor
mull
hlt
add
dec
inc
jae
mov
xor
ffree
add
arpl
popa
add
push
xchg
pop
cld
and
add
xchg
aas
addb
push
add
mov
pop
call
call
jne
aas
mov
xchg
push
and
mov
insl
fstl
and
rcrb
add
aaa
add
jecxz
into
in
insb
rcrb
cwtl
xor
sub
inc
or
lea
mov
loope
push
lods
sbb
push
aad
push
dec
cmp
mov
inc
dec
fcompl
mov
cmp
lds
js
sbb
out
inc
shll
dec
cmpl
xchg
cwtl
clc
shll
les
in
and
cmc
mov
xchg
subb
push
sbb
add
add
ljmp
incl
mov
xchg
sbb
flds
push
sbb
push
mov
loopne
push
dec
xchg
inc
sub
addb
popf
lret
jae
daa
jg
add
pop
sbb
sub
cwtl
mov
push
cmp
sti
divl
scas
pop
lcall
pop
jbe
inc
sahf
jo
in
int3
sbb
push
outsb
les
sbb
pop
cmp
push
fadds
lcall
sub
pop
outsl
fimuls
xor
cld
inc
andb
movsb
mov
adc
xchg
or
add
pushf
imul
int3
pusha
xor
inc
adc
lods
push
inc
movsl
sbb
data16
call
mov
pop
insb
testb
mov
adc
scas
mov
or
test
cmp
mov
sub
cmp
in
loope
adc
adc
or
add
int3
cld
pop
icebp
xor
sbb
or
mov
loope
jnp
addb
mov
and
dec
ret
ds
cmp
insl
loopne
add
lods
orb
xchg
aaa
push
movsb
and
sub
add
inc
or
sbb
xor
test
pop
lret
xchg
leave
add
inc
sub
lret
leave
stos
push
les
ljmp
div
mov
out
loopne
and
adc
push
inc
mov
lret
sarb
imul
lret
mov
jns
test
loope
imul
sub
js
pmulhuw
mov
cmpsl
push
rclb
add
pushl
jl
lods
add
push
mov
maskmovq
idivl
gs
fcomp
inc
jne
push
cmovp
and
mov
xchg
push
or
ret
ljmp
sub
jno
cmp
dec
sbbl
call
inc
add
in
xor
adc
enter
jns
out
pop
and
and
inc
mov
add
addr16
cmp
mulps
and
mov
mov
sub
rcll
and
sub
inc
add
pop
push
nop
test
jns
push
test
and
pop
or
inc
ds
dec
jne
in
test
xchg
clc
insl
push
jns
ret
sub
jl
les
fsubrl
aas
add
or
jns
aaa
push
mov
adc
push
dec
mov
vpcomw
pop
xchg
push
mov
jl
cld
pop
mov
pop
xor
call
add
xorb
add
jb
test
dec
mov
loope
es
js
inc
cmpsb
xor
jo
sub
xor
data16
add
dec
mov
nop
add
add
mov
ret
setge
xchg
add
pop
xor
movsl
add
int3
jbe
and
adc
push
pop
sti
lret
push
ret
out
adcb
stc
ss
push
or
add
out
iret
cwtl
xchg
or
or
fisubl
lcall
push
adc
push
loopne
aam
xchg
add
popa
fiaddl
pop
or
adc
fwait
leave
add
jl
add
repnz
enter
ljmp
sub
stos
mov
add
fs
arpl
cwtl
and
add
movups
push
or
jbe
test
add
mov
push
pop
adc
mov
mov
push
pop
pop
xchg
push
mov
cwtl
mov
and
cmpsb
loopne
push
cmp
or
je
add
scas
pusha
orb
subl
sub
push
call
mov
and
out
sbbl
lret
stos
cmova
add
dec
nop
add
loopne
testb
mov
mov
aam
pop
mov
mov
insl
scas
cld
bound
push
ds
add
aaa
in
ror
cmc
mov
lock
jl
cmp
mov
rorl
sub
adc
movsb
lea
pop
mov
shr
cmpsb
pop
mov
jge
xor
addr16
loopne,pn
add
push
test
cmpsb
mul
and
jnp
fistpll
add
jmp
mov
dec
imul
sbb
loope
add
roll
adc
xchg
mov
push
imulb
xchg
pusha
sub
add
xor
lock
daa
clc
cmp
lea
push
inc
loopne
ss
pop
fiadds
movsb
pop
aad
and
jle
leave
xorl
cmp
dec
gs
cltd
add
mov
add
orl
inc
gs
jg
add
pop
push
push
xchg
test
sar
fmuls
popf
loop
sbb
add
sub
sub
add
out
rorb
pusha
adc
sub
ficoms
mov
call
xchg
xchg
inc
lods
xor
inc
pop
psubb
mov
sti
mov
loopne
fisttps
mov
scas
outsl
sbb
push
adc
sbbb
add
mov
jae
push
fildl
jb
and
dec
or
pusha
add
lods
mov
jbe
daa
stos
and
mov
inc
addb
fiadds
add
or
or
push
push
and
cmp
loopne
aas
mov
and
movsl
add
stos
stc
xor
nop
cmp
je
jp
jmp
and
add
inc
pop
test
add
clc
pop
lret
xor
lock
pop
and
pop
rorl
cmp
inc
stos
add
mov
adc
cld
pop
in
mov
cmp
add
sub
cmp
push
add
add
push
add
imul
mov
mov
aas
das
mov
test
add
fnstcw
mov
inc
mov
xchg
lock
daa
cmp
add
out
fdivp
jbe
movl
gs
jnp
aam
outsl
add
insl
jle
mov
sbb
add
mov
lcall
lahf
adc
pushf
mov
push
mov
sbb
leave
loopne
jb
push
insb
neg
addb
aas
fldcw
add
push
or
xchg
add
insl
inc
xchg
shlb
loop
movsb
out
loopne
add
xor
jle
lods
ja
rorl
mov
add
das
add
sub
pusha
add
fcoms
or
push
sbb
rorl
push
cmp
clc
dec
hlt
add
idivl
fisttps
cld
add
dec
sbb
lahf
jl
pusha
add
add
cmpsl
mov
loope
sti
mov
lret
cwtl
cld
dec
out
popf
insb
dec
dec
add
repz
and
add
inc
gs
jg
xchg
fyl2xp1
pop
adcb
movb
stos
push
pop
adc
add
sbb
cli
xor
or
push
mov
vmwrite
out
inc
adc
add
out
mov
inc
mov
mov
out
cmpl
add
xchg
aas
inc
fsts
aam
sbb
cmpsl
or
adc
add
push
out
cmp
clc
int3
add
mov
push
sti
clc
dec
sbb
lods
add
lods
clc
jne
cmp
jno
int3
lret
fisubrl
in
mov
adc
add
movsl
cmpsb
mov
and
pop
xchg
pop
mov
xor
dec
js
pop
lds
scas
mov
arpl
outsb
jb
ljmp
or
nop
pop
or
add
scas
inc
sbb
rorl
cwtl
aam
sbb
sbb
cmp
imul
jmp
push
and
push
scas
js
push
xor
test
les
shlb
jo
mov
lret
adc
loop
and
xor
fsubrs
push
pop
jae
lea
and
cmp
cmp
in
aam
mov
or
sub
add
js
je
mov
jg
inc
push
add
popf
mov
lret
push
add
dec
sbbl
xor
add
xchg
jns
cmp
sub
add
inc
inc
xor
std
test
test
faddl
into
outsl
cli
dec
leave
imul
or
fld
stc
jbe
adc
bound
popa
sbb
loop
int
lret
mov
add
je
mov
pop
out
mov
inc
jge
fists
ret
es
adc
loopne
fwait
ljmp
shrl
xchg
fcomps
pop
in
cmpsb
cltd
lcall
mov
mov
bound
sbb
dec
xor
jle
xchg
add
mov
xchg
mov
or
mov
push
sbbb
out
sub
mov
adc
test
mov
cmp
mov
jle
adc
mov
cld
les
pop
add
inc
jg
in
push
nop
pop
add
popf
in
cs
mov
jo
add
push
mov
jnp
add
and
jge
add
cld
lret
das
cmp
jmp
dec
aas
push
pop
call
push
lcall
decb
movsl
popf
add
sub
jb
push
add
mov
adc
test
enter
pop
out
clc
mov
iret
add
js
adcb
stc
outsl
push
lods
roll
lret
ret
or
cmpsl
movsl
pop
jns
jmp
dec
add
mov
shll
add
add
stos
mov
inc
or
mov
push
push
jmp
jns
andb
popa
jl
outsl
nop
add
mov
push
push
xchg
movsb
mov
push
add
dec
test
add
push
and
ret
daa
fwait
mov
arpl
out
jae
add
fstps
in
dec
jp
push
out
mov
jge
pop
mov
daa
data16
pop
leave
pusha
jg
aas
and
into
xor
sub
movsl
repnz
orl
jbe
out
ss
jmp
xor
lahf
pop
das
pop
add
jnp
dec
stc
int3
nop
push
mov
and
xor
ljmp
add
cmc
aaa
and
insl
bound
add
sbbl
push
add
data16
ret
mov
push
jns
cmp
adc
fldl
shlb
enter
xor
add
popa
test
fwait
add
enter
mov
inc
insl
fistps
aaa
pop
add
pop
out
daa
cmpsl
mov
mov
cmp
sub
jbe
cmc
lods
inc
pop
in
mov
mov
cmp
iret
loope
popf
fildl
sahf
mov
fwait
cld
jno
cmp
repz
lods
jl
cmpsl
add
dec
ret
push
jmp
and
add
shrl
jae
popl
push
add
sbb
push
add
ds
add
sbb
cmp
loopne
jmp
push
repnz
ret
pop
sub
not
sahf
shl
scas
or
push
aas
pushf
fiaddl
ret
xor
scas
add
and
cmpb
or
jmp
mov
cmc
add
call
mov
adc
adc
push
jne
lods
pop
add
push
repz
pop
imul
fsubrs
out
mov
sub
pop
shlb
cmp
repz
add
in
inc
lods
es
jae
adc
rcrb
push
adcb
call
dec
push
pop
repz
add
test
sbb
sub
push
enter
push
sbb
imul
mov
shl
sbb
pop
push
add
sbb
into
test
int
push
or
cmp
mov
xchg
xor
inc
add
xchg
testl
inc
fiadds
xor
dec
add
cli
cmpsl
mov
aaa
xor
in
add
aas
loope
rorb
sbb
dec
addl
repnz
cli
add
loopne
stc
cmpsl
pop
add
dec
sbb
iret
mov
hlt
mov
add
or
outsb
xchg
push
and
cmpb
es
enter
imull
xor
into
loopne
xlat
sbb
jne
outsb
mov
or
xor
sub
and
aam
popa
add
cmp
fcoms
add
adc
iret
scas
js
dec
popf
out
or
or
adc
test
sub
insl
add
dec
fwait
pop
and
push
jl
shll
xor
stos
mov
push
jle
pop
insb
ret
push
add
xor
mov
idivl
filds
insb
adc
jecxz
add
sbb
xor
jo
add
mov
pushf
jne
add
xorb
xchg
cmp
pop
sub
es
shlb
mov
sub
jo
aam
pop
dec
cmp
adc
movl
inc
add
in
outsl
xchg
mov
mov
les
test
jge
add
int
rorb
test
add
sbb
pushl
ja
add
enter
add
mov
movsb
hlt
into
das
jno
insl
mov
sbb
movsl
sbb
add
push
push
scas
push
push
lods
xor
dec
and
loopne
xchg
push
fidivrl
jb
neg
and
or
jecxz
cmpsb
jmp
loopne
inc
dec
add
and
orl
push
mov
jge
sbb
rolb
push
xchg
fisubrl
fadds
jno
loopne
lcall
push
ds
mov
cli
aad
fucomp
jae
cmp
cmp
leavew
and
inc
push
adc
inc
push
shl
insl
jae
out
loopne
jo
add
ficompl
fmull
sub
ret
and
sub
and
out
xchg
or
jl
pop
add
inc
repnz
into
cli
add
mov
mov
xchg
xor
adc
jmp
jne
add
lahf
outsb
bound
pop
shl
push
dec
push
xor
mov
loope
jne
add
iret
loop
pusha
cwtl
rorb
pop
in
inc
jg
inc
daa
add
xchg
fists
cvtdq2ps
lock
in
stos
loop
loopne
aad
popa
ss
add
xchg
fmuls
jp
xor
movsl
xor
out
add
xchg
int3
mov
dec
xchg
nop
clc
add
imul
cmpb
sbb
jb
or
jae
test
es
sbb
dec
pop
push
cmp
mov
into
add
leave
add
cwtl
test
dec
mov
loopne
dec
cmp
sarl
add
push
enter
add
outsb
mov
mov
int
lcall
arpl
dec
iret
pop
add
cmp
jle
js
add
aaa
das
insb
inc
mov
cmp
xor
xchg
xorb
pop
in
loope
pop
les
jns
dec
sub
sbb
and
mov
inc
xchg
mov
add
fcmove
and
je
fwait
xor
cli
lret
int
enter
mov
add
adcl
loopne
sub
imul
pop
and
inc
ds
sub
mov
js
or
jno
adc
orb
in
add
jmp
sbb
mov
push
inc
std
mov
add
dec
out
pop
mov
loope
jne
cmp
pop
sub
adc
or
sub
push
cmp
popa
add
outsl
in
cmp
popf
push
aad
or
pop
sub
lock
int3
add
add
push
cs
add
push
test
lret
lods
add
mov
ret
stos
add
pushf
add
mov
bnd
push
daa
cmp
cmpsb
inc
stc
push
cmp
fcompl
je
and
ss
xchg
add
jbe
jg
out
les
call
add
sbb
add
mov
inc
adc
and
addr16
xchg
jno
add
lret
jo
add
xchg
cmp
mov
icebp
push
xchg
iret
adc
jo
pop
pop
xorb
adc
into
stc
add
cli
repnz
push
sub
shrl
sbb
mov
ffreep
movsb
subb
mov
xorb
sub
adc
imul
jae
add
fidivs
rcr
jns
add
pop
jl
add
sub
add
sbb
fldcw
add
cmc
xchg
xchg
add
push
fcomps
xchg
shlb
imul
int3
mov
add
xchg
jl
add
add
mov
js
mov
lret
add
adc
imul
add
jae
repnz
lcall
mov
mov
or
sub
sarb
add
xchg
aaa
xor
lcall
test
and
fyl2x
push
pop
add
lock
cmp
sbb
lcall
xchg
add
cli
addb
sbb
dec
sbb
pop
sbb
add
ret
add
push
push
jae
in
jp
sub
lret
or
jl
sub
cmp
add
int
jnp
pop
mov
loopne
roll
lret
test
add
cmc
mov
sbb
adc
lret
mov
outsb
sarb
add
push
leave
push
jg
cmp
pop
dec
add
mov
das
push
enter
stc
pop
loope
out
mov
stos
in
loop
lret
in
in
out
adc
xor
rcrb
push
pop
add
jns
loop
ljmp
push
stc
outsl
sub
add
popa
lock
es
mov
cmp
std
sbb
add
dec
cmpsl
scas
lcall
fwait
xchg
fildl
sbbb
jno
test
adc
fsubrl
sbb
pop
dec
jae
call
lds
pop
push
inc
lock
dec
xor
jge
test
gs
scas
sbb
out
test
cmp
std
hlt
jbe
and
movb
or
xchg
ljmp
shrb
inc
add
xchg
js
xchg
mov
push
mov
ljmp
add
popf
shlb
push
xchg
dec
mov
mov
pop
loopne
imul
or
pop
out
addb
jb
and
movsb
sahf
les
xchg
jnp
mov
test
aaa
xorb
mov
inc
push
jge
testb
scas
mov
roll
xorb
inc
mov
xchg
fwait
lret
and
xchg
push
pop
pushf
arpl
cmp
dec
xor
xchg
mov
or
daa
outsb
or
test
and
adc
cltd
dec
mov
mov
xchg
jecxz
fiaddl
hlt
add
fnstcw
into
jno
ja
cmp
lock
sar
repz
outsl
imul
incl
adc
and
mov
and
stc
adc
jecxz
loope
mov
cld
popf
sub
mov
mov
xchg
pop
mov
jp
add
adc
mov
add
sti
xor
jle
int3
lods
sarl
sahf
adc
or
mov
xchg
outsl
adcb
adc
int3
sbb
add
sbb
mov
aam
in
jge
rolb
icebp
add
nop
sahf
movb
das
mov
push
add
sub
sarb
lods
insl
clc
bound
fmuls
xchg
xorl
xor
pop
and
das
sub
mov
nop
pop
jo
add
mov
fstl
stos
rorb
pop
jae
mov
cmp
pushf
pop
notb
xchg
lahf
and
jbe
and
cmpsb
insb
shrb
fstpt
xchg
ja
shl
add
lods
adc
pop
add
outsb
mov
cli
pusha
sub
add
xchg
xchg
push
jmp
cli
mov
xchg
jnp
popf
shl
insl
dec
sbb
jmp
pusha
or
loopne
mov
and
mov
repnz
mov
push
xor
jl
sub
adcl
add
mulb
push
loop
pop
imul
jbe
xor
ja
hlt
rclb
fsubrl
pop
xchg
pop
add
jae
sub
mov
add
cmpsb
inc
or
fidivrs
lods
test
jne
test
cmp
inc
loopne
ds
or
mov
cmp
movsl
stos
jge
mov
in
pop
jo
jnp
add
repnz
mov
mov
xor
aaa
imul
mov
hlt
call
pop
sub
out
les
sbb
cltd
mov
mov
sti
and
das
fnstsw
int3
sub
dec
dec
mov
push
lods
add
jb
test
insl
hlt
mov
push
jecxz
pop
cwtl
add
test
pusha
sbb
xor
enter
mov
ficomps
mov
xchg
adcl
mov
push
adcb
enter
cmp
ret
jae
lds
aad
add
cmp
or
mov
dec
add
sub
fbstp
dec
shlw
dec
jo
cmp
push
subb
mov
dec
ret
ja
scas
insb
js
push
mov
dec
push
mov
jl
scas
adc
stos
loopne
test
sub
aad
lock
push
jl
ss
add
fwait
mov
out
addr16
and
jo
movaps
test
insb
push
push
xor
inc
jge
shr
cmp
xor
mov
push
mov
add
repz
push
sub
jg
fst
jmp
call
js
jno
fcmovbe
lds
stos
pop
push
repnz
rolb
inc
cmp
scas
jbe
xor
xchg
pop
lods
or
adc
push
or
adc
sbb
or
push
ljmp
shlb
cmpsl
mov
jbe
mov
ficomps
cmp
les
or
xlat
pop
adc
outsb
jp
cwtl
push
mov
add
shl
push
fisubrs
fdivrp
adcb
in
jecxz
add
jmp
xor
insb
punpckhdq
jp
and
js
and
mov
std
add
push
repz
repnz
add
out
ss
mov
add
push
mov
sbb
add
cwtl
push
lret
outsb
nop
mov
ljmp
popf
xchg
fidivrl
pop
aas
aam
stos
mov
add
sti
add
xchg
das
in
xchg
fiaddl
cltd
lods
jbe
fists
enter
ror
pusha
add
repz
push
push
lret
cwtl
push
outsl
pushf
inc
out
push
setbe
push
add
sub
loopne
iret
call
xchg
lret
dec
push
lcall
cmpb
mov
insl
sub
add
mov
cmc
popa
loop
mov
mov
cmp
sarb
dec
add
ljmp
xchg
inc
inc
push
lock
gs
das
imul
cmp
idivb
pop
cwtl
pop
in
lret
inc
arpl
add
add
pop
shrb
inc
cmp
stc
mov
cmp
adc
jo
inc
aaa
mov
loope
push
sub
and
outsb
sub
jg
and
add
mov
aas
out
add
push
imul
add
insb
pop
in
mov
sahf
cld
inc
fimull
sbbb
sub
add
xor
aam
cld
fisubs
lahf
std
je
out
or
mov
mov
jbe
hlt
out
iret
mov
jne
pushf
add
push
mov
popa
icebp
add
or
cld
in
xor
dec
ja
jge
dec
shll
add
push
rorb
sub
cli
or
rcrl
leave
bound
fsubs
ljmp
cwtl
into
or
push
je
xor
pop
lret
jae
bound
push
add
push
scas
push
xchg
mov
add
aas
mov
push
mov
int
mov
ss
add
aas
mov
xor
movsl
in
cmp
mov
testl
cli
push
test
pusha
shll
outsb
sbb
sbb
data16
std
lahf
pop
push
push
lret
pop
arpl
outsl
mov
xchg
dec
fs
arpl
or
movsb
sbb
or
sbbb
pop
or
repnz
popf
fs
xor
addb
dec
cmp
lods
adc
jle
sub
movsb
in
sub
clc
cwtl
cli
add
leave
mov
push
add
jg
cld
pop
add
add
mov
xor
xchg
and
clc
in
je
add
push
nop
js
ret
add
dec
jae
jno
adc
aam
mov
push
push
inc
add
pushf
jmp
add
dec
xorb
cmp
fidivs
push
movsl
rcrb
test
add
dec
sub
repz
jecxz
mov
insb
inc
add
adc
jge
insl
decl
jl
push
hlt
mov
push
mov
leave
xor
add
jp
adc
pop
sti
loopne
dec
pusha
lret
mov
add
pop
mov
pop
fstpt
roll
push
dec
aas
movsb
fsubs
dec
add
jle
insl
daa
add
addb
imull
dec
dec
lret
ret
dec
xor
sbb
insl
fsubrl
jge
pop
cmpsl
aas
sbb
mov
add
outsb
lods
loop
mov
clc
add
out
test
jo
and
sbb
add
stc
jl
aad
leave
sbb
xchg
mov
inc
or
fwait
aam
in
jb
adc
add
adcl
mov
negl
xchg
jmp
in
icebp
push
cmp
addb
arpl
dec
ds
push
pusha
add
jmp
out
mov
lock
in
ja
fcmovnb
or
push
push
sti
add
sbb
rolb
xchg
sarl
cmp
add
in
and
dec
insl
add
rcr
in
into
dec
add
jne
iret
popf
jecxz
mov
aad
std
addr16
adc
movsl
ja
cwtl
outsb
push
adc
inc
data16
imul
out
movsb
sbb
jg
sub
add
jecxz
inc
aas
movsb
ret
movsl
push
clc
cmpsb
cmp
sti
outsl
add
int3
adc
loopne
adc
mov
jmp
jecxz
insb
cmp
fs
mov
add
cmp
enter
sbb
inc
inc
dec
fcmovne
xor
add
clc
imul
push
sbb
jl
add
jnp
dec
sbb
cwtl
cmp
mov
sbb
adc
lds
inc
and
add
mov
xchg
in
and
mov
pop
xchg
int
push
push
add
mov
or
lret
aad
dec
xor
fisubrl
aam
sub
into
std
call
dec
fmulp
in
cmpb
mov
scas
add
ds
xchg
dec
inc
or
dec
add
adc
stos
add
xchg
cmp
mov
add
adc
sbb
dec
pop
xchg
je
push
xlat
in
insb
push
adc
add
push
add
shl
jl
xchg
or
repnz
xchg
test
sbb
popa
mov
call
adc
sar
dec
out
inc
scas
or
xchg
in
add
adc
test
fsub
lret
pushf
nop
push
hlt
add
jae
and
sbb
roll
mov
mov
movsb
shl
mov
imul
mov
xchg
or
xchg
scas
mov
inc
push
roll
lret
iret
or
xor
xorb
movsl
mov
jo
mov
pop
xchg
add
mov
cmp
xor
cmpsl
pop
dec
pop
and
incl
lret
scas
add
js
data16
loop
add
inc
mov
and
pusha
cmp
add
jmp
add
xor
cld
sbb
movb
das
mov
bound
sub
add
in
add
xor
dec
mov
add
push
in
out
or
idivl
pop
adc
add
ret
add
jp
pop
dec
adc
sti
popl
adc
add
dec
es
mov
add
dec
xor
add
test
repz
sbb
mov
lods
ret
adc
add
sub
sub
push
jl
stos
fwait
mov
add
jbe
mov
add
mov
add
outsb
pop
nop
add
leave
in
rcl
jae
stos
push
jmp
inc
rorb
clc
shll
lcall
jae
mov
push
js
adc
jmp
insb
add
xor
inc
or
pop
cld
sub
sub
mov
test
cmp
pusha
subl
mov
mov
jg
shlb
adc
js
insb
add
sbb
sbb
mov
add
sahf
dec
and
iret
xchg
pop
sbb
cmp
and
sbb
dec
inc
loopne
mov
sbb
push
clc
jo
jge
mov
add
mov
out
or
jmp
hlt
sub
into
push
pop
mov
clc
sub
and
loop
cmp
scas
dec
mov
imul
add
pop
fstpl
pop
repz
test
xchg
cmp
mov
adc
xor
addl
jl
push
sbb
ss
mov
cmp
stos
clc
sub
xor
fwait
test
outsb
imul
mov
xlat
cld
add
sbb
push
push
xor
pop
sub
dec
hlt
loope
addb
bound
cmp
js
or
jne
mov
and
add
pop
loope
push
je
pop
test
mov
icebp
popa
xchg
testl
insb
jo
sbb
jecxz
or
jb
dec
incl
aas
adc
cmp
shrb
pop
xor
pop
dec
nop
cs
pop
add
jnp
xchg
sar
jl
xor
xor
add
out
add
jg
pop
shr
rorb
negl
dec
add
add
pop
mov
loopne
lcall
test
jno
sbb
lahf
leave
jnp
adc
call
pop
ret
and
call
xchg
fisubrs
inc
xchg
xor
cmp
mov
push
or
add
add
push
in
sub
xor
aas
pop
push
mov
adcb
adc
mov
or
cwtl
and
movsl
or
pop
mov
cmp
cmp
add
ljmp
sub
xchg
jns
xor
popf
fcoms
cltd
adc
pop
add
cmp
mov
ret
subb
scas
frstor
movsl
lds
pop
dec
add
and
cmp
mov
add
adc
imulb
je
or
and
xchg
ss
arpl
nop
add
mov
scas
adc
add
lcall
add
inc
addb
test
jo
fists
outsl
int
popf
les
dec
mov
rcll
push
loop
push
fimuls
sbb
inc
add
addr16
mov
mov
add
icebp
and
cmp
lock
or
adc
add
inc
mov
shl
pop
js
add
xor
test
lods
outsb
add
addl
or
add
jmp
jp
add
ret
imul
push
testl
add
test
add
sub
addb
fdivrs
fnsave
sub
mov
jnp
inc
cmp
fstps
ja
mov
cltd
and
data16
mov
testl
fisubs
notb
clc
outsl
pop
adc
das
hlt
in
mov
mov
add
lret
push
add
leave
or
lods
jg
outsl
pushf
cmp
inc
adcl
dec
dec
pop
inc
xlat
aaa
mov
inc
push
pop
cmp
fs
adc
jae
mov
xchg
inc
xchg
aaa
xor
add
pop
lock
jns
mov
imul
add
sar
mov
mov
pusha
dec
jg
psubb
adc
mov
and
add
mov
and
jp
rcrl
push
movsl
rcrb
adc
sbb
inc
mov
negb
cmp
push
push
andb
or
jne
mov
jge
add
mov
stos
add
bound
shl
adc
push
in
or
cmpsb
add
fcmovne
jno
inc
dec
nopl
ffreep
into
rcrb
or
jmp
lret
lahf
stc
mov
int3
add
inc
pop
lret
lahf
mov
push
repz
dec
adcb
xchg
sub
int
call
loope
mov
and
clc
cltd
push
xor
jle
sbb
fisubrs
lods
jmp
add
gs
hlt
xchg
aam
jmp
rorl
movsb
pop
es
in
sub
add
and
pop
add
cmpsl
xlat
cmp
mov
test
xor
enter
add
jae
inc
mov
push
add
faddl
nop
jns
add
mov
in
adc
pop
dec
dec
mov
pusha
xor
mov
int
and
fs
sub
sarl
sbb
ficoms
or
inc
mov
pop
sub
push
inc
xor
out
mov
mov
mov
and
js
es
addb
jne
loop
xor
int3
dec
sub
sub
cwtl
setp
iret
add
sub
dec
add
aam
mov
cld
xor
xchg
mov
fiadds
fbld
inc
mov
outsb
sbb
ret
sbbb
fstpt
cmp
inc
add
mov
imul
jno
add
fcoml
jge
divb
in
aas
inc
lods
add
push
out
mov
push
pop
mov
add
loope
imul
cmpsl
nop
cmp
push
gs
add
data16
sub
mov
add
push
fsts
jns
fwait
push
outsb
mov
enter
inc
imul
lods
add
pusha
jo
xchg
lret
push
mov
aas
sti
rolb
inc
jmp
mov
dec
inc
mov
add
jae
ja
ljmp
or
add
dec
and
add
inc
mov
mull
out
or
add
xor
jnp
inc
or
add
sub
jp
sbb
out
push
mov
lahf
pop
dec
cs
pop
lcall
movsb
add
push
aad
inc
add
mov
cmpsl
outsb
dec
add
sub
or
fildll
movsb
mov
push
out
enter
and
and
outsl
fdivrs
push
andl
aad
add
and
adc
shrb
testl
sbbl
pusha
dec
sub
pop
loopne
xchg
mov
cli
inc
cmc
adc
xor
sbb
mov
push
data16
mov
cmpsb
mov
inc
jle
add
push
sbbb
sbb
int
imul
aaa
ror
mov
mov
inc
sbb
push
sbb
pop
xchg
into
mov
call
outsb
out
xor
clc
add
icebp
pop
bound
dec
scas
arpl
inc
xor
lds
xchg
enter
test
loope
add
cmpsb
xchg
cs
fs
dec
enter
cmp
hlt
fstpl
stos
out
addb
and
or
addb
push
out
add
push
cltd
sbb
popf
fcmove
add
add
fisubrs
ljmp
mov
test
cmc
aas
jmp
xor
add
cltd
ret
fisubrs
lret
sbb
xor
cmp
les
fadds
xchg
cmp
add
nop
mov
add
cmp
mov
add
stos
cmp
subb
bound
pop
add
sbb
adc
outsl
add
fs
adc
push
hlt
mov
stc
test
loopne
ja
and
add
lcall
add
rcrb
dec
xchg
push
roll
dec
sti
sub
dec
rolb
loope
lock
inc
test
mov
or
gs
out
mov
xchg
add
fucomp
sbb
jo
pop
cmp
and
sbbb
imul
cmp
addb
es
jmp
mov
lock
cmpb
cmp
adc
cli
and
aas
add
sti
je
pop
rcr
out
add
mov
add
mov
addl
lahf
sbb
cmp
iret
sbb
jl
shlb
add
int3
mov
pop
pop
cmp
push
adc
add
inc
cmp
xor
sbb
inc
and
rclb
inc
xor
and
cltd
imul
push
adc
sub
ds
xchg
push
add
add
cli
mov
jge
mov
mov
add
dec
sub
stos
cmp
add
pop
ds
add
insl
mov
ja
xlat
popl
push
test
int3
imul
mov
sahf
ret
out
cmpsl
jg
adc
and
pop
xor
pop
pop
fwait
or
bound
pushf
jbe
clc
loopne
inc
push
add
insb
pop
nop
gs
ret
add
rcrl
jo
scas
data16
jp
mov
leave
mov
cli
add
dec
das
sti
out
xchg
add
insl
in
sub
inc
add
fnstenv
sbb
push
sbb
jo
mov
xchg
movsb
lea
ret
ret
notb
call
push
add
adc
push
imul
hlt
cmp
das
into
andb
jns
test
add
adc
int3
add
xlat
pop
xor
sbb
lahf
stos
add
push
jge
adc
sub
ljmp
aas
add
stos
test
adc
mov
fbstp
movsl
clc
movb
pusha
xor
imul
mov
daa
popf
pop
push
loop
pop
mov
sub
fldl
rcll
dec
dec
imul
sahf
mov
loop
jae
mov
fcomps
repnz
arpl
out
pop
daa
xchg
dec
sub
ja
clc
pop
add
xchg
jo
adc
mov
iret
xchg
xchg
xchg
inc
outsb
mov
mov
add
xchg
rcrl
add
push
in
jecxz
add
repnz
aad
call
add
inc
fsub
inc
ss
and
lea
dec
lds
loope
jecxz
lock
and
mov
sbb
aam
adc
leave
xchg
add
dec
inc
mov
or
shll
add
cmpsb
aad
std
ficoms
cmc
add
movsb
cltd
call
out
mov
in
into
pop
mov
push
push
add
mov
dec
loopne
sbb
sbb
xchg
jns
inc
or
lds
xor
mov
ljmp
fistpl
add
ljmp
xchg
jnp
jg
add
pop
ret
test
cmp
push
js
cmp
add
sbb
jno
rol
add
pop
imul
fcomps
lds
jbe
add
mov
test
pop
jae
movsb
pop
inc
bound
inc
xor
push
push
add
sub
jns
mov
add
out
jno
push
add
enter
xor
jmp
sbb
andb
add
lea
outsb
inc
repnz
mov
adc
mov
mov
add
lahf
xchg
or
cmp
mov
rorb
das
pop
arpl
jno
addl
mov
xor
int
dec
lds
jnp
add
jns
dec
mov
mov
rep
jae
mov
cmp
or
mov
sub
addb
test
cltd
xchg
out
xorb
sahf
cmp
in
test
sub
pop
lret
push
out
sarb
fsts
shlb
xchg
cmpsl
pop
and
std
movsb
jecxz
mov
and
fcom
push
adc
cld
inc
add
push
std
repnz
ljmp
jg
mov
sub
add
or
jle
jg
sub
sbb
insl
mov
sbb
dec
xor
sbb
sbb
add
roll
in
push
outsl
jp
sub
popf
loope
jl
add
xlat
push
sbb
xchg
jecxz
out
xor
out
div
sub
subl
negb
icebp
add
jae
nop
or
cmp
scas
adc
lret
or
rcl
push
jbe
sbb
mov
lds
fnsave
mov
lea
mov
jae
mov
adc
cmp
push
push
pushl
jns
cmp
jbe
add
pop
or
aas
cld
mov
repnz
xor
pop
lds
mov
sub
cmp
bnd
dec
enter
pop
adc
xor
push
fwait
test
add
sub
movsl
cmp
xor
push
sbb
push
in
adc
adc
jbe
inc
jmp
sub
popa
mov
adc
or
xchg
push
or
icebp
push
add
inc
es
scas
div
push
aam
stc
aad
roll
and
mov
int3
sti
xchg
push
and
pop
arpl
xor
inc
mov
lods
orb
pop
or
repnz
add
lods
aam
xor
add
mov
or
lret
push
popa
add
in
aad
outsb
jp
add
and
adc
pop
movb
insb
push
movsb
ret
add
xor
inc
test
fdivl
ret
jo
fwait
imul
inc
stos
sbb
test
ljmp
data16
push
or
pop
jae
inc
lea
mov
ficompl
adc
loopne
test
stos
rorb
push
mov
rclb
pop
cmp
jmp
test
push
adc
movsb
mov
adc
xor
shr
test
push
out
jne
sub
sub
mov
shrb
icebp
fnstenv
add
dec
cld
mov
add
push
dec
or
jl
pop
adc
jo
fstl
cmp
insl
lret
inc
cmp
add
add
jae
add
add
inc
test
xorl
shll
hlt
push
jecxz
push
mov
popf
push
cmp
cmpsl
or
sbb
fistpl
pushf
or
bnd
push
scas
or
fdiv
push
and
jbe
sub
and
loopne
mov
imul
sub
add
xchg
xchg
subb
sbb
dec
push
mov
add
push
fiadds
jge
dec
rcrl
movsl
popa
pusha
lret
sbb
xor
adc
xchg
pop
add
mov
dec
pop
sbb
cmp
add
mov
adc
and
jle
lret
jno
add
test
popa
adc
and
add
ret
lcall
xor
in
scas
cmp
cmp
test
data16
push
and
add
stos
stos
sub
mov
mov
roll
pusha
lret
push
clc
and
test
addr16
inc
mov
add
and
add
aas
mov
cli
and
add
pop
fidivl
fistpl
jb
outsb
and
xchg
mov
adc
xchg
sbb
cli
lahf
or
lcall
mov
ss
idivl
add
dec
inc
cwtl
rcrb
push
loopne
push
xchg
out
add
lahf
mov
cmp
mov
mov
imul
and
xor
dec
sbb
xchg
loopne
push
jge
xchg
rcrl
insb
mov
out
and
test
inc
xlat
dec
loopne
push
scas
add
xchg
add
inc
jno
out
mov
adcb
push
subb
or
inc
cmc
out
in
add
sub
ret
add
adc
mov
daa
enter
mov
sub
xor
mov
sub
mov
std
addl
push
push
add
cmpsb
lcall
push
nop
mov
insl
shlb
dec
add
cli
sbb
in
jg
adc
out
mov
lods
mov
rcll
cli
loopne
sub
mov
xchg
das
push
inc
push
mov
or
mov
dec
add
fldenv
add
cmp
shll
and
mov
add
lods
fcmovnbe
mov
push
xchg
xor
xor
push
add
jp
and
push
add
xchg
dec
push
imul
or
pop
xor
movsb
fstpt
push
dec
addb
jecxz
fwait
xor
lods
movsb
subl
and
inc
in
movb
mov
ja
pop
jo
mov
push
out
jmp
push
inc
mov
jo
mov
xor
pop
in
xor
mov
mov
push
push
add
rorb
mov
push
xor
jb
push
xor
mov
inc
call
cmp
adc
and
jmp
sbb
dec
fwait
nop
add
jo
mov
push
lock
add
cmp
xor
pop
adc
inc
and
int3
loopne
add
adc
add
mov
into
jns
mov
or
nop
je
lock
inc
das
xchg
xchg
push
popl
adc
pop
clc
mov
inc
je
clc
test
push
dec
mov
loopne
xor
repz
in
mov
imul
lds
fiadds
and
adc
push
mov
inc
mov
nop
cmp
lock
add
xor
outsb
mov
pop
and
aaa
jb
call
add
adc
xchg
ret
mov
mov
clts
pop
mov
fmuls
faddl
xlat
dec
aas
mov
add
add
inc
mov
nop
aam
sub
or
push
sub
sti
lret
mov
aam
mov
fbstp
pop
cmpsl
mov
sbb
dec
xor
das
add
adc
adc
jl
sbb
paddsb
mov
push
add
adc
mov
add
in
inc
lahf
mov
and
orl
fs
add
and
xor
pop
mov
movsb
jp
mov
js
js
or
jbe
mov
inc
cld
fnsave
rolb
icebp
or
mov
mov
inc
call
dec
movsb
int
adc
aas
mov
jnp
mov
stc
dec
ss
xor
add
test
mov
mov
add
jns
mov
xor
sbb
stos
in
xor
add
lds
fucomi
add
insb
cmp
repz
mov
mov
add
popf
ret
push
sbb
add
dec
xchg
lret
ss
je
add
adc
xlat
add
cmpsb
iret
push
sub
add
fnstcw
pop
add
fsubl
push
jg
ds
pop
in
pop
daa
insb
call
scas
push
and
push
push
jns
pop
fbstp
inc
insb
inc
pop
adc
push
mov
mov
in
xor
add
out
jno
pop
push
push
repnz
push
movsl
xchg
rcrb
ja
subl
dec
jbe
mov
cmp
or
pop
add
out
xor
add
leave
cmp
push
sbb
mov
fstpt
add
int
add
pop
es
adc
jmp
hlt
mov
or
push
xor
cltd
dec
stc
add
sahf
pop
int3
inc
cmp
adc
popf
jle
xchg
neg
popa
jnp
cmp
mov
mov
packuswb
or
xorl
insb
inc
insl
pop
pop
or
stos
add
and
add
cmp
sub
mov
sbb
cltd
in
movsl
mov
sub
mov
psubd
xchg
nop
insb
add
xor
jl
jb
lds
push
adc
add
cmc
push
out
add
jno
pop
jecxz
inc
loope
mov
inc
cltd
sbb
add
mov
orl
out
cmpb
pop
aam
inc
xor
fdivl
jg
cmp
add
jmp
add
ljmp
cmp
xchg
repnz
iret
arpl
shlb
jbe
add
sub
stc
popf
add
inc
gs
mov
addb
adc
bound
add
add
add
push
int3
and
ror
test
cmp
stos
xor
xor
inc
roll
out
cmp
adc
pusha
jge
push
test
stos
add
push
scas
pop
adc
icebp
adc
add
mov
pop
pop
add
push
xchg
add
jle
ffreep
mov
lods
mov
pusha
xchg
in
pop
inc
ja
fidivs
call
add
or
mov
add
pop
mov
jno
cmp
or
jo
cld
sub
add
ret
mov
jle
testl
pop
fsubl
fistpl
and
push
dec
adc
or
iret
movsl
pop
add
and
fldl
js
dec
pushf
sti
andb
imul
insb
mov
rol
add
jmp
dec
push
cmp
or
daa
filds
leave
loopne
mov
shlb
in
xor
cmp
sbb
lods
inc
add
lret
in
xchg
or
push
stos
fwait
add
inc
xorb
cmp
dec
ja
xchg
add
jne
push
add
test
cmpb
pop
push
or
mov
arpl
and
in
sbb
xor
and
andl
popa
sub
jno
notb
pop
je
fstl
out
pusha
repz
sahf
push
fwait
sbb
icebp
in
loop
dec
test
pop
add
xor
push
scas
xor
lret
xchg
add
iret
or
dec
mov
outsl
xor
jb
and
inc
add
xor
jle
mov
push
lods
fidivs
xorl
es
rorb
lret
and
out
cmc
add
jnp
mov
add
ret
xchg
xor
subb
push
repnz
jge
in
call
inc
nop
out
mov
sbb
jmp
inc
jns
ret
mov
jno
test
push
add
mov
inc
cwtl
pop
add
fldt
aam
mov
dec
divb
aas
or
loopne
inc
inc
add
mov
inc
fmull
add
xchg
add
jb
xchg
insl
push
hlt
cmc
xor
enter
pop
jo
add
out
mov
add
lcall
xchg
testb
dec
mov
or
add
push
jge
fldl
inc
mov
xchg
xorb
jp
add
lods
popa
xchg
mov
push
inc
daa
pop
cli
pop
mov
or
rcrb
push
lret
stc
clc
push
mov
imul
movsl
aaa
clc
inc
xchg
pop
jmp
add
ljmp
decb
repz
scas
or
mov
ret
ds
packsswb
clc
sbb
ret
pop
pop
jmp
push
fstl
movb
or
repz
std
andb
cmp
aad
hlt
leave
mull
mov
cmp
cltd
mov
add
repz
xor
call
fmuls
add
inc
in
stos
stc
repz
jbe
inc
cmp
add
dec
add
xchg
ss
repz
int
push
mov
pop
add
dec
gs
dec
clc
aad
pop
mov
mov
inc
jb
flds
xor
cmpb
dec
imul
xchg
iret
add
push
jl,pt
add
mov
addb
lahf
lret
dec
jecxz
sbb
add
cmp
mov
inc
jb
push
add
mov
push
lahf
fs
add
ret
mov
cmp
test
out
lahf
sbb
leave
jge
ljmpw
addl
add
xchg
mov
add
mov
icebp
outsb
add
iret
imul
aam
mov
sub
sahf
inc
sbb
mov
insb
push
sbb
add
int
lahf
mov
adc
mov
add
popf
mov
or
enter
dec
adc
jnp
push
fildl
add
mov
xchg
notl
lods
mov
mov
shlb
jns
pop
mov
push
mov
getsec
ja
jecxz
xchg
loop
rcrl
in
inc
lds
imul
push
add
subb
flds
cs
xor
out
and
aam
mov
cltd
hlt
mov
mov
test
leave
and
sbb
sbb
mov
dec
iret
pop
in
or
sbb
inc
add
stc
pop
xlat
mov
fmuls
pop
and
lahf
inc
pop
cmpsl
push
pusha
rclb
cli
sbb
jb
add
rcll
rcrb
adc
pop
sub
ss
jge
dec
pop
push
push
cmp
mov
repnz
fistl
add
imul
int3
ljmp
add
test
nop
mov
es
cmp
shll
shlb
inc
lret
mov
aad
push
in
lock
xor
addr16
dec
adc
movsl
sar
cltd
sbbl
rolb
pusha
mov
out
xor
dec
jo
add
addr16
mov
mov
add
gs
rcll
cmp
addb
dec
ds
rolb
into
xor
andl
xlat
jo
aam
push
mov
pushf
sub
cs
sub
aam
int
mov
sub
mov
xchg
xchg
subb
adc
lock
or
push
sbb
and
divb
clc
dec
push
mov
jl
add
or
imul
loopne
xchg
adc
in
or
jl
fstps
in
add
mov
faddl
fisttpl
cmp
dec
enter
add
out
cltd
repz
dec
neg
or
js
mov
pusha
cs
mov
call
jne
mov
lahf
loope
pop
xor
sub
sarb
xor
jbe
add
adc
testb
loope
or
call
add
and
popa
pop
bound
adc
jge
add
jno
mov
or
and
lea
jge
lahf
testb
sub
out
fildl
mov
xchg
or
bound
pop
in
add
stc
add
jb
cmp
or
loop
popf
int3
xchg
outsl
cmpb
cmc
adc
fadds
push
mov
out
outsl
add
inc
add
lock
push
or
loope
lods
hlt
fcom
mov
orb
mov
adc
mov
and
xchg
dec
add
push
inc
sbb
aaa
jp
mov
mov
ja
dec
lea
daa
push
jnp
cmpsl
pop
pop
add
test
mov
loopne
inc
fdivr
mov
out
adc
clc
pusha
add
and
cld
roll
fidivrl
sbb
cmp
sbb
or
cmc
mov
data16
fnstcw
sbb
sbb
add
js
stos
in
addr16
push
lods
cmpsl
or
loopne
jbe
xchg
add
cs
rorb
adc
es
rolb
jl
xchg
jbe
addb
out
add
lea
xchg
aas
loope
xorb
mov
mov
sub
mov
out
sahf
add
adc
scas
mov
arpl
jl
add
pushf
les
jge
ljmp
and
jl
add
sbbb
jb
lret
add
jg
rorb
in
sbb
adc
in
les
add
push
adc
lret
addr16
sbb
jle
add
push
insl
in
inc
ljmp
cmp
in
push
in
add
sbb
sti
push
cmc
and
lock
mov
dec
nop
add
in
jne
adc
loopne
pop
outsl
inc
cld
add
jmp
mov
mov
aam
jmp
fldl
icebp
inc
sbb
push
jo
lcall
xchg
stos
sbb
pop
mov
das
scas
adc
sub
jl
sbb
add
jnp
loope
push
add
xchg
cmp
enter
jecxz
inc
pop
ss
jp
dec
test
repz
popa
icebp
hlt
push
xlat
sub
or
and
jne
fcomps
sbb
ds
cmc
mov
add
adc
lds
cmp
cmp
or
and
movsb
sbb
pop
xchg
add
adc
push
push
dec
sbbl
xchg
addr16
jo
pusha
add
mov
add
jmp
mov
int3
or
mov
or
lahf
ret
add
cs
rolb
in
push
sbbb
subl
lock
imulb
arpl
loop
sbb
mov
pop
lods
pop
cld
in
mov
bound
mov
mov
pop
aad
mov
jbe
xchg
or
js
rcl
xchg
fdivl
push
jmp
add
pop
mov
add
iret
out
push
adc
adc
sub
aad
add
dec
and
arpl
adc
sbb
xchg
lcall
test
mov
icebp
pop
aad
mov
popf
sbb
sbb
dec
cmp
testb
in
xor
push
add
jp
mov
std
lock
and
and
add
pop
mov
add
fldcw
mov
push
adc
jns
cwtl
les
push
mov
mov
jo
add
sti
out
aas
fsubl
pop
mov
mov
loope
sbbb
pop
dec
lock
sbb
add
inc
seto
andl
dec
push
pop
sub
or
mov
sbb
sbb
out
ja
pushf
mov
cmp
adc
adc
dec
test
jb
or
xchg
repnz
filds
incl
outsb
jge
shrd
xor
mov
aaa
aas
insb
xchg
sbb
loope
pop
push
sbb
ja
mov
pop
pop
mov
repnz
mov
ss
leave
inc
or
mov
mov
repnz
add
mov
jo
pop
add
push
jbe
cmp
addl
setb
and
add
mov
roll
popf
sub
pusha
sti
add
in
or
in
jo,pt
mov
adc
in
lret
int
sbb
add
xchg
dec
mov
fists
inc
jne
lock
sbb
and
pop
enter
add
imul
call
mov
sub
fwait
sub
fstl
adc
mov
add
frstor
sahf
xor
pop
jg
mov
pop
xchg
nop
adc
mov
or
cmc
xor
orl
test
lret
test
and
pop
aam
jno
sti
out
fdivrl
rolb
call
add
pop
or
dec
lods
jge
cmp
sbb
rclb
int3
push
mov
dec
mov
sbb
pop
adc
fmuls
xor
push
popa
fiaddl
cmp
and
mov
leave
pusha
cmpb
mov
cmp
and
sbb
dec
dec
sub
push
and
push
sub
sbbb
sbb
pop
mov
aaa
mov
ret
loopne
stos
jecxz
inc
out
sub
lret
and
lods
aas
add
pusha
ret
inc
dec
adc
bound
xchg
or
imul
out
add
pop
inc
mov
int
push
add
insb
jnp
inc
or
shlb
in
adc
xchg
inc
lods
xlat
add
and
inc
popf
rorl
mov
mov
fisttpl
or
mov
gs
adcb
push
inc
andb
repz
and
lds
dec
adc
xorl
mov
repnz
test
xchg
push
jno
or
and
out
add
scas
call
push
jnp
mov
mov
dec
xchg
shlb
fsubs
jmp
lea
shlb
or
cmpsl
cmp
test
lock
add
aam
adc
dec
mov
mov
mov
inc
fstpt
push
jns
aad
pop
add
jne
out
jmp
cltd
sarb
popa
leave
add
cmp
xchg
rolb
xchg
cmpsb
xor
add
enter
orb
mov
test
ss
dec
or
mov
mov
or
loope
stc
or
add
rolb
pop
inc
rorl
push
pop
loope
sbb
cmp
arpl
inc
cmpsb
push
cmp
pop
jg
add
cmp
pop
mov
test
cwtl
inc
cmpsb
lods
aas
pop
add
xchg
xor
or
mov
add
push
or
add
loope
and
or
lods
lret
xchg
lret
aaa
mov
repnz
cmp
sbb
loop
push
add
xchg
insb
cld
add
dec
jbe
adc
test
loopne
or
ljmp
imul
push
fsubs
notb
xchg
jno
test
and
mov
shlb
mov
add
push
cmp
cmovs
aam
scas
imul
sbb
mov
push
mov
xchg
and
mov
fwait
out
mov
mov
das
sub
mov
fimull
ds
cld
out
in
pop
dec
sbb
fstpt
add
jp
mov
inc
dec
sub
cld
add
mov
cmpsb
pusha
call
jl
push
repz
fs
xchg
inc
es
dec
leave
std
and
adc
xchg
out
push
lds
fcomps
add
les
orb
mov
mov
sub
inc
int3
sbb
push
rcr
aam
mov
add
push
xor
add
sbb
mov
mov
push
fstl
add
pop
sub
jnp
out
mov
in
pop
and
sub
rolb
mov
scas
and
cmpb
movsl
sbb
mov
pop
cmpb
std
push
or
fisttps
mov
jl
add
ljmp
add
shlb
cltd
ljmp
ds
jae
lret
jo
xchg
and
gs
cmc
dec
inc
aam
xor
dec
add
cli
mov
packsswb
outsb
mov
push
lret
movsb
mov
push
adc
ss
pop
stos
fistps
cli
mov
add
xor
xorl
push
scas
add
push
adc
sbb
test
dec
push
inc
sbb
inc
sbbb
cmp
loopne
sahf
push
fldl
mov
out
out
cs
out
cmp
cmp
outsl
stc
mov
movl
add
pop
leave
dec
push
aad
and
xchg
rorl
repz
or
jo
rclb
sbbb
scas
popf
add
add
push
inc
cwtl
shlb
mov
xor
loopne
add
adc
rcr
jl
aam
js
stos
push
and
lret
xlat
mov
add
sar
scas
ljmp
cmp
mov
and
xor
mov
dec
jns
int
push
lea
jle
sub
jmp
repnz
pop
mov
or
ss
cli
jg
aam
andl
pop
jle
lret
mov
sarb
adc
hlt
or
mov
mov
call
mov
pop
cwtl
faddl
lret
add
sbb
movsb
add
push
rcr
pop
aad
repnz
clc
mov
push
out
sbb
rcrb
or
push
xor
adc
lods
pcmpgtb
inc
mov
or
add
mov
xchg
xor
js
xchg
add
adc
sub
ljmp
push
xchg
rol
cmpsl
fadds
sub
adcb
dec
jmp
stos
neg
dec
js
jns
add
mov
sbb
xchg
fidivs
sub
pop
mov
je
shrl
jae
pop
xor
push
sbb
sub
loopne
pop
dec
mov
add
xchg
push
cmpsb
add
pop
add
lods
sbb
jp
mov
cwtl
mov
popf
mov
bound
jns
push
test
loope
push
pusha
adc
leave
nop
popa
pop
mov
in
outsl
add
sub
lods
out
add
repz
mov
cwtl
fidivs
jle
pop
mov
xor
pusha
push
mov
jp
test
inc
dec
add
jl
push
sub
iret
test
push
fs
jle
xchg
add
sbb
imul
xchg
add
mulb
scas
sbb
add
and
inc
add
mov
orb
ljmp
inc
dec
mov
inc
add
int
sub
add
mov
mov
add
iret
jecxz
call
repnz
adc
sub
cmp
clc
insb
pop
dec
inc
adc
sahf
jg
jne
add
repz
pop
mov
rcrb
pop
add
cmc
jb
xchg
adcl
mov
add
scas
fnstsw
add
xor
adc
mov
lds
add
outsl
lcall
push
pushf
pop
mov
push
mov
adc
dec
add
pop
hlt
mov
inc
cmp
xor
repnz
insl
dec
mov
sahf
out
arpl
jnp
dec
sbb
and
mov
mov
jne
add
js
xchg
jne
stos
lret
ljmp
xlat
clc
rolb
pop
hlt
pop
cmp
add
add
loope
into
bound
inc
add
push
push
aas
sub
cmp
xor
cmp
mulb
ret
clc
aad
adc
ficompl
cwtl
sub
cmp
test
cmc
mov
push
add
xchg
pushf
cmp
out
fwait
cld
jmp
rolb
loop
dec
pop
adc
and
icebp
imul
sub
or
push
int3
mov
fs
sbb
and
add
scas
jns
xchg
mov
jg
xor
addr16
mov
pop
in
repnz
das
mov
sub
xor
movsl
inc
pop
add
inc
out
mov
add
int3
inc
pop
cltd
in
mov
add
lret
lahf
add
ss
xor
or
pop
fcomps
push
xchg
or
cli
imul
jg
mov
lahf
cmp
loope
jge
addl
dec
das
in
aas
cmp
jno
lock
add
mov
jp
das
int3
sub
mov
sub
push
xor
mov
lods
sub
and
out
popf
mov
add
lahf
inc
add
pop
rolb
sbb
pop
cmp
in
pop
lods
imul
nopl
daa
mov
sbb
inc
sbb
cmp
add
test
add
xor
sahf
mov
repnz
test
cmp
push
in
mov
cli
sbb
test
arpl
outsb
mov
cmovg
shr
push
data16
shll
jle
add
jle
repnz
popf
cmp
sub
adc
dec
add
cmp
lea
aad
mov
add
and
sbb
or
sub
in
jmp
jge
ds
jo
sti
daa
sahf
mov
in
stos
push
fstps
dec
jle
add
int3
mov
repz
and
arpl
imul
ficomps
loopne
mov
outsb
or
test
lods
push
add
imul
and
iret
out
out
stos
dec
lock
xchg
add
out
or
xorb
andb
jne
in
iret
sahf
fisubrl
imul
cwtl
cmp
mov
add
fwait
loop
jns
cmc
ss
jl
daa
add
out
dec
push
add
push
nop
lcall
loop
fs
add
mov
es
sbb
insl
nop
sahf
push
lods
mov
imul
push
rolb
ss
xor
pushf
add
test
and
lock
ficomps
gs
loope
jg
rolb
sbb
add
xchg
pusha
mov
jmp
imul
in
push
xchg
lock
inc
test
mov
cltd
out
in
add
sti
or
cmp
dec
lret
adc
sub
outsb
loop
add
lods
and
ror
lds
pusha
mov
add
push
mov
and
xchg
xor
cmp
fbstp
std
loope
add
or
jns
call
mov
addb
and
int3
sarl
add
mov
sub
lret
in
mov
imul
sub
mov
pop
add
jnp
ret
mov
add
loope
mov
stos
push
adc
inc
cmpsl
add
out
repz
xchg
sub
pop
in
push
out
cmp
loopne
ds
jb
mov
mov
aam
fstps
or
mov
stc
jns
js
add
jecxz
cwtl
push
movb
adc
popa
add
ret
test
dec
fistpll
add
add
mov
std
mov
subb
mov
out
add
in
jnp
jns
add
addr16
lcall
push
sub
add
lods
pop
nop
and
mov
push
insb
mov
sub
sub
or
dec
xchg
pop
enter
lods
mov
xchg
xor
iret
mov
sarb
ljmp
cmpsl
iret
mov
into
push
add
mov
xor
imul
push
xor
mov
addl
jecxz
ljmp
push
pushf
jmp
push
xchg
adc
mov
jge
inc
push
dec
push
pushf
add
xor
and
aaa
push
push
add
sarl
cmp
sub
stc
roll
or
adc
shrl
imul
outsl
ja
cmp
das
mov
sahf
or
add
es
jae
idivb
pusha
adcl
shrl
cmp
jne
sub
or
sub
popf
test
sub
inc
lock
test
sub
xor
adc
mov
pushf
test
rcrl
add
loopne
adc
ret
imul
jecxz
and
sub
adcl
cmp
add
fidivrs
les
sub
ja
pop
inc
rcl
sub
xorl
cmp
mov
push
push
fs
push
aas
adc
jo
stc
int3
pop
addb
xchg
pusha
xchg
iret
mov
add
mov
push
roll
xchg
out
dec
fcmovbe
scas
add
lods
mov
mov
jnp
add
cli
fldcw
cmpsl
add
jb
int3
add
mov
sar
push
cmp
xchg
mov
sahf
out
or
into
fadds
jo
add
sub
add
jae
adc
insb
cld
out
mov
data16
addr16
fisttpll
add
sbb
xor
cmp
out
orl
cmp
test
add
lret
mov
sub
and
mov
cmp
out
push
pusha
outsb
cmp
and
pop
cmp
repz
outsb
test
mov
mov
dec
rcrl
cmp
mov
femms
jno
mov
push
pop
sbb
and
mov
xchg
inc
adc
stos
shl
into
or
les
pop
or
cmpsl
or
jns
jle
and
push
sahf
jl
ret
icebp
mov
das
push
test
sbb
insl
cmp
iret
mov
js
pop
fsubrl
sub
xor
cmp
lahf
popa
mov
call
loopne
cmp
rol
insl
movsl
xor
jge
add
inc
and
mov
fadd
push
rclb
add
popf
sti
pop
inc
stc
in
lock
sub
repnz
lock
push
xlat
imul
ljmp
addb
mov
inc
xchg
push
cmp
add
push
into
jmp
add
subl
or
int3
or
add
mov
lods
enter
push
add
inc
popa
dec
ret
jl
and
sbb
add
rorb
push
push
add
add
loop
hlt
add
sbb
movsl
or
sub
ficoms
add
mov
inc
push
push
adc
or
jo
mov
xchg
xor
and
sub
add
or
fs
and
pop
xchg
mov
dec
adcb
arpl
mov
sbb
add
ret
adcl
mov
xchg
repz
outsl
pop
add
inc
es
and
imul
pop
or
sbb
xchg
inc
test
ret
in
rorl
test
dec
pop
sbb
cmp
xchg
xchg
fs
dec
test
mov
inc
xor
pop
cmp
pop
xchg
add
push
test
add
jnp
fbstp
nop
call
imul
jecxz
mov
out
sbbb
mov
in
das
inc
add
je
pop
xor
cmpsl
stos
mov
and
push
push
jae
fcmovne
jbe
add
sbb
cmp
es
mov
push
subb
cmp
mov
cmp
das
bound
rcrb
idivl
add
sahf
dec
outsl
push
icebp
ja
mov
fbstp
insl
mov
cltd
dec
fwait
clts
sbb
test
decl
cmpsb
jl
jo
or
addb
adc
pop
mov
cmp
xchg
ljmp
test
mov
add
or
xchg
mov
or
stos
mov
roll
lahf
mov
or
cmp
mov
adc
dec
push
enter
xor
gs
in
add
pop
dec
ss
sbb
adc
roll
mov
mov
test
sub
sbb
pop
xchg
out
das
pop
cwtl
rorb
jne
xor
add
les
add
inc
mov
push
add
rorb
das
mov
or
sbbb
push
xchg
incb
imul
repz
jo
movq
incl
and
sbbb
push
mov
push
into
or
jmp
cmp
mov
mov
add
jne
mov
lret
test
lock
push
or
and
das
lock
hlt
add
mov
sbbb
add
sbb
sbb
pop
ljmp
prefetchnta
data16
cs
mov
xchg
jbe
pop
mov
subb
pushf
push
fisttpl
push
push
vpackssdw
xchg
sbb
push
scas
ja
inc
and
mov
dec
xlat
jno
fidivrs
daa
dec
loopne
inc
add
sub
cmpsb
mov
xchg
add
outsb
cmp
test
push
mov
add
inc
lea
sub
cmpsb
add
sub
add
fadds
insb
pop
lahf
call
add
cmc
testl
cmp
out
xchg
push
cli
into
or
dec
bound
jns
js
mov
push
cs
in
shl
or
js
pop
add
incl
mov
sub
dec
ret
je
shrl
into
add
lock
pop
inc
xor
push
mov
pop
in
or
repz
iret
pop
mov
inc
inc
js
arpl
fsubl
mov
loope
mov
and
jo
jecxz
add
inc
pop
push
add
add
jmp
jge
add
aam
daa
jle
dec
or
cwtl
in
cld
dec
andl
out
faddl
imul
xchg
mov
add
fucomip
clc
sbb
add
test
lret
xor
push
add
ljmp
cmp
hlt
scas
mov
and
jne
nop
daa
cld
push
icebp
psubsb
add
lds
fcmovbe
hlt
pop
pop
out
insb
add
adc
jle
sub
test
adc
sub
lcall
ds
xchg
add
adc
add
mov
cld
shrb
addr16
dec
add
mov
xor
sti
imul
pop
push
mov
xor
imul
inc
stos
subl
xchg
mov
xchg
add
mov
pop
jmp
and
mov
lret
xchg
add
mov
loope
xor
loopne
jae
sbb
sbb
or
mov
ds
hlt
jns
mov
sbbb
mov
rolb
ror
cmpsb
adc
fs
addr16
es
add
push
add
mov
add
dec
sbb
stos
shll
xchg
pop
aaa
mov
xor
jnp
add
sar
mov
out
rcrl
sub
fildll
dec
or
and
mov
add
loopne
jbe
sbb
sub
insb
pop
pop
mov
sbb
hlt
repnz
sbb
jo
cmpsl
xorb
movsl
ret
dec
enter
sbb
push
popa
out
mov
mov
push
push
or
or
mov
fldpi
cmp
iret
addr16
add
adc
sbb
add
xor
mov
je
lods
xor
pop
sub
in
cmp
pop
mov
ljmp
das
loop
cmc
add
cmpsl
inc
xor
lock
adc
into
jne
inc
test
pusha
leave
mov
jbe
add
lret
into
mov
popa
jae
enter
fmull
xchg
add
pusha
cmp
out
dec
add
or
mov
lods
jno
ss
jae
cmp
jle
add
fldl
iret
orb
inc
stos
push
add
test
mov
or
inc
or
jg
mov
js
jo
sub
mov
add
push
paddw
mov
or
loop
cmp
add
add
pop
cmp
sub
mov
pop
add
inc
pop
pop
daa
in
add
adc
je
loop
pusha
movb
xchg
add
loopne
gs
or
dec
dec
insl
test
movups
pop
jns
dec
pop
cmp
push
mov
mov
xchg
pop
test
lret
loope
imul
jmp
mov
add
cmp
imul
add
rcrb
mov
fsubp
xorb
pop
imulb
add
mov
inc
xchg
xor
pop
loope
sub
xor
imul
shlb
push
sub
add
lods
mov
cmp
push
or
add
sbb
in
notl
jbe
or
addb
mov
xchg
add
xchg
ds
cmp
lods
lock
pop
fxch
sub
cmovg
sbb
push
mov
imul
xor
test
adc
add
lcall
and
test
push
int
add
movsb
add
ret
jg
mov
in
popf
pop
lret
and
je
xor
hlt
pushf
shrb
add
push
test
add
cmp
pop
and
es
inc
and
and
in
xor
mov
push
pop
negb
scas
add
mov
test
hlt
pusha
add
jp
push
add
inc
inc
push
add
ficompl
push
jno
lahf
adcl
outsl
xlat
adc
lret
pushf
mov
arpl
xorl
jnp
adc
cmp
ret
pop
aad
cmc
add
repnz
lahf
push
add
popa
pop
movsb
and
loop
cmp
mov
xchg
or
addr16
movsb
mov
and
out
clc
ja
pavgw
nop
xor
inc
addb
les
les
movsl
sbb
cmp
push
js
sub
cmp
xchg
jae
mov
outsb
pop
les
add
lods
aas
sbb
andl
imul
sbb
mov
aad
mov
call
inc
insl
sbb
add
push
adc
mov
add
jno
mov
add
cs
adc
adc
jno
add
xor
lds
fimuls
push
lock
mov
mov
jle
adc
mov
test
jne
add
enter
add
inc
mov
movsl
sbb
subb
push
pop
or
pop
jecxz
fs
adc
fistpll
sub
fisttpll
lods
and
ljmp
mov
jle
xchg
mov
test
push
pop
push
cli
and
gs
xchg
sbb
adcb
cwtl
push
mov
lahf
mov
cwtl
mov
cld
inc
loope
lret
cltd
add
jl
push
pop
and
dec
add
mov
sarb
adc
lret
xor
add
sbbb
add
adc
push
or
add
sarl
xor
aaa
cld
roll
es
jmp
js
test
jno
xor
mov
jae
mov
and
test
and
adc
ret
xlat
and
inc
mov
and
movsb
imul
and
jecxz
push
push
xlat
add
dec
mov
fsts
cwtl
add
dec
popf
add
sbb
enter
adc
movsb
dec
sbb
lret
push
mov
pop
sbb
mov
movsb
xchg
xor
nop
adc
ja
rolb
push
add
test
xor
popa
xorl
cltd
pusha
sbb
add
jnp
cmp
push
test
das
dec
int3
mov
xor
stos
add
pop
stos
mov
add
sub
add
mov
loope
pop
pop
xchg
inc
mov
mov
mov
mov
out
outsb
push
insb
mov
cmpsb
sarl
xchg
and
add
sbbl
sub
insb
in
jmp
lcall
notb
jns
inc
pop
and
inc
int3
inc
mov
in
jg
test
jbe
add
stos
and
adc
jg
adc
sti
pop
add
daa
add
dec
jmp
add
les
scas
hlt
movsl
dec
add
mov
inc
int3
inc
xor
stos
sbb
mov
clc
xor
aaa
pop
je
nop
cmp
and
add
adc
xchg
push
or
cmp
lock
js
add
sbb
cmp
mov
outsb
movsb
push
adc
adc
fwait
js
sbb
push
aam
sbb
pushf
test
jg
add
cmpl
fs
or
add
cwtl
mov
mov
xor
add
daa
inc
mov
or
shlb
inc
rcr
push
mov
scas
mov
rol
cmp
and
push
cmp
call
cmp
inc
adcb
iret
xlat
sub
dec
nop
jp
push
sub
mov
popf
lock
add
pop
or
cli
xor
xlat
cmp
or
push
inc
pop
xchg
shll
cwtl
out
fs
add
out
shlb
push
mov
outsb
pop
push
mov
or
cmp
rorb
iret
orl
add
fld
mov
out
add
out
popa
mov
push
nop
filds
push
jg
add
pop
add
inc
shll
jp
stos
and
decl
test
xchg
xchg
mov
in
push
lea
cmp
dec
or
adc
and
ss
sbb
out
xchg
pop
mov
repz
faddl
cmp
inc
adc
cmc
add
ret
add
xor
jns
pop
sbb
sub
xchg
in
add
mov
cmp
xor
pusha
and
mov
fisttpll
xor
mov
xchg
mov
ret
sbb
xchg
and
call
shl
rcr
in
sbbb
loop
inc
cmp
adc
xor
nop
push
int
testl
mov
call
sbb
cs
orl
ja
dec
pop
mov
add
in
movsb
int
aas
inc
add
out
lcall
xor
gs
rolb
jns
cmc
ljmp
sub
lcall
xor
mov
dec
ljmp
orb
out
pop
lds
adc
adc
bound
insl
xchg
inc
mov
inc
popa
stc
ret
lock
add
jge
loopne
mov
push
mov
outsl
rcr
adc
nop
hlt
mov
out
or
clc
lods
cld
inc
rorb
jecxz
and
sub
ja
jp
je
jge
mov
ffree
ror
pusha
or
dec
mov
jg
jecxz
xor
or
add
fs
fnsave
xchg
or
mov
jns
fstps
aam
push
bound
mov
scas
sub
jle
mov
and
hlt
fidivrl
add
mul
in
cltd
xor
gs
add
je
lds
cwtl
mov
pop
rorb
insl
and
jmp
push
ret
and
add
arpl
inc
jae
inc
jge
fcompl
int
bound
test
xor
rcr
inc
rorl
cwtl
pop
jecxz
lods
mov
pop
data16
ret
and
cmp
mov
or
add
dec
inc
popf
jg
lock
inc
imul
xchg
add
fisubrs
push
push
mov
xor
dec
and
and
mov
jnp
sbb
les
loopne
push
movl
rolb
inc
push
sub
pop
mov
dec
inc
dec
xchg
inc
in
std
nop
shll
hlt
xchg
mov
mov
fptan
push
daa
movsl
cli
arpl
shr
insl
orb
inc
pop
fiaddl
jecxz
lods
mov
js
sbb
ljmp
icebp
les
movl
imul
push
in
xlat
sbb
stc
sbb
aad
pop
repnz
or
mov
cmp
filds
sbb
loope
inc
xchg
je
shll
into
clc
mov
mov
cmpsl
push
add
aad
and
mov
sbb
clc
jne
pop
shrb
mov
push
ja
xchg
mov
test
leave
pop
js
ss
in
js
pusha
cmp
subl
lret
inc
inc
xor
push
jle
cs
js
sbb
aas
jge
dec
or
sub
xor
xor
pop
les
outsl
inc
ljmp
pop
cmp
sti
sub
icebp
jl
mov
femms
ret
test
push
daa
rcrb
movsl
faddl
add
jns
fsubrs
mov
inc
push
pop
sti
lea
jnp
inc
jg
mov
je
jl
add
xor
jge
push
push
mov
jle
add
pop
sahf
push
pop
pushf
and
ljmp
aaa
inc
iret
cmp
les
add
add
pusha
or
adcl
nop
pop
xchg
jge
in
jmp
ss
movsl
xchg
mov
pop
jecxz
add
outsl
lods
add
sub
pop
cmp
dec
mov
iret
pop
mov
xor
add
add
sub
faddp
jmp
xor
xchg
add
cmp
pop
fs
add
div
xlat
lock
popa
repnz
les
cmp
outsb
xchg
loop
jae
ret
fildl
mov
les
test
cmp
jo
aas
xchg
pop
add
shlb
add
and
loop
lock
rorb
je
dec
xchg
add
push
xchg
aad
inc
or
pusha
in
pop
jno
pop
ja
and
xor
test
inc
and
mov
ret
inc
ljmp
nop
gs
cs
add
xor
lds
nop
je
adc
leave
lahf
cmp
pop
sbb
les
inc
out
aas
dec
mov
adc
sbb
fstps
pop
aaa
cmp
es
dec
jmp
pop
out
add
lcall
push
and
pop
push
xor
mov
fcomi
pop
jg
mov
push
pop
out
cltd
bound
inc
push
sbb
mov
add
out
in
push
sbb
loopne
add
ret
cmp
sti
adc
inc
mov
orl
add
inc
or
addb
sbb
int3
push
fdivl
adc
and
or
pop
mov
xor
and
push
cld
roll
test
js
mov
dec
int
loopne
sbb
sbb
add
les
jmp
xchg
iret
add
adc
aas
imul
lcall
jecxz
out
xor
xor
add
scas
iret
repnz
ja
adc
add
jmp
lock
in
bound
out
add
sti
push
cmp
movsb
add
inc
xlat
mov
cli
add
cmp
add
mov
mov
or
mov
setl
mov
add
imul
inc
out
and
daa
rorb
push
jne
rorb
xor
xor
loope
aam
dec
add
pop
sub
mulb
sub
add
js
sarl
mov
mov
rclb
mov
add
xorl
lods
xchg
test
mov
jle
sti
mov
dec
les
xor
js
xchg
add
mov
leave
xor
add
lea
inc
mov
enter
adc
dec
cld
rorl
adc
dec
inc
test
shrb
add
mov
cli
jne
lea
jecxz
out
sysret
mov
cmp
push
add
int3
repz
hlt
pop
pop
lcall
xchg
push
dec
sahf
add
ficompl
icebp
jae
sbb
add
inc
scas
inc
jge
testl
cltd
add
pop
stos
sub
dec
scas
lods
loopne
test
test
add
add
push
adc
push
xchg
jmp
nop
fadds
out
pop
int3
dec
cli
xor
cmp
or
subb
add
fcompl
imul
fs
jp
pusha
int3
mov
enter
ret
scas
orb
out
xor
hlt
adc
cmp
add
inc
sbb
pop
in
cmpsl
push
mov
faddl
mov
pop
fwait
push
lock
mov
or
jne
sahf
xor
data16
cmp
inc
fs
mov
dec
scas
loopne
in
cwtl
out
data16
clc
inc
std
or
sub
add
imul
jmp
cmp
xchg
inc
aas
xor
mov
into
lods
clc
leave
sbb
stos
jno
mov
mov
sub
adc
mov
jae
cs
xchg
neg
pusha
addb
je
rolb
pop
mov
hlt
mov
iret
ret
aad
nop
add
mov
mov
dec
je
es
fldl
pop
std
adc
pusha
jle,pt
cmp
pop
cli
mov
fwait
addl
enter
xchg
dec
xchg
add
inc
xor
sbb
add
push
mov
dec
sbb
lds
loope
es
cld
adc
aad
inc
jno
dec
das
add
mov
xor
add
mov
ds
or
mov
xchg
mov
push
loopne
pop
lock
push
pop
cmpsb
jp
pop
xchg
loopne
addb
popf
add
insl
clc
lock
add
xor
flds
add
jp
xchg
sbb
inc
outsb
add
lahf
mov
jecxz
nop
add
sub
mov
dec
ret
push
xor
das
cmp
leave
cld
adc
adc
add
mov
popf
lock
add
mov
pop
fwait
sahf
fsts
jne
js
and
cmc
xchg
cltd
pop
and
pushf
add
dec
in
sbb
adc
adc
jo
add
imul
add
cld
adc
mov
lock
add
lds
call
daa
popa
aaa
repz
mov
imul
xchg
in
pusha
fdivs
mov
inc
add
add
dec
push
movl
ss
jnp
insl
or
sub
data16
push
jns
loopne
outsb
fimuls
lock
movsbl
and
aam
pop
inc
add
les
cli
push
dec
push
add
out
aad
fistps
jnp
je
lcall
dec
lods
cs
mov
mov
jle
iret
dec
add
push
sub
push
fcoml
add
add
jno
aam
sbb
jmp
cltd
xchg
dec
add
or
add
adc
cmp
mov
mov
fidivrs
jcxz
sbb
xor
push
inc
mov
shlb
add
pop
push
aaa
dec
jae
add
lret
mov
in
inc
into
in
loopne
sbb
out
test
jb
add
add
js
cmp
push
lods
mov
sbb
jle
jae
ret
push
call
notb
adc
sbb
ret
push
pop
cmp
xchg
cmpb
mov
mov
stc
out
mov
mov
and
addr16
push
mov
dec
sarb
xlat
push
repz
adcl
add
out
jl
jno
xlat
xor
rorl
or
mov
nop
jp
cmp
pop
mov
sbb
into
add
clc
subb
outsb
test
add
gs
das
adc
mov
pop
xchg
out
in
fstpt
mov
jl
arpl
or
xor
add
iret
jo
shrb
dec
andb
popf
add
pop
ltr
mov
inc
add
jp
rorl
sub
add
in
aas
mov
dec
sbb
cmc
ljmp
testl
cmc
push
sbb
pop
xchg
add
mov
in
add
xor
add
xchg
sti
inc
jnp
imul
cs
inc
pusha
push
cmp
les
dec
into
mov
pop
aam
repz
fstl
lea
push
in
rcll
adc
add
int3
xor
repnz
sahf
cmp
mov
stc
lock
jg
add
jge
mov
mov
add
out
inc
mov
rclb
lock
mov
test
sti
mov
aaa
mov
add
stc
push
or
loopne
add
out
cmp
jns
or
pop
loope
sub
mov
push
rcl
aas
popa
dec
sbb
cld
xor
xor
pop
mov
pusha
cmpsl
leave
xor
fldt
loope
mov
dec
fwait
add
push
push
mov
or
fcmovnbe
add
mov
cli
pop
push
and
jo
add
lret
js
leave
enter
mov
sarb
cltd
adc
sbb
mov
xor
mov
cwtl
dec
xor
cmc
and
xlat
mov
pop
sti
add
adc
hlt
cmc
loopne
lea
iret
lock
test
pop
mov
jb
add
mov
lret
or
mov
add
mov
pop
push
and
cmp
mov
add
popf
stos
rorl
popl
idiv
adc
cli
and
push
lahf
fadds
out
or
jbe
test
pop
cwtl
add
pop
pusha
lahf
dec
or
cmp
dec
mov
push
sahf
aam
clc
out
or
add
cmp
stos
mov
add
inc
dec
and
pop
dec
cmp
insb
andb
add
or
outsb
sub
add
arpl
jnp
pop
mov
fistpll
into
add
sbbb
test
push
pop
cs
adc
addr16
call
lock
stos
sahf
mov
or
popf
into
dec
push
in
add
daa
xor
mov
adcb
push
nop
push
push
test
and
scas
clc
mov
add
adc
mov
push
xor
xor
pop
and
xchg
sub
mov
pop
push
mov
cmp
lret
out
mov
jge
push
push
test
sub
xchg
or
loopne
push
xchg
dec
add
xchg
sbb
lahf
pop
xsaves
push
dec
loopne
sbb
loop
jns
add
xchg
sub
xchg
add
bound
popa
add
orl
push
negl
mov
add
add
cmp
fildl
leave
test
lea
mov
int3
add
fcmove
push
mov
inc
notb
ljmp
dec
leave
adc
add
lahf
aaa
outsb
stc
xchg
pop
pop
xor
mov
repz
add
sahf
mov
inc
cld
mov
adc
in
inc
mov
pusha
dec
push
mov
lea
and
mov
mov
fisubrs
add
cmc
mov
and
testl
in
xchg
insb
add
xor
pushf
movsl
inc
add
mov
or
fdivrl
cmp
sbbb
dec
sbb
popa
clc
adc
jb
cltd
stos
adc
repz
loope
cmp
push
add
and
cmp
push
imul
jno
mov
cld
adc
fwait
cwtl
arpl
enter
cli
icebp
add
push
jmp
add
ret
cmp
mov
int
jae
test
ljmp
out
addr16
add
aad
add
adc
test
cmp
pushf
mov
add
mov
pusha
rclb
add
bound
or
or
xchg
movsb
add
pushf
mov
add
cmp
add
aas
and
push
add
popf
imul
xor
pop
addb
mov
imul
roll
insl
inc
bound
ror
mov
int3
orb
cwtl
and
imul
sbb
fldenv
ja
scas
add
push
lods
mull
push
or
insb
xchg
add
hlt
inc
rorb
lret
inc
push
jg
rcrb
flds
jecxz
out
jbe
sbb
adcl
movsb
shl
lods
loopne
jb
sbb
dec
push
jle
pop
dec
stc
int3
xor
pop
dec
outsb
sub
movsb
je
mov
cld
ret
add
or
mov
mov
add
jp
nop
shll
aaa
push
pop
pop
pop
add
mov
add
test
push
icebp
mov
adc
aas
gs
mov
movsb
cmpsb
mov
das
mov
stc
insb
xchg
or
mov
adc
addb
ret
pop
sbb
les
sub
in
shrl
mov
add
cmpsl
pop
inc
fidivs
push
jp
add
stos
fldlg2
rcrb
add
loopne
daa
les
jno
or
fistpl
xchg
add
shlb
push
add
jle
idiv
nop
push
pop
es
adc
mov
gs
cmp
add
adcb
and
mov
testb
jmp
test
fstpt
add
dec
shrb
add
sahf
and
add
testb
cmp
sub
sbb
incl
stc
and
pop
push
inc
lret
aam
je
in
pop
jbe
fimuls
es
and
push
xchg
mov
jmp
in
add
and
jge
add
xor
cs
les
sbb
xor
push
ja
dec
js
cwtl
mov
adc
mov
or
push
mov
pop
xchg
jb
or
fsubrs
rclb
mov
enter
rcrb
jl
ds
pcmpgtw
push
sarb
dec
cmp
imul
inc
sbb
insb
fwait
cmpsl
sbb
push
and
adc
sub
rolb
pusha
iret
or
lahf
out
mov
add
fildl
xchg
push
pop
lcall
movsl
fmuls
add
cmp
xchg
inc
call
push
aad
xchg
vmwrite
test
popa
push
test
xor
cs
rolb
add
cli
xor
and
or
testb
outsb
sub
imul
jno
pop
add
push
push
in
in
clc
or
leave
ja
pop
lret
insb
testl
divb
stc
mov
mov
lret
dec
adc
outsb
pop
shrb
add
notb
xor
xor
pop
add
adc
push
xchg
sub
jecxz
in
and
adc
into
sbb
and
dec
add
inc
cmp
fnstsw
gs
inc
not
add
fwait
mov
mov
cs
loop
jle
cmpb
push
adc
in
hlt
mov
sbb
pushf
cmp
cmp
loope
add
adc
adc
ret
cld
sarl
pop
imul
pop
cmp
push
loope
add
push
inc
mov
add
mov
jecxz
int3
xor
cltd
sti
outsl
mov
bound
sub
dec
jbe
xchg
xchg
add
data16
ret
ja
imul
or
ss
nop
imul
jns
add
push
movsb
xchg
mov
out
clc
pusha
hlt
outsl
mov
jns
push
ret
and
mov
pop
aam
ret
mov
dec
sub
inc
add
ficoms
inc
sbb
or
ja
add
push
dec
pop
jl
add
cmpsb
arpl
add
xchg
pop
add
cmp
xorl
mov
in
test
xlat
cmp
sbb
iret
xchg
inc
inc
mov
in
and
add
lea
add
push
dec
stos
arpl
pusha
inc
outsl
dec
sub
dec
pop
outsb
out
add
cmp
stc
or
outsl
movb
xchg
or
cmpsb
rorb
jecxz
testl
adcb
xor
or
imul
fsubp
std
jmp
mov
incb
adc
xchg
pushf
dec
aam
fiaddl
ret
mov
lods
add
jnp
mov
mov
sahf
pop
xchg
pop
rolb
shrb
ja
cs
and
cmpl
inc
add
xchg
shrb
add
vpmuludq
sti
ljmp
lock
adc
hlt
int3
or
sub
mov
mov
fmuls
imul
sub
sbb
in
jne
jnp
ret
popa
aam
cltd
mov
pusha
mov
popa
jg
xchg
jl
cmp
add
cltd
dec
fstps
subb
jb
leave
subb
mov
cmp
cmp
mov
pop
std
mov
xor
idiv
mov
test
push
jb
xchg
adc
or
mov
aas
cmpsl
jae
add
xor
scas
nop
nop
xor
lahf
mov
out
xchg
jg
mov
pop
insb
fistpl
clc
call
adc
add
sbb
es
pop
add
push
pop
test
mov
mov
and
xchg
inc
sub
pop
inc
pop
cmpsl
sbb
sbb
out
std
les
je
inc
loope
and
mov
out
pop
fsubrp
or
popa
out
jne
or
inc
inc
cmp
iret
add
mov
pop
fs
repnz
shrb
sub
add
sbb
rcrl
mov
add
pop
pop
hlt
fbstp
sub
dec
xchg
test
cwtl
adc
sbb
add
hlt
or
out
mov
xor
int3
stc
lret
push
jne
and
add
push
dec
mov
dec
add
add
test
xchg
stos
in
out
add
pop
cwtl
dec
lea
mov
mov
shlb
pop
xchg
pop
gs
lcall
psadbw
fldenv
jp
stos
mov
out
orb
xor
cmp
add
outsb
adc
fsubs
add
push
xchg
repnz
inc
add
sub
leave
add
mov
add
adc
fwait
adc
add
pop
idivb
inc
shll
cs
bnd
adc
mov
sub
cltd
add
and
sahf
adc
lock
ror
add
pop
dec
dec
xor
jo
call
or
inc
inc
add
cltd
sub
pushf
mov
jg
jp
jle
negb
dec
push
repz
push
add
addl
test
or
add
fisubl
insb
outsl
add
push
loope
add
in
clc
adc
std
add
mov
sbb
pushf
stos
and
jl
xchg
add
lea
scas
popl
mov
call
jg
aam
sti
add
mov
ja
add
adc
nop
add
jnp
pop
xchg
mov
js
out
in
xchg
mov
xchg
add
leave
pop
jmp
es
jnp
add
and
mov
sbb
lods
popa
mov
add
xor
lds
pop
ljmp
in
or
in
mov
inc
out
addl
push
out
pop
fidivrs
cmp
shll
and
xor
mov
sub
or
sar
mov
xchg
add
aad
outsb
aas
int
mov
sub
fsubs
pop
adc
sbb
adc
lcall
rcr
addr16
adc
dec
pop
data16
ret
rclb
push
sbb
push
cmc
rcrb
dec
ljmp
mov
loopne
or
inc
fcomps
xor
xor
je
nop
cmp
sbb
in
cmc
repz
add
pop
mov
ret
jecxz
jbe
movsl
mov
add
into
sbb
or
add
insl
imul
sti
mov
in
repz
lret
jo
dec
or
push
xchg
aas
add
push
adc
add
add
fdivrs
int
les
popf
and
sub
roll
xchg
outsb
loopne,pn
jg
cwtl
sbb
int3
aam
shlb
gs
shlb
cmp
jbe
jo
or
push
dec
add
nop
sub
pop
fidivrs
add
mov
add
mov
dec
add
mov
pop
mov
xor
ja
incb
or
imul
jecxz
push
add
push
pop
and
rcll
pop
push
jmp
lret
cmp
jle
outsb
mov
fcoml
xor
add
jmp
inc
add
jae
mov
cmp
jg
repz
sbb
add
push
xchg
movsl
mov
cwtl
add
push
das
lret
add
jmp
imul
rorl
shlb
push
or
sbb
or
and
adc
add
fwait
mov
cmp
pushf
push
inc
add
shll
jg
sbb
outsl
cmpsb
rol
ss
icebp
bound
pusha
sbb
dec
popa
cmpsl
into
inc
inc
std
mov
test
and
pop
pop
ds
add
mov
sbb
xor
and
adc
xchg
mov
je
add
and
test
and
mov
and
popa
cmpsl
mov
fcompl
add
sub
sbb
lcall
xchg
jo
add
dec
rol
test
push
add
jbe
sub
pop
xor
push
shll
pop
lods
and
fs
or
dec
add
aam
je
jnp
sbb
pop
dec
dec
ljmp
ja
and
outsl
dec
orps
out
inc
sbb
aas
jb
pop
sub
add
incb
and
shlb
imul
sbb
cmp
pop
roll
adc
int3
sbb
add
ret
enter
cld
adc
scas
mov
sbb
adcb
xchg
cmp
or
mov
add
icebp
lahf
cmp
nop
jmp
add
mov
sub
inc
fisttpl
das
popf
jo
jl
ds
test
or
xchg
dec
add
cltd
ss
inc
and
rorb
aas
jg
aas
pop
cmp
addb
push
in
push
cwtl
lods
es
js
iret
mov
mov
sbb
mov
add
cld
cmc
push
add
je
ret
mov
mov
xchg
adc
in
out
mov
inc
dec
add
call
push
add
fstp
mov
inc
inc
add
jmp
jle
sbb
mov
sub
xchg
popl
cmp
popa
dec
or
jmp
mov
sbb
add
mov
inc
add
sub
lock
fdivrl
loopne
push
lods
lcall
or
imul
ret
sbb
test
push
mov
in
push
pop
incl
js
sub
jbe
add
clc
dec
repz
pop
push
add
pop
mov
push
in
add
xchg
dec
ljmp
popa
inc
sti
push
sub
fs
mov
fistl
cmp
jl
add
dec
xlat
mulb
jg
pop
add
outsb
xor
aam
mov
imul
mov
into
pusha
mov
in
in
pop
scas
sbb
adc
jg
test
add
adc
imul
out
aaa
bound
add
push
shld
xchg
add
jp
sub
cli
leave
fstps
add
jmp
and
mov
movb
outsb
mov
pop
loopne
subl
pop
add
mov
or
je
notb
jmp
ljmp
sub
push
inc
add
pushf
fistps
push
sub
popl
push
inc
mov
sarl
sbb
adc
mov
add
nop
cmp
shll
add
insb
aad
iret
outsb
xchg
add
cmpsb
push
wbinvd
pusha
fidivrs
std
or
pop
jl
fmull
outsb
fidivrs
push
sbb
cmp
insb
cmp
sarb
dec
addb
dec
addb
mov
sbb
in
pop
sub
pop
pop
xor
notb
or
push
scas
test
cmpb
add
and
xchg
push
or
lds
out
test
cwtl
insl
pop
add
mov
cmp
ret
jle
dec
mov
bound
pop
mov
adc
sbb
push
insl
sub
ss
sbb
adc
inc
xor
rcrb
mov
shlb
js
add
mov
mov
inc
scas
shl
mov
in
mov
loop
jmp
fnstsw
in
pop
andb
add
dec
pshufw
pop
loopne
pop
cmp
push
hlt
adc
subb
ret
cli
pushf
and
pushw
mov
dec
orl
imul
jo
shufps
pop
mov
or
dec
rcrb
add
cmp
jecxz
into
orl
addb
mov
fstpl
push
loopne
add
fisttps
dec
inc
stos
aaa
push
xor
jo
in
and
xor
sbbb
in
inc
test
stos
mov
fildll
aas
jne
add
cs
in
sub
adc
add
adc
mov
mov
movsl
push
pop
notb
pop
loop
lods
popa
rolb
hlt
lret
loope
jb
inc
lock
leave
xchg
into
and
add
push
cmp
jecxz
roll
pop
sbb
mov
add
test
mov
add
mov
pop
add
ret
add
jl
roll
push
lahf
inc
jecxz
xorl
add
fs
and
push
jge
test
jns
add
sahf
mov
lods
or
push
out
add
scas
inc
dec
dec
inc
mov
cs
loope
xchg
push
es
dec
jmp
stc
pop
sbbb
sahf
xchg
push
add
lods
fwait
cli
fidivrs
nop
add
scas
adc
daa
xchg
in
jmp
repz
pop
pusha
js
incb
fs
and
ss
push
fstps
push
sub
dec
inc
jl
arpl
push
nop
xlat
push
and
mov
test
out
mov
xchg
dec
fisttpll
ds
jbe
rorb
inc
out
push
mov
outsb
fs
sbb
jp
add
inc
ret
lahf
pusha
pop
push
dec
add
pop
or
movsb
and
test
in
mov
stc
jp
test
add
push
sub
outsb
es
fcmovu
inc
lods
add
mov
mov
int
ret
clc
push
add
cmpsb
out
pop
ds
movsb
add
js
insb
pop
pop
mov
cmp
jo
pop
add
dec
cmpsl
loope
pop
jno
add
lock
jmp
adc
test
mov
incb
pop
aam
push
push
jg
in
add
dec
cmp
or
lods
std
mov
mov
data16
rorb
rcll
movsl
mov
pop
in
pop
or
inc
mov
ja
imul
pop
hlt
popa
and
add
push
mov
add
int3
das
dec
enter
add
test
ja
inc
push
shll
pop
loopne
lods
xchg
nop
or
push
xchg
rorb
sbb
aaa
or
adc
lds
addr16
push
xor
mov
daa
add
add
sbb
movq
stos
jns
in
pusha
xorl
add
iret
inc
mov
dec
lcall
cmp
cmpsl
sbb
les
shrb
cld
in
pop
xor
and
cmp
ror
mov
cmp
inc
fmul
loop
sub
lds
pusha
in
push
add
out
mov
fsubrs
xchg
add
cmpsl
clc
inc
push
or
sub
std
add
ret
mov
mov
inc
aas
subb
leave
sub
daa
roll
ljmp
pmaddwd
out
scas
enter
js,pn
lds
add
test
test
cmp
add
arpl
sahf
add
inc
movl
cmp
dec
add
ret
mov
add
cmp
push
pusha
pop
jg
add
jmp
add
add
pop
nop
sbb
cltd
pop
les
ret
cmp
cmpb
je
adc
gs
std
add
jecxz
pop
mov
addl
inc
jmp
orb
rorb
or
aad
adc
enter
sub
pop
ljmp
push
sbb
add
loope
cld
lret
stos
mov
stos
xor
add
xchg
or
mul
pop
rcrb
sbb
push
add
xchg
sbbl
push
dec
or
pusha
jg
jmp
pop
add
adc
aaa
in
daa
jle
add
filds
call
rol
lahf
mov
xchg
add
jnp
fadds
mov
and
pop
inc
adc
aam
leave
mov
loop
cmp
and
shll
fcompl
xchg
mov
les
mov
test
arpl
rclb
mov
cmp
jge
pop
add
pop
clc
in
popa
or
call
aaa
test
xchg
pop
adc
and
pop
clc
jbe
lock
das
jne
sbb
and
enter
dec
insb
clc
pop
bound
cltd
icebp
dec
xchg
pop
mov
mov
test
cmpsl
add
cmp
arpl
lods
jle
add
std
add
scas
frstpm(287
in
jecxz
mov
frstor
bound
push
mov
sbbb
stos
adc
inc
loop
scas
out
aam
cmp
imul
and
push
or
pop
outsl
inc
or
add
cmp
sub
f2xm1
add
xchg
subl
cmp
faddl
dec
pop
insl
loope
test
aam
dec
js
add
jnp
int3
and
adc
push
add
push
lock
mov
pop
movsb
dec
push
add
mulb
sub
adc
xor
mov
jmp
and
add
and
sti
insb
add
loopne
es
test
sub
xchg
xor
and
pop
enter
add
int
mov
ret
add
and
or
jp,pt
subb
lods
add
push
jecxz
add
mov
adc
cwtl
adc
fdivrs
fldcw
outsl
add
mov
lds
jl
sbb
loopne
xchg
xor
outsb
mov
mov
outsb
pop
xor
pusha
mov
add
push
and
cmp
incb
jge
ret
std
xchg
sub
add
out
or
lock
sar
push
in
inc
pushf
outsl
add
pop
mov
rcrl
leave
xor
das
int3
add
dec
shlb
faddl
scas
add
imul
int
pinsrw
dec
inc
lods
cmp
jge
dec
movsl
imul
mov
ret
adc
jae
add
imul
push
clc
add
dec
add
and
cmp
ret
add
inc
je
mov
ljmp
in
pop
loope
add
cmp
sbb
jo
rcl
pusha
into
rolb
lahf
push
cltd
sbb
add
movsl
mov
pop
pop
cli
pop
add
incl
test
icebp
xchg
push
jp
loope
in
xchg
scas
adc
movsb
inc
add
cwtl
add
rorl
je
sub
jge
addr16
add
fcmovnb
es
in
push
and
int3
inc
add
xchg
inc
dec
rolb
sbb
push
pop
or
or
idivb
add
or
and
ss
cmp
cld
rclb
adc
outsb
mov
and
and
add
push
negb
out
mov
outsb
push
dec
add
je
repnz
cmp
movsl
enter
add
jb
icebp
sbb
cwtl
sbb
jbe
and
lahf
add
hlt
mov
xor
js
cmpsl
add
and
inc
xchg
jnp
aas
lds
popa
adc
movq
xchg
and
enter
sbb
mov
add
jmp
inc
sbb
and
addr16
xor
add
call
dec
pop
add
and
std
lock
add
hlt
mov
add
push
daa
or
rorb
xor
loopne
pop
pop
pop
ret
adc
pop
pop
insl
test
nop
xor
aaa
pop
add
push
xor
sbb
out
enter
push
or
iret
mov
push
cmp
es
mov
pop
xchg
sub
push
les
pop
popa
es
mov
and
inc
repnz
sub
mov
jns
orl
and
out
dec
or
fstl
shlb
out
push
sbb
or
jb
or
scas
in
and
mov
sub
add
repz
scas
jne
add
cs
and
cmpsb
fwait
and
mov
mov
mov
fidivs
lock
and
jne
rcrb
mulb
daa
adcb
cli
popf
add
jbe
mov
inc
mov
cmpsl
pop
enter
xchg
comiss
mov
in
sub
add
call
dec
mov
jns
add
pop
jmp
inc
in
sbb
and
rolb
push
push
into
jl
das
push
mov
dec
sbb
xor
mov
and
sbb
jns
adc
add
out
pop
inc
mov
pop
pop
sub
add
xor
jne
add
push
xchg
add
mov
mov
aaa
push
test
adc
pusha
aas
xchg
dec
jbe
or
data16
add
add
cmp
mov
cli
add
arpl
dec
aam
xchg
or
pushf
enter
repz
subl
xchg
add
push
setp
sbb
out
add
and
or
push
ljmp
add
push
cli
mov
aas
stos
int3
bound
dec
les
cmp
or
ds
pop
outsl
add
lea
inc
sub
inc
insb
jp
clc
and
pop
str
shlb
push
in
into
out
xchg
dec
fiadds
cmp
and
add
cmp
dec
aam
shl
push
call
dec
or
push
loope
jnp
pop
pop
icebp
in
adc
dec
inc
insb
loopne
cmp
add
jmp
sar
mov
jb
add
jbe
test
aam
add
or
fcompl
xchg
aad
add
xchg
push
loope
pop
adc
cmp
dec
jo
xchg
int
insl
insb
inc
inc
aam
cmp
imul
jge
imul
mov
inc
lds
push
dec
addb
pop
jl
cmp
add
xor
fwait
dec
sub
lock
dec
or
add
cltd
sub
or
hlt
inc
push
dec
or
pop
shlb
pop
add
and
repz
leave
cmp
mov
or
and
and
dec
mov
pushf
jae
jne
ret
jge
lds
roll
icebp
jno
mov
add
repnz
mov
sub
jg
sahf
add
add
lods
dec
lea
int3
jb
arpl
cltd
pop
mov
ss
std
int3
pop
cld
jo
sbb
lea
popf
sub
in
mov
sbb
movsb
add
imul
push
cmp
jp
add
jb
outsb
xor
add
out
dec
jns
push
jmp
jo
data16
imul
push
jg
push
mov
andl
dec
and
and
mov
mov
data16
or
cmp
mov
das
jge
out
inc
jmp
sub
aad
cwtl
mov
mov
xor
or
mov
orb
pusha
mov
jg
jl
dec
mov
jno
daa
pop
lods
jle
repz
adc
out
aas
aam
cli
je
dec
add
jno
int
notl
mov
sub
jle
add
pusha
push
leave
mov
fldl
clc
inc
add
out
mov
arpl
jl
out
bound
push
add
mov
aaa
inc
adc
mov
dec
shrl
test
inc
xchg
sbb
sub
cmpsl
nop
clc
mov
sbb
and
leave
dec
add
push
dec
pop
push
mov
mov
mov
loop
es
lret
sub
in
mov
repz
in
or
std
push
pushf
inc
add
mov
repnz
adc
in
cmpl
cld
cmp
scas
ret
xchg
leave
push
add
lret
add
in
test
mov
call
xor
mov
pop
jo
sbb
dec
add
xchg
js
lock
add
test
sahf
cmp
push
inc
sub
add
in
inc
pushf
shrl
aad
adc
add
scas
shl
cmpsl
push
data16
icebp
int
test
les
cmp
sbb
int3
cmp
insl
stc
add
pop
rorb
dec
sti
inc
xchg
rolb
push
imul
xor
xchg
xor
mov
add
call
push
cmp
arpl
mov
jle
add
push
and
loopne
add
and
push
pop
sub
add
movsl
ret
hlt
outsl
push
or
test
xchg
add
dec
sub
fdivr
cmp
or
and
add
push
aad
test
push
mov
cmp
mov
loopne
push
adcb
out
jp
cli
inc
mov
stc
add
cwtl
test
jg
inc
std
add
rorl
sbb
mov
add
js
fiadds
jl
ljmp
add
dec
sub
cmpsl
fldl
notb
jb
xchg
sub
add
adc
pop
clc
dec
add
adc
movsb
arpl
sbb
sbb
imul
bound
aad
add
and
rorb
jae
inc
sub
loopne
mov
jecxz
add
sub
and
movsl
mov
xlat
and
sti
mov
sbb
mov
adc
mov
jne
popa
icebp
and
enter
jl
add
mov
sub
cmp
add
adc
fistpl
push
pop
inc
stos
push
flds
xchg
add
shll
xorb
enter
mov
or
mov
xor
bound
cs
in
mov
imul
adc
les
and
out
aas
cmp
dec
adc
fadds
loope
jb
push
ret
shlb
cwtl
mov
jle
into
les
sub
sub
fsubrs
fldl
ss
mov
das
cld
inc
add
xchg
inc
inc
lds
and
add
dec
pop
jo
lock
xchg
push
lock
add
fs
callw
mov
push
nop
loopne
mov
jnp
inc
xchg
sbb
add
bound
rorl
loope
inc
movsb
loopne
xchg
xor
mov
lcall
cld
add
loope
les
pusha
push
shrb
push
mov
xchg
in
fs
sub
test
add
mov
movsb
pop
lret
scas
inc
dec
repz
shrl
inc
adc
pushf
cld
inc
fisubrl
adc
loope
add
mov
and
popa
dec
arpl
adc
jnp
jo
out
arpl
add
outsb
inc
add
add
and
sbb
mov
pushf
lods
adc
lahf
insb
dec
xchg
pop
xchg
sbbl
mov
pop
movsl
dec
or
lret
loope
in
and
cwtl
jo
shr
sbb
push
movsl
je
or
add
sbb
mov
shlb
pop
test
rcrl
or
or
into
jecxz
nop
les
bound
test
inc
jg
add
lock
sbb
fs
mov
pusha
popa
inc
enter
incb
adc
les
or
pop
sahf
rclb
jne
pop
loopne
inc
and
push
fsubl
or
xor
pop
sbb
cmp
daa
sub
mov
notb
or
xchg
lods
add
and
push
fistps
add
pop
sub
mov
push
sub
test
fs
and
inc
aas
ret
es
xchg
rorb
in
xchg
in
sarb
addr16
mov
sarb
hlt
mov
shlb
shll
add
cmp
sbb
adc
cmp
push
or
inc
and
test
xchg
int
ljmp
push
pop
rcrl
fsubs
les
sbb
cmp
or
cmp
xchg
push
mov
scas
sarb
pusha
mov
sub
and
shrl
inc
loopne
fchs
loop
adc
pusha
in
xor
inc
add
and
loop
movsb
add
imul
and
movsl
inc
lock
mov
lea
mov
mov
xor
add
mov
push
mov
pop
mov
mov
fs
pusha
and
gs
sub
and
js
mov
jne
les
mov
xchg
jl
jmp
cmp
not
sub
sub
add
xor
es
mov
dec
jne
cmp
sbb
je
rclb
rclb
dec
les
mov
xor
shlb
push
inc
adc
dec
ljmp
aaa
test
test
in
lret
and
cmpsl
mov
mov
stos
pop
add
add
inc
or
xchg
adc
xor
add
loopne
push
int
scas
enter
cmpsb
mov
and
dec
add
push
jb
adcb
pop
push
lods
pusha
cmp
or
dec
jl
outsl
movsl
into
sbb
scas
dec
cltd
xchg
mov
or
in
in
rorl
clc
std
add
stos
mov
shr
xor
or
sbb
mov
roll
addr16
into
pop
push
sbb
movsb
popa
inc
adc
out
clc
jle
fiadds
pop
out
lahf
adc
jg
add
testb
pop
jbe
add
mov
or
inc
repz
or
dec
or
int3
add
pop
jle
dec
jno
jbe
pop
insb
add
mov
push
xor
adc
jns
or
int
dec
cld
jo
inc
loopne
jmp
jno
sbbl
ljmp
add
sbb
and
outsl
popf
shlb
ret
inc
or
shlb
insb
pop
inc
dec
or
add
stos
and
pop
aas
lods
movsl
cld
icebp
stc
mov
dec
fdivl
add
jo
xchg
mov
push
and
ja
xorb
dec
xchg
popl
sub
add
push
insl
mov
hlt
loopne
push
add
xchg
mov
cli
je
add
or
mov
adc
cltd
stos
or
mov
xorb
inc
xlat
pop
sub
sbb
cltd
cwtl
loop
or
fidivrl
add
cld
xor
sub
push
push
mov
jae
insl
cltd
outsl
push
dec
fists
sbb
mov
notb
outsl
inc
mov
maskmovq
divl
jmp
scas
dec
dec
cld
repnz
add
push
fwait
imul
mov
out
sub
mov
or
add
jns
sti
mov
add
jo
mov
pop
fwait
xchg
inc
stos
arpl
cmpsb
call
out
loop
cltd
and
iret
push
push
jecxz
decb
bound
das
imul
xchg
dec
gs
or
push
dec
pop
fdivs
adc
aam
pxor
xchg
mov
push
xchg
jmp
push
andl
mov
pop
or
adc
push
cld
push
movsb
ret
divb
adc
cmp
and
mov
je
divb
mov
push
sub
fildll
cmp
pextrw
adc
gs
test
sbb
loope
adc
stos
sbb
xor
iret
add
bound
test
inc
verr
xchg
sub
into
out
loop
pop
iret
mov
fwait
and
fs
sub
mov
scas
stos
and
xchg
ljmp
xor
cltd
ret
xor
outsb
lock
xchg
iret
fldl
jo
int3
push
in
lcall
adc
mov
xor
test
pop
aam
mov
inc
and
subb
adcb
pop
pop
sub
ja
and
test
adc
cmp
daa
sub
add
aas
mov
sub
pop
mov
mov
les
push
subb
jle
aaa
dec
cmp
je
test
iret
add
mov
jne
add
cmp
fnstsw
outsl
adc
ljmp
fiadds
dec
dec
xchg
push
in
push
ret
ret
pop
outsl
loopne
cltd
mov
cmp
or
aaa
inc
push
jg
sbb
icebp
scas
loopne
inc
es
pushf
xchg
ja
addb
mov
jmp
js
xchg
dec
cmp
sbb
es
adc
inc
xor
rorb
addl
pop
push
hlt
jae
in
test
mov
push
jl
and
and
add
add
out
jmp
cmp
cwtl
fs
dec
jg
notl
das
cwtl
xor
out
dec
add
test
cmp
sbb
ja
sub
loopne,pt
das
fstpl
notl
addb
cwtl
lock
fdiv
adc
lcall
cmc
mov
xchg
jl
je
dec
scas
and
or
div
adc
push
cmpsb
fdivs
inc
jno
and
xor
ret
or
push
js
dec
and
and
or
xchg
mov
lds
xorl
in
dec
lcall
xchg
data16
popa
lock
or
pusha
add
and
mov
dec
daa
arpl
imul
or
lds
and
push
das
inc
enter
or
popf
or
mov
mov
into
scas
jl
outsb
movsl
movsb
dec
adc
mov
inc
inc
les
mov
imul
loop
aaa
dec
out
push
jp
dec
call
pmovmskb
lods
es
mov
add
cltd
popf
push
test
jbe
xorb
jb
shll
add
and
clc
enter
ss
mov
add
stos
movsl
inc
push
cmpsb
sub
ret
jp
xor
out
and
pop
xor
subl
push
sbb
sub
add
les
rorl
sbb
pop
mov
loopne
or
clc
dec
in
shlb
and
mov
and
test
ja
shlb
sbb
jo
repz
pop
sub
jmp
mov
or
jns
push
add
jge
out
ficomps
xchg
ljmp
adcb
test
insb
add
or
or
fwait
loopne
jmp
iret
cmpb
pop
lods
in
push
cmpb
fmuls
dec
call
adc
and
pop
mov
into
push
movsl
cltd
iret
sbb
inc
clc
in
repnz
shlb
adc
push
or
stos
fidivl
or
into
arpl
ret
fsubl
inc
out
dec
push
or
ds
or
mov
mov
push
add
gs
call
inc
pop
dec
leave
mov
in
mov
dec
test
lret
or
call
sub
add
mov
cmpsb
xchg
iret
add
pop
mov
cs
cmp
or
mov
cmp
or
cltd
scas
mov
and
sub
arpl
lea
and
nop
xchg
adc
std
repnz
imul
cmp
pop
add
das
push
shlb
xor
mov
testb
rclb
adc
mov
push
xor
or
movsl
xor
or
ret
enter
add
in
call
add
mov
insl
aad
adc
add
xchg
mov
lea
pop
loopne
jae
jge
les
xor
inc
fwait
imul
cld
pop
jno
mov
mov
xor
test
adc
adc
sub
pop
sub
adc
repnz
fisubrl
in
and
loop
sti
addr16
pop
add
addb
pop
aas
rolb
gs
iret
in
jnp
xchg
add
fstpt
or
clc
add
cmp
pop
out
dec
jmp
lret
pusha
outsb
mov
add
mov
pop
pop
icebp
mov
pop
xchg
sbb
or
test
pop
push
idivb
add
jl
clc
ja
add
into
adc
inc
repnz
pop
rorl
jno
xlat
cvtps2pi
cmp
push
pop
pop
xor
pop
iret
shrb
xor
add
mov
jno
jnp
mov
jl
adc
add
fsub
lret
xor
pop
and
fisttps
adc
add
in
orb
lret
jns
lcall
xchg
mov
pop
lahf
add
lds
fsubrl
dec
sti
je
sub
or
ret
rep
pshufw
inc
add
out
add
inc
jo
add
xor
mov
in
push
divl
test
or
or
test
lock
je
clc
sahf
arpl
mov
mov
xlat
test
out
or
push
movsb
ljmp
xchg
xlat
sbb
jnp
ss
jl
icebp
sbb
inc
inc
add
fisubl
sti
imulb
pop
mov
ds
js
sbb
jb
cmp
add
xor
inc
mov
out
rolb
inc
add
mov
add
arpl
push
adc
divb
test
fwait
dec
sbb
notl
movsl
xchg
pop
xor
sti
jle
push
pop
js
add
dec
or
outsb
movsb
or
push
notb
dec
inc
enter
filds
pop
mov
cmc
insb
and
in
sub
das
jecxz
rorl
pop
xchg
repnz
pushf
xchg
sbb
xor
call
sti
mov
cmp
add
ds
push
clc
mov
gs
sbb
mov
sub
and
mov
xchg
dec
mov
fisttpll
dec
lret
sti
addl
das
mov
adc
mov
sub
loope
sub
leave
ficomps
incl
mov
nop
pusha
jle
int
push
push
xor
movsb
and
rcll
xchg
shrb
inc
loope
ret
xchg
aam
bound
and
dec
xchg
jmp
notb
adc
add
jge
jmp
add
aas
test
pop
cld
gs
inc
andb
hlt
mov
lds
and
mov
mov
sbb
inc
repnz
dec
dec
rcrb
push
mov
arpl
and
dec
adc
sahf
ret
stos
pop
aad
or
cmp
add
xchg
clc
in
inc
adc
ja
cwtl
sbb
xchg
hlt
cmp
sbb
cmp
cwtl
adc
add
jle
jo
dec
mov
or
js
sbb
mull
sarb
cmp
cltd
mov
movq
icebp
cmpsb
sub
or
mov
push
pop
test
gs
xlat
xchg
xorps
cmp
mov
loopne
sub
pop
cmp
inc
xchg
lahf
stos
inc
shlb
movsl
mov
cmp
pop
dec
mov
jecxz
addr16
fmull
push
pop
mov
pop
pop
test
cmp
shrb
inc
in
sub
and
sbb
insl
int3
ret
dec
or
mov
push
jne
cmpsl
mov
jle
shrb
loopne
enter
unpcklps
and
test
es
pop
sub
popa
addb
or
or
test
pop
dec
iret
pop
mov
fwait
mov
adc
sub
or
push
dec
je
loopne
add
in
add
sbb
outsb
aaa
and
dec
jae
out
sbb
adc
cli
mov
cmp
lock
xor
and
pop
adc
push
flds
movsl
fwait
push
fstl
leave
pop
mov
add
jmp
jbe
pop
xor
clc
andl
sbb
out
pop
loopne
inc
pop
mov
repnz
loopne
xor
jge
loope
in
rolb
cld
insb
js
add
push
in
or
fnsave
xor
in
jo
add
xor
xor
idivl
mov
pop
xor
cmp
add
data16
shlb
fldt
leave
pop
call
mov
mov
jnp
ja
or
shlb
repnz
add
gs
xchg
imul
dec
scas
ret
add
int3
rcll
sbb
lods
adcb
add
xchg
fidivl
sar
pop
pop
test
fwait
cli
cmpb
mov
mov
leave
add
cmpsl
ds
add
sbb
outsl
mov
cltd
mov
in
shlb
add
push
pop
add
pushf
insl
cmpsl
jbe
loop
jns
add
into
mov
dec
flds
sub
mov
inc
in
repz
scas
jp
mov
jmp
add
in
aad
in
js
add
sbb
sbb
cmpb
shll
cmp
enter
push
cmpl
jle
add
aaa
jle
mov
jae
xchg
jo
or
xchg
and
sub
roll
enter
push
sbb
jecxz
aaa
addb
in
sbb
out
add
inc
sbb
sbb
mov
xchg
add
jne
es
pop
call
addr16
dec
cmpsb
inc
sbb
cmpb
push
add
adcb
cmp
ds
push
xchg
inc
mov
test
ljmp
mov
insb
test
mov
adc
in
add
inc
fiadds
jle
cld
roll
xchg
dec
xor
int3
mov
cld
pop
out
add
jge
lret
xchg
mov
enter
add
add
mov
jae
and
cld
and
movsb
sbb
cmp
jl
add
xchg
push
add
insb
add
jns
jge
and
sar
bound
xor
addb
push
add
fs
pusha
ret
out
adc
je
mov
mov
xchg
scas
and
in
pop
add
sub
fdivrs
or
pop
les
pusha
data16
jecxz
adc
xor
xor
add
xor
popl
or
rol
cltd
push
test
lcall
xor
add
popf
cmp
xchg
add
or
jb
and
testb
mov
push
in
clc
scas
jge
push
lea
popa
mov
add
loopne
lds
fsts
jg
lahf
and
pop
sarl
push
cs
lea
add
push
in
ret
add
pop
sub
fcom
loopne
mov
cmpsb
add
icebp
in
sbb
rorb
add
cmpsb
xor
outsl
out
jecxz
lahf
xchg
lods
cmp
aas
enter
cmc
jp
jns
call
js
jb
pop
imul
cmp
dec
xchg
ljmp
dec
adc
xchg
pusha
ss
add
out
lret
jge
add
aas
pop
add
cwtl
jo
call
dec
arpl
mov
add
test
push
insb
xor
shlb
testb
ds
xor
inc
push
dec
adc
mov
pop
int3
ficoml
sbb
subb
jle
aad
dec
add
aam
cmp
addb
add
test
adc
aas
popa
movsb
add
test
sub
aad
cmpsl
sbb
ja
push
sub
inc
scas
mov
ficomps
push
jle
out
es
add
jne
sahf
repz
imul
subb
cltd
aam
sbb
mov
add
sahf
popa
and
push
bound
add
adc
mov
or
pop
jp
sub
pop
in
add
xchg
mov
adc
leave
fiaddl
xchg
push
add
or
pop
fildl
jbe,pt
add
add
jg
nop
add
faddl
bts
sbbb
push
pop
push
pop
scas
and
dec
add
loop
sub
scas
adc
cmp
sbb
testl
stc
rolb
mov
inc
jb
add
and
leave
sub
add
test
add
mov
adc
fs
xor
jge
loopne
leave
add
mov
je
pushf
push
jl
cmp
sbb
dec
xchg
pop
push
mov
adc
test
subb
mov
lret
or
add
pop
in
jbe
dec
bound
add
adc
add
mov
mov
mov
cld
out
add
pop
outsb
add
je
mov
mov
aam
mov
xor
cmp
roll
mov
iret
bound
xchg
pop
inc
inc
addl
dec
scas
sub
test
ficoml
hlt
inc
push
pushf
mov
js
or
push
mov
decl
mov
stos
test
shlb
shlb
clc
add
push
mov
jmp
xlat
jg
lret
ret
fmuls
cmpsb
cmp
jl
cmp
add
and
sbb
sahf
sar
ss
jno
jmp
add
push
jg
insb
lods
leave
adc
fisubrl
pop
and
mov
mov
sar
sar
loope
fsts
in
outsl
pop
jnp
push
add
inc
fwait
cmpb
push
shl
jno
addr16
cmp
add
std
jl
scas
sbb
dec
add
shlb
add
sub
mov
movsb
dec
add
aam
dec
push
clc
cltd
push
jo
mov
aas
push
push
mov
push
insl
cmp
pushf
adc
add
stos
lret
dec
add
or
cmp
add
in
outsl
xor
pusha
sub
cmpb
dec
add
sbb
gs
or
bound
cltd
lds
mov
or
and
or
cld
cmp
xchg
add
sub
inc
ret
dec
jg
add
fsub
cli
scas
lahf
imul
add
push
lock
add
or
jo
adc
sub
xchg
mov
add
in
fildl
inc
mov
int
push
add
bound
dec
cmpb
lret
hlt
adc
imul
sub
mov
or
lret
add
jns
sub
sbb
sbb
pop
inc
fistpl
movb
iret
iret
rol
stc
call
xchg
mov
rcll
lods
ficompl
ret
and
pop
xchg
fcomp
push
ret
out
mov
mov
xor
or
nop
nop
xchg
cli
xchg
mov
fnstenv
sbb
inc
mov
adc
sub
adc
in
xor
insl
rclb
cmc
test
iret
or
inc
xchg
add
adc
loopne
sub
push
cmp
add
xor
pop
sbb
xchg
inc
shlb
add
inc
mov
add
aad
xchg
test
fidivrs
les
sbb
or
mov
xor
cld
and
cltd
sbb
sbbl
xor
push
fcoml
adc
int
lock
fidivrl
mov
mov
add
adc
add
loop
xchg
jecxz
push
xor
pop
xchg
es
mov
and
cmpsl
jae
aaa
add
inc
fstpt
adc
stc
sbb
je
ds
aas
dec
adc
lcall
xchg
xchg
test
dec
cmp
pop
and
lock
inc
pop
mov
scas
aam
mov
movsl
and
gs
inc
cmp
mov
ds
push
xchg
mov
inc
scas
pushl
and
pusha
and
inc
and
push
xchg
inc
cmp
xor
add
xor
xor
add
cmp
add
dec
mov
sub
add
and
add
jno
aaa
sahf
mov
sbb
mov
pushf
shl
and
add
sti
ljmp
sbb
inc
cld
in
cmp
movsl
lods
sub
add
mov
push
loopne
cld
jg
pushf
xlat
clc
sti
mov
in
pop
es
addr16
add
push
fistpl
xchg
dec
insb
and
out
adc
jl
add
mov
popf
dec
pop
addb
cmpsl
add
out
int
or
dec
jg
or
lds
jg
les
stos
es
add
leave
sbb
mov
pop
cmc
jb
jp
add
cmp
mov
andb
and
in
pop
cmp
andb
std
add
add
fnstenv
psllq
and
add
add
fs
pop
sub
xchg
or
mov
jmp
sub
sbb
cmp
mov
iret
decl
rolb
lds
ss
aaa
call
cmpsb
sub
popf
xor
xor
pop
cmc
xor
or
gs
mov
add
sti
mov
push
dec
mov
xor
jp
fldl
mov
aad
hlt
fcomps
inc
inc
dec
pop
pop
sbb
or
and
jp
stos
push
push
add
mov
or
mov
add
popa
adc
sti
add
sbb
std
jg
push
cs
sub
xorb
add
xchg
stc
shlb
push
mov
jbe
in
cmp
in
daa
xchg
and
mov
push
gs
sbb
and
fistpl
xchg
xchg
adc
jae
mov
add
jecxz
sub
out
lea
cmp
pop
in
movsb
cs
hlt
sbb
pop
mov
push
lahf
ror
testb
ficoml
fisttps
mov
sbb
xchg
shrb
in
pushf
add
and
jp
sbb
enter
outsb
cmpsb
fmuls
cmpsl
orb
push
xchg
ret
mov
xorb
clc
and
adc
push
add
ret
js
add
ds
mov
xchg
cmp
xchg
and
add
jb
cmpsb
jo
pop
mov
rcr
dec
les
add
adc
cmc
xacquire
xor
dec
adc
loopne
pop
mov
push
xor
mov
outsl
dec
push
jbe
add
adc
sbb
cld
adc
sbb
dec
aaa
xchg
sbb
jl
cmpsb
mov
add
nop
xchg
push
stos
punpckhwd
pop
push
mov
push
orb
pusha
flds
mov
mov
sbb
push
mov
add
mov
lret
and
mov
sar
mov
add
pushf
add
lahf
popf
or
adc
cmp
jg
add
lock
mov
jno
sbb
adc
push
mov
add
lods
out
xchg
ficompl
mov
xchg
popa
push
mov
xchg
and
add
dec
or
dec
fsub
pop
sbb
dec
lret
or
lahf
dec
testb
add
dec
das
add
lcall
xor
mov
jge
add
jmp
pushf
cmp
add
fs
cmp
push
xor
mov
stc
pop
jno
fcoms
cs
xor
pusha
or
and
push
fisttpl
add
out
int
xor
mov
mov
arpl
repnz
jp
inc
sarl
into
or
fistl
jp
add
out
inc
test
add
jecxz
int3
test
xor
add
sbb
mov
inc
xchg
xor
cmp
dec
outsb
push
cwtl
cmpsb
and
mov
mov
push
lock
add
xor
shl
fcoml
add
mov
sbb
clc
cwtl
cmp
sbb
call
dec
test
daa
dec
add
dec
hlt
push
push
daa
call
mov
scas
bound
js
daa
or
movsl
xor
add
stos
jge
fisubs
inc
or
push
mov
and
mov
cmpb
or
mov
pop
ljmp
loopne
outsb
add
dec
fs
push
mov
add
add
scas
bound
inc
inc
cmpb
jge
nop
faddl
fsts
divb
divl
ficomps
fldenv
add
iret
hlt
inc
push
lods
stos
daa
addb
pop
fimull
mov
lock
push
add
mov
lock
cmpb
push
push
add
hlt
sti
xchg
loope
mov
mov
movsl
push
sbb
pop
xor
jp
add
sahf
dec
lea
pusha
adc
stos
cmp
cwtl
sub
ret
inc
shlb
and
dec
mov
jl
jl
dec
jo
dec
sub
sub
mov
std
cmp
inc
aaa
dec
orb
mov
sahf
or
testb
cmp
sub
clc
fisubrs
popa
shlb
sub
fs
xor
mov
cmp
mov
cli
in
movsb
adcb
mov
pusha
xor
mov
test
xor
sub
gs
push
sub
rolb
int
sbb
loope
jo
lret
sub
xorb
fwait
sbb
inc
jl
imul
int
jno
mov
mov
push
inc
push
and
xchg
mov
out
or
pop
dec
scas
js
push
sbb
out
add
mov
ret
js
adc
repz
add
out
into
and
pusha
stos
and
inc
inc
pop
inc
pushf
jmp
sub
fxam
cltd
ljmp
xchg
pop
add
fs
andb
in
subl
mov
adc
ja
insb
add
cmpl
pusha
xor
sbb
and
add
cwtl
loopne
sbb
add
sahf
jle
inc
pop
out
cli
sbb
fimull
cmc
xchg
pusha
jbe
dec
inc
add
inc
add
jno
jle
add
aam
jo
sbb
xchg
inc
add
and
pop
out
xchg
outsb
call
dec
jnp
fmul
push
push
push
jge
push
mov
test
lahf
inc
mov
cmpsb
xchg
pop
mov
push
xor
pusha
inc
and
jnp
rolb
push
jbe
sbb
lea
xchg
sub
rol
adc
dec
sarb
idivb
push
sbb
add
int3
repz
pop
jne
mov
add
movsl
and
mov
je
xchg
push
add
cmp
mov
xchg
movsb
push
jg
add
dec
loopne
aam
mov
mov
addb
add
lds
std
mov
sbb
xchg
mov
cmp
add
adc
lahf
cmp
xchg
add
xchg
jnp
mov
sti
sub
jbe
add
mov
das
or
shll
add
or
add
adc
stc
add
aaa
inc
loop
notb
add
or
and
clc
rolb
in
rolb
sbb
ds
inc
lods
add
xorb
out
add
inc
test
cmp
pop
jb
clc
pop
add
out
or
mov
cmp
mov
mov
and
mov
mov
stos
loopne
or
fistpll
je
or
fadds
std
add
hlt
aaa
sub
sbb
pop
push
jbe
add
jne
lods
out
js
dec
loop
xlat
or
push
dec
inc
mov
add
xor
ljmp
sbb
gs
test
cmc
mov
out
add
enter
add
jg
add
adc
jo
sbb
out
push
test
cmp
dec
sub
add
push
lret
mov
xchg
mov
mov
sbb
xchg
pusha
cwtl
add
fiaddl
sbb
jne
or
xchg
add
out
fisttps
xor
sbb
daa
adc
jae
scas
jbe
xchg
mov
popa
out
mov
mov
loop
orb
cmpsl
or
inc
int3
jns
add
daa
xorb
movsl
or
xchg
outsl
fwait
push
out
add
sbb
aaa
outsb
dec
jns
and
inc
add
pop
or
subl
sub
cli
outsb
and
mov
imul
mov
and
sbb
movsl
in
push
sarb
outsl
add
dec
gs
jno
add
pop
out
pop
daa
cmpb
inc
fs
jmp
jge
push
jle
push
mov
in
cmp
ja
lret
pop
add
test
imul
add
insb
cmc
clc
int
add
inc
add
je
add
or
mov
add
fidivrs
pop
lock
mov
jae
cmpb
dec
lcall
and
popa
pushf
add
stos
mov
cmp
push
lods
or
movsl
aam
and
pop
dec
mov
add
pop
js
ss
out
rolb
mov
loopne
pusha
xchg
and
into
imul
sbb
popf
fxtract
and
ror
inc
test
ret
inc
repz
inc
outsl
jb
out
mov
add
inc
push
pop
int3
nop
lds
shlb
rcrl
pop
clc
jmp
jne
call
outsb
aas
mov
or
and
rclb
xchg
movsl
adc
bnd
adcb
adc
in
add
out
pop
push
jge
stos
add
jns
or
add
popa
scas
movsb
sbb
xor
rcll
mov
je
mov
test
xor
add
in
jo
mov
jl
add
gs
aad
mov
mov
add
scas
add
mov
xor
sbb
mov
ljmp
and
sbb
rolb
push
sub
es
xor
jg
xorb
pop
dec
push
insb
subb
cwtl
add
pop
loopne
mov
mov
repnz
movsb
mov
add
or
loopne
imul
pop
rolb
out
jp
and
mov
std
xor
push
push
add
pop
out
mov
aam
cmp
mov
loopne
jns
out
add
mov
sbb
add
jle
add
pop
test
add
out
das
out
adc
into
in
and
inc
sub
cld
cld
arpl
int
mov
inc
add
dec
js
lock
pop
cwtl
cld
adc
sahf
xor
adc
leave
iret
jb
xor
push
and
sub
cld
mov
sub
xor
add
pushf
rcr
scas
jg
mov
mov
pop
mov
sbb
je
sub
out
mov
dec
stc
into
cpuid
mov
cli
or
addr16
or
jbe
dec
mov
sbb
lods
addl
js
jecxz
push
or
add
pop
into
clc
xchg
out
mov
lret
repnz
out
adc
test
in
pop
enter
loope
adc
scas
add
fnstenv
lahf
add
adc
sub
jb
add
add
movsb
adc
loope
cmpsl
sbb
or
push
daa
in
sbbb
sub
add
xchg
xor
jmp
add
cmp
js
add
sub
stos
push
xchg
mov
ret
cmp
push
mov
dec
fisttps
mov
mov
add
inc
sub
cmpsl
shlb
push
mov
mov
mov
adc
jo
jae
loopne
repz
jne
outsb
sbb
mov
add
jno
filds
adc
cs
in
add
dec
adc
mov
fcmovnb
sub
or
push
inc
mov
inc
add
and
mov
lods
add
inc
out
jnp
popa
add
xor
aad
stos
lea
xchg
fiadds
pusha
add
jnp
xchg
leave
dec
add
jp
sub
pop
imulb
inc
ljmp
mov
cmp
mov
adcb
icebp
popf
cmpb
pop
rorl
inc
inc
mov
cmp
jns
xor
cmp
in
adc
fs
stc
popf
call
rcll
iret
sbb
mov
push
mov
push
and
cmovns
add
xchg
int3
mov
pusha
insl
negb
sub
or
add
mov
add
ds
cld
ljmp
nop
bnd
add
ficoml
in
js
add
push
cwtl
jge
jl
sub
cwtl
lahf
dec
and
adc
aaa
mov
call
jbe
cld
adc
push
push
add
call
jge
loopne
cmc
std
mov
lea
dec
mov
mov
cli
in
cmpsb
mov
je
add
bound
jle
lock
inc
pop
nop
sub
loop
mov
addr16
aas
mov
sub
pop
sub
cmovs
and
and
out
lahf
pop
fadd
or
lret
jp
pop
pusha
add
push
dec
sub
dec
jns
imull
adc
stos
xchg
cmp
stos
rolb
push
push
push
bound
sbb
mov
add
inc
idivl
pop
pop
add
imul
jecxz
mov
or
scas
out
pop
cmp
mov
pop
fildll
push
xchg
pusha
test
pop
cmovg
out
cmc
flds
and
andb
lahf
cmp
mov
je
sub
or
dec
insl
add
pop
aas
enter
inc
inc
ret
push
cli
add
jne
mov
sbb
enter
jae
ja
adc
cld
push
add
cltd
jo
mov
sahf
lods
add
or
cmp
ja
rcll
fwait
mov
xor
fistpll
add
inc
adc
add
add
popa
das
roll
ud0
insb
cmp
cld
adc
into
push
rcll
cld
out
add
aam
push
add
loopne
add
add
mov
test
mov
adcb
mov
add
mov
xor
xchg
std
mov
frndint
pop
add
mov
sbb
adc
mov
cmp
lcall
mov
add
dec
push
stc
xor
dec
xchg
lds
idivb
je
orb
fmuls
push
lret
mov
mov
mov
test
enter
fwait
mov
or
add
xchg
and
add
sub
add
lock
fcmovu
imul
add
push
jle
roll
sbb
inc
lahf
or
mov
pop
and
add
dec
jg
add
pop
sub
jp
out
pushl
mov
les
mov
fists
ja
and
sbb
jmp
shr
sbb
imul
nop
test
adc
sbb
out
leave
add
lods
call
jno
loope
sbb
sub
sahf
add
and
out
and
add
loopne
cmp
outsb
dec
pop
cmp
inc
push
dec
test
add
cwtl
fstp
jno
outsb
and
add
dec
mov
js
pusha
push
add
inc
shll
push
xchg
xchg
enter
xor
das
jp
fwait
pop
loop
mov
repz
push
data16
leave
es
add
adc
jae
scas
add
adc
push
adc
add
xchg
test
in
test
mov
jnp
cltd
rolb
cmc
imul
cmp
pop
fstps
fcoms
out
stc
adc
daa
pop
jl
mov
add
adc
pop
xchg
loop
adc
lret
lods
inc
loope
push
dec
outsb
arpl
dec
jno
aas
test
sbb
sbb
jecxz
arpl
popa
das
shlb
call
mov
inc
in
daa
sbb
mov
stc
add
add
mov
inc
fdiv
cwtl
je
or
lret
addr16
adc
or
mov
mov
or
add
ja
leave
ret
inc
in
add
outsl
stos
repnz
mov
pop
mov
aas
mov
jl
xchg
push
and
cmp
sub
ds
ds
arpl
icebp
mov
loop
shll
add
sbb
push
or
cmp
xor
or
mov
outsb
scas
lods
sahf
and
push
rolb
mov
pushf
fdivrp
in
add
xor
mov
ds
jg
jns
js
cmp
push
push
fldenv
xor
pusha
and
mov
es
xchg
mov
add
cmp
dec
inc
bound
fcmovne
lock
lahf
std
les
daa
push
imul
push
hlt
mov
add
inc
rcrb
add
sbb
lods
push
jns
ret
sub
sarl
repnz
adc
loopne
add
fwait
movsl
in
sbb
pusha
xor
lock
nop
dec
push
add
cmp
aaa
and
fsts
cmc
mov
or
dec
int3
icebp
lods
push
jp
add
aad
jge
xchg
lret
add
sbb
pop
lds
addl
sbb
addr16
cmp
pand
pop
sub
fsts
push
hlt
dec
mov
sub
ret
ja
adc
lds
mov
add
test
sbb
sahf
idivl
out
lds
jecxz
add
mov
push
add
push
mov
and
or
and
pop
add
xor
pop
inc
jl
add
and
mov
pop
adc
jno
aad
mov
jb
adc
dec
sub
sbb
adc
add
mov
push
ss
mov
dec
enter
xchg
add
pop
icebp
adc
inc
add
or
add
dec
xor
push
pop
pop
xlat
lahf
testb
inc
or
push
push
pop
sub
shr
sub
xchg
jne
add
aad
add
mov
iret
int3
stos
add
pop
call
jmp
jp
outsb
pop
lods
jecxz
into
add
cmp
cwtl
mov
cmp
shll
lret
xor
sub
or
out
adc
add
fisttpll
nop
icebp
add
add
je
mov
jno
pop
cwtl
inc
incl
ljmp
push
loope
sbb
mov
iret
popl
lahf
add
mov
adc
sbb
iret
subb
add
adcl
repnz
test
iret
adc
sub
mov
adc
and
fsubs
iret
cmp
repz
mov
xchg
add
pop
or
or
movsl
add
and
pusha
jae
sub
mov
add
or
lret
in
xchg
call
jmp
sbb
out
cli
pop
jae,pn
arpl
push
push
call
fildl
cmp
xchg
dec
or
inc
cmp
lcall
pushf
jmp
lds
add
jns
decl
stos
data16
mov
loopne
loop
hlt
add
mov
gs
fnstenv
cmp
sub
cltd
pusha
sbb
outsb
push
loopne
outsl
ret
add
pop
add
out
and
es
icebp
push
dec
gs
add
pop
sbb
or
loope
ret
xchg
or
add
pop
sbb
enter
sahf
pop
inc
cld
adc
xor
add
sub
or
jge
cli
inc
push
add
aam
cmp
repz
xchg
add
lcall
pop
xchg
rclb
jns
xor
mov
pop
out
hlt
push
push
cmpsb
test
test
imul
loop
add
xchg
pushf
mov
jo
repz
pop
es
pop
jg
lcall
test
mov
cmp
movsb
push
int
sub
lret
mov
xor
negl
mov
jmp
xor
lds
push
in
jg
test
testb
cli
mov
rcr
jns
repnz
sti
add
mov
or
jl
add
sub
lret
jmp
add
cltd
pop
sub
add
jge
leave
sahf
mov
data16
rolb
push
imul
sbb
pop
ret
arpl
add
pop
jbe
fstl
lds
push
sbb
enter
and
movsl
pop
scas
sarl
adc
push
jmp
add
mov
adc
shrb
ja
into
xchg
mov
aaa
dec
xchg
jmp
mov
leave
add
and
daa
adc
mov
int3
shlb
dec
mov
pop
add
ljmp
sbb
cmp
xor
mov
lods
cmc
sbb
push
mov
fadds
cltd
popf
fisttpl
xor
gs
mov
out
ret
loope
test
lods
in
mov
xor
jg
sub
sarb
cwtl
inc
lret
mov
xor
and
cmp
lahf
mov
adcb
cmpsl
xchg
pop
jbe
or
ficoml
pop
mov
movsb
dec
cmp
mov
stos
je
nop
cwtl
in
add
mov
incl
in
outsb
mov
ds
fmuls
jbe
xor
fwait
mov
adc
xchg
into
cmpb
ljmp
xor
sarb
sbb
adc
lea
cltd
ds
add
add
and
push
add
cmpsb
jecxz
popf
jno
dec
daa
das
shll
lcall
dec
add
aam
jbe
or
ror
add
vmwrite
dec
pop
xchg
or
out
shlb
imul
jnp
xor
jl
add
std
xchg
ja
or
orb
add
xchg
mov
add
enter
push
dec
sub
sarb
sub
test
add
in
dec
add
sub
jl
test
xor
int
jl
add
cmc
testb
pop
sub
sar
gs
int
inc
cmp
das
push
pop
add
xor
or
add
cmc
call
mov
adc
jmp
sub
push
and
push
cld
into
aam
push
add
movsl
xchg
sbb
pop
mov
xchg
outsl
or
roll
dec
fsubs
sbb
fistps
push
add
test
jne
sarb
or
inc
cmp
lret
push
adc
and
jl
aas
mov
add
mov
xor
fisttps
pop
sbb
mov
sbb
jnp
cmp
das
add
lret
into
je
adc
pop
rcrb
mov
inc
fstpl
dec
cwtl
hlt
sbb
imul
aam
ds
pop
pop
shl
xchg
inc
int3
xchg
je
int
mov
adc
sbb
sbb
dec
ljmp
adc
fsubrl
mov
ret
cli
mov
add
repz
add
jg
add
push
jmp
dec
sahf
or
add
daa
push
push
pop
in
inc
add
popf
xor
int3
add
test
push
add
cmp
rorb
push
add
addr16
mov
dec
pusha
pop
pop
nop
test
aas
icebp
sbb
and
inc
and
add
loope
aaa
add
lret
outsl
xor
pop
add
bound
cmp
mov
fcmovbe
mov
loope
mov
movsb
hlt
jge
add
pusha
loopne
dec
lahf
adc
stos
or
xchg
jae
jnp
mov
mov
adc
dec
cwtl
adc
xor
lods
push
sub
and
push
mov
inc
cmp
xchg
sahf
add
push
mov
cmpb
std
sbb
mov
inc
mov
sub
add
lods
shll
add
fnstcw
jae
repz
sahf
dec
jb
leave
andb
xchg
cmp
dec
xchg
lods
or
and
cmc
adc
mov
mov
push
dec
icebp
test
ret
aaa
inc
add
push
das
add
pusha
inc
outsb
les
pushf
dec
mov
xchg
pop
push
cmpsb
cli
ljmp
sbb
stc
into
rol
push
jmp
xchg
pop
pop
arpl
adc
cmpsl
push
add
shlb
repz
sbb
shlb
push
jo
add
push
xor
stos
push
sbb
add
mov
xchg
adcl
jp
std
mov
add
xor
mov
xchg
test
jg
dec
inc
cmp
cmp
add
mov
in
adc
fidivrs
cmpsl
pop
mov
int3
inc
push
clc
add
cmp
nop
pop
mov
add
mov
scas
cmp
std
insb
and
mov
xchg
aam
pop
sub
mov
push
rolb
je
push
xchg
arpl
dec
xor
addl
xchg
mov
rorb
aad
and
mov
into
add
lock
push
sub
jo
and
dec
cwtl
pop
pop
les
jb
aad
push
jae
add
adc
cmpb
add
inc
fsubr
push
jnp
cs
add
or
repz
dec
add
popf
in
pop
loopne
movsl
call
mov
test
sahf
inc
pop
fcmovnb
das
cmpsl
jp
lret
nop
push
or
repnz
sub
stos
mov
jns
fadds
xchg
push
ret
and
loope
call
cmp
jp
mov
int3
gs
out
paddd
stos
add
aam
push
fcoms
sbb
popl
stos
xchg
mov
shrb
js
insl
add
dec
dec
mov
mov
mov
pusha
inc
push
adc
push
mov
stc
cmp
add
push
mov
add
shll
pop
push
xchg
xchg
jo
add
xchg
je
scas
inc
lods
test
inc
adc
xchg
sbb
aaa
gs
mov
dec
bound
sbbb
add
mov
mov
adc
cmp
add
dec
jp
mov
or
inc
addps
dec
inc
xor
jl
add
stc
push
pop
fistl
insb
push
filds
arpl
in
ss
add
cld
imul
add
pop
iret
out
push
add
inc
cltd
push
das
mov
add
jle
mov
insb
leave
push
adc
add
push
xor
lods
and
mov
xlat
add
into
cli
push
push
arpl
incb
xor
xchg
add
xor
push
adc
mov
lods
sahf
xor
ud1
outsl
push
pusha
ljmp
dec
lods
cmp
add
sub
and
rorb
or
sbb
sub
mov
sti
out
addr16
xchg
aas
addb
push
add
sbb
xor
lcall
push
fsubrl
jne
push
mov
aad
inc
cmpxchg
xchg
inc
mov
pop
xlat
xchg
mov
inc
ljmp
in
add
lock
popf
cs
add
lds
dec
dec
xchg
or
andl
cmpsl
push
add
aad
and
pop
enter
adcl
xchg
nop
hlt
shlb
lgs
xchg
cmpsb
inc
nop
in
mov
push
pop
testl
arpl
sub
mov
fdivrs
sub
adc
out
sbb
jl
lahf
test
lret
add
push
xorl
xor
mov
inc
push
push
in
addr16
insl
jg
push
mov
sub
cmp
or
xlat
ja
sub
push
jle
mov
or
lods
mov
loope
jge
sahf
cmp
insl
jae
add
push
or
push
sbb
pop
add
sarl
js
inc
xchg
ror
lds
or
push
in
add
mov
inc
add
insl
dec
mov
into
xchg
cmp
sub
or
cmp
or
jecxz
xor
aad
push
mov
xchg
cmp
test
lock
mov
dec
fs
pop
add
gs
inc
mov
out
or
cmp
fimuls
xor
add
rclb
cmp
pop
cwtl
jo
jg
repnz
sub
cld
into
add
int
and
cltd
rorb
mov
xlat
sub
faddl
xorb
int3
stos
push
dec
cmp
or
or
fs
cli
inc
add
cmp
adc
icebp
pop
ja
loopne
pop
nop
cmp
aaa
mov
pop
xchg
lahf
add
daa
into
or
or
shl
out
or
test
xchg
scas
xchg
inc
insb
inc
fwait
add
std
fdivs
stc
aam
inc
or
stc
enter
dec
cmp
inc
in
icebp
cmp
dec
add
jmp
xor
push
sbb
shll
leave
pop
cmc
push
inc
scas
adcb
ja
sub
imul
pop
popa
mov
add
mov
xchg
push
sbb
push
lods
pop
arpl
inc
push
test
inc
test
fdivrs
sub
add
std
aad
inc
sub
mov
arpl
pop
sub
add
pusha
mov
sbb
xor
sub
imul
fidivrs
lds
sub
inc
add
sub
mov
rep
into
add
xor
dec
or
pop
pop
and
sbbb
mov
in
add
mov
addl
adcb
stos
adc
pop
add
mov
daa
add
sarb
lahf
add
cmp
add
test
mov
mov
int
bound
in
inc
add
or
cmp
mov
ds
dec
fiadds
test
cmp
xor
cmp
push
or
sbb
jl
fscale
add
pop
bswap
movsb
cltd
sub
cmp
add
loopne
push
sbb
or
dec
ud0
adc
push
icebp
xchg
pop
jno
cmp
push
cmp
push
ret
insl
fimuls
jl
add
cmp
mov
inc
call
add
movsl
cmpsb
scas
add
div
dec
add
jno
jnp
mov
mov
sti
add
xor
jno
shr
add
pop
mov
lds
add
xchg
insb
mov
sahf
or
dec
imul
rcl
jbe
adc
stos
dec
popf
lock
sbb
sbb
mov
testl
mov
aad
xor
jne
scas
adcl
into
fwait
dec
addl
mov
add
or
mov
adcb
jne
leave
sbb
xor
mov
dec
popf
iret
int
sub
sub
flds
rolb
or
jmp
add
xor
mov
xchg
mov
sub
ljmp
mov
int
adc
and
out
lea
xor
dec
mov
bnd
sbb
mov
mov
dec
mov
adcb
pushf
xor
sub
imul
xchg
scas
jns
pmovmskb
mov
add
in
mov
mov
lods
sbb
fsubl
xchg
pop
or
add
shll
dec
adc
cmp
jg
mov
jne
xor
lret
push
sub
push
pop
dec
adc
push
jecxz
adc
add
pop
sbb
push
repz
xchg
into
push
push
pop
xor
les
push
and
gs
inc
add
inc
int3
xchg
roll
aad
mov
add
dec
cli
int3
inc
mov
dec
pop
inc
std
hlt
jnp
cmp
mov
and
aas
push
and
popa
or
outsl
mov
xchg
push
aad
jl
sbb
cli
add
lods
in
in
jmp
or
shll
add
fisubrs
add
imul
loop
cli
repz
cs
in
xchg
ret
push
cmp
or
mov
sahf
dec
and
add
or
push
lea
xor
cltd
rclb
cld
sub
inc
add
fneni(8087
add
jns
mov
xchg
iret
movsb
xlat
add
out
nop
xor
add
jl
cld
test
inc
cmpsl
in
xchg
clc
ljmp
cmovo
adc
cmpsl
icebp
mov
adc
cmp
sub
daa
push
out
fsubrl
dec
add
add
jmp
sahf
mov
mov
push
dec
pop
push
jb
jle
mov
insb
mov
adc
jecxz
push
jne
add
jmp
mov
add
mov
pop
xchg
add
push
outsl
and
fildl
into
lahf
lods
sbb
test
dec
cltd
add
leave
cli
xchg
adc
push
aaa
add
mov
movsl
pop
adc
into
dec
add
hlt
push
add
xor
adc
cwtl
dec
xor
jle
sub
out
add
xor
dec
adc
add
subl
enter
imul
xchg
xchg
sbb
or
or
jo
add
adc
daa
fs
or
jo
add
and
and
mov
lods
jne
add
inc
mov
push
push
xchg
cld
shlb
dec
lods
add
dec
sub
in
adc
pop
sub
aaa
cmp
cmc
or
inc
mov
xchg
in
xchg
mov
fucomp
test
add
pop
mov
push
pop
push
sbb
js
xchg
adc
mov
arpl
shlb
mov
add
les
movsb
daa
xchg
xor
imul
incl
aad
lods
mov
cmpb
push
xor
xor
add
int
push
loop
mov
mov
push
dec
jle
add
fwait
insl
add
rcll
mov
sub
lret
enter
add
xor
mov
lret
mov
cmp
sub
inc
jb
or
push
iret
adc
push
pop
int3
xchg
or
enter
xor
inc
in
mov
mov
xchg
mov
call
lods
icebp
push
xchg
xor
mov
cmp
inc
xor
xor
mov
or
xchg
or
jo
sub
lar
mov
lret
inc
loopne
xchg
add
in
fists
sub
repz
cmp
add
jae
andl
cltd
cmc
pusha
xor
dec
ret
or
inc
sbb
clc
js
jae
into
hlt
mov
cli
and
jle
adc
sub
fsub
out
scas
jae
rolb
and
sub
sahf
xchg
push
loopne
fstl
add
iret
clc
xlat
imul
shll
cltd
xor
lret
test
data16
cwtl
push
jb
add
out
push
push
jae
pusha
sbb
fstpl
in
add
test
add
cmpsl
inc
out
cmpsb
shrb
sbb
loope
xchg
insb
sbb
add
lds
mov
int
fsubl
jne
cmp
fcmovu
xchg
outsl
add
lods
or
loopne
ja
divb
and
mov
jge
inc
cmp
icebp
or
add
arpl
sbb
inc
add
jb
mov
pushf
in
mov
test
inc
out
sub
sar
mov
jmp
lcall
and
xchg
push
out
or
in
xor
aaa
test
cli
mov
pusha
pop
enter
cmp
add
ds
repz
movsb
repnz
and
push
push
xlat
mov
and
pop
sub
dec
mov
add
jo
shr
xor
cmp
sub
sbb
jle
mov
pop
or
ret
dec
mov
out
lock
in
push
or
xor
leave
push
sub
cmpb
inc
ret
and
and
adc
loop
fistl
mov
hlt
or
push
xchg
push
les
js
popa
mov
push
cmp
push
mov
add
aaa
xchg
pop
mov
adcl
cmpsb
dec
pop
add
arpl
mov
shr
jne
test
add
pop
adc
jg
mov
mov
add
es
cmc
stos
outsb
aaa
cwtl
add
stc
mov
rclb
inc
fmulp
mov
cmc
sub
test
mov
in
push
add
mov
cs
insb
or
mov
mov
inc
ja
add
mov
mov
cmp
sbb
jmp
mov
add
or
shrb
mov
add
sarb
arpl
rclb
add
lods
hlt
xlat
adc
js
test
loope
add
sbb
dec
mov
xchg
add
jns
add
mov
or
dec
dec
xchg
clc
sbb
mov
in
lock
into
add
jae
repz
add
rorl
mov
add
add
inc
mov
sub
pop
mov
nop
fmul
fsubrl
mov
xchg
jp
xchg
out
pop
and
not
add
lret
push
sub
mov
enter
lods
mov
scas
xchg
inc
int
mov
jnp
xchg
ljmp
xor
les
data16
pushl
test
pop
or
mov
in
jae
jecxz
add
mov
in
xchg
and
int3
mov
dec
jmp
rcpps
lock
add
mov
sub
and
ret
stos
mov
pushf
ret
subb
xchg
xchg
push
cli
iret
or
mov
fwait
jno
xor
lcall
mov
outsb
add
loope
sbb
xor
cmp
add
push
mov
xor
xchg
pop
xchg
push
negl
jecxz
aad
test
aam
mov
cmp
cmp
out
lret
xchg
inc
push
push
mov
mov
and
xor
popf
popa
and
and
cld
or
hlt
fstpt
cmp
adc
jne
and
shr
ficomps
loopne
js
dec
popa
cmp
cmpsb
stc
push
inc
sbb
pop
mov
add
xor
or
add
dec
or
cmpsb
sub
pop
mov
jle
pop
lret
dec
loopne
add
in
sbb
or
les
ret
icebp
add
sbb
push
xor
or
add
mov
jg
add
negl
push
sarb
mov
mov
mov
lea
cmc
add
pop
cli
cmp
pop
add
les
shlb
mov
adc
aam
imul
jg
add
divl
jns
inc
and
sbb
add
mov
sti
mov
sbb
sbb
mov
inc
loope
inc
dec
and
pop
lock
push
call
cmp
cld
jmp
push
mov
xchg
movsb
loope
pop
les
or
scas
mov
adc
add
sbb
mov
in
leave
add
xchg
dec
je
sbb
push
cmpb
daa
adc
add
cmp
xor
test
pop
sbb
ret
add
push
or
mov
sbb
adc
dec
adcb
add
loope
dec
sub
imul
push
inc
or
mov
xchg
cmpsb
add
adc
faddl
rorl
lahf
mov
adc
enter
lea
adc
std
clc
les
xchg
xchg
sets
push
add
and
sbb
fimuls
pop
push
in
and
xor
xor
xor
test
subb
xchg
jnp
cmpsb
aad
call
xchg
scas
xorl
push
lods
adc
sub
pop
sbb
cmp
imull
xchg
push
ja
out
fimull
xchg
cmp
cmp
sub
lret
pop
mov
cwtl
out
mov
sub
jge
xchg
pop
dec
sbb
jo
adc
push
mov
sahf
icebp
mov
fdivr
sub
outsb
mov
jae
xorb
into
xchg
mov
add
out
sti
lods
add
mov
jl
pmaxsw
or
inc
lock
sbb
lea
roll
jge
or
lods
adc
inc
dec
xor
loopne
mov
add
sbb
je
add
cmpl
pop
mov
or
fdivl
jo
shlb
mov
test
jnp
push
xchg
das
lock
inc
and
cwtl
push
jb
leave
out
and
test
or
int3
fs
mov
and
scas
aas
xchg
push
rcr
cmpb
dec
cs
pop
loopne
mov
into
mov
in
bswap
pop
add
add
sti
mov
lret
xor
mull
punpcklbw
push
pop
dec
mov
aas
loopne
aam
lret
push
cwtl
mov
pushf
sub
je
add
mov
stos
pop
jge
rcrb
data16
ds
aaa
push
cmp
outsl
adc
ja
mov
scas
sti
inc
mov
xchg
inc
xor
fcompl
xchg
dec
add
sub
mov
outsb
rcr
in
sub
xchg
fisttpl
dec
add
repz
add
adc
enter
mov
cmpsl
ret
ficoml
cld
mov
inc
add
pop
repnz
int
dec
subb
ds
sbb
andb
add
pop
inc
test
ficompl
js
jns
sub
xchg
add
filds
mov
or
ss
adcb
lods
add
les
cmp
pop
dec
fs
mov
pop
xchg
ret
cs
xor
cmp
idivb
add
jae
stos
mov
addr16
adc
sahf
add
pop
pop
mov
test
ljmp
aas
xor
out
and
add
ror
ss
mov
xlat
sbbl
fadd
test
ss
stos
enter
cmp
test
cmpsb
push
pop
mov
push
xor
mov
jae
mov
loope
cmpsl
mov
sbb
xor
sbb
sub
add
movsb
push
sub
add
sub
sbb
aad
jl
popa
and
sbb
adc
test
push
sbbb
dec
inc
xchg
sbb
push
into
jl
push
push
call
int3
xchg
jmp
or
daa
andb
jmp
sbb
dec
sbb
in
sbb
mov
push
test
push
addr16
daa
sub
or
sbb
into
xchg
cmc
call
ja
aad
mov
pushf
ds
aam
das
imul
add
sarb
jno
dec
outsb
pop
and
mov
xchg
mov
scas
jb
in
push
push
imul
dec
push
add
mov
cmp
scas
xor
jge
add
out
mov
and
movsl
adc
aas
ljmp
jge
sti
cmc
cwtl
subl
jno
pop
and
cmpb
or
dec
mov
dec
lods
pop
sub
pusha
sbb
dec
push
pop
adc
add
frstor
push
data16
and
xor
jecxz
jle
mov
imul
push
mov
call
pop
leave
jmp
ret
lcall
loope
add
mov
imul
or
roll
mov
fistpl
pushf
add
push
sarb
jp
push
push
jg
stos
and
faddl
mov
cmp
loope
out
dec
sbb
add
cltd
sub
add
mov
or
sarl
inc
cmp
mov
add
jne
xchg
mov
add
sub
fwait
pushf
inc
loopne
lea
sub
mov
xchg
or
jg
mov
mov
mov
fwait
das
loop
sbb
xchg
xor
out
push
sbb
je
ret
sub
cmp
sbb
jne
adc
inc
movsl
add
icebp
fwait
pop
and
add
and
and
adc
fwait
out
or
or
in
imul
lods
jecxz
pop
fisttps
sbbl
adc
jp
xchg
das
xor
mov
sbb
popf
cmp
subb
repz
hlt
pop
cmpl
scas
add
iret
sbb
pop
int3
xor
inc
adc
ffreep
push
out
push
and
jae
add
jecxz
add
mov
jno
or
or
movsb
in
jl
std
push
add
xor
xor
rcrb
adc
mov
mov
add
sarb
inc
pop
cmpl
mov
push
mull
ret
push
ret
aad
inc
ret
ret
adc
pop
in
rol
into
sub
inc
and
sub
sti
scas
adc
loop
in
mov
fsubrl
fwait
jo
add
jge
scas
cmp
and
mov
inc
mov
iret
dec
call
or
aas
mov
sbb
xchg
sbb
and
adc
hlt
push
inc
adc
add
inc
mov
lahf
push
and
xorb
ret
xor
adc
pop
fcom
and
repnz
mov
add
inc
jp
inc
xchg
outsl
out
shll
ds
mov
pop
loopne
xchg
or
jmp
mov
sub
or
in
and
cltd
les
or
sti
mov
syscall
fldcw
testl
mov
popl
sbb
xchg
rorb
mov
xor
mov
cmp
push
je
and
cmpl
add
loopne
xchg
add
inc
andl
mov
push
fsubl
jl
cmp
fxch
adc
push
mov
xchg
es
or
dec
pop
data16
jle
adc
jmp
je
xchg
int
cmp
ret
xchg
push
mov
je
mov
notl
out
xchg
pop
ja
jge
inc
mov
out
and
push
inc
push
mov
idiv
adc
mov
pop
cmp
out
sbbl
rcr
adc
mov
cwtl
psubq
xchg
les
cwtl
and
and
xchg
xchg
dec
fucomip
pop
adc
out
loop
push
sti
ds
push
pusha
add
shl
dec
pop
and
mov
xchg
inc
out
data16
cmp
ds
ds
iret
test
js
xchg
inc
mov
cmp
sbb
shlb
dec
fisttpll
ror
inc
loopne
cmp
lock
and
icebp
xor
test
add
aas
aam
jbe
jl
scas
inc
rolb
leave
or
jae
dec
repnz
lret
loopne
cmp
repnz
inc
inc
xorl
pop
or
adc
test
std
out
test
inc
xchg
and
sub
xchg
push
inc
add
addb
and
repnz
add
inc
lods
fcmovnb
mov
or
add
ja
or
adc
rdpmc
ss
push
jae
mov
hlt
cmp
sbb
pop
add
dec
lods
addl
out
lret
js
add
stos
jge
bound
jg
cmp
scas
and
out
mov
jmp
pop
sbb
pop
mov
lock
movsl
shll
mov
aad
testb
addb
cwtl
outsb
sub
or
mov
jae
jp
insl
add
lds
lock
into
xchg
scas
ja
in
push
aam
mov
stos
pusha
fcompl
sub
add
cmp
sub
sub
pop
sbb
mov
xor
cwtl
stc
mov
rcrb
iret
add
push
out
movb
add
loopne
push
mov
inc
movsl
dec
dec
xchg
pop
or
sub
mov
loopne
lret
inc
xchg
mov
das
scas
pop
sbb
add
out
jnp
dec
cmpsb
shl
jae
add
push
in
in
add
adc
jecxz
add
pcmpgtb
pushf
ret
shrb
ljmp
add
mov
ss
cld
jmp
inc
test
pusha
in
mov
sbb
loopne
sbb
stos
or
ljmp
add
mov
orb
or
xlat
xchg
test
push
xor
adc
add
sbbl
jnp
pop
fsubrl
add
popf
repz
and
add
mov
sub
out
cmp
test
dec
js
pusha
cmp
xchg
xlat
and
nop
add
xchg
mov
iret
xchg
cmc
scas
repz
fildl
adc
dec
js
push
cld
imul
jae
sub
adc
add
or
out
mov
aaa
push
mov
ss
and
cli
addb
jp
xor
or
adcb
sub
fisubrs
cs
xor
xchg
aaa
decb
sub
pushf
lods
or
loope
subl
sbb
or
lods
adc
popa
mov
mov
or
mov
pushf
xchg
jbe
out
rep
mov
jae
adc
adc
sub
adc
js
loopne
pop
inc
data16
mov
mull
leave
adc
push
sub
jo
add
js
pop
xchg
push
mov
push
inc
shrl
clc
push
lock
lds
jl
cwtl
repz
sub
test
mov
imul
in
push
testb
mov
adc
addr16
push
leave
xchg
add
xor
or
pop
js
add
and
addr16
js
adc
out
lock
jmp
add
insb
inc
cmpb
inc
or
fcomip
loop
adc
mov
pop
andl
xchg
and
jnp
test
pop
push
arpl
and
movsb
fldt
sbb
int
lock
and
and
ss
enter
pop
xchg
add
jl
dec
xchg
sbb
nop
push
loopne
cwtl
pop
sbb
sub
popa
dec
inc
pop
add
mov
sarb
lret
add
xchg
mov
mov
cmp
loope
fs
or
add
jl
xor
clc
inc
enter
inc
lock
pusha
int3
dec
xor
iret
aaa
cmp
mov
mov
rcrl
or
sti
pop
and
ss
stc
sbb
test
or
and
dec
mov
mov
popa
cmc
subb
dec
fs
movsb
and
dec
push
mov
add
clc
jge
sub
int3
inc
add
cmpsl
inc
movsb
or
mov
jne
call
lods
rcrl
jmp
mov
test
add
nop
cmp
jns
pop
xchg
sbb
ljmp
orb
call
pop
iret
add
mov
cs
in
mov
aaa
cmp
and
push
mov
loopne
insb
ror
sbb
repnz
addr16
scas
mov
imul
cltd
inc
daa
test
push
or
js
add
cmp
add
jns
sbb
mov
pop
aam
dec
and
push
inc
lcall
pop
jbe
mov
push
bound
pusha
jne
cmpsl
out
lods
dec
add
cs
aaa
shrl
fbstp
add
pusha
sbb
pushf
test
xor
and
mov
stos
mov
xor
mov
test
dec
xor
inc
cmp
add
mov
xorl
aaa
and
pop
sub
mov
insl
dec
pop
hlt
sbb
adc
test
imul
stos
hlt
mov
clc
pop
bound
sub
cwtl
push
sbb
cmpsb
dec
dec
mov
xchg
sbb
xchg
fisubrs
test
sbb
xor
and
xor
mov
inc
add
cmpsl
cmp
sbb
shrb
movsb
inc
jecxz
sub
xor
pushf
loope
mov
or
scas
test
xor
xchg
iret
insb
les
std
fsubrl
xchg
push
je
mov
sbb
and
dec
dec
insl
and
sbb
cmp
or
movsb
adc
int
add
inc
dec
cld
movsl
inc
and
xor
shlb
sub
nop
adc
imul
dec
and
mov
jg
and
js
enter
add
fiadds
mov
sub
fidivl
mov
leave
insb
adc
mov
xchg
jns
xchg
add
mov
sbb
jo
in
insl
movsl
sti
testb
bound
ja
jns
sbb
lods
add
pushf
rcll
add
js
or
stos
pop
mov
test
add
xchg
xor
inc
adc
pusha
test
std
les
stos
or
aas
add
out
xchg
call
cmp
pop
loopne
cmovbe
mov
sub
lahf
lcall
add
movsl
pushf
fbld
adcl
icebp
test
inc
add
dec
fisttpl
sub
adc
aas
inc
jmp
clc
shll
sbb
pop
jmp
rcrb
push
jmp
xor
inc
sub
mov
add
pop
mov
clc
std
mov
hlt
stos
push
pop
arpl
test
sbb
fcoms
xchg
xlat
movsb
adc
cmc
jb
andb
push
sbb
out
xchg
loopne
pop
subb
cmpsb
push
cltd
dec
pop
ja
add
adc
sahf
movb
in
int
pop
mov
lea
loopne
sub
addl
pushf
xor
inc
movsb
aad
out
pop
loope
dec
movsb
test
js
cmpsb
pop
test
xchg
xor
push
push
mov
pusha
push
xor
xor
fsubrs
and
add
mov
mov
stc
and
into
push
repnz
push
jb
cmp
rcrl
add
and
icebp
inc
or
xchg
adc
inc
lock
stos
movsb
lods
add
pop
sub
fcomps
cmc
jle
push
in
call
adc
dec
push
adc
add
dec
xor
inc
sub
test
add
out
xchg
mov
push
inc
lods
push
loopne
mov
jl
xor
aad
add
mov
jno
test
jp
and
jg
jle
mov
dec
inc
push
gs
and
hlt
or
sbb
pusha
sub
mov
or
add
push
scas
mov
dec
test
js
pop
es
filds
pop
jno
loop
pop
mov
lods
mov
mov
add
inc
test
mov
inc
sbb
pop
sbb
xlat
sub
mov
sbb
repnz
adc
fldenv
cmp
sbb
call
test
sbb
dec
add
adc
addb
loop
add
out
int
shrb
test
sti
push
add
mov
add
sbb
popa
out
out
pop
ljmp
xchg
test
les
ret
add
jo
data16
xchg
dec
dec
pusha
inc
ucomiss
orl
xchg
sub
pop
add
fldl
je
loopne
sub
xor
sbb
xchg
sbb
push
stos
call
cmpsl
cmc
pop
pop
sbb
dec
adc
push
test
popf
loope
and
add
dec
loopne
xlat
test
dec
sub
lret
cmpsb
leave
sub
adc
xor
enter
add
or
lock
stos
mov
aad
sub
test
iret
divl
jmp
jns
push
pusha
fimuls
bound
add
jmp
sbb
insl
mov
lret
or
jmp
into
les
fcmovnb
fldcw
mov
fistps
add
fsubs
cmp
mov
popa
xchg
out
jo
lock
cmp
xchg
test
imul
adc
push
add
movsl
movsb
test
cmpsl
lds
ret
fists
mov
fistl
fsubl
sbb
inc
adc
scas
push
pushf
fisttpl
cmpb
push
stos
sub
add
push
repz
pop
cmpsl
sbb
add
out
lret
adc
dec
ja
mov
jecxz
jmp
adc
mov
mov
or
rorb
mov
popa
sbb
cwtl
push
sub
cmp
or
insb
xchg
into
orl
xchg
and
push
pusha
jg
imul
data16
sbb
sbb
adc
dec
sub
shlb
orb
sbb
mov
shlb
and
hlt
jl
sub
push
mov
sub
xchg
or
pushf
inc
adc
and
test
sti
pop
and
fbstp
mov
sbb
dec
ljmp
idivb
sub
aaa
insb
mov
mov
and
cmp
mov
pushf
mov
and
or
adc
lea
test
add
adc
jo
xlat
lock
push
xorb
cwtl
mov
adc
xor
rcll
iret
cltd
adc
or
mov
std
add
push
mov
or
sbb
iret
mov
loop
scas
or
loopne
mov
in
push
push
subl
inc
xor
push
mov
cmc
push
in
cs
sub
dec
or
andb
aam
pop
xor
roll
fldl
in
pusha
push
dec
sub
adc
cs
int3
and
sub
adc
dec
add
adc
fistpll
add
push
dec
loop
mov
sub
xchg
xchg
cltd
sti
xchg
es
mov
mov
mov
pop
and
add
adc
and
fs
test
sbb
xor
add
add
pop
hlt
addb
add
push
popf
push
add
sbbb
or
push
ffreep
sbb
add
xchg
adc
inc
subb
leave
sbb
mov
adc
loop
add
cmc
aas
sbb
addr16
lret
in
mov
cmp
adc
or
dec
xorb
nop
mov
pop
or
test
and
movsb
sbb
and
add
and
push
sbb
inc
pop
xchg
fwait
sbb
cli
xchg
adc
int
jg
add
xchg
xchg
shll
pop
jmp
adc
mov
dec
inc
ds
jmp
and
in
add
xchg
add
fnstsw
inc
add
test
pop
mov
and
lock
ljmp
addb
nop
test
push
fs
add
jl
int3
dec
jge
lock
std
push
or
cmp
into
push
push
or
js
push
movsb
js
shrb
lock
decb
ret
sbbb
adc
add
xchg
lock
or
mov
into
rclb
jge
add
xor
stos
adc
outsb
fimuls
push
push
adc
cltd
loopne
or
aaa
out
cmp
xor
sbb
dec
aas
or
cs
adc
cs
mov
xchg
sub
mov
lock
out
cmp
stos
add
pusha
mov
iret
mov
or
stos
or
jmp
cmp
subl
adc
mov
or
sbb
aam
into
add
cmp
iret
sbb
rcll
mov
cmpsl
sub
or
mov
sbb
sub
sbb
imulb
mov
pop
xor
nop
jle
dec
adc
popa
push
mov
cwtl
clc
dec
push
cmpb
dec
add
fbld
mov
and
cmp
sarb
mov
xchg
xchg
adc
pop
mov
jg
dec
pop
out
xchg
adc
mov
inc
mov
lcall
test
fsubrs
and
mov
orb
jecxz
daa
rol
lods
sub
and
xor
push
test
xlat
mov
sub
mov
orl
nop
mov
inc
pusha
adc
mov
jecxz
fldenv
test
in
mov
cmp
repz
dec
cmove
sbb
stos
adc
mov
je
stos
sti
push
lret
pop
loop
add
dec
or
mov
dec
movsl
add
ja
add
mov
cmp
jmp
in
add
cmp
popa
movsl
vmwrite
adc
pop
push
gs
pop
add
xchg
pop
mov
and
xchg
and
push
in
or
xchg
adc
aaa
push
lds
adc
push
pop
addb
js
js
dec
fildll
popf
clc
into
jne
std
push
test
mov
enter
in
popa
and
flds
add
dec
mov
out
pop
or
test
sbb
or
cmpsb
sub
insl
sbb
and
xchg
xor
mov
sbb
pop
mov
sub
add
int
xchg
lods
test
pushf
clc
push
push
push
sbbb
mov
adc
or
sbbb
add
aas
ret
int3
jo
cltd
int
mov
aaa
les
mov
jne
or
ret
in
insb
mov
ljmp
cwtl
fs
sub
sarb
shlb
int3
push
pop
or
xor
jae
bound
dec
cmp
add
movsl
rcrb
jns
js
inc
or
mov
stc
pop
js
gs
jo
addr16
mov
jb
xchg
les
aam
andb
jnp
int
mov
jo
or
dec
mov
add
lock
jl
add
pop
pop
fadds
cli
out
loope
aaa
lea
xlat
add
imul
shlb
sbb
into
cmp
xor
mov
jne
mov
sbb
mov
aam
test
pop
jnp
cmpsb
mov
movsl
mov
test
into
cmp
pop
fcom
ret
or
add
inc
sbb
xlat
sbb
mov
int3
jo
into
in
je
add
sub
outsb
mov
iret
inc
add
mov
dec
repnz
sahf
add
xor
fstl
scas
ret
jo
arpl
adc
int3
pusha
jbe
addr16
rcll
out
test
sbb
xor
add
push
inc
insl
cmc
xchg
and
mov
ss
add
adc
or
mul
test
cmpsl
and
aam
push
inc
and
stos
pop
push
and
rcrl
xor
cli
das
add
stos
loopne
mov
adc
in
jmp
fiaddl
pusha
add
movsl
test
cltd
pusha
push
mov
imul
lods
outsb
repnz
mov
shlb
in
sbb
mov
and
xchg
dec
jnp
sbb
add
or
in
sub
dec
jmp
push
jb
add
jns
push
fistl
rcrl
and
loop
adc
lahf
pop
aam
lods
sarb
add
addb
in
testb
fistpl
imul
and
jnp,pn
loop
xor
in
or
jmp
cmp
leave
push
popf
pop
inc
shll
nop
andl
adc
mov
cwtl
enter
in
sahf
sub
outsb
ret
adc
pop
out
loop
mov
lahf
cmp
cs
cld
sub
adc
xchg
add
out
mov
lods
xchg
and
or
xor
imul
adc
mov
aaa
sub
add
mov
and
dec
addb
subl
mov
stc
add
pop
sti
mov
pusha
outsb
push
in
add
ret
or
rolb
std
mov
aad
loopne
add
mov
inc
xor
add
xlat
pop
lahf
cld
push
jmp
xchg
cmp
sub
pop
add
popf
mov
gs
add
insl
inc
push
fcmovnb
mov
and
dec
cltd
popa
or
sbb
adc
mov
jl
add
ret
sarb
insb
jne
jo
mov
mov
mov
lods
je
movsl
shl
xchg
mov
add
xchg
inc
fs
cmp
mov
xor
push
sub
dec
jp
std
sbb
jb
inc
call
and
add
stc
jl
jg
add
pop
ds
cmp
in
and
pop
rorb
cltd
push
std
subl
sahf
add
sub
enter
xor
jge
push
popa
sub
ds
int3
jo
add
xorl
test
xor
insl
push
mov
pusha
lcall
cmpsl
iret
hlt
aad
addb
xchg
xor
sbb
sbb
push
add
in
xchg
mov
nop
or
add
adc
push
add
xchg
adc
xchg
cmp
addb
ret
popf
iret
sub
sub
sbb
pop
shll
xor
xor
data16
or
xor
outsb
pop
pop
shlb
aas
dec
leave
cmpb
lea
orl
ds
xchg
test
and
push
add
mov
xorb
pop
fnsave
lahf
inc
mov
cli
lea
add
in
cmpsb
cmp
jnp
add
rclb
sub
add
and
fstpl
cmc
add
xor
sahf
out
push
scas
outsl
add
cmp
jbe
lds
aas
cli
pop
inc
pop
cmp
add
pop
bound
scas
sti
insb
add
popf
outsl
xchg
cli
dec
xor
push
jecxz
add
mov
xchg
or
adc
push
add
mov
daa
adc
pop
in
mov
call
shll
insb
mov
fldl
leave
xor
pop
sarb
add
test
xor
push
int
inc
add
pusha
addb
ret
add
nop
mov
pop
nopl
sub
push
fs
sub
cmc
mov
cmovg
repnz
js
adc
sbb
insb
subb
call
ret
cmc
mov
jo
ljmp
hlt
sbb
jns
pop
addb
xorl
mov
movaps
test
pop
xchg
outsl
mov
rolb
sarb
pop
add
xchg
cmc
push
scas
cmp
add
mov
icebp
add
mov
in
lock
xchg
pop
push
xor
aam
nop
push
add
popf
stos
sbb
xchg
jnp
fsubl
lock
leave
xchg
out
add
ss
jle
test
jecxz
cmp
pop
cwtl
hlt
xor
pop
dec
pop
mov
push
inc
add
out
cmpsl
aad
test
in
hlt
or
roll
mov
add
fsubrp
push
push
jne
enter
pop
icebp
mov
divb
add
pusha
in
sbb
mov
mov
aas
cmpsl
in
push
roll
popa
jle
mov
ret
sbb
lret
pusha
out
les
add
dec
inc
enter
stc
js
add
add
jno
add
pop
aam
pop
scas
ret
cmpl
icebp
push
jle
dec
sub
ret
mov
je
test
adc
push
sbb
sub
add
std
inc
aam
xor
out
lret
cmp
pop
xchg
mov
pop
pushf
inc
add
outsl
sbb
in
add
jg
dec
pop
lods
hlt
mov
or
and
jbe
mov
add
lods
and
push
dec
add
xchg
popf
xchg
cld
xchg
add
mov
push
xchg
ljmp
idivl
push
enter
and
pop
insb
xchg
ror
mov
xor
pop
stos
ljmp
adc
out
jg
sbb
inc
nop
mov
and
pop
movsb
dec
mov
test
add
cmpsl
ds
aam
add
sub
xor
sbb
push
mov
cmpsb
out
stc
sub
bound
data16
push
orb
sub
add
fwait
rcrb
xchg
add
imul
adc
rorl
repnz
mov
push
inc
mov
out
movsl
ret
movb
pusha
inc
popf
call
sti
xor
mov
ror
add
iret
jecxz
add
mov
inc
stos
andb
add
lahf
mov
movsb
loopne
xchg
xor
mov
add
mov
push
pushf
aad
in
ja
cmovbe
sbb
xchg
stos
add
aas
xchg
enter
add
sub
test
inc
aam
repz
lods
xchg
data16
pop
dec
sub
nop
lcall
ja
pop
add
stos
add
jl
adc
mov
cmp
leave
repnz
add
push
jp
aaa
inc
inc
jg
dec
xchg
jne
cmp
cld
cmp
xchg
cmpsb
sub
jg
repz
pop
add
mov
aam
xchg
cwtl
rclb
pop
les
jge
test
fwait
and
aad
pusha
ror
xchg
rcrb
dec
cmp
pop
add
aam
xchg
int
outsl
xor
pop
mov
leave
cmp
xchg
data16
and
adc
mov
js
add
cmp
rcrb
push
pop
test
push
push
std
fdivrl
and
test
pop
test
push
insb
xor
test
xchg
add
push
frstor
sbbl
add
xchg
mov
sbb
mov
cmp
ljmp
pop
mov
jp
lret
sub
xchg
pop
sbb
adc
jecxz
arpl
test
pop
inc
push
data16
sub
sbb
add
xchg
loopne
and
sub
stos
jp
add
dec
ret
mov
push
dec
fnstsw
add
lock
cltd
sahf
push
pop
ds
aas
pushf
shll
fcomp
add
sbb
xchg
sti
leave
dec
adc
ss
nop/reserved
enter
adc
jae
jl
roll
sub
push
lea
push
loopne
sbb
sub
pop
sbb
mov
cmp
jmp
add
nop
adc
sbb
jge
sbb
jecxz
hlt
jo
inc
leave
add
stc
call
fwait
jnp
and
clc
mov
push
pop
mov
add
ss
and
dec
push
pop
inc
mov
imul
ror
stos
jbe
mov
add
pop
mov
hlt
or
add
ret
push
sub
bsr
shll
std
xchg
sbb
mov
or
add
inc
mov
add
repnz
fldt
jno
add
dec
push
cmp
enter
inc
mov
xchg
loop
shlb
add
inc
iret
subb
dec
xchg
cltd
clc
add
les
mov
shlb
aas
movsb
inc
add
int3
das
movl
in
mov
add
dec
lcall
pop
pop
pop
adc
out
fbld
push
jne
sub
stc
push
cli
fs
add
dec
pop
pop
addr16
nop
mov
mov
pop
adc
data16
cwtl
cmc
arpl
add
xchg
clc
mov
loope
rcl
loopne
add
inc
cs
sub
outsb
push
sub
movsl
cli
sub
hlt
mov
xor
pop
push
mov
popf
out
and
js
repz
add
xchg
rcrb
add
daa
pop
mov
add
aas
inc
shl
mov
pop
adc
jmp
inc
mov
push
jnp
scas
add
dec
add
or
jae
add
and
cs
inc
stc
jo
jg,pt
sbb
das
inc
fwait
adc
je
hlt
add
rcll
or
bound
add
cli
push
or
adc
iret
imul
ret
popa
mov
and
xchg
and
mov
out
add
jge
or
add
cmp
pop
repnz
pop
xchg
imul
jnp
test
cmp
cmovae
adc
and
jp
push
and
mov
leave
psubsw
push
xlat
aas
sti
daa
sbb
in
cmp
shrb
shl
pushf
mov
stos
and
jns
and
push
pop
mov
add
add
test
mov
cmp
add
cmc
cmp
push
adc
push
jg
add
test
rcll
loopne
push
and
push
pop
add
loop
inc
cmp
xor
arpl
repnz
out
mov
pop
hlt
jecxz,pn
repz
andl
aam
dec
cmpsl
and
pop
mov
fs
shrl
sbb
mov
sbb
movsl
xchg
shrb
orb
add
testl
insl
dec
push
enter
dec
ret
mov
jg
jecxz
aas
out
and
pusha
jmp
popa
pop
add
pop
mov
jl
mov
jg
push
add
sbb
add
push
add
add
inc
shl
jl
add
stc
cltd
sbb
cmp
and
add
imul
add
leave
rcr
mov
xchg
and
ror
fiadds
ret
xor
add
adc
icebp
and
push
stc
in
or
imul
push
add
movsl
movsb
fadds
ds
leave
divl
cmp
pop
out
mov
rcrl
fldl
jb
gs
add
arpl
mov
push
or
cmpsb
adc
or
pop
shl
into
outsb
lods
push
adc
fstpl
je
call
push
loop
add
mov
xchg
int
and
pop
add
mov
cmpsl
mov
into
lods
sbb
and
or
adc
movsl
out
sbb
add
arpl
inc
pop
stc
add
dec
leave
cmp
insl
mov
lea
push
test
lahf
cmp
aam
push
int
mov
xor
popl
es
addr16
add
outsb
inc
push
adc
cwtl
leave
dec
das
pop
and
sub
std
mov
mov
jg
ret
inc
shlb
add
cmp
inc
xchg
dec
pusha
add
mov
pcmpgtb
push
pop
xorb
xor
iret
mov
clc
rcrb
pop
adc
xor
je
push
test
xchg
leave
testb
inc
xchg
mov
add
pusha
in
adc
shll
inc
les
orb
aaa
lds
xlat
in
pop
adc
sub
lods
scas
push
loop
pop
mov
pop
popf
cmp
mov
jp
push
add
fisubrs
clc
jns
das
push
inc
sub
and
sub
or
sub
sarb
sarb
test
addr16
loopne
inc
inc
insb
jmp
imul
jae
add
push
into
dec
add
inc
rclb
mov
add
and
loopne
mov
ret
inc
shlb
icebp
imul
add
sarb
inc
out
pop
rolb
jle
jp
add
cltd
loope
jnp
mov
in
add
xchg
daa
lahf
jno
add
aad
push
outsb
xor
dec
mov
fsts
loopne
or
mov
or
or
pop
add
dec
sub
dec
push
cmp
push
loopne
ret
push
add
jmp
xchg
sub
scas
inc
jg
xchg
nop
aam
es
jge
pop
les
pop
enter
test
mov
jbe
add
int3
lods
in
nop
add
mov
add
scas
cltd
mov
mov
std
call
and
fmul
ljmp
cmp
sbb
cmc
mov
mov
sbb
add
pop
lock
stos
jns
icebp
add
outsl
lret
fisttpl
sub
sbb
loop
dec
mov
push
jne
roll
enter
pop
ljmp
fwait
paddusw
arpl
shlb
xchg
loope
outsb
sahf
inc
adc
add
fsubrl
add
mov
loopne
ffreep
arpl
push
dec
aas
nop
push
add
call
scas
and
add
sub
push
dec
rclb
mov
sub
xor
sti
rcrl
stc
popa
sub
cltd
leave
xor
push
pop
sbb
shll
mov
push
push
xorl
clc
push
and
add
call
cwtl
shlb
push
adc
xor
les
mov
cmp
pop
test
add
in
adc
loope
nop
or
test
int3
push
mov
jge
fldt
xor
cmpsl
ss
or
add
pop
lahf
shlb
inc
clc
pop
leave
push
jno
sbb
flds
out
add
push
or
inc
add
jg
add
insb
fadds
data16
dec
jmp
mov
pop
inc
fisubrs
or
mov
xchg
or
mov
pop
lds
dec
in
xor
or
mov
sub
mov
push
jmp
leave
cmpsl
add
mov
daa
cmc
add
xchg
mov
mov
bnd
pop
lds
dec
dec
fisttps
shlb
push
out
stos
andb
jne
cmpsl
xchg
jno
fdivrs
pextrw
dec
and
je
iret
jb
ja
ret
inc
or
cwtl
out
add
clc
push
subb
sub
dec
dec
icebp
mov
jno
sarb
jmp
cli
hlt
out
xchg
lea
xchg
dec
aaa
ret
mov
out
jle
das
jl
out
test
push
insl
add
sti
iret
sub
ret
cmp
scas
sbb
ror
in
cwtl
pop
mov
leave
pushf
loope
pandn
jg
mov
cli
and
lods
adc
push
out
aad
gs
mov
sub
lock
xchg
add
pop
fistps
jns
arpl
daa
lret
addr16
add
mov
lds
mov
mov
enter
cmp
stos
xchg
xchg
es
shrl
cmc
mov
jae
addl
notb
rcrb
shr
lock
push
add
pop
pop
sbb
enter
out
daa
mov
ljmp
jno
xorl
sbb
iret
sbb
xchg
push
in
mov
movsb
add
scas
shlb
psubusb
ja
pop
jo
dec
mov
or
ficoml
push
xchg
cmovae
dec
pop
sbb
das
rcrb
sub
ja
cmp
pop
pop
push
add
mov
scas
sbbb
pop
stos
adc
out
mov
shrb
sbb
movsb
cmp
mov
xchg
notl
inc
cld
incl
fildl
jecxz
out
sbb
pop
cmp
out
sub
add
fisubrs
cld
fs
lahf
and
outsb
mov
insl
sahf
dec
xchg
add
js
xor
cmp
shll
inc
es
test
test
xor
outsb
push
clc
and
fiadds
pop
push
in
jle
notl
test
mov
js
aaa
push
mov
push
in
push
movsb
cmp
inc
int
mull
aaa
and
and
push
loope
mov
stos
shrl
or
jne
add
mov
out
mov
or
dec
sbbl
fsubs
test
sub
push
cmpsb
sti
pop
adc
out
add
pop
sbb
push
sub
xchg
xor
rclb
pop
out
pop
cmc
add
lcall
xor
jnp
movsb
rolb
bound
dec
inc
das
push
sbb
sub
aas
dec
jnp
test
adc
iret
add
addr16
mov
inc
lock
push
adc
popa
jb
pusha
pop
inc
sar
xchg
sub
sbbb
sub
mov
add
jbe
dec
push
clc
cmp
and
mov
push
inc
xchg
xorb
and
sub
lods
mov
and
daa
lcall
ds
add
push
dec
sbb
sahf
add
xor
pop
xchg
iret
roll
inc
push
aas
jns,pn
sbb
int
add
mov
notl
aam
add
stc
inc
lcall
rcl
add
stc
popl
aad
xlat
fstps
cmp
add
pop
leave
adc
nop
inc
lret
sub
cltd
jbe
add
out
jb
and
add
inc
scas
sbb
lret
outsl
xchg
mov
pop
loopne,pt
stos
out
push
add
inc
adc
shrb
dec
ja
dec
mov
pop
loope
mov
and
add
sub
and
push
pop
mov
xchg
jae
js
add
sahf
pop
outsl
fimuls
adc
and
repnz
cmp
divl
inc
push
or
push
mulb
leave
xor
xchg
push
mov
add
xor
andb
sbb
mov
fsubrs
xlat
pusha
xchg
loopne
pop
adc
or
add
mov
insb
cmp
ljmp
iret
mov
subb
addr16
adc
add
ret
or
add
jb
xchg
mov
je
dec
popa
cmp
mov
dec
outsl
jae
dec
jo
jo
dec
fistpl
adc
dec
sbb
add
mov
and
popa
or
push
mov
sub
jle
add
daa
inc
mov
das
xor
shrb
and
jg
xchg
in
fsts
dec
add
out
das
sub
aaa
pop
push
jmp
mov
jo
fsubs
or
add
and
daa
jg
decl
and
or
test
jecxz
cmp
mov
out
add
or
loopne
adc
mov
nop
xor
and
dec
jp
cli
flds
inc
mov
add
popf
sbb
icebp
mov
nop
fadds
lret
push
jae
mov
mov
dec
inc
and
enter
add
xor
jl
add
sub
and
xor
sarb
xchg
lahf
jae
xchg
fcomi
cmp
in
and
loope
xchg
cmpsl
or
jbe
mov
cmpb
inc
fbld
fisubs
in
jl
pop
xchg
rorb
in
leave
mov
sbb
mov
out
cmp
popf
clc
mov
test
push
xchg
cld
push
pusha
cmp
adc
sub
or
int3
call
out
and
jno
sub
cmp
xor
stos
std
push
xchg
mov
inc
xorb
test
outsl
addr16
mov
sub
pop
push
ds
popa
cmp
push
add
dec
movsb
jle
lea
sbb
pop
pushf
and
mulb
mov
add
push
aam
add
mov
pushf
add
sbb
push
mov
xor
inc
sbb
mov
push
adc
mov
and
adc
adc
adc
addr16
adc
sub
jle
fcmovbe
pop
mov
aad
or
mov
add
pop
xchg
cmc
mov
jmp
in
insb
add
je
pop
decb
jle
jbe
add
pop
adc
mov
es
psubb
inc
inc
adcb
adc
add
mov
xchg
sub
addr16
xchg
and
jmp
nop
into
sbb
push
dec
cmp
xorb
add
inc
addr16
dec
outsb
repz
out
mov
sbb
push
add
lcall
call
fidivs
es
lcall
mov
pusha
sbb
movsl
inc
lds
pop
out
sahf
adc
stc
xor
nop
ret
xchg
sbb
inc
sbb
sbb
jg
jb
pop
mov
les
leave
jge
popl
or
sbb
inc
call
hlt
or
add
dec
dec
cmpxchg
adc
cmp
sbb
ljmp
dec
loop
movups
mov
daa
lds
insb
push
mov
sub
mov
fdivs
cltd
mov
shld
dec
pop
or
iret
rclb
or
icebp
xlat
xchg
jo
imul
fildl
lcall
into
add
jae
fnsave
fwait
add
cmpsl
arpl
rorl
movsb
jle
data16
fcomps
rclb
xchg
xlat
sbbl
xchg
adcb
push
dec
pop
sbb
icebp
mull
cmp
jmp
lret
sub
pop
subb
int3
mov
jne
or
and
repnz
push
add
push
lods
push
lahf
or
or
shlb
or
xacquire
ret
pushl
adcb
loopne
jnp
nop
adc
gs
inc
xchg
xchg
divl
aam
dec
pop
test
cmc
sbb
sbb
aas
adc
add
dec
adc
in
mov
sub
loopne
dec
mov
sbb
adcl
ret
es
test
lods
sbb
add
cli
clc
mov
mov
add
or
jo
xor
push
add
or
ficoms
jo
or
js
mov
jg
ja
fwait
adc
add
test
outsl
add
mov
pop
add
lds
pop
andb
sbb
add
mov
add
or
jo
lcall
and
in
pop
push
int3
pusha
imul
adc
loope
imul
mov
fdivrs
add
leave
es
fldenv
add
and
test
mov
jbe
pusha
mov
ljmp
jb
and
sbb
mov
push
mov
push
fwait
ja
add
xchg
ret
add
jle
repnz
imulb
cltd
orl
bound
add
xor
adc
dec
and
pop
mov
and
popf
fadd
xor
pop
lcall
cmp
fcoms
adc
mov
and
pusha
mov
pop
or
mov
pop
inc
data16
mov
nop
jmp
inc
sub
add
dec
ud0
sbb
adcb
dec
jbe
add
or
xorb
punpcklwd
mov
mov
sbbb
xchg
in
add
xor
cmp
xchg
fcmovnu
mov
sub
icebp
cmp
and
add
hlt
clc
daa
stos
mov
std
add
xchg
add
or
outsl
and
imul
inc
add
adc
add
sub
mov
xor
adc
inc
testb
adc
xchg
dec
mov
sub
aaa
add
push
bnd
add
mov
ja
lcall
add
ljmp
sub
popf
cmp
cmpsb
ss
clc
mov
out
inc
push
sarb
sbb
sub
sbb
mov
int
jecxz
divl
movsl
inc
jo
mov
jmp
inc
xchg
or
pop
lods
mov
inc
call
inc
xlat
pop
mov
fs
pop
sar
inc
dec
jae
cmp
add
sbb
stos
push
stc
rcrb
push
cmpb
mov
jmp
xor
add
push
mov
add
jbe
loop
flds
enter
xor
or
ret
jnp,pn
scas
add
addl
or
add
out
dec
jg
add
push
js
mov
test
xchg
insb
ljmp
add
inc
or
aaa
call
pop
scas
add
push
sarb
adc
int
popf
dec
imul
ja
lret
sbb
dec
or
xor
arpl
out
sub
imulb
jle
or
sbb
cs
add
std
ljmp
nop
cmp
mov
sbb
push
ss
out
aaa
add
pop
dec
and
add
dec
stc
add
adc
xlat
push
mov
leave
movsb
inc
jmp
loopne
cmp
xchg
int
add
inc
inc
jne
and
loope
xchg
or
aaa
lods
dec
cmp
sub
mov
scas
loopne
cmp
xchg
fdivs
imul
jne
hlt
push
cmp
xor
adc
cltd
or
aas
pop
pop
insl
out
loopne
add
jle
pusha
lret
adc
jmp
loope
jge
sbb
cmpb
mov
mov
cmp
enter
ret
mov
mov
add
xchg
fnstsw
or
addr16
clc
adc
mov
hlt
out
adc
cmp
or
add
pop
mov
incl
inc
decb
xchg
call
ret
roll
inc
movsb
push
sub
jbe
add
in
sbb
int
mov
and
aam
dec
add
push
mov
push
in
xor
pop
addb
cmp
dec
mov
insl
pop
enter
sbb
das
pop
fnstsw
mov
test
iret
pop
int
inc
arpl
sub
add
sbb
mov
test
push
test
sti
repz
dec
cs
pop
mov
addb
jl
es
sti
shr
stc
pop
ret
repnz
cmpsl
mov
je
notl
int3
mov
cmp
mov
jae
test
and
pop
add
or
jecxz
mov
loopne
dec
movsl
outsl
add
xor
xor
ja
cmp
ficompl
sbb
dec
inc
pusha
and
add
lock
mov
xor
ljmp
sbb
mov
sarl
inc
inc
add
sbb
sbb
mov
imulb
imul
or
popf
add
push
cwtl
je
add
roll
add
stos
mov
jg
icebp
jae
or
add
add
add
sub
mov
sub
sub
repnz
repnz
test
mov
pop
pop
dec
push
movsl
and
rclb
in
out
add
mov
xchg
add
jecxz
adcb
scas
xchg
or
out
js
outsl
pop
ljmp
cwtl
aad
adc
xchg
push
cmp
sbbb
and
cwtl
cmp
push
enter
insl
lock
pop
and
inc
mov
mov
shl
rcll
xor
sbb
and
dec
gs
sub
or
add
jbe
mov
lcall
ficoms
jno
lds
push
sub
xchg
adc
mov
cmp
ja
inc
mov
cmpb
and
add
mov
ret
inc
and
lods
ret
cli
add
cmc
lret
sub
insl
subb
mov
cmp
cmp
sbb
and
mov
add
pop
data16
xor
movsb
add
xchg
cmp
sub
repz
call
sbb
mov
cli
imull
in
hlt
add
sbb
mov
test
loop
add
cmp
or
mov
mov
mov
pop
sbb
test
add
fbld
dec
pop
sbb
adc
clc
pop
stc
jl
push
sbb
inc
and
mov
inc
jp
les
aaa
sbb
cmp
inc
cld
ss
add
xor
addb
popf
pop
mov
jb
push
sub
mov
add
jmp
jo
xor
push
icebp
je
fwait
sbb
scas
jb
das
push
dec
push
xchg
fldenv
sbb
add
pop
repnz
jae
ja
rol
inc
es
jnp
and
jle
push
push
clc
dec
stos
imul
cmp
addb
add
xor
lret
sub
in
mov
sbb
pop
stc
cmp
xor
cmc
jnp
movsl
in
enter
and
and
adc
call
addl
ret
or
bound
add
add
fwait
lret
lds
lods
push
dec
cmp
sahf
pop
lods
xorl
sub
cmc
stos
or
stos
test
mov
shll
addb
frstor
lods
cltd
add
fcmovnb
daa
xor
pop
dec
jp
mov
add
xchg
mov
fs
es
scas
or
cmc
dec
inc
je
add
add
jl
scas
int
xchg
int3
sbb
add
fcoms
shlb
add
std
push
sub
pop
ds
iret
add
inc
xor
mov
sahf
sbbb
into
push
js
cmpsl
lea
adc
cld
ds
nop
adc
popf
or
lcall
pop
testb
aad
push
js
test
cltd
jp
inc
mov
shll
popf
add
icebp
ret
cltd
add
pop
aam
scas
sub
sub
mov
gs
ret
arpl
push
cmp
cld
sbb
and
fs
bound
add
enter
inc
add
mov
enter
pusha
pop
sbb
call
mov
add
pop
push
movsb
movsl
jecxz
jno
add
lahf
jg
or
pop
sbb
pop
int3
and
xchg
into
and
fildl
mov
clc
testl
lock
lds
xor
jle
fwait
push
push
rcl
add
pusha
xchg
add
hlt
xchg
cltd
scas
data16
push
cmpsb
mov
stos
xlat
add
cmp
idivl
push
flds
repz
fldt
and
xchg
pop
dec
out
pushf
movsb
cmp
sbb
int3
lret
test
insb
outsl
mov
sbb
fsubrp
add
jne
int
mov
lock
cs
out
push
pop
cli
mov
mov
fistpl
xchg
add
mov
imul
ret
sub
adc
mov
xor
orb
int3
pop
mov
lods
mov
adc
inc
pop
in
push
adc
and
int3
mov
cld
adc
cwtl
xchg
bound
incl
sbb
pop
movsb
and
add
lahf
jmp
push
lock
mov
jp
movsl
pop
jae
hlt
rcrb
xchg
ror
add
xchg
pushf
les
es
out
in
adc
mov
add
pop
jno
fbstp
push
lahf
inc
add
data16
movsl
imul
push
in
jl
cmpsl
jmp
hlt
and
mov
sbb
mov
ret
dec
int3
xchg
jge
push
dec
and
and
stos
adc
sahf
mov
xchg
sub
sbb
sub
and
lods
fnstsw
jb
shlb
mov
add
stos
jne
lods
rol
and
out
mov
ljmp
jns
add
test
mov
fimull
and
fdivp
jo,pn
add
mov
xor
xlat
clts
pop
gs
dec
xchg
or
fisttpll
rolb
jmp
mov
pop
lret
imul
inc
mov
stos
adc
pop
dec
dec
xchg
or
add
xchg
adcb
push
jno
mov
fmul
or
mov
fsts
adc
ds
cwtl
popf
xchg
pop
adc
push
testl
and
cli
xchg
sbb
fiadds
pop
cmpsl
test
rcr
cvttps2pi
addb
dec
add
push
ljmp
in
jl
jo
loop
mov
jne
add
jo
inc
popf
xchg
inc
sub
inc
jecxz
or
stos
idiv
or
rorb
fmuls
sub
andb
inc
jno
fidivl
cmpsb
jb
push
loop
mov
cmp
add
ret
dec
mov
inc
xchg
scas
pop
xchg
bound
mov
push
push
into
fwait
incb
ljmp
sahf
sbb
scas
add
cmp
dec
jge
add
lods
imul
add
loopne
sub
mov
push
xchg
mov
lds
mov
mov
mov
iret
xchg
push
pop
shll
add
add
pop
mov
lcall
cmp
clc
mov
pop
or
in
stos
dec
movsl
mov
dec
and
add
inc
repz
mov
ret
loope
pop
jp
xchg
or
int
outsl
xlat
and
xor
sbb
rorl
pop
sbb
push
call
xchg
pusha
setnp
push
cmp
fdivr
je
push
bndldx
sti
int3
mov
and
pop
pusha
add
sub
add
orb
add
push
inc
cltd
shlb
test
mov
mov
add
push
dec
mov
pop
xor
loopne
icebp
sbb
stc
mov
adc
subb
inc
add
inc
or
lahf
ja
cmp
clc
push
dec
add
xchg
xor
es
jo
cmp
jl
pop
test
mov
push
rclb
cmp
pop
mov
insb
icebp
adc
sbb
inc
subb
outsl
xor
add
xor
ljmp
add
imul
cmp
pushf
shr
push
and
les
roll
out
mov
pushf
or
lcall
inc
sub
unpcklps
cmp
sbb
loope
add
pop
add
cmpl
add
cltd
decl
sub
jmp
in
roll
cmpsb
test
pop
add
out
mov
and
stc
clc
lcall
dec
iret
outsb
and
push
dec
insl
jp
pusha
inc
andb
push
enter
ljmp
int3
lahf
les
or
mov
es
sub
adc
add
cli
jecxz
hlt
jl
scas
add
add
ror
add
in
int3
jns
ret
test
jbe
loopne
or
xor
adc
mov
xchg
stc
add
cmp
sbb
subl
jp
sar
xchg
push
adc
add
mov
sub
xchg
mov
adc
inc
or
cmpb
add
sahf
jne
push
add
fstp
push
add
ja
pop
lods
clc
sbb
and
xor
add
xchg
push
ss
mov
cmpb
add
mov
movsb
cmpsl
push
mov
inc
lcall
adc
add
sarb
and
jne
inc
fsubr
add
sbb
add
vmread
or
iret
and
loopne
cmp
lods
mov
lretw
jp
mov
dec
or
lcall
out
lret
orl
idiv
mov
add
fs
xor
xor
test
and
mov
mov
daa
sub
xor
test
popa
mov
lock
add
out
sbb
cs
scas
inc
xchg
in
mov
daa
adc
sub
cmpsl
mov
icebp
imul
and
lcall
jp
lea
add
adc
psadbw
mov
jg
add
aam
fstps
push
add
sti
lret
sbb
or
sub
cwtl
or
pop
testl
cmp
xor
or
add
mov
test
aad
daa
out
cmp
add
mov
inc
sarl
inc
mov
push
repz
inc
add
sahf
add
mov
xchg
inc
adc
inc
out
add
and
cmp
xorb
sbb
or
cltd
paddb
rol
mov
repz
ljmp
add
jns
cmp
inc
sahf
orb
and
inc
add
cmp
stos
imul
addl
pop
mov
outsl
sub
ret
das
out
jns
dec
inc
aas
pop
popf
push
mov
sarb
dec
out
cmpsb
push
add
xchg
lret
xor
adc
sarb
xor
cmp
lret
mov
sub
nop
mov
cmp
clc
cwtl
lea
sbb
test
adc
sbb
cltd
inc
xchg
push
push
cmpb
pop
rorb
add
mov
repnz
pop
pop
mov
xor
sbb
fiadds
int3
jo
rolb
lret
cs
loopne
cld
add
and
mov
add
pushf
adc
jno
arpl
cmp
push
cli
inc
loopne
xor
incb
add
int3
in
push
mov
rcrl
fadds
mov
int3
negb
add
mov
and
push
enter
rclb
int
add
jo
mov
push
cmpsb
pushf
ds
das
push
xchg
cld
mov
inc
jcxz
pop
std
imul
pop
mov
andb
and
sbb
inc
jle,pt
add
jp
fidivl
push
sbb
mov
loope
push
add
fst
and
dec
adc
pop
push
inc
pop
mov
add
cmp
sub
inc
in
cltd
add
je
xor
bound
mov
pop
fs
gs
stc
push
mov
mov
and
or
or
into
or
push
insl
cmp
clc
mov
pop
shll
sbb
lds
xor
and
ficoms
loop
ja
dec
add
sbb
add
and
jl
int
xchg
add
mov
cmp
push
dec
or
xor
mov
cld
sbb
scas
stc
xchg
rorl
inc
sub
add
mov
pusha
shr
and
bound
cmp
test
cmp
fnstenv
mov
int
inc
shr
cmpsl
mov
jl
add
xor
sbbl
lods
dec
xorl
out
outsb
push
add
dec
xchg
outsl
mov
jo
xor
and
mov
scas
fnstsw
jge
shlb
jbe
push
sbb
inc
mov
and
sub
cmp
inc
mov
stos
add
pop
clc
adc
xor
jnp
aad
push
mov
nop
ror
les
add
pusha
mov
add
adc
push
imul
pop
incb
add
pop
loopne
mov
std
cmp
fcomps
test
popf
pop
mov
out
add
dec
inc
sub
outsl
sbb
dec
cmpb
pop
mov
subb
adc
jo
add
mov
cli
add
cmc
in
mov
add
push
ljmp
jp
add
push
xchg
frstor
add
mov
sbbl
out
add
into
icebp
in
ss
jmp
pop
mov
push
sbb
adc
lods
sbb
call
out
fiadds
mov
sbb
rorl
add
dec
movsl
test
cmp
add
sub
mov
inc
push
ret
sbb
jo
fsubr
xchg
and
cli
jl
mov
lds
xchg
in
or
sub
cmpb
stc
popf
add
adc
sbb
xchg
cmp
pop
sbb
lret
push
inc
int3
sub
mov
pop
add
test
in
add
ljmp
jae
das
mov
cmp
jae
outsb
aam
testb
mov
inc
mov
add
or
mov
push
and
dec
lret
pop
movsl
add
cmp
repz
or
rcrl
das
or
adc
rcll
jl
movsl
add
inc
imul
pop
adc
adc
arpl
push
push
add
flds
jo
nop
cmpl
out
or
xor
dec
cmp
mov
adc
sub
mov
andb
jo
dec
sbb
pop
rcrl
add
ret
scas
cmp
mov
add
inc
data16
xor
and
mov
rolb
jo
adc
rol
das
add
sub
js
dec
push
mov
movsl
pop
mov
fldl
dec
and
in
pop
or
mov
add
stos
sti
clc
lcall
jae
aaa
leave
adc
xlat
mov
nop
pop
jb,pt
jmp
add
or
call
shll
add
xchg
sbb
cmp
sbb
pop
gs
xor
cmp
mov
and
mov
in
xor
mov
int3
adc
faddl
push
pop
mov
inc
les
bswap
das
lcall
lods
sbb
mov
jne
push
add
push
std
mov
lock
and
ficoms
insb
loope
and
xor
xchg
orl
inc
stc
test
mov
sbb
push
sbb
js
cmpsl
adc
inc
add
shll
xchg
cmp
fimull
subb
nop
and
out
dec
aam
fcoms
addb
aam
stc
or
mov
pop
adc
xchg
sbb
loopne
ret
inc
inc
pop
sub
popf
adc
add
add
fldcw
add
mov
or
xor
fldcw
add
idivb
in
cmpsl
xor
add
clc
pop
jge
mov
mov
sub
jecxz
dec
sub
insl
lcall
sub
xchg
stc
inc
and
int
xchg
push
daa
sub
add
addr16
xor
stc
adc
insb
daa
push
nop
mov
sub
push
dec
or
xchg
dec
ja
sub
mov
call
add
cmp
pop
icebp
xchg
subl
jne
cmp
sub
mov
ljmp
bound
or
fdivl
add
fimull
pop
clc
loope
or
mov
sbb
les
push
mov
mov
call
hlt
adc
iret
mov
fwait
sbb
xchg
inc
imull
je
pop
fsubr
xorl
sahf
lret
mov
adc
adc
xchg
loope
add
ljmp
aas
cli
pop
xorl
out
test
aam
sbb
or
inc
nop
scas
pop
cli
xchg
add
nop
das
cs
clc
fwait
cmp
push
mov
push
mov
add
mov
add
aad
popa
ret
adc
add
cli
test
or
or
mov
subb
pop
outsb
aad
pop
pop
push
and
pusha
std
subl
fwait
xchg
mov
add
adc
push
enter
xlat
es
xchg
push
sub
add
and
mov
loopne
jo
push
rorb
into
push
fidivrl
test
xchg
lock
push
xorb
mov
jle
in
add
xchg
int3
xchg
std
mov
testl
rorl
add
fwait
lcall
mov
xchg
pop
adc
xor
out
sbb
rcll
adc
add
add
push
and
push
movsb
mov
popf
sti
cmp
call
inc
mov
imul
adcl
repz
or
pop
test
sti
push
loope
scas
sbb
rclb
adc
add
gs
lods
mov
xor
into
dec
mov
and
sbb
sbb
add
mov
int3
pop
pop
add
in
add
js
dec
push
cwtl
and
daa
std
test
add
enter
xor
pop
stc
or
jge
loopne
sbb
insl
mov
jo
push
and
sbb
sub
xchg
or
pop
cs
les
xor
xchg
or
call
jo
repnz
mov
push
mov
pop
testb
cmpl
pop
mov
add
jmp
add
xchg
xor
add
leave
cli
sar
push
push
sub
clc
or
inc
adc
add
out
fildl
cmp
or
je
and
push
jecxz
int
ss
add
dec
inc
push
or
aas
cmp
add
mov
daa
xor
mov
add
lea
fadds
jl
and
out
test
sbb
and
and
add
xchg
test
les
inc
or
clc
and
sbb
out
mov
nop
adc
cmpl
rcl
add
aam
shlb
pop
cmp
sub
jb
sub
sti
stc
and
enter
mov
vmovdqu
loopne
sarl
push
adc
add
and
cmp
push
es
pop
ds
push
mov
cmpsb
loop
add
sbb
lahf
outsl
pusha
inc
test
repnz
add
mov
adc
shlb
sub
jl
add
mov
lea
cmp
xor
insl
sbb
pop
push
add
and
add
fwait
test
mov
dec
jns
lret
dec
mov
add
rolb
les
lods
add
push
adc
or
or
pop
mov
or
ds
stos
cmpsb
sbb
sub
add
cmp
and
mov
and
pop
add
jmp
jo
daa
cmp
or
mov
loopne
iret
fldl
les
xchg
push
jmp
sahf
or
add
xchg
cmpsl
mov
mov
add
pusha
ljmp
addr16
jp
out
push
incb
mov
push
push
add
inc
add
pusha
lahf
sahf
adc
decl
out
pop
and
or
fs
scas
je
ljmp
adc
icebp
sub
xchg
cltd
mov
lock
lret
sub
and
xchg
jnp
lahf
pushl
adc
push
dec
hlt
xor
ds
loopne
add
out
inc
add
push
mov
ljmp
ss
dec
sub
nop
pop
or
mov
xor
xor
pushf
dec
mov
cmc
mov
sub
mov
push
adcl
mov
fildl
clc
adc
sbb
inc
mov
push
cli
pop
roll
dec
push
clc
cmpsb
add
pop
lock
push
adc
add
or
add
pop
sahf
jp
clc
pop
and
cmp
dec
aam
loopne
fildl
fsubs
mov
cmp
pop
add
xchg
mov
mov
addb
mov
std
or
add
xor
pop
pop
jg
nop
mov
adc
scas
lcall
xchg
inc
push
mov
push
sbb
call
scas
adc
pop
ret
lds
jae
push
insl
fdivrs
or
add
sub
dec
aas
lahf
lcall
sub
aam
in
sti
popf
jmp
cmpsl
or
and
call
int
shlb
push
into
fldcw
mov
xchg
loopne
cmpsl
adc
pusha
dec
add
cmp
pop
fdivs
inc
shlb
mov
add
inc
pop
hlt
fmuls
lods
add
adc
outsb
or
loope
push
xor
pop
stos
or
and
pop
adcb
add
fsts
mov
lock
inc
pusha
inc
sbb
das
push
test
mov
cmp
shr
jp
push
jmp
jecxz
stos
add
or
xor
xchg
add
sub
in
push
jl
cmp
aad
gs
sbb
shll
fstl
out
sbb
test
std
lds
stos
add
pop
xchg
jp
add
nop
and
add
xor
jno
jl
add
sbb
dec
dec
in
cmpsb
pop
push
pop
int3
add
cmp
stos
mov
add
fdivl
lret
mov
pop
lods
test
out
push
decb
add
insl
das
iret
sbb
cmc
negl
or
inc
into
add
rolb
fidivs
in
lret
add
xchg
negb
sbb
cs
stc
cli
enter
stos
add
inc
test
sbb
and
pop
mov
jle
add
enter
push
mov
jb
sbb
stc
mov
bound
sahf
mov
loopne
pop
pop
add
add
cmp
mov
sarl
pop
sub
adc
push
add
pop
movsbl
mov
loope
test
in
mov
lods
add
je
loopne
push
mov
cld
insb
pop
push
and
nop
pop
neg
add
sub
sbbb
push
adc
lds
dec
clc
pop
in
sub
fiaddl
pop
dec
inc
in
rcrb
sti
aam
dec
repz
jle
pop
test
push
or
mov
adc
xchg
pop
mov
sti
add
stc
or
sahf
add
ljmp
jge
adc
dec
and
sbb
ds
jl
insl
loopne
add
cmpsl
pusha
div
mov
or
sbb
add
cmpsb
push
pop
insl
xchg
xor
insb
leave
jae
add
arpl
mov
add
dec
mov
sbb
icebp
xchg
add
add
repz
pusha
xchg
cmp
scas
fsubrl
jmp
jecxz
xorb
mov
sub
loop
add
aam
xchg
add
iret
clc
es
leave
ret
cmp
inc
add
sahf
pop
out
push
and
test
lock
mov
push
push
cmp
test
divl
ljmp
insl
mov
add
divb
add
inc
push
cli
loopne
rolb
addr16
push
sub
jnp
je
popf
cmpsl
add
into
mov
push
add
mov
pushf
sahf
jge
mov
faddl
orb
popa
sub
mov
mov
jo
mov
scas
xor
jge
pop
or
iret
nop
jne
adc
jbe
shll
mov
adc
pop
loop
xor
fldl
mov
add
mov
add
sbbb
out
movsb
enter
addr16
iret
ret
scas
xchg
fwait
ja
lock
test
mov
imul
push
out
out
jl
pcmpeqb
into
push
repnz
cmpsb
xor
fadds
jg
jns
sahf
mov
pop
test
xchg
dec
add
out
imul
add
rclb
pushf
in
jb
mov
sbb
das
test
pop
add
pop
mov
imul
adc
int3
add
ds
lods
inc
jo
or
fisubl
sbb
inc
push
pop
mov
mov
pop
rolb
mov
cmp
inc
or
pushf
push
stos
mov
push
xchg
test
pop
or
xchg
orb
sub
aaa
adcl
inc
dec
daa
cwtl
cmp
xorb
sbb
mov
push
sub
add
dec
mov
nop
adc
mov
jle
push
out
ds
dec
jge
add
mov
push
add
jmp
add
xchg
cmp
mov
or
in
adc
punpcklwd
jne
add
daa
loop
add
xchg
push
cmp
into
sub
pop
push
gs
enter
push
repnz
xor
outsl
dec
pusha
add
test
pop
jge
sbb
roll
cmc
mov
fsts
cld
or
lahf
sahf
test
out
mov
loopne
es
icebp
or
xor
cmp
and
push
repz
outsb
pminsw
xor
jmp
pop
add
xchg
stos
xor
pop
sti
int3
xor
pop
lock
mov
add
cmpsb
shlb
dec
mov
movsl
or
jp
leave
test
addr16
lea
sahf
cwtl
pushf
pop
xchg
mov
sti
clc
pop
sub
jbe
lret
jge
add
or
dec
push
imul
cmc
mov
add
push
lock
push
mov
and
dec
lods
push
add
dec
fs
xchg
jnp
add
imull
ret
jns
test
push
add
test
xchg
xor
mov
or
rcrb
sbb
inc
mov
add
out
insb
jl
notrack
push
cmp
push
jnp
sbb
or
sbb
out
cwtl
in
outsl
sti
add
or
cli
jmp
scas
ret
mov
dec
pop
insl
add
push
fsqrt
ficomps
addw
shll
add
adc
popa
add
jl
mov
xchg
enter
pop
xchg
lock
sbb
ret
jns
xlat
jnp
rolb
sub
jb
pop
jg
sbb
xchg
add
movsb
or
adc
mov
mov
cld
in
cmp
lds
xor
jmp
xor
add
adc
cmp
imul
mov
aas
xor
jbe
xchg
and
repz
into
inc
les
xchg
add
push
add
fnstenv
add
shl
jno
cld
movb
lock
lret
mov
add
popa
fdecstp
sub
sub
les
dec
repz
roll
iret
cmpsb
pop
pop
xor
or
or
shll
push
xorl
out
loopne
add
and
jo
cli
mov
add
int
jae
popa
mov
bound
add
aas
insb
daa
fsubl
or
xchg
movsb
mov
mov
movsl
pop
add
add
push
jg
jno
mov
lock
add
rep
pop
xchg
sub
push
insb
in
subb
ljmp
sbb
add
add
leave
inc
insb
mov
cmpl
cmp
hlt
jl
dec
roll
dec
push
add
sbb
insb
push
pop
icebp
decl
dec
inc
add
sub
pop
jl
iret
insl
lock
dec
dec
cli
out
inc
sub
adc
or
icebp
add
mov
pop
mov
xlat
fnsave
xor
lock
pop
add
imulb
dec
les
add
lock
es
add
addr16
push
nop
dec
pusha
inc
cwtl
subb
notb
js
xchg
les
shlb
jecxz
test
ljmp
add
cmc
rcrb
js
icebp
std
cmp
push
lar
loopne
mov
inc
inc
aas
or
adc
cmp
lsl
test
insl
cmpsl
add
stos
mov
add
xor
dec
ja
add
add
dec
sbb
test
xor
mov
lods
out
gs
rolb
add
pop
xor
lock
sbb
roll
dec
in
push
test
sarb
dec
scas
movsb
cmp
mov
and
xchg
dec
push
mov
out
dec
sbb
inc
dec
sbb
xchg
mov
mov
or
sub
ret
test
ud0
into
lret
dec
fs
pop
divb
daa
jge
add
imul
xor
sahf
idiv
dec
popa
jmp
add
xchg
in
push
pushf
out
and
add
rol
sub
movsb
loop
je
jne
xchg
xor
call
sbb
inc
push
repnz
mov
sahf
cmp
int3
mov
add
xchg
mov
jo
int
sub
add
xchg
sbb
dec
pop
pop
lock
or
add
aaa
xchg
xchg
add
xchg
leave
out
sbb
mov
in
inc
sbb
adc
dec
int3
add
div
scas
xchg
mov
jbe
pop
dec
insl
fdivrl
loop
and
aas
sub
mov
orb
inc
add
mov
add
out
sbb
in
leave
pop
and
mov
add
jmp
and
add
and
je
dec
cwtl
jl
dec
push
punpckhbw
and
cwtl
add
and
add
xchg
insl
xor
test
inc
fs
add
adc
pushf
nop
pop
push
je
add
cs
imul
test
xchg
scas
nop
xor
push
xchg
mov
fsub
jge
negl
and
xchg
dec
add
sbb
addr16
add
jb
cmpsl
and
sbb
xor
out
cmc
pusha
test
jmp
add
test
enter
sbb
mov
inc
adc
add
mov
imul
loop
mov
add
add
push
dec
and
add
lret
fisttpl
or
and
jl
jg
sub
adc
addl
and
jno
enter
loope
mov
push
test
add
fdivr
cwtl
dec
cmp
cltd
pop
push
inc
rcl
adc
jb
push
loopne
loope
mov
loopne
idivb
mov
fdiv
aam
or
push
or
call
lods
dec
sub
add
fcoml
or
cld
sbb
push
ja
and
push
inc
cmpl
das
movl
adc
or
xor
dec
shlb
fisttps
jnp
push
jo,pn
cld
xorb
daa
dec
das
dec
sbb
jmp
cmp
mov
pop
push
lods
imul
setne
in
or
popa
rorb
mov
xchg
add
dec
fdivrl
push
aaa
push
add
add
call
imul
jne
loope
add
inc
mov
pusha
test
cmp
movsl
pop
roll
pop
pop
mov
push
pusha
or
sti
stos
sbb
lods
add
pop
sbb
add
cs
popf
add
icebp
xchg
in
add
rclb
push
and
push
add
sarb
and
lods
xchg
push
xchg
add
inc
fdivs
push
and
stos
clc
stc
lcall
push
ret
mov
add
es
iret
pushf
in
pop
outsb
jbe
add
push
test
xchg
sub
das
mov
add
mov
or
sahf
xor
scas
inc
push
std
pop
repnz
jns
cmp
cmpsb
cmp
nop
or
xchg
inc
inc
shr
ss
mov
inc
sbb
inc
push
jb
mov
add
pop
pop
pop
push
adc
dec
jnp
cmp
clc
cltd
rclb
jae
dec
rol
push
mov
pop
push
adc
add
lcall
sub
jb
faddl
and
inc
cmp
dec
repnz
scas
inc
sbb
mov
into
pop
push
adc
lock
xor
jp
pop
sbb
push
sbb
lcall
mov
or
cmp
xor
jb
call
into
cmp
inc
add
stos
push
add
in
das
and
sbb
dec
or
dec
orb
xchg
addl
add
add
movsl
mov
pusha
xor
add
arpl
std
mov
mov
push
pop
test
add
sahf
push
in
outsb
lock
ljmp
jb
stos
sti
or
inc
loop
das
pushf
fisubl
and
cmp
add
push
pop
js
mov
add
inc
imul
xor
fcmove
insb
add
xchg
and
add
sub
add
icebp
push
and
pop
add
push
mov
xchg
test
fisttps
pop
dec
jl
sysret
jge
mov
jne
sub
and
add
xchg
leave
repz
xor
in
add
stos
pop
fs
call
test
insb
and
xchg
mov
adc
jecxz
cmpsl
repnz
dec
nop
inc
or
test
pop
mov
test
jne
fiadds
scas
subl
pop
xorl
insl
add
adc
ret
xor
mov
lea
js
add
test
xor
fsubl
push
add
and
add
int
and
cmp
inc
fcompl
rcrb
and
mov
test
xorb
add
xor
add
add
aam
addr16
add
fisttpll
or
xchg
add
call
subb
rcrb
xchg
jo
negl
adc
loope
cli
or
das
inc
lock
jae
add
lret
addb
push
and
js
in
and
push
dec
lods
mov
data16
cmpsb
add
or
or
repnz
jo
fs
add
enter
fists
adcb
call
movsb
sub
mov
push
data16
hlt
xlat
mov
frstor
filds
pop
out
clc
pusha
mov
sbb
cltd
xchg
push
shlb
jo
test
add
jb
add
out
loopne,pt
mov
jno
mov
xchg
add
in
xchg
aam
mov
add
inc
enter
cmp
mov
in
push
aas
fildl
inc
mov
iret
popf
push
or
je
add
push
pushf
fsubr
adc
call
mov
mov
andb
shr
pop
mov
cmpl
mov
test
sbb
sub
dec
add
fbstp
or
aam
add
pop
lds
dec
movsb
les
sbb
add
sub
pop
lret
inc
loope
push
pop
insb
insl
xchg
pop
xlat
sbb
mov
jge
add
out
pop
std
sbb
sbb
add
xchg
inc
xor
xor
add
xor
add
push
mov
hlt
pop
push
mov
and
mov
sti
add
and
cwtl
fisubl
add
mov
outsl
test
cmp
mov
and
out
shrb
bound
xlat
mov
sub
cs
cld
add
int3
add
sarl
int
sahf
adc
add
cwtl
add
cs
jne
xor
dec
int
mov
dec
int3
add
sti
push
dec
add
pop
cmp
and
mov
add
fisttpl
push
negb
jl
hlt
add
jno
aam
test
roll
pop
adc
outsb
add
std
jmp
ret
xor
push
add
stos
decb
jl
adc
js
loop
pushf
sbb
add
imul
mov
punpckldq
jae
fidivl
mov
mov
popf
popa
xor
stos
mov
daa
ret
addl
mov
js
outsl
jg
jb
adcb
ja
mov
arpl
push
xchg
mov
and
loopne
sysret
add
add
inc
add
out
sub
les
insb
xchg
iret
mov
xlat
add
push
pushf
cmpl
or
lods
adc
inc
cltd
sbb
insb
adc
mov
jle
mov
mov
add
repz
add
inc
rcll
cwtl
add
iret
scas
sub
jns
adc
add
mov
ret
insb
jg
arpl
and
push
dec
fs
and
popf
movsl
js
inc
cli
cmp
lahf
test
adc
jo
and
inc
pop
outsb
cmp
cld
sub
stos
adc
sbb
negl
sub
andb
push
push
int3
ret
pop
inc
arpl
mov
add
out
sub
ljmp
cmpxchg
push
dec
cltd
xor
mov
dec
jns
add
jno
aaa
add
add
push
jle
xchg
add
cmpb
inc
and
pop
or
lods
add
jecxz
xchg
lds
inc
push
pop
pop
cmp
mov
mov
das
inc
aam
dec
add
lods
push
sub
divl
xor
add
add
push
push
data16
test
dec
xchg
add
mov
jb
outsl
arpl
sub
push
push
add
addr16
loopne
roll
dec
jno
and
int
cmp
xor
adc
incl
test
popa
mov
ja
aam
inc
jns
add
imul
mov
add
nop
xlat
in
jp
pop
mov
cmp
add
popa
mov
add
lea
add
jg
and
nop
pop
xor
sbbl
jo
push
popa
cmp
int3
adc
xchg
pushf
sbb
inc
cmp
mov
push
subl
loopne
pop
fildll
inc
mov
loope
xlat
jae
add
push
xor
or
dec
xor
or
movsb
pop
dec
jno
dec
add
mov
inc
sub
push
cmpsb
test
add
stos
jbe
shlb
fwait
add
dec
ja
loopne
add
jne
cld
mov
and
cs
popa
std
add
aad
pop
in
jno
clc
dec
push
cmp
out
add
test
cmpsb
add
mov
inc
adc
cwtl
neg
out
enter
nop
dec
push
inc
xchg
xor
sub
adc
sub
and
xor
ret
sbb
push
rorl
lahf
push
pop
push
add
xor
stc
pop
lahf
and
or
fdivs
lsl
sub
insb
call
lods
dec
sti
scas
iret
loopne
fs
dec
fstpt
inc
enter
mov
into
add
mov
lods
movsb
cmp
bound
cs
mov
jp
push
fwait
inc
lcall
mov
iret
fldl2t
cmp
sub
sbbb
mov
stc
xchg
mov
xor
fimull
fildl
add
mov
sti
xchg
and
add
test
mov
cltd
es
mov
sub
jns
mov
loop
mov
shlb
push
xchg
imul
leave
rcr
add
mov
adc
pusha
mov
push
adc
or
xor
out
repnz
daa
mov
sarl
xchg
std
adc
icebp
int
add
push
out
std
jge
pusha
mov
xchg
push
add
enter
scas
aas
sbb
pop
add
jbe
pop
lret
cltd
add
scas
lods
ret
pop
arpl
cmp
int
inc
adc
enter
push
adc
push
jge
add
es
fistpl
jno
loope
addl
add
dec
pop
bound
hlt
dec
insl
pop
xor
arpl
mov
adc
fildl
fsubrs
imul
push
addl
shrl
nop
in
js
nop
in
sbb
icebp
sub
push
push
dec
rorb
lods
sbb
in
xor
hlt
push
jl
lods
add
js
sti
fildl
dec
ficoml
pop
in
add
dec
mov
sub
mov
pop
cmp
ud0
jo
xor
add
pop
nop
push
xchg
mov
add
scas
and
pmuludq
rclw
mov
or
sub
pusha
add
push
out
add
pop
or
outsl
cld
movsb
ljmp
nop
fs
pop
jp
jmp
pop
add
add
mov
lahf
push
pop
in
pop
nop
sub
mov
arpl
mov
mov
mov
add
add
aas
pop
fwait
loope
xor
cmp
ds
mov
push
cwtl
mov
or
add
leave
sub
nop
aas
add
testl
loopne
pop
sub
mov
ret
xor
jns
jl
sub
cwtl
and
loopne
aam
mov
xlat
add
push
ljmp
sbbb
lods
stos
addl
in
or
adc
fneni(8087
add
push
mov
shrb
sbb
std
push
add
inc
cmc
shlb
mov
push
jnp
push
rcr
addr16
fs
cs
fst
inc
iret
repnz
hlt
aam
ret
push
add
sbb
add
out
fsubl
call
push
push
inc
mov
add
je
rcl
jb
add
cld
lret
push
jmp
xor
add
test
mov
call
stos
and
fldenv
push
adc
sbb
jge
adc
std
cmpsl
mov
and
push
imul
lds
insb
and
pusha
lock
sub
mov
fldenv
test
sub
cmpsb
bound
push
daa
cwtl
cs
jo
or
and
movsl
int3
ret
sti
add
jle
mov
cmp
or
xchg
push
pop
adc
cli
test
add
jg
add
jae
xor
cmp
sbb
mov
mov
les
add
push
sub
rcll
lds
stos
adc
mov
mov
add
sbb
mov
ljmp
aad
inc
xchg
add
mov
and
sub
mov
dec
int3
jns
imul
rolb
and
std
ljmp
pop
test
mov
push
popf
in
adc
and
shrb
push
je
enter
roll
mov
add
pop
js
xchg
repnz
addr16
add
int3
push
sbb
inc
adc
cmc
inc
cmpsl
jb
add
fisubrs
add
mov
mov
xor
fsts
outsb
movsb
cmpsb
jnp
add
cltd
imulb
xor
xchg
enter
fnstsw
test
pop
pop
into
dec
imul
in
loopne
mov
fdivrl
mov
adc
xchg
cmp
xor
add
cmp
mov
lahf
stos
bound
mov
pop
loopne
loop
xchg
popf
and
icebp
sub
fdivs
add
cmp
pop
mov
xchg
add
mov
into
mov
and
or
je
repz
sbb
push
mov
dec
lea
add
call
pusha
and
push
jge
and
jmp
pop
jne
adc
clc
mov
xchg
sahf
bound
ss
push
mov
shrb
inc
setle
out
add
sbb
inc
push
or
lods
xlat
adc
in
inc
mov
xchg
out
addb
mov
cmp
rolb
add
imul
cld
adc
cmpsl
test
lods
cmp
mov
dec
mov
dec
lds
in
mov
clc
addl
push
mov
les
mov
iret
sbb
push
push
hlt
fmuls
scas
lret
push
adc
imul
add
xchg
or
into
mov
inc
jno
inc
adc
cmc
addl
cmp
out
xchg
rorb
mov
sbb
in
das
adc
inc
mov
inc
mov
add
cli
add
sbb
dec
stos
mov
and
std
cli
popl
pop
xchg
mov
jbe
push
and
adcl
test
adcb
fsub
push
imul
adc
ja
in
add
dec
pop
mov
pop
arpl
clc
mov
push
mov
pusha
jns
xchg
inc
out
add
fildll
push
add
push
int3
mov
jno
fucomp
adc
push
nop
or
fistpll
lret
push
pop
neg
xchg
mov
in
xchg
out
enter
loopne
nop
pushf
add
and
pop
pusha
inc
cwtl
push
xchg
ljmp
pop
push
xor
jnp
xchg
add
push
lcall
imul
inc
sbb
cmp
add
jmp
loopne
inc
add
inc
dec
lods
or
push
nop
add
mov
lock
adc
mov
nop
push
out
add
and
dec
push
sbb
and
xor
xor
hlt
test
shl
or
push
dec
fadds
cmp
fwait
and
and
lret
les
fsubr
add
mov
pop
jno
mov
test
movsb
push
add
cmpb
out
cmc
push
push
lahf
sub
sub
or
rolb
xchg
jno
scas
add
push
or
loopne
outsl
and
dec
fmull
rolb
loopne
loop
popa
or
pop
cmp
add
loopne
and
mov
add
mov
and
in
push
outsb
ret
mov
rcrb
add
push
mov
stos
push
sub
mov
cs
ds
push
inc
mov
mov
add
je
aas
add
dec
call
aam
mov
add
pop
jmp
pop
in
add
cmpsl
push
mov
or
sub
rclb
lahf
cmp
push
jl
and
cmp
mov
mov
shlb
fadds
pop
inc
add
jae
fdiv
push
std
add
dec
fnstenv
arpl
cmpsb
addr16
out
cmp
sahf
rorb
mov
jb
test
ss
pop
clc
mov
sbb
push
pushf
mov
jmp
mov
mov
add
lock
sbb
or
and
aaa
jo
cmp
add
popa
xchg
jp
xchg
or
sti
cmpsl
stos
jnp
cltd
nop
add
jecxz
fsubrs
test
inc
lea
dec
sarb
add
and
sub
jo
imul
xchg
mov
out
ficoms
aad
and
add
int
call
mov
push
add
in
pop
mov
sarb
xchg
jb
push
or
bound
cltd
push
add
or
cmp
add
orb
jnp
or
pop
call
cld
sub
add
sahf
arpl
fwait
in
imul
jb
add
out
sbb
mov
outsb
push
jne
cmp
andl
enter
mov
outsl
jns
add
int3
sbb
xlat
jle
add
mov
cmp
in
pop
or
rcrl
adc
xchg
es
into
lret
push
cmp
out
sub
add
mov
mov
fidivs
adc
cmp
pop
ficoms
mov
xchg
ret
cld
mov
fldz
int
jnp
add
mov
sub
mov
push
sbb
lea
adc
loopne
repnz
bound
xor
in
in
aaa
insl
jmp
xchg
mov
sbb
pop
add
sbb
mov
jmp
xor
pop
enterw
stc
add
lcall
adc
insl
or
femms
dec
xchg
test
sbbb
shrb
jle
nop
add
jge
and
jnp
call
pop
mov
rclb
inc
mov
pop
fisubs
sbb
xchg
lods
mov
mov
movsb
xchg
xchg
mov
add
ret
fs
inc
cmp
xchg
add
outsb
loope
loop
test
mov
push
imul
mov
pop
inc
popf
loopne
ljmp
cli
push
add
lret
add
sbb
nop
ja
call
scas
add
inc
pop
out
or
adcb
dec
add
push
pushw
cmp
push
add
insl
fs
inc
mov
jmp
pop
mov
dec
xorb
cwtl
inc
sbb
lret
filds
js
adc
or
adc
inc
clc
mov
jle
and
push
xor
cld
adc
and
hlt
jb
push
or
adc
roll
cmp
cmp
jno
or
ret
push
sbbl
out
mov
pop
jae
inc
repz
add
in
imul
push
and
cld
mov
xchg
faddl
insb
cld
xor
cwtd
incb
pop
dec
cmp
in
xlat
arpl
test
into
or
cmp
or
shlb
fcompl
push
cwtl
jno
xchg
shlb
aad
dec
push
mov
fisttpll
rolb
add
xor
movsb
pop
addb
cmp
jg
mov
lea
addr16
add
xor
mov
stos
jmp
sbb
sub
add
push
lahf
repz
roll
xchg
sbb
push
sbb
dec
sahf
aas
leave
lds
jbe
pop
es
xor
jg
cmp
add
cmpsl
add
push
mov
xor
adc
das
sub
add
jg
jnp
push
loopne
jge
sub
frstor
out
jb
cmpsl
pop
jp
jmp
scas
test
ret
add
inc
loop
xchg
fildl
add
cmp
jae
cld
cld
jo
rorb
add
testl
mov
and
les
cmpsl
and
movsl
push
shrb
pop
pop
mov
out
add
vmwrite
cmp
subl
popa
add
incb
pop
mov
sbb
or
js
out
add
fisttpl
mov
adc
insl
fstl
add
mov
push
or
frstor
cwtl
pop
inc
adc
scas
add
push
mov
xor
inc
call
popf
cwtl
xor
adc
js
sarb
stos
cltd
mov
push
add
lock
inc
pop
jle
in
add
inc
mov
pop
push
int
or
dec
or
mov
iret
pop
test
repz
sarl
enter
sub
inc
cmp
out
bound
push
push
cs
pop
js
adc
xor
clc
repz
or
shrb
sbb
pushf
scas
push
shrb
pusha
fisubl
stc
inc
popl
out
mov
outsb
inc
out
push
mov
or
cmc
je
pop
xor
mov
push
sub
popa
movl
daa
clc
jp
out
mov
sarb
ret
dec
inc
add
lret
je
cwtl
add
pop
pop
ficoms
push
ljmp
test
jno
and
and
je
jbe
add
sarb
movsl
xlat
and
cmp
push
adc
shlb
sbb
add
fwait
inc
imul
add
xor
jecxz
scas
mov
pop
and
mov
adc
adc
cmp
in
test
sub
cltd
jno
adcb
jb
pushf
or
dec
pop
inc
xlat
and
into
cli
jmp
add
sbb
push
push
xchg
mov
mov
testl
or
ficoms
lock
xchg
xor
sti
adcb
inc
ficoms
pop
jle
or
mov
and
mov
fwait
movb
cmpsb
push
scas
or
or
fs
dec
lahf
adc
inc
pop
enter
cmc
incl
lahf
shr
rolb
xchg
mov
mov
and
add
mov
sub
loopne
andl
les
inc
dec
mov
mov
lret
xchg
push
pop
xchg
xchg
xor
add
and
dec
cmp
add
inc
lea
outsl
cs
mov
test
cmp
push
add
fcmovb
call
rclb
jmp
les
mov
sub
xor
cwtl
cmp
jl
aas
shll
jno
mov
xchg
loopne
pop
andl
xorb
clc
pop
push
or
cld
sub
in
cmp
or
or
xchg
scas
sbb
ret
inc
movl
jae
or
xchg
scas
add
mov
ss
dec
inc
rolb
loopne
xor
jle
and
leave
lea
jnp
rcrb
xor
sbb
sbb
fdivr
mov
inc
lahf
xor
repz
xchg
fdivrs
and
js
add
jecxz
pop
mov
jge
repz
mov
out
stos
repnz
xchg
mov
pop
orb
ror
mov
cmpsl
ds
out
mov
lahf
mov
loopne
mov
and
in
js
jl
test
shll
rcrl
push
clc
repz
loopne
mov
cwtl
in
and
jg
cld
cmpsb
es
sahf
adc
and
jb
in
inc
shrb
lret
add
mov
rcrb
arpl
test
or
clc
adc
inc
pushf
or
add
in
mov
add
jno
fstps
jo
adc
mov
rcr
or
add
daa
cwtl
mov
lds
or
cmc
je
cmp
xchg
add
nop
div
in
jns
out
aaa
outsb
wbinvd
or
xchg
push
push
jg
add
jbe
lock
es
sbb
outsl
sarb
int
cmp
inc
rol
mov
mov
insb
add
lock
in
jg
sub
add
mov
pop
and
add
mov
sub
lret
dec
push
pop
cmp
push
sub
adc
xchg
sbb
in
add
aad
std
mov
xor
pop
cmp
rclb
test
mov
sbbl
xchg
clc
and
cmp
lcall
adc
cmp
addb
add
enter
push
fnstenv
push
das
add
shll
dec
addb
mov
cli
sbb
jl
push
test
jp
pusha
xor
data16
or
rclb
outsb
subl
sub
fwait
pop
add
orl
xor
incb
mov
jp
out
or
sbb
out
fs
ds
lods
or
adc
or
notb
inc
in
jmp
add
shrl
jnp
add
addl
cwtl
sbb
jg
xor
xchg
xor
mov
xor
addb
loopne
testb
iret
dec
or
push
cmpb
push
popf
cmp
mov
xchg
jbe
sub
add
mov
inc
add
sub
iret
mov
xor
pop
add
pushf
pusha
bound
jecxz
push
fs
mov
jbe
call
dec
aad
sbb
lcall
and
rolb
xor
mull
les
out
mov
jecxz
mov
adc
add
mov
and
or
sbb
test
sub
sti
inc
mov
lods
jmp
test
and
mov
mov
mov
jl
sub
xor
and
or
mov
add
inc
cmp
les
imul
add
cld
pop
pop
or
loopne
nop
out
sbb
push
jb
or
lock
pop
add
in
cltd
and
mov
mov
cli
dec
mov
inc
and
push
int3
or
leave
push
push
scas
pop
inc
mov
and
dec
rclb
jle
cs
add
xor
mov
push
fcoms
shll
cli
add
ja
mov
call
popf
stc
jg
jne
rclb
jle
testb
in
cli
xorb
sub
ret
js
xor
mov
fisubs
fldenv
xor
icebp
out
aad
stos
cmp
enter
mov
add
mov
add
rcrb
bswap
jno
add
and
inc
sbb
and
mov
push
hlt
jae
sub
add
in
testb
cmp
out
mov
dec
add
cmp
sub
into
sti
sub
pop
test
adc
push
jo
sub
sbb
icebp
imul
sub
movq
or
test
and
call
mov
cld
mov
jl
add
lds
in
mov
lods
sbb
push
cmp
js
test
inc
lahf
add
sub
pop
add
lret
xchg
and
inc
mov
mov
in
add
or
xlat
inc
sbb
xor
enter
fsubr
sahf
mov
add
call
or
mov
mov
mov
jg
loop,pt
pop
leave
inc
or
push
adc
jle
imul
es
shrl
fisubl
inc
or
jl
add
or
add
out
jno
fsubrl
loopne
dec
dec
or
ror
dec
dec
push
or
pusha
push
jae
sahf
rol
mov
add
xor
in
or
sbb
scas
loopne
mov
divb
mov
add
pusha
mov
cs
ja
pop
cmpsl
mov
jns
xor
ljmp
mov
sbb
sti
aas
pop
add
push
xor
lret
mov
jns
add
sbb
add
out
cltd
adc
push
sarl
ss
mov
movsb
inc
rolb
nop
cld
jle
sbb
fmulp
inc
jmp
sub
and
or
push
daa
or
adc
in
add
adc
pop
pusha
adcb
cmpsb
out
scas
add
xlat
sbb
mov
push
sub
push
mov
call
test
jecxz
fcomps
mov
bound
cmp
loopne
dec
sub
or
push
pusha
cwtl
adc
fs
pop
cli
jmp
ror
loopne
stc
and
jmp
cmc
jae
add
addl
or
cmc
iret
add
clc
enter
pusha
add
rolb
and
mov
push
mov
jmp
push
sbb
icebp
cmp
cmp
xchg
pop
sbb
mov
fadd
sarb
and
add
adcb
xchg
pop
jno
add
push
int3
out
arpl
lds
mov
scas
rcl
push
bswap
hlt
or
fdivl
test
add
add
dec
sub
pop
sub
addb
into
add
nopl
push
add
dec
repz
popa
pop
dec
sub
push
add
pop
lock
push
xor
jb
add
adc
ja
mov
pop
pushf
inc
push
inc
xchg
adc
pusha
push
mov
add
out
rorl
xchg
fstl
clc
lahf
add
jnp
xlat
add
sub
dec
jns
inc
add
mov
divl
xchg
xchg
add
aaa
scas
fcom
xchg
movzbl
push
jbe
pop
push
dec
cmp
inc
aad
addb
bound
aaa
jecxz
imul
notb
fwait
cmpsl
cs
call
fnstenv
jmp
aaa
xchg
mov
scas
push
dec
jae
ret
xchg
cmp
lea
mov
outsl
adc
and
xor
lods
add
sbb
jns
lds
ds
push
adc
lret
pop
rclb
jecxz
pop
std
pop
adc
nopl
adcb
and
lea
add
inc
scas
sbb
mov
add
fdivs
cmpsb
add
sbb
add
jno
adcb
xchg
add
pop
icebp
scas
mov
push
mov
and
dec
add
mov
data16
lret
sub
les
adc
pop
xchg
sti
cltd
rol
push
daa
add
dec
jb
mov
pop
xchg
les
je
add
cmpsl
add
data16
js
add
sti
sub
lret
ja
jns
or
test
fbstp
add
jl
mov
adc
in
loopne
sbb
pushw
push
enter
mov
hlt
jnp
es
incb
call
dec
ja
add
rcrl
cmpsl
rclb
mov
int3
jns
dec
mov
mulb
or
cmp
cmp
mov
and
test
push
ret
mov
pop
adc
mov
shll
scas
aam
popf
cmpb
es
dec
inc
sub
loop
mulb
xor
cmpsl
xchg
mov
jns
and
adc
out
loopne
sbb
divl
and
fsubrs
movsb
cmp
add
jne
xorb
ds
add
add
stos
push
test
add
rcrl
jnp
into
and
push
add
or
sbb
add
xchg
sub
fstpl
jne
jo
test
pop
lret
je
and
test
cwtl
mov
add
jl
inc
adc
out
jl
xchg
jge
add
jmp
pinsrw
lods
sar
push
mov
cmp
mov
add
sbb
cli
sbb
jg
cmp
add
or
in
push
adc
push
inc
je
add
sbb
add
int
ret
dec
xor
jne
add
repnz
lods
test
fisubrl
sub
push
add
push
xchg
cmp
mov
jo
cld
sti
add
lock
jecxz
ds
add
jbe,pn
test
push
mov
push
mov
xor
xor
xchg
popf
push
rolb
fs
fldt
inc
jg
inc
add
mov
jecxz
xchg
mov
push
dec
adc
dec
nop
lods
mov
pop
addl
mov
sub
pop
lret
mov
outsb
xchg
nop
lods
lret
add
pop
gs
es
fwait
or
xor
into
add
in
jl
jae
ja
add
sub
pop
add
fs
add
dec
cmp
bound
cs
add
push
lds
mov
and
and
add
adc
add
pop
add
push
mov
ja
cmp
sbbl
hlt
repnz
outsb
dec
mov
scas
dec
inc
imul
mov
add
xchg
add
inc
mov
push
and
subl
scas
sbb
in
cmpl
mov
nop
mov
add
rolb
dec
jo
push
xor
ror
icebp
add
add
mov
test
or
mov
mov
xchg
xorl
fst
inc
pop
loopne
ja
cli
fwait
mov
pop
xchg
aad
dec
xchg
pusha
jns
sub
mov
fs
xchg
mov
jns
mov
pop
mov
jl
pop
rcrb
testb
imul
jg
movswl
mov
cs
clc
mov
or
lcall
int
dec
imul
or
add
push
inc
fwait
rcrb
cmc
aas
jns
cwtl
stc
sub
or
and
outsl
lret
in
mov
test
sub
inc
mov
and
add
inc
add
dec
stos
dec
add
push
cltd
mov
sahf
dec
fnstcw
pop
or
inc
add
push
add
push
adc
add
jl
daa
cmp
orl
out
add
fnstcw
in
jo
daa
add
int
rcrb
jle
cmp
pop
shlb
outsl
imul
xor
xchg
sub
and
out
inc
and
cwtl
cmp
faddl
aam
inc
lahf
sbb
cmp
enter
daa
pop
or
add
in
scas
dec
dec
jb
clc
stos
add
jno
enter
in
push
gs
and
add
icebp
jge
shll
inc
clc
or
inc
sti
xor
test
push
ljmp
push
stos
jl
pop
mov
add
mov
add
inc
mov
cmp
int
pushf
push
pusha
add
rcr
imul
add
ror
repnz
insb
pop
cmp
leave
cmp
cs
jae
add
stos
jecxz
int3
subb
push
or
in
add
adc
xor
or
inc
leave
std
push
pusha
js
loopne
out
mov
clc
xchg
rolb
aas
outsl
in
nop
out
jle
sti
loopne
movlhps
arpl
cmpsb
and
and
add
cmp
inc
and
jno
aaa
mov
int
jo
cmc
mov
add
daa
mov
or
cmp
ja
add
insl
arpl
sbb
mov
incl
add
inc
adc
add
scas
dec
cmpsb
call
add
mov
fildll
pop
jg
xlat
pop
mov
fwait
ret
lock
cmp
nop
fsts
data16
add
in
ja,pn
add
mov
push
cwtl
dec
int3
mov
add
test
jp
add
xorb
and
mov
push
xlat
adc
push
lds
pop
add
or
dec
stos
add
add
int3
add
sub
inc
movl
test
pop
add
mov
mov
and
mov
aas
and
jae
xchg
subb
add
gs
aas
es
fsubrs
dec
sub
movsb
imul
sub
add
mov
and
and
mov
sbb
stos
mov
idivl
lods
cmc
add
push
mov
in
xor
shl
cmp
add
stos
sub
data16
and
lea
inc
mov
test
adcb
loopne
mov
in
int3
cmpsl
data16
mov
fs
cmc
shlb
add
add
and
add
xlat
rol
or
adc
add
mov
and
mov
inc
repnz
add
popf
add
hlt
inc
cmp
or
jbe
inc
push
sbb
push
sub
vmwrite
nop
mov
jns
sub
fidivrs
sub
popa
add
in
cmpsl
sbb
pop
cmp
mov
arpl
adcb
cmpsb
add
rcrl
in
jge
add
es
add
gs
in
jno
and
pop
add
ja
roll
add
jmp
subb
enter
add
mov
or
and
cmpsl
imul
add
xchg
popf
test
into
cmpsb
ds
loopne
in
xchg
in
xor
and
mov
xor
sarb
call
xor
pusha
push
jns
aad
ret
push
add
push
push
sub
sarb
mov
and
add
jl
mov
mov
cltd
mov
add
push
adc
mov
add
in
push
sbb
mov
mov
and
add
enter
adc
or
and
jno
mov
dec
push
sbb
int3
pop
std
cmp
or
jnp
mov
test
ds
sbb
add
out
ljmp
add
das
adc
into
daa
clc
jns
shrb
jno
js
mov
repnz
movsl
sub
pop
push
push
stc
lea
cld
in
mov
cmovno
xor
lahf
push
out
and
add
movsb
add
or
loopne
push
jbe
sbbl
sahf
enter
mov
je
add
int3
xor
add
or
jae
or
and
loopne
adc
add
int3
mov
add
inc
cmp
and
jno
dec
pop
inc
mov
test
inc
mov
pusha
pop
pop
pop
cmp
popl
fbstp
jbe
add
mov
sub
mov
add
gs
int3
lea
pop
push
arpl
sbb
lcall
push
ds
fisubrl
movsb
cmp
out
fstpt
and
sbb
inc
mov
mov
flds
addr16
push
mov
cmp
add
dec
testl
cmp
push
cmp
jb
or
out
test
sub
orl
mov
fisttpll
pop
xchg
and
das
lcall
nop
add
add
dec
mov
test
add
ror
xchg
inc
cli
faddl
pop
sbb
pop
cmp
sub
lea
test
mov
inc
mov
addl
ficompl
lock
jecxz
and
or
cmp
add
jge
cmpsl
pop
lcall
hlt
je
rclb
cmc
cwtl
or
mov
sub
adc
ss
dec
mov
push
gs
repnz
xor
xor
mov
in
loopne
xor
sbb
testl
stos
sbb
sub
mov
push
rorl
push
pop
lods
in
mov
loopne
mov
test
mov
shld
pop
xchg
push
mov
stos
pop
sbb
orb
push
pusha
add
dec
mov
adc
xor
mov
lock
sbb
add
lcall
sbb
fisubs
add
ja
sbb
sbb
push
sub
mov
add
mov
leave
cmp
cmp
mov
cltd
js
and
das
add
mov
and
dec
jb
mov
push
incl
out
inc
loope
mov
or
fildl
xor
dec
repnz
dec
stc
and
push
mov
cmp
inc
add
cmp
subl
fbld
mov
mov
shlb
cltd
xor
xchg
or
fwait
sbbb
cmp
add
mov
add
jle
out
inc
ss
adc
les
cltd
add
jns
repz
mov
les
das
add
retw
rcrb
or
fstps
ja
or
xor
popa
in
dec
xor
shll
add
add
mov
nop
jb
cld
sub
mov
add
mov
ficomps
fdivs
and
xor
cmp
mov
xchg
inc
mov
jo
mov
andb
fs
mov
add
movsl
wbinvd
xor
dec
push
xchg
cmp
mov
mov
fwait
xor
call
or
cwtl
cli
jge
add
call
cmp
add
add
cmc
shrb
pop
mov
subb
jb
mov
add
cmp
jp
pop
pusha
call
gs
mov
scas
pusha
je
cltd
and
adc
imul
int3
push
mov
and
inc
ret
mov
movsb
mov
lods
sub
lcall
sub
pop
in
mov
xor
mov
mov
sbb
xchg
or
adc
loopne
push
push
pop
cmp
jbe
pop
mov
scas
mov
cmp
fistpll
add
into
jno
out
adc
mov
sahf
arpl
outsb
add
aas
ljmp
pop
sbb
aas
adc
add
mov
pusha
ja
outsb
and
adc
jbe
cmp
or
or
das
and
pop
add
lds
pop
sbb
out
clc
nop
xor
add
test
jns
add
jae
fistl
sub
cmpl
imul
lahf
int3
xchg
and
mov
dec
adc
xor
ret
pop
js
mov
cld
add
test
sbb
lahf
and
and
cltd
in
sbb
cwtl
hlt
jne
dec
addr16
cmpb
add
push
mov
or
cmp
hlt
and
adcl
jo
push
jmp
add
inc
cmc
xor
data16
aam
test
daa
mov
and
jb
sbb
jae
add
pushl
loop
adc
pop
outsl
loopne
jo
andb
xchg
arpl
lahf
pop
stos
sbbb
adc
add
lods
cli
bound
sbb
push
or
std
icebp
int3
pop
pop
ss
in
cld
push
mov
mov
mov
ffreep
add
push
addb
into
jb
sbb
les
inc
mov
mov
sbb
or
mov
jne
scas
push
inc
mov
add
cwtl
push
adcl
sub
mov
add
dec
xchg
lea
adc
cmp
push
and
push
and
push
cs
pusha
pop
inc
push
add
lock
add
fs
mov
fcmovbe
rolb
xor
add
push
nop
shlb
inc
jmp
xor
adc
and
jb
pop
sbb
fxch
add
cwtl
adc
add
fwait
and
and
add
jl
mov
sub
stos
pop
jecxz
nop
sbb
es
cmp
fdivs
fwait
jo
add
aad
shrl
xchg
mov
add
adc
movsb
stos
insb
add
and
xchg
jl
push
sarl
cmp
cmp
inc
xchg
imul
stos
std
add
xchg
scas
cmp
es
nop
cld
into
mov
loopne
fcomps
rcrb
xor
mov
push
xchg
jle
ret
add
jbe
inc
xchg
cs
jmp
pusha
add
outsl
push
dec
xchg
cmp
xor
or
mov
orl
pop
aam
ret
pushf
loope
pop
sbb
icebp
in
fnstenv
cmp
lret
pop
jb
and
dec
cs
setae
bound
movsl
add
addr16
xchg
paddw
xorb
jbe
icebp
subb
outsb
mov
mov
jne
bnd
pop
cmp
adc
mov
sbb
add
in
rcrb
in
sbb
enter
aas
das
xchg
fsubl
cmpl
add
xchg
xchg
push
sti
int3
andb
mov
cli
mov
bound
cmp
mov
cmp
jmp
shrb
aas
add
dec
clc
pushf
sbb
or
xchg
or
jl
call
mov
mov
xor
jo
pushf
fcoms
pop
pusha
sbb
mov
aaa
xchg
loop
shll
aaa
cmc
xor
subb
mov
pop
das
mov
add
into
add
xchg
mov
mov
mov
xor
insb
pop
jecxz
fistl
inc
mov
jle
push
cmp
pop
dec
push
push
cmpsb
push
rcr
jecxz
sbb
hlt
mov
rolb
mov
addr16
push
and
pushf
sbb
fsubr
jmp
add
xor
push
sbb
nop
cmp
or
pop
sbb
add
lock
push
xchg
insl
sbb
test
push
js
lcall
fisttpll
jbe
mov
repnz
cmp
sarl
fs
lcall
out
sti
nop
cmpb
in
call
xor
adc
push
jne
and
or
cld
mov
mov
test
or
es
mov
add
mov
xchg
outsb
insl
mov
lock
xorb
push
push
xchg
movsl
lahf
aad
add
faddl
in
ja
jmp
lds
adc
lods
rolb
dec
xlat
cmp
add
cli
sbb
sub
dec
add
stc
cmp
ret
cmc
cli
ja
mov
sub
cmpsl
mov
jp
inc
xchg
pop
sarb
outsl
mov
inc
add
sbbb
jbe
cmp
add
or
rorl
add
pop
test
add
subb
push
inc
cmp
pusha
mov
add
jbe
pop
orb
sahf
mov
dec
icebp
lods
dec
or
jp
inc
in
push
popl
roll
sbb
mov
lock
jbe
imul
sub
cmp
lods
cmp
and
repz
test
add
jne
inc
leave
dec
cmc
adcb
add
or
psubsw
rol
dec
cmpsb
inc
push
or
inc
fisttpll
xor
push
push
fimuls
add
cmp
test
movsl
ret
and
int
adc
test
push
pop
jp
jnp
rcll
repnz
add
lods
testl
add
sbbb
sub
fs
jle
jp
ds
int
lret
sub
lcall
das
imul
rcr
add
ret
or
cmp
xchg
leave
cmp
dec
rclb
bsr
add
adc
repnz
sbb
aam
sub
sub
shrb
or
fldcw
or
adc
push
cmp
pop
nop
add
add
in
jne
push
sbb
jns
jno
cltd
clc
dec
in
add
inc
xchg
and
mov
sbb
pop
shlb
lods
ja
js
add
and
jl
les
xorl
bound
inc
dec
fbstp
add
insl
inc
aam
pop
mov
frstor
pop
clc
mov
pop
dec
add
popf
inc
sbb
add
mov
jge
mov
fwait
lock
adc
jae
mov
sti
loop
and
add
pop
push
or
mov
cmpl
add
outsl
push
pop
xor
fstpl
push
mov
mov
test
or
mov
lods
push
jg
xchg
jo
cmp
xor
jle
push
push
push
pop
push
fcoml
mov
cmpb
imul
dec
in
inc
sub
mov
faddl
xor
cmpsl
call
jae
inc
scas
adc
cltd
and
push
je
push
and
and
out
lret
arpl
pop
jnp
rorl
loopne
int
in
add
js
mov
inc
or
lcall
daa
jb
cmpsb
pop
fs
ss
lock
mov
loopne
xchg
add
testl
xchg
arpl
add
xor
cmp
stos
ljmp
jno
sbb
pop
dec
fcoml
pop
das
add
xor
jne
scas
fwait
adc
sbb
xor
mov
adc
inc
les
pop
nop
sbb
xor
mov
sbb
jbe
adc
inc
push
pusha
xor
pop
dec
jmp
movsb
inc
xor
adc
xlat
xor
add
jg
out
xchg
xor
add
lret
shrl
and
cmpsb
push
rep
jg
insb
std
imul
lods
cmc
test
rcrb
add
mov
movsl
fmull
int3
xchg
sub
push
scas
fldenv
and
pop
xchg
sub
fstl
pusha
iret
jbe
leave
cmp
test
cmpsb
rcll
addl
sbb
dec
stos
cmp
ror
loope
sbb
jb
xchg
rcrl
cmp
pop
fs
jo
addb
adc
jbe
pop
inc
inc
or
cmp
adc
sub
push
mov
fcmovbe
icebp
jbe
mov
or
sti
sbb
daa
sub
cmp
ljmp
xchg
fldcw
adc
clc
clc
inc
and
mov
test
inc
das
fs
mov
xor
dec
push
repz
inc
adc
ficoml
mov
int3
add
sub
adc
cmp
std
xchg
fstpl
inc
or
xor
lock
push
sub
add
dec
fs
shl
or
pusha
int3
cwtl
inc
dec
mov
fs
jg
or
stc
imul
sub
and
xchg
loope
fs
lods
das
pop
mov
or
jecxz,pn
cmp
jo
xor
add
mov
bound
mov
psubd
add
push
in
sbb
sbb
pusha
add
xor
and
jg
incl
aas
mov
dec
mov
popf
add
das
lock
cmp
adcl
cmpsb
mov
pop
rcll
movsb
inc
pop
lcall
inc
mov
sbb
out
jae
shl
in
dec
testl
dec
mov
xor
add
or
dec
lea
movl
xchg
cltd
add
push
or
lds
out
jmp
add
std
pop
roll
daa
stc
inc
idivl
or
in
or
lret
aaa
sbb
roll
js
bound
rcll
push
mov
or
dec
push
or
fmull
mov
push
pop
inc
sarl
rclb
pop
add
mov
inc
pop
add
inc
inc
rorb
stos
add
shrl
in
fstps
xchg
jae
push
lret
mov
pop
sarb
adcb
or
inc
sbb
push
fadd
jo
inc
pop
dec
adc
insl
push
add
js
jb
cltd
inc
enter
nop
bound
push
popa
stos
pop
push
and
xor
add
mov
dec
lahf
push
loopne
push
add
rclb
mov
mov
leave
jge
add
sub
and
sbbb
sbb
xchg
inc
outsl
and
add
adc
xchg
jo
aam
dec
push
sub
adc
scas
int
push
cmpsl
dec
fisubs
push
sub
jp,pn
mov
pop
lods
sub
mov
mov
adc
mov
mov
add
push
xor
cmp
data16
aam
xchg
andl
out
andb
cmpsb
in
adc
mov
adc
jae
lahf
in
cmp
mov
dec
xchg
mov
iret
push
sub
outsl
xchg
sub
ficomps
dec
popa
sub
xor
ret
inc
xchg
into
jb
pop
sbb
mov
mov
out
xchg
mov
mov
stc
mov
push
push
cmc
lds
and
push
ret
dec
and
orb
and
loopne
das
and
nop
scas
int3
sub
jne
add
inc
adc
mov
adcb
add
jb
imul
loope
sarl
mov
xchg
jbe
push
adc
rolb
lcall
mov
dec
mov
mov
rorb
push
adc
push
fldl
sub
push
stos
cmp
sbb
xchg
les
lea
daa
in
push
push
fstpl
orl
jae
or
mov
xor
sarb
movsb
add
pusha
sub
faddp
addb
sahf
xchg
mov
pop
shrl
das
sub
pop
xor
jnp
cld
orb
cld
sti
add
xchg
out
mov
shll
push
jae
push
push
dec
add
in
testl
fimuls
pop
clc
shl
jae
add
mov
mov
les
add
test
int3
sahf
add
mov
shl
jns
ja
or
adc
mov
dec
lret
push
mov
add
aad
in
jp
xor
cs
jo
addr16
jae
fisubs
inc
or
sbb
jo
mov
sbb
dec
inc
mov
pusha
adcb
adc
inc
leave
test
pop
inc
movsb
mov
dec
stos
and
add
scas
clc
fildll
lds
mov
pop
out
jle
mov
add
stos
adc
insb
jnp
pushf
lods
popa
sub
sub
ss
inc
movsb
inc
and
push
lock
inc
jl
mov
add
inc
std
addl
xchg
pop
mov
shll
add
fidivrs
ja
dec
iret
add
out
mov
adc
xchg
add
shll
sbb
mov
lret
nop
xor
mov
repz
add
inc
aaa
lea
leave
jmp
fsubrs
xor
add
testl
pop
fs
sub
mov
dec
push
adc
cmpsl
push
imul
imul
xor
xchg
stc
jmp
sbb
lods
pop
add
mov
loopne
mov
aas
add
adc
xchg
andl
push
add
jl
pusha
sti
shrl
int3
sbb
sarl
jp
inc
pop
es
bswap
mulb
pop
fsubs
inc
or
push
xchg
subl
fsts
push
test
into
lods
adc
out
cltd
add
fs
aas
add
mov
sahf
mov
sub
fbld
stos
addr16
or
add
dec
and
xor
fs
mov
mov
stc
pusha
push
pushf
or
mov
mov
adc
xlat
add
jmp
mov
repnz
out
push
add
lods
in
cmpsb
test
pop
lcall
loopne
lock
fdivrs
call
mov
adc
loop
adc
lea
fildll
cwtl
push
into
adc
inc
mov
pop
and
jo
or
inc
adc
mov
add
and
push
fs
inc
and
insl
inc
or
mov
mov
test
push
push
pop
sbb
or
inc
jmp
rcl
dec
add
mov
push
cld
mov
movsl
loope
xchg
mov
cwtl
cmp
cs
dec
and
mov
fcmovnu
mov
jg
and
adc
mov
rorb
pop
test
and
and
cwtl
adc
in
sub
add
mov
mov
pop
jo
pop
add
repz
jae
jbe
xchg
addb
or
cmpsb
js
cwtl
dec
inc
push
xor
cmpsl
pop
jns
xchg
mov
and
mov
pop
push
inc
jne
or
xorb
or
rclb
das
repnz
xor
xchg
pop
dec
pusha
adc
add
into
push
pop
pusha
cmc
jp
insb
inc
mov
fs
dec
inc
data16
daa
stos
add
xor
push
and
xchg
add
incl
push
rcrl
add
sbb
clc
xor
dec
dec
rclb
adc
jbe
xchg
insb
cmp
pop
lock
xchg
test
cmp
aas
or
in
or
jl
xlat
push
inc
mov
andl
xchg
push
cwtl
test
gs
xchg
jno
filds
lods
iret
mov
popa
cmc
outsl
es
sub
dec
into
mov
cld
lret
push
add
lcall
add
loopne
or
mov
shrb
ficoml
pop
jg
out
add
cltd
in
xchg
les
xchg
xlat
and
add
imul
add
pop
add
aam
sbb
inc
jae
into
je
outsl
popa
out
adc
adc
js
js,pt
add
aas
xor
or
ret
out
sahf
sub
and
and
testb
loop
cmp
or
mov
add
dec
in
clc
xchg
test
jmp
mov
out
or
aaa
arpl
pop
jp,pt
mov
das
xchg
bound
inc
push
xchg
aam
mov
lret
or
xor
fstl
jmp
je
add
dec
push
and
shlb
jns
xchg
int
push
and
xchg
mov
shlb
test
mov
xor
call
push
xchg
je
repnz
push
cmp
push
xor
jg
mov
dec
enter
fcmovbe
lods
movsb
add
outsl
push
xor
sub
push
cmp
clc
mov
inc
frstor
mov
add
push
imul
jne
sub
sub
jns
and
push
rolb
push
inc
test
stos
inc
shll
inc
jno
add
pop
jl
and
sbb
sub
sbb
ret
or
cli
ss
add
pop
sbb
arpl
inc
mov
jnp
jg
xchg
or
js
adcb
dec
jo
pop
xchg
add
sub
add
mov
repnz
add
jmp
mov
adc
adc
push
sbb
xor
add
xor
adc
push
adc
divl
mov
dec
mov
and
mov
xchg
icebp
add
mov
roll
and
cs
add
mov
sahf
push
rol
pop
or
inc
cmpsb
dec
jle
adc
or
mov
sub
inc
pop
xchg
xlat
xchg
pusha
in
fstl
adc
dec
jmp
cld
bound
idivb
and
repnz
out
push
sbb
jge
dec
and
push
push
add
dec
sarb
adc
pop
dec
inc
sub
enter
inc
ret
js
adc
add
cmp
lahf
mov
cmp
repnz
cmp
shr
mov
push
arpl
dec
mov
add
loop
fistpll
jb
rolb
push
insl
popf
dec
cmp
and
mov
cmp
loopne
int
icebp
aas
sbb
mov
xchg
je
adcl
outsb
cmp
js
imul
std
aam
cmp
mov
pop
hlt
xchg
and
inc
cmp
mov
mov
mov
pop
loopne
add
adc
fdivs
popl
divl
les
add
xchg
mov
ret
cli
push
mov
xor
mov
loop
in
jl
xor
mov
jae
or
xor
adc
call
daa
sahf
ljmp
pop
test
inc
andl
push
jp
call
inc
testl
fisttps
sub
pop
jle
xchg
stos
lock
int
mov
pop
test
inc
out
inc
inc
js
ljmp
jbe
mov
adc
push
sub
xchg
xchg
leave
sub
jne
add
into
adc
rorb
outsb
dec
fisttpll
sub
out
jo
mov
iret
in
inc
push
rolb
jecxz
mov
dec
sub
insb
add
out
mov
pop
add
add
and
cmpsb
xchg
ficoms
fmull
lods
rcll
movsl
pop
push
test
push
hlt
inc
mov
xor
add
mov
imul
cmp
mov
clc
rcrb
pop
dec
dec
loopne
leave
inc
jecxz
add
roll
and
mov
push
clc
dec
xor
orl
lcall
add
add
ret
clc
pop
repnz
arpl
popw
test
lock
add
push
popa
pushf
sti
xor
pop
inc
or
adc
cmpl
in
and
bound
test
sub
or
push
out
ss
xorl
adc
cmp
cmp
add
fadd
and
clc
xor
shl
inc
dec
imul
aam
outsb
add
aaa
pop
cmp
jae
and
jo
sub
lcall
push
jbe
subb
pop
xchg
push
ljmp
outsl
mov
in
pop
enter
xor
jno,pn
jnp
adc
psrlq
inc
jo
or
mov
mov
mov
je
fwait
negb
pusha
mov
in
push
insl
orl
inc
pop
pushf
loopne
pushf
mov
or
ror
add
pusha
add
xor
movsl
stc
mov
pop
cwtl
call
adc
mov
enter
inc
pop
lcall
bound
mov
sub
cltd
in
mov
sarb
into
insl
inc
add
std
mov
jbe
jns
add
popf
xchg
xor
adc
or
fmull
push
xor
movzbl
inc
mov
add
out
jg
cmpsb
inc
add
insb
enter
pop
mov
push
pushf
sub
addl
lock
les
sub
cwtl
jl
ss
inc
sbb
test
sbb
in
movsb
xchg
add
sbb
mov
or
push
cltd
and
addl
icebp
mov
adc
repz
test
add
cmp
ljmp
jnp
cmp
lods
rclb
cmpsl
hlt
sub
call
xor
insb
fdivl
rorl
stos
dec
add
pop
inc
decl
mov
jo
add
push
inc
in
pop
outsb
jb
inc
addl
dec
add
mov
in
jecxz
push
xchg
mov
push
push
clc
movsb
les
add
rolb
inc
add
andb
sbb
mov
lret
fisubrl
add
inc
repz
pusha
adc
dec
rolb
enter
pop
xchg
jno
mov
jbe
add
mov
dec
imul
popl
pusha
stos
andl
call
inc
adc
or
or
xor
subb
cltd
test
sub
add
mov
sbb
gs
incb
dec
outsl
shlb
xor
or
aas
jecxz
cmpsl
and
cltd
sahf
and
pop
data16
xchg
sub
xchg
mov
mov
dec
rcr
cwtl
test
mov
inc
rclb
mov
jnp
xchg
mov
jp
mov
scas
dec
in
inc
dec
push
push
cmp
and
ljmp
mov
in
rorl
dec
jg
shll
movsb
pcmpeqw
or
shr
movsb
pop
cmp
xchg
nop
inc
notb
outsb
push
mov
inc
add
mov
mov
in
jp
popf
std
rcrl
xchg
rcl
repz
push
les
bound
pusha
add
insb
adc
mov
xor
pop
and
push
js
inc
in
add
ss
movsl
jae
daa
pop
cmp
les
inc
lret
js
jo
sbb
adc
add
adc
aam
lds
cli
and
nop
push
xchg
xor
mov
push
sub
pushf
push
jge
in
in
insl
xor
pop
inc
add
lret
js
push
cmp
inc
addb
cmpsb
mov
popa
pop
leave
hlt
bound
lods
roll
xor
jg
xchg
stc
mov
faddp
mov
mov
adc
xor
cli
add
das
dec
lods
pop
cltd
into
std
xchg
adc
xchg
adc
dec
aam
push
mov
subl
pop
jmp
push
fcom
pop
pop
add
imul
js
dec
sbb
and
xor
popa
add
and
and
lcall
cmp
jmp
sub
popa
xchg
aas
add
sbb
divl
gs
outsb
add
ljmp
push
cmp
pop
jne
mov
sbb
rcl
sbb
and
dec
cmp
dec
nop
fimuls
cmp
inc
adc
mov
jmp
jb
inc
mov
movsb
cmpsl
out
call
or
sub
roll
add
sahf
mov
mov
ret
rorb
cmp
push
push
shll
add
lahf
pushf
ss
or
rcl
mov
in
je
idiv
and
imul
loopne
out
xchg
cwtl
add
jge
pop
mov
pop
or
faddl
inc
imul
arpl
adc
lds
pop
imul
test
sub
inc
fwait
and
repnz
je
shlb
andl
popa
dec
dec
adc
lock
imul
sub
cwtl
fs
rcrl
adc
or
adc
mov
inc
ficoml
insb
jne
enter
jae
and
in
ljmp
add
mov
mov
fisttps
nop
add
mov
adc
push
pop
fadds
ret
popf
sahf
mov
inc
cwtl
mov
or
xor
xchg
addr16
lea
shrb
and
push
mov
jns
ret
fiadds
jno
inc
lods
pop
mov
cmp
cmc
fs
rcll
sbb
pop
cmp
and
dec
or
or
or
fmull
push
cld
mov
push
mov
repnz
pushf
add
inc
inc
subl
out
jae
sub
in
pop
adc
or
mov
or
rorl
sar
xor
cli
adc
test
or
jge
dec
aas
adc
pop
jg
add
and
ja
push
enter
test
aas
sbbb
sbb
xchg
add
movsb
int3
rcrb
shrl
faddl
hlt
jbe
push
inc
ja
cmpsb
cmpb
cld
add
loope
clc
mov
call
mov
inc
outsl
and
pop
dec
add
cmp
jge
cmpsb
or
jg
inc
sbb
outsl
aad
jno
adc
sbb
iret
clc
js
dec
xor
test
das
cmp
fwait
cmp
nop
and
into
inc
adc
loopne
add
mov
je
enter
cmpsb
iret
cmpsl
mov
cmp
sbb
clc
cmp
add
stos
jo
in
mov
mov
aam
mov
mov
ret
gs
xor
out
or
jae
cmp
adc
adcl
jbe
adc
mov
add
frstor
mov
mov
and
addb
lcall
mov
scas
mov
loop
add
mov
cmp
dec
ds
push
jl
jnp
scas
inc
loopne
cmp
int
push
cld
rclb
in
adc
adc
push
push
cli
cld
adc
xor
outsb
ret
add
in
add
xchg
sbb
fstpl
arpl
add
push
cmp
mov
add
std
xor
sub
add
and
das
frstor
hlt
adc
cld
xorb
mov
add
mov
fildll
sbb
shrb
dec
or
fldl
adc
adc
mov
andb
call
jge
jnp
xchg
inc
mov
sbb
mov
int
inc
out
adc
test
dec
pop
daa
inc
mov
aad
psrlq
cmpb
mov
fadds
pop
loop
add
les
pop
mov
in
push
sbb
jp
or
pop
inc
lea
pop
nop
lods
jbe
popf
adc
add
test
mov
adc
ljmp
pop
out
repnz
xchg
js
mov
inc
adc
loope
rorl
mov
pop
dec
xchg
rcrl
jo
push
adc
aaa
mov
roll
rcll
sbb
test
pop
dec
push
xor
aam
lcall
push
outsb
dec
add
lods
jecxz
clc
mov
xor
or
rclb
cli
push
cld
mov
dec
add
sub
cmp
xchg
lahf
js
addl
jp
sub
cmpsl
fcoms
push
mov
sbb
out
sub
mov
daa
scas
jae
xlat
sbb
and
jp
arpl
cmp
add
jnp
jb
inc
test
lret
add
and
shufps
test
loop
jmp
sbb
xor
rorb
fcomps
mov
pop
cmp
adc
xchg
pop
cmp
mov
sub
mov
fcoms
add
or
push
push
xlat
add
xchg
jnp
pusha
loop
lret
out
ficoms
andb
sbb
add
cmpsl
push
subl
aad
cmp
and
sbb
inc
inc
clc
mov
cmpsl
mov
sub
js
bound
fstl
ss
mov
addb
add
xor
sbb
fxch
jmp
add
outsl
stos
add
repnz
sbb
push
xadd
insl
loopne
or
xchg
add
mov
mov
cmp
lret
in
add
mov
mov
xchg
cltd
add
xlat
pop
shll
mov
inc
add
mov
scas
or
fwait
imul
aaa
icebp
addb
and
adc
xchg
fs
sub
rcrb
insb
add
pushf
mov
push
stos
add
xor
cmp
xchg
jmp
jno
and
xlat
and
inc
and
and
xor
repnz
adc
lods
ret
shufps
jl
add
mov
mov
jp
add
sub
js
and
sar
loopne
fadds
xchg
loope
popa
push
lret
ljmp
pop
repnz
jle
xor
pushf
jg
sbb
xlat
jo
add
jmp
outsl
mov
shll
push
mov
sbb
popa
xlat
popa
sbb
cwtl
dec
add
push
xor
xchg
ja
add
ds
jo
mov
add
scas
jecxz
out
or
aaa
pop
pop
nop
cmpsl
punpckldq
std
or
adc
xchg
lahf
cmp
test
and
mov
cmp
mov
mov
fiaddl
mov
mov
sbb
push
fsubrp
pop
xchg
jbe
pop
ss
leave
sbb
pop
loop
movsb
fwait
cld
loope
cmp
loopne
and
daa
pop
add
jmp
mov
jne
add
iret
das
mov
cli
fsubs
inc
pop
sub
pop
inc
mov
scas
and
test
aaa
pop
std
push
loopne
incl
jge
jae
add
addb
add
xchg
xor
mov
in
add
mov
add
icebp
or
imul
fmull
cmpl
lds
cld
enter
add
pushf
push
popf
add
xchg
jp
and
adc
aad
int3
adcb
or
mov
pop
popf
jl
xchg
jnp
inc
in
mov
add
in
xor
sbb
and
pop
xorl
push
std
xchg
je
sub
in
dec
push
es
sub
aam
pop
incb
fnstsw
and
shrl
push
test
sub
sbb
aaa
ffreep
mov
mov
aam
push
dec
jne
add
lea
dec
inc
add
pushf
mov
rcrb
shrl
pop
push
int
pop
popa
pusha
loope
inc
pusha
gs
dec
sub
mov
xchg
add
xlat
pushf
rolb
jp
or
in
dec
mov
or
addr16
inc
fistl
push
nop
test
ficoms
roll
sub
mov
ret
push
stc
popa
fiaddl
mov
arpl
add
jl
bswap
fstpt
push
mov
mov
adc
jl
sub
inc
sub
sub
and
add
cmpsb
stos
ret
rorb
mov
mov
pusha
jmp
sub
add
or
xchg
pop
ret
jmp
jne
or
out
iret
cwtl
sub
sbb
xchg
bndstx
push
add
cltd
push
popa
pop
clc
sub
cwtl
pushf
jl
pop
pop
scas
xor
shlb
inc
shlb
push
ds
hlt
mov
and
cmc
sbbb
lods
mov
fadd
ljmp
imul
cmp
and
mov
jle
adc
cltd
fcomp
dec
jb
xor
adc
dec
inc
dec
inc
jl
jecxz
fnstenv
call
data16
xor
pushf
mov
sbb
mov
insb
je
rcll
mov
in
xor
ret
std
or
je
add
iret
push
mov
outsl
xchg
inc
sahf
clc
repnz
mov
xor
test
mov
sub
pop
shll
lret
mov
inc
lock
mov
mov
mov
test
outsl
pop
dec
iret
mov
mov
adcb
add
or
mov
je
inc
cs
aaa
add
adc
lods
pop
mov
outsl
pusha
mov
add
insb
cwtl
jp
loope
cli
in
pusha
aam
and
sbb
cmp
cmp
or
add
adc
out
add
inc
xchg
add
mov
movsb
movl
fs
adc
mov
adc
add
dec
xchg
pusha
aaa
test
push
fildl
aaa
or
or
repnz
iret
adc
inc
repnz
mov
nop
or
mov
dec
loopne
leave
dec
add
and
sarb
xor
cmpb
push
inc
ja
int
bound
mov
idivb
mov
ja
add
sbb
dec
sub
rcll
fwait
xchg
sbbb
outsb
ret
movsl
cmp
mov
add
and
push
mov
call
cmpsl
or
fwait
mov
cmp
mov
sbb
xor
test
sub
mov
test
inc
sub
lret
je
mov
jmp
fdiv
lea
push
ficoms
frstor
push
repz
lods
dec
or
loopne
mov
rolb
push
add
popl
das
je
xchg
mov
xchg
add
inc
xchg
ss
sbb
stc
test
das
in
aas
xchg
repz
cmpsl
pop
push
sub
addb
inc
mov
jge
fs
adc
add
jo
add
jbe
repnz
push
fistps
popf
add
sbb
mov
aam
je
movsl
out
or
daa
mov
push
and
mull
sub
aaa
inc
xchg
jb
push
cwtl
add
cmc
out
call
movsb
jns
addb
or
or
ss
and
movsl
mov
and
adc
add
push
dec
testb
jo
das
xchg
mov
add
xchg
movsl
es
xchg
add
scas
fadds
mov
cmp
out
sub
mov
mov
out
adcb
mov
mov
insb
jle
lock
add
xchg
lods
icebp
adc
das
xor
inc
push
pop
xchg
add
das
subb
pop
dec
pop
and
xorb
and
add
lods
xchg
mov
or
and
fcoms
xchg
mov
push
jb
int3
cmp
loop
add
popf
mov
add
xchg
dec
sub
add
cwtl
mov
pusha
rolb
xchg
stos
add
lcall
adc
add
sub
gs
and
add
stc
xor
sbb
jge
pop
pop
adc
add
mov
out
cmp
repnz
hlt
insb
and
jmp
add
xchg
pusha
mov
aas
add
xchg
outsl
jle
cmp
pop
sub
ret
mov
adc
xlat
xor
adc
scas
stc
push
pusha
sbb
adc
mov
add
ret
aad
fisttpll
and
mov
jp
and
and
add
push
xor
lret
pop
enter
orb
pop
lods
xchg
add
sub
lock
stos
and
add
push
add
orb
bound
cmp
stc
iret
add
xlat
mov
mov
js
rdtsc
push
add
add
jecxz
push
fmull
push
sub
pushf
push
mov
aad
xor
cmp
pushf
ficoms
cmp
lcall
xchg
xchg
addl
inc
add
bound
add
cld
and
jecxz
in
mov
push
add
in
lods
subl
jbe
cmp
inc
or
or
out
nop
add
cmp
movb
sub
cltd
push
dec
in
cmp
push
add
xchg
lea
cltd
das
sbb
mov
mov
test
inc
add
dec
mov
repnz
in
sarb
push
or
pop
call
mov
xchg
and
inc
testl
or
jecxz
les
popf
jg
bound
lea
std
pop
inc
mov
int
add
jbe
andb
xchg
inc
cmp
std
and
nop
int3
push
mov
ds
or
sbb
test
xchg
mov
xor
insb
or
rcr
adc
and
dec
int3
add
mov
mov
mov
mov
mov
inc
jae
cmpsb
mov
adc
dec
enter
push
sub
fstl
sub
std
dec
nop
mov
jmp
push
add
jbe
add
in
sbb
xor
int3
add
mov
mov
cwtl
add
add
inc
clc
nop
into
sbb
jo
xor
xor
sbbl
add
subb
add
xor
lock
mov
mov
dec
stc
loopne
xchg
lock
or
je
jno
aam
xchg
into
inc
xor
cld
push
bound
int3
inc
int3
push
and
std
pusha
dec
loop
mov
push
or
addb
filds
aam
inc
mov
cmp
cmp
addl
push
mov
mov
stos
mov
and
xor
mov
xchg
js
mov
add
mov
imul
stos
mov
test
mov
jge
or
jb
ljmp
outsb
les
sbb
mov
in
push
sub
loopne
add
pop
xor
jg
sub
aam
adc
dec
cmp
adc
pushf
push
test
mov
in
aad
fcmovbe
ss
dec
rolb
andb
aas
fdivs
and
adc
mov
nop
or
add
jae
xchg
xchg
push
cmp
clc
add
lock
fld1
pop
push
mov
jnp
in
mov
xlat
push
jne
mov
nop
insb
jle
into
cld
mov
xchg
add
hlt
and
xchg
mov
rcll
nop
hlt
loop
insb
rcrb
js
inc
inc
xchg
ss
outsl
and
jbe
hlt
movsl
les
inc
int3
add
dec
cmp
add
cld
iret
push
xor
pop
mov
aaa
and
mov
andb
dec
flds
bound
mov
ss
inc
lret
hlt
sbb
lock
test
dec
sub
adc
and
mov
in
adc
push
loopne
fcmovnb
cwtl
mov
inc
xchg
inc
dec
mov
aam
out
mov
sbb
push
lahf
fdivrl
dec
sub
lds
xchg
jne
lods
mov
and
mov
leave
sub
jno
int
shrb
ds
sbb
leave
mov
pop
add
push
bound
xor
pop
jecxz
sub
movsb
sbb
xchg
or
and
or
scas
js
push
jbe
mov
and
idivl
push
mov
aam
std
cmp
sub
add
mov
add
xchg
xor
aaa
cwtl
ss
inc
pop
int3
cmp
add
push
mov
jle
dec
frstor
call
outsl
pusha
aaa
shrb
fidivl
jbe
jmp
sbb
sub
mov
jp
cmpb
aam
add
sahf
movsl
jl
subb
jnp
frstor
popa
inc
xor
fmul
scas
xchg
push
in
cmpl
popf
xor
jno
add
stc
xchg
dec
add
int
in
mov
push
dec
mov
pusha
cltd
aaa
xor
pop
andb
daa
pop
mov
mov
pop
xchg
cmp
add
cmp
push
push
or
insl
and
or
int
adc
ss
lahf
add
mov
es
xchg
mov
cmp
cli
in
std
aam
push
hlt
cmp
add
push
xor
repz
add
lods
movsl
stos
push
jnp
push
jbe
or
cmp
add
test
dec
xor
pop
pushf
mov
dec
add
cmp
pusha
pusha
mov
add
push
lret
dec
cmp
mov
je
popa
sarl
cmp
sub
xchg
and
call
pop
mov
and
fsubrs
orb
arpl
sbb
cmp
inc
add
hlt
mov
sub
and
cld
mov
add
add
jns
pushf
mov
cmp
les
cwtl
pusha
mov
fbstp
jnp
jl
test
mov
decl
and
adc
xchg
jb
add
push
mov
dec
iret
daa
xor
sarl
clc
orl
in
int
pop
xchg
das
add
sub
test
cmp
clc
or
xchg
jl
pop
push
jo
add
nop
xor
stos
sbb
lea
pop
lcall
rolb
popa
incl
in
mov
jmp
repnz
je
mov
mov
addb
out
jnp
iret
hlt
xor
enter
xlat
xor
xor
mov
and
fldcw
jb
add
outsl
mov
inc
hlt
adc
and
add
repnz
or
shll
stos
pusha
add
pop
jo
sub
add
je
clc
and
fcmove
inc
and
imul
rcrb
add
fisubs
inc
aam
data16
push
mov
jb
in
xchg
sub
pop
pop
add
insb
or
jo
push
sub
sahf
mov
and
ror
repz
decl
jle
pop
out
add
add
repnz
je
xchg
mov
add
bound
std
push
mov
cmp
je
outsl
nop
loopne
push
in
int3
mov
cmp
stos
mov
push
mov
mov
cmp
call
push
add
mov
cmc
push
rcrl
cmp
cmpb
ja
push
testl
or
add
aam
add
std
popa
pop
mov
repnz
mov
mov
cmp
or
in
lds
push
inc
sub
xchg
rclb
pushf
outsl
jo
hlt
xchg
add
fwait
pop
mov
and
fildl
jmp
fisubs
icebp
rolb
inc
cmp
test
sub
ja
clc
sub
fldl
add
sub
mov
pushl
es
cmp
inc
add
sbb
pop
inc
and
pop
pushf
add
ret
stos
std
pop
pop
cmp
or
mov
jnp
call
add
outsb
inc
sub
mov
mov
add
lret
imul
add
sbb
push
sbb
test
add
mov
repz
out
cmp
dec
dec
les
cmp
xor
ljmp
pusha
mov
int3
icebp
lock
roll
mov
rorb
pop
sbb
int
test
jns
add
mov
dec
and
repz
cld
test
xchg
inc
mov
mov
xor
dec
dec
push
xchg
or
cld
mov
aaa
out
add
and
popl
add
cmp
inc
out
xlat
xchg
enter
movsb
faddl
scas
stc
adc
add
test
sub
aas
pop
cmpsb
inc
or
mov
dec
icebp
add
les
xchg
leave
add
sub
xor
fsubr
jp
inc
mov
lret
push
and
xor
iret
mov
dec
clc
add
test
pop
xor
ds
add
mov
pusha
mov
ror
test
sete
inc
aaa
push
jbe
jo
mov
push
inc
incl
mov
arpl
faddl
xchg
daa
sysret
pushf
push
xchg
dec
shlb
mov
sub
movb
cmp
lock
sbb
dec
aaa
pop
fdivs
test
cwtl
in
nop
js
jecxz
push
cs
repnz
cmp
cmpsl
xchg
inc
inc
and
jno
pop
and
lret
lods
push
insl
xchg
add
mov
sub
nop
xor
into
mov
test
xor
cmc
inc
daa
mov
test
sub
nop
adc
cmp
mov
mov
nop
clc
out
imul
pushf
adc
sbb
and
addb
sbb
cmp
lret
xor
rolb
sti
out
pop
cltd
jns
add
adc
cld
inc
out
jbe
or
cmc
fldcw
mov
sbb
stc
dec
and
inc
fcmovnb
mov
add
jns
pop
sbb
sbb
nop
add
shl
mov
cmp
dec
adc
add
add
adc
fs
mov
add
push
push
mov
lret
cmp
add
in
je
xor
inc
cmpsb
pusha
pop
test
pusha
mov
cwtl
mov
notb
sub
or
pop
cmp
cmp
lret
jno
add
and
je
adc
out
bound
int3
cmp
sub
mov
pushf
and
push
nop
lock
popa
das
jo
jbe
xor
std
or
aas
mov
testb
and
add
movb
and
and
out
test
jmp
pushf
shlb
xchg
mov
fdivrs
outsl
xlat
mov
cmpl
push
pop
mov
ret
rdseed
cmp
shlb
mov
push
outsb
mov
jb
pusha
and
movsb
in
clc
adcb
add
cmp
push
and
sub
cmpsl
lock
add
mov
pop
popa
mov
jb
fdivs
lods
or
ljmp
inc
mov
push
stos
fdivrl
add
pop
jecxz
xchg
mov
and
xchg
xchg
add
movsl
jge
adc
aas
adc
shlb
mov
sub
orb
mov
sahf
addr16
cmp
aam
sub
mov
inc
lret
dec
jae
pop
xchg
lea
nop
das
test
add
out
and
lret
jo
or
push
loope
cmp
or
leave
pop
call
add
sbb
pop
mov
mov
cmp
fbstp
je
adc
or
sbbb
inc
xchg
add
subb
push
outsl
lods
inc
xchg
inc
arpl
cmp
jg
movsl
mov
rcl
stos
mov
lea
add
sub
sbb
add
add
in
pop
add
popa
addr16
mov
test
mov
bound
mov
push
test
pop
push
sub
pop
add
push
scas
add
adc
xchg
adc
lds
mov
mov
pop
jle
sub
daa
clc
xor
scas
enter
dec
out
mov
nop
push
aas
pushf
mov
and
aaa
add
gs
cmp
mov
mov
cwtl
inc
int3
push
dec
add
pop
push
leave
xor
inc
adc
into
add
or
insb
outsl
xor
dec
dec
aaa
adc
lahf
jl
pop
roll
test
xchg
popl
sub
pop
mov
mov
cmp
xchg
mov
adc
aam
clc
pop
das
nop
jl
sbb
out
jle
xlat
mov
adc
pop
sub
js
pop
call
inc
addb
add
and
sarb
shlb
lret
mov
clc
fisubl
or
mov
adc
sub
xchg
lahf
mov
xchg
push
add
dec
fs
in
popf
pusha
mov
pop
in
or
add
rorb
xchg
add
push
sbb
mov
shrb
sbb
pop
hlt
push
add
or
subl
add
mov
push
cmp
faddl
xchg
clc
cmpsl
mov
aaa
mov
sbb
in
inc
sti
dec
stos
pop
add
adc
cmp
sbb
pop
cmp
pushf
lcall
fisubrs
fcoml
or
test
add
fldcw
pop
lcall
inc
push
xor
jmp
pop
cmc
xchg
cwtl
push
mov
sub
fcoml
inc
sub
jne
fs
pusha
mov
xchg
mov
mov
pushf
mov
cmp
mov
inc
sub
fcoms
add
push
push
cmp
mov
add
pop
jecxz
fldenv
add
xor
sub
mov
repnz
out
inc
sbb
cmp
cwtl
cmp
outsb
mov
aas
js
add
sbb
es
mov
push
add
xlat
lret
fidivl
jecxz
xchg
mov
mov
dec
add
mov
lea
out
addb
adc
and
int3
mov
jo
add
push
stos
insb
mov
and
add
sbb
in
mov
push
ds
push
or
fisubrs
adc
push
shl
ja
loopne
push
jmp
sbb
cli
or
mov
cmp
and
mov
xchg
inc
aas
sbb
push
push
cmp
pop
push
mov
addr16
xor
lods
nop
adc
shr
mov
jp
mov
lcall
mov
addr16
xchg
movsl
inc
cmc
mov
or
out
ds
push
arpl
loopne
adc
std
scas
mov
or
xchg
es
mov
shll
addb
les
jb
outsl
or
jae
mov
les
fwait
std
bound
addr16
add
mov
inc
cmp
jl
jle
lock
imul
xor
repz
add
lret
stc
sbb
es
scas
iret
add
or
add
and
in
jl
jae
aas
push
fmull
bound
or
and
add
jae
xchg
test
ror
adc
cmp
shrl
stos
xor
repnz
sti
mov
lcall
push
lods
dec
loop
shlb
xor
ds
push
or
and
or
fdivl
popl
add
mov
xor
pushf
inc
inc
jp
adc
rclb
imul
xchg
dec
enter
sbb
mov
push
shll
jnp
add
or
nop
sub
adc
enter
xorb
repnz
sub
nop
push
xchg
lock
push
mov
inc
mov
fs
test
xchg
addb
sub
fcomps
enter
outsl
mov
test
and
and
in
adc
add
push
les
mov
mov
inc
xchg
fisttpl
sub
int3
or
mov
dec
test
pop
movsl
fdivp
cmp
inc
fisttps
adc
xchg
pushf
mov
adc
xchg
shlb
in
or
movsb
data16
and
adc
add
iret
mov
pushf
push
pop
push
sbb
pop
aas
insb
in
inc
inc
sub
push
mov
mov
dec
aas
mov
lds
sub
mov
jl
out
lret
jg
ret
push
enter
cwtl
mov
movsl
inc
xor
lock
iret
ja
pop
and
adcl
add
in
addb
add
add
sbb
add
pop
ret
rdtsc
ret
push
mov
mov
xor
add
lea
loop
pop
ret
mov
test
jne
int
jmp
mov
shl
js
jae
cmp
je
call
mov
call
neg
push
mov
add
subl
sub
jae
sub
lea
mov
call
add
add
xor
sub
divb
stos
or
xchg
jecxz
out
rolb
xchg
aaa
mov
mov
sub
icebp
in
dec
push
int
aas
fadds
push
xchg
dec
push
adc
out
adc
js,pn
xor
loope
pop
adc
push
imul
cmp
mov
pop
push
ss
sahf
mulb
push
mov
popf
adc
jp
pushf
adc
lahf
les
jle
pusha
loopne
jecxz
pop
fcoms
sub
shlb
lahf
mov
or
inc
jo
and
mov
subb
sti
mov
push
roll
pop
adc
scas
scas
push
ljmp
adcb
loop
dec
adcb
sbb
sbb
repz
sahf
sub
dec
sbb
das
jmp
loopne
push
iret
xor
mov
xor
mov
xor
or
in
dec
aam
mov
and
cs
enter
int3
sub
pop
js
rep
jmp
movsl
pushf
mov
shll
xor
shlb
lahf
nop
fmull
movsl
arpl
push
in
jnp
dec
test
lahf
mov
iret
rep
fimuls
data16
xchg
out
arpl
or
in
xor
mov
cmp
mov
cld
sahf
out
jbe
sbb
add
dec
sub
sarl
sub
stc
rolb
stc
and
pop
shr
dec
adc
or
xchg
mov
sbb
pushf
fdivs
call
and
imul
xchg
and
or
das
add
xchg
loop
lahf
mov
insb
sar
repz
les
fidivrl
push
leave
lods
sub
cmpsl
mov
jno
mov
insl
stos
lahf
leave
scas
inc
fdivrp
jge
push
jo
jp
mov
sbb
scas
sub
and
push
xchg
imul
lcall
aam
add
jle
popf
jl
dec
movsl
sbb
fwait
movsb
nop
mov
mov
ja
popa
out
pop
cli
pop
xchg
xchg
outsl
test
into
xor
scas
xor
js
ja
insl
sub
add
cs
push
fstp
in
dec
shl
xchg
mov
test
adc
inc
xchg
xacquire
push
sbb
insl
repz
aad
rorb
and
cwtl
fnstenv
cmp
mov
lahf
adc
rcl
cwtl
enter
mov
and
jns
in
push
mov
or
adcl
inc
or
dec
adc
mov
and
ds
int3
sbbl
add
loopne
fsubrl
dec
pop
mov
or
xchg
inc
movb
in
psrld
aas
mov
inc
stos
xor
xchg
js
sub
out
aas
fstps
mov
cmp
xchg
mov
mov
in
xchg
mov
hlt
leave
xor
ss
cmpl
push
insl
push
inc
mov
push
jne
xchg
adc
mov
add
push
test
sbb
and
pop
rorb
mov
sub
mov
and
sbb
push
sti
inc
jl
aam
and
push
popf
push
test
std
cmp
out
loop,pn
inc
lahf
and
insb
mov
sbb
fidivrs
pop
mov
imul
es
pop
rolb
jp
dec
sub
jne
insl
push
push
imul
mov
orl
xchg
subb
pop
mov
js
jb
std
jns,pt
push
adc
stos
jge
insl
and
push
jecxz
in
sbb
jg
stc
loop
and
add
loope
mov
andb
cltd
xchg
jp
clc
fmuls
pop
inc
inc
rcrb
xchg
stos
xchg
ljmp
and
das
inc
subl
mov
cmp
jecxz
mov
andb
xchg
pop
inc
dec
push
dec
mov
data16
jbe
lock
fs
or
sbb
xor
leave
in
sbb
clc
adc
adc
cmp
aaa
popf
cmp
mov
test
shrb
test
sub
sub
push
aam
add
sbb
xor
cmp
adc
xchg
pop
jne
loop
aad
call
idivl
out
inc
stos
lods
ds
pushf
pop
xchg
call
jnp
jb
push
xor
xor
aas
fildll
stos
push
push
in
inc
dec
test
sahf
pop
dec
and
xchg
imul
add
cld
jns
fdivrl
push
mov
add
sub
daa
pop
push
lret
sub
push
outsb
xchg
fwait
lds
push
pushf
rclb
jmp
fucom
iret
addr16
cltd
jae
fucomi
cmp
mov
add
ss
xor
sub
push
into
pop
sub
jg
push
xchg
jnp
adc
sti
pusha
pop
pushf
out
lahf
daa
test
cld
shrl
inc
fnstcw
or
xchg
jecxz
jp
pop
out
das
inc
or
mov
push
movq
popa
std
imul
stos
sahf
pop
mov
sahf
cmp
fs
mov
and
rolb
jmp
in
sbb
je
or
adc
gs
push
inc
jo
outsl
pop
push
cltd
outsb
sub
imul
jo
repz
jno
aad
cmp
mov
xor
insb
iret
rol
cld
jmp
jg
mov
xor
xchg
adc
xchg
sbb
adc
and
pop
cmp
cmpsl
inc
sbb
stc
pusha
ja
jecxz
jne
test
sbb
jns
leave
int
int
cmc
setae
adc
shll
fildll
add
mov
insb
test
insl
idivb
jnp
gs
mov
movsw
test
test
lret
enter
out
xchg
sti
sar
popa
out
mulps
sub
mov
adc
movhps
jg
lcall
fs
arpl
mov
mov
adc
mov
push
fnstsw
hlt
in
push
cmc
rol
sub
add
pop
xchg
sub
outsl
cmp
sub
jecxz
dec
jne
inc
aas
jbe
je
adc
mull
clc
sti
adcl
xchg
adcb
imul
mov
dec
cli
movsb
sarl
out
loop
jb,pn
cli
or
cmp
mov
xor
add
mov
jne
jno
outsb
inc
push
stos
xchg
aaa
pushf
loopne
sbb
jge
iret
rcll
mov
adc
mov
out
jae
xlat
jae
pop
adcl
cmp
and
dec
addr16
daa
jle
std
sub
pusha
cmp
jl
out
scas
arpl
scas
testb
xchg
lret
test
negb
sbb
movsb
add
add
sub
inc
fs
testl
insl
cltd
jg
or
lret
fwait
roll
adc
addr16
shlb
in
ror
mull
or
sbb
push
cmp
cmp
sub
pop
adc
dec
std
popa
push
jle
outsb
jae
mov
mov
mov
mov
lret
in
fsubl
aad
ljmp
in
ja
lret
push
xor
cmp
xor
pop
loop
outsl
inc
fnstenv
jge
jns
lea
mov
mov
aad
ficompl
ljmp
cmp
stos
fs
and
pop
inc
movsl
popa
das
dec
mov
imul
lcall
mov
or
jae
lds
cmp
mov
add
addr16
xor
xor
fbstp
pop
dec
mov
xor
bound
js
addr16
stos
and
xchg
xlat
aas
mov
lret
test
into
add
lock
xor
or
cmp
push
or
sub
or
inc
jne
xlat
cmp
push
cmp
push
xchg
mov
out
push
mov
std
and
call
pop
ret
out
xchg
outsl
xor
and
leave
shrb
in
jge
pusha
pop
dec
mov
out
daa
out
mov
loop
jo
cli
aam
or
add
ss
cltd
mov
pop
xchg
scas
xchg
outsl
jns
and
push
pop
xor
dec
call
push
arpl
pusha
cmpsb
push
pop
stc
test
adc
fdivl
jns
es
mov
outsl
hlt
inc
xor
mov
or
negl
mov
int
xor
dec
inc
enter
mov
mov
aaa
andl
or
cld
mov
cmc
push
mov
punpcklwd
adc
test
ret
jecxz
jne
pop
push
pusha
xorl
fs
sub
rorb
loop
sbb
cmp
sbb
clc
mov
lcall
and
dec
add
pop
mov
outsb
and
jge
inc
or
sub
pop
cmpsl
cmpsb
jae
outsb
or
inc
ret
and
or
xor
popa
mov
add
scas
jp
aad
mov
push
into
and
jno
incl
push
jne
cwtl
mov
cmp
outsb
mov
and
adc
sbb
mov
neg
repnz
popa
jo
mov
push
rcrb
mov
mov
pusha
insl
dec
xchg
inc
lods
sub
xor
and
xchg
xchg
cs
js
roll
sub
pop
pop
sub
pop
pop
enter
and
mov
xchg
stos
ljmp
push
jb
pop
xchg
pop
insl
jmp
movsl
jne
lods
xor
sub
outsl
hlt
jb
sbb
adc
rcrl
je
lds
cmp
mov
sub
jg
pop
imul
inc
mov
ds
pushf
sub
in
xor
sbb
jmp
lds
adc
leave
xchg
jg
in
jne
add
mov
push
hlt
sbb
call
add
or
and
arpl
scas
les
inc
mov
in
rolb
es
popf
xchg
xchg
jp
out
lods
ja
loopne
dec
mov
lret
inc
fsubr
inc
ret
lods
les
ja
pusha
mov
test
sbb
xor
xchg
bound
and
cltd
sbb
mov
dec
cmpsb
inc
jnp
mov
mov
scas
sub
inc
lds
push
call
push
mov
iret
adc
fs
jb
jno
jecxz
pop
aas
inc
mov
cmp
scas
jb
into
push
shll
orl
cli
fnsave
jmp
xor
mov
dec
shlb
dec
add
cmc
pop
jmp
movsl
arpl
jns
fsubs
push
popa
out
leave
hlt
add
jnp
and
scas
push
add
arpl
push
lahf
mov
mov
jne
push
les
xor
nop
inc
stos
cmp
add
cmp
jne
jb
push
xlat
fstl
cmp
cmpb
lret
cmp
nop
dec
js
cwtl
push
jmp
dec
repz
insl
mov
clc
and
pop
arpl
stc
mov
test
js
jae
lock
and
sub
mov
lods
lods
sbb
fcomps
aam
out
out
call
hlt
inc
inc
push
xor
cmp
addr16
jle
fnstcw
mov
and
jmp
and
push
adc
cmpsb
leave
inc
cmp
xor
ljmp
bswap
xchg
test
mov
ror
mov
fbstp
into
sar
xchg
outsl
jmp
pop
push
je
push
or
mov
mov
inc
ljmp
aas
test
push
aam
ss
stc
cmp
pop
xor
add
pusha
outsb
outsl
les
pushf
mov
cmp
scas
mov
test
push
fbld
loopne
mov
orb
inc
adc
sub
push
mov
pop
ja
int
push
jp
inc
pop
inc
xchg
fistpl
lcall
test
arpl
out
xchg
call
xchg
jnp
mov
loop
mov
inc
orb
inc
mov
movsl
out
jb
xchg
adc
addr16
mov
mov
subl
iret
shrb
lds
dec
jecxz
fsubrs
dec
cwtl
fisubl
pop
jne
cmpsl
mov
lock
loop
mov
lea
into
mov
filds
loopne
mov
cmp
mov
xchg
call
push
cmp
cli
jle
dec
push
xchg
jge
mov
cmp
dec
pop
sbb
mov
imul
sti
sbb
out
xchg
fs
jp
xchg
cmp
xor
or
xor
adc
ret
pop
fimuls
sbb
loope
bound
push
push
push
xor
mov
das
sub
leave
out
pushw
lock
push
xor
inc
mov
xor
lods
xchg
aas
outsl
aaa
sbb
adc
and
jns
repnz
inc
stos
sub
ss
ficomps
sbb
ret
ret
mov
pop
mov
es
fimuls
dec
repnz
mov
mov
dec
pop
sarb
ljmp
test
mov
inc
or
call
push
xchg
outsb
je
popf
iret
hlt
ljmp
fs
push
mov
pop
and
adc
rolb
in
or
xor
and
jecxz
insl
or
xchg
jle
adc
jl
or
addr16
arpl
jnp
mov
aas
in
adc
mov
adc
divl
leave
mov
int
aad
pop
hlt
jecxz
mov
xor
xchg
aad
mov
xchg
xor
dec
dec
inc
fidivl
test
mov
push
js
add
hlt
loopne
xchg
pop
cltd
rolb
add
sub
cmpb
add
add
aam
out
in
push
outsb
inc
push
mov
inc
getsec
mov
pop
jecxz
repnz
sbb
hlt
or
sbb
and
mov
scas
pop
rol
pop
in
test
add
add
iret
jne
cmp
push
stos
add
imul
jbe
xchg
push
mov
and
insl
xorl
in
inc
fwait
mov
cmp
sbb
xchg
jae
add
into
imul
push
pop
inc
cmp
out
and
pusha
xor
push
lahf
jne
loopne
xchg
pop
repz
ljmp
daa
fistpll
aas
imul
xchg
push
fs
sub
popa
dec
aam
jecxz
pop
clc
mov
fstps
mov
loop
enter
jle
lds
aam
shrl
mov
test
sbbl
jne
insb
ss
or
dec
adc
push
cs
and
pop
inc
add
pop
push
and
cld
in
xchg
rol
sub
in
pop
mov
push
xchg
imul
in
push
mov
ja
shlb
fimull
addr16
and
mov
outsb
jae
sbb
adc
or
and
mov
and
mov
mov
jbe
sti
pop
sbb
xor
lret
pushf
mov
daa
je
loope
push
stc
and
push
mov
sub
xor
mov
sbb
mov
pop
pop
pop
stos
xchg
insb
frstor
jge
xorb
leave
les
jg
mov
pop
hlt
aas
sahf
cmpsb
add
add
jae
fcomps
pushf
pop
push
inc
sub
out
mov
cmp
stc
adc
enter
fstpl
inc
frstor
stos
test
pop
pop
push
aam
stc
push
test
pusha
pop
movups
mov
fsubp
data16
cmc
pushf
icebp
and
movsl
ja
mov
arpl
dec
out
bnd
icebp
mov
lcall
movsb
push
es
mov
sbb
mov
inc
pop
rorb
jp
loope
push
adc
jnp
jne
ljmp
fldenv
jnp
mov
es
add
cld
xchg
fcmovnu
adc
push
out
pop
je
sub
cld
pop
cmp
pop
push
xlat
mov
out
es
mov
adc
rcr
dec
dec
call
and
cmpb
jbe
xchg
imul
pop
mov
rclb
push
xor
cwtl
adc
pushf
push
es
inc
pop
mov
pop
gs
jns
lods
mov
repnz
mov
cmp
sub
testb
mov
shll
push
dec
movsb
xchg
in
or
inc
jmp
and
cmc
mov
push
fstps
adc
mov
sub
push
inc
mov
ja
jl
inc
xchg
push
psubusb
cltd
and
mov
or
push
push
pop
shlb
mov
jmp
hlt
mov
dec
fs
movsl
and
xor
test
and
in
scas
iret
scas
fisttpl
pop
or
sub
dec
in
jns
mov
adc
aam
aam
pop
jl
in
sub
loope
xor
cmp
or
pushf
jo
jecxz
insb
sti
clc
das
and
inc
sbb
rorb
sbb
das
sbb
ds
adc
push
rcl
int3
paddsb
in
xchg
bound
pop
test
aas
testl
inc
add
pop
adc
sub
xchg
repnz
cli
leave
lods
shll
shll
aas
fwait
inc
std
xor
push
icebp
pop
scas
inc
ret
xchg
mov
fs
or
sbb
lods
sub
sub
adc
mull
inc
jle
mov
fcomps
int
les
int
cltd
adc
rcll
ljmp
and
mov
dec
int3
mov
popa
ljmp
lcall
lds
icebp
out
pushf
das
cld
daa
outsl
rcrb
movsl
fucomp
hlt
mov
out
mov
sti
jb
dec
in
jae
push
cwtl
ss
jae
mov
test
mov
or
in
repz
sbb
aad
pop
ret
dec
imul
sub
mov
int3
jns
hlt
xchg
dec
or
or
push
mov
sub
pop
js
imul
pop
inc
or
inc
sub
mov
xchg
dec
add
int3
movsl
repnz
ja
or
ljmp
add
adc
adc
or
inc
xor
pop
cmp
ror
sub
popf
fdiv
popf
add
fcmovbe
movsl
fucomp
mov
sub
mov
in
shll
dec
shll
or
loope
rclb
or
dec
test
aas
fmull
repz
pop
push
enter
inc
dec
out
fcmovb
aad
dec
test
or
push
mov
xlat
push
jge
sar
hlt
arpl
dec
jecxz
add
sub
cmp
std
mov
in
or
es
and
fldt
pop
adc
dec
xor
ret
loop
incb
ds
shlb
rolb
pop
mov
aam
sub
mov
repz
clc
lock
sti
push
pop
mov
mov
jno
push
mov
fnsave
outsb
or
push
out
test
add
testl
stos
shll
pop
and
push
bound
mov
shl
repnz
mov
cs
in
adc
bound
sahf
pop
sbb
movsb
jl
mov
ljmp
or
push
inc
int3
jbe
iret
mov
call
push
xchg
sbb
cld
cld
int3
imul
ret
add
xchg
imul
int3
sbb
or
ljmp
push
xlat
fiadds
jge
jecxz
push
