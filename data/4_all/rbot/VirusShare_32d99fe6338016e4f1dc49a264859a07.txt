ja
fwait
cmp
outsb
cld
xchg
test
mov
imul
dec
adc
push
xchg
nop
lods
inc
mov
mov
fisttps
lods
stc
xchg
loop
sbb
xchg
std
xor
lcall
pop
aad
or
in
outsb
pop
add
pop
pop
out
xlat
and
mov
outsb
and
nop
lds
inc
out
popa
outsl
mov
or
jbe
mov
adc
mov
pop
push
test
mov
outsb
mov
loop
sub
test
or
push
ss
out
jb
mov
dec
mov
clc
cltd
push
leave
mov
sbb
add
adc
sbb
in
scas
das
xor
mov
mov
popa
jo
pusha
dec
pop
outsl
cmpb
test
mov
mov
inc
sti
or
pop
push
lcall
rcr
cmpsl
shl
and
cs
mov
ss
or
sub
or
jmp
out
cwtl
lret
jne
int3
or
jbe
int
int3
mov
jge
insl
insb
inc
out
and
adcb
stos
dec
xor
das
pop
cmpsl
std
leave
movb
sbb
sbb
mov
sbb
test
jns
dec
das
ret
outsl
loopne
daa
lret
fsubl
cs
add
aam
add
jle
inc
mov
xchg
adc
adc
das
shrl
cltd
insb
stc
notb
dec
cmc
stos
add
mov
dec
loop
push
cmp
addl
and
out
pop
popf
hlt
adc
sub
in
movsb
add
and
sti
push
pop
inc
ss
inc
hlt
mov
inc
mov
pusha
imul
pop
jbe
cld
push
jecxz
pop
test
sahf
fld
ljmp
lret
mov
pop
add
jg
push
xchg
xor
cmpb
movd
xchg
cld
je
jnp
jmp
jge
mov
sbb
xchg
dec
pop
cs
lea
imul
push
ror
shrl
imul
nop
push
pusha
mov
mov
adc
fcomps
fidivl
adc
call
lds
leave
bound
outsl
jbe
outsb
and
sarl
jo
gs
mov
ja
mov
add
push
cltd
push
enter
cwtl
pusha
mov
popa
mov
push
loope
xor
inc
xchg
clc
and
pop
push
adc
cmp
add
imul
cs
mov
sbb
cmp
jb
mov
xlat
sbbl
sbb
imul
pop
int
or
pop
push
decl
aam
mov
ds
sub
and
arpl
pop
sbb
ljmp
push
push
cmpsb
cli
xchg
test
pop
call
pusha
insb
test
jnp
out
xchg
stos
lret
repnz
cmp
sub
mov
xchg
and
lcall
xor
scas
add
notl
test
xchg
pop
and
dec
sub
ja
int3
mov
inc
sahf
or
in
mov
int3
in
fisubl
xchg
inc
push
iret
scas
enter
enter
icebp
ljmp
enter
sub
scas
pusha
aaa
movb
in
sub
add
inc
stc
adc
cmpb
push
leave
cmp
pusha
or
mov
inc
jmp
imul
outsb
xlat
mov
hlt
shrl
xchg
out
adc
cmp
cwtl
nop
leave
lds
les
push
ret
mov
lods
shll
inc
push
pop
mov
cs
jp
mov
clc
sbb
mov
cwtl
inc
mov
push
mov
pop
add
aad
jns
clc
roll
aaa
ret
imul
loope
out
div
loopne
pop
and
push
sbb
mov
mov
cmpsb
fcmovnu
jmp
repz
test
in
push
js
stos
pop
lods
in
lods
sub
mov
std
xlat
dec
lahf
mov
pushf
scas
fistl
push
and
push
rcrl
aaa
cld
xchg
or
aas
or
dec
cli
add
jl
popa
rcrl
dec
out
mov
xchg
out
loopne
xchg
or
repnz
jo
in
xchg
repnz
in
jo
lret
add
fbld
into
hlt
inc
fwait
push
xor
xlat
jns
aad
rcrb
bound
cmpsb
sbb
sahf
leave
fdiv
xchg
ss
punpckldq
rsm
jne
scas
jmp
sbb
lret
mov
push
das
nop
ret
sub
test
mov
insb
lahf
adc
xor
es
dec
or
push
add
lods
stos
insb
int
pop
xor
mov
or
mov
mov
pop
lret
out
fimull
js
inc
cmpsb
dec
rcll
inc
mov
fnstenv
mov
fnsave
scas
mov
call
jns
orl
stos
inc
cmp
ljmp
xchg
add
pop
sub
ret
je
mov
xchg
ret
dec
sbb
aad
jae
sbb
incb
shlb
movsb
dec
hlt
es
sub
jo
dec
add
adc
jns
cmp
xchg
sbbl
sbb
sahf
lcall
cmp
xor
cld
xor
jg
dec
add
xor
outsb
dec
stc
and
daa
cmp
and
repz
sub
popf
pushf
dec
jl
sbb
lods
call
xor
out
mov
jnp
pop
dec
ret
push
add
pushf
add
or
jno
daa
leave
daa
xchg
sbb
cmpsl
sbb
lret
lret
sbb
fildll
lcall
inc
push
or
fdivrs
push
fcomp
addr16
pop
clc
pushf
adc
xlat
adc
add
into
xchg
notb
push
daa
cmp
jne
adc
xchg
or
sarl
int
jg
outsl
or
or
adc
inc
inc
sub
fisttpl
pushf
inc
psrld
lret
mov
pop
mov
jne
pop
push
out
and
xchg
lcall
cmp
fisttpll
shr
gs
clc
ss
push
cwtl
arpl
inc
movsb
push
sbb
rcrb
aaa
orb
in
adc
or
outsb
pop
daa
lods
loop
inc
push
fwait
lret
lods
andl
mov
aad
daa
out
adc
push
mov
adc
iret
stc
mov
rep
test
fwait
push
rcrl
xor
dec
xor
stos
loopne
int3
scas
addr16
ret
js
jecxz
fistl
outsb
pop
test
test
popa
out
dec
ja
sahf
mov
pop
push
clc
xchg
xchg
sub
push
push
jbe
push
cltd
pop
pop
pop
or
je
push
push
push
and
pop
pop
pop
nop
stc
cld
mov
xchg
push
and
pop
push
test
pop
push
pop
stc
and
jg
push
inc
pop
add
and
call
add
test
mov
inc
inc
inc
inc
stc
push
ror
pop
xor
add
jl
test
clc
push
add
push
pop
pop
jle
push
jne
cmp
pop
test
push
push
and
pop
pop
or
stc
test
push
pop
test
push
push
cmp
pop
pop
push
push
xor
pop
pop
stc
push
add
pop
cmc
jmp
mov
xchg
test
mov
aaa
xor
pop
into
shl
rclb
aas
adcl
loopne
ret
shr
test
jne
jmp
push
je
push
mov
pop
pop
push
mov
pop
jle
push
test
pop
push
lea
pop
push
push
and
pop
pop
or
shr
clc
add
push
pushl
xor
pop
pop
push
jg
add
pop
push
rol
pop
jnp
xor
lea
push
jne
push
shl
pop
pop
cmc
push
xchg
pop
push
pop
xchg
pop
push
push
test
pop
pop
push
xor
pop
jmp
or
icebp
dec
mov
ror
push
and
addr16
cmp
cmp
add
cltd
add
in
jmp
incb
iret
mov
dec
test
stc
dec
jne
jmp
jae
push
rorb
push
sub
push
into
cmpl
pop
push
fcmovbe
ds
jg
xchg
pop
test
test
jmp
mov
push
popf
imul
aam
inc
fs
jbe
push
div
xor
ret
mov
cli
push
push
clc
xor
mov
or
dec
xchg
and
in
inc
gs
or
and
cltd
jae
adc
fdivrs
sub
mov
addb
push
mov
movl
icebp
pop
loopne
not
aas
dec
sub
fwait
nop
jp
push
lret
push
fucomp
sub
jae
addr16
xor
bound
ficoml
repnz
addl
testl
inc
add
add
xchg
lock
pop
pop
pop
les
pop
aad
shrl
aad
js
adc
imul
loop
in
adc
pop
lret
aaa
js
mov
push
and
mov
dec
into
mov
test
call
mov
add
cmpsb
pop
test
jge
js
jg
test
push
dec
fst
shll
clc
lahf
mov
adc
xchg
mov
ss
sub
sub
ret
shll
test
sbb
xchg
sub
je
lea
adc
popa
jp
mov
lods
adc
mov
sbb
lret
out
mov
aam
lds
fdivrl
fisttpl
adc
pop
in
pop
in
lcall
push
jle
jnp
mov
in
jbe
and
into
ljmp
ds
push
ja
mov
flds
orl
lcall
mov
push
cmp
pushf
jne
ficoms
fsubp
mov
outsb
and
add
jno
xorl
push
sub
jge
arpl
mov
movsl
sub
push
cmp
insb
jnp
btc
lock
das
aam
sub
mov
fimuls
fnstenv
xlat
pop
add
push
outsb
std
adc
push
loopne
jp
int3
dec
sbb
stos
xor
out
lods
xchg
sub
iret
clc
loope
test
or
lds
gs
das
repnz
stos
out
mov
cmc
push
inc
cli
cmp
cmp
xchg
mov
and
jp
fs
xor
stos
cmpsl
jne
jns
push
mov
inc
dec
popf
inc
xchg
lcall
icebp
leave
aas
icebp
cmp
enter
cmp
add
hlt
jae
sub
iret
movsb
mov
fiadds
shl
mov
loope
clc
shr
clc
sbb
xor
jno
test
pop
test
rcll
or
mov
mov
div
adc
fisttpll
xor
rdmsr
inc
hlt
push
mov
mov
pusha
mov
and
adc
ja
pop
ja
cmp
shl
dec
or
cmp
sbb
divb
dec
inc
movl
jl
dec
push
das
dec
push
add
nop
popf
cmp
or
inc
popl
cwtl
mov
pop
repz
repz
and
enter
pop
inc
add
lret
xchg
clc
rcrb
rorl
or
movsb
jecxz
outsb
dec
mov
test
jb
aam
int3
scas
inc
insb
cmovb
iret
jp
mov
sbb
mov
cli
ds
inc
test
inc
cmpsb
mov
add
insl
add
and
ret
cli
inc
xor
insb
or
inc
addr16
lahf
bnd
sub
fdivl
daa
inc
andl
push
xorb
mov
push
pop
mov
ss
std
ss
jno
ss
fisubrs
adc
fimull
mov
jecxz
jnp
jg
movsl
adc
ficoms
jg
stos
inc
in
jecxz
in
and
push
sbb
inc
push
jge
leave
sbb
mov
fwait
jmp
cld
sbbl
lret
xchg
lea
pop
push
cwtl
push
sub
loope
lds
adc
dec
jg
xlat
mov
add
add
cmp
sahf
jnp
sub
jo
xorb
test
stos
dec
pop
in
enter
loope
add
icebp
test
repnz
xchg
sbb
push
xlat
in
pmulhw
lea
inc
cmpsl
lods
jl
push
neg
push
push
pop
mov
push
mov
fiaddl
fildl
adc
jl
dec
lock
dec
ss
ss
imull
cli
loopne
cli
or
daa
push
mov
lea
subl
test
mov
orl
in
jo
and
sub
mov
jno
mov
in
jo
and
sub
mov
jno
subb
push
out
push
sub
or
mov
add
cmp
mov
mulb
mov
pop
lock
inc
cmpl
adc
jne
pop
mov
out
nop
pop
xchg
inc
popw
inc
push
ja
sbb
adc
enter
ja
test
cmp
sbb
xor
mov
popa
or
lret
cmp
pusha
cmp
xchg
hlt
out
mov
lret
aad
movsb
ret
xchg
outsl
stos
push
arpl
push
iret
jge
lods
inc
ss
push
inc
push
xchg
or
sahf
cld
jae
sti
and
mov
outsl
sub
pop
mov
add
xchg
testb
push
cmp
lods
and
movsb
or
adc
subb
inc
lahf
repnz
jge
mov
sbb
mov
int3
int
jns
mov
push
ret
pop
rolb
lods
iret
adc
push
test
pop
mov
std
adc
fnstenv
push
pusha
cmpb
xchg
movsl
inc
and
ja
test
cmp
pusha
test
cmp
pop
jg
jecxz
cmp
mov
dec
push
or
jmp
or
mov
mov
lds
jp
test
xor
in
pop
add
in
jle
test
xorl
inc
repz
add
cmovb
ja
test
sbb
in
sbb
mov
xchg
fldcw
pop
xchg
xchg
mov
das
hlt
aad
jno
jecxz
xor
xchg
push
inc
inc
dec
outsb
mov
and
gs
or
and
mov
xchg
sbb
stos
popf
rolb
and
push
sbb
into
dec
jns
int
xor
test
sbb
mov
in
outsl
or
pop
fwait
fs
outsl
out
mov
mov
xchg
insb
cs
fwait
and
add
xchg
add
loop
aad
mov
fsubrl
inc
and
sbb
test
jae
sub
repnz
lea
pop
imul
aam
sbb
enter
inc
xchg
movsl
dec
sub
xchg
scas
int3
sub
push
mov
jl
cmp
mov
in
xor
rorb
sbb
xor
add
inc
loopne
pop
out
xor
out
cmp
cli
jle
mov
pop
push
ss
pop
xchg
inc
mov
lock
cmp
stos
fst
or
out
xchg
ss
bound
stc
outsl
aam
mov
mov
cmp
cmp
adc
leave
ja
inc
testb
cmp
xchg
push
xchg
icebp
mov
sbb
sub
jle
cwtl
add
mov
divb
mov
mov
mov
fisttps
inc
test
dec
jecxz
mov
cld
imul
test
cmpsb
cli
xor
lret
xchg
mov
xchg
cmc
idivb
mov
pop
xchg
loopne
push
sahf
fisttpl
cmp
xchg
and
rorb
pop
stos
rcrb
xor
dec
adc
popa
in
fcoms
jmp
call
or
lds
mov
sub
jl
mov
gs
sbb
or
cli
dec
jmp
loopne
in
jnp
pop
fldenv
pop
es
cmp
or
add
cmp
insb
cmpsb
nop
imul
test
sbb
lahf
cltd
push
ljmp
add
pop
mov
in
fstpt
testb
inc
call
fistl
mov
jb
movsb
sbb
jp
push
fisubrs
dec
pop
aas
movsl
outsl
test
cmp
mov
outsl
iret
pop
or
lea
loope
aad
ds
cmpsl
sbb
sarb
roll
inc
push
dec
sub
mov
addr16
lods
cmpsb
dec
inc
push
jmp
clc
popf
sbb
push
mov
dec
sahf
outsb
mov
stos
lret
test
addr16
jmp
dec
hlt
repnz
call
mov
cmp
fisubs
mov
mov
xor
rorb
cmp
dec
sbbl
pop
jp
xchg
iret
testb
inc
mov
adc
push
sbb
jnp
cmp
in
mov
pop
mov
ret
lret
sbb
push
stc
sahf
leave
push
outsl
imul
fisttpl
pop
pop
mov
hlt
mov
fcoms
cld
enter
cmp
enter
cmp
shlb
jle
adc
je
mov
leave
add
pop
nop
push
and
mov
cmpsb
jae
adcl
fadd
push
cmp
popa
jecxz
or
fsubr
lret
std
push
jns
cmp
add
push
icebp
push
mov
jge
nop
js
popf
sbb
les
and
aaa
loope
hlt
ljmp
sti
pop
shrl
cmp
adc
orb
sahf
insb
cld
pop
inc
push
dec
in
adc
cmp
and
movsb
pop
push
mov
fmull
sbb
xchg
clc
push
and
mov
leave
les
popa
lret
xor
sub
sarb
adc
push
push
pop
ds
xor
dec
and
mov
pop
adc
jge
in
gs
in
adc
pop
add
scas
dec
les
mov
jmp
cmp
hlt
xchg
arpl
in
sub
mov
xor
in
fiaddl
mov
aad
sbb
std
inc
adc
lret
push
mov
scas
cmp
mov
fmull
xchg
rcrb
in
cwtl
adc
lock
push
sub
jle
and
add
sti
outsl
jp
fcompl
push
leave
add
lcall
mov
fwait
lock
adc
jp
dec
xlat
adc
xlat
fstpt
imul
push
testb
loope
push
dec
sbb
inc
or
out
add
cmc
mov
xchg
dec
mov
mov
int3
mov
pop
and
shlb
testb
cs
pop
lea
loopne
mov
bound
push
pop
adc
xor
ds
add
outsb
sbb
dec
and
and
in
fwait
cmpsb
cmp
and
ret
xchg
jb
cltd
and
mov
cmc
in
sar
cmp
cld
xchg
xor
bswap
lea
aas
hlt
int
mov
out
pop
inc
stos
push
mov
hlt
sbb
out
pop
enter
push
mov
shr
jbe
out
inc
enter
int3
xchg
data16
not
pop
mov
es
fst
les
mov
push
jnp
add
and
push
dec
jbe
dec
mov
add
fdivs
scas
aas
sub
adc
mov
xlat
rcrb
fwait
cli
pop
push
in
jo
daa
jns
cs
and
insl
lods
or
mov
jecxz
dec
jl
and
dec
add
fdivrl
xor
sbb
popa
mov
or
mov
mov
incl
pop
in
push
jbe
dec
out
dec
sub
jge,pn
push
mov
test
ds
adc
or
cmp
lock
pop
sbb
ds
lret
jae
faddp
bound
fidivrs
les
dec
push
pop
adc
sbb
dec
divb
testb
push
pop
jl
mov
mov
pop
jmp
leave
stos
incb
cmp
popf
mov
out
push
sbb
and
mov
rorb
ret
xchg
fs
push
enter
jno
xor
aam
ljmp
inc
shll
lcall
pop
mov
fcoml
outsb
sbb
ss
pop
jmp
push
call
add
test
sub
icebp
xchg
fwait
dec
mov
mov
test
mov
fdivl
aaa
cmp
frstor
pop
adc
mov
inc
test
sahf
jp
jbe
aaa
test
mov
and
hlt
arpl
adc
ljmp
stc
hlt
mov
mov
push
jns
and
cmc
jp
lods
or
sbb
fcomi
mov
mov
add
push
mov
adc
lcall
adc
fmull
mul
dec
mov
cmc
test
adc
adc
andl
lds
scas
push
dec
push
lcall
cmpsl
andb
aas
data16
inc
popf
in
cwtl
pop
insb
pop
popf
pop
xlat
sbb
mov
pop
adc
mov
adc
jno
repz
push
out
cwtl
dec
stos
lea
cmc
and
mov
cmp
xchg
outsl
xchg
fldenv
icebp
lea
rcr
ficomps
sti
pop
sbb
pop
call
sub
sbb
out
in
adc
cli
push
fistpl
xor
repnz
or
and
sahf
cmp
mov
insl
jge
iret
mov
outsl
adc
xor
push
and
jg
test
inc
ret
jp
mov
adc
mov
jge
data16
push
pop
xor
scas
jmp
mov
mov
cmp
int3
outsl
popf
aaa
hlt
movsb
and
pop
addb
iret
addr16
mov
xchg
mov
ficomps
fcmovnb
repnz
ljmp
aam
xor
and
nop
fs
pop
iret
xchg
inc
jbe
mov
cmp
mov
pushf
jmp
cld
xlat
into
dec
mov
cmp
and
or
add
addr16
aam
mov
ss
inc
push
fldenv
sub
inc
dec
movsl
jge,pn
xor
cli
nop
frstor
repz
imul
add
daa
pushf
sub
mov
sub
enter
jecxz
cmp
jle
inc
xchg
orb
mov
dec
fidivs
clc
mull
lods
ja
into
xchg
xchg
pop
mov
sbb
push
test
adc
dec
sub
xchg
fistpll
cmp
mov
xlat
in
stos
jae
and
inc
push
xchg
outsl
cs
loope
or
out
mov
loope
vmwrite
xchg
xchg
dec
push
mov
push
xor
dec
push
pusha
test
adc
jbe
das
fadds
shll
xchg
std
test
mov
mov
jmp
or
mov
mov
int
or
jae
lods
cmp
xchg
rcrl
repz
shl
cmp
adc
sbb
shlb
dec
add
jle
sub
vfnmadd231sd
icebp
xor
les
mov
pop
mov
mov
inc
xchg
dec
call
jo
pop
dec
int
scas
mov
je
sub
movsl
jle
adc
cld
out
fnstenv
roll
cmpsl
dec
mov
mov
mov
gs
outsb
mov
pop
lods
test
stos
mov
pop
mov
insb
jno
adc
mov
shl
sub
cmpsl
add
iret
and
pop
fisttps
dec
testw
sub
ja
lcall
cmp
jecxz
call
aas
jecxz
lods
pop
xchg
inc
bound
addr16
lock
in
mov
add
jle
cs
aad
jmp
push
add
inc
movsl
and
mov
mov
leave
and
add
inc
pusha
pushf
cmp
lds
dec
mov
cwtl
mov
sbb
cmp
and
andl
jmp
out
lret
xor
pop
push
mov
xchg
in
jne
inc
out
push
clc
xlat
mov
test
sub
ss
adc
subl
int3
xchg
movsl
ljmp
cld
or
stos
mov
xchg
cmpsb
iret
jle
outsb
pop
pop
shr
cmpsl
jns
pop
in
scas
and
pop
in
enter
adc
jne
mov
sub
fistpll
movsl
in
fadds
gs
pop
leave
inc
mov
aaa
and
add
mov
sti
xorb
mov
inc
int
xlat
push
xorl
pop
or
shlb
jle
cmp
push
arpl
xorb
cs
and
cmp
in
lahf
jne
insl
pop
or
cmc
xor
out
cld
dec
mov
and
mov
data16
loop
mov
aam
nop
movaps
imul
ret
inc
sub
pop
add
icebp
imul
insl
fwait
movsl
cmpsb
jp
lods
scas
popf
daa
sub
aad
pusha
xorl
inc
and
push
mov
pop
pop
or
push
sbb
icebp
push
jecxz
into
rorl
inc
jge
pop
movsb
sub
or
or
cltd
jb
sub
test
sub
std
lret
loop
inc
fidivl
mov
loope
dec
lds
ja
dec
pop
jae
jb
push
jnp
les
pop
cld
je
cmp
sbb
add
testb
push
dec
loop
and
mov
in
jle
mov
addr16
sarb
notb
mov
rorb
jno
int3
into
daa
aam
lock
cli
xchg
fdivs
cmp
jl
movb
mov
out
mov
popa
xchg
fcomip
outsb
xchg
shrl
andb
cmc
add
mov
mov
sbb
pop
pop
jecxz
fisttpl
js
sub
inc
repz
inc
outsl
inc
jae
push
and
adc
sub
ret
jae
mov
das
ret
and
insb
outsb
test
cmpsl
cwtl
repnz
imul
mov
add
add
and
mov
std
cmc
outsb
and
cld
inc
jno
xor
int3
jne
sub
icebp
cli
mov
dec
xchg
jecxz
lahf
xchg
sbb
jg
lret
iret
mov
or
pop
push
cmpl
jnp
dec
test
cmpsb
movsb
sbb
jg
sbbl
scas
mov
fistpl
aas
out
and
jg
in
fmull
cmp
cmp
repnz
pop
jb
sbb
test
mov
rorb
loope
shl
fs
les
and
cmp
jne
inc
dec
sub
push
sbbl
add
inc
mov
sub
stos
insb
call
lcall
imul
xchg
push
cmp
jo
pop
push
adc
scas
and
shrb
jne
mov
cltd
shrb
lret
into
adc
ret
cmp
jb
mov
aas
test
sbb
push
scas
mov
push
int3
inc
int3
add
test
xchg
sti
sbb
mov
sahf
lock
rcrb
outsl
mov
lret
cmpsb
gs
faddl
add
fwait
xor
test
inc
mov
cmp
test
and
sub
sarl
mov
pop
cmp
movsb
dec
pop
fldl
pop
pop
popa
dec
movsb
ds
gs
shll
stos
ds
mov
add
lds
inc
jb
dec
or
sti
adc
stos
pop
adc
add
movsb
jns
test
pop
push
outsb
pop
popa
mov
in
fcoms
mov
mov
jecxz
notl
inc
cmc
dec
movsb
pusha
fsub
dec
sub
pop
mov
loop
roll
sub
sbb
fbld
or
sbb
xor
loope
sahf
xor
mov
jle
lret
scas
cld
movsl
mov
rcrl
push
cld
scas
mov
mov
divb
xchg
outsb
test
lret
jo
jns
dec
jecxz
lea
insb
xor
cwtl
dec
pop
xlat
fistps
inc
adc
aas
shll
pop
adc
pushf
and
lods
xchg
aaa
pop
and
mov
in
ffreep
xor
insb
les
sbb
mov
mov
fsubs
inc
jecxz
xchg
sub
and
adc
sub
pop
cmpsl
adc
sub
loope
aad
xor
daa
lcall
add
lods
jp
fnstenv
out
dec
div
pushf
loope
and
dec
sub
popa
sub
and
fdivrp
inc
out
push
insb
push
mov
sub
adc
dec
lret
adc
in
pop
inc
decb
into
cmp
xchg
imul
into
pushf
test
test
dec
or
inc
pop
mov
int3
outsw
add
cmpsb
inc
cltd
clc
jb
scas
jns
imul
ds
xor
mov
jl
daa
cmp
fucomp
aaa
mov
mov
outsl
sub
aaa
pop
leave
sub
add
aad
es
add
out
mov
add
mov
and
xchg
lods
or
aam
mov
loop
mov
sahf
aaa
js
sbb
repz
sbb
or
pop
shll
popf
mov
cmp
and
adc
scas
sub
lods
cld
add
lea
push
vpavgw
rorl
dec
jo
shlb
and
xor
sarb
scas
rcll
out
cmp
iret
dec
int3
mov
or
aaa
mov
insl
xchg
lret
xchg
cmpsl
ds
jmp
stc
mov
or
shrb
mov
rep
in
loope
push
flds
ror
lods
test
xchg
mov
adc
push
addr16
repz
pop
mov
shrb
rorb
cld
cld
mov
iret
add
inc
mov
outsl
lods
pop
mov
ret
cmpsb
mov
fbld
sub
inc
sbb
std
sbb
mov
cmpsl
pop
sarb
es
loop
lret
jmp
mov
mov
adc
sbb
xor
mov
push
cltd
insb
mov
mov
mov
icebp
mov
shl
fsubrs
push
es
mov
sahf
xchg
rcrl
or
push
fstpl
jl
cs
fsubs
push
mov
inc
fsubrl
in
movsb
imulb
sti
add
scas
cs
in
aam
and
ret
ljmp
into
adc
pop
and
clc
sahf
adc
repz
stc
inc
nop
cmp
in
xchg
cmp
jmp
outsl
fdivrl
aad
sub
xor
fmuls
xchg
sub
int
imul
xchg
inc
stos
bound
sarb
cmpsl
mov
mov
mov
in
cltd
out
xchg
jae
mov
add
jne
arpl
pop
es
xchg
sub
outsb
jg
nop
mov
cwtl
and
lea
lock
adc
adc
cmp
fisttps
jnp
cli
lret
movsl
jo
add
gs
aaa
inc
roll
mov
fsub
mov
dec
ljmp
mov
nop
addr16
xchg
dec
lods
xchg
dec
clc
mov
cmpsl
push
pop
push
iret
jo
sbb
mov
sub
outsb
mov
fistpll
scas
sarl
xchg
cli
push
lods
hlt
fsubrs
aad
dec
inc
in
insb
xorb
adc
ret
mov
sbb
adc
das
add
inc
dec
and
into
mov
push
mov
into
std
cmpl
and
insb
test
pop
decb
pop
pushf
stc
pusha
out
dec
cmova
pop
push
js
addr16
fdivrl
or
int3
sub
mov
and
xorl
fdiv
movsl
insb
xchg
adc
and
adc
jle
pop
mov
push
iret
xchg
ffreep
jne
lea
xchg
setg
adc
dec
cmp
sbb
and
xchg
and
mov
mov
dec
mov
aam
inc
mov
mov
test
out
jle
push
push
mov
adc
aas
mov
sub
dec
cmp
jb
test
aam
xchg
pop
mov
cmp
adc
and
mov
out
andl
sub
mov
in
mov
lcall
cwtl
jl
ja
cmp
into
dec
ret
inc
push
into
cmp
push
in
fcoml
xchg
cmp
mov
lcall
ret
and
sbb
lcall
xchg
fcom
xchg
pop
inc
shll
sub
movsb
clc
mov
xchg
cmp
inc
movzwl
pop
mov
jge
aam
movsl
pop
fidivrs
rorb
stos
ret
mov
leave
mov
ret
cmp
sbb
mov
push
mov
mov
insl
jg
fisubrs
pop
imul
cmp
push
lret
in
inc
push
in
or
lea
or
mov
sub
mov
int
lahf
fsts
mov
decl
orb
mov
xchg
dec
mov
in
ljmp
adc
pop
push
movsl
mov
push
mov
lea
pop
push
mov
push
sbb
and
pop
inc
add
std
mov
cld
adc
dec
pushf
cmp
in
testb
jecxz
std
xor
aaa
jb
or
or
stc
fldenv
sbb
sarl
inc
pushl
xor
orl
sbb
ficoms
insb
sub
sbb
pop
sub
mov
jle
cmc
mov
arpl
xchg
movsb
fcomps
movsb
fistpl
inc
int3
fidivrl
pop
popa
sbb
ret
rol
dec
mov
lahf
adc
jne
iret
nop
cwtl
test
pushf
shl
xchg
psubusw
ljmp
je
daa
js
mov
les
pop
lods
and
cmp
sub
lods
in
mov
or
shlb
popa
mov
shrb
mov
lcall
lods
mov
xor
shll
and
rcrb
out
ljmp
in
inc
xchg
ret
mov
shll
sub
mov
adc
out
inc
enter
inc
lcall
pop
loope
sbb
bound
in
loope
pop
or
add
pop
insb
xchg
lret
ljmp
or
push
scas
xchg
lock
clc
adc
mov
fmull
lret
xchg
mov
adc
push
mov
cmpsb
popl
xor
ficoml
or
cli
dec
jb
and
pop
mov
sub
mov
icebp
push
data16
mov
or
dec
daa
cmp
sub
mov
lret
and
hlt
lds
lret
mov
sub
in
dec
add
add
pushf
push
jae
cmp
ds
push
insb
fdiv
inc
outsb
out
sbb
or
int3
adc
add
aaa
jne
iret
and
jae
push
cmpsl
adc
or
pusha
enter
scas
decb
cmpsb
pop
mov
cmp
or
add
add
mov
mov
and
dec
inc
popa
aaa
mov
mov
xor
sub
dec
inc
repz
or
cmpl
jl
fmuls
add
sbb
jnp
mov
sahf
movsl
add
je
call
pop
subb
in
xor
ljmp
push
push
cld
xor
mov
bound
push
das
std
test
mov
popa
sbb
dec
aaa
xchg
jns
stc
enter
push
out
sbb
out
cli
lds
cli
sar
jge
xor
xchg
out
daa
add
fs
lods
add
std
rcll
jns
dec
in
cwtl
mov
dec
xor
shl
repz
xor
mov
movsl
hlt
xor
movsb
call
das
mov
jne
sub
cmpsl
call
push
inc
push
mov
pop
dec
or
sub
outsb
imul
cmpsb
ja
aaa
xchg
gs
pushf
fidivrl
add
in
adc
lahf
cmp
and
lcall
push
cmp
mov
jecxz
fbstp
push
imul
jg
jb
cmp
mov
xor
arpl
outsb
push
sarl
lret
xchg
nop
push
fists
pop
cmp
enter
and
and
mov
shll
sub
out
orl
dec
adc
sbb
push
nop
out
popa
lea
divl
lret
xor
push
cmp
adc
xlat
mov
pushf
jle
xor
inc
lods
inc
mov
push
xchg
push
jge
dec
dec
fwait
add
mov
mov
hlt
adc
pop
stos
psrad
xor
dec
pusha
pop
imul
mov
addl
jecxz
hlt
xchg
push
xor
jns
xchg
lcall
inc
repz
push
mov
push
ljmp
inc
mov
dec
dec
xlat
out
and
mov
mov
mov
sbb
mov
dec
aad
sti
adc
push
dec
dec
std
cmc
jg
sbb
pop
pop
icebp
stos
xor
jae
imul
pushf
fadd
je
inc
fimull
or
xchg
outsl
and
stc
imul
mov
sbb
and
lock
lea
and
cmpsl
sbbl
push
xchg
xchg
clc
fdivs
out
pop
inc
mov
dec
cmpsb
mov
fadds
pop
aas
xchg
ljmp
popa
sub
jno
fisttpll
or
mov
jle
add
cld
lret
mov
add
push
gs
test
stos
fistpl
jl
in
dec
filds
or
sbb
inc
repnz
movb
loope
neg
cmp
fcoml
aam
mov
cmp
ljmp
sub
js
cmp
cmpsb
in
into
or
inc
inc
or
sbb
repnz
mov
dec
lret
pop
sub
es
scas
out
mov
cwtl
mov
mov
shlb
mov
sbb
lods
loope
aad
mov
and
lret
cli
inc
pop
ja
addr16
adc
cli
mov
xor
adc
leave
sub
dec
out
into
mov
nop
stos
adc
adcb
jo
aas
push
test
push
lret
cmp
fwait
cmp
les
jl
imul
push
sub
xor
sbbb
inc
and
xchg
out
mov
xchg
dec
xchg
or
loope
mulb
std
jno
and
sub
or
ja
stos
dec
call
fcmovbe
or
fwait
call
cmp
pop
add
mov
jl
or
cwtl
mov
pop
or
leave
mov
push
jecxz
sbb
add
invd
push
inc
push
jmp
mov
sahf
jns
daa
mov
in
jo
out
and
sub
je
push
inc
mov
out
push
jge
sub
and
mov
push
imul
outsb
push
xchg
jg
sub
mov
not
push
jo
sub
pop
sbb
fcomps
negl
xor
leave
inc
insb
pusha
pop
mov
and
mov
lret
jge
fwait
ja
rol
mov
and
adc
into
aam
xor
sbbl
iret
imul
sbb
pop
imul
mov
loope
imul
jno
test
pop
mov
sub
test
data16
cmp
mov
fnsave
push
mov
neg
idiv
cwtl
in
iret
push
push
test
std
bound
cmp
cmp
lret
loope
push
sub
scas
arpl
mov
xor
adc
loop
cmpsb
adc
les
or
lods
pop
cmp
cmpb
fimull
pop
inc
stos
stc
and
fs
ror
nop
cmpsb
pop
xchg
pop
outsl
jo
dec
xor
cld
imul
movsl
mov
mov
jecxz
out
add
mov
push
das
or
jbe
das
inc
stc
xchg
outsb
lret
sbb
mov
outsb
in
aaa
and
jne
sahf
cmc
fs
mov
movsl
or
xchg
pop
sbb
jecxz
jl
add
mov
inc
adc
in
das
dec
xchg
mov
xor
lcall
pop
and
sub
insl
jg
in
lods
js
jge
xchg
xor
push
lret
xchg
jecxz
add
adc
cmp
pop
sbb
ret
inc
sbb
loope
popf
pusha
adc
jle
and
sub
jne
fwait
dec
dec
xor
pop
scas
push
aas
mov
imul
orl
sbb
clc
lds
es
loopne
es
hlt
pop
fcmovbe
subl
mov
int3
int3
jno
out
lea
add
cwtl
test
aad
jge
das
sbb
or
subb
repz
mov
repnz
fldl2e
aad
inc
sbb
and
fisttpll
icebp
mov
push
push
sub
mov
xor
ret
rcll
inc
fdivrl
cmp
cmc
mov
push
pop
lods
mov
mov
pop
daa
hlt
leave
int
imul
xor
sbb
fcompl
sahf
dec
ja
insl
mov
sub
sbb
enter
rcr
fnstsw
add
neg
pop
andb
lret
aas
insl
mov
aad
in
sub
mov
imul
mov
clc
test
mov
xor
addr16
shrb
notb
sahf
sbb
push
loope
jb
push
icebp
sbb
in
icebp
out
aas
lcall
shr
jl
cmp
in
cld
ret
xor
add
mov
fcmovu
cmp
adc
int3
call
jg
mov
into
pushf
adc
mov
push
sub
cltd
push
cmpsb
jne
mov
inc
orb
mov
mov
or
add
dec
insb
jnp
xor
loope
stos
jmp
mov
fcomps
pop
lods
inc
xchg
jp
inc
sahf
pop
jo
fadds
jo
or
push
or
nop
mov
mov
xchg
loopne
cltd
pop
mov
popf
stos
mov
sbb
xchg
mov
sahf
sbb
sub
mov
stc
mov
inc
cmp
outsl
xchg
into
fisttps
hlt
popf
scas
addr16
gs
stc
fdivs
stc
jne
pop
push
sbb
dec
sbb
aas
cmpsb
mov
sbb
sub
movups
xchg
fisubl
out
jns
cmpsl
cli
daa
imul
add
fstl
loope
jo
cmp
mov
mov
add
mov
repnz
les
std
sub
add
ret
mov
mov
push
push
push
cmp
lea
and
mov
aam
negl
xor
xchg
loop
and
sbbb
cmpsl
aaa
push
xor
dec
in
out
push
jnp
loopne
rolb
or
cmp
mov
add
xor
fs
mov
mov
mov
sahf
cli
adc
loopne
xchg
dec
lods
scas
mov
or
cmp
loopew
adc
mov
push
cmp
frstor
insb
outsl
inc
cmp
add
icebp
push
dec
shlb
push
testb
lret
in
ret
push
dec
push
mov
sub
ret
imul
fisubrs
jle
adc
stos
int
mov
lcall
call
aad
fcoml
pop
pop
test
inc
imul
mov
shlb
ss
pop
push
inc
daa
cmp
aam
fcomi
sbb
lods
cmpb
leave
ss
shrd
dec
mov
dec
pop
cmp
sub
sti
fstpl
test
adc
fnstcw
aad
jge
popa
jnp
inc
mov
mov
int3
aaa
stos
cmpl
inc
fistpll
xchg
mov
fwait
shll
dec
xchg
xor
outsl
int3
mov
sbb
pop
jbe
add
mov
jmp
cmpsb
xor
pop
cmp
js
outsl
mov
pop
sbb
fdivrl
test
mov
push
add
pushf
push
inc
jne
push
shrb
cmpsl
or
push
mov
mov
cli
xor
pop
mov
inc
iret
nop
push
jge
pop
cmp
les
and
mov
mov
gs
jo
insl
pop
mov
mov
mov
outsb
add
inc
addl
mov
popf
xchg
xchg
and
aas
mov
cli
mov
dec
dec
inc
sub
sbb
lcall
jge
nop
cmp
mov
xchg
lds
fidivrl
out
jmp
sahf
cs
xchg
cmp
out
popa
sbb
pop
or
xor
mov
mov
repnz
lods
in
xor
int
push
popa
inc
in
or
mov
loop
fld
xor
and
mov
and
out
insb
jg
clc
fsubl
or
int
out
in
inc
mov
sbbl
movb
es
add
jl
add
inc
stos
loopne
arpl
cmc
pop
and
push
aad
fstps
std
jbe
sub
push
adc
mov
ja
pop
cli
lea
pop
repnz
xchg
divl
into
lcall
mov
cs
sbbl
mov
jge
sub
fcoms
enter
mov
xchg
test
mov
imul
inc
out
pop
jnp
iret
ret
mov
pop
movsb
adc
pop
lods
dec
push
inc
sti
sub
orl
sub
int3
adcl
cmp
push
cmpsb
xorl
mov
pop
push
out
xchg
dec
mov
dec
dec
inc
adc
movsl
add
movsl
cmp
cmp
fistpll
dec
insl
add
test
lret
lea
and
jns
add
dec
pop
mov
push
xor
lret
xchg
jno
outsl
sbb
lret
inc
xchg
mov
inc
push
push
pop
lods
pop
add
pop
mov
mov
ljmp
nop
lret
bound
mov
cltd
sti
into
leave
stos
jge
and
dec
inc
lcall
sub
pop
jb
xchg
je
xor
push
cmpsb
adc
xchg
imul
scas
adc
and
jnp
test
sbb
ja
lea
sub
mov
mov
test
cmc
aad
adc
inc
jno
popa
push
xchg
aad
adc
pop
std
xor
lcall
mov
cmpb
nop
cwtl
and
dec
jo
scas
divl
pop
add
pushf
cwtl
fwait
sarl
dec
jge
call
mov
pop
imulb
lock
push
or
insl
iret
dec
test
lea
lret
je
cmpsl
insl
shll
inc
mov
dec
push
xchg
cmp
xchg
mov
sbb
sbbl
fs
addb
sub
fistl
adc
sahf
adc
into
int3
jbe
sbb
inc
mov
add
fcmovu
xchg
js
jb
push
lret
dec
mov
cmp
rorb
add
cld
or
je
imul
dec
xor
aas
mov
pop
cli
out
pusha
popl
sarl
fdivrs
cwtl
mov
imul
jp
lahf
pop
lds
rep
cmp
cli
xchg
les
push
jl
push
mov
subb
adc
lcall
push
dec
mov
out
iret
mov
rcrb
cmc
and
fmul
push
outsl
dec
jg
aam
ljmp
mov
enter
dec
aam
decl
and
repnz
lret
lea
sbb
adc
pop
pusha
rorb
pop
or
inc
out
mov
pop
int
add
ror
jp
stos
sub
pop
addb
sahf
sub
pmulhuw
xor
inc
push
lods
dec
loop
cmp
mov
xchg
roll
in
push
inc
imul
lds
shrl
pushl
add
xchg
test
inc
dec
cld
or
test
push
fisttpl
test
push
adcb
je
sbb
add
sbb
imul
fstps
shll
or
popf
clc
push
dec
xor
jns
cmpb
repnz
jp
std
addr16
sarl
adc
cmpsl
mov
aam
mov
cmc
enter
dec
sub
mov
adc
out
cld
int3
push
ss
jmp
cmpsb
jecxz
cld
loope
mov
push
sub
push
aaa
jg
and
inc
mov
lods
mov
sahf
inc
pop
cmp
jmp
int
jl
lods
mov
jle
sub
push
fldl
push
add
je
sub
mov
test
arpl
ds
mov
insb
lods
jmp
clc
jmp
cwtl
push
mov
push
add
or
std
push
repnz
or
fldenv
adcl
mov
sub
jge
add
jmp
and
xchg
repnz
dec
mov
ja
adc
mov
ds
in
gs
data16
mov
arpl
cmpl
mov
mov
rclb
ljmp
cmovp
sbb
xchg
or
jge
xchg
test
insb
jns
fs
or
into
mov
sti
dec
out
mov
pop
insl
or
lcall
ret
dec
pop
mov
dec
jo
lock
test
ret
adc
call
and
jae
ss
aam
aaa
mov
cmp
push
sub
pop
addb
add
adc
fadds
mov
lret
ret
or
add
sub
cmp
pop
and
frstor
xor
in
into
jl
popf
ret
sub
xor
mov
out
cmpsw
dec
movsl
inc
mov
jmp
adc
pop
mov
mov
cmp
xor
nop
cld
pop
iret
jns
add
cmp
in
out
cmp
mov
in
push
add
push
cltd
sahf
mov
popa
ret
mov
lahf
sti
js
pop
mov
cmpsb
push
adc
mov
add
addr16
dec
lock
out
lds
jl
inc
addr16
jno
fs
mov
lret
sub
push
push
and
repnz
shrl
lahf
std
fildll
push
xchg
or
psraw
insb
and
jge
ljmp
popa
out
xchg
das
push
sbb
in
pop
shrl
in
dec
cli
xchg
mov
adc
imul
jg
sbb
add
fsubrs
pop
lret
jno
js
add
pop
mov
lea
add
fs
push
sub
lret
fisubl
sub
ljmp
push
sbb
jge
or
cmp
fwait
in
inc
push
push
fnsave
mov
xchg
gs
push
pop
mov
or
mov
aaa
jp
out
lea
ljmp
rcrb
pop
ret
hlt
int3
pop
int3
insl
cmpsl
mov
rcr
ja
enter
mov
cld
cmpsb
jno
test
adc
push
jb
popa
in
clc
loop
mov
sbb
inc
dec
pop
sti
add
test
repnz
sub
mov
daa
lods
out
mov
popa
stc
jecxz
mov
popl
mov
test
and
lds
out
or
test
mov
push
inc
stos
inc
jp
aas
jnp
push
fcmovbe
inc
jb
push
sbb
or
inc
in
sub
and
int3
push
or
cli
stos
inc
in
jne
xor
dec
ss
and
jno
sbb
int3
add
sbb
cwtl
push
and
out
cld
xchg
stos
adc
dec
jno
mov
outsl
fwait
jmp
sbb
js
pop
sti
cmp
das
adc
xor
loope
push
sub
adc
pop
or
aaa
imul
cmpb
xchg
in
xchg
hlt
cmpb
enter
dec
xor
out
xor
lcall
cs
repnz
mov
ss
mul
mov
mov
fisubs
addr16
mov
or
xchg
cwtl
insb
pop
dec
repnz
lock
arpl
hlt
xor
iret
ficoms
push
sbb
xor
cwtl
ret
pop
mov
lahf
aaa
xchg
cli
arpl
icebp
mov
mov
dec
xchg
ficomps
jge
xlat
hlt
xchg
inc
jge
jg
mov
into
or
movsb
ljmp
sti
dec
and
pop
mov
pop
adc
in
or
push
or
aaa
fistpl
add
xchg
inc
fwait
push
js
addr16
mov
std
inc
mov
push
ficompl
inc
pop
or
mov
scas
xchg
xor
popl
ret
int
push
in
es
inc
push
and
push
mov
jb
insl
mov
xchg
cmp
add
jbe
add
movsb
inc
das
pop
add
cwtl
cli
add
icebp
add
test
lret
push
into
push
adc
inc
loop
jns
inc
push
hlt
pop
sti
es
aam
hlt
rcll
or
cmc
popf
loopne
and
leave
jbe
inc
mov
add
add
loope
clc
sbb
ficoms
push
stos
ss
iret
popf
loop
imul
out
aas
out
lahf
mov
imul
or
into
xchg
pusha
in
add
aam
cmp
jno
scas
mov
jbe
stos
fcmovne
jns
add
cltd
insl
in
loopne
sub
addb
ficoms
pop
xchg
int
imul
xor
sub
lds
rcr
push
and
test
lret
mov
xlat
mov
icebp
lock
inc
inc
dec
pop
sti
jmp
add
or
jl
outsb
adc
and
inc
cli
insl
fiadds
jbe
inc
out
outsb
mov
jmp
jp
and
push
push
loope
negl
leave
aaa
arpl
jbe
decl
rcrl
add
cmpsl
mov
push
jnp
inc
and
push
aad
mov
push
aam
mov
data16
bound
sti
push
mov
adc
and
out
add
mov
dec
or
adc
jnp
or
psllq
and
and
jp
cwtl
or
frstor
je
loopne
xchg
mov
mov
add
cmp
shrl
addr16
xor
ds
mov
xor
jl
sub
mov
xchg
imul
andb
jge
clc
pushf
cmp
vcvtpd2ps
push
push
inc
jecxz
mov
cmpsb
xchg
iret
sub
ret
les
push
mov
adc
inc
in
xchg
mov
jp
clc
fisttps
int3
add
adcb
es
fstl
dec
mov
aaa
xchg
push
inc
and
ja
aad
dec
mov
outsb
push
push
xor
in
loope
xchg
adc
pop
sub
pusha
mov
mov
mov
icebp
or
sbb
and
loop
fcmovu
xor
jge
cli
stos
sbb
jmp
xchg
pop
out
in
xchg
sub
lret
and
sbb
shlb
movsb
push
jns
adc
xchg
cmp
sahf
cmpsl
sbbl
mov
xchg
dec
sbb
in
rorb
daa
call
lods
gs
sub
jmp
cmp
dec
cmp
jno
gs
mov
pop
enter
sbb
dec
lret
xchg
push
movsb
add
jo
sub
test
jb
dec
ret
adc
xchg
xchg
popa
jae
rclb
mov
psubsw
sbbb
les
fbld
adc
fnstsw
mov
sarb
inc
out
push
fwait
iret
push
lds
or
add
icebp
push
add
arpl
cmc
or
popf
mov
nop
hlt
pop
pop
fmull
daa
add
or
mov
pop
out
test
push
loop
pop
arpl
lods
dec
movsl
jae
cmc
je
xor
and
lock
jno
mov
mov
pop
add
pop
mul
std
rclb
mov
jmp
adc
sub
add
fsubl
ljmp
and
pushf
lods
pop
adc
and
sub
mov
ja
lods
sbb
xchg
ss
adc
dec
mov
pop
push
xor
cwtl
out
insw
sub
out
pop
cmc
outsb
aaa
sub
and
push
xchg
inc
xor
test
lock
mov
repz
arpl
add
in
leave
aad
bound
repnz
jne
dec
pusha
xor
cmp
fldl
sar
out
test
adc
adc
mov
push
call
ss
sahf
add
pop
in
lret
div
aad
sub
and
jp
mov
or
xchg
mov
es
pop
rcr
ret
movsb
add
stc
jno
scas
mov
dec
cbtw
mov
std
mov
sahf
jno
add
in
add
ret
hlt
lret
mov
cmpsb
sbb
xchg
sti
repz
imul
inc
je
arpl
push
and
ljmp
push
test
inc
or
jae
call
sbb
mov
out
mov
adc
push
test
cli
insb
sbb
cltd
or
arpl
es
fwait
push
pop
jl
xchg
test
dec
orl
cmp
pop
mov
pop
mov
int
scas
lahf
fcomip
aam
push
popf
add
or
mulb
pop
outsb
push
cmp
pop
inc
mov
jp
shll
mov
cmpsb
xchg
adc
jle
mov
stos
lret
pop
jb
negb
loopne
in
add
mov
out
in
dec
pop
cmp
add
sub
push
mov
or
xor
icebp
shl
xor
sbb
pop
fpatan
ljmp
fucompp
mov
lods
aad
xor
and
push
out
testl
mov
mov
push
inc
push
mov
hlt
add
xchg
pop
sbb
cmpsl
xor
jns
lcall
fbstp
sbb
mov
in
test
dec
fldenv
jl
xor
mov
out
sub
cmp
pop
add
leave
les
das
jae
mov
nop
cmp
or
mov
sbb
cmp
cmp
test
cltd
in
das
xor
sub
sub
sub
sbb
js
jb
sti
stc
cmp
movsl
test
jnp
leave
xor
addr16
clc
pop
lret
or
xor
jmp
sub
inc
mov
sbb
sub
mov
jns
mov
loop
jge
pushf
cmp
inc
ljmp
adc
scas
loope
testl
xor
scas
jg
dec
cmpl
and
cmc
lds
adc
add
ds
mov
cli
adc
out
faddl
xchg
and
ja
jne
adc
insl
loopne
and
jg
xchg
pop
pop
aad
and
mov
jae
pusha
push
loop
xchg
and
or
js
jle
repz
mov
and
movsl
out
fcmovu
arpl
aad
nop
cmp
repz
popa
jno
mov
push
mov
xor
sbb
hlt
jb
xor
inc
add
adc
cmp
and
adc
jp
stos
cmp
fidivl
push
inc
mov
and
pop
add
xchg
int3
jl
outsb
xchg
adc
in
lds
ljmp
mov
or
int3
jb
mov
in
daa
push
fsubr
pop
aam
and
femms
lret
rorl
jl
pop
add
sbb
jo
in
sbb
xchg
mov
cmpsl
pushf
es
arpl
adc
js
popa
and
cld
rorl
sub
call
mul
in
inc
xchg
inc
out
adc
cmp
dec
dec
fmul
shlb
pop
and
pushf
adc
movsl
ret
repnz
int3
arpl
shl
and
ja
or
sbb
xchg
push
scas
add
stc
loopne
fdivl
mov
out
xor
leave
movsb
popf
xchg
mov
out
add
ret
and
int3
clc
xchg
xchg
fsubrp
out
jecxz
push
pop
pop
in
bound
cmp
mov
pusha
push
std
pop
sub
push
shl
jp
mov
nop
std
lret
xchg
jp
popa
pop
popa
pop
outsl
es
dec
out
aam
lds
pop
mov
call
sti
sahf
and
push
pusha
dec
fimuls
rcr
ret
add
dec
add
jne
mov
ss
sbb
vcvtps2pd
dec
sbb
arpl
insb
repz
ret
xchg
xor
outsl
xor
xchg
test
outsb
in
ss
or
mov
fldz
rcll
fistl
fcmovbe
stc
cmpb
loopne
push
sub
adc
or
inc
push
sub
lret
adc
into
adc
daa
insb
cmp
fbstp
cmp
sbb
xchg
add
in
pop
lds
and
add
add
lcall
or
orl
push
imul
inc
mov
sahf
addr16
les
ds
xor
jl
imul
aad
gs
enter
adc
adc
mov
mov
xchg
test
rclb
mov
into
test
scas
test
pop
into
and
mov
ret
pushf
int
mov
mov
or
xchg
iret
lock
xchg
clc
nop
xchg
and
inc
jb
and
loopne
inc
mov
jnp
push
xchg
mov
sbb
iret
pop
sub
or
jbe
xorl
lahf
and
mov
push
je
inc
in
add
dec
xor
sbb
and
or
mov
outsl
loop
pop
jge
test
add
pop
mov
enter
inc
cld
stc
ja
loope
sub
push
or
rcll
xor
jbe
xor
orb
out
mov
adc
lret
push
and
adc
js
xchg
sbb
inc
or
mov
mov
bound
cmp
xchg
mov
push
mov
test
gs
loop
cmpsl
or
std
sub
cmp
test
enter
clc
and
shrl
lret
push
push
push
push
fadds
jbe
in
aam
arpl
ja
lds
add
sbb
inc
negb
mov
mov
push
xor
addr16
mov
sub
pop
xchg
pop
jge
std
mov
sbb
hlt
pop
scas
xchg
xchg
out
sub
repnz
jns
pusha
enter
dec
stc
out
mov
dec
xor
iret
lcall
mov
sbb
mov
mov
and
jmp
std
push
jns
jb
sbb
or
and
loope
repnz
mov
cli
jno
and
imul
xchg
andl
shll
cli
mov
popf
inc
jp
mov
fstl
sti
insl
cmp
imul
inc
iret
dec
jae
dec
test
loop
mov
je
and
and
std
inc
in
ret
icebp
sbb
imul
xor
movb
push
sub
fs
call
dec
adc
daa
cmp
ljmp
ss
pop
or
test
fmuls
out
sahf
icebp
xlat
scas
in
cmpsl
inc
xchg
daa
xor
cmp
jmp
inc
lret
insl
cli
mov
movsl
add
mov
roll
push
jne
mov
adc
and
xchg
add
jmp
mov
sbb
lock
fiadds
push
test
jae
nop
jno
cmc
je
lea
xchg
sbb
mov
xchg
sub
dec
push
es
dec
enter
mov
out
pop
aaa
lock
es
cmpsb
lret
testl
jno
stos
das
in
jecxz
and
out
in
ljmp
sub
xchg
es
imul
jecxz
jae
rcrl
popa
cmp
iret
fwait
insb
jg
cmp
cmp
sbb
dec
ds
clc
test
cmp
pop
popf
jne
mov
jb
sarb
mov
daa
lea
imul
and
insb
mov
pop
inc
or
into
inc
mov
test
mov
sub
gs
clc
xchg
push
pop
loope
mov
mov
repnz
cmp
inc
cltd
cmpsb
lret
cmp
sub
test
add
xor
inc
pop
mov
mov
outsl
add
sbb
shlb
rcll
call
jmp
or
decl
sbb
mov
inc
faddl
divb
mov
pop
ss
fs
es
hlt
ja
mov
lret
aam
dec
mov
xlat
dec
divb
decl
dec
fucom
and
stos
cld
hlt
xchg
addr16
enter
mov
ljmp
mov
in
popa
cmpsl
adc
xchg
mov
push
pop
imul
jns
mov
dec
repz
inc
dec
or
daa
pop
sbb
xor
nop
pop
loopne
mov
int3
sub
je
out
push
int
push
inc
xlat
push
push
add
in
aaa
dec
push
loopne
or
shll
pop
jge
adc
lcall
lods
ljmp
cld
sbb
rorb
and
inc
jns
outsl
mov
movsl
in
inc
shlb
pop
cli
int
test
xchg
add
mov
in
ror
add
and
aad
add
xor
mov
or
scas
dec
mov
sti
cli
repnz
push
out
add
sub
int3
insl
dec
into
in
jnp
pop
in
mov
pop
inc
or
jno
push
popl
out
adc
sub
adc
and
sysret
popf
push
aaa
and
daa
mov
pop
pushl
push
lea
and
jle
repnz
pop
in
add
or
xchg
mov
cmc
cmp
ljmp
lea
sbb
test
and
pop
fcmovu
cwtl
mov
or
nop
out
aaa
imul
nop
jecxz
sub
mov
push
xchg
mov
popf
add
stos
mov
cmp
int3
sbb
fmull
lret
nopl
cmp
sub
in
and
mov
mov
fcoms
sub
cmp
test
or
inc
decb
andb
cmpsl
mov
pop
mov
inc
fbstp
push
sbbb
push
decl
scas
pusha
mov
mov
imul
in
mov
fbld
and
mov
push
mov
insl
mov
dec
jl
mov
movsl
jno
xor
stc
aas
hlt
xchg
lods
lcall
lods
push
mov
dec
rcrb
les
pfnacc
or
lods
jbe
xor
push
test
js
pop
add
dec
repnz
jne
outsl
loopne
adc
mov
out
jge
lods
and
mov
sbb
jg
out
repz
loop
call
stos
mov
sub
arpl
mov
test
das
or
dec
dec
mov
inc
sbb
es
lcall
lret
scas
jno
push
push
sahf
nop
inc
or
and
test
cmp
ja
and
pusha
sbb
in
push
xorl
in
addr16
mov
pop
and
fisubs
mov
in
or
imul
jo
adc
lret
test
jb
jecxz
lcall
xor
and
popa
cmp
jmp
adc
fisttpl
pop
cli
or
xchg
in
lahf
sbb
repz
shlb
dec
inc
mov
jp
scas
cld
enter
leave
and
push
loope
fcmovne
inc
or
fnstcw
data16
sbb
adc
xchg
movsl
mov
pop
sub
mov
xchg
jbe
push
loopne
sbb
fstpl
mov
and
cmp
andb
aas
aad
jne
cmp
cwtl
mov
adcl
and
mov
xchg
push
add
int
imul
ss
mov
pop
mov
sub
dec
imul
repz
push
push
out
fadds
in
jno
out
sbb
ja
scas
push
adc
xor
cmp
ljmp
push
and
push
sar
and
dec
in
jge
sub
xor
mov
push
repz
cli
cmc
inc
and
pop
adc
sub
sub
dec
and
push
nop
scas
test
pusha
jge
cmp
push
fcompl
jne
scas
mov
xchg
or
adcb
ja
sbb
lahf
add
popf
movsl
jmp
nop
outsb
mov
or
inc
xchg
sub
or
lock
loope
fcomip
test
hlt
dec
inc
jl
lods
inc
mov
jmp
push
adc
in
mov
mov
cltd
pop
into
or
sbb
fimull
push
sar
mov
or
adc
adc
mov
fwait
mov
cmc
sbb
aaa
push
cld
pop
inc
jg
inc
dec
cmp
aas
xchg
pop
mov
adc
das
lahf
lahf
js
xor
add
fisubs
jb
pop
arpl
sbb
cmp
rolb
add
push
cmp
mov
rorb
in
bound
in
sub
mov
sarl
push
shrl
cmp
mov
dec
out
movl
mov
fists
ret
mov
xor
xchg
outsb
lret
hlt
pop
dec
mov
inc
out
and
cmp
int
push
mov
jnp
inc
lret
inc
xchg
pop
roll
rorl
or
dec
addb
jmp
push
sub
sbb
aaa
test
adc
adcl
lds
inc
ss
inc
sarl
aad
inc
lods
jge
and
sti
jo
mov
sbb
ljmp
fdivr
push
inc
dec
or
inc
xchg
push
dec
fcmovu
mov
mov
shlb
stos
lds
add
dec
and
insb
aam
jb
ljmp
inc
stos
test
add
es
lock
inc
xor
loope
movsb
test
filds
sbb
sub
out
xor
clc
ljmp
jl
lods
lret
pop
dec
xchg
iret
or
outsb
outsl
sbb
aaa
pop
aam
sbb
loop
cmc
repnz
bound
xchg
sarb
lock
pop
adc
dec
sub
loopne
jmp
inc
test
xor
imul
pop
mov
xchg
js
xchg
pop
insl
adcl
sti
loop
fisttpll
insb
jbe
pop
dec
mov
xchg
xchg
dec
xchg
loop
incl
shl
dec
push
sar
adc
adc
xchg
mov
popl
push
jecxz
mov
cs
imul
pushl
cmp
dec
loop,pn
dec
sbb
ja
lret
mov
or
jo
xchg
xchg
push
add
sub
outsl
xor
aad
andl
movsb
dec
jg
lea
add
push
jns
test
pop
std
xchg
into
cltd
ljmp
sbb
inc
adc
inc
jns
iret
insl
inc
add
sbb
into
cmpsb
jo
xchg
lcall
sbb
cmp
push
int
inc
cmpl
xchg
cmp
jle
and
inc
push
add
dec
fimuls
jl
es
dec
call
pushf
sahf
sub
or
push
xchg
adc
jae
pop
jg
lret
hlt
cmpsl
insl
mov
fldcw
int3
enter
jg
ficoml
sarb
xor
or
inc
incb
sub
js
or
hlt
iret
xchg
mov
or
sbb
aam
xor
jmp
hlt
jmp
cmpsb
nop
fstl
in
jnp
jbe
sub
mov
ret
pop
pop
or
or
add
popl
add
out
fwait
push
adc
adc
cltd
adc
iret
fwait
hlt
adc
aas
aad
fisttps
jecxz
mov
mov
sbb
sahf
lods
fbstp
addl
sti
mov
stos
xor
cmc
sbb
jmp
push
sbb
jns
mov
xchg
cmpsb
sub
push
fstps
mov
mov
xchg
out
add
push
jle
lea
mov
jbe
pop
add
sbb
into
in
pop
fcomps
push
mov
hlt
cmc
shll
sub
inc
dec
pop
fldl
cmp
in
inc
jb
es
mov
dec
mov
jge
xchg
data16
mov
jge
mov
pop
sbb
dec
in
lea
hlt
ret
pop
fs
mov
les
and
mov
dec
shrl
sbb
pop
lea
add
push
mov
addr16
lea
ss
jbe
in
ljmp
movl
enter
jae
mov
fisttpl
test
lea
inc
mov
ja
inc
cltd
inc
and
jo
mov
add
cltd
vpextrw
lds
jns
cmp
jecxz
pushf
inc
std
out
cld
add
ja
add
xchg
mov
lds
es
in
es
fidivrs
pop
and
mov
pop
sbb
aas
lds
mov
pop
scas
mov
stos
mov
sbb
fsubs
cmpsl
shr
push
and
jno
mov
sbb
and
push
pop
or
call
sub
pop
sbb
fidivrs
adcl
scas
out
stc
testb
mov
cmpsl
add
pop
add
or
mov
daa
mov
jg
cmc
lret
cmp
mov
inc
jbe
mov
imul
cmp
push
or
or
sbbl
pop
sbb
enter
movsb
sti
push
pop
and
inc
stos
loop
add
pop
xchg
pop
cmp
xchg
int
test
shll
cmp
mov
iret
sahf
push
sub
xchg
shll
mov
pushf
mov
jmp
or
les
push
sahf
mov
ss
test
aad
in
xchg
test
popa
add
mov
jge
cmc
jle
daa
movsl
daa
out
lods
movsl
insb
push
sub
pop
gs
cld
push
fildll
mov
fdivrs
sbb
jnp
sub
loopne
pusha
andl
push
mov
and
add
xchg
out
jecxz
mov
das
out
rcll
ret
inc
enter
sbb
inc
inc
sbb
pcmpgtb
js
daa
jle
push
sti
jb
xor
pop
xchg
mov
enter
jle
or
sub
xor
addr16
ret
popf
int3
push
testl
fcmovu
out
out
sbb
fwait
loopne
xchg
add
int3
pop
inc
pop
repnz
mov
sbb
jbe
or
push
test
add
xchg
lods
in
scas
popa
and
into
dec
mov
scas
xor
lea
push
adc
mov
scas
es
or
jbe
xorl
jns
movsl
std
scas
in
push
fcom
or
rorb
or
cmp
loope
or
shlb
clc
mov
push
jecxz
mov
repnz
lods
ljmp
jae
and
inc
mov
leave
xor
push
arpl
mov
pop
cmp
jo
jp
sqrtps
lods
and
scas
push
push
adc
add
push
aam
adc
mov
or
push
insl
clc
or
aas
mov
shl
add
push
outsb
out
cwtl
add
add
fwait
mov
pop
jnp
dec
or
cmp
cmp
lahf
int3
shl
or
fwait
add
lret
aad
aad
stos
adc
mov
es
add
adc
ficomps
lods
ja
push
inc
repnz
mov
aas
mov
inc
dec
inc
mov
movsb
lods
lds
cld
and
mov
fnstsw
shrl
xchg
sbb
repz
sub
dec
dec
mov
lret
ret
adc
add
hlt
jb
cmp
insb
jg
test
sbb
mov
call
mov
sub
add
mov
es
icebp
cmc
add
in
andl
ja
sarl
push
xchg
adcb
sub
ficoms
cs
fwait
addl
sti
popa
test
insb
movsl
adc
xorl
jp
mov
xchg
cld
mov
rorb
jno
negb
dec
aam
int3
dec
jmp
int
push
test
mov
addl
mov
mov
frstor
clc
xchg
sub
inc
or
rolb
orl
jnp
and
daa
pop
cmp
add
mov
test
cli
js
jnp
je
cwtl
dec
inc
sub
xchg
xchg
add
sbb
dec
mov
unpckhps
sbb
xchg
jmp
ja
fcomp
data16
push
leave
xchg
jl
repz
stos
xor
push
xchg
cmp
outsb
cs
lods
pop
loop
or
lret
clc
and
int3
nop
mov
loopne
sarb
out
test
cmpsl
pop
jmp
or
or
dec
fs
cmpsb
jp
lret
sbb
adc
rorl
dec
sahf
out
sbb
daa
repnz
and
jb
fcoml
ret
call
mov
dec
js
mov
cmpl
sbb
decb
cmpsb
pushf
or
les
mov
jnp
xchg
js
insb
jne
sbb
cmp
push
lcall
std
addr16
sbb
int3
inc
push
mov
mov
imul
hlt
fidivl
sahf
lds
ret
mov
add
stos
or
lea
fimull
adc
or
lret
mov
xor
pop
out
push
pop
cs
popa
imul
repz
push
mov
pop
cmp
xor
pop
mov
or
jp
dec
inc
dec
int
or
jo
aad
inc
add
jo
mov
nop
imul
push
stc
add
cmp
add
bnd
mov
pushf
dec
add
mov
repnz
or
addr16
inc
push
inc
lock
mov
stc
outsb
push
jns
dec
mov
rcll
test
cmpsb
ret
sar
jns
inc
das
xor
adc
cmp
shll
popa
cltd
jmp
insb
xchg
push
shlb
daa
out
rcr
gs
sub
ss
fidivrs
sar
push
ret
fimuls
scas
filds
sbbl
test
or
sbb
jo,pn
outsl
xchg
and
mov
or
mulb
int
dec
test
cmp
push
push
into
xchg
mov
mov
mov
sarb
mov
mul
push
fcmovbe
cmp
xchg
xchg
push
push
pop
test
inc
sbb
in
inc
pop
or
jno
hlt
xchg
push
das
pop
add
inc
js
sahf
xchg
ja
dec
mov
pop
mov
mov
push
lods
push
loopne
push
lock
lahf
lret
insb
lock
decl
mov
push
leave
push
mov
shlb
inc
fstpt
cs
movsb
pop
lret
rcrl
cmp
movb
ret
sub
inc
adc
mov
push
mov
out
xchg
sub
pop
sub
je
mov
pop
inc
stos
lods
lret
jle
and
xchg
sub
xor
xor
xor
data16
xchg
in
xchg
insb
sub
ss
pop
ds
sbb
roll
imul
sbb
mov
icebp
xchg
imul
adc
cmp
or
incb
sub
rorl
mulb
xlat
bound
xchg
mov
or
sbb
in
pop
pop
movsl
push
xor
sub
jbe
and
sahf
lods
pop
cmp
xchg
lea
sbb
push
pop
mov
aam
inc
es
xchg
dec
mov
jns
cli
inc
ljmp
cmp
mov
mov
sar
shrb
sub
loopw
test
imul
inc
rorl
mov
imul
add
int
arpl
ss
lock
pop
sub
ja
mov
jl
loope
or
stos
fcomip
lcall
stos
xor
sub
in
ds
stos
or
push
sub
lea
outsb
cmp
arpl
push
cmpsl
repz
pusha
pop
pushf
es
or
mov
call
enter
test
lret
aas
adc
sahf
lcall
mov
ficoml
leave
jp
movsb
jle
jp
lahf
insb
sti
dec
test
fwait
out
and
addr16
outsl
mov
and
loop
add
cwtl
aam
ja
push
sbb
int3
cmp
inc
cmc
in
jge
das
jp
cmp
xchg
adc
repnz
xor
faddl
or
addr16
pop
jg
pop
sbb
gs
push
mull
cmp
out
adc
push
jp
inc
rolb
push
scas
jmp
push
and
push
cs
push
test
cmp
mov
sub
inc
mov
push
outsl
cltd
mov
and
sti
sub
and
add
pop
es
push
jo
ret
mov
stos
inc
adc
pop
loop
sbb
repz
jno
call
loop
cmp
cmc
and
fstpt
mov
xchg
mov
daa
call
inc
out
scas
cmp
jg
out
dec
clc
jae
adc
mov
xchg
je
cmp
pop
push
add
xor
in
cld
and
bound
jle
xlat
jge
fisubl
mov
outsb
out
int
loop
push
adcl
push
loopne
jae
jo
stc
addr16
push
adc
cwtl
mov
pop
cmp
xchg
or
mov
int
int
repz
xor
ret
dec
jbe
cmp
daa
cmp
fdivrl
leave
mov
mov
cltd
cwtl
push
jmp
push
inc
cltd
mov
inc
xor
mov
pusha
mov
mov
jle
in
clc
repnz
dec
popa
push
sbbl
hlt
les
lret
ret
and
shlb
popf
inc
adc
iret
ss
sbb
in
outsb
scas
shl
dec
pop
jb
push
add
leave
xor
aas
mov
pop
add
jg
das
jae
in
pushf
bound
pop
orl
movsl
or
rcl
inc
cld
das
gs
xchg
mov
sbb
out
stos
cli
test
sahf
mov
cmc
xor
or
adcb
shrb
mov
jns
mov
jg
and
stc
push
push
in
out
inc
test
push
daa
test
and
cwtl
jo
je
jb
leave
xor
mov
mov
jbe
int
sahf
fistpl
xor
ret
mov
movsl
pop
orl
notl
xchg
outsl
xchg
mov
lahf
pop
cli
sub
mov
scas
push
jo
xor
sub
mov
scas
mov
jbe
sbb
fwait
pop
mov
js
push
je
shl
lea
adc
hlt
inc
xchg
leave
add
call
mov
push
mov
inc
fwait
cli
cmp
ds
or
mov
fs
add
clc
xorl
adc
jg
adcb
push
loopne
outsb
data16
jmp
data16
adc
ss
outsl
mov
adc
and
fadds
cltd
sub
mov
push
pop
testb
jmp
lret
add
aas
ss
cmpsl
es
and
cmpl
sbb
mov
and
repnz
xor
jne
sub
les
xchg
mov
sbb
icebp
stos
movsb
mov
push
sub
pop
pop
ljmp
jne
jmp
adc
jp
dec
mov
pushl
cmp
xchg
mov
lret
imul
popf
gs
fwait
mov
and
and
mov
xor
shrb
sub
decl
shr
outsl
cmp
inc
dec
insl
dec
pop
iret
adc
movsl
ljmp
cmpsb
cs
pop
add
test
and
jnp
lock
dec
jp
enter
sbb
cs
test
mov
mov
mov
mov
into
mov
ret
inc
inc
pop
pop
push
cmpsl
mov
cwtl
cmp
and
or
lea
adc
aas
pop
mov
mov
lea
pop
mov
cltd
mov
xchg
in
push
mov
sbb
mov
sub
jnp
pop
lock
call
xchg
aad
rorl
stc
dec
insl
adc
mov
inc
aaa
and
xor
cmp
push
inc
push
sub
mov
loop
dec
in
sahf
mov
mov
mov
out
pop
repz
mov
inc
and
xor
mov
shlb
add
xchg
ljmp
shrb
mov
jno
inc
loop
cld
and
mov
push
mov
jns
or
push
sbb
pop
lret
pop
ljmp
je
fiaddl
cmc
mov
lea
movsb
mov
fstpt
lret
xor
mov
fwait
dec
stos
mov
inc
leave
ds
fstpl
pushl
popa
push
mov
loop
inc
sub
into
rcll
stos
dec
daa
outsl
aaa
cltd
out
push
dec
gs
dec
ret
loope
shll
dec
mov
inc
mov
jns,pn
dec
mov
pusha
jle
ret
jo
adc
dec
adc
and
stos
aad
addr16
out
xchg
inc
ja
dec
adc
data16
movb
jno
mov
stos
jb
nop
scas
sti
push
add
or
inc
or
orl
aad
push
and
pusha
mov
sti
js
test
xor
cmp
jmp
dec
inc
lahf
mov
dec
mov
pop
testb
into
mov
jbe
and
mov
push
inc
and
enter
mov
push
orl
pop
push
in
pushf
int3
inc
xchg
pop
mov
dec
xchg
mov
dec
mov
xchg
int3
inc
inc
pushf
push
cld
or
lret
jmp
aam
ret
xor
adc
jge
xchg
adc
mov
mov
or
jle
xchg
ljmp
divb
push
nop
sub
adc
stos
ds
insl
jge
fdiv
ret
pushl
sbb
dec
xchg
pop
jg
jmp
inc
jne
in
add
pusha
inc
dec
sbb
es
inc
subl
cmp
mov
push
pop
fidivl
pushf
cltd
movsl
hlt
mov
xor
sbb
xor
jb
sbb
repz
mov
mov
mov
cld
xchg
jle
cld
out
inc
insl
and
jmp
out
lods
lods
cmpsl
sbb
js
mov
cmp
push
les
out
mov
dec
sub
or
sub
jle
adc
jae
bound
sbb
xchg
adc
ret
or
sbb
lret
or
mov
cmc
loop
dec
dec
adc
and
add
stos
lods
movsb
addl
gs
push
push
enter
jmp
fwait
cmp
pop
fistl
repz
addr16
jbe
push
dec
jmp
xchg
cmpsb
mov
dec
cld
xor
cmp
cltd
push
je
lret
pop
mov
mov
fildll
fdivr
jl
lret
push
xchg
stos
andl
cs
dec
jo
jge
ret
inc
fiadds
mov
jecxz
mov
jno
shlb
push
lcall
cmp
cmp
sbb
push
movsl
xlat
add
jnp
aad
sub
pop
daa
lds
inc
fwait
push
mov
mov
mov
pop
fistpll
and
sub
cmpb
jb
mul
xor
inc
mov
push
and
mov
nop
xchg
and
stos
loop
in
and
mov
push
out
or
cmp
call
fimull
dec
call
cmp
mov
jo
cmc
test
jl
jecxz
pushf
add
dec
mov
push
cmpsb
rclb
xorb
insl
cmc
lods
cmp
sbb
xor
hlt
jmp
or
or
xor
lods
sub
aam
and
hlt
std
xchg
stc
outsl
daa
pushf
int3
imul
test
mov
pop
into
scas
sahf
shl
pop
add
out
pop
jno
mov
inc
and
stos
push
scas
and
out
mov
add
mov
lods
cli
jo
hlt
out
jae
xchg
testb
in
cmp
pushf
shr
xor
sub
jge
inc
pushl
mov
push
inc
stos
cli
pop
shll
pop
adc
jecxz
out
sub
in
pop
or
mov
enter
jno
xchg
ss
xor
mov
or
sub
xchg
mov
mov
pop
and
sbb
mov
or
inc
jge
das
mov
or
out
call
test
in
sub
pop
push
into
out
popa
ror
add
inc
dec
dec
xchg
push
orl
cmp
mov
or
sub
sahf
push
adc
and
mov
popf
or
addr16
adc
pop
adc
adc
dec
push
cli
ret
std
mov
fadds
test
xchg
ds
cmpl
fucom
js
in
inc
mov
stos
pop
mov
fisubl
xor
add
pusha
jp
add
mov
cmp
aas
push
into
mov
insb
gs
pop
test
jmp
mov
sub
popa
outsb
sbb
mov
test
cmpsb
add
and
mov
mov
push
sub
andb
jmp
push
jno
adc
rclb
sbb
loop
sub
iret
int3
bound
mov
sub
popf
scas
pop
or
mov
and
jbe
mov
and
jp
pop
stos
dec
outsb
sbb
or
xor
into
sti
sub
aam
test
mov
push
roll
mov
rolb
jo
push
leave
int3
frstor
pop
popf
das
xchg
std
mov
pusha
shll
dec
pop
jge
jg
mov
mov
into
jp
stos
das
mov
push
mov
pop
lea
or
xchg
dec
jg
mov
arpl
dec
stos
push
mov
cmpsb
pop
push
xor
sub
xor
pop
aas
out
xchg
xchg
outsb
mov
js
push
push
xchg
out
lahf
sbbb
xchg
push
cmp
test
mov
jno
and
cmp
or
test
or
sub
cmp
jb
xor
dec
movsl
xchg
fistps
in
add
testb
mov
ja
or
mov
sbb
push
in
dec
jnp
sti
sbb
push
in
sbb
loopw
pop
xchg
cmpb
and
pop
mov
das
bound
js
lock
inc
in
cmpsb
stos
sar
stos
std
or
les
loope
popa
mov
and
push
ds
aaa
add
jns
ss
or
mov
and
mov
pushf
xchg
mov
push
bound
push
lahf
xchg
aaa
push
dec
cmpsl
dec
push
jmp
add
imul
inc
sti
repz
incb
stos
adc
aam
jp
or
xor
ss
add
sub
negl
cwtl
inc
cld
sub
mov
data16
iret
jne
cmp
mov
jno
sbb
cmp
jmp
imul
inc
ret
pusha
push
dec
je
call
testl
cmc
cmp
movsb
lock
cmp
std
push
fimull
testl
icebp
lret
shll
shlb
les
cli
out
lods
lods
les
aaa
mov
lret
imul
xchg
je
negl
cmp
dec
mov
shll
pusha
adc
and
mov
pop
mov
sti
fs
pop
ja
sbb
in
jecxz
mov
mov
xchg
dec
inc
rolb
pop
scas
or
lods
xchg
sbb
push
xchg
shlb
push
fidivl
mov
notb
and
pop
push
mov
sahf
cmp
dec
adc
push
jns
je
jbe
push
jle
repz
out
outsb
inc
in
rcrl
cmp
aad
fwait
arpl
scas
pop
data16
sub
std
pop
pop
fstpl
and
mov
popa
adc
xchg
jle
nop
cmp
pusha
jnp
dec
pushf
add
pop
and
int
or
les
out
inc
or
test
fcomi
in
jne
in
loopne
mul
jge
bound
mov
cmp
sahf
jmp
pop
inc
or
sbb
test
hlt
inc
inc
ret
jne
stos
mov
fwait
xchg
in
jns
sbb
stos
dec
pop
jmp
inc
jnp
inc
stos
enter
push
pop
xchg
push
sbb
or
jl
sub
scas
mov
pop
mov
cltd
ljmp
scas
aam
dec
pop
add
push
push
cmp
into
fistpl
out
adc
sbb
mov
xlat
fs
adc
jge
and
call
adc
mov
daa
lds
aad
cmp
stos
data16
and
jne
lods
xor
popf
mov
dec
xor
clc
lcall
mov
sub
cld
icebp
gs
cmpsb
addr16
and
test
sub
sbb
sti
imul
sub
jecxz
mov
and
cmp
mov
ret
pop
adc
lcall
outsb
clc
pusha
dec
mov
pop
xor
ss
loop
loopne
inc
mov
cmp
call
jnp
addb
inc
or
fcomi
push
leave
xchg
xchg
sahf
insb
sbb
push
dec
imul
pop
jp
xchg
adc
push
cs
pop
mov
or
pop
push
add
fstps
mov
jnp
gs
in
ficoml
aam
mov
or
mov
rolb
out
xor
mov
shlb
or
gs
dec
les
adc
sbbb
xchg
mov
cld
pop
lock
mov
cmp
mov
popf
fcmovu
cmp
push
lea
push
jbe
add
or
call
mov
mov
test
lahf
out
inc
cwtl
pushf
and
int3
or
rclb
cmp
mov
arpl
loope
shrb
xchg
cwtl
popf
inc
in
jp
push
cmp
adc
cmc
or
xor
movsl
dec
jns
dec
out
push
add
bound
xor
ret
sbb
and
pop
in
sbb
sbb
inc
inc
lahf
shrb
inc
sar
sub
out
lods
mov
lea
rcrb
rep
xchg
push
outsb
jle
add
dec
rolb
adc
pop
shll
fcompl
insl
shl
add
stc
or
xor
in
dec
sbb
push
adc
rcrl
insb
cmp
mov
ds
jno
ret
fcmove
outsb
mov
add
xchg
test
js
iret
mov
dec
jnp
mov
jno
out
addl
pushf
idiv
inc
loopne
adc
push
bound
push
xchg
mov
inc
mov
jmp
push
rclb
in
inc
inc
in
or
mov
aaa
mov
ret
test
sbbb
pusha
sti
js
jmp
jns
imul
xchg
push
push
test
sub
in
fwait
mov
mov
mov
mov
out
jae
jp
and
out
fmul
mov
out
adc
add
cmpl
xchg
sbb
jno
arpl
or
stc
leave
sarl
sub
add
scas
push
cmp
dec
cmp
in
ss
xor
fsubr
popa
sahf
popa
bound
jecxz
push
add
mov
fsubl
test
cltd
mov
jl
or
int3
xchg
add
fiaddl
pop
testb
dec
ficoml
push
jb
jns
pop
jae
pop
scas
addl
lock
je
in
and
repnz
xchg
cmp
or
leave
sub
inc
sub
add
and
mov
mov
inc
inc
sbb
inc
clc
mov
sbb
lock
insl
enter
adc
icebp
orl
fs
dec
cmpsb
mov
or
push
lret
push
adc
sahf
test
push
std
cld
push
popa
pushf
and
jns
pminsw
mov
or
fidivl
call
push
repz
shll
and
stc
inc
out
lds
cmp
pushf
cltd
xor
jb
stos
jle
sbb
testl
xchg
jae
rclb
inc
cli
and
cs
std
mov
dec
add
jecxz
movsb
mov
gs
jle
scas
sbb
call
xchg
out
fdiv
dec
sub
xor
or
xchg
imul
sti
add
mov
imul
mov
inc
bound
sbb
fisttpl
sbb
jmp
cmc
mov
add
sti
mov
jae
in
pop
popa
sbb
add
cmp
or
scas
push
loopne
lods
out
xor
add
jecxz
push
push
ss
and
lahf
mov
push
mov
fs
mov
mov
adc
inc
fistpl
xchg
ret
fistpl
les
adc
jns
divl
inc
pushf
fildll
cli
aam
inc
push
les
adc
mov
jne
arpl
inc
mov
dec
add
jecxz,pn
enter
lret
xchg
push
clc
lcall
sahf
ja
dec
add
xor
rclb
dec
call
rcrl
adc
repnz
adc
jg
xor
mov
adc
dec
or
lds
mov
iret
push
shlb
pop
push
lret
movd
jl
lahf
jecxz
ret
inc
lock
rcrl
mov
fstps
sahf
adc
aaa
dec
fs
and
sahf
popa
and
ss
sub
and
rolb
mov
adc
nop
test
repnz
mov
mov
mov
movsb
jns
cmp
cmp
sti
pop
jnp
scas
push
out
jg
scas
scas
aaa
ret
jno
mov
test
shrb
xlat
cmpsl
add
or
lods
mov
push
lds
push
mov
dec
addr16
rcrb
andb
mov
movsb
adc
rorb
decb
call
adc
add
gs
testb
xor
lods
adc
popf
push
add
adc
insl
out
imul
ret
leave
popf
rcrb
fs
xchg
and
push
pop
lods
mov
and
jo
test
and
jne
data16
mov
jb
frstor
pop
add
mov
push
add
mov
test
mov
pop
pop
push
scas
pusha
stc
xchg
pop
les
inc
mull
bound
or
xchg
cmp
inc
in
jl
das
imulb
stc
mov
scas
fwait
pop
movsb
pop
call
cmc
mov
dec
and
sub
cmp
jge
scas
xlat
imulb
or
xchg
inc
dec
sbb
lcall
sbb
mov
mov
or
dec
rol
setle
bound
mov
roll
push
loop
push
sbb
cmp
jae
add
fld
pop
psadbw
vpminsw
adc
std
xchg
jge
add
pop
inc
push
enter
pop
mov
inc
sub
adc
mov
xchg
in
xor
mov
add
mov
xchg
gs
lahf
push
inc
jmp
ja
outsl
cmp
int3
jecxz
pop
int3
add
fdivs
roll
xor
repnz
sub
rorb
adc
cmp
scas
sub
data16
mov
js
pop
sub
inc
in
pop
cmpsl
cmp
xor
rclb
jg
sbb
stos
into
rcrb
mov
pop
add
mov
push
mov
rcrb
ja
loop
aaa
jg
hlt
lock
mov
out
inc
sub
lods
cmp
push
rcrl
mov
jb
cmp
mov
pop
xchg
or
insb
push
loopne
push
mov
xchg
popa
mov
data16
lret
and
lret
xchg
punpcklwd
das
lret
pop
adc
mov
les
jl
dec
add
mov
cmpsl
or
pop
xchg
sbb
pop
lahf
or
sbb
xor
jbe
enter
imul
in
jl
xor
inc
add
js
sar
or
cmp
cmc
mov
ljmp
cmc
xchg
sbb
shl
lahf
leave
test
fxch
aam
mov
adc
jne
pusha
mov
mov
or
push
insb
imul
sarb
cmp
dec
int3
dec
orb
dec
push
lods
cltd
mov
in
clc
leave
or
dec
clc
dec
xchg
into
cmp
mov
and
cmp
adc
lret
popa
inc
sbb
push
dec
popf
out
lret
fnsave
xor
push
dec
mov
and
jmp
push
sbb
sbbl
sbb
aam
repnz
jmp
xor
negb
mov
inc
cmp
stc
insb
sub
add
inc
xchg
jns
divl
pop
push
mov
add
dec
sub
loopne
gs
test
dec
mov
and
mov
or
mov
fimull
cli
inc
stos
push
ss
addb
das
mov
pop
inc
or
fs
pushf
lea
repz
xchg
lods
push
mov
and
dec
mov
mov
lods
mov
cmp
xchg
mov
push
and
fcompl
mov
push
je
push
fbstp
pop
mov
dec
lcall
or
test
cltd
sbbb
and
std
cs
ret
and
int3
nop
lods
mov
fmul
pusha
mov
cmp
mov
out
sbb
int
sub
int3
into
mov
cmp
and
mov
cmpsl
outsl
out
enter
inc
adc
sbb
imul
mov
dec
mov
mov
divl
cmp
popf
loope
stos
jmp
roll
mov
jnp
mov
rolb
xorb
lret
ja
mov
xor
test
fildll
push
mov
dec
mov
js
xor
pushf
cmp
mov
repnz
bnd
aaa
je
inc
xbegin
ret
jbe
sbb
std
mov
lret
push
mov
repz
inc
out
xlat
add
pop
add
mov
insb
mov
pop
mov
in
aaa
imul
fisubrl
xchg
push
rol
jl
rclb
mov
xchg
pop
jbe
cmp
cmp
mov
push
rorl
lea
jmp
test
std
mov
leave
pusha
mov
mov
ja
xor
cmpsl
js
push
out
imul
test
sub
dec
cmp
movsl
nop
xchg
jge
and
xor
lret
mov
jno
pop
lds
das
lret
inc
fdivrs
ret
dec
and
push
pop
dec
xlat
xor
mov
and
cmc
popa
push
sub
xchg
test
cmp
add
aaa
jp
leave
and
and
lock
fcoms
mov
lret
cmp
movsl
jne
jno
cmc
sarl
data16
lock
jmp
in
loop
and
add
out
sub
xor
adc
push
push
mov
or
add
mov
cmc
rclw
fimull
rcr
xchg
loope
cltd
nop
cwtl
sbb
insb
mov
ja
sbb
mov
addr16
aad
stos
mov
mov
xor
mov
popf
sub
xchg
shrl
jg
mov
pop
xchg
into
push
lahf
lcall
jae
divl
adc
add
pop
mov
cmp
scas
and
xor
push
and
ret
lea
je
rclb
and
jo
shll
popf
add
bound
dec
lret
pusha
aad
and
dec
cs
dec
scas
xchg
and
lods
xor
aas
ljmp
outsb
push
cmp
loope
pop
fdivl
dec
adc
lods
jae
dec
icebp
pop
mov
ds
pop
fwait
add
int3
pop
push
pop
in
and
cmp
sub
or
mov
test
inc
jo
sahf
pop
je
or
inc
adc
dec
nop
clc
fstl
push
push
jae
daa
pushf
in
aad
idivb
insl
sbb
gs
dec
in
dec
stos
xlat
inc
aaa
cmp
scas
mov
xor
dec
sbb
stos
mov
jp
inc
or
pop
testb
lret
push
cmp
movsb
jle
lea
jb
sub
or
out
adc
pop
repnz
and
lea
inc
pop
pop
mov
push
addb
jno
mov
lret
mov
xchg
push
lret
lea
add
repz
out
mov
push
insb
pop
push
cmpl
mov
jno
aad
adc
push
jge
stos
fdivrl
jnp
cmp
fistpll
sub
fbld
cltd
mov
shll
mov
xlat
rcll
and
sti
cmpsb
cld
pop
dec
dec
push
jg
pop
sbb
push
xor
push
jp
xor
cltd
xchg
enter
and
bound
jb
inc
test
repz
xchg
cmp
rcrl
popa
loope
inc
pop
cmp
pop
jle
xor
dec
out
cs
je
imul
and
int3
outsb
jbe
fsts
enter
cmp
xor
lods
mov
pop
mov
xchg
lods
insl
pop
data16
mov
stos
inc
xchg
cmpsl
sbb
bound
add
jle
add
mov
mov
sbb
das
cld
icebp
cli
fs
or
dec
ja
lock
fs
cs
hlt
cmp
shrb
rcll
dec
xchg
mov
or
rolb
sub
pop
adc
cmc
dec
lods
fiaddl
ficoml
pop
loope
xchg
fsub
je
inc
dec
dec
pop
and
cmp
push
sub
aas
or
lret
out
add
mov
out
jb
jae
daa
fnstsw
ret
mov
lret
inc
push
inc
xchg
mov
add
xchg
jne
fsub
mov
cmp
cltd
leave
bound
mov
mov
movsb
xor
xchg
mov
xchg
inc
lods
push
popa
das
cmp
aaa
push
xor
push
movsb
mov
sbb
cmc
xor
in
ljmp
jmp
cmp
push
push
mov
lret
sub
sbb
sub
mov
or
inc
mov
lcall
adc
shll
sub
les
mov
fstpt
push
ret
jp
xchg
inc
add
jecxz
cmp
test
xchg
pop
fsubrs
out
dec
mov
add
push
lock
jle,pt
imul
pop
sti
int3
jnp
rol
pop
mov
out
es
jg
or
stc
cli
cmpsl
shll
mov
adc
nop
ljmp
xchg
push
rorl
stc
fdivl
sub
lret
aad
andl
cmpb
mov
int3
pushf
jnp
shlb
inc
mov
test
add
mov
cld
fidivrl
sti
jle
fisttpl
aad
dec
ret
shlb
or
in
jne
scas
js
inc
gs
mov
mov
lods
sub
cwtl
cwtl
jge
sub
mov
testb
push
xor
das
ds
jno
mov
ret
sti
push
push
xchg
adc
ret
outsl
ret
sub
movsb
repz
push
mov
pushf
fwait
call
sub
inc
lret
jae
mov
movsb
adc
icebp
call
jo
mov
push
inc
sbb
scas
out
cmpsl
mov
inc
mov
mov
insl
imul
sub
popf
or
lds
clc
ljmp
into
jl
adc
xchg
imul
adc
and
incl
scas
shll
lods
cs
pop
xor
add
call
std
push
lds
sbb
mov
dec
mov
insb
ret
mov
mov
dec
nop
or
negl
mov
ja
cmp
mov
dec
das
int
lcall
mov
inc
ja
or
xor
cltd
aaa
dec
sti
mov
sub
divl
call
jle
add
insl
push
loope
in
stc
repz
stos
xor
xor
xchg
pop
test
push
lock
les
inc
mov
xor
cmp
incb
push
loopne
js
mov
outsb
and
cmpsl
mov
test
inc
lods
ja
fcom
in
adc
xor
jnp
mov
mov
pop
movhps
sbb
in
outsb
popf
imul
fcmovb
in
xchg
inc
stos
dec
pop
xor
mov
mov
dec
dec
bound
out
lods
cmpl
movsb
push
adc
xchg
rorl
cld
outsl
add
popf
clc
loop
mov
lods
jp
jg
and
test
pop
incl
push
repz
jle
xchg
jns
push
sbb
ret
repz
or
fst
mov
out
sbb
das
push
adcb
es
pop
cmp
lods
xchg
sbb
cli
push
cmpsl
out
add
cmpsl
popf
std
test
or
fs
push
add
fisttpll
call
lods
pop
addr16
pop
jmp
jg
push
dec
mov
je
jmp
ljmp
hlt
int3
inc
and
adc
mov
out
sbb
sbb
data16
jnp
in
daa
pop
ja
scas
cwtl
dec
daa
movsb
leave
lds
lods
out
sbb
es
repz
adc
leave
cwtl
xor
pop
mov
jae
adc
push
in
daa
jns
fcoms
lods
mov
push
sub
xor
aas
sti
and
cmpsb
sub
xor
in
jmp
aam
xor
loop
and
mov
xchg
lock
mulb
decb
jbe
fcompl
jbe
dec
insl
jecxz
push
cmpsb
ficomps
sbb
push
sub
sahf
ljmp
cmc
add
imul
jl
add
iret
mov
and
adc
stos
inc
add
dec
test
subb
fidivs
or
jne
adc
xchg
jecxz
pop
cmpsl
dec
xchg
mov
pop
aaa
fnstenv
or
lods
add
and
ret
and
xchg
leave
cmp
xchg
sbbb
shll
mov
push
outsb
cli
lahf
adc
nop
cmc
stos
jle
mov
sahf
pop
enter
loope
xorb
or
cmc
mov
mov
mov
mov
jmp
and
inc
mov
mov
dec
outsb
sbb
or
inc
cmc
sub
clc
mov
cmc
rcl
jno
jecxz
arpl
imul
xchg
push
js
jno
pop
cmp
pop
mov
stos
bnd
shll
lea
xchg
mov
or
sbb
xchg
pop
jno
add
dec
xor
inc
mov
in
fidivrs
cmpsl
divl
movsl
add
ficoms
xchg
lds
pop
lds
fwait
mov
iret
movsb
jge
popa
repz
push
cmp
loopne
cwtl
stos
stos
int
xor
push
xchg
cmc
cwtl
xor
icebp
and
mov
cmpsl
mov
adc
in
jns
mov
sub
cmp
sti
cltd
ss
adc
shlb
xlat
push
pop
addr16
flds
test
stos
aam
mov
push
mov
mov
jbe
ljmp
into
xlat
mov
or
popf
push
frstor
jecxz
dec
jne
mov
in
add
std
inc
aad
mov
jl
sub
gs
imul
jl
test
int3
inc
lcall
inc
push
cli
fldl
mov
out
push
cmp
int3
cmp
cltd
mov
in
stos
inc
mov
rcl
mov
movsl
sahf
mov
and
call
mov
push
sub
lcall
mov
mov
sbb
adc
icebp
lock
dec
mov
fstl
mov
or
pop
repnz
jno
mov
into
add
je
jae
jge
cwtl
sbb
mov
dec
jo
inc
adc
ret
clc
loopne
push
mov
dec
lock
das
testl
and
adc
stc
mov
sbbl
xchg
or
adc
repnz
adc
push
ljmp
scas
dec
mov
sub
add
test
jb
sbb
xchg
cmp
dec
pop
mov
push
dec
pop
cmpsb
jae
repz
testb
aam
sub
lahf
adc
sub
dec
xor
addr16
lods
fidivrs
fs
aas
jnp
pop
test
pop
repnz
imul
sbb
setno
cmp
test
sub
or
cmp
cmp
dec
lods
fadds
cmp
mov
fsubl
data16
outsb
and
cmp
cmpsw
add
cmp
fisubrl
jae
push
pop
cli
jbe,pn
lea
sar
hlt
jnp
div
cmpsb
xor
icebp
stos
enter
xchg
or
cmpsb
and
lahf
jl
in
mov
adc
imul
iret
push
outsl
ss
cmpsl
dec
les
sbb
in
mov
pop
fmul
and
lret
and
or
sub
xchg
iret
paddb
pop
int
es
mov
icebp
fldl
adc
pop
mov
push
sub
pop
outsb
les
pusha
pop
adc
xor
daa
and
adc
insb
add
dec
rcrb
mov
clc
mov
rcrb
adc
xor
lods
mov
sub
adc
stc
add
pop
adc
daa
jnp
and
dec
repz
jl
mov
dec
out
outsl
mov
push
sbb
mov
pop
cs
dec
pushf
stc
stc
xor
add
inc
call
xchg
xchg
out
pusha
ret
int3
push
lcall
loope
aas
or
out
imul
mov
cmc
out
mov
andl
mov
cmp
nop
test
sub
sahf
sub
out
xchg
repz
jg
vmovss
rol
daa
scas
pop
xchg
pusha
push
push
sti
cmp
ljmp
xchg
xor
sub
test
insb
stos
repnz
adc
mov
stc
or
adc
clc
mov
push
and
int3
add
cmp
and
in
pop
adc
bound
sub
stos
sub
or
sbb
cmc
cmc
aaa
shl
call
lret
lret
arpl
jmp
push
mov
xchg
jne
or
bound
adc
pop
lahf
push
cmc
sbbl
xor
pop
aaa
jb
cmp
add
xlat
cmp
pop
jl
ja
test
dec
xchg
insb
rcrl
idiv
pop
fstl
xchg
cs
insl
mov
leave
mov
xchg
or
out
lea
insb
mov
jmp
add
imul
dec
push
and
dec
popf
and
nop
sbb
xor
je
outsl
in
jo
mov
jge
sbb
xor
or
xor
xchg
cmc
stc
jbe
adcb
mov
adc
jg
mov
inc
enter
fnsave
mov
dec
add
ret
andl
cmpsl
or
or
inc
adc
adc
xchg
mov
add
jmp
mov
jnp
fldcw
mov
int
pop
xchg
aaa
jns
sub
dec
jp
xor
pop
pop
dec
pop
xor
xor
cmpsl
pop
add
loop
lahf
sub
divl
setg
mov
ss
cmp
aas
aaa
movsb
sub
imul
cs
dec
gs
pusha
fcoml
mov
sbb
jp
lahf
stos
or
shll
push
cltd
jg
add
inc
aam
xchg
js
adc
or
ljmp
sahf
inc
les
mov
sbb
or
xchg
loope
scas
pop
jg
mov
mov
pop
sahf
jne
dec
sbbb
mov
imul
std
push
inc
mov
or
or
cwtl
out
add
cmc
rcr
jno
add
loopne
cwtl
push
cmpps
sbb
sbb
and
cmp
fsubrl
iret
subb
mov
xchg
xor
mov
xor
pop
mov
int
mov
mov
push
sub
inc
push
xchg
mov
sbb
or
aaa
adc
rclb
ljmp
movsb
push
mov
mov
mov
mov
notl
imulb
icebp
repnz
or
hlt
or
lahf
repnz
add
cli
addb
shrb
dec
ret
cld
jnp
pop
fsubrs
imul
pop
aas
pop
fimull
pop
pop
sbb
mov
aaa
sbbl
mov
mov
jl
test
out
mov
dec
iret
sbb
lds
add
aaa
pop
pusha
sub
push
leave
dec
dec
lcall
jecxz
std
pop
dec
pop
lret
pop
lods
push
fwait
cmp
lahf
mov
out
imul
dec
jne
shlb
ja
lret
out
xor
push
ret
sbb
in
sub
das
bound
sbb
dec
adc
inc
movsb
inc
xchg
gs
iret
mov
dec
adc
cmpsb
wrmsr
in
jp
push
int3
mov
pop
int3
jno
adc
shlb
jle
inc
mov
and
cmp
lcall
orb
arpl
sbb
ror
fcmovbe
jecxz
xchg
ss
in
jb
mov
xchg
push
xchg
and
cmp
out
push
adc
stc
xchg
sub
cmp
movl
pop
ja
repz
rcr
leave
jns
xor
decl
xor
stos
jp
and
ds
das
inc
dec
cmp
xchg
mov
lods
enter
loopne
cmp
in
dec
fdivrp
or
in
add
adc
sbbl
lds
scas
jnp
out
ret
jmp
call
das
and
inc
cmp
int3
mov
mov
aad
jne
pop
pop
mov
shll
mov
fcoml
into
mov
call
mov
mov
jg
push
stos
fnstenv
int
aaa
push
loop
or
pop
pusha
xor
sahf
sbb
and
and
adc
pop
dec
sti
insb
mov
inc
mov
xchg
jge
sub
lret
mov
xchg
insb
adc
test
inc
sbb
lock
popa
jo
clc
xor
inc
ffreep
xor
loope
rorl
fadd
pop
pushl
mov
aas
push
push
mov
push
mov
inc
out
mov
fidivl
push
jae
into
stos
rcrl
daa
mov
rcll
bound
mov
divb
sub
and
out
out
cwtl
into
adc
jae
outsl
in
in
sbb
adc
inc
cmp
mov
inc
pop
mov
add
sub
xchg
sbb
xor
pop
fstpt
aad
mov
ss
cwtl
arpl
aam
sbb
inc
out
adc
mov
cmpsl
mov
pop
repnz
mov
dec
dec
xchg
out
or
sub
data16
lea
xlat
sar
adc
push
pop
lret
pop
shlb
movsb
and
shll
push
mov
pop
cwtl
stos
sbb
out
mov
or
jb
iret
scas
xor
nop
dec
pushf
loope
insl
jo
mov
les
adc
test
adc
jae
sbb
icebp
stos
fidivl
aas
pop
inc
pop
xchg
mov
inc
fsubl
ja
movsb
or
and
in
inc
xchg
mov
push
xchg
xorb
sub
into
call
and
in
push
mov
adc
mov
xchg
into
scas
dec
pushf
push
cmp
iret
enter
lds
inc
xor
cli
lea
pop
jo
inc
fnstenv
xchg
insl
in
pop
mov
mov
and
test
movsb
cli
mov
repnz
push
into
sbb
xor
rolb
sbb
add
xor
and
cli
aam
mov
push
adc
sbb
xchg
sbb
mov
rorb
pop
mov
push
les
add
push
mov
pop
lds
nop
xchg
inc
outsl
data16
stc
bound
jno
xor
cs
out
dec
aam
adc
add
shll
mov
pop
push
out
xor
mov
inc
inc
in
cwtl
nop
js
ret
or
sub
lods
jae
jae
ss
test
fidivrl
out
test
rol
sahf
and
sbb
mov
outsb
fidivrs
adc
sbb
adc
mov
jo
mov
sub
fcmovnb
scas
push
inc
xorl
cmp
outsb
mov
xchg
fstpt
pop
lock
or
ljmp
gs
jmp
sahf
ret
sub
mov
push
inc
push
mov
cs
insl
xchg
sub
in
bound
and
mov
leave
add
sub
mov
sbb
mov
sbb
stos
mov
cmp
int
push
testb
fs
pushf
cltd
popf
mov
loop
fwait
add
xor
push
mov
aaa
xchg
cmpsl
inc
rolb
test
sub
jg
cmp
push
jg
rcrb
and
les
mov
fildl
in
gs
out
sub
leave
cmc
flds
test
mov
push
push
shll
dec
mov
jle
fdivrl
pop
dec
ds
lcall
mov
sbb
in
mov
adc
addl
aam
mov
push
lock
jbe
jb
dec
hlt
sbb
nop
aad
jb
sbb
push
mov
push
in
mov
movsb
dec
gs
adc
jge
nop
cmc
push
pop
mov
adc
loope
insb
push
fst
arpl
mov
jo
ror
pop
inc
adc
std
push
xor
dec
ret
fbstp
ss
mov
sub
lret
iret
xorb
imul
test
cli
test
pop
cmp
cmp
call
inc
xor
sbb
loope
xchg
jnp
arpl
lods
sub
pop
inc
sub
imul
outsl
xchg
cltd
xchg
ret
mov
xchg
inc
mov
mov
stc
mov
in
and
scas
ret
or
scas
jae
mov
xchg
jbe
fistpll
xor
adc
shll
rorb
mov
lret
xor
jae
and
or
mov
ds
es
add
idiv
push
inc
mov
or
movsb
cwtl
sub
mov
dec
iret
ds
xor
sub
fcomip
or
in
adcl
fstps
cltd
adc
sbb
repz
ljmp
xor
push
lret
jnp
push
mov
fisttps
mov
xor
jg
scas
dec
push
cltd
in
cmpsl
cwtl
shlb
fsubrl
sub
mov
pop
aam
pop
ljmp
cmp
out
xor
push
dec
leave
mov
inc
pusha
cmpsb
inc
jnp
int3
ror
daa
fmull
push
fmull
gs
fcmovnb
add
adc
inc
xchg
cmp
ret
dec
jnp
dec
push
jecxz
sahf
lock
dec
adc
fxch
xlat
pop
aas
pop
ret
push
mov
mov
dec
or
add
jb
notb
cmpsl
imul
push
sub
add
cwtl
int3
fs
test
dec
jle
pop
pop
rcll
jecxz
call
mov
scas
les
mov
aam
sbb
xchg
push
mov
fsubl
mov
in
mov
aad
sub
cmp
jo
mov
inc
nop
out
shl
rclb
int3
jg
jle
add
jge
neg
jae
sbb
add
stos
or
mov
jmp
jp
fucomip
imul
cltd
pop
jle
insb
jnp
clc
repnz
in
jmp
add
notb
sub
push
cli
pop
push
fwait
aaa
fsts
es
inc
mov
addb
lcall
rcl
test
insb
inc
popa
jge
push
jnp
js
mov
nop
out
jg
jae
fidivrl
xchg
clc
aad
pop
mov
sti
lret
jno
call
cmpsb
loopne
jnp
repz
lds
rcrl
imul
shrd
push
rorb
or
cmp
jecxz
jle,pt
mul
outsb
sub
and
jae
test
xchg
hlt
jbe
fs
fidivs
fldt
inc
cld
test
mov
lret
cli
ror
sbb
cli
add
outsl
pop
inc
mov
outsl
dec
mov
adc
insb
adc
jge
sti
mov
sbb
rorl
rorl
sbb
mov
into
call
xorl
daa
iret
xlat
test
pop
xchg
add
repnz
sub
popf
shr
outsl
add
push
push
push
cmp
pavgb
ror
xchg
into
aas
nop
popf
xlat
push
fwait
adc
pop
jns
lahf
out
lret
mov
sarb
mov
rolb
and
mov
sub
out
adc
sarb
popa
mov
cmp
popa
xchg
lret
imul
in
xchg
or
nop
jle
mov
push
ret
or
aad
outsl
add
pop
mov
pop
add
mov
nop
sbb
ret
xor
into
fldt
das
sub
xor
mov
mov
or
or
rcr
cmpsb
inc
jg
sbb
mov
in
cmp
jl
movsb
jne
cmp
fisttpll
mov
lock
xchg
adc
test
scas
or
sub
loopne
imul
lahf
push
dec
mov
jmp
push
or
pop
rorl
out
add
leave
fnstenv
cli
push
jno
stos
mov
les
aam
mov
push
outsl
les
xchg
aam
xlat
lret
xchg
arpl
inc
sbb
adc
mov
cmpb
cld
lret
xchg
lock
or
ret
out
sahf
ja
push
popf
adc
test
inc
lahf
add
repnz
stc
dec
mov
scas
xchg
adc
pop
push
adc
dec
push
or
shrl
loop
stos
cmc
inc
rorl
push
je
movsl
jb
test
xlat
mov
rorb
inc
popf
pop
mov
pop
hlt
adc
inc
push
add
shl
xchg
mov
sub
jo
sub
mov
add
push
jmp
insl
pop
test
adc
and
mov
inc
addr16
pushf
jecxz
cmp
repz
out
andl
and
pop
or
out
dec
cmp
dec
mov
mov
insl
and
cmp
loopne
daa
inc
or
push
fsub
aad
push
mov
cmp
ljmp
rcll
inc
jo
movsl
clc
cmpsb
dec
shrb
cmpsl
pop
jle
mov
popa
leave
xor
adc
arpl
add
aam
cmp
push
or
push
sub
and
mov
and
jl
lret
push
arpl
ss
push
lods
fildl
add
pushf
cmp
into
lret
pop
mov
aam
inc
or
cmp
mov
gs
and
dec
jge
adc
imul
and
fwait
icebp
push
xor
gs
jmp
mov
mov
jbe
push
addb
lahf
xor
xor
jo
arpl
es
adc
decb
out
xor
std
lods
and
mov
icebp
mov
popf
mov
rcrb
jo
add
test
mov
or
or
sti
test
mov
or
bound
xor
addr16
and
cld
loope
mov
xor
xor
mov
sub
repnz
dec
movsb
in
ret
pop
xor
mov
in
les
mov
cld
and
enter
pop
call
xchg
inc
xchg
jge
cmp
push
xchg
jge
lcall
mov
dec
mov
inc
aaa
mov
push
es
mov
xchg
test
mov
add
lods
inc
dec
mov
lods
jmp
out
adc
cs
pop
add
in
das
pop
lods
sub
pop
jae
lods
cmp
iret
rclb
jge
mov
setle
and
rol
js
int3
jg
dec
sbb
push
mov
jle
ficoms
mov
rclb
dec
jns
xchg
fildl
in
cld
push
les
mov
shl
dec
fstps
or
jmp
and
mulb
dec
std
incb
mov
int3
dec
insl
push
push
add
into
jge
je
sub
rorl
rorb
xor
sti
mov
pop
or
xchg
xchg
lret
pop
adc
mov
inc
outsb
enter
xchg
push
mov
cmpsl
loop
ret
stos
push
push
adc
pop
jne
xor
pushf
mov
sub
fs
sub
pop
iret
lret
cltd
jmp
test
inc
outsb
scas
mov
and
pop
xorl
pop
jo
xor
das
out
or
into
xor
daa
ja
dec
repnz
push
test
cli
hlt
aaa
in
cs
cmp
ja
inc
sbb
sbb
jmp
cld
sbb
dec
lcall
lahf
adc
popf
xchg
rcr
mov
jmp
popa
cltd
call
jmp
dec
lods
fcoml
fisubs
loope
xor
insb
or
mov
cmp
das
test
mov
lock
rolb
push
cmpsl
in
lret
out
inc
mov
jmp
rorl
aad
push
inc
imulb
adc
mov
and
cltd
dec
mov
sbb
cmp
and
inc
inc
std
outsb
jns
cmc
in
rolb
cmp
shrl
xchg
shr
popa
into
in
add
mov
add
and
jae
mov
or
cmp
jmp
mov
pop
or
add
push
js
xchg
cmp
xchg
pop
mov
add
add
nop
and
mov
and
add
inc
mov
jns
aaa
or
sub
xchg
js
xchg
jge
mov
pop
sbb
xchg
dec
ja
out
pop
scas
ss
mov
pop
ret
loop
out
shll
scas
sub
xchg
xor
adc
mov
sbbl
popa
adcl
adc
jnp
scas
fisttps
mov
scas
out
add
push
pop
adc
mov
jl
ret
int3
or
mov
pop
xchg
inc
mov
arpl
mov
fistl
or
loope
jle
xorl
xchg
in
cmp
jg
dec
das
je
mov
mov
aas
add
dec
mov
out
jle
inc
adc
mov
jb
mov
or
in
in
fistl
push
lds
aad
bound
cmp
std
scas
iret
in
and
outsl
clc
inc
repz
add
adc
pop
fsubrp
dec
xor
add
sarl
and
shr
xorl
andl
enter
add
out
pop
dec
cmc
adc
shr
mov
mov
adc
jmp
testl
out
cmp
ljmp
mov
xchg
mulb
mov
push
rorb
cwtl
adc
and
lock
pop
inc
outsl
fmull
jbe
ja
clc
mov
mov
cli
cmp
mov
mov
out
inc
ficompl
or
aam
test
mov
scas
jbe
daa
outsl
clc
fcomps
mov
jp
gs
xchg
movsl
xchg
mov
out
test
insl
repnz
mov
jo
orl
inc
scas
mov
int3
loop
in
push
xlat
pop
jb
xchg
push
jo
and
pop
mov
jmp
imul
sbb
jne
mov
mov
sbb
sub
subl
mov
inc
pop
xor
in
push
inc
jge
add
mov
pop
out
pop
into
addr16
add
mov
pop
in
lods
loopne
test
dec
cmpsl
scas
push
cmpsl
lret
and
lahf
pop
or
aaa
jge
jns
lcall
in
adc
inc
sbb
jle
and
dec
mov
or
pop
test
pop
popa
cmpsb
push
fmull
mov
std
sub
test
mov
inc
testb
push
fiaddl
js
push
movsb
popa
pop
dec
loopne
mov
pusha
push
and
mov
inc
stc
add
xchg
add
and
movsb
inc
lret
xor
pop
je
mov
xor
loope
mov
cs
mov
inc
mov
hlt
shlb
pop
fs
loop
inc
lock
mov
and
outsb
jo
mov
outsb
sub
add
sub
popf
pop
mov
cmpsl
lock
push
rclb
je
cmp
rorl
xchg
rcr
ret
push
push
add
cltd
mov
xor
push
fisubs
jae
jle
out
dec
cmc
push
and
jle
sbb
or
inc
or
sar
inc
insb
les
sub
push
dec
and
pop
les
push
xor
repnz
sub
inc
xor
mov
or
dec
leave
adc
mov
cli
fs
fsubrs
push
dec
cld
rcrl
imul
adc
imul
mov
ds
sahf
xor
in
jp
jns
xor
arpl
xorl
aas
lock
sbb
adc
or
cmp
adc
xchg
outsb
dec
pusha
ss
cmpsl
xor
push
or
lock
pop
cltd
add
push
dec
in
notb
pusha
popa
lret
shl
dec
je
push
lcall
in
xchg
or
out
in
cmp
hlt
xor
mov
or
sbb
sbb
or
jo
lret
scas
sti
push
xchg
mov
test
mov
das
push
fisubrl
arpl
jne
out
push
push
in
xor
sub
scas
jne
mov
pop
adc
adc
test
and
mov
cmp
test
int3
movsl
dec
leave
inc
lea
shrl
mov
pop
iret
and
mov
aam
or
sbb
dec
sbb
mov
cs
sbb
sub
ret
pop
adc
mov
test
dec
jno
add
out
mov
movsl
addr16
test
cli
sahf
or
sbb
adc
xchg
daa
push
push
inc
pop
lret
add
fisubs
popa
mov
xchg
mov
rcll
push
jl
adc
and
hlt
addr16
and
cmpsl
lcall
xor
add
popa
fsubrs
sbb
pusha
and
push
sarb
dec
and
test
push
aaa
cld
inc
add
enter
lret
sub
and
jne
in
or
divb
mov
mov
pop
cwtl
pop
jae
adc
add
mov
leave
xacquire
je
inc
cmp
aam
data16
cmp
jne
lcall
add
pop
pop
xchg
jns
mov
into
mov
xchg
and
int
xchg
icebp
jns
mov
mov
in
adc
and
and
cmp
test
out
test
pop
xorl
fsts
fbstp
std
in
bound
lds
iret
ret
outsl
mov
xchg
int3
pop
mov
sub
aas
sbb
xchg
push
cmpl
popf
leave
les
mov
push
sbb
movsb
xchg
stos
xchg
outsb
mov
xchg
dec
and
pop
cmpsb
inc
adc
sub
es
std
test
gs
or
or
jns
sahf
ss
iret
daa
cmp
cltd
dec
nop
rcll
mov
lea
xorl
ja
pop
xchg
dec
test
mov
nop
fists
jp
xchg
nop
xchg
adc
cmp
cmpsb
inc
sub
outsl
adc
sbb
popa
jg
nop
popl
cmp
movsl
mov
push
test
insl
xrelease
push
dec
xchg
aas
jmp
sbb
stos
or
repnz
mov
out
ss
lret
mov
lods
mov
lods
and
movsl
jbe
xchg
imul
sbb
cmp
bound
dec
repz
xcrypt-ofb
cmpsl
das
int3
jbe
adc
gs
fsubrs
mov
xchg
out
mov
and
div
outsb
pusha
cmpb
xchg
repz
mov
mov
addl
fldcw
into
psubsb
das
pushf
inc
loope
pushf
push
dec
mov
jo
jle
inc
push
addr16
sti
mov
nop
inc
jmp
repnz
xchg
mov
mov
int3
add
adc
mov
lcall
sub
inc
jge
mov
pop
roll
sbb
data16
das
add
fcmovu
mov
push
or
pop
lahf
or
into
pop
add
inc
jno
cld
test
mov
gs
xor
fs
sbb
repnz
jg
fidivl
jb
lods
push
js
mov
mov
sub
loop
out
aam
ret
push
mov
jecxz
cmp
mov
jmp
mov
push
pop
cmpxchg
jle
add
xchg
stc
mov
loop
push
sbb
insl
in
push
sub
mov
push
pop
imul
sbb
xlat
int3
mov
kxorw
lret
mov
cmp
test
dec
xor
data16
leave
pop
cmpsl
sbb
or
push
sub
sbbb
out
jl
inc
in
jns
sbbb
sti
ret
ja
rclb
fs
push
sub
cmp
test
test
xchg
fadds
add
mov
mov
roll
sub
in
jp
sbb
loope
mov
jl
sbb
addr16
push
out
shlb
aad
mov
sti
test
popf
mov
xlat
or
adc
pop
inc
cmp
pop
dec
push
jecxz
cld
lods
dec
lret
xor
aad
mov
xor
sub
into
es
gs
mov
push
inc
or
out
into
shr
or
fidivl
cmp
test
mov
out
push
icebp
add
ds
call
sbbl
xchg
push
cmpsb
push
jb
jmp
repnz
out
fs
repz
push
cs
sbb
cld
mov
je
xchg
and
imul
adc
nop
cmpsl
iret
inc
aad
popf
pop
mov
out
xchg
cld
cmp
sbb
cmp
inc
cmpsl
test
xlat
mov
leavew
insl
fwait
xor
int3
jge
aam
push
mov
pop
add
push
xor
inc
into
lods
icebp
jl
call
in
mov
loop
mov
mov
fwait
pop
or
ret
outsb
loopne
nop
mov
repnz
pop
mov
cmpsb
iret
insb
inc
fistpll
movsl
jns
mov
test
cwtl
fwait
mov
jmp
lcall
daa
rclb
cmc
es
outsb
sar
sbb
mov
xlat
int3
roll
add
cmp
aad
ss
orl
adc
xor
pop
mov
cmp
pop
push
insb
jl
mov
int
cmp
cld
in
jns
aam
jg
call
sti
shlb
fmuls
mov
xchg
sbb
outsl
loope
loop
cmp
loope
cmp
xor
pusha
xor
ljmp
add
cmp
adc
arpl
mov
pop
jg
jecxz
mov
cmp
nop
inc
or
enter
jecxz
xchg
adc
push
dec
repnz
or
imul
push
jecxz
shr
stos
adc
les
sti
xchg
js
mov
fisttpll
sahf
stos
cmp
dec
dec
xchg
xor
cltd
sbb
ja
enter
insl
push
popf
xchg
ret
sub
lret
jmp
popa
pop
xor
call
xor
aas
cli
pop
repz
mov
pmuludq
daa
sahf
movsl
aas
in
mov
inc
sbb
rcrl
xchg
xchg
out
fwait
inc
je
js
bound
sub
popa
cmp
dec
mov
adc
sub
idivl
jne
jmp
add
and
sub
pop
divl
outsb
nop
loopne
icebp
scas
mov
sti
rcr
push
out
int3
mov
push
in
mov
gs
mov
mov
mov
aas
icebp
add
pminub
popf
mov
les
js
sbb
mov
dec
xor
adc
pushw
add
insl
sti
cmp
xchg
mov
or
cwtl
out
loopne
adc
into
out
and
add
mov
cs
xor
cli
mov
repnz
sub
divb
sti
or
mov
cli
int3
cmp
cmc
jmp
aas
ljmp
sub
pop
ds
jmp
lods
into
daa
std
inc
or
add
stc
rclb
gs
dec
cmp
sti
mov
arpl
cmp
inc
xchg
jae
pop
es
pop
inc
out
mov
mov
fidivrs
popa
lret
loope
or
mov
adc
xchg
and
out
jmp
pop
mov
gs
mov
pop
idiv
insb
jb
cmp
push
jmp
imul
addr16
sub
and
xor
lret
cmp
cmpsl
cmp
cmpsb
sub
inc
popa
lods
andl
pop
js
mov
or
std
mov
adc
inc
inc
lds
std
hlt
adcb
jp,pt
mov
pop
inc
xchg
hlt
and
jns
ss
bound
dec
sub
inc
outsl
stos
xchg
call
cmp
call
pushf
push
pop
in
adc
testl
mov
mov
cmp
jmp
mov
lea
out
sub
cmp
pop
mov
add
loop
bound
ret
jno
push
push
xor
sub
aam
daa
fidivs
pop
loope
push
aad
mov
fwait
fbld
adc
movsl
in
outsb
jg
dec
jno
jle
cli
mov
mov
fprem1
push
mov
mov
stos
icebp
bound
insb
xchg
xor
xor
bound
mov
lods
lods
jns
loope
shr
sbb
inc
cmovnp
das
mov
inc
cmp
inc
out
lret
lea
xor
dec
sub
inc
push
sarl
push
insl
mov
es
sbb
cmp
decb
pusha
inc
pushf
int3
dec
inc
sub
rorl
push
scas
sub
ret
dec
sahf
push
or
push
loop
push
mov
mov
incb
loope
icebp
pop
hlt
mov
or
xchg
lret
inc
jbe
insb
adc
mov
push
pop
or
cmp
enter
and
in
addb
test
add
mov
mulb
dec
jl
mov
add
pop
inc
lods
inc
push
incl
xor
pushf
es
dec
mov
mov
fcoms
dec
add
mov
enter
cmp
and
in
sub
insl
cmp
repnz
xlat
pop
inc
ss
xchg
mov
pushf
in
pop
mov
adc
gs
xchg
movsl
mov
pushf
les
and
sahf
or
out
dec
mov
shll
insl
push
subl
add
cmp
leave
cld
lods
inc
lcall
aaa
lock
xor
pop
cwtl
in
ret
cmc
push
pop
mov
call
dec
mov
lahf
popf
imul
dec
jno
push
push
mov
repnz
loopne
and
scas
jae
jb
inc
sub
dec
ror
loop
xchg
aad
mov
mov
mov
add
lahf
or
sbb
dec
fsubp
ret
mov
xorb
pop
push
sbb
or
pop
mov
bound
jmp
into
cmp
mov
fidivrl
xor
lods
jl
addl
dec
sarb
fchs
push
lret
adc
aad
clc
push
lret
lret
in
das
pop
pusha
stos
push
out
in
mov
orb
clc
inc
sbb
aad
sub
adc
aam
pop
imul
test
inc
jbe
lret
rcll
rcrl
das
cmc
sbb
xor
cmpsl
cmp
cmp
in
sub
rcrb
cbtw
hlt
pop
cmp
movsl
dec
sbb
sbb
hlt
pop
es
jecxz
pusha
mov
popf
fistpll
mov
dec
stc
ret
mov
enter
xchg
scas
roll
pop
pop
mov
pop
ss
push
sub
mov
and
movsb
aad
or
insb
jns
mov
and
daa
pop
fistpll
data16
in
pop
xor
rcrl
adcb
push
mov
scas
in
push
adc
sbb
mov
jno
jno
scas
adc
inc
cli
adc
mov
sub
lock
add
sbb
pop
jg
icebp
inc
lock
add
hlt
gs
fldt
fcomip
jno
mov
adc
inc
out
cmp
icebp
cmpsb
mov
rcll
jbe
repz
jmp
js
incb
mov
mov
aaa
inc
ret
jb
and
adc
add
push
or
pop
dec
sub
add
or
xchg
sbb
mov
sub
aaa
inc
nop
push
dec
mov
push
jle
test
ficompl
push
cmp
dec
loopne
push
jns
ds
adc
dec
lret
xchg
bound
push
lock
push
jbe
add
jecxz
shlb
fcmove
mov
insb
inc
movb
adc
out
mov
sub
jb
sbb
dec
pusha
cmp
ret
xchg
add
lock
das
fidivrs
dec
test
or
popf
mov
push
fisubl
lahf
or
negb
mov
and
je
fisubrl
aam
dec
sarb
dec
pushf
pushl
call
pop
mov
lods
cmp
lods
lea
cltd
mov
rorb
jo
sub
jnp
lea
add
cmp
jns
and
lret
cmp
scas
pop
dec
mov
out
ficoml
cmp
jns
ret
inc
outsb
cmp
lds
xchg
mov
dec
jnp
sub
out
rcrb
mulb
mov
and
inc
and
inc
add
xor
sbb
popa
sbb
negl
lahf
call
push
push
movsl
adc
and
mov
mov
fs
out
xor
and
enter
pop
mov
andb
jbe
lret
sub
addl
das
cmp
dec
mov
pop
adcl
scas
in
sub
je
sbb
adc
push
mov
push
mov
adc
fstps
fbld
fnsave
stos
ret
inc
ret
mov
xchg
and
movsb
into
sbb
and
sahf
xlat
movsb
outsb
fs
int
jns
dec
add
ret
lcall
jecxz
cltd
jne
jne
push
in
push
repz
pop
and
ss
outsl
adc
repz
adc
fidivl
jb
lret
pop
and
jg
mov
add
sti
xchg
pusha
xor
ja
sbb
push
push
data16
mov
daa
jp
dec
xor
xor
out
mov
test
divb
rclb
rcpps
scas
mov
ja
nop
mov
pusha
or
inc
dec
imul
outsb
pop
jnp
int3
ja
add
mov
mov
pop
sbb
stos
test
icebp
out
out
xlat
mov
ds
out
inc
out
pop
ljmp
dec
sahf
lock
dec
jbe
mov
add
pop
negl
cmp
idivb
movsb
adc
mov
sbb
cmp
cmpsb
pop
test
and
shrl
dec
and
test
ljmp
fsubs
sub
mov
test
in
adc
or
into
cmp
lea
mov
cmp
mov
icebp
xchg
icebp
in
adc
scas
mov
mov
jnp
frstor
push
pop
sbb
js
sbb
and
dec
mov
lea
fistl
repnz
std
fnstenv
cmp
ret
std
insl
xchg
sbb
xchg
pop
sti
js
xchg
aad
pop
cmp
test
jge
ss
push
mov
mov
xchg
ret
loopne
mov
test
imul
inc
out
dec
sarb
xor
xchg
adc
lea
fldenv
sbb
std
call
fdivl
in
pop
testb
mull
test
xchg
cwtl
push
nop
iret
test
fcom
dec
jbe
cmp
jno
in
mov
adc
lods
or
mov
outsl
stos
cwtl
mov
mov
subb
mov
fidivs
and
cltd
ret
push
fldt
jae
lcall
sahf
idivb
xchg
clc
shrb
mov
jg
lret
out
add
pop
test
or
or
mov
in
fwait
call
mov
adc
push
adc
sub
stos
inc
ss
cmp
jno
decb
mov
or
int
dec
repnz
xchg
sbb
sub
fiadds
inc
out
push
lahf
or
lds
mov
fldl
sbb
cld
push
mull
sbb
sbb
or
movsl
iret
or
inc
or
scas
test
xchg
sub
jne
out
pop
inc
testl
sbb
xorl
lods
nop
pop
mov
je
xor
mov
and
xor
icebp
in
in
sbb
lcall
insl
pop
xchg
push
sbb
es
jle
sub
push
lret
call
shl
cmp
fsubrs
enter
fsubrl
pusha
xor
fnstcw
push
mov
adc
dec
ds
push
xchg
fs
mov
dec
in
pop
rolb
mov
pop
out
jbe
mov
stos
aam
fsts
rolb
lahf
push
dec
jno
xchg
insl
sti
lods
ds
pop
pop
mov
outsl
cmp
enter
sbbb
loope
andb
push
mov
mov
cmpl
mov
xchg
or
sbbb
dec
add
push
popf
pop
cmp
in
add
lods
add
xor
sbb
ss
test
sub
mov
mov
jno
or
jae
movsb
cmpsl
and
cmp
sbb
and
lods
sub
movsb
std
lret
sbb
imul
fdivs
outsb
jge
vxorps
and
shl
fwait
out
xchg
gs
sbb
enter
incl
mov
cld
sbb
mov
xor
out
or
dec
mov
iret
pop
mov
or
hlt
int
add
push
add
scas
test
es
or
mov
lods
loop
xor
mov
fsubl
imul
out
or
mov
dec
dec
adc
fcoms
mov
sahf
sbb
fnsave
mov
mov
xor
lods
dec
push
mov
je
sahf
cmp
daa
cld
xchg
cltd
inc
leave
add
lock
insb
xchg
sub
inc
inc
les
adc
add
jmp
inc
xor
bound
lret
push
pop
nop
out
mov
xchg
add
dec
push
arpl
cmp
popf
or
jp
or
lds
sub
ret
iret
jg
out
mov
aaa
adc
jo
pop
add
addb
mov
adc
popa
cmpb
in
push
push
push
jg
push
addr16
sbb
and
lret
clc
dec
xor
cmp
mov
shrl
inc
gs
mov
pop
cmpsb
fstpl
adc
test
sub
aam
xor
lret
mov
and
inc
cmp
push
testl
std
xchg
bound
or
fmul
sbbl
ljmp
xchg
xchg
shrb
mov
repz
xchg
cwtl
and
popf
dec
dec
sub
std
inc
leave
cmpsb
xchg
pusha
call
push
or
ljmp
push
xor
xor
cmp
mov
xchg
jmp
sahf
inc
add
and
or
das
stos
lds
jmp
push
or
push
cmpsl
mov
mov
outsb
inc
lods
les
xchg
mov
fbstp
out
inc
les
lret
xor
aam
push
mov
arpl
inc
pop
out
xchg
cli
xchg
jmp
je
xor
mov
imul
dec
daa
repz
fildl
std
dec
push
mov
mov
and
cmp
xor
shlb
rcpps
rcrb
xor
mov
xor
data16
shll
add
cmp
orb
and
hlt
fsubrs
mov
xchg
rolb
loop
pusha
cmpsl
cmp
aam
loope
mov
xor
pop
subb
mov
out
sti
inc
mov
mov
js
test
sbb
lods
cmp
cmpsl
ret
cmp
rolb
cmpsb
adc
paddsw
out
lcall
fstpt
sbb
cmp
cmpsb
popa
aas
out
push
shl
pop
lods
jp
xchg
add
dec
lret
addl
and
or
sahf
fisubrs
cmp
adc
sub
imul
fists
es
dec
xchg
adc
sub
enter
cmc
test
popa
mov
sarb
push
nop
leave
cmp
dec
andl
sub
cmp
push
and
int3
mov
lock
xor
out
fsubr
pop
cwtl
push
push
xchg
mov
cmp
subb
dec
repnz
test
scas
pop
lds
xchg
lods
xchg
test
dec
cmc
je
xlat
lods
fldenv
cmp
mov
jl
dec
dec
sub
incl
ljmp
pcmpgtw
cli
cli
ja
push
pop
pop
pop
mov
inc
outsl
mov
mov
test
loope
das
stc
pusha
dec
and
xchg
clc
sub
dec
mov
shll
out
push
sbb
add
imul
dec
mov
inc
out
add
xor
ja
cmp
mov
pop
ljmp
or
andb
sti
push
mov
jae
rolb
sahf
xchg
clc
pop
nop
jne
xor
pop
lods
in
outsb
pop
divl
push
xlat
into
push
jmp
push
fistpl
movsb
pushf
xchg
jo
xchg
cmpsb
inc
dec
sbb
xlat
rcr
or
inc
mov
cwtl
call
shrb
add
jge
push
sbb
movsb
pop
mov
pop
dec
repnz
rcrb
iret
and
adc
in
inc
sub
pushf
xchg
sub
mov
jo
aaa
xchg
gs
dec
xor
cwtl
inc
mov
xchg
std
test
in
iret
jno
push
or
xor
add
pushf
shrb
mov
sbb
mov
inc
out
pop
mov
fadd
je
sti
and
mov
mov
and
sahf
pushf
mov
xchg
or
jecxz
loope
push
rclb
inc
in
sarb
nop
inc
mov
cli
in
inc
sub
pop
pop
int
dec
push
mov
cmp
mov
jb
jne
dec
adc
test
pop
adc
test
sub
loope
movb
lods
mov
push
stc
push
sbb
out
push
outsl
add
cwtl
or
sub
jg
xorl
scas
or
in
test
add
clc
mov
sub
mov
dec
push
add
mov
insb
clc
add
cmp
sbb
mov
test
mov
fadd
fldenv
fistpll
cwtl
fists
or
jl
shll
xchg
and
inc
pop
ret
xchg
out
xor
test
cs
dec
dec
frstor
xor
sub
push
outsl
je
test
cmpsl
sub
stc
sub
int
idiv
std
push
cmpsb
dec
and
add
mov
sub
push
in
sbb
and
jnp
mov
sbb
and
sbb
add
dec
jae
pop
push
loope
xchg
add
mov
mov
xor
bound
xor
and
in
jl
outsb
ret
loopne
jns
imul
mov
cld
adc
mov
jnp
aam
and
stos
fdivrp
je
lcall
aam
mov
cs
arpl
cmpsb
cmp
cmpsl
cmp
inc
sub
pushf
or
push
pop
rcrl
repz
fwait
add
rorl
mov
cmp
inc
mov
lea
inc
mov
pushf
xor
xchg
add
jmp
dec
jge
popf
leave
mov
in
ret
xor
sbb
or
out
faddl
jle
xchg
test
pop
fisubrl
push
mov
or
je
int3
ror
pop
and
mov
pop
lods
cli
push
notl
std
inc
loopne
imulb
subl
mov
in
fs
inc
push
and
and
pop
in
sbbl
loop
pop
scas
movsb
or
rorl
mov
add
or
mov
popa
and
dec
xchg
mov
scas
push
dec
das
sub
in
sub
add
cmpsl
push
movsb
pop
imul
movsl
push
sarb
out
mull
loop
ror
jnp
loopne
sub
inc
addb
cmpsb
dec
in
or
mov
fwait
pop
adc
in
std
xor
shlb
adc
jle
add
push
xchg
xorb
cmp
icebp
mov
and
in
push
push
mov
fdivr
rcrb
popf
cli
loopne
mov
imul
inc
rdtsc
sbbb
out
sub
ss
loopne
ficompl
jo
bound
adc
add
out
test
lret
ror
enter
orl
leave
jecxz
mov
mov
pcmpgtb
push
fwait
lahf
lcall
jmp
int3
mov
test
pop
adc
cmpl
mov
sti
ljmp
data16
in
xor
inc
adc
andl
push
insl
push
push
pop
dec
das
cwtl
sbb
sbb
cmp
cmp
fcmovne
push
daa
add
adc
dec
inc
dec
xchg
les
rorl
push
mov
push
jp,pn
loop
lds
cmpl
hlt
xchg
xlat
mov
stos
ret
or
data16
dec
enter
mov
test
test
and
mov
or
mov
outsb
fists
or
mov
xchg
lods
pop
std
jp
jmp
fdivp
out
repnz
imul
popf
ss
es
dec
inc
xor
lea
push
out
movsb
add
cmp
dec
pop
mov
pop
xchg
cld
js
in
subb
sub
mov
pop
xchg
inc
iret
lods
mov
fnstcw
rorl
and
jns
shll
add
mov
fldcw
xor
rclb
mov
ret
pusha
insl
pop
iret
fimull
mov
imul
loopne
pop
push
jmp
cmp
roll
push
push
mov
aas
js
inc
mov
cltd
or
dec
jo
dec
je
push
out
sbb
repz
cmp
hlt
lahf
dec
lret
ret
ret
dec
jecxz
inc
add
xchg
stos
and
sub
and
fidivl
sbb
fstpl
sub
ljmp
sbb
pop
out
inc
pop
pop
jb
xor
jl
cmp
movsb
and
push
sub
sub
jl
cltd
push
xchg
mov
cmp
addr16
pushf
xchg
int3
cmp
and
and
aam
inc
out
add
pop
mov
dec
das
out
mov
scas
xchg
mov
cltd
push
dec
sarb
pop
xor
xor
and
xor
jo
fdivp
jb
std
nop
mov
adc
cs
cs
iret
loop
sbb
loope
dec
cmp
fidivrl
popa
test
jl
inc
fidivrs
cmp
cmp
mov
repz
test
cs
push
push
inc
shl
ret
fdivrl
ret
scas
lahf
dec
mov
daa
pop
inc
das
setnp
adc
fcmove
fwait
and
pop
bound
and
pop
in
fisubrl
xchg
inc
lret
les
mov
sarb
xor
stos
hlt
shrb
bound
addr16
and
ds
jbe
aaa
sub
das
mov
sub
aas
femms
sbb
outsb
div
jb
js
or
outsb
test
cmpsl
mov
jb
out
out
add
sbb
push
clc
pop
lods
aad
ss
repz
sbb
jne
loope
call
push
imul
mov
xchg
andl
into
jnp
adc
mov
shlb
andl
je
ds
sub
js
clc
sub
pushf
sahf
das
jmp
add
roll
adc
cmpb
jge
and
test
je
mov
imul
push
mov
sbb
xlat
dec
rol
jle
ret
js
jno
aam
sbb
enter
mov
push
pop
add
mov
jmp
mov
pusha
arpl
adc
dec
adc
mov
mov
and
xchg
ljmp
fcompl
push
add
mov
jp
jp
imul
in
mul
mov
fdivl
fs
enter
jge
or
and
aam
jecxz
add
xor
outsl
lods
out
popf
outsb
scas
xchg
jns
andl
push
xor
jl
xor
push
push
lods
sbb
or
and
aaa
pop
iret
and
icebp
arpl
dec
or
cmp
dec
jnp
int
inc
divl
sbb
shrb
dec
xor
pushf
sbb
dec
adc
movsl
add
ds
mov
xchg
inc
jle
addr16
ljmp
xor
push
jae
shll
lcall
xlat
stos
mov
int
test
ret
and
and
jecxz
mov
pop
scas
and
shll
jmp
mov
iret
add
add
dec
sub
sub
adc
mov
add
mov
and
push
fs
test
mov
jmp
and
pop
mov
icebp
or
movsl
loope
pusha
out
mov
das
sbb
dec
les
filds
repz
lods
mov
or
and
hlt
cmc
clc
push
pop
sbb
lret
mov
jg
fstpl
out
cmp
mov
loop
or
mov
lods
int3
jo
mov
mov
and
iret
scas
push
cmp
sub
mov
mov
jb
push
dec
sbb
adc
clc
jne
push
jge
je
pusha
inc
test
stos
in
mov
xor
xchg
movsb
int3
xchg
cwtl
cmp
sub
ror
mov
inc
xchg
popf
insb
add
xchg
jno
test
xor
test
pop
ss
or
mov
sbb
aaa
jmp
pop
jecxz
fwait
repnz
ss
dec
rol
hlt
add
and
sub
sub
sbb
sbb
mov
sbb
pop
fimuls
push
inc
lds
sbb
or
dec
push
dec
lods
add
dec
cmpsb
lock
leave
jp
int3
aad
add
imul
add
ja
mov
sarl
pop
in
int3
jbe
pop
inc
aam
cmp
lods
xor
cmc
jnp
push
mov
sub
add
mov
call
mov
stc
ds
or
jecxz
adc
je
cld
pop
rolb
xchg
mov
pop
pop
pop
or
inc
and
insl
imull
xchg
std
test
cltd
fs
add
cld
aad
je
pop
xchg
push
add
jnp
addb
and
jecxz
imul
repnz
add
dec
jecxz
repnz
pop
hlt
push
mov
aaa
xlat
out
int3
xor
pop
sub
push
pop
xchg
cmp
mov
insl
int
out
lret
pop
rcrb
std
add
pushf
loope
lods
pop
dec
xchg
sbbl
pop
and
inc
test
jo
xor
insl
loop
insb
xchg
test
mov
out
sub
dec
pop
inc
jge
mov
test
sbb
frstor
sbb
push
negb
jb
jp
fldt
lods
lret
cmp
cmp
pop
cli
jecxz
or
xchg
mov
inc
sbb
stos
orl
and
int
subl
adc
push
repnz
xor
scas
adc
push
daa
out
push
out
ud1
jae
addb
gs
inc
mov
and
cmp
int3
mov
jecxz
inc
jle
cmp
cmp
mov
andnps
push
sub
adc
pusha
dec
jae
adc
sub
sbb
iret
mov
mov
mov
fs
out
push
push
loopne
hlt
sahf
cli
stc
sbb
or
sti
enter
jge
xchg
scas
les
pop
out
sbb
lahf
fldcw
cmp
or
lahf
fwait
adc
popa
out
push
jp
and
lret
sbb
into
ljmp
add
mov
sbb
in
rcr
mov
cs
data16
hlt
stos
mov
stos
add
in
sahf
fisttpll
cmpsb
imul
add
xor
das
out
jg
pop
sti
cli
jg
scas
push
sbb
in
cmc
ja
repnz
fistpl
xchg
sbb
test
rorl
aad
lea
loopne
outsb
cmp
inc
repz
lret
fcoml
xlat
adc
daa
or
pop
inc
rcrb
pop
outsl
xor
repz
subb
pop
ljmp
out
inc
iret
bound
mov
outsb
fisubrs
cmpsl
pusha
fbstp
repnz
rcl
sahf
rcll
aad
mov
adc
nop
jmp
pop
mov
test
orb
push
push
in
dec
nop
jae
lock
push
and
pop
mov
mov
cmp
aas
outsb
and
out
xchg
pop
sub
test
lret
loope
std
sub
lahf
std
dec
cmp
lahf
lret
mov
lock
xchg
jbe
iret
repz
sub
fsubrl
add
cld
mov
in
add
push
lcall
and
lds
dec
cmp
cmpl
jbe
and
std
mov
add
push
out
mov
leave
dec
mov
xchg
pop
scas
fbld
fistpll
cmp
inc
dec
mov
and
lock
cmp
inc
stos
inc
mov
and
jmp
test
mov
repz
dec
loope
nop
dec
test
sbb
mov
dec
add
adc
lahf
push
arpl
adc
int3
xchg
cld
inc
test
jmp
enter
mov
pop
xor
ss
ljmp
sub
fmulp
xchg
push
fistpl
dec
and
mov
movl
mov
mov
jnp
shlb
xchg
out
mov
or
stos
sbb
ds
mov
nop
push
enter
xor
add
inc
jecxz
and
sarl
mov
adc
push
psubsw
stos
inc
or
mov
aas
mov
jb
cmp
out
ret
sub
xchg
jle
mov
fnsave
jns
push
inc
mov
mov
push
ret
lret
lods
push
loope
adc
mov
cld
loopne
inc
pop
popa
iret
pop
call
push
arpl
adc
jnp
lahf
aad
loopne
roll
sbb
pop
fs
in
jecxz
or
inc
lods
je
cmc
dec
jae
and
movsl
xor
jge
push
arpl
clc
lahf
out
sbb
movl
xor
and
push
mov
out
es
imul
push
jmp
lds
jg
lret
popf
pop
stc
xchg
loopne
shl
mov
sar
enter
or
mov
or
jle
loopne
sbb
cmc
sub
les
fstps
xor
add
mov
lods
lahf
lret
sahf
mov
inc
lds
faddl
pop
aas
push
popa
xchg
xchg
jnp
cmc
mov
xchg
hlt
push
cmpsl
imul
xor
out
jo
xor
pushl
mov
add
fcom
push
test
jecxz
pop
inc
lcall
or
pop
aas
aas
movsl
or
stos
add
mov
adc
mul
into
add
aas
xchg
mov
das
jp
cs
ja
aam
movsb
push
adcl
xor
sbb
or
fwait
xchg
test
xchg
sub
and
lret
dec
xchg
test
bound
mov
mov
shl
pop
cli
cmp
sbb
xchg
int
outsb
pop
mov
pop
loop
insb
ret
cltd
inc
aad
and
inc
mov
fcmovu
out
lods
stos
sbb
sub
scas
jo
and
and
fldl
int3
or
stos
ret
inc
push
add
and
adc
insl
jae
gs
roll
int
push
data16
and
or
gs
mov
nop
cmp
pop
mov
lds
xor
lock
out
aad
fildll
ss
mov
mov
gs
lods
insl
push
pop
and
pop
cltd
jns
icebp
and
sbbb
mov
addr16
test
ficompl
cltd
add
mov
cwtl
xlat
arpl
jle
cmp
cwtl
xor
pusha
arpl
inc
pop
mov
push
cmp
sar
insl
xchg
dec
cmp
leave
dec
insb
inc
aad
mov
pop
mov
dec
lods
jle
stc
mov
push
xchg
inc
shrl
add
cli
xor
movsl
inc
aas
or
std
mov
into
jae
sub
jno
jg
pop
pop
xor
cmp
mov
cmp
flds
cs
cwtl
mov
mov
push
int3
mov
and
and
rclb
push
and
mov
cmpsb
mov
daa
std
insl
insl
loopne
mov
sub
sbb
mov
sub
addr16
and
inc
idiv
mov
fisttps
fcoml
sub
cld
and
push
popf
add
xchg
xchg
push
inc
mov
and
dec
pop
mov
lock
es
or
jecxz
rorb
mov
fcmovb
test
inc
or
xchg
test
js
pushf
popf
xchg
push
mov
adc
loopne
out
into
mov
nop
mov
rcrb
enter
push
movsb
inc
lods
mov
fisubrs
fsubs
dec
or
stos
push
adc
and
cmp
xor
adc
mov
pushf
mov
inc
ss
or
pusha
fld
stc
sbb
mov
push
dec
nop
lods
sub
mov
frstor
dec
mov
pop
push
subl
push
sbb
lret
aas
lods
mov
mov
sub
mov
scas
loope
dec
inc
push
or
je
push
xchg
enter
cli
mov
inc
pop
jge
jno
jl
nop
mov
fdivs
bound
ljmp
sarl
mov
repz
stos
pop
push
sub
roll
pop
push
dec
popa
cmp
mov
sbb
and
ret
lock
aam
and
lret
mov
mov
xor
add
xor
or
xchg
cmpxchg
stos
jmp
add
dec
icebp
in
pop
loopne
call
jnp
lds
sub
cs
outsb
jle
jl
push
cs
mov
aam
data16
test
clc
xor
pusha
mov
iret
enter
push
mov
cmc
mov
add
pop
xchg
sub
mov
outsb
xor
push
push
cmp
mov
push
pushf
and
ljmp
ffree
stc
popf
xchg
dec
jecxz
lods
pop
adc
inc
aam
sub
mov
inc
scas
in
scas
lcall
gs
add
and
cli
out
inc
jle
inc
std
adcb
xor
xor
or
sub
shll
and
in
popa
xor
mov
mov
sbb
push
jne
dec
add
xor
pop
mov
mov
ret
sahf
test
decb
in
mov
imul
in
jge
enter
outsl
daa
sbb
sarl
push
leave
lods
mov
pop
loope
leave
xchg
cmpsl
or
popf
cltd
int3
insl
mov
dec
movsb
shl
cs
mov
push
ficompl
loop
dec
mov
ljmp
into
xor
pushf
emms
xchg
lods
jb
mov
jmp
mov
in
mov
dec
mov
mov
jge
lret
ja
mov
ret
repz
mov
int3
mov
jl
das
xchg
dec
xchg
push
adc
cmp
push
pop
ss
testl
xor
mov
jnp
push
sub
xor
inc
cli
xor
inc
cmp
adc
mov
mov
jge
aam
mov
sub
aaa
mov
cmp
sub
add
cmc
jp
mov
jbe
adc
and
nop
xchg
xchg
call
out
xor
and
pop
popa
jecxz
incb
out
popa
les
sub
loop
into
pop
mov
outsb
dec
and
jmp
into
or
int3
xchg
test
aaa
clc
out
jle
mov
jecxz
xor
cli
dec
jae
sub
push
test
xchg
fs
setne
rcrb
iret
push
inc
sub
dec
cmp
psrlq
cmpsb
out
push
pop
xor
ss
mov
testb
xchg
jo
cmp
pop
rcr
in
and
xchg
jo
xchg
jnp
jae
dec
xor
jg
fs
faddp
cmp
dec
aam
mov
jo
mov
ljmp
sahf
push
mov
push
sub
enter
loop
mov
xor
sbb
jge
sub
mov
pop
sub
call
pop
sti
or
push
adc
xchg
rcll
mov
cmpsl
daa
mov
ret
adc
sbb
ret
pop
lods
sub
lods
push
mov
sar
mov
mov
pop
dec
cld
ja
push
jne
push
cmp
add
sub
aaa
aam
aas
scas
addr16
sbb
push
add
dec
inc
in
lods
xchg
lret
cltd
mov
jae
mov
mov
adcl
ret
or
cmc
out
rol
xchg
pop
sahf
push
sub
mov
jmp
or
out
scas
push
notb
shl
ds
cmpsl
or
mov
inc
vunpckhps
dec
and
test
push
xor
lds
xchg
outsl
mov
loopne
loope
scas
fs
cmp
aam
adc
push
adc
pop
push
dec
push
lahf
aas
mov
mov
cmp
sti
sahf
sbb
imul
imul
adc
insl
cli
jecxz
mov
xchg
mov
in
mov
or
ret
jge
std
sbb
das
adc
sub
and
js
hlt
adc
xor
das
test
or
xlat
mov
sahf
jae
rclb
xchg
push
sti
sbb
insl
mov
pushf
fcomip
mov
cmp
pop
and
xor
rcll
fldt
dec
jno
cmp
sub
mov
xchg
shrb
mov
push
scas
mov
cmp
cmpsl
pop
sahf
bound
dec
mov
insb
jge
xor
daa
fdivp
adc
cmp
cmp
push
cmp
push
fidivs
int
push
cli
lret
mov
call
pusha
xsaves
pop
push
sbb
push
bswap
pop
shll
shrl
loope
test
inc
cwtl
lds
cmpsl
into
sub
xchg
pop
insb
std
andb
outsb
adc
lock
sub
in
jne
imul
adc
cmp
cmpsl
iret
mov
push
iret
pop
insb
xchg
adc
aas
fbld
stos
notl
or
out
out
aam
in
mov
jo
das
bound
insl
mov
sbb
pop
jae
bound
mov
mov
scas
fldt
fs
pusha
push
daa
xchg
je
cltd
inc
mov
inc
cmp
mov
jno
mov
sub
daa
lock
sbb
fwait
mov
pop
mov
adc
xchg
add
pushf
or
lahf
lds
insl
inc
jl
xchg
sbb
xchg
jecxz
les
cmp
pop
cwtl
dec
andl
testb
sbbb
rorb
mov
xchg
adc
cmp
dec
and
outsb
loop
mov
add
ja
fs
int3
mov
movsl
mov
ret
jb
or
jle
std
dec
xor
adc
xchg
rcrl
mov
roll
or
cwtl
ret
push
xchg
fists
lods
add
imul
ss
mov
lret
cmpsb
mov
pop
jg
gs
xchg
dec
mov
push
cld
in
test
insb
adc
jecxz
fiadds
fdivrl
scas
insb
dec
outsb
ret
in
or
push
pop
lret
mov
lahf
jnp
inc
mov
or
mov
repnz
mov
fcomi
xchg
or
ja
lret
jb
pop
popa
adc
lret
pop
pop
pop
icebp
aam
and
push
inc
sub
sti
movl
je
lds
lea
mov
aam
push
push
pop
pop
popa
out
dec
push
xor
fistpll
fbld
test
inc
into
xchg
adc
xchg
dec
cmc
aaa
stos
leave
jp
jg
pop
into
push
cmp
dec
enter
jge
adc
or
push
mov
mov
sub
and
in
sub
daa
mov
mov
test
cmp
mov
mov
sbb
xchg
movsl
push
dec
xor
jecxz
std
pop
lahf
mov
nop
aad
xor
jge
aam
or
lea
enter
and
loope
and
out
leave
cmpsl
fcomi
and
sub
fstpl
hlt
cmp
out
mov
inc
andb
jo
pop
dec
idivl
push
into
xor
mov
adc
push
add
call
adc
mov
outsb
test
outsb
in
cmp
cli
popf
loop
je
lret
pop
outsb
add
ret
gs
mov
lcall
nop
ja
test
fisubl
push
test
pop
mov
sarl
adc
cmpsl
fists
ja
push
adc
jle,pn
cltd
icebp
adc
mov
adc
fldt
xchg
and
xor
in
cmp
movaps
mov
ja
hlt
xor
inc
loope
daa
push
jecxz
mov
jg
enter
es
mov
push
insl
sbb
jmp
push
cmpsl
lods
cmp
sbb
adc
mov
push
mov
imul
movsb
pop
sub
xchg
js
js
in
mov
jl
sub
into
cmc
ret
mov
shrb
mov
sub
mov
out
lea
inc
push
jp
add
adc
hlt
push
mov
loopne
mov
mov
loop
cmp
dec
pop
aam
int
pop
dec
jmp
bound
push
bound
push
and
minps
mov
fdivl
push
xor
xor
jne
push
icebp
sub
xchg
lds
pop
lods
fidivrl
xchg
xor
xchg
dec
fwait
iret
daa
pop
cli
jg
mov
cltd
dec
xor
les
xchg
mov
jbe
testl
loopne
mov
js
adc
stc
aas
sub
adc
cmp
es
test
add
xchg
out
mov
fsubl
mov
mov
push
xor
mov
jne
adc
mov
mov
out
mov
scas
and
shlb
sbb
add
imull
aas
push
and
dec
push
test
leave
cmc
or
xchg
repnz
ret
daa
lock
xchg
js
out
pop
lret
int
dec
scas
pop
dec
mov
sub
xor
fdivl
movsl
and
bound
or
sub
sbb
dec
inc
je
push
icebp
sti
mov
popf
cmp
inc
or
xor
into
fs
push
repnz
mov
je
jb
dec
les
decl
pop
sbbl
jl
stos
xchg
fdiv
push
adc
xchg
nop
sbbb
adc
lea
aas
cmp
outsb
lods
call
inc
jl
mov
mov
xchg
repz
xchg
cmpsl
or
jge
pop
fcompl
ret
out
addr16
and
sub
inc
sbb
fimull
leave
insb
sbb
les
out
push
adcb
lcall
addr16
and
cld
mov
aas
xor
adc
mov
imul
xchg
sub
lock
pusha
mov
addr16
je
shrl
inc
ret
xor
iret
jle
push
or
imul
mov
sub
and
sub
enter
stos
pushf
aam
mov
fdivrl
fsubs
jns
push
pop
sub
nop
mov
jmp
jl
jge
lret
stos
popa
sub
xor
out
lods
lods
mov
fnsave
jl
xchg
out
addr16
mov
fcoms
nop
mov
pop
adcl
cli
or
xor
fnstenv
mov
push
std
stos
out
pop
out
sti
dec
lret
inc
fsts
sub
sub
xor
xor
push
push
push
pop
int
mov
cmpsl
fiaddl
inc
mov
out
out
enter
sti
jecxz
orl
or
test
test
gs
lods
ds
lcall
jno
xchg
xchg
pop
aaa
adc
add
dec
jg
fst
in
xor
fdivrl
or
push
roll
pop
pop
mov
iret
adc
dec
mov
adc
call
sub
cmp
je
out
lea
shl
mov
mov
addr16
or
adc
cs
pop
jecxz
pop
inc
adc
inc
ja
xorl
pop
ljmp
sbb
iret
dec
loope
add
add
cmp
mov
push
shll
dec
dec
mov
shlb
adc
ret
adc
jle
jg
adc
jno
mov
js
xor
fdiv
xchg
or
mov
pop
pop
and
mov
inc
ret
sub
inc
or
add
nop
add
int
cmpsb
xchg
or
lcall
xorl
sbb
jbe
cmp
cli
mov
xor
push
mov
mov
or
repnz
cmp
jbe
pushf
xchg
popf
loopne
scas
sarb
leave
inc
dec
std
cld
out
cwtl
inc
dec
xchg
inc
push
inc
jecxz
in
push
mov
fidivl
ss
ds
cld
sub
mov
enter
gs
sbbb
mov
lahf
shl
or
les
loop
int
shr
out
scas
ja
pop
adc
fwait
lahf
imul
push
not
jbe
xor
aaa
xor
cmp
enter
jmp
lock
push
and
lds
sahf
push
mov
scas
sbb
inc
sbb
and
lcall
scas
xor
xchg
sbbb
mov
jae
mov
lods
stos
flds
ljmp
jae
mov
loop
cmp
fidivl
jne
mov
and
push
mov
sbb
jnp
or
stos
adc
sub
mov
cld
iret
ret
ftst
add
pop
pushf
stos
xor
ss
push
jp
test
inc
jne
mov
mov
xor
sbb
loope
lea
scas
and
fdivr
pop
into
mov
fdivrl
nop
push
popf
ret
cmp
icebp
jl
andb
in
int
ret
fwait
out
xor
hlt
dec
push
mov
xchg
add
xchg
test
mov
xchg
orl
and
pop
lret
ljmp
xor
negb
pop
jae
or
cld
popl
pop
movsb
add
and
xlat
jg
or
idivb
rcrb
push
push
loop
mov
loop
cmc
mov
add
enter
add
inc
lret
std
sti
cli
mov
and
fiadds
adc
in
push
loopne
arpl
pop
nop
sar
adcb
mov
imul
jno
test
inc
adc
mov
int3
pushf
mov
mov
popf
bound
hlt
push
iret
in
sbb
fisubrl
xor
or
fldenv
daa
push
cmp
mov
movsl
test
or
sbb
sbb
orl
inc
xor
std
sbb
mov
adc
int3
iret
pop
arpl
push
aam
adc
push
adc
into
arpl
je
insl
and
in
call
mov
mov
adc
pushf
push
enter
mov
jno
loop
xor
jb
or
adcl
and
les
stos
outsl
add
rcrb
test
mov
xor
pop
mov
pop
je
or
pop
inc
lahf
add
test
xor
xor
xor
inc
pop
jnp
sub
mov
cld
xchg
fmulp
das
push
data16
mov
insb
daa
jecxz
jb
std
xchg
xchg
cmc
je
and
push
xchg
insl
out
inc
sub
std
xor
mov
mov
mov
jmp
cmc
leave
sub
sahf
into
into
inc
xor
shlb
jbe
mov
sbb
lahf
mov
sbb
mov
mov
adc
lcall
push
jne
aad
out
lret
int
dec
shlb
jae
mov
mov
divb
lret
jmp
mov
loope
repnz
jne
icebp
inc
inc
push
movsl
jns
dec
mov
push
or
dec
lret
imul
sub
push
cld
lods
lcall
xlat
loopne
cmpsl
call
cmp
aas
leave
jg
cmp
xor
shll
mov
in
jg
notb
adc
clc
fidivs
or
in
icebp
fcomps
scas
mov
inc
adc
jl
xchg
pop
or
xor
pushf
jbe
loopne
ds
mov
cmpsl
cli
push
addb
push
in
mov
mov
daa
cmp
jmp
cmp
sarb
dec
jle
movb
jmp
sti
adc
jbe
das
loopne
mov
fsubr
jle
mov
inc
lcall
sbb
cmp
icebp
mov
loop
or
mov
clc
add
inc
adc
push
push
ret
xor
loopne
pop
subl
xchg
cmp
or
mov
xor
loop
aaa
aas
insb
loopne
add
inc
pushf
dec
lods
dec
mov
insb
shll
insl
mov
fwait
shll
dec
pop
dec
insb
adc
xchg
daa
xlat
shlb
cmp
lods
dec
in
movsl
daa
inc
mov
jl
mov
sbb
adc
lahf
xorl
or
popf
iret
fsubp
mov
xlat
pop
enter
add
mov
orl
mov
cwtl
shll
xor
in
or
pop
jmp
mov
or
sub
adc
fwait
enter
ds
das
gs
sbb
pop
lods
std
mov
in
shrl
adc
inc
xchg
mov
dec
cmp
fimuls
orl
sub
jno
adc
incl
sti
add
test
and
pop
mov
mov
cmp
fsubrs
mov
loopne
mov
roll
pop
aas
imul
and
pop
push
mov
int
xchg
mov
sub
jns
xchg
lods
mov
sub
xor
insb
cwtl
pop
sti
pop
mov
sbbb
aam
fisttpll
or
mov
push
pop
out
out
out
into
call
or
stc
jl
push
fsts
xchg
mov
cmp
int3
sarb
rcrb
aaa
addl
adc
sub
lret
add
shl
pop
mov
enter
sbb
push
in
jno
push
test
inc
dec
fwait
leave
incb
cmpsb
scas
sub
mov
and
xchg
fisttpl
stc
xchg
ss
fwait
repz
movsl
stc
cmpsb
add
mov
push
jb
lock
imul
cs
sbb
xchg
cmp
dec
adc
and
movsb
jl
mov
fprem1
jg
xor
sti
mov
push
push
adc
in
jno
xchg
movsl
out
and
xchg
jbe
ret
sub
outsl
jno
mov
cmovb
testl
aas
js
pop
ret
out
lock
inc
xor
and
out
lea
inc
jmp
and
adc
mov
add
cmp
js,pt
cld
jmp
add
dec
ljmp
cli
xor
loopne
shlw
mov
jne
adc
mov
mov
push
aaa
ror
pop
mov
push
sbb
sahf
add
call
or
aam
cld
sbb
mov
dec
and
or
fmul
push
out
inc
xchg
and
sub
or
imul
or
jecxz
xchg
and
jle
adc
sbb
xor
mov
cs
fbstp
pop
pop
fwait
sbb
sub
aam
lods
push
mov
and
out
repz
xorl
aaa
add
sbb
aam
mov
ss
loope
dec
jae
jle
fidivs
sbb
pop
sub
mov
or
mov
ret
lret
mov
mov
test
jne
gs
shlb
das
in
pushf
ljmp
mov
jmp
mov
push
jo
jl
mov
dec
fisubrl
jae
clc
int3
stos
sbb
or
sbb
pusha
mov
cmp
mov
mov
cmpsb
push
push
in
lods
das
mov
mov
stos
imul
jnp
add
js
out
cmpsl
in
imul
not
repnz
fbld
pop
mov
pop
xor
cld
mov
ds
pop
mov
test
std
mov
daa
mov
js
out
add
and
sbb
aas
mov
je
into
mov
xor
cli
push
push
shrb
push
xor
mov
ficompl
mov
int3
mov
sub
pop
cld
mov
push
xchg
mov
add
jmp
and
mov
cs
jmp
sarb
flds
sub
jae
add
adc
cmp
sarl
adc
adc
dec
lahf
stc
hlt
lea
addr16
maskmovq
divl
sbb
push
push
sbb
in
dec
scas
or
movsb
sbb
mov
dec
jo
mov
sub
std
mov
inc
dec
adc
xchg
imul
xchg
or
mov
or
out
lea
cwtl
lret
sbb
jle
cmp
mov
xchg
and
inc
sub
mov
test
out
js
and
ret
out
cmp
nop
pop
sub
push
jg
cmp
cmovge
nop
sbb
cs
fisttps
lds
mov
lahf
lcall
incb
xor
jb
orl
mov
ja
push
mov
addr16
adc
ja
sub
add
push
cmpsl
icebp
bound
sbb
add
cwtl
icebp
mov
push
mov
inc
insl
inc
repz
jae
sub
std
jg
pushf
dec
ja
adc
xor
out
addr16
xchg
in
mov
dec
cmp
or
push
movsb
sti
or
mov
dec
shld
push
mov
xchg
xor
rcrb
adc
cld
das
call
jmp
test
les
xor
pop
dec
push
xor
mov
xor
adc
push
dec
xor
add
xor
cmp
jl
clc
mov
xor
subl
aaa
repz
sub
popf
ljmp
es
fistpl
or
adc
mov
push
add
movsl
cli
fsubl
nop
cli
stos
inc
dec
mov
mov
mov
adc
inc
insb
push
mov
sub
mov
mov
push
jl
es
push
stos
xchg
imul
std
fdivrs
cmp
or
jmp
or
aad
and
pop
in
in
push
mov
or
out
mov
in
jne
and
je
inc
xor
push
imul
fdivs
pop
push
mov
or
dec
inc
pop
imul
idiv
jmp
data16
xor
or
xchg
mov
decl
pop
mov
faddl
pusha
andb
scas
push
mov
cli
sub
xchg
lret
lcall
lods
popa
jl
mov
jo
call
xchg
add
jle
pop
cmp
sub
add
add
jnp
js
sbb
push
arpl
dec
sbb
ret
int3
xchg
mov
sbb
notl
xor
jo
mov
test
and
movsb
aad
enter
jmp
xchg
repnz
xchg
repnz
mov
sbb
mov
cmp
dec
add
mov
and
mov
jg
mov
popf
xchg
push
adc
fwait
lds
je
mov
pop
out
test
mov
arpl
jb
sbb
call
mov
mov
sbb
xor
ret
lods
shrb
cld
add
adc
insb
leave
or
pop
cmp
push
mov
jb
inc
incl
loop
ret
mov
iret
sti
xor
outsl
pop
ljmp
inc
push
mov
jns
loope
mov
lods
jp
add
mov
inc
jno
or
cmc
inc
mov
jmp
or
inc
scas
mov
bound
andb
jnp
aaa
pop
xchg
xchg
sub
xchg
xor
mov
jo
xor
enter
dec
pop
cmpsl
lahf
bswap
adc
popl
mov
mov
decb
out
jge
test
push
arpl
push
arpl
dec
jmp
shr
push
xor
jle
or
mov
adc
and
js
jae
stos
push
mov
jae
leave
mov
faddl
popa
orb
sub
in
adc
xchg
test
mov
iret
sub
stos
dec
jo
add
sbb
dec
dec
inc
test
pusha
and
dec
pop
or
mov
inc
shrb
xchg
dec
jae
jl
push
pop
mov
push
xchg
aas
mov
daa
xor
jae
es
test
add
cli
test
push
clc
jae
ficomps
lahf
jle
scas
cli
mov
push
mov
movsl
rclb
xlat
cli
mov
aad
add
sbb
lock
xor
in
imul
mov
and
ds
mov
mov
fistpll
add
mov
xlat
clc
push
das
xchg
mov
in
roll
jae
sub
jb
mov
pusha
into
xchg
and
pop
jno
mov
cld
push
sarl
xor
sub
mov
pusha
in
repz
mov
jg
fwait
push
pop
cmp
and
pop
jns
cmp
jge
pop
xchg
pop
dec
out
xchg
push
jo
xchg
out
in
addr16
sub
pop
out
jo
into
addr16
mov
out
cmp
inc
in
cmc
fldenv
test
jg
sbb
sub
jle
cmp
push
xchg
xchg
cmc
or
inc
jbe
mov
in
insb
push
add
rorb
and
jae
xchg
dec
xchg
mov
sahf
pushf
mov
imul
pop
lea
outsb
sbb
xor
push
fidivrs
pop
sbb
dec
insl
inc
loopne
pop
inc
mov
mov
push
ja
insb
icebp
js
jle
fcompl
mov
hlt
mov
cltd
push
cmpsl
int3
addr16
pop
filds
jmp
jg
icebp
pop
cli
jbe
sub
jne
rol
jp
movsb
jne
stc
mov
jg
dec
test
fidivrl
sbb
add
sbb
stos
movsb
sti
mov
lds
adc
lret
mov
aad
pop
iret
je
into
cwtl
aaa
xchg
inc
mov
cmc
pop
xchg
push
cmc
insl
repnz
adc
push
push
adc
push
sbb
out
adc
jae
inc
je
rorl
jg
rol
mov
fcomps
stos
jmp
add
sar
add
add
stc
call
jg
nop
xlat
fiadds
jmp
fwait
cmp
pusha
add
ss
mov
push
pop
inc
imulb
adc
jmp
bound
mov
xchg
add
mov
mov
xchg
adc
jno
mov
dec
cmp
cmp
scas
imul
fcmovnb
aad
xchg
push
imul
out
or
loope
je
ja
loop
adc
or
mov
out
or
sbb
mov
mov
dec
repnz
dec
imul
outsb
mov
pop
push
ret
dec
mov
inc
cmp
mov
cmp
adc
je
dec
and
lea
mov
int3
imulb
fistpl
mov
loopne
or
rcrl
xlat
in
das
jl
je
add
mov
lds
jmp
andb
push
sti
pop
adc
xchg
or
inc
sbb
mov
push
out
mov
mov
shlb
adc
stc
cld
and
and
mov
adc
jae
jl
addr16
mov
aaa
jne
cltd
fistpll
and
push
mov
mov
stos
inc
pop
xchg
xchg
push
xchg
jge
jnp
test
push
jmp
test
movsl
movsl
shlb
cli
out
add
cmp
mov
movsl
ljmp
xor
add
mov
in
pop
xchg
loopne
jg
or
mov
inc
cmpl
in
popa
cmpsl
mov
jnp
repz
push
ret
push
and
jle
js
shlb
jge
repz
cwtl
and
or
cmp
push
push
mov
push
in
int
add
cmp
jae
xor
daa
push
arpl
sahf
add
in
mov
mov
out
jmp
adc
mov
xchg
lods
dec
clc
lcall
lret
mov
ret
inc
outsb
push
in
addr16
inc
push
jp
xlat
inc
mov
and
sub
push
das
mov
aas
push
loop
das
pop
adc
jge
cld
or
mov
daa
sub
lods
add
fwait
aas
setne
xor
add
mov
sbb
test
orl
jge
and
imul
pop
in
and
in
mov
ret
jg
dec
add
jl
hlt
push
fstpt
adc
push
data16
jno
sub
xchg
xchg
inc
cwtl
jno
cmp
int3
fmuls
mov
scas
hlt
add
mov
sub
inc
push
sti
loope
jo
jae
push
mov
pop
scas
pop
pop
cmp
mov
jnp
ret
dec
out
add
xor
mov
loope
cmp
xorb
clc
xchg
add
loope
mov
out
cmpsl
lahf
pop
lods
pop
cltd
sub
sub
jns
pop
adc
mov
sub
cmp
mov
push
ljmp
leave
mov
mov
xchg
mov
inc
ljmp
mov
inc
cmp
cmp
dec
stc
outsb
fnstsw
push
and
fsubrs
outsl
das
cmp
adc
sbb
adc
cmp
adc
in
aas
pop
pop
xchg
push
xor
in
out
cmp
pop
iret
pop
lea
out
lcall
jb
jbe
fldl
mov
dec
lods
lock
xchg
xorb
xchg
cmp
cmpsl
call
pop
fwait
stos
fwait
std
ljmp
jecxz
adc
jmp
aam
cmc
push
xchg
pop
inc
xor
sbbb
lds
sbb
jno
jl
les
push
and
or
cmp
cmp
pop
push
xchg
or
loopne
inc
jl
push
push
dec
iret
int3
ja
std
xor
cmp
and
sbb
ret
dec
rcl
rolb
in
negl
out
mov
jecxz
movsb
repnz
jg
les
mov
mov
add
pushf
mov
xchg
std
fs
hlt
jo
nop
pop
into
mov
pop
jne
sub
fadd
cmp
int3
sarl
mov
adc
mov
jg
fnstenv
and
mov
pop
push
lock
pusha
adc
cltd
leave
inc
movsl
xor
inc
and
cmc
arpl
fwait
das
pop
in
push
pop
adc
or
sub
push
xor
daa
call
or
shrb
jecxz
arpl
and
lods
lea
test
push
pop
mov
push
aad
int3
clc
ret
mov
push
loope
push
mov
cmp
add
in
movsl
mov
inc
repz
pushf
pop
or
xchg
into
mov
cwtl
push
push
pop
adc
push
in
dec
inc
loope
loop
mov
add
scas
cmp
aam
jae
iret
cmpsb
arpl
jbe
xchg
insb
push
mov
adc
pushf
test
fisttps
adc
jo
shll
es
jge
adc
das
jnp
cltd
lods
cmp
cmc
outsb
imul
mov
lods
push
pop
gs
fcoml
pop
or
mov
xor
stc
add
aas
inc
jecxz
sub
testl
xchg
lock
pop
nop
and
push
and
or
adc
xor
inc
lods
inc
inc
push
hlt
jno
aam
xchg
fmulp
daa
xlat
push
xchg
dec
into
pop
ror
and
fistl
sbbb
das
or
push
popa
stos
call
fisttps
sbb
sbb
iret
push
add
cwtl
movsb
repnz
clc
adc
xor
hlt
push
adc
repz
test
xlat
test
inc
sbb
mov
mov
lock
dec
fsub
mov
mov
xchg
xchg
cld
fstpl
roll
stos
mov
xchg
mov
lret
xor
movsb
push
pop
mov
and
daa
je
jne
mov
pop
mov
push
icebp
or
jmp
scas
pop
popa
and
arpl
lds
addl
inc
inc
aad
jecxz
mov
enter
bound
popa
mov
dec
cmpb
cmc
test
and
xchg
push
popa
lods
test
leave
push
in
in
add
dec
cld
push
adc
xchg
out
push
xchg
imul
xchg
call
das
ret
mov
leave
xor
or
test
dec
das
movsb
pop
fiadds
or
out
iret
and
test
sub
out
lea
in
sub
push
push
mov
stos
dec
add
lcall
gs
rcll
test
sarl
jne
jnp
xchg
pop
iret
cld
pop
iret
aam
outsl
data16
sbb
jbe
or
scas
lcall
inc
gs
push
int3
pop
icebp
pop
mov
bnd
sub
dec
movsl
jo
data16
xchg
or
test
ret
fwait
dec
pop
mov
xchg
sub
fsubrl
std
add
add
fstps
imul
adc
cmp
sbb
test
outsb
xchg
call
sbb
cmpsl
or
ss
in
mov
inc
cltd
cmp
dec
push
cmc
mov
loopne
arpl
movsb
mov
repz
leave
negb
cmc
xor
push
or
push
test
or
bound
add
lds
popa
sarb
or
or
or
test
mov
outsb
sbb
xlat
push
jle
ljmp
mov
js
adc
lods
cld
xchg
dec
pop
in
dec
push
add
imul
imul
or
rcrl
push
scas
enter
push
inc
add
or
mov
mov
insl
inc
dec
cmpsb
aad
hlt
mov
fisttps
out
push
fmul
inc
lods
mov
dec
mov
cwtl
pushf
jb
or
or
mov
push
subb
add
ret
imul
xor
push
add
insl
add
mov
cli
leave
push
movaps
test
push
js
dec
daa
mov
out
loope
xchg
jp
fwait
mov
xchg
inc
ret
out
outsb
loop
or
call
xchg
pop
push
dec
jo
inc
mov
movsb
mov
adc
aaa
adc
jb
mov
ja
and
cld
mov
adc
cld
mov
mov
jp
cli
push
cmc
stc
fwait
out
ljmp
dec
orl
xchg
push
add
sbb
shll
dec
nop
std
and
rcll
mov
lds
rorl
ljmp
sti
das
add
adc
push
frstor
pop
push
incb
mov
or
inc
ds
xchg
sub
sub
dec
sub
aad
nop
dec
lds
loop
ret
ss
mov
cli
es
es
push
push
mov
mov
xor
sub
test
jo
in
jo
push
jb
in
flds
adcl
in
test
jo
in
jo
push
jb
in
roll
orl
in
rolb
push
dec
jb
push
int
push
push
scas
pop
push
xorl
into
fmul
jmp
add
push
push
mulb
xchg
and
dec
and
mov
inc
inc
mov
fiaddl
call
clc
xchg
fisttpl
fmull
sub
in
and
nop
push
nop
inc
cs
inc
push
inc
push
mov
in
mov
in
jbe
in
jbe
xor
les
jns
push
jnp
push
aas
push
jle
mov
dec
cld
stc
dec
mov
dec
mov
mov
push
add
add
cmp
cltd
mov
cltd
mov
fwait
mov
into
mov
inc
in
inc
jl
inc
jl
jne
sbb
int3
dec
fmulp
mov
cli
mov
push
lock
lock
jge
into
xchg
rolb
sub
sub
dec
inc
jae
addr16
fcoml
fisttpll
enter
cmp
leave
cmp
pop
push
dec
out
xor
lods
lock
test
scas
test
enter
ret
dec
call
dec
lds
data16
addr16
jnp
mov
cmc
into
or
cmp
cmp
push
cmp
xchg
xchg
mov
xchg
jns
test
jle
aas
jle
dec
jg
data16
inc
xchg
outsb
inc
xchg
push
inc
cwtl
push
icebp
popf
pop
icebp
or
fdiv
enter
fnstsw
hlt
fidivrs
jae
cmc
jae
hlt
je
movsb
jb
movsb
xchg
frstor
mov
pop
insb
mov
clc
mov
stc
sbb
lret
leave
mov
rorl
lds
fnstsw
mov
xor
xlat
xor
dec
mov
xchg
test
xor
xlat
and
repz
stc
test
rcrl
shl
pop
aam
cmp
in
pop
out
int3
inc
out
movl
and
dec
push
mov
xchg
cmp
cmp
jns
or
pop
mov
pusha
push
lds
iret
sbb
movsl
sbb
inc
enter
pop
add
pop
clc
shrb
stc
rorb
rorl
mov
xchg
test
imul
pushf
jae
inc
nop
push
dec
fistps
xor
dec
stos
addb
dec
jge
into
scas
stos
xor
xor
loopne
ret
ret
adc
addl
lock
mov
repnz
and
jge
out
leave
imul
or
fiadds
xor
daa
sbb
jge
mov
push
xchg
lods
push
hlt
cltd
sbb
cli
xor
jg
lock
aaa
adcb
inc
outsb
ljmp
rol
inc
mov
or
jns
out
adc
mov
mov
lret
pop
in
push
into
jge
nop
ss
push
loop
aas
shll
sbb
push
mov
xchg
orl
jge
or
cmpsb
loop
iret
jbe
aad
add
xchg
sub
cmp
jge
add
mov
filds
iret
or
pop
cmp
icebp
push
loop
mov
mov
xlat
jg
xchg
sbb
dec
je
mov
xchg
pushf
pushf
ds
lea
sub
inc
cmpsl
sub
shll
cmp
xor
movsb
sahf
stos
xor
inc
lds
cmp
and
mov
xchg
icebp
popa
cli
es
es
jb
push
mov
mov
cmp
sub
test
jo
in
jo
pop
jno
in
loope
in
jo
in
jo
pop
jno
in
fiadds
jo
pop
jno
in
fildl
jo
push
jno
in
fadds
jo
push
jno
push
aad
push
push
mov
push
cmpl
into
jmp
into
jmp
add
pop
addr16
les
mulb
mov
and
push
and
mov
inc
dec
mov
loop
mov
imul
dec
pop
xor
lahf
pop
in
jb
nop
inc
ss
inc
push
inc
push
xchg
push
in
mov
in
jbe
cmp
jns
lds
push
jp
push
ds
xchg
clc
mov
clc
dec
add
dec
mov
dec
mov
nop
mov
push
repz
push
add
add
inc
push
into
cltd
xchg
into
cltd
mov
lcall
in
movl
jge
sbb
int3
push
mov
add
push
lock
push
lock
test
into
xchg
iret
xchg
incl
sub
sub
push
inc
jae
outsl
jae
fcompl
fmull
enter
cmp
enter
cmp
out
cmp
lods
outsl
out
lods
test
scas
test
shrb
test
test
movsb
dec
lds
lds
jecxz
mov
xorl
cmc
or
cmp
std
xchg
xchg
mov
popf
js
lea
jle
jle,pt
push
jle
xchg
adc
inc
and
inc
xchg
push
dec
xchg
push
icebp
movsl
push
icebp
adc
fdivr
fdivrl
rcr
cmp
out
hlt
jae
hlt
jae
cld
jae
movsb
jp
movsb
xchg
in
xchg
mov
cwtl
mov
mov
stos
mov
sbb
out
push
xchg
in
popa
push
je
int
inc
ret
imul
adc
cmp
popa
inc
addr16
mov
scas
pop
dec
in
cs
xchg
adc
sub
or
inc
lock
xor
or
dec
lock
pop
lock
add
add
dec
lock
pop
lock
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
