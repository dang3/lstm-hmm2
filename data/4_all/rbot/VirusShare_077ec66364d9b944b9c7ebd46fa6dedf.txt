xchg
fisubrs
outsb
dec
xchg
loop
or
add
test
pop
and
mov
dec
in
in
mov
cmpb
mov
ret
xchg
cmpsl
ljmp
xchg
icebp
adc
add
cmp
push
jl
shrl
pop
sahf
adc
cmp
aad
sub
cmp
push
pusha
stos
rorl
pushf
int
fs
das
add
cmc
iret
stc
icebp
push
xchg
in
out
mov
pusha
push
push
out
sub
clc
ss
fiadds
mov
fcomps
jmp
repz
or
dec
jbe
xchg
sub
inc
sbb
xor
popf
sub
add
adc
add
loop
mov
fdivs
jae
xor
and
imulb
cltd
xchg
roll
pop
mov
and
xchg
mov
mov
dec
repz
pop
sbbl
pop
sahf
push
cmpb
into
xor
mov
arpl
inc
in
es
sbb
fsubrl
fdivrs
adc
addl
test
jae
cmp
xlat
or
aaa
out
xchg
push
ljmp
add
call
loop
add
shlb
je
pop
sub
and
out
pop
out
std
fbld
ret
pop
je
jb
jmp
add
sub
pop
fistpll
into
xor
sbb
pusha
pop
addb
mov
pushf
cmp
sbb
xor
mov
mov
in
mov
test
inc
nop
jg
nop
daa
icebp
push
daa
lods
iret
popf
and
jbe
lret
jge
enter
mov
pop
pop
clc
sub
nop
sbb
xchg
pop
es
and
xor
enter
xchg
or
xchg
add
add
mov
mov
dec
mov
shl
loopne
jecxz
cwtl
jecxz
cmc
jno
xchg
dec
adc
jo
adc
jo
xchg
mov
inc
loopne
sbb
jns
repz
inc
std
sub
in
dec
xor
adc
dec
xchg
lret
testb
xor
add
aaa
in
xchg
in
dec
stc
ljmp
xchg
cmpsb
mov
jmp
adc
push
int
add
xchg
aam
inc
movsb
or
inc
jg
scas
pusha
repnz
xchg
xchg
mov
xchg
gs
mov
push
inc
xchg
shrb
loope
loopne
insb
push
notb
and
xchg
mov
or
rcrb
mov
fwait
xchg
push
xor
sub
adc
add
sbb
or
jle
push
lahf
mov
xchg
fdivl
pop
dec
dec
fidivl
xlat
cltd
xor
mov
hlt
and
lea
mov
movsl
frstor
in
pushf
cli
mov
pop
aaa
jg
clc
movsl
out
sub
cmp
ret
jl
xchg
ja
xlat
cmp
xchg
cmpsb
sub
data16
stos
and
in
stos
xor
je
adc
ret
pop
push
cmp
xchg
je
sbb
xchg
sti
fcomps
adc
sar
xchg
fcomps
fcomps
mov
push
cmp
push
aaa
mov
jmp
lock
lahf
lock
popa
jge
pop
pop
cmpb
mov
ss
jecxz
sub
sub
leave
jmp
cmpsb
dec
jnp
sub
movl
addr16
lahf
or
sbb
mov
cmp
cmp
insl
or
out
aas
or
push
arpl
jmp
pop
fisubl
scas
pushl
xchg
loopne
lods
out
sub
cmpsl
inc
cli
sti
fcomps
sahf
ja
sbbb
xor
lock
pop
leave
mov
fmull
jp
pushf
adc
push
push
mov
push
or
dec
xchg
dec
leave
pop
xchg
or
enter
arpl
jmp
adc
mov
arpl
mov
fisttps
push
addr16
push
repnz
inc
imul
lock
mov
in
jmp
jbe
int3
mov
jno
std
sub
movsb
pop
lret
inc
test
icebp
imul
sbb
inc
iret
mov
sub
push
sbb
mov
rolb
mov
or
sbb
sbb
inc
bound
rclb
cmp
fcoms
lock
cmp
mov
loopne
xor
sub
loopne
cli
mov
cli
shll
cs
mov
and
add
into
jb
sub
or
js
dec
push
rcrb
ret
jnp
shll
push
pop
mov
fdivs
jae
insb
ss
mov
mov
inc
lahf
repnz
cmp
ss
ret
or
lcall
clc
jle
jo
roll
call
pushf
jnp
push
fs
xchg
icebp
sbb
push
mov
in
hlt
jno
cmp
hlt
jg,pt
ljmp
push
fwait
ret
fwait
sbb
xor
and
mov
or
shrl
mov
stos
fildl
hlt
jg
test
enter
push
out
sbb
dec
sub
movsb
leave
or
cli
adc
push
popf
ret
mov
js
mov
jecxz
repnz
fnstsw
xchg
sahf
shrb
fcoms
shlb
outsl
imulb
into
es
sarl
fcmovbe
push
push
movsl
sub
loopne
movsl
cltd
push
mov
dec
loopne
movsb
subl
cld
mov
dec
pop
stos
and
jge
and
ja
xchg
mov
add
push
xchg
out
jno
ds
notb
enter
dec
xor
or
push
sbbl
leave
cmp
jb
inc
loopne
and
ja
ds
repz
roll
aad
inc
xchg
mov
iret
aaa
in
dec
fisttps
subl
in
jno
sbb
in
add
and
pop
or
push
and
pop
add
clc
pusha
lea
clc
push
pop
loop
jecxz
loope
in
arpl
cmpsb
insb
movsb
mov
fistl
test
pop
lea
jae
add
or
test
call
cmp
loop
jecxz
testb
adc
or
xor
push
add
push
rol
pop
stc
sar
mov
add
push
dec
pop
stc
test
cmp
push
add
test
cmc
push
add
pop
and
or
nop
dec
inc
push
pop
jg
and
cmp
test
cmc
push
add
pop
jl
push
push
add
pop
clc
jmp
pop
pop
adc
ficomps
or
adc
pop
imull
in
outsb
adc
push
push
or
pushf
pusha
push
and
mov
sub
ss
loop
jecxz
aaa
dec
inc
imulb
pushf
ja
add
inc
loop
mov
inc
bound
ficoms
shll
clc
mov
shr
test
je
clc
rol
xchg
stc
nop
push
add
pop
and
push
call
sbb
cwtl
orl
push
xchg
mov
mov
cmp
aad
fmulp
mov
test
enter
or
insb
pop
cmp
add
pop
push
mov
push
xor
pop
pop
nop
push
push
cmp
pop
pop
test
push
push
jg
push
add
pop
pop
xchg
cmc
push
mov
push
xchg
movsl
xchg
mov
pop
jo
push
add
nop
jnp
ja
jnp
rol
cmp
test
rol
sub
push
mov
pop
rol
clc
stc
dec
jne
push
call
rcl
xchg
xor
fisubs
dec
add
rcrb
add
les
push
jl
sar
pop
jmp
adc
fwait
shlb
sbb
cli
ret
or
shrb
add
daa
xor
mov
xor
out
jecxz
mov
push
pop
hlt
andb
ss
push
popa
sub
out
jmp
or
fnstenv
out
cmp
adc
ficompl
insb
pushf
mov
rolb
and
xchg
divl
out
xor
loopne
xchg
repz
or
rorb
aam
sub
pop
adc
jbe
and
dec
add
dec
fisubrl
imul
fldpi
add
cmpsb
das
insl
inc
inc
jbe
mov
sbb
popa
adc
lret
dec
jne
add
push
call
rorl
cmp
ret
push
test
in
xor
std
fdivrs
out
push
lods
lret
bound
aad
in
push
mov
mov
shrb
pop
icebp
add
push
or
test
sbb
les
in
push
add
fwait
and
adc
test
push
icebp
mov
inc
adc
and
shrb
inc
cmp
les
sbb
sub
mov
outsb
scas
movsl
push
jge
adc
jecxz
enter
pusha
xchg
or
inc
repnz
jmp
inc
xor
call
jl
jns
adc
ret
fsubs
xor
rcr
repz
pop
mov
in
jns
pop
add
fbld
xchg
add
adc
lock
ljmp
add
shr
nop
xchg
adcb
or
fstp
mov
inc
push
push
out
ficoml
dec
out
mov
mov
inc
mov
fdivrl
nop
dec
jle
dec
arpl
sub
movsl
dec
xchg
xor
aam
adc
mov
cmp
xchg
mov
lahf
sbb
js
sbb
xchg
repnz
xchg
mov
and
mov
std
push
popa
outsl
movsl
mov
mov
lods
sahf
adc
je
inc
mov
sbb
mov
faddl
push
movsl
sub
sub
jns
mov
xlat
mul
fisubrl
fisttpl
mov
adc
push
mov
lea
rolb
popf
pop
jbe
inc
add
pop
jnp
inc
icebp
daa
sub
add
shlb
push
stos
mov
cmp
mov
cs
add
jbe
cmpsb
mov
out
lret
xchg
jno
xor
xor
iret
push
mov
push
adc
push
adc
scas
mov
outsb
push
div
add
ds
test
loopne
cmp
movsb
lds
dec
cmp
jne
loop
push
jo
pop
insl
adc
adc
popl
and
insb
dec
std
stc
rclb
xchg
das
imul
sarl
fld
sbb
insl
cwtl
mov
cmp
xor
cli
or
shl
mov
adc
pop
push
es
add
cmp
cltd
addl
inc
rcll
dec
push
add
pop
loopne
sar
xchg
push
lahf
cmp
inc
in
fucom
jl
loope
and
xor
adc
js
mov
sbb
data16
arpl
add
stos
insb
pop
stos
dec
adc
xor
pop
in
fldcw
mov
leave
xchg
mov
insl
dec
ret
arpl
repnz
xchg
mov
jmp
into
not
adc
lcall
js
fisttpll
test
sti
rcl
and
jns
xor
and
push
outsb
dec
push
adc
andl
or
mov
inc
mov
jl
call
push
enter
insb
lods
and
or
mov
push
xchg
pop
pop
cmc
aaa
out
xor
lock
jecxz
sub
xchg
mov
shll
popa
push
fpatan
jbe
jno
xchg
mov
fwait
in
pop
mov
shlb
aam
inc
mov
jnp
pop
stc
mov
xor
xor
pop
out
and
insl
lds
jg
add
dec
and
fdiv
mov
out
inc
pusha
xchg
cmp
repnz
fisttps
cltd
ss
sub
int
push
mov
mov
imull
push
and
sahf
outsb
xor
out
xlat
or
and
mov
test
and
adc
cmpsb
lret
pop
pop
faddl
cmc
jo
cmpsl
pushf
add
repz
mov
xor
int
xchg
stc
and
or
mov
pop
push
and
mov
aad
push
jno
xlat
sti
daa
jge
lahf
iret
mov
mov
inc
lea
inc
jge
jne
jbe
hlt
pop
repnz
cmp
inc
push
jg
mov
dec
loope
cs
fwait
push
call
stc
lahf
test
out
loopne
lods
ss
inc
in
pop
and
lret
xlat
or
and
or
pop
sub
ficompl
xor
jo
pop
jle
insl
mov
shl
mov
std
in
jo
int3
push
xchg
inc
lahf
outsb
in
mov
mov
call
and
sub
sbb
outsl
push
adc
insb
jp
ljmp
je
adc
pop
addl
mov
outsl
bound
pop
push
mov
adc
jecxz
in
pop
xchg
xlat
inc
movsl
mov
fs
jge
fdivl
ja,pn
les
pop
xchg
push
jnp
sahf
xchg
mov
in
outsb
push
divl
leave
gs
aam
pop
inc
mov
inc
add
and
inc
xor
pop
fsubrl
jbe
es
xor
lret
inc
xorb
jae
pop
jno
adc
loop
in
mov
test
mov
imul
bound
outsb
dec
mov
das
cld
in
pop
jns
scas
dec
push
or
js
adc
loop
push
lret
inc
add
push
pop
and
out
inc
push
jb
stos
inc
push
stos
xor
fwait
and
fmull
mov
jo
sub
insb
xor
into
or
rorl
ljmp
movb
fwait
inc
jmp
jmp
scas
gs
insl
jns
pop
paddsb
xor
push
add
loop
sti
jne
add
cs
es
leave
cmc
arpl
inc
movsbl
sub
insl
jnp
or
and
add
mov
sbb
dec
test
daa
adc
or
adc
sbb
pop
aaa
pop
inc
imul
leave
insb
pusha
ficoml
and
mov
pop
and
rorl
js
movsb
jg
inc
test
out
aas
dec
daa
out
ja
sub
fnstenv
fsts
repnz
mov
in
push
ja
adc
sti
xchg
loope
sbb
adc
mov
mov
mov
jne
aad
xor
xor
es
loopne
mov
push
push
mov
mov
adc
xchg
add
add
scas
jp
div
sar
sbb
mov
and
mov
push
inc
jbe
pop
mov
mov
imull
dec
lods
mov
xorb
or
jno
fsubrs
lahf
sub
xchg
and
mov
in
pop
pop
rcl
aad
jo
addr16
adc
dec
jg
sti
mov
insb
mov
mov
mov
xor
shlb
fisttpl
cmpsl
push
push
jb
ret
mov
call
or
sbb
shl
loope
inc
sub
rol
inc
rcrb
int
xlat
leave
or
loopne
scas
ficoml
les
push
imul
js
push
lods
adc
fdivs
pop
sub
and
sub
mov
push
mov
add
xchg
lods
call
cld
pop
fisubrl
decb
outsb
pop
pop
nop
scas
sbb
pop
dec
sahf
shlb
xor
test
out
mov
inc
xor
loopne
imul
iret
movsl
fldcw
xor
mov
cld
pushf
jnp
or
ret
or
arpl
lcall
out
enter
sbb
clc
pushf
cmp
xchg
push
cmc
xchg
mov
ds
jge
and
add
inc
into
dec
or
xchg
mov
daa
xorps
aad
add
inc
inc
stos
dec
inc
sbb
leave
dec
xlat
mov
mov
arpl
test
and
out
dec
inc
popa
scas
aas
fnstsw
mov
outsb
inc
jle
inc
xchg
subl
in
pop
pop
mov
mov
cmp
bound
sub
int3
adc
dec
lods
out
fisubrs
fimuls
add
xor
and
and
dec
adc
lret
stos
fwait
mov
mov
ljmp
mov
push
in
std
popa
jno
push
xor
adc
add
icebp
jmp
or
push
dec
adc
cmp
dec
xor
in
imul
clc
orb
mov
add
xor
mov
lea
lds
dec
js
int3
push
iret
dec
andl
push
mov
loope
or
addb
mov
stos
push
cwtl
cmp
lods
pop
lock
insb
icebp
jno
xor
aad
fadd
sub
enter
or
jge
jl
push
xchg
and
iret
pop
fsubl
sub
dec
lds
mov
aad
sub
fisttps
pusha
lcall
sar
arpl
xor
mov
jb
mov
cmp
sub
fisttpl
mov
rolb
lea
imul
pop
adc
lret
stos
jae
cmpsb
fisttpll
ja,pn
imul
data16
xor
mov
rcrl
lock
scas
leave
test
orb
xor
clc
mov
shrl
or
and
mov
pop
mov
xchg
out
fadd
das
jo
ret
push
mov
enter
pop
jmp
popa
and
mov
pop
lcall
pop
mov
mov
call
test
push
inc
cmp
cmp
je
mov
aam
aam
int3
mov
mov
les
ret
jg
insb
sarl
cld
ds
pop
jno
clc
xor
jmp
daa
adc
jb
jmp
dec
push
jmp
pusha
inc
setl
test
xchg
cmp
mov
ja
mov
fstps
xchg
imul
mov
adc
sarl
addr16
mov
add
adc
mov
int
arpl
cmc
test
push
xchg
cmp
ljmp
and
jne
jl
xchg
fisttps
fnstsw
sub
jp
xor
clc
ds
sbb
enter
lcall
dec
test
jle
out
repz
or
fiadds
mov
adc
jmp
xchg
sub
mov
in
xlat
mov
mov
sbbb
sti
pop
mov
xchg
rcrl
add
fwait
divb
fsubs
dec
jecxz
rcll
push
pop
enter
dec
imul
mov
dec
scas
imul
xor
fbld
test
outsl
movsb
or
testl
inc
jbe
mov
cmpsl
fisubs
stos
lcall
cmpsl
mov
push
icebp
xchg
jl
sbb
push
int
cmp
cmp
xchg
sub
test
adc
enter
ret
cmp
hlt
mov
push
mov
dec
xor
add
fcmovnbe
js
xchg
cmp
adc
adc
dec
lret
sub
lds
mov
pop
jb
in
lret
aas
jecxz
mov
leave
cmp
mov
push
repz
sub
enter
xchg
in
cld
or
sbb
dec
stos
xchg
das
add
lret
fists
and
mov
pop
out
add
cmp
cmp
mov
jmp
cmp
lock
pop
jmp
dec
mov
cltd
xor
and
rcrb
or
mov
movl
dec
push
jmp
in
mov
mov
shll
and
scas
add
outsb
pop
cs
dec
mov
in
out
clc
sub
fnstenv
pop
jns
push
add
xor
insl
std
adc
scas
leave
enter
cmp
imul
dec
mov
sub
aaa
shll
leave
shlb
jmp
mov
lock
sub
std
out
dec
adc
loope
push
xlat
std
cmpsb
stc
add
mov
and
mov
push
push
dec
test
or
fisubs
adc
sbb
into
lods
jae
push
pushl
imul
dec
mov
adc
or
lock
mov
fadds
ljmp
pushf
fwait
jo
push
mov
ljmp
pop
mov
mov
jo
jl
pop
and
outsl
jb
fcomip
pushl
dec
jnp
jp
mov
andb
or
jmp
pop
ljmp
mov
repz
movb
cltd
mov
rcr
mov
sbb
sub
div
pop
jno
call
std
mov
clc
push
in
or
mov
pop
mov
fwait
test
lock
mov
ljmp
and
test
in
fadd
test
jmp
mov
icebp
dec
ret
mov
das
outsl
xorl
and
mov
mov
ficoms
cld
and
outsl
cmpsl
jmp
xor
repz
repnz
xorb
sbb
push
mov
sbb
push
xchg
gs
cmp
pushf
mov
stos
jg
adc
add
addr16
inc
ficompl
fnstcw
cmpb
aaa
push
and
scas
jle
rcrl
in
andps
xor
scas
push
jp
add
cld
test
fldln2
mov
xor
cs
adc
or
sbbb
jbe
and
addr16
mov
mov
jl
call
stc
leave
push
out
int3
movsb
es
das
stos
fsubl
dec
fisttpl
xor
push
and
inc
and
jns
lahf
mov
addr16
imul
sbb
mov
test
or
pop
adc
mov
jnp
pop
push
add
jecxz
pop
xor
dec
lret
cmpsb
mov
fldl
subb
int3
mov
fwait
jae
sub
mov
or
in
leave
cli
call
cmp
je
mov
in
xor
out
push
jae
fldenv
in
cmp
test
fnstenv
pop
mov
jns
or
dec
aam
int3
rol
dec
add
jmp
and
dec
arpl
xchg
and
cltd
xor
mov
mov
inc
sub
pop
push
out
das
sbb
test
xchg
mov
das
ficoms
jecxz
rorl
lahf
jb
jmp
fldenv
or
sbb
sarl
or
push
jecxz
sti
leave
jno
aas
movsb
push
ss
pop
dec
add
lret
into
mov
loope
insl
cmp
clc
pop
pop
push
aas
mov
cltd
mov
xchg
dec
jnp
sub
shl
sbb
test
jne
clc
inc
insl
aad
in
adc
insb
popf
and
dec
negb
aam
inc
sub
mov
test
dec
cwtl
and
scas
es
movsl
or
push
scas
inc
stc
inc
xchg
push
lods
test
xchg
cli
mulb
or
test
out
je
test
loopne
sub
inc
jge
cmp
mov
gs
pop
int3
ja
pop
cmp
dec
push
add
les
sbb
inc
cmp
adc
ja
mov
push
push
adc
push
push
jnp
sahf
add
cmp
mov
repnz
add
arpl
and
jle
inc
sub
popa
or
sub
sub
pop
sbb
movsl
adc
and
sub
imul
sub
es
lahf
call
push
dec
and
aad
adc
and
jo
add
js
push
fstl
mov
sti
mov
sti
sub
loop
add
xchg
sub
jecxz
shll
fisubs
roll
outsl
cmp
in
mov
test
femms
cli
orb
ja
sarb
inc
pop
and
pinsrw
push
hlt
or
mov
lods
jb
out
inc
in
aas
pop
lcall
cmp
in
mov
cs
or
sub
push
insl
imulb
jae
lea
fucomip
scas
ljmp
aas
aaa
sub
and
out
insb
mov
push
pop
push
xchg
rorb
std
mov
and
adcl
mov
jg
std
jecxz
push
pop
jne
jae
mov
mov
sbb
push
mov
cmp
mov
icebp
inc
dec
cmp
repz
leave
into
fs
orl
ljmp
jbe
hlt
sub
scas
xor
lret
cs
cmpsl
mov
pop
mov
mov
pop
dec
daa
dec
push
push
cmp
fidivrl
pop
in
leave
pop
sahf
mov
jb
lcall
dec
pusha
push
mov
ss
add
push
jl
sub
fucom
mov
pop
jge
mov
pop
outsl
iret
int3
sar
xlat
or
fistps
add
pop
xchg
jb
aam
mov
or
nop
cmp
dec
aas
call
call
stos
dec
mov
jae
xchg
ljmp
mov
cld
pop
or
cmp
push
dec
and
xchg
les
in
cmp
in
filds
mov
outsb
dec
aas
cmp
sub
les
jae
jb
jge
sbb
cmp
test
adc
xchg
movsb
mov
cld
xor
pop
push
jno
pop
clc
sbb
cmp
mov
dec
push
dec
xchg
sub
xchg
or
mov
xchg
fs
or
cmp
adc
pop
inc
mov
sub
lretw
jne
ret
push
cmp
or
push
cmpb
test
out
in
jb
push
jmp
mov
jnp
mov
mov
cmpsb
popf
push
jns
les
out
mov
dec
xchg
xchg
xchg
movsl
push
mov
jns
adc
mov
add
enter
rcrl
arpl
shll
cs
inc
test
or
and
jmp
nop
mov
mov
pop
cmc
and
and
and
push
push
into
sbb
mov
in
or
ss
push
mov
into
cmc
in
icebp
jno
rcrb
or
insb
sbb
fsub
push
out
out
fisttpll
sti
fistl
enter
fs
rcr
fs
scas
pop
mov
pop
enter
out
lahf
xchg
mov
add
mov
sub
jns
jns
jle
cmp
popa
bound
andb
adc
mov
inc
push
gs
push
icebp
shll
sub
stos
cmp
nop
push
repz
or
cmp
jns
jno
sbb
adc
xchg
inc
scas
or
movsl
inc
dec
cmp
xchg
adc
add
hlt
jae
das
insb
fdivs
fildl
mov
aaa
push
lcall
jl
inc
pop
mov
lock
std
xor
and
outsl
inc
mov
inc
dec
inc
pop
notb
fidivrl
in
sar
arpl
adc
mov
ds
nop
and
scas
mov
inc
mov
test
rolb
push
int
shrb
xchg
dec
test
fmuls
outsb
jo
or
aaa
mov
pop
sub
stc
mov
add
mov
add
bnd
xor
jbe
popf
imul
lock
add
push
shlb
roll
sbb
js
pusha
lcall
out
fiadds
pushf
fidivrs
cmp
jno
mov
iret
lret
jle
jo
fs
jo
mov
out
xor
cmpsb
lods
add
out
jnp
or
push
std
mov
sbb
repnz
jg
popa
jbe
mov
mov
cmp
imul
mov
xor
ret
sbb
push
fisttpll
sbb
or
push
lock
cld
push
xchg
daa
imul
stos
lods
jb
xchg
repz
repz
les
and
xor
sbb
xor
dec
mov
les
loopne
add
xchg
imul
testl
fsubrl
pushf
test
repnz
ret
shrl
ror
aaa
andl
mov
and
add
iret
bound
mov
lock
push
mov
setb
clc
loop
arpl
loop
dec
or
arpl
ret
popa
jl
mov
bound
jmp
pop
xchg
sbb
pop
jg
cltd
test
add
xor
test
mov
pop
xchg
push
xorb
mov
lods
xor
ja
sub
xchg
cltd
adcb
and
mov
sahf
adc
add
jae
lret
jns
xor
mov
mov
pop
insl
js
xchg
out
jbe
pop
sub
pop
mov
or
dec
ljmp
out
jae
push
or
inc
movsb
and
movsl
fnstenv
lods
decb
leave
daa
fwait
mov
add
jmp
push
xlat
push
sub
rolb
insl
movsb
out
lea
pop
cmp
lahf
inc
mov
and
xor
out
adcl
testb
or
frstor
andb
mov
jns
popf
mov
js
arpl
jo
pusha
jnp
lock
mov
or
popf
out
pop
sahf
jns
add
push
push
sub
adc
lret
add
mov
xchg
adc
add
adc
outsl
femms
mov
scas
ret
and
inc
and
pop
paddsb
mov
repnz
adcl
xlat
std
fsub
jp
inc
or
xor
fadd
ds
mov
add
stos
subb
pop
and
lds
mov
in
mov
out
cmpsb
push
test
xchg
sti
pop
inc
pusha
andl
mov
imul
push
push
outsl
sbb
push
sbb
test
hlt
sub
xchg
fs
mov
push
add
or
in
test
popa
sub
test
lock
xchg
pop
xchg
pushf
rdpmc
inc
push
push
push
lods
jne
sub
jns
mov
sbb
cmpsb
adc
jp
cwtl
xchg
and
sbb
mov
dec
add
jns
xchg
adc
loop
cwtl
mov
insl
mov
shll
bound
jmp
push
dec
add
idivl
arpl
andb
inc
mov
gs
cli
xor
test
xchg
dec
cmp
pop
pop
addr16
das
mov
inc
mov
movsl
cmpsl
pop
aas
cmp
adc
mov
aas
insb
xchg
addr16
xchg
and
push
pop
nopl
xlat
jb
cmpl
jno
adc
adcl
pusha
rcll
call
test
push
mov
mov
movsb
in
fst
pop
cli
decl
sbb
and
mov
sbb
dec
pop
and
popf
xchg
cmp
jae
in
pop
inc
lock
xlat
out
mov
lcall
or
fistps
mov
icebp
dec
jmp
orl
push
rcll
dec
fs
int
cwtl
adc
fisubs
int
repz
push
insl
mov
jmp
adc
out
movsb
cmp
rcr
adc
adc
push
rcrl
inc
lahf
das
inc
or
cli
dec
ret
mov
push
into
shlb
xor
out
sbb
sbb
sar
int
lahf
lock
lods
sub
sub
cwtl
outsb
ret
movsl
lret
test
mov
mov
mov
fwait
les
cmp
sarb
je
loope
mov
add
or
mov
mov
mov
shlb
sahf
sbb
dec
clc
push
xchg
loope
dec
jecxz
cltd
cmp
sbb
bnd
add
push
xor
fisttpll
int3
xchg
nop
or
fcoms
mov
mov
or
outsb
jnp
movsl
jge
icebp
sub
cmc
inc
cwtl
or
or
repz
pop
fcomp
std
iret
orl
sub
lret
cmp
test
loope
mov
or
hlt
xchg
out
out
pop
pusha
pop
movsl
and
or
xor
jne
fucomip
lea
push
or
adc
in
or
lea
push
and
iret
add
sti
stc
mov
pop
fisubrl
mov
mov
aaa
inc
std
xchg
loope
mov
mov
out
mov
frstor
mov
xchg
cmpsl
inc
out
push
xor
cs
jecxz
jmp
shrb
sbb
sub
jno
pop
rcrb
or
loopne
jl
pop
fsubs
push
mov
xlat
xlat
xchg
repnz
leave
lods
in
adc
lds
and
dec
clc
test
cmp
mov
xchg
arpl
or
sub
dec
push
sbb
jae
scas
mov
adc
push
in
fisubrs
pusha
add
mov
loopne
mov
adc
inc
fsubr
lods
sub
and
xor
mov
cmpsl
adc
sti
and
xchg
das
and
cmp
mov
mov
cmp
repnz
sbb
sbb
sbb
push
mov
xchg
pop
mov
cmp
sub
and
mov
mov
mov
roll
adcl
or
pop
int3
and
adc
push
push
loop
fxtract
adc
js
add
lods
sahf
int3
test
xor
cltd
in
jns
jns
cmp
or
inc
mov
push
or
scas
sub
bound
dec
outsl
lcall
mov
inc
inc
push
ja
in
int3
lock
add
jo
clc
into
mov
outsb
incl
lea
lahf
pop
es
sbb
pop
out
jno
scas
mov
loope
cs
jb
mov
dec
rcrb
xchg
faddl
fdivrl
add
push
mov
dec
sbb
rcr
jo
js
lock
pop
xor
int
addr16
pop
and
lods
jp
jmp
adc
push
cld
iret
cmp
pop
lods
xchg
stc
mov
and
insb
pushl
test
rorb
mov
or
repnz
sbb
push
mov
por
test
in
push
pop
fwait
mov
jecxz
cmp
rcrl
mov
popf
fsubr
sub
and
jmp
cmp
bound
insb
pop
out
aad
enter
mov
sub
dec
ret
and
adc
inc
jl
fistl
mov
push
popf
xor
mov
in
xorl
mov
lods
ss
frstor
nop
push
out
cmp
adc
sbb
sub
mov
xor
xor
cld
or
jnp
and
stos
enter
je
and
sub
adc
into
cmp
fcmove
mov
enter
cmp
popf
sbb
mov
in
decb
data16
fildl
int
sbb
pop
add
das
fdivp
sbb
fwait
test
mov
inc
bound
mov
and
dec
pop
xchg
mov
jp
arpl
ret
fldcw
add
jae
movsb
xor
fs
xchg
inc
movsb
aad
iret
jecxz
cmpsb
adc
insb
scas
push
inc
lock
cld
stos
imul
lahf
cmpsl
mov
in
sub
mov
popf
icebp
push
xchg
out
popf
push
fisubrl
mov
insb
fildll
aas
ljmp
in
insb
hlt
xchg
jbe
jg
repz
inc
fisubrl
mov
jmp
push
add
mov
adc
cli
and
jnp
cmc
fwait
cmc
insl
mov
jae
shlb
mov
scas
shrb
inc
andl
aam
and
sbb
xchg
or
cmc
ljmp
push
inc
out
fadds
pusha
mov
or
repnz
popa
jb
cwtd
arpl
cltd
cld
sbb
mov
push
ret
mov
cmpsl
pop
fstp
test
inc
xchg
adc
repnz
aas
jnp
mov
cwtl
or
pop
scas
or
push
jge
sub
mov
int
pop
xchg
jg
and
sbb
cli
or
or
sbb
cmp
je
cmpsb
je
lds
nop
push
enter
fisubrs
out
popa
jp
imul
pop
ds
xchg
xchg
xchg
push
xor
js
fwait
xor
sbb
jnp
jecxz
nop
les
mov
dec
test
pop
cmc
dec
call
xchg
mov
ret
sub
cli
inc
push
movsb
sti
cmpsb
push
jge
loopne
aaa
adc
push
jne
outsb
arpl
add
outsl
cmp
out
clc
add
add
xchg
cmc
add
add
clc
or
into
jae
in
dec
adc
fcmovbe
mov
jne
js
loope
dec
and
scas
or
push
pop
cmp
out
inc
push
daa
rcr
jp
mov
cmp
jb
ret
pop
sbb
xchg
sbb
sahf
orl
jg
mov
sbb
mov
icebp
add
outsl
dec
sub
inc
fnstcw
inc
mov
testb
clc
pop
and
xorb
inc
test
xchg
lcall
xlat
jg
pop
jmp
scas
xchg
pop
xchg
int
jnp
pop
pop
add
push
and
push
adc
jae
mov
or
dec
jno
or
ss
add
loope
inc
sub
mov
dec
xorb
mov
cmpsb
test
cmp
jb
mov
mov
in
out
ss
add
sahf
shl
mov
jb
cwtl
ss
pushf
lock
pushf
lods
xchg
cmp
negb
cmc
adcl
rorb
loopne
pop
cwtl
test
mov
sub
and
imul
icebp
adc
adc
sbb
pop
jmp
mov
mov
in
lods
xor
pop
cmp
sbb
cmp
xor
aas
je
xor
int
mov
sti
and
into
test
add
sbb
push
ljmp
in
pop
and
in
mov
orb
or
mov
xchg
scas
vpcmpeqd
out
pop
cmp
lahf
mov
sbb
lods
sbb
mov
imul
cs
lods
mov
dec
out
mov
pop
fists
sbb
mov
nop
loopne
out
rolb
or
add
jmp
push
addr16
mov
in
rolb
aad
repnz
mov
negl
mov
mov
jle
out
push
xchg
fstpt
clc
cmpsl
dec
adcb
les
insl
cs
and
fcomi
frstor
jge
or
data16
lcall
arpl
mov
scas
pop
mov
outsb
sbb
sti
add
scas
clc
je
sbbb
stos
xchg
and
xor
xchg
in
lods
mov
xor
mov
inc
int3
mov
pop
dec
or
nop
and
int3
int3
cli
mov
in
pop
addl
push
arpl
filds
pop
jb
or
in
and
into
lods
adc
cmp
or
or
test
fadd
mov
cmp
ret
daa
mov
sti
andb
popa
inc
out
dec
sbb
aaa
dec
loopne
and
and
dec
in
xor
sarl
and
adc
loopne
and
push
cltd
sbb
ja
test
cmp
fsubr
sarl
cmpsb
sbb
lock
and
rclb
sbb
push
fisubrl
inc
adcb
mov
lret
mov
xchg
mov
jb
out
scas
adc
push
jg
movsl
sbb
leave
int
stc
xchg
xchg
scas
push
jp
and
addr16
xor
lret
ds
xor
jp
adc
cwtl
fadd
aaa
push
ret
mov
in
mov
sbb
xlat
mov
xchg
int
dec
imul
jo
adc
jae
cltd
test
scas
inc
or
xor
xchg
mov
mov
and
and
pop
xor
testb
pop
inc
icebp
in
pop
orb
pusha
adc
insb
flds
aaa
jns
pop
mov
mov
call
in
sbb
cmp
aad
push
pop
ss
push
xchg
add
xchg
push
sbb
cltd
jg
dec
cmp
call
popf
or
popf
inc
loopne
push
pushf
jecxz
cli
jge
jbe
pop
insl
sar
lods
jb
clc
outsb
jle
adc
mov
imul
jle
imul
adc
inc
stos
cld
in
sti
outsb
lret
and
shrl
lods
enter
ss
stos
cmp
lret
and
add
roll
xor
lret
jmp
cmpl
bound
clc
fstps
push
daa
and
pop
push
cmp
ret
jg
jno
into
mov
jge
sub
in
inc
mov
stos
ss
sti
icebp
pop
pop
or
shlb
or
rsqrtps
mov
sti
popf
jp
xor
inc
pusha
les
push
sbb
aad
jno
cwtl
xchg
mov
mov
inc
rcrb
repnz
add
ljmp
dec
popf
push
bound
mov
dec
jbe
imul
imul
mov
pop
dec
imul
loopne
cwtl
xchg
popf
or
dec
jle
je
rorb
imul
addl
jle
cmp
or
lahf
jmp
imul
xlat
sbb
mov
or
mov
clc
mov
cmp
stos
xchg
shll
mov
pop
pop
leave
pop
incb
mov
popf
xchg
push
lds
je
and
cmp
and
fiadds
scas
cmp
jno
mov
movsl
leave
cmpsl
xchg
int
shll
and
icebp
jns
repz
stc
clc
loop
rolb
xchg
testb
add
inc
pushf
jne
cmp
fneni(8087
jge
jg
std
pop
add
shr
xchg
xchg
fsts
rcll
es
mov
fs
push
jmp
dec
mov
cmp
mov
jl
add
or
setge
pop
xor
cltd
sarl
outsl
mov
push
test
scas
push
subl
jo
pushf
rorb
test
xchg
push
scas
test
xor
jecxz
lcall
pop
aam
arpl
rorb
das
pop
scas
aam
and
xchg
sub
sbb
je
mov
aam
push
loop
int
test
cwtl
adc
rcrl
mov
in
push
xchg
xchg
arpl
test
mov
out
xor
lock
sarb
mov
shll
cmp
call
les
sbb
ss
insl
shrb
je
jg
loope
cmc
add
movsb
test
adc
rcr
jecxz
ret
addr16
pusha
jmp
inc
imul
xor
fisubl
loopne
loop
inc
leave
and
fistpl
inc
lahf
cmp
into
pop
es
and
pop
mov
inc
adc
and
sub
lds
aad
pop
dec
aas
jge
icebp
sahf
and
mov
inc
int
aas
pop
mov
push
lahf
xor
add
fucom
divb
mov
cwtl
aas
aad
mov
or
jl
push
sub
mov
or
jmp
je
ficompl
sbb
push
push
adc
lahf
test
mov
cmp
and
mov
inc
cli
jnp
and
cmp
jle
mov
sbb
cli
pop
fnstsw
js
and
inc
sub
jp
cmp
fdivrl
xchg
lds
cmp
adc
lret
insb
lahf
xor
sub
fsubrs
decb
cwtl
stc
fstps
inc
xchg
fsubs
inc
cli
add
cwtl
popa
pushf
or
cli
out
dec
sbb
sahf
jbe
inc
rcrb
cmpsb
push
and
add
adc
xorl
push
fmull
stos
fadds
cwtl
and
dec
add
div
mov
in
imul
or
cmc
test
mov
pop
inc
lahf
lea
xchg
call
sahf
sub
sbb
mov
cmp
add
mov
xchg
adc
sbb
mov
mov
in
enter
icebp
and
mov
adc
enter
shlb
jge
nop
sbb
lret
loope
or
pop
sub
dec
mov
xchg
pop
adcl
fiadds
outsl
sarl
test
enter
outsl
xchg
fsubl
ljmp
mov
pop
fisttps
mov
push
test
dec
repnz
adc
daa
and
incb
pop
icebp
stos
or
jb
jbe
inc
popf
clc
dec
loopne
cli
jmp
jg
mov
jnp
dec
cmp
pop
cmp
pushf
inc
nop
rol
mov
push
outsb
jmp
mov
sbb
xor
shll
stos
and
in
in
shl
imul
and
and
add
ds
add
pop
pushf
pop
shll
adc
or
shl
sbb
or
mov
inc
mov
je
dec
addb
sbb
and
icebp
and
out
fsubs
pop
adcb
movl
test
xchg
jae
mov
xchg
test
and
and
and
xchg
xchg
mov
cwtl
dec
jmp
jns
imul
cmpl
xchg
jns
mov
xlat
pop
lahf
lock
inc
add
call
mov
mov
pop
je
pop
push
mov
andl
in
mov
pushf
inc
sub
negl
sbb
popa
mov
mov
sub
jle
cld
sub
ss
add
je
xchg
popa
mov
lea
mov
enter
xlat
push
jno
sti
push
mov
mov
stc
push
outsl
js
cmp
mov
bound
adc
mov
in
pop
sti
inc
out
shlb
das
stc
in
sbb
jo
outsb
sbb
xor
imul
add
push
fcmovne
mov
popa
jno
out
arpl
loopne
or
int3
push
push
aad
inc
out
fdivs
add
ficomps
cmp
insl
xchg
mov
mov
inc
ja
lods
jmp
adcb
mov
cltd
fchs
mov
mov
loope
repz
cmp
rclb
pushf
fistps
sbb
leave
lret
xchg
leave
sahf
sbb
adc
scas
cmp
in
jnp
lret
mov
imul
aaa
or
pextrw
sub
push
push
or
daa
popa
mov
and
push
lea
test
cmp
push
js
jl
repz
sub
ret
cmpsb
dec
lods
sbbb
pop
adc
out
in
mov
cmpb
lods
into
cltd
xorl
int3
scas
push
push
inc
mov
cmp
fadd
pause
cli
fldenv
into
ret
and
andl
add
xlat
mov
mov
lods
fwait
call
sub
bound
movsb
xchg
mov
addr16
adc
mov
xchg
pop
aad
and
stos
lret
lcall
in
xor
mov
aam
dec
mov
cmc
std
inc
xor
aam
mov
ljmp
jne
pop
adc
adc
mov
gs
insb
sub
cmp
jno
add
subl
aad
addr16
or
or
push
adc
xor
out
pop
pop
or
test
pop
aad
sub
ja
int3
xor
call
xorb
xchg
cmpsl
cmp
ds
mov
mov
sub
jno
pop
mov
xchg
test
xlat
push
push
jge
jnp
pop
shl
out
popa
sub
sub
cmpb
or
pushf
pop
sbb
cmp
mov
and
mov
adc
addb
insl
mov
scas
insb
cmp
adc
pop
mov
mov
data16
inc
aaa
pushf
aam
test
aam
add
sbb
pop
cmp
adc
insb
scas
rorb
call
in
insb
mov
mov
inc
xchg
jg
fwait
les
insl
add
add
jg
sub
subps
sbb
mov
sbb
and
push
adcb
xchg
cmpsl
rorb
xchg
jae
mov
hlt
xchg
pop
lds
ret
dec
xor
jb
and
mov
sub
cmpsl
into
cmc
add
mov
pop
push
and
test
jmp
jno
and
xchg
jg
adcb
test
push
out
adc
or
add
jne
lret
jg
sbbb
lods
fwait
xor
ss
fcmovnb
xchg
enter
sahf
daa
fxch
cmp
gs
xchg
or
daa
rorl
ret
out
cmp
out
addb
daa
ja
or
lods
jmp
dec
lods
sub
loope
mov
and
push
pusha
lock
inc
out
jne
jecxz
lahf
dec
jne
rcll
gs
add
sbb
dec
push
dec
movsb
in
add
nop
xchg
add
dec
add
mov
cwtl
add
cmp
in
or
cltd
iret
fwait
dec
sbb
shll
adc
ret
xchg
pop
xor
jmp
bnd
xchg
js
dec
scas
movsl
push
mov
mov
xor
test
dec
pop
inc
push
add
out
shlb
rorl
mov
stc
jns
mov
jns
or
lea
cld
cs
shll
les
mov
inc
aaa
push
leave
mov
mov
push
imul
lret
or
dec
in
incl
adc
adc
inc
xor
adc
dec
mov
sbb
icebp
adc
mov
jbe
cwtl
push
inc
xor
mov
cmp
loope
leave
dec
mov
data16
ret
or
out
lods
sbbl
mov
clc
jb
fcompl
push
inc
pop
cwtl
mov
cltd
mov
cmp
outsl
push
push
mov
imul
dec
fnstsw
xchg
dec
divl
repnz
mov
gs
loope
cmc
lcall
xor
mov
or
xchg
cli
cmpsl
cmp
loop
insb
mov
leave
fdivrp
lds
lods
jno
lret
loopne
imul
nop
arpl
adc
add
push
sbb
fsubs
fisubrs
xlat
imul
aad
adc
shll
inc
push
sti
mov
mov
pop
jmp
addr16
adc
lods
std
mov
cmp
mov
cmp
mov
js
sbb
sub
inc
pusha
aad
sbb
ja
es
lcall
stos
ljmp
adc
fisubs
das
fsts
leave
adc
jmp
mov
test
xor
jg
in
mov
adc
mov
lods
mov
lahf
jnp
xchg
sti
ret
dec
and
xlat
bound
subb
xor
data16
push
adc
jp
jnp
in
or
cmc
in
jno
mov
cmpsb
pop
lcall
mov
in
repnz
repz
fwait
jp
into
cmc
mov
loop
pop
test
push
jmp
mov
sbb
xchg
cmp
out
inc
mov
cltd
ror
js
dec
fcmovne
dec
int3
fisttpl
sub
cmp
xor
push
mov
lods
or
repnz
sub
sub
sub
jbe
lcall
push
xchg
pop
adc
xchg
ret
notb
mov
cmp
scas
dec
add
mov
or
repz
jo
add
dec
fcoms
cmp
or
lods
nop
jns
xor
cmc
xchg
insl
rolb
sub
xor
inc
jge
or
or
xchg
fprem1
push
std
aad
add
sbb
adc
adc
jl
or
pop
rorl
mov
or
pop
mov
scas
cltd
mov
int3
cmp
out
and
mov
dec
pop
testl
shlb
mov
loop
shlb
xchg
push
fdivrs
dec
and
jne
stos
or
jo
jbe
rcrb
jb
cli
sbb
mov
scas
fsubrs
aaa
inc
sbb
fistpll
cld
jae
jl
dec
jo
dec
ljmp
js
jns
pop
dec
sub
mov
xor
js
outsl
inc
mov
outsl
pop
mov
adc
aaa
xchg
sub
mov
sar
sub
ret
rcrl
xor
cwtl
insb
rcrb
test
pushf
xlat
jecxz
cwtl
icebp
cwtl
or
cmpsl
sti
push
jae
adc
and
mov
loope
dec
lahf
cmpl
and
inc
mov
loopne
xchg
mov
lea
jg
hlt
fcompl
dec
ja
int3
fimuls
xchg
add
aad
mov
cmp
and
mov
imul
arpl
int3
cmp
sbb
js
lock
xor
xor
add
dec
fnsave
movsl
cmp
lods
fsts
jne
fadd
sub
ja
int3
mov
addr16
cs
outsl
and
adc
pop
cld
push
arpl
adc
iret
icebp
ret
fcompl
xor
sbb
sbb
mov
fcomps
insl
aam
in
aas
xorb
push
rcr
pop
cmp
add
adcl
dec
ret
mov
pop
jbe
sub
lods
jbe
and
insb
or
xchg
mov
in
adc
imul
and
xor
fcomi
push
dec
cmpsl
insl
test
or
ljmp
xchg
mov
mov
pop
mov
popf
rcr
or
fnsave
out
sub
pushf
push
std
cwtl
xchg
mov
adcb
rcl
pop
cmp
mov
int3
ja
into
xorb
fwait
mov
das
lahf
notb
cmpsl
inc
push
std
clc
cmpsl
ret
add
or
mov
mulb
pop
frstor
pushf
cmp
mov
xchg
mov
lock
insl
or
cmp
jns
adc
icebp
fbstp
cmp
lret
mov
inc
cmc
nop
shl
cmovno
out
pushf
mov
mov
xor
rcl
jmp
sbb
daa
mov
or
int
jg
mov
in
clc
add
dec
push
mov
pop
test
add
sbb
mov
mov
jae
jbe
jnp
pop
gs
les
mov
inc
pop
or
and
test
loopne
pop
test
pop
hlt
mov
mov
lcall
inc
add
jne
bound
rolb
into
jno
daa
ja
aaa
mov
les
les
loopne
mov
pop
jl
das
jl
js
sbb
mov
lret
enter
and
outsl
or
inc
enter
in
ret
imul
movsl
mov
add
jb
mov
int3
mov
into
imul
in
aam
sti
fadd
and
mov
cltd
jle
adc
xor
andl
out
push
stos
jmp
xchg
inc
push
xor
push
out
ja
movsl
into
sub
aad
mov
and
ss
int
cmc
or
mov
nop
mov
mov
jg
aas
std
pop
dec
fdivrl
outsb
dec
cmp
xchg
add
mov
mov
inc
and
dec
stc
push
adc
cmp
shlb
in
jb
cwtl
out
mov
inc
cmp
or
bound
dec
inc
data16
mov
mov
sub
outsl
mov
add
cmc
lds
push
sub
xchg
scas
add
stc
divb
cwtl
ss
insb
sbb
sub
xlat
aaa
lds
push
xor
jg
mov
in
test
pop
bound
mov
mov
das
inc
shlb
fistl
inc
test
cmp
gs
xchg
out
adc
lods
pop
iret
xchg
scas
cs
js
icebp
insl
push
or
and
pop
incb
popa
int3
cmpsl
jle
or
out
mov
xchg
sbbb
into
psubq
jbe
cs
add
in
rorl
or
push
call
hlt
mov
inc
jnp
dec
adc
or
sub
and
push
adc
and
les
sbb
add
into
int3
sbb
push
lods
lods
mov
out
lods
or
xchg
and
idivl
cmp
adc
ds
sub
inc
mov
mov
jmp
lods
mov
mov
imull
or
cmp
dec
enter
nop
hlt
adc
push
popa
mov
notb
cmpsl
xor
inc
xchg
cmp
std
sub
ret
stos
or
sarl
mov
dec
js
mov
jo
clc
jg
shlb
imull
lcall
push
dec
scas
test
sub
mov
vshufps
ja
sub
sbb
sub
lods
dec
xor
push
je
sbb
push
in
mov
mov
cmp
and
mov
cs
orl
pop
mov
cwtl
pop
dec
and
or
adc
add
jg
pop
les
dec
cmp
in
mov
out
dec
ds
test
icebp
mov
bound
push
push
movsb
mov
sub
and
insl
int3
inc
xchg
sub
push
roll
cwtl
jp
mov
and
insl
int
lods
movsl
mov
mov
inc
jmp
mov
mov
cld
sub
sbb
xor
test
pop
mov
mov
into
mov
pop
loop
adc
sbb
mov
xor
cmp
mov
xchg
cmp
outsb
loopne
inc
daa
pop
out
stos
sub
rorl
pusha
xor
or
inc
mov
test
stos
jmp
mov
add
inc
mov
test
inc
imul
xor
xor
add
in
orb
test
xchg
out
dec
mov
mov
jnp
pop
decl
mov
lds
push
push
sbb
add
mov
jns,pn
aad
iret
pusha
mov
movsl
es
iret
mov
cmp
ret
in
test
jbe
mov
inc
or
dec
dec
pop
repnz
insl
jbe
sub
mov
lods
nop
and
xchg
repz
jae
mov
gs
or
aad
sar
xor
out
sbb
pop
daa
add
mov
mov
adc
mov
mov
rcll
pop
iret
js
stc
xor
inc
into
xlat
test
pushf
imul
mov
and
pop
sbb
in
insb
add
push
xchg
dec
inc
nop
adc
push
movsb
je
cld
cld
xchg
enter
sub
roll
inc
je
mov
mov
in
pop
push
daa
jge
imul
mov
mulb
cwtl
inc
add
jae
in
mov
sub
std
adcb
add
cmp
fdivr
mov
or
ds
scas
or
cmp
sub
mov
testb
pop
addr16
or
ret
shlb
test
mov
sbb
mov
pop
lods
loope
push
stc
out
push
jp
pop
or
dec
or
ds
inc
stc
and
xchg
and
xorb
lea
popa
sub
cmp
int
fbstp
dec
out
or
mov
fsubrs
jmp
sub
stc
test
lock
push
dec
cmp
push
sti
inc
mov
cmp
xor
filds
lods
xor
mov
push
cs
inc
sub
lea
in
and
and
xchg
adc
pop
xchg
neg
repz
in
jns
lock
fcomps
inc
imul
adc
outsl
ds
sub
scas
leave
pop
inc
push
loopne
pop
and
xlat
mov
imul
ret
adc
inc
jle
cmpsl
xchg
jecxz
xor
lods
adc
je
ljmp
loope
jnp
jl
aad
pop
dec
push
sahf
xchg
shrl
add
cmp
inc
out
or
mov
pop
cmp
data16
std
lret
and
sti
outsl
shrl
imul
fdivl
cmpsb
mov
mov
xchg
inc
xchg
mov
test
arpl
shlb
fcmovnbe
dec
shll
mov
xchg
jg
js
fsub
imul
mov
mov
and
and
jne
lds
jge
add
std
cmp
pusha
cmp
xor
fucomi
push
fisubrs
movl
int3
int
mov
cmpl
add
push
xchg
jmp
fstpl
sbb
xlat
mov
aad
adc
mov
mov
std
jp
mov
and
insl
stos
pop
pop
pushf
mov
mov
orb
pop
pop
js
stos
repnz
xor
sbb
mov
fisttps
inc
loopne
repnz
lcall
dec
mov
cli
jb
jb
mov
sbb
jbe
nop
dec
jl
filds
xchg
shlb
les
stos
mov
mov
jg
imull
ret
je
xor
push
xlat
das
fdivr
int
jmp
sti
ret
jb
mov
in
jnp
cmp
mov
sub
ret
out
fst
int
add
add
call
rorl
insl
push
fimull
fcomps
mov
js
jnp
inc
jg
jbe
push
les
insl
and
xchg
inc
mov
add
lret
jns
or
sahf
push
or
sbb
push
in
jns
push
jnp
stos
mov
gs
std
xor
out
push
outsl
notb
add
push
pop
addr16
sub
dec
es
jbe
xchg
pop
mov
dec
or
arpl
mov
jno
or
pop
sbb
jbe
adc
sub
sbb
imul
xchg
pop
es
pcmpgtw
sar
push
je
divl
push
sbb
bnd
rcl
fstp
cmp
popa
rcll
or
ljmp
pushf
xchg
repnz
xor
je
jl
mov
adc
xchg
cmpsl
sbb
loope
scas
dec
or
jnp
push
dec
jno
dec
sarb
push
mov
add
jne
xor
inc
mov
cmp
mov
push
sar
iret
mov
lods
push
mov
push
xor
fists
nop
leave
sbb
pop
inc
notb
dec
jle
push
xchg
inc
sbb
fnstsw
adc
in
shl
push
mov
fisubs
sbb
adc
icebp
dec
outsb
cs
lcall
out
pop
pushf
cmp
mov
sbb
iret
mov
adc
ja
mov
fs
cmp
fdivr
movl
repz
sbb
enter
bndldx
pop
mov
jl
fcompl
mov
sub
aas
int
jp
xchg
dec
xchg
mov
in
or
xchg
mov
xchg
repnz
mov
cmc
loopne
cs
es
mov
adc
push
and
jns
jo
xchg
adc
ja
inc
mov
lea
in
sub
jmp
repnz
jno
out
push
mov
dec
mov
shlb
xlat
or
shl
scas
movsl
subl
sbb
adc
pop
push
test
scas
inc
xor
bound
sub
loopne
mov
xor
or
fisubs
adc
out
jp
inc
jae
cmp
inc
sbbl
sub
jp
push
push
adc
push
and
mov
pop
nop
out
into
or
add
xchg
sub
popf
cld
jns
aad
adc
add
push
inc
clc
test
inc
mov
fisubrl
mov
aas
mov
pop
pop
popl
xchg
imul
push
int3
mov
bound
xchg
jo
xchg
add
cmc
jnp
arpl
add
inc
push
pop
lods
hlt
into
aad
xchg
adc
mov
add
xor
dec
and
push
imul
out
testl
mov
mov
rcrb
shll
mov
mov
cltd
dec
add
xor
pop
adc
push
dec
dec
cmp
push
pop
xchg
push
add
mov
jns
pushfw
nop
stos
xchg
cmp
xor
inc
mov
sti
xor
loope
dec
test
push
out
jp
ss
fsubrl
ret
sbb
fisubl
push
xor
jg
rcll
mov
ss
stos
mov
mov
push
fidivrl
in
das
or
hlt
pusha
lods
bound
adc
xchg
call
mov
repz
mov
movsb
shr
jg
mov
jl
or
mov
andl
jg
sbb
mov
stos
cpuid
insb
jbe
add
int3
mov
jns
or
sub
push
cwtl
dec
or
push
call
mov
push
add
push
pop
popa
popa
and
hlt
fisttps
leave
pop
cmp
jne
movsb
daa
negb
hlt
inc
sub
stos
or
pop
add
mov
dec
test
dec
stos
adc
je
jb
cmpsb
pop
xor
mov
test
stos
pop
xchg
fmulp
addr16
xor
shl
aas
push
test
mov
addb
ds
rol
insl
dec
adc
mov
push
test
push
mov
xchg
push
cltd
cld
bound
xor
cwtl
ja
hlt
popf
jno
or
pop
adc
movsb
aad
subl
sub
pop
adc
sub
clc
in
jbe
cmpb
sti
scas
leave
mov
fs
fld1
mov
push
xchg
sti
test
push
iret
les
adc
mov
std
data16
dec
cmp
sub
xchg
test
loope
mov
in
xchg
test
jo
inc
push
les
into
mov
sub
push
lahf
dec
inc
pop
cmp
inc
or
inc
or
xchg
lcall
add
or
scas
clc
sub
adc
sub
fstps
rolb
cmp
dec
cmp
popf
clc
sar
cwtl
insb
push
repnz
mov
cld
les
fstl
rcl
sub
sbb
pop
in
fildl
addr16
iret
cltd
fs
jb
mov
inc
hlt
xchg
aad
bound
outsb
mov
pop
ffreep
jg
loopne
sbb
aad
ljmp
push
mov
test
jecxz
xor
inc
ret
pop
imul
mov
push
outsl
mov
mov
cld
adc
sub
loope
and
daa
daa
mov
push
jnp
cmp
enter
xchg
mov
push
lods
outsl
push
cmp
mov
rclb
pop
pop
call
sbb
lock
xlat
xor
ds
push
inc
movsl
data16
adc
fistps
test
jnp
xchg
out
insl
pop
int
sub
sub
addr16
jg
sub
pop
sbb
jecxz
lods
push
ret
inc
test
insb
inc
leave
lods
inc
je
or
push
aas
dec
bound
cltd
sub
aam
roll
add
fiadds
bound
or
xor
and
mov
nop
stos
cwtl
and
cmp
mov
in
out
xor
lock
call
loopne
out
lea
movsb
sbb
es
or
or
sbb
push
les
daa
jo
into
sbb
push
fcoml
cltd
mov
jmp
sub
mov
lods
push
aas
xchg
mov
push
inc
cmp
hlt
push
dec
rolb
sub
jle
sub
stos
jle
sub
pop
loopne
inc
adc
push
adc
lock
cmp
outsb
xor
sbb
pop
into
dec
or
cmp
les
xchg
and
in
pop
fsin
mov
pop
arpl
or
mov
in
mov
inc
out
and
sub
daa
test
mov
das
out
ja
imul
xchg
or
pusha
or
es
inc
popa
xchg
fsubrs
push
daa
int3
or
mov
subb
push
jge
mov
inc
and
adc
call
cmp
test
lret
ret
mov
into
push
mov
in
mov
or
add
sbb
sbb
xchg
rep
adc
test
outsl
inc
pop
or
dec
ljmp
sub
sbb
jmp
clc
mov
push
insb
popa
mov
je
leave
in
mov
xchg
jnp
adc
bound
andl
lcall
dec
jo
cmpsl
sbb
mov
lods
push
rcll
jg
popf
dec
xlat
sbb
mov
movsb
repz
jbe
push
mov
mov
scas
mov
and
cmpsl
enter
cs
mov
pushf
cld
lock
jne
nop
leave
xor
push
lahf
sub
jne
pop
sti
pop
xor
sahf
aam
fwait
mov
pop
mov
push
outsb
pop
jbe
scas
clc
jb
loopne
jae
push
jns
out
mov
mov
inc
xrelease
dec
jge
pop
testl
jnp
mov
dec
inc
push
and
sbb
xchg
out
cmp
cmp
ret
ljmp
jecxz
lahf
addr16
lods
in
xor
addr16
nop
loop
out
lds
xchg
popf
pop
xchg
jne
jp
mov
mov
cmp
aad
sbb
jle
hlt
mov
mov
dec
pop
stos
xlat
xchg
xor
loopne
cs
sub
push
mov
dec
int
jmp
int3
arpl
fisttps
ret
inc
pop
mov
sub
cmpsb
enter
add
dec
int3
or
push
push
pop
push
and
or
daa
iret
int3
pop
pop
mov
adc
mov
and
test
add
ret
push
or
inc
daa
fwait
imul
nop
add
cld
mov
xchg
div
xor
ret
fs
or
cld
lods
mov
pushf
xchg
xchg
mov
gs
test
sbb
sti
xor
push
push
mov
xchg
fistps
addr16
aam
inc
stos
jns
mov
and
push
add
jmp
xor
xchg
fdivrp
push
aas
adc
pop
add
pusha
adc
push
pop
cs
mov
in
add
cmp
fidivs
enter
ja
imul
ljmp
pop
fs
or
das
out
mov
push
call
test
sbb
xchg
je
cld
fimull
mov
jl
push
sarl
pop
call
add
add
cmp
pushl
xchg
push
xchg
and
movsl
or
into
or
movhps
mov
mov
fdiv
cli
sbb
mov
subl
fimuls
hlt
push
int3
movsb
jne
arpl
pop
ret
cmpsb
push
xlat
dec
mov
mov
aam
push
scas
mov
fidivl
sub
or
lret
push
adc
fdivrp
push
outsb
sub
mov
fmuls
xor
test
add
pop
imul
fs
mov
push
mov
std
mov
scas
push
popa
push
arpl
filds
xchg
insl
sbb
sahf
loope
and
sub
int3
mov
push
adc
jecxz
mov
sbb
lods
in
mov
loope
sub
std
shrb
mov
and
mov
mov
pop
repnz
push
int3
jmp
stos
dec
sbb
rclb
lcall
std
out
sbb
pop
push
adc
fstl
jecxz
fnstenv
jnp
jge
mov
or
mov
xchg
in
push
cmp
mov
popa
mov
pop
mov
sbb
js
xchg
push
sub
stc
cld
sub
arpl
lahf
addr16
lock
xlat
out
outsb
ljmp
adc
aam
adc
cmp
add
movsl
mov
into
cltd
sahf
je
sub
push
pop
sbb
iret
cmpl
push
fnstcw
stc
and
inc
inc
xchg
in
add
add
adc
sahf
add
and
iret
mov
mov
test
mov
pop
push
movsb
int3
fs
inc
jp
add
insb
iret
scas
xchg
cli
push
sbb
fcmovne
loop
mulb
jb
pop
add
outsl
mov
in
mov
adc
cld
fstl
scas
and
mov
inc
inc
jge
or
mov
jmp
shll
leave
cmp
in
xor
push
jbe
nop
adc
les
js
push
mov
dec
mov
je
repnz
sub
lods
sbb
popa
cmp
jmp
sbb
call
xchg
icebp
call
iret
jnp
mov
fsub
sarl
pop
sub
push
cmpsl
adc
out
add
sub
adc
pslld
scas
sbb
dec
inc
loopne
call
and
add
push
jl
cwtl
mov
mov
inc
dec
lcall
inc
mov
dec
dec
xchg
jns
aaa
jne
popf
test
subl
imul
scas
add
pop
jecxz
xor
adc
in
mov
sti
shl
pop
jne
mov
mov
jb
adc
push
loope
adc
fdivrs
xor
int
xchg
inc
lret
fs
dec
sbb
lods
mov
pushf
nop
sub
lcall
add
sub
addl
leave
test
jnp
call
imul
cmp
nop
gs
repz
jmp
pushf
jae
cmp
mov
aas
mov
mov
push
sub
lret
enter
stos
mov
xchg
add
jo
pop
jmp
shl
mov
adc
out
iret
cltd
mov
xchg
in
cltd
or
clc
dec
in
mov
add
stc
jg
sub
loop
dec
jbe
fs
fsubs
xor
insl
jle
ja
push
cmpsb
mov
call
jl
cmp
dec
mov
jns
or
jo
in
mov
inc
punpcklbw
mov
and
test
mov
xchg
push
lret
dec
mov
bound
fisttpll
mov
mov
and
jmp
mov
stos
out
daa
fcompl
adc
in
movsb
xor
add
out
inc
pop
and
inc
add
push
ja
popf
mov
or
sbb
test
aad
mov
das
push
lods
add
xor
insb
es
sahf
jmp
mov
mov
insl
jp
insl
push
cmp
mov
fwait
in
cwtl
xor
shlb
push
cmpsb
je
out
push
popa
push
pushl
andw
inc
faddl
sti
ror
addl
fsubrl
and
sbb
rclb
mov
xchg
cmp
jp
stc
addr16
outsb
push
and
xchg
imul
mov
mov
imul
shll
test
rclb
jb
push
mov
mov
inc
fmuls
faddp
jnp
push
mov
mov
jecxz
lcall
daa
xlat
adc
xor
cmpsl
ja
mov
movsl
inc
bound
shl
cmp
xchg
sub
push
xchg
lea
push
stos
pop
int
mov
imul
and
ljmp
or
pop
insb
fiadds
and
jns
idiv
stos
push
jnp
stos
jne
movsb
pop
outsl
inc
sbb
mov
mov
outsl
dec
push
jecxz
loope
sub
push
rclb
dec
add
daa
dec
push
xchg
insl
xor
mov
jno
jne
push
push
jecxz
jno
in
les
adc
aas
stos
or
push
mov
movsb
call
sbb
scas
insl
mov
cs
mov
or
in
jne
fcompl
push
dec
in
cmp
lcall
dec
jbe
cmp
adc
mov
in
mov
push
in
dec
xchg
cmpsb
pushl
adc
bound
push
cmpsl
xlat
pop
nop
push
arpl
lahf
xadd
cmp
lcall
xchg
inc
mov
xchg
dec
xchg
sub
adc
sahf
pop
or
add
fildll
add
int3
xchg
dec
lahf
push
push
xlat
jns
lahf
lea
adc
add
inc
imul
pushf
mov
int
dec
cwtl
xor
call
lret
dec
xlat
std
add
inc
dec
dec
mov
mov
mov
outsb
loopne
push
dec
pop
dec
iret
adc
sub
push
cs
xlat
sbb
sbb
inc
je
ficoms
pop
mov
popf
add
nop
pop
leave
enter
cmp
pop
or
and
pop
test
decb
inc
push
loopne
test
inc
int
cld
mov
dec
pop
mov
mov
mov
int3
pop
das
addr16
inc
out
add
jge
call
shll
sbb
mov
push
gs
and
mov
out
cmp
cmpb
push
cmpsb
sti
sbb
adcb
hlt
inc
lods
out
sbb
add
dec
insl
cmp
insb
insl
in
lea
in
mov
fnstenv
jne
pop
lock
aas
pop
ldmxcsr
mov
test
add
and
add
xor
lret
shll
loop
or
xor
jmp
add
cli
fs
daa
xor
jge
xor
push
xor
fidivl
sub
jo
adc
add
lea
std
mov
jg
hlt
pop
out
fnstenv
and
test
mov
push
jns
imulb
and
adc
cmp
packuswb
or
fisttps
cmpsl
rolb
mov
das
jmp
sbbb
cmc
push
and
inc
fcoml
loop
add
adc
lods
pop
outsl
std
and
push
xchg
jb
sbb
mov
loop
pop
dec
insl
sub
and
out
jmp
pusha
in
hlt
cli
pop
lea
xchg
adc
cmpsl
pop
in
ret
fcoms
and
pop
mov
jg
stc
jge
ficoml
push
jne
outsl
cmpsb
sub
bound
inc
cmpsb
call
stos
xor
insl
add
pop
push
mov
cmp
and
and
lcall
cmp
dec
repnz
jb
in
int
dec
ja
stos
fldenv
fistl
popa
into
jl
inc
adc
nop
jb
xor
xor
mov
dec
jo
or
lret
in
jmp
lock
sub
in
mov
mov
loop
std
cli
pop
mov
mov
clc
jns
adc
and
in
fisttps
cmpsb
in
jp
call
sbb
flds
xchg
loop
dec
sub
jl
fdivl
pop
push
out
and
xchg
lea
cmpsb
cmp
std
jge
sbb
icebp
sub
loope
adc
push
in
sbb
cld
test
imul
lahf
fsts
ret
pop
decl
jmp
dec
shrl
and
ss
icebp
cs
push
mov
mov
and
jl
push
test
xchg
dec
ret
adc
mov
mov
jmp
pop
ret
mov
imul
adc
sbb
xor
xchg
lcall
movsl
aad
cli
mov
and
ret
enter
loopne
inc
rep
lret
or
pop
mov
nop
xor
sbb
jg
nop
data16
xlat
dec
data16
aas
out
sub
cltd
in
imul
mov
lahf
insb
dec
bound
stc
mov
xchg
pop
loopne
loop
mov
mov
adc
popf
inc
sub
fidivrs
loope
arpl
dec
mov
std
and
in
ret
aaa
jns
dec
xchg
mov
lret
lcall
fmuls
mov
dec
mov
test
insl
xchg
andl
sub
test
and
mov
roll
inc
ljmp
div
std
push
scas
mov
dec
mov
mov
testl
xchg
lock
movsb
incb
inc
call
jecxz
xor
mov
or
jge
push
sub
jge
pop
jg
cmp
jge
jo
ja
outsl
repz
xchg
mov
ja
push
ret
push
lret
lahf
fdivrs
sub
fwait
push
inc
mov
rcrl
push
arpl
mov
push
ja
xor
das
out
std
and
fisubrl
add
push
fsubl
test
jb
push
in
adc
add
push
loop
ficoml
mov
xor
popf
jae
cmc
hlt
pop
bound
xor
mov
subl
xchg
sbb
or
das
adc
adc
or
arpl
js
push
xchg
cltd
xor
int3
xchg
dec
divl
xor
or
lret
sbb
add
jno
lret
cmpsl
iret
jae
mov
fucom
lock
push
and
loopne
adc
and
adc
xchg
mov
mov
dec
push
jno
hlt
sbb
cmp
test
fdivrs
fiaddl
mov
std
xor
lret
stos
jnp
sbb
je
lods
fcomp
inc
mov
lret
in
test
mov
mov
jp
gs
aaa
sub
or
add
gs
enter
sub
sub
jb
lahf
pop
mov
mov
ret
cmp
outsb
movsb
xlat
ja
mov
mov
test
dec
xor
jae
or
imul
pusha
xor
mov
daa
ret
cmp
ret
movsl
xchg
cltd
lcall
mov
xchg
shlb
sar
out
mov
lcall
push
addb
jecxz
jmp
pop
pushf
lret
pusha
push
ror
cltd
pop
pusha
cld
jno
or
xchg
xor
cli
stc
cli
gs
or
pop
out
xor
lcall
mul
or
add
sti
dec
xlat
xor
jge
and
pop
inc
dec
mov
in
jmp
sbbl
fistpll
sub
lret
push
pop
insb
les
xchg
popf
scas
or
inc
pop
dec
pop
sbb
sbb
adc
dec
testb
pop
adcl
jb
mov
jne
mov
or
loopne
cwtl
xor
add
in
loope
int
repz
sub
arpl
jge
popf
daa
imul
jb
sub
loope
shlb
jnp
fistps
ss
cmovns
push
xchg
test
lea
mov
mov
mov
dec
aam
jmp
aas
fists
loopne
push
stos
fs
mov
jne
inc
mov
jge
push
jmp
push
aad
push
xchg
cmc
lcall
pop
add
sbbl
push
add
cmp
pop
cmp
in
inc
pcmpgtd
push
data16
xchg
rorl
lea
hlt
sub
push
leave
adc
arpl
adc
and
arpl
mov
cmp
fimuls
icebp
scas
and
xchg
xchg
fldt
idivb
ret
mov
push
lret
roll
push
xchg
call
icebp
sti
mov
push
sbb
mov
xchg
adc
or
mov
loop
mov
out
sbb
add
xchg
pusha
je
inc
xchg
cltd
js
adc
pop
and
mov
pop
adc
jnp
movsl
rcll
mov
test
inc
int
ret
and
imul
sbbl
aaa
sub
sub
mov
sahf
push
lods
insl
mov
test
popl
dec
test
adc
sarl
movl
dec
sbb
mov
and
addb
das
jnp
mov
jp
leave
repnz
mov
addr16
mov
or
daa
push
jns
adc
sub
sbb
clc
mov
mov
mov
stos
outsb
inc
inc
add
cmp
and
insb
xor
adc
nop
icebp
stc
mov
cli
xor
addr16
movsl
xor
daa
and
inc
rolb
mov
mov
adc
and
rclb
mov
shll
xor
add
imul
lods
and
and
pop
pop
test
inc
mov
mov
and
adc
in
jb
and
jno
loop
pop
sub
mov
inc
or
fisubrl
dec
sti
and
lcall
mov
push
lcall
jo
push
push
add
add
fcmove
movsb
fsubl
ret
push
and
jno
xor
pop
mov
sub
sbb
in
and
dec
jbe
rcrb
in
jecxz
popf
movsl
into
js
jmp
sbb
ljmp
or
mov
mov
pop
test
push
mov
cmpsb
jb
iret
or
mov
imul
cmc
cwtl
pop
cmp
add
push
idivl
push
dec
xchg
cmp
stos
push
sub
mov
es
enter
movsl
sub
xor
arpl
ss
call
aad
and
int3
push
enterw
repz
stos
fwait
mov
jbe
jns
outsb
push
add
lahf
jl
or
push
cltd
and
lds
rcr
ret
popa
lcall
push
jp
xor
cmp
xchg
fwait
test
mov
dec
mov
hlt
sbb
and
rorb
decb
push
xchg
fucom
fadds
inc
mov
ret
add
icebp
and
fs
dec
inc
in
jo
imul
push
push
popf
sbb
movsb
cli
sbb
hlt
iret
dec
jmp
sbb
xchg
jns
scas
mov
xchg
push
fdivl
mov
mul
sub
andb
push
mov
popf
jno
add
cmpsl
sti
mov
sahf
push
imul
movl
and
dec
aas
mov
in
xchg
nop
aad
mov
dec
testb
test
add
iret
ljmp
mov
xchg
movsb
cmp
sub
xchg
cmp
push
je
cmp
daa
in
adc
imul
mov
lds
dec
rcr
enter
sub
ss
and
push
mov
lods
mov
push
sbb
mov
add
xchg
inc
sbb
ss
sub
loope
or
sahf
add
xor
daa
sub
lods
test
mov
jb
fdivp
mov
addr16
test
shlb
mov
sbb
ss
or
ljmp
mov
loope
repz
ja
arpl
xchg
iret
sbb
sbb
fimuls
mov
fs
gs
mov
shrl
pusha
mov
lret
cmp
dec
mov
movl
stc
js
xchg
adcl
mov
jno
cmc
add
stos
ja
pop
jb
lods
shl
cmpsl
push
cmpb
pop
sahf
or
mov
sbb
hlt
mov
loope
push
sbb
push
mov
xchg
jg
cld
test
xchg
jecxz
das
inc
mov
js
sub
jg
sbb
xor
lcall
ja
shll
sub
sub
sub
rorb
addr16
bound
inc
jne
inc
pop
dec
sub
sbb
popf
jg
into
aaa
out
mov
mov
insb
cli
push
and
insl
add
insb
mov
test
mov
js
leave
sbb
ret
jp
xor
jle
lahf
out
loopne
pop
imul
fmull
sbb
jp
add
add
push
adc
mov
cs
dec
lret
pop
cmpsb
mov
dec
inc
es
sbb
cmp
daa
cmc
mov
aas
imul
sub
jmp
pop
xchg
add
in
adc
test
lods
sub
call
add
pop
in
dec
push
inc
dec
fdivrl
loope
xor
inc
mov
ret
and
jmp
out
outsl
dec
push
ss
mov
insb
leave
gs
mov
xor
fildl
sbb
imul
hlt
pop
xor
mov
dec
inc
jb
les
jle
xlat
stos
jb
insb
and
cmp
cltd
repz
shr
shl
xchg
cltd
sar
sub
push
pop
inc
xor
movsb
sbb
mov
lds
out
je
jg
mov
cmpsb
iret
test
gs
sarb
pop
mov
pop
cmp
loope
imul
lds
lods
xor
negl
lcall
rcll
pop
push
data16
jae
out
push
lret
rcl
and
mov
mov
or
insb
jge
xchg
fdivl
loope
mov
add
cmpsl
scas
stc
inc
imul
stos
xchg
pop
sbb
sbb
out
jo
dec
sbb
cwtl
add
xchg
sahf
stc
mov
rol
movsb
cmpsl
andl
or
dec
inc
std
lret
arpl
jle
test
scas
outsl
stc
lea
push
nop
fldl
mov
adc
repz
fnstenv
sbb
xchg
sub
and
or
sub
bound
xor
xor
test
cmp
lahf
std
push
mov
in
jmp
jne
jp
insb
aas
addr16
mov
ror
popf
push
xchg
in
xor
fsubl
cmp
inc
xchg
mov
sub
inc
jle
daa
fadds
fwait
sub
outsb
subl
or
out
inc
mov
scas
adc
insb
sub
add
cltd
mov
pop
xchg
clc
cmp
fs
leave
jmp
xchg
mov
xor
jecxz
mov
stc
lds
ds
into
test
cwtl
out
cmp
roll
adc
movsl
push
hlt
out
mov
outsb
in
lahf
lahf
ret
test
insl
ret
sarl
movsb
adc
test
sbb
sub
gs
pop
mov
push
addb
or
fmull
push
movsl
movsl
xor
stos
test
hlt
and
sbb
js
aaa
cmp
and
or
mov
loopne
xchg
xor
jp
leave
aad
inc
pop
xchg
lods
sub
jbe
out
xor
icebp
mov
es
adc
shrl
mov
and
add
popf
push
xchg
repz
pop
loopne
jl
inc
pop
push
xchg
out
lret
xor
push
outsl
inc
int3
sbbb
cs
stos
xchg
out
pop
push
and
repnz
insl
aas
mov
lcall
leave
jle
mov
mov
push
inc
jne
mov
mov
scas
ret
cltd
jne
dec
add
and
xor
lret
je
sub
rcll
cmpsb
arpl
imul
push
fbstp
pop
push
mov
fmull
lcall
or
ljmp
aaa
and
inc
pop
xchg
mov
popf
iret
push
or
data16
sub
ljmp
mov
in
mov
pop
pop
mov
fxch
fcmovb
mov
mov
cli
xchg
and
pop
add
pop
cmp
mov
push
lods
mov
outsl
sbb
movsl
fs
jl
js
cmc
fbld
or
daa
loopne
cmp
mov
or
xor
scas
push
jnp
mov
push
mov
sar
xchg
xor
xchg
inc
mov
pop
mov
out
daa
mov
std
and
fchs
stc
movsl
ljmp
add
inc
cwtl
cmp
jg
cs
push
jg
scas
inc
push
leave
fs
ret
out
push
rol
mov
fldenv
dec
push
sti
jnp
icebp
lar
cmp
test
stc
push
jmp
fnstenv
cmp
push
mov
aam
and
aad
sbb
sub
mov
sub
mov
mov
imul
mov
pushf
rcll
imul
push
cltd
push
and
inc
cli
cmp
popf
out
or
push
aas
in
push
cmpb
mov
adcb
sbb
repnz
stos
add
inc
pop
push
cmp
or
xor
in
imul
xor
inc
push
pop
lods
dec
pop
scas
or
ret
jge
jg
sbb
loop
lock
pop
cmp
jle
xchg
cltd
add
xchg
jns
lea
adc
out
lods
stos
xor
add
das
daa
xchg
push
mov
mov
mov
cmp
mov
cs
int3
or
mov
mov
mov
call
clc
rol
jle
shlb
xor
rorl
sub
cmp
adc
and
sbb
jp
insl
push
jae
pusha
cli
orl
clc
sahf
push
js
test
push
sti
out
pop
les
dec
mov
cmpl
jl
add
int
xchg
lds
sub
cmc
sbb
push
mov
pop
jbe,pn
sarl
and
das
xchg
xchg
jmp
cmp
into
scas
gs
stc
ja
mov
mov
jl
int3
sub
int3
push
aad
pop
or
data16
inc
xlat
xchg
into
inc
roll
fnsave
jnp
leave
sub
nop
or
xchg
rorb
out
push
mov
add
mov
or
inc
cmp
andl
cmp
dec
inc
ret
mov
lods
adc
inc
pushl
in
mov
dec
push
ljmp
cmp
pop
mov
aaa
test
pop
insl
jle
fwait
or
adc
ss
test
test
dec
jmp
add
divl
mov
pop
mov
push
xchg
cmp
jno
sub
xchg
push
and
addb
dec
xchg
andb
cli
lret
clc
push
in
jp
sbb
fcom
mov
mov
mov
fidivrs
jb
jmp
imulb
aas
inc
cwtl
les
aaa
daa
lret
mov
or
scas
pop
pop
aam
sub
jp
push
imul
test
push
out
data16
sbb
dec
mov
jnp
mov
cs
insb
jne,pt
ret
dec
and
in
das
pop
imul
ljmp
jle
or
sub
test
fmulp
mov
movsl
leave
push
push
rolb
pop
cmc
mov
cmpsl
stc
mov
pop
jns
pop
cld
fstps
mov
js
add
sahf
fisubrl
fcom
scas
leave
fisubrl
pop
fcoml
outsb
xchg
leave
mov
sbb
sub
lea
fwait
sub
mov
or
cmp
imul
sbb
nop
mov
fsubrs
jno
xlat
in
inc
sbb
rcrl
cmpsl
or
dec
es
rorl
ds
dec
and
insl
xchg
mov
shll
dec
test
dec
out
mov
into
test
ffree
enter
lcall
out
push
mov
rcll
sbb
into
rol
scas
hlt
pop
out
sbb
leave
ds
popf
aaa
cld
and
adc
sub
jmp
or
mov
fwait
push
mov
sub
aas
fwait
out
enter
lret
or
adc
cmpsb
lods
xor
fcoms
loope
lods
ja
jo
xchg
outsb
pop
mov
ja
cmp
push
fsts
mov
pop
cltd
scas
ret
les
out
test
jg
pop
inc
cmpsb
push
xchg
xor
lahf
out
push
icebp
xor
xor
inc
push
lea
mov
xchg
insb
sub
dec
mov
aaa
xchg
inc
std
jecxz
hlt
pop
adc
sbb
arpl
rorl
int
mov
jmp
js
xor
pop
cmp
push
adc
popf
push
mov
xchg
dec
shlb
push
insl
aas
adc
lods
push
cmpb
faddl
mov
add
xchg
or
test
mov
jmp
ret
adc
and
dec
jmp
imul
loopne
and
hlt
and
fwait
nop
stos
jae
ja
jne
cmpsb
jp
lret
cmp
dec
dec
jecxz
mov
sbb
aam
popf
jp
into
fists
mov
pop
movsl
mov
into
ret
pop
rcrb
xchg
inc
das
ret
and
dec
fisttpll
loop
movsb
jnp
stos
and
and
cmp
push
es
loop
push
or
mov
dec
sbb
aas
sbb
fwait
pop
or
cmp
cmp
movsl
pop
dec
mov
ror
pop
pushf
hlt
add
sbb
inc
stos
xor
sub
jae
in
pusha
mov
mov
pop
lahf
fwait
mov
push
insl
adc
xor
push
push
lret
mov
cli
addl
in
and
insl
mov
xchg
sub
or
xor
loope
testb
pop
dec
fwait
pop
andb
in
ret
loop
fwait
lods
push
stc
sub
push
cld
ljmp
dec
adc
xlat
sub
xchg
or
lds
xchg
and
push
imul
sbb
nop
or
cmpb
mov
out
pop
jge
and
fcoms
cmpsb
jno
mov
cmp
fwait
pop
lahf
repz
insb
clc
mov
jo
out
add
jnp
hlt
and
iret
pop
mov
xor
into
out
cwtl
cltd
push
pop
cmp
leave
mulb
lods
jne
inc
aad
lea
xchg
xchg
xchg
and
adc
push
pop
mov
sub
out
and
enter
jae
and
adc
mov
je
cmp
aam
imul
xchg
imul
insb
adc
test
jnp
insb
pushw
and
dec
jle
rorb
daa
rep
test
mov
jmp
sub
leave
lahf
mov
sbb
test
ja
mov
xor
scas
or
adc
or
fldt
mov
and
mov
incl
xor
loopne
nop
adc
xchg
xchg
psraw
rcll
jl
mov
repz
mov
xchg
mov
ja
cmp
scas
jge
jno
push
lret
cli
bound
jbe
shrl
add
fsubrl
movsl
xchg
sub
cli
cmp
push
or
adc
testb
sbb
adc
push
xor
sbb
je
out
paddsw
int
cwtl
push
cmp
and
push
dec
sub
leave
movsl
pop
add
and
xchg
cwtl
and
pop
ret
roll
popa
mov
cmc
xchg
pop
lods
mov
xchg
xchg
int3
das
std
push
mov
jp
stos
lock
sbb
cmp
xor
mov
push
mov
loop
inc
mov
icebp
add
and
pop
cmp
fimull
fdivs
dec
mov
pushf
lods
stos
popf
dec
mov
scas
and
and
sbb
imul
jb
test
ja
push
add
test
cmp
rorb
insb
sbb
xchg
ja
lods
add
and
ret
lret
imulb
pushf
sbbb
adc
pop
test
cmp
loope
in
sbb
xabort
cs
cli
push
sarb
push
xchg
or
cld
loopne
sbb
mov
jne
xchg
dec
stos
and
addl
push
adc
icebp
ja
ja
xchg
xor
xchg
pop
lds
lahf
mov
ret
sti
mov
mov
inc
xchg
and
ja
dec
mov
int
shll
pop
mov
frstor
call
pusha
mov
das
xchg
aas
mov
loope
xchg
emms
into
dec
cmpsl
imul
out
pop
adc
pushf
pop
adc
addl
in
stc
pop
pop
sub
pop
es
lret
es
sbb
psllq
and
hlt
cmp
and
aam
sbb
xor
pop
push
or
int
dec
xchg
mov
push
pop
dec
rorl
jne
pusha
cli
ret
pop
and
icebp
notl
pop
push
sbb
jge
mov
loop
jp
xchg
cmpsl
loope
fsubl
jecxz
dec
movsb
pcmpgtd
cmp
adc
sub
call
repz
inc
adc
ds
mov
jp
test
xor
mov
aad
pop
aam
add
pop
lcall
add
sbb
sub
jl
sti
mov
push
mov
fiaddl
lahf
mov
loopne
mov
repz
shl
lahf
jnp
movsb
dec
push
push
stc
mov
in
movsb
imul
push
adc
popf
les
cmpsb
and
lds
mov
imul
stos
xchg
sbb
mov
imul
cmpsl
mov
push
mov
jb
jle
fwait
rcrl
inc
xchg
xor
aam
jno
mov
sub
pop
cld
mov
jmp
dec
or
push
cmp
fs
mov
loopne
adc
and
int3
popa
cmpsl
sub
jecxz
cwtl
pop
sub
cwtl
loope
movsb
repz
into
mov
sub
repnz
es
mov
lods
std
push
sub
inc
sub
ja
daa
lea
lods
mov
rcrb
mov
pushf
cli
aas
push
sbb
mov
aas
pop
pop
add
lret
and
and
aas
es
cs
cmp
push
divb
sarl
dec
movb
cwtl
daa
dec
pop
xor
adc
mov
jbe
xlat
or
jne
mov
sub
cwtl
push
dec
scas
mov
scas
rorb
add
xchg
push
adc
add
add
faddl
xor
dec
test
push
jbe
jns
ljmp
mov
fmul
fnsave
xchg
sub
repz
into
xchg
scas
push
popf
les
inc
xorl
inc
cmp
and
into
sbb
jl
cmp
xorb
repz
incb
movsb
icebp
in
push
mov
in
xchg
push
insb
in
loopne
mov
outsl
outsl
inc
xor
sub
push
pop
adc
inc
sub
ja
mov
insb
mov
or
cmc
gs
dec
xchg
cmp
pop
inc
test
insl
pop
clc
mull
stos
xchg
mov
int
andl
imul
popa
rcl
loopne
lcall
les
insb
daa
or
xlat
out
sub
mov
sub
enter
jbe
mov
aam
jns
lahf
bound
jb
test
push
lcall
xchg
mov
sbb
add
stc
pop
or
xor
sbbl
inc
cwtl
cmp
push
mov
push
cld
ret
or
pop
adc
xor
xchg
dec
mov
jb
sub
pop
lea
jmp
push
cmp
xor
cli
loop
or
sub
or
loope
pop
and
mov
pop
xor
inc
push
mov
mov
aad
sub
pop
dec
mov
rcrb
jg
mov
jp
aaa
rcrl
out
adc
xchg
cld
jbe
mov
sub
sar
cltd
lret
sub
xor
pop
cmp
sub
mov
lahf
jbe
mov
pop
dec
adc
sbb
add
repz
insb
mov
jp
mov
out
fwait
mov
incb
xchg
push
clc
sbb
out
and
jmp
xor
movsb
or
jl
cli
fdivrl
inc
xchg
lahf
or
popa
add
push
arpl
decb
cmp
mov
data16
adc
or
stos
mov
imul
jmp
test
int
jnp
inc
cmpsl
mov
scas
pushw
inc
inc
loope
fbstp
flds
daa
lods
mov
xchg
xchg
sub
cli
mov
shll
sub
hlt
add
mov
pop
icebp
inc
pop
push
addl
cmp
push
dec
pop
sti
cmp
rclb
mov
or
dec
lea
icebp
jb
stos
jno
cwtl
mov
jmp
sti
jecxz
lock
mov
mov
lcall
cmpsl
pop
cmpsl
fwait
xor
fcompl
lea
xchg
xor
sbb
es
rclb
add
jae
js
sti
in
add
xchg
rclb
push
inc
fwait
sub
inc
ljmp
xchg
cwtl
mov
jno
out
push
enter
cs
je
loope
aas
insl
jnp
push
mov
test
push
fiaddl
inc
jl
in
icebp
push
sub
cmpsl
into
add
ret
or
outsb
mov
and
ficompl
dec
shrb
loopne
sub
mov
jae
push
xor
fwait
lcall
adc
mov
mov
and
sbb
or
ficomps
pop
xchg
add
dec
sbb
xchg
mov
jb
aad
jle
outsb
dec
in
jp
sbb
nop
repz
lea
jns
lret
lea
or
out
fidivrl
mov
inc
into
or
divb
add
mov
mov
mov
pop
jae
cmpsb
dec
push
nop
imul
lods
xlat
push
repz
or
and
adc
sub
sarl
and
inc
lahf
sub
iret
outsb
pop
jnp
imul
adc
cmpsl
test
and
outsb
loope
movsl
sub
cli
push
jo
jno
push
popf
scas
or
stos
dec
out
jno
ja
es
in
push
ds
addr16
lahf
push
xchg
mov
popf
sbb
pushl
cmp
fld
imul
xor
fists
loope
in
and
filds
jo
mov
ret
xor
inc
sahf
or
aad
dec
push
fadds
and
and
xor
pop
pop
xchg
cmp
jge
push
jl
orb
and
and
div
dec
in
sub
inc
dec
xchg
and
loopne
mov
inc
in
loop
mov
mov
sub
test
xchg
mov
xor
mov
popa
les
pop
ds
fisttps
je
je
pusha
inc
xchg
adc
in
ror
push
and
cwtl
sbb
or
mov
call
push
test
pop
fisubrl
inc
mov
ficompl
add
cli
cmpsl
out
loopne,pn
adc
lods
add
adc
jae
lret
adc
test
dec
inc
or
lock
mov
cs
push
xchg
mov
mov
dec
mov
cld
push
scas
jmp
jb
gs
jmp
add
xchg
clc
mov
sbb
adcb
sub
pop
test
dec
mov
sub
aaa
lods
les
xlat
fadds
cmc
arpl
jecxz
mov
inc
mov
push
adc
sbb
xchg
fs
jle
push
fldcw
cmpsl
dec
dec
insl
lret
repnz
rcrl
scas
out
test
and
sarl
sbb
popf
inc
nop
add
cmc
jb
jo
shr
or
lret
jnp
mov
bound
xchg
add
scas
xor
ret
mov
jmp
std
std
out
dec
sbb
insl
enter
outsb
inc
scas
and
cs
xchg
xor
pop
mov
cmp
mov
xor
cli
fsts
cmp
arpl
xchg
mov
lock
ficoml
push
sti
xchg
jnp
pop
insb
sub
mov
xchg
xor
push
iret
sti
fcoms
ss
lea
jmp
int
pop
add
sbb
push
sub
sub
shrb
and
xchg
xor
add
pcmpeqw
jno
sbb
ljmp
mov
vdivsd
gs
xchg
push
cld
push
pusha
add
mov
sub
mov
ljmp
sub
das
sbb
sbb
pop
popf
das
div
jnp
scas
mov
xor
adc
lds
push
negb
cmp
pop
mov
mov
or
fbstp
adc
mov
cwtl
or
mov
lea
push
mov
jg
or
inc
sbb
inc
daa
jl
jge
cs
sbb
mov
mov
push
jae
pop
in
dec
inc
mov
push
inc
dec
orl
sbb
lock
loopew
dec
notl
pop
addr16
aas
mov
lcall
adc
xlat
mov
push
mov
movsl
call
mov
dec
ret
add
dec
test
jbe
push
cmp
pop
lea
repz
bound
out
adc
adc
movsl
aam
mov
cmp
xor
push
cmp
stos
push
xor
cmp
jnp
test
dec
mov
lcall
mov
push
xchg
fs
bound
pop
sahf
mov
mov
or
dec
or
cmp
xchg
ret
sbb
push
nop
in
imul
sbb
inc
out
jg
cmp
arpl
xchg
inc
in
jle
jne
inc
add
cmp
loop
push
lahf
jae
mov
dec
dec
inc
push
xchg
xor
push
xor
scas
inc
pop
out
cmpsl
ds
jge
jp
dec
testb
xor
insl
mov
out
hlt
in
cld
sbb
push
inc
jge
sahf
inc
sub
aam
mov
sbb
jg
fimuls
arpl
je
jnp
inc
dec
cltd
xor
repz
xor
adc
mov
fcompp
cmpsl
lcall
add
and
jle
jo
xchg
sbb
pop
push
xor
insb
gs
lock
and
mov
stos
inc
addl
stc
push
je
jg
mov
movsl
inc
pop
mov
sub
aas
idivb
out
and
mov
push
xor
scas
mov
pushf
in
xor
test
push
addb
aaa
xchg
inc
call
mov
ret
aaa
jns
sbbb
sahf
push
pop
and
idivb
push
lds
adcl
cld
dec
daa
xchg
loope
insb
jmp
and
sar
ret
lcall
out
and
enter
pop
fwait
jp
fwait
ds
add
mov
xor
out
lods
aad
mov
fsts
cmp
stos
inc
loopne
jg
movd
jl
or
adc
sbb
mov
or
lods
movsb
or
fstl
mov
or
and
loope
adc
mov
push
xchg
cmp
xchg
das
jbe
mov
inc
mov
shr
push
sbb
push
les
insl
pop
dec
mov
lds
mov
add
xchg
cmp
fdivl
inc
mov
scas
adc
addr16
ljmp
fstps
push
sti
popa
mov
adc
in
lock
push
cmpsl
xlat
sti
lret
xchg
aaa
cli
push
movsl
fmull
xchg
push
dec
cmc
int
pop
cmp
aaa
loop
or
xchg
mov
test
test
adc
in
and
pop
push
daa
popa
or
xorb
lds
pop
xchg
repz
pop
int
xlat
cmp
jl
scas
cmp
movsb
xchg
cli
dec
clc
or
xor
dec
mov
cmpl
out
sub
push
repnz
push
adc
and
ret
inc
mov
mov
pop
jo
rolb
inc
pop
xchg
add
jno
lret
addr16
cs
mov
mov
decb
cmp
push
mov
dec
pop
inc
mov
stos
shll
call
push
adc
mov
xchg
cwtl
cli
in
inc
add
xor
cmpl
js
sbb
or
dec
repnz
movsl
add
aaa
mov
and
ret
ret
cmpsl
push
cmpsb
scas
or
pop
out
jae
mov
imul
popa
call
out
movsb
clc
dec
pop
push
jle
jbe
in
xor
cmp
adc
inc
pop
pop
mov
or
les
cmpb
mov
mov
shlb
xchg
xor
cmc
pop
sub
popf
mov
dec
push
lret
je
pop
lods
jle
sbb
dec
and
addb
jmp
inc
int3
dec
mov
pop
inc
out
dec
jle
fisttps
shll
outsb
mov
stos
out
cmp
das
mov
pusha
es
ret
int3
mov
hlt
adc
push
xor
jae
mov
adc
xorb
shrd
pop
xchg
xor
ficomps
dec
ficoml
divl
loop
mov
push
idivl
arpl
cs
int
cmpsb
outsb
insb
outsl
lods
lds
std
pop
fwait
outsl
lea
icebp
shlb
mov
lods
adc
movsl
jno
push
imul
mov
scas
clc
stos
cli
or
fadd
into
or
push
cmp
jmp
rolb
cmp
mov
leave
pop
cmp
xor
pop
loopne
mov
dec
test
dec
outsb
aas
aam
lock
sbb
inc
xor
inc
in
mov
dec
pop
scas
or
xor
leave
cmp
or
sbb
lcall
pop
outsl
dec
pushf
jnp
pop
negb
inc
push
aaa
fldcw
push
xchg
fdivs
stos
sbb
sbb
xchg
sub
sbb
inc
xor
xor
jmp
dec
xchg
adc
pop
outsl
pop
cmc
sbb
lcall
stos
ret
int3
inc
lods
push
mov
push
and
nop
lock
and
lahf
into
mov
sub
cmp
inc
mov
inc
cmpsb
mov
iret
out
cwtl
push
int3
xchg
lods
test
lock
aad
fst
aaa
inc
ljmp
enter
xchg
jge
or
jmp
enter
imul
inc
and
loopne
mov
lret
repz
dec
daa
data16
outsl
mov
loope
outsb
xor
and
nop
mov
pop
mov
ds
add
xchg
stos
cld
movsb
mov
jnp
xchg
pop
cmp
mov
out
mov
sub
or
fadds
or
shlb
inc
add
inc
sbb
inc
in
popf
mov
dec
cmp
ret
push
xchg
or
out
mov
dec
bound
cmp
and
jmp
ret
in
add
sub
nop
sub
test
push
test
clc
inc
jp
cwtl
and
xchg
add
add
mov
and
call
test
leave
testb
mov
daa
jmp
mov
cmp
push
jl
out
jns
xchg
mov
cmp
test
and
add
push
mov
lds
sbb
popf
add
loop
mov
or
jmp
pavgw
push
mov
iret
aas
loope
dec
and
cmp
shll
or
mov
add
lret
subl
dec
cmc
lock
jns
jae
push
push
lcall
mov
sub
xor
xchg
fnsave
xchg
fsubrs
xchg
popa
sub
adc
mov
mov
les
ret
test
scas
mov
pop
xchg
xchg
mov
inc
push
fs
add
xor
jmp
inc
xor
xchg
mov
test
pop
mov
jecxz
mov
out
push
push
je
cli
fisubrs
mov
or
loope
mov
add
dec
and
inc
subb
dec
daa
aad
outsb
aam
cmp
and
mov
scas
outsb
push
ret
pop
pop
jecxz
aam
jge
rorl
and
jl
sbbb
sub
push
clc
out
sub
add
and
mov
mov
gs
fnstsw
mov
outsb
fxch
push
sub
aad
into
jmp
push
cmc
jb
out
ret
les
bound
dec
scas
outsb
or
and
dec
scas
add
int
pop
lods
xchg
jns
es
sub
aam
imul
sti
cmp
ds
rorl
xchg
mov
je
in
idivb
add
ror
mov
mov
dec
push
add
jbe
inc
mov
cs
fcomi
sbb
div
int
mov
cs
pop
inc
mov
jo
pop
jnp
movl
aas
add
inc
call
pushl
push
mov
repz
cmpsl
inc
cmpsl
jns
xor
icebp
dec
jge
ret
sub
fisubrl
dec
sub
popf
lret
pop
insb
das
in
aad
outsl
adc
into
int
sub
mov
xchg
xchg
stos
filds
dec
pop
mov
pop
dec
push
push
lods
adc
dec
xchg
jge
ss
mulb
xchg
mov
les
push
shl
leave
pop
push
sbb
mov
lret
fwait
sbb
inc
adc
das
and
mov
jg
pop
pop
mov
stos
or
lcall
movl
loop
std
aas
ret
fnstcw
and
pop
push
pop
xchg
insb
loope
or
cmpsb
push
and
sub
mov
pop
call
inc
push
test
xor
out
int3
cli
jbe
aaa
adc
fldenv
ss
aad
inc
mov
mov
jb
jg
cmc
stos
push
ror
out
add
sbb
in
pop
mov
cmpsb
call
bound
jne
cltd
mov
daa
adc
ret
and
mov
scas
lahf
imul
ss
inc
dec
sub
pop
adc
addb
jb
or
cmp
ss
repz
sbb
aaa
pop
repz
pop
mov
out
es
push
push
sti
imul
jecxz
xor
rorb
xor
jmp
pop
test
mov
jl
clc
xor
jns
int3
lret
sahf
add
cwtd
ror
sarl
sbb
cmpb
lock
and
stc
jnp
push
pop
test
gs
jecxz
popa
add
outsb
inc
test
add
lcall
xchg
int
jae
mov
add
movsl
testl
stos
fsub
adc
ds
jp
xchg
andb
mov
sub
jo
pop
loop
lods
sub
cmpsb
pop
push
iret
mov
popf
push
pop
or
decl
icebp
jo
push
jbe
cld
push
adc
cmpsl
dec
pop
mov
movsb
push
out
mov
les
in
insl
roll
int3
sbb
fwait
repz
xor
adcb
cmp
cmp
shll
jecxz
lock
fisttpll
or
jne
lea
enter
ds
mov
aad
jns
ss
mov
inc
push
cmp
aas
sub
lock
lret
mov
xor
outsl
mov
je
ret
mov
aas
dec
popa
ljmp
lret
arpl
fcomip
add
scas
and
pop
sbb
add
pop
cs
fld
mov
or
rcrb
stc
loop
add
mov
cs
outsb
or
pop
jl
call
and
xchg
das
adc
add
xor
lds
lret
test
fwait
mov
xor
bound
push
pop
pop
and
push
sbb
mov
xchg
sti
arpl
mov
ffreep
popf
push
lret
xchg
loope
push
addb
jg
subw
loop
lods
pop
pop
data16
adc
leave
dec
dec
cmp
and
sub
xchg
js
xor
shlb
and
mov
cmpsl
and
mov
mov
mov
lea
jb
imul
aas
aad
push
outsl
fwait
or
inc
cli
pop
mov
fbstp
pop
inc
gs
daa
mov
ficompl
xor
jmp
pop
ja
ret
or
out
mov
pop
addr16
pop
or
test
xchg
add
lcall
mov
ja
sti
lods
cmp
outsb
cli
xor
and
out
fmuls
mov
icebp
clc
in
fbld
test
push
push
mov
repnz
repz
jmp
jno
sti
cmpl
sub
and
mov
cli
daa
aaa
add
ljmp
jo
mov
pop
std
into
or
and
pop
xchg
or
or
imul
mov
scas
test
sbb
out
and
mov
dec
js
paddusw
lret
mov
fwait
out
pop
sbb
sub
mov
mov
mov
add
ljmp
adc
lret
sarl
int
pop
in
iret
push
clc
and
es
sbb
ffreep
lock
cmp
jl
add
aaa
adc
pushf
jo
in
push
mov
mov
and
xor
xchg
lahf
jbe
cld
test
mov
xchg
cs
inc
cmpsb
std
in
adc
loope
inc
bound
jge
mov
popf
inc
sbbl
mov
imul
stos
aas
repz
orl
repnz
push
push
ret
or
gs
pop
sbb
mov
iret
call
jg
test
or
bound
nop
cmpsb
gs
sub
xchg
aas
jns
mov
pushf
andb
loopne
cmp
adcl
mov
xor
inc
push
gs
push
stos
jo
daa
add
les
test
repz
cmp
sbb
in
xor
adc
ljmp
jmp
pop
jmp
ret
call
xor
xor
mov
add
inc
push
xor
loope
loop
xchg
rorb
xor
out
mov
add
lock
int3
arpl
adc
inc
cs
loop
es
and
lods
jo,pt
dec
dec
shlb
fsubrl
lcall
xor
and
das
sti
and
rcrb
inc
stc
inc
cs
sbb
and
xor
aam
jne
sti
jp
daa
push
insb
popf
lret
in
inc
sbb
mov
sbb
push
xchg
repnz
push
mov
cmp
ss
mov
pop
mov
test
dec
mov
pop
adc
fcmovnu
and
daa
scas
pop
jle
bound
jg
sbb
les
sub
fs
jb
push
ss
push
and
xor
cmpsb
pusha
pop
sub
add
xchg
mov
movsb
push
aas
push
jb
repnz
or
cmpsb
cmpsl
int3
and
or
sarl
loop
aad
jne
shlb
cs
sahf
fsubrs
out
add
mov
jnp
cmp
mov
mov
rcl
mov
out
fwait
dec
movsl
dec
xchg
test
fdivs
fwait
xor
and
ljmp
inc
test
enter
imul
nop
es
insb
out
xor
jle
sub
repz
xchg
mov
shl
and
dec
xor
push
into
and
push
daa
mov
adcl
sti
sahf
hlt
lret
lds
mov
cmp
adc
or
pop
inc
js
xor
clc
jno
and
add
jae
incb
adc
mov
jmp
int
xchg
cmp
ss
xchg
call
jo
mov
out
jbe
or
mov
adc
mov
xchg
dec
mov
shlb
mov
fistl
arpl
dec
cs
mov
in
sarb
fcomps
std
mov
jmp
push
xchg
push
hlt
jns
imul
xor
xor
stos
pop
sub
nop
lds
cmc
mov
in
push
test
das
fiaddl
decb
mov
mov
cmp
mov
ret
mov
shll
icebp
push
movsl
xorl
sub
icebp
leave
or
pusha
xor
and
mov
mov
mov
scas
insb
mov
loope
xchg
jns
popa
jle
fwait
lret
jbe
sti
mov
loop
mov
cwtl
pop
mov
ds
jmp
scas
and
mov
jecxz
fwait
bound
push
inc
sbb
and
pop
inc
adc
cltd
or
fwait
out
or
mov
xchg
cmpsb
ja
or
xchg
stos
sbbb
in
insl
jno
mov
in
jp
mov
mov
pop
add
xor
fcmove
stos
inc
jmp
imul
shrl
out
ja
loopne
mov
jge
add
xchg
out
imul
sub
fldcw
std
adc
xor
cld
scas
loope
or
rcr
inc
sub
and
es
repnz
mov
push
clc
lods
add
ds
xchg
and
inc
xor
mov
cltd
sbb
mov
cld
clc
xlat
ljmp
pop
pop
push
pop
sbb
aas
ljmp
rclb
test
push
lock
fs
sbb
add
testb
stos
dec
nop
pop
xor
jne
jp
jge
ret
mulb
aaa
popf
cltd
and
mov
lret
in
addl
adc
das
jno
push
mov
test
test
mov
insl
pop
lds
cli
je
or
mov
cmpsb
fcomip
mov
add
rclb
fwait
or
xchg
add
sub
xor
mov
jge
cs
stos
ret
push
cmp
sbb
mov
inc
mov
inc
cmp
loope
pop
or
jmp
ret
sbb
bound
or
xor
dec
pop
mov
aaa
cwtl
loop
or
cltd
or
sti
mov
mov
sahf
lret
scas
adc
in
mov
cld
add
aam
inc
daa
pushf
pop
sbb
inc
pop
outsb
rcl
outsl
mov
jnp
mov
mov
mov
cmp
dec
int3
scas
adc
lret
pusha
push
jp
out
or
add
or
lods
scas
andb
movsb
pusha
addr16
pushl
sub
in
fdivs
in
xor
dec
sti
jge
arpl
fcoms
or
ficompl
lods
cmp
pop
shll
aas
jb
int3
ljmp
jl
pop
cmp
adc
mov
pop
lods
sar
mov
jne
flds
add
push
sbb
mov
and
pop
mov
pushl
scas
sahf
mov
pop
adc
jecxz
lock
scas
fwait
cmp
enter
pop
aaa
sub
jbe
sub
cmp
inc
push
mov
es
dec
add
lcall
pop
mov
and
lret
jle
and
add
push
mov
dec
xchg
gs
inc
fnsave
addb
jl
pop
ds
popa
loope
inc
daa
sahf
int3
jp
test
imul
cmp
mov
xor
inc
rorb
inc
sub
cmp
mov
gs
ljmp
repnz
push
in
mov
cld
push
repnz
sub
call
test
sbbl
ljmp
jp
dec
mov
and
shlb
pop
and
rcrb
std
xor
test
cltd
pop
mov
xchg
xor
jg
lahf
add
int3
in
mov
sub
mov
out
cltd
das
xchg
jl
rorl
jno
rcrb
fucomip
das
inc
xchg
in
inc
inc
cs
xchg
leave
std
jbe
repnz
sub
or
pusha
fstpt
jae
pop
movsb
lods
je
sbbb
add
add
ljmp
inc
cmp
cltd
sub
xchg
jl
add
sbb
outsb
pop
popa
inc
mov
out
pushf
fstps
fnstcw
lret
xchg
sub
addb
jb
loope
jge
les
mov
insb
pop
fsts
mov
mov
cld
or
stc
gs
ljmp
cmp
cmpsl
fdivp
adc
jb
dec
inc
xor
in
stos
and
test
mov
ja
mov
xchg
sbb
fbld
gs
mov
out
add
and
out
pop
es
mov
sub
ja
dec
or
subb
loopne
cld
test
or
mov
fwait
mov
outsb
dec
xchg
and
or
stos
dec
fisttpll
push
aam
jl
loopne
loop
jecxz
inc
cmpsl
mov
test
jge
dec
push
jbe
jl
adc
jle
sub
xchg
mov
into
mov
pop
inc
fsubrs
je
and
mov
inc
xchg
stc
sbb
repz
pop
jecxz
mov
push
mov
test
iret
out
sbb
dec
pusha
cmp
and
lock
sbb
adc
and
adc
jae
dec
iret
sar
mov
mov
adc
fnstsw
and
imul
imul
pop
lcall
add
nop
lds
xor
cmp
test
inc
sbb
dec
pop
add
scas
jmp
iret
lret
adc
pop
scas
cs
xor
push
inc
cmp
in
insl
testb
ret
in
lret
test
lcall
fs
cmp
cmp
orb
repz
cmpsb
dec
xor
add
mov
cmp
pop
enter
dec
jo
loopne
xchg
inc
nop
lods
aad
cmpsl
push
inc
mov
stos
bnd
pushf
inc
xchg
pop
cmc
mov
inc
jb
lods
cld
mov
vmovsd
int3
xor
pusha
ficompl
gs
popa
jge
adc
and
xchg
sahf
clc
dec
rorb
in
fwait
aad
div
fstpl
dec
mov
lcall
lds
gs
xchg
push
insl
sar
leave
push
adc
aas
sbb
cwtl
mov
or
or
out
mov
enter
xor
xchg
pop
addb
mov
inc
test
inc
mov
mov
sub
int3
sbb
fistl
dec
popa
pop
jo
in
arpl
push
sub
daa
jbe
aad
sub
cld
pop
push
sub
cmp
add
pop
test
in
shrb
out
push
inc
dec
push
pushf
pop
adc
ja
lock
push
sbb
imul
in
mov
mov
sub
shl
je
imul
push
pop
stc
mov
loopne
and
dec
lock
aas
popa
outsl
mov
ja
gs
fidivs
cmp
inc
adc
aam
mov
ljmp
push
notb
cmp
lods
jb
pop
ud1
mov
andb
out
adc
int
jns
mov
mov
push
xor
xchg
in
imul
in
or
fstps
and
add
mov
inc
hlt
mov
test
cld
addr16
outsb
xchg
int3
pop
jo
mov
ja
jns
mov
jl
or
out
addr16
js
ficoml
mov
ficomps
jno
or
sbbl
iret
filds
ret
shrl
pop
or
mov
sbb
out
loope
fstp
inc
popf
test
ret
insb
fdecstp
push
lods
loope
in
in
outsb
jb
dec
sub
xlat
jmp
mov
cmpsb
sub
pop
and
xlat
cmp
pop
mov
cmp
popl
adc
daa
outsl
fdivrp
mull
std
popa
test
iret
pop
inc
rclb
negl
lea
adc
jecxz
jb
pop
shlb
call
push
das
jbe
das
dec
sti
lcall
mov
sub
insb
shlb
jno
fdivrl
and
mov
mov
test
mov
dec
sti
popf
mov
dec
cs
les
cmpps
gs
mov
insl
addr16
popa
sub
mov
inc
mov
aaa
in
lods
jmp
stc
lea
in
inc
xchg
mov
aaa
fstpt
fldl
push
leave
int
roll
aas
das
mov
xchg
je
add
pop
enter
mov
pop
xchg
loope
and
subb
dec
adc
inc
xor
pop
mov
mov
jl
or
mul
nop
push
leave
mov
xor
mov
dec
and
push
sub
cmc
xchg
add
jbe
test
mov
inc
or
outsb
add
push
negb
jno
rclb
dec
lods
fchs
aaa
cmp
cld
xchg
sarl
sbb
and
out
arpl
push
ret
nop
or
aad
lret
jg
jge
daa
dec
pop
arpl
sbb
test
cmc
fimull
mull
mul
jl
stos
mov
test
push
imul
insb
pop
pop
mov
cmp
addr16
in
adc
outsl
movsb
cs
push
mov
cmp
mov
add
mov
dec
cwtl
sbb
cmp
add
xchg
xchg
in
adc
ret
sahf
mov
mov
testl
mov
imul
roll
jnp
cmovs
cmp
sub
dec
cmp
scas
daa
jnp
jae
shll
push
xor
xorb
push
cwtl
sub
pop
into
adc
pop
andl
fisubs
aam
mov
jbe
xor
cmpsb
je
inc
lods
push
repz
inc
and
cmp
in
add
pop
lret
lods
daa
ss
cmp
add
in
push
inc
mov
mov
dec
or
subb
mov
pop
insb
nop
imul
sarl
fsubl
push
es
cld
sbb
adc
and
and
mov
jle
mov
fstps
push
imul
mov
sti
and
jle
xchg
mov
call
pop
bound
fldl
test
jecxz
cmpsb
mov
add
xor
outsl
or
rcrb
test
out
push
xchg
lret
popf
inc
sbb
jnp
outsl
imul
js
xchg
mov
test
loop
jmp
fs
jl
ss
lret
in
sahf
out
xchg
sub
xlat
std
xchg
popf
dec
lahf
fs
mov
cmp
movsb
lret
xor
xlat
pop
pop
mov
ss
lods
stos
mov
repnz
xlat
roll
movsl
inc
loop
iret
inc
mov
mov
xchg
push
push
stos
mov
pop
mov
jbe
test
pmaxsw
testl
xlat
add
lea
data16
sbb
or
cmp
aam
cld
xchg
mov
add
inc
jmp
ret
mov
xlat
dec
addb
push
mov
xchg
test
das
pop
push
lret
daa
mov
jle
cld
clc
dec
and
xlat
loopne
scas
cli
daa
jp
and
test
roll
shl
ja
adc
jns
or
loope
or
shll
mov
or
rorb
pop
jns
sbb
add
popa
lahf
xor
cmpsb
sbb
shl
lret
pop
movsb
xchg
mov
dec
cmp
push
jae
sub
pop
jns
clc
mov
ds
imul
mov
jecxz
loopne
js
adc
jecxz
or
jge
fcmovnbe
fmul
jp
xor
in
daa
dec
frstor
add
sub
or
xchg
shl
pop
mov
jne
jle
mov
nop
pop
sub
sbb
fmuls
mov
dec
mov
push
lahf
and
cmpsb
adc
pop
in
cmpb
xchg
insl
mov
lcall
clc
out
das
hlt
dec
rorl
mov
js
mov
orl
sub
fmulp
enter
lods
pop
aam
jne
jbe
mov
sub
mov
lret
test
adc
test
pop
pop
push
aaa
inc
jns
shrb
xor
clc
push
out
in
ror
adc
inc
jle
cmp
mov
je
push
loopne
loope
mov
cmpsl
mov
sbb
dec
test
imul
xor
adc
cmpl
or
sub
sub
pop
jge
sbb
push
xchg
dec
mov
mov
or
fdivrs
popa
dec
sbb
or
xlat
ljmp
xor
and
sbb
dec
push
cs
pop
cmpsb
jecxz
cld
xorl
and
mov
jmp
xor
dec
sbb
or
icebp
xor
js
mov
and
mov
jp
test
sbbb
xor
pop
adc
ror
inc
jge
mov
cmc
fmul
dec
outsb
addl
sub
jmp
test
or
inc
mov
and
dec
sysexit
icebp
jne
lods
dec
push
sbb
dec
aam
rclb
dec
bound
iret
ljmp
sub
pop
pop
xor
push
mov
dec
sbb
test
mov
sub
lods
je
loope
cmc
mov
or
sbb
sub
cmp
xchg
icebp
in
mov
and
ds
mov
mov
ret
fs
inc
xor
sbb
lock
inc
cmp
pop
xchg
arpl
lea
loop
fsubrl
cli
mov
das
or
leave
pop
fdivl
push
dec
sbb
addl
dec
pop
sbb
fcom
cmp
dec
and
push
daa
sbb
cmpsl
or
test
aaa
jmp
arpl
stos
fdivrs
setp
loopne
push
cmp
add
testl
loopne
loop
and
mov
movsb
add
xor
dec
sub
scas
rdtsc
nop
mov
mov
fiadds
or
cmpb
in
xor
cmp
add
add
sbb
mov
add
ret
arpl
sub
xchg
outsb
hlt
push
scas
cmp
dec
xchg
inc
loop
cltd
xchg
lods
sub
push
stc
or
mov
cmp
loopne
sbbb
inc
jecxz
push
jg
xchg
dec
sub
call
xchg
out
pop
jno
fnstenv
lahf
cmp
mov
call
je
sub
mov
jno
mov
jo
push
push
pop
xlat
inc
mov
mov
inc
div
fstpl
pop
cmp
push
add
pop
test
arpl
cmpsl
inc
inc
cld
mov
scas
jno
pop
les
arpl
ja
int3
inc
scas
pop
repnz
and
loope
imul
dec
fprem
inc
outsb
lea
call
pop
cmpsb
lds
inc
fisubl
mov
cmp
dec
jbe
jp
dec
cmc
xchg
push
jge
scas
pop
xchg
aas
sbb
out
cmp
jg
aas
sub
loope
jp
bnd
inc
ja
mov
cmp
push
outsl
pushf
insl
es
jo
mov
sti
lahf
data16
and
pop
fisubl
pusha
mov
xor
sbb
mov
push
shrb
cld
jmp
xchg
imul
or
cmpsb
test
leave
ljmp
xchg
push
xchg
cli
loop
cwtl
mov
mov
push
and
sahf
mov
test
mov
mov
fisttpl
and
mov
add
xchg
xor
mov
lods
test
ljmp
loop
movsb
sub
outsb
lods
aas
aad
xchg
xchg
cwtl
pop
cltd
loope
aad
mov
pop
in
add
inc
andb
push
cmp
xorl
jmp
fadd
xor
add
cld
push
xor
inc
in
dec
mov
iret
aas
lcall
cmpsl
push
cmc
sbb
es
mov
xlat
jno
dec
cld
aam
aas
and
push
inc
scas
rolw
sbb
shl
rcll
sub
mov
dec
adcl
lcall
add
mov
jl
pop
add
in
mov
pop
lods
movd
adc
or
jnp
out
ficompl
mov
xchg
jp
add
inc
mov
sub
sbb
and
test
ljmp
fisubrl
pop
jecxz
call
xor
cmpsl
shll
imul
ljmp
xor
out
lods
faddl
jecxz
push
data16
call
out
outsl
push
cld
stc
mov
fwait
imull
ja
popl
test
ja
add
jl
push
insb
ficoml
divl
sbb
fsub
lahf
lcall
in
mov
xlat
lahf
jb
or
mov
ja
mov
add
enter
std
xchg
push
inc
and
sbb
cmp
dec
sbb
inc
cmpsb
insb
data16
shl
inc
push
mov
aam
shll
pop
es
iret
mov
mov
sbb
ljmp
rcrl
mov
daa
mov
jmp
pop
mov
pusha
dec
xor
xor
fldl
inc
insb
cmp
xchg
das
push
std
mov
loope
mov
fmuls
popa
pop
fistpll
jbe
or
fwait
arpl
push
sbb
mov
mov
cld
xchg
imul
test
push
jb
popf
pop
cwtl
bnd
push
push
iret
jmp
int3
fmuls
mov
sub
xor
mov
clc
xchg
and
push
mov
test
movsb
sub
aas
test
sub
jbe
pop
jns
sbb
jnp
popa
pop
sub
nop
loop
sub
test
jmp
sti
and
jg
jg
xchg
mov
or
mov
dec
and
inc
and
mov
aad
mov
xchg
mov
or
pushf
divl
lods
xor
pop
aas
push
fxch
dec
aas
getsec
jp
jge
lcall
nop
mov
inc
out
inc
ljmp
lahf
mov
das
mov
aas
sti
enter
or
cmp
andl
je
and
jo
dec
cli
jge
fldenv
movsb
popa
mov
les
scas
jo
fwait
cld
es
mov
stos
iret
cmp
or
fcmovb
jne
push
ja
out
aas
sbb
sub
xchg
test
pop
rcl
insb
leave
lret
xchg
xchg
add
fmuls
cltd
gs
aaa
mov
xor
movsl
mov
jb
jbe
inc
mov
testl
mov
shll
fs
js
call
fisttpll
divb
mov
stos
cld
cmpsl
push
add
mov
or
adcb
sub
ficompl
ljmp
mov
jp
stc
pop
cmp
cltd
push
mov
sub
mov
push
adc
addr16
ret
in
je
imul
sbb
mov
movsb
je
sbb
inc
imul
or
std
mulb
cwtl
cli
out
sar
xor
sbb
test
test
mov
mov
pushl
aad
cmp
test
jp
std
jno
cmp
mov
les
cs
int3
incb
cmpl
pop
push
fbld
mov
add
adc
scas
xor
pop
push
adc
lods
add
mov
arpl
aaa
iret
add
fistps
into
test
sbb
cmc
in
jb
push
stos
cmp
data16
mov
leave
adc
xchg
push
mov
jns
jns
pop
test
mov
xchg
push
shll
ja
xchg
shlb
hlt
jno
mov
inc
xlat
jmp
add
pusha
inc
add
movsb
add
add
mov
popa
dec
sar
xlat
push
test
pop
jmp
jl
mov
pop
in
pop
loop
and
rorl
jb
push
les
scas
div
cmp
movsb
int
mov
push
shlb
lcall
in
push
roll
ss
push
push
imul
popa
les
and
sbb
or
inc
call
mov
mov
sti
stos
pop
jmp
popf
out
popf
sbb
gs
into
mov
sbb
mov
es
adc
or
fwait
ja
push
sbb
inc
lods
test
andl
sbb
adc
js
xchg
scas
adc
mov
inc
addr16
adc
inc
insb
jecxz
mov
pop
dec
iret
ss
xor
decb
andb
pop
lods
sbb
lods
test
stos
mov
cmp
int3
fisubl
ja
fldcw
sub
and
movsb
pop
push
lods
in
inc
divb
fcoms
dec
push
nop
cmpb
sub
cmpl
out
push
xchg
add
xchg
adc
je
test
jge
enter
jl
cmpsl
jne
scas
fnstsw
or
aas
dec
push
out
enter
mov
repnz
inc
xor
mov
aaa
adc
mov
repz
push
cmpsl
add
nop
mov
scas
mul
sbb
xchg
loop
mov
add
imul
lds
add
lods
or
push
cs
jp
jo
and
xchg
cvtps2pd
push
adc
mov
bound
out
mov
enter
adc
arpl
aad
filds
stos
int3
daa
or
fidivrs
sbb
repz
in
mov
and
out
and
xchg
xchg
or
mov
test
repz
mov
fs
and
ret
jge
mov
push
out
mov
repz
fcmovnb
into
pop
dec
pop
inc
test
lret
aas
mov
stos
rcll
xchg
in
xor
jno
lahf
jae
call
inc
cmp
xchg
repnz
cli
fists
pop
ljmp
and
pop
imul
sub
mov
cmp
xlat
adc
cmpsl
xchg
arpl
clc
ds
or
adc
repz
cmpsl
and
adc
mov
je
inc
stc
bound
mov
mov
xor
mov
idivl
pop
insl
stc
dec
ljmp
das
daa
popa
in
adc
jno
push
loopne
mov
dec
pop
cwtl
mov
divb
lret
call
sub
cmpsb
and
jae
cmp
inc
pmaddwd
adc
sbb
or
add
and
fxch
test
mov
rep
mov
mov
jne
cmp
jbe
mov
jmp
push
inc
add
fidivrl
sub
push
dec
push
xchg
sbb
scas
mov
mov
mov
cli
jo
xor
negl
or
xlat
mov
test
push
mov
jg
out
dec
adc
ret
cmpsb
push
cmovno
dec
xchg
xor
pop
subl
cwtl
mov
dec
ljmp
lods
aam
shrb
or
lret
pop
push
and
scas
stc
mov
jb
dec
or
cmp
shrl
pop
xchg
adcb
ret
mov
sbb
rolb
lods
rcrl
jns
xlat
and
push
pop
inc
mov
jmp
mov
or
mov
movsb
sub
jge
mov
jmp
out
out
adc
push
int3
rolb
sbb
sahf
xchg
cmp
and
xor
mov
jbe
dec
dec
cltd
int
leave
jnp
subl
sub
cmpsl
insl
pusha
mov
xor
sar
mov
dec
adc
std
lds
mov
insl
cld
adc
inc
fs
das
cld
hlt
lods
ds
pop
fiaddl
outsb
sub
movsb
xchg
sbb
pop
pop
sub
pop
add
sub
mov
and
inc
aam
jge
add
cmp
xchg
loopne
ja
aas
jb
sarb
test
pushf
lret
mov
rcl
jmp
test
cmp
jl
ja
es
mov
xor
add
sbb
dec
loop
inc
subl
push
ds
data16
bound
dec
mov
dec
jl
inc
mov
add
je
loope
sub
das
jle
adcb
ss
setne
xorb
xchg
mov
shrb
faddp
sbb
ret
jae
mov
xchg
cmpsl
or
push
shll
mov
or
and
mov
fldenv
repz
lahf
pusha
jle
pshufw
sub
loope
add
test
popf
sbb
iret
mov
imul
mov
mov
sub
add
inc
push
mov
cmp
mov
push
loop
out
in
popa
scas
cwtl
cld
pushf
inc
mov
push
lods
cmp
jge
and
jo
jno
icebp
xchg
dec
mov
jge
mov
aaa
sbbl
xchg
jne
sbb
stos
call
inc
loope
pushl
mov
fucom
fnstenv
pop
stos
arpl
add
xlat
fisubrl
cmp
icebp
lea
hlt
ret
mov
stc
pop
adc
inc
and
adc
mov
test
cs
xchg
mov
push
jge
es
inc
adc
int
add
lds
cmp
mov
mov
lret
shl
sbb
add
insl
cwtl
outsl
push
cmp
dec
dec
shrb
pop
icebp
inc
ss
into
imul
int
inc
mov
adc
xor
sub
mov
sub
rcl
ja
cmpsb
cmpsb
mov
dec
mov
mov
xor
mov
xor
push
andb
inc
add
jge
cmp
adc
jg
pop
xchg
inc
dec
sub
mov
stos
inc
cmpsb
test
test
add
adcb
ja
push
push
jecxz
scas
std
jge
imul
mov
dec
icebp
subb
xchg
push
push
fildl
repz
ljmp
push
cld
adc
ret
sti
or
or
jl
inc
xor
mov
mov
in
mov
jnp
sub
sub
aad
sub
mov
fdivl
jo
dec
out
scas
aas
mov
lcall
jno
inc
sahf
mov
mov
or
sub
dec
and
imul
sbb
inc
cwtl
repnz
pop
testl
inc
sub
push
xchg
add
cmc
inc
je
adc
push
and
cmpsb
cltd
sub
lret
jno
xor
scas
shr
or
add
ds
jmp
sub
sub
jnp
loope
cmpsl
and
xchg
outsl
adc
sub
sbb
and
pop
fnstsw
mov
push
cmc
cwtl
int3
dec
or
iret
dec
out
out
hlt
add
add
aaa
jnp
sub
mov
mov
xlat
stos
inc
in
subl
divl
movb
inc
cmc
jge
in
xchg
gs
jo
in
in
xorl
adc
loope
fwait
pop
es
in
pusha
push
lret
jp
or
mov
push
lahf
cmp
pop
xchg
adc
rcr
mov
das
sub
call
aaa
xchg
outsl
outsb
sti
pop
mov
lods
jae
loope
pop
xor
test
call
xchg
inc
adc
or
in
ss
movsb
xchg
out
rorb
xor
push
data16
ja
jno
bound
sti
leave
or
nop
sti
enter
enter
stc
mov
or
out
imul
popl
cmpsb
fld
cmpsl
add
pushf
fdivs
outsb
dec
dec
mov
loope
arpl
mov
cld
and
ljmp
data16
dec
or
mov
movsl
xchg
daa
enter
fildl
sahf
lods
pop
fnstsw
jno
repz
jp
sbb
ret
icebp
adc
outsl
jp
shll
pop
inc
lret
adc
leave
mov
repnz
push
pop
pop
in
stc
push
repnz
mov
xor
push
out
push
lods
insl
enter
mov
xor
sbb
into
outsb
cmp
cmpsb
push
xchg
xchg
adc
movsl
xor
in
mov
jp
cmp
push
jnp
lcall
xlat
mov
dec
and
mov
jo
or
out
cmp
jge
out
mov
cmp
lods
cmpl
xchg
mov
xchg
xchg
adc
stos
push
jns
pop
jmp
cmpsb
sbb
int3
shl
or
in
or
pop
jmp
pop
add
sbb
sub
cmp
mov
test
xchg
int
adc
fisubs
xchg
loope
cmp
int3
sahf
xor
xor
sbb
nop
into
xorb
sbb
aad
or
jae
add
int3
pusha
fsubrl
dec
das
mov
into
xchg
jp
pop
mov
decl
push
xchg
cltd
or
sahf
mov
adc
mov
addl
add
ds
ret
jo
notb
aas
pop
sbb
sub
stos
jmp
mov
sarb
mov
jmp
sahf
inc
cmpsb
push
cmp
and
leave
mov
sbb
es
sub
sti
add
xor
ljmp
cmpsb
test
adc
js
cmp
mul
push
scas
jl
push
cmp
inc
adcb
movsb
lock
push
jle
pop
dec
mov
std
stos
popf
adc
lock
leave
inc
xor
mov
pop
and
sub
scas
ret
dec
ret
mov
cmpsb
xor
movsb
mov
lods
in
fistps
dec
cmc
pushf
div
or
stos
fwait
inc
das
and
inc
cmp
sbb
loop
enter
mov
mov
xor
push
scas
cld
xor
and
enter
mov
fists
xchg
jnp
ret
bound
into
out
jl
pop
pop
ucomiss
mov
mov
ret
lret
test
xchg
mov
fwait
rorl
push
inc
xchg
or
popf
aam
cmp
xor
mov
add
popa
out
mov
jle
jecxz
inc
dec
or
movsl
dec
sti
jne
in
cmp
loopne
inc
sbb
jne
test
sub
or
push
dec
ss
sbb
jl
js
push
push
aas
adc
bound
out
inc
shr
mov
and
aaa
jmp
push
into
mov
ficoml
fsubrs
fisttpll
fsubp
inc
sub
insl
stos
push
dec
movsb
dec
into
test
pop
rcrl
ljmp
iret
push
ror
dec
ds
and
xor
xlat
or
add
xchg
dec
xor
dec
stos
sbb
cli
lahf
xchg
test
adc
int
mov
mov
cmp
shlb
sub
pop
jne
js
ss
das
mov
fchs
mov
add
movsb
mov
lret
and
sbb
ljmp
je
mov
mov
mov
or
subb
in
push
sarb
or
adc
popl
je
aas
xor
imul
imul
mov
sub
lods
shl
inc
add
mov
sub
mov
nop
cmp
loop
push
push
mov
sbb
pop
jns
insl
or
lahf
in
mov
lds
adc
mov
pop
push
aas
pop
pop
ljmp
mull
in
adc
imul
sbb
sub
sbb
ja
pushf
lahf
pusha
out
jecxz
mov
cwtl
and
mov
inc
in
mov
les
sbb
jns
orb
bound
or
jp
inc
inc
ficompl
push
ss
lods
mov
scas
inc
out
cmp
sub
inc
mov
rorb
jne
sub
loope
in
outsl
cli
xchg
dec
xor
fsubs
or
dec
lock
add
dec
dec
adc
gs
aas
or
stos
mov
lahf
adc
outsb
lcall
mov
cld
sub
jo
je
in
lods
lret
mov
out
cs
mov
and
cmpsl
stc
jbe
jne
push
jle
and
aaa
sar
gs
add
push
cmp
sbb
fbstp
js
popa
sbb
clc
mov
cmpl
add
jae
je
test
cmp
dec
mov
cmp
outsb
icebp
push
sarl
shll
fstl
dec
jbe
mov
add
ret
pop
jl
xor
adc
add
push
pop
or
sbb
notb
fdivs
js
and
mov
jne
mov
ffree
lock
sbb
ds
ljmp
lahf
hlt
cmp
ss
sub
and
xor
sub
into
xor
imul
jo
test
sbb
fidivs
mov
incl
out
push
in
ret
sub
inc
mov
fisttpll
cmpsl
pop
mov
ds
cld
enter
cvtdq2ps
adc
jg
jge
add
in
cmpsl
push
sbb
dec
mov
dec
push
xlat
aaa
push
scas
pop
int
insl
adcl
inc
out
cmpsb
cmpb
cmp
push
cwtl
testb
shll
mov
mov
cmpsb
sahf
push
mov
sub
pop
sbb
cli
mov
adc
xor
jp
clc
pop
mov
pushf
mov
jns
mov
rorb
cli
or
pop
mov
xor
fimuls
gs
andb
mov
jp
inc
loop
cmp
xchg
xchg
dec
jne
mov
lcall
shr
shlb
stos
and
enter
loop
jle
and
test
fiaddl
imul
mov
add
pop
mov
mov
adc
aad
pop
mov
ja
mov
pop
ss
and
lods
das
cmc
lahf
inc
lds
aaa
shlb
sub
inc
stc
mov
sub
movsb
scas
outsb
sub
ror
lea
sbb
inc
frstor
sahf
push
or
hlt
sbb
pop
jp
mov
sbb
icebp
sarb
and
push
test
adc
add
mov
sti
adcb
insl
pop
or
outsl
js
jp
frstor
inc
inc
xlat
repnz
add
xchg
lret
imul
jecxz
popf
push
lcall
push
call
das
sbb
push
repz
movsb
test
mov
mov
and
jge
ret
shrb
aaa
xchg
test
js
stos
push
pushf
in
ljmp
dec
sbb
and
mov
jo
pop
sub
cwtl
or
cs
cmpsl
insl
pop
or
or
cltd
push
add
out
jp
test
xor
fdiv
sub
dec
addl
lcall
jae
mov
and
jb
mov
mov
loopw
fcmovnb
pop
imul
out
sub
sbb
pop
cmp
in
or
sub
cltd
dec
xchg
pushf
mov
mov
cmp
out
mov
jecxz
imul
rcll
cmp
inc
das
cld
mov
fs
xchg
mov
lret
ljmp
clc
jmp
fidivrl
stc
in
mov
out
and
mov
adc
or
sbb
ds
pushf
adc
inc
jns
std
xor
pushf
sub
xor
test
aaa
into
arpl
and
and
mov
add
outsl
mov
je
dec
adc
rorl
jno
jmp
mov
jne
fsubr
mov
push
out
pop
aad
ficoml
push
outsl
mov
sbb
out
jns
or
lods
fimull
sbb
fucomi
mov
jecxz
inc
icebp
and
insl
into
sub
inc
mov
push
mov
inc
xchg
stc
int
je
lret
inc
or
push
call
sub
ljmp
xor
mov
lret
popa
rolb
pusha
adc
pop
or
adc
sar
mov
inc
xor
pop
and
jbe
in
inc
inc
ss
mov
pop
add
dec
jge
pop
cmp
mov
in
lods
cwtl
js
loop
das
xor
pop
testl
mov
or
adc
xchg
push
xchg
out
sbb
fprem1
scas
sbb
or
aad
add
out
testb
mov
xchg
pop
dec
dec
fcoms
or
bound
insl
sbbb
dec
or
mov
call
push
outsb
pop
mov
xchg
push
dec
adc
mov
in
lret
inc
daa
fs
inc
lcall
sahf
divb
dec
ret
jg
addl
mov
sub
sahf
adc
je
or
lcall
push
mov
add
gs
sub
cwtl
sar
sti
insb
inc
jae
mov
xchg
dec
movsb
inc
out
mov
pop
in
pop
pushf
daa
jg
daa
mov
mov
ret
xor
loopne
dec
addr16
ljmp
and
je
rcr
and
add
fcomp
in
jl
sbb
xchg
std
adc
mov
or
sti
pop
dec
sub
jae
arpl
popa
cmp
cmp
xchg
xor
pop
insb
pop
and
aas
cltd
push
push
ret
cld
inc
push
mov
xchg
cmp
dec
or
fiadds
lret
lret
and
mov
push
ss
xor
sbb
shlb
notl
enter
inc
cli
mov
jg
or
out
jo
jp
out
in
icebp
adc
or
cld
mov
xchg
lahf
lret
dec
mov
mov
mov
stc
lea
shl
dec
add
xchg
xchg
xor
push
cs
jno
mov
push
lret
das
add
push
mov
push
inc
cltd
adc
dec
or
jbe
fsubs
cli
mov
xchg
out
cs
mov
stos
addr16
nop
xor
sti
inc
mov
das
jno
mov
jmp
adc
rcll
xchg
jne
sbb
mov
xor
jecxz
push
sub
pop
sahf
push
gs
addr16
mov
pop
mov
jo
loope
push
scas
jge
jae
cmp
shlb
ja
addr16
pop
mov
cltd
sbb
inc
bound
xchg
or
loopne
fdivrs
arpl
jb
in
sub
xlat
adc
in
sbb
mov
push
adc
mov
into
pop
inc
mov
and
aad
and
sbb
pop
jmp
push
dec
add
imul
popa
add
cld
fwait
push
ja
cld
shrl
shrb
int
add
adc
mov
jle
fisttpl
testb
and
orl
cmp
pop
shrl
mov
sbb
scas
mov
addr16
push
push
in
addb
sbb
mov
jbe
stos
sub
out
xchg
mov
jo
in
stos
aad
cwtl
inc
cwtl
cmp
and
cmp
cmp
loop
push
popl
stc
cld
push
ja
xlat
clc
pushf
sbb
repnz
ja
cmpsb
insb
cmp
adc
mov
pop
fcomp
fnstenv
mov
sub
test
ss
or
or
and
fisttps
push
es
shrb
popa
popf
mov
loop
lods
shrb
fcom
loop
mov
mov
setbe
mov
test
clc
aaa
out
mov
xor
mov
arpl
push
aam
mov
push
fstl
sub
in
jo
jnp
repz
cmc
or
sub
mov
mov
jge
jmp
jo
sub
nop
adc
ffree
push
shll
add
sahf
aad
test
jecxz
cmp
bswap
sbb
mov
push
push
jmp
jmp
mov
pop
fstps
sti
stos
add
add
jg
jno
push
std
lods
movsl
cld
ficomps
mov
xor
lret
and
inc
fcmovne
ret
enter
in
das
jecxz
clc
mov
es
xor
mov
fnsave
cli
je
jb
add
jne
loopne
stos
mov
scas
dec
cmp
and
sbb
mov
mov
inc
pop
pop
push
cmpb
add
fimuls
cmp
std
jne
rclb
cmpsb
fyl2xp1
xor
adc
insb
mov
subb
call
inc
ljmp
inc
push
xchg
jbe
iret
xchg
ja
mov
pushf
adc
pop
mov
cs
push
or
xchg
dec
or
pop
push
xchg
inc
xor
add
xchg
pop
sub
fisubl
shll
movsb
in
jmp
arpl
lock
add
sbb
adc
stc
ret
or
in
and
inc
cmp
pop
jge
ret
xor
jmp
int3
cmpsb
jnp
adc
add
pop
fsubp
sub
mov
xor
popf
lods
daa
sbb
cmc
int3
mov
test
lcall
dec
and
insl
aam
xchg
test
fstps
ret
cmp
inc
js
xchg
cli
leave
sbb
pop
jns
push
je
das
xor
movsl
add
push
xor
xor
xchg
fstpl
lahf
sbb
arpl
push
lret
in
popf
call
xor
dec
clc
add
adc
ss
jge
int
gs
jb
mov
fimull
sub
stos
and
jmp
sub
icebp
popa
incb
rorl
pop
xchg
pop
mov
ja
cli
xchg
pop
and
push
cmp
mov
rcll
insl
xchg
in
mov
aad
imul
sub
adc
cmp
xchg
addr16
mov
es
jmp
xchg
mov
sub
test
cld
flds
repnz
mov
sti
sbb
subb
imul
sub
cmp
pop
jp
or
lret
adc
mov
push
sub
data16
mov
fdivrl
adc
call
sbbb
sub
or
push
xchg
add
cmp
std
outsb
push
mov
xchg
push
mov
shr
out
leave
stc
xchg
stos
mov
inc
or
ja
scas
push
push
pushf
mov
adc
xor
and
push
add
adc
xchg
arpl
pop
lock
ljmp
add
dec
jmp
jnp
insb
mov
mov
mov
push
and
sub
arpl
inc
test
cld
pop
sahf
push
mov
sub
cld
fadd
jmp
sub
call
loopne
cmc
push
inc
lock
rclb
adc
in
cmp
xchg
clc
loopne
jp
add
sub
mov
shlw
mov
pop
lds
aad
loopne
dec
aam
add
in
push
fsubrs
scas
insb
xlat
cmc
sub
sub
test
xchg
scas
inc
add
and
add
push
es
aaa
cmpsb
push
xor
lahf
je
sbb
xor
or
jg
daa
xor
sub
dec
mov
lds
nop
sbb
xchg
popf
ret
adc
fs
jne
mov
add
repnz
and
dec
jge
ret
lcall
add
lret
popf
mov
adc
repz
inc
or
addb
mov
mov
stos
xlat
icebp
lcall
or
mov
clc
test
pop
les
push
outsb
and
mov
stos
pop
insb
inc
sbb
mov
mov
push
mov
push
sarb
jns
fs
out
loope
mov
jbe
dec
push
or
mov
test
push
add
lock
mov
jl
scas
jo
cmp
fucomip
or
movsb
xor
mov
cltd
int3
and
out
pushl
adc
inc
ljmp
hlt
fisttps
fadds
inc
addr16
scas
adc
loope
pop
stos
out
push
dec
sahf
jnp
loope
xchg
insl
test
fadd
mov
insb
mov
pop
mov
jo
hlt
dec
fs
lods
out
stos
pop
xchg
call
bound
jge
xlat
adc
mov
push
mov
jbe
hlt
cmp
sub
jecxz
out
js
dec
adc
fsub
divb
sub
pop
mov
xlat
test
inc
mov
sarb
mov
mov
dec
push
cwtl
clc
repz
sub
pop
cli
and
and
inc
dec
mov
pop
adc
xchg
in
pop
fldl
je
cmc
cli
test
movsb
cmp
or
lds
adc
jl
clc
xchg
jae
jp
add
inc
notl
fs
push
push
lret
mov
fildl
push
leave
adc
adc
pop
loope
sbb
add
push
jae
int3
mov
testl
loopne
xchg
testb
xchg
mov
out
into
das
rcrb
xchg
and
stc
jnp
sub
clc
jne
add
and
lret
inc
dec
shrb
pusha
adc
adc
out
enter
fidivrs
repnz
jp
negl
adc
push
mov
or
cli
mov
xchg
sbb
sahf
mov
outsb
icebp
es
jmp
bound
inc
jne
xchg
mov
dec
lcall
je
jae
push
mov
pop
imul
loopne
inc
sbb
adc
jno
jno
aam
scas
out
in
inc
xchg
xor
jmp
sahf
push
pop
fsubl
or
out
enter
jl
insl
fistpl
push
lods
push
outsl
jle
jno
adc
lds
test
test
and
jb
fwait
dec
lds
mov
jge
out
std
adc
lods
out
and
cmpsl
cmp
leave
jb
rcrl
ja
data16
sbb
mov
push
and
fwait
sub
pop
imul
push
sbb
sbb
addl
mov
push
les
push
jle
outsl
inc
call
in
imul
jbe
mov
jp
call
xchg
icebp
fimuls
ds
sbb
mov
cmp
dec
ret
xchg
imul
dec
jb
mov
push
xchg
adc
inc
mov
mov
push
subl
mov
mov
iret
jg
movsl
movsb
adc
insb
jl
pop
stos
loopne
loop
dec
xchg
popa
pushf
ret
xor
je
or
and
pop
ror
out
in
inc
jg
std
xchg
bound
sbb
jg
mov
popa
sub
mov
xchg
jg
test
dec
jge
movsl
pop
jae
xchg
mov
hlt
push
mov
cs
pop
cmp
push
out
cmp
push
jp
mov
mov
std
mov
inc
xor
pop
rcrl
stos
cs
mov
cli
fisubrs
jo
scas
push
data16
inc
out
adc
imul
hlt
cld
loopne
fwait
inc
xchg
mov
pop
arpl
daa
out
sbb
call
inc
aam
or
mov
mov
sub
shlb
lock
popf
add
cmp
or
pop
aas
jbe
lds
ljmp
test
leave
cmp
lods
out
adc
ja
xor
movsl
adc
jb
adc
push
or
cmp
lcall
hlt
push
int3
cmp
loop
dec
jo
add
mov
es
pop
sbb
scas
out
icebp
sbb
loop
mov
and
dec
mov
fwait
sbb
adc
ret
inc
shr
jno
xchg
aam
scas
xchg
xchg
adc
mov
sti
push
push
ret
mov
cltd
cmp
add
mov
mov
inc
xchg
mov
fsubs
jo
and
jbe
fstps
into
add
cmpsl
aad
xor
or
cs
add
and
jbe
fsubrp
and
mov
daa
shlb
jae
shr
mov
or
xchg
push
imul
lods
aas
cs
add
repnz
inc
hlt
das
cltd
sti
sub
push
js
scas
in
push
aaa
nop
lret
lea
add
ret
test
dec
sub
push
inc
imul
push
jno
push
ja
daa
sub
test
xor
imul
aad
test
cmc
mov
in
jg
hlt
xchg
jae
xor
loopne
mov
dec
mov
xor
xor
push
sbb
jecxz
push
and
sub
data16
nop
mov
std
fdivl
adc
adc
cwtl
jmp
jl
bound
sbb
fnsave
jnp
and
data16
lods
loope
aam
psllw
adcb
jl
lock
sbb
inc
add
mov
mull
inc
stos
aam
inc
es
outsb
xor
and
mov
mov
inc
mov
jae
push
or
gs
dec
iret
pop
pop
call
jg
xchg
and
xchg
adc
imul
and
sbbb
sbb
xor
xchg
pop
mov
loop
sub
sub
sub
xor
push
clc
xchg
sbb
je
shl
movsl
loop
jg
cmp
sti
lahf
dec
xchg
test
push
push
ljmp
inc
xchg
rclb
mov
mov
imul
and
sbb
fdivr
fsts
sti
xor
cltd
loop
and
pop
sbb
aas
fcoms
and
dec
lds
mov
cltd
and
fsubrl
inc
jp
sbb
mov
and
ds
cmc
ds
aad
xor
pop
sarb
testb
cld
push
in
or
mov
push
and
loop
shlb
mov
xchg
adc
icebp
movsb
mov
jbe
cmpsb
repnz
pusha
mov
and
and
psrad
das
repnz
dec
cmp
sub
test
popa
lahf
sub
shl
jns
testl
add
mov
out
sbb
jno
imul
xor
fidivs
dec
stos
lcall
int
je
pushf
sbb
mov
pop
xchg
pop
dec
push
adc
inc
icebp
gs
movsb
cmp
test
pop
and
adc
add
jg
cmpl
shrl
mov
xor
int3
sub
mov
fwait
es
cmp
lahf
push
mov
aam
int
push
push
fbstp
jmp
shll
mov
popa
enter
int
adc
pushf
mov
pop
filds
icebp
add
hlt
aam
mov
push
test
push
and
scas
inc
jl
push
and
pop
cmc
sahf
out
into
lods
test
cmp
mov
pop
lahf
xchg
ja
sub
jo
xchg
pusha
loope
outsb
xchg
mov
mov
and
andl
test
mov
mov
icebp
into
stos
jae
inc
jae
aaa
int
push
call
ret
test
add
sbb
xchg
repz
enter
movsw
shrb
mov
cli
bound
inc
jmp
pop
cmp
sub
jo
xchg
pop
enterw
dec
jecxz
insl
cs
mov
ficomps
adc
mov
sti
adc
mov
xor
cmp
inc
gs
data16
aad
inc
imul
roll
and
shl
and
cmp
sub
mov
cli
lret
daa
xchg
jmp
popf
push
xor
hlt
xchg
ja
pushf
repz
dec
hlt
push
push
out
lea
jae
lock
jle
call
pop
adc
ja
push
imul
arpl
cltd
stc
shll
sbb
popf
mov
jl
adc
adc
or
mov
scas
scas
and
hlt
inc
popf
push
sub
push
jp
stos
jo
mov
xchg
push
xchg
hlt
jl
mov
sbb
aas
mov
pushf
movsb
pop
add
jae
inc
lods
sbbl
ja
imul
ret
add
push
in
loop
inc
stos
sub
scas
idivl
mov
mov
in
pop
xchg
mov
push
loopne
fwait
lods
nop
sbb
push
cmp
xchg
int
sbb
push
xor
imul
dec
adc
mov
les
adc
adc
push
dec
lea
push
aaa
ret
fistl
pop
mov
pop
test
jns
jns
pop
into
fstpl
adc
jp
ret
mov
xor
push
lahf
ss
mov
mov
shlb
scas
lods
xchg
loop
fs
testb
and
cmc
xor
lret
rolb
mov
sbb
push
jns
jle
jmp
lea
stos
leave
addr16
inc
stos
std
int3
cmpsb
fldl
out
add
rorl
mov
cmp
sarb
ds
jns
jl
jl
loopne
fmuls
pop
xorb
sti
dec
mov
das
std
pop
popa
adc
shrb
sub
push
inc
aad
xchg
pop
push
mov
inc
fidivrs
imul
adc
or
int3
xchg
jg
mov
cmp
jne
xor
cmp
push
push
mov
mov
inc
or
pop
insb
test
xchg
pop
das
sarb
dec
push
xchg
out
xchg
jns
xorl
dec
rcl
mov
adc
add
addb
xor
shr
dec
and
dec
movsb
mov
adc
jno
and
push
in
adc
push
pop
lahf
jl
cs
push
movsb
sbb
jae
aad
mov
imul
repz
lss
xor
lods
dec
mull
push
jecxz
add
xlat
or
out
lock
cmp
sbb
pushf
or
or
mov
dec
daa
jl
aas
mov
ds
jmp
and
push
mov
test
pop
inc
mov
or
iret
shl
fcoml
hlt
les
mov
dec
xchg
mov
lea
out
cltd
sub
in
fisubl
in
icebp
or
insl
lods
leave
or
dec
add
test
xlat
popa
xchg
xor
adc
push
mov
ja
jle
in
in
jg
popa
jae
js
dec
mov
insl
sub
pop
rorl
cmp
pop
jg
leave
push
or
sub
jb
popa
ret
lret
jge
xchg
adc
pop
cmp
popa
jmp
adc
aam
jp
int
das
jmp
stc
daa
cmp
xor
cmp
sbb
xor
mov
cmp
outsl
mov
cmp
xchg
stos
outsl
clc
aad
into
sub
test
mov
ds
mov
cld
mov
push
lahf
jnp
stos
je
pusha
push
shll
insl
cwtl
mov
rcll
roll
dec
pop
outsl
cmp
jbe
cmpsb
xor
cmpl
or
outsb
or
and
xchg
add
xchg
les
cmpsb
iret
lods
inc
inc
iret
add
and
fsubr
xor
cltd
push
loope
sub
adc
push
sbb
gs
inc
dec
cmc
int3
and
lret
es
pushf
cwtl
push
rcll
jb
adc
adc
mov
in
daa
xchg
mov
ret
je
adc
push
scas
sub
clc
fists
push
mov
call
arpl
inc
sti
xor
cmp
scas
out
jb
loopnew
cmpb
mov
sbb
mov
lock
adc
mov
lea
ds
lcall
addr16
mov
popf
int3
and
cmpsb
imul
add
sub
movl
jge
iret
loop
jg
jmp
cwtl
stos
je
daa
pop
jnp
jmp
dec
shlb
and
jg
test
aad
repz
push
push
jns
imul
mull
adc
pop
add
enter
sbb
insb
nop
and
inc
mov
sarb
mov
xor
sub
es
je
dec
popf
inc
mov
push
fchs
inc
mov
clc
and
pop
scas
aaa
push
cmpl
push
scas
push
pop
xor
test
adc
fisubrl
mov
lcall
scas
xchg
setb
push
cmp
jmp
push
and
xchg
jb
jmp
sbb
in
scas
push
push
xor
fdivrl
aad
pop
or
add
test
cld
inc
shrl
or
pop
adc
push
rorb
sbb
push
inc
in
test
xchg
add
stc
and
mov
shlb
fildll
add
fldt
jle
or
push
inc
bts
nop
push
push
nop
cmp
js
rcrl
rclb
adc
das
cmovne
or
aas
enter
lods
pop
inc
xor
cltd
stos
jp
decl
xchg
and
fidivrs
xbegin
sub
repnz
push
je
iret
push
dec
adc
jae
push
or
scas
movsl
inc
loop
xchg
mov
call
mov
lods
pop
repz
inc
sbb
xchg
int3
lret
adc
cmp
xlat
cmpsl
aaa
movsl
sbb
xor
mov
push
jp
cmp
jae
fdivl
arpl
mov
sarb
mov
and
cs
add
in
xchg
fsubrs
imul
lahf
shll
add
mov
jmp
or
popf
jno
ret
lret
xlat
movsb
leave
add
sbb
loopne
dec
cs
mov
push
lahf
ret
inc
push
dec
push
ficompl
fcoml
pop
fldenv
nop
icebp
pop
in
fnstsw
stos
inc
sti
pop
in
fsubr
and
call
jbe,pn
sbb
jae
xchg
jno
pop
jl
push
jbe
mov
cmp
sub
insb
lock
stos
iret
in
sti
popf
jo
cmp
outsl
inc
movsw
xchg
jecxz
xor
out
jns
jno
int3
and
pop
adc
icebp
les
add
sub
sbb
cmp
insb
fdivl
mov
push
jmp
mov
fistpll
add
aad
sub
xchg
out
bound
aad
imul
sar
ret
movsb
addl
js
lock
push
rolb
stos
cmc
aad
daa
push
inc
adc
adc
nop
loop
test
inc
jge
scas
mov
pop
add
js
xchg
ret
dec
cltd
in
rcrb
cwtl
aad
leave
leave
fcomip
jle
xor
aaa
or
pushf
and
repz
je
xor
int3
lret
popf
rorl
js
inc
or
adc
test
incb
dec
add
cmp
bound
inc
inc
cmp
rcrl
cmpsl
inc
dec
gs
stos
xchg
push
fsubrs
loope
daa
mov
inc
lcall
and
or
fisubrl
push
mov
adc
lods
test
imul
jge
jnp
jae
jae
clc
out
jb
lea
stos
stos
fsubrl
das
es
jne
mov
xor
out
or
sbb
dec
cmpsl
shrb
xor
aam
aas
sbb
das
inc
and
or
int3
sbb
push
enter
roll
adc
decl
push
xchg
dec
aad
decb
pop
mov
add
mov
fdivp
inc
xchg
rcll
les
mov
test
scas
in
pop
data16
adc
and
in
and
aas
fidivrl
lds
xor
int
pushl
loop
jl
aam
push
cmp
loop
jecxz
iret
fisubrs
negb
xchg
insl
cltd
xchg
movsl
outsb
and
pushf
clc
push
in
push
gs
inc
inc
ljmp
mov
test
insb
aaa
roll
das
popf
shlb
and
jecxz
xor
mov
cli
sbb
jmp
ret
pop
mov
xor
loopne
sbb
nop
jg
pop
fistl
ds
inc
inc
sbb
inc
inc
pop
pop
fnstcw
cwtl
testb
test
das
jmp
testb
and
cmpsl
loop
imul
or
clc
sbb
xor
push
ret
add
das
rorl
ja
and
dec
movsb
shlb
roll
xor
imull
pop
add
lret
mov
das
or
je
sbb
ja
lock
xor
enter
xor
in
mov
jnp
mov
orl
imul
dec
cmpsl
out
cmp
mov
xchg
pop
xor
dec
inc
mov
or
push
cltd
test
mov
xor
int
aas
xchg
cmp
xchg
adc
sbb
outsl
pop
inc
jbe
mov
inc
stos
jp
cmpsl
sub
dec
cmp
mov
call
jne
ds
ror
mov
aas
xchg
mov
push
fs
rolb
fcomps
ds
in
sub
lods
loop
jns
dec
jp
lahf
data16
cmp
ljmp
jmp
push
shl
inc
test
sub
jl
mov
insb
aam
mov
push
test
fs
cmp
mov
adc
cmp
sub
fldl
leave
repnz
cmpsl
cwtl
cmp
and
pop
test
aas
mov
rcll
xchg
mov
and
pop
lods
pop
lods
pop
mov
sub
xor
cmp
aas
dec
daa
jbe
cmp
jg
imul
xchg
stc
sar
add
jno
mov
or
inc
push
mov
mov
sbb
std
loop
xlat
shrl
xchg
jecxz
xor
dec
insl
mov
inc
inc
std
test
or
pusha
sbbb
jo
xor
shll
int
gs
lcall
movsl
ret
in
mov
cmp
leave
addl
stos
push
jne
adc
imul
adc
cmp
dec
ret
mov
scas
or
mov
adc
xchg
and
cmp
mov
ljmp
shlb
pop
cwtl
loopne
mov
mov
xchg
cmpsl
incl
xor
lods
pop
mov
adc
push
jmp
loope
lea
push
inc
popa
mov
int
xor
call
les
scas
push
loop
push
mov
adc
dec
or
stc
xor
outsl
imul
incb
movb
shlb
fmul
outsb
cmp
inc
std
add
dec
dec
or
mov
incl
jbe
inc
out
inc
xchg
fstl
nop
arpl
jne
lret
adc
inc
sbb
loop,pt
and
ss
push
xchg
jge
sub
ja
or
push
pop
mov
mov
nop
jge
mov
aaa
pop
das
int
jle
mov
das
lods
push
mov
dec
add
dec
jb
adc
sbb
xor
dec
mov
les
sti
sub
adc
lret
inc
pop
sub
std
sub
push
sbb
sbb
dec
or
inc
cli
push
enter
adc
xlat
sbb
ret
xchg
and
sbb
jns
cld
and
repnz
in
sub
mov
cmpsl
movsb
ss
adc
lret
xor
in
cmp
int
dec
lret
adc
cmovo
rolb
call
mov
fcomps
and
fmuls
pushl
pop
jecxz
sahf
mov
xchg
mov
stos
outsl
out
or
jnp
mov
mov
xchg
push
int
out
jecxz
jmp
sub
out
jb
jl
aas
mov
or
push
lcall
sub
ss
pop
adc
add
sbb
pop
jno
pop
cmp
mov
sbb
xchg
mov
inc
cmp
sbb
push
lods
xor
jp
pop
imul
aas
push
add
adc
arpl
push
or
sbb
ljmp
mov
sbb
dec
jae
shrl
mov
ficomps
int
mov
outsl
mov
dec
test
xor
and
sub
push
xchg
andnps
adc
mov
inc
icebp
mov
int
arpl
mov
imul
les
xchg
sbb
cltd
dec
mov
push
shrl
outsl
sbb
hlt
adc
sub
sub
aam
bound
or
or
cmpsb
xchg
into
nop
mov
sbb
lahf
test
xchg
loopne
ret
sbb
shll
dec
ja
sbb
popa
movb
fwait
and
fistpll
pop
pop
sub
cmpsb
std
nop
push
je
cmpsl
loopne
into
adc
pop
or
lods
mov
test
es
jecxz
aam
icebp
lods
lds
sbb
adc
add
scas
dec
xor
mov
call
mov
pop
aas
fs
xchg
xor
test
push
xchg
add
jnp
jmp
ffree
pusha
push
adc
sahf
jbe
push
pop
adc
mov
push
xchg
jmp
mov
push
push
mov
cmp
pop
stos
mov
lret
lea
out
dec
jp
scas
lods
mov
rep
add
xchg
xor
and
sti
rol
insl
add
add
icebp
xor
icebp
fdivrs
push
ret
aam
cmpsb
xchg
pop
mov
les
cmpsl
leave
bound
lcall
add
inc
cmp
mov
push
mov
inc
pop
cmp
ret
sarb
mov
addr16
cmp
pop
ja
stos
pop
xchg
enter
scas
clc
xchg
stos
jne
fidivrs
rolb
and
mov
sbb
inc
sbb
lods
mov
insl
xor
enter
fildll
sbb
cld
or
lcall
mov
xchg
jns
fcomps
in
out
and
nop
test
pop
xor
jae
scas
push
arpl
sahf
movsb
or
stos
daa
jno
jg
push
sahf
add
fcompl
mov
and
loopne
push
or
pop
movsb
lea
aam
push
into
fdivrs
movsb
loop
mov
push
mov
sub
insb
pop
pop
mov
nop
adc
sub
mov
stos
push
rcr
imul
xchg
cmpsb
sub
mov
rcll
test
orb
jge
lods
xchg
lea
pop
inc
jno
mov
add
adc
jo
dec
and
push
lods
mov
pop
aas
pop
jnp
gs
mov
out
loopne
outsb
or
lcall
test
repz
dec
lods
addr16
aas
jmp
cld
cli
cmp
sub
dec
xor
dec
loopne
call
pop
fdivp
mov
and
popf
and
mov
sub
lret
mov
lock
dec
or
dec
push
push
insl
xor
xor
cmp
inc
sbb
xchg
add
cmc
icebp
aas
pop
movl
adc
pop
dec
in
and
out
in
leave
mov
mov
aas
mov
repz
or
aam
mov
shrb
nop
lret
cmp
push
or
popa
adcl
aas
jo
les
divl
inc
pop
arpl
pop
xchg
xor
fdivrs
inc
jo
sbb
mov
jl
pop
dec
in
stos
pop
pop
pop
or
cmp
sub
lock
mov
mov
mov
sbb
adc
cmp
cmc
mov
sub
call
inc
addr16
enter
add
out
loopne
mov
or
inc
inc
adc
rcll
shrb
and
and
in
or
mov
mov
and
xchg
pop
jl
adc
fisubs
mulb
shrb
jmp
sbb
cmpb
xor
lcall
lds
lret
mov
lods
into
repz
loop
and
push
shrb
xor
or
or
gs
orb
adc
outsl
xor
sbb
pop
xchg
testl
mull
cltd
or
adc
iret
sub
aas
or
lcall
push
decl
push
or
pop
loope
or
sbb
mov
and
dec
in
fwait
mov
sbbb
fs
xchg
xor
or
out
lods
sbbb
aad
lahf
jb
push
cli
xchg
scas
rcrb
es
mov
movb
fdivrp
pop
cmc
add
rclb
into
and
test
xchg
cmp
iret
sbb
sti
enter
sbb
sahf
loopne
in
sbb
pop
hlt
pop
mov
jae
adc
inc
in
dec
cs
test
xorl
push
clc
rcr
and
xchg
push
xchg
inc
push
lcall
fidivrs
daa
bnd
outsb
fsubs
xor
fsubrs
hlt
arpl
mov
lock
pop
pushf
in
cmp
in
push
push
cmp
lea
cmpsl
jbe
movsl
addr16
cmp
inc
mov
insb
pop
and
or
adc
out
xor
mov
mov
jmp
pop
jno
lock
inc
adc
mov
mov
mov
add
jno
xchg
pop
pop
mov
std
sbb
and
cmp
neg
mov
xchg
cmp
add
inc
pop
dec
pop
inc
fcoms
ret
pusha
fidivs
add
and
mov
or
push
jp
insb
xor
add
cmp
adc
outsb
shll
icebp
mov
sub
or
lret
in
pop
adc
shlb
or
out
push
fistpll
test
xchg
dec
push
ljmp
jno
mov
or
jo
lret
aam
es
sbb
mov
pusha
xchg
xor
test
rclb
je
lret
scas
sbb
pop
popa
repz
push
inc
push
sub
jmp
pop
push
fadd
inc
adcb
mov
push
xchg
repnz
rcrb
jle
xor
sbb
arpl
xlat
sahf
dec
jg
dec
cmp
add
xchg
int
jg
nop
sbb
mov
push
mov
rcrl
pop
inc
pusha
shlb
sub
add
xor
mov
inc
pop
into
dec
int3
or
xor
ljmp
xchg
cmp
cld
aad
ljmp
loopne
jne
jb
inc
lret
dec
and
ret
mov
and
xor
and
lret
mov
add
lods
rolb
shll
scas
addr16
sbb
mov
int
gs
addr16
movsb
sub
shlb
push
fistpl
jl
inc
sahf
dec
push
into
clc
jo
add
cmp
jp
mov
popf
cmp
jbe
push
ljmp
test
cmpsl
fwait
dec
test
fiadds
repnz
fs
cmp
push
aaa
and
sahf
xchg
iret
aad
or
jl
mov
lds
fwait
sub
mov
mov
xor
mov
push
add
les
add
gs
or
mov
mov
psllw
push
addl
loopne
lret
out
jb
cltd
aam
pop
dec
jecxz
into
das
fmuls
and
dec
fnsave
insl
arpl
sbb
pushl
ljmp
out
mov
ss
mov
add
push
test
ljmp
mov
cmp
repnz
xchg
or
add
addr16
sbb
cmc
inc
sub
sub
nop
arpl
mov
mov
popa
mov
mov
and
lock
and
cmp
aaa
es
pop
arpl
mov
push
ret
pop
mov
pop
icebp
jns
cmpsb
test
xor
aad
arpl
sti
mov
inc
fldl
pop
lahf
ljmp
sub
adc
test
and
fistpll
cmp
fwait
pop
out
xor
pop
repz
sarw
or
test
addr16
fcomps
sub
pusha
pop
iret
imul
pop
fildl
std
lods
clc
sahf
xchg
dec
or
test
push
cltd
imul
stos
adc
sbb
inc
xchg
mov
lcall
jo
cmp
scas
jmp
gs
jp
sub
shl
idivb
mov
iret
pop
sbb
push
fdivr
imul
adc
js
pop
sbb
scas
cmp
repnz
xchg
lods
aaa
xchg
pop
test
mov
cmp
shrl
insl
fwait
lret
in
fidivrl
in
test
dec
fidivl
les
cmp
popf
dec
into
or
xchg
inc
add
loopne
pop
shrb
lock
xchg
xor
xor
mov
mov
xchg
insb
je
mov
mov
das
arpl
mov
adc
xor
cmpsb
xlat
test
aam
jae
mov
xchg
mov
jb
mov
mov
and
roll
nop
inc
jge
fcmovb
push
adc
mov
jecxz
movsb
adc
data16
inc
popa
daa
inc
push
in
or
inc
xchg
fistl
cwtl
sbb
dec
in
cmp
outsb
push
mov
sub
xor
imul
int3
sub
push
pop
push
jae
fcomp
arpl
mov
mov
rcrl
iret
lcall
pop
outsb
mov
push
rcrb
mov
inc
mov
sbb
cbtw
pop
inc
shll
call
hlt
sub
push
pop
arpl
and
mov
bound
ljmp
inc
outsb
mov
daa
or
les
fldenv
jle
add
inc
inc
outsb
mov
add
xor
rol
das
clc
push
arpl
pop
adc
lock
xchg
cmp
mov
dec
sbb
in
daa
adc
pop
dec
cli
dec
loope
push
mov
cmpsb
jmp
adc
or
bound
sub
lcall
cmc
xchg
cld
fwait
jo
sub
enter
adc
cld
or
sbb
sahf
xor
dec
sub
test
mov
jg
xor
adc
stos
dec
jae
stc
repz
cmc
cmp
int3
ljmp
or
cmp
roll
loopne
lea
ljmp
nop
and
jle
dec
inc
shrl
mov
add
enter
scas
out
js
shr
mov
scas
adc
adc
push
fimull
push
stos
das
pop
andl
inc
jb
outsl
mov
arpl
loope
scas
les
add
cwtl
jp
ret
mov
int3
or
jb
adc
mov
inc
pop
dec
sbb
xchg
xor
fnstcw
cmp
adc
mov
outsb
xor
fwait
mov
push
push
or
fildl
pushf
push
xor
rcll
adc
or
cltd
jne
and
xor
loope
ljmp
xchg
mov
in
repnz
xchg
sti
xchg
xor
push
cmp
push
inc
hlt
and
mov
jno
adc
push
jno
stc
mov
mov
xor
jns
xlat
cmp
sbb
sub
inc
xor
mov
fbstp
lahf
jae
stos
lret
repz
out
jge
lret
jge
out
jb
ljmp
pusha
and
adc
pop
xlat
pusha
lds
arpl
mov
pop
xchg
and
push
clc
cwtl
mov
aas
mov
in
jmp
or
jg
in
jo
sub
repz
xchg
mov
std
xor
cmp
lret
cmp
push
stc
jl
out
sti
lahf
dec
sub
mov
fdiv
pop
sbb
jbe
or
push
je
jno
mov
in
outsl
aad
xchg
movsl
jmp
int
dec
xchg
cmc
mov
sahf
pop
pop
mov
rorl
add
mov
jbe
xchg
rorl
xor
pop
jns
mov
or
iret
mov
lods
scas
inc
push
cmp
popf
popa
mov
das
lahf
or
inc
loopne
jnp
jbe
data16
ret
or
daa
cmp
jo
inc
loope
fdivl
ljmp
cmp
jb
add
sub
cmp
push
sbb
push
stos
jmp
shll
mov
stos
jmp
mov
adc
lods
movd
pop
inc
cmp
mov
cmp
sti
and
dec
mov
add
les
inc
test
in
add
popa
xlat
fcmovu
push
pushf
repnz
dec
dec
or
add
aad
js
add
cmp
aaa
fcompl
pop
mov
xor
mov
jle
cmpsb
jecxz
xchg
insl
push
es
jg
xor
cmp
cmp
add
imulb
or
pop
or
sbb
loop
add
sub
js
sbb
or
je
mov
das
lock
stc
and
sub
jae
imul
enter
mov
jnp
xchg
lock
rorb
imul
aaa
decb
test
pushf
add
xchg
sub
pop
test
push
addr16
inc
clc
dec
dec
cmp
lahf
ffreep
pop
mov
imull
jns
cmc
mov
adc
mov
loope
jge
mov
cmpb
xor
mov
mov
and
push
andb
pop
movsl
cmp
adc
cltd
inc
cmp
dec
sub
mov
or
mov
int3
jne
nop
fiaddl
ret
lret
sub
ret
jne
and
cmp
mov
mov
jns
hlt
imul
bound
lea
fimuls
xchg
and
add
xchg
xor
mov
sbbl
push
into
ret
enter
sbb
movsb
popf
adc
inc
in
ret
imul
lea
xchg
movsb
js
pop
dec
and
jne
cmpsb
lock
xchg
lahf
pusha
pop
sti
cli
movsb
xchg
in
cmp
aaa
stos
dec
pop
or
mov
mov
fstl
and
inc
cmp
cwtl
dec
test
les
cmp
lcall
ret
ljmp
mov
pop
mov
sub
mov
mov
jo
daa
jb
add
xchg
jae
ja
adc
or
ds
jmp
mov
stc
pop
pushf
jbe
je
push
sbb
or
add
adc
cmp
jnp
sahf
int
xor
push
ret
push
in
sbb
pop
lcall
pop
mov
in
repz
inc
xchg
sub
aaa
and
and
scas
adc
clc
xchg
jp
inc
sbb
les
pop
xor
xchg
outsl
sub
lock
call
pop
imul
dec
add
jge
dec
lahf
les
push
cmp
jecxz
xchg
jne
jno
int
add
jb
fchs
movsb
ret
test
jg
in
ror
sbb
shrb
cmp
imul
mov
mov
cmp
sbb
mov
fcomps
ss
in
jae
aad
int3
xor
adc
mov
cwtl
imul
aam
ret
inc
shlb
jg
fsubrl
add
jp
psadbw
inc
inc
imulb
mov
lret
xchg
push
cld
xor
cs
aas
cmpsb
inc
adc
imul
xchg
mov
fsubl
imul
into
mov
lea
sbb
nop
pop
adc
insl
out
or
dec
and
mov
test
imul
icebp
push
pop
aas
sbb
push
scas
xchg
outsl
xchg
or
les
dec
inc
sub
cli
pop
add
cli
and
mov
scas
mov
jmp
movsb
cs
popf
dec
fwait
sub
jns
sbb
std
dec
cld
jnp
sub
fstpt
add
data16
and
dec
scas
mov
das
scas
pop
lahf
mov
in
gs
int3
pushf
lds
or
xchg
cmp
out
maxps
popa
xor
mov
push
jmp
arpl
sbb
cmpsl
fdiv
dec
push
sbb
mov
lock
jp
pop
pop
inc
repz
lods
fstpt
mov
call
cmp
inc
add
mov
cmp
pusha
aam
rcl
popf
xchg
mov
fstl
mov
ja
nop
mov
add
push
jb
fistl
jae
testb
dec
popa
jl
popf
leave
hlt
mov
pop
cli
push
jne
cmp
mov
loope
in
mov
into
mov
mov
mov
inc
aaa
cmp
dec
push
lods
dec
inc
loop
mov
lcall
xchg
or
bound
xor
rcll
jne
sahf
push
clc
lret
pop
push
xchg
mov
xor
jge
insl
mov
call
jg
fadds
xor
es
xchg
out
sbb
pop
mov
rcl
ja
push
decl
sbb
cld
jmp
aad
inc
adc
gs
int3
aam
xchg
imul
sub
cmc
scas
outsl
pop
mov
push
mov
or
lea
or
push
test
xchg
inc
insb
add
inc
xchg
xchg
jecxz
loopne
cmp
push
in
clc
fbld
inc
mov
inc
mov
in
gs
xchg
mov
cs
std
sbb
dec
es
lahf
cmpsb
mov
mov
daa
fdivp
idivl
xchg
mov
push
je
xor
push
fnstsw
add
negl
pop
and
fistps
dec
and
daa
xchg
popa
pop
xchg
inc
leave
addb
adc
neg
sub
xor
outsl
dec
and
cld
je
mov
rcrl
and
xchg
outsl
lods
call
add
lods
lods
cmc
xor
arpl
sti
movzbl
push
icebp
pop
push
in
push
xor
mov
inc
stos
fcom
dec
movb
imul
xchg
fs
xchg
jg
adc
test
push
mov
es
loop
or
xchg
daa
xchg
jp
cmp
shrl
scas
test
ret
inc
push
xchg
in
xor
or
mov
mov
mov
pop
xchg
in
int3
dec
adc
push
jne
or
mov
shrl
or
push
leave
cmp
and
adc
mov
mov
push
test
push
lds
sbb
in
and
mov
test
orb
cmp
mov
and
jecxz
xor
pop
inc
or
mov
popa
lcall
shrl
xchg
test
mov
out
in
cmp
out
insb
push
push
dec
stos
jmp
and
xor
es
enter
loopne
xchg
mov
into
adc
jne
andb
sarl
pcmpeqd
cmpsl
imul
rcrb
sbb
leave
sbb
fwait
dec
repnz
out
mov
mov
lock
cmp
mov
fiadds
inc
test
repnz
jecxz
inc
or
mov
icebp
push
push
mov
dec
ret
and
jmp
pop
mov
cld
frstor
sbbl
jp
vcmppd
sahf
or
andl
gs
mov
push
add
mov
mov
inc
cld
adc
lret
subb
lods
outsb
mov
test
enter
or
loope
push
xchg
and
out
or
add
pop
pop
lahf
mov
repnz
test
cmp
or
loopne
xchg
xor
push
jno
aad
mov
add
testb
inc
enter
fisubrs
aam
test
stc
popf
push
mov
cmp
jecxz
adc
push
movsb
mov
lods
fcomi
mov
test
mov
add
ss
cmpsb
aad
cmp
mov
int3
test
xchg
mov
in
mov
mov
push
xchg
lock
adc
popf
pop
popa
gs
and
or
xchg
push
cltd
fldt
xchg
dec
mov
lret
hlt
xchg
mov
ror
xchg
push
rorl
das
inc
mov
pop
jecxz
aaa
inc
dec
xchg
fnsave
out
xchg
daa
jae
sbb
setnp
jno
add
mov
dec
lods
xchg
jns
bound
hlt
bnd
fdivs
cmp
dec
daa
lds
dec
js
cmp
les
xchg
pop
push
loope
enter
sbb
sub
push
dec
fistpll
xchg
lock
sbb
cmpsl
inc
pop
cld
xchg
aad
call
ss
rorl
jg
or
lret
lea
in
mov
xor
jg
pop
jmp
and
sub
jb
fcompl
es
std
movsl
fisttpl
bound
lret
mov
or
enter
add
lods
loop
pushf
mov
mov
shl
lds
fcomps
lds
pop
sbb
ret
repnz
fidivrs
repz
outsl
ficoms
mov
scas
imul
fs
jle
das
mov
mov
cmp
sub
sub
sbb
dec
sub
mov
and
xchg
popf
repz
pop
test
dec
rorl
cmp
mov
dec
mov
dec
pop
cmc
call
mov
je
pop
iret
aaa
add
push
push
sarb
xchg
in
loope
mov
in
or
cmpsl
dec
inc
fidivrs
pop
sub
mov
cltd
test
and
add
push
mov
testb
mov
cmp
sub
push
jecxz
repz
dec
cld
ljmp
cmpsb
mov
sbb
jne
les
mov
loope
mov
int
int
pop
dec
dec
test
or
in
insl
or
or
push
lods
dec
cmp
xor
push
std
sbb
rorl
arpl
cwtl
imul
pushf
adc
dec
fs
adc
cmp
adc
enter
out
xchg
add
shrb
adc
xchg
stos
loop
punpcklwd
lret
inc
mov
push
ret
jp
xor
roll
in
pop
fcoms
xchg
mov
add
lret
adc
pop
xchg
inc
and
or
outsb
xor
mov
cmp
les
push
mov
std
jg
adc
or
adc
mov
fldenv
das
sub
add
sub
pop
pop
pop
jl
das
ljmp
imul
add
in
sbb
jns
and
lret
add
enter
jle
cwtl
sbb
je
std
sti
xchg
jb
mov
cmp
imul
movsl
mov
fs
dec
lds
and
push
cmc
test
into
push
push
adc
loopne
jle
jnp
and
iret
icebp
pop
fldl
pop
pop
scas
dec
xchg
push
loope
cs
shlb
test
repnz
mov
lcall
inc
push
sbb
xor
dec
jp
mov
add
adc
lcall
sti
mov
push
mov
ss
xor
mov
jae
add
fimull
add
repnz
pop
mov
popa
andl
cmp
cltd
notl
inc
ds
aad
hlt
insl
cltd
mov
out
sub
or
stc
repz
lods
fbstp
ds
cmp
aad
or
sbbb
jae
xor
lea
mov
ret
push
insb
popa
adc
pop
lock
sub
mov
in
pop
out
outsl
push
mov
push
push
fldt
mov
xchg
cmp
sti
in
pop
xor
push
sbb
sub
decb
xor
test
mov
xorl
inc
daa
mov
lahf
push
add
inc
xor
sbb
call
add
xlat
aaa
mov
jp
aam
pop
xchg
hlt
lret
cmp
mov
clc
push
ss
clc
ljmp
cwtl
mov
insl
iret
xchg
push
out
add
or
fldt
push
out
xchg
test
fs
lea
cmp
pop
shlb
xor
xor
jbe
mov
leave
mov
addr16
test
push
mov
mov
enter
jnp
mov
mov
popf
dec
inc
das
shrl
push
pop
xchg
es
shrl
jle
xorb
sbb
popa
add
dec
fisttpl
xchg
push
ja
mov
pusha
mov
addb
mov
push
or
rcll
ret
xchg
pusha
dec
sub
inc
or
notl
pop
in
add
mov
pop
sbb
mov
and
gs
js
aaa
mov
jb
pop
enter
pop
fsub
pop
push
gs
jno
sub
push
push
jl
or
mov
cmp
fisttpl
mov
mov
mov
insb
mov
mov
ljmp
dec
sbb
out
scas
notl
mov
jge
int
xchg
lret
sub
cli
es
icebp
imul
push
cmp
push
pop
rcll
in
mov
cmpsl
in
mov
jmp
loop
add
xchg
add
adc
cmpl
sub
sahf
mov
mov
sti
sti
je
fdivrp
insl
aam
dec
out
push
arpl
ret
test
xorl
mov
cmp
out
outsb
xor
pop
ret
mov
in
inc
sub
cmpsb
shl
mov
not
xor
inc
mov
push
fwait
ss
leave
int3
dec
push
cld
xor
lds
mov
lds
jmp
in
dec
jnp
out
ret
jle
lret
cmp
pop
xlat
mov
in
push
or
adc
loope
dec
in
sub
pop
jo
push
mov
cmc
sbb
mov
icebp
dec
sti
inc
shll
icebp
dec
es
adc
nop
sub
jecxz
lcall
and
je
pusha
mov
pusha
fidivs
dec
shlb
ret
rcrl
adc
arpl
hlt
in
mov
test
sbb
and
pop
arpl
hlt
test
mov
test
mov
idivb
enter
mov
mov
pop
flds
nop
cwtl
lds
dec
add
add
sub
out
inc
repnz
xlat
mov
push
jbe
test
fwait
jb
pop
push
xchg
into
ret
or
xchg
xchg
rclb
mov
idivl
xchg
mov
loope
scas
inc
xchg
jmp
cmp
cmp
into
shr
mov
adc
das
adc
movsl
cmp
adc
mov
and
xlat
or
into
adc
mov
xor
push
jl
mov
outsb
or
mov
es
dec
in
rcr
dec
add
roll
movsb
dec
mov
sti
fcomi
rorb
dec
enter
test
push
xchg
xchg
in
dec
jno
xlat
out
sub
stc
fcmovnb
in
mov
test
rcrl
xlat
or
daa
sbb
jge
or
xor
xchg
movsb
fildll
out
xchg
lret
inc
aaa
inc
cmp
mov
bound
sbb
pop
jmp
arpl
lock
test
sub
clc
shlb
jo
adc
in
in
jnp
lock
mov
rorl
jmp
imul
mov
inc
push
jmp
push
in
xchg
add
xor
xlat
jo
sbb
sbb
out
into
xchg
gs
and
stos
idivl
loope
xchg
or
add
jge
mov
adc
aam
scas
loope
shrl
jmp
das
xchg
mov
int
and
mov
repnz
loope
add
pop
mov
jbe
or
test
xorb
mov
cli
mov
fnstsw
aam
add
push
xor
cwtl
pop
jle
inc
push
fildl
addl
add
popa
pop
dec
or
mov
sbb
scas
mov
xor
out
imul
cmp
addr16
xor
lea
mov
es
sub
xor
fisttps
xchg
push
std
es
std
imul
jnp
adc
jns
dec
xchg
jns
dec
adc
xchg
sub
add
sub
inc
pop
push
cmp
lds
and
and
aaa
mov
adc
push
jo
in
movsb
out
xchg
aaa
jnp
push
sub
clc
mov
and
jle
imul
push
aas
lea
cmp
adc
test
jb
jge
dec
fs
inc
inc
mulb
std
mov
add
dec
and
mov
mov
pop
cmp
call
and
xchg
mov
push
and
add
repz
adc
or
mov
je
adc
sub
es
ret
outsb
sti
in
and
cmp
idiv
jo
ja
mov
and
mov
mov
inc
inc
fmull
and
sub
inc
dec
mov
sub
jae
lahf
cwtl
ret
in
mov
mov
mov
popa
pop
out
xor
leave
adc
leave
lock
xor
xor
push
pop
jbe
repnz
cli
lret
cmc
add
pusha
lahf
stc
xchg
movsl
ret
and
rcrb
xchg
mov
mov
pop
xor
pop
in
test
fdivrl
leave
xor
push
hlt
jge
or
inc
or
cmp
call
ja
test
pusha
cmp
cli
sub
jmp
pop
enter
lcall
inc
lds
adc
and
int
push
push
mov
pusha
pop
pop
int3
cmpl
aad
fists
fnstcw
in
inc
xchg
movsl
dec
aad
ficoms
aad
movsl
dec
or
filds
pop
jo
pop
pop
jp
jg
shlb
fcompl
or
ja
sub
lret
iret
mov
add
or
fdivp
push
jl
jne
mov
imul
jb
inc
dec
mov
test
addr16
mov
mov
sub
daa
mov
rcr
enter
cmpb
inc
loope
ds
call
push
arpl
mov
stc
jge
into
or
mov
mov
cmpsl
pop
jg
adc
lock
dec
pop
or
push
inc
roll
inc
and
add
mov
sti
xchg
mov
in
pop
mov
shrl
xchg
cmpl
in
pop
aad
mov
jge
es
stos
sbb
mov
pushf
xchg
sub
dec
adc
xlat
es
mov
adc
sahf
ficompl
imul
sbb
jb
xor
test
stos
cwtl
nop
test
sti
fstl
mov
lahf
and
loop
ss
dec
outsb
into
cmp
clc
dec
jmp
sub
cwtl
mov
mov
xchg
xchg
pop
imul
cwtl
iret
iret
rcr
and
int3
xchg
cwtl
sbb
mov
mov
mov
nop
pop
xor
insl
clc
bsr
lret
dec
sbb
in
out
fwait
add
icebp
fnstsw
cmpsb
ret
lock
lret
loop
rorb
call
inc
fistps
imul
cmpb
add
arpl
repnz
int3
sbb
push
jle
dec
les
add
into
or
rcrl
xchg
sbb
mov
xlat
clc
mov
fldenv
or
insb
jmp
xchg
mov
sub
loopne
insb
xchg
shll
ja
lock
std
ret
lock
xlat
adc
lret
arpl
ja
gs
scas
xor
mov
fistps
push
sub
gs
dec
mov
mov
fnstsw
into
fld
lea
pop
xchg
fldl
mov
dec
iret
mov
adc
outsl
mov
es
jmp
adc
push
jae
pop
fs
lock
into
in
mov
xchg
shlb
adc
and
pop
mov
rolb
data16
dec
and
mov
rcrl
cmc
mov
mov
sub
push
dec
popf
movsl
xchg
xor
notl
sbb
and
stos
jne
jl
loope
and
cld
pushf
lret
lea
pop
dec
inc
adc
cmpsl
or
push
pop
mov
inc
icebp
out
mov
cwtl
xor
adc
jecxz
mov
push
sti
xchg
arpl
into
aad
addl
cmp
lods
lods
aaa
mov
aad
data16
sbb
mov
adc
ss
mov
out
sub
jmp
repnz
divb
mov
lods
jnp
and
daa
add
add
cs
sub
insl
xchg
inc
rorl
dec
cwtl
push
sbb
bound
mov
mov
mov
xor
pop
mov
push
fwait
subb
data16
sub
andb
add
jbe
push
jbe
push
adc
jle
shll
inc
jns
stos
fcmove
roll
repz
out
hlt
push
fs
push
divb
loopne
enter
addr16
sbb
add
out
loopne
xchg
sub
pop
pop
shll
dec
lret
pusha
mov
xchg
lret
into
sub
pop
sub
mov
dec
mov
outsb
sub
cltd
adc
ret
mov
xchg
call
das
sub
stc
inc
pop
aad
sub
jnp
cmpxchg
mov
cmp
lahf
ret
fimuls
test
mov
fistpll
dec
fs
fsubrs
push
jbe
mov
xchg
lods
test
leave
jno
dec
into
adc
mov
aad
sbb
push
fcomps
xchg
rcll
shll
lahf
dec
jbe
rdmsr
push
adc
decl
cmpsb
dec
outsb
xor
insb
jg
cmp
hlt
dec
out
xchg
call
inc
loop
jecxz
inc
movl
das
mov
xor
in
sarl
pushf
aaa
add
push
xchg
fisttpl
rol
cmp
fwait
add
inc
mov
cs
sub
ss
adc
stc
adc
xchg
popf
cmp
fprem1
loope
fdivp
fisttpll
cmp
cmp
mov
lods
xor
sbbl
xchg
xchg
sbb
mov
pop
cmp
or
cli
jecxz
movsl
push
popf
iret
mov
jle
fcomps
cld
sub
mov
xor
mov
xchg
cmpsl
lret
je
pop
jmp
fbstp
push
cmc
adc
rcr
negb
cmp
mov
je
mov
fiaddl
fwait
sbb
in
imull
psllq
pusha
fwait
sub
popf
xchg
dec
jge
add
xchg
ljmp
or
push
xchg
pop
xchg
xor
stos
scas
wrmsr
push
vmovlps
add
pop
jne
xor
pushl
imull
cmp
ds
loope
adc
int3
adc
gs
ret
std
inc
sbb
push
jp
out
iret
ja
out
jg
push
sti
cld
movsl
push
xchg
push
hlt
xlat
mov
sub
pop
imulb
push
outsb
clc
and
xor
xchg
add
int3
scas
mov
nop
shrl
sbb
clc
mov
mov
push
add
call
imul
loop
sahf
mov
pop
cwtl
lea
pop
lods
cmpsl
jmp
imul
mov
and
mov
adc
dec
shll
test
bound
mov
jecxz
rcrb
cli
mov
lea
jmp
push
fwait
pop
xchg
and
dec
mov
in
xor
cmc
call
rcr
jb
bound
and
in
mov
dec
aaa
movsl
xchg
movsl
or
fldl
fcmove
jg
push
or
dec
sub
adc
mov
test
push
or
sbb
mov
rorl
inc
pop
xor
es
xchg
cmpsl
fxch
push
push
ret
and
out
xchg
dec
in
sub
push
xor
sbb
into
xor
sub
lcall
jno
nop
orl
adc
cs
push
dec
stos
push
std
adc
push
lret
rcl
mov
outsl
call
movsb
fucom
xchg
sbb
mov
out
ret
jmp
push
jp
cmp
and
cmp
rorb
fsub
pop
aaa
out
sub
and
test
xchg
mov
mov
fs
xor
shrb
divps
xlat
sarl
adc
sub
data16
fmull
jbe
sub
xor
pop
in
aam
popf
sub
push
lock
enter
push
push
lret
xor
mov
in
movsl
repnz
mov
es
jno
and
sub
rol
inc
jmp
stos
mov
and
mov
add
pop
js
notb
sbb
xorb
adc
and
dec
shrb
pop
cwtl
adc
push
movsb
imul
out
in
mov
push
clc
fistps
nop
xor
lret
add
push
lcall
std
dec
sub
pop
test
jl
mov
dec
ret
xor
and
pop
adc
push
addr16
or
xor
inc
std
add
adc
jo
mov
push
cmpsl
ret
lods
cmp
jne
bnd
or
popf
dec
sbb
push
mov
adc
cmpsl
xor
add
jle
in
cmp
repz
rorb
roll
aad
or
and
les
sahf
mov
sbb
mov
lret
and
jne
call
sub
scas
sbb
add
mov
loop
fwait
and
in
cmp
aam
outsb
sub
test
cltd
out
dec
es
xchg
inc
loop
inc
and
les
xchg
data16
dec
sbb
jne
inc
sbb
xchg
repz
xchg
in
lahf
fdivrs
push
xchg
jp
ja
jae
push
xchg
scas
mov
test
add
lret
fldl
adc
pusha
lcall
test
sub
movsb
out
jne
int
push
mov
mov
fildl
sbb
cld
xor
push
ret
xchg
mov
sub
bound
fidivl
add
add
jno
pop
xchg
out
add
push
jae
pop
adc
sti
and
add
stc
aas
jno
mov
in
sub
sbb
xchg
test
add
inc
pop
mov
sbb
loope
xchg
jbe
ret
push
ficompl
ficoml
mov
shr
pop
js
daa
les
xchg
lcall
pop
in
mull
pop
mov
cmp
sbb
pop
sti
imul
fsubs
and
fsubl
int
xchg
mov
adc
sahf
test
out
inc
cmp
arpl
mov
insb
pop
mov
add
bound
mov
jg
adc
in
popf
addl
icebp
fucomp
repnz
and
sbb
dec
mov
roll
das
movsl
jno
sub
fldl
lcall
in
ret
stos
pop
sub
cltd
xchg
cmp
loop
fmuls
adc
mov
pop
lds
imul
jg
repz
movsb
mov
jo
jnp
push
aaa
xlat
mov
lret
pop
adc
negb
lods
dec
inc
in
or
pop
aad
mov
xlat
xor
sahf
cltd
cld
orl
fstpt
ja
mov
in
pop
mov
jge
mov
xchg
cwtl
outsb
cmp
jb
addr16
data16
out
or
aad
cmp
adc
pop
mov
sbb
mov
fnstsw
clc
lret
and
cmc
lea
shll
repnz
test
sbb
push
out
jge
mov
mov
decl
mull
sub
jle
jne
ret
movsb
cltd
outsb
cmpsb
outsb
cmp
out
iret
dec
scas
dec
pop
filds
sarb
scas
pop
insl
lds
ja
aaa
sbb
jmp
and
jno
and
lods
jns
data16
lea
cwtl
jno
push
loopne
jmp
sti
popf
popa
push
icebp
out
movsl
mov
mov
mov
int
sbb
jecxz
jge
sub
add
or
jno
stc
push
add
int3
mov
ficompl
mov
cmc
xchg
cmp
movsl
outsb
fsubrp
pop
insl
pop
loop
dec
mov
decb
rcrl
xor
dec
cli
mov
mov
xchg
and
jno
or
jbe
inc
adc
rclb
mov
imul
sbb
push
jecxz
mov
icebp
ffreep
pop
mov
push
dec
mov
bt
add
sub
jb
fs
cwtl
fucomi
pushf
xchg
jl
mov
in
sti
popf
icebp
icebp
cmpsl
jmp
sbb
xor
lahf
push
mov
daa
pop
mov
cmc
subl
mov
xchg
cmp
pop
adc
loop
or
jecxz
jbe
mov
sub
push
insb
pop
pop
jmp
mov
pop
rolb
jb
adc
outsb
jge
push
clc
sbb
jg
pop
adc
push
mov
shl
cmpsl
ljmp
jnp
mov
sub
aad
mov
loop
or
xor
mov
jns
daa
sbb
sbb
or
addb
movsb
xchg
int3
cmp
dec
mov
sbb
xchg
and
insl
lea
dec
repnz
icebp
push
scas
cmp
jge
cs
neg
mov
sbb
rcrb
mov
lcall
negb
push
sub
popf
cmp
popa
mov
mov
adc
loope
cli
add
pop
cmp
cmc
pop
imul
push
stos
insl
ds
dec
sti
fdivs
ja
loope
stc
cs
xor
pop
pushf
fwait
mul
out
shll
mov
dec
insl
std
and
aaa
or
jns
cmp
add
popa
mov
sti
imul
inc
out
mov
icebp
push
jb
mov
mov
lret
mov
arpl
bnd
jecxz
js
mov
insb
and
adc
loope
inc
xchg
xor
mov
int
int
icebp
sbb
xchg
sbb
sub
push
sub
fdivr
mov
xchg
ds
fwait
sub
pusha
jl
mov
in
outsl
add
xchg
mov
push
sub
inc
jmp
xor
sbb
adc
fwait
xchg
or
imul
lret
int3
push
and
outsl
sub
stos
fnstenv
and
loope
xchg
in
ds
xchg
lods
sbb
ss
roll
jb
mov
mov
add
stos
dec
out
jae
bound
into
pop
cmp
mov
sbb
cs
fsubrs
fwait
das
out
scas
jmp
out
int3
mov
adc
test
test
int
mov
xchg
cmpb
cmp
ret
loop
pop
push
adc
mull
pop
test
cmpsb
fidivl
sub
fwait
xchg
mov
loop
pop
cwtl
aad
sub
or
push
or
mov
mov
ficompl
out
inc
aas
in
pushf
pop
mov
repnz
xchg
sar
push
sbb
mov
adc
pop
add
add
int3
leave
cmpsl
push
xor
out
jmp
scas
adc
mov
les
cmpb
sub
push
icebp
xor
cmc
ja
add
jne
sbb
test
pop
mov
dec
aam
cmc
cmpsl
sbb
nop
add
movsb
clc
fdivrl
mov
ror
push
mul
xor
pop
mov
jb
pop
cmpsb
jb
loopne
xchg
jae
xor
icebp
cli
clc
mov
jmp
aas
lea
int
outsb
sbb
daa
sbb
out
cmp
push
pop
or
mov
cmp
divl
les
add
push
mov
sbb
sub
xchg
pop
pop
mov
xchg
mov
fildll
out
ljmp
sbb
push
dec
mov
sbb
rcl
mov
loopnew
pop
xchg
test
fisubrl
sahf
insb
aas
subb
cwtl
enter
inc
inc
lds
push
or
pop
orl
fnstenv
fwait
daa
cwtl
loop
out
xchg
mov
mov
cli
cmc
add
add
mov
pop
xchg
icebp
jnp
insb
ss
jbe
or
je
loope
cli
sahf
jecxz
addl
jnp
enter
sbb
adc
xor
mov
cld
jp
scas
aaa
out
or
or
lcall
mov
icebp
jmp
adc
fwait
sahf
mov
push
mov
lods
insl
dec
fimull
cmp
add
call
jns
outsl
mov
pop
in
into
inc
cmpsl
mov
inc
shrl
mov
or
fisttpl
data16
jae
ljmp
dec
int3
adc
insl
jns
dec
mov
mov
es
add
fwait
in
jb
fdivrp
xorb
cmpsl
mov
sahf
xchg
push
stos
add
adc
dec
xor
pop
je
adcb
jnp
pop
mov
mov
xchg
cmp
pop
jns
clc
xor
int
lahf
iret
xor
jbe
sbb
cld
fld
add
pusha
divb
out
xor
es
sbb
push
movsl
frstor
lcall
add
int3
mov
rcl
dec
shlb
and
push
push
movsb
out
mov
dec
and
or
push
pop
outsb
xchg
mov
dec
stc
out
xchg
pop
loopne
mov
sub
jecxz
fnsave
daa
into
adc
or
icebp
add
loopne
mov
add
leave
mov
pop
push
sbb
lea
xor
ss
stos
test
push
lcall
jge
rol
cmpsl
dec
sbb
movsl
add
sbb
rorl
shl
sarl
fiadds
in
call
push
loope
es
sub
test
ror
daa
stc
insl
sub
sbb
testl
push
pop
xor
mov
dec
jo
cmp
jnp
jno
dec
ljmp
add
test
fwait
std
mov
andb
adc
stos
add
add
or
or
outsl
movsb
sahf
fiadds
pop
cmpsl
push
dec
outsl
rolb
int3
jne
pop
xor
add
lods
push
dec
xchg
sub
push
sub
subl
aas
xchg
fildll
ror
js
movsl
inc
mov
sbb
into
lret
shlb
xchg
mov
dec
sub
imul
mov
sbb
push
xchg
or
pop
sbb
jns
ja
push
insb
push
cmc
push
cmpsl
inc
movsl
cmpsb
adc
in
pop
jecxz
les
stos
push
xchg
xchg
mov
xchg
lods
and
push
aaa
loopne
fimuls
mov
cltd
shl
cltd
sbb
aad
aam
push
jb
cmpsb
jl
and
stos
xchg
adc
fs
stc
jns
pop
outsl
insb
jb
xchg
test
loopne
daa
jg
adc
daa
fcomi
outsl
fisubl
add
in
andl
sub
push
jo
icebp
aam
mov
outsl
push
int3
add
xor
mov
xchg
inc
xchg
scas
mov
or
scas
gs
pop
in
dec
mov
das
data16
dec
lea
shr
test
mov
jge
fwait
sahf
cmpsl
and
xchg
add
sub
jg
adc
mov
pop
and
imul
ljmp
mov
shlb
nop
movsl
and
inc
mov
pop
pop
pop
inc
insl
mulb
jecxz
movsb
mov
dec
lods
add
xchg
mov
xchg
repnz
fs
mov
fdivrl
jg
lds
and
adc
sub
and
rorl
push
mov
lea
jmp
sbb
add
cs
xor
pop
jl
pop
inc
cmpsb
mov
bnd
fsubrs
arpl
cmpsl
popf
dec
xor
jns
cmp
out
std
pop
sub
and
adc
es
test
int3
imul
push
xlat
icebp
out
ficompl
out
jp
cmp
and
scas
xor
sub
mov
jp
mov
mulb
jle
addb
inc
mov
pop
or
test
pop
xor
fwait
push
and
cmc
inc
mov
or
inc
movsl
mov
rclb
mov
mov
dec
repnz
or
cmp
add
pop
fimuls
ss
pop
or
out
xchg
pop
jl
mov
cmp
loopne
pop
rcrl
scas
pusha
cmp
dec
cmp
out
dec
push
fsub
hlt
xchg
mov
dec
sbb
out
scas
jns
inc
mov
ja
push
push
mov
fadd
mov
cmp
fisttps
jl
xor
mov
push
or
push
or
and
jmp
jnp
push
push
fimull
mov
fcmovne
sbb
cmp
aam
fdivrs
and
negl
fistpl
dec
pop
test
mov
rorl
sbb
jg
repnz
cli
xchg
ret
sbb
xor
out
fistpl
rol
jge
inc
jo
xor
enter
mov
and
ret
mov
rcll
adc
jle
adc
pop
pop
dec
ror
pop
dec
cmp
add
sub
or
lds
sub
jb
aas
add
loopne
scas
jae
cmc
mov
sub
dec
cmpl
cmp
push
dec
add
xor
or
xor
mov
jns
adcb
loopne
sbb
pop
aaa
fistl
mov
rcrl
in
cmp
push
mov
inc
push
sbb
or
popf
jmp
adc
in
rcl
adc
jnp
or
sub
sarb
jns
fldt
in
cwtl
and
mov
repz
xchg
fsubr
push
pop
gs
icebp
lock
loop
pop
arpl
push
adc
xor
add
ret
cmc
imul
outsl
lret
int
out
das
adc
cmp
and
mov
insb
pop
jae
int3
pop
js
push
notl
adc
ljmp
leave
popa
mov
cmpsb
jo
enter
test
dec
lds
add
sbb
push
mov
shll
dec
div
sbb
sahf
dec
or
outsb
pushf
mov
cmc
in
mov
std
lods
fcmovbe
hlt
shr
mov
in
and
xor
dec
out
icebp
imul
fmull
push
dec
mov
pusha
loop
mov
lock
inc
pop
xchg
std
fdivrl
add
rcr
xchg
rcrl
mov
mov
rclb
pop
or
mov
aad
in
popf
fmuls
mov
dec
sbbb
xchg
cmp
data16
and
insb
vcmpps
and
fistps
ljmp
test
in
push
insb
adc
jle
into
and
loop
shrl
pop
int
sbb
mov
xchg
lods
mov
xchg
imul
mov
or
cmp
fdivrs
in
mov
cs
pushf
inc
inc
jno
inc
lds
push
xor
cmp
mov
aas
int
jl
das
push
ret
push
lock
andb
and
outsl
sbb
rorb
pop
popf
sub
mov
aad
mov
xor
shll
push
sub
rol
mov
add
dec
jno
rol
lret
out
je
inc
stc
nop
push
dec
and
roll
mov
call
fstpl
add
cltd
out
outsl
xor
push
lcall
std
mov
lds
lret
fcomi
add
jns
aam
aas
icebp
rolb
arpl
xor
cmpl
mov
and
inc
std
pusha
stc
cld
adc
stc
add
push
pop
lods
mov
jge
iret
out
xor
xchg
outsb
pop
xor
and
jp
in
cmp
aas
cmp
sti
pushf
mov
mov
loop
les
clc
and
cmp
inc
xchg
arpl
sub
aas
push
dec
insl
or
mov
mov
sbb
insb
shrb
jmp
test
imul
inc
fs
imul
fnsave
leave
push
xor
mov
jl
jge
outsl
test
test
inc
aas
arpl
sbb
sub
outsl
in
out
jp
add
sub
pop
mov
inc
cwtl
pop
jns
icebp
out
pop
data16
jmp
or
int3
push
imul
bound
jmp
adcl
mov
cmp
call
sub
xchg
add
mov
cmp
mov
ror
inc
outsb
int
iret
mov
xchg
rol
adc
scas
addr16
pushl
imul
test
push
add
in
mov
pop
dec
das
push
fnstcw
ja
pop
xlat
add
aam
dec
loop
mov
sub
xlat
std
push
cltd
dec
mov
add
bnd
pop
sub
shrb
jnp
aad
ret
or
add
xchg
rcrb
lock
es
outsb
xor
cli
inc
inc
dec
or
outsl
mov
sbb
pop
cmpsb
cmpsl
jo
mov
xchg
rclb
push
mov
push
aaa
hlt
jne
das
lock
shll
cmp
mov
inc
outsl
test
jecxz
add
popa
push
pop
unpckhps
cmc
call
mov
cltd
std
jle
outsl
test
mov
jbe
adc
push
push
sub
xchg
cmp
mov
int3
mov
idivl
jecxz
into
dec
lds
insl
pop
push
mov
inc
add
daa
xchg
mov
in
mov
in
xchg
pop
test
loop
cwtl
outsl
or
test
insb
sub
dec
jp
out
fisubl
repnz
adc
rcrb
xchg
sub
xchg
jno
popa
and
mov
push
pop
fwait
daa
and
cmp
test
ret
dec
mov
mov
rolb
mov
mov
pop
sbb
and
dec
adc
scas
cmp
repz
in
fnstcw
ret
flds
push
pop
cs
stos
push
xchg
push
mov
fisubs
jmp
mov
mov
jnp
pop
xor
cs
cmp
push
inc
mov
mov
int
scas
adc
or
adc
shrb
pusha
dec
or
pusha
jmp
lahf
lea
rorb
and
jp
aam
in
movsl
mov
pusha
dec
mov
mov
loope
arpl
fcmovbe
movsb
scas
pop
and
push
loopne
lods
dec
es
dec
pop
inc
inc
adc
out
mov
xchg
inc
add
sti
and
xor
xor
xor
scas
test
je
test
iret
pop
fnstsw
xchg
xchg
outsl
das
cmp
adc
cmc
xor
les
pop
xorl
jns
out
and
mov
outsb
fcompl
pop
or
lret
daa
fucom
mov
pop
loopne
outsb
cmpsl
cwtl
mov
jno
pop
adc
cmp
or
sbb
clc
gs
mov
mov
mov
lock
fsqrt
adc
cmpsl
adc
cmp
sub
mov
fsubl
cmc
mov
inc
cs
sbb
mov
sbb
add
insb
add
pop
dec
shrb
loopne
mov
cmp
negb
sahf
cli
cmpsb
jl
jmp
stc
fsubrs
jmp
mov
fcmovu
int
cmp
push
push
xor
ret
jp
gs
fimuls
or
lahf
stos
popa
dec
sbb
ret
addb
scas
lock
test
ficompl
ret
sub
push
mov
mov
or
xlat
ret
dec
pop
jmp
lahf
or
cmp
stos
pop
pop
lahf
repz
or
jns
outsb
mov
out
adc
pop
fcompl
pop
dec
test
adc
into
push
fmull
push
xchg
and
or
push
xor
mov
lahf
lods
shll
js
pop
xor
iret
pushf
out
loope
mov
daa
sbb
rorb
mov
imul
loope
imul
nop
mov
pop
hlt
mov
add
add
mov
inc
frstor
lea
or
jg
paddsb
mov
mov
jp
stos
push
push
inc
sub
in
fdivrp
jge
call
out
mov
xor
movsl
aam
jg
loopne
xchg
adc
sti
imul
dec
or
cltd
in
jg
push
sbb
insb
xor
sub
mov
fildl
cmpb
xchg
push
sbb
roll
lea
jmp
test
sti
fistpl
lods
push
sti
dec
push
aaa
ret
jns
in
mov
insb
pop
leave
es
push
std
jecxz
ja
ret
stc
cli
push
sti
dec
mov
add
cwtl
jno
mov
push
inc
push
mov
mov
aas
and
insl
ficoml
lret
xor
push
ds
jmp
sub
xchg
andl
fstpt
dec
inc
and
jb
lods
outsb
push
dec
and
xchg
cmp
sbb
mov
jae
jae
sub
cmp
push
orl
ds
or
and
mov
into
loop
adc
imul
lea
inc
stos
xor
mov
jp
xchg
fsubr
cli
or
pop
jg
cmpsl
aad
pop
mov
mov
dec
les
int3
pop
imul
outsb
stos
negl
mov
lods
or
or
inc
jp
sbb
repnz
push
divb
mov
cmp
adc
xchg
cmpsb
mov
scas
xchg
or
add
fcomp
or
jecxz
pop
xchg
sbb
and
mov
in
cmp
sub
push
dec
daa
imul
nop
jno
rcr
pop
mov
aas
lods
inc
outsl
add
cmp
mov
sub
jl
jne
cmpsl
mov
or
fistpll
or
xor
in
push
cwtl
adc
lods
inc
rolb
xor
jbe
stc
int
xchg
sbb
in
lret
cmp
push
fs
xchg
lea
pusha
cmp
push
lods
vandps
leave
scas
or
dec
xor
push
fdivs
push
repnz
lods
ja
insl
imul
mov
sub
pop
ds
jmp
out
lock
xchg
pushf
leave
or
fsubrp
cltd
popa
sarl
sub
dec
out
pavgb
out
jmp
sub
jnp
loop
inc
inc
shrb
adcl
add
cwtl
push
add
push
mov
xor
les
sbb
stos
insl
pop
and
jno
subb
push
movsl
icebp
mov
adc
test
notl
orps
lods
mov
lahf
push
add
inc
or
rcl
dec
xchg
inc
gs
outsb
lret
xor
dec
cmpsb
rorl
add
cwtl
cli
out
add
pop
xor
std
push
mov
mov
in
cmp
lock
push
inc
gs
sti
or
neg
jmp
aaa
mov
dec
and
lea
inc
push
les
cs
enter
mov
adc
mov
ljmp
pop
movsl
pop
arpl
sub
mov
aas
enter
movsl
pop
stc
movsb
push
in
movsl
cmpsb
loopne
dec
int
fdivrs
addr16
mov
xor
hlt
and
sub
test
sub
mov
push
xor
dec
daa
ror
js
add
mov
lcall
popa
xorb
sub
dec
lods
dec
movsl
push
cmp
sub
cmp
fninit
cmpsb
popf
mov
cmp
lods
pop
mov
xchg
scas
push
xor
push
cltd
lea
add
rolb
lret
jo
jo
pop
xchg
xchg
pop
clc
add
xor
mov
enter
cmc
std
insb
xor
stos
int3
ss
adc
rcll
das
jns
in
cs
mov
into
cld
push
add
fcmovnbe
mov
jae
gs
mov
std
jne
add
pop
mov
mov
cmpsb
call
sub
lods
insl
xchg
cmp
cmpsl
mov
pop
mov
pop
inc
pop
sbb
js
dec
mov
cli
xor
add
jp
fs
frstor
mov
cmp
jb
push
mov
mov
add
scas
inc
cmpsl
jbe
jp
dec
fs
sbb
inc
mov
nop
repnz
xchg
nop
scas
inc
jl
push
loope
sub
jne
inc
aad
mov
bound
std
outsb
adc
xchg
pop
jmp
mov
in
inc
and
jnp
mov
jbe
loopne
mov
scas
out
xchg
mov
add
sub
int3
sub
push
hlt
test
or
cli
xor
xchg
ror
sahf
popf
stos
xchg
clc
push
cmp
cmp
stc
cmp
xlat
mov
mov
mov
push
in
lcall
cs
shlb
sub
ret
jmp
jl
add
xor
sub
push
sub
jae
mov
push
push
movsl
bound
test
mov
inc
imul
mov
lods
push
mov
popl
mov
mov
lret
into
lods
jge
rorb
dec
mov
jle
pop
xor
jge
imul
push
test
fidivrs
mov
sbb
mov
xor
mov
and
das
push
sbb
mov
jbe
jl
mov
insl
lea
mov
pop
into
add
xor
or
mov
push
arpl
outsl
xor
clc
inc
jae
js
jb
xor
repnz
push
icebp
outsl
mov
xor
adc
and
es
fldcw
mov
call
jmp
fwait
dec
sahf
pop
cs
xchg
jge
pop
imul
push
inc
xor
push
dec
xor
repnz
enter
dec
mov
hlt
dec
ss
xor
ret
arpl
test
sbb
xor
lea
out
popf
scas
lcall
fisttps
stos
sbb
out
clc
push
lret
jne
mov
cmp
adc
jne
inc
jnp
pop
push
sbb
xchg
push
mov
repnz
movsl
push
testb
lcall
dec
jo
icebp
out
push
sbb
call
and
and
stos
push
adc
adc
xor
jg
cs
push
adc
fadds
stos
adc
pop
out
in
or
outsb
cmp
pop
pop
lods
pop
cmp
popf
popa
dec
push
jo
mov
inc
lahf
bound
mov
or
cli
add
mov
lcall
bound
loopne
push
pop
mov
arpl
mov
stos
inc
out
xor
add
or
mov
test
leave
mov
jne
adc
lret
xchg
out
jbe
scas
lock
lock
lret
sbb
jno
cmp
popf
mov
stos
push
lock
loopne
popa
loopne
in
ljmp
loopne
test
xchg
scas
sarb
jge
xchg
daa
dec
rolb
and
loope
inc
inc
sub
in
mov
pop
sub
mov
push
mov
insl
add
adc
in
mov
jo
inc
insb
in
add
pop
int3
test
xchg
rclb
mov
mov
rclb
add
push
out
cmpsb
jge
outsl
iret
and
insb
addl
sbb
aaa
push
paddusb
cwtl
sbb
addb
clc
dec
adc
sbb
les
adc
scas
lahf
mov
inc
mov
mov
push
pop
push
jle
xchg
ret
hlt
cmc
push
movsl
loope
aam
int3
cs
mov
enter
mov
xor
adc
outsl
arpl
movsb
fldenv
fsubrl
push
sub
out
flds
cwtl
clc
cmp
adc
jmp
add
insb
xchg
cmpsb
sti
mov
push
sbb
push
cmp
pop
or
movsl
fs
stos
orb
push
adc
mov
dec
mov
fbld
das
pop
mov
sbb
jmp
ficompl
pop
jo
sbb
js
stos
or
cli
cmp
sbb
pop
jp
jae
xor
pop
outsl
clc
rcrb
arpl
lahf
incl
and
out
mov
xor
jp
mov
xchg
setns
xchg
inc
aad
lret
lahf
enter
xor
aas
into
mov
stos
mov
lds
movsb
jnp
and
mov
xor
and
push
push
jno
cs
add
mov
and
bound
xchg
xor
pushf
test
ja
push
pop
sub
sub
aam
push
mov
aam
mov
push
push
mov
lret
fsubr
or
mov
jp
xor
dec
mov
push
jae
dec
das
push
mov
dec
rcrl
xchg
out
mov
pushf
outsl
mov
xchg
pop
cs
repnz
aas
lock
push
in
lcall
popf
shrb
mov
roll
out
mov
dec
xchg
je
shlb
inc
out
loopne
dec
es
push
subb
sbb
mov
rolb
mov
stos
mov
sbb
ret
out
out
addb
push
sub
jnp
jae
jp
rcrl
mov
hlt
mov
dec
jge
fwait
push
add
negb
dec
in
push
xchg
lods
subb
daa
and
cli
nop
fst
and
out
std
push
jg
xchg
xlat
fcmovne
sub
fisttpll
inc
and
dec
lods
ret
cmp
mov
fs
pop
sub
popf
sbb
imul
out
mov
mov
jno
lahf
lods
and
insb
hlt
push
fcmove
push
cmp
sub
mov
loope
fnsave
cmpsl
roll
cmpsb
out
in
mov
cmp
loopne
insl
and
popf
push
mov
jno
imul
xor
pop
adc
ret
pop
shll
ds
test
inc
sub
xchg
pop
repz
push
mov
push
insb
or
cmp
inc
out
jecxz
jl
jns
push
jno
ret
inc
jl
mov
leave
cmpsb
lahf
sub
sti
movsl
jne
sbb
jp
push
push
lahf
in
fldcw
lret
aam
or
pop
xchg
xor
push
xorl
ljmp
jmp
add
inc
jb
orl
unpcklps
mulb
pop
inc
sarb
inc
xchg
mov
and
mov
jnp
sbb
xor
rorl
popf
jb
pop
aaa
dec
pop
out
lahf
xchg
add
outsl
mov
jle
mov
cmpsb
cld
adc
xchg
ss
pop
xor
pop
jmp
jge
mov
outsb
push
fisubrs
jb
adc
adc
in
divl
loop
cltd
inc
sbbb
cltd
inc
mov
test
stc
mov
pop
movsl
dec
ficompl
sbb
sub
xchg
fisttpl
xchg
dec
jno
xchg
shlb
aad
lock
cmp
jae
mov
popf
pushf
jns
pop
pop
jge
lea
xor
scas
repnz
insl
sbb
pop
mov
pop
mov
nop
imul
xor
dec
jecxz
repz
in
aad
sbb
cwtd
aas
test
dec
addb
lods
cmp
add
or
inc
mov
or
loop
dec
inc
mov
or
pushf
add
push
frstor
gs
xor
movsl
sbb
jmp
rorb
out
and
push
push
adcl
std
ljmp
loope
and
or
insb
rcrl
mov
jmp
sbb
jp
rcrl
xor
sbb
adc
jecxz
call
xchg
outsl
jg
lcall
mov
mov
or
sbb
shrb
xor
lcall
pop
pop
mov
ret
into
jb
push
cmp
fldenv
into
mov
ret
xchg
push
enter
and
and
cmpb
sbb
xchg
rol
imul
cli
pusha
pop
and
push
lods
mov
mov
xor
pop
xchg
adc
cs
ja
adc
mov
vroundss
cmp
mov
jb
adc
mov
dec
cs
cmp
xchg
das
pop
cmpsb
in
adc
or
mov
jle
stos
xchg
outsb
or
clc
mov
ss
das
aam
mov
enter
ja
jp
hlt
fmulp
ljmp
xchg
imul
pop
inc
and
outsl
add
jmp
aad
mov
and
push
lret
push
das
jg
sbb
cmpsl
cli
or
enter
call
int
mov
pop
sbb
shrl
cmpsb
sub
xor
out
pop
test
dec
pop
dec
push
and
xor
hlt
and
jl
xchg
push
xor
shlb
imul
and
and
stos
add
ficompl
cmp
fnstenv
pop
fdivrl
fmuls
dec
addl
pop
push
pop
xor
lret
inc
gs
mov
setl
jg
pop
cmp
mov
xchg
mov
xor
outsb
mov
xchg
sub
arpl
out
lods
xor
int
in
mov
jp
mov
stos
pop
dec
inc
fnstsw
and
mov
inc
stc
inc
pop
cmp
lahf
add
inc
jmp
sub
ds
stc
push
and
dec
push
push
fadds
scas
cld
icebp
jmp
mov
out
sbb
rolb
xchg
dec
test
or
mov
fisttpll
mov
js
push
insl
jle
outsb
insb
sub
out
pusha
cli
jp
daa
les
sarb
mov
jne
xchg
cs
xor
push
imul
ror
sbb
adc
xor
or
adc
push
or
mov
aas
xchg
icebp
outsl
stos
daa
insl
stos
mov
test
stos
jmp
push
sbb
ss
and
push
jmp
push
mov
cmpsb
mov
cmpsl
sbb
mov
dec
adc
mov
pop
int
inc
test
loope
jbe
add
or
push
imul
push
push
imul
lds
call
stos
std
gs
and
lea
mov
sbb
mov
lds
int
pop
push
loop
orb
in
adc
push
push
mov
into
mov
mov
sub
push
jmp
sub
and
fwait
imul
sbb
call
adc
dec
xchg
or
mov
mov
push
fwait
cld
mov
fimuls
dec
inc
or
mov
dec
mov
imul
pop
or
outsl
fs
aaa
mov
repnz
mov
ret
or
popf
xchg
mov
cmpsb
lahf
pop
ss
in
dec
add
ret
mov
cwtl
or
cmp
icebp
mov
jge
cmp
push
fmull
shlb
shll
js
fcomps
std
in
cmp
xor
loopne
dec
jbe
pop
sbb
sub
xlat
pop
push
dec
sbb
pop
pop
xor
stos
cmp
mov
sarl
lds
movsb
cmp
lea
gs
cmp
int
adc
dec
push
insl
and
leave
jmp
loop
out
loopne
adc
or
adc
mov
xchg
test
shll
mov
std
push
inc
mov
inc
mov
push
mov
pop
cli
xchg
aam
sahf
sub
jnp
jmp
rcll
inc
dec
mov
icebp
addb
cmp
jne
loop
je
fstl
aad
or
mov
sbb
stc
mov
or
addr16
imul
outsl
xchg
cmp
pop
sbb
stos
inc
in
into
and
mov
addr16
jne
les
repz
test
dec
data16
sbb
or
pop
jp
test
cmp
mov
call
jle
sub
test
fwait
push
jb
mov
add
sbb
orb
out
pop
push
mov
int3
jmp
rolb
lret
inc
test
or
popa
inc
out
sub
xchg
iret
stc
mov
or
pusha
neg
push
pop
jno
jb
sbb
cmp
jns
xlat
xchg
mov
pusha
mov
test
mov
push
test
stc
pop
sub
or
adc
mov
and
pop
push
icebp
cmp
dec
in
ja
js
arpl
sub
lods
mov
mov
or
gs
fldt
or
pop
pop
dec
mov
push
xchg
jnp
xor
or
sbb
mov
adc
inc
pop
and
jbe
cld
cmpsb
adc
lahf
mov
jl
jno
shll
test
in
ficomps
pause
orb
popf
data16
fisubl
cmp
sahf
int3
scas
or
xor
int3
das
cwtl
ret
daa
add
rorl
adc
sub
es
dec
ljmp
pop
sar
imul
lahf
push
aam
test
cmp
out
addr16
loop
dec
stos
in
in
xchg
xor
sbb
sahf
fadds
mov
es
mov
mov
sbb
inc
insl
or
jg
xor
adc
out
mov
andl
loop
lods
dec
test
inc
ja
in
scas
and
add
adc
sarb
lea
lds
iret
mov
mov
pop
push
pop
int
ljmp
sub
std
hlt
pop
mov
mov
pop
sbbl
repnz
push
mov
loop
into
ss
mov
sbb
outsb
mov
mov
aas
iret
jnp,pt
ss
pop
or
inc
or
mov
cmpl
in
shrb
mov
xchg
inc
pop
jmp
inc
into
imulb
sbb
loopne
dec
pop
adc
daa
ds
jb,pt
ret
ret
dec
sti
sahf
lods
sub
sbbl
lods
or
shlb
lds
gs
repz
scas
fistpl
lea
mov
jge
les
pop
and
adc
add
das
iret
jp
sub
inc
sub
inc
fucomp
or
cmpsl
jns
pop
push
cmp
cmpsb
mov
pop
add
loop
test
lock
xchg
push
xchg
xchg
xchg
mov
bound
repnz
ljmp
push
push
dec
and
sub
shll
sarb
cmpb
xchg
daa
ret
bound
out
sbb
andl
ja
jl
fisubrl
dec
push
push
push
sbb
mov
test
mov
jns
push
hlt
adc
inc
adc
xor
cmp
mov
sbb
or
cmc
push
sbb
mov
xlat
sti
jl
add
pusha
mov
or
or
jecxz
pop
int3
pop
in
sbb
das
adc
cld
pushf
popf
adc
mov
adc
movsl
out
ds
hlt
cmp
mov
mov
in
out
xchg
aaa
xchg
sbb
inc
jge
out
inc
ss
pop
pop
add
sub
subl
and
imul
out
inc
push
adc
lcall
mov
cwtl
div
jnp
fwait
scas
pusha
pop
jl
dec
cmp
out
xor
fisttpll
adc
jb
imul
jge
jne
push
dec
popa
cmp
addr16
dec
icebp
or
es
scas
sbb
jge
cld
inc
adc
lahf
test
push
dec
dec
xchg
je
imul
cmp
or
lds
out
out
adc
pop
lds
jmp
idivb
cmp
push
sbb
xor
push
into
aas
jp
xorb
cmp
cmpsl
orb
add
adc
sbb
dec
mov
mov
xor
xchg
sbb
xchg
andl
ljmp
mov
sbb
cmp
loopne
add
das
dec
mov
and
xchg
stos
jno
fmull
rolb
insb
inc
inc
out
outsb
mov
and
dec
cmp
sbb
mov
daa
pop
lahf
pop
jle
and
in
fs
push
sub
add
fmuls
clc
mov
push
andb
and
pop
push
add
cmp
mov
and
xchg
push
xor
cmpsb
aad
xchg
sbb
mov
pop
sbb
es
in
push
push
and
adc
ror
jns
bound
rolb
mov
pop
mov
pop
mov
xchg
sub
pop
jo
mov
pop
fiaddl
divb
mov
stc
push
mov
shr
and
xor
mov
jb
push
cmpsl
test
subl
out
leave
and
or
and
adc
sub
inc
push
mov
ss
mov
mov
in
shufps
jae
call
subb
jg
mov
add
lods
or
cmc
insb
jns
mov
jl
fistl
je
gs
cmp
xlat
cmpsl
push
test
fsubrl
add
sahf
mov
cld
fdivrl
inc
adc
fmulp
push
pmulhuw
push
cmp
inc
sub
sbb
xchg
arpl
mov
insb
test
jge
sbb
dec
jno
pop
cmp
test
cwtl
mov
dec
push
ljmp
mov
push
lcall
xchg
jle
call
ror
mov
pop
cmp
maxps
adc
hlt
jae
repnz
daa
ret
arpl
mov
les
in
jo
out
stos
decb
mov
add
adc
dec
add
and
lds
aam
rcl
movsb
out
and
jl
leave
ret
jg
dec
lock
sbb
cmpsl
push
cmp
adc
mov
mov
jae
xchg
dec
cmp
imul
pop
or
out
movsl
sbb
xor
or
pop
jge
in
mov
jp
sub
push
jae
lret
pop
mov
fdivl
mov
popa
xorb
dec
jns
jg
push
data16
fisubrs
ret
xor
fs
adc
sub
cmp
loope
es
jmp
outsb
data16
addr16
push
aad
push
sbb
push
push
sub
push
dec
mov
xor
mov
xchg
push
pop
sbb
sub
xchg
or
inc
test
aad
inc
xchg
out
in
or
cmp
cmc
incl
pushl
std
and
xor
jmp
js
adc
cmc
mov
jo
push
imul
mov
lahf
rorb
pusha
ja
pop
push
and
lea
xchg
mov
sub
cld
jmp
pop
out
pop
aad
imul
sub
push
addr16
sbb
rcll
popa
dec
jg
mov
sub
xor
lcall
jl
add
sarl
test
or
ja
dec
mov
jecxz
xchg
int
lahf
add
xchg
xor
mov
je
dec
bound
cmp
out
test
ds
lea
pop
cmp
push
add
pop
mov
test
cmp
dec
decb
xor
jecxz
mov
xor
loope
pushf
mov
bound
std
push
shlb
daa
icebp
ss
add
mov
adc
sub
insl
les
scas
imul
fwait
pop
mov
adc
aaa
hlt
jb
mov
mov
clc
arpl
aam
scas
and
enter
and
cmp
out
and
push
inc
adc
xor
pop
ret
test
mov
pop
cmc
call
loopne
xlat
sti
xchg
or
add
add
mov
pop
jle
pop
xchg
push
xchg
mov
sbb
mulb
dec
or
imulb
fwait
outsl
jnp
adc
mov
es
xchg
add
cli
push
je
fisttps
and
xor
mov
cmpsb
adc
pushl
imul
xor
cmc
sub
int
and
cmp
cli
sbb
cmpsb
xor
or
pop
bswap
fistpl
insl
add
mov
scas
push
cmp
cmp
mov
mov
lahf
or
imul
add
aad
cs
mov
dec
push
xor
faddl
movsb
lcall
std
pop
cmp
pusha
jmp
popf
mov
and
add
loop
cmp
aaa
ljmp
mov
xorl
enter
push
push
cwtl
out
mov
cmp
es
nop
pop
mov
movsb
pop
jge
call
je
hlt
or
popf
inc
sbb
push
pop
out
pusha
test
mov
adc
mov
jge
push
xlat
jg
stc
inc
jp
xor
int
mov
mov
sbb
cmp
jl
jle
fnop
push
lret
jmp
push
lcall
fsubl
and
shll
in
dec
fidivl
xchg
mov
imul
cmp
push
pop
lock
pop
dec
mov
sub
sbbl
aaa
inc
test
fimull
mov
insb
mov
das
lahf
scas
jmp
push
pop
jbe
add
xchg
push
sahf
dec
push
shlb
cmc
mov
lds
fmul
adc
stos
pop
mov
pop
iret
push
xor
dec
sub
push
dec
or
and
das
inc
sub
sahf
cmp
push
fisubrl
push
pop
daa
and
adc
das
xchg
xchg
mov
pop
lods
loop
loop
mov
jg
daa
pop
pop
xor
lds
es
dec
dec
in
cmp
stc
mov
fistl
and
add
mov
loop
movsl
xor
and
out
push
aad
je
data16
dec
scas
daa
inc
jnp
cmc
aaa
orl
mov
xchg
xor
test
mov
lods
pop
incb
fsts
mov
inc
es
mov
mov
outsl
and
cmpsw
adc
adc
or
dec
xchg
mov
lcall
fwait
cld
loope
div
inc
inc
ja
add
dec
fistl
sbb
mov
sbb
adc
lods
pusha
pop
mov
in
xlat
pop
lret
mov
xor
hlt
adc
testb
inc
leave
add
bound
sbb
inc
inc
out
sub
add
inc
pop
pop
add
nop
test
cli
jmp
mov
mov
or
xor
insl
jne
xchg
call
xchg
jg
mov
shlb
repz
das
mov
sbb
xor
faddl
outsb
sub
mov
mov
das
push
mov
jnp
sub
push
out
lret
push
aam
cmp
ss
sbb
push
mov
sar
push
pop
push
icebp
jl
aam
outsl
sahf
fnstenv
dec
lock
push
xchg
stos
imul
cmp
mov
stos
xor
adc
cmpsb
pop
rclb
jecxz
mov
fs
pop
add
dec
jnp
mov
clc
inc
mov
jne
jmp
ja
test
scas
test
mov
xchg
icebp
lahf
cmp
mov
pop
cmp
dec
push
jb
mov
stos
inc
jmp
pop
dec
xor
add
scas
cltd
mov
sbb
lods
pop
lods
mov
popa
jne
fs
cmp
mov
sti
in
pop
jmp
mov
lock
xchg
nop
adc
aas
push
push
add
jle
or
call
int
push
adc
movsl
pop
mov
or
mov
xchg
ret
shlb
out
pop
addr16
jmp
sahf
jns
stc
mov
add
adc
jbe
lcall
dec
jg
repnz
mov
movsb
cmp
xchg
rclb
mov
inc
and
dec
adc
dec
inc
mov
fwait
pusha
pop
loop
mov
xor
xchg
mov
lret
sbb
es
jmp
xchg
out
dec
cld
jae
pop
or
sub
pop
sub
cld
add
and
mov
cli
xchg
push
leave
lcall
fldcw
iret
add
mov
mov
mov
sbb
xorl
stos
sbbb
pop
sbb
sub
lahf
cli
decb
dec
in
pop
mov
mov
fcmovnu
lock
rcrb
imul
jb
and
fstpl
push
and
and
mov
pop
cmpb
and
sbb
or
inc
xchg
sub
arpl
pop
lahf
or
inc
jmp
pop
std
fstps
pop
scas
sbb
dec
inc
jl
cmp
test
sbb
dec
lret
xor
push
adc
mov
add
and
mov
mov
aam
mov
add
adc
inc
lret
jbe
pop
pop
inc
cmp
jmp
mov
pop
cli
cs
test
outsl
xchg
orl
inc
test
or
ficoml
jo
mov
mov
stos
mov
dec
adc
subb
or
mov
or
movsl
cmp
and
adc
imul
jbe
pushf
shl
in
adc
movsb
insb
jae
lea
inc
movsb
lret
push
push
popa
jg
or
into
repz
pusha
sub
cmpsl
add
and
add
sub
pop
jnp
scas
cmp
mov
in
stos
iret
lret
dec
insb
mov
mov
cmp
mov
clc
outsl
pop
or
dec
pop
mov
sbb
xchg
xchg
clc
or
dec
repnz
mov
mov
or
es
pop
shll
push
mov
into
repz
loop
add
dec
cmp
sbb
dec
cltd
daa
insl
or
xchg
mov
cmp
std
push
lock
enter
mov
adc
pusha
fsub
cmp
fdivs
or
xchg
popf
in
mov
gs
pop
inc
push
movsb
insl
mov
or
xchg
lds
pop
lcall
mov
cmp
int
xor
js
mov
adc
cs
add
push
scas
sti
push
sahf
inc
push
cmp
ret
repz
popl
sbb
lret
add
addl
mov
jge
out
xchg
jmp
push
pop
ss
xor
outsl
and
xchg
xchg
loop
outsl
scas
aaa
ljmp
pop
cmp
inc
outsb
repnz
mov
jno
loop
stos
mov
cld
jo
jmp
cmp
jbe
aas
mov
push
bswap
mul
cmpsl
sahf
hlt
fwait
addr16
fsts
sahf
xchg
cltd
push
adc
insb
add
lock
subl
sub
pop
sub
shll
flds
je
movsl
jb
cs
push
push
adc
and
inc
aam
shll
jge
cltd
pop
jns
cmp
push
add
xor
sti
inc
xor
js
int
lret
loope
xor
mov
mov
addr16
xor
ljmp
pop
add
ret
lods
xor
xor
inc
mov
jbe
mov
ret
bnd
mov
movsb
jb
clc
fsubp
fidivrl
sbb
aad
mov
dec
dec
mov
dec
jno
pop
pop
mov
out
cmp
sbb
mov
inc
push
fs
push
mov
ffree
jns
orl
loope
cmp
incb
dec
mov
shlb
lret
cltd
shrl
mov
movsl
lods
out
sarl
pop
jle
std
fwait
sbb
cmp
xlat
jp
sub
mov
or
data16
scas
fnsave
js
and
popf
xor
fsubs
ret
xchg
repz
add
repnz
xor
sbb
xor
clc
cmp
push
shll
fsubrl
dec
sbb
mov
test
aam
and
cmp
lea
mov
pop
mov
enter
inc
cmpsb
pop
divl
pop
pop
mov
andl
cmpsb
adc
or
cmp
out
cli
jae
leave
test
jl
or
iret
pop
dec
hlt
sub
adc
cli
sbb
out
pusha
pusha
and
jge
outsl
sub
dec
sub
ret
cmp
add
dec
xchg
mov
ret
xchg
test
and
sbb
bound
popa
cmp
jg
in
xchg
sub
inc
mov
pop
rorl
push
jp
inc
daa
and
xchg
stos
jo
inc
xor
in
sub
out
jecxz
sbb
out
ljmp
sub
int
rorb
mov
sub
xchg
insl
imul
sub
ficomps
mov
mov
popf
cmp
push
pop
movsb
add
inc
adc
int3
xchg
dec
or
mov
es
imul
scas
frstor
arpl
adc
sub
push
inc
addl
arpl
xor
sbb
jecxz
sahf
mov
adc
mov
sbb
pop
xchg
daa
cli
adc
fnstsw
sub
dec
test
add
cmp
sti
push
shr
xchg
cmpsl
xor
sbb
cmp
fwait
andb
push
in
fildl
test
pop
dec
sub
or
pop
insb
xor
into
cmp
out
adc
pop
repz
push
cmp
jle
scas
mov
push
cltd
pop
fiaddl
outsl
pop
jns
scas
inc
in
stos
ja
int3
push
scas
pop
jle
insl
leave
pop
popf
lods
mov
jp
jecxz
imul
pop
xchg
jo
out
add
jecxz
cmp
mov
sbb
jb
cwtl
dec
push
insl
xor
xor
shld
jl
imul
or
add
or
outsb
jae
cmpsl
pop
dec
adc
out
jl
mov
je
mov
js
fimuls
ret
fisttpl
sbbb
and
xor
cmp
and
inc
add
cmpsl
test
xchg
jl
mov
jo
das
inc
and
pop
pop
and
cli
dec
stos
xchg
pusha
mov
xchg
sbb
push
push
jg
in
mov
sbb
pop
jno
jo
es
mov
leave
lock
insl
sbb
add
aaa
ljmp
rolb
xchg
add
mov
pop
jno
inc
mov
jge
sub
rorl
out
iret
mov
add
dec
out
outsb
sbb
or
sub
pop
test
mov
scas
or
jnp
test
xor
scas
scas
rol
add
in
ss
pop
int
jno
dec
cmp
adc
loop
add
fsub
xchg
dec
sub
fistpll
sbb
jecxz
inc
mov
pop
outsl
mov
repz
imul
mov
mov
imul
insl
fcoml
mov
and
sbb
cmpsb
je
sahf
xor
fwait
dec
lret
test
cmp
push
icebp
pusha
and
jmp
adc
cld
adc
mov
sub
hlt
cmpsb
mov
push
ja
cmp
faddl
cmp
ret
into
jae
push
xchg
mov
jns
ss
negl
sarb
push
enter
imul
test
int
lock
test
inc
mov
or
mov
pop
mov
mov
pop
jnp
into
pop
cwtl
outsb
sub
shr
fstl
out
das
mov
mov
cmp
andl
lret
loopne
hlt
sarb
jae
xchg
mov
sti
insb
cmp
adc
aam
pop
jbe
jbe
outsb
cmp
or
push
push
pop
add
pop
mov
mov
and
cli
pop
outsl
add
xor
push
daa
xchg
pop
xchg
dec
fadds
lds
notl
or
add
and
pusha
jo
outsl
pop
cs
xchg
or
jp
jge
cmpl
mov
aaa
add
jne
sub
icebp
repnz
call
ja
cwtl
mov
push
pop
pop
xor
inc
icebp
push
or
ds
xchg
mov
mov
mov
push
push
sbb
clc
mov
xchg
adc
cmp
mov
xchg
push
sete
call
sub
lds
addr16
shl
push
test
and
jmp
jo
xor
popf
inc
sbb
mov
movsl
loopne
fcmovnb
mov
mov
mov
pop
iret
jo
bnd
out
repz
cmc
dec
test
pop
xchg
bound
int3
je
incb
mov
mov
roll
xor
int3
jge
loop
mov
pop
fs
xor
out
fisubrs
xchg
mov
xor
jp
jnp
rorl
pop
sub
inc
hlt
imul
mov
or
push
in
push
cmp
xchg
imul
std
sbb
adc
add
mov
xchg
addr16
xchg
mov
mov
outsl
out
outsl
cmp
xchg
sub
sub
add
insb
loope
aam
adc
mov
push
push
add
gs
hlt
mov
adc
bound
dec
insl
imul
repz
lahf
sahf
jo
ja
fcmove
ljmp
sbb
mov
test
loop
dec
xchg
mov
jo
gs
ljmp
ds
jg
pop
test
std
xor
js
jg
push
xchg
rcll
insb
sbb
cld
sahf
xor
imul
sub
in
lret
loop
movsl
xchg
cmp
sarb
push
xchg
imulb
cwtl
xor
jo
popf
cmpsb
sti
popf
and
xchg
adc
mov
xchg
mov
xor
mov
mov
clc
adc
dec
cmpsl
sbb
jnp
in
xchg
xlat
daa
outsl
and
jmp
push
in
lods
inc
shr
fisubs
push
aam
mov
imul
sbb
sbb
popa
add
jmp
scas
cmp
sub
cmp
sub
in
pop
mov
sahf
out
xchg
inc
aaa
mov
ljmp
outsb
add
cmc
xor
sti
and
std
add
mov
dec
aas
mov
jb
adc
xor
xor
aas
cmpsb
xor
loop
aad
or
push
or
test
aas
fisubs
adc
adc
addb
mov
int
mov
inc
xchg
into
leave
adc
cmp
cmpsl
xor
dec
push
sbb
push
xchg
inc
pop
mov
je
inc
add
sub
push
stos
aas
sbb
mov
inc
leave
test
and
test
in
pop
idiv
dec
pop
push
negl
or
jp
testb
pop
out
into
aaa
and
sbb
jl
cmpsl
lcall
add
lcall
imul
repz
test
cmp
add
insb
sarl
jne
xchg
lcall
dec
aad
cld
fs
test
push
lods
cli
add
repz
lcall
ja
enter
cmp
lcall
popa
xchg
xor
in
xor
lock
repnz
lea
jecxz
sub
pushl
test
push
pop
xor
ret
popf
xchg
leave
loop
cwtl
cmc
mov
and
cwtl
in
mov
xchg
daa
xor
jl
jmp
xlat
add
shlb
push
mov
mov
xchg
andb
icebp
sub
xor
dec
and
xchg
mulb
shrb
insl
sbb
aad
xchg
iret
test
pop
lcall
les
cmp
pop
add
pop
fstpl
sub
imul
mov
popa
cwtl
in
mov
outsl
pop
add
repz
push
adc
push
cwtl
pop
inc
jnp
daa
ss
adc
sbb
xor
rorb
ret
into
cltd
xor
cmp
ret
idivb
adc
mov
fsts
dec
mov
addb
fiadds
sub
add
jge
lcall
aam
mov
jg
pop
inc
divl
push
cmp
mov
fildl
ss
jg
pop
imul
test
jae
xchg
stc
rcl
jo
push
lret
outsb
add
push
mov
jmp
clc
test
mov
inc
outsb
and
rcrb
push
cs
aam
xchg
mov
mov
fwait
pop
inc
out
adcb
loope
or
shll
movhps
jge
add
adc
inc
or
push
and
int
xlat
xor
jg
call
inc
sti
ficomps
sbb
pop
add
repz
stc
lods
lcall
jge
or
repz
pop
pop
imul
sbb
jl
pop
movsb
stos
xor
cli
repnz
dec
loop
scas
es
lret
xchg
scas
xlat
jg
push
pop
cmp
push
cmpsb
mov
inc
clc
iret
int
pop
mov
sti
and
adc
inc
cmp
movsl
ds
adc
or
adc
push
out
leave
arpl
dec
fdivrs
in
pop
ret
xchg
mov
xor
movsb
mov
push
and
cmp
xor
and
scas
push
pop
int
nop
das
add
adc
fs
mov
daa
es
mov
call
mov
dec
mov
dec
push
push
sbb
fwait
add
mov
push
divl
int
push
orl
mov
or
repnz
jae
mov
in
mov
idiv
sbb
outsb
mov
out
daa
xchg
mov
sub
mov
jo
dec
repz
xorl
insl
inc
pop
and
mov
add
push
ljmp
out
aad
add
jbe
cmc
sbb
in
push
mov
adc
cmp
adc
jle
addr16
lret
stc
in
dec
sahf
lds
iret
push
jne
sbb
orl
loope
mov
lock
push
push
jg
jp
jge
dec
inc
ja
mov
testb
lahf
lods
mov
sbb
fsubs
sbb
sbb
call
mov
pushf
jno
mov
je
mov
ss
sar
jno
dec
popa
ret
stc
xchg
jmp
psraw
std
pop
xor
jb
insb
inc
mov
ds
jge
inc
sub
stc
lds
inc
in
lahf
cmp
addr16
cmc
gs
jl
cltd
ret
sub
fidivrl
sarb
test
mov
pop
addr16
sahf
prefetcht1
jmp
mov
adc
fistl
jbe
pop
pop
rcrl
fimull
push
into
pop
xlat
call
test
jecxz
insb
xchg
and
dec
fidivrl
out
xchg
fsubrl
fdivl
jp
clc
cmpsb
cmpsl
pusha
aad
std
mov
mov
cmc
shrb
fidivs
dec
xchg
aam
push
sub
or
push
push
add
jne
cmp
mov
sarb
icebp
in
clc
stos
adc
and
add
sarl
jmp
neg
outsb
into
dec
xor
lock
fistl
in
inc
vpsubsb
inc
push
mov
call
pop
les
mov
sahf
fwait
mov
mov
repz
ret
mov
inc
pop
mov
and
inc
fildll
outsl
adc
sub
cwtl
pushf
mov
jmp
rcrb
adc
cwtl
or
cli
pop
dec
inc
shll
jl
xchg
in
sub
jo
mov
cli
ljmp
enter
inc
push
je
daa
jo
mov
inc
adc
in
leave
mov
insb
sbb
lret
push
pop
mov
push
in
daa
lds
mov
cmp
mov
inc
addr16
sbb
mov
fwait
insl
mov
shrl
out
cmp
fmuls
add
push
add
mov
popa
mulb
stos
out
xchg
fimuls
mov
mov
repz
int
jnp
test
sti
fisubrl
pop
stc
jle
mov
jmp
dec
cmp
cltd
daa
xchg
sbb
mov
add
loop
and
and
outsl
loope
sub
loope
xor
imul
stc
and
std
lret
out
jnp
jmp
mov
pop
psubw
std
repz
hlt
in
or
out
pop
push
hlt
test
mov
push
in
clc
cmpsb
mov
test
popf
push
sbb
fdivr
lock
inc
push
and
push
cmp
imul
into
xlat
daa
ja
xchg
mov
cmpsl
push
or
stc
dec
sbb
cmp
int
add
testb
xlat
inc
adc
fisttpl
daa
mov
shrb
or
out
jo
fisubrl
mov
les
pop
flds
imul
xchg
pop
pop
testb
mov
jge
mov
fistl
xchg
and
ret
push
rcl
fidivl
mov
pop
ja
fidivrl
pop
into
add
sbbl
leave
inc
ja
scas
push
xchg
sbb
jmp
or
mul
sti
pop
sahf
xchg
scas
add
add
sub
push
cmp
es
pusha
xchg
xchg
mov
in
aam
pop
add
and
dec
inc
es
push
push
mov
test
in
repz
push
mov
mov
js
jne
mov
scas
mov
les
jo
dec
or
ret
subl
ret
jge
popf
loop
out
pushf
fwait
or
aam
sub
shll
sub
jns
dec
test
mov
mov
orl
sbb
cld
sbb
pusha
insl
sbb
idiv
push
pop
lahf
sub
mov
das
or
in
fldcw
mov
test
lcall
push
push
jbe
mov
mov
sbb
jge
jne
adc
pop
add
stos
sahf
int3
in
icebp
mov
dec
pop
or
xchg
sbb
insl
mov
mov
imul
fsubs
cmp
or
cli
add
fldenv
shlb
roll
xchg
out
sbb
xchg
into
orl
aas
cld
lods
mov
cmp
dec
and
pop
frstor
mov
arpl
xchg
inc
aaa
mov
mov
fiaddl
sub
push
enter
inc
push
add
inc
jecxz
in
ljmp
push
negl
add
loope
shr
aaa
aam
flds
mov
mov
inc
gs
fndisi(8087
std
xorb
mov
sub
ret
fisttpl
xor
jle
mov
loop
insl
push
pop
mov
or
jb
int
pop
mov
cs
cmp
sub
inc
ds
push
rorl
and
mov
fwait
push
pop
out
mov
or
imul
jmp
cmp
movsl
addr16
push
xchg
icebp
jmp
sub
cli
stos
mov
jb
outsl
cmpsl
repnz
shll
cs
push
subl
pop
adc
jmp
sub
dec
ss
inc
mov
lret
mov
mov
fimuls
xchg
lods
bound
push
xchg
xor
aaa
js
adc
std
lcall
dec
jae
jne
pop
fwait
popf
mov
sbb
sub
mov
mov
dec
sbb
out
scas
cmp
sbb
xchg
in
flds
cld
jb
jmp
aaa
sti
dec
mov
cs
outsl
shlb
jo
repz
xchg
and
xchg
loope
lret
jle
push
cli
mov
out
inc
xlat
jecxz
divl
xchg
adc
lods
pop
pop
and
xchg
jbe
hlt
ja
ljmp
push
push
inc
lret
sbb
pop
push
push
rol
iret
ret
divb
lahf
scas
imull
or
sbb
icebp
and
mov
dec
jae
pushf
sbb
pop
add
inc
cs
xchg
addr16
mov
imul
scas
mov
xchg
sti
clc
cmp
lret
pusha
push
adc
jae
jb
cld
mov
push
outsb
xchg
jo
adc
scas
cmp
jnp
cmc
inc
inc
shll
mov
dec
ficomps
cltd
daa
je
xor
pop
jbe
fmuls
or
testl
in
ja
jp
or
les
fcmovbe
hlt
mov
in
mov
adc
insl
mov
lods
test
xor
xchg
push
xchg
fwait
push
lahf
pushw
sbb
stc
lea
sub
lcall
call
aam
pop
mov
movsb
lock
push
lcall
movsb
shlb
cmpsb
xor
pop
push
insl
mov
mov
into
ljmp
mov
imul
in
lods
lahf
es
cmp
dec
cli
xor
adcb
test
lret
sub
ljmp
cmp
lret
stos
or
jns
jnp
xchg
bound
sysret
mov
inc
loope
mov
mov
fsubp
mov
popl
mov
jl
push
cld
jbe
sub
mov
mov
and
or
jmp
add
sbb
mov
jnp
jns
and
scas
xchg
pop
outsl
xor
cmp
jbe
arpl
shrb
mov
jp
cs
dec
push
ja
adc
stos
sub
ret
in
popa
rcr
sub
cwtl
int3
sti
cmc
test
xchg
xor
hlt
pop
adc
xor
aad
cltd
inc
movsb
pop
xchg
stos
push
loopne
adc
xchg
sub
mov
add
jbe
jb
mov
je
shrb
xchg
jmp
cmp
push
push
out
dec
js
mov
cmpsb
lcall
push
dec
iret
xchg
cli
in
stc
pop
das
out
fmulp
sbb
or
lds
dec
xor
loop
negb
jle
mov
and
push
or
xor
lahf
mov
nop
jmp
pop
cmp
xor
or
rorb
jns
neg
add
call
dec
xlat
aad
dec
push
add
adc
and
adc
jg
xchg
sbb
push
xchg
cmp
adc
jo
call
mov
montmul
cmpsb
inc
jge
fidivl
mov
sbb
cltd
repz
mov
stos
push
xchg
andb
int
inc
clc
xor
sbb
cltd
or
orb
orb
push
sub
fisttpll
hlt
insb
push
sbbl
fwait
enter
pop
adc
push
xor
lret
adc
pop
test
stc
jae
adc
fbstp
lret
cmp
mov
or
cli
sbb
aaa
push
jge
mov
mov
lcall
lock
dec
sub
fisubrs
pop
or
push
add
dec
addl
jns
add
dec
inc
fs
pop
int3
xlat
push
pop
jb
pop
loope
push
icebp
pop
pushf
sub
sub
cwtl
fdivs
sub
inc
mov
sub
rcrl
xchg
mov
adc
push
jmp
lea
jmp
fstpt
cmp
xor
repz
out
dec
sub
xor
jmp
adc
adc
mov
test
add
cmpsl
pop
pop
and
jne
scas
clc
xchg
or
lds
cmp
imul
mov
popa
repnz
loop
loop
movsb
mov
xor
aas
fisubl
cs
fstpl
inc
int
fiaddl
xchg
stc
sbb
mov
mov
fsubl
negb
icebp
repz
add
mull
mov
pusha
aam
inc
pop
rorb
adc
pusha
push
jne
cli
push
int
jmp
cltd
cli
popf
xchg
icebp
dec
pop
jbe
xchg
enter
adc
out
fisttpl
clc
adc
sahf
or
sub
jl
leave
jo
mov
mov
xlat
fwait
sub
xor
pop
push
cmp
sahf
test
mov
push
lds
push
xlat
add
pop
shr
and
adc
ljmp
in
sbb
js
sub
ret
push
mov
loopne
sbb
leave
pop
mov
ds
jle
mov
mov
or
dec
jne
loopne
imul
sub
imul
sbbl
lahf
add
scas
cltd
cltd
out
fcom
lods
sbb
pop
cmc
jno
xchg
mov
inc
fdivrs
mov
cmp
rclb
cmc
jbe
mov
ror
push
add
mov
stos
mov
mov
and
push
es
imul
xchg
and
fldl
pop
or
cli
mov
imul
ret
lods
or
icebp
das
and
and
adc
pop
xchg
inc
inc
add
mov
jg
ds
xchg
xchg
pop
fmull
sub
adc
mov
xchg
lods
fists
icebp
out
or
out
inc
mov
adc
ss
jno
dec
cmpsb
cmc
and
ss
shrl
sbb
push
pop
xchg
cmp
push
mov
mov
mov
stc
adc
cli
out
mov
sub
jno
adc
jae
test
dec
mov
mov
icebp
rolb
fxch
sbb
xlat
sti
cmp
adc
sbb
notl
cmp
sub
sub
popa
inc
aam
movsb
mov
rorb
repz
pushl
das
out
dec
es
es
jecxz
xor
cmpsl
mov
add
push
and
loope
sbb
sub
lods
loop
sub
jb
adc
idivl
pushf
inc
outsl
bound
inc
mov
subl
decb
push
mov
xrelease
lock
pop
enter
lods
add
ljmp
cmpsb
jo
add
fwait
mov
xor
xchg
popa
lods
jns
xchg
leave
jl
push
mov
mov
repnz
in
or
and
sbb
cwtl
sbbl
ret
in
stc
imul
pop
jno
mov
adc
mov
mov
cmpsl
or
jmp
pusha
adc
adc
mov
mov
add
stc
cmp
xchg
mov
inc
fbld
or
xchg
sub
sbb
loop
adc
inc
rcll
loopne
cmp
and
adc
xchg
inc
popa
int
jne
and
pushf
fiadds
mov
test
mov
shrb
mov
mull
popa
popf
je
xchg
movsb
inc
pop
jecxz
push
test
xorb
ror
jb
lock
xchg
jns
lea
scas
mov
cmc
lods
cli
add
insb
out
cmpsl
ret
in
out
arpl
jecxz
adc
pop
aaa
fucomip
cmp
lods
jno
lret
imul
push
cmp
xchg
ret
imul
rolb
aas
push
popa
xchg
mov
xor
dec
imulb
and
ds
fisttpll
cmc
inc
hlt
cmp
jb
cltd
clc
mov
inc
fwait
push
sbb
icebp
xor
es
dec
fimull
into
stos
mov
push
cltd
mov
add
xlat
push
pop
test
loope
or
loope
icebp
in
xchg
mov
rcr
adc
mov
push
ret
bnd
adc
outsb
mov
push
mov
test
sub
xorl
mov
test
push
fdivrl
jae
out
fdivl
pop
sub
mov
dec
push
and
inc
sub
inc
and
and
test
mov
ljmp
cmpsb
dec
pop
xor
dec
clc
push
rolb
push
jecxz
jge
mov
xchg
dec
push
or
inc
aas
leave
cwtl
ja
shlb
movsb
jmp
xchg
in
pop
or
enter
add
cs
pop
out
mov
fsubp
push
out
je
mov
push
scas
outsb
lods
pusha
inc
das
jp
std
out
cmc
adc
loopne
test
fisubrs
xchg
xchg
inc
jecxz
bound
or
push
pop
std
into
ljmp
fidivl
xor
mov
lahf
mov
cmp
dec
mov
cmp
or
mov
ljmp
notb
mov
jecxz
xor
jg
loopne
mov
loopne
lock
push
mov
cmp
addl
aam
mov
arpl
or
cmpsl
adc
jb
lret
insl
fists
cli
lods
or
lcall
fwait
sub
mov
xchg
cmp
ret
ret
xchg
icebp
sub
sbb
xor
jbe
pop
int3
addr16
inc
inc
dec
xor
cmp
or
jae
arpl
xor
jecxz
jnp
mov
adc
daa
nop
cmpsl
cmp
dec
repnz
adc
dec
xchg
jno
inc
lea
ss
sbb
xor
loop
push
and
sbb
repnz
insl
mov
sbb
xor
lcall
or
mov
dec
and
add
aaa
mov
leave
pop
pop
xor
aaa
sbb
sub
out
adc
lret
adc
outsb
push
push
in
into
shl
lcall
stos
pop
or
cmc
xchg
mov
dec
in
xchg
int3
or
inc
pop
sbb
or
mov
push
mov
ja
inc
insb
jecxz
mov
cwtl
movsl
push
pop
stos
dec
xor
and
pushf
sub
ljmp
aas
xor
repz
stos
pop
adc
stos
fidivrs
jge
mov
rcll
in
nop
lret
clc
call
push
dec
mov
call
pop
stos
out
pop
scas
in
adc
dec
mov
adc
fs
cwtl
jbe
sti
jae
lcall
cltd
sbb
mov
andb
lret
jp
mov
xchg
pop
into
mov
mov
add
adc
jge
add
ds
sbb
insb
dec
das
push
ror
and
or
fidivs
mov
push
movsl
fiadds
mov
mov
decl
movsl
lcall
bound
sarl
push
mov
jo
and
xchg
mov
popa
dec
sub
xchg
inc
test
mov
pop
sbb
xor
in
dec
sub
mov
aam
jl
xor
int3
cs
adcb
push
clc
fdivp
nop
mov
imul
xchg
jp
rcl
flds
jno
mov
mov
adc
fwait
mov
loopne
mov
mov
cmp
xor
cld
mov
imul
fsts
mov
in
rcll
test
cmp
push
loope
mov
push
jmp
lds
test
inc
push
xchg
lock
lahf
mov
mov
mov
xchg
insl
adc
cmp
repnz
mov
cmpsl
push
sbb
scas
dec
push
out
test
call
out
inc
and
push
cltd
sub
rorl
mov
xchg
and
iret
mov
insl
vcvttss2si
mov
sti
push
and
jl
addr16
xchg
in
out
imul
bound
cmpsb
cmc
ror
pop
addr16
pop
mov
lods
lcall
cld
dec
sbb
movsb
fisttpl
lock
xor
inc
daa
ss
cmp
rorb
xchg
add
and
je
sub
int3
cld
sub
mov
dec
mov
mov
dec
or
jb
xor
cltd
inc
jl
cmp
mov
cli
pop
dec
imull
or
xor
aad
adc
jb
mov
pop
test
push
adc
ret
sub
movsb
inc
dec
cmpsl
inc
inc
pop
fmulp
lods
jae
mov
sub
lahf
adc
or
sub
adc
sub
and
lret
out
arpl
sahf
mov
movsl
pop
cmp
push
xchg
pop
fadds
imul
fsubs
and
idivl
lods
cmpsl
cmpsb
sbb
jp
sti
or
xlat
sub
in
aad
and
pop
call
dec
insb
int3
cmp
faddl
popa
fld
or
or
and
mul
cmc
add
mov
fsubrl
in
arpl
lea
pushl
mov
or
mov
xor
leave
mov
dec
xchg
fnstenv
repnz
adc
cmpsb
xor
push
sub
rcrb
inc
lahf
aam
das
out
aad
mov
ja
sub
xor
ljmp
cwtl
jp
mov
in
les
daa
inc
cmp
dec
gs
mov
popw
loop
jb
sti
sbb
dec
lahf
mov
ljmp
mov
pop
pusha
mov
lock
jecxz
cmp
and
roll
or
nop
add
xor
call
pushf
push
loop
pusha
add
addr16
fnstsw
mov
jno
test
add
dec
fistpll
std
lret
mov
sbb
mov
add
inc
inc
inc
or
sbb
int
push
inc
fiaddl
mov
and
cmp
nop
fs
mov
mov
ret
lods
inc
adcb
mov
push
mov
jecxz
imul
or
cmp
ja
lahf
pop
inc
stc
in
inc
mov
sbb
lds
repz
mov
test
dec
pop
clc
adcl
rol
mull
jne,pt
mov
in
lret
xor
sbb
sbb
shll
gs
out
aam
adc
stos
inc
inc
out
pop
lds
scas
or
sbbb
jnp
mov
inc
ds
out
loopne
outsl
pop
cli
cmp
or
rcr
pop
pushl
sbb
and
xchg
push
lods
pop
in
push
cmp
pop
aam
es
daa
into
insl
jbe
inc
mov
out
pop
clc
dec
or
out
sub
std
inc
jg
ds
sbbl
clc
arpl
sub
jp
andb
push
lret
mov
xchg
scas
aam
dec
sub
ds
lea
sbb
pop
stos
aas
fisubl
add
mov
pop
int
je
leave
adc
dec
sub
jnp
mov
test
lret
aam
xlat
hlt
pushf
mov
ret
aas
imul
xrelease
xchg
ret
jne
adc
push
in
jbe
sbbb
cltd
sahf
pop
jg
in
aad
mov
out
adc
data16
sar
mov
or
mov
out
and
call
insb
fs
shl
jae
add
pop
cs
imul
or
stos
enter
cmp
push
push
lret
push
pop
jecxz
inc
cmc
movsb
jae
sub
popa
mov
pusha
lds
jl
cmp
jle
cmpsl
inc
std
adc
iret
stos
cmp
xchg
scas
and
inc
cs
mov
push
sub
mov
neg
std
movsb
out
pop
fisubrl
in
dec
into
mov
fbstp
push
inc
sub
push
mov
jo
sub
imul
mov
and
nop
xchg
adc
jne
and
mov
aam
in
and
jae
call
and
pop
iret
sub
pop
sbb
jle
inc
pop
inc
test
fs
push
and
mov
aas
ljmp
dec
jo
cmc
repz
xchg
or
jne
fs
fs
fsub
pop
and
out
mov
pop
pop
cld
cmp
xchg
xor
pop
ja
ja
dec
or
fcomps
adc
adc
dec
sub
loopne,pt
enter
call
sbb
addr16
int
outsl
jle
dec
xor
lock
add
pushf
lods
scas
sti
jbe
xor
decb
aaa
adc
dec
repz
jo
aam
repz
or
inc
xor
rcll
or
jb
mov
mov
insl
adc
pop
daa
or
mov
mov
push
cmp
cmp
jne
aaa
arpl
mov
clc
jp,pn
cmp
jle
int
movsb
pushf
cmc
dec
scas
sbb
daa
lret
push
ficoms
sbbl
adc
push
in
in
mov
lock
mov
cmp
mov
add
fildl
push
fcmovnb
das
dec
jno
adc
hlt
lcall
mov
xchg
js
cmp
daa
xchg
or
dec
lea
add
or
mov
call
dec
cwtl
jb
outsb
insb
ds
insl
lret
ja
jmp
enter
cld
aad
mov
push
adc
ds
pop
out
aad
popa
mov
imul
test
test
leave
adc
or
sbb
test
imul
mov
mov
cmc
icebp
jbe
cmp
ds
and
je
cmp
lock
dec
repnz
jmp
outsb
cwtl
jno
negb
ja
imul
jg
xor
cli
xor
dec
repz
mov
dec
lds
add
mov
arpl
pop
aas
mov
inc
or
dec
outsl
push
and
push
or
stos
xchg
sbb
sbb
adc
jnp
cltd
fidivl
int3
icebp
and
sub
inc
mov
js
cmp
movsl
jp
data16
movsl
pusha
pop
stos
movd
mov
nop
jnp
or
and
jp
jl
mov
xchg
push
and
xor
push
scas
dec
test
js
cmp
sbb
push
jo
sub
mov
js
outsl
shrb
bound
das
imul
cmp
test
in
sti
mov
imul
repnz
icebp
daa
popa
inc
xor
adc
stc
pop
and
aad
mov
repnz
mov
pop
xchg
jge
das
fucomip
xor
mov
sub
pop
cli
loop
pop
mov
aam
lods
mov
or
ljmp
cmp
repnz
cmp
mov
adc
mov
popa
jl
adc
addr16
out
icebp
ljmp
es
dec
jmp
add
jbe
mov
and
and
jge
jmp
sbb
jne
clc
mov
adc
imul
lods
movsb
xlat
je
pusha
and
adc
adc
pop
mov
rcrb
mov
icebp
je
scas
cmp
fcoms
mov
movsl
mov
push
ljmp
push
xor
out
insb
or
aad
mov
imul
xchg
inc
xorb
or
push
sub
ss
jg
sbb
mov
test
int3
test
mov
mov
daa
icebp
jp
rorb
test
out
mov
cwtl
std
sub
and
fcoms
mov
lahf
xchg
jge
cmpsl
adcl
ss
jmp
dec
es
repz
mov
xchg
sub
xor
jne
dec
adc
insl
repz
aaa
sbb
sarb
xchg
sbb
ds
push
xchg
mov
shlb
outsl
inc
push
loope
fsubp
je
mov
in
jmp
orb
inc
scas
xchg
jg
in
adc
aaa
dec
adc
sub
into
lods
jmp
test
mov
lea
rclb
push
addb
sbb
cmp
xchg
out
outsl
mov
add
dec
push
les
mov
mov
mov
sbb
pop
or
mov
insl
xor
mov
push
mov
lcall
adc
fwait
sbb
and
push
mov
dec
int3
enter
inc
xchg
std
out
hlt
cmp
push
push
popa
lret
add
xor
addr16
arpl
and
out
pxor
push
xchg
addr16
xchg
inc
testl
add
dec
and
cmp
faddl
out
jne
mov
insl
cmp
mov
mov
push
into
rcrb
jge
cwtl
stc
push
xchg
andb
or
mov
jle
repnz
rcr
sbb
mov
fsubrs
xor
mov
inc
adc
addr16
jne
mov
and
jb
mov
or
pusha
cld
es
jmp
mov
lods
push
cmpsl
cwtl
cmp
cmpb
fildll
cmp
lods
sahf
pop
add
pop
pop
mov
or
cltd
icebp
jae
dec
and
iret
loope
pop
pop
pop
xchg
sti
sub
scas
pop
xchg
insb
data16
push
inc
inc
mov
nop
cmp
jnp
aas
inc
mov
scas
loope
or
sub
cmp
loope
loop
inc
xchg
sbb
mov
fldenv
push
push
and
mov
dec
adc
sbb
add
or
mov
mov
jns
add
fidivl
aaa
push
fidivs
sahf
lsl
and
or
jae
dec
jmp
faddl
es
imul
mov
fs
mov
sub
mov
push
push
shll
insb
dec
outsl
jnp
std
stos
call
mov
push
xchg
sti
xchg
jle
or
sbb
xchg
mov
pop
mov
lahf
xor
stos
or
mov
call
inc
jo
jno
shll
stos
or
mov
iret
ja
push
fwait
jne
fldt
lods
push
test
ljmp
sub
lea
js
mov
orl
pop
mov
mov
cmp
das
xor
dec
adc
sub
imul
out
ljmp
jmp
lods
insl
test
repz
cmpsb
mov
aaa
cmc
enter
imul
ds
pop
adc
inc
js
ret
ja
stos
aam
rcr
and
icebp
inc
jmp
stc
andb
and
imul
push
or
hlt
lret
xchg
lds
int
test
loop
sbb
fistl
movsl
push
lret
ss
add
leave
dec
mov
je
into
pop
insl
xor
dec
sbb
xor
jmp
inc
ja
add
inc
fs
lret
jnp
sub
mov
jo
xchg
stc
add
inc
sti
cwtl
inc
jecxz
or
rorb
sbb
in
repz
cmp
dec
out
sub
add
test
jge
in
sub
push
mov
leave
adc
int
xorb
cmp
jns
pslld
cmp
out
push
push
leave
fists
sbb
sarb
mov
pop
and
sbb
sub
lods
outsl
cmp
stos
das
push
pop
sahf
pop
je
sbb
jbe
inc
mov
lret
aam
xchg
xor
je
sub
enter
mov
cmp
or
call
mov
cli
and
addr16
push
mov
jmp
stc
cmp
mov
data16
lea
sub
ljmp
dec
and
xchg
dec
push
dec
ss
ret
lahf
cld
cli
add
jge
mov
push
adc
in
mov
aad
fistl
lock
idiv
lret
fisttpll
jne
mov
lods
icebp
pop
xchg
in
fmull
jl
imul
pop
dec
cli
in
inc
and
pop
cli
aam
push
mov
sub
sub
adc
fldl2t
dec
push
lods
cmp
in
popa
popf
and
inc
repnz
sbb
gs
frstor
je
and
sub
test
pop
push
lods
das
mov
sub
aas
dec
in
adcb
shlb
sub
xor
inc
test
sub
add
in
xorb
iret
or
jbe
jmp
add
pop
out
adcl
mov
out
lcall
arpl
mov
xchg
das
and
pop
jl
daa
jno
testl
lcall
aaa
push
enter
imul
xor
inc
pop
sbb
imull
pop
cmp
xor
lahf
jnp
xchg
lock
int
add
jmp
push
and
jbe
add
xor
xchg
fsubl
ljmp
jbe
int
dec
xor
inc
add
fwait
arpl
rcll
lods
cmpsb
rorl
and
push
sub
adc
jle
es
push
cmpsb
or
fmuls
inc
adc
lds
add
or
jmp
loope
sub
repnz
fwait
lret
xchg
and
dec
roll
rol
ret
ss
pop
xor
inc
inc
sti
push
and
adc
pop
lcall
imul
sbb
fstpl
xor
xor
enter
sti
ja
jle
add
sahf
push
xchg
cld
push
or
jg
movsb
scas
flds
out
adc
mov
add
sub
jbe
out
mov
std
stos
sahf
out
adc
cmp
dec
mov
mov
repnz
pusha
into
inc
test
scas
inc
frstor
mov
js
or
pop
xchg
dec
clc
loop
out
dec
outsb
shrl
mov
stos
mov
lret
push
or
decl
lea
ja
das
jge
shll
xchg
xchg
mov
lret
xlat
pop
add
mov
fcoms
dec
cli
xlat
xor
xchg
or
sbb
iret
sub
jne
ds
sub
shrb
lds
jl
addr16
mov
inc
cmp
jmp
lret
or
or
xor
out
pop
add
jae
push
cmp
mov
jno
sbb
push
pop
aaa
or
fmull
lods
and
repnz
lock
adc
stos
cmp
push
test
leave
orl
pusha
adc
adc
frstor
movsb
stos
xor
fs
movsl
mov
xlat
cli
repnz
popf
jmp
insl
jne
test
insb
add
sub
mov
test
pop
pop
pop
adc
push
pop
lret
int
pusha
sub
mov
iret
mull
and
cli
mov
mov
shr
push
dec
mov
lcall
int3
sbb
inc
mov
int3
icebp
das
mov
sbb
mov
cs
cmp
popl
cmpsb
jbe
push
je
xor
and
cmpsl
jp
ss
jmp
mov
sahf
loopne
cmp
pop
sbb
scas
int
enter
and
xchg
outsl
xchg
orl
fwait
dec
push
icebp
inc
or
out
sahf
and
inc
sbb
jmp
mov
clc
lret
test
sub
add
mov
dec
ljmp
inc
lahf
push
bound
mov
sbb
cli
push
std
call
mov
sub
lret
mov
sbb
iret
jp
sahf
test
inc
pop
sbb
add
mov
pusha
cwtl
fwait
ljmp
dec
inc
mov
cmp
and
add
and
jle,pt
push
cmp
aam
mov
popa
enter
ret
js
sbbl
test
cmp
jae
add
scas
cmp
mov
popa
daa
add
mov
push
gs
push
jno
lahf
popa
mov
cli
push
push
or
rclb
push
pop
repz
fnstcw
cs
lret
sahf
adc
jg
jne
ret
pop
imul
pop
popa
mov
adc
aas
fwait
mov
je
jae
add
mov
leave
push
or
mov
rclb
push
mov
sbb
jns
sbb
lds
iret
mov
icebp
data16
dec
xchg
mov
ds
scas
cmp
pop
jge
cmp
inc
or
xchg
cmp
mov
iret
push
adc
sub
and
imul
jle
gs
fidivs
push
sub
jne
push
leave
jnp
pop
into
add
pop
mov
pop
mov
insb
call
lcall
stos
rcrb
dec
or
pop
sub
cmp
fs
xchg
cmp
pop
xchg
test
das
mov
jp
test
enter
subb
nopl
push
mov
lods
aam
jg
jecxz
mov
xchg
in
mov
lcall
and
lcall
cmpsb
pushf
sub
adc
scas
add
push
dec
stos
outsb
loopne
std
xor
mov
fcomip
push
push
fimuls
dec
sbb
dec
and
and
cmpsl
outsb
sbb
jmp
test
lock
or
pop
push
jp
cs
inc
dec
mov
jno
mov
in
add
scas
xor
lahf
cmp
add
out
inc
int3
andl
mov
cmp
into
sub
mov
dec
mov
cmp
jp
inc
mov
adc
add
cwtl
push
mov
xchg
cmp
js
lock
jmp
mov
sti
push
xchg
flds
ss
or
scas
mov
insl
cmp
mov
addr16
cmpb
add
ret
lds
inc
mov
push
sub
fcompl
mov
xchg
sub
push
jae
aas
inc
in
pop
pop
inc
scas
mov
out
xchg
in
or
gs
sbb
xchg
iret
jl
and
fisttpl
ret
aad
out
cmp
loopne
mov
jmp
repnz
jl
pop
mov
fisubs
testb
mov
shll
adc
in
stos
adc
dec
in
lahf
push
mov
fistl
pop
clc
stc
inc
nop
test
cli
mov
mov
aam
xchg
jle
cs
gs
in
jbe
ljmp
aaa
gs
dec
and
dec
xchg
lea
push
and
aad
outsb
out
pop
movsb
cmovp
enter
sbb
test
outsl
add
loope
sbb
mov
and
inc
xchg
orl
call
scas
mov
sub
mov
dec
xchg
pop
xchg
popa
xor
ret
sub
mov
adc
andb
insb
shll
icebp
mov
xchg
pop
xchg
fistps
and
xchg
cmp
pusha
lahf
sub
jl
out
cmpsb
fadds
mov
mov
pop
das
lods
lret
cmpsb
orb
popf
push
aad
push
push
jb
dec
lods
shll
pop
inc
xor
push
loop
pop
leave
inc
shll
sbb
push
in
jl
ret
mov
test
in
je
dec
jl
pop
xor
das
ret
and
jmp
movsb
sbb
aam
push
int3
call
adc
sub
lahf
mov
ffree
pop
sub
mov
insl
fcompl
movsl
xchg
iret
decl
xchg
mov
testb
xor
cmc
xchg
lcall
jo
jp
popf
pop
mov
shlb
in
xor
mov
rcrl
sub
add
loope
lcall
adc
lret
cmp
bsr
push
inc
dec
mov
jl
adc
pop
test
aas
addr16
push
shlb
push
cmpsb
dec
and
cltd
out
adc
out
mov
aas
xor
insb
scas
mov
stos
mov
jmp
pusha
sub
int
divb
push
push
fmul
and
adc
xor
clc
sub
mov
testl
daa
bound
mov
mov
push
cwtl
push
pop
sbb
mov
pop
xchg
inc
add
inc
orl
xchg
lret
rorl
in
sub
xchg
mov
dec
and
loope
pop
cmp
daa
rorl
and
dec
mov
aam
push
nop
jnp
dec
add
lods
or
and
ds
popa
insb
mov
push
dec
sbb
jmp
loopne
mov
jo
shl
hlt
or
jp
nop
cmp
pop
ret
movsb
int3
popa
ss
add
mov
bound
fistpl
push
iret
adc
inc
mov
fistps
movsb
adc
fs
sbb
sub
outsl
gs
lret
rcr
mov
cltd
cmpsl
pop
fsts
and
stos
inc
pop
mov
sub
jno
shlb
loopne
and
sub
inc
mov
jno
lock
popa
pop
mov
sbb
jmp
je
and
addl
aad
ret
push
test
je
sub
pop
xchg
arpl
and
push
int
sbb
add
sahf
mov
mov
leave
sub
movsl
outsb
int
xchg
out
aaa
push
xchg
sub
popf
and
pop
jo
movb
cmp
call
add
es
add
xor
out
dec
mov
jmp
mov
add
ss
push
cmp
bound
and
out
or
ficomps
mov
sub
xchg
ret
daa
pop
shlb
outsl
mov
dec
dec
pop
lret
cmc
imul
outsl
pushf
jge
nop
hlt
aam
fdiv
mov
sbb
ss
pop
mov
scas
pop
stc
jbe
push
je
in
lds
jmp
das
xchg
cmp
stos
daa
and
imul
xchg
sbb
orl
dec
push
push
xchg
jbe
push
jecxz
jo
js
call
sub
or
cmpsb
xchg
pop
dec
rclb
jb
ja
mov
bound
in
std
dec
push
fwait
cli
xchg
xor
pop
jg
push
sub
test
push
or
in
adc
mov
sub
pop
xorb
xor
scas
sbb
addr16
ljmp
jle
xchg
pop
pop
push
sub
cmpsb
jp
repz
fdivr
in
and
pop
dec
pushf
inc
inc
flds
pushf
mov
pop
sbb
push
xorl
stc
cld
scas
pushf
lret
shrb
sub
cmovl
stos
push
call
jle
insl
sarb
or
sbb
pop
popf
jo
push
xor
std
mov
jecxz
jae
adc
xchg
push
data16
cmpsl
scas
mov
outsb
jecxz
andb
movsl
ja
mov
or
jle
or
pop
push
dec
sbb
ret
imul
out
mov
pop
lds
sahf
lds
sub
push
out
repz
imul
fisubl
dec
pop
xor
push
push
shl
mov
xor
mov
inc
mov
sbb
cld
inc
shlb
and
or
aam
adc
ret
sub
and
stos
pusha
cwtl
xor
cltd
lcall
insb
stc
fildll
inc
and
push
pop
loopne
and
push
pusha
aas
mov
lods
sbb
xchg
icebp
or
inc
jle
mov
fisttpl
dec
imul
icebp
xchg
or
lahf
aam
nop
cltd
imul
mov
fnsave
dec
pusha
push
sbb
push
dec
pop
jg
repz
gs
or
pop
adc
gs
xchg
stc
sub
movsl
cmp
sub
xor
das
outsl
ja
push
mov
orb
dec
stos
cmc
sbb
dec
cmp
adc
in
sbb
lods
mov
xchg
in
shrl
adc
sub
push
pop
mov
mov
and
jecxz
cwtl
xchg
adc
stc
sbb
jp
repz
lea
cmpps
mov
jge
jnp
stos
xlat
insb
aas
lcall
orl
fs
mov
je
mov
out
lahf
jle
dec
cmp
xchg
dec
or
mov
pop
mov
jb
lret
jo
pusha
cli
jns
sub
or
cld
enter
pop
sbb
add
lods
ret
jle
lods
adc
bound
repnz
jle
push
adc
stos
add
cmpsb
pop
icebp
sti
sbb
sbb
dec
iret
push
pop
xor
stos
inc
jp
ljmp
cltd
jns
sbb
mov
popf
xor
inc
xchg
cmp
push
push
lea
mov
sbb
loop
jo
test
outsl
out
or
mov
mov
push
orb
hlt
popa
iret
pop
mov
pop
ret
lea
stc
adc
hlt
inc
xlat
hlt
xchg
dec
stos
sub
nop
arpl
mov
clc
pop
inc
loope
mov
cmp
pushf
lods
cmp
cld
in
mov
sub
jge
jb
pusha
popa
shll
mov
push
daa
outsl
xchg
jp
mov
jecxz
jae
or
add
outsb
push
cmpsl
mov
dec
mul
dec
inc
repnz
cmpsl
lcall
add
es
sub
je
mov
mov
gs
dec
ljmp
jb
mov
cmpsb
lods
xchg
leave
mov
mov
sahf
adc
dec
and
dec
test
mov
lea
les
cmp
test
cmpsl
fucom
lea
mov
dec
outsl
jnp
mov
inc
punpckhwd
pushf
mov
and
sarl
xlat
lret
or
out
adc
push
adc
stc
add
jno
jo
lods
lock
pop
test
mov
add
mov
jbe
pop
ja
or
mov
inc
inc
je
push
adc
mov
sbb
sub
pop
cs
add
jae
repz
jmp
adc
cltd
or
test
into
adc
mov
aad
xlat
nop
lods
dec
rcrb
lret
add
add
push
roll
inc
push
mov
out
test
xor
pushf
ds
push
push
and
ror
mov
jb
mov
stos
xchg
in
dec
adc
outsb
repz
add
iret
addr16
sub
icebp
je
pop
xlat
mov
sbb
sbb
inc
insl
jae
fmul
scas
cli
and
je
jl
sbb
scas
fcomip
sub
push
lods
push
inc
icebp
push
out
and
je
das
cwtl
pop
push
xchg
iret
fdivl
jb
xor
inc
jle
adc
movsl
clc
cmp
xlat
daa
filds
clc
add
out
stos
push
or
scas
sbb
loope
or
lods
xchg
aam
inc
or
int3
lcall
and
jmp
pusha
jnp
cld
aas
pop
out
push
int
push
adc
loopne
scas
testl
imul
int
std
xor
daa
push
cmp
lret
loopne
and
sub
insb
jle
cli
add
lods
pop
insb
repz
loopne
and
lret
lds
add
lods
xchg
cmc
jnp
xchg
xchg
adcl
test
pop
call
repnz
insl
mov
ficoml
je
sub
push
inc
push
mov
fiaddl
out
shll
xchg
outsb
or
dec
jg
test
js
aaa
mov
cmc
ds
arpl
arpl
int3
push
lock
fisttps
jp
std
insb
shl
nop
mov
leave
dec
add
addl
cmpsl
pop
ret
fdivl
je
dec
jp
popf
dec
dec
sub
insl
inc
fs
mov
dec
mov
jp
data16
mov
add
xchg
add
or
mov
dec
movsb
iret
sub
and
mov
lock
mov
mov
fisubrs
hlt
cmpsl
adc
stos
xchg
lcall
adc
cwtl
push
arpl
add
test
out
or
cmove
mov
push
in
lret
fadd
flds
aam
xchg
loop
mov
mov
movsl
out
ret
lds
movsl
sti
mov
inc
xor
dec
test
jns
inc
add
pop
mov
decl
cmpsl
clc
cmp
imul
dec
andl
adc
jnp
addr16
jg
cmpsb
in
scas
scas
and
push
mov
aad
outsl
xchg
xchg
ffree
scas
mov
loope
inc
push
sub
popf
add
pop
mov
sub
loopne
addr16
and
movsb
popf
mov
in
sbb
scas
cmp
rcl
add
sbb
mov
aad
cmpsb
sub
or
and
scas
pop
mov
sub
adc
mov
imul
data16
testl
jg
sub
cmp
inc
push
push
outsl
rcll
sub
movsl
iret
mov
ret
cli
pop
sbb
ja
mov
xor
sub
add
xchg
or
dec
popa
aaa
les
add
jg
add
inc
shrl
xchg
dec
out
int3
mov
sbb
pop
jae
test
test
xchg
fs
push
outsb
cmp
or
sub
loope
push
sub
scas
mov
nop
lret
mov
sbb
mov
stos
dec
and
cmp
pop
adc
scas
sub
pop
in
sub
sub
nop
and
sar
testl
mov
loop
add
jge
mov
mov
fldl2t
push
push
mov
imul
xchg
out
mov
sub
outsl
sbb
movb
sti
dec
daa
xlat
mov
leave
arpl
aam
sub
cmp
pop
adc
cmp
pop
imul
int3
imul
and
and
push
repz
cmp
mov
fldt
cmpsl
fwait
out
dec
inc
lods
mov
fmul
movsb
into
or
ljmp
lcall
movl
cmp
js
push
jo
loopne
fldcw
sub
ljmp
dec
xor
add
mov
loop
push
add
xchg
mov
or
imul
cmp
es
and
je
sbbl
movsl
popa
mov
sahf
or
sti
outsl
dec
mov
sahf
lret
mov
clc
pop
sbb
stos
popa
out
xor
add
icebp
add
loope
repz
mov
cmp
push
in
stos
mov
xchg
sub
fadd
shll
xor
fsubp
mov
jg
insb
ds
xchg
lcall
out
push
adc
pop
fsubl
ja
push
lahf
add
add
mov
mov
push
sbb
imul
or
pop
mov
push
jecxz
push
outsl
jle
push
pop
std
orb
mov
lea
mov
outsl
in
xor
data16
push
bound
ret
sbb
mov
outsl
hlt
xchg
add
aas
sbb
dec
test
test
lock
popa
cs
push
sub
push
push
mov
or
stos
jnp
xchg
inc
adc
inc
mov
aad
ret
arpl
aad
jnp
adc
jmp
push
mov
gs
fisubrl
bound
jmp
aam
je
outsl
cli
cmp
pop
and
mov
imul
out
leave
mov
jnp
sub
cmp
jge
bnd
sbb
rcll
aam
add
xor
xchg
fdivrs
hlt
fidivrl
mov
push
cmp
dec
inc
loop
add
mov
es
push
sbb
std
arpl
pop
out
sahf
push
and
sahf
xchg
cwtl
xchg
cmp
decl
stos
es
cltd
adcb
mov
bnd
scas
in
in
push
push
xlat
xchg
stos
adc
push
xor
js
imul
imul
fwait
or
lret
fnsave
add
mov
shr
imul
ficomps
std
cli
xor
movsl
cmp
xchg
inc
xchg
ja
push
mov
in
imul
dec
cmp
dec
jae
leave
cmp
test
popf
jp
push
pop
xchg
push
dec
out
movsl
aam
jmp
aad
jg
lcall
lret
add
or
adc
xchg
push
xor
jae
add
sbb
loopne
dec
outsb
inc
sarb
mov
xlat
data16
push
in
push
and
mov
xchg
into
out
inc
shll
mov
in
popf
xchg
dec
mov
stos
or
jle
xchg
add
addr16
dec
movsl
mov
jle
mov
es
repz
mov
out
xchg
cmp
mov
and
fadds
or
es
popf
push
jmp
push
mov
test
insb
mov
mov
dec
adc
dec
outsl
sub
fdivr
or
stos
subb
out
in
sbbb
cmp
push
aaa
loopne
and
mov
push
xor
insl
sbb
icebp
sarb
mov
popf
mov
or
es
cmpb
cmp
stos
int
dec
push
jnp
xlat
cmp
cmp
jne
pusha
sbb
xchg
leave
stc
dec
xor
mov
ss
cs
inc
push
mov
hlt
cltd
imul
in
scas
push
mov
ret
push
xchg
nop
pop
in
inc
jno
fstpt
mov
push
mov
aad
out
push
mov
out
jl
gs
add
push
pop
mov
movsb
insb
clc
cmp
call
aaa
rolb
scas
scas
inc
cmpsl
or
dec
add
fcompl
out
jmp
pushf
push
xchg
cmp
sub
adc
rcll
lds
xor
xchg
add
cwtl
lcall
jge
ret
or
mul
cmpsb
sti
das
jg
lea
stos
stos
and
cmp
mov
adc
jns
int3
sbb
pop
jp
aaa
sub
sbbl
pop
test
ficomps
jns
movsl
adc
das
test
jnp
jl
arpl
push
movsb
inc
push
mov
xchg
mov
inc
ds
add
dec
jl
insb
push
nop
addb
rcll
push
mov
fucomip
mov
dec
push
xchg
pop
jle
shl
shlb
cmc
xlat
cltd
jb
lock
jnp
jle
je
and
rcrl
mov
mov
cld
and
sti
push
pop
adc
in
push
push
mov
and
xchg
outsb
push
jge
pop
dec
jo
je
or
push
cmc
imul
xchg
aam
dec
shrl
sbb
jge
popf
andb
adc
jno
pop
pop
test
movb
mov
dec
xor
dec
pop
or
icebp
dec
cmp
aam
xchg
enter
sub
lret
ss
ljmp
outsb
jns
lcall
xor
push
test
outsb
mov
pop
gs
xchg
inc
lcall
popf
test
inc
sbb
addr16
sub
add
and
ret
fwait
mov
out
jb
int3
mov
mov
mov
cmp
mov
mov
jg
adcb
mov
fs
es
push
or
mov
or
fxch
mov
push
cmp
and
xor
shll
push
and
flds
test
mov
add
andb
call
sahf
push
sbb
ret
fimull
mov
je
xchg
pop
xchg
lcall
ror
or
adc
imul
jbe
mov
scas
mov
sbb
push
xor
sbb
and
ret
shll
mov
adc
mov
xchg
int
movsb
outsl
mov
aas
jmp
outsb
iret
lcall
rcl
out
ja
aad
or
mov
stos
xchg
or
js
cs
jge
lcall
push
rcll
cwtl
jae
imul
adc
add
xor
inc
mov
push
lret
jo
mov
adc
les
xor
inc
out
jmp
sarb
int
cltd
adc
jl
cmp
nop
lock
jp
movl
lahf
push
loopne
rclb
fistpll
fisttpll
fistpl
inc
test
mov
jp
aaa
mov
or
inc
shl
pop
dec
bound
add
test
in
jp
xchg
push
add
std
jmp
shrl
dec
push
sahf
ljmp
inc
fnstsw
call
adc
inc
jle
inc
cwtd
mov
je
outsl
and
cmp
cmp
jle
sbb
add
in
int
rorb
or
and
loop
add
repz
xchg
add
or
popfw
imul
rcll
cmpsb
add
sbb
mov
cmpb
cmp
mov
and
push
cmp
out
out
jg
sbb
adc
jbe
mov
aam
ret
push
fistpll
push
cld
mov
adc
add
or
pop
insl
mov
loope
mov
fs
loop
popf
pusha
inc
cmpsl
mov
adc
je
xchg
jns
testb
mov
ficoms
inc
fwait
cmc
jnp
inc
xchg
mov
jne
rclb
fimull
or
sti
addr16
and
xlat
mov
push
cmpl
sti
ds
push
cmp
fistps
cmp
pop
push
pop
imul
add
sti
mov
sti
lahf
popf
adc
dec
mov
jne
ret
imul
jns
int
mov
scas
jmp
cld
sti
xchg
or
imul
xor
addr16
mulps
and
cmp
fisttpl
mov
lahf
jmp
out
jae
xchg
cltd
call
orl
xor
repz
xor
jg
iret
mov
mov
cmpsl
and
push
fcompl
pop
subl
movsl
lret
mov
mov
lock
push
pushf
sub
mov
rcl
leave
mov
lock
lret
inc
cwtl
xchg
cmp
sbb
sbb
out
shlb
pop
data16
imul
fwait
push
int
shrl
lahf
test
sub
loopne
mov
in
sti
sbb
fisubs
inc
xor
mov
push
xchg
dec
int
ja
stc
iret
sbb
and
stos
stc
xchg
jae
pop
cmp
cmp
shr
xor
or
mov
in
xchg
jno
daa
shrl
ret
sti
xchg
jmp
cmpsb
lahf
gs
jns
popa
repz
cli
inc
fstps
hlt
push
sbb
mov
aas
cli
repz
test
test
cwtl
pusha
add
adc
imul
ss
and
mov
insb
cli
in
test
outsl
ret
mov
cmpsl
iret
mov
pop
add
push
add
cli
xchg
lods
sub
push
cmp
jmp
pop
dec
mov
jne
and
or
sbb
fstl
imul
mov
adc
jecxz
cmp
repz
mov
xor
mov
in
shll
or
insb
mov
mov
imul
sti
insb
mov
cld
push
push
mov
dec
lods
into
repz
add
scas
inc
out
lcall
sbb
mov
leave
or
xchg
rorl
dec
scas
jae
call
fdivl
push
mov
push
xor
imul
jbe
inc
movsb
lahf
loope
mov
out
aas
push
add
bound
mov
xor
repnz
ljmp
stos
out
addl
jg
mov
jmp
cmpsl
mov
out
fidivl
pop
sub
dec
mov
lods
cmp
add
pop
jb
pop
pop
inc
in
push
repz
adc
cltd
je
xchg
fcmovnu
pushl
mov
cli
gs
int3
and
xchg
jmp
inc
clc
xor
inc
mov
and
stos
shll
mov
repz
movsl
movsb
scas
daa
shl
sub
xchg
sbb
gs
insl
xor
in
fnstsw
xor
iret
xchg
lcall
mov
or
negl
or
loop
pop
hlt
data16
sbb
push
pop
movsb
pop
stos
adc
repz
test
mov
and
add
sub
enter
fbstp
cltd
jmp
scas
jl
mov
adc
pop
sahf
adc
lret
jne
or
push
jns
jo
scas
mov
insb
and
mov
dec
aam
jae
and
hlt
jl
add
rcrl
dec
sbb
or
adc
and
cltd
iret
or
adc
repnz
out
push
data16
fsubrs
into
rolb
lahf
fsts
rolb
jns
jo
and
ss
sub
push
test
and
aam
sbb
adc
xchg
insl
lock
mull
mov
je
es
cmp
repz
cmp
lods
enter
sub
mov
loop
nop
ret
das
push
or
xchg
ret
pop
movsb
xchg
lret
imul
dec
cs
push
xchg
jnp
loop
lahf
dec
dec
push
adc
jae
push
jb
iret
adc
pop
mov
enter
fcomi
mov
xchg
leave
aaa
cmpsl
xchg
push
loopne
data16
int3
ficoml
cs
xchg
das
mov
ss
hlt
jns
cmp
rcrl
or
stos
ja
inc
imul
mov
xchg
in
or
cmc
mov
jb
adc
pop
inc
pusha
leave
push
mov
lock
and
into
les
inc
into
dec
mov
repz
idivb
clc
dec
push
arpl
jo
pop
xchg
sbb
mov
push
mov
imul
loopne
and
mov
shll
hlt
pop
sbb
test
jmp
sti
sub
inc
xorb
sti
adc
repnz
xor
aam
into
push
lret
mov
mov
pop
inc
imul
push
mov
mov
data16
mov
jno
xor
mov
cmpl
push
lcall
cmpsl
or
rorb
dec
fldt
das
pop
rcl
aad
cmp
xor
fdivs
or
pop
mov
inc
pusha
dec
inc
mov
pushf
mov
dec
ss
pop
repz
repnz
jno
dec
leave
shrl
and
arpl
in
iret
jp
rorl
and
scas
mov
stos
dec
in
pop
xor
xor
xchg
into
add
mov
nop
mov
push
cmpsb
mov
push
mov
mov
mov
sbb
arpl
decl
fs
adc
cmp
cmpsb
aaa
pop
int3
inc
and
jge
jo
fnstcw
or
outsb
xor
xchg
fldt
rcrl
movsl
movsl
jnp
pop
rcr
rcl
or
mov
cmp
aaa
dec
mov
cli
dec
adc
ds
out
shl
cmp
sub
pop
pop
int
adc
repz
or
add
xchg
dec
insl
fcmovnu
adc
adc
xchg
rcll
mov
mov
xchg
mov
and
mov
rorl
lret
xchg
push
into
xor
dec
cmc
fdivr
ret
pop
addr16
push
mov
or
shlb
test
mov
frstor
sub
lock
mov
mov
daa
icebp
mov
fwait
mov
bound
aas
xchg
jmp
mov
gs
push
xor
int3
or
sahf
jmp
adc
mov
fcoml
mov
nop
push
mov
mov
inc
pushf
cmp
push
xor
sbb
lahf
inc
data16
adc
leave
les
idivb
add
inc
fs
mov
popa
sub
or
sbb
scas
sub
cli
in
sbb
mov
and
fnstsw
jge
mov
inc
sbb
xor
or
shrb
jp
int
adc
mov
pop
pop
daa
inc
das
fnstcw
sub
lods
mov
ss
xor
xor
or
mov
test
iret
rcrb
push
addl
movq
mov
push
pop
mov
jae
sbb
lcall
pop
and
addb
pop
add
mov
addr16
sub
sti
push
or
push
leave
mov
jecxz
sub
ds
mov
out
dec
lods
lcall
or
mov
inc
jae
fnstenv
inc
pop
push
mov
dec
sbb
cmp
sahf
aas
dec
and
test
lods
xchg
push
cmp
nop
pop
aam
cmpsl
jmp
mov
xor
stos
lea
in
adc
not
xor
xor
or
lods
cwtl
sbb
sub
js
pop
mov
bound
sbb
dec
stos
mov
repz
mov
in
dec
int3
add
cmp
aas
xor
orb
inc
mov
jns
clc
add
lock
pop
mov
in
cmp
pop
dec
faddl
sti
mov
mov
in
jmp
cmp
jl
mov
or
pop
test
mov
and
scas
cwtl
dec
add
or
lods
loope
jns
test
xor
sub
mov
scas
fidivs
add
stc
fisttps
dec
mov
or
mov
addr16
xchg
inc
icebp
pop
xor
mov
loopne
sti
cmp
ficomps
inc
outsl
add
out
popa
test
inc
repz
enter
push
pop
call
pop
inc
test
nop
push
jle
inc
icebp
inc
mov
jb
push
inc
or
je
mov
jns
dec
inc
imul
xorb
mov
add
rcrl
push
mov
fildl
jo
and
mov
mov
jo
fcmovnbe
sahf
cmp
xchg
xor
nop
cmp
ret
adc
scas
cmc
call
mov
stos
bound
push
jno
fisttpl
cmp
and
nop
adcb
xchg
fiadds
fsubl
xchg
faddl
and
repnz
pop
pop
mov
lret
int
pcmpgtw
scas
push
fnstsw
mov
pop
jge
stc
testb
pop
int3
mov
cmpsb
jle
fcmovnu
loope
fists
cld
pop
pop
pop
fisttpll
imul
jle
adc
mov
cmpl
add
ffreep
repz
addr16
xor
cmp
inc
sub
adc
push
stos
imul
push
mov
jmp
mov
cmp
sbb
cwtl
xchg
jmp
pop
push
add
dec
ret
movsl
rcl
dec
pop
cmpsb
cli
iret
jecxz
add
mov
mov
dec
aas
dec
and
imul
int3
insl
push
mov
fdivs
pop
push
add
xor
ret
adc
push
add
or
mov
repnz
xlat
lods
push
orb
cmp
cltd
dec
jmp
call
or
xchg
arpl
mov
inc
aam
icebp
mov
xchg
dec
sub
call
fwait
inc
adc
pop
out
mov
das
testl
cmp
je
push
mov
leave
in
cmp
and
add
mov
ss
data16
mov
out
sbb
and
xlat
mov
in
enter
mov
mov
xchg
sub
add
fidivrl
mov
and
cld
push
int
sar
jb
sti
fwait
aam
fwait
or
pushf
mov
in
fimuls
xlat
out
sub
movsl
sub
xchg
or
xlat
and
out
mov
cmp
xchg
push
das
cmpsl
loope
xor
ss
xor
hlt
gs
push
daa
lret
dec
sti
jle
and
mov
stc
pop
fsub
shrl
sbb
dec
clc
in
xchg
dec
pop
adc
jg
sub
sub
fstpl
pop
shlb
mov
mov
xchg
jns
cs
imul
sub
mov
scas
mov
cs
outsl
mov
pop
sub
mov
sbb
lods
das
scas
mov
gs
into
sarb
mov
arpl
pop
push
push
mov
sub
jnp
test
dec
in
int
lcall
sub
insl
jns
hlt
scas
sub
xchg
dec
cmpsl
call
roll
xor
es
ret
mov
push
or
movsl
movsl
lcall
cmc
scas
push
sbb
mov
add
jno
push
inc
mov
xchg
cmp
sbb
mov
add
jnp
pop
call
fnsave
shrl
jae
sub
adc
cwtl
cmpsl
sbb
fdivrl
sub
jl
sbb
insl
xor
leave
mov
pop
jo
mov
cmp
fcmove
push
add
sbb
push
mov
in
adc
ror
jmp
int
push
inc
lods
daa
and
and
mov
aam
negb
inc
push
hlt
jl
mov
das
inc
popf
mov
fbstp
std
adc
xor
orl
dec
mov
xchg
lret
lcall
lds
bound
mov
lret
js
testb
lret
push
arpl
push
cmpsl
jbe
mov
sbb
pusha
mov
sub
add
xor
aas
pop
cmp
jle
mov
stc
cmp
in
xor
aad
inc
inc
sbb
sti
iret
inc
mov
rorl
out
aad
or
fisubl
xchg
adc
ret
push
int
sub
pop
xor
dec
cmp
inc
cmp
adc
cs
mov
lods
mov
sbb
mov
sub
pop
hlt
mov
push
or
fprem1
mov
pop
in
pop
scas
lock
in
popa
iret
xchg
out
lret
sub
aas
inc
rcr
enter
insl
jns
ret
mov
jns
sub
in
mov
icebp
loopne
mov
fldl
dec
les
xchg
imulb
mov
cmc
push
lahf
scas
and
ror
fidivrs
pop
mov
fs
testl
loope
push
sahf
bound
xor
sub
inc
shlb
out
dec
push
cli
roll
bnd
scas
pushf
push
shll
pop
adc
mov
adc
adc
mov
push
sub
push
leave
jge
aaa
inc
les
lret
mov
add
les
push
xor
adc
pop
ljmp
xchg
aad
jae
call
xor
jo
shrb
pop
push
sub
test
ret
dec
cltd
or
adc
sub
rol
mov
pushf
fst
daa
lcall
nop
push
aad
adc
ret
test
popa
pop
repnz
cmp
push
dec
xchg
in
sub
mov
and
xchg
es
iret
cwtl
das
push
sbb
mov
ret
sbb
ss
jbe
and
sub
add
pop
add
dec
dec
mov
out
adc
sub
pop
xor
subb
aad
ret
push
push
shll
aaa
inc
popf
fwait
andb
out
ror
mov
adc
cmp
and
pusha
aaa
lret
jns
sub
jge
push
in
dec
call
aad
test
jnp
pop
fidivs
push
adc
test
ljmp
mov
sbb
ljmp
xchg
lahf
push
in
push
xor
out
or
cmp
mov
sbb
ret
jge
inc
xor
fwait
sub
das
data16
xchg
shll
aaa
inc
sbb
and
les
adc
test
shll
push
cld
cmp
iret
jg
lods
mov
dec
cmp
mov
cltd
rorl
lock
cwtl
push
mov
and
fwait
add
mov
inc
insb
decl
or
dec
cmp
add
mov
sub
mov
aam
mov
jge
bound
sahf
or
pop
filds
fs
outsb
shl
popf
out
fsubrs
xchg
jae
ss
call
imul
aad
pushl
mov
decl
aaa
cmpsl
pop
ja
and
mov
lcall
stc
loope
nop
into
xor
cwtl
popa
jae
faddl
mov
mov
enter
xor
jne
insl
xchg
outsb
sbb
pop
pop
clc
mov
mov
pop
outsl
rcl
insl
enter
sbb
sub
icebp
loopne
sub
cli
xchg
push
add
jg
stos
outsb
shrl
int3
mov
push
mov
nop
fistpl
shlb
loope
lods
mov
imul
sar
mov
into
in
xchg
es
mov
lcall
xor
mov
dec
add
leave
inc
mov
lock
pop
sbb
mov
xorb
mov
push
pop
inc
mov
test
jne
pop
adcb
fldcw
push
mov
dec
dec
xor
stos
sbb
outsl
sub
and
imul
add
mov
sbb
nop
loopne
xchg
fidivrl
int
dec
in
add
sbb
jb
mov
in
lock
adc
inc
inc
or
push
fisubrl
and
xchg
sbb
and
in
daa
xor
inc
xorb
mov
test
gs
leave
aam
add
ret
cmpsb
add
lret
jecxz
pop
cmp
cmp
cwtl
popa
sbbl
std
cmpsb
sub
shrb
in
inc
sbb
in
jg
cwtl
pop
pop
pop
test
add
arpl
test
push
inc
insb
mov
sar
push
push
lea
push
testb
stos
lret
push
ficoms
xchg
xchg
dec
jg
cli
psrlq
push
daa
sub
std
push
pop
fidivl
inc
inc
dec
jmp
jo
ficompl
ret
add
rcrb
clc
loopne
lods
mov
jp
sbb
loopne
mov
iret
push
mov
int
or
mov
scas
mov
push
aas
mov
adc
xor
xchg
xor
inc
push
mov
xlat
sti
and
add
addb
fstl
jne
mov
pop
decb
lret
push
out
xchg
imull
cmp
and
popa
jmp
movsb
push
aad
adc
fstl
insl
add
mov
test
jnp
jecxz
in
imul
pop
push
shr
nop
cmp
push
xchg
mov
in
add
or
lock
push
pop
inc
adc
push
ss
add
loopne
in
sbb
mov
ficoml
cmpsl
inc
ds
or
out
or
mov
and
inc
pop
push
clc
imul
cld
cmp
mov
ud0
dec
neg
xchg
aaa
xor
fistpl
pop
nop
adc
push
das
xchg
inc
sbb
xor
jle
inc
ja
int3
out
push
add
sbb
js
lahf
mov
sbb
adc
in
mov
mov
inc
mov
jns
stos
shll
ja
xchg
outsb
lods
repz
mov
adc
lcall
int
imul
ljmp
xchg
sahf
or
cmovns
andb
sti
dec
in
lret
sbb
cmp
repnz
mov
fs
adc
ljmp
std
push
pop
movsb
jb
add
add
iret
dec
push
cmpsb
loopne
in
aaa
stos
jecxz
je
push
mov
and
xchg
sbb
cwtl
xor
mov
push
dec
and
sub
outsb
sub
xor
push
fcoml
adc
std
daa
cmp
or
stc
push
sub
sub
sbb
inc
cmpl
add
leave
dec
jmp
cmp
dec
mov
outsb
fldt
mov
loope
fdivs
xchg
test
lcall
inc
cwtl
call
and
jecxz
xor
xchg
imul
pop
push
out
mov
jmp
sbb
xor
mov
fldt
push
test
lods
jl
out
mov
es
jg
imul
jg
and
inc
mov
pop
ds
pop
lds
fwait
cwtl
lcall
aas
pop
sub
mov
mov
inc
adc
out
jmp
xor
inc
pop
mov
push
xor
adc
dec
mov
sahf
daa
movsl
xchg
fiadds
jae
dec
js
mov
add
mov
leave
sub
dec
push
fs
inc
jp
les
or
add
imul
push
sub
mov
test
and
mov
inc
jecxz
and
cmpsl
ja
cmp
in
fdivs
cmp
xchg
loope
mov
aaa
lods
xchg
push
popa
lds
dec
xor
jbe
lea
movsl
roll
adc
mov
inc
es
stc
jl
xor
cmp
sub
add
les
mov
pop
shr
mov
gs
and
lock
jg
in
jg
mov
fcmovnbe
ss
sub
and
jb
jnp
sbb
scas
outsl
rcr
popa
pop
imul
add
dec
mov
xorb
in
arpl
cmp
lea
test
mov
outsl
xor
loop
add
xchg
sbb
lcall
and
push
or
push
dec
repz
or
test
imul
aaa
mov
jecxz
aam
pop
aaa
jnp
pop
enter
les
test
cld
lret
arpl
cmpl
clc
mov
in
pop
ret
or
jmp
xor
lea
push
ds
mov
fcomp
xchg
pop
sbb
push
data16
lods
xchg
pop
mov
in
bound
and
scas
jbe
pop
push
pop
sbb
push
js
lcall
or
or
xchg
jbe
jae
imul
sub
mulb
pop
hlt
loope
sbb
sbb
inc
test
sbb
lcall
aam
mov
lea
and
lret
sub
and
push
and
sbb
imul
sub
cmpsb
mov
xchg
add
mov
inc
jae
add
adc
pop
repnz
pop
sub
je
dec
jb
jnp
mov
push
testb
cmp
cmpsl
lds
pop
sbb
fbstp
mov
push
xor
ficomps
dec
test
insb
scas
les
inc
outsl
fsubrs
pop
fisubrs
cmp
inc
and
add
mov
popa
jbe
mov
fmuls
push
negl
jg
pop
in
pop
cmp
inc
addr16
xchg
mov
xchg
mov
mov
mov
mov
in
sbb
shr
std
das
arpl
mov
xchg
das
ds
xchg
jne
jmp
pop
and
jle
fwait
popa
dec
jo
outsl
pop
jl
pushf
fsubr
xor
fiaddl
lret
test
xchg
icebp
fcmovne
cmp
loopne
jg
and
test
mov
cmp
jmp
sahf
outsl
in
lock
pop
add
mov
cmp
add
test
lret
and
insl
or
cld
inc
adc
or
ljmp
push
dec
mov
shl
sub
sub
stos
test
mov
bound
ds
jle
stc
adc
sbb
fs
jg
mov
aam
fiadds
dec
cmpsb
push
xchg
xlat
mov
fcmovb
ret
dec
xchg
gs
and
cli
int3
js
mov
call
sbb
dec
dec
sub
xchg
adc
push
mov
pop
repnz
arpl
ss
rcl
xchg
mov
addr16
fnstcw
sub
rcll
mov
mov
inc
push
dec
mov
clc
mov
std
or
mov
pop
call
jl
ljmp
xor
fucomip
js
mov
mov
cmpsl
cmp
loop
popf
fcoms
lahf
test
out
movsl
in
data16
add
lret
stos
movsb
mov
xchg
adc
mull
xor
repz
jbe
cs
mov
dec
push
mov
inc
sbb
inc
pop
cld
nop
mov
orl
dec
mov
cmp
je
ffree
ror
fdivl
jge
rcrb
push
mov
imul
jno
jb
adc
pop
test
xor
and
pop
and
sbb
scas
mov
pop
push
sub
std
mov
jle
pusha
lods
pop
inc
lods
int
test
xor
sbb
jno
push
and
mov
mov
inc
add
cli
jp
ret
jecxz
fdiv
mov
xchg
cmpsl
mov
xchg
sbb
xchg
test
mov
stos
pop
subl
rclb
pop
ficomps
enter
mov
fmuls
xlat
hlt
jmp
hlt
sbb
addr16
daa
cmpsb
xorps
nop
sbb
or
sbb
test
cmp
jae
jecxz
jne
mov
pop
xchg
ror
jp
inc
inc
fidivrl
fidivs
pop
mov
adc
cli
stc
cld
enter
jno
mov
cmp
je
add
mov
push
and
and
mov
orb
lahf
into
aam
inc
pop
cmp
cmpb
es
cmc
leave
jecxz
lods
jp
out
inc
sbb
dec
hlt
mov
movsb
lock
or
repnz
daa
mov
imul
fbstp
jmp
mov
out
ds
sbb
mov
outsl
push
sbb
adc
scas
push
mov
shrb
pop
mulb
push
test
sub
jno
jmp
leave
mov
test
push
insb
insb
xor
xor
idivl
or
sub
ret
ret
mov
js
ret
sub
shl
add
repz
rol
lods
es
xor
sub
inc
in
sarl
add
nop
xor
pop
xchg
mov
mov
roll
fucom
out
or
in
cmpsl
inc
mov
scas
xor
pop
pop
xor
daa
push
cmp
cmp
mov
enter
push
cld
hlt
and
hlt
ss
or
mov
add
add
push
sti
cmpl
mov
cmpsb
mov
aas
popf
jno
rcrl
sahf
ret
fstl
pop
mov
dec
pop
mov
or
or
mov
out
push
loopne
ret
nop
cld
pop
jo
ret
lods
pop
imul
mov
xchg
ret
mov
icebp
cmp
faddl
inc
adc
mov
jecxz
shlb
pop
das
hlt
sub
loopne
xchg
dec
jp
pop
xchg
inc
sub
addr16
dec
xchg
xor
xor
sbb
jno
ss
mov
lea
in
out
test
ror
inc
sbb
inc
cli
lret
ds
lea
xor
jne
sbb
and
sti
repz
pop
dec
ja
repnz
and
add
adc
lea
in
and
sbb
cs
in
mov
jge
xor
sti
cmp
sub
and
out
mov
call
fsts
dec
scas
cmp
stos
lea
popf
in
cmp
inc
jp
inc
jmp
lds
mov
inc
xlat
jl
iret
xlat
pop
sbb
pop
aas
sbb
xor
and
inc
mov
out
jns
gs
mov
inc
enter
mov
dec
loope
out
pop
xchg
mov
dec
icebp
daa
xchg
test
addr16
or
jo
mov
sbb
into
negb
outsl
add
or
in
inc
sub
sub
lret
mov
pop
pop
mov
and
fdivrp
es
or
mov
in
js
scas
xor
mov
loope
mov
push
or
cld
dec
mov
lahf
xor
pop
icebp
fwait
push
mov
std
push
test
dec
movsb
sub
dec
andl
cmp
and
leave
cltd
add
xchg
sub
cmc
mov
inc
fisttps
fnstsw
in
push
sarb
and
and
and
sbb
test
jge
out
mov
mov
imul
xchg
cltd
inc
lea
cmpsl
xchg
sub
fwait
cmpsl
dec
mov
or
das
neg
adc
dec
aad
inc
insb
dec
lret
les
test
inc
jbe
shll
mov
cs
retw
cmp
test
mov
adc
pop
test
inc
pushf
nop
ljmp
movsl
cmc
mov
fildll
bound
or
mov
push
pusha
movsb
jmp
sub
movsb
mov
pop
xor
adc
sarb
aaa
shl
das
cmp
in
lcall
xor
xchg
lcall
or
cwtl
in
jae
adc
add
jb
sahf
cmp
int3
adc
fwait
lock
out
pop
add
divb
inc
shrl
iret
repz
adc
in
aas
mov
mov
inc
push
dec
cmp
cmp
adc
adc
push
xor
test
pop
push
popf
outsl
add
cwtl
loopne
loopne
push
int
jae
push
jecxz
pushf
mov
mov
sbb
fdiv
mov
cmp
insl
jmp
shl
ror
jno
bound
push
jl
stos
outsl
dec
loop
or
int
enter
dec
dec
idivb
fldt
or
adc
repz
push
sub
jo
imul
sbb
push
rcr
xor
idivb
pop
movsb
out
mov
sti
sbb
pop
out
loope
test
push
out
add
fs
mov
aas
mov
mov
test
cmp
jge
ret
sub
inc
fdivrp
into
xchg
inc
xchg
arpl
sbb
inc
jmp
lock
int
and
sub
aaa
mov
repnz
add
rolb
mov
or
mov
jne
sbb
enter
inc
cmp
mov
and
outsb
stos
out
and
outsl
sub
aas
jno
std
iret
xlat
sti
lea
pcmpgtd
icebp
mov
cmpsb
idivl
mov
es
jne
and
sub
dec
xlat
test
adc
stos
xor
jns
mov
cmp
jl
in
mov
aaa
std
dec
ljmp
int
data16
mov
adc
ja
push
push
mov
mov
or
nop
in
popa
ljmp
mov
xor
ret
loope
out
lret
cmpsb
push
stos
mov
sarb
scas
sbb
clc
pop
sbb
push
jmp
xchg
movsb
fwait
das
aad
cwtl
and
testb
loopne
jo
ljmp
imul
arpl
add
push
xchg
jge
sbb
lea
loop
fsubrs
push
jle
mov
popa
xchg
orb
cmp
jno
sub
push
sub
or
dec
jno
jmp
mov
adc
leave
inc
jl
cmp
jnp
sub
jmp
ret
sbb
scas
mov
or
cwtl
sbb
pop
sub
sub
xchg
jmp
inc
orl
cmp
cwtl
jb
cli
pop
incb
imul
sbb
scas
out
or
popf
adc
int
push
mov
dec
or
jle
lcall
nop
shll
inc
test
mov
movsb
orb
dec
cld
cmp
mov
repz
xlat
fdivrp
inc
dec
outsb
je
ffreep
inc
cmp
mov
sarb
in
push
addl
pop
jge
cmpsb
cli
cmp
ret
mov
lret
dec
pavgw
sti
dec
jg
push
arpl
inc
insb
or
es
adc
and
push
scas
adcl
mov
loopne
push
loopne
cmp
lods
in
out
out
test
ret
mov
mov
jns
jae
jge
pop
fnsave
ljmp
mov
aad
cmc
dec
push
push
test
nop
jno
fptan
inc
cmpsl
pop
cmpsl
xor
sub
movsb
dec
rorl
addl
mov
popf
push
jns
mov
out
in
adc
in
xchg
iret
push
cmc
push
inc
in
loope
mov
jle
inc
dec
jo
pop
jbe
xchg
insb
push
and
cltd
mov
xchg
cwtl
push
aaa
xor
int3
pop
dec
jbe
pop
outsl
cld
andb
loope
add
mov
test
arpl
pop
pop
xchg
xorl
push
nop
and
repnz
push
add
in
jge
push
dec
xchg
xor
dec
pop
in
fbld
jo
and
fcmovnbe
test
mov
inc
movsl
and
shlb
or
rcl
test
js
and
mov
daa
fstl
scas
sub
ss
ljmp
add
loop
arpl
shr
mov
xchg
pop
and
pop
pop
cld
aas
divl
jle
fninit
or
fstpt
mov
gs
sub
addr16
addr16
icebp
sub
std
icebp
movsl
lahf
dec
sbb
mov
lahf
ret
and
jp
sub
dec
jnp
clc
push
rorb
nop
mov
fld
aaa
pop
aas
daa
mov
xchg
loopne
xchg
lock
setl
cmc
pusha
fsubrs
sub
mov
mov
and
fstpt
push
pop
mov
or
mov
xor
jno
or
or
add
pop
mov
sub
popf
mov
xchg
sub
mov
push
dec
iret
xor
inc
les
fcom
gs
imul
add
xorl
test
and
fs
push
mov
mov
ja
int3
push
in
inc
loopne
je
in
pop
pop
lock
int3
jmp
imul
xchg
fidivrl
sarb
lahf
sbb
inc
test
out
mov
popf
dec
pop
pushf
xor
dec
ret
or
loopne
loop
sbbl
aaa
ja
insl
or
cs
inc
ljmp
sub
xchg
xor
jg
pop
pop
test
or
xchg
fiadds
hlt
xor
push
shll
aaa
andps
or
push
aas
outsb
inc
lcall
xor
out
or
jae
inc
push
jp
repnz
xadd
or
and
cld
push
sahf
jle
mov
push
iret
ss
mov
popa
sub
dec
mov
mov
xchg
pop
rolb
into
icebp
push
cld
cltd
andb
and
dec
test
pop
push
in
movsl
jb
movsl
pop
pop
sbb
cld
imul
xchg
push
cmp
addl
or
adc
movsl
cmp
dec
dec
iret
sub
mov
stos
adc
jl
mov
ret
sarb
push
std
psubq
cld
mov
bound
pop
repz
mov
fnstcw
les
loope
jo
pop
jmp
jne
stos
pop
push
mov
or
xor
scas
ret
jp
rcrb
xchg
pusha
movsb
std
xchg
cmp
sbb
mov
sbb
cmc
push
cltd
int
lods
and
adc
jg
aas
bound
jo
addr16
ret
dec
xchg
jl
dec
gs
fcomp
sbbl
cli
lods
ret
outsl
stc
lock
icebp
stos
mov
lea
push
push
dec
or
or
out
popf
out
add
add
pop
pop
aam
test
ror
ret
mov
imul
sbb
sbb
sahf
xchg
inc
not
outsb
or
addl
sbb
xchg
psllw
inc
xchg
sbb
jge
jle
loopne
cmp
xor
mov
lcall
or
mov
mov
xor
lods
xor
jecxz
mov
pop
ljmp
cmpb
int
jl
mov
mov
movsl
sbb
jp
fimull
movl
add
xchg
push
faddl
iret
mov
push
gs
and
les
add
aas
cltd
aaa
repz
scas
pop
lcall
and
jle
mov
gs
dec
jmp
inc
mov
jae
mov
jecxz
push
push
clc
xchg
shr
sbb
sti
sub
cmpb
cmp
mov
sbb
inc
xchg
fnstsw
andb
in
mov
rcrb
sbb
add
and
ss
stc
and
dec
scas
mov
ljmp
in
mov
mov
push
fwait
ds
int3
je
pop
outsb
fidivl
loopne
in
xor
cmp
inc
or
jp
and
cmovo
aad
das
xchg
jns
loope
fisubrl
xor
mov
dec
stos
int3
add
inc
push
jge
dec
mov
xchg
inc
xor
test
mov
andl
test
int3
pop
cmpsb
repnz
mov
rol
fdivl
loope
out
ljmp
ljmp
iret
xchg
in
sub
push
mov
xchg
out
cmc
outsl
fimull
or
dec
cmp
lds
cli
in
add
dec
sbb
sbb
andl
loopne
shrl
icebp
sbb
in
sbbb
pop
and
fsubs
in
push
dec
outsb
aad
stos
mov
outsb
push
xchg
push
repnz
jae
cltd
in
mov
lahf
dec
xchg
xchg
dec
fidivrs
lock
js
push
mov
push
sbb
mov
sub
add
sub
das
xchg
stc
adc
adc
shlb
sahf
adc
xor
aaa
aad
dec
addr16
or
fmulp
ret
or
test
test
jno
into
sub
scas
mov
insl
inc
loope
ficoml
add
leave
inc
add
dec
lods
movsb
dec
dec
mov
int3
sbb
push
sbb
lahf
xor
lcall
out
sbb
in
test
jg
or
imul
in
sub
movsb
gs
pop
aad
mov
testb
add
sarb
xor
push
mov
addr16
incb
decl
dec
dec
stc
sub
xlat
adc
in
xlat
cltd
adc
fadd
pop
cmp
lds
xor
pusha
inc
dec
adc
cmp
cltd
dec
mov
or
adcl
adc
subb
lret
jmp
push
adc
jb
lret
dec
mov
sbb
stc
or
loopne
insl
lcall
pop
test
dec
mov
icebp
mov
fisubrl
dec
mov
aaa
jnp
icebp
cmp
in
stos
bound
pop
jl
test
pushf
xchg
add
out
cld
or
push
std
js
fcmovu
mov
push
ss
sbb
bound
loope
call
subb
mov
mov
out
imul
pop
mov
scas
fwait
in
mov
or
or
and
cmp
in
in
sub
movsb
addr16
ljmp
in
testb
sbb
in
sbb
xor
add
or
push
sti
fbld
mov
out
ss
add
imul
jnp
mov
adc
push
outsl
loop
cli
cld
inc
aaa
jecxz
xor
mov
pop
subl
push
mov
cmp
add
jbe
gs
call
les
cmp
inc
cmpsb
mov
push
push
dec
sbb
or
jmp
and
xchg
movsb
mov
push
cmpsb
lcall
jg
lods
es
sub
fs
adc
or
sub
iretw
pushf
setp
out
xor
scas
shlb
push
sub
mov
or
jns
ret
rcl
push
jb
imul
xchg
ja
test
sub
mov
stc
sbb
btr
xlat
inc
insl
out
or
inc
loopne
jp
addr16
arpl
test
test
mov
cs
jbe
sub
cld
jmp
dec
loope
adcb
adc
notb
cs
sub
fsts
adc
rclb
push
repnz
xor
pop
ja
xor
in
dec
and
push
xchg
xchg
push
mov
adc
adc
sub
xchg
notb
out
andb
add
push
rorl
sub
sub
stos
cwtl
xchg
test
cli
scas
mov
adc
push
xor
insl
jae
jno
mov
xor
mov
pop
sbb
mov
sub
mov
fst
xor
ss
leave
ret
pop
mov
xor
das
jae
add
push
sarl
aas
fdivrl
inc
mov
test
or
aas
adc
sbb
shrl
add
sti
xlat
add
test
jbe
inc
clc
loope
fcompl
mov
push
pop
mov
addb
mov
xchg
cli
fdivrs
adc
outsb
or
fldt
and
push
and
or
int
loopne
cmp
jnp
movsl
mov
subl
les
shl
in
sbb
imul
insl
mov
jnp
add
sub
mov
jbe
incl
push
xor
mov
pop
mov
mov
push
cmp
adc
cmc
in
mov
sbb
xchg
sbb
cmp
iret
push
arpl
test
loope
andb
and
aas
ret
out
lock
movsl
mov
xor
lock
sub
jae
stc
fdivrl
jns
das
cmc
imul
cmp
sub
and
ficompl
jae
adc
pop
mov
gs
addl
dec
shll
stos
ret
iret
xor
subl
add
shl
cld
xor
es
pushf
xchg
aam
inc
xorl
loope
mov
xchg
ss
mov
rorl
daa
mov
sahf
fdivrs
mov
mov
imul
push
dec
pop
mov
mov
xor
sub
xchg
lss
cmp
into
mov
out
out
inc
shll
push
ljmp
out
or
jge
loop
dec
sahf
xchg
insl
push
stos
add
push
fucomi
pop
inc
xchg
push
in
loope
xor
push
push
jmp
nop
adc
in
push
cltd
jge
dec
in
ja
and
add
jecxz
adc
mov
test
jne
popl
into
jge
jne
xlat
mov
dec
jge
push
cli
call
cmp
into
icebp
lea
mov
adc
adc
ficoml
dec
out
das
push
fucomp
lds
lahf
sub
sbb
out
adc
jl
mov
mov
imul
jecxz
pop
and
enter
out
cmpsl
xchg
lds
adc
loope
es
xor
stc
loop
loope
adc
lret
cmp
inc
add
aad
imul
xlat
fs
data16
add
inc
xchg
mov
ret
push
cmc
mov
mov
imul
pop
sub
lods
jge
lock
and
out
jb
into
pop
cltd
faddl
sahf
scas
pop
xchg
test
icebp
lock
stos
xchg
dec
jnp
or
dec
stc
mov
mov
in
je
aad
sti
das
mov
dec
jo
jne
fcmovbe
arpl
sub
test
cmpb
lret
push
mov
les
sahf
dec
mov
in
icebp
mov
mov
push
mov
inc
sahf
xorl
mov
jb
lahf
push
sbb
bnd
xor
push
add
ss
and
cmp
mov
xor
dec
push
mov
jp
adc
push
jo
sarl
loop
test
jns
fadds
pop
orl
xchg
dec
test
clc
push
in
add
imul
addr16
jb
incb
add
inc
aaa
xchg
into
leave
imul
push
xor
iret
sub
mov
lret
dec
cmp
fs
fs
ret
ljmp
iret
fwait
xor
jmp
je
sbb
out
mov
scas
sbb
mov
inc
mov
mov
add
pop
or
jno
pushf
add
xchg
inc
popa
loope
and
sbb
sbb
stos
inc
jle
lea
sub
ret
addb
sahf
mov
xor
jae
and
mov
test
iret
mov
add
pop
int
icebp
fisttpll
lahf
pop
scas
sub
cltd
sbb
clc
cmp
pop
imul
rolb
insb
mov
inc
hlt
pop
pop
fldenv
insl
imul
enter
push
fistl
pop
test
adc
pop
mov
jno
xchg
push
jo
mov
stos
jge
mov
mov
cmp
std
cwtl
sub
xchg
lea
cmc
jne
mov
dec
lock
dec
and
cmpsb
mov
sub
sbb
xorb
aaa
sbb
adc
mov
pop
inc
fcompl
push
add
sarb
adc
jge
loope
push
cmp
sbb
jno
add
cmpb
pop
fsts
and
push
std
ds
nop
cwtl
cltd
int
sti
fstpt
cmp
and
mov
sub
jne
jmp
movsl
cwtl
sub
jns
mov
call
xor
push
imulb
mov
sub
and
sub
dec
jne
push
pop
cmc
loope
rclb
mov
cwtl
sub
fwait
test
addb
out
mov
xchg
and
pop
xchg
fs
push
mov
adc
mov
lds
jbe
cmpb
rol
inc
mov
fidivrs
push
or
and
mov
testb
jle
cmp
dec
test
mov
arpl
push
cmp
int
xchg
das
mov
push
dec
cs
pop
push
jmp
lahf
lret
js
push
jle
sbb
rorb
inc
jp
hlt
inc
jno
cmp
movsl
popa
fimull
inc
popf
adc
repnz
fimull
add
and
add
test
rcl
dec
mov
and
mov
outsb
mov
shrb
dec
stos
stos
into
jle
movsb
and
fucomip
mov
shll
pushf
jmp
sbb
jb
notb
fstpl
mov
ljmp
out
push
lcall
std
mov
out
loopne
popf
jne
mov
sbb
gs
push
jmp
loopne
cwtl
testb
add
xor
das
lods
inc
jno
mov
pop
sti
pop
pop
adc
inc
adc
inc
xchg
and
inc
ds
add
pop
repz
imul
sbb
sahf
xor
push
add
and
sarb
daa
sub
dec
nop
mov
sbbl
jb
add
insl
outsb
fisttpll
mov
idivl
pslld
ficoms
dec
popa
jns
mov
ret
mov
push
std
mov
pop
scas
sub
cmp
movsl
pop
icebp
push
cmp
cmpsl
and
test
aaa
add
mov
shr
stc
cmp
adc
sub
pop
ffree
push
add
mov
add
mov
mov
jb
xlat
add
mov
idivb
sbb
pushf
xchg
jbe
adc
cmpsl
fdivrl
lods
mov
or
mov
inc
xor
rolb
scas
xlat
or
mov
in
lahf
ss
cwtl
pop
fwait
cwtl
mov
xor
xchg
add
insl
xor
or
inc
or
jb
aam
loope
push
ljmp
mov
dec
sahf
ds
je
cmc
or
mov
mov
and
xchg
shrb
jno
ds
subb
loope
xchg
inc
xchg
addr16
popf
das
jne
jge
outsl
inc
jge
ljmp
lods
or
cmpsl
dec
mov
push
add
insb
sub
and
pop
and
shrl
ljmp
nop
gs
cmc
adc
je
mov
outsb
ds
push
and
jecxz
lods
xor
fdivr
into
cmp
fistl
sbb
pusha
scas
icebp
movsl
mov
mov
lock
lods
jecxz
pop
pusha
stos
in
adc
mov
int3
and
inc
data16
jo
pop
lahf
das
jne
enter
inc
ja
f2xm1
sti
jo
shll
out
fsubs
out
or
add
dec
mov
dec
das
mov
rorb
movsl
fiadds
mov
mov
push
adc
xchg
jb
lcall
or
and
mov
sub
add
lcall
jg
inc
push
cmpsl
push
adc
test
sahf
pop
inc
push
and
pop
push
sbb
push
mov
sub
inc
or
xor
sbb
lret
sbb
mov
ljmp
or
xchg
pop
cmpsb
or
cli
fildll
sbb
push
je
loope
inc
filds
jo
sub
inc
cmp
mov
jmp
pop
sbbb
test
addb
add
repz
adc
outsb
jp
nop
inc
lods
orb
jne
pusha
push
cmp
mov
push
cld
lcall
mov
mov
mov
fs
into
outsl
das
mov
pop
adc
mov
sub
insl
js
sub
dec
cmc
testl
subl
lea
repz
mov
and
xchg
and
mov
insl
movsb
adcb
std
mov
and
adc
adc
ds
clc
scas
pop
sarb
mov
int
ja
mov
ljmp
push
or
rclb
inc
push
fldcw
push
lock
mov
cld
loop
inc
lret
scas
daa
pop
inc
push
insl
ret
push
jbe
aaa
pop
cmp
xchg
mov
mov
xor
inc
add
hlt
mov
rcrl
jl
les
push
mov
je
or
mov
pushf
mov
roll
cltd
rcrl
or
xchg
xor
pop
insb
sbbl
lea
add
mov
lret
je
jno
les
add
add
jo
adc
push
dec
xchg
lcall
sarl
jo
xor
daa
or
repz
or
mov
and
push
jb
dec
pop
scas
pop
push
dec
ret
xchg
adc
in
jno
push
xor
jmp
jno
inc
out
cmp
fmull
inc
orl
movsl
into
fwait
scas
cmp
fsubrl
icebp
adc
les
ss
mov
es
cmp
xor
arpl
pop
push
pop
mov
fiadds
adc
dec
imulb
imul
jae
loop
lock
push
xchg
mov
ret
inc
xchg
or
data16
popl
sub
shr
pop
imul
push
call
repz
or
loope
sahf
push
jg
fsts
je
hlt
add
pop
push
fisttpll
std
icebp
aaa
sbbl
lahf
mov
sub
imul
sbb
repz
or
ljmp
push
fs
lret
dec
fcmovnb
mov
add
daa
cmp
mov
xchg
ret
mov
xchg
inc
xor
push
int
inc
mov
outsb
hlt
inc
xlat
and
and
jns
int3
push
cld
mov
add
push
mov
out
repz
or
pop
mov
mov
jae
gs
sbb
push
adc
jecxz
mov
mov
dec
mov
idivl
repz
xor
fisttpll
mov
pusha
inc
scas
and
lods
in
imul
xchg
es
mov
gs
cltd
sub
adc
cmc
pop
cmp
adc
jnp
cmpsl
je
je
adc
mov
fdivrl
popf
and
pop
mov
shl
mov
loope
out
dec
push
out
cmp
add
movsb
test
push
add
mov
aad
std
aaa
test
xchg
ss
mov
cmp
test
sub
inc
mov
mov
push
test
adcl
mov
rorl
jl
cs
add
mov
gs
push
andl
xor
std
jns
orb
out
mov
lret
aaa
push
stos
and
mov
pop
jne
int3
gs
ja
lea
loopne
mov
mov
jb
jl
xorb
into
cmp
repz
std
mov
adc
cmp
jno
push
xchg
std
inc
or
test
xchg
add
dec
int
push
push
add
push
push
push
sbb
sub
cmpb
or
fsubs
inc
sub
cmp
pop
xchg
aas
iret
ljmpw
dec
nop
push
aas
stos
int
inc
push
push
mov
add
ffreep
pushf
jo
fstpl
dec
gs
jbe
pop
lods
popf
loopne
xchg
les
adc
cmp
out
mov
sbb
aaa
cmc
rclb
outsb
shll
aad
stos
loopne
sub
sub
stos
imull
dec
nop
shlb
jno
fidivrl
lret
mov
iret
sti
push
shlw
mov
adc
addr16
lods
xchg
adcb
test
in
xor
xchg
sub
cwtl
call
or
mov
cmc
insl
pop
mov
mov
and
xchg
mov
imul
vpcmpeqb
bound
into
xchg
repnz
cwtl
xchg
addl
or
fs
pop
xchg
lahf
inc
cmp
push
xchg
jp
aaa
imul
dec
cmp
ja
inc
jmp
insb
ret
push
nop
xor
mov
daa
divl
inc
mov
loop
jg
mov
leave
xchg
xor
jle
xchg
pop
sbb
data16
xor
fstl
outsb
data16
cmp
push
and
dec
scas
pop
scas
push
adc
insl
incl
xor
test
aaa
je
dec
mov
std
gs
or
lcall
repnz
icebp
adc
xchg
iret
lret
adc
into
dec
js
daa
stc
adc
add
xor
xor
xor
pop
and
dec
cmp
mov
lock
movsl
call
mov
das
bound
lret
xlat
inc
jecxz
pop
add
fisubrl
dec
add
xchg
out
sub
push
or
add
outsb
dec
lahf
imul
rol
jmp
lret
pop
cltd
cwtl
js
cmp
xchg
test
jno
mov
push
loope
mov
cwtl
sbb
sahf
les
roll
pop
mov
push
mov
mov
imul
add
fld
pop
or
lret
cmp
loop
sub
lock
xchg
addr16
add
sahf
rol
xchg
in
bound
inc
insb
ja
insb
movsl
sbb
stos
push
push
mov
fsub
cmp
push
cld
fnstcw
pop
xor
mov
inc
addl
stos
es
lcall
xor
dec
aaa
push
pushf
repnz
cmp
mov
pop
xchg
lods
loope
bound
sub
push
pop
or
repz
jae
cld
je
outsb
push
push
mov
pop
test
loop
mov
clc
xor
push
sub
inc
cld
and
nop
xchg
lods
leave
pop
push
pushl
fcom
inc
add
mull
sbb
into
rclb
adc
rcl
orl
jbe
fimull
cmp
loop
sbb
push
popf
fnstenv
mov
or
cmc
movsb
btr
repnz
add
lahf
xor
dec
jle
lods
loopne
or
and
rol
stc
mov
lret
mov
lock
cwtl
rclb
pop
adc
rcll
xchg
fdivl
add
adc
pop
add
pop
call
insl
mov
sbb
subb
or
dec
fildll
out
mov
or
cmp
jb
pop
fnsave
repnz
sbb
mov
pop
dec
aam
cmpsl
adc
mov
lret
jbe
rolb
orb
sbb
mov
dec
sbb
sahf
ss
add
cld
fs
mov
xchg
dec
and
popf
push
incl
stos
jle
aas
repnz
mov
mov
aam
ret
pop
pop
imul
stos
xor
shl
cmc
mov
in
pop
mov
jmp
sub
mov
in
cmp
xor
outsb
inc
mov
loopne
cli
and
cli
push
cs
lea
jg
push
add
or
mov
xlat
xor
enter
fcmovb
xlat
divl
push
ljmp
dec
int
xchg
jb
clc
add
xor
jg
adc
and
sarl
cmovnp
js
and
out
outsl
popf
mov
test
xchg
bound
push
loope
pop
pop
pop
push
mov
dec
cmp
lods
jns
test
outsl
stos
jmp
shll
pop
add
not
adc
dec
xchg
repnz
adc
xchg
inc
sub
add
jg
in
push
inc
orl
fmul
pop
and
loopne
cmp
adc
stc
and
ret
decl
mov
sub
sbb
clc
pcmpgtb
pop
test
in
repz
jae
xor
imul
jecxz
inc
mov
sarl
test
mov
sbb
mov
test
mov
in
push
inc
sub
cmp
mov
jne
mov
ss
out
jle
movsb
popa
outsl
push
adc
push
js
sbb
inc
les
push
and
ja
mov
paddb
divb
pop
inc
icebp
sbb
and
push
shll
sbb
mull
xor
dec
int
xor
fucom
push
fst
mov
stos
shll
mov
jns
sbb
loopne
push
fstpl
insb
loop
loope
xlat
scas
into
dec
mov
test
jge
das
adc
sub
mov
add
xchg
mov
pop
mov
stc
sti
ror
jge
dec
lcall
lcall
or
push
movsl
int3
sti
jo
inc
dec
cmp
mov
inc
jnp
adc
xlat
mov
es
fwait
mov
andb
or
iret
and
jns
mov
in
xor
movsl
mov
pop
xor
pand
imul
addl
adc
icebp
out
inc
cmp
rcrl
mov
mov
and
enter
add
punpckldq
outsl
loope
and
mov
sbb
jns
sbb
xchg
pop
negl
xchg
call
enter
sub
xchg
cmp
std
cmp
arpl
sarl
mov
in
clc
mov
or
imul
hlt
stos
cwtl
jne
fdivs
inc
jb
lods
and
in
adc
movzwl
add
cld
lahf
xor
vpaddq
push
fldenv
popf
aaa
mov
sub
lods
xor
xchg
lret
subb
insb
adc
jae
sub
inc
nop
inc
cmp
pop
enter
das
sbb
leave
ds
shrb
adc
dec
out
mov
repnz
push
lcall
gs
push
adc
sub
stos
adc
loop
rorb
sub
imul
out
stos
pop
into
nop
loope
les
push
or
xchg
push
es
mov
bound
inc
jp
or
adcb
insl
data16
ficoml
lahf
sbb
inc
fcomps
add
shll
pop
sub
es
scas
cmp
jle
inc
mov
jmp
jns
test
cld
addr16
cmpsl
dec
inc
jg
loop
xor
sbbb
and
and
jne
arpl
shlb
scas
leave
cmp
out
movsb
xchg
outsl
xchg
and
mov
mov
jne
dec
repz
jl
aam
pop
pop
push
cvtps2pi
push
xchg
mov
fwait
dec
adc
push
fistpll
cmpsb
mov
inc
jae
out
mov
and
jl
push
adc
inc
jge
xchg
sti
dec
xor
pop
into
xorl
xor
les
std
ret
cmc
inc
mov
xlat
pop
cmp
sti
xchg
lock
addr16
push
and
inc
movsl
pop
sub
pop
sbb
dec
sub
inc
testb
xchg
adc
xchg
mov
sub
fwait
jl
jnp
out
fidivrs
xchg
cmc
or
push
lcall
sahf
in
sub
sar
sbb
push
mov
pushf
mov
lret
out
sbb
pop
fnstcw
sbb
stos
popf
adc
inc
dec
xchg
cmp
xchg
test
jno
cli
popf
jmp
aaa
fmulp
add
jp
inc
jno
clc
mov
call
mov
mov
mov
repnz
mov
and
cmp
daa
mov
sub
or
jnp
out
movsb
mov
xchg
loope
insb
cld
pop
mov
shll
lret
cmp
xor
pop
bound
cmp
push
and
xchg
lock
lcall
add
sub
push
jbe
aam
and
or
cmp
pusha
xlat
mov
lret
and
and
cmp
aad
inc
lods
mov
ja
xorb
pop
push
gs
idiv
add
rcrb
xchg
in
sbb
add
ret
lcall
inc
stos
cmp
xchg
cs
out
andl
imul
cmpsb
push
push
das
jne
sub
and
scas
jnp
adc
push
jnp
sarl
cmp
mov
pop
push
jns
pop
or
jnp
addb
out
or
icebp
jbe
rcll
faddp
lods
pop
dec
lods
or
ror
jne
cmp
fimuls
add
stc
cmp
sbb
add
pop
out
popf
jge
cltd
fisubrl
into
and
mov
sbb
sub
inc
xchg
sub
js
jg
aaa
cmp
jecxz
ret
out
jp
pop
pop
repnz
scas
pop
jecxz
xchg
xchg
testl
les
ljmp
lods
sub
xchg
adc
cmpb
call
jle
jle
addr16
movb
add
test
jmp
push
call
arpl
or
and
popa
addr16
cld
pop
js
pop
lds
es
inc
insb
jecxz
bound
addr16
add
xchg
dec
push
push
xchg
add
jnp
leave
mov
and
mov
cmp
pop
pusha
bound
lret
push
mov
or
scas
cmpsb
mov
pop
mov
jo
sbb
xchg
frstor
cltd
sahf
mov
or
popa
dec
mov
add
test
incl
mov
push
add
lea
lcall
mov
int
sbb
cmp
and
mov
inc
or
xor
dec
aad
cmpsl
dec
xchg
test
mov
pushf
mov
arpl
rclb
leave
adc
mov
outsl
lods
es
xor
xor
push
lods
into
sbb
les
test
lods
ret
sub
sbb
out
stos
jne
inc
inc
mov
add
and
or
add
cmp
jg
and
sarl
mov
fsubs
aas
outsl
bound
jns
lods
jp
fmulp
or
adc
jp
outsl
gs
add
mov
adc
push
cmp
xor
inc
jno
cmc
in
add
pushf
loope
jg
and
in
xor
fucomi
lret
mov
and
pop
leave
pop
add
cmp
pop
push
jg
pop
pop
fistl
mov
mov
pusha
lret
add
pop
dec
jnp
outsb
cli
and
loop
sbbl
or
adc
mov
cwtl
sub
ficoms
pop
inc
mov
sti
inc
dec
mov
xlat
lods
xchg
sub
in
mov
mov
xchg
sbb
cmp
inc
adc
ret
ret
push
lret
loopne
mov
sub
es
rcll
adc
scas
jno
xlat
loopne
inc
xlat
push
pushf
inc
fcompl
cmp
inc
push
xchg
push
mov
jmp
sbb
lea
jnp
mov
decb
out
mov
xchg
dec
shlb
out
ds
popf
push
mov
add
jge
adc
and
iret
inc
dec
jb
push
jecxz
arpl
int
bound
aas
and
aaa
xchg
bound
and
fistpl
icebp
out
rcll
add
adc
test
insl
xchg
cmpsl
mov
lret
aad
fists
icebp
adcb
xlat
jnp
inc
jmp
icebp
sub
or
mov
aaa
sub
dec
mov
scas
mov
jns
fidivs
push
out
fnstsw
shr
dec
mov
js
dec
sar
nop
loope
clc
dec
sbb
cld
cmpsl
ficomps
xchg
sbb
bound
jns
cmp
rcrl
mov
loope
mov
fcmove
orb
insl
xchg
jo
xchg
push
sbb
fisttpll
cmp
insl
sub
mov
in
sub
arpl
scas
push
inc
inc
sbb
push
ss
mov
xchg
icebp
popa
aad
fsubrl
daa
jp
sti
addb
mov
mov
add
cli
pop
addl
mov
mov
aad
jno
dec
daa
ja
dec
cmp
pop
fbstp
mov
pop
sbb
imul
pop
lcall
int3
je
shll
dec
fisttpl
push
popf
insl
add
xchg
fstpt
jle
daa
iret
and
mov
inc
and
jae
dec
ds
addr16
test
pop
mov
ficoml
fcmovne
jne
enter
cltd
repz
cmp
xchg
aaa
cmp
mov
int3
flds
sub
fildl
mov
mov
fistps
or
pop
sub
pop
jo
mov
and
jo
cmp
mov
dec
js
addr16
lea
cmc
inc
jle
pop
out
pop
xchg
ret
mov
cld
adc
lahf
mov
mov
add
popa
cmp
push
mov
das
sahf
mov
stc
mov
dec
xlat
jne
xchg
mov
pop
dec
cmp
imul
push
cmpsl
jmp
hlt
stc
jmp
mov
pop
jg
push
add
pop
lods
imull
nop
aas
pop
sahf
insl
stc
mov
idivb
xchg
fwait
push
ds
push
inc
inc
loope
outsb
fidivs
inc
mov
cmp
daa
das
add
gs
pop
cmc
imul
pop
mov
pop
int3
fwait
mov
jmp
jo
push
lcall
adc
mov
sub
dec
fwait
cmp
test
insl
mov
jo
test
sbb
sub
ljmp
mov
fmul
or
test
xchg
and
sbb
sbb
mov
xchg
cmp
push
loope
and
cld
or
mov
push
arpl
and
cmpsb
movsb
mov
aas
repz
test
add
aad
push
pop
sub
push
mov
adcl
dec
pop
jns
insl
cwtl
cmpsb
out
add
fadds
and
subb
ds
stos
and
mov
aas
sahf
int
inc
negb
or
adc
jge
xlat
pusha
xchg
sbb
shlb
mov
iret
xor
sub
sbb
pop
xchg
inc
jbe
cmpsl
cmp
cmp
push
jecxz
pop
imul
sbb
cld
or
out
fmulp
in
xor
adc
icebp
mov
add
pop
pop
andb
dec
in
dec
mov
mov
mov
and
add
dec
mov
xchg
int
loope
les
dec
xlat
insl
push
sub
xchg
dec
jg
call
sub
cmp
sbb
gs
or
jl
sub
sbb
xchg
mov
into
vpshufhw
das
inc
add
mov
dec
xchg
enter
insb
lahf
cltd
dec
sbb
add
push
xor
push
lahf
ljmp
mov
dec
scas
xor
fwait
lds
stos
sbb
icebp
call
pushf
jnp
test
add
xchg
arpl
cmp
lret
cli
hlt
xchg
imul
cli
cmc
pop
jge
add
xor
es
stos
xchg
mov
shrl
and
add
adc
test
lahf
mov
insl
inc
mov
cmpsb
subl
movsl
inc
ljmp
lods
mov
lret
sub
mov
jnp
inc
lea
inc
mov
xor
test
add
sub
jmp
mov
popf
repnz
push
cmp
rolb
pop
fisttpl
loopne
stc
mov
scas
dec
stc
lahf
or
jne
loop
jl
bnd
jnp
xor
out
dec
jge
xchg
jl
xchg
cwtl
xor
jne
dec
ret
mov
sbb
push
loopne
adcb
loop
ret
jg
xor
das
jmp
int
mov
sbb
mov
jo
jae
jg
add
notb
scas
jp
mov
mov
fadd
jae
stos
mov
mov
xchg
rorb
mov
pop
out
sti
or
xchg
pop
and
dec
idiv
lock
es
fbld
outsl
pop
arpl
or
scas
push
or
aas
mov
test
jns
sti
loope
outsb
push
call
mov
xlat
jo
jmp
cmp
mov
addr16
in
adcb
int3
jb
sub
roll
lods
das
int
xor
mov
std
ret
sub
in
iret
jg
dec
icebp
mov
sub
repz
sbb
jl
or
shrb
jbe
fisubs
mov
daa
jl
sub
lods
es
mov
xchg
or
xchg
inc
and
cmpsl
push
dec
xor
lock
jecxz
dec
mov
jae
mov
mov
popf
movsl
nop
jmp
adc
sbb
adc
daa
sbb
cmp
sub
aam
in
out
jg
inc
bound
fidivs
or
adc
push
cwtl
push
pop
jns
xchg
ljmp
pop
out
inc
dec
roll
xor
clc
scas
stos
test
test
lret
mov
cs
sbb
adc
push
jg
xor
pop
aas
outsl
sahf
mov
andb
jecxz
mov
addr16
adc
lret
push
mov
mov
imul
and
and
pusha
cmpsb
inc
sub
xchg
mov
push
lods
cmp
cwtl
aas
ja
leave
push
mov
nop
xchg
aam
test
pop
sub
dec
add
adc
in
jmp
stos
popf
add
mov
notl
inc
test
xor
or
push
cs
lods
test
push
gs
xlat
dec
sbb
cltd
cld
in
pop
imul
inc
cld
xlat
mov
or
aam
adc
mov
jecxz
imul
dec
scas
call
arpl
push
lods
xchg
push
cmp
sti
fcoms
cmp
mov
js
inc
jmp
shlb
or
fwait
add
into
mov
loop
push
sbb
jb
scas
das
adc
xchg
lods
in
aaa
cmp
int3
and
or
mov
add
shrb
sbb
sub
fiadds
mov
cmp
jb
mov
inc
lahf
push
or
out
iret
adcl
mov
pop
std
fistps
cmp
push
icebp
fdivrp
pop
jecxz
pop
idivb
push
repz
or
xorb
sbbb
cld
aaa
movsl
inc
nop
inc
and
call
mov
pop
dec
or
das
mov
push
enter
cs
mov
inc
jne
adc
sbb
adc
movsb
je
adc
loopne
xchg
lea
mov
mov
pop
outsb
andl
mov
inc
leave
sub
pop
pop
xchg
cwtl
aas
daa
enter
int3
fwait
jo
shrl
inc
into
sbb
mul
sti
xchg
mov
mov
je
mov
out
mov
sub
imul
loope
jne
push
xor
pop
push
mov
movsb
ja
daa
movsl
xchg
pop
je
fsubrs
push
sbb
mov
dec
or
xlat
jg
cmp
scas
negl
dec
sub
fstps
jp
xor
xchg
ja
jp
jmp
scas
mov
fmull
test
mov
bound
jl
mulb
inc
push
and
mov
popa
mov
in
mov
in
icebp
out
add
cmc
aam
test
mov
cltd
inc
sahf
mov
inc
enter
dec
lea
jnp
out
mov
rcrb
repnz
mov
mov
jecxz
dec
dec
orl
xchg
fadd
negb
xchg
aam
ret
fucomi
inc
jl
mov
gs
cld
rolb
dec
dec
sbb
outsl
arpl
sbb
insb
je
mov
popf
push
pop
popa
cmp
test
adc
aam
lahf
jmp
and
or
bound
je
inc
sbb
psadbw
int3
cmpsb
mov
mov
push
jns
popa
xchg
data16
pop
out
pusha
mov
imul
scas
stos
cmp
dec
push
mov
in
aaa
adc
fstl
mov
daa
scas
cmp
jbe
js
pop
lcall
pop
mov
pop
ret
shlb
push
gs
or
lahf
mov
shlb
cmp
aaa
ja
dec
inc
cs
test
xor
xchg
mov
jne
pop
xor
loope
and
roll
and
fs
fwait
lods
popa
test
pop
inc
sbb
xchg
and
cmp
add
jb
and
daa
xlat
out
mov
push
mov
cmp
outsl
and
fwait
insb
scas
adc
push
cld
insb
push
dec
fbstp
xor
jnp
sbb
cmpsl
xchg
dec
mov
mov
xchg
movsb
cs
scas
sti
mov
cmp
repnz
dec
scas
mov
sahf
add
aas
jp
fwait
mov
movsb
mov
scas
gs
cwtl
aam
push
aaa
or
jg
xor
pop
aad
loop
addr16
mov
mov
mov
and
movsb
push
inc
in
mov
xchg
mov
cmp
dec
add
nop
push
mov
xchg
loope
popf
dec
in
xchg
xor
sbb
dec
int
cwtl
out
mov
faddl
fdivl
pop
ss
sub
cli
test
adc
dec
xor
mov
xchg
mov
scas
mov
pop
adc
imul
sbb
add
sbb
pop
fs
lcall
js
into
addr16
out
add
leave
out
aam
sub
xchg
loopne
out
dec
divb
je
inc
mov
out
dec
sarl
and
rdmsr
mov
sbb
stc
aam
ror
daa
sub
jns
aad
mov
scas
stc
pop
jl
imul
in
xchg
out
pop
add
add
repnz
in
mov
popf
aas
sub
push
mov
sub
xchg
dec
call
out
jmpw
shll
sbb
nop
out
bound
mov
adcl
outsl
xchg
pop
fidivl
jl
into
neg
xchg
je
jecxz
xor
inc
add
mov
or
cld
pop
frstor
das
nop
pop
jp
adc
cs
mov
sarb
rdpmc
lods
int3
xor
popf
in
mov
mov
cmc
xorl
movl
je
stos
mov
out
cmp
add
sbb
imul
scas
push
pushf
loope
out
or
mov
in
insl
aaa
aas
and
sub
sub
sub
sbb
add
xor
xor
fdivrs
rcll
outsb
lahf
sti
jae
mov
repnz
mov
outsl
mov
loopne
notb
inc
dec
mov
notl
mov
mov
in
mov
rorl
ret
fisubrs
push
cmp
dec
hlt
sbb
aad
push
xor
subb
dec
hlt
mov
js
add
jne
jle
arpl
pop
pop
pop
loope
fistpl
add
js
bsf
std
dec
popf
call
and
sub
js
aam
insb
jmp
cmpsb
enter
xchg
int3
repz
mov
sub
sbb
cmp
jg,pn
dec
pop
out
sbb
sahf
inc
xchg
cmc
mov
and
int3
jp
inc
cmp
or
daa
testl
push
pop
adc
pop
add
sub
mov
xchg
test
popl
jmp
rorb
dec
outsl
xchg
sbb
sbb
push
sbb
stos
adc
out
mov
and
cmp
icebp
loopne
dec
jo
movsl
stc
pop
jns
fcmovnu
sbb
aas
cli
xor
xchg
mov
xor
mov
mov
push
hlt
mov
pusha
xchg
adcl
jnp
outsb
mov
pushf
cli
mov
push
mov
xchg
sub
sbb
scas
movsb
rcll
enter
mov
push
hlt
shll
aaa
insb
push
inc
aas
and
and
jl
push
enter
and
fmull
fcoml
adc
aad
test
iret
repnz
mov
scas
mov
mov
mov
icebp
jle
xor
rolb
inc
scas
xchg
ret
sahf
fwait
jmp
cli
test
sbb
or
xchg
ret
sti
xchg
imul
or
ss
jecxz
mov
lcall
sub
int3
pop
dec
mov
jns
imul
repz
mov
and
xchg
mov
int3
sub
icebp
jge
aam
push
rorb
sbb
imul
ss
sub
rclb
std
hlt
iret
ljmp
sbb
ljmp
adc
cmp
sub
loope
cmp
cmc
addl
or
pop
mov
and
pop
push
inc
sbb
jmp
popf
xchg
prefetch
sbbl
mov
push
jle
dec
push
aaa
xchg
inc
popf
icebp
mul
mov
mov
int
shll
adcl
sbb
pusha
out
add
or
push
cli
inc
popf
inc
sbb
push
cmp
push
add
clc
movsl
xlat
jle
cld
movsl
sbb
xchg
inc
insl
sbb
add
sbb
push
into
mov
repnz
push
xor
nop
jge
mov
dec
xlat
add
mov
jge
pop
mov
jmp
popf
aad
dec
cmp
cwtl
ja
sahf
push
mov
roll
push
gs
lret
fptan
jp
jecxz
dec
sbbb
sub
sub
dec
rcrb
es
mov
mov
mov
outsb
jle
mov
icebp
leave
dec
sub
sub
mov
lock
cmp
mov
out
mov
xor
sub
adc
out
mov
fs
fists
jmp
push
pop
aaa
jns
imul
and
mov
inc
pusha
xchg
clc
dec
rep
xchg
mov
fisttpl
testb
mov
xchg
mov
pushf
mov
sub
mov
mov
pushf
into
sti
mov
xor
adc
mov
mov
xor
mov
or
testb
push
outsl
movsl
loope
ja
mov
inc
push
je
fsubl
xchg
test
pop
gs
jmp
cmp
fcmovu
mov
or
cs
fcmovbe
mov
or
sub
sub
cmp
orl
xor
cmpsl
aad
mull
out
mov
ljmp
aaa
fisttps
mov
xchg
imul
ds
jb
push
dec
jo
aam
cmpsl
pop
shll
xchg
stos
xlat
sbb
fbld
lret
shlb
mov
add
dec
mov
pusha
inc
or
sbbl
or
and
shl
repz
and
cmp
bound
les
xchg
fistpll
mov
push
xor
xchg
enter
pop
pop
inc
push
xchg
dec
loop
xor
xchg
xchg
out
aas
push
fwait
ja
lcall
push
cmpsb
stc
shlb
sub
ja
rorb
xor
enter
cmp
test
into
mov
dec
add
mov
push
adc
arpl
mov
dec
mov
xor
negb
mov
negb
push
call
lock
clc
es
out
inc
jnp
test
push
dec
xor
aad
xchg
add
add
fimull
mov
es
mov
mov
mov
insl
push
in
and
adc
xor
mov
pop
mov
sbb
mov
mov
add
adc
mov
fidivl
lret
andb
jne
xor
fstl
inc
jno
mov
mov
rcll
mov
push
cmpl
ja
stos
int3
sbb
ret
sub
mov
mov
xchg
sarb
mov
jp
jle
ss
jbe
ret
cmc
lret
scas
cmp
repz
lea
lock
sahf
and
adc
inc
pop
inc
pop
sar
mov
add
inc
imul
mov
dec
mov
arpl
dec
pop
cmpsl
dec
push
int3
frstor
pop
dec
pop
mov
or
int3
and
ljmp
sahf
mov
nop
js,pn
fs
cmpb
push
daa
imul
ja
aam
xor
xchg
pop
sub
pop
jne
rorb
lret
jno
jne
push
add
andl
adc
inc
popa
mov
data16
loop
cmp
lret
adc
mov
dec
sahf
icebp
jmp
pushf
fildll
repnz
insb
ja
mov
jno
adc
pushf
xlat
pop
jg
in
jne
call
jmp
lahf
mov
outsb
popa
vhsubps
jns
lods
idivl
cld
int3
push
mov
and
fsubl
sub
lahf
jnp
ficompl
out
shrb
iret
div
nop
adc
es
into
test
push
sbb
and
jb
scas
mov
push
test
int
jge
pop
es
mov
fnstcw
popf
inc
scas
inc
mov
test
rolb
inc
lea
or
jb
and
aad
sbb
add
pop
fimull
sti
sarl
lret
das
dec
cmp
xchg
dec
xchg
aad
and
dec
adc
das
mulb
inc
js
das
or
paddd
stos
add
lret
daa
mov
push
jmp
jmp
rorl
lret
out
int
sbb
test
repnz
sub
sti
xchg
sub
mov
ret
cmpl
jmp
pop
xchg
pusha
ss
sbb
mov
cmp
push
mov
cltd
or
popf
shll
shrb
dec
sub
cmp
inc
shrb
pop
not
pop
push
jae
cmp
rcl
mov
std
xor
mov
jno
and
int
sub
insl
dec
je
and
dec
bound
jge
push
out
test
sbb
sbb
loop
xchg
xor
adc
dec
divl
inc
or
cmp
unpckhps
mov
add
xchg
aaa
test
sbb
loope
jo
call
add
mov
cmp
fmull
mov
dec
mov
in
cmp
add
xor
sbb
lret
cmp
filds
negl
lret
inc
sub
es
js
dec
sub
mov
push
jns
jecxz
icebp
jge
adcl
jp
sbb
aam
mov
popa
sahf
mov
pushf
sbb
in
or
sub
xchg
pop
mov
push
pop
repnz
iret
dec
pop
adc
ds
jg
xchg
idivb
cld
push
aaa
jge
idivl
or
inc
imul
inc
sbb
dec
stos
mull
out
sub
out
in
lea
cmc
aaa
xchg
roll
mov
xchg
xchg
dec
out
pusha
in
mov
push
jl
jmp
scas
arpl
subb
fcmovnu
cmp
cmp
push
jge
orl
ffreep
pop
jnp
and
adc
out
xchg
hlt
xchg
outsb
pop
push
mov
in
jns
dec
xchg
sti
in
xchg
andb
mov
and
mov
pop
xchg
sbb
sbb
dec
or
repnz
movsl
inc
rcrb
mov
jge
aaa
sub
sbb
xor
arpl
paddusb
ljmp
dec
adc
sahf
sub
add
jne
jb
and
or
cmp
or
into
pop
mov
or
loope
xchg
jle
mov
addr16
test
idivl
je
and
xchg
jp
inc
addr16
ds
ja
lret
bndstx
out
mov
lret
es
add
fcompl
mov
shlb
dec
cld
xor
or
lret
pop
fldenv
jg
addl
pop
roll
or
movsb
pop
mov
dec
and
pop
push
stos
pusha
push
xchg
push
and
popa
int
mov
jo
fimuls
mov
out
inc
inc
cmp
sub
testb
insb
lret
add
fsub
arpl
dec
dec
jmp
adc
push
aam
enter
pop
mov
sub
mov
adc
lock
pop
dec
sbb
insb
and
aam
ljmp
insl
pop
adc
pop
mov
fdivs
outsb
add
jp
out
xchg
xchg
dec
mov
into
xor
jnp
fistpl
and
imulb
xor
mov
shll
stos
mov
testb
add
cmp
sub
jne
out
stos
xor
int
mov
push
iret
es
sub
notb
sbb
push
sub
jo
dec
rorl
pop
and
or
dec
sub
and
ja
xlat
rorl
add
mov
call
lods
jg
cmp
dec
and
inc
push
test
imul
pop
ucomiss
jbe
sbb
mov
cld
jnp
cli
dec
dec
jno
sbb
hlt
enter
je
int
pop
xor
jno
jl
dec
xchg
sbb
or
xor
xchg
ficoml
lock
scas
dec
xchg
gs
push
sbb
insl
cmp
outsb
mov
daa
add
sub
and
pusha
std
inc
jecxz
dec
rcrb
repz
cmp
or
adc
call
movsl
sub
lock
pop
cmpsb
addr16
in
idiv
aaa
mov
sub
out
mov
iret
lret
xchg
enter
or
pushf
in
in
fiaddl
imul
addr16
cmp
or
jnp
jbe
push
popa
mov
int
das
mov
js
jns
push
in
ds
das
sahf
aaa
jg
movsl
fs
call
call
push
adc
addl
fistpl
push
mov
add
lods
and
xchg
cli
cmpsl
loop
mov
popf
lahf
test
jecxz
add
sub
sbb
jmp
cmp
mov
xchg
pop
xor
inc
mov
mov
into
fucomip
std
mov
push
jo
pop
aad
mov
cmp
andb
repnz
jmp
movsl
add
push
leave
pop
insl
in
mov
cmp
lods
mov
adc
loop
xchg
notl
push
push
mov
xchg
jns
icebp
inc
out
repz
xor
aas
dec
popf
sub
mov
push
inc
or
mov
shrl
lds
jo
sahf
dec
popf
mov
dec
or
mov
mov
pushf
pop
lds
push
push
adc
subb
adc
inc
fwait
jbe
jns
jne
mov
pushf
lahf
xor
inc
mov
pushf
insl
dec
mov
outsb
pop
lods
loopne
aad
pop
xchg
push
cmpsb
fwait
mov
movsl
pop
mov
andl
js
pop
or
dec
imul
sti
jecxz
sub
ss
adc
cmpsl
test
sti
mov
shll
pop
bound
ja
or
out
push
mov
push
mov
dec
lahf
mov
add
fistps
and
or
sub
mov
sti
mov
xor
push
xorl
mov
inc
jp
out
sub
sub
aas
sub
inc
mov
in
sbb
push
icebp
cmpsl
sbb
xor
push
mov
inc
or
mov
fstp
ljmp
ss
ds
dec
scas
loopne
fisubrl
xor
jecxz
jp
sub
cmp
or
push
inc
movsb
loopne
inc
adc
cmp
fcomip
xor
xorb
and
stos
gs
ficompl
cs
shr
cmp
mov
jp
cmp
inc
ficompl
arpl
nop
adc
imul
lret
nop
push
sbb
dec
rcr
inc
jp
jp
xchg
lret
xchg
pop
push
sbb
ljmp
xchg
pushl
fcompl
test
add
push
in
jle
dec
in
fidivrl
pop
in
stos
shlb
mov
imul
push
iret
in
adc
inc
insl
out
add
ja
pop
daa
and
cmpsb
xlat
inc
pop
xchg
push
je
sub
or
jb
inc
add
addr16
loop
popf
das
js
pop
jae
bound
cs
test
jle
push
mov
int3
pop
scas
dec
add
xor
jge
mov
imul
push
lock
sti
pop
out
and
push
and
add
xchg
mov
push
dec
movsb
cmpl
imul
nop
add
mov
xchg
push
adc
rol
rcrl
push
jecxz
mov
scas
into
je
out
mov
pop
mov
jbe
mov
fists
xor
xchg
mov
xchg
adc
out
decb
sti
aam
jno
and
and
insl
mov
and
into
inc
inc
pop
clc
icebp
push
jae
mov
cmp
in
loopne
ljmp
sarb
dec
repz
lods
clc
or
inc
lods
lahf
push
mov
icebp
fcmovu
outsb
or
jg
hlt
xchg
mov
dec
mov
xchg
dec
cli
add
mov
push
pushl
call
popf
in
addr16
ret
ljmp
das
dec
mov
push
xchg
mov
imul
xor
mov
xchg
sub
out
add
xchg
jmp
sbb
sbb
clc
scas
adc
pop
mov
insb
inc
lret
out
adc
xchg
jae
mov
std
jb
leave
insb
imul
lret
add
sub
mov
jle
cmp
iret
or
cmp
sub
cwtl
adc
mov
mov
pushf
subb
ja
sbb
pop
shrl
xlat
fdivl
jmp
out
pop
daa
dec
lock
jle
add
fnsave
das
test
push
xor
xor
sbb
scas
jne
xor
mov
lods
push
rcrb
in
cmp
mov
inc
cmpsl
cld
inc
mov
inc
icebp
movsb
mov
repz
xor
xor
pop
out
pop
into
sub
stos
test
mov
fisubl
sbb
fwait
dec
and
jp
pop
popf
fisttpl
jge
xchg
sbb
and
dec
push
cli
or
adc
imul
repz
push
add
push
testl
cmp
jge
xchg
inc
rcll
or
xchg
iret
in
push
mov
inc
cltd
fstpt
cmp
sbb
sbb
jb
mov
std
test
int3
rorb
mov
add
rorl
cwtl
das
addr16
jl
push
cmpsb
or
mov
dec
xchg
shll
jae
pusha
nop
dec
dec
scas
and
nop
dec
repz
push
int3
cmp
sub
das
cmp
jne
jle
mov
adc
scas
lcall
mov
lea
orl
lds
mov
lods
push
test
test
mov
and
push
inc
in
push
push
inc
pop
mov
fstps
jecxz
jecxz
jl
outsl
addl
testb
repz
fimull
jle
pop
push
inc
sbb
sub
jne
jmp
pop
stc
sarb
mov
sbb
xorl
pop
test
pop
movsb
insb
xor
xchg
cwtl
xchg
cmpsl
cmp
sahf
pop
cmp
xchg
mov
repnz
popf
xchg
enter
cmp
adc
aaa
sub
mulb
cmp
inc
ds
xchg
sti
jbe
push
push
xchg
push
dec
sti
adc
out
mov
jo
jnp
outsl
sbb
scas
add
arpl
aad
lahf
in
push
addr16
cli
push
jg
sub
addr16
lahf
and
push
daa
mov
mov
popf
sbb
testl
mov
scas
add
aaa
push
insb
sub
jmp
in
sbb
sub
jle
jle
jbe
call
ds
sti
jp
add
sub
mov
inc
pop
mov
jo
inc
outsl
das
sub
sub
inc
dec
arpl
sub
push
or
jnp
loopne
xorb
test
lock
push
fisttpll
xchg
adc
std
push
lods
sbb
int
xchg
mov
push
jmp
mov
fs
scas
push
sbb
lods
insb
cmp
dec
pop
pop
in
cmp
notl
orl
clc
jno
repz
cmp
sbb
cmp
lea
dec
cmpsl
iret
xchg
xorl
jg
push
jae
and
sub
psubsw
push
xchg
pop
rolb
test
aad
fstpt
loopne
jmp
xorb
mov
cmp
jmp
mov
sbbl
adc
in
or
outsb
sub
test
iret
xchg
jg
sbb
jl
popf
cmpsb
icebp
xchg
fs
sahf
and
dec
loop
mov
pop
js
lcall
clc
icebp
aam
dec
cltd
js
hlt
add
outsl
jae
xchg
mov
shrb
jle
daa
es
lods
arpl
jo
or
inc
adc
inc
and
jnp
movsl
cmp
insl
add
cmp
jo
xorl
nop
dec
dec
in
scas
in
sbb
andb
jae
xchg
imul
sti
mov
mov
pop
mov
data16
out
dec
push
sti
and
jmp
jg
rolb
dec
cmp
iret
push
gs
inc
out
xor
xchg
inc
out
test
pop
outsl
popa
out
orl
and
xor
stc
jne
repz
sbb
movsb
out
ret
mov
push
cltd
cmp
push
jnp
inc
pop
aas
xor
insl
jns
pop
andl
mov
sbbl
movsb
dec
aad
inc
or
loope
decl
adc
add
into
sub
out
add
push
push
mov
or
mov
ds
jl
data16
inc
adc
push
std
in
adc
out
mov
sbb
aam
jnp
mov
cmp
mov
fcoms
push
pop
dec
movsl
rorb
xchg
mov
push
insb
clc
and
adc
adc
jne
aad
xchg
cmpsb
push
inc
add
push
add
addr16
aam
push
outsb
mov
cmpsb
popf
subl
cld
inc
in
mov
aam
lcall
mov
loop
clc
daa
jo
mov
add
pop
cli
ret
or
int
lahf
jmp
and
mov
aas
pop
and
rclb
cli
bound
inc
add
imul
movsl
xor
mov
inc
sub
jns
inc
lea
and
sti
fdivrs
fdivrl
mov
rcr
hlt
fwait
or
scas
mov
mov
mull
cwtl
js
stos
arpl
lods
or
mov
dec
push
test
jno
dec
stc
jo
xchg
sbb
aaa
cmpsb
ljmp
cmp
xchg
pop
push
sbb
movsl
dec
mov
test
jmp
push
mov
cmp
lret
sub
cmp
imul
dec
or
outsb
cli
test
push
sub
adc
lret
dec
sbb
fsubrs
ljmp
mov
jl
mov
inc
mov
sbb
adc
int3
mov
cmp
cmp
idiv
fmul
push
das
sub
mov
mov
mov
fimuls
popf
pop
movb
lds
outsl
inc
sbb
xor
push
add
jns
mov
hlt
pop
jmp
or
and
test
lds
imul
outsl
jne
shll
mov
xorb
sub
xlat
mov
add
xor
adc
shlb
loope
and
push
lds
jmp
idivb
pushf
xchg
into
scas
fnsave
gs
and
jno
sbb
call
sub
sbb
push
pop
inc
push
pop
push
mov
jbe
inc
cmpsl
cmp
add
push
add
or
dec
mov
dec
dec
or
xor
dec
enter
dec
ds
sub
outsb
stc
sarl
pusha
push
cmp
xlat
aad
add
jnp
in
int
int
fistpll
bound
xor
add
les
scas
mov
jae
sub
pushl
jmp
bswap
lods
dec
cli
cmp
mov
iret
mov
mov
repz
outsb
sbb
xchg
sahf
adc
cwtl
in
mov
mov
push
fmul
or
xchg
loopne
or
js
aaa
jnp
stos
lahf
inc
jmp
sub
es
sub
push
hlt
cmp
loop
mov
adc
mov
or
fs
mov
jle
xlat
xchg
arpl
leave
movsl
cwtl
dec
jecxz
mov
xor
and
aam
add
in
cmpsl
mov
xor
cmp
pop
mov
mov
xchg
jb
js
mov
aad
pop
cs
cld
mov
pop
lahf
in
ds
xor
push
add
movsl
into
sub
jae
dec
adc
test
iret
mov
jp
arpl
cli
repnz
in
adc
cmp
or
lcall
cmp
pop
mov
and
test
mov
scas
and
or
fsub
pop
add
xchg
imul
and
cmpsb
pop
inc
push
pop
push
pop
push
push
mov
rcl
xchg
sub
dec
pop
popf
aam
scas
mov
int3
stc
add
out
aam
je
pop
sub
inc
push
pushf
mov
push
add
sbb
mov
cmpsl
sub
mov
adc
add
orl
cmp
and
sub
and
sbb
shrb
rcrl
test
imulb
addb
aam
sbb
fs
sbb
push
das
add
pop
imul
inc
xchg
push
repz
insl
loop
ret
push
sbb
cmpsl
cwtl
imul
lods
out
fists
add
xchg
iret
xor
psubsw
ja,pn
and
or
pop
dec
sbb
test
stc
daa
or
adcl
nop
loop
cmpsb
jl
cli
lret
rclb
loope
and
in
sub
mov
loopne
pop
sbb
insl
mov
mov
dec
cmpsb
adc
pop
insl
aaa
xor
and
mov
cmp
movsb
adc
rorl
scas
xchg
or
insb
loop
imul
clc
loope
push
sub
adc
cld
adc
jmp
ss
and
jb
mov
xchg
cmp
add
sbb
push
rorl
sub
cwtl
mov
jmp
mov
xchg
inc
mov
sub
aas
xor
repz
inc
mov
sub
jmp
sub
xor
pop
push
inc
ret
mov
orl
lret
aaa
cmp
mov
jecxz
cmpsl
shll
or
scas
mov
xchg
pop
xchg
mov
mov
dec
push
push
jo
xor
cld
inc
fmulp
cmpsb
jg
dec
sbb
lcall
rclb
ss
jb
mov
mov
jl
cmpb
sbb
flds
ret
loop
imul
pop
stc
sbb
shll
out
sbb
cmpsb
sbb
icebp
lea
lods
insl
mov
cmp
movsb
adc
cmp
addr16
fwait
aam
sub
into
gs
inc
xchg
lahf
ja
and
addr16
outsb
or
pop
insl
add
rorb
popf
sbb
jne
scas
pop
rclb
in
xor
or
ret
jne
hlt
mov
xchg
push
mov
xor
push
adc
loope
fcmovbe
inc
in
addr16
sub
ffreep
cmp
dec
ds
test
sub
iret
or
xor
in
bnd
idivl
xor
sub
arpl
lods
jbe
sbb
and
sub
jg
dec
rcrb
hlt
std
inc
lea
in
mov
popf
jmp
adc
mov
lock
or
ret
aam
jp
mov
ja
push
sarl
pop
into
pop
pop
mov
push
int
les
mov
dec
cs
pop
pop
insb
push
lcall
loop
cmp
and
fdivrs
cmp
jl
mov
in
inc
mov
loopne
dec
push
mov
cli
leave
sub
jae
ret
sbb
cmp
dec
mov
lods
xor
sub
mov
push
inc
daa
bound
int
popf
jne
repnz
sbb
lods
stc
test
or
iret
jo
mov
hlt
ja
sbb
lcall
add
jecxz
fdivrs
jl
jle
or
ds
ror
inc
popa
les
and
leave
cmp
xor
inc
jb
in
loope
fists
aas
or
pop
push
aaa
insb
les
fsubl
dec
mov
test
xchg
aam
jg
sub
mov
daa
inc
out
loope
and
xor
pop
push
jnp
sbb
inc
imul
out
pop
arpl
cmpsl
pop
out
ss
pusha
outsl
dec
cmp
cmp
xchg
jmp
das
push
push
jnp
or
stc
and
loop
stc
or
dec
add
movsb
sub
jne
sbb
sbb
pop
shrb
push
mov
lods
add
mov
sub
add
icebp
bound
cmc
dec
adc
rcll
stos
pop
lock
addr16
and
inc
mull
adc
cmp
jecxz
adc
lcall
cmp
sub
cltd
jb
jne
adcb
mov
cmp
pop
mov
inc
fstpt
sar
fdivrl
test
jae
mov
in
pop
inc
or
jl
or
aad
ss
pusha
sub
dec
scas
jecxz
dec
mov
xor
xchg
mov
sub
jle
cmp
mov
cmp
sbb
movsb
shlb
pop
and
jno
test
xchg
xor
sub
into
jb
mov
movsl
dec
adc
call
or
insl
cmp
add
into
das
xlat
and
ds
dec
push
cmpps
and
test
inc
push
insb
les
popa
or
nop
push
sub
imul
xchg
sti
mov
mov
fnstsw
jle
or
xchg
pop
mov
jl
jle
add
adc
pop
mov
loop
jecxz
repnz
add
out
lock
sub
sub
cmp
mov
fs
les
call
cmc
int
pop
mov
or
mov
jnp
std
cs
stos
xor
sbb
call
stos
cmp
sub
mov
cmp
ss
adc
and
and
add
push
pop
xlat
aaa
sub
dec
cld
ljmp
lds
shr
fdivp
or
cmp
fneni(8087
cs
lock
jp
imul
xchg
aam
dec
or
test
iret
mov
idiv
fs
bound
arpl
fbld
stc
lcall
and
and
mov
pop
adc
or
mov
int
sahf
cmpsl
or
mov
mov
jle
scas
fistpl
addb
mov
cli
ljmp
loopne
sti
icebp
pusha
jl
sbb
imul
mov
movsl
mov
addr16
lahf
sbb
xor
push
lods
lahf
push
cltd
ret
pop
lock
lret
pop
add
cmc
popf
pop
sub
sbb
dec
cmp
mov
inc
out
out
dec
ret
pusha
pop
pushf
movsl
es
shlb
lock
fcompl
loop
push
jg
or
hlt
jg
test
jle
adc
in
out
adc
mov
push
jecxz
jp
cli
cmp
xchg
pop
sub
push
adc
inc
in
ret
sbb
dec
pop
lods
js
sub
into
test
jl
mov
cli
mov
icebp
aaa
pop
inc
pop
cwtl
pop
cmpsl
sub
inc
insb
or
dec
fsub
repz
add
jbe
cmp
lret
or
xlat
fisttps
pop
ljmp
test
adcb
ret
pop
and
inc
mov
push
mov
into
loop
inc
pop
loop
faddl
imul
push
iret
or
sbb
and
sbb
ficompl
xor
daa
mov
dec
mov
push
jnp
push
sbbl
jmp
lods
int
cmpsb
fnstsw
cld
stc
je
call
in
push
push
sub
pop
inc
in
les
jns
bound
lahf
punpckhdq
mov
jns
hlt
sub
mov
and
stc
ljmp
std
add
or
outsb
pop
and
incb
jp
int
rorl
lea
mov
cmpsl
sub
jge
and
lds
pop
loope
ja
ja
push
and
xchg
lret
pmaddwd
stos
mov
and
cli
xchg
mov
or
mov
imul
test
hlt
adc
lret
decl
xor
aaa
sbb
adc
pop
gs
xlat
or
jns
clc
fadd
imul
or
into
ficoml
adc
cmp
rclb
add
adc
sub
xor
popa
jno
sbb
aam
cmc
stos
mov
mov
andl
lock
test
pop
fiaddl
pop
popa
xor
cmp
iret
pop
jge
add
rcrl
int3
mov
mov
dec
sbb
cmp
scas
push
adc
scas
push
add
xchg
mov
pop
sbb
or
stos
fldcw
pop
in
mov
lcall
jb
ds
xchg
andb
sbb
and
bound
insb
rcr
stc
cmp
jb
mov
lds
pop
insl
cmpsl
cmp
jmp
dec
fiaddl
mov
test
push
cmp
popf
fdivs
data16
pop
lods
and
test
das
mov
xchg
lret
rorb
xchg
sti
mov
adc
xor
jmp
xchg
popa
xchg
and
mov
and
push
mov
mov
ficomps
sub
gs
dec
rcll
pushf
xchg
push
push
or
mov
jp
mov
cltd
sub
xchg
inc
test
jg
push
aad
movsb
dec
dec
fsubrl
int
cmovnp
jbe
cmp
mov
mov
push
roll
push
push
into
dec
mov
cmp
inc
push
xlat
shll
mov
ja
xchg
movsl
sbb
sub
dec
lods
fdivl
loope
adc
jle
jbe
and
xor
icebp
push
push
jecxz
jp
insb
or
and
inc
add
fwait
andl
or
fs
in
cltd
mov
pop
cmc
aad
mov
mov
push
loope
and
cli
movsb
dec
jo
shl
and
popa
xchg
push
jmp
fimull
xchg
shrl
mov
adc
stos
push
mov
fs
cli
mov
mov
inc
jge
jno
mov
jnp
ds
hlt
xor
pop
push
jmp
hlt
jl
or
lods
cmp
ret
xlat
push
lcall
pop
push
mov
stos
jbe
lods
loopne
mov
jecxz
cltd
adc
aaa
test
mov
movsl
jns
divl
inc
mov
push
lods
push
gs
and
es
sbb
cmp
in
jbe
aas
mov
xchg
pop
sahf
in
pop
add
sub
mov
pop
fs
sub
pushf
mov
inc
dec
jmp
mov
stc
inc
mov
mov
jb
mov
inc
repnz
rcr
adc
pop
addr16
inc
les
add
mul
sbb
test
loope
xor
int
cmp
pop
bound
test
xor
loop
int3
int3
jge
push
xchg
xchg
adc
push
mov
push
push
and
and
xor
jmp
ss
dec
inc
jp
loopne
fsubl
and
inc
xchg
cmpsl
inc
repnz
and
pop
dec
rclb
fimull
adc
push
outsl
or
dec
push
imul
xchg
pusha
in
inc
and
or
push
ss
sbb
daa
cmp
push
adc
in
lods
add
leave
mov
cmpsb
ret
test
ret
pop
lahf
leave
inc
sti
cmp
cmp
inc
pop
dec
push
add
inc
push
mov
xchg
or
out
inc
lret
icebp
dec
dec
add
iret
xor
jl
in
adc
adc
in
fsin
xchg
in
jb
dec
jl
js
and
xchg
cmpb
mov
pop
sub
icebp
pop
lods
push
cltd
shlb
int
rol
fwait
mov
call
jae
push
jle
orl
lock
xchg
or
sbb
push
hlt
or
andl
test
push
add
cltd
mov
mov
call
shrd
xor
mov
dec
js
cwtl
aam
inc
xchg
out
adc
out
xchg
test
xor
dec
jmp
mov
push
out
inc
fwait
cmc
sub
icebp
mov
mov
lret
data16
cld
out
lret
inc
lahf
arpl
cmp
pushf
mov
iret
push
dec
adc
incl
inc
addr16
inc
gs
out
in
hlt
or
jp
inc
out
cmp
xor
imul
add
scas
push
pop
dec
fsubl
jno
add
icebp
pop
jb
stc
inc
or
xchg
xor
inc
lods
ficoml
push
es
sbb
movsb
mov
xchg
jp
jg
fs
add
xchg
sub
and
inc
pop
jne
mov
lock
mov
inc
or
test
xchg
loopne
lods
pop
mov
test
inc
inc
inc
push
mov
imul
jge
pop
mov
imul
daa
xchg
rcrb
jb
mov
mov
pop
cmc
lret
int3
arpl
xchg
paddw
fucomp
inc
mov
xchg
xor
cli
mov
pop
iret
popa
jmp
mov
mov
push
inc
daa
int3
loopne
mov
sbb
mov
sbb
mov
insl
sub
or
push
sahf
mov
jne
scas
and
mov
cwtl
pop
clc
add
push
out
andb
imul
test
xchg
mov
sub
aam
insl
lods
cld
pop
fistps
fiadds
sbb
jg
xchg
cmc
in
xchg
push
push
ss
outsb
aam
fnstenv
scas
enter
insl
in
ljmp
inc
ja
jns
jg
pop
mov
push
jne
xor
jns
xor
loopne
dec
cmp
jno
cltd
sbb
mov
test
imul
subb
das
and
push
push
sbb
pop
popa
cmc
cs
aad
jge
lods
mov
mov
xor
dec
iret
test
push
and
mov
cmpsb
cmpb
insb
iret
pop
mov
add
mov
inc
fsubrl
movsl
cmpsb
lock
ss
push
enter
hlt
and
popf
shlb
insb
cmp
jmp
sub
rol
adc
and
mov
push
iret
lret
popa
xchg
outsl
das
scas
and
add
mov
cmc
aas
orl
imul
loop
sbb
mov
repnz
adc
inc
sbb
fs
mov
dec
push
aam
into
and
ljmp
mov
xlat
adc
mov
sbb
sbb
rorl
push
xchg
jne
push
jne
add
mov
lods
dec
repnz
adc
adc
enter
push
mov
sbb
ret
loope
sub
sub
xor
test
mov
fmull
sub
jo
inc
sti
out
add
in
idivb
pushf
xor
add
dec
fisttps
std
lods
xchg
mov
lea
or
hlt
jnp
fbstp
adc
cmp
inc
xchg
test
xchg
mov
add
inc
jle
sarb
push
ret
xchg
jno
fldcw
and
sub
in
mov
and
add
icebp
stos
cmc
int
mov
test
xchg
fwait
cmp
push
mov
test
rorb
loope
jbe
jbe
aad
adc
data16
xchg
fstps
cmp
pop
jne
mov
or
in
lods
pop
dec
push
sbb
pop
fmull
adcb
pop
jle
shr
jle
sub
das
addr16
pop
adc
in
xchg
movsl
nop
mov
sub
pop
jns
pop
test
mov
add
fistl
lods
adc
ret
or
sar
aad
imul
mov
cs
nop
insl
add
rolb
xchg
pop
inc
jmp
and
push
push
xor
mov
sbb
mov
daa
adc
xchg
bound
fiadds
stos
in
imul
dec
icebp
xor
fsub
adc
ficoml
or
xchg
push
fildl
xor
ja
xor
jg
dec
movsl
ljmp
jno
fwait
pop
mov
fucomip
pop
jg
scas
adc
popa
icebp
icebp
and
out
test
cltd
pop
repz
xor
sahf
pop
xor
mov
pop
fistl
std
pusha
lea
bound
sub
xor
cmc
test
andb
or
and
cmp
jecxz
mov
lcall
sbb
shll
xor
xchg
mov
adc
add
adc
jb
test
in
sub
cmpsl
inc
std
mov
and
dec
and
mov
je
imul
dec
scas
cmc
mov
movsl
ret
cltd
jecxz
dec
xor
cltd
je
stc
jp
aam
sarl
jp
bound
xor
pop
test
imul
sbb
xlat
loop
rcrb
ss
cmp
bnd
sbb
repz
mov
jle
mov
enter
push
add
cmp
dec
sub
lret
lret
aad
iret
mov
mov
adc
adc
dec
jmp
xor
in
xchg
mov
movsb
cmp
scas
sub
lods
call
dec
pop
lods
jbe
sub
mov
mov
fisttpl
data16
mov
loop
cld
jl
fs
shll
sahf
popf
test
das
mov
clc
inc
je
xlat
inc
and
std
mov
add
psrlq
xor
data16
std
into
es
lret
xor
push
xor
mov
ljmp
mov
lcall
out
jl
repnz
xchg
js
loopne
pop
psubd
ret
in
cmc
cmp
shll
test
sub
inc
in
mov
test
pop
jge
orb
adc
add
jns
jle
mov
fs
mov
repnz
jbe
mov
aam
gs
sub
mov
mov
xor
sub
fisubl
push
add
les
sahf
dec
lds
stc
xlat
dec
sbb
nop
xchg
sub
lret
mov
mov
stc
cmc
xlat
jge
mov
adc
fdivrl
push
or
je
or
aaa
setnp
push
or
sub
adc
fs
and
faddl
push
push
dec
pop
cld
fstpl
mov
add
clc
cmpsl
test
movsb
jmp
mov
sub
scas
mov
jae
mov
pop
cld
fildll
insb
fcmovnb
cmp
repnz
mov
xor
mov
aad
lea
sarb
outsl
lahf
mov
add
in
push
cmpsb
ss
sbb
faddl
ss
cmp
inc
aad
dec
xbegin
stos
push
mov
xlat
mov
inc
stos
sbb
xchg
xchg
lods
and
dec
cs
cmpl
mov
mov
add
lea
pop
xor
pop
xchg
or
test
in
cs
jmp
sti
sti
out
test
mov
xchg
pusha
repz
fnsave
sbb
sub
xor
and
lock
ret
mov
mov
xor
xchg
data16
jge
fadds
lea
pop
pop
imul
stc
mov
jle
xchg
imul
aam
xchg
cltd
sbb
jnp
inc
daa
pop
or
ljmp
push
les
dec
clc
mov
push
mov
daa
xor
adc
out
es
addr16
data16
aas
fcmovnu
pusha
mov
mov
pushf
mov
andb
xor
mov
xchg
in
pop
imul
pop
leave
xor
sub
and
loopne
imul
addr16
jnp
cmpsl
aas
push
mov
add
xor
jnp
call
iret
pop
mov
ljmp
sub
sahf
mov
fisubrs
dec
iret
push
daa
fwait
dec
jle
mov
pop
stos
mov
inc
mov
nop
push
mov
mul
loopne
pop
out
sbb
mov
insl
shr
imul
add
loop
repz
scas
ds
mov
push
aaa
fs
pop
pop
or
jp
shll
cltd
imul
ja
in
sbb
daa
subb
ret
out
xchg
test
mov
pop
and
sub
or
and
repz
push
mov
or
iret
lock
push
mov
pushf
lahf
scas
aad
jbe
data16
and
outsl
sub
leave
arpl
adc
lcall
es
and
add
sbb
pop
inc
mov
add
in
and
and
sbb
dec
pop
out
add
adc
fistpll
push
mov
push
sti
and
ds
hlt
movsb
jp
mov
enter
cmp
add
dec
dec
xchg
sbb
xchg
ret
aaa
mov
cmc
push
lods
jmp
into
arpl
jmp
cmpsl
movl
test
jne
add
xor
mov
jmp
cmp
push
and
xor
imul
out
push
or
pop
sub
sub
push
iret
sbb
jecxz
nop
testl
sbb
xor
imul
imul
hlt
or
xchg
cmp
or
adc
dec
pop
lods
ret
lret
movsl
cmp
incl
daa
addr16
popf
fldt
sbbl
push
pop
mov
xor
insb
cmp
loope
inc
add
aaa
xor
lret
sub
pop
stos
mov
cmp
imul
dec
mov
dec
or
cmp
xor
fs
jl
add
loop
pop
daa
ficomps
adc
aas
leave
mov
inc
movsb
loopne
push
pop
enter
into
push
mov
pop
aad
loopne
inc
out
sub
sar
mov
pop
cmp
notl
stos
movl
int3
and
cwtl
sub
cmp
xchg
xchg
jbe
ret
mov
xchg
sahf
movsb
and
cmpl
leave
sub
cwtl
fimull
push
call
pusha
enter
mov
jecxz
push
or
inc
mov
adc
insl
out
mov
cli
vpaddb
push
scas
in
call
into
xchg
lods
xchg
movl
dec
loopne
dec
les
insl
out
xchg
add
into
push
sub
cmpsl
js
jns
xchg
aam
and
cmc
frstor
scas
or
out
inc
jne
addr16
mov
movsl
xchg
fcmovb
push
mov
dec
outsl
insl
cmp
insl
cli
leave
xchg
cwtl
cmpsl
repz
pushl
pop
cld
add
cmp
add
loope
dec
xorl
imul
and
adc
jge
repnz
int
data16
shrl
jmp
or
lods
jns
mov
lods
mov
mov
mov
mov
mov
fidivl
xchg
inc
inc
jecxz
movsl
mov
mov
jmp
xor
jne
aas
cmp
fbstp
push
outsl
pop
fwait
inc
aam
adc
mov
push
jg
sbb
push
out
and
out
out
fidivl
sbb
cmp
pop
inc
sbb
test
fldcw
adc
addr16
xlat
push
pop
push
mov
repz
inc
push
add
loope
pop
jno
cltd
divl
test
int
fdivrl
xlat
jae
scas
int3
sbbl
dec
divb
and
popf
cmpsb
leave
leave
xor
movsl
push
scas
es
lahf
clc
inc
cld
lea
inc
fwait
xchg
jmp
inc
cwtl
mov
push
andl
push
jno
adc
cld
jmp
test
test
mov
mov
into
pop
iret
lcall
inc
and
push
sbb
jae
cmp
lea
in
jge
jno
or
and
test
sub
mov
arpl
adc
in
pop
int3
repnz
cmp
jl
cmp
dec
dec
add
repz
mov
mov
ret
xchg
aaa
dec
xor
jne
shrb
pop
dec
shlb
push
inc
sbb
bound
pop
fdivs
adc
xor
push
push
inc
inc
shl
push
daa
icebp
es
shr
scas
sub
pop
addr16
inc
cmc
stos
cmp
ficompl
cmp
cli
mov
lock
inc
enter
jo
cwtl
xchg
ss
inc
lock
lea
lods
jo
clc
xchg
cmpsl
dec
push
icebp
fidivl
fcmovu
test
insb
sub
cli
stc
sub
dec
js
bound
mov
cmp
push
mov
push
push
lret
je
lahf
fbld
jbe
and
xchg
scas
mov
es
and
out
les
std
test
and
mov
popa
mov
sub
dec
lods
mov
dec
xchg
gs
cmp
xchg
out
inc
rcll
push
pop
iret
or
add
add
into
mov
sti
imul
movsl
mov
adc
push
or
pushf
mov
jno
mov
push
xchg
xchg
scas
sub
dec
daa
shl
andb
lret
xchg
das
repz
lds
push
popf
or
stos
bound
jo
sub
adc
push
call
pop
test
sub
cmp
incb
mov
call
cwtl
js
std
mov
xlat
addl
fcmovu
inc
sarb
and
popf
repnz
mov
enter
scas
cmc
and
inc
inc
cmpsl
mov
pop
js
popf
int3
sub
dec
packssdw
jmp
add
jns
lcall
jae
inc
mov
nop
push
mov
jae
cmpsl
test
sub
jno
icebp
mov
jne
scas
addl
addr16
pop
xor
pushf
and
push
mov
call
mov
int3
lock
xor
call
pop
mov
insb
dec
les
arpl
mov
out
push
out
push
dec
and
mov
xchg
cli
dec
pop
in
push
lret
test
in
cltd
dec
add
das
arpl
pop
mov
fcompl
dec
or
xor
xor
push
sub
addl
mov
lock
mov
test
push
roll
clc
and
jge
punpckhdq
ficompl
ds
pop
movsb
mov
loopne
fcmovnu
mov
xor
fcomps
lcall
sbb
cmc
sbb
or
jno
mov
pop
dec
mov
lds
add
lock
movsl
dec
jno
int
xlat
and
int3
sbb
mov
bound
or
mov
popf
or
pop
hlt
dec
xor
dec
loopne
stos
fmull
in
mov
mov
jns
mov
xchg
mov
inc
in
out
add
insb
sub
lods
in
xor
inc
in
cmpsb
push
test
sbb
addr16
icebp
je
lds
adc
js
xchg
pop
push
xor
xlat
icebp
pop
dec
js
dec
sahf
xor
jle
bound
sbb
scas
dec
jbe
sarb
loope
sbb
notl
iret
cmpsl
xor
out
or
fsubrl
cwtl
fs
cmp
inc
cmp
sahf
cmp
sahf
shrl
insb
imul
and
shll
rcrl
bnd
addb
mov
out
mov
mov
rorb
jns
sub
sbb
and
mov
adc
xchg
pop
sarl
pop
inc
out
lcall
int
jle
push
inc
sub
inc
push
popa
xor
pushf
pop
mov
int3
mov
lahf
daa
int
test
pop
adc
sti
jns
xor
aaa
lret
or
mov
adc
insb
cmp
sbb
mov
loopne
sahf
inc
pusha
inc
inc
mov
mov
popf
sti
mov
sbbl
inc
int3
mov
mov
and
mov
dec
imul
dec
nop
ss
or
push
xor
sub
rcrl
xor
shrl
mov
jnp
mov
jmp
or
sahf
add
cli
mov
cld
test
lods
jnp
subl
cmp
neg
dec
inc
pushf
repnz
jae
loop
mov
fldcw
insb
movsl
sub
cmp
shlb
mov
loopne
or
mov
arpl
sub
adc
fidivrl
mov
inc
xchg
lahf
int
inc
in
pop
push
imul
leave
ret
mov
ljmp
aas
aaa
pop
jo
in
jp
in
cmp
fsubrs
mov
inc
sahf
rcll
mov
neg
inc
mov
sub
loopne
mov
lret
pop
jno
fdivl
icebp
or
and
stos
imulb
movsl
mov
addr16
hlt
lds
pop
in
test
inc
std
dec
xchg
sti
mov
repnz
add
jbe
pop
pop
insb
jmp
les
test
in
or
les
mov
pop
loope
or
and
xchg
add
mov
mov
xchg
and
jnp
dec
stos
inc
lds
pop
jge
cmp
pop
push
jnp
repz
icebp
add
popf
pop
pop
test
ficomps
xor
in
push
xchg
ret
dec
fnstsw
inc
popa
lret
cmp
dec
push
lods
sbb
push
xchg
mov
adc
xlat
lea
inc
shl
and
pop
and
cmp
stc
mov
pop
lods
out
sbb
add
das
add
js
arpl
add
int
out
pop
fcoms
pop
mov
xlat
xor
sti
mov
dec
bound
fcomps
xor
xchg
sbb
and
xchg
mov
dec
cmp
movsl
sub
clc
lret
lcall
sub
imul
es
jmp
jp
sbb
lock
mov
sbb
or
scas
rcrl
cmp
jecxz
sti
repnz
fsubs
aaa
out
test
jne
insl
mov
sahf
sub
cmp
sbb
inc
push
push
fsubs
pop
add
mov
imul
cmp
rorb
nop
je
inc
jnp
pop
subl
jp
lahf
js
lock
jmp
test
and
test
cli
pop
lds
roll
xchg
push
xor
inc
cmp
ret
xchg
pop
insb
mov
or
inc
cs
adc
loope
push
insl
push
sti
mov
mov
sub
cmp
jle
cmp
sbb
inc
scas
popf
and
lret
xchg
out
lea
jae
cmp
stos
mov
loope
sbb
dec
cld
xchg
or
add
data16
xchg
xchg
push
sub
ljmp
sbb
push
mov
aad
ret
xchg
jl
inc
test
js
jmp
popf
jl
mov
push
jns
ficomps
ljmp
xchg
mov
fnsave
adc
xchg
pop
cmp
mov
sti
cs
out
pop
test
pop
or
aad
mov
les
mov
push
outsb
je
push
inc
aam
cmp
enter
sbb
push
scas
sub
mov
ljmp
push
jns
icebp
sub
xchg
mov
adc
popa
pusha
jbe
je
sub
pop
rcl
sbb
outsb
pop
fisttps
xor
mov
and
into
aas
movhps
jl
cmp
sub
fdivr
inc
out
cltd
scas
loope
xor
mov
xchg
aaa
hlt
loop
sub
int
dec
inc
in
jo
repnz
cmp
in
cs
add
lods
and
push
mov
iret
jnp
clc
ja
cmpsb
jge
mov
lock
aad
faddl
lock
arpl
hlt
push
jg
pop
jmp
cmp
pop
cltd
push
jbe
cwtl
push
pop
scas
je
rclb
out
outsb
mov
lods
ss
and
stos
call
push
imul
out
jl
pusha
cmp
dec
popa
push
adc
or
addb
repz
pop
loope
add
and
inc
adc
pop
and
mov
mov
stc
mov
xlat
cmp
stos
xchg
mov
ret
lcall
xor
cld
icebp
lcall
sub
gs
out
pop
cmp
imul
sub
or
jnp
dec
imul
inc
scas
inc
leave
inc
add
xchg
pop
out
mov
or
dec
movsb
sub
ja
jno
and
mov
int3
cmc
loope
je
xor
mov
adc
cmpsl
hlt
sbb
dec
xchg
jmp
and
xlat
inc
int3
add
sahf
mov
mov
es
gs
cli
mov
psrld
push
lcall
stos
jge
lods
lods
jmp
or
inc
fidivrs
hlt
cmc
addr16
rol
sub
mov
jbe
mov
cmp
cld
inc
push
or
or
pusha
cmpsb
rcll
sub
idiv
shrb
sbb
fdivl
loope
aaa
sbb
test
push
mov
loope
test
xchg
cmp
sarb
adc
imul
movsl
xor
mov
adc
adc
das
inc
testb
or
test
mov
rolb
cmp
enter
lods
es
push
lret
sar
ficomps
inc
or
cmp
jge
fwait
xor
fwait
mov
leave
out
mov
jnp
ss
jle
fcoms
sbb
aad
scas
stc
lock
aad
aam
lea
xchg
or
or
add
fdivl
fwait
inc
xchg
lcall
pop
lods
lahf
hlt
pop
ljmp
jle
imul
pop
mov
ret
mov
mov
negb
out
cmp
daa
xor
dec
decb
sbb
fists
jbe
incb
push
cmp
jl
gs
int
scas
pop
add
rorb
fst
mov
pop
leave
inc
mov
popf
sub
push
or
sub
ret
inc
jle
hlt
out
rcr
push
sbb
pop
in
xlat
repz
push
arpl
xor
pop
xor
cmp
xor
js
fldt
sub
imul
mov
dec
in
ja
add
mov
jmp
or
inc
fiaddl
lds
and
out
jmp
mov
movsl
mov
adc
out
cmp
mov
push
mov
subl
mov
adc
pop
fwait
sub
sub
call
mov
fbstp
cmpsb
aaa
dec
je
inc
dec
pop
or
adc
int
pop
push
aaa
shlb
xchg
push
lret
pop
push
and
into
xor
es
inc
push
frstor
cwtl
pop
std
mov
jnp
js
imul
mov
inc
ljmp
xchg
push
adcl
jnp
sub
xor
cs
incb
addr16
adc
sub
aas
test
adc
andl
inc
fsubs
ss
aam
push
xchg
int
dec
pop
fstpt
pop
inc
or
rorb
push
loop
inc
mov
xor
mov
xchg
fsubs
xchg
jg
sbb
cmpsl
cltd
add
jl
xchg
cmc
outsl
leave
jmp
nop
insl
clc
add
jecxz
mov
lahf
sti
cltd
or
stos
jg
cs
bound
mov
sub
mov
push
jp
lds
xchg
mov
push
shl
push
inc
ret
and
fnsave
xor
or
insb
pop
push
mov
or
jge
jne
jle
mov
les
lea
aaa
adc
inc
xchg
aam
cmpl
sbb
aam
and
xchg
push
hlt
xlat
enter
lret
pop
scas
test
jle
cmp
stc
in
pop
addl
popa
mov
pusha
scas
lret
mov
inc
jb
sub
xchg
iret
xchg
rorb
and
bnd
dec
lock
pop
xchg
popf
out
pop
rcrl
mov
and
std
xchg
inc
jecxz
push
xchg
jne
inc
inc
fcomps
mov
stos
js
repz
pusha
pop
enter
dec
add
loop
mov
add
cmp
cmp
sbb
dec
mov
cmpsl
xor
cmp
push
stos
adcb
pushf
push
aam
inc
je
fsubrl
xor
out
outsl
bound
push
pop
fisubrl
fcom
pop
ds
cmpl
cld
dec
sub
sbb
test
ret
mov
pop
dec
jnp
data16
andl
repz
push
sbb
cmp
neg
jae
xor
xor
dec
popa
into
ds
daa
mov
jle
pop
mov
or
lock
mov
xor
or
pusha
push
mov
mov
jne
into
and
lods
test
loop
adc
jne
jecxz
jecxz
test
push
jmp
cld
stos
cs
mov
movsb
jns
imul
lret
xchg
rcrl
dec
subl
add
and
clc
push
mov
push
xchg
jnp
sub
subb
js
lods
lahf
mov
xchg
aam
push
lret
cmp
div
mov
mov
xchg
arpl
mov
or
testb
adc
aad
cmp
add
pop
mov
jo
jg
jle
xlat
lcall
icebp
js
out
pop
lret
into
pop
mov
xchg
pop
xor
jo
fadds
mov
push
incl
sbb
pusha
out
or
stos
notb
and
jle
jge
je
bound
fcmovnb
mov
bound
cmp
xchg
lea
insl
fstpt
ja
lea
fnstcw
lods
ds
std
lea
xchg
push
movsl
xchg
or
inc
or
xchg
push
xchg
pop
pusha
dec
pop
fisttps
dec
addr16
inc
fwait
loope
lcall
sub
scas
sbb
xlat
repnz
loop
js
push
pop
clc
outsl
jmp
iret
mov
jno
xor
push
clc
xlat
ds
jge
nop
push
dec
xchg
cmpsl
addr16
add
mov
mov
sub
nop
movsl
ljmp
rorl
aas
cmpsb
jp
add
je
shl
and
and
adc
stos
mov
outsl
pop
add
test
xchg
push
cld
inc
dec
and
or
xor
mov
adc
cs
int
ret
xor
sbb
insb
jnp
pop
xor
jecxz
dec
add
dec
mov
stos
or
aad
push
mov
add
jg
mov
sub
jne
lea
mov
jno
mov
sub
jne
mov
arpl
inc
jle
mov
sub
mov
jne
leave
clc
repz
dec
ds
xor
mov
imul
fwait
addl
cld
mov
adc
and
sbbl
pop
jae
and
inc
inc
adc
xchg
int3
mov
sub
adc
pop
jle
xchg
sbb
movsb
jnp
movsb
in
jge
repz
pop
daa
rol
stos
mov
cmpsl
outsl
popa
xchg
cmpsl
pop
push
mov
or
subl
adc
filds
loope
outsl
imul
pop
ret
ret
or
dec
rolb
fxch
and
inc
xor
je
div
addr16
les
xchg
mov
lods
dec
mov
push
push
outsb
orb
cmp
lods
inc
sbb
int
push
movsb
xor
data16
jp
mov
xor
data16
xchg
jle
jnp
xchg
inc
movsb
in
and
stos
dec
xor
push
ss
xchg
inc
out
clc
dec
dec
std
sti
test
mov
lahf
loope
dec
sub
je
mov
lock
repnz
lahf
fs
push
jl
add
loopne
jecxz
sub
rorb
ja
xchg
iret
and
pop
cli
insl
scas
dec
adc
fcoms
data16
pop
cwtl
mov
mov
subb
jecxz
rcr
jb
and
cld
lret
cmp
xchg
jmp
bound
push
cmp
push
pop
mov
loop
ja
cmpsb
jns
ds
stos
jmp
adc
xor
and
lods
push
in
mov
mov
rcrb
cmp
leave
adc
mov
ja
jecxz
and
sbb
cld
inc
or
dec
mov
pop
fimuls
pop
iret
scas
cs
dec
pop
sti
leave
leave
sti
jle
pop
wrmsr
sub
push
outsl
jno
aas
aaa
shrl
mov
adc
push
cli
push
jmp
lea
mov
insl
mov
ss
fisttpll
insb
push
in
daa
je
sub
adc
or
mov
insl
cmp
sub
enter
cmp
and
das
inc
orb
mov
sbb
pop
ja
hlt
loopne
fidivl
dec
pop
inc
fsubs
adc
in
lods
xchg
fbstp
xchg
js
mov
lods
outsb
push
decl
rsm
jno
icebp
add
sub
out
inc
adc
xchg
lahf
pop
repnz
shl
xor
add
psadbw
enter
xchg
sub
pushf
mov
mov
add
pop
std
ja
cltd
or
cmc
scas
inc
aas
xchg
push
and
out
int3
cmc
lahf
inc
test
pop
xchg
xor
and
mov
xchg
pop
sub
pusha
pop
add
es
push
xlat
pop
leave
inc
in
xlat
iret
mov
lea
mov
xchg
sbbl
add
and
leave
cmpb
jge
test
or
xor
jne
scas
jb
mov
and
push
mov
sub
inc
xor
rcl
pop
idivl
fnstsw
push
cli
sub
div
fdivs
push
hlt
int
movsb
xchg
xlat
out
mov
add
xor
xchg
daa
ja
pusha
xchg
scas
mov
negb
or
add
push
jmp
cltd
mov
cmp
add
ds
sbb
pop
sub
push
xor
pop
fnstenv
xchg
out
leave
jbe
fimuls
popa
jg
mov
popa
ret
test
repnz
adc
xor
xchg
js
out
and
out
or
bound
or
in
cltd
dec
fdivs
inc
sub
jl
mov
mov
push
adc
repnz
inc
cld
movsl
add
aas
icebp
xchg
int
pop
add
aaa
fsts
bound
ss
adc
xchg
cld
sub
popa
dec
sbb
movsb
daa
lods
shll
adc
aas
icebp
sahf
push
sbb
sbb
mov
mov
xor
jne
dec
mov
cmp
inc
pop
das
xchg
push
fsubrs
inc
inc
xlat
lret
aam
imul
aaa
nop
lock
out
xor
sarl
outsl
sub
and
inc
xchg
int
js
outsl
test
adc
cmp
movsb
into
dec
rorl
bound
fcoml
jbe
xorb
popa
mov
scas
xchg
mov
aam
imul
xor
jnp
stc
pop
push
mov
add
arpl
xor
sarl
dec
cmp
dec
pushf
insl
icebp
out
aas
orl
mov
fcmovne
sub
and
ret
cmp
push
cmpsl
or
sbb
push
scas
dec
inc
movb
jno
xchg
jns
out
sbb
bound
sub
jae
out
cmpsl
push
jg
cmp
adc
fwait
and
imul
aaa
jae
and
test
mov
repz
sarb
jle
and
divl
dec
pop
pop
mov
mov
inc
mov
adc
mov
ljmp
add
fcmove
lods
and
outsl
dec
mov
add
mov
imul
jmp
cwtl
jno
push
in
adc
hlt
mov
daa
xor
fs
ret
fdecstp
scas
addr16
mov
mov
jb
and
sbb
call
ja
push
nop
adc
popa
xor
cmpsb
pop
mov
outsb
jge
or
xchg
adc
mov
test
popa
xchg
jle
hlt
adc
rolb
shrb
and
mov
aaa
dec
ss
cmpl
rcll
outsl
and
dec
insl
pop
outsl
loope
jle
cmc
mov
aas
imul
fstl
mov
add
push
movsb
in
push
mov
adc
mov
mov
fisubl
add
sub
adc
mov
or
das
cmp
cwtl
out
mov
xchg
pop
adc
and
aaa
mov
jb
jg
sub
mov
divl
out
xchg
mov
sbb
and
xor
xor
fldt
mov
addl
push
push
xchg
push
cltd
movsb
adc
inc
mov
jmp
lcall
fsubr
add
sbb
jp
aaa
sub
fidivrs
fiaddl
ret
ja
fidivrl
jbe
and
xor
push
outsl
ret
popf
stos
push
xlat
leave
cmpsl
shrl
push
adc
cmp
jno
adc
pop
stc
and
fldl
mov
test
lahf
dec
xchg
iret
mulb
cmc
in
les
mov
cs
addl
pop
fldt
data16
sbb
mov
push
pusha
push
enter
fidivrl
jo
add
or
xlat
cmp
cmpsl
setae
dec
push
addl
out
out
jae
lret
test
lcall
lcall
loope
out
inc
jns
lcall
inc
sti
js
sbb
fwait
rcr
repnz
jp
xchg
fisubs
push
pop
push
mov
dec
push
lds
push
sub
repz
decb
fcomps
push
cmp
jmp
mov
xchg
cs
jmp
push
xor
mov
daa
aam
jbe
xchg
popa
movsb
adc
lock
fucomi
cltd
clc
imul
or
push
push
jns
lds
iret
dec
jo
mov
mov
enter
stos
popa
push
fwait
out
cmp
xchg
pop
out
adc
mov
shrb
into
in
inc
mov
les
jno
xor
lcall
push
lods
pop
mov
lcall
aam
sbb
pop
push
push
add
add
cltd
xchg
testl
cmc
test
or
aaa
rclb
outsl
and
and
dec
testl
rcl
pop
movsl
mov
popa
push
sub
lods
loop
adc
stc
shll
cmp
mov
or
outsb
xchg
sahf
xor
mov
mov
jne
addl
cli
cmp
adcl
idiv
or
add
sub
ret
insl
in
addr16
ret
insl
aas
cmp
std
push
cmpsl
rclb
pop
test
ret
loopne
mov
nop
js
cltd
add
pop
mov
cltd
push
aad
pushf
jl
xorb
jge
fisubl
int
test
sub
push
pop
push
aaa
test
ficomps
or
mov
pushf
sarb
out
cltd
add
test
xchg
dec
mov
mov
movsl
inc
dec
mov
add
lcall
fadds
dec
lcall
inc
add
mov
and
test
clc
adc
enter
test
add
cmp
jp
push
jbe
adc
push
xchg
pusha
add
sub
aad
xor
jo
inc
test
neg
out
ret
enter
cmc
xchg
and
mov
jne
sub
push
push
in
dec
in
xor
or
test
fisttps
jbe
xchg
cmp
push
and
push
or
jno
repnz
stc
lea
dec
xchg
jae
aam
sub
iret
lret
pop
aam
cmp
jecxz
dec
or
jle
xchg
insl
inc
icebp
xchg
add
ret
lods
movsl
xor
movsb
std
sti
rcl
mov
rorl
test
adc
fcoml
ret
lcallw
test
insb
dec
ds
or
cld
mov
out
divl
enter
sub
sahf
push
ds
cmc
push
mov
xchg
lcall
mov
sbb
xchg
dec
xchg
mov
xchg
mov
repz
jg
dec
in
jns
pop
mov
jo
sbb
push
enter
cld
cmpsl
fwait
stc
adc
inc
push
shr
mov
xor
jns
jmp
mov
and
pop
flds
enter
xor
mov
shrb
je
fdivrl
or
loope
bound
cli
loop
loopne
loop
fstpl
dec
xor
xor
divb
int3
in
or
inc
or
pop
cmpsb
dec
and
mov
cmc
xchg
movsl
mov
fwait
add
stos
ds
das
aad
mov
sahf
xor
outsb
in
scas
mov
test
add
ja
cli
or
xchg
jns
adc
xor
sbb
rcll
jo
jo
push
or
daa
fdivs
sti
mov
push
aad
cltd
test
in
xor
imul
cmp
popf
mov
sub
fdivs
mov
lahf
cmp
sbb
push
lcall
mov
jno
jge
jl
and
test
cmp
sbbb
push
aas
fcmovnbe
sti
mov
rolb
xchg
iret
outsb
fnstsw
mov
movsb
dec
movsb
stos
add
scas
inc
sub
mov
stos
xchg
xchg
jg
jmp
pop
mov
testl
xor
sub
inc
jge
vpunpcklqdq
or
sbbb
imul
and
adc
push
sbb
lret
ds
roll
inc
xor
add
push
bound
enter
insb
pop
cmp
pop
inc
fisttpll
lds
pop
inc
mov
or
mov
ret
repnz
outsb
adc
test
mov
pop
out
sub
and
stc
or
call
lahf
mov
push
jge
std
mov
inc
cs
insl
mov
xchg
mov
bound
jg
mov
jmp
int
jnp
inc
xlat
pop
mov
mov
hlt
stos
mov
cmp
push
mov
test
sbb
jg
dec
out
aas
ljmp
jne
movsb
fwait
adc
arpl
fiadds
mov
fincstp
andps
repz
add
adc
fwait
aam
push
scas
push
lret
mov
xchg
inc
daa
aaa
enter
push
int3
pop
xchg
xor
mov
mov
cmp
xchg
loopne
and
ucomiss
jle
xchg
mov
loopne
loope
jmp
int
mov
xchg
fldt
daa
adcl
pop
dec
mov
ds
loop
inc
in
push
mov
int3
ficomps
push
push
js
xchg
insl
mov
dec
or
lea
adc
mov
imul
mov
xchg
dec
shrl
xor
notb
sub
push
fldl
pop
add
mov
sbb
popf
sbb
and
stos
out
adc
jmp
fmull
mov
mov
mov
push
cltd
scas
call
sahf
frstor
fiadds
fcmovnb
adc
inc
or
xor
xorl
push
add
test
mov
popa
fcomps
hlt
scas
repz
pop
adc
xlat
pop
data16
incb
add
push
pop
call
pop
lcall
push
test
dec
leave
daa
mov
repz
jmp
pop
pop
ret
mov
fsubs
xchg
gs
ret
callw
call
dec
fsubrl
sbb
je
inc
sbb
rolb
les
xchg
pop
loop
mov
scas
es
frstor
lods
fstpt
mov
adcl
mov
jns
fcompl
div
bound
in
xchg
mov
push
in
aad
mov
cmp
jmp
mov
imul
or
pushl
dec
pop
mov
das
fwait
in
mov
sbb
xlat
fwait
inc
push
mov
push
xchg
loope
jae
std
mov
lock
fs
cmp
push
pop
nop
pop
test
pop
xchg
and
stc
and
mov
aas
jb
je
rcll
sbb
andl
fwait
test
mov
test
sub
lret
inc
jmp
punpckhdq
and
xchg
or
push
mov
or
loopne
sbb
lret
or
inc
jne
in
std
das
mov
dec
cld
sbb
bound
pop
sbb
pusha
inc
sbb
mov
clc
sti
in
sbb
ljmp
or
add
ret
or
hlt
fimuls
sub
jecxz
aam
cld
pop
cwtl
pop
mov
dec
aad
popa
stos
add
push
rorl
sbb
push
jecxz
mov
add
push
sbb
cltd
mov
les
repnz
sbb
xor
test
xor
inc
push
ret
jg
leave
ljmp
mov
iret
push
cmp
mov
xor
and
jge
jle
sbb
sub
fwait
js
xchg
push
pushf
push
adc
or
jecxz
addr16
xchg
inc
sbb
enter
mov
or
test
enter
ljmp
mov
sahf
ret
roll
jb
shlb
or
lret
fmulp
lods
inc
inc
outsb
lods
pop
fsts
je
sbbb
rcl
mov
mov
cmp
xchg
clc
stos
pop
ret
nop
inc
lret
xor
jg
rorb
sti
loop
fst
gs
push
mov
add
insl
addl
add
mov
mov
mov
dec
sti
subb
shrl
mov
xor
or
rcrl
cmp
xlat
xor
pop
inc
sub
out
pop
lods
iret
mov
and
xchg
jne
adc
das
addr16
pop
and
popa
jmp
out
in
cmp
cmc
shrb
cltd
mov
mov
call
sbb
inc
push
sub
cmpl
sbb
jnp
mov
aad
inc
or
push
jle
mov
sbb
mov
mov
push
aam
scas
inc
rorl
push
loop
inc
jnp
xchg
push
mov
mov
test
sub
aaa
insl
imul
fadds
jns
adc
sbb
cwtl
pop
pushf
rclb
mov
cs
push
sub
aad
or
cmpsb
mov
dec
scas
adc
cmpsb
scas
inc
xchg
mov
xor
inc
mov
enter
fldcw
cmp
repz
mov
add
in
cmp
int3
push
aaa
popa
adc
mov
sbb
mov
jecxz
mov
jb
jns
sbbb
cmc
sub
lods
dec
mov
ss
rcrl
ja
xchg
movsb
xchg
cmc
imul
scas
xchg
lret
mov
out
ljmp
daa
xor
ss
mov
mov
insb
outsl
lsl
mov
dec
stc
jae
xor
sbb
push
pop
bound
cmc
scas
sub
stc
incb
scas
lret
jg
or
lods
lea
mov
addb
mov
mov
xor
or
cwtl
repnz
pop
add
inc
jecxz
xchg
repz
aad
push
inc
adc
lret
cmc
aam
dec
xor
clc
jno
sub
movsl
imul
or
mov
int3
sub
pop
xchg
add
out
outsb
cli
fstp
nop
or
jl
adc
out
in
dec
add
cmpsl
lea
arpl
xlat
push
inc
sub
test
repz
fdiv
ret
push
loop
push
fld
jnp
aam
fcmovne
movsb
nop
test
lahf
imul
cmc
andb
xchg
xor
pop
xorb
mov
mov
jb
pop
xchg
dec
pop
daa
sbb
shl
push
lret
jne
loopne
sti
xor
push
lods
enter
ds
clc
jne
scas
sub
jo,pt
fs
bound
sub
lea
les
subb
ss
dec
insb
adc
jmp
pop
in
mov
mov
mov
pop
in
jae
int
dec
cmp
fstps
js
dec
aam
in
mov
pushf
fdiv
pop
pop
push
mov
inc
lcall
rclb
xchg
mov
ror
mov
mov
adc
mov
sbb
cmp
mov
push
fst
jbe
ficoms
mov
jbe
cli
ds
xchg
inc
scas
imul
lret
ja
mull
mov
fsub
or
push
jae
adc
cmpsl
xchg
and
enter
out
mov
in
mov
cltd
jne
and
cwtl
and
mov
and
popf
xor
xchg
addr16
clc
mov
sbb
pop
fwait
in
fldenv
inc
daa
inc
jae
inc
cli
pop
jge
fsts
enter
mov
xchg
add
pop
push
lock
or
rol
jb
pop
pop
dec
or
int
xlat
adc
cmp
dec
add
xchg
jo
add
cmpsl
loop
hlt
jg
jl
dec
ret
loop
jg
into
out
push
inc
push
jecxz
or
test
imul
das
cli
and
push
sub
inc
pop
mov
shl
push
lret
mov
adc
push
fisubrl
sarb
and
loope
js
in
adc
jb
popl
sbb
or
lret
stos
xor
inc
cmpsl
movsl
push
or
mov
dec
jecxz
aad
jb
xchg
lahf
push
inc
xor
std
pop
andb
out
dec
jb,pt
xchg
adc
xchg
pop
setl
sbb
icebp
in
paddusb
sbb
cmp
pusha
mov
mov
lahf
int
fs
push
add
sbb
xchg
es
lcall
sbbb
das
insb
cli
aam
pop
push
fdivs
dec
fldcw
mov
xor
pop
mov
shl
ret
cs
mov
loopne
lret
in
mov
call
imul
push
jmp
sub
scas
out
inc
repz
daa
aam
fisubrl
outsl
mov
sbb
mov
jno
int
enter
mov
fcomps
je
pop
in
bound
jmp
lds
mov
enter
xchg
cmc
add
jecxz
ljmp
dec
cmp
fistl
jns
fisttpll
fsubl
repnz
dec
insl
mov
cmp
fdivr
ss
jge
sub
push
fadd
pop
scas
and
cmp
adc
xor
xchg
cmp
xor
adc
pop
sub
inc
mov
xchg
xchg
fnstenv
repnz
fcmovb
inc
sbb
outsl
std
adc
movsl
xbegin
movsl
leave
pop
or
xor
fimull
aaa
mov
sbb
shll
inc
mov
add
cmp
dec
popa
ja
adc
mov
push
adc
lock
pushf
add
dec
jecxz
and
loopne
push
sahf
pop
daa
fsubs
nop
cmp
push
xchg
lahf
icebp
test
sbb
in
jg
and
std
xchg
fwait
mov
rclb
pop
cwtl
rol
adc
push
shrl
jns
dec
adc
jmp
jle
push
jb
push
into
or
shlb
fisubl
dec
popf
es
call
into
or
fwait
or
fnstcw
or
inc
cld
dec
sbb
js
dec
arpl
mov
mov
cmp
xchg
ror
inc
sbbb
jecxz
repnz
aam
sbb
inc
bound
cwtl
je
jbe
dec
mov
xlat
dec
sysenter
mov
dec
insb
cmc
jbe,pn
int3
ss
xor
out
test
add
xchg
xor
fsubs
repz
xor
push
mov
mov
ror
sarb
and
mov
push
mov
cmpsl
mov
fs
aam
stos
push
lret
jp
pushf
push
sahf
sbb
or
test
sarl
stc
mov
stos
idivb
fwait
inc
jle
call
jb
mov
scas
popa
pop
out
mov
cmc
repz
dec
mov
push
lods
mov
mov
das
mov
aaa
xchg
sbb
orb
inc
adc
insl
lahf
and
push
shrl
xlat
ljmp
xor
or
push
ret
and
cli
insb
fwait
inc
pop
fdivs
in
hlt
sub
stos
mov
loopne
icebp
mov
pop
adc
inc
sub
pop
or
push
sub
in
push
fwait
push
jmp
jns
jmp
fldenv
jb
loopne
cmc
pop
mov
mov
int
pusha
les
mov
jecxz
dec
mov
mov
xchg
adcl
jb
adc
inc
push
or
or
test
or
aas
outsb
repz
xchg
pusha
divl
enter
push
dec
out
cli
imul
mov
inc
sbb
xlat
push
sub
outsb
dec
adc
mov
xchg
mov
mov
ja
fbstp
push
and
cmp
jns
mov
jbe
adc
daa
loop
test
mov
push
or
icebp
jmp
xlat
push
push
push
push
mov
out
mov
mov
scas
inc
mov
mov
das
pop
mov
xchg
push
std
ret
sar
cmp
sub
jb
orl
cmpsb
ljmp
iret
and
rclb
out
movsl
outsl
add
inc
pop
mov
sub
push
stc
rolb
gs
cwtl
adc
rolb
ljmpw
gs
mov
stc
loop
loopne
mov
addr16
scas
inc
popa
or
orl
icebp
clc
or
xor
push
cltd
mov
sub
ja
pushw
push
bound
add
adc
pop
lret
jp
test
in
scas
je
pop
add
stos
iretw
mov
ret
and
sbb
repz
sbb
cltd
push
stos
out
mov
imul
mov
out
lods
and
mov
mov
aas
fldl
out
lods
or
sbb
outsl
aas
push
cltd
ss
loop
popa
cmp
xchg
das
into
sbb
ret
xor
add
or
mov
dec
jg
cwtl
mov
int
aas
movsl
popf
sub
mov
out
daa
fbstp
leave
loopne
ss
xchg
dec
mov
ja
lock
je
std
dec
popa
scas
daa
int
jae
hlt
jne
jne
enter
and
scas
out
inc
leave
jecxz
xor
push
xor
rolb
aaa
mov
stos
mov
cli
xor
shll
js
sbb
addr16
pop
mov
push
dec
mov
inc
call
adc
xor
sbb
xchg
dec
sbb
sbb
inc
add
arpl
fidivrl
push
dec
jmp
imul
jnp
daa
mov
out
je
mov
pop
mov
mov
pop
pop
adc
and
decl
icebp
imul
pop
inc
mov
out
xor
or
pusha
in
int
jle
cli
cmp
lea
dec
pop
mov
mov
subb
nop
ficomps
sbb
xchg
fisttpll
inc
pusha
cmc
loop
mov
push
rcll
mov
push
ficoms
push
inc
sbb
dec
cmc
scas
push
sar
inc
sub
ds
sti
call
dec
jecxz
adc
mov
movsl
stc
xchg
lret
push
in
mov
ret
js
xchg
adc
fwait
test
pop
push
outsb
xchg
pop
mov
inc
xor
addl
cmp
lods
cwtl
mov
sub
add
popf
shl
mov
mov
or
and
jecxz
xorb
push
pusha
sbb
jb
outsl
mov
js
or
mov
mov
and
mov
inc
or
xor
jp
shr
pop
jg
cld
dec
jbe
shl
subb
fwait
aaa
push
imul
pusha
mov
mov
sub
mov
fiaddl
jb
dec
sarl
sub
push
mov
mov
icebp
pop
dec
xchg
fs
cmp
stc
fidivrs
loop
xor
xchg
add
mov
scas
aas
jno
adc
pop
dec
jne
mov
jae
jnp
aad
xchg
mov
mov
rorl
fadds
add
call
lret
arpl
sbb
xchg
js
cli
fisubs
outsl
jge
nop
sbb
adc
sbb
cmpb
sbb
and
aam
pushf
in
mov
mov
stc
pop
or
and
sarb
sbb
stos
pop
mov
pushf
jg
jns
xchg
pop
and
bound
sarl
adcl
add
mov
mov
scas
scas
out
loop
stos
mov
clc
into
shlb
sub
mov
int3
push
add
mov
jno
shl
jmp
pop
mov
inc
mov
in
out
or
jbe
mov
jnp
ja
pushl
adc
repz
sbb
in
ja
xchg
xorb
push
cmp
insb
mov
sbb
mov
cli
sarb
cmp
adc
cmpsl
pop
add
andb
and
mov
ret
push
movd
push
test
and
add
leave
fstl
rorb
lcall
imul
sbb
adc
ret
ret
xor
cli
inc
idivl
mov
and
jns
imul
aas
cmp
sti
or
inc
xor
xor
idivb
pop
cmc
ds
xor
xor
lock
push
into
inc
mov
pop
dec
outsl
add
je
out
mov
rol
in
pop
repz
or
lret
mov
mov
dec
rolb
and
mov
xchg
andl
or
sbb
lret
xchg
adc
xchg
in
inc
mov
out
mov
xor
loopne
leave
test
push
dec
mov
lret
cmpsl
xor
test
adc
fmuls
or
mov
xchg
xor
xor
cmp
jl
adc
scas
xor
clc
push
push
ja
fwait
mov
push
xor
sbb
shrb
jmp
pop
xor
push
inc
popa
mov
jl
in
and
bound
pop
pop
inc
repnz
fdiv
iret
cli
sti
cmp
repnz
pop
pop
or
push
bound
shll
xor
sub
push
sbb
jl
dec
jno
xchg
movsl
int3
mov
xchg
mov
mov
xchg
push
imul
jns
rclb
push
rolb
test
cwtl
cmp
ljmp
stos
fstps
sub
cmp
repz
lret
or
jle
repz
imul
scas
mov
mov
mov
int
aas
inc
dec
inc
pop
out
adc
or
fistl
push
pop
outsl
add
pusha
mov
add
pusha
add
and
daa
data16
jae
jmp
out
aas
push
mov
out
leave
nop
sbb
sub
jg
sub
dec
cmpsl
roll
test
insb
inc
icebp
sub
sbb
cs
cmp
xchg
pop
push
testl
cmc
aas
adcb
dec
dec
js
pmaxub
in
divb
sbb
add
sub
scas
inc
lret
xor
int
cmp
xchg
push
push
in
mov
adc
insl
jg
outsb
xlat
sub
adc
ljmp
fwait
or
stos
loope
popf
cli
out
mov
hlt
movsl
cs
fwait
jo
mov
dec
iret
jo
fwait
sti
xor
mov
hlt
outsb
shlb
jo
xchg
jnp
xor
int
sbb
fldcw
jae
sbb
xchg
pop
xchg
pop
push
popf
mov
cs
imul
push
xchg
sub
jno
ja
stos
popl
clc
mov
sahf
inc
movsl
and
xchg
retw
push
mov
sti
je
mov
inc
jae
ret
cmp
mov
imul
inc
adc
fwait
or
add
jns
jne
or
sbb
sub
sahf
sbb
mov
sub
pop
pop
mov
arpl
or
sub
gs
daa
fistpl
xor
mov
ja
aaa
sub
sti
mov
push
nop
inc
push
in
addr16
push
xor
add
scas
test
out
jecxz
iret
rcll
mov
nop
adc
movsl
test
scas
jecxz
es
add
pop
cwtl
xor
stos
insl
stc
xlat
xor
dec
fistl
test
dec
in
pop
in
aaa
adc
fisttps
fwait
pop
pop
scas
lcall
test
push
shl
aam
push
adc
lcall
adc
inc
xor
fcoml
xchg
insl
sbb
pop
mov
testb
stos
aam
jmp
loope
shll
xchg
and
dec
jb
mov
pusha
pop
mov
test
jns
mov
xor
cmp
mov
imul
pop
xchg
mov
add
loope
push
mov
call
push
outsb
push
push
mov
jbe
jae
jl
or
outsb
mov
rcll
orb
inc
xchg
in
pop
cld
or
loopne
sarl
es
jbe
push
adc
dec
adc
je
push
aad
adc
es
fistpl
fisttps
stc
push
xor
xchg
sbb
cs
mov
xchg
insl
fcmovnb
jo
pop
js
or
nop
mov
jp
adc
mov
ljmp
sub
js
dec
sub
sub
aad
dec
dec
out
jnp
test
xchg
imul
mov
repz
xor
imul
jge
out
enter
xchg
mov
mov
clc
shl
test
xchg
adc
fcompl
fistpll
into
xlat
jns
fiaddl
cld
cmpsb
xchg
mov
xlat
std
mov
sbb
mov
pop
xor
jbe
sti
dec
fdivr
aad
jns
stc
in
xlat
int
xchg
sbb
ret
pop
filds
bound
leave
mov
xchg
sbb
imull
loope
dec
rol
test
xchg
cmc
jae
js
ret
and
pop
and
push
jne
std
rcll
test
ljmp
dec
sub
cmp
notl
faddp
cltd
mov
out
fst
gs
loop
lea
pushf
lds
mov
iret
orb
test
bound
push
dec
or
fidivl
es
jg
xor
mov
mov
call
cmp
mov
addr16
mov
loope
loop
mov
adc
fnstcw
es
mov
xor
fsubp
fsts
push
xorb
xor
test
mov
stos
cmp
pop
jge
out
mov
shrb
shll
movsb
and
adc
jb
mov
mov
dec
xchg
sbb
arpl
je
dec
test
lods
mov
aaa
jbe
jecxz
pop
mov
inc
inc
xchg
aaa
pop
mov
jne
stos
fs
pop
xor
push
frstor
add
inc
cmpl
pop
int3
lcall
cli
mov
and
and
adc
mov
pusha
lret
cmp
into
cmp
push
mov
pop
xchg
pop
pop
sti
fs
add
and
inc
adc
jnp
rcll
and
pop
fsubs
jbe
sbb
lods
daa
imul
out
aaa
aaa
das
inc
loopne
sub
adc
mov
mov
es
sub
pop
inc
ja
stos
mov
ss
or
std
jmp
das
push
popf
push
inc
sahf
xor
xor
popa
and
insl
cld
out
adc
mov
pop
jbe
scas
mov
lods
pop
jecxz
sub
push
jno
in
add
movsl
test
mov
and
ds
ret
mov
jo
push
test
cmpsl
lcall
add
cwtl
mov
jnp
les
loopne
sub
je
movsl
and
pop
pop
jecxz
inc
xchg
push
fs
es
and
lcall
or
jmp
cwtl
fisubrs
adcb
out
aad
cmp
and
out
iret
cmp
sbb
pop
rcrb
rcr
xchg
lods
inc
cmpsb
clc
lds
in
mov
sub
inc
into
sub
add
sbb
popa
cmpb
int
popl
jmp
jo
sub
mov
adc
dec
mov
stc
xor
fdivr
and
or
cwtl
movsl
lods
xchg
push
push
inc
inc
xchg
and
jge
mov
dec
and
sub
les
mov
fdiv
leave
aaa
xor
mov
lds
sahf
adc
pop
xor
iret
rcr
adc
pop
cltd
jne
in
imul
xor
imul
aaa
data16
jp
aam
sbb
push
and
jbe
jp
push
and
in
mov
test
jmp
adc
cmp
cmp
and
sbb
test
das
sar
pop
and
push
mov
mov
cmp
fwait
jnp
iret
sub
jno
lcall
and
sbb
and
out
xor
or
in
and
xlat
xchg
cmpb
cmpxchg
cli
adc
pop
testb
sarl
repnz
test
pop
inc
xchg
int3
sbb
stos
mov
into
mov
lahf
mov
stc
mov
imull
test
add
filds
adc
push
daa
int
scas
xlat
pop
dec
in
push
into
xchg
adc
pop
mov
jb
xchg
ficompl
xor
pushf
xor
mov
fidivrs
or
cmp
push
std
std
mov
test
and
scas
or
pop
pop
and
xchg
xchg
push
sub
or
enter
stos
imul
shl
loope
lcall
stc
cli
pop
mov
push
xchg
mov
gs
cmpsb
rorl
push
lcall
pop
das
jne
inc
add
xchg
sub
mov
push
dec
ret
jnp
xor
adcl
notb
add
mov
cmpsb
fstl
or
aas
decb
mov
ja
adc
movl
ja
mov
cs
ficoms
int3
pop
test
loope
mov
push
icebp
mov
sub
mov
fisttpl
in
xchg
imul
fiadds
xor
jbe
mov
jmp
pop
test
lods
mov
xlat
sti
test
sbb
es
dec
mov
popf
int
rcrb
adc
sets
inc
popa
mov
fwait
aad
iret
mov
sub
mov
xlat
mov
cmp
fistps
xchg
jmp
xor
and
fwait
js
sub
loopne
and
test
xorl
mov
add
xor
call
and
pusha
mov
cmp
test
jp
sbb
lock
out
div
sub
pop
dec
mov
mov
mov
mov
pop
in
aam
je
call
je
rcll
mov
ds
mov
push
jecxz
push
jb
pop
nop
mov
sub
add
scas
push
xor
dec
shrl
xchg
cmp
push
xchg
lahf
or
mov
or
ja
xchg
scas
sub
jo
mov
out
stos
cli
lock
xlat
cs
cmpsb
pop
repz
sub
adcl
ret
jnp
sbb
adc
test
add
test
xchg
adc
pop
mov
fiaddl
pop
sub
add
dec
mov
sahf
test
sti
sub
mov
lock
inc
outsl
mov
add
movsb
cmc
fsubrp
sti
cmpsb
lds
push
stc
lods
mov
test
arpl
out
cmp
pop
jl
or
sahf
jb
fmuls
ja
sti
push
pop
and
add
add
sbb
pop
push
pushf
cmc
lret
mov
mov
dec
inc
mov
dec
addr16
xchg
pop
mov
js
dec
and
or
inc
out
fnstcw
movsw
insb
and
cwtl
in
dec
cmpb
mov
xchg
sbb
mov
push
add
fidivs
stos
nop
shlb
push
push
test
cli
rclb
cmp
adc
popl
lea
loop
push
sbb
adc
push
imulb
xchg
and
scas
xor
in
stos
pop
popf
cmp
pushf
and
lret
jmp
clc
mov
cmp
fnsave
lcall
sub
rcl
in
mov
bound
inc
mov
dec
aad
mov
dec
dec
sbb
mov
in
outsb
xor
add
lahf
mov
jge
sub
inc
mov
jecxz
fwait
or
int
cmp
pusha
pop
mov
orl
bound
enter
lods
push
cmp
mov
lock
addps
sbb
and
jl
or
ljmp
sub
out
xor
adc
cmpb
sarl
es
or
push
pop
sub
push
jne
fsubrp
lods
sbb
orb
sbb
aas
leave
movsb
or
pop
jno
arpl
imull
or
cmp
insb
push
test
push
insl
sub
or
ret
xchg
fcomps
mov
mov
cmp
arpl
mov
sub
xorb
xchg
add
cmp
fdivr
ret
call
xor
cmp
ficoms
adc
xchg
nop
icebp
push
mov
mov
push
lret
xchg
push
in
jb
cmp
aas
jmp
fcomp
fwait
in
jo
in
in
or
addb
sahf
xlat
mov
fstl
rcrl
test
cmp
inc
outsb
test
call
fistpl
lods
sbb
xlat
mov
sub
push
andb
call
mov
push
mov
xor
cld
and
pop
sub
pop
jo
repz
icebp
cmpsb
fldl2t
adc
fsts
dec
jge
mov
mov
xlat
push
fdivl
int
stos
wrmsr
add
xchg
pusha
cmp
in
jecxz
mov
sbb
addb
adc
sub
adc
ret
push
inc
scas
fldt
aaa
adcl
mov
push
enter
iret
pop
mov
rcl
leave
pusha
xchg
pushf
movsb
xcrypt-cfb
cmpsl
cmpsl
jmp
pop
ror
test
push
cli
repz
inc
adc
pop
inc
sbb
xchg
add
icebp
xchg
in
insb
mov
cmp
ret
loope
movsb
inc
cmc
data16
fsubr
cmp
in
or
scas
push
sub
outsb
lock
ret
test
sbb
mov
inc
fcmovnb
inc
cmp
mov
sbb
and
and
pop
jnp
test
cs
xor
leave
gs
sbbb
sbb
or
dec
repz
jmp
lahf
dec
and
mov
xchg
in
sbb
jns
outsb
sti
or
add
and
cmp
outsl
cmp
xchg
jmp
pop
pop
mov
fidivrs
loop
iret
inc
stc
mov
movsl
js
mov
movsb
xchg
push
fistpl
mov
leave
and
ret
push
jae
mov
mov
mov
gs
lods
and
imul
into
bound
sub
cli
push
data16
mov
pop
pop
in
lcall
inc
outsb
rcl
call
fildll
in
dec
xlat
dec
xlat
stc
das
fisttps
lock
into
sahf
xchg
dec
inc
pop
mov
in
mov
xor
gs
mov
add
sahf
arpl
sub
sarb
mov
lods
xchg
test
cmpsb
xor
popa
fsubl
inc
icebp
movsb
mov
cwtl
pop
or
sbb
jecxz
inc
loopne
fldenv
repnz
lods
mov
inc
fdivs
ror
dec
mov
dec
mov
leave
and
sbb
icebp
out
add
dec
stos
ret
lds
adc
lcall
sub
xor
enter
shrb
rcl
imul
lret
adcl
mov
fisttps
dec
sub
inc
jl
data16
jno
cmpsl
jb
data16
aaa
jmp
pop
pop
xor
sub
js
aad
xor
out
or
dec
pop
movsl
fstpt
push
xchg
lcall
xchg
shll
fisubrs
mov
aas
cmp
jecxz
or
or
jge
mov
lret
inc
jns
add
xor
push
pop
xchg
nop
pushf
dec
pop
aam
sub
lods
mov
das
mov
popa
pop
xchg
fsts
and
adc
push
mov
inc
dec
cmp
pop
adc
and
pop
mov
fnstcw
adc
ret
out
dec
adcb
sbb
mov
mov
iret
pop
sub
mov
ficompl
lret
sub
mov
shll
cmp
jnp
mov
aaa
sbb
or
out
out
mov
adc
scas
mov
push
imul
push
data16
xchg
ret
stos
fstps
sbb
cmp
fsubr
js
add
scas
sbb
stos
push
dec
cmpsb
je
mov
adcb
int3
fistpll
sbb
or
push
mov
jl
pop
push
inc
pop
push
mov
int
fld1
and
mov
sahf
les
shlb
roll
rcrl
xor
mov
cmp
and
cli
es
xchg
cmc
fsubr
into
scas
push
push
add
jge
fidivrl
pop
cmc
pop
ss
and
out
sub
in
dec
lea
scas
fs
jo
mov
punpckhdq
rcrb
sarb
insb
or
pop
arpl
xor
addb
ja
lods
inc
and
push
lods
jge
cmp
mov
cs
jno
idivb
pop
inc
fiaddl
cmp
and
or
push
and
fsubl
jno
hlt
mov
push
ret
ja
mov
xchg
adc
daa
jns
push
call
testb
rol
sbb
sub
aaa
aas
ret
jb
outsl
or
mov
sbb
push
mov
int
enter
popa
xchg
in
mov
pop
sahf
or
iret
f2xm1
into
cmpl
mov
insl
mov
aam
sar
dec
jae
sbb
out
xor
inc
mov
jns
cmpsl
fcompl
scas
xchg
xchg
mov
fwait
mov
push
mov
dec
cmpb
sbb
mov
test
imul
fs
flds
sarl
mov
ljmp
enter
lret
testb
mov
lods
sbb
jle
lods
dec
adc
stos
or
ds
pusha
stc
push
jmp
add
mov
lock
cmp
mov
push
lods
testb
sbb
lea
int
cmp
cmpsb
test
adc
cmpsb
mov
jno
or
or
pushf
scas
cmc
jl
es
lcall
pop
aad
repz
test
outsb
xlat
jo
fisubs
ficoms
sub
adc
inc
xchg
mov
loop
mov
or
fsubs
stos
jmp
inc
push
pop
test
cmp
add
push
push
ret
cld
subl
loopne
fcomps
lret
mov
sbb
pop
int
jno
cmpl
daa
sub
push
jmp
int3
jle
inc
mov
fstl
sti
or
movsl
scas
fldcw
lds
js
mov
std
roll
insl
cs
add
loop
out
mov
pop
das
inc
ljmp
hlt
mov
xchg
shrb
mov
stc
sub
test
ds
pop
imul
mov
mov
mov
mov
adc
sub
push
repz
mov
add
mov
cmp
push
stc
movb
or
rcl
movsb
sub
mov
psubusw
cmpsb
in
lahf
lods
mov
mov
jl
js
nop
inc
sub
mov
or
popa
insl
icebp
shrb
sti
xchg
movsl
popa
mov
jmp
xchg
lods
scas
aas
das
ret
jb
in
stos
lea
loopne,pn
push
xchg
in
rolb
mov
int
insb
fwait
push
stos
popf
incb
adc
push
xchg
mov
movsl
xchg
mov
jmp
shrl
dec
sub
xchg
popf
jmp
cmpsb
pop
test
push
add
fbld
mov
cmp
dec
mov
hlt
cmp
fdiv
mov
inc
fimuls
or
and
test
mov
add
sub
les
or
dec
ret
mov
xor
dec
movsl
insl
and
roll
pop
mov
cmpsl
js
pop
xor
push
adc
pop
fsts
jbe
adc
addr16
ljmp
pushf
and
cli
xor
test
inc
mov
fwait
sbb
sarb
popa
shll
scas
test
rcr
cwtl
xchg
xor
sbb
call
lock
data16
pop
ss
jae
sahf
fidivrs
fmuls
dec
mov
subl
or
mov
mov
mov
lods
push
ja
das
xchg
inc
insl
les
jcxz
mov
stos
fwait
dec
jo
scas
shll
cwtl
movsl
lret
sti
jp
je
inc
in
jle
mov
clc
pop
addr16
js
and
or
xchg
lea
jecxz
ss
and
mov
xor
cmpl
cli
das
imul
icebp
dec
xchg
sbb
dec
inc
aad
xchg
or
insl
fwait
cmpsl
lcall
add
push
mov
out
imul
push
sub
bound
adc
xchg
movsl
outsb
mov
sbb
pop
cmp
pusha
or
faddl
iret
push
cmpsb
jmp
ds
call
sub
pusha
lods
int3
jnp
mov
inc
mov
xorl
mov
adc
movsb
pop
sti
push
jp
inc
rclb
xor
test
fcomp
sbb
mov
flds
lods
xor
push
das
shlb
jbe
test
lret
fcoms
hlt
cmc
test
add
icebp
xor
mov
insb
adc
sti
pop
lods
fisubrs
adc
stc
and
popa
into
pop
fnsave
mov
jecxz
sub
xchg
mov
mov
call
push
sub
jae
or
test
rcrb
mov
sbb
notl
add
stos
jae
pushf
push
cmp
ja
mov
pop
mov
imulb
dec
push
pop
fwait
dec
inc
leave
dec
pop
in
jl
dec
sub
or
fcomip
mov
sar
mov
hlt
cmp
pop
divb
stc
std
xor
cld
pushf
imul
xor
dec
mulb
test
xlat
lahf
inc
add
xchg
dec
xchg
cltd
push
rolb
ds
in
shll
je
icebp
call
add
sub
inc
js
aam
pop
ret
pop
cmp
cli
insb
inc
pop
dec
iret
and
loope
jo
mov
leave
mov
pop
push
in
ljmp
adc
shlb
mov
je
fists
dec
mov
cs
loopne
mov
add
pop
mov
int3
jo
in
xchg
iret
insb
xor
xchg
push
push
adcl
push
shlb
cmp
pushf
push
xor
pop
or
mov
scas
or
pop
cmpsl
lret
lret
int
pop
lret
inc
jle
xchg
pop
iret
add
data16
add
inc
jp
add
sub
mov
arpl
push
scas
loopne
in
inc
cld
inc
jge
xor
pop
add
sbb
jne
cltd
add
pop
mulb
cwtl
out
push
rorb
lods
mov
out
mov
jp
leave
cwtl
cltd
mov
out
gs
lret
sub
mov
test
lods
pushf
pop
jno
pop
pop
mov
xchg
inc
mov
fistpll
pop
push
mov
lret
mov
jge
jns
push
repz
jmp
adc
xchg
ret
nop
xchg
add
and
jg
movsl
clc
outsb
sahf
sbb
jecxz
push
aad
cmc
arpl
sbbl
out
ja
xchg
jecxz
sbb
xchg
mov
fidivs
push
jmp
loopne
cmp
jbe
inc
je
dec
int3
adcb
mov
fwait
cmpsb
lods
inc
push
jmp
int
imulb
cltd
or
inc
push
daa
inc
sbb
lcall
dec
mov
or
add
inc
daa
inc
test
je
test
ljmp
rcr
out
inc
insl
in
ss
or
movsl
jmp
sbb
lea
ds
jl
cld
or
outsl
aas
and
cmp
mov
mov
insl
adc
mov
adc
jp
push
shlb
out
sub
fs
sbb
in
enter
push
rorb
scas
jecxz
mov
push
nop
dec
incl
pop
ljmp
jp
in
jmp
gs
sub
cmc
shrl
mov
sbb
xor
cwtl
lods
inc
or
stos
mov
outsb
inc
mov
inc
inc
inc
and
jmp
popa
push
mov
sbb
jb
arpl
scas
scas
dec
or
testb
lret
push
addr16
xor
es
sub
faddl
mov
imulb
aas
mov
adc
arpl
int
sub
nop
mov
or
scas
iret
ficompl
adc
je
aaa
jns
inc
dec
das
rcrl
mov
mov
mov
daa
enter
lahf
popa
cli
jb
popf
repnz
dec
lea
imul
sti
xchg
mov
popa
mov
out
lret
gs
ss
stos
test
add
pop
popa
and
int3
je
and
shll
jp
jae
fnstenv
mov
push
lods
sub
or
xchg
or
mov
int
jb
hlt
mov
jo
inc
mov
test
ficomps
mov
lds
sub
hlt
fsub
or
mov
loop
je
and
adc
and
popf
inc
push
into
xor
and
test
icebp
or
call
arpl
pop
call
rcr
or
jp
ret
popa
or
adc
mov
nop
in
dec
in
mov
inc
mov
aaa
and
clc
data16
mov
call
roll
inc
cli
lea
push
xorl
xor
add
clc
cli
in
sbb
xchg
sahf
data16
aaa
es
js
sahf
stc
inc
movb
cltd
cwtl
xor
insb
stos
and
dec
ror
pop
mov
mov
in
xchg
test
ljmp
loop
stc
shlb
ret
mov
add
add
xchg
arpl
pusha
mov
sbb
loope
adc
in
jo
adc
or
mov
mov
nop
into
mov
repnz
push
mov
es
sbb
push
push
push
arpl
stos
cmc
mov
fs
lahf
cmp
bound
mov
cltd
cld
incl
loopne
cmp
mov
int
mov
mov
incl
mov
xchg
mov
inc
repz
sub
adc
pop
or
lcall
test
pusha
mov
hlt
mov
and
mov
shll
cwtl
pop
mov
aam
sbb
add
fs
xchg
stos
mov
pushf
cmp
out
loopne
out
adc
pop
xchg
mov
inc
mov
and
inc
push
shl
jne
push
mov
das
and
xchg
add
repz
fsubrl
cli
mov
pop
push
fisubrs
cmpsb
pop
in
std
mov
iret
adc
mov
push
adc
daa
jecxz
push
sti
or
cmp
adc
push
lret
pop
pop
mov
call
dec
jne
jle
pop
and
mov
outsl
dec
xor
ficoml
mov
push
push
sub
xor
xor
dec
in
gs
dec
xchg
fwait
int3
pop
fldt
sahf
cs
sbb
aaa
push
mov
jb
jge
imul
in
bound
lods
and
xchg
repz
mov
imul
jg
mov
mov
pusha
dec
outsb
xlat
repz
sub
pop
fs
adc
mov
rorl
mov
sub
push
sbb
outsb
jmp
mov
sbbl
das
lds
iret
ret
pop
aad
push
inc
or
fsubrl
ret
push
rcrb
sti
adc
test
stc
mov
mov
push
mov
shlb
mov
and
mov
sahf
addr16
mov
inc
push
pop
fcmovnbe
pop
xchg
shrl
jecxz
fistps
mov
rcr
push
test
insl
adc
je
not
jbe
ljmp
push
add
pop
and
inc
loop
cmp
add
jg
mov
popf
push
sub
ljmp
aam
data16
cvtps2pi
dec
mov
sub
insb
xchg
mov
pop
pop
ret
fs
xor
cmp
repnz
mov
dec
sbb
int3
bound
inc
scas
add
xlat
lods
faddl
add
negl
bound
add
sub
iret
sahf
push
push
incl
mov
inc
cltd
dec
popa
insl
pop
xor
imul
cmpsl
out
cmp
sbb
insb
inc
loope
sbbl
xchg
xchg
mov
outsl
pop
inc
sbb
int
ror
in
iret
mov
ss
push
xchg
std
int
and
test
es
or
insl
mov
test
sub
ret
push
and
adc
sti
ljmp
xor
cmpsb
xchg
mov
jle
fnstcw
jb
pushf
mov
popf
mov
xor
adc
aad
mov
jp
lcall
shlb
inc
jl
test
sahf
das
xchg
sbb
sbb
jno
lcall
shl
jb
xchg
stos
ret
mov
out
lret
clc
stc
and
test
adc
mov
mov
adc
jle
rcr
push
mov
xor
dec
mov
fidivs
sbb
sub
daa
outsb
pusha
or
call
shrl
adc
sbb
add
cwtl
push
jge
pop
and
pushf
and
mov
inc
gs
push
inc
sbb
mov
fisubrs
sbb
adc
out
faddl
hlt
xchg
adcl
adc
lock
dec
outsb
loope
pop
leave
je
leave
mov
sub
cmp
repnz
sub
jl
ljmp
add
push
das
adc
mov
push
sahf
mov
mov
xlat
movsb
sbb
jae
mov
mov
xchg
xchg
mov
add
mov
popf
test
and
pop
push
aad
adc
inc
and
es
mov
cmp
lcall
mov
cmc
gs
sbb
xlat
cmc
int
add
jns
or
pop
mov
mov
lock
push
jle
aas
push
scas
xor
and
jbe
and
inc
fldt
rolb
lds
cmp
pop
xchg
or
xchg
sbb
ja
fcomi
call
inc
mov
mov
jns
in
enter
enter
jecxz
push
daa
lods
out
mov
inc
xchg
xlat
popa
in
pusha
fwait
or
jg
rcl
push
mov
fmuls
xor
ja
cmp
mov
xlat
mov
outsb
cmpsl
jbe
rcrl
pop
inc
subb
idivl
imul
cmp
test
sbb
test
sub
push
push
mov
jle
insl
mov
mov
lea
ret
movsb
mov
in
out
or
push
es
dec
xchg
bound
cmpsb
jns
aaa
shll
test
aaa
add
adc
cmpsl
test
daa
stos
or
add
cmp
push
clc
test
out
popa
or
push
xor
sub
inc
cmp
xlat
or
das
lcall
es
xor
xchg
sub
mov
fidivrs
insb
fmul
mov
pop
ja
cmpsl
insb
shlb
jg
dec
loopne
cmc
cmp
je
dec
pop
sbb
or
pop
xor
in
rorb
daa
xor
inc
jge
pusha
sbb
fmuls
cmp
xor
ret
xchg
insl
int
or
mov
and
cwtl
pop
movsl
cs
into
loope
adc
popa
repnz
xchg
stos
push
mov
cmpsl
es
adc
ja
loop
stos
stos
mov
jl
movsb
or
and
leave
pop
jmp
push
fdivrs
jle
pop
xchg
out
mov
lea
in
and
pop
mov
insl
pop
jne
shlb
pop
xlat
shll
add
sbb
or
bound
fcom
push
clc
adc
pop
int3
add
addr16
mov
mov
inc
pop
stos
jmp
aaa
insl
mov
xchg
jp
out
hlt
lock
adc
dec
int
xchg
xor
fldt
insb
or
cltd
add
iret
dec
lret
dec
cmovbe
mov
pop
push
add
pop
loopne,pn
aam
cld
das
xlat
addr16
xchg
lahf
push
lds
jl
loopne
cmp
repnz
push
inc
push
add
orl
or
aad
es
std
cmp
push
push
pop
cli
lods
mov
push
and
pop
pop
pop
test
cmp
rolb
mov
js
movsb
push
cld
pop
mov
pop
mov
adc
pop
adc
pop
xor
ror
orl
lret
push
subb
sti
mov
jno
mov
es
sub
cs
and
ljmp
pop
loope
pop
repnz
sub
xor
mov
enter
arpl
jecxz
sbb
push
dec
adc
mov
mov
mov
add
lods
xor
fdivrs
jo
loop
js
aad
mov
sbb
add
adc
popf
pop
inc
push
pushf
inc
cmp
inc
in
sub
pop
push
ficoml
jnp
sub
ret
jnp
inc
aaa
ss
pop
pop
xchg
or
lock
aaa
jno
ss
push
icebp
std
pop
mov
sbb
fistl
lods
and
mull
bound
xchg
stc
jne
rcrb
jne
push
sarl
xor
lcall
sarl
loop
fwait
sahf
push
push
je
les
sub
pusha
je
adc
flds
sub
jecxz
sub
scas
adc
push
and
fnstsw
jg
lret
dec
mov
aad
cwtl
mov
out
inc
and
fsubs
push
lahf
sti
dec
cmp
xchg
pusha
addr16
loope
in
push
push
mov
mov
ds
lahf
les
cmp
fscale
sarb
mov
push
xor
and
das
adc
in
dec
roll
inc
and
int
je
loope
ret
sahf
fdivrs
or
cmp
aaa
xor
adc
outsb
sub
mov
push
sarb
pop
mov
push
das
xlat
or
xchg
pop
mov
dec
dec
xchg
adc
mov
jno
xor
xchg
inc
lock
sub
inc
lock
inc
xchg
and
adc
jecxz
pop
fstpl
pop
das
scas
jecxz,pt
xchg
jmp
pop
mov
pop
lods
dec
fdivrs
iret
mov
dec
pushf
cli
push
sbb
xchg
data16
notl
add
push
fidivrl
mov
push
or
out
pop
inc
adc
jns
lea
sub
popa
insb
hlt
mov
push
and
sbb
push
popf
jp
pmaxub
gs
loope
fcoml
stc
enter
mov
aam
add
hlt
lahf
inc
call
mov
out
or
cmp
sbb
fnstsw
icebp
cmp
jl
cmp
adcl
adc
mov
sahf
mov
rol
insl
ret
icebp
iret
xchg
xor
xor
leave
add
insl
mov
inc
mov
int
popl
aas
adc
cli
int3
sbb
mov
nop
ljmp
insb
push
push
mov
cmp
and
aad
lret
inc
outsl
imul
sub
or
xchg
or
push
mov
cmp
push
cmp
and
das
es
inc
push
loopne
outsl
push
sbb
push
cmp
mov
out
cmp
push
loope
pop
movsl
jae
push
push
xlat
roll
xchg
std
sbb
aad
xor
mull
sub
pop
jp
ret
jns
dec
mov
ret
inc
je
push
aad
in
mov
sub
nop
xchg
push
pop
imul
mov
xor
cmc
inc
clc
repnz
jl
shll
aam
gs
jmp
sbb
in
sub
lods
sub
add
mov
push
jmp
repnz
xchg
movsl
fidivs
pop
fisubl
xor
outsb
pusha
les
sub
xlat
push
cld
mov
or
inc
add
negl
bound
int
mov
inc
out
hlt
shll
mov
dec
jecxz
pusha
loopne
jmp
ds
ret
cmp
stos
xchg
dec
sbb
loop
xchg
ret
jns
and
cmp
shrb
pop
adc
mov
push
bound
jmp
add
mov
pop
cs
cmpsl
inc
shrb
scas
push
cs
test
addr16
xchg
insb
mov
mov
in
inc
enter
jmp
ficoms
inc
shlb
repnz
dec
sbb
adc
mov
dec
or
sbb
xchg
mov
jb
xchg
test
stos
pop
inc
mov
into
xor
adc
js
inc
inc
fisttpll
jae
adc
xchg
fdivr
insb
pop
jge
push
jae
inc
mov
mov
jo
sub
fisubrs
or
hlt
in
int3
xchg
sarl
jmp
sbb
sti
shrb
jae
jns
ja
or
ficoml
inc
and
add
push
xor
sub
lcall
xchg
dec
fnstcw
in
loopne
adc
es
sub
mov
xchg
je
pop
pop
daa
push
in
jle
cli
push
mov
lea
or
out
clc
fmuls
sahf
xor
in
mov
mov
mov
xlat
leave
ljmp
test
jmp
mov
fld
mov
pop
dec
pushf
xor
enter
xchg
pop
add
orb
xor
dec
xor
adc
and
xor
lds
js
sbb
push
push
or
xchg
rol
sahf
shlb
mov
add
pop
dec
daa
and
test
inc
in
pop
scas
mov
loopne
and
push
ja
add
jnp
ljmp
cli
or
mov
inc
push
ficompl
jne
aam
push
cmc
sti
mov
stos
xchg
push
mov
das
xchg
mov
mov
int3
xchg
lods
or
aam
hlt
jl
ror
lds
lahf
aad
jne
and
xchg
mov
stos
and
xor
aad
mov
shll
or
xor
pushf
cmp
jmp
jg
xchg
ret
push
std
xor
stos
ret
pop
es
pop
movsl
dec
and
cwtl
mov
xchg
lea
test
inc
pop
out
push
fimuls
or
add
or
dec
mov
dec
push
mov
sbb
cmp
pop
ss
int3
xor
or
jb
and
add
enter
sbb
aaa
rol
sbb
and
mov
push
sub
movsb
in
loop
test
call
pop
mov
movsl
cs
popa
or
jmp
cmp
movsl
cwtl
fcmovnb
xchg
out
sbb
pop
imul
jns
pop
fucomp
adc
loope
xor
inc
pop
loopne
out
stc
clc
push
pop
jns
leave
das
in
aaa
mov
pop
out
int
fmuls
ret
adc
sub
shll
and
rorb
nop
add
and
push
testb
and
ss
iret
inc
xlat
fs
cli
fidivrs
sbb
push
fcompl
insb
mov
rcll
int3
movb
sbb
xchg
push
cmpsb
mov
fwait
stos
clc
pcmpeqd
sbb
lea
jbe
insl
fisttps
adc
movsb
push
add
fwait
jg
leave
xchg
rorb
sarl
mov
das
call
sub
mov
sub
rol
dec
push
lret
repz
aad
ss
pop
sub
adc
mov
mov
add
mov
or
add
aad
subl
call
and
daa
lock
adc
rclb
rorl
pop
mov
fimull
hlt
cmc
movsl
lcall
test
test
sbb
push
in
out
cltd
stc
push
sarb
int
inc
mov
in
sub
push
jecxz
mov
into
data16
imul
add
std
jmp
xchg
and
loopne
pop
sub
xchg
cmp
test
sbb
int
mov
inc
mov
lods
repnz
xchg
jbe
pause
fwait
adc
or
mov
and
push
xor
push
add
pop
dec
in
lcall
fwait
rclb
add
call
clc
std
or
je
cltd
leave
roll
dec
inc
jns
fldenv
adc
mov
mov
jbe
push
fptan
mov
std
jo
sti
xchg
cli
enter
cmp
xor
rcll
pop
sbb
insl
test
push
jne
lods
push
jo
les
cli
in
in
pop
imul
inc
adc
nop
out
fidivs
xchg
sub
sbb
fistl
ret
adc
mov
fs
insl
or
xchg
cmpl
aaa
sbb
pop
ljmp
push
add
repz
mov
insb
cmp
mov
jle
insb
cld
dec
xchg
and
cmp
and
sbb
or
test
das
adc
jl
and
dec
mov
cmp
sahf
mov
inc
mov
jnp
lods
ror
xchg
stos
jge
xor
jns
or
popf
les
xchg
sub
jecxz
ret
jo
mov
push
outsb
mull
movsl
mov
cmp
pop
mov
rorb
jbe
cmp
stos
push
lret
addr16
mov
push
gs
insb
lahf
jne
or
loopne
jns
lock
xchg
dec
push
mov
arpl
dec
or
filds
shlb
push
ds
mov
pusha
movsl
sub
push
mov
adc
xor
dec
pop
xchg
scas
shlb
lret
movsb
ss
sbb
push
and
shl
movsl
jge
adc
shrb
sbb
xchg
sub
in
xchg
cmp
or
mov
xor
push
aaa
mov
int3
mov
push
pop
sbb
push
pop
call
pop
ret
cs
mov
mov
pshufw
cmpsl
out
faddp
or
sub
cwtl
arpl
repz
and
insl
leave
mov
daa
orb
lret
push
jbe
jns
push
lcall
sbb
sar
shl
les
loopne
push
jne
adc
push
jp
inc
nopl
mov
cltd
xchg
in
ss
sub
loope
cld
xchg
inc
not
test
bound
cmpsb
ja
sub
sub
pop
jg
push
loopne
adc
add
in
or
dec
jnp
imul
xchg
das
sbb
pop
push
ljmp
push
stos
push
push
sbb
nop
insl
push
cmp
leave
or
cmpsl
xchg
sti
dec
pop
outsl
out
int
adc
inc
iret
xchg
bound
pop
ficompl
shlb
inc
das
test
mov
jno
les
sar
jmp
and
sti
lds
and
lret
arpl
push
cltd
cmpsl
inc
lods
cwtl
out
jno
popa
insl
fmull
and
mull
mov
pop
mov
or
or
or
lcall
dec
addr16
and
mov
outsl
jle
jo
lea
or
cmp
inc
aaa
inc
xor
pop
add
sbb
arpl
jge
outsl
andl
lock
cmp
arpl
enter
insb
ds
lock
and
and
jnp
push
add
stos
cli
aas
pop
sub
lret
pop
cmp
push
inc
xor
enter
cmp
jnp
out
mov
loop
inc
push
in
sbb
xor
std
xor
jbe
mov
pusha
xchg
push
or
mov
sbb
xorb
mov
aam
mov
nop
fxch
dec
rclb
pop
push
pop
popf
mov
mov
mov
in
sbb
push
adc
fadds
lds
adc
push
inc
xor
xor
mov
bound
in
shll
cmp
pop
mov
xor
shrl
cmp
repz
cmp
mov
shll
inc
xchg
cli
mov
out
bound
jp
leave
adc
pop
in
mov
push
mov
lret
jmp
daa
je
add
iret
sbbb
add
cmp
imul
mov
outsl
lock
adc
sti
sbb
test
insl
xchg
rolb
aad
enter
xlat
or
aad
mov
stos
push
enter
xchg
or
sub
inc
std
fmull
stc
adcb
movsl
adc
in
push
cmpb
repz
ficoms
mov
xchg
negl
add
cli
mov
mov
sbb
cmp
xor
ja
jbe
aas
xor
add
mov
xchg
pop
and
popa
jnp
mov
adc
jle
push
cwtl
sarb
jecxz
jb
addr16
mov
or
xor
bound
inc
mov
jle
mov
lcall
and
mov
ds
insb
fwait
jne
ljmp
add
cmp
insl
push
test
test
rcrl
push
fs
pop
loopne
and
repnz
pushf
dec
lret
adcb
adc
in
orl
mov
lea
push
sbb
or
daa
or
out
mov
mov
fistpl
into
fisubl
fldcw
arpl
inc
fisttpl
push
sbb
mov
insb
mov
cmc
or
mov
rolb
xor
outsl
mov
ss
enter
jne
sbb
mov
or
jp
fnstcw
inc
call
das
shrb
ret
xchg
and
out
push
repnz
iret
push
adc
ret
mov
and
andb
jl
cmp
jae
mov
es
and
ljmp
push
mov
push
mov
xor
lock
or
mov
sti
pop
movsl
fsub
push
sub
out
stos
mov
mov
pop
pop
flds
dec
add
jbe
bound
test
xchg
test
push
das
popf
stos
hlt
mov
xor
fwait
cmp
es
add
ret
sub
data16
addr16
mov
mov
lods
notl
mov
xor
sub
fcoms
cwtl
mov
out
lea
lock
inc
lds
leave
repz
insw
xor
lods
jno
mov
pop
out
mov
shrl
outsl
add
push
xor
add
imul
rorl
call
mov
push
leave
add
dec
insb
add
lret
push
sbb
je
xchg
xchg
fisttps
adc
mov
dec
mov
mov
cmc
mov
ljmp
cmp
stos
out
mov
pop
cli
lods
inc
jbe
cld
jge
jne
or
sbb
jo
or
test
insb
mov
lret
xchg
fwait
sub
cltd
daa
mov
dec
in
repnz
lea
add
pop
rolb
pop
dec
or
mov
jns
sbb
enter
filds
ret
cs
xchg
sbb
inc
cld
adc
mov
jp
mov
fistpl
daa
insb
xchg
add
jecxz
xorb
cwtl
popa
int
iret
add
xchg
bound
popa
gs
sbb
cwtl
dec
mov
das
sarl
xor
jp
or
fimuls
movb
test
push
js
mov
pushf
outsl
cmp
mov
adc
in
mov
adc
test
fdivrp
aas
enter
mov
xchg
sub
lret
and
cltd
sti
xchg
mov
pop
shrb
bound
cli
mov
mov
inc
mov
mov
xchg
mov
popa
inc
popa
and
stos
stos
lods
add
xor
adc
bound
inc
pusha
pop
xchg
das
data16
pop
and
jne
pushf
ds
jnp
pop
int
inc
hlt
fdivrs
xchg
ja
xlat
imull
cmc
cmp
outsb
sbb
jbe
xchg
adc
testb
push
push
add
or
pop
pop
out
adc
test
add
push
fidivrl
in
gs
inc
je
dec
xor
les
adc
cs
loope
push
push
jp
add
orl
xchg
ds
lcall
or
lahf
inc
lret
rcrb
inc
mov
sub
cmp
mov
dec
inc
push
mov
icebp
dec
pop
pop
sar
loope
push
adc
push
mov
sbb
int3
mov
inc
or
cmp
or
xchg
ja
stos
cmp
insl
push
pop
sbb
cmc
jns
cmp
imul
jns
lret
adc
ja
repnz
add
push
enter
and
xchg
xor
adc
scas
mov
lret
cld
loope
andb
cli
lret
mov
cltd
scas
pop
sarl
adc
fcoml
mov
push
cmp
es
outsl
push
mov
outsb
mov
sub
loope
mov
pop
rclb
cmp
outsl
dec
test
jb
out
dec
mov
jnp
movl
mov
shl
push
and
arpl
pop
testb
sbb
fcmovnb
aas
in
jmp
out
pop
mov
mov
push
xchg
cmc
dec
mov
adc
lret
and
popa
test
adc
push
movsb
test
jns
les
repnz
dec
pop
data16
add
push
mov
cld
lds
andl
insl
cmpsl
dec
icebp
xchg
push
scas
cltd
add
ja
lcall
xor
test
arpl
testb
mov
fisubrs
stos
stos
call
push
xor
andl
and
test
outsb
push
push
int3
xchg
rcll
push
adc
mov
dec
bound
jmp
outsb
ret
leave
test
call
xchg
push
xchg
push
xchg
xlat
ficoml
test
sbb
sbb
lcall
and
jb
enter
cli
imul
jl
xchg
pop
add
or
outsl
into
pop
cmp
ret
pusha
xor
push
sub
adc
cltd
js
mov
or
jmp
iret
nop
lods
test
outsb
pop
inc
or
insb
mov
jo
punpckldq
in
cs
add
leave
add
daa
sti
insl
inc
sub
in
fwait
mov
pop
lcall
arpl
mov
mov
jle
mov
push
stos
adc
pop
int3
dec
int3
dec
inc
lds
jb
call
add
lahf
jp
aas
inc
dec
add
cmp
repnz
xor
popf
jmp
push
call
cmp
add
inc
cmp
out
fnstcw
push
rorb
lds
ja
cmp
xor
cltd
cld
mov
addr16
pop
rorb
fprem1
mov
pusha
mov
add
lret
das
and
scas
dec
inc
test
lahf
call
cmp
out
inc
and
cmp
mov
lcall
lock
mov
push
loope
inc
arpl
cmp
dec
stc
or
ja
stc
and
clc
adc
popf
das
test
pop
in
push
inc
lret
sbb
shl
push
cld
inc
dec
inc
or
xchg
dec
out
int
insl
movsl
std
fwait
inc
add
fisubl
pusha
sbb
sub
or
push
mov
rcrl
push
fcomip
xchg
push
into
push
cmp
in
call
pop
cld
push
pushf
inc
pop
jne
pop
sbb
xchg
fwait
and
int3
sub
push
cli
cmp
incl
out
test
stos
jle
mov
lahf
inc
dec
aam
push
fstps
imul
and
loope
in
cwtl
pop
mov
adc
sbb
xor
dec
push
xor
or
outsb
mov
rcll
xlat
xlat
daa
clc
imul
jb
sbb
scas
inc
mov
push
pop
jl
push
push
stos
xor
pop
out
out
cmpb
adc
fsubp
inc
sub
dec
inc
shr
or
or
in
cmp
fistpl
xchg
arpl
adc
xor
rol
add
pushf
xchg
das
loop
jmp
cld
or
int
ja
sub
cmp
push
test
xor
sti
repz
cmp
dec
adc
data16
addb
mov
stos
test
sbb
test
pop
pop
clc
scas
js
repnz
mov
adc
out
inc
cs
cwtl
lret
cmp
mov
add
leave
push
mov
xor
enter
in
or
es
enter
sarb
cmpsb
mov
std
test
pop
push
mov
sub
mov
xor
loop
lods
jecxz
testb
mov
xchg
jle
xchg
mov
jae
insl
add
mov
jecxz
push
outsb
jo
imul
inc
movsl
or
icebp
ss
das
cmpsl
push
mov
xor
bound
sarl
insl
inc
inc
fnstcw
mov
cmp
ror
fimull
insl
xchg
out
fildll
or
testb
inc
jne
mov
mov
pusha
inc
pop
xlat
arpl
and
push
nop
pushf
jbe
rolb
xchg
mov
loopne
xor
out
adc
repnz
and
pop
pop
push
push
dec
push
repz
xchg
shrl
mov
dec
mov
push
xchg
or
movsb
jb
and
imul
dec
aaa
and
lock
push
pop
stos
jae
pop
bound
mov
leave
mov
int3
ret
loopne
add
and
adc
test
jae
push
cmp
xchg
cmc
push
sti
fildll
arpl
in
out
addl
xor
pop
push
sbb
in
sbb
popa
xchg
mov
add
xlat
pop
cmp
dec
xchg
cld
addl
sbb
or
sbb
cmp
aaa
mov
lea
xchg
add
les
aad
ret
dec
jge
lods
or
jo
aam
movsl
mov
fwait
adc
mov
cmpsl
sbb
leave
mov
add
mov
rorl
lea
dec
sub
sbb
lods
jae
leave
in
daa
cmp
push
or
stos
fs
mov
push
aas
jmp
pop
loop
cmpl
jmp
sub
cltd
mov
lea
push
add
pop
cmp
scas
filds
mov
pop
loop
fwait
cs
sub
cmp
push
mov
enter
and
fmuls
inc
add
movsl
imul
cmp
jbe
out
cli
mov
sub
mov
mov
or
sub
pop
movsb
outsl
sub
mov
rol
fldl
stos
out
fcoml
outsb
fbstp
adc
adc
cltd
pop
addl
loopne
cmp
dec
imul
repz
xchg
aas
popf
scas
and
mov
add
stos
dec
push
or
test
cmp
cmp
repnz
out
fwait
xchg
mov
sbb
testb
pop
push
dec
jle
test
lahf
test
idivl
sub
shlb
mov
push
jb
outsb
xor
addr16
out
out
add
addr16
pop
movsl
pop
addr16
pop
movsb
loop
dec
inc
or
adc
xor
sub
mov
jle
jg
jmp
xchg
mov
dec
rcll
fmuls
fnstcw
mov
or
xlat
mov
push
jl
sub
stc
mov
repz
and
int3
mov
fisubrl
aam
pop
sub
cmpsl
roll
rorl
movsb
sbb
out
call
lods
loope
xchg
int
mov
sbb
xchg
inc
add
sbb
jno
or
mov
mov
inc
pop
repz
jbe
xor
aaa
push
in
fs
insb
pop
stos
mov
xor
shrb
out
sbbb
sub
mov
xchg
ss
jp
pop
sbb
fstpl
push
add
in
popa
mov
sbb
xlat
in
fmull
sti
div
sbb
jmp
mov
xor
dec
cmpsb
test
mov
dec
sbb
mov
icebp
dec
cmpsb
jle
add
outsl
cli
jo
lock
loop
push
sbb
pop
mov
sub
push
mov
rcl
xchg
or
mov
or
sahf
xlat
mov
mov
das
adc
sahf
cmp
adc
icebp
mov
std
popf
test
push
pop
adc
in
sub
jnp
xchg
inc
add
add
sub
add
and
repz
or
mov
loope
pop
jmp
xor
inc
test
add
adc
lods
mov
sbbb
inc
push
sbb
test
add
mov
or
cmpsb
sbbl
mov
ss
fwait
add
jp
sbb
mov
lods
sub
fwait
and
sbb
daa
ret
fcmovne
mov
in
xchg
pop
push
pop
dec
jmp
loope
fildl
mov
std
add
stc
data16
lcall
cmpsl
inc
shrl
orb
pop
xor
dec
daa
pop
stc
leave
sub
imul
push
test
mov
xchg
and
mov
xchg
mov
cli
xor
sbbl
mov
pop
cmpsb
icebp
ss
jle
jo
icebp
xchg
mov
jns
xchg
fwait
in
std
sub
cmpsl
add
mov
jg
pop
movsb
fimull
xchg
popf
or
pop
inc
addr16
test
lds
lret
mov
fnstcw
xlat
stos
out
and
and
loopne
or
xchg
jb
std
jecxz
das
pop
call
loope
push
jno
adcb
xchg
ljmp
push
jg
fisttps
lret
push
xor
aam
call
add
aas
fdivrs
lret
and
cmp
data16
test
inc
cltd
in
xchg
call
inc
and
xlat
or
mov
xor
xchg
lods
cmp
dec
scas
pop
cmpsl
jae
jnp
push
add
repz
push
gs
sbb
out
sbb
push
dec
loopne
bound
fdivr
aam
test
inc
lock
notl
test
push
and
rclb
jae
mov
idivb
sub
pusha
push
mov
xchg
rcl
les
mov
ja
es
in
cmc
cmp
and
lahf
dec
adc
push
push
add
pop
sub
leave
inc
mov
or
xor
ja
gs
lods
add
mov
nop
sub
pop
ljmp
int
pop
xchg
inc
repnz
and
mov
testb
jo
mov
inc
out
rcrl
arpl
xchg
jno
or
xchg
in
adc
pushf
jecxz
inc
lods
xor
aaa
lret
dec
addl
inc
shl
cli
or
ret
lret
ja
inc
adc
movsb
xor
unpckhps
mov
xchg
addr16
out
mov
cltd
shlb
add
movsl
cli
xor
popf
aas
add
out
inc
mov
fbld
and
test
add
js
movsb
movsb
fcomi
fldcw
lods
test
jge
loope
dec
pushf
push
and
outsl
clc
idivb
int
xor
fldt
dec
add
and
jnp
fstpl
cmp
inc
stc
hlt
pop
jbe
aaa
push
inc
fmul
jmp
addr16
addr16
inc
pop
mov
jmp
xchg
aad
out
adc
out
lea
cmp
hlt
fadds
sbb
cwtl
pop
pop
mov
fists
mov
icebp
test
jns
mov
pop
add
fadd
push
add
repz
dec
and
jp
mov
jnp
jnp
jns
movsl
popf
push
out
fnstenv
stos
lea
leave
pop
in
and
test
mov
adc
pop
test
cli
xlat
pcmpgtb
push
outsb
mov
fisubrs
out
cmc
aas
out
out
adc
sbb
pop
shlb
cltd
icebp
ljmp
leave
xor
mov
inc
add
scas
xchg
push
js
rcll
lea
out
in
ljmp
and
jb
fsin
inc
pop
imull
add
rcrl
lods
outsl
jbe
mov
cmp
movsb
rcrb
push
jb
sahf
hlt
dec
push
add
cwtl
cmp
cmp
mov
push
dec
addr16
inc
lds
xchg
ficompl
pop
mov
fbld
lock
lcall
das
dec
jne
jae
icebp
out
test
pop
aam
outsl
mov
mov
xlat
push
out
xor
push
mov
add
push
inc
fwait
mov
mov
pop
mov
sbb
popf
repnz
adcl
mov
fs
lahf
dec
sahf
dec
lock
sbb
adc
lds
movsl
fidivl
sbb
mov
jnp
push
push
cmp
sbb
mov
out
jg
xchg
xor
jno
or
xchg
int3
jg
out
out
lods
outsb
and
outsb
cmp
mov
repz
jle
ret
xchg
pop
sbb
int
mov
sub
push
push
inc
stc
mov
das
pop
test
loop
cmpsl
adc
icebp
jbe
inc
ljmp
jmp
mov
jge
adc
xchg
fwait
ss
enter
js
xchg
pop
addl
sub
and
cs
mov
push
add
sbb
lods
decb
jle
imul
xor
movsl
push
cli
addr16
out
sub
adc
neg
stos
inc
dec
scas
or
ljmp
xor
fcomps
add
sbb
add
fildll
pop
dec
fmull
cmp
xor
sub
fwait
xchg
mov
dec
imul
xchg
mov
xchg
out
fwait
stc
divb
mov
mov
push
sub
in
in
pushf
and
mov
jno
int
lea
je
cld
xchg
add
dec
dec
sbb
jno
push
add
or
and
ja
data16
lds
aad
ret
imul
xchg
jmp
sbb
jl
xchg
in
pop
inc
xchg
fcoml
pop
addb
sbb
mov
mov
orb
ss
cld
xchg
jae
or
aas
jle
popf
push
rolb
icebp
out
decb
push
push
cmp
lea
xchg
js
mov
out
cmp
cld
push
lret
lock
jae
and
sbb
and
jne
lea
loop
sub
inc
mov
fs
cs
jb
push
pop
jg
iret
lret
xor
jo
xor
mov
mov
xchg
divl
outsl
xor
orb
movsb
pop
xor
sbb
std
pop
scas
pop
pop
cmpsb
mov
movsb
xor
rorb
jp
inc
mov
and
aam
shlb
call
cltd
fwait
aam
in
sti
outsb
pop
mov
mov
je
ret
mov
je
add
insl
fildl
loope
ret
clc
dec
xor
jae
jns
divb
and
addr16
outsl
inc
inc
outsl
push
jne
fisubrl
and
in
jae
stos
xlat
das
es
cmc
out
ret
adc
in
mov
xchg
mov
push
out
push
xchg
dec
insb
inc
sbb
ss
jns
sbb
push
in
leave
mov
cmp
mov
push
mov
xchg
push
push
std
pop
jle
rclb
pop
add
mov
pushf
jne
mov
inc
sbb
ljmp
pop
sub
xor
pop
push
pop
or
jge
cld
adc
xor
xchg
cmp
lahf
ret
adc
xor
sbb
in
mov
lahf
bound
idivb
stc
mov
roll
sbb
lcall
or
fdivl
cmpl
rcr
vpacksswb
inc
jp
push
inc
inc
add
loope
adcl
stos
jnp
pop
mov
pop
js
fiaddl
lret
movsb
dec
mov
insb
dec
jle
jb
fcmovnbe
cltd
mov
add
scas
cmp
cmp
inc
push
xor
lcall
inc
mov
lds
es
ds
or
mov
xor
xor
cmc
fwait
push
insl
pop
xchg
push
inc
xchg
or
orl
sbb
pop
arpl
inc
push
ljmp
jb
data16
xchg
push
sub
daa
jge
jno
cwtl
test
adc
mov
xor
cmc
lret
stos
adcl
push
add
push
call
cltd
and
sbb
cmp
mov
scas
push
jle
or
jae
imul
mov
cltd
sbb
pop
std
mov
jmp
jno
dec
xchg
pop
ds
push
cmpsb
mov
mov
dec
popa
aad
es
dec
inc
pop
sbb
inc
or
fmuls
lods
lea
push
imul
push
fisubrs
jle
mov
cmp
outsb
repnz
pop
add
inc
sbb
pop
pushf
pop
aaa
cmp
repz
jl
inc
pop
outsl
out
inc
ret
out
mov
xor
cs
jmp
test
mov
aad
mov
mov
lcall
mov
ficoms
adc
xchg
test
lods
jle
pop
sub
icebp
ret
testl
stc
push
pop
scas
adc
hlt
data16
fwait
xchg
scas
adc
jmp
mov
add
cmpsb
cmp
in
mov
sub
mov
or
arpl
sbbl
data16
jae
cmp
push
xor
adc
loop
movsl
imul
das
push
adc
push
bnd
movb
cmp
lods
mov
pop
push
dec
cmp
test
lret
cmc
repnz
lods
or
pop
xlat
sub
cmp
loope
adc
jl
pop
push
pop
push
sub
jge
enter
ret
fidivl
inc
lock
out
test
pop
test
and
pop
mov
mov
stc
ss
and
mov
faddp
xor
cmpsl
or
dec
fisttpl
or
sub
add
les
mov
xchg
push
pushf
je
xlat
sub
push
cmp
test
popf
pusha
imul
mov
jno
push
test
or
push
jno
cld
leave
jno
adc
push
mov
jle
in
js
aas
xchg
cmc
outsl
popa
pop
stc
imull
mov
fldl
call
mov
int3
cmpsb
enter
test
test
pop
mov
xchg
or
ja,pn
cmp
jne
bound
dec
shl
jle
xor
insb
repz
and
lods
mov
cmp
jbe
lock
or
inc
je
sahf
jp
fildll
pop
pushf
mov
test
or
dec
dec
in
cmp
adc
addr16
iret
adc
jle
mov
inc
mov
aad
add
andb
imul
hlt
je
in
mov
int3
mov
push
adc
pop
xor
inc
mov
xor
mov
jmp
mov
jge
lea
je
jmp
in
fidivrs
call
fsubs
mov
clc
xchg
push
jecxz
push
xchg
inc
repnz
mov
cwtl
xchg
mov
sti
inc
pushf
xor
les
aaa
push
loope
sub
sub
shrl
cmpsl
cmp
inc
pop
sbb
test
xor
dec
jg
pop
mov
adc
pop
jo
btcl
mov
or
dec
xor
test
xchg
jge
or
test
hlt
dec
pop
call
dec
leave
xchg
jg
adcl
dec
lret
fidivs
adc
add
push
xor
cld
psrld
cmp
lods
push
xor
push
push
test
pop
lret
lea
mull
pop
adc
shll
pop
dec
mov
fdivl
loop
inc
leave
xchg
into
mov
mov
outsb
popa
mov
in
mov
ficomps
fidivs
xor
pushf
xchg
pop
push
mov
pop
les
mov
or
xchg
xor
test
aad
mov
adc
sbb
lods
mov
cmp
cmc
lds
mov
xchg
dec
or
stos
dec
sub
dec
lahf
jge
orb
adcl
stos
and
inc
mov
jne
push
aam
loop
cmp
pushf
imul
cwtl
das
push
in
shrl
arpl
pop
in
mov
fsubp
cmp
xchg
cwtl
ficoml
cmp
sub
fldt
fwait
punpcklbw
divb
movsb
dec
out
mov
mov
gs
inc
push
add
xorb
lods
shr
outsl
xlat
hlt
aaa
xchg
imul
push
ja
push
test
jnp
outsl
ss
fisubrl
pop
pop
push
add
mov
hlt
hlt
sbb
cmp
je
sub
fs
lret
push
dec
loopne
cs
or
sbb
out
popa
pop
dec
imul
nop
enter
and
mov
stc
das
aaa
mov
fucomp
arpl
enter
inc
roll
arpl
daa
cwtl
out
mov
pop
test
jno
cmp
sub
or
stos
push
mov
in
fstpl
push
inc
aas
inc
aam
fadds
mov
mov
xchg
lahf
adc
add
mov
mov
or
lahf
repz
sahf
xor
xor
ret
popa
adc
lods
iret
ret
mov
xor
push
ret
rcr
cmp
sub
jbe
jge
xor
mov
scas
lods
xchg
push
xor
and
loope
sub
lds
cld
jnp
jae
inc
sub
in
iret
add
mov
mov
sahf
pop
or
jb
sub
or
xchg
sub
into
xor
icebp
test
scas
lcall
sub
dec
inc
rdtsc
pop
ljmp
sbb
nop
ret
sbb
dec
sub
cmp
stos
rcrb
pop
jo
call
and
scas
cwtl
mov
push
cmp
daa
sub
jge
shl
out
fs
enter
adc
xor
rcll
xchg
testl
adc
jp
add
xor
mov
jge
add
out
sbb
mov
cltd
icebp
dec
dec
xor
pop
std
stos
mov
dec
aaa
xlat
loopne
and
add
lret
inc
cmpsl
lret
mov
dec
daa
jbe
mov
sub
xor
lahf
fnsave
cmp
inc
push
out
pop
arpl
arpl
movzwl
xchg
ret
jb
loop
mov
cmpsb
pusha
flds
out
sub
add
sbb
lock
sbb
push
sbb
rcrl
sarl
movsb
jl
mov
stc
data16
ret
nop
fdivr
js
in
pushf
neg
stc
cmp
add
push
clc
clc
mov
pop
inc
jnp
jmp
movsl
rcll
lock
xchg
rclb
inc
lcall
mov
dec
js
sti
ja
movsb
dec
ficomps
sub
das
lcall
adc
xchg
sub
jp
int3
test
lahf
popl
icebp
xor
pop
cmp
outsb
add
add
data16
rolb
lcall
faddl
lret
ja
addb
arpl
push
insb
test
mov
jns
and
out
pop
sarb
jl
shll
mov
cld
sbb
and
repnz
cld
sub
jb
jbe
jbe
nop
cmp
dec
repz
out
sbb
aaa
test
mov
cvtps2pi
stos
jnp
adc
xchg
jo
jne
std
pop
mov
rorb
and
or
call
xor
in
jnp
lcall
cwtl
mov
sub
jle
jnp
inc
inc
filds
sub
sub
dec
inc
jae
jb
sub
mov
mov
xchg
shlb
out
lea
mov
pushf
adc
and
fidivrl
sbb
mov
lods
popa
and
in
test
or
dec
ljmp
sub
sbb
scas
int
push
adc
in
in
mov
in
inc
test
enter
test
cmp
mov
and
cltd
mov
add
sbb
loope
loope
lods
push
mov
jo
mov
push
and
lock
fcomp
aas
xchg
ss
repnz
xchg
sar
repnz
sub
iret
sbb
mov
cmp
test
xchg
repz
adc
pusha
test
mov
cmpsb
out
aas
inc
int
daa
mov
push
jg
or
inc
sub
insl
fisubs
leave
ffree
inc
xor
sar
mov
adc
xchg
bound
mov
xchg
mov
xchg
mov
adc
sub
aas
sbb
in
data16
iret
push
loopne
jb
fisttpl
mov
fbstp
push
push
sub
mov
xchg
shlb
shlb
fcoms
dec
subb
dec
cmp
sub
shll
jno
mov
popa
push
scas
push
sti
xchg
std
jp
pusha
imul
cld
movl
scas
mov
gs
jo
add
shl
sbb
push
mov
jmp
ficoml
push
xchg
call
mov
dec
ljmp
test
mov
xchg
addb
mov
pop
cmpsl
sbb
pop
pop
out
gs
xor
imul
push
inc
scas
inc
mov
inc
insl
aam
xchg
cld
mov
dec
xchg
decb
punpckldq
xorl
inc
add
imul
sub
mov
rcl
sbb
sub
les
cmp
sarl
jnp
lds
mov
xchg
pop
inc
cs
stos
dec
push
add
and
cwtl
mov
outsl
shll
cmp
mov
mov
das
or
fldcw
mov
in
testl
pop
jae
xchg
dec
idivl
mov
andb
ret
pop
inc
inc
cltd
sbb
popa
pop
jbe
or
mov
mov
push
jl
mov
mov
adc
imul
push
and
int3
out
mov
sbb
test
add
dec
fstpl
stos
test
lret
or
jmp
sbb
imul
jl
xchg
cmp
dec
je
out
test
adc
cmp
jmp
stos
pop
inc
scas
rcrl
test
es
cmpsb
cmpsb
data16
cmpsl
push
and
xchg
and
xchg
mov
mov
and
adc
jo
mov
stos
outsl
mov
mov
and
push
add
push
je
lea
or
and
mov
call
cmpsl
test
inc
popf
popa
mov
orb
shrb
mov
xor
mov
cli
adc
sbb
jle
ror
std
fxch
out
sbb
jle
cmc
jns
outsb
pop
lcall
xor
inc
in
shll
aam
popa
xor
inc
mov
outsb
cli
sahf
xlat
or
xor
xchg
jbe
xchg
sub
mov
xor
fsubl
inc
xlat
mov
in
jae
sbb
add
cli
push
inc
xor
lods
mov
pop
nop
in
adc
lods
ljmp
mov
lds
sbb
xor
mov
fs
div
pmaxsw
lret
stos
sbb
lcall
and
loope
add
mov
cmp
jo
dec
lcall
jbe
push
aad
imul
shrb
js
or
test
or
or
xchg
cld
cmpsb
and
dec
xor
rcrb
push
stos
test
dec
lods
dec
shlb
xchg
daa
dec
inc
pop
mov
pop
push
inc
pop
or
in
outsb
adc
add
fst
ret
aas
sbb
xor
mov
fdivl
enter
cmp
or
out
push
cmp
cmpsl
pushf
imul
dec
mov
mov
jge
int3
pop
push
xchg
sarb
mov
inc
xchg
sub
push
in
adc
cmp
in
jecxz
shll
int
fildl
and
mov
fnstsw
adc
mov
mov
dec
test
push
pop
mov
addb
and
loopne
sub
cmp
push
lret
icebp
push
xchg
sti
into
aas
xchg
jge
inc
push
push
mov
aaa
mov
movsb
testl
out
popf
js
pop
inc
pushf
mov
inc
nop
fnstcw
daa
push
add
and
jb
push
mov
add
mov
int
xor
sbbb
or
divl
mov
push
push
mov
arpl
mov
outsb
mov
xchg
mov
pop
jg
jmp
sub
lahf
test
sar
daa
lahf
adc
or
dec
test
fidivrl
add
sub
icebp
xchg
xor
ja
mov
les
int
aam
cmp
xor
out
inc
in
fstp
jmp
scas
iret
inc
xor
scas
rorl
incb
fmuls
lods
pop
inc
fwait
dec
sub
add
fsubrl
jge
out
xor
adc
xchg
adc
mov
ljmp
lds
sub
mov
sub
sahf
cmp
mov
sub
mov
test
push
jecxz
sbb
aad
pop
std
xor
push
xchg
sub
mov
xlat
cmp
scas
mov
add
cmp
sbb
jnp
je
icebp
push
sbb
enter
popa
or
cmc
shll
mov
sbb
les
or
pushf
ss
mov
jno
je
sub
inc
add
or
jno
xor
dec
push
dec
push
cld
or
mov
int
jle
mov
pop
loope
cmp
and
filds
lods
jecxz
dec
lock
mov
jo
jp
dec
add
outsl
jnp
mov
cmp
fists
lock
cmpsl
lea
jge
mov
pop
mov
pop
neg
mov
sahf
or
movsl
lods
out
adc
fs
jmp
mov
xchg
pusha
in
mov
inc
repz
leave
sbb
adc
jmp
andb
arpl
mov
push
movsb
jne
in
sub
cmpsl
sub
js
jno
call
xchg
jle
adc
lret
int3
push
stos
int3
sub
jae
mov
adc
inc
adc
xchg
mov
inc
push
cmp
xchg
popa
mov
mov
out
leave
bnd
jno
xor
mov
data16
in
mov
fwait
dec
or
lock
inc
cltd
jne
sbb
je
push
daa
fs
scas
sub
sbb
dec
in
ljmp
hlt
xor
xchg
idiv
sub
ds
shl
mov
stc
rorb
imul
mov
lcall
mov
or
fildl
xor
sub
outsb
jecxz
or
je
adc
lret
mov
inc
mov
jge
daa
jp
ja
cmc
cmpsl
mov
movsl
ficoml
sub
mov
jne
out
leave
jge
vmwrite
mov
jl
loope
cmp
mov
scas
and
push
fmul
call
and
fnstsw
jp
cli
ja
jns
inc
dec
mov
inc
lcall
and
ret
stos
dec
mov
repnz
mov
jns
pop
adc
adc
jno
adc
mov
lcall
inc
ja
in
dec
aam
or
lock
mov
mov
add
mov
fldenv
pop
in
mov
mov
test
mov
movsl
lods
push
ret
aad
pop
jecxz
rcll
stos
adc
pop
mov
fadds
lods
sub
sar
in
movups
dec
insl
pop
mov
inc
bound
es
mov
in
leave
outsl
mov
xchg
insl
adc
push
sti
mov
xchg
loope
lods
mov
jle
out
mov
arpl
adc
sub
jnp
inc
test
mov
dec
cwtl
jecxz
loopne
scas
lahf
xor
and
movsb
movsl
cmc
inc
add
mov
ret
in
cmpsb
data16
xchg
and
jne
enter
pop
or
cmp
mov
sti
filds
rcll
fistl
shl
test
sub
pop
mov
and
pop
lds
cwtl
inc
test
mov
cwtl
pop
xchg
mov
mov
or
cmp
fnstenv
dec
mov
jne
shrb
bound
push
lcall
inc
js
icebp
sub
xchg
iret
push
bound
fsts
push
push
xor
xchg
gs
or
add
add
pop
or
cmpsb
test
lret
sub
cmp
adc
jg
jge
dec
int3
adc
jl
push
popfw
in
outsl
scas
inc
cs
movsb
in
cli
cli
cmpsl
xor
jnp
cmp
shlb
insl
xor
mov
aas
aaa
pop
lds
xchg
iret
rcr
popa
lret
cmp
neg
xchg
fimull
shl
aam
cmp
jl
push
inc
test
arpl
jmp
mov
mov
shlb
rcrb
je
pop
or
mov
adc
adc
es
fwait
imul
mov
out
xchg
movsb
lcall
ss
push
cltd
push
in
les
test
jnp
rorb
and
leave
pop
adc
inc
adc
xor
ja
aad
pusha
ret
inc
pop
add
gs
fbld
cmp
inc
xlat
fsubrp
stos
cmp
mov
dec
xchg
lock
shll
jns
mov
and
sub
sti
sub
pop
cmp
pop
push
cmp
cmp
mov
mov
push
ds
cs
sbb
sub
imul
loop
mov
jo
push
mov
pop
popl
xchg
jmp
outsl
ss
ljmp
les
sbb
push
cld
mov
jae
push
outsb
xchg
out
sahf
bnd
movsl
xor
movsb
subb
sahf
pause
push
enter
insl
rep
sub
pop
pop
and
mov
mov
or
push
cmp
test
cmc
loop
push
roll
cltd
dec
sbb
jmp
mov
mov
cs
stc
xchg
out
jmp
jbe
adc
push
lret
fcomps
sub
out
fs
adc
or
add
xor
xor
cli
roll
add
cmpsl
mov
outsl
xchg
lods
lret
push
cmc
and
xor
push
or
std
mov
daa
inc
inc
xor
bound
in
pop
sti
js
mov
jnp
jecxz
push
je
mov
dec
imul
xchg
or
mov
mov
cmp
cmp
sub
scas
ds
stos
sub
add
xchg
arpl
hlt
rcll
hlt
in
mov
out
push
mov
outsl
pop
mov
jp
rorb
movsb
and
mov
cmp
sub
subb
inc
into
push
pop
sbb
or
bound
loop
outsb
lahf
mov
enter
ja
in
mov
les
mov
je
test
push
and
inc
cmp
outsb
fwait
adc
daa
mov
sbb
mov
mov
pop
jnp
std
shrl
inc
data16
in
scas
jmp
cs
or
dec
aad
stos
adc
loop
and
in
ret
jg
pop
jmp
sub
adc
inc
add
outsl
xchg
mov
mov
repnz
scas
mov
sub
jne
mov
arpl
xor
mov
sbbb
fcmovbe
out
add
pop
push
cltd
ds
imul
pop
jle
dec
lea
pop
std
test
pop
dec
push
adc
lret
xor
leave
mov
mov
jmp
mov
sub
push
sbb
or
cmp
out
push
insl
lods
sbb
fimull
xchg
jo
cmpl
adc
sti
add
loopne
mov
or
inc
call
jge
insb
mov
dec
call
xchg
outsb
sbb
int
jecxz
loopne
mov
popa
inc
mov
outsb
shrb
adc
or
dec
sub
push
daa
sbb
jg
loopne
push
gs
daa
adc
imul
push
insb
dec
pop
xchg
pop
test
aas
push
dec
or
cmovle
arpl
lahf
mov
dec
repnz
fisttps
and
cld
mov
es
stc
sub
rclb
jg
push
pop
dec
push
scas
out
cmpsb
mov
inc
lds
jns
frstor
rorb
adc
mov
sub
dec
stos
xchg
mov
pop
arpl
fiaddl
fwait
add
insl
mov
les
mov
adc
shl
add
pop
pop
movsb
mov
bound
out
je
sub
mov
inc
rorb
jno
idivb
lods
or
ja
and
pop
and
adc
leave
cmp
push
pop
sub
inc
scas
mov
imul
xchg
inc
cmc
xorl
pushf
lcall
cmpsl
aas
arpl
out
fisubrs
and
test
push
jmp
xchg
mov
mov
gs
xlat
aam
out
sti
movsl
mov
push
sbb
repnz
dec
je
mov
jbe
add
mov
lret
dec
xor
sub
mov
dec
sub
lock
scas
jo
xlat
pop
adc
shlb
xchg
mov
lahf
mov
nop
adc
sbb
add
cmp
dec
pop
xchg
test
add
sahf
cmp
cmp
lcall
pop
lds
shlb
icebp
jle
fidivrs
cmpsb
push
testl
out
idiv
imul
test
xor
leave
mov
popa
mov
aam
or
push
mov
lret
add
cli
mov
xor
cld
xchg
or
dec
ja
ss
test
dec
push
xchg
xor
lcall
sbb
and
shll
out
add
ror
jae
jb
mov
adc
xchg
js
jns
jecxz
lret
insl
sub
jp
sbb
int
inc
clc
inc
scas
imul
int
test
fs
jl
sub
pop
shl
or
cmp
mov
add
fcoml
ja
sti
popa
push
dec
mov
mov
push
call
mov
push
pop
jmp
mov
inc
xchg
xor
cmpb
stos
sub
dec
xor
imul
mov
scas
sbb
sbb
sub
std
les
sbb
ret
push
and
xchg
test
xchg
or
mov
test
push
pop
cmpsb
std
push
push
mov
ss
cmovp
pusha
xchg
mull
ds
lret
out
lret
rcll
shrb
inc
lock
js
aam
insl
jno
mov
cmc
pusha
dec
adc
ret
and
arpl
dec
mov
loopne
dec
mov
iret
mov
imul
decl
pop
jp
mov
sub
addb
btr
and
addr16
add
mov
sub
mov
adc
xor
call
std
and
pushf
sbb
mov
out
and
ret
or
push
xchg
xorl
mov
adc
loope
cmp
jno
out
xor
stc
movsl
add
xchg
push
and
mov
leave
mov
xor
popf
lods
test
inc
inc
lods
dec
push
pushf
stc
push
mov
imul
cmp
outsb
repnz
icebp
push
pop
xchg
subb
or
push
mov
and
cltd
push
movsb
mov
dec
pmaxub
push
mov
out
fisttps
and
out
jg
push
mov
xchg
out
lret
cmp
push
popf
loop
mov
or
outsb
and
jl
jbe
ficomps
loopne
xor
ljmp
repnz
cmp
mov
int
popf
stos
jns
adc
mov
inc
out
pop
out
cmpsl
add
dec
sub
daa
clc
sbb
inc
and
sub
pop
pop
jns
add
and
or
jno
pop
sub
shlb
inc
dec
inc
xchg
negl
push
cli
ja
cld
add
in
dec
subb
xor
mov
pusha
notb
push
cmp
outsl
decl
lahf
sub
xchg
push
or
loop
mov
or
shrb
jmp
dec
rorl
or
inc
adc
jnp
or
or
fs
sarb
xor
mov
into
pop
push
andb
inc
jecxz
xlat
push
sbb
and
push
repnz
xchg
push
cmpl
push
mov
shrl
cmp
cmc
mov
jmp
cltd
scas
mov
jae
outsb
or
cmpl
pop
call
out
cld
jno
int3
imul
loope
add
mov
stos
sbb
and
hlt
dec
adc
into
sbb
xchg
ljmp
or
mov
pop
ret
cmpb
lock
mov
testl
pop
fisubs
adc
incl
add
sub
movsb
mov
push
arpl
gs
jne
lahf
or
xor
mov
sbb
and
fmulp
mov
jp
scas
aam
js
cltd
push
pop
jb
out
ret
cltd
rcr
jb
insl
std
or
cld
subb
test
lea
push
ret
imul
mov
jae
push
jno
xchg
mov
pop
jbe
in
xchg
mov
dec
popf
lea
popa
in
push
pop
fmull
hlt
sub
and
mov
xchg
cmp
ret
dec
add
xchg
leave
adc
nop
mov
xor
dec
pop
dec
push
fincstp
mov
xchg
add
mov
fdiv
shlb
leave
push
and
cmc
mov
mov
adc
aas
sbb
xlat
mov
lret
inc
jg
push
mov
push
cld
push
inc
pop
pushl
adc
je
je
add
loopne
dec
lods
stc
in
outsl
mov
jno
cld
jmp
mov
popa
jb
cmp
mov
iret
loop
add
cmpl
mov
cs
xchg
and
gs
aam
or
adc
fldt
mov
push
imul
inc
push
pop
xchg
or
or
js
sub
das
pop
cmp
dec
das
cltd
inc
inc
iret
pop
test
push
push
test
mov
mov
movsl
shlb
jp
cld
fsub
add
stc
or
icebp
xchg
pop
xchg
push
lcall
sub
cs
mov
mov
test
movsb
je
loopne
fs
out
clc
mov
lock
cli
jns
push
dec
stos
mov
or
or
ror
xchg
mov
pop
mov
pop
fadds
push
aaa
das
jo
mov
icebp
jle
mov
loopne
jae
decb
mov
xor
fcompl
mov
pop
loopne
loop
add
xor
jl
mov
dec
mov
js
or
dec
sbb
push
rcll
testl
inc
adc
inc
jb
add
in
dec
adc
lods
clc
out
mov
jmp
mov
repz
or
xor
insb
sub
and
fcomps
push
loop
sarl
jne
add
into
call
imul
mov
cld
cmp
adcb
xor
mov
bound
ret
enter
dec
decl
xor
mov
loop
jp
sub
add
ja
adc
mov
sub
mov
es
sub
aas
int3
xor
cmpsb
btc
push
sbb
aad
mov
inc
or
lret
pop
int
push
lock
int3
jae
adc
dec
fsubl
lods
inc
push
lahf
arpl
push
imul
or
mov
ret
add
add
cmp
insl
sti
out
jnp
repnz
mov
cmp
lret
adc
aam
andl
add
jo
sbbl
enter
sti
dec
popl
or
lods
push
lret
add
or
add
lahf
sbb
das
aam
inc
cmpsb
in
push
daa
mov
or
addr16
inc
fildll
popf
or
or
xlat
mov
mov
cmp
cmc
das
jb
mov
jecxz
leave
aad
dec
lods
or
sub
sbb
lret
imul
bound
arpl
movsl
sbb
test
popa
mov
jp
movsl
push
jl
clc
dec
push
push
loopne
mov
dec
movl
inc
fisttpl
xchg
insl
shrl
pop
in
fisubl
mov
xchg
pusha
inc
hlt
and
lds
and
cmpsl
pop
les
lcall
sub
leave
fwait
mov
push
dec
pop
xor
pop
push
nop
xchg
dec
insl
test
mov
adc
mov
mov
inc
mov
dec
stos
ljmp
mov
inc
push
fmuls
adc
test
bound
sbb
and
adc
cmp
bound
scas
hlt
sbb
popf
js
jl
inc
sbbb
mov
cmpb
loopne
mov
jnp
xchg
idiv
lret
sar
rclb
cmp
cmp
loope
pop
popf
xor
dec
pop
dec
jns
stos
mov
mov
mov
or
mov
aaa
hlt
mov
bound
add
mov
into
mov
repz
push
and
loope
jno
addr16
arpl
cmpsl
pop
shlb
mov
adc
mov
out
mov
mov
call
int
ja
jae
repz
icebp
or
dec
aad
outsl
xchg
cwtl
bound
shl
xchg
jl
inc
sbb
mov
pushf
push
and
jle
nop
rcl
cs
push
dec
out
inc
outsb
sti
sub
pop
mov
aas
scas
sahf
aam
mov
pop
cmp
and
sbb
aas
ret
bound
test
xlat
xchg
xchg
mov
das
loopne
adc
xchg
or
adcb
push
jo
ss
jns
faddl
call
lock
inc
mov
scas
jmp
ja
sbb
out
dec
add
arpl
mov
int
and
adc
jns
outsb
in
arpl
leave
in
mov
pusha
enter
xor
nop
xchg
mov
sahf
lods
xchg
jg
std
push
imul
pusha
push
dec
and
jge
mov
popf
xor
ret
iret
mov
xor
cmp
adc
in
jecxz
jnp
sbb
dec
jl
ja
mov
insb
jnp
add
into
data16
cmpsb
lret
dec
out
leave
jge
hlt
call
call
sbb
dec
xor
in
and
push
movsb
shll
push
xchg
adc
es
jg
int
push
scas
mov
mov
fldenv
dec
fadds
test
stos
loop
popa
xor
je
sbb
mov
push
or
xor
push
xchg
add
and
adc
jb
mov
mov
push
mov
lcall
lret
and
cmp
mov
aas
mov
pop
sub
outsl
stc
mov
sub
fldcw
leave
xlat
adc
loop
orb
adc
dec
mov
mov
ret
jecxz
lods
mov
xchg
push
negw
jge
push
pop
and
cmpsb
xchg
or
xchg
xchg
mov
fwait
iret
xchg
cmpsb
sbb
lret
xor
or
xor
mov
push
xor
adc
cwtl
enter
dec
mov
hlt
mov
movb
inc
outsl
and
outsb
fiadds
sti
sahf
rcrl
mov
loopne
enter
je
fmulp
sti
sbb
push
pop
lcall
xchg
inc
imul
stos
xor
out
and
shrl
mov
jle
aam
xchg
fcomp
sub
test
aaa
push
mov
bound
add
jmp
fdivrs
adc
or
xchg
or
and
bound
insb
xchg
cmp
fbstp
aam
or
lret
out
shlb
or
mov
xlat
xor
lret
or
adc
dec
call
std
cmpsb
mov
ret
inc
int
bnd
aad
test
data16
je
mov
mov
push
mov
xor
enter
add
test
imul
mov
aaa
inc
jg
rclb
mov
cmp
add
lds
dec
or
push
pop
pop
out
mov
mov
xorl
dec
cmpsb
sub
jo
mov
or
shl
rcrl
enter
out
mov
cmp
add
mov
test
jle
mov
dec
mov
push
dec
xlat
repz
pop
xor
cmpb
sbb
cwtl
cmpsl
push
in
mov
icebp
bnd
xchg
inc
daa
dec
jno
sub
dec
xchg
lret
xchg
jne
dec
sub
fdivp
fdivrs
xor
arpl
add
and
das
fs
cmpsl
mov
xchg
xchg
leave
mov
sbb
sti
shufps
jmp
setne
ja
xchg
fists
divl
fsubrl
dec
out
dec
pop
and
or
into
or
movsb
and
bound
mov
mov
sub
sbb
stos
lds
push
fs
hlt
int
paddd
jno
rol
xchg
roll
sbb
or
out
xchg
sbb
and
xchg
hlt
and
mov
lret
clc
lret
imul
jl
inc
or
scas
sbb
lcall
push
push
sbb
xor
push
rorl
pop
lahf
adc
xor
sub
je
xchg
jnp
add
mov
xchg
add
mov
fucomp
mov
sub
push
pop
mov
pushf
fs
mov
xchg
add
xlat
pop
arpl
jnp
xchg
pushw
stos
mov
out
in
push
mov
and
das
mov
std
sub
jl
daa
aas
dec
mov
mov
sbb
scas
out
jge
fcmovnb
lds
xor
mov
icebp
sbb
fcomp
mov
add
push
nop
pop
add
mov
mov
mov
or
jle
mov
xor
adcl
push
popf
aad
mov
jl
xchg
jmp
in
and
in
into
adc
mov
test
rcl
adc
push
mov
jb
or
ljmp
imul
movsb
jmp
enter
xor
scas
mov
pop
lods
and
adc
jno
lea
sahf
ret
lods
xorl
lock
fldenv
sbb
scas
mov
xor
add
popa
jge
lret
into
notb
das
sbb
scas
in
cmpl
inc
jns
popa
lods
dec
addr16
sarw
int
std
and
out
xchg
cmp
out
dec
dec
xor
cmpsb
add
adc
es
out
mov
clc
jg
and
repz
mov
push
push
xor
scas
iret
adc
in
push
popf
pop
mov
popf
sti
test
loopne
cmp
mov
push
ficomps
insb
mov
cmpsb
lret
jb
pop
sbb
pop
fs
sbb
xchg
sarb
mov
mov
popf
and
and
mov
adc
mov
ret
out
int
dec
mov
ret
imul
xchg
in
fs
std
lods
hlt
out
xchg
mov
push
movsb
repz
xor
daa
hlt
insb
lock
pop
mov
stos
cmp
lret
jmp
xchg
and
xor
cmp
cmp
hlt
cwtl
sbb
call
clc
or
xor
adc
jnp
cltd
sbb
inc
bound
adc
pop
inc
mov
or
les
cmp
shll
in
inc
and
subl
lret
pop
push
mov
iret
imul
lock
mov
popa
stos
aad
incl
mov
sub
out
lcall
test
int3
pop
iret
int
jns
lea
jo
addr16
cltd
push
cmpsl
out
insl
and
pop
jo
imul
fnstsw
adc
in
xor
fs
sub
fdivl
sbb
fistps
push
push
push
addl
jg
rcll
lret
cmpb
xchg
inc
jb
loope
pop
push
fnsave
rclb
add
sbb
icebp
lea
jl
pop
mov
mov
push
and
or
dec
mov
icebp
cvtps2pi
mov
rcll
lcall
pop
imul
hlt
andb
mov
sbb
add
pop
push
outsb
mov
or
and
aas
nop
fadds
add
mov
das
xor
jo
xchg
out
adc
sti
add
arpl
mov
sub
add
sbbb
stos
lret
xchg
in
adc
adc
fcmovb
addr16
bound
lcall
in
out
adc
xor
test
push
mov
aas
inc
mov
dec
xchg
mov
mov
loop
int
jno
fistpl
push
fstps
cld
in
push
jp
inc
fidivrs
push
dec
aam
pop
into
sub
pop
push
loop
popf
and
ds
sbb
xchg
push
fnstcw
dec
pop
mov
push
hlt
call
ljmp
and
imull
aas
sahf
testb
mov
mov
dec
cmp
das
sbb
pushl
es
xor
addr16
push
addl
dec
push
adc
mov
js
clc
inc
pop
das
pop
in
nop
addr16
movsb
mov
inc
add
fisttpll
xor
xchg
xor
out
cmp
popf
cmp
loop
scas
ds
out
loopne
or
push
pusha
add
inc
sbb
lcall
fmull
cmp
negl
jbe
cmp
popa
sub
in
or
and
adc
mov
or
or
mov
mov
scas
notb
fstl
into
sbb
adc
dec
mov
inc
push
mov
int
stc
jmp
scas
push
xchg
jl
shlb
ret
lods
lock
nop
in
xchg
sub
imul
fstps
rcll
loope
cs
pop
fcomip
cli
pop
xor
add
clc
dec
or
cltd
and
cs
cmpl
lods
test
cmp
or
adc
out
inc
push
addr16
mov
sbb
iret
lea
xchg
jmp
sar
cmp
push
mov
fisubrl
lret
lret
adc
out
fimuls
mov
sarb
jge
adc
sub
outsl
mov
jle
xor
jle
ret
out
push
and
into
push
and
stos
pop
cld
stos
test
push
in
and
mov
push
inc
stc
leave
cmp
add
push
outsb
dec
jmp
adcb
imul
inc
out
and
in
xor
in
call
cmpsl
mov
aam
inc
or
inc
nop
int3
jle
mov
xchg
mov
out
and
inc
push
add
sti
adc
pusha
mov
scas
cli
mov
push
inc
mov
xor
jecxz
shr
loope
xor
pusha
sti
inc
and
lods
mov
pop
fwait
mov
mov
dec
dec
mov
ss
add
ret
jb
outsl
insb
test
or
insb
sbb
cmp
mov
xchg
jo
test
or
dec
cmpsb
and
mov
mov
push
jmp
lock
or
or
test
or
scas
sbb
out
jmp
in
jb
and
xorb
loop
insl
sub
daa
repnz
adc
or
leave
addb
jmp
mov
gs
mov
cs
or
cmp
jmp
subl
cmpsl
mov
call
adc
fwait
sub
dec
and
xchg
mov
in
sub
hlt
sub
sbb
pop
and
test
and
jbe
stc
pop
dec
dec
jns
out
dec
shll
mov
cmp
push
sub
jmp
xchg
jo
out
popf
mov
enter
icebp
and
fildll
outsb
jge
adc
xlat
leave
xor
adc
imul
cmp
data16
inc
dec
lret
cltd
stc
push
xor
scas
popf
jo
push
push
sub
pop
scas
rol
sbb
xchg
xor
lahf
repnz
std
imul
dec
or
jb
or
lock
out
cmpsl
push
repnz
rcll
add
ror
pushf
and
int
mull
aad
clc
test
int3
sbb
sbb
sbb
outsb
inc
out
dec
pop
push
add
xchg
dec
or
cltd
xchg
mov
mov
mov
fs
loop
stos
lret
sbb
shlb
sub
adcb
cli
test
imul
jl
xchg
clc
inc
dec
lret
loopne
push
clc
jmp
mov
inc
les
xlat
jne
xchg
fistl
lock
iret
sbb
bound
fldenv
outsb
xchg
mov
call
adc
fdiv
and
mov
lock
xchg
fwait
adc
jne
pop
repnz
jle
pushf
mov
lods
pop
pop
jle
rorb
pop
sub
inc
enter
lahf
xor
mov
stos
cmp
js
into
int3
std
pop
push
pushf
and
movsl
add
mov
or
nop
mov
dec
cmpsl
push
fdivrs
xchg
popf
pop
sbb
out
loop,pt
imul
xor
jnp
test
mov
stos
cld
mov
ja
aas
icebp
jns
jg
fsts
outsb
and
repnz
mov
loopne
ret
sbb
loopne
mov
push
xor
push
pop
pop
add
jns
rcrl
popf
dec
push
into
pop
std
gs
sub
jnp
subl
inc
mov
outsl
jne
cld
inc
cwtl
pop
mov
xchg
pop
mov
inc
inc
out
cwtl
mov
enter
lock
mov
es
mov
and
mov
sbb
mov
es
lahf
int
sbb
mov
add
cld
imul
add
mov
or
inc
adc
mov
out
cmpsl
mov
push
xlat
ret
cmp
jmp
mov
adc
push
ljmp
xorl
push
cmp
scas
test
fmul
jnp
sti
cmp
push
jg
fnstenv
mov
sub
adcl
adc
cwtl
inc
cmp
add
stos
pop
push
add
cmp
stc
cmpsl
arpl
ret
arpl
dec
jle
fucomp
mov
or
jno
cmp
cltd
mov
out
mov
rorb
pop
sub
mov
mov
hlt
lret
or
jge
jb
xchg
mov
xchg
mov
fs
sbb
fs
lods
or
iret
std
push
adc
mov
loop
pop
enter
xlat
jns
push
repz
iret
dec
add
adc
xor
and
or
pop
xlat
cmp
cli
adc
xchg
sbb
pop
push
mov
das
push
lret
and
jmp
add
shlb
or
fwait
push
sbb
jae
dec
inc
psrad
cmp
cmp
cli
mov
loope
mov
jg
xorb
call
mov
ret
inc
sbb
fisttpll
cs
daa
in
test
repnz
test
xchg
das
into
inc
js
xor
js
lds
push
mov
push
jne
inc
sbb
sahf
push
pop
jp
fcmovnb
mov
mov
adc
mov
push
arpl
fdivrl
dec
ret
push
icebp
fwait
aaa
imul
cltd
cmpsl
push
push
ljmp
lds
lret
leave
add
push
ljmp
repz
or
iret
ljmp
cs
add
jnp
jb
mov
lock
mov
fdivs
sbb
call
sbb
ljmp
and
mov
bound
ja
sbb
pop
iret
lahf
inc
movsb
dec
mov
jmp
adc
cmp
aaa
decb
jp
xlat
mov
test
jno
push
test
ror
xchg
xor
sbb
dec
insl
pusha
and
pop
xlat
add
mov
mov
popa
dec
sub
fmulp
lods
push
cli
out
xchg
sub
or
lea
imul
mov
jl
bound
test
sbb
mov
adc
mov
mov
and
sbb
add
sbb
pop
clc
loop
add
and
jg
stc
and
push
cmp
aad
aam
in
fcompl
test
and
jl
scas
cmp
stc
lods
ljmp
jnp
cltd
mov
mov
leave
leave
mov
shrl
adc
mov
dec
jnp
mov
xlat
sbb
ret
sub
sbbb
jp
rorb
pop
stos
lahf
shll
icebp
adc
jo
dec
in
clc
and
mov
clc
fwait
xchg
push
mov
xor
mov
enter
adc
pushf
hlt
add
jg
add
mov
mov
mov
add
xchg
or
and
fildll
leave
add
call
xchg
in
and
shrb
xor
in
mov
std
add
fimuls
adc
jne
pop
cmpsl
mov
jmp
xor
cmp
outsl
push
fdivs
pop
mov
mov
arpl
cwtl
inc
push
icebp
sahf
out
rcll
stos
mov
cltd
jnp
pop
mov
xlat
push
or
or
push
jno
pop
or
ret
lea
adc
loopne
mov
add
or
cld
hlt
push
cltd
cmpsl
push
add
mov
test
leave
std
dec
aaa
mov
dec
inc
scas
add
mov
cmpsb
testb
jecxz
sbb
lret
fcoms
push
ret
xchg
ljmp
iret
xchg
pop
test
fcmovu
mov
mov
sarb
insl
arpl
cmp
mov
xchg
pusha
loop
stos
push
ficoms
pop
sub
add
stos
in
xchg
add
imul
push
in
push
dec
pop
shr
test
push
loop
ss
fcoms
imul
sbb
ror
cmp
cmp
push
mov
pop
sub
cmpl
addr16
insl
or
jge
mov
mov
adc
lds
jle
push
lahf
mov
mov
jmp
fdivr
pop
nop
sub
mov
outsl
add
movsb
add
clc
pop
and
bndstx
or
mov
stos
or
pop
arpl
mov
test
pop
dec
jle
out
in
iret
jae,pn
and
mov
sub
rcr
jne
adc
inc
loope
inc
pop
xor
push
mov
pop
mov
lret
repnz
xchg
aad
icebp
mov
jecxz
das
idivl
ss
sub
mov
jno
or
pop
push
mov
shlb
cmp
nop
mov
data16
push
jmp
inc
lret
ret
sub
cltd
stc
mov
fwait
sub
cmp
jae
stc
cld
push
mov
jl
je
cs
push
rorl
aaa
pop
stos
adc
jmp
mov
cltd
cmp
jbe
ja
xchg
push
jecxz
or
push
cmp
es
loop
insl
daa
add
push
xor
aas
xchg
jno
cmp
sub
repnz
cmp
pop
or
out
adc
or
mov
lret
push
ret
pop
mov
fdivrl
xchg
sub
leave
rol
add
fisttpl
test
std
popf
das
ja
addl
fcoms
pop
mov
jecxz
and
pop
xchg
iret
mov
dec
dec
mov
jg
jne
loope
fidivl
mov
popa
cmp
inc
sub
scas
mov
sbb
or
lods
mov
cli
push
jge
dec
mov
add
es
call
call
ljmp
in
and
mov
sub
jmp
xchg
adc
add
lret
movsb
adc
in
sbb
outsl
fistps
scas
push
push
or
adc
cmpsl
mov
inc
jg
mov
out
push
jns
lahf
pop
cmp
idivl
jo
incl
fs
mov
mov
add
fisubs
imul
stc
das
sbb
in
push
arpl
lock
jb
pusha
mov
lds
pop
mov
ret
inc
movsb
ret
push
mov
or
xor
testl
lea
add
xor
and
aam
addr16
clc
movsl
lret
or
icebp
add
icebp
lock
outsl
cmp
enter
js
into
sti
or
mov
das
loop
push
pop
loop
mov
arpl
mov
out
cmp
mov
inc
mov
jecxz
stos
cmp
pop
es
inc
cmc
repnz
mov
data16
pop
xchg
fsub
divl
and
jecxz
xchg
mov
sub
lret
sbb
das
js
xchg
inc
and
inc
sub
push
xchg
inc
addr16
or
lcall
js
push
mov
jecxz
lods
int3
cs
or
dec
push
pop
daa
es
bound
popf
dec
dec
shr
hlt
js
lock
cmp
scas
xchg
adc
shll
jbe
cmp
mov
mov
jge
push
inc
popf
les
sbb
into
jp
mov
leave
mov
rcr
or
and
adc
push
rcrl
dec
cmpsb
jnp
int
cmpsl
es
sub
xor
fisubs
pop
add
mov
mov
ret
xchg
push
out
mov
mov
enter
sti
lcall
mov
test
mov
ljmp
mov
outsb
add
repnz
lea
daa
test
lcall
inc
add
rcl
xchg
lea
push
mov
andb
or
push
jnp
jb
mov
adc
xor
mov
push
test
cli
in
jae
inc
xchg
shrb
dec
dec
sbb
lret
inc
fistpl
xor
mov
adc
adc
bound
cmpsl
mulb
push
push
testl
mov
mov
cmpsb
ljmp
std
pop
sub
or
mov
and
xchg
cmp
scas
fs
incl
mov
jp
add
cmc
je
out
pavgb
dec
popa
jno
orl
movsb
rorb
loopne
imulb
xchg
mov
jge
scas
insb
push
pop
std
jge
xchg
xor
mov
add
dec
jg
xor
dec
mov
xchg
and
sub
adc
inc
push
ret
sarb
xchg
and
adc
xrelease
ror
dec
xorb
mov
mov
outsl
pop
dec
cli
fnstsw
das
inc
add
stos
jg
scas
fs
imull
ljmp
xchg
cmp
aam
enter
mov
mov
mov
pop
nop
add
sub
stos
das
ficoml
test
jo
pushf
mov
enter
rorb
xchg
scas
xchg
jmp
inc
cmp
xor
idivl
pop
das
lahf
sub
jmp
or
inc
mov
arpl
stc
iret
loop
rcll
sbb
and
sub
dec
out
cmp
and
dec
jg
jno
jo
inc
mov
loope,pn
test
mov
movsb
or
xchg
inc
shr
icebp
fsubrl
fildll
lahf
or
push
movsl
scas
mov
push
push
sub
cld
push
jecxz
add
daa
mov
shlb
cld
gs
dec
jne
aaa
adc
inc
adc
cwtl
mov
fs
push
jle
scas
push
sub
stos
cwtl
add
sbb
xor
jno
add
sti
dec
xlat
aas
push
jg
inc
mov
out
cwtl
inc
rolb
xlat
lea
push
mov
push
inc
leave
das
and
xor
jo
jecxz
lret
lret
push
inc
into
mov
in
push
stos
out
imul
and
push
pusha
test
mov
stos
jnp
int
repnz
sbb
movsb
mov
shll
adc
cltd
push
mov
pop
jecxz
sub
cli
mov
cmc
xor
repz
pop
pop
jb
test
xchg
mov
test
rorb
mov
in
mov
movsl
iret
test
mull
xlat
inc
and
stos
sub
mov
jp
jmp
bnd
inc
fsts
hlt
dec
jecxz
sti
sub
fnstenv
pushf
mov
flds
xchg
fninit
dec
fdivrl
ret
hlt
filds
jnp
ficoms
mov
sub
ljmp
sbb
ss
je
stos
in
and
pushf
shl
sahf
pushf
xchg
bound
sbb
jmp
mov
dec
xor
xchg
xor
xor
xchg
movsl
add
in
sub
mov
in
inc
jbe
loop
lock
aas
loope
jl
inc
xor
push
in
jecxz
mov
xor
imul
or
xchg
insb
jp
cmp
aam
fstpt
inc
sbb
decl
stos
push
fisttpl
mov
pop
addr16
lods
decb
int3
jb
aas
sbb
sti
or
add
dec
shlb
pusha
jg
and
sbb
or
imul
mov
das
inc
xor
leave
adc
ds
fdivs
fcomps
sbb
and
push
icebp
push
lds
sub
popa
push
push
pushl
ljmp
push
cmpsb
je
test
jns
sbb
mov
cmp
push
idivb
ret
sub
mov
mov
int3
orb
or
xor
mov
mov
js
and
addr16
ret
xchg
xchg
mov
cli
sub
sbbl
movsb
and
cwtl
pop
pop
xchg
xchg
push
fists
cs
adc
ja
test
push
das
dec
pop
push
xchg
aas
jp
andl
jle
int3
sbb
fistpl
call
nop
xchg
aaa
push
jnp
nop
xchg
pusha
popf
leave
and
es
mov
sub
lret
jae
mov
hlt
fdivp
imul
les
int3
lahf
inc
cltd
or
gs
in
or
add
sbb
inc
xor
fsubrs
xchg
sub
aam
out
insb
cmc
outsb
inc
xchg
stos
cltd
nop
adc
push
jecxz
push
fisttpll
xchg
adc
fdiv
aaa
in
jecxz
sti
fwait
es
and
pop
or
gs
lahf
mov
inc
mov
lahf
shr
inc
adc
adc
cmpsl
inc
push
adc
adc
push
or
testb
sub
inc
dec
outsl
ror
subl
cmp
scas
je
repz
sarb
js
mov
clc
cs
pop
or
andb
inc
mov
mov
push
testl
les
daa
nop
repz
call
test
leave
mov
outsb
stos
add
jmp
sub
movsb
cmp
int
sbb
or
mov
push
aas
dec
aam
test
add
nop
pusha
and
es
dec
push
adc
cmpsl
pop
sbb
fisubrl
push
fnsave
shlb
lock
lds
or
push
into
cmp
dec
push
mov
jae
jle
jnp
aaa
pushf
sub
mov
aam
jns
hlt
adc
inc
push
and
popf
incl
mov
mov
mov
nop
jnp
inc
adc
movsl
sub
dec
cmp
pop
mov
pop
repnz
cmp
adc
jae
iret
add
scas
ljmp
call
sahf
shrl
cmp
push
daa
mov
lahf
imul
outsb
and
jle
xor
sbb
lret
jg
sub
add
jns
fsubr
cmpsl
jnp
and
xchg
jg
mov
leave
rcrl
xchg
mov
or
jmp
cmpsb
pop
sub
scas
imul
jge
bound
adc
jge
and
std
repz
dec
xchg
scas
andl
mov
icebp
jmp
popf
cmp
mov
add
mov
jg,pn
mov
pop
ss
sbb
lods
arpl
jns
ljmp
test
hlt
sbb
push
add
shr
push
dec
xlat
test
arpl
jl
push
jg
push
xchg
inc
adc
or
das
push
dec
xor
shlb
cmp
out
push
inc
xlat
dec
mov
pop
mov
shrl
jo
pop
rcrl
push
add
inc
jmp
rorl
js
arpl
lret
repnz
xor
or
sbb
dec
sbb
repz
or
pop
clc
in
fdivrl
iret
xchg
cmpsb
outsb
xor
fcoml
fcomps
in
ja
push
js
inc
test
shl
mov
nop
stos
mov
mov
pop
push
mov
cmpsl
push
add
fdivrl
mov
sbb
clc
mov
add
icebp
in
sahf
in
dec
cmpl
repz
je
xlat
cmpsl
call
scas
lea
jl
push
adc
cmp
pop
xor
mov
shll
push
sbb
dec
lret
adc
outsl
fsubr
dec
add
pop
mov
sbb
pop
addr16
test
cmpl
ljmp
push
add
ds
xlat
pop
adc
nop
mov
adc
sbb
scas
pushf
ljmp
arpl
push
cld
and
sbb
lret
push
or
shll
cmp
mov
sub
xchg
je
jnp
iret
xor
testl
and
pushf
lds
lahf
and
loopne
loope
and
cld
outsb
ret
inc
iret
imul
test
enter
fnstcw
es
leave
push
repnz
into
psubsw
hlt
pop
pop
mov
and
lea
call
push
xchg
fwait
mov
shll
cwtl
call
es
xlat
ds
dec
sbb
in
xchg
dec
andl
fistl
fisttpll
cmp
mov
jbe
mov
sub
dec
leave
add
lahf
xchg
nop
mul
ss
pop
shrb
bnd
stc
sub
mov
pusha
push
adc
pop
xchg
dec
sub
leave
xchg
mov
push
add
popa
loop
addb
movsl
mov
mov
leave
or
add
jle
pop
mov
fcomp
mov
fwait
ret
cmpsl
pop
fdivrl
sar
stc
jecxz
mov
arpl
xor
stc
ret
jmp
jmp
and
mov
xchg
and
sti
add
inc
gs
pop
mov
movsl
jmp
in
adc
jge
andl
mov
jle
jmp
outsl
daa
int3
xor
dec
push
inc
lcall
out
stos
iret
ja
dec
shll
add
shrl
push
fdivs
jo
adc
out
mov
jl
sarl
inc
push
cwtl
mov
add
inc
int3
lea
pusha
es
or
dec
sti
inc
pushf
dec
inc
pop
pop
es
xchg
scas
add
ss
add
lret
cmp
loop
cltd
movsb
call
push
push
push
cli
jb
push
es
jecxz
xor
fistpll
sbb
push
insl
and
mov
mov
in
fimull
and
jbe
xor
cmc
sub
out
cmpsl
aaa
sti
sub
sbb
scas
fwait
ret
dec
push
mul
mov
xchg
jbe
stos
xchg
scas
popf
cmc
call
sbb
mov
outsb
inc
xor
sub
ljmp
xchg
pop
sub
fidivs
add
mov
adc
or
arpl
inc
pop
xor
mov
insb
out
out
lock
and
or
rcrb
inc
and
loop
imul
push
cwtl
mov
cmpsl
loop
data16
pop
pop
pop
and
lea
cmp
jmp
jl
inc
sub
xor
mov
int
stc
mov
je
sub
insl
mov
xchg
jmp
jnp
aad
jb
push
cltd
inc
out
jne
xor
out
mov
xor
xchg
pop
and
out
sbb
insb
nop
xchg
lea
fnstsw
imul
cmp
pop
test
jb
pop
cmp
imul
shlb
mov
mov
sbb
loope
mov
or
insb
sub
andl
or
test
sti
cmp
push
daa
pushf
stos
adc
mov
xchg
mov
loope
popf
int
fs
insl
insl
loopne
add
cltd
dec
sbb
lea
out
inc
cmpl
pop
fcmovnu
outsb
jbe
rcrb
mov
mov
scas
mov
hlt
addl
cmp
pop
fwait
scas
pop
mov
out
mov
pop
mov
mov
dec
push
cwtl
push
xchg
cmp
mov
loop
ja
sbb
xor
mov
ds
out
xchg
sub
or
sub
push
cmpsl
pop
and
cmc
add
jnp
xchg
sub
push
mov
jle
adc
arpl
lcall
cmp
inc
push
xchg
shll
push
fidivs
sbb
popf
xchg
pop
dec
test
sbb
inc
push
testl
xorl
pop
mov
cmp
pop
inc
add
xlat
sbb
aam
lret
jo
adc
xor
add
sti
dec
push
push
or
lcall
pop
sub
cmp
hlt
clc
or
mov
sarl
in
and
es
xchg
push
out
xchg
mov
aam
sti
loopne
xor
std
dec
in
mov
int
out
sub
cmp
jbe
into
mov
cmp
push
jo
push
int
sub
fmul
fadds
pusha
xlat
lods
push
out
pop
add
mov
and
inc
shlb
popf
orl
cld
cld
jp
repz
ss
inc
inc
movsl
stos
or
mov
fcom
std
aam
out
mov
push
repz
mov
shlb
jae
daa
dec
sahf
mov
adc
stos
aaa
arpl
mov
cld
pop
push
adc
mov
gs
and
sbb
mov
ja
push
iret
out
push
dec
shrb
adc
adc
xor
lret
mov
je
pop
xchg
mov
ss
cltd
adc
jnp
aaa
and
and
and
jmp
xor
movsb
mov
cmpsb
std
cld
xchg
test
popf
mov
imul
lock
xlat
sbb
cmpsb
cmpsb
push
sbb
jne
dec
dec
sbb
shr
mov
adc
icebp
sbb
movsl
adc
pop
sub
xchg
in
inc
mov
das
mov
cli
pand
scas
outsb
pushf
loope
jno
add
rol
xor
ss
test
pop
movsb
mov
mov
inc
mov
push
jo
cs
sar
adc
aad
dec
and
cmp
xchg
jecxz
cld
les
notl
fimull
test
push
mov
jp
sbb
and
loop
sbb
test
repz
jg
jne
cmp
mov
cmp
dec
int3
and
cmp
cli
shll
xacquire
sbb
sub
jmp
idivl
mov
loope
cmc
jle
cmp
ficomps
loop
sarb
push
sti
hlt
imul
jg
xchg
sub
sbb
mov
push
imul
push
push
mov
cmp
into
inc
cmp
mov
fnsave
sub
jp
stos
nop
jp
outsl
fcomps
or
xchg
les
xorl
sbbb
dec
mov
dec
pusha
subb
aaa
jmp
iret
pop
pop
lock
add
and
jmp
imul
sarb
pop
push
pop
clc
out
mov
xor
adc
sbb
enter
loope
call
sub
pop
and
outsb
and
in
cmp
aas
out
jbe
inc
add
shr
cmp
fsubl
jnp
lock
inc
loop
xchg
adc
into
sbb
and
push
scas
xchg
bound
aam
fcomp
aas
adc
scas
lock
jns
aad
cltd
sbb
mov
add
pop
pop
xchg
and
add
or
adc
loopne
cmp
rorl
call
repz
out
xchg
in
push
xor
adc
sub
xchg
nop
bound
adcb
sub
adc
ss
imul
jo
mov
pushf
xchg
imul
dec
daa
dec
pop
leave
adc
xchg
nop
movsb
repz
test
mov
inc
test
arpl
jg
mov
pop
ja
leave
sub
fstps
dec
in
pop
mov
imul
jae
aad
xchg
sub
popf
jb
jecxz
popf
repz
cmp
add
in
rcrl
pop
scas
outsb
cmp
int3
lods
sbb
clc
cwtl
call
add
push
sbb
mov
push
and
sub
arpl
pop
jno
cmc
mov
jns
pop
aaa
sbb
mov
sub
adc
out
jge
mov
call
shr
fisubl
xchg
test
enter
mov
fcoml
pop
or
insl
sahf
cld
push
cmpsb
cmp
fiaddl
mov
out
cmp
cmp
pop
pop
fisubs
cmc
jl
repz
mov
ss
and
push
dec
repz
jp
xchg
push
lea
mov
xor
add
std
mov
aad
dec
and
adc
pop
adc
sti
and
fwait
jle
icebp
inc
jle
cmp
cmp
daa
cmpsl
lods
sarb
push
mov
add
jecxz
push
cmc
fwait
inc
sbb
inc
dec
sbb
add
mov
loope
data16
sbb
push
sbb
mov
push
addr16
sbb
cld
pop
xchg
outsb
xor
incb
loop
cmp
inc
mov
ja
and
repz
enter
lcall
rorb
mov
dec
add
int3
add
mov
ss
sahf
repnz
data16
mov
fistpl
imul
sbbl
jno
jecxz
cmc
scas
dec
popa
inc
mov
jl
incl
lods
push
aam
pop
data16
and
movsb
mov
mov
xchg
mov
scas
pop
leave
stc
stos
pop
pushl
aaa
lds
mov
push
or
xchg
test
outsb
jg
mov
mov
out
sbbb
pop
mov
push
les
xor
les
repz
out
mov
push
and
xor
test
das
dec
sahf
ret
xchg
xchg
in
push
aaa
in
xor
pop
in
mov
inc
sub
pop
int3
and
pop
out
out
xchg
testb
stos
test
jb
xor
inc
rcr
mov
gs
add
jle
push
or
adc
and
mov
mov
lahf
sbb
call
in
adcl
inc
push
sbb
test
repz
cmpsl
out
shl
add
fnstcw
scas
subb
adc
call
lcall
rolb
std
iret
aaa
mov
mov
or
insl
and
mov
in
insb
mov
pop
cmpl
shr
add
test
mov
cmc
loop
pop
xchg
lcall
sbb
testl
sbb
mov
das
sbb
stos
xor
mov
lock
sbb
out
adc
sub
pushf
dec
jb
or
cld
mov
push
or
cmpsl
push
jbe
test
ficoml
pusha
or
popa
cli
dec
icebp
aad
loope
push
inc
testl
leave
jns
mov
clc
mov
fmul
mov
loop
out
scas
xor
sub
mov
push
shrb
mov
loopne
jle
pop
hlt
push
adc
xor
test
push
lcall
popf
push
cmpsl
stos
add
je
lds
loopne
pop
loopne
data16
push
mov
adc
adc
adc
xchg
fsubl
pop
popf
add
or
jno
dec
or
les
add
shll
and
ja
lods
in
dec
nop
in
in
jmp
cmp
push
pop
xchg
shlb
popa
sbb
inc
bound
sbb
cmc
movsb
lock
or
dec
ficompl
adc
cld
sahf
pop
and
dec
pop
xchg
cld
test
sub
mov
and
and
es
and
out
xlat
mov
aas
fstps
sbb
cmp
push
cltd
and
jge
ds
sub
pop
and
cld
lcall
pop
dec
adc
call
add
fisubl
cmp
push
and
imul
fcomip
rolb
into
pop
scas
pop
repnz
std
aam
pop
js
jbe
daa
mov
sbb
fisubs
mov
pop
jb
cmp
aad
adc
in
xorb
inc
push
cltd
sarl
add
add
fld
add
les
rolb
negb
ja
dec
inc
rcl
push
push
inc
dec
daa
lcall
add
test
test
jns
test
push
sbb
cmpsl
ds
sbb
sub
or
inc
mov
insl
popf
sbb
inc
loope
stos
out
and
bnd
mull
orl
add
mov
xor
divb
insl
ljmp
inc
ss
xchg
call
in
outsl
push
movsb
mov
pusha
mov
mov
mov
cltd
mov
xor
das
jae
test
mov
loop
pop
fsubrl
cmpsb
mov
jecxz
fildll
pop
pusha
ds
icebp
add
lret
push
gs
lods
pop
fldcw
int
popa
push
and
sbb
fnsetpm(287
popf
pop
pop
arpl
add
dec
add
ret
iret
or
sub
inc
push
mov
pop
xorb
cltd
cwtl
push
jne
in
sub
fstp
xchg
repnz
repnz
jne
outsb
cmc
idivb
dec
repz
jae
cwtl
mov
aam
push
push
sub
pop
test
mov
mov
fdivrl
loop
sub
pusha
imul
fisttpll
popa
pop
bnd
or
mov
adcb
inc
je
ljmp
loope
pop
mov
pop
out
add
jl
lret
mov
je
xchg
xchg
inc
mov
fidivrl
dec
arpl
push
test
and
add
lret
scas
aad
fistps
and
jle
push
ret
mov
test
rdtsc
out
aaa
js
movsl
ret
fs
dec
rcrb
loopne
jbe
xlat
stos
mov
sahf
dec
in
jmp
jns
and
popa
cmpsl
cli
ljmp
push
fmull
ds
sahf
sub
outsl
inc
outsb
or
fnstenv
adc
jno
cmpsb
adc
shrb
pusha
fwait
or
pop
and
out
push
mov
js
push
ja
sbb
and
mov
loope
push
in
out
xor
add
or
push
lcall
xchg
pop
lods
ret
push
cmp
cld
fs
mov
mov
jne
rcrb
jb
xchg
and
cmpsl
test
lea
mov
stos
stc
or
mov
dec
shlb
lods
jae
lea
flds
out
lcall
pop
adc
add
adc
in
aad
bswap
push
loop
pop
lret
xchg
mov
test
icebp
rcrb
ja
cmp
fmuls
ret
aas
xchg
cmpsl
dec
arpl
in
out
push
rep
imul
orb
pusha
mov
les
rorl
mov
fnstcw
push
inc
popa
xchg
dec
xor
add
mov
imulb
rclb
pusha
pop
imul
js
xor
sti
adc
das
cmpsl
stos
sbb
push
sti
cmpsb
fwait
ds
add
cli
shrl
mov
push
or
push
mov
fwait
pusha
inc
lret
filds
xchg
sbb
mov
insl
lds
and
dec
test
mov
fbstp
push
adc
stos
add
lods
xchg
dec
xchg
lds
out
push
push
shll
pop
std
lret
jne
xor
adc
imul
cmpsb
push
adc
ljmp
dec
jl
add
push
push
pop
mov
ds
mov
jne
sub
pop
cmp
push
popf
iret
mov
mov
or
bound
and
sbb
test
mov
mov
insb
out
dec
pop
mov
rorb
push
push
jo
mov
imul
mov
jno
jo
xchg
or
bound
xlat
test
ljmp
js
js
js
or
push
fistps
pop
fwait
and
lret
push
ficoms
xor
bound
jge
push
xor
jnp
xchg
rcl
decl
pushf
mov
sub
gs
outsl
sub
lods
ret
jns
mov
push
mov
mov
iret
movb
add
das
inc
mov
xor
call
inc
add
add
enter
sub
cmp
pop
sub
aam
jo
or
outsb
stos
dec
dec
adc
loop
or
lcall
add
push
mov
xchg
imul
call
push
push
into
ja
pop
mov
sbb
roll
lcall
icebp
movsl
scas
lea
fnsave
int
daa
xor
xor
leave
inc
dec
xchg
jnp
adc
pop
fisttps
sbb
xchg
rol
push
xchg
add
out
cld
jns
xchg
and
or
dec
or
loopne
jnp
sbb
dec
sub
cmp
imull
cli
popf
inc
xchg
inc
mov
or
and
dec
jl
cmp
xor
dec
mov
mov
dec
mov
ret
fsubp
decl
jp
mov
stos
mov
cmp
mov
jecxz
pop
iret
jne
pushf
ja
push
out
fwait
in
leave
lods
fucom
mov
lret
ror
xor
stc
insb
cmpsb
jbe
mov
ja
pop
xor
ja
out
ficoms
inc
jmp
testl
lods
lcall
in
aaa
adc
or
jg
jle
outsl
loope
ret
jae
in
int3
adc
cmp
sub
mov
rclb
push
lret
fdivl
mov
movb
pop
push
lds
dec
insb
jmp
test
outsb
fdivrl
mov
clc
mov
les
pop
pop
add
xchg
sbb
jge
push
aaa
hlt
test
lcall
jecxz
ss
cmp
and
adc
push
or
jb
mov
cmp
mov
xor
fwait
pop
jo
push
cmpsl
or
ret
adc
or
aam
mov
push
sub
test
cmp
clc
mov
fdiv
bound
mov
cmc
sub
out
loop
mov
dec
loope
ret
ficoms
mov
outsl
inc
jnp
jae
jecxz
jp
inc
push
and
cmpsl
dec
push
jg
mov
push
out
xchg
in
sub
imul
add
push
pop
jnp
loopne
pop
lods
jae
fs
out
inc
or
push
out
in
mov
lods
jmp
mov
dec
cmp
jge
dec
or
mov
mov
jecxz
test
mov
cmp
xor
fs
fidivrl
mov
sbb
jmp
sarl
imul
jne
xor
ret
xor
pushf
lahf
xlat
mov
inc
inc
fwait
or
adc
push
jnp
movsl
decb
jne
test
xor
shl
sbb
lcall
shl
jne
notl
pushf
adc
mov
jmp
leave
shlb
insl
jp
insb
je
getsec
sbb
mov
scas
loopne
dec
fisubl
pop
push
xchg
jae
and
or
jno
fwait
mov
add
mov
mov
stc
jnp
insb
mov
and
sti
xor
cmp
pop
aad
jecxz
jmp
loop
adc
insb
stos
nop
mov
inc
push
lret
ja
repz
sbb
or
inc
aam
jb
jbe
dec
and
inc
dec
inc
leave
push
adc
push
adc
xchg
mov
and
pop
or
inc
subb
mov
in
mov
test
aad
push
adc
dec
repz
xor
dec
insb
lcall
repz
xchg
cmpsl
loope
cmp
mov
bound
pop
sbb
mov
and
mov
and
or
xor
push
push
imul
mov
push
pop
insl
xchg
add
cmpsl
mov
push
stc
pop
push
sub
add
repz
sub
sahf
cmp
sbb
xchg
arpl
inc
imull
or
jmp
xor
cmp
ljmp
fs
les
ja
fwait
bound
mov
shrb
jo
divb
stos
out
mov
mov
mov
cmp
dec
pushf
shll
imul
dec
mov
ss
fistpl
lcall
mov
cmp
push
fisttpl
push
sbb
je
adc
fidivrs
and
add
xlat
lods
and
test
or
xchg
insb
cmp
hlt
xorb
sub
or
stos
popf
ret
mov
dec
std
inc
sbb
mov
sub
shr
mov
int3
cltd
dec
fbld
repnz
lea
testl
aaa
mov
testb
jge
ret
mov
jnp
std
clc
int
shrd
mov
mov
in
pop
or
or
push
sbb
insl
mov
push
mov
jecxz
or
lcall
pushf
in
mov
mov
ss
loope
outsb
leave
mov
adc
in
xor
push
fcomp
jl
ret
jmp
jge
fwait
pop
out
and
sbb
out
mov
or
cmc
lods
mov
sbb
pop
adc
pusha
jb
mov
dec
stc
popa
fucomi
movsb
mov
push
popa
out
fistpll
test
test
popa
call
sub
sub
push
sbb
xchg
gs
repz
lahf
into
mov
or
mov
movsl
rol
sarb
mov
cmpl
adc
shrl
xchg
add
mov
pop
ja
test
mov
lods
sahf
xchg
jo
mov
mov
rcrb
mov
jmp
loopne
jge
sti
xchg
sbb
inc
ss
inc
push
push
repz
addr16
mov
clc
cmp
jl
orb
loopne
add
mov
jno
xchg
shr
sbb
xchg
xor
and
lcall
mov
repz
cltd
arpl
test
jge
xchg
je
inc
sub
movsl
and
and
loop
out
testb
xor
jge
xor
addb
pusha
sbb
or
enter
leave
or
ljmp
ss
and
or
adc
ja
fiaddl
inc
scas
mov
push
push
mov
adc
popf
aas
shr
cmp
test
inc
bound
mov
fnsave
cmp
mov
xor
scas
mov
fsts
pop
shlb
dec
jle
mov
push
stc
jl
pop
fucomp
stos
fcmove
outsl
ss
fs
sub
inc
sub
pop
repz
sbb
dec
das
or
sub
push
cmp
xor
mov
clc
dec
cmp
scas
fs
xor
lahf
sub
inc
fistpll
jmp
aaa
fisubs
in
bound
movsl
aam
dec
inc
sar
cltd
push
sub
imul
rorl
jmp
scas
mov
xor
ret
lcall
push
push
popf
inc
test
dec
fwait
mov
xchg
imul
stc
dec
mov
mov
lods
pop
xlat
inc
imul
and
xor
fisubl
add
in
jnp
repnz
cwtl
mov
xor
mov
sub
add
fucompp
cltd
aam
xchg
fdivl
xchg
outsl
lds
add
sahf
or
sbb
adc
mov
ds
ss
jp
and
mov
xor
in
mov
mov
pop
mov
icebp
inc
out
adc
cs
inc
cltd
sbb
jle
rorb
cmpsb
or
push
pop
adc
pop
sub
xor
sbb
push
insl
lret
in
sbb
into
mov
stc
cmpsl
mov
mov
pusha
add
and
inc
or
dec
fists
or
mov
std
leave
negb
and
jge
mov
add
mov
mov
xor
data16
cwtl
jecxz
inc
pop
cli
cmp
push
out
cmp
xlat
xchg
mov
aaa
jb
outsb
mov
fnsave
push
jne
stos
xchg
jo
std
or
lods
fdivrl
xor
pusha
outsl
notb
ja
sub
xor
es
mov
in
and
mov
clc
xchg
jno
clc
xor
test
mov
sbb
and
scas
mov
mov
xlat
hlt
pop
jbe
dec
in
push
sbb
sub
cmp
nop
lret
je
fld
shll
jmp
fs
gs
add
loope
fsubs
mov
in
leave
data16
mov
pop
mov
sbb
popa
mov
push
aas
aam
pop
daa
into
addl
pop
movsl
in
cmp
pop
mov
mov
adc
mov
add
hlt
and
ret
icebp
jecxz
dec
jns
fidivs
or
insl
cmc
lock
adc
jle
push
leave
cmp
loop
stc
or
and
lcall
push
cmc
notb
fsubl
mov
sbb
cmpsl
addr16
out
mov
frstor
xchg
sbb
xchg
hlt
pop
xchg
mov
into
sub
mov
dec
lds
in
sub
lret
xchg
mov
jne
pop
jecxz
or
push
pop
jmp
pop
or
mov
cs
mov
lret
test
push
iret
dec
shl
xor
loop
pop
jb
sub
jge
mov
fldcw
add
imul
adc
mov
inc
shrl
outsb
pop
add
jnp
mov
or
repnz
imul
stc
scas
insl
aad
add
inc
stos
sbb
adc
add
xor
xor
jb
sarl
int
mov
ja
les
xorb
mov
and
sbb
pop
aaa
aad
imul
popa
mov
test
test
pop
add
xchg
loope
fdivrs
fstpl
das
aad
pop
lea
xor
add
sub
sti
loop
xchg
fdivrs
push
es
and
mov
repnz
std
int
mov
cmc
pop
cmp
repz
and
xor
hlt
xchg
lahf
mov
andb
arpl
add
mov
out
mov
fwait
or
mov
hlt
push
mov
push
add
dec
adc
in
sub
xor
enter
pop
sub
jne
xchg
mov
movsl
dec
addr16
fists
xor
dec
hlt
das
test
xor
sub
add
test
mov
stos
mov
popa
into
mov
ror
adc
and
insb
jge
push
dec
les
mov
int3
mov
push
mov
jle
or
scas
push
out
push
es
dec
nop
jg
fistl
stos
sbb
jo
cmpb
sub
cmc
addr16
mov
sahf
and
shll
sbb
or
pop
arpl
cltd
sar
sbb
sbb
fadd
shlb
push
cmp
out
out
testl
jle
in
ljmp
je
data16
mov
enter
and
push
ljmp
in
mov
cld
es
int
imul
fs
mov
inc
fsubs
test
xchg
jnp
jg
mov
loop
adc
jle
cld
jg
fwait
enter
jecxz
xor
cmp
aam
pop
xchg
out
bound
test
jle
push
cmp
jle
dec
cmp
mov
and
iret
shlb
in
lds
mov
mov
pop
jno
push
jbe
jmp
in
bound
jae
mov
and
aas
xor
call
add
andl
lods
inc
mov
cmp
mov
cmc
cld
and
pop
adc
xchg
cmp
shll
les
fsubr
sti
sub
ja
xchg
outsl
or
mov
mov
jg
hlt
dec
insl
add
sbb
fs
outsb
jns
push
adc
push
mov
and
decl
pop
adc
in
out
or
add
cmc
cmp
imul
cmp
sub
not
pop
sbb
repnz
dec
pop
xchg
divl
sub
jns
sarb
mov
in
mov
clc
popf
gs
or
pushl
jl
test
imul
imul
inc
xchg
fadds
clc
and
rclb
test
xor
shrb
and
fwait
repz
push
mov
pop
js
gs
popf
xlat
xor
xor
jne
das
test
push
add
adc
mov
dec
dec
sbb
add
mov
add
add
test
xor
out
adc
and
pop
xchg
rorb
jge
sbbb
popf
aad
or
aad
call
jnp
and
cmp
sbb
add
push
xlat
lcall
mov
pop
add
call
lcall
test
nop
fwait
pusha
cld
xor
sub
xchg
lcall
fiadds
cli
mov
add
out
leave
sarl
cmpsb
jnp
subl
mov
cmpsl
push
fisubl
mov
mov
cmp
mov
out
sbb
lcall
ljmp
notb
aad
dec
cmp
adc
icebp
push
fdiv
andl
pushf
xchg
fwait
adc
sub
adcb
jp
mov
xchg
cmp
and
xchg
push
popf
push
sbb
fsubs
mov
pop
pop
hlt
cli
and
gs
testb
add
adc
xchg
inc
out
lods
imul
mov
mov
sahf
out
addl
fidivl
mov
stc
nop
dec
rorb
push
addl
popa
daa
leave
and
inc
sub
sub
and
fcompl
fists
out
mov
insl
jmp
push
and
loop
jg
lds
cmp
cwtl
inc
test
xor
div
inc
ret
jae
xchg
pushf
push
xor
mov
into
in
bound
pop
ja
pop
sub
dec
lcall
ja
pop
sub
cld
adc
in
dec
inc
stos
fmuls
pop
getsec
je
inc
cmp
pop
dec
mov
jns
sbb
lods
xchg
jae
lahf
jns
push
xor
out
push
iret
xchg
sbb
insl
inc
rorb
mov
repnz
test
push
sub
jge
ss
out
or
insb
inc
sbb
mov
faddp
push
jo
mov
insb
mov
dec
jp
push
shl
mov
push
lahf
sbb
inc
add
outsl
int
jge
inc
pop
and
lds
or
call
pop
sub
mov
xlat
icebp
or
in
dec
aam
jbe
pop
fdivp
sbb
loopne
imul
cmp
mov
cmc
lret
fs
out
sbb
aad
in
and
aas
push
sti
push
cli
adc
push
icebp
adc
push
and
pop
out
and
sahf
xor
je
fcoml
xor
stos
ja
fidivs
loopne
or
pop
inc
insl
data16
or
push
xor
test
and
sub
push
out
push
mov
enter
jle
aaa
loopne
mov
mov
push
or
aaa
cmp
or
cltd
or
pusha
mov
jne
int
xchg
clc
loop
cmp
adc
pop
sub
inc
dec
lods
mov
je
cmp
cmp
daa
or
sub
divl
popa
pop
repz
push
xchg
mov
imul
aam
xor
jno
cmp
xor
lahf
and
cwtl
cmp
push
lods
push
adc
adc
sbb
pop
jnp
dec
je
cmpsb
sub
pop
xchg
or
orps
or
imul
ret
sub
rcrl
mov
sarl
lds
push
mov
lahf
dec
mov
ds
mov
outsb
lods
jns
pop
sbb
push
loopne
cmp
pop
lea
icebp
jge
icebp
cmp
lret
call
stos
sbb
or
xor
dec
cs
fst
or
jecxz
sub
sahf
insl
shr
inc
or
cmp
test
xor
pop
mov
add
xor
cmp
inc
inc
sub
addr16
out
out
jne
inc
mov
stos
ds
jae
in
test
data16
outsl
js
pusha
in
lods
pop
out
ret
jne
mov
in
dec
inc
mov
cvtps2pd
push
and
mov
stos
dec
pusha
adc
xchg
and
popf
push
arpl
jno
sbbl
cmp
lods
outsl
rorl
push
adc
jbe
lods
mov
push
xor
inc
xlat
fmuls
lods
push
cmc
adc
sub
push
ss
imul
xchg
add
arpl
jae
xchg
lret
rclb
mov
out
mov
xchg
mov
fnstcw
faddl
dec
xor
shlb
int
jmp
add
or
xor
push
add
je
inc
xchg
lods
pushf
pop
push
shll
cmpsl
repnz
lock
int
mov
adc
out
dec
mov
xor
in
popl
test
js
ficoml
dec
out
lret
mov
int
jns
mov
inc
lcall
adc
sbb
mov
lock
int3
mov
push
cwtl
jb
sbb
push
push
leave
jmp
and
mov
scas
dec
test
lock
fiadds
dec
mov
jnp
sbb
or
pop
outsl
shrl
mov
xorl
adc
imul
loopne
lret
ret
sub
into
push
dec
and
inc
dec
in
add
xchg
push
xor
mov
jo
sbb
lret
ja
pop
mov
stc
loop
ss
and
fiadds
out
adc
adc
xor
mov
xchg
push
cmpsb
cmp
mov
sub
clc
mov
inc
hlt
jmp
bsr
addb
adc
xchg
mov
mov
jnp
test
and
ljmp
lods
xchg
pop
xchg
lea
sti
test
mov
mov
jmp
add
jg
ficoml
outsl
bound
and
pop
mov
and
arpl
mov
mov
push
loopne
xor
ss
aaa
adc
xor
sub
inc
sub
push
mov
or
addr16
mov
aas
sub
inc
pop
je
cmpsl
mov
pop
mov
lcall
inc
jge
push
aad
shrl
ja
push
decl
addb
add
mov
adc
push
and
test
pop
das
fs
add
sub
dec
add
test
ficompl
inc
pop
mov
popf
dec
cmp
xor
pop
loop
mov
movsb
and
iret
mov
lcall
mov
push
das
push
cmp
xchg
inc
and
mov
inc
repnz
sub
xor
cmpsl
std
or
shlb
mov
mov
xor
adc
pusha
mov
xlat
mov
lock
sub
xor
cmp
inc
stc
pop
inc
fxch
xorl
and
xchg
mov
out
data16
ret
out
lods
arpl
cmp
dec
lock
filds
insb
inc
sub
sub
mov
sti
in
mov
cmp
imul
imul
int
jb
lods
pop
push
mov
and
mov
jl
cmpsl
clc
sub
lock
ljmp
lds
sbb
add
sbb
loope
sti
test
inc
movsl
insb
and
lret
inc
scas
mov
pop
xor
xor
mov
add
xor
or
repz
sbb
inc
rolb
xchg
aas
test
xorl
adcb
pushf
ja
or
inc
pop
ja
popa
aas
aaa
rcl
mov
out
ret
out
enter
sub
xchg
aas
icebp
mov
adc
mov
shlb
mov
in
out
loopne
pop
jmp
add
pop
cmp
in
lret
mov
mov
fidivs
push
xchg
add
inc
mov
jo
test
nop
jo
mov
dec
mov
push
mov
add
sub
cli
pop
mov
sub
cmp
and
jmp
mov
cmp
sahf
andb
addr16
ret
jne
aam
sbb
sub
sbb
sub
jge
ds
fidivl
dec
inc
add
mov
push
mov
imul
jns
scas
mov
hlt
inc
lds
icebp
push
cld
mov
inc
mov
repz
dec
xor
push
stos
fmull
jg
popf
xor
icebp
fstps
ja
sub
sub
jge
mov
and
xchg
jmp
pop
mov
jb
sbb
test
arpl
pop
cmpsl
or
add
jl
int
nop
out
cmpsb
mov
mov
sbb
inc
out
adc
jmp
in
inc
xchg
xchg
fldcw
in
test
xchg
xchg
bound
add
hlt
and
xchg
mov
lret
test
rcll
sbb
inc
dec
mov
sti
pop
pop
adc
shll
mov
sub
or
stos
pop
rorb
add
repz
lahf
fstl
icebp
mov
push
jns
push
mov
popa
hlt
popa
cmp
cmp
sub
mov
xchg
cmp
sub
cmc
xor
out
or
in
xor
mov
arpl
pop
dec
mov
sbb
aas
xchg
rcll
or
xchg
insb
sti
aaa
mov
mov
int
pop
pop
stc
pop
add
aam
mov
or
shlb
jb
sbb
call
popa
mov
jmp
adc
fs
push
repz
data16
xor
mov
cmpl
and
je
stc
sbb
cmpsb
aas
cwtl
pop
xchg
sbbb
dec
pop
pop
scas
nop
mov
xchg
imul
mov
sbb
ret
call
fwait
cmp
inc
out
mov
js
aaa
mov
pop
jge
lret
mov
fdivrs
and
jnp
dec
inc
inc
xchg
add
movups
and
mov
daa
aas
stos
jmp
jno
int
xor
sub
lcall
cmp
in
cmpsb
ficomps
in
adc
sub
out
adc
push
and
addr16
jae
imul
ret
enter
mov
inc
jecxz
movb
pop
std
push
lds
and
cmp
mov
enter
int3
adc
sbb
xchg
dec
adc
cmp
jo
pop
mov
xchg
or
sub
out
cmp
movsl
xchg
mov
inc
lret
stos
jecxz
mov
add
cmpsl
js
je
jp
lock
insb
mov
xor
call
cli
repz
adc
pushf
lret
movsl
imul
fisttpll
or
jl
movsl
and
cmpsb
enter
pop
clc
call
add
and
test
xchg
iret
cmp
iret
popa
sarb
hlt
mov
or
test
adc
gs
leave
jne
fsincos
sbb
pop
mov
mov
push
ljmp
jmp
stos
add
add
cld
outsb
mov
dec
int
imul
mov
cmp
inc
and
and
lea
jge
shrb
jle
adc
es
jmp
dec
repz
xor
es
and
movsb
sarb
mov
out
adc
jmp
sbb
push
fsts
outsb
mov
cmp
add
mov
ljmp
xchg
call
mov
lahf
loop
or
fdiv
mov
enter
sbb
sahf
stos
testb
xor
pop
or
jge
adc
adc
jl
in
xchg
mov
mov
cmpb
pop
inc
dec
mov
mov
shrb
movsb
pushf
push
cmc
push
stc
sti
or
lahf
sbb
mov
scas
repnz
icebp
inc
mov
dec
fisubs
jp
jl
mov
jnp
cld
fisttpll
xchg
imul
mov
gs
sub
out
pop
into
addl
fisttpl
pop
jl
jne
jbe
mov
sub
dec
or
push
add
lods
mov
rcrl
mov
loop
dec
out
pop
hlt
stc
lcall
and
stc
xor
inc
xor
test
xchg
jg
cmp
ja
fbld
outsb
push
xor
lcall
repnz
and
sbb
pop
jne
fs
mov
lret
xor
out
xchg
adc
rclb
mov
sahf
sbb
add
add
pop
xchg
mov
negl
or
mov
dec
lret
loop
push
inc
lea
pushf
xor
add
push
mov
into
cmp
push
xchg
cmp
sbb
or
ret
jns
sbb
fcoml
push
cmp
push
dec
wbinvd
push
imul
xchg
arpl
add
movsl
xor
sub
fistl
cmpsb
out
mov
add
lods
nop
sub
inc
cmp
fs
into
popf
lahf
xchg
popa
sar
jne
push
iret
or
mov
fwait
dec
xor
repz
aam
dec
adc
movsb
lret
loopne
or
inc
nop
mov
inc
jns
insb
movsb
jmp
pop
shlb
roll
add
sbb
dec
push
pop
mov
rcrl
lock
or
sbb
inc
or
lret
hlt
inc
out
jle,pn
pop
call
jmp
data16
jns
xor
add
insl
inc
xchg
adc
adc
fcoms
pusha
jbe
int
adcb
jecxz
test
adc
movb
push
dec
jbe
les
in
or
ja
jmp
mov
insb
or
cmp
rcll
push
jae
jge
mov
enter
jnp
gs
dec
pop
jge
pushf
add
push
test
outsl
mov
sub
mov
bound
jg
fstpt
testl
cmp
call
icebp
repz
pmullw
loop
mov
test
dec
xor
jle
xchg
sbb
mov
add
daa
stos
sub
inc
xchg
test
xchg
push
fnstcw
mov
mov
movsb
sub
fmuls
mov
cmovp
mov
or
fsubl
lea
loop
push
addr16
cmp
lods
mov
dec
dec
dec
mov
mov
xchg
es
bound
iret
dec
imul
fadds
or
mov
rorb
mov
popw
adc
clc
aaa
or
dec
mov
rcr
add
cld
lods
push
clc
push
incb
sahf
add
jl
movsl
testb
lret
outsb
dec
jecxz
cmp
cltd
inc
loop
jl
xchg
fbstp
sbb
mov
shl
push
sub
shlb
ret
into
or
mov
ret
sbb
pmovmskb
sub
imul
inc
sbb
sub
push
xor
stos
cltd
movsl
pop
mov
arpl
mov
xchg
xchg
cmp
test
insb
cmp
loop
jl
jne
xlat
lods
or
sub
mov
xchg
imul
cmp
imul
and
repnz
je
imul
inc
dec
sub
flds
pop
cmpsb
fiadds
cmp
pushf
dec
inc
xlat
dec
loopne
push
divl
out
sahf
xchg
mov
mov
loopne
inc
repnz
mov
inc
pop
in
ret
xchg
xor
cli
repnz
pop
fisubrs
mov
int3
sub
daa
rcrb
xorl
rcrb
nop
sbb
adc
je
movsl
fcom
ud1
dec
mov
lahf
test
or
xchg
add
lahf
push
sbb
pop
mov
mov
dec
push
cwtl
xor
in
mov
js
es
sbb
mov
xor
adc
jle
xchg
fists
jge
jbe
rcrb
mov
popa
enter
jnp
icebp
les
pusha
jo
int
pop
loopne
sahf
xor
stos
ret
push
mov
pop
xchg
mov
ja
cmc
jno
dec
dec
or
add
pop
cltd
cltd
pushf
adc
push
inc
pop
inc
and
fcmovnbe
mov
aaa
dec
jl
fwait
lock
xchg
and
cmp
repnz
movsl
xchg
adc
js
sub
fst
cmp
test
ret
hlt
or
adc
pop
fwait
cmp
int
mov
shlb
stos
jmp
imul
cmp
xlat
into
pop
dec
push
jmp
test
fwait
push
insb
inc
jmp
in
inc
mov
mov
in
mov
dec
mov
into
repnz
jns
xor
jne
jnp
push
out
push
xchg
lret
adc
push
mov
push
mov
xor
sbb
lds
mov
jbe
pop
imul
filds
mov
sub
negb
cmp
pop
pop
pop
lock
mov
cmp
cmp
mov
lret
aam
mov
mov
sub
and
jae
or
sbb
scas
mov
jg
sub
sub
pusha
sahf
lock
mov
lods
js
cli
aaa
push
xchg
movsl
inc
outsl
cmc
pop
pop
fwait
pop
ljmp
xchg
jmp
pop
inc
xchg
push
fs
cmp
inc
jno
cmp
pop
mov
inc
xchg
mov
or
sbb
xor
enter
imul
xchg
and
add
inc
int
outsl
fisubl
sbb
cmpb
adc
cmp
dec
insl
or
cmpsl
xchg
lcall
push
pop
mov
popa
std
or
repz
inc
pop
arpl
xchg
sbb
dec
shrl
mov
jbe
sbbl
cmpsl
inc
loop
ret
test
shr
dec
xlat
jecxz
mov
divb
sub
mov
sbb
ret
call
shrl
sub
push
lock
and
cwtl
mov
xor
push
pop
add
mov
dec
xchg
andb
cmp
xchg
cmp
cs
dec
repz
popa
iret
fmuls
mov
mov
xchg
cs
inc
cmp
cltd
cmpsb
iret
aam
or
call
mov
or
jae
and
les
pop
sahf
mov
loop
mov
xchg
add
int3
sti
sti
adc
push
cmpb
or
mov
dec
pop
add
push
popf
call
outsl
xchg
jns
loope
call
movsl
xor
jg
xlat
lds
jle
aaa
mov
insb
mov
sar
scas
jnp
adc
loopne
movsl
add
mov
pop
in
pop
orb
pushf
lods
pop
add
repnz
das
mov
cli
shlb
movsl
in
dec
negl
nop
cmpsl
sbb
call
xchg
mov
scas
cli
inc
push
pop
ljmp
or
fisubrs
mov
iret
xchg
lds
fnstsw
fsubrs
fdivl
xor
adc
sbb
int
call
dec
sbb
ljmp
push
jne
push
adc
lea
pop
scas
mov
leave
popf
aad
sub
idivl
in
lahf
push
arpl
inc
and
sti
xchg
inc
into
pop
cmp
movsb
loop
test
lea
pop
rcl
cmpsl
adcb
cmp
sub
aad
loopne
cmp
sahf
sbb
imul
sbb
stos
insl
add
push
and
or
insl
movsb
test
push
push
mov
gs
and
test
mov
call
pop
pop
sub
inc
arpl
push
mov
fidivrs
push
in
add
test
in
cmpsl
jle
and
in
movsl
xchg
pop
cmp
cltd
scas
daa
jecxz
imul
mov
int3
dec
sbbl
cmc
mov
lods
sbb
rorl
and
test
das
test
sbb
cs
lcall
or
in
fdivrl
cmp
adc
fisttps
cmpl
test
call
jnp
popf
lret
adc
cmp
repnz
sbb
mov
sub
sub
push
or
mov
and
mov
cltd
iret
inc
push
push
repnz
jecxz
xchg
or
xor
and
xchg
aaa
and
fcmove
pop
mov
loope
test
xchg
xchg
stos
sahf
xlat
mov
into
ljmp
or
flds
xor
ret
pop
push
cld
add
cld
inc
xchg
aas
nop
out
jecxz
dec
int3
lcall
clc
ljmp
leave
sub
add
in
mov
xor
cmp
cmp
into
adc
inc
jne
mov
jb
cwtl
or
jge,pn
fadd
arpl
aam
push
push
push
fmul
jns
mov
add
ss
inc
push
adc
insl
shl
add
pusha
out
xchg
stc
mov
inc
cmp
jecxz
pop
int
ffreep
sub
jae
data16
loopne
test
dec
pusha
daa
sub
jae
js
dec
les
data16
ret
js
int
or
adc
adc
mov
sub
into
int3
mov
adc
out
mov
in
pop
cmp
hlt
xchg
fisubs
aas
jb
mov
mov
stos
iret
iret
fstpt
push
mov
ja
xor
movsb
stc
enter
addl
adc
imul
lcall
arpl
faddp
push
inc
in
mov
out
lods
loop
add
stos
adc
inc
stc
cld
cmp
pusha
movsb
dec
fistpll
out
gs
cltd
mov
inc
and
das
jecxz
cmp
pop
cmc
icebp
mov
mov
cli
push
jg
and
fiadds
cmpsb
jae
and
cmp
lret
shlb
and
xchg
jge
pop
cmpsl
push
pop
push
or
push
hlt
sub
xor
mov
cmc
sub
mov
dec
push
cmp
cmp
jns
and
lea
ljmp
aaa
push
aam
sub
jbe
fadds
leave
test
stos
jbe
sub
aaa
push
dec
mov
pop
pushf
jbe
repz
jecxz
addr16
pop
pushf
sub
mov
xor
jno
rorb
or
mov
push
iret
xor
pusha
push
sbb
inc
sub
jecxz
into
dec
mov
clc
fcmovne
mov
mov
shll
xor
pop
mov
mov
shll
mov
adc
jbe
pushf
pop
mov
in
jge
adc
pop
ret
dec
add
mov
cld
jae
add
and
fstpt
jmp
mov
outsl
pop
pop
fidivl
lods
cwtl
adcb
rcr
dec
jp
xchg
das
xor
mov
ja
sub
cmp
jb
xchg
jb
flds
sbb
stos
shrl
imulb
mov
mov
outsb
repz
sub
ds
xchg
repz
add
movsb
xchg
inc
cmpsl
sbb
sub
inc
inc
popa
sbb
mov
das
pop
inc
lcall
jg
mov
mov
sbb
and
cltd
ret
pop
pop
icebp
imul
je
xchg
mov
jg
pushf
sub
movsb
scas
push
addr16
es
pop
inc
jo
icebp
inc
or
xchg
jp
sub
std
cmp
xor
icebp
mul
push
cltd
mov
mov
repz
pop
lcall
adc
imul
fisubs
cmp
sbb
jg
ret
pop
mov
jmp
repnz
int3
xchg
into
mov
test
xchg
outsb
ror
ret
insb
and
mov
inc
fimuls
out
add
inc
mov
dec
aad
dec
imulb
scas
mov
sbb
mov
cmp
outsb
dec
aaa
das
add
adc
out
andb
test
dec
sub
jno
xor
mov
pop
insb
adc
push
scas
hlt
into
mov
sarl
test
out
out
jns
cmp
mov
or
xor
lods
icebp
test
jg
mov
mov
daa
aam
int3
shlb
fildll
lock
add
inc
cmpsb
sub
pop
jp
les
mov
mov
int3
push
lahf
push
das
shll
call
mov
loope
pop
jle
repnz
js
lods
and
stos
ds
fwait
bound
jno
sub
cmp
xchg
push
stos
loopne
stos
push
xor
mov
or
dec
fdecstp
aam
orl
fwait
pop
lret
das
jg
jb
bound
sbb
jmp
int
push
nop
mov
mov
mov
dec
adc
fs
mov
out
mov
mov
adc
push
imul
push
cltd
dec
push
and
loop
popf
fstpl
pushf
inc
cltd
in
scas
sub
jg
jnp
es
dec
mov
mov
push
sub
ret
and
push
push
mov
inc
fidivs
shrl
je
push
adcl
dec
push
mov
jle
pop
pusha
push
hlt
repz
imul
shl
sub
adc
rcll
frstor
mov
es
mov
out
lret
mov
sbb
bound
and
mov
jns
adc
xor
sbb
adc
inc
out
add
xchg
in
xchg
pop
flds
dec
lods
xchg
sub
lock
jns
pop
or
and
cmpsl
xchg
or
sub
sbb
shlb
pop
sbb
pop
popl
icebp
mov
out
movsl
sub
inc
jo
nop
out
repnz
lret
mov
call
stos
sub
test
dec
insb
mov
add
xchg
in
lret
imull
mov
rcl
jmp
jno
sti
add
push
in
xchg
sub
das
les
adc
lea
lea
sub
and
sbbl
dec
insl
mov
pop
test
aaa
in
cmc
outsb
adc
or
lds
cmp
mov
sbb
movsb
dec
pushf
push
or
push
shll
jbe
and
jb
mov
sbb
mov
pop
jle
test
into
imulb
movsb
lods
lret
cs
mov
inc
mov
filds
shll
mov
cmp
pop
mov
icebp
xor
add
pop
sbb
xlat
xchg
outsl
out
repz
xchg
pop
nop
and
int
add
push
mov
cmp
mov
xchg
imul
xor
sub
adc
sbb
sub
dec
shl
jno
in
rcl
cmp
push
lds
jge
and
nop
and
loop
sub
sarb
inc
pop
fs
xor
dec
inc
cmp
sti
pop
xor
fsubrp
loop
js
mov
js
mov
loopne
mov
jle
push
add
fiadds
adc
dec
adc
sbb
jno
pop
mov
sub
sbb
push
push
push
sub
pop
pop
pop
call
inc
bound
mov
cltd
rcrl
pop
std
pop
jbe
add
push
sbb
push
fists
les
push
xchg
sbb
mov
imul
dec
icebp
call
and
jle
nop
stos
inc
stos
pushf
rol
xchg
push
repnz
xor
sub
popf
push
inc
or
stos
xor
and
mov
mov
dec
test
dec
fs
fsubrp
nop
xchg
mov
add
imul
ret
lret
cmp
sub
int3
xor
sub
aad
sbb
imul
jne
rclb
inc
push
jnp
xchg
scas
cli
jg
xchg
pop
aaa
dec
mov
aad
pop
insl
idivl
mov
sub
or
xor
pop
loop
xchg
cli
hlt
insb
xor
call
pop
dec
imul
mov
jmp
bound
jbe
push
adc
lea
les
cmp
sbb
push
aam
enter
sbb
fisttps
mov
cmp
push
int3
adc
cmp
sti
out
inc
xchg
sub
mov
dec
add
add
fwait
push
sar
cli
stc
addr16
xor
in
inc
dec
cmpb
and
enter
and
pop
in
jl
insb
adc
insb
lods
jae
ficoml
gs
jle
dec
iret
int3
loop
neg
xor
pop
leave
add
jae
orl
cmp
add
out
xchg
mov
sahf
mov
sub
scas
repnz
ret
jg
xor
push
orb
lock
outsb
fwait
xchg
aam
loop
testl
sub
int3
std
popa
lds
vmovaps
rcrl
or
js
push
sbb
ret
sub
push
lret
mov
mov
aad
or
clc
std
scas
mov
mov
das
divb
mov
jmp
int3
xlat
daa
xchg
adc
xchg
loop
cmp
lcall
inc
xchg
xchg
xchg
or
scas
jmp
sarl
cmp
call
mov
and
jmp
lea
sub
outsl
pop
inc
cmpsb
jb
ret
jmp
addb
pop
cmpsb
into
adc
mov
pop
lods
roll
cmpsb
ret
stos
stc
nop
shll
aas
cmp
jl
ja
mov
outsl
jp
addr16
roll
xlat
repz
cmpl
in
rolb
jb
sub
push
ret
scas
insl
movsl
cmpsl
testl
dec
incb
pop
pop
and
repnz
ja
les
dec
jb
aaa
xchg
shll
push
fmuls
shlb
pop
inc
ds
testl
xor
das
ljmp
out
or
mov
mov
imul
xchg
dec
mov
add
mov
dec
mov
xor
mov
push
jecxz
das
mov
das
pop
push
inc
ret
cmpsl
cli
in
loop
stos
cltd
fiadds
std
test
cltd
mov
or
sub
insb
shl
enter
push
xchg
pop
xor
add
pop
outsl
xchg
daa
test
push
dec
jb
mov
sbb
lea
push
adc
mov
popf
pushf
pop
inc
jg
stc
aam
push
add
sbb
or
clc
sub
adc
ds
fldcw
outsb
mov
sub
daa
sti
outsl
fstpt
test
sub
jb
jmp
lods
movsl
sub
jmp
adcl
push
in
pop
test
jnp
or
xor
cli
inc
test
incl
mov
add
or
push
push
repz
cli
fwait
adc
lcall
lods
adc
sbb
fsubl
cltd
add
jge
ja
lods
mov
sbb
not
arpl
mov
sub
addr16
jp
cmpsl
les
inc
repnz
sub
push
jge
mov
imul
push
or
inc
jg
fsubr
cli
outsl
fwait
xchg
xchg
subb
outsb
cmpsl
data16
mov
mov
pop
mov
jns
push
push
test
sbb
mov
js
ret
jl
test
push
dec
adcb
jno
mov
fidivl
rolb
pop
add
jg
mov
dec
xchg
cwtl
repz
or
lods
jae
loopne
xchg
jle
lcall
cmp
outsb
icebp
push
orb
out
mov
cli
out
aam
repz
jnp
mov
inc
push
in
pop
add
adc
sbb
into
jb
les
es
les
dec
pop
pop
jae
mov
xchg
cmpsb
pop
add
pop
pop
lcall
xor
movsb
fs
dec
clc
popf
jg
vminss
and
inc
pop
jmp
xchg
xor
popf
mov
fs
cmp
into
aaa
hlt
test
enter
pop
lret
ret
xchg
and
ss
push
gs
std
adc
mov
hlt
jmp
and
cmpsb
pushf
add
pop
das
sbb
repz
out
pushf
push
xchg
dec
inc
imul
push
lahf
jbe
dec
mov
fisttpll
enter
faddl
movsl
jle
pop
jae
push
dec
jle
xor
daa
outsl
cmp
sub
dec
imul
jle
jbe
shll
lcall
push
ret
mov
fucomi
pusha
out
mov
cli
repz
mov
mov
pop
pop
movsl
pop
repnz
sbb
jno
popf
mov
mov
jmp
cmp
xor
fsubr
fsub
faddl
pop
push
push
into
sbb
ret
sub
and
mov
scas
push
add
jns
clc
lret
or
mov
push
mov
in
scas
inc
stos
mov
push
cs
inc
into
test
adc
mov
push
dec
jl
neg
push
jno
and
adc
loopne
lret
stos
sahf
xor
aam
stos
push
jbe
sbb
push
js
ret
shrb
sbb
lds
bound
clc
sbb
stos
mov
insl
nop
rcr
mov
sbb
pusha
dec
je
or
inc
cmp
cmp
pushf
ret
dec
test
or
inc
jmp
lock
pop
and
xor
xlat
mov
ja
ret
test
mov
into
sti
fadd
jne
inc
bound
cld
or
mov
sbb
or
mov
popf
mov
push
or
adc
mov
dec
mov
repz
stos
sbb
jno
xchg
jp
js
push
sub
mov
dec
enter
adc
hlt
xor
stos
cmp
pushl
inc
pop
lea
sbb
sub
sbb
fbstp
xchg
incb
dec
outsb
pusha
sub
or
mov
mov
hlt
cli
clc
add
dec
push
addr16
xor
mov
popa
cmp
pop
jmp
mov
inc
mov
pop
test
jmp
push
arpl
pop
xchg
fs
ds
add
test
sub
sbb
push
mov
add
les
ret
push
inc
mov
mov
mov
push
or
or
sub
mov
aas
or
mov
div
lds
int
add
dec
fsubrp
scas
sub
cmp
xchg
and
test
mov
aaa
adc
inc
jne
cmpps
jb
lods
leave
pop
push
sub
lcall
jbe
mov
cmp
xor
pop
and
push
sbb
fstl
mov
or
test
push
cmp
mov
addr16
mov
hlt
mov
or
sbb
movsl
cmp
aad
inc
inc
xor
xorl
sub
lods
mov
daa
in
inc
adc
dec
fsubr
push
sbb
sarb
adc
icebp
mov
sub
sub
push
xchg
popa
mov
xor
jecxz
rcrl
mov
or
pusha
test
bound
gs
dec
cli
pop
cltd
cwtl
lods
rolb
ret
testl
lret
cli
push
aad
enter
xor
push
xchg
js
mov
push
and
faddl
xchg
lods
jb
daa
push
pop
xchg
movsb
hlt
int3
icebp
rclb
sbb
loop
adc
xchg
pop
lods
fbstp
out
lods
std
andl
mov
push
stos
ss
into
jmp
xchg
inc
inc
cwtl
xlat
xchg
loop
icebp
cmp
and
add
mov
push
dec
mov
jg
arpl
cmp
in
mov
mov
or
imul
mov
cmpsl
aaa
sub
add
xor
lcall
lahf
mov
popa
ret
mov
lods
or
inc
in
loope
test
mov
mov
in
aaa
cmp
jl
jo
lods
stc
sub
je
andb
pop
mov
pop
int3
popf
cmpsl
and
data16
adc
aad
mov
adc
push
data16
idivb
sbbl
bound
inc
mov
pop
hlt
call
mov
push
or
push
xchg
mov
push
xor
jge
into
xor
adc
or
pop
popf
subl
pop
inc
call
adc
jl
pusha
cmc
push
push
or
mov
inc
out
dec
xchg
sbb
xchg
xor
psubw
sub
je
in
xchg
ret
jge
lret
jo
fisttps
jne
mov
sub
popf
arpl
cmp
jp
fidivrl
mov
or
loopne
lods
outsb
mov
stc
inc
xchg
shrb
jmp
add
inc
cmpsl
mov
out
mov
and
inc
loope
aam
repz
cwtl
test
fdivrl
fs
dec
cmpsl
mov
xchg
push
cli
mov
jns
mulb
call
xor
mov
xlat
add
imul
pop
sbb
scas
adc
sbb
mov
mov
sahf
dec
hlt
xlat
outsb
push
inc
inc
rcll
cltd
dec
and
pop
daa
nop
mov
jge
in
test
mov
insl
aam
aad
jge
test
push
inc
dec
aam
ret
aam
imul
push
push
arpl
into
mov
mov
rcll
fs
pop
or
push
xchg
sub
repz
dec
in
bound
leave
inc
mov
jne
in
jge
ret
xor
mov
call
push
or
mov
pop
es
ror
ficomps
and
shll
push
add
daa
adc
and
fadds
mull
cmpsl
mov
lahf
pop
pop
pop
arpl
stc
lcall
dec
inc
repz
push
lock
xchg
data16
das
ds
sub
out
inc
push
xchg
loope
fnstenv
push
push
test
fcmovbe
lcall
inc
lea
test
push
daa
popa
lcall
add
sbb
jb
sti
arpl
or
or
scas
fs
push
add
mov
sbb
mov
in
ds
repnz
xchg
ss
sahf
test
push
xor
inc
xor
sahf
fsubrs
lds
insb
imull
jle
add
movsl
jp
loop
inc
or
jno
and
sub
test
xchg
cwtl
dec
and
pop
andb
arpl
arpl
mov
adc
into
or
pop
mov
inc
or
scas
les
add
mov
daa
dec
pop
repz
mov
xchg
nop
sbbb
fldcw
sahf
stos
cmp
lret
jmp
loope
jbe
xor
sbb
cs
mov
add
fcom
imul
mov
nop
inc
mov
xlat
lcall
dec
sub
lods
add
inc
adc
shr
daa
in
fs
cmp
mov
aas
mov
mov
out
das
jecxz
in
and
jnp
inc
ljmp
out
and
xchg
enter
lock
pop
inc
mov
xor
insb
ret
cvtdq2ps
pop
popa
outsb
mov
or
das
aaa
stos
add
jge
or
je
fimuls
sbb
test
jo
sbb
ja
mov
pop
decl
clc
jnp
es
pop
sbb
loopne
in
js
push
mov
jge
xor
jmp
sbb
std
idivl
sbb
idivb
dec
pushf
adc
jo
cltd
push
or
call
cmp
popa
mov
in
repz
or
movsl
sbb
inc
inc
xor
sti
ffreep
push
sahf
mov
cmpsl
xor
mov
mov
pop
leave
int
lods
adc
push
push
gs
fdivrl
lods
jns
loop
or
or
cmp
mov
je
in
testl
mov
push
mov
dec
xor
inc
push
popa
and
mov
lods
aas
nop
inc
pop
aad
pop
inc
jns
insl
pop
sub
add
aad
fucomp
ja
in
cmpsb
pop
int
pop
enter
jo
out
mov
cld
lahf
jmp
adc
cwtl
fsubrl
outsb
jns
jns
sbb
push
sahf
sub
mov
pop
fwait
inc
pop
inc
push
xlat
lods
inc
std
jmp
out
push
pushf
ss
dec
je
mov
out
push
jns
pop
aaa
loope
sub
bnd
mov
test
fstl
mov
mov
cmpsb
shrb
mov
sbb
out
ret
mov
subb
mov
insl
cs
jecxz
pop
push
int
pop
inc
stos
ss
vmread
jmp
mov
dec
dec
dec
cli
in
faddl
xchg
out
in
sbbb
call
sub
cmp
stc
xchg
loopne
loopne
sub
jecxz
and
lret
jnp
push
scas
dec
cltd
enter
adc
jmp
xor
xchg
or
xchg
mov
pop
push
inc
jae
lcall
push
test
addl
dec
stos
cmpsl
sbb
mov
dec
mov
mov
cwtl
filds
or
lock
pop
mov
xor
rol
mov
movsl
xor
addb
ss
insl
mov
jg
add
mov
mov
aaa
int3
mov
dec
pop
mov
jae
popf
dec
jbe
cmp
test
out
xor
loopne
in
pop
lds
sahf
add
lret
sub
call
or
push
lret
dec
insl
fsubl
mov
jle
pop
imul
xchg
das
push
add
or
sbb
sbbb
inc
das
mov
cltd
into
iret
outsl
lret
sub
pusha
and
adc
cli
mov
mov
push
lahf
scas
shrl
pop
xchg
ret
add
cmp
jmp
pop
sub
push
outsl
fstpl
push
xor
jg
cmpsb
cs
inc
std
or
lahf
scas
pop
shrb
adc
fsubl
sub
scas
or
inc
pop
jo
call
push
inc
adc
and
insl
ret
hlt
pop
test
outsl
dec
jp
push
cmp
sub
imul
sbb
push
or
pop
pop
cmp
and
in
aam
pop
fistl
repnz
push
push
aam
jb
aas
movsl
movsb
xchg
mov
inc
in
int
mov
push
pushf
push
outsb
sbb
aam
dec
jp
cmp
adc
xchg
pusha
mov
xlat
xchg
cltd
fidivrl
cmp
btr
push
mov
loope
and
and
inc
stos
iret
xlat
mov
mov
jle
fnstcw
add
cld
adc
inc
cld
or
aaa
xor
lcall
clc
into
mov
scas
cmp
mov
add
or
xchg
bound
mov
or
or
stos
mov
sbb
cmp
mov
xor
lret
xchg
mov
jl
pop
adc
mov
insb
bound
xchg
or
das
stos
outsb
or
mov
dec
xchg
dec
jne
xor
mov
fcomi
push
sub
sub
lods
outsb
ja
push
pop
and
pop
leave
call
add
mov
lods
clc
popf
or
shlb
mov
add
lds
daa
std
mov
mov
fistpl
jb
out
cmp
mov
loope
inc
and
dec
iret
adc
out
in
icebp
cmpsl
adc
test
sahf
pop
int
outsl
sub
adc
push
enter
mov
js
mov
inc
push
mov
lea
push
xchg
ss
jmp
xchg
outsb
push
cwtl
insl
or
sub
mov
push
or
in
mov
jns
subl
jmp
sub
and
insl
lret
xchg
addb
mov
mov
mov
and
push
cmp
leave
lret
jno
or
adc
sub
cmc
ret
mov
adc
rolb
hlt
mov
add
lods
repz
out
dec
fwait
das
xchg
incl
dec
xor
pusha
and
je
jae
in
mov
ja
aam
dec
jl
outsb
xor
xchg
add
scas
sub
cmp
or
sbb
pop
xchg
pop
adc
movsl
aaa
jnp
cmp
or
xor
out
xchg
pop
cli
push
ljmp
and
or
out
ds
out
fcmovb
mov
outsb
pusha
sub
adcb
xor
into
popf
test
lret
loope
fidivrs
std
xor
and
stc
jg
mov
enter
sti
mov
in
lahf
gs
leave
push
add
inc
scas
xchg
stos
push
add
stos
test
loop
jg
jbe
imul
loop
cmp
popa
mov
dec
cmp
stos
push
icebp
push
mov
sub
push
pushf
shrl
pop
in
leave
mov
jmp
out
mov
jb
sbb
xor
mov
testl
add
nop
sbb
pop
and
or
xchg
xchg
inc
aam
jns
out
rcrl
dec
push
cmp
mov
mov
mov
inc
mov
repz
in
xor
enter
arpl
es
jbe
ja
sub
mov
scas
pop
push
pushf
xlat
adc
sti
mov
pop
xor
std
outsb
sub
js
xor
mov
shrl
int
adc
pusha
and
popf
jmp
daa
inc
dec
xchg
out
aam
mov
sbb
loopne
cmp
pop
scas
mov
mov
and
adc
push
movsl
mov
in
arpl
mulb
cld
or
inc
xchg
mov
ljmp
push
mov
mov
push
dec
dec
test
sar
cwtl
cmp
jp
mov
cmp
leave
outsl
xchg
pop
jl
cmp
dec
enter
arpl
sub
aad
dec
add
and
sbb
pop
sbb
std
cs
roll
and
and
jo
hlt
jo
orb
repz
in
cmpsl
push
rcr
dec
scas
arpl
push
jbe
mov
mov
cmpsb
sbbl
aaa
fwait
ljmp
repz
popl
gs
cmp
inc
fmuls
fstp
ljmp
xchg
gs
lea
test
into
jg
jbe
sbb
mov
arpl
or
and
test
scas
pop
and
dec
stos
cs
pop
and
mov
ds
inc
mov
or
inc
shrb
dec
out
in
mov
sbb
das
adc
in
fsubs
jge
mov
inc
or
inc
call
xorb
sbb
sbb
js
inc
in
mov
pop
cmp
pop
fildl
cli
add
or
and
dec
xchg
pop
stos
jp
lahf
cmp
gs
in
jns
test
mov
inc
hlt
pushf
push
in
scas
dec
add
jae
out
dec
inc
icebp
loope
cmp
adc
movq
andb
mov
rcll
stc
jnp
cmp
outsl
in
movl
push
mov
push
adc
loop
push
mov
rolb
pop
mov
sbb
lds
aas
cmp
push
and
out
or
leave
lock
movsl
mov
inc
sub
pop
incb
out
mov
sub
xor
leave
je
aaa
sub
or
sti
outsb
lods
ja
push
data16
movsl
xchg
mov
enter
pop
aaa
movsb
scas
pushf
xchg
xor
xchg
push
shrb
sbb
std
test
and
cs
mov
cwtl
outsb
jns
jecxz
xchg
cmpsb
mov
popf
dec
sub
xor
sub
shll
testl
shll
andb
add
insb
int
outsl
jmp
out
lret
nop
fs
shl
xchg
push
ror
lahf
xorl
push
push
mov
mov
pop
lcall
test
js
inc
xchg
or
out
cmp
mov
rcll
xor
imul
cmp
mov
jmp
cmp
fiaddl
dec
mov
jo
push
lret
push
jne
adc
imul
add
aas
lods
rclb
or
gs
jbe
hlt
scas
cmp
jmp
mov
pop
jnp
mov
hlt
sbb
loope
jl
enter
push
lcall
pop
cmp
repz
mov
sub
pop
ficoms
or
in
stos
jbe
or
cmp
inc
dec
stos
imul
jne
mov
bound
add
lds
or
fs
pop
icebp
fwait
aaa
xchg
cmpsl
jp
movsl
dec
push
ja
lods
inc
xchg
jle
mov
inc
inc
jnp
out
pop
ds
insl
jp
icebp
mov
in
mov
icebp
das
mov
inc
pop
shll
not
iret
repz
test
je
jnp
sbb
test
and
push
cltd
mov
mov
mov
inc
push
incb
stos
push
pop
in
lahf
in
mov
jae
adc
and
mov
movsb
jo
pop
mov
or
test
testb
dec
jbe
mov
movsl
jnp
in
dec
aam
cmp
lds
xor
jo
imul
movd
push
or
out
fwait
nop
cli
add
popa
cmpsl
dec
jne
mov
dec
jne
lock
and
add
mov
inc
sub
les
imul
cmpsb
pop
xchg
cld
fidivs
adc
ret
and
pop
inc
int3
call
mov
mov
addr16
outsb
daa
mov
outsb
mov
adc
or
push
cmpsl
loopne
idivb
mov
pop
loope
rolb
mov
cltd
pop
sbb
sub
mov
push
out
test
jg
aaa
shlb
out
sbb
xlat
gs
sbb
sub
jge
mull
adc
ficomps
cmp
cmp
pop
dec
cmpsb
or
cmc
mov
adc
mov
sbb
shlb
js
in
xchg
mov
or
push
js
xchg
xor
cmp
fadds
xlat
dec
imul
fsts
dec
cwtl
jp
xor
lret
test
in
push
jb
sarb
pop
push
ds
xor
leave
cmp
mov
sbb
cmp
mov
mov
jge
inc
xchg
cltd
icebp
stos
enter
gs
jl
add
mov
and
xor
dec
mov
and
jo
jge
sub
jb
nop
and
test
rcl
push
insl
jge
and
push
jecxz
mov
cmc
fidivl
fwait
or
fistps
sbb
jnp
jl,pn
bound
in
push
xor
jmp
jnp
leave
decb
add
push
mov
sahf
jge
pop
lcallw
out
xchg
arpl
xorb
or
and
fistpll
mov
xor
or
repz
sub
lcall
je
sbbl
push
mov
fbstp
test
xor
pop
int
pop
xor
nop
das
inc
xchg
sub
gs
pop
jbe
jg
xchg
lahf
xchg
and
add
lea
repnz
in
test
mov
fcoml
push
es
int3
fs
xor
outsb
sub
xchg
ss
xor
cmp
xlat
aas
jb
ljmp
mov
and
les
pop
or
jo
xchg
das
test
push
xchg
mov
stc
test
xor
inc
ror
loope
arpl
sbb
pushf
ds
das
sub
filds
lret
jmp
push
sbb
int3
xor
mov
jp
mov
fninit
das
adc
mov
adc
ret
push
outsb
lods
cmp
orb
sahf
popa
jecxz
scas
je
pop
pop
sbb
icebp
lcall
inc
inc
insl
xor
sub
popf
out
cmovne
add
or
mov
imul
fstps
inc
sbb
inc
hlt
adc
jge
mov
push
cmpsl
xchg
mov
pusha
push
push
fisttps
bound
sarl
mov
sbb
push
sbb
push
js
sub
or
inc
mov
and
inc
outsl
jns
fcomps
mov
imul
and
rorb
loopne
jno
sbbl
sahf
push
sbb
xor
mov
jp
ret
xor
outsb
loop
in
push
scas
push
sbb
loopne
inc
add
push
and
xor
lods
jnp
push
scas
dec
test
dec
mov
fwait
inc
jbe
fistps
ljmp
inc
nop
sbbb
push
std
push
cmpsl
nop
add
or
mov
xchg
bound
cltd
adc
jae
pop
push
jne
ds
sbb
jmp
in
cmp
movsl
arpl
loope
lock
and
xor
add
pop
mov
cmpsl
frstor
dec
inc
xchg
push
inc
std
mov
inc
mov
int3
cmp
mov
in
inc
adc
test
push
lods
jae
mov
rcll
xchg
dec
sar
and
sbbl
addr16
mov
adc
out
sub
xchg
jmp
xlat
xor
test
aaa
jle
sub
push
incl
pusha
and
jb
dec
sub
push
mov
jbe
inc
ds
call
fcoms
cmp
imul
or
jp
push
sbbb
mov
aam
insb
pop
stc
push
jo
sbb
std
call
je
movsl
ds
cmp
inc
arpl
push
out
fmulp
dec
mov
jecxz
add
mov
cmpsl
sub
testb
xor
lcall
test
xchg
pushf
iret
pop
ss
mov
ret
enter
inc
push
mov
cld
sbb
and
mov
xchg
push
pop
xor
mov
orb
ret
call
add
sbb
loope
mov
push
or
cmp
add
jecxz
sub
hlt
jp
test
mov
xor
cmp
cld
cmpsb
mov
adcl
sti
aam
dec
mov
push
dec
roll
int3
jne
jae
dec
sbb
inc
and
sbb
pop
push
in
repz
js
insb
cmpsl
or
rclb
orl
lcall
jle
imul
xchg
jle
adc
movsb
push
push
mov
pop
outsl
rcl
mov
or
fdiv
insl
and
push
ds
xchg
rolb
jb
out
and
jecxz
andl
pushl
int
int
jmp
sub
dec
pop
cmpsl
jne
and
cmp
bound
xchg
div
sub
xchg
mov
xchg
lahf
lcall
inc
shll
fdivrs
into
jg
insb
data16
stos
add
cmp
dec
jno
inc
sbb
pusha
repnz
xchg
scas
lods
jnp
push
mov
fisubs
test
pop
fwait
sbb
das
out
in
inc
sbb
mov
adc
loopne
imul
mov
jg
dec
xor
inc
and
imul
jne
xchg
push
push
and
cmp
scas
push
pop
daa
ret
jnp
pop
mov
add
dec
pop
dec
aam
int3
in
scas
mov
repnz
out
push
pop
ljmp
aas
mov
xchg
shl
clc
cmp
js
cwtl
or
scas
jg
push
xor
inc
add
fisubrs
sarb
nop
jge
insl
lds
clc
pop
mov
movsb
outsl
sub
xchg
lret
or
stos
pop
loop
loopne
ret
adc
jmp
cmp
push
stos
mov
dec
test
js
sarb
and
sbb
push
xchg
inc
sahf
pushl
iret
int
mov
xor
xchg
inc
shlb
in
cmp
outsb
outsl
push
push
add
repz
test
xchg
xchg
js
pop
loope
cmp
sti
jno
fwait
lret
jne
sbb
dec
mov
stos
daa
ljmp
pusha
dec
or
sahf
dec
xchg
push
test
cmp
jl
jb
or
sbb
popf
mov
jbe
test
push
hlt
in
clc
xor
loopne
adc
sbb
cmpsl
cmp
or
jmp
cmc
mov
pop
rorl
push
lds
loop
mov
pop
pop
add
pushf
in
adc
shll
mov
mov
add
fsts
rolb
mov
int
rcrb
stc
dec
pop
dec
cmpsl
jo
notl
jns
outsb
cmpsl
adc
sub
jle
mov
and
add
popf
push
mov
jge
notl
mov
cli
enter
pop
mov
cmp
mov
in
pop
rorl
lods
es
mov
aam
sub
and
cmc
sbb
jo
and
aad
mov
outsl
or
call
std
stos
data16
adc
xor
sbb
pop
aas
push
push
outsb
outsl
push
push
test
std
xchg
xchg
lret
test
add
mov
inc
aas
inc
bound
inc
inc
js
out
add
jnp
fildll
xor
xor
daa
jmp
sarl
cld
and
sbb
rclb
cld
aad
pop
xor
imul
mov
xor
pop
es
mov
cli
dec
aas
pusha
dec
pop
mov
imul
stos
and
call
shll
in
adcl
clc
ds
mov
sahf
sbb
sub
fcmovnbe
pop
cld
subb
sbb
sub
lds
and
pop
aaa
mov
out
fisttpll
add
pop
stos
add
and
test
and
inc
push
inc
outsb
out
arpl
jbe
push
movsl
or
out
fimuls
inc
ss
xorl
fisttps
test
js
sub
faddl
rorb
popf
jl
adc
int
mov
adc
and
sarb
mov
out
xor
or
sbb
xchg
cmpsb
scas
add
dec
inc
aas
insl
dec
fmuls
pop
dec
jnp
ret
ljmp
or
add
call
hlt
cs
aas
andb
nop
adc
cmp
sbb
jae
icebp
lret
inc
scas
aad
stc
push
jbe
movsb
mov
sbb
adc
mov
xor
out
sub
stos
mov
or
xchg
addl
incl
pop
test
add
cmp
call
sahf
sub
xor
mov
mov
daa
fistps
xor
jmp
sbb
sub
insb
mov
mov
or
fiaddl
xchg
pop
mov
stc
mov
mov
aas
or
push
and
dec
sbb
xor
cmpsb
nop
call
push
divl
mov
mov
shlb
jo
jmp
cmp
shrb
in
mov
pop
sbb
bound
xor
cmpsl
lret
stos
subl
cmpsb
mov
push
ss
pushw
push
cld
popf
fmul
mov
cmp
sbb
test
fldt
or
add
push
orb
decl
add
dec
fwait
je
sub
sub
sbb
mov
add
sarl
mov
arpl
or
in
and
stc
push
int
pop
test
pop
insl
mov
push
imul
lret
int3
into
stos
add
push
inc
mov
add
pop
cld
scas
sub
fisttpll
cld
inc
jmp
jo
and
xor
cmc
or
xchg
sbbb
sahf
push
adc
movsb
and
add
in
jae
mov
icebp
les
pushf
sub
mov
or
mov
test
stos
stos
aad
fstps
mov
jecxz
cwtl
inc
ja
cld
out
or
loope
sbb
or
imul
push
push
into
in
jl
jb
pop
scas
mov
sbb
dec
rolb
mov
dec
jl
jae
mov
les
pop
pop
xchg
aaa
outsb
cmp
push
pop
dec
pop
jp
loop
pop
imul
and
shr
or
lock
push
imul
out
repz
ljmp
dec
and
addr16
inc
sub
cmp
fadd
jo
xchg
mov
fsubs
push
call
lret
push
xchg
je
mov
xor
sbb
push
data16
jns
shll
mov
jp
or
mov
icebp
push
pop
xor
in
fistl
lds
add
popa
push
cwtl
lcall
xchg
inc
data16
mov
mov
dec
lret
push
in
pop
mov
daa
xchg
loopne
or
or
shll
in
outsl
and
or
iret
jo
stos
pop
pop
xor
movsb
imul
in
mov
int
orl
cmpsb
mov
xor
clc
fst
jle
lock
mov
stos
xchg
sub
mov
iret
sub
xchg
push
mov
inc
fmuls
test
and
aas
mov
ret
test
jae
push
and
pop
pop
nop
adc
popa
or
jno
lock
push
add
rorb
test
sbb
stc
mov
in
loopne
dec
hlt
sbb
xor
lds
aam
fidivl
push
aaa
and
add
mov
je
fidivl
pop
insl
sbb
pop
add
popf
pop
adc
jmp
imul
pop
sub
xchg
add
in
cli
xor
push
adc
mov
std
mov
jmp
je
pop
push
stos
lret
cmp
xlat
div
xor
aam
inc
push
aas
das
pop
jp
fsubrs
inc
inc
cmp
lret
inc
jbe
mov
pop
sbb
fimuls
mov
mov
out
pop
inc
inc
pop
stos
cli
add
fisttpll
and
sbb
push
popa
inc
push
bsr
mov
pushf
test
jns
insb
outsb
push
fdivr
mov
testb
shr
and
fucompp
insb
sbb
mov
lds
orl
jl
shrd
fldt
sub
inc
rorl
cli
test
inc
inc
push
pop
push
jmp
add
jnp
mov
clc
and
mov
enter
pop
fnstsw
cmp
movsb
cmp
xchg
dec
push
fmuls
adc
hlt
xchg
or
pop
je
inc
insl
adc
inc
out
or
pop
xor
dec
pop
mov
js
add
add
dec
rcll
xor
xchg
cltd
movsb
sub
imul
in
inc
repz
outsl
jg
jo
mov
and
mov
inc
jg
subb
std
in
mov
cltd
sub
xchg
mov
nop
inc
and
ja
insb
adc
mov
loope
into
stc
and
mov
lret
inc
push
inc
iret
sbb
je
addr16
push
iret
cli
imul
pop
jne
inc
fldl
fwait
leave
sbb
stos
xchg
mov
or
imul
pop
mov
add
push
sbb
pop
jmp
inc
and
dec
push
insl
out
xor
sbb
pop
push
push
shll
test
fcom
les
stos
jle
cmp
sub
jb
pop
shlb
clc
push
pop
ret
xchg
arpl
xor
getsec
push
das
enter
repz
stos
imul
mov
inc
pushf
inc
pop
xchg
push
push
inc
push
push
hlt
pop
loope
popf
jg
std
cmp
sub
push
sbb
dec
sbbl
and
ljmp
mov
std
mov
mov
popa
pushf
mov
sti
shrb
add
mov
rcll
push
shr
push
cmpsl
jae
mov
dec
mov
push
push
push
fcomps
or
lahf
pop
mov
sbb
cli
add
or
mov
add
pop
notb
mov
mov
cmp
loope
fbld
pop
cmp
push
in
int
lea
adc
out
dec
cli
jle
mov
sub
jge
lret
scas
orb
dec
sub
clc
inc
aad
adc
leave
push
push
pop
push
sub
imul
jo
movsb
adc
stos
movsb
dec
dec
push
mov
lret
or
jb
mov
dec
jb
icebp
jns
incl
mov
stc
cmp
mov
inc
in
mov
xchg
mov
arpl
push
add
fimull
xlat
jg
shr
arpl
std
ss
and
mov
outsb
mov
adc
dec
add
lcall
adcl
test
int
lods
iret
push
outsl
dec
jecxz
in
div
js
mov
les
icebp
cs
int
ret
cmp
xchg
hlt
push
mov
cs
push
mov
xorb
ficompl
int3
jae
xchg
mov
lds
iret
push
cmp
lret
dec
jmp
pusha
pusha
mov
and
lcall
movsl
rclb
jmp
or
cmpsl
stc
and
push
or
mov
pop
xchg
inc
mov
jmp
icebp
jle
insb
faddl
fists
shrb
push
ror
pop
adc
and
int
int3
add
vunpckhps
jbe
ds
mov
cmp
loop
js
in
mov
push
lods
xor
pop
les
not
jnp
mov
inc
push
icebp
adc
push
mov
aaa
sub
inc
lea
les
jno
enter
dec
nop
xchg
fildll
stos
inc
movsb
lret
jae
in
lcall
sub
jge
cwtl
gs
push
ret
or
inc
cmpsb
rclb
xlat
inc
xor
push
jge
jnp
seto
mov
mov
dec
dec
jnp
fdivr
jge
jo
icebp
call
adc
imul
ja
daa
jecxz
call
mov
and
mov
inc
dec
lcall
pushf
and
push
jae
push
mov
scas
and
nop
adc
or
pop
ja
in
or
jo
push
mov
xchg
test
cli
lahf
pop
sub
push
mov
daa
xchg
nop
xchg
cmp
mov
fstpl
aad
xlat
out
mov
cli
sub
arpl
sub
mov
pop
insl
clc
xchg
mov
pop
dec
cmp
mov
jge
sbb
jg
stos
pop
loop
push
data16
cld
xor
pop
mov
insl
imul
je
repnz
fstps
mov
pop
fcompl
push
xchg
das
mov
ss
pop
ljmp
adc
and
jecxz
and
jo
enter
pop
cmp
pop
out
adc
mov
adc
add
sub
or
dec
popa
fiaddl
test
hlt
cltd
add
mov
negl
cmp
ljmp
fistpll
sti
test
xchg
xor
or
fwait
mov
outsb
bound
sbbb
jb
dec
add
aad
lds
lret
jnp
pusha
outsl
pushl
push
inc
mov
mov
aas
mov
or
jno
sub
stc
dec
jl
mov
test
cmpsb
and
xor
jnp
fsubs
sti
inc
insb
cmp
in
decb
xchg
ss
push
sahf
mov
fld
xor
mov
jnp
pop
aas
adc
addr16
stos
adc
mov
jmp
fisubrs
roll
or
cmc
mov
pop
stc
pop
xor
add
adc
out
clc
dec
imul
mov
movsb
insb
add
ss
pop
mov
frstor
jbe
add
or
push
adc
adc
push
lahf
pushf
lret
mov
sub
cmp
data16
jo
cmovb
aam
jb
call
inc
sub
push
out
push
and
cwtl
mov
push
sub
fidivrl
insl
inc
jle
and
repnz
lret
mov
push
xchg
in
loopne
cwtl
jle
sbb
ss
call
movsb
mov
sub
push
push
sbb
push
and
lods
xchg
int
mov
outsb
lahf
rcrl
rolb
imul
mov
mov
xchg
push
pop
adc
hlt
and
xor
dec
dec
xchg
negl
mov
xchg
dec
xchg
stos
call
in
imul
pop
dec
xlat
or
mov
xor
lret
enter
xchg
inc
sbb
jge
int3
xchg
jbe
mov
shll
les
fisubs
stos
lock
popf
push
sbbl
outsl
jae
sub
jnp
push
fdivp
xchg
arpl
repz
testb
pushf
mov
or
ret
mov
fbstp
ljmp
jns
pusha
shlb
and
jnp
das
push
and
rcl
mov
subb
shrb
jmp
or
neg
mov
hlt
out
push
add
sbb
lods
sbb
dec
cs
jns
roll
dec
push
rcl
xchg
lea
int3
cmp
sbb
xor
into
das
fstpt
addb
dec
xor
jae
mov
xor
pop
addl
xchg
out
cltd
add
popa
lods
xchg
ds
stos
cmp
xor
movsl
or
jo
mov
mov
roll
dec
loope
imul
jle
add
in
movsb
fdivr
lea
and
rcr
pop
and
add
in
fwait
imul
cwtl
adc
cmp
rolb
pop
js
xchg
rorb
xchg
pop
popf
xor
or
lock
pop
xchg
cmpsl
add
cld
mov
dec
adc
jge
mov
push
repnz
dec
mov
fsts
sbbl
xchg
sub
test
ret
iret
out
and
xor
lret
mov
jnp
sub
inc
jecxz
push
punpckhwd
mov
push
push
mov
stos
mov
aaa
push
inc
out
std
fiaddl
scas
out
mov
out
adc
xor
cmp
repnz
das
mov
loopne
inc
inc
je
xor
xchg
int3
aaa
scas
xor
xor
sbb
shrb
stc
mov
jnp
xchg
and
cmp
mov
pop
outsb
inc
orl
shr
mov
or
addr16
add
fbld
daa
clc
test
mov
sub
scas
jmp
lret
push
jbe
cmp
and
in
mov
dec
das
pop
mov
fdivs
shlb
pop
or
fucomi
mov
jae
mov
push
lds
sbb
and
pop
dec
pop
xchg
mov
icebp
scas
sub
test
cltd
stos
xchg
inc
xchg
sub
or
rol
stos
inc
in
xchg
lock
xchg
cwtl
or
das
push
sbb
push
movsl
mov
leave
movsb
xor
popf
add
imul
test
nop
pop
xchg
shlb
push
dec
sbb
jne
rcrl
jl
inc
inc
and
add
pop
sub
xchg
ror
mov
bound
sbb
jne
sbb
fwait
mov
sahf
cmpsb
rcll
aam
push
call
sti
mov
dec
ljmp
lds
pop
mov
xchg
sbb
add
inc
andl
jnp
je
mov
mov
addr16
dec
xor
mov
ror
cmp
addr16
gs
or
mov
sahf
mov
addr16
lea
fidivl
cltd
insb
insb
in
inc
add
jmp
mov
mov
ljmp
dec
add
test
mov
jecxz
ret
ds
mov
adc
ja
sub
lods
adc
mov
repz
pop
inc
xlat
sbb
pop
sub
mov
jle
pop
jge
lahf
add
mov
das
mov
dec
rcl
mov
icebp
lret
add
xchg
push
popa
mov
stos
dec
mov
xchg
aaa
xor
scas
mov
jbe
iret
orl
jge
je
mov
sbb
call
out
mov
mov
mov
cmp
dec
mov
mov
outsb
add
std
xorl
dec
inc
test
push
lock
mov
in
repz
inc
sbbb
neg
sub
dec
lea
push
jb
loope
inc
data16
stc
fcomps
mov
fadd
and
pusha
jl
jl
and
pop
fcompl
adc
pop
add
push
rclb
imulb
std
stc
or
pop
jno
pop
xchg
std
repnz
clc
movsl
test
nop
clc
lods
xor
pop
inc
roll
cs
clc
cmpsl
xchg
cmp
push
into
test
xor
xchg
xor
pop
mov
aaa
and
cmp
xchg
inc
shlb
sbb
lret
addr16
jne
and
pop
mov
add
pop
xchg
pop
flds
sub
pop
stos
cmp
cltd
std
arpl
lahf
notb
inc
mov
popf
cmpsl
lds
ret
add
jecxz
es
mov
inc
xor
dec
in
cmpxchg
mov
pushf
pusha
daa
aaa
or
leave
jecxz
jns
push
lret
mov
add
jl
mov
adc
mov
aam
sbb
or
cmc
mov
lods
sti
fwait
jbe
mov
adc
aam
sub
jl
mov
mov
xor
cmc
filds
lock
xchg
out
xor
sahf
gs
ret
popa
aad
lret
loop
push
adc
sbb
lods
imul
mov
adc
add
mov
stc
aad
add
xchg
loope
xor
pop
lahf
fnstenv
inc
insl
inc
lock
inc
cltd
adc
pop
cmp
test
mov
pop
in
fildll
ljmp
loop
daa
sbb
ljmp
dec
outsl
in
bound
in
mov
lea
sub
pop
inc
cmp
mov
insb
or
repz
out
pop
pop
and
push
cmc
ss
xchg
dec
mov
divl
cmc
mov
pop
aaa
sbb
mov
lcall
testb
fcomps
xlat
subl
mov
lret
push
popl
call
inc
int
and
and
push
mov
fistl
jnp
out
dec
jg
orl
std
sub
or
dec
loopne
lock
inc
or
cmp
scas
ja
lods
xchg
xchg
push
fstps
jg
add
aaa
sti
lahf
test
lea
jns
xchg
sbb
add
jl
add
movzbl
jg
or
cmp
mov
repnz
or
loope
repnz
insb
add
sub
rcll
jg
call
shrb
stc
in
in
jmp
dec
loop
sahf
je
cmp
xchg
lahf
shll
in
loop
fdivr
inc
pop
jp
sbb
and
push
fdivs
jl
sbb
jno
outsb
test
rcll
cwtl
cmpsb
mov
mov
xor
lods
arpl
push
testl
push
lahf
popf
sahf
int
xor
xor
cmp
mov
jl
mov
jecxz
out
pop
inc
jg
dec
leave
sub
push
int3
shrl
push
jns
lea
push
lock
shrl
rcl
insb
cmp
push
rcrb
out
mov
pop
push
outsl
jne
push
sbb
xchg
scas
rolb
hlt
dec
mov
cmpsl
int3
pop
call
jle
xchg
push
and
mov
or
inc
fistl
push
test
and
xchg
jmp
add
das
jl
pop
imul
sbb
jne
ret
inc
ficomps
mov
inc
adcb
sub
mov
lahf
lret
sbb
mov
cwtl
lods
inc
loop
push
fnstcw
sub
jg
daa
push
adc
mov
and
cmovp
dec
xor
rcrl
pop
sbb
sub
out
jmp
in
push
sbb
mov
ret
or
fstps
mov
inc
movb
push
mov
or
shl
mov
out
jl
nop
adc
repz
jge
dec
dec
rorb
adcb
push
clc
push
push
or
mov
mov
adc
mov
xchg
xchg
xchg
and
pop
sub
and
xchg
mov
fbstp
mov
dec
push
adc
mov
and
xchg
lods
sub
lods
push
mov
push
ss
loope
mov
cmc
lea
cltd
sbb
in
and
mov
xor
cli
cmpsb
push
jg
or
fcmovbe
mov
jb
js
sbb
fs
in
aas
jo
add
in
push
xchg
movsl
call
pop
cmp
or
jo
shll
bound
push
sti
xchg
pop
movsb
cltd
mov
jmp
mov
sub
jno
stc
mov
xchg
or
aad
and
push
jmp
push
pop
xchg
inc
popa
fisubrl
imul
xor
cmp
int3
jle
int3
faddp
shlb
leave
sbb
cwtl
aam
push
sub
dec
adc
fwait
lret
mov
bound
pushf
or
push
popf
aad
divb
int3
mov
icebp
push
mov
cmp
mov
mov
mov
xor
jg
dec
mov
rcll
mov
mov
iret
and
loop
cmp
jbe
ret
mov
scas
iret
outsl
sbb
dec
sbb
push
pop
mov
ficoml
push
sbb
jge
jnp
mov
addr16
mov
das
and
out
stc
daa
lcall
xor
adc
mov
cmp
dec
into
xor
jne
int3
leave
xchg
jp
dec
les
scas
and
shlb
push
call
sub
addr16
pop
mov
dec
inc
shlb
add
insb
out
push
jg
enter
ret
lahf
cmpsb
push
inc
dec
mov
or
xchg
mov
repz
in
pop
mov
mov
sub
aas
jno
jg
adc
cmp
js
sub
shlb
pop
stos
scas
les
xor
push
pop
push
adc
call
or
mov
mov
movsb
pop
jb
inc
icebp
lea
cmpsl
xchg
aam
push
stos
sub
jmp
sarb
xor
arpl
in
notb
test
push
fldenv
xor
lods
xor
test
jp
xorb
mov
in
inc
push
lret
mov
out
push
int3
add
inc
cmp
sub
inc
add
int
dec
xchg
leave
push
bound
div
dec
xor
pushf
mov
aaa
xchg
sar
sub
and
mov
xor
and
sub
ficomps
jb
xchg
sbb
push
pinsrw
test
mov
xlat
or
loopne
mov
hlt
sahf
jne
push
popa
xchg
push
cltd
test
sti
sub
sbb
roll
xchg
jns
or
lea
jmp
xor
sbb
test
sub
adc
mov
sahf
sub
dec
int3
mov
adc
inc
int3
add
jnp
push
lods
data16
ds
sar
addr16
jmp
jo
or
jecxz
sbb
dec
pop
push
inc
xchg
xlat
and
lahf
push
aam
jle
dec
loope
movsb
mov
cmp
das
dec
fstl
cmp
jno
mov
jg
popf
inc
sub
pop
mov
sbb
mov
les
dec
insl
mov
dec
push
popf
stc
pop
mov
inc
call
or
jl
stos
call
repnz
bswap
leave
mov
dec
dec
inc
mov
push
out
dec
js
xchg
pop
int3
xlat
inc
outsl
mov
out
lcall
data16
xchg
fnsave
loop
push
fcomip
mov
pop
pop
fldenv
sbb
int
sub
mov
xlat
int
jno
gs
dec
push
mov
mov
mov
ficoml
out
mov
in
cs
add
push
lods
adc
es
in
dec
fbld
pusha
dec
bnd
xchg
test
cmp
xchg
cli
mov
inc
nop
xlat
in
cmpl
or
mov
rcrb
jb
jb
or
cmpsb
les
cltd
insl
imul
mov
mov
or
in
arpl
shrb
icebp
mov
movsb
add
orb
sub
pop
add
dec
push
mov
jmp
div
repz
addr16
xchg
xor
les
clc
ja
aad
xor
dec
jle
adc
jp
outsl
xchg
aaa
lret
cli
mov
pop
and
mov
xchg
test
xorb
sub
add
cli
lods
cmc
add
inc
or
jb
fwait
cltd
jbe
cs
inc
inc
push
addb
mov
in
loop
lea
cmp
sbb
mov
outsb
pushf
psrlw
scas
add
rclb
les
sub
push
popa
rcll
jae
xchg
pusha
push
sti
mov
lcall
push
inc
xchg
jnp
ror
jg
out
add
and
out
or
xchg
xor
jmp
fnstcw
inc
insl
gs
jg
xchg
test
or
iret
mov
mov
xor
push
pop
jno
add
add
cmpl
loopne,pt
push
push
add
scas
fs
or
adc
dec
mov
pop
mov
es
inc
fstpl
popf
xlat
inc
lahf
dec
ljmp
lahf
adc
sbb
and
xor
adc
cmp
fldcw
in
mov
ficomps
pop
push
loop
test
push
push
shl
insl
lret
jno
idivb
mov
sbb
mov
push
inc
test
popa
call
or
stos
sbb
push
mov
jg
movsl
dec
lcall
out
rcrb
cwtl
subl
test
mov
stos
sbb
popa
lods
test
ss
es
sbb
lahf
and
push
xchg
ret
pop
jnp
dec
or
mov
and
xor
xor
xor
push
in
sbb
dec
xchg
ret
sub
add
lods
mov
pop
cwtl
out
je
nop
repnz
sub
mov
mov
cmp
push
sbb
push
mov
lea
xchg
cs
cwtl
xchg
xlat
mov
sbbb
test
lds
cmc
sbb
push
ret
adc
arpl
and
lock
lret
or
jecxz
jno
addr16
test
pop
cld
xchg
and
movsl
sub
fldl
enter
std
add
inc
testl
out
xor
test
adc
push
jge
cld
push
sahf
xchg
mov
push
sub
jge
scas
dec
dec
orb
sbb
dec
jae
int3
sub
xor
inc
xlat
lods
xchg
rclb
dec
mov
or
mov
in
jp,pn
int3
sub
subb
cmp
or
jl
mov
sub
fadds
or
lods
js
dec
insl
lock
pop
fs
inc
into
mov
out
inc
arpl
adcl
addr16
sti
mov
adc
movsl
xchg
mov
dec
es
mov
iret
push
xchg
push
mov
jmp
bound
mov
pop
jnp
imul
out
mov
jne
xor
shl
and
in
xor
xchg
lahf
xchg
insb
xor
scas
adc
mov
adc
daa
rorl
inc
stos
hlt
cmc
and
pushf
xchg
divl
mov
pop
loope
adc
cltd
sti
push
in
sbb
enter
mov
aad
mov
outsl
mov
sub
add
sti
lret
int
imull
ficoms
xchg
test
cmpsb
push
jae
pusha
cltd
jno
or
sub
mov
and
push
push
ret
mov
ja
inc
dec
mov
jg
xor
inc
sbb
jo
hlt
adc
in
xlat
insl
xor
dec
fistl
push
mov
cmp
lret
das
xor
in
pop
and
jae
add
dec
jp
lcall
aad
in
shrl
mov
mov
or
scas
test
inc
push
inc
lods
add
inc
jle
mov
sbb
or
mov
jecxz
jo
fldl
cmpsl
roll
fldl
mov
push
fidivs
cmp
sbb
fs
or
or
testl
in
lds
jns
push
jmp
mov
xchg
stos
sahf
mov
dec
sti
dec
lret
fistpl
dec
outsb
bound
inc
jne
adc
int
call
into
pushf
ss
push
xchg
stos
gs
scas
in
ja
repnz
push
push
and
push
test
mov
jnp
mov
dec
push
inc
jecxz
scas
ficoml
stos
pop
in
mov
add
mov
pop
es
rcrl
add
divb
lahf
lahf
xchg
dec
sbb
lods
packssdw
push
lods
in
ret
clc
sahf
pushf
and
pop
inc
test
inc
in
mov
pop
shlb
jae
hlt
int
jg
scas
les
pop
lcall
bound
fidivl
or
in
fwait
stos
test
loopne
pop
jl
sti
sub
movsl
mov
add
fs
xchg
ja
mov
jmp
mov
jnp
les
add
incb
adc
ja
mov
and
mov
dec
cs
pop
adc
int3
adc
gs
popf
repz
mov
data16
arpl
dec
or
xor
sbb
cmp
dec
ret
notb
mov
cmp
icebp
pop
loope
fistpl
xchg
mov
adc
rol
ja
jge
lret
out
lahf
sbb
adcb
divb
nop
jle
lds
lds
xchg
data16
jno
xchg
add
mov
shl
add
fidivl
push
stc
cmp
movsl
lahf
mov
inc
sub
ljmp
and
xor
jno
decl
cmp
mov
fdivrl
mov
dec
es
push
ja
adc
sbb
push
ljmp
add
pop
xchg
jge
js
sub
sbbb
sahf
lods
rcrb
mov
lds
mov
ljmp
lods
adc
xor
out
push
popf
nop
aas
loop
dec
ficoms
inc
ljmp
lret
sub
push
jecxz
test
test
fcmove
fdivr
outsl
jbe
jno
add
ret
and
jae
scas
das
sbb
pop
mov
add
cli
or
jo
cmp
mov
cmpsb
lcall
adc
out
shlb
dec
adc
pop
mov
dec
sbb
loope
js
je
cli
xor
stos
loop
scas
ja
es
iret
aam
into
js
cli
push
and
ret
xor
or
or
push
mov
pop
ja
pop
out
lret
leave
scas
sbb
push
xchg
loop
add
enter
jg
loopne
and
xchg
adc
cmp
stos
aad
push
xchg
stc
andl
ret
in
cmp
pop
add
and
lds
je
in
fs
sbb
or
iret
add
cmp
ret
cmp
icebp
pop
xchg
push
test
push
stos
sub
jnp
mov
adc
in
in
clc
push
or
mov
lods
xchg
sbb
loope
inc
fwait
mov
mov
fdivr
push
addl
sbb
mov
icebp
js
fists
and
xor
push
pop
and
adc
gs
imul
call
mov
jne
pop
add
aaa
and
adc
ret
lods
aad
or
push
and
push
pop
repnz
and
mov
sub
aam
das
es
adc
xchg
xchg
xlat
cmpsl
pop
adc
cmp
fdivrl
hlt
call
ret
mov
pop
sub
ja
mov
data16
jp
sbb
or
jno
in
mov
pop
movsl
xor
out
insb
clc
outsb
xchg
dec
xchg
xor
lahf
mov
movsl
and
cmp
xor
and
pop
mov
jb
jmp
xchg
bswap
cwtl
sub
stos
inc
shll
aas
xor
shrb
imul
mov
mov
push
cmp
scas
inc
popa
js
xlat
pop
sbb
imul
dec
adc
add
mov
out
xchg
dec
add
pop
loope
add
sub
test
jmp
jecxz
or
ja
scas
mov
negb
mov
lcall
inc
fs
push
xchg
bswap
push
push
and
je
mov
sbb
dec
ss
pop
pop
ficompl
add
cld
adc
out
imul
rorl
cwtl
loope
pop
inc
cmc
les
andb
sbb
and
aaa
loop
inc
roll
daa
call
xchg
ja
popa
xchg
and
sbb
pusha
imul
test
mov
dec
add
ljmp
xchg
pop
mov
fdivrp
mov
add
hlt
xchg
insb
popf
cltd
push
nop
lods
mov
idivl
out
cmp
push
pop
sub
pop
adc
and
push
in
pop
push
jbe
sbb
push
pop
stos
icebp
or
jle
fsubrl
xchg
int3
loopne
and
arpl
or
inc
inc
lds
lock
push
push
add
jne
push
cmp
sti
or
inc
mov
push
inc
lods
popa
in
not
lea
mov
dec
out
xor
jns
les
inc
inc
mov
fisttpl
fsubl
sbb
test
sub
push
adc
iret
pop
mov
clc
jo
into
and
out
daa
push
aad
pushf
adc
mov
inc
sarb
or
fcmovnbe
push
lods
push
mov
jnp
stos
cli
xchg
out
cmp
jb
cmp
outsl
ljmp
push
sbb
inc
insb
je
mov
lock
jg
fsubr
std
mov
push
jmp
int
xchg
js
fidivl
lcall
mov
mov
subb
subb
mov
test
mov
jle
xor
movsl
enter
xchg
jl
iret
pop
shrb
mov
orb
mov
shlb
lahf
mov
lahf
mov
test
cmp
mov
and
subl
push
mov
out
mov
cmpsb
cwtl
sbb
mov
enter
icebp
mov
inc
jo
loopne
std
pop
mov
sub
jnp
or
stos
pop
sti
imul
mov
cmpsb
mov
idivb
push
sahf
sbbl
pop
call
sbb
sahf
lods
hlt
lds
dec
pop
and
cld
mov
xor
push
ja
iret
pop
add
ret
push
mov
xchg
sub
out
ficompl
and
pop
aad
pop
les
jmp
ret
outsl
mov
fsubrl
lret
jecxz
sbb
fmul
repnz
orb
and
leave
push
xor
mov
inc
lahf
adc
sub
mov
mov
jp
pop
popa
jmp
fucomp
sub
loope
jb
je
and
inc
mov
cmp
cmpl
scas
push
gs
sbbl
push
add
shlb
dec
mov
push
cli
pop
mov
adc
pop
mov
mov
int3
or
cmc
cmc
pop
popa
push
jmp
iret
out
mov
out
adc
ret
incb
mov
sarl
outsl
push
popf
jecxz
mov
scas
mov
pop
jg
cmp
add
push
inc
cmp
int
call
mov
inc
and
aas
xchg
inc
fcmovnb
loopnew
outsb
fucom
xor
iret
add
ja
dec
pushf
and
mov
ret
fs
iret
jmp
sub
jbe
pop
pop
or
mov
je
pop
ret
cli
aad
push
mov
sti
mov
insb
xchg
mov
xor
pusha
xchg
fisttpl
cmp
sbb
xorl
aad
pop
ss
adc
loop
inc
je
fwait
jo
in
enter
gs
inc
pop
sub
mov
lahf
jne
jp
adc
or
adc
popa
mov
pop
repnz
leave
mov
inc
in
and
add
adc
mov
daa
movsb
push
fistpll
jge
dec
pop
sbb
loopne
inc
loop
adc
mov
jmp
xlat
jle
xor
shl
cmp
adc
test
push
insb
mov
dec
adc
and
mov
jmp
xor
jg
fbstp
movsb
or
cli
mov
lds
fiadds
sub
sbb
jae
sub
push
mov
push
out
arpl
mov
mov
in
inc
cmc
jne
fists
enter
jno
jb
sub
dec
and
cmovp
and
pop
mov
mov
loopne
lock
adc
jns
inc
mov
inc
mov
add
xlat
cmp
imul
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
