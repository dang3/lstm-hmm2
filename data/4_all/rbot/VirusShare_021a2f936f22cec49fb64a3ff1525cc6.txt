out
shl
adcb
xorb
into
icebp
mov
frstors
adc
lods
cmpsl
testb
aad
dec
out
sub
mov
das
push
xor
cmp
stos
clc
xchg
mov
xor
lcall
pop
jmp
lahf
mov
sub
fcoml
orl
mov
loopne
ret
cli
rclb
add
aad
and
jp
and
fdivr
in
sbb
hlt
mov
addr16
cs
das
and
cli
mov
xchg
push
jns
ret
arpl
lds
sub
stc
sbb
ds
and
icebp
stc
mov
and
pop
pop
lods
mov
mov
sahf
pop
movsb
fcmovne
hlt
int3
sarb
sbb
mov
std
inc
lret
and
call
and
and
int
pop
and
in
sti
movsb
or
addr16
xchg
fsubrs
js
out
roll
pmullw
adc
in
cmp
add
bound
jmp
pop
xor
xchg
hlt
imul
cmp
inc
stos
jecxz
in
mov
ljmp
out
xor
addb
push
xchg
push
pop
sub
xor
lods
lret
mov
add
mov
jnp
scas
jb
in
jae
mov
insb
ret
das
mov
inc
daa
push
inc
aas
mov
incb
xchg
cmpsl
movsb
adc
movsl
mov
lret
ljmp
adcb
mov
dec
hlt
mov
mov
pop
mov
mov
and
fsub
cmpsl
aas
sub
daa
add
lods
mov
mov
add
ja
mov
ja
fwait
mov
inc
lds
les
mov
lea
push
loop
mov
into
inc
shl
jae
bound
mov
mov
jp
cmp
and
or
test
adc
or
lods
out
aaa
pop
pop
adc
movsl
mov
nop
dec
cmp
lock
mov
adc
sbb
jno
jmp
dec
cmpsb
pop
mov
lock
jne
sbb
notl
mov
jp
pop
dec
sti
rcrb
adc
jg
cmp
movsl
ss
shrl
sbb
and
push
lods
pop
inc
daa
rolb
sbb
scas
sbb
aam
xchg
push
imul
ds
scas
lds
mov
dec
adc
scas
imul
add
clc
cmp
daa
jmp
imul
and
mov
into
ret
ljmp
pop
xlat
or
inc
xor
ljmp
les
push
mov
addr16
and
xlat
jb
sub
jl
adc
xchg
add
cs
push
es
pop
mov
or
pop
pop
sarl
ror
inc
pop
xchg
aam
sbb
lock
mov
ja
adc
xor
sbb
mov
enter
scas
xchg
sub
xchg
mov
jo
and
in
push
outsb
lahf
lea
movsl
adc
or
sbb
push
in
out
or
ss
lret
std
aad
mov
push
ret
movsb
repz
push
lcall
insl
mov
push
cmp
xchg
and
mov
xchg
push
movsl
mov
add
mov
jle
xor
pop
push
dec
data16
xorl
adc
add
adc
cmpb
xchg
add
bound
cmp
movsw
jno
mov
sbb
xchg
adc
je
adc
xchg
loope
push
imul
cmp
insl
pop
mov
es
jp
jmp
sbb
dec
or
fs
mov
push
adc
leave
mov
imul
fadds
cmp
pop
push
mov
pop
stc
add
cmp
adc
or
mov
into
inc
xchg
xchg
cmp
adc
inc
aas
mov
mov
adc
dec
gs
pop
push
cmc
and
insl
test
loopne
inc
xor
mov
test
sub
lcall
mov
or
mov
sbb
sti
shlb
inc
pop
push
roll
pop
push
mov
loopne
rorb
pop
push
pop
enter
cmpsl
mov
mov
popf
jb
inc
pop
jmp
push
or
inc
mov
fdivr
mov
into
cmp
jmp
and
mov
dec
es
test
jge
mov
cmp
hlt
sub
std
es
imul
fidivl
adc
ss
inc
std
jae
pop
dec
fildll
mov
xlat
cwtl
add
and
fldt
repz
ja
pop
xchg
lods
stc
loope
enter
lods
or
rdmsr
or
data16
movsl
cmpl
jecxz
jae
push
dec
cmp
arpl
jg
push
mov
push
movsl
lahf
outsb
jp
xchg
mov
mov
push
mov
data16
adc
or
or
fcomp
dec
add
cmp
bound
mov
iret
inc
mov
xor
stc
test
push
popa
out
adc
push
int3
test
popa
mov
je
shr
push
shlb
sub
pushf
mov
mov
xor
insb
cmp
add
fdivl
xor
ja
dec
lods
iret
out
iret
shl
or
add
inc
adc
rclb
out
and
sub
call
lea
into
and
stos
outsb
ljmp
cs
mov
dec
out
mov
rcrb
fbld
add
lcall
sbb
sub
push
jnp
cmc
cmpsb
mov
sbbb
adc
clc
push
lods
inc
dec
ds
pop
push
push
test
fidivrl
test
andl
xor
xchg
aam
bnd
js
sub
mov
sub
jle
outsl
adc
bound
sti
pop
and
jg
paddsb
xor
pop
push
pop
cmp
cmp
jle
sbb
mov
mov
xchg
mov
dec
sbb
sub
jl
ficoml
push
icebp
scas
dec
pop
movsl
push
enter
pop
mov
cmp
xlat
popf
mov
ljmp
push
mov
loop
enter
loop
jmp
out
ja
leave
xor
pop
test
imul
ficomps
xchg
jae
sub
adc
add
pop
test
mov
inc
or
xlat
mov
fcmove
imul
loop
mov
sub
lcall
test
and
pop
inc
mov
fs
out
int3
iret
into
dec
pop
jg
rcl
pop
rcrb
testb
adc
add
push
pop
inc
cmpsl
mov
cmp
sub
test
dec
enter
mov
roll
dec
lods
mov
sbb
fcmovnu
dec
or
mov
adc
mov
and
nop
pop
xchg
mov
pop
xor
mov
pop
sub
insl
add
fs
jg
adc
dec
int
sub
adc
and
arpl
xchg
add
fisubrl
ret
popf
outsl
dec
les
movsb
push
and
mov
jmp
mov
mov
je
pop
sub
and
sbbl
mov
push
out
pushf
inc
xchg
stc
mov
faddl
jae
mov
fnsave
imul
jo
shl
jecxz
ret
pushf
es
inc
dec
sbb
cld
loop
xchg
rolb
cmpsl
pop
xchg
jnp
mov
stc
fadds
mov
mov
test
nop
stc
icebp
aaa
or
mov
stc
ret
and
lea
nop
fwait
push
int3
push
popa
sbb
cmp
xor
cmp
popa
psrad
mov
out
mov
das
adc
jecxz
pop
mov
enter
stos
jle
mov
mov
fildll
push
sub
in
pop
mov
cmp
pop
adc
inc
mov
mov
daa
outsb
mov
mov
in
jo
push
pop
cmp
adc
jno
mov
ljmp
mov
jg
adc
fstpl
aad
in
addr16
subb
sbbb
ja
and
stos
mov
mov
jno
sub
jnp
cmp
call
decl
dec
or
mov
das
arpl
xor
fistps
cmp
pop
jnp
repnz
pop
out
fwait
sahf
inc
sbb
mov
push
jae
fldenv
cs
insl
pop
std
or
shrb
mov
std
popf
xor
push
enter
adc
bound
lret
adc
jnp
aaa
xchg
push
pushf
adc
adc
jmp
int3
add
mov
imul
subl
nop
lret
imul
ja
jl
movsb
mov
jge
cmp
test
add
aaa
xchg
rcl
inc
sbb
movsb
sbb
mov
cmp
das
push
jg
in
pop
mov
test
cmc
out
push
pop
test
or
cmpsb
add
insl
leave
out
aam
inc
into
xor
clc
in
and
enter
stc
out
fwait
out
aas
push
jmp
inc
rsqrtps
pop
and
adc
xorb
pop
jb
cmc
lods
xchg
mov
lret
mov
addr16
mov
jecxz
call
cmp
add
loope
xor
mov
mul
mov
cld
mov
pop
cmp
xor
ret
hlt
mov
pusha
push
dec
hlt
jbe
or
mov
outsb
cmp
call
out
out
das
mulps
dec
pop
std
cmc
lcall
mov
jecxz
js
cmp
mov
pop
enter
mov
adc
sarb
xor
add
shrb
shll
xorb
pusha
js
cli
in
push
adc
das
sbb
hlt
and
pop
stc
inc
fadd
jg
les
faddl
xor
jmp
cmp
imul
loop
xchg
sarb
flds
pushf
aad
hlt
data16
leave
xor
cmp
add
call
cmp
pop
sub
and
test
mov
inc
in
enter
cmp
jp
sbb
adc
ret
lock
repz
lods
and
cmp
movsl
jl
imul
loop
and
add
repz
fisttpll
fld
in
sbb
or
jmp
enter
jne
sbb
mov
jmp
jbe
sub
ljmp
xor
sub
and
push
adc
fcomps
xor
pushf
and
scas
sub
cld
test
sbb
adc
jecxz
into
pop
jle
test
insl
rcrl
leave
imul
jo
call
mov
sub
les
loopne
push
fildl
sub
jmp
fdivrs
jp
add
dec
pop
add
imul
xchg
mov
or
jmp
push
inc
pop
es
sti
mov
insb
and
jmp
push
or
fwait
movsl
dec
in
stc
lret
inc
je
mov
and
mov
aaa
or
stos
scas
mov
adc
jne
sbb
mov
mov
mov
shr
ljmp
cld
pop
out
ds
push
mov
lret
push
gs
and
repnz
add
fstps
cmp
cmp
lock
incl
mov
pop
imul
insl
push
adc
outsl
xchg
dec
xor
lods
adc
mov
add
mov
adc
not
mov
enter
ja
mov
pop
sbb
test
cli
mov
hlt
jb
movsl
mov
clc
jbe
lret
shlb
push
sbb
push
imul
pop
xchg
mov
and
mov
jne
scas
jecxz
push
repz
push
out
pop
out
test
fdivrl
testb
and
inc
push
inc
test
or
enter
lahf
pop
xchg
sbb
push
outsl
jmp
jmp
ljmp
ja
mov
cmpsb
cmpsl
pusha
xlat
and
sbb
std
cltd
push
jbe
xchg
or
idivb
js
mov
les
cs
mov
fsubl
outsl
inc
and
and
cmp
push
leave
sbb
lds
pop
into
or
and
cmp
sbb
pusha
in
ss
and
xchg
push
int
movsb
ljmp
int
das
fmull
push
sti
sarl
or
insb
pop
add
pop
sbb
fwait
stos
sti
das
or
push
fists
outsb
mov
pop
push
or
pop
icebp
inc
loope
add
or
ret
jb
cmp
pop
in
and
xchg
jp
movsl
pop
inc
cmc
jecxz
mov
sahf
aad
aas
push
and
pop
shrb
jecxz
aad
idivl
jb
jno
sub
xchg
cmpsb
xchg
pop
test
add
mov
and
jge
fs
jne
out
cmp
xchg
sbb
icebp
sbb
push
outsl
cli
cli
jge
out
cltd
ljmp
or
and
push
lock
cli
test
out
ja
mov
outsb
jae
cmpsb
lret
mov
add
dec
pop
mov
add
jb
subl
push
mov
or
add
out
cli
fmuls
mov
in
dec
repz
or
out
inc
xlat
and
mov
in
xor
mov
shlb
adc
pop
pop
push
dec
inc
stc
arpl
and
scas
jge
xor
and
jmp
xor
fisubrs
js
lahf
popa
jmp
fldenv
push
arpl
jle
mov
leave
stos
push
xor
lea
movsl
imul
cmpsl
cwtl
mov
sarb
ret
push
and
rorl
jl
data16
jns
mov
mov
dec
push
fisttpll
and
cmp
sbb
cmp
sub
lds
andb
imul
cld
or
pop
ret
adc
mov
add
pop
bound
and
outsl
insl
mov
or
fadds
and
lahf
fmul
in
adc
mov
ljmp
jle
lahf
loopne
sub
mov
loop
mov
aam
jmp
das
sbb
mov
or
jp
mov
jg
jle
subl
jmp
ret
lods
cmp
sub
pop
push
adc
ficomps
bound
add
pusha
movmskps
leave
in
and
fst
push
dec
repnz
xor
mov
rclb
adc
jmp
lret
push
mov
push
inc
inc
cmpsl
inc
or
push
mov
sbb
daa
jno
das
pop
pusha
xlat
and
addr16
fldlg2
cvtps2pi
insb
call
js
movsl
je
jge
loope
fdivl
and
test
sbb
cmp
shr
movsl
push
push
clc
push
xor
sbb
scas
dec
sahf
adc
shrl
pop
loopne
addr16
xchg
mov
in
in
mov
pop
mov
fidivrl
mov
outsl
icebp
dec
sarb
cmp
ss
add
and
iret
push
sbb
push
jnp
arpl
jg
fwait
mov
pop
pop
push
xchg
mov
loope
js
jmp
ror
adc
test
pop
hlt
adc
ret
pop
adc
jge
lods
and
mov
ds
test
pop
call
fwait
pop
gs
int3
sbb
lcall
mov
repz
sti
jle
fwait
cmpsb
cmp
es
lods
push
mov
rorb
xchg
sub
mov
pop
loopne
outsl
imul
jne
in
cmp
fstps
stc
cmc
ljmp
push
jl
test
iret
adc
jl
xchg
sbb
int3
push
sub
and
pop
mulb
lock
in
mov
lock
sbb
loopne
and
mov
loopne
and
sub
sub
mov
test
and
and
jl
lods
in
fwait
dec
push
cmc
aad
fcmovnu
leave
or
leave
jmp
dec
mov
in
cld
stos
cmp
aaa
jl
pop
test
adc
jg
push
ret
mov
add
mov
and
and
and
adc
cld
adcl
inc
jns
cs
jle
stos
lret
mov
mov
pop
mov
les
mov
aaa
or
data16
push
mov
mov
rclb
inc
ljmp
lret
mov
loop
jl
and
mov
push
and
cmp
shlb
pushf
movsb
mov
inc
lds
mov
xchg
cmpsl
fsubrl
div
pop
pusha
sub
cmpsl
js
aad
jl
mov
mov
mov
outsb
in
test
sub
call
jge
mov
leave
test
arpl
and
popa
sub
out
lods
mov
icebp
add
xor
leave
dec
mov
imul
lret
add
push
push
cmpsb
jns
mov
sub
ljmp
fcomps
fimuls
dec
push
mov
push
leave
push
jl
jmp
cmp
movsb
mov
mov
inc
out
jnp
add
fdivl
ja
add
mov
dec
or
pop
jbe
and
mov
lret
jne
movsb
dec
sbb
mov
cmp
inc
mov
cmp
lret
je
cltd
xor
jb
cmpsl
mov
in
jnp
popf
insb
mov
xor
pop
mov
fcoml
jp
mov
pop
sub
push
add
pop
test
xchg
orl
test
cmp
mov
enter
adc
sti
and
mov
mov
dec
sbb
add
or
in
lock
mov
scas
lea
push
sarb
fs
adc
arpl
scas
mov
je
mov
push
dec
sbb
add
in
push
mov
jmp
mov
lcall
fsubs
or
js
in
aad
sbb
push
mov
xchg
mov
pop
jge
mov
add
jnp
sub
dec
testb
adc
ljmp
je
fadd
adcl
mov
enter
pop
fldl
inc
inc
xor
cltd
mov
push
in
and
xchg
or
pop
sbb
stos
es
jecxz
lock
cmp
add
xchg
mov
and
add
push
inc
xchg
in
dec
pusha
out
fsubl
dec
push
cmpsb
repnz
addr16
sbb
adc
leave
bound
sarb
sbb
push
sbb
test
repnz
cmpsl
pop
repz
sub
xchg
int3
bound
int3
add
or
das
rolb
pop
cwtl
mov
rol
mov
push
dec
repnz
test
jnp
imul
sahf
mov
push
pop
push
fnstenv
sar
insl
cmp
adcl
inc
sahf
sbb
rcrb
mov
in
jno
nop
mov
mov
int
pop
xchg
mov
cmc
in
xchg
pusha
sbb
stos
ds
popf
ss
stos
xchg
inc
xchg
sbb
imul
test
push
mov
push
ds
mov
xor
cmp
sub
dec
jg
out
ret
pusha
lods
jae
jle
cs
mov
pop
stos
lcall
in
and
std
or
xchg
lret
adc
push
and
mov
sub
xor
mov
enter
pusha
das
cmp
cmpsl
loop
fldcw
adc
sub
lods
xchg
es
into
or
adc
bound
xchg
lret
lods
sub
aam
pop
in
or
repnz
cmpsl
iret
push
je
loop
enter
mov
inc
adc
pushl
pop
test
adc
and
clc
xor
inc
or
std
ficompl
hlt
ds
pop
pop
lods
xchg
cmc
movsb
sub
push
push
add
dec
nop
dec
loopne
mov
sarl
ret
fwait
xchg
dec
les
ret
sbb
sbb
rcrb
out
jnp
cmp
pop
sub
mov
sbb
jb
test
mov
loop
into
lock
add
pop
fcoml
sub
mov
lret
sbb
jle
out
pop
pop
popf
int
and
insb
push
jmp
adc
mov
and
sub
rolb
xchg
and
inc
cmpsl
mov
test
stos
inc
loop
mov
movsl
es
fdivs
scas
jg
cmpsl
mov
jp
push
mov
out
mov
pop
int3
lock
mov
mov
cwtl
leave
adc
int3
loope
lds
sub
adc
and
insl
dec
push
push
pop
mov
cld
scas
cmp
enter
fucom
clc
fldcw
ja
cld
xchg
or
xorb
lcall
fnstenv
shll
stos
xchg
sti
into
pop
lahf
or
ja
movsl
popa
push
adc
xchg
sub
mov
jecxz
mov
sar
inc
in
push
add
mov
mov
and
out
and
sub
xchg
inc
jne
daa
outsl
push
sub
ss
out
je
ret
arpl
push
jge
jg
inc
add
lock
mov
ljmp
es
dec
push
out
xor
or
lcall
test
shlb
xchg
pop
sbb
jae
out
test
incb
jb
fbstp
xor
mov
pop
dec
lahf
fwait
jp
jp
jecxz
mov
push
int
cs
rcll
insb
scas
mov
sbb
bound
or
arpl
and
xchg
arpl
mov
push
rcrb
bound
call
xchg
xor
call
daa
dec
mov
and
jle
fwait
mov
cwtl
push
pop
fdivp
daa
aaa
jnp
mov
lock
fisubs
mov
mov
and
xchg
mov
loope
inc
dec
icebp
add
ja
and
inc
jmp
enter
fcmovu
lds
xor
xchg
and
bound
and
jnp
stos
fnstsw
call
jnp
and
dec
fdivl
idiv
sbb
mov
aaa
adc
sub
cmp
out
fdivl
dec
jno
add
xlat
lea
pop
xchg
mov
test
and
cld
mov
mov
dec
xor
mov
cmpsl
inc
aaa
mov
loope
or
out
mov
clc
call
or
je
adc
jecxz
or
stc
loop
adc
lret
jmp
mov
addr16
add
push
xchg
subb
in
sbb
dec
lret
cmp
push
push
dec
jp
into
and
cmp
mov
ret
rep
aad
aas
sarb
jl
lods
dec
jmp
inc
pop
inc
pop
jge
das
mov
adc
inc
sub
push
inc
das
stos
sti
dec
daa
sub
mov
mov
or
inc
enter
pop
imul
pop
or
ja
notl
aas
xor
or
jno
xchg
and
and
orb
mov
stos
es
or
pop
lods
adc
sub
pop
xor
inc
stos
je,pt
int
dec
lods
adc
imul
cli
iret
mov
push
arpl
sub
daa
cmpsl
push
mov
jb,pn
into
sbb
push
shlb
sbb
or
mov
mov
out
inc
mov
mov
sbb
into
out
frstor
sbb
cmpsl
sub
pop
xchg
aaa
mov
cli
sub
in
push
adc
and
sbb
sub
sti
mov
movsb
inc
mov
jp
adc
adc
mov
lret
mov
int
repz
or
or
out
add
mov
mov
xor
push
in
jnp
in
sub
clc
adc
mov
mov
xlat
or
xor
iret
ret
mov
es
ret
push
pop
mov
pandn
jae
add
jp
mov
outsl
lret
dec
sbb
mov
cmpsl
flds
cs
ror
cwtl
push
add
jae
mov
nop
jge
and
mov
jns
je
mov
call
sbb
cld
fists
roll
insl
and
int
sbb
pop
and
mov
xor
mov
add
jg
fs
nop
add
pop
mov
popf
sub
xchg
sbb
fsubrl
shll
cs
and
cld
addr16
push
sti
xor
pop
and
push
and
mov
sbb
je
data16
aam
popa
cmp
je
pop
inc
inc
jo
add
sbb
jmp
int
shl
sub
icebp
insb
jnp
lds
sbb
sbb
frstor
adc
call
xchg
fnstenv
iret
ds
xor
push
push
lock
mov
clc
cli
cmp
call
ret
enter
mov
mov
mov
xorb
dec
sti
sub
pop
adc
int3
lahf
repnz
cs
fistpll
sbbl
adc
imul
push
xchg
jmp
insl
ja
adc
lret
je
test
stos
faddl
inc
loope
mov
mov
shrb
sub
es
fistps
and
in
pop
out
push
and
shrb
das
inc
scas
cld
and
cmp
mov
sub
sub
inc
loop
jle
aaa
stc
insb
dec
sbbl
ret
outsl
les
sarl
arpl
jg
mov
mov
data16
and
or
out
push
cmp
pop
addr16
mov
pop
push
adc
and
inc
xor
cli
dec
pop
pop
js
cmp
jp
and
out
mov
cmc
nop
shlb
jecxz
dec
int3
mov
and
repnz
push
lods
mov
fisttpll
pop
adc
sahf
aaa
lods
enter
js
inc
and
and
sbb
jp
mov
and
sub
and
jecxz,pn
push
pop
jge
mov
mov
adc
sbb
adc
in
pop
ret
test
mov
jbe
fdivl
pop
cli
mov
int3
lcall
pop
lret
sbb
lcall
jg
fs
andl
fdivs
mov
and
mov
and
mov
fisubl
cltd
in
bound
test
mov
data16
sbb
enter
iret
mulb
xchg
lret
andb
mov
loopne
adc
push
and
mov
ljmp
pop
lcall
mov
call
inc
addl
push
push
adc
cmp
inc
rcll
sarl
mov
inc
adc
int
aas
fidivrs
pop
popa
sbb
rcll
mov
inc
inc
mov
loopne
cmp
xchg
sub
lds
mov
ss
inc
and
in
aas
loop
adc
jle
outsb
les
test
and
enter
cmpsl
adc
movsl
leave
insl
and
cwtl
jl
loop
mov
call
sti
loopne
inc
rorb
addr16
mov
mov
cs
int3
in
call
sbb
jg
rorb
jg
jmp
addr16
mov
iret
stc
xor
in
sub
bound
jle
jae
push
orb
mov
mov
jp
stos
or
jl
add
inc
adc
jb
jecxz
fcoms
and
orl
lods
and
pop
push
ret
mov
mov
dec
mov
mov
loop
and
xchg
jg
pop
mov
popa
xchg
mov
pushf
jmp
addr16
mov
rol
test
mov
xchg
pop
adc
out
mov
mov
into
je
and
push
imul
adc
adc
ljmp
sbb
dec
sti
xor
lods
mov
rcrl
inc
and
pop
aaa
pusha
ficompl
lds
pushl
das
pushf
decb
pop
gs
mov
shlb
adcl
xor
cwtl
fimuls
and
pushf
xor
dec
bound
pop
sbb
out
hlt
adc
mov
mov
sub
ja
and
dec
into
and
and
or
pop
mov
and
push
loope
jp
pusha
jg
mov
mov
jle
movsb
cs
cli
mov
jo
stos
or
mov
lret
sub
loop
inc
xchg
lahf
mov
shlb
sbb
ret
iret
sbb
or
pop
fildl
xor
ljmp
and
or
xor
sub
pop
mov
sbb
test
enter
imulb
lds
mov
in
inc
and
in
mov
enter
and
jmp
xor
cmpsl
clc
imul
mov
mov
in
sbb
aam
pop
call
sub
jg
test
nop
or
mov
in
add
adc
push
stos
push
das
cmp
jecxz
mov
rolb
push
bound
adc
pop
bnd
jg
mov
movsl
add
lds
fucom
mov
enter
imul
jmp
and
adc
ret
mov
xor
mov
sub
sbb
cmp
inc
add
mov
jno
push
lret
add
sbb
jge
and
fs
fsubrl
rcll
pop
jp
testb
add
into
push
cli
xchg
add
adc
int
push
jl
xor
inc
mov
loop
push
jle
dec
shll
addb
in
sbb
sbb
jo
mov
pop
inc
bound
lods
and
imul
mov
lods
gs
imul
mov
xor
xchg
repz
movsb
sub
xchg
push
or
pop
bound
sub
xchg
inc
nop
cmp
or
lret
jmp
bound
mov
mov
and
or
pop
push
adc
ss
cmp
sti
sbb
cmc
out
aas
jmp
cmpl
mov
aam
shrb
stos
int
ss
ret
xor
cmpsl
xchg
push
test
jle
add
xor
fsubrp
dec
mov
in
mov
adc
out
mov
in
add
je
into
ja
xchg
fistps
fstps
daa
pop
cmpsl
jle
repz
ret
fldl
repz
sarl
lcall
pop
jbe
mov
loop
mov
inc
mov
popf
mov
fstl
movsb
pop
test
xchg
dec
or
mov
mov
pop
ficompl
mov
ljmp
push
pushf
scas
imul
out
mov
add
lahf
mov
imull
in
pop
add
jg
cli
mov
adc
mov
enter
pop
sbb
repnz
and
lcall
mov
data16
popa
aaa
xchg
aam
fidivs
push
and
fwait
xchg
mov
cmp
cmp
fwait
cmp
out
les
mov
sub
dec
mov
sbb
sub
les
dec
fsub
adc
xchg
int
das
adc
std
mov
test
inc
fs
arpl
loop
movsl
pop
pop
cmp
fwait
push
roll
jg
loope
arpl
sbb
sti
jbe
mov
cwtl
loop
dec
add
aam
fstps
das
addr16
push
pusha
cli
movsb
sbb
shrb
xor
in
shll
inc
pop
pop
dec
mov
sbb
mov
lcall
cmp
mov
mov
add
or
push
sbbb
mov
call
scas
inc
out
push
call
in
push
pop
or
push
fcompl
rclb
sbb
and
mov
outsl
pop
shlb
mov
leave
ficoml
clc
iret
mov
fwait
nop
pop
pop
adc
pop
push
adc
lcall
aas
insl
adc
lahf
aam
mov
push
jp
fists
out
xlat
jmp
or
jno
lret
mov
mov
push
call
sahf
xchg
fisttps
cmovs
stc
jmp
cli
mov
push
push
ljmp
int3
or
scas
aaa
push
aas
jnp
fs
sti
inc
dec
add
shlb
jge
sbb
int
push
int
out
xchg
mov
iret
pop
pop
xlat
mov
dec
sbb
sub
test
jb
sbb
jg
adc
mov
fisttpll
jge
call
addr16
cmpsl
add
xchg
jo
popf
loope
inc
imul
push
dec
int3
mov
or
jp
and
push
adc
xchg
mov
fsubrp
mov
or
addb
push
cmp
in
or
mov
in
mov
stos
sub
das
lret
push
sbb
int
adc
and
push
ret
mov
test
subb
mov
xchg
pop
sbb
lahf
loop
mov
daa
jecxz
dec
imul
ss
stos
and
fisubl
push
push
clc
out
ss
and
fldenv
xor
cmpsb
xchg
cmp
mov
mov
pusha
cmp
pop
int
or
in
stos
pushf
sub
shrb
mov
data16
ja
push
push
sub
push
jnp
fisubrl
ss
lcall
push
xor
mov
cmp
add
mov
xchg
sbb
pop
mov
xor
push
int
adc
mov
sbb
adc
int
pop
mov
cmpsl
mov
mov
mov
sbb
ss
loop
sti
in
int
scas
dec
out
mov
hlt
push
xor
lds
pop
and
shrl
inc
fdivrp
addr16
mov
scas
mov
jge
and
insl
mov
aas
ret
jp
jge
wrmsr
mov
mov
in
mov
sub
jne
sbb
popa
loopne
pop
in
sahf
mov
push
repnz
out
mov
out
arpl
shr
adcb
mov
stos
fldenv
xchg
or
in
push
incl
cmp
dec
mov
xchg
or
mov
xchg
jmp
out
pusha
lock
pop
xor
push
add
mov
aam
arpl
xor
and
pushf
sub
cmpsb
fisttpll
fwait
ret
lahf
cltd
movsl
sbb
ds
je
out
lret
xchg
loopne
pop
fwait
std
into
mov
fdivl
scas
jl
xchg
or
and
mov
dec
fwait
cmpsb
fiadds
les
add
xchg
imul
out
xor
jmp
add
fildll
adc
fsubr
sarl
push
cmp
int
into
push
mov
cmpsb
ret
and
push
ss
xor
sbb
bound
fcompl
jbe
cwtl
mov
cmpsl
xchg
cltd
nop
jecxz
xor
cmpl
jmp
sti
fdivrl
push
mov
cli
dec
add
pop
jle
push
jecxz
das
jb
inc
data16
xchg
dec
loop
arpl
in
out
xor
mov
jbe
sbb
loopne
mov
add
pop
mov
sti
rorl
push
add
jg
cs
sti
inc
les
jecxz
cmpsb
jbe
push
mov
andl
sahf
addr16
pop
push
cmp
repz
fsts
out
test
and
mov
inc
das
shrb
xchg
jb
lfs
mov
mov
mov
enter
pop
dec
jb
mov
aad
icebp
andb
addr16
mov
mov
jns
shlb
sub
xor
fdivl
inc
fdiv
inc
xlat
mov
push
add
lds
movsb
aad
mov
ljmp
insb
adc
mov
mov
pop
adc
push
sahf
fadd
mov
fisubrs
cmc
andb
mov
xchg
mov
add
inc
rorl
xchg
mov
mov
dec
rcrb
sbb
pop
add
fsubrl
sbb
mov
mov
pop
aas
into
mov
mov
push
add
cltd
js
fcoms
inc
into
mov
daa
mov
xor
mov
xchg
jnp
inc
ja
pop
xchg
inc
xlat
roll
pop
mov
mov
pop
cmp
fdivl
dec
js
adc
popf
adc
jmp
cmpsl
std
jl
xchg
std
pop
dec
jl
es
outsb
lcall
jle
or
inc
or
lock
pop
ret
aam
loope
stc
addr16
or
mov
xor
out
mov
int
aad
icebp
push
dec
stos
ret
out
or
mov
mov
push
adc
pop
xor
sarl
inc
mov
fmul
movsb
sti
insb
cmc
adc
add
sarl
and
imul
lods
adc
insb
rcrb
addr16
jl
movsl
xorl
xor
lahf
rcrl
xchg
sbb
or
out
inc
roll
cmpsl
dec
add
cmp
out
push
inc
movb
inc
int3
add
sub
dec
inc
ficoms
ret
aas
xlat
add
lds
or
mov
or
movsl
mov
mov
fwait
dec
data16
fsubrl
xorb
fstps
and
movswl
xchg
test
pop
sub
cmc
ja
cmp
in
sbb
test
sub
and
aaa
cmp
adc
pop
cmp
add
sub
sub
data16
push
xchg
mov
pop
push
mov
mov
jb
xor
cmpsl
push
mov
xor
mov
popa
cmc
mov
insb
inc
sti
aaa
jns
mov
pop
into
ja
mov
lret
mov
gs
lods
loope
or
or
stc
jl
xchg
pop
sbb
sbb
movsb
push
lea
loopne
shll
ret
xchg
icebp
pop
repz
push
push
mov
imul
cli
enter
in
jnp
push
sbb
int3
pop
xor
add
fs
lods
dec
xor
and
mov
rcr
cli
add
arpl
xor
outsl
adc
mov
xchg
loope
or
fidivrs
cli
dec
and
inc
pop
dec
sbb
test
mov
cmp
push
sbb
pop
outsl
repnz
adc
push
ret
add
popf
jmp
or
mov
movsb
adc
mov
sub
inc
mov
lods
mov
movsl
push
scas
test
xlat
scas
mov
mov
mov
push
fldt
or
lock
adc
rorl
scas
pop
jle
xor
sbb
sbb
push
or
imul
mov
inc
push
hlt
stos
andl
dec
mov
inc
cmp
inc
mov
sub
cmpsl
dec
bnd
mov
adc
cli
cmp
das
jge
xchg
ds
iret
iret
cmp
fcoms
cmc
js
in
shl
jge
cli
xor
ljmp
sti
mov
jg
enter
inc
pop
sbb
ss
rolb
sub
pop
pusha
bound
push
sbb
jp
xchg
scas
loop
mov
insb
sub
inc
push
lods
mov
iret
mov
aad
test
pop
inc
mov
dec
pop
cmpsb
add
in
scas
push
mov
in
jle
or
adc
dec
les
push
iret
push
mov
jg
pop
cmp
xor
and
push
jle
add
int
cmp
mov
sub
es
test
adc
es
sbb
cmpsb
lods
or
dec
repz
push
push
orl
nop
fwait
and
and
dec
cmp
outsb
pop
jmp
mov
mov
lods
pop
add
pop
cmp
jecxz
and
cmc
sarl
sub
scas
mov
insl
or
or
and
enter
out
je
dec
cmp
hlt
adc
xchg
sub
ret
movsl
push
sti
stos
inc
aaa
lahf
enter
or
xor
and
je
pusha
data16
and
push
mov
in
imul
fiadds
or
imul
test
mov
cld
test
sbb
push
cmp
xchg
cmp
hlt
push
aas
push
add
loop
mov
cmpsb
lea
and
fs
hlt
aam
pop
sub
cmpsl
jno
adc
jne
ret
vpmaxub
pushf
popa
rcrb
decl
iret
mov
in
sub
lods
xor
out
mov
jl
mov
jo
cmp
cmp
fbld
sbb
jo
aaa
loop
mov
insb
movsb
iret
aaa
lods
jb
incb
in
cmp
push
dec
push
loop
inc
shrl
aad
sbb
fildl
cmp
push
daa
pop
stos
rol
adc
dec
mov
shl
xchg
mov
mov
mov
add
xor
popf
cmpsl
fs
aam
scas
xor
push
mov
jnp
iret
rolb
call
cmp
mov
std
jge
xchg
sub
adcl
mov
shl
mov
and
int3
adc
mov
xchg
daa
fldcw
outsb
xchg
popa
push
and
pop
test
fs
test
cmp
xlat
mov
jo
push
test
cld
pop
loope,pt
push
jae
and
push
or
imul
outsl
sub
mov
insl
sbb
jle
pop
popa
pop
in
pop
and
mov
and
dec
loop
out
jp
imul
test
pop
repnz
xor
aam
cmpsl
jle
inc
mov
fs
mov
sbb
movsl
adc
outsb
call
in
dec
inc
sbb
test
jp
adc
rcrb
mov
sub
pop
sbb
adc
inc
es
popf
ds
inc
inc
mov
andl
adc
sbb
enter
mov
mov
sti
clc
shl
rorl
cld
cmp
xorl
mov
mov
mov
push
and
ficomps
sar
mov
fistps
and
daa
in
dec
lods
inc
out
adc
mov
rorb
ljmp
roll
push
inc
cmp
sub
mov
inc
rclb
mov
scas
pop
std
sbb
xor
pushf
pop
push
ret
push
add
addl
and
popa
fdivrp
xor
and
dec
cmp
xor
ds
dec
adc
sarb
push
cli
add
fs
or
mov
pop
and
daa
mov
cmpsb
mov
sub
aad
push
popa
pop
cli
enter
push
sub
lcall
lret
xor
inc
mov
jg,pn
fucom
pop
cmp
inc
outsl
in
sub
mov
lret
loopne
add
stos
imul
pop
pop
aam
add
sbb
repz
in
repz
scas
fiadds
dec
sbb
add
mov
js
je
ds
leave
jae
fisubl
xchg
cmp
pop
sbbl
xor
aad
aam
sub
inc
pop
and
dec
scas
xchg
mov
add
scas
stos
cmp
shl
lods
mov
imul
or
scas
sti
jecxz
sub
mov
fs
sub
mov
das
add
jb
outsb
jmp
leave
xor
dec
rcll
mov
fdiv
int3
cmp
dec
adc
in
adc
push
or
loop
mov
imul
pop
icebp
inc
in
movsb
jecxz
out
sub
cltd
fsubp
and
xcrypt-cfb
cmpsl
loop
cli
sub
push
loope
cld
adc
es
test
retw
inc
xchg
pop
scas
sbb
rol
scas
sbb
lcall
or
xlat
das
in
cmp
and
test
ja
sub
ret
out
push
test
pop
imul
lret
pop
inc
mov
xchg
dec
outsb
or
mov
das
mov
rcrl
dec
mov
and
cmp
inc
loopne
xor
into
fists
mov
mov
cmpsb
push
jmp
mov
outsl
enter
sub
adc
fcmovne
mov
inc
jbe
jmp
sbb
add
shrb
mov
inc
mov
push
pop
xchg
lahf
dec
out
mov
rol
mov
clc
notl
add
pop
mov
rol
int
cmpb
push
sbb
arpl
pop
or
mov
inc
push
push
es
insl
rcrb
sbb
aaa
ret
and
mov
xchg
or
pusha
test
or
clc
sub
xlat
leave
dec
xchg
mov
cmp
push
sub
mov
rorl
or
rorb
jnp
sbb
and
mov
add
outsb
sub
js
insb
lea
test
push
xchg
dec
add
push
mov
stos
scas
ret
cld
and
sbb
movsl
mov
and
add
scas
add
daa
insl
mov
bound
cmp
test
or
test
test
pop
aas
jp
arpl
inc
mov
jnp
or
push
jle
in
xchg
in
rorl
fwait
in
rol
sbb
aas
mov
mov
pushf
push
push
fs
sub
sbb
push
sahf
ja
shlb
pop
dec
ret
iret
mov
rcrl
xchg
cmp
adc
arpl
cmc
push
sar
sbb
mov
mov
lret
cld
cmpl
lods
lahf
lods
stos
movsb
out
test
in
mov
pop
fxch
mov
cmp
aas
and
cmpsb
jmp
mov
mov
daa
sbb
arpl
bound
lcall
inc
xchg
pop
sub
dec
mov
arpl
adc
adc
stos
jbe
adc
lret
movsl
in
int
test
cmp
loop
repz
rclb
add
imul
insb
dec
mov
cmpsb
cmp
fwait
ret
dec
add
lcall
jb
rorb
jno
push
scas
in
mov
dec
xchg
push
fcomps
lods
pusha
mov
fistpl
int
ss
mov
or
lock
adc
push
inc
pop
dec
jge
jmp
js
inc
fcomps
je
fnstsw
cmp
enter
nop
iret
or
movb
inc
pop
mov
pop
jmp
xor
and
pop
ss
btc
add
pop
and
jg
jp
add
pop
sahf
or
pusha
scas
or
xor
or
stos
mov
mov
and
or
jb
out
sbb
ja
add
call
pop
jb
and
mov
add
monitor
aam
pop
cwtl
dec
jb
lea
sbb
mov
adc
mov
cmova
xchg
outsb
push
mov
mov
dec
ds
xor
stos
mov
fnsave
pop
dec
adc
adc
jbe
sbb
fsubs
push
bound
xor
outsl
imul
xor
test
push
mov
dec
adc
scas
cmc
inc
jmp
sarl
out
adc
xchg
loop
pop
cmp
lds
cli
cmp
mov
cmp
add
gs
pop
mov
arpl
add
out
lods
dec
xchg
inc
cld
mov
or
roll
call
lahf
pop
lods
inc
jne
xor
jnp
repnz
mov
and
cli
adc
aad
push
scas
sub
movsl
in
lahf
mov
fildll
inc
imul
inc
lea
push
mov
sub
dec
sbbb
sub
or
mov
nop
test
btr
jge
sub
cli
mov
lcall
push
lods
cltd
sub
xor
pop
lds
push
data16
pop
mov
xor
jae
pop
dec
ficomps
xchg
lret
pop
inc
add
jns
test
add
daa
dec
mov
subb
sbb
sub
inc
lret
push
loop
das
out
and
inc
pusha
test
add
in
sbb
mov
pop
and
int
aad
inc
aad
fisttpl
insl
xchg
dec
lcall
adc
cmpsb
pop
or
and
sbb
loopne
rolb
das
lods
mov
lds
jo
lods
jp
push
cmp
dec
jp
dec
in
dec
xor
mov
adc
test
ss
test
in
pop
add
xchg
pop
mov
mov
xchg
xor
sbb
mov
xorl
cmpl
xchg
mov
scas
inc
bound
in
xchg
jne
sub
push
pop
jle
imul
and
fidivl
bound
pop
pop
stos
je
bound
incb
test
sub
xchg
and
ss
mov
enter
lods
movhps
mov
push
sti
xor
lea
sub
mov
or
aam
stos
sbb
bound
pop
stc
add
push
adc
push
push
faddl
dec
push
sub
ret
or
clc
lods
sub
out
and
sub
out
push
hlt
add
lods
xchg
xor
cmp
and
sbb
dec
outsb
popf
pop
xchg
push
pop
outsl
int3
inc
movsl
xchg
or
fdivrl
pop
movsb
movsb
jbe
lea
aaa
imul
pop
push
push
int
cmp
or
jp
pop
movsl
and
shlb
mov
sbb
dec
mov
int3
jmp
test
sti
lret
call
pop
add
jae
push
ds
inc
mov
dec
or
cmp
test
cmp
subl
xchg
mov
dec
inc
adc
sub
into
outsl
packssdw
pop
or
and
inc
jl
das
outsl
xchg
lea
jne
fildll
push
lods
sub
cmpsl
loop
movsb
and
push
nop
mov
in
sbb
cmpsl
fnsave
fsubl
sbb
inc
xchg
and
sbbb
sub
es
pop
push
enter
repnz
sbb
cld
mov
addr16
xchg
cmc
outsl
push
bound
push
jo
dec
push
or
push
out
pushf
insb
repnz
jle
pop
add
and
lret
cs
aam
sub
test
fsubrl
fcmove
mov
push
cmp
inc
pusha
and
lods
xlat
mov
rcrl
add
sbb
push
or
jg
inc
mov
fcoml
negb
lds
aas
ss
ds
pop
xor
lcall
xor
jecxz
test
add
dec
add
movsl
data16
fsubrl
insb
mov
pusha
adc
adc
sbb
sbb
pop
mov
shrb
ja
imul
cs
push
jecxz
test
ss
mov
gs
in
push
rol
xchg
xor
in
lcall
mov
int
outsb
lds
mov
insb
ror
fldcw
cs
jg
jp
cmpsl
loope
mov
xchg
pop
adcb
lds
sub
jg
pushf
lds
mov
xor
ret
cli
xor
stos
int3
stc
dec
sub
insl
mov
xchg
addr16
and
or
test
test
fmull
lret
test
xor
inc
call
icebp
jecxz
add
inc
or
adc
insl
insb
cmp
or
cmp
icebp
lea
orb
ss
or
movsb
jge
lea
stc
and
pusha
jl
mov
loopne
inc
out
pop
call
in
cld
or
test
into
mov
sahf
push
lret
inc
or
push
dec
sub
inc
addl
fldcw
aam
push
sub
xchg
ljmp
mov
adc
adc
adc
iret
js
cmp
jae
pop
pop
push
and
out
std
int
lods
adc
das
adc
icebp
insb
mov
mov
pop
cmc
fcoml
push
pop
out
adc
jb
mov
incl
fcoms
loopne
addr16
addr16
and
jo
jae
add
jge
movsb
mov
xchg
jg
xchg
rorb
imul
popl
add
hlt
xchg
sub
sbb
jae
push
sub
mov
aaa
add
cmp
icebp
push
sti
nop
adc
loop
add
xor
mov
ficoml
push
adc
shlb
jmp
or
mov
cltd
push
cmp
push
mov
push
fbstp
push
sti
xchg
out
loopne
aam
movsl
mov
cmp
out
sbb
movsl
lods
aaa
in
sub
xchg
call
and
push
sti
inc
popa
jecxz
push
add
pop
add
cltd
fbstp
cmpsb
cmp
cwtl
popl
pop
jb
mov
xor
imul
leave
jae
jle
mov
lods
add
jle
scas
adc
repz
stos
iret
es
xchg
mov
fisubl
sub
nop
je
jns
mov
stc
ljmp
outsl
inc
lahf
cwtl
in
dec
in
test
insb
cmpsl
imul
test
jg
adc
fidivrl
push
loop
imul
out
inc
push
inc
pop
xchg
dec
in
push
and
xor
push
and
pop
sub
nop
and
jmp
in
shrb
lds
adc
dec
daa
jg
js
sbb
outsl
sbb
gs
mov
pop
mov
je
sbb
aaa
mov
cltd
pop
fnstenv
mov
sbb
mov
das
movsl
lods
out
aas
js
in
in
pop
lea
inc
xchg
xchg
dec
lock
nop
cmp
sub
sub
jbe
pop
push
out
pusha
loop
stos
mov
shrb
xchg
dec
or
mov
aad
sahf
push
es
sub
cld
out
fcoml
mov
adc
mov
es
loop
cld
jge
jp
out
adc
or
sarl
pop
xchg
pusha
sti
cmc
xor
add
inc
cmp
sub
movsb
pushf
insb
rcrl
mov
and
adc
imul
cmpsb
mov
mov
cltd
cmc
daa
push
cs
inc
gs
dec
sahf
cwtl
ds
push
jno
fnsave
and
mov
addb
pop
nop
adc
jnp
inc
adc
dec
fistl
ja
lcall
push
int3
pop
sub
push
mov
in
test
sbb
cld
push
lea
cmp
mov
out
pop
pop
loopne
aad
lret
lret
mov
and
pop
test
sarb
mov
cmc
adc
ss
dec
jmp
outsl
xlat
mov
pop
leave
repz
mov
mov
sbb
sbb
jnp
push
insl
data16
cmp
movsl
in
dec
cmp
fidivrl
adc
out
inc
mov
jecxz
pop
or
scas
int3
sub
jecxz
mov
out
pop
cmp
mov
xor
dec
mov
outsl
fisubrs
jl
jmp
and
pop
pop
sbb
arpl
andps
fldt
add
icebp
pop
pushf
nop
cmpsb
xchg
mov
add
scas
jno
mov
outsb
scas
jle
and
gs
and
cli
iret
fnsave
repnz
dec
dec
in
sbb
aad
adc
lahf
pop
popa
inc
cmpsl
inc
sbb
lea
lahf
ja
andl
push
add
inc
loopw
mov
insb
push
lret
inc
push
movl
mov
cmp
das
xchg
or
mov
inc
pop
push
sub
cmpxchg
xor
and
dec
imul
call
ret
rorl
lahf
lcall
pop
mov
mov
repz
jbe
mov
mulb
sub
mov
jno
jle
cmp
mov
dec
ss
pop
lahf
push
jge
cli
mov
and
add
movsl
dec
cmp
fs
subb
inc
mov
mov
jmp
incl
popf
xchg
out
add
cltd
and
into
mov
xor
xor
daa
or
daa
frstor
xchg
lods
pusha
sub
cmc
add
andl
mov
mov
mov
xchg
cwtl
pop
mov
jo
mov
es
sbb
jns
jg
data16
mov
cmp
cmpsl
pop
fisubl
or
jbe
pop
mov
xlat
sub
lcall
push
jl
mov
inc
mov
jl
insl
push
xor
movsb
mov
sbb
pop
call
and
fstpt
movsl
push
push
lret
mov
cmp
in
aam
and
cmpsl
pop
and
sbb
add
cmp
sbb
add
sub
shl
sbb
mov
sbb
cs
sti
mov
sarb
std
idivb
dec
icebp
ljmp
mov
cs
cld
push
vmread
mov
stos
pop
and
sbb
jl
xchg
jno
push
in
push
daa
adc
sub
mov
lcall
aaa
mov
mov
arpl
mov
pop
xchg
lock
or
test
xchg
sbb
xchg
test
mov
in
stos
cmp
mov
movsl
and
leave
dec
mov
inc
aad
xor
in
mov
enter
iret
cld
sub
pop
dec
imul
sbb
jecxz
pop
lcall
gs
xor
fildll
movsb
mov
jecxz
lret
es
lods
sbb
lods
add
dec
xor
cld
out
xchg
xchg
adc
movsl
or
or
mov
out
lock
cmp
sbb
repnz
and
jnp
fwait
scas
xchg
lds
shrl
mov
fistpl
faddl
pop
and
lods
sub
iret
xlat
movsl
xor
jmp
jne
xor
inc
add
jbe
lock
ljmp
fwait
mov
mov
jmp
mov
mov
mov
pop
outsl
negb
mov
push
fsubl
and
xorl
sub
loopne
or
xchg
and
testb
mov
jbe
jnp
pop
scas
jbe
and
adc
jne
ja
add
mov
mov
push
push
jbe
int3
fs
in
dec
cmc
sub
inc
outsb
add
inc
jae
loop
mov
movl
mov
mov
in
addr16
pop
xor
or
adc
pop
into
xor
insl
xchg
and
in
cmp
xor
out
mov
inc
in
enter
sbb
sbb
out
ss
test
subb
jne
pop
adc
in
aad
push
push
sbb
insb
mov
test
popl
pusha
cmp
fsubl
pop
xchg
adc
mov
mov
pop
sbb
inc
stos
sahf
xchg
mov
pop
daa
sbb
or
mov
stos
jle
dec
xchg
std
or
sbb
jne
lret
jle
xor
insl
popa
subb
jno
test
js
lods
test
loopne
enter
dec
pop
pop
dec
imul
sub
cmp
jbe
pop
loopne
mov
mov
pop
mov
cs
popf
out
pushf
lds
add
pusha
sbb
sub
clc
sbb
call
fcmove
sub
pop
nop
ror
sub
insb
pushf
mov
sbb
aas
dec
pop
mov
inc
in
clc
cs
fbld
es
addb
out
insl
cmpsb
out
jmp
jno
or
out
inc
xchg
sbb
test
fs
lods
imul
mov
mov
inc
jge
push
mov
repz
pop
mov
dec
scas
movsl
sbb
jno
mov
into
sbb
mov
and
lock
cmpsb
in
inc
lcall
and
jne
lods
push
dec
test
mulb
jle
jg
sbbb
and
icebp
xor
pop
cli
clc
push
lods
mov
and
out
stos
cmp
sbb
mov
xchg
adc
fcmovb
pop
or
ss
xor
in
mov
sbb
xor
add
test
sti
push
xchg
push
lret
and
cmp
andb
push
jecxz
pop
jge
jecxz
sbb
mov
sbb
push
and
dec
mov
cli
lret
lock
xor
repz
push
xchg
adc
xor
das
jecxz
in
pop
pop
aaa
es
ja
dec
cmp
sub
outsl
jmp
pop
mov
decb
out
pusha
push
adcl
cmpsl
rcll
leave
cs
push
pop
and
and
mov
push
jb
stos
enter
js
mov
shl
repnz
aam
pop
lcall
pop
sbb
mov
inc
lret
loopne
loope
xor
pop
out
gs
jge
popf
dec
mov
sbb
insb
rcrl
adc
cmp
mov
xor
nop
testb
sub
push
xor
xchg
dec
cmp
mov
cltd
xlat
mov
shlb
lret
in
pop
cmp
pop
fcomps
or
js
sub
fisttpll
call
les
jno
push
sbb
add
mov
push
dec
mov
arpl
mov
jb
dec
jmp
lock
scas
int3
pop
loop
aad
cmpb
into
jnp
adc
jno
ret
imul
jb
test
xor
aad
aaa
jp
push
stc
cmp
addl
outsb
sub
mov
sub
fsub
xchg
sbb
fidivrs
dec
pop
push
push
xor
leave
sub
and
jbe
or
insl
and
jmp
lea
in
call
rorl
out
mov
sub
fisttps
ljmp
dec
jp
jecxz
in
repnz
mov
inc
pop
mov
jmp
repz
movsb
aad
int3
mov
pushf
scas
mov
fnstsw
dec
mov
push
arpl
or
sub
sbb
aad
sub
jnp
dec
js
ds
ret
adc
fimuls
jne
data16
sub
mov
push
hlt
jns
cli
inc
outsb
std
fdivrl
adc
pcmpeqw
and
stos
mov
dec
pop
lahf
fs
cmp
jne
aad
out
ret
add
cli
aas
aas
stos
xor
inc
int3
pop
movsl
std
push
adc
mov
movsl
sbb
insb
in
lret
inc
mov
test
in
and
pop
les
hlt
push
mov
inc
xchg
retw
push
push
adc
mov
test
add
mov
fmuls
imul
es
lock
mov
aas
push
data16
and
sub
ss
xor
scas
jns
popa
push
mov
testb
cmp
add
adc
fdivs
inc
jae
into
movsb
daa
add
out
repz
pushf
aas
dec
sub
pop
cmp
mov
push
mov
push
pop
test
xor
sub
or
mov
cmpsb
xor
jp
pop
cwtl
fists
or
mov
sbb
dec
mov
push
xor
aam
out
push
lahf
mov
pop
cli
dec
pop
test
mov
push
xor
fdivrl
pop
xor
out
mov
mov
ljmp
jae
cmp
mov
lea
xor
int
rol
xchg
xor
cmp
jl
dec
add
out
outsl
pop
sbb
jmp
push
rol
cmp
in
xchg
sbbb
call
sbb
std
lahf
add
aas
outsl
lea
fbstp
jnp
addr16
aad
mov
or
dec
xchg
push
dec
sahf
inc
push
mov
jb
pop
lret
jle
mov
pop
aas
dec
popf
xchg
cmpl
in
insl
pop
jae
sub
in
jp
push
cli
xor
jbe
jle
mov
out
push
jge
jecxz
negl
mov
sbb
adc
sbb
out
cmp
jecxz
es
sbb
push
add
jmp
or
xor
mov
push
push
xor
pop
je
js
mov
cmp
loope
jecxz
or
jl
mov
add
les
jecxz
cmp
adc
sahf
pop
jns
ss
pushf
pusha
or
mov
mov
into
mov
leave
sbb
inc
lret
cmp
ss
sub
mov
push
aam
lods
jl
ret
and
push
lret
scas
xchg
fidivrl
aas
cmpsb
fcmovbe
xchg
cmpsl
jp
xchg
sub
adc
xchg
ja
cmp
xor
or
les
pusha
mov
sbb
ljmp
push
sbb
mov
ljmp
jbe
jb
sti
andb
nop
cmp
sarl
add
mov
je
dec
mov
push
shll
ret
int
push
inc
sub
mov
or
ret
out
xchg
aas
jl
push
sub
test
daa
jo
push
lea
ss
mov
cmpsl
jge
inc
call
sbb
jno
cmp
or
sbb
push
xchg
pop
sbb
movb
inc
jp
dec
das
push
movsl
pop
push
push
cmp
fs
mov
cld
fcmove
mov
mov
out
call
into
xor
xor
xlat
clc
cmpsb
xchg
loop
in
pop
dec
mov
xchg
sub
cmpsl
cmp
xor
stos
lods
je
add
enter
xchg
jecxz
cli
data16
xchg
xor
sbb
adc
out
ret
shlb
cld
gs
xchg
jl
cli
jns
repnz
std
jbe
lret
push
std
mov
sbb
add
xchg
sbb
cmp
mov
and
ss
push
arpl
cld
jp
jns
das
negb
addr16
and
sub
adc
xlat
mov
imul
pop
cmp
in
cmp
in
or
mul
sti
dec
stos
push
xor
outsl
sahf
push
dec
jo
and
lods
add
jnp
mov
scas
les
out
imul
insl
std
je
enter
int3
sahf
sahf
mov
fs
adc
mov
xor
xchg
cmp
in
push
and
ljmp
out
repz
mov
mov
int3
jg
cmp
jmp
or
fidivs
addr16
push
repz
pop
aaa
xchg
fldt
test
or
jmp
fisubrs
cmp
out
mov
push
lods
ljmp
lahf
shlb
adcb
lahf
sahf
pop
dec
jns
push
sbb
inc
outsb
stos
xchg
xlat
pop
sbb
lret
scas
pushf
or
add
nop
rcll
pushf
mov
or
test
fldenv
mov
pusha
fisttps
jb
lock
push
fistps
das
js
andb
mov
sbb
aas
pop
jecxz
movsb
loopne
and
icebp
fwait
dec
rcl
dec
sbb
fnsave
jo
repnz
cmp
imul
cmc
mov
sub
repnz
addr16
in
and
shlb
pop
xor
hlt
pop
mov
nop
pusha
clc
jb
mov
insl
stc
test
push
lock
loope
jae
xlat
mov
mov
outsl
xchg
sbb
repnz
mov
fildl
sub
mov
jp
stos
das
pop
add
je
test
sbb
sahf
fs
mov
iret
out
push
adc
sbb
xchg
stos
jmp
shlb
mov
notb
push
xchg
xchg
inc
jecxz
xor
ljmp
xchg
fisttpl
insb
jmp
inc
fs
mov
cld
dec
add
xor
mov
pusha
imul
mov
mov
mov
mov
and
mov
fadd
int
or
out
pop
pop
out
cmp
cmc
sbb
sti
loope
push
and
out
es
sbb
mov
adc
loope
lret
imul
xchg
push
mov
fwait
mov
mov
in
jecxz
mov
pop
mov
xor
imul
adc
mov
ja
addr16
adcl
pop
jns
or
lds
cmp
push
push
jo
push
out
mov
jo
and
aam
push
sahf
lret
lahf
je
jmp
pop
pop
mov
stos
mov
repz
and
fwait
daa
ja
xchg
add
loope
in
aaa
shlb
inc
in
jbe
addl
daa
jbe
pop
stos
xchg
imul
mov
dec
or
mov
cmpsb
lods
mov
mov
xchg
pop
jmp
aas
ret
cmp
xchg
mov
in
mov
cltd
mov
or
jae
add
xor
lret
mov
in
hlt
push
xor
and
popf
mov
and
dec
popl
mov
push
enter
fistps
pop
push
pop
ds
mov
jp
sbb
ret
ja
pushf
and
adc
and
popa
in
adc
mov
cmp
movsb
loope
push
imul
inc
insb
inc
test
add
fcmovbe
mov
jl
inc
adc
call
out
es
xchg
out
adc
ja
inc
cmc
movsl
push
mov
dec
fwait
pop
adc
insl
popa
jg
test
inc
mov
inc
ret
nop
insl
das
jb
mov
aad
jmp
iret
jl
inc
loope
adc
mov
or
repnz
mov
stc
test
mov
jecxz
das
fadd
ret
bound
mov
cmpsl
sub
lock
movsb
cmpl
pop
sub
in
pop
ror
and
insl
arpl
sarb
fcomi
mov
mov
jmp
mov
test
xorl
and
add
jmp
jmp
pop
mov
lods
mov
xor
movb
rorb
mov
sub
mov
mov
std
jmp
inc
sbb
les
and
fimuls
cld
out
enter
cwtl
jbe
sbb
stos
ss
pop
jae
adc
xchg
gs
daa
or
cmp
mov
packssdw
outsl
cli
iret
cld
in
jmp
xchg
arpl
test
mov
jmp
mov
push
push
sbb
pop
add
in
mov
aad
ret
mov
call
dec
lds
clc
out
fbld
aam
push
mov
pushf
mov
ds
xchg
dec
or
or
cmp
sub
rolb
out
add
mov
dec
int3
or
shl
out
pop
mov
cwtl
sub
aas
adc
dec
loop
dec
inc
shlb
sub
mov
jnp
mov
jg
mov
or
mov
dec
cmc
mov
dec
test
movsb
test
loopne
in
fcmovnu
mov
jecxz
in
mov
arpl
fdivrs
inc
mov
mov
mov
les
outsl
mov
gs
xchg
ljmp
enter
cmp
inc
das
fldcw
insl
pop
inc
push
addr16
stc
ds
fmul
dec
test
jns
mov
mov
lds
jg
xchg
lret
ror
gs
in
ret
das
add
stos
lret
fsubrp
or
pop
mov
pop
scas
xchg
sbb
sub
sbb
push
cld
es
inc
adc
mov
scas
rorb
push
mov
inc
xchg
loop
dec
xchg
xor
roll
jle
or
movsb
mov
outsl
mov
aaa
rcll
xor
sbb
jecxz
ljmp
push
popa
popa
out
mov
es
inc
pop
es
sbb
je
fcoml
enter
pushf
nop
mov
mov
mov
mov
xchg
cld
fwait
inc
out
in
addr16
pop
ret
out
enter
dec
xor
dec
or
bound
lods
inc
enter
iret
jecxz
movsb
divb
pusha
and
sbb
dec
adc
mov
mov
mov
mov
push
or
mov
fldenv
hlt
icebp
pushf
add
inc
and
lret
push
lahf
sbbl
fisubl
fldl
push
adc
sub
in
cmp
cmc
adc
jg
shlb
sub
and
into
test
add
loope
push
pop
in
push
mov
inc
add
inc
or
or
lds
pushf
push
mov
inc
out
add
decb
fiadds
inc
add
ret
mov
push
mov
jae
mov
in
repnz
mov
and
xor
xchg
nop
sub
fidivl
xchg
std
xor
jbe
lret
pop
decl
xchg
sbb
out
outsb
lret
roll
xchg
fdiv
xor
ljmp
das
inc
fdivs
fistpll
adc
sub
in
or
lock
xchg
test
mov
imul
sarb
prefetch
mov
stc
shrb
add
pop
or
jmp
adc
mov
jbe
lret
fcmovbe
addl
psubq
dec
fcoml
imul
call
cwtl
lods
call
sbb
xor
lcall
dec
orl
loope
pop
push
sub
outsl
rolb
jp
aaa
pushf
and
jae
dec
loope
ret
clc
add
inc
fisubrl
loopne
lret
pop
or
sbb
jne
jnp
dec
movsl
out
xor
in
push
jnp
jmp
stos
add
aaa
lcall
lahf
pop
sbb
add
sbb
outsb
mov
repz
mov
orl
fcomip
fwait
sub
mov
jl
into
and
call
into
mov
sub
in
push
jo
mov
dec
dec
mov
pcmpgtd
or
sub
sub
cmp
test
xchg
add
gs
ret
jo
cli
inc
cmp
repz
jl
addr16
push
cmp
mov
in
scas
pusha
jae
jp
inc
adc
cmp
push
mov
divb
push
pushf
fcmovnb
lea
pop
aaa
insb
stos
sub
decb
mov
stc
cmpsb
lret
movb
mov
mov
cmpsb
jo
sbb
mov
push
lret
push
ret
clc
dec
bound
and
je
lret
mov
fistpl
jae
jne
aas
in
xor
jmp
push
arpl
jb
scas
and
fistpl
pop
fcmovu
cmp
sbb
dec
cwtl
std
sbb
decl
push
pop
out
std
clc
pusha
rclb
jmp
cmpl
leave
jae
movl
shll
sahf
mov
xor
cwtl
push
fldcw
push
sahf
cmp
adc
insl
and
and
jmp
test
ret
shll
adc
ret
lcall
mov
or
jmp
mov
iret
sbb
xchg
sub
lret
mov
dec
decb
arpl
mov
xor
jp
xchg
lds
repz
mov
mov
xor
std
xor
lods
jo
je
dec
loope
aam
mov
das
xchg
sub
inc
or
fistpll
inc
call
test
sub
mov
xor
ss
fiadds
jnp
or
lahf
cs
hlt
jnp
push
out
sub
cmp
int3
jmp
xlat
in
inc
test
adc
in
loopne
mov
out
or
mov
test
iret
ret
enter
mov
dec
push
adc
insl
iret
jg
outsb
sbb
sarl
jmp
push
or
xchg
dec
inc
xchg
lret
push
push
and
sti
cltd
rcrl
dec
outsl
sbb
mov
rcrb
js
mov
pop
mov
es
pop
pop
mov
push
les
pop
sub
xor
roll
dec
jnp
fistpl
sti
scas
xor
cwtl
mov
out
xchg
pop
push
mov
jmp
push
jge
sub
cmp
adc
aad
or
jg
mov
add
lret
jmp
lods
cmp
imul
arpl
sbb
inc
sbb
repz
pop
pop
test
pop
xor
cmp
dec
cmp
mov
jle
sbb
push
cmp
loopne
mov
xchg
xor
and
jecxz
sub
repz
dec
adc
daa
ja
mov
cli
or
inc
sbb
and
mov
aas
fmulp
jb
daa
push
cli
mov
sbb
and
adc
loope
inc
mov
add
movsl
cmp
xchg
mov
pop
shlb
mov
stos
aas
divl
mov
std
adc
pop
lods
or
dec
ror
xchg
repnz
adc
pop
and
stos
outsb
jo
mov
rolb
outsl
lret
adc
fdivl
mov
pusha
rcrl
cmpsl
decl
call
xchg
int
sub
cwtl
rorl
xor
cmp
xor
jbe
das
idivb
push
xor
adc
or
add
jno
not
addr16
or
addb
pop
ljmp
xchg
xor
je
rcr
leave
jae
inc
inc
nop
pop
cmp
inc
jno
fisttpl
test
jnp
xchg
ficompl
inc
test
shlb
lahf
lcall
nop
adc
sub
pushf
jg
outsb
jo
insb
aam
out
jl
test
sbb
test
dec
mov
mov
jge
and
mov
popf
dec
pop
loopne
dec
inc
cmpb
pop
dec
inc
and
cmp
dec
sbb
aaa
cmp
sub
in
icebp
aaa
xchg
mov
cld
sbb
aaa
pusha
lahf
dec
dec
xchg
movsb
out
out
dec
push
jmp
jbe
xchg
adc
mov
fisubrl
cmp
add
inc
push
into
and
out
xor
mov
push
mov
aas
jge
in
cmp
inc
jb
ds
inc
in
xchg
xchg
inc
mov
mov
sti
shll
shr
xchg
lret
in
leave
gs
mov
cmpsl
jl
sarl
out
lea
jp
push
les
and
adc
cmp
add
test
sbb
mov
cmp
cmp
fnsave
cltd
enter
xchg
orb
jp
mov
stos
ffree
or
nop
test
outsb
sub
sahf
cli
in
out
cmp
iret
push
cli
jmp
jbe
mov
add
outsl
mov
mov
out
mov
cmp
bound
mov
xchg
push
inc
aas
shrl
mov
dec
cltd
ret
mov
mov
inc
and
jl
movsb
jl
xor
sti
jne
mov
push
lret
pop
pop
adc
dec
ss
in
jbe
lret
xchg
mov
negl
imul
push
testb
dec
lock
cmpsb
push
jl
icebp
jbe
sahf
pop
mov
aas
xchg
jbe
aaa
movsl
lret
push
sub
pop
mov
pop
inc
insb
test
jge
testl
jp
push
sub
adc
or
mov
dec
inc
mov
imul
test
sbb
push
xchg
adc
sbb
mov
andb
fisttpl
mov
or
or
out
mov
das
inc
ss
pop
pop
jo
adc
loope
sti
inc
hlt
mov
add
inc
stos
std
movsb
cli
adc
mov
lds
xchg
push
mov
ss
fwait
xorl
bound
insl
xor
mov
dec
cmpsb
std
sbb
push
jle
cs
int3
and
scas
add
stos
lret
push
iret
jl
cmp
xchg
scas
fs
and
pop
push
and
jno
mov
and
aaa
dec
push
insb
stos
mov
js
xor
shrl
jne
pusha
out
xor
icebp
rolb
lds
aam
dec
std
movsb
mov
nop
xor
adc
and
lock
addr16
push
mov
cwtl
lock
decl
pop
movsl
jmp
pop
shl
xchg
jg
and
xor
sbb
loopw
daa
fs
mov
pushf
mov
div
call
or
into
push
xlat
clc
pop
enter
mov
pop
mov
fs
stos
mov
enter
xchg
imul
ret
cmp
xchg
fbld
dec
flds
rcll
and
lds
shll
out
ljmp
popa
out
pop
fcmovbe
xor
std
stc
ret
dec
fmull
sbb
into
in
xchg
lods
mov
test
aaa
pop
rcrl
dec
jb
aam
pop
paddusb
fs
mov
movsb
dec
fdivrl
and
mov
stos
das
mov
iret
add
inc
sub
add
adc
jmp
add
pushl
lahf
out
cmp
lods
cmc
push
insb
out
pop
out
jno
mov
ftst
jae
lds
dec
sahf
insl
fimull
std
cld
lods
mov
adc
adc
fdivrs
mov
pop
test
mov
popf
jge
sub
fimull
jp
sub
int3
push
adc
sub
int
xor
lret
test
mov
sbb
scas
ja
rclb
cmpb
mov
sbb
or
lods
push
inc
outsl
and
and
imul
jle
rcl
mov
int3
and
add
add
xor
push
call
orl
out
cmpsl
aaa
mov
jns
pop
sub
adc
icebp
lret
repnz
fcmovbe
jle
sahf
cmp
imul
mov
add
cld
insb
xchg
push
xchg
or
pop
ficoml
sti
mov
mov
icebp
sbb
out
adc
sub
mov
sbb
jecxz
cli
dec
ja
ret
push
ja
aas
push
test
imul
jl
and
inc
xchg
pop
outsl
push
enter
ret
pop
adc
rclb
aaa
adc
and
mov
imul
and
dec
or
mov
movsl
icebp
inc
outsb
fs
or
push
ljmp
dec
adc
add
fwait
pop
imul
mov
in
dec
add
or
faddp
push
call
push
and
das
addr16
add
mov
add
popf
sub
aad
push
xchg
mov
jb
enter
mov
push
cltd
or
testl
ja
jns
in
dec
add
out
add
mov
test
mov
sbb
lods
subb
pop
into
stc
call
mov
xchg
pop
mov
out
mov
out
mov
out
enter
or
xchg
xchg
leave
xor
push
xchg
sahf
push
xor
and
mov
sbb
cmc
add
xchg
out
push
stos
push
in
push
std
mov
movsb
ret
dec
int3
outsb
xor
fidivrs
jecxz
dec
out
or
pop
jbe
jmp
nop
lea
ja
push
jp
mov
or
iret
fnstsw
pop
hlt
jge
test
cli
mov
mov
imul
mov
dec
cltd
jmp
imul
push
scas
cmp
les
orb
sub
js
and
cmp
into
jge
push
cmp
sbb
sub
adc
mov
jg
mov
sarl
mov
push
sahf
mov
jp
hlt
inc
sbb
fidivrs
push
in
in
sbb
subl
xchg
mov
and
lods
int
pusha
push
lods
clc
bound
aad
jae
sahf
fucomp
mov
inc
add
mov
fcmovb
adc
test
sbb
fsubrl
outsl
xchg
xor
decb
aas
sub
out
pop
sub
fnstcw
iret
xor
jg
test
subl
sbb
leave
cmp
out
xor
nop
ljmp
mov
mov
adc
pusha
xchg
out
jmp
sbb
xor
mov
cmpsl
in
xchg
sub
pop
push
js
test
jl
mov
negb
xor
push
ss
ds
xchg
arpl
pop
popf
sub
pop
xor
call
and
es
or
sarb
shll
scas
xchg
outsb
mov
mov
sub
pop
pop
pop
call
or
ljmp
xchg
int
out
fsubs
push
add
lret
das
inc
pop
std
jo
pop
aad
aad
mov
pop
aaa
repz
ds
mov
in
xor
sub
add
sub
push
int
adc
mov
cwtl
or
cmp
pop
dec
inc
sbb
shrb
pop
into
loopne
pop
or
mov
pop
push
out
cmp
push
mov
fs
or
push
sbb
mov
jl
and
mov
mov
mov
stos
sbbb
and
mov
call
mov
jns
sti
and
add
mov
lret
jb
xor
repz
xchg
lret
xchg
cmpsl
icebp
shll
test
or
mov
test
loop
adc
in
sub
sti
and
subb
fdivl
in
out
insl
cmp
jne
roll
mov
into
cmp
jp
cltd
mov
jmp
jns
add
stos
imul
adc
xchg
jge
push
push
es
cld
xchg
push
or
mov
mov
sub
into
out
bound
mov
fs
or
xorl
mov
ja
std
outsb
jge
dec
fadds
mov
pop
in
aam
mov
dec
arpl
adc
xchg
mov
fsubs
sahf
les
fnstsw
out
sub
pop
enter
sub
push
aad
mov
and
or
add
cmpsl
mov
jne
adc
test
hlt
test
or
shlb
lds
imul
adc
stos
mov
xchg
xchg
int3
push
repz
ret
or
jle
add
jge
das
push
movsl
lret
loopne
mov
pop
icebp
lahf
ficompl
notl
inc
insl
adc
mov
lcall
mov
nopl
inc
jl
pop
xchg
add
ljmp
add
sub
pextrw
jb
shll
fiaddl
int3
mov
dec
pop
stc
and
sub
lea
pop
cmc
notl
icebp
jp
cmp
imul
loope
and
test
test
das
mov
and
fwait
xlat
xor
add
loop
loope
mov
cmp
add
xor
mov
push
scas
lahf
dec
cmp
cmp
iret
sub
loopne
pop
inc
mov
leave
mov
ret
iret
test
aam
imul
pop
mov
fcomip
inc
inc
lods
jo
mov
mov
mov
jb
stc
sbb
rorb
xchg
mov
jnp,pt
push
adc
jae
or
gs
dec
fstps
sub
lds
push
dec
outsl
mov
ffreep
dec
in
mov
loopne
mov
pop
shlb
xorb
in
sbb
adc
shlb
mov
jg
dec
xchg
lret
shll
cli
aas
jp
stc
xchg
loop
jb
pop
or
out
arpl
mov
mov
outsl
icebp
jmp
add
stos
je
cli
inc
cmp
fistpll
dec
xchg
shl
dec
jnp
pusha
daa
cmp
dec
push
lds
notl
or
mov
and
std
sahf
fdivrs
pop
into
xchg
mov
mov
in
arpl
sar
or
pop
shrb
jno
rolb
mov
fadds
fwait
lret
lcall
adc
ret
mov
jo
mov
inc
mov
mov
stos
dec
data16
dec
jnp
pop
dec
arpl
mov
andb
je
dec
push
fisubrl
pop
addr16
loope
mov
cmpsb
cmp
stc
shrb
add
add
sbb
icebp
in
mov
or
sub
push
test
int3
sub
rol
iret
xor
and
jge
ret
lds
xor
dec
lods
lret
rol
jge
loop
out
jp,pt
lcall
ds
mov
fwait
call
fsubs
jno
pusha
iret
mov
insb
int3
and
mov
fimull
mov
push
jle
stos
jne
push
pop
jae
push
cmp
dec
and
loopne
rcrl
mov
xor
or
mov
arpl
icebp
les
pop
shll
sbbl
mov
shll
dec
push
in
fwait
rcrl
mov
jp
pop
xor
xchg
rcl
mov
jo
pusha
arpl
cli
cmc
jnp
and
add
sub
roll
in
add
enter
xchg
out
mov
jg
and
std
and
loopne
popa
ja
notl
daa
insb
out
movsb
lds
add
sbb
lock
xor
inc
repz
mov
testb
jnp
dec
mov
mov
pop
or
dec
mov
shrl
sbbl
aad
stos
xor
enter
orl
in
push
insl
sbb
pop
cmp
xor
dec
adc
pop
xchg
jg
pop
mov
and
or
push
in
es
and
and
jb
mov
pop
mov
dec
jb
fdivrl
push
iret
cmp
int3
and
adc
xchg
push
in
push
pusha
mov
add
das
lods
fs
cmp
sbb
enter
cmp
jmp
cmp
test
cmp
mov
sbb
xor
addr16
lods
mov
mov
pop
sbb
rcrb
and
mov
inc
mov
ja
or
adc
inc
mov
movsl
and
xchg
sub
push
scas
jo
ficoms
mov
adc
jmp
cltd
insb
and
loop
mov
push
filds
sbb
xor
inc
push
subb
pop
into
test
iret
and
mov
lret
mov
fs
mov
adc
clc
outsl
mov
jle
lahf
push
and
cmpsb
mov
push
stos
aad
mov
test
cmp
push
shrb
mov
adc
cmp
inc
mov
lods
sub
pop
and
pop
xchg
or
mov
sub
in
inc
lcall
cmp
mov
out
xchg
adc
mov
fiaddl
mov
mov
enter
mov
cmp
push
popf
data16
push
inc
insb
xlat
cmpsl
test
xchg
pop
repnz
mov
dec
jle
sub
shll
in
mov
fimull
cmp
int3
xor
jo
jns
shl
pop
andb
adc
js
xchg
adc
in
lods
mov
jle
pop
stc
pop
jle
xorb
add
iret
push
mov
pop
and
sub
pop
pop
pop
test
loopne
jl
aam
dec
out
pop
jmp
sub
adc
mov
push
fists
daa
lock
data16
ds
and
andb
cld
out
and
imul
das
and
mov
incl
repz
dec
sti
jle
pushf
mov
aad
mov
cmp
dec
push
push
lea
or
out
sbbl
sub
mov
sub
fidivrs
mov
jmp
xchg
addr16
hlt
push
push
lods
test
jecxz
and
push
fisubl
mov
sbb
insb
call
pop
mov
adc
es
and
sub
inc
fsubs
dec
imul
jge
stos
pop
fidivrl
mov
rorb
adc
pop
fstp
ljmp
jmp
add
mov
inc
das
xchg
and
and
adc
sub
hlt
and
fldl
gs
cmp
adc
pop
add
adc
mov
ljmp
mov
adc
sbb
inc
scas
jg
or
inc
in
test
fcompl
pop
daa
sbb
popa
scas
sub
adc
adc
bound
les
and
push
cmp
sbb
fstp
jmp
or
flds
out
xchg
outsl
inc
pop
sbb
inc
ja
inc
jnp
fmul
repnz
inc
loop
imul
std
push
mov
mov
ja
cli
sub
lahf
dec
add
add
rcrb
pop
mov
out
sahf
or
and
int3
inc
daa
shrb
add
cmc
sbb
mov
xor
mov
fstpt
mov
jnp
imul
and
xor
push
sub
out
jecxz
rcrb
adc
inc
mov
inc
push
scas
ret
aas
dec
cld
jne
test
and
call
mov
adc
cltd
mov
pop
xor
xchg
and
xchg
imul
adc
adc
enter
pop
test
scas
adc
loopne
test
sbb
mov
pop
xchg
push
add
cmpsb
lods
dec
sub
and
sub
iret
fwait
jg
sbb
sub
mov
cmp
push
test
jbe
pop
les
loopne
cmc
mov
mov
outsb
cmpb
jg
fiadds
fcoml
pop
lahf
push
xchg
loopne
adc
push
mov
int3
sbb
lods
pop
adc
out
mov
sarl
mov
bound
aas
decl
addb
mov
fwait
aad
inc
dec
popl
or
sbb
ret
push
pop
jae
out
jnp
nop
jecxz
xchg
jns
lret
sub
push
clc
mov
push
mov
mov
insb
js
pushf
nop
mov
or
xchg
mov
shl
push
dec
fadds
or
dec
pusha
add
cmp
fidivrs
pop
push
xchg
mov
pop
xor
mov
mov
das
inc
pop
mov
cmp
in
imul
mov
jo
mov
adc
iret
mov
push
dec
jne
ficompl
in
pop
and
nop
ljmp
inc
sti
or
cmpsb
rclb
mov
mov
ret
adc
push
es
mov
jle
xchg
stos
mov
mov
xor
or
dec
add
or
pop
xor
push
sbb
sbb
mov
call
dec
lods
xchg
sahf
dec
xorl
or
xor
testb
adc
jno
sub
push
and
enter
nop
mov
ret
imul
xchg
cmp
out
cmp
les
mov
cmpsb
jg
push
andb
fisubrs
push
setb
icebp
add
mov
or
sub
int
test
cmp
lods
icebp
jp
loop
in
mov
test
sti
inc
cmp
cmp
fs
aas
pop
out
pop
cmpsw
xchg
mov
push
pop
aas
xlat
or
int3
mov
jne
xlat
mov
or
mov
mov
lods
mov
sbb
cltd
fcoml
scas
push
fcomps
movsb
test
leave
aam
sti
stos
cmp
loopne
dec
adc
shlb
add
je
loopne
in
iret
push
sub
xor
loop
xor
shl
sbb
xor
mov
adc
iret
cmp
xor
inc
dec
adc
outsl
pop
jno
lea
push
mov
inc
popf
inc
fnstenv
imul
add
push
push
mov
aas
shlb
mov
push
in
add
xor
arpl
jno
push
out
mov
mov
mov
push
mov
xchg
out
stos
mov
cmp
mov
sbb
aaa
daa
loop
xor
xor
pop
mov
cmpsb
xor
push
iret
xor
lea
cmp
leave
jmp
insl
sub
repz
add
mov
cmp
leave
inc
out
popf
mov
in
and
sbb
xor
scas
pop
xchg
add
add
and
sub
or
push
adc
aam
aas
mov
push
push
int3
and
and
mov
cmc
fcomi
cmpsb
aas
mov
pusha
lods
and
mov
andl
mov
fcoms
sbb
push
or
adc
fs
lods
pop
jmp
iret
push
dec
cmpl
inc
push
mov
fwait
mov
sub
test
mov
or
fildll
xor
sub
test
xchg
lds
rclb
out
xor
jecxz
pop
out
sbb
mov
ss
sbbl
repnz
data16
lret
je
out
jne
lods
lahf
and
sub
fisttpll
mov
ret
ret
mov
mov
sub
int
push
pop
jp
adc
push
sahf
sub
adc
sbb
stos
sti
cmp
inc
pop
pusha
pop
inc
mov
jae
inc
sbb
dec
mov
js
cmpsb
mov
loop
xchg
lret
scas
out
outsl
xchg
imul
jg
cwtl
faddl
lahf
sahf
xchg
ss
pop
add
loope
fimull
fs
cwtl
cwtl
pop
in
sbb
jbe
int3
mov
jmp
jae
adc
mov
xchg
xchg
sub
out
xchg
and
adc
stos
mov
movsb
ret
cld
lret
sub
fldcw
loopne
adc
cmp
sbb
lahf
pop
mov
push
push
mov
inc
push
inc
push
rcr
add
xor
dec
ret
loopne
sbb
inc
jae
mov
mov
jbe
mov
cmp
jp
cli
push
shl
adc
lock
inc
out
arpl
out
pop
out
lcall
sti
mov
out
sarb
cmp
into
mov
das
les
mov
and
jne
cmpl
mov
lock
pop
sbb
sub
push
imul
jle
fisubrs
fcmovb
or
test
icebp
int3
xchg
push
lods
jecxz
xchg
pop
es
outsb
sbb
mov
mov
mov
adc
movsl
add
mov
jp
push
stc
fldenv
fs
push
loop
lods
ja
in
mov
scas
mov
xor
inc
inc
mov
int
inc
pop
pop
inc
fwait
into
mov
movsl
push
cmp
or
imul
jle
fstps
hlt
add
mov
mov
dec
or
or
cli
inc
push
ja
stos
scas
push
ficoms
lcall
out
push
sbbb
mov
dec
rcrb
cmp
cmp
call
xchg
fcmove
clc
and
jae
rcrl
call
bound
fbld
jl
test
pop
mov
sub
push
push
mov
xchg
popf
and
ret
mov
jp
daa
scas
cmpsb
decb
scas
popf
mov
iret
push
lock
and
xchg
fdivrp
movsl
jo
testl
sbb
mov
push
sbb
mov
icebp
jns
sub
xor
lods
les
xor
clc
dec
dec
pop
and
lea
inc
in
fadd
pop
sub
xchg
test
or
lods
mov
and
stos
nop
cmp
pushf
dec
in
setp
jnp
test
push
fldt
rcll
xor
aad
ds
cmp
ljmp
scas
call
bound
cmp
stc
mov
fidivs
mov
lcall
jnp
push
push
mov
lcall
push
dec
mov
aam
add
fwait
mov
mov
leave
mov
inc
cwtl
faddp
cmp
mov
out
inc
mov
mov
scas
shll
loope
push
jno
jmp
sub
add
mov
mov
push
movsl
mov
imul
push
out
sahf
jl
lahf
dec
addr16
hlt
imul
xor
inc
scas
adc
push
and
pop
or
lock
hlt
call
shrl
loop
decb
aaa
rcr
cmp
mov
out
sbb
les
hlt
add
rorl
bound
imulb
jmp
inc
lods
stos
pop
stos
mov
and
stc
rorb
xor
jle
loope
or
loope
jae
movsb
inc
int3
xchg
aam
mov
push
mov
xchg
mov
cmp
dec
sti
sbb
ret
outsb
das
pushf
push
movsb
xlat
div
xchg
cmp
lock
pop
mov
std
scas
mov
push
push
pusha
outsl
lods
pushf
mov
pusha
sbb
sarl
dec
ljmp
enter
add
jae
inc
fidivl
sbb
add
mov
inc
inc
add
jnp
xor
xorl
mov
adc
mov
loope
dec
addr16
hlt
xchg
imul
in
inc
or
sbb
fdivl
arpl
xchg
sub
mov
mov
jbe
mov
repz
xchg
sub
fmuls
in
xor
movsb
xor
mov
ja
xor
adc
imul
cmp
data16
push
pop
js
clc
js
aam
shlb
pop
add
or
mov
mov
arpl
inc
test
cld
xchg
sbb
outsb
lret
mov
cld
xor
adc
gs
mov
push
xlat
insl
hlt
xchg
xor
pop
push
insl
push
repz
into
push
ror
scas
ds
jne
push
xchg
xchg
dec
in
stc
sub
sub
popf
mov
xlat
in
jge
and
sarb
push
stc
dec
jnp
jo
dec
jl
test
mov
cld
mov
loope
or
cmc
int3
push
out
cmp
cmpsb
sbb
mov
out
mov
fcmovne
aam
xlat
sbb
movsl
cmp
jg
inc
cli
addr16
push
arpl
lcall
cmpsl
int
stc
xchg
lods
sbb
dec
pop
je
push
fstpt
cs
fs
sub
mov
adc
aad
into
andb
sarl
adc
adc
mov
call
lods
xor
adc
xor
or
mov
jb
jmp
jae
scas
fisttps
fnstenv
out
int
xor
xchg
add
jecxz
jp
xor
movsl
fldenv
lcall
out
scas
js
jmp
fstpt
xor
xchg
pop
sbb
push
in
cmp
jl
push
loopne
jae
loopne
mov
and
sete
dec
xor
pop
cmp
das
adc
aas
lcall
cmp
ret
xchg
push
fldt
fadd
shlb
inc
inc
or
or
cmp
cmc
push
sub
loope
xchg
cmp
iret
aas
sub
pop
pop
arpl
lahf
cltd
int3
aad
xor
inc
adc
cmp
and
dec
xlat
push
or
popa
cs
mov
lahf
jge
imul
push
mov
xor
mul
push
sub
xor
sbbb
push
pop
push
imul
rolb
adc
cmp
jle
out
aaa
sub
sbb
jns
pop
fs
inc
fsubrp
lea
int
lea
pop
pusha
ds
jle
dec
ficomps
jne
rcrl
cltd
shlb
js
sbb
mov
cmp
rorl
lcall
scas
cwtl
dec
loope
into
roll
popa
fists
inc
push
sbb
enter
cmpsl
jge
push
lds
sbb
std
popa
cmpsl
xor
cmc
and
mov
pop
inc
pop
cltd
mov
xacquire
rcrb
sti
jb
setle
sub
js
negl
adc
insl
sahf
push
pusha
nopl
inc
cmp
test
push
aam
and
dec
loope
insl
jg
xchg
push
ffreep
mov
add
insl
mov
pop
inc
cli
lahf
sahf
dec
inc
cltd
lock
out
mov
into
lock
adc
pop
ret
or
and
inc
mov
inc
in
dec
daa
insb
dec
mov
loopne
jb
inc
sub
or
fcmovb
sarl
cmp
xchg
or
lods
lahf
aam
sbb
mov
adc
shll
aam
loopne
mov
add
pusha
into
mov
add
insl
mov
int
jne
pop
mov
jns
cmpsb
inc
int3
bswap
mov
gs
or
sub
leave
mov
insl
rclb
arpl
sub
mov
sbb
lds
jmp
loop
mov
sub
lea
jne
sbb
inc
sahf
sub
lret
ds
mov
scas
inc
sub
dec
mov
mov
sbb
ficompl
mov
fists
cmp
addr16
out
loopne
adcb
arpl
mov
mov
divl
in
push
call
xor
and
dec
or
xchg
in
jle
fnstenv
push
inc
add
int3
cmp
shlb
mov
push
jns
dec
sub
enter
mov
mov
shlb
rorb
enter
aas
fbld
jbe
push
cmp
divb
mov
xor
in
dec
sub
stc
and
pop
stc
mov
xchg
and
mov
decl
jno
mov
adc
push
xchg
outsl
and
mov
daa
mov
enter
mov
xchg
sub
in
loope
and
pop
clc
jmp
std
les
out
pop
jb
jg
aam
inc
cmp
mov
lahf
adc
mov
test
addr16
inc
inc
add
sbb
jp
sbb
iret
hlt
cmpsb
enter
sub
in
inc
mov
out
or
cmp
aam
xor
repz
mov
movb
leave
mov
data16
rorl
sti
mov
pop
popa
mov
mov
jae
int
les
std
std
iret
mov
outsl
int
mov
fisttps
fsubrs
or
and
xor
push
or
notl
das
jge
das
aam
ljmp
iret
mov
cmp
jge
call
test
pop
arpl
fildl
lret
jmp
jl
add
add
int
mov
daa
int
sbb
ret
cmp
je
sub
pop
mov
jb
clc
js
int
les
jb
data16
cmpxchg
inc
xchg
dec
cmpsl
shrl
mov
mov
adc
sbb
and
adc
dec
lock
xor
loop
pusha
sub
inc
xchg
test
adc
and
testl
xor
dec
rcrl
add
aam
jne
repz
pop
mov
add
fs
push
call
nop
jmp
add
adc
roll
xchg
dec
roll
ret
mov
in
adc
loope
int
repnz
inc
pop
out
adc
dec
imull
repz
dec
jmp
cwtl
add
mov
hlt
and
mov
aam
adc
cltd
lock
inc
mov
and
mov
rclb
call
sub
xchg
xor
push
push
mov
dec
repnz
jno
jmp
xor
xchg
jp
pop
sbb
jno
rclb
jb
mov
push
rcrl
mov
push
adc
sub
mov
loopne
mov
sbb
pop
je
xchg
sbb
push
inc
out
adc
mov
pop
jbe
jnp
adc
jecxz
pop
mov
mov
jg
popa
sub
loopne
ja
insb
int
and
add
pop
clc
jmp
add
mov
mov
arpl
push
in
je
add
fists
std
mov
pop
ja
xlat
aad
push
inc
cltd
cwtl
sub
xchg
jns
inc
mov
fidivrs
push
daa
loop
add
rclb
in
fsubr
stos
push
loope
and
movnti
mov
inc
mov
lock
jno
ret
int3
imul
add
cmp
ljmp
sbb
jmp
sbb
shll
cld
mov
adc
insb
adc
xchg
in
dec
xor
insl
test
push
push
xchg
fiaddl
push
xor
inc
push
xor
mov
adc
lret
test
push
push
daa
lods
cmpsb
repnz
sub
push
xor
sbb
loop
in
andb
xor
mov
mov
test
and
cmp
out
imul
add
lcall
adc
ret
gs
fisubl
repnz
jl
dec
jl
mov
in
jmp
in
je
push
stos
into
mov
jne
ja
sbb
pop
ljmp
xor
arpl
mov
lret
inc
xchg
sub
fsub
adc
in
sbb
cmc
in
les
mov
and
js
mov
pop
add
pop
sbb
sahf
and
sub
pop
cmp
pop
sub
push
test
fidivrs
sub
rorb
pop
adc
aad
shlb
call
mov
test
aad
neg
dec
movsl
add
sar
jb
sbb
mov
mov
fistl
xor
out
or
mov
or
hlt
jge
hlt
sti
sbb
in
mov
jge
add
mov
js
adc
inc
jbe
jge
mov
repnz
test
mov
lret
jae
lret
xor
and
iret
mov
lods
shrb
pop
xchg
fnstenv
adc
bound
mov
xlat
push
pushf
fs
out
inc
xor
dec
jbe
ret
sbb
pop
int
mov
mov
push
shlb
pop
adc
sbb
add
mov
pop
bound
xor
lahf
int3
into
or
std
mov
ror
sub
repz
test
adc
jo
repz
andb
adc
lcall
lea
in
mov
int3
pop
mov
dec
in
or
or
sti
sub
adc
xor
xor
ror
rcrl
lahf
dec
xchg
ljmp
hlt
xor
andb
ja
pusha
cmp
pop
sbb
in
test
and
sub
mov
out
sti
jmp
sub
pop
inc
std
cli
rolb
loop
sbb
inc
cmp
pop
test
pop
inc
jecxz
cmp
iret
int
push
inc
and
in
int3
cmp
iret
mov
xchg
mov
pop
mov
mov
lret
or
in
dec
add
clc
adc
test
pop
pop
sbb
aaa
push
adc
cmp
fimuls
inc
jecxz
mov
cmp
mov
mov
lds
hlt
and
ljmp
cmp
inc
dec
or
mov
fstpl
push
sbb
push
lret
cs
fistpl
or
ret
add
iret
inc
inc
push
pop
cs
mov
adc
jns
adc
aas
call
movsl
mov
push
lea
cmp
or
sub
pop
pop
jle
adc
scas
adc
mov
xor
test
push
mov
xchg
es
jecxz
orl
pop
cli
cmp
pop
dec
mov
pop
mov
pop
popa
movsl
movl
cltd
add
fsubrl
or
test
out
js
xchg
push
sub
dec
jae
icebp
popf
add
adc
stos
loop
icebp
sbb
lcall
push
mov
lea
iret
clc
js
lock
iret
xor
outsb
cmp
adc
and
push
push
inc
aaa
in
es
dec
or
shll
or
bound
adc
repz
das
jae
and
mov
cmp
iret
loopne
or
aam
pop
popa
in
add
xchg
jb
mov
out
mov
sub
lods
cli
lods
pop
sbb
mov
adc
mov
pop
sub
jae
out
adc
addl
adc
test
loope
mov
mov
imul
popa
clc
cmp
sub
hlt
scas
adcb
cmpsl
add
dec
xchg
mov
mov
mov
ljmp
add
adcl
test
dec
mov
lahf
cmpsl
js
sub
je
jge
add
pop
and
adc
lcall
out
inc
cmc
addb
push
fnstcw
mov
cmpsb
test
cmp
cmp
iret
in
push
les
jno
xor
inc
adc
divl
xchg
lods
cmc
fucompp
jne
outsb
aas
or
test
xchg
fisttps
cmp
je
aaa
sub
pop
inc
incl
or
popf
fs
sbb
mov
loope
cmp
inc
mov
inc
dec
fs
into
xchg
shll
push
ja
mov
or
fistpll
fcoml
cmp
in
mov
lcall
adc
cmpsb
daa
push
aam
in
dec
adc
sub
sub
or
icebp
jle
je
add
fistpll
in
pushf
mov
pop
imul
pop
cmpsl
std
fisubl
and
add
mov
es
mov
jl
sbb
dec
iret
lret
xor
ret
fisubs
imulb
mov
mov
adc
scas
and
icebp
sub
pop
pop
je
jno
push
shll
mov
faddl
xchg
dec
test
push
jne
mov
popa
int
gs
push
jno
xchg
scas
addl
fsub
mov
lock
ficoml
mov
push
sub
pop
xor
ret
mov
and
in
mov
das
mov
daa
jns
inc
inc
cmp
dec
test
test
jge
adc
popa
notl
mov
sarl
leave
lcall
ja
mov
or
aaa
mov
in
cs
stos
xchg
mov
popf
arpl
or
std
insb
mov
fists
test
mov
inc
cmp
fisubrs
sub
jo
lcall
pop
mov
sbb
cmp
das
sub
testb
xchg
insb
rorl
jb
out
mov
sub
add
addr16
dec
nop
sti
insb
out
adc
dec
imul
jl
aaa
test
shl
xchg
mov
pop
in
loopne
std
dec
pop
fwait
cmp
xchg
fdivl
into
lea
in
pusha
xchg
add
mov
dec
xchg
cltd
mov
jge
bound
xchg
pushf
xchg
cmp
jmp
mov
and
popa
mov
rorb
xchg
out
in
add
jp
test
lods
jp
ret
in
in
pop
ret
ret
sbb
mov
or
loope
movsb
pop
pop
in
cmp
inc
lahf
inc
sbb
xor
dec
jnp
imul
clc
popa
jle
outsb
mov
shll
pminsw
sbb
fisttpl
lea
je
pop
cmc
dec
stos
mov
mov
ja
aaa
push
mov
jecxz
fwait
out
pop
insb
stos
add
out
mov
add
mov
call
rolb
inc
inc
and
ret
mov
mov
test
mov
leave
and
push
mov
inc
add
xchg
push
imul
ror
pop
inc
mov
loope
orb
das
lret
repnz
fidivl
ja
dec
or
mov
sub
sub
js
xor
mov
pop
sub
adc
cld
insl
scas
stc
in
cmp
lea
loopne
and
xchg
sti
jge
dec
jno
adc
mov
in
mov
pop
hlt
or
xor
dec
jg
stos
jg
push
rorl
xor
out
adc
lcall
cmp
xor
sbb
repz
dec
lret
scas
or
cmp
add
and
clc
les
inc
pop
out
rcrl
and
mov
popf
rcrl
dec
incl
test
addr16
popa
clc
and
aam
rolb
in
push
cs
fs
pop
sub
aam
push
sbb
outsl
in
pop
or
mov
jbe
xlat
sti
es
add
psubsw
je
pushf
out
loop
sbb
ret
dec
mov
push
mov
jns
and
das
jns
mov
ss
and
push
pop
insl
push
fistpll
test
pop
les
and
cld
imul
pop
sub
inc
push
sarl
leave
bound
adc
popa
enter
lahf
sbb
aaa
pop
loope
outsl
adc
and
mov
out
sbb
incb
mov
scas
jo
pusha
shll
aaa
into
lcall
lcall
pop
test
out
repz
pmuludq
inc
arpl
xor
fs
and
adc
mov
inc
shl
and
jbe
stc
arpl
daa
das
push
out
cmp
cmp
mov
and
push
dec
dec
mov
int3
jbe
das
sbb
test
aaa
mov
jmp
out
adc
jge
xor
jge
pop
push
aam
sbb
daa
ja
mov
inc
mov
xor
call
cmp
idiv
loope
sub
xor
pusha
pop
push
mov
pop
repnz
mov
negb
cmp
push
lret
or
sahf
arpl
sti
mov
sbb
cmp
or
and
jg
les
lods
movsl
cmpb
pop
pushl
js
cmp
out
sub
sti
stos
xchg
mov
jns
adc
std
pop
rcr
lcall
sbb
addb
push
mov
in
pop
push
rclb
xchg
xchg
aad
imul
or
adc
xor
push
push
les
cwtl
in
rolb
mov
clc
in
je
mov
inc
jne
pusha
cwtl
test
xchg
outsl
test
movsb
and
lea
sbb
fs
out
and
inc
lret
fdivs
movsb
loopne
les
lods
stc
andb
ret
or
mov
out
enter
add
lret
adc
xchg
into
xor
cmp
adc
and
iret
mov
or
ds
sbb
movsl
jp
dec
pop
jae
das
out
or
jb
jg
in
sbb
fsubrs
enter
add
or
jnp
rcrb
fwait
lods
jg
jbe
stc
add
scas
das
xchg
or
inc
jnp
add
dec
sub
and
xchg
mov
pop
cmpsb
inc
fisubs
inc
push
clc
into
or
inc
xlat
jl
enter
inc
sbbb
xchg
adc
aaa
idivl
ds
mov
outsb
pop
scas
sti
or
mov
push
lods
push
icebp
and
inc
pop
xchg
vcvtpd2dqy
mov
xor
ljmp
lret
xchg
aas
push
fisubl
shl
adc
adc
xchg
popa
in
mov
arpl
xchg
xor
push
movsl
sub
pop
test
mov
pop
daa
adc
ret
sbb
mov
mov
cwtl
xchg
fsubrl
jmp
jmp
and
gs
inc
pop
and
dec
mov
sbb
xchg
inc
xor
hlt
roll
dec
std
int
push
inc
test
xor
mov
je
les
sbb
dec
lret
rcrl
mov
pop
mov
rclb
icebp
sahf
stc
andl
xor
cmp
andl
ret
sub
or
bound
call
lods
mov
pop
in
xlat
push
mov
call
out
int3
out
xchg
ds
mov
jns
movsb
adc
mov
inc
mov
sub
out
or
inc
mov
jbe
in
inc
pop
ds
repz
mov
and
mov
cmp
fnsave
fstpt
add
out
push
adc
pand
jo
or
pop
inc
xor
jb
jno
fs
aam
data16
and
rolb
push
arpl
lea
incb
push
pushl
mov
mulb
xchg
fcomps
adc
out
push
pop
out
push
mov
mov
sarb
cmp
or
inc
jae
mov
xchg
pop
mov
lods
mov
das
xor
cmp
or
aam
sbb
xchg
cmp
test
ss
dec
push
test
inc
sub
ficoml
push
inc
sbb
ds
pop
lods
in
out
sub
mov
push
lds
mov
cmpsb
insl
aaa
lds
ljmp
cmovs
xchg
add
xor
xor
or
push
dec
adc
shrb
pop
nop
sbb
movups
inc
fisttpl
cli
dec
sbb
js
xor
xchg
sbb
jl
xor
imul
and
ss
cs
repz
ret
dec
mov
dec
in
icebp
enter
mov
xor
imul
jl
sbb
nop
fiaddl
scas
mov
sub
mov
dec
or
mov
xor
add
dec
mov
xchg
pop
ds
or
mov
mov
and
jecxz
inc
cmpsb
cmp
inc
adc
arpl
xor
bound
rorl
pop
mov
cmp
out
lds
inc
mov
movl
std
xchg
cltd
and
or
mov
sbb
xchg
fsubrs
adc
mov
rcrb
and
lret
mov
cltd
xlat
and
sbb
fadd
lret
movsb
dec
cmpsl
jmp
in
movb
daa
inc
arpl
test
mov
into
or
ror
lret
fs
xchg
inc
push
xchg
sub
sarl
sbb
rcll
mov
or
sub
inc
add
pop
xor
add
les
outsb
sbb
adc
pop
push
int3
ja
xor
pop
imul
pusha
cwtl
add
lret
fstpt
sub
test
adc
mov
adc
cmp
cmp
inc
fsubr
enter
mov
icebp
pushf
clc
push
mov
cmp
call
jecxz
cmp
xor
shlb
insb
inc
jge
sar
mov
mov
jg
sbb
adc
dec
shlb
jg
cmp
push
push
enter
dec
aaa
mov
sbb
pop
les
lods
subb
sub
mov
jo
mov
pop
mov
or
in
mov
push
negl
sbb
jb
jge
mov
pop
mov
dec
mov
imul
pop
movsb
neg
cwtl
dec
jecxz
fdivrs
mov
pop
jge
pop
out
jle
jg
dec
pop
and
xchg
cmpsl
and
test
mov
dec
mov
add
cmp
pop
xor
insl
pop
pushf
lcall
or
mov
add
pop
arpl
xchg
nop
inc
cmp
inc
jmp
sub
out
xor
xchg
add
mov
mov
shlb
inc
pop
jp
add
jnp
imul
cmpsl
sbb
lods
imul
notb
sub
stos
fdivl
mov
mov
cmp
xchg
add
fiaddl
mov
mov
mov
mov
lds
sub
aad
cli
sub
push
lock
lods
inc
jae
shlb
adc
jge
les
sub
enter
pop
jns
or
mov
shrb
mov
sub
push
lahf
mov
and
inc
push
das
or
int3
mov
push
sub
inc
cs
mov
sbb
fnstsw
and
cmp
jne
fstpt
xor
jecxz
sub
pop
pop
loop
fisttpl
imul
rcrb
or
sub
gs
sarb
mov
nop
xlat
cmp
out
or
test
lahf
push
popa
pop
ret
mov
dec
inc
sbb
xchg
in
call
xchg
push
fs
pusha
inc
out
add
rcr
mov
jmp
loop
xchg
adc
rcll
mov
mov
enter
jns
push
mov
call
or
adc
and
mov
sbb
and
cmp
add
sub
mov
jecxz,pt
sahf
fstpl
sub
shrl
cmp
std
sub
ljmp
lds
ja
xchg
mov
push
jno
push
hlt
cmpsb
jbe
adc
pop
jecxz
outsb
mov
push
mov
ret
pop
add
mov
ret
mov
stc
daa
loop
in
mov
test
cld
cmp
sbb
loop
lods
sub
lret
insb
or
cmp
push
and
push
repnz
addr16
cli
or
fiaddl
iret
push
mov
sub
sbb
out
into
mov
inc
mov
ret
nop
pop
mov
cmp
jle
jle
popa
dec
xor
rorb
mov
scas
dec
shlb
add
cmp
bound
jnp
or
arpl
fs
fcompl
in
jmp
add
lea
sbb
xchg
pop
nop
or
out
out
in
rcl
sbb
cmp
mov
lock
cmp
and
sub
scas
or
and
cmpsl
in
adc
jo
jle
test
aam
sahf
pop
ja
jecxz
lock
sub
jp
adc
xchg
mov
gs
adc
stos
and
mov
std
movsl
mov
insl
in
sbb
cld
pop
mov
arpl
imul
push
sbb
mov
xchg
lods
std
or
loopne
mov
sbb
pop
insb
xchg
lret
popa
dec
aam
pop
stos
pop
push
fwait
or
in
add
jg
subb
sbb
sbb
nop
aas
fstl
jns
mov
pop
mov
cmp
add
outsb
inc
xor
push
add
pushf
push
rorl
pop
imul
dec
les
or
mov
inc
loop
and
icebp
xlat
or
xchg
je
imul
cmpl
out
adc
inc
sub
jne
mov
jge
pusha
faddl
setl
sbb
int
or
nop
sbb
jb
pusha
fildll
xchg
jo
popf
js
rorb
clc
inc
cli
and
add
or
xor
jl
xchg
xchg
cmp
addr16
fnsave
out
mov
hlt
jnp
cmc
jmp
inc
iret
js
push
hlt
std
repnz
fnstenv
mov
cld
push
test
loopne
scas
and
mov
ret
sub
inc
mov
or
test
and
jns
mov
pop
sub
jns
iret
cmp
fs
test
push
mov
jno
mov
mov
orb
sbb
cmp
dec
lods
mov
jae
icebp
and
fs
jb
jecxz
xchg
adc
xlat
add
add
fnstsw
add
push
ret
mov
popa
xchg
into
add
push
imul
repz
pop
pushf
push
sarl
and
pop
mov
xor
into
or
scas
pop
and
stos
jns
ljmp
test
mov
in
sub
adc
mov
jnp
fucom
mov
ljmp
mov
jp
jmp
rclb
push
ficomps
mov
mov
jge
imul
ds
push
push
cmpsl
pop
test
sti
xchg
push
jb
adc
fcompl
pop
divb
arpl
or
add
test
jl
lcall
sbb
xor
mov
jno
dec
dec
sarl
sbb
sub
dec
push
cld
aam
fistl
cmp
inc
add
test
xor
lock
or
and
scas
pop
jno
fwait
fwait
xchg
das
inc
xor
mov
test
push
sub
outsb
add
mov
nop
add
and
cmp
ret
pushf
pop
mov
fbstp
lods
xchg
fcomps
xchg
and
pop
sub
rolb
mov
fsubl
popf
push
add
mov
xor
lcall
sub
sti
jecxz
bound
cmp
jne
dec
dec
les
mov
jae
jecxz
in
shlb
sub
data16
ficompl
addr16
addr16
push
in
outsl
mov
roll
xchg
stos
out
fcomp
in
stos
cmp
in
in
lret
pusha
loope
mov
gs
jle
aas
sub
inc
pop
sbb
mov
adc
jg,pn
jns
jecxz
and
xlat
scas
fsubrl
mov
loopne
popw
push
icebp
in
loope
jl
sti
and
ret
hlt
xchg
lods
cmp
inc
jnp
pop
pop
jle
push
jns
repnz
lock
sub
adc
roll
movsb
jbe
std
inc
lods
lods
out
xor
or
mov
mov
movsb
pusha
adc
into
dec
jmp
in
aad
jmp
pop
xchg
fisubl
jno
push
out
sti
lock
jmp
ret
outsl
pop
movsl
jne
pop
mov
jge
sub
push
sub
sub
pop
inc
cmove
scas
fcomi
add
or
testl
add
and
push
lret
mov
mov
mov
shrl
idivl
jmp
inc
fidivrl
stos
inc
mov
sub
xor
and
dec
cmp
xchg
shlb
cmp
pop
iret
mov
jno
sub
pop
dec
popf
or
sbb
test
or
add
fstpt
push
lahf
or
pop
in
adc
ds
add
push
pushf
cld
cmp
out
sti
jle
mov
popf
and
fcomi
xor
push
mov
pop
and
fwait
out
dec
daa
dec
roll
scas
inc
in
mov
mov
shrl
shll
fldl
push
int
in
sbb
dec
pushf
pop
mov
pop
add
cmc
pusha
pop
sbb
mov
inc
jnp
aas
iret
out
loopne
loop,pt
jno
ret
in
cs
ljmp
mov
xor
cmc
fmull
xlat
and
cmpsb
stc
push
jecxz
test
lret
mov
cmp
pop
iret
inc
push
xor
hlt
popa
inc
lahf
loopne
push
mov
or
scas
movsb
idivb
xchg
mov
icebp
push
jb
mov
cmp
ja,pn
sub
jb
xor
mov
faddl
xor
shld
mov
mov
lret
push
ljmp
inc
adc
and
pop
fwait
leave
dec
mov
daa
aam
push
cs
cmp
dec
pushf
and
and
cli
sub
inc
bound
out
test
add
push
loopne
icebp
or
mov
sti
push
jg
iret
adc
mov
sub
and
iret
fidivrs
mov
mov
mov
lock
push
mov
movsb
pop
sbb
add
cmpsl
or
inc
loopne
push
xor
mov
sbb
lcall
and
inc
mov
mov
or
jne
push
arpl
testl
gs
test
cli
mov
xorl
mov
call
xchg
inc
lods
xchg
test
call
jmp
scas
adc
test
into
call
leave
shrl
mov
jae
fwait
push
fildl
inc
ret
test
clc
adc
in
jecxz
lods
cld
mov
or
mov
addr16
pop
popa
cmc
or
sub
lahf
inc
inc
pop
mov
inc
jne
push
sti
aaa
stc
and
fstl
mov
push
fsqrt
rcr
mov
mov
lock
cmp
sbb
cmp
inc
cmp
adc
stc
insb
cmpsl
add
and
or
pop
outsl
dec
mov
sub
and
loopne
fidivrl
inc
cwtl
fnstsw
push
es
pop
xor
popa
cmp
mov
sub
pop
int
lds
xor
xorb
pop
cmp
sbb
stos
loope
xchg
and
test
sbb
pop
std
xor
inc
jbe
jae
jmp
fbld
sub
cmc
int3
or
xor
orb
jbe
and
aaa
sbb
outsb
push
mov
rcrb
insb
cmpsb
rcrl
mov
mov
es
outsl
or
test
shlb
cwtl
popa
inc
mov
mov
sahf
out
mov
lcall
in
cmp
xchg
leave
fwait
jp
cmp
sub
or
fsubl
and
dec
sbb
mov
hlt
imul
stos
scas
jmp
insb
lods
lret
repnz
mov
lret
lock
sti
lcall
pop
dec
push
fcmovbe
jb
add
push
xchg
mov
in
pop
and
call
or
cmp
inc
mov
dec
pop
mov
repnz
pop
andl
push
nop
or
jle
mov
mov
sub
mov
pop
mov
mov
sbb
leave
call
les
cld
fstps
lret
shrb
stos
scas
and
mov
addr16
mov
sub
jns
out
out
fs
mov
ss
stos
pop
into
mov
pushl
add
jb
popa
sti
jb
add
mov
js
xchg
jp
add
adc
xchg
out
xchg
mov
push
mov
sbb
pusha
sahf
mov
dec
and
mov
cmp
in
out
or
pop
add
hlt
negb
movb
xor
push
fmul
add
jg
jle
cmpsl
xchg
cmpsb
push
cmp
out
cs
inc
sbb
fildll
sub
dec
fadds
fnsave
stc
fcom
xor
enter
mov
aam
mov
push
sub
cli
push
mov
pop
cltd
cmp
iret
xchg
cmp
lret
push
leave
out
adc
mov
cmp
int3
orb
mov
sarb
sbb
push
xor
add
jg
jecxz
fdivrl
sub
hlt
dec
sub
pop
pop
sahf
call
and
add
cmc
xor
jmp
repnz
movl
dec
mov
imul
sub
pop
dec
sbbl
sub
test
in
mov
sti
jecxz
imul
jmp
sbb
jmp
jmp
outsl
lods
sti
add
dec
rcrb
clc
jmp
cltd
cmc
ljmp
stos
cmp
sarb
stos
test
inc
add
inc
mov
xor
jg
testl
dec
jns
out
push
shl
and
sahf
xchg
dec
cmpsb
loope
hlt
movsb
xchg
hlt
stos
lahf
pushf
push
adc
mov
leave
jb
test
inc
test
or
sbbb
mov
into
fisubs
sub
mov
and
jmp
mov
ret
push
cmpsb
jo
or
fsubr
jo
jg
movsb
test
cltd
in
mov
or
adc
outsl
movsb
pop
fstpl
sbb
cmc
and
mov
push
jns
cli
outsb
scas
jne
shll
cld
fistl
jl
das
push
jg
cmp
push
dec
cmp
jnp
inc
adc
add
mov
sbb
imul
insl
outsb
stos
jp
addr16
mov
stos
jo
pushf
cmp
xor
add
xchg
pop
inc
inc
mov
sbb
lea
jle
je
imul
call
cmpsb
sarb
std
loopne
idiv
mov
popf
jp
imul
mov
ljmp
addr16
add
mov
sub
xchg
adc
popa
outsb
movsb
xlat
addr16
inc
lea
sbb
pop
das
jnp
xor
sbb
push
fdivp
mov
xchg
inc
adc
cs
ficomps
sbb
loopne
mov
cmp
cmp
js
inc
cltd
or
jmp
sbb
sti
lea
lea
dec
std
adc
xlat
jno
insb
mov
adcl
in
aaa
dec
inc
ror
cmc
dec
jecxz
mov
xor
imul
xor
test
sbb
ljmp
mov
lock
mov
stc
or
cmp
mov
sbb
jmp
add
clc
iret
adc
ficomps
adc
pop
or
ljmp
ljmp
shlb
int3
inc
mov
cli
sub
out
dec
je
sub
mov
test
pop
fisubrl
das
pop
and
stos
imull
sbbb
inc
jle
sub
mov
add
adcl
jg
and
xchg
xchg
pusha
test
jmp
jbe
mov
stos
sbb
push
call
sub
cli
xchg
mov
dec
in
fdivrl
mov
pusha
and
iret
in
mov
pop
popf
cwtl
mov
fsubr
push
ret
aaa
cmp
jle
xor
pop
add
test
in
pop
cmp
insl
sub
push
loope
in
mov
jae
dec
inc
sti
mov
push
cmp
jecxz
xor
sub
je
pop
shlb
inc
sahf
repnz
xor
arpl
adc
rcrb
testb
cmp
or
shld
and
lea
add
insb
xchg
dec
imul
gs
rorb
mov
jb
out
insb
test
fldt
in
xchg
dec
addr16
jne
pop
imul
add
cmp
mov
mov
mov
js
outsb
loope
fistpl
jle
cmp
fidivs
xor
sub
mov
mov
into
jecxz
shrl
sub
aas
sub
pop
loope
call
fwait
cli
sub
jne
add
or
std
or
sbb
arpl
cld
sti
lods
fildl
jno
pop
lock
fcoml
int
in
in
inc
inc
push
xor
push
inc
push
sub
int
sbb
out
cmp
xor
mov
hlt
setb
push
mov
cmp
mov
ret
lods
xchg
sbb
insb
mov
gs
mov
sub
movsl
or
cs
je
push
movl
sub
cs
inc
aas
filds
push
stc
pop
std
inc
bound
into
imul
mov
pop
filds
test
loope
adc
sub
mov
in
jne
fstl
pop
daa
jecxz
sub
lret
shl
lock
dec
xlat
adc
pusha
jns
push
stos
mov
adcb
adc
in
fcom
xor
xor
js
mov
movsb
ss
xchg
mull
dec
mov
jo
cmp
push
lds
lods
xor
add
cmp
xchg
fadds
popf
mov
xor
cmp
push
cmpsb
add
fdivrl
or
int
mov
sbb
and
sti
ja
lods
cs
pop
gs
repz
mov
fsubl
cmpsb
sbb
cmp
jmp
xchg
or
fadd
int3
add
add
adc
add
xchg
mov
das
jmp
and
and
cmp
ja
xlat
adc
mov
add
add
push
hlt
xor
movntq
scas
sub
pop
movsb
jb
pop
outsl
jae
pop
add
movsb
mov
push
xchg
sub
orb
shlb
in
mov
sub
and
out
push
leave
outsb
mov
arpl
and
and
pop
aad
xor
sarl
or
mov
mov
mov
mov
psubsw
inc
mov
jg
fnstcw
lret
fcmovbe
in
sbb
sub
xchg
pop
sahf
std
push
aam
add
int3
and
mov
js
adc
into
es
arpl
and
mov
add
sbb
ss
leave
rol
inc
and
push
add
xor
and
cli
aad
jle
jg
jle
push
rorl
hlt
jmp
push
jae
dec
sub
fwait
out
cmp
imull
inc
imul
or
xchg
mov
and
xchg
mov
lock
mov
and
and
mov
test
enter
adc
jmp
fsubrp
test
mov
shl
add
mov
push
mov
in
or
mov
dec
scas
negb
mov
lods
insb
fidivrs
add
jle
lods
inc
sub
ja
or
inc
ret
fsts
push
arpl
in
lldt
or
push
hlt
sbb
dec
pushf
xchg
pop
xor
iret
addr16
pop
jg
pop
popf
mov
mov
mov
incb
xor
pop
jmp
fcmovne
add
decl
sub
jb
decl
jl
mov
xchg
xor
aad
fstpt
arpl
rcr
or
sub
outsl
push
sbb
push
in
arpl
mov
fdivl
ss
rcrb
addr16
ja
jmp
and
fs
popa
aas
add
sti
fmull
push
inc
sbb
jns
hlt
sbb
pusha
cmp
and
cmp
out
int
ljmp
adc
push
dec
aad
js
push
jb
fisttps
jp
or
lock
and
ret
hlt
imul
mov
nop
xchg
test
sbb
mov
xor
sbb
loopne
rol
xchg
adc
xor
lock
lcall
xor
inc
in
not
mov
fisttpll
fisttpll
mov
or
push
addb
mull
insb
lea
xchg
das
push
not
roll
mov
or
push
shll
sbb
in
ljmp
pop
cli
pop
pop
fwait
nop
lods
mov
fisubrl
or
jnp
ss
movsl
and
and
pop
mov
shll
mov
adc
mov
jns
sbb
inc
mov
sub
jg
int3
mov
scas
mov
aaa
inc
out
sub
cmp
lea
fisttps
cmp
dec
imul
jl
cmp
dec
jl
sbb
repnz
xchg
lret
mov
xchg
inc
or
adc
xchg
enter
xchg
inc
lcall
je
out
sarb
inc
cmp
jmp
and
jae
sub
out
negl
ja
add
pop
and
sbb
sub
push
mov
lret
fdivrl
loopne
out
ss
scas
std
loop
ljmp
lods
movsb
and
push
sub
int
inc
stc
fnstcw
inc
mov
add
cmpsl
outsb
or
mov
mov
mov
pop
xchg
addr16
push
mov
into
cmp
hlt
outsl
dec
in
jg
jl
stos
jnp
and
sub
imul
mov
push
pop
subl
mov
faddp
inc
lret
sub
cmp
aas
jbe
xor
push
xchg
decl
mov
xchg
mov
mov
negb
mov
cmpsb
adc
xor
shr
stc
insl
iret
fnsave
aaa
aad
and
ror
in
xor
les
dec
xchg
add
mov
in
int
insl
mov
cs
jmp
clc
and
cmc
jns
xchg
ss
out
pop
outsb
jl
in
mov
sub
jp
fstl
sub
movsl
imul
movsl
test
iret
sbb
stos
outsb
aad
push
xor
dec
stc
push
cmc
clc
pop
flds
pop
lods
mov
mov
in
loope
dec
fcompl
push
mov
sbb
pop
stc
adc
and
das
out
add
mov
stos
jmp
incb
scas
subb
mov
insb
clc
push
outsl
mov
mov
push
jbe
mov
xor
cld
cmp
jo
scas
add
les
jae
dec
test
test
inc
mov
out
dec
sbb
aam
sub
test
icebp
je
in
ret
cmp
push
hlt
push
xor
jo
push
push
loopne
incb
pushf
in
jae
loop
mov
jmp
mov
inc
mov
pop
int
lea
xchg
pop
cs
xor
push
mov
cli
sbb
sahf
fs
repz
dec
scas
cmp
fxrstor
icebp
cwtl
push
loopne
dec
sbb
xchg
jbe
fiaddl
push
ds
mov
ds
pop
lcall
xor
adc
adc
pop
pop
scas
mov
mov
pop
ljmp
mov
arpl
enter
xor
iret
aad
jmp
insb
mov
cmp
jo
mov
fsubr
push
stos
mov
lods
sub
cld
movsb
out
iret
inc
ljmp
test
enter
rclb
pop
test
in
inc
inc
insl
imulb
sti
sub
sbb
testb
mov
mov
popf
push
rcll
cs
lods
push
fildl
out
sub
add
sub
dec
mov
cmp
jae
outsl
and
push
outsl
rcrb
add
mov
add
hlt
pushf
iret
pushf
pop
jmp
sbb
pusha
arpl
cmpsb
cwtl
loope
movsb
aam
inc
add
dec
hlt
pop
or
repz
pusha
push
es
iret
test
sbb
cltd
pushf
jl
xchg
sbb
push
in
push
ds
fstps
pop
or
fs
mov
mov
inc
clc
and
add
cmp
std
out
and
jnp
loopne
add
xchg
dec
mov
rcl
bound
into
jo
rcrl
and
mov
insl
cmp
in
jge
and
dec
dec
adc
adc
outsl
dec
fs
test
outsl
iret
dec
lods
push
scas
arpl
push
ja
jae
mov
out
jb
popa
test
fmuls
in
lock
shlb
or
rolb
movsb
sub
testb
jne
xchg
mov
adc
and
push
int3
outsl
dec
and
mov
mov
add
or
in
notl
mov
mov
mov
addr16
fisttpll
shrb
jl
lods
hlt
xchg
xor
fimuls
add
mov
icebp
ficompl
test
cmp
dec
filds
xlat
mov
mov
add
mov
out
adc
jl
pop
shll
jbe
call
aad
decb
out
xchg
fmull
mov
movsl
cmp
or
jmp
push
into
adc
sbb
jae
into
fcomps
repnz
mov
outsb
jmp
stos
xor
cmp
sarl
pop
repz
pop
adc
xor
loopne
test
addr16
cwtl
loop
test
out
jbe
xchg
mov
cld
sub
cmp
xor
xor
push
add
dec
jnp
mov
mov
std
in
xor
in
pop
jg
popf
pop
jne
inc
das
insb
iret
sbb
cmp
mov
or
ret
loopne
sub
sti
and
outsb
jmp
rcrl
pop
sub
aad
or
sahf
sarl
and
sub
jo
popa
mov
or
fistpl
rcll
adc
call
xchg
out
addr16
dec
sbb
cmp
addr16
dec
xchg
cltd
shr
mov
mov
in
cwtl
fdivrs
jg
jmp
xor
pop
rcrl
mov
mov
test
outsb
add
jle
filds
into
and
hlt
mov
cmp
shrl
mov
jle
repnz
mov
jns
pop
add
adc
dec
lods
and
lret
repz
pop
adc
sbb
test
out
pusha
loopne
lret
outsb
mov
sub
movntps
pop
idiv
div
sbb
mov
jp
pusha
mov
jb
mov
mov
leave
push
jb
or
and
or
cmpsb
pop
push
test
lea
bnd
out
sub
test
fidivrl
pop
movsb
movsl
arpl
xor
xor
sub
mov
mov
xchg
stc
dec
outsb
sti
cmp
add
scas
loop
sbb
jnp
sub
sti
sbb
stos
dec
or
repz
mov
and
pop
bound
xchg
pop
fadd
dec
xor
push
xor
pop
inc
lcall
sbb
imul
fsubrs
fisubs
bnd
pop
mov
rcrb
cmc
xor
sahf
mov
xorl
mov
xchg
cmp
je
jns
push
sbb
push
push
add
fcmovbe
mov
lea
les
stos
hlt
aad
sbb
inc
lods
adc
call
push
mov
rorl
jnp
xchg
scas
es
ds
mov
sbb
push
xchg
push
repz
jge
cmp
jg
lods
shld
shr
data16
daa
lahf
cwtl
inc
out
rcl
or
jp
mov
cmpsl
xchg
ljmp
adc
sti
mov
repz
pop
out
mov
mov
movsb
shlb
mov
push
lds
loopne
cmp
push
pop
std
jmp
daa
sti
xor
mov
or
pop
or
mov
outsb
scas
mov
add
push
popa
ret
adc
ret
pop
ret
pop
cmpb
imul
push
imul
and
js
add
rep
cmpsl
bound
adc
rcr
bound
mov
ret
es
test
ja
cmp
into
sub
mov
insb
lahf
mov
pop
jo
xchg
inc
mov
sub
xchg
inc
xchg
and
sti
cmp
lret
shlb
das
test
pop
cwtl
mov
mov
inc
sub
sbb
arpl
cmp
loop
in
sub
push
or
push
add
cmp
mov
mov
rorl
jnp
jb
xor
cmp
popf
cmp
mov
pop
jle
cwtl
pop
sti
sub
test
nop
pop
inc
sbb
data16
in
lods
and
sbb
xlat
jno
or
ret
mov
movsb
and
mov
pop
mov
dec
in
imul
pop
mov
inc
fnstsw
adc
insl
jb
fdivp
stos
andb
mov
cmp
lods
filds
mov
sbb
push
dec
scas
add
and
and
aad
arpl
fdecstp
cltd
cwtl
mov
nop
ret
rcrb
adc
add
xor
fldenv
sbb
loope
enter
repnz
cmp
loopne
mov
and
aad
dec
xlat
mov
shr
adc
sti
arpl
push
add
cmp
in
xor
rorb
push
or
jp
xchg
jge
repnz
call
mov
lods
xor
dec
pop
mov
sbb
xor
sub
mov
andl
mov
hlt
cld
cmpsb
add
mov
stos
jge,pt
loopne
or
cmpl
push
pop
adc
fdivl
or
mov
sub
cmp
mov
pop
mov
push
xchg
push
or
shrb
add
in
ret
scas
sbb
lahf
and
sub
lea
das
xchg
pop
pop
add
push
arpl
jecxz
daa
inc
mov
ss
or
inc
test
adc
jnp
or
pop
int
popa
adc
test
adc
sub
out
cmp
cmp
scas
jle
int
int
sub
shlb
jmp
sub
push
xor
les
add
pop
aad
dec
jbe
sbb
pop
out
call
enter
sub
pop
fdivs
cmp
les
call
das
sbb
cld
xchg
jbe
clc
in
xor
jo
lds
movsb
xor
lods
call
push
cmp
ret
stos
rcl
jle
cld
xlat
mov
int
add
pop
xchg
jg
andb
sbb
xor
pop
mov
mov
pop
sbb
data16
stc
mov
data16
shrl
pop
insb
cmp
push
push
push
lahf
pop
adc
or
xchg
roll
pop
jmp
push
mov
sti
jae
aas
out
xchg
aaa
loope
fadd
push
inc
cmp
out
in
sarb
cmp
or
fcomip
lcall
mov
ljmp
test
lea
xchg
int3
add
push
push
sub
jo
fistpl
push
cltd
mov
aam
iret
incl
dec
sbb
add
or
cwtl
sahf
cmp
adc
ret
pminub
push
std
xchg
adc
pop
fxch
mov
pusha
das
dec
mov
xchg
jp
mov
test
xchg
sbb
inc
pushl
xor
fwait
xor
push
enter
mov
test
leave
mov
test
pop
sbb
pop
sbb
dec
out
bound
lcall
xor
xchg
lds
xor
jo
lcall
lahf
cli
jbe
jb
cmp
rcl
xor
adc
mov
pop
out
jne
mov
adc
inc
or
push
fwait
sarb
rorl
push
push
fldenv
leave
sbb
lret
dec
test
push
je
lcall
mov
add
lds
stc
or
gs
lea
popf
movsb
ss
cmp
cwtl
jb
or
mov
jp
aam
fldenv
loope
outsb
shl
sti
test
cmp
add
lcall
test
outsb
sbb
rolb
sbb
sbb
lods
repnz
out
mov
in
mov
pop
jle
push
sbb
pop
aas
fwait
adc
imul
in
loope
add
and
call
pushf
and
lahf
fnsave
out
cmp
add
push
push
xchg
bound
divl
or
push
add
outsb
shlb
int
sub
xchg
in
inc
addr16
jge
push
cmpsl
sub
xor
jae
jnp
mov
orb
cmp
xchg
aad
push
dec
cmpsl
mov
dec
jae
addr16
fists
gs
inc
call
cmp
ljmp
in
or
movsb
stos
test
leave
jae
mov
loope
cmpsl
pop
lods
add
mov
push
mov
popa
inc
stos
mov
and
cmpsb
dec
loopne
push
jae
and
imul
cmpsl
dec
in
sbb
fs
cmp
stos
pop
and
and
lds
cmp
aas
in
es
push
mov
jno
repnz
dec
xchg
fisubs
sub
lret
fistl
push
ljmp
in
sti
and
scas
fidivrl
push
sub
jne
test
std
lock
jo
fnstsw
bound
mov
inc
xchg
in
js
add
adc
push
dec
mov
stos
mov
sub
stos
mov
mov
jg
rorb
rcrb
imul
in
push
sub
loopne
ljmp
jg
loopne
imul
fs
dec
out
cld
cmp
ljmp
mov
jo
dec
ficoml
popa
repz
mov
imul
pop
ss
sbbl
mov
fmull
adc
popf
mov
filds
out
es
in
shr
iret
sarb
and
in
ficompl
ds
rol
gs
frstor
das
sub
adc
out
xlat
cmp
imul
add
shll
or
in
orb
xchg
xchg
lds
mov
jg
cmpsl
stc
sub
stc
push
scas
sbb
push
sbb
pause
pop
ds
mov
cmp
jbe
arpl
xor
mov
xor
or
adc
mov
repz
push
push
mov
inc
dec
clc
scas
or
lret
xorb
push
and
cli
test
sti
mov
sbb
mov
dec
icebp
xchg
jno
lea
stc
sub
push
faddp
test
mov
jb
jg
jmp
ja
inc
pusha
pop
pop
sub
mov
mov
leave
cmp
gs
iret
mov
jae
aad
in
in
cmc
lock
dec
jl
leave
sbb
mov
cmp
imul
xchg
mov
and
pop
or
xor
xor
stos
mov
stos
adc
push
or
fwait
rcrb
push
and
mov
sub
fistpl
jns
mov
fdivp
insl
das
cmp
adc
sub
add
mov
sti
add
sub
add
sub
jns
xor
stc
or
call
sbb
out
je
xlat
in
fsubrs
popa
pop
sarl
std
inc
mov
dec
mov
xchg
arpl
repnz
pop
mov
cmp
das
out
and
movsl
aam
and
repnz
sarb
sahf
add
arpl
cli
cmpsb
ds
cmp
ds
xor
lret
mov
xor
pusha
mov
out
push
pusha
leave
aam
out
push
iret
lods
das
pop
int3
psrad
sub
mov
loope
dec
insl
jge
int
mov
aaa
adc
aad
stos
aam
adc
dec
xor
cmc
loope
addr16
jno
xchg
sbb
pushf
push
cltd
js
jo
add
push
or
stc
lds
cmp
push
bound
xchg
mov
clc
pusha
sub
cmp
pop
repnz
xchg
es
into
dec
jge
dec
jb
mov
inc
cmp
dec
sarl
jae
pop
loopne
into
xchg
xchg
mov
xchg
add
sub
dec
adc
mov
sbb
pop
xor
or
xor
push
mov
dec
sbb
scas
mov
outsl
out
cltd
fbstp
popf
jg
je
movsb
mov
cli
lea
mov
adcl
xchg
arpl
mov
iret
or
js
aas
arpl
andl
xchg
mov
dec
mov
pop
push
mov
cmp
movsb
out
xchg
fstpt
mov
xchg
cld
xchg
pop
or
xor
cmc
xorb
jno
hlt
in
jno
jg
in
sub
sahf
aas
sbb
fstpt
mov
jnp
cmpsl
pop
pop
bound
addr16
into
xchg
stos
ss
mov
jl
dec
pop
loop
xor
repnz
out
inc
imul
fwait
mov
out
outsb
pop
pop
or
rcrl
jecxz
sbbb
sub
cmp
add
xor
xor
inc
jnp
mov
pop
fcompl
fimuls
int
add
fidivrl
mov
leave
mov
decl
sub
mov
sbb
rcrb
dec
and
aaa
loope
add
mov
push
es
xchg
aad
daa
sbb
jmp
mulb
sub
cmc
xchg
mov
shrl
pop
sub
and
fs
and
lock
shr
mov
aad
inc
movsl
pop
fistpl
fdivrl
sti
ss
inc
sub
cmpsb
jns
and
pop
jecxz
sbb
add
dec
ja
and
xor
mov
es
and
je
fsubs
and
dec
jnp
jg
repnz
int
stos
cli
test
loop
mov
test
push
shlb
test
lods
ljmp
notb
cld
syscall
outsl
mov
fucom
addb
cmpsb
dec
cmpsb
inc
inc
sub
scas
and
add
pusha
xchg
into
jnp
sbb
push
sar
lods
aaa
daa
mov
inc
xchg
mov
or
or
sub
cli
adc
jle
repnz
jnp
sbb
sub
loope
fwait
test
mov
fcomi
out
add
movsb
fldt
push
mov
push
imulb
mov
xchg
mov
sbb
mov
arpl
lret
lret
call
sbb
sbb
enter
add
cwtl
fldl
lcall
xor
mov
lods
stos
push
das
ds
dec
dec
adc
sub
xorb
push
jno
xchg
cld
adcb
mov
add
aam
bound
pop
test
mov
out
push
pop
and
enter
bound
pop
pop
pop
daa
xchg
and
mov
fwait
in
in
jne
mov
leave
cs
subb
syscall
jl
and
into
loopne
cmp
xchg
in
push
inc
ds
adc
cltd
xchg
or
popf
sbb
loopne
loop
xchg
lods
sti
dec
sub
in
xchg
sbb
or
mov
frstor
push
stc
insl
std
mov
cmp
sbb
xchg
mov
fdivl
or
add
daa
cmp
jno
dec
jbe
cmp
sbb
mov
in
sub
sbb
pop
and
mov
xchg
dec
stc
dec
lods
pop
das
into
std
pop
ja
sub
dec
push
adc
cmp
aam
inc
jp
jle
inc
mov
adc
jmp
pusha
mov
jge
mov
mov
add
movsl
or
jnp
xchg
push
mov
cltd
jbe
test
sahf
pop
push
dec
pusha
xchg
inc
divl
ss
and
dec
mov
sbb
imul
jge
addb
mov
push
nop
mov
pop
int3
and
push
fiaddl
movsl
adcb
enter
xchg
movsb
rorb
lods
in
ret
insb
push
mov
iret
inc
cmpsb
xchg
mov
int
stos
lahf
adcb
test
sub
loope
arpl
jecxz
lods
stos
inc
lods
negb
mov
popa
sbb
cmp
push
dec
mov
pop
adc
inc
repz
dec
movsl
in
je
pop
xor
fisttpl
das
subl
sub
inc
adc
cli
and
and
into
fdivs
cmp
mov
mov
add
in
cld
and
and
pop
addr16
je
test
rclb
pop
lea
pop
pop
shll
out
and
xchg
in
xor
pushf
jbe
xchg
inc
jnp
sti
fistps
sbb
or
sahf
or
addr16
ret
xchg
cmp
xor
mov
cmp
dec
addr16
jmp
cmp
ljmp
push
gs
ljmp
mov
dec
js
or
jae
loop
call
ss
pushf
in
mov
pushfw
lea
mov
jl
jae
mov
cmp
dec
pop
jl
inc
loopne
mov
push
sbb
mov
add
push
dec
xchg
ds
jle
lods
mov
arpl
xor
or
inc
stos
lret
incb
out
das
jno
dec
mov
loopne
add
into
fwait
dec
add
xor
aas
xor
decl
cmp
jecxz
mov
adc
dec
mov
outsb
fmull
push
ffreep
enter
es
pop
lcall
mov
movsb
arpl
and
xor
hlt
cmpsb
push
shlb
xor
and
jne
cwtl
push
push
cmp
flds
inc
ljmp
sti
outsl
cs
jmp
gs
xor
xchg
dec
shlb
xor
call
test
xchg
and
pusha
dec
dec
add
test
or
jp
adc
add
and
rcl
in
cmp
dec
les
daa
cld
imul
cli
out
jns
mov
xchg
and
popa
lahf
scas
sbb
mov
jl
sbb
sti
fidivrs
mov
idivb
cli
pusha
aad
dec
push
stos
adc
outsb
test
mov
mov
push
or
adc
andl
pop
xor
push
shrb
lea
sbb
and
mov
in
pop
xchg
stc
inc
lock
je
cltd
rolb
xor
inc
or
xchg
mov
ret
jb
in
aad
push
or
cmp
shr
ret
mov
lcall
jnp
push
jb
sbb
dec
imul
add
push
cltd
lds
sbb
pop
push
pop
les
push
out
add
jno
cmp
jle
fincstp
mov
je
stos
mov
sub
jnp
std
xchg
cmp
imul
into
adc
fdivr
sbb
jns
lods
idivl
outsb
mov
dec
xrelease
dec
or
lahf
sub
sarb
sub
frstor
push
cltd
mov
test
and
push
lcall
dec
jno
fidivs
mov
lods
and
aad
mov
es
push
ljmp
pusha
or
adc
addr16
mov
or
cmp
mov
aam
insl
mov
inc
jne
and
and
push
into
cli
clc
sbbl
add
leave
mov
jae
mov
mov
in
incb
jg
push
or
dec
cltd
mov
dec
inc
dec
pusha
lds
and
inc
ja
sti
loope
fwait
xchg
dec
dec
pop
add
or
cli
fistps
xor
jge
pop
addr16
adc
mov
movsl
sti
xchg
adc
lahf
cmp
add
pop
mov
outsb
push
clc
xchg
loop
loope
dec
int
loope
sarb
lods
daa
cmp
dec
flds
dec
add
xchg
ret
add
test
xor
test
ret
stc
lcall
testl
xchg
mov
loop
rolb
addr16
movsl
mov
outsl
je
iret
push
outsl
stos
cmp
push
xor
inc
sbb
xchg
enter
int
loopne
xchg
jmp
push
mov
pusha
popa
in
ror
inc
jmp
cli
test
pop
adc
jae,pt
adc
ljmp
les
sub
lahf
sbbl
mov
je
inc
mov
mov
cli
int3
cmp
mulps
std
adc
push
test
data16
mov
int
adc
sub
jae
popa
das
mov
mov
or
inc
pop
ds
shll
cmp
pusha
xor
shrb
sbb
xor
xlat
lods
jno
or
int
jmp
sbb
push
movl
mov
jo
add
fmuls
movsl
cmpsb
pop
cmpsb
jmp
push
sbb
pop
jle
cmp
imul
movsb
fsubr
inc
ret
cld
outsb
movsl
xchg
js
scas
ds
xor
jb
jge
or
mov
cmpb
cmp
adc
stos
fs
cmp
aad
or
enter
into
mov
push
push
fidivrs
in
aam
adc
or
pop
inc
fwait
repz
lock
pop
rcrl
int3
xchg
xchg
add
mov
jle
pop
push
lods
in
in
rorl
pmaxsw
les
jp,pt
jns
or
out
xor
dec
shr
adc
jae
xchg
adc
f2xm1
dec
mov
shrl
pop
jae
sbb
sti
lahf
bound
movb
push
sbb
imul
scas
lret
test
fwait
and
xor
outsb
push
mov
je
out
testl
fsubl
xchg
inc
dec
in
dec
jecxz
aaa
stos
adc
iret
xor
or
lds
in
xchg
lock
cmpsb
inc
fwait
ret
clc
mov
xchg
out
daa
fisttpll
ret
sti
jp
pop
xor
in
or
push
lods
sub
pop
cmp
pop
inc
push
or
fcompp
jmp
bound
test
inc
divb
add
mov
jns
pop
insb
mov
cs
insb
dec
mov
imul
xchg
xor
ljmp
or
lods
cmp
dec
push
aas
mov
outsl
add
push
jns
jo
sbb
in
fcmovu
outsb
cwtl
loop
jp
add
loop
mov
stos
lea
movsl
add
mov
jl
ljmp
adc
jle
es
cmp
push
mov
mov
add
sti
sub
repz
ljmp
adc
mov
aaa
fidivs
lods
add
outsl
mov
sbb
pushf
inc
mov
popa
adc
addr16
xor
lret
inc
dec
call
and
and
push
mov
lods
mov
lea
enter
dec
adc
xchg
fsubrl
xchg
repz
hlt
sbb
in
fwait
ja
cmp
fstpl
pop
lcall
cmp
leave
dec
int3
push
push
jmp
call
sahf
pop
lret
adc
das
into
jge
sub
lods
mov
test
xchg
jmp
cmp
pusha
jp
daa
cli
sbb
inc
addr16
inc
daa
adc
mov
es
mov
ret
imul
push
add
cmp
mov
mov
and
push
push
lret
dec
and
jecxz
jo
pop
shlb
enter
adc
into
jne
and
add
mov
and
out
cmp
add
lret
int
lret
or
add
rcr
xor
lahf
fwait
es
stc
fstps
xchg
imul
movsl
out
pop
les
xor
xor
adc
sub
stos
aas
rcll
sub
fisubrs
jmp
sub
xor
out
sbb
mov
mov
shlb
out
jns
push
sbb
dec
adc
fs
cmp
fcmovb
pop
dec
repz
out
sarb
pop
mov
loopne
iretw
in
mov
mov
ds
push
es
dec
push
mov
xchg
and
cli
fidivrl
enter
cmp
xchg
out
outsl
sahf
xchg
sbb
push
push
xor
jge
out
adc
mov
add
repz
bound
loope
add
das
xchg
movsb
sar
or
push
cltd
push
lret
jae
add
stos
mov
mov
push
in
sbb
sarb
pop
fnstcw
pop
test
mov
pop
push
stos
test
mov
lcall
add
fnsave
loop
sbb
outsl
cmpsl
xchg
push
mov
mov
mov
out
xor
inc
jl
lods
mov
sub
andl
and
movsl
adc
xchg
xchg
push
je
sub
jl
pop
sti
push
dec
or
aas
push
movsb
hlt
movsb
popf
pop
pop
adc
leave
xorl
sub
pop
or
push
hlt
jmp
arpl
mov
lea
add
test
icebp
lret
jae
negb
aam
xor
les
sahf
out
add
repz
mov
push
mov
mov
mov
sbb
lods
inc
cmp
iret
jne
push
ds
inc
pop
dec
cltd
fadds
es
test
lods
lds
mov
pop
inc
sarb
stos
push
movsb
insl
lret
aad
mov
cmp
sbb
sbb
loop
out
add
xchg
rcll
or
xchg
cmpsb
pop
and
stos
dec
sahf
aad
inc
rcr
xor
and
lcall
inc
pop
fs
xor
leave
pushf
addb
js
das
dec
test
movsb
sbb
lods
adc
inc
sahf
xor
lods
xchg
jmp
insb
data16
xor
pop
pop
inc
bound
call
lods
push
insb
jo
mull
iret
mov
jl
sbb
fldt
xchg
adc
outsb
out
mov
into
sub
inc
push
imul
bound
scas
mov
fwait
add
out
sbb
pushf
cmp
xor
lds
jae
fwait
xchg
inc
jle
dec
inc
sbb
es
lret
dec
xchg
lock
adc
insb
push
adc
push
ret
push
int3
rep
notl
mov
mov
ja
fisubl
mov
mov
mov
xor
inc
out
xor
mov
loopne
sub
into
pop
or
or
fiaddl
sbb
aam
cmpsb
test
push
pop
scas
adc
jb
negb
loopne
lcall
lds
enter
pop
gs
ret
add
cld
or
push
mov
movsl
lods
xchg
shr
scas
mov
mov
shll
sbb
mov
sbb
pop
or
sbb
lahf
add
xor
inc
leave
push
das
cmp
rcrb
fstpt
arpl
shrb
adc
push
mov
popa
add
cltd
adc
mov
nop
sbb
mov
das
jg
fs
lret
and
push
mov
mov
mov
je
in
cli
inc
push
inc
outsl
push
fisubrl
or
jecxz
pop
call
push
int
push
push
ds
stc
ret
mov
addb
sub
sbb
jb
leave
push
imul
ror
mov
hlt
cmc
push
movsb
in
sbb
outsb
icebp
jb
out
and
add
xor
push
outsb
sbb
sbb
cld
cwtl
pop
outsl
mov
pop
cltd
adc
hlt
notl
xchg
push
pushf
dec
xchg
adc
pop
popa
xor
mov
xchg
lods
xchg
mov
in
push
movsl
mov
imul
push
repnz
ss
ljmp
cmp
xchg
and
lret
aad
mov
mov
les
push
and
imul
fsubrp
test
sbb
mov
aad
xchg
daa
mov
ss
and
lcall
sub
cmp
jo
gs
and
xor
add
pop
cmp
jmp
popf
cmp
lock
xchg
cmp
jo
ffree
mov
sub
lahf
scas
insb
and
mov
inc
fsubr
mull
das
pop
sub
dec
push
xor
negb
sub
xor
cli
mov
fldt
xchg
call
lret
cltd
mov
push
and
jecxz
push
inc
sbb
xor
or
outsl
bound
lods
fcmove
leave
or
pop
dec
cld
dec
mov
mov
xchg
outsb
cmc
and
ret
iret
outsb
add
les
push
mov
das
fstps
out
pop
or
add
pop
sbb
xor
je
std
mov
jns
or
fsts
daa
movsl
xchg
push
cmp
mov
jp
fcoml
ss
sub
test
lret
cmp
stos
aam
scas
outsl
xchg
sub
lea
sbb
mov
data16
cltd
or
outsl
mov
lock
fimull
aas
mov
cmp
jecxz
mov
cmc
sub
js
or
or
cld
int
pop
bound
lods
jmp
je
sbb
lods
aam
xlat
sbbb
mov
sbb
inc
mov
cli
dec
dec
fstp
in
mov
or
xor
int
jb
push
ss
in
cli
in
into
push
sahf
bound
pusha
in
test
lods
xor
cmp
pop
mov
int3
jnp
pop
rorb
shlb
leave
arpl
in
jnp
cli
repz
dec
movsl
cltd
mov
cmpsl
xchg
bnd
stos
test
pop
imul
mov
ret
jns
sub
lea
std
inc
sub
dec
or
fstpt
mov
push
or
std
into
lock
fsubrs
imul
std
mov
push
repz
les
pop
icebp
cmp
push
add
pop
jbe
cltd
or
stos
pop
inc
test
push
clc
cmp
dec
fs
dec
inc
sub
mov
and
int3
mov
mov
cmp
lods
pop
mov
inc
jmp
push
mov
adc
push
shrl
push
jl
mov
nop
int3
xor
xor
and
sbb
inc
inc
adc
daa
push
flds
mov
xchg
decl
and
xor
loop
fwait
cmp
xchg
add
mov
icebp
out
int3
outsl
pop
push
add
xor
and
pop
cmp
fimuls
cmp
mov
mov
mov
in
jmp
jge
sti
out
scas
fstp
sbb
mov
jl
aas
and
aas
or
jecxz
xor
cmpsb
fmuls
fwait
popf
mov
mov
sub
or
inc
adc
je
dec
pop
das
fbstp
jmp
insl
imul
push
rclb
dec
jmp
mov
cmp
mov
ret
into
xchg
mov
or
fs
push
out
rorb
and
mov
cs
push
inc
push
push
inc
lcall
mov
cmpsl
ss
bound
call
mov
xlat
or
mov
cld
call
idivb
incb
and
rcl
ss
and
push
sahf
mov
jg
adc
mov
add
add
pushf
sub
inc
mov
cmp
adc
lods
dec
mov
js
lods
lds
push
fnstenv
in
andl
inc
mov
arpl
dec
mov
add
inc
dec
in
fsubrl
cli
jge
scas
cmp
jo
sbb
and
lods
or
imull
out
out
test
pop
lret
aad
mov
pop
sahf
cmc
call
testb
outsl
xchg
push
mov
add
mov
sahf
push
and
decl
adc
sbb
cwtl
pop
lret
rcr
imul
notl
stos
and
cli
jns
lret
push
adc
pop
mov
mov
cmc
std
xor
dec
or
jle
inc
insb
mov
add
pop
sbb
pop
out
testb
jl
sbb
ss
cmp
sahf
push
imul
cs
ret
repz
test
cmp
and
hlt
sub
test
push
mov
adc
push
jno
jge
and
stos
adc
addr16
xorl
push
addr16
and
or
repnz
sub
pop
xor
hlt
rcrb
pop
dec
cwtl
dec
jle
shrl
mov
jp
ljmp
cli
iret
push
push
decb
aad
sbb
into
push
fisubrs
xlat
fcoml
push
daa
ljmp
push
jp
arpl
aaa
out
mov
jg
incb
add
repz
rcl
fldl
insl
popw
cmp
adc
in
cmp
xor
test
xchg
push
cwtl
cs
mov
mov
adc
in
push
aad
loopne
xchg
push
pop
nop
icebp
lods
mov
jb
mov
outsl
and
push
lods
pop
addb
cs
stos
fisttps
cmpsb
sbb
dec
jo
inc
fdivp
inc
cmc
xor
arpl
ds
insb
and
mov
mov
out
jb
hlt
test
stos
dec
jmp
and
pop
repz
lods
dec
mov
shll
mov
loopne
xlat
adc
push
bound
mov
int3
lea
cmc
bnd
loope
loope
fdivrl
mov
into
cmp
shl
inc
pop
lds
andb
sub
movsl
hlt
pop
sbb
loopne
outsb
push
div
in
sub
jg
ror
je
loope
repz
adc
jecxz
sub
int
pop
pop
loope
rcl
sbb
mov
test
cmp
dec
mov
into
push
mov
lds
add
xchg
nop
call
dec
inc
sub
jge
jge
gs
mov
adc
xor
xchg
and
push
and
dec
sbb
shlb
xor
call
out
sub
mov
andl
out
and
ret
pop
in
repnz
repz
in
pusha
fistpll
mov
loopne
or
stc
and
push
popf
jmp
jne
std
ret
sub
pop
dec
add
outsl
inc
push
pusha
xchg
sub
aad
sub
xor
outsb
add
add
test
in
jg
into
pop
xor
push
and
cmp
and
lock
gs
cmp
pop
dec
scas
aas
xchg
inc
inc
out
mov
arpl
bound
cmp
movsl
pop
sti
xor
mov
mov
in
or
movsb
inc
xchg
enter
jno
loopne
repz
or
adc
add
adc
jmp
xchg
aaa
and
jl
push
sbb
loope
outsl
cmpsb
sbb
dec
insl
pop
call
mov
mov
xchg
and
add
lret
stc
in
pop
add
nop
popf
dec
out
cmpsl
mov
xor
inc
jg
outsb
and
ja
and
sub
fdivrs
push
xchg
mov
xor
mov
pop
push
adcb
pop
stos
pop
test
mov
jo
sbb
pop
sub
sarb
sub
adc
cs
sub
ds
loopne
lcall
dec
fwait
lret
rcll
mov
lcall
bound
mov
mov
sti
int
rcll
fistl
mov
inc
mov
lock
mov
xchg
flds
dec
les
cmp
call
cmp
sub
int
sub
stos
and
xchg
push
icebp
jecxz
xor
movsb
shlb
scas
sbb
or
push
dec
test
mov
sub
adcb
cmp
sub
sub
outsb
in
sub
push
sub
pop
rcrl
cmovs
mov
jno
iret
and
xor
adc
adc
adc
scas
mov
rep
test
mov
push
push
pop
or
fisttps
inc
dec
punpcklbw
add
scas
je
push
xchg
jns
xor
sub
sub
add
js
cmp
cmp
das
dec
xchg
sahf
rcll
fstpt
mov
lods
repz
fidivs
inc
call
or
xor
ja
sub
and
jl
cmp
mov
cmp
stos
in
pop
pop
jns
mov
hlt
movsl
scas
lods
mov
not
push
mov
inc
les
notl
cmp
pushf
push
movsbl
sbb
test
and
cmpsl
inc
out
fldt
sub
cmp
orl
movsb
stos
adc
andb
jae
mov
out
xor
aam
mov
stc
icebp
in
insl
pop
xchg
dec
mov
xchg
xor
subl
push
and
out
js
ss
inc
lahf
mov
hlt
aaa
and
fmul
sbb
sub
lea
out
sarb
cmp
pop
pop
pop
enter
shrb
xchg
aam
jno
mov
dec
mov
orl
xchg
inc
fwait
gs
adc
outsl
into
lret
push
push
je
push
mov
or
and
mov
inc
xlat
mov
iret
imul
fsub
mov
cmpsb
cmc
and
in
lock
push
cli
cld
xor
sbb
leave
jecxz
cmp
movsb
mov
repnz
sub
jnp
or
mov
cmp
lea
shl
add
add
pusha
lods
int
in
and
pop
stos
jns
addr16
xchg
dec
dec
adc
pop
jne
scas
mov
arpl
pop
outsl
call
adc
or
pop
jae
fldt
in
hlt
gs
repnz
sub
and
subb
cmp
lcall
neg
fcomi
mov
ds
sub
dec
adc
mulb
out
sub
data16
std
lods
mov
fwait
inc
test
mov
in
add
push
into
movsl
mov
dec
call
arpl
imul
pusha
in
xor
das
pop
cmp
ss
add
mov
shll
dec
int3
mul
mov
add
mov
xchg
and
insl
jle
and
mov
add
popa
arpl
std
mov
or
add
push
push
sub
add
add
rorb
vmovaps
mov
shlb
inc
and
out
mov
jnp
mov
fists
add
arpl
jno
out
mov
insl
outsl
pop
jbe
enter
mov
insb
pop
xor
adc
je
or
fs
mov
lds
in
inc
xor
pop
mov
mov
inc
jecxz
in
fidivrl
mov
mov
cmp
addb
sbb
jp
jg
pop
pop
cmp
pushl
cmpsl
loopne
dec
movsl
inc
in
fimuls
push
into
push
cli
push
inc
xor
cmp
stos
adc
fcompl
enter
cmpsl
mov
das
jno
add
mov
rcrb
lahf
push
mov
cmp
fdivs
dec
cmp
dec
inc
xchg
and
or
push
into
into
or
sbb
repz
sbb
leave
sar
adc
mov
mov
xchg
sbb
and
push
hlt
insl
lret
addr16
loope
inc
icebp
push
push
jle
xchg
xorl
inc
pop
sub
iret
push
scas
or
test
cwtl
andb
mov
push
fidivrl
stc
lods
inc
and
fdivr
mov
enter
mov
jmp
jnp
mov
hlt
movsb
mov
lods
add
mov
jmp
fwait
ljmp
adc
pop
cmpsl
sub
data16
hlt
int3
lods
clc
in
ret
movsl
push
stc
fisttps
or
dec
inc
cld
cmp
add
push
pcmpeqd
sub
and
lock
add
dec
call
fisubl
notl
mov
inc
cmp
pop
je
and
out
aas
jo
pop
inc
and
sbb
mov
bound
pop
stos
jo
fsts
leave
pop
dec
xchg
mov
out
aam
aaa
sub
cmp
mov
jg
sahf
mov
mov
sbb
lods
lret
repz
pop
addr16
sbb
xchg
lcall
adc
add
sbb
and
mov
cmp
lds
repnz
or
mov
js
sahf
lcall
icebp
fbld
mov
cmpsb
lods
int
fadds
mov
cmp
jns
xchg
pop
pop
loope
and
call
jg
fcomip
iret
add
iret
mov
loope
sub
ds
sbb
daa
mov
fs
negb
push
pop
xor
mov
repnz
dec
cs
mov
popf
xchg
mov
cmp
lret
mov
ret
rcrl
sbb
mull
ds
das
mov
xchg
jecxz
cltd
push
or
repz
dec
popf
mov
xchg
mov
in
push
push
sub
mov
sub
stos
push
sbb
sar
mov
xor
testb
and
fdecstp
fnstcw
clc
daa
dec
cwtl
dec
add
mov
and
out
and
fcmovbe
fimull
lock
add
fmull
mov
mov
and
clc
xlat
xlat
mov
sbbb
mov
lret
sub
jns
and
popf
push
stos
out
adc
jae
iret
sub
sbb
imul
testb
pop
pop
xor
pop
push
pop
sub
mov
ret
sbb
ljmp
int3
aam
sub
adc
mov
pop
ret
sbb
cmp
loope
ret
pop
dec
shll
sub
clc
mov
jbe
jecxz
mov
mov
movsl
dec
test
adc
jne
scas
jb
stos
adc
insl
es
es
cmp
inc
int
xchg
out
jge
mov
idivl
lods
xor
or
mov
adc
aad
pop
pop
sub
push
insb
mov
jbe
dec
pop
ret
mov
xchg
lea
lods
add
push
iret
cli
mov
sub
push
cmp
je
das
int
shr
mov
dec
pop
sbb
test
cmc
out
repz
sub
sub
jne
mov
and
ret
adc
in
rcrl
inc
enter
sti
pop
mov
mov
inc
sub
xchg
adc
pop
fsubs
mov
test
aam
lock
dec
notb
or
sbb
jo
addb
pusha
ljmp
stc
shlb
xor
fstl
rep
lahf
inc
int3
adc
mov
lods
dec
enter
mov
in
push
push
mov
push
stc
mov
movsl
lret
mov
out
xor
mov
adc
clc
sub
shl
pop
xchg
dec
or
pop
xchg
addr16
and
aad
jo
jg
ljmp
cmc
pop
sub
add
gs
mov
sbb
dec
lret
mov
sbb
pusha
inc
cmp
ds
shrl
ljmp
adc
lret
mov
pop
bound
push
mov
data16
pop
pop
lret
jg
mov
xchg
in
ret
push
pandn
xor
mov
xlat
jge
imul
inc
les
iret
xor
inc
add
decb
pop
jnp
xchg
movb
add
stc
and
mov
dec
mov
enter
adc
shl
xor
or
insb
std
adc
movsb
jmp
hlt
push
into
cli
pop
test
lcall
and
xor
jp
mov
push
xchg
xor
sub
ljmp
inc
cmp
div
stos
add
in
gs
adc
mov
mov
pop
mov
out
fs
scas
cs
imulb
out
adc
fwait
mov
jns
jb
adc
jns
daa
icebp
insb
call
addl
pusha
mov
movsl
add
lret
adc
repnz
mov
cltd
outsl
aad
xor
mov
lds
xchg
test
in
xchg
in
loope
cmp
fsubs
mov
repz
adc
out
scas
jbe
test
outsb
outsl
mov
cmp
dec
cs
jns
pusha
icebp
out
out
mov
sub
outsl
pop
sbb
imull
lods
xchg
ja
aaa
es
jnp
sbb
or
inc
out
sub
push
loopne
clc
fnstenv
jb
inc
and
test
cmp
cwtl
test
jne
xor
add
xor
insl
xchg
jecxz
and
test
out
mov
in
test
mov
sbb
in
pop
mov
icebp
mov
jno
inc
jecxz
cmpsb
adc
outsl
fildll
int
mov
cmp
dec
dec
xorl
and
mov
or
xchg
repnz
std
push
fwait
mov
pop
ror
inc
sbb
stos
js
arpl
push
mov
lock
pop
and
mov
sub
push
dec
mov
inc
ret
std
dec
mov
fwait
add
mov
outsl
ja
mov
inc
jmp
push
inc
and
dec
lcall
cli
xchg
scas
in
arpl
and
sub
xchg
mov
lds
xchg
call
test
test
pop
push
aam
add
cmp
jmp
pushf
rcll
mov
test
stos
cmp
push
ret
sbb
shll
pop
xor
scas
xchg
adc
fstl
add
xchg
inc
sbb
and
jle
sti
jne
jge
repz
sbb
jno
ljmp
test
in
stc
mov
pop
mov
std
cmp
push
jbe
pop
adc
mov
aam
jnp
adc
add
in
mov
je
jmp
push
cmpsl
sub
mov
or
rcl
mov
inc
insl
leave
xor
fucomi
stos
test
sub
ret
clc
stos
xchg
adc
data16
call
add
and
lea
imul
outsb
xchg
test
in
aas
xchg
inc
jbe
adc
jno
pop
shlb
out
js
test
mov
mov
adc
mov
inc
les
fs
jge
lret
faddl
sub
mov
mov
cs
jbe
pop
sub
sbb
mov
push
jne
push
cs
xchg
or
xor
mov
sub
test
dec
cmp
lods
jle
out
jne
inc
lea
inc
inc
mov
mov
mov
lahf
in
and
pusha
sub
stos
shll
xchg
and
sub
cmp
popf
pop
push
gs
lahf
ficoml
ret
fidivrl
dec
sbb
and
stos
mov
xchg
mov
aad
pop
icebp
or
in
jmp
cwtl
mov
popa
out
mov
or
test
lret
add
mov
jg
fs
fldl
dec
imul
imul
loop
sti
dec
xor
rcl
mov
mov
cs
sbb
hlt
mov
mov
add
xlat
leave
dec
fbld
mov
push
daa
mov
sub
push
test
mov
sbb
push
ficompl
mov
orb
and
fstps
mov
ja
sbb
inc
mov
mov
inc
bound
ss
out
mov
dec
dec
inc
mov
xor
mov
insb
and
mov
mov
and
call
aas
jae
aad
in
cli
sbbb
test
xchg
sbb
mov
mov
cmp
xchg
push
sbb
ret
dec
adc
pushf
ljmp
imul
mov
sti
fiadds
aam
xlat
push
push
xchg
or
xchg
mov
and
xchg
ret
jle
iret
mov
shlb
push
jbe
ret
insb
push
sbb
daa
mov
adc
cltd
sub
inc
aad
cmp
dec
lcall
push
add
pop
fidivl
lret
fadds
xor
jg
jnp
add
pop
xor
lret
fisubl
pop
pop
inc
cmpsb
jecxz
pop
jae
mov
imulb
cltd
hlt
mov
enter
push
lds
mov
fimull
xor
xchg
fwait
sub
loop
stos
inc
out
ret
push
adc
aad
adc
inc
adc
negl
cmp
aas
jo
mov
mov
inc
pop
add
movsb
stc
sbb
add
out
cmp
sub
and
sub
outsl
outsb
scas
pop
adc
inc
mov
inc
sbb
xor
das
lods
test
inc
adc
xchg
mov
mov
mov
es
jmp
es
pop
or
or
xor
pop
mov
mov
jne
mov
pop
xchg
mov
and
sub
scas
mov
hlt
sub
jg
add
or
add
enter
test
dec
inc
jae
js
pop
in
pusha
arpl
icebp
ret
andb
scas
push
and
cwtl
inc
das
je
dec
cmp
lahf
add
pop
mov
scas
dec
pop
adc
cmp
xchg
xchg
and
arpl
out
arpl
into
xchg
ss
cmc
lock
jae
mov
scas
mov
lods
pop
mov
cmpl
cmp
repz
mov
std
lds
add
cmc
cmpsb
xor
sbb
hlt
and
xchg
push
jge
shl
std
in
mov
sub
mov
loop
cwtl
arpl
mov
es
mov
in
pop
shlb
jno
jbe
jp
fucom
out
jge
fsubrs
push
jbe
das
shl
sub
mov
in
push
scas
aas
dec
daa
mov
cmpsl
cmp
mov
shl
int
mov
pop
dec
loop
xchg
xor
or
push
aas
add
mov
daa
mov
icebp
jae
xor
mov
inc
push
pop
ret
pop
inc
add
mov
sub
sbb
mov
test
push
pushf
push
fwait
mov
sbb
cwtl
pop
sub
jle
and
aam
sub
mov
mov
shrl
sbb
in
outsl
mov
mov
mov
pop
xchg
aad
addr16
pusha
cli
roll
loop
mov
cmp
data16
enter
cmp
mov
pop
aam
lock
fists
clc
push
shl
mov
popf
mov
daa
mov
sub
gs
clc
leave
fs
push
call
xor
xor
mov
into
lret
push
mov
pop
mov
sub
push
and
sbb
outsl
shll
rcr
xlat
add
inc
insb
sbb
adc
movsb
or
mov
mov
adc
inc
sahf
pop
cs
das
rorl
xchg
andl
loope
cmpsb
fwait
into
mov
insb
pop
xchg
loope
lahf
into
inc
mov
mov
xor
mov
jmp
inc
sbb
cmp
cmpsb
mov
es
add
pop
jo
aam
fs
add
je
lcall
dec
push
inc
push
lcall
mov
push
mov
mov
rorb
rcrb
jl
nop
cli
loope
xchg
mov
lds
notl
lock
push
cmp
iret
mov
and
rolb
rolb
insl
mov
adc
les
adc
test
mov
mov
inc
mov
jmp
lahf
sub
fidivrs
cmp
push
fcmovbe
sbb
test
mov
or
pop
out
inc
mov
or
fdivs
xor
adc
stos
ffree
mov
xor
xchg
int
idiv
call
loopne
or
sti
pop
jnp
inc
sti
or
lds
ficompl
movsb
sub
les
in
inc
int3
fcompl
insb
inc
add
inc
shr
adc
cmp
dec
insb
lds
cmpsb
mov
rol
xchg
adc
xchg
int3
xor
push
stos
fs
xchg
mov
inc
in
es
jl
sbb
rcll
scas
mov
stc
arpl
cmpsb
sub
outsl
and
dec
lods
lcall
dec
jge
test
pop
shll
add
jbe
sub
jne
sbb
inc
sub
scas
pop
xor
add
fsubrl
jle
shlb
sbb
stos
jnp
add
mov
push
aam
pushf
jns
pop
repnz
mov
ret
or
mov
ret
gs
sub
xor
inc
push
outsl
adc
sbb
mov
lods
pop
and
in
mov
push
enter
lds
inc
cmpsl
dec
push
push
push
pop
daa
xor
popf
jnp
jmp
neg
out
js
add
mov
xchg
mov
push
insl
ss
test
push
aad
call
and
inc
xorl
lock
adc
pop
mov
jmp
mov
add
jmp
out
ljmp
sub
sbb
cli
pop
jno
notb
in
or
xchg
gs
insb
popa
mov
das
leave
sbb
jle
mov
into
dec
pusha
daa
mov
jge
imull
test
mov
push
cmp
xor
aas
sti
outsb
pop
xchg
lea
insl
sub
das
andl
jno
xchg
insb
ret
mov
mov
mov
pop
rcr
pop
inc
cmp
in
loope
jmp
sbb
imull
sub
jle
or
decl
push
mov
pop
lods
inc
pop
push
and
and
int
mov
in
and
ja
ljmp
mov
fisubs
jns
lea
jne
jae
mov
or
cmp
jmp
cpuid
andb
xor
imul
and
pop
jge
cmpsb
mov
stos
jns
enter
cmp
xchg
fdivrs
mov
dec
inc
dec
and
sahf
jp
xchg
gs
out
call
in
cmp
cmpb
or
lret
sbb
pusha
cmp
inc
mov
pop
pop
imul
js
push
xchg
pop
inc
sub
dec
addr16
cmpl
loopne
cwtl
sbb
dec
std
jb
test
outsl
or
sbb
leave
clc
ss
leave
dec
add
pushf
decb
sti
into
pop
mov
leave
mov
jne
mov
rol
insl
aam
popf
repz
cli
inc
jnp
sahf
cmpsb
gs
fiaddl
mov
lret
clc
clc
inc
gs
and
aad
mov
movsb
mov
mov
inc
in
in
add
jmp
and
das
into
mov
data16
pusha
xor
jg
incb
mov
push
add
stc
lret
movsl
push
scas
outsb
add
aad
sbb
cmp
insl
jns
mov
xchg
jno
xor
test
and
cmp
movsl
adc
popa
inc
lods
push
out
or
jmp
aam
fwait
loopne
stos
lods
sbb
call
inc
aas
out
sbb
xor
pop
addr16
outsb
std
ret
in
fstps
sarb
xor
xchg
test
inc
adc
cmp
jmp
inc
sub
rorb
sub
and
fcompl
orb
sti
pop
sahf
sbb
test
aad
ret
push
add
in
dec
pop
sbb
repnz
mov
xchg
outsb
push
popf
and
push
xlat
push
cld
sub
xchg
std
lret
and
add
jl
cltd
dec
cmp
hlt
xchg
inc
bound
xor
int3
cmp
mov
scas
test
out
mov
leave
sub
popa
push
bound
pop
ja
test
xchg
dec
daa
mov
push
or
jb
mov
fwait
and
mov
pop
lods
jl
adc
je
dec
les
rcl
data16
lahf
lret
mov
and
cltd
or
daa
mov
jl
push
out
sbb
ret
lods
mov
sti
jmp
bound
dec
sub
imul
push
jge
adc
es
or
iret
aas
xchg
push
cmp
dec
pop
pop
mov
mov
ljmp
loop
cmp
sbb
les
fsts
xor
mov
or
xchg
cltd
push
out
test
push
fcompl
movups
loopne
fldl
sbb
xor
dec
popa
add
cmpsb
dec
ja
shrl
ja
xchg
and
stos
dec
and
js
inc
sub
mov
imul
push
mov
xchg
outsl
sub
inc
add
mov
mov
cltd
stc
pop
insl
cltd
sbb
sub
sbb
shrb
push
push
clflush
stc
push
loope
stos
aas
sbb
add
ljmp
push
sarl
sahf
lret
lods
gs
or
pop
inc
test
loop
jmp
sub
das
mov
mov
mov
add
or
sub
fsubrl
dec
lock
test
cmp
mov
mov
ret
insl
pop
iret
clc
cmp
jne
pop
sahf
add
imulb
sbb
shll
repnz
mov
loop
push
lods
into
inc
xor
pop
call
jle
and
insb
mov
repnz
fidivl
jnp
outsb
test
inc
and
jo
jae
mov
test
movsl
sub
scas
push
or
int3
xchg
popa
insb
inc
lret
mov
xchg
lods
xorb
mov
or
push
push
cli
aaa
rcrb
mov
and
mov
cs
lods
fldcw
mov
mov
jnp
sub
pop
mov
inc
jae
cmp
cmp
pop
push
stos
aam
ret
sub
pop
sub
pop
cmc
push
dec
sbb
cmc
std
pop
cmpsl
inc
lock
in
mov
maxps
out
lret
lcall
pop
test
js
lea
imul
xchg
push
xchg
loopne
aaa
push
mov
xchg
orl
rcll
or
adc
jb
jle
rcrl
sub
mov
iret
rorl
pop
loop
je
jp
adc
movsl
pusha
lret
sub
jbe
xchg
fsubrl
es
sub
test
cmp
out
scas
test
xor
lock
pop
jmp
push
pop
test
pop
adc
movsl
das
lock
jae
in
dec
scas
stos
sbb
pop
insb
roll
sbb
jmp
insl
bound
xchg
sbb
pop
subb
pop
and
jae
push
dec
loopne
movsl
cli
lods
lret
mov
push
insl
mov
cmp
test
fistl
sub
int3
jns
pop
jle
testb
sbb
lods
ror
hlt
sbb
cmpsl
iret
cli
and
in
push
push
pop
push
sub
repz
dec
jb
mov
mov
pusha
adc
pusha
jb
outsl
mov
fmuls
jg
mov
or
inc
mov
sti
push
psubq
adc
and
std
push
push
sbb
orl
mov
mov
mov
insl
add
pop
ret
or
cmpsb
insl
out
and
inc
cli
repz
jne
or
mov
inc
pop
stos
aam
push
je
out
jno
xor
lcall
sbb
in
dec
call
jp
insb
insb
push
imul
sbb
mov
xlat
pop
cwtl
mov
mov
adc
and
mov
inc
loop
dec
stos
imul
les
hlt
add
jmp
xchg
ret
imul
into
shl
cmp
cmp
stos
mov
sub
in
sub
sbb
mov
sbb
ret
aad
rclb
in
outsb
cli
adc
lock
imul
mov
out
mov
das
cmp
xchg
outsb
sti
mov
and
out
mov
add
jp
mov
lods
fmuls
jbe
sti
inc
jne
dec
mov
add
loope
stc
call
lcall
push
jge
cmp
lret
pop
inc
fdivrp
push
lret
call
fwait
pop
sub
mov
out
mov
adc
stos
lds
cmp
imul
push
inc
call
fdivrl
fdivs
popa
add
call
nop
xor
mov
dec
in
mov
fwait
lret
sub
and
jge
push
cmp
js
xchg
pop
rcrb
fwait
mov
aam
lods
aas
mov
adc
jge
xor
mov
clc
nop
jo
cmp
movsl
jg
iret
cld
inc
push
nop
push
pop
dec
repz
sbb
xchg
add
cmp
mov
pop
dec
out
xor
jmp
imul
adc
ret
xor
sbb
js
ljmp
mov
scas
xor
cmp
mov
jle
jb
dec
shrl
insl
js
lea
sahf
js
out
into
dec
xor
mov
arpl
cmp
sub
mov
xchg
clc
inc
shll
std
movsb
and
aas
jp
fsubs
and
lcall
xchg
jno
sbb
bound
lret
ds
pop
mov
xchg
lods
jo
dec
push
fsubrp
and
mov
repnz
pop
dec
popf
sets
inc
test
insl
into
fnstcw
outsb
jmp
mov
adc
inc
test
cli
inc
inc
or
pushf
mov
pop
repz
aad
iret
bound
leave
and
mov
cwtl
ror
pop
pop
mov
sub
fdivrs
rolb
mov
mov
fisttps
push
sbb
xchg
data16
rolb
xchg
insb
mov
and
cmp
or
cmpsb
sbb
neg
test
dec
push
das
cmpsl
sbb
test
jae
xor
mov
leave
adc
pop
call
inc
hlt
ja
movsl
push
or
rorb
and
push
sub
movsl
into
hlt
idivl
stos
sbb
sahf
xchg
sbb
xor
jns
lods
cmpsl
and
mov
sub
sub
push
xchg
jns
lret
imul
xor
inc
mov
sbb
fdiv
cmp
aas
dec
addr16
pop
je
cmpsl
or
push
dec
andb
mov
aad
cltd
std
jmp
imul
decb
ret
add
adc
movsl
popf
mov
in
cmp
cmp
dec
sub
out
or
jb
fiaddl
sbb
sub
movsb
lods
in
js
xor
fucomp
or
xchg
gs
leave
loopne
lcall
sub
xorl
cmp
loop
jle
loopne
cmp
mov
mov
lds
mov
ror
pop
jp
insl
xlat
dec
sub
rol
lods
adc
leave
jp
clc
repnz
or
mov
pushf
test
call
mov
and
adc
jle
test
lcall
in
in
sbb
mov
fnstsw
mov
cltd
in
xor
xor
mull
dec
sbb
adc
imul
mov
pop
lret
cmp
in
lock
scas
cmp
sbb
std
xchg
setge
movsb
cld
push
insb
jae
xor
fdivr
sahf
lods
pop
and
pop
push
inc
bound
mov
fs
imul
inc
mov
ret
movsb
xchg
leave
xchg
test
notb
test
pop
and
mov
sub
add
imul
fs
jo
push
decb
xor
mov
in
jb
popa
push
leave
pushf
cmp
push
mov
jle
into
adc
pushf
mov
or
movb
cmpsb
repnz
or
insl
and
add
pop
scas
aad
cmc
and
xchg
mov
stos
add
shrb
adc
outsb
das
faddp
and
pop
into
pop
cmp
cmp
out
outsl
enter
out
aaa
imulb
xor
mov
shr
xor
mov
adc
loope
cmpsl
fldenv
mov
lret
test
xchg
adc
lock
xchg
xchg
add
xor
test
or
cmp
arpl
push
pop
in
lret
xor
add
hlt
lahf
cmp
mov
mov
imul
lods
jg
adc
add
dec
pop
adc
hlt
fisubs
sbb
dec
imul
mov
xor
loop
pop
dec
dec
and
clc
mov
adc
mov
les
loopne
loop
popf
rclb
pop
dec
adc
inc
xchg
je
or
push
shrl
xlat
push
xor
into
shrl
xor
lods
ss
push
daa
jl
aam
lretw
adc
fcmovnu
cmc
add
pmulhuw
aas
ret
add
push
scas
dec
sbb
xor
mov
ffree
je
dec
sti
xchg
outsb
push
push
dec
lret
adc
inc
roll
add
in
js
aaa
mov
iret
adc
mov
mov
cmp
mov
xor
fptan
jbe
cs
imul
add
mov
adc
adc
sbb
scas
loopne
arpl
mov
adc
std
jno
xor
push
lea
clc
jmp
push
rorb
fmul
shlb
clc
int
adc
pop
rcl
jecxz
jge
repnz
jmp
jns
divb
sbb
pop
dec
ds
jl
lds
ret
pushf
ss
daa
out
into
cmp
ret
sbb
fistl
mov
push
adc
cmp
fdivs
dec
insl
arpl
xor
iret
in
insl
mov
aad
xor
xor
mov
jp
push
cmpps
lods
ss
adc
sbbl
jns
mov
push
lret
je
xor
imul
repz
js
punpckhwd
ret
das
xor
stos
mov
xchg
jbe
mov
xor
bound
test
fimull
adc
xor
shlb
fwait
mov
push
cld
inc
adc
std
test
test
movsl
and
cmp
cmpsb
mov
sbb
add
rcrb
outsl
mov
pop
add
into
or
stos
pushl
xor
es
mov
out
test
lcall
pop
inc
mov
mov
dec
sbb
jl
lea
mov
lds
cwtl
sub
mov
call
or
dec
addb
into
scas
pop
xchg
or
and
lock
inc
pushf
enter
je
lret
es
sahf
pop
push
test
or
or
movsb
sbb
pop
imul
cmp
cwtl
mov
dec
test
pop
pop
test
dec
pavgb
mov
push
mov
inc
roll
popa
cmpsl
dec
jle
jne
sbb
sub
mov
movsl
shr
cmpsl
push
sbb
mov
and
es
jmp
add
push
int3
enter
fldenv
gs
cmp
dec
std
stc
je
out
pop
sbb
or
and
and
lock
call
imul
cmc
push
iret
add
dec
lods
pushf
dec
shrl
or
call
mov
insb
mov
stos
pop
pop
mov
sub
mov
pop
xchg
add
movsb
addl
addr16
enter
ds
mulps
std
jnp
cmp
aas
pop
add
clc
pusha
or
test
xchg
lock
inc
cli
ljmp
sbb
mov
sbb
push
add
cmp
clc
fsubp
xor
fstps
push
mov
pop
inc
inc
push
loopne
xlat
push
cli
fldl
lret
or
pop
jmp
add
insb
mov
jne
and
lcall
add
mov
pop
jmp
xchg
clc
mov
lods
push
into
pop
sahf
pushf
sbb
jb
mov
cld
loop
push
jo
or
adcb
stos
ret
fsubs
sbb
sbb
mov
daa
ss
sub
les
movsl
ljmp
xor
sbb
xchg
xlat
popa
jnp
fs
pop
or
shll
or
imul
ljmp
mov
jg
rcrb
test
or
sbb
repnz
mov
imul
mov
or
xor
fisttpll
cld
testb
scas
lea
xchg
adc
mov
xor
data16
popf
push
fcoms
pop
inc
movl
cmpsb
or
fiaddl
sbb
jb
in
enter
scas
sbb
inc
dec
iret
ret
or
sub
jge
mov
xchg
ret
popa
cmp
cs
xchg
push
std
in
sbb
and
add
cmp
xor
xchg
stos
mov
mov
lahf
pusha
sbb
dec
xchg
sub
mov
lahf
dec
push
dec
jnp
pop
and
cmp
pop
shl
sbb
scas
mov
jecxz
mov
out
pop
mov
test
jg
add
dec
mov
aaa
jl
cmc
data16
lds
sub
xchg
je
leave
sub
jecxz
inc
mov
lcall
fstpt
lret
daa
sbb
mov
jo
cld
insb
add
adc
fwait
inc
ss
in
jb
ja
jnp
sbb
push
pop
push
das
or
lock
mov
je
test
aam
loopne
sbb
outsl
xor
fdivl
push
add
out
cmovb
lcall
mov
cmp
mov
insl
popa
cmc
pusha
lahf
fistl
cmp
push
das
ds
stos
rcrl
cmp
cltd
and
and
fimull
xchg
imul
lds
stos
mov
pop
pop
popf
mov
sub
pop
sbb
pop
fisubs
fdivr
and
frndint
scas
dec
jae
push
push
loopne
out
lret
push
jnp
stc
clc
adc
adc
int
les
adc
mov
jge
inc
jnp
ficoms
mov
pusha
lahf
push
or
loope
das
mov
lods
mov
and
sub
sub
lcall
rcrb
or
sbb
mov
xchg
sbb
sbb
cli
push
pop
sbb
inc
out
mov
or
das
cmp
test
fwait
ret
out
call
dec
inc
sub
std
pop
xchg
pop
mov
pop
push
test
mov
inc
push
sti
pop
fists
es
fmuls
jno
jne
sti
shl
movl
fwait
es
int3
in
xchg
shl
adc
lahf
sub
packsswb
lds
movsb
mov
or
into
pop
mov
mov
arpl
daa
aas
nop
mov
das
ficompl
xor
pop
imul
mov
adc
icebp
pop
test
sbb
test
or
outsl
scas
repnz
int3
sbb
pop
stc
mov
cmp
push
jg
loopne
sub
out
jno
push
insb
sub
into
pop
jae
jae
push
mov
xor
sub
jb
loopne
adc
fmulp
sahf
aas
fstpt
pushf
popf
mov
jle
add
popa
pop
mov
push
rcrl
add
xor
cmp
loopne
jge
mov
inc
mov
jns
mov
loopne
push
sahf
outsb
mov
adc
pop
stos
inc
insl
rcrl
adc
insb
rclb
push
xor
data16
and
sbb
bound
fidivl
push
and
call
movl
cmp
or
fdivl
lret
ljmp
repz
popl
adc
insb
mov
sbb
cmp
stos
mov
sbb
outsl
xor
pop
aaa
jno
fsub
inc
test
ss
lcall
xor
negb
mov
jmp
or
sub
push
cmpsb
and
sbb
aas
addr16
sub
sub
mov
lret
nop
xchg
jb
enter
cmp
mov
or
xlat
int3
jl
jp
cmp
lods
lea
stos
fildl
mov
sub
push
jmp
std
shrl
popf
stc
icebp
sub
insb
dec
sbb
cmp
fs
or
pop
ret
xor
or
test
push
sbb
sub
repnz
or
mov
fdivp
imul
cmpsl
fdivrl
iret
sbb
xlat
out
or
inc
and
out
sbb
xchg
mov
and
jo
imul
or
mov
mov
jbe
inc
push
cld
into
mov
push
xchg
pushf
sbb
and
pop
fldl
shlb
dec
shl
in
or
scas
jecxz
xchg
hlt
add
cwtl
cli
test
rclb
jbe
loopne
jb
iret
fwait
mov
inc
adc
add
int3
cmp
dec
cwtl
shl
stc
mov
cmp
add
popf
jmp
jae
pop
mov
push
call
inc
or
aaa
cmp
lahf
insl
xchg
jge
je
sbb
or
mov
les
data16
and
xor
out
pop
push
sub
rcl
mov
sbb
roll
outsb
sti
stos
das
out
movsb
jno
jae
push
sar
subl
fwait
repz
stc
xchg
sub
push
dec
sub
call
inc
sub
jne
std
sbb
mov
xlat
jecxz
mov
sub
or
imul
mov
fucom
jb
adc
ret
aad
push
add
jle
outsl
rorl
inc
or
mov
out
cmp
mov
jmp
popf
pusha
insl
xchg
test
jo
mov
lock
inc
out
inc
xchg
add
and
ljmp
and
mov
inc
push
mov
jno
mov
sub
mov
xchg
dec
jp
popf
jo
xor
call
jp
push
ret
add
insl
mov
leave
adc
in
mov
enter
sub
in
and
sbb
fwait
insl
sbb
call
add
rcr
loopne
sub
ds
sub
outsl
adc
mov
mull
lret
enter
je
outsl
into
testl
clc
aam
xor
jecxz
dec
pop
call
cmp
mov
sub
cltd
scas
in
and
inc
lcall
lcall
add
mov
cmpsl
les
fs
mov
rcrb
popa
pop
data16
out
dec
xchg
test
xchg
sub
jb
pop
scas
stos
aaa
push
dec
jbe
lds
and
les
sub
inc
dec
ret
sub
roll
fwait
mov
push
fisttpl
cmp
inc
cmp
repnz
xor
andl
in
dec
aaa
xchg
adc
mov
mov
ret
adc
sub
inc
loope
add
sbb
shrb
lret
mov
aas
mov
sbb
in
ja
psubd
shrl
cmp
xchg
inc
add
fbld
cmp
aad
sub
sub
mov
test
mov
int
push
ds
jae
daa
adcb
xor
dec
ret
sub
or
xchg
cltd
mov
mov
in
iret
loop
addr16
add
lods
cmp
sbb
fidivrs
loope
mov
ficoms
insb
sbb
nop
lock
sbb
jmp
add
and
xorb
push
fsts
loop
jmp
xchg
dec
pop
lods
out
dec
mov
xchg
and
sub
pop
insb
fidivs
divb
bnd
add
cwtl
movsb
scas
inc
mov
pop
cmp
and
loopne
sbb
mov
sub
inc
push
pop
fsubs
popf
jb
in
je
lcall
dec
es
sub
roll
ret
js
in
aaa
push
mov
adc
push
adc
outsl
ret
xchg
sbb
jns
out
sub
xor
pop
out
pop
inc
jg
popf
andps
pop
sarb
test
dec
pop
bswap
and
shrl
inc
jb
mov
test
pusha
mov
test
rcrb
dec
in
ret
shufps
mov
in
cmpsb
mov
mov
mov
add
shll
dec
idivb
test
ret
and
jp
cmpb
cmp
aad
and
fldenv
ss
popa
cli
inc
sti
mov
ds
out
rcrb
fwait
mov
push
mov
xchg
cwtl
les
mov
cmc
jmp
pop
jg
sub
cmp
insb
sbb
jle
out
mov
scas
or
lea
aaa
mov
xchg
pushf
push
cmp
mov
bound
sub
lock
daa
js
mov
sub
lods
sub
ret
rolb
jno
and
cmp
inc
lock
push
int
inc
or
aas
fcoms
jge
fcmovnbe
push
xchg
in
adc
sub
pop
es
ret
or
dec
mov
mov
and
test
xchg
popf
jg
fcmovu
jns
js
jbe
lock
je
stos
fildl
es
mov
xchg
jmp
mov
inc
pop
ja
xor
inc
cmc
and
insl
jne
inc
sub
out
add
addr16
push
jge
lock
inc
in
cld
mov
addr16
push
pop
cmpsl
pop
jae
fwait
out
adc
add
xor
push
and
fcmovnb
shrb
loope
mov
inc
ds
das
leave
imul
sarl
dec
fstl
mov
in
int3
sub
push
cmpsl
mov
dec
or
mov
xor
dec
xor
or
imul
adc
stos
out
cmpsl
rcrb
mov
rolb
call
stos
jl
jb
and
iret
nop
scas
fnsave
mov
jae
sbb
inc
loopne
loopne
xchg
fwait
push
jp
out
mov
out
cmpsl
jl
ja
and
jns
cmp
jl
mov
or
decb
xchg
xlat
test
or
les
pop
and
cmp
arpl
jecxz
xor
nop
in
sbb
test
icebp
into
repnz
cwtl
or
ret
std
in
xchg
nop
fnsetpm(287
ds
testb
push
and
push
scas
lret
jg
xchg
jp
imul
inc
sbb
aas
cs
mov
lods
sub
lea
cmpsb
or
mov
pop
adc
mov
dec
and
inc
je
pop
sbb
jge
addr16
addr16
popf
adc
shl
jge
add
testl
mov
aas
jns
mov
dec
mov
jecxz
cmpsl
sub
pop
push
pop
clc
pop
je
push
outsb
lds
icebp
bound
sbb
shlb
pop
inc
mov
dec
push
xchg
pop
xor
sbb
jp
test
shl
push
ret
sbb
push
jge
cmp
stos
test
int3
adc
lcall
movsb
adc
and
rclb
sbb
sub
iret
cmpsl
dec
stos
cmp
nop
cmpsl
shl
ror
mov
inc
sub
cmp
or
iret
ja
xor
mov
adc
xchg
sub
mov
insl
push
in
sbb
aaa
fcmovb
ret
mov
test
sbb
loopne
or
ret
arpl
inc
xor
movsl
out
add
repz
jno
cmpsb
in
push
mov
in
mulb
fstpt
xor
in
inc
adc
and
repz
or
fs
and
aam
inc
sub
xor
mov
cmp
mov
iret
repnz
adc
pop
jno
fs
fdivl
loope
icebp
aaa
inc
sub
or
in
cli
out
mov
fnsave
cmp
add
and
mov
sbb
ret
push
movsl
icebp
cmp
inc
mov
cmc
mov
into
mov
lcall
aad
sub
push
lea
sti
lea
enter
ret
push
or
fdivp
or
pop
aaa
sub
std
repz
push
xchg
int
dec
mov
roll
out
jb
mov
inc
shll
lds
test
ret
out
cs
cmpsb
adc
adc
hlt
cmc
xchg
adc
xchg
push
movsb
inc
les
jle
icebp
add
mov
sbb
ss
pop
push
mov
xor
fsts
call
outsb
adc
adc
xchg
shll
sub
pop
fwait
adc
shrl
insb
cmc
fs
test
rcll
pop
aad
int
push
sub
nop
cmp
lcall
pop
mov
imul
out
pop
pop
jb
repnz
xor
test
or
adc
call
mov
pop
sbb
cmp
test
xor
hlt
and
mov
mov
jge
jg
mov
fsubs
adc
pop
push
jecxz
pop
mov
sub
fs
jbe
sub
and
addb
sbb
adc
int
push
inc
cmc
pop
out
cmpsl
rolb
notb
xchg
imul
xor
mov
mov
xchg
cmp
pop
adc
add
cmpsb
mov
dec
push
add
xadd
jo
jns
jb
cmpsl
jae
xchg
lret
push
popf
adc
mov
pop
mov
add
repnz
inc
or
or
imul
or
in
out
mov
dec
in
outsb
stos
test
or
pop
andl
mov
loopne
jmp
test
cmp
jb
jg
leave
or
bound
jle
rcr
cmp
into
and
xor
sbb
fldcw
xchg
inc
pop
or
cmp
scas
lret
icebp
xor
mov
outsb
xor
jle
je
popa
shr
fidivrl
cmp
loop
or
fidivl
pop
loop
cltd
xchg
push
and
shr
pop
aas
test
pusha
xor
pushf
fcoml
out
jp
out
cld
mov
xlat
or
neg
xchg
jl
pop
call
daa
push
push
cmpb
fdivl
jo
push
dec
daa
shrl
push
xor
arpl
cmpsb
jo
jge
lock
xchg
lcall
test
pandn
pop
cmp
jbe
imul
ss
mov
test
rolb
sahf
enter
sub
xlat
adc
inc
ja,pn
push
stc
xor
imul
test
sti
and
arpl
fwait
in
push
pop
xor
cmp
xchg
insl
mov
xor
sbb
test
mov
or
add
sbb
arpl
sarb
mov
mov
mov
push
sbb
test
sti
or
insl
inc
outsb
jp
inc
or
mov
jo
test
pushf
xchg
cmp
dec
mov
faddl
in
sbb
jmp
mov
dec
ret
stos
insb
fbld
mov
cmp
sbb
or
inc
test
scas
sbb
lahf
shrb
stos
testl
pop
js
sti
lods
stos
and
mov
dec
mov
sub
cmc
xor
lea
ficoml
adc
cmp
stc
data16
inc
cmp
inc
pop
dec
jbe
jp
pop
xor
mov
add
add
popf
pop
or
mov
push
pop
daa
les
sub
adc
jo
xchg
xchg
cmp
add
or
push
mov
int3
mov
jg
iret
lods
outsl
jnp
mov
insb
leave
dec
inc
lret
scas
ljmp
add
ss
add
dec
sbb
clc
mov
cli
lcall
xor
into
lds
js
add
push
in
mov
sbb
std
push
cmpsb
adc
sub
mov
xlat
ficoml
ljmp
sbbb
dec
dec
sub
adc
fbld
sub
je
addr16
lcall
dec
fisubs
fdivrl
sbb
in
stos
pop
scas
pop
jg
cld
pop
int
movsb
out
inc
js
cmp
dec
inc
add
adc
mov
lock
sub
jmp
jle
push
xor
mov
gs
adc
xor
jne
les
loop
and
jmp
fs
imul
add
jno
adc
mov
in
shlb
popf
push
or
adc
js
lock
repnz
push
stc
mov
repz
mov
insb
icebp
pop
push
mov
pop
stc
out
pusha
iret
push
jnp
or
xchg
mov
xor
leave
ret
and
in
sub
dec
insb
scas
pop
mov
pop
sbb
insl
pusha
push
add
push
xchg
cmp
fists
cwtl
mov
rorb
mov
push
cmp
aaa
bound
pop
dec
sub
cmpsl
dec
mov
xor
add
loope
gs
mov
pusha
or
mov
dec
sti
dec
or
repnz
xor
mov
out
lahf
mov
xchg
cmp
aaa
test
out
xchg
jne
or
and
sbb
sbb
jbe
push
mov
push
cmp
pop
pop
sbb
insb
cmp
fcomps
dec
pop
pop
xchg
mov
in
sbb
lcall
pushl
fiaddl
cld
jle
bound
scas
mov
pop
je
int
stc
mov
cmp
mov
sahf
jb
dec
jns
cli
jle
mov
ds
iret
shl
clc
and
push
lds
scas
xchg
arpl
xor
jl
cmc
int3
mov
pop
push
ds
test
inc
xor
sti
xor
xchg
xor
lret
jae
ficoms
mov
cmp
add
jae
call
subl
ret
xchg
out
mov
push
jo
adc
pop
mov
gs
cmc
mov
inc
push
mov
aaa
or
push
jle
adc
inc
mov
push
lds
push
pop
sub
dec
out
dec
mov
mov
fisttpll
mov
mov
cltd
arpl
mov
repz
fldt
jp
outsb
jnp
mov
mov
add
sti
mov
sahf
cmpsl
cmp
call
mov
push
adc
inc
push
xchg
and
or
xchg
leave
adc
xchg
sbb
xor
pop
sbb
std
mov
pop
imul
sub
lahf
outsl
cmpsb
ret
dec
mov
jbe
adc
dec
inc
push
or
inc
int
sub
inc
shlb
cmpsl
push
jbe
jmp
mov
cmpsb
adc
dec
ret
xchg
cmp
cmp
fs
or
mov
lcall
cwtl
xchg
adc
push
cltd
pushl
mov
ret
jecxz
les
xor
cmp
imul
pushf
adc
push
inc
pop
pop
addb
inc
push
mov
pusha
sbbl
std
xchg
add
mov
adc
lods
inc
mov
mov
mov
sub
xor
dec
mov
jns
cmp
repnz
into
mov
sbb
mov
mov
pop
lds
lcall
add
xor
lock
aas
lods
sub
enter
insl
daa
cltd
push
add
mov
push
sub
dec
xor
data16
xchg
mov
jp
jnp
push
and
push
loop
xlat
popl
fcmovb
pop
cwtl
xor
imul
loopne
mov
jp
repz
imul
inc
or
out
outsb
adcl
inc
mov
mov
cmp
pop
adc
push
pushf
lcall
pop
std
int3
cmp
adc
mov
xchg
or
cmp
mov
sti
out
cmp
add
je
and
fiaddl
mov
ret
loop
ret
pop
jnp
sub
outsl
cmp
add
insb
push
or
mov
push
popf
lahf
mov
icebp
in
inc
cli
mov
shll
and
push
inc
cs
jb
jnp
out
loope
out
push
addb
pop
dec
dec
dec
fstps
sbb
or
hlt
dec
jae
mov
inc
add
hlt
jmp
ds
jl
rolb
mov
sub
mov
jg
divb
outsb
mov
fildl
mov
js
stc
and
sbb
push
jp
sahf
cmp
and
push
mov
lods
mov
in
std
fs
insb
ljmp
cmpsl
sbb
jmp
sub
std
fnsave
frstor
and
ret
jg
push
push
push
sub
leave
adc
xor
les
fnsave
push
fs
xor
aam
je
mov
adc
mov
push
enter
nop
add
dec
dec
and
in
push
cmp
mov
rcrl
stos
xor
xchg
jb
xor
mov
jle
pop
stc
out
xor
jg
add
xor
push
lds
stc
loope
xor
dec
int
in
aam
ljmp
scas
ret
sbb
stos
inc
inc
stos
test
cmp
int3
or
addr16
pop
out
adc
insl
xchg
xor
cmc
and
jle
mov
inc
ljmp
jnp
int
in
sub
loopne
loopne
push
les
mov
popa
loope
xor
pop
fnsaves
lds
clc
jle
xchg
ljmp
ljmp
jo
sar
insb
bound
jnp
fcomps
mov
cmp
fwait
dec
sub
divl
mov
lock
jmp
mov
mov
pop
mov
imul
shrb
lcall
sub
jl
pop
pop
pop
loope
xchg
xor
cmpsl
adc
inc
in
jo
jns
movsb
iret
ficomps
push
mov
fs
jl
mov
loopne
pusha
call
das
sbb
lret
sar
push
mov
lahf
fnsave
mov
cltd
adc
test
adc
shlb
mov
mov
pop
cmp
loope
lcall
jg
cli
cmp
inc
cmc
scas
mov
jg
iret
iret
cmp
arpl
pop
pop
or
int3
fidivl
inc
stos
sarl
lds
adc
sbb
push
insb
dec
mov
sub
aaa
bound
push
rcrl
lods
lods
push
jno
lods
sub
jno
fwait
mov
std
mov
xchg
and
or
mov
es
das
sbb
in
aas
adc
repz
jno
shrb
mov
sub
pusha
into
insl
and
add
adc
pop
cmp
mov
and
js
inc
cmpsb
repnz
mov
loop
or
adc
je
pop
jo
inc
fisubrs
cli
ret
mov
testl
out
or
push
xchg
mov
mov
sarl
cli
cmp
clc
and
mov
sbb
cltd
cld
jg
cmp
test
pop
jl
dec
es
int3
sarl
insl
ja
ret
clc
call
pop
adc
shl
enter
jge
negb
popf
bound
es
sub
mov
movsb
das
lcall
xchg
inc
jb
or
xchg
mov
js
sub
iret
push
cmp
mov
lods
rcrb
data16
leave
scas
jnp
pop
lret
dec
popa
adc
adc
jbe
in
cmp
sub
sbb
pop
scas
jne
mov
add
mov
and
ret
mov
addr16
fidivrs
mov
or
frndint
dec
mov
popf
mov
pusha
sbb
xor
and
inc
lods
stc
or
sub
mov
pusha
xchg
cli
mov
test
test
xchg
mov
sub
inc
sbb
enter
mov
mov
and
push
sub
jbe
dec
and
shrb
lahf
cmpsb
sahf
in
xchg
call
mov
mov
and
xchg
mov
push
out
out
xor
test
lahf
adc
lret
dec
pusha
ljmp
sbb
aam
jns
cmp
pop
lds
xor
fmul
add
jp
daa
rcr
mov
in
ret
inc
lea
lock
mov
cmp
mov
hlt
xchg
leave
mov
lret
shlb
mov
into
sbb
sahf
inc
pop
mov
ret
loope
loopne
ljmp
mov
rcrb
fcoml
xchg
adc
mov
cmpsb
aas
daa
scas
sub
shl
xchg
cltd
add
mov
mov
adc
lret
adcb
repz
cmpsl
in
jae
xchg
sub
jg
xchg
fsub
add
push
lret
aas
lea
stos
adc
clc
subb
mov
push
das
push
lahf
xor
xor
insl
add
and
ret
pop
call
cmp
cmp
mov
test
cmpsl
out
addr16
popa
repz
fs
in
cmpsl
cmp
jb
pop
ret
xchg
je
inc
mov
aad
outsb
addr16
ja
nop
adc
jnp
add
aaa
and
sarb
xor
sti
xor
jmp
les
sub
pop
test
je
fwait
mov
and
adc
and
outsl
faddl
movsb
hlt
dec
and
mov
enter
mov
sti
add
fmuls
int3
mov
out
sbb
mov
cmp
mov
fldt
pop
scas
mov
stc
or
std
pop
leave
xor
cmpsb
nop
cmp
xor
or
sahf
cmp
cwtl
out
shl
xchg
push
mov
mov
pop
push
insb
jnp
push
dec
mov
lods
mov
mov
xchg
dec
jle
mov
ret
cmc
stos
add
stos
pop
jge
jecxz
je
xor
push
into
jae
pop
popa
pop
dec
and
fmull
or
sar
insl
in
aam
sbb
xorb
jne
sbb
xor
jnp
adc
push
pop
ja
xor
xchg
dec
jle
add
jmp
and
stos
push
jns
jecxz
inc
dec
adc
rep
jg
ss
jbe
cmpsl
std
sti
repnz
mov
je
jp
add
in
lahf
mov
sbb
ljmp
dec
in
xchg
movsl
in
mov
into
stc
adc
mov
pushf
xchg
inc
xor
and
jecxz
mov
mov
and
maxps
dec
leave
jle
ljmp
ds
adc
ret
mov
es
push
nop
fdivrs
add
icebp
xorl
fisubs
pop
mov
out
aaa
push
sbb
cld
xor
mov
inc
xor
iret
rolb
mov
add
aaa
inc
push
and
dec
inc
sbb
cmp
add
sahf
mov
mov
aaa
push
data16
jno
pop
rcrl
comiss
jns
pop
in
sbb
push
bound
into
cli
bound
aaa
lret
movsb
lods
bound
or
push
fs
into
mov
add
cmp
cltd
sub
cmp
test
faddl
push
and
xor
add
out
push
rclb
imul
outsb
clc
push
mov
out
adc
ds
push
lods
or
pop
mov
cmpsb
outsb
daa
dec
daa
movsb
cmp
jg
test
mov
and
dec
fists
jns
dec
ja
stos
sarb
stc
xchg
xchg
sahf
pop
addr16
sbb
je
loope
cmpb
adc
and
mov
out
sarb
fcompl
fwait
add
mov
mov
popa
xor
xorl
mov
mov
push
jge
ss
mov
mov
mov
jns
aaa
sahf
cmp
leave
mov
ja
and
xor
xchg
fistpl
pusha
sbb
ljmp
inc
add
lods
pop
sub
into
ljmp
testl
sub
push
xor
inc
sub
mov
rcr
div
mov
stos
packuswb
aas
mov
fcoml
outsb
cltd
insl
inc
imul
push
fcmove
loope
jnp
mov
or
sub
sbb
jae
add
inc
pop
jge
insb
in
jecxz
mov
pop
icebp
ljmp
fiaddl
aas
subl
shlb
jo
inc
cmp
sahf
xchg
pop
es
stos
ret
adc
clc
clc
aaa
outsl
shlb
mov
in
xor
mov
data16
jne
inc
xchg
das
inc
mov
jle
xchg
xchg
cmc
xor
or
stos
cmp
cld
mov
and
js
sbb
cmp
aas
aad
lcall
sub
push
dec
mov
fucomp
jp
clc
das
test
movsb
rcrb
andb
out
mov
cmp
inc
clc
test
outsb
test
pop
lahf
add
pop
and
push
out
mov
jbe
push
mov
test
dec
add
call
or
nop
mov
xchg
adc
jp
pop
mov
pop
andl
and
add
pop
andb
dec
jmp
das
test
jmp
push
js
mov
sub
mov
jo
test
mov
mov
jecxz
pop
sbb
gs
xchg
inc
xchg
xchg
dec
mov
fldcw
popf
sub
fbstp
aaa
add
imul
jl
imul
jbe
ss
aaa
inc
jno
mov
cmp
inc
xchg
mov
je
out
jo
pop
fcomps
xchg
cmp
in
sbb
popa
inc
mov
lcall
mov
mov
out
and
xor
lods
mov
push
dec
mov
es
dec
jno
test
and
add
dec
inc
leave
popf
cmpl
push
mov
dec
inc
mov
cmpsl
fcoms
daa
ss
stc
lcall
xchg
sbb
test
test
mov
insl
pop
nop
add
and
xor
out
jne
xchg
pop
test
xchg
add
pop
mov
lret
fwait
add
push
jne
inc
cld
sub
jo
lcall
and
pop
mov
addb
cmp
lcall
into
enter
jno
and
cli
add
daa
mov
jle
adc
hlt
xor
xor
push
cmc
outsl
mov
test
adc
xchg
not
inc
mov
push
xchg
dec
sub
insl
test
xchg
ret
sub
in
inc
imul
incb
lahf
dec
or
fwait
inc
lds
insl
es
mov
mov
push
in
adc
cld
out
xchg
push
sbb
mov
jl
aaa
xchg
jns
and
ficomps
daa
jb
mov
push
jmp
sbbb
jmp
dec
mov
and
lods
out
and
mov
andb
ret
mov
out
cwtl
push
and
pop
leave
adc
lods
mov
ds
enter
shll
pop
ret
or
xor
mov
mov
dec
and
mov
mov
in
insl
cmpsb
cmp
daa
push
pop
sub
cli
enter
fisubl
mov
pop
adc
insb
sub
or
mov
add
xchg
sahf
jnp
mov
sub
inc
cmpsl
pop
stos
mov
lea
mov
mov
mov
xor
push
popa
lock
sub
jb
test
inc
test
lds
lods
nop
or
das
sub
int3
mov
pop
cs
sbb
push
enter
jle
mov
sbb
scas
rolb
daa
mov
add
cld
sbb
lds
mov
xchg
mov
movsl
icebp
das
divb
cli
sti
sbb
or
in
mov
mov
jg
mov
int
in
sahf
inc
mov
mov
in
dec
ficomps
idivb
xorb
adc
arpl
mov
out
inc
push
jg
jle
xchg
pop
xchg
cmpsl
sub
int3
add
lea
js
fidivrs
mov
cmp
dec
cli
inc
lods
adc
xor
cmp
dec
add
out
add
mov
stc
cmpb
subb
push
jp
cmp
andl
adc
aaa
out
ret
dec
stc
xor
ret
sarl
cwtl
cmpb
into
repnz
sub
mov
das
cmpb
xchg
lcall
sbbb
ret
add
out
mov
push
mov
mov
sbb
cmpl
outsl
roll
fsub
push
mov
test
mov
repz
xchg
cwtl
cmp
es
into
jne
mov
sarl
pop
aas
jnp
adc
push
sub
mov
out
cmp
inc
sbb
lods
or
push
repz
add
xor
mov
mov
push
cmpsb
rcrb
cli
push
xor
imul
daa
notl
es
push
fdivrs
ljmp
out
pusha
out
and
push
mov
pop
add
sarb
mov
jg
dec
mov
pop
push
sbb
in
pop
repnz
mov
out
insl
adc
out
jns
push
aad
add
repz
notl
mov
cmp
inc
mov
out
inc
cld
and
mov
stos
jne
rcrl
inc
stos
lret
les
pop
push
femms
mov
hlt
fs
test
dec
cmpsb
mov
aaa
test
mov
repnz
xor
popf
fisubrs
addb
and
dec
test
inc
fdiv
shrb
addl
das
jae
lods
mov
int3
out
inc
or
gs
push
push
ds
popf
mov
and
les
adc
cmp
mov
xor
xor
push
jp
mov
test
jae
xchg
sub
push
lahf
in
inc
add
cmp
xor
in
mov
and
mov
divb
es
sarb
in
sbb
xchg
cmp
inc
cmp
xchg
in
loopne
pop
mov
in
insl
das
pop
inc
sbb
dec
mov
mov
push
xchg
pop
call
mov
fstps
in
push
mov
push
sbb
jmp
mov
cli
int
and
sub
pop
jb
pop
repz
mov
lods
xor
addb
add
and
out
cli
aaa
cmpsl
lock
call
into
mov
sbbl
xor
pop
in
cmp
aas
pop
xor
dec
and
mov
xchg
inc
jg
mov
cs
jno
lahf
xor
mov
movsb
mov
ljmp
idivb
fmull
clc
jb
fsubs
or
int
sti
std
cmp
pop
movsb
shlb
arpl
sti
cld
imul
pop
cmp
adcl
fbstp
sub
or
mov
fwait
jp
nop
jbe
adc
jnp
out
aas
fldcw
fwait
mov
mov
test
pushf
mov
inc
cmp
adc
popf
popf
jno
xchg
push
shll
sub
xor
hlt
shrl
add
js
xor
pop
dec
addr16
xchg
add
leave
inc
iret
add
pop
push
sbb
andl
fwait
mov
xchg
mov
mov
mov
not
jmp
sub
cmp
dec
push
mov
movsl
cmp
push
inc
xor
cs
out
pop
cmpsl
mov
sub
or
xchg
adcl
scas
ja
lds
mov
jp
daa
out
dec
je
sub
jg
cmp
or
pop
pushf
addb
dec
ljmp
inc
pop
jnp
or
movsl
pop
sbb
and
int
mov
adc
or
fisttpl
jmp
adc
out
das
mov
inc
or
and
mov
subb
shll
mov
sahf
add
jle
push
dec
xor
stc
cmp
mov
xor
lahf
sub
xlat
inc
xor
sbb
nop
in
imul
push
inc
mov
mov
push
push
sub
stos
ljmp
fmuls
pop
sub
lret
sti
lods
enter
call
xchg
sbb
cltd
add
add
inc
jae
cmp
push
subl
cmpsl
inc
movsb
and
adc
fdivrp
dec
fsqrt
mov
insb
or
imul
dec
jmp
xchg
stc
or
ss
out
jbe
push
mov
in
mov
jno
or
pop
cld
scas
movl
push
xchg
pshufw
mov
jb
sub
push
test
into
call
adc
daa
out
fcmovnb
sub
rcrb
pop
test
loop
or
pop
jecxz
insb
jecxz
outsb
roll
xlat
mov
dec
test
mov
and
test
lock
pop
outsl
sbb
add
cmpsb
je
adc
jecxz
sub
jg
insb
popa
call
sti
ljmp
es
or
test
or
lods
scas
aas
push
sbb
sbb
mov
cmp
hlt
cld
dec
jns
hlt
mov
push
xchg
jl
cmp
push
dec
dec
cmp
and
pop
testl
xchg
imul
mov
dec
fldt
inc
xchg
popa
imul
add
adc
sbb
enter
mov
imull
out
mov
jae
lea
jno
adc
sbb
cmp
xor
jle
push
mov
inc
addr16
cld
pop
imul
sbb
sbb
pop
xor
in
jnp
xor
movsl
pop
fsubp
lahf
cmp
mov
fiaddl
fidivrs
outsl
mov
xchg
rorb
mov
lcall
xor
push
sbb
lret
scas
test
push
and
push
fcmove
inc
ss
iret
das
or
pop
ljmp
inc
sarb
cmc
stos
movsl
push
les
loope
orl
push
push
gs
cs
insb
cmp
jg
push
pop
pop
imul
in
jne
mov
xlat
sub
dec
test
jp
sbb
pop
sub
movsb
outsl
cmp
jno
xlat
out
xchg
addr16
out
cltd
cs
iret
fdivrs
cmp
and
movsb
loopne
in
fistl
daa
push
test
inc
mov
shlb
lret
sbb
clc
pushf
sahf
xchg
mov
sar
aas
lahf
pop
jnp
lret
adc
add
adc
insb
pop
inc
cmc
push
mov
and
sub
mov
notl
bound
mov
daa
gs
sub
sbb
testb
outsl
mov
stc
clc
adc
je
pop
add
xchg
cmpsb
xlat
jp
aas
das
fneni(8087
sbb
lahf
sub
ret
sbb
and
adc
mov
rclb
hlt
dec
fstp
decl
leave
aas
adc
shrl
test
inc
push
xor
mov
sub
pop
add
fbstp
addr16
adc
es
jl
iret
int3
jle
add
mov
mov
fs
jp
xchg
cli
outsl
les
push
cmp
pop
add
jg
push
mov
iret
iret
inc
popa
pop
sahf
jno
pop
dec
mov
rcrl
push
xorl
mov
inc
jae
sbb
mov
xor
push
sbb
shll
movl
push
fstpt
inc
sbb
adc
cmp
push
inc
stos
xchg
repnz
dec
cld
decl
rorl
mov
test
mov
iret
lock
dec
jnp
mov
movb
dec
fstpt
movsl
shlb
test
inc
add
xor
fwait
push
cld
aam
or
shr
mov
lods
insl
jbe
mov
xor
mov
outsb
cmp
insl
add
add
das
lds
shll
sbb
je
inc
int
sbb
and
adc
pop
and
jns
into
push
dec
mov
push
loop
outsl
mov
cmpsl
push
mov
adc
fiadds
xor
xlat
lret
sbb
stos
mov
cwtl
popl
lret
mov
imul
sbb
or
sub
pop
into
push
cld
or
jno
daa
dec
testl
les
fwait
stc
stos
sbb
stos
mov
fimull
pop
insb
cmp
adc
or
cli
mov
cli
jne
pusha
and
call
jb
pop
mov
push
mov
push
mov
mov
ret
sub
add
push
mov
xor
out
lds
xor
outsb
out
cmp
mov
or
je
testb
shlb
push
cmp
push
aas
jg
fs
jp
fwait
mov
das
cli
or
ror
sahf
xor
inc
addr16
xchg
mov
add
mov
clc
fdivrs
rorl
push
rorl
xchg
xorb
mov
push
xchg
cmpsb
jb
adc
jge
cmp
mov
leave
and
push
pop
stos
jmp
cmpsl
mov
filds
aas
or
sbb
setg
sbb
lea
in
ljmp
cli
cmp
mov
in
sub
mov
push
aaa
and
mov
jl
popf
movsl
sub
hlt
xor
leave
hlt
loop
divl
push
jns
pop
push
scas
mov
lock
or
pop
push
xchg
xchg
push
loope
hlt
or
incb
fcmovnu
inc
inc
dec
xchg
mov
cmp
sub
or
mov
in
gs
insb
pop
movsl
fstps
sub
pop
enter
jecxz
sub
cmc
out
mov
push
pop
loopne
jo
mull
out
xor
push
es
xchg
inc
add
jp
xor
cmp
xor
aaa
notl
push
sarb
jne
push
xchg
test
iret
mov
pop
lahf
add
add
sbb
flds
cwtl
push
addr16
data16
mov
addr16
jbe
in
lret
adc
mov
add
fmulp
outsl
sub
cmp
sbb
jl
adc
add
inc
push
mulb
sbb
pop
pop
shlb
xor
pop
fs
push
out
int
cmp
xor
adcl
mov
iret
jle
fdivrs
mov
mov
testl
mov
sub
pop
out
test
clc
mov
stos
mov
and
push
xor
pop
cmp
or
pop
xchg
jbe
pop
bound
aad
add
dec
sbb
lahf
jle
scas
testl
les
push
fiadds
fmull
sbb
ret
pop
mov
sti
fwait
pusha
mov
dec
push
cmp
mov
into
subb
sbb
xor
fldcw
fimuls
sahf
cmp
into
icebp
sbb
sub
cmp
jle
fcomp
sbb
or
icebp
in
xchg
clc
and
cmc
gs
mov
inc
dec
sti
cmp
sbb
push
push
and
push
and
push
dec
jbe
cmp
mov
popf
mov
xlat
scas
jae
and
cmc
xlat
and
out
hlt
and
inc
dec
mov
mov
imulb
or
push
movlps
cmc
std
out
dec
mov
dec
out
push
pop
pop
inc
and
jo
push
loopne
push
inc
test
mov
mov
and
out
stc
xor
lcall
rolb
xlat
icebp
mov
rorl
les
jl
enter
jle
pop
out
stos
lods
push
in
std
dec
mov
mov
mov
jne
loopne
mov
jmp
jne
jg
xor
movsl
test
push
test
data16
leave
sub
push
or
cmp
cwtl
stos
mov
sahf
push
cli
gs
jl
movsl
in
pop
in
jae
aad
add
mov
or
mov
lea
dec
lret
xor
pop
in
negb
cltd
jmp
jno
rcl
dec
enter
lret
add
add
mov
lahf
xchg
pushf
sbb
ret
inc
into
aas
adc
cld
leave
push
fnstcw
and
nop
push
test
lcall
push
shlb
leave
fdivs
test
imul
jnp
pop
mov
mov
inc
in
jno
dec
lods
jmp
sub
dec
cmp
int
sbb
out
cli
js
or
sahf
popa
jns
jae
jp
cwtl
fwait
subb
push
aad
test
sbb
xor
cs
popa
nop
jmp
mov
cmp
jno
jle
shll
inc
enter
aaa
and
adc
call
mov
test
jg
mov
mov
mov
pop
jmp
cmp
sbb
shrb
ja
stc
pop
cmp
push
or
shlb
push
call
lea
sub
lods
rcrb
lock
mov
es
mov
lds
call
incb
jno
xchg
fnstenv
hlt
int
jle
rorl
pop
fistl
jp
in
imulb
jbe
rcrb
mov
lcall
fs
into
je
lret
nop
das
add
mov
sbb
stos
out
jno
ret
leave
push
dec
or
mov
aas
outsb
pop
mov
pusha
jecxz
mov
stos
dec
mov
icebp
stos
sub
pop
jnp
es
andb
mov
fsubr
mov
and
stos
pop
mov
mov
pop
pushf
mov
push
aas
and
and
mov
inc
push
sbb
aam
pop
xor
push
sarb
in
imul
pop
insb
cmp
inc
pop
rorl
imull
shll
sub
imul
add
fidivl
test
xchg
in
mov
fwait
mov
ret
ret
test
sbb
loope
leave
test
adc
jo
or
fs
testl
test
rep
sub
adc
jecxz
adc
and
lahf
or
push
pop
pop
xor
dec
or
out
jno
in
hlt
cltd
addb
in
insb
mov
ss
clc
in
add
repz
sarl
es
loop
mov
mov
lea
jecxz
jl
loope
mov
test
and
pop
outsl
stos
ds
sub
dec
dec
add
add
clc
mov
fisubrl
adc
dec
pop
xor
scas
test
rorl
lahf
iret
sbb
adc
jb
mov
cmpb
jl
mov
insl
jmp
fcoms
cs
rolb
lods
mov
mov
xor
mov
lahf
mov
push
jae
fmul
adc
rcrb
push
push
pop
adc
sbb
dec
hlt
dec
scas
lret
sub
xor
push
lds
ret
jo
cmpb
push
gs
js
mov
mov
jnp
dec
xchg
mov
jbe
and
out
add
into
cld
pop
popa
sub
cmp
mov
decb
jb
sbb
inc
inc
mov
mov
ss
and
sarb
add
sbb
xor
enter
call
cmp
pusha
adc
jmp
cmp
cli
ljmp
xorl
fstpl
outsb
insb
es
leave
xchg
jecxz
lahf
add
fidivrs
push
stos
xchg
leave
pop
or
mov
push
stos
fwait
mov
jns
xchg
push
cmp
addb
push
mov
rorb
mov
push
ret
and
cmpsl
fcompl
mov
adc
mov
sub
pop
pop
lcall
and
fdivrl
mov
loop
call
dec
shlb
pop
icebp
or
inc
cli
xor
fcompl
cmp
mov
pusha
orb
sub
loopne
sbb
add
mov
stos
leave
xchg
jno
add
add
mov
rclb
out
fisttps
pop
jle
or
xchg
or
sarl
loope
jmp
imulb
pop
xor
pop
jae
xlat
xchg
in
das
mov
dec
add
movb
clc
mov
jo
adc
jmp
pop
sub
into
loopne
lods
into
rclb
pop
and
jns
cmp
lea
add
mov
pop
mov
sbb
lods
lahf
sbb
lock
loopne
in
cmp
sub
arpl
or
mov
push
loopne
inc
das
sbb
out
sub
cmpsb
inc
popa
cmp
movsb
mov
push
pop
mov
mov
sub
push
mov
popa
cmp
mov
mov
in
xor
ss
outsl
mov
add
lods
iret
cmp
int
xchg
jmp
inc
sub
dec
test
dec
jge
fstps
jl
cmp
call
lock
sub
lahf
mov
jns
xchg
fdivrs
lret
out
mov
push
mov
mov
mov
rcrb
jmp
into
cwtl
push
mov
mov
in
addl
pop
cwtl
xchg
scas
jge
fisubl
xor
push
inc
aad
xor
cmc
jecxz
divl
xlat
nopl
aaa
mov
adcl
loope
ja
incl
inc
dec
inc
pop
pop
or
cmp
sbb
imul
adc
outsl
out
clc
ja
lahf
fwait
sbbb
mov
out
outsl
scas
aad
in
xchg
xchg
sbb
out
repnz
cmp
int
idivl
call
movsl
call
insb
jb
popa
sahf
jnp
rcll
and
stos
mov
inc
insb
pop
pop
gs
stos
shlb
jge
adc
clc
outsl
aad
imul
leave
cmp
or
popa
adc
jns
xor
fcomps
jae
cmp
sub
iret
jae
popf
in
mov
xor
jecxz
cli
out
dec
mov
in
pop
fwait
sbb
pop
and
adc
adc
push
adc
pop
enter
testb
mov
sar
shrb
push
les
push
add
xor
ljmp
loope
xchg
cmp
mov
sbb
outsb
adc
ljmp
jp
xor
movsb
fisubrs
iret
inc
ss
mov
mov
les
push
mov
xor
sbb
data16
stos
sub
pusha
xchg
fidivl
repnz
test
and
sti
sbb
out
adc
mov
xchg
adc
subb
and
sbb
mov
pusha
xchg
or
or
nop
xchg
out
aam
mov
mov
iret
jae
jmp
mov
add
inc
sub
inc
inc
xor
sti
sub
data16
push
es
movsl
push
xor
dec
into
mov
js
mov
call
add
outsb
bound
push
fmull
jmp
lret
insl
xor
mov
leave
dec
cmp
xor
ss
xchg
loop
cld
int
jecxz
dec
fsubs
pop
and
in
scas
out
mov
and
rolb
cmp
mov
adc
jp
test
pop
xorb
mov
and
es
mov
or
dec
insl
lcall
adc
ret
rclb
and
and
int3
and
jno
and
and
sub
mov
fdivrs
andb
mov
addr16
sbb
dec
jne
dec
xchg
aas
xchg
in
sbb
ds
push
mov
gs
in
ret
inc
pop
pop
inc
daa
adcl
fwait
nop
sub
or
and
add
pusha
mov
fwait
scas
in
cmp
loopne
dec
int3
mov
jo
and
mov
sub
movsl
faddl
and
lea
mov
sbb
mov
loopne
movsb
jbe
data16
aam
and
in
pop
dec
dec
fcoml
ret
in
dec
mov
dec
dec
rcrb
pop
mov
xor
xchg
stc
hlt
pop
adcb
dec
and
rorb
stos
in
roll
iret
lcall
sub
pop
jno
fidivrs
insl
rcrb
xchg
inc
add
aam
shl
sbb
in
sbb
aad
negb
lods
cs
mov
dec
imul
jb
sub
dec
jbe
outsb
loopne
push
inc
xchg
sbb
ljmp
aaa
mov
add
loope
mov
popf
cld
sbb
lcall
sub
xchg
mov
pop
addb
pop
lods
xchg
mov
je
fistpll
push
stc
ffreep
repnz
addr16
mov
xor
adcl
test
call
mov
fldl
stc
or
sarl
gs
loopne
mov
hlt
aad
testb
stos
in
lcall
cs
push
pop
test
sub
cmp
push
and
jnp
lcall
mov
imul
daa
mov
aas
faddl
lret
push
push
push
cs
std
push
add
fs
fidivs
inc
mov
cmpsb
ret
jb
std
mov
aad
mov
add
ljmp
data16
outsb
stos
pushf
out
mov
pop
xor
pop
pop
loope
mov
or
pusha
cld
fs
pusha
cmp
scas
fiadds
mov
push
js
sarl
into
push
shl
sahf
loop
repnz
js
pop
sbb
push
mov
arpl
jp
mov
mov
fwait
mov
jle
shrb
pushf
xor
imul
mov
repnz
repz
clc
or
inc
sbb
in
cmp
stc
sbb
sub
outsl
rorb
mov
push
xchg
call
mov
aam
inc
lds
xor
cmp
rorb
ret
mov
aam
dec
fwait
test
pop
out
dec
jg
stos
pop
jecxz
mov
aaa
scas
dec
pushl
or
iret
lcall
add
daa
cmc
and
adc
sub
lock
out
sub
icebp
jne
inc
adc
mov
pop
mov
imul
imul
xchg
add
sbb
sti
xor
aas
aad
ja
jecxz
mov
aam
idivb
ljmp
nop
mov
lahf
and
inc
ficompl
ds
ja
mov
dec
mov
push
shrb
pop
sbb
shll
or
xlat
int3
out
fs
nop
jnp
enter
add
mov
lahf
mov
or
xlat
dec
add
insl
popf
dec
or
enter
and
xor
fildll
and
adc
jmp
xor
lods
lock
mov
pop
mov
mov
jmp
outsl
pop
sti
out
jge
call
dec
xor
lcall
cmp
jnp
test
out
or
lock
aas
pop
sub
mov
incl
pop
pop
fisubrl
mov
cmpb
jle
scas
mov
cli
lods
xor
xchg
pop
fnsave
inc
pop
jp
insb
lcall
loopne
push
add
dec
jle
pop
gs
cmpsl
loop
sub
mov
xchg
in
loopne
ss
mov
test
cmp
sbb
leave
sti
or
fcompp
dec
and
mov
dec
fs
fcmovu
outsb
mov
lock
dec
pop
dec
in
fimull
loopne
sub
xchg
sbb
cltd
or
js
cltd
jecxz
ret
out
repz
in
nop
or
cltd
lea
xchg
adc
leave
outsl
in
cs
test
stc
pop
cli
sbb
movsl
pop
push
std
mov
lds
and
out
jb
pop
pop
test
sub
push
loopne,pt
outsl
call
test
shlb
out
or
xchg
push
jo
testb
imul
sbb
fdivl
adc
mov
xchg
lahf
rcrb
add
lds
mov
ss
mov
add
mov
sub
notl
xor
sbb
stc
inc
add
fimull
lock
mov
push
mov
or
in
fsts
jle
repz
mov
jbe
mov
xor
leave
les
fadds
or
sbb
out
shr
es
inc
cwtl
mov
pop
and
adc
fldcw
xchg
sbb
ficoml
adc
cmp
movsb
aad
fnstcw
mov
mov
jbe
fs
jmp
xor
or
sub
fdivrs
or
xor
jl
pop
mov
push
aas
xchg
mov
cld
fsubrs
xchg
sbb
adc
repz
daa
inc
pop
jmp
imul
xor
out
lahf
stos
ret
dec
out
or
in
mov
xchg
test
iret
cmp
jo
aas
std
push
outsb
bound
add
or
add
sbb
sub
xorb
jae
jnp
jp
repnz
push
pop
stc
mov
add
js
sahf
pop
dec
adc
out
inc
jb
shll
div
sbb
jns
xchg
int3
dec
jne
xchg
adc
shl
xchg
mov
jge
sbb
push
push
cmp
lds
nop
insb
push
mov
push
and
out
pop
mov
sub
xor
les
dec
sbb
sub
inc
fisubl
xchg
xor
xacquire
ret
ret
pop
push
or
inc
sbb
andb
mov
inc
loop
adc
sub
sbb
or
loop
sub
cmpsl
test
mov
jl
mov
out
in
shlb
loopne
fstps
out
sbb
push
sbb
or
and
mov
mov
mov
test
nop
add
or
shlb
mov
xchg
sub
mov
lds
es
aaa
ja
repnz
enter
pop
inc
lret
dec
insb
rolb
sbb
loop
mov
jb
insb
add
push
inc
repnz
mov
adc
loopne
or
inc
adc
sahf
or
stc
dec
xor
in
test
mov
fldenv
pop
jg
lock
lods
and
sub
jmp
ja
mov
xchg
in
mov
mov
daa
adc
cmpsb
ret
outsl
and
jnp
aaa
xor
jecxz
mov
addr16
jnp
loopne
in
pop
sbbb
xor
imul
sbb
jmp
adc
push
dec
fists
je
xchg
and
mov
adc
minps
es
push
xlat
pop
mov
les
sub
std
xor
fldcw
ret
dec
and
jg
jp
sub
testl
inc
xor
xchg
jbe
lods
adc
mov
dec
xor
fisubrl
repnz
inc
push
addr16
stos
hlt
popa
lret
aaa
leave
into
lods
mov
mov
out
mov
movsl
loopne
test
jmp
out
sbb
jg
adc
mov
stos
es
mov
fistpl
pop
dec
mov
aam
ret
xor
push
addr16
ret
jmp
mov
mov
mov
scas
jg
fidivrs
jmp
xchg
pop
repnz
push
cltd
xor
adc
jge
das
or
fstpt
mov
arpl
subb
push
and
out
fsubl
lret
jecxz
lods
mov
pop
mov
fwait
mov
pop
add
rcrb
negb
sbb
les
clc
aas
sub
mov
faddp
out
movsb
fldl
cmpsl
mov
mov
pop
ds
mov
pop
dec
push
mov
scas
lahf
sub
sbb
jle
add
mov
inc
inc
jecxz
sub
add
test
pop
into
das
add
cmp
inc
mov
out
ljmp
inc
outsl
cmc
cli
cmp
jb
adc
cmp
popa
ja
pop
add
fs
dec
push
lret
sub
xor
stc
int3
outsb
loopne
mov
push
mov
mov
movsl
cmp
hlt
and
xchg
les
jmp
clc
loop
fbld
jne
movsl
jp
test
xor
mov
push
loope
jne
popa
data16
addr16
xor
mov
je
jle
add
out
enter
and
or
xchg
into
aas
jmp
pushf
mov
sar
cmp
test
xor
pop
pop
dec
enter
pop
mov
mov
pop
loop
jmp
mov
bnd
sbb
seta
lods
mov
dec
mov
dec
in
fs
test
add
cwtl
pop
pop
stos
xor
int3
movsb
jg
xor
movsb
jae
repz
mov
pop
and
test
subb
aad
repnz
ss
mov
jecxz
movsl
out
jp
test
mov
in
pop
lods
out
and
sarb
out
loop
fiadds
mov
push
pop
jle
dec
mov
pop
rcrl
cmp
fnstcw
int3
push
xor
inc
rol
lea
sbb
add
mov
rol
mov
xor
mov
je
aam
aad
xor
in
repz
mov
cmp
adc
rcrb
jecxz
pop
insl
out
out
mov
lds
adc
sti
js
sbb
mov
sub
sub
dec
in
mov
mov
add
fs
or
psubd
nop
push
cmp
sbb
xorb
loopne
xchg
mov
adc
mov
sbb
in
ds
push
js
and
pop
fiaddl
rorl
in
leave
scas
dec
cmp
push
jge
mov
mov
imul
cmpsl
mov
mov
js
xchg
and
sbb
xor
notl
dec
frndint
shll
test
daa
in
stos
sti
fidivl
pop
adc
jmp
mov
ret
movsb
imul
and
in
push
xor
xchg
daa
aas
mov
repnz
sahf
pop
inc
dec
subl
or
ljmp
or
mov
sub
ret
or
fisttps
cmp
xor
pusha
cmc
mov
mov
fildl
das
push
mov
std
jecxz
jns
rcrl
data16
sub
pop
sub
cmp
and
lcall
add
mov
bound
shlb
test
movsb
arpl
das
xor
or
stos
push
sti
or
inc
dec
push
testb
imul
std
cmp
sbb
add
xor
dec
xchg
pop
out
lret
pop
bound
scas
imul
or
mov
fnsave
jmp
pushf
pop
sbb
enter
outsl
jmp
cli
imul
cltd
insb
inc
sub
or
jbe
mov
popf
lret
rcll
pop
xchg
xchg
sub
sbb
or
jns
mov
and
mov
adc
jbe
jp
outsb
mov
mov
lds
jb
push
xchg
aad
ja
mov
mov
fmul
aam
fsubrs
sub
sub
cmp
int3
inc
pop
mov
inc
sahf
mov
aas
mov
xchg
xchg
push
add
sbb
bound
shll
inc
push
xchg
test
rorb
jmp
adc
aam
xchg
jle
jae
ds
mov
insl
leave
sarl
add
and
mov
jns,pt
loope
cmovb
and
mov
push
mov
scas
inc
mov
bound
push
gs
pop
push
pop
jg
shlb
xor
xchg
adc
test
out
subb
lcall
cltd
mov
cmpsb
repnz
imul
jle
pop
xchg
lcall
cmp
xor
mov
mov
mov
xchg
xchg
xchg
fildl
pop
sub
mov
xchg
repz
lret
dec
mov
xchg
test
add
xor
into
rol
mov
loop
pop
mov
pop
xlat
add
xchg
inc
and
repnz
mov
cmp
lahf
pop
outsb
clc
pusha
incl
sbb
inc
ret
cmpsb
push
outsl
lcall
icebp
sub
ds
jb
ds
ss
jg
add
mov
jp
push
inc
aas
push
inc
adc
lea
mov
es
sub
es
mov
ja
icebp
ror
cmpsb
mov
xor
icebp
mov
xchg
adc
jg
mov
mov
push
loopne
xchg
imul
lods
pop
mov
mov
xchg
adc
push
sbb
stos
mov
imul
ljmp
lock
mov
daa
or
mov
jns
inc
lahf
pop
add
movsb
cld
hlt
pop
addr16
cmpsl
mov
loopne
xchg
mov
cmp
stc
dec
inc
aad
ljmp
test
repnz
xlat
pop
loopne
push
out
in
cwtl
mov
push
adc
pop
xchg
mov
jne
lret
xor
aam
or
mov
addb
outsb
cmp
mov
pop
js
and
and
in
or
outsb
or
mov
jl
sub
xor
or
push
daa
dec
jp
stos
sbb
add
fcoml
lahf
push
insb
mov
sub
pusha
js
push
iret
fwait
aad
ficompl
mov
lea
jl
jle
repnz
jecxz
sbb
mov
and
test
nop
jmp
std
sub
adc
mov
adc
in
cmp
xor
insb
dec
mov
jae
jno
pop
into
or
outsb
loopne
add
sbb
and
sub
or
fidivrl
out
clc
clc
adc
mov
sbb
lods
sti
xchg
data16
popa
outsl
fnstcw
outsl
lods
dec
pop
sbb
xor
dec
adc
push
or
cmpsb
cmpsb
out
cmp
test
in
adc
adc
dec
sar
mov
jne
out
push
lds
jns
mov
mov
sbb
stos
xor
inc
sti
cmp
out
pop
js
int
lahf
adc
stos
outsb
jns
dec
enter
inc
mov
and
push
popa
js
leave
xchg
push
fxch
xchg
pop
pop
push
sub
std
stos
inc
out
in
nop
xor
or
shr
fs
scas
scas
fistps
shll
sub
sub
mov
lea
inc
fld
test
stos
lcall
jge
xchg
cmp
in
pushl
fcoml
sahf
xchg
and
jo
pushf
push
sub
int
in
xchg
jg
sbb
rep
cmp
xor
fdiv
sbb
daa
test
cmpsl
sub
inc
rcrb
lods
mov
das
pop
pop
adc
xor
int
into
int
dec
scas
sub
bound
fadd
fpatan
jge
dec
sub
ljmp
jge
cmc
pushf
adc
and
mov
and
jmp
sti
xlat
pop
pop
imulb
jnp
xchg
dec
mov
xchg
pop
mov
mov
pop
nop
js,pn
and
jnp
incb
push
dec
mov
pushf
sbbl
lods
xor
and
mov
gs
or
mov
insl
and
jae
insb
lret
fwait
xor
mov
xlat
movsl
notl
pop
mov
arpl
fiaddl
inc
pusha
pop
movsl
add
pop
pop
data16
fwait
jle,pn
add
xchg
popa
jmp
lods
push
mov
movsl
push
push
orl
scas
std
sbb
mov
sub
das
addb
dec
add
jns
mov
adc
mov
mov
mov
ret
push
xchg
mov
xchg
jmp
std
scas
and
sub
scas
outsb
adc
out
mov
push
arpl
cmpsl
popa
shrb
sti
ret
cmp
dec
push
mov
js
ss
rcl
add
pop
mov
xor
stc
push
sbb
scas
aas
push
lcall
pop
mov
aaa
pop
adc
sbb
sub
pavgw
fwait
xchg
push
loopne
xchg
and
cmp
decl
mov
enter
sahf
adc
pop
loopne
xchg
inc
fstpt
adc
dec
mov
mov
and
fucomp
xchg
push
mov
in
cmc
int
sti
sbb
cmpsl
push
rorb
push
mov
cs
aaa
into
dec
in
sar
pop
cli
dec
mov
mov
pushf
sar
jbe
call
or
mov
dec
adc
fmulp
cmp
ja
pop
inc
hlt
lods
clc
pop
imul
jne
fstps
pushf
out
daa
push
mov
les
arpl
mov
and
pop
stos
cmp
test
pop
mov
ja
shl
mov
fcmovbe
aad
sub
outsl
fcmovbe
arpl
xor
shl
adcl
fisttpll
sti
fsubl
jae
pop
pop
fsubs
js
data16
hlt
jns
jae
test
stc
cmp
insb
xchg
dec
ja
lods
neg
clc
lret
pop
xor
mov
jo
lock
sub
push
cmp
mov
std
xchg
test
bound
ja
mov
sahf
fnstenv
mov
loope
jns
cmpsl
xchg
cmp
xlat
mov
adc
or
push
sahf
mov
ret
dec
and
mov
fiadds
or
cmp
stos
in
aad
jns
stos
call
loop
fldl
adc
mov
xchg
scas
push
lds
clc
shlb
dec
pop
outsb
add
stc
pop
int
lock
mull
adc
roll
pusha
in
ljmp
sub
inc
stos
shll
cmc
scas
stos
xchg
dec
pop
inc
lds
cmp
push
cmp
cmc
jp
mov
stos
and
outsb
daa
mov
fdivl
mov
push
data16
push
aam
or
xchg
pop
inc
push
sahf
out
cld
cwtl
arpl
pusha
jg
lahf
cmp
adc
int
shrb
cmpsl
adc
je
movsb
or
sub
out
stc
stc
int3
in
je
ret
sub
add
icebp
jns
das
sbb
mov
cmp
cli
ds
mov
add
mov
fcmovne
push
sbb
or
scas
out
sub
loop
std
mov
icebp
xor
ss
ss
cld
add
xchg
aas
ret
xor
cs
xchg
xor
and
ret
clc
xor
repnz
dec
aad
cmp
shll
in
lahf
mov
inc
sbbb
sbb
and
test
xor
pop
xchg
sub
iret
jns
sbb
unpcklps
mov
jp
bound
or
mov
pop
cltd
dec
mov
push
cltd
pop
pop
adc
or
push
sub
dec
fcompl
in
mov
shl
lcall
stos
dec
xchg
inc
mov
ret
xor
iret
mov
imul
test
cmp
xor
add
lcall
xchg
sbb
mov
lcall
mov
mov
or
cltd
jg
inc
add
mov
sbb
out
vrsqrtss
jmp
mov
mov
adcl
sbb
mov
push
shl
push
repnz
cmpxchg
arpl
cmp
jle
movl
mov
data16
push
cmp
sti
movsb
sub
dec
mov
shrl
mov
aam
cmp
in
int3
xchg
addr16
icebp
insl
xchg
and
adc
and
pop
in
xchg
xor
mov
xlat
xchg
mov
push
sbb
and
fnstenv
ss
cmp
push
jae
out
push
pusha
sbb
clc
ss
mov
outsl
lahf
mov
mov
jns
inc
push
rclb
scas
jecxz
xor
and
jo
scas
arpl
xchg
pop
push
inc
inc
daa
mov
mov
out
sub
adc
fwait
mov
scas
or
inc
jae
mov
push
shl
xor
cmpsl
mov
shlb
cmp
pusha
push
xchg
jns
lret
push
adc
scas
in
daa
ljmp
adc
scas
cltd
js
shlb
pop
and
enter
mov
push
clc
cmp
pop
ret
repnz
dec
test
inc
in
cltd
xchg
mov
mulb
mov
fldenv
adc
dec
outsl
inc
or
clc
lock
push
lds
xor
sub
jl
pop
jae
ret
and
mov
jno
cld
dec
xchg
mov
loopne
pop
call
or
or
jmp
jae
sub
lea
cmpsb
pop
mov
mov
cltd
cli
addr16
outsb
icebp
adc
out
stc
and
fistpll
push
or
add
pop
sbb
insl
mov
pop
inc
adc
sbb
shrb
lret
out
mov
jecxz
stc
sub
dec
mov
adc
xchg
pusha
popf
aas
insb
dec
sahf
mov
out
sub
dec
mov
xchg
dec
xchg
shr
dec
notl
mov
mov
push
mov
cmp
mov
ds
orl
ret
repz
orl
dec
lods
std
push
or
jg
aaa
ficoml
jp
xchg
test
mov
lds
cmpl
lcall
ljmp
fstpt
out
pop
add
mov
insl
out
cwtl
sub
jge
ret
inc
into
cwtl
mov
sbb
imul
cmp
in
ret
popf
or
and
sub
sub
lods
dec
xchg
shrb
sbb
lea
pop
cmp
dec
dec
xchg
ret
call
adc
add
pushl
adc
pop
push
sub
or
notb
inc
mov
in
mov
and
mov
outsb
push
ja
mov
lret
arpl
push
adc
inc
in
jg
imul
dec
addr16
iret
hlt
fidivl
sarb
pop
fwait
pop
mov
fistl
sbb
xor
mov
xchg
dec
jmp
mov
shll
fwait
iret
movsb
test
and
orb
cmp
fidivl
push
add
push
inc
adc
dec
es
lret
jns
nop
xchg
inc
and
adc
in
xchg
jge
shlb
sub
sahf
ret
xor
sahf
xchg
cmc
insb
xor
pop
gs
push
sub
push
mov
popa
xchg
je
imull
xchg
mov
cmp
fwait
insl
push
xor
pop
jl
shlb
fiaddl
pop
dec
leave
mov
xor
sbb
inc
and
les
fsubp
jp
mov
and
loop
and
rcrl
push
sbb
push
and
je
jnp
xor
jns
clc
daa
in
cmp
jmp
icebp
xorb
lret
cmovge
mov
inc
fstpt
add
sbb
adc
mov
adc
dec
cs
add
mov
lcall
repnz
cmp
fwait
ds
test
xchg
sub
xor
cwtl
or
pop
push
lock
jmp
inc
out
js,pn
inc
insl
push
push
and
cmc
xchg
loopne
jns
je
loope
fsubrl
xor
fildl
mov
mov
or
je
repnz
lods
add
sub
dec
sub
xor
stos
popa
loop
in
and
test
ret
call
adc
mov
sbb
inc
out
inc
cld
mov
jae
repz
or
jecxz
pcmpeqb
jae
out
in
sub
mov
cli
dec
jno
inc
cmp
jp
in
and
leave
pop
and
sub
stos
shr
xchg
inc
or
push
cmp
jmp
jmp
ret
jmp
in
pop
out
jne
cwtl
pop
scas
fists
adc
cmp
lods
dec
mov
cmp
and
push
scas
dec
mov
dec
ret
sbb
mov
xchg
mov
push
dec
sahf
pushf
mov
jge
dec
test
sbb
lods
push
cmp
lret
sti
and
push
les
mov
mov
mov
int
jmp
movsb
ja
in
arpl
push
sbb
add
inc
inc
inc
mov
sbb
test
arpl
dec
inc
xchg
movsb
gs
cs
and
inc
jg
push
jb
insb
and
sub
hlt
inc
jg
clc
and
xor
dec
insb
xor
sub
xchg
in
outsl
mov
push
enter
mov
ret
pop
jl
push
mov
int
xchg
and
repz
enter
jp
adcb
mov
jecxz
mulb
mov
mov
mov
and
popf
pop
mov
xchg
inc
stc
dec
fsts
popf
addb
lods
and
push
mov
jle
jb
xchg
fsubs
and
jmp
out
in
aad
jae
call
and
sti
mov
imul
add
clc
lods
cwtl
sbb
dec
xor
pop
ss
test
adc
jp
ljmp
popf
lret
inc
jo
ret
sbb
iret
mov
mov
push
push
aad
je
test
je
or
push
adc
cmp
push
iret
push
push
pop
push
sbb
mov
stos
mov
inc
ja
es
repnz
push
mov
ljmp
rcrl
mov
push
notb
sub
movb
mov
cmpsb
lret
lods
clc
cltd
sbb
push
mov
pop
xor
cmp
aaa
addr16
clc
testb
test
addr16
sub
mov
and
adc
out
push
xor
sbb
cmp
shlb
ss
and
sbb
iret
arpl
sbb
test
mov
push
aas
inc
lcall
rorl
inc
mov
adc
and
pop
out
rcr
or
adc
daa
outsb
xchg
subb
scas
roll
imul
sub
lds
into
popf
rcll
add
or
xchg
enter
dec
pop
jns
xor
stc
push
clc
adcb
adc
sbb
movsb
ljmp
les
fnstenv
jp
daa
cmp
shlb
popa
push
cmp
data16
mov
or
fstl
inc
daa
xor
adc
sub
test
test
cmpsb
fnsave
rol
jb
mov
mov
das
inc
sbb
inc
pop
dec
call
rol
sub
pop
notl
push
cltd
iret
jg
ljmp
shrb
adc
mov
cld
ja
in
xchg
std
mov
dec
es
mov
cmp
lret
dec
push
ret
push
outsl
mov
aam
mov
inc
js
add
dec
sbb
pop
sbb
leave
mov
lret
xchg
pop
cmpsb
xchg
xor
mov
popf
cmp
and
sti
pop
jnp
dec
push
jmp
adc
mov
int3
jg
lods
lret
pop
cld
out
ret
cwtl
and
xor
pusha
pushl
bound
aas
iret
sahf
fdivr
add
dec
fnstsw
mov
and
movsl
stc
mov
adc
mov
fisubrl
mov
dec
mov
push
rcrl
dec
and
inc
out
cmp
mov
mov
std
sub
cmp
scas
in
pop
sbb
pushf
mov
mov
sub
dec
mov
shrb
fwait
lds
inc
mov
sbb
mov
jge
xor
sub
ds
mov
js
cmp
mov
out
mov
and
js
fstpl
add
xor
and
or
andl
add
adc
push
dec
mov
mov
sub
sbb
mov
cli
imul
addr16
test
fdivs
pop
pinsrw
mov
xor
lods
fbld
dec
rcll
pop
or
pop
dec
or
adc
jo
adc
jmp
and
negb
stos
push
mov
imul
iret
jns
mov
out
dec
das
stos
popa
cmp
or
dec
fucom
add
inc
xor
sarl
xchg
in
sub
dec
outsb
jno
fdivrl
pop
mov
mov
sarb
mov
xchg
out
push
pop
fldln2
fisubrl
cltd
mov
jge
imul
add
int3
mov
push
aad
aaa
out
ret
dec
xchg
adc
mov
cmpsb
lret
jecxz
pop
cmp
pop
and
mov
loope
lods
jmp
out
daa
test
out
push
or
dec
imul
cmpl
pop
push
sub
mov
push
sar
adc
xorl
jbe
jae
jno
ss
xchg
cmp
and
pop
inc
xchg
jbe
lods
push
loop
stos
sbb
je
das
hlt
les
jne
jecxz
loope
cs
mov
iret
outsl
add
add
cmc
fldl2e
imul
push
mov
pop
fwait
add
sbb
pusha
sbb
clc
dec
inc
pop
mov
adc
movsl
stos
add
lods
cwtl
icebp
mov
or
pop
push
sbb
loopne
xor
xlat
add
popl
pop
sbb
jmp
sbb
dec
mov
xor
adc
fwait
dec
sub
test
pushf
sarb
pusha
sub
and
sbb
mov
push
cmp
add
lods
rcll
dec
xchg
arpl
mov
pop
mov
or
rcll
adc
xchg
xchg
jg
iret
jmp
push
inc
aas
cmpsl
and
jbe
inc
loop
es
fs
sub
cmp
out
inc
jecxz
fimuls
cltd
lods
and
pop
cmp
fbld
lds
jb
inc
add
into
mov
push
in
lods
xor
push
xchg
inc
mov
icebp
sub
sbb
leave
mov
fisubs
mov
daa
cmp
sbb
call
popf
jle
push
push
push
pop
sahf
push
mov
rolb
cmp
jno
jb
into
pusha
ficoml
inc
cli
jne
das
or
arpl
mov
fdiv
rcrb
fwait
mov
andb
fs
mov
jo
inc
out
mov
lock
daa
mov
add
ret
push
xchg
jmp
cli
imul
jp
adc
cmp
inc
mov
cltd
call
cmpsb
jo
ds
and
js
xchg
in
lods
push
rcrl
mov
insb
cmp
and
lds
inc
enter
or
movsl
lds
add
mov
pop
mov
push
and
jle
test
popf
or
jo
adc
outsb
jb
cmpl
icebp
call
scas
cmp
mov
adc
inc
rcl
sub
push
pop
jg
bound
and
test
cmp
xchg
sbb
incb
cmp
stc
and
pop
xor
sahf
sub
and
pop
dec
hlt
mov
push
pop
jle
addl
shll
dec
mov
or
mov
sbb
mov
fnsave
fildll
and
pop
sti
push
in
in
or
aaa
lret
xor
int3
fcoms
fcoml
pop
jne
insl
cmp
xor
mov
pop
mov
movsb
jmp
adc
dec
sbb
sarb
sbb
push
out
cmp
out
popa
sub
rcr
mov
mul
ret
ss
sub
ljmp
loopne
inc
sbbb
xor
adc
or
sbb
sbbb
idivb
mov
add
sarl
xor
insl
mov
xchg
mov
and
fisubs
ret
shll
push
mov
sub
pop
sbb
scas
loope
mov
mov
lods
loop
mov
lahf
fsubl
adc
outsl
inc
jns,pt
imul
in
fnstcw
popa
loop
fisubrl
push
test
fwait
inc
or
int
mov
test
push
pop
div
inc
ret
ss
lret
mov
mov
leave
ds
mov
mov
outsb
mov
and
jns
or
push
sub
popa
jns
clc
push
cli
jle
ljmp
pop
mov
add
pop
mov
ret
mov
push
fldt
les
pop
cmpsb
stc
in
mov
sub
jae
outsl
ret
sub
daa
sbb
mov
addr16
fisubs
xchg
daa
cli
jns
push
dec
faddl
fwait
lret
mov
xlat
mov
dec
dec
cmp
push
push
mov
dec
push
and
and
cmp
in
lahf
ds
sahf
into
adc
rolb
lods
out
sub
test
xor
mov
loope
or
fildll
xor
pop
bound
fidivl
push
repnz
and
cmp
adc
xor
cmp
dec
cld
cmp
movsl
jbe
add
push
in
mov
or
inc
hlt
and
xor
fdivr
ja
out
xor
lea
mov
in
inc
adc
xlat
xor
xchg
cmp
cs
jo
bound
out
xor
sarb
data16
inc
pop
sub
sbb
dec
push
sar
pusha
cmp
mov
sub
adc
jg
sub
out
popf
xchg
pop
imul
xchg
sbb
mov
add
jge
std
in
test
imul
ja
sarl
add
or
jl
clc
ds
push
sub
sub
les
and
jge
mov
mov
and
inc
ret
jp
orl
pop
sbb
push
pop
sub
es
in
adc
cs
lret
addr16
mov
adc
je
mov
xlat
pop
rcll
or
dec
push
daa
pop
int
sarl
inc
test
sarl
push
gs
mov
mov
jb
add
shlb
sahf
and
mov
sub
movsb
ret
pop
jg
pop
pop
xchg
int
stc
pop
add
adc
mov
sti
gs
hlt
or
aam
shlb
pusha
mov
lret
mov
adc
stos
and
pop
jno
mov
cltd
daa
lret
add
xor
dec
xor
stos
and
jne
mov
add
testb
cmc
dec
paddsw
loope
or
stc
pop
jmp
imul
rorb
fwait
shl
fwait
add
call
add
in
xchg
sbb
ss
into
aaa
fidivrs
add
jg
and
icebp
data16
xchg
lods
stc
mov
sub
sub
fs
mov
inc
inc
add
xor
dec
jbe
jecxz
add
ficomps
lods
es
stos
stc
mov
or
cmp
nop
fimull
data16
lods
cmp
leave
xchg
mov
enter
mov
shl
and
es
rol
in
xor
lcall
movsb
das
mov
leave
push
jae
scas
nop
in
mov
shlb
mov
adc
sbb
and
es
lods
sub
fsubrs
popf
movsl
push
pop
xor
add
adc
and
mov
mov
sub
aaa
pusha
ret
clc
xlat
xchg
pop
push
lea
loopne
in
sub
test
loop
fbld
iret
popa
xchg
mov
movsl
call
repz
mov
adc
fdivrs
scas
jae
call
icebp
movsl
mov
bnd
sbb
push
push
int3
lcall
lret
in
fstl
pop
xor
test
ja
inc
stos
inc
cmp
and
int
jg
adcb
or
iret
jle
fiadds
adc
fmuls
and
mov
scas
inc
or
sub
adc
out
scas
sub
push
lea
pusha
push
outsl
scas
mov
mov
or
dec
sub
mov
push
sahf
fdivrl
sbb
lods
mov
scas
xor
adc
cmp
mov
test
in
les
leave
into
pop
or
loopne
xchg
pop
clc
adc
add
or
mov
test
and
sbb
add
mov
push
popa
cltd
mov
or
fnstenv
sub
sub
iret
test
stos
in
dec
sti
jb
cmpl
fdivr
inc
mov
add
pushw
jmp
bound
int3
movsb
adc
outsl
js
push
sarl
push
mov
xchg
jle
add
push
jno
hlt
imul
and
mov
sbb
sbb
sub
mov
mov
arpl
js
shrl
negb
ja
sub
cwtl
mov
push
jmp
jle
and
aas
lds
or
mov
mov
push
popa
out
mov
add
sbb
in
ret
mov
insl
xor
stos
mov
jle
bound
in
loopne
dec
cmc
sbb
sub
xchg
pop
pop
mov
fs
int
xchg
sar
test
fidivs
lods
test
clc
and
xchg
inc
repz
add
insl
pop
jno
leave
xchg
mov
jae
loope
hlt
adc
or
mov
push
push
xchg
mov
xchg
sti
cmp
jmp
nop
shrl
jg
daa
icebp
cmp
adc
sbb
jge
lea
test
pop
in
fimull
aad
mov
adc
mov
push
les
adc
ret
sbb
out
fldt
add
leave
jecxz
xchg
mov
and
xchg
mov
adc
dec
in
sbb
push
loope
inc
xor
cmp
jne
clc
mov
dec
pop
mov
out
aaa
pop
sub
adc
jl
pop
mov
xlat
cmp
lods
sbb
lret
adc
insb
mov
out
aaa
out
andb
inc
mov
jb
mul
lcall
roll
dec
in
imulb
and
leave
in
rolb
out
or
scas
jno,pt
dec
test
stos
outsl
outsl
xor
mov
out
sub
movsl
xor
mov
iret
push
outsl
daa
lret
int
das
pop
push
cmp
cmp
ljmp
out
dec
nop
sbb
cmp
inc
rcr
cmp
in
int3
and
dec
fucom
xor
add
mov
out
aaa
fwait
jnp
gs
loope
jl
or
in
pop
xchg
movsb
push
ja
lods
icebp
movsb
rcr
scas
fidivrl
cvtpi2ps
mov
cmp
jp
cwtl
jp
dec
pop
mov
stos
je
push
hlt
addb
jmp
cmp
lret
dec
aad
es
ds
out
mov
mov
xchg
xchg
scas
arpl
cs
aaa
dec
imul
pop
jl
lods
mov
jnp
xchg
ja
pop
cwtl
cmp
add
add
fidivrs
fidivs
xchg
insb
xor
sub
sub
cs
sbbb
mov
cld
xor
pop
cld
jge
stos
popf
sub
into
push
mov
mulb
sti
lcall
push
flds
rcr
jb
or
jno,pn
xor
test
pop
lahf
jae
mov
adc
fisttpll
sub
sub
in
inc
mov
inc
adc
ja
iret
loop
aas
jl
pushl
pop
scas
xor
add
push
imul
jmp
cmp
daa
sbb
loop
imul
add
aas
mov
jecxz
xor
ljmp
xchg
adc
jno
shlb
mov
lret
addr16
adc
pusha
cmc
or
mov
jmp
jp
daa
push
insb
jle
cmc
cmc
mov
ds
and
addb
popa
cmp
push
adc
adc
jge
push
mov
add
mov
add
pop
mov
sbb
int
lock
cmc
in
ljmp
push
sub
pop
movsl
mov
mov
cli
cmp
jp
testb
sahf
sti
cmp
mov
mov
addr16
sub
imul
cmp
cli
sbb
inc
xchg
call
cmpsb
imul
js
cmp
xor
in
push
pop
sbb
push
push
lea
aam
popf
push
mov
cld
dec
stc
orb
mov
and
mov
data16
mov
mov
xchg
or
das
xor
jge
inc
pop
push
or
or
out
or
push
mov
jb
jae
sub
mov
insl
out
je
clc
jmp
sarl
pop
test
inc
or
out
xor
add
insl
xor
out
lods
fildl
ret
lea
cmp
insb
xchg
pushf
lods
sub
jp
inc
int
push
aad
inc
ljmp
rcr
test
jge
lods
pop
outsb
lods
test
dec
outsb
pop
pusha
loop
inc
sti
mov
data16
inc
mov
je
unpcklps
aam
sbb
popf
pop
pop
pop
mov
sub
mov
mov
sahf
xor
enter
mov
pushf
jge
movb
adc
add
incl
cwtl
jmp
cmp
repz
xor
or
jmp
cld
test
in
pop
mov
daa
mov
inc
or
mov
xor
shll
in
sti
inc
lret
add
mov
pushf
jmp
sbb
pop
test
cmp
mov
iret
ss
mov
shr
pop
popa
lcall
mov
int3
pop
popf
call
pop
ret
jb
gs
sub
xchg
xor
xchg
pop
xlat
push
incl
cltd
xor
stos
flds
ret
sar
dec
sub
fmul
lds
mov
and
sub
lock
sbb
sub
insl
lea
mov
sbb
pop
imul
push
sub
or
cmpsl
repz
mov
idivl
cmp
fnstsw
or
jle
inc
test
push
shll
sbb
xlat
ret
mov
loopne
mov
inc
mov
aad
sub
xchg
push
mov
lods
sub
mov
es
lret
xchg
inc
and
sbb
mov
lahf
ret
leave
sub
loopne
push
fsts
lea
inc
in
scas
xor
push
push
sahf
adc
dec
ja
mov
and
jmp
ret
decl
cmpsl
pop
xor
adc
cmp
jb
les
add
push
add
orl
fldt
mov
cmp
cmp
gs
add
pop
in
insl
sbb
in
adc
mov
pop
pop
dec
in
mov
or
and
shlb
sbb
shlb
pushf
push
test
and
pop
leave
xor
mov
fidivl
xor
or
ret
push
adc
repz
add
pop
js
add
mov
sbb
mov
mov
in
pop
or
xor
scas
mov
loope
ljmp
mov
pop
adcl
shl
inc
xrelease
or
out
insb
mov
lods
inc
dec
or
frstor
adc
dec
pop
jmp
jg
scas
aad
idivl
out
sbb
push
sti
insl
mov
jnp
jnp
adc
in
ds
sub
rorl
mov
sbb
pop
inc
icebp
and
push
mov
pop
mov
pop
add
xor
and
jnp
sub
pusha
cmpsb
mov
fdivp
cs
jns
add
mov
mov
push
dec
test
jg
flds
jmp
add
rol
xor
push
mov
mov
sub
test
fldt
cmpps
mov
out
cmp
jns
cmp
clc
cmp
pop
or
daa
sbb
push
and
aas
cmc
mov
cmp
or
dec
aas
ret
std
aam
in
mov
mov
push
inc
arpl
les
add
add
inc
loopne
mov
xchg
and
stos
fld
xor
mov
xlat
mov
dec
and
adc
push
iret
enter
cli
movsl
xlat
test
popl
push
adc
dec
das
int3
or
adc
fnstsw
loopne
xchg
clc
je
pop
sbb
pop
jmp
sbb
jae
mov
hlt
add
loop
mov
or
iret
cmp
mov
stos
fidivrs
adc
fstpl
mov
pop
push
xchg
in
pop
cmp
out
mov
mov
cld
mov
or
lods
and
xor
insl
push
push
sbbb
xor
xor
mov
fidivl
daa
dec
mov
cmpsl
xchg
and
scas
adc
movsb
or
pushf
inc
xchg
push
jge
movsb
dec
xchg
aas
mov
ljmp
xchg
xor
pop
cs
sahf
jecxz
mov
loop
imul
testb
test
and
fcoms
lods
lods
add
mov
clc
lds
push
push
ret
push
jge
out
rcll
jae
pop
push
and
xor
inc
pop
jp
scas
inc
mov
push
scas
jmp
cmp
mov
std
or
lret
hlt
xchg
pushl
xor
in
push
dec
xor
in
mov
jbe
jne
jmp
popf
inc
pop
sbb
enter
jbe
or
xor
je
dec
ret
jge
mov
dec
sub
push
pop
rcrl
das
jnp
dec
mov
imul
pop
je
and
jmp
out
cmp
xchg
out
out
push
mulb
stc
aaa
mov
movsl
out
jne
fldl
ds
fldcw
sub
fistpl
jl
xchg
aad
lods
addl
jmp
outsb
fildll
xor
push
and
or
ret
mov
test
cmp
push
xlat
aam
pushf
pop
popf
mov
xor
mov
cmp
hlt
scas
pop
sahf
mov
cmp
adc
and
test
inc
and
inc
push
mov
push
cli
shrb
xor
or
mov
adcl
jno
push
mov
xor
fsincos
and
movsb
sbb
rcrl
jb
cmp
out
repz
and
sub
mov
outsb
mov
fdivs
shll
sbb
mov
test
xchg
fstpt
mov
mov
mov
in
pushf
insl
in
mov
inc
imul
pop
test
push
cld
lahf
jb
in
pop
das
mov
add
aaa
clc
mov
loop
bswap
mov
and
pop
or
pop
jp
mov
pop
data16
mov
enter
xlat
dec
das
adc
jecxz
sbb
movsl
jnp
pusha
fdivrl
adc
jge
cltd
fstpl
andb
xor
push
sub
in
rcrb
aas
xchg
and
xchg
lahf
int3
daa
rcll
jne
or
xchg
sub
addr16
push
or
mov
push
xchg
mov
pop
out
aad
les
sahf
ret
pop
js
pushf
aaa
xor
lcall
and
xchg
addb
fwait
adc
sub
cwtl
cmpsl
std
pop
push
mov
mov
lcall
jp
clc
sub
jle
push
sbb
loop
hlt
sarl
xor
bound
lock
pop
or
pop
mov
and
bound
test
outsb
sub
push
in
icebp
push
sbbb
in
subb
idivb
out
popa
add
outsb
sub
sbb
mov
ret
shr
test
push
aaa
mov
lods
adc
out
out
push
sbb
sub
mov
mov
outsb
push
and
add
push
sti
xchg
popa
imul
inc
xor
les
nop
movsb
push
add
push
xchg
mov
mov
int
add
shll
push
and
adc
cmpsl
and
sbb
jno
scas
mov
aaa
pop
or
call
je
push
ficomps
in
or
lcall
add
outsl
ds
jb
bound
sub
das
and
lods
outsl
jb
mov
ja
push
repnz
je
test
mov
xchg
and
jno
add
cmpsl
inc
subb
dec
sub
jbe
cli
inc
aaa
stos
jmp
inc
push
outsb
sub
stc
orl
jge
cmp
popf
xchg
xor
lahf
pop
inc
jmp
jo
sbb
push
mov
fsubp
cmp
jp
jg
pop
xchg
mov
mov
leave
and
mov
pop
inc
daa
jnp
lods
stos
xchg
dec
leave
stos
push
jmp
aaa
and
pop
jmp
mov
pop
jne
repz
mov
cltd
jecxz
fwait
xlat
pop
nop
cmc
daa
sbb
dec
rcrb
sbb
xorb
push
dec
cs
mov
pop
scas
shlb
rcr
cmp
jp
sbb
push
pusha
test
push
push
mov
ds
push
mov
xor
xchg
call
sub
scas
adc
data16
insb
mov
jnp
mov
pop
gs
mov
arpl
insb
ljmp
je
mov
jne
jmp
jne
fsubrs
clc
rorb
fs
xor
adc
movsb
jl
cs
dec
out
out
push
test
repz
pop
pop
scas
cmp
cmp
loope
js
xor
push
out
sub
popa
sbb
or
jno
lods
mov
xorl
sbb
into
xadd
rclb
or
and
push
push
push
fidivl
jns
or
lods
push
xchg
and
ficoms
sub
pop
cwtl
push
insb
jmp
lea
nop
stc
nop
int3
add
mov
xor
jno
movaps
icebp
jge
ficoml
fsub
jle
lock
push
hlt
insb
mov
cld
lock
dec
aam
push
dec
pop
xchg
imul
icebp
popa
inc
pushf
shr
sarb
adc
rclb
jg
outsb
push
and
cmpsl
ljmp
rcl
arpl
mov
pop
insb
adc
sar
stc
pop
loop
stos
ret
inc
jbe
lock
sbb
pop
pop
xlat
mov
pop
and
mov
pop
out
fisttpl
loopne
fs
fdivrl
rcll
jl
test
and
pop
inc
adc
mov
push
loope
sub
loope
sub
cmp
jge
adc
sbb
mov
adc
mov
push
push
outsl
push
pop
inc
inc
or
sub
jp
bound
adc
repz
and
or
xor
or
jns
xor
inc
mov
aaa
outsl
mov
mov
sub
lret
dec
pop
daa
iret
pop
test
sub
cli
cmpsl
xchg
pop
test
inc
stos
sbb
push
pop
pop
lahf
fstpt
cmp
shll
movsb
lock
dec
sarl
cld
mov
adc
push
aam
or
cmpsb
inc
cli
frstor
inc
xchg
ljmp
imul
mov
jns
dec
lcall
in
dec
or
imul
int
fistps
push
push
fdivrl
les
es
inc
fcomps
inc
lret
jae
stos
xchg
pusha
imul
adc
sbb
jns
dec
int
int3
fistpll
mov
lahf
cld
mov
or
add
push
repnz
add
xor
xor
jmp
sti
push
int
cmpsb
out
sbb
int
dec
mov
inc
pop
sahf
dec
adc
in
cmp
ret
lea
and
in
push
ds
xchg
xor
insl
inc
ficomps
xor
es
add
pop
arpl
pushf
jae
xchg
xor
negb
dec
inc
push
dec
pusha
dec
sbb
mov
push
lock
jmp
xchg
loop
fstpl
inc
xchg
xchg
lock
jg
mov
cmpsb
cmp
orb
aas
inc
or
mov
insb
xor
out
loopne
bound
dec
je
xchg
dec
cs
bound
daa
gs
mov
rcr
adcb
mov
clc
pop
dec
lods
pop
xchg
inc
out
insl
inc
out
lea
data16
mov
sbbb
pop
push
in
mov
mov
cmpsl
mov
movsl
jge
jecxz
jl
jg
mov
adc
mov
adcl
add
push
jmp
add
jne
sbb
int
hlt
leave
push
mov
jle
rcl
jns
sbb
hlt
jo
mov
jge
adc
arpl
mov
out
xor
jb
fcomps
lret
out
es
insl
stos
and
mov
push
rclb
sub
enter
popf
pop
pusha
pop
sbb
js
lahf
or
insl
cmp
cmp
pop
mov
xchg
hlt
sbb
adc
mov
ffree
repz
lods
stos
je
inc
dec
push
stos
sub
pusha
jg
test
je
std
scas
insb
mov
ret
add
fstps
fwait
cmpsb
mov
sbb
aad
ja
popf
aad
mov
cmp
xchg
pop
mov
mov
and
jmp
dec
sbb
lods
mov
pushf
outsl
pop
movl
aas
lcall
xor
sub
lea
ret
mov
mov
mov
fldt
adc
or
arpl
mov
inc
ja
mov
fidivl
jae
adc
inc
pop
mov
mov
and
ljmp
mov
jb
jle
repz
push
sbb
mov
nop
aad
jl
mov
jle
xchg
jo
jb
mov
add
rcrl
shll
adc
pop
insl
and
testb
sub
fwait
loop
mov
add
or
addr16
xchg
or
fldl
mov
adc
fistps
mov
movsb
inc
rorl
xor
sub
mov
mov
inc
mov
loopne
add
xor
cwtl
dec
mov
add
mov
sbb
mov
fnstenv
std
cmp
arpl
mov
cwtl
fdivs
push
int
add
mov
xor
call
rcr
mov
sbb
cmc
and
cmp
ficoml
jnp
jb
xor
pop
dec
into
or
divl
and
xchg
cmp
outsb
clc
mulb
les
mov
lea
ljmp
mov
or
enter
and
pop
cltd
dec
lods
loop
sar
mov
lcall
sbb
leave
and
cmp
mov
mov
es
jg
lods
pop
out
aas
mov
je
pop
out
cmp
arpl
movsl
or
jg
push
lcall
push
stos
std
gs
fwait
xor
sub
mov
jge
sub
cmc
mov
push
shlb
scas
movsb
fwait
jl
xor
add
inc
and
xor
je
add
and
pop
rorl
jbe
into
aam
std
mov
pop
or
enter
int
in
fiadds
push
jmp
movsl
add
add
data16
out
mov
add
mov
hlt
xchg
stos
fadd
js
or
mov
mov
mov
inc
push
iret
pop
js
and
cmp
negb
sti
mov
cmp
inc
mov
adc
jl
nop
lea
shlb
js
xlat
iret
fwait
in
ret
lea
or
lods
js
pop
iret
imul
sti
xor
cmp
mov
arpl
push
mov
mov
push
dec
nop
fcomi
int3
and
pop
mov
cmpsl
shll
and
sbb
inc
mov
fdivrl
xor
pop
lea
in
and
sub
test
xor
jl
and
cmpsl
jl
xor
je
out
testl
cmp
push
nop
mov
or
mov
mov
dec
cmpsb
pop
fdivrp
shl
sti
out
cmp
fsubrl
mov
adc
adc
cmpsb
sub
mov
adc
and
fistpl
int3
hlt
push
pop
je
add
lds
and
cmp
outsb
xchg
loopne
inc
fidivs
lea
sbb
stc
inc
mov
sub
mov
pushf
lea
js
fcmovne
scas
mov
jmp
lahf
xor
add
sub
dec
out
aam
in
dec
sub
lock
lods
mov
testl
inc
add
inc
cli
xor
rcr
cltd
and
mov
mov
inc
xchg
fiadds
xchg
xchg
add
fs
mov
out
xchg
cmp
sub
and
loopne
xchg
test
repnz
mov
and
sbb
push
and
jb
and
xor
mov
in
shl
mov
ja
loopne
cltd
jo
xchg
lahf
sbb
or
rcl
adc
lcall
adc
push
loopne
or
xchg
pop
icebp
orl
addr16
jb
xlat
test
jnp
sub
subl
insb
push
or
je
ds
gs
jmp
mov
scas
js
or
dec
clc
nop
add
and
in
and
inc
pop
xchg
ja
jecxz
dec
cs
pop
cmc
lods
shl
shll
mov
cwtl
mov
in
jne
int
mov
std
jo
test
test
leave
clc
jns
jb
sbb
lahf
dec
fcmovb
jno
ds
ljmp
xchg
arpl
jecxz
arpl
outsl
inc
and
sub
popa
fdivrl
add
mov
inc
pushl
fildll
or
jp
ja
out
fnsave
mov
out
dec
xchg
jns
jmp
test
movsl
stos
push
push
loope
in
pop
movsl
cs
sub
lret
dec
pop
add
add
rorb
pop
out
jmp
outsb
gs
cmpl
insb
sub
pop
imul
push
xchg
rclb
xor
sub
cmp
les
jb
push
dec
insb
pushf
stos
mov
hlt
or
mov
cli
jge
jge
sub
adc
pop
sbb
xchg
jne
mov
testb
int3
pop
pop
cli
sbb
in
shlb
sub
int
push
sub
mov
dec
idivl
dec
fnsave
mov
sti
and
pop
aaa
out
and
imul
lods
sarb
ds
jno
xchg
add
shrl
mov
fldcw
adcl
xchg
cmp
subl
inc
lds
mov
jb
loop
mov
cmp
xor
negb
insl
push
cld
repnz
