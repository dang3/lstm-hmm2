pop
add
addb
sub
xor
mov
add
jmp
push
ficoms
or
sbb
test
xor
fsubs
fstpt
sub
jl
out
dec
pop
push
dec
pushf
lcall
push
test
sbb
add
jl
sarb
jmp
inc
mov
fstpt
stos
inc
add
lods
bound
push
jmp
movsb
ds
popf
sub
sbb
mov
mov
call
and
repz
push
lret
cmp
mov
dec
test
adc
add
fdivr
addb
add
jbe
mov
aad
rolb
in
lds
arpl
lcall
pop
push
xchg
sub
iret
clc
and
mov
push
push
xchg
out
sub
add
inc
adc
leave
pop
cmpsl
jno
sbb
add
inc
bound
and
in
fsubr
test
cmpsb
in
jne
push
mov
insb
jno
cs
or
cwtl
cli
xor
pushl
xor
std
int
loope
in
and
inc
push
adc
cmpsl
ret
jl
test
inc
loopne
pop
imul
imul
sbb
call
jb,pt
cli
fdivrs
aas
mov
xchg
stc
idivl
jmp
push
cltd
adc
dec
test
aad
dec
pop
scas
jne
shll
mov
loopne
insb
xchg
das
push
pop
add
add
nop
add
cmp
out
sti
push
sbb
std
scas
and
add
add
jb
int3
aad
cmp
jmp
imulb
and
mov
daa
sahf
pop
fs
push
or
imulb
nop
in
jl
fadds
add
enter
or
iret
adc
data16
sub
fstl
mov
int
loop
mov
or
jnp
and
insb
lods
insl
imul
pop
test
adc
push
or
cltd
xchg
inc
pop
sbb
lods
enter
pop
jns
movsb
loop
popf
sub
ret
cmp
jge
add
add
push
push
pop
int
push
xchg
xchg
xor
lret
inc
in
mov
arpl
arpl
sub
imul
sbb
inc
sbb
ret
inc
sbb
enter
ret
push
out
xchg
xchg
sbb
loopne
jmp
jno
cwtl
xchg
mov
xchg
cmp
xor
aam
adc
outsl
pop
jb
mov
mov
inc
pop
aas
jp
xchg
fwait
adc
push
lret
jle
cli
adc
xor
dec
mov
ret
fildll
js
xlat
stc
push
andb
cwtl
cmp
sub
sub
addr16
bound
rcrb
filds
xchg
pop
mov
stos
test
scas
mov
push
popa
xchg
mov
jne
mov
or
inc
andl
jl
jno
mov
roll
ds
into
ss
pop
cmpsb
jnp
scas
xor
stos
sbb
fists
ror
xchg
xchg
mov
mov
clc
loopne
lds
xchg
dec
ret
pop
cs
sbb
imul
pop
fstpl
and
xchg
jmp
orl
iret
fsts
and
or
mov
push
out
xchg
std
insl
pushf
in
push
shrl
iret
jl
sbb
lock
mov
js
add
cmp
ja
stc
mov
and
push
mov
push
fisubl
hlt
ljmp
dec
test
cs
or
pop
mov
mov
push
pop
jns
mov
xor
in
dec
mov
mov
icebp
dec
push
push
nop
insl
outsb
test
insl
pop
out
adc
std
jb
cmp
out
pop
dec
mov
popf
out
movsb
lock
jb
incb
inc
stos
inc
fsts
mov
sub
out
and
mov
pop
sub
cmp
inc
xor
xor
push
jbe
gs
pop
shlb
aad
enter
mov
or
push
adc
sub
jl
std
cli
xor
xor
mull
adc
cmc
ror
hlt
aam
ljmp
in
cmc
pop
pusha
ljmp
aaa
mov
jno
leave
outsl
sahf
and
dec
xchg
sub
outsl
push
addl
test
outsb
xchg
mov
sbbl
adc
cmc
sub
cmc
imul
aad
outsb
fs
mov
sub
mov
xor
lock
cmp
lret
or
sub
push
ljmp
insl
cs
push
xor
dec
ffree
or
and
fsubrl
pop
cli
cli
movb
loope
mov
and
call
popf
mov
shlb
dec
jecxz
outsb
pop
ss
mov
sub
jnp
hlt
out
xchg
pop
xchg
inc
rcll
adc
jbe
inc
xchg
stos
xchg
imul
sahf
or
in
or
dec
out
mov
xor
sbb
outsl
nop
pop
cmp
dec
push
jnp
xor
ret
ds
cmp
cltd
fwait
or
add
scas
negl
aad
data16
repnz
xchg
adc
punpckhbw
xor
inc
xor
fwait
jae
stos
xor
or
std
je
clc
pop
add
xor
orl
adc
jge
les
add
incb
add
dec
and
sub
xlat
xlat
push
andl
xchg
fildll
lea
lret
mov
cli
popa
push
cmp
mov
out
movsl
mov
adc
mov
mov
pusha
mov
dec
jbe
int
cmp
je
push
xor
jb
adc
add
jl
lahf
cmp
or
popa
xor
dec
insb
mov
out
adc
push
lea
aam
ds
mov
loop
jne
xchg
ficompl
sbb
mov
jnp
fists
leave
popf
xor
cs
or
inc
push
and
add
cmp
push
fildll
jle
jno
sbb
xchg
mov
jno
cmp
dec
loope
aaa
jb
leave
fmul
test
fsubrp
push
add
sbb
sub
add
loopne
adc
xchg
sub
scas
lahf
ljmp
mov
sarb
dec
xor
xchg
outsl
inc
jmp
xchg
push
xchg
sbb
and
out
cmp
adc
xor
mov
fdivs
mov
cmpsb
pop
dec
pop
out
push
ret
cld
mov
loope
sub
aad
mov
dec
push
adc
mov
cwtl
out
sbb
insb
sbb
leave
xchg
addl
jne
push
in
or
adc
fimull
aam
mov
and
sbb
std
es
pop
sbb
sub
aad
inc
hlt
xchg
sbb
inc
mov
loope
hlt
or
jno
jne
rcll
les
bnd
adc
les
inc
or
jne
push
jecxz
ljmp
popf
add
push
leave
mov
loop
sarl
daa
push
push
cli
jl
xor
add
sub
push
dec
xor
mov
push
scas
xor
jle
mov
mov
xchg
faddl
jecxz
and
pop
lahf
ret
sbb
mov
enter
repnz
push
addr16
pusha
fs
xor
mov
lock
or
repz
sti
idivb
test
lahf
cwtl
hlt
faddp
call
push
enter
jnp
adc
shll
loope
jge
inc
addr16
pop
aas
or
xchg
filds
pop
lret
in
bound
mov
and
out
outsl
in
test
fisubs
pop
jno
sub
xchg
and
cmpsb
push
add
inc
push
lret
xchg
rol
mov
fnstenv
lret
mov
pop
mov
sub
inc
cwtl
loop
push
adc
es
jl
aas
mov
sub
dec
jne
jns
push
jne
add
pop
imul
dec
adc
mov
mov
mov
rorl
jns
push
mov
mov
mov
jl
iret
adc
xor
or
ljmp
dec
xchg
enter
mov
imul
and
std
mov
adc
cmpsl
popf
xchg
dec
mov
xor
xor
int
pop
push
xchg
add
cs
int3
insl
dec
popa
cwtl
mov
cmp
hlt
fnstcw
pop
adc
lret
imul
int
js
aas
dec
in
stos
fs
jmp
cmp
shrl
loop
in
and
movsb
dec
inc
mov
cmp
lods
sub
and
push
movsl
fldt
dec
decb
loope
lds
sti
repz
jg
sub
add
stc
stc
in
ja
mov
mov
mov
imul
jb
dec
in
inc
test
sahf
mov
lods
fidivrl
sub
mov
jp
call
mov
mov
xchg
mov
dec
cltd
xor
pop
repz
cmp
lret
inc
shlb
aad
sbb
and
rcll
xchg
or
divb
inc
inc
pushf
movsb
xor
jb
ds
rcrb
int
fcomip
dec
jae,pt
call
or
pushf
adc
jl
adc
jno
clc
fwait
sar
dec
data16
nop
cwtl
and
dec
push
ss
xchg
shrl
sub
jb
pushl
fcompl
xor
fnstcw
mov
push
xchg
sub
mov
cmp
ret
dec
or
clc
sahf
inc
out
dec
sbbb
sbbb
cmp
jmp
jnp
scas
lods
leave
mov
shll
movsl
popf
scas
fnstsw
jge
lods
cmpsl
ss
pop
lahf
sbb
testb
in
aaa
test
sub
lret
clc
mov
cli
push
shrl
pop
insl
mov
pop
mov
jmp
fwait
into
fs
and
adc
adc
out
les
lahf
xchg
cmc
mov
fdivs
xlat
in
xchg
ja
xchg
std
add
scas
xorl
push
jge
std
mov
push
out
gs
or
pop
pop
pushf
das
adc
xlat
aaa
jmp
mov
jno
push
in
aam
mov
insl
mov
sahf
inc
sti
and
movb
stos
mov
repnz
pop
jg
ds
mov
jo
std
xchg
out
pop
mov
mov
div
sub
shll
lock
mov
in
aam
call
or
sbb
push
cmc
aam
lret
jg
jmp
sub
pop
call
add
daa
stc
mov
cmpsl
add
and
push
inc
dec
outsl
inc
push
loope
mov
rcr
and
push
in
fimull
test
data16
ljmp
loope
cwtl
fidivl
push
aaa
iret
loope
dec
jl
pusha
mov
stos
cmp
push
pop
mov
call
push
dec
call
xlat
cli
sub
imul
cmp
dec
jae
or
add
fs
cwtl
xor
lods
fsubr
xchg
dec
xchg
mov
sub
push
test
push
mov
add
outsl
or
out
stos
outsl
sub
or
ret
add
dec
aaa
cltd
rorl
mov
and
fcoms
mov
xor
stos
push
dec
sub
or
pop
xor
daa
xchg
pop
loop
mov
dec
mov
or
jb
shll
imul
aaa
jae
jecxz
notl
pop
cmpsb
fldenv
mov
add
jb
adc
and
outsl
insl
into
inc
inc
ret
gs
jecxz
xor
pop
sub
mov
sarb
std
mov
imul
jle
lds
or
or
mov
out
roll
adc
outsb
lea
push
jl
dec
and
sahf
pushf
add
adc
sbb
movsb
je
pop
in
mov
test
cmp
pop
int3
pop
in
sbb
mov
cwtl
xchg
xor
and
jbe
imul
add
push
or
add
insl
icebp
jae
call
inc
loopne
or
nop
adc
bound
fsubp
inc
addr16
mov
or
in
std
jge
ds
mov
movsl
pop
pop
out
add
cmp
mov
hlt
pop
add
mov
enter
cmp
sub
mov
xorb
jbe
cmp
aam
or
jp
and
out
xchg
cmp
xchg
xchg
ret
or
sbb
or
sbb
into
sbb
dec
stos
call
pop
clc
loop
push
lret
xchg
mov
sub
or
cmp
dec
lret
jae
lds
add
mov
xor
out
sti
imul
mov
push
enter
cmp
cmp
sbb
mov
js
fnstsw
mov
lcall
jbe
mov
daa
fsubp
push
lods
sbb
add
mov
andb
cmpb
mov
adc
popf
mov
repnz
jno
jg
xor
or
in
stos
jp
rcll
cmpl
enter
jmp
mov
enter
push
or
jle
aam
leave
pop
leave
sub
or
lds
adc
pop
pop
call
cmp
or
or
jb
xchg
lea
cmp
mov
imul
cmpsl
test
imul
insb
mov
enter
fimuls
loopne
insl
pop
push
fbstp
and
push
jmp
and
cmp
rcrl
xor
out
push
out
ror
inc
add
int
mov
dec
xchg
pop
push
mov
mov
cli
jb
dec
out
or
mov
mov
cmc
mov
mov
jbe
aas
sub
dec
xor
xchg
shlb
cmp
and
das
pop
xor
jae
aam
mov
movl
push
cwtl
add
loop
movsl
movsl
popa
roll
mov
out
mov
inc
mov
in
and
cmc
call
stc
fwait
xchg
fisubrs
jno
ljmp
repz
and
fisubrs
jmp
or
mov
test
sbb
in
xchg
push
stos
cld
into
lret
cmc
sbb
shl
aas
push
cs
pop
sbb
xor
arpl
sbb
adcb
in
push
dec
pop
mov
xchg
jle
and
lahf
cmp
lock
divl
xchg
shl
mov
aaa
push
mov
fstps
cld
outsb
loop
addr16
fdivrs
xor
xchg
jmp
push
stc
mov
popf
fistpll
jg
imul
gs
add
jnp
pushf
cmp
mov
sub
sets
pop
andl
imull
add
aam
les
mov
loop
in
fdivp
or
rcrl
mov
mov
fdivrs
fs
shl
mov
mov
mov
test
loopne
cmp
mov
xchg
push
insb
fisttpll
pop
pusha
iret
push
fisubrl
jl
fdivl
leave
cmc
jmp
sbbl
inc
or
xchg
mov
out
cmpsl
jg
cmp
ror
fcompl
movsb
test
sbb
xor
enter
jae
in
sbb
cld
xchg
clc
cmpsl
sbb
jbe
test
out
push
mov
pusha
pop
repnz
movb
cld
push
and
int3
mov
scas
pop
sub
xorl
aaa
iret
cmpsb
rcl
jo
insl
push
int3
loope
mov
dec
sub
xchg
test
and
jb
push
lahf
fildl
mov
ljmp
push
jne
or
jb
pop
sub
out
pusha
sub
dec
xlat
xor
and
sbb
xlat
test
xchg
js
adc
cltd
in
outsb
js
add
stos
ficomps
lcall
jmp
or
fldt
push
push
add
inc
mov
sub
inc
add
mov
xor
fldln2
and
mov
flds
mov
int
inc
insl
add
into
test
shr
fs
pushf
inc
add
dec
aad
inc
mov
sbb
fwait
outsb
jmp
mov
das
sub
add
icebp
rcrb
adc
call
je
out
push
mov
loopne
add
iret
jne
mov
sub
mov
xchg
xchg
sbb
mov
xor
sti
mov
pop
ss
jbe
add
xchg
or
xor
or
push
add
and
testb
pop
push
xchg
and
hlt
inc
ret
imul
inc
sbb
pop
push
leave
lods
inc
movsl
incb
xchg
ljmp
lods
outsl
iret
outsb
adcl
inc
mov
mov
test
adc
into
fucom
cmp
pop
lahf
adc
sbb
je
pusha
lock
hlt
push
rorl
repz
ret
mov
add
rcl
ja
pusha
mov
cmpsl
icebp
out
add
sbb
jns
mov
inc
repnz
movsl
xchg
sbb
popa
xlat
jp
jae
jmp
inc
or
and
fdivs
inc
inc
fwait
stos
aad
mov
add
lahf
outsl
and
sub
ds
lahf
jmp
xchg
sbb
mov
or
inc
js
out
sub
cltd
shlb
sub
lret
pop
mov
or
mov
mov
mov
pop
mov
xlat
fistps
test
lret
ret
shll
fwait
sub
loop
data16
jb
push
push
sub
pop
icebp
adcb
adc
xchg
cmp
je
mov
stos
adc
sbb
xchg
sbb
sahf
xchg
gs
cs
mov
dec
nop
ficomps
subl
xchg
out
into
xchg
jge
repz
inc
xchg
push
inc
mov
addr16
xor
cmpsb
and
es
and
test
cmpl
ljmp
push
idivl
loop
scas
mov
xor
jp
xchg
or
adcl
je
dec
mov
shl
jo
pop
cmp
imul
dec
aaa
adc
psubsb
stos
jl
pop
hlt
lock
and
stc
aas
push
loopne
push
pop
mov
arpl
mov
xor
mov
test
cmpl
pop
filds
mov
mov
repz
leave
push
push
je
sahf
cld
repnz
adc
inc
fwait
iret
jae
and
and
loopne
fisubrs
ss
imul
inc
and
je
repnz
push
adc
mov
pushf
dec
add
mov
daa
cld
data16
xlat
es
iret
rcrl
xchg
or
ret
push
xchg
push
push
insb
and
sub
sbb
mov
lods
daa
mov
addr16
mov
add
ss
adc
dec
and
bound
xchg
xchg
insb
gs
cmp
and
jecxz
out
jp
addr16
or
fnsave
cmp
iret
in
xlat
jne
das
sbb
mov
into
out
sarl
xor
xchg
pushf
mov
filds
mov
daa
push
inc
lock
xor
insb
or
movsl
jno
sbb
pop
xchg
mov
andb
push
icebp
jp
mov
outsb
shl
in
sbb
xor
dec
mov
popf
es
xchg
cwtl
dec
imul
js
mov
push
int3
add
jo
sbb
out
mov
fldl
or
cmpsb
jmp
or
aam
jecxz
lock
cmova
std
ret
xor
add
mov
push
mov
jg
out
dec
push
sbb
popf
mov
int
jge
push
icebp
and
sbb
dec
mov
sbb
sbb
or
mov
mov
inc
jmp
mov
clc
addr16
test
divb
jg
addr16
push
sub
dec
repz
jecxz
test
sub
cmpsb
iret
adc
cmp
dec
pop
aam
jo
xchg
mov
inc
fildl
xor
cli
popf
or
push
iret
scas
outsb
mov
sbb
xor
clc
in
sub
sti
je
push
loopne
pop
rolb
mov
je
jmp
adc
mov
pop
cmpsl
jnp
nop
test
cltd
fs
mov
mov
jl
jo
push
mov
in
sub
aam
iret
in
scas
inc
sbb
jo
push
inc
xchg
aam
mov
xor
and
dec
in
rolb
push
int
inc
xlat
mov
shrl
cltd
add
sub
add
mov
sub
inc
dec
test
je
enter
adc
push
out
mov
adc
lods
xor
cli
outsl
gs
sub
jae
int3
icebp
std
adc
xchg
push
or
sbb
in
mov
inc
test
cwtl
adc
movsb
lcall
cmc
xor
push
insl
ret
xor
lcall
mov
jns
in
outsb
cmpl
ja
data16
es
add
push
outsl
arpl
pop
enter
pushf
lods
sub
in
stc
dec
sub
add
in
jmp
add
pop
sub
and
xor
push
jg
dec
adc
or
pusha
or
push
movsb
cmp
jns
das
jl
and
pop
push
sub
notl
and
icebp
sub
jecxz
dec
mov
fs
test
mov
sbb
fbstp
addr16
insl
add
into
lret
mov
call
sbb
mov
fisttpl
cmp
inc
aaa
sti
mov
sub
mov
in
pop
xchg
loop
inc
in
or
xchg
mov
or
fiadds
aam
fcmovb
or
mov
and
sti
inc
rcrb
test
aad
cli
ret
inc
inc
lods
daa
pop
pop
ds
out
sarl
test
lods
lret
dec
mov
inc
lods
dec
mov
mov
daa
mov
xor
mulb
mov
ja
dec
inc
mov
cwtl
out
pop
stc
pop
fimuls
push
out
cltd
mov
andb
popa
and
adc
sbb
nop
jecxz
fsubl
adc
pop
jle
adc
loop
ja
pop
xor
push
data16
cmp
push
pop
or
lods
jl
shll
stos
icebp
sbb
xchg
mov
dec
into
adc
cli
repnz
das
rclb
sub
cmp
fcoml
cmpsb
arpl
add
cmp
je
cwtl
imul
add
adc
ss
cs
xchg
mov
arpl
stos
cltd
pop
les
movsb
cmp
lods
pop
cmpsb
mov
lock
jns
mov
and
rclb
push
sahf
shlb
mov
mov
cltd
data16
cmp
or
sub
out
test
sbb
sarb
cmp
push
sti
lods
in
and
mov
sub
mov
es
lret
movsl
pop
idiv
imul
xor
mov
push
ret
test
addr16
popf
jp
add
int
xchg
jmp
mov
sbb
push
push
add
adc
adc
and
dec
fnstsw
ds
lahf
call
mov
cmc
inc
in
pusha
jbe
jbe
mov
imul
out
enter
push
sbb
out
cmp
lret
jo
mov
xor
inc
daa
inc
pop
test
mov
xchg
out
in
jne
insb
jl
aad
pop
mov
jb
inc
and
repnz
push
pushf
stc
mov
jg,pt
push
add
mov
shl
add
je
push
jb
adc
faddp
fwait
ds
sbb
and
rcll
push
push
loopne
dec
lds
push
mov
jns
fbstp
sbb
aas
add
int
lock
lret
cmc
cmpsb
adc
add
cs
or
jno
cs
fwait
push
xchg
lods
test
or
dec
imul
dec
sti
sub
push
mov
xchg
push
push
pop
les
stos
cmp
fstpl
mov
jne
dec
nop
cmc
aad
outsb
cmpsb
mov
inc
in
adc
or
xchg
mov
add
xchg
push
sub
jo
ret
jns
jecxz
push
stc
dec
cmc
xchg
rorb
bound
orb
pop
out
clc
cmpl
adc
insl
xchg
mov
sub
xchg
and
js
pop
sub
lahf
scas
mov
fisubrs
data16
mov
loop
mov
int3
sahf
pusha
cmp
mov
test
add
xchg
add
data16
fwait
dec
fsts
not
or
sbb
icebp
or
sbb
test
jns
push
adc
fxch
push
sbb
inc
cmp
fimull
ljmp
jl
xchg
xchg
xlat
dec
sbb
inc
mov
adc
adc
xlat
outsb
rcl
insb
jg
es
push
cltd
add
dec
or
sub
outsl
push
push
inc
popf
enter
sbb
dec
add
adc
push
pushl
outsl
pop
lock
jecxz
cmp
ja
pop
adc
xchg
stos
fwait
push
xor
push
sarb
mov
loope
mov
cltd
mov
ljmp
int
loope
xchg
leave
pop
mov
stos
inc
dec
shrl
jmp
popf
movsl
popl
ja
cmp
test
insb
inc
shll
xor
add
dec
mov
cmp
mov
outsb
js
inc
cmp
pusha
std
mov
lret
jmp
int
inc
xor
mov
xor
repnz
scas
sbb
adc
aad
in
int3
jl
jno
fisttpl
xor
clc
inc
in
ss
stos
mov
out
nop
nop
xchg
push
repz
popf
mov
leave
cmc
call
icebp
sbb
incb
stos
fsubrs
xchg
mov
xor
je
push
orb
inc
sub
test
inc
pushf
enter
cmp
adc
push
es
push
sarb
xchg
pop
out
sub
fdivl
or
cmp
mov
div
outsb
enter
out
push
mov
inc
fwait
push
movsl
repnz
xor
fsubrl
les
or
ret
mov
mov
mov
cli
or
das
add
adc
mov
aam
pop
mov
cltd
sbb
mov
jo
fcomi
jne
andb
lock
cs
je
aaa
ret
dec
rol
xor
pop
mov
outsb
lods
lret
pop
inc
cmp
shlb
cmp
pusha
xchg
mov
mov
jae
push
imul
pop
sbb
pusha
ja
push
shll
mov
push
test
jno
add
stos
jns
bound
cmp
push
dec
loop
adc
jb
and
and
cmp
mov
fsubrp
push
dec
enter
mov
mov
push
xchg
pop
add
xchg
pop
adc
idivl
sbb
outsl
sbb
push
loopne
cmpsl
test
movsb
push
pushf
and
aam
mov
sbb
mov
and
sbb
icebp
dec
fldenv
adc
shr
daa
sbb
jp
in
or
push
mov
loope
mov
insl
push
inc
pop
mov
sub
cmpb
ret
call
and
or
mov
push
xchg
imul
and
or
adcb
push
xchg
lods
js
lods
sbb
lods
or
inc
cmp
popf
xor
xchg
xchg
cltd
cs
push
add
or
dec
mov
xor
cwtl
sti
or
loop
push
incb
inc
inc
fldt
cs
mov
push
in
xor
iret
sbb
xchg
mov
test
hlt
jbe
xor
xorb
xchg
pushf
enter
icebp
incl
or
in
nop
mov
test
xchg
shrl
and
jl
add
fsubl
orb
out
sub
sbb
xchg
push
ja
dec
pop
in
pop
lahf
gs
out
and
xchg
push
dec
adc
lret
test
lds
in
scas
bound
popa
int3
rcll
mull
adc
sub
ret
ds
std
sub
or
lds
push
dec
or
push
xor
mov
pusha
pusha
scas
icebp
and
lea
arpl
push
pop
or
sbb
jbe
xchg
ljmp
dec
mov
shrl
push
out
xlat
cmpsb
cmp
cmpsl
pop
push
ja
add
movsb
fbstp
call
rcrl
das
loopne
arpl
mov
inc
or
mov
aad
lahf
les
cld
mov
pushf
rorl
cltd
test
jae
gs
sub
sti
into
jno
mov
push
push
jae
imul
outsb
out
mov
into
add
xchg
jnp
push
mov
and
fcmovb
icebp
pushf
mov
repnz
cwtl
jp
ss
popf
cmpsb
mov
add
sbb
test
cli
out
jno
stc
mov
fdivs
lahf
mov
inc
enter
add
lret
or
data16
sub
jno
and
and
and
inc
push
push
fdivrs
scas
inc
cltd
xchg
jmp
inc
cmp
and
dec
xchg
and
in
je
icebp
jb
xorb
sbb
push
cs
mov
adc
sub
loop
or
add
loope
mov
mov
dec
pop
pop
mov
inc
lahf
add
pop
mov
out
divb
lret
lods
or
pushf
dec
loope
imulb
fst
pop
inc
jle
pop
addb
leave
sbb
bound
jmp
mov
xchg
mov
scas
add
fistpl
xchg
ret
std
jnp
adc
push
lcall
stc
push
call
mov
push
divl
inc
test
push
dec
jnp
popf
lock
ror
inc
mov
es
jae
mov
ret
push
cmp
or
lret
and
cmp
or
push
out
dec
mov
outsl
iret
ljmp
notb
lods
faddl
lea
jmp
jne
cmp
sub
pop
imul
js
jg
lds
out
icebp
cltd
clc
out
popf
sahf
insl
mov
ss
push
stos
divb
jbe
jb
mov
imul
mov
repz
cltd
pop
clc
add
icebp
dec
test
fwait
xor
pop
or
outsb
outsb
jnp
inc
push
mov
dec
test
lret
ss
data16
push
xchg
js
ficoms
iret
jnp
aam
pop
sbb
push
cmp
xchg
jecxz
xor
xorb
les
insb
jns
es
mov
sarb
xor
aam
mov
insl
sub
insl
mov
sbb
mov
hlt
sub
mov
mov
in
and
dec
pop
cmc
dec
lods
jmp
mov
popa
push
mov
rcl
leave
push
and
into
out
call
xchg
ds
cmpsl
pop
cmp
or
mov
push
push
shl
psubusw
fildl
pushf
jp
rorl
imul
cmc
dec
xor
sub
pop
prefetch
push
dec
add
js
mov
sub
jge
lock
in
les
mov
in
ljmp
jo
sbb
xchg
sbb
sub
test
ja
mov
adc
adc
push
sbb
or
dec
aam
lret
sbb
jns
and
mov
adc
xchg
bound
daa
sbbb
cli
jge
std
xor
mov
mov
add
xor
and
mov
pushf
add
sbb
je
mov
mov
rcrl
mov
test
cmpsl
notb
mov
fwait
pop
aam
adc
imul
js
test
movsb
inc
lock
gs
mov
mov
lahf
fidivrs
mov
push
daa
fisubrl
ds
push
inc
shlb
dec
sarl
sbb
fcoml
int
cmp
ljmp
sbb
popf
fisttps
lds
gs
sbbl
sbb
inc
fbstp
mov
dec
imul
pop
repz
adc
add
std
mov
ja
jp
not
mulb
add
xchg
lahf
mov
sahf
pushf
push
fstp
sahf
addb
sbb
push
xor
push
push
cwtl
stos
aaa
mov
add
sbb
or
xor
in
fiadds
adc
mov
cmp
es
loopne
or
push
enter
pushf
push
inc
stos
nop
push
xchg
insb
adc
icebp
mov
aad
ja
fisubrl
mov
pop
fidivs
jns
mov
test
xor
push
push
jecxz
mov
inc
push
jle
xchg
or
lds
scas
fsubl
loope
aas
jno
fsts
add
push
aad
ret
or
mov
idivl
or
xor
xchg
int3
xchg
leave
inc
and
xor
imul
in
lds
test
sub
mov
into
fwait
in
xor
inc
test
add
aam
sahf
push
repnz
pop
pusha
lds
inc
lods
inc
jno
lcall
sti
inc
mov
fdivl
int3
das
in
ja
test
cmc
addr16
push
je
pop
and
jle
adc
and
addr16
sbb
mov
shlb
mov
inc
ret
sub
push
push
mov
adc
or
mov
cmpsb
ljmp
das
inc
add
aam
push
imul
push
jle
sub
fcmovu
iret
outsb
fcomp
mov
dec
idivl
outsl
cmp
xor
cltd
sbb
ljmp
mov
repnz
mov
mov
push
ja
dec
mov
sbb
shrb
cmp
push
test
enter
in
in
aad
add
mov
xor
icebp
and
xor
sub
scas
rorl
sbb
fstl
dec
mov
dec
rcll
sub
or
inc
aam
addr16
mov
inc
xchg
inc
cmp
in
inc
sbb
adc
test
push
inc
adc
or
push
dec
jns
xor
pop
lahf
stc
xchg
add
cmp
int
clc
jb
mov
paddq
enter
dec
call
xchg
push
dec
clc
ja
inc
popa
add
out
xchg
popf
ja
add
test
or
fcomip
fsubrs
out
ja
jmp
sub
ret
xchg
cmpsl
or
jns
outsb
inc
enter
sub
jge
ja,pn
sub
mov
out
mov
sbb
adc
jle
movsb
cmp
inc
cli
push
jnp
test
jnp
push
inc
dec
cmp
inc
stos
inc
inc
pop
mov
and
mov
arpl
js
addr16
popa
out
aaa
es
movsl
in
clc
or
icebp
scas
fbld
aaa
aaa
arpl
jp
cmp
mov
out
mov
das
into
and
je
js
add
aad
cli
cltd
jmp
push
jbe,pt
push
xchg
fwait
sub
popf
mov
pop
jns
pop
xor
fcoml
or
cmp
adc
cmpsb
fildl
mov
jle
call
add
xchg
xchg
push
js
in
data16
btc
subb
dec
repz
pop
cld
js
popa
aaa
xchg
jg
pushf
xchg
mov
xchg
jge
pop
mull
dec
pop
js
ljmp
mov
cmpl
in
mov
mov
pop
and
sub
frstpm(287
cld
cmp
push
inc
cltd
cmc
mov
je
in
sbb
out
mov
aad
cs
or
pop
leave
lret
mov
push
pop
fwait
loop
xchg
repnz
cld
mov
jge
push
xor
pop
and
inc
arpl
dec
aaa
and
sub
mov
iret
lock
add
jo
sub
aad
and
fidivs
inc
loop
adcl
and
mov
xchg
movsl
movsl
jg
mov
xchg
xor
adc
cltd
xlat
test
insb
jb
setae
rolb
jae
add
loope
dec
je
mov
dec
adc
and
cmp
sbb
sub
lret
jnp
ja
mov
and
cmpsl
outsb
popf
or
push
push
andb
xor
jl
into
ds
in
cmp
int3
cltd
mov
sub
fmull
push
hlt
fs
add
leave
pop
pushf
imul
pop
out
aas
in
pusha
mov
lret
ja
push
les
leave
ret
jbe
mov
orb
aaa
jno
addr16
ja
push
adc
sahf
cmp
push
adc
mov
jle
ja
pop
lods
repnz
xor
sbb
sub
add
and
fdivr
sub
pop
lahf
cli
mov
pop
or
aam
call
test
pop
lret
rcrb
inc
fwait
pop
jo
popf
arpl
out
adc
jg
adc
sbb
ret
ds
out
test
push
in
cmpsl
rcrb
mov
stc
mov
fs
inc
mov
fs
jns
cs
scas
inc
push
cli
jmp
pushf
movsl
aam
jle
cld
xchg
jns
xchg
sub
popa
mov
dec
xor
pushf
or
jge
call
rcr
adc
inc
mov
dec
movsb
mov
and
adc
dec
or
push
pop
or
xor
dec
jo
cs
cltd
cwtl
rorl
repnz
icebp
loop
cwtl
fstpl
push
or
cmpsb
ljmp
mov
pop
ret
mov
mov
aad
inc
fstps
xchg
jne
jb
and
data16
mov
mov
xor
outsb
ret
or
or
das
adc
add
orb
movsb
xchg
jb
fisubrs
push
iret
xchg
insb
dec
cmp
sbb
loopne
imul
cmp
es
stos
mov
scas
cmpl
cltd
sub
cmp
adc
sub
lods
inc
and
jmp
mov
xchg
or
adc
mov
adc
cli
xchg
mov
cmpsl
sti
push
xor
fucom
jp
dec
outsb
sbb
add
add
cmp
mov
mov
inc
mov
test
popa
lods
mov
add
pop
pushf
sub
sti
insl
sub
jmp
stos
scas
stc
rolb
cmc
dec
or
out
inc
sub
xlat
pop
lret
arpl
cmpsb
jg
xchg
bound
bound
int
fisubl
sbbl
movsl
add
out
fsubr
aaa
pop
and
xor
cmp
daa
ljmp
xchg
dec
add
inc
sbb
sub
loop
enter
pop
ljmp
movsl
jecxz
mov
imul
cmp
stos
fistps
pop
daa
xor
pop
jle
lahf
mov
inc
jns
mov
xlat
je
push
rcr
cmp
fists
sarl
push
xchg
andb
push
imulb
push
mov
dec
add
pop
addb
xchg
lcall
adc
jp
les
cltd
mov
inc
and
das
mov
or
jae
sub
ja
test
dec
mov
push
push
insb
inc
mov
into
subb
test
jne
mov
int
or
lods
mov
push
or
or
push
negb
loop
mov
pop
lock
sbb
fwait
lea
mov
out
pop
pop
push
outsl
inc
lahf
rcrl
pop
mov
fistpl
xlat
inc
arpl
dec
je
xchg
pop
nop
push
xlat
loope
push
jge
out
add
dec
loopne
pop
dec
pop
cli
mov
push
push
cmp
mov
jno
data16
ffree
xlat
data16
int
lock
scas
push
punpckhdq
push
scas
push
sub
jne
inc
xchg
ret
sbbl
lods
mov
add
push
notl
pop
cmpsl
insb
jns
subl
movl
icebp
stos
mov
pop
inc
sbb
mov
xor
cltd
loope
notl
xor
push
sub
ss
repz
fdivl
lods
jno
push
call
inc
inc
nop
lods
mov
and
js
and
loope
and
test
inc
adc
jbe
fnstcw
cmpb
ret
jp
es
push
sar
lds
cmpsb
jnp
cmp
nop
inc
sbb
or
mov
out
mov
outsb
adc
and
jmp
push
push
out
bound
icebp
mov
in
push
ds
lea
push
popa
jmp
hlt
push
sti
stos
cs
pop
enter
iret
cltd
subl
clc
cmpsl
imul
add
shr
outsb
xchg
ljmp
popa
inc
and
fstpl
clc
les
loope
push
xchg
sbb
mov
das
push
lods
cwtl
fwait
test
aad
imulb
std
sub
lret
pusha
or
testl
push
xchg
push
bound
xor
jo
xchg
mov
sbb
cli
lret
ret
mov
jmp
add
or
or
xchg
outsl
lods
daa
sbb
rclb
cld
mov
out
push
add
lods
lahf
xchg
out
add
test
xor
cs
fs
mov
adc
and
xor
cld
mov
clc
sbb
out
sub
stos
cmp
aam
repnz
push
sbb
ror
lret
cmpsl
shlb
in
pop
sub
addr16
pop
adc
popa
loope
push
mov
mov
mov
adc
aad
push
sub
in
fs
test
xchg
mov
sahf
hlt
inc
and
std
jle
cli
push
or
mov
sahf
out
and
xchg
out
cmp
mov
movsl
inc
dec
pop
aas
loopne
push
mov
fbld
push
lds
sub
add
cmp
xchg
idivl
loope
int
xor
bound
repnz
pop
cmp
lret
sbb
popa
test
in
divb
xlat
out
dec
jno
sub
sbb
stc
adc
lds
int
std
rcrl
inc
mov
inc
mov
stos
dec
jbe
jecxz
sbb
insb
lods
cmp
outsl
rcl
inc
call
popf
test
lea
ss
xchg
push
sbb
clc
jo
insl
cmp
push
sarb
mov
push
arpl
push
lret
xchg
in
mov
pop
lcall
hlt
gs
sbb
and
pop
out
cld
das
mov
lods
inc
jl
imulb
dec
idivl
mov
inc
adc
add
data16
push
in
mov
inc
adc
dec
ror
mov
cs
xor
movsl
jns
mov
xor
mov
bound
sti
jmp
inc
mov
hlt
fisubl
pop
mov
nop
popa
scas
xor
test
aam
insb
mov
push
push
xor
in
scas
mov
in
imul
test
lret
sub
mov
out
xchg
data16
mov
jnp
push
mov
pop
enter
in
add
xchg
fldpi
sub
scas
or
or
lcall
lcall
pop
rolb
mov
arpl
cmp
enter
stc
leave
data16
pop
cmp
xor
jne
push
mov
loope
orb
dec
add
jns
push
mov
mov
fwait
aas
xchg
daa
mov
xchg
out
mov
mov
outsb
mov
imul
data16
outsl
mov
pop
je
adc
adc
adc
mov
mov
sub
movsb
jmp
jge
and
sbb
lret
pop
cmpsl
and
fidivl
stc
pop
inc
fbld
jb
into
movsb
aad
cmpb
jbe
mov
xor
jmp
mov
ljmp
add
ret
int3
cmpsb
cmpsl
inc
aaa
lea
or
and
sub
divb
pop
push
shrl
ja
pop
pusha
pop
xchg
pushf
xor
xchg
mov
fadd
sbb
insb
add
cli
push
jns
mov
jno
mov
sarl
sub
rol
push
add
and
xchg
mov
push
rcl
mov
jns
xchg
mov
iret
aas
dec
gs
stos
mov
test
roll
add
xchg
enter
jo
and
shrl
hlt
xchg
dec
lock
shll
js
daa
sbb
into
adc
add
stc
lds
xchg
pop
and
inc
mov
dec
lret
out
xor
lcall
adc
xor
mov
cltd
fisubl
mul
sbbb
pop
mov
ja
out
mov
mov
adc
cmp
and
in
add
mov
in
cltd
or
dec
sbb
sbb
mov
jo
or
popf
lahf
outsl
mov
out
jp
sarb
mov
movsl
sub
mov
outsb
xlat
jne
in
icebp
add
lahf
jmp
inc
mov
mov
nop
cltd
fwait
push
lret
mov
add
mov
shll
sub
push
jo
test
sbb
dec
or
jae
rclb
pop
pop
xchg
inc
imul
cli
testl
outsb
add
test
mov
gs
push
mov
xor
pop
push
inc
pop
ds
inc
ss
mov
mov
test
fmuls
in
mov
test
mov
setbe
ret
mov
mov
sub
inc
pop
add
rclb
jo
cs
bound
daa
mov
ror
push
imul
repz
mov
mov
movl
sbb
test
mov
lea
adc
into
mov
rclb
mov
xchg
les
fnstcw
sbb
or
sbb
mov
jbe
fwait
hlt
push
and
scas
jae
lods
pop
dec
dec
fsubl
stos
cwtl
int3
push
test
and
mov
dec
fbstp
mov
mov
xchg
xchg
or
in
aaa
cmp
add
lea
mov
jo
or
loope
mov
mov
xchg
fcmovne
cmp
adc
push
leave
mov
leave
jbe
or
dec
shlb
lock
sbb
pop
mov
xor
mov
mov
mov
enter
pop
daa
lds
int3
mov
test
in
mov
jb
outsb
adc
inc
push
icebp
sti
push
es
dec
pop
push
push
sub
jecxz
cltd
and
or
pop
sub
loope
xor
clc
arpl
loope
andb
js
cmpsb
nop
cmp
popa
jo
in
add
push
inc
out
lret
xor
aaa
push
daa
outsb
insb
xor
pop
sub
dec
mov
push
dec
pop
in
leave
push
fimuls
or
xor
insb
test
mov
or
fs
shll
cli
pop
mov
or
fwait
int3
sbb
loopne
sub
insb
fs
sbb
call
mov
scas
lahf
divps
adc
xchg
addl
dec
popf
ficomps
fsubl
daa
push
pop
fs
mov
sub
shr
test
je
adc
push
sbb
adc
add
pop
pusha
push
hlt
mov
jno
rcl
mov
or
cmp
mov
arpl
out
sbb
scas
xor
sub
cmc
mov
ficoms
popa
stc
icebp
jmp
xchg
arpl
fmul
adc
sahf
xor
std
cmc
cmp
sti
push
adc
jne
cmp
test
stos
and
mov
repz
data16
psrld
sub
sub
pop
scas
outsb
cmp
ret
sub
jl
jnp
stos
mov
ret
cmp
sahf
ret
and
enter
mov
dec
aam
out
rclb
push
or
out
mov
es
ljmp
loope
test
xor
out
pushf
xor
sbb
mov
pushf
mov
std
pop
movsl
sub
insl
xchg
pop
xchg
outsb
cmp
adc
xlat
call
sahf
fcmovnbe
pushf
mov
pop
aaa
fs
mov
mov
out
fcomip
sbb
cmp
dec
cmp
mov
pop
sub
out
pop
xor
or
add
loopne
sbb
hlt
jmp
cs
fdivl
pushf
jno
xchg
in
lcall
push
or
inc
mov
lods
push
jl
mov
mov
js
sub
sti
dec
push
jae
insl
mov
lahf
pushf
sbb
call
sti
inc
and
enter
cmp
push
das
hlt
ljmp
fldt
cmpsl
sbb
into
jge
into
jle
ds
jge
lds
inc
and
add
jne
stos
sub
sub
adc
movsb
jle
mov
inc
pop
lret
cmp
mov
test
xor
sub
repnz
je
mov
js
jae
es
sub
jecxz
jmp
cwtl
inc
fwait
add
add
mov
cwtl
push
bnd
push
scas
outsl
stos
insb
stos
rclb
add
push
nop
hlt
std
ja
mov
loopne
mov
and
int3
aad
sbb
pop
negb
xor
clc
add
in
jne
sbb
cmp
cmp
xor
jns,pt
lods
test
pop
lret
sbb
js
mov
out
adc
loope
or
dec
sub
fisubs
jae
mov
out
ja
push
in
dec
and
loop
and
outsb
sub
xchg
repz
add
loopne
test
leave
popf
int3
pop
mov
jp
aam
add
and
ficoms
add
xor
xchg
aaa
loope
or
shrl
push
lcall
push
cmp
inc
push
cmp
adc
addr16
lea
xchg
sahf
in
dec
pop
imul
cli
in
stos
test
xchg
dec
in
push
xor
push
pop
jae
cwtl
lcall
jl
lahf
mov
sahf
mov
adc
pop
push
fnstsw
cld
mov
aad
stos
pop
xchg
faddl
jg
jnp
mov
xchg
std
jl
cmp
add
push
or
adc
and
sahf
sbb
sbb
or
in
mov
leave
jle
pop
adc
das
cmp
ss
jne
adc
inc
movsb
and
mov
out
es
push
add
lods
ds
xor
js
mov
inc
inc
out
or
add
jae
popf
scas
ret
mov
lcall
daa
arpl
enter
xchg
loope
xor
aas
int
lods
test
daa
xchg
push
sbb
fs
iret
loope
aad
dec
cmp
rolb
stc
loope
xchg
out
outsl
lods
or
insl
icebp
dec
decb
daa
cmp
mov
mov
aaa
dec
sub
lret
sub
sbb
sahf
test
pop
ret
enter
pop
lock
xchg
mov
pop
cli
fcmovnbe
or
xchg
repnz
add
loopne
cmp
xor
lods
imul
pop
cs
xor
lahf
push
cmc
fstpt
out
clc
adc
test
or
insl
and
andb
in
in
mov
nop
mov
vmovhpd
int
js
inc
pop
push
in
jo
hlt
insl
rorb
xchg
dec
push
fsubrs
notl
sbb
mov
adc
jg
pop
and
add
mov
into
sbb
popf
pop
xchg
push
sbbl
rcll
int
sub
add
push
movsl
xchg
sub
mov
stos
sub
jmp
inc
cmc
and
inc
xchg
push
rclb
mov
loop
stos
mov
adc
popa
aas
mov
mov
pop
cs
inc
lds
mov
int
pop
imul
loop
call
pusha
lfs
cmpsb
jno
mov
fbstp
sub
or
js
and
scas
push
mov
ja
and
out
xchg
add
lret
sbb
adc
dec
mov
iret
lcall
adc
inc
push
into
in
or
sbb
jecxz
mov
pop
inc
outsb
adcb
push
cmpsl
mov
and
lds
xor
ss
mov
jp
in
std
xchg
popf
fwait
pop
ret
xchg
ret
xchg
dec
pop
pop
inc
cwtl
out
stos
fs
pop
fldl
test
mov
loopne
in
call
adc
aad
call
mov
lock
aaa
insb
scas
push
divb
gs
mov
or
mov
es
mov
stc
adc
ror
and
dec
outsb
testl
xorb
inc
adc
movsl
test
inc
pop
mov
enter
xchg
and
add
sub
add
mov
fimuls
jmp
cmpsb
mov
iret
inc
jge
icebp
fadd
xchg
inc
cmp
sub
loopne
and
cmp
sahf
insb
push
xchg
into
inc
dec
sub
ja
in
jecxz
adc
xor
test
jp
and
jne
iret
push
or
mov
xor
dec
add
jecxz
push
mov
push
jecxz
sbb
jne
test
xor
or
repnz
sbb
xchg
inc
sar
roll
add
in
scas
out
adc
dec
sti
lahf
or
into
hlt
push
pop
mov
cli
into
xchg
int
inc
orl
fs
push
outsb
bound
inc
xchg
cmp
lahf
test
sub
add
and
sti
ret
mov
cmpsb
jbe
ss
sti
push
sbbb
pop
scas
push
mov
sbb
punpckhbw
sub
dec
les
push
jno
inc
leave
fisubl
sub
mov
xor
lret
cmp
inc
pushf
xchg
add
test
mov
pop
out
out
lcall
and
and
sahf
das
sub
pop
daa
sti
pop
lahf
cmc
scas
mov
faddp
test
ror
ds
sbb
add
into
stc
adc
sub
cwtl
or
mov
jp
int
gs
add
sbb
add
mov
cmpsl
movsb
rol
jne
mov
test
cwtl
nop
lds
std
cwtl
add
pop
or
daa
in
mov
cmpsb
xchg
loopne
mov
jg
adc
pop
xchg
repz
lret
addr16
or
push
push
not
adc
and
fxch
jge
pushf
push
cmp
outsb
in
mov
mov
sbb
movsl
dec
cmp
sbb
mov
jmp
js
xlat
sahf
rcrb
cld
jl
adc
test
aaa
push
loope
pop
shrb
aaa
dec
ret
mov
fcomi
mov
xchg
push
pop
mov
and
daa
sub
mov
je
in
xor
push
sub
jns
cmc
call
fwait
cmpsl
outsb
inc
adc
mov
out
mov
add
and
xchg
sbb
xor
xorb
xchg
popf
dec
ja
out
aam
int3
sub
jle
movsl
push
xchg
jmp
adc
pop
rcr
cmp
push
adc
in
inc
in
ss
std
mov
xlat
filds
cmp
push
xor
clc
pop
pop
daa
push
ret
sub
popa
clc
pop
xlat
cmp
scas
sbb
push
call
adc
mov
sbb
ret
adc
inc
adc
inc
sahf
dec
cwtl
sbb
inc
testb
subl
fimull
xor
jle
mov
push
inc
jnp
movsb
push
cltd
shlb
dec
jbe
minps
mov
lcall
push
xor
push
sub
lock
cwtl
fimuls
jne
cmp
out
aaa
pop
inc
cmp
adc
fwait
jge
inc
das
mul
dec
push
mov
sbb
inc
lret
fsubrl
and
add
jecxz
xchg
scas
fcoml
inc
push
dec
movsb
jnp
in
inc
roll
xchg
mov
out
mov
and
fimull
dec
shrl
add
sub
outsb
outsb
ret
mov
mov
lds
inc
dec
cmpsb
data16
in
scas
push
decl
lock
mov
sub
xchg
enter
subb
dec
inc
and
cmpb
andb
sub
adc
movsl
jb
sub
loope
mov
sub
movsb
adc
cwtl
or
jns
mov
mov
loop
in
int3
ficomps
sbb
aas
mov
mov
xchg
stc
pop
cmpsb
jp
js
pop
das
jl
sti
xor
jb
sub
clc
mov
sub
add
aam
mov
jne
cmp
mov
jno
nop
icebp
push
pop
loop
js
sub
cmpsl
push
xor
sarl
lods
cmc
push
cmpsb
rdtsc
sub
fldcw
popf
adc
pop
dec
xchg
das
dec
and
add
dec
add
and
add
jne
push
std
fiaddl
push
dec
jg
push
int
dec
mov
inc
mov
cli
jp
aad
add
add
gs
pop
cmpsl
std
test
push
xor
dec
sub
clc
out
push
and
mov
into
sbb
fidivs
in
lea
hlt
mov
stos
sbb
inc
pop
frstor
push
in
xlat
dec
push
andb
xor
push
pop
jecxz
or
test
cli
insb
push
add
pop
cmp
sub
cmp
sbb
add
test
pop
sarb
dec
mov
add
aam
pop
sub
es
pusha
std
repnz
mov
outsl
pop
dec
lock
inc
cmp
dec
adc
sbb
fs
shrb
jo
enter
pop
outsb
outsl
dec
fimull
mov
inc
movsl
fcoms
or
rorl
pop
cmc
mov
xchg
movsl
out
test
test
sbb
push
movsl
xchg
mov
js
and
nop
pop
in
dec
dec
xor
aaa
adc
ss
roll
rolb
push
push
pop
mov
add
jne
mov
sbb
xchg
addr16
sarl
imul
xchg
mov
mov
stos
push
adc
in
jns
mov
imul
inc
leave
fistpll
mov
mov
test
xchg
adc
shrb
aad
mov
out
addr16
clc
add
arpl
loop
fldl
jnp
fsub
sbb
in
push
pop
mov
mov
mov
mov
shrb
mov
arpl
mov
testb
push
lods
inc
dec
cmp
aaa
gs
les
push
and
dec
inc
xor
jecxz
icebp
pop
nop
adc
popf
into
lds
test
cltd
in
insl
inc
jg
inc
mov
shlb
dec
adc
lock
xchg
push
ss
lret
in
xor
xchg
jbe
ja
inc
or
jge
in
ds
and
dec
sbb
aam
ja
aaa
and
push
cmp
cmp
mov
dec
outsb
movsb
adc
sub
and
aaa
lods
sub
push
es
ds
enter
jg
popf
lret
fwait
cltd
leave
cltd
jmp
xor
pop
scas
lods
adc
test
lahf
insl
mov
shll
pop
in
stos
mov
imul
inc
push
dec
and
rorb
jl
stc
xor
das
sub
or
cmovne
push
xchg
clc
ja
and
call
popf
cmp
in
jne
jl
enter
jns
xchg
into
mull
sbb
enter
maskmovq
idivl
mov
bound
mov
cmp
xor
xchg
leave
jb
adc
cmp
das
sub
dec
inc
ds
jmp
inc
das
and
xchg
into
adc
sbb
adc
xor
jbe
cmc
cmpsl
jbe
cli
jne
cwtl
pop
fadds
mov
imul
sub
imul
jo
addr16
xorl
jle
xor
aad
aas
cmp
xchg
inc
xchg
das
sbb
inc
xchg
lcall
push
pop
inc
loope
ja
arpl
mov
or
or
shrl
jecxz
or
aam
mov
cmp
mov
xor
jo
iret
in
xor
imul
dec
mov
sarb
mov
sbb
das
insb
and
ret
pop
jae
test
outsl
fcoml
mov
push
jmp
xchg
fs
jb
lret
and
mov
into
sbb
xor
push
xchg
pop
push
push
fimuls
ja
mov
scas
and
das
jmp
xchg
dec
scas
xchg
lock
pop
je
out
sub
or
pop
mov
in
and
sti
popa
mov
gs
fwait
mov
pop
xchg
xchg
or
gs
jmp
pusha
test
and
mov
mov
sbb
cmpsb
and
pop
jmp
jle
and
sub
imul
fidivrs
gs
adc
ljmp
xchg
rclb
push
flds
pop
fdivr
addr16
jb
or
push
lahf
dec
xchg
xchg
test
incl
in
popa
push
pop
ss
pop
mov
sbb
or
sbb
fisubl
mov
sti
or
out
xlat
xor
jge
ret
sub
pop
pop
pop
test
mov
jbe
jo
adc
and
xchg
mov
out
ret
xor
mov
mov
mov
and
xchg
push
dec
sbb
adc
fs
int
xor
lcall
push
lods
dec
fucomip
divb
scas
fists
cmp
cmp
xor
ds
je
sti
mov
fdivrs
data16
xor
add
inc
mov
dec
xchg
jne
fistpl
jb
mov
and
jne
mov
fucomp
pop
push
lret
xor
lret
inc
mov
idivl
mov
mov
jl
roll
insb
cmpsl
dec
cmpsb
jg
das
roll
lods
outsb
mov
mov
xlat
sar
xchg
call
test
sub
pop
pop
or
inc
sarl
cmpsb
add
xor
mov
sahf
push
inc
pop
mov
dec
jbe
sti
and
inc
push
push
mov
or
mov
nop
in
push
dec
orl
lea
lcall
enter
push
mov
jns
scas
inc
mov
mov
iret
js
movsb
popf
adc
data16
sahf
pop
mov
repnz
stc
bound
xchg
push
inc
jbe
inc
test
cmp
adc
cmp
das
nop
sbb
cmp
and
add
adc
cmp
push
cmp
leave
fld
mov
dec
jnp
dec
lret
and
pop
mov
inc
jmp
into
fistl
add
out
popa
pop
mov
cs
fnstcw
cwtl
and
aam
rclb
test
lcall
jmp
or
jge
imul
mov
mov
std
mov
and
mov
stos
and
dec
mov
xor
dec
popf
mov
loope
mov
jb
jnp
sub
pop
pop
aaa
out
jg
movsb
in
pop
outsl
cmp
mov
in
cmpsb
sub
std
add
imulb
jl
ret
into
and
push
push
jmp
or
push
xor
fabs
mov
pushf
andl
repz
ret
dec
push
pop
cmp
mov
adc
andl
xor
aad
xchg
movsl
dec
cltd
popl
aam
test
xor
je
or
gs
jbe
call
clc
sbb
pop
stc
mov
inc
jns
sub
jp
push
jg
inc
ret
mov
pop
and
mov
test
test
jmp
adc
lret
cld
lret
adc
lea
inc
mov
je
out
mov
pop
test
lret
pop
scas
aas
loop
test
jge
ret
pushf
jnp
punpckhdq
mov
mov
mov
push
outsb
arpl
aam
lea
jo
ss
rcll
lock
mov
inc
or
adc
shrb
adc
mov
jmp
xor
and
sbb
aam
test
push
aas
outsl
je
push
decb
or
fmull
test
mov
mov
sahf
lods
mov
cmc
xchg
addr16
imul
cs
dec
cmp
sub
shlb
pop
hlt
and
push
pop
insb
dec
adc
dec
lret
adc
aas
jp
pop
test
mov
arpl
pop
inc
gs
data16
mov
push
fbld
mov
xchg
inc
push
lret
imul
sub
jnp
cmp
cli
fwait
xor
jl
push
aas
fxch
js
clts
imull
int3
mov
inc
lcall
stos
xchg
jbe
jae
mov
mov
sbb
mov
mov
les
adc
pop
in
pop
and
ret
fcmovu
lea
imull
daa
add
adcl
mov
enter
shrb
add
pop
sarb
add
sbbb
enter
lds
cs
mov
mov
movl
mov
adc
jbe
inc
mov
pop
xchg
push
push
shlb
mov
mov
fcompl
or
leave
cmp
lods
mov
dec
test
scas
icebp
bound
and
pop
and
add
out
into
arpl
add
mov
mov
dec
mov
push
and
cmc
xchg
loop
in
push
mov
test
test
testb
ljmp
jge
and
dec
xchg
ss
add
push
adc
mov
xchg
inc
scas
lcall
mov
xchg
fs
xlat
jne
jmp
xchg
cmp
rcrb
fldenv
or
pusha
mov
dec
lret
cltd
and
cmc
outsb
out
xor
mov
jge
push
xor
imul
rorl
lods
cmp
pop
sub
scas
add
inc
jbe
add
xchg
fs
sub
xor
aaa
cmp
cmp
movsl
push
mov
into
jo
add
sbb
ret
movb
jle
iret
jmp
stc
xchg
or
rcll
jnp
push
adc
outsl
jb
out
mov
add
mov
loope
mov
add
mov
test
dec
shl
mov
jae
jnp
dec
daa
mov
push
fs
fdivs
ljmp
fwait
fwait
in
fstl
jmp
pop
nop
frstor
aaa
stos
sub
inc
sbbl
cwtl
es
int
inc
mov
lock
mov
aad
push
movswl
arpl
mov
in
ljmp
pop
mov
dec
daa
jle
cmpsb
xlat
nop
jne
xor
dec
mov
shlb
xchg
out
and
aad
clc
ret
lock
add
cmpsl
call
mull
fistpll
dec
in
inc
sub
xchg
imul
mov
sbb
sub
daa
scas
lret
or
dec
mov
and
in
jge
aad
sarb
mov
cmp
mov
mov
dec
addr16
jg
test
sbb
or
out
adc
int3
xor
mov
and
fwait
shll
sbb
fwait
push
dec
into
mov
inc
push
insb
add
cmp
in
mov
mov
inc
fsubrs
sub
add
into
inc
shlb
std
arpl
cwtl
je
sub
fists
sahf
xchg
fcomps
and
jge
pop
dec
imul
movsb
loop
out
aad
mov
jle
aas
dec
faddl
jno
in
lret
mov
adc
icebp
jno
nop
jle
dec
push
mov
lcall
dec
jmp
pop
imul
inc
lods
loopne
inc
enter
mov
pop
je
push
pop
add
mov
icebp
hlt
iret
xchg
mov
or
cmp
add
sub
mov
adc
xor
adc
sub
push
lds
jle
push
notb
into
out
gs
sub
pusha
in
addr16
inc
push
adc
mov
push
js
loope
push
sti
mov
cmp
push
sub
fsubrs
js
dec
int
push
ja
xchg
sbbb
xchg
mov
mov
stos
stc
bound
mov
jl
sbb
adc
xchg
xchg
mov
shll
test
adc
inc
push
push
mov
xchg
test
add
pop
lahf
daa
out
ds
mov
mov
adc
das
sub
pop
xor
shrb
mov
push
lret
push
jns
mov
pop
fwait
test
mov
mul
mov
stc
push
and
test
cltd
int3
insb
mov
imul
adc
aad
xor
mov
or
sub
loop
add
inc
sbb
jno
fwait
in
aam
lahf
jecxz,pt
test
loope
mov
and
dec
cmpsl
prefetcht1
push
pusha
push
lahf
jno
mov
mov
cwtl
je
inc
push
pusha
stc
loop
lcall
push
movb
data16
adc
dec
cmp
fiadds
movsl
arpl
push
cwtl
push
sub
in
lcall
and
arpl
or
mov
out
pop
arpl
pop
das
push
rcrl
adc
xchg
and
shll
inc
movsl
inc
jns
push
push
lcall
and
sbb
cmp
outsl
add
es
jae
pusha
mov
cs
mov
push
cmp
inc
mov
or
pop
and
test
loope
push
dec
dec
xchg
sbbb
xor
insb
hlt
add
out
fldt
arpl
push
aad
or
mov
adc
stc
jns
dec
cltd
bound
push
sub
dec
mov
mov
cmp
aam
incl
ja
pop
js
out
and
xor
ja
loopne
sub
movsb
add
loop
sub
or
adc
in
lods
addr16
cmpsl
inc
leave
dec
popf
jns
xchg
push
das
pop
rorb
jnp
lret
or
push
add
pusha
ss
scas
dec
pushf
pop
hlt
sub
push
pop
fimuls
mov
pop
cwtl
mov
int3
pop
out
add
hlt
mov
leave
mov
lret
lds
and
ja
ret
scas
lahf
mov
mov
movsl
aam
xchg
bnd
shl
lds
cmp
outsl
or
mov
aad
dec
cli
shll
dec
or
mov
aas
pop
dec
insl
in
ds
mov
in
sbb
int
negl
add
negb
jbe
jne
jge
fimull
movsb
cmp
push
mov
das
lock
or
push
test
add
xchg
push
ja
mov
shr
js
sarl
inc
or
inc
jo
jmp
sub
add
push
rol
and
cmp
mov
push
outsb
mov
push
lock
sub
jb
in
cmpsl
or
mov
xchg
or
sub
aas
cs
cld
loopne
jmp
cld
fcmove
xor
cmp
pop
mov
fstps
fs
mov
repnz
les
arpl
mov
clc
mov
bound
je
push
mov
les
jae
pushl
pop
and
mov
sub
test
add
add
jmp
outsl
mov
in
rol
adc
into
dec
push
jl
mov
sbb
pop
sar
and
fadds
outsb
push
xlat
std
nop
cmp
mov
in
pusha
pop
sbb
xor
jg
test
cld
push
xor
leave
sub
sbb
clc
ja
push
xchg
cmp
out
pushf
mov
jl
out
scas
dec
sub
and
pushf
jl
cltd
sarb
jae
shll
push
ret
test
mov
cmc
push
shrb
mov
mov
repnz
ja
test
sbb
inc
xchg
iret
sbb
or
push
outsl
fdivrp
dec
dec
sub
ss
pop
ss
aas
push
adc
add
xor
push
dec
cmp
nop
decb
sti
dec
es
xor
and
cmpsb
jecxz
or
lea
jge
dec
and
push
mov
shrl
xor
mov
sbb
cmp
mov
enter
mov
pop
lods
xchg
aam
mov
inc
insl
and
shr
xchg
mov
mov
push
sbb
into
repz
pop
xchg
shrb
xchg
ljmp
sahf
fidivl
imul
mov
lret
movsb
je
int
cli
decb
fwait
cmp
jbe
xor
lds
pop
imulb
int
sbb
cmp
jle
adc
in
mov
rcrl
jne
pop
pop
jns
jnp
add
xchg
sarl
adc
mov
and
insl
fidivl
out
mov
jmp
pop
cmp
mov
mov
inc
mov
push
lret
popa
or
pop
cmc
movsb
push
sub
jnp
xor
mov
jae
jnp
loopne
dec
test
test
pop
aaa
iret
lret
fs
pop
and
aas
imul
mov
cli
fnsave
fs
popa
sahf
mov
sahf
jno
loop
clc
cmp
int
loope
sahf
stos
sub
fildl
push
lock
shlb
test
push
xor
xchg
fs
adc
add
test
cmp
push
xchg
loopne
or
adc
call
push
sbb
repnz
sbb
enter
aas
mov
xorl
sbb
or
push
add
je
dec
mov
mov
sbb
xchg
cmp
inc
push
roll
div
pop
sub
mov
xor
jl
lcall
int3
stc
jmp
dec
cmp
lcall
hlt
sbb
pop
leave
lds
push
dec
xorl
xlat
mov
sub
cmc
sbb
cwtl
pop
push
lret
push
inc
or
aas
add
xorl
repz
lret
fisttpll
jne
in
push
loope
inc
jbe
xchg
mov
inc
cmc
adc
daa
dec
mov
cmp
aad
or
enter
nop
jle
addr16
lea
sbb
mov
lods
mov
mov
cmp
jbe
loopne
jle
cmc
xchg
pop
mov
xor
push
arpl
neg
mov
lds
jns
lcall
mov
push
test
gs
or
xor
pop
int3
dec
bound
into
pop
lock
fcmovbe
mov
push
into
xchg
inc
arpl
jbe
inc
cld
loope
pop
mov
leave
sahf
dec
inc
daa
or
jmp
and
insb
push
rorb
test
adc
rorl
and
xchg
inc
mov
cmp
cli
and
mov
out
fsubr
sti
inc
lds
test
nop
fidivs
sub
leave
inc
out
mov
sbb
adc
pop
iret
mov
adc
jbe
or
fisubrs
fsts
jg
hlt
scas
aam
fldl
dec
mov
and
dec
dec
pop
and
clc
in
je
jnp
adc
fs
imul
popl
xor
cltd
mov
cmp
aaa
adc
outsl
mov
adc
push
es
fstpt
bound
mov
push
xchg
inc
sti
ljmp
lods
and
and
rcrb
push
cmpsb
pop
mov
ret
cmp
out
in
push
imul
rcrl
xchg
jge
lret
pop
and
sub
mov
pop
dec
scas
gs
inc
das
pop
testl
mov
dec
in
fwait
test
mov
add
hlt
dec
push
sbb
insb
shrl
push
ss
mov
loopne
outsl
into
loope
dec
ja
adc
cmpsl
mov
cmp
into
dec
pop
pop
fwait
and
push
and
pop
inc
mov
ficoml
roll
pop
in
aad
jbe
je
sahf
mov
outsb
cmpsb
and
aaa
lcallw
push
mov
add
or
or
andb
sbb
jns
and
repnz
pop
mov
leave
leave
or
fildll
jl
fs
pusha
push
xor
stos
out
imul
sahf
fnstsw
xor
icebp
lds
sti
push
cltd
add
add
pop
mov
popa
cmpsb
push
adc
sbb
sbb
inc
mov
pusha
imul
nop
or
jmp
movsl
mov
cmp
push
hlt
or
std
es
std
fsubrs
add
xlat
or
adc
jecxz
mov
xor
stos
aaa
xor
add
add
inc
ljmp
xor
popa
push
add
sub
mov
fcmovbe
notb
jle
xchg
dec
dec
sarb
insb
mov
cmp
int3
mov
push
xlat
xlat
inc
dec
lcall
push
sarb
jnp
add
sti
fsubp
xchg
jl
xor
inc
adc
fs
out
pop
inc
xchg
in
xor
lock
mov
mov
xchg
inc
es
lcall
inc
xorl
cmp
adc
pop
or
mov
xor
push
aaa
push
bound
xor
enter
push
daa
cwtl
pop
xlat
stc
pop
jo
iret
add
cmc
lock
fnsave
sbb
jle
mov
les
fs
adc
push
adc
jge
xchg
inc
mov
sbb
ds
roll
lods
jg
into
add
push
xor
lret
cmp
pop
jle
push
into
stc
push
repz
stos
sbb
lods
imul
xlat
into
and
push
xor
es
insb
adc
test
arpl
dec
jmp
fdivp
std
mov
scas
std
and
pusha
sbb
fmull
nop
pop
jmp
aaa
push
ror
fistpl
xor
fld
xor
test
inc
jle
divl
ficoml
mov
mov
mov
fbld
mov
fchs
and
popa
loopne
dec
push
jl
mov
scas
mov
xor
hlt
adcl
cltd
lods
xchg
call
iret
and
bound
insb
jg
iret
push
or
cli
ret
lock
push
cmp
ljmp
or
scas
push
xchg
lods
add
xchg
sahf
and
push
or
into
shll
dec
out
insb
xchg
les
je
js
and
jl
test
inc
popa
adc
inc
testb
les
repnz
cmp
je
sub
push
cmpsl
sub
jecxz
add
mov
push
std
iret
aam
popa
popf
ljmp
rorl
mov
inc
xor
lods
mov
inc
in
inc
mov
add
into
xchg
or
fidivrl
js
or
push
imull
push
pusha
out
sbb
cltd
dec
loop
mov
es
sub
and
pop
pop
out
loop
fdivrp
cmp
jnp
enter
shrb
sub
ja
mov
xchg
scas
sbb
ljmp
mov
dec
add
nop
mov
jle
repnz
movsb
lods
dec
mov
dec
push
ret
inc
pusha
mov
push
dec
rcr
fimull
cmp
ror
sub
rclb
xchg
fs
inc
mov
fisubs
mov
adc
jbe
pop
movsw
adc
mov
jno
jno
mov
sub
jns
in
out
xor
cmc
dec
pop
mov
sti
pop
lods
outsl
sbb
inc
add
stc
cmp
clc
and
dec
mov
fisubl
dec
dec
and
mov
lret
inc
sti
rcl
aam
in
sahf
mov
sub
dec
jnp
pusha
cs
hlt
imul
xor
ret
test
sbb
sbb
or
loope
inc
add
popf
sti
pop
addb
mov
dec
fs
or
testb
push
arpl
inc
push
inc
std
testl
push
push
mov
mov
sub
jo
test
mov
dec
and
cs
and
inc
xor
xor
shll
and
call
mov
inc
pop
das
jle
sub
xor
cltd
sarl
fstpl
cmc
iret
mov
std
mov
repnz
sub
dec
mov
sub
data16
orl
shl
adc
pop
mov
cmp
jno
loopne
je
xlat
inc
pop
add
lea
dec
add
and
fwait
int3
sbb
cmp
sti
pop
stos
fbld
xlat
testb
pop
cmpsb
mov
jne
mov
cmp
flds
addb
fsubrp
inc
out
xchg
test
xchg
insb
xchg
fcmovbe
inc
arpl
fstl
pop
bound
adc
sbb
mov
fstpt
mov
test
inc
or
mov
outsb
add
xor
imul
adc
jnp
lods
mov
scas
pop
test
and
pop
jle
mov
push
xchg
pop
inc
mov
enter
xlat
inc
xorb
mov
into
shlb
push
or
add
stc
hlt
mov
in
and
dec
sbbb
test
gs
lahf
scas
or
or
jecxz
popa
adc
or
pop
add
aaa
and
or
push
xchg
arpl
inc
jae
data16
lcall
and
inc
hlt
cmp
and
mov
inc
shlb
xchg
adc
jnp
sub
mov
push
aas
jge
clc
aam
lods
in
jecxz
jnp
aaa
lcall
cmp
insl
aas
stos
movsl
mov
and
popf
flds
dec
jg
add
adc
xchg
or
out
mov
xchg
fcoms
fsubrs
loopne
mov
sbb
xor
xor
out
mov
mov
dec
mov
cmp
lds
arpl
lds
adc
shlb
mov
or
ficomps
xor
movsb
loop
add
cmp
test
xor
dec
adc
cli
loope
cld
test
in
push
sub
adc
mov
jae
out
insb
cmp
stos
pushf
call
jle
mov
push
jno
adc
xor
cmc
xor
push
negb
and
ljmp
push
in
pop
dec
jmp
mov
pop
xor
inc
data16
in
dec
pop
test
addr16
inc
rcll
cmp
sub
call
sti
testb
sub
jle
cli
sti
hlt
cmp
xor
cltd
dec
sar
es
xor
inc
inc
or
sub
mov
inc
test
fcmovnbe
int
andl
mov
xor
inc
inc
adcl
inc
or
call
ret
add
bound
into
mov
mov
mov
push
xor
outsl
inc
dec
loope
mov
popf
iret
gs
cmp
pop
or
xor
fmull
mov
xor
add
push
test
pop
out
in
adc
pop
lret
inc
or
pop
lret
mov
pop
add
jle
ret
xor
adc
pop
adc
loopne
lret
test
jmp
mov
sub
xchg
imul
and
and
fdivs
pop
add
movsl
mov
pop
add
pop
lcall
addr16
inc
mov
pop
mov
sbb
dec
or
ljmp
test
mov
dec
inc
int
mov
cmp
xlat
pop
inc
mov
in
test
in
and
imul
xchg
fnstenv
sbb
sbb
loope
leave
xchg
pop
fistl
and
mov
jmp
imul
mov
les
loopne
sahf
fnstenv
mov
xor
add
push
loopne
add
cld
fsts
cmc
pop
std
cld
ss
jne
out
lret
and
dec
push
sbb
inc
and
rcll
push
or
dec
jbe
insl
cmpsl
out
add
lahf
jl
sbb
sbb
lds
mov
lds
das
sub
push
mov
adc
adc
xchg
xor
cltd
rcrl
inc
orl
repz
jl
adc
add
rep
fmull
repz
add
ret
xor
mov
fcompl
outsb
lcall
lds
xchg
pop
mov
ja
pop
call
inc
add
push
and
xchg
push
lcall
jns
imull
imul
ret
stos
push
insb
pop
xor
repnz
push
and
sub
jmp
in
sarl
push
xchg
repnz
fcoms
and
stos
lods
pop
push
inc
int3
int3
pusha
aaa
mov
inc
das
and
sub
sbb
push
push
xchg
lahf
sbb
cwtl
cmp
les
sbb
imul
jbe
adc
lods
sahf
sub
fsubl
into
dec
mov
nop
add
mov
outsl
mov
idivl
sbb
js
push
sub
cmp
xor
xor
jecxz
jno
fucomi
movsb
push
or
cmpsb
dec
xor
mov
xor
test
loopne
notl
and
mov
lds
sbb
pop
fwait
nop
loop
ljmp
inc
mov
test
jge
mov
fsubrs
out
sbbl
lret
sub
repnz
test
push
andb
xchg
push
ds
data16
sbb
fimull
xlat
movsl
in
adc
add
lods
xor
cmp
daa
lahf
push
cmp
push
lret
push
sbb
int
pop
cld
lods
cmp
movsl
jo
jae
mov
push
push
rorl
add
in
pop
idivl
icebp
jl
and
ret
into
inc
xor
shlb
inc
push
sub
clc
jmp
push
lock
pop
clc
int
rorb
faddl
adc
xchg
movsb
jg
test
xchg
into
aad
xchg
jns
jb
pop
rclb
outsl
jb
or
xchg
mov
cmp
insb
push
jb
push
out
in
xchg
lcall
movsb
and
xor
mov
jmp
stc
pushf
outsb
out
pop
fcompl
xchg
xchg
ret
test
sbb
push
negb
pop
scas
lret
lret
push
push
es
and
dec
dec
cltd
mov
jg
ret
add
repnz
jp
adc
jg
inc
loope
adc
push
rolb
and
loope
arpl
push
mov
mov
popa
imul
push
ret
cmc
fisttpll
aam
dec
fdivrs
inc
xor
and
sbbb
jne
out
aas
mov
cmp
push
and
cmp
xchg
mov
push
jne
push
negl
mov
dec
sub
xchg
cmp
push
mov
in
aaa
pop
jle
mov
cmp
mov
sbb
jecxz
fwait
mov
cmp
xchg
pusha
ret
or
lahf
push
inc
or
repz
jle
fstpl
cltd
lret
pop
lods
in
sahf
in
enter
in
mov
ja
jecxz
js
ja
pop
or
ds
stc
leave
dec
mov
add
in
fidivs
fwait
jne
cwtl
ds
xor
push
push
adc
int
fisubrl
push
mov
dec
bound
sbb
jne
adc
mov
aad
es
fs
fisubs
inc
xchg
dec
inc
sub
dec
cmp
mov
pop
pop
adc
ljmp
pop
and
imul
in
jns
mov
mov
ja
xchg
out
js
jp
lahf
inc
jg
adc
repz
and
xchg
mov
int
in
jns
mov
data16
mov
in
mov
fimuls
scas
lcall
pop
mov
ret
inc
inc
xor
in
aam
pop
aas
pop
xchg
clc
insb
mov
xor
js
push
mov
mov
rol
pop
add
into
sti
mov
mov
fdivs
mov
fmul
mov
enter
sbb
inc
or
fstpl
lret
mov
sub
push
insb
outsb
fdivl
out
das
push
sbb
movsl
mov
inc
out
jo
pushf
je
add
popf
adc
out
leave
int3
das
stos
mov
pop
dec
push
test
sub
inc
mov
fistpl
mov
xor
sbb
jp
insb
in
push
push
fmul
loopne
mov
stc
orl
scas
jecxz
stc
dec
imul
push
int3
mov
mov
cwtl
imulb
lret
adc
daa
iret
cmc
mov
leave
xchg
sub
mov
icebp
iret
fimull
mov
jecxz
or
inc
or
add
sti
jge
cmpsl
cmp
pusha
xchg
pop
aad
sub
xchg
out
pop
out
psubb
movsl
xor
jnp
and
stos
lret
loope
mov
mov
sahf
in
add
mov
mov
cmpsb
js
fld
femms
fcoml
pop
mov
jecxz
lock
xor
lods
cmp
adc
lret
lret
and
mov
jne
out
lret
sub
leave
push
pop
mov
addr16
jle
push
cld
inc
mov
cld
outsl
mov
and
andl
repz
xor
push
imul
pusha
cmp
insb
xor
mov
data16
jp
sub
jae
mov
push
negb
rcl
fadds
sar
jns
lcall
mov
adc
call
xchg
mov
data16
lcall
or
mov
cmp
aaa
scas
insb
lahf
xor
xchg
sbb
jp
jno
pushf
in
jle
mov
mov
aaa
pusha
push
div
cmp
xchg
movsb
cmp
ret
mov
cmpsb
shl
mov
mov
mov
cwtd
pop
sarb
xchg
push
inc
outsb
dec
push
sarb
xchg
fisttpll
mov
mov
sbb
pop
mull
lods
aad
mov
lock
icebp
sbb
dec
mov
jno
popa
mov
mov
or
jg
jnp
loop
faddp
jae
and
push
lea
xor
pusha
stos
call
dec
sbb
shll
sub
int3
ret
nop
and
inc
fisttps
pusha
cmp
sbb
insb
xchg
in
and
fdivl
and
lods
dec
adc
bound
movsb
or
sbb
push
mov
pop
aad
jbe
cld
lods
in
sub
push
xor
push
mov
scas
std
ds
js
jae
inc
dec
fisttpll
sub
lea
mov
add
jno
inc
pop
push
stc
addr16
xlat
mov
movsb
pop
or
sbb
dec
dec
xor
fwait
pop
js
ljmp
jb,pt
mov
call
xchg
loopne
insl
repnz
mov
les
mov
ficompl
stos
push
adc
loope
jb
jmp
fsubs
loop
adc
in
sub
or
ja
push
icebp
test
sbb
dec
inc
in
pop
mov
cmpsl
add
jo
ret
addb
test
aam
lret
push
shrb
push
lret
es
fwait
inc
mov
nop
xor
lcall
sbb
xor
and
bound
jp
add
adc
or
sbb
jg
push
sarb
mov
jno
xchg
lahf
imul
mov
xchg
jo
cmpsb
inc
nop
dec
sub
push
pop
roll
in
and
movsl
lods
popf
xchg
jo
cmpsl
lock
cmp
or
lahf
std
flds
cwtl
cwtl
and
rcl
cwtl
jl
adc
xlat
adc
lahf
lock
lods
aas
in
mov
out
fists
jno
xchg
xor
push
nop
mov
or
push
pop
or
dec
xchg
lock
or
sub
inc
pop
das
leave
cmpsl
lret
rolb
mov
sbb
idivb
rcll
shr
or
sbb
add
pop
and
xor
imul
stc
pushf
cmp
add
iret
cmp
inc
mov
mov
add
rcr
push
aad
rolb
pop
leave
jl
xlat
jae
sti
sbb
xchg
jnp
ror
subb
and
dec
jl
adc
or
std
aam
cmp
sbb
jae
mov
sub
jge
into
scas
shlb
inc
fs
jecxz
fwait
dec
mov
mov
mov
add
mov
imul
jle
adc
or
dec
loopne
jl
or
jle
xchg
aad
enter
es
adc
lret
scas
fyl2xp1
mov
es
sub
jmp
rcrl
imul
aas
jp
dec
and
adc
out
jl
jnp
cmc
or
fisubrl
sbb
xchg
in
and
push
cmc
sub
push
mov
mov
inc
jg
cmp
add
nop
xchg
sbb
pop
dec
and
rcrl
call
inc
xorl
lods
mov
jmp
add
into
mull
roll
addr16
test
mov
test
pop
dec
jp
stos
inc
jno
jne
aas
dec
add
push
rclb
rorl
std
lods
inc
fwait
mov
dec
loopw
cmp
or
and
pop
out
cmpb
aas
mov
shll
xor
ja
mov
stos
push
fisttpll
mov
xchg
aad
sub
xchg
daa
sahf
jne
loope
loop
adc
shll
xchg
push
and
addr16
xchg
push
sbb
sub
sbb
stos
shlb
xlat
mov
sahf
call
ret
filds
pop
insb
lcall
mov
clc
jecxz,pn
mov
in
enter
add
dec
xor
fwait
push
fisubrs
cmp
pop
mov
add
and
test
shrb
lahf
jmp
mov
pusha
leave
arpl
inc
xor
sti
adcb
mov
cmp
gs
pusha
jl
sbb
pop
xchg
lcall
xor
mov
js
push
aam
push
lcall
jnp
push
xorb
mov
jg
jno
push
hlt
jl
push
sarb
clc
mov
popf
dec
rorl
movsb
cmp
fcom
xchg
clc
mov
push
fmuls
hlt
test
lods
sbb
jle
add
xor
or
mov
lods
dec
xchg
mov
imul
sub
sub
xor
in
cmpsl
stos
xchg
sub
push
inc
mov
sti
push
fwait
adc
mov
ljmp
push
inc
aaa
sbb
cmp
mov
cmp
fisubs
loopne
sub
xchg
or
push
pop
sub
enter
mov
lret
xchg
ja
mov
aas
mov
cmp
int
aaa
sub
xchg
lds
loope
mov
int
mov
repnz
sbb
sbb
xchg
jecxz
lahf
dec
sbbl
mov
cmpsl
bound
shl
aaa
sahf
lods
enter
fmuls
jge
test
arpl
sbb
mov
add
or
adc
and
mov
fwait
rorl
orl
je
lods
inc
iret
jb
out
and
loope
or
xorl
cmpsl
inc
mov
cmpsb
loope
push
pusha
inc
jle
push
into
xor
xchg
mov
sahf
inc
or
add
jl
dec
icebp
ja
cmp
adc
pop
dec
fs
and
mov
pop
lahf
in
test
inc
and
pop
jle
and
aas
xor
xor
xor
mov
or
fdivl
in
rol
adc
arpl
rcrl
inc
sarb
push
div
mov
daa
xchg
pusha
jne
inc
ret
sbb
subb
jns
cmpsb
mov
pop
jp
sub
sbb
adc
icebp
lret
mov
popf
push
dec
mov
aas
or
xchg
cmp
jmp
jbe
and
test
jno
pusha
movsb
rolb
stos
and
testb
icebp
cmp
push
or
dec
popa
push
in
sub
pop
push
mov
pop
sbb
adc
inc
mov
hlt
add
mov
cltd
push
repz
add
arpl
dec
pop
pop
jns
and
lock
mov
scas
test
push
adc
fs
daa
jecxz
adc
inc
je
sbb
andl
push
push
popa
jmp
aas
data16
mov
lods
and
loopne
and
dec
adc
cmp
push
out
call
repnz
orb
mov
xchg
xchg
or
dec
jmp
inc
cli
nop
sbb
stos
test
adc
jnp
adc
sub
add
or
xor
movsl
sbb
in
sub
shlb
sub
xchg
jo
and
mov
and
xor
mov
push
sahf
in
addr16
jge
insl
aad
jecxz
sti
in
les
xor
xchg
jecxz
popf
loop
and
adc
cmp
insb
xchg
push
pusha
and
cmp
sbb
push
ja
adc
or
daa
cmp
loop
out
cmp
dec
cmp
adc
roll
out
inc
test
inc
mov
push
mov
and
mov
pop
in
lahf
inc
lock
cmp
cmc
in
xor
push
jb
dec
jbe
lahf
fwait
mov
mov
dec
push
xor
adc
in
cli
imul
icebp
mov
shl
test
pop
aaa
aam
test
sti
jnp
dec
push
pop
sbb
jecxz
out
outsb
aad
mov
xor
test
or
sbb
pop
xor
scas
cs
sbb
aad
cmp
int3
sbb
cmp
jle
sub
popa
aad
mov
mov
adc
lock
fsub
orl
cld
add
mov
adc
jns
adc
xor
xor
add
mov
insb
adc
jno
lods
aad
and
in
idivb
jae
lds
pop
cmp
mov
dec
sub
ficompl
pop
lods
mov
inc
ss
arpl
jne
push
cmp
adc
in
bound
test
ret
insl
testb
mov
cmp
dec
or
fisubrl
adc
jge
cmp
fstps
dec
leave
push
pop
ss
dec
outsb
or
dec
xor
in
mov
in
sbb
mov
xor
loop
push
xlat
dec
lods
sub
popf
out
mov
fadd
popf
repnz
fmull
jl
aad
lcall
das
pop
cltd
orb
add
cmp
or
pushw
jp
out
pop
int
lods
or
dec
or
push
dec
mov
jle
daa
xor
sub
cmp
fwait
sbb
pusha
repz
jle
dec
loope
hlt
lret
enter
cmp
push
pop
sbb
cmp
js
sbb
mulb
iret
inc
mov
or
loope
cmpsl
aaa
adc
imul
shll
pop
mov
sbb
inc
mov
xor
xchg
pop
or
lret
pushf
lret
mov
or
hlt
pushf
xor
inc
imul
adc
jg
pop
and
lock
icebp
in
es
adcl
rorl
and
or
sahf
scas
mov
das
testl
stos
xor
and
sbb
dec
out
or
or
je
or
xchg
pushf
fs
or
enter
mov
ret
shll
mov
dec
pushf
loope
mov
iret
inc
push
xlat
inc
ret
fwait
ret
lock
lret
repnz
rorl
in
jb
xchg
lret
jo
xchg
xchg
dec
ljmp
mov
push
sti
ret
das
jae
rolb
jnp
push
out
mov
ret
mov
pop
nop
fstpl
or
movsb
xchg
fwait
sbb
mov
sarb
clc
in
adc
push
push
popa
inc
notb
lcall
jo
das
stc
iret
cmp
dec
das
jbe
bound
mov
mov
popf
shll
add
mov
je
out
ret
incl
sbbb
rcrl
jp
and
dec
push
xor
fs
xor
test
leave
fisubrl
xor
jns
jno
mov
ss
call
jns
mov
sbbb
aas
in
std
mov
imul
ds
hlt
mov
cld
sbb
adc
mov
xor
outsb
dec
int3
push
mov
es
in
inc
test
or
pop
inc
jnp
mov
test
addr16
or
lods
or
jmp
mov
push
cltd
pop
pop
and
popa
mov
or
fcmove
xor
xchg
pop
cmp
mov
lahf
and
xchg
lds
and
les
xchg
pop
lds
loope
test
jnp
mov
out
in
test
das
push
dec
popf
mov
xchg
inc
jge
mov
popf
push
into
pop
or
incb
mov
or
test
cmp
sbb
mov
push
test
test
jmp
mov
inc
das
test
sub
nop
popa
dec
xor
jge
push
fwait
insl
ds
mov
mov
fdivp
jns
inc
or
aam
mov
push
andl
stos
sub
jmp
ljmp
adc
cmp
andb
xor
les
jmp
pop
ret
xchg
or
es
mov
imul
jmp
xlat
es
push
ret
add
pop
repnz
mov
addr16
insl
dec
push
out
repz
adc
jecxz
sub
mov
test
jne
xchg
mov
fs
aam
xor
in
test
iret
stos
bound
or
add
push
into
push
jle
xchg
test
outsb
test
repnz
mov
outsb
cli
xor
sub
or
or
jmp
dec
and
pop
stos
mov
xor
repz
mov
sbb
push
mov
sub
sbb
jmp
xchg
fcomps
bound
or
and
jae
jae
lahf
push
iret
ja
pop
pop
xor
or
popa
mov
push
adc
mov
cli
or
loope
sbb
cmp
or
mov
xchg
pusha
gs
stos
sti
mov
call
out
mov
mov
xchg
pop
nop
in
pusha
data16
pop
cmp
sub
inc
out
sub
mov
fnsave
adc
imul
or
adc
pop
xor
test
pushf
xchg
idivb
or
pop
inc
lds
push
out
push
inc
xor
adc
sub
xorl
cmp
mov
jbe
cmp
push
mov
mov
loopne
sbb
popa
movsb
testb
pop
mov
mov
mov
outsl
les
int
cmp
and
adc
cmp
rorb
cmp
faddl
push
nop
aaa
pop
sbb
xchg
push
xchg
out
mov
cli
test
shl
inc
add
push
rolb
repz
dec
mov
adc
data16
and
add
xor
sub
mov
inc
jae
in
arpl
shrb
xchg
in
jno
sarb
xchg
lahf
and
pop
enter
mov
dec
xor
add
xchg
sbb
jns
cwtl
mov
imul
rclb
in
adc
das
out
lret
ss
mov
out
or
stos
arpl
cmp
pop
pop
hlt
leave
xchg
mov
cld
inc
das
fs
mov
mov
movsl
jl
inc
out
pop
mov
or
jge
xchg
mov
test
fisubs
xor
cmpsb
out
popf
fdivl
je
mov
mov
icebp
pop
mov
push
repz
xchg
sarb
mov
rorl
adc
insb
dec
mov
pop
inc
out
inc
sbb
xchg
or
sub
jge
pop
mov
hlt
nop
shr
sahf
lahf
arpl
xlat
lahf
out
push
xchg
orl
ret
mov
sub
fimuls
enter
xchg
clc
rolb
out
cmp
cwtl
in
mov
rcll
pop
movsl
cwtl
popf
daa
jp
frstor
fildll
stos
cs
xchg
fcomp
test
sub
add
cs
and
daa
mov
jnp
cltd
mov
leave
xchg
imul
fbld
and
pop
fistpl
out
inc
cmpsl
push
add
jnp
cmp
loopne
and
push
sub
add
fs
mov
and
hlt
les
push
enter
xor
fisubl
sbb
cmp
fs
cmp
push
aaa
gs
arpl
stos
or
jge
pop
imulb
mov
inc
inc
inc
shlb
or
fiadds
ss
jno
in
jae
push
les
add
int3
sbb
sbb
inc
xor
mov
daa
in
jo
inc
ja
adc
fstps
fldcw
loope
cld
pop
mov
xchg
iret
and
bnd
es
out
dec
je
xor
cwtl
xor
shrl
daa
mov
push
repz
pop
push
mov
repnz
ja
enter
dec
xor
xchg
mov
loop
or
pop
jmp
push
ret
in
out
push
nop
mov
lahf
and
inc
mov
sti
dec
pop
ds
mov
pop
mov
data16
mov
repnz
aam
stc
movsb
xor
add
pop
dec
fstpl
push
scas
xchg
js
inc
adc
xchg
add
sub
fnstsw
sbb
fimuls
aaa
dec
add
cmp
sbb
ud2
inc
push
inc
mov
adc
aam
xor
jnp
sub
lea
ja
xchg
pop
sbb
push
xor
xchg
bswap
pusha
repnz
iret
add
test
dec
dec
jle
jae
dec
xchg
stc
dec
and
movsl
sub
mov
pop
dec
es
mov
test
jae
ljmp
cmc
jbe
and
sahf
call
outsl
jbe
iret
pop
sarl
or
mov
jg
insl
pop
push
lds
cmp
subl
enter
out
pop
stos
jp
sub
repz
xchg
stos
addb
pusha
cmpsb
shl
fcoml
mov
cmp
subl
dec
inc
sub
js
push
loop
lret
lret
loope
ljmp
pop
mov
jno
ficomps
fnstsw
sub
in
aaa
sbbb
ja
xchg
repnz
movl
or
andl
test
push
add
cltd
jp
mov
bound
adc
add
adc
mov
lcall
int
inc
in
push
mov
sub
jp
inc
ds
and
mov
push
ss
push
iret
add
sub
inc
dec
inc
nop
inc
sub
scas
cli
adc
mov
outsl
into
add
inc
push
dec
push
in
shll
cmp
push
inc
jb
fcompl
xchg
push
mov
cli
test
outsl
xor
xchg
fdivrl
pop
bound
aam
or
inc
sbb
fstps
mov
dec
lods
es
test
inc
dec
cmc
pop
rcl
sub
or
pop
cmpsl
jmp
dec
jp
pop
or
movb
repz
icebp
sbb
daa
imul
mov
fiaddl
sti
xchg
dec
in
fcoml
pop
fstl
jp
lret
mov
mov
out
in
push
rcr
sub
das
mov
sti
repz
divb
cs
sub
out
xor
add
mov
pop
mull
jo
mov
push
adc
pop
pop
inc
ret
aad
lret
bound
shlb
xor
jg
push
xor
stos
shlb
add
mov
jmp
sub
mov
or
call
idivl
jecxz
imul
stos
adc
jnp
aad
clc
imul
jbe
dec
dec
add
pop
mov
out
aas
lret
test
fldcw
nop
push
das
test
cli
test
jnp
dec
sbb
pop
fs
fs
mov
shlb
mov
sub
movsl
xor
mov
repnz
daa
orb
jae
push
mov
orl
inc
lret
insl
and
fwait
jecxz
mov
cmp
cltd
lock
add
insb
cmp
sub
sarb
mov
jae
cmp
ljmp
xlat
enter
add
je
xlat
adc
and
gs
rol
mov
repz
jmp
lcall
mov
dec
andb
lcall
iret
dec
push
sahf
adcl
mov
les
and
leave
xor
add
xchg
cli
xchg
push
jae
divl
jecxz
sbb
out
pop
fcoms
mov
adc
lea
mov
cmp
dec
ficoms
mov
mov
int
sub
outsl
cwtl
mov
jp
inc
xchg
es
dec
xchg
fdivs
scas
mov
inc
enter
sub
les
sbb
sbb
xchg
jno
xor
dec
fwait
push
aaa
or
cmp
sahf
into
jae
into
shrl
and
in
pop
shll
pop
and
cmp
jae
data16
xor
pop
popa
loope
xor
inc
cltd
dec
xchg
daa
jae
and
fcomps
add
push
shrb
rcll
sub
lods
xor
imul
add
mov
adc
jne
sub
xor
pop
jge
sbb
mov
xchg
lcall
mov
sbb
lock
out
xor
sbb
setg
imul
in
mov
xor
sbb
iret
fisubrs
test
cmp
out
inc
test
and
idivl
add
ja
or
xorl
mov
mov
mov
hlt
and
sub
pop
jbe
int3
lret
fs
xchg
nop
inc
push
out
inc
cld
and
lds
testb
xchg
loopne
sub
iret
bound
xchg
mov
lods
sbb
sbb
iretw
cmc
xchg
or
add
mov
sbb
es
les
es
pushf
inc
cmp
or
and
or
lods
imul
jle
sbb
pop
loope
int3
mov
fs
adc
mov
call
fcmovne
fs
nop
pushf
mov
je
clc
popf
jmp
mov
dec
xor
jb
fistps
test
das
shlb
pop
and
andl
mov
xor
push
sub
mov
stos
ja
fs
orl
jae
nop
repz
nop
mov
adc
rcrl
scas
mov
bound
or
sub
lods
popa
sbb
addb
xor
cmp
dec
loop
test
add
add
inc
dec
jp
cmp
addr16
std
inc
cli
sbb
jbe
pop
jge
ss
lahf
ret
pop
cmp
fs
sarl
inc
mov
fwait
dec
and
mov
mov
fsts
ficomps
lea
cs
mull
dec
outsl
sub
lea
xchg
jg
or
jmp
cmp
push
fdivr
adc
add
ds
out
mov
mov
cmc
cltd
push
mov
inc
xchg
or
lock
xor
scas
dec
add
sbb
or
cmp
into
lods
andb
enter
cmpsb
bound
lea
ss
fmull
add
or
push
lret
ficoms
adc
int
mulb
mov
pop
gs
daa
popf
and
push
add
pop
xchg
out
scas
sti
mov
jmp
dec
out
dec
xchg
stc
and
xor
and
pop
jae
adc
out
cmp
push
and
add
and
arpl
mov
ficoms
and
jno
mov
xchg
jns
fnsave
xchg
fiadds
xchg
jl
sub
pop
cli
xchg
pop
mov
lods
sti
ffreep
jp
or
ss
fs
test
sub
dec
outsb
cmpsb
xchg
fadds
and
cltd
push
in
iret
mov
fstpl
xor
push
push
lea
mov
sbb
inc
negb
pop
repnz
push
fnstenv
roll
dec
and
xcrypt-ctr
cmpsl
sbb
ret
sti
mov
jmp
cmp
jmp
loope
sub
sti
mov
out
or
cmp
add
cmpsb
xchg
mov
pushf
mov
pop
dec
dec
add
mov
out
sbb
pop
int3
arpl
pop
mov
push
adc
pop
cmp
mov
xor
jae
and
js
loop
sbb
pop
out
out
gs
ja
fisttpll
mov
mov
dec
dec
xchg
pushf
imul
dec
sbb
mov
lods
cs
and
mov
cmp
cmc
pop
in
in
sub
push
lahf
mov
out
jg
shl
xchg
cmp
pop
call
std
into
mov
cmp
push
repnz
scas
aam
and
and
scas
inc
push
mov
shll
cli
shll
jns
xor
mov
jo
pop
mov
and
pop
into
rcrl
xlat
push
out
test
cmc
and
in
lret
dec
push
cltd
jno
imull
or
mov
std
mulb
cmpsl
lea
push
sbb
fucomp
inc
cmc
cwtl
mov
and
push
lcall
or
cwtl
inc
pop
mov
repnz
or
lahf
into
ficoml
adc
cmp
xchg
test
jb
and
pushf
inc
mov
add
sbb
jnp
jnp
and
aam
mov
ret
cli
fcomip
push
outsl
pop
ss
ja
mov
sub
push
addr16
and
fidivl
shrb
fstpt
andl
daa
in
sbb
testb
mov
test
jns
adc
mov
popa
mov
sbb
and
mov
std
enter
inc
test
jmp
test
xlat
inc
enter
and
cmp
mov
shll
cmp
push
lock
aad
mov
sub
mov
test
dec
inc
jmp
mov
and
lea
jne
mov
mov
add
fsubrl
xchg
mov
in
mov
das
repz
or
jge
push
orl
fidivrs
iret
sahf
mov
ret
push
roll
or
clc
movsl
aas
movsl
cmp
xorl
inc
xor
push
imul
fnclex
pop
and
jb
lret
mov
out
push
pop
mov
addr16
xchg
scas
out
popf
cs
push
dec
adc
xlat
pop
push
test
lret
movsl
inc
or
pop
push
add
xor
mov
mov
or
notb
test
fucom
push
dec
mov
add
ss
cmpb
jmp
jb
stos
insb
in
or
add
or
mov
divl
push
cmp
ficoml
xlat
pop
sub
mov
pop
aaa
push
xchg
ja
mov
mov
addl
scas
adc
ljmp
movsb
daa
mov
sub
adc
adc
push
int
das
pop
jecxz
inc
xor
jl
cli
mov
inc
movb
jae
addl
adc
cwtl
xor
rcl
sbb
adc
cmp
out
rolb
dec
mov
mov
shr
and
loopne
rcrl
pop
aad
enter
repz
pslld
xchg
xchg
sbb
or
xchg
icebp
movsl
push
sahf
popf
mov
push
out
movsl
cs
mov
xlat
dec
nop
cltd
cmc
hlt
jo
mov
inc
mov
enter
and
xchg
add
out
push
sti
je
add
xchg
orl
pop
rclb
xchg
es
pop
sub
loopne
sub
mov
repz
aad
icebp
fdivrl
sbb
aam
orb
pushf
jle
repz
sbb
cwtl
push
pop
bound
out
push
js
mov
rclb
mov
adc
pop
push
fcmove
into
jp
mov
and
jno
fstps
and
push
scas
test
jnp
mov
jae
aam
loope
cltd
pop
das
ret
sbb
cwtl
add
call
add
or
out
cmp
inc
clc
cmp
icebp
add
out
mov
in
dec
dec
push
mov
movl
add
maxps
pop
cmp
test
bound
fmuls
and
in
mov
enter
mov
stos
fisttpl
sbb
pop
and
popf
xor
adc
outsb
or
rorb
into
popf
sbb
sysret
add
xchg
sarl
mov
fisubrl
push
add
push
pop
pop
popf
mov
rorl
and
cwtl
call
ds
into
cmp
fbstp
xor
daa
jge
xor
lods
jmp
xor
pop
cli
outsl
inc
in
cmc
xor
pop
movsl
cmp
dec
xchg
jge
sbb
rorb
fwait
hlt
faddl
jecxz
repnz
cmp
ja
popf
ret
popa
pop
movsb
cmpsl
popf
jne
test
sub
mov
or
fsubrl
fs
sbb
cmp
mov
daa
jp
aad
mov
cwtl
jg
dec
mov
pop
sub
clc
cmp
data16
ljmp
imul
pop
fisubs
shr
pop
loopne
xor
jecxz
pop
scas
xor
xlat
sub
and
push
mov
int3
push
out
or
sti
les
sub
xchg
in
xor
repnz
mov
push
mov
fs
mov
mov
ds
lods
ror
xchg
mov
mov
pop
mov
pop
and
dec
aas
mov
jle
hlt
ret
adc
out
js
push
mov
xor
sbbl
xchg
mov
adc
xchg
push
dec
andl
cli
jp
setns
or
aaa
enter
xchg
lods
mov
mov
loope
fcmove
xchg
loopne
sub
and
sahf
xchg
push
dec
jg
clc
hlt
pop
js
psrlq
cltd
mov
into
addb
lahf
xor
inc
icebp
stos
repz
shrl
bound
sub
push
push
hlt
xchg
adc
test
inc
cld
add
jmp
push
loop
jge
icebp
gs
loopne
incb
rorl
mov
negl
or
xchg
stos
pop
int
mov
sbb
mov
cs
push
sbb
push
xchg
cli
arpl
dec
mov
dec
or
andb
rorb
sub
cmpsl
xor
jecxz,pn
adc
dec
or
iret
leave
pushf
ret
add
mov
pop
cmp
xchg
adc
das
cwtl
and
jl
cltd
adc
negl
or
pop
mov
xchg
test
aas
adc
jae
jmp
dec
mov
xchg
xchg
dec
test
repz
fistpll
cmc
sbb
negb
stc
mov
pop
xchg
adc
adc
cwtl
add
mov
fisubrl
in
in
sbb
mov
sub
push
in
mov
adc
aad
cs
sbb
mov
push
jge
mov
pop
scas
fs
dec
jo
mov
xchg
mov
imul
mov
fucomip
cltd
sti
push
pop
dec
pusha
pop
and
xchg
fisubrs
and
mov
mov
adc
shlb
push
sub
mov
popf
mov
testb
sub
mov
xchg
cs
jno
hlt
mov
repnz
add
jae
cmp
scas
jo
push
in
xor
mov
and
out
stos
push
xchg
push
test
dec
je
repnz
jge
sbb
addb
dec
add
dec
inc
lods
inc
test
push
adcb
rolb
inc
add
mov
orl
sbb
inc
out
movsb
push
or
testl
lods
sub
lret
push
cmp
adc
jo
icebp
sti
imul
mov
and
mov
outsb
out
fsubr
push
jno
aad
dec
cld
jb
push
pop
and
imul
mov
and
cmp
ret
shl
notl
icebp
out
lods
decl
mov
xchg
push
jns
stc
rcr
insb
xchg
sub
fsubs
adc
cmp
pop
je
repnz
outsb
in
aas
aas
xor
pop
adc
mov
xor
and
sbb
pop
lret
and
xor
ds
push
push
pop
mov
mov
js
xchg
cs
or
pop
mov
popf
call
arpl
cmp
test
rcll
pop
fs
std
sarl
mov
pop
aam
xchg
notb
pop
mov
add
rdmsr
lods
sub
aaa
push
or
test
mov
test
push
mov
mov
mov
cmp
dec
pop
adc
push
in
mov
jecxz
loopne
jle
lea
pop
dec
push
repz
bound
popf
add
aas
fwait
or
xchg
test
inc
lods
and
push
inc
xchg
shlb
sti
sub
in
sub
enter
mov
inc
rol
popa
xchg
test
stos
and
mov
mov
shlb
fists
icebp
lcall
popf
sub
test
fbstp
mov
mov
pushf
add
mov
into
cltd
sbb
sbb
movsl
add
push
mov
mov
mov
ss
sbb
movsl
jp
inc
nop
addr16
dec
fnstcw
or
jg
test
inc
pop
sub
out
shr
cs
in
cltd
adc
xchg
sarb
js
loope
pop
stos
xor
idivl
and
jge
sub
in
sub
dec
jne
int
mov
xchg
leave
mov
pop
jmp
xchg
xchg
std
icebp
in
push
inc
add
mov
xchg
sbb
mov
lcall
je
aas
mov
aad
lahf
lea
test
cmp
in
mov
pop
gs
inc
test
int3
cmp
lods
jmp
in
push
add
inc
mov
inc
adc
jmp
jb
push
lret
xor
pushf
stos
mov
stos
sub
pop
stos
add
pop
xor
fisubrs
xchg
mov
mov
out
adc
es
cmp
ret
iret
sub
jne
mov
sti
das
jecxz
fldenv
push
sub
add
sub
sbb
cmpsb
inc
pop
fwait
mov
add
lahf
sbbb
mov
xor
sub
mov
sub
or
jnp
sbb
xchg
out
movsl
jns
loope
cs
cmc
dec
sub
mov
push
mov
shlb
in
and
sahf
xchg
adc
test
ds
lods
gs
adc
shll
outsb
add
mov
jg
bound
fidivs
dec
jecxz
aaa
add
jo
loopne
subl
jbe
iret
scas
push
dec
test
add
nop
or
mov
jbe
pop
inc
lahf
push
movsl
sahf
ficompl
push
push
mov
jle
idivb
xlat
sti
sub
xchg
cs
jle
or
adc
inc
sbb
inc
jg
ja
mov
fstl
lea
into
xchg
jle
inc
aam
cltd
lahf
jg
rorb
mov
mov
sbb
int
mov
out
arpl
push
popa
push
popa
mov
je
sbb
xor
jl
imul
jnp
mov
add
stos
dec
jne
sub
push
cmp
pop
ficomps
imul
cwtl
jae
mov
nop
arpl
popa
fistpll
push
filds
sbb
es
icebp
aam
in
aaa
shlb
cmpsb
fwait
xor
inc
dec
insl
insl
add
lods
call
aaa
dec
lret
xchg
add
fbstp
or
xchg
in
and
insb
sub
push
cmp
jge
mov
cs
in
and
iret
push
push
stos
inc
jo
mov
stos
je
sub
inc
insl
fcmovnbe
add
rcrl
xchg
add
shll
mov
lahf
fdivs
mov
js
mov
aaa
dec
xchg
push
add
imul
pop
cmp
test
and
push
pop
push
gs
pop
cmpsb
call
dec
and
sub
insb
in
mov
insb
fldl
call
ret
dec
mov
fldcw
jae
rcrb
mov
mov
mov
xchg
stos
lds
inc
cmc
push
mov
adc
icebp
xor
out
push
jp
sbb
pop
fadd
mov
movsb
call
sub
push
jg
push
lret
ljmp
stos
mov
jl
nop
in
cmp
mov
mov
xchg
repz
mov
cmp
addr16
je
mov
jmp
inc
mov
cwtl
popf
jb
sti
mov
mov
xor
cmpl
push
inc
xor
dec
sbb
mov
adc
cmp
imul
pop
movsb
fdivp
rol
inc
push
aad
lahf
nop
loop
dec
daa
mov
mov
push
je
lcall
mov
inc
dec
push
mov
mov
pop
xor
cli
pop
sarb
and
mov
outsl
fdivrl
inc
xchg
hlt
loop
mov
or
in
das
mov
or
mov
add
ss
push
subl
test
push
add
xor
adc
and
push
cld
pushl
push
cmpsl
insl
inc
cmc
add
sub
pop
fsubl
xor
cmp
int3
cmp
jg
fisubrs
inc
or
mov
or
outsl
test
mov
and
xchg
insb
cmpsb
and
mov
aam
inc
sbb
scas
jnp
testl
rorl
les
les
into
and
cltd
dec
adc
fst
popa
sub
xor
int
ret
xchg
sbb
inc
data16
test
adc
into
rcl
push
mov
sub
fcoml
leave
or
leave
push
stos
inc
inc
dec
push
xchg
pop
ja
mov
lcall
mov
daa
aam
push
cmpsl
mov
or
in
xor
adc
sbb
dec
popf
mov
or
js
pop
scas
and
lret
xchg
stc
sub
inc
loop
daa
hlt
call
or
scas
dec
and
jnp
cmc
mov
and
cmp
popa
loopne
adc
sub
addr16
repz
fisubs
sbb
sub
cmc
arpl
and
add
inc
enter
mov
add
inc
and
add
xor
add
icebp
or
sub
movsl
and
jo
add
and
mov
lret
test
push
es
xor
xchg
fnstenv
inc
jg
addr16
xchg
pop
push
mov
mov
inc
add
or
sbb
in
out
pop
push
xchg
gs
or
mov
bound
outsl
lcall
xchg
and
push
shlb
xchg
sti
mov
inc
and
sbb
movsl
test
xor
add
adcl
xchg
sbb
lret
sti
test
enter
add
es
ror
or
ficoml
mov
aaa
pop
fwait
js
dec
jne
jno
add
ljmp
lcall
cmpsb
mov
jno
les
push
jno
inc
xor
pop
mov
and
ds
aad
xchg
mov
out
sti
pop
movsb
jne
pushl
rorb
push
sbb
and
or
rcll
or
movsb
inc
jno
xor
mov
adc
mov
shll
lods
je
jae
sub
lret
mov
loope
lahf
xchg
pop
cmpsb
xchg
sub
xor
mov
cmpb
mov
pop
mov
cmpsl
mov
inc
dec
cs
in
orb
mov
movsb
shll
gs
xchg
xorl
fcoms
sarb
ret
inc
ret
mov
fdivrp
mov
jnp
lods
and
push
inc
aaa
aam
subl
jo
std
pop
mov
leave
call
xchg
adc
dec
inc
mov
cwtl
inc
pop
inc
mov
fstpt
js
mov
mov
jmp
mov
jbe
adc
sbb
cs
dec
dec
popf
push
jp
xor
fs
cld
adc
mov
js
jle
popa
ds
adc
repz
push
aaa
mov
add
andl
dec
and
inc
stos
inc
jl
and
into
xor
push
fs
or
inc
enter
and
sbb
adc
cmp
jb
loopne
loop
fwait
sbb
sbb
mov
xor
push
adc
pushf
xor
outsl
incl
test
cmp
inc
js
push
jp
push
sarb
or
enter
mov
icebp
jbe
stc
cmp
xor
push
jecxz
mov
nop
adc
jmp
adcl
sbbl
fs
jmp
mov
adc
mov
sub
add
or
repz
and
outsl
bound
imul
sbb
test
orl
jb
inc
icebp
cmp
cmp
adc
xchg
scas
pop
or
out
imul
scas
pop
cmp
outsb
dec
repz
mov
icebp
loopne
mov
xor
nop
sub
push
push
in
and
scas
fidivs
xchg
add
pop
mov
scas
mov
xor
imul
bound
test
lds
inc
push
stos
and
loop
cmpsl
sti
mov
xor
mov
popa
inc
mov
sub
aam
pop
lret
decb
or
cwtl
imul
imull
movsl
movsl
addr16
test
in
dec
sbb
out
push
mov
test
dec
sti
aam
dec
mov
adc
in
cmp
mov
cld
and
lret
negl
jb
ja
cmpsb
push
cmp
mov
xor
sub
sub
popa
sub
pop
out
push
andl
add
jae
sub
ds
jne
stos
mov
arpl
push
ficoml
dec
stos
out
lock
sbb
sbb
outsl
pop
imul
ret
xor
aam
adc
sub
icebp
std
add
xorl
popa
adc
mov
sub
push
es
ds
sub
pusha
cvtps2pi
pop
inc
je
sub
dec
cmpsl
xor
test
xchg
test
add
hlt
adc
dec
push
mov
outsb
in
imul
repz
sti
lods
push
ljmp
jp
xor
int3
and
add
adc
inc
xorb
nop
lahf
sbb
push
pop
fwait
jb
push
dec
xor
aad
mov
and
ss
inc
addr16
mov
imulb
push
cmp
push
cld
out
in
mov
addb
sbb
decb
adc
shll
aas
pop
jmp
adc
inc
scas
lods
jg
xchg
or
sub
and
push
jnp
jge
cmpsb
addr16
aas
push
xor
xchg
mov
add
andb
dec
nop
lock
mov
pop
dec
ret
in
xchg
push
aas
sbb
std
aaa
mov
pop
popf
andb
neg
sub
sbb
test
xor
xchg
popf
and
xor
icebp
pushf
movsb
into
loopne
fs
xchg
daa
imul
pop
daa
and
inc
jne
push
or
push
mov
and
jo
push
jns
fldcw
inc
in
gs
xchg
pop
je
mov
outsl
cmp
jae
loopne
push
lret
bound
aam
insb
jecxz
stos
arpl
pop
jo
pop
lods
bnd
mov
dec
pop
push
fndisi(8087
jmp
shlb
xor
das
xor
jb
idivb
imul
push
jnp
sub
rol
insl
mov
and
add
out
jg
ljmp
imul
jb
pop
ja
mov
sub
push
fmuls
repz
shll
lret
mov
mov
jecxz
mov
mov
push
mov
jp
pop
adc
dec
test
addr16
les
sub
jnp
stos
mov
sbb
cmc
ja
xor
cmpsb
sbb
cmpsl
popa
shlb
dec
mov
stc
fmull
mov
mov
and
sub
fildl
jge
and
in
cmpl
in
xchg
cli
adc
jbe
test
cmpsl
ss
mov
sub
rclb
dec
hlt
inc
lods
xor
insb
and
lods
inc
pop
nop
fldcw
pop
das
repnz
mov
or
inc
ds
jne
das
xchg
xor
jmp
pop
jmp
cmp
test
inc
js
stos
hlt
cmp
sbb
or
cmc
xchg
push
scas
push
call
sbb
dec
or
adc
arpl
ficoml
addb
cmp
cmp
insl
js
dec
mov
ret
inc
pop
imul
cmc
or
and
je
lret
test
xor
ret
sbb
sub
push
popf
cmp
icebp
call
add
outsb
push
add
adcl
push
pop
sub
data16
movsb
push
mov
pop
aas
jmp
stos
xchg
xor
add
rcl
lds
sbb
xchg
push
sub
mov
adc
fnstenv
and
aas
pop
jbe
rcr
cmp
and
test
or
pop
pop
inc
aam
xchg
iret
inc
jle
xlat
ja,pt
and
aad
icebp
mulb
imul
xchg
dec
add
dec
fprem
or
sub
jno
xchg
test
jne
sti
cmp
pop
xchg
xchg
dec
sbb
xor
sub
bound
fmul
or
mov
mov
sbb
cmpl
lcall
xchg
mov
clc
and
cmp
imul
stos
pop
add
push
sbb
xor
pop
xchg
jo
fdivl
subb
repz
jmp
mov
call
xchg
ror
addr16
cs
lds
sub
sub
mov
clc
mov
neg
dec
pushw
inc
pusha
add
sub
stos
sbb
lret
xchg
lock
arpl
or
and
roll
mov
test
or
sub
out
loope
fdivr
out
call
push
lret
aas
sbb
and
nop
add
mov
xchg
jae
aam
mov
cmp
testl
test
jb
or
loopnew
pop
mov
jno
jne
sbb
mov
dec
xchg
repnz
cwtl
mov
and
in
mov
insb
and
pop
mov
jb
mov
xor
orb
test
sbb
data16
js
es
mov
sbb
mov
inc
or
jle
roll
orl
adcb
ds
push
push
mov
inc
mov
enter
sbb
lds
lahf
mov
iret
or
xor
dec
push
push
roll
dec
inc
test
xchg
sti
push
test
je
sub
movsl
shlb
inc
mov
adc
add
enter
adc
sub
mov
and
inc
or
cmp
push
xchg
jg
in
mov
xchg
hlt
mov
dec
repnz
call
mov
sbb
or
cmc
mov
lahf
xchg
jne
rorl
filds
add
dec
inc
sahf
cltd
fistpll
movb
mov
xchg
inc
adc
and
aad
nop
push
and
imul
add
insl
stc
sub
icebp
adc
hlt
mov
push
or
dec
ja
xchg
inc
sbbl
or
cmpsb
inc
in
adc
push
in
cmp
ja
adc
insl
xchg
leave
rcrb
das
cmpsb
inc
aas
lahf
push
shl
ds
pop
lret
idivl
es
adc
cltd
sbb
out
dec
and
dec
ja
jp
out
test
push
movsb
push
cwtl
dec
mov
movsb
jmp
stos
cmpsb
mov
rclb
jne
addr16
jg
push
xchg
addr16
cli
dec
mov
mov
int
out
leave
push
xchg
test
add
cmc
repz
jge
mov
add
sub
aas
movsb
mov
and
int3
in
jne
loopne
repnz
imul
clc
test
jne
cmpl
ficoms
es
in
shrb
divl
out
out
lods
inc
mov
cltd
xchg
fcomip
cmpsb
mov
dec
xchg
pop
dec
out
push
or
add
subb
cmpsb
jnp
lret
xor
popf
je
lods
push
fcomps
adc
push
jnp
in
test
inc
xchg
or
push
xchg
lret
movl
mov
imul
inc
inc
mov
test
mov
adc
add
xchg
jle
add
cld
xchg
add
push
mov
repnz
cmp
pop
std
sub
mov
sahf
icebp
or
or
jo
fdivrs
jp
data16
mov
scas
push
popw
cmpsl
ds
jo
push
shlb
inc
stc
insb
jo
das
cltd
lret
and
sbb
lds
std
aad
pop
in
push
mov
neg
push
mov
popa
into
sub
adcb
out
mov
add
jmp
jns
sub
ja
mov
mov
dec
xchg
subb
enter
pop
xor
xor
test
xor
mov
xchg
sbb
in
test
inc
pop
push
es
aam
arpl
jge
movsl
std
aaa
cs
jg
les
add
rorb
cli
roll
leavew
inc
sbb
inc
inc
cmp
imul
xlat
sbb
mov
daa
xor
inc
pop
mov
imul
testl
aaa
pop
nop
cmp
pop
inc
int
cmp
cmp
mov
add
pop
jge
mov
testl
movsb
lea
andl
push
jp
mov
adc
mov
rorl
push
into
call
test
mov
add
jb
sti
stos
std
mov
ret
dec
shll
and
cmpsb
mov
cwtl
jo
or
xchg
dec
mov
xchg
fdivrl
out
std
jl
out
lods
jb
pop
sahf
jnp
adc
and
loope
cmp
pop
cmpsb
outsb
mov
cmp
jl
xor
lds
jg
mov
or
inc
xchg
cmp
popf
fidivrl
push
mov
mov
movsl
xchg
pop
iret
mov
push
mov
jp
cld
or
sub
cmp
adc
std
xchg
data16
stos
fcmove
lahf
jle
jg
movsl
sub
nop
cmp
leave
mov
sti
out
nop
bound
ret
xchg
pushf
in
popa
pushf
mov
dec
pop
divl
rolb
sub
add
jb
push
pop
jecxz
jae
jl
ljmp
add
int3
les
insl
aas
mov
iret
adc
inc
adc
cmp
outsb
pop
rolb
jmp
dec
ror
mov
int
mov
pop
ficoml
cmpsl
popa
sbbb
pop
or
jo
mov
dec
push
popl
nop
xchg
out
mov
pop
enter
xor
xor
dec
test
in
jmp
xchg
fbld
pop
push
movsb
lahf
aam
mov
sub
test
icebp
outsb
movsl
push
lea
and
stos
inc
mov
ja
nop
rcr
aas
adc
add
imul
push
outsl
jp
xor
push
cmp
enter
nop
push
mov
adcl
xchg
leave
lods
cmp
pusha
test
inc
xchg
push
cmpsl
jo
jne
out
dec
and
inc
test
jle
testl
movl
xchg
cmp
add
jo
push
pushf
ljmp
adc
and
jecxz
loope
mov
movsl
mov
jmp
notl
std
jmp
cs
and
inc
es
xlat
add
jae
int3
inc
sbb
dec
jp
jns
cwtl
fwait
insl
inc
pop
dec
cmp
shr
leave
ja
les
cltd
psrlq
negl
nop
lret
pop
repz
sbb
arpl
movsb
mov
in
inc
xor
sub
mov
scas
imul
ds
ljmp
fistpll
das
xchg
sbb
decb
mov
xchg
xor
or
pop
aas
mov
push
pop
add
push
xchg
nop
ffree
xchg
sbb
rol
faddl
jecxz
pop
cmp
call
outsb
movsl
call
sti
ja
inc
sbb
mov
cmp
ja
sub
push
cli
push
xchg
lods
cmp
pop
pop
rcl
iret
aaa
xor
or
stos
rolb
es
fidivs
movsl
clc
xchg
pop
lods
and
loopne
cli
adc
rcll
lret
stc
arpl
daa
mov
inc
ljmp
sub
mov
add
jl
or
inc
das
and
sbb
jge
xlat
xor
adc
insb
sub
daa
shll
movsb
xor
inc
jg
out
js
mov
lahf
ja,pn
jp
push
sahf
icebp
pop
enter
dec
mov
inc
and
jge
aad
mov
xchg
dec
ss
jmp
mov
gs
lret
in
movsl
push
aas
or
jl
mov
aad
rcr
mov
push
cmpl
es
call
add
cmc
lea
xlat
add
inc
movsl
fisttpl
mov
and
add
movsb
mov
adc
mov
stos
mov
cltd
mov
dec
add
lock
mov
jmp
push
out
cltd
xor
mov
sbb
clc
out
repnz
jbe
decl
iret
in
mov
sbb
out
cmp
in
xchg
flds
outsb
dec
adc
jne
dec
frstor
leave
add
lahf
or
mov
xchg
or
mov
fwait
iret
stos
mov
push
push
call
xchg
fldt
and
add
idivl
orb
mov
ds
in
mov
lods
push
mov
pop
add
dec
jge
cmp
hlt
xchg
gs
and
lahf
hlt
insb
jne
rcr
mov
cmp
mov
fwait
mov
iret
scas
sbb
dec
lock
enter
mov
and
push
data16
xor
sub
jbe,pn
adc
dec
fldenv
out
mov
ds
faddl
and
rcrl
push
fsubrl
ds
jns
push
mov
repnz
cli
cs
hlt
bound
lods
insl
xlat
mov
cltd
cli
mov
dec
fcoms
xchg
into
push
adc
fs
into
in
aas
stos
mov
insb
and
in
test
cmpb
into
std
lds
push
mov
enter
in
mov
aam
les
mov
pop
int3
stos
fdivrp
ficoml
setno
mov
clc
sub
jecxz
push
int
sub
je
xor
cmp
into
xchg
out
ficompl
into
xchg
or
sti
push
sar
inc
js
inc
push
inc
xchg
int
sub
xchg
sub
mov
cmpsb
das
shll
cmp
sub
lret
mov
bound
xor
repz
mov
mov
cs
sub
xchg
xchg
mov
xchg
adcb
pop
pop
and
sbb
sbb
aam
add
pop
jbe
hlt
cmp
push
inc
jnp
xor
dec
pop
push
call
ret
pop
lcall
mov
lock
pop
xchg
outsl
lea
and
jno
lds
xchg
xlat
jecxz
orb
xor
xchg
adc
sub
int
adc
clc
mov
dec
mov
enter
aam
push
push
mov
es
out
mov
mov
mov
sbb
inc
in
mov
inc
push
mov
jbe
sbb
jge
lret
push
inc
iret
fildll
frstor
or
nop
push
nop
in
sbb
repnz
jno
push
pop
cmp
jns
mov
inc
addr16
orl
jae
jns
mov
stos
fcoml
adc
pop
insb
std
pop
inc
out
add
imull
xchg
inc
xchg
xor
adc
or
inc
mov
adc
and
xchg
cld
cld
cmp
cwtl
hlt
test
into
jnp
adc
jecxz
sub
clc
or
in
cld
aam
jge
fs
mov
loopne
in
mov
jecxz
imull
pop
leave
cmpsb
xor
ja
inc
lret
pop
dec
sbb
les
pop
mov
in
xchg
inc
mov
pop
and
popf
aad
jge
push
inc
in
rolb
sbb
lret
insl
push
jae
pusha
and
fcmovnu
int
cmp
in
cmpsl
mov
push
iret
arpl
add
push
and
jae
jecxz
push
dec
enter
sub
scas
lods
addb
mov
xchg
and
mov
lea
pop
scas
data16
and
or
jns
lret
adc
das
aas
xchg
pop
cmpl
mov
mov
fisttpll
xchg
sbb
mov
cmpsb
lea
and
lea
ss
out
gs
punpckhbw
push
pop
mov
pop
lret
rolb
fisubrs
dec
fs
mov
or
mov
push
xor
bound
dec
repnz
cld
ds
jge
inc
pop
add
ffreep
bswap
mov
in
sbb
dec
dec
rcrb
dec
push
lret
aas
fnstcw
dec
adc
cltd
pop
sarl
mov
stc
movlps
jae
fnstsw
shrb
sub
xchg
test
inc
xor
pushl
inc
loop
push
xor
ficomps
and
fistpll
jl
invd
cmp
jbe
push
in
ret
sub
shrb
insl
pusha
ds
xor
jne
outsb
roll
jbe
jg
aad
mov
pop
dec
xchg
scas
adcb
mov
cmp
jbe
sbbb
nop
and
jle
jnp
ret
je
push
lods
loopne
ret
jns
jp
lret
dec
jmp
push
loope
orb
jnp
lcall
sti
das
mov
xchg
mov
sub
cld
movsl
or
jp
inc
mov
sub
aad
loopne
ret
xor
daa
testl
mov
pushf
pshufw
loopne
cmp
jg
push
addr16
sbb
mov
cmpsb
xor
push
lods
pop
sbb
mov
ds
xor
pop
lock
mov
iret
loop
lods
jno
xchg
mov
jle
aaa
das
add
lock
cmp
and
lods
add
popl
loop
pop
push
or
loope
add
cmp
cmc
das
filds
pushf
pop
inc
insl
mov
aaa
aaa
inc
add
das
add
sub
and
std
std
jns
jne
xlat
add
cmc
cmpsb
popa
sbb
orb
jle
ja
push
jns
ret
mov
fbstp
cmp
add
sbb
arpl
push
clc
loope
daa
sub
aad
cmp
loop
jae
iret
lcall
stos
bound
inc
icebp
cwtl
sbb
out
rolb
cmp
aas
out
insl
out
add
shll
dec
inc
in
cmpsl
call
hlt
push
xchg
adc
repz
jl
loopne
xchg
cmpl
decb
pop
or
xor
push
in
dec
sub
dec
pop
das
rolb
push
jae
jns
aaa
mov
sbb
and
ja
or
dec
in
movsl
cmp
test
nop
jne
pop
mov
arpl
int3
data16
addl
jns
xchg
mov
add
mov
inc
xchg
std
int
mov
stos
push
inc
dec
inc
inc
mov
ljmp
arpl
pop
ret
cmp
inc
mov
cld
sub
inc
lds
dec
sub
sbb
sbb
or
mov
mov
cltd
inc
lods
idivl
mov
das
push
neg
mov
mov
lret
dec
stc
push
call
mov
ss
flds
std
mov
enter
mov
inc
pop
stos
jmp
mov
cltd
movsb
pop
popa
cmp
xor
dec
in
pop
lods
movsb
aaa
cwtl
rcll
cmp
rorb
jb
jle
addr16
outsl
rorl
jne
mov
xchg
and
push
jne
dec
rcrb
dec
sarl
xor
lds
testl
js
and
sbb
sbb
adc
scas
pop
xchg
outsl
pushf
aam
push
test
or
jle
pusha
xlat
dec
add
inc
pop
jg
mov
push
jg
leave
rorb
push
fistps
ret
mov
sub
jle
mov
xor
es
xchg
pusha
pop
movsl
in
stc
and
adc
adc
mov
leave
loopne
dec
rcrl
mov
cs
add
cmp
ds
into
sub
dec
jecxz
aam
sub
fcomps
ss
xlat
int
pushl
dec
jl
jae
iret
cmp
data16
mov
or
test
mov
mov
lret
bound
mov
mov
jne
push
shll
inc
orb
mov
out
jmp
.byte
rclb
add
repnz
add
gs
arpl
and
insb
outsl
arpl
imul
cmp
sub
and
xor
and
sub
ja
cmp
xor
js
inc
jb
outsl
jb
bound
and
insb
outsl
arpl
imul
outsb
je
jb
and
jo
ja
cmp
xor
js
push
push
jae
imul
and
insb
imul
outsl
and
jae
imul
outsl
jb
and
push
push
push
jae
imul
and
insb
imul
outsl
and
jae
imul
outsl
jb
and
js
xor
add
add
jb
jno
imul
dec
dec
and
insb
gs
and
ja
jae
outsb
outsl
je
outsw
jne
fs
add
jb
jb
popa
insb
insb
outsl
arpl
imul
outsl
jb
and
add
add
xchg
testb
mov
cmp
imul
add
add
gs
jne
xor
cs
insb
add
add
inc
outsl
jb
imul
outsb
je
insl
gs
js
add
arpl
gs
insb
add
push
outsb
imul
imul
dec
outsb
imul
add
add
outsl
insb
xor
cs
insb
add
add
loop
add
add
xor
add
sub
add
sub
add
pop
loop
add
add
jbe
add
xchg
add
cwtl
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
jecxz
add
jecxz
add
add
add
add
jbe
add
xchg
add
cwtl
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
jecxz
add
jecxz
add
add
add
push
imul
jb
add
push
imul
insb
insb
outsl
arpl
add
push
jb
arpl
fs
jae
add
dec
add
fs
imul
js
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jnp
push
imul
jb
je
arpl
scas
add
imul
jae
jne
inc
gs
outsl
fs
gs
imul
add
dec
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
aad
ja
jo
imul
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
and
lret
cmp
add
dec
mov
das
lret
cmp
add
dec
mov
in
mov
mov
push
xor
mov
push
mov
test
jle
push
mov
shr
shl
cmp
jb
sub
or
cmp
jae
mov
shl
cmp
jne
movl
or
jmp
mov
inc
mov
movzbl
shl
or
decl
jne
pop
mov
mov
pop
pop
pop
ret
mov
mov
push
push
mov
movzwl
mov
shr
imul
mov
cmp
jae
mov
mov
movzwl
mov
sub
sar
add
mov
mov
cmp
jae
mov
cmp
jne
movl
or
jmp
mov
inc
mov
mov
movzbl
shl
or
shl
mov
mov
xor
jmp
sub
sub
mov
mov
mov
push
mov
shr
sub
mov
mov
cmp
pop
jae
mov
push
cmp
jne
mov
or
jmp
mov
inc
mov
mov
movzbl
shl
or
pop
shl
mov
mov
pop
pop
ret
push
mov
cmpl
push
pop
jle
push
push
mov
pushl
lea
mov
add
push
call
pop
add
dec
pop
jne
pop
pop
mov
push
pop
shl
sub
pop
ret
push
push
xor
push
xor
cmp
pop
jle
push
mov
pushl
lea
add
push
call
pop
lea
pop
mov
shl
or
inc
cmp
jl
pop
mov
pop
pop
ret
push
mov
push
push
movzbl
shr
shlb
mov
push
mov
pushl
shl
lea
push
call
pop
mov
pop
or
cmp
jne
cmp
jge
movzbl
shr
pushl
lea
shlb
shl
add
lea
push
call
pop
add
pop
or
jmp
mov
cmp
jge
pushl
add
lea
push
call
pop
or
pop
jmp
pop
mov
pop
pop
pop
ret
push
mov
push
mov
push
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
jmp
lea
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
add
jmp
add
push
push
call
add
add
pop
pop
ret
push
mov
sub
mov
push
push
push
mov
push
pop
xor
lea
mov
shl
xor
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
dec
mov
mov
shl
dec
mov
mov
test
jbe
mov
mov
mov
shr
rep
adc
rep
mov
mov
andl
andl
orl
lea
mov
mov
movl
cmp
jne
mov
or
jmp
mov
mov
incl
mov
movzbl
shl
or
decl
mov
jne
mov
andl
cmpl
jbe
mov
lea
and
push
mov
shl
add
lea
push
call
pop
test
pop
jne
mov
mov
sub
and
movzbl
shr
mov
shl
add
lea
shl
cmpl
lea
jge
andl
jmp
cmpl
jge
subl
jmp
subl
cmpl
je
mov
mov
sub
mov
mov
lea
pushl
push
push
call
add
andl
mov
jmp
push
pop
add
lea
push
lea
push
call
or
pop
cmp
pop
jl
mov
jmp
mov
lea
push
movl
lea
push
call
pop
cmp
pop
jne
lea
push
lea
push
call
pop
test
pop
lea
push
jne
lea
shl
add
lea
push
call
pop
test
pop
jne
cmp
mov
setge
dec
and
add
sub
mov
mov
mov
mov
incl
mov
jmp
lea
push
call
pop
test
pop
jne
mov
jmp
lea
push
lea
push
call
pop
test
pop
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
call
mov
add
xor
cmp
setge
dec
and
add
mov
jmp
mov
push
mov
mov
mov
mov
mov
xor
cmp
setge
dec
and
add
mov
lea
push
lea
push
call
mov
add
cmp
jge
jmp
push
pop
shl
lea
push
lea
push
push
call
add
cmp
jl
mov
mov
sar
and
dec
or
shl
cmp
jge
lea
push
push
mov
sub
lea
push
call
add
add
jmp
add
lea
push
push
call
shl
add
lea
push
lea
push
push
call
add
jmp
mov
mov
inc
mov
cmpl
je
inc
inc
mov
mov
mov
sub
mov
mov
inc
dec
mov
test
jle
cmp
jb
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
cmp
jae
xor
cmp
mov
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
cmp
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
movzbl
mov
push
lea
push
shl
lea
push
push
call
test
mov
jne
push
pop
jmp
lea
push
mov
push
add
pushl
push
mov
add
push
pushl
push
push
push
push
call
add
mov
xor
mov
push
push
pushl
call
lea
mov
push
lea
push
push
push
movl
pushl
call
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
andl
repz
gs
push
jb
jbe
xor
xor
add
add
mov
mov
mov
sub
mov
cmpl
je
mov
mov
add
mov
jmp
movl
push
push
push
push
call
mov
cmpl
je
andl
push
push
push
push
call
mov
push
pushl
pushl
call
mov
lea
mov
mov
movsbl
cmp
je
mov
dec
mov
jmp
mov
inc
mov
mov
sub
mov
push
push
push
push
call
mov
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
add
andb
mov
shl
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
pushl
mov
pushl
pushl
call
add
mov
pushl
pushl
call
pop
pop
jmp
mov
cmpl
je
push
push
mov
pushl
push
call
mov
mov
mov
cmpl
jne
push
pushl
push
push
call
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
divl
add
mov
pushl
mov
pushl
pushl
call
add
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
shr
rep
mov
and
rep
mov
imul
mov
mov
add
mov
jmp
push
push
pushl
call
jmp
mov
mov
add
mov
sub
mov
mov
mov
xor
divl
add
mov
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
cmpl
je
mov
imul
mov
cmpl
jbe
mov
imul
mov
mov
add
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
pushl
mov
imul
mov
pushl
pushl
call
add
jmp
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
lea
push
push
push
pushl
call
mov
mov
add
mov
pushl
call
mov
cmpl
jne
push
push
pushl
call
mov
cmpl
jne
mov
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
push
push
pushl
call
mov
cmpl
jne
pushl
push
pushl
call
add
push
pushl
pushl
push
call
push
call
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
cmpl
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmpl
je
andl
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
call
mov
jmp
mov
mov
add
mov
mov
inc
inc
push
pushl
call
mov
cmpl
jne
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
pushl
push
pushl
call
add
jmp
mov
inc
inc
push
pushl
pushl
push
pushl
call
add
push
pushl
pushl
push
call
push
call
lea
push
push
push
pushl
call
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
mov
cmp
je
mov
cmpl
je
mov
mov
add
mov
mov
cmpl
je
mov
add
mov
andl
jmp
mov
inc
mov
mov
mov
sub
cltd
sub
sar
cmp
jge
mov
mov
add
mov
movzwl
and
add
mov
mov
movzwl
sar
mov
cmpl
je
cmpl
je
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
add
cmp
jbe
mov
pushl
push
pushl
call
add
push
pushl
pushl
push
call
push
call
lea
push
push
push
pushl
call
mov
mov
mov
jmp
mov
pushl
mov
movzwl
push
push
pushl
call
add
push
pushl
pushl
push
call
mov
inc
inc
mov
jmp
mov
mov
add
mov
jmp
mov
cmpl
je
call
mov
mov
add
mov
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
mov
cmpl
je
push
call
mov
pop
pop
pop
add
pop
push
mov
cmpl
jne
pop
xor
inc
ret
pop
jmp
jmp
jmp
pop
pop
pop
leave
ret
push
mov
cmpl
push
je
mov
mov
test
je
mov
test
je
pushl
pushl
pushl
call
add
jmp
mov
movl
mov
mov
mov
mov
mov
pop
pop
ret
cmpl
movl
je
pushl
pushl
pushl
call
ret
push
mov
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
call
mov
push
push
mov
call
push
mov
pushl
call
push
mov
call
push
push
call
push
mov
call
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
test
jl
lea
push
push
push
push
push
push
call
test
jl
mov
push
mov
call
test
jl
mov
lea
push
push
mov
call
test
mov
jl
mov
lea
push
push
push
call
test
jl
pushl
push
push
call
cmp
mov
je
lea
mov
push
push
call
test
jge
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
jmp
mov
mov
mov
mov
shr
rep
pushl
mov
and
rep
call
mov
lea
push
pushl
mov
push
call
test
jl
mov
lea
push
push
mov
call
test
jl
lea
push
call
push
push
sub
lea
mov
mov
movsl
mov
push
movsl
movsl
movsl
call
mov
push
mov
call
pushl
call
call
mov
cmp
je
mov
push
call
lea
call
lea
call
lea
call
lea
call
jmp
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
pop
pop
pop
leave
ret
mov
test
je
mov
push
call
ret
push
mov
sub
push
push
push
push
mov
pop
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
mov
mov
mov
cmp
je
cmp
je
inc
jmp
mov
mov
mov
sub
add
add
cmp
mov
jbe
andl
jmp
test
jbe
mov
and
shl
dec
mov
jne
mov
test
je
cmp
jne
mov
mov
shrl
mov
and
cmpl
je
and
cmp
jae
xor
mov
mov
movzbl
shl
or
movzbl
shl
or
sub
sub
sub
cmpl
mov
je
mov
push
movzbl
mov
shl
mov
pop
sub
mov
shr
test
je
cmp
jne
push
pop
sub
push
shl
pop
mov
shl
dec
xor
jmp
mov
mov
add
shr
and
dec
not
mov
mov
shr
mov
mov
shr
mov
mov
andl
jmp
orl
mov
inc
test
je
cmp
jne
or
mov
cmp
jbe
pop
pop
pop
leave
ret
add
add
sub
add
add
add
lods
popl
add
ljmp
sgdtl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
adc
add
add
loopne
add
add
add
add
adc
add
mov
add
inc
add
inc
add
add
add
add
bound
add
mov
add
add
inc
add
.byte
