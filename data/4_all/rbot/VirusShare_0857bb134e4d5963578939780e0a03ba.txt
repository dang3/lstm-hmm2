add
aam
mov
inc
lahf
aaa
push
jp
inc
xor
scas
rcl
sti
mov
jl
ficompl
in
rcr
popf
inc
je
jmp
sub
cmpsl
aas
inc
xchg
jmp
mov
dec
sub
push
stc
sbb
mov
out
add
in
dec
cltd
incb
outsb
mov
hlt
dec
lods
inc
mov
shlb
nop
xchg
push
gs
ret
adc
adc
sub
add
mov
dec
xchg
mov
iret
imul
cmp
sahf
cs
push
rorb
inc
ret
cmp
pop
or
xlat
fdivr
mov
push
enter
sub
push
scas
addr16
sub
sub
out
test
mov
push
adc
rcrb
mov
sbb
add
or
dec
arpl
hlt
xorl
repz
lods
sbb
jge
in
cmp
lcall
xor
jnp
and
push
into
and
daa
dec
jb
sub
movsb
cmp
xchg
ljmp
outsb
mov
aam
pop
pop
mov
add
jo
xchg
jmp
int
mov
pop
pop
or
or
sbbb
dec
and
rcr
sbb
push
mov
cs
lret
loop
enter
dec
or
imul
inc
cmc
mov
dec
xchg
xlat
sbb
icebp
mov
ret
cmp
subb
iret
dec
jo
push
in
outsb
add
xorl
loop
jp
dec
xor
fnstsw
adc
into
push
push
xor
lods
or
adc
imul
out
scas
pop
mov
pop
sarl
cmp
mov
dec
and
jae
fdivr
push
adc
lods
aam
jno
hlt
mov
mov
push
mov
sub
out
mov
testb
scas
shrb
xchg
sbb
ljmp
push
adc
pop
inc
and
push
push
cmp
rcr
loopne
jae
or
loop
mov
clc
aam
xor
mov
scas
aam
popa
cmpl
in
mov
sub
inc
xchg
pop
push
jmp
cmp
jecxz
xchg
mov
inc
push
xchg
push
mov
jmp
mov
adc
sub
pop
add
cmp
fnstenv
add
xchg
inc
xchg
adc
jge
dec
scas
sub
pop
sub
xchg
and
outsl
nop
scas
jecxz
inc
out
inc
and
push
fstl
ja
outsb
jp
cmc
lahf
and
jp
sbb
cmpsb
in
lea
jno
es
push
ret
mov
out
push
stos
ljmp
lds
add
lods
sub
cs
xchg
fdivs
jge
test
inc
iret
push
aam
out
mov
rolb
repz
xchg
mov
shll
dec
xchg
mov
subl
test
mov
movsl
daa
icebp
outsl
mov
testl
fwait
andl
xchg
ds
lds
adc
push
imul
mov
hlt
into
std
outsb
sub
sub
cmp
cs
cwtl
outsb
xor
mov
sbb
push
or
test
ja
lahf
sbb
add
addr16
hlt
jo
cmpl
es
in
or
pop
imul
xor
fiadds
lock
rorb
shr
cmc
add
mov
imul
pop
jae
and
fimull
dec
sbb
pop
push
fsts
sbbb
xchg
fadd
lods
cmp
adc
add
loopne
push
jge
imul
and
ljmp
mov
fisubrl
push
jbe
cmp
jnp
cmpsb
clc
cwtl
mov
lods
iret
aas
outsb
imul
and
sub
push
pop
leave
test
or
xlat
push
cmp
or
push
insb
lock
fiaddl
mov
sbb
pusha
mov
lret
dec
dec
sub
or
push
aam
dec
hlt
test
rol
jge
std
and
or
fwait
andl
mov
imul
inc
jo
mov
icebp
clc
mov
dec
mov
mov
call
lds
add
mov
xchg
jns
cmovbe
ss
dec
adc
iret
dec
dec
das
xchg
shlb
fnstsw
movsb
dec
push
loope
int3
sub
idivl
inc
bound
pop
sbb
xchg
lock
into
and
test
testb
out
pop
jb
mov
rorl
dec
and
push
cmp
cmp
pop
ja
nop
add
clc
dec
inc
inc
pop
push
pop
movb
repz
add
iret
test
mul
push
xor
stos
jae
std
sahf
imul
mov
dec
and
add
test
arpl
enter
movsb
int3
dec
enter
loope
ret
jno
in
in
or
sbb
add
popa
mov
cmpsl
xchg
sbb
dec
jbe
pusha
inc
movsb
or
and
cmpsl
fstpl
ja
jp
loopne
mov
pusha
jg
int
lret
jo
cmc
ret
or
pop
test
imul
xor
sahf
paddusw
loop
push
jmp
xchg
jo
ret
xchg
jb
xor
lock
sub
inc
sbb
out
pop
pushf
or
out
adc
sbbl
addr16
movsl
fucomip
outsb
xchg
repz
cli
mov
scas
pop
mov
cmp
sti
aaa
fldl
push
out
mov
bound
xor
iret
xor
ret
add
stc
out
loop
ret
rorb
test
mov
in
mov
insb
jnp
cmp
fdivrl
add
jb
jmp
je
cmc
add
sub
jl
test
jb
mov
dec
call
bound
sub
cmpsb
xor
mov
sub
xlat
jmp
insl
nop
push
icebp
mov
push
push
xchg
cwtl
ds
sahf
add
mov
dec
pushf
dec
mov
pop
mov
loop
jmp
leave
sub
push
mov
dec
jns
mov
fcmovu
mov
pop
aas
inc
fsts
pop
cltd
aaa
enter
push
filds
mov
pop
test
jnp
nop
pusha
sub
push
jle
mov
push
xchg
jbe
stos
or
insb
in
jge
jecxz
dec
scas
scas
or
aad
in
sub
pusha
add
dec
loope
jae
mov
dec
sub
lods
push
repnz
and
push
and
pop
fidivrl
xor
xchg
dec
lcall
push
fs
cli
adc
adc
stc
push
fucom
sbb
mov
stos
jg
ret
int
outsl
mov
jo
outsl
stos
std
push
js
outsb
dec
mov
pop
push
adc
scas
push
jns
lcall
fildl
decb
imul
push
add
jae
iret
xchg
jae
mov
lcall
mov
gs
shll
aaa
aam
clc
xchg
inc
popa
or
adc
cmp
xchg
dec
jne
xchg
scas
fs
aas
data16
arpl
ret
and
pop
jae
enter
inc
fidivrs
je
push
out
add
orl
pop
ficoml
xchg
out
sbb
mov
cwtl
jg
xchg
xchg
cmp
icebp
xor
hlt
gs
mov
icebp
mov
js
sbb
dec
pop
addr16
addl
stc
jge
push
and
jae
lock
lcall
sbb
jbe
mov
movsb
sub
out
pop
rolb
daa
mov
push
xchg
rcll
push
push
mov
loopne
jecxz
shll
adc
loop
jmp
adc
mov
call
and
push
cmp
jno
or
sbbl
mov
pop
popa
es
sbb
lods
or
or
jp
and
aad
sub
adcb
adc
xlat
fldl
arpl
mov
scas
jl
aad
and
jnp
in
sbb
jo
test
pop
outsl
sbb
mov
sub
insb
push
and
mov
add
adc
es
mov
stos
js
int
pop
ret
loop
or
mov
imul
pop
leave
aad
test
loopne
int3
pop
jae
sbb
adc
int3
inc
in
les
iret
jp
or
inc
nop
outsl
sbb
cmpl
shrb
xor
lds
int3
idiv
call
int
popa
cltd
mov
les
nop
sbb
in
clc
add
and
add
shll
jbe
push
cmc
call
pop
sbb
dec
inc
cmp
or
cmp
jnp
popa
sbb
popf
aam
aam
xlat
push
inc
mov
mov
lds
add
xor
lret
xchg
out
xorb
iret
mov
sarl
fdivl
xchg
sub
xor
int
xchg
cld
test
jno
jnp
data16
pop
ljmp
sbb
jne
xor
js
out
sub
push
icebp
js
mov
mov
mov
or
sub
outsl
clc
jmp
outsb
mov
push
je
inc
and
add
or
ds
arpl
gs
je
fisubs
sub
lret
inc
call
loop
xor
pusha
inc
sarb
js
pop
push
icebp
sub
adcl
fnstenv
or
xor
jo
mov
dec
and
push
popf
sbb
lret
xor
cwtl
rcrl
pusha
aas
pusha
ret
push
cltd
movsb
movsb
lods
movsb
inc
push
into
iret
adc
mov
cmpsl
lret
mov
ss
pushl
push
inc
ret
jb
push
cli
inc
movsb
loop
fidivs
loop
sub
in
mov
add
ja
lahf
xor
dec
rorl
pusha
mov
jle
std
push
xor
movsb
pop
addr16
cmp
xor
inc
popa
xchg
push
cld
es
outsb
ja
sub
jmp
pop
loopne
xor
push
push
fildl
xchg
push
push
push
lahf
in
call
cmp
or
pop
sbb
fcmove
xchg
repnz
fwait
mov
push
into
mov
mov
sub
mov
addr16
into
mov
dec
insb
xchg
loope
addr16
pop
ljmp
das
lea
repnz
popf
push
arpl
lret
mov
loope
mov
test
test
push
mov
inc
adc
push
popa
rcl
adcl
mov
lret
scas
push
clc
imul
jb
cli
icebp
jns
mov
lea
mov
push
inc
cmp
inc
jmp
stos
cmpsb
ret
cwtl
repnz
sub
mov
sbb
mov
push
xchg
adc
mov
push
xchg
cld
mov
js
test
mov
push
aad
insb
stos
pop
out
imul
xor
out
mov
outsb
cmp
addr16
pop
shll
into
sbbl
pop
xor
xchg
mov
mov
inc
js
rorl
mov
lock
and
xchg
rcrb
testb
test
neg
test
sub
dec
xor
pop
push
jne
std
xchg
int
out
icebp
jo
pop
rcl
rorb
mov
dec
divl
pop
and
in
jns
sbb
xchg
mov
xchg
xchg
and
loopne
push
out
xlat
jbe
and
repz
cs
rcll
jbe
and
jge
in
jge
pop
popa
pop
scas
cli
sbb
or
ss
jno
sbb
inc
mov
lret
int
aad
test
in
adc
fsubs
mov
js
pop
out
dec
mov
mov
mov
lods
lret
mov
or
imul
push
push
mov
mov
pop
or
insl
add
mov
jecxz
lock
or
lea
push
xchg
je
pop
and
and
push
or
loopne
nop
push
xchg
or
xchg
inc
fstps
in
test
ja
fimuls
nop
pop
mov
pop
pop
notb
and
and
mov
pop
push
cmp
fucomp
daa
cmp
jnp
mov
pushf
out
hlt
mov
xor
cmpsb
jno
jns
in
xor
mov
mov
mov
sbb
cmp
push
cmp
test
mov
and
pop
push
div
aas
mov
pop
jno
movsb
jo
push
dec
sbb
mov
xor
push
idiv
pop
pop
sahf
shrl
pop
out
push
jecxz
add
jns
jmp
lds
cmc
mov
adc
mov
xlat
pop
outsb
les
inc
mov
popl
lret
xor
adc
cmp
in
comiss
aad
fldt
xchg
and
shll
pop
mov
arpl
es
add
ficomps
mov
subl
and
aam
fstl
lods
int3
arpl
cmpsl
cmp
adc
cs
or
sub
and
lret
scas
mov
addl
sbb
cld
mov
push
jg
xchg
or
push
lcall
sahf
lcall
inc
shll
sbb
pop
shlb
push
js
mov
jno
dec
test
pop
hlt
jl
nop
mov
mov
stos
mov
lret
cmp
pop
and
adc
icebp
sub
mov
mov
jmp
sbb
jo
mov
stc
and
mov
gs
mov
xchg
xorl
pop
jnp
repz
bswap
cmp
jle
sbb
lahf
adc
jl
jae
dec
scas
insb
dec
jne
inc
rcl
cmp
mov
and
insb
pusha
xchg
lret
or
scas
in
mov
mov
mov
push
sub
mov
cmpsb
mov
mov
notb
shrb
out
or
outsl
dec
xchg
dec
lcall
ds
mov
in
and
mov
pop
in
adc
mov
aam
repnz
dec
ret
mov
stc
mov
jmp
cld
xchg
cmp
mov
mov
fwait
and
push
dec
ljmp
scas
pop
fldenv
push
lds
dec
clc
xchg
push
push
cmp
sub
pushl
inc
loope
and
push
pop
popf
and
lds
aam
dec
add
dec
ret
stos
rcll
push
or
ret
sbb
cmp
sbbl
insl
dec
mov
rcll
decb
dec
lret
call
xchg
shlb
add
int
lds
jecxz
call
movsl
fs
inc
daa
popf
rcll
push
pop
lcall
sbb
popf
jl
loop
mov
cli
aaa
pop
aad
js
sahf
dec
mov
jno
mov
xchg
jle
add
fcmovnb
in
into
or
jmp
shrb
dec
dec
and
xor
inc
nop
mov
inc
out
icebp
mov
dec
cmc
sub
inc
stc
in
lahf
fldenv
cwtl
sbb
imul
pop
in
addr16
dec
inc
xor
xor
sbb
mov
adc
and
movl
lock
sbb
std
in
out
mov
pushf
xor
lret
fistpll
lret
jns
out
mov
cmp
icebp
lahf
rcr
stc
lret
mov
pop
cmpsl
mov
and
cmp
jp
and
push
sbb
xchg
mov
dec
xor
xchg
adc
notb
xlat
inc
arpl
jne
cmp
mov
and
and
pop
mov
or
add
pushf
inc
xor
xor
push
pop
xor
sbb
cld
mov
add
shll
cmp
subb
pop
pop
loop
ds
imul
ljmp
sub
push
mov
inc
int
leave
fnsetpm(287
fbld
outsl
dec
xchg
push
or
pop
pop
cli
inc
dec
mov
lret
sbb
pop
mov
add
int
pop
bnd
xchg
shl
out
lret
push
sahf
pop
pop
mulb
xor
rcrb
pushf
popw
rol
mov
xor
test
xchg
pop
lret
nop
jmp
leave
ffreep
xchg
sub
loop,pt
std
adc
clc
ja
sub
sbb
or
sbb
call
jge
push
data16
out
mov
jae
xor
aam
or
jmp
dec
mov
or
test
sub
mov
jo
push
sbb
out
enter
xchg
add
jg
test
xor
test
fsubrs
pop
xor
mov
mov
inc
sub
loop
add
jns
lret
pop
lcall
shlb
dec
mov
xor
daa
mov
add
xchg
and
lahf
dec
pop
das
in
pop
push
or
lahf
jb
mov
hlt
jecxz
or
cmp
push
lahf
sub
pop
add
in
pop
test
mov
jno
push
loopne
fsub
lret
imul
bound
aas
aas
add
adc
jmp
addr16
adc
fidivl
pop
dec
sbbl
add
lcall
jnp
in
sbbb
inc
xchg
imul
jmp
inc
stc
adc
mov
test
or
adc
and
dec
es
adcl
pop
imul
ds
inc
adc
popf
pop
test
outsb
bound
dec
and
test
inc
mov
arpl
shl
pop
ret
cwtl
rcrl
and
xor
test
push
fstl
popf
fistps
lcall
loopne
jg
mov
leave
pop
and
test
dec
adc
inc
or
xchg
insb
iret
fbld
xor
sub
sahf
xchg
aam
aas
shl
xchg
imul
sbb
test
or
addl
ret
jo
mov
loope
pop
or
or
ljmp
cmp
jl
dec
sbb
mov
push
cmpsl
dec
fistps
dec
fstps
aam
push
outsb
push
test
das
shl
repnz
popa
mov
inc
xor
adc
sbb
popa
pop
dec
adc
mov
lahf
jg
xchg
in
or
int3
int
data16
inc
mov
idiv
imul
mov
mov
add
ljmp
dec
mov
test
leave
in
pop
popf
stos
imul
and
ret
push
pushf
pop
sub
cmpl
inc
cmp
push
out
add
mov
out
mov
stos
add
shr
mov
shll
sbb
je
fld
hlt
jle
cmpsl
sti
rcll
adc
pop
rcrb
jnp
inc
lcall
mov
dec
je
mov
rorl
add
imul
pop
mov
cmp
fisubrs
pop
pop
lock
sbb
cmp
and
jg
cmp
insl
enter
movb
cwtl
mov
std
jmp
aas
ds
addr16
cmp
or
dec
add
jmp
test
xchg
adcl
divl
mov
push
das
jge
out
adc
gs
cmp
inc
sub
movsl
push
pop
cltd
jns
cmpsb
sbb
jmp
pop
xchg
popa
jo
ljmp
or
push
or
push
loop
mov
sub
dec
mov
das
ret
ret
jnp
sbb
mov
xchg
mov
adc
adc
jno
test
mov
jg
in
out
lret
jp
out
jbe
std
das
unpcklps
data16
jb
test
jecxz
fs
jg
xor
into
dec
std
stos
aam
ja
ficoms
push
pop
jl
mov
lret
adc
pusha
cltd
adc
in
jbe
xchg
sbb
sbbb
mov
xor
sbb
or
mov
bound
pop
call
xchg
xor
sbb
push
cmp
lcall
pop
std
jg
lods
mov
iret
sub
push
ret
mov
pop
push
jge
add
push
xchg
pop
movsb
sub
inc
jns
jns
nop
and
inc
shl
pop
fst
adc
shl
addr16
cmpsl
xchg
out
pushf
popf
or
dec
ret
lods
rcll
inc
das
bound
mov
adc
mov
stos
adc
pop
mov
sub
call
mov
jo
scas
mov
jbe
out
movsl
cmpsl
sbb
dec
cmp
jle
add
mov
mov
gs
sbb
sub
jnp
and
and
cmp
ss
xchg
adc
andb
fdivs
xor
inc
jnp
repnz
jo
movsl
negl
or
mov
popa
fcompl
icebp
aas
leave
fsubrs
cmp
mov
ja
fistpll
lods
mov
dec
or
insl
add
add
les
sbbl
sub
inc
mov
mov
outsl
rclb
lret
cmp
call
shlb
pop
enter
and
sbb
jmp
pop
movsl
cli
inc
inc
cltd
inc
and
repz
xchg
pop
push
and
iret
pop
scas
jb
iret
or
pop
xchg
lds
out
and
dec
lret
sbb
out
orb
out
int
mov
push
mov
lcall
dec
shll
dec
lret
ds
adc
lea
scas
mov
movsl
shlb
cmpsl
pop
dec
fimuls
lods
cld
or
ret
psubd
std
dec
xchg
cli
je
int
cld
arpl
push
leave
pop
inc
call
js
enter
pop
in
out
lock
add
pop
mov
jo
jae
cli
cmp
xchg
xchg
cmpsl
pop
sbb
cmpsl
xchg
pop
xor
std
sbb
in
test
dec
cmpsl
add
xlat
or
mov
sbb
int3
xor
aam
jle
cmp
fwait
pop
mov
gs
cld
xchg
mov
push
lahf
jns
and
insb
adc
mov
test
stos
jnp
ja
pop
cltd
lds
xchg
andl
ret
add
popf
mov
cs
fbld
jg
cmc
movsl
movups
push
ret
fisubrl
not
jp
in
sbb
sahf
adc
sub
cmp
cld
les
dec
lcall
lcall
je
mov
scas
inc
das
sbb
scas
cwtl
imul
sar
and
fstpt
leave
cs
loop
lret
push
out
pop
inc
xor
sbb
lea
or
es
jl
sbb
xchg
sahf
movsb
mov
cmpsb
movsl
inc
xor
jo
out
divb
outsb
cmp
loop
testl
mov
flds
aas
mov
mov
lcall
xchg
xor
shll
loopne
cmp
mov
mov
xchg
adc
xor
aad
sub
scas
inc
push
lahf
xor
sub
and
push
push
adc
sub
mov
mov
mov
xchg
mov
adc
sub
hlt
jns
lds
jge
xchg
int
cmpsb
mov
lcall
mov
xor
leave
test
daa
stos
lret
loope
pop
cmp
jo
or
xor
push
or
fmull
add
lahf
sub
cmc
rcrl
push
and
enter
pop
pop
and
ljmp
scas
xchg
push
ret
mov
mov
lahf
pop
inc
mov
sub
mov
mov
dec
dec
inc
sti
cmpsb
push
scas
inc
dec
lock
lods
clc
push
pop
stos
test
xor
pushf
lods
loop
adc
push
mov
mov
pop
mov
push
and
inc
mov
sub
pop
leave
cltd
sbb
or
sbb
popf
arpl
out
pop
es
ljmp
mov
cmc
pop
fdivrs
sbb
sbb
mov
jmp
fcomps
jb
int
faddl
push
xchg
rclb
jl
addb
xchg
decb
iret
dec
fimuls
mov
adc
cli
pop
add
inc
rolb
lret
jb
leave
mov
in
ret
cmp
push
xor
inc
xchg
aam
dec
in
test
pop
push
int3
sbb
testl
push
cmp
jno
push
jb
jg
push
push
push
loop
mov
mov
movsb
lcall
repz
cmp
or
inc
inc
mov
dec
shrb
push
sbb
xor
loop
scas
adc
pop
repnz
jl
push
arpl
or
cmp
movsl
xchg
pop
push
or
int
insl
mov
sbb
push
mov
insl
out
mov
ret
repnz
aam
adc
ficoms
fsubrs
pop
and
test
daa
popf
push
into
mov
sub
mov
int
dec
cmc
and
popf
cmpb
aad
add
sub
in
or
insl
pop
sbb
mov
jns
mov
pusha
inc
xchg
cld
fstl
push
inc
sbb
mov
cmpsb
push
mov
mov
push
jge
pop
call
loop
pop
mov
lret
imul
movsb
mov
push
shlb
add
sti
inc
xchg
sub
jne
shlb
sahf
pop
ret
lea
dec
shrb
jmp
movsl
mov
xor
repz
aaa
pusha
xlat
pushf
mov
cmp
rorb
aad
iret
xchg
mov
inc
pop
sub
dec
mov
cli
push
push
sub
outsb
dec
push
aad
repnz
sub
fmuls
xchg
scas
push
fcomip
push
in
cs
nop
bound
inc
shr
lods
andl
sbb
mov
fcomps
mov
cli
in
pop
stos
inc
std
mov
cmp
or
scas
into
jg
aaa
mov
jne
ss
inc
iret
int
add
jmp
pushf
mov
sti
popf
push
lahf
push
bound
push
stos
add
dec
mov
mov
mov
aad
adc
and
movsb
cld
ja
rcll
es
aas
lods
ret
mov
lods
aam
int3
decl
fwait
gs
fildll
into
or
int3
sub
or
xor
pop
outsl
xchg
push
cmpsb
movsb
pop
imul
adc
pop
sub
out
shrl
out
aaa
sbb
aaa
mov
xchg
in
test
push
sub
pop
pop
cmpsl
scas
mov
movsb
xchg
subb
mov
jo
fcmovb
es
adc
into
ds
push
dec
fidivs
cmpsb
mov
jmp
push
xchg
je
scas
sbb
mov
pushf
adc
mov
loopne
lock
leave
jo
mov
imul
push
jmp
iret
stos
outsb
fdivrl
inc
pop
xchg
cmc
movsb
test
popa
cs
or
adc
ret
call
clc
or
dec
push
cmpsl
test
test
js
xchg
inc
and
push
push
mov
pop
in
adc
int3
inc
fldt
push
aam
ljmp
movsb
sub
and
loope
push
lret
test
inc
pop
xchg
popa
movsb
or
and
mov
insb
push
lret
sub
mov
xchg
mov
mov
inc
fistps
pusha
je
jmp
bound
imul
push
cmpsl
ja
mov
add
push
dec
in
xlat
and
shrb
rorb
lcall
jp
pop
or
fldt
cwtl
in
ficompl
jns
jle
out
cs
mov
or
jae
popa
icebp
fwait
and
outsl
movsl
adc
stos
jl
sbb
ss
aaa
xor
mov
xchg
outsl
arpl
lcall
bswap
mov
sub
cmp
ss
fildll
cltd
out
cmc
mov
push
mov
fadds
mov
jbe
leave
push
xor
pop
ret
xchg
xlat
fndisi(8087
sar
or
inc
xor
dec
xor
cld
rclb
sahf
xor
das
test
pushf
push
insb
pop
push
addl
or
mov
lock
jne
ja
mov
sbb
inc
bound
mov
mov
push
pushf
push
add
lcall
sar
sub
test
jl
pop
mull
int3
cwtl
mov
mov
dec
mov
clc
popa
cmp
push
enter
cmp
push
adc
mov
sbbl
jb
xor
popf
shrb
repnz
aam
lret
mov
cmpb
xchg
andl
mov
add
pop
add
imul
sti
out
cli
jnp
sub
out
jns
dec
inc
test
notb
adc
sub
out
test
pop
mov
sub
xor
adc
push
notb
jl
push
xchg
xor
pop
jle
inc
test
fcmovnb
sub
int3
jbe
push
dec
pusha
pop
shlb
sbb
nop
add
mov
pusha
lcall
inc
xchg
dec
sbb
mov
and
ret
cltd
int3
inc
mov
adc
testl
mov
mov
xor
push
imul
fstl
sub
sahf
push
push
push
ja
xor
out
jbe
fdivl
arpl
pusha
pushf
jbe
int
or
dec
fldl
call
out
sub
repz
push
pop
cmp
dec
cwtl
xorb
mov
fistl
outsl
fstp
je
sub
sub
mov
inc
jmp
mov
jb
and
into
and
pop
int3
or
sub
inc
cmp
push
int
xor
fs
jl
or
insb
mov
xchg
gs
mov
mov
cld
jmp
fcoml
mov
adc
out
xchg
add
orb
lahf
mov
pop
mov
sub
xchg
scas
leave
mov
icebp
shr
test
lret
dec
jne
add
mov
rclb
xchg
je
mov
pusha
fistpll
loope
fidivs
and
lahf
fbstp
lea
inc
adc
push
ucomiss
movsb
clc
scas
ds
inc
mov
test
mov
call
and
cmpsl
shl
and
ret
push
dec
not
jb
rcll
test
add
ret
rol
out
sub
in
arpl
lret
push
pusha
sti
loope
push
cmp
push
ss
movsb
mov
cltd
or
mov
sahf
lahf
mov
lea
das
adcl
lcall
add
or
or
mov
and
aas
das
imul
je
add
push
adc
popa
xchg
cmp
push
mov
mov
cmp
fs
js
lods
mov
jns,pt
cmpsb
sti
aas
testb
mov
mov
mov
cli
test
iret
cli
or
popa
sub
outsl
mov
loop
mov
inc
lahf
in
pop
mov
scas
cmp
lcall
test
dec
cmpsl
imul
jp
xchg
insl
movsl
mov
or
adc
fcoms
adc
sbb
pop
mov
ret
mov
ficompl
cmc
sbb
adcl
mov
test
cs
fcoml
mov
mov
sub
sub
es
mov
lret
inc
xchg
scas
push
lret
pop
loope
mov
xor
andb
lahf
stos
jecxz
sub
fdivs
jle
inc
jb
hlt
aam
test
mov
add
lds
pop
inc
add
arpl
pop
pop
mov
push
xor
or
filds
aas
xor
sbbl
jae
cmp
fs
mov
fldlg2
cmpsb
push
mov
adc
jmp
sbb
push
iret
inc
cltd
mov
imul
jbe
test
add
iret
mov
fs
jae
bound
push
mov
push
arpl
int3
aaa
addr16
adc
or
ret
loope
mov
roll
push
mov
repz
ss
shll
lret
xor
xchg
sub
jae
pop
insl
dec
stc
jb
xchg
mov
xchg
test
xchg
out
ljmp
xor
pop
mov
and
pop
push
mov
rcll
adc
push
fwait
hlt
call
sbb
jecxz
inc
xchg
mov
hlt
mov
shlb
or
xchg
insl
or
cmpsl
sub
lds
adc
pop
hlt
push
adc
lods
dec
cmp
popf
fsub
add
dec
lods
scas
ja
nop
int
jbe
xlat
not
push
and
jae
fisttpll
pop
adc
outsl
dec
jge
repnz
inc
int3
inc
in
scas
xchg
mov
sbb
imul
pop
jnp
aaa
rcll
mov
sarl
andl
sarb
inc
test
mov
pushf
cmp
and
mov
addl
insb
in
xchg
xor
lods
add
lock
lea
outsb
test
sub
pop
push
mulb
mov
int
dec
lods
sbb
add
inc
mov
pop
pop
push
cwtl
xchg
bnd
xor
push
loope
sub
lds
push
test
sti
sbb
xchg
pushf
mov
add
fidivl
cli
mov
push
dec
add
dec
insb
jg
inc
ja
into
pop
sbb
jae
pop
enter
or
xchg
jns
mov
jmp
movsl
mov
jmp
fstps
mov
and
cmp
jnp
shll
and
xchg
cld
adc
rorb
mov
fildll
test
lahf
jnp
inc
push
inc
or
test
cs
popa
es
dec
inc
or
jl
inc
sub
ss
adc
add
lods
pusha
lcall
and
pop
frstor
pushf
or
and
mov
in
das
mov
dec
insl
inc
cmpsl
js
xchg
mov
jo
stc
xlat
push
xchg
jo
lahf
push
pop
jnp
sub
or
or
sti
das
inc
xchg
bound
enter
test
inc
mov
leave
jns
push
or
nop
mov
sub
into
popa
or
es
mov
cmp
sbb
pop
mov
pop
pop
dec
or
pop
mov
cwtl
outsb
xchg
out
cmpsl
test
mov
sahf
stc
xchg
xor
adc
sub
xchg
or
jle
mov
pop
test
cli
das
fdivr
inc
addl
stos
dec
xchg
pusha
xlat
mov
cmp
and
jmp
mov
mov
push
inc
mov
and
lret
in
cmpsb
stos
push
jae
fstps
sbbb
inc
pushl
adc
lret
loope
mov
or
pop
dec
jg
sbb
outsl
mov
sub
sub
dec
xchg
xlat
sub
xor
cmpsl
mov
xor
adc
or
push
test
and
push
push
pop
test
sub
mov
lret
sbb
xor
pop
out
dec
jge
les
gs
dec
mov
fsubl
cmp
rclb
shl
stos
stc
dec
or
sub
enter
or
sub
test
jb
aas
testb
jno
dec
mov
mov
and
jle
aaa
jnp
jae
or
mov
addb
imul
ficompl
inc
sub
test
gs
sar
sbb
divb
ds
sbb
scas
sarl
inc
dec
push
out
iret
mov
xchg
in
ret
shl
push
std
pop
insl
add
outsl
call
jmp
inc
aaa
outsb
out
dec
push
mov
lods
cmpsl
insl
ret
pop
push
out
loop
mov
xchg
icebp
test
sbb
xor
push
addr16
adc
aaa
dec
sbb
mov
dec
test
sbb
orl
out
lods
and
adc
cld
sahf
jnp
leave
in
adc
daa
inc
aad
cli
std
popa
negl
xchg
int3
or
inc
les
xchg
push
add
jo
repnz
in
test
cmp
and
cmp
popf
rcll
rorl
mov
xchg
outsl
nop
nop
imul
mov
je
fsubl
lcall
mov
cmc
in
adc
sbb
pop
sub
sbb
in
ret
push
dec
cmp
pop
and
into
popf
into
pop
repnz
aaa
xchg
mov
lret
out
lret
adc
orb
cmp
hlt
mov
loop
cmp
push
addr16
jno
adc
mov
aam
pop
adc
andl
push
sub
inc
daa
mov
aas
enter
outsb
repz
packuswb
lcall
loopne
rcrb
add
test
mov
jle
pop
mov
sub
fmulp
int3
sub
add
jecxz
test
push
stc
jo
fiadds
imul
lcall
or
mov
scas
pop
dec
enter
sub
sub
rcr
adc
dec
and
fstpt
pop
add
aad
mov
sbb
pop
ss
cs
add
aad
mov
bound
or
repz
ficoml
outsb
and
cli
jbe
enter
sbb
mov
mov
imul
bound
push
lret
pop
gs
add
ja
ss
pushf
and
out
sbb
mov
gs
lahf
adc
dec
sub
push
cmp
sbb
clc
stos
jecxz
scas
pop
cmpsb
ret
ljmp
out
inc
pushf
lock
pop
mov
ret
jne
movsb
imul
sahf
xor
cmpl
mov
adc
inc
inc
out
mov
dec
mov
xchg
loope
scas
pop
dec
ljmp
mov
cmp
sbb
inc
adc
cmp
sbb
inc
xor
mov
hlt
lcall
add
sub
cmpsb
in
hlt
aad
stos
mov
and
sbb
jb
sbb
enter
inc
inc
inc
push
ret
jecxz
add
pop
mov
sub
xchg
mov
and
movq
adc
fsubs
aas
and
fcoml
in
outsb
xor
push
push
in
push
and
ja
jno
xchg
inc
or
sbb
inc
inc
int3
inc
jb
or
lods
xchg
fucompp
fwait
add
jo
jle
pusha
nop
cmovge
sbb
sbb
and
ja
dec
mov
lahf
add
cmpsb
jge
in
mov
ffree
push
imul
cmp
cmc
mov
xchg
out
rcrl
or
xchg
movsl
adc
push
push
mov
hlt
jg
push
jle
dec
repz
sti
fdivrl
add
nop
dec
fldt
mov
sbb
out
xchg
cmpsl
dec
out
stos
jl
cli
adc
dec
sti
adc
inc
test
repnz
sti
adc
insb
frstor
pop
or
push
fsubl
sbb
push
push
mov
or
fs
or
enter
jno
imul
lcall
cs
push
jp
lods
or
mov
sti
lods
pushl
jb
mov
movsl
mov
sbb
ss
out
fnsave
pop
jle
and
mov
mov
push
xor
mov
shll
mov
fisttps
jg
out
data16
inc
and
xlat
fcoms
cmp
sub
adc
sub
or
std
pop
hlt
or
jecxz
ror
add
inc
push
adcb
cmp
adc
lock
sub
loopne
insb
rclb
push
adc
add
int
sub
mov
inc
mov
xchg
xor
cltd
dec
push
les
in
pop
lcall
push
pop
cmc
rclb
adc
xchg
sbb
cmp
bound
mov
leave
gs
inc
outsb
dec
out
iret
adc
cmpl
sub
dec
cs
and
cmc
fsubr
imul
push
stc
or
or
inc
xorb
ret
push
xor
inc
das
test
pop
inc
mov
stos
ljmp
pop
jge
xor
into
ljmp
and
rcll
aad
shll
jp
xchg
ds
cwtl
daa
dec
pop
pusha
cli
xchg
xchg
push
enter
loopne
inc
mov
pop
cmp
out
add
lods
mulps
ds
push
fcomps
fstpl
aad
xchg
cmpl
ret
movsb
scas
push
gs
outsl
xor
cli
push
dec
cld
xchg
adc
es
cmp
inc
inc
cmp
je
idivl
int
adc
xorb
pushf
out
testb
push
and
test
das
mov
rcrb
shll
je
in
or
popf
cmpsb
flds
cmpsb
inc
cmp
pop
insb
stos
pop
das
mov
test
cmpsl
es
repnz
and
ret
sub
pop
jne
sub
popa
mov
mov
cmpsb
pop
cmpsb
movsl
mov
cs
movsb
fadd
jns
lds
fstpl
aas
popa
outsb
pop
fsubl
fsub
inc
or
and
jge
mov
add
ss
stc
pushf
pop
xchg
adc
je
cld
out
add
mov
and
arpl
mov
mov
or
lods
and
jnp
test
sub
push
pop
test
fiadds
repnz
js
aam
ljmp
or
lahf
mov
int
xor
or
push
nop
mov
dec
mov
pop
leave
xchg
jbe
rorb
xchg
aad
loopne
bound
insb
pushf
xor
push
cmp
and
mov
call
mov
and
mov
pop
pop
push
cmp
xlat
sarb
or
movsb
flds
adc
xor
ja
lcall
sbb
jecxz
jbe
pop
mov
imul
int3
test
jmp
pop
add
xlat
push
pmulhuw
push
xchg
mov
out
andl
clc
jbe
scas
cmc
lds
scas
mov
mov
push
imul
push
cli
dec
outsl
cmp
mov
ljmp
fwait
cmp
xor
loopne
mov
jl
outsb
xchg
cmp
mov
dec
lods
lret
test
ret
mov
test
dec
enter
pop
xor
fstl
mov
in
xchg
cli
lcall
fcmovne
cltd
pop
and
lds
outsb
and
mov
leave
stos
movsl
sarb
sbb
inc
std
adc
sub
push
daa
lret
push
mov
mov
rcr
pop
into
fimull
pusha
mov
mov
jo
aas
jg
dec
cli
jno
mov
fisubrs
push
jns
test
call
clc
mov
loope
lods
push
pop
push
mov
movsl
add
cwtl
add
test
es
xor
icebp
sarb
push
js
sub
test
movsb
and
xchg
add
pop
jg
mov
inc
mov
mov
mov
mov
lds
xor
lods
popf
mov
iret
lods
imull
ss
jp
adc
jecxz
cli
add
sbb
movsl
aaa
xor
and
push
test
mov
or
gs
xor
and
loop
mov
pop
xor
enter
pop
gs
fdiv
or
add
mov
clc
xor
dec
cld
pop
outsl
leave
add
subl
pusha
or
inc
push
pop
aam
jle
mov
xlat
push
fidivrl
ljmp
push
dec
test
fisubs
push
test
pop
push
pushf
movsl
pop
mov
lock
rorl
pop
dec
rcrb
ret
mov
cmp
and
jmp
xchg
aam
dec
in
cwtl
add
add
and
into
divl
fdivp
aad
inc
js
pushf
adc
pushf
jle
or
xor
sbb
lods
sub
and
lcall
in
xchg
mov
sti
nop
gs
shlb
push
sbb
push
scas
sub
in
cld
cmpsl
fnsave
sbb
mov
dec
into
fstpt
lods
xor
and
or
hlt
jo
pushf
and
pop
push
mov
lcall
les
xor
stos
xchg
mov
xor
push
cmp
cmp
jg
sub
xchg
dec
lock
cmp
cmpl
aaa
lea
orl
test
inc
clc
popf
adc
out
sub
fisttpl
leave
icebp
mov
lahf
pusha
pop
adc
clc
dec
lods
insb
adc
jge
and
fdivrs
mov
addr16
mov
mov
repz
stos
jmp
sbb
lcall
sub
out
movsb
jnp
push
pop
movsl
sbb
je
fwait
sbb
test
imul
pop
rcl
mov
jl
lds
dec
rcrl
mov
in
inc
mov
mov
xchg
roll
fistpll
lea
sub
push
cltd
mov
add
sub
sbb
jno
cmp
sbb
add
sarb
dec
xchg
sahf
cli
insl
movl
jge
or
lds
sub
inc
mov
xor
or
dec
mov
xchg
lea
in
jmp
jecxz
jp
mov
sti
adc
add
adc
sub
lods
sbb
lret
mov
mov
out
imul
mov
adc
jne
std
jp
cmp
adc
jmp
push
pop
adc
aad
out
popf
sub
es
gs
hlt
cwtl
es
movl
es
sti
xchg
rcr
loop
mov
lea
ja
or
cmp
push
pop
or
out
mov
out
pop
push
mov
fists
mov
and
out
stos
mov
or
dec
lcall
lock
pop
cmp
mov
jmp
lcall
out
js
cwtl
or
mov
pop
mov
cmp
mov
mov
shlb
mov
in
imul
xchg
ljmp
out
pop
lods
lea
jle
in
lock
and
loope
je
or
xchg
and
add
adc
xchg
shll
sub
aaa
adc
cmpsb
fcompl
cli
cli
les
sbb
cs
repz
inc
test
js
sbb
insl
aas
jbe
add
mov
mov
push
mov
pop
in
subb
mov
inc
movsb
out
mov
cld
pop
jmp
popa
mov
cwtl
pushf
add
xchg
movsb
mov
mov
sub
fimull
stc
mov
xchg
sarl
xchg
ror
aam
lock
cmpl
pop
das
dec
jle
bound
sbb
adc
jns
mov
out
clc
or
xor
dec
popf
gs
mov
mov
push
mov
push
std
sahf
or
notb
push
ljmp
sbb
push
or
out
int
iret
fwait
pop
push
insl
adc
test
pusha
ret
cmp
or
ds
jg
insb
jp
and
sahf
pusha
inc
cli
sti
add
mov
jl
cld
dec
push
cld
cmp
dec
push
lahf
dec
jmp
push
sbb
sub
dec
or
sti
pusha
mov
enter
addl
fwait
add
or
cld
call
movsb
or
fsubrs
pop
shrb
pop
mov
iret
in
sub
add
mov
mov
out
cmp
movsb
add
js
fwait
add
xor
andl
fadd
inc
push
lea
xchg
xchg
cmp
cwtl
push
enter
adc
bound
scas
adc
push
fcmovne
dec
in
xor
or
ret
adc
popf
lds
mov
push
andl
stc
xchg
out
loopne
ret
aas
arpl
cli
ds
or
jge
stc
out
jecxz
mov
data16
lahf
mov
or
jae
icebp
pop
or
or
push
inc
or
mov
out
out
outsb
insb
or
mov
sub
test
imul
ficompl
add
pop
inc
sub
dec
nop
cs
push
mov
pop
push
imul
pop
adc
inc
lds
sahf
xchg
cmpsb
sub
pop
ret
mov
xchg
cmp
jecxz
push
in
jg
cs
mov
jp
mov
out
cmp
imul
pushw
jl
inc
mov
loopne
mov
aas
leave
adc
mov
xchg
inc
pop
jo
gs
push
pop
push
pop
inc
pop
pushf
pusha
sarb
sub
jmp
dec
dec
adc
lcall
sbb
push
cwtl
sub
rorl
cmp
add
cltd
lcall
sub
jg
pop
rcll
aad
xor
mov
jae
inc
int3
in
dec
dec
push
loopne
das
push
rcll
hlt
mov
cmp
pop
fistl
jne
add
in
pop
xor
insb
fcomi
lret
mov
xorb
push
in
insb
add
add
dec
fidivl
and
push
dec
call
std
xchg
data16
subl
out
push
mov
adc
into
outsl
sbb
jno
push
dec
ljmp
mov
xor
and
pop
xchg
push
inc
shll
cs
push
and
mov
jmp
sahf
or
jns
inc
pop
push
repnz
jl
insl
push
mov
loop
imul
sbbl
lret
mov
lret
jae
push
test
pushw
sysexit
pop
pusha
or
mov
jo
add
leave
mov
sbb
push
ret
insl
lahf
push
dec
add
imul
inc
leave
pop
lea
sbb
mov
aaa
shr
outsb
add
add
shrb
jo
ret
dec
mov
lcall
inc
pop
xchg
pop
lcall
lret
dec
in
add
pusha
jbe
arpl
adcb
pop
cs
or
mov
add
test
enter
sub
sbb
and
xor
cmp
jle
je
lret
test
aam
insb
sahf
bsr
jne
insb
icebp
je
lock
cwtl
push
dec
ss
shrl
mov
cmc
and
adc
mov
rclb
mov
xchg
in
hlt
pop
stc
adc
cmp
jecxz
sbb
iret
push
sub
repz
sbb
jo
adc
inc
add
fdivrl
add
data16
or
popa
icebp
aad
mov
sub
or
test
pusha
pop
into
sbb
mov
xchg
enter
adc
mov
shll
cmpl
sarb
rclb
cmpsl
inc
fxam
push
and
jbe
adc
jg
divl
mov
out
jge
push
jns
stos
xchg
xchg
cs
xchg
jp
aam
mov
fcoms
pop
ss
fdivr
insb
push
pop
inc
sti
rorb
xchg
cmp
repnz
cmpsl
mov
cmpb
pop
pop
mov
push
adc
jnp
dec
dec
es
faddl
ss
jae
add
js
mov
mov
negl
mov
xor
insb
xlat
sub
push
xor
outsl
in
sub
mov
xchg
push
fstps
cltd
dec
les
xchg
jns
out
je
loopne
sub
loope
cmc
imul
xor
leave
or
mov
std
mov
sbb
jl
fs
sahf
adcb
sbb
popa
shlb
mov
xor
fnsave
jno
addr16
mov
addb
in
fs
rcr
cmpsl
jge
mov
fs
push
inc
lds
and
shlb
dec
mov
cmc
inc
popf
in
pop
or
insb
sub
ret
das
sar
ja
jbe
push
cli
das
addl
fwait
cmc
dec
ljmp
fnstcw
cmp
pushf
cmpsl
and
pop
aas
movsb
daa
sub
stos
or
xlat
enter
mov
sbb
cmp
pop
bound
dec
lret
inc
aaa
mov
insb
mov
lahf
mov
xchg
mov
les
add
ljmp
adc
loop
scas
mov
mov
mov
cmp
and
mov
shll
fildl
mov
pop
jae
cli
pop
and
push
xchg
in
in
pop
push
xchg
addr16
stos
mov
or
sbb
aaa
pop
pop
add
pop
push
mov
sbb
fildll
stc
in
arpl
hlt
lods
and
jl
mov
stos
push
pop
cld
fwait
ja
movsb
mov
sbb
inc
scas
mov
push
lods
mov
loop
sbb
fidivrl
lret
xchg
push
xor
sbb
fwait
out
pushf
shll
and
dec
jmp
ret
popa
push
pop
enter
test
mov
jecxz
js
xor
jl
fisttpll
addb
icebp
push
mov
scas
ds
sbb
cmc
sbb
pop
sbb
outsl
add
push
pusha
roll
dec
je
mov
adc
out
xor
shll
jno
and
jnp
aad
inc
fstpl
pop
xchg
scas
mov
enter
mov
cmp
fisttps
jle
fucom
popf
and
or
pusha
jb
mov
push
mov
adcl
and
mov
das
push
es
sub
rorb
aas
dec
lods
dec
jnp
jne
push
sub
in
sbb
add
xorl
jns
scas
jmp
dec
mov
test
mov
mov
adc
cmp
cmpsl
paddusb
sbb
adc
fdivl
cmp
shlb
aad
jle
bnd
sbb
and
sahf
shll
sahf
sbb
push
mov
stos
rcrl
or
mov
push
xor
lcall
std
sub
stos
insl
ret
xchg
addr16
or
adc
xor
push
pop
push
jmp
fisttpll
mov
cmpsb
sub
ret
pop
cmp
jb
sub
xchg
push
out
ljmp
icebp
xorl
loope
mov
js
ret
stos
dec
inc
inc
fadd
daa
nop
mov
repnz
pusha
jne
cmpsb
cmp
push
ljmp
jb
std
mov
mov
rcll
mov
pushf
push
hlt
stos
xchg
insb
and
mov
das
inc
xchg
adc
push
ror
pop
add
dec
filds
jp
bound
ret
adc
ret
or
add
scas
mov
or
mov
mov
mov
and
out
inc
inc
loop
pop
stos
bound
mov
in
negb
jae
xor
cmp
pop
inc
jge
jl
push
jne
sbb
ja
cli
pushf
mov
jge
pop
rorl
sub
or
mov
ret
loope
arpl
loope
test
pop
cmc
jl
cmp
in
sbb
lds
stc
xchg
fucomi
mov
cmpsb
inc
sub
sbb
and
lods
mov
popl
lcall
ja
stos
out
adc
sub
sub
jne
sbbb
in
inc
hlt
dec
test
stos
rcl
sti
dec
movsl
sbb
jge
aas
inc
fsubrs
jp
jae
ret
orb
int3
mov
xor
pop
jge
mov
pop
mov
rcl
dec
insl
lret
shl
out
lea
cwtl
in
lea
and
mov
dec
jg
test
clc
movsb
cmp
rolb
inc
jne
addl
push
jo
aas
das
vmovd
xor
cmc
xchg
std
daa
outsl
or
fwait
xor
insl
xor
add
insl
xor
mov
orl
sbb
and
inc
rclb
jle
test
or
jae
hlt
dec
out
loop
fs
addr16
xchg
js
adcb
mov
mov
pop
mov
pop
shlb
test
sbb
adc
inc
or
xchg
aam
aaa
cld
xchg
sbb
fwait
inc
outsb
cmc
jne
mov
int3
mov
fcompl
aad
add
idivl
in
cmp
lret
test
lcall
mov
sbb
jle
and
adc
mov
arpl
jmp
dec
xchg
loope,pt
js
mov
dec
cmp
xor
lea
push
or
xchg
and
cmpl
pusha
mov
fwait
cmpsl
jl
sub
push
lcall
inc
push
adc
rorl
shr
mov
add
pop
pop
xchg
push
lret
stos
xor
aam
xchg
shrl
xchg
add
add
dec
mov
ja
xor
pop
inc
or
aad
add
outsl
push
imul
jp
xor
pusha
bound
movsb
bound
popf
mov
cli
jne
pop
push
adc
or
dec
addb
cmpsb
data16
sub
sub
mov
mov
call
lods
sub
mov
add
sub
shr
dec
xchg
daa
lods
cwtl
sub
in
and
mov
cmp
xchg
jle
xlat
sahf
pop
xor
scas
clc
sti
rcll
or
add
mov
xor
ss
in
inc
mov
dec
lret
cld
sub
xor
jno
push
popa
pop
dec
pop
sarl
add
fs
push
rcl
mov
loopne
dec
xorb
data16
stos
inc
stos
lahf
jge
dec
outsl
outsl
cs
sub
mov
mov
addr16
or
jl
lods
jno
dec
push
mov
and
pop
and
incb
inc
ja
pushl
loopne
jl
ja
jno
outsl
dec
fildll
sbb
or
ss
addr16
inc
fcoml
stos
stos
lahf
pop
xor
xor
mov
add
pop
mov
pop
andb
sub
dec
leave
sbb
dec
daa
pop
jae
mov
sub
add
jl
dec
jae
stos
test
pop
fadds
out
repz
and
ja
push
aam
push
sub
jg
adc
pop
adc
mov
int
rcll
lea
xchg
jb
cmp
or
cmp
push
stos
pop
in
mov
xchg
imul
sbb
sbb
add
and
mov
aaa
clc
or
imul
andb
cltd
test
mov
in
mov
sarl
lock
dec
test
bnd
mov
mov
pusha
push
jns
xor
mov
mov
loopne
scas
in
test
popa
sbb
les
mov
push
adc
lret
xor
mov
jo
shl
adcb
mov
fscale
insl
push
mov
cmp
cmc
push
out
sub
xchg
nop
stos
mov
pop
test
adc
xchg
sbb
daa
sub
adc
out
shr
arpl
pop
push
xchg
les
lret
push
dec
out
xor
lret
push
aaa
add
inc
xchg
aaa
mov
sub
and
mov
pop
pop
mov
mov
ss
cmpsl
mov
lea
lods
jp
aad
test
cs
aad
xchg
fnstenv
xor
push
testb
and
fistps
add
mov
push
sarb
aaa
out
xchg
mov
hlt
inc
push
add
jge
les
mov
and
insl
add
xchg
adc
xchg
test
out
aaa
andb
ret
sbb
xor
enter
mov
and
mov
mov
inc
cmp
clc
movntps
gs
int
jg
popa
ljmp
lahf
mov
stos
or
jle
iret
in
ret
dec
add
sahf
pop
stos
sbb
mov
jb
inc
sub
in
sbb
adc
mov
rclb
mov
mov
xchg
iret
add
dec
xlat
mov
outsl
fsubrp
in
loop
jg
add
sub
out
xchg
cmp
enter
stos
aam
js
out
add
clc
cmc
xchg
imul
sbb
aas
adc
inc
cmp
and
ror
push
ret
pop
arpl
gs
ds
lock
pop
test
jle
and
mov
inc
xor
push
int3
js
fmull
mov
mov
test
fisttpl
out
push
sbb
sub
pop
xor
xchg
scas
movsb
mov
mov
mov
lods
cli
pop
mov
addr16
jno
loope
adc
lahf
inc
xchg
adcl
inc
xchg
jmp
mov
into
adc
imul
jnp
adc
adc
adc
int
pop
popf
lods
or
mov
mov
push
testl
cmpb
lods
and
lea
lret
or
loope
mov
mov
sahf
cli
cmpsb
mov
cmpxchg
xor
push
daa
mov
popa
cmp
movsb
xchg
shlb
push
es
push
or
cmc
xlat
jl
xchg
loopne
movsl
sub
sti
ljmp
jnp
adc
push
inc
add
jb
xchg
aad
negl
sub
jl
lret
inc
jb
jnp
mov
and
mov
cld
das
xor
push
sbb
cmp
cmp
dec
mov
aam
loop
out
xlat
or
sub
mov
es
xchg
jae
stc
inc
push
xor
out
pop
out
jle
pushf
pop
repnz
jle
jo
loop
cld
cltd
add
mov
add
int3
inc
push
lcall
jge
or
sbb
iret
xor
or
jp
scas
ja
adc
jae
pushf
lcall
mov
lahf
and
cwtl
ret
push
es
dec
add
aas
fcomps
dec
test
lcall
jno
into
xor
ret
pop
xchg
aas
outsb
decb
push
adc
or
aas
xchg
xchg
sti
push
xchg
adc
mov
lods
pop
imul
fldenv
dec
cmpl
iret
or
mov
mov
testb
nop
cmp
adc
pop
repz
mov
shrl
adcl
xchg
fbld
mov
out
push
lcall
fstps
jb
lods
push
sub
insb
jp
out
out
aas
mov
ds
repnz
add
ret
sub
fmuls
adc
lret
mov
jbe
ljmp
xchg
bound
outsb
cmpsb
and
aas
cmp
sbb
test
sahf
adc
mov
mov
aam
or
imul
lret
sub
dec
in
sahf
stos
insb
sbb
hlt
repnz
mov
aad
push
xchg
stc
mov
test
and
ret
test
cs
jo
rolb
push
xchg
daa
int
shrb
ljmp
pop
test
into
cmp
xor
cwtl
dec
js
addl
jae
nop
sbbl
push
sub
inc
insb
sub
adc
hlt
aam
imull
sub
mov
ja
push
xchg
push
out
adc
add
shrl
daa
stos
add
jl
inc
xchg
mov
push
dec
adc
push
jmp
dec
cmc
and
cmp
pop
call
cmp
cwtl
aas
sti
pop
mov
pushf
cmp
cld
int3
inc
inc
sub
push
faddp
push
hlt
lock
push
fs
or
adc
inc
movsl
lock
out
lcall
fnsave
rolb
mov
bound
mov
shlb
inc
push
sbb
adc
pop
xor
in
mov
add
adc
xchg
in
xchg
xlat
ss
push
jns
xor
loopne
arpl
xor
pop
lock
aam
sar
adc
in
inc
adc
ds
jle
add
mov
adc
ds
test
xchg
test
mov
loopne
xlat
mov
xlat
cmp
out
push
adc
loopne
or
sar
dec
rorl
dec
insl
jle
pop
lock
cmpsb
jae
sub
gs
or
mov
in
test
int3
out
repnz
insl
rorl
xor
jl
xorl
out
sub
cmp
sbb
inc
shll
movsb
cmp
ficoms
mov
mov
je
cld
inc
sahf
decl
in
loop
fldl
sbb
add
dec
ss
xchg
cvtps2pi
mov
mov
mov
sbb
lcall
loope
xor
popf
aam
sbb
dec
sti
imul
xor
enter
push
inc
pop
jmp
push
xchg
xchg
or
leave
insl
arpl
sbb
test
fbstp
cmp
push
adc
sub
ss
stc
xor
xor
adc
jg
jl
jne
test
inc
push
mov
adcl
mov
mov
subb
inc
fnsave
dec
sub
lds
dec
add
fsubl
cmpsl
jmp
pop
sub
std
insl
pop
clc
pop
and
pusha
subl
dec
add
js
out
pop
les
ss
stc
add
jge
add
xor
lods
aam
inc
lea
cmp
mov
inc
lods
pop
xlat
lret
rcll
rorl
jb
mov
cmp
imul
adc
mov
into
push
inc
int
xchg
mov
addr16
js
je
xchg
aaa
dec
test
cld
mov
xor
mov
mul
push
popf
push
xor
inc
out
mov
mov
dec
add
mov
cmp
fcomi
jnp
fstps
and
imul
jl
adc
movsb
and
or
and
roll
xchg
adc
or
push
push
ret
out
push
sarl
jge
or
add
cmp
xchg
cmc
scas
mov
pop
enter
push
xchg
mov
in
les
xchg
sbb
jp
and
clc
in
ss
push
pushf
mov
sub
sbb
add
add
into
imul
and
cmp
stos
stc
test
mov
mov
sahf
pop
lahf
xor
lret
in
lds
outsl
les
pop
cmp
push
lock
lock
repnz
lds
or
cmp
ficoms
mov
mov
pop
mov
subb
jae
negl
push
mov
es
cwtl
clc
ja
xchg
push
inc
cmp
xorl
in
cld
idiv
pop
push
jb
les
mov
hlt
cmp
imul
push
arpl
adc
stos
add
dec
rorl
and
jle
cltd
sub
sub
andl
mov
xchg
cwtl
out
mov
jl
pop
xchg
jl
pop
pop
test
sub
fwait
test
inc
out
cld
lret
cmp
dec
lahf
les
dec
fcmovu
jno
dec
xchg
fdiv
push
xor
pop
xlat
xor
rolb
cmp
out
test
xchg
fcomip
into
insl
lcall
jnp
icebp
cmp
shlb
insl
mov
imull
lahf
jl
andb
int
fiaddl
outsl
test
outsb
xlat
or
mov
enter
inc
in
add
cmp
lret
or
aad
sub
sti
test
add
ljmp
popa
inc
andb
cmc
lea
lods
and
sbb
aad
mov
adc
mov
cwtl
aaa
mov
mov
fsubr
fidivs
test
mov
loopne
loopne
fimuls
mov
lods
jb
sub
jne
icebp
pushf
cltd
int
sbb
stos
call
incb
jp
mov
dec
jl
imul
lods
sub
cwtl
frstor
jge
dec
dec
dec
stc
sub
jmp
pushf
cwtl
pop
push
nop
sub
inc
xchg
cmp
cltd
jmp
mov
jecxz
aas
rcrb
or
iret
out
je
dec
adc
xchg
int
push
loopnew
ljmp
add
int3
add
mov
jo
xor
enter
movsb
cmp
sbb
mov
mov
pop
mov
fcmove
shlb
pop
enter
aad
fwait
lods
in
and
jne
inc
lahf
xchg
mov
in
sahf
and
inc
into
movsb
inc
movsb
push
xorb
mov
pop
call
jecxz
sarw
addr16
int3
lods
jne
out
push
jecxz
or
inc
shlb
lahf
aaa
bound
pop
sbb
dec
mov
ja
xlat
add
push
fiaddl
lea
je
nop
mov
jae
clc
aam
cwtl
pop
cmc
mov
xchg
call
jne
in
daa
inc
ja
popf
hlt
lcall
pop
pusha
data16
lock
dec
sti
or
mov
movsl
mov
fldt
pop
push
push
jns
or
jo
imul
mov
jo
imull
adc
sbb
test
push
jle
add
ja
xor
and
fidivrl
insl
cmp
pop
dec
sbb
je
and
mov
into
and
mov
and
in
fistl
mov
jecxz
stos
cmpsl
jmp
or
decb
divb
mov
mov
add
je
sbb
popf
mov
mov
arpl
jmp
and
mov
cmp
adc
sub
loopne
les
jl
loope
fnstsw
out
imul
ss
int3
rorb
cmp
xchg
dec
in
roll
loop
pusha
push
pop
pop
sti
sub
adc
lcall
roll
scas
and
jg
pop
movsb
gs
cli
aas
repz
je
mov
bound
mov
and
push
mov
sub
push
and
stos
lahf
xor
popf
aaa
sti
dec
mov
pop
cmc
sub
pop
cmp
mov
mov
pushf
ja
fmul
dec
and
test
mov
xor
inc
mov
rcrb
sbb
decl
push
dec
and
mov
divl
repnz
in
out
pushf
add
lahf
popf
xor
push
lret
pop
mov
jp
das
push
jecxz
scas
push
pop
sbb
in
lds
sub
addl
popf
jp
mov
push
outsl
sbb
cmp
mov
es
loope
or
mov
xchg
lods
push
sbb
or
jge
lods
push
enter
jne
loop
xchg
mov
imul
mov
jo
mov
sbb
lock
jle
dec
pop
mov
pop
test
cmpsb
and
daa
insl
jae
cmpb
inc
lods
call
mov
das
bound
cs
pop
mov
mov
or
and
outsl
jle
pop
xor
call
scas
mov
fidivrs
fidivrs
in
cmp
fcoms
leave
arpl
fdivl
lea
inc
and
shrb
sub
les
inc
and
add
jge
xchg
into
adc
nop
lea
or
and
movsb
js
les
lds
push
sub
dec
mov
call
in
dec
jl
iret
ja
or
push
dec
lds
or
mov
testl
ljmp
pop
inc
lods
rorl
cld
dec
aad
xchg
push
push
test
cmpsb
or
fildll
sub
inc
sub
lods
and
out
sub
ret
test
ret
pop
lret
sbb
adc
cmp
sub
xchg
jns
hlt
cmp
pushf
fsubs
xchg
or
cs
lods
push
lret
inc
lahf
lahf
mov
cmp
xchg
sub
inc
movsl
mov
mov
sbb
inc
icebp
fsubs
lods
adc
loopne
ret
mov
fcmovnu
dec
loop
lock
jg
jb
mov
ret
push
sbbb
push
cs
pop
fisttpll
adc
xchg
mov
mov
call
cmp
sub
adc
adc
aam
out
dec
lret
lret
cli
std
add
pop
pushf
subl
inc
add
test
adc
jecxz
dec
aam
sbb
push
or
repz
cld
fwait
pop
inc
es
cmc
out
pop
je
shll
dec
cmp
mov
cmp
cld
mov
gs
push
cmp
in
dec
test
out
jmp
imul
aam
dec
les
cmc
ljmp
xor
cmp
mov
jge
cltd
cltd
sub
leave
mov
outsb
mov
movsl
add
leave
test
cli
data16
and
gs
xchg
cmpsb
push
cmp
xchg
fs
sarb
inc
and
fstpl
sub
pusha
xor
movb
mov
fimuls
movsl
jmp
rolb
std
inc
pop
in
add
stos
fs
cmpsl
icebp
gs
sbb
xor
dec
shr
mov
inc
adc
push
movsl
leave
mov
icebp
lds
in
arpl
jle
push
adc
pushf
loop
dec
inc
xchg
mov
sbb
xchg
test
rcrl
lea
mov
shlb
dec
lret
xchg
jno
arpl
cmp
lcall
mov
jmp
bound
push
adc
lcall
popa
jecxz
into
jns
and
mov
les
cmpsb
popa
jge
dec
roll
sbb
jle
lret
and
stos
xor
push
jno
mov
pop
pop
sbb
aam
fsubl
push
push
enter
push
jne
lods
mov
mov
inc
push
lret
dec
mov
dec
fwait
mov
push
jmp
xchg
cmp
stos
in
movsb
adc
mov
mov
push
push
push
cwtl
pop
jl
xchg
and
xchg
adc
popf
xchg
fistps
addb
xor
stos
xchg
mov
jmp
fwait
push
stos
sub
mov
cs
lods
mov
push
or
pop
fcoml
mov
dec
sbb
jmp
xor
mov
scas
pop
adc
stos
pop
xor
ds
mov
xor
mov
cmp
fld
int3
out
aas
mov
stos
jb
lea
outsb
incb
pop
imul
ljmp
or
pushf
nop
aam
pop
mov
test
es
pop
insl
xor
pop
gs
push
adc
dec
ss
gs
repnz
js
jae
sahf
xchg
or
push
test
dec
sbb
arpl
je
pop
push
fimull
push
and
sub
lret
push
cmp
scas
and
sbb
subl
push
ja
cmp
xchg
fimull
add
pop
or
mov
and
ret
popf
inc
shll
scas
out
jecxz
and
popf
popa
test
rcl
mov
jle
cmpl
dec
adc
adc
ja
push
pop
inc
push
push
sti
adc
test
ss
and
std
repnz
jmp
sub
push
sub
adc
sub
stc
jne
xor
ja
inc
pop
iret
outsb
xchg
push
inc
insb
mov
orb
cmp
pushf
xor
pop
outsb
mov
jno
jg
mov
fbld
adc
cld
pusha
pop
xchg
pop
outsl
shlb
sbb
xor
and
jns
cmpsl
cmp
sbb
push
or
scas
mov
int
jns
mov
or
lods
mov
shl
imul
test
sub
sbb
pop
add
aad
xor
arpl
mov
jp
sub
jo
push
xor
mov
enter
add
sbb
inc
or
movl
imul
or
jmp
iret
adc
out
push
push
xchg
adc
xor
hlt
daa
pop
and
adc
jbe
sbb
and
lret
jg
and
cmp
into
mov
add
imull
mov
inc
lret
out
inc
inc
out
nop
mov
icebp
loopne
movntps
rcl
shrl
insb
sub
xor
xchg
push
push
ljmp
outsl
scas
sti
loop
pop
sbb
ljmp
int
mov
cld
outsb
and
sahf
les
xor
fcoms
int
push
mov
outsl
mov
mov
out
test
clc
out
pop
ret
lock
bound
bound
imul
and
stc
addl
push
and
lds
aam
add
es
out
xchg
je
cs
mov
out
lods
jo
movsb
push
iret
pop
add
add
add
push
cmp
sbb
out
cmp
dec
jmp
stc
lahf
outsb
sub
ja
pop
data16
mov
or
xchg
adc
sbb
or
imul
pop
dec
mov
jne
ret
in
mov
mov
callw
test
push
and
mov
std
inc
filds
loop
stc
xor
cld
fabs
push
lods
sbb
dec
dec
fsubl
in
sbb
mov
mov
xor
movsl
dec
cwtl
sub
das
cmp
mov
test
lods
fs
fsubs
stc
scas
jne
sbb
scas
rcl
jo
test
add
add
imul
andl
cmp
xor
adc
imul
pop
into
loopne
or
mov
das
sbb
daa
lock
filds
lods
inc
jecxz
push
nop
or
add
lds
pop
mov
in
mov
dec
mov
fimull
or
pop
hlt
seta
in
adc
xchg
out
outsl
inc
push
rol
push
xchg
or
push
movsl
nop
mov
popa
addr16
pop
popl
stc
lock
mov
lret
ficoml
std
aam
push
inc
dec
sub
mov
xchg
inc
fstpt
cmc
pop
lahf
popa
cwtl
xor
popf
lea
insb
dec
repz
cmp
xor
stos
jo
lods
fs
jno
arpl
push
jle
xor
lret
add
cmc
push
cmp
pop
movsb
push
scas
mov
psubb
mov
jle
cli
jb
lods
dec
es
gs
push
clc
aam
ljmp
out
aam
pop
lahf
std
or
add
adc
jmp
xchg
fldl
xchg
sar
ret
je
sbb
jo
xchg
push
ljmp
adc
pop
inc
hlt
push
add
or
popa
test
adc
aam
jl
iret
jns
repz
jge
cltd
aam
mov
add
cmp
addl
ss
mov
xchg
in
sub
dec
xchg
fdiv
push
push
test
xor
or
mov
pop
in
jo
bound
cmp
ss
push
push
mov
jecxz
jp
push
xchg
mov
mov
imul
and
aad
inc
leave
scas
push
out
icebp
jbe
je
mov
arpl
and
xchg
out
add
inc
lods
jge
test
loop
pop
sub
sub
lea
scas
push
jns
lods
mov
pop
sbb
mov
sti
inc
out
rcrl
inc
daa
cmpsb
push
orb
popf
xor
clc
xchg
rcl
sbb
repz
fwait
icebp
jp
add
clc
sbb
dec
cli
jmp
call
cltd
call
insb
push
popa
mull
and
adc
or
pop
shrb
mov
aad
pop
rol
mov
or
iret
daa
xchg
leave
cmpsb
loopne
sbb
in
sub
testl
lret
dec
mov
fbld
push
pop
adc
mov
test
mov
insb
lcall
aas
pop
push
or
sub
xor
mov
fisttps
or
rcrl
dec
mov
idivl
dec
pop
xchg
cmpsb
pop
mov
jmp
mov
mov
jno
xchg
and
in
ja
imul
daa
into
outsl
dec
clc
and
adc
rcrl
pushf
mov
xchg
mov
or
data16
jae
or
or
cmc
and
aaa
xor
dec
add
add
shrd
repz
jnp
es
lahf
je
imul
mov
lds
sub
fdivs
js
sbb
das
jnp
aad
fs
stc
lcall
pop
mov
jg
js
sar
out
aad
decl
cmpsl
mull
sbb
push
xor
mov
mov
test
gs
inc
testb
pop
not
shrl
lahf
mov
sub
sub
sbb
sbb
ret
inc
fsubl
and
and
shlb
xor
ss
mov
test
dec
cmp
inc
cmpsl
pop
bound
mov
subl
dec
jecxz
mov
jle
lods
test
mov
aad
xchg
cmp
loope
ror
push
popa
jne
fiaddl
daa
cmc
out
sarl
outsl
and
js
inc
jmp
push
rcl
les
out
pop
mov
cs
and
mov
cmp
bound
mov
inc
clc
mov
test
popa
test
gs
jle
notl
shll
cmp
js
push
jg
sti
mov
mov
fcoml
lods
imul
push
mov
mov
movl
mov
lock
rcrl
imul
scas
jl
push
mov
sbbb
fwait
mov
movsl
or
movsb
adc
sub
mov
mov
xchg
jecxz,pn
popa
sub
add
out
in
addr16
out
and
imul
and
dec
add
pop
shlb
xchg
mov
rcll
sbb
aam
cmp
inc
cmpsl
cmp
pop
pop
sub
xchg
into
mov
and
arpl
jg
xchg
inc
inc
fwait
ja
push
mov
mov
xor
fcomp
mov
mov
pop
or
imul
pop
adc
jb
pop
fldenv
mov
mov
pop
jecxz
aaa
test
push
fistpll
leave
mov
mov
sbb
sub
push
add
mov
xor
ljmp
pop
add
scas
xor
adc
cmpsl
iret
fcoml
xor
fcomi
or
rcl
push
lahf
cmp
ficoms
rorl
cli
mov
insb
mov
push
add
std
cmc
int3
or
mov
push
popl
ret
mov
and
leave
add
stos
adcl
mov
jae
xchg
mov
sub
fistl
loopne
rcl
pusha
sbb
loopne
xchg
pop
iret
mov
fldt
xor
shll
leave
gs
push
rol
call
mov
mov
pop
push
nop
mov
cltd
lret
pop
xor
in
clc
xor
jmp
aas
push
scas
ljmp
scas
inc
sub
cmp
lret
cmc
je
gs
sbb
add
insl
into
clc
int
imul
xor
sahf
sbb
shr
cmp
mov
sbb
js
fldt
call
pop
and
call
cmpsl
jnp
and
outsb
ret
mov
popa
insl
pop
cmc
cld
mov
int3
and
movsl
psubd
jae
bound
inc
andl
inc
xor
out
pop
ret
push
or
call
lock
cmp
adc
data16
dec
pop
cmp
pop
and
fildl
arpl
ss
inc
add
in
cmp
inc
js
imul
popf
or
mov
mov
push
mov
out
mov
push
sbb
fs
and
loop
push
lock
adc
out
cltd
jl
lea
or
dec
push
cs
cmp
cwtl
in
push
cmpsb
xchg
fnstsw
dec
push
lcall
scas
sbb
xor
fisubl
or
arpl
lds
mov
pop
arpl
out
sar
and
popf
sbb
jno
sbb
inc
lret
cmc
push
add
mov
sar
bnd
inc
jno
push
mov
fmul
adc
mov
cwtl
stos
clc
pusha
neg
in
testb
pop
hlt
sti
notl
cmp
ret
dec
ret
jmp
int
push
push
add
lds
call
cmp
cmp
cmpsb
pusha
movsl
insb
int
ffree
mov
lods
movsl
jno
dec
sub
mov
adc
in
or
mov
rcrl
aaa
fwait
out
push
out
or
in
ds
fisttpll
icebp
out
adc
adc
sbb
lret
mov
leave
or
sti
pop
adc
adc
push
cmpsb
insb
or
pop
cmp
cmc
mov
out
pop
movsl
mov
jnp
es
sbb
cmp
mov
mov
cmc
sbb
loop
testl
ja
mov
mov
arpl
insl
dec
in
jb
test
mov
out
test
mov
sbb
fcomip
stos
push
sub
movsb
add
aas
cmp
loopne
movsl
mov
adc
iret
andl
sbb
daa
les
jo
fcmove
mov
pop
rep
roll
mov
fmuls
push
jno
push
cs
xor
adcb
cs
xor
push
xor
xorb
cmpsl
jno
or
lret
mov
clc
popf
dec
xchg
xor
mov
adc
xor
mov
popf
pushf
sub
mov
nop
add
cmp
scas
mov
pop
or
pop
ds
js
loop
pop
ljmp
push
pop
cmp
jecxz
or
jns
ficomps
popa
pop
jmp
add
mov
add
in
add
xchg
cmpsb
nop
movl
xchg
or
insl
or
adc
ret
popf
add
fisubrs
jae
sub
mov
add
mov
cmp
idivl
jae
lods
pop
xchg
test
inc
js
fsubs
loop
pop
imul
into
dec
xchg
jecxz
mov
pop
and
div
pop
add
mov
stos
test
and
test
ficoms
div
mov
mov
cltd
xchg
xor
bound
inc
inc
ret
js
inc
sbb
mov
add
xor
adc
movsb
cwtl
movsl
sub
add
in
fcoml
adc
inc
push
inc
inc
mov
mov
cli
lret
int
jecxz
lret
dec
int3
out
xor
sub
adc
mov
push
dec
outsb
inc
or
mov
sub
lock
mov
dec
sti
call
in
jo
aaa
mov
adc
pushf
mov
jp
js
or
cmc
shlb
pop
xchg
push
cmp
ficomps
scas
lds
mov
push
test
out
out
pop
pop
arpl
jl
or
out
cmp
jmp
icebp
ss
xlat
inc
rcll
push
mov
adc
bound
pop
add
mov
push
push
mov
out
cmc
push
cmpsl
ss
into
jle
enter
xor
push
das
mov
out
cmp
mov
add
mov
push
aaa
mov
jmp
dec
add
mov
lods
stc
push
dec
pop
adc
jge
sti
sbb
adc
mov
sub
sub
test
ficoml
add
pop
add
ss
shl
pop
lds
inc
xor
sub
cmp
jp
iret
pop
mov
dec
out
sbb
sub
fs
mov
repz
push
fs
jp
jle
adc
repnz
push
mov
and
mov
sub
add
shll
in
out
lock
pop
pop
cmp
cmp
pop
adc
sub
pop
loop
test
push
adc
pop
daa
xor
out
lretw
xchg
mov
sub
dec
xor
push
or
rcl
mov
jecxz
stc
inc
mov
pavgb
ljmp
cld
jmp
lcall
xchg
xor
addl
imul
add
or
into
sbb
or
jns
lods
add
test
cmp
cmp
outsl
jge
or
add
scas
mov
movsb
inc
outsb
sub
call
mov
stos
mov
fld
jmp
ljmp
stc
cmp
imul
xchg
or
dec
arpl
inc
push
fcompl
and
push
aas
ret
xor
stos
pop
filds
aad
jae
mov
jbe
dec
inc
inc
out
fldt
xor
shlb
cmp
fisubrl
mov
mov
sahf
js
mov
insl
push
jno
push
dec
pop
lock
jmp
popa
arpl
je
das
inc
aaa
int
adc
scas
dec
pop
cltd
push
leave
mov
pusha
cwtl
addl
cmp
push
addr16
mov
mov
mov
cmpsl
arpl
iret
push
add
or
leave
push
xor
insb
dec
cwtl
in
jl
inc
mov
js
sub
dec
mov
sahf
inc
lock
sub
jg
mov
push
in
cmc
mov
mov
fldenv
int3
push
pop
pushf
xor
mov
mov
int3
scas
xchg
add
inc
ficoml
adc
lret
aaa
cwtl
out
in
cltd
movsl
sub
jmp
mulb
mov
inc
movsl
pushf
lods
sbb
repnz
out
test
pop
bound
dec
sbb
push
es
fsubrl
lea
cwtl
inc
mov
jge
inc
cmp
lcall
fwait
mov
adc
or
adc
nop
jo
pop
dec
mov
sub
movsb
shlb
cmp
pop
dec
add
pop
dec
inc
lahf
and
out
push
sarl
test
adc
clc
push
pop
or
add
and
mov
pop
sbbl
mov
jmp
push
cmpsl
int
or
mov
inc
xchg
lcall
jne
fwait
or
repz
xchg
fidivrs
cmp
sbb
test
xchg
push
pop
in
ljmp
mov
jg
mov
lea
xor
pop
loop
cmpsb
mov
sbb
rolb
dec
out
pusha
inc
xor
test
ljmp
clc
adc
pop
clc
movsb
iret
or
loopne
dec
mov
mov
push
xchg
sub
das
stc
push
clc
xchg
push
insl
scas
pop
stc
and
pop
fstpl
les
fcoms
in
sbb
loope
mov
icebp
add
out
jecxz
add
js
inc
jae
adc
mov
movsb
xchg
push
outsl
jp
push
in
loop
test
mov
cmp
data16
shrl
jmp
sbb
mov
ret
and
sbb
adc
add
lcall
inc
dec
cmpsl
xor
fcompl
daa
push
mov
dec
popf
xor
jns
dec
jl
gs
mov
push
and
push
loopne
push
das
popf
arpl
inc
xor
loop
jecxz
test
xlat
add
sub
fcomps
and
and
aaa
add
lahf
es
lret
es
ss
jge
cmp
dec
in
loop
icebp
incl
out
sub
and
xor
mov
aas
iret
shr
xor
ret
cltd
in
add
inc
arpl
gs
push
or
sub
push
popf
ret
xchg
cltd
call
sbb
dec
xor
std
iret
lret
or
cmpb
insl
cld
out
inc
cmp
filds
ds
jmp
or
jle
in
inc
adc
adcb
int
lods
icebp
xchg
sub
lods
inc
or
fidivl
push
dec
clc
pusha
xchg
lahf
loope
or
fwait
adc
testl
ror
shl
xor
pop
pop
mov
xor
or
pcmpgtd
mov
mov
jmp
rorb
push
fld
mov
cmp
out
pop
rcll
cmp
pop
cmp
out
xor
mov
jnp
mov
mov
or
nop
stos
clc
sbb
std
ljmp
mov
push
mov
cwtl
pop
or
lods
mov
jecxz
pop
dec
mov
sar
in
xor
push
mov
repnz
in
lcall
or
xchg
inc
mov
xchg
or
pop
popa
adc
in
subb
cli
sub
jb
jmp
aam
dec
adc
add
enter
mov
jmp
inc
mov
or
xor
dec
je
pop
cmp
push
cmpsb
fidivl
ja
icebp
push
out
dec
ret
daa
insl
xor
xor
sub
pop
sbb
sarl
in
push
and
fnstcw
jmp
ljmp
lods
jl
sub
xchg
dec
cmpsb
inc
cmp
lretw
outsl
cld
cmp
mov
adc
popf
xchg
cmp
cmp
xchg
fmuls
fidivrl
in
dec
push
pop
pop
shrb
mov
mov
jecxz
xchg
dec
imul
push
sbb
jbe
shll
mov
rcrb
das
lock
push
jg
pushf
jno
mov
cmp
inc
cld
push
jno
mov
stos
cmc
movsl
inc
in
xchg
or
int
add
daa
repnz
dec
fs
jno
mov
mov
xchg
and
loope
xor
add
jne
and
sub
mov
out
mov
pusha
into
pop
jnp
cs
xchg
or
lcall
mov
push
lret
cmc
adc
fistl
ljmp
bndldx
lahf
sbb
xchg
or
js
mov
fbld
sti
xor
movsb
out
xchg
dec
xor
inc
loop
pop
xchg
leave
xchg
cmp
add
lods
mov
repnz
and
mov
sar
das
ja
mov
inc
shlb
sub
rclb
push
dec
stos
adc
adc
dec
xchg
insb
push
sub
pop
lock
and
fstpl
mov
in
push
cmpb
leave
cmpsb
or
mov
cmp
adc
fcmovnbe
xor
popa
das
test
add
in
aas
orb
mov
push
inc
lea
rcll
in
repz
fs
push
add
lcall
jp
push
add
xor
ss
cmc
or
push
rcr
cmp
push
push
mov
cmpsb
xlat
pop
dec
mov
out
jno
jno
mov
out
ds
ja
add
sbb
xchg
out
xchg
cwtl
jmp
push
or
insb
xchg
xlat
dec
in
pop
sar
and
jp
sbb
outsl
bnd
cmp
lret
test
pusha
jno
mov
push
mov
mull
clc
iret
jbe
es
and
call
movsb
xchg
xchg
movsl
fwait
pop
or
fdivrl
add
outsl
gs
repnz
jbe
shrl
aad
mov
mov
ret
add
or
cmpsl
repnz
and
and
pusha
adc
sbb
xchg
sbb
cmp
or
outsb
scas
xchg
divl
aaa
out
pop
mov
pop
repz
int3
cmpsl
mov
and
cmp
pop
push
jle
test
iret
jp
push
xchg
mov
mov
jnp
dec
loopne
mov
add
aas
popa
xchg
bound
data16
lock
out
dec
lock
mov
xlat
imul
adc
sahf
mov
aam
ja
rcll
cmp
sbb
lds
cld
adc
call
sbb
pop
rcrl
call
cwtl
lcall
outsl
bound
leave
lcall
adc
pop
inc
jo
pop
dec
xchg
push
push
iret
popa
xor
ss
ja
xchg
pop
ljmp
jmp
jmp
adc
cli
mov
dec
adc
jne
push
add
add
pop
out
lock
les
mov
pop
daa
and
cs
out
jp
mov
jns
cmpsb
iret
popf
addb
arpl
xchg
cmp
mov
ljmp
sbb
outsb
xchg
sbb
pushf
push
icebp
pop
fsubp
xor
cmpsb
or
pop
pop
adcb
ret
out
ret
add
adc
mov
cwtl
xchg
push
call
pop
cmp
fisubrl
jae
cltd
xlat
mov
pop
cmp
imul
adc
add
divb
shll
mov
sti
jle
xchg
xchg
aaa
nop
iret
mov
pop
mov
neg
add
roll
xchg
dec
mov
test
mov
mov
xchg
sbbl
jns
adc
daa
daa
xchg
mov
movsb
fmull
sub
aaa
dec
nop
stos
fwait
mov
mov
jecxz
fwait
aam
movsl
ja
adc
mov
xchg
push
cmp
cmpsl
fisubrl
mov
mov
aas
aad
incb
xchg
sub
outsb
xor
cmpsb
push
scas
out
dec
mov
int
push
mov
or
fstpl
mov
daa
dec
orl
jb
rcrl
in
test
push
insb
int3
scas
es
adcl
je
dec
fistpll
push
push
cmc
mov
sub
movsb
lcall
insb
and
stos
lcall
stos
ljmp
lods
out
push
xor
xchg
repz
inc
ficoml
push
pop
push
adc
andb
xchg
jo
ss
stos
je
lds
adc
ljmp
stos
jecxz
push
shl
xchg
repz
cltd
lcall
sub
lods
jle
test
mov
lret
jl
daa
pushf
or
das
insb
fdivl
xchg
call
xchg
xlat
push
hlt
in
dec
or
add
loop
pop
sbb
mov
xchg
inc
flds
testl
lahf
pop
xchg
cmp
stos
loope
cld
outsl
hlt
ret
lea
daa
mov
mov
push
rcll
iret
fdivl
and
pop
es
das
mov
orb
sbb
push
aam
loop
aad
mov
stos
mov
ret
icebp
xor
pop
mov
and
add
clc
sbb
jbe
pop
dec
xchg
mov
mov
shl
jnp
dec
je
sarl
in
fbstp
aaa
pop
pop
push
movsb
std
scas
in
xchg
pop
int3
or
push
cli
inc
decb
fcomip
lahf
test
popf
mov
testl
mov
dec
xor
lods
add
adc
out
or
mov
and
bound
pop
push
ficoml
sub
xor
pop
adc
or
mov
sub
fldlg2
je
fdivrl
mov
icebp
fdivr
jb
std
push
cmp
inc
or
jecxz
inc
jo
mov
mov
adc
nop
leave
sbb
push
pop
mov
mov
cwtl
inc
or
mov
jle
add
pushf
popa
incl
jg
sti
and
in
fdivrs
inc
jo
sbb
in
out
cmp
jo
dec
or
std
inc
int3
cld
mov
cmc
xchg
call
jle
mov
hlt
jmp
push
adc
adc
mov
repz
push
pop
pop
call
push
das
fldt
and
inc
mov
cmp
nop
hlt
aas
cmp
add
daa
iret
out
mov
add
pop
mov
sti
mov
bound
sub
push
xchg
sub
push
cmp
cld
ss
mov
mov
fwait
lcall
in
jne
mov
aaa
or
adc
jne
repnz
nop
loopne
jbe
pop
mov
mov
and
push
ror
mov
pusha
jo
cmp
adc
lcall
test
aam
das
mov
jo
sbb
sbbb
push
sbb
inc
pop
xor
push
movsl
mov
ficompl
cmpsb
out
adc
cmp
fsubrs
test
fisubs
and
nop
lods
jmp
into
xor
sbb
jge
xorl
gs
cmpl
or
adc
sbbl
bound
mov
sub
jns
sub
dec
or
mul
xlat
int3
mov
sbb
notl
nop
xor
push
sub
aaa
sahf
int3
xchg
testl
mov
imull
aas
inc
mov
sbb
leave
xchg
jbe
shll
jge
jnp
xchg
xchg
out
jle
mov
adc
stc
ja
leave
cmp
data16
jle
mov
and
pusha
pop
rorl
sahf
in
sub
loope
es
out
pushf
adc
scas
dec
lock
push
ss
call
jo
stc
pop
arpl
outsl
inc
jp
shl
icebp
dec
cwtl
pop
adc
call
addr16
pop
loopne
mov
adc
inc
mov
or
push
mov
mov
mov
fnstcw
cmp
sbb
les
pushf
test
and
inc
mov
ret
ret
mov
pop
xor
jle
pop
jnp
mov
repz
inc
cmc
inc
fdivl
push
inc
or
xor
test
and
mov
in
sub
mov
lock
pop
jle
mov
out
sub
inc
jmp
adc
xchg
inc
gs
xor
inc
jl
mov
push
inc
aad
xor
cmovb
xchg
inc
and
push
out
mov
sub
aam
pop
sahf
jg
mov
cld
jmp
pushf
roll
test
add
in
repnz
mov
imul
xor
cmc
fiaddl
pop
mov
rol
es
push
aas
inc
lahf
imul
ds
ja
dec
sbb
sub
push
xchg
arpl
dec
nop
rolb
cmp
inc
stos
pop
adc
xchg
adc
aaa
cmpsb
leave
inc
test
fsubs
aas
scas
adc
aaa
adc
cltd
cld
cmp
xor
push
int
mov
xor
mov
fs
mov
aaa
ljmp
imul
adc
push
mov
push
stos
imul
rolb
dec
xchg
int
das
push
pop
mov
inc
sub
iret
sbb
addr16
jl
xor
xlat
test
pop
lods
pop
jg
sbb
imul
pop
dec
pop
lret
mov
sub
push
pushl
or
lods
xchg
or
push
frstor
mov
out
and
push
data16
rcl
xlat
mov
pop
add
sbb
repnz
stos
xlat
aad
mov
and
add
sub
dec
mov
ror
nop
enter
hlt
and
sti
sbb
dec
add
pop
ds
mov
push
mov
mov
aam
or
push
aas
movsb
xchg
mov
dec
sub
sub
push
test
lock
or
push
mov
ds
pop
jo
jbe
mov
dec
pushf
cs
cmp
cmp
lcall
dec
lods
mov
stos
and
push
jno
inc
call
ficoml
lods
in
sub
adc
inc
sub
int3
out
mov
ss
arpl
fwait
int3
push
lock
adc
push
fdivl
popf
and
pop
xlat
jae
adc
jnp
or
cmp
lds
push
push
fdivrs
push
xchg
xor
or
cmpsb
jno
xchg
sub
stos
out
orb
ja
cmpsb
lods
jbe
movsb
cmpsl
cmp
or
orb
ljmp
sbb
and
aad
jge
mov
lods
xchg
aam
rorl
es
insb
daa
sub
sahf
dec
lret
pop
and
push
call
sarb
and
ud2
sarb
jo
loop
jp
jp
and
je
sbb
mov
mov
jmp
stos
push
movsl
flds
mov
jle
popf
mov
sahf
lods
icebp
and
sarb
xor
pop
cmp
cmp
cmpsb
mov
dec
das
cmp
scas
xor
and
out
rcrl
in
test
insl
decb
sub
arpl
mov
xchg
xchg
cmp
cmpsl
lods
popf
roll
test
loopne
mov
xchg
rcrb
jl
xor
dec
pop
jns
lds
add
cmp
dec
test
mov
mov
mov
push
cmc
pop
fwait
hlt
repz
sahf
cmc
sbb
std
or
fidivrs
cmp
jns
xchg
dec
lods
push
pop
add
jmp
xchg
insl
scas
push
std
mov
dec
cmp
sbb
out
xchg
adc
or
into
mov
pop
cs
xchg
pop
aam
mov
negl
fisttpll
jge
stc
fcomps
mov
in
sub
push
mulb
fiaddl
fsts
cmp
push
sbb
out
insb
sbb
sub
add
dec
outsl
jle
dec
mov
loopne
iret
movsb
inc
in
repz
fistl
xchg
adc
lahf
cmp
or
pop
andb
or
pop
nop
ret
cmp
shrb
fdivrs
popf
cs
add
in
das
pop
jns
aad
adc
inc
scas
aas
gs
into
fwait
xchg
xchg
pop
and
adc
push
cmp
or
scas
jbe
and
jae
es
aad
add
dec
pop
jp
lret
shl
add
adc
loopne
push
repz
leave
jo
mov
out
sub
mov
push
daa
mov
hlt
mov
mov
dec
cmpsb
cmpsb
push
insl
fsubrl
dec
ds
aaa
sbb
addr16
std
nop
aad
mov
mov
mov
pop
repz
jle
imull
out
inc
sub
sub
dec
ja
dec
roll
inc
mov
mov
negb
dec
cs
sbbb
shrb
xchg
fs
in
mov
pop
dec
cwtl
leave
cld
lods
push
inc
xchg
testl
pushf
sbb
mov
cltd
imul
cli
sub
xchg
adc
out
in
xlat
push
rcll
push
lahf
pop
pushw
pop
insl
fs
rclb
or
popa
mov
sbb
sub
daa
mov
in
out
sbb
js
fstpl
xor
mov
popf
jns
mov
push
ss
or
push
mov
imulb
push
out
sahf
loopne
jge
and
pop
sub
popa
mov
cmp
add
xchg
xor
jmp
rolb
fstps
dec
sbb
insl
pop
scas
addr16
outsb
jbe
adc
sahf
pop
repnz
add
fsts
xor
jne
mulb
sub
ss
mov
sbb
sbb
fsubl
stos
pop
pop
dec
out
mov
inc
loop
xlat
pop
jl
jnp
and
xchg
jne
fists
push
mov
js
sub
jle
jae
adcb
hlt
add
fmulp
dec
and
push
fildl
sbb
push
adc
jp
mov
in
jno
mov
cmp
roll
xchg
xchg
push
mov
add
lods
aam
add
push
je
inc
ret
xor
insb
sbb
mov
scas
jae
fxch
fimuls
pop
mov
inc
enter
pop
aad
test
call
mov
pop
cltd
enter
sbb
test
mov
mov
enter
sbb
adc
out
rol
cltd
inc
in
adc
fiadds
mov
jge
mov
in
jle
shl
pop
rorb
call
in
andb
aaa
mov
xor
scas
sbb
add
in
xor
leave
sub
push
dec
pop
xchg
xlat
movsb
fwait
dec
fidivrs
lret
clc
ret
adc
sbb
xchg
inc
xor
push
or
xor
dec
cmp
repz
inc
lds
mov
xchg
insb
lods
jno
insl
pop
mov
shlb
in
sti
jle
sbb
jbe
aaa
mov
add
jbe
dec
sbb
mov
adcl
les
lock
sbbl
fwait
ljmp
mul
js
pop
int
lods
leave
repnz
or
mov
ja
mov
mov
daa
cld
shlb
adc
fdivl
aad
fcoms
lahf
sbb
incb
mov
jns
fst
in
mov
lods
insl
popw
fistps
jno
icebp
push
daa
push
adc
cmpsl
sar
lcall
lret
faddl
ret
inc
cmp
sbb
in
dec
repnz
mov
mov
idivb
xchg
rcl
jl
fidivrs
stos
stos
sub
cmp
divl
cmp
test
fcompl
iret
repz
ja
pop
inc
or
push
inc
rcl
mov
fsts
daa
add
sub
push
data16
aaa
xlat
and
bound
sub
les
mov
fnstcw
in
sub
push
jbe
add
mov
xchg
xorb
popf
adc
arpl
test
sbbl
test
add
nop
hlt
ret
hlt
dec
ror
or
sub
ds
jge
repnz
push
out
clc
enter
test
xor
cwtl
dec
loop,pt
jne
dec
cmpsl
sbb
out
mov
add
cld
jae
mov
push
cmp
aad
mov
mov
cs
mov
push
pusha
lret
jns
push
xchg
insb
sbb
cld
nop
mov
jae
mov
call
nop
jmp
push
mov
xor
js
aaa
loope
lods
mov
les
rcrl
mov
push
or
push
fidivl
ljmp
sti
mov
push
enter
jecxz
inc
lcall
ds
push
or
pop
mov
add
add
popf
mov
push
call
fsubl
jmp
jle
lock
xchg
jge
sti
ss
divl
and
xor
xchg
orl
xchg
iret
xchg
popa
test
push
mov
mov
cmp
pop
lahf
sahf
div
push
cmp
call
adc
sarb
cmp
sub
loopne
aam
pusha
mov
in
movsl
mov
and
sarb
or
pop
push
add
arpl
xchg
aam
pop
call
cmp
cmpsl
push
call
mov
stc
pop
imul
hlt
cld
adc
mov
pop
sbb
sti
cmp
int
popa
xchg
dec
and
imul
mov
rol
int
or
mov
xchg
cwtl
push
mov
xchg
lret
push
jle
push
lea
fs
cmp
push
rcrl
jge
mov
daa
inc
cltd
mov
cmp
dec
add
popa
movsb
inc
add
jno
icebp
pop
and
lret
add
jne
and
lahf
and
xchg
push
or
sbb
insl
notb
in
hlt
add
pop
jo
cld
pop
jecxz
mov
out
cmp
sbb
push
pop
out
aad
adc
in
jl
sbb
leave
out
cmpb
mov
std
rol
leave
in
jecxz
fsubl
testl
imulb
lods
fwait
jp
mov
stc
sub
push
xchg
fmuls
push
loope
mov
ret
inc
idiv
cld
testb
cmp
and
and
push
inc
sub
inc
or
enter
fstp
outsl
and
out
jp
adc
sbb
nop
sbb
dec
xchg
lds
push
dec
scas
imul
mov
sub
pop
imull
in
in
sub
fs
clc
hlt
cmp
add
pop
pop
jmp
sbb
dec
cwtl
imull
jnp
inc
mov
adc
jl
push
push
fsubrl
jmp
lret
popf
add
iret
xor
xchg
int
ss
call
in
jp
pop
dec
or
dec
ds
lret
push
sub
push
in
out
test
outsl
lds
lock
mov
bound
jl
xor
int3
mov
cmp
testb
shrb
insb
mov
out
icebp
and
push
mov
clc
push
test
lock
push
push
or
test
dec
xor
jl
xchg
dec
adc
insl
popf
and
cld
stos
sbb
adc
out
xchg
or
xchg
jb
jg
xchg
mov
pop
push
mov
push
pop
sbb
mull
xor
in
data16
arpl
fimull
aam
sbb
cmpsb
sub
clc
inc
mov
andl
pop
lock
or
pushf
mov
adc
mov
cmp
sub
mov
mov
sbb
sbb
pop
sub
pop
rolb
jecxz
xor
mov
xchg
out
pushf
enter
xlat
sbb
or
enter
mov
and
dec
or
les
int
jp
aaa
fldcw
cmp
scas
adc
repz
mov
aaa
inc
pushf
jmp
add
lcall
ret
xor
mov
enter
mov
jb
addb
imul
cmp
jae
mov
hlt
pop
dec
sbb
pop
pop
mov
inc
cmp
or
mov
pop
adc
fisubl
lahf
lahf
rol
mov
pop
in
or
cld
test
pop
xchg
inc
mov
adc
stos
adc
sub
pop
aam
shll
pop
and
ss
jg
xchg
cltd
out
and
test
hlt
push
jle
jae
pop
popf
int
aaa
cwtl
aad
jle
in
push
cli
push
cltd
leave
cmp
mov
dec
dec
push
sub
push
test
push
out
es
add
jae
mov
pop
mov
cmpsl
cmc
sub
inc
sub
jae
imul
mov
movsb
or
adcb
in
pop
call
jecxz
aaa
mov
mov
stc
lea
push
push
jne
mov
mulb
xchg
push
add
test
push
jecxz
dec
sti
xchg
insb
mov
add
fnsave
push
bound
cmp
jecxz
insl
orb
pushf
sbb
inc
cmp
mov
push
adc
sbb
rorl
outsl
cltd
xlat
xchg
ljmp
andl
cltd
mov
inc
adc
push
dec
int
xor
mov
mov
out
xchg
adc
pop
adc
enter
ret
scas
pop
rorl
out
jae
mov
int3
xor
dec
add
fs
and
inc
test
xorl
bound
gs
or
and
aaa
sub
iret
jecxz
xor
insb
rclb
in
iret
mov
push
inc
cwtl
cmp
xor
mov
dec
push
mov
or
jo
mulb
imul
in
mov
in
cli
pop
cmpsl
push
movsl
ror
ljmp
pop
insb
iret
imull
lret
popf
sahf
or
push
test
jg
imul
sub
xor
fcomps
test
sbb
xor
subl
jl
lea
mov
stos
es
gs
fwait
mov
in
lods
sub
sub
loope
inc
dec
mov
js
xchg
in
cmp
jecxz
out
ret
jo
sub
test
ja
xchg
push
dec
aas
cld
repz
mov
mov
adc
or
add
es
cmp
xchg
lcall
xchg
xchg
adc
stos
push
cmpl
in
push
or
das
pop
jae
inc
aam
xchg
mov
cmp
inc
jge
shlb
xchg
ss
inc
xor
add
dec
dec
ja
mov
ret
jne
mov
js
mov
mov
and
js
loop
pop
into
pushf
mov
mov
loopne
jmp
sub
sub
bound
mov
push
movsl
out
mov
sub
rcll
cmp
inc
mov
popa
ror
xor
lock
pop
mov
pop
xchg
leave
insb
fcomps
sub
les
pop
mov
mov
fmuls
sub
mov
ljmp
aad
mov
and
movsl
loopne
lret
cltd
test
stos
rorl
iret
push
sbb
in
lds
test
andl
lock
cltd
mulb
addr16
mov
icebp
stos
daa
cmp
js
les
bound
xor
aas
ja
mov
adc
sbb
sbb
popa
mov
imul
enter
sbb
out
add
out
push
and
xchg
pop
cwtl
cli
xor
ljmp
pxor
and
clc
pop
outsl
mov
mov
stos
cmc
fwait
dec
daa
jo
sub
sti
hlt
xor
loope
pop
ret
sub
add
imul
dec
pop
push
pop
call
jg
xor
xchg
fidivrl
xlat
leave
add
add
cld
icebp
adc
mov
jecxz
adc
or
xor
jno
push
sti
leave
sbb
cmp
inc
addr16
dec
bnd
icebp
cwtl
fsubs
mov
mov
push
fistps
testl
sbb
pop
pop
sub
movsl
les
inc
jne
inc
loope
test
ret
sub
insl
jmp
or
cmp
jg
fstps
sub
add
shl
pop
xchg
xor
loope
mov
jmp
je
cmp
jne
push
ret
imul
push
jp
push
push
ja
sbb
jl
fs
hlt
out
lods
xor
and
xchg
in
mov
repnz
xor
daa
leave
xor
inc
test
xor
aam
add
aaa
cmpl
int
jo
mov
loopne
or
sarl
shll
in
add
lds
cmp
pop
dec
shrb
jmp
or
stos
ljmp
imul
leave
push
insb
jno
adc
sarb
lret
call
add
arpl
push
push
push
pop
ret
push
xchg
adc
sub
mov
fidivrs
out
adc
loope
neg
pop
xor
fidivs
clc
jl
test
pop
mov
lea
adc
rorb
jp
inc
and
xor
or
into
int
out
pop
fsts
and
jmp
xchg
aam
mov
or
test
das
or
mov
fsts
push
xor
mov
mov
dec
shll
sti
in
pop
fistl
jp,pn
mov
popa
icebp
adcb
in
orb
push
push
mov
aaa
test
paddb
les
test
sub
mov
add
movsb
pusha
popf
cwtl
sub
xchg
and
mov
push
dec
sub
sbb
mov
popf
out
xchg
dec
shr
enter
outsl
mov
fldt
cltd
xchg
and
rcrl
sub
pop
add
cmpsl
ljmp
cmp
outsb
sub
shrb
dec
cmp
insl
inc
xor
mov
call
aam
inc
lds
sti
cmp
cmc
push
int
and
cld
inc
movsl
sub
cmp
add
ret
dec
mov
enter
push
adc
in
push
adc
cmp
adc
divl
adc
lahf
mov
test
test
sub
cmp
add
hlt
pushf
and
je
imul
repnz
rclb
mov
jle
cwtl
xchg
mov
adc
sbb
addb
xchg
out
push
jle
rolb
jle
popf
push
jge
test
and
push
lods
xchg
mov
pop
xchg
sbb
cmp
in
cmp
stc
sub
cs
push
sub
xchg
mov
xor
sahf
and
hlt
mov
sbb
cmpsb
fists
scas
fdivrp
or
cmp
orb
sbbl
les
push
scas
jle
mov
in
jecxz
inc
loop
fmul
in
sub
xchg
call
inc
inc
es
mov
out
dec
sbb
jge
sub
mov
dec
pop
push
rcl
fiadds
adc
lahf
or
jl
mov
scas
clc
xchg
pop
xchg
scas
or
add
dec
jne
adc
cmp
jnp
sub
loope
sbb
add
rcrb
lods
into
movsb
or
jae
loope
add
subb
popf
xchg
xchg
inc
loop
xchg
jne
fimull
push
sub
sarl
pop
insb
xlat
outsl
arpl
js
lods
mov
aad
jp
push
js
adc
xchg
inc
pop
or
lret
fdivs
push
add
std
ret
inc
fcomps
lods
or
jmp
iret
rcll
mov
test
lahf
shll
out
mov
inc
rsm
mov
in
into
sbb
sub
cmp
jmp
cmpsb
ljmp
push
push
cli
add
and
cli
xorb
push
lea
pop
out
xchg
ljmp
enter
fs
jnp
or
sbb
sub
jmp
jle
clc
bnd
sub
test
or
and
jle
jecxz
mov
pop
and
mov
sub
push
xlat
lock
lahf
and
mov
or
dec
xor
or
ret
dec
pop
movsl
jge
in
leave
in
inc
scas
imul
scas
orl
cltd
ja
jl
fs
add
mov
jge
lea
call
test
cmp
cmp
jns
jo
out
mov
push
lods
cmp
nop
xor
dec
xor
je
mov
pushf
cwtl
jae
inc
es
lds
sbbb
fnstenv
push
lock
and
and
aas
std
pop
bndldx
jne
loope
sbb
pop
test
imul
scas
cld
add
mov
out
mov
cmpsb
jo
stc
ja
xchg
stos
and
push
inc
mov
and
xor
shll
aad
lahf
fisubl
pushf
rol
pop
out
mov
push
pop
inc
inc
mov
jg
test
scas
loope
mov
mov
popa
push
cmp
add
ljmp
fdiv
cmp
xchg
sub
push
out
stc
inc
ffreep
and
jb
mul
lcall
push
mov
mov
testb
std
xchg
ljmp
lods
mov
jl
xchg
add
repz
inc
and
xor
lret
adc
arpl
mov
sha1nexte
or
int3
rcrb
rcll
stos
adc
cmp
or
loop
lahf
jle
cmp
jae
pop
sub
imull
movsl
aas
mov
pusha
jp
movsl
xchg
cmp
dec
stos
sub
push
pop
mov
xchg
cld
xchg
lcall
xchg
test
adc
cltd
dec
xorl
into
nop
push
push
push
jg
mov
adcb
push
repz
push
mov
adc
inc
cwtl
mov
pop
inc
push
xchg
xchg
sub
mov
dec
arpl
mov
mov
jmp
repz
scas
cmp
xchg
push
or
fs
je
out
inc
imul
mov
sti
nop
fidivs
hlt
xlat
or
js
shll
in
push
add
jmp
xchg
fldt
push
cmpsb
in
out
jnp
jb
and
sub
dec
sbb
inc
xor
cmpsb
fistl
jae
inc
sarb
nop
mov
push
pop
jge
js
jb
popa
repz
push
jle
fs
ja
aad
mov
mov
sti
pusha
bound
lods
or
jmp
mov
clc
ret
xchg
dec
inc
movsb
or
nop
cmp
rcr
add
stos
push
pop
pop
std
push
push
out
sub
jge
std
push
dec
test
lcall
aas
imul
sub
sbb
test
jnp
sub
push
frstor
call
pop
mov
andl
cltd
and
sti
cli
or
xor
or
cs
xor
movsb
bnd
cmpsl
sub
int3
inc
push
mov
test
sahf
lcall
aas
cmp
add
fwait
cld
mov
es
and
ffree
ja
arpl
into
jecxz
mov
lcall
int
cmp
adc
inc
jae
mov
push
mov
jmp
into
pop
sub
xchg
inc
sub
jno
mov
lcall
push
insb
les
xor
xor
mov
ds
pushl
mov
inc
cwtl
and
cwtl
sub
dec
xlat
add
mov
xchg
push
clc
dec
fbld
arpl
push
add
xor
ss
or
scas
jns
add
adc
mov
pop
cmp
push
mov
and
inc
leave
in
pop
popa
imul
loop
call
xor
scas
addb
sub
push
call
mov
nop
push
pop
int
movsb
cld
sub
cmp
sbbl
loopne
fidivs
out
int3
in
lods
xchg
lods
mov
dec
push
mov
xchg
jg
ds
sbb
mov
mov
xchg
repz
jno
push
dec
mov
pop
daa
sub
mov
push
ficomps
sub
loope
mov
push
sub
insb
mov
push
or
sub
xchg
cwtl
or
inc
out
pusha
bswap
dec
repnz
in
cmpl
xor
dec
jl
into
xor
dec
hlt
dec
jp
mov
mov
xlat
je
mov
cmp
pop
push
sbbb
push
aaa
mov
stc
cmp
dec
movb
mov
add
lcall
fwait
xchg
and
loope
stc
jecxz
xor
push
movsb
xor
dec
ds
adc
shl
repnz
xchg
add
aam
pop
mov
jl
pushf
mov
in
xchg
add
xor
or
mov
push
or
and
and
mov
mov
jb
mov
dec
jb
sbb
xchg
jl
rcr
mov
sbb
jo
xchg
mov
scas
pop
and
push
mov
mov
pop
mov
cmpsl
cli
or
stos
mov
in
test
adc
push
outsb
imul
popf
adc
jl
and
mov
cmp
cmpsb
dec
vpunpckhqdq
leave
stc
aad
mov
sbb
mov
pop
mov
pop
adc
mov
mov
mov
lock
mov
inc
dec
fwait
in
scas
dec
xchg
fsubrl
sbb
popf
xchg
and
insb
inc
jecxz
std
lret
aaa
std
je
ljmp
xor
rcl
int
addr16
lods
mov
out
cmpsb
fs
and
push
push
sbb
push
cwtl
and
xchg
aaa
sub
xchg
cmp
or
xor
inc
repnz
sbb
cvtps2pi
inc
sub
push
add
andl
add
in
insl
fimuls
fdivl
mov
cmp
jg
les
and
xchg
ja
cld
sahf
xchg
xchg
adc
sbb
das
jl,pn
pop
pop
mov
mov
jns
rol
nop
xchg
adc
cmc
daa
push
dec
repnz
mov
call
ljmp
mov
push
loop
and
lds
cmpsb
mov
push
in
lahf
imul
xor
mov
cmpsl
mov
test
std
imul
push
loopne
xlat
lods
fimuls
andl
stos
pushf
inc
adc
inc
fs
jnp
xlat
and
jae
mov
lret
lods
add
and
mov
popa
mov
dec
cmpsl
test
dec
xchg
cld
cmp
in
mov
cltd
shll
or
aad
mov
jae
sbb
fwait
cmp
jmp
mov
fildll
fldl
call
fstpt
sub
movsl
push
and
sbb
int3
insb
push
add
xchg
xchg
push
mov
dec
insb
and
gs
xor
jp
lahf
xchg
mov
xor
jmp
bound
dec
add
pop
cmpb
rcrl
fmull
fimuls
add
xor
in
adcl
ljmp
add
push
repnz
xor
mov
push
lea
bound
out
test
mov
jmp
adc
dec
rorl
cli
in
mov
fstl
fsubr
fdivrl
adc
dec
mov
sub
and
dec
adc
nop
jae
mov
inc
jge
bswap
sti
pop
test
arpl
mov
mov
push
imul
or
out
cmp
addr16
jle
test
hlt
xorb
add
leave
ss
xchg
inc
pusha
std
lock
pop
pop
xor
aam
pop
lahf
pop
pop
addl
sub
or
in
insl
pop
adc
loopw
mov
sub
aad
ret
mov
mov
jg
mov
popf
and
popa
or
pushf
insl
jns
add
mov
cwtl
push
mov
addr16
out
lret
add
xor
imul
movsl
xchg
inc
bound
arpl
cli
sgdtl
mov
mov
scas
divb
fisubl
sbb
sub
aas
sbb
pop
add
jecxz
imul
xchg
bound
jle
aad
mov
testb
sbb
pop
lods
testb
sub
and
or
push
or
pop
enter
test
adc
jns
mov
add
scas
mov
jge
les
jecxz
cwtl
push
les
cmpsl
inc
std
jge
lds
pop
ret
imul
push
out
popa
cmp
jno
mov
and
int3
into
jecxz
pop
out
in
cmp
pop
sbb
sub
or
out
adc
xchg
icebp
inc
sub
xchg
pop
push
pop
mov
jmp
push
mov
jg
andl
lret
xor
inc
sub
icebp
cmp
adc
loope
or
repnz
pushf
xor
sbb
cmpb
sbb
jbe
gs
xor
adc
pushf
test
rcrl
add
imul
cli
aam
push
pop
lret
call
xchg
faddl
and
push
pop
imul
int
jae
imul
dec
or
xor
stos
cwtl
movsl
lea
adc
pop
add
out
aaa
sbb
xchg
push
pushf
xor
mov
mov
movb
sub
sub
mov
sbb
daa
rcrl
lret
fisubrs
fbld
inc
cmp
mov
jne
out
mov
fidivrs
pushf
and
in
mov
mov
jnp
mov
stos
adc
int
nop
hlt
dec
sbb
mov
jns
arpl
dec
incl
or
rcll
lock
cld
or
ja
lock
xchg
lds
push
mov
mov
jnp
cli
mov
push
dec
sbb
lods
jb
sbb
gs
mov
jo
sti
push
mov
pushf
adcb
xchg
jmp
cmp
dec
rclb
inc
xchg
faddp
xchg
xchg
cmpsb
lock
jns
out
and
xchg
scas
test
stos
nop
push
mov
push
dec
ljmp
and
sbb
js
call
cwtl
test
mov
xlat
out
cs
jno
les
cmpsb
add
mov
repnz
mov
cmp
pop
push
bound
mov
xchg
aad
push
mov
mov
jbe
test
push
hlt
or
sarl
adc
cmp
js
fidivrl
push
push
inc
popf
pop
jae
sahf
loop
or
push
jns
imul
push
movsl
shlb
lea
sahf
mov
scas
sbb
pusha
mov
aas
add
mov
jno
popa
pop
or
lret
dec
rcll
pushw
gs
lds
int
in
push
inc
sbb
aam
fcmovnb
and
sbb
rcll
adc
ja
add
jae
push
inc
stos
push
push
out
in
jb
sar
mov
cld
lret
les
inc
enter
dec
popa
jbe
aaa
mov
fdivrs
push
and
icebp
fwait
add
outsl
and
sub
and
data16
pop
or
into
push
aam
sbb
cmc
jae
bnd
call
mov
in
jmp
mov
aad
and
ja
je
sbb
ljmp
sbb
cmpsb
das
cmpsb
cmpl
inc
arpl
popf
sbb
mov
fcomp
adc
push
push
movl
inc
sarb
sbb
loope
pop
push
div
mov
xor
cmp
fbld
pop
inc
mov
cmpsl
out
jmp
pop
and
cmp
mov
scas
pop
pop
jae
dec
mov
pop
stc
jns
jns
cs
mov
insl
repnz
or
outsl
test
ds
mov
fwait
ds
jbe
sbb
push
out
lahf
out
lret
or
or
pushf
xchg
cltd
jns
sub
jnp
inc
test
jecxz
mov
push
outsb
aaa
mov
sub
sbb
jmp
jnp
ljmp
movsl
push
ret
mov
adc
pop
fwait
mov
pop
and
stos
xchg
adc
push
push
mov
movsb
xor
cltd
imul
int
and
inc
int3
arpl
adc
push
jmp
add
mov
inc
adc
int3
lret
add
pop
sub
dec
xchg
pop
lret
ljmp
mov
aas
and
sub
mov
aaa
iret
push
loop
pop
into
imul
jnp
test
xor
aas
rcll
xchg
out
ds
loop
jb
or
adc
js
repz
sbb
jp
dec
dec
jb
push
fwait
cmc
sbb
pop
rolb
scas
inc
mov
jno
jnp
jp
sub
push
adc
xchg
test
stc
out
jle
int3
repz
or
xchg
pop
and
and
movntps
mov
and
cmp
inc
lret
add
xor
mov
sub
divb
mov
cld
movsl
add
repnz
das
sub
dec
jp
mov
dec
xchg
push
pop
mov
hlt
sbb
mov
ret
lret
das
jbe
xchg
mov
and
mov
sbb
push
cmpsl
out
addr16
adc
or
cmp
enter
pushf
movsl
iret
dec
pop
rcl
aaa
fidivs
jo
mov
and
push
mov
loope
fwait
mov
stos
xchg
cli
fcmovnu
cmp
push
push
mov
jecxz
xchg
ret
pop
clc
nop
daa
imul
fidivl
xchg
push
push
lcall
xchg
push
and
or
pop
cmc
stos
es
mov
mov
mov
jl
insl
inc
and
int3
adc
outsl
mov
stc
jae
adc
out
clc
mov
jp
incb
xchg
xor
and
push
xchg
mov
adc
or
scas
loopne
jmp
cmp
xchg
push
pushf
sbb
jnp,pt
hlt
pop
push
gs
adcb
sbb
ljmp
jo
lret
rclb
subl
mov
popa
sti
ja
xchg
sbb
test
adc
movl
popf
add
aad
jns
pusha
dec
divb
xchg
mov
rolb
mov
mov
sub
adc
lcall
mov
test
xchg
or
popa
xchg
jns
je
repnz
pushf
xor
shll
mov
jbe
aaa
lea
xchg
add
dec
es
stos
xchg
adc
mov
imul
pop
mov
mov
inc
add
and
dec
push
jae
lret
nop
cmp
movsl
xchg
xchg
jmp
fdivs
sbb
incb
pop
scas
sbb
and
jae
int3
mov
inc
inc
jecxz
cli
jnp
jmp
jg
inc
fs
inc
iret
and
cld
int
adc
arpl
cmp
sbb
int3
mov
or
cmpl
jnp
cmp
dec
mov
int3
fistl
stos
pop
gs
popa
xorl
insl
jns
out
aaa
cmp
movsl
movsb
arpl
iret
aaa
les
into
outsb
jl
lods
fildll
jno
inc
add
or
out
leave
and
or
or
pop
cmc
sub
dec
jns,pt
lahf
jne
dec
dec
loopne
insb
ss
push
sbb
sub
insl
stos
not
test
sbb
mov
push
jbe
in
adc
fs
andb
das
add
pop
dec
pop
push
int
cmp
mov
jbe
mov
out
and
sahf
fdivr
leave
outsb
lea
pop
repnz
cltd
fwait
call
mov
pop
mov
cmpsl
ror
mov
insb
jno
xor
mov
push
loopne
test
push
icebp
outsl
push
mov
aaa
arpl
cmc
mov
daa
push
or
repz
lock
mov
adc
adc
bound
jns
xor
pop
push
shrl
cmp
inc
jecxz
or
jae
out
int3
pop
insb
mov
fisttpll
lahf
cmpsb
sbb
pop
sbb
adc
adc
fidivrs
sti
bswap
mov
or
rcl
dec
das
addr16
pop
mov
pusha
mov
scas
xor
ss
xchg
jge
inc
xchg
cmc
mov
lret
add
ror
mov
mov
imul
mov
adc
insl
inc
xchg
aad
loope
push
mov
dec
add
adc
cmpsl
ja
xchg
sbb
mov
test
inc
int3
cmp
mov
pop
adc
sbb
sub
mov
or
push
and
pop
push
cmp
or
mov
cwtl
test
add
es
enter
dec
pop
jg
cmp
ret
cmp
adc
jmp
and
std
cltd
mov
icebp
loop
xchg
sbb
std
shrb
rcrl
jecxz
hlt
sbb
mov
rclb
sub
inc
sbb
add
lds
push
test
mov
inc
adc
lods
mov
pushf
hlt
hlt
popf
and
stc
hlt
adc
jne
dec
push
mov
hlt
out
andb
jne
mov
je
sub
adc
lret
repz
dec
stos
scas
sub
sbb
jno
nop
push
jmp
aaa
mov
dec
scas
and
dec
adc
in
jo
mull
aaa
or
push
call
inc
sub
jo
mov
or
push
or
aam
dec
int3
mov
push
fs
ret
xchg
loopne
inc
in
outsb
or
pop
inc
adc
and
neg
xchg
or
push
loopne
icebp
pop
sub
addb
mov
mov
sub
push
inc
jb
daa
and
sub
sbb
out
pop
xor
imul
jnp
adc
jge
mov
xor
and
or
movsl
or
mov
push
push
mov
adc
jg
add
sbb
jg
jo
sbb
mov
mov
ljmp
sbb
lea
scas
rclb
jno
out
dec
adc
stos
jbe
mov
lret
dec
aaa
xor
pusha
dec
shll
ja
cmp
enter
ljmp
loop
adc
mov
aas
push
stos
shrb
push
push
fwait
push
push
mov
insl
fildll
jae
mov
mov
jnp
fadd
call
stos
in
push
pop
sub
test
iret
outsl
cli
mov
cltd
and
and
popa
lds
imul
cli
decb
fsubr
cmpsb
pop
fimuls
es
and
insb
sub
ss
and
out
aad
sbb
inc
imul
mov
cmp
daa
dec
out
aas
add
ret
das
add
xorb
fsubp
sbb
lahf
mov
movsb
in
ljmp
daa
cmp
stos
fstpl
jge
gs
icebp
jge
imul
jnp
and
pop
pop
lahf
ja
das
jmp
roll
call
mov
fwait
shlb
in
jmp
mov
xchg
in
inc
jne
sbb
out
insl
mov
ficompl
jno
lahf
adc
cmp
adc
adc
sahf
popf
mov
add
outsb
rcl
adc
cmpsb
in
cwtl
cmp
xor
add
or
jns
sub
and
pop
sub
pop
jb
loopne
xchg
scas
pop
punpckhbw
pop
fcompl
add
mov
in
dec
xchg
ds
xchg
pop
inc
je
clc
lret
outsl
push
mov
sub
push
mov
jecxz
addr16
sbb
sbb
sbbb
ret
cmp
mov
inc
inc
mov
inc
inc
adc
cmp
hlt
xor
lcall
pop
xchg
cmpsb
fcoml
push
mov
popf
xor
insb
std
cmc
fisttpl
mov
or
shr
movsl
adc
loope
pop
mov
daa
fidivrl
test
inc
mov
addr16
push
notl
push
cmpb
pop
xor
jge
fcoml
das
jae
jecxz
push
xor
roll
loopne
sbb
xchg
aas
lret
pop
mov
cmp
sub
loop
lds
cs
test
pop
cmp
loop
push
daa
movsb
lcall
and
or
fdivr
jp
mov
cmp
sbb
ljmp
mov
push
adc
gs
cmp
adcl
enter
rcll
mov
xor
lock
jnp
enter
push
cli
shrb
push
iret
pop
bound
rcr
adc
jmp
stc
jg
lds
inc
call
mov
inc
cmp
imul
sub
jne
add
fidivrl
or
hlt
pop
out
add
adc
add
mov
out
enter
enter
or
loope
bound
jae
imul
dec
imul
lcall
cmp
mov
cmp
xor
inc
imul
in
adc
cltd
popf
xor
dec
cltd
inc
loop
inc
mov
icebp
fucom
and
xor
jmp
lahf
add
add
bound
imull
jl
jnp
pop
loope
cmpsl
mov
add
sbbl
sahf
push
xchg
mov
mov
inc
int
mov
mov
int
iret
stos
inc
out
sbb
xchg
pop
out
sahf
test
dec
xchg
call
test
jle
xchg
pop
cmpsb
mov
inc
cmpsb
mov
mov
sub
push
pop
pop
jbe
inc
leave
insb
sub
mul
mov
daa
and
lcall
and
mov
fnstsw
jp
dec
cmp
stos
out
mov
jp
jmp
mov
mov
sbb
popl
dec
lret
test
adc
cmpl
leave
or
mov
cld
std
dec
xor
and
nop
jns
leave
mov
sti
fistl
add
cmp
push
insb
sti
xor
popf
mov
push
sbb
pop
xchg
fbld
mov
int3
or
lds
sub
pop
outsl
sarb
sbb
stos
sub
xorl
adc
jne
je
pushl
ds
inc
ret
movsb
fdivrp
sbb
mov
push
xchg
cmc
and
movsb
xchg
xor
ljmp
lcall
cmp
dec
or
add
xacquire
imul
add
push
testb
adc
and
and
stos
mov
jmp
add
or
stos
adcl
mov
data16
and
mov
and
out
je
scas
das
push
fistpll
add
test
adc
mov
popa
rorl
mov
pop
insl
call
sti
cmp
repz
push
out
xchg
xchg
repnz
pop
fstpt
push
sti
pop
jge
and
adc
mov
sub
repnz
inc
int
xorb
mov
cs
xchg
sub
ret
xor
call
inc
cmp
out
mov
rcr
dec
insl
sbb
xchg
ret
push
fcomps
int3
mov
dec
jne
fsub
fcmovnb
inc
dec
sub
js
cli
addr16
sbb
repnz
add
inc
int
lds
popa
and
or
subb
xchg
lcall
and
xor
pop
dec
insb
cltd
nop
in
or
or
in
jne
or
jmp
movsb
xlat
adc
sub
dec
xchg
rolb
int
cmp
iret
push
loope
mov
pop
mov
fidivs
aam
rcrl
or
inc
cmp
xchg
mov
or
cmc
pop
test
xlat
jo
xor
cmc
jle
lods
jg
repnz
pop
jae
mov
in
test
mov
fists
in
mov
pusha
outsb
inc
inc
out
mov
xor
sar
xchg
stos
cmp
push
pop
cli
fmull
jge
pop
test
into
and
movsl
lea
sti
xchg
mov
lahf
popa
imul
cli
int
xchg
pop
sbb
xor
dec
xchg
push
mov
mov
and
test
jp
fistpll
adc
inc
insl
pop
aad
adcl
pop
out
mov
cs
jl
bound
scas
ds
xchg
js
sarl
insl
add
inc
pushf
mov
out
das
pop
xchg
add
les
outsb
fimuls
inc
mov
mov
push
leave
test
imul
cmp
insb
insb
add
pop
test
mov
sub
inc
push
adc
out
push
jl
mov
cmc
or
mov
mov
pusha
test
das
xorl
mov
js
cmp
aaa
sub
xlat
mov
pop
jl
xchg
xchg
mov
call
orb
int3
mov
sbb
inc
and
mov
pop
stos
mov
pop
aad
cltd
loop
pop
test
into
xlat
inc
dec
repnz
inc
repz
adc
xor
mov
pushf
lret
push
xor
cmp
das
push
lcall
mov
andb
mov
repz
sti
sbb
mov
sbb
sub
push
mov
cld
mov
jecxz
call
movsb
cmp
ret
std
std
sbb
test
sbb
xchg
mov
pop
push
inc
clc
sbb
mov
inc
rclb
bnd
add
sbb
subb
call
ret
ds
ds
mov
in
push
hlt
push
stc
jns
lods
or
insb
fdiv
xor
push
mov
sti
shlb
aaa
pop
pop
jbe
mov
or
xchg
dec
jg
lahf
repnz
xlat
xchg
sahf
fwait
jbe
mov
int
jae
popf
int
sarl
xor
mov
add
movsl
test
or
cmp
mov
arpl
shlb
nop
mov
fwait
loopne
mov
xchg
fcoml
icebp
sti
lods
data16
fscale
aam
push
xor
push
push
mov
push
pop
cwtl
imul
jg
jle
and
adcb
insl
aaa
stos
lds
test
outsb
mov
push
dec
fsts
sbb
aaa
dec
inc
adc
lcall
outsl
mov
in
jne
push
jle
scas
aam
scas
rcrl
and
je
add
scas
jge
cwtl
movsb
sbb
iret
adc
pop
test
int3
and
adc
jle
bound
fdivs
pop
adcl
movsb
cmpsb
aaa
loope
shlb
jo
outsb
out
push
mov
inc
dec
xchg
and
aam
add
lfs
test
mov
mov
repnz
repnz
icebp
loop
pop
mov
mov
iret
pop
pop
push
mov
mov
mov
inc
add
sbb
mov
shlb
pop
cmp
push
stc
add
mov
adc
sbbb
jle
xchg
daa
push
jo
push
insb
mov
movsl
dec
sbb
int
xchg
mov
test
mov
adc
xchg
jno
movsl
mov
jae
into
imul
dec
push
inc
push
in
sbb
pop
jb
jp
and
mov
fdiv
xor
fwait
pop
hlt
repnz
adc
xchg
in
inc
fildll
mov
jle
adc
xor
call
add
push
jl
orl
fdivrs
cmp
jp
mov
ret
inc
mov
test
push
push
sub
lcall
pop
lock
and
push
shl
add
out
mov
add
lahf
sbb
cmpsl
pusha
lret
and
outsl
loopne
xor
push
mov
fnsave
and
push
dec
fstl
scas
in
lcall
lret
add
or
xchg
jl
push
into
sbb
xor
bound
dec
pop
cmc
cwtl
jp
inc
push
repnz
mov
lahf
pop
adc
and
loopne
xchg
mov
mov
lods
lock
dec
jg
xor
inc
fwait
int
push
xlat
fwait
and
lret
lcall
pop
das
sub
sub
lods
decl
mov
or
pop
cmp
js
adc
out
data16
ss
lret
aam
sbb
mov
call
testl
out
rorl
xor
xor
inc
ds
rcrl
je
out
mov
push
imul
movsl
scas
stos
sbb
mov
and
rcrl
shlb
push
or
loop
inc
aam
int
movsl
sub
mov
cmpl
test
push
jbe
test
rcrl
or
hlt
mov
or
xor
sub
mov
sub
cmc
add
out
add
push
ficompl
jl
or
mov
mov
push
adcl
fisubrl
js
and
cmp
shlb
aas
cmp
mov
adc
gs
ucomiss
jp
cld
inc
mov
mov
out
cmpsl
or
adc
pusha
test
adc
out
ljmp
adc
insl
imul
push
sub
and
and
pusha
dec
xor
roll
loop
addb
lea
fisubrl
cmp
adc
scas
sub
adc
adc
mov
cmpsl
nop
into
jp
sub
push
jmp
out
push
nop
ja
mov
fimuls
xchg
sbb
daa
push
mov
fists
stos
lock
mov
xor
mov
dec
arpl
sahf
sub
and
xchg
adcl
mov
sbb
stos
call
call
cli
out
sub
rcrl
inc
push
push
inc
fcomip
clc
xor
cli
sub
push
data16
test
mov
inc
call
cltd
xchg
add
xchg
jl
sub
jmp
cmp
jg
adc
or
and
js
fwait
push
or
loope
inc
inc
and
mov
lods
cmp
add
inc
mov
add
fisttpll
jne
lret
mov
mov
dec
mov
inc
lods
jg
insb
sbb
bound
mov
div
sbb
push
cmpsb
push
inc
or
aam
fwait
inc
sarl
roll
cmp
xchg
jmp
push
mov
stos
imul
xchg
sbb
enter
sub
hlt
xor
fcompl
push
jle
xor
inc
inc
and
stc
fnsave
pop
idivb
imul
rcll
insb
ljmp
out
test
rclb
sub
mov
rorl
mov
flds
jns
mov
or
movsl
enter
jb
sti
cmpsb
test
fmulp
iret
bound
or
cltd
xchg
sbb
pop
movsb
cmp
mov
fbstp
cmp
push
enter
loope
loopne
aas
add
in
fists
loopne
push
fistpll
stc
mov
lahf
mov
pop
movsb
dec
push
add
add
add
add
inc
sub
inc
and
pop
outsb
or
add
jae
sbb
rorb
rcrl
mov
enter
xchg
into
xor
xchg
aas
jae
adc
xor
test
in
insl
mov
loope
add
jge
fisttps
repz
ret
inc
daa
out
mov
mov
xlat
xor
aaa
in
rorb
inc
not
jnp
xchg
sbb
movsl
pop
xor
inc
fsubs
or
stos
lock
shrb
xor
das
nop
push
pop
push
adc
add
dec
fildll
repnz
lahf
in
test
sub
lret
or
push
sbb
jno
inc
pusha
adc
out
jmp
cmpsb
dec
mov
fs
inc
hlt
mov
or
shlb
nop
dec
jg
addr16
push
dec
inc
js
cmp
popa
pop
fstp
loopne
inc
mov
dec
loope
popf
call
or
mov
inc
add
fidivl
cmp
jle
out
es
or
cmp
push
push
sub
iret
mov
xchg
outsb
arpl
adc
or
out
int
xor
lds
fidivl
cmp
push
test
sahf
cmp
adc
fisubrl
pushf
mov
mov
xor
iret
dec
mov
insb
mov
inc
xchg
dec
sub
xchg
lret
lock
xlat
adc
push
jbe
sub
outsl
ror
stos
sub
frstor
clc
inc
inc
adc
out
jne
stos
push
add
sub
adc
xor
gs
adc
inc
and
clc
inc
sbb
xchg
imul
call
mov
ljmp
and
divl
in
jmp
aad
add
or
xchg
ljmp
lret
insl
sub
lea
mov
push
test
xchg
shll
movsl
and
inc
mov
ja,pn
dec
je
push
mov
push
outsl
sub
pop
in
jnp,pn
dec
cli
mov
sbb
les
enter
sti
add
sti
inc
outsl
sbb
sub
mov
push
int
lock
jle
movsl
ficoms
bswap
movsb
xor
mov
dec
mov
ljmp
push
sub
mov
lea
bound
pop
lds
pop
nop
loope
gs
push
dec
adc
xor
jne
adc
cltd
inc
es
fists
ret
std
push
push
pop
cs
stos
into
mov
xchg
fwait
dec
movsb
jg
inc
xchg
inc
dec
fsubrp
mov
xlat
iret
addl
repnz
aaa
add
pop
int
xchg
and
fisttps
dec
loop
add
ret
gs
call
dec
sub
movsb
sbb
es
mov
jae
filds
daa
mov
fnsave
arpl
jp
pop
hlt
ret
add
mov
mov
xchg
adc
jl
int3
nop
dec
out
pusha
inc
dec
out
xchg
sahf
lea
sub
in
lea
repnz
inc
adc
pusha
stc
adc
lret
xor
das
dec
sarl
mov
sahf
in
mul
dec
andl
xor
cmp
cmp
imul
add
mov
add
test
insb
leave
nop
movsb
sbb
jge
cli
jl
inc
jmp
movsb
bound
addr16
pop
mov
daa
or
sahf
jge
inc
lret
roll
xchg
push
lea
pop
lods
fldcw
or
out
je
mov
dec
into
mov
mov
in
cmp
adc
fwait
pop
into
and
cmpsb
jecxz
leave
fiadds
jp
or
dec
mov
test
ja
sbb
dec
dec
sub
xchg
adc
pop
adc
and
add
dec
mov
pop
jecxz
and
insl
push
push
lahf
mov
adc
dec
shlb
repz
sbb
imul
add
pop
sub
notl
xchg
cmp
cmp
sbb
jp
fistpl
rclb
mov
je
push
fmulp
sbb
mov
ja
enter
jecxz
mov
loopne
mov
inc
lret
mov
lock
jmp
or
ljmp
int3
clc
addb
mov
and
mov
lock
xor
loop
jge
mov
fadds
or
out
cltd
add
and
adc
cld
lods
test
add
les
add
sbb
mov
xor
xor
adc
movb
and
pop
mov
dec
addb
popa
cs
dec
push
jmp
pop
mov
es
sub
mov
add
insb
or
pop
test
imul
push
rcll
decb
test
xchg
jne
sub
sbb
mov
outsb
xor
add
add
mov
mov
mov
mov
sbb
push
mov
pop
ljmp
jecxz
movsl
loope
fdivrp
jns
lcall
adc
jno
aas
dec
mov
mov
jp
and
pop
cmp
sub
adc
sbb
loopne
cwtl
pop
ret
jne
xchg
aad
test
push
bound
dec
testl
mov
mov
inc
bound
jl
test
je
lea
xlat
adcl
cmpsl
mov
adc
mov
test
mov
jp
xor
jbe
roll
lahf
cwtl
xchg
icebp
je
iret
ljmp
pop
repz
in
cwtl
icebp
outsl
sti
jo
gs
cmpsl
test
jg
jle
test
pop
or
mov
popa
mov
shrb
or
lahf
xchg
pop
js
enter
sub
clc
dec
push
xchg
mov
repnz
cmpsl
pusha
cmpl
popl
push
dec
rorb
notl
dec
les
leave
xor
and
repz
negl
xor
jp
movsl
cmp
xor
jge
sub
lea
popa
push
xchg
scas
dec
cmp
out
jl
repnz
cld
and
clc
sub
sub
cmpsl
icebp
sub
sbb
jge
fstl
adc
or
inc
mov
loop
test
stc
pop
mov
mov
push
in
or
inc
pop
mov
mov
repnz
sbb
push
push
and
xor
shrd
popf
or
popa
lret
test
mov
sarb
xor
test
inc
jne
clc
adc
aas
mov
rcll
repnz
leave
xor
insb
sub
pushf
or
mov
push
sub
dec
cltd
in
jne
in
out
daa
inc
push
lahf
xchg
or
pusha
mov
clc
fistpll
mov
pop
xor
sbb
dec
roll
adc
imul
pop
aad
ret
adc
mov
xchg
insb
mull
leave
bound
outsb
mov
ja
fisttps
inc
jge
push
pop
mov
in
cmpsb
cmp
nop
sbb
or
je
or
arpl
and
fs
jge
ja
cmc
lret
pushf
std
call
mov
mov
lock
inc
push
data16
int3
fnstenv
xor
dec
sbb
arpl
sbb
xor
cmp
out
adc
and
mov
sbb
and
lcall
or
mov
add
rol
push
pop
sbb
jl
pop
fisttps
dec
xor
adc
or
mov
jae
inc
fsub
fistl
loop
jl
mov
pop
hlt
roll
lea
mov
cmpsb
cli
lea
lret
fucomp
into
imul
sub
das
aaa
fnsave
mov
out
jg
ds
jae
inc
and
cmc
mov
aam
cld
push
lock
out
mov
rcr
mov
xor
dec
xor
fmul
outsl
movsb
jmp
addr16
cld
xor
sbb
jno
gs
dec
mov
push
cmp
shlb
or
movsl
iret
shll
cld
xchg
push
inc
add
out
imul
mov
xchg
xchg
mov
shll
dec
mov
push
mov
not
repz
push
sbbb
xchg
cmp
loopne
or
cli
sti
jns
and
or
jb
lahf
cmp
xchg
add
and
lods
push
xchg
cmp
fmull
je
out
push
mov
fbstp
or
add
jb
mov
or
adc
inc
adc
bound
fucom
mov
gs
push
into
in
sbb
loop
fists
xchg
mov
sub
jo
pop
inc
jge
shll
test
cmp
xchg
mov
dec
cwtd
fs
pop
push
jae
mov
sbb
fisubs
ret
aad
scas
fstpt
dec
pop
push
and
cmp
out
fnstsw
notb
pusha
repz
adc
insl
mov
mov
mov
loop
out
and
out
mov
outsb
sub
shll
xor
cmp
inc
mov
out
and
jl
gs
stos
mov
cmc
pop
rcll
inc
subb
popa
lds
cmp
jno
rorl
xchg
inc
nop
fsubrs
pop
subb
stc
and
iret
cmp
hlt
xchg
cmpsl
mov
ss
mov
outsb
push
in
imul
add
fsts
push
inc
data16
pop
push
push
sbb
mov
stc
mov
fdivrs
fs
movsl
cltd
test
push
push
xor
loop
pushl
pop
or
and
inc
shrb
jne
inc
fiadds
test
or
or
shrb
mov
push
call
int
jno
rcl
hlt
jne
xchg
xchg
decl
mov
aas
push
mov
jns
inc
sbb
inc
mov
mov
mov
lsl
jmp
xor
imul
faddl
popa
xchg
dec
aam
dec
jno
mov
test
dec
mov
lret
mov
sub
and
pop
flds
incb
jb
jge
lret
cmp
push
jmp
aam
shl
mov
mul
lahf
xchg
xor
pop
xor
sbb
push
imul
fwait
mov
ss
out
lock
xchg
mov
xchg
lods
call
inc
lods
xchg
jae
sub
out
xor
lds
cmp
aas
mov
sub
inc
mov
cmpsb
sbb
call
xchg
pop
hlt
mov
ds
sub
lea
pushf
pushf
dec
and
js
jp
pusha
movsb
push
aam
sarl
popf
insb
xchg
and
xchg
xchg
int
xchg
sub
jmp
push
mov
setae
dec
adc
gs
ret
add
dec
or
jo
andl
fidivs
add
movsb
fisttps
xchg
or
sbb
mov
jl
sub
xlat
pop
xchg
xchg
cltd
enter
ja
push
or
int3
fsubrs
and
xor
mov
mov
aad
sti
shlb
arpl
cs
enter
add
dec
lret
xchg
ja
dec
in
jp
adc
call
push
out
aad
lret
rcr
pushf
mov
aas
push
das
lahf
jnp
push
aad
xor
mov
push
je
je
lret
lds
fcomps
cmpsl
mov
shl
insb
nop
dec
test
insl
or
test
xchg
popf
xchg
lock
leave
cmp
das
les
ds
jnp
mov
fidivrl
xchg
fwait
adc
repz
das
adc
addr16
xor
pusha
xlat
sub
sub
mov
mov
jne
pop
jmp
jg
or
test
leave
push
sub
test
pop
lret
cs
xor
pop
enter
stc
add
jecxz
loopne
xor
pusha
xor
outsb
sbb
add
pop
sub
mov
cli
pusha
mov
xchg
iret
or
mov
outsl
pop
sahf
lret
loop
lods
sub
or
mulb
jge
mov
ljmp
jns
push
inc
or
pop
xchg
lcall
cmp
mov
lcall
cmc
mov
cli
icebp
in
xlat
test
mov
cmp
push
mov
jmp
add
dec
and
scas
sbb
mov
cmp
ficomps
sub
mov
mov
jp
pop
push
jno
mov
dec
dec
aad
push
std
jne
lods
sub
or
and
lods
lahf
fidivl
iret
pop
call
movsb
add
jle
fdivr
add
dec
mov
mov
aas
inc
xor
xlat
and
arpl
stc
jge
repnz
lea
call
stos
adc
rcrl
bound
xor
andl
enter
fisubrl
inc
lcall
sub
imul
xorb
inc
dec
pop
cld
inc
mov
cmp
inc
sti
dec
addr16
mov
pop
outsb
nop
fisubl
scas
pusha
test
adcl
leave
or
push
mov
decb
fimull
dec
notb
bound
lock
cld
filds
outsl
mov
cmpsl
cwtl
ret
inc
jne
xor
add
xchg
shll
hlt
inc
mov
fistpl
xlat
mov
ret
pop
ljmp
xchg
xor
mov
imul
jnp
data16
cli
insl
adc
gs
pop
dec
push
movsb
fstps
mov
add
adc
push
aad
sbb
cmpsl
pop
adc
sbb
and
addl
cwtl
adc
ss
insb
in
add
loop
pop
sub
jne
or
inc
das
jl
mov
dec
mov
and
lret
popa
insb
inc
xchg
lahf
fisubl
cmp
sti
jmp
push
xor
sub
fmul
cli
mov
xor
out
lods
sbb
jbe
mov
addb
mov
sub
dec
repnz
movsb
rol
mov
xor
cmp
lds
and
das
icebp
cmp
in
inc
arpl
mov
fwait
cwtl
jmp
lods
mov
sahf
cwtl
lock
ret
test
lahf
rcrl
ljmp
cwtl
sbb
test
jnp
xor
add
inc
mov
and
pop
push
insb
and
add
xor
das
xor
push
insl
push
inc
fistl
xor
and
sub
push
ds
mov
sarb
sub
pop
and
xorb
mov
shl
ja
loope
test
add
out
ja
movsl
call
and
loop
jns
cmpsb
js
pop
cli
pop
jne
std
out
movl
cld
inc
cmp
push
loopne
mov
xchg
pop
pop
lock
xchg
mov
add
fildll
fwait
sbb
xor
stc
std
popf
mov
imul
popa
neg
and
jno
push
or
sbb
jae
cli
adc
push
push
call
dec
cs
mov
repz
lcall
xor
mov
push
mov
bound
scas
arpl
mov
and
enter
movlps
jo
inc
in
jp
dec
cmp
leave
mov
dec
jb
lea
std
bound
ret
and
jbe
insl
jne
icebp
popf
mov
sbb
inc
mov
adc
dec
loope
jb
scas
cmp
std
push
xchg
mov
inc
push
add
push
lock
arpl
sub
lcall
lcall
test
sub
paddq
cmp
int3
mov
stos
stc
lahf
fmull
xchg
outsb
fmull
je
push
pop
cmp
sbb
sbb
jmp
mov
sbb
cmc
cmc
lods
sbb
int3
jb
xchg
fcomip
mov
mov
or
xchg
jmp
dec
inc
icebp
aam
rorl
mov
inc
lahf
pop
xlat
testl
push
dec
dec
call
and
xor
shll
sti
pop
push
fcomps
mov
push
aas
sbb
push
stos
inc
mov
add
xor
jns
ljmp
pop
adc
dec
sub
dec
insl
or
and
mov
lea
mov
xchg
jae
mov
sbb
push
cmpsl
into
ljmp
in
in
pop
and
das
jecxz
xchg
ficoml
repnz
push
xor
cmc
imul
mov
cmp
add
adc
test
repz
lock
push
push
push
cmp
pop
dec
test
pop
xor
mov
xchg
dec
lret
lret
adc
gs
xchg
cwtl
mov
les
push
out
testb
lds
push
fwait
jmp
add
movsb
and
fcomi
ret
jmp
rorb
jnp
mov
pop
insl
xor
sub
and
iret
adc
es
sar
aaa
sahf
arpl
adc
repz
aam
outsl
dec
cli
imul
push
xchg
outsl
in
fidivs
add
mov
test
pop
aad
adcl
sbb
xor
jl
xchg
push
movsl
je
xchg
aad
fldl
push
daa
cvtps2pd
daa
mov
dec
test
sub
dec
in
aaa
push
sbb
pop
enter
jb
cmp
fsubs
and
jle
xchg
pop
xor
inc
int
pop
out
or
dec
cmp
out
or
push
testl
scas
inc
int3
pop
lds
cmp
mov
stc
sarb
addr16
insl
adc
out
lret
xchg
dec
paddusw
jp
out
mov
out
mov
mov
test
or
mov
std
mov
sahf
and
test
inc
fwait
pop
fldcw
or
xchg
loopne
popf
mov
push
pop
push
test
sub
leave
adc
jno
adc
lea
testl
xchg
stc
jo
std
jns
popf
cmp
rcll
inc
mov
ret
mov
jno
mov
dec
inc
push
push
negb
movsl
shrb
adc
or
sbb
push
jbe
mov
cmp
inc
leave
popf
inc
xlat
dec
hlt
insl
dec
mov
outsl
cld
mov
mov
add
divl
fadds
cmp
popa
pop
mov
stos
addr16
in
xlat
add
jae
xchg
out
repz
int3
cld
mov
fsubs
test
jb
gs
repz
insb
mov
mov
mov
xor
fbstp
mov
and
or
push
dec
jge
mov
call
cmp
mov
test
lock
cmp
mov
dec
cmp
ret
stos
mov
test
out
shl
and
fstpt
sarb
cmp
loope
imul
cmp
adc
or
sub
xchg
cmpsb
ret
jl
inc
out
xlat
dec
pop
pop
pop
cld
sbb
lea
xor
pop
jle
push
or
in
mov
pop
adc
movsb
or
enter
in
and
das
test
xor
and
sti
shll
outsl
fcoms
daa
popa
xchg
dec
lea
cli
filds
lds
pushf
call
ss
outsl
jg
pop
jo
mov
out
xchg
lcallw
xchg
repz
stc
std
cmp
cmp
and
mov
sbb
push
fadd
fwait
jge
push
repz
out
push
insb
push
mov
in
stos
shl
mov
adc
cmpsl
sbb
aaa
mov
dec
scas
imul
movsl
or
icebp
fucomp
int3
das
ds
push
inc
gs
xor
popf
dec
fdivp
popf
inc
add
push
inc
lds
jmp
mov
addl
es
movsl
sarb
jge
pop
cmpsl
sahf
sahf
dec
es
insb
lret
ret
add
push
inc
jg
or
and
cli
jmp
sub
ret
lcall
in
shr
jno
lret
fsubrs
js
mov
addl
add
dec
mov
test
lret
ss
jle
lea
lret
cmp
fisubrs
jge
mov
pop
lock
jb
insb
xor
jle
out
out
out
insb
cli
lret
xor
or
sub
scas
hlt
fnstcw
pop
lret
leave
icebp
pop
fildll
shrb
iret
pop
adcb
fidivrl
fistl
xor
sub
inc
push
xor
inc
jbe
inc
dec
lock
data16
xchg
or
aad
mov
mov
mov
add
idivl
pop
popf
loope
xorb
movsl
test
adc
outsb
sub
lahf
mov
js
inc
hlt
lea
mov
add
add
jne
cli
into
test
push
aas
fmuls
enter
in
ja
pop
or
hlt
loop
mov
or
aas
and
mov
inc
in
rorl
cltd
mov
cli
mov
repnz
jl
xorb
jnp
fisubrl
inc
es
lret
push
adc
xchg
fwait
in
mulb
movswl
and
cwtl
out
fwait
testb
cmp
dec
mov
xor
repz
jecxz
out
mov
lea
imul
jb
js
add
cmp
sbb
xchg
jecxz
hlt
fmull
pop
mov
and
pop
push
popa
adc
push
xor
imul
fdivrl
mov
in
mov
rclb
cmp
jmp
popa
xchg
stos
add
cmovp
jg
adc
enter
dec
cmp
pusha
xor
mov
xchg
jo
pop
jmp
sbb
jnp
rolb
jecxz
sub
lock
sbb
je
sub
xor
hlt
sub
and
sahf
scas
mov
imul
mov
cltd
int
mov
outsl
cmc
nop
jae
or
adc
fidivl
jge
outsl
mov
sbb
dec
out
inc
into
out
psubusb
jge
fs
xchg
insb
pushf
lret
push
pushl
mov
xchg
sub
or
dec
cmp
dec
mov
jnp
mov
or
dec
in
jge
cmp
stos
test
fnstenv
frstor
adc
iret
arpl
in
push
out
cmc
out
xor
push
xor
scas
cmpl
pop
cmp
mov
push
in
int
aaa
shll
in
std
daa
jbe
sub
push
sarl
or
adc
push
pop
stc
nop
sahf
pop
dec
add
jno
mov
add
mov
in
dec
mov
fadd
pop
nop
repnz
add
cmp
int3
mov
in
jecxz
jae
scas
jl
leave
insb
mov
xor
xor
inc
mov
xor
jg
movsb
gs
lcall
arpl
inc
xor
test
mov
adc
inc
adc
jmp
test
test
cmp
fildll
in
shrl
push
adc
daa
fucomp
cmpsl
aad
and
lock
mov
adc
mov
sub
xor
cltd
mov
cli
xor
add
adcb
gs
dec
push
xor
adc
scas
sbb
push
insb
sbb
call
xor
lret
fisubl
lcall
bound
fld
mov
sbb
js
dec
fidivl
adcl
sbb
insb
int
inc
lods
or
mov
cmp
pop
jae
call
inc
mov
lea
xlat
dec
inc
mov
rcrl
popa
xchg
cltd
scas
pop
mov
les
jmp
cmc
pop
pop
inc
xchg
xor
push
cmp
mov
faddl
imul
cmp
movsb
cmp
cmpb
xchg
insl
dec
pop
cmp
in
loopne
sub
push
push
pop
adc
mul
rorb
outsl
mov
outsl
xor
push
ret
cwtl
or
call
or
pop
enter
xor
mov
int3
pop
pop
xchg
sub
jecxz
mov
mov
adc
or
je
xchg
mov
into
xchg
push
fadd
loop
mov
es
adc
outsb
out
mov
shrb
lcall
sbb
lds
test
cmp
xchg
pop
sbbb
shl
lret
sbb
rcrl
pop
pop
sub
inc
popa
and
test
out
xchg
lret
in
maxps
ret
fsubl
jns
jae
adc
cmp
rclb
andb
shlb
or
out
xor
inc
dec
scas
mov
jne
mov
out
shrb
scas
adc
mov
daa
cli
pop
outsl
sahf
cmpsb
sbb
fstpl
ds
jbe
mov
mov
pop
jbe
jbe
test
pop
or
aas
cli
inc
es
xlat
ljmp
cmp
loop
ss
cmp
test
inc
and
imulb
jmp
pop
test
xor
cld
hlt
jg
aas
xchg
ljmp
xor
pop
pop
loope
popl
mov
sub
ds
popa
fisttpl
jmp
jb
jae
sub
outsl
jmp
popa
pop
xchg
in
push
jbe
fistpl
mov
scas
sarl
cli
push
mov
shl
inc
add
or
sbb
outsb
cld
stc
fdivrs
mov
inc
xchg
fcomip
mov
or
inc
pop
inc
test
scas
stos
loope
add
adcb
jecxz
psubq
jmp
stos
pop
dec
shr
test
mov
test
pop
mov
lcall
xchg
lsl
mov
sbbl
or
add
dec
roll
push
pusha
jmp
mov
push
xchg
jl
jno
inc
test
push
sbb
sahf
xchg
and
arpl
xor
bound
lret
dec
lds
aas
push
jb
pop
cs
fildll
out
fdiv
or
xchg
dec
imul
dec
sahf
roll
outsb
push
filds
sbb
out
xchg
push
pushf
jo
ljmp
shr
mov
enter
push
mov
aam
aam
pop
ja
insb
aaa
xor
dec
stos
js
outsl
sub
movb
nop
out
imul
addr16
mov
cwtl
cmpsl
inc
out
pop
inc
pop
dec
out
aam
aam
ss
xchg
push
cltd
cmpsl
hlt
roll
insb
imul
or
fadds
outsb
aaa
push
xchg
inc
jp
insb
rcrb
in
pushf
dec
cmp
xchg
dec
adcl
add
bnd
xchg
movsb
clc
cltd
fmull
out
repz
inc
jno
leave
int3
pop
pusha
sub
push
dec
daa
mov
add
mov
dec
imul
pop
push
imul
push
push
shlb
mov
jno
out
or
sbb
inc
add
inc
sbb
fs
mov
cmp
int3
inc
add
testl
divb
mov
mov
lock
clc
mov
ss
adc
mov
out
inc
rorl
push
pop
in
inc
cmp
adc
in
pop
jo
pop
insl
clc
loop
push
leave
jmp
adcb
cmp
enter
mov
stc
push
out
stos
dec
jmp
cmp
incb
xchg
mov
mov
pop
jns
popf
inc
adc
pushf
jmp
ljmp
ss
add
daa
inc
aam
repz
jl
jo
and
orl
mov
rcrl
or
mov
mov
lcall
jle
cmc
sub
mov
loope
mov
xor
pop
cmp
or
cmp
mov
sbbl
es
in
adcl
pop
in
lods
cmp
lea
adc
sahf
repnz
push
movsb
les
or
jle
sub
outsl
aas
adc
ss
push
lea
imul
arpl
jns
or
rsm
cs
push
mov
aas
sub
aaa
jb
xorl
sti
out
and
mov
jnp
cmc
jno
pop
test
pop
pop
jp
rolb
inc
push
not
lahf
sbb
jl
leave
xchg
jmp
int3
sub
inc
in
mov
adcb
pop
pushf
js
aaa
dec
test
lret
fs
fcmovnbe
cmp
sbb
or
push
movsb
mov
nop
in
scas
jns
xor
cmp
or
pop
mov
xchg
dec
mov
inc
xchg
jecxz
loop
adc
jl
adc
popa
jle
stos
mov
ds
and
jb
mov
push
add
pop
cmpsb
sbb
push
shll
scas
adc
idivb
shlb
and
and
mov
push
mov
or
cltd
sub
and
cmp
jl
std
enter
les
xor
cli
inc
daa
jbe
gs
insl
xor
adc
adc
fwait
xchg
shl
dec
jle
gs
lcall
fidivrs
push
dec
cmpsb
add
lock
xor
cmp
mov
es
and
loop
pop
add
in
or
add
movsl
pop
pusha
push
adc
test
imul
push
iret
pop
loope
mov
int
pop
lahf
addr16
lods
pop
out
add
pop
adcb
mov
bound
fisttpll
or
and
push
pop
les
pop
lret
es
xchg
jmp
cltd
in
pop
lcall
or
sahf
push
test
je
inc
insb
out
cmovge
addr16
incb
pushf
aad
ss
cmpsb
dec
cmp
outsl
jge
pop
in
imul
or
sub
adc
and
mov
inc
sbb
arpl
dec
jae
add
ficoms
into
xlat
dec
dec
pop
xchg
push
adc
hlt
mov
dec
outsl
or
mov
jp
sub
jno
pusha
jns
pop
cmc
push
sahf
inc
fldcw
in
inc
jno
test
lea
push
data16
mov
xor
lcall
movsb
push
insl
mov
xchg
xchg
mov
enter
mov
pop
adc
jg
jle
sub
test
pop
jae
dec
jae
outsb
stos
fs
or
jecxz
scas
shll
gs
xor
cli
hlt
frstor
cmc
pop
push
lret
std
dec
pop
cs
mov
movsl
outsb
lea
add
add
fbstp
gs
push
cli
xor
mov
or
lea
fadd
sub
pop
testb
xor
jge
lea
pop
addr16
add
adc
ficompl
filds
jmp
xchg
stc
daa
pop
cmp
cmp
mov
xchg
in
cmp
lret
ret
ja
mov
mov
sub
cmpsb
mov
mov
dec
push
cmp
dec
sbb
push
js
sti
rclb
call
mov
jmp
mov
in
mov
add
das
cltd
popa
wrmsr
add
movsl
pop
repz
push
cwtl
jmp
or
ja
sub
shl
jge
cmp
daa
xchg
mov
mov
cmp
cltd
loope
jle
out
cmp
or
adc
add
lds
fstps
das
dec
mov
push
ret
les
mov
out
js
sub
cmp
ficoms
push
aaa
adc
sub
pop
pusha
pop
rcr
cmp
and
ret
adc
cmpsl
or
push
pop
adc
repnz
xor
xchg
or
sbb
xor
lcall
fs
insl
jns
shl
in
call
test
fiadds
addr16
jg
filds
adc
sbb
mov
pop
outsl
outsl
js
pusha
xchg
mov
jno
aad
mov
cmp
xchg
push
dec
mov
mov
xlat
pop
jmp
ret
cmpsb
xor
add
int3
stos
hlt
rclb
lods
mov
fcompl
xchg
mov
loop
shll
and
jl
lods
pop
pop
lcall
add
push
xor
int3
push
mov
ficoml
lock
rclb
shrl
jle
pop
inc
mov
pop
enter
ret
jg
jmp
mov
xchg
jp
jns
mov
xor
lahf
ret
notb
jge
shlb
pop
jnp
xor
push
xchg
sbb
fstl
pop
pusha
out
jl
jecxz
rcrb
scas
ret
xchg
inc
xlat
pop
lods
xor
aas
mov
add
mov
inc
outsb
stc
scas
jge
cld
mov
sarl
scas
insl
push
imul
adc
test
cmp
push
mov
cli
out
mul
or
xchg
in
lcall
and
sub
and
pushf
and
jne
jns
push
dec
push
and
jecxz
mov
mov
jmp
fimull
adc
xchg
and
es
pop
xchg
imul
xchg
ret
jmp
cwtl
insb
inc
pop
pop
inc
push
xchg
xor
clc
mov
pushf
jns
fst
xchg
lock
sbb
int3
xchg
lods
cmpl
mov
pop
andl
popa
xchg
fbld
pusha
cmp
or
fnsave
pusha
adc
icebp
push
jle
mov
aaa
mov
movsb
stos
jbe
mov
xchg
addl
add
and
cmpsl
mov
scas
stos
mov
test
movsb
xchg
sub
rol
out
push
mov
roll
jbe
scas
cwtl
or
or
xchg
sar
mov
sub
mov
stos
add
mov
cmp
jp
xor
jns
push
add
popa
xchg
sub
stos
push
lret
mov
lcall
add
mov
mov
adc
mov
and
mov
lret
in
mov
mov
jg
movsl
scas
or
decl
int3
pusha
pop
cld
adc
movsl
je
in
push
push
push
sti
imul
out
xchg
push
mov
mov
and
rolb
bound
fnsave
aad
stc
push
clc
inc
jmp
mov
add
pop
push
push
cmp
mov
mov
icebp
es
sbb
test
jecxz
data16
hlt
subl
scas
xor
dec
push
sbbl
sub
aas
fsubrp
sbb
fimull
push
cmp
jecxz
adc
cmpb
mov
jmp
push
das
pop
fwait
xor
adcl
jg
sbb
add
pop
shlb
dec
or
dec
jae
in
mov
or
mov
outsl
ja
dec
test
cmp
sub
mov
ljmp
xchg
add
mov
sti
xor
push
testl
add
adc
pop
call
cmp
xor
ror
jbe
jmp
push
lods
leave
jnp
outsb
xchg
mov
pop
mov
cmp
addr16
clc
mov
repnz
cmc
les
jne
push
add
in
stc
test
add
xor
pop
add
add
or
inc
sbb
inc
mov
jecxz
sbb
sub
hlt
mov
cwtl
fisttpll
cld
pop
xchg
adc
jp
add
fildl
stos
mov
scas
arpl
and
loope
cld
add
test
sbb
in
testb
add
push
sbb
push
xlat
push
ja
ja
aam
popa
jecxz
inc
adc
xor
daa
aad
push
pop
scas
xchg
sbb
inc
dec
dec
jl
cmp
mov
int3
add
cltd
rol
sub
lcall
pop
out
stos
inc
jmp
dec
out
int3
xlat
pop
cmp
outsb
call
mov
adc
pusha
inc
call
jb
push
imul
pushf
sbb
nop
cmp
adc
jo
int
jno
ss
sbb
pop
icebp
dec
imul
mov
xor
lahf
rcrl
jge
xor
outsb
and
mov
out
nop
pushaw
fsubp
stos
and
in
movsb
packuswb
insl
cmp
dec
or
jns
xlat
add
pop
xchg
add
jne
sbb
fldcw
xchg
pop
pop
test
mov
iret
les
into
mov
inc
aad
scas
adc
fwait
cwtl
in
xchg
jne
fsubrl
mov
test
shlb
xchg
test
repz
mov
add
in
out
and
mov
ss
jnp
rclb
leave
add
ror
fdivrl
into
imul
cmp
xchg
mov
or
and
inc
push
add
inc
fxch
pop
lods
enter
dec
xchg
and
and
adc
and
push
test
loop
dec
movsl
jmp
test
aad
cltd
in
pusha
jbe
mov
mov
pop
and
adc
aad
or
jne
mov
sarl
mov
scas
fwait
outsl
pop
mov
test
mov
mov
push
fisttpll
or
rclb
mov
mov
adc
add
and
inc
add
aam
lret
pop
jmp
andb
ds
mov
mov
jecxz
pusha
mov
cmp
sbb
xorb
add
inc
dec
or
hlt
jp
inc
mov
mov
cmp
iret
es
mov
mov
push
and
jge
ss
pop
mov
mov
xor
xchg
popa
call
icebp
in
cmp
push
xchg
sub
dec
push
mov
out
lcall
push
repnz
mov
mov
mov
pushf
jb
lock
sbb
adc
cmp
cwtl
mov
iret
repnz
adc
ret
daa
loop
push
std
pop
pop
mov
mov
mov
ds
or
in
xchg
loope
nop
shl
adc
ss
xor
and
popa
lds
lds
data16
ja
dec
adc
pushf
inc
pop
test
mov
bound
or
pop
push
das
push
packuswb
shl
pop
aad
rcll
xor
mov
in
cmpsl
push
ror
dec
mov
ret
add
lods
sub
in
cld
nop
push
sbb
je
repnz
push
cwtl
xchg
lock
nop
pop
rorl
pop
aaa
int
sbb
pop
ja
fbstp
int
xor
pop
adc
add
inc
pop
roll
pop
mov
push
lods
insb
adc
sti
mov
jge
in
les
push
add
stos
pushf
ss
and
push
insb
daa
arpl
sub
lods
les
in
xor
mov
xor
and
aad
mov
inc
leave
sbb
out
sub
dec
insb
ja
jle
test
push
xchg
in
fldl
es
sub
pushf
into
cmp
xchg
test
push
aas
imul
rclb
dec
push
sub
cmc
repz
mov
cmpb
clc
pop
lock
push
xchg
es
fcompp
andb
jns
popf
outsb
and
jns
sbb
mov
into
cmp
mov
pop
scas
xor
or
xchg
mov
adc
push
andl
cmp
sub
cmpsb
scas
test
test
sti
rcr
aad
ficoml
mov
aam
jns
dec
loop
idivb
lods
dec
cmpsl
mov
add
fstpl
pop
xchg
push
stos
jle
cmp
xchg
mov
mov
ja
fildll
dec
dec
sub
std
cmp
orl
das
mov
lods
push
icebp
or
sbb
xchg
mov
shlb
scas
inc
cmp
fstpl
mov
pop
out
adc
push
push
inc
mov
pusha
jmp
mov
lret
or
xor
int3
notl
imul
lea
cs
jmp
xchg
or
or
dec
shll
sti
aam
mov
iret
loope
arpl
mov
push
push
xor
leave
ljmp
in
ret
fdivp
subb
xor
popf
push
test
std
mov
pop
test
jb
js
inc
and
std
cmp
adc
push
cli
pop
pusha
mov
add
add
scas
popf
sbb
xchg
push
mov
decl
xor
sbb
test
and
or
fs
nop
cmp
jmp
insb
pop
subl
das
hlt
mov
jmp
out
pushf
push
imul
repnz
inc
mov
aam
shr
mov
outsb
push
imul
aaa
fcoml
xor
ss
inc
and
mov
fdivl
jle
cmp
jns
pop
hlt
xor
cmp
dec
xor
pop
add
fcmovb
add
cmc
xchg
or
mov
and
pop
mov
pop
mov
or
shrl
push
aam
scas
jnp
jb
mov
scas
rcl
lret
cmpsb
aas
jle
xor
cld
subb
or
cmp
and
pop
inc
cmp
dec
mov
gs
loop
jl
sub
jp
and
out
into
les
jo
mov
scas
dec
mov
popa
pushf
mov
xor
pushf
je
pop
mov
xchg
sub
inc
jmp
sbb
inc
jne
loop
pop
loop
sbb
push
pop
xchg
loope
loop
mov
and
dec
sti
movsb
mov
inc
pop
pop
dec
mov
outsl
lods
or
sub
cwtl
pusha
push
mov
and
mov
xchg
xchg
arpl
xor
sbb
das
cld
and
and
stos
fstpl
les
nop
push
push
fldl
addr16
push
mov
adc
movlps
inc
xchg
pusha
dec
movsl
sbb
or
and
pusha
push
mov
jmp
jns
lahf
or
sub
xchg
sti
pop
sub
inc
and
imul
sub
adc
adc
mov
or
bound
sub
sub
lods
and
lds
scas
fildl
mov
rorb
mov
xchg
imul
mov
xor
fisubrl
in
adc
lret
out
adc
ficompl
xor
dec
mov
fwait
xchg
in
sti
daa
lret
cmp
push
mov
inc
out
popa
push
xchg
pushf
mov
add
xchg
push
add
jge
add
xor
xchg
xchg
clc
sbb
mov
mov
mov
mov
dec
xor
add
sbb
cmp
test
dec
push
jbe
icebp
clc
and
pusha
and
xor
xor
adc
jmp
cltd
push
stos
mov
cwtl
loope
fs
shlb
or
scas
lods
push
jb
out
jbe
nop
hlt
pop
xchg
mov
mov
inc
xchg
les
jno
sbb
and
push
je
fiadds
imul
xor
testb
mov
paddsw
data16
icebp
lret
mov
mov
mov
mov
addr16
dec
mov
jbe
mov
cli
ss
add
dec
rolb
rclb
adc
in
insb
and
repnz
fldenv
push
dec
out
mov
pop
pop
dec
dec
outsl
movsl
pop
movsb
add
sbb
fwait
inc
or
xchg
fldcw
mov
jbe
test
adc
xchg
and
xchg
inc
cli
ret
sub
fmull
mov
loop
rcll
xchg
fdivrl
fbstp
xor
xlat
xor
hlt
dec
xor
sub
jle
fcomi
jnp
icebp
shll
adc
jne
adc
popf
leave
cmp
dec
mov
bnd
mov
dec
inc
sbb
push
mov
mov
adc
sub
jne
daa
out
ficompl
lcall
shr
cmp
cmp
subb
in
add
sub
xchg
lahf
jo
add
cli
mov
sub
dec
inc
in
lret
push
push
and
or
das
lea
mov
test
xor
pushw
push
mov
fcomi
fdivr
jno
or
sub
mov
daa
orl
rclb
lds
movsl
xchg
and
outsl
outsl
ffreep
and
sub
adc
or
mov
pop
push
repz
push
sbb
pop
add
das
in
mov
add
cmp
dec
nop
fimull
fisubrl
dec
lahf
dec
mov
dec
icebp
and
inc
into
sti
inc
repnz
cmp
jne
push
aaa
insb
movsb
add
cmc
push
and
and
rcl
aaa
ljmp
jbe
test
jge
ds
out
pop
add
sbb
jne
dec
push
movsl
cltd
jmp
jl
pop
rcl
inc
jb
popf
inc
fdivr
push
lret
mov
es
call
std
cmp
lret
jp
pop
jne
adc
pop
inc
or
fiadds
add
and
fsubrs
idivb
adc
dec
sub
test
enter
out
lret
sahf
mov
or
cmpsb
xor
outsl
ja
add
push
ror
inc
icebp
pop
mov
mov
inc
mov
pop
mov
fdivl
cmpsb
xchg
ficoml
cmpb
xor
lds
jmp
sub
ss
add
mov
sub
stc
and
jbe
fs
lcall
xor
jb
add
sbb
das
inc
push
dec
mov
lock
push
test
push
out
adc
mov
pop
in
inc
lret
dec
stos
push
cmp
xor
stos
xor
adc
rclb
pusha
subl
xchg
push
shll
into
inc
inc
int3
hlt
xchg
fucom
ss
mov
mov
pop
inc
lcall
ret
pop
js
and
xchg
incb
push
aad
neg
aas
or
mov
das
cmp
inc
sub
int3
fnstenv
jo
ja
add
mov
ja
mov
push
dec
cmp
fdivr
pop
inc
mov
sbb
dec
cmc
mov
sub
bound
lods
fnstcw
mov
out
sub
sub
pusha
inc
popa
mov
inc
inc
popa
jo
outsb
idivl
jns
inc
loope
sbb
or
mov
and
add
add
sub
dec
inc
xor
mov
stos
pop
scas
jae
xor
and
das
cld
mov
mov
mov
and
push
push
lods
in
out
mov
leave
or
out
xchg
pop
fisubrs
fisubs
sahf
push
es
mov
lock
in
pop
adc
loopne
sbb
pop
xor
mov
ja
or
xorl
jns
int
jne
add
jae
repz
icebp
jnp
dec
subl
mov
inc
pop
fdiv
adc
adc
call
lcall
xorb
mov
ss
jno
ds
shrb
cmpsl
pop
jmp
rorl
or
add
lret
mov
cmpsl
mov
and
sub
popa
mov
or
dec
jo
cltd
stc
cmp
dec
add
ljmp
out
adc
or
rol
push
aaa
clc
add
rorb
das
xchg
int
ljmp
inc
lea
sahf
stos
rcrb
popl
push
sbb
sbbl
mov
in
leave
mov
lahf
cmp
xor
dec
ja
push
and
push
and
inc
xchg
fidivs
push
aas
mov
pop
mov
data16
add
cmpl
leave
lret
ret
out
int
mov
cmp
xchg
dec
push
cmp
inc
cs
add
push
loopne
movsl
sub
add
cli
gs
dec
dec
lret
inc
fiaddl
mov
adc
cmpl
jns
stos
inc
xor
roll
std
cld
or
xchg
mov
xor
mov
or
push
shll
fdivrs
jmp
cmp
es
fstpl
mov
in
test
lcall
adc
cs
adc
mov
shrb
dec
pause
js
or
pop
addr16
push
rorl
ljmp
push
mov
les
xchg
ss
cwtl
mov
jmp
sahf
sti
inc
jl
sbb
dec
xchg
movsb
or
mov
addl
jmp
jg
push
pop
xchg
add
jb
pop
out
int3
pusha
push
fdivs
and
mov
test
sub
mov
xchg
dec
repz
fstl
popf
sub
sub
jne
fists
dec
fildll
inc
loope
clc
pop
iret
dec
adc
lret
cli
call
gs
dec
ljmp
shr
into
aad
push
clc
jle
imul
fucomp
jg
inc
sub
aas
cli
xlat
cld
mov
pop
aas
outsl
xchg
xchg
xchg
sub
fmuls
daa
iret
cmp
jne
ja
cmp
popa
into
mov
adc
xor
insb
xchg
js
lods
or
and
fs
in
cwtl
push
pushf
push
mov
inc
xor
dec
sbb
ss
repz
daa
test
push
or
fidivl
nop
sti
enter
call
insb
mov
mov
aaa
jl
mov
push
daa
cs
add
mov
push
mov
cmp
mov
or
mov
jbe
enter
pusha
lods
xor
fstl
xchg
inc
rorb
mov
xchg
xchg
cmpsb
inc
dec
sbb
and
adc
mov
mov
xchg
int
mov
mov
data16
repnz
push
sub
js
dec
dec
scas
aam
ret
jo
add
insl
out
ret
dec
sub
in
inc
nopl
stos
cmpsl
daa
or
mov
lret
mov
push
mov
pop
adc
xchg
push
fnstsw
and
and
pop
mov
pop
pop
lea
adc
xor
inc
dec
dec
lock
lds
pop
cmpsl
cli
out
push
out
leave
mov
and
out
lds
cmp
out
xchg
shl
pop
xchg
xlat
lahf
jbe
lock
mov
push
ljmp
add
jns
arpl
icebp
jb
arpl
repz
out
dec
iret
inc
scas
cs
sub
mov
pop
jp
ret
xor
arpl
xchg
movsl
add
mov
add
sub
sub
jge
and
or
xchg
add
fistpll
ret
push
adc
and
push
aaa
data16
pop
rcll
insb
or
lea
mov
scas
pop
push
xchg
dec
sub
adc
in
lea
and
dec
lret
setp
mov
mov
mov
pop
jg
push
aas
movsb
in
pushf
inc
in
sub
neg
and
orb
scas
mov
mov
cmc
js
lea
ficoms
sub
out
adc
hlt
sti
dec
lcall
mov
mov
mov
test
cmc
mov
imul
repz
pop
add
ret
stc
roll
test
rorb
repnz
out
pushf
mov
enter
jns
jmp
push
xorl
fnstsw
lcall
add
inc
cmpsb
fstps
aas
sbb
sbb
adc
lahf
add
dec
xor
push
push
out
push
nop
push
out
and
into
pushf
mov
lret
push
jns
xchg
outsb
pop
jecxz
xor
lahf
pop
push
imul
negb
adc
mov
int
or
lcall
sub
jb
jmp
inc
push
mov
inc
push
push
ja
in
fcom
rolb
fisttpl
paddusb
mov
idivl
in
xchg
arpl
adc
in
lock
mov
fsubrl
cmova
push
rclb
lcall
dec
push
inc
mov
pop
jbe
dec
sbb
push
lea
xor
mov
ficompl
out
pop
xor
das
adc
sub
dec
push
push
push
pusha
test
aad
mov
and
xor
add
dec
int3
and
push
test
lcall
dec
and
jbe
jle
stc
fcomps
sbb
rcr
push
inc
nop
push
and
push
lds
adc
jmp
cmc
sub
in
mov
or
jg
and
out
adcl
push
adc
inc
jb
sbb
daa
add
push
idivl
scas
inc
subl
sti
stos
lahf
mov
and
cld
popf
outsl
add
inc
ret
pop
jecxz
xchg
xor
cmp
leave
out
mov
fstpl
adc
das
jae
xor
xchg
or
jmp
dec
sbb
sbb
cwtl
shl
xchg
sbb
ds
lahf
mov
insl
add
xor
lahf
push
jge
rcrl
sbb
repz
inc
call
dec
fdivp
cli
ret
aad
mov
pop
mov
dec
mov
adc
xchg
je
pop
pop
dec
xchg
mov
orl
stos
out
arpl
int3
mov
cmp
dec
sub
pop
inc
mov
test
cli
mov
push
stos
gs
lea
xor
vpcomb
pop
xchg
ret
cmp
in
push
fdivr
sbb
jecxz
dec
inc
and
aam
nop
mov
push
daa
movsb
xor
jno
fbstp
popa
je
je
in
daa
jmp
ja
mov
insl
xor
insl
in
and
inc
push
pop
pop
pop
xor
jle
jae
es
scas
pop
cld
xor
scas
pop
shrb
xchg
shll
adc
dec
xor
pop
shrb
mov
xchg
enter
xchg
out
pop
fsubrs
flds
adc
adc
mov
insb
loop
mov
cli
out
xor
mov
xchg
mov
nop
loopne
out
cmp
pop
mov
jnp
mov
rorl
push
addl
imul
pop
cld
loop
insl
leave
mov
in
xorb
and
clc
int3
fildl
out
sub
hlt
test
mov
pop
xchg
pop
cld
jmp
xchg
jecxz
ret
arpl
xchg
mov
or
mov
xchg
testl
or
jle
data16
arpl
jns
in
testb
jb
sbb
mov
jbe
int
aam
in
and
fimuls
xor
pop
inc
sub
or
push
lods
imul
hlt
jb
and
jns
adc
dec
pop
int3
test
fidivrl
les
xchg
divb
dec
std
jmp
add
mov
jge
es
fnstenv
xlat
pop
xor
in
out
jl
pop
xchg
push
push
mov
xchg
mov
xor
mov
stos
movsb
xor
repz
sub
adc
xchg
and
lcall
je
sbb
mov
push
dec
jmp
mov
mov
std
cltd
pop
mov
mov
lods
pop
fxam
push
mov
scas
into
pop
cli
dec
inc
andl
mov
ja
jl
repz
rclb
insb
sbb
fs
ja
lahf
addl
mov
pusha
jo
xchg
xchg
ret
stos
push
cmp
sub
in
sub
xchg
cli
scas
and
fidivs
jae
mov
jle
sub
or
addr16
mov
aam
sub
or
enter
xor
jnp
cmp
fsubs
into
cmp
add
inc
mov
int3
sub
sbb
mov
mov
jb
jl
pop
sbb
je
fnstcw
flds
pop
out
xor
adcl
dec
mov
xor
lret
stos
mov
repnz
push
outsl
les
stos
mov
mov
ret
mov
pop
leave
in
jg
insl
push
loop
add
dec
outsl
mov
movsl
int
mov
iret
lock
out
mov
dec
popa
mov
imul
inc
mov
lods
jle
cmp
int3
or
fdivl
pop
xorl
inc
lock
fiaddl
push
push
and
or
sub
cli
rolb
scas
xchg
jp
mov
dec
push
shl
sub
lods
pusha
mov
lods
add
push
addb
stc
lea
test
enter
fucomip
sub
or
inc
push
and
jo
push
sahf
test
push
inc
or
dec
add
shrb
lds
imul
icebp
mov
inc
bound
loop
bound
push
cmp
lock
les
and
xor
pop
in
jns
lods
add
adc
mov
inc
ret
lods
push
inc
imul
pop
push
ficomps
lret
insl
adc
or
pop
adc
push
xchg
pop
lahf
push
pop
filds
lret
or
xchg
xchg
push
je
or
cmpsl
inc
sub
repz
mov
adc
cmp
push
ljmp
xor
cwtl
dec
es
neg
pop
clc
arpl
call
idiv
out
icebp
add
jl
or
nop
and
add
cmpsb
hlt
icebp
lret
push
push
xor
sbb
andl
movl
adc
and
cmp
xchg
inc
popa
cmpsb
xchg
add
adcl
and
cmpl
push
xchg
pop
sub
dec
decb
mov
jle
sbb
mov
pop
and
and
inc
clc
sbb
out
dec
push
mov
scas
dec
mov
popa
sub
cwtl
fistpll
out
sar
and
fwait
sbb
dec
add
cmp
xor
push
stc
lea
cld
and
stc
pop
js
sbb
shlb
cmp
add
mov
adc
xchg
out
mov
mov
mov
sbb
leave
imul
insl
mov
stc
adc
inc
xchg
mov
nop
inc
jns
arpl
inc
lock
mov
and
sbb
xchg
xchg
jo
mov
pop
push
shrb
test
sub
inc
xchg
mov
sbb
shlb
mov
mov
into
shl
nop
in
js
add
xor
or
les
mov
pop
push
mov
out
adc
xor
xchg
aas
popf
test
outsl
ret
lahf
jle
mov
mov
movsl
xchg
sub
fstpl
sub
mov
push
ds
das
mov
test
movsl
mov
inc
ficompl
sub
and
or
in
jmp
roll
inc
es
sbb
xor
pop
sub
jecxz
enter
pop
addl
mov
inc
mov
repnz
dec
dec
sbb
jne
jne
cmpsb
in
push
shr
sahf
or
xor
fsub
mov
inc
rclb
lods
mov
int
sbb
js
out
adc
or
mov
in
push
cwtl
lret
cmpsb
std
hlt
jb
paddusb
enter
and
inc
push
cld
or
dec
mov
divl
pop
js
push
aam
jg
mov
outsb
and
mov
loopne
pop
push
in
inc
or
ficoms
js
mov
mov
xchg
cmp
imul
xorl
mov
incb
adc
fidivrl
or
fcmovbe
ds
in
xor
jno
imul
scas
mov
pop
int
js
repz
cmp
movzbl
cmpsb
jmp
xchg
addl
mov
nop
xor
aas
and
jp
test
jp
lock
mov
lret
push
addl
cmp
or
clc
out
jbe
sub
inc
xlat
lods
sub
mov
dec
adc
mov
std
inc
pop
cmp
add
ja
mov
inc
mov
adc
jae
xchg
roll
mov
xchg
sbb
dec
subl
lcall
dec
push
mov
dec
push
lret
sub
out
jns
mov
jae
xchg
or
repz
adc
int3
rcll
jp
sub
push
dec
inc
stc
lods
cli
push
jge
fisttpl
pmuludq
fstpl
jno
xor
add
hlt
cld
enter
repnz
repz
or
jle
cltd
mov
jl
add
push
inc
cltd
mov
or
lods
or
test
or
jp
pop
adc
das
jle
jmp
iret
test
subb
inc
inc
out
cltd
arpl
sbb
and
fsub
mov
mov
pop
mov
jle
lock
dec
ret
dec
sbb
dec
sbb
xchg
dec
repnz
cltd
push
inc
shlb
jecxz
add
xor
test
push
aam
dec
sub
mov
lods
sbb
inc
ds
outsb
loope
adc
repnz
insb
inc
lods
pop
rcrb
xchg
or
stos
mov
pop
xor
movsl
scas
movsb
imul
fmuls
adc
xchg
pop
cmpsb
shlb
xchg
lods
loopne
jne
cmp
mov
push
or
mov
into
adc
test
mov
mov
les
pop
cs
aas
xchg
cmpsb
jl
fs
insb
ret
daa
inc
movsb
leave
add
dec
shll
in
add
xor
orl
jg
sub
addb
lret
lret
cmp
sub
js
push
pop
jne
mov
negl
jge
mov
fs
or
jge
pop
pop
mov
test
test
lods
mull
and
xchg
or
mov
sbb
in
jp,pt
imul
and
test
sub
pop
push
inc
ja
sahf
jecxz
sub
ss
and
imul
nop
dec
ds
ljmp
cmp
fwait
xlat
or
mov
pop
push
adcb
fdivrp
fcompl
arpl
out
sbb
jmp
sti
push
xor
stos
xor
pop
xchg
pop
rolb
bound
mov
movsl
nop
mov
pop
jmp
aaa
lahf
daa
cs
jns
sub
test
xchg
push
add
add
es
aam
sub
in
jg
std
push
imul
mov
xchg
dec
jae
sbb
mov
xor
out
lods
aaa
push
repz
arpl
std
data16
lcall
push
mov
jae
pop
idivl
and
jne
test
pusha
fcoms
cmpsb
xor
cmp
mov
lods
insb
lret
adc
cmpsb
pop
push
out
xchg
out
mov
xchg
pop
in
and
push
aam
mov
push
ss
and
aas
sbb
push
jecxz
mov
hlt
mov
inc
icebp
mov
jecxz
mov
aad
xchg
pusha
nop
jbe
iret
xor
pop
lea
fcos
out
mov
pop
in
repz
pop
sbb
mov
adc
push
sahf
into
cmpsb
pop
add
mov
scas
addr16
mov
repz
loop
dec
or
das
test
sahf
dec
sub
les
enter
scas
xor
out
and
int
pop
mov
sub
roll
mov
mov
pop
out
shrl
fldt
aaa
sub
mov
repnz
push
ljmp
adcl
pop
mov
inc
adc
sub
xor
cltd
bound
movsl
fldl
scas
inc
inc
sbbb
mov
hlt
xor
mov
xchg
sub
pop
pop
les
inc
aad
aas
lods
mov
sub
outsb
pop
push
xchg
mov
dec
mov
popa
jns
inc
mov
push
out
lods
fmull
pop
inc
push
xchg
lods
dec
cmpsb
enter
xchg
pushf
and
imul
inc
inc
jl
std
rcr
scas
push
push
mov
inc
imulb
lods
or
lds
js
inc
icebp
and
aam
scas
inc
adcl
and
outsl
sbb
jge
fadd
mov
sub
mov
orb
add
jle
mov
jge
dec
dec
addr16
mov
mov
adc
incl
sub
mov
repz
aad
int
fbld
or
je
cltd
ss
rcr
frstor
cmpsb
xor
test
sub
xor
pop
jns
fs
jbe
lahf
cmpsb
in
lahf
jmp
fucomip
ds
sub
rep
xor
sub
or
jge
xor
subb
dec
mov
xor
sbb
push
add
ds
pmaxsw
pusha
scas
mov
cmpsl
aas
mov
adc
sub
inc
or
jg
subb
aam
int
mov
pop
add
rorb
ljmp
and
cs
xor
fdivl
imul
xchg
xor
repnz
icebp
inc
pop
pop
lcall
fwait
in
sbb
out
xor
scas
jno
sub
and
push
cs
push
jns
xchg
popa
xchg
pop
add
and
enter
mov
es
push
mov
sbb
cld
fdivl
mov
sbb
jmp
add
and
std
push
outsl
sub
outsb
loop
jo
dec
aaa
test
xchg
cmp
sub
inc
ret
and
pop
xchg
xor
push
add
jge
popa
push
adc
into
gs
xor
lock
fwait
mov
loopne
or
mov
ds
cmp
mov
sub
inc
stos
mov
les
repnz
jnp
test
lock
movsb
fists
add
leave
mov
movsl
push
das
sub
xor
shlb
and
cmc
icebp
sbb
les
cmovg
mov
sarl
test
pop
mov
lcall
cwtl
mov
hlt
adc
rolb
fsubrl
mov
lods
push
xchg
sbb
pop
jnp
test
pop
js
nop
ret
add
jmp
dec
stc
push
sbbl
xchg
or
mov
nop
in
ss
pop
mov
dec
sbb
or
lods
jecxz
dec
xor
in
jl
adc
lret
lods
jp
aas
jne
int
xchg
loope
lret
stos
dec
js
movsb
jmp
sub
adc
pop
in
mov
mov
pop
sub
cmp
dec
subb
in
lret
ljmp
sbb
repnz
xchg
adc
mov
lods
push
loop
add
ljmp
inc
push
pop
inc
je
xor
jmp
enter
je
sti
and
fidivrs
sbb
add
ljmp
mov
dec
ret
out
mov
out
fistpll
jbe,pn
push
je
into
cld
mov
jbe
sbbb
mov
out
outsl
mov
mov
xchg
jge
loop
ret
inc
arpl
mov
sahf
or
rcrb
add
pop
inc
fbstp
iret
push
cwtl
sub
les
dec
add
shlb
hlt
repnz
cmp
dec
sub
mov
adc
xor
call
inc
shll
stos
pop
pop
mov
ljmp
mov
cli
leave
pop
adc
jp
mov
loope
imul
out
sar
int3
xchg
addr16
ret
cmp
and
fsubr
and
fisttpl
pop
pop
jo
loopne
fnstsw
mov
lahf
pusha
bound
adc
ret
call
adc
push
fs
mov
cli
or
fdivr
add
xchg
test
in
outsl
push
cmp
iret
pop
xchg
dec
stos
repnz
scas
dec
jl
push
repz
lods
push
cmp
lcall
dec
xor
mov
in
je
nop
pop
imul
leave
test
cmp
ds
frstor
mov
std
jae
outsb
push
xchg
ja
jge
rolb
dec
lds
sar
or
ret
pushf
inc
mov
xchg
jnp
or
popf
jo
cbtw
xlat
xlat
je
bound
rolb
add
mov
mov
sahf
insb
hlt
push
js
lds
sub
xchg
or
ficompl
pushf
jbe
inc
cmp
cwtl
push
ret
enter
push
and
fcom
xchg
jne
xor
dec
mov
ds
or
sbb
pop
xlat
pushf
or
jl
and
mov
cld
ret
nop
push
adc
fmull
xlat
mov
sbb
and
add
sub
xor
loop
outsb
pop
mov
in
sub
out
aam
cmc
push
fcmovnbe
add
inc
mov
out
out
mov
clc
jmp
push
xchg
xlat
push
push
sub
fidivrl
ficoms
cmp
jl
sarb
rorb
lds
xor
inc
jecxz
jnp
fsubs
sbb
stc
or
inc
or
jno
fwait
xchg
xchg
add
mov
je
jmp
ftst
push
stos
ffreep
add
test
lods
popa
or
sub
lods
adc
bound
xor
jmp
dec
rcrb
das
pop
adc
lods
jle
scas
aad
inc
mov
push
imul
dec
push
or
fcoml
xchg
repz
lods
sbb
fsqrt
cli
mov
pop
pop
pop
aam
push
test
cli
jno
mov
jge
rorb
mov
dec
fdivl
jb
int
loopne
mov
data16
sub
repz
jmp
and
jo
or
jbe
dec
push
inc
hlt
out
out
popf
iret
mov
mov
mov
lcall
push
jecxz
mov
addb
fimull
cwtl
jo
stc
mov
es
dec
movsl
or
cld
mov
into
rcl
add
outsl
mov
cwtl
inc
mov
rcrb
dec
jns
sar
xor
mov
cmp
xor
cmp
jae
gs
out
xchg
or
daa
or
cmp
cs
jnp
jbe
iret
loopne
adc
and
push
int3
incb
sbb
push
mov
std
leave
inc
jo
lahf
xor
xchg
cmp
dec
cmpsl
inc
pminub
and
inc
sbb
popf
xchg
dec
jle
mov
xchg
inc
mov
jmp
jbe
add
mov
sub
mov
cmp
push
mov
sbb
dec
xchg
scas
jne
mov
fstpt
mov
gs
fnsave
notb
push
stos
inc
jne
jo
stos
sbb
std
in
and
movsb
lret
int3
dec
jmp
adc
xchg
mov
mov
clc
popf
adc
pop
adc
mov
jecxz
sub
or
xchg
mov
dec
sub
push
lds
les
jnp
ret
push
jno
or
dec
aaa
xchg
movsl
cmp
and
in
cmp
in
loopne
cmp
jo
adc
jo
leave
mov
adc
sbb
pop
inc
mov
mov
and
in
push
andl
sbbw
pop
inc
fcomp
add
xor
aad
adc
or
and
fwait
cmp
push
movsb
cmp
test
fstpl
xchg
movsl
mov
and
cmpb
data16
xchg
pop
enter
lahf
sti
dec
dec
pushf
and
sbb
fldcw
rcrl
sahf
lret
push
and
mov
dec
xchg
pop
pop
and
sarl
mov
fcmovnbe
mov
leave
push
stc
test
mov
cli
stos
cmp
rolb
icebp
pop
fcompl
cmp
enter
imul
mov
push
dec
dec
imul
push
sarl
mov
jb
repz
aaa
in
ss
mov
loop
and
jb
lock
in
ja
or
decb
bound
sbbb
arpl
xor
faddl
mov
pop
stos
sbb
adc
and
inc
notb
push
shll
pushf
ret
movsl
es
push
les
outsb
mov
mov
cmp
add
mov
sbbb
cli
cmpsb
fwait
mov
xchg
cmp
jo
fcompl
fmul
cli
sub
popa
stc
xor
loope
pop
aam
mov
fidivrl
or
add
stos
out
push
leave
jne
cmp
ret
pop
and
leave
fucomip
jmp
adc
rcll
cmpsb
movsl
sarl
dec
push
sar
scas
lds
sbb
pusha
dec
loope
scas
rcll
mov
xor
mov
scas
aaa
add
push
lods
adc
lret
lods
pop
adc
fstpl
xchg
pop
jmp
outsb
or
xor
cmp
orl
xor
scas
jmp
mov
xchg
nop
popf
dec
lret
add
nop
ret
mov
mov
mov
push
mov
and
push
add
cmp
mov
idivb
jns
push
dec
ja
xor
ror
jo
sub
pop
xor
fiaddl
dec
ror
xor
jle
lods
fisubrs
mov
cld
mov
mov
or
enter
push
pop
test
jg
mov
cltd
or
cmp
push
pop
je
adc
dec
lock
popf
int
divl
mov
mov
dec
test
sub
push
inc
xor
pop
pop
pop
cmp
inc
or
enter
cmp
xor
pushf
outsl
test
fcmovnu
mov
into
push
fsubl
scas
lcall
dec
and
adc
jb
pop
add
pop
scas
dec
add
addb
int3
rcl
adc
loopne
sbb
lods
xor
mov
push
lea
aam
jecxz
inc
fs
mov
pop
adcb
iret
sbb
add
pop
shll
sbb
xchg
test
add
test
mov
dec
or
sbb
test
jg
pop
out
xor
xchg
pop
add
fwait
cltd
jmp
sbbb
mov
jp
testl
test
push
aaa
or
stos
ret
lods
icebp
faddl
imul
or
inc
xor
loopne
mov
ficoms
movsl
cmp
cmpsl
mov
movsl
pop
adc
das
repnz
rolb
sub
clc
lcall
add
adc
jnp
jno
lea
inc
push
clc
add
outsb
and
addr16
lea
sbb
mov
mov
add
into
insb
fdecstp
push
ffreep
aad
imul
sti
xchg
xor
gs
mov
shl
xor
rol
call
sub
nop
shrb
mov
fdivrl
push
shll
es
sbb
push
sbb
cmpb
dec
pop
add
inc
into
rorl
dec
cmp
pop
into
xchg
sahf
pop
xchg
movsl
test
adc
push
sbb
sub
xor
jae
imul
push
sub
and
insl
movsl
lret
testl
stc
mov
adc
lret
std
les
shll
lods
shrb
xor
mov
xchg
hlt
dec
and
or
jp
sti
push
pusha
mov
das
pop
call
sar
mov
hlt
cmpsl
and
xor
mov
mov
pusha
xor
mov
das
jp
pop
loop
mov
bound
pop
negl
push
repnz
repz
or
dec
inc
fmul
pop
and
pop
test
adcb
mov
je
push
in
loop
xchg
inc
pop
or
sub
add
out
xchg
mov
sub
adc
das
inc
push
and
repz
push
mov
inc
xlat
decb
cmp
out
mull
ss
xor
fadd
and
lcall
and
addr16
shl
scas
test
mov
xchg
xchg
push
jle
inc
xchg
push
fsts
stc
data16
mov
push
push
adc
pop
pushf
push
cmp
jp
push
push
icebp
push
movsl
mov
xor
fwait
out
add
aaa
push
mov
add
cmc
cli
mov
dec
inc
dec
pop
movsb
push
inc
push
lods
dec
push
ret
pop
pop
dec
ss
fsubp
scas
adc
int
jmp
sub
jge
leave
jno
inc
cmp
cmp
mov
mov
and
psllq
add
xor
ja
pop
adc
test
mov
lcall
inc
pop
mov
cmp
shlb
xchg
xlat
xchg
clc
stos
insb
pusha
in
in
xchg
xchg
mov
mov
jmp
sarb
push
or
imul
and
mov
pop
jno
dec
jl
and
aam
mov
add
mov
pop
push
pop
xchg
add
xchg
mull
dec
sbb
arpl
loop
xchg
mov
cli
lds
xchg
call
dec
ds
imul
in
or
mov
lods
mov
pop
pop
out
sbbb
or
mov
addb
inc
loopne
push
aas
sarl
cmp
ds
push
pusha
jnp
pop
xor
shll
ja
inc
mov
gs
std
popa
clc
call
clc
xchg
aam
pop
test
add
loopne,pt
cmp
fwait
popl
xchg
or
mov
mov
pop
mov
push
divl
lret
adc
cli
dec
ficoml
dec
and
setg
les
mov
insb
mov
cmp
sbb
add
movsl
adcb
out
mov
sub
jnp
loopne
test
fadds
in
imul
jge
pop
cltd
xchg
bound
inc
insb
dec
out
pop
shlb
pushf
mov
test
jmp
fimull
fnstenv
or
out
sub
adc
and
mov
xchg
leave
divb
sbb
dec
mov
push
lods
mov
mov
shlb
icebp
add
addl
push
pop
sbb
test
repz
repz
push
loope
lret
and
mov
rorl
movsl
xchg
bound
mov
and
lods
sahf
in
cmc
rcll
into
push
cmc
aam
jnp
cs
idivb
jnp
pop
scas
jno
call
dec
cmp
sub
daa
xor
jb
jge
idiv
fistpll
enter
test
roll
addl
xor
and
sbb
and
adc
test
in
in
cs
mov
dec
and
std
cmpsb
in
pop
out
sbb
push
test
push
push
xor
fldt
cld
test
jmp
getsec
xor
dec
loop
sbbb
push
or
xchg
xchg
jp
out
mov
push
sub
lods
cmp
dec
push
inc
or
dec
adc
mov
sbb
xchg
xor
lret
stos
insl
lret
leave
and
bound
mov
add
or
adc
xlat
out
inc
dec
adcb
iret
inc
dec
mov
dec
xorl
into
cmpsl
les
mov
fldcw
scas
jmp
add
and
xor
nop
push
dec
aaa
dec
cltd
in
insb
lcall
jge
xlat
push
lahf
movsl
ljmp
dec
test
fwait
mov
orb
int
mov
mov
cmp
pop
jo
dec
mov
loopne
not
push
sub
xor
inc
lds
jne
jmp
out
pushf
xor
cwtl
pop
mov
lods
fdecstp
inc
out
insl
dec
sub
fsubp
sub
lods
mov
mov
mov
fisttps
xor
icebp
outsl
sbb
stos
xchg
sti
lahf
jle
sub
xor
dec
clc
push
pop
jne
sbb
cmc
cmc
cmc
xor
add
arpl
insl
xchg
fidivs
ss
lock
fistps
jo
cmp
popf
into
mov
xor
dec
fistpl
ret
fs
jnp
jb
mov
cmp
int3
sbb
lret
jne
xor
and
inc
cmpb
imul
xchg
pop
in
ret
sbb
adc
in
fnstcw
mov
jg
push
outsb
in
jg
outsb
lods
addr16
add
inc
dec
movsb
inc
aam
es
jmp
sub
dec
and
inc
or
adc
pop
or
data16
mov
push
lods
lret
pop
pushf
pushf
es
xchg
jo
iret
js
push
adc
xchg
fbld
loope
test
out
outsl
mov
mov
pop
aas
mov
add
les
imul
fisttpl
inc
aam
xchg
xchg
int3
pop
add
xor
rorl
sub
bound
sbb
fs
add
cmp
in
subb
loopne
sbbb
stos
and
pop
cmpsb
fnstcw
xchg
mov
mov
pop
loope
mov
imul
mov
sbb
mov
rep
fcoml
insb
enter
mov
shll
mov
adc
lods
xor
std
fwait
js
jecxz
pop
sub
xchg
enter
sbb
cmp
inc
outsl
push
xchg
dec
mov
mov
jmp
push
lea
imul
inc
cwtl
dec
ret
push
pushf
and
mov
mov
jno
icebp
ret
xchg
xchg
adc
jae
add
lsl
cltd
lods
mov
sub
out
lds
jns
add
addr16
adc
sbb
or
out
test
dec
inc
sub
dec
xchg
arpl
popa
mov
mov
jmp
sub
or
mov
jg
jno
lret
xor
lret
ss
lock
add
shrl
inc
rcrb
fnstsw
mov
out
int
nop
scas
outsl
xchg
pop
cli
push
and
jg
push
or
sbb
lret
insb
dec
dec
pop
push
mov
adc
rcrb
adc
in
sbb
mov
sub
cmp
and
dec
sbb
or
test
in
inc
push
fwait
mov
icebp
mov
ja
pusha
inc
xchg
int3
out
sub
add
arpl
xchg
mov
shll
stos
or
in
cmp
xchg
or
mov
mov
test
add
jg
xchg
jmp
lock
sbb
clc
jo
dec
mov
lods
push
mov
cld
xchg
xlat
pop
push
iret
lods
mov
and
arpl
movsl
pop
dec
jecxz
test
in
xchg
inc
push
jge
xor
cld
or
mov
ljmp
imul
stos
mov
or
adc
inc
sbb
lock
cmp
enter
push
add
xchg
mov
dec
lahf
shrb
psubusb
jbe
imul
push
xor
loope
sbbl
pop
loop
test
sub
mov
hlt
xor
roll
add
jne
das
leave
xchg
inc
mov
and
gs
xorl
movsb
xchg
faddl
outsl
push
dec
jecxz
call
sub
mov
fdiv
das
insb
jp
xor
out
pusha
fdivr
mov
inc
daa
sub
xor
cmp
int3
xchg
mov
aaa
dec
and
inc
sbb
imulb
insl
sub
in
xchg
in
or
clc
pushf
fwait
cmp
cmp
cli
sbb
jo
cmp
inc
pop
test
cld
aam
add
rcrl
int
repz
adc
into
aaa
mov
xor
lds
xlat
scas
jne
lret
loopne
and
test
xchg
mov
push
inc
cmpb
add
xlat
pop
jg
push
lea
fwait
push
pop
lret
add
ljmp
sub
outsb
mov
iret
repnz
in
jb
ret
aas
bound
out
outsl
adc
test
fildl
sbb
cmp
push
cmc
xor
ja
lods
aas
lahf
lahf
out
sbb
lret
aas
mov
enter
lcall
loop
sub
incl
inc
je
cmpsl
pop
int
add
ja
mov
sub
jmp
jae
add
or
xor
add
movsl
xor
imul
std
or
arpl
int3
push
mov
add
inc
sahf
cmp
mov
mov
sub
pop
inc
out
xor
add
lea
daa
push
nop
icebp
pushf
push
cmp
cmpsl
ds
inc
aas
inc
adcb
xchg
inc
and
mov
aas
push
loop
fistpll
js
jmp
call
jne
mov
adc
fcmovb
shrl
inc
sti
test
sbb
mov
push
idivb
sbb
push
fadds
mov
ret
sbb
pop
fcmovnu
inc
ljmp
test
add
fstl
push
iret
and
bsf
inc
add
jg
cmp
das
push
jae
jp
ds
shlb
sbb
pop
and
and
add
mov
lret
cmp
push
imul
sub
push
jae
sub
in
xor
or
sbb
adc
jo
xchg
xchg
arpl
repnz
xchg
mov
xchg
jo
lea
xchg
int3
out
mov
pop
enter
ja
xchg
fimuls
pop
rol
mov
mov
pop
jp
sbbb
lcall
adc
mov
call
lahf
test
stos
imul
rolb
inc
loope
aad
cld
leave
icebp
addr16
ficompl
push
dec
pushl
sub
mov
fdiv
js
test
xchg
frstor
aam
int
xor
mov
pushf
pop
mov
pop
loop,pt
adcb
xbegin
dec
or
mov
mov
ljmp
mov
movsb
es
scas
or
fwait
out
loop
out
movsb
xchg
popf
push
push
pop
and
lds
push
mov
jo
inc
fs
jnp
ja
mov
or
cmp
js
mov
sub
int3
test
leave
adc
jp
push
mov
add
shrb
mov
push
sub
sbb
lahf
xor
push
in
subl
pop
enter
out
jp
sbb
push
add
in
aam
lret
xor
adc
out
lahf
lods
jns
repz
aam
cmpsl
push
dec
loopne
rolb
lret
test
adc
cs
pop
imul
icebp
adc
jmp
arpl
jmp
lcall
sbb
or
into
xchg
push
add
mulb
add
and
lock
mov
rolb
or
bound
adc
out
fs
mov
xchg
stos
push
pop
sbb
add
cmp
lods
mov
sbb
imul
jns
cmpsb
jne
cmc
jbe
jg
rclb
dec
or
stos
int
and
jne
sbb
sub
cmp
js
lods
loope
dec
jecxz
sti
fldl
push
xchg
push
mov
mov
aam
out
rclb
js
jl
mov
mov
push
nop
fsubrl
rcll
xchg
sarb
push
or
movsl
cmp
push
mov
sbb
dec
pop
jmp
xchg
xchg
shll
cmp
pop
mov
out
add
std
xchg
jbe
insl
inc
sub
out
xchg
adc
in
mov
imul
mov
pop
jg
jp
subb
jp
add
push
push
push
sahf
sbb
adc
sbb
les
mov
sbbb
jmp
push
mov
out
aam
lahf
xor
fsubl
mov
pop
js
sbb
rcrl
loopne
jecxz
or
jae
cmpsb
lea
into
jge
cmpsl
push
lret
das
enter
iret
pop
mulb
out
popl
pop
mov
scas
pop
scas
call
sub
dec
adc
and
mull
out
mov
xchg
pop
dec
aam
adc
fnstenv
stos
xor
and
pop
jo
xchg
and
pop
add
and
outsb
ljmp
add
daa
insb
out
hlt
mov
jne
lret
xlat
sti
jo
stc
jmp
test
add
push
imul
scas
dec
jnp
or
xor
pusha
pop
mov
and
cmp
lods
jmp
sub
in
xchg
aam
out
mov
imul
xor
std
and
loope
popa
push
sub
push
or
and
or
leave
mov
lret
outsl
push
das
es
loope
or
sbb
jno
cmp
in
gs
je
cmp
adcb
mov
jge
outsb
sub
ret
sti
ja
lcall
test
xor
adc
pop
mov
test
orl
mov
cmp
test
test
test
js
popf
xor
es
das
cltd
adc
jge
cmp
stos
sbb
or
jmp
int3
lret
push
je
and
popa
out
fidivs
icebp
daa
jl
mov
aad
dec
mov
fwait
mov
dec
idiv
xchg
nop
test
test
lahf
fidivrs
mov
jne
or
sub
jno
push
or
int3
add
push
sbb
or
adc
mov
xlat
clc
mov
lds
arpl
jae
jmp
jno
fistpl
xchg
jecxz
fidivs
inc
and
cmp
and
cmpl
add
push
inc
imul
cmpsl
loop
and
sbb
mov
jae
shrb
jno
arpl
cmp
sub
int
ret
mov
xlat
lods
das
dec
sbb
sbb
pop
add
push
outsl
or
push
loopne
mov
ret
lea
ja
add
fwait
push
dec
dec
outsb
rcrb
inc
pop
add
fsubr
mov
test
jecxz
xchg
cld
jno
xor
push
sbb
mov
xchg
aad
mov
push
ss
push
sahf
xor
and
jnp
push
pushf
xor
push
data16
js
add
hlt
enter
pop
stos
loope
adc
and
int
inc
aad
sbb
repz
mov
inc
ret
mov
cs
lret
jmp
shll
sbb
and
pusha
out
cmpsl
adc
xor
cmc
ja
lock
pop
push
sbb
mulb
add
scas
sub
cmpsl
sbbb
sahf
inc
pushf
ss
pop
ret
pushf
sti
test
stc
imul
sbbl
aas
test
sarl
movl
imul
dec
fwait
lret
nop
xchg
out
filds
aaa
dec
and
mov
ljmp
dec
xchg
sbb
push
cmp
outsl
jecxz
aam
inc
int
je
sbb
push
sbb
xor
notb
cmc
gs
push
cmp
cmp
mov
or
incb
imul
push
iret
imul
rolb
jne
lods
or
mov
push
jbe
add
ret
movsl
mov
dec
fildl
dec
stc
jmp
cmpsb
push
lret
jo
xlat
xchg
test
push
out
xchg
pusha
lock
xor
clc
xor
cmp
push
imul
mov
adc
pop
dec
sbb
nop
push
cwtl
cli
push
sub
scas
shlb
cmp
cld
add
cmp
rorl
fnsetpm(287
jbe
jmp
add
push
sub
dec
push
sub
sahf
aaa
jns
xchg
inc
in
sbb
in
or
mov
cltd
out
xor
or
dec
cmp
lds
test
iret
std
mov
out
fs
outsl
pop
sarb
sub
cld
jae
cmp
sub
push
loope
xchg
pop
push
cmp
sarl
mov
cmpsl
lock
fidivl
pushf
jne
xlat
ss
mov
jmp
push
cmp
ljmp
adcl
fwait
sbb
cmp
sbb
sub
add
popf
inc
inc
or
mov
inc
nop
mov
mov
push
inc
cmp
lds
sbb
out
cmp
or
jb
in
sub
xchg
or
cli
cmp
mov
jno
mov
out
adc
iret
and
scas
ficompl
add
and
jmp
fildll
inc
ret
out
and
push
gs
adc
and
cmpsl
pop
das
ror
js
xchg
mov
pop
add
adc
rcll
pop
popa
dec
in
sub
mov
mov
xor
and
jp
sub
pop
pushf
mov
mov
test
shlb
jns
xor
push
loope
ja
pop
inc
jo
pop
mov
xchg
fnstenv
aas
push
lock
adc
in
adc
lretw
pop
inc
jne
cmp
enter
loop
push
and
add
or
cwtl
mov
lahf
insl
xchg
pop
icebp
movsl
mov
or
add
js
sub
cmpsb
cmovbe
xlat
out
xor
add
mov
pop
xchg
jl
insb
lods
cmp
mov
lret
jle
leave
push
cs
add
sbb
shl
mov
ds
aaa
into
inc
sub
jp
xchg
out
call
cmp
stos
loopne
jmp
mov
rol
cltd
adc
xchg
ljmp
clc
movsl
mov
pop
inc
sarl
add
fcmovnbe
movsb
sbb
rcll
ss
jne
mov
scas
jae
pusha
xchg
cmpsb
arpl
cmp
mov
mov
imul
pop
mov
ss
out
shlb
adcb
push
jecxz
fistpll
jge
imul
cmp
imulb
mov
mov
mov
sbb
cmp
movsl
fisttpll
mov
cs
imul
sub
fwait
jecxz
icebp
push
cs
lods
pusha
mov
outsl
jns
cltd
sahf
jno
xchg
loope
mov
sbb
mov
xchg
shlb
push
adc
outsb
aam
inc
lret
xchg
dec
lahf
xlat
loop
adcl
inc
aad
sub
leave
xlat
cwtl
lcall
ja
adc
int3
fld
lret
inc
bound
push
cmc
jp
lods
or
sub
lods
and
dec
leave
cs
lret
add
test
jmp
or
pop
jns
adc
xchg
loopne
ret
shl
sti
jge
iret
imul
popf
jns
pop
dec
repnz
out
mov
inc
cld
loope
push
fst
ret
jne
xchg
jne
xchg
aam
lock
stc
stos
mov
mov
std
and
inc
adc
scas
jl
fwait
push
mov
mov
push
add
jge
lea
add
push
inc
xlat
push
inc
es
cs
mov
add
pop
sbb
fs
or
dec
lret
fcomps
mov
jns
sbb
out
subl
arpl
std
sahf
and
inc
das
fstl
xor
add
test
testl
lahf
adc
inc
mov
xchg
hlt
mov
adc
movl
jle
push
js
arpl
fidivl
dec
loope
fwait
push
xchg
movsb
xor
insb
mov
ja
pop
mov
fnstsw
bound
xor
pop
xor
and
sub
mov
add
add
pop
cs
ret
andl
sub
jle,pt
jecxz
sbb
out
inc
out
ja
imulb
or
sarb
es
iret
mov
ror
add
sub
push
jb
jl
push
test
mov
lock
arpl
jbe
and
mov
xchg
or
in
les
add
jp
push
mov
cmpsb
add
out
jge,pn
lret
fisttpl
and
outsb
shll
xchg
aad
push
pushf
mov
cmpsb
nop
push
cli
dec
push
xor
jl
dec
test
pushf
lret
and
sub
and
in
outsl
jno
push
cmpsl
insb
dec
jl
xchg
fiaddl
mov
xor
mov
or
test
push
inc
aaa
loopne
lods
mov
jne
aam
aas
jb
xlat
clc
clc
movq
sti
adc
lret
lret
jmp
pop
mov
fsub
imul
sbb
lahf
scas
adc
out
push
add
sub
sub
dec
mov
mov
sbb
movsl
sub
push
sti
enter
inc
sbb
or
add
cwtl
movsl
xor
mov
data16
sahf
stc
inc
ret
xchg
iret
mov
xor
in
sbb
aad
mov
loopne
mov
sub
push
mov
orl
lock
in
mov
in
dec
stos
and
dec
out
cld
in
xor
pop
imul
xor
insb
popa
mov
xchg
ret
add
push
cmp
sub
cmp
mov
ljmp
sti
cmpb
cld
sub
fsubs
int3
adc
dec
mov
dec
sub
mov
lods
push
setae
out
push
mov
mov
sub
and
mulb
fwait
bound
push
fldl
jmp
bound
pusha
jl
jns
sbb
push
or
mov
mov
fildll
sbb
ficomps
outsl
loop
fs
pop
sbb
jbe
jnp
test
sbb
popf
std
add
js
and
fisttps
orl
add
subb
lcall
ret
leave
push
jle
loop
sar
xor
xlat
add
mov
outsb
aas
jno
mov
sub
xchg
fldenv
in
mov
xor
inc
mov
cmp
aaa
enter
xchg
dec
and
push
jge
or
mov
mov
aaa
sub
adc
cmp
dec
pusha
loopne
fwait
mov
or
sub
call
popf
adc
xchg
fs
test
cmc
cmp
push
adc
aaa
dec
adc
adc
mov
push
mov
adc
and
xor
movsl
mov
ret
movsb
push
dec
jb
jl
bound
xchg
push
xchg
push
stos
imul
outsl
into
cwtl
loope
cmp
or
xor
popf
in
jne
mov
fsubrp
or
into
out
aad
loope
mov
cmp
cmp
inc
xchg
ret
push
mov
loop
cmp
aam
imul
in
subl
cs
mov
xchg
dec
xlat
push
adc
jns
aad
imul
ret
test
fwait
cli
scas
sub
shrl
xorb
outsb
jl
add
sub
std
mov
inc
jmp
aas
lock
adc
jb
test
xor
movb
lcall
pop
popa
pop
popf
mov
lcall
enter
aam
in
arpl
stc
pop
fs
push
cltd
xor
out
movsl
out
or
in
dec
mov
push
and
xchg
dec
xchg
das
adc
and
mov
int3
repz
and
int
subl
mov
lret
cmc
pushf
in
xchg
push
jg
push
dec
add
sbb
push
ret
dec
jno
insl
xor
std
sbb
ja
outsb
fcomps
jg
mov
push
dec
loopne
lea
movl
lcall
jmp
repnz
dec
inc
xchg
cmp
mov
sbb
int
push
mov
jbe
jmp
xlat
popa
pop
loope
mov
or
dec
mov
sbb
adc
push
sti
add
pop
rcrl
cmc
mov
push
cmpb
mulb
and
test
lds
sbb
jbe
cmp
xor
or
pop
insl
jae
scas
mov
cmpsl
mov
jbe
jnp
out
dec
inc
in
out
imul
pop
bound
shr
pop
jbe
sahf
popf
and
mov
sbb
cli
fidivrs
jns
xor
dec
testl
pop
add
pop
mov
call
pop
out
add
popf
fidivrs
es
push
outsb
prefetch
or
aam
sbb
pop
mov
fstpt
sub
aad
inc
dec
cli
stos
pop
fwait
cmpb
add
push
pop
cmp
mov
dec
or
push
rcrl
clc
ret
dec
outsb
xchg
mov
xor
aas
test
dec
in
sahf
xor
xchg
sbb
cmp
push
push
jns
ds
jle
or
mov
xor
cmp
sbb
sub
lret
daa
ja
shl
lea
fldcw
call
pop
data16
pop
leave
aaa
imul
bswap
jno
aas
and
sarl
call
mov
add
push
sahf
inc
loopne
popf
inc
mov
pop
imul
xor
jns
add
jp
xor
push
jno,pn
sub
jb
test
cmp
outsb
mov
cmp
mov
imul
test
cmp
mov
add
aas
in
and
in
xchg
leave
enter
cmpsl
loope
xchg
xor
xchg
test
test
adc
inc
jle
xchg
bound
push
sub
mov
inc
xchg
xchg
jge
pop
cmp
sbb
cmp
loopne
mov
pop
adc
push
and
fdivrl
sbb
dec
jb
push
add
mov
and
sub
mov
js
inc
lret
lahf
inc
mov
and
sub
xchg
test
int3
add
stos
adc
cmp
mov
sbb
jne
jl
cmp
mov
push
jno
push
jbe
leave
outsb
stc
add
push
inc
loope
ror
aam
sbb
jbe
stos
out
xor
mov
mov
insb
aam
mov
push
xchg
out
fldenv
jae
int
addr16
xor
dec
adc
dec
xchg
testl
sub
and
pop
fistpl
imul
int3
nop
pop
xor
imul
bound
out
adc
rcll
push
sub
and
xchg
pop
add
rcr
js
pop
or
imul
dec
jnp
jge
mov
mov
imul
push
je
mov
rorl
push
insl
sub
or
sub
into
or
pop
push
les
jecxz
mov
pop
lahf
loope
add
fiadds
movsl
js
movsb
xchg
outsb
mov
iret
imul
test
cmp
je
pop
or
pusha
mov
nop
testl
push
dec
pop
scas
rcl
stos
cmc
pop
dec
test
inc
xor
lock
mov
jo
jge
sub
leave
ficomps
or
mov
and
jecxz
pop
xor
cs
mov
fmull
insb
in
ds
dec
xchg
dec
mov
xor
mov
stc
flds
into
inc
mov
movsb
jns
aad
xor
pusha
mov
jo
stc
cmpb
sbb
out
dec
lea
lahf
stos
enter
test
lret
jge
jle
loope
dec
cld
pop
das
push
add
mov
mov
jb
sbbb
mov
arpl
mov
jne
xlat
fldt
sbbl
addr16
stos
add
cmp
pop
popf
ljmp
mov
rclb
sbb
roll
in
inc
aaa
and
xchg
enter
test
push
fadds
rep
cs
or
mov
pop
dec
or
mov
or
pushf
mov
and
pop
lcall
mov
jne
lea
pop
int
jp
inc
adc
or
mov
add
pushf
nop
ret
shrl
jbe
ljmp
fcmove
adc
stos
jnp
cs
lret
ds
pop
cmpsl
adc
pop
mov
jne
aas
cs
aas
push
ret
lahf
xchg
cwtl
xchg
mov
out
cmp
shr
push
sub
dec
nop
inc
or
test
rorb
xchg
push
out
push
or
es
jge
cld
and
mov
divb
inc
in
test
loop
lods
cmp
mov
insl
imul
or
pop
cmp
dec
test
lds
fdivs
fisttps
sbb
in
scas
scas
cmp
jo
cli
dec
mov
and
dec
jle
mov
mov
gs
adc
push
movsl
out
stos
push
aam
loop
pop
jns
cmc
lock
mov
test
jns
lods
ret
mov
ret
add
fistl
ret
std
lods
mov
daa
cli
adc
inc
xchg
fidivrl
xchg
push
imul
je
mov
test
notb
rcll
xor
rcrb
dec
into
dec
lods
push
shl
scas
mov
push
loop
and
mov
jns
inc
in
mov
mov
mov
test
bound
inc
rorb
cltd
sbb
and
cwtl
aad
mov
sti
addr16
in
addb
inc
inc
repnz
mov
adc
jnp
xchg
in
or
jmp
add
mov
aas
adc
call
dec
jle
xor
mov
adc
outsb
sbb
xor
sub
in
dec
ja
fbld
mov
xlat
lock
cmp
fisttpl
mov
xchg
popa
dec
push
fld
inc
mov
xchg
fists
or
or
sbb
lret
insl
pop
lods
in
dec
xchg
mov
out
xchg
scas
xor
cli
cld
nopl
outsb
cmp
mov
push
and
cmp
cwtl
jle
push
sub
inc
jb
scas
lea
idiv
ljmp
mov
push
inc
cmp
adc
outsb
cmp
or
xor
movsb
aas
xor
adc
imull
xorl
in
sbb
push
cmpsl
jp
divb
jmp
lcall
dec
aaa
sbb
iret
cli
dec
adc
mov
in
inc
les
mov
shrl
cmp
inc
aad
imul
ficoms
rclb
sahf
adc
sti
mov
iret
shrl
mov
std
adc
inc
hlt
and
xchg
pop
or
xor
and
stc
xchg
shlb
mov
rcrl
std
push
pop
sti
jp
add
cmpsb
and
jnp
xchg
fwait
jecxz
xchg
jge
cld
cmp
inc
xchg
sub
dec
into
inc
test
cmp
jl
daa
sbb
addb
sbb
stc
mov
aas
add
inc
lahf
imul
mov
adc
mov
adc
sub
cmp
jmp
push
xor
and
into
imul
stos
cwtl
bound
pslld
mov
push
adc
cld
cli
lock
imul
push
fnstsw
mov
jbe
cmp
pop
test
push
pop
push
sub
and
aaa
imul
inc
inc
push
das
mov
jge
xor
xor
stos
sbb
icebp
jle
cwtl
pop
mov
jns
push
repz
std
lods
loop
aam
mov
xor
cmpsl
ret
cmpsl
in
sub
mov
cmp
push
and
cmc
or
jns
enter
imul
int3
ljmp
call
hlt
push
jno
inc
int
sbb
filds
jecxz
stos
fwait
sarl
cmp
lea
sbb
cmpsl
xchg
xor
adc
scas
cltd
push
lea
mov
or
cmpsb
les
xchg
js
ficomps
mov
mov
cmp
ljmp
pop
xchg
in
icebp
gs
mov
sahf
inc
je
and
pop
mov
and
xor
lret
jno
push
sub
ret
or
ljmp
iret
adc
sbb
std
pushf
iret
in
cmpsl
cmpsb
sub
mov
popf
mov
bound
addl
and
mov
jbe
pop
pop
call
lea
bound
in
aas
adc
xchg
cmpsb
mov
sti
loop
lods
loopne
sti
sbb
scas
jge
dec
cmp
lods
mov
jnp
push
insl
mov
push
cmpsb
push
sub
dec
fidivrl
in
ret
inc
push
in
lea
mov
mov
pop
addr16
nop
xor
enter
hlt
jnp
jae
das
or
cltd
lret
mov
mov
pop
icebp
mov
leave
test
sub
jnp
mov
push
pop
jp
push
paddw
sub
xchg
cmpsb
repnz
mov
push
pop
fwait
adc
add
or
ljmp
out
cmp
lods
push
inc
int
ss
inc
add
xchg
hlt
cmp
fmul
movsl
pop
push
pop
inc
mov
je
repnz
scas
pop
ret
jecxz
aam
pop
lret
xor
mov
lahf
inc
jo
loop
and
aad
inc
les
scas
nop
dec
inc
adc
loopne
fwait
pop
jno
fwait
and
sub
leave
xchg
mov
and
or
fsubr
dec
adc
jnp
mov
sub
ret
in
jae
mov
inc
cmp
mov
push
push
mov
imul
or
fsubl
ror
stos
xchg
lret
push
dec
mov
and
outsb
cs
lods
test
push
inc
jge
shr
sbb
cmp
push
push
jae
out
mov
mov
push
mov
mov
jge
jle
popa
jl
dec
aas
fbstp
idivl
imul
jle
push
push
rcrl
andl
call
push
popa
or
pop
or
sbb
sahf
ret
lea
cld
filds
add
pusha
push
out
or
xor
adc
es
xor
idivb
cmp
ret
push
pop
jg
mov
dec
sub
add
jb
xor
inc
sysret
out
dec
lea
out
lods
out
jecxz
xor
mov
movsb
jne
insb
cmp
add
dec
imul
cli
jno
ljmp
pop
fldcw
aam
mov
add
push
or
nop
repnz
call
sahf
pop
inc
aas
in
sbb
mov
mov
lret
ret
pop
sub
roll
std
inc
pop
movsb
mov
push
fdivl
push
push
je
xlat
data16
pop
jmp
popf
cmp
sub
pop
stc
xor
pop
push
enter
shrl
push
jle
les
call
pop
outsb
and
sahf
jo
adc
xor
dec
fwait
subb
mov
ss
gs
rcrb
ljmp
xor
sbb
dec
push
xor
pop
das
popa
les
xor
sub
mov
mov
and
dec
sub
ja
lret
cmp
jbe
scas
daa
imul
test
push
test
pop
pop
sbb
pop
inc
pop
push
leave
ds
or
out
mov
int
frstor
aaa
mov
outsl
jle
shll
scas
cld
jmp
into
xchg
jno
xchg
mov
push
xchg
mov
xchg
and
hlt
fistpll
ss
loopne
add
out
sahf
adc
lock
mov
subl
xchg
cmp
mov
mov
test
fstl
pop
lsl
push
sbb
dec
fcoml
mov
or
stos
and
cs
repz
int
or
lods
mov
fiaddl
push
dec
jge
pop
jmp
cmp
add
cmpsl
xchg
dec
mov
cs
jp
jo
mov
rcr
rcrb
test
lods
sub
jle
pop
sbb
lea
es
lahf
or
lcall
call
negb
mov
jbe
stos
js
push
shll
loop
fistpll
xor
insb
push
and
iret
ljmp
xchg
and
fcmovne
repnz
loopne
and
lahf
in
inc
gs
inc
push
lret
adc
fldt
sbb
or
push
in
lods
cmp
fmul
push
lret
jmp
push
cmp
jo
xor
xchg
pop
xor
dec
pop
sbb
fistpll
or
cld
mov
push
push
pop
xchg
adc
addr16
icebp
add
cmp
fwait
push
fisttpll
sub
or
mov
iret
pop
xor
icebp
push
jne
mov
sahf
or
loope
jge
pop
nop
in
imul
sub
dec
jmp
or
mov
sub
push
adc
sbb
jae
pop
arpl
mov
cli
test
cmp
push
test
cmp
fs
dec
sbb
push
cmpsl
mov
and
lcall
inc
fnstsw
mov
jecxz
or
test
roll
pop
out
mov
dec
pop
adc
or
xor
sub
mov
fwait
pop
pop
xchg
adc
and
sbb
jno
cmpsl
or
ja
fstpl
sbb
insl
mov
xchg
iret
mov
add
xor
or
jmp
cmpsl
sub
scas
add
add
pop
jnp
mov
lcall
divl
and
xchg
and
int3
cmpsl
pop
pop
in
movsb
pop
dec
sub
mov
mov
push
std
hlt
sbb
mov
mov
out
enter
jl
xor
sub
xor
cmpsb
adc
ja
in
fs
cmp
push
sahf
lock
daa
adc
test
aad
xchg
mov
or
rolb
sub
cs
aas
std
ljmp
jp
outsl
imull
mov
sub
fwait
lds
push
or
popf
rolb
mov
mov
notl
dec
jecxz
or
scas
pop
jg
push
ds
stc
sub
scas
stos
jp
cmp
popf
mov
sub
int3
ja
xchg
sub
cmpsl
xchg
add
xor
ljmp
test
sbb
insb
ljmp
mov
adc
mov
pop
adc
push
inc
jecxz
scas
adc
and
mov
xor
arpl
pop
inc
es
push
loope
jmp
outsl
inc
imul
dec
pop
sub
cld
bound
pop
inc
addl
and
aas
adc
adc
xchg
enter
call
mov
cmp
add
jbe
test
nop
dec
ss
mov
mov
mov
add
cmpsb
push
rcl
ja
mov
js
mov
mov
outsl
ja
sub
call
rcrb
cmpsb
inc
lcall
push
fiaddl
add
cltd
sti
xchg
and
or
gs
mov
fcom
fsubs
mov
sub
dec
sahf
sub
shll
into
add
sahf
cmp
scas
xchg
sti
pop
sbb
inc
push
push
xchg
sbb
insl
jne
push
mov
shlb
cmp
jg
mov
pop
subl
sahf
jp
das
dec
mov
jne
icebp
mov
add
jbe
stos
stos
mov
mov
sbb
in
xchg
mov
fists
fsubl
push
adc
sahf
scas
mov
ret
lahf
jne
mov
icebp
push
sbb
jp
cmp
hlt
loopne
shll
rol
fnstenv
test
sub
aam
ficompl
out
testb
jl
jno
sub
repz
xor
adc
loopne
cs
and
cltd
mov
decb
add
push
sub
mov
int
cld
push
push
imul
push
mov
sbb
cmp
dec
shlb
loopew
xchg
imul
push
mov
jbe
xor
popa
dec
daa
pop
or
inc
cmpsb
add
cmp
cmpsl
dec
jne
fsubl
lcall
adc
push
add
mov
or
adc
jmp
mov
mov
push
fstps
call
mov
pop
aas
pop
inc
icebp
rclb
scas
and
shrb
les
cmp
leave
add
stos
movw
ret
lds
loopne
push
mov
mov
pop
fdivl
mov
inc
add
jle
or
mov
sbb
shll
jmp
lcall
fcomps
xchg
cltd
mov
lds
pop
xchg
cmp
scas
ret
data16
or
mov
int
or
imul
jns
xchg
enter
enter
test
pop
inc
mov
jge
popf
xor
cmp
and
nop
loopne
sbb
stc
mov
bound
mov
and
lea
nop
repz
out
fsubs
loope
and
sbb
movsl
xor
jecxz
daa
aaa
xchg
dec
mov
add
loopne
xchg
icebp
movb
xor
xchg
jl
shrl
mov
bound
out
jne
mov
es
faddl
jecxz
jge
shr
in
pushl
mov
push
xor
fldpi
add
add
nop
mov
push
mov
test
cwtl
sub
or
cli
jge
and
jmp
sbb
xchg
pop
fistl
mov
or
incb
mov
and
pop
ret
dec
repnz
mov
xchg
pop
ljmp
aam
sub
mov
jne
adc
jecxz
pop
pusha
mov
jmp
lret
out
add
xlat
sarb
scas
inc
in
out
cmp
xor
pop
fists
cmp
aad
xchg
gs
add
jne
adc
enter
pmulhw
mov
adc
mov
andb
push
or
sub
xchg
fstps
pop
cmc
xchg
stos
cmpsb
loop
outsl
and
fsubrs
mov
add
inc
ja
cwtl
xchg
mov
or
jbe
cli
cmc
lods
jb
sbb
and
mov
out
xor
jb
or
push
sar
jae
xchg
outsl
flds
cmp
push
aaa
sbb
pushf
inc
push
test
push
sbb
scas
lock
pusha
dec
xchg
clc
sub
stos
sbb
mov
mov
or
dec
callw
sbb
hlt
xchg
rcrb
xchg
repnz
mov
loop
inc
daa
add
leave
notl
sub
popa
test
dec
sbb
ret
shlb
xchg
std
xchg
and
mov
fmull
loopw
xchg
xchg
out
mov
adc
mov
dec
pop
mov
push
scas
data16
movsb
mov
lret
popf
mov
and
bswap
sbb
enter
xchg
and
ret
xcrypt-ctr
cmpsl
fisubs
inc
xor
xchg
mov
sub
jge
call
test
fnsave
or
cmpxchg
adc
or
rolb
addb
scas
pop
inc
pop
stos
sbb
stos
add
movl
and
jle
xor
mov
sti
add
cmpsb
pusha
xchg
ljmp
mov
jp
lahf
lret
inc
jae
jnp
dec
push
push
in
push
lret
add
push
lds
cs
enter
popa
jge
test
filds
sbb
pop
repnz
test
testb
fcompl
jl
sbbl
loopne
and
mov
jg
jne
mov
mov
pop
pusha
ret
mov
out
xchg
out
xchg
fwait
mov
push
xor
outsl
iret
inc
pop
clc
jmp
add
cltd
adc
inc
jmp
mov
xor
cs
fcom
push
add
jo
cwtl
sbb
mov
adcb
das
ffreep
shlb
out
test
sbb
sbbl
inc
repnz
lahf
fwait
push
outsl
lea
sub
xchg
lock
lock
sbb
lods
data16
ret
pop
mov
lds
jno
jno
in
stos
push
adc
fsubl
adc
sbb
or
pop
fisubrl
jecxz
mov
fisubs
add
sub
ss
jbe
js
inc
adc
push
xor
sub
std
int3
cwtl
imulb
xorps
dec
inc
dec
pop
out
push
bound
addb
pusha
pop
jecxz
fcompl
into
out
lahf
aas
jmp
aaa
icebp
inc
add
vpsllw
mov
xchg
dec
das
loop
inc
push
imul
insb
add
cmp
sbb
dec
inc
lods
push
pop
sub
std
das
mov
mov
jl
pop
or
outsl
and
jno
or
jmp
xlat
rcrl
addr16
xchg
shrb
andb
inc
mov
cwtl
cli
dec
out
lea
and
xchg
sahf
mov
xlat
dec
call
jge
mov
xchg
rcl
leave
jo
inc
mov
inc
cmp
cmp
mov
xorb
add
cmp
xor
and
adc
adc
mov
sti
pop
imul
add
sub
idivb
sbb
movmskps
shll
pop
sub
sub
xchg
shrl
adc
lahf
arpl
and
sbb
je
sarl
shll
repz
cmpsl
mov
jp
mov
int3
cmp
dec
adc
adcb
push
fidivs
out
loopne
push
xor
pop
adc
lds
pop
lcall
bound
addr16
decl
je
dec
arpl
pop
fldl
ljmp
lahf
cmc
in
sbb
and
cli
sbb
cmpsl
sbb
and
pop
and
mov
enter
cmp
sbb
aas
xchg
shr
jnp
cwtl
cmc
outsb
xor
ds
inc
mov
cmc
shrb
pop
mov
jb
jge
and
enter
mov
call
movsb
mov
mov
jns
jp
push
fcompl
daa
dec
int
cwtl
ljmp
mov
adc
pop
fcoms
hlt
xor
and
xor
pop
mov
pop
dec
jl
push
sarb
sahf
pop
dec
pushf
inc
xor
or
sub
jo
and
std
sbb
mov
xor
mov
jbe
xor
mov
mov
sbb
inc
jmp
lock
inc
or
inc
or
and
inc
ret
ret
jne
lret
int
mov
cmp
movsb
andl
cmp
xor
bound
lds
jb
pop
push
push
adc
or
sti
xchg
xchg
add
nop
dec
jo
popa
xor
lds
mov
insb
add
dec
popf
clc
dec
xchg
and
push
xor
pusha
push
sti
push
adc
jmp
repnz
fsubl
std
aam
icebp
sti
inc
in
xchg
mov
imul
cmp
addb
stos
mov
mov
stos
adc
stc
inc
add
mov
xor
adc
je
lret
inc
pop
out
arpl
xor
jnp
xchg
lcall
mov
mov
and
cmp
aam
test
mov
jns
jno
test
fwait
jge
clc
and
add
out
faddp
pop
dec
fnstenv
jle
adc
aad
add
shrl
mov
jb
pop
stos
or
icebp
andl
outsl
sbb
ljmp
mov
xchg
mov
sub
and
and
into
and
sbb
mov
mov
fucomi
mov
or
jo
pop
repnz
je
adc
mov
inc
jg
out
fdivrp
mov
push
pop
xchg
push
ret
or
es
mov
sub
scas
mov
pusha
and
sub
sbb
jp
dec
adc
cmp
addl
jp
add
sub
enter
inc
popf
mov
pop
xchg
fwait
jge
stos
cmc
and
add
xor
xor
sbb
xchg
movntq
popf
pop
push
push
psrld
in
data16
mov
mov
testl
push
mov
dec
daa
scas
cwtl
push
or
lret
movsl
jp
mov
loope
xor
fldcw
mov
add
aas
sti
stos
dec
dec
call
and
jo
xchg
adc
mov
aaa
out
testb
out
dec
stos
test
repz
in
es
not
adc
ficoml
jno
aas
dec
jecxz
xor
mov
mov
xor
jp
sarb
jbe
pop
fs
sbb
outsl
mov
pop
lahf
adc
not
push
lahf
push
mov
push
add
mov
xchg
cmp
cli
sbb
or
test
and
lcall
xchg
js
or
fwait
cmp
push
iret
das
leave
repnz
adc
shl
inc
sbb
hlt
shl
mov
push
dec
xchg
mov
mov
jne
idivl
subb
aaa
mov
std
fdiv
mov
xorb
inc
push
inc
sbb
push
push
shlb
mov
lahf
movsl
shlb
sbb
jecxz
in
xchg
ja
sbb
leave
lds
add
popf
add
cmp
push
cmp
out
mov
sbb
int3
push
bound
test
mov
sub
test
enter
dec
outsb
rcll
or
mov
adc
adc
orb
popf
loopne
cli
lods
jp
pop
xchg
sbb
scas
mov
xor
and
add
repnz
xor
mov
cmp
jge
mov
cmp
or
mov
mov
aam
push
sbb
loop
dec
insb
or
lcall
lock
xchg
insb
inc
cs
push
and
xor
and
adc
xchg
jge
cmpsl
int3
jbe
movsl
xchg
jmp
stc
iret
jns
and
sub
or
push
push
addr16
lds
rorb
ss
add
aam
xchg
pop
icebp
scas
jb
iret
sbb
and
les
outsb
xor
scas
inc
addr16
in
out
stc
inc
push
push
jnp
ljmp
loopne,pn
in
clc
inc
dec
push
jl
into
mov
push
leave
xchg
pop
inc
push
xor
mov
je
mov
adc
pusha
adc
scas
sahf
dec
loope
push
xchg
movsl
ret
sbb
push
out
xor
out
sbb
jl
or
adc
sbb
xor
mov
outsl
add
mov
aaa
clc
out
out
adc
dec
cmp
mov
adc
sbb
jmp
mov
sbb
mov
bound
mov
jnp
cmp
dec
js
dec
mov
sub
lahf
inc
add
inc
inc
dec
jl
and
divb
inc
or
addr16
mov
adc
scas
jle
sbb
into
xchg
sbb
jp
mov
xchg
add
push
xor
jl
fcmovnu
movsl
andl
dec
cmc
cmp
xlat
adc
jg
nop
sti
push
arpl
add
pop
aaa
jne
push
std
ja
push
sbb
rorl
rclb
and
sbb
fisttpl
push
mov
push
xor
push
xor
cwtl
xchg
cmp
scas
fdivrs
jmp
jge
jns
push
pop
jno
int3
lret
jp
or
in
dec
add
out
add
ret
in
xor
lock
add
add
test
pop
imul
cmp
dec
fcomp
cmp
fistpl
xchg
cmpsl
hlt
scas
das
orl
lods
mov
shlb
iret
inc
cmp
stos
pop
push
sbb
mov
pop
jnp
jecxz
mov
cmpl
dec
insb
pop
test
inc
ret
jmp
push
cltd
clc
std
faddp
addl
mov
test
clc
addr16
jmp
shlb
popl
movsl
sti
add
push
mov
mov
lods
add
mov
cmpsb
sbb
xlat
xor
nop
shrb
in
cmp
sbb
xchg
into
mov
pop
pop
dec
mov
jae
out
popa
fwait
and
pop
mov
xchg
push
ljmp
loopne
rol
cmp
adc
xchg
lds
lret
aad
xorb
jne
cmp
mulb
mov
sbb
xor
into
xchg
adc
mov
arpl
and
pop
push
or
orb
cmc
xchg
aaa
mov
out
mov
ficoml
fidivrl
sbb
mov
adc
pop
push
push
add
cld
cmp
mov
js
or
fdivl
mov
loope
daa
int
loope
cmp
popa
jp
jg
pop
inc
mov
ror
and
xchg
int
ret
scas
mov
jmp
ljmp
cwtl
das
test
and
loope
ss
mov
jbe
jg
or
subl
sbb
or
in
mov
push
mov
add
inc
adc
inc
outsl
in
adc
add
imull
add
mov
pop
cwtl
test
sub
push
sarl
mov
lahf
scas
inc
cwtl
inc
pop
xor
scas
cwtl
cmpsb
aad
and
test
jbe
lods
mov
jmp
sub
decw
out
push
sub
jecxz
hlt
hlt
mov
imul
repnz
push
dec
pop
test
xchg
out
loope
lds
shll
sbb
jmp
push
inc
lds
aaa
xor
subb
lods
cmp
imul
std
push
inc
jns
sahf
jle
outsb
and
popf
call
in
bound
stc
stos
loope
cmp
mov
ss
dec
shll
pop
test
outsl
pop
fsubrl
mov
push
into
lret
inc
shrl
dec
jns
mov
mov
sbb
dec
jecxz
loope
mov
lds
mov
fnstsw
or
subl
repz
mov
aad
adc
rcl
mov
out
sbb
dec
mov
push
push
mov
sbb
inc
nop
inc
cmp
mov
aas
xchg
push
adc
adc
data16
loopne
test
and
jmp
dec
fs
and
pop
adc
insb
mov
ds
out
xor
das
les
cmp
loope
and
mov
pop
std
shrb
popa
ds
push
mov
xchg
xor
xchg
setae
fisubl
mov
js
aaa
sub
xor
pop
mov
mov
mov
stos
je
cwtl
pop
and
or
jle
dec
test
shrb
rcrl
xchg
insl
stos
je
es
mov
pop
ret
xor
mov
adc
sbb
das
ret
daa
ret
mov
ss
mov
dec
sub
stos
repnz
jo
sbb
xchg
arpl
movsl
cwtl
dec
push
pop
mov
lea
dec
sub
les
lar
sbb
add
jp
aad
std
xlat
mov
repnz
leave
sub
iret
xchg
dec
cmp
and
push
push
in
out
inc
cld
xchg
addr16
cltd
xor
inc
adc
add
or
pop
push
incb
mov
fs
repz
xchg
mov
or
xchg
ljmp
mov
adc
clc
adc
add
fisubl
lret
inc
cmp
inc
adc
popf
dec
fs
and
mov
cld
aad
lret
sbb
sbb
andb
push
bound
mov
jb
iret
fldt
in
ljmp
or
arpl
or
imul
aam
inc
mov
mov
push
cs
decl
fsts
jge
inc
jp
xchg
add
inc
sbb
int
or
pop
push
dec
cmp
mov
stc
sbb
mov
fwait
xor
shrb
daa
xor
pop
into
clc
gs
clc
movl
and
cmp
rcr
int3
jp
lock
test
cmp
cmp
rcl
lods
sbb
rol
out
dec
test
icebp
mul
mov
cmp
in
cmp
scas
or
push
adc
pop
cmc
repz
outsl
outsl
jns
inc
js
jp
movsb
xor
push
sub
movsl
loopne
inc
loopne
pop
ret
outsb
out
pop
cmp
or
lcall
jb
test
xchg
dec
adc
std
aas
dec
jp
fnstsw
insb
mov
clc
jp
jle
push
stc
in
shl
sub
movsb
andb
and
xor
mov
and
fs
out
fs
pop
scas
shl
sub
jl
mov
xchg
mov
scas
add
loope
and
stos
popa
int
cs
cmpsb
pop
ljmp
in
xlat
mov
and
cmp
adc
and
aaa
dec
loopne
idivb
mov
sub
xor
aas
cmp
idiv
mov
push
sub
test
jns
push
sub
test
xchg
mov
shlb
inc
cld
out
sub
jo
inc
js
dec
adc
adc
mov
lods
mov
pusha
clc
call
mov
imul
push
mov
lea
dec
lods
sbbb
jb
cmp
sub
iret
daa
loope
rcr
andb
jecxz
jmp
jnp
ss
sub
cmp
aad
gs
adc
daa
xchg
xor
dec
roll
xor
nop
arpl
or
add
inc
mov
mov
lret
loopne
lea
repz
sbb
ficoml
clc
into
cltd
dec
sub
addl
pushf
add
push
dec
int
enter
insb
fcmovnb
movb
clc
sbb
add
loopne
rcll
inc
sbb
push
pop
dec
je
xlat
cmp
repz
and
imul
imul
sbb
push
xor
xchg
ja
sub
fisubs
popf
sub
test
scas
cmp
pop
or
les
xor
out
mull
xor
jp
in
outsb
cwtl
sub
pop
shrl
push
lret
les
movsb
gs
cltd
movsl
add
jmp
cmp
sbb
xchg
mov
push
xor
inc
movsl
push
sub
push
repz
sub
rorb
xorb
fldl
pop
xchg
rcll
adc
test
mov
or
xchg
push
das
outsl
iret
jb
loope
xchg
mov
jnp
aaa
fildl
cwtl
rorl
pusha
adc
pop
and
sbb
push
popf
adc
outsl
xor
inc
xor
fs
shl
mov
mov
push
in
xchg
out
add
xchg
imul
bound
rcrl
mov
xor
sbb
mov
dec
icebp
mov
popa
scas
inc
shl
movsl
adc
mov
out
rcll
xchg
mov
ljmp
aas
and
jae
cmp
fisubl
pop
xchg
lods
sbb
sahf
xchg
inc
mov
pop
mov
sbb
enter
jg
into
ret
fildl
rorl
ds
mov
arpl
rorl
inc
movswl
stc
lahf
pop
and
xchg
cmp
stc
mov
push
repnz
arpl
xchg
xlat
test
mov
out
dec
fdivl
push
or
in
sbb
fwait
stos
stos
mov
je
dec
mov
sbb
scas
in
adc
xorl
lods
push
dec
daa
push
test
outsb
ds
mov
adc
xor
adc
in
jns
xchg
or
dec
fdivrs
dec
xchg
stc
loopne
jbe
pop
rol
in
mov
test
cmpb
test
push
inc
loop
mov
add
test
movsl
dec
push
mov
sbb
int3
popa
addr16
jns
dec
xor
lods
ss
sbb
mov
aaa
push
sub
shll
jb
lock
or
pop
jns
sbb
xlat
cmp
rcll
add
clc
cmp
push
or
sbb
jg
mov
pop
test
xor
cs
cmpsb
sub
cmp
xchg
jmp
pop
call
shr
jg
jp
jne
add
repz
mov
vsqrtss
jl
sti
jb
and
xchg
and
xchg
sub
fstpt
jnp
mov
add
pop
movsb
imul
fucomip
xchg
lcall
pop
mov
jp
imul
pop
loop
push
dec
test
je
jae
mov
enter
jp
dec
fnstenv
lods
daa
xchg
adc
js
int
or
scas
lods
int3
fbstp
pop
shll
xchg
repz
dec
xor
or
nopl
inc
xchg
fs
fisttpl
sub
mov
or
adc
jb
sub
test
ja
sbb
rcll
aas
mov
loope
into
aam
ljmp
mov
cmp
sub
xchg
push
sbb
pop
push
jb
movsl
adc
inc
mov
inc
mov
int3
pop
fistpl
and
sub
sub
adc
fcompl
and
call
sbb
xchg
add
dec
mulb
hlt
dec
pushf
cli
inc
int
ds
cmp
sub
insl
sbb
xor
mov
int
adc
adc
cs
dec
pop
and
imul
daa
sbb
jecxz
xchg
es
dec
push
lcall
mov
sbb
push
nop
call
paddw
or
mov
imul
add
loopne
xchg
dec
jge
in
dec
adc
shlb
cmp
mov
imul
jmp
fidivrs
test
lods
sarb
fimull
cltd
mov
movsb
mov
mov
nop
push
loopne
pop
shlb
lret
test
mov
xlat
sbb
push
lea
arpl
loope
sbb
xor
add
and
out
test
push
cmpsb
cmp
adc
cld
das
idiv
xchg
jno
flds
inc
sti
into
ljmp
mov
loopne
dec
add
data16
mov
pop
fsubl
fucomi
adc
pop
stos
test
in
insl
lahf
mov
mov
sbb
das
sub
inc
add
sbb
lea
sub
xlat
stos
es
adc
inc
inc
add
ret
push
movsb
ja
lods
int
xor
lahf
push
dec
cmc
in
rorl
or
ss
dec
dec
adcl
arpl
rol
xlat
sub
pop
faddl
lods
mov
adc
or
mov
arpl
mov
add
dec
jb
sub
sahf
clc
lret
aad
push
fldenv
pop
dec
lods
xchg
popa
mov
and
lahf
cmp
inc
cs
mov
lea
and
xchg
jecxz
push
lret
lcall
ficompl
aad
fildl
arpl
adc
inc
mov
mov
leave
jne
or
and
and
push
stos
fcompl
lret
insl
mov
stos
pop
or
outsl
jp
push
hlt
push
cli
adc
lret
inc
leave
dec
scas
pop
cmp
in
mov
xor
sub
add
mov
orl
push
sti
dec
mov
jmp
dec
enter
cmpsl
mov
imul
cmp
sbb
pop
xor
rorl
out
inc
dec
adc
mov
imul
repnz
dec
and
ljmp
nop
mov
mov
inc
jbe
pop
dec
lea
scas
adc
fs
popa
ljmp
cmpsb
ret
sub
out
pop
fistps
lret
xor
mov
aad
inc
sub
pop
adc
or
loop
push
pop
adcl
mov
jnp
jge
inc
test
repz
xchg
aaa
sahf
test
sub
roll
push
ror
push
cld
xchg
lods
dec
std
mov
jne
xchg
jl
outsb
pop
adc
mov
aaa
shll
scas
adc
add
xor
inc
call
mov
and
stc
lods
jg
or
inc
repz
aas
or
pop
mov
jae
mov
xchg
mov
aam
or
push
lcall
stos
mov
mov
mov
jge
mov
or
leave
lret
sub
lock
insb
test
xchg
xor
outsb
mov
jp
in
ds
add
lock
push
pop
test
repz
add
sbb
pop
in
ds
out
or
xchg
cvtpi2ps
push
mov
outsb
mov
out
or
test
addb
mov
jno
pop
inc
lea
aam
rclb
sbb
fildll
out
jecxz
mov
inc
push
jae
fs
ja
inc
lock
inc
sarl
mov
pop
fiaddl
cwtl
pop
lahf
les
fwait
push
pop
into
fucomip
xchg
cmp
ds
rclb
xor
mov
std
imul
dec
dec
fildl
sbb
popf
add
jne
sbb
dec
mov
rcr
ja
and
cmp
push
mov
incb
sbb
push
pop
push
adc
out
mov
lea
jge
lret
mov
lea
mov
aad
adc
dec
add
xchg
push
in
fwait
cli
lods
dec
lods
test
pop
cmp
push
ror
mov
cmp
mov
shlb
fcompp
sub
push
jno
pop
pop
ljmp
sbb
jmp
popf
cmp
ret
mov
adc
xchg
dec
xor
jg
push
leave
push
test
push
out
sub
and
mov
rcrb
and
ja
or
inc
imul
dec
xchg
jns
enter
repz
das
add
xchg
in
fsubl
fldl
addl
loopne
aaa
repnz
adc
les
sbb
push
push
fildll
test
in
filds
pop
nop
mov
adc
sbb
mov
lahf
add
xchg
jl
mov
jo
inc
sbb
mov
xor
rcrb
mov
imul
rcrl
shr
lcall
cmp
adc
jo
sbb
sar
xchg
cmp
js
popa
addr16
jnp
jno
lods
pop
xchg
or
sbb
sub
adc
and
push
pop
ds
and
push
insl
mov
lcall
in
lods
mov
push
insb
pop
jno
or
xor
sbb
xor
xchg
jg
and
add
aas
jo
jecxz
and
adc
sarl
popf
or
xchg
inc
inc
xchg
pop
jno
jg
pop
lcall
lea
or
push
sbb
es
or
push
ds
sti
incl
add
mov
xchg
stos
push
xor
mov
dec
dec
lds
sti
fisttps
dec
mov
add
aaa
jl
and
lea
sbb
pop
loop
or
mov
inc
mov
jne
idivb
xchg
clc
mov
add
negl
mov
pop
and
mov
adc
or
ret
popa
cwtl
fiaddl
lahf
add
jecxz
popa
push
add
enter
fisttpl
or
adc
pop
push
cmp
jne
mov
or
mov
jne
cmp
jmp
or
mov
nop
shrb
andl
sbb
sarb
xchg
cld
or
xchg
daa
pop
ss
out
jmp
aad
in
cmpsb
into
gs
cmpsb
dec
es
or
call
stos
jg
inc
dec
or
and
outsb
sub
cmp
push
jbe
lea
pop
and
sub
push
aam
mov
pop
rorl
add
pop
jp
sub
adc
push
and
push
pop
imul
lcall
push
or
push
jge
mov
mov
sti
push
inc
cs
xchg
scas
lock
mov
sahf
cli
cmp
shr
jecxz
mov
mov
popa
or
jmp
stc
pop
cmovg
lods
push
bound
cmpl
xchg
xchg
stc
jbe
sub
dec
or
mov
cs
mov
scas
mov
sub
outsb
add
loope
push
sahf
mov
mov
pushf
aaa
dec
aaa
xchg
jb
xchg
xor
mov
int3
sbbl
lods
sbb
popf
out
sub
push
and
icebp
or
sti
lcall
sti
aad
imul
aaa
mov
lret
mov
cmp
jmp
xor
and
fucom
dec
sbb
mov
je
mov
out
inc
icebp
shrb
test
inc
xor
mov
jmp
leave
dec
push
mov
push
stc
cmpl
rclb
jb
xchg
mov
pop
xchg
mov
cmp
or
or
imul
pushf
xor
pop
mov
addr16
mov
mov
lods
mov
or
rcll
and
dec
xor
out
cmc
mov
hlt
mov
xor
test
and
xchg
mov
cmp
nop
push
add
icebp
jns
and
mov
mov
pop
cltd
sub
and
negb
sub
or
adc
mov
cs
fsts
lea
mov
and
inc
stos
xchg
js
stc
pop
fwait
outsb
fiaddl
in
call
push
ffreep
ss
nop
sub
sub
push
cmp
xchg
dec
mov
jp
xchg
popa
xlat
repnz
sti
inc
add
data16
call
leave
out
xchg
cwtl
lds
movsl
or
xchg
rclb
mov
jo
rep
dec
cmc
out
push
xchg
xlat
pop
sbb
push
push
ret
aad
jle
or
push
out
fwait
stos
xchg
or
fcmovnu
fwait
movsb
fldt
cmpsb
movsl
popf
inc
and
mov
test
cmp
test
push
cltd
sub
pop
pop
sub
and
jno
xorb
sbb
sbb
repz
sub
imul
dec
cmp
insl
adc
jmp
repnz
decl
adc
xchg
loope
mov
jl
aam
pusha
and
jb
bound
mov
in
fiaddl
inc
adcb
ret
mov
adc
filds
lret
popf
sbb
push
mov
cmp
or
insb
push
test
imul
into
scas
cmpsb
in
mov
pop
sbb
cmp
cmp
rol
pop
cmc
mov
inc
push
xchg
dec
das
mov
pop
std
cmp
adc
and
add
out
fwait
call
cmp
mov
shrb
inc
mov
jmp
in
dec
pop
popf
adc
into
and
sub
movsl
adc
enter
aam
sbb
mov
mov
and
sub
pop
pop
push
test
ljmp
lahf
outsb
add
inc
aad
lods
in
push
dec
imul
scas
int3
push
shrl
push
push
mov
push
and
inc
push
cmp
in
cs
mov
mov
and
adc
and
push
add
pop
sub
out
movsl
jmp
aas
adcb
scas
pushf
insl
push
mov
nop
push
leave
mov
and
aas
jns
cmpl
xor
mov
pusha
push
repnz
rorl
stos
je
adc
stc
outsb
mov
negb
sti
cltd
ja
rcr
fisttpll
adcb
fwait
dec
icebp
cmp
adc
push
ret
xchg
mov
in
cs
dec
aad
insl
bound
and
cli
sub
adc
dec
inc
mov
popf
mov
pop
inc
imulb
arpl
pop
cltd
mov
sbb
fs
aaa
fsubr
xor
fstpl
incl
cltd
fwait
mov
out
loopne
mov
mov
dec
pop
cmp
sub
popa
dec
cs
sub
insl
js
es
jl
test
int3
xor
xchg
gs
cs
imul
lds
push
hlt
jo
stos
movl
in
mov
cltd
mov
test
lahf
cmp
mov
ljmp
mov
sub
dec
pop
push
stc
mov
scas
mov
imul
test
lods
ret
mov
xchg
cwtl
push
leave
cs
sub
into
adcl
push
push
movsb
push
dec
sbb
push
push
or
jmp
js
jns
inc
sub
jno
xor
inc
std
jnp
push
nop
js
neg
ficoms
mov
je
and
fistpl
jo
xchg
xor
repz
push
sbb
mov
add
imul
mov
cmc
lcall
cmp
pop
notl
in
lcall
ret
dec
dec
lret
pop
mov
push
pop
lcall
xor
or
in
es
pushf
icebp
sub
mov
out
xchg
push
jae
loope
dec
dec
jle
sti
push
push
les
outsl
sarb
mov
push
mov
cli
nop
mov
mov
jmp
add
pop
add
cmpl
ljmp
stos
pop
xor
icebp
leave
mov
dec
jle
adc
and
add
incb
adc
in
jge
iret
les
cs
sbb
loop
mov
mov
andb
repz
adcl
cmp
fbld
dec
mov
mov
dec
fsubr
lret
push
in
jnp
pop
or
stos
mov
or
fistl
leave
xchg
mov
call
add
adc
adc
shrb
fbld
inc
dec
fiadds
clc
mov
xchg
roll
add
xor
mov
pop
mov
lcall
xor
or
dec
mov
sti
outsb
cld
jo
or
inc
js
inc
imul
out
int
xchg
dec
jl
mov
mov
stos
cmpxchg
nop
into
hlt
xchg
sub
scas
fsubrl
sbb
dec
dec
push
lock
jae
sti
xor
dec
adc
push
fldenv
xchg
pop
out
add
sub
mov
dec
push
icebp
pop
xchg
mov
cmpsb
jmp
sub
cld
push
sub
incl
hlt
int3
jae
xchg
loopne
push
sub
ljmp
and
mov
inc
adc
enter
and
inc
test
sbb
cmp
sub
mov
stos
mov
stc
mov
call
xlat
or
jno
bnd
bnd
inc
jo
sub
mov
rol
loopne
pop
cmp
mov
or
adc
xchg
aam
xchg
inc
test
movsl
xchg
push
popa
popa
jae
les
cltd
pop
stos
inc
es
adc
sbb
mov
dec
mov
jns
dec
and
mov
pop
rclb
dec
cmpsl
test
movl
pop
mov
rcrb
xor
clc
mov
movsl
sub
mov
inc
mov
test
xlat
mov
scas
and
out
sub
add
mov
pop
fmull
fimull
and
gs
xor
int3
push
pusha
add
mov
dec
or
mov
xchg
cmp
dec
cmc
jno
xchg
fs
and
inc
xlat
sarl
test
sub
mov
shlb
loopne
repz
faddp
and
js
xor
enter
je
push
call
cmp
mov
mov
adc
inc
enter
jmp
out
jle
mov
adc
enter
mov
push
dec
cld
pop
jmp
push
jge
imul
stc
pop
fistpl
push
mov
icebp
js
stos
pop
and
push
iret
fs
out
std
sub
lea
pop
adc
add
ja
xlat
in
inc
or
sub
popa
icebp
into
jg
fldcw
jb
lods
jns
pop
dec
push
lret
sarl
fisubrs
ret
leave
stos
add
outsb
mov
push
out
xchg
mov
leave
and
das
ja
sub
out
push
push
inc
cmp
mov
iret
push
xchg
scas
xchg
clc
push
pop
stc
test
jno
and
daa
dec
cmpsl
pop
xor
aad
pop
repnz
insl
adcb
mov
icebp
daa
mov
mov
mov
data16
pop
out
adc
cltd
xor
mov
out
gs
cmpsl
jle
sahf
movb
sub
test
stos
movsl
mov
push
xor
rcll
mov
jl
lods
xor
ljmp
xchg
aad
jle
sbb
push
sysexit
and
gs
mov
dec
pushw
push
xchg
shll
dec
popa
std
or
cwtl
mov
push
jo
xchg
adc
sub
and
sbb
mov
and
push
aam
out
pop
lea
or
lds
loope
mov
vmwrite
mov
mov
add
test
pop
pop
push
stos
add
testb
mov
xor
cmp
test
fidivs
adc
pslld
sbb
push
cmp
test
aas
sbb
sbb
pushf
aaa
add
aaa
mov
mov
mov
or
mov
aaa
pop
fwait
mov
mov
icebp
ljmp
popf
mov
inc
and
mov
sarb
outsl
fists
into
repnz
fcmovnb
mov
add
hlt
push
push
sti
jle
daa
out
push
xchg
fcoms
test
or
adc
lahf
hlt
add
dec
sbb
jb
into
lahf
jecxz
push
fimull
movsl
adc
ss
xor
in
and
out
jg
clc
and
cmp
pop
gs
les
mov
movsb
xor
cmpsl
movsl
push
xlat
bound
inc
push
xchg
outsb
xchg
sub
int3
inc
imul
out
stos
outsb
mov
fistpll
test
std
cmc
cmp
sub
pop
push
enter
imul
mov
jbe
inc
adc
push
rclb
lret
es
test
jno
xchg
fcoml
mov
pop
fisubs
fnstenv
pop
mov
xchg
je
sti
add
inc
cwtl
sar
push
mov
out
outsl
jno
cmpsl
adc
cmp
insb
and
jbe
adc
inc
push
push
cltd
movups
pop
sbb
lret
fimuls
lock
pop
jne
dec
cltd
jno
lahf
jge
mov
repz
insl
pop
incl
aaa
stos
mov
sbb
sbb
aas
push
xchg
shl
cwtl
jno
inc
out
shrb
std
es
xchg
dec
mov
scas
fcompl
inc
xor
lret
cmp
incl
out
cltd
inc
jae
pop
lcall
mov
aaa
movsb
xchg
inc
data16
mov
pop
je
lea
push
jbe
ss
mov
pop
fcomp
pop
adc
xchg
jl
inc
push
mov
addl
sbb
xor
push
xor
mov
lea
push
outsb
mov
cmp
insb
jne
pop
mov
xchg
imul
int3
fs
mov
jns
and
lea
repz
inc
jb
lret
xor
cli
sub
imul
push
loopne
adc
cmp
lret
fwait
shr
pusha
xchg
push
jecxz
lfence
cmpsl
stos
lcall
cmp
lret
xchg
push
xor
sarl
cmp
fbld
dec
hlt
mov
test
leave
sub
sub
rcrl
fisubs
pop
scas
mov
jae
push
mov
xchg
imul
inc
add
lahf
push
jnp
jl
or
mov
mov
push
add
cltd
pop
jbe
les
xchg
mov
jmp
push
push
in
js
dec
in
rcr
icebp
mov
movsl
mov
cmp
repnz
int3
into
push
mov
jp
cmp
pop
repz
sahf
mov
ljmp
adc
insb
iret
rdtsc
mov
test
mov
les
aam
in
xchg
pop
mov
movsb
stos
xor
out
push
and
cmpsl
ds
and
jmp
xchg
in
sbb
pop
xlat
iret
pop
aad
outsl
mov
sbb
fcomps
mov
pop
push
dec
int3
push
or
stc
sahf
aaa
outsl
out
in
mov
scas
mov
nop
int
xor
dec
dec
inc
jl
sbb
mov
cs
daa
in
add
sbb
push
outsl
mov
iretw
les
roll
bnd
cmc
push
xor
sarl
rorb
inc
jge
stos
push
dec
fs
pop
sbb
xchg
mov
jg
std
dec
icebp
leave
insl
and
iret
call
mov
mov
and
xor
dec
decl
cmp
sub
pop
add
roll
mov
or
pop
loope
stc
cmp
imul
mov
clc
jae
mov
adc
test
xchg
push
es
mov
scas
cmp
and
mov
xchg
inc
push
cltd
mov
movsb
pop
pop
dec
push
cmc
int3
stc
inc
cmp
stc
js
in
insb
xchg
jg
inc
lods
ficomps
jns
jns
sbb
movsl
add
fisttpl
cwtl
lds
jnp
add
mov
mov
inc
lods
movsb
mov
sbb
jb
lods
sbb
jle
jbe
mov
mov
int3
inc
fnstcw
repz
dec
stc
sub
fdivrs
fs
or
int
sub
lcall
aas
mov
in
push
movsb
mov
leave
fwait
add
mov
push
int3
aaa
xor
cmpsl
fiaddl
js
arpl
andb
pushf
xlat
shrb
test
repz
mov
das
mov
pop
add
icebp
xor
aad
daa
sti
out
movsb
imul
and
mov
sbb
dec
std
jno
mov
dec
cltd
push
stc
lea
mov
das
push
sbb
mov
sbbl
adc
sub
int
cmpsl
dec
jno
mov
in
repz
les
jmp
cmp
popa
jp
lock
lods
xor
leave
or
imul
insb
dec
shll
lods
ja
jle
ret
dec
mov
popl
fcmovnb
jge
or
out
lods
cmp
dec
sub
jno
pop
add
loope
insl
fs
mov
fnsave
ss
push
lret
outsb
push
push
xlat
popa
je
sub
jbe
cmp
call
jg
outsl
push
aaa
sub
cmpsb
inc
lods
sub
and
pusha
xchg
imul
rorl
faddl
std
pop
pop
jo
aam
and
fcmovne
test
adc
cmp
or
outsb
jae
pop
inc
pop
stc
lcall
mov
xor
adcl
add
lds
lock
mov
mov
push
cmp
sub
jp
add
sub
jl
paddd
mov
daa
dec
mov
test
lock
iret
popa
jno
xchg
mov
push
cmp
cmp
sahf
jne
jne
jo
cmp
or
push
add
xchg
fisubs
hlt
sbb
icebp
sbb
adc
lret
notb
arpl
pop
pop
inc
adc
mov
mov
sbbl
or
cld
mov
xchg
aad
rolb
outsb
repnz
mov
mov
xchg
push
int3
mul
xlat
push
outsb
add
add
add
push
test
jae
inc
loope
pop
pop
sbb
pop
add
add
fnstcw
enter
xchg
cmp
push
push
adc
jmp
cmpsb
fimuls
lods
fisttps
mov
jp
pop
incb
lcall
push
xchg
and
movsl
inc
movsb
push
jne
ds
les
cwtl
mov
inc
push
inc
outsb
push
fwait
xchg
jle
adc
cwtl
fstps
test
jo
cmp
mov
ljmp
push
out
mov
dec
sbb
iret
mov
arpl
xchg
dec
ja
aaa
cli
mov
mov
mov
in
mov
add
mov
pop
sub
mov
push
adc
jo
mov
add
rcrb
test
inc
cltd
push
xchg
add
js
ret
push
push
xchg
movntps
push
pop
add
nop
lret
ss
outsb
mov
cmp
divl
push
sbb
pusha
insl
pop
xor
xchg
insb
ds
mov
int3
mov
inc
inc
les
sbb
icebp
pushf
movsl
call
inc
jp
ljmp
test
clc
clc
jl
mov
int
inc
dec
lods
inc
adc
lret
push
fnstenv
push
or
cs
or
push
ss
fildl
lea
rolb
aad
popa
and
arpl
jns
sbb
cmpsb
jecxz
jae
pop
add
add
mov
ss
daa
mov
hlt
push
push
jl
and
insb
je
rcl
pop
sahf
rcrb
sbb
sub
jecxz
jbe
in
sbb
rcr
lcall
mov
or
test
imul
mov
mov
and
in
lds
icebp
shlb
fimull
jb
mov
loope
jns
into
mov
dec
push
imul
mov
ja
andl
icebp
lods
std
je
call
fcompl
dec
test
ret
test
stc
jmp
fwait
movsl
das
jae
lret
push
mov
mov
imul
in
cmp
imul
ds
mov
pop
cmp
gs
in
cmp
out
jg
cmpsb
lea
fwait
inc
fstps
roll
push
xorl
sub
out
std
xor
dec
or
pop
insb
fs
inc
lret
xchg
dec
rcrb
add
pop
or
and
es
cmp
inc
xchg
test
mov
or
push
push
dec
jo
int3
sub
and
iret
icebp
lcall
popf
and
jmp
pop
add
cmpsb
or
mov
ss
dec
repnz
mov
flds
imulb
jno
aam
imul
in
push
cltd
mov
inc
pop
adc
pop
push
jnp,pt
add
bound
fwait
xchg
lcall
pop
xchg
enter
push
mov
cmp
jns
nop
iret
pop
cmp
xor
push
push
mov
adc
rorb
test
cmp
test
and
data16
push
cmp
call
inc
jbe
adc
or
pop
scas
dec
pop
addr16
dec
js
mov
stc
xchg
add
lea
mov
or
dec
xchg
ja
dec
jecxz
sbb
mov
mov
out
loop
mov
lods
mov
inc
cmc
fsubrs
je
fwait
cmp
pop
adc
mov
popf
and
in
rcrl
out
and
call
into
jns
mov
adc
cmp
xchg
jbe
in
add
test
mov
mov
sub
aad
addr16
mov
cmpsl
jg
movsl
dec
xlat
aam
jge
push
mov
inc
add
mov
fwait
sahf
out
fdivl
xchg
lret
bsf
sbb
outsb
xchg
mov
xor
shl
mov
out
movsb
xchg
inc
rcrb
inc
jns
sbb
sbb
and
and
cmp
pop
imul
or
lods
out
sbb
cli
daa
sarl
add
mov
lods
sub
mov
xchg
std
add
cmc
je
xor
stos
hlt
adc
iret
in
in
mov
jp
popf
pop
cmp
rcll
and
loope
and
iret
xor
pop
clc
dec
sub
jg
gs
mov
enter
or
daa
xlat
xor
cld
pop
pusha
mov
push
mov
std
pop
out
insb
inc
mov
xchg
js
cwtl
loopne
push
mov
js
testl
enter
and
adc
cmp
or
js
xor
scas
repz
jecxz
addr16
pop
negl
push
nop
cmc
inc
mov
loop
shrb
out
int3
iret
in
stc
adc
mov
outsl
fidivrl
xchg
jns
pop
hlt
loopne
or
mov
enter
mulb
out
pop
lret
ja
xor
popa
loop
insl
fadds
pop
cwtl
aaa
mov
push
xchg
orb
js
xchg
lahf
into
lcall
inc
jge
imul
jns
in
mov
xchg
and
ret
mov
stos
push
mov
cmp
loop
inc
sarb
nop
pop
and
jno
inc
movsl
xchg
adc
scas
addr16
testb
xlat
inc
fiadds
or
inc
dec
or
or
mov
cmp
aas
mov
mov
sub
push
push
inc
cs
loope
cmpsb
repnz
std
jge
sahf
nop
mov
je
sub
sbb
fucomi
add
jge
pop
and
pop
cs
fmul
xor
mov
jle
push
and
mov
je
stos
lret
xchg
push
sub
add
xchg
ds
jl
and
and
out
mov
sar
push
jnp
gs
imul
test
outsl
cmp
inc
fildl
and
lcall
push
mov
xor
xlat
inc
lods
ljmp
outsb
movsl
out
bound
add
gs
mov
dec
or
stc
movsb
sub
jmp
shll
cmp
aas
popf
lods
add
andl
sbb
push
in
lods
mov
cmc
stc
aaa
test
dec
pop
xchg
and
or
xor
repnz
les
jns
out
ljmp
popa
mov
pop
lret
ss
xchg
dec
lds
sub
mov
enter
dec
inc
push
mov
dec
stos
mov
mov
out
jmp
cmpsb
leave
rorl
push
inc
add
imul
mov
mov
cmp
sti
js
push
add
lcall
mov
int
sub
inc
fucomi
nop
int3
aam
or
out
jmp
lea
lea
xchg
mov
mov
leave
frstor
mov
je
lret
adc
movsl
fs
xor
popf
cmp
js
in
clc
xlat
dec
xchg
notl
ja
xchg
divb
and
enter
out
clc
add
push
daa
jg
incb
pop
es
or
jns
neg
rorl
insl
ret
fs
jbe
outsl
jl
arpl
outsl
iret
pop
dec
pop
aaa
jb
or
xchg
dec
mov
faddp
fildll
xchg
scas
mov
scas
xchg
les
sbb
imul
and
popf
sarl
and
jne
xor
cmp
xlat
out
jbe
jno
inc
test
pop
andl
jg
hlt
stos
jo
adc
loop
push
fcom
sbb
cmp
mov
sub
pop
in
enter
pop
rcr
mov
lret
jge
inc
pop
dec
repnz
decb
in
dec
scas
fisttpl
outsl
mov
pop
adc
movsb
cld
add
mov
mov
inc
pop
aas
sahf
inc
insl
in
or
pop
insl
cmp
movsl
xchg
inc
xchg
jnp
pop
ss
das
jbe
insl
sti
loopne
aas
test
repnz
cmp
inc
adc
pop
xchg
aad
jecxz
test
js
sub
jbe
sbb
stc
mov
cmc
out
outsl
inc
test
pop
sub
push
jecxz
pusha
inc
mov
dec
sbb
push
test
imul
jle
call
mov
loope
cmp
pop
pop
pop
stc
sub
test
lahf
dec
push
rcll
loop
js
ficoms
adc
outsl
push
psllq
inc
push
loop
repnz
pop
out
lock
cmc
fidivs
dec
cmpsb
xchg
mov
pushf
jmp
and
outsb
lds
dec
push
mov
lds
jno
ss
push
dec
test
rcrb
push
push
mov
jne
mov
imul
mov
inc
sub
out
adc
loope
mov
mov
adc
inc
gs
dec
or
daa
push
fstl
xchg
subl
pop
ja
sbb
bound
mov
dec
xchg
adc
push
dec
push
nop
pop
xchg
inc
adc
jns
testb
and
fiaddl
xchg
gs
and
fs
lods
test
int
ret
fadd
leave
lret
test
add
stos
and
and
add
rolb
and
cwtl
addb
mov
jp
xor
aas
loope
mov
sbb
lods
xchg
jp
pop
fs
into
clc
push
pop
aaa
jae
pcmpgtd
inc
push
ret
xchg
test
rcl
mov
leave
jecxz
and
ret
aas
jnp
imul
jb
ds
mov
mov
xchg
hlt
adc
mov
iret
xchg
mov
push
sub
jecxz
pop
in
mov
mull
sbb
pop
loop
push
test
xor
test
sbb
repnz
cmpsb
js
lcall
lahf
jmp
or
leave
es
jb
fdivrp
cmp
pop
inc
push
push
aaa
push
movsb
enter
xchg
mov
adc
lahf
test
xchg
arpl
arpl
sub
dec
dec
call
fsubl
je
add
not
pop
jbe
and
pop
js
push
adc
mov
std
xchg
dec
repz
and
and
pop
jae
arpl
jae
dec
int
inc
andl
mov
lods
sub
or
push
dec
xor
push
les
add
mov
ds
inc
jae
ja
xor
mov
insb
cmp
sbb
mov
mov
fidivrl
das
aad
imul
push
xor
push
adc
and
pop
dec
addr16
push
push
fldenv
cmpb
das
mov
iret
iret
aaa
ja
and
out
add
repnz
jg
cmp
inc
jl
shlb
fwait
inc
mov
or
cmp
out
add
cli
sti
cwtl
loope
addr16
data16
adc
cli
in
out
jne
out
addr16
add
push
or
stos
cltd
clc
rcl
pop
cld
addr16
jmp
xchg
in
icebp
push
icebp
insb
call
mov
mov
jecxz
lahf
shl
sbb
in
scas
scas
in
inc
inc
dec
mov
in
push
dec
test
mov
out
xchg
insl
mov
imul
mov
ljmp
popf
cld
fistl
outsb
lods
mov
and
mov
cmpb
jno
xor
lea
icebp
or
dec
repnz
mov
scas
pop
lds
movl
pop
adc
addr16
jbe
or
add
mov
pop
popa
lahf
pop
xor
ss
xchg
clc
pop
pop
and
and
in
mov
nop
jmp
add
inc
fsubl
push
pop
sahf
and
nop
aas
xchg
jmp
cs
xor
mov
push
add
insb
pop
fs
andl
adc
pop
xchg
sbb
and
push
mov
mov
loop
ja
cmp
ficomps
jae
test
addr16
inc
pusha
in
pop
or
inc
adc
fadds
in
or
jg
push
adc
testb
shll
push
aam
mov
pop
cmc
cmp
add
mov
out
inc
add
cmp
fmull
rorb
rcrb
adc
repnz
xchg
jl
xor
nop
testl
sub
and
cmp
stos
cltd
dec
xchg
popf
in
mov
sbb
imul
scas
mov
dec
jo
adc
jmp
and
push
ret
lret
mov
add
test
movsb
test
test
lcall
mov
cmp
into
add
out
mov
pop
or
jb
clc
fnstcw
stc
xchg
mov
loop
jb
mov
mov
inc
xchg
das
jge
repnz
inc
dec
or
or
push
js
cmp
mov
in
pop
mov
dec
out
mov
lds
jns
adc
mov
jmp
xor
mov
cmp
in
and
push
fnstenv
xchg
pop
dec
dec
dec
fdivl
mov
ficoml
mov
cmc
sub
push
das
pop
shll
rorl
mov
or
insb
lcall
sub
jae
push
add
cli
out
decl
sbb
out
cmpsl
pop
out
rcl
mov
inc
insl
test
out
fistpll
lahf
mov
inc
or
out
jge
jmp
push
push
testl
dec
cmp
xor
aam
and
jns
lret
lea
cwtl
xor
dec
mov
mull
test
fsubrl
repnz
push
adc
lret
jns
mov
movsb
fnstsw
or
push
mov
mov
movsb
dec
cmpl
mov
dec
xor
sti
mov
push
lret
sbb
js
test
push
lods
rcll
xor
push
cwtl
push
aam
dec
and
jp
xchg
cmpl
enter
icebp
fcompl
adc
or
cmpsl
and
cmp
xor
insb
jno
cmp
xor
jp
push
bnd
jecxz
and
mov
push
xor
adc
hlt
cmp
mov
dec
ja
mov
cmp
jp
lods
int
sub
jbe
fidivs
pop
jg
repnz
hlt
out
lock
mov
pusha
arpl
xor
adc
dec
push
popa
into
aam
in
mov
out
mov
cmp
sub
xchg
xchg
lcall
cmp
das
adc
pop
pop
jo
dec
mov
inc
aaa
inc
cmc
xor
imul
lods
push
jg
adc
ljmp
pop
push
std
cmp
mov
mov
imul
mov
jg
sub
cmpsb
mov
les
aam
dec
lock
xchg
shl
inc
pop
sbbl
sbb
fdivrp
pop
aam
xor
jo
lahf
xchg
push
or
es
clc
xchg
test
sub
cmp
xchg
cmp
jecxz
mov
aam
xchg
shll
jecxz
add
fstpl
sub
into
ret
mov
int3
or
mov
in
dec
call
addr16
out
sub
enter
inc
hlt
cmc
or
sbb
mov
mov
xor
dec
in
cs
cltd
jns
clc
jno
add
fnsave
rclb
jp
or
rcrb
out
pusha
dec
xchg
pop
inc
push
xchg
fists
scas
sbb
gs
in
or
repnz
repnz
inc
dec
lock
push
xor
sub
and
daa
xchg
jg
arpl
repz
inc
inc
pop
int
dec
int3
cmp
ja
mov
out
mov
xor
mov
pop
scas
hlt
aad
pop
int
mov
jns
mov
push
xor
push
shrb
sub
xor
fisubl
mov
testl
pop
fucomi
sbb
in
mov
mov
jo
sbbl
std
cmp
pushf
loope
jl
popa
add
fdivrs
ja
loope
out
sbb
mov
dec
test
push
lret
int
lods
mov
jl
clc
xchg
xchg
ja
les
sub
or
sahf
shll
adc
lahf
fcmove
rcrb
adc
nop
xchg
gs
lds
add
mov
out
fs
fucomp
mov
adc
push
icebp
ficompl
sbbl
sub
jg
or
int3
inc
out
imul
fldenv
xchg
or
inc
push
sub
sbb
add
ja
loop,pt
aas
mov
xchg
sub
fldt
mov
pop
popa
adc
mov
dec
dec
and
mov
pop
mov
sbb
mov
push
cmpsb
inc
xchg
ret
or
sti
mov
mov
xor
pusha
orl
in
cmp
mov
shll
daa
addr16
daa
jmp
movsb
sbb
imul
aam
insl
xchg
and
pop
pusha
inc
cmpsb
enter
ret
mov
ds
add
nop
outsl
push
jns
fnstenv
hlt
sahf
xchg
or
rcl
xchg
test
jae
fdivrl
adc
inc
or
dec
push
ss
add
fmull
scas
in
pop
ficoms
push
or
lods
hlt
mov
sbb
sahf
test
fstl
cwtl
movsb
sub
insb
call
push
inc
pop
mov
add
inc
and
movsb
dec
lret
fldenv
jne
rcr
rorl
in
inc
stos
aam
inc
je
mov
dec
jle
jnp
pop
mov
mov
dec
es
mov
push
pop
fldenv
lods
rcl
ljmp
ljmp
add
test
push
js
jbe
insb
leave
jg
jne
jle
bnd
mov
test
pushf
push
shl
push
nop
bound
fiaddl
lahf
div
loope
mov
jns
jns
xchg
mov
xchg
adc
xor
loopne
add
dec
decb
into
lcall
cmp
sub
sub
ficoms
pop
sahf
xor
pushf
bound
dec
xorl
hlt
pop
inc
xorl
popa
mov
addr16
daa
ljmp
out
sub
aaa
bound
mov
adc
cmp
jne
movsb
icebp
mov
push
iret
push
shll
sub
pop
mov
push
fdiv
xor
icebp
sub
int
pop
sub
int3
pop
jnp
jecxz
enter
test
adc
inc
mov
orb
lcall
pushf
sbb
outsb
inc
popf
ss
fidivrl
cmp
sti
out
cmp
inc
jbe
or
js
mov
sub
fnstenv
mov
shlb
adcl
jp
xchg
jae
leave
sub
add
stos
pop
sbb
lret
sbb
lret
decl
in
mov
jae
imul
adc
mov
pop
push
rorl
scas
push
push
inc
jbe
stos
xchg
divl
mov
shll
and
loop
shlb
stos
adc
push
dec
jns
cpuid
lods
push
mov
ret
xchg
mov
mov
and
sub
sub
inc
jno
mov
lret
xor
loop
xchg
jne
lock
jle
mov
cmp
pushf
push
inc
sub
mov
push
je
cld
xchg
jae
movsl
shr
test
mov
pop
or
sysret
popa
insb
and
repnz
icebp
test
cmp
ss
pusha
mov
inc
sub
bound
mov
sahf
inc
jecxz
popf
jl
int3
adc
clc
sub
out
fstps
decb
shll
add
push
xchg
lahf
lret
xchg
lds
stos
xchg
mov
sahf
xchg
sub
int
je
loope
sahf
das
xor
in
sbb
mov
outsb
nop
ret
dec
sti
push
shrb
call
adc
mov
lcall
adc
add
ss
aas
sti
xor
sahf
pop
pop
cmpsb
leave
popf
xchg
popa
push
sbb
jl
adc
pop
pushf
ret
xlat
pop
enter
mov
adc
push
xor
ret
shr
sub
or
adc
pop
inc
sub
sbb
leave
add
pop
jne
dec
inc
push
xchg
adc
mov
or
testl
mov
daa
sub
in
imul
faddl
pop
pop
add
in
stos
mov
popa
aas
push
mov
add
mov
xchg
or
les
xor
mov
xchg
bnd
sbb
scas
cmp
mov
or
sub
xor
or
repz
out
jg
popf
pop
mov
mov
pcmpeqd
lcall
adc
xchg
sarl
cvtdq2ps
adc
lret
shrl
int3
subb
fstps
hlt
in
add
aam
inc
ss
test
xor
lock
jg
sahf
ficompl
add
push
jle
xchg
sti
outsl
aam
or
movsb
stos
gs
mov
subl
out
add
jp
pop
mov
push
push
add
mov
mov
and
std
test
xor
xor
mov
mov
push
es
aam
jae
std
gs
lock
jg
add
roll
jg
ret
stc
fstp
loop
cmp
dec
stc
xor
xor
ret
popa
lahf
xor
add
leave
insl
and
movsl
adc
ret
push
push
pop
jp
das
ret
loope
lock
daa
jns
adc
pop
data16
sub
call
adc
stos
mov
mov
cmp
or
inc
ficompl
jne
and
cmpsb
xchg
mov
cmp
adc
iret
es
pusha
xchg
jecxz
push
cmp
aas
dec
fsubr
pop
and
mov
add
cmp
mov
cmp
les
cli
pop
dec
inc
mov
adc
push
dec
dec
popf
pushf
push
sbb
mov
data16
xchg
lret
inc
insl
mov
push
cmpsb
push
subb
xchg
sbb
mov
aas
into
sub
or
mov
or
pusha
mov
sub
adc
pop
jmp
jecxz
jns
cmp
call
xor
jbe
out
jecxz
add
divl
into
push
lds
inc
sarl
jbe
imul
push
jae
pop
mov
mov
sbb
jmp
cltd
push
add
mov
andb
inc
push
inc
int3
shr
into
pop
repnz
and
into
mov
xchg
jb
outsl
out
in
inc
mov
sarl
cmp
jb
sahf
and
stos
cli
add
jb
stos
mov
sti
insb
push
or
push
dec
jg
cmp
leave
jbe
mov
sbb
mov
push
out
adc
shll
push
sub
lret
pop
push
mov
mov
pop
cmp
flds
rorl
adc
lock
callw
push
outsl
cmp
pop
or
sub
add
bound
ret
lea
pop
aam
and
mov
push
jge
cwtl
xlat
lea
insl
sbb
inc
xor
stos
fs
dec
jg
data16
arpl
xor
movsb
in
dec
hlt
mov
sub
pop
les
shll
xor
sbb
sarb
divl
loop
out
js
push
pop
ds
jp
and
out
in
xor
cld
jmp
das
mov
pop
ja
nop
jmp
fs
cmpsb
xor
push
or
lods
cmp
adc
pop
test
xchg
mov
adc
sub
xor
dec
in
push
clc
stos
outsl
int
mov
cmpsl
pop
or
mov
test
dec
leave
mull
sbb
dec
mov
push
cmpb
in
pop
scas
pusha
mov
inc
mov
mov
je
imul
cs
mov
push
int
cmp
fdivs
inc
mov
xchg
mov
lods
jg
mov
inc
mov
lret
jbe
das
adc
sub
mov
je
adc
movsl
enter
ja
dec
push
pop
push
and
test
mov
and
pusha
sbb
aam
scas
das
fsubrs
mov
pop
adc
push
xchg
push
mov
xlat
shrl
bound
sub
not
sarl
jg
cmp
jp
mov
sub
mov
mov
xor
inc
mov
repz
push
push
fmull
fsubrl
inc
sbbl
push
mov
aam
rorb
sub
shll
sti
push
loope
add
dec
divb
fs
and
inc
and
or
in
ret
lods
jmp
xchg
mov
mov
out
sub
push
push
inc
ret
shlb
mov
lcall
sti
xchg
sarl
aam
lock
pop
push
int3
enter
js
cmc
inc
mov
mov
pop
sbb
jge
xor
or
cmp
sub
and
mov
ja
or
cmp
mov
push
mov
cld
and
or
popf
mov
pop
shll
mov
sahf
dec
lret
mov
repnz
faddl
popl
es
pop
stos
sbb
test
iret
sti
daa
inc
mov
fadd
mov
cmp
imul
or
sbb
in
sahf
int
and
shrb
rcr
sti
adc
fldcw
leave
sub
std
cwtl
or
inc
cmpsb
adcb
sbb
sbbl
imull
cmp
inc
adc
cli
add
push
mov
repnz
dec
insl
pop
sbb
xchg
pop
mov
orl
mov
jp
stc
js
outsl
sub
mov
adc
pushf
push
sub
cmc
jl
sbb
xor
incl
mov
les
jle
sub
adc
push
cmc
mov
aas
or
les
pusha
xor
push
or
and
inc
mov
adc
das
xor
push
and
insl
in
xchg
into
push
lds
mov
aaa
fistl
movsl
xor
mov
stc
ljmp
mov
jae
jecxz
ljmp
je
es
fisubs
jp
pushf
in
ret
jae
and
inc
mov
mov
inc
cmp
push
inc
xchg
jp
in
shrb
fmull
cmp
push
fwait
data16
or
in
sti
subl
cmpl
mov
push
push
mov
testb
test
andb
out
adc
imul
mov
mov
cmp
mov
cmp
add
push
dec
push
fisttps
pushf
inc
test
clc
ljmp
into
jo
ss
sbb
nop
aad
mov
dec
push
movsl
mov
adc
loop,pt
imul
xor
out
sbb
das
inc
inc
cmp
pop
and
out
in
and
lcall
mov
adc
dec
sbb
mov
sbb
sub
data16
sti
dec
xor
sahf
inc
xor
cmc
push
pop
fcom
mov
lods
adc
sub
fucomip
aam
fbstp
push
cmp
jo
mov
lcall
mov
icebp
inc
pop
pushf
scas
sbb
push
ret
dec
push
inc
add
das
out
insb
or
js
pop
jnp
scas
loope
rcl
jb
lods
cmc
or
loop
into
push
sub
sti
lea
mov
adc
sbb
gs
xor
movsl
incl
loope
cwtl
adc
lock
stos
pop
add
adc
cld
int
addr16
cmc
dec
xchg
enter
je
je
jo
add
push
push
dec
push
push
lret
mov
data16
aas
fs
rcrb
loopne
mov
insb
clc
ds
push
cli
es
stos
jp
push
jb
ja
xor
lea
test
shl
nop
push
imul
adc
inc
xchg
push
test
jo
pop
les
xor
push
pop
and
jge
outsl
cld
stos
cmp
mov
add
dec
sbb
gs
dec
or
ss
lods
and
or
sub
pop
sbb
dec
cmc
imul
or
call
sub
std
mov
inc
mov
lret
cmp
pop
sub
in
xchg
jg
push
jmp
data16
clc
fsubrs
mov
push
rcrb
imul
mov
or
int
inc
ss
call
xchg
jge
push
adc
sbb
call
cltd
mov
jge
imul
mov
stos
psubsw
push
lods
pushf
es
fwait
inc
adcl
jnp
dec
loope
adc
cmpsl
push
xor
repz
js
push
jbe
cld
in
bt
sbb
jge
scas
loopne
pop
inc
ja
ljmp
jmp
xchg
dec
sub
mov
subl
js
fsubrs
std
dec
out
cmp
repnz
pop
dec
lret
push
aas
cld
shlb
pop
fstpt
aam
test
mov
jg
xor
imul
call
out
aaa
cltd
outsb
cmc
mov
cmp
mov
call
scas
sahf
inc
sub
ljmp
jp
ss
sbb
jmp
mov
mov
dec
jl
cmp
hlt
dec
adc
mov
mov
popf
fst
dec
in
fwait
and
cmp
add
push
xor
push
jno
shrb
pop
sbb
push
cmp
push
outsl
cmp
scas
pop
cmp
ja,pn
or
xchg
jbe
bnd
push
jmp
fwait
xorl
ss
imul
sbb
call
jmp
dec
mov
inc
pop
mov
adc
mov
lock
pop
shll
mov
dec
and
lret
loope
enter
add
pop
lds
adc
mov
mov
rorl
xor
push
ficompl
lock
mov
stc
sub
mov
arpl
push
sbb
pop
inc
mov
fs
scas
mov
lcall
mov
xorl
push
in
jle
pop
fcmovnu
push
ret
adc
std
xchg
lock
dec
xor
shrl
sbb
hlt
mov
shr
push
jl
test
pusha
dec
cmp
mov
jo
jge
loope,pn
fwait
imul
lods
mov
jns
std
jge
test
and
mov
negl
adc
je
scas
shlb
jp
stc
inc
mov
pop
movsb
jecxz
or
js
sub
repnz
add
cs
xchg
cmp
add
repz
mov
idiv
inc
cmpsl
cwtl
in
sbb
mov
push
outsb
lcall
cmp
pop
and
cwtl
pop
daa
xchg
aam
in
jmp
adc
and
add
mov
leave
adc
push
push
rcrb
mov
and
inc
push
mov
sub
inc
cmc
adc
cltd
lcall
popa
or
ss
mov
mov
mov
nop
cs
les
xor
cmpb
inc
pop
aaa
jge,pt
push
icebp
daa
add
mov
mov
call
mov
inc
sbb
pop
dec
or
lods
inc
push
push
js
nop
stos
lahf
sub
movsl
ja
fcoms
mov
sbb
mov
fistl
dec
push
arpl
pushf
leave
inc
lds
adc
pop
cmp
stc
nop
push
mov
aaa
mov
adc
movsl
push
cwtl
sub
mov
push
pop
repz
loope
loop
and
xlat
rol
out
cmp
adcb
loop
push
jo
jo
das
in
cmp
test
cmpsl
add
jae
adc
jmp
mov
mov
mov
rcrl
xchg
add
ror
and
mov
jp
mov
imul
sbbb
fisubl
xchg
outsl
sub
mov
push
xchg
sub
lods
jnp
mov
lods
fisttpl
aad
pusha
mov
shl
fwait
loope
les
ds
ss
add
push
ret
cmp
loop
stos
or
mov
leave
loope
add
sub
sar
and
outsb
rorb
inc
lods
sbb
push
shl
mov
add
mov
jbe
es
nop
out
mov
cwtl
xor
rcl
adc
in
cmp
jne
xchg
xchg
jmp
dec
sbb
jns
jge
nop
inc
sub
out
gs
lahf
rorl
pop
cmp
data16
push
test
roll
shll
dec
jne
movsb
sbb
int3
inc
pop
dec
andl
fildl
movsb
je
push
inc
push
lods
and
ret
mov
bound
lock
loopne
push
cmp
into
jle
xor
insl
xchg
sub
popf
jno
ret
enter
iret
js
leave
hlt
imul
stc
pop
xchg
sbb
adc
push
xor
repz
cmc
push
imul
mov
idivb
call
and
imul
adc
sti
fs
mov
je
inc
and
in
mov
adc
mov
movsb
push
mov
xor
mov
xchg
lcall
mov
pop
mov
jl
cltd
xor
jb
xchg
insb
dec
bound
into
sbb
das
xchg
pop
lea
push
ss
sub
cli
shr
stc
xor
add
loopne
push
sbb
arpl
jns
packssdw
je
test
adc
pop
xchg
mov
jp
and
pop
insb
jle
icebp
sub
repz
mov
pop
mov
lock
xchg
out
or
pop
loop
pop
test
mov
ficomps
jg
pop
adc
cmpsl
add
in
fdivp
sub
mov
decl
lret
sbb
insl
enter
push
lret
and
xlat
mov
lret
cmp
negb
cwtl
addr16
jecxz
adc
or
adc
orb
sahf
and
in
xchg
aam
adc
jle
enter
stos
jmp
or
xchg
test
subb
inc
movsl
xchg
adc
jp
mov
mov
mov
or
and
push
jecxz
fidivrl
mov
cltd
push
pop
in
mov
cli
add
insl
daa
xor
sub
insl
lds
pop
mov
insb
push
notl
inc
lock
inc
cmpsb
mov
or
mov
divb
shr
roll
stos
xor
mov
add
loopne
or
cwtl
in
inc
push
arpl
fistl
ret
adc
mov
sub
push
data16
mov
add
stc
xlat
loopne
cwtl
mov
inc
popf
or
or
cmpsl
insl
fwait
scas
mov
push
into
add
mov
xchg
mov
or
sbb
jb
inc
mov
movsb
movsl
xchg
jle
mov
sub
pop
and
mov
jle
and
jbe
xchg
adc
xchg
int3
sti
xchg
cmc
push
jne
xor
jecxz
cmp
es
pop
xor
push
add
xor
xchg
push
add
mov
mov
xor
fisubs
mov
int3
orl
xchg
mov
pushf
sbb
or
stc
mov
jge
pop
ja
jge
iret
out
xor
int3
mov
pop
adc
or
out
lea
movsb
xor
ja
mov
xor
fwait
outsl
fwait
and
pop
stc
sub
cmp
mov
aad
rorl
in
push
fldenv
je
pushf
ficomps
out
mov
or
add
ja
mov
xchg
push
push
mov
outsl
lock
sbb
sub
lock
jbe
out
xchg
ret
mov
lods
mov
mov
in
pop
ret
sarl
dec
push
cmp
push
int
repnz
es
imul
push
pop
sub
sbb
cwtl
jp
jg
push
jecxz
imul
inc
in
inc
xor
loop
pop
cld
jns
ret
sub
sbb
xor
pop
orb
jle
in
sahf
pop
add
lret
cmp
bound
jns
popf
jne
outsb
or
ja
imul
pop
pop
cmpsl
shll
sub
daa
insb
jmp
jno
ds
sbb
pop
push
push
inc
or
sahf
jb
lret
xchg
mov
mov
pop
clc
xlat
mov
and
scas
xor
cmp
cld
cwtl
dec
outsb
dec
dec
stc
xchg
and
push
mov
call
stos
insb
xchg
sbb
add
jmp
loope
gs
mov
out
into
mov
jp
jge
mov
cmpsb
gs
cli
and
pusha
or
test
cmp
mov
nop
adc
cmp
mov
fnstenv
in
inc
call
mov
int
call
push
dec
mov
inc
test
imul
cmp
lcall
sbb
mov
cmp
adc
jae
or
sub
pop
pushf
pushf
or
daa
enterw
inc
inc
cmp
jne
aam
mov
aaa
jno
insl
mov
cmp
add
outsb
cmp
popa
out
fcmovnbe
int3
cwtl
popf
jbe
inc
xlat
push
out
jecxz
in
adc
inc
cld
adc
test
dec
dec
popf
mov
rcll
sub
jg
pop
or
mov
cmp
pop
sub
cmpsl
fcmovbe
push
pop
scas
addr16
jge
or
cld
mov
jl
mov
inc
mov
and
mov
cmp
and
inc
cmp
cwtl
hlt
inc
das
out
push
jl
add
out
and
jmp
mov
stos
xchg
sbb
shl
adcb
outsl
lock
out
inc
repz
jbe
movsb
scas
xor
fcoml
fidivrs
pop
mov
xor
push
and
lock
pop
arpl
jbe
ja
inc
outsb
out
nop
xor
stos
test
int
add
jae
pop
xorps
xchg
ljmp
mov
je
pushf
cltd
lds
pop
xchg
fcomps
loopne
js
pop
and
xchg
mov
fbstp
ja
xchg
sub
jmp
push
push
mov
xchg
das
sbb
cld
je
fdivl
mov
call
xor
fdivs
and
popa
hlt
icebp
push
mov
repnz
dec
daa
popa
fwait
bound
cmc
lock
pop
xlat
sub
mov
cltd
mov
lret
pop
shl
push
jg
inc
xlat
aas
loopew
fdivs
sub
inc
adc
pop
std
add
mov
jl
mov
xlat
aas
mov
rclb
inc
out
xchg
xchg
push
dec
in
and
shrb
es
enter
cmp
pop
fldl
sub
jle
imul
subl
lds
pop
int3
push
jns
jae
sub
mov
fnstcw
add
test
pop
xchg
cmc
mov
mov
cmpsb
jmp
mov
into
js
xchg
push
cmp
push
inc
push
gs
movsb
cmp
jo
xlat
je
repnz
sti
fisubs
jae
mov
popf
and
insl
setnp
cmp
rcrb
mov
jns
insb
fucom
and
xchg
int
xchg
mov
cs
cmc
mov
mov
sub
dec
inc
adc
xchg
xor
mov
mov
out
xor
sbb
lods
subl
mov
mov
loop
in
fs
fstps
jge
addr16
jmp
mov
lea
cmpsl
inc
aam
sbb
nop
imul
loopne
cs
mov
or
adc
ret
fwait
stos
std
or
test
pop
jl
mov
scas
xchg
xor
sub
rclb
push
insb
and
ret
jne
jae
jno
pop
sahf
cmc
mov
or
in
mulb
es
stc
in
aas
inc
jnp
jnp
push
and
orb
call
and
dec
data16
popa
xchg
pushl
push
mov
mov
or
outsb
movsb
mov
fidivrs
push
fwait
mov
push
sub
xlat
jno
cmp
mov
or
jp
push
lahf
adc
ljmp
inc
or
test
cmpsl
push
dec
es
in
or
cmc
mov
jl
or
cmpsb
mov
mov
rcrb
nop
sub
add
addr16
imul
pop
incl
push
xor
cld
sub
pop
shr
pop
mov
adc
pop
cmc
inc
dec
push
out
add
xchg
push
mov
loopne
sbb
test
out
das
ret
loope
mov
jmp
je
fwait
and
nop
mov
mov
shll
push
cmp
adc
add
test
cmc
fndisi(8087
mov
lods
dec
lock
or
rclb
arpl
pushf
push
push
push
pop
push
pop
orb
les
sahf
clc
and
mov
adc
bound
arpl
xor
or
outsb
mov
mov
sub
out
sbb
mov
repnz
or
les
nop
ds
ret
cmp
test
into
mov
pop
cmc
icebp
addb
and
mov
int3
inc
jno
fistpl
js
sub
cmp
sti
xchg
add
and
lret
jg
out
mov
cmc
pop
cmp
into
mov
iret
and
stc
flds
mov
cli
xchg
sbb
cmpsb
mov
call
mov
push
jmp
ss
out
fisubrs
lods
xchg
outsb
scas
icebp
es
jae
mov
aad
mov
rcr
cmp
mov
add
test
adc
loop
lret
in
mul
lods
xlat
xchg
sahf
mov
cwtl
xchg
loopne
xchg
shll
lods
adc
popa
fwait
cli
push
daa
shlb
inc
dec
push
jp
dec
movsb
mov
inc
pop
add
xor
pop
fmuls
mov
das
les
insl
cwtl
popf
sbb
lret
xchg
cmp
stc
outsl
adcb
test
jg
cvttps2pi
xchg
out
cmp
cmp
ror
and
inc
insb
pop
jne
xchg
mov
pop
mov
ja
xchg
loopne
xor
imull
das
cmp
cmc
iret
cmpsl
inc
or
xchg
movsb
sarl
repz
mov
inc
outsb
mov
test
ljmp
fstpt
xor
jmp
or
aad
cltd
stc
push
or
mov
sbb
push
mov
xchg
xchg
mov
aaa
out
test
pop
cmpsb
cwtl
pop
call
ljmp
xor
pop
xchg
fdivr
jno
test
mov
mov
adc
sar
roll
adc
insb
movups
push
setnp
xchg
jl
icebp
and
or
mov
out
insb
rcrb
mov
dec
negb
dec
sbb
pop
fsubrs
out
inc
movsl
dec
jno
sahf
sbbb
inc
sbb
std
mov
cli
lods
aas
adc
mov
lods
pop
cmp
mov
movsb
cmp
inc
pop
dec
pushf
push
imul
sub
in
push
ss
aad
cltd
and
das
or
adc
mov
popa
std
popa
lret
inc
jecxz
int3
push
mov
push
mov
mov
adc
jne
popa
cmp
sub
icebp
sbbb
test
jle
push
pop
aas
aam
jg
dec
jno
testb
and
mov
lock
pop
inc
lock
scas
cmp
dec
inc
lock
stos
push
fsubp
arpl
pop
sub
add
cmpl
pop
push
sbb
test
cld
xchg
jg
inc
inc
and
add
add
test
faddl
rorb
adc
movsb
dec
push
stc
add
adcb
rorb
ds
pop
mov
mov
popa
sub
movsb
xchg
cmp
lret
pop
sub
sti
cwtl
test
das
outsb
jmp
or
add
push
and
add
xor
mov
dec
mov
aad
xor
lods
roll
mov
xor
mov
repnz
into
mov
adc
mov
dec
imul
pusha
dec
test
push
cmp
fwait
into
jnp
pop
insb
xor
sub
je
adc
decl
mov
add
cmp
adc
stc
sbb
movsl
shrb
icebp
bound
bnd
xchg
xor
or
pop
and
jecxz
fidivs
inc
cmp
lret
out
ss
pop
mov
jecxz
mov
sub
cwtl
sbb
nop
lea
cmpsb
mov
xor
fwait
inc
push
fs
pop
hlt
or
xchg
xlat
fs
pushf
daa
inc
jge
push
cmp
enter
adc
aam
or
xor
addr16
inc
cmpsb
jbe
or
push
aas
pop
adc
fwait
mov
in
dec
test
adc
popaw
sbb
push
fs
inc
or
sbb
daa
add
xchg
add
add
mov
das
aas
or
imul
mov
and
sbb
pop
inc
cmp
mov
xor
das
cmp
add
das
sti
dec
shrb
out
adc
ja
lcall
xorl
adc
mov
lret
aas
popa
inc
mov
cld
push
ret
cmpsb
mov
addb
inc
cmpsl
sub
add
push
imul
mov
push
or
adc
pop
in
out
movsl
pop
loopne
arpl
frstor
adc
xchg
sbb
mov
push
xor
adc
ja
xor
add
pop
and
cmpsb
sub
mov
ret
sub
mov
mov
fistps
jg
and
mov
push
loope
hlt
push
lea
fsub
xchg
aaa
daa
mov
imul
mov
mov
xchg
mov
ficomps
xorb
popl
das
aaa
or
mov
sub
mov
out
loop
and
shlb
sub
xor
loopne
and
ds
and
sub
mov
ja
out
fadd
daa
in
fsubs
dec
int
pop
xlat
pop
and
ja
sbb
jmp
pop
dec
push
pop
mov
in
pusha
mov
cmp
int
jge
lods
or
sub
mov
mov
adc
daa
orb
cmpsb
xchg
sti
enter
shl
xchg
xor
or
scas
push
loop
scas
push
sbb
rol
xor
xor
xchg
insb
cmc
popf
and
outsb
push
aas
or
pop
roll
mov
bound
dec
fwait
test
fildl
push
ret
and
movsl
ret
aam
insb
mov
fists
pusha
add
inc
fnstsw
in
add
xchg
mov
loope
mov
pop
push
pop
push
jg
jmp
or
and
dec
loop
les
fists
or
mov
leave
cmp
aad
mov
mov
stos
hlt
push
and
outsl
sarl
and
in
dec
jmp
popl
cmp
jl
cmpsb
cmp
stos
cmc
jge
xor
add
pop
in
xor
mov
and
fmul
cwtl
xchg
add
lea
jg
adc
xor
cmp
and
cmp
loopne
xchg
into
sbb
cmpsl
mov
push
mov
adc
ret
out
lds
sub
mov
les
out
test
fsubrp
cltd
and
repnz
inc
sbb
les
imul
test
jae
xor
cmp
jp
rorl
lock
sub
das
call
jecxz
and
push
repz
je
push
push
or
std
jge
scas
xor
cmp
xor
mov
pmulhuw
lock
jne
idivb
pop
pushf
mov
lods
fsubl
mov
or
dec
stos
addl
scas
ret
pop
jl,pt
lods
adc
fadd
or
test
xchg
xchg
imul
outsb
push
pop
cmpsl
out
push
pushf
pop
sub
ja
xor
push
adc
inc
out
push
cmpsb
lret
pop
dec
dec
out
sub
call
jb
sarb
mov
and
and
cwtl
test
cmc
sbb
sbb
add
popa
push
das
jae
xor
mov
in
stos
push
xchg
and
lock
daa
lods
sub
or
mov
daa
mov
movsb
movsl
pop
lea
dec
inc
adc
cmp
xchg
dec
xchg
lretw
mov
test
jnp
out
test
rorb
iret
pop
loopne
inc
xchg
jmp
lock
mov
test
push
lahf
mov
dec
test
stc
sarb
mov
xlat
sbb
call
imulb
lock
pop
dec
sar
dec
inc
addr16
or
mov
ljmp
sbb
cmp
shll
in
jl
enter
push
pop
mov
cs
sub
sbb
push
dec
popa
xor
adc
push
sti
je
dec
sub
dec
pop
ljmp
dec
sbb
mov
std
xchg
ret
inc
xchg
js
mov
xchg
mov
or
stos
xor
lods
sarb
mov
adc
aaa
clc
es
sbb
jno
repz
imul
ja
cmp
xor
xchg
push
sbb
xor
and
adc
xor
sarl
and
std
cmp
movsl
out
popa
xor
into
call
cmc
mov
sti
cmpsb
or
jg
mov
xchg
inc
inc
xlat
mov
mov
push
bound
lods
or
xchg
and
enter
or
fadds
mov
fisubs
push
pop
push
lret
pop
jmp
aas
and
mov
or
cmp
adc
arpl
inc
cmp
insl
fstps
and
out
jg
mov
xchg
scas
shll
scas
sub
inc
cmp
add
loopne
mov
nop
adc
dec
jge
mov
shll
jmp
cmc
negl
ss
loop
dec
lcall
push
xor
sbb
and
adc
mov
pop
jb
hlt
pop
lret
out
inc
enter
sbb
jle
sub
xor
push
fdivrl
pop
lea
rorb
push
lock
jmp
or
and
mov
addr16
out
add
les
pushf
xchg
test
adc
xchg
test
pop
pop
jp
lods
hlt
into
jne
push
jl
std
cli
cmc
arpl
pop
sub
repnz
adcb
push
call
inc
pop
add
mov
inc
push
mov
sub
jecxz
decb
pop
and
add
shll
push
and
inc
push
jae
sub
xor
shrl
daa
dec
push
xor
add
sahf
push
push
clc
sub
add
scas
jno
popa
push
cmp
arpl
pop
xor
jae
loopne
jne
and
clc
mov
mov
jae,pt
orl
adc
daa
mov
leave
pop
adc
jo
mov
jbe
cmp
lret
ret
out
ja
add
xchg
fstpl
lods
pop
add
shl
and
sbb
push
dec
ss
cmp
mov
cltd
cwtl
bound
pop
mov
adc
jge
lret
jne
ja
cld
negl
pop
ror
mov
dec
cli
dec
mov
orb
popw
add
scas
imul
sub
popa
jbe
adc
pop
xor
jnp
jnp
mov
pushf
pop
inc
repz
mov
pop
and
int3
insb
mov
dec
or
fmull
pop
leave
sti
out
aad
pop
mov
repz
outsl
ss
dec
int
cmpl
loope
cmp
xchg
movsl
pop
and
xor
movsb
jae
in
nop
cli
sub
inc
stos
mov
add
popa
in
sahf
xchg
mulb
shlb
sbb
rcrl
cs
jae
sub
repz
mov
or
es
clc
movsb
ss
jb
cmp
cmp
jns
xor
mov
jne
stos
inc
int3
jmp
push
scas
es
movsl
in
mov
nop
xlat
mov
mov
dec
ja
jge
inc
jle
ja
mov
sub
lcall
subl
mov
scas
push
or
pop
jbe
push
lock
out
loope
imul
add
xchg
scas
mov
movsl
mov
mov
aas
incb
inc
add
pop
mov
test
insl
imul
enter
mov
or
push
xor
mov
fsubs
and
cmpsl
dec
shr
mov
sub
add
inc
leave
xor
jae
cmp
dec
out
sbb
ja
push
cmp
nop
arpl
mov
das
insb
inc
mov
adcb
movsb
mov
lock
add
ljmp
ucomiss
push
ficompl
hlt
inc
mov
add
xchg
xchg
jns
cmp
push
out
sub
inc
sbb
cmp
in
cld
jg
aam
imul
and
in
push
addr16
ds
cli
sti
jge
add
mov
add
sub
mov
sbb
lret
insl
testb
xchg
std
mov
and
push
repz
mov
adc
push
imul
jmp
jae
jb
fs
int
aad
je
push
decl
xchg
adc
test
push
sar
push
iret
hlt
jge
je
lock
pop
hlt
ret
mov
jp
mov
xor
or
sbbb
and
and
xchg
out
mov
push
dec
imul
mov
cmpsl
push
out
xor
jg
push
ret
arpl
je
fsubl
hlt
sbb
popf
jmp
gs
movsb
aaa
mov
fwait
shlb
cmpsb
push
fsts
shld
xchg
ljmp
insb
out
push
pop
mov
push
dec
inc
ret
xchg
xchg
mov
mov
ljmp
movsl
mov
stc
xor
loope
ret
std
adc
out
aas
pusha
xchg
addb
pushf
out
mov
jne
popa
aaa
test
in
jecxz
push
mov
cmp
sbb
jmp
mov
jl
mov
es
ret
mov
mov
lahf
out
inc
push
subb
pusha
enter
inc
lea
sti
inc
les
xor
imul
lock
and
cmp
je
inc
mov
sarb
xchg
dec
movsb
sbb
addr16
sub
sbb
and
jnp
jns
mov
lods
fstpl
dec
aaa
sub
xchg
inc
inc
pop
fcoml
rorl
and
ror
jmp
or
mov
mov
pop
fnstcw
fdivs
ds
xchg
ljmp
or
jge
rorb
jle
ljmp
inc
add
lea
adc
out
mov
mov
aaa
push
mov
jb
lds
or
or
int3
push
mov
clc
jmp
add
jo
lea
daa
inc
sbb
roll
bound
pop
or
pop
shrl
cwtl
cmp
xchg
fstps
insl
xor
adc
mov
repz
cmpsb
shr
aaa
pop
iret
gs
xchg
mov
dec
sbb
aam
push
test
lods
cmp
iret
xor
pushf
sbb
pop
out
addr16
fsubr
pusha
inc
jb
enter
je
cld
push
jnp
hlt
jnp
imul
sarb
shrl
mov
push
or
pushf
int
inc
loop
push
cli
lods
sarb
stc
push
pop
insl
pop
fadd
pusha
outsb
pop
popf
xor
lds
inc
sbb
cld
xor
jg
sti
ret
fnsave
pusha
mov
insb
or
xchg
mov
sub
movsl
inc
les
rol
pop
cltd
mov
push
push
mov
stc
mov
mov
mov
add
cwtl
out
hlt
jg
add
nop
inc
adc
inc
dec
arpl
sub
sti
xor
adc
lods
jle
or
push
jae
sti
jmpw
xor
mov
cmpsl
cmc
mov
mov
repz
cmc
sbb
jge
aaa
les
arpl
and
popa
sub
adcl
push
pop
pop
int3
je
mov
test
add
xor
mov
xchg
fisubrl
inc
stos
aad
cmp
mov
cmp
and
mov
lahf
and
cmp
sahf
notb
xchg
mov
push
nop
xchg
aad
pop
push
cmp
das
mov
mov
in
loop
rol
cmpsl
xchg
mov
jae
icebp
repz
sbb
je
ret
adc
decl
or
lret
sbb
cmp
and
mov
and
aad
loop
xor
cmp
or
jo
xor
outsb
xor
add
mov
gs
inc
mov
es
jmp
adc
or
and
in
adcl
mov
dec
clc
sub
aam
nop
or
and
mov
cmp
add
pop
jecxz
add
sbb
and
scas
cmp
add
stos
xchg
nop
mov
dec
mov
cmp
out
lcall
jns
daa
lea
lret
cli
push
add
outsl
addr16
sbb
and
rcrb
andb
clc
cld
arpl
mov
out
jo
xchg
inc
cmpsl
sub
inc
ret
fisttpll
out
adc
cltd
pop
insb
loopne
jecxz
or
mov
xor
push
into
add
inc
pop
jo
push
push
ljmp
dec
mov
sbb
push
inc
scas
insb
add
movsb
mov
leave
cmc
mov
lea
lret
dec
mov
mov
add
in
int3
in
xchg
scas
aad
sahf
incb
mov
jge
in
add
icebp
mov
pop
cmpl
jge,pt
inc
bound
xchg
rcrb
jb
push
jmp
stos
pop
mov
adc
sub
repnz
xchg
mov
mov
enter
ret
dec
sbb
clc
adc
shr
cmp
scas
pop
xchg
loop
or
lea
push
in
pop
pop
dec
mov
jmp
jg
fdivs
cmp
pop
sub
scas
or
pushl
cld
xor
int
dec
iret
fdiv
ja
mov
sub
mov
pop
or
cwtl
inc
call
cld
add
scas
sub
push
lret
outsb
cltd
movsl
add
stos
mov
jae
cmp
cwtl
pop
adc
repz
psubw
ljmp
pminsw
pop
lods
int
test
push
push
dec
mov
outsl
xchg
pop
xor
ja
xchg
mov
lahf
dec
das
lret
add
dec
pop
xchg
dec
sub
ds
imul
cmp
sbb
adc
jnp
mov
mov
mov
loope
pusha
stos
neg
stos
test
in
mov
mov
icebp
lret
jge
pop
dec
mov
push
dec
push
mov
add
stos
enter
fs
add
dec
aad
inc
add
das
fsubs
pushf
pop
and
pop
inc
jnp
push
cli
xor
imull
std
and
stc
xchg
test
xor
and
sti
xchg
in
cltd
add
in
mov
mov
subl
adc
loope
or
mov
push
xor
add
and
push
leave
jns
stos
or
xchg
in
xor
cmp
mov
notb
mov
jmp
pop
std
jmp
and
shll
cltd
popf
push
test
aam
ror
rcrb
cmp
jbe
xchg
and
jno
lret
sbb
pop
into
mov
or
ja
dec
mov
loop
xchg
cmp
xchg
pop
cmpsb
jb
insb
xchg
inc
lods
sbb
jle
insl
adc
push
sub
push
pusha
daa
fstpl
stos
cmpsb
mov
jecxz
mov
outsb
stos
mov
inc
shll
fs
xlat
xchg
mov
imul
into
mov
test
bound
push
add
decb
out
xchg
push
xchg
adc
in
call
lods
fiadds
cmp
dec
push
sub
cmpsb
push
stc
cmpsb
add
bound
pop
fwait
add
popa
cmc
inc
test
cmpsl
and
je
xor
sti
push
iretw
aam
lahf
mov
std
lret
stos
jae
xchg
xchg
ret
fcompl
xlat
fmul
xor
imul
pusha
adc
call
sbb
and
cmp
aaa
jl
jns
pop
cmpsb
rorl
mov
fisttpl
out
leave
pop
add
mov
mov
std
ds
shr
outsl
mov
pop
roll
sbb
sahf
rolb
movsl
and
test
int
cmp
test
mov
mov
stos
mov
jne
adcb
inc
stos
dec
stos
xor
shrb
int3
jnp
jl
aad
jne
ret
push
dec
or
decb
adc
repz
leave
pop
mov
in
insb
jns
mov
insb
pop
popf
cwtl
andb
inc
jg
int
and
loop
mov
xchg
dec
into
add
or
in
add
and
dec
das
adc
inc
adc
aas
adc
dec
in
add
nop
rorb
and
push
or
mov
dec
mov
sub
arpl
ret
xchg
dec
mov
andb
pop
sbb
stos
fstpl
insl
fildl
cmp
cld
aas
xchg
imul
out
sub
cmp
mov
dec
and
cmp
pop
pop
xor
lods
jbe
add
mov
scas
lods
xor
dec
pop
pushf
adc
fistps
fstps
add
dec
or
jnp
sub
jg
sub
dec
dec
or
in
and
es
pop
add
sbb
jle
out
mov
and
xor
jp
fisubs
pop
outsl
jne
int
ret
out
jae
adc
sub
dec
stos
sub
sbb
int3
and
ljmp
test
dec
mov
sbb
pusha
cli
into
rolb
cmpsb
int3
data16
lea
sbb
push
ret
shll
imul
dec
test
adc
mov
test
add
mov
subl
ja
pop
mov
mov
loopne
mov
mov
into
push
das
push
js
mov
adc
mov
mov
add
int
add
pop
nop
pop
insl
xchg
popa
inc
adc
xor
jae
loopne
divl
xor
mov
stc
divl
cmp
lcall
mov
sub
push
mov
pop
xor
js
cs
std
push
cmpsl
cmp
pop
or
push
push
stos
clc
jmp
jle
fs
xor
jnp
mov
or
push
orb
jo
gs
mov
lea
or
jmp
and
jmp
out
repnz
ret
xchg
lock
out
daa
daa
call
jmp
sar
fisttps
adc
lock
mov
rcrl
icebp
cmp
arpl
mov
out
cmc
cmp
scas
sbb
adc
testl
rcl
dec
sbb
mov
stos
repz
push
cmp
roll
xor
rorl
xor
clc
lcall
inc
out
sbb
push
mov
sub
scas
negb
scas
fistps
add
push
scas
xor
xchg
jb
sahf
and
pop
mov
sarb
sub
and
pushf
outsl
mov
insl
movsb
fadd
dec
sub
jns
push
ds
mov
imul
cmp
mov
movsb
xor
pop
sub
jo
fsubl
ja
cmp
lods
and
repnz
inc
out
and
cltd
stc
js
mov
sub
cs
fidivs
int
cmpsb
fsubrs
add
mov
xor
fsts
jb
dec
jmp
addr16
rorl
popf
jmp
jo
in
jbe
pushf
sti
test
xchg
xor
adc
sbb
ret
addb
imull
fs
gs
pusha
jg
andb
push
in
mov
push
adc
mov
loop
shl
not
pop
xor
adcb
mov
pop
rolb
aaa
aas
push
lret
or
mov
rorb
bound
shlb
sbb
jp
sbb
ret
and
or
mov
mov
mov
pop
adc
sub
cmp
xchg
cmp
dec
jg
pop
mov
jecxz
pusha
ret
mov
push
cmp
cmc
sub
push
jo
xchg
jne
and
lcall
mul
pop
pop
out
jbe
movswl
outsl
pushf
jne
push
das
mov
aaa
imul
push
aam
shrb
mov
xchg
fadds
cmp
and
mov
sbb
adc
mov
push
add
jmp
cmpsb
cmpsb
nop
jmp
iret
int3
add
jnp
jno
inc
jl
sti
gs
cmp
adc
inc
das
sub
out
in
xchg
jmp
ja
jg
cwtl
dec
push
push
jnp
sbb
cmp
or
or
push
cltd
push
and
cmp
aas
cmp
add
dec
cmpxchg
iret
lea
pushf
lahf
popa
push
fstl
sahf
jne
pop
pushf
cld
and
cwtl
jo
mov
insb
in
daa
xchg
stos
inc
pop
mov
stos
pop
jnp
popa
aas
js
inc
pusha
lock
not
das
mov
out
enter
call
jl
jmp
lods
outsb
jb
jae
out
or
adc
cltd
icebp
sahf
sbb
push
sti
cltd
cld
cmp
mov
out
adc
repnz
mov
sub
adc
arpl
cmp
aam
inc
dec
in
repz
repnz
lock
lcall
inc
stos
xchg
dec
loope
adc
jb
jl
push
mov
inc
test
mov
cmp
ljmp
divl
adc
bound
dec
and
mov
loopne
push
sub
divb
mov
ds
outsb
mov
inc
inc
insl
aaa
into
fdivrp
ret
insb
xor
push
mov
and
sub
add
pop
insl
sub
lds
jecxz
adc
stos
ret
pop
sahf
cld
and
and
ret
adc
dec
cmp
aam
sub
push
add
aas
fdivr
rorl
xor
fwait
addr16
sub
fbld
ret
sub
xorl
dec
ss
movsb
loope
push
test
and
andl
dec
push
ds
mov
shlb
add
int3
mov
dec
fadds
mov
iret
je
cmpb
cwtl
sti
popf
or
outsb
lods
fiadds
out
fsubr
cmp
pusha
xlat
jmp
sub
ret
or
movsb
xor
and
clc
icebp
movsb
or
in
out
sbb
mov
dec
cmc
jle
mov
je
mov
outsb
aaa
int
in
sar
xchg
scas
les
clc
mov
adc
jecxz
rcl
cmp
shll
dec
fsubl
pop
or
scas
xor
xor
test
arpl
ss
leave
into
pop
outsb
cmpsl
cld
popf
lods
adc
aad
incl
sub
sbb
mov
unpcklps
and
addb
frstor
sub
jo
in
xchg
sbb
add
inc
imul
andb
lea
test
mov
mov
int
lcall
int
iret
or
jbe
rcrl
add
push
aaa
out
insl
xchg
mov
adc
push
pushf
hlt
stc
xor
aas
imulb
jb
sub
stos
push
in
mov
mov
xchg
adc
imul
jo
in
andb
mov
add
mov
pop
mov
sbb
fcomip
lcall
and
pop
mov
mov
adc
in
or
enter
je
js
mov
popa
push
push
test
pcmpgtb
out
jae
cmp
aas
xor
add
mov
ljmp
xchg
inc
in
pusha
addl
xchg
sti
push
pop
add
add
pop
lds
shlb
cltd
pop
dec
sti
and
add
jns
xlat
jecxz
jle
and
leave
mov
int
es
aad
kmovb
outsb
cmc
push
test
hlt
scas
scas
out
insb
xchg
int3
mov
ja
adc
inc
inc
nop
insb
dec
cmp
std
scas
loope
gs
and
and
cmpsl
das
push
and
adc
cmp
mov
mov
xchg
and
lcall
mov
inc
jbe
daa
stos
cmp
outsl
stc
mulb
lret
shll
cmpsb
stos
into
cmp
insb
test
outsl
pop
inc
or
cmp
mov
sub
loopne
sub
leave
movsl
cmc
ljmp
inc
mov
pushf
and
or
mov
mov
dec
mov
pop
inc
or
rolb
xchg
lods
mov
movsb
imul
fldcw
jb
movsl
and
mov
shll
inc
fiadds
in
adc
inc
cwtl
xchg
subl
inc
mov
mov
cmpsl
fistps
mov
hlt
push
das
sub
das
es
pop
scas
pop
add
cmp
out
or
rclb
adc
xorb
dec
subb
sub
clc
jne
dec
xor
cmp
cmp
inc
cld
test
mov
mov
push
mov
jl
xchg
push
dec
adc
divb
dec
sbb
aad
mov
divl
dec
pop
sbb
bound
scas
mov
fsubrl
push
outsb
push
sbb
lds
and
or
pop
or
sbb
aad
push
or
lds
test
sub
pushl
sti
imul
call
outsb
fisttpl
idiv
shrl
stos
cmpsb
js
call
xchg
xorb
sub
hlt
loope
pop
sub
or
out
or
dec
popa
outsb
fwait
sbb
bound
lock
inc
sub
ljmp
or
jns
push
push
ds
popa
adc
sbb
and
xor
or
test
loopne
popa
loopnew,pn
adc
jno
adc
mov
adc
mov
jo
arpl
js
lcall
pop
adc
push
jmp
ja
cmp
fsubs
lcall
lcall
jmp
imul
lahf
cmp
cmpsb
mov
movl
icebp
ficoms
test
push
or
pushf
lcall
or
lods
imul
and
lods
jmp
js
mov
jae
hlt
daa
jp
sbb
shr
mov
inc
mov
cmc
cmp
push
push
sub
imul
pop
inc
pop
ret
dec
or
sub
int
iret
mov
pop
cmpsb
clc
mov
xchg
mov
rclb
inc
ret
scas
mov
xor
push
mov
popf
mov
push
sub
push
pop
dec
lods
daa
push
ss
testl
dec
test
sbb
pop
xchg
insb
lahf
inc
sbb
aas
ss
hlt
or
inc
and
fidivrs
ret
mov
movsb
loope
inc
inc
pop
mov
inc
sbb
fstpt
cmc
xor
addr16
xchg
sarl
hlt
ja
lods
mov
lods
mov
lret
pop
int3
pop
push
sbb
hlt
push
add
popa
repz
ret
mov
mov
mov
sti
sbb
jge
pusha
mov
fcmovnu
mov
aam
cwtl
jmp
or
push
add
sbbb
stos
and
pop
pop
andl
sbb
or
xchg
in
sbb
jmp
outsb
inc
cmp
maskmovq
imull
xchg
lret
xlat
ror
sbb
xchg
lret
and
dec
xchg
stc
mov
sub
int3
es
gs
std
pop
push
test
ljmp
insl
fldt
je
subl
imul
pushf
push
jge
mov
roll
cld
aas
aas
mov
fwait
dec
pusha
fdivrl
clc
repz
outsl
pop
rorb
fucomip
daa
xchg
popf
inc
stos
jle
lock
pop
sbb
push
mov
xor
pop
adc
lcall
mov
test
stc
cmp
dec
xor
in
incl
sbb
xchg
cmp
ja
pop
cmp
fnsave
pop
outsb
aas
push
addr16
hlt
les
mov
inc
xchg
cmpsl
sub
ja
shlb
pop
xor
fwait
mov
mov
outsl
mov
das
inc
lea
add
push
push
outsl
rol
xor
mov
xlat
inc
adc
or
je
mov
cmp
imul
test
adc
aaa
adc
dec
mov
fcmovne
int3
cltd
mull
fdivs
mov
dec
xchg
out
ret
cwtl
xchg
in
test
fwait
pop
adc
stos
aam
roll
fcoms
add
ret
movsl
ret
lods
push
mov
lea
fnstsw
shl
add
aad
js
inc
adc
and
and
enter
mov
ja
stc
inc
gs
jo
sub
mov
jecxz
inc
enter
clc
js
dec
and
xchg
adc
adc
mov
outsl
jmp
or
cmc
fs
cmc
xor
jbe
lret
jae
popfw
pop
jb
aas
in
shll
jg
sbb
cld
jbe
ret
popa
int3
scas
aam
mov
ret
stc
or
jle
mov
mov
icebp
sub
cmpsb
mov
xchg
jecxz
add
mov
mov
adc
popa
xor
in
add
scas
cld
inc
loope
xlat
cmpsl
sbb
jecxz
iret
subb
sbb
push
inc
xchg
in
stc
jb
out
lods
shlb
ret
fistpll
xchg
dec
and
jecxz
adc
test
mov
sub
ss
in
test
jns
sbb
sarb
xchg
enter
sub
lret
bound
out
imul
mov
inc
mov
stos
stc
enter
pushf
stos
sbb
mov
jp
jae
mov
movsb
mov
lods
mov
push
or
addr16
mov
dec
adc
stos
pop
mov
pop
add
mov
cltd
xchg
inc
xor
mov
jmp
xchg
push
push
fbstp
xor
pop
mov
les
dec
or
dec
or
sub
or
stc
and
mov
or
inc
or
imul
icebp
xchg
fstpl
and
cmc
jae
xlat
push
stc
xchg
aaa
out
ret
dec
mov
out
sub
cmp
pusha
cltd
jo
hlt
or
dec
jl
leave
adc
loopne
ja
fists
fstps
aam
fdivs
fpatan
jmp
pop
out
test
xchg
jbe
out
xor
test
pop
mov
push
aam
lods
dec
xor
lods
xchg
icebp
repnz
inc
movsl
mov
inc
or
cmpsl
mov
dec
jle
popf
mov
xchg
pop
call
mov
in
cmp
mov
mov
mov
idivb
and
rcrb
or
stos
mov
ja
inc
cmp
or
push
jbe
cmc
fidivrs
lahf
imul
lret
and
pop
sbb
gs
lahf
cli
inc
icebp
mov
lea
fistl
aas
scas
daa
sahf
cmp
in
pop
sub
movsb
or
out
inc
or
push
mov
xchg
jb
adcl
repz
xor
loopne
sbb
mov
in
enter
and
insb
sub
cmc
pmulhw
ds
push
xchg
pop
xor
test
lcall
xchg
sub
jns
mov
das
in
add
dec
or
mov
or
fcompl
outsl
rcrl
cmp
sbb
xor
adc
insl
mov
pop
rol
ss
jmp
loopne
imul
push
jg
dec
or
mov
pop
loopne
popa
insb
mov
addr16
add
mov
cmpsl
push
push
leave
nop
xchg
fisttpl
add
and
mov
mov
lret
lds
out
push
jp
mov
jecxz
sub
leave
je
shlb
ret
ret
js
fwait
cmc
xor
shlb
mov
loopne
cmc
push
sbb
out
adc
xor
ds
cmp
or
fmul
xor
jecxz
adc
xchg
enter
int3
arpl
insb
jns
push
push
mov
inc
out
push
dec
lret
shrb
mov
cmpb
mov
pop
loope
ret
push
nop
in
das
sbb
les
pop
pusha
lahf
and
das
call
rolb
cli
sbbb
aaa
movsb
mov
mov
popf
mov
nop
sbb
nop
enter
mov
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
fdivs
and
push
data16
fwait
aam
add
test
aas
jb
scas
fildll
lea
mov
ss
xlat
lcall
pop
inc
adc
out
push
inc
xchg
mov
stos
pop
cmp
adc
jnp
or
add
pop
pop
das
xor
test
and
lods
movsl
and
mov
add
lds
in
and
out
mov
mov
mov
fimull
mov
mov
mov
sbb
addr16
sub
loop
inc
lock
fdivrs
jno
addr16
jne
push
sahf
sbb
shll
je
and
mov
divb
fsubrl
adc
mov
je
and
ljmp
adc
or
or
cmp
mov
add
push
cmp
je
mov
imul
inc
repz
loop
mov
pop
dec
out
mov
dec
sbbb
popf
imul
push
punpckhdq
lcall
push
inc
push
ret
inc
sahf
dec
adc
push
std
dec
push
adc
daa
faddl
jns
iret
out
clc
xchg
sub
stc
xchg
push
iret
ficomps
xchg
cmp
es
les
xor
fwait
jno
mov
ss
push
ds
insl
and
bnd
pop
lret
mov
fstps
jmp
xchg
xor
in
loope
mov
in
jg
jbe
xchg
js
aam
data16
sub
ret
dec
and
lock
inc
adcl
out
sbb
cmpsb
gs
cli
mov
pusha
xchg
add
nop
cmp
mov
int
movsb
xor
or
stc
bound
sub
adc
mov
arpl
loop
push
in
cmp
add
cmpsl
mov
fildll
or
push
in
adc
jns
popa
or
imul
add
loopne
sub
jmp
leave
test
lods
mul
sbbb
ljmp
xchg
out
out
or
test
lret
in
push
jo
addr16
xchg
ja
inc
enter
mov
aad
sbb
dec
xchg
stc
test
stos
or
leave
or
mov
xlat
inc
rcrl
jp
clc
jb
test
sbb
mov
jl
aam
out
push
ds
shl
imul
and
mov
sbb
jle
sub
cmpl
cmpsb
nop
ljmp
std
bound
xchg
out
mov
sub
and
push
lret
fiaddl
xchg
lret
mov
xchg
stos
lcall
pop
sbb
mov
incb
or
mov
dec
xor
ljmp
add
add
xor
sbb
adc
imul
mov
mov
add
lds
xchg
jmp
and
loope
test
add
push
or
pop
in
push
cld
cmp
push
pop
add
jnp
movsb
icebp
int3
xor
out
sub
pop
mov
cmp
popf
inc
scas
inc
bswap
rcl
jne
mov
mov
jl,pn
xor
arpl
stos
sub
ja
jno
sub
push
into
cmpsb
xor
mov
loop
fisttpl
je
movsb
inc
adc
inc
repz
popf
or
mov
frstor
mov
divl
inc
sbb
cwtl
push
pop
or
mov
pusha
pop
test
in
xor
insl
es
or
xchg
pop
cmp
pop
cmpsb
pushf
pop
inc
in
stos
loope
xchg
and
jae
cmpsb
mov
pusha
ret
add
cmpsl
push
or
push
jmp
mov
inc
inc
adc
sbb
and
add
les
or
mov
dec
lds
loopne
in
in
jnp
push
cwtl
inc
or
sti
sarl
pop
subb
xor
or
add
fneni(8087
insb
arpl
into
fcmovnu
mov
mov
jp
inc
sbbl
push
jmp
in
mov
sbb
xchg
or
popa
xor
dec
jmp
sbb
xchg
leave
xchg
pop
pop
aad
cmpl
bound
imul
mov
mov
add
cmp
lcall
insl
pop
ss
or
xchg
cmp
dec
sub
jp
dec
cltd
xchg
mov
cmp
cmp
adc
filds
aas
or
mov
dec
je
aam
test
loopne
and
or
xor
or
test
push
jo
jnp
cmp
add
pop
lcall
lods
xchg
cmp
gs
mov
cmpsl
subb
mov
ljmp
imul
call
sub
loope
push
pop
call
insb
outsb
sbb
inc
inc
mov
xchg
aad
fisttps
dec
aad
lods
xchg
das
repz
pushf
pop
sbb
imul
sti
movsb
mov
fdivrl
mov
cmp
cmpsb
ja
fsubr
aam
xor
test
pop
push
pop
sti
xor
loope
xlat
fwait
inc
inc
cltd
xchg
xlat
mov
sarb
mov
stos
js
jle
xchg
xchg
ret
cmpsl
movsb
scas
sbb
fnstenv
inc
mov
sbb
outsb
dec
shrb
cs
push
dec
js
mov
fsubrl
frstpm(287
arpl
aad
fbld
cmpsb
fsubrp
out
dec
sti
js
lret
addl
mov
lret
adc
leave
xchg
push
pop
movsb
and
mov
push
dec
push
es
int
dec
sarl
into
lds
les
hlt
shl
inc
and
xchg
popf
cmp
aad
icebp
mov
test
mov
aad
mov
pushf
sub
adc
sub
xor
dec
cmp
out
mov
sub
inc
in
cli
xor
insl
jbe
les
cmp
imul
and
mov
stos
jb
sub
push
rorb
sub
cmp
call
sti
sub
ja
sbbl
mov
push
inc
inc
cmc
pop
adc
and
jle
std
dec
cmpsl
mov
insb
cmp
ret
les
test
mov
jge
test
xchg
xchg
in
insb
and
outsl
jle
fwait
sbb
fs
inc
lds
cmp
xchg
fwait
xorl
inc
xchg
into
mov
push
jl
dec
idivl
and
aas
mov
mov
cltd
aas
imul
mov
adc
cmpsb
inc
dec
add
fists
or
movsb
sub
movsb
int3
dec
orb
add
or
add
sbb
mov
cltd
xor
pusha
jecxz
test
or
pop
mov
dec
push
mov
jo
mov
adc
clc
push
inc
jg
adc
mov
push
push
fdivrp
cli
idiv
adc
orl
test
push
sub
mov
mov
dec
cmp
inc
xchg
fs
cli
lcall
addl
idivb
ljmp
jne
dec
insl
dec
mov
or
xor
popa
and
rcl
cwtl
xchg
clc
mov
cmp
xchg
inc
je
adc
insl
mov
mov
sahf
mov
mov
push
daa
and
inc
aaa
mov
and
pop
scas
repnz
push
sub
lahf
aaa
cltd
jbe
xchg
push
call
test
in
cltd
mull
jl
scas
aam
sub
pushf
stc
imul
bound
mov
test
xor
mov
push
cmp
mov
or
out
insb
pop
mov
out
out
popf
test
push
jmp
dec
adc
or
pop
jle
mov
push
imul
mov
stos
cmc
xchg
out
cli
lahf
jge
mov
mov
xchg
sbb
xor
dec
stos
sbb
lret
fnstsw
mov
lahf
sahf
xorb
sub
ja
roll
fsubrs
push
sbb
int3
xchg
mov
data16
mov
sbb
adc
loopne
out
pop
jo
icebp
cli
dec
aad
lock
sti
mov
mov
or
ret
cmp
lds
add
rclb
je
and
or
mov
push
std
cli
jmp
stos
fcmove
fwait
mov
xchg
mov
rorl
xor
cwtl
pop
leave
ljmp
sbb
xchg
mov
or
bound
jbe
repnz
insb
into
sbb
add
lods
xor
lods
jno
cmp
fisubl
shll
data16
push
ja,pt
scas
add
ret
push
ss
ret
add
out
add
and
pop
pop
lods
mov
push
push
xlat
mov
inc
daa
pop
stos
adc
xor
inc
hlt
jmp
bound
dec
and
scas
dec
sbb
imul
mov
xchg
xlat
mov
xor
ret
out
jo
test
inc
inc
mov
add
mov
enter
lods
mov
mov
xor
sbb
pop
jecxz
inc
lods
add
mov
int
mov
dec
inc
out
xchg
imull
adc
lcall
mov
mov
cmp
icebp
mov
pop
mov
add
xor
add
movsl
fwait
dec
push
add
call
clc
push
leave
mov
pop
xor
xor
hlt
inc
into
insl
pop
mov
cmp
pop
and
jbe
in
lods
pop
inc
inc
inc
lods
and
cwtl
ss
and
adc
cmp
cmpl
adc
and
ljmp
mov
pop
cmp
jge
mov
test
xchg
xchg
mov
mov
icebp
cld
mov
lret
sbb
dec
pop
mov
sahf
lcall
scas
push
xor
test
xor
xlat
int3
aaa
fisubl
mov
sbb
xchg
jmp
dec
in
mov
push
adc
cmp
mov
in
icebp
mov
sub
xorl
dec
fwait
cmp
pop
int
fs
pop
inc
les
in
mov
inc
xor
fistps
and
iret
adc
sub
add
mov
ja
jo
sahf
sti
sub
jge
punpcklbw
cmpsl
cmc
nop
cmp
push
add
push
cmpsb
rolb
inc
lcall
push
inc
cmp
mov
sub
inc
in
call
loopne
imul
sti
and
ss
mov
repz
sub
bound
xor
addl
add
mov
mov
xor
rorb
insl
popf
adc
je
and
cmp
jbe
jne
xchg
and
and
sub
mov
pop
dec
mov
int
and
data16
cmp
lea
mov
lods
inc
adc
sub
jne
test
popf
xchg
sbb
push
xchg
push
stc
outsb
mov
mov
daa
inc
popl
mov
out
push
lcall
nop
adc
cmp
lcall
xlat
cmp
rol
lret
add
cmp
mov
cmpsb
inc
out
pextrw
adc
aam
push
cmp
mov
test
fimull
inc
push
test
adc
xchg
in
sub
mov
pop
dec
and
stos
ds
cmpsb
pop
dec
xor
fdivrp
and
lcall
addr16
push
or
stc
aad
inc
mov
sbb
scas
fwait
dec
pop
mov
daa
fisubrs
lret
aad
cwtl
xor
mov
imul
mov
or
fstpt
hlt
cmp
dec
or
imul
stos
fidivrl
in
dec
test
testl
pop
or
stos
dec
and
or
pop
pop
xor
and
negb
das
pop
pop
mov
ret
outsb
jle
ss
aaa
int3
and
ret
add
in
stc
add
daa
sbb
mov
xchg
sbb
jbe
add
sbb
fwait
or
mov
mov
sub
adc
inc
fdivrl
dec
pusha
mov
test
and
mov
add
ja
mov
loopne
ss
pusha
clc
stc
xor
bound
pop
and
inc
xchg
insb
pop
jbe
mov
xor
iret
movsb
mov
cwtl
xchg
xchg
rclb
cmp
scas
or
jnp
aas
es
and
stc
pop
es
enter
popa
and
jo
xchg
lods
pop
xor
fcoml
sar
cmc
sahf
sub
mov
xlat
pop
int3
cmp
pop
gs
and
cmc
dec
outsl
dec
mov
mov
popa
mov
mov
int
mov
cmp
mov
cwtl
inc
jbe
xchg
addr16
dec
scas
imul
rclb
pop
outsb
or
inc
rorb
sbb
out
sahf
bound
mov
sbbb
mov
mov
pop
and
les
notl
adc
sbb
xchg
add
add
and
push
rcrl
pop
push
jmp
and
cmp
xchg
rorb
scas
cmp
movsb
movsl
sbb
lods
negb
fs
arpl
fistps
dec
mov
lret
pop
mov
inc
test
mov
jbe
movsb
aaa
gs
pop
jg
iret
jne
dec
mov
aam
jnp
dec
shll
enter
mov
xchg
push
cld
rcll
xor
scas
push
cwtl
inc
push
xlat
dec
shll
mov
jl
pop
pand
imul
je
pushf
ficoml
mov
adc
mov
mov
ljmp
adc
out
lods
dec
popa
xchg
rorl
lret
push
ds
mov
fmull
inc
rcl
pop
or
aam
pop
jg
in
orl
lret
xor
lret
push
pop
pop
jo
mov
mov
sbbl
mov
stos
inc
dec
mov
push
jecxz
out
in
sti
and
sahf
cmp
jo
insl
pop
and
and
or
jp
adc
scas
nop
testb
jmp
insl
push
jo
jbe
mov
add
pop
push
xor
push
inc
sbb
ret
sbb
xchg
rolb
adc
dec
popf
ds
and
jo
ret
xchg
rclb
inc
bnd
aam
cmp
and
ljmp
sub
mov
xchg
aas
addr16
push
xchg
hlt
xor
xor
nop
pop
sub
int
int3
or
js
fisubrl
cmpsb
ss
push
jle
fcmovne
jne
sub
mov
inc
das
mov
sub
push
and
push
add
incl
sub
pop
shll
adc
scas
loope
popf
pushf
add
cmp
xchg
or
push
shl
pop
lcall
arpl
in
outsb
and
fidivrs
push
in
out
jo
dec
sub
lods
pop
cmp
insb
adc
iret
mov
jbe
inc
sbb
ret
sti
xlat
ds
xchg
cmc
and
aas
fdivs
scas
jl
bound
lods
mov
notl
pop
jo
sub
add
lret
cmc
lods
imul
mov
movsl
repz
popf
daa
pop
nop
repz
inc
xor
movsl
mov
xchg
and
iret
mov
lea
fsubrl
jl
cmpsl
inc
mov
push
mov
sbb
movsl
mov
aad
mov
fsubrs
mov
pop
out
lds
or
sub
cmp
adc
and
into
fiadds
mov
outsl
push
mov
in
sub
inc
push
gs
dec
push
in
jae
jmp
fcomi
sti
dec
jp
shlb
jno
dec
stos
mov
inc
shufps
rcrl
push
cmp
cmpsl
or
or
sub
scas
js
push
outsb
lods
sbb
repz
ficomps
subb
jp
js
push
pinsrw
out
mov
mov
sti
add
and
xor
inc
xchg
loope
pop
and
cmp
sub
jns
and
dec
cmp
pop
push
das
insl
pop
push
push
pop
add
stos
mov
in
out
icebp
jno
sbbb
push
imulb
imul
popf
xchg
andb
mov
sbbb
push
mov
test
lahf
fistpl
stc
test
push
call
icebp
scas
dec
sub
cltd
and
nop
cmp
aas
ret
mov
js
lock
and
scas
dec
jl
inc
xchg
shrb
leave
scas
mov
pop
adc
jb
iret
imul
pop
cld
sbb
shl
and
pop
addl
fwait
ret
stc
pop
iret
push
xor
lock
sete
test
movhps
pop
pop
incl
jae
add
xchg
sbb
add
and
jecxz
adc
add
or
xchg
cmp
loopne
and
and
jae
mov
cmpsb
mov
xchg
jb
out
dec
adc
lds
ret
pushf
jecxz
out
mov
loop
movsl
scas
insb
or
cs
lock
dec
shlb
mov
fwait
nop
loopne
arpl
and
or
pushf
mov
push
fs
xchg
dec
subl
cmp
jmp
mov
xor
push
push
or
ret
jge
and
inc
add
movsb
mov
dec
jecxz
hlt
xchg
popf
mov
outsl
std
ds
inc
pop
or
addr16
stos
ret
rorl
adc
insb
lods
mov
jno
pusha
xchg
inc
popa
ret
out
inc
mov
int
dec
shll
adc
sbb
call
xchg
and
xchg
aad
adc
cmc
stc
push
jb
push
les
jle
pop
sbb
insb
push
mov
pushf
jbe
aad
dec
inc
cld
jecxz
dec
in
sbb
leave
mov
pop
sahf
movsl
push
stos
mov
inc
rcr
pop
fsubrp
sbb
or
int
adc
inc
cmp
and
test
lcall
loop
and
aad
dec
scas
inc
add
addl
imul
into
test
cld
ficompl
clc
sub
cmp
test
add
push
sbb
jg
xchg
fld
mov
int
inc
jb
inc
stos
mov
cs
xor
jo
sub
cmpsb
imul
jo
cmp
or
aaa
push
push
pop
lods
and
ss
stos
push
test
movsl
test
pop
sub
pop
int3
sub
test
lds
xchg
inc
or
int3
xor
cli
std
leave
add
push
jge
xor
enter
mov
xchg
inc
jmp
push
mov
sub
mov
ret
jle
call
outsb
add
pop
or
xlat
jecxz
mov
cmpsl
pop
mov
sbb
idivl
dec
xor
stos
jo
xchg
jns
mov
into
clc
stos
jns
subb
aad
mov
mov
lea
shlb
adc
xor
cs
inc
in
pop
into
cld
push
scas
fsubl
in
mov
jns
int3
and
push
lahf
aaa
sbb
mov
and
out
or
dec
xchg
or
fadd
jge
xor
sbb
pop
jne
sub
mov
nop
insb
in
adc
push
out
fildl
sbb
pop
push
fdivs
lahf
adc
ss
adc
repz
iret
mov
insw
lods
ret
sbb
pop
add
sub
add
test
hlt
xor
cmp
jp
out
jne
jne
in
aas
leave
shrb
inc
cmp
cmpsl
xor
add
arpl
das
stos
mov
out
loope
rcrb
stc
pop
dec
add
dec
outsl
sahf
inc
inc
jnp
push
sbb
and
add
xchg
out
mov
mov
iret
lods
or
fidivl
inc
int
xor
call
push
fistpll
xlat
mov
dec
loopne
out
push
fwait
jecxz
adc
insb
xor
jne
lret
lods
dec
sti
inc
out
ret
scas
mov
mov
mov
testb
and
cmp
add
das
xor
inc
xchg
scas
stc
adc
cmp
jo
ret
cmp
aad
mov
int
jbe
xchg
test
sti
lcall
inc
or
ror
sbb
adc
jno
xor
add
push
rcl
cmp
cmp
mov
jmp
adc
cmc
pop
adc
xchg
outsl
xchg
or
lret
icebp
ficompl
pminsw
or
dec
xlat
cltd
jg
cwtl
movsb
mov
leave
sub
std
dec
push
sub
fdivl
out
mov
out
pop
cmp
aas
push
push
test
sti
decl
jno
sbb
pop
les
fstpl
gs
inc
jb
xor
lods
fnstcw
in
pop
test
aas
insl
or
ljmp
call
push
xchg
and
lcall
rcrl
bound
loopne
mov
xchg
mov
xlat
xor
cwtl
push
stos
inc
stos
ret
mov
test
inc
mov
aaa
mov
mov
jg
js
lcall
shrb
fnsave
xor
dec
push
mov
and
scas
cmp
mov
icebp
cmp
xchg
cwtl
mov
dec
dec
out
jp
or
add
data16
insb
outsl
es
ret
inc
sbb
pop
in
cwtl
or
add
pop
jno
mov
call
inc
adc
rol
dec
pop
cmpsb
cs
jp
cwtl
imul
pop
mov
push
cld
mov
dec
cld
mov
jo
cwtl
mov
outsb
popf
mov
ret
jb
lods
or
push
dec
or
mov
pop
shll
add
mov
xor
cmp
mov
roll
mov
pop
push
sub
push
hlt
xchg
pusha
out
xor
inc
mov
imul
jnp
adc
in
aaa
test
sbb
xor
bswap
cvtps2pd
xchg
add
push
mov
in
jle
es
xchg
push
aam
fwait
and
sub
add
out
adcb
addr16
xor
adc
dec
mov
lcall
sbbl
adc
mov
iret
lods
jno
out
jle
out
add
dec
adc
pop
pop
popa
push
pop
inc
inc
jmp
imul
mov
stos
dec
xchg
mov
in
mov
lea
and
cwtl
fbld
fnstsw
out
sub
inc
pop
push
add
jae
ret
xchg
add
dec
cmc
pushw
mov
inc
nop
hlt
mov
fistl
enter
dec
outsl
cwtl
push
or
cli
or
stos
div
xchg
das
mov
icebp
jo
xchg
mov
sahf
mov
jp
xchg
in
and
loope
cmp
scas
int3
mov
addl
and
pop
jb
leave
mov
enter
push
cltd
int
add
mov
aaa
fidivl
add
push
es
jmp
aad
add
sub
ror
popa
popf
rorl
movsl
mov
mov
cwtl
xchg
xchg
adc
sbb
scas
push
out
sub
push
push
jnp
mov
leave
add
int3
mov
and
testl
xor
ret
xchg
jne
lds
aam
cmpl
pop
push
fst
ret
and
call
imul
mov
psubb
sub
xchg
push
jae
xchg
mov
pop
imul
jne
mov
cs
pop
push
push
out
das
jmp
pop
aad
jno
rol
pop
lock
enter
inc
and
pop
inc
lret
das
lahf
cmpsl
jmp
mov
shll
mov
jle
xor
inc
dec
push
xchg
sub
cmc
fs
add
xchg
sub
out
loope
mov
push
ficompl
cmpsl
cs
or
lock
mov
cmpsl
lret
and
or
cmp
aas
pop
add
dec
mov
mov
mov
cli
imul
push
xor
or
outsb
adc
add
xor
push
fwait
cmpl
test
in
mov
ds
ss
sub
pop
mov
icebp
test
push
sbb
sahf
clc
cwtl
rorb
ror
scas
xchg
adc
cmp
imul
pop
ja
xor
xor
ret
push
cli
addr16
cld
add
xlat
sahf
mov
cld
popf
rcr
cmpsl
fs
ljmp
xchg
pusha
push
lcall
mov
jne
sub
not
imul
loop
add
inc
filds
adc
xchg
inc
push
sbb
jecxz
jle
or
dec
sub
jle
jmp
outsl
mov
in
into
pushf
outsb
sbb
call
sbb
js
movsb
xchg
xchg
hlt
pop
fistpll
xchg
jecxz
push
ret
jge
mov
ja
inc
mov
aaa
push
cmpsl
fstps
sbb
je
aad
xor
adc
push
fcmovbe
clc
mov
sub
enter
adc
shrl
inc
add
mov
jo
jmp
and
xor
in
in
mov
sbb
push
imul
clc
nop
cmpsb
pop
fimull
sahf
ss
add
or
mov
add
lea
push
cltd
stos
dec
push
ret
and
xor
lock
jbe
jnp
pop
test
dec
jbe
inc
daa
cmp
add
sub
andl
push
pushf
adc
inc
cli
cld
call
sub
xchg
pushl
lahf
in
pusha
mov
rol
mov
inc
fisubs
into
int3
test
jge
or
xchg
out
stos
out
dec
test
popa
jg
test
and
dec
js
or
mov
jmp
jnp
insl
mov
xlat
daa
and
fldt
mov
scas
mov
fsubl
cmpsl
lods
es
lods
imul
inc
jmp
daa
movsl
mov
repz
pop
pop
pop
stc
adc
inc
xchg
in
sub
jmp
fidivrl
sub
sbb
pop
sbb
pop
pop
icebp
mov
sbb
jg
mov
shll
test
dec
jl
push
aam
jmp
popf
cmp
inc
dec
je
subb
xchg
push
jmp
and
push
pop
pop
cltd
mov
sbb
fs
mov
into
shll
stos
xor
mov
sbb
mov
test
sub
test
xor
push
pop
jb
stc
aaa
in
imul
xchg
xchg
ja
sub
lods
xor
sub
cmp
dec
pusha
push
fimuls
int3
lock
sahf
loopne
lock
push
or
inc
cwtl
inc
dec
lds
pop
xor
sub
jno
outsl
fcomp
popf
pop
dec
jmp
fs
out
mov
xchg
adc
je
dec
sub
mov
icebp
lahf
iret
lods
fcoms
push
rcll
sahf
mov
jecxz
imul
clc
imulb
mov
fs
fdivl
shll
in
sbbb
add
je
in
loopne
in
and
mov
cwtl
jbe
in
jb
cmp
inc
mov
xchg
inc
sub
mov
jg
test
push
filds
push
adc
adc
mov
stos
mov
pushf
pop
mov
popf
xor
adc
out
or
pop
xchg
jbe
aaa
or
mov
inc
lahf
inc
cmp
test
lahf
sub
test
sti
cmp
cmp
js
sarl
or
mov
add
pop
sub
insl
lods
lds
mull
sub
push
adc
mov
ljmp
add
xlat
adc
xchg
je
sarb
sub
adc
rorl
xchg
adc
mov
loope
xchg
dec
hlt
xchg
sub
mov
dec
mov
lcall
hlt
jnp
inc
hlt
cmpsl
iret
bound
std
int
loop
xchg
inc
ret
lcall
and
bound
xchg
adc
push
arpl
fdecstp
jb
sub
xor
push
cmovbe
mov
in
dec
mov
inc
pop
jbe
pop
shll
xchg
ja
je
cltd
cmc
sbb
loopne
mov
mov
sub
cmc
test
ja
insb
out
adc
in
hlt
sub
call
sbb
lahf
fdivrp
jmp
or
cmc
push
mov
icebp
out
gs
addr16
push
rcll
xchg
test
outsb
xorl
push
inc
xorb
lret
es
roll
xchg
adc
pop
or
jg
sub
add
mov
pop
jno
xchg
movsl
or
jns
lock
aaa
insb
iret
adc
frstor
into
fs
push
pop
mov
or
inc
lods
jno
mov
stos
stc
adc
pop
lea
xor
in
xchg
je
testb
mov
leave
push
mov
mov
lods
shll
mov
mov
inc
shrl
push
push
movl
in
stos
sbb
cmovg
mov
call
mov
aas
jp
cld
and
adc
cmp
sbb
sahf
dec
xchg
sti
and
stc
mov
adc
leave
enter
pop
and
or
jge
dec
push
dec
pop
cli
cmpsl
lret
lret
pop
fnsave
cld
xchg
pop
xor
pusha
mov
jae
adc
cmp
shl
ss
mov
add
add
mov
sbb
and
out
pop
jno
enter
mov
or
ficoml
mov
or
js
cmp
push
mov
lret
jp
jmp
mov
fistps
fildl
ss
iret
cwtl
daa
cwtl
test
inc
insb
add
outsb
xor
push
ret
clc
xchg
repz
loop
pop
jae
jnp
push
je
aaa
leave
in
mov
imul
insb
xchg
cmp
jg
ss
adc
jns
addl
mov
pop
call
jp
push
mov
sbb
loop
xchg
dec
fisubs
scas
adc
cmc
repz
and
pop
add
fsubs
mov
hlt
jp
or
and
mov
data16
into
mov
aaa
or
in
and
mov
sti
ss
imul
in
jne
sti
mov
gs
sub
pop
rcr
push
scas
sarb
icebp
xchg
int3
or
gs
mov
lock
adc
test
push
int
cmpsl
js
add
cmp
add
lods
popf
dec
jmp
out
pop
rorl
mov
stos
or
xchg
leave
fisubl
mov
jb
mul
inc
mov
data16
adc
jle
inc
ljmp
int3
outsl
repnz
mov
outsl
or
mov
mov
aaa
xchg
mull
xchg
fucomp
idivl
data16
add
push
aaa
cmpsl
lock
dec
push
clc
jg
outsl
loope
push
mov
add
sbb
int3
add
lcall
arpl
push
mov
mov
and
jle
lds
fs
or
dec
repnz
in
dec
push
into
sub
adc
push
add
xlat
test
and
clc
mov
pop
fcoml
jmp
shrl
imul
loopne
xchg
pop
andb
push
pop
or
and
js
xchg
lea
jecxz
and
push
dec
test
and
lods
push
pop
pushf
lret
inc
and
fcomps
xchg
loope
es
in
rorl
sub
js
jge
cmp
cwtl
mov
dec
int3
js
adc
sub
pop
loopne
aaa
pop
push
rcll
bound
pusha
fmul
mov
test
pop
xor
jbe
xchg
pop
and
sbb
sbbb
cltd
xor
jecxz
cmp
mov
mov
cmp
repnz
mov
fadd
pop
inc
rol
xor
push
out
cmpsl
or
push
and
aas
pop
sbb
js
jnp
leave
mov
and
fisttpl
push
inc
icebp
stc
inc
test
add
outsb
stos
fmul
mov
adc
into
xlat
sti
lock
jbe
js
push
cli
jmp
xchg
sti
xor
or
inc
xlat
mov
fstpl
ds
in
mov
jb
ss
jecxz
lds
push
scas
sbb
cli
leave
pushf
lods
ja
iret
push
pcmpeqw
loopne
mov
adc
pop
iret
xchg
mov
aaa
movsb
or
or
xchg
push
mov
scas
sbb
std
sbb
inc
jnp
or
xchg
fadds
call
nop
adc
sti
cmpsb
xor
adc
mov
push
dec
cmp
fimuls
add
xchg
enter
not
out
dec
inc
xchg
sti
pop
jo
push
jecxz
das
jle
leave
push
pop
adc
xchg
mov
mov
sti
inc
pop
add
or
jne
mov
lods
lcall
adc
mov
mov
lock
dec
jl
jmp
insl
int
pop
jmp
xlat
or
loopne
sbb
dec
add
popf
or
add
cli
cs
push
inc
inc
pushf
xor
cmpb
xchg
or
out
lahf
push
cli
add
movsl
shlb
jae
push
mov
daa
inc
pop
popf
repz
push
inc
xchg
fs
js
ss
lcall
ljmp
fmuls
movsl
lret
loope
push
aad
test
mov
test
mov
cli
in
ja
out
sbb
dec
fcmovne
vunpckhps
pop
adc
push
repz
dec
roll
lahf
xchg
popa
mov
cmp
push
pop
or
out
sbb
xchg
in
and
test
pop
call
adc
mov
jnp
jl
ja
or
addb
fdivs
inc
ret
push
inc
mov
mov
repnz
mov
int3
cld
stc
ret
sub
cmp
sub
movsb
sbb
mov
sbb
ss
rcll
pop
push
ret
scas
mov
cli
aas
bound
jecxz
es
lock
aas
jae
push
mov
gs
inc
test
lea
stos
fistps
push
nop
stos
push
add
pushf
rcrl
sbb
pop
imul
and
and
nop
jl
enter
orb
shrb
mov
loope
mov
mov
stos
stos
and
ret
pushf
push
push
pusha
mov
lods
push
popl
data16
lahf
mov
add
popa
cli
pop
jno
cli
addr16
xchg
mov
cmpsb
xor
push
dec
dec
mov
xor
cltd
into
inc
pop
or
rcrb
pop
rcrb
fisubl
std
inc
push
out
xlat
stc
mov
jecxz
pop
mov
cmpsl
aam
dec
loop
aaa
push
mov
adc
or
stc
add
or
mov
xchg
add
sub
add
jns
add
out
adc
mov
xchg
sarl
ret
stc
and
int
inc
cmc
dec
adc
test
test
sub
divb
push
cmp
pushf
adc
dec
xorb
push
stos
and
out
out
daa
in
xor
xchg
jge
cltd
or
pop
sub
mov
adc
int
insb
mov
lds
dec
es
xor
inc
inc
shl
andl
adc
mul
aad
sub
add
pop
jmp
frstor
inc
lea
push
and
inc
js
mov
push
fiadds
insl
mov
loopne
hlt
dec
test
jp
cmp
sti
out
dec
stos
sbb
movsl
mov
fadd
cmp
xchg
in
pop
xor
lods
and
push
sub
xchg
push
repnz
and
aas
or
frstor
inc
pop
stc
push
shrl
add
mov
inc
data16
sub
pop
mov
fwait
mov
or
addr16
pop
or
push
and
mov
or
xor
imul
aas
jge
nop
cmpsl
aam
cmp
sahf
hlt
lcall
dec
gs
in
dec
stos
jle
daa
xorb
clc
jge
or
push
andb
pop
jb
sahf
mov
xchg
in
push
int3
pusha
push
cmp
sub
jp
adc
iret
mov
pop
jno
xchg
mov
fadd
inc
mov
inc
fwait
mov
xor
pusha
shll
nop
inc
mov
dec
ja
dec
add
repz
pop
popa
jle
jp
jg
les
jae
jl
xorb
jo
mov
jmp
test
jno
mov
mov
leave
inc
pop
and
in
loope
icebp
inc
arpl
movsl
fidivs
hlt
adc
rcl
mov
cmc
iret
xor
mov
push
lds
loopne
stc
aaa
inc
cmpb
push
sub
imulb
das
cltd
mov
and
test
ds
jmp
dec
outsb
fadds
xor
daa
mov
inc
mov
nop
jl
xchg
adc
mov
add
sub
aam
dec
stos
jp
cmp
in
and
xchg
loop
mov
cmpl
mov
lds
or
aas
jecxz
aas
pop
inc
roll
out
cmc
test
rcll
cmp
add
and
repz
push
add
mov
push
and
jno
imul
pop
lods
add
addb
pop
sbb
mov
cmp
xchg
xor
xchg
pusha
inc
mov
xor
xchg
push
outsl
fs
stos
add
out
sub
xchg
or
lods
jmp
fucomip
xorb
daa
pop
mov
sub
sahf
xchg
test
jl
mov
pop
in
xor
loope
mov
push
popl
inc
cmp
cmpb
mov
bound
aas
mov
mov
xlat
mov
push
ljmp
push
loopne
xor
shl
or
mov
mov
shrb
cltd
mulps
pushl
jge
lods
and
out
clc
mov
out
and
arpl
xchg
xchg
test
movsb
icebp
roll
andl
arpl
xchg
scas
movsb
pop
jnp
mov
mov
mov
jo
jb
popf
or
outsl
mov
leave
cmp
adc
enter
fsubl
leave
inc
rol
mov
cmpsl
dec
rcrb
lcall
movsb
iret
jg
jno
int
notb
xchg
sti
inc
test
dec
and
into
inc
and
jae
jge
jge
mov
adc
out
xchg
std
sub
mov
push
xchg
xchg
cwtl
fmull
jmp
out
ret
mov
mov
jnp
dec
sub
sub
dec
fstpl
out
push
pop
or
enter
add
jle
mov
cld
cmc
adc
inc
pop
jb
les
ret
and
and
sbb
fwait
sbb
pop
inc
orb
ret
jns
jle
cmc
jae
push
or
push
test
and
sub
adc
and
and
pop
rorb
jb
push
cmp
lea
addr16
sbb
sbb
insb
or
mov
aaa
sub
lds
fbstp
outsl
aad
or
push
rcr
and
addr16
ljmp
jmp
sbb
xor
jne
sbb
and
push
xor
and
mov
int
insl
xchg
je
jne
lods
mov
lcall
sub
call
inc
xchg
div
dec
jno
cmc
or
dec
bound
daa
std
aas
sub
in
test
jo
mov
in
lret
insl
sarl
xchg
imul
lea
pushl
in
scas
sbb
popf
jno
fldenv
push
in
popa
test
cmp
xchg
and
xor
mov
lret
push
adc
jnp
outsl
stos
lret
je
int3
cmp
inc
fisttpl
sbb
mov
stos
and
mov
and
loopne
push
push
in
fdivs
dec
stc
jno
decb
pop
inc
cwtl
push
bound
mov
xchg
mov
js
ret
int
add
cld
popl
sbb
gs
push
adc
push
xchg
mull
je
push
push
or
mov
aad
cmpsw
mov
mov
xchg
cwtl
outsl
cmp
pop
or
sahf
xchg
fdiv
rorb
fadds
insb
out
push
or
loopne
inc
push
enter
mov
xchg
loope
inc
inc
cs
lods
fisubs
sub
pop
inc
and
subb
push
sti
sbb
lcall
popa
sti
test
fwait
xor
sub
fwait
xchg
adc
imul
out
add
ljmp
mov
dec
mov
test
cmpsl
loop
jecxz
sbb
mov
xchg
push
or
push
xor
and
mov
xchg
mov
testl
or
repz
and
mov
popa
mov
or
mov
jae
in
cli
mov
jbe
fdivrs
popa
and
std
push
push
repnz
jmp
jecxz
mov
jne
adc
push
es
std
in
dec
sbb
mov
mov
dec
pop
sbb
out
xor
fsubl
sub
test
push
lock
inc
cld
fnstsw
add
les
stos
fs
push
cmp
fucomi
inc
pop
or
mov
addr16
insb
mov
rclb
add
lret
pop
and
cmp
dec
aaa
xor
fucomi
add
sub
push
out
fsubl
fldcw
test
icebp
adc
cmp
je
pop
test
cmp
xchg
adc
das
fwait
call
lret
xchg
aad
out
test
mov
mov
fldt
repz
mov
fadd
fwait
jae
jno
push
jge
dec
sbb
xchg
sub
inc
je
andb
add
es
movsl
scas
push
xor
or
add
fmuls
xchg
out
pop
pop
and
mov
jns
lret
out
arpl
dec
mov
scas
add
inc
fwait
xor
insb
js
mov
mov
stos
test
mov
sbb
nop
jge
jmp
xchg
push
mov
in
sbb
xor
jge
mov
iret
outsl
xlat
scas
daa
push
mov
mov
mov
adc
adc
cmp
xchg
movsb
stos
es
test
rcrb
cmpsb
movlps
pop
add
mov
popf
mov
rcll
out
insb
roll
mov
adcb
lods
scas
clc
dec
repnz
inc
pop
roll
sbb
repz
xchg
repnz
xchg
add
shll
xchg
push
or
pop
mov
scas
or
dec
push
adc
jle
jge
jl
ljmp
mov
nop
push
add
xor
jmp
movsb
push
lret
xor
sbb
xchg
dec
pop
ret
add
push
stc
xchg
out
jl
js
mov
int
test
dec
jecxz
dec
sub
sub
cmp
jnp
push
mov
sub
jns
roll
test
jno
fimuls
ror
ss
add
cmp
cmpsl
dec
clc
lret
repz
scas
mov
xor
jmp
cmpsb
imul
and
pushf
sub
jno
mov
out
lock
pop
test
flds
cwtl
outsb
mov
enter
lock
mov
mov
int3
add
and
arpl
sub
or
stc
push
jo
mov
mov
mov
std
and
mov
add
push
scas
rol
stos
or
mov
adc
xchg
jmp
std
cmp
sbb
enter
cld
test
in
scas
mov
roll
push
in
xchg
adc
push
inc
push
call
dec
notl
sub
fstpt
int3
iret
sub
cmp
enter
push
test
xchg
and
adc
push
dec
rcr
imul
mov
xor
dec
test
ja
adc
mov
and
cld
mov
fcmove
repnz
stos
or
sub
sub
loopne
sbb
sbb
jne
es
mov
pop
int
jle
fwait
ja
sbb
xchg
mov
mov
sbb
cmpsb
fwait
xchg
mov
leave
fmuls
ss
dec
stc
adc
hlt
xchg
scas
xlat
xor
push
mov
aam
scas
cmp
xor
adc
fcomps
es
rcrl
icebp
sub
fldenv
stos
sub
or
das
or
sbb
xchg
cmp
mov
ret
cltd
push
stc
cmc
in
xchg
xchg
push
test
enterw
enter
gs
add
and
in
in
sbb
mov
dec
and
sub
xor
pop
in
enter
arpl
jge
inc
outsb
add
mov
and
mov
scas
jg
jb
push
icebp
xor
mov
dec
loopne
sub
js
cmp
push
stos
push
jo
iret
jl
jecxz
push
cmp
jge
xor
frstor
fiadds
mov
in
dec
lret
shl
test
test
test
push
jbe
mov
es
add
les
sar
add
xor
ss
jno
insb
aam
and
loop
sbb
jecxz
add
stc
scas
xor
les
addr16
mov
cmpsb
mov
addr16
dec
test
xor
scas
jb
xor
mov
iret
or
imul
mov
mov
negl
xchg
test
cmpsl
into
lea
push
cmp
dec
es
imul
mov
rcrb
bound
cmc
pop
mov
push
inc
test
mov
inc
cmpsl
mov
cmp
loop
mov
lods
daa
ror
stc
cmp
jg
sbb
inc
idiv
pusha
mov
xchg
dec
jmp
push
int3
sub
and
lods
movsl
data16
adc
jle
adc
insb
push
stc
sbb
xchg
inc
aad
icebp
subb
add
bswap
int3
test
jnp
pop
xchg
dec
mov
mov
dec
xchg
jmp
xor
pop
cmc
xchg
pusha
and
push
into
sti
or
lahf
push
rolb
jp
add
adc
dec
neg
repz
popa
dec
adc
fstps
ds
insb
xor
cld
sub
mov
into
xchg
inc
cmp
inc
dec
sub
xchg
int3
xchg
inc
dec
fiadds
imulb
dec
or
jnp
xchg
jge
xchg
cmc
rorl
pop
xor
or
sub
xchg
xchg
fstpt
cltd
int3
push
add
mov
push
and
nop
cmpsl
pop
daa
insl
cmpsb
mov
cmpsb
fsubrl
dec
fldt
or
loop
gs
push
ret
lds
scas
or
cmp
stc
imul
jge
insl
fidivl
pop
push
push
jmp
xchg
stc
enter
dec
or
movsb
jae
adcl
xor
push
hlt
or
scas
add
adc
pop
mov
scas
test
repnz
cld
fldcw
cmc
jl
sbb
dec
dec
xchg
jmp
jne
dec
sbbl
inc
rcll
or
mov
idivb
sti
jle
dec
xchg
movsl
stos
test
lret
fadds
in
cs
jno
adc
in
cmp
scas
test
shlb
fistl
sbb
bound
cmpsb
pop
sbb
sbb
daa
mov
pop
cmp
xchg
loope
lret
jg
insb
pop
std
sbbb
out
negl
ja
xchg
loop
jbe
sub
popa
mov
adc
movsl
lahf
stos
and
icebp
mov
and
xlat
divb
in
adc
cmpsl
incl
dec
fwait
dec
xchg
in
ja
jmp
mov
cmp
nop
push
dec
inc
insb
das
movl
pop
mov
dec
fidivrl
cmc
pop
fcoms
js
fucom
notl
stos
and
jns
adc
loop
repz
stos
in
enter
pop
jbe
xchg
or
popl
dec
test
and
dec
xchg
push
leave
inc
fwait
jbe
adcb
pop
xchg
sti
div
or
pop
dec
in
pop
pop
stc
mov
cs
cmp
mov
pop
icebp
rorb
ret
fcomi
push
aad
mov
mov
lock
xchg
scas
xor
sub
mov
cmp
incl
cmp
pushf
hlt
outsb
stos
outsb
repz
or
pop
push
scas
inc
push
loopne
ds
cmc
jmp
pop
ljmp
lds
add
adc
cli
jo
pushf
inc
into
cmp
sbb
sub
sbb
fwait
push
repnz
jo
loop
cs
sub
xor
cltd
sarl
push
movsb
imul
xchg
pop
fists
sbb
push
xchg
xor
fwait
cmpsl
push
out
cmp
loopne
leave
dec
enter
stc
std
ljmp
mov
mov
xor
repz
mov
mov
sub
jnp
pop
je
adc
addr16
sbb
or
mov
jl
cmpsl
pop
cli
jns
mov
les
adcl
push
ficoms
sti
dec
repz
dec
ret
mov
mov
mov
add
jae
jl
mov
xchg
add
inc
and
cvtps2pi
cmc
push
or
adc
xchg
and
jg
ds
jmp
and
mov
xchg
icebp
mov
xlat
cwtl
inc
add
div
iret
ss
push
bound
lret
imul
inc
or
pop
test
out
out
add
cmpsb
dec
cmp
cld
sbb
out
stc
cld
popf
out
or
jl
jl
les
mov
push
je
push
jb
dec
add
cmp
nop
lret
lcall
inc
pop
jne
out
pop
jmp
fsubrs
loop
movsb
push
push
mov
neg
mov
imul
pop
dec
gs
ljmp
and
push
mov
fistl
or
sub
fucomi
test
xchg
jbe
pop
cli
cltd
repnz
mov
push
dec
jle
adc
cltd
pop
pop
mov
lret
call
and
nop
call
xor
mov
fsts
jmp
sub
insl
sbb
cmp
movsb
dec
aaa
daa
out
lods
std
sbb
mov
mov
pop
add
pop
mov
and
sub
sbb
mov
mov
cmp
and
inc
cmpsb
jne
out
jne
pop
lods
xlat
and
repnz
int3
fwait
dec
xchg
mov
cwtl
sti
test
push
adc
movsb
push
imul
cmp
fstpt
cmp
dec
inc
xchg
dec
dec
iret
gs
pushf
shlb
push
nop
xchg
xchg
out
xor
mov
lcall
adc
sbb
int
loopne
aad
push
hlt
rcll
sarl
dec
mov
jmp
and
xchg
cmpsl
xor
mov
lahf
stos
inc
mov
outsb
cmp
lahf
mov
lahf
push
cmp
or
test
push
addb
fnstcw
pop
cmpsb
mov
add
jmp
orl
or
and
insb
jno
fstl
fwait
outsl
fsubs
lock
adcb
xchg
lcall
movsb
or
pusha
pop
imul
xlat
pop
lcall
jle
imul
cmpsl
imull
and
mov
in
cmp
insl
xchg
adc
adc
dec
inc
call
jg
xor
movsb
and
sbb
jp
jae
xchg
mov
popa
in
sar
adc
xchg
sub
mov
dec
pop
hlt
sahf
xlat
arpl
lods
lahf
scas
cmp
mov
push
iret
cmp
mov
fimuls
out
sbb
xchg
nop
xor
bound
cmp
fcoml
inc
sarb
in
lcall
pop
jmp
pushl
dec
incl
xor
les
insb
xor
lock
push
cmp
mov
cmp
mov
data16
decb
test
pushl
cltd
rcrb
repz
xchg
cmc
add
mov
pop
iret
popf
pop
mov
sbb
int3
out
add
hlt
add
in
es
test
sub
mov
movsl
imul
or
fidivs
xor
mov
sar
jo
lret
pop
outsb
sbb
jns
out
sbb
jmp
push
dec
xchg
call
mov
xchg
pop
mov
fcmovb
mov
add
mov
mov
bound
adc
pop
jg
jnp
inc
jle
testb
shr
loope
out
in
mov
dec
rorl
pop
stc
or
sbb
das
out
int
mov
js
lret
xor
jmp
ret
adc
jp
loopne,pt
cmp
das
jl
jp
aas
add
rclb
cli
sbb
call
imul
or
daa
inc
dec
sbbl
adcb
xchg
xor
jle
repnz
jmp
nop
xchg
xchg
dec
je
loop
or
xor
mov
sbbb
xchg
xchg
addl
test
mov
pop
pop
sub
push
pminsw
leave
test
mov
lahf
call
add
mov
out
fcmovu
imul
cmp
sbb
js
outsb
jnp
ret
cmp
es
xor
fs
stos
repnz
lret
out
ret
jl
leave
outsb
cwtl
push
push
js
popf
and
fcom
cmp
cs
jno
add
cmp
in
pop
mov
mov
lret
pop
jp
repnz
aas
jg
pop
xchg
pop
or
pmuludq
mov
xchg
or
test
mov
mov
xorl
scas
ret
out
popf
js
addr16
sbb
inc
hlt
ljmp
jbe
cmpsl
or
inc
jmp
dec
ret
push
not
xchg
rorb
into
mov
pop
adc
xchg
dec
adc
mov
test
pop
shrb
and
movsl
fidivl
aas
outsl
shlb
cli
lods
adcl
mov
cs
ret
mov
pop
mov
dec
xor
repz
fisubrl
xchg
xor
sbb
inc
fwait
addl
ss
add
push
stos
sbb
mov
jbe
outsb
and
ljmp
aaa
das
cmp
inc
add
add
pop
xchg
mov
loope
push
dec
sbb
jmp
ljmp
movsb
lahf
xor
add
mov
icebp
push
adc
call
ret
jne
cwtl
dec
ss
fisttps
subb
add
sub
inc
pusha
sub
je
pusha
jnp
add
js
imulb
xchg
cmp
cltd
add
adc
int
adc
cs
add
pop
mov
in
insl
push
int3
mov
dec
mov
jp
xchg
inc
iret
test
fwait
or
adcl
lods
popl
pop
cld
dec
xchg
pop
push
cmc
aam
lret
add
mov
dec
inc
fwait
lret
loop
mov
add
mov
or
and
arpl
jl
cltd
int
scas
fldl
hlt
and
lret
div
mov
inc
cwtl
xchg
or
pop
mov
dec
and
push
insl
repz
mov
cs
or
stos
add
nop
push
push
push
xchg
fidivrl
cmpsb
std
out
popa
add
mov
mov
fistl
test
imul
je
test
mov
jp
fxtract
ljmp
andb
out
dec
adc
mov
lock
push
push
inc
xchg
subl
aam
pop
loop
popa
ljmp
mov
jmp
imul
sub
adc
xor
jmp
jmp
iret
andl
jns
jge
add
cmp
jge
roll
mov
dec
push
inc
sub
lea
test
and
addr16
mov
imul
scas
xor
cmpsb
cld
shll
into
arpl
fistps
lahf
cmp
inc
outsb
test
gs
arpl
mov
adcl
loop
adc
push
ljmp
imul
fisubl
pop
xchg
xchg
aam
shr
or
les
pop
lahf
fidivrl
cld
add
cwtl
js
add
movl
hlt
subb
dec
lds
xchg
sti
add
clc
les
fldenv
ljmp
xchg
pminsw
inc
fisubrs
sbb
sub
push
lret
test
mov
mov
popa
jl
mov
cmp
negl
stos
sahf
inc
sub
add
cwtl
or
jp
int3
push
hlt
push
mov
rcl
lcall
lret
dec
sub
sub
das
lock
sub
cmp
push
xor
sbb
sbb
int3
mov
push
sarl
das
in
xchg
test
aad
into
and
cmp
pop
add
sarb
outsl
movsl
lock
mov
inc
mov
je
xchg
or
cli
sub
lea
in
insl
out
jns
gs
hlt
lods
mov
jb
dec
int3
lods
mov
cmp
xchg
inc
sti
shll
or
lock
dec
std
mov
add
ljmp
fwait
pusha
cmp
or
ja
lret
sar
daa
out
and
ret
cmc
scas
ret
aas
imul
test
hlt
je
jmp
fisttpl
ljmp
movntps
mov
notl
adc
shrb
mov
in
hlt
xor
shr
jne
mov
mov
rorl
mov
cmp
xchg
dec
jmp
xor
daa
repz
inc
aad
xchg
iret
out
and
inc
jnp
cltd
fiadds
inc
mov
test
stos
push
push
pusha
fs
xchg
notl
ficompl
push
in
cli
out
and
sub
push
scas
std
mov
jl
adc
add
add
outsl
pop
sbb
pop
imul
sub
or
mov
js
push
jbe
push
lahf
and
add
xchg
test
mov
add
imul
xchg
mov
sbb
push
imul
mov
andb
mov
es
loop
push
or
js
mov
mov
insb
mov
add
aad
inc
fdivrs
xor
stc
andl
and
and
outsl
jle
cmp
scas
loop
and
cmp
mov
sbb
inc
cmc
push
inc
sub
dec
cmp
mov
xor
xchg
fstps
iret
sbb
mov
mov
sbb
sub
or
inc
clc
lock
stos
or
test
mov
icebp
rol
xor
sti
push
test
insb
pusha
fcoml
aad
mov
loope
cltd
hlt
sbb
fdivrs
es
repnz
lahf
aad
or
fistl
or
jbe
mov
push
aaa
push
and
cld
inc
xchg
shlb
xor
test
inc
xchg
mov
jge
fnstsw
das
lcall
loop
mov
or
imul
int
dec
stos
ds
add
xchg
xchg
rorl
int
mov
xor
push
sbb
pop
cs
push
test
cmpsb
mov
jg
mov
push
xchg
enter
jbe
test
and
mov
out
mov
enter
lea
loopne
les
push
push
arpl
andl
mov
mov
pop
xchg
mov
jmp
addr16
cli
dec
xchg
popa
rclb
jno
stos
jnp
push
aaa
cmp
xchg
test
out
xchg
or
cmp
mov
std
loopne
or
jmp
xor
xor
pushf
fdecstp
mov
mov
sbb
sbb
aaa
mov
mov
jae
dec
and
mov
arpl
les
jae
pop
inc
sbb
mov
xor
inc
subb
ljmp
lret
dec
dec
out
cltd
loope
jmp
scas
push
cwtl
aaa
shrl
jmp
test
or
imul
dec
jo
xchg
sbb
and
inc
orb
dec
repz
pop
in
idivb
fnsave
pop
sbb
in
mov
inc
imul
pop
fstl
les
xchg
mov
adc
dec
xrstors
sbb
mov
stos
push
add
add
gs
dec
call
inc
mov
push
sahf
decb
jg
mov
sti
int
leave
scas
or
sub
fisubs
adc
xor
test
mov
out
cli
pop
out
cmp
add
sub
cli
in
ret
inc
inc
sbb
testl
pop
stc
xchg
imulb
add
pop
mov
mov
push
xchg
les
daa
icebp
sub
mov
sbb
pop
inc
pushl
ret
xchg
cli
jg
hlt
or
out
adc
jge
sbb
xor
test
pop
sub
inc
push
mov
fiadds
sub
mov
rcrb
aad
push
jnp
lds
mov
push
cli
test
daa
mov
add
sub
mov
push
add
xorl
adc
push
idivb
fsubp
lods
push
push
outsl
jns
das
jb
or
cld
xor
out
int3
mov
cmc
xor
stc
fcmovu
xchg
lea
add
sbb
inc
jge
or
adc
xchg
mov
std
scas
iret
inc
out
xor
adc
bt
sbb
clc
out
fistpll
lret
pushf
pop
hlt
and
std
insb
mov
inc
xchg
shl
push
pusha
data16
cmc
pop
lods
jo
testl
rorb
push
or
and
in
adc
lret
out
test
sbb
repz
dec
nop
outsb
push
int
sub
popa
lods
fstpt
in
shll
out
lock
push
daa
lds
ja
daa
pop
ds
loop
cltd
jns
xchg
push
push
sbb
into
fs
cmpsl
xchg
mov
dec
ja
clc
pop
or
mov
push
sbb
inc
pop
sbb
xchg
test
dec
dec
cmp
push
pop
push
adc
daa
mov
push
movsl
xchg
xchg
push
out
xor
jne
cmp
pop
pop
enter
addr16
add
int
rcrb
bound
mov
sti
sub
xchg
push
and
outsl
add
sbb
push
jmp
test
outsb
cmp
xor
pushf
lods
shrl
call
lret
or
pop
popf
xchg
das
shlb
dec
loope
mov
pop
ficompl
mov
test
mov
stos
cltd
lahf
mov
bsr
je
in
add
and
inc
pop
mov
imul
adc
jecxz
sbb
cmp
stos
pop
ret
sahf
icebp
call
jp
jg
add
add
popf
cltd
fucomi
sbb
lods
add
jmp
loope
ret
push
push
into
cmp
sets
stos
jp
inc
add
push
mov
push
mov
mov
mov
sub
adc
fcmovbe
mov
dec
outsb
fidivrl
dec
cmc
gs
jmp
xchg
sub
cmp
dec
cmpsl
sub
enter
inc
push
inc
sbb
call
inc
imul
mov
jno
inc
aam
push
sbb
shr
lret
or
insb
repnz
jae
adc
pop
mov
scas
jns
roll
scas
adcl
mov
cwtl
inc
sbb
dec
push
or
ret
dec
mov
fs
mov
outsb
add
xor
push
jnp
popf
nop
inc
cli
or
jp
xchg
inc
sub
mov
sbb
insl
daa
xchg
cmpsl
mov
pop
sbb
gs
iret
xchg
test
popa
and
movsl
dec
aas
in
fcoml
sti
sbb
loop
inc
fildll
gs
mov
insb
sbb
movsl
or
popf
xchg
iret
adc
jl
rcll
enter
push
adc
das
dec
mov
in
ljmp
outsb
jge
add
ret
mov
pop
repnz
jnp
mov
das
sbb
mov
jmp
push
imul
mov
push
and
popa
push
push
pop
xor
fildl
mov
and
rorb
cwtl
lahf
out
jmp
push
test
xchg
cmpsl
inc
shlb
in
xchg
popf
add
sub
dec
adc
push
mov
inc
out
daa
imul
xlat
stos
or
sbb
inc
pop
cmp
mov
xchg
jge
mov
lds
mov
call
mov
enter
in
bound
mov
sub
test
ss
subb
and
jns
jmp
arpl
mov
push
lcall
iret
out
jg
loopne
out
fcomps
and
dec
sbb
stos
mov
leave
sub
mov
call
lds
mov
or
iret
pop
push
cmp
addr16
jp
xor
mov
jle
add
mov
out
popf
ja
dec
loop
jmp
sahf
push
jb
test
adc
aam
int
sarb
dec
popa
inc
js
inc
pop
inc
push
mov
add
sub
fmuls
test
pop
pop
add
add
inc
leave
mov
in
dec
sbb
cmp
pause
gs
in
mov
sub
jmp
ja
addr16
mov
add
pop
dec
add
cwtl
popf
add
dec
stos
dec
decl
mov
mov
cli
dec
hlt
je
scas
push
inc
sub
xchg
mov
cmp
fidivrs
popa
or
loopne
js
pop
mov
loope
push
xchg
lea
cmpsb
jne
cs
pop
mov
push
mov
icebp
mov
cmp
test
push
aad
lcall
sub
cmp
dec
push
lods
hlt
jp
cwtl
xor
es
adc
loopne
pop
scas
xlat
call
test
dec
loop
jp
mov
xchg
out
inc
xchg
jp
add
fsubl
clc
mov
xor
into
aas
test
decb
call
and
xchg
fildl
repnz
popf
mov
add
cmpsl
mov
adc
mov
pop
mov
mov
loopne
cs
je
adc
push
test
or
in
fstl
popl
add
ret
sub
add
out
jl
lret
pop
dec
andl
std
loope
stos
pop
in
test
or
test
pop
inc
idiv
call
arpl
les
lahf
cmp
adc
sbb
dec
jg
mov
lret
push
in
push
imull
xor
xor
in
std
and
cmp
mov
or
or
add
lods
daa
les
mov
lret
mov
aas
or
ficompl
adc
sbb
mov
pushf
dec
push
push
lods
cltd
hlt
pop
movsb
mov
out
add
xor
jmp
cmc
clc
lret
adc
mov
inc
repnz
sahf
adc
shll
xchg
ret
xchg
inc
mov
ret
stos
mov
xchg
in
inc
ret
mov
fs
jnp
les
mov
xor
pop
jo
aam
cmp
xchg
jg
mov
dec
push
in
ret
cmp
jmp
add
dec
mov
xor
int3
jne
or
outsl
or
pop
lret
cmp
push
jl
jle
dec
mov
testl
out
pop
push
pop
cmp
mov
lock
mov
in
lds
test
pop
mov
jg
loop
mov
push
ja
shlb
ficoms
mov
push
rolb
sub
cmpb
into
add
and
gs
cmpb
lret
mov
out
cwtl
shll
mov
jmp
mov
test
icebp
mov
out
dec
dec
mov
add
loopne
push
dec
mov
fstpl
icebp
jbe
daa
and
pop
loopne
or
stc
orb
adcb
aad
dec
mov
repz
sub
dec
cmp
pop
bound
jo
outsl
popf
pop
and
mov
test
test
push
pop
add
mov
jns
inc
xchg
pushf
ss
cmp
and
xchg
push
or
and
or
dec
nop
cmp
pop
out
sub
xchg
push
stos
cltd
dec
aad
push
jmp
in
imul
mov
add
fdivl
mov
pop
xorb
shrb
push
pop
inc
xor
hlt
jne
xchg
adc
cmp
mov
cmp
aaa
adc
shrb
insb
or
xor
divl
scas
repz
push
daa
xor
dec
psrlw
in
mov
cmp
int3
or
push
stc
sub
lret
and
cmpsb
jp
jmp
cwtl
idivb
jne
sub
loope
fldl
push
jecxz
out
push
sbb
mov
xlat
cmp
pop
dec
shrb
adc
sti
inc
icebp
stc
mov
popf
jge
imul
push
fistpll
pop
cs
loopne
inc
push
repnz
insl
xor
mov
adc
pop
stos
lods
int
int3
and
add
push
mov
je
push
scas
jno
pop
or
mov
arpl
lar
jl
and
pushf
sbbb
lods
mov
pop
jns
jae
mov
add
and
scas
jae
push
or
adc
sbb
lods
lods
shlb
and
bound
add
outsb
stos
mov
jo
cmp
imul
addr16
add
sbb
push
popa
outsb
mov
pop
sub
gs
insl
mulb
in
dec
outsl
or
aas
aas
add
jg
insb
loop
pusha
push
sbb
sub
scas
call
and
imul
lcall
jno
repnz
fisubrl
shrb
xor
adc
inc
sub
mov
mov
ret
cltd
in
aad
ds
jl
add
fcomps
aas
cmc
mov
jmp
ja
sub
inc
mov
ss
lahf
outsb
jb
push
mov
dec
add
mov
jnp
sub
pop
sub
dec
sub
out
hlt
mov
xor
add
cmp
hlt
inc
add
fisubrs
mov
cmp
mov
mov
xchg
mov
mull
ljmp
sub
and
mov
adc
rcrb
leave
and
shl
add
dec
or
rorb
xor
lcall
or
push
hlt
fdivrl
fsubrl
mov
jp
loope
das
stos
mov
js
addr16
push
ficoms
rclb
nop
jge
and
das
jecxz
in
imul
push
subb
int
fistpl
mov
xchg
ror
shll
push
aam
cmp
adc
fistps
adc
push
inc
mov
aam
outsb
mov
mov
pop
jns
dec
gs
or
mov
imul
mov
pusha
cmp
push
mov
mov
jb
repz
lods
pusha
rcll
aaa
outsb
call
pop
cld
sbb
fldl
or
inc
or
xor
adc
cmp
jl
mov
inc
mov
imul
aad
pop
dec
cmp
in
sarl
int
and
cld
mov
lahf
pinsrw
inc
mov
cmpsl
cmpsl
stos
jecxz
loop
gs
ret
push
mov
es
popl
lea
dec
and
xor
ss
lea
shrl
js
je
jecxz
aad
jns
int
and
push
ja
pusha
daa
jp
mov
repz
in
in
pop
fistpl
sbb
ret
pop
test
or
pushf
lcall
movsl
dec
xor
rcrl
adc
aaa
movsl
addr16
jp
sub
sub
dec
movsb
xchg
or
inc
jl
and
int3
das
xor
fnstenv
lea
mov
sbb
mov
jb
push
lods
or
add
popf
add
in
xchg
xor
fwait
rcrl
pop
outsl
push
or
jb
sbb
inc
and
lods
pushl
in
add
sbb
and
mov
bnd
psubsb
lock
mov
jb
stc
dec
mov
gs
push
ds
lock
mov
xchg
mov
rcl
int3
push
movsb
add
xchg
push
adc
jp
jns
sarb
and
lret
sbb
inc
mov
push
outsl
pusha
int3
push
ds
clc
stos
daa
repnz
jmp
nop
cmp
call
jp
inc
shlb
pop
mov
stos
cmpsb
inc
in
sub
int3
int
jp
mov
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
jne
pop
addb
nop
dec
or
imul
shlb
dec
sub
mov
bound
sbb
aas
ljmp
and
xchg
lcall
pop
pop
cmc
xor
movsl
adc
bound
pop
adc
sub
aas
or
mov
mov
int3
adc
cltd
jo
scas
xor
mov
or
pop
aam
sahf
fsts
cmpsb
mov
dec
repz
adc
inc
cmp
pop
cmp
lds
mov
enter
pop
pop
adc
pop
scas
mov
cs
aad
xchg
cmp
add
shlb
rcrl
pop
dec
lea
jno
push
flds
push
jne
repnz
je
jb
aad
aam
fsubr
les
lret
sub
mov
sub
aas
xlat
in
sbb
nop
out
push
mov
push
lods
mov
popf
push
loopne
add
jle
push
insb
int
jo
xor
mov
mov
add
enter
sahf
leave
inc
imul
pop
push
outsb
shll
fstl
mov
xchg
pop
lea
shll
mov
out
and
lods
nop
leave
push
cld
jmp
pop
pop
insb
jg
call
popf
movsl
out
mov
add
xor
leave
insl
or
subl
inc
lret
sub
sbb
in
or
add
push
push
ss
out
filds
daa
mov
jl
and
aaa
or
imul
jg
pop
mov
sbb
js
jno
inc
call
es
je
xchg
xor
adc
ret
pop
and
pop
cwtl
stc
sub
jae
lret
nop
clc
jmp
popf
outsb
test
dec
stos
aaa
arpl
pop
decb
test
clc
sbb
dec
xchg
cmpsb
and
orps
aaa
pop
cmp
fwait
sub
cmp
fmuls
aaa
xchg
inc
divb
neg
pop
sbb
adc
mov
add
cmp
adc
mov
xchg
js
test
or
jge
test
jmp
int
jp
pop
lcall
mov
mov
xchg
aad
mov
lcall
pusha
adc
nop
loopne
inc
and
push
iret
or
push
addr16
fsubp
lret
cmp
dec
mov
in
data16
dec
jae
pop
jmp
jl
inc
in
sbbb
dec
out
ret
shrb
leave
dec
movsl
xchg
scas
inc
movsl
push
sbb
sub
mov
mov
or
aam
or
sti
andl
aad
xor
pop
daa
xor
add
mov
nop
xor
dec
inc
push
lret
cmp
data16
push
sbb
clc
jbe
gs
filds
fcoms
dec
adc
mov
push
das
inc
mov
jno
lock
cltd
or
aaa
or
testb
ret
pop
sub
mov
into
in
orl
adc
clc
inc
hlt
out
cmp
rclb
int
in
adc
and
arpl
in
jnp
inc
xchg
inc
push
or
rcrl
out
push
sahf
scas
xchg
push
popf
repnz
dec
and
lock
insl
and
fs
add
xor
cmp
jg
std
or
jbe
mov
cwtl
push
cs
mov
add
mov
scas
adc
rcrb
inc
in
icebp
dec
das
mov
rorl
mov
movsb
pop
out
in
mov
int
inc
push
pop
mov
out
test
adc
pop
and
idivb
out
loopne
inc
clc
test
mov
inc
das
mov
cli
sub
mov
mov
aad
or
lea
pop
mov
pushf
inc
inc
cmp
push
sub
pushf
or
sub
insb
cmp
cltd
imul
rcrb
mov
fs
dec
adc
pushf
or
stos
xor
sahf
sub
ret
ret
mov
dec
pop
or
xchg
ds
pop
and
loop
jb
mov
nop
sbb
imul
cmc
push
and
mov
pusha
push
loope
jo
xorb
mov
insl
mov
pop
in
in
mov
rcrl
lret
cmp
mov
outsb
jecxz
cmp
dec
jno
cmpsl
xor
jns
jmp
or
scas
es
sbb
mov
xchg
cmp
mov
push
lcall
pop
inc
ror
push
xchg
jb,pn
pop
mov
push
jecxz
sbb
test
or
popf
jae
push
or
data16
lret
out
lcall
dec
inc
push
push
push
ret
pop
lret
jge
pop
sbb
dec
mov
jp
dec
mov
xchg
aam
ss
js
es
push
or
test
lods
cld
xchg
in
into
movsl
jg
pop
int3
shll
test
dec
sti
mov
pusha
pmulhw
sbb
or
hlt
fs
cmp
scas
xchg
lods
inc
divb
ja
js
mov
jae
or
mov
loopne
jle
xchg
leave
xor
sti
pop
call
dec
mov
int
and
mov
sti
sub
cmp
sbbl
or
cmp
pop
push
pop
je
insl
inc
repz
lahf
mov
loopne
ss
daa
arpl
je
pusha
call
sub
ficomps
inc
dec
sub
fidivl
mov
jae
or
jns
pop
pop
lock
inc
rorb
ret
mov
int
je
inc
movsl
cli
je
mov
insb
xor
cltd
and
pushf
add
enter
scas
repz
sahf
add
add
push
inc
ret
xchg
out
je
jae
aad
into
jg
xor
addr16
jecxz
inc
stos
rcrb
adc
jmp
out
ljmp
mov
pop
insb
dec
aas
mov
push
int
or
add
out
push
out
adc
push
xchg
jle
sub
pop
mov
mov
push
popl
or
inc
decl
test
in
mov
jmp
rcr
daa
or
movl
test
mov
and
sbb
daa
xchg
cmp
cmp
ljmp
cltd
jge
sub
xchg
inc
push
xor
adc
sub
pop
mov
dec
out
lret
out
clc
add
adc
adc
mov
daa
mov
in
sub
add
lahf
cmp
sub
into
cmp
test
sbb
outsb
jecxz
repnz
xchg
es
sub
loope
xor
push
data16
roll
sub
adc
fildll
sbb
gs
jnp
popf
test
pop
xor
insl
add
outsl
cld
in
or
cmp
add
jecxz
pop
fwait
and
arpl
adc
arpl
stos
imul
loop
fists
add
test
fwait
adc
into
aas
mov
scas
mov
inc
pop
or
outsl
fcompl
les
xlat
fcmovnbe
pusha
movsl
ljmp
in
int3
push
mov
mov
shr
and
mov
push
mov
repz
addr16
inc
out
inc
jbe
je
iret
xchg
or
xchg
jns
inc
dec
cli
rcrb
pop
and
pop
idivb
popa
dec
mov
sbb
sub
je
loop
inc
out
jle
xchg
aad
sbb
and
xchg
adc
fcomp
mov
lods
cli
repnz
mov
jl
or
mov
js
pop
and
xor
push
push
stc
mov
in
cli
loopne
imul
pop
adc
mov
and
inc
add
int3
mov
pusha
cmp
icebp
mov
inc
insl
xchg
lock
inc
adc
das
adc
dec
sbb
rcrl
sub
clc
mov
jo
push
outsl
inc
jo
xor
sub
lea
sub
sub
xchg
ljmp
cmc
lahf
ret
and
inc
and
lcall
fldt
jae
outsl
mov
xor
or
fldenv
and
xchg
push
add
ljmp
add
bound
addr16
in
push
aaa
inc
mov
enter
in
adc
adc
out
dec
fildl
sahf
pop
xchg
cmp
fidivl
pop
aam
mov
mov
xchg
ffreep
stos
push
lea
xchg
cmp
bound
ja
push
lcall
mov
ss
mov
les
rcl
xor
sub
sbb
pushf
push
mov
jne
or
jae
pop
xchg
icebp
loop
cwtl
scas
dec
mov
and
push
add
push
cmp
or
mov
and
inc
hlt
or
cmpsl
lcall
mov
inc
frstor
fistpl
push
add
mov
and
fsqrt
sub
push
mov
add
fisubl
mov
xor
lret
and
jmp
or
sti
adc
sub
cwtl
push
dec
aam
push
push
call
enter
sub
inc
sub
push
iret
pop
push
push
stos
xchg
cld
cmpsb
or
enter
adc
into
int
cli
inc
xchg
jb
int
pop
fsubrl
insb
gs
lahf
fwait
shll
bound
xchg
rcl
dec
sub
movsb
test
pop
push
or
insb
xor
adc
test
inc
es
aam
mov
mov
shrb
lcall
loope
call
or
pop
mov
jge
clc
inc
iret
shrb
pusha
xchg
and
push
mov
outsb
ret
cmp
push
cli
xor
movsl
clc
mov
sbb
mov
aas
add
sub
cmp
xlat
or
xlat
push
sbb
mov
outsb
int
daa
xor
das
mov
or
pop
inc
jecxz
cwtl
loop
cmpsl
sbb
mov
jmp
lahf
int3
shll
movsb
push
leave
adc
in
movsl
movsb
jp
in
shlb
fsubrs
mov
cmpsb
xor
xchg
shl
mov
test
aam
enter
inc
pop
add
pop
push
push
xchg
sahf
int3
cli
ffree
push
push
add
mov
shrb
push
jl
push
add
stos
mov
lea
and
ret
sub
pop
rol
and
mov
push
imulb
jp
cmp
movsl
ret
rcr
divl
mov
fsts
movsb
dec
sub
stos
inc
int3
sti
xchg
lods
rcr
or
cli
mov
or
xchg
sbb
lds
lret
and
jmp
push
cmpsl
cmp
sbb
in
or
cmp
shrl
into
mov
test
jbe
dec
xchg
negl
in
cmp
xor
loop
mov
mov
notb
push
xchg
or
pop
mov
push
sub
and
and
popf
arpl
hlt
out
cltd
sahf
or
fistl
sub
inc
xor
adc
repz
pushf
xor
adc
push
cmc
out
fucomip
xchg
dec
filds
mov
jb
popf
mov
xchg
fdivrs
pop
sbb
lret
and
cmc
jbe
inc
push
popf
mov
repnz
leave
sub
adc
mov
sbb
push
movsl
scas
mov
adc
mov
push
fldl
leave
pop
and
leave
xor
xor
fsubp
mov
dec
jp
and
xchg
mov
add
push
jns
sub
enter
jle
lods
je
sbb
mov
cmp
out
fwait
dec
xor
push
shll
pop
mov
inc
loop
lods
icebp
ja
add
hlt
adc
sub
pop
dec
jnp
dec
sarl
xchg
stc
ret
lcall
add
inc
movsl
popa
std
fiaddl
popa
adc
and
jg
dec
lds
xchg
lret
outsl
mov
mov
ret
xchg
mov
sub
push
mov
in
ja
cltd
xchg
xchg
cwtl
dec
jno
mov
xor
and
mov
or
sbb
add
and
push
mov
ja
sahf
test
inc
push
jmp
nop
movsb
mov
xor
test
clc
inc
push
inc
xlat
jne
pushf
fbstp
mov
pop
shl
and
mov
adc
arpl
or
scas
in
mov
pop
sbb
jmp
pusha
xchg
popa
insb
mov
dec
movsb
adc
add
cmpsb
xchg
lret
outsl
movsb
push
insb
sub
xchg
sahf
sub
lods
rclb
sbb
sub
push
pop
xor
int
lahf
stos
adc
rorl
jp
mov
add
test
fwait
sub
je
test
or
out
jbe
jo
sub
mov
ja
mov
test
bound
fstpt
fmulp
pop
or
inc
adc
xor
cmp
fbld
cmp
subl
repz
das
stos
popf
jecxz
push
stc
or
iret
ret
cmovb
push
insl
jmp
mov
mov
pop
les
push
stc
add
add
sbb
outsb
loop
dec
mov
sbb
add
divl
jns
movhps
sub
inc
mov
scas
in
and
mov
jmp
fwait
jne
adcb
jmp
push
add
pop
cmp
adc
insl
add
ficompl
loopne
mov
cmp
rorl
mov
or
arpl
push
push
mov
les
mov
addr16
push
sbb
mov
or
pop
enter
and
ljmp
push
cld
scas
or
clc
rol
imul
lods
pop
inc
sahf
and
xor
push
imul
sub
test
sahf
push
xchg
push
jcxz
pcmpeqd
bound
push
or
je
movsb
cwtl
pop
mov
ljmp
jecxz
and
fdivrs
test
outsl
pop
jmp
sub
fcomi
dec
mov
dec
aad
ror
insb
push
cltd
adc
push
push
mov
cmpsb
dec
push
imul
push
sbb
xchg
xchg
mov
pop
xchg
in
lahf
xlat
inc
mov
into
adc
loop
pop
xor
cltd
fisubs
mov
add
call
fs
stos
test
push
daa
lcall
sti
xlat
fadds
shrb
lea
xchg
cmp
clc
rcrl
inc
mov
leave
das
stc
xor
sub
pop
shl
mov
mov
push
into
imul
mov
xchg
lock
lcall
pop
cmp
int
pop
inc
jg
ljmp
mov
call
adc
call
gs
mov
jae
aaa
jb
add
lret
shlb
int3
addb
stc
pushf
mov
xor
push
adc
rcrl
xorb
ss
and
mov
and
fidivs
mov
lret
xchg
cmp
push
js
inc
sub
jecxz
inc
pop
ss
push
add
push
dec
sti
scas
fcoms
mov
jmp
into
iret
sbb
leave
push
jmp
push
push
in
inc
and
aad
mov
mov
mov
mov
mov
mov
xorl
mov
sbb
pusha
pop
push
push
pop
inc
sbb
add
popa
loop
call
rorl
imul
xorl
xchg
jp
int3
or
push
sbb
mov
jle
mov
add
sub
jg
pop
aas
sub
lods
out
pop
push
int
lahf
pop
jbe
addr16
das
iret
and
push
fcmovb
ret
imul
sbbl
sub
sbb
rcl
lock
shll
les
xchg
aad
int3
mov
xlat
es
pop
ret
into
arpl
fildll
inc
jne
mov
fisubrl
ss
in
out
xchg
push
out
xchg
mov
test
in
adcb
rol
sub
mov
push
loope
in
dec
vcomisd
lret
mov
pop
fildll
inc
shll
pop
test
push
mov
push
stos
adc
sub
cmp
ljmp
xchg
ret
mov
lret
adc
sti
sti
gs
sub
mov
stos
xchg
add
pop
adc
out
fs
mov
iret
push
cmp
mov
addr16
out
test
test
repz
adc
outsb
jae
add
stc
push
aaa
sbb
divl
outsb
call
jecxz
not
repnz
test
add
push
divb
sbb
adcl
mov
xchg
daa
inc
sub
or
inc
xor
dec
aam
fdivl
cmp
aad
sub
aaa
push
or
push
pusha
mov
add
rcrl
popa
subl
out
inc
jp
sbb
sbb
sbb
adc
data16
icebp
sub
cmp
xchg
jne
jecxz
loope
pop
sbb
add
roll
xor
std
loopne
cli
push
push
mov
pop
std
stos
push
outsb
push
cld
aad
pop
in
movb
dec
xchg
nop
arpl
adc
xchg
inc
inc
mov
xor
andb
or
hlt
and
jecxz
cmpxchg
insb
fcomi
adc
pop
cmpsl
mov
punpckhbw
andb
out
repz
movl
mov
xorl
bound
mov
inc
repnz
popf
and
sahf
int
aaa
xchg
das
test
mov
mov
jno
xchg
sbb
movsl
jmp
idivb
les
push
aad
push
test
push
xor
mov
lods
pop
push
negb
or
clc
dec
mov
hlt
movsl
dec
mov
dec
out
arpl
pop
push
imul
jmp
test
mov
cmp
std
sbb
mov
clc
and
cli
mov
ja
lods
mov
out
sbb
xor
pop
movsb
sahf
iret
arpl
inc
nop
jne
bnd
mov
shld
inc
in
pop
push
cmp
mov
mov
subb
xor
ljmp
cmpb
cmp
sub
pop
sub
pop
push
dec
es
pop
mov
jne
sub
mov
push
insb
xchg
out
sub
or
mov
repnz
shl
ficoms
lods
out
cwtl
inc
and
xchg
add
and
add
jo
fwait
pop
adc
push
dec
sahf
and
in
mov
sarl
and
ficoml
cmc
jno
xchg
insb
xchg
lock
pop
inc
cmpsl
test
shlb
sub
add
gs
stos
lds
ljmp
loopne
or
push
lret
xlat
sarl
xchg
mov
dec
pusha
lret
je
sti
lcall
les
cltd
data16
shrl
fwait
jecxz
ss
jne
push
sbb
ret
adc
enter
popf
das
hlt
cwtl
ja,pn
inc
and
pop
out
xlat
push
pushf
aam
loope
push
ss
stos
sbb
scas
fwait
cmp
adc
iret
mov
repz
fisttpll
cmp
mov
push
setae
test
outsb
add
cli
js
das
dec
add
mov
out
loop
pop
test
pop
daa
jbe
jne
repz
mov
add
imul
stc
mov
pushf
pop
pushf
cs
faddl
rorl
sub
push
jb
and
mov
movsl
call
outsl
sbb
and
jnp
xor
mov
outsl
sti
mov
xchg
jne
imul
popa
aad
push
pop
mov
sbb
push
mov
out
stos
mov
gs
xchg
mov
and
inc
ror
jne
into
shll
shl
jo
sahf
fldcw
and
sub
ret
or
negb
or
jbe
mov
jl
pop
scas
leave
iret
aam
xchg
sub
inc
adc
mov
or
mov
out
xchg
and
sti
adc
mov
fisubl
fnstcw
sbb
and
push
inc
sub
dec
movl
and
mov
enter
cs
cld
or
push
xor
jg
ficomps
cmp
das
sahf
test
lret
leave
fnstenv
gs
mulb
push
adc
lea
sub
test
scas
int3
cmp
in
pop
add
das
mov
icebp
cld
les
mov
pop
sahf
xlat
jmp
jle
cmp
xor
popf
fbld
iret
inc
or
aaa
fwait
inc
rcl
adc
out
scas
pinsrw
rcrb
clc
xor
sbb
dec
push
xchg
shlb
xchg
sub
cmp
ret
dec
and
insl
sub
cmc
xor
mov
jp
adc
in
outsl
dec
bound
mov
lcall
xor
shrl
jno
jl
scas
inc
xor
out
arpl
aaa
fiadds
loope
jne
icebp
ljmp
mov
adc
data16
test
mov
jmp
out
jns
or
mov
dec
push
mov
adc
or
test
popf
and
mov
scas
in
sub
add
adc
adc
stos
push
lds
cwtl
adc
mov
mov
daa
rorl
loopne
add
adc
fwait
cmp
add
ret
pop
pusha
xchg
sub
out
enter
and
and
fisttps
mov
sbb
adc
pop
jo
inc
outsl
mov
jns
lcall
add
cwtl
inc
lcall
dec
inc
adc
test
mov
aaa
adc
adc
push
fsubrs
pushf
jno
leave
ljmp
add
jb
nop
adc
repnz
pop
movsb
loope
dec
inc
or
outsl
mov
pop
add
cli
loopne
mov
leave
mov
sub
loop
inc
pop
push
imul
out
or
out
loop
movsl
stos
sub
or
xlat
fs
stc
xchg
rorl
jl
mov
loope
push
adc
cli
mov
repnz
inc
jbe
xor
sahf
int
cld
lock
xchg
pop
popa
hlt
arpl
prefetch
or
cmp
inc
push
dec
mov
sarl
xchg
mov
mov
dec
je
sarl
lahf
decl
fcoms
out
mov
pop
xchg
pop
or
jnp
into
inc
jno,pn
sbb
xchg
mov
dec
jecxz
sbbl
insl
imul
cmpsl
mov
cmp
andl
ret
sub
sbb
jl
outsl
loop
xchg
mov
dec
jb
insl
int
cmpsl
pop
aam
xchg
jo
jbe
call
fbstp
or
push
fnsave
sahf
pop
ficomps
mov
add
mov
jmp
mov
aad
sahf
cmp
data16
roll
pop
addr16
loop
bound
rcll
or
and
inc
lds
or
leave
outsb
into
rclb
test
xchg
mov
jbe
lcall
jae
out
iret
cld
add
xchg
stc
subb
inc
add
inc
mov
test
lahf
divl
and
and
out
adc
popf
out
or
je
sbb
ret
fisubs
lcall
cwtl
cmpl
mov
push
cli
and
mov
mov
pop
pop
xor
or
ret
pop
in
fwait
jmp
ja
ds
mov
push
pop
push
fsubrp
or
pop
jbe
mov
mov
seto
shr
and
loop
sub
mov
cltd
xchg
test
fistl
mov
mov
cltd
out
enter
sbb
test
imul
mov
insl
aas
in
lahf
jb
lea
enter
cmpsl
mov
push
adc
outsl
cli
js
hlt
jg
aaa
test
mulb
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
je
push
mov
out
out
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
pushl
pushl
mov
sub
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
pushl
call
andl
pushl
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
add
add
add
inc
add
loopne
jb
popa
je
add
pop
fiadds
add
mov
add
add
add
inc
add
loopne
fs
je
add
add
add
add
sbb
add
adc
add
add
je,pn
js
add
add
rorb
add
scas
add
add
add
inc
add
loopne
jb
popa
je
add
les
add
loopne
add
push
add
add
add
inc
add
loopne
fs
je
add
add
add
add
or
add
add
add
add
inc
add
loopne
add
xor
xor
call
pusha
call
dec
jnp
mov
js
add
mov
lods
jo
cld
into
fdivl
jmp
mov
mov
sbb
and
int3
cmp
pop
xlat
stos
out
scas
sbb
and
aad
dec
or
and
aad
dec
or
fisubrl
add
out
push
push
sti
decl
add
jb
add
mov
push
and
and
jo
pop
orb
jecxz
lahf
mov
sub
and
std
mov
in
sbb
sbb
pushf
daa
and
inc
jle
fs
aad
hlt
ljmp
add
out
sub
and
xchg
lods
cmp
inc
test
gs
stc
lock
aaa
or
aam
inc
loopne
fstl
mov
dec
and
popa
sub
rcr
add
ljmp
mov
sbb
jecxz
sbb
in
cmp
xchg
ret
stos
jb
pop
sub
ja
ficoms
cmp
cmpsl
nop
pop
popf
xchg
add
loop
in
sbb
fucomi
xor
scas
or
jnp
or
pop
mov
lods
jg
jl
scas
out
pop
xchg
inc
jmp
inc
out
xchg
xlat
jo
imul
sub
inc
stos
xchg
lods
imul
not
rolb
mov
rcl
sub
and
sub
stc
inc
mov
lahf
dec
into
aas
mov
push
inc
or
fistpll
inc
popf
mov
sarl
daa
xchg
add
aas
mov
push
rorl
cld
outsl
jb
push
fwait
mov
movsb
add
out
out
inc
insl
or
sbb
pop
jl
add
cld
jo
push
leave
mov
push
cmp
movsb
insb
int3
sbb
lret
sub
pop
shrl
mov
out
add
insl
loope
mov
pop
imul
enter
and
jp
push
pop
rcrb
mov
push
push
scas
mov
mov
imul
and
and
xor
repz
fistpll
out
bnd
nop
pop
inc
jle
jno
aaa
std
test
test
mov
adc
jmp
adc
cmp
leave
xchg
movsb
pusha
loop
loop
aam
out
aad
sbb
loope
xchg
push
mov
dec
xchg
mov
push
lock
inc
inc
cmp
lods
cmc
push
mov
mov
mov
bound
dec
jno
sbb
in
cli
roll
lret
into
scas
xchg
add
sbb
fwait
out
cmc
mov
xor
lret
mov
cltd
jg
jmp
push
xchg
testb
fiaddl
mov
jae
lds
xor
das
jne
lds
arpl
lock
cmpsl
int3
or
fs
jecxz
out
insb
xchg
mov
mov
fstl
lods
js
jg
aad
add
data16
xchg
mov
and
sub
fmul
push
into
inc
lods
xchg
push
cmp
and
pop
jno
cwtl
int3
sub
imul
out
xor
sbb
out
adc
int
inc
push
in
mov
mov
and
mov
aad
pop
jae
push
mov
mov
fists
sbb
ret
adc
sub
xchg
mov
sub
pop
add
fidivs
sarb
sbb
fdiv
mov
sar
cmc
cmc
cwtl
push
push
xchg
aam
add
jecxz
dec
jno
fsubrl
out
testl
cmp
cmp
sbbl
incl
rcll
pop
cwtl
jae
scas
mov
outsb
testl
aas
xchg
ret
cs
or
fbstp
rcrb
std
mov
std
sub
inc
xor
or
jle
pop
lret
inc
and
ret
jne
pop
cli
sbb
imul
repnz
adc
and
jle
lods
iret
hlt
push
push
popf
push
and
add
into
lret
in
push
sbb
inc
sbb
out
inc
jecxz
fstps
xlat
shrb
mov
dec
scas
sbb
ret
lds
arpl
out
add
loop
nop
cmpsb
bound
sub
test
add
mov
lcall
inc
and
sarl
aas
xor
cld
ss
jle
addps
cmp
int3
add
and
repz
jae
mov
inc
cmp
cmpsl
xlat
mov
cmp
fadd
mov
and
jmp
in
push
xchg
fstp
data16
add
imul
mov
and
scas
cwtl
lods
and
out
mov
loope
sahf
aam
xchg
fstl
clc
data16
scas
adc
and
js
ljmp
or
inc
add
iret
inc
sbb
sti
push
cwtl
ret
jle
cmp
out
test
mov
push
or
cmpsl
lods
enter
cmpsl
in
ret
mov
push
jl
cmp
sub
xor
into
pop
loope
dec
pop
xor
enter
insl
aad
ja
sbb
mov
aam
testl
imul
push
xlat
or
xchg
sbb
fwait
xor
jns
pusha
or
or
test
mov
dec
mov
and
adc
add
mov
inc
xorl
in
bound
xor
les
push
fmul
sbb
stc
inc
or
scas
push
sti
jp
inc
lcall
sahf
fucomip
lock
fidivl
sbb
or
js
test
mov
adc
hlt
mov
cli
inc
popf
sbb
rclb
aaa
lock
push
int
cli
adcb
jo
test
jae
cmp
gs
stc
mov
xchg
ljmp
push
popa
and
inc
pop
repz
ljmp
shlb
in
mov
in
das
in
sbb
lock
sbb
inc
add
jle
clc
stc
fwait
lahf
dec
divl
ficomps
fistps
xor
mov
stos
mov
inc
xor
fisubrs
clc
arpl
mov
ljmp
pop
cmp
loop
jle
fmul
je
push
fs
adc
lock
call
andl
in
mov
je
aad
push
sub
cmp
push
xchg
sbb
dec
sbb
cmpsl
fwait
in
inc
jno,pt
flds
xor
add
in
std
dec
fnsave
lcall
cmp
movsl
inc
sti
mov
out
gs
cmpsl
insl
jl
cli
scas
mov
leave
test
mov
jnp
jmp
addr16
or
sbb
and
pop
add
jo
push
or
inc
clc
jnp
push
cmc
mov
fs
loope
lds
push
push
xchg
test
in
imul
sti
xchg
das
jmp
dec
mov
pusha
mov
sub
mov
sub
sub
push
mov
sub
push
push
nop
addr16
rorl
mov
and
and
inc
fistps
xchg
mov
mov
addl
or
xchg
xchg
lods
xchg
and
jns
xchg
cli
xor
inc
div
mov
dec
lahf
pop
inc
xor
dec
sti
loopne
cs
jecxz
inc
daa
mov
sahf
mov
aas
add
insl
add
in
xorb
mull
cwtl
dec
push
adc
test
push
xchg
cltd
std
or
ja
daa
jae
stos
xchg
inc
sbb
push
mov
sbb
stc
sbb
inc
cmpsb
test
sbb
sub
jnp
push
out
mov
test
push
scas
or
fisubrl
rol
mov
in
repz
fists
and
mov
mov
mov
stos
and
inc
cmp
insl
daa
into
add
sub
out
mov
mov
add
pusha
loop
add
loop
pop
push
test
gs
sbb
adc
insl
stos
lods
in
arpl
inc
outsl
out
mov
nop
jmp
mov
nop
xor
jne
cmpsl
mov
arpl
push
cmp
jle
inc
cmp
jne
fdivr
mov
cmp
sub
jmp
xchg
repz
aas
push
mov
xchg
xchg
adcl
cwtl
xor
sbb
repz
cmp
in
xorl
mov
shr
pop
clc
push
pop
cs
cmp
pop
dec
jp
xor
cmp
icebp
mov
ljmp
and
fs
pop
js
sbb
inc
mov
jns
and
jmp
in
outsb
xchg
cmp
das
movsb
inc
mov
mov
bound
sub
jns
xlat
mov
jmp
fcmovnb
mov
xor
clc
xchg
jo
sub
addl
add
jno
jmp
dec
or
loope
mov
in
es
ret
repnz
mov
mov
fbld
rcrl
cmp
push
push
orb
add
repnz
push
out
mov
fisubrs
aam
pop
lods
pop
sbb
lahf
push
fistpll
test
sub
xchg
mov
and
ret
leave
sub
je
lods
je
std
push
sbb
sbb
jae
dec
adc
test
fdivl
mov
test
int3
pushf
pushf
fwait
cmp
pop
xchg
bound
pop
sti
push
adc
outsl
enter
in
jmp
jmp
es
xchg
je
mov
out
inc
xchg
iret
testl
mulb
dec
pop
mov
dec
out
push
lret
cmp
iret
les
flds
lahf
dec
bnd
push
or
push
xchg
fimull
test
clc
movsb
jns
enter
ds
stos
test
cli
sub
and
aaa
jns
in
sbb
sbb
xchg
jecxz
jg
mov
push
mov
mov
in
movsb
cmpb
cwtl
loopne
add
push
sub
or
aas
inc
and
ds
cmpsb
dec
dec
into
push
call
mov
popa
dec
jl
cmc
in
addr16
stos
and
mov
ret
and
dec
mov
pop
int3
test
cmp
pop
mov
and
ljmp
pop
ja
xchg
cmc
addl
mov
inc
dec
out
out
xor
xor
inc
fcompp
dec
mov
adc
cs
sar
inc
das
xor
pop
push
sahf
arpl
mov
dec
pop
push
mov
xchg
pop
pop
mov
sub
loope
ja
add
sub
cmp
pop
pop
mov
gs
sbb
xor
cs
imul
pop
or
sarl
adc
sub
xchg
lods
mov
imul
inc
mov
push
sbb
mov
cmp
and
adc
xchg
dec
ja
xor
ror
sahf
pop
out
in
xlat
repnz
in
or
std
inc
scas
frstor
lds
xor
hlt
in
add
pop
mov
cmp
xchg
mov
int
mov
insl
jbe
pop
sub
shr
adcb
inc
jecxz
std
and
fildll
adc
jmp
insl
bound
rolb
push
xchg
and
and
xchg
scas
pop
arpl
push
movsl
adc
or
movsl
aad
test
mov
leave
pop
repnz
ja
xor
mov
sbb
sbb
in
cmpsl
leave
test
test
mov
xchg
lcall
scas
aaa
jnp
jns
jb
fbstp
xchg
mov
inc
mov
sub
mov
insl
popf
jge
test
adc
mov
xor
adc
sarb
jmp
lcall
loope
mov
push
mov
js
mov
popa
daa
push
cs
lret
lods
test
addr16
xchg
loop
jae
adc
and
push
roll
sbb
cmp
adc
mov
add
adc
sub
xchg
jl
adc
jne
xor
jns
xchg
scas
movsl
loop
add
cmpsl
cmp
or
push
rorl
inc
fucomp
mov
enter
push
lea
xchg
xlat
add
xchg
mov
or
inc
sbb
add
mov
sbb
inc
cmpsb
push
mov
insl
pop
sub
or
jnp
shl
xchg
dec
inc
aad
scas
mov
fxch
clc
iret
aaa
dec
cmpl
lock
cmpsb
mov
mov
push
mov
repz
jge
pop
incl
lods
icebp
sbb
or
jl
mov
mov
mov
nop
leave
jge
call
inc
push
xorb
loop
ljmp
pushf
aaa
dec
jbe
xor
cmp
mov
jb
jg
mov
mov
stos
mov
sub
stos
pop
stos
rcl
testb
rcl
push
pusha
jl
sar
sub
in
sbb
clc
icebp
jae
push
inc
aaa
jp
or
fsubs
push
and
test
push
into
and
xor
inc
adc
jge
cmpl
popa
sub
add
mov
pop
notl
adc
xchg
and
lcall
sbbl
add
nop
xor
outsl
xor
sub
dec
mov
add
mov
out
mov
cmp
push
enter
sbb
lods
ja
fisubrl
cmc
push
fcmovu
sub
jbe
pushf
adc
mov
add
mov
mov
fnstsw
outsl
popa
rolb
sub
push
push
mov
mov
push
jne
inc
inc
cmp
lcall
fsubrs
inc
sub
mov
sahf
enter
dec
mov
js
adc
sub
xor
jmp
and
ret
iret
into
das
outsl
pop
out
sbb
xor
lret
jmp
pop
cmp
dec
inc
push
lcall
add
rep
int
xor
test
dec
mov
mov
repnz
mov
sbb
lret
or
insl
push
mov
add
repz
jle
lcall
cmp
mov
data16
lods
mov
mov
xchg
jo
pop
stos
push
push
xchg
andb
pop
pop
aad
mov
out
fldt
jno
pop
xchg
xor
stos
lods
add
cltd
cli
xor
xchg
and
imul
ss
xor
scas
cmc
jp
pop
rolb
xchg
xchg
mov
pushf
mov
or
sbb
imul
rcll
insl
adc
cwtl
add
xor
movsb
stc
push
sbb
dec
pop
daa
int
jnp
es
mov
xor
test
loop
cmpl
cmp
lock
xlat
cmp
loop
sbb
aam
outsl
sbb
mov
sub
sarl
cmc
mov
dec
jg
xchg
insl
xor
fs
lea
iret
mov
in
xor
dec
ss
and
sbb
ja
mov
hlt
mov
cmpsl
insb
popa
scas
orb
and
rolb
jne
in
fcmove
add
lret
gs
xor
mov
cmp
mov
orl
inc
mov
stos
xchg
mov
sub
fdivl
aam
das
test
xchg
je
cmpsl
fldt
lock
adc
stc
dec
adc
jnp
enter
les
fcmovbe
lods
loope
xor
in
call
sbb
jbe
or
sbb
aam
add
ret
ret
test
or
and
sarl
outsl
or
in
xchg
xor
lds
push
insb
ror
cld
xchg
mov
pop
or
xlat
pop
pop
cmp
in
imull
je
imul
add
or
mov
out
adc
gs
sbb
int
push
ficoml
cmp
push
mov
and
push
sbb
gs
xchg
ret
pushf
pop
je
test
rcll
lea
sbb
pop
inc
ret
or
mov
gs
test
jl
xchg
test
xchg
outsb
push
outsl
lds
inc
cmc
xchg
stos
mov
stos
pop
rcrb
lret
stos
mov
inc
sysenter
lods
sub
xor
mov
dec
push
add
mov
and
or
cmc
push
ret
dec
pop
xor
cmpsb
push
xor
sub
test
leave
adc
jae
loope
lret
mov
add
dec
cmp
insb
cld
imul
and
das
out
fnstsw
jge
fstps
addr16
cli
lods
push
pop
cmp
hlt
lods
inc
clc
cs
rcr
xchg
icebp
xor
call
addr16
jmp
cmp
or
movd
fldcw
fisttpl
xlat
mov
add
sbb
mov
fincstp
scas
ror
xor
lock
scas
repz
fadds
jg
inc
and
inc
push
add
or
mov
pop
and
push
push
sub
leave
nop
lods
mov
adc
fstps
pop
mov
repz
jbe
bnd
fsubl
loope
ja
imul
and
in
dec
cmp
sub
mov
imul
mov
push
addb
dec
jno
out
das
inc
ljmp
add
jmp
int3
mov
adc
dec
mov
cmp
adc
ja
dec
push
xchg
dec
rorl
pop
ret
dec
gs
push
add
and
aam
add
push
inc
push
test
mov
add
loope
inc
mov
pop
and
inc
cmc
add
mov
loopne
pushw
ret
sub
inc
hlt
inc
or
arpl
fimuls
std
adc
stc
inc
aad
out
jns
mov
sub
jb
roll
xchg
and
and
repz
lahf
pop
adcl
es
out
and
je
int3
test
ljmp
mov
lret
loop
adc
je
or
cmp
or
sub
pop
in
fisubl
ret
outsl
dec
jmp
inc
xchg
and
xchg
call
push
in
out
into
pop
push
inc
rcl
push
mov
mov
inc
or
outsl
das
je
push
push
jg
scas
addr16
cmpsb
and
inc
fninit
sbb
pcmpeqd
cmpsl
gs
or
xor
xor
push
fstps
int3
movsb
sub
push
cmp
insb
mov
fldz
repnz
xchg
mov
jp
test
clc
aas
nop
mov
pushf
scas
andb
sarb
and
inc
or
mov
lea
dec
pushf
xchg
push
xchg
and
not
addr16
mov
daa
sub
xchg
push
sub
mov
into
movsl
sbb
lret
faddl
push
sbb
push
xor
aas
test
and
lret
ret
mov
lcall
add
rcr
and
sub
sub
cmpsl
add
arpl
jae
jp
and
ret
loope
push
rolb
je
cmc
js
sbb
lret
in
sbb
test
cltd
fldt
cld
xor
scas
mov
xacquire
xorl
mov
add
xchg
mov
inc
stos
mov
xor
pop
ror
sti
les
inc
push
repz
jb
mov
sub
xchg
dec
sahf
sarl
repnz
and
mov
mov
jp
lahf
aam
add
setne
cltd
sbbb
dec
fnstcw
js
or
pusha
jp
std
mov
pop
xchg
repz
ss
sub
stos
add
pop
add
fistl
cmpsb
jb
leave
in
mov
pop
movsl
faddp
jno
mov
pop
loope
and
test
fwait
xchg
mov
dec
dec
incl
jmp
sbb
gs
js
cmp
lret
repnz
jbe
pop
dec
dec
nop
lcall
jg
fdivrs
outsl
jge
lret
out
and
sbb
cmp
xchg
inc
mov
adc
xchg
les
in
and
aaa
sbb
rorl
lcall
sti
jo
mov
in
dec
xor
sub
and
dec
pop
js
push
xor
jp
in
rcr
addr16
xchg
xchg
push
dec
lcall
mov
mov
mov
out
mov
test
push
pop
push
push
mov
imul
sbb
stos
mov
jle
in
in
insl
fcmovnb
imul
fdivrl
jg
jnp
cmp
pop
enter
xchg
or
mov
out
cmp
mov
mov
repz
js
xchg
push
cmpsl
dec
dec
subb
mov
sub
jno
inc
push
xor
div
into
jge
xchg
cmp
es
sbb
mov
pop
cmp
out
movsb
add
pop
arpl
mov
out
iret
bound
mov
mov
push
mov
insl
jmp
adc
xchg
popf
adc
dec
insb
into
xchg
out
popa
pop
sub
mov
popf
arpl
jmp
cmp
sub
mov
dec
vcvtdq2pd
movsl
je
js
addb
cli
lods
push
cmc
faddl
xor
int
mov
jne
adc
es
pop
mov
jmp
inc
xchg
lock
xchg
popa
std
sbb
cmpsl
notb
imul
jmp
repz
repz
lock
stos
mov
jl
jg
je
stos
outsb
jl
sti
sbb
mov
mov
jp
xor
mov
dec
lea
ss
mov
enter
mov
inc
rorb
push
mov
roll
outsl
xchg
icebp
sub
dec
lret
sbb
mov
fistl
push
lock
xor
je
shrb
testb
mov
jg
cmp
push
fcmovnu
mov
ss
fcomps
pop
inc
and
fcmovnb
inc
pop
int3
ds
cmp
iret
xchg
and
lock
scas
addr16
cmpl
nop
roll
mov
pop
iret
dec
pop
mov
inc
jge
and
int3
mov
sbb
xor
cmc
add
mov
push
sub
leave
pop
data16
repz
xchg
inc
lret
jmp
xor
xchg
fldl
stc
decb
mov
adc
cli
mov
mov
ret
inc
lea
mov
inc
add
mov
int3
sti
inc
aas
or
or
xchg
mov
mov
jno
mov
imul
testl
shll
push
mov
jno,pn
int3
push
or
out
test
dec
add
ret
pushf
mov
adc
push
mov
mov
mov
push
mov
lds
xor
pop
roll
movsb
hlt
out
cmp
inc
shrb
adc
andb
das
cltd
cmpsb
pushf
sub
mov
data16
mov
sub
aad
std
addr16
push
or
test
aaa
xor
mov
fs
imul
pop
ficomps
cmp
testl
scas
lea
repnz
jmp
and
lods
sub
ja
imul
sbb
cmp
imul
into
jle
inc
xchg
data16
xor
xchg
lds
push
arpl
repz
scas
mov
fwait
mov
inc
dec
cwtl
sub
sub
dec
cs
roll
shlb
push
je
cmp
nop
orl
addr16
xor
and
and
and
addl
pop
shld
flds
idivl
sbb
and
stc
popa
mull
xchg
adc
mov
push
icebp
jne
lahf
sub
pop
xchg
sbbl
xchg
in
cmp
incb
je
xor
adc
add
xor
pop
pop
cmpsb
mov
jne
cld
inc
xchg
ljmp
data16
push
js
jge
into
bound
pop
sbb
xchg
jle
insl
cmpsb
or
xor
lods
mov
and
push
xor
jl
push
lods
test
mov
dec
ret
outsb
je
mov
add
mov
ds
call
lods
xor
sti
stc
add
xor
mov
mov
in
int
lret
jle
add
mov
jl
cltd
push
pop
add
xchg
adc
sub
stos
jne
mov
mov
mov
sub
fcmovnb
arpl
mov
and
loope
mov
imul
lock
call
mov
sbb
iret
sub
pop
sub
fdivrs
jmp
movsl
mov
jns
sbbb
inc
push
int3
into
outsb
or
das
mov
aad
rcrb
cmp
dec
mov
jle
inc
shl
int3
sbb
negl
lcall
mov
pop
xchg
clc
aaa
xchg
shr
pop
xchg
jmp
dec
mov
sbb
jmp
mov
mov
mov
mov
rclb
jo
jns
dec
addr16
scas
adc
insb
pop
mov
mov
dec
push
mov
pop
pop
jbe
loop
stos
mov
ficomps
loop
pop
and
push
xchg
out
movq
inc
lods
ficoml
pop
mov
cmc
mov
mov
or
jns
enter
aaa
enter
add
sub
inc
fidivrs
iret
out
sub
mov
enter
je
push
ffree
fistpl
outsb
sub
pop
jnp
xchg
rorb
shrl
pop
xchg
mov
inc
cmp
sub
inc
mov
jmp
or
jmp
loopne
xor
negb
mov
or
int
jge
stos
cmp
xchg
mov
dec
sarl
mov
stc
fs
dec
dec
inc
je
int3
repnz
pop
std
xchg
cmp
and
mov
push
inc
decl
cmp
jb
mov
cmp
andb
test
repnz
xchg
jae
into
clc
xchg
dec
mov
mov
adcl
lret
mov
int
into
mov
mov
ja
and
inc
in
sbb
mov
movsl
adc
dec
std
cltd
push
inc
sahf
push
test
push
dec
fiaddl
push
sub
xchg
enter
int
push
imul
gs
sbb
cltd
aaa
add
mov
fnstcw
xchg
neg
xor
repnz
insb
out
pop
mov
jb
mov
cltd
mov
pop
test
push
repnz
xchg
cltd
fstpl
mov
insl
data16
xchg
stos
sub
add
push
movsb
popf
push
shrl
jmp
fdivp
lret
xchg
ret
fistpl
jle
jg
pusha
imul
out
or
testl
dec
xchg
and
sbb
xchg
inc
mov
movsb
mov
pop
std
push
sbb
push
paddw
pop
and
pop
xor
in
imul
cltd
xchg
sub
lcall
jmp
stos
lahf
divb
add
push
jne
popa
inc
dec
mov
mov
scas
pop
lods
push
out
add
les
pusha
mov
or
xchg
icebp
ljmp
mov
rcrl
addr16
out
call
mov
mov
fdivl
push
ds
je
inc
xor
loope
mov
rorb
sti
or
xlat
clc
sub
push
mov
cmp
repnz
dec
imul
jo
mov
pop
leave
inc
shlb
inc
sbb
rolb
sti
insb
or
daa
pusha
imul
aaa
sub
mov
adc
loopne
es
mov
pushf
push
xchg
xchg
dec
sbb
stos
inc
ljmp
xchg
dec
les
leave
push
pop
bound
aaa
ret
sub
sub
add
scas
in
and
push
addr16
out
adc
into
in
das
xchg
in
jns
fs
or
xorl
movsb
ret
inc
inc
fnsave
mov
cs
mov
or
stc
mov
fs
scas
rcll
fwait
pop
xchg
aam
fwait
and
add
scas
ss
mov
dec
and
outsl
loope
inc
xlat
pushf
jp
or
es
bound
mov
jg
xor
fsubrs
inc
insl
dec
pop
cmp
inc
xlat
or
addr16
adc
punpckldq
add
cmp
cmc
or
push
and
cmp
push
xor
push
pop
jl
push
or
adc
cmc
push
std
or
and
push
mov
fdivrs
pusha
shl
pop
adc
xchg
adcb
shl
pop
push
or
shlb
push
shll
cwtl
xchg
dec
outsl
lahf
and
jno
fisubrs
scas
pop
dec
dec
je
test
add
mov
sub
xchg
fs
jg
jb
mov
or
ds
push
sti
popf
dec
push
jno
cli
and
xchg
stc
mov
into
bound
repnz
cmp
cmp
pop
aaa
call
pop
xchg
sahf
push
add
mov
add
int3
adc
pop
lret
push
js
xchg
xchg
shl
sahf
push
andl
testl
mov
divl
or
pop
je
dec
cmp
scas
scas
aaa
xor
repnz
and
and
scas
nop
movsl
push
aad
add
xor
inc
add
pop
dec
frstor
pop
mov
movsl
push
out
add
pop
mov
sti
addl
adc
mov
sbbl
dec
imul
inc
std
and
cmp
mov
nop
cmp
push
push
sti
or
jge
fadds
idivl
mov
out
outsl
mov
add
lret
xchg
sub
aaa
rcll
aad
orb
cmp
pop
dec
cmp
ja
cli
fidivrl
and
add
decb
das
or
xchg
pop
call
or
fwait
xchg
repnz
xchg
inc
jmp
jnp
xchg
out
pop
dec
and
mov
insl
or
xchg
or
and
mov
enter
pusha
inc
push
mov
inc
notl
xor
inc
rcll
add
jge
test
dec
pusha
outsb
push
add
sbb
push
dec
mov
xchg
fxch
scas
xchg
into
sub
or
adc
or
xchg
mov
inc
ficoml
sbb
stos
fisttpll
mov
push
cmpb
inc
cmp
ret
sub
pop
negb
jmp
pop
lock
gs
xrelease
outsl
es
shll
mov
dec
insl
sub
and
popa
or
sbb
int
push
shl
and
push
xchg
repnz
xor
push
cwtl
cmp
fnstsw
mov
andl
loop
jge
push
xchg
inc
pusha
imul
inc
insb
mov
cmp
scas
jo
leave
stos
and
cmc
repz
dec
ds
dec
sub
sub
jg
out
movsb
push
clc
sarb
lock
push
dec
push
mov
mov
adc
sbb
mov
push
xchg
ljmp
dec
mov
and
pushf
mov
stos
imul
testl
sbb
xor
mov
xor
sbb
or
mov
in
das
les
inc
ljmp
outsl
pusha
or
pop
jle
sub
mov
and
mov
sub
jne
add
je
xor
sbb
mov
xor
jge
jge
std
aam
std
lods
sbb
fstpl
imul
xchg
test
push
mov
xchg
int3
ret
xchg
adc
js
pop
adc
lret
or
push
mov
fsubp
cs
fcompl
stos
sub
jb
pop
or
in
pop
incb
mov
push
sbb
inc
mov
in
dec
and
je
add
stc
ja
mov
out
lahf
int
jns
call
movsb
dec
dec
xchg
pop
xor
pop
xor
push
mov
push
add
std
stos
ja
adc
into
and
jp
sub
cmpsb
cltd
lods
or
test
mov
dec
arpl
push
int3
add
push
out
sbb
aas
fdivrs
fists
sub
hlt
test
sti
mov
or
mov
sarb
pmovmskb
lret
and
xchg
mov
shr
or
js
gs
inc
faddp
push
inc
fmull
xchg
pop
cmpsl
xlat
clc
decl
add
cltd
cmpsb
imul
xchg
mov
in
add
or
inc
lahf
popa
loopne
stos
sti
and
movsl
inc
pushf
xchg
xorb
and
insl
shll
mov
pushf
or
mov
das
add
inc
mov
je
js
push
mov
call
out
push
out
sub
sbb
cmpsb
ret
test
jbe
lret
fisttpl
add
ss
mov
popa
and
mov
les
pusha
out
repnz
leave
bound
imul
push
adcb
pop
shl
push
inc
mov
or
inc
popa
loop
inc
or
lahf
in
cltd
cmp
jns
insb
pusha
cs
data16
mov
nop
inc
je
xchg
mov
jmp
andb
cwtl
int3
loop
mov
lods
push
test
inc
movb
jg
adc
dec
test
push
outsb
ds
out
cmpl
and
addb
push
adc
movsl
in
movsl
aam
push
je
mov
stos
adc
xor
mov
mov
inc
and
xor
xchg
arpl
mov
cmc
incb
sub
inc
cmp
push
xchg
fisubs
fldcw
mov
push
stos
jb
out
xor
ljmp
aaa
xchg
jns
gs
mov
outsb
loopne
jle
cld
mov
adc
or
ss
xor
jnp
cmpsb
push
ss
mov
dec
mov
jo
sub
dec
mov
push
pop
or
inc
mov
data16
jg
push
js
mov
leave
dec
leave
fcomi
ret
into
xchg
mov
mov
cmp
mov
sbb
and
dec
cmp
insl
xchg
inc
lea
iret
jmp
stc
imul
mov
cwtl
push
imul
xchg
lock
cld
mov
push
inc
mov
sub
dec
out
fs
fldt
or
test
std
xor
mov
dec
lock
jnp
fildl
push
add
pop
mov
jge
inc
out
adc
mov
fadds
shrl
jne
mov
aas
add
or
in
repnz
ret
mov
sahf
sbb
aam
sbbb
shr
mov
push
mov
pop
add
ds
cli
sub
addr16
inc
ljmp
je
out
sbb
mov
insb
mov
inc
push
mov
pusha
mov
cmp
in
lds
mov
lods
popa
sub
sbb
cmp
inc
fldenv
repz
jg
and
hlt
lret
xchg
or
mov
cmp
mov
fwait
push
jg
cli
ds
test
or
mov
ret
in
jbe
pop
push
dec
inc
push
pushf
xchg
lods
iret
pop
xor
cmp
push
push
sub
rorl
mov
incb
je
scas
sbb
cs
jns
push
jp
in
adc
ds
stos
lret
into
cmp
in
jns
pop
xchg
nop
jle
mov
ffreep
and
dec
out
sbb
fcomi
and
daa
jnp
lods
adc
popf
or
dec
jo
test
es
xchg
mov
push
ss
cmc
jno
xlat
ss
pop
or
push
xor
push
jle
sbb
mov
jne
ret
pop
gs
mov
iret
test
xor
cmp
adc
add
dec
pop
pop
je
inc
popa
xchg
imul
inc
fwait
sbb
mov
pop
aam
jl
xchg
or
gs
mov
mov
dec
mov
lcall
sub
lea
sbb
mov
xchg
lea
and
jl
sarb
aam
aad
outsb
mov
jns
gs
xor
adc
mov
mov
imul
popa
shr
jmp
adc
jmp
jo
adc
leave
dec
and
in
in
subb
xor
sahf
idiv
loopne
hlt
mov
rorl
add
ja
fcomp
fs
repnz
aam
mov
mov
push
mov
lcall
lret
or
jl
xchg
jbe
dec
xchg
inc
arpl
pop
adc
fists
outsb
std
nop
mov
mov
jbe
cs
in
mov
jge
sub
in
push
insb
ror
pop
or
and
loope
sub
imulb
push
stos
cmpsl
ror
stos
cmp
enter
sub
lret
mov
dec
in
aas
popf
xchg
out
fwait
rorb
cmp
cwtl
daa
push
dec
outsb
jl
and
mov
int3
mov
rcl
jns
icebp
outsb
cmp
mov
daa
jo
in
cli
add
aam
dec
and
ret
mov
js
sub
push
imul
adcl
xchg
les
jg
lock
jne
add
jnp
sub
addr16
cmpsl
ljmp
mov
mov
mov
xor
push
inc
aaa
repnz
test
mov
call
dec
pop
and
cltd
scas
mov
repz
pop
imul
jg
test
imul
pop
sub
xor
sahf
test
into
cmpsl
xchg
add
pop
cmp
pushf
addr16
xchg
xchg
ror
mov
stos
fldt
sbb
jb
stc
stos
nop
daa
int
cmp
xlat
mov
or
into
jne
subl
sub
push
sbb
div
test
xor
je
fdivrs
mov
mov
loope
jecxz
outsb
mov
fwait
xor
jno
icebp
arpl
negb
add
frstpm(287
sub
mov
or
test
pop
dec
lods
jno
in
xchg
aam
adc
dec
bound
mov
fsubrs
repnz
sbbb
adc
xor
mov
xchg
adc
sbb
cmp
jmp
nop
sub
das
sub
shr
xor
ja
out
push
jl
xlat
clc
inc
sub
cwtl
adc
or
xor
push
mov
in
aaa
sbb
sahf
xor
inc
mov
jecxz
sahf
lret
dec
push
push
inc
pushf
inc
sub
mov
cwtl
mov
mov
or
jp
add
cmp
or
jnp
data16
rcr
sub
jo
jge
mov
sub
ljmp
loope
jbe
pop
pop
sbb
les
loope
mov
rclb
mov
push
rolb
pop
fcomp
arpl
sbb
int3
std
testl
test
out
adcl
inc
jle
into
xor
stc
and
in
push
push
lahf
push
rcrl
fistpll
inc
mov
cmpsb
ljmp
inc
mov
cmpl
lea
add
loope
nop
jo
out
jne
sti
cmc
rcrb
test
cmc
cmpsl
movl
add
lods
or
cmpb
push
push
inc
fildll
push
rorb
sbbb
sbb
lds
movsb
add
and
cld
cmp
jb
add
sub
sbb
adc
insl
data16
jne
ror
outsl
push
mov
push
mov
dec
fisubrs
push
jno
mov
cltd
inc
jae
pusha
cwtl
add
imul
cmp
clc
ret
lcall
pop
sub
mov
inc
xor
pop
or
pop
enter
mulb
les
fisttpll
jns
inc
shl
fildl
fldl
mov
sub
push
or
out
data16
imul
sub
sbb
insb
xlat
test
jmp
jbe
aas
mov
cltd
add
ja
xor
xchg
pop
call
ljmp
loop
mov
aaa
xchg
push
sub
cmpsb
mov
inc
leave
or
and
mov
add
int3
xor
repz
pop
paddw
pop
imulb
aad
jl
pop
pop
jno
adc
outsl
mov
sbb
outsl
call
dec
ja
dec
sbb
loope
fdivl
ja
xchg
mov
fnsave
mov
std
adc
loop
out
test
push
mov
loopne
test
xchg
pop
call
test
push
inc
push
and
shrb
inc
daa
mov
dec
sahf
imul
nop
leave
shrl
roll
xor
into
inc
cmc
popa
test
cld
cmp
sbb
idivb
imul
in
add
sub
adc
and
adc
andl
and
cmovp
inc
insb
fsubl
jg
fs
push
push
mov
and
sub
or
test
cmp
cltd
lret
jge
xchg
pop
es
xor
xor
dec
addr16
test
jo
mov
inc
js
and
mov
mov
movb
jns
mov
pop
sub
xor
xor
ffree
dec
add
xchg
popl
sub
dec
jbe
lcall
jge
fldl
adcl
xor
mov
xchg
addr16
jecxz
add
mov
int
adc
pop
add
xchg
mov
lcall
test
cmp
jge
fbstp
mov
or
mov
jae
test
sub
out
out
mov
xchg
xorb
jge
arpl
popf
xor
leave
push
dec
xchg
xchg
out
push
js
inc
inc
xchg
faddl
orl
sbb
inc
push
xor
mov
mov
dec
lcall
push
push
mov
sbb
mov
call
pop
fcoms
xor
clc
lcall
addr16
add
add
fcomip
lds
test
mov
pop
jb
or
dec
push
jmp
stos
cmp
or
adc
xchg
adc
mov
fldt
xor
int
es
pop
mov
jb
or
push
aaa
test
jb
sub
bound
xchg
pop
dec
hlt
sub
lea
imul
in
addr16
add
and
sbb
je
test
inc
pop
cmp
in
mov
pop
mov
fisubrl
push
repnz
aad
iret
add
outsl
lret
enter
xchg
push
in
dec
mov
mov
insb
mov
lcall
jmp
fisttpll
sub
inc
adc
ror
mov
sbb
add
stc
sub
cmp
cwtl
add
dec
pop
xchg
sti
mov
mov
pop
sbb
push
roll
hlt
fsubrp
jnp
pop
cmp
fimull
pop
adc
movsl
jno
aas
sbb
xor
cmp
lods
pop
lock
bound
scas
stc
add
lods
mov
lods
pop
add
imul
cmp
stos
mov
mov
cltd
xchg
mov
pop
sbb
xor
cli
hlt
jns
bound
nop
into
negl
jmp
lock
shll
push
dec
dec
dec
xor
jl
xchg
aam
inc
mov
mov
jge
dec
pop
jmp
faddl
popf
xchg
ret
or
sub
xchg
dec
sarl
lcall
cmp
push
cmpl
pop
jno
xchg
out
popa
smsw
hlt
es
jb
call
dec
nop
inc
loop
mov
xor
loope
sahf
into
ds
sub
push
nop
adc
cmpsb
inc
shlb
xchg
lcall
ret
add
jo
das
adc
clc
or
ss
pushf
push
dec
lea
hlt
and
jecxz
jge
sub
lcall
aas
ror
pop
mov
xchg
xchg
loope
mov
mov
ss
rcrl
jnp
lret
jno
outsl
out
mov
sub
pop
adc
aas
mov
je
jmp
or
xchg
popf
imul
ret
test
adc
pusha
mov
outsb
adc
addr16
mov
mov
lods
push
cmp
jmp
mov
jp
loope
push
add
pop
mov
pop
xchg
sahf
dec
repnz
inc
gs
scas
xchg
jns
xchg
dec
dec
fs
or
push
outsl
cmp
out
rorl
and
repz
shlb
sub
mov
jnp
mov
stos
pop
nop
popa
push
ror
lcall
pop
xor
xchg
add
xor
fdivs
cmpsb
out
fistpll
mov
notb
pop
pop
jle
xchg
test
xor
add
fnstcw
xchg
das
dec
ss
out
push
test
push
jg
pop
cmpsl
pop
jb
sub
iret
mov
lret
sbb
sbb
subb
push
sbbl
ds
mov
lcall
call
mov
mov
divl
dec
arpl
mov
mov
ss
xchg
xor
push
pusha
pop
and
lret
push
mov
jo
jne
inc
lret
mov
les
out
jl
movsb
inc
or
cmp
cmp
mov
loope
sbb
adc
mov
addb
js
nop
rcrl
or
hlt
inc
ss
mov
sub
mov
xor
jecxz
xchg
mov
lods
sahf
pushf
mov
sub
dec
or
aad
sbb
add
and
push
shll
mov
inc
ljmp
aaa
insb
push
popa
ffree
pushf
je
xchg
add
dec
xor
jl
lahf
xrelease
cmp
sub
outsb
pop
xlat
fadd
dec
jl
mov
mov
dec
notb
add
pop
lcall
or
and
shlb
aam
lret
or
outsb
xchg
pusha
add
sahf
cld
sub
insb
cmpsl
mov
mov
fsubr
add
jbe
and
in
and
insb
sbbb
scas
push
dec
or
dec
or
repz
into
clc
xor
shl
jg
mov
inc
lahf
adc
add
jge
and
jle
test
cwtl
xor
js
dec
jecxz
lret
cltd
gs
movsl
iret
xor
mov
push
jb
xor
mov
dec
decl
cmp
and
sbb
into
push
adcb
cmp
xor
popf
lock
insl
xchg
ret
sub
test
dec
lret
mov
lds
cmpsl
xchg
movb
mov
xchg
mov
loopne
fwait
jmp
cmp
in
or
lock
adc
xchg
inc
add
repnz
add
dec
dec
dec
stos
add
data16
jg
mov
in
jbe
lods
xlat
je
jo
push
fs
add
pop
loope
pushf
add
test
jle
jp
into
adc
push
mov
xchg
mov
sbb
call
xor
pop
push
sbb
mov
push
xor
push
jb
mov
ljmp
mov
fisttpll
rcrb
adcl
dec
push
mov
inc
add
jg
inc
and
fcomps
sbb
test
mov
sub
sahf
xor
xchg
xchg
jne
or
cwtl
xchg
add
pusha
int
jo
adc
cmc
xchg
or
loop
mov
cmp
jae
push
xchg
aas
in
js
bound
adc
mov
push
adc
shll
mov
pop
xchg
icebp
adc
jb
repnz
shlb
xchg
hlt
out
hlt
pop
lds
pop
jecxz
sub
xchg
and
xor
adc
mov
or
xchg
and
mov
pushf
jnp
adc
mov
xchg
in
mov
pop
lahf
scas
pop
cmpsl
sub
mov
in
xchg
push
lds
sarb
push
jge
int
into
dec
adc
push
mov
pop
int
mov
stos
lock
xchg
popa
nop
mov
sub
fisubrl
shlb
mov
cmp
sahf
enter
or
pop
jb
mov
xchg
mov
and
pop
lea
addl
push
mov
int
push
lods
or
mov
pop
testb
pop
cltd
leave
repnz
js
stos
pop
cmp
pop
push
mov
pop
ret
enter
xchg
push
repnz
xor
xor
push
and
popf
enter
lret
popa
adc
test
mov
xlat
test
out
dec
xor
out
inc
repnz
sub
dec
test
sahf
and
push
jbe
xchg
stos
cmp
jo
jae
xlat
nop
outsb
mov
ror
inc
and
or
lea
addr16
mov
mov
sub
outsb
pop
bound
mov
ds
pop
xchg
mov
imul
adc
or
jmp
or
test
out
mov
je
push
pop
mov
pushf
jl
mov
sbb
jmp
movsl
or
imul
lret
fldcw
xorb
into
mov
mov
pushf
je
daa
inc
mov
mov
pop
popf
push
push
adc
xor
test
pop
pushf
movsl
or
in
ret
xor
cs
jecxz
xchg
icebp
fisubrs
pop
aad
dec
mov
outsb
fimull
lock
inc
dec
ljmp
push
xchg
repz
lcall
insb
jnp
inc
imul
pop
lods
ds
data16
xchg
out
or
jno
mov
cmp
fistpll
mov
add
xor
arpl
sbb
insb
gs
cmpsl
test
mov
test
jp
loope
mov
cld
mov
in
addr16
nop
jne
out
leave
and
std
int
les
dec
dec
pusha
imul
cmp
push
je
xor
xchg
jns
hlt
cmp
inc
or
dec
lret
addr16
es
add
sbb
mov
mov
cltd
loope
xor
xchg
repnz
int
subb
jae
jnp
sub
fcoms
fisttpl
fstl
leave
pop
cltd
push
cmp
push
nop
xor
mov
loop
mov
icebp
jmp
xchg
les
vrsqrtss
fidivrl
mov
push
bound
popa
pop
mov
outsb
jno
subb
ss
xchg
push
imul
fiadds
clc
xor
inc
pop
gs
adc
pop
lahf
add
jnp
xor
sbb
mov
pop
add
jg
inc
or
lret
adc
loope
xor
sub
jecxz
sub
mov
clc
xchg
imul
xchg
inc
sub
or
cmp
add
sbb
lods
xlat
lret
add
ss
jg
mov
sub
ja
cs
push
push
aas
je
hlt
dec
movaps
or
movsl
stos
popf
dec
lea
mov
aad
sub
or
fs
movsb
ret
mov
data16
fistpl
test
mov
adc
or
mov
repz
or
sbb
push
xchg
add
sbb
xor
mov
mov
add
xor
push
jmp
int3
inc
mulb
dec
inc
mov
rcrb
push
mov
call
mov
test
jl
or
into
sbb
sti
movsl
lods
mov
sbb
add
je
and
sahf
das
pop
push
or
fbstp
xor
sahf
cs
xchg
xchg
aad
test
pop
pop
into
mulb
xchg
js
fsubs
fimuls
popf
cmp
push
dec
inc
or
lret
subb
scas
jmp
out
scas
stc
mov
pushf
es
mov
fidivrs
stos
mov
cmc
xchg
mov
xchg
scas
jl
mov
xchg
add
daa
jno
sar
sbb
lods
xchg
sbb
dec
mov
shlb
fisubrs
adc
mov
and
out
popf
jne
xchg
push
insl
pop
loope
mov
mov
mov
push
cmp
jle
xchg
push
ror
cmpb
xor
mov
fsubp
aad
data16
mov
sbb
mov
pushf
mov
xor
into
or
imul
imul
jne
stos
in
sub
push
lea
sbb
push
sbb
sub
ret
in
stos
push
movb
stos
out
into
dec
test
insl
xchg
mov
or
pop
fstl
mov
mov
mov
ljmp
jno
sbb
cmpsb
push
imul
xor
lahf
mov
inc
mov
bswap
aam
dec
jo
rcr
into
cmp
pop
insb
xchg
xchg
stos
push
xor
sbb
xor
pop
enter
int3
ss
jns
fstl
mov
outsb
jo
sub
movsb
mov
push
nop
cltd
add
jb
aas
imul
in
mov
dec
fldt
inc
adc
lcall
jge
inc
loope
fbld
insl
stos
dec
cmp
add
movsl
pop
out
push
pusha
movb
xchg
std
mov
cli
sub
dec
and
daa
mov
mov
push
fdivrp
pop
inc
push
dec
pop
sbb
fistl
les
push
outsb
lret
notb
sbb
cmp
xchg
or
push
xchg
mov
pop
add
sbb
pop
es
xlat
rcll
adc
sub
adc
ret
adc
mov
and
xor
inc
mov
sbb
jg
out
out
pop
ljmp
push
mov
loop
stos
ja
ret
out
popl
mov
in
xlat
sub
mov
sbb
fldl
add
cmp
jae
add
sahf
push
push
and
and
sbb
les
in
stos
int3
jnp
shlb
push
dec
xchg
xlat
add
lock
andb
gs
in
fucom
xor
sub
cmp
adc
and
push
outsb
aad
lcall
mov
sbb
mov
mov
movsb
jb
sub
hlt
inc
inc
dec
fldcw
jbe
inc
xchg
ds
dec
jo
ja
testb
fabs
lcall
ret
sbb
sbb
cmp
fidivrs
add
fwait
mov
aaa
popa
daa
mov
js
gs
mov
mov
pop
fsts
mov
inc
or
xor
pop
cmpsb
adc
and
and
clc
cmp
push
aad
data16
dec
gs
xchg
mov
xchg
sbb
xor
insb
cmp
add
aaa
adc
std
xchg
and
fstp
movsb
mov
rorl
pushf
leave
mov
jl
mov
xor
icebp
dec
mov
scas
in
xor
sarl
pop
push
scas
adc
fcoml
adc
jmp
fidivrs
push
mov
cwtl
je
jo
jnp
nop
mov
mov
adcl
inc
out
cmc
divb
popa
mov
push
cmp
push
cld
adc
and
xchg
movsb
add
dec
push
mov
mov
mov
inc
sub
cmc
bnd
icebp
cmp
push
ficoml
pop
cmpsb
sub
pop
fiaddl
test
push
out
xchg
inc
adc
jg
mov
sbb
push
mov
dec
outsl
ficoml
outsl
jno
stc
fwait
movl
dec
pop
pop
jns
aad
jno
gs
sbb
dec
push
cmpsb
mov
movsb
pop
inc
out
faddl
aaa
inc
aad
popl
adc
lret
outsb
sub
rorl
loopne
sub
push
mov
and
inc
or
out
or
xor
mov
and
add
dec
pop
stc
in
call
mov
dec
xchg
inc
adc
das
push
out
iret
push
mov
sbb
cld
jnp
xchg
xor
push
jecxz
rcrb
inc
call
dec
in
xor
sarl
iret
mov
lods
pop
jno
in
cmp
mov
sub
mov
shll
dec
cld
pop
lret
leave
sub
icebp
jae
push
sarl
pop
jle
fdivrl
sbb
mov
ss
lock
aas
mov
mov
gs
pop
stc
shll
fiaddl
hlt
jl
adc
xchg
mov
stos
out
outsl
icebp
das
xchg
mov
xchg
mov
js
idivb
sbb
and
dec
pop
mov
lods
add
push
sar
mov
push
mov
ror
jp
out
les
dec
mov
sub
cs
mov
jo
idivb
fnstsw
lahf
stc
jno
jb
jle
movsb
mov
pop
and
jp
adc
mov
movsl
mov
data16
sub
movsb
cmpsl
pop
inc
testl
inc
jle
lock
je
test
jl
jnp
fldenv
push
filds
dec
orl
clc
sbb
arpl
insb
mov
dec
test
fistpl
xor
popa
sub
and
lds
dec
mov
mov
push
mov
dec
out
les
gs
xchg
gs
inc
repz
pop
xchg
movsb
scas
mov
sbb
push
mov
aad
push
mov
cmp
popa
lcall
rclb
mov
mov
in
or
loop
ret
sbb
addr16
ljmp
cmpsl
inc
repz
or
jp
sarb
fs
pop
dec
incb
mov
les
lea
int3
dec
cmpsl
repnz
in
cwtl
or
nop
loop
add
movsl
sub
call
jnp
pusha
xchg
fists
dec
adc
repnz
inc
dec
mov
jmp
int
adc
push
call
inc
dec
push
cmpsl
mulb
cmp
push
mov
icebp
push
lods
cmp
and
pop
cmp
lret
sbb
imul
rcr
and
adc
cmp
mov
pop
cs
xchg
adc
loope
lock
push
sbb
jne
fbld
pop
dec
loope
jecxz
jge
out
mov
test
pop
loope
xchg
fbld
movsb
mov
jmp
cltd
ljmp
pusha
xchg
imulb
dec
push
in
sub
int
mov
ror
dec
adc
out
fbstp
mov
shrb
mov
insl
cmp
stos
mov
push
and
je
jmp
pop
inc
loop
adc
adc
xchg
dec
jl
out
mov
adc
pop
dec
push
cmpsb
mov
into
cmc
imul
mov
ds
outsl
adcl
repnz
and
das
inc
sub
test
cmp
out
dec
pop
rcrl
aam
jge
into
dec
nop
push
jl
sti
pop
in
leave
jno
mov
dec
push
xor
push
xor
sti
mov
push
test
inc
movsb
adc
jb
or
mov
push
sti
lret
pop
ds
cmp
dec
mov
push
test
popf
pop
jmp
in
shl
mov
mov
faddl
adc
xlat
jo
push
lock
movsb
jae
mov
mov
dec
add
sub
xchg
xor
pop
js
xor
dec
xor
cs
test
testl
fs
dec
mov
dec
fistpl
sbb
xor
or
faddl
mov
out
movsb
loopne
das
add
mov
and
orb
mov
push
cwtl
push
mov
adc
mov
mov
dec
mov
jecxz
add
mov
cmp
das
rcll
test
ret
pop
adc
pop
call
jnp
cmpsb
clc
cmp
int3
rorb
icebp
jg
inc
adc
sub
dec
adc
ret
push
mov
jecxz
shll
mov
lds
fisttpll
sbb
lar
sub
rorb
fs
adc
xchg
mov
fwait
nop
mov
in
popw
testl
test
sub
pop
pop
nop
mov
mov
enter
xchg
push
std
mov
ds
icebp
dec
jge
imul
sti
jnp
lret
cmp
and
mov
ljmp
pop
lock
in
jnp
lea
pop
inc
ret
les
add
ret
idivb
cmc
stc
std
fildll
inc
adc
xlat
arpl
pop
test
fwait
inc
leave
jge
xchg
loopne
call
test
add
pusha
fs
test
out
fs
imul
je
les
inc
cmpsl
jp
repz
fnsave
mov
xor
aaa
leave
aam
lahf
shll
sbb
dec
ja
aam
std
dec
cmp
jmp
sub
in
xchg
shlb
xchg
xchg
test
adc
mov
cwtl
xchg
insb
jnp
enter
fldcw
sub
mov
testl
test
aam
xor
js
jp
inc
adc
dec
dec
cmp
sub
xchg
adc
lock
push
fidivrl
sbb
push
test
leave
xor
pop
in
pop
sti
imul
imul
push
inc
xchg
or
call
sbb
cmp
mov
fsub
push
xchg
mov
iret
sub
pop
mov
mov
mov
decb
jmp
mov
int
loop
into
pop
xchg
test
sbb
arpl
cmpl
arpl
cmpsb
out
pop
mov
mov
pop
popf
in
inc
out
mov
sbb
push
addr16
lret
fcomps
ja
mov
arpl
fisttpll
mov
jne
push
lret
aaa
mov
xchg
nop
lahf
mov
pop
mov
addl
mov
cmp
mov
or
jns
test
sbb
lcall
testb
ja
xor
imull
cmp
mov
cld
jge
push
cmp
stc
adc
mov
add
cwtl
mov
xor
ret
add
and
lods
mov
adcb
das
shll
sub
push
add
inc
lds
das
inc
fs
or
push
jl
iret
push
push
stos
popf
scas
push
sub
iret
arpl
imul
inc
bound
fnstcw
push
inc
adc
pop
insb
shlb
jp
iret
jns
and
subb
push
hlt
and
lahf
add
test
je
push
fldenv
fwait
sbb
lods
jecxz
inc
pop
push
lock
mov
sub
sahf
loopne
lods
dec
cld
js
cmp
dec
lret
pop
or
dec
test
mov
decb
rcll
les
cltd
dec
mulb
inc
xchg
stos
je
jno
mov
push
arpl
push
call
into
add
ljmp
pop
or
pop
mov
jbe
stos
lock
inc
and
push
add
aad
ds
fcoml
lret
daa
jl
mov
add
enter
dec
push
mov
cmpsl
rcrb
pop
das
and
std
xchg
shll
pop
sbb
cltd
mov
popf
out
or
subl
push
sahf
loopne
bound
aam
ret
dec
imul
mov
xor
push
add
movsl
push
cmp
orl
js
pushf
xor
inc
cmp
sbb
out
xchg
and
cmpsl
jl
cwtl
adc
cmpsb
jl
mov
outsl
fmuls
movsb
sahf
imul
push
cmp
out
leave
cwtl
adc
pop
jb
push
jns
sti
std
aas
push
js
out
push
mov
or
negl
adc
xor
mov
idiv
or
pop
icebp
imul
std
inc
call
and
in
push
or
xchg
aas
or
mov
dec
mov
test
or
jbe
pop
sub
sbb
xchg
sub
inc
test
sbb
jge
lds
ja
pop
fcomip
loopne
popf
sub
push
test
ds
out
xor
pop
clc
mov
in
fadds
insl
adcl
pop
lahf
dec
fsubs
stos
jp
dec
and
aam
cmpsl
sub
cmpsl
pop
std
not
mov
jae
imul
cs
dec
decl
pop
sahf
hlt
jge
daa
into
mov
push
jns
jo
pop
icebp
inc
call
rol
jle
cmp
push
daa
gs
data16
or
sub
mov
jno
mov
aaa
adc
sbb
lret
fxch
push
inc
je
movsb
out
xchg
inc
and
sub
pop
push
fdivrs
push
stc
mov
xor
nop
push
je
mov
fwait
push
pushl
mov
icebp
mov
mov
subb
jbe
and
cmpsl
pop
mov
in
push
out
sahf
push
mov
nop
das
lret
inc
fs
xlat
test
xor
mov
sahf
mov
inc
movsl
xchg
or
mov
xor
jno
js
add
push
dec
ret
lahf
cmp
cmp
rolb
sbb
outsl
and
sub
mov
jae
jg
pop
add
shl
push
shr
pop
loop
hlt
lds
insl
icebp
insb
fcoml
sbb
filds
inc
inc
push
mov
insb
fdivrl
mov
and
repnz
sbb
mov
mov
jge
addb
mov
jle
cmp
mov
ret
and
xchg
add
add
mov
xchg
out
in
ja
aad
rclb
cli
mov
mov
adc
or
push
xor
jnp
es
dec
jge
mov
lds
dec
add
jp
gs
cltd
mov
lahf
les
mov
in
and
inc
shl
or
imul
inc
shl
cmp
pop
jno
mov
ss
push
bound
cld
sti
inc
xchg
negb
insb
xor
xlat
repnz
add
mov
add
lcall
and
xchg
jl
and
pop
loopne
ja
mov
imul
sub
cmp
hlt
push
fcmovne
push
scas
rolb
ja
adc
or
add
outsb
popa
jp
sbb
mov
insl
xchg
xlat
or
andb
imulb
ja
sbb
xchg
scas
dec
scas
roll
sbb
fucomip
ret
and
fwait
pop
movsb
mov
ja
fbstp
add
nop
test
mov
repnz
and
fcomi
pop
cmp
add
dec
add
pop
and
nop
fwait
mov
cld
sbb
or
and
shlb
scas
add
jmp
and
push
fimull
popa
loopne
sbb
mov
push
sbb
test
dec
inc
js
in
inc
cmp
xchg
add
xchg
mov
mov
lret
cmp
sahf
rclb
repz
decl
push
lods
dec
int
imul
push
fwait
out
test
adcb
add
sub
ljmp
and
ja
dec
lock
out
mov
arpl
cmp
enter
rep
fs
and
adc
js
inc
add
jb
push
ja
cmp
pop
loop
stc
ljmp
dec
add
fprem1
mov
xchg
mov
lea
ds
scas
push
cmp
in
sbb
loope
sbbb
movsb
insl
sbb
cmp
mov
add
adc
scas
mov
mov
in
adc
sbb
adc
insl
outsl
dec
in
fstpl
and
orl
int
std
push
ja
test
inc
test
popf
or
add
sbb
mov
imul
xor
inc
movsl
pop
movsl
push
bnd
filds
jb
or
adc
cmp
or
mov
mov
pop
and
mov
push
cli
mov
stc
test
aas
and
sbb
adc
sarl
cld
dec
mov
negl
aaa
cmc
and
jo
lcall
adc
dec
stos
repnz
and
fimuls
inc
sub
mov
sbb
jge
iret
je
or
xchg
notb
xchg
cld
or
das
mov
call
fld
insl
or
sbb
jno
dec
and
dec
inc
or
scas
loope
push
mov
nop
and
lea
insl
xor
jno
cs
xchg
or
int
mov
mov
arpl
test
and
sub
push
sub
shr
ficoml
cltd
aad
stos
xor
pop
popa
xchg
push
es
pop
dec
dec
xor
lds
mov
or
jmp
add
jns
inc
aas
int
loop
inc
arpl
dec
das
dec
mov
push
fwait
fwait
cmp
in
fsubs
pop
jmp
sbb
or
ret
pushf
ss
mov
addr16
data16
fdivs
xchg
rorb
in
lds
push
scas
fistl
pop
dec
sbb
daa
cltd
mov
outsl
inc
lock
cmp
rolb
mov
insb
test
insb
mov
sub
xchg
mov
vminss
sti
mov
mov
add
mov
jnp
or
roll
xchg
jne
mov
stos
rcll
int3
ror
lds
fists
cmc
sarb
cmp
mov
sub
stos
mov
sub
in
xchg
cmpsb
mov
and
or
cmpl
mov
sub
and
sbb
add
sahf
xlat
fs
xor
lods
and
xchg
call
jg
adc
test
lcall
inc
inc
inc
sub
mov
adc
cmp
sbb
sbb
xor
inc
cwtl
push
scas
test
cmp
mov
fistps
xchg
mov
ljmp
ja
jae
test
mov
hlt
jnp
decl
dec
add
push
dec
mov
mov
movsb
sbb
dec
shll
jl
rorb
cwtl
mov
int
push
imul
cmp
daa
xchg
sbbb
pop
nop
inc
lret
idiv
add
inc
pop
push
sub
mov
mov
mov
ret
dec
leave
repnz
ja
push
nop
loope
mov
sahf
int
inc
es
push
pop
in
stos
insl
lods
jno
scas
js
push
int3
dec
movsbl
js
sbb
mov
mov
cmp
xchg
cmp
inc
jbe
or
insl
ja
mov
mov
jne
stos
enter
xor
leave
adc
adc
pop
mov
jb
add
mov
dec
mov
inc
sbb
pop
aaa
mov
mov
jg
push
adc
aad
pop
shlb
xchg
sahf
jo
sbb
or
or
out
dec
cmp
jne
fmuls
push
jle
inc
dec
mov
repnz
repz
out
arpl
xchg
mov
dec
jae
or
add
aaa
popf
xchg
lds
popf
imul
adc
jb
fwait
outsb
push
imul
mov
repz
sbb
dec
push
mov
aad
and
fwait
test
testl
nop
mov
insl
enter
jb
loope
shlb
imul
leave
mov
push
cmp
jbe
add
mov
insb
fiaddl
ret
xchg
std
jnp
jg
popa
dec
jae
fadds
sub
bound
push
loop
lret
mov
and
mov
xchg
and
cmp
jmp
mov
imul
shlb
inc
adc
mov
sbb
pop
mov
adc
cs
nop
mov
and
iret
sub
fistps
inc
call
mov
mov
ret
ret
icebp
fcos
jo
push
les
int
pop
mov
es
dec
test
push
push
sub
pop
pusha
sbb
inc
cmp
cmpsl
jecxz
xor
mov
addb
or
xchg
xor
cmp
aad
imul
and
ret
popa
or
repnz
ja
sub
fsubr
add
mov
ret
mov
adc
dec
adc
dec
jbe
gs
test
sub
jnp
in
add
push
addr16
cs
imul
push
inc
sbb
mov
mov
jne
and
fidivl
test
push
call
cld
mov
test
dec
dec
aam
mov
sub
jb
dec
popa
xor
add
sbb
stos
ret
lock
fisubrs
jp
push
mov
gs
pop
pusha
mov
das
and
sbbb
cmp
test
mov
std
fwait
jnp
test
adc
out
mov
push
fiaddl
bound
enter
sbb
aaa
xchg
or
fs
fstpt
int
adc
in
jl
xor
loop
push
aas
dec
push
sbb
xor
rcl
es
adc
enter
loop
lods
xor
push
imul
ja
pop
and
sti
sbb
inc
push
adc
mov
inc
lods
test
jge
stos
xchg
and
pop
int3
mov
icebp
divb
pop
out
fwait
aas
push
or
inc
and
mov
and
iret
jae
out
adcl
mul
sub
sub
push
insb
out
push
sbb
shll
cmp
out
and
mov
mov
aas
mov
lahf
outsl
fcomps
pop
jecxz
mov
cmpsl
pop
push
or
addr16
das
cmp
sub
and
pusha
dec
lock
lock
into
dec
push
iret
rcll
jnp
push
sub
inc
ret
pop
sti
sti
fistpll
jae
lea
into
mov
jnp
repz
push
push
das
stos
adc
aas
pop
ret
jecxz
cli
popf
outsl
out
gs
and
aas
fimuls
outsl
xchg
sbb
in
movsl
das
sbb
pop
movsl
mov
addr16
adc
push
jns
fdivr
xor
subb
sub
jecxz
pop
mov
popa
jg
insb
jmp
ffreep
xor
mov
loope
dec
mov
pop
pop
push
hlt
xor
mov
push
js
push
movsl
gs
xchg
arpl
out
pop
inc
enter
pushf
jns
push
icebp
fdivr
popa
push
lret
xorb
mov
cmp
xor
adcl
orl
sub
push
out
pop
rol
subl
or
sub
addr16
sub
into
negb
mov
mov
popa
cli
xchg
andl
pop
fs
jp
cmp
jbe
movsl
fidivrs
cli
outsb
sbb
push
inc
inc
push
mov
jecxz
sbbb
mov
mov
fwait
adc
dec
pusha
xchg
aad
xchg
pop
mull
push
jb
shlb
mov
cmc
push
cmpsl
jae
into
and
daa
out
dec
ljmp
repnz
movsb
mov
mov
mov
inc
in
fwait
in
ss
pusha
mov
inc
cmp
pop
in
mov
test
rorb
test
inc
jge
push
dec
cmpb
imul
cli
cmp
sbb
inc
dec
rorb
lods
pushf
xchg
mov
imul
cmp
xlat
out
mov
in
ja
jo
movl
fcoms
mov
loope
jle
mov
jl
inc
cli
hlt
fwait
push
stos
popa
das
fs
stc
jg
xor
push
cmp
into
inc
imul
or
movsl
mov
lods
xor
dec
xchg
lea
jns
sub
mov
hlt
test
fwait
stc
or
add
scas
mov
pop
xchg
xor
iret
ficompl
cs
imul
insb
xchg
inc
jae
push
aad
xor
add
movsl
push
push
push
mov
test
shlb
mov
add
cli
lock
mov
nop
push
fcomip
shr
adc
les
dec
sbb
sbb
gs
inc
sub
ret
iret
pop
jle
sbb
push
enter
cli
lock
fisubl
lahf
aaa
lret
cli
pop
push
push
mov
push
push
dec
rorb
stos
mov
ds
stc
fs
and
add
jmp
pop
or
add
mov
negl
ja
xor
xchg
bound
xchg
mov
lcall
and
push
jns
mov
pop
and
fildl
pop
add
jge
xchg
repnz
fistpl
aad
fimuls
out
bound
or
dec
repnz
lods
arpl
pop
pop
aas
inc
mov
fcmovnu
insb
scas
and
xchg
xchg
insb
sbb
call
arpl
shl
shl
cmc
jno
push
xor
mov
xchg
jge
loop
scas
std
pop
sbb
push
adc
mov
inc
leave
pop
das
loop
adc
xchg
into
or
mov
cmc
cmpl
push
adc
movsl
pushf
and
in
jg
or
lock
fmuls
jmp
in
repnz
shlb
mov
jle
mov
popf
cld
cmp
sub
pop
xchg
and
dec
push
test
pop
nop
sbb
insb
dec
rcr
mov
adc
push
es
bound
test
lret
lcall
add
jp
stc
ret
adc
pusha
sub
xchg
idivl
dec
xor
jmp
inc
fists
xchg
sub
xor
inc
inc
std
cmpb
ja
inc
in
pop
ficompl
gs
and
int3
and
xchg
mov
xchg
xchg
imull
test
jnp,pt
mov
or
add
xchg
jae
in
jg
bnd
adc
inc
popa
jecxz
adc
pop
mov
adc
inc
fnstenv
ljmp
push
jecxz
cmpsl
pop
jo
sub
imul
call
mov
cli
sahf
clc
inc
mov
dec
in
jo
xor
pop
or
and
jae
int
xchg
fsubrs
adc
jb
add
inc
jle
adcl
cld
pop
cmp
addl
jne
pop
movsl
arpl
adc
adc
pop
adc
xchg
push
mov
ss
and
push
cli
arpl
push
lea
pop
shl
xchg
jge
mov
test
push
push
xchg
xchg
dec
leave
add
jbe
or
out
mov
call
adc
jae
jno
pop
loop
push
jle
popa
sarb
das
xlat
cmp
es
mov
outsb
jmp
movsb
push
aaa
ljmp
jmp
aaa
stc
push
cmpb
jmp
and
in
pop
loopne
add
setae
mov
pop
popa
gs
sub
cltd
xor
imul
push
pop
mov
arpl
jmp
movzwl
ja
jno
sbb
lods
stc
faddl
inc
sbb
jl
xchg
pop
jecxz
imul
pusha
pop
jmp
push
icebp
mov
call
mov
fwait
in
daa
pop
xor
popa
inc
push
sbb
sbb
adc
sti
sub
xchg
xchg
std
push
mov
push
fdivl
pop
mov
adcw
xchg
xchg
add
test
loope
jbe
xchg
fsts
faddl
xor
shr
das
popa
sub
adc
bound
xor
xchg
pop
pop
adcl
iret
sub
sub
adc
outsl
hlt
arpl
inc
icebp
ds
loopne
sti
cmp
pushf
inc
enter
mov
outsb
out
ret
lods
dec
notl
adc
fnstsw
aam
jnp
jbe
mov
arpl
test
fdivrs
dec
dec
or
fwait
adc
lock
loop
push
sbb
sub
bound
fwait
mov
daa
lret
repz
adc
negb
aas
iret
into
sub
inc
xor
int3
outsb
mov
or
dec
mov
aam
mov
stc
pushf
in
aam
popf
add
pop
dec
xlat
aaa
rcll
es
jne
shlb
mov
sub
lret
leave
int
pop
mov
rcll
lods
fnstsw
and
push
jnp
into
mov
pop
movsb
jp
andl
enter
fs
fldl
mov
push
out
mov
daa
dec
daa
mov
push
int
fsubr
xlat
and
addb
jns
jmp
cmpl
pop
mov
shlb
repnz
inc
fistpll
mov
sub
out
movsl
scas
int
lahf
shl
sti
in
imull
gs
push
jg
sub
daa
adc
jmp
add
adc
mov
mov
sti
insl
xchg
mov
cmpsb
adc
push
or
into
fcmovu
fldt
and
mov
or
in
aas
adc
sub
je
leave
pop
test
ljmp
adc
out
pusha
push
in
fdivs
and
or
pusha
push
ja
scas
cwtl
nop
and
test
mov
pop
mov
bound
les
cmpl
cmpsl
out
sti
xor
bound
mov
push
pop
mov
cmp
sbb
into
add
xchg
out
push
cltd
or
lods
jns
ss
es
jne
mov
lock
rcll
push
dec
fmuls
mov
test
and
sub
outsl
aad
fnsave
and
xchg
punpckhwd
cmpsl
fwait
jno
xchg
sar
xchg
adc
int
in
push
in
push
xor
ds
jg
mov
rclb
inc
xchg
rorl
mov
int
mov
fldenv
sbb
mov
cwtl
sti
pusha
mov
sbb
and
rcrl
stc
sbb
push
cmp
adc
inc
addb
imul
push
mov
push
jg
loope
and
add
pushf
cltd
out
aas
inc
cmp
sti
push
cmpl
mulb
loope
xor
jbe
xor
clc
add
out
aaa
or
repnz
int3
or
inc
cmp
in
scas
stc
jne
mov
jbe
ret
leave
loopne
ja
fisubrl
inc
iret
mov
cmp
mov
sbb
out
mov
lods
sbb
mov
in
addr16
pop
and
mov
push
or
mov
mov
scas
sub
jge
rcrb
stc
mov
add
mov
jg
push
outsl
imul
and
jmp
pop
sahf
out
xor
and
pop
and
shlb
pop
sti
adc
mov
in
adc
mov
into
adc
sahf
or
cs
push
sahf
xor
mov
push
stos
test
cmp
jge
ret
stos
and
int3
xchg
outsb
pop
push
ss
loop
in
jbe
hlt
popf
cwtl
rorl
das
cmp
pop
loope
out
cmc
mov
sub
push
push
outsb
and
sbb
push
bnd
jns
ds
xchg
call
push
cmp
call
add
leave
sbb
xchg
clc
mov
inc
shl
sbb
jnp
adc
fwait
rcr
and
dec
mov
call
fildl
or
mov
and
inc
es
std
arpl
pop
push
jmp
movsl
data16
or
pop
push
popa
jmp
pushf
int
test
xchg
xor
xchg
fidivrs
inc
inc
adc
test
outsl
jnp
jnp
sub
sub
aam
iret
push
in
daa
insb
push
jo
in
sub
add
insl
xor
and
sar
sub
std
aas
adc
mov
xor
jge
push
mov
jmp
cli
cs
pushf
push
lcall
mov
fs
mov
mov
sub
xor
or
lods
rol
mov
and
cmpsl
sbb
inc
iret
xlat
jns
cltd
sbb
cmpsb
shlb
adc
call
push
iret
addr16
les
pop
add
stos
xor
add
out
sub
mov
pop
sub
xor
and
lds
rcrb
pusha
jns
inc
cli
and
repz
jo
dec
mov
mov
inc
mov
pop
jmp
xchg
xchg
inc
jg
stos
fisubs
adc
mov
add
flds
xchg
jmp
ss
dec
lret
movsb
dec
mov
addr16
repz
add
fcmovne
cmp
ljmp
in
mov
das
mov
in
cmp
int
mov
cmp
mov
adc
or
mov
outsb
jl
int3
mov
fs
frstor
int
xor
fdivr
mov
addr16
pop
xchg
hlt
adc
mov
xchg
xor
and
sub
pusha
int
icebp
mov
xor
cli
les
xor
in
sti
push
adc
sub
dec
adc
dec
mov
or
fisubrl
mov
mov
pop
adc
rcll
fbld
or
or
das
inc
and
pop
cli
lea
jp
int3
jg
fisubrs
and
push
jb
icebp
mov
aad
dec
push
pop
hlt
stos
cwtl
cli
stos
inc
push
icebp
adc
pop
adc
aaa
mov
jg
rolb
mov
scas
add
insl
mov
test
fs
hlt
mov
inc
pop
int
sub
dec
movsb
fisubrl
out
pop
insl
jb
mov
jmp
inc
icebp
or
xchg
adc
pop
pop
sbb
sub
push
jne
jecxz
or
popf
pop
cs
xlat
jge
push
inc
xchg
pop
lahf
push
xchg
dec
shlb
ret
push
sarl
xchg
jle
rcll
dec
insb
in
or
in
mov
jecxz
push
pop
adc
loopne
sti
dec
mov
popa
xor
xor
xchg
mov
adc
push
rcr
sbb
or
cmp
lcall
mov
pushf
mov
xchg
inc
mov
popf
js
push
fwait
enter
sbb
insb
jae
xor
pop
cmp
adc
out
dec
mov
mov
gs
mov
outsb
jmp
das
pop
sub
lods
cmp
out
lret
mov
mov
xchg
lahf
mov
jp
in
and
sbb
mov
inc
int
repnz
push
fadd
ror
insb
test
inc
mov
enter
cmp
jb
fbstp
icebp
add
sar
movsb
or
out
xchg
cmp
push
loop
pop
jbe
stc
out
out
inc
xchg
incl
sbb
scas
sub
daa
dec
ss
in
test
lods
test
inc
inc
push
cmc
sub
icebp
pop
pop
inc
dec
cmp
int3
orl
insb
iret
hlt
sbb
cmc
jns
sti
xlat
cmp
and
insl
negl
jns
into
fmull
add
pop
mov
or
sub
push
pop
sahf
adc
gs
push
subl
pop
adc
loopne
pop
xor
nop
lret
aam
push
sbb
sbb
cmp
and
cmp
adcl
mov
fdivrl
push
and
xchg
ljmp
fdivrl
imul
je
das
adc
pusha
mov
int3
ss
jl
inc
inc
pop
rcrb
xchg
ja
jl
repz
scas
arpl
inc
sbb
jno
mov
sbb
jae
jmp
mov
ret
cmovne
mov
pop
lds
mov
je
ja
loop
js
adc
add
lret
jg
test
xchg
dec
sti
je,pt
pusha
lret
aas
sbb
imul
fwait
ja
pop
lea
adc
mov
push
arpl
scas
daa
shrl
jns
out
sbb
xor
push
lret
jmp
and
es
and
push
outsl
jmp
rol
fbstp
fcomps
loopne
pusha
cmp
pop
pop
or
mov
loop
add
jecxz
adc
testl
leave
add
mull
sub
sub
sub
or
mov
in
or
mov
movsb
pop
add
xor
scas
xchg
cwtl
push
sub
js
ret
pusha
lea
or
stc
jb
inc
jno
pop
sub
push
outsl
les
adc
xchg
movsl
in
cs
or
lods
out
cwtl
insl
or
jle
ljmp
push
fwait
push
jp
add
es
jecxz
and
mov
pop
out
push
lock
jns
inc
mov
mov
mov
dec
cld
icebp
push
mov
xchg
lods
cmp
bound
pop
mov
jmp
in
add
jbe
fstpt
cmp
int3
jae
xchg
sub
push
outsl
fisttpll
out
xchg
test
mov
ds
and
add
sbb
cmp
adc
ret
insb
mov
or
mov
arpl
push
pusha
je
cmc
and
sbb
push
or
or
aad
cwtl
inc
in
inc
or
aam
out
jb
fwait
dec
push
or
sbb
adc
lds
in
test
jg
xor
pusha
ja
loope
push
dec
arpl
mov
das
lret
or
pop
pop
push
inc
pop
sahf
inc
jne
bound
ljmp
ror
lods
rcl
mov
xchg
jo
pop
mov
adc
pop
jb
mov
jnp
push
icebp
xor
ds
push
es
sbb
dec
sbb
mov
mov
mov
adc
or
push
ja
push
clc
sbb
ja
popf
hlt
mov
and
or
and
lods
jbe
mov
pop
hlt
or
into
pop
shrb
imul
mov
cmp
outsl
scas
nop
ficompl
push
push
dec
jns
pop
popa
out
push
lret
push
in
ds
push
push
sbb
inc
addr16
je
outsl
nop
sahf
bound
loop
push
es
mov
and
nop
mov
mov
cmp
in
xor
pop
or
pop
aam
inc
xor
add
lret
out
ss
loop
xchg
mov
movsl
shll
mov
mov
dec
cmp
and
xor
xor
mov
aad
aam
imul
shll
jecxz
inc
push
dec
popa
jno
in
lcall
cmp
pop
jae
aas
or
outsb
inc
ret
pop
mov
sub
pop
insl
in
jbe
adcl
mov
pop
or
cld
jecxz
inc
mov
sub
mov
lahf
out
test
cmp
cmpsb
mov
addb
add
or
pop
adc
imul
sbb
cmp
add
push
jae
dec
in
and
dec
outsb
fdivrl
and
mov
push
stos
int
push
mov
jl
sbb
mov
insb
sbb
sarb
push
cli
les
loope
sbb
jl
sub
adc
aam
mov
mov
popf
jp
mov
push
testb
pop
int3
scas
sbb
test
mov
insb
popa
outsl
and
rorb
rclb
mov
and
push
jbe
mov
mov
mov
push
rolb
fidivrl
shrl
ss
mov
shrl
test
iret
dec
daa
jns
cmc
jnp
xor
dec
scas
imul
dec
pop
jo
inc
popa
push
inc
dec
jne
jge
stos
mull
daa
mov
dec
notb
mov
mov
xchg
dec
cmp
std
push
sbb
movsb
ror
pop
and
daa
shlb
js
adc
sbb
out
out
mov
xchg
cs
sub
inc
pop
roll
inc
xchg
imul
or
adc
arpl
stos
adc
fmul
add
sbb
dec
hlt
xchg
andb
or
inc
cmp
insl
iret
mov
adc
test
and
mov
lret
mov
shrl
inc
dec
xlat
out
add
mov
out
xchg
in
push
sbb
fbld
cmp
inc
sti
int
push
jp
sub
daa
stos
cmp
push
movsl
negb
jns
dec
adc
push
dec
in
into
adc
push
lret
jns
popa
outsb
sbb
call
mov
int
fisubrs
cmc
mov
inc
lret
js
scas
pop
in
inc
jp
mov
add
das
xor
test
aad
mov
sub
repz
cs
imul
pop
pop
repz
xor
daa
and
in
lahf
jp
fsubrl
adc
jnp
inc
out
mov
mov
mov
stos
aaa
mov
jp
cmpsb
inc
or
sbb
jg
outsl
lcall
clc
scas
dec
call
lea
xchg
mov
jmp
jno
xchg
add
cs
iret
popa
mov
test
ljmp
xchg
sbb
out
xor
mov
mov
es
ret
sbb
ret
pop
scas
jb
nop
gs
data16
dec
mov
cltd
adc
push
mov
aam
cwtl
insl
jp
gs
jbe
jae
push
sub
cmp
test
or
push
dec
mov
mov
imul
inc
arpl
movb
or
pop
popf
addr16
imul
pop
out
icebp
daa
sub
mov
mov
mov
push
icebp
xchg
int
mov
es
inc
push
sbb
fwait
jmp
pop
in
mov
loope
dec
test
ds
std
pusha
and
fstpl
mov
sub
psrlq
addl
mov
mov
aam
popa
push
addl
sub
fcmovu
jge
inc
rcrb
stc
xchg
addb
xchg
xchg
mov
fs
clc
outsl
jle
jmp
pop
dec
and
bound
add
bnd
lods
adc
sbb
sbb
jg
enter
adc
mov
mov
lea
mov
cmc
cmp
mov
xchg
or
mov
out
mov
xchg
out
xor
fsts
popf
dec
jne
jp
mov
jl
cli
lods
and
jno
je
not
data16
inc
mov
rorb
ljmp
cmpb
icebp
test
mov
arpl
cld
or
sub
or
inc
rclb
ret
lock
sbbl
mov
pop
xor
inc
cmpsb
jge
jo
push
aaa
lods
dec
and
mov
cltd
add
icebp
pop
mov
addr16
mov
or
clc
ss
add
mov
jp
rcll
mov
pusha
cmp
cld
mov
lock
sbb
aam
xor
sti
jecxz
clc
add
imull
rcrl
xor
test
sarl
and
test
mov
pop
push
test
fldt
lock
iret
divl
cmp
inc
shlb
dec
ljmp
mov
cmp
or
cmp
pop
sbb
std
out
push
bound
sti
ror
jle
inc
add
push
and
xor
and
sbb
ret
push
sti
pop
sahf
std
es
in
movsl
sub
mov
pusha
jge
xor
mov
adc
push
push
les
mov
jge
aas
in
inc
dec
mov
sub
subl
clc
pop
mov
cltd
faddl
sbb
and
mov
xor
int3
aad
pop
inc
sbb
inc
sbb
add
cmpsb
sub
jnp
leave
sbb
addl
faddl
mov
fsubrl
add
sarb
imul
cmp
ds
sbb
lock
dec
jno
jecxz
sub
sbb
xor
int3
mov
ret
jno
xor
arpl
add
outsl
dec
outsl
lds
xor
sti
mov
or
jle
push
jp
dec
call
jno
in
inc
inc
daa
pop
fdivrs
in
adc
xor
lods
adc
xchg
clc
sbbb
mov
inc
add
bound
rorl
xchg
add
push
es
je
vlddqu
cmp
jmp
mov
cli
xor
pop
jmp
cmp
ja
xchg
div
out
in
mov
fs
lcall
sti
cwtl
xor
lret
xchg
sbb
mov
call
sbb
xor
mov
fldt
in
lods
jns
int
jl
cmp
dec
xchg
xchg
test
pop
ss
stc
jl
nop
inc
lock
stc
mov
mov
dec
repnz
jge
mov
pop
mov
out
cmp
xor
fcom
movsl
adc
push
fwait
out
lods
mov
out
and
adc
shlb
rcr
pop
iret
inc
inc
sbb
leave
jp
xchg
inc
mov
arpl
xlat
stos
stc
push
mov
stos
sbb
dec
shlb
push
jge
mov
wbinvd
sub
mov
idivl
les
xchg
sahf
adc
mov
dec
or
cmpl
hlt
stos
divl
adc
add
rolb
test
sar
sarl
mov
sbb
rorb
lea
xorb
lods
xchg
push
and
imul
shrb
daa
shll
in
test
daa
clc
mov
sti
into
int
js
sub
add
or
push
in
mov
pop
lahf
mov
hlt
xchg
add
hlt
fimuls
imul
inc
push
pop
les
push
mov
mov
cwtl
shll
sbb
mov
sub
pop
mov
dec
testb
xchg
in
cmpsl
push
insb
xchg
or
lock
jmp
mov
ds
popf
sub
div
aam
shll
jl
enter
dec
mov
mov
pop
adc
outsl
cltd
push
in
sbb
mov
mov
in
add
mov
push
fs
add
and
mov
and
mov
mov
scas
subb
cwtl
xchg
idivl
cmpsb
mov
mov
aas
push
imul
xchg
and
sub
jnp
push
adc
jmp
cld
lahf
sbbb
jecxz
dec
clc
push
jns
jnp
call
das
pop
mov
cwtl
jb
in
fs
mov
iret
mov
dec
enter
test
jg
loopnew
mov
mov
cmc
mov
add
jge
addl
mov
call
scas
movsl
call
les
imul
test
mov
popa
and
sarl
nop
fistl
stos
stc
nop
mov
pushf
fmuls
imul
aas
jge
push
add
inc
xchg
mov
aaa
fisubl
loope
das
in
jecxz
out
mov
jo
loop
icebp
mov
cmovp
bound
push
xchg
cmp
je
cmp
push
int3
imul
iret
in
mov
out
xlat
cmp
jb
in
cmpsl
js
fidivl
ret
pop
pop
cmp
in
insl
cmp
or
xchg
jno
push
xchg
cmpsl
test
jns
sbb
imul
mov
scas
inc
push
cmc
and
inc
xchg
mov
movsw
jecxz
test
loopne
lock
sub
out
test
xchg
mov
push
test
out
mov
imul
xchg
and
test
lock
lcall
jae
repnz
scas
push
push
cmpsl
inc
pushf
jmp
mov
fisttpl
sub
cli
rorl
js
add
sub
adc
in
mov
loop
fiaddl
les
pop
lds
stos
mov
and
rorb
jmp
cmp
pop
push
test
scas
xor
xchg
movsb
push
lock
roll
out
adc
iret
in
add
popf
xchg
push
in
sahf
and
divl
je
pop
enter
and
mov
pop
xchg
ficompl
xchg
cmc
dec
shll
nop
dec
cmp
dec
cmpsl
shlb
dec
mov
jne
pop
push
lods
idivb
add
adc
negb
xor
lret
arpl
mov
push
add
mov
je
call
test
fs
jp
and
cmp
clc
hlt
fsts
mov
scas
push
pushf
loope
pop
or
cmp
rclb
add
sub
push
push
sbb
dec
jns
jae
out
mov
subl
imul
cmp
mov
fwait
push
in
push
mov
icebp
lock
cmp
xor
push
mov
js
pop
mov
pop
xor
dec
mov
ljmp
and
int3
push
inc
mov
stos
movsb
xor
fistpll
jmp
enter
push
mov
or
shll
mov
jge
adc
lret
xor
sub
inc
pop
or
std
shr
xor
cmp
out
push
lods
mov
je
arpl
xor
mov
sub
lret
xor
push
push
std
pop
push
jmp
xlat
dec
xlat
lcall
sbb
orl
lahf
xor
cmp
or
test
sahf
inc
arpl
insb
bound
push
mov
or
xor
bound
test
jl
adc
lea
xor
int3
and
and
out
fsubl
int
inc
xchg
inc
sti
mov
mov
add
inc
pop
pop
xchg
and
xchg
inc
out
les
dec
jle
repz
lods
dec
push
sub
loop
imul
scas
rcll
push
popf
inc
mov
push
into
jb
icebp
cwtl
leave
rol
roll
inc
pop
cmp
xor
outsb
and
out
xchg
sbbb
xchg
scas
std
ss
cmp
movsl
into
xchg
pop
cmp
xchg
cmc
hlt
out
test
cltd
mov
iret
jecxz
add
popa
jecxz
mov
mov
mov
movsl
jmp
jno
aam
adc
jbe
sbb
or
adc
jg,pt
sbb
cli
cmp
movsl
arpl
pop
shlb
dec
mov
popf
xor
mov
pop
mov
lock
push
lahf
clc
stos
xchg
daa
xor
mov
xor
sub
jne
fwait
movsl
pop
shl
in
jle
xor
jo
idivb
push
pop
sub
push
mov
xchg
leave
popf
mov
dec
data16
pusha
pushf
out
adc
fstpt
sub
movsb
out
je
loope
call
adc
leave
mov
dec
imul
or
cmpsb
inc
aam
mov
push
mov
adc
xchg
mov
dec
fistpl
stos
mov
push
mov
cld
push
lods
push
pop
or
mov
out
mulb
lahf
mov
pop
xor
daa
shll
sbb
stos
cmp
in
push
jo
mov
push
rcrb
cmp
and
out
movsl
pushf
mov
pop
sahf
aaa
mov
movsb
in
cmp
jne
imul
rclb
in
aad
mov
popf
outsb
aad
mov
nop
lret
sahf
push
xor
push
in
cmpsb
fnstcw
and
outsb
cmp
push
lds
mov
cmpsl
dec
xor
clc
lcall
cld
mov
ljmp
cmp
sbb
data16
dec
scas
mov
pop
lret
popf
push
adc
fwait
add
jecxz
add
pop
cmc
cld
daa
shrb
fs
das
loop
inc
mov
pop
mov
cs
insl
daa
pusha
std
push
mov
pusha
loopne
or
cwtl
arpl
jo
arpl
fnclex
pop
rcrl
fildll
add
inc
sbb
xchg
clc
pop
mov
dec
xchg
sub
mov
pop
jne
aam
js
fbstp
jae
mov
cmp
int3
test
int3
cwtl
or
pushf
push
out
pop
mov
pop
ds
popa
int3
mov
xchg
mov
sub
cmp
inc
push
or
rol
icebp
arpl
push
xor
sbb
fnsetpm(287
mov
mov
push
push
aaa
iret
ds
pop
rcrb
cld
iret
pop
push
les
cld
or
stos
cmp
cmc
ja
push
mov
xchg
pop
pop
or
and
and
int3
call
sub
ljmp
sub
push
lret
adc
push
xchg
sub
cli
cmp
xor
cmpsb
xchg
push
subl
fnsave
std
mov
dec
sti
pop
ljmp
jge
fisubrl
push
cltd
into
fsubrl
xor
mov
xchg
or
xor
pop
cmp
test
or
lods
je
scas
adc
ficoms
pop
adc
push
sub
gs
sbb
mov
mov
dec
cwtl
inc
inc
or
add
adcw
cmp
arpl
mov
faddl
pop
sbb
call
lret
lcall
mov
mov
aad
add
inc
or
jmp
jbe
fidivl
inc
inc
repz
push
mov
mov
sub
es
xchg
mov
push
jg
xchg
xchg
out
mov
pop
out
iret
fldt
fmuls
pop
push
jne
cmp
hlt
pop
roll
lods
movsb
addb
cli
inc
shr
push
ret
lcall
push
stc
movsl
pop
jmp
add
insl
sub
add
mov
or
enter
adc
push
xlat
mov
arpl
mov
test
cmpsb
pusha
stc
cmp
mov
push
adc
iret
jne
push
popa
inc
add
mov
jno
rclb
cmpsb
lock
mov
lret
pop
mov
scas
xchg
xchg
jl
in
xor
stos
xorl
cmp
xchg
stos
cmpb
mov
adcl
jbe
xchg
mov
cmp
aaa
xchg
xor
lret
jle
and
xchg
lods
mov
push
pmulhw
rcrl
pop
lahf
in
mov
xchg
mov
pusha
xchg
cmpsl
push
lret
rcrl
push
mov
or
outsl
mov
fists
ja
jecxz
in
aad
mov
adc
ja
cmp
mov
inc
dec
xchg
scas
pop
or
nop
push
lret
jae
cwtl
xor
cmp
outsl
ss
mov
inc
xorb
jno
gs
push
out
sti
push
xor
ret
rolb
sbb
jbe
lock
sub
pushf
xchg
push
dec
loop
cmc
push
adc
pop
inc
jo
cmp
mov
jge
cltd
sbb
lods
insb
repnz
iret
daa
jecxz
fisttpll
pop
movsb
add
sub
test
cmp
cmpl
in
mov
test
in
push
hlt
xor
loope
mov
pusha
add
lods
jecxz
add
outsl
stos
popa
sub
sub
sub
sub
fwait
sahf
dec
inc
pop
cmp
add
cwtl
add
xchg
fdivr
adc
and
leave
and
push
pop
adc
sbb
mov
cmpsl
xchg
lock
push
mov
inc
push
movsl
dec
cmp
mov
les
mov
pop
sbb
mov
xchg
adc
sbb
lret
lret
test
aas
fs
push
daa
fdivrs
mov
lcall
or
in
add
fs
dec
out
and
icebp
xchg
push
sub
shll
orb
dec
and
xchg
movsb
mov
sub
movsb
add
out
icebp
cmp
fs
repnz
test
rclb
and
fnsave
sahf
sbb
out
scas
or
push
adc
jne
lcall
cmpsb
or
mov
nop
and
jns
push
icebp
inc
push
ljmp
sbb
pop
fimuls
test
btc
mull
push
mov
movsl
mov
inc
adc
fldl
fisubrs
jbe
popf
cmpsb
jne
dec
add
xchg
in
icebp
xor
mov
out
incl
mov
mov
cmpsb
jne
nop
cmpl
pop
push
out
adc
xchg
or
jge
aad
dec
gs
jo
jae
mov
mov
mov
dec
je
imul
nop
loope
xor
push
cli
lods
test
adc
popf
and
mov
sbb
stc
aad
or
sub
lcall
adc
cmp
jns
mov
cmp
and
aas
mov
xchg
add
push
jle
mov
adc
ljmp
pop
fcomp
pop
mov
xlat
jb
icebp
and
ljmp
fsubl
fdivl
mov
add
aam
repz
push
shrb
inc
pop
sbb
sahf
ror
stos
or
xchg
test
jecxz
jae
dec
add
add
arpl
out
pop
jmp
pusha
xchg
out
lock
popa
fstpt
int3
sti
xchg
outsl
add
icebp
jge
bound
push
int
rcl
mov
fidivrs
xchg
sub
ret
addr16
daa
mov
dec
pop
pushf
test
pop
arpl
aam
jge
xchg
and
popf
lcall
outsl
pop
xchg
cmp
adc
roll
dec
or
dec
popa
cs
cmpsl
cltd
fs
pop
mov
dec
push
cwtl
pop
push
xor
lods
pop
test
push
jge
push
lret
xor
push
lcall
dec
out
inc
jmp
in
pop
adc
mov
dec
and
xor
mov
or
mov
mov
pop
or
jl
dec
rorl
push
push
repnz
cmp
cmp
test
sub
test
sub
ss
jnp
sar
aaa
adc
mov
movsl
push
lcall
adc
mov
xchg
lahf
ret
adc
lahf
mov
jnp
sti
mov
mov
popf
fldt
in
daa
or
add
cs
aad
cmp
jns
pop
addr16
aam
add
stos
aas
sbb
add
jmp
int
add
je
sbb
clc
in
pop
into
jnp
mov
jle
xor
cmp
loope
or
jecxz
imull
push
sub
mov
rorl
es
in
sahf
leave
and
inc
dec
push
sbb
aad
fnsave
or
loopne
mov
mov
xor
xchg
push
jbe
mov
cmc
std
push
jmp
bnd
addb
rorb
aad
mov
push
mov
cli
xor
hlt
test
push
fidivs
jp
popa
lods
sub
dec
cmp
loop
mov
cmp
dec
mov
lahf
ja
sbb
movsb
xchg
pop
shlb
ret
or
xor
mov
or
xchg
push
mov
out
loope
jge
cmpsb
int3
dec
push
ljmp
in
mov
cmp
insl
negb
and
mov
dec
shr
mov
sahf
dec
shll
out
scas
jle
xor
loope
lcall
imul
jecxz
ret
jo
mov
and
dec
mov
jmp
adc
fsubl
or
xlat
not
lds
fwait
mov
dec
sahf
push
insb
insl
scas
test
pop
subb
jp
push
cmp
call
sub
pop
leave
int3
add
pop
test
pop
insl
lret
repz
add
pop
lea
inc
test
pusha
loop
jle
inc
add
cmp
leave
ret
mov
subl
pop
or
popf
lret
lret
or
fcompl
mov
jle
or
jne
pop
xchg
mov
sub
testb
push
push
bound
sbb
xor
push
ljmp
pop
popf
xchg
out
test
repz
dec
fisubrl
and
cmp
adc
sub
or
add
mov
inc
dec
push
or
clc
or
cmpsb
pop
xor
sbb
jnp
call
bound
and
and
mov
js
loopne
jg
jg
jle
loop
pop
sbb
popa
lret
sbb
test
mov
cmp
pop
movsl
mov
pop
cld
arpl
cmp
data16
push
insb
jae
test
pop
in
xor
das
mov
jge
fstps
add
mov
lret
add
into
enter
sub
ret
push
rorb
pop
inc
jbe
negb
lea
pop
jmp
xchg
lahf
jge
inc
inc
mov
fs
push
adc
imul
popf
or
dec
push
jg
sub
and
jg
bound
cld
sub
stos
mov
out
xchg
stc
push
adcb
jnp
lea
stos
aas
pop
out
int3
shll
scas
lret
in
mov
mov
sub
jecxz
mov
sub
cmpsl
mov
cld
iret
add
pushf
daa
test
cmp
js
dec
ds
icebp
jnp
cmc
scas
xchg
into
mov
xor
js
lock
jo
cmpl
jg
insl
sub
nop
or
popa
movsl
dec
popa
test
pusha
mov
in
cld
fs
cwtl
or
sti
and
adc
cli
inc
add
movsl
mov
lcall
cmpsl
cmpsl
roll
movsb
mov
cmp
out
adc
movsb
pop
pop
cmp
push
pop
rorl
icebp
es
pusha
push
call
call
test
sbb
pop
je
rcrb
int
sti
shrb
mov
mov
ror
nop
popa
dec
push
mov
sub
pop
daa
sahf
adc
sahf
rorb
xor
fcmovu
xchg
dec
ret
enter
dec
pop
pop
dec
lret
fdiv
insb
aaa
adc
jne
movsl
adc
lods
mov
loopne
lret
sub
sbb
push
cmpsl
push
xlat
mov
pop
mov
scas
push
daa
call
push
inc
mov
imul
mov
and
dec
mov
sbb
add
cwtl
inc
pop
js
stc
sahf
xchg
fwait
jp
add
mov
xchg
je
pop
inc
and
stos
xor
sahf
xor
inc
ffree
mov
push
cwtl
test
das
fidivrl
push
orl
sbb
add
adc
cmp
fwait
pop
sub
arpl
loope
data16
mov
loopne
testl
scas
repz
mov
jae
xchg
fistl
push
push
cmp
scas
push
aad
xor
xchg
cmp
add
mov
call
or
shrl
cli
add
daa
and
pushf
daa
add
ret
mov
or
or
inc
xchg
icebp
mov
mov
inc
es
dec
fwait
gs
subl
imul
pop
pusha
add
mov
scas
and
das
xchg
adc
cmp
jp
push
out
out
add
lods
gs
inc
sahf
mov
arpl
ja
xchg
pop
scas
ret
repnz
in
cmp
repz
push
cmc
sub
movsl
in
dec
lock
push
inc
test
cmp
shrl
and
push
mov
decl
push
and
and
mov
movsb
mov
push
sbb
loope
pop
pop
mov
sbb
and
push
pop
popf
dec
adc
fcmovnb
insl
mov
cmp
fdivl
push
and
jb
imul
and
insl
push
addr16
aas
cmp
dec
jb
jns
dec
pop
int
add
adc
fisttpll
inc
sub
mov
popa
and
negb
popa
xor
mov
jge
outsl
bound
push
sbb
and
movsb
into
fistpl
push
mov
adc
repz
jnp
ljmp
inc
mov
push
testl
imul
std
mov
pop
test
roll
fimuls
arpl
test
inc
fwait
fwait
mov
sub
xchg
add
pop
daa
dec
bound
sub
repz
out
mov
mov
inc
pop
fldenv
cmp
mov
addr16
sbb
lds
jmp
sbb
jnp
inc
fisttpl
xchg
add
dec
hlt
adcl
adc
in
mov
jecxz
pop
icebp
pop
cmp
add
push
add
mov
sub
ret
scas
inc
cmp
mov
cli
mov
push
iret
and
dec
imul
pusha
xlat
pusha
add
mov
pop
jmp
loope
inc
push
push
jbe
xor
push
mov
roll
mov
fsubs
in
cli
lds
shll
mov
leave
xchg
into
sub
jl
je
jo
cmpsl
in
xchg
or
es
movsb
cmp
ja
sbb
jne
cld
mov
mov
and
or
nop
push
cltd
loopne
pop
andl
adc
mov
dec
inc
out
jnp
repz
cmp
out
add
test
inc
test
insb
movsb
mov
sub
pinsrw
aam
out
lea
ds
cmp
scas
test
popf
lret
mov
popa
cltd
popf
fcmovb
les
movsb
pusha
xchg
push
xor
xchg
ss
lock
mov
cmp
es
out
insb
call
xchg
mov
push
jo
adc
lods
pop
scas
mov
adc
lock
mov
mov
sbb
pop
and
cmp
test
mov
jg
mov
jnp
mov
cmp
cmc
popa
push
jmp
aad
frstor
in
in
fidivs
cltd
repnz
popl
and
sub
adc
add
fimuls
addr16
push
out
fiaddl
das
jnp
adc
adc
adc
fbld
adc
hlt
fcmovne
xor
push
test
in
inc
cmp
add
fildl
xchg
sahf
jne
scas
xchg
or
lret
push
data16
mov
xor
xlat
dec
cmpb
cltd
adc
jecxz
add
or
scas
sti
lock
jp
imul
add
adc
push
xchg
xor
das
cmp
xchg
push
out
jle
xor
stos
insl
mov
mov
repz
jb
repnz
sbb
mov
push
subb
bound
cmpsl
mov
mov
inc
icebp
int
fbstp
mov
aas
stc
push
sub
sub
inc
jle
cmpsb
jecxz
shlb
dec
repnz
outsl
gs
cmp
lahf
in
sahf
adc
cli
inc
sub
cmp
imull
cwtl
push
repnz
fwait
jmp
or
in
sbb
repnz
sub
je
cli
inc
jecxz
mov
mov
mov
ret
xor
and
and
lock
fnstcw
or
or
fistl
icebp
push
imulb
pushf
add
lret
mov
jecxz
out
sub
in
push
cmp
push
fstl
dec
mov
jo
sub
xchg
jo
int
jns
mov
cmp
clc
insb
lahf
xchg
js
jb
es
jecxz
push
sub
xlat
dec
xchg
inc
pop
xor
pop
mov
cmp
jbe
shll
fsubrp
outsb
rorb
pusha
adc
fisttpl
mov
push
and
scas
loopne
outsl
push
add
decl
cltd
or
mov
jl
push
adc
pusha
shrb
scas
add
inc
mov
mov
lods
push
in
fs
lcall
jmp
loop
xchg
mov
fisttpl
dec
add
and
push
sub
sbbb
stc
sub
stos
sub
pushf
xchg
cmp
pop
xor
mov
in
jno
je
push
je
stc
out
pop
repz
jnp
jno
dec
pop
or
inc
adc
adc
icebp
ja
sub
xchg
popf
aas
xchg
cmp
jne
push
cld
bound
push
popf
mov
xor
mov
pop
sahf
out
push
mov
test
adc
stos
xor
cmc
stos
inc
mov
adc
mov
in
mov
cmpsb
stos
mov
fwait
jbe
dec
iret
cmp
mov
bnd
out
jecxz
outsb
insl
xlat
pusha
pop
push
idivl
mov
or
fisttpl
jns
push
and
pop
sbb
inc
andb
fldt
incl
pop
mov
test
dec
inc
push
mov
test
mov
dec
aam
pop
jl
jp
sbb
sahf
es
push
xchg
sbb
cmp
int3
mov
sti
out
and
pushf
and
pop
add
mov
rep
xorb
jmp
push
mov
xor
pop
outsb
gs
imul
mov
icebp
cmp
jnp
aam
fcoml
stos
cmp
sub
mov
mov
mov
fucomp
jle
icebp
int3
pause
fimuls
xor
pusha
cltd
orb
and
cmp
jmp
cmp
xchg
fldenv
adc
sbb
arpl
cmp
dec
sti
jbe
lods
pop
push
mov
std
mov
sbb
sbb
stos
dec
mov
mov
daa
test
fstl
shrl
jle
mov
xchg
jg
call
in
or
insb
add
sub
dec
cmp
add
and
mov
add
scas
mov
mov
inc
clc
push
test
sbb
jecxz
xchg
pop
ljmp
pusha
testl
insb
add
jmp
jne
lcall
jo
cmp
ds
mov
cwtl
sub
and
setbe
insl
mov
adc
data16
loop
aad
popf
sahf
test
push
jmp
cwtl
pop
sbb
mov
xchg
inc
cmpsb
jne
in
xchg
shl
cmp
int3
jl
push
cmc
cltd
or
lret
xor
lods
mov
ljmp
fwait
xchg
push
adc
pop
cltd
imul
lock
lret
adc
xor
cmp
popa
add
jnp
xchg
cmp
test
jo
xlat
bound
mov
and
or
dec
mov
outsl
je
jle
inc
adc
and
inc
cmp
xlat
popf
shll
xor
loopne
roll
shrb
xorb
lock
stos
les
in
ja
movsb
or
ds
js
andl
in
push
jb
push
es
test
cltd
and
dec
sbb
or
mov
popf
aam
popa
adc
jle
pop
adc
cmpsb
pusha
mov
aam
fisubl
inc
mov
jle
cmp
add
stos
cmp
int3
std
sar
pushf
xchg
pop
leave
test
mov
jmp
and
outsb
test
fmuls
call
cmp
loop
or
int3
dec
sbbl
or
sbb
mov
sub
cmc
sub
dec
mov
sbb
mov
or
fs
out
stc
pop
pop
out
fwait
dec
mov
mov
adcb
lea
sbb
mov
xlat
xchg
mov
out
jl
lret
aaa
imul
repz
push
jnp
push
inc
mov
push
xchg
in
mov
mov
mov
loopne
add
ja
repz
jno
mov
mov
cmp
out
mov
jmp
push
out
mov
push
aam
xlat
nop
insb
fildl
mov
mov
popa
jne
xor
adc
je
in
xchg
icebp
negl
jnp
jne
cmp
pop
jle
mov
push
mov
subb
dec
cli
inc
mov
add
movsb
fs
es
push
jns
add
jg
fisubl
aam
mov
stos
xor
sub
out
xlat
add
fwait
xlat
js
cmp
sti
and
lret
push
lods
mov
sbb
imul
cmpb
xor
cmc
sub
pop
xlat
shl
in
or
mov
stos
xchg
mov
jo
loopne
roll
lds
or
inc
add
mov
fstpt
sti
imul
pop
fucomi
jge
ret
jecxz
xor
push
out
pop
fsubrp
ds
lea
fmul
pushf
sbb
sub
cs
arpl
ret
or
mov
add
push
dec
loop
int3
inc
aad
fcoms
pop
adc
xchg
jmp
sub
mov
scas
dec
push
lock
ret
std
inc
pop
stos
sahf
fcomi
lcall
adc
or
js
push
pop
jo
mov
jae
pop
testb
xor
decb
in
dec
xorb
filds
sbb
icebp
mov
sub
mov
xor
mov
addr16
addr16
cli
add
and
mov
test
mov
aad
sbb
push
lahf
add
inc
aad
pop
jae
jo
sbb
loopne
push
mov
or
lret
mov
pusha
xchg
and
adc
mov
movsl
cmp
movsb
das
out
mov
test
testl
in
mov
out
fsubs
xchg
adc
pop
leave
add
pop
mov
mov
fisubs
xor
sub
xchg
xlat
inc
fsubp
pop
adc
sbb
dec
or
push
popl
cmc
pop
pop
sub
pop
mov
pop
pop
jecxz
dec
rclb
shlb
gs
pop
test
dec
test
into
testb
xor
mov
xchg
mov
mov
xor
adc
pop
int3
and
mov
jl
jb
cmp
dec
mov
push
dec
xchg
push
dec
insl
sub
test
in
dec
cmp
cli
xchg
in
setge
pop
add
jno
add
loop
pop
dec
pop
insb
icebp
addr16
ss
fs
mov
and
out
mov
xchg
jg
test
pop
inc
pop
cmpsl
sub
cmp
inc
popf
push
adcl
dec
faddl
and
aam
cld
insb
test
orb
push
mov
add
out
push
ret
lahf
out
mov
arpl
and
mov
or
or
xchg
out
add
popf
bnd
lea
cmp
pop
add
xchg
inc
test
int
push
stos
scas
push
add
out
pop
fwait
xor
cli
subb
sahf
pop
fs
push
push
stos
mov
mov
test
gs
inc
push
push
xorl
mov
imul
idivb
add
cltd
scas
xchg
ret
pop
push
icebp
out
inc
push
loope
daa
out
xor
mov
sti
es
pop
push
in
scas
dec
pop
cmpsb
bswap
roll
mov
sbb
pushf
jae,pn
std
rorl
mov
cmp
daa
inc
jne
mov
push
jnp
rolb
dec
push
sub
fucomp
fiaddl
decl
xor
push
es
ja
add
adc
lcall
xchg
jl
xchg
add
mov
lods
leave
push
adc
lret
mov
dec
xor
xor
pop
hlt
inc
movsl
add
adcl
lcall
xadd
sbb
int3
in
jp
cmp
hlt
sub
adc
sub
mov
outsb
xor
pop
popf
cwtl
fucomi
aam
or
repz
pop
lock
push
push
dec
adc
push
aad
test
test
mov
push
dec
lea
shrb
ret
fidivl
xchg
pop
aaa
test
cli
mov
ret
add
mov
sub
jmp
or
in
add
imul
xchg
sbb
jmp
aam
pop
icebp
in
stc
popa
insb
rcl
ret
lods
fsincos
loope
aas
lea
xchg
mov
mov
jb
inc
add
mov
xchg
arpl
andb
outsl
mov
mov
push
inc
loop
movsb
idivb
inc
ret
xor
mov
and
imul
adc
jmp
push
push
add
sub
cmpsb
leave
inc
dec
jnp
loop
imul
mov
cwtl
jp
or
mov
mov
push
fdivrl
mov
fs
and
fbld
jns
stos
inc
add
and
mov
out
mov
add
std
pop
in
in
hlt
pushl
out
fisubl
pop
xchg
bound
rcrl
adc
or
shll
inc
lods
push
les
gs
aad
mov
sub
xor
mov
add
dec
mov
and
or
dec
test
push
jp
cltd
pop
pop
xchg
and
cltd
inc
popf
push
rcrl
ljmp
push
xor
ss
push
dec
jg
xchg
test
lcall
xchg
mov
mov
jb
pop
jns
xor
data16
mov
inc
jg
cmpsl
clc
inc
inc
sbb
xor
pop
xor
cmpsl
jecxz
sbb
stos
add
pusha
mov
fs
mov
subb
fisubrl
add
rolb
add
pop
sub
sbb
jge
rolb
dec
les
mov
push
push
int
ss
enter
hlt
and
mov
insl
xor
popa
fistps
xchg
lret
es
adc
jge
push
nop
lea
icebp
test
shlb
lds
into
jno
arpl
mov
stc
push
insl
imul
jae
stos
ljmp
sbb
sbb
pop
std
pop
lods
arpl
push
add
and
dec
xor
scas
imul
jb
lret
push
int
mov
inc
adc
filds
cmpb
iret
sub
pop
lret
push
xor
xchg
sarb
adc
dec
pop
inc
pop
sbb
data16
xor
jne
js
cli
cmp
cmp
or
pop
jmp
add
or
jbe
or
mov
or
xchg
jmp
add
jmp
add
jmp
add
jmp
add
in
or
mov
in
or
dec
in
or
push
in
or
push
or
sub
add
add
add
in
or
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
std
dec
add
std
dec
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
or
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
adc
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
and
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
xor
add
add
incl
add
add
dec
add
add
add
inc
dec
add
inc
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
decl
dec
add
dec
add
add
add
pop
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
push
add
xor
add
addr16
add
add
add
add
dec
add
add
add
incl
add
add
add
add
jb
add
add
add
add
add
dec
add
add
add
call
jns
add
or
dec
add
or
add
jmp
dec
add
dec
add
add
add
incl
add
add
lea
add
add
incl
add
add
add
add
incl
add
add
add
add
add
jmp
dec
add
xchg
dec
add
add
add
call
xchg
dec
add
xchg
dec
add
add
add
lcall
dec
add
cltd
dec
add
call
cltd
dec
add
incl
add
add
pushf
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
dec
cmpsl
dec
add
dec
add
lcall
dec
add
dec
add
incl
cmpsl
dec
add
call
dec
add
mov
cmpsl
dec
add
dec
cmpsl
dec
add
cmpsl
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
lods
dec
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
mov
add
add
add
ljmp
mov
add
incl
add
add
mov
add
lcall
mov
add
add
add
incl
add
add
add
jmp
fisttpl
and
dec
add
call
fisttpl
fcomp
dec
add
decl
dec
add
add
ljmp
add
add
sbb
or
add
or
xor
or
cmp
or
dec
loopne
add
or
pop
jmp
add
or
jbe
or
mov
or
xchg
jmp
add
jmp
add
jmp
add
jmp
add
in
or
mov
in
or
dec
in
or
push
in
or
push
or
sub
add
add
add
in
or
add
add
stos
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
sub
push
gs
insl
gs
push
add
jmp
je
push
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
test
inc
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
fisttpll
add
andl
cmp
lret
xchg
mov
mov
jge
adc
sbb
mov
rorl
push
sbb
pop
dec
xor
xchg
mov
push
dec
loope
ret
inc
pop
xchg
aad
push
add
push
js
pushf
std
sub
push
sbb
add
cmp
push
mov
mov
andl
dec
push
sbb
ja
mov
imul
sbb
lcall
dec
push
xchg
sbb
or
fwait
insl
jns
sar
sub
dec
out
sub
repnz
pop
fcoml
adc
add
push
imul
xchg
mov
loop
out
int3
jnp
std
mov
stos
sbb
dec
and
sub
mov
xchg
test
fistl
adc
data16
sub
insb
mov
add
xchg
aad
insl
loopne
ret
dec
stos
fcomip
ljmp
or
jge
push
dec
mov
and
adc
psubd
and
dec
cli
push
adc
decb
add
daa
pop
iret
jne
notb
mov
fldcw
inc
mov
sahf
jbe
mov
pop
sbb
mov
sub
and
stc
mov
lock
mov
test
imul
mov
jnp
inc
mov
fstpt
lods
bound
cmp
rorl
in
divl
lds
test
adcl
or
fbstp
sub
push
push
jbe
lret
ret
adc
out
andb
iret
cmpsl
xlat
stos
call
insb
shrl
jg
or
imul
jns
loop
push
popa
ja
push
sub
push
pop
pop
loope
pushf
fs
cmpsl
or
inc
mov
fadd
leave
mov
mov
adc
ffreep
out
insl
or
negl
jne
cmp
inc
push
pop
test
scas
leave
in
push
lret
jmp
cmpsb
inc
mov
pop
and
and
in
xchg
mov
xor
pop
jge
out
bound
pop
mov
dec
jmp
sarl
out
scas
popf
pop
xor
ret
mov
mov
divps
sbb
enter
les
push
cmpb
std
pushf
or
mov
cmp
add
dec
xor
negl
sub
and
scas
jge
and
ss
roll
mov
dec
in
jae
dec
fcmovb
xor
icebp
jle
pop
add
gs
mov
mov
inc
pop
ss
std
sub
test
inc
pop
or
pusha
pop
test
inc
push
shlb
mov
outsl
lods
daa
repz
jns
ds
inc
in
mov
das
pop
inc
aad
xchg
movsl
push
sbb
sbb
movsl
rolb
pop
push
out
xor
cmp
pop
push
sbb
dec
pop
inc
inc
mov
pop
or
push
pop
cld
add
dec
out
stos
data16
fwait
mov
sbb
push
jl
mov
cmp
inc
imul
pop
rcrl
push
sub
out
dec
int3
xchg
loopne
fchs
cmp
or
inc
or
pusha
lcall
inc
xor
imul
xchg
popf
pop
inc
in
xor
mov
pop
push
das
sahf
cmpsb
sbb
cmpl
mov
fiaddl
enter
mov
push
or
inc
aaa
in
outsl
in
inc
mov
sub
mov
mov
clc
xorb
test
or
push
popf
jno
and
xchg
cltd
xchg
push
jecxz
cmpsb
inc
loop
add
add
repnz
fnstenv
mov
movl
or
cld
pop
icebp
bound
mov
jns
mov
push
outsl
adc
into
mov
or
cmc
and
bound
xchg
or
clc
jns
lds
sub
scas
add
ret
push
jl
jle
fwait
jle
lds
sbb
adc
or
sub
pop
cmc
ds
mov
mov
dec
cmp
clc
mov
imul
sub
lock
xchg
sbb
or
ficompl
cmp
mov
imul
and
je
mov
aas
int3
fadds
dec
xchg
pop
lcall
or
jp
in
stos
fiaddl
mov
popl
dec
stos
nop
jg
mov
mov
shlb
sbb
lds
jo
sub
push
xor
fdivp
scas
adc
sbb
insb
fisubrs
lods
adcb
imul
in
or
dec
out
inc
cmc
out
fdivrl
xlat
cmp
aam
mov
popf
jae
addb
sbb
jbe
rorb
mov
xchg
add
in
ret
cld
inc
mov
leave
fiadds
aas
sub
repz
movsl
les
pop
fsubs
repz
and
add
scas
sub
and
int
cmpsl
push
mov
push
in
push
negl
push
shlb
dec
js
mov
xchg
add
adc
push
cwtl
mov
push
cmpsl
add
push
cltd
in
adc
notl
hlt
daa
std
orb
iret
inc
push
rolb
dec
jle
out
daa
iret
and
mov
inc
into
sbb
inc
mov
sub
loopne
pop
mov
mov
stc
inc
aam
pusha
stc
dec
lret
stc
mov
inc
mov
xchg
fidivl
inc
int
daa
inc
test
push
xchg
xchg
aaa
dec
enter
add
jle
inc
out
or
movb
adc
sbb
xor
fistps
mov
or
xor
jbe
popf
lret
out
outsl
out
cmp
xor
cwtl
sub
mov
dec
xchg
dec
icebp
out
into
shlb
xchg
xor
fisttpll
mov
sub
clc
fidivrl
repz
fnsave
mov
nop
sub
repnz
mov
cmp
cli
dec
dec
push
and
clc
in
mov
aam
pusha
add
jp
test
push
pop
sahf
cmp
jns
sbb
add
js
jo
insl
inc
negl
mov
icebp
or
imul
inc
sbb
dec
out
stos
and
jns
sbb
sbb
ret
push
adc
mov
loope
dec
sbb
sbb
out
aas
sbb
pop
xchg
scas
inc
mov
add
or
stos
add
push
or
aaa
dec
xor
jmp
into
push
cmp
aaa
jl
dec
adc
nop
ljmp
inc
jmp
imul
push
imul
xchg
mov
or
or
imulb
mov
je
mov
or
loop
cmp
stos
pop
inc
sub
icebp
xchg
xor
mov
mov
scas
mov
xchg
xchg
cmp
pop
icebp
cli
mov
or
inc
cli
imul
dec
sahf
arpl
ss
enter
mov
std
les
scas
in
fstps
gs
xchg
movsl
fst
inc
ds
negl
mov
inc
inc
inc
nop
dec
jb
shl
and
add
push
ds
push
fidivl
out
xchg
push
adc
xor
shrb
adc
loope
adc
mov
sbb
daa
stc
push
adc
pop
push
dec
sub
lahf
push
insb
lea
adc
out
mov
xchg
mov
inc
push
stos
adc
js
popa
dec
dec
cmpsl
mov
or
bound
add
push
int3
push
aas
repnz
jmp
xchg
outsl
loopne
rol
dec
add
aad
push
fstps
insl
jb
lcall
stc
arpl
mov
int3
lods
xchg
into
mov
cwtl
and
iret
jp
shl
add
sub
push
std
test
stc
sbb
cmpsl
imul
push
rcrb
push
loopne
fmul
lock
inc
imul
mov
ss
jl
push
pop
adc
jns
sbb
insb
int
outsl
adc
shl
rcl
cmp
jns
cltd
mov
mov
sbb
xchg
add
inc
jecxz
vscalefss
mov
xor
das
dec
gs
sub
hlt
out
mov
dec
sub
or
jg
mov
rcrl
mov
int3
loopne
xchg
mov
dec
shll
push
xor
adc
and
mov
fimuls
sub
xchg
jl
scas
xor
imul
xchg
hlt
push
incb
es
aam
or
jo
std
jbe
pop
test
shlb
imul
int3
sbb
push
cld
add
fsubrs
out
aad
rcr
je
inc
jl
aaa
shrl
pop
xor
dec
mov
or
mov
mov
out
mov
or
and
mov
gs
inc
pop
nop
xchg
mov
imul
rcrb
ss
adc
xlat
repnz
mov
clc
cmp
sub
aad
mov
shrb
enter
insb
mov
repnz
les
lods
fs
mov
dec
mov
ret
sbbb
popf
dec
xchg
jl
cwtl
jns
imul
mov
stos
lea
jecxz
imul
adc
fwait
jne
inc
ss
and
out
xor
insb
shlb
cmpsl
fwait
adcb
sti
test
sub
lret
xlat
sbb
adc
jne
mov
and
inc
daa
push
jbe
jae
in
mov
inc
decb
rcll
dec
ror
dec
jno
lock
out
out
lret
rorl
aaa
xchg
mov
dec
enter
adc
clc
add
das
ss
lea
dec
and
test
jle
pop
mov
cmp
cwtl
rol
andl
insb
fiaddl
jo
inc
mov
sbb
popa
jmp
test
shrl
popa
ljmp
push
push
icebp
dec
ret
xor
push
jae
jl
pop
jae
jnp
or
adc
aaa
out
std
imul
in
pop
push
inc
push
pop
scas
and
dec
mov
cli
add
stos
inc
lret
mov
fs
xchg
test
mov
call
mov
cltd
push
fisubs
pop
push
stos
adc
or
jecxz
icebp
shrl
mov
sbb
and
pop
loopne
int3
jmp
push
into
xchg
cmp
jmp
or
jmp
cmp
xor
adc
gs
std
pop
mov
stos
ds
xchg
test
shrl
sbbl
jecxz
mov
jae
add
mov
dec
nopl
and
daa
xor
xor
mov
mov
push
rcll
push
test
insb
pop
into
xlat
mov
cmp
test
pop
push
xlat
shll
lds
mov
stos
fmuls
test
xor
addr16
cltd
adc
iret
rolb
les
sbbb
insl
repz
jp
xchg
mov
fnstcw
sbb
sti
pop
xchg
mov
sub
scas
xchg
xchg
xor
ss
mov
sbb
xor
lods
or
dec
repnz
cmpsb
out
xchg
js
or
outsb
call
loopne
sub
dec
stc
or
mov
jo
adc
dec
mov
adc
enter
push
push
aas
pop
repz
out
cli
icebp
jbe
adc
pop
repnz
out
and
pop
enter
aam
mov
nop
sub
cld
enter
shl
mov
mov
add
loope
daa
push
add
loop
and
xchg
or
xchg
inc
fnstsw
div
data16
dec
sub
cmp
cli
push
push
bound
insl
sbb
mov
int3
lea
add
cltd
dec
rorb
xchg
test
ficoml
mov
sahf
xor
mov
mov
mov
cltd
push
push
je
lods
cmp
xor
jae
call
inc
jl
leave
cmp
mov
movsb
movsb
xlat
fmuls
punpckhdq
pop
cmp
or
lret
outsl
lret
jl
paddusw
jne
insb
adc
sub
fs
pop
jbe
aad
shlb
ss
jbe
hlt
mov
mov
cmpsb
push
inc
sub
push
cmp
movsb
mov
inc
push
shll
pop
or
push
rcrb
and
icebp
pop
pop
or
sub
js
inc
inc
and
ret
dec
pop
sub
sbb
jo
insl
mov
addl
fidivl
aas
mov
adc
dec
les
jle
jl
mov
dec
shl
aas
loop
bnd
arpl
mov
shrl
insl
mov
ljmp
jbe
out
lds
popa
or
out
mov
loopne
test
push
add
sahf
mov
aas
je
imul
or
or
nop
mov
sub
add
je
push
mov
dec
ror
in
add
mov
jb
test
das
add
or
rcll
mov
add
mov
xorb
add
std
adc
andl
mov
fs
ja
ret
jl
loopne
mov
or
jmp
out
adc
notl
pusha
inc
divl
pop
aam
cmpsb
mov
dec
xchg
aad
xchg
adc
mov
jne
jmp
cs
xchg
lock
sub
mov
pop
add
and
data16
scas
ficomps
outsb
inc
add
div
pop
aas
loopne
mov
mov
sbb
adc
sub
and
sub
lret
add
addr16
jns
out
and
inc
out
pop
imul
idivb
cmp
sbb
lods
je
call
cs
into
lcall
aaa
in
dec
data16
loopne
or
not
xchg
lea
dec
popa
cmp
or
push
ja
xchg
mov
loopne
cmc
insb
clc
js
jb
call
loop
imul
jle
cmc
rorb
xchg
out
xchg
lds
push
sbb
xchg
cmpsb
int3
fdivrl
push
fisubrl
adc
movsb
xchg
inc
mov
or
inc
loope
xchg
jle
int3
mov
mov
jmp
xor
sti
inc
out
dec
jecxz
mov
aam
add
jne
jg
xchg
fisubl
shlb
aad
outsl
jl
and
lret
les
imul
cltd
test
xchg
int3
enter
sub
or
test
int
in
pop
dec
add
adc
adc
mov
sub
movsb
fidivl
insl
aam
jle
sbb
cmp
adc
lds
dec
test
shrb
mov
cmp
jmp
imul
ret
mov
push
jae
cmpsl
xor
mov
cmp
fiadds
movsl
faddl
mov
rcll
lret
inc
insl
inc
call
les
push
push
adc
fwait
pop
push
in
mov
dec
pop
mov
push
or
mov
sub
hlt
and
mov
out
mov
xchg
inc
and
mov
inc
mov
jo
ljmp
clc
dec
jbe
bound
and
out
aad
popa
dec
lret
push
jno
sub
adc
in
lcall
sbb
mov
arpl
inc
hlt
xchg
rclb
push
cmp
test
fucom
mov
xor
cmp
jae
push
fisttpl
in
lods
lock
rcr
mov
cmovl
push
aad
insb
inc
xor
mov
in
lcall
fstl
lret
mov
jmp
js
das
stos
jp
ffreep
into
fnstenv
push
xchg
or
pop
insl
push
add
inc
cld
mov
cmp
and
push
add
xchg
dec
imul
lods
insl
push
lret
insl
push
fwait
jmp
subl
push
mov
jno
pop
int3
xchg
outsb
xchg
sub
stc
cwtl
xchg
imul
pop
je
popf
jp,pn
mov
push
jecxz
outsb
outsb
fists
pop
mov
jo
shrl
cmp
test
cmpsb
lods
push
adc
fistl
sahf
jnp
hlt
mov
aad
jne
dec
dec
test
sbb
dec
or
inc
pop
clc
or
mov
ds
lahf
xchg
cmp
mov
cmp
in
ss
insb
imul
shlb
and
mov
mov
mov
dec
mov
outsl
pop
jne
decb
pusha
test
fcmovnbe
cli
mov
mov
sarb
das
adc
in
imulb
std
adcb
call
mov
fbstp
aas
lahf
pop
mov
stc
out
and
push
fwait
mov
push
stos
loope
jg
cmp
sahf
inc
pop
dec
fists
lret
mov
icebp
pop
testl
mov
inc
xor
das
mov
or
or
imul
aam
mov
mov
js
repnz
cmc
loope
sahf
xchg
hlt
mov
inc
cmc
inc
jnp
cld
xchg
jl
mov
and
lret
scas
mov
fwait
imul
aas
pop
or
mov
scas
dec
repz
pop
andb
and
jno
push
aaa
ss
pop
xor
and
dec
add
stc
loope
jecxz
cltd
enter
int
nop
pop
add
int3
int
add
adc
inc
dec
out
cld
xor
arpl
pop
fistl
sub
test
jle
mov
inc
mov
mov
or
pop
sub
sbb
and
loop
call
mov
es
mov
cmp
sub
dec
fists
fmuls
xor
mov
jmp
dec
ret
inc
mov
imul
xor
es
mov
pop
cmc
cli
pop
mov
cmpsl
add
testl
pop
xchg
cmpsl
and
pushf
popf
sub
aam
push
mov
sub
mov
pop
cwtl
xor
pop
inc
adc
push
clc
jge
sub
push
cmp
push
xor
xchg
mov
mov
fsincos
test
loopne
or
xor
es
dec
pop
aad
and
push
into
or
push
push
xor
jecxz
sarb
jno
inc
cmp
loopne
sub
mov
movsb
gs
or
dec
cwtl
ds
scas
out
cmp
jle
cmp
seto
ficompl
aad
out
mov
cmp
add
and
jmp
push
xor
outsl
inc
push
inc
cmp
sbbb
mov
push
xor
xlat
xchg
loop
mov
icebp
imul
pop
jb
and
adc
mov
xchg
scas
das
lret
scas
test
cmp
ja
adc
sbb
nop
xchg
rclb
sub
incb
dec
xor
aam
or
cmpsb
xor
shll
scas
mov
or
test
push
shrb
xor
push
mov
mov
mov
adc
xor
xchg
test
and
outsl
sub
cmp
stos
adc
jg
inc
push
sub
xorb
ds
xchg
mov
jnp
sbb
push
es
iret
jp
and
sbb
lret
pop
cld
outsl
cmpsb
dec
ror
sub
lcall
xchg
pop
jbe
out
jp
jb
stc
or
adc
xchg
movsl
xchg
fwait
shrl
pop
xchg
xlat
cs
xor
out
xor
inc
je
and
pop
cmp
out
pop
xor
sub
test
out
and
jo
push
mov
lock
sbb
testb
in
popf
rclb
mov
or
mov
lods
aas
fdivs
jl
jl
or
adc
lods
dec
or
data16
cmpl
push
int
or
xchg
inc
fiaddl
adc
sbb
sub
pop
inc
hlt
in
xor
jbe
fs
push
scas
mov
xchg
mov
cwtl
aam
ljmp
jge
aaa
fimuls
pop
cmp
data16
clc
aaa
push
mov
pop
aad
jns
mov
mov
or
mov
push
cmp
xor
fs
cmp
mov
and
ja
inc
lock
movsl
mov
lods
out
ja
dec
arpl
pop
into
scas
andb
les
out
mov
aad
outsl
cmp
sbb
adc
imul
mov
add
rclb
inc
cmpsl
out
inc
jae
pop
mov
xor
shll
xchg
jnp
dec
rcl
arpl
push
cmpsb
xor
addr16
cmp
lret
das
cmp
pop
lods
lcall
cmpsb
popa
test
mov
inc
fcoms
mov
or
jno
out
andl
mov
dec
xchg
push
loopne
cmp
add
xor
arpl
stos
cmp
xor
loope
icebp
xchg
pop
push
xor
xchg
and
mov
mov
inc
xor
mov
out
sub
outsl
lds
sub
mov
mov
jle
test
test
cmp
or
cld
mov
sub
mov
fiadds
add
lods
stos
or
mov
cmpsb
xor
sub
push
push
pop
push
outsb
or
cld
imul
xor
push
aas
mov
repz
add
mov
dec
sbb
jbe
lock
jne
addr16
push
push
leave
jbe
sbbl
xchg
pop
ret
lea
cmpsl
flds
cmp
sarl
inc
adcb
imul
mov
add
fsts
xor
mov
sbb
movsl
repz
jecxz
pop
lahf
pop
mov
outsl
xor
inc
int
scas
jb
or
ds
mov
or
push
sub
bound
ficoms
mov
test
aad
out
inc
popa
and
rcll
and
int
cmp
std
les
cmpb
test
loope
movsb
dec
adc
xchg
fst
xor
sbb
push
jne
pop
out
popf
push
shlb
sarl
pop
or
jns
adc
ret
mov
mov
mul
jae
roll
aam
in
arpl
test
pusha
sbb
xor
push
adc
mov
pop
cmp
add
jb
addr16
icebp
and
add
out
ret
orl
push
stos
pop
test
mov
jbe
add
dec
cmp
sarl
orb
mov
cmp
or
hlt
fstpt
or
shrl
xchg
add
aaa
push
dec
jg
inc
xor
sub
sub
mov
sbb
xlat
imul
sbb
xorb
lods
fdivs
mov
add
pop
movsb
out
ret
icebp
lret
test
mov
xor
cmpsl
iret
outsl
cmpsl
sub
cmpsl
call
icebp
cld
pusha
test
ret
outsl
mov
push
dec
rol
lret
xchg
cs
sub
or
sbb
fwait
jp
repnz
repnz
cmp
pop
mov
cmp
.byte
