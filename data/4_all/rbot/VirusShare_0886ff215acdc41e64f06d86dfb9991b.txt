push
sbb
in
cmpl
pop
call
push
push
add
fucomi
into
add
cmpb
pop
into
sbb
add
push
xor
add
fcoms
inc
fimull
mov
push
sti
inc
and
add
sbb
jle
loopne
hlt
pop
pop
pushl
call
push
push
pop
mov
cmp
lahf
jne
push
or
push
or
out
aad
adc
xchg
or
mov
push
ret
sub
pop
call
test
pop
jle
mov
adc
xor
inc
test
cmp
inc
ret
push
popa
jl
jmp
inc
or
inc
push
xchg
cmp
xchg
sbb
fs
add
mov
sbb
test
add
xchg
imul
add
cwtl
fs
or
add
cmp
push
adc
mov
push
mov
outsl
add
popa
push
mov
mov
or
mov
push
nop
mov
cld
ret
pop
push
call
sbb
xchg
popf
cwtl
adc
mov
inc
mov
cli
and
sbb
lea
sbb
mov
add
shr
test
push
push
push
fwait
popf
adc
or
rclb
xchg
sub
xchg
pop
xor
xor
push
cmp
mov
cld
test
push
push
ficomps
push
pop
inc
or
pop
imul
ret
mov
xor
cmp
lock
jmp
xor
mov
sub
mov
mov
xchg
adc
loop
push
cwtl
mov
fmul
shlb
mov
adc
push
fdivl
sub
sbb
mov
adc
or
lea
sbb
call
imul
mov
sub
inc
mov
and
inc
ljmp
sbb
push
in
das
adc
pop
push
xchg
ret
adc
fstl
or
adc
lds
add
pusha
ja
lret
fs
pop
lods
inc
or
fists
adc
fists
pop
pop
pop
cmpsl
sahf
inc
adc
into
cmp
mov
push
clc
add
add
call
lidtl
add
shr
mov
push
outsl
cmpsb
or
test
in
mov
and
lea
jbe
sbb
clc
or
cld
or
mov
mov
shl
add
lret
push
mov
or
add
int
adc
stos
and
xor
and
inc
je
andb
sub
orl
test
outsl
movsl
test
into
cmp
cwtl
in
lret
call
js
lret
pop
and
call
push
push
in
sbb
insb
lds
push
incb
push
mov
mov
adc
xchg
push
cwtl
or
mov
adc
fdivrs
sti
cmp
lahf
xchg
pop
pop
push
xor
mov
push
dec
or
lea
movsl
add
dec
dec
pop
sub
test
clc
mov
mov
adc
fistl
or
pop
dec
pop
and
cmovb
bound
lods
xchg
movsb
out
and
les
les
pusha
mov
sbb
mov
cmpl
inc
push
or
pop
enter
xchg
add
sub
out
inc
mov
loopne
xor
shlb
sub
clc
imul
or
pop
or
add
mov
or
inc
pop
fstl
mov
sub
movl
jmp
push
clc
and
xchg
or
adcl
xchg
aaa
insl
popf
push
or
push
movsb
rorb
test
adc
sbb
xor
adc
and
mov
les
xor
ss
pushf
adc
loope
inc
cmc
cwtl
dec
aam
or
mov
cld
fstpl
outsb
inc
fadds
in
sub
mov
xor
dec
loope
movsl
and
jns
add
push
inc
adc
or
pop
xchg
stos
lock
mov
inc
mov
dec
pop
lahf
loope
fs
inc
inc
sbb
fs
adc
and
mov
inc
or
cmp
or
imul
mov
pop
and
lods
ficoml
adc
stos
sbb
xor
push
inc
cmp
xorb
test
xchg
popf
les
xor
inc
pop
subb
and
ret
cmp
test
jge
sti
mov
push
add
sbbb
push
data16
leave
adc
gs
or
stos
pusha
dec
xchg
imul
xchg
jns
jp
call
cmpsl
jns
push
movb
dec
adc
cltd
xchg
out
ljmp
xor
lds
adc
mov
push
jbe
jge
je
and
mov
pusha
ljmp
adc
mov
xor
cmc
push
ljmp
rcl
and
es
mov
cmp
ret
stos
lods
push
lods
scas
and
cmpsb
mov
jp
dec
int3
push
rorb
and
nop
and
aam
sub
xchg
sub
cld
cli
or
mov
mov
dec
cmpb
je
xor
or
sub
lahf
fisttps
out
add
testl
dec
bound
imul
mov
jnp
jo
outsl
pop
jae
push
sti
push
xchg
dec
cmp
into
jl
add
mov
mov
lea
jo
adc
xchg
dec
jne
lods
dec
inc
dec
push
lea
push
push
xor
mov
add
out
test
dec
dec
mov
mov
pop
dec
and
xchg
add
sub
mov
mov
push
nop/reserved
loopne
es
jnp
or
sub
fistpll
fidivrs
movzwl
ret
gs
adc
inc
add
and
adc
or
push
push
push
dec
fldcw
jmp
daa
sbb
or
je
xchg
subl
mov
sub
test
xor
mov
or
cmpb
and
adc
mov
movhps
je
adc
or
inc
add
adc
sbb
lcall
fs
xor
xchg
cmpsl
jne
or
add
push
lock
cld
out
dec
adc
test
push
inc
mov
adc
dec
ljmp
push
dec
adc
je
lock
add
push
mov
mov
push
je
dec
and
or
push
jge
mov
mov
and
cld
sub
or
pop
mov
je
push
in
and
push
fwait
cmp
xchg
fstl
adcb
xorb
push
in
call
xor
xor
jne
push
push
or
jno
sahf
push
and
mov
xor
jl
icebp
mov
push
dec
adcb
adcl
adc
mov
xlat
push
repz
mov
pushl
mov
in
inc
mov
scas
cmp
je
sbb
mov
adc
push
push
shll
mov
jmp
push
and
add
mov
sbb
nop
push
aad
test
mov
xchg
scas
xor
call
add
movsl
hlt
rcrl
mov
add
mov
and
inc
fnstenv
ret
test
test
test
pop
shl
dec
jne
out
add
dec
clc
pop
add
call
mov
inc
sti
call
clc
pop
cwtl
inc
xchg
es
jno
ret
push
call
lock
push
pushf
xchg
inc
dec
testl
mov
je
dec
adc
or
or
xor
push
or
sub
ret
in
mov
lret
sahf
mov
adc
les
int
add
and
dec
add
or
sub
or
shll
add
cmp
add
pop
add
sub
push
add
sub
fcompl
add
fimuls
inc
add
push
add
add
loop
or
and
push
out
cmp
inc
adc
ds
adc
adc
ljmp
xor
in
and
push
add
dec
add
cmp
icebp
adc
repnz
add
pop
add
aaa
add
sbb
notl
clc
sub
stc
xor
cli
adc
pop
mov
pop
cld
call
sub
mov
insb
sbb
xchg
cmp
mov
test
shll
pop
pop
adc
push
inc
in
jb
add
jns
push
pop
inc
mov
out
sbb
xor
enter
cmp
xor
jb
mov
insb
jbe
mov
adc
push
lea
add
inc
lret
and
inc
mov
dec
adc
call
xchg
or
sbb
into
movsb
jb
xchg
out
rolb
jbe
inc
and
ds
adc
mov
mov
and
les
mov
pop
or
repz
test
xor
nop
mov
jb
stos
pop
dec
mov
shl
dec
mov
jp
adc
or
shrb
mov
lods
pop
inc
sbb
push
fmull
loopne
enter
clc
repnz
pop
mov
jl
adc
sub
nop
sub
cmp
inc
stc
dec
setae
add
jle
and
clc
roll
dec
mov
in
or
jl
or
or
pusha
lea
sbb
add
es
sbb
xor
jl
sti
or
jbe
inc
or
jl
or
es
or
test
push
xchg
adc
add
add
ret
addl
push
mov
imul
lock
icebp
mov
xchg
enter
jp
add
adc
push
sbb
test
je
and
test
push
sub
inc
or
popf
jmp
pop
jo
mov
call
mov
insl
mov
dec
filds
inc
mov
push
add
and
cwtl
xlat
fcomps
cmp
push
add
and
inc
xor
mov
push
push
or
insb
cltd
adcl
sbb
lock
in
xchg
mov
sub
mov
or
jl
cmp
lods
xor
imul
cld
mov
push
stos
mov
push
adc
enter
jle
mov
or
scas
xor
in
rolb
sub
dec
push
cmp
mov
dec
popa
sti
leave
push
imul
icebp
add
and
dec
dec
add
mov
sahf
dec
mov
dec
lock
and
push
xor
push
inc
test
rclb
jmp
int3
add
cmp
aam
fmull
test
pop
aaa
cmp
bound
push
cmp
pop
push
pop
adc
xchg
imul
and
mov
mov
jne
push
add
add
mov
cld
stc
sub
mov
dec
mov
jno
pop
jbe
push
scas
fsubrs
into
push
and
sbb
push
jno
push
imul
aam
and
xor
adc
je
inc
add
sbb
test
ljmp
mov
aam
push
inc
or
xchg
xor
xchg
mov
movl
jne
push
pop
cmp
iret
ljmp
push
jp
andb
push
mov
lods
push
or
insb
pop
stos
mov
mov
insb
and
flds
jne
push
sub
outsl
jae
idivb
mov
pop
xor
sahf
stc
xchg
movl
mov
insb
cmpsl
clc
push
stc
neg
xchg
pop
mov
jne
rclb
loopne
adc
xor
mov
loop
jp
icebp
push
push
cltd
add
mov
adc
ret
orps
jno
sub
xchg
mov
mov
inc
je
pop
pop
jno
ret
cltd
and
cmp
push
mov
push
test
leave
and
movsl
cmpsb
inc
int
adc
xchg
xchg
test
cmp
xchg
es
dec
xchg
stos
popa
xchg
jno
test
adc
mov
sub
sub
out
stos
and
cmpsb
divb
rcrb
fildl
rorl
cmp
sub
pop
cmc
test
test
inc
int
pop
add
push
sub
mov
lods
push
shlb
dec
addb
pop
jmp
push
xor
sub
dec
frstor
push
movsb
daa
and
sub
ret
and
shlb
test
adc
xchg
jo
jmp
loop
xchg
or
sti
push
inc
sbb
sub
adc
push
push
lds
adc
jge
dec
mov
cmp
cmp
or
push
and
adc
cwtl
dec
inc
push
push
inc
or
cmp
sti
mov
mov
xor
sub
push
xlat
sub
mov
sar
adc
mov
mov
cmp
stos
mov
in
and
stos
inc
test
sub
test
cld
pop
je
inc
sub
pop
push
or
inc
mov
xchg
add
rcll
subb
xchg
sbb
rcr
inc
xor
daa
mov
mov
xor
adc
fsub
add
sahf
cs
nop
push
add
movsl
dec
and
dec
cmpsb
add
pop
or
jno
lock
inc
test
cmp
lods
and
mov
cli
inc
aam
cmp
xor
imul
sub
rorb
adc
fimull
xchg
in
data16
repnz
push
inc
dec
ljmp
loopne
mov
xchg
pop
ss
and
insb
pop
js
push
or
and
jae
jnp
sahf
jbe
repz
sub
lahf
push
in
xchg
out
cmp
mov
shlb
push
ror
imul
daa
add
mov
pushf
rcl
cmp
adc
sbbb
rcll
je
mov
xchg
cmp
nop
in
push
push
jb
cmpsl
xchg
movsl
shrl
mov
fwait
add
sarb
scas
loopne
sbb
ja
dec
fcomps
sub
enter
in
xchg
or
inc
in
dec
inc
stos
stos
adc
inc
fnsave
mov
pop
or
mov
icebp
std
dec
imul
add
sbb
sbb
and
push
push
lea
and
or
rcl
imul
rolb
pop
dec
inc
test
jnp
mov
stos
cmp
cmpsb
adc
js
cmpsb
jnp
and
jmp
cld
inc
fs
sub
dec
sbb
xor
push
bound
xor
dec
out
sub
sar
dec
das
sub
push
sbb
iret
data16
and
mov
jne
lret
xchg
inc
call
lcall
sub
pop
jmp
dec
cmpl
aaa
pop
aam
pop
loopne
adc
in
or
mov
xor
shl
pop
or
mov
xor
inc
cmp
sub
jp
add
inc
adc
xor
push
inc
add
xchg
rorl
insl
loope
movsl
adc
mov
cmc
jne
nop
pop
mov
or
loopne
xchg
jg
push
add
mov
inc
and
call
mov
je
insb
repz
push
pop
cltd
idiv
test
jo
push
sub
and
ret
add
inc
add
dec
enter
repz
arpl
call
sti
sub
sbb
push
mov
fxtract
dec
add
or
xchg
and
nop
int3
xchg
arpl
xor
movsb
push
pop
call
jmp
hlt
enter
cld
mov
arpl
cld
lock
and
clc
add
movsl
pop
jbe
call
insb
outsb
fs
sarb
stos
lock
pop
movsl
adc
and
lea
int
mov
cmc
es
fisubrs
les
and
lock
adc
mov
mov
js
pushf
in
ffree
mov
repz
sbb
sarl
mov
push
data16
fisttpl
into
fisttpl
or
stos
pop
adc
adc
jmp
jo
jmp
das
mov
xlat
dec
out
pop
aad
push
int
dec
or
push
jns
mov
pop
or
repz
shrb
aaa
push
lret
or
adc
pusha
adc
cmp
push
jb
sbb
subb
aas
xor
pop
or
adc
and
pop
lret
fdivs
orl
jl
xor
sub
mov
add
or
and
inc
or
jp
dec
mov
movsb
pop
adc
daa
test
mov
mov
mov
jo
sti
gs
xchg
cmp
xor
xor
lods
inc
jge
jno
repnz
lea
push
push
jne
push
xchg
idivl
pop
add
imul
movsl
jmp
push
call
sub
adc
mov
shll
pushf
push
push
filds
pop
push
in
inc
sbb
xchg
jge
movsb
sub
add
mov
fmuls
dec
fdivrl
test
push
xchg
sub
lods
xorb
add
and
mov
rorl
xor
push
dec
push
push
movups
cmp
push
and
mov
dec
push
xchg
push
je
pushf
add
mov
ss
cwtl
add
dec
fs
dec
push
cwtl
mov
int
mov
pop
pop
or
or
cld
mov
sbb
push
push
test
add
clc
mov
pop
or
scas
xchg
fs
sub
cmp
adc
adc
fldcw
push
movsb
das
mov
das
mov
mov
xor
sbb
lods
fistl
push
loop
cmp
dec
and
mov
mov
leave
cmp
fmuls
push
je
testb
adc
push
cmpb
das
jne
adc
cmp
add
inc
fisubs
dec
popa
or
xor
test
fldenv
sub
sbb
cmp
push
jmp
push
sub
sub
jle
push
test
dec
movsb
inc
rolb
mov
bound
push
lock
test
sub
sub
inc
sahf
mov
inc
lea
and
and
push
mov
mov
icebp
and
je
mov
rcr
test
pop
adc
outsb
movsl
das
cmpsb
jecxz
daa
mov
sub
mov
add
icebp
test
pop
cmpb
or
sbb
and
sub
orb
sbb
or
call
dec
pop
xor
jbe
pusha
mov
cmpb
repnz
fldenv
xchg
mov
stc
in
pop
push
test
xchg
rcrb
leave
and
or
cmp
dec
push
dec
lock
daa
mov
cmpsb
adc
and
and
or
out
adc
or
bound
and
sbb
test
in
addr16
nop
mov
pop
pop
inc
pop
jmp
push
push
mov
mov
sub
xchg
movsl
scas
sahf
push
fscale
push
ja
fnstcw
cmpsl
scas
dec
xor
fs
loope
or
or
adc
push
nop
es
inc
inc
cmp
sub
insb
jns
dec
push
jp
push
xchg
loope
mov
sbb
pop
and
loopne
lea
mov
push
push
sbb
jle
shll
call
sbb
stos
xor
clc
fldl
decb
addw
or
lods
adc
jo
jae,pn
xchg
icebp
sub
add
inc
mov
fcmovu
mov
lea
adc
test
int3
dec
gs
js
and
subl
push
sarl
xchg
jbe
xor
sub
sub
jle
loope
jl
and
jbe
stos
sub
adc
gs
or
or
inc
add
push
sub
sbb
or
sub
dec
cmpsb
fsubp
jmp
xor
scas
lss
jbe
and
enter
mov
sub
mov
sub
mov
xor
mov
bound
fldcw
enter
test
push
in
inc
mov
push
sbbb
mov
cmpsl
fsubs
mov
or
inc
jo
sbb
sbbb
lcall
mov
enter
push
and
testb
add
stc
inc
clc
stc
movntps
imul
inc
and
scas
adc
call
xchg
pop
mov
xchg
mov
in
inc
xchg
adc
add
int3
cmp
or
jmp
xchg
int
mov
insb
push
xchg
xchg
mov
and
xor
mov
dec
or
inc
mov
orb
sub
push
xor
in
lret
sbb
jge
push
test
xor
sub
mov
cmp
cmp
push
ret
adc
es
dec
pop
fimuls
adc
jne
aam
int
push
push
andl
test
mov
sub
xor
fadds
subl
pop
je
inc
fsubrs
mov
mov
je
mov
adc
jns
mov
mov
and
sarb
adc
in
add
fs
data16
mov
mov
andl
movsb
push
mov
sub
dec
xchg
mov
push
scas
mov
xor
xchg
xlat
jmp
lock
xchg
das
sbb
pop
fdivrl
shl
cmpsb
icebp
and
jb
xor
cld
jb
loope
xor
inc
add
cld
mov
cltd
mov
jl
add
mov
testl
mov
insl
xchg
aaa
sub
inc
push
cld
repnz
xor
or
rclb
xor
inc
push
test
leave
adc
daa
stos
jge
jns
mov
in
movsb
int3
mov
mov
outsl
pop
xlat
les
fcmovnu
ret
xor
push
clc
test
xor
ljmp
lret
dec
test
hlt
lods
dec
in
push
mov
mov
and
aad
push
leave
movsl
mov
adc
jbe
push
lret
xor
dec
mov
push
rolb
cmp
dec
mov
pop
test
mov
cltd
and
jns
xor
mov
and
jge
jle
jbe
jno
cmc
cs
xchg
push
jb
into
sbb
iret
jns
push
mov
test
sbb
sbb
xchg
cmpl
mov
sub
insb
mov
pop
and
lock
and
adc
cli
xor
repnz
push
mov
and
ret
pop
sbb
inc
fdivr
dec
mov
jno
ret
subb
fmulp
pop
jl
sbb
pop
pop
mov
xchg
push
fcoms
push
jg
movsl
pop
or
inc
push
push
or
mov
mov
popf
fadds
inc
and
call
test
stc
mov
and
movsl
push
add
jno
sub
insl
sub
mov
xchg
xor
data16
jae
test
fdivrl
test
repnz
xchg
test
cmp
add
jb
or
sbb
mov
mov
inc
push
lds
dec
dec
iret
cmpsb
je
sbbb
dec
inc
xlat
add
xlat
pop
jb
adc
sub
mov
sbb
xor
mov
xchg
sbb
jg
dec
mov
pop
inc
inc
mov
cmp
mov
cmp
adc
push
jl
mov
push
inc
add
inc
shll
mov
clc
push
push
push
cmp
sbb
or
inc
xor
mov
jp
push
push
sub
shlb
mov
cmpsb
pop
sub
nop
lods
je
dec
or
and
clc
add
mov
push
imul
push
jle
inc
outsl
adc
ds
test
push
adc
mov
pop
pop
adc
inc
or
es
pop
jp
xor
ja
lcall
cmp
and
cltd
adc
jmp
cwtl
push
mov
mov
lcall
or
mov
gs
cmp
dec
sub
pop
sahf
push
mov
xchg
lahf
lods
daa
test
mov
jmp
mov
shll
push
mov
jmp
dec
clc
shlb
inc
dec
push
or
adc
add
fdivrl
mov
and
push
enter
sbb
adc
adc
movsl
sbb
adc
adc
pop
xchg
cmp
sti
and
push
push
sbb
xor
jb
les
cmp
adc
xchg
sub
xor
int3
cs
cs
into
test
movsl
in
je
daa
mov
loope
xchg
xor
sbb
sub
add
push
enter
nop
sbb
sbb
or
add
xor
jne
adc
or
imul
jbe
push
xor
cmp
or
inc
xor
popf
push
adc
in
bound
into
xor
gs
push
jnp
or
xchg
ret
sbb
or
mov
jno
dec
adc
push
xchg
mov
mov
or
xchg
jns
lock
in
fidivrl
loop
and
mov
jo
jp
insb
sbb
int
sub
dec
lcall
jbe
jle
into
pop
adc
xchg
arpl
inc
or
cmc
cmp
divb
hlt
adc
inc
movb
jae
pop
mov
jo
and
push
sub
push
dec
inc
enter
jb
dec
arpl
or
and
push
or
mov
cwtl
jge
cwtl
imul
clc
adc
je
fildl
in
test
sbb
testb
mov
or
adc
stc
mov
jne
ret
je
lea
jmp
dec
in
pop
ret
sbb
dec
jl
cmpsb
cmp
lret
cmp
adc
daa
cwtl
por
cwtl
xchg
push
dec
ljmp
push
xor
loope
leave
ret
fisubrs
xor
lods
pop
test
cli
push
pop
push
aaa
jb
test
les
testl
lret
movsl
jmp
mov
mov
bound
cmp
mov
clc
int
sahf
push
push
push
mov
adc
pop
nop
leave
test
lods
ret
mov
les
inc
lods
fidivrs
cmp
not
loope
test
push
jmp
popa
ss
jmp
dec
push
adc
fs
push
mov
clc
and
push
out
fs
jne
mov
adc
je
call
sarl
js
push
ret
ret
aaa
push
pop
pop
sub
ficoms
pop
push
cmp
sbb
stos
pop
sbb
lahf
xchg
mov
movsb
icebp
mov
fistl
repz
sbb
xchg
or
push
push
add
jns
outsl
out
lds
ds
inc
inc
sbb
mov
loop
push
mov
pop
bound
popw
out
rolb
je
mov
aas
cmpb
addl
push
dec
lret
inc
mov
stos
pop
lahf
add
fs
and
jne
lods
pop
mov
hlt
pop
and
jl
pushf
xor
cmp
mov
cmp
xchg
jo
or
loope
ljmp
call
out
xor
call
into
adc
andw
mov
and
subl
pusha
inc
push
or
pop
shll
or
mov
arpl
loope
divl
push
adc
cmp
mov
dec
je
mov
or
inc
sti
in
push
add
or
imul
loope
pop
lock
or
dec
inc
add
and
inc
cmp
xchg
pop
mov
sub
stos
imull
or
pop
xchg
push
sbb
push
int3
sub
pop
daa
icebp
jbe
and
pop
loope
inc
and
addl
dec
mov
loopne
jae
cld
cmp
popf
aam
push
xchg
and
imul
push
es
xchg
xchg
cltd
xchg
mov
jnp
shrl
repnz
fs
sub
pusha
loopne
dec
lock
adc
shr
out
mov
loopne
insl
push
adc
lret
push
pop
sub
rcll
or
in
out
mov
dec
call
xchg
push
sbb
xor
sbb
inc
pop
movsb
mov
xchg
or
test
push
or
gs
cld
and
sub
pop
in
addr16
daa
jecxz
jno
inc
or
notb
les
push
push
or
packsswb
add
cmp
inc
and
sub
adc
insb
push
sti
cmp
cmp
jge
ret
fnsave
roll
fdivrs
dec
ret
repz
enter
push
push
ds
dec
movsl
or
adc
mov
fdivrl
dec
cmc
sub
xchg
lret
xchg
push
inc
aas
dec
imul
cmp
ret
scas
mov
cmpb
jne
add
jbe
das
push
inc
push
sahf
dec
ljmp
jne
faddl
sub
gs
lret
push
movsl
in
fsubrs
mov
sub
insb
xchg
fldcw
pop
pop
je
mov
aad
push
test
mov
loop
mov
push
and
ret
fmul
sbb
mov
call
push
cwtl
xchg
cmovg
pop
and
dec
xchg
adc
pmullw
cs
mov
sub
sbb
cmp
pop
dec
lods
aam
sbb
fisubl
push
xor
test
ret
xor
xchg
popf
xchg
adc
inc
cwtl
fcoms
or
push
push
fisttpl
dec
push
push
out
lcall
push
sub
aam
fs
inc
lret
leave
fdivr
daa
mov
in
mov
push
adc
sub
xchg
lahf
or
push
push
jg
pop
push
imul
pop
xor
sbb
push
aad
loop
push
mov
jg
outsl
xchg
cmpb
daa
lret
pop
shl
pop
push
adc
add
das
xor
xchg
jle
xchg
inc
sub
in
cmp
or
mov
mov
mov
push
or
mov
xchg
mov
mov
or
in
inc
mov
and
mov
jge
dec
pusha
in
push
push
jae
xor
mov
lock
pop
adc
adc
pop
ret
dec
gs
dec
dec
cmp
push
push
sub
push
lret
jo
xor
mov
sub
lcall
inc
mov
xor
cmc
dec
lea
int3
xchg
xor
jp
sub
push
push
and
or
ret
adc
fldl
xchg
lcall
mov
mov
or
or
xchg
and
sbb
pop
fcompl
je
andb
mov
xor
call
test
adc
js
sbb
sub
or
or
sahf
adc
jb
or
add
inc
push
adc
movsb
rorb
pop
inc
mov
enter
and
fnstsw
inc
jge
dec
and
or
xor
cmpsb
jae
and
enter
ljmp
push
inc
mov
push
orb
inc
or
xor
lock
adc
cmp
and
mov
push
or
js
pop
jmp
pushf
push
test
ljmp
sub
adc
aas
nop
sbb
push
pushf
push
mov
enter
gs
insb
pop
push
sub
cmpsb
pop
and
mov
adc
or
pop
inc
nop
inc
lret
and
sbb
js,pn
mov
pop
jmp
jo
jno
sbb
xchg
add
jmp
push
loopne
jle
mov
jmp
adc
inc
icebp
sbb
sbb
push
adc
and
inc
push
je
nop
movsb
test
pop
inc
mov
sbb
push
rolb
jecxz
push
dec
fsub
js
cmp
jmp
test
add
setp
movsb
dec
fbld
mov
sbb
xor
and
lret
adc
adc
cwtl
insl
or
in
test
push
adc
call
ja
mov
mov
dec
lock
dec
enter
jno
or
test
sbb
mov
xchg
or
orb
add
call
xchg
loopne
call
enter
cmp
xchg
sbb
sbb
pop
arpl
pop
mov
sub
popl
cmp
xlat
and
and
insb
push
in
sub
iret
fs
xchg
dec
pop
test
mov
dec
rorb
inc
add
push
sbb
adc
or
mov
mov
test
ljmp
cmc
pop
adc
or
mov
push
sub
enter
into
punpckhbw
call
clc
dec
out
inc
fsubl
mov
cwtl
xor
mov
sbb
xor
dec
or
rolb
dec
nop
outsb
ljmp
les
movsb
or
cltd
xchg
push
xchg
insb
or
dec
jnp
cmp
aad
inc
dec
shrl
and
mov
or
adc
loop
push
inc
and
sub
cmp
push
and
cmp
sbb
in
or
jl
inc
lods
jns
test
insb
add
and
push
and
add
or
mov
mov
xor
sbb
js
xchg
nop
or
adc
sbb
test
mov
out
adc
dec
lahf
loop
out
dec
loop
inc
adc
and
or
negb
cld
out
inc
test
call
mov
fmuls
rcrb
sbb
cmp
mov
pop
inc
test
cmp
cmp
cmp
or
addl
arpl
les
les
mov
add
push
ss
and
xor
movsb
push
xchg
pop
push
push
xchg
shr
dec
ret
nop
sbb
sbb
dec
sbb
je
sbb
les
enter
xchg
jge
inc
push
push
adc
popf
ja
push
cmp
xchg
es
ja
fs
lods
popa
cld
in
mov
sub
xor
enter
or
movsb
mulb
cmovo
and
xor
subl
mov
adc
js
pop
cmpsl
adc
push
pop
mov
and
jmp
in
nop
adc
add
test
push
and
adc
pop
sub
outsb
fidivrs
and
dec
mov
push
push
xchg
inc
enter
jp
mov
dec
xor
in
push
adc
nop
push
test
xor
and
in
adc
in
shrb
adc
and
or
jl
mov
call
sub
xchg
pop
les
sub
and
lret
xor
jmp
orl
push
adc
mov
mov
enter
add
rcrb
pop
test
sahf
push
test
xor
es
dec
xchg
test
cmp
in
mov
lret
sti
dec
adc
and
push
sbb
jo
pushf
adc
sbb
subb
popa
push
inc
test
mov
push
sub
xor
push
xchg
sbb
xchg
sbb
and
adc
inc
nop
loop
cmp
inc
cld
inc
mov
mov
mov
test
jb
sbb
and
adc
cmp
lea
out
pop
outsb
dec
pop
aad
xchg
mov
xlat
mull
adc
or
testb
cltd
jg
cmp
shll
cmc
adc
xchg
dec
pusha
mulb
cmc
daa
mov
push
xchg
test
inc
mov
xor
mull
cmc
push
lret
push
clc
pusha
mov
mov
push
out
vunpckhps
adc
stos
add
xor
jmp
stos
inc
push
mov
add
mov
mov
mov
dec
fwait
sub
push
dec
sahf
pusha
in
or
push
rorb
orl
mov
mov
mov
lock
mov
call
repnz
outsb
mov
jns
mov
xor
addr16
dec
jp,pt
shlb
repz
imul
inc
and
add
aad
add
mov
xchg
setl
adc
insb
cmp
add
or
sbbl
sub
jecxz
cltd
cld
in
cmpsl
popa
icebp
mov
out
push
sahf
jecxz
cmp
adcb
lods
or
adcb
nop
adcb
test
movsb
aam
lea
fbld
and
inc
mov
push
xor
xor
mov
dec
push
or
or
pop
pop
orb
les
dec
cld
mov
mov
push
inc
mov
cmp
jl
out
push
sbb
mov
push
push
mov
int
or
xchg
mov
or
jmp
aam
les
in
lock
jp
pop
adc
or
adc
js
mov
mov
test
test
pop
push
shll
inc
movsbl
mov
or
rclb
push
push
jae
mov
pop
push
jmp
mov
imul
xchg
adc
inc
je
lahf
adc
push
adc
test
push
std
aad
cltd
into
in
cmc
xchg
push
xchg
test
cmp
mov
mov
xor
and
mov
push
andb
dec
negb
push
ss
call
pop
je
sub
addr16
cmp
cltd
test
push
fstl
mov
aam
or
nop
mov
and
pop
and
mov
or
inc
les
lds
cmpsl
jo
leave
lea
sbb
push
fdivrl
mov
rorb
xchg
cmc
xor
push
mov
jmp
mov
mov
dec
xorl
icebp
es
push
cmpsb
xchg
mov
pop
mov
push
xchg
jb
sbb
lods
testl
test
cmp
ss
inc
adc
or
and
inc
pop
sub
or
lock
mov
pop
jae
push
loop
jmp
andb
xchg
les
sbb
and
or
adc
inc
xchg
cld
sub
je
lods
popf
push
cwtl
xor
cmp
pop
clc
pop
mov
std
pop
in
push
or
push
shl
jns
in
inc
std
xchg
es
adc
pop
fs
mov
inc
jecxz
cli
fcoml
jge
std
sub
je
ja
ja
jo
cmp
clc
jno
cmpb
mov
call
repnz
aas
test
je
and
jbe
ljmp
and
sbb
and
push
andb
xor
add
or
add
pop
imul
xchg
pop
adc
dec
pop
int3
mov
fwait
push
test
clc
scas
adc
xchg
jmp
les
add
addr16
leave
loopne
push
mov
add
mov
cmp
xor
or
sbb
inc
cmp
jl
xor
ret
inc
jle
cmp
xor
dec
scas
add
sbb
pushl
mov
cmp
sarb
pop
or
pop
stos
cmp
lret
jp
pop
in
cwtl
adc
movsl
ja
adc
and
js
and
mov
cmp
mov
push
push
dec
int
push
jg
jg
add
mov
dec
cmp
jle
in
jl
inc
daa
cwtl
inc
add
xchg
pop
shlb
pop
jl
ljmp
scas
pop
dec
sbb
imul
or
adc
or
test
out
mov
or
mov
jmp
loopne
lcall
push
or
leave
cld
inc
cmpsb
dec
sub
dec
and
ds
push
hlt
aad
es
or
sub
xchg
pop
jle
add
fmull
lea
jb
cmpsb
adc
or
enter
and
add
jne
dec
dec
addb
lret
lea
loop
negl
sar
pop
dec
inc
aad
pop
jo
mov
jno
cs
dec
push
sub
mov
or
add
inc
jmp
icebp
jo
cmp
aam
or
push
je,pn
add
jl
stos
pop
dec
rorb
mov
push
mov
sbb
lret
and
iret
sub
inc
push
pop
cld
sbb
xchg
pop
test
jge
mov
mov
lods
dec
dec
popa
stos
push
les
sbb
adc
cmovs
push
shl
fdivl
mov
xor
pushl
mov
and
xchg
mov
das
mov
ss
mov
xchg
mov
enter
xor
pop
leave
cmp
cld
sub
mov
mov
pop
inc
dec
test
sbb
mov
in
and
pop
xor
push
jae
test
add
leave
mov
xchg
adc
aaa
mov
jecxz
repz
ds
rcll
add
inc
sub
in
sti
pushw
insl
testl
jns
pusha
imull
mov
dec
mov
xlat
inc
fdivs
neg
xor
arpl
jb
andb
sbb
jne
push
ja
bound
ja
pop
pushf
clc
add
push
cwtl
mov
push
and
dec
pop
inc
mov
movsl
jp
hlt
loopne
pop
cwtl
cmp
mov
test
pop
push
xchg
add
movsb
mov
pop
ret
dec
dec
mov
pop
mov
test
pop
sbb
scas
mov
rcll
das
inc
mov
mov
aam
jne
push
pushf
loope
scas
loope
inc
adc
mov
adc
daa
js
fldcw
les
sub
pop
push
imul
push
inc
in
pop
and
and
aad
xchg
or
std
lret
adc
add
adc
xor
cmc
or
out
adc
movsb
call
xlat
mov
sub
test
and
stc
push
push
inc
inc
jmp
pop
push
insl
pop
sub
push
mov
adcb
inc
movsb
or
sbb
stos
bswap
or
leave
mov
sbb
xchg
in
aas
dec
cwtl
sub
addr16
pop
icebp
fsubr
out
xchg
add
aaa
imul
and
cmp
adc
clc
add
or
push
pop
jle
test
push
jg
mov
jp
mov
jmp
fwait
sbb
push
ficomps
and
sbb
add
xor
push
add
pop
mov
add
and
insb
rcrl
aas
mov
sti
and
cwtl
mov
cwtl
sarb
push
and
repnz
adc
or
insl
test
loop
aaa
mov
mov
adc
ret
aam
inc
subb
mov
or
arpl
je
and
adc
push
xor
jmp
enter
jbe
mov
outsl
cld
pop
test
mov
ja
je
lea
xchg
adc
pusha
movzbl
cld
and
lds
push
addb
into
push
add
stc
insb
or
cld
inc
test
adc
imul
pusha
push
add
cmp
jg
pop
setne
xchg
daa
dec
je
adc
hlt
stc
or
pop
repnz
int3
fbld
jl
adcl
and
dec
outsb
xchg
jne
push
inc
popf
ret
add
add
push
add
push
or
jmp
adc
adc
inc
hlt
dec
lds
ds
lods
dec
sbb
add
test
adc
lds
imul
je
mov
ret
cmp
bound
ja
jle
cld
in
mov
js
jae
inc
push
dec
je
push
cmp
xor
or
pop
adc
mov
push
lcall
mov
movntps
lcall
ret
aas
les
mov
ja
sub
jp
pushl
sub
push
popf
bound
out
test
xchg
push
jecxz
inc
mov
xchg
in
pusha
push
insl
push
push
clc
pop
cmp
xchg
aaa
hlt
daa
pop
sub
xchg
lock
es
pop
mov
push
out
or
or
aas
add
sub
aad
dec
rcrb
nop
mov
mov
adc
adc
push
mov
pop
sub
mov
jbe
mov
jns
xchg
push
mov
pop
aam
aam
sbb
or
sbb
and
adc
sub
dec
punpckldq
int
cs
push
jne
mov
adc
mov
in
sub
int3
cmp
push
mov
sub
rcl
add
add
orb
pop
aaa
push
sbb
mov
push
pushl
sbb
dec
pop
inc
in
aam
cmp
add
loope
pop
mov
jb
mov
inc
andl
or
dec
lock
push
in
sbb
out
or
clc
mov
test
add
enter
push
ds
push
mov
and
xor
dec
call
stc
int
or
ja
fcoms
pop
or
or
pop
leave
ret
pop
adc
shrl
mov
add
out
mov
adc
mov
sub
movsb
xchg
fninit
movsb
stos
push
out
sub
fwait
sub
jmp
adc
outsl
cld
test
imul
mov
testb
cmp
je
cmp
jno
xchg
push
lds
mov
dec
jl
mov
and
jmp
xor
jb
insb
push
adc
jno
sarl
lret
lea
xor
lea
push
in
push
xchg
sub
sub
adc
jbe
jne
test
inc
cmp
push
nop
jge
arpl
mov
xchg
jl
gs
daa
and
push
pcmpgtb
xchg
mov
sub
je
loop
jl
xchg
sbb
pop
dec
sbb
gs
jmp
and
push
bound
cvtdq2ps
es
pinsrw
lcall
jge
mov
js
inc
in
xchg
test
jg
adc
nop
loope
adc
inc
leave
hlt
jbe
and
aaa
dec
pop
pop
mov
cmp
xchg
dec
in
loope
das
aad
and
cld
insl
push
mov
push
adc
inc
ljmp
stos
sub
and
inc
adc
xor
and
add
aas
or
cltd
push
test
push
push
or
push
push
dec
out
cmp
push
adc
mov
movsl
in
dec
inc
mov
pop
or
add
jp
jae
jge
shrl
adc
push
push
daa
test
jne
jo
sbb
or
adc
xchg
lahf
and
test
push
adc
test
bound
jbe
incb
or
push
pop
xchg
ret
jmp
fcmovnu
mov
mov
sub
mov
cmp
adc
movsb
add
nop
pop
enter
push
sub
insb
aas
xchg
sub
push
push
adc
enter
and
sub
inc
sub
sbb
xor
or
loope
mov
out
or
dec
enter
sbb
test
sbb
int3
push
and
pop
pop
jmp
sub
cmp
push
jmp
mov
xchg
cltd
xor
rcll
popf
int
mov
jecxz
fimuls
push
sbb
lock
aas
add
jnp
out
testb
or
jle
ret
or
push
je
cmp
push
repnz
imul
iret
or
sbb
jno
or
mov
inc
xor
test
or
push
or
es
and
stos
and
orb
add
jb
jmp
xchg
dec
scas
cmp
push
sbb
push
xchg
leave
push
mov
cld
push
dec
push
js
imul
cwtl
or
sub
stos
test
and
rolb
arpl
mov
pop
inc
or
cmp
or
pop
je
push
add
or
and
xor
enter
test
add
sub
and
adc
jo
sahf
call
inc
xor
add
sub
sbb
or
sub
add
mov
jle
insb
mov
adc
push
lds
xorl
daa
sub
push
dec
test
jne
nop
les
rolb
inc
cld
movsb
test
ds
dec
test
sub
neg
fbld
or
push
adc
testb
incl
sbb
inc
add
loop
add
lahf
nop
aam
add
inc
adc
xor
in
and
pop
daa
push
test
sbb
adc
dec
bound
fidivs
mov
daa
clc
icebp
mov
or
imulb
call
dec
or
push
adc
mov
punpckhwd
imul
cmp
adc
add
push
sub
push
xchg
setns
ljmp
xchg
fsts
mov
loop
test
std
ljmp
cwtl
adc
test
je
add
loope
mov
daa
push
push
or
push
cmpsl
rorl
popf
les
add
sub
je
addl
push
repz
into
or
js
mov
mov
rcrl
mov
push
test
adc
push
push
int3
push
adc
divl
lret
das
and
add
jbe
lea
jo
xor
sbb
jb,pt
jmp
push
xor
jge
pop
dec
fwait
movsl
shrw
insl
xchg
mov
push
int3
ljmp
pop
mov
dec
fidivrs
or
inc
inc
pop
movd
test
add
icebp
adc
outsl
repz
pop
pushf
jb
mov
jl
mov
add
pop
or
xchg
outsl
jo
or
sub
in
cli
js
push
orl
adc
mov
xor
cld
out
xor
mov
mov
cs
cmp
mov
imul
lea
popf
aam
rep
push
mov
cld
or
or
pop
inc
aam
shr
mov
xchg
add
repz
cli
prefetch
test
dec
mov
or
add
add
in
daa
dec
movsb
lret
pop
adc
insl
adc
add
dec
mov
or
scas
negl
je
outsl
mov
and
xchg
xchg
aad
xchg
loopne
cmpsb
push
xchg
or
fisubs
jb
jmp
mov
xchg
sub
push
sbb
or
sub
jo
jo
mov
shrb
sbb
adc
or
xchg
adc
data16
jge
lods
push
and
int
jo
stc
jle
ret
xchg
cmp
int3
push
xor
inc
std
xor
mov
pop
inc
rolb
or
mov
or
sahf
xchg
cmc
movsb
pop
jmp
inc
push
push
push
xchg
ret
xor
jno
mov
mov
out
or
push
call
dec
xchg
test
jne
mov
jmp
popf
pop
inc
push
into
mov
test
xchg
shrl
dec
xchg
adc
cmp
mov
sub
shll
out
push
lock
in
hlt
scas
push
adc
adc
dec
incb
dec
or
lods
push
sub
push
mov
mov
and
imul
or
out
xchg
das
test
lods
and
sub
push
mov
mov
sbb
fmuls
add
nop
inc
pop
mov
xchg
jecxz
decl
les
cs
sbb
inc
jno
aaa
fs
or
loope
mov
sbb
imul
icebp
mov
jmp
arpl
mov
sbb
xchg
pop
or
jne
repnz
mov
adc
lock
add
mov
loop
inc
idivl
add
fimuls
and
adc
lcall
xchg
xchg
loopne
lock
pop
cmp
xor
xor
or
test
std
mov
das
cmp
pop
or
lods
sbb
push
adc
add
push
mov
sti
cld
xor
xor
mov
cs
inc
xchg
add
pushf
bound
pop
dec
inc
xchg
xor
shrl
movsb
aas
push
int3
das
and
subb
pop
testl
popa
mov
adc
sub
sahf
push
pop
dec
adc
push
push
and
into
mov
lods
push
test
and
jne
test
je
ret
jb
and
imul
shl
adc
jb
lea
loop
dec
stos
xor
call
push
push
push
stos
das
pop
and
fcoml
and
sbb
add
dec
subl
ficoml
push
in
mov
rcrl
mov
sbb
adc
sbb
push
ja
mov
notb
push
pop
adc
sub
es
jo
push
je
stos
adc
dec
xchg
out
jne
enter
in
jne
fdiv
cwtl
data16
daa
adc
mov
inc
aad
jle
mov
dec
outsl
aam
cltd
pop
sub
dec
dec
into
bnd
nop
adc
pop
or
sbb
cmpsb
lods
mov
mov
sbb
sbb
scas
mov
mov
sbb
or
lods
push
mov
ret
push
push
and
in
in
push
push
xlat
test
movsl
fldcw
test
mov
mov
es
push
je
cmpl
mov
sub
adc
push
jmp
dec
jle
lret
insb
push
pop
cmp
push
and
je
subb
inc
cwtl
push
jno
sbb
push
mov
cld
adc
js
movsl
pusha
cmp
pop
and
adc
pop
daa
decb
jg
jl
fstl
inc
xchg
mov
lods
mov
pusha
mov
push
mov
aam
mov
fdivl
push
cmp
mov
aad
das
lock
fcoml
leave
sti
mov
jne
add
push
cltd
orb
mov
jmp
out
inc
fldenv
movsb
js
addr16
dec
add
cmp
xorl
dec
or
jge
push
jl
or
push
add
pop
lock
lcall
push
push
dec
je
xor
loopne
sub
ds
xchg
fdiv
mov
lock
cmp
shrb
das
jns
mov
pop
xor
nop
add
nop
pop
les
mov
mov
leave
stc
inc
pop
pop
pop
dec
inc
movsb
mov
push
xchg
cmpl
sbb
jbe
dec
adc
sub
or
mov
nop
mov
ret
inc
int3
mov
sbb
out
cmp
adc
adc
adc
movsl
out
dec
mov
out
or
insb
hlt
xor
loope
push
adc
and
call
push
enter
fsubs
aam
andb
inc
movsb
or
push
xor
xchg
xor
mov
mov
stc
stos
sbb
stos
int3
das
mov
push
pop
mov
in
das
inc
sub
sbb
lods
xor
push
add
xor
inc
std
add
sbb
jne
testl
cwtl
lods
push
sub
nop
mov
inc
cmp
push
lret
lods
push
mulb
jl
sti
shrb
lods
fcmovnbe
movsb
pop
stos
mov
icebp
jp
push
and
xchg
and
mov
out
jo
jns
hlt
jle
iret
sub
push
dec
push
test
and
xchg
lock
fs
lret
pop
pop
jp
aaa
dec
jge
dec
fs
pop
aaa
pop
call
dec
dec
fcomps
shr
cmp
aaa
je
or
sbb
rol
mov
mov
or
and
cltd
jmp
arpl
mov
adc
mov
cs
lods
shrb
adc
outsl
js
mov
dec
xchg
fisttpll
jae
popf
mov
and
sub
dec
pop
cld
sbb
dec
jns
loope
inc
inc
xor
xchg
xor
out
sub
xchg
mov
paddw
mov
sbb
jl
clc
xor
jmp
push
lea
xor
in
adc
mov
adc
shrl
jg
mov
xchg
inc
les
or
test
popf
and
jl
mov
inc
loope
popf
das
fidivl
pop
push
pushf
in
cmc
jmp
or
mov
add
je
cmpb
sub
add
pop
movsbl
mov
sub
dec
dec
cmp
dec
jns
mov
pop
notb
mov
push
pop
test
xchg
aas
pop
cld
cmpb
mov
ret
dec
sub
aam
addr16
inc
push
out
sub
outsl
movsl
adc
push
aad
mov
in
in
pop
sub
lahf
imul
jne
xor
mov
leave
sbb
mov
dec
adc
leave
and
test
dec
and
scas
int3
dec
mov
int3
popa
nop
sub
call
sub
sub
mov
sub
aad
cmp
xchg
ljmp
or
cmp
jbe
bound
push
data16
xchg
sub
mov
in
sbb
mov
jmp
and
cmp
xchg
subl
cmpsl
mov
hlt
inc
add
xchg
lea
pop
jne
mov
test
nop
adc
xor
or
sub
pop
leave
lods
push
push
insb
or
in
iret
scas
aaa
sub
mov
push
dec
lea
push
push
or
call
imul
lods
push
dec
push
sub
xchg
jns
dec
test
push
icebp
ficompl
xchg
jmp
jecxz
jmp
push
je
push
subb
loope
sub
inc
jo
or
pop
push
cmp
or
adc
fistpll
and
je
rcrb
add
push
inc
inc
popf
into
outsl
push
in
push
xchg
jmp
scas
scas
add
or
nop
jmp
pop
stos
lea
lea
inc
push
mov
shl
pop
je
pop
inc
inc
push
shlb
mov
add
into
pop
dec
pop
or
repz
subb
xchg
add
jle
ja
cltd
and
out
xor
test
push
push
mov
in
out
lcall
jg
inc
fs
pop
push
inc
adc
inc
icebp
push
push
in
cmp
xchg
les
sbb
ljmp
lret
test
push
int3
nop
fmull
sbb
popf
test
sub
push
daa
pop
push
js
xchg
jb
lods
adc
cmp
jmp
cmpb
dec
cmc
cmp
push
jno
xor
adc
repnz
pop
mov
sbb
push
adc
daa
xchg
or
or
stos
jnp
and
mov
or
lock
push
lea
pop
adc
push
cld
push
sub
loope
pushl
test
ljmp
mov
cmp
movsl
pop
test
xor
cmp
mov
xchg
dec
or
sbb
clc
std
push
popa
adc
fcoml
adc
lods
adc
or
adc
das
xchg
or
and
sub
xchg
cmp
sub
push
inc
insl
push
insb
push
mov
jmp
mov
jne
cmp
mov
lret
push
sar
push
xchg
in
inc
add
dec
imul
fucomip
rol
je
dec
jne
pop
xor
and
sbb
xor
pop
xor
movsl
loop
jb
add
ffreep
jmp
pop
jecxz
sbb
push
sti
sub
push
push
mov
aas
cmpb
je
sbb
xchg
push
mov
xchg
ss
cmp
or
push
push
idivb
test
mov
ret
push
outsb
jp
cmpb
pop
movsb
std
mov
push
pushf
pop
popf
push
int3
test
and
mov
adc
lahf
das
xlat
ss
test
jge
loop
jg
mov
adc
stos
xchg
xor
out
dec
push
shl
test
adc
xor
loop
and
and
push
cs
and
jo
lea
int3
xor
mov
jae
lea
mov
cmp
dec
cmovge
mov
mov
and
fwait
push
sbb
xor
xor
mov
das
and
stos
dec
mov
dec
mov
xchg
hlt
sbb
fldt
jbe
mov
xorl
push
cmp
jmp
lods
xor
pushf
pop
sub
incl
mov
push
pop
rcll
lea
and
jl
jae
adc
cmp
mov
xor
inc
addl
mov
ret
dec
mov
imul
and
adcl
ja
mov
mov
jo
mov
outsl
sub
and
push
movsb
mov
pop
out
jbe
jnp
cmp
adc
dec
sub
lea
push
fbld
enter
push
mov
cmpl
jo
mov
mov
sub
orl
push
mov
mov
rorl
lds
je
js
pushf
push
je
mov
or
int3
mov
fs
mov
js
adc
stos
or
add
mov
or
cmpb
xor
cmp
adc
movups
pop
dec
jae
fs
jle
movsb
pop
or
add
mov
mov
pusha
fdivs
push
in
inc
push
ret
in
xor
push
pop
fisubrs
push
test
push
stos
inc
dec
push
mov
fs
mov
or
mov
adc
pop
fstl
mov
sbb
mov
cli
mov
mov
in
mov
incl
jge
inc
test
in
gs
pushf
orb
roll
mov
jecxz
iret
dec
test
sub
mov
and
cmp
test
mov
xor
inc
sub
mov
and
cmpsb
sbbl
push
pushf
and
loop
cld
sub
dec
repnz
push
adc
bswap
mov
stos
xor
scas
adc
add
les
popa
mov
adc
pushf
xor
push
adc
test
punpckhbw
push
and
push
les
sub
out
adc
sub
and
cmp
adc
add
add
push
mov
in
cmp
add
adc
mov
and
les
jno
or
inc
adc
mov
daa
nop
pop
jae
cmp
push
les
pop
push
adc
push
mov
sub
sub
or
or
pop
adc
call
in
and
and
pop
pushf
add
xorl
or
sub
jne
fstps
mov
cmp
mov
scas
lea
sub
pop
jg
xchg
add
sbb
addr16
out
sub
and
dec
push
lods
or
or
adc
les
add
cmp
mov
add
ret
inc
loope
xchg
and
push
inc
jl
xchg
adc
pop
and
push
or
inc
inc
mov
dec
cmp
or
xor
and
inc
push
sbb
inc
adc
and
inc
jne
and
sub
pop
jne
lods
or
xor
sub
lea
adc
sub
fdivs
dec
mov
das
xchg
cmc
mov
mov
sub
adc
inc
mov
cwtl
je
mov
js
orb
je
mov
sbb
inc
scas
dec
xchg
adc
or
jbe
pushf
and
stc
adc
sahf
push
push
sbb
in
fidivl
or
or
inc
add
and
push
test
sub
es
cs
or
adc
in
push
or
in
mov
inc
aam
and
nop
jae
xchg
inc
pop
and
mov
inc
adc
or
add
cmp
movsb
pop
mov
mov
sub
push
and
js
inc
push
addb
out
and
or
pusha
or
mov
pop
call
or
inc
inc
mov
sbb
pop
js
xchg
xor
lret
inc
sbb
or
mov
ror
adc
sub
sbb
and
jae
add
rcrl
jle
xchg
ret
popa
inc
jmp
shrl
cmp
xchg
dec
xchg
sbbl
xchg
mov
and
adc
lahf
movsb
clc
dec
lret
stos
gs
push
fs
sub
sarb
iret
pusha
fdivs
jmp
into
pop
es
sub
and
loope
adc
adc
adc
cmp
or
lahf
and
xchg
daa
pop
push
stos
or
dec
xchg
xor
pop
dec
stos
rcl
push
sbb
inc
pop
test
inc
leave
les
jne
test
mov
pop
fcomi
xchg
pop
dec
inc
dec
pop
inc
call
add
flds
push
xor
jmp
xchg
or
add
sbb
push
mov
sub
sub
mov
inc
cmp
push
push
lds
or
sub
js
nop
lret
in
and
and
loop
daa
adc
loopne
mov
sub
dec
fwait
jb
mov
xor
dec
add
repz
jmp
sub
add
sub
pop
dec
adc
push
inc
imul
cltd
push
shll
lds
gs
cs
and
and
push
imul
sbb
pop
xor
cld
sbb
dec
cs
daa
daa
adc
mov
mov
xorl
dec
mov
add
cmp
inc
push
mov
cmpl
dec
xor
adc
and
sbb
or
adc
je
add
mov
sbb
sar
test
hlt
je
in
mov
add
jg
add
loopne
ret
add
aam
scas
inc
mov
xchg
adc
sahf
test
mov
test
inc
dec
lods
xchg
adc
inc
pop
insb
mov
or
cwtl
adc
lret
add
mov
sbb
inc
into
je
inc
insb
sub
cmpsb
dec
jno
or
pop
adc
inc
dec
sub
movsb
jmp
xchg
adc
and
mov
or
xor
add
pop
idivl
sbb
and
pushf
xchg
in
and
xor
push
jne
fsubs
inc
push
shll
les
mov
xor
push
inc
clc
push
mov
outsl
pop
mov
jge
mov
cmp
jnp
adc
data16
dec
imul
movsl
lock
loop
dec
into
ret
cli
push
aam
xor
cmc
cmp
test
or
push
mov
pop
loop
mov
or
ljmp
pop
movsb
in
sub
and
push
cld
push
push
repz
inc
dec
xchg
pop
and
dec
in
dec
sbb
imul
jb
hlt
mov
xchg
add
adc
fs
dec
je
xchg
xor
ss
mov
inc
pop
arpl
pop
inc
sub
push
push
pop
cmpsb
push
test
pop
mov
mov
jns
xchg
push
push
inc
arpl
call
pusha
sbb
test
mov
jl
lods
push
or
dec
call
xchg
popf
inc
sub
cmpsl
dec
sbb
popa
dec
pop
jmp
push
dec
cs
bound
sti
repnz
or
hlt
pop
imul
mov
dec
push
test
lock
sub
and
test
jmp
inc
out
lds
pop
adc
popf
jo
push
mov
iret
ret
loop
dec
xchg
ljmp
mov
sub
aam
sub
dec
lret
in
pop
inc
xchg
jns
aaa
jle
outsb
inc
xor
adc
mov
add
inc
xchg
out
xlat
shll
das
dec
mov
cmc
jle
nop
pop
sub
xchg
add
and
or
pop
add
cmp
jbe
push
push
lea
movsl
pusha
sub
sbbb
cmp
or
adc
sub
mov
mov
inc
fdivrs
mov
cmp
lea
in
sbb
mov
enter
packssdw
cmp
test
test
popf
add
jne
push
dec
lret
inc
sbb
mov
mov
nop
xor
movsb
xchg
lock
lea
js
mov
or
mov
dec
mulb
mov
adc
rcrb
cwtl
pop
or
push
sbb
cli
lret
or
jl
mov
sbb
and
add
xor
xor
shll
repnz
stos
mov
je
push
xor
ds
push
jne
inc
lea
ljmp
sti
pusha
mov
jle
xchg
and
push
mov
pop
push
incb
pop
mov
mov
iret
jl
data16
lret
mov
dec
scas
stc
push
je
je
fs
adc
mov
or
pop
sub
sbb
pop
dec
push
jge
adc
ja
mov
arpl
jmp
sub
inc
and
aas
add
fistpll
ljmp
mov
inc
mov
call
dec
sub
sbb
sbb
nop
or
enter
mov
loopne
pop
add
pop
dec
ficomps
test
jecxz
mov
inc
pop
xor
test
pop
dec
or
test
pop
outsl
daa
dec
cmp
in
cli
pop
dec
das
jo
icebp
test
or
dec
les
pop
cmp
and
movsb
adc
shll
lock
inc
add
cs
pop
lea
add
rcll
and
repz
and
jge
sbb
pop
adc
mov
sub
mov
lea
cmpsl
insb
xchg
and
dec
inc
pushl
mov
mov
gs
push
push
sbb
pop
dec
xchg
and
push
xchg
push
push
or
cmpb
in
inc
jmp
cmp
fwait
xchg
cmp
lock
lret
add
jg
mov
adc
adc
ljmp
pop
cs
inc
movsb
push
mov
lret
push
push
and
or
dec
mov
mov
push
inc
inc
clc
and
push
out
rorl
lea
bound
rorb
out
or
lret
out
cmc
and
cmpsl
loopne
popf
out
sub
adcb
call
out
mov
test
adc
out
dec
das
lds
loopne
jle
lahf
add
pop
xor
or
mov
sub
mov
popf
cltd
push
jge
or
unpcklps
lock
out
test
out
xor
out
mov
add
sub
cmc
xor
movsl
lret
mov
repnz
adcl
orl
mov
rclb
and
and
xor
inc
push
js
out
shll
orps
mov
int3
lea
loop
movzbl
push
rorl
adc
test
test
push
aam
sub
sub
push
jl
pop
mov
xchg
repz
adc
bound
xor
xchg
repz
adc
or
jb
in
jo
push
in
pop
cmc
push
or
xchg
inc
mov
xchg
push
mov
push
lea
dec
xchg
cmp
pop
xchg
in
push
mov
lds
xchg
je
push
das
lcall
inc
and
fs
sub
inc
hlt
adc
sbb
lahf
mov
lds
maxps
xchg
sub
sbbl
sub
es
fdivl
call
out
push
adc
adc
les
add
cmp
aaa
hlt
je
cmp
xor
in
lds
sbb
and
in
sub
ret
movsb
inc
inc
inc
in
int3
or
aam
lcall
test
mov
push
inc
dec
push
test
mov
loope
out
or
inc
in
xor
inc
out
mov
adc
js
pop
mov
pop
push
push
xchg
fisubl
icebp
and
in
xchg
test
mov
sbb
xor
push
pop
dec
adc
mov
dec
and
mov
js
lock
or
jl
jne
std
sbb
adc
jo
jne
sub
pop
pop
push
or
inc
daa
in
sbb
pop
dec
jb
jne
out
cmc
scas
dec
xor
xchg
or
xor
in
es
decl
inc
daa
ret
mov
pop
sbb
adc
out
pop
adc
xchg
xor
cltd
cmp
jo
jp
fdivl
xor
and
in
sub
adc
push
outsb
cmp
ljmp
adc
les
and
mov
nop
or
repnz
jmp
dec
shl
cs
sbb
out
mov
cmp
stos
sbb
push
gs
movsl
imul
jle,pn
xchg
lods
fdivrl
scas
mov
push
fs
mov
test
inc
loopne
stos
dec
mov
adc
pop
inc
adc
push
xchg
xor
je
scas
pop
lods
cmp
and
pop
cmp
sub
pop
push
pop
mov
fldcw
dec
int
andl
ljmp
out
push
aas
lods
jo
lcall
jmp
adc
js
ss
jmp
mov
mov
push
stos
inc
mov
sti
sub
std
cmpsb
mov
stc
mov
notl
xchg
cmc
inc
mov
mov
inc
mov
xchg
aam
mov
sbb
mov
push
dec
aaa
les
mov
pop
test
jmp
rcrb
xchg
sbb
test
mov
push
fs
add
pop
mov
pop
sahf
mov
jmp
pop
dec
enter
push
and
dec
xlat
sub
loope
mov
add
cwtl
dec
rclb
inc
sahf
sub
imul
dec
dec
and
cltd
or
ret
mov
loopne
jmp
xor
cld
cmc
jb
or
mov
push
jnp
push
loop
mov
xor
sub
inc
cmp
dec
lcall
add
xchg
push
gs
and
mov
mov
and
inc
lret
les
icebp
and
sub
pop
dec
stc
fwait
imul
xchg
pushf
lds
daa
stos
sbb
jl
xor
and
out
sub
inc
or
inc
dec
mov
push
xchg
popa
cmpsl
xorb
rcr
repz
xor
dec
icebp
popa
mov
fs
sub
sub
cs
enter
add
imul
and
clc
sarb
shrb
lret
mov
movsl
or
push
sbb
test
mov
cmp
mov
stc
dec
push
cmp
fdivl
cmc
repnz
xor
cmp
mov
inc
pop
sub
les
push
dec
test
pop
aad
lret
push
pop
in
fidivl
pop
cmp
addr16
push
rorb
pop
mov
aam
pop
in
mov
rorb
loope
hlt
sub
icebp
cld
add
pop
test
push
push
and
sbb
sub
scas
addr16
adc
push
pop
pop
sbb
cmc
test
push
or
inc
adc
or
outsb
loop
lahf
fcmovu
sub
jno
sbbl
les
cmp
xchg
dec
mov
sbb
push
jle
and
int
and
cld
das
mov
inc
inc
lods
sub
mov
sub
push
test
push
push
rolb
inc
ja
sub
cmpsl
add
xor
xor
sub
add
push
test
insb
dec
adc
out
add
into
push
xorb
decb
aaa
cmovne
dec
sbb
push
stos
pop
pop
adc
xor
inc
sbb
mov
mov
fadd
in
sbb
jnp
into
loop
pop
stos
lods
out
rcl
adc
pop
jo
mov
jg
mov
cli
sbb
mov
cltd
jp
adc
push
and
sbb
loope
cwtl
push
or
adc
xor
sahf
adc
sbb
adc
mov
nop
add
ret
jp
lea
jmp
add
insl
and
outsb
cld
xor
xchg
data16
dec
adcb
sbb
cwtl
mov
and
dec
pop
loop
mov
in
dec
mov
ja
leave
add
stc
mov
and
fnstsw
test
adc
sbb
dec
push
mov
sbb
push
adc
cmp
ljmp
lods
pop
shrb
aam
push
lret
sbb
inc
shlb
inc
or
xor
push
es
rolb
adc
pop
adc
je
or
in
and
pop
xchg
push
mov
decl
cwtl
adc
inc
in
mov
or
add
mov
jne
lods
sbb
push
in
sbb
mov
repnz
popf
dec
lcall
sbb
jl
inc
inc
and
sbb
inc
xchg
mov
cmp
adc
inc
push
inc
push
inc
dec
in
lcall
test
jbe
pop
lahf
sti
je
adc
clc
testb
add
test
mov
xor
lcall
std
mov
adc
gs
into
sbb
jmp
lea
pop
imul
jle
mov
out
dec
mov
imul
add
and
mov
jae
inc
lock
or
and
insl
sbbb
xchg
les
mov
or
sub
fsubrp
mov
adc
or
xor
mov
pushf
adc
jl
fmul
mov
adc
push
mov
and
xor
mov
adc
loope
aam
xchg
push
test
sbb
test
rclb
movsl
inc
sbb
mov
inc
jl
xchg
stc
sbb
out
or
mov
shl
push
outsb
test
ss
lods
sti
or
rclb
sub
or
mov
pop
jb
and
lods
jo
mov
or
loopne
decl
xchg
fsubl
sub
inc
add
in
push
push
sti
aam
cmc
jo
loope
adc
sbb
jmp
sub
notb
push
stc
out
xor
pop
mov
enter
icebp
cwtl
xchg
pinsrw
stos
test
sub
ret
cmp
test
sub
in
pop
sub
dec
cmpsl
inc
sub
loop
and
or
lock
stos
mov
gs
or
jle
inc
adcb
cmp
jae
jge
test
sub
mov
das
push
dec
dec
je
insb
sub
andb
jno
ficoml
loope
xchg
or
pop
adc
arpl
out
popf
cmp
movsb
cmpsb
ss
inc
fcomps
sbb
clc
pop
pop
lea
mov
cld
imul
mov
xor
or
mov
aam
and
imul
sub
inc
cld
or
mov
pop
inc
test
pop
cmp
push
popf
fadds
stos
aam
repnz
and
js
stos
jmp
ret
icebp
pusha
stos
pop
loopne
sbb
aas
mov
mov
adc
jo
pop
gs
loope
sub
jo
sbb
icebp
ss
ss
mov
push
lock
cmpsb
in
mulb
xor
sahf
adc
sbb
gs
notl
testb
arpl
pop
sbb
xchg
or
ret
sbb
sbb
loop
mov
orb
and
or
shrl
loope
movsl
push
loope
addr16
sub
add
repz
lret
in
sub
pop
cmp
jl
ret
inc
push
aad
sbb
lods
push
and
mov
adc
jo
movsl
hlt
xchg
xchg
sub
adc
push
pushf
mov
sti
mov
pop
jo
mov
mov
push
mov
and
pop
rolb
or
in
pop
loope
xchg
dec
adc
jmp
in
push
fstpl
mov
sbb
add
jnp
dec
fisubs
add
popa
loop
cld
dec
lds
and
hlt
adc
jmp
adc
sub
sub
or
aam
cmpsl
test
push
std
xchg
and
xchg
push
xor
jmp
clc
cld
mov
mov
xchg
sub
popf
lods
dec
scas
jbe
loope
fsubl
xor
dec
imul
dec
push
imul
cld
cli
mov
fs
data16
aam
and
inc
adc
and
push
xor
cld
int
js
or
les
or
das
mov
stc
arpl
gs
pop
and
insb
adc
inc
jbe
push
lds
pop
jle
sbb
jle
adcb
fldcw
push
cmp
cli
pop
inc
mov
push
or
jl
dec
xlat
jnp
sub
and
enter
pop
ficoml
cmp
jno
or
movsb
loope
jmp
adc
in
enter
xchg
std
mov
loop
inc
das
aad
insl
sarl
ljmp
arpl
mov
inc
pop
cmp
lret
jecxz
cmpsl
js
in
or
out
dec
or
adc
jns
and
or
mov
mov
test
jne
ljmp
dec
lock
push
inc
pop
clc
enter
dec
pusha
sbb
xchg
jns
jmp
rorb
or
js
dec
cmpsb
adcb
test
adc
pop
xchg
or
push
jg
jg
xchg
lcall
pop
sub
inc
push
pushl
loope
pop
or
subl
call
loope
ss
and
cld
inc
adc
dec
xchg
mov
popa
mov
out
xchg
fstpl
mov
in
ljmp
xlat
call
test
adc
inc
sahf
cmpsl
rcrl
pop
xor
in
or
or
and
sub
cmp
fwait
dec
pop
or
dec
and
inc
popa
and
faddl
xchg
pop
out
in
decb
cmp
mov
clc
fistpl
sub
popa
and
dec
into
adc
mov
inc
inc
aam
push
xchg
pop
pop
ja
or
dec
mov
push
in
push
insb
push
inc
fcom
mov
inc
jne
sbbb
call
stc
btc
rolb
clc
sbb
loop
pop
leave
cmp
push
push
les
fisubl
cmp
or
pop
xchg
fiadds
test
in
sub
push
xor
jmp
bound
aam
daa
mov
mov
into
enter
rcl
in
dec
enter
adc
pop
rorl
mov
shlb
leave
inc
mov
push
mov
push
sub
popf
xchg
pop
mov
sbb
xchg
jle
mov
aad
loop
dec
cmp
cmp
mov
fdivrl
lea
mov
sahf
movsb
call
xchg
push
lods
mov
jmp
mov
inc
clc
mov
cs
stos
adc
in
mov
inc
and
mov
mov
dec
in
or
mov
mov
inc
les
push
rol
inc
int3
lea
xchg
loop
fs
push
dec
mov
stos
push
add
loopne
loop
les
mov
adc
push
xor
imul
mov
leave
dec
cld
lods
or
pop
push
in
addr16
in
mov
gs
stos
fstl
js
aas
icebp
jbe
jle
ds
or
mov
iret
lahf
arpl
sub
stos
pop
icebp
xchg
mov
or
mov
mov
out
jne
mov
lahf
mov
mov
sbb
push
stos
xor
mov
in
xlat
out
mov
shlb
stos
xor
mov
mov
mov
push
stos
pop
hlt
dec
cmp
push
stos
jnp
xor
push
scas
xor
mov
mov
lock
lahf
pop
daa
ds
jmp
popa
push
out
adc
and
test
pop
cmp
decb
push
stc
mov
jg
inc
sub
cmc
sub
or
sub
std
repz
insl
mov
push
lcall
mov
popa
loop
xchg
dec
adc
and
sub
ret
or
dec
das
js
shlb
jmp
popf
gs
adc
clc
sub
or
cmp
enter
or
es
xchg
lret
and
test
je
or
push
xor
pop
add
and
jmp
leave
jmp
adc
pop
xor
mov
movsl
movsb
aas
repz
mov
push
mov
push
stos
mov
add
lea
aam
xor
lahf
mov
adc
mov
arpl
fistpl
or
sub
aas
xchg
rcll
mov
call
test
xor
xor
dec
sub
and
xchg
xlat
mov
adc
xchg
aam
xchg
jno
or
push
sbb
hlt
int3
or
push
int3
fists
jge
mov
mov
outsb
sub
dec
pop
mov
popf
mov
test
dec
aam
insl
addb
cli
cwtl
sahf
lock
mov
clc
test
daa
add
mov
in
ljmp
xor
add
push
sub
mov
xchg
xor
fsubrl
movsl
mov
les
jnp
lods
stos
mov
loope
pop
cmp
mov
mov
test
xor
or
scas
push
nop
push
aam
mov
lret
js
mov
fcompl
mov
sbb
mov
hlt
push
mov
lods
sub
ret
movb
movsb
lock
or
int3
lret
push
or
out
adc
sti
jbe
inc
push
pop
xor
les
movsb
movsl
rclb
sbb
cmc
mov
push
mov
stos
lret
or
lods
push
pop
xchg
mov
xchg
and
aaa
je
das
mov
test
xor
mov
call
push
inc
or
lret
jmp
pop
into
fisttps
aam
or
icebp
out
rorl
xor
aaa
cs
out
dec
cmp
cwtl
stos
mov
push
pop
sub
data16
push
cwtl
mov
sub
xor
pop
mov
lods
push
xchg
cwtl
and
jns
push
and
xor
push
imul
into
bts
push
stc
sub
and
inc
mov
test
dec
fninit
das
fiaddl
pop
and
jmp
push
sbb
daa
sbb
out
andb
cmp
dec
xor
pushf
cmp
js
pop
in
lods
jb
inc
mov
push
pop
cli
in
insl
fisubrl
and
xor
adc
call
jmp
xchg
sub
xchg
mov
fnstsw
pop
push
mov
mov
dec
jbe
mov
push
jbe
loop
in
ss
dec
push
movsl
pop
push
bound
decl
pop
or
cwtl
movsl
dec
xchg
shl
sbb
insl
sbb
mov
jbe
imul
cmp
sahf
push
jl
mov
and
je,pn
les
enter
jne
inc
in
sti
and
imul
in
sti
sub
push
pop
cmp
jae
out
sub
inc
push
fsubl
mov
subl
lock
mov
xchg
dec
fdivs
into
jo
push
add
stos
xchg
cmp
inc
adc
sti
mov
idivb
testb
in
xchg
insb
test
pop
pop
shrb
outsl
dec
xchg
loop
and
mov
int
loop
popl
mov
xor
dec
mov
scas
xor
push
ds
and
cwtl
jmp
xor
jle
mov
push
jg
in
jne
or
adc
dec
sub
adc
jl
std
sub
cmp
out
or
adc
or
push
aas
add
mov
dec
jle
aaa
andb
idivb
outsl
xchg
scas
sub
pop
inc
cmp
jl
mulb
ret
out
aam
imul
stos
jl
xchg
dec
adc
adc
push
jo
aam
mov
imul
pusha
mov
outsl
jle
into
pop
push
adc
imul
sub
out
mov
xchg
push
push
fs
insb
icebp
add
movl
sbb
jo
cmp
sbb
adc
pop
cvttps2pi
adc
add
pop
popl
iret
arpl
cmp
or
sub
push
pop
jne
mov
or
push
inc
sub
and
add
sub
adc
pop
fsubs
adc
inc
test
mov
jo
pop
es
jbe
inc
mov
push
dec
stos
jp
movsl
in
dec
and
out
aad
sbb
xor
and
push
xor
jne
xchg
rcll
inc
pop
cmpl
pop
sbb
pop
dec
in
out
pop
pop
mov
jmp
sbb
orl
add
inc
mov
js
fdivrs
test
sbb
xchg
adc
mov
cwtl
in
pop
ret
fst
imul
mov
sbb
sahf
insl
xor
inc
mov
lods
fisubrl
int3
xchg
jl
push
jae
add
hlt
mov
pop
outsl
outsl
icebp
jg
dec
aam
jp
and
mov
sti
je
rorl
mov
dec
and
jl
dec
call
loopne
in
dec
mov
mov
mov
mov
sub
xor
mov
fdiv
pop
adcl
sub
cmp
xor
aam
sar
mov
pop
and
mov
jae
std
inc
ljmp
mov
xchg
jo
lahf
cli
inc
or
jmp
mov
jnp
pop
div
xor
mov
cltd
pop
mov
mov
lahf
int3
push
or
pop
adc
jmp
arpl
test
push
test
clc
jg
repz
push
dec
nop
aad
mov
adc
mov
dec
jecxz
insl
dec
dec
jb
mov
lret
and
sub
fdivl
shlb
hlt
aam
dec
mov
pop
mov
xchg
or
repz
or
add
sub
popa
pop
lahf
sti
and
fistl
inc
push
scas
sahf
xchg
mov
sbb
xchg
jne
cmpsb
rcl
and
sub
scas
movsb
pop
xor
cmp
mov
dec
push
stos
xlat
sub
xorl
sbb
jne
data16
mov
sub
pop
push
aam
fdivl
aam
xor
in
cmp
inc
add
push
js
shl
rorl
pop
jb
mov
push
pop
mov
das
push
sbb
insl
sub
sub
xor
sub
xchg
dec
mov
jbe
add
jae
lfs
xchg
scas
adc
xor
hlt
add
lcall
gs
xchg
jae
mov
sub
and
jns
sbb
dec
xchg
in
imul
bound
adc
neg
mov
icebp
or
pusha
xchg
xchg
jmp
cld
mov
pop
scas
ljmp
orw
inc
and
sub
ljmp
mov
inc
dec
and
insb
jne
sbb
jmp
test
sub
inc
cmp
jbe
push
jne
call
push
sub
out
cmp
test
aam
jb
leave
sub
pop
adc
sbb
push
mov
and
push
push
fsub
jp
xchg
push
ds
push
cwtl
inc
jbe
add
push
xchg
xchg
loopne
js
or
out
bswap
loopne
inc
pop
inc
popf
inc
loopne
loopne
mov
push
xor
dec
inc
and
lock
mov
mov
push
push
jb
mov
mov
xchg
mov
cwtl
sub
insl
push
xchg
shll
loopne
pushf
inc
cmp
jb
pop
cmp
jl
xchg
adc
fnstenv
daa
inc
out
jns
push
loopne
cmp
dec
push
mov
or
clc
sbb
or
and
insb
nop
loopne
into
pop
and
lods
jbe
mov
add
arpl
pop
movsb
scas
or
xor
cmp
js
ret
adc
insl
cld
push
inc
in
inc
sbb
dec
fnsetpm(287
hlt
stos
dec
pop
es
aam
or
or
aaa
addr16
sub
xchg
sbb
nop
pop
jb
dec
inc
loop
addl
fwait
xchg
mov
inc
xchg
push
mov
xchg
pop
movsl
jnp
inc
or
outsb
push
jp
adc
fs
cmp
mov
shlb
orl
pop
inc
jmp
bound
ss
sub
into
push
gs
lods
push
adc
mov
mov
sub
sbb
mov
xchg
clc
movsl
aaa
imul
and
add
ret
je
jae
outsl
sub
aad
les
pop
push
es
xlat
and
add
push
add
dec
imul
xor
push
or
or
add
add
cmp
adc
inc
or
push
jg
loope
stos
adc
sarb
sbb
dec
push
leave
testl
sbb
imul
mov
fadd
jle
push
push
push
mov
jge
adc
adc
add
mov
out
and
jmp
push
xor
bound
fisubrl
roll
test
cmp
adc
mov
orb
outsl
inc
and
xlat
les
cmpl
aas
adc
ja
mov
je
mov
stos
mov
arpl
mov
pop
mov
loopne
aam
leave
in
push
stos
aam
mov
jl
pop
adc
cmp
out
adc
mov
pop
or
movsl
push
loopne
push
cltd
test
xchg
stc
pop
lods
cmp
dec
mov
push
les
shlb
xor
push
fmull
ficompl
inc
sub
in
fistl
push
sbb
in
imul
push
pop
dec
and
xchg
das
dec
hlt
mov
inc
mov
dec
pop
dec
jmp
mov
inc
cld
jno
stos
insb
mov
daa
sbb
cwtl
jmp
test
xor
je
cmp
jbe
mov
cmp
dec
aad
cli
or
test
inc
mov
sub
cmp
pop
jb
aam
out
test
ja
pushf
aaa
jle
sbb
pop
in
mov
ds
mov
xor
dec
insl
je
rorb
lock
jecxz
test
xor
pop
dec
jl
mov
add
dec
sbb
mov
or
mov
addr16
mov
push
hlt
je
push
je
jnp
lcall
lods
movsl
jmp
insb
icebp
stc
push
xchg
mov
inc
dec
and
and
pop
inc
cli
sti
mov
or
jmp
xor
pop
mov
inc
cmp
ficoms
jne
or
gs
pusha
push
cmp
jbe
dec
mov
mov
es
push
jge
push
insb
dec
test
mov
jno
add
js
je
test
jmp
shrb
mul
or
je
mov
imull
sar
adc
fdivrs
sbb
pop
sbb
vcvttss2si
mov
xchg
enter
scas
adc
pusha
fsts
push
pop
mov
lods
cltd
stos
shlb
push
push
stos
xor
in
pop
push
push
push
xchg
mov
inc
sub
sub
cmp
mov
jne
andb
lret
loop
pop
cmp
xchg
push
cmpsw
jmp
sbb
jp
decw
je
js
in
dec
fisubl
ljmp
cpuid
or
add
and
decl
sub
nop
dec
mov
inc
in
lahf
icebp
push
aad
sub
jo
mov
lea
test
in
repnz
cli
pop
enter
cs
xchg
cmp
xchg
mov
push
test
xchg
dec
fstpt
clc
jno
and
mov
inc
pop
out
lods
adc
int
les
imul
sti
daa
push
pop
dec
bound
bound
dec
sbb
lock
sbb
adc
xor
pop
adc
cmp
adc
sti
stos
call
dec
jp
jmp
or
sub
cli
subb
aad
addr16
or
push
push
push
stc
xor
sbb
or
jmp
mov
dec
jp
sbb
xor
out
add
mov
out
sub
stos
and
adc
push
dec
jp
nop
jle
mov
push
icebp
les
mov
mov
adcl
push
in
jne
cs
stc
and
add
test
lds
mov
in
in
cmp
inc
add
test
lock
imul
fisubs
sub
test
sub
cli
das
jbe
and
jecxz
push
mov
push
mov
push
inc
sbb
push
push
push
out
push
jno
pop
pusha
or
pusha
shlb
pop
imul
scas
in
lock
and
push
sbb
pop
push
sbb
xchg
push
and
or
inc
lahf
rol
in
bound
icebp
sub
cmpb
push
pop
sub
sub
mov
aaa
ret
testb
push
push
push
mov
dec
xor
mov
out
js
ret
neg
in
gs
mov
add
cmp
sbb
fsubp
inc
je
jmp
inc
cmp
add
jp
xor
fldt
and
mov
push
add
inc
or
jg
pop
pop
pop
xor
fmuls
inc
cmp
jb
xor
and
movsb
data16
xchg
ret
and
push
sbb
push
sub
mov
testb
xlat
jb
cmp
mov
jb
sub
and
jbe
clc
test
pop
ja
jb
nop
mov
push
and
cmp
ja
or
mov
and
inc
xor
sub
and
adc
mov
xchg
sbb
add
rolb
pop
add
roll
ret
adc
mull
adc
xlat
cld
xchg
dec
out
ret
bound
push
adc
popf
cmp
adc
addr16
fs
and
enter
jmp
sub
mov
xor
push
sbb
inc
push
xor
sub
sub
inc
sub
add
and
adc
mov
and
je
and
stos
cwtl
test
push
inc
xchg
sbb
jnp
hlt
push
push
or
rolb
mov
aas
xchg
out
imul
cmpsb
adc
stos
data16
and
clc
test
lods
gs
dec
adc
rcl
ret
lret
sub
cwtl
hlt
outsb
xor
push
fwait
or
ljmp
xlat
clc
sbb
ffree
sti
pop
mov
push
push
aam
push
iret
sub
push
fs
jno
js
leave
push
and
mov
adc
sub
adc
stos
add
inc
mov
sahf
inc
shll
addb
seto
sbb
cmpsl
scas
push
lds
xlat
inc
and
into
add
xchg
aas
icebp
adc
cwtl
mov
mov
mov
iret
mov
xchg
add
cmp
cmp
cltd
cmp
aam
call
adc
and
or
add
mov
out
push
popa
xor
add
cmpsb
test
mov
sarl
jne
dec
sub
and
aaa
dec
mov
pushf
lods
addr16
adc
add
fdivrl
int
testb
adc
je
push
jg
outsb
rcrb
loop
mov
inc
notb
scas
mov
dec
movsb
stos
xchg
jno
push
mov
add
jnp
mov
dec
leave
test
test
mov
fsubs
or
mov
test
test
push
dec
inc
sub
lret
jno
pop
adc
andb
lock
jno
nop
add
test
cmp
mov
jno
loope
and
imul
sbb
bound
or
nop
inc
mov
test
imul
dec
dec
mov
fbld
mov
cld
gs
inc
mov
xor
xor
cli
sbb
lea
mov
jmp
xor
mov
sar
jne
fs
shll
js
nop
sub
jno
rcl
mov
aas
bound
cwtl
test
out
mov
sub
push
sub
arpl
or
rorb
idivl
dec
xchg
in
lods
insl
or
push
cmp
jle
mov
mov
mov
mov
or
or
imul
aam
and
subl
adc
dec
test
out
popf
inc
adc
mov
cmpb
pop
push
mov
test
mov
sub
mov
and
lcall
loop
adc
int3
jmp
ss
mov
outsl
repnz
mov
and
sbbb
or
sbb
sub
stos
je
adc
inc
mov
push
jno
push
imul
push
cld
mov
dec
cmp
mov
cmp
and
push
and
and
les
les
mov
xor
sbb
sbb
xor
adcl
or
shr
inc
add
push
sbb
mov
push
leave
jg
repnz
sub
push
push
cmpsb
gs
cli
lds
sbb
add
bound
push
add
insb
and
scas
bound
cmp
xchg
sub
jmp
loopne
push
and
lcall
aad
adc
in
cmc
inc
mov
cmp
outsb
or
dec
sti
cmc
jg
inc
testb
mov
add
xor
mov
daa
je
test
add
mov
add
dec
push
mov
sub
xchg
mov
and
cli
inc
addb
push
inc
inc
mov
rdtsc
and
scas
adc
cmpsb
push
or
and
xchg
fwait
das
xchg
mov
lock
xchg
push
movsl
daa
ljmp
mov
inc
or
and
add
les
sub
das
push
test
in
add
add
mov
push
movsl
nop
sub
repz
pop
jge
scas
cltd
and
js
mov
fadds
add
pop
sub
rcrl
sti
addr16
jbe
jbe
xor
adc
or
xor
push
pop
dec
inc
cmp
push
pop
mov
lds
pop
inc
jb
inc
je
or
movsl
pop
daa
adc
inc
dec
pop
adc
movsl
das
imul
or
mov
lock
test
jle
cmp
je
cmpl
and
add
inc
aad
and
adc
mov
mov
cmp
jne
inc
adcl
adc
jmp
rclb
aad
cmp
int
push
adc
adc
pop
lds
or
cmpsl
inc
pop
push
dec
sub
hlt
sub
sbb
mov
mov
pop
or
pinsrw
jl
jl
out
adc
sbb
lahf
cmp
mov
xchg
or
loope
dec
arpl
or
xor
jg
fcomp
and
test
lea
movsb
cld
or
pop
notb
inc
add
mov
test
movsl
lds
imul
imul
bound
bound
test
pop
push
movsl
cmp
pop
xchg
dec
aas
push
jne
int3
cltd
sub
mul
push
adc
adc
jae
or
rol
sarb
sub
jb
cwtl
xor
int3
jbe
ljmp
pop
imul
cltd
mov
movzwl
jne
vmwrite
push
movmskps
or
adc
or
loopne
adc
pop
push
mov
sub
jl
sub
testl
test
je
fidivl
sahf
mov
dec
sub
mov
mov
call
imul
cli
mov
jge
das
aad
add
or
nop
or
mov
sbb
mov
adc
test
dec
sub
mov
lahf
dec
mov
push
loop
jl
mov
cld
sbb
cli
aad
xchg
loopne
xor
mov
mov
lods
jb
cmp
add
inc
jmp
std
negb
mov
test
pop
je
cmp
push
sub
jp
inc
or
adcl
cmp
movsb
lret
xchg
les
fisubs
or
add
dec
add
sub
fmull
adc
pop
sbb
mov
ds
mov
or
mov
cmpsl
cld
test
fistpl
jmp
dec
ret
cmpsl
jl
and
movsb
jg
xchg
sbb
loopne
and
clc
inc
cmpb
mov
jne
inc
shl
lret
mov
cmp
insb
cmp
mov
add
mov
add
cmp
jge
cmp
je
sbb
cmp
jl
mov
mov
inc
outsb
repz
mov
jne
les
add
gs
lcall
push
call
mov
push
leave
cltd
pop
aam
cmpsb
pop
movsb
stos
xchg
push
and
push
movsb
add
push
mov
adcb
or
sub
mov
test
push
sysenter
je
in
cmp
cli
loop
jmp
inc
sti
push
jb
jns
add
adc
shll
icebp
sbb
add
fsubr
push
or
push
push
lret
cmp
pop
mov
jmp
mov
xorb
push
int3
and
ljmp
pop
bound
mov
jo
or
cmpsl
jmp
add
mov
push
and
leave
mov
push
inc
jecxz
test
je
pop
pop
inc
test
jne
adc
jne
ret
cmpsb
mov
call
mov
test
call
dec
pop
mov
pop
test
aaa
add
dec
jmp
sub
aad
sahf
or
mov
or
es
add
shr
js
inc
sbb
push
inc
inc
xor
push
mov
inc
dec
lret
xor
adc
ja
or
and
jnp
inc
pusha
aas
dec
add
pop
pop
mov
or
data16
adc
adc
push
inc
mov
rorb
push
in
ffree
dec
push
fidivrs
inc
testb
push
adc
mov
bound
xor
mov
mov
pop
mov
dec
add
loope
ljmp
leave
cmp
mov
ljmp
jbe
dec
in
push
js
push
fs
and
jmp
dec
xchg
adc
sahf
and
cmpsb
inc
sub
pop
shll
or
push
scas
inc
neg
dec
mov
inc
cmp
nop
bswap
add
inc
fadds
jp
push
mov
inc
and
sbbb
and
cwtl
ds
test
and
inc
sahf
jns
adcl
stos
adc
das
dec
test
push
mov
add
cmpsl
sbb
xor
push
mov
fldcw
push
cmp
dec
jae
and
push
pop
and
push
jp
lods
or
icebp
pop
inc
xor
lods
pop
aad
inc
push
sub
dec
push
adc
pop
add
cmp
jbe
xchg
cmpsb
mov
push
repnz
in
add
mov
je
stc
or
call
test
cli
inc
jmp
jmp
loopne
jecxz
dec
xor
push
lea
cmp
shrb
cld
int3
or
sbb
push
rcll
add
inc
out
or
scas
loop
jbe
xor
cs
push
sub
sbb
inc
add
adc
mov
sub
dec
test
lahf
jl
jl
mov
and
push
addl
in
inc
dec
adc
sbb
outsb
in
and
inc
hlt
shlb
pop
and
rorb
add
lock
clc
test
push
js
xchg
or
and
xchg
outsl
and
xor
nop
dec
and
push
or
or
cwtl
push
lea
je
sarb
pushf
shlb
mov
cld
icebp
inc
sbb
and
movsb
mov
push
pop
js
enter
jb
or
test
dec
pop
mov
cltd
pop
sbb
or
popf
loopne
dec
mov
mov
sub
adc
rolb
push
out
mov
push
nop
adc
pop
push
bound
test
pop
sbb
push
xor
add
or
or
sbb
mov
adc
fists
mov
xchg
and
jmp
and
jmp
int3
repnz
nop
push
int3
or
jl
push
mov
les
cmpsl
ret
jb
fmull
and
movsl
mov
std
inc
test
add
movsb
or
adc
adc
jne
xor
dec
dec
js
pop
dec
loope
daa
sbb
push
in
jl
jns
call
push
test
es
add
xchg
inc
pop
inc
jne
jnp
push
push
rorl
xchg
mov
jle
add
int
inc
cli
sub
sub
ret
and
fs
sub
mov
or
test
mov
and
stc
and
cli
xor
sub
stc
sub
xor
mov
in
sub
and
sbb
and
jmp
rep
ja
enter
jne
adc
cmp
and
adc
jmp
sub
or
jae
bound
loope
inc
repz
add
push
ret
dec
popf
loop
xor
stos
cmpb
push
add
add
or
xchg
jns
mov
call
mov
sub
addl
fwait
ret
hlt
rcrb
sub
cmp
push
shl
inc
repnz
add
mov
stos
lret
shl
jge
test
test
mov
mov
or
mov
stos
xchg
mov
sub
push
loope
xchg
jb
lods
ljmp
stos
sub
jge
xchg
sub
push
push
std
sub
sbb
jle
mov
dec
mov
sub
push
pop
mov
mov
rcll
cmp
inc
jmp
xchg
sub
in
pop
sub
push
sub
add
sub
mov
in
xchg
and
or
movsb
push
inc
cmp
inc
rcrb
sub
xchg
jne
neg
pop
pushf
stos
mov
or
outsl
out
stos
sbbb
xchg
addb
inc
iret
lret
enter
sahf
ficomps
mov
aaa
cmpl
sbb
adc
sahf
push
pop
sub
jge
popa
jmp
bound
or
movsb
mov
pushf
jbe
push
into
adc
pop
test
pop
je
mov
clc
dec
cwtl
push
cmpsb
and
mov
ss
dec
stc
push
pop
in
movsb
or
cld
jmp
xor
inc
cld
call
xchg
jg
sbb
inc
das
pop
inc
and
push
rorb
adc
pop
mov
ljmp
cmc
jnp
jge
push
or
mull
ja
popf
daa
fsub
jmp
or
xor
aam
push
fs
or
in
jb
rorb
ss
mov
pop
sub
xor
ret
inc
add
adc
jmp
cmp
daa
jb
aaa
jb
add
push
fwait
rolb
push
xchg
leave
dec
mov
aaa
sub
lahf
dec
test
insb
dec
xor
or
add
inc
pop
hlt
mov
mov
sub
or
push
pop
xchg
mov
popf
xchg
or
mov
jge
in
and
xlat
push
fidivrl
std
inc
jl
imul
test
mov
lahf
arpl
jmp
adc
push
lods
xchg
int3
fwait
loopne
xchg
pop
mov
ret
lahf
icebp
push
pop
addl
dec
mov
mov
inc
int3
sub
jg
cli
js
cmp
sub
cld
dec
cmp
xchg
dec
pop
mov
mov
mov
outsb
push
push
inc
dec
aas
add
pop
sbb
bswap
out
fstpt
and
mov
push
int
pop
and
cli
and
and
jne
nop
xchg
push
cmpb
js
or
sub
popf
aas
push
test
adc
jbe
adc
jmp
mov
shrl
mov
jle
jnp
xchg
xchg
into
mov
add
mov
adc
out
add
daa
test
inc
dec
cltd
cld
and
popf
mov
xor
lcall
mov
fidivl
insb
xchg
cwtl
stos
ror
movsl
xchg
cmp
inc
and
jl
sub
nop
test
fildll
mov
leave
jmp
xor
inc
mov
mov
dec
pop
push
stos
mov
or
dec
stos
or
dec
push
or
push
add
fimull
mov
push
pop
or
add
jle
nop
xor
ret
mov
aas
call
xor
jl
add
inc
and
dec
sub
xor
je
xchg
or
fiadds
ret
mov
xor
adc
pop
dec
lcall
sub
mov
test
inc
test
call
dec
aaa
sub
or
jmp
ds
mov
add
cmc
push
push
movsb
adc
ret
push
or
rdtsc
cmp
pop
push
jle
into
push
adc
and
adc
jecxz
std
xchg
and
or
pop
imul
decb
xor
and
or
xor
sub
adc
push
insl
lcall
data16
movb
jp
jno
lcall
mov
mov
adc
adc
mov
out
repz
loope
rolb
and
fsub
sti
sbb
dec
ss
mov
xchg
mov
sbb
lret
inc
push
iret
pop
jns
test
or
adc
sub
sbbl
push
or
subb
or
jb
xchg
xlat
sub
loope
ficoml
inc
cs
inc
push
push
dec
dec
push
sub
imul
sub
jb
cld
sub
shl
add
adc
mov
mov
adc
mov
push
add
inc
arpl
icebp
mov
push
test
lods
pop
adc
adc
bound
mov
xchg
push
adc
cwtl
mov
leave
adc
aas
sub
push
test
enter
test
sub
mov
jbe
and
jmp
jmp
fildl
aad
daa
sbb
imul
sbb
addr16
icebp
lret
movsl
sub
mov
add
jmp
ljmp
div
mov
fs
inc
xor
add
sbb
cmp
or
pop
icebp
xchg
add
mov
in
subb
test
sub
mov
or
push
mov
adc
dec
or
add
jns
adc
xchg
or
ss
and
jbe
fmull
sbb
push
pop
sbb
mov
sbbl
push
push
xor
xor
roll
imul
push
adc
mov
jb
sbb
mov
jno
adc
adc
inc
adc
push
scas
mov
fldcw
pop
mov
xchg
icebp
xchg
fs
sbb
inc
adc
adc
push
pop
pop
stos
pop
fsubrs
and
sahf
popa
push
addr16
imul
fdivrs
pop
inc
cmp
test
fiaddl
mov
cmc
mov
inc
or
shr
lea
hlt
popa
dec
add
lcall
loopne
les
sbb
and
fucomip
insb
mov
imul
jle
lea
sbb
pop
xor
mov
and
aam
push
mov
inc
cld
jne
lods
pusha
xchg
rclb
or
jnp
jp
jnp
add
jne
jmp
addr16
ljmp
and
mov
je
xchg
adc
pop
lods
lahf
cwtl
sub
push
addb
push
ficoml
inc
dec
mov
sub
std
inc
or
nop
mov
lret
xor
stos
xchg
adc
xlat
rclb
xor
adc
mov
pop
jne
inc
inc
dec
mov
push
cli
pop
ds
mov
daa
adc
inc
or
mov
mov
shr
mov
dec
cmpsl
jns
sbb
cld
fcoml
dec
adc
cs
pop
sbb
ficomps
and
pop
or
std
les
lret
out
sbb
jbe
push
dec
adc
cwtl
pop
xchg
loop
sbb
push
dec
lahf
stc
xchg
mov
insb
mov
xchg
imul
rep
hlt
pop
test
push
add
mov
and
add
and
in
inc
add
and
jne
insb
out
sbb
push
lods
mov
lock
shl
shr
mov
dec
xor
pop
pop
out
inc
jmp
mov
flds
dec
adc
dec
pop
shl
dec
adc
jne
adc
inc
sbb
ret
fincstp
mov
and
popf
sub
push
sub
adc
sbb
jl
sahf
adc
pop
shlb
pop
fdivrp
in
jg
add
cmp
pop
jge
and
jle
and
xchg
sub
or
pop
and
in
cmp
in
test
or
sub
or
enter
add
or
int3
pop
or
pop
jmp
push
fdivl
adc
mov
shll
mov
push
adc
cmp
mov
shll
dec
pop
pop
push
or
loopne
lea
sub
ret
mov
fs
pushf
jp
roll
popa
cmpsl
push
sbb
je
adc
pop
xchg
movsb
pop
roll
add
or
push
mov
jecxz
push
ficoms
or
mov
divl
lret
sahf
dec
add
xor
xchg
jle
dec
or
push
and
cltd
adc
jp
addr16
addb
and
inc
and
xchg
iret
out
ret
fadd
daa
inc
enter
sbb
push
mov
and
push
sbb
jmp
pop
cltd
pop
aad
stos
jo
and
adc
xchg
mov
jns
jb
adc
cmpl
or
daa
sti
lahf
adc
shlb
adc
sub
dec
out
sub
pop
cmp
push
and
sbb
mov
adc
add
jne
and
add
inc
movsb
xor
mov
push
test
mov
test
cmp
adc
pop
jne
push
sub
call
das
adc
pop
pop
aas
mov
adc
aaa
and
pushf
or
lea
inc
mov
or
shl
and
cmp
or
test
jne
push
sub
sub
nop
and
scas
scas
push
sub
xorb
push
jecxz
sbb
roll
push
dec
pop
add
dec
aas
mov
xor
sbb
mov
lcall
push
popa
or
dec
sbb
jo
and
or
adc
insl
xor
pop
ret
inc
adc
in
adc
mov
inc
mov
sbb
mov
pop
ret
mov
lea
cmp
in
stc
push
dec
dec
pop
sub
aad
adc
jae
pop
push
sbb
or
and
test
pop
xor
test
mov
imul
adc
or
jmp
movsb
call
fmull
call
cmpb
jne
pop
std
test
movsb
mov
arpl
sbb
xchg
std
fs
adc
jmp
lock
xchg
std
jecxz
mov
testb
add
inc
add
cmp
and
ljmp
shlb
lea
imul
xor
iret
pop
pop
fidivl
inc
and
adc
sub
or
cmpsl
loopne
insb
adcb
idivl
mov
dec
adc
test
imul
dec
cmp
sti
jb
or
pop
in
adc
icebp
nop/reserved
popa
inc
sub
jae
gs
jmp
and
pop
sub
dec
pop
add
inc
adc
jp
ljmp
das
sti
jg
cmp
inc
push
push
pushf
cli
adc
test
js
push
push
inc
mov
inc
mov
jmp
pushf
aam
cmpsb
adc
cmp
fldl
andb
mov
in
or
icebp
push
test
push
mov
xchg
mov
gs
hlt
mov
mov
lea
movsl
mov
ret
sbb
cli
dec
sub
jp
or
inc
jmp
push
icebp
outsb
insl
inc
push
orl
cld
add
mov
daa
insl
mov
ss
push
add
cmc
cmp
fcompl
sbb
push
hlt
xor
xor
je
push
pop
or
sub
in
jns
cmp
jne
jne
push
adc
inc
add
inc
pop
pop
add
xor
sub
adc
sub
pop
aam
push
repz
jmp
call
xor
mov
cmpsb
jno
pop
and
enter
ret
orb
pop
lods
fadds
adc
test
clc
movsl
ja
xchg
hlt
jbe
testb
lahf
lret
andb
sbb
icebp
mov
push
mov
jmp
jge
out
mov
or
xor
insb
xchg
push
pop
ds
jmp
dec
sub
push
pop
jne
adc
add
ds
adcl
push
es
ja
fs
sub
addl
divb
idivl
adc
fstps
leave
testl
mov
add
imul
aam
test
jo
mov
out
es
xchg
pop
shld
aad
jp
loop
mov
mov
cld
dec
and
xchg
and
pushf
push
maxps
movsb
push
mov
sahf
mov
pushf
pop
outsb
pop
or
add
dec
push
mov
lock
jecxz
movsb
fldcw
repnz
movsb
lret
cltd
sbb
inc
lods
leave
cmp
or
mov
not
mov
sub
leave
faddl
mov
dec
subl
gs
and
mov
xchg
mov
sbb
out
sbb
add
setb
mov
mov
shrb
cld
inc
jmp
out
aas
push
mov
les
into
inc
pop
sbb
adc
fstps
sub
sub
or
cmp
xchg
push
sub
mov
mov
lret
xor
sar
gs
mov
cmp
mov
cmpsb
adc
adc
push
or
lret
fs
vpextrd
not
xor
insb
inc
dec
call
pushf
or
loop
and
addr16
cmpsb
and
sub
data16
pop
mov
aas
cwtl
cmpsl
arpl
popa
sbb
movsb
sbb
push
call
pushf
pushf
not
sarb
push
mov
dec
aam
xor
pop
xchg
aam
push
jge
sub
call
mov
shrl
rcrb
push
push
call
test
jge
xchg
cltd
and
pushf
imul
cmp
inc
xchg
adc
xor
adc
adc
xchg
mov
inc
sub
pop
lds
adcb
and
dec
add
push
push
andl
lock
mov
movsl
jg
fstpl
adc
idivl
cmp
stc
andl
movsb
cli
jns
adc
adc
sub
int3
lcall
lcall
xchg
ds
les
push
les
in
add
jle
fidivrl
xor
xor
sti
push
lret
pop
sar
psraw
inc
add
mov
fmul
jmp
mov
testb
rcrb
add
rcll
dec
mov
jae
jne
xchg
das
dec
sbbl
sub
cmp
pop
ret
fldt
xchg
cmp
xchg
cmc
sbb
pusha
xor
stos
jecxz
xchg
dec
xchg
dec
imul
daa
test
push
inc
mov
sar
bound
dec
lock
popa
pop
bt
push
in
xchg
mov
push
cmp
jl
or
js
push
addr16
mov
pushf
mov
jnp
dec
frstor
test
mov
add
aam
inc
push
ror
sub
cmp
push
int3
and
fadds
in
cld
add
jmp
rclb
into
or
push
pop
mov
dec
es
adc
bound
xchg
or
cld
push
or
adc
hlt
xor
add
sub
and
inc
call
loop
dec
sub
push
cmpsl
cli
adc
mov
mov
adcb
inc
shr
pop
push
jns
xchg
add
icebp
lock
movsl
sbb
outsl
cmp
or
and
or
sbb
adc
and
push
aas
ss
scas
jg
xor
push
inc
sbb
push
mov
rorb
xchg
ror
subl
push
dec
fsubs
repz
das
test
xchg
gs
and
or
push
sahf
icebp
inc
daa
xor
jo
adcb
and
xor
bound
or
add
sub
dec
scas
and
add
lea
pop
mov
pop
daa
dec
add
pop
cmp
push
movl
add
dec
test
push
adc
cld
sbb
cmpl
add
out
inc
int3
or
inc
lea
lcall
es
ds
push
jmp
push
and
sub
scas
inc
pop
cld
push
iret
movsb
or
sbbb
int
stos
mov
push
lcall
xchg
dec
push
pusha
xchg
jmp
bound
mov
and
arpl
je
mov
add
adc
outsl
inc
lahf
inc
pop
movswl
shr
xorl
aad
cmc
sub
cmpsl
adc
mov
adc
mov
dec
inc
and
mov
pop
push
inc
movsb
imul
add
mov
arpl
sub
mov
mov
mov
or
out
pop
or
adc
mov
das
adc
movsb
xor
push
or
push
mov
push
lods
cmp
push
mov
test
outsl
and
sahf
adc
je
es
std
jl
mov
hlt
xor
mov
jmp
sub
call
cmp
fwait
or
aad
adc
jge
test
dec
fisubrs
incb
iret
sub
sub
negb
iret
add
adc
or
cmp
add
push
xor
mov
push
sbb
jmp
push
push
sti
je
mov
inc
jnp
dec
xor
or
inc
lahf
pop
sub
inc
pop
sbb
inc
and
or
push
and
stos
repnz
or
jmp
mov
push
rorb
or
jl
stc
jae
push
cmp
cli
jmp
sbb
or
add
and
push
fstps
cmp
sbb
jne
in
xor
mov
sub
or
hlt
cltd
push
push
push
addr16
shlb
cld
or
dec
jmp
xor
shlb
sub
hlt
sti
cmp
pop
pop
mov
faddl
mov
mov
inc
jp
adc
cmpb
jne
push
mov
movb
push
aaa
dec
jo
cltd
push
orb
imul
push
lds
sub
add
add
or
and
dec
loopne
iret
push
addr16
xor
adc
inc
add
and
sub
jne
sbb
cltd
loope
sub
jle
or
es
xchg
lahf
or
sbb
xchg
inc
sbb
or
inc
or
loopne
mov
clc
lea
out
push
add
je
in
and
or
lea
inc
and
mov
dec
movsb
outsb
shrb
jmp
sub
scas
leave
push
clc
dec
cmp
add
je
jp
jle
jge
adc
or
and
xor
sbb
xchg
and
dec
rcrl
or
cmovns
push
inc
adc
shrl
or
jbe
ljmp
inc
push
pop
ret
clc
je
pop
inc
xchg
push
ret
push
xor
adc
fstp
fnstcw
sbb
pop
adc
popf
les
or
mov
jb
data16
insl
dec
adc
push
push
push
inc
insl
cli
push
scas
sbb
aas
ss
outsl
inc
loop
xchg
mov
loope
mov
push
or
inc
clc
adc
xchg
jmp
test
xchg
mov
rorb
test
or
xchg
sti
test
test
dec
ss
inc
shlb
nop
sub
push
xchg
pop
xor
adc
xor
les
cmp
pmulhw
push
or
xchg
out
cmpb
inc
lds
xor
dec
sub
dec
add
popa
stos
jmpw
repnz
and
ljmp
sbb
dec
xchg
add
rorb
adc
shlb
cltd
xor
iret
fstl
xchg
jmp
add
addr16
push
sub
or
inc
push
ds
or
aaa
dec
jmp
cmpb
ss
or
xor
je
repnz
jl
and
fsubs
dec
rorb
inc
repnz
or
jp
inc
or
ss
jns
std
loope
cmc
dec
loop
add
sbb
adcl
mov
dec
adc
das
inc
jae
add
jne
jge
jb
adc
inc
sbb
mov
js
lcall
sbb
xchg
add
xor
outsb
or
les
arpl
dec
cmpxchg
adc
mov
out
in
or
scas
in
mov
jno
or
hlt
stos
ljmp
das
inc
sbb
mov
mov
std
mov
jle
cmp
imul
xor
push
clc
cli
xor
push
fs
dec
sub
jnp
sub
add
in
xchg
mov
lea
aaa
or
mov
adc
sub
adc
in
add
dec
lds
fcoms
data16
into
das
subl
cltd
push
hlt
cmp
cmp
pushf
xchg
add
jecxz
mov
inc
pop
sub
out
fwait
test
adc
push
push
inc
das
sarb
jne
jnp
std
push
adc
push
sub
aaa
stos
aad
adc
cli
bound
mov
jns
xchg
push
inc
xchg
xor
sub
gs
insl
xchg
jne
sbb
inc
inc
scas
xchg
sub
push
cltd
sub
and
rdmsr
push
stos
enter
sbb
inc
shlb
lret
push
dec
data16
lret
adc
aam
jno
cmc
es
mov
pop
xchg
repz
pop
dec
sub
test
jne
pushl
icebp
or
pop
adc
push
ljmp
sub
push
ffreep
sub
test
xor
out
or
cmp
inc
and
cmpsb
mov
cld
add
add
xchg
push
mov
xchg
inc
xchg
jmp
inc
xchg
pop
adc
push
mov
push
jg
cmpb
mov
sbb
cmp
adc
or
xor
and
adc
sti
xor
rcrb
arpl
je
sub
in
mov
pushf
push
outsl
pop
jmp
sub
add
pop
jmp
shll
test
jmp
mov
orl
std
pushf
sub
dec
lea
arpl
pop
popf
or
and
lret
imul
fs
adc
jb
cmp
ss
jae
xchg
jmp
jbe
cmc
lock
and
sub
inc
cmp
loope
mov
shrl
mov
jne
shr
in
mov
inc
enter
rcll
mov
jmp
in
loope
cli
stos
inc
sub
cmpsl
dec
push
repz
or
lock
push
and
ficoms
icebp
sbb
cltd
pop
jle
enter
pop
nop
push
adc
test
aas
or
stc
add
dec
add
shll
out
jne
or
fs
sbb
gs
cs
outsl
test
or
xchg
test
adc
push
jmp
adc
add
inc
dec
aam
push
loop
lcall
push
pop
lret
adc
addr16
jge
inc
mov
andl
sub
add
lcall
inc
jmp
daa
push
scas
mull
rcrb
xor
xor
xchg
pop
push
jne
push
dec
mov
fs
mov
dec
mov
fs
fcoml
imul
mov
cmp
adc
xor
daa
dec
push
notb
pop
add
jne
sbbb
mov
sbb
mov
push
fmuls
fwait
or
lea
cltd
cld
sbb
subb
and
jg
inc
jbe
add
dec
fcoml
cmp
dec
lret
rorl
push
fnstcw
or
je
popf
or
cmp
nop
jbe
or
shl
add
aas
lea
rol
jg
cmpsl
pop
xchg
insb
std
push
pushf
test
lea
lcall
loope
add
filds
sarl
out
sub
sub
aam
cmpsb
or
test
add
adc
xrelease
idiv
cmp
add
or
popf
repnz
or
scas
stc
inc
xor
xchg
fs
inc
dec
in
mov
push
loop
xchg
xor
push
push
push
enter
dec
out
or
cmpsb
movsl
lcall
lock
test
jmp
scas
arpl
mov
dec
xchg
pop
and
les
sub
adc
xchg
pop
xor
jmp
push
jle
mov
push
xchg
jnp
invd
das
cmp
inc
shl
add
mov
jno
sbb
dec
iret
js
stos
or
sub
ret
push
lods
sub
push
jo
je
psubq
std
mov
mov
in
adc
enter
outsl
pushf
nop
pop
out
int
push
movsb
push
stos
test
ja
fwait
lock
inc
ds
xor
mov
cli
in
popl
adc
pop
xchg
add
inc
std
push
sub
lock
in
add
lea
mov
jbe
sbb
dec
clc
push
dec
sbb
in
xor
mov
push
ret
loop
cmc
lea
enter
or
outsl
sbb
pop
lahf
mov
add
pop
xlat
cmpsl
ja
cmp
push
addl
mov
push
lea
out
stos
mov
test
add
add
je
mov
jno
cmp
cmp
push
pop
mov
jle
mov
pop
mov
lret
push
and
imul
xor
cmp
xchg
fs
dec
in
js
push
xchg
lods
das
jmp
mov
popf
aaa
lahf
or
cmp
or
pop
les
jg
sbb
dec
jbe
test
xor
sti
jbe
xchg
push
cmp
pop
adc
rorb
aad
sub
testb
lods
cmc
js
or
ficompl
pop
sbb
cmc
bound
push
sub
jge
xchg
adcb
adc
or
popf
dec
movsb
or
pop
daa
imul
aad
push
dec
dec
pop
jb
std
icebp
mov
pop
mov
inc
lret
lcall
push
dec
xchg
test
push
adc
xchg
insb
push
xor
andb
pop
push
mov
cmp
dec
xchg
jb
xor
inc
adc
jne
loopne
std
push
ss
sbb
add
fimull
fiaddl
pop
es
lods
sbb
loop
out
lret
pushf
push
dec
es
xchg
jns
cwtl
cmp
cmp
push
orl
cmp
xchg
inc
add
mov
or
mov
icebp
das
pop
nop
sbb
js
lea
enter
add
adc
jl
sbb
aam
or
fldl
mov
xchg
imul
loope
cmp
jnp
mov
add
add
cmp
jl
call
sub
mov
inc
cmp
add
enter
jb
pop
sahf
jns
or
fs
test
sbb
or
sub
fs
push
insl
xchg
lcall
add
ds
lahf
clc
mov
sti
cmp
xor
cmp
jne
mov
sbb
push
push
repnz
push
dec
negb
mov
inc
sbb
rcl
aam
sub
cmp
pop
push
push
loopne
jb
dec
add
lret
int
jg
push
adc
lahf
mov
je
call
dec
pop
jg
repnz
mov
cmp
jne
cmpsl
and
pop
in
aas
jns
inc
mov
lods
mov
pop
shrl
cld
or
out
jg
mov
adc
das
adc
mov
inc
fsubs
mov
or
imul
inc
outsl
xchg
nop
mov
addb
shll
sub
cmp
fs
rclb
pop
test
pop
ret
pop
iret
inc
outsl
push
cmp
cld
sub
shr
iret
imul
mov
inc
xchg
mov
loopne
and
xchg
adc
and
cmp
xor
out
push
hlt
repnz
mov
adc
ret
pop
adcb
cli
xor
mov
push
pop
mov
cmp
or
and
and
mov
lret
lea
fsubl
pop
add
sub
test
pushf
mov
push
or
add
cld
mov
rcpps
pop
add
and
mov
cs
or
and
in
shll
inc
pop
pop
ret
dec
hlt
test
cmp
aad
jne
and
add
pop
cmp
dec
jbe
cmp
rcl
mov
mov
je
aam
mov
pop
cmp
inc
and
or
out
not
and
pop
add
adc
jmp
pop
lea
pmullw
xchg
mov
int
dec
pop
inc
jno
xchg
cld
jns
sub
incl
cmp
mov
ljmp
test
sub
pop
gs
fistpl
out
int3
or
push
jne
pusha
mov
dec
bsf
xor
jae
and
orb
pop
adc
or
mov
inc
inc
push
sti
sbb
scas
mov
adc
iret
ljmp
sub
mov
mov
adc
mov
hlt
mov
xorb
add
cmpsb
rorl
adc
call
adc
aam
popa
or
pop
pop
mov
movsb
mov
xchg
adc
sub
add
jns
jns
or
decb
pop
push
js
mov
push
xchg
mov
jo
mov
or
adc
dec
movsb
jnp
mov
xchg
add
shl
mov
adc
sub
ret
dec
adc
push
test
inc
dec
jae
xor
or
add
adc
adc
xchg
dec
test
test
sti
sbb
mov
int
call
int3
sarl
xchg
xadd
add
pop
pop
and
repnz
decl
sub
jne
jmp
push
dec
xchg
adc
dec
mov
rol
mov
jl
or
jae
aaa
xchg
iret
insl
and
decb
pop
iret
hlt
dec
sub
arpl
jb
pop
adc
mov
cmc
fadds
insb
add
xor
pop
dec
jae
cld
jnp
or
mov
push
sub
in
sbb
es
or
out
test
call
stc
test
pcmpeqb
in
inc
mov
aas
dec
adc
ljmp
les
bound
sbb
in
cli
test
jmp
out
jl
inc
stos
inc
aaa
mov
inc
jo
inc
push
push
jbe
dec
decl
or
mov
dec
dec
mov
pusha
inc
cmp
xlat
pop
je
push
xchg
std
mov
xor
aaa
xor
mov
into
jne
xor
pop
test
jl
roll
loope
jmp
mov
push
stc
mov
sub
add
jmp
jle
repz
pop
repnz
addb
mov
add
in
popa
sub
and
or
fwait
sub
andb
mov
or
pcmpeqw
fidivs
or
cwtl
gs
mov
xchg
dec
cltd
inc
sbb
int3
push
push
mov
rolb
jnp
lahf
les
ja
fldln2
sbb
mov
cmp
jl
inc
loopne
push
jae
fstl
push
adc
or
dec
jb
inc
loopne
cmp
out
shll
ret
fisubs
mov
shr
sub
cmp
jl
adc
or
adc
fmuls
imul
aaa
sub
imul
or
dec
jne
out
ror
inc
add
test
cld
shrb
lea
and
mov
cmp
adc
pop
arpl
xor
inc
add
mov
andl
and
shll
mov
mov
mov
push
cmc
pusha
jmp
bound
xchg
mov
les
lock
xchg
xor
ret
jp
push
outsb
cmp
cmp
jo
pop
ret
push
mov
or
push
and
dec
dec
das
and
ds
or
arpl
pop
xor
andl
jns
push
gs
push
iret
jno
mov
sub
popa
xchg
sub
loopne
and
sbb
imul
imul
sub
sub
inc
adc
out
outsb
jns
push
loope
inc
das
pop
leave
lds
inc
rorl
xor
cli
ja
roll
lock
stc
popf
add
in
setnp
jbe
movl
push
out
movsb
mov
dec
add
sub
inc
mov
sub
out
je
or
cmpsl
mov
clc
mov
maxps
dec
fadds
dec
or
adc
sahf
inc
xchg
jae
dec
enter
shlb
add
or
mov
not
and
xchg
ret
xlat
pop
pop
or
cli
and
jl
xlat
lea
sub
cmc
outsl
add
lret
pop
dec
cld
and
cmp
cmp
mov
inc
fidivrl
and
add
cmp
mov
ficoml
aas
and
jbe
mov
mov
jb
es
addl
lea
stc
and
test
cli
clc
dec
in
xchg
cmpsl
mov
push
jg
mov
xor
sub
add
rorl
xor
mov
js
mov
mov
hlt
enter
sub
insl
adc
andb
cmp
movb
decl
pop
cmpsb
enter
test
pop
xchg
mov
iret
jmp
pop
adc
push
xlat
movsb
mov
add
inc
xor
inc
dec
add
jg
inc
and
or
jmp
fstp
push
subps
xchg
sbb
sub
outsb
pop
xor
sar
jo
lcall
insb
pop
xchg
and
xchg
fidivrs
cmpsb
and
or
dec
cmp
adc
inc
into
je
push
mov
nop
dec
loop
scas
mov
ja
jno
out
xor
push
jns
aam
cmp
ja
jnp
movsl
push
mov
clc
scas
std
loop
bound
adc
sbb
jno
mov
into
inc
mov
jae
adc
jns
mov
push
mov
or
int
cmp
dec
test
outsb
js
and
lods
cmc
mov
inc
jp
dec
sub
sub
sub
inc
push
xor
fidivrs
dec
add
push
pop
xor
popa
inc
cmp
aaa
jne
in
lods
mov
mov
or
std
loop
jmp
mov
push
mov
xchg
xor
xor
mov
adc
mov
dec
jle
sbb
sbb
mov
cmp
sysret
popf
ret
shll
inc
mov
xor
and
jl
mov
jmp
jbe
add
cmp
jae
orb
push
sarb
cltd
add
sbb
fmull
pop
fidivl
jg
fiaddl
je
out
rorb
inc
lret
sbb
mov
sbb
xor
jnp
pusha
push
adc
and
xchg
inc
dec
push
xchg
push
push
push
sub
in
or
in
jo
xorl
adcl
mov
pop
sbb
ljmp
scas
into
mov
dec
cmp
sub
add
push
inc
daa
and
orl
hlt
or
lcall
inc
push
sahf
divl
test
sti
add
sub
test
jge
mov
dec
pop
sub
jbe
je
idivb
loopne
es
mov
mov
test
mov
sbb
push
call
push
push
and
mov
sbb
push
mov
lret
adc
mov
adc
lock
aaa
jmp
test
jne
lock
out
push
jb
enter
iret
or
and
push
lock
clc
nop
addr16
or
dec
push
sub
push
les
dec
subb
sbb
add
xor
mov
and
add
mov
add
add
and
cmpsl
or
call
aad
bound
ficoml
jecxz
mov
xor
stos
pop
rclb
outsl
or
ret
stc
js
jae
mov
loope
lock
jl
sbb
pop
add
adc
and
int
xchg
add
cs
sbb
jb
sbb
aam
arpl
es
cmp
push
clc
adc
adc
add
es
cmpl
jge
jb
shlb
pop
sub
je
jmp
mov
ficoms
jmp
xlat
mov
jmp
xchg
or
mov
cmp
add
call
and
mov
inc
ret
sub
shr
sbb
dec
mov
inc
cmpl
add
push
sti
mov
inc
jmp
xchg
sub
pop
pop
das
enter
popf
insb
mov
pop
push
icebp
cmp
rol
lret
jle
fsts
mov
and
lahf
aad
push
int3
inc
into
adc
movl
shll
mov
push
fwait
cmp
or
or
cmp
add
sbb
sbb
and
inc
or
loopne
outsb
cmp
sub
mov
ret
incl
pop
mov
mov
adc
xchg
mov
push
sbb
inc
mov
sub
mov
add
addl
stos
mov
js
js
cli
dec
inc
xor
cmp
inc
xchg
ret
push
ljmp
add
mov
add
imul
popa
mov
xchg
jmp
add
jne
mov
add
xor
cmp
repz
mov
test
jne
xor
cmpb
pusha
add
inc
jmp
movsb
jae
lret
push
add
pop
cmp
je
inc
dec
aas
cwtl
mov
pop
add
jne
call
or
jae
notb
fildll
das
jbe
and
pushf
movsl
pop
rcrb
and
sbb
mov
sub
sub
sbb
xor
xchg
adc
ret
sub
xor
xor
clc
jmp
ret
rolb
mov
adc
sub
mov
mov
clc
sub
in
xchg
push
nop
mov
mov
nop
and
add
inc
add
or
shlb
or
jbe
gs
sub
mov
push
popa
mov
mov
pusha
jae
sub
add
stos
xor
jb
test
adc
push
jae
mov
hlt
fstpl
int
mov
push
mov
loop
jbe
lea
call
mov
shlb
xorb
scas
stc
cli
inc
stos
push
and
add
sub
mov
sub
ret
push
ficoml
hlt
pop
adc
mov
jmp
cmp
lret
or
xchg
mov
push
pushl
jle,pt
jb
loop
push
or
insb
mov
mov
imul
xorb
loopne
cmp
and
mov
and
mov
pop
and
out
iret
pop
push
or
cmpl
dec
faddl
dec
je
lds
mov
imul
out
rorl
pop
xchg
jg
mov
xor
popa
aad
jp
jne
ja
mov
sub
out
repnz
pop
dec
push
into
push
pop
mov
cmp
mov
mov
sub
in
mov
iret
push
gs
or
push
inc
add
and
xchg
mov
lods
jbe
or
or
xchg
pop
sbb
clc
imul
stos
cmp
cmp
fs
pop
pop
push
mov
popa
pop
jmp
xchg
insl
test
gs
ds
pop
add
add
je
sub
repnz
cmp
out
sub
add
and
mov
jne
or
add
add
ja
aad
ja
lcall
movsl
sbb
rorb
lcall
sub
jge
dec
outsl
add
jae
pop
inc
xchg
pop
dec
xchg
jl
adc
jmp
or
mov
jae
data16
iret
push
push
push
inc
shrl
dec
insb
mov
pop
popl
mov
inc
mov
jmp
sub
movsb
jne,pt
xorb
jmp
xlat
pushf
cmc
sub
sub
push
pusha
lods
dec
and
cmp
or
je
dec
push
dec
sub
add
into
fmul
and
pop
xor
loop
cmp
shlb
fdivrl
jge
lods
lret
adc
sub
xor
cmc
push
movsl
enter
je
aaa
jb
mov
adcl
movsl
mov
pop
jmp
gs
sti
mov
ret
hlt
add
nop
pop
mov
and
ret
test
push
nop
loop
roll
mov
jg
ja
or
insl
ret
inc
daa
jg
aaa
or
sub
std
lods
jnp
add
cmp
jmp
or
mov
outsb
jge
mov
cmp
dec
out
and
or
sbbb
add
mov
nop
ja
les
mov
ret
adc
cmp
not
enter
int
psubusw
clc
cmc
and
pop
mov
pop
push
into
jb
lods
or
shrb
push
xchg
xlat
nop
jbe
lock
jle
pop
cmp
jge
mov
sbb
or
cmpsb
lds
add
sbb
iret
push
sbb
dec
adc
gs
adc
xor
xchg
jne
aad
jle
mov
pavgb
je
testb
jbe
or
jb
add
jl
jmp
mov
stos
and
clc
push
adc
out
sti
xchg
add
sbb
cmc
das
lods
je
pop
pop
cmp
je
ja
gs
lods
test
sub
in
mov
cs
or
imul
std
ret
or
lret
or
dec
xchg
push
xor
xchg
icebp
push
push
sub
add
inc
mov
xor
lock
xor
add
add
mov
sub
jb
dec
les
icebp
dec
mov
loope
mov
sub
sub
sub
hlt
add
insb
or
ret
adc
push
clc
mov
lea
lret
test
push
int3
jle
push
cmp
dec
mov
inc
mov
inc
dec
out
xchg
das
sub
lret
jb
mov
in
or
sub
push
cmp
je
add
add
inc
xchg
mov
push
daa
fistps
mov
jmp
adc
dec
hlt
outsb
sub
xor
dec
imul
push
inc
pushf
lcall
stc
sub
dec
icebp
andl
inc
ss
sbb
push
cmp
push
and
fsubrs
pop
xchg
or
jle
lods
fwait
dec
aam
xor
add
movsb
push
cltd
adc
lock
nop
fdivl
insl
mov
cwtl
jmp
add
loopne
jbe
lcall
es
sbb
idivb
xchg
in
test
push
sarl
ret
jmp
jl
mov
adc
sub
mov
mov
mov
rorl
sub
push
inc
stc
cmc
out
std
sarl
sbb
std
stos
xchg
lret
xchg
inc
cmp
std
sub
or
xor
inc
mov
sub
dec
push
dec
test
xor
cli
call
or
xor
fldl
jb
addr16
push
xchg
fnsave
fmul
call
movsl
push
adc
mov
mov
or
addb
je
daa
inc
pop
mov
daa
add
setg
rcll
cmp
andl
push
mov
or
inc
in
or
mov
jns
ds
test
dec
sbb
lods
and
jb
lretw
in
mov
cmc
xor
movb
adc
daa
push
imul
ret
aaa
bound
jo
test
jno
or
enter
push
clc
cmp
adc
std
mov
mov
cmp
pop
add
jns
xor
fldt
sub
jl
adc
ret
idivl
and
mov
or
mov
lods
cwtl
xchg
xlat
cmpsb
sbb
sbb
ret
lret
mov
pop
inc
dec
xor
inc
push
inc
test
push
inc
cmp
mov
xor
lret
test
or
add
test
andl
add
outsb
sub
in
push
lods
add
xor
add
mov
inc
or
inc
xor
inc
faddl
push
iret
je
neg
jmp
popf
or
xchg
jl
sub
push
cmp
dec
adc
imul
push
mov
decl
push
adc
hlt
lds
jo
mov
push
push
pop
movsb
push
mov
mov
nopl
es
dec
and
jl
test
jge
sbb
push
and
push
xchg
pop
pop
les
sub
or
arpl
bound
jle
cmpsb
and
push
sub
test
fcompl
call
ljmp
xchg
add
mov
fldcw
data16
xlat
jmp
pop
inc
jge
push
sbb
inc
enter
adc
ss
xchg
stos
int3
test
sbb
jle
inc
push
jmp
pop
jae
inc
pop
pop
lods
xchg
inc
xor
jmp
cmp
or
push
sahf
pop
cmp
icebp
idiv
sbb
jb
or
dec
sbb
xor
mov
roll
jb
adc
sub
and
and
cld
cwtl
sub
mov
in
arpl
mov
cmp
inc
jmp
push
push
lret
adc
jp
ret
sbb
push
inc
cmp
dec
push
xchg
scas
or
adc
scas
mov
jae
jle
out
pop
imul
int3
das
sbb
stos
push
jg
and
imul
insl
lahf
mov
or
jp
call
and
aad
or
fisubl
popa
aaa
in
fisttps
xor
sbb
inc
test
js
xchg
outsl
mov
sbb
mov
jl
and
fsubrs
or
je
xchg
xor
xor
sub
data16
repnz
or
dec
shlb
cli
loopne
cmp
add
testb
in
inc
lret
cmp
cmpsb
cmp
imul
insl
pop
sbb
xlat
mov
or
sub
fisubrs
pop
and
vrcp14ss
mov
mov
sub
fbstp
push
lret
in
xor
je
dec
test
sbb
or
pop
inc
ret
and
jge
dec
push
adc
pop
pop
xchg
hlt
mov
mov
add
jmp
cmp
dec
xchg
lea
ret
or
pop
fdivrp
xor
push
mov
mov
add
sub
je
insl
jne
cmp
movsl
mov
adcl
cmc
dec
cmp
push
shlb
adc
call
sub
and
stos
cmp
pop
inc
cmpb
lods
sub
adc
je
push
fimull
fisttps
dec
cmp
icebp
lods
jg
or
adc
push
or
rol
push
out
stos
mov
jns
lret
add
mov
mov
jl
cli
or
ja
loopne
mov
mov
and
sub
inc
hlt
cmp
jne
aam
lret
ret
mov
jb
hlt
adc
sub
adc
call
mov
jns
mov
and
daa
sub
adc
or
in
push
lret
cmp
icebp
push
sbb
push
movsl
fisttpll
push
adc
stos
add
or
test
je
call
sbb
jmp
ja
lods
ljmp
clc
nop
arpl
lahf
and
mov
pop
or
pop
ret
cmovae
inc
sub
je
sub
iret
sbb
dec
stos
add
jbe
push
adc
clc
or
inc
mov
or
mov
stos
pop
test
xchg
outsb
push
dec
pop
inc
stos
das
add
sub
add
arpl
mov
movb
inc
repnz
lahf
mov
push
lea
repz
shll
lods
adc
add
popa
aad
dec
lods
aas
les
pop
mov
incl
rcrb
sub
mov
inc
xchg
cmp
push
jl
je
mov
test
fisubrs
sub
enter
lret
arpl
inc
andl
mov
cmp
or
loopne
mov
inc
shr
sbb
add
and
mov
inc
mov
mov
push
xchg
jle
sbb
pop
xchg
push
cwtl
es
out
in
and
jb
or
push
push
daa
xor
scas
dec
push
loop
xor
sahf
hlt
xor
jne
sub
es
or
jb
or
cmp
outsb
js
jae
jne
shlb
sti
xlat
mov
or
sbb
xchg
add
add
mov
mov
adc
int
sbb
mov
push
and
adc
gs
add
cmp
jne
push
or
add
inc
mov
dec
dec
push
sbb
fldl
inc
outsb
ljmp
lret
scas
pop
dec
pop
jecxz
dec
jl
bound
pop
or
call
inc
aas
pop
adc
sti
pusha
inc
jge
aam
lods
add
push
imul
push
dec
jl
mov
xchg
ret
cmc
mov
cld
enter
adc
xchg
pop
mov
pop
sub
and
ja
cltd
imul
outsb
fwait
xor
aad
test
push
cmpl
adc
dec
ja
mov
and
jge
test
inc
push
adc
lahf
mov
push
pop
cltd
or
push
add
decb
jle
es
orw
cmp
xor
dec
push
out
cs
push
hlt
inc
jp
dec
sub
dec
andb
adcl
out
into
push
or
pop
bound
inc
inc
inc
pop
push
xor
daa
cmp
std
enter
xchg
xchg
test
test
hlt
fisubl
push
push
imul
dec
div
push
call
sub
repz
or
add
pop
jle
std
in
mov
mov
sub
es
das
ja
add
call
ljmp
mov
mov
push
mov
and
shr
inc
add
pop
popa
adc
mov
jg
dec
fxch
xor
clc
js
pop
test
sar
outsb
jecxz
rcll
and
je
add
cmp
jae
enter
mov
xabort
inc
jmp
out
mov
scas
xor
lods
sub
mov
mulb
inc
or
paddsw
xor
push
cmpl
pop
movb
push
je
jmp
popa
xlat
andb
inc
into
fs
jbe
shlb
sub
inc
push
inc
or
mov
sbb
test
or
or
add
hlt
xchg
push
xor
pop
lcall
lcall
in
add
cmp
data16
or
rorb
decl
add
js
cmp
rorl
dec
and
cli
das
xchg
mov
fimuls
push
or
dec
push
pop
add
rorl
ljmp
adc
push
push
cmp
jge
lea
sub
or
add
or
jne
mov
dec
xor
cmp
and
inc
push
orl
jmp
cmp
addl
xchg
repnz
aaa
cmp
inc
and
mov
add
cmp
mov
ljmp
sarl
pop
jmp
jge
push
and
jb
and
adc
pop
pop
mov
sub
cwtl
adc
adc
add
ja
jbe
and
rorb
add
cmp
jne
lea
mov
or
xor
inc
add
cmp
xor
test
jne
mov
jae
dec
adc
mov
fwait
xor
out
add
xor
or
aas
jbe
out
sbb
ja
mulb
je
and
xor
and
aad
and
adc
insb
mov
in
add
incl
adc
sbb
cmp
push
mov
mov
pop
xor
test
push
and
mov
je
cmp
sbb
test
dec
push
in
inc
push
push
pop
lahf
leave
movsl
cmp
mov
pusha
std
jo
leave
pop
ljmp
mov
mov
pop
les
lock
insb
ret
lret
sbb
call
push
push
mov
mov
push
lods
hlt
sub
out
xor
stc
jmp
lea
stos
push
in
cltd
sub
push
in
dec
sbb
in
push
dec
sbb
mov
dec
mov
mov
seta
mov
cmp
adc
or
xchg
dec
notb
or
shrl
cmp
add
add
cli
mov
frstor
mov
test
inc
mov
sub
push
and
mov
into
push
lret
add
inc
jl
and
dec
add
lahf
mov
xchg
andl
cmp
jmp
int3
je
add
adc
cli
fnstcw
sbb
jmp
jle
fwait
mov
or
ljmp
push
adc
xor
adc
inc
or
inc
fcoms
dec
add
dec
jmp
sub
mov
les
lea
and
ret
jo
mov
add
sete
testb
rcrb
inc
stos
inc
add
or
enter
push
sbb
addb
pop
push
cmp
push
sbb
push
cmpsb
nop
push
mov
mov
add
jmp
push
cwtl
fbld
aad
pop
cmp
cmp
daa
mov
adc
jo
leave
inc
push
lds
adc
jle
mov
mov
or
bnd
insl
or
les
nop
sub
mov
push
pop
lock
mov
jmp
hlt
test
xchg
adc
cmp
cmc
movb
or
sbb
add
jbe
and
clc
push
loop
rolb
or
inc
xor
mov
jbe
dec
cltd
fwait
sub
je
xchg
cmp
mov
sub
fwait
sti
movsb
cs
jae
xor
rclb
jmp
xor
ljmp
ret
mov
js
cmp
clc
mov
psadbw
fbstp
scas
add
decl
notb
dec
lods
jl
test
jmp
jae
das
cwtl
xor
inc
popf
adc
bound
cltd
sbb
push
adc
and
sub
lods
inc
pop
movb
push
mov
ljmp
jno
mov
inc
sbb
imul
jne
push
and
out
mov
push
sbb
xchg
pop
mov
jge
mov
cmp
subb
addl
pop
lea
adc
andb
inc
inc
mov
fldcw
and
and
push
mov
pop
jle
adc
mov
sbb
mov
shrl
cmp
test
mov
call
jl
std
call
popa
mov
inc
inc
xorl
cmp
jl
and
fcomps
jne
test
mov
add
pop
xchg
ret
dec
mov
mov
aam
aad
ljmp
in
or
orb
or
insb
int3
or
or
sti
jns
add
sti
add
push
pop
fisubrs
popf
pop
inc
and
mov
mov
shr
or
jns
push
adc
and
jg
mov
push
mov
push
lds
mov
jp
jmp
mov
lret
into
push
push
ljmp
jo
or
pop
or
cmp
dec
sub
jbe
or
mov
dec
xor
dec
add
ss
negb
cld
popa
push
call
adc
fs
xchg
add
movsb
das
test
mov
xor
idivb
inc
add
cmp
mov
gs
lcall
in
add
imul
pop
ret
mov
xor
pop
jmp
adc
jns
adc
sarb
dec
into
inc
imul
sub
jl
cmpsb
out
sbb
inc
jae
jnp
popa
xchg
movsl
jbe
pop
push
xchg
push
ret
cmpsb
push
sbb
pop
pop
test
add
js
dec
push
call
data16
push
sbb
xor
outsl
mov
lods
or
jns
push
jnp
in
xor
jmp
mov
sbb
fists
jmp
jb
mov
push
lret
fwait
mov
sub
inc
sbb
into
or
xchg
adc
jno
mov
inc
mov
cmp
stc
sbb
push
cmc
mov
pop
mov
leave
push
lret
lret
ret
and
sub
and
inc
cmp
inc
push
mov
dec
cmp
push
aaa
xchg
mov
jecxz
ss
rcrb
push
or
cmp
jecxz
test
mov
mov
aas
movsb
mov
stos
or
push
clc
push
mov
pop
or
cmp
sub
sub
pop
popl
add
push
inc
adc
in
or
sub
or
stc
mov
cmovs
mov
push
or
and
and
ja
sub
xlat
mov
cmp
shl
pop
dec
ss
hlt
xor
fsubrl
sub
dec
cmp
pop
mov
dec
inc
shr
orl
push
fisubs
sbb
pop
adc
test
mov
adc
test
jb
mov
loop
dec
pop
dec
test
pop
mov
and
xor
adc
mov
jmp
jge
add
push
xor
cmp
or
mov
leave
movsl
jbe
adc
push
pop
rolb
push
sti
and
push
push
cmp
and
fidivrl
pop
ljmp
ret
pop
dec
addr16
push
lock
das
or
bound
jnp
pop
mov
pop
ret
dec
xor
addb
add
mov
jl
pushf
out
mov
pop
or
incl
ja
push
loope
pop
lea
or
movsb
incl
or
lods
lods
pop
ds
add
sbb
push
jno
adc
jmp
push
aas
inc
je
mov
bound
mov
incb
stos
inc
dec
dec
es
pop
xchg
lcall
jmp
mov
ss
mov
jle
cmp
cwtl
xor
mov
int
test
push
push
xor
push
jb
cmp
push
mov
test
push
stos
fcompl
hlt
test
lret
push
dec
push
add
mov
jg
addb
stc
inc
jae
cmp
and
shl
fwait
push
rcl
stc
loope
jmp
jecxz
les
push
je
ds
out
je
adc
xor
add
cs
xor
jmp
rorb
cld
or
sub
adc
sbb
pop
mov
adc
pop
push
mov
lock
lods
xchg
inc
ret
inc
or
add
and
inc
call
test
loope
aaa
and
mov
sub
pusha
mov
xchg
add
xchg
add
pop
add
adc
push
pop
push
xor
push
mov
add
das
or
lods
es
lock
xchg
add
sub
push
adc
jmp
push
push
je
pop
sbb
mov
xchg
test
sub
sbb
arpl
or
xor
jae
nop
xor
pop
mov
jmp
cmp
das
adc
xchg
es
sub
cmp
adc
xchg
xor
stos
lea
mov
loope
xor
dec
mov
mov
lea
jae
mov
dec
xchg
xor
sub
jp
leave
push
xor
inc
iret
aam
xchg
scas
loop
or
jmp
jecxz
pop
mov
sbb
dec
or
lahf
lods
sub
pop
popl
add
jmp
nop
pop
pop
loop
push
add
mov
push
add
jae
icebp
lds
add
lahf
lret
sarl
aam
adc
je
std
adcl
push
jmp
or
inc
add
test
xchg
mov
xor
jmp
push
xchg
out
or
cmp
pop
mov
aaa
leave
popf
xor
cwtl
pop
lods
sub
mov
loopne
push
jne
cmc
push
or
sarb
mov
cmp
mov
mov
jle
rclb
repnz
je
push
sub
push
or
and
sub
add
je
imulb
adc
out
les
and
push
mov
pop
inc
test
mov
push
negl
fisubrs
jno
mov
pop
and
pop
enter
mov
mov
inc
mov
cmp
xchg
je
les
lea
xchg
and
in
sub
mov
shrb
icebp
je
les
stc
pop
enter
aaa
push
nop
scas
sar
push
in
loope
push
roll
call
in
lock
jmp
hlt
gs
ret
cs
mov
pop
adc
lds
or
inc
rcrl
and
add
pop
and
sub
sub
adc
sbb
es
subb
pop
mov
mov
je
or
stos
sbb
xor
out
addr16
inc
push
add
mov
pop
inc
adc
and
mov
jg
mov
ror
ret
cli
fwait
imul
lods
outsb
jbe
jmp
movsb
and
enter
cs
inc
add
pop
adc
pop
push
jmp
pop
inc
add
push
lahf
sbb
cmp
pop
xor
adc
or
shll
dec
adc
pushf
mov
test
subl
cld
xchg
rclb
lahf
and
mov
arpl
or
and
push
push
lock
xchg
or
cmp
jne
adc
ds
cli
push
dec
xchg
push
add
lock
push
or
mov
adc
adcb
sbb
adcl
imul
mov
jno
push
rcll
or
int
xchg
stc
pop
movsb
and
dec
repz
lret
or
or
mov
stc
cli
dec
aam
addb
push
jl
fldcw
mov
stc
sub
dec
or
adc
and
je
jmp
aas
outsb
adc
push
pop
push
mov
idivb
lock
sub
cmp
in
out
mov
sbb
ss
jecxz
pop
jmp
repnz
xchg
xor
or
jne
dec
and
fstcw
ficoms
xchg
jbe
mov
iret
or
shlb
invd
jmp
adc
ret
push
call
mov
inc
fldcw
out
adc
jae
sbb
lcall
push
xchg
and
dec
jns
or
add
push
je
in
pop
lret
fstpl
out
mov
or
mov
pop
iret
lret
add
add
mov
mov
mov
movsl
inc
mov
cmpl
and
ljmp
rorb
pop
push
xor
jmp
outsb
pop
pop
test
adc
push
dec
sub
cmp
inc
push
ja
nop
adc
add
and
push
inc
sub
out
mov
sbb
mov
dec
into
imul
jmp
or
mov
xlat
pop
mov
or
rclb
adc
movsb
fs
test
dec
adc
pop
adc
push
adc
push
std
push
or
lret
pop
call
loop
rolb
jge
or
add
cmpsl
pop
mov
iret
sbb
pop
and
pop
pop
mov
ret
mov
es
inc
cmp
push
movsb
sub
loopne
add
call
sbb
sbb
jle
flds
push
or
fsub
sub
push
ja
add
mov
subl
iret
ret
pop
cltd
pop
xor
jl
mov
ja
mov
fcomi
addr16
or
into
inc
pop
test
and
loop
scas
jp
mov
push
push
pop
and
sbb
cld
cmpsb
mov
pop
orb
cmp
gs
jg
push
dec
addb
stos
mov
cmc
cs
ss
push
cmp
mov
dec
orl
dec
jbe
movsl
imul
fsubrl
and
lods
xchg
jg
notl
xchg
add
or
add
mov
icebp
and
insb
push
test
pop
out
ficompl
adc
jb
and
sti
call
pop
mov
faddl
hlt
fs
mov
cwtl
hlt
nop
fidivrs
pop
cmp
xchg
or
out
xor
cmp
popa
pushl
mov
adc
andl
dec
aam
test
ds
push
ret
jne
dec
or
flds
push
pop
pop
xchg
push
test
mov
mov
das
and
jmp
aas
clc
shl
sti
add
out
pop
cld
notb
hlt
xor
call
lahf
push
jge
fsubrs
and
jnp
pop
sub
jge
aad
lret
add
jno
mov
ja
adc
dec
mov
inc
mov
enter
movsl
and
push
or
inc
jmp
cmp
adc
aas
sub
or
ficompl
push
lcall
xchg
jle
mov
add
pop
stc
cmp
aad
sub
bound
orb
adc
mov
and
jmp
cmpsb
and
add
add
xchg
adc
push
dec
lds
jg
or
enter
sarl
sub
jb
adc
rcrl
pop
push
clc
mov
or
xor
sub
stos
dec
jl
sub
xlat
rclb
adc
in
dec
add
ret
pop
loop
push
push
dec
adc
leave
push
scas
and
jmp
test
dec
jns
stos
ss
movb
test
test
push
xor
das
push
fnstcw
pop
mov
inc
pushl
jne
fs
cmp
mov
cmp
ja
cmpsl
inc
add
jmp
loope
ds
sbb
inc
add
adc
jae
stc
notb
push
add
push
dec
loope
jg
pop
std
dec
fwait
test
ret
adc
ret
inc
mov
movsl
mov
call
mov
sbb
add
fimuls
ds
cmp
or
insb
inc
or
push
or
pop
rclb
lods
callw
cs
enter
rorl
lcall
add
adc
fnstcw
mov
or
sub
jo
pop
cmp
jo
xchg
je
and
pop
test
dec
pop
jo
lea
in
dec
enter
add
add
scas
add
or
enter
or
pop
dec
gs
xchg
daa
dec
arpl
leave
mov
pop
or
lea
mov
add
lret
jmp
cwtl
or
iret
lds
xchg
push
mov
rcll
inc
addb
dec
and
cmp
jne
mov
push
inc
pusha
add
push
mov
dec
and
mov
dec
and
pop
leave
inc
aad
loopne
je
ljmp
and
mov
push
sub
or
mov
mov
pop
test
cwtl
int3
push
decl
mov
push
push
or
in
lret
and
jmp
cli
xchg
and
mov
loopne
mov
push
ja
and
pop
mov
sbb
xchg
add
push
std
or
jmp
add
fimuls
adc
sarl
jmp
adc
aas
push
or
or
jne
and
nop
sbb
and
jmp
in
pop
pop
cmc
xor
push
add
pop
mov
das
testb
mov
mov
pushf
add
sub
fcoml
push
pop
adc
xor
mov
inc
lods
push
pop
aas
andl
dec
add
mov
adc
into
mov
push
xor
cmp
mov
repnz
js
dec
cmp
cs
in
or
or
or
mov
jecxz
jo
lock
adc
adc
subl
push
sub
popf
xlat
push
mov
and
mov
or
ret
mov
dec
fisubrl
adc
andl
dec
cmp
jns
jns
sub
neg
sbb
or
adc
roll
push
jmp
cmp
pop
mov
mov
mov
lea
sti
mov
shll
pop
mov
outsb
sahf
into
dec
jl
add
leave
ss
stos
fbld
pop
push
mov
push
or
sub
or
ja
or
cmp
addr16
mov
into
add
push
and
xor
and
pop
pop
repnz
loope
iret
jo
mov
or
pop
jmp
xchg
mov
shl
cmp
and
pop
or
out
or
push
mov
mov
mov
xor
inc
jecxz
rolb
dec
inc
orb
push
or
push
lahf
in
repz
lea
movsl
aas
stc
xchg
call
add
jo
lods
out
les
mov
jmp
push
ja
fsubrl
repnz
jne
enter
lods
adc
stc
push
pushf
roll
jmp
out
adc
loope
or
mov
push
inc
decl
jmp
mov
adc
push
cld
loop
mov
mov
mov
ds
out
movsb
test
rorb
rcrb
es
lcall
fsub
adc
in
clc
in
jmp
and
aad
pop
aas
dec
add
inc
jmp
push
add
mov
add
pop
ror
rorb
sti
sbb
jl
or
jg
pop
fadds
dec
cmp
sbb
aas
push
add
sbb
scas
stc
pop
pop
pop
mov
add
add
and
and
fsubs
cmpsl
aam
and
push
lock
mov
test
sub
or
nop
push
and
mov
inc
jle
adc
arpl
pop
gs
push
add
push
movsb
aas
dec
lock
or
test
sub
sbb
in
popl
jmp
std
cmp
xchg
pop
inc
fs
xchg
cld
xchg
add
push
mov
push
shrb
mov
jmp
or
aad
out
in
ret
test
test
ficompl
das
push
sbb
jne
out
jge
add
inc
sbb
adc
mov
mov
sbb
add
shr
das
es
stos
xor
sub
inc
xchg
push
push
adc
in
jbe
jne
add
xchg
add
push
jmp
gs
push
add
mulb
mov
jmp
mov
or
pop
dec
lea
push
shll
ss
mov
arpl
test
adc
cld
xor
orl
mov
mov
add
or
rorl
movsl
or
outsl
lock
outsb
test
imulb
mov
int3
add
jp
popa
addr16
mov
and
rorb
mov
imul
rolb
aas
sbb
inc
aam
adc
add
mov
mov
and
dec
adc
jmp
adc
les
pushf
daa
fimull
fdivs
repnz
ljmp
mov
and
test
push
in
leave
jl
aad
pop
dec
push
clc
fadds
dec
adc
jne
adc
sbb
cmp
xor
lea
jnp
bound
addr16
push
pushf
enter
pusha
pop
xor
mov
icebp
sarb
mov
mov
mov
pushl
mov
das
mov
inc
ds
push
jb
ret
or
sti
jmp
mov
call
xchg
stos
add
dec
adc
or
inc
dec
cmp
pop
mov
cwtl
pop
add
inc
or
ss
aas
pop
xchg
jo
scas
or
mov
and
iret
adc
inc
aaa
xchg
js
enter
dec
push
lea
sbb
push
push
xor
or
and
dec
out
call
cltd
adc
or
adc
and
inc
out
sti
add
aas
scas
jns
sarb
rclb
inc
add
sub
das
or
imul
cli
ss
adc
or
or
add
add
jmp
data16
jmp
pop
movsl
imul
maskmovq
sub
pop
push
cltd
inc
pusha
dec
je
cmp
mov
push
or
packuswb
daa
popa
sbb
lea
add
iret
shrl
mov
jmp
loope
mov
push
iret
add
jmp
dec
fidivrs
dec
lock
scas
add
imul
in
jge
idivb
mov
xchg
in
mov
call
mov
and
out
pop
call
cli
aas
jb
adc
inc
stos
or
lret
neg
sbb
xor
add
add
jmp
unpcklps
sbb
jne
sub
sti
test
ds
sub
rolb
gs
jne
sahf
sbb
out
adcb
xor
repz
lds
insl
xchg
or
jb
jne
ds
adc
jne
call
adc
popa
test
add
or
mov
mov
xor
mov
inc
loop
add
adc
dec
call
lea
dec
add
xor
shll
enter
jmp
std
arpl
subb
sub
mov
andb
js
cmpsb
popa
inc
or
lahf
xor
and
flds
insl
enter
arpl
roll
out
popf
push
push
sbb
iret
ds
sub
mov
cmp
loope
jmp
subl
fists
fmul
movsl
inc
clc
mov
and
add
lret
pop
push
loope
jmp
mov
and
pop
jle
and
or
sahf
out
in
inc
or
add
clc
and
nop
lret
mov
and
adc
xor
je
leave
pop
ja
jg
loopne
std
mov
aas
pop
ja
add
in
test
jno
rorb
adc
jmp
inc
mov
gs
or
les
pop
enter
adc
push
cmp
adc
add
or
sbb
jmp
push
dec
cmp
xchg
or
out
lock
mov
jne
rclb
or
insb
adc
pop
xor
outsl
lcall
sbb
cmp
or
pushl
inc
or
adc
outsb
add
add
push
push
test
int
inc
sub
pushf
addl
xchg
popa
mov
and
test
lea
mov
push
inc
jg
push
add
inc
or
jnp
push
leave
pop
add
mov
inc
lret
enter
push
pop
ljmp
cmp
xor
mov
loopne
int
cmp
xor
sub
gs
sti
loop
adc
cmp
push
out
push
mov
dec
js
jmp
icebp
mov
push
loop
sbb
mov
shll
hlt
or
clc
mov
adc
inc
in
aad
in
sbb
ss
call
pop
jmp
inc
fld
mov
andl
mov
or
mov
add
pusha
cmp
xchg
imul
jp
scas
aad
or
orb
add
push
push
inc
add
shlb
pop
cmp
je
lea
jge
faddp
pop
xor
mov
add
adc
fcmovu
outsb
push
insl
enter
jg
test
pop
lds
add
mov
ja
or
ret
and
add
pop
frstor
shlb
jno
sti
cmp
dec
cmp
mov
xor
push
cwtl
push
jb
call
pop
sbb
inc
jns
xor
pop
decl
arpl
or
inc
adc
sbb
push
or
sub
pop
jp
push
push
cld
ja
rorb
push
popf
sbb
push
push
sub
rorb
or
adc
pop
push
dec
pop
dec
outsb
xor
add
call
pop
xchg
int3
ss
lahf
clc
shlb
fwait
push
imul
push
push
in
adc
sbb
adcl
mov
cmp
xor
lea
std
andl
rcll
cmp
adc
or
pop
adc
mov
sahf
mov
cmpl
icebp
ljmp
dec
loope
das
je
sbb
test
or
push
ret
roll
jl
scas
rcrl
sub
aas
loopne
std
push
sub
imul
aam
cmp
jp
jmp
xchg
or
pop
fdivr
popa
mov
jae
je
push
push
inc
sub
lret
dec
clc
lods
mov
in
ds
movsl
aaa
jp
dec
rcll
movsl
inc
push
xchg
pop
pop
sbb
push
dec
mov
jmp
xchg
shl
push
sti
pop
data16
icebp
mov
jbe
bsr
jg
jbe
bnd
push
pop
jbe
or
inc
rcrl
fdivrl
push
and
or
xor
and
dec
adc
enter
mov
jmp
or
jmp
cmp
xchg
push
xchg
mov
fucomi
imul
jmp
cmp
out
mov
popf
push
xchg
mov
int3
adc
pop
and
les
bound
jge
mov
dec
cmp
sbb
sub
dec
xor
sbbl
push
or
lea
aam
cmpb
and
aaa
sub
xor
push
popa
dec
push
lea
add
lcall
xchg
xor
push
inc
sbb
pushw
dec
rclb
sub
fldt
push
fbld
dec
decb
and
sub
jle
je
adc
cltd
dec
das
adc
cmp
fnstsw
and
add
pop
ja
popa
push
out
mov
sbb
insl
call
jo
movsl
arpl
mov
xor
fdivrl
jns
push
aad
rcr
xchg
sub
or
sub
sbb
mov
repnz
mov
dec
jno
repz
inc
mov
sbb
in
mov
hlt
movl
test
add
std
in
leave
mov
dec
pop
add
insb
push
arpl
cmp
or
add
pop
adc
in
add
jb
addr16
add
inc
aam
dec
std
test
or
insb
cwtl
add
fildl
pop
mov
xor
filds
iret
or
shrl
cmp
ficoms
enter
push
popa
sarb
add
les
iret
pop
shld
sub
mov
add
and
add
mov
jl
das
adc
pop
stos
sbb
add
nop
inc
fdivl
jno
fildl
mov
adc
aad
mov
mov
add
aam
call
js
stc
jge
push
test
xchg
add
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
into
inc
xchg
cmp
mov
aam
movsl
fisttps
xor
movsb
add
hlt
shrl
imul
inc
mov
add
mov
add
add
sbb
or
fnstsw
add
add
adc
mov
add
test
or
add
lahf
in
into
push
stc
add
pop
cwtl
leave
fldcw
and
shlb
pop
cmp
or
mov
mov
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
decb
in
add
ficoml
int3
dec
frstor
outsl
fistpll
mov
mov
jbe
es
push
push
and
shll
cmp
fisttps
ds
cmpsb
fldl
mov
dec
add
mov
fisubrl
or
or
pusha
jp
sbb
fists
addr16
mov
jns
mov
popa
lret
sbb
andl
shrb
ss
push
int3
add
inc
or
das
add
add
lds
mov
mov
add
mov
pop
cmpsl
call
ret
rolb
mov
sahf
fldcw
mov
fs
es
pushf
add
insl
add
aas
ss
jmp
addr16
sbb
adc
add
adc
jp
loop
sub
mov
fwait
mov
xchg
or
mov
fdivrl
or
loope
xchg
fdiv
clc
add
ficompl
int
push
mov
mul
sbb
mov
roll
out
and
add
ud0
cmp
subpd
add
and
push
clc
rorl
popa
and
push
js
loop
mov
push
add
add
popa
add
cmpsl
notl
pusha
rorb
inc
imul
add
scas
fcompl
fldenv
or
inc
lock
aaa
push
cld
mov
mov
add
pushl
loop
push
ret
inc
xchg
mov
cmpsb
mov
sarb
sub
add
fldenv
jp,pn
add
add
push
outsl
sub
mov
mov
lock
add
popa
incl
cmp
inc
rorl
push
xor
roll
adc
add
push
pop
andl
cmp
pop
pop
or
aaa
jno
jns
icebp
mov
aam
push
jo
js
add
inc
aaa
cmp
sbb
out
test
outsb
shll
xchg
add
jge
pushf
pop
pop
inc
inc
dec
dec
inc
inc
rol
dec
inc
aad
cmc
push
xlat
out
jae
push
rolb
dec
jmp
fistl
imul
add
sarb
inc
sub
andb
pop
dec
jae
jb
arpl
jle
fldl
popa
je
fistpll
jp
jp
roll
push
dec
mov
or
ret
lcall
or
or
xchg
insl
cmp
jns
mov
pop
push
push
sbb
and
dec
dec
inc
pop
lods
rolb
inc
es
push
push
xor
cmp
xor
insb
xorb
cmc
lret
jge
stc
fnstsw
sbb
cld
sub
xchg
adc
aaa
subl
popa
jl
jne
push
popa
arpl
cmp
insb
adc
cmpsb
push
std
repnz
lea
je
outsl
and
popf
jbe
push
insl
inc
push
adc
insl
sbb
push
push
adc
xor
jle
pop
push
sub
mov
aas
stc
stos
jno
xor
leave
jo
push
rcrl
call
in
mov
inc
lea
aaa
rep
jecxz
mov
push
lret
arpl
sbb
xchg
dec
cmp
push
mov
or
andb
inc
fists
into
sub
sub
push
mov
cmp
pop
push
xchg
cmp
inc
adc
adc
test
inc
popa
adc
cmp
or
sbb
push
inc
lds
xchg
ret
data16
sub
mov
sub
rclb
dec
dec
aam
jb
scas
jns
or
push
inc
xchg
and
pop
push
cmp
inc
jo,pn
push
cmp
dec
jo
dec
xor
imul
cmp
test
orb
inc
pop
gs
popa
jae
mov
or
push
inc
fbstp
sbb
sub
or
outsb
fs
dec
and
popa
addr16
mov
pusha
push
xor
push
dec
fdivrl
inc
or
inc
xor
xor
inc
cwtl
mov
mov
inc
mov
and
inc
push
mov
dec
add
pop
jp
into
sbb
sbb
xor
or
inc
and
push
test
rorb
xchg
clc
adc
mov
xor
fs
jbe
andb
inc
sahf
mov
mov
dec
cli
lea
mov
cmp
push
adc
jl
mov
adc
and
dec
cli
mov
mov
inc
cmp
pop
adc
dec
sahf
xchg
scas
and
inc
mov
rolb
dec
inc
xchg
push
and
js
mov
dec
into
xchg
fsubl
hlt
ss
sarl
cs
mov
and
dec
pushf
xchg
scas
and
inc
into
call
ret
and
dec
xor
pop
mov
dec
int3
xchg
out
clc
ss
inc
and
inc
adc
push
add
std
mov
pop
push
orb
sti
lcall
push
dec
outsl
cwtl
jne
inc
imul
lret
hlt
addb
inc
adc
dec
adc
dec
jb
cmpsb
push
iret
push
mov
pop
xchg
adc
ficoms
pop
imul
push
or
push
flds
fs
adc
gs
je
stos
push
bound
lea
repz
dec
popa
mov
push
push
test
push
mov
push
inc
test
xor
test
inc
mov
jae
insl
dec
inc
sub
inc
jle
mov
sbb
test
iret
push
nop
jl
cmp
inc
xchg
inc
push
xor
js
dec
das
mov
jae
mulb
cwtl
data16
outsw
push
sub
fists
or
mov
inc
test
lret
sbb
fisubl
inc
insb
lret
adc
push
push
insl
or
popf
adc
sub
sub
push
mov
into
push
lahf
jne
push
xchg
ljmp
cmpsb
sahf
xchg
out
or
outsl
and
cmp
leave
or
outsl
cmc
dec
inc
les
push
push
or
aaa
out
hlt
jge
bound
inc
scas
inc
dec
aam
lret
imul
test
push
outsb
adc
dec
pop
mov
pop
push
jo
or
dec
data16
dec
fwait
or
jae
xor
nopl
xchg
inc
pop
jp
test
dec
pop
fdivs
adcl
jae
in
gs
push
shrb
sbb
imul
push
dec
and
dec
cltd
push
stos
adc
cltd
jmp
jg
jecxz
testb
mov
lahf
stos
or
jle
js
inc
inc
test
and
shlb
adc
popa
in
dec
mov
dec
insl
or
dec
bound
mov
xchg
push
dec
inc
mov
push
cmp
stos
adc
jbe
leave
sub
rcr
imul
leave
imul
mov
je
in
mov
ds
in
inc
lods
pusha
fisubs
mov
xchg
mov
xchg
ss
adc
cltd
leave
jae
jmp
sbb
inc
pop
jb
sub
js
ret
mov
jae
lea
dec
dec
scas
inc
aaa
inc
push
repnz
xchg
test
dec
jae
push
push
rolb
fidivl
inc
movsl
jo
push
xchg
ljmp
mov
dec
or
push
inc
sub
sub
pop
aam
into
adc
fwait
push
dec
fidivrs
inc
jo
dec
inc
jo
sub
jno
or
sub
push
cmp
in
test
or
dec
inc
dec
mov
and
xchg
inc
js
adc
enter
scas
mov
mov
mov
or
or
and
add
sub
movsb
aad
jns
jo
push
int
xchg
ja
add
adc
xor
daa
cmp
call
inc
jno
lods
iret
inc
adc
inc
stos
pop
dec
cmp
mov
adc
cmp
mov
je
jmp
push
call
cmp
je
pushl
call
pushl
mov
call
lea
push
push
lea
push
call
add
pushl
call
inc
push
mov
call
mov
lea
push
push
lea
push
call
add
jmp
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
pop
pop
pushl
cmpl
movl
lea
pushl
push
pushl
je
call
jmp
call
add
pushl
call
pop
push
call
push
mov
sub
push
push
lea
push
push
call
lea
push
lea
push
push
call
lea
push
push
call
xor
add
cmp
je
push
push
call
pop
