int3
mov
push
add
push
sbb
or
xor
ret
or
sub
or
jle
xor
ret
inc
adc
dec
mov
dec
or
rcrb
mov
mov
and
icebp
or
mov
into
push
adc
pop
mov
movsl
adc
dec
push
sbb
lds
jnp
mov
inc
mov
dec
xchg
mov
mov
gs
or
sub
jns
sbb
xchg
sub
push
les
push
inc
add
xchg
sbb
or
sub
sub
adc
repnz
xor
adc
imul
adc
iret
add
or
cmp
nop
cmp
cmp
inc
mov
out
cmp
popf
xchg
and
sub
xchg
or
int3
mov
or
jl
arpl
xchg
pusha
sub
jnp
or
inc
push
adcl
xchg
arpl
insl
bound
test
push
dec
stc
bound
adc
inc
sbb
rcrb
xchg
pushf
mov
cmp
cmpsb
inc
inc
xchg
stc
or
insb
and
mov
mov
popf
xchg
or
inc
xchg
shll
or
xchg
outsl
subl
sbb
and
mov
nop
sub
xor
mov
addr16
stos
andb
in
sbb
outsl
dec
xlat
or
push
adc
lods
push
hlt
and
aas
adc
push
adc
mov
shlb
pop
mov
insl
mov
outsl
testl
adcl
repz
imul
ficoml
lcall
inc
sbb
sub
adc
dec
pop
test
sbb
mov
arpl
mov
movsb
xchg
xor
pop
mov
aad
add
insb
and
and
mov
arpl
sub
xor
xor
mov
sbb
xchg
cltd
or
stos
push
dec
inc
sbb
inc
rorl
enter
and
pop
inc
js
ret
push
lea
dec
arpl
jecxz
adc
fidivrs
je
xor
and
movsl
adc
and
and
inc
stc
inc
or
out
adc
push
mov
add
jecxz
call
jns
adc
xchg
sub
das
inc
in
shlb
mov
xchg
pushf
and
notl
frstor
rcrl
clc
inc
or
jmp
and
push
scas
dec
sbb
fs
rorb
adc
arpl
int3
cmp
or
inc
sub
mov
ds
mov
inc
jg
inc
xchg
lcall
lock
arpl
jbe
push
push
adc
dec
add
xor
push
addb
js
sbb
mov
push
sbb
sub
aaa
adc
adc
inc
stos
or
adc
xor
pop
and
int
mov
or
stos
xchg
repz
lea
push
test
sbb
push
or
add
sub
dec
imul
or
shll
cld
rclb
cmpsl
aas
mov
sub
cmp
adc
add
outsb
inc
xchg
adc
ja
scas
cmpsb
cmp
dec
ret
push
arpl
scas
xor
inc
xchg
insl
adc
int3
cmp
xchg
adc
sbb
lret
enter
adc
sbb
fists
arpl
rorl
mov
les
cmp
fs
int
xor
test
push
mov
scas
cmp
mov
or
rcrl
xor
xchg
pop
mov
fistpl
adc
adc
push
mov
cmp
or
popf
xor
xor
pop
sub
clc
repnz
xor
cs
fiadds
sbb
sub
mov
xchg
adcb
xchg
push
xor
cld
inc
and
xor
mov
enter
inc
push
scas
bound
inc
mov
or
fimuls
orb
inc
mov
bound
pop
mov
cmpsl
mov
mov
sbb
cmp
call
lret
and
dec
and
add
mov
mov
mov
arpl
or
cmp
lret
arpl
notb
pop
mov
xchg
lock
mov
orb
cmp
cmp
pop
lret
sbbb
and
outsl
sub
fwait
push
dec
jbe
mov
nop
pop
daa
mov
mov
sbb
mov
jns
pop
into
nop
add
push
mov
jmp
cmp
pop
lds
inc
loopne
adc
out
xor
xchg
xor
and
cmp
ret
sub
push
inc
inc
sbb
fs
mov
pop
btrl
pusha
popa
pop
pop
bound
push
dec
and
inc
and
mov
cmpsl
sbb
inc
test
movsb
fwait
dec
jecxz
push
ficoms
cltd
psllq
or
inc
pop
xor
or
or
add
jne
fcoml
mov
cmpsl
pop
dec
mov
xchg
mov
or
xor
jns
and
xchg
iret
xor
xchg
lret
or
cmc
pop
mov
cmp
mov
es
adc
ljmp
pushf
jnp
lods
xchg
inc
js
adc
mov
xchg
sub
inc
push
movsl
cmp
sub
mov
js
icebp
bound
cld
lea
notl
frstor
or
and
and
movsb
and
and
ljmp
sarb
xor
popf
or
jb
int3
andl
or
adc
cmp
mov
push
pop
aad
push
lcall
enter
out
push
mov
loope
xchg
or
cmpsl
jmp
jp
adc
ljmp
sub
adc
mov
xor
cli
les
push
gs
and
xchg
aam
bound
sbb
pop
pop
in
mov
adc
mov
push
mov
xchg
and
mov
test
enter
sub
iret
push
gs
and
xchg
adc
sbb
in
mov
sub
aaa
lods
inc
push
or
pop
orl
dec
sbb
adc
sub
test
js
inc
or
jle
xor
daa
dec
xchg
or
jns
dec
xchg
or
xor
jnp
push
stc
fisttpll
xor
leave
sub
dec
ficompl
mov
inc
adc
mov
push
fs
jno
imul
mov
in
inc
dec
sbb
or
inc
flds
and
adc
aas
sbb
leave
or
mov
sbb
pop
mov
inc
mov
adc
arpl
or
scas
pop
dec
mov
xor
movhps
jg
sbb
mov
inc
pusha
or
gs
pop
rorl
pop
inc
shlb
xchg
or
mov
push
inc
daa
jns
mov
pop
inc
and
iret
xchg
adc
ficompl
xchg
aaa
push
lock
or
faddl
insb
and
xchg
insl
inc
cld
xchg
and
mov
adcb
fcomps
fsubrs
daa
mov
dec
stos
xchg
sahf
mov
call
pop
mov
push
nop
inc
sbb
subb
inc
mov
mov
mov
or
adc
adc
mov
fistpll
jns
inc
mov
xchg
jns
ret
adc
xchg
pop
adc
dec
sbb
les
xor
or
and
out
pop
test
notl
out
cltd
adc
sbb
lret
adc
pop
lret
pop
xchg
push
pop
std
lds
outsb
and
and
inc
stc
xor
adc
xorl
adc
adc
dec
and
xchg
inc
fwait
movsb
fs
mov
adc
inc
andb
pop
sub
fmuls
mov
arpl
or
jl
pmulhw
adc
lods
sti
arpl
pop
notb
das
xor
and
xchg
adc
dec
arpl
mov
mov
or
dec
cmp
test
and
clc
dec
gs
shrb
fwait
pop
mov
lahf
dec
sub
xchg
ja
fisubrs
inc
mov
lea
and
xor
push
jb
jns
enter
dec
xchg
rcll
sub
nop
imul
push
xor
lods
insb
or
popl
inc
adc
adc
dec
and
movsb
mov
scas
rorl
nop
int
sub
or
and
inc
hlt
and
in
and
jecxz
or
mov
dec
mov
wbinvd
and
adc
xor
and
and
in
cmpsb
mov
mov
sub
sub
mov
jle
or
pop
fistpll
imul
mov
mov
icebp
mov
cmp
sub
sub
lock
mov
imul
rcrl
scas
xor
xchg
add
pop
pop
dec
pop
dec
push
cmpsb
push
sub
inc
imull
fnstsw
cmp
inc
pop
cmp
xor
or
xchg
cmc
inc
adc
or
xor
jbe
inc
roll
aaa
mov
sbbl
xor
mov
sahf
xchg
cmp
addr16
adc
mov
in
push
arpl
pop
sbb
cs
mov
lock
or
push
inc
adc
mov
ja
into
inc
nop
leave
inc
scas
xchg
fs
inc
mov
js
movsl
and
rclb
in
push
inc
leave
popa
inc
cmp
sub
add
sub
and
arpl
xor
jge
sbb
ljmp
inc
in
fistl
pop
and
pop
cli
adc
pop
daa
out
mov
clc
aas
mov
fwait
xchg
and
cmp
mov
into
xchg
pop
stos
or
lds
adc
inc
mov
and
insb
or
xor
inc
mov
jns
jae
inc
add
pop
adc
popa
mov
sub
gs
inc
or
cmp
dec
mov
and
mov
cmp
aam
or
mov
js
mov
test
fisttps
aas
movsl
inc
and
inc
and
sub
loope
adc
insb
inc
sub
or
jo
loope
mov
inc
or
aas
jg
mov
adc
mov
mov
adc
dec
inc
and
jl
adc
inc
movsl
mov
dec
xchg
xchg
mov
leave
test
mov
mov
add
inc
dec
jnp
mov
loopne
xchg
pushf
gs
pop
ja
mull
movsb
out
sub
jae,pn
inc
into
movsb
scas
jns
aad
hlt
mov
stc
xchg
xchg
adc
push
dec
mov
mov
mov
lret
cmp
lret
cli
adc
test
and
scas
inc
fsubrp
and
dec
and
adc
sbb
push
cmpsb
imul
xor
test
adc
push
mov
adc
ficomps
aam
dec
jg
mov
call
lock
dec
sbb
xchg
int3
add
ljmp
stos
inc
add
dec
push
out
and
pusha
add
or
inc
and
cmp
mov
and
js
test
mov
adc
add
cmp
fs
xor
push
fbstp
push
and
or
mov
cmp
bound
add
call
and
sub
sub
clc
fsubp
fstps
jo
add
testb
jl
insb
test
je
mov
and
fbstp
dec
push
pop
pop
push
push
ret
or
and
mov
ja
mov
adc
dec
sbb
adc
and
jne
test
jb
sub
push
pop
push
add
scas
cli
adc
add
xor
cltd
adc
cmp
add
lret
and
or
push
sarl
mov
sbb
pop
pop
and
xchg
les
nop
add
int3
inc
mov
ret
nop
xchg
test
push
mov
hlt
je
and
adc
or
push
and
call
fwait
pop
push
inc
adc
in
sbb
aaa
adc
daa
test
mov
adc
mov
xor
add
push
adc
imul
mov
pop
call
adc
call
mov
sub
orb
mov
jne
or
call
or
rorl
adc
call
je
out
xor
add
adc
add
and
or
and
je
add
mov
daa
adc
sbb
adc
add
dec
in
test
dec
adc
sub
xor
pop
inc
add
adc
pop
xor
xlat
push
adc
sbb
add
adc
adc
add
nop
add
inc
add
loopne
push
inc
add
adc
or
pop
and
adc
jb
and
add
adc
adc
add
sbb
nop
add
nop
add
inc
add
fbstp
inc
add
adc
or
and
out
push
jno
outsl
jl
adc
mov
fcompl
sub
les
or
sub
xchg
xchg
sbb
cwtl
enter
sbb
and
jne
mov
sbb
sbb
and
push
xchg
cld
ret
inc
sbb
or
xor
call
adc
call
xor
add
xor
sub
adc
xor
loope
call
mov
lcall
enter
sub
aad
inc
adc
cmp
mov
sarl
test
or
cltd
push
and
push
cmp
mov
jb
inc
sub
add
pop
mov
add
mov
jmp
fsubrs
dec
adc
aam
mov
inc
jge
dec
jb
dec
xchg
rolb
movl
inc
scas
mov
or
movsl
xchg
xchg
das
adc
divb
add
addb
xlat
inc
movl
push
xor
nop
sub
and
mov
mov
repz
and
inc
leave
loope
jecxz
dec
test
mov
sub
adc
pop
add
nop
loop
cmpsl
adc
push
out
adc
lret
adc
iret
sbb
aas
ror
loopne
and
push
adc
or
fmulp
push
ficompl
mov
test
dec
ficompl
loope
fisubl
ds
and
std
fwait
inc
in
loopne
clc
pop
sub
inc
push
push
push
push
dec
add
or
dec
lea
test
push
add
call
rcrb
or
enter
sub
xchg
fcompl
xor
cld
inc
sbb
aam
iret
insl
or
mov
call
xchg
or
cmpsl
or
stos
push
and
add
jo
push
sub
add
xchg
push
inc
push
and
push
inc
cmp
adc
add
push
jbe
stos
dec
in
add
sub
lea
dec
dec
mov
lds
xchg
adc
out
enter
xlat
or
in
and
aad
cmpsl
shr
mov
lret
xchg
push
push
in
int
sbb
xlat
mov
xchg
mov
push
jno
sbb
xchg
push
sub
adc
cmp
test
mov
sarb
movsb
dec
dec
adc
or
stos
lock
and
or
mov
adc
aam
cmpsl
or
sub
ret
sbb
push
lcall
and
adc
sub
cmpsl
dec
adc
xchg
xchg
adc
enter
cmp
or
or
repnz
xchg
dec
add
xor
cmpsb
faddl
and
xchg
sbb
or
insb
push
push
sahf
dec
test
int
jl
rorb
fcmove
cmp
aad
dec
inc
or
rcr
enter
dec
dec
and
adc
mov
jns
or
cmp
lea
nop
mov
jmp
loopne
dec
or
aad
pop
inc
or
xor
loopne
rolb
xchg
dec
mov
or
sub
sub
aam
push
and
rcrl
dec
push
fistpl
call
pop
sub
inc
cmp
and
popa
mov
mov
fistpl
rolb
inc
or
hlt
xchg
push
ss
dec
mov
fadds
adc
or
call
and
aas
leave
mov
jecxz
insb
cmp
aas
lock
cs
and
adc
jb
adc
data16
bound
adc
loope
ljmp
add
push
or
pop
pop
inc
pop
lds
scas
lods
push
mov
add
push
das
or
nop
sbb
mov
nop
repz
and
leave
int3
aas
mov
add
cmp
clc
iret
jne
pop
push
jmp
dec
inc
adc
sbb
xchg
or
call
and
call
orl
into
popf
or
pusha
inc
lret
addb
inc
push
hlt
cmc
test
mov
push
and
fmul
fiadds
and
inc
xlat
sbb
and
push
gs
lods
fs
or
push
ror
mov
mov
rcrb
pushf
xlat
sbb
insl
leave
fs
pop
adc
lea
stos
lret
adc
cmc
in
lahf
test
sub
inc
loopne
or
in
pusha
and
dec
gs
sbb
push
xor
mov
popf
or
into
stos
inc
imul
daa
xchg
and
imul
lods
rolb
xor
call
and
mov
jmp
xor
xchg
mov
cmpsb
and
cmovle
dec
mov
jbe
int
pop
popl
sbb
sete
call
jb
nop
push
mov
pop
inc
ror
inc
xor
lock
add
fldl
sub
lea
in
and
insl
inc
xor
sbb
mov
stos
and
mov
lahf
sbb
pop
aam
sub
sbb
adc
cmp
js
mov
cmc
int
cmpsb
inc
push
cwtl
lret
loope
addr16
int3
dec
das
pop
adc
jbe
and
popa
or
add
or
and
jle
sub
adc
data16
mov
cwtl
int3
in
jne
adc
jle
and
push
adc
sbb
jne
repz
daa
or
fs
lcall
dec
inc
push
sub
call
add
xchg
test
mov
les
or
pop
inc
push
push
mov
sub
and
mov
rorl
and
jecxz
inc
push
inc
enter
and
pop
pop
ret
daa
adc
or
cs
in
pusha
and
gs
nop
sti
dec
sub
dec
mov
jo
mov
mov
nop
sub
ret
dec
or
lret
add
mov
sub
in
sbb
or
adc
cmp
xlat
hlt
adc
mov
ret
jbe
dec
mov
push
cmp
mov
add
jo
lea
sub
adc
mov
into
mov
addr16
test
sbb
outsb
jle
rclb
pop
inc
inc
cmp
xor
imul
inc
jecxz
cwtl
ficompl
mov
mov
ja
push
xchg
adc
ret
nop
sub
sub
leave
dec
adc
test
mov
inc
cmp
jecxz
or
mov
push
pop
imul
mov
outsb
js
jg
scas
leave
movsl
rcrl
jl
push
loope
repz
ljmp
pop
and
add
addb
icebp
int
xchg
or
push
xor
enter
adc
mov
pusha
rep
mov
push
pusha
inc
neg
fisttpll
mov
sbb
sbb
ds
dec
mov
inc
inc
leave
or
add
or
mov
dec
and
sbb
pop
xchg
xchg
xor
cld
and
push
dec
push
dec
xchg
add
mov
xchg
push
ret
xor
adc
add
jmp
rcl
call
or
ret
xchg
or
test
xor
push
xchg
outsl
mov
repnz
sub
cltd
mov
add
inc
bound
punpckhbw
jmp
add
xchg
sub
lahf
into
or
add
push
mov
inc
rorb
jmp
mov
scas
adc
jae
xor
and
sbb
jne
fcompl
sub
inc
dec
adc
dec
insl
in
xor
negl
aad
aas
push
cs
dec
or
in
push
dec
lahf
pop
adc
mov
das
ud2
in
inc
jo
and
and
xchg
loop
hlt
enter
fs
adc
call
sub
or
or
addb
rclb
rol
bound
adc
mov
sarl
int3
aas
xor
call
and
pop
push
or
lldt
mov
call
sbb
pushf
sbb
mov
mov
cmp
pushf
inc
dec
call
hlt
aad
scas
or
add
call
or
xor
jg
push
xor
push
push
or
mov
scas
mov
and
es
jecxz
push
dec
xchg
mov
jmp
adc
test
or
or
push
dec
cmp
xchg
jbe
dec
push
or
add
or
in
add
push
mov
push
add
mov
pusha
jl
or
pop
shlb
push
xorb
call
movsb
adc
xchg
adc
leave
pusha
push
jmp
and
or
or
aad
addr16
test
mov
lds
orl
cmp
test
jl
xor
sub
jo
push
xor
push
pop
lret
cmc
movsl
push
xacquire
into
push
push
mov
les
push
add
pop
mov
mov
cmpsb
or
ror
push
or
loope
mov
mov
ret
jmp
cmp
and
mov
ret
cltd
icebp
mov
jg
inc
test
mov
movsl
inc
mov
cmp
aam
jp
nop
ret
lods
mov
fst
adc
jle
mov
rorb
sub
cmp
push
mov
aaa
push
mov
insl
mov
rorl
adc
and
mov
icebp
mov
jmp
popa
test
dec
cmp
mov
scas
mov
ds
fucomi
xchg
ret
and
sbb
and
ret
sub
and
sub
dec
mov
push
shl
cwtl
adc
adc
dec
lock
cmp
loop
les
or
xor
inc
sbb
loopne
into
daa
add
and
iret
adc
in
sarl
inc
inc
sub
in
es
shr
rcl
dec
rcll
test
mov
sbb
call
rorb
leave
adc
adc
mov
leave
fsub
cmp
into
lea
imulb
pop
cmp
out
pusha
setle
push
push
mov
sbb
mov
mov
std
xorl
xchg
rorl
sub
in
mov
and
xor
push
call
adc
lods
jg
fdivrl
shlb
adc
sbbl
mov
jmp
call
cmp
insb
out
or
adc
push
lock
add
and
push
outsb
into
inc
or
inc
rclb
mov
orl
mov
mov
js
cmpsl
xchg
loop
mov
fdivrl
in
sub
xchg
mov
insl
and
outsb
jae
sbb
push
std
lahf
popa
or
mov
mov
mov
movsl
and
dec
sub
dec
xor
mov
jge
sub
and
sub
repnz
or
and
pusha
lds
adc
adc
mov
dec
icebp
cld
inc
or
inc
mov
loop
add
dec
mov
sbb
repnz
jno
mov
mov
add
jne
mov
adc
ror
and
bound
push
dec
xchg
sbb
sub
jnp
je
cltd
inc
adc
mov
lret
and
pop
aam
stos
std
and
push
adc
mov
adc
jl
push
mov
cmp
sub
in
adc
faddl
dec
xchg
repnz
aas
sbb
inc
add
or
push
and
xchg
or
mov
dec
xor
push
or
das
mov
sbbl
or
sbb
mov
xor
sbb
outsb
jo
xor
mov
mov
sbbl
out
jl
inc
or
idiv
sarl
pop
pop
and
pop
adc
sbb
negl
rcll
pop
mov
inc
addl
repz
push
mov
or
jno
push
fistps
in
popf
or
mov
push
xor
push
cmp
mov
pop
call
mov
and
or
test
popf
mov
mov
aaa
adcl
jge
sbb
push
enter
call
xor
push
mov
lret
push
es
frstor
add
fs
pop
leave
gs
aad
jl
test
leave
dec
sbb
adc
or
mov
fbld
pusha
arpl
mov
push
adc
mov
xchg
fimuls
mov
xor
add
pop
add
and
lods
inc
or
jbe
inc
dec
mov
and
xor
das
dec
pop
or
adc
mov
xchg
mov
mov
fimuls
pop
inc
cmc
mov
mov
mov
inc
call
push
js
push
aad
test
mov
out
inc
dec
dec
dec
xor
inc
fildl
xchg
and
andl
mov
xor
push
and
inc
sub
stos
inc
push
adc
inc
dec
push
sbb
lods
imul
push
popf
inc
inc
call
mov
mov
cmpb
test
mov
mov
mov
cltd
dec
mov
dec
loope
mov
adc
dec
inc
imul
enter
xor
and
dec
mov
mov
imul
and
mov
push
push
adc
push
mov
jecxz
and
xchg
inc
jbe
cmpsl
dec
mov
lods
roll
inc
mov
lret
ffreep
mov
in
or
xchg
lcall
cmp
adc
call
or
jb
mov
add
repnz
sub
and
mov
cld
dec
mov
lods
in
inc
mov
jp
push
nop
loopw
adc
push
mov
sub
xchg
or
cmc
addr16
js
sub
jb
icebp
mov
adc
mov
lahf
daa
mov
shll
cld
addl
dec
shr
shll
or
adc
mov
mov
inc
pop
lods
mov
bound
mov
dec
and
fsubrs
call
cmp
repz
shll
scas
inc
push
and
mov
mov
aaa
iret
or
mov
adc
lahf
mov
sub
add
sbb
mov
das
ljmp
sbb
xor
leave
mov
ror
push
xchg
mov
push
shr
xor
push
ffree
std
push
pop
and
or
mov
dec
gs
or
test
xor
sub
scas
sti
inc
hlt
jle
nop
mov
jp
pop
jg
scas
sub
fistl
cmp
pop
add
clc
fldl
pop
cmp
mov
jne
mov
cmp
pop
hlt
and
ret
jmp
pop
mov
mov
call
stc
cmp
jl
pop
daa
aam
movups
or
add
push
sar
cmp
pop
pop
rcl
push
push
push
push
pop
cmpsl
mov
adc
outsb
push
and
lods
jne
mov
orb
scas
leave
fs
scas
xor
and
test
shll
xchg
xchg
inc
mov
push
enter
je
mov
mov
jg
jle
inc
stc
push
jo
adc
xchg
pop
out
adc
or
subb
pop
ret
inc
repnz
adc
lahf
pop
sbb
pop
adc
test
int
and
add
mov
push
add
dec
outsl
lods
popf
push
sub
pop
inc
mov
mov
fwait
push
lar
test
adc
push
and
jne
pop
push
rorb
pop
icebp
xor
mov
icebp
sub
fs
mov
sbb
seta
je
add
mov
aaa
mov
mov
xchg
cvttps2pi
xchg
cli
adc
push
push
push
inc
and
or
jmp
mov
fcoms
push
inc
rol
mov
inc
push
test
pop
pop
mov
xor
dec
imul
and
clc
xchg
push
inc
and
xchg
ja
jmp
jmp
repz
std
xchg
das
mov
repz
mov
nop
jns
sub
or
addr16
cmp
nop
sbb
or
mov
push
jae
dec
push
movsb
cmp
adc
pop
adc
xchg
inc
test
jle
les
dec
mov
cmpsb
pop
iret
scas
cwtl
mov
dec
leave
pop
icebp
cmc
inc
cwtl
fs
xchg
rorb
into
xorb
and
mov
sbbl
or
mov
add
lcall
movl
inc
test
je
nop
jge
dec
arpl
push
adc
xor
dec
add
mov
mov
mov
clc
inc
mov
addr16
mov
push
repnz
not
shlb
cld
sub
mov
aas
mov
mov
cmp
aas
jne
xor
sub
jne
mov
out
int3
or
push
or
test
and
fdiv
mov
add
push
inc
cmp
pop
jae
hlt
adc
pop
sbb
or
insb
pop
mov
push
xor
pop
jp
rorb
sbb
cmp
test
sbb
call
jp
xor
xchg
add
repz
dec
sub
push
mov
sub
sbb
movb
jmp
xchg
sbb
cmp
xor
mov
mov
cltd
test
lahf
mov
call
cmc
popf
sub
dec
mov
dec
mov
hlt
popf
loope
clc
stos
les
push
mov
das
sub
lret
addl
adc
adc
xor
cmp
je
push
loop
enter
subl
inc
addb
scas
cmpsl
and
in
push
cld
nop
jnp
pop
inc
push
les
dec
adcl
int3
sarl
mov
out
mov
dec
add
test
sbb
repnz
pop
or
mov
pop
filds
jne
xchg
rorb
cmp
mov
and
js
movl
push
mov
lods
lods
loope
add
mov
mov
scas
adc
mov
or
das
arpl
and
pop
push
sbb
les
xor
test
and
sbb
movl
push
sar
test
insb
aaa
lea
addb
push
adc
sbb
dec
sub
es
adc
push
shrl
lods
sbb
add
or
fwait
aas
inc
dec
or
xrelease
xchg
pushf
xor
or
push
test
mov
push
adc
cmp
sub
mov
je
xchg
inc
scas
cmc
leave
or
mov
inc
pop
or
pop
add
pop
aam
loopne
call
pop
dec
emms
mov
xor
cmp
mov
xor
push
mov
or
adc
test
add
sahf
fwait
dec
lcall
add
mov
xchg
out
jb
mov
fs
mov
repz
rcl
inc
fs
mov
shrl
stc
push
mov
shr
scas
cmp
mov
push
push
inc
adc
movsl
mov
push
pusha
adc
daa
adc
inc
mov
inc
mov
push
inc
pop
rorb
mov
aad
pusha
stc
mov
lods
add
fcomps
rolb
jle
adc
jne
sub
fiaddl
fstl
scas
loope
mov
loop
imul
inc
popf
mov
repnz
adc
xor
xchg
imull
call
push
xor
sarb
pop
rcrb
inc
mov
stos
and
adc
sbb
inc
lahf
dec
jl
push
lock
jne
inc
push
call
fsubrs
adc
rcll
mov
lods
and
mov
ret
dec
and
shll
loopne
and
xchg
inc
xor
push
and
pop
push
xor
xchg
xor
pop
pop
sete
mov
cmp
roll
mov
or
add
pusha
scas
rclb
sbb
fwait
lds
push
pop
subl
adc
and
add
jl
daa
push
jmp
clc
dec
xor
cmp
xchg
call
je
scas
orb
mov
ret
mov
adc
mov
mov
cli
add
lcall
mov
mov
sbb
scas
dec
leave
xchg
jbe
jns
sub
inc
or
sbb
negl
jo
mov
add
pop
dec
and
mov
and
in
sbb
cmpsb
adc
lcall
ret
adc
add
or
cmp
cld
dec
xchg
or
sbb
sbb
dec
mov
inc
sub
iret
inc
call
test
and
inc
adc
xor
push
adc
enter
or
call
sub
test
call
cmp
daa
adc
jo
call
add
inc
fadds
and
push
mov
push
adcl
and
adc
js
push
call
orb
inc
xor
call
sub
and
sbb
shrl
call
and
ret
movsb
adc
cmp
call
adc
adc
test
mov
adc
pusha
cmp
mov
test
rolb
push
or
call
pop
sbb
dec
push
cmpsb
rclb
leave
sbb
enter
ret
xor
mov
push
mov
mov
pop
add
mov
sbb
pop
or
cmpsl
mov
in
test
inc
cmp
sub
push
cld
adc
je
outsb
mov
arpl
test
in
inc
inc
jl
inc
pushf
and
adc
inc
pop
and
add
sbb
push
push
pop
inc
xor
out
lahf
adc
adc
test
and
mov
ret
and
and
addr16
loope
stos
sub
cmp
or
sahf
inc
sub
pop
or
call
and
insb
call
je
pop
inc
fmul
sub
xor
adc
and
movsb
mov
jbe
aas
dec
push
sub
ss
or
mov
pop
and
dec
scas
and
adc
and
lods
inc
add
xchg
frstor
sbb
sub
stos
and
popf
adc
call
xchg
cmp
push
and
scas
xchg
cmp
push
dec
dec
sub
cmp
dec
dec
and
push
mov
adc
cmp
adc
mov
add
jns
xor
sbb
inc
sbb
cmp
call
push
adc
out
mov
xchg
push
push
mov
dec
pushf
xchg
xlat
mov
cwtl
mov
xchg
inc
cmp
sbb
lcall
nop
or
cmp
div
gs
clc
cmp
repnz
fwait
jo
add
pop
push
push
push
adc
sbb
mov
sbb
loope
pop
sub
inc
test
and
data16
aad
lea
mov
and
push
lahf
cmpsl
mov
les
add
cwtl
xchg
xchg
mov
sub
xchg
aam
adc
sub
mov
adc
test
xor
loope
sahf
pop
cmpsl
adc
sub
cmpsl
addr16
clc
gs
lea
mov
lret
les
pushf
push
push
pop
das
aas
inc
pushf
xchg
icebp
or
jo
call
xchg
outsl
lock
cwtl
insb
push
mov
orl
int3
pop
xor
push
xchg
adc
pop
mov
inc
cwtl
iret
out
icebp
adc
xor
popfw
lock
xchg
pushf
lea
mov
sbb
pop
jg
iret
adc
lock
cltd
cwtl
mov
push
daa
out
xchg
cmp
cltd
test
shll
inc
cwtl
or
jo
call
stos
xchg
loop
lahf
or
sbb
xor
xor
cltd
push
or
call
and
cmp
and
jle
xchg
movsb
bound
sbb
cmpsb
aas
cmpsb
mov
inc
cld
xchg
call
push
pusha
mov
xchg
insb
call
xchg
data16
cmp
jne
push
adc
adc
mov
cwtl
mov
mov
fwait
je
cmp
jo
xchg
popl
ds
inc
mov
aas
loope
lcall
xchg
nop
inc
xchg
les
xchg
sub
stos
and
loop
cmpsl
adc
sub
popf
cld
inc
xchg
xor
inc
call
adc
test
xchg
insb
pop
pop
xchg
xchg
jmp
inc
adc
inc
call
popa
adc
add
mov
dec
lahf
inc
inc
adc
loope
mov
cmpsl
lds
pushf
sar
adc
jg
xchg
inc
das
cltd
enter
or
xchg
mov
jmp
fcomps
mov
mov
cwtl
pop
mov
xchg
lods
xchg
sbb
and
cmp
call
loopne
call
mov
and
dec
mov
test
sbb
insb
vunpckhps
stos
jecxz
std
ficoml
mov
dec
test
xchg
fimuls
xchg
insb
cmove
mov
call
jb
fcoml
rcrl
or
dec
mov
add
ficoms
mov
and
push
xchg
movlps
mov
xchg
mov
sbb
gs
rclb
xchg
add
repz
mov
and
shrb
mov
jp
mov
mov
push
push
ljmp
push
call
out
cwtl
fdivl
hlt
xchg
fs
sub
iret
ljmp
add
mov
xor
lcall
test
cmp
xchg
and
xchg
rcrb
xchg
and
cmpsb
les
adc
sub
test
ret
adc
test
xchg
sub
inc
xchg
cltd
enter
arpl
or
inc
add
add
mov
loope
mov
jno
or
jbe
jno
push
and
or
push
mov
mov
and
xchg
mov
mov
push
and
pop
add
or
and
mov
adc
sub
les
xor
mov
jno
or
inc
pop
and
out
adc
push
mov
dec
movsb
cwtl
movsb
sti
cmp
jbe
and
cmp
xchg
lcall
add
jle
jecxz
adc
mov
add
or
inc
add
lock
cmpsl
mov
mov
xor
sub
les
add
dec
mov
mov
or
scas
mov
mov
push
xchg
sbb
test
and
mov
imul
clc
inc
int
jns
dec
dec
and
push
shrl
mov
mov
pop
sbb
loope
stos
sbb
and
xchg
or
sbb
or
adc
int
add
imull
jmp
mov
xchg
and
scas
je
jns
adc
scas
and
loop
outsl
dec
xor
push
call
test
arpl
push
cwtl
and
les
cmp
cs
mov
in
ret
mov
xchg
ja
hlt
xchg
mov
js
imul
out
push
xchg
shrd
lret
das
xchg
pop
lods
sbb
lret
pop
xchg
scas
lods
repz
test
xlat
filds
dec
test
inc
jo
adc
call
or
jnp
lahf
adc
icebp
out
pop
push
test
test
aas
pop
sub
pop
test
pop
stos
test
push
jns
lahf
xchg
fistps
push
lret
sub
fwait
push
push
pop
mov
jns
mov
mov
leave
addr16
push
icebp
pop
push
out
aas
push
sbb
dec
ds
mov
aam
lret
push
lods
pop
daa
and
cs
and
pop
in
mov
adc
cld
push
ja
dec
add
jne
pusha
icebp
call
rorb
ja
jge
enter
xchg
xchg
lea
xchg
jae
imul
icebp
or
imul
bound
mov
test
jne
sbb
rol
sub
adc
clc
add
stc
call
fcomp
enter
push
push
shl
sub
lods
iret
add
incb
call
out
stos
rolb
and
clc
jo
jns
push
sub
xor
and
movsb
scas
dec
test
punpckhwd
dec
xor
and
gs
xor
or
push
sbb
enter
mov
adc
dec
and
test
add
adc
sarb
inc
or
dec
or
enter
push
cmp
jae
sbb
enter
idivb
sbb
fsubrs
add
add
push
xchg
adc
adc
mov
or
movsb
sbb
inc
lds
cmpb
rorb
nop
sbb
das
sub
andl
repz
push
xchg
add
xchg
rcrb
or
xchg
mov
add
sahf
mov
orl
add
jae
lea
mov
push
mov
sahf
andb
sbb
mov
call
fwait
call
ss
fadds
sub
aad
add
fsubp
pop
mov
adc
ss
add
sub
xlat
decb
outsl
xchg
pusha
sub
sub
dec
inc
add
add
cmp
ficoml
in
push
xchg
push
pop
or
add
push
cmp
stos
or
cltd
inc
mov
jne
inc
lea
mov
adc
push
cld
test
jo
push
xor
js
pop
jge
lock
daa
clc
add
repnz
cmp
cmpsb
and
nop
ss
call
jae
mov
sbb
sbb
movsl
sbb
push
inc
inc
xchg
dec
jmp
adc
adc
or
jno
or
mov
pop
dec
xorl
in
and
fwait
inc
js
mov
popa
or
sarl
adc
jnp
xor
and
jne
pop
ret
jle
jl
popa
jno
cmp
pusha
jno
cld
sub
adc
and
imul
shl
negl
idiv
movsl
repz
jbe
jle
js
lock
push
cs
xor
roll
les
or
or
cmp
frstor
fimuls
adc
pop
or
add
or
lods
adc
addps
adc
and
push
cli
cmp
mov
adc
loopne
rcrl
sbb
jo
mov
movl
or
or
xchg
ja
test
inc
xor
xor
push
mov
sbb
adc
daa
shr
mov
fdivr
or
jbe
andb
jo
in
push
adc
leave
out
ds
and
or
and
ret
xchg
mov
inc
adc
rcll
jmp
cmp
push
mov
es
inc
or
inc
data16
daa
adc
ret
out
outsb
nop
dec
loop
adc
add
je
push
mov
dec
les
ret
lea
push
inc
push
sbb
mov
sbb
sub
push
je
jnp
add
shr
rep
clc
lret
loope
mov
jle
dec
dec
cmpsl
push
lds
push
stos
sub
outsl
inc
call
ds
call
dec
jns
stos
nop
push
mov
mov
or
js
nop
xchg
and
jnp
adc
inc
notb
adc
and
js
cld
je
mov
add
aad
add
add
sar
inc
aas
scas
sub
sub
jne
lret
cmp
aas
movsb
xchg
inc
or
jb
test
repnz
xor
mov
loopne
test
jl
lahf
fs
jne
push
or
xchg
out
jle
sbb
mov
popf
push
add
cmp
jne
test
leave
je
push
add
pop
jne
and
mov
fcompl
cmpsl
das
sbb
fdivs
cmp
xchg
dec
inc
lock
inc
mov
test
popf
insb
push
push
stos
popf
movsl
add
pushf
or
or
aas
push
and
push
les
inc
xchg
out
ret
and
fnstcw
arpl
push
mov
popf
push
leave
or
stos
mov
and
adc
sbb
sub
adc
jbe
adc
in
mov
or
mov
gs
mov
or
mov
dec
inc
sub
jne
sahf
fisubs
dec
or
push
sub
jle
das
mov
xlat
mov
ret
jo
mov
lock
jb
gs
orb
jo
rclb
shl
iret
adc
bound
inc
pop
sbb
clc
sub
hlt
mov
jl
outsl
or
pop
or
pop
mov
pop
fstl
xor
pop
je
cli
lret
mov
and
mov
push
mov
xchg
push
xchg
pop
cwtl
push
or
int3
pop
adc
lock
cwtl
xchg
pop
add
and
inc
cmp
shl
std
sub
jmp
rcl
pop
cmp
add
jle
push
dec
sbb
jne
add
push
ljmp
or
sti
push
ret
cmpsb
sbb
or
leave
xchg
push
lret
push
sbb
cmp
jo
std
repnz
dec
add
add
sbb
push
adc
adc
test
add
jecxz
pop
pop
jns
je
cld
pushf
loop
icebp
call
test
aam
divps
sub
fwait
shll
mov
push
inc
in
jae
jle
mov
adc
push
movsl
nop
in
das
xor
jnp
movsb
push
xchg
push
xor
push
aad
add
aaa
cmc
sbb
push
push
mov
jb
xchg
jae
add
and
je
outsl
dec
sub
aam
xorl
dec
add
cmp
jne
inc
inc
adc
testl
add
or
push
call
and
cmp
cmp
and
dec
add
and
jne
jmp
xchg
shlb
shlb
inc
dec
xor
out
sub
push
xor
or
jmp
or
je
mov
jne
push
call
lahf
pop
cmp
and
pop
or
or
jnp
adc
and
sbb
pop
and
insl
adc
sbb
jo
inc
cmp
xchg
xchg
add
ret
mov
xchg
pop
mov
and
push
enter
es
cmp
or
gs
push
shrb
pop
jo
jmp
mov
add
mov
es
and
and
aas
and
add
adc
leave
mov
adc
dec
or
orb
adc
jb
fldl
popa
mov
or
or
xchg
je
pop
shl
test
xor
jbe
xchg
stc
jne
and
jg
fnstenv
pop
jne
and
pop
and
jo
imul
nop
out
add
jmp
out
shll
and
jns
divb
mov
pop
adc
js
and
bound
jo
or
addr16
cli
aaa
inc
test
or
test
pushw
and
aas
jb
lock
jno
xor
pop
ret
sbb
bound
xor
jle
aam
jl
jb
pop
adc
pusha
mov
jae
in
inc
jmp
call
inc
push
lock
push
add
cmp
lock
inc
cld
mov
flds
dec
hlt
loop
filds
pop
ret
mov
in
jae
test
arpl
jmp
xor
inc
push
aam
loopne
push
lea
mov
dec
or
enter
pop
mov
mov
and
or
add
ret
push
push
mov
xchg
push
sbb
cmp
addl
sub
sbb
pop
andb
inc
psubusw
inc
cmp
call
rclb
and
jb
push
add
call
add
rcrb
cmp
jo
ret
xor
mov
call
out
mov
popf
lock
inc
mov
sub
out
jo
or
inc
imul
test
mov
and
lcall
mov
loop
mov
push
fld
mov
orb
loope
inc
addr16
pop
xor
mov
pusha
lahf
add
sbb
or
sub
out
sub
or
leave
push
and
imul
lret
or
lds
sarb
lcall
jo
push
dec
cwtl
mov
or
enter
adc
lods
in
or
add
sub
jmp
inc
mov
pusha
and
lea
push
arpl
lret
ljmp
dec
aas
sub
add
push
cmp
test
xor
out
arpl
push
inc
cmp
push
jbe
push
pop
dec
dec
sbb
es
cli
or
push
cmp
or
movsl
and
adc
nop
adc
sbb
addr16
dec
inc
add
mov
sub
dec
adc
dec
pusha
insl
sbb
movsl
pop
xchg
inc
xchg
xor
inc
cmp
lods
sar
mov
add
pop
call
hlt
dec
push
push
lea
call
mov
mov
mov
stos
insb
sbb
and
add
adc
add
testl
pop
sub
std
mov
sbb
das
jle
ja
sbb
aad
imul
repz
sub
dec
adc
jmp
mov
or
call
int3
pusha
les
or
pusha
mov
je
jo
jne
addr16
adc
push
cltd
adc
inc
jo
testb
gs
pop
push
nop
and
sub
push
add
pop
lods
push
idiv
in
mov
xchg
fsts
add
xchg
or
pop
push
and
push
aas
or
push
imul
mov
jbe
push
gs
xchg
jmp
push
sbbl
push
pop
subb
sbb
mov
push
or
hlt
arpl
and
movl
imul
pop
inc
sub
sti
and
adc
adc
daa
bound
loope
and
pop
mov
adc
sbb
jae
jo
push
push
rorl
and
cld
mov
sahf
into
roll
repnz
test
mov
popa
repnz
push
jge
out
mov
inc
push
add
jb
out
jno
and
xchg
inc
jns
sbb
push
pop
pop
add
add
call
gs
sbb
nop
inc
inc
xorl
push
pop
adc
mov
jb
test
adc
stos
and
or
sbb
out
sbb
mov
mov
jno
or
and
pop
dec
test
sub
orb
int3
inc
in
daa
inc
pop
fildl
and
jle
push
xchg
jl
leave
pop
aas
loopne
pop
inc
pop
mov
push
push
mov
pusha
lret
jle
int3
dec
add
call
inc
xchg
pop
push
cmp
pop
ljmp
mov
push
ret
mov
push
adc
and
sahf
jo
ret
popf
mov
push
sbb
mov
int3
mov
loopne
je
call
adc
scas
xlat
test
movsl
and
mov
mov
add
data16
or
mov
pop
jnp
jo
xor
sbb
fucomi
xor
jne
mov
mov
faddl
and
mov
xchg
push
scas
xchg
cmpsb
faddl
rorb
dec
jl
call
sbb
clc
jae
movsl
movsl
adc
lea
mov
add
pop
popa
push
jg
ror
cmpsb
sbb
pop
int
daa
jo
mulb
cwtl
shlb
mov
daa
push
pop
test
les
add
inc
inc
push
lea
lret
or
mov
pop
rsqrtps
leave
jns
test
clc
rcll
rcrl
aad
es
mov
pop
testl
fwait
stos
jecxz
or
call
add
push
out
jno
pop
push
jp
loop
xor
js
adc
inc
sahf
gs
push
dec
mov
or
pop
fwait
cmp
scas
jecxz
push
test
and
sub
jecxz
pop
test
inc
or
movsb
test
popf
fistl
inc
pop
stos
push
rolb
mov
les
ds
pop
jmp
ret
clc
add
test
cmp
pop
dec
pop
pushf
sbb
bound
adc
push
and
stos
and
in
arpl
push
imul
shr
and
pop
lea
push
xchg
mov
pop
aas
sub
bound
xor
push
test
mov
jmp
fs
fcmovnbe
fdivs
arpl
js
pop
mov
jge
push
jne
ret
cmp
push
loop
add
cmp
loope
cld
pusha
adc
sub
push
adc
jnp
movsl
mov
mov
add
jns
lods
dec
push
fcoml
or
bound
outsb
cmc
xor
pop
mov
rcrl
jns
lcall
data16
and
sbb
mov
in
ret
pusha
or
popa
icebp
xor
or
lods
fstl
sbb
das
mov
mov
leave
push
jl
xchg
lea
imul
data16
call
movsb
pop
inc
inc
lock
jmp
inc
outsl
push
popa
fmuls
inc
pusha
adc
cmpsl
jp
hlt
or
xchg
dec
or
or
test
mov
and
movsb
pop
dec
inc
pop
lret
mov
xchg
fcompl
pop
pop
sbbb
jecxz
add
mov
pop
push
mov
mov
and
dec
ljmp
in
inc
xor
add
push
icebp
mov
cmpsb
mov
push
push
lahf
mov
mov
pop
adc
cli
sub
cwtl
push
nop
jns
cmp
adc
rolb
and
fs
pop
push
xor
mov
jns
cmp
xchg
sbb
dec
xor
movsl
nop
mov
sub
roll
sbb
dec
jle
call
adc
and
inc
call
xor
out
xor
xchg
push
call
push
xor
mov
pop
pop
mov
int
sub
jo
add
sub
and
pop
cmpb
adc
fadds
adc
adc
add
push
jo
jmp
rol
popa
pop
sbb
pop
sbb
aaa
pop
int3
or
mov
push
in
data16
push
mov
push
push
mov
mov
popa
push
orl
push
inc
ss
pusha
in
jmp
xor
mov
loop
shll
inc
adc
call
rcrb
xchg
push
and
mov
or
add
stos
or
or
test
pop
test
test
adc
cmp
mov
mov
add
or
mov
and
test
inc
out
inc
mov
cmp
jbe
inc
sbb
mov
scas
icebp
mov
or
enter
jl
jl
mov
dec
add
adc
push
inc
push
mov
adc
and
stos
push
push
pop
dec
or
sub
jae
or
inc
xchg
xchg
xor
divb
fs
or
and
cltd
jns
sub
adc
inc
in
adc
sbb
push
push
pop
lods
mov
or
add
sbbl
int3
test
jns
or
popf
dec
popa
js
mov
sub
dec
push
sub
test
insb
inc
jp
and
dec
test
xchg
mov
xlat
pop
dec
pop
cmp
jo
dec
aam
adc
push
stos
push
jle
cmpsl
dec
scas
mov
inc
push
rorb
nop
ret
mov
jg
push
dec
inc
adc
rcll
shr
popf
ljmp
mov
mov
and
dec
jne
push
add
inc
imul
and
test
cmp
jge
cmp
or
fiaddl
xor
mov
adcl
fs
data16
out
es
xor
dec
xchg
and
or
adc
or
sbb
clc
xchg
cltd
add
push
pop
mov
dec
mov
adc
push
mov
dec
lret
add
jl
and
fsubrs
sub
add
pop
outsb
sbb
fwait
rorb
sbb
mov
and
adc
add
cld
mov
mov
lea
repz
push
or
dec
cmp
divl
in
mov
ljmp
push
add
movsl
cwtl
pop
mov
inc
add
dec
push
push
or
xchg
aam
mov
hlt
jl
es
add
stos
jmp
in
loop
aas
bound
inc
dec
je
addl
popa
adc
std
lods
enter
pop
call
insb
nop
test
mov
cmp
pmovmskb
dec
fimull
or
cmpsb
adc
mov
rclb
lea
inc
xchg
mov
or
push
call
mov
shlb
stos
xchg
fldcw
lds
in
jno
dec
in
sub
fisttpl
push
sub
dec
lock
mov
pop
movsb
adc
pop
inc
in
cmc
mov
jnp
dec
xor
shll
dec
dec
rorl
sub
insb
inc
stos
cmp
push
xchg
sbb
adc
dec
mov
inc
cs
mov
int
jo
addr16
imul
push
stos
stos
aam
inc
ja
filds
push
add
mov
inc
cltd
insl
sbb
hlt
push
or
call
js
je
dec
jbe
push
mov
push
call
lret
add
push
jl
mov
ret
inc
jmp
push
or
jae
sbb
inc
shr
pop
sub
mov
in
push
sbb
mov
ret
jne
int3
ja
jne
xchg
jbe
subb
dec
push
jbe
stc
enter
xor
inc
arpl
testb
pop
push
in
push
pop
pop
push
sub
pop
mov
pop
sub
js
add
stos
xchg
mov
inc
push
inc
pop
test
mov
adc
cs
nop
outsb
jge
xchg
pop
add
outsl
andb
inc
test
mov
xchg
icebp
and
dec
add
scas
pushf
add
add
mov
pop
or
inc
stos
xor
mov
cmp
jmp
or
adc
add
xchg
jnp
pusha
cmpb
sti
sbb
sbb
das
or
dec
lea
mov
xor
orb
inc
inc
cmp
mov
push
xor
pop
push
cmpsb
pop
shl
add
outsl
push
and
sar
adc
xchg
lock
ret
decl
addr16
push
addr16
sbb
lret
loop
add
cld
push
addb
mov
xor
mov
je
pop
insb
inc
add
cwtl
sub
aas
xchg
rcll
lds
adc
dec
pop
inc
xchg
lcall
xor
ljmp
rcll
stos
and
add
call
mov
inc
adc
frstor
scas
xor
and
or
pop
cmp
dec
dec
push
dec
push
or
dec
dec
jno
or
dec
inc
loop
and
jge
mov
push
mov
sahf
popf
dec
lods
push
loope
add
movsl
rclb
mov
mov
outsb
cmp
xchg
or
push
dec
jns
or
imul
dec
dec
mov
xor
xchg
pop
lret
xor
add
mov
mov
mov
jo
das
cld
or
mov
pop
je
or
add
xor
mov
js
sbb
sbb
mov
in
push
add
lods
in
push
pop
pushf
outsb
aam
push
xor
mov
stos
in
adc
inc
sub
lea
push
lds
sbb
jmp
xlat
cmpsb
mov
sub
dec
and
ljmp
or
inc
mov
nop
and
mov
test
and
pop
push
xor
ret
rolb
inc
pushf
or
mov
dec
sbb
fisubs
adc
jmp
cltd
lret
mov
sbb
adc
roll
sahf
adc
adc
or
mov
data16
push
cmpb
xchg
push
add
cmp
pop
int3
adc
sub
dec
adc
cmp
sub
int3
je
xchg
rcrl
cmc
push
pop
sbb
add
add
dec
sbb
mov
mov
lods
add
inc
push
inc
sbb
push
adc
mov
push
push
test
push
jns
inc
mov
int
bound
rcr
pusha
inc
js
or
fimull
sbb
mov
test
pop
addl
mov
cs
mov
sbb
fdivrs
xchg
adc
sub
pushf
sbb
inc
roll
xchg
imul
pushf
sub
adc
je
or
mov
cmp
sub
sbb
sbb
nop
in
out
inc
mov
je
push
leave
rorb
push
add
push
inc
rcrl
mov
sbb
loop
mov
add
maskmovq
xchg
daa
hlt
mov
pop
stos
dec
add
popf
das
and
dec
mov
enter
call
ret
fdivr
or
movsb
or
pop
adc
repnz
cs
mov
cmc
push
call
loopne
add
add
je
dec
jne
and
cmc
mov
imul
inc
sti
lret
outsb
inc
das
inc
xchg
sub
xchg
pop
push
jg
fisttps
pop
xchg
xor
xchg
add
call
ds
sarl
insl
dec
xor
popf
aas
push
loop
adc
dec
ret
xchg
sbb
ja
or
inc
fwait
adc
int3
out
inc
or
pop
call
adc
push
mov
xchg
testl
inc
push
push
mov
push
cmp
stc
movsl
imul
imul
dec
mov
cwtl
pop
pushf
jnp
pushf
mov
pop
and
adc
imul
cmp
and
jno
inc
test
cmp
call
add
xor
rcrb
cwtl
cmp
sub
mov
repz
test
filds
sti
push
sbb
pop
and
xchg
test
mov
dec
push
fcomps
repz
stos
stos
outsb
in
std
pop
cwtl
jns
push
aaa
push
push
inc
sub
pop
push
in
lahf
mov
out
arpl
je
push
stos
or
movsb
and
stc
cmp
adc
adc
cmp
mov
ret
pop
jns
push
jne
add
mov
or
adc
pushf
push
mov
ret
out
icebp
das
mov
push
adcl
cmp
and
cwtl
inc
add
sbb
je
add
push
lcall
fidivrl
call
lods
push
sub
test
cmp
leave
pushf
mov
xchg
mov
sub
movsb
xor
ss
iret
lret
push
xor
lea
add
push
pop
push
addb
mov
ljmp
loope
movsb
xchg
xor
stos
shrb
sbb
dec
mov
or
pop
dec
push
inc
scas
gs
push
xchg
movb
cltd
or
scas
inc
push
inc
test
mov
add
jmp
push
fldenv
stc
push
dec
push
xchg
push
lods
push
and
or
call
push
loope
sub
scas
pop
jmp
leave
adc
aam
mov
call
cmpsb
adc
aas
cmpsb
cmp
dec
mov
adc
mov
add
push
xchg
dec
and
gs
add
inc
mov
mov
inc
push
jge
push
mov
add
call
xchg
jno
mov
push
es
dec
imul
enter
or
adc
cmp
test
mov
in
sbb
inc
mov
test
xor
call
repz
sbb
push
sub
and
push
mov
in
or
call
pop
addr16
mov
call
adc
ret
lret
add
or
push
sbb
and
adc
and
adc
adc
cmp
cmp
repnz
loopne
pusha
push
adc
xor
lcall
xor
or
xor
sbb
mov
cmpsl
daa
and
xchg
and
sbb
aam
dec
adc
loope
jae
call
sbbb
popa
popa
sbb
adc
dec
fisubrl
xor
ret
xchg
adc
push
sub
and
cwtl
imul
cwtl
or
sub
mov
jecxz
stos
push
xchg
movsb
add
cmc
pop
dec
and
push
mov
xchg
sbb
test
daa
mov
pushf
push
mov
mov
add
fs
pop
jnp
xor
push
push
push
data16
repnz
lds
add
fwait
gs
xchg
mov
xor
pop
pop
push
sub
inc
ret
nop
push
push
push
cmc
ficoml
inc
nop
mov
in
in
jle
out
add
mov
xchg
ja
dec
adc
adc
cmpsl
jge
mov
pop
lods
and
cli
inc
cmp
testb
add
sub
jne
call
pop
int3
stc
mov
imul
pop
hlt
das
mov
aaa
adc
xchg
xchg
sub
xor
or
push
sub
add
sahf
sub
push
adc
ss
idivb
mov
rcrb
adc
int3
xchg
or
call
pop
sub
pop
xchg
inc
aad
leave
das
mov
push
mov
xor
clc
xchg
pushf
cwtl
enter
pushf
dec
and
adc
and
xor
rclb
cmp
fstl
gs
xor
sbb
push
jno
lods
ficoml
arpl
pusha
jb
ficoml
inc
sbb
std
xor
push
adc
xor
call
xchg
push
arpl
xor
lds
jle
lahf
call
fdivl
je
in
or
pop
jo
adc
mov
in
andb
mov
movsb
and
mov
xor
dec
or
enter
sub
cld
test
xor
sahf
adc
sbb
mov
pop
pushf
aaa
xchg
inc
and
cs
jle
adc
les
bound
in
mov
stc
sbb
cs
push
mov
mov
adc
sub
mov
add
lods
xchg
in
sub
mov
daa
repnz
fdivrl
xor
dec
push
lds
add
cmpsl
xor
xchg
mov
dec
imul
xchg
rorb
xchg
pop
pop
pusha
lcall
and
popa
dec
sub
fiadds
bound
sub
in
addr16
daa
pop
or
sub
cld
mov
adc
sub
dec
push
jne
or
call
push
cwtl
jne
push
mov
shrb
xor
arpl
and
push
or
movsl
adc
push
mov
cmpsb
push
mov
imul
mov
cmp
pop
cld
leave
into
sub
aam
jnp
xchg
repnz
or
shr
jge
push
dec
sub
xor
sub
dec
ljmp
lock
add
in
lahf
add
in
mov
cmc
cmovs
jl
mov
inc
jae
dec
xchg
add
leave
cmp
jne
adc
or
cmp
cmp
pop
push
push
call
xor
js
into
mov
shrb
xchg
dec
es
leave
xor
jle
dec
bound
call
xchg
mov
dec
xor
mov
jmp
sbb
dec
cmpl
push
mov
mov
push
pop
dec
mov
cmp
xor
cmp
test
loope
push
dec
xchg
pop
dec
mov
push
adc
push
and
cwtl
fistl
roll
sub
loopne
and
sbb
or
push
add
in
or
sbb
xor
mov
movsl
inc
add
mov
call
cmp
movsl
rcll
xor
inc
inc
sub
sub
lock
pop
xorl
call
push
xor
enter
out
and
into
lea
jnp
xor
push
js
mov
daa
jl
push
xchg
xor
or
and
mov
pop
push
in
js
jbe
adc
dec
sbb
lahf
addr16
sub
dec
cltd
mov
daa
std
and
in
add
fucomi
mov
jo
fbld
xchg
push
mov
or
xor
aaa
outsb
enter
or
in
idiv
outsb
adc
jecxz
push
jno
cmpsb
and
push
jl
and
fs
je
mov
sub
js
jp
and
or
les
cmc
cmp
and
test
inc
push
or
clc
les
dec
or
lcall
fs
enter
jne
aam
lahf
ret
xor
movd
stos
mov
aad
dec
scas
aaa
mov
push
lea
rcl
pop
mov
push
add
and
jo
outsl
pop
mov
out
in
lea
fists
out
inc
bound
dec
js
adc
or
push
and
jae
mov
jbe
or
add
daa
and
cmp
push
mov
pop
sub
and
sbb
pop
sbb
push
les
es
cli
movsb
jmp
addr16
out
test
inc
fstl
jmp
push
jmp
sbb
jg
pop
push
pop
mov
add
je
jp
push
rorb
and
ret
flds
and
dec
push
std
push
mov
int3
sub
lea
pop
out
push
jmp
sbb
and
ficomps
cmp
push
test
in
mov
and
push
mov
or
loop
loopne
ret
mov
push
call
test
call
or
inc
mov
call
or
orb
adc
call
gs
movsb
adc
or
jle
push
call
psubsb
test
adc
sub
mov
sub
scas
cmc
and
movl
mov
xor
rcll
push
sub
or
inc
pop
add
adc
mov
nop
fisttps
and
push
rcll
imul
and
adc
inc
or
ret
jns
adc
int3
sti
jb
mov
cwtl
sbb
cmp
ja
fldenv
sbbb
sbb
sub
imul
or
xchg
and
cmp
pop
ds
or
test
and
cmp
mov
sbb
adc
xchg
mov
cli
cwtl
sbb
and
and
cs
and
or
test
add
inc
sub
cli
push
sbb
cwtl
nop
inc
sarb
popf
mov
mov
add
test
fisubs
cmp
pop
sbb
pop
mov
push
mov
enter
adc
mov
sbb
mov
cmp
std
mov
in
lods
js
nop
cmp
inc
js
sub
pushf
cmp
and
test
push
sbb
sub
mov
sbb
cmp
in
xor
sub
and
push
adc
mov
inc
inc
and
mov
mov
scas
movsb
cmp
and
adc
test
gs
push
cli
jno
mov
mov
cmp
mov
sbb
pushf
cmp
and
idivl
lock
jb
daa
pop
jmp
jp
negl
cmp
mov
pop
inc
inc
frstor
fiaddl
mov
push
jg
push
mov
add
lods
fs
dec
push
dec
mov
jne
jecxz
cli
sbbl
push
and
cs
push
das
mov
push
and
inc
and
mov
jl
mov
mov
frstor
sub
lock
in
sub
add
lcall
aad
jo
sbb
inc
adc
stos
pop
arpl
call
jno
add
adc
loop
add
adc
les
add
adc
and
movl
cmp
xorb
add
adc
xchg
adc
les
add
adc
loopne
adc
jbe
out
adc
adc
into
and
adc
push
adc
adc
fcomps
cmp
ja
add
adc
sub
sbb
not
push
aaa
loop
and
sub
sarb
add
mov
jmp
xor
jmp
xchg
adc
xor
cmp
xchg
push
mov
push
or
test
add
mov
fs
insb
pop
mov
je
add
cmpl
jg
adc
sub
sbb
cmc
inc
pop
sbb
dec
orb
inc
mull
xor
bound
push
and
inc
mov
or
aam
nop
sbb
dec
and
dec
cmp
jbe
mov
leavew
sub
dec
sbb
das
adc
jle
js
pop
and
imul
fistpl
add
jbe
adc
dec
dec
sti
adc
std
inc
jo
pop
sarb
gs
lret
ficoms
test
loope
pop
pop
bound
adc
sub
xchg
add
shll
adc
out
rol
test
inc
pop
inc
and
ficompl
cmp
jne
push
push
aad
xor
jmp
fmuls
mov
jmp
cmp
sbb
mov
sar
mov
in
push
or
pop
dec
or
sbb
and
inc
call
or
sbb
cld
insl
pop
hlt
out
sub
jne
push
push
stos
test
fs
filds
daa
cmp
push
add
sbb
addb
jmp
push
add
icebp
into
jg
xor
leave
adc
arpl
adc
cmp
or
mov
inc
scas
icebp
inc
int3
push
cmp
sahf
dec
cmp
or
and
es
loop
or
inc
push
push
fisubs
lock
mov
shrb
sub
mov
mov
push
lcall
jo
add
adc
mov
jns
dec
loopne
and
ja
adc
out
hlt
jl
jno
dec
sbb
pop
cmp
inc
push
and
arpl
mov
and
mov
mov
test
push
push
fnstsw
stos
and
add
push
mov
mov
call
inc
sbb
js
inc
call
and
add
sub
cmpsb
sbb
out
push
add
pop
or
test
inc
aas
dec
mov
xor
pusha
xor
sub
addr16
xor
mov
push
dec
scas
push
push
sbb
data16
or
lods
jne
add
shrl
mov
ja
push
call
das
je
cwtl
add
push
repnz
jbe
xchg
jg
adcb
jns
adc
inc
jmp
add
std
push
and
hlt
mov
divb
iret
cwtl
add
pop
xchg
adc
add
ret
adc
mov
push
es
xor
mov
pop
or
or
adc
test
mov
test
add
push
xchg
test
dec
push
push
roll
or
les
lock
repz
subb
jno
adc
es
adc
adc
ret
and
or
sub
mov
dec
jb
movsl
and
adc
sbb
movsl
mov
push
push
xchg
mov
cmp
inc
inc
pop
mov
fwait
cli
adc
adc
push
dec
or
mov
sub
adc
test
or
mov
xchg
add
rol
test
or
ret
shrl
dec
jb
or
popf
xchg
cwtl
sub
insb
push
bound
cmp
jne
pop
rcll
jno
adc
sbb
jmp
mov
aaa
in
inc
pop
adc
data16
cltd
in
dec
push
xchg
cli
adc
adc
xchg
adc
mov
mov
ret
lea
test
stos
mov
push
or
call
sti
mov
cmp
mov
dec
ficoms
cwtl
arpl
mov
adc
push
inc
cmc
add
and
inc
ret
push
sbb
das
mov
incb
add
push
or
rolb
call
mov
je
or
mov
push
call
dec
xor
mov
loope
je
xor
xor
pop
lods
xor
repnz
or
pop
xor
cmpsl
cmpsl
lret
in
jl
jmp
lds
mov
push
adc
and
pushf
mov
xchg
or
inc
mov
test
je
sub
mov
jbe
add
negb
sub
pop
inc
orb
cs
adc
and
pop
pop
push
xor
fisttpl
mov
mov
stc
cltd
add
jmp
mov
dec
sub
push
mov
xor
inc
xchg
lcall
out
add
shll
aas
mov
adc
and
pop
adc
mov
xchg
jae
or
fsts
hlt
aas
or
xor
lds
js
or
adc
shlb
loop
or
or
add
push
ret
or
enter
orb
mov
das
fimull
adc
xchg
imul
adc
xchg
popa
xchg
xor
adc
sub
or
or
test
jge
adcl
sub
xor
imul
xchg
adc
xchg
jp
dec
mov
inc
pop
adc
lahf
notl
sbb
fs
subb
xor
movsl
inc
push
les
dec
xor
sbb
push
and
pop
out
pop
xor
repnz
popl
push
or
xchg
xor
ds
sti
aam
sub
dec
push
gs
or
es
add
jp
adc
call
dec
xor
xchg
mov
lahf
imul
jnp
xchg
test
aaa
cmp
mov
push
adc
and
insb
lods
shlb
push
pop
imul
pop
pop
mov
mov
loope
adcl
pushf
out
insb
dec
push
movsb
insl
jo
xchg
inc
mov
test
or
mov
call
aas
mov
push
arpl
sub
add
or
add
insl
and
or
xchg
and
leave
adc
sub
xchg
test
aam
dec
or
je
outsb
lock
xor
inc
dec
hlt
push
das
in
lcall
pop
and
pop
sub
pop
add
bound
push
out
add
and
imul
mov
push
popa
push
mov
mov
out
adcb
dec
dec
xor
mov
sub
xchg
outsl
push
fnstenv
push
ficompl
push
fs
dec
dec
inc
xchg
and
cli
adc
adc
mov
jge
push
out
aad
mov
fs
negl
cmp
mov
inc
inc
stos
adc
lds
loop
test
or
xchg
dec
cmp
call
pop
es
in
or
dec
pop
or
enter
mov
call
and
fisttpll
call
clc
cltd
cli
mov
xchg
testl
mov
mov
andb
add
or
sub
loop
add
and
add
jae
sub
shrl
pop
inc
invd
test
and
cmp
pop
hlt
dec
xchg
mov
das
ds
xchg
call
fs
leave
call
mov
stc
push
addb
mov
sub
in
push
sub
inc
push
shrl
std
dec
adc
xor
push
add
je
push
addr16
adc
add
jmp
xchg
aam
add
mov
cmpsb
pop
nop
lcall
jo
ljmp
adc
dec
test
xchg
mov
ret
sbb
adc
loope
add
push
inc
push
and
and
jns
mov
add
sub
xor
mov
inc
and
xchg
xor
add
adc
sbb
sbb
push
push
call
lds
xor
sub
movsb
add
ror
dec
push
je
mov
les
pop
pop
movsb
insb
xor
inc
sub
pop
cmp
pop
inc
xor
push
inc
aas
mov
adc
xchg
jnp
dec
lcall
cmp
push
push
adc
xchg
pop
loope
dec
jmp
mov
aad
pop
pop
jne
bound
xchg
ss
inc
aad
mov
and
cmp
jecxz
adc
ret
int3
add
mov
pop
pop
mov
nop
rolb
mov
movl
push
xor
mov
mov
pusha
scas
or
clc
jo
jg
push
fadd
les
push
mov
popa
add
xchg
mov
sti
and
mov
jg
decb
sub
add
add
test
inc
or
cmp
fcomps
pop
outsl
add
xlat
xchg
pop
lods
nop
out
nop
mov
xchg
nop
sti
dec
scas
ds
iret
jbe
loop
imul
dec
incl
adc
push
sarl
cmp
sub
icebp
push
xchg
clc
enter
sub
dec
add
pop
call
mov
and
push
or
adc
out
daa
fisubrs
adc
xor
sti
dec
push
addl
testl
adc
fidivrs
out
stos
bound
ret
call
mov
and
push
lea
bound
cli
pop
mov
cli
roll
dec
xor
stos
push
call
and
xchg
cmpsl
mov
mov
adc
cli
push
in
mov
dec
aam
repnz
jb
mov
and
stc
jns
or
pop
mov
push
movsl
hlt
iret
and
adc
nop
add
pop
mov
gs
cmp
movsl
test
add
out
add
test
mov
add
mov
sbb
dec
pop
adc
adc
add
or
popa
inc
cmp
push
adc
dec
push
mov
adc
clc
repnz
xchg
pop
movsl
aam
imul
xor
ficompl
sub
pop
inc
or
lds
hlt
movsl
mov
adc
xor
stos
cld
dec
pop
and
adc
xor
sahf
or
push
fs
test
push
cld
adc
ret
cmp
push
sbb
inc
mull
and
cmp
cmp
add
lds
push
mov
push
lret
push
push
loopne
call
push
aam
and
mov
lea
in
enter
xor
pop
call
xor
add
push
and
movsl
mov
pop
push
test
dec
or
lock
add
dec
popa
add
ja
push
outsb
js
mov
add
out
push
mov
cltd
fstps
pushf
pop
push
and
push
sub
cmp
add
and
inc
repnz
mov
or
call
cmpsb
cmp
xchg
pop
jmp
jnp
inc
scas
mov
cli
add
jmp
xchg
std
or
ret
xchg
xchg
add
imul
xor
lods
jne
add
arpl
xchg
sub
mov
std
push
adc
cld
test
add
cmp
test
adc
insl
push
pop
test
divl
inc
pop
mov
xchg
aad
mov
inc
pop
jno
fdiv
or
jno
in
enter
cmc
mov
mov
test
or
call
or
mov
adc
jb
jmp
inc
mov
jg
mov
sub
cmc
jmp
pop
and
arpl
and
adc
jmp
aas
add
and
xchg
cli
xchg
adc
mov
adc
cmc
inc
dec
fsubl
or
pushf
xchg
jecxz
and
cmc
adc
frstor
mov
xor
adc
adc
xchg
xor
repnz
adc
cvtpi2ps
cmpsb
pop
out
sbb
sub
out
cltd
jmp
adc
add
pop
test
mov
cmp
imul
add
fpatan
xor
dec
push
jmp
or
sub
mov
movsb
and
or
pushf
repz
hlt
movsb
jno
mov
or
mov
sti
mov
out
cmpsb
into
push
push
adc
or
xchg
addr16
jmp
mov
mov
clts
or
das
iret
enter
les
mov
daa
jl
adc
sub
jg
sarb
pop
push
inc
cli
cmpsb
and
out
add
rclb
mov
adc
sbb
cmp
inc
xor
pop
add
je
mov
adc
adc
adc
xchg
lahf
mov
mov
push
inc
adc
icebp
xor
push
jne
mov
ficompl
int3
mov
push
cwtl
aam
lock
push
jmp
cwtl
outsb
sub
popa
out
popa
sub
insb
mov
push
push
nop
dec
cmp
call
inc
lret
cld
xor
jmp
sbb
jl
mov
fcmove
pop
or
push
jno
sbb
push
dec
ret
push
push
mov
mov
das
cmp
jae
sbb
cmpsl
push
jae
dec
icebp
test
in
push
xlat
in
xchg
sub
mov
mov
movsb
scas
jecxz
and
mov
das
or
pushf
fisttpll
xchg
fdivr
fcoml
lret
in
cmc
jmp
jo
adc
dec
mov
xor
dec
adc
adc
sub
jbe
jp
leave
and
icebp
shll
xchg
or
or
xchg
xchg
rcpps
dec
gs
and
push
in
sub
xchg
rorl
test
ret
stos
cmpsl
sub
add
out
in
push
iret
jmp
xor
call
add
adc
jns
pop
jmp
pop
xchg
jl
cli
inc
push
lods
mov
adc
sbb
out
xchg
mov
scas
cmpsl
inc
dec
decb
push
push
mov
inc
add
mov
dec
jl
testl
pop
ret
pop
iret
nop
in
test
mov
mov
and
inc
xchg
movsl
pop
popf
jo
shr
inc
mov
xchg
sbb
push
scas
cmp
pop
out
adc
mov
andl
pop
xchg
sbb
xchg
filds
sub
mov
icebp
loop
inc
test
addr16
popf
inc
fs
stos
repnz
test
lea
outsb
jle
sahf
cltd
lret
int
fistpll
cltd
les
and
inc
jmp
xchg
clc
pushf
xchg
les
push
jmp
jg
add
xchg
add
ret
mov
push
xchg
adc
jg
clc
ljmp
dec
adc
je
loopne
or
add
and
adc
jb
jl
add
enter
les
mov
arpl
outsl
dec
ljmp
sbb
popa
mov
adc
pushf
stos
xchg
imul
lds
xor
out
or
adc
mov
mov
xchg
jne
adc
in
mov
jmp
sub
iret
sub
sub
iret
dec
movsb
popa
cmp
push
inc
pop
mov
add
cmp
adc
jmp
inc
xor
call
sti
inc
sbb
adc
add
mov
je
jmp
mov
push
pop
lds
xchg
pcmpeqw
out
int
cmp
call
inc
pop
and
cmp
lret
pop
hlt
std
xchg
popa
mov
nop
sbb
mov
inc
inc
or
push
bound
sub
cli
lret
dec
cmp
lods
nop
push
rorl
out
dec
insb
fstl
push
faddl
add
mov
test
xor
inc
mov
cmpsl
punpckhbw
mov
mov
sub
pop
xchg
cmp
jmp
dec
aaa
pop
xor
insb
dec
lcall
out
movsb
adc
inc
movl
nop
sub
mov
int3
shlb
lds
inc
call
pop
mov
or
dec
pop
jle
pop
inc
or
notb
cmpl
or
mov
stc
push
or
cli
loop
scas
adc
ljmp
cwtl
adc
jne
mov
call
mov
addb
cs
push
stc
iret
out
add
shl
ljmp
cmpsl
clc
pop
das
or
outsl
and
or
loope
negb
shl
adc
scas
pushf
das
mov
adc
out
push
push
mov
sbb
pop
insb
mov
inc
sti
lret
fwait
aad
sbb
movl
xchg
and
xor
xchg
pop
lea
mov
ret
push
das
int
dec
jo
sbb
adc
fs
out
dec
sbb
popf
and
ret
mov
cmc
loop
and
or
fistps
sub
or
mov
insb
fsubs
ficomps
jmp
repnz
adc
mov
sahf
dec
mov
xchg
and
in
cmpsl
jle
jmp
jp
jp
and
jg
dec
inc
sbb
out
sub
cmp
add
dec
in
rcr
loop
inc
sbb
and
xchg
pop
outsb
lock
dec
sbb
jb
mov
sub
je
les
dec
jae
xchg
insb
lds
cwtl
stos
stos
mov
push
out
adc
movsl
fldl
cmp
mov
xchg
xor
pop
add
out
adc
sbb
push
repnz
mov
mov
add
mov
adc
ret
pop
pop
mov
dec
sub
push
push
les
mov
sub
mov
out
adc
and
jmp
jo
jecxz
insb
pushf
xchg
adc
sub
repnz
inc
jge
in
fbld
in
fs
adc
inc
out
je
test
fstp
lret
push
cmp
dec
jne
and
cli
sub
cmp
lds
jno
cli
mov
test
push
jne
mov
insb
push
insb
adc
in
jne
dec
mov
inc
xor
xchg
dec
out
mov
push
inc
cmp
sahf
mov
popf
nop
jno
xor
pop
lods
mov
push
loop
popf
sbb
cmpsb
push
pop
into
dec
fcoml
add
call
out
repz
xchg
xchg
ljmp
xchg
sbb
cmpsb
dec
fmull
je
movsb
int3
ljmp
ds
pop
les
dec
sbb
les
xor
movb
cwtl
stos
push
call
push
push
je
pop
es
pop
ret
and
pop
nop
cli
movsb
jo
sub
sub
imulb
mov
insb
rolb
dec
scas
inc
xchg
sbb
jmp
mov
inc
or
and
add
dec
ficoms
lahf
sbb
addr16
and
add
mov
and
xchg
push
push
mov
ds
dec
addr16
mov
xor
jo
push
push
pushf
sub
fsubrs
dec
or
or
rcr
mov
and
fnstcw
inc
orl
jl
pop
leave
pop
les
dec
adc
mov
call
ror
dec
adc
xchg
cmpsl
cmp
and
push
lds
sbb
mov
sti
or
lret
imul
dec
or
lahf
and
xor
mov
in
je,pn
int3
mov
adc
popf
out
inc
inc
adc
inc
mov
push
xor
mov
fldl
and
mov
and
sbb
pop
enter
dec
xor
dec
push
cmp
inc
xor
xor
push
xchg
jl
or
push
clc
mov
call
cli
xor
popf
or
notb
ficoms
aas
ret
ret
in
stos
jecxz
mov
xor
mov
fstpt
jmp
pop
rcl
add
sbb
cld
frstor
xor
push
push
outsl
fdivrl
sbb
ret
scas
push
stos
mov
scas
adc
mov
xor
add
sti
add
push
sbb
pop
pop
cmpsl
adc
adc
aam
out
in
jmp
fldl
push
mov
push
rcll
inc
fisttpl
push
push
addr16
icebp
inc
in
sub
jo
inc
push
fcoms
test
push
sbb
or
das
mov
test
nop
imul
xor
cmp
sbb
dec
dec
xchg
mov
aad
cmp
push
and
ficoml
mov
xchg
push
adc
mov
inc
or
sub
xchg
iret
test
adc
fbld
ret
sbb
jmp
nop
sub
adc
outsl
filds
push
imul
movsb
and
xor
clc
xchg
and
xchg
mov
pop
ret
xchg
and
dec
xchg
pop
dec
dec
add
sbb
dec
dec
sub
mov
fistpl
pop
mov
or
ror
je
adc
push
add
push
scas
in
ljmp
andl
fdivr
dec
popf
pop
lods
test
push
pop
inc
pop
aas
les
and
sarb
stos
jno
pop
call
add
or
add
fbstp
xor
mov
test
popf
lea
dec
sub
adc
mov
adc
loope
cmpsl
dec
sbb
dec
insb
dec
je
or
adc
insl
ror
inc
push
aad
pop
push
mov
add
jo
jmp
xlat
inc
fcmovbe
pop
movsb
cmp
xchg
adcb
adc
add
cmc
rolb
jl
xchg
sbb
js
mov
stos
test
lret
out
ret
adc
out
rorl
or
repnz
scas
mov
mov
inc
jno
or
xlat
fs
pop
xchg
sbb
push
bound
insb
push
inc
push
pop
lods
mov
xor
daa
movsb
push
push
add
sbb
lret
add
mov
dec
icebp
mov
and
inc
shrl
popf
mov
js
lret
sahf
xorb
lret
call
mov
cmp
mull
adc
xchg
popf
pop
sub
movsb
fisubs
pop
xor
or
mov
mov
and
dec
fs
mov
jns
test
ret
fsubrs
mov
insb
push
aam
jb
mov
push
mov
or
pushf
pusha
daa
xchg
cmpb
mov
mov
nop
adc
cmp
xor
cli
je
dec
and
push
push
adc
or
sarb
ds
mov
lock
sahf
loope
ljmp
mov
aam
pusha
bound
jl
jo
pushf
inc
iret
out
adc
push
xchg
dec
jge
test
fidivrl
xor
dec
push
mov
iret
dec
daa
dec
or
or
push
mov
mov
je
lods
mov
sbb
std
dec
test
xlat
lods
call
imul
pop
fdivrl
inc
and
inc
fmuls
jne
mov
and
adc
int
push
fbstp
dec
push
and
ja
in
add
jl
sbb
dec
and
pop
pop
cmpsl
and
jne
add
jle
jo
push
jmp
push
fsts
jne
loopne
shl
adc
xchg
sbb
rcrb
and
lods
int3
nop
sbb
stos
sbb
insl
mov
sbb
fldt
inc
shll
push
inc
sbb
jo
and
gs
jb
push
sbb
aas
scas
adc
sbb
lahf
repz
out
push
lret
sub
shrl
leave
jo
inc
xchg
or
add
mov
mov
cmpsb
sbb
mov
fistpl
or
sahf
inc
sarl
or
xchg
lods
ret
and
mov
sub
push
sbb
xchg
mov
inc
cmp
sub
mov
arpl
or
or
das
push
sub
cs
aas
jno
xchg
fldenv
repz
xor
pop
dec
cmp
pop
push
lret
cmp
or
sbb
ret
xor
sub
adc
xor
pop
lock
pusha
inc
fwait
rcrl
sub
out
sti
dec
inc
gs
movsb
cmp
test
mov
inc
sbb
xor
mov
xchg
pop
and
xor
enter
scas
adc
into
les
lret
call
sub
int
rorl
clc
add
inc
pusha
test
iret
sub
fadds
clc
mov
jl
out
add
xchg
das
shl
int
inc
or
mov
je
decl
cltd
shlb
addr16
push
shll
in
mov
sub
out
test
dec
shrb
push
test
push
leave
in
xchg
loope
lds
ds
fnstsw
cmp
pusha
adc
in
push
cmp
in
inc
push
xorb
adc
incb
xor
dec
stos
mov
sub
icebp
mov
add
xchg
cmp
push
movb
adc
jb
cltd
adc
add
sahf
add
add
pop
cmp
and
fcmove
ds
les
and
mov
cli
push
imul
test
decb
push
mov
aaa
setne
mov
and
mov
mov
xchg
add
xlat
inc
lds
sbb
push
adcb
xor
aas
xor
push
enter
movsl
push
in
test
cli
mov
sbb
stos
xchg
jno
adc
nop
loopne
dec
push
shlb
and
adc
dec
std
dec
mov
adc
test
jbe
or
dec
push
add
movsl
jg
je
adcl
add
jge
inc
les
mov
mov
mov
nop
ret
xor
xor
push
sbb
insl
sub
xchg
out
lret
iret
pop
fs
mov
sub
inc
inc
pop
push
nop
push
mov
mov
call
loop
and
and
adc
adc
ret
fldl
adc
sub
movsl
pop
subb
notb
int
inc
arpl
call
cs
inc
xchg
xor
js
and
pop
jg
inc
in
movsl
incb
or
add
inc
gs
inc
mov
inc
mov
push
push
cmpsb
push
xchg
push
xor
xlat
mov
loopne
cmp
jne
mov
stos
or
aam
inc
lds
or
ss
cmpsb
cli
inc
add
leave
mov
ljmp
mov
pop
sti
mov
push
int
test
and
hlt
adc
ret
mov
inc
leave
stc
and
ficoms
or
lret
call
js
imul
leave
aas
test
mov
into
mov
mov
add
push
test
lds
inc
mov
fnstsw
fistpll
loope,pn
leave
pop
xor
stos
adc
leave
out
js
enter
mov
adc
pop
mov
pop
scas
adc
adc
mov
into
mov
push
repnz
xchg
rcl
mov
pop
or
fcomps
test
mov
lock
test
ret
xchg
jg
xchg
pusha
and
enter
xor
leave
jg
inc
test
xor
loop
pop
jecxz
insb
xchg
and
decb
inc
mov
iret
cmp
and
scas
cmovnp
jo
sub
dec
push
sbb
xor
push
inc
cmp
or
jle
xchg
sbb
aad
and
scas
xchg
and
adc
nop
mov
jne
push
ja
in
jo
dec
call
sbb
jmp
call
cmp
movb
inc
and
xor
adc
or
sbb
iret
push
aam
dec
jl
ss
dec
add
in
adc
mov
mul
test
fs
popa
or
mov
ret
mov
mov
lds
xchg
ret
decb
mov
std
add
in
jecxz
in
xor
les
sbb
icebp
push
adc
aad
arpl
les
mov
cmp
inc
les
sub
insl
mov
lret
inc
mov
in
mov
mov
inc
jb
sub
push
and
mov
push
mov
push
mov
and
bound
xor
rorb
stc
mov
mov
mov
pop
and
test
in
mov
ret
aas
clc
dec
mov
pop
scas
mov
mov
pop
mov
push
mov
dec
mov
push
xor
or
mov
mov
push
and
mov
mov
into
call
xor
mov
mov
push
jl
bound
xor
mov
mov
mov
rolb
mov
pop
and
test
push
mov
ret
aas
clc
int
xchg
lods
xchg
popf
je
pop
add
mov
xor
ret
adc
cld
jne
and
jne
mov
pop
jl
mov
mov
push
mov
adc
addb
pop
inc
js
adc
bound
push
in
ds
insl
out
adc
mov
shrl
shrl
adc
test
mov
jne
xchg
dec
jle
inc
jmp
and
or
pop
adc
dec
adc
inc
aam
mov
push
cld
pop
or
iret
ja
loopne
adcl
pop
sbb
sbb
ficoml
adc
sbb
lret
loope
call
adc
call
gs
dec
mov
adc
jo
call
cld
xchg
adcl
lret
adc
inc
nop
or
ljmp
sub
add
call
cwtl
adc
call
pop
fmull
mov
rorb
gs
push
lahf
adc
or
lods
adc
inc
add
or
dec
adc
call
mov
sbb
pusha
sbb
or
call
jo
call
dec
adc
adc
loop
test
cmp
sbb
push
and
shlb
ret
call
jo
xchg
adc
add
call
sbb
add
call
add
add
scas
inc
dec
ds
xor
dec
cmpsl
clc
int3
movsl
add
and
inc
adc
adc
add
into
add
pop
jmp
add
call
add
adc
pop
jno
sbb
sub
mov
icebp
cltd
jge
add
cli
stos
movsl
push
nop
lea
adc
xor
loopne
dec
shl
and
and
mov
ds
test
xor
adc
outsb
movsl
sahf
push
inc
adc
dec
mov
repnz
in
lods
addr16
nop
adc
inc
test
mov
cmp
cltd
aam
adc
sub
inc
xor
enter
stos
push
xor
adc
pop
test
outsb
cmpsb
je
adc
cmp
cmp
adc
sti
test
mov
adc
andl
in
mov
movsb
call
cmp
adc
pop
movsb
mov
add
fs
test
jg
adc
mov
sahf
lahf
inc
adc
mov
mov
cmpsl
fistpll
add
test
or
adc
mov
adc
andb
dec
movsl
cmp
andb
lahf
jno
add
aas
cltd
shll
xor
sbb
repz
gs
rclb
sub
test
mov
loope
aad
ret
pop
pop
data16
inc
cmp
out
iret
push
xor
and
and
mov
and
jecxz
les
int
jmp
fucomi
jae
dec
out
iret
divb
and
dec
and
iret
ss
and
dec
and
iret
jbe
and
mov
dec
and
iret
mov
add
mov
sahf
xchg
cmc
push
imulb
and
push
out
and
ret
and
push
out
and
mov
out
and
andl
push
out
and
jnp
dec
cli
iret
push
xor
and
dec
and
iret
push
xor
and
popa
mov
dec
and
iret
mov
sbb
mov
dec
and
iret
negb
dec
sti
push
adc
test
mov
pop
fidivrs
inc
call
push
xor
and
dec
and
xchg
xor
and
dec
and
xor
and
dec
and
iret
push
xor
and
dec
and
iret
push
xor
and
movsb
adc
inc
add
rcl
movsl
and
out
lcall
sti
jno
das
cli
cmp
jmp
and
mov
das
cli
cmp
lret
shlb
jmp
das
cli
cmp
stos
shlb
jmp
das
cli
cmp
mov
and
mov
das
sti
cmp
imul
pushl
das
sti
cmp
dec
shlb
pushl
cwtl
mov
xchg
call
fwait
test
cmpsl
and
in
mov
enter
push
xor
push
movsl
or
dec
cmpsb
in
push
scas
xchg
add
sbb
inc
xchg
lcall
xchg
jns
and
idivb
jae
cld
push
lret
mov
add
cmp
jecxz
adc
adc
rol
adc
cltd
mov
mov
pop
mov
fdiv
lcall
aam
jo
sub
ret
shrb
and
add
adc
fs
ss
adc
cwtl
adc
mov
es
rolb
ljmp
cwtl
and
cwtl
push
adc
repz
cmp
sti
push
adc
cwtl
mov
or
vpmacsdql
push
jge
vpmacsdql
fcom
push
pop
and
xchg
ret
cmp
enter
push
mov
pop
fs
jl
inc
xchg
in
jge
pop
mov
jnp
add
enter
cmpsb
mov
inc
push
xchg
addr16
stc
xchg
lock
adc
adc
aaa
es
and
xchg
push
lock
sbb
pop
and
call
xlat
xchg
jg
inc
adc
clc
push
pop
inc
jmp
mov
lcall
cli
xor
xchg
stos
mov
jne
lcall
pop
sti
daa
push
test
faddp
adc
lcall
sbb
xchg
ljmp
mov
or
sbb
mov
movsl
mov
xchg
fdivp
daa
jg
adc
and
cmpsl
popa
inc
cltd
dec
mov
jo
xchg
xchg
rorb
mov
test
dec
or
xor
insl
ret
dec
lock
push
jge
lock
cwtl
vpshab
dec
test
scas
enter
add
loope
xchg
test
test
xchg
test
sub
loope
xchg
sbb
adcl
outsb
out
lods
test
call
sbb
mov
cmp
inc
mov
xchg
jmp
inc
adc
lds
push
loop
xchg
outsw
push
movsb
dec
pushf
cmp
sub
xchg
and
dec
mov
fsubl
in
or
or
mov
sub
vpsubsb
data16
sub
test
xor
add
dec
jb
sbb
lds
ja
enter
jl
xchg
xchg
sub
mov
jb
push
fcomip
adc
xor
movb
cmc
inc
rcrb
mov
test
mov
lea
cmp
xlat
es
mov
movsb
xor
aas
enter
pushf
in
push
mov
dec
inc
fwait
and
inc
or
and
mov
pop
iret
inc
xchg
inc
cmp
popf
sbb
lahf
push
and
mov
add
in
adc
cltd
mov
mov
fs
cmp
xchg
jne
sub
or
ds
mov
adc
scas
add
pop
mov
fcmovb
cmc
cli
sub
imul
push
sti
fildl
cli
divb
mov
test
inc
pop
sub
or
imul
push
fldcw
repnz
pushf
fcoms
les
imul
es
mov
inc
inc
sbb
push
push
andb
xchg
inc
and
push
cmp
enter
or
call
in
notb
push
les
inc
hlt
xchg
and
sbb
add
shrl
fmuls
push
mov
dec
add
mov
out
outsb
xor
and
pop
mov
jge
sbb
push
add
mov
sbb
sbb
push
les
mov
and
push
and
cli
sbb
cltd
int
adc
mov
int
jmp
adc
push
push
call
lret
lds
sub
cmpsl
jg
out
call
xor
cmp
adc
test
push
aad
outsl
xor
shl
hlt
and
cltd
aas
movapd
stos
popa
or
mov
mov
das
mov
not
fucomp
add
lret
mov
pop
xchg
cmpsl
leave
jnp
lods
mov
dec
iret
mov
sub
xchg
jne
test
in
adc
leave
das
cwtl
sbb
fisubs
xchg
jp
stc
pop
pop
mov
xchg
outsb
add
lahf
ret
hlt
xchg
mov
xchg
mov
imul
mov
mov
scas
clc
movsl
inc
xor
sub
inc
or
or
les
fsubs
push
ljmp
jb
pop
jge
sbb
or
in
sbb
jns
pop
sub
loop
mov
push
aas
nop
sub
cwtl
xor
mov
mov
xchg
fildll
mov
and
push
testb
bound
xor
les
xchg
cs
loopne
fiadds
mov
loopne
ret
mov
test
test
mov
call
jle
dec
and
pop
test
clc
rcrb
mov
and
xchg
repnz
pop
inc
scas
test
xchg
push
shrb
orl
test
jg
xor
lock
roll
mov
or
adc
mov
inc
mov
out
mov
movsb
mov
pusha
lds
cmp
nop
shr
loopne
sbb
sub
and
adc
fwait
xor
xchg
xchg
push
adc
roll
mov
test
ja
testl
cmp
nop
inc
stos
test
popf
out
mov
sbbb
outsb
lods
mov
call
ds
adc
rorb
xchg
in
rolb
call
adc
mov
cmp
popf
jnp
les
xor
or
inc
xor
mov
mov
pop
cs
inc
mov
add
iret
xor
int3
je
sbb
push
repz
push
lahf
int3
pop
or
jp
xchg
sub
xchg
mov
pop
fsubrl
or
and
push
test
mov
and
icebp
loopne
jle
pop
and
xchg
sub
sub
xchg
pop
cld
mull
inc
test
mov
lods
mov
xchg
rcll
decb
jo
sbb
pop
pop
ja
arpl
fnsave
pop
dec
pop
pop
jae
or
call
test
cmpl
mov
mov
mov
mov
or
mov
mov
mov
push
xchg
sbb
or
jo
mov
mov
fcompl
and
or
leave
mov
outsl
std
mov
std
mov
mov
clc
fs
addr16
pop
cmp
loopne
jp
pop
xor
push
cmp
adc
push
mov
cmp
dec
or
mov
and
pusha
out
sbb
lock
seto
push
call
movsl
dec
sbb
adc
faddl
in
push
lea
cmpl
add
movsb
roll
xor
dec
jg
pop
sbb
call
xor
push
outsb
lock
mov
sub
fcmovnu
sbb
dec
pop
jg
bswap
call
inc
cld
decl
pushf
push
pop
push
push
adc
sbb
xor
xor
add
xchg
std
andb
push
and
or
jmp
adc
mov
jp
sbb
mov
stos
adc
xor
rol
and
mov
nop
test
xor
pop
xchg
jge
addr16
mov
stos
adc
sti
test
out
xor
push
xor
and
sub
call
inc
adc
test
test
jne
cmp
clc
dec
adc
pop
out
in
inc
dec
mov
add
jne
push
cwtl
and
es
or
pusha
push
adc
dec
and
or
lea
es
xor
xor
jge
jns
enter
scas
jle
mov
jle
mov
repnz
cli
jge
loop,pn
bound
cmp
and
fwait
pop
daa
adc
hlt
fstpt
movb
or
cmp
mov
getsec
mov
cmp
pop
push
test
lret
or
add
popa
and
xchg
and
mov
adc
in
add
movsl
dec
inc
pop
fisttpll
mov
mov
dec
push
popa
pop
insb
cmp
mov
xlat
mov
sub
mov
dec
pop
xor
xchg
mov
lock
cmp
adc
jne
xor
sub
fs
sahf
cwtl
or
daa
xor
je
push
jg
dec
xlat
lods
pushf
fs
mov
pop
push
int3
in
sti
xor
cmp
push
push
out
push
inc
cmp
pop
jne
xchg
fsts
dec
cmp
loop
mov
push
out
and
test
loop
in
push
leave
push
pusha
xor
fcmovnu
daa
les
dec
push
fcomip
popa
push
and
mov
pop
mov
adc
adc
adc
iret
icebp
adc
or
or
in
xor
mov
cmp
enter
sbb
adc
and
inc
push
pop
push
out
sub
ret
xchg
cmp
mov
cmp
xchg
lods
sbb
repz
xchg
dec
sbb
sub
or
sub
sbb
enter
or
push
neg
ret
xor
rcrb
add
mov
cwtl
outsb
inc
mov
mov
xchg
push
les
sub
pop
push
ret
nop
repnz
leave
push
or
jle
js
mov
enter
or
orb
add
add
sbb
adc
call
add
add
aaa
cwtl
arpl
mov
out
repz
lds
sbb
lcall
cs
repz
push
mov
sbb
push
flds
sti
js
sub
add
jmp
clc
mov
call
fnstcw
dec
jmp
add
mov
inc
jle
xor
jge
into
or
or
mov
daa
hlt
movsl
dec
xlat
jno
add
mov
repz
xchg
xchg
add
add
enter
loope
jge
xchg
outsl
orl
in
mov
adc
or
dec
cld
cmp
push
out
xor
lock
push
inc
push
je
and
ret
pop
stc
test
movsl
jge
out
pop
add
push
jne
fidivl
lret
pop
adc
push
nop
xchg
cli
mov
out
cmp
xlat
imul
mov
cmp
test
add
stos
mov
shll
xor
in
cmp
mov
push
adc
and
jne
push
pop
pusha
sbb
test
xlat
mov
lret
repnz
cmp
in
or
outsb
aaa
jge
pushl
prefetchnta
nop
sub
and
std
lret
or
call
sbb
xor
adc
sub
jns
sub
int
hlt
fistl
call
sbb
adcl
or
call
into
push
fstpl
notl
push
sbb
push
adc
and
into
inc
or
shl
adc
adc
and
and
or
jns
dec
jge
clc
and
mov
cmp
lea
fisubrl
lahf
rolb
ljmp
push
ret
adc
push
mov
call
fcom
js
cmpsl
adc
push
lcall
cmpsl
adc
fcoml
mov
dec
fsubrl
sub
dec
ja
bswap
mov
inc
mov
popf
fsubrp
push
cmp
dec
or
pop
push
push
mov
push
sahf
push
sti
sbb
daa
sbbl
mov
and
mov
sub
mov
xchg
inc
sbbl
test
into
inc
fadds
add
daa
sbb
cmp
pop
push
sub
cmp
sbb
jne
dec
test
mov
jno
xchg
push
or
les
pop
mov
ret
adc
bound
addl
xor
mov
inc
rcrb
mov
mov
push
cltd
in
fcmovnb
adc
sbb
fsubl
mov
inc
ja
lock
pop
das
fnstsw
cltd
idivl
ret
loopne
pop
pop
loopne
xchg
adc
jno
sbbl
and
adc
ret
int
dec
pop
aas
in
xor
notb
shlb
inc
cmpb
int
jnp
jb
dec
je
or
pop
out
xchg
and
adc
inc
orl
cmp
jge
cmp
fmul
pop
iret
xor
add
jne
push
push
mov
inc
or
out
call
mov
ja
inc
mov
inc
rcrl
aam
stos
push
jne
pusha
sti
pop
bound
adc
mull
adc
jmp
ret
push
std
out
xor
xor
adc
iret
mov
orb
shll
push
jg
mov
push
push
nop
add
out
cmpsb
pop
vhsubps
pushl
adc
push
and
adcl
adc
inc
sbb
pop
rcrb
sbb
and
subl
adc
mov
imul
sub
mov
xchg
insb
jl
mov
fwait
sub
lea
enter
sub
add
jo
add
push
fdivl
adc
aad
movsb
sub
jp
cli
and
xor
subb
mov
or
dec
enter
cltd
adc
je
and
push
push
mov
pop
sti
push
gs
into
jmp
daa
jmp
stc
push
push
popf
out
adc
mov
das
push
add
je
dec
inc
shlb
pop
ja
movsl
inc
and
xchg
jl
push
push
mov
or
xorl
mov
adc
sbb
fs
outsl
jmp
mov
jmp
pop
sbb
pop
mov
dec
imul
cmc
mov
adc
mov
inc
jge
and
dec
pop
pop
dec
arpl
xchg
pop
shlb
jmp
sub
ja
xor
idivl
adc
mov
pushl
or
rcrb
inc
sbb
push
lret
or
lahf
or
pop
adc
adc
mov
push
ret
add
and
fisttpll
jmp
enter
cltd
xchg
jg
adc
mov
mov
js
xor
mov
cmpl
lea
sbb
sbb
loopne
push
out
cmp
lods
add
lea
push
shl
sub
mov
into
and
aad
mov
rcll
fwait
cmp
xchg
daa
and
adc
mov
sbb
or
or
pop
pop
pop
test
adc
pop
in
rol
scas
adc
pop
stos
movsl
mov
movl
or
into
dec
fisttps
leave
test
mov
shlb
in
ja
jmp
mov
add
pop
mov
popa
xor
movsb
or
mov
mov
hlt
or
adc
inc
test
mov
mov
cmp
mov
movsb
xor
cmpsb
inc
and
das
xchg
lock
adc
andl
movsl
bound
mov
pop
cmp
jle
cld
gs
xor
ret
jne
movsb
sbb
and
mov
add
mov
adc
popa
call
mov
stos
or
je
add
jmp
js
or
mov
push
push
push
push
popf
lcall
fstl
push
pusha
rorl
movsl
fnstcw
sbb
sqrtps
push
ret
movl
mov
adc
or
cmp
call
ret
dec
pop
sarl
rorl
subb
lods
lock
sti
xchg
cmp
mov
xchg
dec
movsb
or
fistps
xchg
adc
and
mov
xchg
scas
les
jbe
jecxz
adc
call
push
es
arpl
jmp
movsb
adcl
xchg
xor
push
dec
sbb
sub
leave
pop
sbb
mov
mov
push
lret
push
and
adc
or
orb
jge
call
cltd
xor
lea
and
mov
cmpsb
loope
mov
sbb
cld
jl
ss
push
leave
or
test
xchg
lret
mov
push
cmc
lock
xchg
scas
xlat
stc
xor
jne
jl
cmpsb
rcrb
je
loope
pop
mov
inc
addb
push
xor
and
inc
es
es
xchg
nop
ret
push
push
sbb
arpl
adc
dec
mov
loopne
dec
gs
dec
dec
pop
das
je
jb
sub
gs
aad
insl
adc
iret
lea
push
movl
lock
mov
adc
or
xchg
jl
notb
fimull
leave
pop
pop
jns
movsb
jno
ret
jne
mov
lds
xor
lods
and
fs
mov
movsb
or
fiaddl
sub
dec
jmp
jnp
lock
sub
push
push
push
dec
add
and
pushl
ret
adc
xorl
xor
jb
push
xorl
cmp
test
out
repz
pop
mov
in
pop
nop
or
les
fimuls
in
push
repnz
jl
mov
inc
or
inc
sbb
or
push
or
fs
jmp
movsb
adc
pop
mov
nop
pop
push
mov
int3
jmp
je
data16
rorl
mov
xchg
addr16
push
addr16
pop
xchg
pop
test
mov
cli
decl
xchg
rorb
xor
sbb
lods
addb
dec
repz
fwait
jbe
mov
add
push
cmovg
imul
xchg
xor
sbb
les
repz
xchg
xchg
jle
and
xchg
addr16
pop
xor
pop
fdivrp
dec
imul
xor
ret
mov
rcrl
lret
cli
popa
jo
push
dec
dec
jnp
ljmp
pusha
icebp
je
mov
push
aad
aas
call
lahf
adc
test
in
sbb
leave
dec
pop
leave
push
push
or
lcall
jne
inc
dec
ja
insb
outsl
test
cmp
je
mov
and
xor
add
adc
xor
xchg
shlb
movsl
movsl
sbb
mov
mov
mov
push
test
hlt
cmp
mov
jne
rcr
das
jg
push
mov
fisttpl
mov
imul
mov
shr
push
push
stos
out
adc
lea
mov
xor
cmp
shll
push
adc
sbb
testb
mov
mov
mov
clc
stc
je
pop
cmp
mov
dec
mov
mov
dec
adc
cmp
mov
dec
add
in
sbb
sbb
lock
inc
inc
lea
cmp
jl
mov
ret
sub
dec
insb
jecxz
inc
adc
mov
xchg
push
call
push
ret
adc
cmpb
push
repz
jmp
mov
xchg
notl
stos
scas
pop
imul
popf
arpl
jmp
xor
mov
xchg
adc
dec
mov
inc
insb
notl
pop
dec
pusha
call
jae
jmp
loopne
test
shr
dec
xor
xchg
cmpsl
pop
je
cmp
mul
or
leave
cs
xor
or
push
pop
ret
adc
fisubrs
gs
int3
sbb
xchg
or
pop
sub
out
setne
and
push
js
sub
mov
ja
push
push
mov
in
inc
out
mov
in
mov
es
push
pop
data16
popa
ja
jns
cmp
test
pop
ss
mov
nop
mov
lods
push
popa
mov
push
adc
mov
test
adc
inc
je
mov
lds
add
push
push
das
xchg
hlt
push
repnz
mov
cmp
pop
mov
test
test
push
rclb
je
jae
and
std
adc
add
jmp
in
push
mov
push
push
pusha
out
push
lret
sbb
xchg
fsubrs
inc
stc
jg
ljmp
les
inc
and
mov
dec
shlb
inc
shlb
cmpsb
xchg
dec
or
jmp
dec
or
rcrb
cmp
adcl
push
neg
ljmp
xchg
sub
mov
adc
xchg
push
in
push
inc
pop
jmp
push
mov
mov
sub
scas
pop
sub
out
and
push
jae
push
cmp
or
adc
pop
es
and
pop
pushf
in
and
mov
mov
inc
cvtps2pi
mov
popf
aaa
push
mov
out
inc
cltd
sub
jo
and
dec
popf
jg
divb
mov
cmpsb
je
icebp
sbb
and
cmp
and
out
ljmp
in
mov
lcall
xor
pop
leave
cli
rorb
inc
sbb
jmp
ljmp
pop
mov
xor
push
add
fs
mov
push
jle
inc
aas
xchg
in
fisttpll
and
add
ljmp
icebp
dec
loope
jl
sbb
lods
jg
dec
pop
or
adc
cmp
mov
xlat
in
sub
adc
cmpsb
das
dec
push
xchg
aas
push
and
movsb
mov
xor
or
jbe
je
rcl
aaa
enter
popa
xchg
loopne
jo
mov
pop
jmp
mov
lahf
sbb
cmpb
adc
dec
dec
scas
das
adc
clc
pop
push
jle,pn
leave
sbb
inc
push
lea
imul
pop
pop
push
push
shrl
inc
adc
and
mov
mov
xchg
pop
add
jmp
shrb
enter
sbb
pop
push
je
sbb
test
int
enter
cld
ffree
lock
andb
fcomps
jns
sub
jmp
cmp
pop
mov
cmp
sbb
fwait
sub
adc
addr16
lret
pop
cmp
fldenv
test
pop
repz
mov
lahf
ret
pusha
xlat
or
sbb
push
push
cmp
fildl
decl
pop
or
jae
add
jle
mov
fnstsw
aaa
cmp
dec
stc
mov
push
testb
dec
je
jp
pop
inc
cmp
hlt
das
mov
add
mov
and
into
and
lcall
dec
mov
jl
stos
jmp
sub
repnz
mov
pop
aaa
and
rclb
inc
inc
ret
push
stos
ret
dec
insb
inc
or
je
shlb
cmp
inc
test
test
stos
imul
pop
lret
push
sarl
stos
inc
mov
mov
loop
lods
mov
sub
and
xchg
addl
fsubrs
mov
popa
loop
or
je
push
or
jne
sbb
xchg
or
xchg
add
cmp
xor
int
and
cmp
jl
push
addb
add
or
int3
nop
push
lcall
fldt
popa
ds
jmp
add
push
sbb
push
xchg
dec
fcmovnbe
push
push
or
push
or
jb
clc
mov
shlb
loope
aaa
cmpsb
xor
push
xlat
xchg
mov
add
or
cmp
or
nop
inc
loop
adc
adc
sbb
xor
sahf
loope
push
and
les
es
adc
pop
rcrl
push
test
sti
das
mov
pop
fisttpll
mov
rclb
shlb
pop
push
dec
and
sbb
pop
stc
inc
cmp
add
adc
push
mov
cs
out
popa
clc
movsb
push
add
movsl
or
sub
adc
and
mov
outsl
cmp
ud2
mov
and
add
orb
adc
jnp
test
das
cmp
dec
xor
cltd
mov
cmp
dec
adc
sub
ds
lea
pop
adc
push
pop
mov
divb
mov
icebp
in
sub
ss
cmp
xlat
mov
sub
daa
mov
and
push
add
and
stos
xor
inc
adc
fistl
add
mov
rcrb
sbb
add
add
push
adc
jo
loopne
jge
dec
sub
and
mov
mov
sub
adc
push
dec
sti
mov
popa
sub
or
cmp
jne
mov
lods
mov
pop
call
sbbb
add
icebp
adcb
sub
out
mov
lret
or
mov
xchg
fwait
and
xor
sbb
inc
sub
adc
push
xchg
out
mov
jbe
nop
push
in
cmpsl
fisttpl
mov
jns,pn
mov
test
push
sub
pop
scas
and
lds
mov
adc
push
ja
cltd
enter
add
incb
loop
add
inc
dec
dec
pop
jb
or
shl
shll
mov
xchg
sbb
xor
sub
sub
jae
push
mov
rclb
or
xor
ljmp
or
dec
jo
xchg
jge
pop
pop
shrl
dec
test
scas
xor
xchg
icebp
and
push
loop
mov
push
push
outsb
dec
int3
adc
inc
push
mov
mov
daa
jnp
sub
or
fisttpll
sub
sarb
hlt
mov
adc
clc
dec
and
jg
shl
add
mov
adcb
xchg
mov
fstpl
cmp
ljmp
lahf
rorb
push
jo,pn
and
enter
pop
or
add
rolb
mov
mov
adc
sub
adc
dec
sub
jo
es
das
ja
lods
add
mov
adc
addr16
jge
sbb
popf
ret
ret
icebp
push
push
dec
push
add
xchg
into
adc
test
call
jg
ror
iret
mul
lods
popa
pop
imul
or
and
mov
fstl
mov
or
sbb
dec
cmp
jno
rorl
xor
int3
dec
sbb
pop
je
pop
pop
rorl
add
add
or
stc
pop
jo
push
outsb
lea
jo
cmp
rorb
call
xchg
orl
push
je
xchg
xor
push
call
in
or
mov
jg
lock
dec
out
test
hlt
lock
test
inc
dec
test
dec
dec
lods
lock
cwtl
dec
aam
dec
std
push
repz
xor
out
mov
push
or
add
icebp
dec
negl
and
or
dec
add
xchg
jge
adc
test
adc
xchg
mov
fwait
add
cltd
add
ljmp
mov
out
xchg
or
inc
add
arpl
repnz
dec
fs
fs
rclb
sub
add
sbb
inc
pusha
jb
cmpsl
pushf
dec
inc
pop
xchg
mov
enter
mov
test
and
xor
add
dec
xchg
pop
push
pop
mov
outsl
std
mov
cmpsl
aas
mov
fiadds
add
pop
inc
xor
dec
pop
add
and
inc
adc
adc
lret
adc
mov
or
popa
add
into
dec
and
call
add
xchg
fs
popa
sub
mov
lds
outsl
scas
jle
call
xor
dec
pop
pop
cmpsb
adc
cmp
add
mov
mov
ret
mov
push
or
jl
adc
test
xchg
push
insl
call
sbb
das
test
sti
lods
std
cmp
mov
dec
jae
sbbb
pop
sbb
test
cld
cmpsb
pop
lds
xchg
in
adc
call
add
pop
inc
mov
sub
adc
call
lret
push
xchg
call
scas
fs
adc
lret
or
pop
cwtl
push
inc
pop
push
je
dec
adc
pushf
inc
dec
call
addl
or
gs
inc
imul
or
lret
ret
and
nop
adc
and
xchg
xchg
adc
adc
test
mov
lock
and
inc
jg
and
or
xor
adc
dec
test
inc
inc
popf
adc
not
push
push
pop
inc
jl
inc
push
icebp
in
inc
push
call
inc
or
sub
and
push
push
negb
jge
xchg
ret
add
les
inc
and
rcrl
inc
inc
and
inc
or
mov
or
dec
mov
add
sbb
stos
dec
icebp
fstpt
pop
adc
dec
mov
or
js
inc
into
loop
adc
adc
shlb
adc
or
mov
xchg
adc
dec
inc
ret
add
lds
mov
addr16
sbb
dec
push
adcb
pop
dec
sbb
es
sbb
add
sbb
jp
stc
dec
mov
in
sub
xchg
pop
push
mov
jno
fs
sbb
push
lahf
xor
xchg
jle
enter
adc
imul
aas
xchg
cmp
lods
inc
js
inc
dec
cmp
inc
adc
icebp
xchg
sbb
inc
add
dec
insb
or
aad
adc
rolb
inc
ds
cmp
in
shl
mov
bound
fadd
and
mov
xor
push
xchg
dec
inc
xchg
mov
and
jl
gs
pop
js
cmp
nop
and
dec
push
push
pusha
adc
in
les
fwait
movsl
enter
add
jmp
sbb
inc
ds
inc
or
or
mov
fwait
cmp
icebp
popf
dec
or
dec
les
das
adc
cmp
adc
pop
dec
daa
movsl
test
cmp
loop
sbb
dec
lea
dec
push
jge
xchg
fdiv
mov
and
shlb
test
or
inc
movsl
les
cmp
out
das
add
call
inc
sbb
add
clc
dec
cs
dec
icebp
rorl
adc
dec
mov
pop
pop
adc
movsl
insb
dec
cmp
sub
aaa
xchg
call
sbb
sub
enter
roll
movsl
into
stos
cmp
in
cmp
out
adc
add
sbb
sbb
sbb
call
adc
add
sbb
ret
push
jle
xchg
dec
out
fdivrs
inc
or
pop
push
xchg
mov
push
and
push
pushf
je
push
dec
sub
xchg
popa
nop
mov
addr16
mov
cmp
sub
cmp
adc
cmp
mov
pop
adc
cmp
xor
lods
jl
inc
add
cli
push
mov
mov
or
push
int
or
jns
negb
push
inc
or
mov
mov
mov
leave
pop
pop
ret
mov
dec
jle
mov
cwtl
iret
mov
ds
iret
xchg
incl
inc
loopne
call
adc
xor
das
aaa
and
xor
push
or
push
or
or
sti
and
dec
add
jb
loopne
mov
push
xlat
movsl
jno
js
cmp
mov
lock
xor
jecxz
daa
xor
out
jns
negb
sbb
cwtl
mov
sti
sbb
outsb
inc
out
cmp
movsb
popa
lret
push
mov
aad
jle
dec
add
jecxz
adc
shll
test
push
sbb
fs
adc
pop
or
cld
xor
xchg
jmp
push
das
movsb
dec
cmp
adc
push
call
push
cmc
mov
jae
push
in
movsl
push
add
scas
leave
push
lcall
dec
sbb
jmp
sub
test
dec
movsb
inc
inc
push
and
dec
mov
and
xchg
repz
enter
or
lcall
cmp
xor
dec
sub
daa
repnz
sub
sahf
enter
sbb
mov
push
das
add
lods
add
fs
daa
and
xor
mov
movsb
dec
adc
adc
jo
cmp
xlat
data16
adc
movsl
push
inc
jbe
mov
pop
adc
mov
scas
pop
stos
jb
mov
xchg
inc
push
xor
xor
sti
mov
movsl
xchg
int3
and
xchg
test
xor
push
xor
insl
scas
sbbb
lds
xor
test
mov
jg
es
push
test
adc
adc
ss
and
adc
dec
jmp
fcoml
sub
jmp
in
daa
in
jge
cmp
andb
andb
mov
dec
ja
insl
push
mov
icebp
fcoms
adc
addr16
loop
adc
xchg
test
sti
sbb
das
pop
or
push
lahf
stc
xor
mov
push
stos
sub
aaa
sub
mov
xor
lret
or
jo
shr
add
fildll
push
mov
cs
fisubs
sti
push
push
lods
jno
push
test
mov
test
push
cli
mov
jnp
lds
dec
clc
xor
cmp
in
and
adc
jmp
sarb
pop
add
dec
push
leave
or
orb
adc
or
inc
or
ljmp
adc
cwtl
sar
sub
pop
shlb
std
or
cmpsl
pop
or
adc
sbb
mov
std
nop
sub
call
test
adc
repnz
xor
jmp
push
push
int3
push
push
and
icebp
test
pop
xor
nop
xor
lea
mov
mov
mov
fwait
test
mov
mov
xor
inc
pop
out
mov
mov
and
addl
or
sti
inc
xor
js
and
into
xchg
ds
filds
pop
cmp
bound
dec
sub
add
bound
call
cmp
enter
call
push
aaa
and
and
pop
movsl
test
fmuls
pop
lods
rolb
mov
rorb
punpckhbw
or
call
push
sbb
xchg
and
leave
cmp
mov
add
fs
mov
es
data16
sub
dec
push
movsb
test
pop
movsb
jecxz
pop
sub
adc
icebp
inc
or
mov
shl
cli
sbb
sarb
cmp
sbb
std
inc
adc
jns
push
add
jmp
jle
aad
xor
cld
in
jae
decb
loopne
sub
test
stos
lea
or
and
es
sbb
or
inc
push
stos
xchg
fistps
or
cmpsl
sub
push
inc
pusha
aas
mov
lods
cmpsb
adc
mov
or
jge
in
ret
jg
jg
mov
jne
xlat
pop
lock
daa
lea
nop
inc
cld
sub
inc
loopne
mov
inc
cmp
cmp
lea
call
push
das
mov
bound
adc
in
or
jge
sahf
and
and
mov
in
jb
adc
rol
adc
add
dec
enter
push
inc
xor
sub
cs
adc
stos
cs
mov
loope
xchg
loop
cltd
or
sti
hlt
int3
ret
xor
jno
loop
sub
sub
pushf
daa
xchg
test
xchg
add
in
sub
dec
push
dec
sbb
call
test
les
cmp
rorl
cmc
or
cmpsb
mov
xchg
pop
push
call
mov
les
cmp
mov
adc
push
cmpsl
pop
nop
add
pop
cmpsb
je
mov
push
sbb
and
repnz
pusha
push
imul
leave
add
inc
ljmp
or
dec
adc
int
sub
and
mov
cmp
movsl
decl
ds
out
push
pop
jnp
and
push
add
pop
push
aas
dec
and
sti
sub
xor
clc
fidivl
imul
shll
mov
ljmp
and
ret
cmp
mov
popa
mov
adc
pause
daa
pop
daa
aad
mov
pop
sub
xchg
les
inc
cmp
sahf
dec
mov
popf
push
push
push
adc
jno
xor
mov
repnz
enter
sub
and
mov
inc
sub
scas
jecxz
aam
pop
jmp
inc
es
and
cmpb
test
mov
xor
leave
sub
adc
das
push
xchg
ret
in
and
xor
fisttpl
dec
adc
dec
mov
push
add
jl
jg
pop
and
jo
xchg
jno
and
fs
adc
adc
push
sarb
dec
pop
push
jmp
dec
jne
icebp
mov
out
pop
fucomi
inc
and
pop
pop
inc
push
push
push
push
in
sbb
out
std
test
mov
gs
xchg
push
xchg
add
adc
mov
jae
pop
pop
cmp
xor
pop
push
adcl
dec
mov
and
mov
pop
movsl
test
stos
popa
pop
out
sub
in
push
pop
jecxz
cmp
xchg
adc
adc
xor
std
mov
jecxz
test
je
dec
adc
pop
and
sub
les
jmp
xor
outsl
sub
adc
dec
and
repz
mov
jne
jg
push
xchg
pop
xor
movsb
les
dec
mov
and
jbe
and
jmp
xor
push
and
or
pop
and
or
mov
and
inc
daa
and
fwait
push
ret
adc
int
jb
or
ret
and
lahf
mov
cmp
xor
aad
adc
and
inc
popf
adc
mov
pop
and
and
and
les
addl
adc
test
es
dec
loopne
mov
test
push
push
test
test
call
into
movsl
shll
adc
fistpll
loope
movhps
shrb
shl
clc
arpl
inc
mov
in
cmp
xor
cmpsb
ficoms
xlat
jmp
enter
bound
int
adc
adc
mov
rsqrtps
sbb
cmp
imul
pop
aam
addb
mov
sahf
inc
mov
mov
xchg
test
call
adc
mov
sub
mov
inc
rolb
push
inc
cmovbe
cltd
dec
aas
cmp
add
cld
pop
shrl
mov
adc
mov
or
inc
pop
sub
mov
xchg
pop
scas
jnp
xchg
mov
adc
or
bound
mov
push
xor
adc
or
mov
xchg
inc
add
push
or
xchg
pop
mov
sbb
adcl
and
xor
jne
out
jmp
mov
adc
sbb
jmp
lock
push
xchg
pop
mov
and
bound
cltd
xor
out
inc
sbb
notl
imul
or
or
out
rclb
push
push
jmp
fcomi
testl
sbb
push
rcll
push
test
cwtl
xchg
testl
stos
stos
cmpsb
adc
push
ret
push
push
pop
pop
int3
leave
push
jno
mov
sbbb
outsl
mov
leave
je
dec
mov
cmpsl
jmp
outsb
enter
lret
sub
or
add
rcl
shll
bound
cmp
adc
frstors
dec
fs
lret
xchg
jb
in
fisttpl
int
push
cltd
sbb
mov
int
call
mov
lock
jmp
cmp
cmp
repz
push
call
pusha
sub
dec
fs
test
shlb
sbb
sbb
push
mov
xchg
push
bswap
pop
lods
push
sub
ss
sub
dec
dec
sbb
cwtl
sub
test
inc
dec
jb
xor
adc
sti
jecxz
inc
and
and
gs
xchg
xor
imul
clc
ss
jbe
lods
dec
lret
and
lret
addl
sidtl
jg
addb
sub
je
and
fstpl
push
test
aam
add
call
pop
enter
cli
sbb
nop
mov
and
mov
push
push
inc
sarl
insb
mov
inc
jmp
and
inc
or
cmp
inc
in
inc
sbb
daa
xchg
mov
and
sub
xor
cmp
xor
scas
cmp
inc
xor
pop
mov
add
int
loop
xchg
push
imul
roll
rcll
int
adc
or
in
nop
push
sbb
pop
clc
or
sar
mov
mov
loope
scas
push
or
sub
cmp
gs
inc
in
sbb
bound
mov
sub
xor
pop
movsb
push
mov
adc
inc
or
jne
sbb
push
push
add
sbbl
push
adc
or
lahf
push
int
mov
mov
xor
mov
sbb
xchg
add
pop
inc
sbb
sub
pop
sbb
or
aad
dec
mov
mov
test
inc
jno
adcb
hlt
jno
lret
dec
jbe
xchg
lahf
out
jmp
pop
push
sub
xor
adc
cmpsb
adc
movsl
sub
adc
pop
leave
icebp
add
push
jmp
mov
inc
pop
pop
xchg
xor
push
push
in
ret
jno
adc
scas
sub
mov
and
filds
adc
loop
subl
add
mov
das
repz
sbb
jne
movb
fs
add
int
xor
cmp
dec
push
add
xor
push
cmp
mov
std
xor
xor
movsl
mov
jne
jg
outsb
and
mov
sar
or
mov
jle
pop
cmp
out
dec
adc
jo
das
mov
push
xor
rcrl
jg
xchg
test
cmp
lock
ficoml
adc
cmp
orb
movsb
push
inc
jo
fstpt
adc
push
mov
lods
mov
push
dec
sub
arpl
test
inc
push
scas
pusha
push
sub
push
push
push
inc
push
push
jmp
xor
leave
adc
leave
movsl
pushf
ret
adc
mov
pop
xchg
fstps
or
sbb
in
hlt
mov
sahf
mov
dec
je
push
sbb
jne
push
jns
mov
imul
sbb
loop
adc
and
fs
push
add
in
sub
aad
mov
call
cmp
adc
dec
pop
pop
add
lret
adc
daa
sbb
pop
mov
dec
and
test
outsl
add
mov
or
xchg
and
mov
pushf
and
push
mov
dec
sbb
add
and
test
nop
mov
sbb
sub
pop
es
or
add
mov
pop
push
call
gs
sbb
mov
lcall
xor
mov
inc
movsb
mov
push
push
sub
mov
dec
adc
xchg
sahf
jle
push
in
lahf
and
push
jl
enter
dec
lret
insb
jb
pop
mov
inc
or
jge
xchg
and
enter
adc
push
flds
pushf
cmp
lods
loopne
adc
inc
movsl
dec
je
sub
in
das
mov
das
mov
ja
aas
jge
sbb
pop
inc
mov
adc
fidivl
les
fneni(8087
mov
pop
mov
test
sbb
or
mov
popf
push
cmp
mov
std
aas
mull
mov
push
repnz
lahf
push
test
xchg
stos
xchg
xchg
sahf
movsl
sub
insb
xchg
jno
cli
jge
scas
ret
je
and
adc
in
sbb
push
mov
xchg
adc
mov
icebp
xchg
cmpsb
cli
sbb
jge
adc
push
push
and
cmp
or
stos
inc
xor
push
and
shr
add
xchg
scas
or
adcl
fadds
adcl
jb
and
sub
rorl
je
mov
xchg
out
add
push
call
je
movsl
leave
jp
dec
and
js
stc
dec
sub
and
pushf
scas
popf
incl
xchg
push
xchg
jne
mov
jg
inc
cmp
jb
push
sub
in
ljmp
mov
jb
cmc
ret
fcomp
dec
fs
lret
or
test
add
mov
movsb
pop
mov
je
aas
repnz
or
aaa
pushf
adc
test
xchg
and
sub
mov
and
push
sahf
xchg
cmp
arpl
xchg
ret
addb
or
or
mov
add
push
dec
stos
fsubs
adc
and
or
pop
dec
les
mov
cli
sub
adc
jnp
sbb
mov
mov
or
test
and
mov
mov
inc
adc
in
lcall
int
movsl
ljmp
lods
test
movsb
and
mov
dec
shrb
cltd
inc
or
cmc
xchg
push
stc
dec
dec
sub
dec
pop
sti
push
sub
push
push
or
xchg
add
sbb
scas
call
popa
adc
mov
sub
sub
dec
push
jecxz
dec
sti
fdivl
sti
sbb
sub
push
test
nop
fldcw
pop
test
cld
jne
push
push
push
lea
mov
inc
or
push
mov
adc
pusha
stos
subb
push
fs
or
xor
pop
addr16
xor
imul
or
movsb
mov
and
outsl
mov
mov
cmp
and
sbb
fstps
cmp
xor
push
int3
or
mov
lcall
xchg
sbb
and
nop
aad
mov
mov
adcl
xchg
push
nop
jo
mov
mov
cltd
gs
push
pop
pop
je
push
push
mov
mov
push
aas
imulb
and
aad
adc
adc
dec
insb
sub
and
aam
push
sbb
test
xor
in
inc
push
jns
mov
or
pop
and
pushf
in
sub
sub
add
cmp
inc
sub
mov
adc
shll
inc
adc
mov
es
dec
adc
xchg
cmpl
cltd
rcrb
adc
dec
adc
stc
lcall
imul
sbb
push
mov
in
int
mov
ret
cmc
rclb
rcrb
mov
cmp
stos
xor
jo
pop
xor
pushf
stos
and
cmpsb
xor
test
mov
inc
imul
add
jns
xchg
mov
xor
int3
test
enter
pop
and
fimull
mov
mov
push
movl
push
or
push
sbb
ja
adc
call
and
dec
adc
push
inc
sbb
push
nop
sbb
mov
cmp
sbb
ja
xchg
xchg
adc
mov
push
insl
pusha
inc
jmp
and
inc
inc
jecxz
cli
add
or
sub
mov
out
cmc
adc
cmp
incl
mov
bound
lds
sub
notb
jbe
pushf
inc
sub
ret
xor
mov
pop
push
fs
push
xor
jg
or
or
inc
in
jl
xchg
stos
enter
or
adc
xor
adc
xchg
adc
les
add
pop
mov
adc
dec
adc
xor
mov
and
adc
and
adc
and
adc
adc
jae
rclb
in
fdivrs
int3
and
inc
les
in
mov
and
inc
movsb
cmp
lock
fstpl
ret
sub
lret
pop
adc
jge
pop
sub
pushl
jb
xor
inc
add
sub
jp
push
mov
clc
jae
sahf
daa
adc
jmp
sti
repnz
lret
aas
mov
xor
jge
incl
jl
pop
lods
xor
les
je
cld
sqrtps
cmp
pusha
xor
mov
dec
push
cwtl
pop
mov
push
mov
pusha
call
and
sbb
push
add
add
push
inc
pop
lahf
shlb
add
jmp
ficompl
popa
insl
inc
les
dec
in
dec
and
push
xor
shll
insb
jne
call
pop
stc
sti
nop
adc
mov
adc
push
jbe
adc
call
inc
sub
dec
sbb
sub
add
call
imul
xchg
add
jb
mov
out
add
jmp
jo
ljmp
push
mov
pop
mov
dec
pop
sbb
frstor
cmpsb
mov
stc
inc
push
shlb
and
mov
ds
inc
and
jae
sbb
mov
cmp
add
cmp
js
pop
xor
mov
fcomps
jmp
stc
add
out
or
adc
cs
mov
add
out
mov
xchg
pop
rcll
and
ret
popa
fadd
jmp
mov
lods
cld
sub
pop
and
xchg
pop
loopne
das
subb
add
ret
sti
loop
hlt
icebp
xor
data16
cwtl
adc
sub
fsubrs
das
cmpsb
lret
nop
scas
nop
jno
xbegin
cmp
mov
shlb
mov
fstpt
repz
fmuls
add
pop
push
cs
adc
jge
mov
inc
push
scas
repz
enter
ja
mov
cwtl
or
cmp
imul
pop
push
dec
loop
lret
sub
adc
into
xor
push
pop
inc
icebp
cmpsb
adc
jl
adc
mov
pop
roll
orb
add
bound
add
cmp
xchg
scas
inc
je
adc
sub
ss
mov
add
call
dec
push
sbb
add
jne
lea
popf
inc
cli
sbb
call
xlat
fwait
lock
cld
std
mull
xor
dec
xchg
adc
dec
loop
ds
cmp
cmp
jecxz
fimull
mov
mov
ret
pop
pushf
loope
jl
out
ret
stc
push
and
imul
jo
call
pop
pop
insl
or
fldl
pop
mov
inc
push
push
insb
pop
lret
int
mov
stos
and
test
cmp
jne
mov
adc
lahf
or
mov
inc
int3
mov
adc
lret
rcll
lret
or
call
dec
or
dec
mov
sub
or
addr16
out
sub
cli
ror
cli
sbb
and
test
inc
mov
ret
and
cmpsl
lea
call
sbb
push
pop
sub
ret
insb
dec
inc
push
cli
ret
fldenv
and
jno
dec
leave
mov
pop
and
push
pop
rcrb
and
loope
call
lock
sub
pop
movsl
insb
dec
mov
xchg
test
movsl
push
ret
cmp
ret
mov
xchg
in
adc
add
or
lret
jge
lcall
fistpl
jl
lock
clc
mov
les
dec
test
push
push
leave
pop
adc
test
mov
sbb
adc
pusha
dec
imul
aad
lods
cmp
outsb
fisttpll
dec
mov
push
pop
cwtl
or
dec
and
mov
stc
icebp
mov
add
rclb
sbb
and
xchg
xor
mov
in
sub
imul
fldcw
mov
jl
xchg
icebp
sahf
xchg
mov
jle
cmpsl
mul
adcb
push
push
test
jle
js
ljmp
jbe
add
aad
cltd
in
imul
ret
fnstenv
aas
out
push
shl
mov
movsb
jnp
pop
mov
pop
push
dec
push
je
dec
outsb
or
mov
mov
pushf
adc
or
dec
add
in
in
mov
es
mov
mov
fwait
mov
cmp
xor
push
adc
mov
xchg
pop
adc
sub
sub
mov
push
or
int3
mov
jae
adc
and
test
rcrl
daa
dec
adc
outsl
call
or
mov
adc
push
test
addb
popf
rclb
or
push
adc
push
sub
imulb
je
ss
push
adc
popa
mov
std
jecxz
stos
roll
jecxz
fisubrl
jmp
popf
roll
mov
jmp
sub
mov
push
jno
push
dec
and
dec
mov
sub
dec
scas
jne
cmp
mov
repnz
push
mov
scas
xor
xor
push
ret
dec
outsl
pusha
incl
xchg
add
mov
dec
sti
imul
jno
leave
mulb
add
add
mov
inc
js
jge
push
nop
jnp
mov
sbb
insb
push
mov
pop
jae
mov
mov
pop
stos
push
ret
mov
jp
adc
and
pop
xchg
stos
add
inc
xchg
fcoms
enter
push
pop
cmp
and
sbb
jbe
sti
mov
dec
push
fs
frstor
les
pusha
mov
adc
add
addr16
fsubs
ljmp
xlat
addl
add
cmp
or
pop
jp
cmp
out
or
push
xchg
inc
dec
mov
dec
fwait
adcl
push
cmp
bound
jb
popa
cwtl
inc
adc
dec
rcll
fildll
or
arpl
loopne
flds
and
or
jl
addb
inc
lock
in
fldenv
sub
jp
popf
cld
push
mov
mov
fnstenv
mov
in
fs
jnp
outsl
dec
and
mov
xacquire
mov
and
xor
call
and
mov
inc
inc
and
inc
jmp
xchg
nop
jne
sub
pop
push
push
mov
adc
insb
dec
or
pusha
sbb
inc
push
adc
mov
xor
sbb
cld
jbe
inc
in
iret
test
ret
xor
and
or
pop
jl
pop
insb
mov
or
cmp
adc
sbb
call
push
in
and
shll
clc
dec
adc
mov
add
jmp
xor
jl
shll
push
pop
int3
adc
les
adc
inc
mov
sub
ss
popa
pop
ja
in
jns
dec
inc
inc
ret
add
movsb
inc
dec
dec
pushl
inc
mov
ss
outsb
jno
enter
lret
enter
loope
ljmp
les
mov
sub
jne
dec
test
push
pop
cld
sub
push
cld
mov
adc
stos
jge
xor
std
cmp
jae
add
inc
adc
dec
rcll
mov
in
mov
into
add
add
push
pop
jp
inc
add
cmc
std
lods
repnz
std
adc
loop
std
jge
xor
cwtl
in
test
push
xor
jno
push
hlt
dec
jle
sbb
xor
addl
ret
adc
lcall
call
jb
and
bound
test
add
ja
sti
jo
hlt
ljmp
jo
icebp
sub
adc
popf
loop
xor
in
loop
and
aam
xor
mov
and
jne
and
jne
mov
aas
in
std
sub
out
std
notb
and
std
ljmp
out
std
pop
or
std
push
add
adc
outsl
clc
std
scas
xor
adc
mov
std
push
shll
shlb
lock
push
jmp
stc
std
jge
movsl
ficompl
outsl
adc
lock
jmp
nopl
in
mov
or
vpavgw
jb
inc
std
adcb
std
xor
cmpxchg
ljmp
add
lret
jmp
out
mov
repz
ja
jo
cmp
std
dec
icebp
mov
adc
cmp
icebp
ret
cmp
js
cmp
jmp
ret
std
adc
dec
hlt
ret
repz
xchg
mov
cltd
repnz
xchg
mov
addr16
mov
js
push
jo
or
cmc
lock
test
hlt
xchg
jne
add
in
std
or
shl
std
xor
out
ret
lods
in
call
mov
inc
std
ret
std
pop
add
icebp
std
cmp
sub
std
aas
icebp
jns
std
push
jmp
in
popa
mov
push
adc
in
cwtl
jecxz
nop
les
les
inc
jecxz
mov
sub
imul
adc
in
and
repz
push
sub
loope
repz
test
mov
xchg
call
adc
out
mov
ljmp
adc
loopne
lahf
sbb
ret
push
xchg
in
and
sub
out
scas
push
mov
cmp
mov
and
in
std
pop
inc
add
shl
push
adc
out
std
scas
pop
out
jle
shrl
std
popf
je
negl
nop
std
xchg
xor
mov
adc
xor
sahf
es
mov
or
js
test
daa
jmp
cmp
mov
scas
in
sbb
push
inc
in
sbb
xchg
fisubrs
mov
int
fiadds
xlat
flds
xchg
add
shl
shl
jno
orb
cmpsl
push
pop
xor
insb
movsl
sbb
dec
add
mov
push
stos
ficoml
lock
sub
nop
push
adc
gs
mov
int3
jl
dec
dec
mov
and
decl
aad
push
adc
jecxz
lea
sbb
insl
mov
lahf
in
jo
or
clc
cmp
xchg
icebp
xor
dec
rcll
adc
clc
fnstenv
movl
inc
xor
adc
cmp
jbe
mov
mov
in
cmp
test
dec
dec
push
push
pop
adcb
cmpsb
xchg
stc
stos
bound
adc
lods
cmpsl
jg
xchg
push
adc
fdiv
xor
sub
pushf
pusha
mov
jecxz
pop
sub
aad
std
mov
add
popa
dec
jo
fildl
flds
sbb
mov
inc
test
icebp
adc
outsl
mov
and
sub
xor
test
adc
fmulp
pop
and
ds
pop
lahf
add
cmp
lock
inc
in
mov
sar
lods
adc
jns
cltd
and
call
and
test
fs
mov
inc
jge
and
dec
sbb
mov
shrb
test
adc
ja
push
imull
in
pop
das
mov
xorl
and
and
push
shlb
fdivrs
inc
jno,pn
xorb
fdivl
notl
lock
pop
mov
sbb
inc
fdivrp
test
popa
lods
outsl
fildll
sahf
movsb
or
mov
and
or
add
sti
jl
mov
push
add
filds
fs
nop
rcll
cmpsb
cmp
ret
data16
xchg
loopne
inc
or
sub
sub
lods
push
jne
and
jmp
movsl
dec
fsubrl
fsubrs
dec
jnp
jge
test
mov
or
mov
pop
push
sbb
push
sub
sbb
cli
fimuls
cmpsl
shr
frstor
das
enter
ficoms
xlat
add
pop
cmp
xor
lahf
outsb
adc
or
into
push
dec
pushf
xor
rcl
out
cmp
jns
fdivrp
mov
imul
insl
lods
fdiv
or
inc
add
ja
enter
call
or
sahf
fldl
jg
mov
lods
fwait
or
js
sub
je
mov
or
hlt
mov
mov
xorl
test
jne
dec
sub
xchg
mov
adc
stos
cmp
xchg
and
add
add
jno
ds
xor
inc
xchg
jno
pshufw
add
jo
mov
int3
inc
pop
dec
add
cwtl
adc
mov
push
inc
movsb
aad
daa
sub
pop
inc
je
xor
jmp
and
cmc
sub
cmp
dec
mov
sub
aad
add
rorb
sbb
fldenv
inc
sbb
push
add
lods
daa
out
cmp
mov
call
insl
les
and
fimull
and
or
fcoml
pushf
test
pop
lock
push
mov
push
mov
rcr
dec
mov
push
mov
sbb
or
mov
clc
cmp
sub
push
cmp
and
imul
repnz
adc
ret
jbe
lcall
nop
push
fidivrs
or
add
cmp
mov
push
adc
mov
mov
add
cmp
jne
xchg
out
adc
push
add
and
add
shlb
add
dec
ret
into
imul
adc
call
test
jp
lea
dec
mov
xor
jmp
sub
xor
push
orb
movsb
jecxz
jge
jns
pusha
adc
lcall
jb
lret
add
or
or
push
lea
scas
mov
aas
or
into
inc
push
xchg
es
add
push
inc
or
rcr
popa
xorl
enter
dec
xchg
xchg
popa
jp
js
enter
sbb
loopne
or
inc
push
test
insb
mov
add
pmulhuw
aad
stos
ss
ret
mov
adc
push
adc
inc
loopne
or
popf
jnp
mov
shll
jp
push
loope
imul
xchg
inc
loope
push
lods
inc
stc
or
call
mov
cmp
neg
sbb
decl
and
ret
aad
mov
pop
fpatan
adc
lret
cmp
repz
inc
jbe
adc
test
addr16
nop
aam
mov
neg
sbb
xchg
xor
push
push
in
cwtl
or
xor
add
hlt
xor
movb
inc
invlpg
in
es
or
and
test
add
es
inc
push
popa
call
or
fbld
and
xchg
jl
cld
xor
pop
fcoms
mov
jnp
jbe
push
ljmp
cmp
or
lea
lret
xchg
inc
jbe
xchg
cli
bnd
push
hlt
aam
push
clc
pop
xlat
push
stc
add
enter
push
mov
dec
mov
cmp
xor
push
and
inc
shlb
cli
mov
and
xchg
mov
sarl
adc
mov
xchg
adc
lret
xor
repnz
mov
push
xchg
or
cli
jno
and
in
loop
mov
inc
or
xchg
or
xacquire
mov
pop
mov
lret
dec
push
hlt
xor
arpl
sub
sub
fs
adc
push
inc
pop
ret
pop
push
mov
push
movsbl
cli
jge
or
jno
mov
or
stc
invd
or
adc
push
pop
push
dec
adc
dec
repnz
xor
ljmp
sub
push
xchg
mov
sbb
add
push
call
mov
imul
and
ja
pop
add
add
pop
cli
and
movsl
fs
fstl
push
ret
or
pop
shlb
int
xchg
and
push
mov
mov
adc
rep
ret
xor
lahf
das
jb
dec
xor
mov
mov
lds
popw
push
sub
in
mov
in
movsb
and
je
mov
jge
loope
and
cltd
cmp
ret
test
andb
notl
inc
mov
lahf
out
pop
mov
lock
call
push
cli
adc
mov
cld
or
es
aad
dec
xor
fnstcw
push
dec
popf
jle
inc
xor
icebp
xor
and
cli
xor
or
inc
mov
ss
mov
inc
add
cmp
inc
and
inc
lcall
sub
push
pop
adc
sbb
dec
add
rolb
push
sbb
push
push
nop
jg
mov
je
sarl
movsl
add
and
movsl
push
call
xchg
xor
xor
xchg
jns
mov
ficoms
out
inc
adc
or
push
flds
cmp
cmp
sub
ljmp
in
add
push
repz
gs
repz
rorb
adc
cmp
push
inc
jl
pop
push
add
push
call
push
ja
bound
add
mov
mov
inc
jl
shll
mov
and
cmp
scas
xor
clc
outsl
arpl
xor
jge
mov
das
pop
jne
mov
movsb
push
inc
add
jne
sub
nop
pop
call
das
loope
js
roll
and
mov
in
pop
and
gs
rorb
add
xchg
xchg
cmpsl
movq
mov
xor
cwtl
sub
xchg
inc
dec
out
or
orb
xchg
aam
js
add
jbe
cmp
das
sub
dec
jmp
fidivrs
ja
push
in
lds
test
jo
sbb
pop
adc
sub
setne
add
test
and
jmp
rcll
cs
push
fdivrs
push
in
dec
push
leave
popf
mov
push
mov
push
push
push
xchg
imul
arpl
mov
out
push
test
adc
xchg
sbb
and
fs
dec
test
jb
popa
mov
push
lods
enter
ficomps
bound
std
lcall
sbb
out
loop
jge
inc
addl
and
xchg
lret
imul
dec
pop
in
and
and
add
sbb
push
jmp
shrb
mov
das
enter
push
push
push
aas
adc
mov
lret
lds
mov
sub
invd
orb
push
cmp
xchg
hlt
adc
sbb
mov
stos
fdivrs
cmp
nop
leave
cmp
mov
dec
movsb
sbb
clc
mov
shrb
mov
xor
mov
sahf
outsl
mov
adc
test
cmpsl
andb
or
pop
adc
test
sar
mov
loope
add
push
aam
shl
cmc
dec
jp
mov
test
insl
xor
leave
movsl
mov
adc
out
pop
and
jl
push
mov
inc
inc
test
and
lock
out
mov
inc
adc
pop
sub
fs
push
fbld
sub
sbb
and
mov
jb
pusha
or
xchg
adc
adc
dec
add
or
mov
pop
jge
adc
inc
push
fstl
lods
adc
into
dec
cwtl
daa
inc
jo
cs
adc
mov
daa
xchg
or
pop
test
push
push
pop
add
jb
dec
in
scas
cmp
cmp
fsts
pusha
adc
std
jle
dec
push
and
mov
dec
sbb
roll
aaa
push
call
scas
wbinvd
je
jmp
pop
sbb
jno
test
jge
jno
xchg
xchg
xchg
add
outsl
lods
ret
adc
inc
pop
cmp
orb
add
es
in
mov
add
add
xchg
jb
cmp
cmp
fwait
rclb
aad
jb
cmc
or
push
dec
je
sti
mov
dec
rcll
cmp
push
lahf
outsb
mov
mov
mov
and
dec
pop
out
sbb
xor
and
or
pop
fisttpll
adc
sbb
pop
addb
mov
sbb
es
aaa
jp
mov
jns
outsl
lcall
lods
pop
mov
test
js
inc
push
rorl
push
pop
add
call
push
and
sti
fcoms
dec
ror
pop
lret
xchg
jmp
or
or
pop
pop
daa
call
ret
pushf
cmp
popf
leave
ret
je
pop
xchg
bound
sub
jmp
lods
adc
mov
pop
fsubl
mov
stos
divl
je
fstps
jp
xor
je
lret
lods
sbb
movsl
xlat
adc
into
jp
and
xor
sub
adc
movsb
loopne
fcoml
pop
shr
adc
inc
xchg
cld
sar
or
jbe
xchg
sub
xchg
dec
sbb
push
cmp
inc
pusha
stos
cmp
lods
mov
inc
xor
xchg
push
enter
lahf
cld
xor
movl
mov
mov
stc
sbb
push
sbbb
leave
orl
jg
popf
add
les
movb
push
scas
cld
inc
call
xchg
into
and
shl
std
xchg
add
decb
add
lods
xor
mov
xorl
or
or
add
push
dec
add
outsb
add
xor
fisubrl
scas
int3
movsb
jne
filds
sarl
sub
aam
insl
out
notl
or
leave
out
dec
loop
pusha
and
xchg
ficoms
into
mov
outsl
or
or
adc
enter
xor
dec
sub
shl
sti
lea
or
push
testb
jmp
ljmp
ljmp
repnz
adc
pop
js
sub
add
test
and
or
adc
into
xchg
push
mov
bts
pop
loope
ret
add
jecxz
popa
mov
mov
add
das
aas
jo
jmp
lahf
push
push
ret
shrl
call
mov
or
roll
push
call
sbbb
call
push
adc
shll
mov
or
dec
shrl
push
dec
inc
lret
in
loopne
addr16
xchg
mov
lods
stos
pop
jae
add
or
pop
adc
mov
sbb
xchg
or
addr16
and
mov
xor
das
mov
test
push
cmpsl
sbb
sahf
movl
xor
addl
int
xchg
adc
push
sub
mov
stos
roll
bnd
mov
fs
mov
push
dec
and
push
test
repnz
mov
rcl
movsb
inc
insb
xor
movsl
mov
push
mov
pop
pop
mov
lret
lret
movb
push
dec
cmp
test
sbb
cmpsl
sub
xchg
rcll
and
push
pop
sub
enter
mov
mov
addl
leave
mov
mov
ret
push
adc
and
jg
shl
mov
sbb
call
loop
movb
and
pop
lahf
ds
xchg
mov
das
push
push
and
inc
test
push
sarb
dec
mov
mov
bound
mov
xor
es
movsb
push
inc
dec
negb
adc
xor
daa
dec
adc
mov
xor
int
std
inc
rolb
std
xchg
xchg
dec
cs
shrl
push
sub
fwait
mov
and
push
xor
cmp
es
mov
dec
jl
movsb
push
dec
push
ss
cmp
mov
xor
inc
in
xchg
and
int3
dec
outsl
push
mov
enter
bound
cwtl
dec
mov
cmp
pop
xor
dec
jo
data16
dec
popf
adc
and
in
addr16
data16
push
cltd
and
pop
adc
xor
popa
mov
mov
test
mov
or
outsb
or
push
adc
push
pop
xchg
and
or
push
lea
fcomps
sti
enter
or
xchg
into
push
and
ffree
rclb
daa
jl
in
and
pop
push
iret
es
mov
xchg
xchg
leave
xlat
into
adc
int
loop
xchg
xor
cmp
call
jnp
xchg
fwait
daa
jl
or
inc
inc
jne
mov
ja
inc
insb
clc
sbb
psrad
test
shll
xchg
mov
pop
test
xchg
imul
je
inc
sbb
or
aad
or
dec
je
mov
gs
sete
xor
pop
mov
add
addb
lea
dec
fidivrl
push
inc
add
subb
pusha
dec
jle
dec
popa
insl
push
loope
test
mov
mov
dec
or
pusha
mov
mov
inc
xor
and
mov
dec
xor
inc
cmp
cmp
pusha
or
sub
or
mov
shlb
and
cwtl
sbb
call
inc
test
pop
push
jne
push
lret
mov
dec
sub
lahf
fsts
inc
lret
inc
mov
push
or
sbb
enter
or
mov
and
dec
ja
and
sbb
pop
mov
sti
mov
mov
scas
xlat
pop
rcll
or
inc
pop
sbb
call
push
or
mov
pop
test
mov
frstor
mov
adc
ret
adcl
mov
out
dec
add
xchg
imul
mov
dec
mov
test
push
cld
popf
nop
adc
pop
int
outsb
in
test
xchg
push
in
inc
je
leave
daa
lret
jg
ficomps
or
test
cmp
mov
mov
sbb
xor
sub
jg
je
jmp
pop
adc
call
hlt
lock
or
push
push
and
xchg
out
shlb
dec
clc
mov
jle
jl
inc
adc
pop
mov
and
call
inc
dec
mov
cltd
jmp
dec
mov
movsb
mov
xchg
adc
mov
xor
lods
push
scas
mov
adc
ljmp
inc
or
cwtl
pop
mov
inc
or
xchg
fcmove
call
sbbl
inc
inc
xchg
nop
daa
or
into
fidivl
and
push
jbe
dec
push
mov
rclb
and
leave
std
dec
sub
stc
nop
clc
shr
push
mov
shlb
pop
call
mov
push
sbb
call
cmp
out
scas
leave
add
orb
lock
add
add
or
jg
movsl
push
shll
jnp
mov
cmp
sub
or
test
inc
lahf
sub
aaa
cmpsb
add
stc
xor
sub
adc
add
fldcw
adc
inc
inc
and
mov
sbb
push
fldl2e
pop
scas
sbb
mov
sbb
or
push
cmc
aad
popf
mov
cltd
sbb
jae
xchg
jecxz
jle
mov
adc
mov
loopne
xor
mov
rol
mov
push
scas
mov
inc
mov
rclb
daa
les
sub
mov
lahf
xchg
or
roll
aas
mov
dec
test
stos
or
mov
sbb
aaa
sub
inc
rcrl
sub
mov
mov
repnz
or
loope
sti
jl
or
inc
push
lods
inc
in
dec
pop
pushf
movsl
shlb
loop
pop
shlb
jg
add
les
mov
push
scas
pop
jns
jecxz
shlb
mov
rolb
push
adc
mov
adc
mov
sub
iret
and
gs
mov
repz
cmp
sti
push
adc
test
jle
jo
push
and
movsl
int3
inc
push
dec
mov
lods
ret
cld
mov
jmp
mov
dec
fneni(8087
loopne
call
mov
xor
push
push
push
add
repnz
cli
leave
and
jmp
popf
add
add
mov
out
addb
rclb
sahf
xchg
mov
daa
push
sbb
push
or
inc
sub
lods
sbb
sub
xorb
and
in
push
lret
cmpb
jne
xor
pop
jmp
dec
sub
cmp
jno
pop
addr16
push
cmp
add
pop
cmp
mov
mov
jmp
add
mov
mov
push
mov
or
lods
aaa
fidivs
stos
inc
gs
dec
mov
or
and
cmp
mov
or
shrl
out
test
mov
inc
adc
std
int3
cmpsb
xchg
inc
inc
xchg
jg
les
lea
adc
push
cmpsb
sti
fnsave
cmp
sub
inc
sahf
mov
sbb
inc
test
add
std
movups
stos
lds
push
adc
in
enter
aam
jle
jmp
bound
adc
cmp
imul
xchg
add
jp
and
mov
inc
xor
and
push
mov
mov
add
icebp
test
jbe
sbb
xchg
movsb
ret
sbb
cmpsb
sbb
pusha
mov
test
push
inc
adc
mov
mov
cmp
jl
fs
inc
cli
cmc
gs
dec
mov
xchg
mov
ret
fstl
fadds
adcl
xor
and
and
ja
ja
push
mov
shlb
mov
mov
ret
mov
sub
mov
xchg
xchg
adc
inc
mov
movsl
adc
mov
and
jg
lret
sub
lods
dec
es
push
orl
mov
mov
mov
or
push
cmpsb
add
dec
or
dec
pop
or
sbb
fldenv
orb
sbb
fistl
cmpsl
pop
and
add
xor
daa
jno
xor
xor
mov
mov
sarb
aam
inc
pop
imul
mov
rep
jp
mov
adc
fs
or
sub
cmpb
dec
mov
xor
adc
or
rcrl
clc
sub
lea
xlat
sbb
mov
jne
mov
and
fmull
iret
jl
mov
mov
adc
sub
icebp
inc
or
push
push
xchg
sub
mov
mov
mov
cmp
inc
and
test
imul
out
mov
mov
ret
clc
adc
mov
jo
mov
add
inc
stos
jb
push
mov
orb
cmp
fdiv
orb
mov
inc
push
push
in
and
iret
test
pop
enter
push
or
adc
test
test
sbb
dec
test
mov
arpl
adc
adc
mov
lret
sbb
popa
xchg
out
sub
cltd
pushf
inc
push
and
bound
fmuls
sbb
adc
cmp
sbb
xchg
dec
inc
jb
mov
arpl
adc
pop
clc
or
hlt
add
adc
jmp
inc
lock
adc
adc
lahf
pop
push
fwait
lcall
or
test
sahf
iret
and
cmpsl
inc
pop
jle
imul
fnsetpm(287
add
or
pusha
push
xor
sbb
data16
cmp
pop
dec
and
mov
rcr
sti
ljmp
daa
ret
dec
les
sbb
pop
xor
shrb
adc
xchg
subl
xlat
es
xor
inc
push
dec
push
sbb
xor
inc
repnz
inc
fisubs
js
sbb
inc
in
push
sbb
pusha
addl
xor
cmp
fldpi
incb
inc
pop
les
movsb
daa
sbb
pop
jne
cmc
incl
push
xor
shll
cmp
or
push
mulb
push
mov
test
and
and
push
push
imul
pop
mov
ret
jae
imul
hlt
data16
push
gs
pop
sub
adc
inc
call
pop
push
or
je
adc
pop
jne
sbb
test
sahf
add
or
flds
lret
cmc
adc
xchg
out
cmpsl
aam
les
adc
cmpsl
xor
push
movsl
shll
ljmp
pop
mov
push
sub
negl
adc
push
cltd
dec
outsl
test
shlb
pusha
xchg
xlat
clc
pop
lds
add
test
sub
in
or
add
test
fldenv
xor
lcall
jne
test
nop
push
jmp
add
aas
and
pop
adc
push
fisubs
xor
jb
push
fst
mov
sbb
test
xor
shll
sbb
pop
adc
and
xor
dec
sarl
cmp
xchg
mov
pop
clc
cmc
movb
inc
xlat
sbb
cs
scas
mov
jp
inc
add
sbb
mov
in
int
sub
movsb
inc
fwait
push
stc
push
iret
movsl
xor
stos
cmp
jns
cltd
push
call
clc
stos
dec
movsb
in
jl
lock
jge
push
nop
sahf
push
and
adc
inc
leave
movsl
jmp
leave
cmpsl
inc
nop
sub
jns
sbb
or
test
fstps
or
testb
jne
push
xlat
jle
add
adc
push
outsl
and
je
jl
inc
test
push
mov
dec
jb
push
sub
push
push
test
test
enter
sbb
cwtl
jns
popf
pop
mov
lods
mov
in
mov
cmp
fcmovne
sbb
adc
mov
aad
push
and
or
jne
out
mov
dec
cld
je
out
loope
rorb
dec
mov
out
das
nop
adc
adc
sbb
fadds
dec
ljmp
cs
jnp
decb
pop
mov
cmpsl
es
cld
aaa
loope
mov
aam
pop
add
das
shll
xor
sub
adc
mov
and
mov
cmp
adc
sub
sbb
xchg
lods
and
push
push
aad
sbb
sysexit
mov
scas
or
sbb
popa
pop
jae
xchg
mov
pop
or
inc
push
push
or
gs
adc
sbb
test
push
test
std
add
out
mov
mov
imul
mov
aas
test
cmpsb
loop
fnstenv
lods
push
mov
and
and
and
adc
add
popl
incl
xchg
test
lods
or
int3
adc
mov
sbb
daa
push
mov
mov
cs
and
sub
aaa
push
daa
mov
cmp
inc
add
stos
sub
and
les
add
add
xchg
sub
xchg
imul
sahf
imul
dec
cmp
mov
or
mov
inc
jp
mov
mov
mov
arpl
mov
aad
dec
sub
or
aam
or
push
push
lock
mov
cltd
ljmp
test
sub
pop
xchg
sub
mov
push
or
push
mov
sub
jle
push
outsb
sub
xchg
push
cmp
insl
mov
sub
xchg
or
out
cmp
insl
inc
popf
daa
push
xchg
and
outsl
sub
movb
adcb
or
inc
add
popf
or
inc
mov
gs
outsl
sub
push
mov
call
xor
mov
jno
bound
adc
je
cmp
xchg
xchg
xor
les
lea
jge
xchg
mov
cmp
inc
mov
cmp
test
cmpsl
mov
inc
sbb
xchg
push
enter
dec
bound
hlt
push
loop
cmpsb
adc
repnz
clc
xchg
xchg
mov
call
lret
test
cmpsb
and
mov
sub
aam
mov
dec
inc
lret
adc
js
xor
inc
sahf
and
cltd
mov
cmp
notb
mov
jo
cmp
xchg
nop
xor
mov
ds
mov
dec
pop
icebp
popa
pop
popf
adc
jg
out
in
leave
push
or
sub
lods
inc
rcrb
push
shl
shlb
ljmp
push
call
aad
pop
clc
adc
sarb
mov
lods
push
lock
pushf
nop
vmovaps
pop
nop
pop
jg
rorl
adc
adc
xchg
and
mov
sub
and
and
lret
scas
inc
fmul
cmpl
cwtl
fbstp
sub
and
push
and
jp
enter
mov
adc
or
and
enter
pop
in
jno
adc
enter
adc
test
outsl
xchg
int
push
call
dec
cmp
push
mov
pop
pop
mov
icebp
add
mov
std
xchg
ret
stos
push
lahf
mov
sbb
lcall
xchg
fsub
pushf
js
ret
cld
cli
xchg
or
leave
mov
fdivr
xchg
push
out
je
or
xor
mov
ja
test
inc
test
pop
mov
and
pop
push
pushf
add
or
test
mov
add
rolb
add
ret
repz
adc
push
or
jle
rolb
andl
or
inc
or
adc
add
call
or
add
adc
mov
or
pop
jb
adc
loopne
test
push
jbe
pop
mov
xor
je
aaa
cmp
sub
or
add
sarb
cmp
bnd
dec
pop
adc
inc
mov
adc
sbb
adc
mov
and
movsb
jle
cmp
sbb
pop
mov
jle
cmp
mov
leave
out
dec
rcpps
mov
xor
mov
push
inc
pop
cmp
jb
fs
and
sub
adc
sahf
fneni(8087
pop
adc
mov
mov
push
mov
and
pop
xor
fs
dec
std
scas
cltd
inc
in
cmp
jle
stc
je
mov
and
xchg
inc
mov
mov
mov
push
inc
or
push
sbb
inc
jb
adc
cmp
ret
adc
adc
push
es
test
fwait
xchg
push
cwtl
xchg
or
movsb
mov
cmp
inc
das
aaa
popf
repnz
jmp
pop
pushl
rclb
xchg
ds
push
adc
mov
add
mov
test
jnp
xchg
dec
adc
dec
sti
xchg
mov
inc
dec
add
cmp
jne
test
jle
or
push
pop
xchg
pop
sti
add
push
call
add
je
inc
add
out
sbb
push
dec
add
test
inc
inc
inc
sbb
push
push
mov
decl
pop
and
push
jne
push
fmul
jne
cwtl
aam
sub
ret
pushl
mov
pusha
pop
inc
sub
push
dec
cltd
adc
ret
xor
je
dec
xor
xor
push
xchg
push
xchg
and
fwait
inc
cmpb
jbe
add
push
sub
movsl
dec
ret
and
jg
rcr
sub
dec
es
imul
pop
mov
testb
mov
dec
mov
movl
mov
push
sbb
inc
jecxz
lahf
push
mov
cmp
je
inc
push
adc
dec
adc
inc
xor
in
sbb
data16
sbb
call
mov
in
scas
mov
ret
popa
pop
test
or
pop
popa
mov
add
mov
mov
adc
out
dec
std
mov
mov
mov
sbb
or
call
sahf
and
push
and
mov
orb
icebp
test
dec
mov
add
ljmp
xchg
enter
pop
push
ds
adc
mov
jo
mov
xchg
in
push
xchg
xor
xor
jno
jg
call
xlat
ret
imul
inc
test
cli
add
add
add
xchg
cmc
test
out
and
imul
pop
enter
incl
sbb
movb
into
scas
cwtl
cmp
inc
ljmp
es
dec
sub
in
inc
ss
push
out
pushf
popa
mov
cmp
mov
xor
rolb
push
mov
mov
cmp
jns
push
adc
push
adc
push
decl
dec
nop
push
mov
push
out
add
adc
xchg
jg
inc
adc
pop
pop
add
movsb
fwait
dec
jl
push
adc
cmp
push
aam
push
mov
fadd
test
jns
sub
mov
jb
xchg
test
sub
inc
push
fidivl
or
lret
jg
stc
je
fldl
subl
add
jae
jb
pop
xchg
jl
dec
xorl
test
xchg
lcall
enter
xchg
inc
lret
orb
add
jb
in
and
popl
rcrl
xchg
sbb
cmp
lea
adcb
push
sbbl
outsb
add
adc
cmp
push
loope
push
adc
or
add
mov
aam
lcall
push
or
cmpsl
inc
test
lea
add
and
inc
pusha
enter
adc
adc
push
inc
push
and
in
sub
mov
and
sub
arpl
dec
call
xor
mov
xor
subl
or
add
dec
test
inc
add
and
jle
or
orl
outsl
inc
sub
push
rolb
cld
subl
in
jge
push
sub
stc
push
or
mov
xor
sub
mov
pop
cmp
adc
test
mov
inc
jne
sbb
mov
clc
ljmp
or
jne
dec
ja
rolb
int3
repz
mov
cmpb
ficoms
mov
cmp
or
mov
mov
adc
push
xchg
sti
les
push
jne
aas
cmpsl
xlat
nop
mov
jnp
pop
andb
pop
std
lahf
pusha
loop
out
xchg
cmpsb
adcl
dec
adc
stc
or
and
dec
xchg
inc
jo
les
aas
in
shl
pop
jl
xchg
push
jle
mov
nop
mov
mov
or
sub
mov
add
sbb
hlt
mov
inc
push
imul
cmpsl
jmp
mov
jns
notb
adc
xchg
push
jae
jg
jmp
nop
push
or
call
lock
xor
xchg
insb
mov
and
call
ffreep
cwtl
out
jbe
cmp
pusha
sti
or
cmp
pslld
iret
pop
pop
adc
pushl
cmp
and
push
fcom
mov
lret
nop
push
pushf
repnz
jle
mov
xchg
mov
ds
lods
inc
orb
push
inc
cmpsb
ds
push
in
dec
stos
sub
sub
cmp
test
sub
push
jne
adc
outsb
sbb
lock
or
mov
jae
mov
test
inc
mov
xchg
nop
les
lock
jb
adc
xor
and
and
ret
xchg
mov
call
xchg
dec
test
pop
ficomps
sbb
xor
stc
xchg
and
adc
sbb
enter
or
or
lock
mov
rcl
or
inc
or
rcll
ljmp
lcall
sbb
sarb
pop
mov
mov
sbb
cmp
jge
xchg
call
pop
inc
fstl
daa
popa
das
fucomi
clc
jle
xor
jp
dec
or
sub
push
pop
xchg
jg
cmp
and
inc
cld
shll
push
inc
cmp
jl
sbb
jg
aad
xchg
mov
call
xor
jmp
lock
pop
mov
sahf
pop
add
push
test
inc
inc
jns
insb
mov
pop
inc
loopne
cmp
mov
mov
xchg
inc
mov
xchg
push
dec
ret
das
xor
pop
cmpsl
mov
repz
jl
adc
jg
push
push
out
test
cltd
jp
shrb
pop
adc
subb
mov
inc
mov
jmp
sbbb
fimull
inc
add
adc
pop
or
cwtl
dec
pop
mov
sti
rcll
repz
stos
lods
xor
mov
xor
and
lock
push
lods
cmp
out
jbe
in
nop
adc
mov
insl
jp
and
xor
dec
cwtl
inc
cmp
adc
adc
pusha
or
push
mov
sbb
int
push
jl
mov
add
pushf
push
jo
xor
and
subl
hlt
pop
jmp
sbb
pop
push
mov
dec
icebp
xor
call
push
outsl
jno,pn
pop
test
sub
push
mov
push
pop
fadds
mov
and
pop
hlt
popf
dec
or
xchg
daa
aas
loopne
sub
sahf
insb
rcpps
imulb
adc
lds
out
dec
or
push
pop
test
xor
prefetcht2
iret
xor
sbb
and
push
push
dec
mov
js
xor
jg
and
push
pop
lcall
pop
je
mov
mov
aam
out
les
cmp
pop
dec
bnd
mov
or
popa
inc
adc
cli
jne
inc
insb
push
dec
jle
ficompl
jle
xor
mov
je
jo
push
xchg
in
insb
aad
pop
mov
sub
mov
pop
jmp
sar
roll
arpl
jno
xor
out
dec
mov
or
push
and
xchg
popa
xchg
mov
and
dec
insb
inc
outsl
xor
mov
incl
rol
pop
cmp
inc
inc
inc
fimull
rcrl
mov
sub
jle
mov
mov
inc
push
je
bound
push
and
repz
jb
mov
push
adc
mov
sbb
test
lock
jne
popf
jno
push
add
js
inc
jb
inc
jnp
popf
inc
pusha
add
adc
ret
clc
or
daa
push
add
xor
cld
inc
mov
insl
je
pop
test
xchg
or
jno
ss
pop
xlat
mov
inc
xor
xchg
pop
add
mov
push
lahf
outsb
pop
insl
or
insb
jle
dec
mov
push
leave
stos
push
fdivs
stos
sub
push
lods
and
test
hlt
dec
push
fldl
cmp
add
push
jle
sub
push
push
and
and
lret
push
lahf
repnz
inc
fs
mov
xorl
dec
or
pop
hlt
push
dec
xchg
lea
pop
add
scas
test
scas
popf
push
mov
mov
stos
and
pusha
or
xor
in
lods
inc
imul
mov
bound
pop
sub
xor
inc
cs
sub
sub
sub
sbb
sub
sub
orb
push
xchg
cs
inc
xor
push
mov
inc
add
mov
daa
or
lods
insb
daa
dec
mov
sysenter
lret
sub
cli
adc
add
stos
notb
cwtl
mov
and
dec
adc
push
push
sub
pop
adc
and
mov
inc
sub
rcrl
notl
stc
add
sub
xor
sbb
out
push
or
push
bnd
nop
pop
fidivs
pop
jge
faddl
adc
mov
jo
jo
cmp
insb
push
push
cs
adc
jg
push
aas
mov
dec
cmp
dec
mov
es
jge
imul
cmp
mov
mov
and
pop
push
sub
sbb
fisttps
pusha
push
aad
jge
std
cmp
dec
inc
enter
add
dec
bound
mul
cld
decl
cmp
ja
fnsave
xchg
sbb
dec
ror
jnp
dec
dec
xor
mov
xchg
test
hlt
xorb
jmp
and
pop
fdivl
and
pop
dec
push
xor
notl
dec
mov
push
dec
mov
add
addb
jno
std
push
out
in
mov
call
xchg
lock
faddl
push
push
sub
jno
dec
adc
lea
xchg
loopne
repz
and
adc
xchg
inc
ja
inc
test
insl
pop
loopne
and
aas
or
imul
loop
mov
in
push
cwtl
pop
rcl
xor
repnz
stos
xchg
or
inc
sub
dec
adc
push
andl
mov
push
dec
inc
mov
adc
inc
sub
push
pop
dec
pop
dec
pop
call
dec
inc
filds
pop
out
sub
cmp
sub
mov
outsb
xchg
adc
xlat
in
and
in
adc
leave
add
repnz
xorb
aas
sbb
or
test
mov
dec
sbb
rolb
push
add
int3
fcoms
test
cmp
dec
dec
popf
fdivl
cmp
dec
test
xor
sbb
pop
inc
sbb
push
or
push
mov
jle
adc
lea
jmp
andl
popw
imul
lret
and
cli
add
ds
pop
add
loopne
test
mov
cltd
std
ret
cmp
mov
push
xor
jl
test
pop
adc
dec
pop
lock
xorl
das
adc
cmp
stos
sarl
testb
outsb
mov
sub
hlt
sub
aad
mov
jne
push
mov
inc
mov
xchg
pop
stc
mov
or
mov
aaa
nop
lock
sub
test
xchg
adc
lea
push
add
push
call
push
push
mov
iret
adc
and
or
ret
push
pushf
int
xlat
sub
push
in
sbb
or
or
mov
leave
push
mov
and
sti
dec
pop
push
cmp
pop
push
test
sbb
dec
pop
cli
sub
mov
call
fnsave
inc
inc
cmp
xchg
cs
js
sbb
shlb
or
push
or
jge
addr16
sub
dec
jne
mov
adc
add
fnstenv
and
inc
cmp
push
bound
dec
push
pop
mov
push
xchg
arpl
or
xchg
push
inc
in
pop
mov
je
jbe
sbb
push
and
aad
push
push
sub
and
push
push
scas
dec
jmp
mov
mov
xchg
sbb
cmpb
sub
and
cmp
and
stos
test
gs
ljmp
and
dec
jne
jns
nop
sbb
lret
pushf
pop
inc
xchg
inc
cmp
jmp
push
jmp
push
cmp
inc
sub
lods
arpl
jno
mov
popl
jnp
or
mov
ret
cli
adc
dec
dec
sbb
xchg
shll
cmp
outsl
sub
enter
gs
xor
xchg
outsl
jo
jmp
adc
arpl
and
adc
cli
or
sti
bound
mov
and
jmp
cltd
inc
push
and
pop
adc
jge
fcmovnbe
mov
jns
negb
rcrl
and
shll
adc
fcomps
popa
gs
in
bound
push
and
and
mov
pop
mov
call
push
push
or
lock
test
adc
push
adc
popa
mov
repz
or
xchg
cltd
inc
and
add
sub
fs
mov
pop
mov
jmp
inc
hlt
lahf
cmpsb
sbb
sub
and
xchg
sub
dec
test
push
fs
and
pop
mov
das
push
ljmp
flds
mov
mov
pop
and
cs
insb
jl
dec
and
sahf
js
call
mov
add
in
stos
xlat
test
dec
pop
mov
push
xor
sbb
mov
push
inc
les
lret
push
jge
mov
push
mov
add
leave
xchg
xor
call
xchg
jbe
jmp
mov
and
jge
loopne
push
sbb
xor
adc
into
call
mov
jbe
sub
add
inc
and
sub
push
ja
xor
xor
pop
out
adc
add
sbb
sbb
push
mov
fidivs
addr16
inc
push
jne
aad
push
popa
mov
nop
xor
cli
pop
aad
pop
or
jne
jb
mov
mov
add
call
loop
mov
adc
xchg
mov
jg
jmp
xorl
lods
aad
addl
data16
dec
xchg
jle
sti
test
je
ja
mov
pop
inc
push
jmp
lret
sub
mov
inc
pusha
push
xchg
jp
sub
push
push
scas
inc
pop
popa
push
sub
mov
sti
sub
mov
popa
pop
call
test
movsb
mov
dec
jmp
xchg
inc
jmp
sub
mov
ror
sahf
push
call
and
scas
insb
test
push
mov
movsb
pop
inc
jae
xlat
nop
callw
pop
mov
and
pop
pop
push
mov
int3
and
push
call
gs
pop
call
mov
push
pop
push
pop
adc
xchg
or
inc
pop
jae
and
xchg
out
sbb
push
pop
jae
bound
or
lret
dec
pop
scas
xor
cmovne
in
pop
pushf
add
xor
pop
mov
push
sub
lret
xor
scas
or
jle,pt
mov
outsl
jp
sarb
lea
or
jge
stos
sub
push
mov
or
cltd
push
lea
dec
sub
pop
or
call
or
scas
and
pop
mov
jb
or
loopne
dec
fisttpl
or
xchg
clc
adc
bound
stos
xchg
xor
or
push
nop
xor
fistl
push
es
jnp
nop
mov
adc
add
mov
rep
pop
mov
cmp
mov
mov
out
mov
imul
mov
pop
add
int3
or
les
jnp
test
xchg
leave
and
sub
out
jb
popf
pop
sub
push
inc
or
test
cmpsl
das
jo
push
out
push
jl
in
adcb
insb
sbb
mov
rcrb
pop
scas
in
repnz
lods
inc
push
mov
sbb
push
push
cmovo
sub
or
stc
lahf
ret
imull
dec
push
out
cmp
je
or
mov
mov
jmp
movsb
or
aas
shll
jns
xchg
sub
sub
jmp
add
nop
jl
sbb
adc
lcall
pop
jb
cmp
insl
les
daa
incl
sub
enter
push
mov
mov
inc
sub
pusha
and
xor
lods
lea
movsb
lds
daa
push
mov
xchg
scas
or
or
das
clc
xchg
stos
xor
xchg
inc
jge
inc
inc
nop
mov
mov
push
ss
pop
cmp
mov
mov
add
dec
xchg
push
push
pop
repnz
pop
push
les
adc
mov
dec
sti
repnz
adc
or
and
movnti
mov
inc
dec
inc
das
jecxz
sub
movsl
jle
xor
xchg
cmp
mov
pop
dec
dec
sub
test
add
push
rcrl
mov
fs
push
jnp
lds
inc
push
fst
add
enter
pop
inc
pop
nop
ljmp
pop
rorl
negb
inc
jl
inc
fiaddl
adc
sbb
out
test
lahf
xlat
dec
sub
push
or
stos
pop
sahf
cmpsl
gs
pop
fbld
lea
push
call
mov
add
rorb
mov
cwtl
rclb
call
push
repz
xor
in
dec
andl
sbb
adc
aaa
mov
jge
dec
sub
xor
int
sbb
inc
pop
faddl
rcll
push
pop
cmpsl
mov
andl
adc
ds
pushf
jnp
xchg
adc
das
cmp
xor
mov
inc
lods
movsb
mov
dec
jmp
xchg
call
mov
jmp
imul
pop
sbb
cmp
push
or
sbb
jecxz
test
push
push
sbb
sub
cmp
je
mov
movsl
or
imul
scas
test
sahf
lock
push
mov
stc
mov
jbe
inc
idiv
cs
dec
rclb
and
or
je
mov
sbb
mov
add
sbb
sti
jl
ret
sub
je
fs
mov
cmp
and
fmuls
xchg
xor
cmpsb
pop
jle
inc
jbe
mov
pop
adc
push
lds
popa
adc
jmp
pushf
adc
pop
clc
in
scas
mov
inc
lcall
mov
adc
stos
or
das
dec
push
cmp
call
or
mov
icebp
add
jmp
gs
rorb
mov
movsl
loop
jge
inc
lods
pop
mov
inc
pcmpeqb
inc
test
jb
or
inc
inc
insb
or
sbb
or
dec
lret
rcll
sub
pop
enter
and
hlt
les
mov
fnstcw
sub
les
and
push
faddl
xchg
loop
adc
push
cmp
push
scas
xlat
pushf
mov
movsl
aam
gs
xchg
cmp
sub
or
arpl
mov
lods
sub
cmp
xlat
cltd
add
sbb
sbb
fucomi
push
push
push
mov
inc
das
and
mov
sbb
mov
cs
adc
clc
dec
std
mov
or
out
inc
dec
or
call
add
lds
mov
mov
add
mov
pop
loope
lock
popf
cltd
sub
adc
inc
or
sbb
jg
xchg
push
scas
idivb
int3
push
nop
xor
sub
dec
mov
push
add
sbb
dec
pop
adc
pop
adc
jge
mov
je
inc
or
orl
call
aas
sbb
inc
stos
adc
dec
movsb
enter
dec
test
dec
call
pop
xchg
jmp
or
push
jno
mov
stos
ds
dec
sub
sub
mov
push
push
fsts
gs
push
adc
fwait
xchg
or
jmp
mov
dec
pop
ds
pop
mov
dec
in
jl
sti
or
mov
jl
out
call
adc
push
out
mov
icebp
dec
clc
loopne
clc
mov
dec
push
inc
cmp
imul
jmp
decl
jmp
and
push
subb
lods
ficoms
dec
jbe
cmc
sbb
lret
mov
sahf
ja
fidivl
pop
jmp
outsl
mov
add
stc
movl
mov
shlb
pop
mov
push
call
stos
fs
inc
sub
xchg
push
daa
sbbb
cmpsb
imul
fbld
inc
pop
push
xor
add
ret
xchg
call
or
test
inc
inc
dec
lock
cmc
popl
mov
repnz
inc
es
xchg
addr16
test
lret
push
adc
jmp
sbb
in
cwtl
inc
xor
repnz
orl
ds
xlat
jno
push
pusha
inc
popf
pop
pop
mov
push
push
adc
shrl
pop
iret
mov
aas
add
pop
push
out
lea
out
pop
es
je
inc
dec
push
mov
fs
rorl
xchg
xchg
pop
push
mov
sbb
sbbb
lcall
cmp
or
gs
mov
out
push
push
stos
inc
mov
xchg
mov
push
movups
in
jmp
adc
les
test
call
jmp
add
xchg
and
sbb
xchg
std
mov
sarb
daa
ret
fisubs
test
xor
add
push
mov
and
xchg
or
pop
call
sub
add
mov
xor
sahf
push
es
dec
sub
sbb
bnd
push
push
sub
or
in
popa
sub
or
mov
pop
xor
repnz
push
xor
xchg
das
mov
mov
fmuls
and
aad
adc
lods
scas
subb
xchg
adc
popf
pop
xchg
dec
push
mov
mov
xlat
inc
shll
jge
push
shll
jb
mov
jmp
rorb
sub
cmp
push
mov
je
push
adc
cld
or
out
mov
sub
or
pop
mov
shll
push
mov
lds
dec
mov
jecxz
and
out
push
inc
push
inc
jbe
sti
jmp
sub
mov
call
mov
jle
mov
movsl
xlat
outsl
lock
popf
repnz
bound
fstpl
inc
adc
es
ss
push
gs
xchg
push
mov
jo
push
mov
pop
scas
dec
ljmp
pop
xor
xchg
out
daa
push
push
push
cs
aam
push
outsl
cld
sub
ret
mov
sub
xor
cmp
mov
lock
adc
sbb
or
xchg
dec
ret
jb
adc
ret
adc
and
int3
loop
adc
xchg
push
cmp
dec
es
rcll
push
push
subb
inc
xchg
xchg
mov
adc
lds
mov
test
xorl
xchg
cltd
lods
mov
and
xchg
add
repnz
dec
pop
inc
hlt
lret
jo
pop
stc
nop
mov
int
xor
add
mov
xor
or
mov
cmp
ret
mov
adc
js
or
sbb
pop
pop
test
jle
hlt
and
push
push
andl
fnstcw
mull
xor
jbe
mov
xchg
insb
jmp
xchg
push
call
in
push
cmp
add
xchg
push
outsb
adc
clc
xor
adcb
test
sbb
je
js
test
and
lea
xchg
jbe
push
je
add
lock
jb
mov
gs
push
and
aas
inc
mov
jge
adc
mov
xchg
scas
int3
mov
xchg
push
dec
mov
pop
add
xor
sti
add
mov
sarl
xor
and
jg
push
adc
je
dec
int
into
pop
inc
pop
test
sbb
shr
jne
aad
aad
sub
cmc
add
add
and
xor
mov
or
pop
inc
lret
test
add
das
movb
cmp
cs
outsl
or
test
cmpsb
in
inc
inc
pop
or
jg
rorl
inc
rclb
and
mov
pop
cmp
push
leave
xlat
addl
push
mov
xor
jb
test
dec
test
push
pop
add
mov
enter
add
fimuls
int3
push
mov
pushf
in
jecxz
and
or
jbe
test
jbe
aas
xchg
push
mov
outsb
sub
in
mov
jmp
or
dec
decl
mov
dec
movsb
xchg
adc
bound
xor
sub
add
movsl
pop
clc
sbb
into
inc
cmp
mov
cs
pushf
add
cmp
adc
mov
mov
or
xor
cs
test
addr16
int3
sti
xor
xor
xor
loope
push
sti
xor
adc
inc
push
xchg
pop
popf
jo
push
xchg
sbb
xor
adc
xor
je
mov
subb
push
push
in
shll
inc
xor
pop
sub
cli
mov
clc
dec
movsl
sti
test
xor
mov
mov
dec
sahf
and
jo
xchg
imul
push
push
ret
xchg
mov
pusha
cmp
sbbb
ret
pop
dec
clc
mov
xor
dec
clc
mov
hlt
pop
mov
dec
rolb
call
mov
cmp
jg
cmpsb
pop
push
jle
ret
dec
rolb
pop
cmp
in
push
sbb
pop
xchg
cmp
xchg
subl
push
inc
inc
mov
push
icebp
lcall
lcall
sbb
xlat
adc
adc
call
and
scas
lds
push
mov
aaa
pop
std
sub
jge
pop
cmp
cmovl
test
insl
jl
imul
insb
and
xor
lret
imul
or
ret
mov
xchg
sub
sub
cmp
mov
inc
push
fcoms
lret
not
mov
mov
push
popa
pop
nop
clc
and
sub
adc
jge,pn
pop
mov
jae
sbb
dec
adc
mov
fs
test
and
std
and
test
cltd
inc
jmp
test
cwtl
pop
movsb
je
xchg
shrl
or
repnz
dec
dec
xor
adc
adc
stc
dec
dec
lds
and
rolb
cwtl
lahf
push
aas
sbbb
adc
orb
das
aam
or
inc
jne
mov
mull
inc
pop
xor
cmp
and
xor
data16
and
pop
push
sub
sub
gs
push
jbe
bound
insb
jne
cwtl
xor
add
fcoml
pop
adc
push
ficoms
push
xor
xor
mov
stos
subb
jne
pusha
jle
jne
mov
xor
call
cltd
test
sub
dec
sti
sahf
adc
jns
jnp
add
popf
xchg
fwait
icebp
lock
pop
inc
mov
inc
xchg
cltd
ja
pusha
sbb
dec
fcoml
and
arpl
push
lret
push
adc
fadd
addl
and
das
jg
pop
jo
inc
inc
xor
jne
lds
call
sub
jo
lods
cmp
je
outsl
pusha
cmp
icebp
inc
lret
and
adc
lods
push
test
jne
movsb
out
mov
test
xor
sub
into
nop
inc
adc
mov
fbld
in
push
sbb
cmpsb
pushf
test
mov
lea
in
pop
xchg
lods
stc
leave
add
ret
push
lods
jle
push
movsl
jl
shlb
sbb
push
pop
add
outsl
xor
cmp
xor
add
pop
das
out
mov
lods
inc
sbb
inc
call
mov
xor
je
popf
sub
call
lock
or
adc
push
fidivl
add
inc
movsb
cmp
ja
lods
mov
lcall
call
jecxz
mov
sbb
adc
cmp
mov
dec
test
into
loopne
push
xchg
push
jno
icebp
nop
fistpl
push
push
lea
popf
and
cltd
stc
enter
and
mov
in
xor
ret
aad
mov
or
scas
mov
xchg
sub
pop
sbb
xor
add
fs
mov
ss
cli
mov
mov
jmp
mov
sti
and
push
xor
int3
test
xor
pop
sub
loope
xor
into
mov
out
jecxz
pop
mov
xchg
out
pop
stos
and
mov
xor
orb
pusha
adc
pop
xchg
inc
out
fcoml
xor
push
mov
adc
mov
jne
and
mov
or
mov
sbbl
in
and
cmp
ss
adc
sub
sub
xor
adc
inc
mov
jge
les
jp
or
lcall
push
jecxz
mov
cs
stc
orb
push
aas
xor
pop
fimuls
idivl
xor
dec
inc
in
push
sar
movsb
pop
icebp
add
jg
xlat
dec
sbb
in
mov
call
inc
adc
fldpi
call
fdivrs
dec
adc
fnstcw
xor
movsl
popf
xor
sbb
cs
pushf
out
push
stos
insl
outsb
outsb
jno
sub
adc
jge
pop
sahf
fistl
xchg
push
clc
clc
push
and
aad
adc
xor
mov
mov
cmp
movsl
cmp
leave
ret
aad
shl
jbe
jmp
mov
in
sbb
in
adc
mov
cmp
sarb
aaa
xchg
imulb
mov
xor
adc
lods
clc
fs
mov
loop
cmp
out
add
lea
jp
xor
jle
enter
fwait
mov
pop
xor
xorl
adc
pop
mov
pop
ret
adc
and
mov
push
dec
push
sbb
out
dec
or
mov
push
mov
fstpt
push
scas
lret
and
mov
and
stc
add
pop
and
and
xor
sub
push
jae
inc
mov
test
adc
call
xchg
in
xor
std
inc
into
inc
dec
aas
std
dec
into
fsubl
adc
call
lea
jae
pop
push
cwtl
sub
inc
xor
or
mov
les
and
xor
fs
sbb
xor
lods
lret
movsl
test
add
push
call
push
mov
and
addl
sub
aas
adc
sub
and
cmp
mov
movsb
scas
cmp
mov
add
adc
dec
fimull
adc
xor
mov
dec
icebp
xchg
jge
pop
sbb
clc
jecxz
cli
sub
mov
sbb
shrl
loope
and
mov
enter
adc
inc
push
mov
inc
in
sub
int
or
jns
loop
adc
push
int3
dec
sbb
call
ret
test
push
scas
cmp
cmpsl
push
adc
fwait
psrlw
push
testb
cmp
inc
pop
adc
sub
mov
sub
adc
or
fsubrl
test
mov
add
in
stos
or
push
mov
test
test
inc
add
add
and
daa
loop
and
movsl
out
jne
loopne
adc
lea
sub
cmc
cwtl
int
add
call
clc
push
mov
nop
mov
add
popf
cmpsl
gs
push
std
decb
test
cld
pop
and
mov
inc
cltd
adc
es
popa
jne
add
cmovg
out
insb
pusha
dec
xchg
adc
add
jl
andb
lds
cmpsl
iret
jns
in
inc
jmp
push
dec
leave
lret
clc
loop
sub
xor
int3
and
adc
push
adc
jo
and
xchg
jns
push
and
es
nop
adc
cwtl
sub
and
dec
xor
push
dec
repnz
pop
jle
das
and
loop
or
sub
and
mov
clc
pop
movsb
xor
mov
cmc
fs
jb
adc
sbb
xlat
and
sub
jle
adc
push
inc
iret
cs
inc
mov
movsb
xor
mov
or
pop
test
mov
inc
jg
cmp
pusha
ret
dec
and
add
adc
mov
adc
mov
mov
mov
and
or
stos
pop
push
popa
push
jns
dec
imul
mov
inc
je
pushl
xchg
lods
movsl
xor
push
mov
inc
xchg
push
and
sub
inc
xchg
xchg
test
dec
mov
dec
and
loop
sbb
sub
push
movsb
xchg
and
or
mov
inc
push
mov
or
lcall
ret
cmp
mov
popa
inc
cmp
push
adc
mov
or
dec
and
or
fidivrl
jp
jae
push
call
jg
out
and
cmpsb
loop
leave
roll
or
inc
mov
fs
push
nop
enter
jmp
scas
inc
xchg
pop
inc
mov
or
pop
mov
insb
hlt
enter
jae
inc
xor
pop
adc
inc
xchg
scas
jp
xchg
dec
fs
push
mov
pop
dec
jns
xor
jecxz
out
lahf
sbb
adc
mov
negb
xchg
loop
fcomip
xor
fs
cld
push
and
adc
call
add
push
lods
jb
push
mov
and
push
lods
iret
pop
adc
mov
addb
les
push
or
int3
xor
sbb
scas
xor
cmp
pop
sti
adc
mov
je
stc
int3
fld
jo
scas
pop
mov
cli
in
insl
adc
and
sbb
inc
sub
or
mov
enter
mov
add
push
mov
orb
ja
adc
lahf
xchg
ret
sti
lcall
sbb
testb
jae
fwait
rorb
push
push
or
daa
sbb
jnp
mov
cli
repnz
pop
xor
dec
pusha
in
lock
xchg
jle
pop
sub
push
les
or
xchg
ficoms
lahf
pop
mov
ret
mov
mov
cmp
add
movsbl
push
push
fidivs
jmp
adc
push
mov
mov
and
test
xchg
add
and
jmp
mov
inc
adc
push
push
out
movsb
or
sbb
xchg
push
mov
xor
inc
add
sub
xor
out
les
call
arpl
popf
stc
test
mov
mov
mov
call
or
sbb
dec
xor
sub
daa
sbb
clc
lcall
push
push
push
pop
cli
test
mov
mov
add
jnp
pop
shr
add
mov
sub
aad
pusha
push
push
mov
jle
pusha
sbb
sbb
inc
and
ljmp
sub
xor
cmp
inc
pop
cmp
fcmove
daa
sub
xlat
xor
jae
mov
push
rcrl
daa
jns
ret
jge
cli
push
pop
es
cmp
call
push
in
mov
lea
popa
push
push
out
hlt
or
popf
push
out
xchg
ret
mov
sbb
leave
sub
mov
jno
aad
inc
mov
sbb
sub
das
or
push
xlat
mov
sub
aam
cltd
and
adc
xchg
jp
out
popl
je
test
mov
dec
pop
ret
push
dec
fs
fbld
mov
jmp
ljmp
xchg
push
push
rcrb
out
sub
movsl
out
cltd
popa
jle
dec
xor
leave
push
push
sub
unpcklps
shll
insl
push
adc
enter
mov
fnstenv
sub
cmp
add
cmp
jge
pop
jnp
jbe
nop
daa
push
jb
pop
adc
push
sub
cli
xchg
sub
out
leave
xlat
call
movb
dec
add
push
or
iret
sub
fwait
dec
mov
pushf
movaps
lahf
push
adc
mov
xlat
popf
mov
adc
ret
jo
test
and
push
sbb
bound
dec
xchg
pop
scas
and
in
inc
pop
inc
add
add
and
fisubl
dec
pop
call
nop
mov
and
nop
mov
shrb
clc
add
enter
sbb
in
clc
jmp
sub
sub
bnd
pop
call
mov
dec
dec
add
dec
cli
fs
inc
movb
sar
or
sub
or
mov
pop
push
jg
dec
add
pop
mov
xor
std
ror
sbb
jnp
sub
test
pop
or
add
jne
lea
jmp
in
pop
rorb
push
xchg
push
sbb
sub
jae
sub
inc
fmul
jb
arpl
mov
enter
daa
sbb
jbe
add
push
push
add
sub
or
clc
in
int3
pop
enter
dec
xor
dec
cmp
ljmp
xor
dec
jmp
out
shrl
dec
lahf
cmp
fs
clc
adc
sbb
or
aaa
xchg
jecxz
jns
add
lret
adc
popf
ja
scas
sub
test
sbb
xchg
jg
cmp
inc
or
adc
in
inc
call
rol
mov
mov
mov
cltd
mov
lret
lahf
test
push
inc
sub
xorb
dec
dec
loop
subl
aas
push
xor
push
adc
cmp
lea
and
dec
mov
movb
push
add
inc
jp
pop
xchg
or
pop
das
test
stc
inc
ja
mov
ljmp
pusha
xchg
xchg
pop
push
rolb
cmp
fs
xor
les
dec
add
stc
xor
ffreep
pop
adc
push
cli
shr
jl
push
push
push
test
xor
call
mov
jne
and
jmp
nop
stc
ret
jo
adc
mov
inc
push
mov
push
test
adc
or
sbb
gs
xor
idivl
add
add
sub
inc
dec
pop
incl
push
adc
mov
mov
popa
test
mov
fld1
loope
fwait
lods
cmpl
hlt
popa
push
mov
or
aaa
sbb
jbe
pop
dec
pop
sub
adc
enter
divb
cmp
imul
add
mov
stos
mov
pusha
cmpsl
sbb
scas
inc
sbb
sub
scas
inc
or
sti
cwtl
fstpl
push
jecxz
data16
aad
adc
add
inc
sbb
pop
add
push
inc
adc
mov
das
loopne
adc
mov
rcrb
out
adc
xor
mov
das
nop
movsl
mov
mov
add
lcall
cmp
add
adc
and
add
in
jae
xor
stos
mov
daa
jne
out
push
push
or
call
adc
mov
and
rorl
std
dec
push
push
push
mov
lahf
jbe
dec
inc
lock
mov
pop
sbb
push
and
push
pop
mov
dec
and
xor
in
imul
inc
jle
inc
in
inc
push
and
in
push
mov
push
and
and
mov
jae
aas
add
add
aad
out
lods
inc
push
mull
cmp
push
push
and
in
mov
lds
mov
sub
jmp
mov
sarl
je
and
xchg
or
mov
cmp
push
cmp
xor
std
fwait
inc
sub
xor
and
mov
into
in
shlb
mov
push
lret
in
or
jp
xchg
sub
arpl
aaa
adc
sub
lea
scas
push
imul
mov
pop
push
dec
mov
inc
lea
or
mov
inc
cs
mov
jecxz
ss
loop
xor
pusha
loop
xor
mov
and
pop
xor
adc
adc
dec
push
adcl
dec
ret
mov
xor
repz
sahf
jb
dec
imul
jge
push
pop
inc
xor
sti
pop
cmpsb
lret
jnp
mov
jmp
test
push
xchg
push
loop
sub
push
or
cmp
ljmp
jl
jmp
adc
std
arpl
inc
mov
sbbb
adc
nop
xchg
mov
and
xor
xor
rsqrtps
mov
push
lret
xor
sub
cmp
pop
cmc
adcl
stos
repz
arpl
sbb
pop
xchg
mov
test
xchg
push
push
push
in
push
and
jne
adc
hlt
test
mov
pop
loope
jne
or
mov
cwtl
rolb
in
js
lds
or
stc
cmp
dec
movsl
dec
js
sbb
push
jns
mov
or
popa
sbb
outsb
cmp
inc
aas
and
mov
sub
int
push
jg
jne
outsl
or
sub
xor
aaa
jmp
fs
cmp
scas
xor
test
in
pop
cli
lret
xlat
in
nop
pop
loopne
sub
mov
xor
add
mov
js
and
dec
enter
push
xor
je
sbb
inc
jge
mov
bound
jno
pop
inc
and
call
ds
jo
inc
push
fmul
movb
cwtl
jecxz
xchg
lcall
int
enter
subl
jp
adc
test
mov
sar
push
sub
and
sub
daa
and
or
adc
sbb
pop
sub
test
xchg
leave
jnp
lcall
dec
daa
xorb
jnp
sub
in
push
mov
push
insl
xchg
mov
and
push
test
test
xchg
aaa
lret
jb
xchg
test
mov
mov
out
pushl
into
ret
inc
ss
filds
sarl
add
push
cmpl
dec
pop
mov
movsl
push
stos
mov
sub
lock
cmp
jmp
inc
cs
add
clc
cs
loop
xchg
push
frstor
add
mov
xor
cmp
mov
inc
add
jbe
add
fcomps
sbb
adc
ror
mov
bound
movl
lret
out
rclb
add
mov
sbb
or
mov
jmp
or
roll
add
int
push
cmp
and
adc
xor
es
dec
rcl
movsl
pop
mov
sbb
fyl2xp1
fcoms
or
mov
jge
xor
pop
push
add
jne
addb
ljmp
dec
nop
loopne
push
call
hlt
clc
jp
mov
test
lock
and
push
movb
push
inc
xor
inc
inc
dec
mov
push
and
inc
mov
mov
inc
aaa
decl
or
out
imul
out
test
pop
stos
movsl
bswap
pop
test
sub
xor
repz
and
inc
push
xor
and
and
push
cld
mov
adcb
mov
call
cli
pop
filds
out
jle
leave
adc
frstor
mov
inc
sbb
push
cld
push
lea
add
add
mov
add
jle
push
stos
sbb
scas
push
mov
adc
mov
and
dec
push
jle
sbb
call
or
xchg
daa
fisttpl
and
shrb
rcll
xor
push
mov
add
pusha
mov
jno
and
sub
mov
bound
pop
jl
pop
imul
push
pusha
xor
push
jns
mov
lret
orl
test
insb
or
add
jne
out
ret
es
jne
lock
add
and
out
je
cmp
sbb
and
test
pxor
sar
cmpxchg
out
xchg
and
or
out
sahf
add
sub
or
ss
pusha
adc
push
and
mov
mov
jmp
and
test
inc
inc
or
jp
xor
or
mov
jnp
mov
jne
nop
jno
stc
push
lods
arpl
xor
mov
inc
adc
lcall
data16
and
cmp
sub
cwtl
sub
cmc
das
sbb
cmp
push
or
bound
dec
or
sarl
cmp
jne
mov
pop
mov
roll
fnstenv
gs
leave
jne
mov
ficompl
push
lea
stos
cltd
push
ds
inc
into
or
outsl
out
adc
push
cmp
mov
jne
call
push
push
sbb
pop
icebp
add
mov
ja
jl
dec
loopne
imul
jl
sub
jo
push
xlat
mov
cltd
ficoml
xor
jns
add
jle
mov
or
inc
add
rclb
dec
push
jg
add
mov
pushf
xchg
pop
adc
push
mov
mov
jmp
iret
je
sti
mov
nop
mov
jg
fsubrl
and
leave
jno
push
leave
addb
cwtl
std
pushl
test
sub
or
out
lahf
xchg
sbbb
or
mov
lahf
decb
dec
stc
popf
cmpsl
pop
scas
fsubrl
push
and
mov
sbb
sbb
xchg
sub
data16
decl
pop
push
call
cmp
iret
adc
mov
push
mov
add
jne
mov
dec
incb
mov
fs
dec
and
divb
loope
jo
xchg
xor
push
mov
push
mov
mov
and
sub
mov
push
xor
inc
and
cmp
xchg
aam
dec
jmp
push
dec
push
pop
push
into
movsb
or
pop
pop
push
lods
call
xchg
xor
adc
push
imul
fdivrs
popf
std
pop
push
and
pop
add
xor
ljmp
sub
ja
ja
loope
addr16
and
xchg
pop
push
into
mov
les
and
inc
ds
aas
lret
push
jb
jb
cltd
xor
mov
and
push
or
pop
dec
sub
adc
mov
iret
mov
adc
adc
mov
mov
out
jnp
popa
jne
push
lcall
data16
sub
fcmovu
inc
pop
adc
jge
push
clc
push
mov
movsl
popf
shlb
fldcw
adc
push
mov
insb
sub
xchg
jo
test
test
mov
push
sbb
sub
sarb
pop
pop
mov
stc
or
das
idiv
mov
xor
pusha
or
push
mov
push
aam
in
cmp
lods
pusha
jmp
shll
jne
lcall
lock
int3
jle
mov
mov
imul
mov
insl
mov
sub
popf
add
or
cmp
push
out
and
inc
nop
and
push
jg
pop
jecxz
dec
loopne
mov
lcall
enter
dec
mov
or
or
dec
lods
ja
inc
dec
jmp
movsl
push
es
jb
movl
xor
fildl
mov
test
mov
dec
scas
and
enter
push
repz
js
dec
fs
js
or
nop
or
cmp
push
adc
js
mov
cld
mov
cs
xor
ret
pop
sahf
mov
inc
ds
push
call
scas
xchg
dec
shrl
xor
or
movsl
adc
push
add
test
push
je
jmp
push
lea
movl
popf
std
mov
xlat
adc
xor
push
push
adc
adc
imul
bound
pop
fwait
leave
stc
mov
scas
mov
push
jmp
movsl
xor
ljmp
jg
mov
dec
push
out
xor
cmp
dec
pop
add
adc
add
jmp
orb
xor
cmp
mov
hlt
cmpb
test
fisttpl
and
lock
insl
outsb
inc
repnz
je
xchg
pop
xchg
adc
lcall
sub
mov
add
sarb
clc
add
xchg
ret
repnz
int3
pop
cwtl
enter
pop
rclb
add
or
imulb
sbb
add
rcl
sti
mov
sti
add
lods
sar
movsl
pop
fisttps
pusha
push
leave
mov
cs
scas
push
mov
inc
mov
jl
mov
lods
rorb
jnp
jle
shl
pop
jnp
jae
cli
sbb
loop
cmp
jb
pop
xchg
xlat
cs
outsb
gs
mov
sub
dec
add
push
repnz
mov
jle
pop
hlt
les
adc
push
or
stos
les
pop
sbb
add
aam
xchg
jl,pt
xor
aaa
jl
push
push
lock
dec
fwait
daa
adc
jg
rcrl
add
pop
xchg
jns
xlat
shlb
in
fldenv
imul
cmp
lahf
jl
mov
in
leave
icebp
dec
shlb
sub
mov
sub
xor
fdivr
ljmp
shlb
xchg
mov
dec
xchg
and
ret
sub
nop
lods
mov
scas
addr16
or
je
int3
xor
jle
cli
ljmp
sub
push
pushf
mov
xchg
ret
cmp
cmp
inc
inc
fsubrs
mov
into
jp
and
rep
mov
or
leave
or
add
xchg
inc
mull
fistpl
adc
cmpsb
xor
outsl
dec
pop
popa
cmpl
or
lea
sub
sbb
enter
arpl
cli
mov
jo
mov
mov
shr
or
or
bound
outsl
jne
cli
push
lds
mov
xchg
dec
cmp
int3
repnz
hlt
inc
loopne
leave
jns
cwtl
mov
in
xchg
es
inc
sub
and
movsb
mov
test
fs
cltd
insb
mov
in
jo
xchg
and
lcall
jg
rcr
in
cld
xchg
dec
pop
sub
leave
or
push
call
cld
dec
shrl
and
nop
aad
push
mov
inc
mov
jp
pushf
js
mov
xchg
mov
call
inc
or
sub
bound
sub
push
pusha
xor
decl
add
sbb
push
call
lock
and
add
mov
add
sbb
mov
mov
xchg
fs
pop
bound
fxch
jb
add
add
adc
push
xor
add
les
sub
and
sbb
pop
aad
mov
xchg
mov
pop
mov
shll
aas
fstpt
or
lea
dec
push
push
les
stos
push
pop
add
call
or
aam
cmp
inc
ret
faddl
gs
push
lods
sbb
es
rcrl
nop
or
je
push
sub
test
push
mov
sub
dec
xor
ljmp
inc
mov
or
or
or
leave
add
jo
icebp
les
xor
cmc
inc
adc
dec
enter
push
or
test
lock
call
xchg
in
jnp
or
xchg
jl
sbb
add
mov
sahf
andb
xchg
orb
stos
out
stc
xchg
push
divl
dec
mov
lea
adc
or
out
imul
je
xor
pop
pop
cli
push
lods
mov
push
dec
sarb
jle
call
or
scas
pop
in
mov
xor
and
xchg
or
in
fwait
and
and
ja
loop
lea
or
sbb
adc
push
xor
push
addr16
sub
fdivrs
cmp
adcb
adc
dec
inc
fbstp
dec
sbb
sahf
cmp
and
sbb
xor
rcll
add
ret
jmp
stc
and
xor
cmpl
and
jmp
xchg
sbb
fnstcw
inc
rcrb
mov
in
rol
jne
mov
dec
imul
cli
in
pusha
movsl
loope
aas
mov
fildl
ret
and
sub
push
ja
incl
lock
sbb
and
mov
dec
cmp
movsb
sub
cmp
int3
sub
subb
and
in
mov
and
or
jmp
and
repnz
adc
or
inc
sub
pop
aam
mov
loope
lcall
mov
inc
inc
sub
mov
jne
repz
xor
or
jl
in
mov
and
bound
leave
loop
and
xchg
rcr
test
pop
in
jmp
xchg
ret
addr16
xchg
jnp
popa
daa
jne
xchg
pop
or
cmp
ja
mov
stos
ret
adc
pushf
xor
jmp
shll
sbb
nop
sub
sub
mov
sub
sbb
mov
mov
push
hlt
push
sub
rcll
jae
scas
es
loop
jnp
adcl
sbb
hlt
add
and
push
add
into
dec
adc
and
dec
sub
jmp
sub
mov
jmp
jg
inc
stc
sub
fwait
and
adc
loop
jmp
out
rcrb
jle
inc
ret
lea
loop
xchg
pop
rorl
dec
pop
or
or
je
imul
cmp
loop
pop
cs
and
ucomiss
ds
pop
pop
test
sub
and
and
cmp
jle
lea
or
push
out
cwtl
inc
jno
push
dec
inc
mov
pop
fwait
sub
cmp
cltd
out
sub
bound
sbb
repnz
mov
push
cmpb
test
inc
push
sbb
push
pop
cltd
jmp
push
xor
push
jae
adc
push
dec
jge
or
in
inc
test
testl
ja
pop
movsl
in
leave
xlat
data16
cmp
xchg
dec
rorb
mov
mov
mov
jp
inc
and
ret
fstl
leave
jne
call
push
sub
fsubrs
adc
in
add
xor
push
fsubs
xchg
das
ljmp
je
pop
push
fwait
jge
rclb
jp
dec
push
xchg
or
or
es
cmc
rcrl
out
out
dec
or
dec
leave
push
and
push
mov
push
xchg
outsb
pop
data16
sbb
and
nop
inc
jp
xor
or
dec
inc
cld
fildl
stc
add
sub
xchg
call
ret
adc
out
xor
das
movsl
jb
dec
or
int
aad
mov
push
fucomip
dec
adc
push
js
dec
cwtl
jne
dec
or
das
push
int3
mov
dec
dec
add
jmp
outsl
add
loopne
hlt
mov
xchg
dec
dec
popa
pop
xor
xor
adc
sti
test
jmp
in
aas
xchg
icebp
mov
in
pop
push
aas
lods
push
fwait
js
inc
movsb
mov
les
js
notb
pop
lea
add
push
dec
xlat
add
add
push
cmpl
shl
addr16
or
pop
je
dec
sbb
jns
dec
inc
mov
fildll
sub
add
in
aam
pop
and
jl
pusha
or
push
mov
push
push
repz
and
mov
lea
incl
mov
push
out
divb
or
cmpsb
mov
lods
arpl
lret
xchg
sqrtps
xchg
cwtl
inc
repz
jge
call
das
mov
lods
aas
and
nop
test
shll
mov
jl
push
push
les
fwait
pop
sub
mov
add
mov
mov
mov
adc
pop
fbld
or
push
push
in
mov
das
xchg
les
movl
dec
pop
xor
mov
push
and
and
leave
push
cmp
pop
push
pop
jmp
loopne
lret
xor
test
je
icebp
add
sbb
and
pop
sbb
movl
xchg
fsubs
sub
pusha
adc
stos
imul
adc
pop
jnp
lock
pushf
jo
mov
jle
mov
call
cmp
fs
icebp
add
movswl
adc
or
jne
rolb
mov
inc
sbb
mov
enter
pop
jno
daa
jl
dec
hlt
pop
jle
push
pop
and
add
xorl
dec
cmp
orb
add
jge
ficomps
daa
inc
jo
in
fisubl
cltd
repz
fstp
leave
pop
add
dec
adc
loopne
jmp
fiadds
mov
and
and
movsb
rclb
xchg
mov
or
cmc
xchg
adc
sbb
sub
inc
adc
mov
dec
sub
popa
jmp
mov
js
push
iret
dec
add
in
fwait
xor
lahf
add
xchg
outsl
clc
xchg
pop
aam
loope
jnp
mov
into
cmc
adc
mov
fs
loop
inc
pop
pop
ret
neg
xchg
mov
call
jle
and
dec
incb
mov
or
mov
push
mov
cmovge
inc
shrb
sbb
lea
mov
nop
mov
sbb
push
jno
addr16
pop
imul
nop
ljmp
shll
mov
push
fidivrs
jb
pop
dec
mov
movsb
adc
pop
aas
add
mov
xor
imul
or
jecxz
fnstenv
stc
add
sub
repz
call
rcrb
rorl
sarb
cli
add
sub
push
sbb
push
stc
dec
xchg
jl
sarl
xor
mov
cmpsl
jno
inc
popf
jb
add
je
mov
ss
push
sub
add
dec
fnstcw
pop
add
les
mov
push
je
call
push
sahf
mov
and
sub
popa
aam
cli
mov
js
inc
xorl
cmp
adc
push
adc
xchg
xchg
dec
int
jnp
popf
adc
push
or
mov
push
lods
or
loope
pop
mov
cmp
stc
cmp
shl
test
andl
movsb
xor
jbe
in
or
sbbb
push
push
xchg
xor
mov
int
inc
jg
adc
daa
mov
test
pop
mov
sbb
scas
or
loop
push
cmp
push
push
adc
lock
cmp
fs
out
fsubl
cmp
jno
push
leave
ds
leave
push
ret
mov
or
enter
das
sar
pop
nop
rcll
pop
adcl
enter
fstps
sarl
sub
sub
xchg
shrl
mov
dec
or
fists
es
dec
push
and
lret
fs
in
icebp
mov
pushf
push
lea
xchg
lcall
mov
or
xchg
int3
push
movsb
or
lock
mov
inc
add
mov
and
shr
adc
push
sbb
loope
adc
cs
cmpsb
sub
stos
repnz
dec
fisubl
add
mov
lahf
bound
adc
adc
repnz
imul
adcb
fistl
ret
test
nop
and
shl
and
adc
jne
lahf
leave
lcall
aam
mov
into
xor
out
dec
cmp
and
ret
inc
arpl
fwait
add
sbb
cltd
inc
push
sbb
mov
push
xchg
adc
xchg
out
push
movsl
xor
lock
adc
bound
faddl
std
popa
mov
push
cwtl
cmpsb
xchg
movb
fsts
and
in
fwait
and
call
roll
je
icebp
adc
dec
cmp
add
hlt
daa
jmp
mov
jns
dec
and
jp
int3
xor
dec
outsb
leave
jno
call
lahf
push
imul
cmovs
pop
aas
inc
lsl
jmp
test
rorb
shll
cmp
call
int3
mov
xor
lods
inc
mov
icebp
orl
mov
mov
jge
mov
mov
iret
imul
insb
sub
je
les
enter
nop
decb
call
fisubrl
xchg
es
jne
inc
rcrl
lock
sub
dec
test
push
or
test
lahf
pop
sub
push
mov
xchg
mov
jns
mov
add
dec
inc
in
sbb
out
mov
rcl
mov
inc
repnz
stc
into
sbb
ja
jae
cwtl
enter
inc
aad
mov
adc
imul
cmpsl
test
xchg
and
pop
shl
pop
mov
in
mov
loope
aam
lcall
push
push
jp
ljmp
orl
loop
or
mov
shr
jbe
js
xchg
adc
pop
jne
mov
leave
pop
pop
addb
inc
jg
jl
dec
cmc
inc
or
jne
add
mov
mov
movsl
in
adc
and
pop
cltd
sbb
pop
adc
mov
leave
mov
in
adc
cmpsb
cli
das
fwait
or
data16
push
inc
and
adcb
shll
dec
pusha
cli
or
test
adc
add
std
aad
enter
outsb
mov
nop
loope
call
jno
sub
jge
mov
jo
push
test
adc
pop
jecxz
nop
fisubl
pop
adc
mov
mov
mov
stos
cmp
jae
mov
jmp
or
ret
mov
fadds
out
in
mov
cld
cmp
sub
jbe
push
sub
xchg
add
add
pop
and
push
les
imul
jmp
push
hlt
call
rcrb
dec
popf
inc
dec
into
push
add
ja
loope
xor
sbb
mov
mov
adc
int3
push
call
fidivl
sti
bound
add
lea
mov
cs
into
inc
movl
fmulp
sbb
dec
test
mov
pop
cmpsl
mov
movsl
ret
push
cmpsl
inc
push
sbbb
pop
stos
rcr
leave
push
xor
mov
sub
cs
sub
fistps
out
or
and
stos
jg
sar
inc
lods
push
mov
outsl
out
cmpsb
jmp
insb
jp
fninit
jae
mov
lea
mov
into
adc
fldt
repnz
stos
shll
ja
push
inc
or
push
mov
outsb
ja
call
dec
in
sarl
cmpb
or
mov
or
xchg
jg
shll
mov
mov
jne
testb
testb
inc
lcall
arpl
mov
dec
xchg
pop
xchg
into
dec
and
shlb
dec
jle
and
cwtl
push
and
or
push
data16
out
jmp
cli
inc
push
call
jo
or
test
rolb
enter
rcll
ljmp
rorb
jl
and
pop
add
xor
out
push
xchg
mov
pop
push
sti
fsts
sbb
cmp
and
dec
mov
jo
insb
mov
jne
sti
sbb
aam
mov
jmp
add
lock
jle
mov
in
mov
call
cmpb
leave
inc
push
inc
stc
ljmp
and
popf
iret
ret
inc
add
add
pop
mov
std
sbbl
mov
aas
push
adc
aad
sbbb
subb
push
cmp
bound
lds
test
or
popf
cmp
or
xchg
and
nop
push
je
jle
mov
xor
inc
push
cld
subb
insl
jl
int3
push
adc
stc
inc
inc
jne
lea
add
sub
bound
adc
jmp
lret
enter
imul
mov
loop
lods
push
unpckhps
and
xor
pop
test
add
xchg
adc
adc
jle
fisttps
add
xor
imul
shlb
mov
and
inc
je
sbb
push
and
inc
add
jg
ljmp
shll
cmp
sub
fadds
cmp
mov
adc
mov
shrl
lock
or
clc
or
mov
jmp
mov
adc
dec
dec
dec
stos
test
mov
sub
dec
loop
xlat
lods
cmpsb
cmp
jmp
mov
into
dec
pop
lods
popf
sahf
in
mov
push
scas
xchg
gs
fbstp
inc
jb
adc
jo
pop
shll
lds
or
leave
outsb
mov
jb
mov
jne
inc
and
sarl
pop
xchg
sub
sbb
xchg
emms
inc
rcl
aam
iret
jo
sub
push
jge
mov
aam
pop
aas
popa
aam
and
xor
lds
in
mov
out
push
adc
rcrb
adc
enter
xchg
jle
dec
popa
jbe
cmpsb
mov
lret
fdivrl
jg
sbb
pop
dec
push
add
popa
lret
xor
adc
cmp
add
and
mov
mov
mov
jg
leave
fld
push
daa
in
dec
sbb
enter
push
adc
loop
cmp
mov
dec
add
xchg
xchg
inc
test
dec
outsb
mov
out
push
rcl
mov
or
mov
mov
add
add
cmovs
mov
mov
neg
push
pusha
pop
push
mov
inc
and
addb
pop
or
push
push
xchg
aad
lret
pop
sub
dec
or
jmp
add
enter
adc
or
scas
out
or
adc
rcrb
call
loop
push
inc
jmp
rorl
lret
and
dec
fwait
xorl
push
adc
enter
data16
mov
push
mov
stos
and
mov
in
rolb
mov
repz
je
xchg
mov
jne
cmp
xor
mov
cltd
movsl
iret
divb
inc
dec
push
std
loope
insb
jmp
mov
or
jmp
mov
mov
aaa
push
mov
or
dec
cmpsl
in
mov
into
rolb
clc
pop
inc
int
inc
mov
mov
cld
insb
add
test
push
and
pop
sarl
clc
dec
rorl
adc
mov
xchg
jb
dec
cmp
mov
push
je
mov
out
push
arpl
jne
mov
lcall
sub
jp
add
and
mov
xor
and
sahf
adcb
xor
arpl
and
jbe
mov
imul
dec
mov
push
xor
bound
mov
mov
jl
push
adc
mov
mov
leave
orb
or
jle
jp
lock
add
cmpl
push
cmp
mov
jbe
inc
mov
mov
lret
sbb
adc
mov
call
mov
nop
jbe
adc
jl
xchg
movsb
cld
orl
sbb
inc
orl
xor
inc
dec
fsubs
cs
fbstp
decb
lods
mov
dec
scas
int3
jle
rorl
lock
adc
jmp
mov
aad
xor
mov
xchg
icebp
sbb
or
hlt
adc
inc
push
jmp
push
jg
popa
or
inc
adc
data16
pop
or
push
lea
xchg
or
cld
inc
pop
xor
scas
scas
push
popa
in
dec
xchg
or
leave
js
push
leave
mov
test
mov
sub
call
adc
movsl
push
mov
mov
add
stc
iret
adc
mov
sbb
in
mov
notl
into
mov
mov
sbb
test
or
icebp
dec
inc
pop
inc
dec
shl
fwait
cmp
xchg
lahf
popa
sub
repz
and
stos
and
leave
xchg
fiaddl
ja
iret
mov
push
lds
adc
sub
xor
ljmp
out
lods
or
out
test
mov
mov
xchg
or
adc
or
push
pop
fstl
aaa
add
mov
adc
mov
and
add
xchg
jne
mov
and
and
cmpb
push
push
mov
fs
rcll
test
dec
gs
xchg
xlat
adc
cmp
popf
dec
mov
outsl
call
or
mov
xchg
mov
push
add
jne
mov
push
inc
jo
insl
orb
add
sahf
push
imul
xchg
dec
push
jae
or
lret
test
pop
mov
sub
mov
nop
xchg
into
jl,pt
movsl
push
push
adc
mov
out
mov
scas
adc
cmp
adcl
neg
cmpsb
cmp
dec
sub
inc
test
std
sub
pop
adc
pop
cmp
hlt
mov
jg
and
dec
call
adc
movsb
scas
mov
leave
or
jle
pop
adc
push
scas
dec
mov
icebp
je
js
mov
test
lahf
cltd
sub
jo
inc
mov
mov
push
int
stc
inc
movsb
xor
sub
mov
and
push
push
or
enter
xor
or
mov
adc
or
lret
mov
dec
mov
sbb
sbb
and
push
sub
and
adc
jo
mov
add
ljmp
sub
pop
push
pop
add
sarb
xor
loop
out
inc
sbb
jns
icebp
adc
sub
mov
call
rolb
enter
jge
jns
scas
fsubs
push
push
pop
sbb
sbb
mov
cmp
cmpb
mov
aaa
hlt
mov
dec
inc
add
push
or
in
bound
push
mov
xchg
pusha
aad
add
ss
loope
fisubrl
mov
jae
pop
push
sub
adc
divb
fists
inc
inc
or
rorb
mov
add
lea
xchg
pcmpeqw
cs
sub
lock
push
xchg
adc
cmp
pop
jmp
cmp
je
into
push
adc
jne
inc
insb
nop
lods
je
xorl
lock
inc
jno
mov
and
ljmp
inc
mov
mov
icebp
insb
nop
ljmp
loope
mov
rorl
and
repz
pop
inc
js
mov
lods
in
aas
cltd
jp
or
xchg
rorb
cmpsb
pop
daa
je
fldenv
bound
and
test
int3
mov
xchg
das
and
icebp
test
in
push
fsubp
sbb
test
loopne
jmp
xchg
mov
push
inc
clc
cmc
les
aad
pushf
jge
push
jne
push
mov
test
sbb
dec
pop
mov
cltd
push
cmp
xchg
mov
shlb
cmp
call
or
push
into
or
push
lea
mov
sub
mov
jae
cmp
je
or
mov
outsb
outsb
or
loop
jmp
jp
mov
aad
inc
and
test
jmp
pusha
or
dec
ds
xchg
sbb
jb
sar
push
notl
sub
je
dec
pusha
mov
stos
das
bound
pop
data16
mov
shll
xchg
dec
dec
pop
ss
pop
jo
dec
das
ret
sub
or
jno
or
lcall
push
out
mov
mov
push
lahf
adc
push
mov
pop
stc
adc
mov
rcl
orb
mov
test
in
inc
pop
jp
int3
adc
adc
les
je
out
icebp
xor
cmp
add
inc
movl
orl
cwtl
add
push
adc
adc
cli
fwait
mov
mov
dec
loope
jg
pop
sbb
std
aaa
add
stc
addl
aas
cmp
mov
pop
jae
clc
mov
push
iret
shr
loope
mov
add
cmp
jb
rol
sbb
iret
xor
push
loopne
lods
or
iret
push
push
push
cld
jmp
aas
cs
fbstp
sbb
xchg
rcll
clc
ja
inc
orl
cmp
add
jmp
lds
std
add
inc
lahf
push
mov
cltd
imul
pop
stos
jnp
xchg
stos
out
inc
loope
sbb
ja
mov
lods
cmpl
cmp
sbbb
icebp
adc
push
push
cmp
and
lahf
and
lods
mov
sub
lock
dec
jmp
cltd
xchg
xor
cltd
jb
nop
loop
movsb
call
mov
sub
addr16
icebp
pop
sbbb
sbb
cmc
roll
fistpll
rorb
lret
and
inc
iret
or
sbbb
mov
movsb
push
idivl
mov
pop
int3
xor
push
enter
not
lret
mov
and
add
arpl
cld
subl
cs
rcr
add
shlb
xlat
xchg
call
loop
rorb
pushf
adc
jo,pt
jg
rol
ljmp
add
dec
fisubl
push
idivl
fsubs
fnstsw
sub
pusha
inc
pop
out
into
mov
out
popa
jmp
or
push
inc
add
cmpl
aas
pushf
pushf
pushf
stc
test
bound
add
lret
xchg
add
lea
cmc
fcoms
out
sahf
and
lock
data16
and
cmp
ret
push
xor
fiaddl
xchg
shll
inc
or
stc
or
xor
xchg
or
lds
or
inc
xor
xor
or
and
add
dec
sahf
jecxz
flds
sahf
sub
sahf
xchg
cmp
sub
sahf
cmpb
ds
sahf
out
sbb
data16
inc
repnz
leave
std
dec
inc
and
maskmovq
testl
cli
stos
xchg
and
mov
push
pop
lcall
inc
invd
adc
and
lret
dec
add
sahf
cmpb
inc
inc
sahf
js
fldl
sahf
sub
sahf
fwait
dec
xor
sahf
inc
repnz
adc
pop
and
nop
ror
push
mov
cwtl
std
inc
adc
or
mov
inc
ret
not
and
push
dec
jno
lds
adc
add
xor
fbld
loopne
or
push
adc
cmpsb
js
and
mov
jg
push
cmpsb
sub
pusha
sbb
or
sbb
bound
notb
fs
test
ror
cmp
xor
mov
pop
adc
je
and
dec
out
nop
pop
add
xchg
leave
adc
push
or
fimull
fsubs
mov
mov
cltd
adcb
and
fldenv
stc
test
ror
xor
cld
pop
adc
test
add
xchg
shr
out
or
push
lds
adc
add
inc
shll
pop
dec
or
rol
pop
mov
cmpsb
adcl
add
mov
push
nop
add
xchg
pop
fildll
sbb
cmpsb
pop
adc
sti
movsb
out
mov
jb
shrb
std
or
test
loope
and
add
adc
push
xchg
ljmp
roll
mov
or
cmp
adc
sub
pushf
push
lcall
mov
adc
inc
mov
movl
cmp
add
pop
inc
and
cmpsb
sub
xchg
leave
iret
mov
push
inc
call
test
push
rcrl
jmp
nop
iret
add
mov
dec
shr
add
int
inc
pushf
std
daa
cmp
filds
test
flds
outsl
push
lds
adc
add
adc
sbb
mov
mov
xchg
push
loopne
sbb
jb
mov
repnz
cmp
jle
flds
or
or
ljmp
lret
data16
or
jo
mov
and
xchg
lret
push
add
and
insl
and
mov
jae
js
xchg
xor
cli
xor
and
xor
and
in
mov
inc
call
add
xor
rclb
sub
mov
movsb
call
mov
dec
gs
jb
cmp
test
mov
lahf
add
loop
adc
add
xor
xchg
rol
rorl
dec
mov
loopne
flds
out
call
lea
mov
in
cmp
not
mov
sbb
add
jle
sub
jp
cli
stc
in
test
cli
adc
mov
jecxz
mov
fbstp
xor
aam
inc
adc
or
ljmp
mov
and
jmp
xchg
adc
cmp
aam
js
lret
inc
call
dec
iret
or
cltd
inc
adc
or
cli
xchg
imul
mov
cmp
xor
out
ret
andb
les
jecxz
inc
jmp
mov
lret
sub
addl
sbb
adc
dec
add
hlt
and
inc
xchg
bound
add
xchg
push
orl
rclb
xchg
mov
stos
inc
adc
nopl
test
xor
xchg
cld
mov
inc
mov
movhps
or
fisubl
pop
gs
and
loope
fwait
adc
add
int3
or
and
add
jge
and
out
incl
and
pop
test
or
jle
inc
outsl
out
enter
fwait
les
loopne
sub
or
orl
adc
add
stc
push
adc
loopne
clc
ljmp
jle
notl
ljmp
dec
add
repnz
cmp
inc
popf
roll
mov
adc
nop
push
outsb
or
roll
dec
push
add
call
inc
mov
pop
mov
lods
loope
jge
addr16
xchg
add
cwtl
mov
mov
icebp
push
push
mov
cmp
push
cmp
mov
mov
lea
inc
add
repnz
adcl
mov
cmp
sti
xor
or
and
add
or
add
lds
push
cmp
jb
pop
pop
push
add
in
jbe
mov
mov
inc
add
stc
xor
sbb
mov
xor
or
popa
arpl
lret
jge
push
or
lea
cmp
int
aad
cs
nop
ljmp
cmpsl
cltd
add
enter
or
dec
jne
and
rclb
push
jbe
mov
push
jg
jns
pop
sti
mov
sub
or
jbe
jno
sub
lock
pusha
out
xchg
notb
pop
add
out
mov
add
call
push
sbb
enter
lret
and
ja
pop
sahf
inc
mov
pushf
add
xor
lcall
clc
or
inc
and
nop
add
xor
bound
or
outsl
popf
jbe
movsl
ja
or
mov
xchg
adc
push
loope
sbb
pop
and
mov
pop
jle
dec
add
and
mov
stos
test
jecxz
add
scas
into
or
pop
sbb
xchg
pop
and
fs
enter
call
or
aad
or
xor
je
add
mov
mov
ret
lods
cld
jp
dec
lahf
add
in
add
add
xor
clc
shlb
sbb
in
xchg
lahf
bound
xchg
mov
and
and
and
adc
loop
inc
test
cmpsb
xchg
push
mov
inc
xchg
inc
in
pop
push
test
or
repnz
movb
shl
xor
mov
hlt
push
scas
lea
insl
aas
adc
or
push
mov
dec
xchg
sahf
push
fmuls
enter
cmp
or
mov
xchg
movsb
loope
orl
test
loope
xorb
mov
xorb
fs
adc
cmp
and
dec
stos
xchg
adc
cmp
push
cmp
or
xchg
test
dec
xor
dec
test
test
xor
push
pop
fwait
add
add
push
push
inc
fwait
or
inc
mov
and
inc
or
lock
xchg
jge
hlt
or
and
mov
ficoms
data16
pop
inc
pop
pop
jle
xchg
pop
xchg
push
mov
je
lahf
movsb
lret
push
inc
cs
and
xor
in
or
cltd
jle
popf
xchg
pop
inc
cmp
cmp
add
cs
push
es
push
adc
bound
std
add
test
mov
pop
jo
xchg
jmp
sub
jne
aad
mov
sub
popa
push
into
test
inc
mov
cltd
push
es
push
xor
cmpsl
mov
inc
mov
or
sub
dec
or
pop
mov
sbb
je
push
inc
mov
push
fs
mov
nop
or
je
mov
lds
mov
jl
sbb
dec
add
xor
repz
add
mov
inc
dec
scas
pusha
std
fwait
cld
mov
push
mov
dec
clc
adc
sub
push
push
int
out
movsb
cld
sbb
push
inc
push
or
ljmp
test
push
push
mov
xor
mov
fcoms
test
push
sbb
lea
push
pushf
adc
mov
push
ja
add
mov
inc
orl
adc
bound
inc
xchg
adc
xchg
add
test
xchg
ds
xor
sbb
adc
fcoms
and
clc
add
dec
pop
push
rorl
in
inc
pop
stos
pop
mov
cmc
fs
enter
push
daa
orb
inc
lds
adc
negb
nop
xchg
scas
je
test
or
push
xor
adc
imul
gs
dec
out
das
adcl
lea
cmp
enter
je
fucom
mov
push
adc
xchg
mov
fnstsw
jo
inc
mov
push
adc
xchg
lock
cwtl
scas
mov
mov
mov
mov
and
daa
out
pop
lcall
push
test
nop
sbb
inc
dec
jne
mov
mov
adc
and
cmpsl
jg
dec
add
nop
cld
imul
mov
shrl
mov
dec
or
ficoml
xchg
repz
ret
dec
mov
sub
fmuls
lret
jb
imul
add
ret
cmp
xor
and
and
pop
push
mov
sbb
or
jp
shll
loopne
inc
clc
add
push
jne
push
jne
stos
jne
xor
int3
push
push
dec
in
fcompl
sbb
dec
es
adc
xor
mov
jbe
popf
popaw
mov
aad
lea
mov
mov
lea
inc
pusha
push
add
or
jecxz
jle
lea
mov
or
jne
inc
cli
shr
imul
sbb
adc
mov
mov
inc
jle
dec
lea
imul
stc
clc
loope
jno
xchg
mov
and
lock
inc
cld
jae
insl
adc
stos
leave
inc
push
insl
mov
call
mov
call
mov
inc
mov
and
adc
add
and
cmp
jmp
xor
lea
jno
popa
test
add
xchg
push
jle
xor
and
push
sub
push
and
sub
int3
scas
add
dec
pop
jne
nop
mov
test
test
out
xchg
popf
decb
xor
in
daa
push
fstpl
add
adc
mov
mov
add
in
lods
push
in
mov
push
adc
jno
adc
sub
or
xchg
into
or
icebp
mov
js
or
push
call
jns
or
sub
mov
mov
cmpsl
loopne
dec
out
in
gs
adcb
cmp
movb
xchg
inc
add
xchg
adc
push
adc
sub
mov
hlt
mov
push
out
call
enter
or
sub
mov
pop
enter
and
jmp
test
pusha
jg
rcll
inc
andb
and
push
and
sub
mov
or
sete
adc
imul
aad
out
insb
cmp
dec
xchg
nop
stc
out
ret
xor
push
mov
add
out
pop
dec
mov
into
testb
mov
xlat
jmp
push
mov
cmpsb
jl
incl
xchg
push
push
out
mov
adc
adc
call
mov
test
xchg
daa
nop
sbb
inc
add
jne
and
jns
sbb
cmp
mov
rorb
jp
lea
or
adc
das
mov
mov
les
sub
pushf
mov
mov
push
mov
and
movsl
inc
lea
add
xchg
nop
or
xchg
pop
jmp
mov
mov
outsb
lea
push
jmp
push
lock
lds
cmp
mov
mov
jno
addr16
pop
cmpsl
mov
jge
das
push
xor
int3
icebp
push
xchg
xchg
insl
push
adc
adc
dec
ljmp
lahf
popf
xlat
popf
orl
repz
je
and
dec
pop
xor
scas
xor
mov
xchg
sbb
or
rclb
and
ret
mov
push
jo
push
and
pop
push
pushf
xchg
test
inc
adc
cmpsb
adc
mov
mov
dec
call
std
jmp
lods
ljmp
cmp
das
ljmp
or
shlb
mov
sub
cmp
es
movsl
jp
xchg
add
mov
int
int
cwtl
inc
xor
sub
push
and
icebp
add
xor
mov
sarb
mov
jno
arpl
dec
add
lcall
out
into
mov
popa
js
push
test
and
sarb
and
mov
or
push
nop
imul
lret
cld
and
mov
test
mov
jle
or
rorl
ret
jl
mov
inc
dec
adc
test
mov
dec
fidivrl
and
lret
lea
movsl
lret
insb
adcb
xor
xor
inc
mov
sub
ret
mov
push
inc
push
mov
pop
dec
leave
sub
cmovnp
pop
lods
pop
add
lret
es
xchg
pop
push
push
je
ja
rcrl
sbb
test
mov
dec
adc
imul
loope
sbbb
and
pop
loop
sbb
sbb
mov
or
jnp
mov
sbb
sbb
addr16
push
cmc
xchg
push
ficompl
dec
mov
cmp
stos
mov
call
scas
test
cmp
jg
adc
pop
adc
movsl
sub
sub
lea
sbb
push
test
mov
sbb
les
aas
adc
push
ja
jg
gs
sbb
pop
inc
adc
xor
xchg
xor
adc
stos
mov
mov
insl
adcl
mov
roll
lret
sub
mov
and
movsl
push
sbb
les
js
inc
jge
cmp
sub
jmp
sbb
int3
scas
ret
and
orb
or
xor
sbb
test
and
nop
lock
xchg
inc
daa
adc
cmpsl
aad
xor
xor
jl
lahf
push
das
dec
dec
mov
fs
jo
cmp
orb
adc
jmp
add
jae
sub
mov
iret
or
inc
add
ret
push
mov
dec
push
fsubs
rcrb
int3
or
mov
add
or
mov
sbb
adcl
jne
stos
sbb
add
lea
push
test
or
and
les
stos
push
inc
mov
in
mov
mov
cmp
sbb
shl
icebp
int3
adc
or
push
mov
mov
daa
fildl
fmuls
xlat
sbb
repz
data16
or
repnz
cmp
sahf
push
jbe
sub
sbb
and
adc
and
fiaddl
andl
test
push
push
scas
sbb
xchg
mov
shr
inc
dec
adcl
jns
pop
adc
out
enter
push
or
add
stos
stos
or
adc
hlt
lret
nop
lods
enter
xor
xchg
and
jl
je
insb
or
xchg
and
pop
enter
xor
aam
dec
sbb
dec
pop
cmpb
push
mov
push
sub
xor
add
adc
addl
enter
sub
mov
or
or
xchg
mov
bound
pop
add
sbb
inc
sbb
pop
and
pop
call
push
adcl
or
in
mov
xor
adc
pushf
or
mov
aaa
adc
add
dec
mov
lret
sub
add
mov
cmpb
and
cmp
mov
fadd
je
add
sbb
adc
lock
mov
movsb
adc
pop
cmp
sbb
aam
push
pop
lret
sub
scas
cmc
lock
push
push
push
pop
and
or
call
cwtl
xor
dec
in
and
mov
xchg
push
pop
and
inc
das
ret
and
fs
daa
gs
push
adc
jo
js
push
add
dec
inc
xchg
xor
pop
mov
xchg
adc
push
inc
adc
or
or
rorb
and
sbb
or
xchg
and
mov
call
or
test
lods
enter
xor
xchg
and
nop
int3
enter
xor
sbb
or
xchg
and
nop
in
enter
xor
sbb
or
push
push
or
or
mov
push
cwtl
sbb
and
fs
js
fadds
test
jo
push
insb
or
xchg
and
pop
enter
xor
aam
dec
sbb
xchg
and
nop
xor
xor
sub
and
and
nop
adc
adc
mov
cld
pop
adc
or
xchg
and
nop
call
xor
sbb
or
dec
adc
push
nop
pusha
enter
xor
or
inc
xchg
and
add
xor
xor
sub
sub
xchg
and
sbb
adc
adc
or
or
cmpsb
pushf
and
adc
nop
xchg
enter
xor
xchg
jp
inc
and
and
sub
sub
xor
xor
push
std
call
inc
and
enter
xor
or
xchg
and
enter
xor
or
xchg
mov
and
or
sbb
sbb
int3
add
mov
mov
sbb
push
enter
mov
inc
or
jecxz
addr16
test
daa
jecxz
or
mov
jmp
mov
in
mov
lock
jmp
or
sbb
mov
in
mov
jnp
jbe
insl
or
mov
add
push
adc
or
adc
or
test
sub
nop
sbb
and
pop
add
out
sub
inc
loope
cltd
inc
shrl
loop
inc
lds
je
test
fwait
push
push
and
sub
inc
jg
cwtl
inc
jno
loope
inc
arpl
jae
inc
test
mov
or
adc
or
loopne
add
outsb
sbb
test
mov
inc
or
test
inc
and
adc
fbld
lahf
inc
sub
and
sub
inc
orl
call
push
or
inc
mov
and
and
or
into
adc
cmpsl
js
sti
bound
sub
pop
adc
mov
and
mov
adc
push
and
adc
insb
jp
adc
or
jae
adc
and
pop
adc
das
mov
ds
inc
mov
add
dec
bound
cli
mov
push
andb
arpl
aaa
sub
push
xor
xchg
pop
mov
mov
bound
test
mov
and
imul
dec
fstpt
loope
stos
mov
fisttpl
pushf
test
and
nop
mov
and
sbb
sub
push
xchg
inc
and
ss
sub
sbb
push
sbb
mov
push
je
in
jg
lea
jmp
or
cmp
xchg
and
in
jb
cmp
pop
xchg
push
push
adc
dec
xchg
fistps
add
mov
test
rolb
cli
pusha
or
ljmp
rcrb
test
lret
ret
mov
adc
in
mov
mov
jg
jo,pt
nop
pop
je
cwtl
push
adc
or
push
sub
dec
xchg
cmp
sub
daa
movsl
push
adc
or
push
or
adc
loop
sbb
iret
mov
push
or
dec
push
sub
mov
ja
insb
jno
push
and
dec
xor
push
push
xor
pop
push
and
int3
mov
push
push
cli
pop
mov
call
xchg
loop
sbb
mov
cmpsb
jno
push
and
xchg
mov
mov
arpl
xchg
in
push
rolb
fsubl
add
mov
fdivrs
mov
sbb
scas
loop
add
je
adc
fnsave
inc
fsubl
imul
sub
fbld
cmp
mov
adc
xor
pop
push
inc
adc
push
inc
loopne
mov
push
inc
fs
and
lret
test
rorb
scas
and
sar
nop
pop
movsb
enter
xor
inc
andl
adc
insb
inc
insl
xor
inc
push
push
stos
jnp
adc
and
xchg
adc
inc
xor
js
push
sub
aam
inc
and
mov
in
test
or
inc
mov
adc
push
bound
cmc
pop
mov
ljmp
in
inc
aam
pop
adc
lret
adc
mov
add
and
fs
xchg
sbb
and
xor
test
jno
mov
xchg
push
loop
sbb
cmp
and
les
dec
mov
push
test
pop
and
inc
loop
xlat
jno
push
and
les
mov
mov
and
pop
cmp
adc
cmp
daa
jno
push
and
les
cmp
inc
pop
iret
lock
in
imul
push
or
mov
scas
or
test
sub
pop
daa
mov
es
enter
mov
mov
ds
lods
or
pop
adc
dec
enter
inc
pop
sahf
outsb
int3
dec
stc
pop
xor
arpl
les
push
or
xor
adc
and
das
push
bound
sub
push
fadds
neg
lods
or
jnp
push
mov
mov
adc
fcoml
push
inc
lea
orb
and
mov
or
mov
pop
add
sub
mov
and
pushf
test
mov
and
fistl
xor
fisubrl
loop
mov
loop
or
and
sub
and
xchg
lods
xor
inc
cmc
lods
sahf
mov
add
je
and
pop
and
fcmovne
inc
dec
add
adc
and
adc
or
add
mov
push
or
out
call
push
popf
adc
scas
sub
mulb
jg
das
inc
xor
jg
je
dec
adc
aam
test
testb
or
inc
mov
mov
aam
decb
fbld
or
add
fs
push
or
out
xchg
int
ret
jg
or
and
mov
adc
jns
in
outsb
sbb
movsl
or
cmc
or
push
cmp
inc
xchg
or
xchg
and
nop
sub
and
iret
or
or
mov
fmuls
rolb
sub
or
add
xor
sbb
mov
stos
mov
sbb
dec
and
jb
inc
push
or
and
mov
sbb
fmull
add
sub
and
sub
add
not
test
and
push
lock
push
push
cmp
push
pusha
sub
sbb
mov
adc
add
jmp
loop
sub
cmp
push
jmp
andl
or
loopne
and
adc
cmp
add
push
testb
test
mov
inc
fisubrl
hlt
test
test
add
push
push
or
mov
test
fiaddl
push
push
or
test
jge
jne
insl
in
jb
cmp
out
cmp
cmp
sub
in
jb
and
add
cmp
mov
push
lock
or
jl
or
sub
test
dec
mov
mov
test
loopne
xor
lock
cmp
inc
adc
push
push
sub
inc
and
inc
hlt
and
adc
lock
into
push
and
shlb
lods
adc
scas
aam
lods
js
and
and
or
xchg
push
or
mov
dec
in
dec
bound
xor
paddusw
sub
lahf
inc
sub
sbb
inc
push
adc
mov
pop
sbb
inc
and
push
or
inc
out
mov
mov
sub
lds
jne
xor
rorl
ret
pop
push
out
and
adc
pushf
sub
cmpsb
adc
push
adc
loop
adc
dec
mov
ss
push
sub
daa
push
das
xor
fbld
or
inc
push
sbb
rolb
push
sbb
and
imul
push
in
push
or
push
loop
js
or
dec
mov
mov
testb
lret
adc
adc
xor
jg
sub
jns
or
mov
mov
mov
inc
fisttps
inc
jne
cmp
and
xchg
dec
push
and
adc
sbb
push
mov
loopne
and
pop
adc
adc
call
pusha
and
push
fadds
mov
aaa
or
aas
in
and
cmp
imul
rcl
or
dec
pusha
out
mov
std
out
push
jnp
test
sub
lahf
in
add
and
inc
push
and
inc
test
or
inc
imul
les
dec
xor
and
cwtl
or
dec
mov
gs
ljmp
sbb
cmpsb
and
and
cmpsl
popl
push
mov
inc
or
adc
dec
add
cmpsl
pusha
pop
jb
test
les
dec
test
outsb
dec
dec
cwtl
xor
mov
or
and
sub
dec
flds
and
dec
test
pop
or
fldt
xlat
or
inc
iret
gs
xor
mov
or
and
xor
or
pusha
ret
cltd
or
or
inc
mov
sub
sbb
pop
dec
mov
inc
repnz
mov
ljmp
fmulp
inc
jae
fcmovbe
sbb
and
push
mov
or
nop
cmpsb
mov
dec
pusha
fs
mov
cmp
jle
pusha
and
add
adc
or
and
int
ret
and
dec
adc
dec
in
or
cmp
push
cltd
loopne
add
fmuls
test
je
loop
int3
add
adc
cwtl
les
dec
es
ret
add
xor
xor
adc
jmp
lcall
push
mov
mov
xchg
mov
stc
pop
lock
test
sbb
inc
mov
mov
repz
xor
inc
or
nop
add
inc
enter
out
lret
in
inc
enter
inc
lret
ret
mov
sbb
xor
push
test
inc
mov
mov
fsubrl
movsb
cltd
push
jl
push
test
add
enter
and
cmp
das
es
lret
shr
adc
xchg
inc
into
add
adc
or
xchg
sbb
inc
lock
and
inc
adc
inc
jae
mov
jl
lea
pop
push
jb
test
inc
data16
js
inc
shlb
inc
lret
mov
iret
daa
jo
sbb
sub
mov
add
repnz
fdiv
ljmp
mov
mov
rolb
cwtl
sub
icebp
adc
mov
push
lock
mov
sahf
ds
mov
int3
inc
and
sub
dec
push
mov
loop
sbb
jb
in
and
inc
sbb
inc
sbb
mov
ret
add
roll
nop
mov
mov
into
dec
call
mov
push
loop
lea
xor
dec
sbb
and
jbe
push
adc
cmp
mov
push
mov
adc
enter
inc
cmp
xchg
mov
mov
jnp
push
push
lret
lods
cmp
inc
push
scas
mov
cs
mov
push
jp
push
adc
xchg
adc
inc
enter
sub
or
std
mov
adc
pop
outsl
add
mov
cmpsl
inc
push
sub
sbb
and
adc
adc
inc
mov
dec
dec
mov
jno
mov
and
mov
inc
cmpsl
add
push
adc
mov
dec
inc
mov
xchg
inc
test
inc
test
push
or
mov
out
inc
test
xor
pop
inc
adc
adc
call
jne
pusha
push
dec
test
call
jle
lea
or
shl
cli
xor
jecxz
pop
aad
inc
call
jle
lea
popf
mov
mov
xor
lea
push
mov
cmp
xor
sub
inc
adc
roll
cli
xor
cmc
inc
inc
out
rcr
cli
xor
lret
lea
mov
shll
lea
test
imul
cmp
lea
aas
mov
and
xor
std
cmp
call
jle
lea
lds
test
lea
lea
jno
xor
arpl
inc
call
jle
lea
sbb
xor
jmp
pop
frstor
clc
aaa
mov
shl
les
cmp
and
cmp
mov
call
cmp
mov
rclb
and
pop
sub
add
pop
push
mov
ljmp
outsl
arpl
pushl
adc
sub
and
inc
and
adc
xchg
sbb
cmp
jle
rolb
or
shll
and
enter
push
and
inc
insb
test
and
inc
or
and
mov
aaa
nop
in
test
mov
adc
nop
shr
test
inc
cmp
mov
mov
loopne
test
insb
and
adc
in
out
inc
adc
or
inc
aas
das
inc
push
test
cmp
loopne
std
ss
fsubrl
notl
stos
dec
or
mov
ss
jnp
test
call
push
js
inc
inc
cmp
and
inc
aaa
call
push
sbb
test
in
add
xor
pop
shr
xor
les
aam
gs
and
inc
jge
jb
xchg
fs
adc
cmp
popa
or
sub
mov
adc
in
add
je
inc
adc
adc
mov
les
rorl
enter
xchg
popf
sub
hlt
adc
xor
testl
mov
cmp
sub
dec
inc
aas
xchg
repz
sub
xor
test
sbb
mov
jno
and
mov
pop
mov
in
nop
mov
adc
and
pop
cwtl
lods
add
loopne
pop
push
cmp
inc
cmp
jae
nop
push
mov
xor
mov
inc
popa
and
aaa
mov
inc
inc
pushf
or
test
adc
fs
jl
inc
xor
jecxz
cmp
inc
adc
mov
mov
lds
lcall
inc
push
xor
adc
test
and
push
pop
xor
jg
adc
mov
inc
xor
xor
test
into
ss
adc
adc
xor
or
xor
call
sbb
xor
testl
fcomps
int
mov
das
pop
into
sbb
test
stos
lea
test
jp
inc
xchg
or
dec
das
fs
aaa
push
and
dec
dec
xor
and
xor
push
aas
in
mov
mov
dec
mov
mov
xchg
inc
push
xchg
and
and
inc
iret
adc
push
es
cmp
and
add
or
push
shlb
mov
test
jmp
pusha
or
xor
out
push
jnp
test
mov
mov
mov
test
dec
pop
or
test
nop
fmuls
dec
or
pop
mov
andl
xor
cmp
add
int3
push
test
mov
sub
xor
xor
xchg
and
adc
adc
mov
mov
mov
cltd
or
adc
xchg
or
cmpb
sbb
cmpsb
js
push
les
pop
lods
sgdtl
popa
cs
pop
xor
enter
xor
adc
inc
repz
call
fstl
sti
mov
fs
xchg
cmpb
movl
and
add
adc
dec
neg
sub
push
les
push
xchg
cmp
cmp
je
push
aam
cmp
mov
and
int3
inc
add
push
lcall
pop
sub
mov
cmp
mov
lret
ret
add
icebp
sbb
sbb
sub
xchg
sbb
jp
jb
push
bound
push
xchg
dec
enter
adc
adc
xor
sub
and
push
mov
adc
aam
adc
daa
or
shll
sub
mov
jle
shlb
xchg
push
or
inc
push
call
jmp
inc
insl
mov
xor
test
mov
and
and
or
rclb
mov
or
mov
shlb
clc
and
sub
and
aam
adc
xchg
push
push
mov
test
and
xchg
jl
jno
test
inc
inc
gs
mov
and
adc
in
and
adc
mov
pop
pop
add
sub
fisubrl
add
inc
insb
inc
and
and
leave
mov
cmpsw
cltd
cmp
inc
adc
sahf
push
inc
jl
je
insb
enter
or
push
xchg
dec
enter
sub
xchg
es
jb
mov
inc
dec
cli
imul
jo
inc
mov
push
and
xor
mov
fsubrl
lods
or
inc
jbe
sub
dec
push
jo
loop
sahf
add
push
jnp
and
and
adc
sbb
and
xor
scas
shr
cltd
sub
pop
add
sub
and
test
xchg
cmp
adcb
mov
inc
sbb
clc
adc
inc
test
and
ss
adc
and
cmp
cltd
aaa
sub
testl
inc
mov
sub
add
mov
pop
lods
jp
sub
pusha
inc
xchg
cmp
sbb
imul
adc
fcoms
jmp
mov
mov
and
and
xchg
adc
adc
pushf
stos
pop
hlt
daa
test
jl
and
adcl
fisubs
inc
adc
adc
cmpsl
lret
adc
inc
adc
jnp
call
adc
mov
mov
mov
mov
mov
mov
test
std
and
mov
dec
dec
mov
movsl
gs
ret
sbb
xchg
cmp
inc
xor
test
adc
lods
adc
inc
fs
pop
aam
xor
dec
add
dec
push
push
adc
push
test
es
and
test
mov
push
inc
mov
sbb
mov
sub
push
inc
sub
inc
dec
xchg
push
stos
loopne
xor
adc
test
jbe
and
adc
push
pop
cmpsb
add
adc
rorb
and
adc
or
xchg
push
fadds
push
test
call
pop
and
push
mov
and
or
movsb
xchg
pushf
enter
or
adcl
lock
test
or
dec
cmpsb
or
and
mov
push
or
adc
fisubs
movsb
dec
js
mov
or
pop
test
mov
and
pop
mov
sbb
enter
shll
gs
or
inc
inc
xchg
inc
jo
mov
sub
pop
jo
dec
dec
push
cmp
cs
mov
xchg
add
mull
or
in
sub
cmpsl
test
jge
outsb
adc
out
testb
