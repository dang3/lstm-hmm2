cmp
sbb
xor
lds
aas
push
sbb
nop
mov
ja
xor
imul
xor
cmp
xchg
inc
jne
clc
mov
mov
ret
nop
mov
les
mov
pop
push
in
icebp
inc
cmp
jge
incb
jnp
sahf
add
mov
lcall
out
orl
sbb
mov
addb
jne
shll
lcall
cmp
xchg
mov
test
inc
push
mov
sbb
rcrl
lods
pusha
cli
shll
xor
pop
bound
add
mov
je
mov
jb
xor
sarb
sbb
mov
rcrb
ds
mov
leave
les
div
pusha
ja
mov
inc
mov
arpl
aaa
lcall
sub
xor
sahf
and
push
mov
jle
inc
loopne
push
dec
sub
call
mov
pop
add
xlat
enter
iret
add
dec
push
sub
pop
pop
adc
out
pop
inc
rcrb
adcb
popa
xchg
pop
stc
mov
lock
push
mov
push
mov
sub
jb
ljmp
lods
xor
cmc
test
imul
cld
aas
jns
popa
leave
or
inc
fistl
cld
mov
xchg
pop
mov
outsb
mov
inc
pusha
jmp
xor
jb
xchg
into
es
mov
mov
jmp
or
stc
push
test
repnz
xchg
xor
xchg
add
add
inc
out
push
jmp
adc
scas
mov
cmp
lock
mov
mov
repnz
loop
xchg
shrb
add
ret
lcall
in
sbb
adc
aam
mov
push
cld
fisubrs
hlt
mov
push
imul
jo
pop
rcrb
mov
loope
fxam
rcrb
add
xor
shrb
loopne
scas
and
inc
test
cmp
in
push
std
dec
stos
mov
jle
xchg
adc
jp
mov
movsl
ret
lret
xchg
in
outsb
sub
pop
mov
sub
mov
adc
xor
xchg
cmpb
divl
les
push
addr16
inc
int3
loope
add
push
xchg
sub
jb
mov
cmpsl
bound
arpl
iret
mov
adcl
sbb
outsl
cmc
hlt
arpl
jo
mov
test
jb
xor
sub
movb
sarl
jl
imul
mov
fcoml
repz
sub
pop
dec
push
ljmp
sub
sbb
adc
adc
push
or
mov
movsb
mov
aad
fnstenv
dec
and
xor
push
jg
mov
sbb
xchg
push
lea
mov
hlt
fistps
sahf
mov
lcall
xor
xchg
xor
repnz
mov
cmpsb
and
into
sbb
and
xlat
inc
and
sti
lcall
sahf
cmp
dec
mov
and
cmp
cld
xchg
inc
push
jge
cmp
stos
clc
inc
xor
nop
mov
push
push
cmp
mov
push
cmp
bound
xor
jge
aad
inc
sbb
sbb
inc
mov
and
xor
cld
xchg
or
sub
adcb
mov
and
push
cli
sbb
ljmp
lret
add
call
inc
stos
xchg
scas
lods
sub
rorb
xchg
adc
mov
mov
push
jecxz
sbb
sahf
sbb
ret
sub
add
cmp
jbe
inc
mov
push
sub
dec
aaa
sub
out
xor
dec
sub
std
fiadds
arpl
mov
cld
dec
cmpsl
xor
pushf
or
mov
pop
sahf
fstps
scas
adc
dec
lock
and
cmp
jnp
xchg
leave
sbb
cmp
xchg
data16
push
and
jmp
out
cmp
or
rcrl
sbb
xchg
and
outsl
cmp
xor
fnsave
roll
int3
shl
pandn
loopne
shlb
mov
aas
in
or
dec
jmp
into
and
xchg
jmp
sbb
jnp
sbb
xor
sub
pop
mov
ficomps
out
rcl
jle
or
jbe
cmpsb
mov
sub
aaa
adc
push
and
pushf
mov
mov
push
mov
pop
popf
sahf
push
sub
in
test
ds
mov
sbb
jne
xor
and
or
ret
aas
push
je
addr16
loopne
push
sbbb
add
mov
push
data16
pop
aaa
push
aad
mov
sbb
int3
test
cltd
and
hlt
hlt
adc
int3
jge
pushf
jecxz
mov
mov
add
xor
mov
push
insb
dec
lea
addr16
add
jns
mov
push
fisubs
pop
out
dec
mov
mov
loop
pop
mov
mov
pushf
sahf
pop
lcall
add
out
add
xchg
or
xchg
xor
xor
cmp
add
or
repz
push
and
popf
push
mov
outsb
sarl
inc
add
xchg
sbb
mov
or
jb
movsl
jmp
sub
insb
lahf
and
cmp
sub
sub
arpl
jge
fld
inc
jno
pushf
mov
in
cwtl
fstpt
mov
inc
mov
popa
or
push
push
imul
sub
imul
nop
jg
scas
adc
mov
inc
pop
mov
sub
cltd
or
mov
stos
lcall
jecxz
ret
cmp
out
xchg
sub
dec
xor
mov
ret
nop
aam
mov
std
and
ret
out
fwait
push
pop
outsb
mov
bswap
repnz
cmp
pop
jmp
loopne
push
data16
inc
adc
mov
sub
push
inc
inc
add
add
mov
call
mov
push
dec
pop
pop
dec
outsb
jl
add
int
dec
flds
cmp
imul
daa
subl
insl
jno
aad
push
mov
mov
lret
inc
jmp
out
ljmp
int
clc
iret
mov
call
pand
stos
mov
pop
cltd
xchg
popa
mov
fwait
sti
orl
sub
loopne
xorl
adc
pop
shlb
mov
xor
cmp
jbe
add
insl
imul
stos
cld
je
jecxz
and
add
mov
lcall
lcall
icebp
fdivl
sti
inc
ds
xchg
ret
dec
sbb
mov
leave
adc
sbb
cmpsb
inc
subl
sbb
mov
adc
xchg
sahf
popa
arpl
xchg
add
sbbb
jns
div
cmp
fdivs
loopne
inc
lcall
sub
xor
jo
lret
mov
inc
icebp
add
push
jmp
add
clc
jne
or
pusha
mov
mov
mov
mov
push
cmp
add
fdivrs
pushf
aas
push
in
push
stos
mov
xlat
inc
mov
clc
xchg
dec
jle
sbb
bound
inc
cmp
jg
fs
aaa
inc
clc
cmp
or
xor
hlt
xchg
insb
add
hlt
addr16
js
xchg
data16
add
int3
xorb
jo
mov
xchg
inc
cs
in
mov
xchg
mov
sbb
adcl
inc
hlt
xchg
dec
add
jnp
sub
jle
movsl
cmp
xchg
mov
dec
aas
xor
and
and
pop
jge
mov
jbe
sahf
mov
cmc
insl
xchg
fwait
es
jbe
call
mov
aas
or
rcrb
xor
repz
hlt
xchg
mov
mov
and
fisttpl
scas
adc
sub
mov
mov
pusha
shll
mov
outsb
push
pop
push
adc
mov
outsl
orb
pop
pushf
xchg
data16
pushl
pop
mov
xor
and
adc
pop
dec
fldt
cmpl
pop
xor
sbb
push
jns
addb
mov
xchg
and
mov
lea
notb
lock
dec
call
mov
in
inc
sub
cmc
shrl
call
add
fdivs
out
mov
fs
icebp
mov
sti
sub
sub
jns
or
idivb
sbb
dec
or
inc
iret
or
adc
adc
pop
dec
insl
mov
mov
jp
xor
push
or
jp
lds
jmp
lds
jns
pop
xchg
or
call
fsubl
dec
inc
lock
push
and
fcmovne
sub
lahf
xchg
inc
push
test
cmp
push
daa
imul
mov
cmpb
pushf
or
enter
mov
adc
or
cltd
aad
repnz
push
loope
cld
xchg
shrb
pop
mov
xchg
xchg
ret
int
mov
gs
pusha
test
mov
ja
xchg
aas
ja
lret
cmp
arpl
xor
insb
xchg
pop
xchg
aas
inc
movl
imul
add
xchg
jns
addr16
xchg
jne
inc
inc
je
insl
sti
jecxz
es
cmpl
ret
xchg
shll
cmpsl
repz
push
jae
aad
fwait
add
fiaddl
stos
push
cmp
mov
test
jecxz
or
gs
adc
imul
cmpsl
or
ss
iret
mov
loope
addr16
fdivl
inc
sub
push
and
jne
push
int
or
add
in
sbb
sub
hlt
sub
insl
push
repnz
push
pop
inc
pop
mov
dec
adc
out
lds
shlb
xchg
pop
adc
pusha
and
fsubs
testl
imul
addr16
cmp
xor
addr16
mov
cmp
out
mov
jbe
pop
xor
shlb
pop
ja
pusha
mov
out
mov
sub
push
mov
jns
pop
in
mov
adc
insb
adc
ret
mov
or
gs
xchg
cmp
add
sub
inc
and
add
stc
jg
sbb
cltd
xchg
push
stc
xchg
dec
popf
sahf
jb
nop
dec
mov
stos
pop
xchg
insl
cld
jo
roll
and
push
mov
and
lea
arpl
mov
das
add
sub
adc
loopne
xchg
icebp
loop
pop
push
fldcw
add
fs
dec
clc
jl
daa
pop
int
add
insb
sub
and
or
jecxz
or
or
jecxz
jnp
lret
pop
stos
mov
rorb
pop
orl
jne
popf
dec
repnz
imul
loop
inc
scas
movsl
and
movsl
cmpsl
pop
mov
inc
int3
movsl
xchg
jno
test
adc
push
aaa
mov
ljmp
or
movsl
inc
insb
or
jge
pop
mov
inc
pop
adc
daa
ds
nop
mov
addr16
or
push
pop
mov
add
push
cmp
pop
ss
cli
adc
popa
adc
jle
xor
in
mov
scas
jae
xacquire
jge
jno
cltd
stos
es
add
inc
sub
pushf
pop
aaa
fwait
sbb
jge
adc
cmpsb
imul
in
lea
ljmp
xor
xchg
mov
call
push
add
jb
pop
ja
sbb
cmp
into
pop
test
mov
shrl
jmp
xchg
test
add
or
pushw
push
mov
cs
imul
test
enter
stos
ret
mov
xchg
neg
adc
jne
loop
mov
fmulp
push
dec
dec
sub
adc
jp
lods
lret
jecxz
xchg
movsl
lds
ficomps
xor
ret
cmc
pop
adc
jge
push
popa
imul
push
and
pusha
adcl
xchg
int3
push
inc
in
jl
lods
xor
repnz
pop
fimuls
mov
add
ljmp
xchg
rorl
leave
sbb
in
dec
sub
ljmp
fisubl
stc
arpl
mov
test
addr16
ss
mov
adc
std
inc
jmp
cmpsl
add
mov
shll
movzwl
sub
lret
cmpl
test
mull
push
mov
subl
pop
xchg
inc
jb
cli
aas
fchs
cmp
filds
jp
lods
or
or
hlt
sbb
mov
shl
sbb
addb
imul
inc
cwtl
repz
mov
xor
mov
dec
xor
lea
sub
test
sbbb
mov
mov
push
or
hlt
xchg
je
mov
and
adc
aaa
mov
dec
fstpt
push
push
xchg
rclb
ljmp
jb
iret
mov
cmc
movsl
iret
cmc
nop
lahf
jg
nop
add
jb
and
sbb
xor
cli
inc
stos
xchg
lds
fidivs
push
mov
add
stos
mov
inc
sti
fcoms
cwtl
mov
adc
add
push
movsl
jmp
push
cmp
jmp
negb
lods
xchg
mov
ret
mov
nop
aam
jne
mov
popf
jle
aaa
xchg
lock
mov
sub
jp
inc
mov
pop
mov
xlat
xchg
pop
mov
fisubrl
mov
inc
es
leave
and
push
xchg
mov
imul
rorl
imul
mov
pop
xor
add
gs
arpl
sub
pop
sti
movsb
loop
xor
cwtl
leave
pushf
mov
addr16
std
or
sbb
mov
push
shrl
push
or
cmpb
cmp
les
mov
arpl
push
mov
xor
mulb
add
rcll
push
mov
out
int
cld
in
sub
or
push
xor
js
mov
ror
rcrl
orb
xor
lods
jb
jle
mov
lret
add
mov
add
adc
mov
dec
inc
out
clc
repz
xchg
inc
and
push
scas
pop
std
aam
lds
rcrl
sub
sar
and
xchg
push
mov
test
xchg
adc
xor
xor
cmp
fldl
push
movsl
call
mov
pop
arpl
cmp
cmpsb
mov
xchg
aam
out
and
xchg
pop
aaa
jl
sub
jl
cs
js
and
jns
sub
and
lods
inc
lret
push
sub
lea
call
mov
lret
push
xchg
add
jns
notrack
stos
or
mov
dec
mov
jle
popa
fsubs
pop
pop
es
aam
lock
sbb
inc
xor
push
mov
arpl
cld
insb
sbb
xchg
xor
out
cwtl
dec
cmp
sahf
xchg
inc
movsl
sbbb
push
pop
push
mov
imul
and
stos
xlat
cmp
cmp
xor
cwtl
in
xchg
mov
negb
loope
roll
xchg
and
test
mov
lret
xor
sub
clc
jge
mov
loopne
lock
std
pusha
xchg
rorb
xor
subl
push
sbb
js
mov
cmp
mov
test
movsb
cmp
fildl
jne
mov
push
jns
insl
mov
jge
fimull
fsubl
push
icebp
loopne
ja
out
hlt
inc
les
sub
xchg
mov
mov
loop
cmp
sbb
mov
fsubl
sub
lock
jle
jle
jne
nop
js
int
adc
jmp
adc
and
mov
pand
lods
inc
jns
xchg
pop
pop
mov
xchg
mov
shrl
movsb
nop
fdivrl
jle
dec
not
jl
fldl
ljmp
pop
movsw
sbb
jp
pusha
test
mov
sar
bound
mov
xchg
loopne
repnz
pop
and
aaa
enter
and
xchg
std
fstps
bound
data16
test
fcoml
push
mov
addr16
lahf
mov
sub
in
mov
push
movb
cmpsb
jns
imul
sub
mov
lods
and
add
and
sub
fabs
and
inc
jecxz
add
dec
and
ljmp
scas
adc
mov
xchg
data16
fmul
sbb
cmpsl
inc
int3
inc
push
add
movsl
aad
out
sub
mov
dec
mov
repnz
jae
mov
mov
cmp
jge
int3
out
xchg
lea
push
fs
push
lock
das
leave
loope
hlt
pop
jmp
lret
mov
push
hlt
inc
mov
mov
inc
inc
push
jge
mov
stc
mov
jbe
xchg
pop
push
sub
mov
icebp
inc
and
sbb
mov
loope
ret
lods
xlat
jp
in
or
insl
add
xor
test
lods
daa
cs
mov
mov
dec
fcoml
js
cltd
loopne
pop
cli
pop
push
fprem
mov
mov
cld
pop
dec
mov
mov
dec
popf
rclb
jg
push
sbb
subl
adc
scas
sbb
xchg
push
mov
aam
adc
in
pop
xor
pop
dec
insl
sub
ja
xchg
lcall
orb
adc
ret
push
mov
mov
lock
mov
pop
stos
sub
loop
test
adc
idivl
je
xchg
sbb
imul
inc
push
adcb
and
insl
dec
push
cmp
xlat
in
jb
aam
daa
push
in
aaa
sbb
pop
jmp
dec
nop
adc
xchg
fldt
repz
orl
or
loope
inc
addl
pop
add
sub
add
fstpt
nop
mov
dec
das
aas
xchg
jb
mov
ss
loopne
addr16
test
shr
push
arpl
aad
jne
and
sub
imul
int3
in
jns
mov
mov
fwait
jo
inc
push
cmp
daa
sbb
pop
stos
dec
push
inc
subb
rolb
faddl
cltd
sub
enter
leave
mov
jmp
andb
sub
push
loope
pop
pusha
jo
mov
addr16
dec
and
fists
stc
in
mov
ljmp
mov
push
test
cmp
and
lcall
cltd
inc
pushf
or
pop
xchg
into
sub
clc
jp
mov
std
test
add
pop
lret
pop
js
sbb
sbb
out
test
test
push
pop
push
stc
std
icebp
je
pushf
pop
or
sub
mov
mov
loopne
dec
pusha
mov
call
cmc
test
pusha
sbbl
out
bound
xorb
adc
adc
lock
mov
js
xor
inc
xchg
mov
dec
mov
mov
mov
icebp
dec
mov
sbb
decl
xchg
in
icebp
imul
popf
xlat
inc
in
lods
sti
xchg
cmp
cmp
loopne
enter
sbb
jmp
aaa
call
pop
inc
mov
leave
sahf
movsb
addb
divb
xchg
push
xor
pop
sub
pop
stos
add
loop
add
lret
dec
or
ds
scas
hlt
notl
stc
mov
push
dec
sub
jle
addb
in
dec
hlt
outsb
shr
mov
daa
xchg
stc
shrb
pop
std
ja
rcll
pop
pusha
jb
scas
inc
inc
icebp
pop
jbe
sbb
cwtl
mov
hlt
pushf
pop
lahf
xchg
inc
sahf
mov
lea
mov
mov
push
popa
jecxz
subb
hlt
insl
aas
push
push
mov
cmpb
cmp
dec
dec
xor
mov
cmc
adc
popa
std
sar
lcall
in
mov
gs
xor
mulb
movsb
mov
mov
inc
test
sahf
mov
xchg
das
mov
xor
pop
mov
sub
push
sub
xchg
push
rolb
hlt
push
lret
mov
je
int
add
push
mov
fidivrl
outsb
xchg
popf
sbb
cld
test
call
pop
sub
push
mov
test
jns
cltd
ljmp
shll
mov
push
stc
push
test
aas
cld
inc
lret
ljmp
test
mov
jo
lcall
dec
aam
loopne
enter
popf
mov
push
xchg
ret
sub
mov
pop
cs
pop
iret
nop
xor
add
xchg
dec
xchg
jge
ja
mov
mov
gs
jns
loope
test
daa
add
jnp
xlat
inc
xor
push
dec
adc
test
mov
mov
xor
sub
xor
lret
cmc
mov
mov
popa
int3
xor
jg
mov
pop
pop
repnz
jg
mov
daa
mov
pop
inc
sub
sbb
dec
mov
push
push
lahf
adc
js
and
fs
xchg
insb
add
mov
add
loopne
jle
sbb
adc
ss
lds
clc
dec
jp
mov
cwtl
sbb
push
rclb
repnz
mov
and
das
movsb
inc
imul
call
and
mov
fdivrs
or
insb
add
adc
jp
xorb
movsl
adc
cmp
push
in
insl
cmp
mov
xor
sbb
xchg
lock
or
aad
enter
push
aaa
lcall
xor
cld
andb
das
or
xor
sub
hlt
add
mov
int
xor
jo
jmp
lret
pop
sub
imull
out
imull
inc
sub
jecxz
les
mov
inc
push
xchg
xchg
data16
pop
and
pop
cmp
xchg
out
test
xchg
lret
jne
jge
cmc
cmp
jmp
repz
daa
sti
outsl
cli
adc
mov
sub
fwait
popa
aas
mov
test
inc
inc
jno
stos
xor
movsb
cmp
adc
clc
mov
out
sti
jmp
xchg
mov
ds
dec
stc
push
pop
pop
gs
popa
cmp
cmp
movsb
popa
cmpsl
daa
jg
mov
push
mov
jns
popf
or
mov
test
cmp
enter
inc
sub
inc
sub
sbb
add
lahf
andb
pop
pop
adc
inc
jns
test
sub
sub
movsb
cmp
data16
movsl
cmp
fstl
movsl
cmc
xchg
xor
cltd
aaa
dec
push
hlt
fadd
adc
sub
test
add
sbb
enter
or
je
rcll
sub
cli
inc
imul
xchg
or
dec
shlb
inc
aad
inc
clc
mov
or
test
add
iret
out
xchg
enter
jne
cmp
mov
mov
or
int3
jns
sub
mov
jo
mov
push
push
in
cmp
out
pop
enter
insl
shrb
mov
and
push
pop
iret
mov
shrl
jno
sahf
mov
cltd
imul
jnp
xchg
mov
add
xchg
push
loopne
jb
push
mov
push
sahf
int3
xor
jns
inc
cmp
lea
popa
xorb
lret
sub
lea
xor
imul
mov
call
cld
xor
cmp
jle
out
push
jne
scas
lcall
imul
lds
test
pop
cmp
outsb
data16
cmp
arpl
pop
lea
aam
xchg
or
mov
push
xchg
insl
aas
idivb
jl
in
clc
adc
cli
inc
jo
aam
inc
pop
test
test
adc
sub
bound
or
mov
add
dec
and
call
das
add
pop
cmpsl
dec
cltd
mov
aas
sub
movntps
repnz
leave
jge
inc
sahf
loop
ret
pop
sbbl
rcrl
cmc
ror
int
mov
add
jno
jb
xchg
and
mov
mov
sub
inc
nop
mov
out
add
popa
cmpsb
dec
add
lret
or
cltd
xor
push
inc
rorb
push
test
cmp
inc
add
jo
xchg
test
in
xorb
inc
mov
inc
fdivl
out
loop
cmp
mov
aam
sbb
shufps
mov
shlb
pop
mov
into
or
clc
jmp
sahf
loop
adc
xor
in
bound
fisubs
mov
cmp
jbe
and
pushl
sbb
mov
mov
out
add
mov
inc
push
stos
repnz
shlb
or
inc
and
fdivr
ja
or
and
dec
xchg
stc
in
cmp
icebp
xchg
rolb
dec
int
sarb
dec
daa
sub
add
into
and
push
into
mov
ja
pop
lock
cmp
test
decl
push
push
jne
daa
mov
pop
in
cwtl
dec
jge
cmp
and
sub
or
xcrypt-cfb
cmpsl
jecxz
lea
cmp
and
lods
mov
into
jge
iret
out
and
ret
push
in
cmp
xchg
or
or
mov
mov
xchg
adc
shr
push
and
adc
add
ret
shlb
sti
or
jg
mov
inc
call
mov
jge
test
shlb
mov
mov
mov
ja
shll
out
fisttpll
and
loop
dec
inc
inc
push
push
cltd
xor
mov
mov
cmp
cli
push
sbb
sbb
mov
push
fmuls
stc
xor
dec
mov
mov
xor
mov
jmp
fstpt
pop
inc
lock
cmp
and
mov
and
xchg
js
push
in
sub
push
lahf
pop
data16
xchg
or
sbb
inc
jb
sar
loopne
inc
faddl
pop
loope
dec
pop
daa
sbb
gs
adc
jnp
leave
lods
insb
test
cmp
data16
xchg
sbb
add
dec
cli
add
inc
cmpsb
jmp
rcll
add
faddl
scas
jmp
push
sbb
xor
call
xchg
stc
add
ljmp
mov
mov
aas
jl
pop
jae
repnz
adc
cmp
dec
or
xchg
insb
mov
pusha
je
inc
loop
lret
and
xor
sbb
push
dec
lods
mov
sbb
xchg
cs
add
adc
leave
adc
cmp
or
push
int
and
mov
fcomps
clc
adc
jg
ret
mov
xchg
dec
cmp
xchg
jne
xchg
shrb
mov
pop
mov
sbb
adc
jnp
cmpl
fistpl
sub
mov
cmpsl
in
movd
scas
inc
inc
inc
std
mov
shl
push
rcll
les
inc
xchg
jp
js
mov
sti
pusha
add
cld
fildll
cmp
test
cmp
lahf
dec
popa
mov
add
leave
es
mov
sub
das
and
jp
cmp
push
test
data16
gs
sti
pop
lock
cmp
lret
sub
mov
fcmovu
xchg
fcoms
popa
add
cmp
xor
fstpt
leave
adc
dec
lret
pop
mov
loopne
mov
sub
jns
enter
xchg
xchg
lods
cltd
push
gs
xlat
aaa
adc
loop
into
adc
fstl
dec
js
sbb
lea
cmp
push
mov
into
jno
xor
insl
imul
add
test
adc
or
test
std
jle
xorl
rorl
push
jg
je
add
adc
add
aad
cmp
lea
decb
lret
test
sbb
cmp
xchg
push
or
and
sub
bound
xor
jle
lea
dec
mov
inc
adc
test
push
xor
sbb
stc
add
xor
sbb
lods
push
mov
rcll
adc
xlat
int3
inc
stos
cmp
les
push
xchg
loop
and
mov
sbb
mov
sub
cmp
sub
insl
lret
inc
rol
jno,pn
pop
mov
cltd
add
pop
bound
outsb
inc
jns
pop
popa
xchg
jp
inc
jmp
in
scas
push
ljmp
mov
fisubs
fstps
mov
aam
in
jb
ss
inc
cmp
mov
dec
push
xor
test
lcall
test
lods
push
clc
gs
test
iret
mov
fistpl
add
cwtl
jg
or
pop
bound
cld
sbb
inc
mov
popf
xor
jge
fmuls
mov
pop
and
jbe
gs
clc
mov
movsl
pusha
and
mov
xchg
or
rcrl
adc
adc
cld
dec
add
ret
lahf
fisubl
sbb
mov
jp
or
push
push
xor
repz
stos
aad
lcall
jp
test
ret
and
rorb
inc
jmp
scas
insl
mov
inc
mov
mov
int3
shrb
dec
mov
mov
rcrl
loop
lds
sahf
mov
ret
sbb
stc
and
or
mov
in
int3
xchg
push
test
mov
in
mov
mov
iret
xchg
push
das
mov
shrl
popl
inc
outsl
add
cmp
or
dec
xchg
mov
lods
adc
aas
in
out
out
ret
enter
xchg
mov
add
in
jle
mov
and
fcmove
and
push
das
js
push
push
push
lds
pop
mov
pusha
in
cmc
aam
mov
test
inc
lret
mov
insl
push
add
inc
inc
lock
jle
leave
outsl
clc
xchg
rolb
adc
xchg
int3
xor
rol
leave
cli
sbb
jmp
sbb
jmp
sbb
pushf
fstl
bound
and
mov
cmc
jmp
dec
inc
mov
mov
inc
in
push
jb
cwtl
jne
mov
leave
pushf
add
cmp
dec
test
add
in
movsb
and
cltd
mov
cmp
and
cmp
adc
cmovo
fildl
jbe
jno
adc
xchg
movsb
and
movsl
pop
out
and
or
xlat
sbb
sbb
lcall
and
dec
in
pop
sti
adc
mov
inc
adcb
fdivr
mov
mov
add
in
notl
jmp
dec
cmp
stc
cld
or
adc
cmp
ss
dec
cmp
or
int
cmpsl
adcb
xchg
sbbb
cld
xchg
int
mov
clc
in
cmp
push
add
inc
movsl
cs
mov
mov
xor
push
fs
test
negb
adc
adcl
inc
jb
push
mov
scas
xchg
aam
and
hlt
jo
mov
popf
mov
jp
add
sti
andb
pop
fidivrl
nop
dec
ret
cmp
in
mov
insl
rorl
shrb
mov
pop
xchg
and
pop
fnstsw
insb
cmp
inc
mov
mov
jle
mov
dec
and
movsb
faddl
cmp
jno
sbb
pop
jmp
sub
lret
mov
lret
fs
xchg
mov
mov
add
sbb
cmpsb
dec
lds
jp
arpl
cmp
mov
cwtl
cmp
mov
lds
and
repnz
inc
fsts
xchg
mov
test
add
jnp
cmpb
outsl
xor
pop
lods
jl
ja
lea
lcall
xchg
sub
pop
dec
int
negl
push
jb
scas
xlat
loopne
inc
mov
enter
hlt
adc
or
jecxz
pop
ljmp
xlat
das
add
aas
adc
and
xlat
cmp
xor
scas
insl
in
mov
inc
sar
repnz
subb
xchg
jle
test
xchg
push
adc
push
dec
stos
dec
shl
inc
xchg
cmp
sub
insl
push
test
imul
js
inc
or
notl
repnz
jmp
jg
das
cmp
dec
call
mov
or
mov
mov
or
jecxz
and
stc
sahf
xchg
frstpm(287
inc
and
ds
xchg
jle
dec
mov
jp
mov
and
xor
fmulp
fldt
sub
or
mov
nop
mov
jge
mov
pop
arpl
or
shrd
cld
xor
push
push
fwait
add
or
clc
mov
pop
inc
fadds
lahf
and
inc
lret
pusha
jne
rorb
push
insl
adc
stos
dec
cmp
jnp
decl
sub
mov
jge
clc
scas
xchg
cld
cmp
adc
jp
jg
xchg
dec
lods
les
jmp
outsb
cltd
fdivrp
pop
loope
fiaddl
fidivs
or
scas
mov
repnz
cmp
pop
lds
sub
sbb
jp
sub
addr16
sbb
mov
inc
scas
adc
dec
add
xor
jnp
loopne
pop
adc
sahf
pop
mov
clc
stc
xor
cmp
mov
mov
ret
xor
jno
jne
mov
and
jb
lds
aaa
mov
in
out
in
inc
mov
imul
clc
out
daa
mov
aad
shll
insl
jge
sbb
and
andb
fisubrs
and
fstpt
movsl
inc
repz
sbb
cwtl
shlb
inc
in
rorl
fnstcw
dec
and
mov
xlat
aam
mull
push
dec
sarl
inc
sub
inc
push
mov
repnz
fdivs
push
outsb
pusha
loopne
mov
leave
and
call
inc
outsb
mov
xchg
ss
pusha
cli
fistpll
loop
fmuls
fcmovnbe
out
and
leave
mov
imul
adc
mov
test
push
push
mov
aas
stos
je
mov
sbb
int
shlb
push
sub
pop
dec
inc
fs
add
popf
pop
add
sbb
and
xchg
add
das
inc
out
loope
sub
sahf
and
std
jle
loop
adc
and
sahf
sub
in
mov
ljmp
shr
sub
cli
jb
xchg
je
jle
loope
in
int
int3
jge
loop
jecxz
sub
popa
jmp
xchg
in
lds
pop
imul
dec
in
imul
addl
movb
lahf
or
pop
xor
jnp
cs
iret
and
pop
push
test
jns
jo
adc
mov
imul
and
inc
inc
jnp
xchg
js
fsubp
dec
dec
adc
int3
pushf
push
lods
and
std
fidivrs
pop
pop
add
inc
cli
fsubl
std
sub
push
xchg
jne
pop
jnp
hlt
test
cmp
mov
adc
test
pop
dec
es
and
xor
dec
mov
in
mov
jmp
sbb
movsb
cmp
xchg
push
inc
movsl
xor
pop
cmp
inc
insl
or
in
cwtl
sahf
in
cwtl
inc
mov
fdivrl
mov
ss
test
sahf
js
bound
mov
aas
mov
jno
sbb
jecxz
jno
pushf
jns
aam
fimull
outsl
xor
mov
fimull
and
mov
fmul
arpl
dec
subl
mov
ret
xorb
les
dec
insb
pop
jae
push
into
outsl
in
sbb
and
add
xchg
sub
shll
inc
dec
push
mov
xor
subb
ret
mov
mov
sub
sbb
das
call
ror
insl
test
mov
rolb
fs
popf
les
and
outsl
psrlq
daa
mov
imul
cmpsl
sti
fs
loope
push
add
mov
jecxz
mov
jnp
and
pushf
cld
add
popf
jmp
arpl
lahf
outsl
pop
mov
mov
cld
out
je
mov
add
movsl
lret
sbb
mov
adc
cs
mov
xor
dec
push
sub
stos
lods
pusha
adc
sub
mov
push
sbb
adc
enter
cmp
movsb
push
cs
test
fldt
mov
jmp
dec
cltd
mov
push
pop
orl
and
mov
cmp
sbb
add
push
pop
dec
aam
dec
aad
cmp
dec
iret
add
cwtl
dec
imul
insb
pop
mov
xor
sar
pop
ljmp
shll
or
jge
mov
orl
fistl
adc
inc
mov
lret
sub
outsb
push
rclb
in
aaa
push
lcall
mov
lretw
cmp
sbbl
and
sbb
scas
jb
jg
stos
xchg
fcmovnb
cmp
or
insl
add
in
inc
or
cmp
in
xchg
scas
or
jae
scas
and
xchg
mov
sbb
push
scas
aam
mov
iret
popf
inc
cmp
dec
call
sbb
outsl
loop
insb
mov
sbb
scas
pop
lret
loope
cwtl
cmp
adc
xchg
inc
sub
pushf
jae
jge
mov
xor
imul
cmc
fists
dec
hlt
fucom
rolb
dec
mov
mov
adc
push
lret
mov
movsl
loop
pushf
adc
cwtl
inc
mov
jnp
cmc
pop
pop
dec
jb
shrb
inc
mov
jb
jmp
imul
inc
ficompl
roll
xchg
cmp
jns
pop
scas
adc
sarb
or
lcall
mov
pusha
cmp
js
xchg
dec
cmc
sbb
lds
clc
daa
sbbl
inc
ss
icebp
inc
dec
inc
jo
or
out
pop
or
mov
shll
shrb
ror
mov
rolb
or
lea
mov
lahf
dec
stc
mov
pushf
inc
push
mov
iret
jge
cmpsl
inc
or
lock
fsubl
mov
sbb
sub
in
movsl
mov
sbb
repnz
push
or
stos
js
xchg
and
and
clc
test
fst
sub
xchg
add
incl
enter
and
shrb
xchg
push
jg
ret
test
add
pop
dec
scas
data16
pop
xor
mov
jle
push
dec
ret
push
fimuls
pushf
out
mov
std
cmp
mov
mov
sar
call
cmp
loop
inc
inc
cmpsb
pop
sbbb
leave
in
push
out
outsl
mov
insb
imul
daa
xor
in
jmp
ja
bound
mov
pop
das
scas
mov
int
dec
sahf
adc
pop
aas
imul
aas
ss
lea
cmp
test
mull
mov
pop
cmp
xchg
xchg
subl
js
enter
outsb
xor
pop
arpl
lea
sbb
sbb
mov
sub
lahf
lea
cmp
mov
bound
xor
out
pop
add
push
je
lret
xor
mov
and
int3
dec
or
pop
xchg
dec
pop
stos
dec
push
jg
fildll
push
cmp
stos
shlb
sub
jnp
dec
and
sub
fwait
sub
dec
xchg
adc
aas
fnsave
cwtl
add
imul
mov
jmp
push
aas
and
mov
inc
push
jae
repz
jmp
xchg
fwait
xor
add
xchg
insb
or
xchg
xor
inc
in
and
out
in
icebp
cmp
negb
dec
dec
xchg
int
fwait
inc
inc
arpl
mov
call
call
inc
xlat
loope
inc
dec
shlb
aad
in
jno
ljmp
xchg
jge
inc
lods
push
inc
cmpsl
xchg
pop
hlt
rcll
les
loope
ljmp
xor
adcb
pop
cwtl
cmpsl
sbb
or
ret
and
cmp
jno
and
mov
add
cmpb
sahf
push
sbb
or
sub
std
test
cli
or
loopne
fsubrs
xchg
aad
insl
cli
aam
insb
imul
adc
jge
movsb
add
mov
pop
je
push
cwtl
push
push
movsl
in
mov
sub
cmp
mov
cmp
int
push
imull
jb
movsb
dec
sbb
data16
sarl
outsl
mov
in
out
cmp
inc
aam
lcall
cmpsl
loop
mov
mov
mov
jo
negl
lea
movsl
repnz
lret
mov
ret
imul
cmc
test
dec
cmp
mov
ljmp
stos
loop
add
jno
jbe
iret
and
cwtl
jno
loope
aas
sub
inc
pop
addr16
in
jp
aam
cmp
in
sti
enter
or
shrb
stos
dec
mov
push
dec
cmp
sbb
fcomip
mov
fcomps
push
dec
scas
enter
ja
das
rcr
sub
int
add
and
and
xchg
loop
and
dec
ja
ficoml
inc
dec
in
in
fnstenv
loop
lahf
pushf
or
sub
push
lea
mov
and
mov
push
cmp
out
add
mov
lds
xchg
mov
cmp
adc
pop
sub
sub
inc
daa
xor
jne
sub
mov
shrb
dec
jns
loop
rolb
add
shrl
sahf
test
test
mov
xor
scas
or
jmp
mov
imul
dec
push
test
test
xlat
xor
dec
dec
inc
and
nop
js
int
scas
iret
andl
push
inc
cltd
mov
cld
xor
sbb
sar
add
pop
jmp
fists
mov
and
fldt
sub
in
push
xor
ret
sbbl
xchg
sarb
loopne
mov
mov
ss
jo
fs
push
pop
xchg
lcall
ljmp
jno,pt
xchg
fadds
fdivl
outsb
mov
xor
sub
ds
ja
pop
into
mov
or
sbb
lds
mov
lods
fmull
mov
cltd
mov
add
mov
shrl
and
sar
sub
lods
push
inc
incb
dec
mov
loope
fisubl
push
sbb
xchg
lods
pop
lret
out
in
and
mov
dec
nop
inc
jnp
ficoms
jle
sahf
jbe
mov
nop
fdiv
and
ret
sti
leave
cld
rcll
lods
mov
repz
sbb
inc
adc
in
nop
sub
lds
xchg
cmp
fdivs
fs
sub
aad
dec
mov
pop
pop
data16
xchg
push
lar
cmp
jmp
mov
test
scas
in
stos
movsl
je
push
insl
sbb
add
pop
dec
andl
jecxz
mov
fsubrs
fdiv
mov
inc
dec
jg
test
sub
stos
jge
inc
movl
sub
mov
fidivrl
movsl
stos
jl
sarl
lret
xchg
xor
and
mov
sub
cmpsb
mov
pop
stos
vmovss
lcall
lock
js
mov
cmp
pop
rcr
mov
pop
dec
aas
mov
mov
data16
aad
push
scas
push
and
jb
ficomps
sub
iret
cld
push
gs
pop
and
enter
addb
push
shll
sub
jge
push
and
push
xchg
cltd
jl
mov
xchg
inc
push
dec
jg
out
sti
mov
sub
adc
inc
jno
jecxz
mov
adc
pop
insb
xchg
fldt
mov
lea
pusha
jne
in
and
fmul
cld
dec
jb
pushf
imul
and
movl
sub
mov
in
sbb
in
xchg
adcb
jns
inc
mov
ljmp
inc
outsb
fsubr
pop
test
adc
dec
add
mov
jb
adc
xchg
ljmp
or
xchg
filds
mov
push
sub
fsubs
inc
cltd
mov
push
pop
mov
xor
or
add
pop
mov
xchg
jne
shlb
push
stos
hlt
xchg
js
sbb
data16
lods
loopne
lret
shlb
or
and
and
loop
in
loope
mov
loop
jle
pop
mov
push
lods
je
jmp
pop
test
icebp
push
mov
ljmp
jb
cltd
mov
pop
push
pop
das
fimuls
repnz
out
mov
xchg
fwait
mov
ss
xchg
test
ss
push
mov
aas
or
cwtl
inc
cmp
loopne
add
roll
xor
test
sub
test
push
and
sub
enter
adc
lret
popa
push
iret
clc
mov
ret
repnz
int
xchg
int
call
dec
jge
rolb
jecxz
mov
popa
sub
leave
sub
cmpsl
pop
addr16
pop
xor
and
fucomi
xor
enter
ds
mov
jno
inc
lods
cltd
push
test
xlat
xor
stc
cltd
push
mov
addb
arpl
sub
aas
cmp
loopne
add
test
insl
scas
fwait
orl
sbb
adc
ret
outsl
dec
jns
mov
ljmp
and
push
mov
cmp
nop
and
sbb
or
mov
jmp
pop
idivl
cmp
inc
inc
repz
movsb
add
cmp
xchg
sub
cltd
mov
sub
jne
ror
xchg
add
je
mov
push
in
clc
sti
jecxz,pt
xor
in
sbb
cmpsb
pushf
xchg
add
pop
adc
ljmp
inc
xor
xchg
mov
adc
lcall
scas
jle
fbstp
xchg
out
jmp
pop
test
fmull
negb
int
sub
mov
cmc
push
enter
jg
cmp
roll
push
push
jp
ja
mov
adc
shlb
inc
ja
aad
imul
push
int
xchg
jle
test
lods
cmpl
clc
out
pop
push
lea
cld
call
test
ret
inc
cmc
decb
cmp
sub
jbe
jg
insb
and
outsl
push
push
add
idiv
scas
ss
lods
pop
into
mov
cwtl
aad
dec
into
loop
mov
pop
xor
mov
test
aaa
or
sbb
dec
mov
cltd
movsl
outsl
mov
cmp
adc
pushf
cmc
out
jae
sbb
sub
pop
fnstsw
jns
lret
insl
adc
jno
cmpsl
jle
inc
add
iret
test
or
push
xchg
push
dec
sti
subl
cmpsl
sub
call
ss
jmp
jle
cli
and
aam
ss
mov
and
enter
pusha
push
mov
xorb
sahf
clc
scas
jne
test
test
jg
add
cld
cmp
sbb
jno
pushf
lcall
pop
shl
sub
clc
lds
xor
mov
or
xor
clc
mov
fiaddl
js
popa
std
push
xor
push
dec
cltd
negb
mov
es
mov
or
lods
add
hlt
cli
mov
jo
cld
adc
inc
sarl
pop
mov
sbb
add
scas
mov
mov
push
pop
repz
adc
cmp
in
mov
jle
rcrb
dec
xchg
or
jecxz
fstpt
scas
aas
nop
adc
sub
loop
cmp
mov
mov
in
push
mov
inc
mov
pusha
or
dec
js
pop
out
ret
xchg
mov
or
test
insl
cmp
push
xchg
dec
pusha
call
pushf
adc
dec
jbe
adc
fwait
xchg
jg
incb
movsb
cmp
jmp
fidivrl
mov
mov
aam
stos
iret
add
movsl
pop
insb
aas
nop
mov
jae
or
movsl
jge
add
mov
insl
jns
xchg
in
mov
pop
repz
mov
xchg
xchg
fimull
jno
in
dec
jmp
cmp
jno
mov
and
js
iret
xchg
mov
cmp
rcll
shrl
int
fsts
sub
lea
mov
xor
iret
sahf
mov
pop
push
jle
pushf
imul
jne
sahf
ret
ja
and
fidivrl
popa
mov
add
push
outsl
jge
xchg
adc
push
mov
lds
imul
and
xor
insb
cmp
pop
inc
mov
mov
and
push
mov
mov
mov
lods
inc
movsb
cmp
xor
push
mov
jo
push
push
popa
dec
xor
and
clc
sarl
xchg
aam
sbbb
push
pop
je
jns
fwait
cmp
xchg
adc
push
fisttpll
jbe
imul
sahf
in
int
incb
mov
sub
or
mov
rorl
movsl
and
fabs
in
sbb
or
add
test
add
adc
cltd
lea
fsubr
movsb
bound
iret
add
mov
in
roll
es
nop
cld
ja
mov
pop
xchg
mov
add
xchg
jl
add
fisttpl
and
mov
aaa
or
adc
jns
test
inc
mov
pop
int3
push
sbb
sahf
inc
xchg
movsb
mov
mov
xchg
or
inc
dec
cmp
pop
jns
nop
jno
push
mov
test
lods
cmp
jmp
push
fildll
test
mov
mov
or
insl
clc
xchg
push
push
jae
pop
and
mov
lret
lods
add
xor
test
shlb
and
jp
shrl
ret
adc
fidivrs
mov
dec
fbstp
jmp
push
xchg
pop
addr16
dec
cld
sub
lds
push
hlt
pop
adc
adc
dec
jne
sub
inc
xor
sti
xchg
pusha
aam
mov
aam
fcomp
das
arpl
mov
pop
popa
test
mov
in
or
push
outsb
inc
pop
pusha
les
dec
push
enter
mov
mov
nop
dec
into
loope
sub
sbb
adc
daa
cmp
xor
sub
mov
rorl
pop
mov
push
les
push
les
adc
fdivl
xor
clc
dec
jp
mov
loop
test
in
and
mov
dec
and
rcrl
subb
gs
mov
add
or
add
mov
movsb
lods
jl
das
out
loopne
jge
add
pushf
mov
shrb
mov
cmp
dec
cmc
pop
les
rcl
xor
cmp
sbb
fwait
sahf
bound
xor
jg
mov
fstpt
test
das
sbb
adc
lds
xchg
push
or
ret
dec
mov
mov
push
int3
sahf
dec
adc
sbb
es
xchg
and
sbb
test
jp
xchg
xchg
xor
add
cs
in
xlat
xor
cmp
xor
rcr
sub
nop
cmp
in
mov
fcmovnb
jg
jle
sbb
mov
cmpb
or
shrb
int
in
sub
notl
jbe
int
push
shl
adc
mov
rolb
hlt
xchg
jae
in
xchg
int
in
add
das
push
mov
jp
adc
xchg
jne
and
pop
sbb
test
mov
mov
xchg
inc
dec
std
addr16
xchg
jo
dec
and
inc
jnp
mov
and
mov
xchg
enter
pop
shlb
mov
mov
leave
outsl
or
dec
push
cld
and
lcall
jg
push
call
out
jb
outsl
popw
and
mov
mov
push
ja
jnp
or
insl
lret
idiv
sbb
lret
and
jle
sbbb
jae
js
adc
loop
jl
test
lahf
hlt
popa
and
cmpsl
sub
rclb
xchg
loope
scas
adc
rcl
mov
outsb
fnsave
mov
cs
sbb
jl
fisttpl
jne
idiv
notl
sub
sbb
mov
push
jge
sub
dec
xchg
arpl
lahf
cmpsb
cmpsb
nop
jns
push
mov
pushf
push
or
xor
sub
scas
stos
pop
push
inc
mov
jge
mov
xor
pop
es
rcl
push
stc
add
adc
insl
and
orb
add
fcmove
and
pop
popf
fmul
sahf
daa
test
cmp
xlat
stos
je
or
cmp
mov
test
adc
fsubr
lock
or
mov
sbb
cmpb
sbb
outsl
mov
sbb
sub
sti
scas
into
dec
push
insb
jo
mov
in
xor
pushw
lcall
cmpsb
mov
aas
out
ret
mov
outsb
inc
mov
imul
dec
shll
std
in
or
xchg
movsbl
adc
mov
adc
dec
shll
fisubrs
lods
or
xor
pop
sub
sbb
xchg
pop
dec
sub
fcompl
stc
dec
adc
scas
sub
push
das
push
movsl
xor
aam
sahf
mov
stos
movl
es
or
aaa
cltd
push
les
xchg
call
add
scas
pop
enter
jbe
mov
and
mov
dec
aas
add
dec
cmp
push
lds
loop
pop
pop
aas
in
pop
mov
pop
leave
pushf
mov
pop
sbb
lahf
cs
add
into
jnp
adc
jmp
xchg
adcl
and
popf
jmp
add
divl
dec
jg
xor
and
push
push
push
fstps
insl
addr16
sbb
inc
cmc
lcall
scas
mov
and
push
je
cmpsl
add
aam
jne
mov
sbb
sub
stc
xor
repnz
int3
push
push
mov
cmp
lods
xor
xor
call
rorb
cs
mov
aam
add
add
pop
dec
lods
lock
mov
mov
and
das
popa
and
shr
out
xchg
push
mov
pop
pop
hlt
insb
repnz
add
jecxz
fsubrl
fsubrs
mov
sub
inc
mov
lock
xchg
fnstsw
stos
sbb
popa
mov
in
mov
and
mov
sub
stos
push
int
pop
pop
dec
sub
lea
add
mov
or
clc
or
test
adc
adc
inc
popa
xchg
dec
rclb
push
sbb
inc
outsb
inc
or
data16
stc
bound
xor
or
js
in
push
dec
or
pop
in
aaa
push
mov
cmp
loop
cld
enter
xor
aas
mov
or
repnz
imul
in
je
icebp
adc
push
cwtl
mov
mov
cmpsl
mov
ja
movsb
pop
or
shrb
leave
cmp
pop
cmp
pop
sbb
cmp
mov
sub
in
iret
cwtl
jne
adc
out
cmp
cmp
inc
mov
jns
pop
adcb
xchg
shr
test
rcll
mov
mov
pushl
mov
adc
adc
int3
fmuls
mov
and
xchg
inc
xchg
push
int3
xchg
jb
notl
lods
addr16
adc
shrb
daa
pop
push
sbb
int
ljmp
dec
pop
es
das
sub
mov
cmp
arpl
in
lret
std
test
aam
xchg
testl
lret
test
bound
sbb
leave
add
out
fmull
xchg
xchg
fucomp
adc
mov
arpl
ss
pop
mov
cmc
out
jp
sub
test
dec
fbld
cltd
sahf
jno
ret
mov
dec
ret
dec
inc
fldcw
push
cltd
cli
xor
mov
xchg
xlat
mov
sahf
adc
push
ret
push
jns
fistpll
or
push
jmp
mov
mov
sub
mov
pop
inc
ja
pop
sub
inc
mov
int3
cli
add
cmc
sub
idivl
repnz
xor
cltd
xor
adc
pop
dec
lds
mov
sbb
addr16
sbb
scas
fbld
scas
xchg
aaa
mov
shl
ret
aam
mov
mov
add
enter
sti
and
outsb
scas
xor
push
fwait
mov
inc
imul
and
fldt
mov
jns
push
xchg
out
xchg
jnp
aam
je
xchg
and
js
rclb
je
fisubs
or
add
lcall
cmpb
insb
xchg
aad
sbbb
xchg
jp
jle
jae
or
mov
jbe
mov
sub
call
xor
cltd
pop
sbb
xchg
pop
ret
xchg
xchg
inc
shlb
lods
int3
pop
mov
ror
xor
pop
clc
mov
or
jns
stos
xchg
mov
mov
cwtl
mov
pop
and
in
rolb
inc
pusha
popa
shlb
hlt
loopne
or
call
sbb
in
jge
jg
jb
jecxz
in
sbb
push
paddd
mov
jb
inc
xchg
push
inc
andl
aas
mov
in
and
in
jle,pt
orl
lret
lds
lret
into
jbe
fmuls
es
pop
leave
scas
sub
lret
mov
and
jp
cmp
es
int
xor
push
inc
mov
lret
cltd
std
in
stos
or
shlb
jnp
sti
xor
pop
inc
fildll
or
xor
out
cmp
push
or
push
call
sbb
fistpl
push
dec
jb
loope
inc
aas
imul
push
lret
icebp
inc
mov
sbb
jecxz
sahf
inc
lcall
in
loopne
sbb
jge
out
and
push
sahf
or
add
xchg
test
insb
popa
fstpl
scas
jbe
sub
ret
ret
sbb
dec
mov
pusha
push
adc
mov
cmp
push
int
xchg
dec
jecxz
or
xor
out
pusha
loope
in
and
fcoms
sbb
push
adc
int3
cmp
sbb
add
and
lock
lods
scas
inc
xchg
dec
stos
lds
lock
jno
and
jle
sub
cltd
cltd
das
jp
adc
repnz
and
mov
clc
in
sbb
xchg
mov
cltd
scas
call
fidivrl
imul
mov
cmp
movsb
xchg
add
ljmp
dec
ds
mov
or
mov
xchg
sbb
or
push
push
jge
pop
aad
aam
cmpb
push
sub
test
mov
cli
fisubs
jmp
jge
pop
mov
xchg
cmp
sub
cmp
mov
pop
fnstsw
arpl
xor
mov
fbstp
cmc
cld
loopne
int3
add
mov
pushf
xorb
sarb
into
sub
repz
mov
jbe
push
out
lods
outsb
and
imul
mov
mov
xchg
incb
pop
sbb
lret
sbb
or
sbb
inc
jb
in
stos
lcall
adc
mov
cmc
cltd
push
sbb
ret
jne
scas
in
adc
pop
push
pushf
xor
sub
mov
mov
adc
xchg
push
xchg
mov
rcll
jge
ds
scas
test
pop
cmp
aad
lods
xor
pop
push
iret
cmp
and
adc
lods
int
cmp
xchg
push
add
jge
mov
andb
out
lea
mov
mov
sub
mov
adc
dec
repnz
data16
cmp
cltd
sahf
out
ja
mov
jge
xchg
aad
mov
jge
and
mov
gs
mov
gs
cmpsb
mov
insl
mov
test
sahf
sub
stos
add
sbb
inc
push
icebp
clc
sbb
inc
sbb
or
push
sbb
gs
xor
jns
push
inc
inc
mov
sub
stos
mov
adc
push
inc
inc
loop
hlt
push
mov
or
mov
mov
cmp
mov
je
jne
cmp
cmp
and
mov
add
lea
mov
jns
dec
sarl
pop
adc
gs
pop
xor
ret
xor
cmpsl
pop
xor
into
xchg
dec
xor
add
es
nop
addb
repnz
or
cmp
and
and
mov
sbb
adc
mov
repnz
pop
lods
fsub
sub
test
lods
enter
rclb
pusha
pop
xchg
pop
popa
mov
stc
jns
mov
inc
stos
iret
or
mov
push
pop
inc
or
stos
and
adc
or
ds
cmp
mov
cli
jns
push
sbb
mov
and
aam
mov
cmp
jno
mov
and
jecxz
sub
loope
in
and
lods
lea
jae
mov
es
adc
cmp
nop
jae
push
inc
jp
fwait
jl
adc
in
out
dec
in
cli
adc
lret
inc
fiaddl
andl
mov
stc
test
stos
pop
xchg
sub
xchg
ljmp
cmp
ret
mov
and
jnp
xchg
sub
cmp
lea
dec
dec
fwait
repnz
leave
sub
lea
cmp
and
xchg
or
or
push
out
ret
add
adc
or
lock
js
xchg
dec
js
xchg
or
fcoms
js
xchg
mov
pop
pmaxsw
in
out
mov
lods
popf
mov
ja
lock
mov
fdiv
dec
jno
cmp
stos
repz
and
sbb
adc
sbb
dec
mov
push
loope
repz
dec
mov
sub
or
cmp
aad
inc
push
pop
stc
cld
or
stos
add
jae
xchg
mov
in
sbb
push
xchg
aam
arpl
scas
imul
cli
pushf
sbb
dec
int
pop
arpl
mov
inc
jnp
mov
loop
push
cld
mov
cltd
inc
push
jns
mov
fidivl
jno
shlb
jb
mov
nop
jbe
in
loop
jnp
in
mov
mov
push
cmc
cwtl
jb
in
mov
inc
adc
hlt
cmc
stos
movsb
inc
jo
divb
mov
pop
adc
adc
call
sbb
loop
orb
adc
push
lods
inc
loop
hlt
or
popf
adc
stos
iret
insb
fsts
and
loop
dec
jmp
add
lahf
inc
cmp
out
fsubl
in
mov
insl
and
ja
clc
gs
cmp
cwtl
arpl
pop
stc
jmp
les
mov
movsb
push
int
xchg
push
jno
pop
push
or
mov
pop
cmp
pusha
push
inc
lret
frstor
mov
int
or
pop
mov
cmp
std
repnz
inc
mov
and
pause
ffreep
mov
jnp
dec
push
cmp
adc
xchg
mov
or
sbb
fmull
test
inc
mov
add
add
test
push
xchg
add
add
or
jo
fidivrl
fdivrl
adc
mov
push
mov
inc
cmp
mov
lea
cltd
jnp
lods
cmp
and
xchg
inc
xchg
xor
inc
inc
or
add
arpl
and
jne
push
cwtl
push
pmullw
icebp
ret
and
pop
aaa
hlt
xor
scas
or
shrb
cmp
fstps
jae
or
push
sbb
mov
jne
inc
cwtl
sbb
jg
dec
cmp
ljmp
add
push
sub
push
xchg
mov
in
or
and
scas
jle
imul
and
scas
pop
loopne
out
test
inc
jmp
rol
fdivrs
cmpsb
xorl
fidivrl
les
fldenv
scas
push
xlat
xor
movsb
in
add
jns
aam
jmp
xor
fdivs
cmp
mov
mov
cwtl
hlt
in
jnp
pop
or
cmp
movsb
dec
and
aam
mov
push
xchg
jecxz
cmp
mov
mov
in
and
leave
jb
aam
cmc
sbb
iret
ja
xor
fistl
out
stc
jo
pop
test
call
mov
cltd
pushf
inc
insb
mov
sub
shrb
mov
js
push
stos
out
fwait
push
scas
pop
iret
popf
add
dec
or
lea
mov
inc
dec
mov
adc
sbb
jmp
inc
jge
fnstenv
mov
lock
stos
ret
ret
lods
cltd
pop
mov
out
push
xchg
sbb
insl
xchg
filds
and
data16
mov
mov
int
stos
mov
test
push
add
cmp
test
into
add
mov
sub
lret
iret
sbb
cmp
mov
pop
imul
inc
xor
bound
lahf
sahf
js
dec
loope
sub
pop
mov
push
popf
ret
les
pop
sbb
inc
push
xor
mov
movsl
in
imul
cmp
movsl
push
and
fdiv
sbb
fnstcw
mov
mov
jae
push
int
jbe
call
xor
cli
add
arpl
das
jge
adc
sahf
mov
js
dec
insb
mov
mov
sbb
in
in
lea
sub
dec
test
inc
xchg
shlb
dec
dec
jne
sbb
fwait
outsb
mov
mov
add
stos
jmp
xchg
out
and
lods
insl
rolb
decb
iret
cmc
popa
aam
dec
lahf
mov
adc
and
ja
mov
or
mov
xor
xchg
mov
sbb
mov
stc
insl
std
lds
std
dec
mov
popa
mov
xchg
jge
cmp
je
mov
mov
pusha
lcall
in
std
jne
test
popf
mov
fcomps
jbe
push
sbb
cltd
cmp
inc
sbb
jle
jnp
xor
jg
ror
shl
movnti
push
xorl
dec
arpl
pop
into
add
pop
mov
mov
xchg
pop
cmp
arpl
jmp
jbe
fmul
xchg
fsubrs
sahf
mulb
xchg
pop
jns
adc
sub
loop
data16
inc
outsb
xlat
and
and
push
and
sahf
lods
xchg
cmpsl
mov
in
mov
cwtl
nop
xchg
add
inc
xor
inc
int3
xchg
or
jge
mov
jp
adc
jne
mov
mov
mov
or
jo
add
jae
fdivrs
mov
fdiv
sahf
inc
push
mov
ds
pop
and
push
mov
pop
hlt
dec
mov
xchg
out
mov
pusha
mov
popf
push
test
inc
notl
pop
dec
dec
xlat
inc
dec
stc
sub
sbb
clc
sub
cmc
mov
ror
cmp
fisubrs
xchg
adc
pop
xchg
adc
test
mov
sbb
xorl
int
mov
movsb
stc
mov
pop
mov
sub
mov
stc
inc
xchg
inc
add
push
roll
inc
rorl
lret
xchg
jo
cltd
imul
leave
mov
loopne
sbb
dec
js
mov
mov
mov
sbb
outsl
mov
cli
cltd
sbbb
add
popa
xor
and
cmp
sbb
xchg
sub
mov
add
xchg
adc
shlb
mov
cltd
nop
push
jge
ret
mov
sahf
imul
xchg
and
sub
adc
test
adc
adc
pushw
and
and
ljmp
jno
dec
jp
xchg
and
sub
cmpb
sub
outsb
xchg
ja
jl
xchg
hlt
test
in
adc
adcb
sub
test
mov
adc
js
adc
arpl
mov
mov
xor
xchg
inc
sub
daa
mov
int
inc
imul
push
xchg
xchg
aas
fisttps
mov
lds
fwait
aas
add
stos
mov
cmc
test
mov
inc
adc
push
mov
sbbb
jbe
xchg
xor
adc
add
arpl
and
enter
mov
ret
mov
pop
ljmp
pop
cld
dec
sub
les
and
insl
xchg
ss
addr16
into
add
sbb
pop
clc
fstl
pop
ss
test
dec
pop
pop
out
rcrl
negl
jnp
push
cmpsb
fimuls
mov
dec
jge
and
push
cmpsl
fs
outsb
loope
sbb
sbb
shrb
outsl
mov
xchg
push
xchg
jno
mov
xchg
mov
jb
fistpl
aaa
aaa
inc
mov
loope
out
negb
mov
std
adc
pop
sti
push
data16
mov
es
push
and
daa
in
and
and
inc
or
inc
aam
dec
icebp
add
or
in
sub
test
in
addl
pop
arpl
loop
add
in
xchg
adc
jmp
lahf
xchg
and
lret
pop
sbb
jo
add
and
movsl
insl
cmp
clc
inc
jns
imul
popa
es
xor
mov
mov
cltd
jge
ret
daa
adc
lcall
adc
dec
in
gs
mov
cmp
inc
lret
repz
xor
add
rcll
fdivrs
in
jmp
mov
fwait
repnz
inc
lea
ja
push
loop
jp
fldl
fwait
cmp
fucom
movsl
mov
mov
adc
aam
add
pop
test
lret
imul
mov
xor
test
arpl
xchg
jbe
in
ret
inc
popa
dec
inc
jg
jo
imul
jns
push
adc
aad
out
cmp
sbb
adcb
lods
dec
mov
mov
jmp
and
out
cmp
shll
push
insl
push
or
packssdw
sub
cli
lds
lods
insb
out
pushl
loopne
jmp
and
sbb
int
pop
xor
fistpll
add
mov
and
mov
jb
lock
xor
mov
dec
test
sbbb
rcll
lahf
ds
pop
frstor
sbb
lods
inc
and
lret
loopne
ja
or
movsl
sub
push
pusha
mov
push
xor
stc
xchg
push
sub
ss
leave
mov
repz
and
xor
mov
call
cli
aas
repz
or
push
cmpl
outsb
xor
lods
test
jl
fcmovb
sbb
imul
loop
inc
mov
lds
adc
lods
out
push
adc
imul
rorb
out
mov
sti
movsb
fisttpl
sub
dec
scas
orl
mov
sub
sub
xor
int3
mov
insl
shrb
push
pop
mov
shrl
das
mov
xchg
lods
mov
inc
notl
cltd
stos
rclb
sub
dec
insl
shr
pop
pop
movsb
cmp
insl
ret
aam
dec
sahf
enter
int3
mov
addb
xchg
dec
jo
rol
bnd
out
xlat
xchg
cmp
ficomps
push
lds
dec
aas
call
pop
bound
jo
pop
mov
and
add
dec
cmc
xchg
mov
mov
and
and
fstpt
cmp
inc
cmp
mov
mov
lahf
dec
xor
and
arpl
gs
xchg
pop
cmpb
and
jecxz
mov
stc
inc
gs
push
and
push
mov
push
sub
repz
inc
mov
mov
lds
cltd
pop
adc
mov
add
pop
enter
aam
xlat
rcrl
dec
push
outsl
add
inc
adc
popf
cmp
jl
fiaddl
mov
lret
mov
mov
xor
push
push
xchg
stos
sbb
mov
mov
mov
sbb
jae
jmp
lret
out
adc
sub
imulb
pop
mov
outsl
jb
sahf
dec
mov
mov
pop
and
mov
outsl
mov
and
adcl
repnz
mov
addr16
mov
xor
pop
xchg
jmp
adc
es
mov
pop
jle
pop
jne
add
jno
and
inc
sub
xor
mov
jge
dec
sbb
stc
sbb
pop
inc
popf
out
gs
movsb
adc
sub
xchg
or
in
mov
push
bound
mov
test
or
adc
fstps
movsb
push
cmc
fldcw
arpl
cmp
outsb
mov
and
cltd
mov
std
pushf
mov
cld
test
in
adc
or
repnz
jns
fwait
out
fs
adc
push
push
mov
les
lods
pushf
cwtl
aaa
push
gs
sub
das
cmc
repnz
outsb
add
xchg
in
and
mov
sbb
push
mov
int
dec
pusha
xchg
mov
xchg
ret
pushf
pop
inc
dec
mov
sub
mov
cwtl
jge
mov
or
mov
cltd
bound
cmp
aaa
dec
xlat
rcl
hlt
inc
in
sbb
cmpsb
cs
popf
fdivs
inc
dec
js
pop
jns
sti
mov
test
adc
lds
or
lock
lahf
and
gs
pop
cmp
sub
push
and
jno
loopne
jmp
stos
cmp
test
dec
fisubl
dec
mov
mov
mov
std
scas
nop
mov
in
cld
fsubrs
outsl
adc
mov
es
sub
mov
cmc
jns
sbb
cmpsb
adcb
sbb
ja
ret
xchg
cmp
ret
into
inc
xor
sub
mov
lods
lret
sti
stc
popa
sbb
leave
dec
loop
ljmp
addr16
xchg
pop
sub
fsubr
cmp
add
enter
sbb
mov
sub
sub
sub
bound
inc
cld
aas
enter
andl
mov
rcrl
ljmp
roll
repz
aam
inc
notrack
mov
in
xlat
dec
addl
decb
pop
mov
test
xor
and
pop
das
cmpsl
mov
data16
mov
cmp
xchg
lretw
pop
and
pop
xchg
insb
jae
add
cmp
xor
decl
loope
imul
gs
jae
sub
out
out
xor
mov
add
push
inc
and
push
push
fnstcw
ds
mov
aam
mov
adcb
or
or
jb
int3
add
xchg
inc
push
lcall
pop
push
ljmp
loope
mov
nop
mov
popa
pushf
inc
xor
cli
ds
xor
and
scas
xchg
mov
dec
jg
cmp
hlt
test
call
shl
lock
lcall
jp
sbb
popf
lods
inc
mov
and
es
mov
mov
dec
sub
and
arpl
adc
xor
call
push
add
cmp
lods
fcoml
sti
sbb
lods
les
mov
xchg
push
sub
fsts
or
into
mov
add
loope
xor
xchg
pop
mov
mov
lock
pop
lock
cwtl
jecxz
sbb
xor
popf
inc
add
bound
dec
adc
movsl
sbb
jnp
cmpsl
cld
jb
adc
dec
sub
xchg
xor
cli
ds
pop
or
dec
mov
inc
pop
mov
les
push
clc
cmp
mov
cmp
mov
inc
cmp
loopne
cmp
test
sbb
addr16
xor
jo
sti
shrl
loope
mov
dec
and
popf
outsb
push
add
lods
je
notl
repnz
and
icebp
and
call
fwait
dec
cmp
mov
xchg
fsubl
fwait
mov
and
cli
hlt
ret
dec
stc
cmpsb
rorl
mov
pop
sub
clc
and
or
or
mov
add
jle
loop
bound
push
mov
adc
mov
test
push
mov
inc
pop
or
fwait
test
mul
scas
test
lds
pop
sbb
cmp
mov
xchg
mov
frstor
mov
push
aaa
cltd
aad
push
ret
mov
lods
cwtl
inc
jno
popf
mov
jo
jmp
enter
mov
jg
cmp
fcomip
mov
iret
inc
addr16
dec
lods
sbb
lods
lret
addr16
xchg
inc
xchg
xchg
stos
mov
sub
mov
mov
lea
fxch
xor
jae
and
aas
jbe
inc
and
xor
mov
inc
iret
mov
movsl
ja
movsb
push
aad
mov
loopne
test
adc
add
jae
gs
movsl
out
ss
mov
movsb
mov
hlt
mov
stos
cmp
pop
adc
pop
gs
mov
and
fs
cmp
jne
mov
adc
pop
pop
adc
dec
push
xlat
and
imul
testb
out
jo
xor
mov
dec
mov
neg
fs
mov
push
jecxz
sub
movsb
es
test
in
mov
int3
adc
jno
sub
pushf
dec
sahf
in
rorb
xchg
xor
xor
mov
les
in
and
aam
lret
xchg
test
mov
es
xlat
shll
testl
pusha
pop
jge
xchg
add
rorl
xchg
sub
jne
mov
xchg
mov
leave
scas
mov
push
jae
jl
roll
add
and
sbb
fadds
lds
xlat
repnz
movsb
aam
movsl
sbb
in
aas
ss
test
jle
mov
sub
xchg
push
adc
jae
or
jl
push
fs
movsb
scas
in
push
add
gs
sbb
repnz
cmc
mov
fdivl
pushf
lds
sahf
jle
mov
icebp
test
and
jno
xor
cmc
test
jno
mov
movsb
xchg
cmp
jecxz
jns
xchg
ret
sbb
adc
nop
inc
fs
sbb
cs
mov
jb
out
sbb
mov
xchg
lahf
loop
pop
insl
popa
rol
das
cmp
cmp
mov
push
cwtl
and
movsl
aaa
decl
cs
outsb
arpl
ret
mov
pushf
pop
sub
sbb
jb
cs
nop
adc
loopne
popf
mov
mov
add
rclb
das
fisubrs
add
and
std
aad
dec
push
pop
jne
repnz
mov
outsl
pop
inc
dec
or
leave
arpl
and
nop
ror
push
js
xor
ljmp
fldenv
lods
cmp
loopne
push
dec
or
cltd
or
sub
inc
jmp
out
xchg
fisttpll
adcl
xor
mov
dec
jbe
stos
adc
xlat
cmp
lea
adc
cwtl
arpl
into
lret
cmp
and
xchg
movsb
lds
sub
int3
sub
sub
adcl
pop
int3
incl
mov
cwtl
aas
hlt
ret
mov
sbb
insb
repnz
mov
adc
stos
pop
sub
xlat
push
repnz
rcll
push
repz
jp
jecxz
and
jl
or
and
dec
xchg
or
mov
mov
out
xlat
mov
insb
mov
call
mov
sub
mov
int3
pop
jl
imul
insl
add
sbb
mov
aas
nop
hlt
mov
into
std
push
movsl
scas
push
push
rcrl
loopne
adc
adc
hlt
leave
push
add
addr16
add
ja
fwait
ljmp
ja
pop
and
xchg
push
or
insl
sti
daa
leave
cmp
add
insb
fldt
jmp
iret
push
dec
cmpl
xchg
test
insl
lock
movl
ljmp
xor
ret
xor
sbb
jmp
push
pop
ret
adc
sahf
pop
sbb
mov
rol
mov
gs
and
out
dec
xchg
mov
xchg
mov
pop
mov
incb
push
les
testb
leave
sub
sti
bound
insl
push
lcall
xchg
adc
std
or
shrl
add
shl
push
jb
into
outsb
out
push
decl
xor
movsb
jae
mov
dec
sub
stos
sub
add
cmp
cmp
in
jge
sbb
jns
stos
pop
dec
cmp
ret
rolb
pop
jmp
shrb
fcoms
jnp
sub
fadd
and
sbb
mov
add
fwait
adc
adc
xlat
int
aam
xlat
test
fldcw
mov
mov
orb
jbe
and
cmp
jns
inc
outsl
push
jmp
adcl
clc
movsb
add
negb
sbb
jge
mov
and
adc
stc
mov
sub
sbb
lret
cmp
add
jmp
dec
sbb
in
mov
push
icebp
jp
adc
lea
cli
cmp
fcomps
out
pop
sti
xchg
pop
or
ficoml
inc
xchg
ds
dec
loope
pop
lahf
cwtl
call
dec
filds
pop
lock
xor
mov
sub
cmp
or
and
pop
add
jmp
xor
sarl
in
and
push
cltd
jp
mov
hlt
mov
mov
leave
ja
or
inc
dec
xor
scas
sbbl
loopne
nop
mov
aas
pop
in
sbb
sub
xchg
mov
int
xor
repz
sbb
push
xchg
pop
pop
and
mov
bound
sti
sub
or
or
pop
lea
test
sub
xchg
arpl
xor
loope
cmpsb
xchg
iret
mov
and
pusha
mov
in
xchg
sub
ss
arpl
lea
push
popf
dec
inc
pop
sbb
push
out
mov
sbb
ljmp
mov
stos
cmpsb
lea
jmp
and
pop
repnz
fs
rorb
sbb
icebp
movsb
mov
xor
inc
jne
mov
jbe
leave
adc
lea
and
in
cli
push
pop
xorl
mov
dec
fs
adc
inc
arpl
mov
add
jns
in
inc
clc
or
push
popa
ljmp
in
rorl
fstps
sbb
mov
adc
loopne
fldl
outsl
pop
sub
cltd
lds
lcall
and
dec
pop
mov
out
dec
or
fcoms
sub
push
xchg
hlt
sbb
jns
scas
or
dec
xor
shlb
adc
loope
and
xor
jp
or
stc
or
addr16
adc
shr
loop
xor
sub
scas
lods
sbb
mov
sarb
icebp
sbb
mov
add
add
dec
or
adc
lods
add
je
xchg
jo
mov
inc
push
add
sarl
push
adc
xor
or
push
jns
es
or
mov
cli
pushf
insb
pop
push
fists
inc
jae
sahf
popf
fnop
test
dec
adc
fdivrl
jmp
push
mov
test
dec
dec
cmp
inc
shl
adc
cld
and
jge
out
ss
testl
xor
lds
das
sarb
and
cmp
movsl
jecxz
pop
test
jo
aaa
into
jb
and
pop
testb
adc
push
gs
scas
or
push
mov
pop
jl
aas
nop
jne
push
and
and
xchg
shll
push
or
sub
stc
bound
or
push
jecxz
insb
scas
jecxz
inc
gs
mov
xor
fs
mov
inc
pop
into
add
adc
mov
shlb
sub
mov
lcall
int
pop
loope
jmp
mov
adc
test
in
popa
push
enter
divl
and
and
fldenv
xor
jp
sti
or
bound
movsb
adc
inc
les
pop
dec
mov
dec
xor
adc
dec
cmc
mov
test
xchg
je,pn
mov
dec
rorl
pop
pop
and
cmpsb
outsl
and
mov
sbb
movsb
les
add
les
mov
mov
push
sahf
loop
jp
mov
or
cwtl
jbe
rclb
sbb
jge
hlt
cmc
mov
sbb
test
xor
testb
sub
aaa
mov
jmp
xor
adc
sbb
notb
popa
inc
repnz
lods
rcrl
ret
ja
dec
lret
cmp
jnp
mov
mov
pop
idivl
out
xchg
fdivp
inc
xchg
insb
int
movsb
sbb
mov
out
jg
sub
lahf
mov
pop
aam
int3
jg
ljmp
movsb
pushl
mov
insb
push
sub
and
add
clc
push
scas
fwait
push
arpl
pop
jecxz
mov
test
xor
std
loope
cmp
loop
inc
inc
iret
pop
sbb
sbb
mov
sahf
lods
sar
insl
enter
xchg
pop
rclb
xor
dec
xchg
dec
xchg
mov
sbb
sbb
sbb
adc
pusha
xor
add
push
dec
cltd
add
bound
mov
mov
jl
sbb
mov
fldenv
int3
inc
mov
clc
sub
stos
int3
imul
add
lahf
les
cmp
adc
rol
and
test
enter
jmp
roll
add
adc
jg
scas
scas
cmc
es
cltd
fstl
cmc
add
add
ret
and
arpl
test
out
xor
adc
jl
paddq
push
hlt
lret
mov
shrb
mov
xor
mov
scas
insl
in
push
addb
faddl
mov
cmp
ds
and
inc
sub
gs
scas
gs
popa
add
in
rcrb
out
les
sub
das
fnstenv
or
cmp
mov
rcl
jmp
jnp
loop
andb
pop
cmc
mov
mov
loopne
xlat
add
clc
movsl
test
add
dec
and
loop
mov
mov
and
mov
rolb
nop
frstor
scas
jp
into
dec
and
or
adc
das
ljmp
xchg
pop
cmpb
sti
adc
jns
fsubrp
jecxz
lods
xor
data16
mov
cld
push
in
add
jb
div
inc
adc
hlt
jb
fwait
jno
stos
jns
adc
mov
xchg
loopne
jmp
mov
push
push
repz
pushf
sti
das
in
xchg
pop
jnp
aas
rorl
mov
jg
mov
std
scas
jecxz
inc
add
and
cmp
pop
jge
in
sbb
sbbl
ss
and
popa
iret
xor
fldenv
cltd
hlt
sbb
addr16
or
popa
scas
in
aaa
into
push
insb
jge
ret
jno
sahf
cmp
lds
cld
mov
bound
mov
shlb
mov
lcall
cltd
aam
imul
sbb
push
pushf
and
fdivrl
cmp
xchg
test
insl
xchg
mov
aam
lds
fstpt
push
mov
mov
subl
jp
push
fwait
ss
subb
sbb
mov
mov
daa
or
popa
stc
dec
cli
outsb
aam
mov
mov
mov
stos
jmp
lds
dec
fldt
pop
mov
jmp
ds
bound
push
sub
pop
sbb
xchg
fwait
jno
pop
xor
inc
mov
enter
outsb
push
lods
push
sub
add
dec
pop
test
cmp
scas
dec
jg
xchg
jl
and
out
push
jnp
mov
xchg
adc
push
add
inc
sbb
add
aam
xchg
dec
adc
jp
mov
sbbb
out
imul
shll
pop
fidivrl
flds
xchg
push
ror
and
es
mov
mov
ret
push
mov
orl
int3
sar
add
sbb
push
jo
or
adc
mov
rcrb
repnz
test
jne
div
sbb
jmp
sub
sahf
test
ret
inc
mov
popa
pop
fnstcw
xchg
xor
jo
mov
enter
in
out
jns
fdivrs
or
xchg
fldenv
rcrl
cmp
jl
jno
jl
rcr
in
call
pop
pop
xlat
mov
sub
mov
lods
xchg
and
ret
push
adc
xchg
ret
ljmp
sahf
inc
ret
rclb
push
pushf
push
lods
pushf
pop
inc
test
test
adc
js
dec
sbb
mov
pop
in
ret
cmp
leave
push
jo
mov
mov
inc
mov
dec
stos
xor
lret
xchg
ja
inc
mov
or
push
popf
mov
dec
sti
xchg
sahf
inc
pop
sbb
push
mov
jmp
and
loopne
pushf
mov
icebp
mov
mov
jl
aad
out
pop
jns
in
jae
and
jo
int3
and
mov
aam
dec
loope
xchg
pop
hlt
sub
mov
sub
xlat
jmp
in
cmp
cmp
cmp
int3
xchg
arpl
or
popf
and
and
mov
cmp
js
mov
cs
pop
pop
rorb
xchg
popa
addr16
pop
sbb
dec
dec
inc
shlb
push
push
mov
inc
push
pop
or
cs
mov
inc
sub
leave
mov
sbb
sub
stos
mov
sub
mov
scas
or
push
adc
shlb
or
shll
pop
xor
hlt
outsb
inc
sbb
add
push
lock
sbb
imul
aam
fwait
incb
pop
in
je
cmp
mov
xchg
pop
shrl
push
pop
dec
fisttpl
dec
movsl
jno
jp
addb
jns
imul
loope
lea
ja
xchg
xlat
pop
xchg
or
jbe
inc
iret
adc
xchg
push
cmp
mov
pop
mov
mov
cmp
push
mov
mov
std
inc
out
mov
sub
loop
sbb
or
ret
mov
add
aam
jge
stos
in
xchg
mov
mov
add
sbb
mov
mov
xchg
test
hlt
shll
sbb
mov
push
push
jmp
orl
pop
or
mov
pop
jecxz
or
aas
mov
cmpsb
mov
out
sbb
mov
cmp
xchg
rorl
test
mov
dec
into
les
roll
mov
push
xor
popa
stos
adc
ret
lcall
je
bound
xorl
shl
fstl
inc
rcr
mov
sub
bound
mov
push
xchg
mov
sub
and
dec
xor
sbb
or
aam
stc
mov
and
or
mov
stos
jnp
add
lahf
mov
clc
stc
je
push
cmc
mov
test
mov
lods
clc
or
sub
or
or
dec
mov
add
jg
das
in
arpl
cmp
push
js
test
mov
dec
in
adc
sbb
lcall
dec
adc
jnp
dec
adc
xchg
pusha
in
jge
or
imul
push
daa
mov
dec
dec
cltd
rclb
insl
test
jmp
inc
aaa
xor
lcall
add
jge
fnstenv
push
arpl
jg
and
test
dec
bound
push
cmp
add
fidivrl
mov
push
inc
and
scas
mov
ret
jae
mov
je
adc
pop
or
es
std
jl
adc
repnz
shlb
mov
loop
xor
aad
fadds
cmp
fwait
out
mov
push
push
sbb
push
adc
in
in
sbb
shlb
sub
lea
sbb
sbb
movsl
adc
cmp
mov
inc
jo
cmp
imulb
les
sbb
cmp
xchg
hlt
int
sbb
mov
das
mov
xor
push
inc
xchg
jecxz
and
push
iret
jno
dec
adc
ret
or
int3
fstl
inc
stos
sbb
inc
mov
pushf
clc
mov
dec
aaa
sub
xchg
pop
cmpsb
adc
add
cmpsl
mov
nop
and
mov
ret
flds
inc
repz
xor
or
xchg
insl
cmp
xchg
loope
arpl
inc
mov
cmp
jp
push
push
xchg
cwtl
dec
cmpsl
cmp
hlt
lods
mov
hlt
loopne
outsb
xor
int3
or
or
stc
jmp
loop
push
add
insl
test
push
cmc
mov
sbb
jmp
mov
arpl
das
test
scas
or
mov
out
jne
push
sub
lock
daa
mov
mov
mov
aas
mov
mov
inc
mov
inc
inc
test
dec
pop
stc
loop
jbe
das
add
sub
add
adc
mov
adc
clc
gs
inc
insl
mov
shrl
mov
mov
insl
out
mov
dec
adcb
sti
mov
sbb
push
dec
jns
and
push
push
mov
and
inc
rcrb
pop
js,pn
mov
aad
xchg
cmp
jne
sbb
mov
xor
ja
add
stos
ja
mov
add
ja
and
pusha
hlt
sub
out
les
daa
add
jno
push
daa
mov
mov
je
push
or
mov
lods
dec
in
push
mov
je
inc
movsl
mov
sbb
fisubrs
xchg
push
and
xor
sub
clc
push
daa
pop
sbb
push
adc
mov
mov
push
jmp
mov
and
mov
lret
sbb
popf
ljmp
adc
mov
lods
sbb
mov
jo
sbb
xorl
sbb
lcall
cmpsb
dec
push
mov
shr
or
aam
stc
mov
hlt
dec
repz
or
mov
add
lahf
mov
clc
xor
and
push
nop
cwtl
das
mov
xor
ljmp
stc
fdivrl
jo
mov
sub
mov
or
adc
add
cs
mov
mov
icebp
mov
or
jl
out
scas
push
aas
pop
inc
push
push
dec
jmp
xchg
xchg
mov
dec
ret
mov
lock
cmp
bound
test
insl
inc
sbb
sub
in
stos
aaa
test
mov
sbb
iret
jp
test
pop
shlb
sub
lods
mov
lret
cmp
inc
mov
xchg
mov
data16
jno
scas
cli
ja
mov
and
push
adc
push
add
xor
hlt
sub
xchg
rclb
lds
dec
jae
sbb
add
dec
shl
cmp
rcrl
mov
pop
mov
dec
setg
rcrl
mov
xlat
mov
shll
or
gs
pop
xor
inc
xchg
lods
stos
pop
mov
lret
outsl
mov
dec
std
iret
sbb
mov
lds
sub
adc
push
or
cs
sub
dec
loopne
popa
rcr
xor
pop
lea
outsl
pop
sar
adc
add
nop
cld
or
mul
out
lahf
cmc
orb
sub
mov
pop
push
jo
adc
jno
dec
pop
lcall
mov
fldln2
ret
add
aaa
push
cmpl
mov
xchg
push
fwait
scas
dec
xchg
sub
movsl
idivl
sub
ja
adc
daa
loope
dec
enter
cli
and
mov
in
adc
fwait
sbb
cmp
fisttpl
pop
push
pop
inc
scas
lods
stos
xchg
data16
adc
add
ret
gs
lret
jns
mov
push
mov
mov
inc
rcr
mov
aas
push
push
movsb
xchg
sub
aam
jge
cmp
lods
xchg
and
out
sub
daa
mov
sbb
mov
mov
mov
lcall
push
pushf
insb
jge
or
inc
xchg
test
lret
inc
cli
push
sub
ljmp
mov
aam
and
lds
push
jecxz
fisubl
or
add
mov
call
scas
ljmp
aad
xchg
sub
loop
cmp
and
push
cmp
cmp
insb
mov
dec
mov
adc
icebp
lock
das
imul
lahf
call
cld
ja
push
fldt
or
sti
movsl
stos
scas
pop
mov
ret
cmp
lods
ret
or
in
std
mov
xchg
insb
es
jb
push
pushl
jns
adc
or
outsl
pop
aas
mov
mov
daa
pusha
lahf
mov
push
bswap
sbb
mov
clc
dec
std
adc
jmp
push
xor
mov
jl
add
mov
mov
cmp
xchg
adc
in
sbb
jle
popa
adc
xor
add
cmp
sub
dec
mov
sbb
sub
out
cmp
std
jo
sbb
ljmp
in
cmp
hlt
lds
cmp
std
cmc
ret
cwtl
or
fcompl
mov
repnz
in
adc
out
fsubrs
lds
sub
outsb
loopne
frstor
mov
jae
xchg
jmp
sbb
mov
imul
shrl
loop
rcl
test
shl
out
xor
imul
setle
fiadds
inc
cmp
jmp
pusha
inc
lock
sbb
jns
and
leave
testl
inc
pushl
ds
inc
sbb
xchg
into
sub
push
enter
fcoml
pop
dec
mov
pop
xchg
movsl
fisttps
cli
outsb
mov
jl
sbb
test
xchg
pop
in
mov
mov
les
mov
adc
push
mov
mov
sub
cmpb
push
pusha
hlt
mov
xchg
jmp
cmp
push
int3
sub
popf
sbb
mov
stc
js
lcall
push
subb
popf
inc
adc
jp
push
xchg
cltd
ja
sub
push
mov
out
loopne
inc
xor
lret
add
outsl
fsubrs
xor
lods
outsl
cltd
out
cmpsb
imul
in
xchg
dec
or
jo
mov
je
or
shlb
fs
jae
sti
dec
leave
sbb
in
or
bound
aas
in
mov
pusha
mov
cmpsb
xchg
jge
cmpsb
cmp
es
pushw
mov
mov
mov
je
jns
lret
out
out
xor
orb
cmp
and
push
data16
jnp
repnz
stos
jno
out
push
pusha
stc
add
jnp
xchg
or
push
add
hlt
or
fnstsw
lret
jo
inc
test
aas
faddl
fs
jae
fcmovne
xchg
jl
lcall
jns
cld
mov
rcrb
fmul
sbb
sub
in
cltd
pop
jno
mov
xor
xchg
xchg
or
ret
test
shll
sbb
mov
popa
jnp
or
mov
outsb
cmp
das
loope
xlat
add
fimuls
popf
xchg
add
shr
sbb
adc
ja
xchg
rcr
xchg
xorb
leave
or
push
adc
insb
xcrypt-ecb
cmpsl
leave
mov
lcall
mov
adc
arpl
fiadds
gs
mov
sbb
mov
and
fstps
lods
dec
adc
movb
int3
addr16
movsl
loop
xor
jge
cmp
gs
dec
lds
popa
popa
stos
mov
test
jmp
aas
data16
jg
sub
jle
and
jno
cmp
adc
cwtl
fwait
int
push
int
rcrl
xlat
stos
clc
jl
mov
push
out
es
cs
or
or
cmp
mov
add
data16
mov
mov
mov
mov
clc
ror
js
dec
dec
dec
mov
mov
mov
pop
imul
mov
sbb
jge
pop
bound
cmp
test
jae
fcom
xlat
cs
test
mov
pop
inc
inc
pushf
mov
push
adc
mov
push
out
xchg
nop
push
rorb
sbb
jno
mov
add
pop
xlat
mov
jae
mov
movl
fdivrs
mov
mov
pop
sbbb
shrb
sub
addr16
lcall
adc
repnz
xchg
mov
inc
cmp
add
pop
push
movsl
pop
fnsetpm(287
mov
jo
imul
ljmp
jns
jg
inc
in
lods
push
mov
push
cmp
lret
sub
jns
xchg
push
add
dec
mov
popa
jle
mov
xor
addb
mov
je
scas
out
out
or
xchg
mov
push
xor
icebp
dec
roll
in
xchg
sub
addb
aam
js
outsb
xchg
fdivl
ret
scas
jp
pop
pop
mov
dec
js
and
jbe
mov
jmp
je
jns
dec
test
pop
inc
scas
mov
jae
xchg
js
rcrl
pop
mov
pop
negl
decl
add
push
adc
xor
xor
rol
push
cmc
std
adc
fists
inc
lods
sbb
dec
fildl
fs
inc
stos
fcmovnu
dec
xchg
test
and
filds
jne
jg
les
fldl
aad
js
icebp
xchg
push
adc
adc
popa
mov
popa
cmp
mov
xchg
cld
je
push
push
repz
iret
gs
dec
and
adc
pop
mov
push
test
int3
xchg
roll
test
leave
scas
shl
jmp
or
fidivrl
jecxz
loop
aas
mov
jle
mov
xchg
xchg
dec
bound
adc
mov
ljmp
xor
and
sbb
mov
cmpsb
ja
inc
addr16
mov
sbb
gs
cwtl
cmp
ret
mov
add
jnp
xor
shrl
cmpsb
jno
mov
mov
jae
or
outsb
push
aam
add
xchg
imul
mov
and
outsb
dec
sub
or
cmp
xor
fcoml
push
cmc
jge
imul
sub
add
cmp
stc
xchg
stos
scas
arpl
dec
mov
inc
fmul
jo
in
cld
stos
dec
mov
gs
push
sahf
dec
ds
sub
jns
fs
aas
arpl
pop
hlt
xor
pop
push
dec
mov
dec
fbstp
loope
mov
mov
cmpb
push
in
lods
jmp
test
js
popf
outsl
sbb
in
dec
in
mov
ljmp
mov
movsb
sarb
lret
push
mov
inc
or
dec
fcoml
push
dec
adc
stc
inc
pop
popf
daa
push
adc
fucomi
scas
fstpt
mov
dec
int3
movb
pop
lahf
ret
or
stos
cmp
iret
xor
pop
push
jne
int
sub
ljmp
jge
adc
call
andb
movsb
or
adc
repnz
and
dec
inc
das
lods
add
or
xchg
mov
cmp
outsb
inc
mov
jns
mov
and
push
fs
mov
mov
clc
dec
cmpsb
arpl
lods
jg
ja
clc
adc
popf
dec
jne
scas
sbbb
inc
dec
mov
test
in
movsb
stos
je
sti
mov
xchg
or
test
jecxz
shlb
lock
addr16
clc
shrb
xlat
pop
add
sbb
push
pop
adc
or
xchg
jo
xchg
leave
cmp
xchg
scas
push
arpl
lods
xchg
daa
or
or
mov
rcrb
movsl
fisubrs
or
ret
xchg
les
cmc
pop
dec
sub
push
xor
je
fdivr
lret
rolb
adc
add
rorb
orb
out
cmp
mov
mov
xbegin
mov
mov
lret
sub
fists
aam
out
and
cmp
loope
test
ljmp
in
push
aas
add
lret
push
das
mov
push
and
fnstsw
pusha
cmpsl
jbe
pop
lahf
popf
and
inc
dec
mov
or
lods
fimuls
dec
pop
loope
in
jecxz
adc
push
cmpsl
xchg
mov
push
add
test
gs
test
rclb
cwtl
xor
iret
sub
jb
cltd
das
cmp
stos
adc
stos
into
or
in
jg
mov
dec
cmp
jb
lds
cmp
and
dec
sbb
daa
imul
rolb
sub
loope
jge
cmpsb
inc
mov
shll
pushf
cmp
enter
lret
inc
add
xchg
call
ret
jmp
iret
mov
jo
fdivrs
sbb
and
cmpsl
repnz
cmp
and
xor
cmpsb
fdivr
xchg
rolb
mov
sub
lcall
cld
dec
cld
addr16
jp
dec
aaa
adc
cmp
leave
pop
cmp
mov
clc
pop
fstps
in
shll
in
adc
fwait
mov
mov
dec
pop
cmc
shr
mov
mov
jno
jns
cli
jno
mov
pop
pop
in
mov
mov
aad
and
jmp
js
adc
xor
mov
mov
mov
testb
stos
test
repnz
and
mov
ja
sahf
in
push
aam
cwtl
ret
aas
push
mov
mov
mov
xchg
add
cmpsl
gs
sbb
and
jbe
xchg
push
addr16
add
jae
mov
xchg
int3
adc
ret
movsb
enter
test
jnp
lahf
ds
sbb
mov
mov
arpl
jmp
cmp
dec
mov
add
mov
test
mov
leave
push
lods
jecxz
int3
push
jns
xchg
push
repz
test
fidivs
jns
popf
cmp
mov
xchg
mov
xor
adc
fcmove
popf
mov
int
fsubl
sbb
lret
stos
and
data16
sub
test
and
sbb
andb
pop
cmc
jo
pusha
mul
pop
push
rcll
cld
repz
push
mov
mov
and
aas
popf
push
xor
cmpsb
shll
mov
icebp
and
imul
loopne
dec
inc
push
inc
ja
out
dec
or
outsb
das
dec
pop
jno
mov
mov
test
or
les
mov
xchg
fisttpl
test
das
and
adc
ss
adc
mov
cld
xchg
popf
cmc
jmp
lods
movsl
inc
leave
cli
fsubl
xchg
dec
push
outsl
add
jmp
sub
sahf
loope
sar
and
lods
popf
subb
fmull
shr
and
push
inc
sub
arpl
cli
cmc
inc
outsb
mov
mov
add
test
mov
lahf
inc
iret
mov
into
orl
adc
xchg
icebp
cmp
bound
cmp
ret
dec
adc
add
xchg
push
pushf
orb
adc
jmp
xchg
and
lods
sbb
ds
pop
outsb
xor
add
pop
rcrb
sub
or
add
xor
nop
jl
fcompl
test
mov
popf
adc
or
jle
fidivrl
stos
stc
aas
stos
in
movsb
int
les
xchg
mov
sbb
sbb
sub
push
add
sbb
gs
outsl
adc
das
push
xchg
cmc
movb
sbb
xlat
and
adc
sbb
add
ret
xor
push
clc
fsts
shlb
ss
jle
add
pop
repz
cmpsl
mov
inc
into
iret
jno
cld
mov
int3
dec
idivl
or
jecxz
adc
repnz
and
outsl
rcll
cmpsb
and
sub
lret
mov
pushf
push
dec
popf
cwtl
fs
sub
insb
outsl
notb
push
jbe
sbb
loopne
mov
mov
test
stos
stos
sbb
jnp
push
aam
insl
lock
insb
adcb
push
mov
lcall
test
and
dec
jnp
adc
adc
insb
push
in
adc
and
jae
add
push
movsl
mov
and
inc
js
fldt
lock
fildl
mov
mov
mov
pop
fsts
lret
mov
mov
dec
mov
int3
cmpsb
nop
sub
cltd
test
stos
xor
mov
push
and
or
outsl
and
cwtl
aad
mov
ret
pop
xor
xchg
xor
loop
inc
std
or
sbb
ja
add
sub
dec
jge
mov
inc
sbb
add
add
xor
jp
xchg
fisttpl
inc
mov
xchg
iret
xchg
adc
lcall
sub
addr16
xchg
xor
mov
call
push
mov
jae
xchg
jl
lea
adc
je
pushf
xchg
push
jno
adc
rcr
rorl
rcr
push
aad
inc
inc
mov
or
sahf
mov
inc
pushf
iret
imul
and
push
stos
push
jmp
test
mov
jae
inc
dec
lahf
icebp
out
loopne
dec
js
xchg
lret
mov
pusha
lret
adc
outsb
je
call
pop
mov
out
stos
lock
sbb
cmp
sub
jne
fcompl
inc
sub
add
test
mov
push
push
loope
xor
inc
shl
mov
dec
daa
mov
lods
insl
clts
es
xchg
aas
inc
adc
pop
cmpsb
adc
sbb
pusha
insl
cld
inc
loop
inc
out
cmp
popa
jae
rorb
scas
repnz
mov
shrl
popa
inc
sbb
rcr
dec
sub
cmpsb
sub
jl
jle
and
mov
orl
xchg
dec
arpl
jne
mov
xor
cmp
xchg
jmp
xlat
xor
push
and
and
or
test
push
lods
insl
mov
shlb
fucom
scas
pop
xchg
dec
mov
mov
or
lahf
mov
pusha
adc
inc
push
mov
nop
fnstsw
in
or
mov
push
jb
ja
test
cmp
push
xchg
adc
in
jo
insl
and
sub
sub
notb
sub
add
fildll
dec
mov
aad
ret
xchg
sub
mov
or
test
mov
cmp
dec
notb
push
scas
mov
xchg
cmp
mov
mov
adc
out
fnstsw
add
loopne
ja
mov
push
add
hlt
and
jp
sbb
jns
negl
int3
jae
mov
daa
subl
cmp
loop
stc
lods
es
clc
imul
ds
jns
mov
mov
sahf
adc
lea
xor
ret
mov
addl
or
dec
in
fbstp
lock
mov
pop
xor
mov
inc
xchg
test
sub
rcll
mov
jae
mov
mov
add
mov
push
je
test
xchg
inc
cmp
cmp
and
js
xchg
sbb
xchg
cwtl
in
cmp
mov
popa
fmul
adc
pop
or
fstpt
subl
jmp
and
pusha
popf
lret
jmp
jmp
in
loope
mov
ja
jno
call
mov
repnz
lds
cmpsb
jle
xor
pop
cmp
sbb
loopne
test
in
ret
sub
xchg
mov
xchg
xchg
pop
sbbb
repnz
je
mov
cmc
push
daa
sub
rcrl
push
sbb
inc
push
arpl
int3
in
jl
sbb
mov
fnstenv
fcoml
jnp
popf
je
idivl
cmp
js
int
stc
add
and
nop
xor
filds
jb
sbb
icebp
data16
outsl
ljmp
cld
mov
clc
test
xchg
and
mov
into
bound
gs
into
imul
jle
lcall
cltd
jg
jnp
jmp
or
aas
daa
pop
xchg
mov
inc
cwtl
inc
cmp
fistps
mov
cld
dec
insl
lods
cmp
xor
pop
add
mov
jmp
loopne
mov
mov
int
or
mov
mov
or
or
rolb
cwtl
repnz
sbb
inc
test
les
aad
fnstsw
sbb
and
lock
mov
inc
xor
xor
cmpsb
subl
jne
push
stos
xchg
add
in
aaa
in
mov
xor
push
int3
push
jecxz
ret
inc
push
pop
jbe
sub
rolb
mov
fsubr
test
mov
sbb
dec
daa
aaa
and
es
in
xor
pushf
jle
aam
pushf
adc
xchg
jl
stos
pop
mov
ss
mov
lahf
mov
and
jbe
stc
das
xor
int
pop
flds
sarb
jae
sub
es
outsb
adc
jne
mov
mov
jle
jg
mov
xchg
in
data16
push
in
jecxz
sbb
fadd
sub
lods
les
push
push
add
das
movsl
sbb
test
loop
arpl
xchg
hlt
loopne
cs
fidivrl
xchg
xchg
and
loopne
pop
int3
pushf
in
add
jle
in
sub
pop
int
test
sbb
test
push
mov
negb
pushf
addb
or
adcb
lcall
cmp
pop
cwtl
dec
shlb
hlt
push
xor
hlt
je
pop
dec
xor
lret
insb
decb
mov
jno
out
cmp
mov
in
jp
scas
and
ficoml
adc
xchg
cmpsl
in
jne
mov
xchg
adc
ds
dec
and
or
in
mov
jmp
out
sbb
jns
jnp
outsl
mov
aad
std
mov
and
xchg
ret
inc
mov
or
or
xor
push
mov
or
sbb
adc
push
sete
or
push
jne
push
sbb
jg
shl
jae
inc
dec
mov
movsl
jno
dec
iret
and
jge
aas
movsl
fisubrl
jge
hlt
cmpsb
lahf
loopne
cmp
inc
fcomip
xorb
outsb
dec
sub
and
push
enter
ret
and
mov
movhps
push
cmc
or
and
xchg
pop
jmp
mov
stc
bound
and
mov
add
jge
pusha
sahf
jecxz
out
and
lods
dec
inc
pop
ds
scas
adcl
sub
jb
ljmp
fisubs
add
xor
pusha
andb
inc
dec
iret
test
cmp
test
enter
mov
int
addr16
fisttpl
rcr
pop
xor
iret
pushf
and
imul
inc
je
inc
dec
push
jbe
cmp
or
adcb
pop
fisubrs
rcrb
jmp
mov
lea
and
sub
jl
jo
jbe
out
into
int
hlt
data16
stos
mov
xlat
and
js
and
mov
movsb
in
push
mov
fwait
mov
jns
xor
push
cld
jmp
xchg
in
and
mov
sbb
pop
inc
cltd
xor
and
pop
les
jecxz
sti
cltd
cs
and
in
subl
pop
push
mov
and
lods
arpl
les
ja
js
dec
gs
sub
and
xchg
mov
inc
push
add
push
jle
out
test
test
addr16
test
and
mov
xor
cmp
inc
lea
or
fdivrl
jno
inc
into
or
iret
add
or
out
lds
imul
xlat
inc
hlt
pop
std
inc
dec
fwait
mov
repz
xlat
aad
in
leave
ret
jp
sbb
dec
nop
cld
aam
sub
inc
clc
cmp
mov
pop
shrb
xchg
mov
orb
lcall
push
inc
cmc
cmp
lods
aad
xchg
sbb
shlb
mov
stos
lea
cmp
mov
pop
jl
cmc
xchg
loopne
push
arpl
pop
cmp
xchg
jne
pop
std
movsl
fucomip
or
adc
push
push
pop
addr16
mov
dec
aam
add
scas
je
test
cmpsb
push
mov
inc
enter
into
inc
fimuls
test
sbb
fdivrs
loope
pop
xchg
lahf
push
je
jne
stc
or
fsubrp
mov
jge
mov
cmp
pop
sbb
cmp
and
cmp
sbb
int
push
jecxz
fcompl
and
fisubs
je
cmpsb
sbb
xor
test
mov
out
jno
cld
jo
dec
ret
loop
shrb
movsb
xchg
andb
stos
adc
sbb
lods
xor
xchg
enter
nop
lcall
ret
cmpsl
lea
sub
mov
jle
push
push
jge
inc
mov
repnz
mov
insl
push
movsl
stos
jl
or
mov
cld
dec
hlt
push
sbb
mov
mov
jp
fisttpll
jl
cli
icebp
into
mov
push
and
lds
cmp
jne
stos
mov
shll
in
sub
xchg
mov
insl
mov
stos
test
push
push
sbb
pop
divl
mov
repz
divb
mov
mov
xor
cmp
adc
inc
pop
call
les
dec
or
sbb
in
ss
lret
cmp
sbb
lret
fstl
mov
mov
lret
hlt
fcomps
mov
fmuls
pop
ret
loopne
sbb
popa
and
mov
shll
inc
or
leave
test
loop
test
popa
cli
jecxz
xchg
xchg
pop
aad
inc
mov
pop
test
std
cmp
es
cmp
adc
or
enter
leave
mov
das
jns
sar
fidivl
push
rorb
inc
lods
and
call
lret
sub
sahf
fcoml
mov
adc
lods
cs
xor
shr
inc
jnp
mov
insl
outsb
and
mov
mov
push
repnz
sub
dec
push
enter
sahf
adc
pop
insl
insl
cmp
imul
out
adc
daa
cld
xchg
iret
scas
add
mov
or
cmpsl
rcrb
pop
cli
mov
adc
out
mov
loop
pop
xor
mov
mov
mov
pusha
push
add
pop
cmpsl
shll
int
dec
arpl
jmp
dec
insl
fnsave
mov
outsb
dec
mov
aas
lret
and
aaa
mov
dec
shrb
inc
or
arpl
jne
lret
cmp
orb
xchg
mov
mov
mov
insl
ficomps
ljmp
pop
mov
loope
fsubl
movsl
dec
cmpsl
test
fwait
jae
lret
cmp
insl
inc
les
mov
pop
inc
sbb
pop
cmp
fisubl
std
cmpsb
inc
mov
in
xor
dec
fdivp
ret
mov
imul
xchg
cmpsl
sbb
dec
and
pusha
jae
clc
xchg
ljmp
and
cmc
je
push
insb
dec
xchg
js
push
push
mov
stos
popa
arpl
pop
in
mov
push
cltd
xchg
int3
or
loope
and
jmp
xor
popf
and
cmc
test
push
insb
xchg
mov
testl
std
mov
sbb
sahf
mov
stos
push
mov
dec
lods
mov
push
xchg
clc
mov
cltd
sbb
and
push
dec
xor
mov
orb
xor
mov
mov
idivb
std
into
adc
cli
notl
sbb
insl
ds
adc
pop
inc
mov
imul
cs
mov
into
ljmp
mov
cmpb
push
add
jle
jl
dec
add
push
call
addl
arpl
pop
fst
mov
push
rolb
daa
in
fsts
add
mov
ds
daa
mov
imul
fmul
js
xchg
jno
and
movl
add
rol
insl
cmpsl
divb
je
sub
add
inc
adc
test
push
jg
je
sub
dec
xorb
adc
mov
and
mov
dec
outsb
push
xchg
push
xchg
rorl
imul
xor
ds
out
cld
bound
pop
mov
xchg
or
mov
out
and
mov
mov
outsl
shrl
cmp
sbb
add
xor
sub
xchg
aam
cmp
cs
jnp
ret
loope
shl
adcl
add
stos
scas
sbb
movsbl
stos
lds
cltd
mov
mov
out
scas
push
xchg
xchg
sahf
push
hlt
je
ds
pop
aaa
lds
xchg
fidivs
cmpsl
xlat
enter
cld
xor
jnp
push
mov
mov
fadd
lahf
mov
or
jp
mov
add
cs
int3
and
fwait
and
insl
mov
xlat
dec
jl
ficoml
stos
push
pushf
or
xchg
in
repz
add
xor
sub
shll
bound
xor
mov
rorb
ljmp
adc
pusha
jns
faddl
imul
movsb
loop
mov
test
pop
shrl
xor
imul
clc
ret
frstor
xchg
popa
fcoms
jecxz
scas
cmp
mov
jae
stc
sbb
push
mov
out
dec
push
push
sub
or
ss
xchg
mov
mov
jb
ss
or
popa
jge
sti
test
mov
jmp
mov
cmpsl
sbb
mov
lret
push
push
jae
or
cmpsb
aas
mov
shll
ror
dec
subl
xor
and
rcrl
aad
fwait
rolb
mov
loope
cmovs
insl
jne
adc
mov
xor
jge
pop
insl
xchg
sbb
data16
std
mov
jmp
and
or
cmpsl
fldl
sub
jl
mov
pop
movsl
leave
loope
push
lods
dec
out
mov
or
into
cli
les
xchg
push
mov
sub
xor
lds
loop
out
popa
xchg
or
sbb
clc
inc
sbb
inc
add
mov
mov
mov
dec
pushf
add
push
cmc
aas
pop
in
into
cmpsl
es
add
pop
cmpsb
push
mov
fcmovbe
jg
repz
cmp
pop
int
cmp
inc
inc
outsl
or
push
and
jno
arpl
loopne
inc
cli
iret
mov
lods
cld
jnp
loop
loopne
pop
jmp
and
cltd
mov
push
mov
aaa
push
mov
mov
mov
movsl
cmp
enter
jns
fcomps
pusha
out
xchg
and
add
insl
xor
and
daa
loopne
popf
adc
mov
pop
or
sbb
rcrb
jge
push
push
mov
inc
cld
dec
lds
fdivl
mov
mov
add
cmc
mov
int
rorb
mov
adc
push
mov
jns
jge
popa
insl
xchg
xchg
add
rorl
mov
popa
jo
pushf
push
pusha
mov
jmp
aad
add
dec
fadds
addr16
mov
cmp
shlb
xchg
jle
ret
sahf
sbb
jne
outsl
push
jbe
push
jmp
ds
mov
insl
xlat
push
ja
std
dec
cltd
adc
je
jle
jecxz
lret
jns
hlt
lock
inc
jmp
jge
inc
cmp
xchg
leave
aas
sbb
jge
mov
lds
fistl
aam
fsubrs
dec
adc
sub
addl
dec
mov
add
add
fisubs
cmc
xchg
adc
jp
cmp
movsb
xchg
pusha
jge
shlb
push
mov
rorb
and
jae
xchg
adc
cmp
loopne
push
or
sbb
xchg
push
pop
insl
gs
and
sub
or
mov
pushf
outsl
xor
xchg
dec
cmp
dec
add
cltd
ljmp
cld
aam
scas
andb
add
mov
mov
sbb
aam
les
ss
loopne
call
fstpt
test
fldcw
mov
xorb
cmc
add
iret
pop
roll
and
inc
mov
pop
mov
pushf
adc
push
insb
cmp
in
test
push
loope
lahf
shrb
sbb
push
test
inc
mov
jg
inc
cmp
pop
fwait
sbb
fwait
shlb
je
mov
repz
stos
jae
loop
addr16
ss
pop
ja
aas
inc
and
adc
push
xchg
in
sub
mov
sub
sbb
bound
outsl
iret
mov
sahf
mov
jne
addr16
shll
add
sbb
sub
ucomiss
inc
cmpsb
stos
dec
inc
sahf
leave
xor
push
imul
insb
dec
push
mov
movsl
xlat
popf
das
shrb
dec
inc
xchg
in
jbe
dec
lock
mov
pop
je
mov
adc
mov
aam
cmpsl
loopne
jecxz
ds
movsl
iret
xor
sbb
sbbb
lods
jle
pushf
lods
jnp
mov
and
jmp
popa
loope
idivl
out
xor
test
sub
rolb
addl
push
les
insl
xor
stc
mov
mov
add
xor
xchg
fucom
lds
cmpsb
das
mov
xor
sahf
scas
jle
inc
xor
jmp
sbb
shlb
pop
lds
xor
pop
cmp
xor
lahf
test
insb
push
orb
test
loope
bound
jb
xchg
adc
add
inc
imul
add
mov
lret
and
outsb
cmpsb
mov
pop
test
inc
mov
into
adc
push
frstor
xchg
andl
xchg
mov
jo
lcall
loope
rcrb
and
mov
cld
mov
jmp
pusha
inc
enter
dec
dec
and
hlt
xchg
jno
jle
or
subl
xor
cld
lds
add
test
sbb
inc
inc
mov
xlat
sub
push
loopne
loop
xchg
icebp
andl
add
add
sub
rcl
call
inc
inc
dec
xor
rcrb
pop
and
fnstsw
inc
xor
popf
sbb
push
mov
mov
mov
dec
into
stos
push
test
ljmp
xor
mov
adc
mov
pop
rclb
xchg
mov
in
rcrb
xor
rorl
push
sub
pop
insb
xor
cmpsl
gs
aas
xchg
push
jecxz
scas
add
add
xchg
stc
lcall
dec
and
pop
mov
jp
mov
adc
pop
adc
bound
pop
xor
hlt
fsubs
push
les
mov
rolb
cmp
movl
lods
mov
mov
inc
jge
mov
cmpsl
push
aaa
mov
js
test
inc
sbb
sbb
sub
mov
hlt
or
sub
sahf
cmpsl
add
jne
fidivrs
sbb
fstl
scas
sarb
sbb
iret
cwtl
arpl
mov
pop
nop
and
or
int3
int
loope
iret
sbb
or
inc
mov
lock
and
lahf
jmp
xchg
adc
jnp
dec
inc
add
jle
test
cmp
cmp
inc
cs
inc
std
add
sahf
sub
test
xchg
add
pop
sub
push
shl
mov
loope
sbb
sub
inc
loopne
pop
data16
mov
rorl
scas
jl
pusha
xor
out
and
ljmp
push
mov
jmp
mov
mov
jae
mov
js
lds
test
dec
add
fdiv
inc
jmp
int
jge
cmp
or
lods
jle
push
inc
aad
rcr
ret
xorb
je
stc
mov
movsb
xor
fldcw
jle
lock
sub
shll
adc
test
jge
cmp
add
mov
mov
and
adc
mov
jg
and
xchg
inc
push
xor
nop
fsincos
cmp
cli
mov
cmc
mov
lods
fs
sarl
jl
and
pop
loopne
leave
xor
mov
add
rcrb
jo
shlb
lds
fmulp
sahf
add
loope
adc
lods
xchg
xchg
sbb
cld
popf
mov
adc
nop
enter
shr
out
jge
mov
jno
jecxz
aam
test
popf
sub
adc
test
jle
imul
and
lea
arpl
popf
jge
jle
sbbb
adc
rorl
stc
imul
xor
pop
sarb
mov
imul
inc
andl
adc
dec
pop
sbb
mov
mov
imul
inc
fsubrs
dec
inc
shlb
add
enter
inc
sub
imul
cltd
dec
sbb
cmp
iret
outsl
movsl
jle
sbb
hlt
pop
jge
add
iret
jno
pop
xchg
sbb
and
arpl
mov
add
jle
push
mov
jbe
lret
fisubrs
popf
push
xchg
mov
test
inc
mov
jb,pt
or
hlt
and
mov
mov
js
rcr
jp
mov
sahf
mov
or
lcall
or
xor
clc
lea
add
jp
popa
mov
sub
jnp
movsb
lret
fwait
xchg
dec
cwtl
xchg
add
jl
lods
shlb
pop
dec
pop
negl
sub
sbb
icebp
stc
ja
add
jb
out
inc
into
cltd
mov
fnsave
in
dec
adc
xchg
mov
fdivrl
xorb
enter
scas
dec
outsl
fwait
jge
jg
repz
add
imul
xchg
movsb
clc
inc
orb
pop
mov
pop
mov
add
inc
mov
pop
clc
loope
repnz
jae
sub
dec
cmpb
fabs
cmp
repz
mov
and
arpl
lret
cmpsl
mov
shll
mov
movsb
and
mov
dec
or
hlt
bound
notb
inc
inc
leave
sub
xchg
repz
cmp
mov
fstpl
ret
xchg
push
ret
mov
test
pop
bound
cmpsl
sahf
je
xchg
lock
sarb
data16
imul
add
push
mov
cmp
loop
cmp
lcall
enter
mov
imul
cli
cmp
ret
jmp
xchg
push
sub
cwtl
cmp
scas
data16
loop
mov
push
andb
test
jmp
jae
jge
outsl
neg
jo
add
mov
sub
and
fwait
iret
addr16
xchg
in
and
sbb
subb
test
pop
movsl
inc
cwtl
adc
insl
or
xchg
xchg
jecxz
cwtl
pop
jns
xor
ret
mov
int
mov
jp
in
cmp
xchg
fadd
lcall
mov
xor
push
daa
test
cld
adc
je
in
lock
jno
add
outsl
movsb
jbe
push
dec
mov
mov
xor
clc
xchg
clc
repz
inc
repnz
lcall
leave
lret
nop
popa
stos
jmp
adc
outsb
dec
loop
and
or
push
cmp
aam
sub
dec
xor
or
stos
clc
push
ret
dec
mov
inc
icebp
xor
inc
xor
movzwl
imul
jnp
jae
cmp
dec
adc
pusha
cmpsb
sbb
and
or
or
push
add
add
or
pop
hlt
fcompl
dec
popf
jns
dec
adc
inc
jp
xlat
pop
jne
cld
sbb
ja
jb
lret
outsb
inc
data16
and
loop
push
xchg
xchg
loope
jb
sub
lret
adc
insl
adc
js
xor
fmull
ss
movsl
pop
adc
push
hlt
sub
push
lock
enter
shlb
sbb
es
cltd
push
mov
or
mov
sti
cmp
mov
inc
xchg
lock
inc
insl
fisubrs
sbb
mov
hlt
mov
dec
pushf
adc
cmp
push
push
imull
les
sub
aas
jmp
xchg
pop
scas
jecxz
jecxz
xor
add
hlt
xchg
jmp
test
mov
out
inc
push
sbb
inc
mov
imul
push
sub
sti
mov
mov
inc
and
jecxz
sbb
adc
icebp
mov
scas
in
or
sahf
in
int
dec
pop
sbb
inc
mov
popa
adc
loop
mov
outsb
sbb
in
add
test
adc
sbb
rcr
dec
and
jle
and
test
jbe
add
scas
add
aad
inc
sbb
cmp
dec
inc
mov
or
aad
movsl
sbb
xor
pusha
arpl
cmp
pusha
rorl
gs
and
mov
add
mov
loope
xor
iret
or
js
mov
imul
jnp
jmp
jo
xor
inc
lahf
bound
loope,pn
out
sub
and
sub
mov
mov
stc
push
mov
and
xlat
mov
mov
addr16
jle
adc
and
mov
sub
xchg
cmp
adc
je
or
adc
ljmp
mov
jmp
leave
inc
pop
xlat
xor
adc
pop
popa
xchg
sub
adc
sub
insl
or
lea
push
hlt
jne
pop
mov
mov
and
shll
in
adc
mov
dec
test
sbbb
sub
test
in
ret
and
jge
push
enter
lods
stos
add
outsb
repnz
jg
cmp
add
push
jge
jns
jle
jmp
clc
testl
js
sbb
test
push
dec
fidivs
xor
mov
loope
iret
xchg
scas
mov
mov
sub
push
es
adc
xor
jp
pushl
mov
jne
mov
movsb
pop
push
jl
lahf
icebp
addr16
or
mov
ss
dec
pusha
xchg
sbb
test
or
xlat
add
mov
mov
and
jb
mov
psubsw
loop
push
mov
jnp
mov
fadds
add
cwtl
addr16
inc
inc
and
call
pop
push
cld
test
xchg
jecxz
sub
lods
inc
movsl
cmp
data16
stc
jae
sub
je
in
push
in
mov
jnp
xchg
sbb
jmp
xchg
jg
mov
sbb
fists
popa
jge
xor
jecxz
stc
out
xor
push
cli
cli
test
inc
nop
push
mov
and
leave
and
inc
iret
push
pop
jmp
xchg
jmp
push
pop
ret
add
into
lods
inc
rcl
jecxz
xchg
xor
test
or
fsts
pop
and
adc
mov
mov
stc
enter
mov
and
cmpsl
ficoms
insl
aad
jecxz
sbb
hlt
and
sub
push
lcall
add
sbb
mov
aam
add
sub
push
mov
mov
push
aas
lret
ror
ret
test
adc
pop
mov
fisubs
lods
lret
popf
mov
mov
test
jg
mov
fisubrl
mov
es
push
cld
adc
sub
repnz
adc
or
sbb
pop
xchg
jg
xchg
and
idivb
test
in
pop
jge
out
xlat
jp
cmp
lahf
test
mov
and
xor
sahf
push
xlat
sbb
fimuls
das
bnd
adc
pop
xchg
adc
mov
fwait
aaa
loopne
dec
cmp
mov
xor
sub
pop
int3
dec
filds
daa
inc
jo
lea
xchg
fdivrs
fistl
roll
pusha
test
pusha
scas
sub
testl
stos
xchg
xlat
mov
repz
ror
xchg
add
adc
mov
jb
pushf
pop
sbbb
int3
into
decl
call
mov
std
push
pop
cmc
iret
aaa
push
and
pop
adc
inc
mov
push
lds
popf
or
dec
push
cmc
loopne
mov
add
mov
aaa
ss
int3
aam
xchg
rcrb
or
xor
dec
sbb
mov
repz
fcmovnb
push
insl
aad
rcll
cmp
pusha
jge
push
ljmp
mov
mov
imul
and
loop
push
jno
arpl
enter
pop
mov
mov
fwait
pop
mov
sti
cmp
pop
dec
test
xchg
call
js
jo
push
ret
loop
mov
push
sbbb
sub
mov
sub
outsb
adc
adc
idivl
sbb
lock
repnz
inc
sti
out
mov
inc
and
mov
sbbb
mov
fisubrs
out
pop
insb
jg
mov
cmc
or
mov
call
addr16
pop
inc
mov
ss
xchg
ljmp
dec
add
dec
incb
sbb
add
addr16
lret
les
xor
fisubrs
pop
push
jg
xchg
push
pop
sub
iret
cmp
enter
jle
stos
xor
addr16
fdivrl
inc
bt
test
cwtl
xchg
shl
mov
ss
iret
jge
out
add
shrb
cld
pop
filds
and
dec
imul
mov
inc
cs
push
or
mov
mov
mov
dec
lods
sbb
lods
inc
in
push
jne
nop
mov
xor
jno
xchg
cmp
inc
inc
das
mov
cmp
jb
push
inc
push
rclb
mov
into
and
sbb
xchg
js
lds
inc
rolb
mov
mov
loopne
cltd
sbb
aas
cmp
lret
cmpsl
jge
js
fdivs
int
pushf
xor
sbb
into
shll
xchg
mov
xchg
sahf
nop
xor
into
gs
sbb
sbb
xor
inc
pop
cmp
shlb
dec
push
lahf
aam
cmp
xchg
adc
sbb
stos
and
arpl
int
and
add
mov
arpl
xor
pusha
cmpsl
loopne
leave
push
insl
test
in
lcall
xchg
fdivrs
aad
and
jge
aaa
shlb
sbbb
leave
cltd
mov
cmpb
faddp
cwtl
dec
cmpsb
popa
cmp
adc
mov
insb
mov
cmp
dec
pushf
adc
mov
insl
lock
scas
sbb
scas
popf
jecxz
stc
fstpl
mov
popf
stos
daa
xor
mov
out
scas
test
sbb
or
xchg
pop
add
cld
push
ja
cmp
pop
shr
lcall
sbb
aas
nop
mov
imul
sub
inc
in
loop
nop
xor
push
mov
dec
test
jecxz
jl
aaa
xchg
data16
mov
addr16
outsl
xchg
mov
fs
and
jecxz
cmp
jb
and
add
enter
pusha
orl
in
and
jmp
and
cld
lea
jl
js
mov
push
inc
test
neg
icebp
xor
jmp
fcomps
rcl
mov
xor
mov
mov
sbb
ret
cli
rcr
addr16
push
pop
cmpsl
aam
mov
inc
cwtl
fisttps
out
sub
inc
imul
and
mov
jg
pop
fildl
xchg
add
adc
xor
fcomip
jae
inc
adc
inc
dec
cmpsb
dec
fsub
or
sti
jg
push
mov
jge
sbb
repz
adc
sub
push
adc
adc
test
mov
lods
mov
inc
inc
sub
cmp
mov
adc
add
cmp
imul
mov
mov
cmp
sub
scas
or
adc
cs
xchg
out
ss
xor
leave
add
test
pop
xor
in
sahf
pop
jo
push
xchg
sbb
hlt
insb
mov
outsb
nop
xchg
add
xchg
out
jb
inc
or
dec
adc
bnd
scas
rorl
fildl
leave
jmp
or
inc
xor
int
add
add
cmp
push
test
rcrl
repz
and
repnz
jp
cmp
in
jbe
inc
dec
cmpsb
mov
push
in
addr16
psubw
xchg
mov
cmp
inc
mov
push
mov
ret
adc
scas
xor
adc
addr16
push
mov
mov
mov
das
lds
cmc
shl
sbb
std
or
mov
and
xor
outsb
mov
andl
mov
in
js
rol
mov
les
in
jae
jne
xchg
sar
mov
loopne
mov
cltd
pop
inc
es
lret
sbb
fstpt
and
and
jge
outsl
or
add
add
popa
lcall
xchg
jo
pusha
sbb
nop
adc
xor
add
or
push
nop
lahf
test
adc
pusha
sbb
test
jg
fidivs
push
out
jbe
daa
xor
dec
mov
push
sbb
xor
insl
mov
outsl
leave
jns
mov
lret
xlat
mov
mov
lahf
and
mov
loope
sbb
sub
movsl
ficomps
mov
ja
jmp
xchg
adcb
fnstcw
mov
and
add
icebp
cmpsl
mov
or
mov
cmp
mov
mov
mov
stos
nop
cmp
stos
fidivrs
inc
mov
aam
es
nop
stos
mov
cltd
in
test
sar
xorl
insl
shll
cmc
rorl
mov
loop
xor
pop
data16
fcoms
or
arpl
cmc
mov
cmp
push
aam
lret
push
dec
push
das
aas
or
xor
push
test
subl
jae
and
push
xchg
sti
add
pop
outsl
pop
cmp
mov
ret
lock
mov
add
inc
nop
ret
jge
mov
lret
or
mov
cmp
lcall
outsb
cmp
lds
loop
aam
sbb
popa
int3
pop
jbe
mov
fiadds
loop
jecxz
xlat
pusha
in
pop
xchg
data16
jecxz
addl
subb
iret
xchg
add
xor
inc
inc
icebp
insl
icebp
aas
inc
push
xor
int
fsubs
inc
dec
ljmp
push
mov
inc
inc
push
adc
repnz
jge
xchg
jmp
dec
ret
les
aas
dec
or
pop
inc
push
loop
jecxz
rcrl
mov
imul
cmp
shrb
and
pop
jg
je
add
mov
les
lcall
fisttpl
dec
sbb
dec
je
or
add
xchg
roll
shlb
cmp
fwait
jmp
mov
jecxz
enter
inc
inc
dec
sbb
xchg
test
loopne
or
addl
mov
loop
icebp
repnz
inc
xor
jnp
ficoml
pop
out
add
xorl
lds
shll
push
or
and
cld
addr16
inc
sarb
dec
mov
clc
lcall
scas
dec
xchg
mov
arpl
cmp
loope
sub
nop
mov
arpl
mov
insb
jl
lret
mov
rorl
mov
lret
mov
js
imul
gs
mov
out
or
sub
cmp
dec
aas
jecxz
pop
xor
divb
shl
adc
push
xchg
dec
sub
dec
ret
fcoms
mov
icebp
ret
fwait
push
rorl
mov
xlat
pop
bound
cwtl
rcrb
inc
and
cwtl
xor
inc
sbb
pop
push
imul
jmp
fimuls
div
cwtl
mov
jns
adc
insb
mov
xchg
enter
xor
cltd
aas
psubusb
pushf
xchg
std
lods
fisubs
inc
adc
mov
out
arpl
mov
pop
lods
add
mov
fs
push
pop
loop
cmp
xchg
mov
repz
les
dec
dec
xchg
or
ds
out
xchg
cmc
out
adc
mov
push
cmp
pop
jne
lds
je
push
cmp
jo
mov
test
lods
mov
push
addb
aas
mov
in
push
cmc
and
test
mov
out
test
inc
js
repnz
lret
mov
enter
cld
lods
jb
leave
pop
push
sub
add
push
int3
inc
jno
scas
fimull
mov
sbb
xor
jge
mov
imul
mov
xor
adc
icebp
pushf
fidivs
or
or
jno
dec
sub
repz
aaa
push
shlb
xchg
jno
push
xchg
or
test
outsb
icebp
clc
lcall
jb
outsb
stos
popa
mul
jge
fistl
arpl
stos
mov
sub
lret
cwtl
lods
mov
lock
mov
repnz
fcmove
ss
pop
loopne
mov
add
or
xchg
xor
xchg
cmp
or
pusha
les
push
ds
imul
movsl
and
sbb
dec
mov
lret
jecxz
test
ss
bound
jnp
jbe
xchg
lds
adc
lods
shll
push
cmp
xchg
and
orl
or
mov
test
scas
cli
cli
test
add
xor
push
jle
xchg
mov
mov
stc
div
push
je
sbb
cmp
std
scas
mov
stc
xchg
and
xchg
fdivrs
ljmp
js
mov
loopne
lea
and
pmaxub
movsl
cmc
and
rolb
mov
mov
subb
and
js
or
shr
data16
pop
jae
lahf
cmp
xlat
and
lret
test
mov
popa
mov
xchg
iret
roll
mov
xor
test
jg
repz
cmp
jo
mov
push
loopne
mov
sbb
andb
cmp
ljmp
adcb
sbb
push
inc
or
xchg
lahf
fldt
pop
pop
sbb
loopne
scas
ret
fwait
cmp
clc
xchg
pop
dec
repz
mov
sahf
adc
ds
mov
in
pop
and
lcall
fisubs
cld
pop
shl
cltd
repnz
lret
xchg
mov
mov
mov
pop
andb
jp
aad
in
pop
fs
add
mov
pusha
hlt
and
cltd
sahf
mov
sbb
pusha
icebp
sbbb
pusha
outsb
mov
add
outsb
mov
sti
and
cmp
movsl
fbld
mov
mov
cmp
les
adc
mov
jo
and
pop
add
fisubrl
ret
adc
sub
cmp
jmp
sub
popf
adc
inc
aam
jmp
sahf
out
cmc
mov
jmp
xchg
lret
lret
mov
jl
aad
insb
clc
in
pop
sub
rol
pop
mov
lahf
mov
mov
pop
push
sbb
and
cmpl
xor
push
mov
jae
hlt
sbb
les
mov
cmp
cltd
negl
push
adc
and
jo
xchg
xor
or
mov
test
adc
add
cmpsl
cmp
inc
jmp
adc
mov
mov
mov
pop
adc
or
mov
adc
ds
xchg
sahf
stos
mov
or
subl
cmc
mov
int
mov
lea
icebp
subl
sub
xchg
xor
out
pop
cmpsb
inc
mov
call
pop
mov
popa
adc
loop
fisttpll
jo
mov
lea
xor
dec
pop
icebp
in
pop
xchg
frstpm(287
mov
inc
repz
nop
pop
push
inc
imul
test
cmpsl
ds
andb
jle
inc
add
repnz
rcl
js
dec
cmp
movsl
xchg
out
sub
aaa
sub
sbb
jno
push
cmp
andb
test
hlt
jbe
lds
subb
mov
and
bound
sbb
das
cmp
je
pop
test
mov
pop
shr
call
es
scas
add
sbb
mov
mov
je
push
push
aaa
cmpsl
and
mov
cs
lret
and
inc
lods
imull
jb
fcomi
jne
xor
fidivrl
jmp
mov
mov
out
add
cld
enter
in
xor
xor
in
cld
mov
je
cmp
popf
sub
sub
xor
repnz
sub
jle
pop
inc
pusha
pop
rcrl
cmc
mov
aad
mov
sbb
jge
les
iret
stc
lods
imul
push
mov
or
loop
nop
mov
in
loopne
inc
adc
sahf
sub
leave
jg
les
or
mov
call
mov
loop
aas
cli
lds
dec
mov
aam
addl
movsb
mov
ljmp
lret
mov
aas
cmp
jne
sbb
mov
xchg
jnp
inc
jnp
lods
xor
or
test
outsl
or
push
pop
pop
fildll
into
shlb
in
adc
mov
gs
jge
mov
mov
loop
and
lds
testb
daa
fs
and
sub
enter
ja
mov
stos
enter
hlt
cmp
ljmp
lock
push
roll
add
push
inc
pop
cmp
lret
mov
add
mov
push
xchg
sahf
popf
pop
xchg
dec
push
aas
lods
loope
pavgw
aam
adc
mov
jg
psrad
xor
stos
jecxz
jmp
movsl
jmp
insl
xlat
cmp
mov
or
out
pop
stos
or
shl
jmp
jl
mov
hlt
xchg
shl
push
inc
sbb
pop
nop
dec
in
test
repnz
lea
jo
sbb
push
insb
jae
loop
cmp
mov
lock
adc
cmpsb
cltd
adc
cli
or
jge
or
sarl
out
out
lods
icebp
cmc
pop
ds
cmp
pop
mov
jecxz
mov
lahf
jbe
ret
outsl
jecxz
and
mov
imul
shlb
push
cmpsl
out
sbb
mov
mov
outsl
add
test
loope
stos
add
mov
mov
sbbb
popa
lahf
mov
cmc
xchg
lahf
adc
aam
fimull
dec
push
sub
xlat
pushf
jp
push
jbe
cmpsb
mov
adc
mov
shll
inc
inc
enter
dec
inc
int
jp
sbb
jb
lea
sbb
push
addr16
bound
popf
dec
pushf
mov
fsubl
loop
jecxz
pushf
jb
outsl
inc
push
mov
add
insb
popf
call
mov
pushf
pop
inc
js
sahf
mov
push
cwtl
jle
loopne
dec
push
sbb
xchg
pop
rorl
jecxz
dec
sbb
mov
jne
jmp
add
fsubrs
ret
push
mov
loop
movsl
stc
jns
mov
mov
lds
sub
xor
jl
dec
mov
call
hlt
fldt
in
xchg
xchg
xchg
rcrb
repz
push
imul
stos
imul
xchg
fdivs
mov
dec
test
or
or
movsl
cmp
and
mov
jecxz
push
add
outsb
jle
mov
jo
negl
std
fisubs
xchg
sbb
dec
mov
xchg
add
xor
mov
rorb
mov
xchg
cmp
jecxz
stos
sub
add
xchg
push
divl
cmp
dec
test
sub
lock
inc
mov
mov
daa
call
jle
xchg
movsl
ror
int
mov
scas
xchg
or
or
lds
imul
pop
sub
cmp
test
adc
dec
inc
movsl
stos
mov
mov
loope
movsb
mov
cmpsb
add
out
and
pop
dec
ret
jo
xchg
lock
jnp
les
cltd
fistl
in
lods
ljmp
fisubrl
adc
mov
mov
in
or
lds
inc
out
xor
mov
inc
int3
or
or
dec
xor
cmc
lahf
fidivs
push
jl
add
xlat
or
dec
add
xor
adc
xor
push
aad
lea
dec
dec
jg
imul
and
cltd
enter
cmp
shrl
jge
subl
push
imul
ficomps
popf
inc
out
xchg
jb
jbe
out
push
inc
stos
inc
push
mov
mov
test
getsec
sub
test
adc
cmp
ss
mov
sub
js
inc
lret
cs
insb
fisubs
pop
jl
mov
ss
inc
jno
int3
lahf
sub
add
leave
adc
adc
dec
std
cli
and
push
jl
ffree
inc
or
jno
subl
cmpsl
out
aaa
arpl
js
push
aaa
enter
bound
lahf
inc
jge
mov
insb
int
mov
jecxz
xchg
push
int
loopne
shl
loopne
mov
cmc
pop
sub
in
repnz
mov
insl
xchg
mov
pop
not
jbe
shld
mov
xor
addb
stos
xchg
aad
sub
push
notb
int
add
xlat
jae
js
cmp
jge
clc
pushf
addr16
adc
or
dec
rcll
mov
or
adc
jmp
es
fwait
cmp
push
fistpl
mov
or
sub
lds
push
decb
fisubrs
ja
push
inc
mov
mov
jae
out
lret
pop
dec
push
sub
mov
jbe
fcoml
lds
cmp
inc
cld
mov
sub
push
aam
adc
cwtl
adc
inc
out
pop
shl
insb
stos
dec
xorb
loopne
test
xor
push
pusha
push
dec
inc
add
scas
xor
clc
and
iretw
xor
lds
mov
adc
pop
testl
shll
push
xchg
popf
clc
mov
and
pusha
push
rcrl
cmc
mov
mov
arpl
ja
mov
adc
push
aas
mov
cmp
dec
and
push
xchg
add
test
xchg
xchg
loope
inc
int
xorl
cmp
jb
rorb
loop
pop
sti
xorb
addb
mov
mov
pop
fsub
xor
push
or
fnstsw
or
ret
sar
cltd
hlt
mov
bnd
jge
push
mov
pop
add
in
cmp
cli
cmp
nop
loopne
add
mov
and
jae
mov
cmp
icebp
cmp
in
shlb
repnz
dec
shll
ljmp
aad
js
fisubs
mov
mov
inc
fisttpl
pop
pop
rorl
sub
cltd
and
push
xchg
mov
inc
xor
sub
stos
inc
cmpl
push
ret
loopne
popa
ds
jecxz
pushf
mov
loopne
cmp
sti
jecxz
imul
sub
jl
push
xchg
mov
xchg
aas
and
negb
pop
mov
lds
mov
hlt
fiadds
cmp
in
cmp
leave
sub
cld
push
mov
or
ficomps
sahf
add
add
sahf
loopne
cmp
test
inc
addr16
stos
mov
mov
xchg
bound
fiadds
push
mov
fdivs
mov
fs
sub
js
jbe
sahf
stos
ret
mov
scas
adcl
jg
loop
xor
ds
mov
scas
in
jae
sub
xor
repnz
jg
cltd
or
cltd
js
test
and
insl
sub
shrb
cld
std
and
mov
add
int3
js
lds
push
iret
sub
push
sbbb
cwtl
jo
hlt
stos
call
addr16
test
cs
push
cmpsl
stos
test
adc
xor
pop
sub
cltd
mov
xchg
jae
fstpt
mov
pop
xor
fbld
bound
das
add
nop
or
adc
xor
pop
jge
mov
lds
ja
cmp
adc
bound
mov
push
push
inc
cmp
xchg
aaa
jb
in
inc
mov
ret
pop
mov
faddl
rcrl
out
sub
mov
push
insb
adc
cmpl
pop
sbb
mov
outsl
sahf
or
fs
orl
xchg
cltd
lahf
jne
addr16
jns
repnz
add
lahf
xchg
cmp
gs
cmp
roll
insl
int3
dec
add
mov
leave
jl
jne
xorb
mov
sub
scas
jns
fstpl
addr16
lods
push
pusha
divl
jae
mov
imul
or
sub
dec
push
and
out
xchg
leave
and
notl
or
cmp
out
rcl
arpl
sub
imul
or
jbe
pop
aam
sbb
testl
and
inc
and
cmp
and
iret
dec
movsl
sub
add
mov
shlb
adc
pop
cwtl
popa
xchg
jne
or
mov
push
lcall
adc
add
rorl
test
push
andl
pop
shr
sub
and
outsl
cmp
shrb
add
cmp
dec
dec
lahf
mov
cmp
ljmp
jns
scas
cmp
inc
push
xor
jecxz
xorb
pop
test
mov
push
or
and
lods
lret
dec
mov
mov
jns
int3
mov
and
sub
imul
cmp
adc
or
shlb
pushf
inc
out
mov
cmc
jl
mov
inc
jge
aad
dec
and
jns
lods
dec
aaa
pop
jbe
jb
push
arpl
xor
pop
jo
and
outsb
pop
jge
test
lods
dec
cmp
arpl
rcrl
mov
or
mov
cmp
rorl
inc
bound
data16
lods
sbb
test
jmp
fdivrl
mov
out
sti
in
popa
popa
mov
cltd
fsubs
pop
mov
xchg
dec
sbb
popf
leave
or
mov
pop
movsl
cmp
mov
lods
and
cmp
sbb
outsb
cltd
cli
push
sbb
jp
sarb
repz
xchg
in
aaa
jmp
mov
jbe
orb
mov
int
cmp
add
jae
lret
mov
in
scas
inc
or
dec
adc
jnp
ret
mov
pop
pop
sbb
in
repnz
hlt
rcrl
xchg
fildl
add
push
mov
jne
shl
stos
adc
jmp
dec
or
sub
sbb
xchg
inc
pusha
sarl
inc
fidivs
fwait
push
leave
and
add
stc
insl
jge
in
fidivs
or
out
jns
pop
int3
ljmp
add
jp
into
out
sbb
stc
push
cmp
imul
xchg
pop
mov
mov
fimull
jg
in
in
pop
cli
packuswb
jno
mov
stos
add
ljmp
jmp
adc
pop
das
xchg
adc
inc
inc
movsb
adc
pop
mov
loope
imul
rcl
push
pop
rcl
lret
gs
dec
cmp
divb
mov
shrb
or
add
inc
jae
xchg
dec
test
jecxz
imul
shl
or
enter
or
data16
pop
jl
sbb
insl
ljmp
cmp
jmp
mov
mov
jo
dec
or
subl
lret
jle
mov
loop
xchg
jbe
movsl
push
sub
orb
inc
jae
push
pusha
hlt
insl
sbb
cld
das
cltd
jbe
call
pop
push
scas
addr16
mov
xchg
xchg
lods
mov
ret
xor
fwait
imul
mov
jmp
rcl
or
add
hlt
pop
jge
les
negl
sbb
push
sbbl
inc
jecxz
push
xchg
mov
dec
pop
shll
pushf
push
icebp
popa
sbbb
pop
fdivrs
mov
lahf
pusha
aas
sbb
ja
jne
aad
daa
cwtl
cmp
clc
or
repz
jge
add
movsb
mov
popf
xchg
mov
loopne
xchg
push
sbb
sbb
mov
loopne
jno
sbb
inc
jo
mov
mov
cmpsb
jbe
adc
test
mov
push
pusha
mov
test
rol
fcom
pop
cs
imul
data16
shlb
xchg
enter
hlt
adc
fmulp
ja
jne
jl
mov
adc
loopne
out
jge
add
mov
fwait
add
jo
call
and
mov
mov
fimuls
inc
sbb
jae
cwtl
arpl
lcall
shrl
sbb
add
mov
loopne
and
xchg
cli
cmp
repz
out
subb
fisttpll
jno
rorl
das
in
pop
std
mov
mov
inc
adc
mov
sbb
outsl
xor
addr16
in
dec
insl
lods
mov
loope
xlat
or
aam
add
test
jae
jge
jns
add
inc
imul
add
lcall
ret
movsl
mov
test
inc
aas
sbb
pop
cmpsl
cmpsb
jo
scas
xchg
add
test
adc
mov
es
pop
or
cmp
scas
rolb
enter
pusha
movsb
ss
add
addb
ret
in
inc
iret
imul
lahf
mov
movsl
and
nop
repnz
mov
mov
das
jmp
lea
sbb
bound
sbb
fs
loope
xchg
and
dec
rcll
stos
sbb
hlt
xchg
mov
add
lock
pushf
js
mov
inc
inc
out
cmp
mov
sar
adc
das
inc
or
or
popf
sahf
cmp
mov
mov
rcrl
inc
outsb
and
orb
loopne
xchg
sbb
mov
mov
int3
inc
clc
jbe
xchg
pop
ret
sbb
inc
lds
sbb
sbb
pop
jnp
ja
movsl
mov
mov
sub
retw
cli
xlat
push
gs
and
fistl
jp
imul
sub
inc
sahf
inc
and
lahf
sub
xor
test
dec
fstl
inc
cs
jne
push
mov
jbe
or
outsl
mov
push
mov
add
imul
loopne
push
push
cmp
sti
adc
push
mov
imul
lret
repnz
les
mov
inc
hlt
imul
push
notl
mov
push
dec
adc
or
and
and
lods
imul
lret
imul
ficomps
cmp
xor
mov
repz
ret
sahf
mov
fdivrs
out
and
lea
fcoms
movsl
jecxz
cmpsb
fdivrl
mov
adc
and
adc
dec
outsl
sbb
adc
inc
rol
add
sti
rolb
orl
sub
and
lahf
sub
lock
jbe
inc
inc
enter
out
push
sub
mov
rcrl
jl
in
cmp
jns
lahf
ss
imul
iret
popa
shrb
add
lcall
inc
push
shll
gs
iret
icebp
push
cmpsl
sbb
arpl
jle
mov
or
cmpsb
or
xchg
adc
push
xor
popf
inc
lahf
add
dec
aam
xor
aam
and
lds
cld
cmp
xchg
and
jns
and
lock
mov
jmp
aad
sbb
cmpsb
jl
mov
std
mov
sub
or
shlb
sub
sti
cmp
pop
sarl
sub
shl
out
mov
addr16
fcoml
sar
push
leave
insl
sti
dec
mov
imul
pcmpeqw
test
inc
fcoms
nop
out
arpl
aaa
pop
in
pop
lods
out
test
xor
push
ds
repz
push
push
jno
in
js
out
or
pop
ds
insb
or
pop
fs
mov
adc
ret
fildl
ret
sub
mov
mov
imul
mov
loop
jge
add
std
and
jns
sub
aas
or
xchg
fistpll
imull
stc
int3
xor
jge
jle
lds
popa
pop
ja
and
adc
push
and
clc
sub
xchg
xor
mov
inc
push
out
push
push
add
test
fmuls
cmp
imul
loope
rcr
sahf
or
or
cmp
mov
das
xchg
iret
fdivs
mov
jmp
sbb
loopne
push
add
subl
adc
cmp
les
mov
loope
dec
xor
push
sub
xor
pop
jg
xchg
add
pop
movsl
scas
xor
mov
test
fdivs
and
outsl
cli
in
scas
sbb
lods
mov
popa
pop
test
push
xchg
cmp
test
pop
in
mov
pop
push
insl
inc
nop
cmp
add
mov
decl
fadds
lods
mov
push
cli
adc
test
cmp
dec
dec
ret
dec
and
inc
push
inc
pop
lahf
push
pop
lods
outsb
int
popf
pop
cmp
addb
jno
loope
rcll
nop
sbb
cwtl
je
clc
stos
adc
mov
je
jnp
jnp
jno
xchg
adc
insl
aad
pop
jno
fwait
cmp
jl
sbb
inc
jecxz
insb
fcompl
pusha
std
icebp
cmp
xlat
popf
add
es
or
sbb
mov
jmp
cmp
sti
mov
std
popf
es
or
ficoml
rcl
mov
xchg
sub
ljmp
xor
insb
daa
mov
leave
jmp
add
mov
push
dec
sbb
xadd
sbb
pop
jno
mov
shrb
or
push
call
int3
leave
jp
mov
cmp
xchg
sub
jbe
adc
test
pop
in
adc
push
shll
or
icebp
movsl
outsb
or
sbb
stos
jl
jno
sbbb
arpl
scas
shll
lods
aad
inc
adc
insl
inc
mov
jl
andb
jno
outsb
inc
mov
cmp
jns
xor
push
sbb
testl
or
ret
pop
lea
insl
test
and
mov
sbb
sahf
push
mov
cmp
lcall
or
daa
inc
rorb
fcmovb
inc
shl
fstps
jg
jge
or
fcoml
adc
jge
cmp
bswap
or
loope
and
lods
ret
popf
push
in
jne
lcall
pop
xchg
mov
jno
mov
fnstcw
jl
xorb
adc
or
add
lods
nop
dec
or
cmpsb
and
pop
xor
punpckldq
pop
sbbb
inc
iret
insl
into
sbb
aad
fcoms
xchg
ficoms
cmp
xchg
lcall
lea
lods
lahf
jecxz
jmp
xchg
xor
enter
gs
adc
incl
out
incl
ret
cmp
inc
adc
shrl
fisubs
xor
cmp
cmc
xchg
mov
das
jge
jb
stos
outsb
sbb
sub
lret
mov
jp
dec
cmp
sub
clc
insb
pop
xor
lret
add
lret
mov
enter
add
mov
outsb
inc
pushf
test
movsl
jo
mov
push
scas
mov
mov
sbb
jmp
fidivs
push
insb
xor
adc
loope
sbb
cmpsb
dec
jmp
xor
sbb
jg
fnstsw
adc
add
int
insb
xor
call
cmp
push
pmuludq
cmpsl
xchg
cltd
cmpsl
inc
addr16
adc
hlt
mov
insb
adcb
jne
cmp
push
and
int3
sbb
push
sbb
jne
xor
std
mov
sbb
jecxz
mov
loop
nop
xchg
adc
or
shrl
xchg
lahf
std
cmp
ss
jno
lea
pushf
inc
or
xor
pushl
sahf
xor
or
add
pop
or
sub
clc
pop
mov
jle
push
xchg
mov
cmp
inc
inc
inc
mov
jno
lods
stos
lret
scas
adc
leave
in
jp
imul
mov
movsl
mov
cmp
jmp
repnz
jmp
not
mov
xchg
insl
jno
sub
xchg
and
mov
lock
neg
fabs
mov
int
pop
fsubl
xchg
pop
mov
inc
popa
inc
or
jl
aad
shlb
mov
lcall
fwait
pop
clc
sbb
sbbb
iret
push
lods
inc
clc
pop
aas
imul
mov
jecxz
lods
inc
and
inc
orb
adc
mov
aas
bound
data16
cmpsb
push
scas
sbb
mov
and
push
dec
cltd
pop
jge
pop
add
in
xchg
dec
dec
loopne
sbb
push
sarb
xchg
mov
mov
insb
push
xchg
jle
and
inc
add
and
cmp
mov
cmp
test
adcl
or
or
outsl
ds
sbb
push
cmp
call
subl
sub
xchg
sub
sub
stc
xchg
add
popa
or
rcrl
outsl
mov
push
gs
pop
fstl
xchg
aas
fists
test
sub
or
syscall
nop
adc
jg
and
or
iret
out
dec
pop
adc
or
pop
mov
and
push
lret
and
addl
inc
push
or
sti
adc
idivl
push
hlt
fisttpll
push
xchg
inc
xor
xor
or
repz
jbe
rcl
fldcw
movsb
dec
jno
outsb
push
in
aad
cmp
mov
xchg
cmpsl
std
mov
xchg
jns
jecxz
xor
cmpsl
cmpxchg
stc
ss
iret
mov
inc
jbe
mov
xchg
cmc
sbb
in
push
lds
cmp
jmp
test
outsl
sbb
cmp
rcrl
mov
jp
mov
pop
mov
mov
notb
imul
std
push
adc
jbe
fistpll
andb
ss
push
aas
in
cmp
lcall
mov
push
push
cmp
xchg
and
mov
cmp
jb
sub
or
add
mov
or
je
subb
pop
jns
or
inc
mov
outsl
lcall
repnz
sbb
sub
dec
shlb
pop
mov
sbb
lea
imul
and
sub
mov
adc
or
fistpl
push
add
loope
hlt
push
or
mov
lods
andl
sbb
or
xor
repnz
xor
inc
mov
aad
sbbl
xorb
sbb
mov
and
gs
sub
mov
sbb
push
fsubrl
mov
jbe
inc
daa
imul
adc
pop
and
cli
mov
out
push
fldt
fs
jecxz
cmpl
inc
pop
ja
es
xchg
inc
jecxz
sub
shll
fsts
push
dec
ret
jne
into
mov
mov
xchg
lock
xchg
cli
push
pop
stos
repnz
sub
incl
adc
subb
lock
js
mov
lret
xlat
loope
or
adc
mov
sbb
mov
lds
cmp
test
stos
sub
ja
add
gs
les
pop
xchg
cmp
stos
pop
mov
mov
in
inc
and
movsb
add
gs
mov
fwait
hlt
fsts
popf
cltd
jo
jecxz
pop
pop
loop
push
loopne
stos
cmp
push
cmpsb
mov
into
sbb
mov
jo
mov
shll
sub
pop
pop
lcall
pop
lds
outsl
filds
adc
les
push
xorb
mov
imul
adc
loop
mov
inc
dec
out
xchg
mov
cld
adc
xor
push
lock
arpl
mov
lcall
xlat
inc
adc
push
fcomps
push
inc
jns
dec
pop
and
and
and
movsb
arpl
cmp
jge
arpl
mov
mov
mov
pushaw
mov
insl
add
xchg
inc
adc
enter
roll
xchg
cmpsl
insb
sarb
add
or
jmp
xchg
imul
jmp
ss
jo
jmp
jge
mov
mov
cmp
push
inc
mov
leave
or
xor
sahf
shll
inc
ja,pt
mov
nop
and
movsl
pop
mov
push
inc
and
mov
aas
in
pop
add
jp
dec
jp
pushf
dec
push
or
pushf
mov
adc
push
dec
add
lahf
stos
insb
xor
mov
sub
inc
inc
mov
add
push
pop
ss
jbe
lea
ficoml
imul
inc
add
dec
leave
je
or
iret
call
ret
and
es
jmp
adcl
sbb
mov
loope
cmpb
adc
inc
or
movsl
mov
jo
emms
stc
data16
test
xchg
test
and
and
mov
adc
das
loop
jge
sbb
int3
mov
and
sbb
push
mov
and
mov
sub
rcrb
cmp
dec
bound
int
xor
push
jno
adc
xor
sub
sbb
mov
scas
in
repz
repnz
dec
jno
sahf
movsb
fadds
xchg
pop
sbb
cmp
pop
jg
insl
inc
push
mov
mov
inc
int3
enter
jne
jl
aas
rcrb
fwait
int3
mov
and
mov
xor
rcrl
fadds
or
ljmp
in
push
and
lcall
xlat
iret
or
and
or
mov
jl
or
dec
daa
add
nop
and
cmovb
push
pop
inc
push
imul
mov
lret
push
andb
outsl
movsb
inc
xchg
xor
inc
add
jle
or
sub
pop
aad
imull
xor
push
sbb
or
js
ljmp
daa
call
xchg
inc
pop
or
xor
mov
addr16
cltd
and
js
in
push
movsb
insb
inc
std
xor
mov
dec
jnp
and
mov
cwtl
lds
sahf
jne
mov
je
lds
ret
pop
roll
pop
xchg
pusha
jno
mov
cs
sub
cs
aas
loop
add
pop
ss
xor
outsl
xchg
pop
jmp
push
mov
clc
sub
imul
xchg
iret
mov
cmp
sbb
mov
xor
fnsave
and
and
add
and
cmpsb
mov
fs
push
mov
adc
orl
imul
mov
fisubs
sbb
inc
push
lcall
shll
inc
mov
mov
push
xorb
inc
popf
ficompl
mov
loope
jge
and
push
mov
push
mov
call
pushf
xor
mov
add
std
sub
cli
pushf
add
testb
add
jge
sub
add
cli
and
cmp
mov
push
ss
pop
fwait
mov
jbe
popa
mov
loop
cmc
sub
push
dec
adc
nop
stos
mov
mov
jnp
xor
cltd
lcall
inc
rolb
fnstsw
sbb
and
ficoms
push
ss
hlt
add
nop
jne
cltd
jns
popf
sbb
outsb
test
xor
push
cwtl
adc
and
jne
or
jmp
lock
jns
loope
mov
fsubl
mov
mov
shlb
push
jno
mov
mov
popf
push
and
mov
scas
andb
jg
push
mov
lahf
inc
inc
inc
dec
ficoms
stos
adc
adc
mov
loope
movsl
mov
clc
sbb
jne
mov
add
inc
rcrb
sub
into
sub
stos
dec
mov
fiaddl
pop
pushf
and
pushf
xor
mov
add
imul
bound
jge
lock
iret
stc
pop
movsl
xor
adc
add
movsb
mov
cmp
into
push
stos
push
jg
incl
jl
fcomp
mov
sarl
sbb
jge
lret
adc
jp
in
es
mov
sbbl
mov
fadd
lret
sbb
jo
int3
lcall
xchg
xchg
push
mov
sbb
xchg
push
xchg
xor
ljmp
sub
dec
jno
sub
imul
shll
mov
bound
and
cmp
pop
fldl
adc
nop
addr16
sti
lcall
pop
pop
mov
adc
arpl
mov
push
arpl
push
cmp
shrb
test
or
cmp
sarl
outsl
inc
aas
popw
sub
sub
sahf
lret
daa
mov
mov
adc
xchg
dec
mov
ljmp
jl
lret
jno
test
subl
xor
fwait
test
cmp
movsb
lea
pop
dec
pop
dec
xor
sahf
sub
mov
sahf
jecxz
add
lods
sbb
test
or
pusha
repz
insl
ljmp
and
lret
add
adc
add
and
call
add
cwtl
mov
test
loop
shlb
push
cmp
test
adc
xchg
cwtl
and
adc
mov
test
repnz
out
popa
mov
push
mov
dec
mov
movb
mov
imul
xchg
cmp
test
adc
push
pop
mov
daa
mov
add
imul
movsb
push
xchg
int
mov
hlt
sbb
mov
jns
xchg
xchg
fwait
add
xor
jp
mov
mov
es
inc
cmp
mov
add
mov
mov
popa
or
ja
pop
xchg
pop
andb
decl
push
pop
xchg
stc
shl
dec
jge
xor
xor
mov
dec
bound
jmp
out
cmpsb
inc
mov
xchg
pop
loop
test
dec
stos
xchg
mov
mov
and
jb
mov
outsb
mov
je
mov
pop
cmpsb
xor
leave
mov
push
inc
cmp
js
xchg
mov
sarl
jbe
push
cld
fsubr
mov
sub
pusha
jo
add
into
jp
push
lret
stc
test
stc
adcl
fnstenv
sub
jb
sub
cli
sahf
mov
sbb
mov
cs
push
aas
loopne
jae
pop
dec
sahf
out
mov
mov
add
bound
and
in
jge
and
add
dec
mov
dec
int3
sahf
leave
push
loopne
scas
jb
lret
mov
sbb
sub
cli
pop
fdivrs
popf
jnp
dec
es
data16
pop
jmp
sub
jp
aaa
xchg
mov
and
fcompl
add
rol
jbe
jmp
mov
push
pop
sub
js
inc
xor
add
add
in
loop
dec
xor
stos
stos
and
push
imul
xor
es
dec
pop
mov
dec
imull
sbb
rorl
sbb
or
lods
mov
or
xor
or
inc
in
hlt
aaa
push
pop
xor
dec
lea
add
add
lock
and
dec
repnz
fidivl
or
xor
or
int
dec
insl
cmp
fstpl
fstpt
aad
mov
cltd
imul
insb
repnz
lea
stc
dec
xor
cld
mov
test
inc
push
jg
adc
aad
outsb
int
xor
mov
sbb
inc
and
and
outsb
jnp
cld
and
imul
push
pop
mov
jle
mov
imul
movsl
dec
xchg
pop
xor
lret
int
jb
inc
sbb
data16
cmp
jns
cmpsb
jne
jae
pusha
sbb
jne
add
je
sub
sti
lea
jbe
je
jnp
jg
int
fsubl
lret
and
adc
movzwl
insl
dec
insl
test
jl
mov
stos
in
lahf
aas
mov
cmpl
sbb
shrb
dec
lret
int
lods
add
sub
xchg
fstpt
push
jns
cltd
je,pt
sub
xchg
js
into
repz
mov
imul
scas
jae
pop
mov
pop
push
mov
mov
mov
cmpsl
pop
insb
jg
repz
mov
add
xchg
xor
stos
xchg
xchg
sbb
scas
lds
adc
cmp
jecxz
inc
adc
enter
clc
and
dec
pop
dec
pop
jp
int
outsl
pop
jp
popa
mov
les
inc
filds
adc
sbb
xlat
inc
sbb
lods
adc
mov
iret
add
addr16
adc
jge
in
xlat
in
stc
push
repnz
dec
sub
xchg
push
out
mov
mov
cmp
nop
es
push
mov
cwtl
mov
add
and
adc
es
add
leave
cwtl
dec
jge
adcb
sbbl
dec
js
adc
add
shrb
push
mov
bound
dec
sub
pop
adc
call
ret
gs
mov
mov
mov
mov
mov
insl
cli
sbb
call
mov
sarb
and
xlat
shrb
jle
lret
pop
dec
xchg
je
adc
bound
push
fmul
aaa
xchg
mov
xchg
js
lcall
cs
movsl
in
sbb
mov
sub
mov
std
mov
adc
mov
pop
shlb
out
mov
popa
sahf
ret
push
xchg
inc
push
stos
push
daa
sbb
adc
sub
fst
xor
cmc
mov
loop
xchg
insb
fsubl
mov
push
push
xor
mov
pushf
cwtl
jbe
je
loope
cmp
mov
and
call
inc
aaa
js
rorl
cmp
add
pop
movsb
pushf
jne
ret
push
leave
pusha
or
mov
lret
in
xor
xchg
lea
jg
cmp
mov
xchg
cli
repz
mov
lret
sbb
imul
cmp
inc
imul
jmp
and
xchg
andb
loopne
or
sbb
and
jo
pop
cltd
sub
inc
and
mov
fidivl
push
xor
ss
or
js
jns
add
cs
cmp
jnp
sbb
scas
xor
lret
jnp
mov
inc
leave
addr16
jno,pn
stos
dec
jge
fwait
sub
loope
movsb
je
mov
add
scas
cmp
mov
js
cmp
jbe
mov
xchg
les
xor
rcrb
push
jae
xor
out
xor
inc
adc
out
push
test
xlat
cmp
dec
pop
arpl
jnp
push
sbb
mov
push
xchg
shlb
aaa
out
aaa
mov
mov
fwait
movsl
sahf
push
out
and
std
loop
aam
pop
jle
sbbb
and
int3
popf
xchg
cwtl
xchg
test
jmp
pop
or
imul
les
jg
dec
xchg
je
xchg
add
xchg
and
add
sub
adcb
xchg
push
pushf
mov
cld
mov
mov
nop
popa
mov
andb
pop
pop
pop
pop
jns
jge
repnz
push
in
mov
xor
adc
movsl
gs
dec
push
cmpb
mov
xchg
inc
mov
push
dec
loope
mov
addb
jl
ljmp
dec
pushf
lret
jg
es
nop
divl
adc
and
sbb
mov
xchg
mov
mov
or
cmpsl
lret
mov
and
jmp
mov
gs
out
jge
cld
orl
int3
pmulhuw
cmp
pmuludq
arpl
cltd
andb
sbb
pop
popf
pop
sti
bound
push
cmp
push
lret
pop
in
loope
dec
cmp
stc
fs
sub
fnstcw
test
outsb
outsl
repz
in
outsl
lar
dec
fimuls
mov
sbb
cld
iret
aas
leave
lock
divps
push
mov
mov
loop
pop
xor
mov
rolb
cld
xchg
jle
add
cmp
insb
and
les
add
adc
shll
xchg
mov
cmpl
scas
xor
sub
sahf
pushf
loope
dec
mov
stc
xchg
pushf
ret
aad
mov
sub
cs
mov
leave
call
pushf
enter
jg
sub
mov
sub
cmpsb
sub
mov
push
rcrb
leave
popa
outsl
out
jmp
popa
mov
jl
clc
int3
shll
jge
jle
sub
jne
jno
pop
and
call
dec
mov
jmp
xor
divb
inc
adc
pop
mov
and
mov
out
cmc
pushf
test
sub
sbb
pusha
cltd
shll
pusha
add
add
and
xlat
repnz
shlb
xchg
sahf
mov
mov
push
cmp
cwtl
xchg
ja
cmp
imul
push
and
jae
dec
add
xorb
in
stos
jl
dec
add
mov
or
jle
cli
lcall
loop
mov
inc
outsb
inc
sub
dec
push
outsb
in
jne
iret
xchg
xor
addr16
xchg
aas
ljmp
inc
enter
sbb
xchg
jge
loopne
inc
imul
mov
jp
stc
sbb
cmp
jno
or
jle
test
push
dec
ror
movsb
push
mov
les
inc
mov
adc
arpl
lahf
in
pop
mov
jae
pop
sub
pushf
incl
pusha
in
je
jno
push
jmp
out
xor
fwait
imul
dec
popa
movsb
jecxz
pop
int
lahf
inc
cmc
ret
push
call
jnp
push
lcall
scas
lcall
sub
mov
xchg
jno
faddl
dec
test
std
add
xchg
pop
mov
rcr
xor
xchg
mov
arpl
and
inc
rcr
xor
cmp
aad
popf
xor
and
push
and
scas
mov
addr16
xchg
or
adc
mov
pop
jle
mov
lods
ds
sbbb
rcrb
mov
repnz
cmp
addr16
aaa
mov
cmc
mov
and
pop
iret
jo
xchg
in
and
daa
aam
push
les
aam
mov
rcr
xchg
dec
or
and
out
out
cs
add
pop
lsl
int3
rcrb
subl
repnz
jns
push
je
sbb
jbe
mov
lret
gs
sti
test
push
xchg
sub
push
push
lea
rorl
sbb
pusha
add
mov
into
stos
adc
test
out
cmp
arpl
inc
imul
adc
push
sbb
adc
in
lret
mov
movsl
mov
xor
xchg
sbb
fldcw
movsb
push
mov
inc
imul
push
ja
sarb
sbb
sub
xchg
add
mov
dec
and
xlat
mov
jnp
in
icebp
fldenv
mov
jge
cmpsl
aas
je
pushf
insl
and
add
jbe
jge
roll
ljmp
enter
jmp
out
add
mov
repnz
add
or
xor
sbb
loope
fisttpl
mov
mov
leave
repnz
xchg
data16
add
rcr
ja
repnz
sub
jge
jbe
je
jnp
push
stos
xor
fnstcw
jl
and
mov
data16
add
inc
push
xor
sbb
xor
nop
mov
cmp
ljmp
xchg
or
icebp
push
push
test
push
adc
xor
test
mov
mov
scas
dec
lea
outsb
inc
ss
mov
push
in
add
ret
push
scas
in
std
add
jle
sti
les
stos
xchg
push
dec
in
in
lret
sbb
fistpll
nop
or
pop
test
out
jl
mov
xor
sbb
jmp
jg
xchg
push
mull
or
cmp
inc
aas
push
cmpb
and
pushl
jae
nop
mov
pop
fists
lods
ret
pop
mov
jo
popf
lret
movsb
inc
call
insb
inc
incl
mov
cmc
inc
mov
inc
and
mov
lret
push
test
xchg
insl
add
pushf
ss
xchg
rclb
out
dec
inc
iret
jb
rcl
popf
cwtl
ja
sub
mov
dec
neg
sub
test
lods
test
decl
les
mov
inc
arpl
mov
lock
lods
mov
cmpl
xchg
fucomi
in
cmp
mov
pushf
out
jge
shrb
jns
jnp
imul
jns
std
fwait
pusha
ja
js
rcrb
cwtl
test
call
test
or
bound
movsl
sti
pusha
imul
fwait
mov
subl
mov
gs
mov
xchg
ds
sub
push
insl
or
mov
sbb
sbb
fwait
aad
mov
add
gs
test
aaa
mov
jbe
aad
mov
cmp
mov
call
xor
pop
test
pop
jo
sbb
notl
xor
loop
std
mov
pop
dec
testb
jo
ds
nop
out
xchg
jge
mov
fcompl
mov
xlat
sbb
mov
test
in
in
xor
hlt
xorb
cmpsb
aad
aam
imul
or
lret
lods
sub
mov
dec
lcall
out
and
xlat
cmpb
cli
cmp
dec
dec
icebp
or
jge
cwtl
push
insl
sub
pop
popa
lcall
adc
data16
mov
jb
test
aas
or
repnz
mov
pop
mov
sar
sbb
fs
repz
jg
mov
popa
mov
sbb
shrl
adc
xor
or
dec
testb
push
lods
lret
adc
repnz
stos
jecxz
add
dec
mov
sarl
out
fldt
adc
mov
hlt
incl
push
aas
sub
arpl
fldenv
cwtl
jl
push
orb
lahf
mov
int3
push
std
fnsave
mov
pop
aam
stc
jnp
fcoms
nop
or
push
repnz
mov
ds
scas
xor
push
mov
sbb
out
xchg
rclb
lahf
and
pushf
cld
mov
test
pop
and
mov
arpl
adc
xchg
xchg
lahf
test
in
sub
fistl
rcrl
dec
xchg
stc
jns
aas
and
xchg
inc
js
jecxz
inc
add
les
mov
scas
xchg
mov
add
imul
add
xor
iret
jnp
inc
mov
xchg
lret
or
aad
mov
fisubs
cwtl
xchg
push
fidivs
test
lret
push
out
mov
test
mov
repnz
hlt
popa
loop
lret
mov
aaa
lret
xor
cli
inc
aaa
jg
repz
add
jnp
aaa
out
pop
outsl
fstl
adcb
lret
pop
popf
loop
imul
push
push
cmc
mov
sbb
fistl
push
fistpll
fiaddl
pop
dec
mov
xchg
pop
pop
fidivrl
cmp
adc
add
jge
cs
pop
insb
xor
mov
outsb
adc
sbb
xor
stos
fwait
adc
xor
lahf
or
test
mov
pop
stos
outsb
pop
and
pop
mov
jmp
push
cs
push
fcomi
mov
xchg
inc
inc
dec
lea
sbb
inc
adc
xor
and
fadds
add
fldl
sar
jecxz
sbb
mov
push
fcompl
xchg
jne
leave
adc
pop
or
lods
and
pop
or
aad
leave
fidivrl
sub
adc
adcb
mov
mov
imul
icebp
nop
addb
mov
adc
sbb
lcall
xchg
push
jne
inc
cmpsl
mov
fwait
mov
fsubrs
jmp
popa
inc
xchg
sbb
popf
pop
sarl
movsl
movsb
add
pop
sub
pop
inc
fyl2xp1
inc
adc
sbb
movb
test
jmp
xchg
mov
ret
and
call
inc
mov
jg
dec
jecxz
push
push
mov
or
push
fildl
ret
inc
push
test
fadds
jle
movsb
arpl
dec
xchg
adcl
sbb
gs
xchg
imul
arpl
xlat
daa
xchg
lds
test
rolb
jecxz
rcll
pop
xor
fnstcw
sub
xchg
bound
faddl
test
lock
addr16
aam
mov
inc
jle
fldl
pop
sub
adc
rorl
inc
sub
test
sbb
sub
arpl
cli
icebp
mov
stos
mov
iret
push
inc
pop
shr
pop
clc
mov
xchg
mov
mov
inc
adc
push
stos
and
jbe
mov
int3
cwtl
pop
jge
pop
sbb
xlat
xor
pusha
cmc
xchg
xchg
dec
test
pop
push
fstpt
test
repnz
aam
inc
cmp
mov
mov
adc
mov
mov
sti
popf
jg
test
push
jge
mov
inc
pop
pusha
mov
call
push
in
dec
fsub
popl
pop
mov
test
xor
xlat
pusha
inc
xor
inc
in
jp
lods
jno
inc
xchg
daa
push
mov
xchg
les
sti
mov
and
cmpsb
push
cmpb
bound
scas
iret
and
pop
push
and
xchg
dec
insb
es
iret
shrl
pop
stc
lahf
cli
arpl
push
xlat
test
dec
add
data16
lods
lea
fadd
fcoml
fcoms
icebp
fdivs
scas
cmp
fwait
dec
les
push
push
fadds
insb
ss
jno
rcll
loope
mov
sbbb
clc
and
repz
jge
insb
xor
sub
xchg
gs
cmp
cmpl
imul
xor
jns
sub
mov
adc
xchg
stos
rol
xor
inc
dec
jbe
jno
mov
popa
in
mov
aam
mov
cmp
je
add
mov
lret
pop
outsb
loop
cmpsb
add
iret
or
imul
hlt
push
shrl
mov
jp
dec
mov
les
idivl
test
gs
xor
fs
adc
out
and
or
shll
xchg
sub
out
mov
lea
pop
loopne
ss
inc
fidivs
inc
test
sbb
js
pop
xchg
movsl
call
or
adc
fbstp
lret
jle
inc
xor
shrb
test
or
dec
and
mov
js
pop
jge
aas
cmp
scas
enter
test
pop
or
jecxz
lock
mov
fwait
dec
jle
add
into
stc
sub
lea
cld
xor
ds
in
mov
inc
ficomps
int3
mov
insl
insb
repnz
jl
stos
jbe
aam
push
lds
push
xchg
stc
sti
sbb
mov
rorb
or
pop
mov
jge
std
and
xor
cmp
push
mov
pop
add
jg
pop
dec
sbb
test
mov
mov
test
ror
adc
std
jmp
mov
cmpsb
in
sub
jecxz
sbb
mov
mov
stos
outsl
adc
fisubrl
mov
pop
in
sbbb
ficoms
shr
mov
int
xchg
mov
xchg
jmp
pop
pop
lods
popf
xchg
mov
adc
popf
xor
jbe
gs
test
les
rcll
fidivs
outsl
adc
nop
int3
adc
mov
fwait
test
pusha
mov
mov
cmp
or
push
stc
ljmp
ljmp
sbb
cs
outsb
stos
cmp
cmp
ljmp
dec
fsubrs
pop
or
and
cmp
sub
add
adcl
jl
and
xor
jb
jecxz
jge
xor
adc
jge
jmp
arpl
mov
fsub
cmp
jb
fiadds
push
push
jge
popf
jae
xchg
mov
std
ret
sahf
and
outsl
mov
cmp
add
sub
xor
dec
imul
xchg
adc
sbb
lea
cli
jno
xor
fwait
ret
popf
pusha
es
mov
push
enter
lea
sarb
icebp
pop
xor
sahf
ss
and
mov
jle
pop
insb
or
jns
inc
addr16
fcompl
lret
testb
jno
pop
cmpsb
sub
cltd
mov
cmpb
adc
cmp
test
xchg
inc
scas
lods
cs
mov
adc
xchg
push
je
and
xchg
loopne
in
mov
fiadds
pushf
sub
inc
leave
fstpl
xchg
jl
fsubl
mov
sbb
ret
add
mov
enter
lds
mov
add
movsb
dec
adc
addr16
push
sbbl
pop
or
xchg
dec
sub
xorb
jge
add
into
xchg
pop
sub
test
inc
adc
jl
jge
mov
push
out
push
mov
jg
sbb
mov
inc
gs
or
int
repz
rcll
mov
mov
push
mov
cmp
mov
jb
bound
pop
movsl
and
push
inc
cli
xchg
pop
lret
jb
or
xchg
stos
sub
cmc
popf
jno
imul
lods
mov
sub
push
push
sti
mov
mov
cmpl
inc
xchg
cmp
xor
imul
inc
je
out
test
cmp
or
mov
mov
jle
sbb
insl
mov
fildl
adc
fwait
xchg
cld
pop
in
inc
int3
jge
cmc
mov
jne
jae
xor
aam
jne
mov
lret
cmpl
bound
fs
mov
loopne
push
sti
push
jns
xlat
dec
adc
inc
lods
js
jbe
data16
cwtl
fdivrs
push
rcl
xor
push
shll
xchg
loop
inc
mov
mov
xchg
cmp
lds
je
and
cmc
add
mov
xlat
dec
cs
or
sbb
lea
daa
fwait
rcrl
js
aaa
jne
data16
mov
in
xlat
sbb
lods
mov
loop
stos
mov
dec
pop
jne
xchg
ret
ret
addr16
std
sti
cmp
pop
cmp
in
out
and
adc
push
and
dec
std
call
add
jge
pop
sub
xchg
adc
inc
je
ljmp
fisttpll
jns
outsb
pop
jo
popf
fisttps
mov
std
decb
sarl
jg
rclb
sar
cmp
dec
scas
stos
loop
out
movsl
sbb
and
jo
incb
add
and
lds
mov
sub
jae
popf
and
loopne
cmp
xor
sahf
adc
xchg
sub
and
outsb
rcll
and
call
flds
inc
xchg
and
and
pop
and
xchg
sti
cmp
and
loop
mov
insb
movsl
add
ret
adc
add
xor
insl
lcall
fidivrs
out
sbb
pop
or
jp
lock
inc
push
orl
dec
inc
mov
push
mov
insl
xor
arpl
insb
lea
inc
jnp,pn
pop
push
xor
ja
cmp
pop
popf
fs
mov
cmp
mov
adc
xor
sbb
ss
sub
push
pop
test
daa
sbb
ret
or
sub
xchg
inc
add
mov
movsb
test
dec
jb
add
and
cmpsl
xchg
sahf
fldt
push
bound
mov
add
and
lret
inc
imul
cmp
dec
loopne
lahf
dec
sti
aam
xor
nop
xor
movsb
sub
mov
inc
daa
subl
loope
loop
addr16
cs
std
jecxz
jl
xchg
xchg
lea
out
enter
int3
aas
adc
cmp
and
sarb
mov
in
xchg
cmp
loope
sti
lret
xchg
mov
test
test
mov
aam
and
addr16
pusha
repz
mov
jbe
jmp
xchg
push
sbb
call
lret
mov
xchg
loope
jecxz
fisubrl
or
jo
cmovae
push
mov
ss
cmpsb
ss
push
pushf
push
jne
mov
cmp
cmpb
xor
adc
adc
jle
data16
andl
mov
xor
lods
mov
in
xchg
mov
imul
mov
bound
sbb
loop
jg
xchg
insl
cld
pop
hlt
xchg
ljmp
in
add
das
loopne
aam
in
xorb
sbb
outsl
fstps
jno
or
std
dec
mov
lcall
cld
int
sbb
les
stc
scas
mov
icebp
repz
dec
sbb
xor
cmovb
lret
cltd
leave
sti
xchg
sbb
adc
and
andl
insb
mov
jae
and
add
cld
notl
lcall
mov
shrl
cmp
aam
sbb
sub
jno
pusha
lods
xchg
es
dec
xorl
ja
inc
cmp
and
pushf
fsubrs
cmp
andb
fistps
mov
fidivrs
sub
mov
pop
sbb
cmp
test
cmp
sbbb
cmp
add
in
lock
inc
jo
xchg
imul
or
pop
inc
inc
or
pop
push
adc
xchg
mov
jbe
jecxz
add
sub
cwtl
sbb
je
push
xlat
test
inc
mov
loopne
insl
repz
popf
sarb
jae
cmp
cmp
jae
and
and
imul
aam
mov
jle
adc
out
and
cmpb
push
and
jle
xchg
and
fwait
imul
or
xor
and
mov
int3
stos
negb
cld
inc
sti
push
inc
movsb
mov
aas
fldcw
push
sbb
adc
mov
in
imul
hlt
cltd
popa
out
mov
add
dec
adc
cwtl
pushf
push
cmp
cs
cmp
sbb
jl
in
testb
lods
and
pop
mov
push
mulb
hlt
ss
and
mov
dec
xchg
popf
imul
push
mov
stos
outsb
sahf
and
xchg
negb
jne
jne
pop
adc
mov
lahf
ds
testl
adc
jmp
sub
xchg
leave
testl
out
sbb
hlt
iret
add
inc
push
xchg
jmp
push
dec
jnp
adc
test
mov
mov
ja
mov
cmp
ds
mov
test
fwait
mov
xchg
in
jle
pop
adc
xchg
sbb
insb
sahf
rep
stc
xchg
aas
sub
movl
nop
je
adc
push
movsl
xchg
dec
push
addb
jl
sub
jl
dec
or
dec
jns
jp
inc
movsb
push
sbb
cwtl
jg
mov
je
icebp
push
sub
movsb
push
add
and
in
jmp
fdivs
jl
add
push
jp
sti
fwait
and
sbb
outsl
shlb
fs
mov
data16
stos
data16
test
and
cmpsb
inc
loope
loop
jp
xlat
add
jg
cmp
ret
dec
mov
mov
inc
pusha
push
insl
into
into
jmp
inc
enter
xchg
xchg
mov
inc
jo
cmp
repnz
ss
mov
shrb
inc
push
das
pop
pop
bound
push
out
rep
mov
mov
pop
cmc
cmpsb
adc
cmpsb
roll
inc
sub
add
push
xchg
push
mov
fildl
loope
jl
lahf
out
sub
mov
stos
mov
adc
fwait
push
jecxz
push
xchg
enter
mov
push
xor
and
jno
std
int
ds
xor
push
inc
dec
lahf
push
dec
loop
fwait
insl
pop
mov
push
mov
test
xlat
in
mov
aaa
call
and
in
stc
mov
negb
xor
cmp
cmp
addr16
ja
xchg
sub
xor
stc
sahf
adc
movsb
fwait
insl
stos
push
xor
pop
out
dec
outsl
adc
ret
lret
ror
mov
cmpsb
adc
int
in
bound
scas
mov
addr16
fwait
adc
mov
mov
enter
loope
jnp
fs
dec
test
stos
sub
aam
icebp
add
mov
subl
addr16
pop
or
lock
cmp
int3
sbb
fiadds
jle
xorb
dec
jle,pn
in
mov
mov
cltd
gs
lcall
mov
jle
dec
adcl
xor
xor
rorb
cld
es
in
and
lods
xor
or
fs
jne
or
and
fwait
mov
add
push
adc
and
add
mov
lret
mov
cli
adc
pop
mov
adc
push
push
mov
mov
push
jecxz
imul
mov
pop
enter
insl
popa
mov
frstor
ficompl
mov
fcmove
pop
dec
mov
fstpl
cli
rorw
jp
sub
in
push
xchg
jecxz
pushf
or
jns
mov
and
dec
and
cltd
sahf
jne
xchg
fsubs
mov
mov
adc
into
in
mov
cltd
and
leave
orb
rcr
fnstcw
pushf
or
mov
hlt
inc
xchg
push
mov
pusha
sahf
xor
pop
fsubl
ficompl
sub
repz
mov
addr16
xchg
mov
jb
fisubrl
rcrl
add
test
sahf
sbb
or
scas
gs
mov
push
inc
add
cmp
pop
push
or
repz
xchg
int
icebp
jecxz
xor
loopne
lcall
movsb
cmpsb
add
lods
push
xchg
stos
sub
xlat
icebp
iret
dec
mov
inc
aaa
mov
dec
or
mov
dec
inc
cmp
nop
popa
cmp
or
xor
push
ffree
addl
stos
cmp
mov
js
pop
ret
and
movsl
scas
inc
stos
cltd
pop
orb
hlt
xchg
test
xchg
mov
pop
jle
inc
mov
mov
sbb
push
ds
lret
push
push
out
add
xor
or
jo
ret
orb
jl
mov
orl
ret
insb
sahf
pop
cmp
or
or
add
aam
sub
test
sbb
pop
inc
pop
leave
push
mov
lret
hlt
push
mov
fs
push
outsl
cmp
lods
xchg
mov
addb
cltd
pop
fwait
aam
sbb
push
dec
jns
pop
shrb
xchg
jo
xchg
into
mov
dec
push
mov
or
dec
mov
das
gs
daa
loop
jge
in
pop
cmp
and
add
pop
lea
loop
inc
jnp
sbb
ss
fst
sbb
jnp
call
icebp
push
adcb
pop
mov
rorb
adc
jb
pop
inc
test
cmp
dec
adc
xorb
pop
cs
sar
inc
bound
lds
aad
fmuls
xlat
imul
lea
mov
xchg
and
mov
xor
mov
xor
loope
inc
jecxz
mov
and
cmp
rol
stos
out
or
push
fdivl
shrl
pusha
jae
idivb
sbb
xor
imul
pop
mov
add
lods
gs
das
add
and
rcr
ss
push
cmc
test
lahf
leavew
push
inc
jno
inc
jge
cmp
jl
daa
adc
fildl
or
loopne
notl
and
das
lahf
stos
sub
popf
adc
imul
aas
push
cli
ret
pushf
adc
push
outsl
std
fldcw
inc
sbb
loopne
in
pushl
push
pop
lcall
scas
dec
mov
xlat
popf
add
jg
push
test
shll
das
test
repz
push
xchg
sub
arpl
cltd
mov
bts
dec
movntq
jbe
nop
gs
xorb
sub
mov
xor
cld
les
lea
push
xor
sub
push
inc
jno
idivb
loop
leave
pop
insb
inc
les
push
pushf
jno
ret
ljmp
jge
loop
call
sbb
jecxz
fildl
arpl
cmpsb
dec
fstl
mov
xchg
outsb
aad
loopne
test
loope
cwtl
ja
add
push
jg
mov
into
fstl
dec
iret
in
pop
inc
and
dec
adc
lret
mov
xor
cmp
mov
sbbl
test
lret
ds
cmp
or
mov
add
and
pushf
daa
popa
pop
stos
cmp
xchg
sub
xchg
mov
pop
sub
mov
and
xchg
je
xlat
aad
pop
fnstcw
in
mov
popa
jb
aad
incb
sub
aam
mov
gs
fisttpll
ret
sbb
leave
cmp
inc
mov
adc
cmp
push
lret
shlb
xchg
cmp
add
cmp
mov
dec
push
int3
xor
orl
sub
repz
int3
jnp
sarb
je
cmp
clc
push
dec
pop
fwait
jge
shll
pop
xchg
rcrb
fdivrl
insl
jle
das
movsl
mov
test
jno
out
cmp
mov
stos
test
xchg
gs
jp
bound
pop
or
inc
mov
xchg
decb
sarl
aaa
dec
dec
pop
iret
fwait
lock
pop
cmpl
lcall
lret
push
inc
cmc
cmp
or
xchg
nop
add
push
add
mov
push
push
jle
fisttpl
jne
push
fdivp
mov
mov
add
into
mov
mov
mov
fnsave
jp
rol
and
mov
mov
movb
outsb
ds
push
mov
add
inc
mov
jle
cmpsl
adc
cmp
mov
ret
pop
jmp
aaa
xchg
and
xchg
inc
and
dec
xchg
inc
gs
add
push
fidivrs
sbb
out
fbstp
addr16
out
jp
bound
cmp
pop
or
inc
and
outsb
inc
pop
jb
and
cmp
adc
sub
jmp
jb
mov
and
mov
rorl
ss
inc
aas
pop
cmp
xchg
mov
or
ret
sbb
jno
mov
stos
fbstp
mov
stos
cmp
inc
outsb
pop
ja
fiadds
pushf
xchg
lret
dec
inc
mov
les
jmp
je
jecxz
mov
pop
test
mov
testl
dec
movsl
sbb
dec
xorl
repnz
idivl
xor
lret
outsb
pop
push
mov
ret
dec
xor
icebp
in
xchg
push
fsubrs
jl
inc
mov
xchg
fdecstp
call
cmpsl
jne
ficoms
mov
daa
out
hlt
lods
loope
pop
xchg
cmp
mov
mov
out
push
cwtl
mov
mov
lea
fcomip
sub
je
nop
adc
popa
fldl
lret
mov
dec
shr
es
cmp
lcall
push
and
add
daa
imul
and
les
ret
hlt
inc
rcl
pop
inc
popa
cli
xor
lea
lock
push
ret
lock
loop
xchg
sub
push
out
push
cwtl
xlat
jle
xchg
sbb
mov
push
add
xor
mov
sti
test
sarl
jp
cmp
mov
cmp
fwait
sbb
pop
and
mov
cmp
mov
xchg
add
loopne
pop
add
jge
fistl
fmulp
scas
stos
xchg
push
out
mov
sbb
sbb
dec
xchg
shlb
dec
mulb
in
xor
loop
sub
lods
dec
sub
je
or
incb
dec
adc
gs
cmp
fstpt
dec
fsubp
cmp
into
movl
mov
test
frstor
pop
call
addr16
mov
arpl
negb
xorl
xchg
push
je
mov
hlt
mov
jg
dec
js
sbb
out
cmpsb
addr16
in
lock
mov
enter
les
dec
sub
jge
xchg
sbb
inc
mov
xchg
mov
imul
adc
mov
mov
adc
mov
jnp
cltd
cmp
cmp
imul
sbb
sti
mov
xchg
enter
cld
repnz
jmp
int3
mov
aaa
mov
out
cmc
and
addr16
mov
push
or
and
mov
outsb
jo
inc
and
sub
mov
add
shrb
sahf
mov
push
aas
lahf
add
mov
adc
aad
mov
std
dec
jp
sti
push
dec
dec
cmpsl
xchg
rclb
adc
stos
mov
xchg
test
test
dec
xorb
in
gs
lods
xchg
imul
ljmp
pop
fwait
mov
mov
pushl
gs
cmc
jne
jle
jno
cwtl
xchg
dec
icebp
icebp
jne
xor
pop
popa
in
fsubrs
out
adc
pop
xchg
scas
insl
xchg
inc
cmp
xor
cmpb
inc
push
arpl
push
fistpl
jl
and
push
cmp
jo
add
bound
imul
rcll
in
and
mov
dec
jp
dec
test
or
pop
ja
lahf
inc
fistpll
or
push
in
adc
rcll
iret
test
and
jle
mov
negb
dec
mov
imul
pop
jno
stos
fsts
loope
cmp
mov
dec
dec
push
leave
mov
out
pop
add
aad
divl
mov
rcrl
fwait
mov
fstps
lods
das
adc
jecxz
fwait
mov
idiv
xchg
pop
sbb
lret
mov
test
popa
pusha
push
mov
stc
movsb
inc
push
push
sub
mov
add
pop
or
adc
in
idivb
adc
sarl
push
mov
lods
ljmp
xor
or
mov
rcrl
pop
lods
cmpsb
sub
add
aam
fsts
hlt
push
cmp
xchg
out
movsl
inc
inc
lds
mov
dec
jp
aad
dec
push
std
dec
dec
scas
xchg
mov
aas
subb
and
jno,pt
mov
mov
xchg
jg
in
test
mov
ret
push
dec
dec
jmp
pusha
pushw
pop
inc
mov
sub
xcrypt-ecb
cmpsl
mov
cld
jo
hlt
aas
popa
adc
sbb
scas
xchg
add
and
mov
icebp
enter
cwtl
jno
jge
push
movnti
outsl
add
xchg
shl
dec
jno
adc
cmpsb
mov
lahf
xor
popf
neg
sub
cmp
dec
or
into
inc
jne
xchg
sar
dec
ficoml
stos
xchg
inc
orb
cs
inc
and
mov
xchg
dec
sbb
test
xor
sbb
mov
test
jbe
shll
lea
lret
aas
pusha
arpl
add
sbb
arpl
in
orb
jns
sti
cmpsl
sbb
ljmp
jge
imul
mov
add
mov
pop
push
sbbb
bound
js
mov
dec
sbbl
outsl
cmp
or
xchg
mov
daa
pop
jle
in
and
or
and
shrl
mov
shll
popf
pop
enter
push
jnp
ficoms
xor
add
icebp
fisubrl
daa
mov
inc
mov
inc
daa
ja
xor
test
rolb
mov
push
cmp
mov
clc
xchg
imul
inc
xchg
fdiv
mov
push
push
movsl
or
adc
jg
daa
jno
sub
das
daa
push
pushf
or
loop
test
es
lock
mov
jge
pop
or
lcall
adc
xchg
sbb
xchg
pop
sti
mov
cmp
cld
pop
mov
mov
loope
sbb
mov
cmp
test
cmp
push
and
cmp
pop
mov
jmp
aas
loop
pop
out
fldt
adc
jo
xchg
pushf
inc
dec
xor
shlb
push
dec
clc
cmpsb
pusha
mov
ret
mov
mov
lods
mov
sub
inc
enter
imul
les
lods
push
xchg
xor
imul
outsl
mov
mov
sbb
mov
int3
pop
mov
nop
js
mov
cli
clc
pop
xor
outsb
inc
les
sub
lock
ja
in
push
jae
jae
add
es
test
mov
adc
dec
rcrb
int
nop
popl
pusha
je
shlb
add
adc
jmp
sbb
add
gs
mov
dec
lock
cmp
add
pop
cltd
shll
sbb
dec
bound
mov
add
es
shll
add
popf
mov
jg
cmp
add
pop
ja
add
test
movsb
mov
mov
push
das
shr
movsb
push
ja
mov
fiadds
xlat
mov
push
enter
andl
ret
sbb
sbb
aad
leave
pop
addr16
adc
mov
cmp
lds
mov
push
insl
jae
lret
mov
inc
dec
mov
push
int3
lret
mov
jge
out
pop
xchg
hlt
mov
test
nop
loope
addr16
sub
in
add
mov
jge
mov
addl
or
jne
mov
call
or
add
int
idivl
or
add
cmp
jne
aam
mov
in
lret
mov
mov
pop
inc
jb
bound
loopne
mov
mov
add
enter
int3
push
es
mov
lahf
cmc
mov
test
sbb
mov
mov
sahf
cmp
sub
pop
dec
rorl
sub
xor
xor
sub
dec
ds
icebp
jmp
add
xchg
or
fsubrl
adc
push
test
in
out
cs
mov
push
push
sub
xor
or
iret
add
sub
test
mov
inc
mov
sbb
outsl
xchg
jle
fmuls
mov
push
sbb
dec
adc
jo
xchg
enter
cmp
sub
pushf
mov
inc
sub
movsb
sub
xchg
out
and
lcall
icebp
sub
outsb
push
mov
cld
mov
cmc
mov
call
mov
es
xchg
xor
jp
xchg
pop
inc
aas
or
fwait
or
js
jle
addr16
pushf
enter
aaa
rorb
bound
jp
fwait
lock
xchg
rorl
mov
pushf
mov
shll
hlt
rorl
cmp
xchg
outsb
adc
lea
daa
xorl
xor
pop
push
jle
jae
sub
test
cmp
or
push
mov
and
ss
sbb
cmp
pop
lret
sub
xchg
and
iret
push
test
adc
and
mov
jne
in
cmp
lcall
mov
dec
dec
jb
in
xor
sbb
out
mov
leave
imul
jl
std
rolb
sahf
es
jmp
adc
ljmp
clc
and
push
mov
sbb
into
inc
jg
inc
pushf
sub
clc
cmp
hlt
popa
jnp
cmp
cmp
jne
jle
pop
cli
mov
cmp
cltd
or
dec
popa
clc
fisubl
dec
pop
das
add
stc
add
mov
sbb
insb
popf
repz
popf
push
pop
insb
jp
add
lahf
mov
ljmp
fcomp
mov
adc
inc
or
jp
mov
add
addr16
add
and
aaa
mov
int3
cmp
push
out
sbb
jge
xor
hlt
loope
roll
pusha
or
stos
cmp
jecxz
inc
jb
out
mov
jae
push
pusha
xor
push
fs
and
sarl
aas
and
inc
add
push
jo,pt
or
arpl
dec
add
ds
sbb
xchg
add
rorl
popa
mov
adc
popa
rorb
dec
push
sti
jno
mov
jl
notl
jg
xchg
clc
mov
dec
aam
jecxz
loop
stos
nop
outsl
mov
loope
cmpsl
aam
insb
xchg
or
int
notb
sub
sar
loopne
fildl
cmp
and
mov
xorb
out
dec
out
inc
stos
jb
das
movsb
leave
data16
jmp
pop
add
mov
or
adc
inc
cmpsl
xchg
or
xchg
sub
push
push
xor
sar
scas
fidivs
ds
push
cmp
int3
stos
xchg
loope
jl
mov
lods
int
jbe
jns
scas
aaa
pop
cmp
xor
js
popa
adc
fbld
mov
stos
xor
sbb
scas
or
jns
push
cmp
add
and
test
push
inc
stc
cmp
xchg
outsb
push
daa
sub
or
sbb
sub
clc
mov
push
imull
cli
jl
jmp
jb
cwtl
jecxz
jl
test
xchg
lock
test
cmp
pushf
jge
shll
aam
mov
into
bound
pusha
dec
cltd
movsb
cmp
cmpb
in
and
jge
clc
addr16
rol
pushf
adc
sub
adc
cmp
popa
rorb
ds
call
xor
xor
adc
mov
mov
fsubrs
pushf
inc
dec
ja
pop
aas
in
push
mov
pop
pop
mov
call
lahf
movsl
jmp
jb
adc
insb
nop
cmpsl
xchg
xchg
lods
xchg
xchg
ss
jge
inc
cs
hlt
cltd
add
sbb
icebp
fmul
pop
mov
cmc
fwait
jns
xchg
popf
push
xor
xchg
shl
jae
push
inc
mov
in
aaa
popf
mov
test
inc
push
cmp
sbb
movb
sti
daa
testb
test
adc
xor
push
adc
dec
sbb
mov
mov
xchg
aaa
inc
inc
xchg
lret
mov
push
pushf
addr16
icebp
sbbl
jno
mov
ss
xchg
scas
xor
call
fdivrs
pop
or
cld
lahf
icebp
gs
mov
push
test
sbb
adc
adc
adc
xchg
jp
push
sub
sbb
mov
jno
lea
sbb
lea
push
js
fstpt
mov
add
mov
xchg
sub
cmpsl
jle
rorl
jg
aaa
xchg
aam
adc
and
ljmp
cltd
jnp
jl
add
mov
pop
mov
leave
push
ret
xchg
clc
pushf
das
movsb
loop
and
test
push
mov
movsb
rorb
xchg
dec
icebp
mov
inc
rcrb
and
shrb
inc
test
pusha
add
nop
cmp
add
aas
enter
faddl
loopne
and
mov
sub
aaa
lds
lret
inc
rorb
fnstsw
push
xor
outsl
add
or
adc
jp
push
fldcw
pop
fwait
add
mov
mov
je
mov
cmp
test
cmp
push
and
rcr
fisubl
mov
mov
sub
hlt
imul
xor
fisttpl
sarl
sub
fstpt
test
xor
enter
rorb
test
out
subl
and
xchg
mov
pop
mov
lahf
and
es
add
mov
movsb
out
into
inc
js
mov
outsb
ret
in
in
adc
movsl
and
or
popf
cmp
cmc
inc
jb
inc
gs
ljmp
subb
cltd
clc
inc
sbb
cmovge
pop
iret
out
int3
lods
dec
xchg
rolb
push
add
inc
cltd
fld
mov
orb
loopne
sahf
inc
shl
fcomps
inc
sbb
push
lahf
ret
xor
push
sahf
rorl
mov
mov
outsl
jg
hlt
fisttpll
pop
notb
fdivrl
jge
and
rorl
outsl
mov
imul
iret
clc
imul
ss
rcrb
jge
xchg
mov
ljmp
mov
mov
hlt
and
ss
cmp
inc
adc
or
leave
sbb
pusha
push
ficoms
cld
bound
lcall
in
push
inc
mov
mov
test
clc
mov
int
mov
cwtl
loopne
pushf
scas
rolb
or
mov
into
xor
add
lock
add
pop
ss
jbe
mov
jns
fdiv
fildll
fsubrs
mov
cmp
xor
cs
xor
movsb
outsb
cmp
adc
jmp
subb
lea
mov
push
lods
sahf
pop
xor
pop
lret
iret
xchg
popw
mov
test
jno
adc
adc
cld
mov
fnstcw
movl
or
insb
inc
xor
movsb
fstpl
inc
cmc
cmpsl
lods
arpl
bound
mov
sub
test
or
push
mov
sar
shll
sahf
adc
mov
sbb
lcall
fsubrl
repnz
call
or
xchg
in
and
xor
jp
insl
or
xchg
push
cs
ja
push
jo,pt
xchg
sub
cmp
jle
ret
rcr
adc
and
mov
xor
sub
xchg
add
arpl
movl
xchg
mov
xchg
xchg
mov
aaa
int3
jnp
or
orb
push
aad
or
js
or
sbb
xchg
adc
mov
insl
jle
mov
addb
cmp
sbb
push
mov
js
cs
xor
cli
jge
scas
test
ds
popf
jmp
jg
mov
add
sbb
pop
inc
xor
iret
movsl
sub
cmp
jge
jecxz
ds
fucomi
mov
fmuls
out
mulb
jmp
jl
mov
jg
add
xchg
movsb
lds
fisttps
pop
test
jp
jge
fildl
inc
cs
test
pusha
jge
lds
mov
sub
push
popf
inc
jg
mov
push
cmp
and
mov
push
xor
xchg
dec
push
dec
pop
push
xchg
loope
and
mov
adcb
jnp
adc
stos
jle
cmp
bound
outsl
sarb
pop
in
xchg
outsl
call
mov
adc
in
inc
jno
bound
dec
pop
inc
xor
mov
insb
outsl
bnd
stc
mov
mov
mov
stos
push
popa
subl
enter
dec
outsl
fsubs
loopne
sar
fdivrs
jnp
mov
pop
notb
inc
sub
push
cmp
xor
xchg
cmp
xor
add
iret
push
cmpb
xchg
shll
or
movsl
fcoms
sti
insl
jg
js
aaa
aaa
es
adc
lds
out
mov
mov
xchg
dec
adc
xchg
cmp
or
inc
dec
ret
aaa
clc
insl
shlb
xlat
jnp
testb
dec
mov
movsl
mov
sub
xchg
pusha
push
fmull
rcr
xchg
test
rcrb
mov
fldt
sub
mov
fwait
dec
mov
ljmp
xor
cmpsb
fnstenv
jb
out
jg
cmp
cmp
mov
inc
dec
push
push
mov
mov
sahf
jae
jo
jp
push
das
push
adc
imul
loopne
pop
cmp
mov
dec
out
or
js
or
test
mov
loope
pushl
pop
sub
mov
outsl
adcl
data16
movsb
cmpsb
lods
mov
sbbb
push
jns
sub
xchg
sahf
xchg
or
jecxz
mov
or
jge
cld
jmp
push
xor
cmp
insb
andb
popa
call
sti
push
xchg
push
call
repz
sub
mov
xor
push
push
pop
cmc
icebp
cmp
xchg
sti
xor
std
xchg
dec
popa
push
mov
xchg
sbb
and
lret
and
pop
jp
adc
popf
sahf
out
xor
cltd
incb
pop
sub
hlt
addr16
mov
insl
add
cmp
daa
mov
dec
lods
push
ljmp
mov
xchg
inc
inc
cltd
sbb
mov
pusha
xlat
sahf
scas
inc
cltd
xor
adc
and
push
and
xor
mov
jmp
xor
dec
jecxz
hlt
push
dec
add
in
xchg
xor
mov
icebp
sbb
adc
jo
jb
shl
stos
movhps
stos
lods
jp
stc
aad
lock
repnz
cmp
jb
popf
dec
int
filds
cmc
xor
mov
add
test
push
call
das
push
push
sub
shrl
mov
fcom
adc
stc
xor
fistpl
sbb
mov
xchg
cmp
jae
ds
inc
out
inc
test
mov
adc
pop
jg
push
dec
sar
lret
cmp
sub
lods
adc
ss
call
or
pop
jp
mov
mov
ret
mov
in
jge
cmp
dec
inc
cld
mov
sarl
dec
add
sbb
cmp
xchg
mov
mov
getsec
lcall
jl
sahf
mov
movsb
and
sbb
rcr
cmpsb
clc
sbb
test
ret
pop
jmp
cmp
jg
adc
cmp
cmp
or
xorl
pop
test
aas
jo
or
push
xor
mov
sbb
icebp
stos
mov
pushf
xor
sub
cwtl
shlb
mov
lds
cli
stos
sub
js,pt
cmc
popa
ret
adcb
mov
xchg
inc
arpl
jae
int3
fnstcw
sub
hlt
push
imul
adc
ljmp
popf
loope
sub
ja
out
gs
and
fnstenv
mov
mov
mov
pop
iret
mov
sbb
into
je
pusha
loop
lret
or
mov
call
and
out
push
adc
inc
xchg
test
xchg
cmpsl
dec
loop
cs
jge
rol
aas
push
inc
iret
add
xchg
mov
push
mov
jl
or
test
pop
jmp
sbb
arpl
repz
int3
sar
sub
pop
stc
sbb
out
sarb
or
mov
enter
cli
call
call
xchg
in
add
inc
std
int3
test
xchg
mov
xor
loop
loope
sbbl
fsubr
pop
sbb
push
out
test
xchg
sbb
or
pop
cmpl
inc
jns
lahf
aam
cmp
lods
and
test
outsl
push
and
test
lock
mov
shll
mov
mov
cmc
shrl
bound
lahf
test
push
orb
mov
jecxz
xchg
push
push
pop
or
subl
cmp
test
jge
or
std
fldenv
adc
mov
push
cmc
aaa
xor
dec
cltd
or
shrb
scas
add
inc
mov
jo,pn
dec
xor
inc
or
pop
int3
les
jno
xchg
in
jle
cmp
stos
push
fsts
aas
loop
test
xchg
int3
xor
pop
ret
dec
lret
mov
push
push
mov
and
mov
mov
pop
adc
aam
test
shll
ror
jne
mov
sbb
loopne
pop
or
xor
lea
outsl
lahf
adc
mov
imul
popa
inc
repnz
add
dec
popa
jmp
call
hlt
lods
iret
mov
testb
xchg
test
xor
inc
imul
ret
xchg
adc
sbb
mov
push
mov
dec
xlat
shll
inc
ret
mov
xchg
push
sbb
mov
sbb
repz
jge
jne
xchg
imul
shl
enter
jp
mov
or
mov
in
xor
roll
sbb
and
mov
mov
pusha
xchg
pop
shrb
in
xor
fs
es
je
add
jl
cli
xchg
cmp
mov
add
push
mov
adc
insl
lahf
je
xchg
xchg
stos
pop
cmp
or
divb
rorb
fucomi
inc
xchg
xor
cltd
test
fsts
out
fcomp
je
cmp
nop
cmp
loop
into
mov
mov
test
adc
push
inc
lcall
ret
std
fistpl
mov
cmp
pop
sbb
insl
adc
jp
je
xchg
lods
int
adc
fcmovnu
push
pushf
ss
dec
imul
sub
mov
jbe
jae
gs
stos
nop
xchg
mov
push
popa
mov
sub
sti
les
movsb
mov
jp
ss
push
jb
and
xlat
ds
jge
lret
sub
stos
addr16
int3
aad
arpl
lea
fcmovnb
mov
cmp
int3
mov
sbb
jp
sub
cmp
mov
test
or
dec
jl
into
pop
jae
jmp
mov
xchg
mov
sub
mov
cmp
cs
popa
lock
inc
cld
push
sub
mov
mov
cmc
mov
scas
lods
jecxz
pop
cmc
cwtl
mov
test
jg
cmp
sbb
sbb
or
lods
jns
mov
rol
cltd
adc
stc
jg
pop
lea
xchg
push
pop
and
cmpsb
pop
and
pop
rorl
push
lock
xchg
inc
push
mov
mov
mov
add
aam
adc
lcall
sbb
add
push
jb
and
inc
movsb
mull
movsb
ret
sbb
cmpb
dec
sbb
int
xchg
sbbb
daa
pop
in
mov
ljmp
imul
mov
sub
xor
inc
movsb
ret
jb
push
mov
stos
jae
test
addr16
push
pop
push
ss
fdivs
dec
jno
jnp
cmp
hlt
enter
and
and
push
adcb
ds
ds
mov
repz
stos
imul
add
nop
int
mov
xchg
mov
xchg
cmc
or
pop
or
cmp
inc
jp
lea
mov
int3
loop
rcrb
cld
lret
jbe
or
ljmp
add
mov
outsb
fs
and
test
xorb
cmp
xor
mov
push
mov
sbb
ljmp
jbe
out
shrb
sbb
fcomps
sub
or
test
cli
jo
roll
insb
dec
and
pop
xlat
sub
rorl
cmc
in
cmp
dec
sub
inc
adc
adc
mov
je
xchg
dec
cmpsb
dec
or
pop
add
aas
mov
movsb
adc
mov
stos
or
das
fwait
out
cld
inc
push
push
incb
xchg
or
jns
les
jp
xor
mov
mov
arpl
xchg
xor
rol
mov
cmp
out
pop
loope
jo
pusha
std
xchg
mov
inc
or
cmp
mov
jge
jbe
cmp
leave
lret
jecxz
pushw
add
mov
adc
jl
mov
xor
bound
ds
out
push
push
jnp
aam
stos
mov
jge
mull
add
ficoml
or
iret
arpl
push
in
jg
hlt
test
sub
add
rcrb
dec
xchg
loop
repz
andb
aam
push
sbb
pop
xor
or
pop
enter
add
inc
cmpl
fsubrs
push
xlat
jns
cld
xchg
xor
jno
fcomp
adc
xor
out
fstpt
xlat
scas
loope
xor
data16
aas
rcll
and
shlb
pop
mov
mov
icebp
and
bound
jmp
lods
add
push
xchg
pop
push
inc
inc
and
mov
jge
imul
hlt
cmpl
or
das
outsb
rcrb
mov
or
fidivl
dec
mov
das
loop
lahf
xor
cmp
les
lret
pop
das
cwtl
insb
push
cltd
push
vphsubbw
stc
ss
cltd
cmp
xchg
inc
jb
adc
ret
xor
fildl
pop
stc
inc
push
sub
jge
shll
mov
add
test
jb
inc
addr16
pop
lods
push
lcall
dec
pusha
jo
sub
mov
pop
sub
lods
gs
sbb
adc
movsb
cmp
cwtl
cmc
and
adc
pop
cmpsb
rorl
lods
jne
ds
shrb
dec
subl
data16
leave
sbb
lret
mov
mov
shll
cld
cmpl
in
fisubs
jl
pushf
push
js
push
inc
mov
dec
mov
add
ljmp
push
push
mov
adc
cmp
xor
icebp
adc
movsl
or
sub
push
xor
mov
in
adc
mov
insb
pusha
mov
cltd
dec
sub
insl
cli
jo
xor
int
add
dec
xchg
ss
stos
push
imul
arpl
cmp
sbb
mov
push
jo
add
mov
mov
cwtl
push
xchg
jle
mov
and
or
push
add
push
repnz
std
mov
or
xor
imul
repz
js
iret
lret
test
das
and
xchg
lock
or
repnz
dec
jp
lret
or
adc
test
mov
ret
int3
daa
jecxz
popf
pop
bound
mov
push
fnstsw
insb
orl
stos
out
movsb
jg
mov
stos
js
adc
movsl
les
pop
pop
cmpb
repnz
call
mov
repnz
pop
jmp
scas
xchg
out
movsl
cmp
fbld
mov
fs
insl
mov
mov
mov
and
cld
and
mov
repnz
testb
dec
and
pop
sbb
loopne
xor
sub
das
jns
adc
je
mov
adc
jle
imul
xchg
adc
jne
insl
jecxz
fnstsw
mov
xchg
orb
mov
shrb
pop
fimuls
popa
mov
mov
fbld
mov
lahf
imul
sbb
adc
adc
leave
mov
and
dec
jb
mov
push
inc
mov
mulb
and
jns
loopne
mov
and
daa
pushf
push
enter
push
inc
pop
insb
cli
scas
shrb
movsl
xor
sahf
out
dec
das
popa
icebp
rolb
insl
or
fldt
add
jle
adc
cmp
fsubrl
dec
mov
lret
sub
xor
aaa
mov
loop
xchg
push
lret
lahf
cmp
jp
jge
dec
or
dec
mov
popf
and
push
out
pop
mov
adc
jns
divb
sbb
and
or
inc
and
pop
daa
aad
mov
sub
adc
lods
jg
rolb
push
xlat
pop
mov
pop
sbb
xchg
mov
add
and
jnp
sarl
call
decl
cmp
sbb
xor
insl
cltd
xor
pusha
jbe
mov
mov
dec
inc
cmp
mov
movsl
push
dec
mov
xlat
jecxz
jle
aam
cmp
pop
jge
jg
and
mov
cwtl
xchg
rcll
movsb
and
enter
cmp
mov
shrl
push
shlb
popa
jne
pop
jg
push
mov
ljmp
pop
xchg
aad
jge
outsb
sub
repnz
mov
popa
pushf
xor
movsl
sbb
xchg
mov
jns
xor
sub
adc
mov
lods
mov
sub
sahf
inc
sub
and
icebp
dec
jge
shrb
pmaxub
push
outsb
mov
jp
mov
iret
inc
jl
pop
dec
pushf
xchg
push
xchg
loope
jbe
cmp
adc
shrb
jbe
insl
fcoms
and
testl
fistl
mov
mov
mov
pop
push
into
push
in
iret
or
ret
pop
cltd
repnz
outsb
das
dec
xchg
adc
xor
push
orb
jb
fistpl
das
mov
stos
fsubl
xchg
cmc
loope
div
xchg
aam
lcall
inc
mov
test
out
push
xorl
call
ja
mov
adc
out
xor
cwtl
pusha
das
and
call
fimull
xchg
rcll
jno
sbbl
mov
adc
mov
adc
cmpsl
and
dec
call
mov
stos
adc
xor
outsl
add
sbb
lret
mov
push
in
stc
daa
mov
push
inc
and
and
sub
and
and
sti
cmp
or
call
test
hlt
dec
push
xchg
inc
jbe
sub
movsb
call
ss
lock
adc
mov
dec
das
push
cmc
jae
mov
cltd
sti
js
repz
out
arpl
cli
call
cmp
cs
or
xor
adc
pop
call
stos
pop
and
sbb
das
hlt
mov
call
test
add
test
mov
cli
mov
leave
ud1
cltd
mov
xor
xor
dec
jle
sbb
sub
xchg
mov
cli
repz
repz
jmp
out
jmp
adc
movsl
cmp
xchg
xchg
pop
aaa
pslld
std
loope
sub
das
adc
ja
pop
pop
loope
lds
pop
cmp
sbb
test
gs
xchg
aas
sub
das
pop
adc
stc
sub
out
notb
call
enter
adc
cmc
adc
movsb
sbb
push
and
es
sub
iret
add
lock
xchg
maskmovq
fisttpl
dec
addb
xchg
es
cmp
xchg
fs
loope
call
fcomi
ror
clc
sti
pop
cmpsb
xchg
add
scas
imulb
adc
push
movsl
cmp
test
fldt
ret
mov
dec
clc
mov
adc
pop
imul
and
push
lods
in
xor
cmp
jg
jbe
lds
dec
jo
sub
and
jne
es
xor
mov
xchg
push
fcomi
call
xchg
inc
or
adc
add
mov
jne
jnp
and
icebp
cmc
scas
nop
xchg
push
repnz
sarb
fwait
jne
xor
jecxz
mov
stos
jmp
lods
mov
in
cmp
mov
jae
cmp
and
inc
frstor
pop
ficomps
mov
std
pop
adc
mov
mov
das
and
sub
mov
rcrb
into
mov
inc
adcl
imul
jge
lock
test
and
push
stc
call
inc
xchg
rclb
shrl
popf
imul
in
clc
cmp
adc
sub
mov
les
and
dec
lahf
cmp
ret
addr16
js
icebp
jnp
and
inc
adc
fwait
xlat
and
adc
dec
cld
lcall
inc
call
lock
rep
and
shrb
in
cli
push
pop
std
repz
xchg
xor
and
xlat
sub
pop
sbb
jecxz
dec
xor
adc
ss
lods
scas
mov
or
xchg
fcoms
jecxz
pop
jne
call
fcoms
jmp
popf
inc
hlt
inc
jo
sub
jns
cmp
lock
sub
adc
shll
fisttpll
ret
scas
jnp
and
js
push
xor
stc
and
loop
and
inc
roll
mov
push
xor
adc
pop
cmpsl
pop
out
scas
int
not
xchg
xor
mov
hlt
int3
pop
sbb
push
shrb
sub
cmp
call
xor
orl
jp
cmpsb
jl
inc
rcr
lods
and
pop
mov
imull
loop
mov
cmp
aas
dec
stc
mov
jae
clc
and
movsb
stos
push
arpl
push
js
mov
push
jnp
lods
or
mov
inc
ret
es
out
push
sub
rcrb
aas
int3
jmp
or
fwait
push
push
ljmp
fcmove
cmp
or
and
inc
fcmovbe
cmp
adc
add
nop
lods
sub
lods
or
push
cmc
sbb
out
shrl
jl
mov
jle
inc
mov
fidivrs
dec
push
loopew
movsb
clc
and
nop
bound
cld
jg
lahf
int3
sbb
mov
cltd
fwait
xor
les
add
xchg
xchg
inc
inc
repz
inc
icebp
inc
mov
in
xchg
jmp
arpl
cld
ja
rcr
daa
daa
mov
repnz
mov
adcb
sbb
loopne
cltd
pushf
fldenv
ds
popa
gs
mov
cs
cmp
insb
cs
test
push
lds
xchg
pop
sbb
inc
pop
xor
xor
xchg
push
mov
inc
popa
fisttpl
ja
rcr
jecxz
mov
xchg
out
clc
daa
out
xor
aas
ja
add
loopne,pn
mull
cmp
icebp
gs
cmp
stos
push
sub
jecxz
push
mov
inc
xorb
push
or
adc
add
dec
out
inc
sahf
enter
or
push
xor
jl
data16
mov
inc
loop
pusha
mov
push
popa
jmp
fldenv
pop
jmp
jbe
inc
imul
pop
adc
push
addr16
jp
rcrb
and
push
icebp
cmc
addr16
xchg
and
idivl
dec
sub
pop
pop
mov
xchg
pop
rol
fisttpl
stc
bound
pusha
cmp
inc
arpl
jecxz
mov
int3
fldenv
repnz
shlb
fwait
jb
jns
in
daa
xchg
aam
push
sub
mov
and
add
xor
dec
call
add
xlat
lret
sub
test
ret
lods
mov
xor
jmp
lcall
out
lcall
pop
imul
adc
pop
lods
pusha
xchg
jmp
lea
imul
pop
xor
cmp
jbe
mov
pop
add
cmp
push
fistps
cltd
add
pop
int
stos
xchg
int3
and
adc
int
pop
push
push
shrb
rorl
test
stos
cmp
mov
jo
dec
jl
pop
into
loop
dec
in
lods
push
and
cmp
cmp
jns
xchg
pop
or
or
popa
les
pop
pop
jmp
insl
popf
inc
sbb
pop
cli
scas
add
jle
outsb
lret
inc
daa
scas
pusha
cmp
mov
jo
ss
mov
mov
outsb
inc
pop
push
inc
dec
fistps
jge
mov
mov
data16
mov
cmp
clc
into
adc
mov
mov
mov
pop
jb
iret
cmovle
bound
fdivrs
add
scas
repz
xchg
inc
test
mov
push
leave
adc
pavgb
jo
bnd
sub
mov
leave
pop
imul
jmp
adc
pusha
mov
xsave
ds
or
les
add
leave
mov
cmp
jp
and
shr
inc
mov
enter
aas
inc
pop
mov
test
iret
cli
stos
sahf
sub
enter
icebp
jp
out
ds
jecxz
shr
push
inc
mov
shll
sbb
push
push
mov
pop
push
imul
xchg
xchg
inc
ljmp
ljmp
ja
cmp
ljmp
sbb
ss
stos
push
not
rcll
out
cmpsb
imul
push
dec
adc
addr16
sub
push
cmc
jns
jp
outsb
cwtl
cmp
ljmp
inc
out
test
or
lret
inc
cmpsb
pop
jge
les
push
ret
cli
loop
push
mov
int3
pop
mov
jg
es
or
mov
push
or
mov
or
aas
mov
out
aaa
xor
push
xchg
into
sbb
daa
cmpsl
and
cmpsl
mov
pop
xchg
xchg
or
aad
jg
pusha
push
mov
mov
jp
mov
inc
xchg
imul
test
xchg
fcompp
ficompl
pop
push
inc
and
test
pextrw
inc
push
push
xchg
lret
cmp
cltd
inc
inc
cmp
push
pop
sub
mov
xchg
and
ret
mov
enter
xlat
icebp
test
mov
or
rcrb
je
fildll
mov
mov
push
leave
leave
mov
and
lcall
insb
adc
testl
das
mov
sub
xchg
sub
xorb
jle
mov
jne
or
stc
frstor
push
stos
mov
xchg
arpl
enter
inc
sub
inc
into
loope
mov
mov
or
rorl
lret
add
ret
in
or
les
mov
push
fisubrl
pop
ficompl
or
cmp
jl
sub
outsb
xor
adc
data16
jg
fdiv
test
mov
out
xlat
mov
testl
stc
xcrypt-ecb
cmpsl
mov
pop
mov
lea
je
movl
inc
mov
mov
data16
push
and
gs
bound
xchg
inc
in
xchg
mull
lds
and
cmpsb
movsl
insb
pop
xchg
cmp
das
int3
and
fistpll
xor
bsr
cmc
clc
pop
push
adc
stos
addb
sub
xchg
in
jo
leave
mov
mov
in
xchg
and
decl
test
dec
sub
aaa
add
mov
int
sbb
loope
outsb
repz
subl
cmp
mov
cmp
popf
fs
pop
jmp
or
cmp
aaa
and
xchg
pop
lods
and
mov
xor
pop
jno
mov
push
xlat
es
lahf
mov
add
ljmp
xor
lods
push
mov
xchg
aas
ja
or
test
das
push
pop
lds
sbb
stos
dec
add
adc
mov
cmp
das
lds
ds
push
sub
jmp
daa
cmp
mov
xchg
rcrl
sub
adc
sti
push
or
cmpsl
dec
divb
pop
cmp
mov
stc
cmpsl
mov
or
shll
or
inc
jne
stos
lods
hlt
mov
test
push
sbb
pushf
add
cs
mov
inc
pop
mov
lods
jns
ljmp
iret
cmc
mov
push
mov
int
jg
cmc
leave
mov
lret
jg
lahf
dec
adc
cmp
xchg
mov
sbb
xchg
outsb
or
sub
sub
lods
stc
xor
out
shr
dec
sub
mov
cld
dec
and
data16
aas
insb
cltd
hlt
inc
ds
imul
negb
cltd
rcll
call
out
sub
sti
mov
add
xor
pop
repz
gs
orl
inc
inc
push
jb
imul
mov
mov
mov
inc
dec
popw
in
imul
outsl
adc
xchg
jae
jecxz
and
loopne
js
cmpsl
inc
pop
shll
dec
xor
test
push
sub
shll
xchg
test
adc
mov
sbb
ljmp
sub
mov
cmp
aaa
mov
fst
inc
sbbl
addr16
xor
out
jmp
push
bound
xor
push
movsl
and
adc
insb
cli
xor
je
ja
sar
cwtl
push
aad
lods
adc
and
cmp
mov
add
jmp
sub
gs
dec
jns
xor
bound
inc
test
jl
lcall
dec
and
cmp
mov
shrb
dec
add
jno
push
js
or
pop
inc
sbb
pop
sbb
add
cmpsl
mov
xor
fisubrl
sbb
fmull
push
sub
mov
adc
sti
lcall
xchg
pop
popa
inc
cld
xor
out
dec
les
push
leave
pop
neg
xchg
pop
mov
je
sbb
loope
fdiv
stc
adc
mov
lods
mov
cmp
push
std
push
mov
cmp
mov
js
rcrl
lret
loope
sub
lea
add
sbb
xchg
or
popl
sub
sti
cmp
popf
jae
rcr
outsl
cmp
add
movsb
sub
jno
add
inc
call
jecxz
and
add
pop
push
fcompl
dec
jge
test
jnp
divb
fisubrl
lea
push
jo
call
mov
jle
inc
movsl
ja
mov
mov
pop
das
cmp
mov
sub
xchg
test
or
shlb
and
xor
ret
lods
push
xorl
scas
cld
cmp
outsl
enter
sahf
fstpt
sbb
xchg
xorb
push
jne
das
or
push
jb
cwtl
mov
jns
aam
dec
adc
xor
or
lods
aaa
adc
js
pop
das
dec
xchg
push
mov
pop
push
xchg
push
and
xchg
sbb
xchg
mov
pop
fs
xor
ficoms
push
pavgb
mov
mull
icebp
mov
repz
xorb
imul
aaa
jo
popf
xchg
imul
cltd
ljmp
and
mov
add
mov
adc
mov
mov
pop
and
test
push
dec
das
seta
out
xor
lock
sti
cmpsl
aad
push
hlt
or
push
test
pop
out
fchs
mov
sbb
xchg
and
ffree
stos
sub
xchg
arpl
loope
cltd
jbe
sub
mov
cmp
xlat
fistl
jns
or
inc
cmp
loopne
jbe
test
pop
adc
test
push
cmpsl
sub
sbb
xor
sarl
adc
addr16
xor
mov
and
shl
mov
xchg
add
pop
outsl
xchg
ficomps
outsb
xor
push
cmc
mov
out
ja
mov
mov
movb
arpl
push
xchg
and
and
movsb
xchg
je,pn
mov
mov
xor
dec
ret
sti
insb
xor
fiaddl
sbb
aad
mov
in
dec
pop
in
mov
ja
sub
sbb
or
movsl
jge
in
cmp
jbe
cltd
mov
inc
lea
pop
popf
inc
xor
test
mov
dec
test
hlt
jmp
mov
xchg
push
inc
bnd
ljmp
jmp
cs
xlat
lds
mov
inc
mov
xchg
shll
in
test
pop
sahf
iret
mov
int
pusha
xor
arpl
sarl
test
stc
lods
gs
daa
inc
test
xchg
imul
hlt
and
inc
daa
xor
push
adc
dec
cmc
and
mov
jmp
dec
repz
sub
sbb
pop
sahf
iret
mov
out
xor
jg
xchg
jge
xchg
pop
mov
add
xor
add
fwait
pop
test
fistl
leave
add
dec
or
stc
bound
jg
mov
inc
leave
add
daa
incl
mov
jns
clc
pushf
lret
add
hlt
es
aaa
xchg
cmp
inc
repz
lahf
fsubs
shll
mov
imul
xor
loope
aas
and
dec
or
xchg
xlat
out
stos
lods
in
adc
and
shll
sub
push
sarb
mov
push
jmp
rcrl
rorl
shll
sub
push
sarb
mov
push
lret
mov
aas
ret
sbb
xor
sub
sarb
pop
add
mov
xor
cmpsl
in
insl
mov
inc
push
ret
inc
push
jle
and
repnz
jecxz
xchg
xchg
test
xchg
dec
or
cmpsl
xchg
add
cmp
xchg
int
adc
imull
in
adc
icebp
mov
sub
xor
inc
fs
cmp
icebp
or
adc
imul
mov
cmp
outsl
repz
jb
out
jl
push
sti
mov
push
xor
push
leave
mov
stc
jmp
pop
xchg
pushf
cltd
adcb
repnz
sbb
inc
repnz
into
cmpl
and
jno
cwtl
cltd
push
cld
mov
push
xchg
lock
sbb
imul
outsb
in
cli
and
pop
xchg
fdivrs
push
imul
in
xor
dec
into
outsb
or
push
jecxz
xor
ds
or
xor
adc
inc
pop
jg
iret
mov
and
dec
adc
sti
xchg
icebp
popf
insb
cmp
adc
jns
mov
push
or
inc
jg
lcall
xorb
push
cmp
adc
xchg
negl
fsub
adc
mov
bound
repz
cmpb
fcoms
push
jle
ds
xchg
cmp
sbb
xchg
and
notb
clc
xor
jg
mov
cld
movsb
mov
into
repz
inc
divb
iret
test
dec
push
or
xor
ficoml
push
jle
mov
jg
test
or
das
out
or
inc
inc
adc
cmp
mov
mov
add
pop
repz
icebp
push
sub
inc
cmpsb
push
xor
xlat
push
cmp
rcll
stc
rol
push
mov
inc
sub
aaa
dec
sub
mov
mov
cwtl
test
push
adc
xchg
xor
loop
out
sbb
sbb
repz
jae
push
inc
sub
popa
movsb
jg
sbb
arpl
xchg
pushf
pop
xor
outsb
and
mov
rcrl
push
and
decb
mov
sbbl
xor
lcall
mov
and
pushf
jmp
lahf
sbb
mov
xchg
hlt
dec
inc
insl
ret
stc
rcll
lods
movsb
outsb
mov
inc
or
into
scas
and
pusha
xchg
ja
stos
in
pop
aam
push
das
leave
aas
cmp
lods
insb
mov
xor
mov
or
mov
ret
xor
jbe
shll
adc
push
adcl
or
roll
inc
fistps
adc
push
inc
and
or
mov
pop
mov
adc
xor
pop
and
mov
icebp
addb
pusha
sbb
fstpl
mov
aad
negb
push
nop
jns
loop
mov
dec
lods
and
mov
jno
jg
imul
or
ljmp
mov
mov
dec
or
mov
or
stos
cmp
and
push
mov
and
out
push
rorl
inc
pushf
gs
ret
insb
xchg
mov
mov
ss
fwait
mov
pop
sbb
ss
rorl
or
orl
sub
lods
mov
dec
mov
stos
rcrb
sti
sbb
add
jne
jnp
daa
cmpl
sbb
jmp
cmp
push
lcall
adcl
lock
fiadds
aad
and
ret
aad
jg
cmp
xchg
pop
lret
xlat
movsl
outsl
cmp
das
mov
mov
xorl
enter
push
xor
hlt
ret
push
loopne
mov
mov
sbb
mov
add
sarl
aas
loope
scas
inc
pop
leave
stos
in
das
pop
cwtl
les
enter
xor
adc
gs
lods
fstps
sub
jae
shlb
in
pusha
adc
lock
rorb
dec
cmp
fxch
mov
daa
sub
xchg
test
or
std
mov
cmp
rol
xor
mov
mov
sbb
sub
sbb
cltd
dec
in
mov
mov
in
xchg
push
repnz
or
xor
je
ljmp
mov
jmp
mov
mov
scas
inc
xor
xlat
xchg
imul
in
push
sub
imul
sbb
jge
scas
and
lahf
xlat
dec
pop
sti
add
add
inc
xchg
rclb
aas
cmp
dec
pop
dec
pop
in
inc
jb
aad
icebp
andl
push
dec
vcvtsi2sdl
rcl
inc
cmpsl
mov
inc
and
rclb
notl
arpl
scas
jbe
mov
dec
mov
insb
push
sub
mov
addl
int
int
lds
ss
sahf
mov
xor
mov
inc
lcall
adc
sti
jl
rorl
insl
shll
pop
adcl
push
pushf
jmp
in
mov
in
rcrb
xor
ss
xor
mov
orb
scas
xchg
cmp
int3
ljmp
test
in
push
jnp
lea
psubq
inc
xor
sub
xchg
ljmp
xchg
sub
push
imul
lea
mov
call
adc
xlat
inc
push
scas
push
pop
push
mov
sub
cmp
jg
add
mov
aad
xlat
dec
push
rcrl
sbb
popa
xlat
arpl
jnp
cmc
cmp
jae
mov
ja
cmp
mov
pop
aaa
push
data16
fiaddl
dec
aas
and
lods
lods
test
jno
xchg
inc
xchg
pop
mov
inc
in
scas
es
sub
add
orl
leave
cmp
jg
imul
fnsave
mov
cmp
popf
and
dec
and
lds
pop
sbb
cmp
mov
ja
xchg
cmp
mov
cmp
dec
scas
xchg
cmpsb
daa
mov
fiaddl
xor
lods
rcll
xchg
stc
sub
sbb
jge
cmp
notl
out
sbb
xchg
jae
in
push
aas
cmp
xchg
cmp
loope
xchg
push
mov
in
rcll
push
insb
mov
pop
clc
push
jecxz
in
fadds
jne
imul
pushf
arpl
push
nop
dec
ljmp
insl
test
add
loopne
daa
sbb
dec
data16
dec
sub
stos
push
xchg
aam
inc
xor
jmp
mov
lahf
mov
sub
sbb
and
cltd
jne
mov
mov
adc
lcall
insb
mov
mov
or
das
jle
or
leave
inc
sub
test
nop
add
insl
push
lods
call
mov
stos
orb
or
inc
pushl
or
iret
mov
ret
ljmp
push
inc
pop
call
pop
call
cmp
adc
jp
inc
int
mov
fwait
loop
imul
mov
sub
xchg
add
movsl
pop
dec
stos
jmp
sbb
hlt
lods
cmp
mov
nop
adc
mov
cmp
jecxz
les
js
inc
push
push
fs
popf
or
and
jo
popa
inc
mov
cwtl
add
fnstsw
pushf
mov
adc
iret
aaa
push
jno
sub
ret
in
sbb
sbb
test
clc
mov
jp
cmp
pop
pushf
in
or
mov
lods
mov
sbb
cli
in
inc
fstps
mov
mov
mov
and
pop
sbb
lods
push
pop
sub
pusha
or
mov
repz
xor
sti
ja
inc
pop
insb
mov
adc
fstpt
cltd
addb
fsub
rclb
cld
jmp
jmp
mov
decl
dec
add
pop
lcall
subl
push
mov
jo
test
ret
push
mov
mov
dec
and
lea
pop
sub
outsb
mov
mov
repz
pop
stos
cmp
sub
outsl
aad
adc
es
aad
add
hlt
es
lods
iret
pop
jb
aad
aaa
add
cli
jae
mov
xchg
push
ret
les
dec
sub
dec
pop
or
cmp
orb
outsl
fnstcw
xor
sub
mov
sub
movaps
fistl
sti
lret
sti
imul
lret
pop
arpl
xchg
fldl
jne
mov
aaa
std
inc
fisttpll
fwait
loope
cmpsb
inc
adc
mov
jge
or
pop
movsl
or
xor
in
dec
add
or
in
aad
sub
sub
fcomps
add
iret
mov
sub
adc
inc
and
mov
dec
adc
cld
mov
je
xchg
jo
out
or
mov
aam
or
cmp
movsl
dec
insl
insl
pop
push
jp
mov
pop
push
out
xlat
adc
in
xchg
outsb
mov
jnp
lods
jmp
imul
lret
lcall
sbb
mov
mul
pop
xchg
fbstp
xchg
dec
mov
aad
dec
sahf
mov
jb
dec
cmp
es
jb
fwait
or
addr16
adc
adc
sarl
orb
and
fs
sub
in
push
lock
fsubrs
icebp
sub
add
jmp
jno
add
mov
xor
hlt
jle
jae
adc
in
adc
sbb
xchg
mov
mov
scas
mov
pop
and
insl
jl
xchg
arpl
aad
dec
mov
sub
xor
push
aam
push
and
adc
push
inc
cmpsb
or
sub
ret
mov
inc
mov
fbld
outsl
mov
mov
sbb
ja
sbbb
popf
jns
sar
pop
adc
shll
mov
fisubrl
loope
jmp
and
arpl
push
div
movl
cltd
add
insb
sub
inc
and
xor
mov
les
lock
xchg
mov
mov
or
cmp
push
inc
data16
push
fistpl
pop
push
xchg
dec
fwait
sbb
mov
roll
push
jmp
jge
sub
fldcw
pushf
imul
push
divl
mov
rcrb
xchg
loope
sub
jno
add
adc
mov
xchg
pop
int
pop
xor
jbe
push
aaa
sub
repz
int3
xchg
mov
mov
jno
cmp
mov
push
push
adc
dec
add
adcb
xchg
or
rcrb
outsl
out
jne
dec
es
jno
fnstsw
inc
push
xchg
mov
mov
cmpsl
pop
sbb
loop
popa
sub
pop
mov
dec
xlat
xchg
lea
mov
adc
jecxz
mov
mov
and
mov
xor
mov
dec
cmpsl
pop
inc
cmp
cmovle
sbb
mov
pushf
or
repnz
pusha
jbe
push
arpl
fwait
mov
mov
push
mov
movsb
or
cmc
insl
add
icebp
xchg
enter
andl
movsl
lods
dec
push
roll
in
sub
out
mov
push
mov
add
jns
pushf
loope
sub
sahf
rclb
cmp
fsubs
iret
cmp
rorl
push
push
jle
arpl
iret
nop
jae
xchg
jno
repz
sbb
scas
sub
xor
mov
pop
cli
arpl
jns
movsl
cmpsb
push
sub
xchg
sbb
outsb
rcl
in
and
scas
repnz
cld
sbb
jbe
xchg
add
mov
cwtl
push
stc
jmp
xchg
jb
mov
jb
mov
in
jle
sti
fldt
mull
push
mov
test
or
adc
pushf
mov
jmp
jbe
push
xchg
adc
into
jno
or
pushf
inc
jbe
mov
mov
push
pusha
mov
outsl
mov
fisttps
scas
clc
dec
adc
inc
stos
fsub
std
ds
icebp
push
dec
js,pn
xor
daa
mov
push
stc
insb
movsb
sbb
pop
mov
out
imul
cmp
mov
je
packuswb
dec
sub
movsl
sar
cmp
or
xor
test
stos
test
cmp
inc
addr16
subl
jae
imul
pop
xchg
xor
mov
out
outsb
mov
repnz
sbb
psadbw
inc
and
push
jno
add
out
jp
test
sub
dec
inc
int
mov
shl
dec
inc
cmc
andb
cltd
sahf
adc
push
and
dec
lcall
out
xor
cld
mov
lahf
xchg
fiadds
jae
or
in
dec
cmpsb
or
mov
jmp
aad
push
test
push
addb
mov
or
xorb
stos
int
adc
jg
adc
test
mov
shrl
push
movsb
aam
andl
in
inc
inc
xor
jbe
ljmp
addl
xor
in
push
int3
add
push
test
xor
mov
lock
inc
jecxz
insl
mov
add
add
xlat
mov
sahf
or
jle
sbb
sub
in
mov
push
mov
fisttpl
jbe
fidivl
pop
pop
sub
adc
test
mov
lgs
mov
mov
mov
cmp
mov
mov
xchg
xchg
mov
mov
and
stos
aam
mov
xchg
popa
dec
xchg
jo
pop
stos
repnz
icebp
outsb
pop
cmp
dec
or
pop
lods
add
jp
dec
jbe
inc
es
sub
cmp
fmul
xlat
jl
rorl
nop
push
insl
addb
jl
imul
cs
mov
movsl
adc
in
in
push
int3
inc
rep
mov
enter
aad
arpl
dec
xchg
js
aas
pop
std
lock
inc
in
jne
jae
xchg
out
push
mov
xchg
sub
cld
cmp
xchg
or
fstpl
in
or
pusha
lret
jp
fwait
cwtl
je
sbb
int3
popf
cmp
mov
xchg
stos
jnp
xor
mov
sbb
xchg
or
call
xchg
pop
mov
repnz
inc
xchg
imul
adc
addr16
xchg
ljmp
jae
rorb
loopne
arpl
add
rcrb
outsl
in
in
jle
mov
addr16
mov
cmp
test
push
mov
shrl
loopne
push
mov
loopne
jle
and
pusha
or
mov
xchg
xchg
jmp
pop
jecxz
and
xor
cmp
test
rcl
xlat
lret
test
test
loope
adc
adc
ss
add
adc
iret
pushf
mov
addb
icebp
nop
jb
xor
push
inc
das
insl
jns
add
or
xchg
sub
xor
aam
aam
xor
push
add
iret
cs
pop
enter
test
std
push
leave
pop
xor
sti
push
sub
scas
add
ss
dec
add
dec
pop
or
add
gs
adcb
jecxz
insl
sub
or
or
dec
mov
and
sbb
xor
xchg
scas
pop
sbb
ret
jne
mov
xor
push
mov
into
and
mov
test
push
ror
inc
hlt
rcll
inc
iret
testb
sub
jmp
or
clc
shll
push
jg
leave
sahf
pop
mov
xchg
ja
loopne
lods
inc
pop
jle
test
subb
repz
cld
mov
adc
xchg
inc
adc
test
arpl
jmp
cmp
adc
loopne
testb
adc
pushf
je
mov
insb
adc
inc
xor
jne
mov
pop
mov
push
adc
mov
inc
pop
loope
jne
loopne
push
aad
pop
mov
dec
andl
xchg
xor
jo
push
dec
je
in
fsubrl
mov
sub
jno
mov
jns
sahf
sbb
test
shl
jnp
mov
mov
sbb
and
fwait
or
inc
adc
lods
je,pt
in
mov
scas
push
cmp
cmpl
mov
sub
mov
add
cmpsl
adc
call
out
sbb
mov
push
cli
push
sahf
push
inc
pop
test
add
inc
jno
add
jp
dec
mov
adc
scas
ret
movsb
mov
stc
push
sub
sbb
jg
jecxz
repz
test
andb
jmp
ret
dec
dec
int
mov
jns
cmp
daa
cli
in
mov
cmc
mov
stc
lea
int3
mov
mov
cli
xchg
daa
mov
das
enter
jns
out
test
mov
pop
test
pop
fcomps
mov
mov
mov
jge
outsl
mov
jns
sub
and
pop
js
fs
dec
lock
ret
mov
daa
push
movsl
dec
out
sarl
jge
js
cli
subb
int
cld
fisubrl
repnz
sti
jl
lds
pop
stos
imul
mov
lcall
adc
andl
test
jecxz
addr16
and
test
xchg
sub
pop
cmp
iret
xchg
sub
pop
in
mov
aam
pop
in
xorb
jle
jo
mov
dec
xchg
mov
jge
push
push
sub
dec
pop
cmp
in
lods
test
mov
and
sti
adc
sub
enter
ret
ret
imul
sub
pop
in
es
sub
pop
es
setge
inc
mov
mov
jge
pop
bnd
lret
pop
pop
pop
sti
mov
mov
sub
push
xchg
mov
and
lret
test
clc
pop
testl
mov
imul
adc
mov
and
push
pop
pop
outsb
jg
mov
insb
pop
sub
pop
jl
std
and
pop
mov
addr16
data16
rcll
xor
or
jns
xor
out
movsl
sub
jmp
add
push
jl
outsb
jo
dec
xchg
sub
mov
mov
push
into
mov
xorb
shl
or
in
jne
mov
pushf
push
jecxz
into
push
xchg
add
out
in
dec
push
std
les
push
in
daa
imul
mov
pop
xorl
cld
jle
mov
inc
pushf
xor
es
jb
pop
into
dec
pop
sbb
pop
icebp
movaps
mov
int3
jae
mov
std
dec
adc
jge
dec
push
in
and
xchg
dec
push
and
push
sub
fwait
lret
mov
shl
cmp
lahf
xchg
dec
push
into
mov
popf
insl
mov
inc
cli
mov
pop
cmc
push
les
sbb
mov
into
jb
cli
in
sub
mov
int3
or
xlat
or
mov
pusha
cmp
pop
shl
aam
pop
hlt
xchg
jae
ljmp
sub
dec
adc
sahf
ret
lahf
pushf
or
ud1
xchg
mov
fistpll
rol
mov
cmpsb
ljmp
adc
xor
and
je
sbb
lea
sbb
xchg
rolb
es
roll
movsb
dec
xor
test
adc
sti
or
jl
sub
and
pop
out
es
adc
mov
ret
daa
xorb
xchg
ret
cmp
cwtl
fidivrs
add
movsl
daa
out
push
push
and
inc
aas
push
pop
out
scas
adc
xor
sub
or
std
rcr
into
push
xchg
mov
cmp
xchg
inc
addr16
inc
pop
iret
add
jns
xorl
insl
sbb
out
scas
lods
movsb
int
gs
xchg
int
xor
mov
out
inc
cmp
sub
pop
xchg
mov
repnz
cmp
inc
xchg
xchg
mov
xchg
cmpsb
inc
das
lock
dec
js
mov
dec
push
xor
and
adc
mov
stc
imul
testl
mov
dec
shl
mov
insb
sub
and
push
jecxz
inc
push
cmpsb
push
inc
je
push
in
repnz
sbb
divb
sub
hlt
xchg
cltd
adc
addr16
out
jns
dec
lcall
pop
mov
push
or
push
shrl
call
shl
fsubl
adc
mov
sub
clc
call
xor
mov
imul
cmp
push
cmp
jo
cmpsb
xlat
jne
aad
and
in
out
sub
outsl
pop
orl
adc
cs
fcom
int
dec
jo
call
hlt
inc
pop
roll
jle
jecxz
add
mov
arpl
loop
xor
xor
cmpsl
sbb
sub
cmc
pusha
leave
test
push
inc
jne
repz
in
jns
jle
jns
in
mov
stos
popf
daa
adc
mov
cwtl
mov
bound
sub
inc
in
sbb
lea
in
adc
adc
mov
add
into
pusha
jmp
cld
test
mov
insb
xor
in
in
cwtl
mov
xlat
add
in
jne
sbb
xchg
and
mov
pop
mov
dec
push
mov
jb
arpl
lds
or
in
xor
scas
jmp
pop
icebp
or
stc
in
ret
cli
movsl
adc
xchg
notb
mov
fnstsw
pusha
or
daa
popa
sbb
rcrb
loope
push
fcomip
leave
cmp
jge
mov
sbb
jmp
mov
or
fwait
xor
xchg
mov
sbb
jns
sbb
push
ljmp
fnstcw
pop
popf
adc
adc
and
sub
push
repnz
push
fildll
xor
adc
sub
mov
mov
ret
in
xchg
xchg
mov
jl
xor
xor
test
mov
cmp
sub
repz
std
fnstenv
scas
xchg
push
inc
aam
jmp
in
leave
outsb
lret
jne
idivl
sub
cmpsl
dec
in
insb
xor
jmp
mov
mov
xchg
gs
incb
sbb
nop
xor
addr16
cmp
xchg
sti
sbb
clc
sub
repnz
cmp
hlt
in
imul
mov
push
push
cmp
outsl
call
xchg
dec
jb
out
mov
idivl
adc
dec
adc
and
dec
cs
or
in
push
fnsave
jnp
cmpsl
xchg
mov
xor
fsubrs
gs
lods
dec
jns
lods
xor
call
daa
enter
dec
sub
sub
mov
movsl
adc
mov
xlat
adc
fcoml
lret
insb
mov
aas
loope
sbb
stos
inc
mov
jp
imul
lahf
add
inc
adcb
xchg
adc
dec
scas
jns
push
sub
sbb
jae
imul
repnz
mov
icebp
xchg
mov
int
xor
pop
stc
sub
or
or
mov
xchg
int3
xor
xor
jp
sub
and
sbb
xchg
cmp
mov
push
pushf
mov
add
add
add
cmpsl
mov
jecxz
push
shlb
shlb
dec
loopne
in
ret
stos
icebp
push
add
fsubrs
std
lahf
add
lret
outsl
xchg
mov
or
mov
xor
stos
ljmp
rcll
stos
push
push
pop
int
push
adc
lock
arpl
fstpl
test
lods
pop
push
xchg
pop
xor
outsb
aad
fistpll
in
add
cmp
xorb
mov
ffreep
adc
imul
adc
dec
jbe
mov
mov
adc
dec
lretw
shrb
mov
sub
mov
into
icebp
clc
sub
dec
mov
jp
xchg
xor
sarb
push
jno
in
adc
sub
inc
out
push
mov
xor
jg
mov
popa
popa
adc
sbb
cmp
sub
arpl
adc
int3
add
sbb
xchg
cmp
and
nop
cmp
ja,pn
nop
dec
push
sub
movsb
ss
movsb
adc
mov
scas
sub
mov
and
sbb
sub
xor
mov
int3
and
xlat
cmc
jnp
arpl
pop
sbb
leave
std
jge
xchg
cmc
in
sub
push
and
mov
in
push
sbb
sti
inc
arpl
or
mov
mov
push
sbb
sbb
in
pop
jecxz
jnp
sarb
lahf
in
dec
mov
push
add
and
and
in
push
sub
out
cmp
xor
mov
hlt
fcompl
in
popl
iret
mov
push
fistpl
push
jecxz
int3
jno
fdivr
adc
out
cmp
fsubr
jl
ljmp
jnp
sub
or
insl
or
inc
cmpsb
mov
fcmovbe
lods
mov
jo
sti
arpl
psllq
lcall
jnp
push
aaa
test
mov
sub
add
jnp
xchg
cmp
repnz
push
insb
cli
mov
inc
cmp
outsl
scas
sub
mov
fisubrl
mov
xchg
lcall
mov
mov
outsb
or
es
adc
dec
jns
ja
push
scas
xlat
jbe
rclb
sub
insb
gs
test
hlt
cmp
test
mov
pop
lret
pusha
int
int
dec
cmp
shll
out
icebp
and
inc
dec
push
jecxz
sbb
xor
sbb
lahf
aaa
dec
int
sbb
imul
imull
jp
push
addb
mov
sbb
adcl
stos
gs
iret
cld
lcall
push
push
or
sub
jecxz
enter
cmpsb
dec
fwait
dec
or
lea
ljmp
bswap
pop
lahf
out
sbb
fdivrl
das
adc
push
pusha
adc
jge
aaa
add
int3
sti
mov
xchg
mov
psadbw
jecxz
add
mov
and
sub
sbb
cmp
pushf
adc
or
or
insl
jb
sbb
imul
mov
fnsave
pushf
fldl
add
pop
mov
jnp
inc
ss
mov
test
fnstenv
sbb
test
dec
cmc
lahf
inc
and
leave
push
in
and
mov
outsb
adcl
imul
pop
in
out
mov
pop
cli
cld
sub
es
add
jle
cmp
sub
push
gs
push
cmpb
xor
cmp
xor
pop
push
sub
xchg
adc
sti
sbb
xchg
je
test
fwait
je
dec
cmp
mov
xchg
ret
xor
dec
mov
add
clc
xor
jnp
push
xchg
in
stc
adc
mov
add
cmp
ja
push
ficompl
xchg
sti
mov
jp
dec
mov
xchg
stos
scas
mov
les
xchg
mov
or
icebp
pushf
sub
enter
ficomps
fisttps
dec
and
push
cli
xchg
jbe
lcall
adc
shll
fs
inc
add
pushw
jbe
cmpsb
data16
shl
add
adc
add
mov
add
jno
mov
cli
fstl
dec
call
fstps
in
cltd
adc
repz
mov
mov
xchg
loope
or
pop
aas
inc
lock
pop
pop
xor
lods
jnp
insl
adc
fmull
fs
mov
ljmp
xchg
inc
push
or
stc
bnd
lret
popf
shlb
fnstenv
rcll
movsl
andl
out
in
test
mov
cli
imul
or
pop
mov
mov
addr16
inc
lret
sbb
arpl
mov
addr16
test
inc
push
fcompl
sub
lods
loop
pushf
test
out
test
jno
mov
jecxz
rclb
push
pushf
push
faddl
sbb
sub
test
pop
loop
push
fsubrp
inc
test
dec
imul
repz
lods
movsb
push
subl
nop
add
out
arpl
adc
mov
in
sbb
mov
gs
mov
fstpt
push
push
mov
or
pusha
cmp
pop
mov
adc
iret
scas
or
lcall
mov
mov
jnp
sqrtps
jmp
fldcw
popa
lods
mov
adc
jne
mov
js
aaa
mov
subl
inc
pushf
pop
sbb
lea
adc
cs
xchg
in
jno
jae
jb
fwait
adc
mov
mov
ret
xchg
pop
jg
or
sbb
mov
push
stc
xorb
in
sub
push
ljmp
push
push
add
in
nop
gs
lcall
pop
xchg
push
fistpll
mov
es
add
in
mov
mov
or
sbb
and
test
jl
push
jno
incl
cmp
test
xor
add
adc
mov
into
out
sbb
subl
push
lods
cmp
cs
loopew
pop
andps
jge
addl
ds
xor
aad
pop
aas
xor
dec
pop
out
sbb
test
movsl
gs
sub
dec
imul
push
xor
cmpsl
adcb
gs
or
pop
loope
pop
xor
fildl
xor
in
inc
es
cmpsl
inc
out
sbb
test
movsl
jns
adc
xorl
pop
es
add
in
cmp
mov
xor
mov
xchg
jge
imull
dec
mov
aas
loope
pop
fistl
sti
sbbl
pop
pop
std
into
addr16
sbb
popa
test
movsl
dec
add
aaa
xchg
popf
gs
orl
loope
sbb
sub
repz
mov
into
iret
out
sbb
xchg
test
movsl
std
add
dec
dec
aad
outsb
pop
sub
pushl
sti
xchg
pop
shll
dec
push
dec
shl
jns
sti
push
sbb
dec
cmp
stos
pop
jg
sbb
mov
cmp
sub
repz
test
jnp
lea
sti
out
sbb
aad
pop
repz
icebp
jge
sbbl
pop
es
add
aad
xlat
inc
sub
xchg
jns
repz
pop
shll
dec
push
dec
jge
sti
loope
pop
adcl
subl
jnp
mov
jnp
lea
sbb
mov
add
pop
xchg
icebp
gs
dec
sub
scas
xchg
and
or
lahf
repz
sub
lods
jnp
lea
shl
jne
stc
test
movsl
flds
stos
pop
aam
jge
xor
iret
xchg
inc
imul
repz
jnp
lea
cltd
fwait
int3
jmp
jnp
lea
sbb
xchg
test
movsl
stc
add
sbb
mov
add
imul
rep
jns
out
popa
jnp
lea
rorb
mov
mov
or
cmpl
out
into
jecxz
sbb
inc
movsl
leave
add
push
push
icebp
jge
orl
add
mov
pop
repz
or
scas
xlat
sub
mov
jg
popf
dec
sbb
adcl
movl
imul
mov
jmp
popa
mov
xchg
dec
gs
dec
inc
dec
out
loope
pop
notl
xchg
cmpl
stos
push
int
into
imul
sbb
test
movsl
pop
add
xor
dec
adc
loope
pop
mov
xor
icebp
jae
cltd
jnp
lea
sbb
mov
aaa
movsl
popf
add
jg
aad
push
inc
test
mov
sbb
mov
jno
div
pop
mov
aas
xlat
pop
jnp
lea
jecxz
imul
movsl
roll
scas
push
or
imul
repz
sbb
into
mov
sbb
push
addr16
sbb
test
movsl
pop
add
daa
xchg
test
gs
and
pop
scas
push
sub
mov
out
int3
cmc
dec
jg
popf
sub
and
lret
adcl
xchg
stc
imul
cmp
test
movsl
add
mov
xchg
dec
gs
dec
inc
dec
out
gs
push
or
mov
push
xlat
cmc
jnp
lea
sbb
mov
add
imul
movsl
sbb
sub
repz
das
xlat
test
into
out
out
sbb
flds
stos
outsb
aam
jge
and
lret
xchg
inc
imul
repz
popa
xchg
cmp
xlat
dec
sbb
gs
jae
cltd
dec
sbb
mov
inc
fdivp
bound
or
ss
sub
shl
mov
dec
imul
or
out
mov
in
mov
fstp
dec
push
icebp
xchg
or
stos
mov
out
scas
cmp
pop
cmovg
pushf
aad
leave
mov
cmp
jl
push
out
and
jg
pushf
test
data16
and
int
insb
sbb
sub
mov
cmp
cmp
mov
scas
out
negb
insl
int
jbe
xor
cmc
adc
xchg
cmp
je
mov
push
aas
je
cmc
aas
ja
js
mov
enter
notl
inc
mov
out
leave
xchg
int3
fmul
mov
push
fs
inc
gs
add
xor
in
data16
mov
pusha
sbb
mov
adc
mov
popa
cmpsb
add
mov
icebp
iret
xor
xchg
push
loopne
dec
jg
xchg
shlb
add
xchg
xor
jns
outsb
adc
cmc
iret
popa
fimuls
ja
stc
repnz
std
out
pop
jecxz
xor
shr
or
clc
sahf
ja
stos
scas
cmp
pop
ret
loop
sbb
cmc
dec
je
lahf
xchg
cmp
call
test
fldcw
mov
or
fs
lret
xchg
data16
mov
mov
repz
xchg
mov
pop
xchg
adc
add
insb
cmp
push
shll
pushf
cmpb
repz
push
adc
or
enter
ret
or
lret
imul
insb
dec
cmp
cmp
js
adc
adc
imul
cmc
inc
adc
mov
xchg
jnp
gs
popf
mov
mov
mov
or
fisttpll
sbb
cwtl
adc
rorl
lods
cmp
je
arpl
insl
das
divb
in
sahf
mov
fwait
mov
sbb
sti
jb
cmp
roll
out
imul
xchg
cmp
dec
jne
or
push
jno
xor
lea
lock
sub
mov
js
enter
in
dec
icebp
inc
inc
leave
sbb
leave
scas
cs
js
inc
scas
mov
push
xchg
pop
adc
jbe
mov
jl
adc
xchg
mov
test
xor
std
dec
mov
adc
test
xor
ss
xchg
in
je
idiv
daa
aam
mov
std
sbbl
leave
mov
daa
push
push
cmpsl
testl
iret
pop
or
jo
cli
int
inc
push
xchg
fcomp
add
cli
mov
out
imul
test
xlat
xlat
xchg
mov
adc
add
ret
ftst
loopne
stc
mov
cli
call
andb
js
andb
and
xchg
push
cmp
dec
inc
or
imul
pusha
mov
mov
out
mov
stos
add
bound
loop
inc
pop
or
lret
jle
xchg
push
cmp
jae
ficomps
stc
xor
or
sarb
xchg
js
or
push
mov
hlt
sbb
stc
scas
cmpl
xor
shll
push
xor
cld
sbb
sub
add
fcompl
daa
and
test
xchg
arpl
xchg
arpl
out
push
jne
add
in
mov
add
mov
lea
fwait
cli
mov
gs
rclb
stos
xchg
sbb
cli
xor
push
sti
jne
xchg
ja
leave
in
mov
dec
cli
mov
sbb
pusha
mov
jecxz
sub
add
cmp
test
pop
lods
adcl
idivl
mov
lahf
push
mov
dec
jmp
sbb
adc
scas
loopne
inc
in
xchg
je
inc
push
mov
jnp
outsl
xlat
xchg
scas
jbe
repz
add
adc
in
hlt
mov
pusha
lea
lock
xchg
sbb
mov
js
fistps
mov
xchg
xchg
sbb
xchg
cmp
lea
bound
pop
in
bound
xchg
rorb
inc
dec
loope
js
mov
jae
stos
inc
ja
sahf
imul
btr
mov
cmc
mov
lea
add
or
test
add
fdivr
inc
cmp
xchg
imul
sub
sub
imul
cmp
jns
pop
sbb
sbb
xchg
fisttpll
xchg
jbe
lods
mov
jge
xchg
jae
xorl
stos
arpl
push
cmp
lahf
pop
push
push
xor
pop
loope
push
xacquire
subl
mov
insl
jmp
loope
mov
jmp
push
mov
push
cwtl
adc
scas
out
push
jb
sbbb
insl
adc
pop
pop
mov
addb
xchg
xor
loop
pop
mov
mov
or
cltd
sub
leave
and
outsl
jecxz
sub
sbb
fidivrs
hlt
push
push
xchg
scas
mov
xchg
push
push
pop
cmc
in
add
jg
pop
jne
in
push
and
xor
sbb
or
mov
mov
xor
outsb
xor
ficoms
rcll
cwtl
cs
sbb
loopne
dec
inc
lock
dec
es
jmp
cmc
xchg
lcall
gs
mov
jg
sbb
push
outsb
xchg
cs
test
std
imul
mov
mov
adc
mov
jno
movl
stos
or
sub
inc
mov
inc
sub
jo
cmc
mov
or
pushf
inc
jmp
xchg
inc
setae
add
push
xor
push
adc
pop
shrl
fidivl
pop
pop
adc
or
jle
lcall
and
xchg
mov
fnstcw
aad
sbb
mov
jae
mov
xchg
jbe
jo
sbb
mov
popa
xor
lret
pop
pop
xor
xchg
imul
cmpsb
ret
and
mov
xchg
push
jnp
xlat
mov
or
xchg
xchg
addb
xchg
adc
add
rclb
mov
mov
or
jle
sahf
andb
pushf
imul
pop
xchg
adc
xchg
jb
push
pop
add
leave
orl
sete
adc
mov
adc
in
cmpsl
inc
addl
imul
xchg
sub
cmp
xchg
cmp
loop
cmc
ret
jmp
pop
lret
das
in
mov
mov
lock
nop
xor
mov
and
rcrl
jne
or
mov
sbb
push
and
add
cmp
sbb
out
adc
sahf
loop
adc
adc
or
xor
repnz
in
push
shlb
and
dec
enter
mov
movsb
adc
test
jb
nop
jg
mov
lret
and
std
rorb
push
lods
xorb
sub
xor
out
or
mov
lea
sbb
inc
in
sarb
mov
jb
scas
lock
jle
cmp
roll
fisttpll
ret
addr16
push
lret
pop
cmp
ljmp
loop
push
inc
jae
jecxz
sti
pop
imul
hlt
mov
icebp
xchg
adc
pop
fs
addl
xchg
out
mov
and
aas
jl
movsl
lea
outsl
lods
aaa
std
fsts
stc
lea
sarl
insl
or
jb
in
mov
or
fsubl
jg
xchg
paddb
or
push
mov
xchg
push
pusha
jge
pushf
leave
sbb
cld
in
je
sbb
stos
pop
mov
insl
movb
dec
jge
jp
sbb
xor
jmp
fs
inc
add
mov
xor
sbb
cli
mov
mov
pop
jge
dec
shll
cmp
out
push
cwtl
scas
testl
mov
adc
cli
xchg
mov
mov
pop
cmp
add
int3
jg
lahf
out
ret
leave
leave
dec
in
stc
ftst
icebp
jp
mov
jbe
jecxz
jbe
and
lods
cwtl
sub
or
push
iret
adc
sbb
mov
popa
fnsave
sub
nop
je
adc
xchg
fcoml
push
mov
loopne
add
pmulhw
cmp
je
cld
pop
icebp
mov
into
mov
cmp
sbb
jmp
dec
add
outsl
push
sahf
xor
xor
call
adc
xchg
ds
movsl
mov
loope
movsl
data16
push
sub
in
adc
or
jmp
cmp
outsb
sub
adc
add
loop
addb
ljmp
popa
mov
cmpb
jne
sub
and
sbb
in
out
push
add
outsb
xor
cmc
xchg
clc
push
cli
fldl
or
mov
jp
stos
mov
and
clc
dec
ret
cmc
xchg
call
jno
xchg
jns
ljmp
pop
icebp
xchg
insb
not
arpl
sbb
adc
cmp
xchg
arpl
cmc
fwait
mov
inc
mulb
push
adc
fs
mull
out
leave
push
or
jnp
add
scas
je
dec
call
mov
jae
pop
push
mov
cwtl
clc
daa
push
idiv
sbb
loop
mov
shr
je
cmpsl
lea
jmp
js
jnp
shlb
and
and
call
push
sbb
push
in
xchg
int
jae
stos
adc
lret
and
cmp
lahf
lret
sbb
loopne
outsb
xchg
mov
mov
bound
and
mov
sub
sbb
pop
pop
adc
in
repz
jbe
ret
jmp
aam
xchg
dec
inc
lea
pusha
adc
cwtl
pop
lods
xchg
test
icebp
xor
test
push
adc
mov
pusha
mov
fistps
jb
jp
mulps
push
dec
inc
sahf
push
fs
cmpl
shll
repz
loope
add
cmp
insl
cmp
push
outsl
xchg
je
jecxz
or
bound
xor
jmp
andb
movsb
or
mov
xchg
push
jecxz
and
test
repz
insb
dec
inc
push
add
lahf
pop
daa
and
addr16
inc
insl
xchg
mov
int
lods
repz
or
and
fmull
push
addr16
mov
outsl
sti
pop
ljmp
rcll
scas
jns
add
jge
je
leave
lcall
leave
or
cmpsl
xchg
cmp
sbb
ja
in
cmove
sub
outsl
inc
shrl
cld
pop
and
xchg
andb
pop
jg
int
dec
fcoml
mov
xor
cltd
stos
sbb
loop
xchg
or
int3
jb
mov
inc
rclb
mov
add
pusha
sbb
xchg
add
insl
jecxz
in
mov
icebp
cmpsl
std
insl
or
leave
mov
sbb
or
pcmpgtw
fcoml
stos
xlat
scas
sub
push
lods
lret
dec
sbb
pop
jb
flds
jns,pn
insl
or
lea
jno
lcall
mov
jge
je
movl
push
cmp
clc
out
sahf
shll
das
mov
lds
adcl
pop
aad
push
push
mov
sbb
loopew
and
in
add
in
jb
das
arpl
sub
addr16
jp
add
fstpl
ss
in
pop
mov
dec
cmpsw
jo
sub
fcompl
dec
push
fnsave
mov
xchg
pop
cli
jo,pt
aam
xchg
sub
lahf
adc
mov
pop
push
testl
filds
mov
or
int3
jg
sbb
mov
insb
popa
sbb
clc
stc
lods
loop
cld
sbbl
pop
inc
push
in
push
pop
out
nop
out
dec
lret
dec
cmp
ja
lret
add
lock
mov
and
lock
mov
sbb
push
add
insl
jmp
sub
jbe
xchg
sub
sbb
jne
mov
fimuls
lds
in
sub
add
jge
leave
pop
pop
jg
jmp
mov
sbb
in
adc
test
pop
mov
sub
pop
cmpsb
decl
and
cld
iret
lcall
cmp
xchg
fidivl
mov
dec
jecxz
xchg
popf
mov
ds
cwtl
cmp
push
clc
push
jle
cmp
push
jg
pop
sbb
aaa
add
jmp
sub
std
imul
inc
loope
iret
xchg
cmp
push
jecxz
jle
cmp
push
jg
pop
sbb
aaa
jge
daa
clc
frstor
and
pusha
xchg
movsl
fsubs
mov
jmp
cs
push
jmp
jle
test
jp
fwait
cs
xchg
mov
ds
pushf
cmp
fcoms
push
jle
cmp
push
jg
pop
sbb
aaa
pop
inc
daa
in
jno
xchg
ret
mov
pop
jnp
and
nop
jmp
in
lcall
sub
cmp
inc
jg
pop
sbb
xor
daa
mov
loope
jp
push
push
jle
or
ret
jg
add
mov
fisttpll
adc
sbb
aaa
pop
inc
adc
sbb
cltd
mov
cwtl
and
or
add
cmpsl
inc
mov
fwait
mov
cmp
jb
pop
stos
and
mov
mov
inc
es
mov
push
mov
test
cmc
gs
repz
ds
cmp
cmc
add
pop
loop
xchg
pop
dec
mov
les
movsl
xchg
sub
lret
test
xchg
mov
aam
mov
jne
adc
fisubs
or
in
out
push
fidivrs
mov
jb
fst
push
or
mov
push
and
ss
cmc
std
shl
jne
mov
pop
pop
scas
mov
jp
mov
sub
sbb
add
ret
sub
xor
fwait
cmpsb
mov
jns
gs
mov
icebp
mov
sub
cmp
icebp
fists
pop
sbb
int3
fldenv
mov
jecxz
fwait
sub
mov
mov
xchg
mov
mov
icebp
cmpsl
xchg
dec
ja
lea
ss
mov
add
nop
scas
fdivs
arpl
pop
mov
int
adc
in
xchg
imul
add
xor
leave
aaa
sub
push
adc
mov
dec
jmp
jg
adc
sbb
inc
xlat
xor
xchg
inc
gs
stos
dec
aad
ss
imul
repz
add
mov
leave
add
decl
and
test
test
push
xchg
insl
das
cmp
mov
imul
mov
adc
push
pop
push
cmc
std
enter
addr16
shlb
arpl
stc
sub
lods
mov
enter
jne,pn
jmp
xchg
dec
cmc
scas
adc
pop
das
mov
xchg
xor
xchg
subl
repnz
fs
dec
inc
shll
add
jge
in
push
repz
lds
std
into
arpl
in
sbb
test
movsl
popa
add
xlat
xchg
inc
gs
dec
dec
dec
xchg
pop
inc
insl
cmpsb
popf
sub
xchg
lea
push
imul
out
arpl
mov
dec
mov
dec
fsts
sub
mov
jae
loope
jge
mov
mov
das
xchg
test
inc
dec
out
loope
pop
call
popl
xor
sarl
dec
mov
jge
cmpsl
test
mov
shll
icebp
fwait
jge,pt
out
xchg
popa
imul
repz
movsl
lret
xlat
push
jnp
lea
out
cltd
sar
aam
xchg
mov
fldenv
mov
gs
lret
ds
jmp
sub
cmpsb
mov
popf
into
add
xchg
sbb
popa
test
movsl
push
add
and
test
push
outsl
test
sub
fstl
pop
ret
xor
xlat
das
xor
leave
sub
lahf
int3
into
cmpsl
adc
subb
jmp
fsubrl
fsubrl
insb
test
cmp
mov
mov
sub
push
in
mov
inc
lods
sbb
xlat
xchg
dec
dec
and
inc
das
aad
addb
sub
mov
cmc
sub
mov
mov
lcall
cmpsl
out
ret
in
dec
fstl
icebp
cmpsl
imul
and
sbb
jecxz
jp
jnp
flds
adc
imul
aad
imul
pop
xor
add
lahf
fcmovu
xlat
out
xchg
jmp
mov
mov
pop
cmp
adc
test
dec
push
movsl
std
notl
adcb
cmc
cmpsl
mov
lea
jmp
iret
dec
pop
sub
dec
xor
lods
in
fisubrl
leave
dec
xlat
shrl
test
jno
and
cmp
pop
xchg
jmp
lahf
sti
dec
mov
xchg
adc
stos
sub
int
mov
int
insl
fmul
sbb
mov
fldenv
lea
fdivl
out
int3
and
inc
and
or
jle
adc
mov
xor
dec
xor
dec
sti
int
out
lds
push
imul
sub
aad
leave
adc
xchg
xchg
or
adc
nop
cmp
cmc
xchg
cmovae
push
fistps
arpl
and
and
mov
mov
mov
and
out
test
das
shlb
ja
pop
adc
mov
test
mov
je
jo
mov
or
out
sub
data16
cmp
and
pop
sbb
in
insl
ret
mov
push
push
repnz
adc
push
push
pushf
es
sbb
out
jb
fldt
jecxz
imul
jns
test
movsl
mov
test
pop
cld
mov
testl
cmp
adc
cmp
cltd
and
mov
daa
orb
pcmpgtw
lcall
imul
xchg
adc
jo
lock
or
mov
mov
insb
jno
out
mov
testb
push
ret
shr
mov
xchg
sbb
lods
add
sub
data16
inc
cli
pop
inc
mov
jg
aad
dec
stc
sbb
sub
adc
mov
sbb
setbe
jle
or
mov
pop
or
push
jle
sti
add
xchg
pop
ljmp
dec
aad
jl
add
add
iret
jp
lret
test
push
test
jmp
ret
push
inc
mov
pop
pushf
popa
push
test
xor
daa
rclb
push
mov
ljmp
lahf
hlt
or
test
dec
jae
xlat
inc
std
movsl
dec
ret
mov
add
call
test
or
pop
xchg
lods
mov
xchg
pop
sbb
lock
mov
lea
stos
scas
sar
ja
mov
popf
cmc
adc
or
mov
pop
cld
xor
shll
mulb
xchg
repnz
lret
adc
cmp
sub
lea
or
je
sbb
mov
sub
ja
iret
cmp
cmp
aad
mov
cmp
rclb
movsb
aam
rorb
sub
mov
inc
or
in
push
insl
les
cmp
imul
es
test
sub
setnp
adc
popf
movsb
sub
and
fcoms
mov
ret
cmp
sysenter
cltd
inc
test
mov
lea
mov
or
ficompl
and
icebp
xchg
push
jecxz
insl
in
int
adc
push
add
sub
fcom
and
loope
ret
fdivrl
popa
in
add
lock
adc
icebp
mov
test
pushf
add
imul
push
pop
pop
movsb
pop
pop
pop
daa
ret
fwait
pop
dec
repz
sbb
sbb
pop
loopne
outsb
inc
cli
inc
jmp
cmc
jns
push
outsl
pop
in
cmp
mov
repnz
arpl
call
inc
fists
pop
or
lock
shrb
jno
sub
or
inc
xlat
dec
sbb
xrelease
fnsave
mov
pop
fwait
inc
aad
mov
inc
jmp
adc
negl
xor
dec
imul
and
push
outsl
cmp
adc
adc
sub
pop
idivl
std
mov
dec
in
mov
cltd
or
sbb
popf
push
lods
test
cmp
xchg
inc
push
and
mov
mov
adc
scas
jmp
lds
inc
out
mov
mov
xchg
std
mov
bound
and
mov
lea
hlt
lods
push
add
mov
in
loope
push
mov
mov
inc
xchg
fildl
lods
fidivl
and
or
mov
xchg
push
sub
sbb
int3
sbb
sbb
mov
push
mov
pop
push
repz
icebp
lret
push
add
stos
mov
pop
ja
popf
sbb
test
xchg
jle
xorb
icebp
dec
das
cmovne
pop
xchg
cmpsb
pop
cmp
es
xchg
cltd
mov
shr
pop
xor
add
test
stos
das
rcr
add
out
pop
xor
test
dec
sbb
add
and
out
add
fdivrp
mov
imul
add
mov
sbb
sub
test
or
not
insb
jae
sbb
ds
mov
stos
pop
add
pop
leave
lea
dec
sbb
adc
adc
popf
stc
jecxz
int3
pop
adc
sub
setp
mov
lock
out
xchg
rcrl
lgs
outsl
shlb
cmp
out
push
test
or
and
ret
inc
test
fwait
insb
rorl
mov
cmp
fs
cmp
jae
adc
pushf
insl
gs
mov
sbb
pop
ret
jne
cmc
in
stos
add
xor
add
and
dec
ja
mov
inc
mov
ds
cs
pop
and
js
lock
or
mov
in
popf
ret
xchg
test
mov
pop
sub
and
enter
jmp
adc
mov
int
cs
push
and
mov
add
mov
mov
push
scas
adc
pop
dec
or
pusha
fcmovnbe
dec
pushf
push
add
popl
pop
notb
cmp
popf
dec
lret
push
sbb
xchg
or
pop
mov
inc
icebp
push
shl
push
jnp
mov
jnp
sti
test
test
sub
fmulp
adc
jae
clc
xor
cmp
rorl
add
fdivrl
out
mov
or
sub
or
fldcw
loopne
xchg
rolb
add
xor
incl
push
xchg
mov
pop
std
ds
jno
sbb
pushf
xchg
cmp
mov
sahf
movsb
push
sahf
jb
pushf
loope
push
jmp
or
xchg
mov
shl
sarb
fcoml
ret
pusha
add
repz
push
rorb
mov
notl
cmp
push
sbb
clc
out
mov
cwtl
jae
mov
lods
mov
call
dec
imul
pop
aad
iret
lret
outsl
nop
cmp
pop
xor
add
cs
dec
mov
jle
mov
std
sbb
and
das
and
cmp
jno
lds
sub
sarl
aaa
pop
adc
dec
mov
push
andl
mov
cltd
mov
movntq
test
movb
shl
xor
push
xchg
sbb
sahf
push
push
and
adc
cs
stc
sub
imul
mov
movsl
jmp
dec
mov
pusha
cltd
shll
jle
push
inc
aaa
pop
pop
stos
sbb
iret
loope
shlb
sub
jle
sub
aam
inc
jno
mov
mov
mov
data16
fldenv
push
jne
pop
mov
lea
add
adc
jle
pop
loop
dec
jp
decb
and
mov
xor
mov
pop
push
stc
lret
jo
mov
das
lock
sbb
jnp
push
sbb
mov
shrl
jb
sbb
or
jmp
or
xchg
xchg
push
stc
lcall
in
mov
repz
idiv
std
push
int3
cmpsl
push
or
jae
or
jmp
addr16
out
push
ljmp
stos
das
bound
jne
pop
mov
push
mov
popf
cltd
push
decl
sbbl
les
cli
add
jns
in
adc
adc
int
insl
xchg
push
insl
xor
jge
test
stos
and
lods
scas
sub
movsb
push
mov
int
mov
into
les
xchg
call
or
xchg
inc
outsl
xor
jge
adc
cld
cmp
outsb
mov
pop
pop
out
in
sbb
sub
arpl
in
sbb
and
xorl
mov
fisttpl
mov
and
in
mov
jns
xchg
mov
leave
sub
mov
xorl
cltd
push
add
dec
sub
pop
mov
mov
pop
mov
stc
and
jle
jl
std
adcl
test
nop
clc
sti
sbb
sbb
hlt
or
mov
pop
imul
pusha
xchg
jns
jmp
cli
push
je
daa
stos
xchg
push
repnz
mov
cmp
loop
movsb
xor
mov
cltd
aas
lret
sub
fldl
mov
cmp
jmp
jmp
sti
jbe
and
sbb
test
mov
adc
cld
in
andb
add
jle
aam
inc
loop
xchg
fcmovu
jmp
jae
in
adc
stos
cmc
punpckldq
inc
xor
mov
test
mov
popa
sbbb
mov
lea
insl
push
sti
in
push
mov
push
cmc
les
mov
pop
repnz
ja
fldcw
jnp
out
jo
stos
xchg
popf
mov
jge
ljmp
mov
dec
and
test
popf
jae
xchg
imul
mov
xchg
mov
aad
mov
loope
xor
popf
push
popl
push
jmp
mov
and
std
cmp
mov
adcb
mov
xor
cmp
inc
loope
and
xchg
mov
mov
xchg
daa
adc
pushf
ds
mov
jle
movsb
push
je
sbb
sbb
add
sbb
lret
xchg
popa
mov
pop
mov
mov
out
mov
out
ss
and
mov
adc
add
mov
inc
pop
xchg
les
dec
sub
dec
outsb
mov
inc
cmovle
xchg
cwtl
xchg
xchg
enter
bndstx
mov
push
addr16
dec
add
lods
ljmp
mov
std
jecxz
push
jae
and
fcmovnb
scas
pop
sub
call
repnz
xlat
call
popf
enter
enter
xchg
negb
dec
xchg
es
scas
insb
addr16
cmp
dec
or
and
mov
stos
outsl
sbbl
inc
mov
outsb
xchg
mov
insb
loop
daa
jns
movsl
push
nop
pop
test
mov
lds
inc
sub
cwtl
sbb
jmp
jg
imul
jne
pushf
add
loope
fs
xchg
pop
add
adc
and
mov
enter
shl
shrb
lcall
jecxz
dec
mov
test
xor
fs
in
sbb
mov
or
lret
psubusb
sub
sub
cmp
push
xchg
jp
in
dec
add
or
arpl
mov
jmp
popf
cmp
and
int
ja
add
bound
rclb
xor
adc
push
adc
cwtl
or
or
sbb
aas
in
xchg
or
out
sub
xchg
stc
shrb
dec
test
jmp
cmc
fwait
sub
push
fsubrl
lret
fwait
jmp
inc
outsl
in
insl
jns
jp
jo
add
xchg
popa
outsb
out
push
aad
dec
and
repz
jno
mov
dec
sbbl
ficompl
aas
jb
loope
mov
mov
inc
cmp
mov
in
add
xchg
stc
fcoms
addl
mov
ficoml
or
or
jnp
mov
outsl
push
push
sub
xchg
das
push
je
cmp
out
or
bound
movsb
call
jle
xor
sub
mov
stc
add
add
mov
mov
rcrb
in
sub
pop
hlt
lret
aaa
aam
adc
push
movsb
sahf
fs
out
notb
gs
test
iret
in
mov
push
sub
in
scas
push
cld
cmpsb
jns
push
cmp
loope
mov
jp
ficoml
pop
xchg
loop
jmp
hlt
and
inc
push
test
lods
aam
mov
insl
lret
mov
rcl
xor
pop
dec
dec
push
cld
mov
iret
xor
pop
mov
fcmove
notl
mov
movsb
sub
daa
mov
mov
rcll
testl
mov
mov
add
shr
int3
test
repz
jno
xor
and
das
movsl
pop
stc
stc
sbb
test
popa
sub
fnstsw
leave
nop
pop
into
push
sub
hlt
lahf
leave
fs
xor
sub
hlt
pop
sbb
and
dec
in
xor
mov
mov
pop
cwtl
shrb
or
dec
lahf
jno
lcall
push
lods
clts
scas
mov
jae
push
leave
lret
xchg
xchg
push
std
mov
mov
sbb
fcmovnb
push
cld
scas
ljmp
mov
rorl
sbb
add
mov
xorl
ja
out
into
call
cmp
inc
sbb
sub
arpl
test
mov
push
jg
aaa
pop
ljmp
push
jbe
call
inc
lock
out
and
fldenv
ss
test
lods
adc
sbb
sbb
fadd
cltd
dec
je
das
or
in
mov
push
cltd
in
mov
dec
cmp
fwait
lahf
sub
imul
sbb
shll
adc
xchg
loopne
les
cmpsl
mov
inc
pop
idivb
add
or
insl
add
cmpsl
in
and
xor
mov
aaa
js
push
push
xchg
mov
std
mov
xchg
cmp
or
xchg
xor
jecxz
push
mov
addr16
popa
insl
int3
test
mov
and
ret
std
cvtps2pi
fs
addb
dec
mov
adc
mov
sarl
aad
adc
fsubrl
push
das
adc
mov
add
les
mov
int
dec
push
gs
mov
pushf
sub
dec
das
leave
inc
cmp
xchg
xchg
mov
mov
mov
mov
or
into
fwait
pop
fcmovu
loope
movsl
push
mov
out
pusha
pushf
sbbb
xchg
out
mov
into
mov
dec
lahf
xor
popa
in
data16
pop
mov
push
pop
faddp
ja
fwait
mov
push
push
movsl
sub
sub
push
mov
cmp
inc
mov
pavgb
push
xor
push
and
inc
int
jne
mov
loopne
inc
xor
clc
adc
insl
mov
pop
lea
data16
lea
cmc
inc
stc
add
mov
cmc
cmpsl
inc
hlt
push
inc
loop
xchg
adc
movsb
mov
inc
rcll
addr16
or
ret
outsl
mov
mov
aad
cmp
loope
jg
sti
adc
jp
lea
add
sbb
adcl
jp
repnz
adc
lock
aam
xchg
dec
add
add
jg
mov
into
jge
mov
les
movsb
nop
jno
stos
and
push
test
test
test
add
xchg
jge
xor
fstps
mov
add
fdivs
jne
xor
inc
jge
fildl
fs
push
xor
fwait
jne
cmp
adc
rcrb
mov
mov
out
mov
push
add
push
jle
test
icebp
add
mov
and
adc
sahf
adc
addr16
mov
dec
lret
divb
mov
mov
arpl
insb
scas
mov
jnp
inc
mov
int
mov
stos
idivb
daa
add
repz
push
inc
and
dec
add
xor
sub
mov
and
adc
cmc
push
adc
add
pop
lret
pop
imul
and
mov
pop
mov
add
push
jle
je
jne
sbb
jl
xrelease
clc
sub
in
cmpsl
nop
sub
xchg
jmp
push
pushf
xor
push
xchg
pop
xchg
dec
jb
test
inc
repnz
sbb
les
mov
scas
mov
sbb
lds
test
jmp
scas
mov
xchg
jp
push
xchg
lcall
fistps
push
enter
inc
orl
les
addb
lret
clc
cmp
mov
imul
lea
dec
add
xchg
test
mov
push
clc
loopne
dec
mov
jb
lock
or
shrb
sub
push
mov
push
in
xchg
mov
xchg
leave
jo
jae
adc
push
arpl
push
mov
push
xchg
pop
mov
jmp
lahf
add
push
cld
in
dec
sarb
rorb
and
or
shlb
mov
pop
adc
outsl
or
xor
in
push
ja
in
out
xchg
xorb
mov
out
imul
std
lcall
push
cli
jne
and
push
mov
dec
enter
insl
sbb
dec
std
jne
xchg
jp
add
sub
test
fwait
roll
dec
sbb
int
or
cmp
out
ficompl
inc
or
xorl
mov
mov
out
add
mov
stc
rcrl
mov
cmp
jo
jno
std
sbb
jmp
test
add
jmp
mov
cmp
mov
push
in
mov
xor
mov
sahf
scas
leave
mov
nop
cli
or
jp
lret
xchg
int3
or
xchg
shrl
mov
pop
push
lds
xor
jmp
insl
imul
repnz
out
jnp
lea
xlat
out
sbb
subl
inc
xchg
leave
gs
dec
test
test
movsl
adc
out
jne
imull
dec
mov
cmp
movsl
pop
lret
push
push
jge
addl
xchg
stc
imul
aad
xlat
dec
mov
add
xchg
xchg
jns
jmp
dec
mov
pop
lret
push
push
jge
addl
xchg
subl
repz
es
adc
or
adc
mov
jge
orl
xchg
xchg
imul
repz
cmp
jnp
sbb
mov
jnp
in
psraw
jge
subl
pop
es
add
repz
xchg
or
lea
cmpsl
rcrb
pop
xlat
sarl
in
into
jae
popf
sbb
imul
mov
gs
out
dec
jno
jmp
popa
pop
push
adc
cmpl
pop
inc
int
push
out
sbb
test
movsl
imul
das
fisttps
out
loope
pop
repz
sbb
jg
fnsave
push
cltd
aam
cmpsl
ret
push
push
cmp
fwait
xchg
jge
repz
add
repz
movsl
lret
xlat
push
jnp
lea
sti
out
sbb
flds
sbb
push
scas
ds
imul
pop
xlat
andl
lea
out
sbb
xchg
test
movsl
test
ja
in
inc
mov
out
sub
xor
es
jmp
jnp
lea
sbb
inc
test
movsl
lods
add
adc
dec
cmp
sbb
lock
mov
sbb
jg
loope
psraw
jge
andl
pop
es
add
repz
xchg
or
lea
jg
mov
scas
pop
dec
rorl
icebp
pop
jg
loope
jno
xor
xchg
inc
imul
rep
jns
out
imul
out
sbb
int
scas
and
jno
mov
sti
ljmp
jge
cmpl
aaa
rep
jns
sti
xlat
popa
jnp
lea
into
xchg
out
sbb
cmp
imul
jns
repz
popa
gs
daa
dec
movsl
dec
lret
loope
pop
fists
jecxz
insl
sbb
stc
xor
loope
inc
es
push
xchg
cmp
inc
sub
decl
gs
pop
dec
orl
push
pop
jge
orl
xchg
test
es
add
fnstenv
mov
fnstenv
or
sbb
repz
cltd
jnp
lea
sbb
inc
test
movsl
lods
add
adc
dec
add
pop
mov
fnsave
cmpsb
xor
stc
jnp
loope
jge
mov
fbld
movsl
mov
xchg
xchg
gs
mov
fwait
loope
pop
scas
push
xor
and
stos
fadd
int
push
std
into
arpl
in
sbb
test
movsl
imul
xlat
aaa
dec
push
dec
jge
jecxz
imul
fnstenv
dec
xchg
int
jge
cmp
sub
es
mov
pop
xlat
mov
into
iret
out
sbb
mov
add
outsl
xchg
in
gs
dec
sub
ss
imul
add
lea
lea
sbb
mov
das
movsl
lods
add
setne
adc
loope
pop
scas
push
xor
and
cmpsl
ffreep
sarl
stc
into
jnp
loope
punpckhwd
sar
inc
mov
xchg
mov
xor
dec
jns
out
gs
mov
lahf
addl
push
cltd
aam
cmpsl
rcrb
push
pop
add
fwait
xchg
add
add
repz
mov
cmp
mov
into
inc
sbb
xchg
test
movsl
stc
add
jg
frstor
mov
mov
add
jg
loope
jge
mov
and
movsl
mov
xchg
mov
dec
adc
loope
pop
scas
push
xor
and
cmpsl
rol
sarl
std
into
outsl
out
sbb
test
movsl
pop
add
fists
dec
jns
out
gs
mov
fwait
addl
sub
add
xor
out
xchg
popa
imul
repz
dec
jnp
lea
sti
out
sbb
fldl
cmpsl
aam
repz
sbb
fwait
jns
out
xchg
popa
gs
daa
dec
test
pop
fistl
out
xorl
xchg
jmp
add
rcr
aad
sub
xchg
or
es
repz
jnp
lea
inc
sbb
mov
imul
mov
xchg
fldenv
mov
xor
mov
and
adc
xchg
repz
jnp
lea
sbb
mov
xor
xchg
mov
xchg
lea
dec
adc
loope
pop
cmpsl
push
sub
aas
cmp
leave
jnp
cmc
into
jg
loope
pcmpeqw
sar
inc
mov
xchg
mov
cmp
dec
insl
dec
mul
adc
jge
subb
xchg
xor
pop
vmovdqu
icebp
sbb
test
movsl
insl
add
iret
xchg
dec
gs
dec
push
dec
shl
jge
out
gs
adcl
push
rcll
fwait
mov
xchg
adc
gs
dec
mov
loope
pop
daa
push
movsl
jge
adcl
xchg
lea
es
add
in
add
mov
sbb
pop
or
add
add
lea
lea
sbb
mov
add
adc
dec
adc
loope
pop
stos
push
xor
in
add
cmp
std
jnp
in
into
jae
xchg
sbb
popa
test
movsl
push
add
and
loope
pop
call
addl
push
cltd
aam
scas
in
out
sbb
test
movsl
add
mov
xchg
gs
daa
dec
test
pop
push
dec
jge
cmpl
xchg
icebp
imul
aad
xlat
dec
lahf
mov
cmp
mov
xchg
add
add
pop
loope
pop
aas
push
mov
aaa
movsl
xor
xchg
xchg
imul
repz
xor
sbb
mov
and
addr16
jmp
pop
sbb
sub
xor
xchg
mov
add
repz
adc
lahf
xlat
add
lea
rorb
call
xchg
or
add
lea
lea
sbb
mov
add
adc
dec
sbb
loope
pop
xchg
push
cmp
andl
jnp
icebp
into
jg
loope
add
ret
movsl
push
add
daa
xchg
mov
aaa
xlat
dec
jns
sti
loope
pop
push
adc
addl
push
cltd
aam
cmpsl
loope
add
cmp
lahf
xchg
jge
out
es
add
repz
test
jnp
lea
xlat
out
sbb
test
jg
fnsave
dec
dec
nop
fwait
mov
xchg
adc
xchg
dec
pop
loope
pop
aas
push
mov
aas
ds
xor
xchg
stc
imul
fnsave
mov
fisttpll
mov
add
adcl
cltd
dec
sbb
test
sub
cmp
xor
xchg
cltd
imul
repz
adc
lahf
xlat
cmp
into
mov
xor
stc
dec
loopew
pop
ja
cltd
jge
orl
mov
inc
out
xlat
jno
decl
or
mov
inc
dec
mov
jp
dec
push
inc
jp
mov
or
repnz
rcll
test
add
xor
dec
test
fimull
rcrb
mov
int
push
pop
sbb
sahf
lahf
cmpsb
scas
or
in
pop
mov
shrl
in
sub
stos
sub
ret
roll
cmpsl
push
cwtl
sub
xchg
fiaddl
dec
fldenv
aad
xor
pop
cmp
test
divb
jg
in
out
icebp
negb
push
xor
aad
xor
pop
sbb
push
cmpsl
test
dec
cmp
subb
and
mov
adc
jbe
imul
pop
scas
add
ja
pusha
mov
dec
vmovdqa
push
outsl
inc
xchg
pusha
jns
out
sub
dec
mov
ja
jbe
sub
in
int
ficoms
push
les
mov
into
lods
pushl
mov
mov
xor
aad
push
int
or
xor
dec
xlat
jp
inc
cmc
inc
push
pop
mov
cmpsl
repz
sub
fists
dec
pop
push
popl
xlat
mov
imull
cmp
leave
dec
inc
rclb
adc
leave
icebp
je
mov
lcall
xchg
jg
push
jge
xchg
fnstcw
mov
mov
addr16
inc
xchg
dec
jle
gs
cmc
add
popa
mov
rcll
or
imul
dec
cmp
jo
pop
jge
xchg
loopew,pn
jg
in
cmp
mov
push
cmp
out
cmpsb
mov
dec
sub
mov
push
adc
mov
lcall
pop
or
mov
jns
mov
mov
out
arpl
jbe
xor
shlb
cmpsl
sub
add
shl
repz
pop
xchg
pushf
movsl
mov
hlt
aas
daa
lea
cmpsl
mov
push
xor
in
cmp
and
add
or
dec
xor
int
sub
or
dec
mov
iret
push
mov
pop
sub
mov
cmp
pop
cmp
lds
cli
movsl
imul
mov
push
shl
push
sbb
sti
push
cmp
ss
dec
or
xchg
dec
divb
or
sbb
ljmp
dec
cmp
sbb
add
insb
jns
dec
push
add
shlb
popa
add
or
jbe
ficompl
dec
push
rcl
jp
inc
vunpcklps
xchg
int
jae,pt
xor
stos
jmp
sahf
pop
mov
cmpsl
mov
jmp
ret
stos
jge
cmpsb
test
lahf
insl
sahf
dec
cli
outsl
or
pop
dec
push
pop
xchg
push
sub
lahf
in
cld
dec
bound
ret
cvtps2pi
int3
pop
pop
push
mov
stos
sub
test
cmp
out
cli
std
popf
inc
dec
mov
cld
mov
int
mov
mov
dec
jg
mov
and
xchg
cmc
mov
out
sub
imul
push
mov
jo
clc
call
adc
add
xor
sub
mov
dec
inc
sub
nop
pop
xor
daa
in
pop
test
icebp
cltd
loope
mov
sub
push
fcompl
sub
out
pop
mov
dec
push
xchg
inc
push
xchg
shll
xorb
mov
jmp
fisubl
leave
jne
mov
aad
and
shll
xchg
scas
mov
sti
mov
cmp
dec
ret
add
push
fmull
push
sahf
out
jno
lds
push
sbb
xor
mov
jp
pop
dec
in
jo
xlat
push
fsubs
fcompl
inc
add
sub
fcmovnbe
inc
or
scas
je
sti
mov
lcall
dec
jae
push
xor
insl
rorl
mov
shl
test
xchg
jae
sub
leave
scas
stc
repz
lds
jmp
dec
or
cmpsb
mov
ljmp
sub
cmp
xor
pop
test
shrl
bound
adc
cli
in
rorb
sub
jmp
stos
push
outsl
cmp
sbb
inc
js
adc
dec
in
xor
jbe
cmp
pop
sbb
test
aad
daa
sub
jne
daa
imul
ds
mov
sub
pop
dec
dec
mov
mov
sti
mov
test
jae
xor
cmp
fistl
mov
mov
xor
cltd
dec
inc
jno
mov
subl
in
std
clc
shlb
movsl
dec
and
fcompl
clc
movsb
scas
js
mov
sub
shlb
cmp
shll
fsubs
test
mov
mov
daa
xchg
leave
or
and
sub
stos
repnz
mov
sub
scas
mov
ret
adc
add
add
rcl
dec
push
ror
push
cmp
insl
or
mov
enter
movsb
mov
or
cmp
stos
insb
inc
out
int
push
fdivrs
push
xor
or
mov
mov
cmc
scas
mov
pop
fst
jbe
xchg
sub
fneni(8087
fs
arpl
mov
lahf
int
into
into
subl
cmp
imul
fmul
xor
cli
loop
dec
cwtl
dec
shl
cmpsl
fs
or
mov
fnstenv
fwait
jns
jp
mov
mov
fld1
jne
mov
outsb
jp
cmpsb
jp
repnz
aam
call
rcrb
cmp
xchg
or
adc
dec
je
inc
dec
negb
popa
sbb
ret
test
xchg
mov
and
pop
shll
mov
ds
rclb
call
xor
push
mov
push
sbb
jnp
push
mov
dec
cld
mov
cmpsl
mov
fistl
xor
ss
push
in
cmpl
push
sub
pop
xor
ret
addr16
inc
imull
add
sub
testl
sbb
sub
popa
xor
rcl
pop
jmp
loope
jecxz
mov
call
cmp
lds
cmp
ljmp
jbe
aam
cmc
mov
jl
dec
outsb
stos
push
adc
std
dec
into
aad
push
call
mov
mov
insl
ds
lods
out
mov
xchg
sbb
adc
fstl
jbe
sub
int3
pop
xor
dec
jae
stos
mov
mov
loopne
or
stc
in
sub
scas
dec
xchg
sub
int
shrl
repz
adc
push
jnp
lahf
imul
xchg
mov
adc
std
pop
xchg
fidivrl
and
dec
out
dec
mov
sahf
popa
push
xchg
out
sbbl
mov
loope
mov
ret
add
andb
popf
sub
sbb
inc
movsb
xor
std
or
in
push
test
int
js
push
lods
lcall
add
cmc
out
dec
push
jg
inc
lcall
loopne
repnz
xlat
stc
xor
add
cmpsb
cvtdq2ps
hlt
addr16
dec
jno
lds
cmp
push
jmp
es
sub
in
lock
push
movsl
inc
movsb
std
std
int
fwait
sti
aad
sti
out
push
into
sbb
sbbl
ljmp
cmpsb
mov
lret
outsl
or
push
popa
cld
add
dec
cli
mov
cmc
dec
mov
fwait
dec
jns
aam
lret
fldenv
pop
aas
lods
xor
sub
mov
add
xor
int3
push
imul
fcmovnbe
dec
roll
ss
push
cmp
add
sub
decl
push
xlat
sub
aad
jl
nop
dec
push
cltd
leave
adc
lds
push
push
mov
or
cmp
test
lcall
sbb
push
ret
fucomi
sub
push
addb
int
fwait
or
push
clc
push
mov
int
stos
popf
int
cmp
mov
shll
push
sub
call
sti
xor
testl
movsb
int
adc
sbb
dec
out
stc
les
cmp
mov
dec
pop
insl
or
mov
pop
dec
mov
mov
loopne
dec
xbegin
add
xchg
mov
mov
rolb
sbb
dec
test
sbb
ret
mov
mov
jmp
jne
std
in
mov
mov
pusha
pusha
cmp
cld
roll
pushf
push
sarb
aas
shlb
sbb
push
stc
sahf
mov
sti
pop
movsb
and
sub
dec
push
and
les
stos
mov
xchg
incl
xor
nop
push
sub
xchg
mov
ja
mov
jo
adc
std
adc
test
out
aaa
loope
xor
mov
lcall
fbld
sub
xor
adc
aad
cmp
cltd
andb
ds
mov
loopne
pop
push
push
stos
and
push
sub
xor
push
pop
int
cmp
xor
popa
pop
scas
test
pop
es
mov
jb
pop
sub
loope
dec
push
out
adc
popa
push
cmp
pop
cwtl
xchg
xor
mov
aam
cmp
push
jg
mov
add
cmpsl
adc
test
mov
lcall
or
aad
lods
mov
mov
mov
dec
lcall
out
stc
mov
sub
xchg
sub
lods
jle
shl
notb
adc
les
push
popf
cmc
mov
stos
fwait
imul
test
dec
xor
leave
aas
xor
lea
mov
ss
mov
mov
mov
mov
int3
dec
cmpsl
lods
lcall
stos
mov
call
cli
das
daa
push
icebp
jne
sub
out
dec
js
stos
into
fiaddl
cmpsb
sarl
insb
inc
push
add
adc
popa
cmp
cmpsb
xchg
stc
outsl
inc
aas
inc
jo
push
add
mov
jmp
jmp
pop
sub
jns
push
mov
shll
lods
ret
and
inc
imul
cltd
cmp
scas
mov
sub
fscale
shrb
bound
cmp
nop
xor
mov
push
add
test
dec
into
outsl
inc
push
xchg
xchg
cmc
cmpsl
in
hlt
push
cmp
xor
inc
popf
es
mov
xor
push
mov
cmp
xchg
mov
mov
dec
fiaddl
mov
cmc
adc
xor
cmpsl
es
mov
jae
pop
add
popa
mov
push
gs
or
jnp
cmp
aad
shrb
cmc
pop
mov
and
cmc
mov
push
xchg
push
inc
jo
sbb
mov
mov
cmp
adcb
pushf
pushf
push
xor
fiaddl
stos
dec
scas
jge
and
bound
lret
mov
or
enter
rclb
dec
jo
fstpt
loope
pop
fisubs
aaa
in
nop
aaa
jne
dec
inc
cld
je
adc
xor
popa
mov
dec
lret
cmp
call
push
xchg
nop
push
push
repz
test
push
aad
jmp
jbe
xor
push
dec
sub
in
idivl
cmp
fsubrs
ja
jo
xor
xchg
in
mov
insb
jb
cmp
int
mov
iret
mov
pop
mov
in
dec
movsl
hlt
inc
mov
out
pop
lahf
sub
mov
lds
sub
add
mov
popf
fiadds
ds
int3
out
inc
cwtl
xchg
xor
das
clc
mov
jb
cmp
xchg
sub
stos
mov
xchg
loop
in
xlat
stos
jmp
test
imull
add
dec
and
jbe
and
insb
xor
dec
mov
xchg
dec
dec
imulb
daa
ret
mov
sbb
adc
sub
stc
out
imul
ret
sbb
mov
clc
sbb
pop
inc
clc
mov
xchg
mov
out
jne
push
sbb
adc
jns
imul
xor
xchg
add
add
in
jmp
int
cmpsl
mov
sub
aad
mov
adc
clc
dec
xor
pop
cmp
cmp
fiaddl
lcall
adc
or
scas
push
xchg
fwait
iret
push
pinsrw
mov
fwait
dec
jbe
daa
push
jmp
inc
inc
out
movb
aam
xor
push
or
les
adc
xchg
lds
jne
sub
lods
cmc
jae
fstpl
js
dec
dec
mov
in
testl
movsb
scas
xor
int
and
jnp
dec
lret
aam
mov
mov
adc
push
xor
aad
push
lds
insb
outsl
push
mov
push
push
rcrl
push
mov
adc
push
push
push
stc
jmp
pop
js
dec
test
int3
xchg
jns
xor
sbb
adc
cmpsl
scas
xchg
sub
outsl
pop
nop
repnz
cmpsb
mov
ss
mov
fists
jb
mov
mov
ds
mov
push
xor
mov
lret
push
shrb
xchg
lret
outsl
repz
cmp
mov
in
jnp
hlt
mov
fldl
test
sbb
dec
std
mov
cmpsb
mov
cltd
int3
dec
xor
add
sub
sub
adc
ds
loopne
cmp
aad
ja
xchg
or
pop
or
in
in
aam
jg
mov
lods
scas
test
mov
cmpsl
pop
dec
ds
sbbb
aas
mov
lret
aad
inc
gs
lods
rcr
dec
in
aam
xor
cltd
xchg
pop
dec
and
mov
insb
inc
fwait
jns
aas
adcl
pusha
sub
subl
xor
mov
data16
pop
adc
das
push
mov
lret
xchg
pusha
jno
push
push
xor
fcompl
and
je
mov
mov
add
or
les
sub
cs
stos
pop
pushf
lea
call
in
into
out
and
les
gs
popf
lcall
jne
sbb
shlb
dec
scas
mov
jae
pop
imul
scas
or
mov
jecxz
xor
adc
in
dec
sub
push
pop
mov
pop
shlb
out
cmpsl
scas
pop
xor
fucom
jecxz
pop
inc
add
jnp
stc
mov
mov
add
jbe
dec
cmp
fwait
or
into
xor
xor
cmpsl
ret
mov
sub
pop
dec
in
cmpsl
cmpsl
ret
adcb
xchg
popf
or
pushf
in
lret
cmp
xchg
sub
xor
mov
pop
inc
adc
dec
lret
mov
inc
pop
inc
dec
jae
testb
mov
push
adc
mov
adc
hlt
cmp
imul
insl
les
fwait
ja
xor
in
fwait
es
sbb
int
andl
movsb
sub
inc
lds
mov
push
lea
out
fcmovnb
dec
call
cmp
push
cmp
mov
jecxz
fdivp
push
cmp
addl
insl
add
xchg
push
cmc
mov
aam
mov
mov
enter
ss
and
mov
sub
fisttpll
and
cmp
pop
mov
popa
mov
out
jp
jae
mov
repz
js
or
rorl
iret
or
cmp
jnp
xchg
xchg
xor
mov
jb
adcl
jns
mov
or
fmull
fwait
mov
or
dec
scas
jb
ja
mulb
fs
mov
test
inc
push
cltd
adc
aaa
or
xchg
mov
insl
je,pt
test
mov
xor
inc
pop
mov
xchg
aad
imul
push
fstpt
loop
xor
test
jge
fwait
add
add
mov
mov
jle
mov
xchg
pop
jp
pop
pop
loope
bound
inc
lods
rorl
bound
ja
xor
pop
stc
mov
lds
imul
mov
dec
insb
dec
xchg
or
dec
lods
stc
testl
test
add
les
lods
out
sub
xor
les
xor
jnp
test
js
dec
jg
andl
sub
and
jg
pop
dec
push
pusha
mov
ja
mov
popa
fstp
mov
pop
xchg
gs
cmpsb
imul
mov
lods
sbb
cmp
add
sbb
jg
jb
jp
scas
cwtl
sub
pop
sti
pop
adc
mov
std
leave
loopne
fldcw
lods
lods
pop
out
popa
sub
int
jo
repnz
out
sbbl
mov
ret
adc
call
mov
ljmp
sub
sbb
mov
adc
mov
or
cltd
add
iret
cli
loop
push
loop
jae
rcrb
sbb
mov
mov
cmp
mov
imul
mov
xor
fldcw
pop
and
xor
jb
nop
hlt
cmp
push
sub
jbe
rcl
inc
or
leave
insb
inc
out
rorb
addb
popf
xchg
inc
inc
push
insl
mov
faddl
cmpsb
test
cld
jmp
or
adc
inc
push
and
pop
cmc
mov
ja
xchg
push
xor
rol
sarb
add
pop
dec
cmpsl
push
cmp
sub
cmp
mov
push
cmp
das
mov
jmp
adc
pop
enter
xor
aam
movsl
in
addr16
je
movsl
ss
mov
dec
or
int
imul
push
sub
xchg
mov
push
and
in
cmp
push
xor
lds
cmp
dec
inc
stos
pop
push
insb
sub
jne
jo
adc
nop
aad
xor
jbe
push
or
xor
adc
mov
ss
cmpsb
adc
push
cmpsl
jne
xchg
dec
push
jo
mov
fisubs
sub
mov
mov
inc
dec
xor
aam
sub
push
sub
xlat
imul
pop
dec
adc
jp
mov
aam
shll
mov
in
out
xor
leave
inc
jp
sub
in
aad
xor
aad
out
int
xor
add
cmc
mov
mov
int
sub
fcomp
sbb
insb
aad
xlat
xchg
jbe
mov
mov
dec
push
movsb
push
shrl
imul
sub
les
mov
jns
cmpsl
xor
sbb
mov
lret
int
mov
cmc
mov
cmp
inc
mov
and
lea
int
test
jae
jnp
jg
out
lahf
dec
xchg
xlat
push
sbb
scas
sti
fs
pop
dec
ror
push
jle
cmp
mov
dec
cmp
adcb
xor
xor
lret
out
fwait
pop
lret
clc
and
xchg
hlt
mov
adc
dec
fisubl
mov
mov
cltd
fmul
rclb
sub
xchg
ljmp
and
aad
jo
or
out
sub
mov
sbb
pop
or
ret
push
aaa
xor
or
out
sahf
mov
jno
dec
push
mov
mov
out
mov
ror
insl
loope
cmpsb
lcall
and
mov
push
je
in
cld
cmpsl
lret
fidivs
pop
mov
mov
ljmp
mov
cmp
lcall
inc
in
idivl
cmp
sbb
mov
jb
sti
push
cld
xchg
ljmp
stos
fcoml
xchg
mov
xor
stc
insb
sub
or
popa
adcl
pop
mov
add
pop
xor
mov
loopne
les
cmp
push
pop
shrl
dec
sarl
dec
movsb
ljmp
imul
cmp
mov
fldcw
mov
inc
mov
rolb
int
imul
sub
cwtl
orb
cmpsl
mov
push
mov
inc
dec
adc
pop
mov
add
inc
cmp
sub
ss
out
movsl
push
lret
sub
dec
insb
repnz
les
adc
add
xor
andb
pop
outsl
or
aam
cmp
mov
mov
enter
imul
mov
push
mov
shrl
frstor
xchg
int
sbb
add
stos
add
or
insl
pop
cmp
stc
sbb
xor
stos
ljmpw
xchg
pop
ljmp
dec
in
pop
xor
aam
test
mov
idiv
sub
cmc
je
dec
pop
call
inc
rcrb
mov
mov
gs
loopne
pop
inc
push
es
pop
roll
imul
xor
aaa
shlb
ja
jmp
fwait
jmp
cmpsl
cli
push
faddp
popa
pusha
cmp
js
mov
sbb
addr16
mov
leave
push
pop
rorl
push
inc
out
aad
adc
pop
outsb
adc
jmp
movl
push
sbb
mov
sbb
push
movsl
aad
push
loope
jp
mov
pop
sti
mov
clc
xlat
mov
xor
scas
cltd
inc
jle
jl
imul
rdpmc
movsb
mov
pop
scas
rcll
sbb
mul
outsb
lea
jge
inc
adc
add
cmp
fimull
arpl
in
mov
add
mov
add
xchg
cmp
push
movsl
lea
xchg
lret
sarb
dec
cmp
add
fucomp
cmp
lret
mov
sbb
cmp
lods
push
in
push
pop
adc
xchg
push
inc
mov
dec
and
sbb
sub
imul
insl
js
test
mov
loopne
and
aad
es
fsubrs
and
sub
add
das
fiaddl
cli
rorl
negb
fisttpl
pop
stos
xor
sbb
adc
ffree
leave
dec
mov
rorb
pop
xor
movsl
mov
arpl
pop
in
cwtl
jno
xor
jne
mov
fst
incl
and
rep
jbe
out
dec
ja
les
mov
sub
xor
repnz
stos
or
aam
pminub
cmc
imul
js
in
test
or
nop
ret
xor
insb
jg
imull
or
xor
aam
inc
out
push
mov
mov
mov
xor
or
add
das
insb
aad
jge
lods
jo
lahf
ljmp
out
push
push
xchg
dec
pop
imul
sub
xor
flds
in
xor
imul
and
cmp
push
dec
add
mov
orb
push
pop
lcall
cmc
mov
xor
mov
jmp
dec
mov
push
lcall
mov
mov
sbb
loop
hlt
jbe
outsb
movsb
xchg
ror
mull
imul
sbb
add
xor
lods
mov
or
mov
adc
xchg
pop
fisttpl
mov
pop
in
call
adc
imul
insl
inc
mov
out
pushf
xchg
or
and
push
and
mov
sbb
mov
rorl
dec
sub
das
mov
and
jecxz
jo
rcrb
mov
ficomps
mov
popa
and
inc
lret
jge
xchg
mov
xchg
out
lods
mov
push
xor
pop
xor
fwait
adc
cld
sahf
inc
pop
pop
sbb
xor
lret
jb
pop
std
and
dec
jae
jb
ljmp
mov
jno
jmp
mov
push
mov
pop
push
pusha
mov
cli
hlt
test
jle
fmull
jb
xchg
push
adc
jb
add
add
stos
out
push
sti
xor
push
out
sti
mov
mov
inc
add
das
rcrl
jbe
add
fsub
jmp
mov
wrmsr
dec
cmpsl
movsb
push
aad
xchg
and
pop
inc
or
scas
mov
aad
push
movsb
and
andb
pop
sub
sub
sbb
fidivs
cmp
adc
xor
xlat
add
lea
into
ja
sub
bswap
test
movsl
aad
idiv
shlb
movsl
dec
mov
pop
mov
andl
inc
es
cmp
jmp
aaa
jnp
lea
into
sti
out
sbb
out
sbb
les
cmpsl
dec
hlt
into
adc
inc
inc
push
cmpsl
andl
pop
out
inc
arpl
mov
inc
push
out
fstl
into
pop
or
push
and
shll
mov
sub
loope
pop
mov
pop
cmp
arpl
int
push
out
in
xor
aam
dec
mov
cmp
xchg
in
adc
es
sbb
xchg
adc
pop
cmp
int
stc
xlat
xchg
js
sahf
test
add
fldcw
stc
xchg
sub
xor
inc
adc
es
adc
lds
mov
cmp
xchg
xchg
out
scas
ret
in
push
mov
mov
movsb
loope
jns
mov
cwtl
xchg
add
ss
js
mov
pusha
and
mov
ja
cltd
in
or
ret
add
enter
int
jecxz
inc
stos
fwait
aad
pop
mov
flds
into
push
add
arpl
jle
test
aad
mov
aaa
fmull
test
cmp
pop
test
xchg
enter
sub
push
or
sahf
push
adc
xchg
in
fcomip
iret
popf
sub
shrb
jmp
cld
dec
jle
mov
xchg
hlt
pop
gs
lcall
scas
rcll
subl
xchg
push
push
cmpsb
enter
push
xchg
dec
jae
xchg
fwait
mov
push
jnp
and
xchg
in
or
add
cmp
dec
addr16
popf
mov
shl
test
mov
icebp
push
out
aad
notl
add
addr16
adc
aam
jno
out
jg
lea
push
dec
fisttpll
pusha
and
ja
repnz
out
and
jo
mov
cltd
jns
jecxz
imul
loopne
std
aaa
jle
lret
in
sub
cmp
and
push
stos
popa
push
push
out
out
inc
sbb
jg
mov
push
lret
je
rclb
xchg
jb
cmp
stos
psllq
jl
ror
gs
pop
sub
push
test
sbb
adc
mov
dec
nop
imul
in
and
mov
aaa
xor
ds
and
xor
pop
mov
jns
ret
mov
inc
movsl
jnp
xlat
or
cmpsl
push
mov
loope
fsubl
pop
or
roll
or
cwtl
jne
outsl
lahf
xchg
xor
or
sbb
mov
pop
dec
loopne
inc
cmp
and
and
mov
mov
push
pop
dec
jp
sbb
sbb
pop
mov
mov
or
push
test
pop
and
cmp
fistpll
fwait
int3
pop
test
js
dec
das
test
pop
sbb
dec
pop
ficompl
mov
sub
ljmp
cmpsl
rorb
lcall
cmc
lods
inc
insl
rclb
mov
and
sbb
mov
mov
inc
inc
sub
insb
pop
mov
cld
sbb
ficoml
mov
pop
dec
mov
stc
mov
cmpb
test
add
mov
jnp
outsl
loopne
mov
cli
cmp
ficompl
mov
les
xchg
inc
fwait
xchg
xchg
push
movsb
lods
or
pop
daa
fisubl
mov
push
pusha
push
fdivs
pop
clc
dec
mov
movsl
inc
aam
je
and
fadd
pop
mov
icebp
push
xchg
inc
inc
daa
imul
pop
adc
xor
rcrb
clc
popf
sbb
and
mov
jns
movsl
pop
cmpsb
mov
hlt
push
add
and
jae
mov
push
or
int
xchg
sbb
sub
lahf
imul
out
loopne
loope
cltd
push
mov
inc
aam
or
out
mov
pop
dec
or
loope
pop
ljmp
mov
lret
test
enter
lret
push
jns
and
adc
inc
and
or
pop
jecxz
mov
xchg
dec
jmp
inc
int
add
xchg
test
popl
enter
mov
out
int
pop
push
sub
rcrl
jae
sub
notb
gs
insl
pop
mov
iret
in
cld
xchg
or
mov
mov
adc
xor
loopne
mov
mov
movsl
scas
push
mov
loope
imul
aas
shll
sbb
jge
mov
aad
rcl
mov
daa
lret
lret
pop
imul
stc
mov
jge
mov
pusha
or
mov
subl
and
inc
clc
jp
shr
mov
sbb
das
cmp
int
testb
mov
js
clc
test
cmp
xchg
and
int3
lcall
dec
inc
and
imul
xor
cli
add
aas
rorl
dec
rorl
pop
rorl
outsl
rorl
add
add
add
add
add
add
add
add
add
add
rorl
add
add
xlat
rorl
add
add
or
add
in
rorb
add
or
stc
rorb
sbb
or
add
or
and
or
adc
or
sub
or
push
rorl
xor
or
sub
or
cmp
or
xor
or
inc
rorb
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
xchg
sub
add
inc
mov
adc
adc
rolb
fbstp
xchg
mov
inc
les
je
sahf
incl
lock
xor
xchg
mov
sbb
pop
adc
ja
and
mov
fincstp
push
or
lret
dec
inc
dec
sbb
sbb
push
orl
ret
adc
sub
mov
sub
inc
and
lret
pop
adcl
push
and
adcb
sbb
jo
out
pop
xorl
outsb
sub
rorb
sahf
pop
cmp
jg
push
bound
or
and
rcll
test
inc
scas
roll
ret
pop
push
pop
enter
dec
jg
add
int3
pop
jb
lock
in
add
or
adc
add
push
xlat
je
add
dec
jo
mov
pop
and
and
pop
and
add
popa
jmp
lds
inc
test
inc
jns
or
mov
pop
or
les
ss
jg
xor
nop
outsb
sbb
adc
and
les
or
jno
xor
inc
add
dec
adc
pop
in
daa
sub
or
sbb
les
hlt
add
lcall
loopne
add
add
andb
test
sbb
orl
or
cltd
cmp
inc
es
xchg
insb
inc
testl
out
jae
adc
nop
add
dec
push
movsb
mul
and
sbb
add
mov
incl
jmp
pop
pop
ss
and
pop
jbe
and
into
loopne
inc
push
fs
ds
inc
shll
add
or
nop
test
hlt
cld
cwtl
cmc
or
pop
mov
jb
mov
and
cwtl
sub
inc
sub
je
orb
add
shl
xchg
push
js
and
xchg
and
jo
push
push
or
add
scas
pushf
push
and
ss
loope
push
in
stos
into
add
and
cmp
addb
xlat
int3
xorl
inc
loopne
cmp
cmp
in
cwtl
stos
sarb
xor
inc
adc
ja
add
jmp
cmp
xchg
sbb
out
subl
mov
gs
or
or
scas
or
test
les
jecxz
push
in
test
push
out
and
lret
and
mov
cmp
addb
add
lahf
int
dec
cmpl
lods
push
adc
adc
adc
and
and
mov
or
or
aas
add
add
dec
add
add
push
add
mov
inc
nop
add
add
add
bound
push
lret
add
add
xlat
psubsb
or
or
ss
or
adc
push
fisttpl
add
xchg
inc
add
inc
add
inc
pop
int
or
or
inc
or
add
add
fiadds
add
and
and
daa
add
sub
add
sub
dec
xor
ret
fwait
xor
inc
add
adcl
pop
add
gs
or
cwtd
inc
imul
xchg
pop
mov
adc
aas
pop
sbb
adc
or
mov
mov
enter
loopne
or
add
lahf
sub
in
xlat
push
mov
mov
add
cmp
mov
jg
pop
adcb
adc
or
add
inc
inc
subb
mov
cmpsl
mov
add
mov
adc
add
enter
aas
mov
push
adc
sub
and
fimull
orb
js
xchg
jge
or
push
add
adc
xchg
xor
jg
cltd
lods
sti
rclb
pop
enterw
and
dec
and
loop
ja
loope
add
adc
add
lret
jle
nop
out
nop
cmp
aam
sub
fwait
mov
dec
push
call
cmpsb
repnz
daa
in
data16
push
sub
mov
or
mov
mov
subb
add
stos
call
dec
leave
xor
in
cmp
inc
adc
fldl
adc
xchg
adc
cld
xchg
sbb
cwtl
or
subb
mov
lahf
mov
or
mov
cmpsb
add
add
dec
scas
mov
ss
xchg
or
push
lret
fsubs
xor
and
in
and
cli
and
cld
and
dec
mov
and
test
mov
mov
and
ja
and
push
and
pop
loopne
xorb
lods
and
sub
sub
push
sub
add
enter
in
cmp
adc
or
sub
push
mov
es
adc
xchg
dec
sbb
roll
cltd
add
fildl
rcr
add
add
icebp
add
fcoml
add
std
pusha
clc
inc
xor
in
dec
mov
sub
mov
mov
test
sahf
rolb
mov
subl
xor
xlat
xor
pop
scas
cs
cmp
push
stc
xchg
add
ds
pushf
loop
out
sub
inc
sub
push
cs
push
add
mov
outsl
cmp
mov
sub
call
and
add
add
add
jmp
in
add
cli
add
cld
add
add
push
xchg
fwait
and
or
and
dec
pop
xchg
mov
mov
in
inc
pop
nop
mov
adc
xchg
add
push
and
xor
hlt
aaa
sarl
inc
add
add
adc
add
pop
add
jne
sahf
gs
cmp
sub
push
adc
inc
addr16
jp
sbb
add
or
fnsave
inc
pushf
ja
lock
push
add
les
cmp
xchg
xor
ficoml
ficoml
or
push
imul
shl
xchg
pop
xor
enter
mov
or
jle
orb
mov
mov
cmc
adc
int3
add
popl
xchg
pop
sarb
cmp
faddp
adc
and
xchg
lds
aas
inc
xor
xor
sub
add
ja
mov
and
cmp
insb
cmp
cli
mov
cmp
inc
sub
xorb
mov
shlb
aas
push
add
dec
mov
inc
push
or
and
ss
or
adc
adc
adc
adc
outsl
add
adc
mov
dec
mov
pop
sbb
jb
xor
mov
incl
cmp
add
lea
add
fldl
js
cmp
cmp
andb
pop
sub
nop
lock
movsb
sub
clc
adc
pusha
adc
lea
mov
clc
or
gs
rcrb
inc
mov
inc
inc
pop
jecxz
scas
pop
add
and
xchg
hlt
pop
fistpll
stc
add
ret
jne
push
pop
cwtl
dec
jge
add
cmp
sub
or
arpl
mov
mov
add
add
cltd
outsl
pop
mov
iret
pushf
shlb
in
out
mov
and
cmpsb
inc
cmp
ret
sub
in
loopne
les
mov
and
inc
and
icebp
xchg
aad
cmpsb
jbe
sbb
mov
fsubs
mov
addr16
push
loop
mov
in
or
jl
jb
clc
stos
pop
jne
adc
push
xorb
subl
mov
mov
sbb
sbb
add
add
push
add
add
shll
mov
or
pop
xchg
pop
add
push
add
shll
cmp
popf
add
add
jmp
and
jno
pop
adcb
and
push
addb
popa
fdivl
add
push
pusha
ljmp
adc
jnp
push
xor
lcall
scas
pop
pushf
jge
or
out
fs
out
mov
push
inc
daa
or
xchg
fstpl
outsb
add
mov
pushf
out
pop
push
push
add
or
imul
stos
or
insl
aaa
add
pop
or
inc
pop
sub
cmc
and
loop
add
pop
mov
jno
and
std
mov
add
push
cld
mov
xor
arpl
subb
das
mov
test
sbb
lods
notl
sarb
daa
pop
pop
push
add
adc
out
addl
fldl
fisttpll
outsb
mov
shrb
push
and
int3
sahf
jne
lret
xor
jbe
adc
push
add
mov
ljmp
and
and
jle
push
add
lea
sbb
sub
or
outsb
add
outsl
add
jo
in
add
xor
mov
add
fldl
jmp
in
or
mov
insl
adc
movsb
add
mov
lea
popf
or
jnp
inc
test
por
jmp
stos
ja
mov
xor
xchg
test
dec
data16
or
lea
mov
cmpsl
inc
lds
shl
push
fs
hlt
jb
test
inc
pop
xor
sbbb
add
cmpsl
adc
in
add
insl
jle
or
xchg
inc
popa
adc
xchg
push
adc
mov
and
cltd
xor
shrl
push
adc
sub
test
repnz
add
jb
cmp
mov
and
movl
sbb
push
in
jp
mov
xor
test
fdivrl
cmc
mov
adc
cmp
adc
roll
out
mov
out
sar
insb
enter
and
dec
scas
in
push
jp
rcrb
jle
add
mov
xor
inc
xchg
add
sub
cmpsl
mov
adc
mov
fidivrs
add
inc
subl
and
jae
add
shrl
scas
push
lret
inc
push
xchg
jne
pop
scas
rorb
cmp
adc
mov
iret
dec
shrl
add
in
nop
call
cmp
mov
mov
loopne
aaa
or
cwtl
dec
and
or
sti
and
mov
or
stc
jb
into
cmp
push
cwtl
jne
mov
and
cmpsl
add
adc
push
jae
jp
lahf
sbb
push
cmp
sbb
icebp
xor
inc
xor
out
adc
out
cmp
ljmp
jae
fildll
lods
leave
push
scas
adcl
or
sar
nop
add
push
roll
popf
mov
insb
fsts
sbb
push
or
ja
test
mov
repnz
repz
bound
dec
push
add
daa
aad
loope
add
adc
lret
mov
aas
dec
test
repz
push
add
js
jl
sub
and
jb
icebp
push
dec
popa
scas
mov
mov
es
jns
sbb
jbe
and
and
dec
orl
mulb
rorb
xchg
mov
outsb
jae
loop
add
mov
lret
jmp
mov
xchg
cmp
sub
sub
or
in
in
icebp
dec
sub
xor
cmp
lods
faddl
call
movsb
xchg
adc
add
stc
or
fdivs
fldt
push
mov
push
sbb
dec
pushl
hlt
cmp
shlb
sub
add
fsubs
add
inc
lgs
fwait
jg
xchg
leave
add
push
or
lahf
clc
push
add
lret
movb
clc
mov
fistpll
movsl
push
aaa
or
pop
test
mov
cltd
lock
or
xchg
or
adc
mov
icebp
je
or
jb
add
jno
std
andb
or
js
mov
jmp
jp
and
add
inc
fists
jecxz
mov
cli
pop
cmpsb
fisubs
cwtl
jmp
inc
test
or
mov
sbb
mov
sub
ss
dec
and
ljmp
dec
rcrb
inc
xchg
mov
push
out
fnstsw
or
in
push
and
mov
add
jns
dec
and
lcall
jmp
dec
dec
add
enter
pop
add
fwait
inc
adc
bound
xor
jo
sbb
shlb
jge
sub
dec
lahf
xor
add
xchg
jmp
leave
add
in
test
lret
sbb
sbb
fnstcw
sbb
add
data16
add
hlt
cld
xchg
sbb
popa
cmp
pop
or
mov
mov
inc
adc
inc
adc
movl
dec
sahf
mov
and
xchg
and
iret
adc
imul
enter
add
mov
mov
fldl
cli
inc
lea
mov
inc
mov
sbb
das
movsb
cmp
mov
addl
cmp
or
aaa
and
cmp
mov
jmp
sti
pushf
push
jle
push
xlat
pop
ret
jns
ss
push
or
sub
sbb
cmp
add
int
lock
out
mov
push
es
repz
insb
add
add
dec
imul
mov
mov
in
or
loope
fidivrl
adc
sarb
idivb
insb
add
adc
inc
push
xor
push
add
pop
pop
and
inc
pushf
or
rorl
jno
lds
loopne
aad
adc
inc
stos
cmpb
in
push
negb
jl
pop
adc
leave
or
rolb
ja
fwait
pop
xchg
cmpsb
add
sti
and
hlt
pop
push
add
xchg
clc
inc
icebp
nop
mov
inc
dec
loop
or
sub
xchg
ret
xor
dec
in
fistpll
iret
or
and
out
out
jae
cmpsb
xchg
loop
je
enter
mov
popa
es
rorb
into
pop
addb
in
sar
aad
sti
subb
xor
sbb
iret
adc
pop
mov
fwait
push
dec
jns
mov
sbbl
jg
clc
add
mov
or
mov
test
xor
andl
jmp
adc
adc
sbb
add
loopne
and
xchg
test
lods
and
cmpsb
hlt
fisttpl
mov
je
out
rolb
push
push
popl
and
and
add
mov
mov
push
xorl
fldl
push
fsts
jmp
inc
push
add
ficoml
adc
adc
and
incl
add
jo
rolb
std
or
add
ret
movzwl
out
jmp
push
mov
and
sub
add
and
pop
pop
sub
shl
out
jmp
mov
xor
test
lret
ret
sub
pop
sub
or
or
add
lahf
add
mov
mov
jbe
pusha
js
shr
jmp
sub
je
inc
cmp
call
mov
add
lret
out
adc
add
pop
and
dec
mov
sub
enter
in
push
pushf
sbb
test
inc
add
jg
sub
and
shr
push
and
xor
mov
xor
out
mov
or
sahf
sub
shl
shr
in
shlb
inc
sub
aam
mov
in
adc
add
call
call
fistps
push
inc
add
adc
iret
call
test
push
sbb
arpl
or
sub
lret
mov
mov
sub
push
mov
jmp
add
neg
test
cs
pop
movsl
mov
push
push
into
add
and
pop
not
inc
pop
out
xchg
jae
ret
cmp
fcoms
seto
xor
sub
ret
and
neg
loop
sbb
out
adc
mull
fimull
loopne
lods
dec
test
inc
cmp
jbe
test
dec
sahf
jmp
mov
push
imul
pop
dec
dec
xchg
xchg
mov
or
clc
xchg
test
ljmp
push
pop
stc
dec
and
add
int
mov
fcoml
rcll
cmp
sub
jns
xchg
shr
mov
xor
jecxz
inc
push
dec
idiv
and
mov
push
add
stc
cwtl
lahf
orl
and
and
rcll
sti
cmp
test
addr16
pop
adc
inc
popf
and
nop
neg
mov
in
push
pop
pop
mov
xor
fcoms
add
xchg
push
pop
pop
cmp
std
xor
lea
mov
pop
inc
cwtl
xchg
inc
mov
push
fistps
cwtl
or
and
cltd
shlb
subl
xor
or
push
not
adc
or
jmp
mov
aam
stos
outsl
imul
movsb
add
adc
push
pop
adc
ljmp
add
jae
mov
popa
pop
push
sbb
es
shl
out
adc
icebp
inc
loop
stc
bound
ds
ljmp
add
fstps
xchg
ljmp
nop
push
rcrl
scas
fldenv
push
add
jecxz
in
inc
sbb
test
jp
xor
loop
add
or
pop
mov
push
cmp
pop
subb
and
ficoml
adc
mov
or
and
mov
sub
inc
pop
add
jge
ss
dec
push
pusha
mov
mov
cmp
mov
inc
xchg
and
xor
aas
rclb
mov
xor
push
inc
call
addb
sbbl
pusha
rcrl
push
movsl
lret
inc
test
push
sbb
not
xchg
lret
jg
or
rclb
movsl
add
adc
cli
addb
mov
jle
bswap
aaa
pop
sbb
pop
or
in
pusha
addr16
inc
jne
cwtl
loopne
pop
pusha
or
popf
sub
or
imul
add
inc
pop
test
into
xor
lock
sub
cwtl
repnz
fcoms
ja
int
push
rol
xor
mov
sbb
andl
jg
xchg
mov
add
shr
inc
pop
pusha
pop
or
mov
jo
shll
pop
push
cs
or
mov
jmp
dec
ja
and
cwtl
and
iret
test
not
mov
gs
dec
movsl
icebp
add
fs
mov
sbb
lea
pop
xchg
xchg
ss
add
shl
cbtw
adc
into
movl
mov
insl
xor
dec
ja
xor
dec
out
loop
xor
inc
mov
pop
pop
push
aaa
jecxz
hlt
jns
inc
mov
push
out
out
test
rol
xor
imul
shll
or
aaa
cmc
mov
add
pop
sbb
push
mov
sub
das
or
cmp
aaa
lds
inc
testb
push
inc
mov
cltd
or
mov
jmp
xor
mov
ret
dec
pushf
cmpsl
mov
adc
and
xchg
and
jp
pop
lds
cmc
xor
or
push
sub
adc
cwtl
rcr
data16
and
inc
adc
xor
xchg
cmp
xchg
add
pop
ret
pop
jno
out
xorps
add
pop
push
testl
or
add
lods
ds
inc
add
sbb
sbb
mov
mov
fisttpl
cs
push
jnp
or
and
ret
pop
add
lea
cmp
or
int3
arpl
add
sbb
bound
pop
testb
add
adc
xchg
cmp
adc
sub
push
dec
mov
mov
pusha
cmp
fbstp
jo
dec
lds
sub
dec
pop
xchg
push
inc
nop
add
data16
ljmp
adc
testl
aaa
xor
jp
fwait
sub
cmp
incl
push
dec
push
gs
pop
mov
pop
adc
mov
ret
sub
pop
daa
sub
stos
mov
inc
push
add
xor
mov
xor
repnz
mov
inc
push
mov
out
rolb
mov
mov
int3
mov
or
cmp
dec
and
mov
push
adc
and
movsl
cwtl
iret
mov
sbb
mov
mov
pop
or
xchg
ret
sub
xchg
add
subb
clc
andl
inc
out
pop
inc
push
mov
mov
nop
mov
in
add
push
push
pop
pop
add
les
dec
imul
fistpl
faddl
and
cmpsl
icebp
repnz
inc
inc
mov
test
push
fmuls
mov
push
inc
arpl
adc
sbb
sbb
adc
aas
xor
push
in
lds
adc
arpl
add
mov
add
push
mov
fs
pop
loopne
xchg
fldl
cs
push
ffree
mov
aaa
popf
add
mull
inc
jp
and
loope
sbb
mov
nop
pop
hlt
out
pusha
and
adc
add
pop
or
aas
jg
adc
xchg
and
cmpb
cwtl
push
ffree
test
push
fcmovnbe
add
notb
mov
and
popa
or
call
out
out
hlt
jecxz
dec
mov
push
xor
shl
data16
pop
mov
jo
dec
push
push
dec
lret
test
add
out
int
mov
adc
adcb
mov
sbb
xchg
cmp
ret
fdivl
cmpb
loopne
imul
add
fisubs
push
cs
cltd
xchg
mov
xchg
inc
xchg
inc
mov
inc
adcb
aaa
mov
sbb
pushf
pop
lea
adc
int3
xchg
inc
test
xchg
dec
in
sbb
aad
pop
dec
setno
cmp
fisubrl
sbb
or
fs
jnp
xor
mov
pusha
push
cmp
fbstp
push
aas
and
out
add
sub
mov
xchg
mov
sbb
cmp
mov
inc
inc
jne
dec
mov
push
push
cmp
bswap
xor
sub
pop
cmp
je
clc
in
inc
adc
or
pusha
add
sbb
loopne
not
push
inc
mov
out
push
cs
imul
dec
cmp
sbb
xor
jge
test
test
loope
inc
adc
add
pushf
push
mov
lds
out
xor
mov
ret
pop
add
fsubrl
or
cli
sub
test
mov
pop
out
cmp
mov
adc
shll
dec
or
inc
add
nop
lds
push
inc
inc
mov
mov
xchg
pop
add
repz
test
xor
pop
cmp
dec
adc
and
and
xchg
test
iret
gs
dec
inc
and
dec
adc
divb
mov
subb
pop
pop
lcall
sub
lods
imul
shll
push
std
and
test
cltd
jg
dec
lock
jb
adc
or
cwtl
adc
push
rcr
push
repnz
mov
les
mov
mov
sub
loopne
out
and
adc
xchg
inc
or
stos
or
ret
and
ret
btr
addl
mov
scas
js
pop
dec
testl
lds
add
ret
ffree
fcmove
testl
cmp
hlt
or
pop
xchg
push
sbb
jne
fisubl
clc
les
test
pop
addl
or
dec
int3
add
mov
lret
leave
ret
sub
inc
test
adc
cmc
xor
fldl
sub
mov
mov
test
add
dec
inc
loop
nop
sbb
aaa
mov
sbb
dec
mov
popf
in
ret
add
into
imul
iret
xor
mov
pop
add
dec
not
or
aam
lret
addl
dec
add
test
push
je
into
jo
add
sbb
jnp
stc
mov
pop
pop
add
mov
xor
je
dec
adc
inc
adc
push
mov
jecxz,pt
dec
rcll
ljmp
icebp
xchg
xchg
lds
and
rcrl
mov
pop
xorb
dec
pop
inc
and
mov
cmp
or
inc
sbb
daa
add
lret
fs
pop
jne
dec
jnp
xorb
xchg
inc
es
sub
mov
and
adc
mov
push
cmp
pop
jge
std
push
and
clc
cltd
orl
adc
inc
roll
inc
cltd
jge
or
movsb
adc
xor
dec
xor
add
frstor
cmp
repz
rcll
xor
jb
aaa
xchg
cmp
jle
sub
pop
jns
orb
push
rcrl
xchg
loope
mov
stc
xchg
sbb
xor
xor
into
dec
mov
add
pop
les
sub
xor
lock
inc
lcall
dec
call
pop
not
xor
or
movsb
mov
test
pop
sahf
push
or
les
sub
cmpsb
cltd
add
iret
lods
adc
ret
and
imul
sub
shl
sbb
in
add
cmpsb
and
cmpsb
lahf
add
push
leave
mov
pop
xchg
add
pop
mov
mov
lods
leave
out
or
xlat
or
xchg
aad
out
add
mov
cwtl
movsb
bound
mov
mov
lahf
jae
pop
sbb
enter
sub
add
xor
nop
cld
mov
popl
sti
mov
fcom
inc
insb
pusha
jae
cmp
aaa
aam
fmuls
push
iret
lret
addb
rorl
and
adcb
and
inc
mov
dec
in
das
and
rorl
push
or
push
sub
out
adcb
rolb
mov
adcb
test
add
mov
seta
add
iret
push
inc
xchg
xor
xchg
movsb
sub
test
push
test
adcl
mov
pop
cmpsl
cmp
repz
xchg
push
movntq
aam
js
sahf
pop
fs
pusha
int
loopne
or
bound
sub
inc
push
inc
sub
dec
inc
add
lret
int3
pop
sub
int
adcb
add
in
mov
push
fs
cmp
dec
lods
adc
inc
mov
sar
fsubrs
cmpsl
test
pushf
jnp
icebp
shll
sub
and
fs
outsb
not
jno
push
push
lea
jne
sub
dec
andb
loopne
xchg
dec
or
xchg
mov
xchg
inc
or
repnz
ret
jecxz
mov
lret
sbb
mov
xchg
ljmp
cmp
out
fldcw
push
cmp
mov
cmpl
mov
hlt
jbe
or
adc
rcrb
dec
push
rcrl
movsb
cmp
aas
jecxz
dec
imul
mov
jno
fcompl
cld
dec
sub
xchg
inc
out
negb
xorb
push
addr16
add
pushl
enter
mov
subl
push
jno
leave
xchg
push
pusha
push
cmp
in
adc
bswap
xor
mov
mov
ja
pop
addr16
and
iret
xchg
pop
sub
or
sub
fdiv
pusha
out
inc
adc
ret
das
loopne
push
push
pop
pop
cmp
aam
sbb
jne
scas
jg
ret
adc
add
jno
lahf
sbb
jecxz
ja
jne
out
aad
imul
ret
aas
dec
call
add
rorl
dec
orb
add
sbb
xor
sbb
mov
xor
xor
pusha
insb
bsf
es
add
cmp
push
je
fsubrs
dec
ret
push
loopne
mov
out
xchg
xor
inc
inc
nop
jl
movsb
add
test
add
call
dec
mov
ret
or
xchg
inc
jbe
add
cmp
test
scas
dec
mov
adcl
lret
adc
xchg
sarl
ljmp
sub
icebp
dec
lea
call
pop
movb
mov
cwtl
mov
add
fwait
test
add
mov
mov
sbb
js
jbe
sub
jo
insb
adc
out
mov
scas
and
cmovnp
imul
fiaddl
sahf
std
or
sbb
xorb
in
sarb
mov
ret
inc
adc
das
in
add
push
mov
and
jno
dec
bswap
fcmovnb
cmpsb
sub
fwait
int
push
pop
pop
add
add
push
add
test
push
push
mov
xor
negl
lea
aad
push
mov
xchg
mov
popf
sbb
mov
arpl
add
les
xor
push
enter
xchg
or
data16
mov
add
sub
sbb
addb
rcll
xlat
addb
xchg
fiadds
shrl
jbe
push
enter
aad
push
imul
ljmp
xor
jle
js
fnstcw
sahf
je
or
mov
mov
test
mov
adc
pushf
and
repz
inc
fisubs
out
popa
cmp
sbb
cmp
insb
add
daa
push
ret
dec
mov
pop
adc
xchg
arpl
inc
jbe
xor
fcoml
pop
test
dec
dec
rclb
add
call
pusha
int
icebp
in
aas
cmp
or
pop
lods
fdivrs
push
movb
dec
insl
jno
cmp
xor
pop
xor
mov
leave
jge
jno
and
and
dec
inc
rolb
mov
test
and
psubusw
push
jecxz
xor
cli
pop
and
mov
mov
jmp
ret
mov
shll
clc
and
push
aaa
and
bound
adc
andb
icebp
int3
xor
pusha
inc
test
in
and
or
cs
add
lret
int3
push
mov
pusha
adc
or
mov
inc
aad
jae
xchg
xchg
xchg
shll
pop
loope
mov
adc
das
mov
pushf
xchg
faddl
cmpsb
rcll
call
mov
fstps
xchg
adc
add
jb
outsb
scas
je
popa
int
shl
sub
mov
mov
test
inc
adc
sbb
pop
dec
push
inc
mov
dec
push
and
jo
das
mov
push
mov
cmp
les
cmovns
mov
cwtl
pop
sub
stos
dec
rcr
pop
mov
aam
loop
or
dec
test
dec
and
imul
push
clc
fcoms
lret
mov
inc
xchg
cmp
inc
mov
xor
daa
icebp
test
cli
and
inc
mov
and
add
and
ljmp
sub
movsl
dec
cmpsb
es
add
cli
sub
mov
or
and
popa
lahf
les
sub
add
inc
fnstenv
inc
loop
mov
pusha
repnz
test
or
test
mov
or
mov
sbb
popf
push
cmp
pop
sarl
push
mov
xchg
jae
fildll
stos
mov
nop
pop
or
or
cmp
lahf
push
lret
jae
das
ret
sbb
push
xchg
into
pop
addb
push
push
jo
rcll
leave
addr16
cmp
xor
shlb
jecxz
push
cmp
loope
adcb
cli
in
leave
lahf
pusha
mov
out
std
mov
into
cmpsb
mov
cmp
sub
int3
jbe
pop
cli
jnp
or
sub
ffree
sub
add
cmpsb
ljmp
pusha
xchg
pop
pop
push
mov
or
divl
sahf
cmpsb
jae
adc
std
add
cmp
xor
cmpsb
rcr
daa
cltd
fs
xchg
sbb
addr16
xlat
cwtl
xchg
sar
sbb
ss
movsb
dec
and
aaa
adc
lcall
mov
and
les
xchg
add
dec
lods
cli
sub
sub
repz
ror
sub
push
ret
xor
cmpsb
nop
add
dec
mov
icebp
add
push
mov
ljmp
movsl
pop
push
lea
cwtl
mov
adc
mov
adc
xor
stos
mov
roll
pop
xor
out
inc
jbe
push
add
stos
loopne
pop
xor
sbb
in
fwait
mov
sbb
lcall
add
out
and
test
js
jbe
xor
sbb
enter
adc
xor
cmc
cwtl
leave
inc
in
jo
or
out
xchg
mov
mov
inc
lret
push
stos
mov
test
push
pushf
add
repz
fstpl
mov
push
add
xor
and
cmp
xchg
mov
into
gs
shrb
nop
sbb
insl
movlps
nop
push
xchg
sub
ss
dec
test
xor
dec
dec
lret
mov
xor
scas
mov
adc
fdivrs
ret
not
cwtl
ret
adc
mov
sti
pusha
sbb
mov
mov
jnp
xchg
sub
fsubs
mov
gs
push
inc
mov
add
mov
inc
das
cmp
pop
ret
inc
mov
add
xchg
sub
jmp
dec
add
push
test
outsb
mov
push
lcall
push
test
sbb
insl
ret
jl
pop
jp
xlat
faddl
jbe
dec
add
add
bound
scas
arpl
or
jo
stos
stc
mov
repz
or
fdivs
stos
mov
and
aam
push
inc
filds
cmp
pop
insl
and
push
fs
push
dec
xor
icebp
test
fnstenv
pusha
adc
jmp
cld
dec
bswap
pusha
dec
sub
push
call
adc
add
sysexit
xor
pop
outsl
jg
and
sbb
sbb
or
das
xchg
push
xor
adc
xor
cmp
xor
jns
lahf
inc
int
cmc
mov
nop
inc
pop
je
cmp
dec
sub
rcrl
lds
xor
and
mov
mov
add
adc
in
jno
idivb
inc
cmp
clc
cld
leave
jb
dec
insb
mov
pop
or
xor
in
ret
jmp
xchg
jb
adc
and
push
adc
add
aas
fucomip
mov
insl
push
add
xchg
sbb
jge
jg
out
data16
ret
data16
push
les
add
cmpsb
and
scas
pop
pop
int
aas
cld
je
sbb
jle
xor
or
int
push
xor
fidivs
or
pop
test
push
leave
loop
mov
lock
je
push
mov
pop
sbb
jge
sub
fldcw
mov
dec
xor
movsb
push
cmc
in
cmpsb
sub
dec
aad
mov
sub
bound
lea
lcall
arpl
arpl
pop
xchg
test
daa
inc
add
test
rorb
lods
sarb
push
aas
mov
out
fisubs
lcall
sti
xchg
repnz
movsb
rclb
adc
les
rcll
pop
or
fs
fst
call
jb
arpl
fcoms
xchg
mov
ss
enter
sbb
push
sub
mov
xchg
xchg
pop
out
enter
js
popa
pusha
test
adc
jae
js
fisubl
push
sbb
mov
xor
rolb
cmc
loopne
imul
out
popf
daa
add
xor
sub
pop
popf
lea
data16
jecxz
dec
stos
add
movsl
xlat
push
sbb
mov
and
fs
or
sub
das
sbb
dec
inc
cmc
xchg
cli
sub
orl
scas
pop
ds
es
adcl
add
data16
gs
jge
test
ljmp
divl
pop
inc
xchg
jae
xchg
dec
lods
push
fisubl
mov
and
pop
push
xor
cwtl
test
bound
stos
cmp
adcl
lds
and
mov
sbb
fadd
sub
xor
dec
lcall
dec
sbb
imul
cmp
xlat
and
mull
pop
test
fistpll
mov
inc
movsl
cld
jns
popf
in
xchg
lcall
cmc
dec
and
xlat
jbe
xchg
xchg
sub
jno
sub
mov
shll
ficoml
push
imul
inc
xor
sbb
cmpsl
fistl
sti
or
adc
jnp
rcrl
mov
int3
add
sbb
or
inc
sub
stc
popa
sbb
sub
test
ret
adc
xchg
pop
sahf
test
stos
sub
sbb
jmp
sbb
jns
addr16
bound
aam
mov
lds
jno
pop
ljmp
ficompl
jl
insl
adc
arpl
push
fs
add
fnsave
sub
test
dec
lret
cwtl
subb
in
cmp
jg
sbb
push
repz
imul
mov
add
mov
loop
imul
adc
mov
jmp
push
xor
add
mov
movsb
inc
js
lods
js
fwait
push
mov
orl
stos
and
fs
into
xchg
xchg
sub
and
cmp
xchg
sub
xchg
daa
push
sbb
mov
loopne
and
test
and
jle
nop
sub
sub
fcomps
and
loop
cmp
movsl
cltd
addl
pop
in
cltd
adc
addl
lea
sbb
sbb
gs
fdiv
das
loopne
jmp
outsl
mov
fadds
sbb
push
imul
dec
xchg
fisubs
dec
push
leave
std
mov
insl
or
add
xchg
sbb
clc
decl
pop
jno
adc
cmp
fs
imul
lahf
repz
mov
aas
dec
xor
mov
mov
out
mov
cmp
stos
mov
mov
or
or
stos
addr16
std
int3
jnp
cmc
pop
ss
inc
jmp
das
cli
adc
jle
fs
dec
xchg
xchg
js
push
mov
push
xchg
inc
inc
out
mov
mull
std
mov
inc
fnstenv
in
cld
xor
xchg
mov
call
or
movsb
subl
mov
mov
push
mov
clc
adc
and
mov
mov
gs
mov
sub
test
mov
xchg
test
loop
inc
xchg
push
sub
pop
std
and
jns
jne
pop
add
and
in
lds
push
sub
fmul
fistpl
data16
fidivrl
mov
dec
outsl
dec
cltd
cmpsl
insb
add
push
add
pop
inc
pop
push
xchg
dec
aam
jns
pop
push
movsl
outsb
shll
sub
insl
push
jecxz
andb
dec
push
scas
sbb
into
add
insl
jle
aas
xor
mov
repnz
pop
inc
mov
cmp
flds
enter
and
jg
pop
fnsave
jmp
mov
cld
dec
inc
lea
inc
xor
pop
insb
int
jle
sub
pop
hlt
insl
stos
sar
cmp
and
test
pop
pop
jmp
jge
andb
sbb
sbb
mov
imul
mov
test
ja
in
inc
jno
sbb
add
mov
shrl
sar
pop
insb
push
push
loopne
cmpsl
or
jno
fadd
mov
adc
jb
add
jge
repnz
out
pop
mov
out
xor
add
imul
imul
mov
sbb
aas
xor
push
data16
or
out
jbe
jo
xchg
lahf
jl
push
mov
in
push
rorb
notb
push
movsl
fdivrl
fs
sbb
dec
and
in
fcomps
into
dec
cmp
xorl
xchg
jge
add
imul
insb
cmp
hlt
pop
es
adc
negl
pop
aas
add
gs
pop
adc
hlt
xor
add
xor
out
cmp
movsb
in
add
sbb
xor
sub
lcall
sbb
sbb
adc
je
push
pushf
outsl
add
mov
outsl
scas
mov
ss
xor
add
adc
insl
jp
xchg
inc
xchg
jp
fmull
stos
cmp
jp
mov
aaa
ret
dec
cmp
xchg
dec
lea
pushf
lea
cmp
sub
aam
adc
insb
jno
dec
adc
imul
fs
inc
jno
and
nop
add
loopne
push
lret
cmc
movl
adc
lret
pop
bound
lret
mov
aam
sbb
or
and
xchg
inc
fcmovne
in
pop
push
inc
data16
pop
add
in
and
add
cwtl
loopne
inc
pop
and
inc
mov
lds
rcrl
repz
and
ror
ss
testl
shll
xor
shrl
jne
in
or
cmpsl
xchg
aas
xor
andb
js
outsl
int3
gs
sbb
cltd
jmp
lret
lods
jge
fwait
popf
jbe
mull
add
clc
dec
cmc
les
xchg
mov
pop
dec
jnp
loope
ss
into
xchg
xor
cmpsl
mov
ds
inc
push
push
and
leave
mov
and
jbe
addr16
pop
mov
jmp
push
scas
or
jae
scas
sbb
mov
push
and
push
pop
or
insl
and
inc
or
fldl
test
sbb
daa
mov
sub
sbb
es
pushf
outsb
fmull
xor
int
test
fildll
push
inc
mov
xor
dec
outsb
jecxz
daa
adc
inc
adc
int3
inc
out
je
adc
jae
int
push
lock
pop
fisubrl
pop
aas
fdivrs
ja
popa
inc
sahf
popa
arpl
lods
test
push
addr16
scas
pop
mov
push
dec
jae
in
mov
jp
sbb
in
add
mov
adc
das
rclb
mov
jle
xchg
sbb
sbb
ljmp
mov
repz
cmpsl
push
jo
xchg
push
nop
cmc
mov
mov
stc
iret
shll
ffree
cmp
mov
jecxz
loopne
cwtl
or
push
test
scas
or
bound
xorl
ljmp
test
and
js
sbb
out
and
mov
dec
shrl
push
push
decl
out
sbb
mov
mov
js
cmp
decl
loopne
xchg
mov
cmpsl
xorl
push
push
fs
fs
hlt
xor
mov
in
adc
mov
shrl
sahf
outsl
adcb
sub
nop
pop
push
mov
xchg
stc
bound
dec
xor
fidivl
push
aad
jno
clc
sbb
cmp
adcb
xchg
push
mov
js
mov
xor
lcall
sub
sahf
add
mov
neg
xchg
xorl
ds
shll
inc
jmp
lds
imul
mov
aad
daa
fs
shlb
roll
sub
or
cmpsb
dec
sbb
sarl
adc
loop
sub
leave
xor
pop
and
sub
jecxz
cmp
aaa
lret
add
in
popf
push
jecxz
sub
decl
int
sub
outsl
pusha
aad
mov
add
push
add
jo
xor
addr16
es
adc
inc
push
mov
outsb
add
sbb
out
repz
lahf
add
ret
repz
push
xchg
mov
adc
dec
jb
push
sarl
stos
pop
mov
xchg
pusha
xchg
push
ss
xor
shll
push
and
mov
dec
or
or
mov
ss
inc
outsl
leave
fs
in
aad
pusha
pop
xorb
inc
in
lret
jae
cmp
dec
sub
pop
or
fdivrl
xor
add
repnz
popa
push
int3
data16
cmp
pop
add
mov
lret
shll
sbb
pop
jbe
sub
fisttpl
fwait
rorb
cmp
xor
jmp
inc
mov
mov
dec
gs
addl
mov
sub
mov
add
daa
pop
shll
mov
xlat
push
loope
dec
mov
lret
testb
inc
jmp
mov
xchg
sti
pop
add
jo
subl
pop
xchg
cmp
push
in
dec
xor
leave
xor
outsl
sbb
popaw
test
inc
jl
push
leave
leave
push
xchg
inc
sahf
enter
cmpsl
test
leave
or
inc
lret
call
cmp
xchg
add
bound
mov
sbb
leave
ss
ljmp
jge
push
scas
std
int3
stc
add
push
jne
lret
adc
mov
sti
call
movsl
adc
out
cmc
pop
dec
push
repz
ss
xchg
insb
push
mov
stos
add
cmp
addr16
sbb
movsl
sti
gs
insb
inc
or
push
push
dec
insb
or
jmp
or
and
movsb
lahf
and
xor
je
outsl
push
inc
nop
pop
cld
test
outsl
add
std
out
and
and
push
pop
repnz
jecxz
xlat
mov
sarl
loope
mov
sub
lcall
int3
ljmp
std
mov
xor
mov
out
xchg
outsb
jo
aaa
scas
inc
pushf
mov
in
fucomp
sbb
add
mov
lret
dec
push
inc
ds
fidivrl
cmp
loope
cld
bound
and
mov
negl
data16
icebp
mov
xchg
leave
and
out
shll
adc
in
js
out
jl
iret
in
jg
shll
arpl
or
xor
mov
or
js
dec
push
popa
inc
rolb
ret
mov
enter
rclb
xor
add
adc
jbe
mov
nop
sub
push
popf
add
ljmp
dec
cmp
or
fsts
adc
pop
inc
loop
sbb
xchg
fisttps
xchg
xor
pop
bound
out
adc
iret
lea
push
jbe
movsb
cmpsl
sub
jo
ja
cmp
and
push
outsl
pop
inc
in
jno
cmp
dec
insb
lret
adc
notl
sbb
je
sub
cli
ja
and
sbb
out
jne
stos
push
mov
in
mov
mov
sub
sub
pop
iret
xor
push
mov
pop
idivb
adc
add
push
in
sub
out
test
clc
and
dec
xchg
jge
mov
fcompl
js
gs
pop
dec
cmpb
dec
push
imul
cmp
and
inc
neg
inc
and
push
mov
push
outsb
and
test
push
inc
loope
jbe
lods
clc
leave
xor
pop
push
adcl
inc
adc
fmulp
sbb
cmpsb
pop
ds
add
and
aam
push
inc
scas
xor
push
dec
je
into
loope
lods
je
clc
xor
sbb
xorl
js
outsl
fisttpll
inc
and
in
xchg
xchg
in
and
mov
pop
dec
lahf
js
aaa
pop
idiv
xchg
add
adc
sub
test
inc
loope
push
in
scas
pop
repz
cmpl
or
ss
hlt
adc
shlb
jge
hlt
or
dec
jo
scas
cld
push
add
cli
ss
cwtl
push
xchg
aad
push
pop
dec
inc
jns
push
call
lahf
mov
push
pusha
fwait
add
pop
push
xchg
xchg
xchg
xor
push
fldenv
and
jmp
inc
push
imul
ja
pop
add
hlt
enter
pusha
or
iret
jp
jo
adc
stc
decb
imul
push
or
les
fnstsw
sub
mov
in
pop
in
mov
loope
jle
int3
xor
sbb
lock
dec
outsl
sbbl
sub
add
cmp
inc
stos
push
das
in
push
jb
mov
insb
pop
imul
add
shlb
sub
push
enter
fidivs
jle
or
add
cmp
mov
lods
leave
movl
inc
cwtl
fnstenv
ljmp
test
in
xorb
mov
jle
sub
fimull
pop
out
dec
xor
sub
or
imul
jae
clc
push
mov
mov
adc
sub
cmpsb
lods
shrl
test
xor
mov
push
test
push
jbe
iret
jnp
outsb
dec
insb
jg
sarl
jp
dec
call
mov
cmp
divb
xchg
fdivrp
sbb
push
jmp
jne
aaa
mov
push
xchg
dec
jae
nop
jp
cltd
sbb
mov
ss
shll
adc
jl
aam
xchg
push
dec
stc
clc
cmp
push
jecxz
sub
adc
push
dec
ficoms
imul
pop
aam
push
mov
ret
xchg
sub
imul
jecxz
test
sub
jmp
sub
insb
cld
bound
cmp
loope
out
repnz
dec
ret
insb
cs
lods
mov
sbb
xor
xor
mov
jb
mov
lods
add
gs
inc
add
push
xchg
fs
iret
and
cmpsb
movsl
pusha
pop
xchg
cli
push
adc
sbb
imul
inc
out
and
sub
sti
cmpsl
in
insl
adc
ret
cmc
fsubrl
push
inc
fcmovnu
xor
fwait
jmp
xor
lock
outsl
xor
xor
xor
cmp
push
and
out
and
pop
inc
insl
xchg
data16
aam
lcall
mov
sbb
enter
outsb
incb
int
pusha
shrb
mov
mov
lea
rcll
push
push
insb
lods
aam
sub
inc
xor
cmp
mov
push
mov
je
sbb
js
mov
insb
cwtl
inc
xor
mov
jge
sbb
mov
and
dec
insl
push
or
adc
bound
cwtl
leave
sub
add
xchg
jl
mov
imul
rcll
jns
and
call
pop
enter
jbe
jne
xchg
imul
je
mov
popa
xor
cmp
sbb
icebp
push
jns
adc
cs
shll
sub
cwtl
mov
cmp
dec
aam
add
dec
cs
cs
mov
cli
mov
loope
xchg
cmp
out
sbb
adc
jno
ljmp
push
jl
mov
xor
xchg
dec
push
daa
cmpsl
in
adc
mov
ja
test
insb
xchg
jl
mov
xchg
and
outsb
adc
pop
inc
repz
lcall
ljmp
sub
lret
dec
jecxz
sub
scas
xchg
movsl
inc
push
loope
sub
out
test
sbb
std
lahf
dec
mov
aam
sbb
in
out
xor
cmpsl
in
fsubrl
push
leave
aam
cmp
test
mov
test
or
xlat
imul
adc
icebp
xor
insb
testb
out
cwtl
pop
jne
js
stos
lahf
adc
adc
shlb
jbe
test
rcl
cwtl
cmp
add
pop
mov
cmp
or
popf
add
xlat
add
int
cmc
or
adc
loopne
sub
stc
and
sbb
in
jns
insl
test
je
xchg
mov
imul
or
xor
outsb
jecxz
loopne
xor
insl
xor
pop
xor
icebp
repz
adc
xor
xor
ficomps
mov
stos
sbb
xchg
fbld
ljmp
adcl
movsl
mov
mov
inc
aas
mov
pcmpeqw
insl
push
xchg
sub
jg
arpl
movsl
xchg
pop
sub
je
pop
jno
cli
jg
sub
xor
pop
lret
add
xchg
push
loope
pop
inc
lcall
lcall
out
lahf
adc
jo
ss
rorb
xor
pop
inc
test
inc
cmpsl
push
push
int
inc
sti
sbb
sub
and
in
into
inc
shrb
jns
sub
cltd
out
pop
push
adc
ljmp
rcl
cmp
aaa
jae
lds
push
inc
dec
mov
lock
mov
es
push
and
daa
add
arpl
mov
lds
fisubrl
mov
jmp
jl
lcall
lcall
sahf
sbb
aaa
pop
inc
in
data16
and
rol
imulb
ja
nop
mov
insl
lret
cmp
ror
out
movsb
loopne
out
stc
lods
push
dec
xor
inc
xor
dec
push
bound
test
inc
sbb
test
pop
push
and
ljmp
jecxz
aam
repz
pushf
sbb
cwtl
int3
dec
dec
fisubs
jp
inc
jnp
les
sbb
faddl
ja
iret
push
loope
pop
int3
push
rorb
les
adc
mov
js
stc
cli
fistpl
cmpsb
out
mov
outsb
mov
cmp
bound
mov
out
adc
nop
jmp
jb
cmp
push
sbb
push
inc
dec
imul
pop
pop
xchg
adc
xchg
cs
and
sbb
and
mov
dec
call
cmp
int
arpl
sub
cmp
mov
dec
pop
cmp
and
pcmpgtw
mov
cltd
and
fbld
jle
leave
and
lret
and
enter
fistpl
cmp
sbb
pusha
cmp
inc
movsb
pop
cwtl
cmpsl
gs
push
cltd
loope
and
sub
inc
adc
jmp
daa
loope
in
sub
notb
dec
pop
insl
sbb
pop
popf
or
jno
ljmp
push
jb
xorb
sbb
adc
dec
rcl
fnsave
dec
xchg
or
ficomps
stos
fwait
in
into
aam
ss
mov
add
cli
cmp
mov
cmp
ret
push
push
fs
cmc
push
fstps
out
and
push
fbld
cld
cwtl
mov
mov
and
mov
sbb
and
ret
movsl
call
ret
cmp
adc
pop
xchg
pop
lcall
mov
mov
mov
and
js
ss
dec
push
fldcw
call
jno
int
popf
mov
repz
imul
push
sub
sub
das
lret
dec
inc
shlb
mov
inc
out
add
adc
pop
fdivrl
adc
dec
rclb
in
cmp
fs
pop
icebp
iret
pop
scas
jns
cmp
and
cmp
fsubl
lods
out
mov
lcall
jmp
and
in
sbb
rol
mov
loope
imul
xchg
jo
fldcw
lcall
mov
inc
jl
or
ljmp
sbb
sub
jmp
aad
stos
pop
sahf
mov
and
cltd
push
jg
xlat
mov
cmpsb
cmp
mov
sbb
ljmp
sub
insb
mov
ret
mov
pop
mov
xor
test
cld
jbe
sbb
adc
mov
cli
pop
cmp
shrb
rorl
cld
fwait
and
in
out
icebp
in
cltd
jno
imulb
cs
ret
int
rcrl
rcrl
iret
lea
nop
xor
stc
rcrb
out
inc
mov
adc
lds
sub
pop
jne
push
push
jmp
or
lret
or
pop
inc
clc
jmp
fadds
test
fwait
movsl
mov
nop
xchg
je
cwtl
test
pop
pop
jno
in
mov
xchg
pop
dec
pop
shll
icebp
jb
stos
clc
test
mov
dec
jle
jns
pop
sahf
loope
scas
sbb
dec
cld
cwtl
fs
jmp
cmp
cs
jne
jnp
sbbl
dec
sbb
es
inc
fdivrp
insl
scas
sub
hlt
pop
and
inc
test
out
jg
je
xlat
push
mov
lahf
cld
test
mov
adc
cmp
mov
push
inc
pushf
daa
addr16
dec
int3
test
hlt
in
das
xchg
sbb
adc
fnclex
xor
add
stc
jp
mov
adcb
fcoml
adc
fistpl
and
outsl
lock
pusha
stos
or
push
out
in
jb
sub
aad
fcomps
jg
lcall
daa
loope
xchg
nop
jae
xor
rorl
sub
sbb
sbb
test
test
ror
ret
sbb
pop
xchg
xchg
insl
jne
and
aad
sub
test
sbb
je
lcall
push
pop
add
aad
nop
in
mov
dec
sbb
and
les
xor
push
xor
or
fbstp
xchg
outsl
adc
pop
cmp
lcall
test
rcrl
jno
inc
out
mov
test
shll
sub
test
jb
sbb
xchg
es
decb
pop
cmc
fisubrs
mov
adc
popf
hlt
ret
stos
sbb
insb
loop
pop
xchg
icebp
mov
mov
push
idivl
or
enter
dec
sbb
cmp
insb
enter
adc
cmp
inc
in
jnp
out
fs
adc
out
jmp
mov
xchg
mov
push
jg
in
icebp
in
lcall
inc
aas
outsb
stos
cmp
stc
loop
movsl
and
xor
scas
test
loope
mov
push
mov
into
and
mov
fsubl
icebp
jae
ljmp
cmp
mov
mov
pop
fnstenv
aaa
push
aam
jb
xchg
adc
enter
int3
aad
data16
xchg
fisubrs
int
pushf
cwtl
mov
lods
cmp
out
cmp
or
faddl
dec
aam
jnp,pt
jo
bound
arpl
sbb
outsl
jne
jae
dec
cmp
push
loop
out
pushfw
subb
add
dec
in
orl
popa
cmovns
mov
sub
sbb
jecxz
loopne
loope
outsl
push
lods
cltd
mov
cs
cld
fcomps
loope
and
sbb
mov
insl
and
stos
out
cld
or
jp
sub
add
jne
xchg
cmp
aad
jmp
insl
cltd
add
pushf
insl
inc
push
into
repnz
lcall
fisttpl
xor
mov
mov
fstl
cmc
sbb
or
lahf
sub
dec
cmp
fdiv
xchg
jmp
in
cmpsb
aaa
mov
cmp
inc
dec
and
or
and
xchg
stos
sbb
push
xor
push
cltd
jle
cli
addr16
pop
mov
push
adc
bound
rcrb
scas
pop
mov
data16
mov
pop
lock
xor
and
fists
xchg
mov
xchg
sbb
fs
pop
mov
loope
test
dec
movsb
sub
xchg
jo
add
enter
sub
cmp
mov
fcoml
cmpsl
ds
rorb
bound
pop
mov
dec
das
lcall
add
mov
in
cmp
arpl
enter
test
push
inc
cld
mov
push
fcoml
jnp
in
adc
or
cmp
lock
insl
push
cli
inc
or
fcoms
jo
mov
rorb
ret
adc
dec
lds
mov
xchg
std
inc
adc
xchg
test
pop
cmpsb
pop
lea
test
inc
dec
push
xchg
ja
fldcw
sub
shll
push
sar
and
loopne
mov
leave
push
fidivs
das
adc
sub
mov
insb
sbb
jge
fcomps
push
out
ret
imul
mov
or
out
dec
dec
imulb
adc
loope
insb
inc
insl
mov
inc
das
xor
insl
daa
adc
pop
push
add
mov
popa
xchg
and
mov
and
jae
adc
xor
adc
sahf
adc
stc
mov
shrl
icebp
insb
sete
movl
xlat
mov
mov
xchg
add
cmp
sub
mov
cmp
sti
dec
push
ja
push
fnsave
imul
daa
daa
rolb
ret
cs
mov
in
fidivl
popl
imul
das
push
lret
sbb
inc
xor
lea
call
adc
pop
sti
aaa
stc
popa
sub
sub
push
and
outsb
xorb
sbb
loopne
ret
push
inc
xchg
xor
xchg
fcomp
mov
sbbl
ret
vmread
xor
js
ret
pop
jno
bound
jge
or
outsb
movsl
iret
sbb
es
and
lret
movsb
fcomps
jl
clc
add
xor
out
cmp
sbb
fisttpll
outsb
mov
add
in
stc
pop
ret
add
dec
les
jae
or
pop
lea
into
dec
xchg
jne
lahf
bound
outsb
enter
or
and
addb
push
xor
push
arpl
jl
into
lcall
sub
adc
subb
xchg
out
xor
movsl
stc
int
xor
sbb
negb
inc
xchg
and
push
xlat
add
pop
sbb
jnp
ljmp
das
fcoml
jns
shrb
popf
xor
jge
into
aad
loope
jecxz
jno
sub
and
push
insl
insl
outsb
lea
test
pop
popf
or
sbb
pop
outsl
cmc
aad
shll
lret
add
sbb
inc
adc
pop
call
outsl
dec
les
sub
roll
and
and
cmp
in
xchg
inc
xor
inc
out
js
and
xor
mov
lret
jge
jle
inc
mov
call
jl
dec
mov
push
ljmp
popf
xlat
pop
inc
scas
sahf
and
inc
lods
out
adc
pushf
and
das
les
add
pop
jnp
popa
clc
icebp
adc
arpl
lods
ja
inc
data16
jge
adc
mov
and
xchg
xor
pushf
jo
adc
lock
aaa
aas
enter
xchg
adc
and
and
jl
and
and
mulb
or
sub
ret
adc
and
and
adc
jae
es
xchg
jns
dec
call
and
cmp
outsb
pcmpgtw
fs
xchg
jl
ret
inc
jno
jp
outsl
inc
enter
jo
push
cld
lock
push
adc
cltd
xchg
push
cli
cwtl
movsb
aam
lahf
add
rclb
jno
add
insb
cmpsb
xchg
pop
nop
push
jne
xchg
stos
sbb
ss
inc
mov
call
cli
jne
js
mov
cmp
jns
pop
fsubrs
loopne
mov
push
aad
inc
sahf
out
repnz
out
outsl
call
inc
cld
or
outsb
aaa
xchg
lods
jle
fisttpll
add
negb
lcall
stc
xchg
ljmp
iret
jae
sub
sub
mov
push
insb
push
add
dec
out
cli
sbb
imul
and
xor
test
pushf
pop
or
or
jle
mov
mov
mov
pushf
cmc
fidivs
fwait
icebp
xchg
cmp
cmpsb
xchg
popf
lea
std
in
repz
test
push
jg
cmp
push
jge
and
push
movsl
cmpsb
aaa
ja
or
jle
jb
test
fsts
cmp
inc
pop
push
dec
and
pop
scas
sbb
fs
in
cmc
imul
lds
push
rcrb
add
inc
mov
adc
fs
mov
and
add
mov
mov
cmpsb
addr16
daa
lcall
je
into
ja
decl
mov
sahf
push
push
fildll
jmp
sub
jge
cwtl
imul
aas
and
mul
or
pop
aas
cmp
xor
add
imul
sbbb
dec
cmp
in
xor
xchg
aas
mov
jno
mov
mov
push
cli
sbb
sbb
fisubs
add
push
adc
movsb
daa
addb
dec
dec
xchg
mov
xorb
ret
cmp
aam
insl
sub
sbb
lea
mov
ja
sub
and
into
icebp
aas
imul
lods
int3
dec
adc
dec
in
pop
pop
pop
jno
ret
sbb
dec
cmp
lock
jbe
xor
or
aam
mov
add
dec
ret
movl
add
push
xchg
pop
mov
xchg
insl
adc
fsubl
jns
out
test
or
dec
push
cld
out
loope
inc
jbe
cmp
xor
push
push
call
and
sub
pop
mov
outsl
or
mov
arpl
out
sub
inc
xor
and
or
sub
mov
cld
mov
out
ja
push
outsb
jecxz
and
cmp
xchg
xor
aam
cmp
xchg
xchg
xchg
xchg
fcmovnu
sub
cmp
xorl
into
inc
fwait
fs
mov
pop
add
jge
jno
aas
add
xchg
ljmp
jbe
cmp
mov
sub
ds
inc
clc
push
call
scas
mov
incl
adc
test
push
mov
movsl
cmp
dec
or
cmc
inc
add
mov
fmul
inc
pop
and
stc
test
mov
std
dec
stc
adc
outsl
xor
push
push
out
xorb
mov
test
xor
test
and
mov
inc
and
mov
sub
mov
jne
jnp
pop
push
mov
and
sub
xor
xchg
lahf
shlb
xor
inc
mov
xchg
fs
pop
in
lock
and
mov
outsl
or
cmp
inc
int
dec
mov
pop
shl
pop
lahf
cmp
and
cmpsl
add
pop
into
sub
sbb
and
inc
std
je
jle
or
in
mov
mov
out
pop
jnp
push
lahf
cmp
int
add
movq
pop
mov
push
lods
push
mov
push
out
xor
xor
pop
dec
adc
outsl
jl
xor
lods
mov
push
pop
aad
movsl
fistps
and
jno
fmulp
dec
into
cltd
sub
jae
daa
jmp
out
ljmp
add
pusha
pop
and
clc
int
in
enter
xlat
inc
cltd
sbb
jne
lds
mov
push
adc
in
xor
dec
fsubrl
dec
or
std
addr16
push
sbb
push
fs
inc
mov
and
int3
stos
adc
arpl
movsb
nop
lret
in
outsl
mov
scas
adc
adc
jns
mov
fst
mov
out
mov
aad
jg
xchg
mov
mov
push
int3
push
dec
cltd
es
push
test
int
stc
inc
cmpsb
cmc
or
jge
pop
loopne
mov
call
push
sbb
test
pushl
dec
loope
add
nop
nop
loop
sbb
push
push
ds
les
cld
sub
add
lcall
ljmp
aas
ja
roll
dec
xor
aad
lcall
mov
sub
rorl
stc
dec
sub
xor
jmp
and
fistps
test
rolb
mov
or
or
mov
add
mov
out
jbe
mov
add
pop
test
push
add
cmp
jge
jnp
fnstcw
sub
jns
xor
dec
sti
lods
cmpsb
clc
fildl
lcall
imul
inc
pop
icebp
rolb
xchg
inc
xor
mov
xchg
inc
std
mov
push
push
lea
sbb
notb
rcr
outsl
sub
or
daa
out
xchg
test
and
mov
pop
test
ret
insl
sbb
xor
mov
sub
dec
je
or
mov
les
cmc
sti
divb
mov
xchg
cmpsb
je
jb
jl
jns
aaa
maxps
mov
mov
jl
movsl
test
mov
adc
jl
dec
sarl
int
aad
repnz
add
sarb
adc
and
pop
iret
lret
inc
mov
jno
rorb
loope
fs
fcompl
pusha
iret
xchg
out
and
dec
mov
stc
subb
xchg
jae
fsts
sub
and
test
cltd
pop
dec
mov
pop
pop
cltd
push
popf
sub
mov
jp
cwtl
push
lods
pop
xor
xchg
dec
add
mov
insl
movsb
mov
sub
jo
push
xchg
inc
popf
je
in
std
xor
orl
lea
hlt
clc
pop
popf
xor
loopne
jo
lahf
and
add
dec
into
data16
dec
lret
aad
lea
std
movsb
dec
cmc
sub
neg
lds
loop
lock
mov
mov
shlb
jge
cltd
add
push
inc
lcall
sub
icebp
sub
and
sarb
iret
push
dec
sub
lret
dec
ret
std
cli
xor
and
and
jg
mov
sbb
dec
cmc
je
les
mov
inc
sbb
jb
fs
arpl
loop
in
lcall
pop
xchg
out
jns
push
push
cwtl
dec
and
test
sub
mov
stc
into
sub
jge
js
and
push
incb
mov
or
mov
or
mov
push
arpl
cltd
int
mov
iret
lods
mov
rcll
lods
out
jns
push
push
mov
movsb
sbb
lods
push
pop
sub
mov
push
fiadds
faddp
mov
rcl
sbb
sar
data16
mov
push
bound
inc
rorl
sub
pushf
insl
lock
adc
in
shl
xchg
xchg
mov
inc
inc
push
push
imul
cltd
jae
shrb
fisttpl
sbb
adc
jb
sbb
js
add
cld
daa
dec
into
xor
aas
inc
jns
adc
or
add
dec
test
mov
loope
mov
sbb
je
add
xor
aaa
mov
in
std
jno
sub
arpl
aam
lods
cmp
loopne
sbb
push
int3
jo
pushw
aad
lcall
xorl
xor
lret
mov
jne
shlb
lods
adc
leave
cmovge
outsl
sub
push
cmc
mov
mov
aaa
or
std
cmp
cmp
pusha
dec
sbb
test
or
add
push
cltd
orl
sub
icebp
cmp
push
pop
ljmp
movsb
xchg
rcrl
push
or
xchg
sbb
cwtl
std
sub
or
movsl
cmpsl
cld
arpl
cld
je
aad
push
jge
or
push
cmpsb
cmp
xor
sbb
add
inc
cmp
cmp
in
jno
jmp
mov
lahf
mov
jne
daa
shrb
sbb
dec
es
mov
cmp
es
je
pop
push
fwait
mov
aas
xchg
js
test
in
into
push
and
scas
cltd
push
mov
jo
bound
cmp
int
pop
sub
subl
test
in
inc
push
dec
imul
inc
adc
lret
orl
gs
push
adc
mov
fldpi
mov
cmp
movsb
outsl
icebp
ljmp
hlt
jno
std
or
cmp
loop
inc
movsb
dec
add
sub
fnstenv
adc
lea
pop
jae
mov
adcl
mov
enter
jmp
add
out
mov
pop
sub
and
adc
or
popf
pop
sbb
pop
fs
iret
adc
ljmp
or
inc
sbb
mov
adc
sbb
xor
mov
inc
mov
popf
shll
sub
xlat
fs
add
push
ret
test
jne
test
push
or
mov
inc
fwait
int3
xchg
cwtl
push
mov
inc
cmp
repnz
and
fistpl
cwtl
fisubrs
lahf
jns
in
rclb
out
adc
pushf
leave
adc
pop
xchg
mov
xor
ds
dec
sub
sbb
xchg
xor
out
nop
xor
pop
outsl
rolb
in
inc
adc
dec
aas
inc
das
xor
mov
xor
or
sbb
pop
fwait
sahf
xor
xchg
scas
loop
pop
push
icebp
xchg
jo
xchg
xor
aam
ljmp
pop
and
push
jns
cmp
push
in
jae
in
aaa
shrb
repnz
dec
push
in
dec
mov
jo,pt
mov
stc
das
add
fs
imul
cmp
mov
sub
popf
mov
jbe
and
adc
fcmovnb
pop
dec
mov
adc
mov
push
lea
mov
mov
lods
lret
sarl
dec
xor
ficomps
mov
dec
xchg
sti
xor
xchg
mov
xor
cmp
in
fidivs
xor
sbb
xchg
xor
add
inc
xor
fs
jb
es
inc
mov
mov
sbb
cmc
fidivrs
stc
jne
repz
lcall
aam
pushf
nop
push
xchg
fisttps
movsl
sub
lds
or
testb
mov
outsb
mov
out
xchg
imul
aam
aas
mov
inc
mov
and
push
loop
repnz
loope
adc
insl
mov
push
mov
mov
cmc
jge
repz
jno
out
test
cli
aas
loope
push
jb
aas
lods
imul
cmp
stos
mov
movsl
fs
mov
xchg
lds
sbb
ja
rcl
test
xor
sbb
inc
jp
outsb
mov
sub
jle
inc
fmull
xor
scas
cli
cmp
clc
mov
or
mov
fstpt
cli
imul
pop
inc
insl
cli
push
out
ret
insb
icebp
sub
pop
pushf
sbb
inc
mov
rep
and
mov
lahf
cmp
ret
xchg
jo
int3
cs
call
dec
jle
sub
sub
mov
dec
jle
adc
mov
aaa
std
in
xchg
xchg
in
test
shl
xchg
add
stc
push
xor
jns
enter
or
jg
idivb
int3
mov
cli
hlt
pop
fwait
loope
jbe
cwtl
imul
sarb
rcll
stos
in
out
call
sahf
jno
dec
sbb
cld
loop
outsb
outsb
sbbb
sub
cli
lods
add
pusha
jmp
lea
nop
rclb
lods
cmp
adc
mov
fdivl
mov
and
cmp
adc
and
xchg
int
lods
sbb
jl
inc
xor
mov
rcr
lock
or
jmp
ret
adc
mov
jne
dec
cmpsb
cmp
in
pop
adc
dec
sarl
push
and
imul
pop
dec
and
add
nop
push
dec
pop
lret
pop
stos
addb
aad
fwait
jns
or
pop
push
pop
jno
cli
std
adc
pop
pop
or
shll
inc
jo
test
or
lods
je
xor
sbb
push
and
mov
xchg
sar
and
out
fisttpll
cltd
mov
lgs
mov
pusha
out
jb
push
sahf
jae
xchg
sub
arpl
push
jge
adc
scas
test
gs
fimull
ss
dec
mov
adc
fcoms
sarb
fidivl
sahf
lcall
out
push
pusha
mov
outsb
push
fimull
lcall
int
ss
mov
xor
out
repz
pop
vmovss
sub
in
test
nop
insb
mov
into
pusha
leave
push
sti
popa
ss
int3
pop
adc
adc
xor
fdivrs
daa
sahf
mov
lahf
lea
fs
inc
add
test
pop
sub
scas
shr
test
cmc
pop
cld
in
dec
inc
stc
test
mov
sub
cmp
mov
sub
outsb
out
lret
cmp
repz
push
jp
xor
dec
mov
out
loop,pn
data16
loop
push
or
test
movsb
jbe
loop
leave
lcall
adc
clc
or
bnd
fs
and
and
pop
testl
adc
out
mov
je
jbe
dec
ret
cmp
mov
lods
bound
adc
dec
in
rcrb
lock
inc
dec
dec
push
add
xorl
push
push
push
fldcw
cmpsb
inc
sti
lcall
add
xlat
ret
das
jb
ja
jge
mov
sbb
and
aaa
or
leave
push
inc
psllq
loope
cmpsb
inc
mov
xchg
lahf
dec
test
dec
inc
in
sub
daa
jbe
daa
daa
stc
insl
adcb
add
mov
jmp
lret
enter
into
pop
or
js
dec
insb
or
int
xor
push
xchg
adc
out
ja
jp
pop
sub
xchg
pop
insl
test
dec
xchg
adc
xchg
pop
push
movsl
lcall
leave
insb
iret
push
adc
pusha
mov
xchg
push
stos
in
sub
pop
mov
mov
or
push
and
push
arpl
push
fsubp
shrl
xchg
int
sbb
shrb
or
out
stos
jne
jmp
dec
inc
pop
out
mul
cmp
das
movsl
cmp
insl
jbe
mov
sub
push
pop
pop
shrb
adc
pop
jbe
les
and
adc
test
pushl
fstl
sub
outsb
push
sahf
cmp
scas
test
sbb
pop
sbb
push
test
ss
xchg
inc
mov
dec
xor
jmp
push
lea
sbb
cwtl
faddp
cs
dec
push
pop
jmp
push
sbb
jne
outsb
xchg
sub
mov
imul
das
sbbl
sub
xchg
cmpsb
push
xor
mov
rorl
stc
mov
mov
cli
repz
dec
nop
xor
pop
andb
stc
fidivs
xor
movsl
inc
imul
dec
xlat
ret
out
aad
cs
fidivs
inc
mov
fisubs
cmp
into
add
inc
cmp
push
xchg
mov
dec
mov
cmp
aaa
cmp
xchg
dec
insl
in
sbb
xor
xlat
mov
mov
outsb
push
iret
sub
sbb
repz
imul
mov
jmp
xchg
out
xor
push
jle
mov
cltd
jbe
sbb
insb
mov
lret
nop
mov
cmc
aad
fistps
in
push
and
lods
lods
cltd
jbe
test
add
xchg
lods
adc
adc
pop
jmp
movsl
mov
jle
inc
fistl
sahf
pushf
pop
mov
sbb
cmpxchg
in
into
loop
in
jbe
xchg
stos
dec
mov
inc
sahf
test
sub
cmc
pop
and
fwait
mov
hlt
cli
out
dec
xchg
insb
jne
fsubl
xchg
mov
cmp
mov
outsb
pop
out
bound
fyl2xp1
inc
cwtl
pop
fcoms
std
fmull
in
ret
cmp
jg
adc
xor
nop
or
xchg
outsb
push
lods
jo
fisubl
or
add
lds
add
push
fisubrl
fs
sub
sub
push
ja
adc
outsb
and
lods
stos
sahf
jno
je
sbb
push
shrl
pusha
mov
in
sbb
jg
nop
mov
pop
out
sub
xchg
mov
or
mov
call
cmp
sbb
push
aad
or
imul
adc
loope
aaa
jb
fs
fwait
add
xchg
sbb
and
cmc
and
sti
push
adc
and
xorl
es
jbe
push
out
nop
loopne
imul
fcomip
cmc
mov
clc
and
ljmp
in
pop
movsl
imull
loop
in
push
xor
xchg
gs
stos
inc
xchg
loop
test
xor
or
fs
cmp
sbb
dec
repz
xchg
scas
dec
xor
jl
mov
push
push
popa
data16
std
jno
aaa
loope
push
incb
xor
out
sub
xor
divb
outsl
loope
sbb
jmp
cmp
aad
cmp
cmp
loop
sbb
xchg
movsl
js
adc
loop
sbb
cmp
mov
push
cmp
inc
testl
imul
or
pop
imull
dec
push
movaps
jg
add
imul
and
inc
clc
lds
mov
je
int
ss
or
aam
add
sti
and
cmp
sub
imul
arpl
and
pop
cld
enter
dec
or
sahf
mov
sbb
add
cmp
sub
xchg
lahf
imul
push
cmc
mov
test
add
xchg
and
leave
cmpsb
testl
and
add
ljmp
and
mov
stc
mov
out
sub
idiv
and
ds
push
hlt
repnz
push
jmp
sbb
rcrl
cltd
addr16
pop
inc
rcrb
pop
out
ja
lods
ss
and
push
stos
sti
xlat
and
pop
jg
shr
je
int
adc
sbb
jno
popa
ss
testb
js
gs
nop
leave
inc
insl
xor
movsb
xchg
cwtl
fstpl
inc
scas
xchg
pop
mov
lock
jne
xchg
and
fisubl
push
imul
xchg
leave
out
add
sub
fstps
insb
xchg
xchg
addr16
inc
push
sbb
shrl
adc
mov
popa
lods
jecxz
imul
sub
push
sbb
popa
sahf
aam
jp
push
inc
mov
pop
int3
mov
lods
lds
inc
inc
pop
js
jb
fiadds
stos
aas
jp
lret
push
mov
fldenv
popa
sub
inc
dec
call
adc
xchg
add
push
xlat
xor
push
cmp
iret
rcrb
xchg
imul
lds
repz
jge
das
xchg
daa
mov
repz
xor
xchg
mov
leave
jo
xchg
dec
iret
stos
fcmovu
xor
xchg
lock
sti
cwtl
je
jp
xlat
xor
lods
pop
icebp
xchg
fnstenv
js
jecxz
rcrb
out
jmp
andl
jne
sub
jb
roll
mov
clc
sub
out
mov
jl
adc
mov
mov
loope
adc
mov
outsl
mov
xchg
push
fnstenv
sbb
out
fs
cmpsb
sbb
pusha
xor
sahf
pop
jge
stos
push
sub
sub
out
adc
lret
pop
and
mov
ja
xor
cli
stos
inc
xchg
adc
pop
mov
cmc
and
aad
out
ljmp
inc
cs
fucom
push
pushf
adc
jae
pop
inc
mov
or
inc
inc
fcmovne
jge
cwtl
mov
out
test
std
sbb
fxch
mov
inc
or
mov
xchg
pusha
sbb
mov
enter
fistps
mov
popf
aad
adcb
aad
pop
xchg
push
push
mov
adc
clc
mov
or
addb
cltd
push
sbb
xchg
es
insl
cwtl
pop
fsubrs
into
inc
mov
je
sarl
sub
lods
in
daa
mov
mov
aaa
inc
sti
enter
mov
xorl
mov
stos
leave
loop
stc
repnz
cmp
fidivl
dec
in
imul
sub
inc
sbb
push
dec
shrb
cmp
in
mov
test
cvtps2pi
mov
inc
pop
inc
cmp
push
xor
xor
cmpsb
lsl
push
mov
and
rol
mov
add
add
add
inc
pop
push
mov
add
imul
sarl
fadd
fcom
sub
sub
fwait
cmp
in
divps
cmc
inc
das
shrl
xor
jb
enter
les
popa
pop
das
imul
decb
mov
lcall
jl
clc
mov
ret
xchg
mov
imulb
ljmp
pop
das
pop
dec
loope
add
mov
mov
push
gs
int
hlt
xor
cmp
adc
call
adc
and
cld
cwtl
cmc
fists
inc
into
popa
adc
in
fadd
mov
rorl
das
cmp
ja
int3
add
cmpsl
fldt
cmp
push
add
push
jg
cmpsb
lret
repz
call
fcmovne
hlt
ret
xlat
sbb
push
aad
inc
sbb
hlt
sahf
or
popf
das
ret
push
sub
xor
sbb
loopnew
push
pop
mov
and
in
shll
mov
mov
push
cld
clc
call
popa
adc
lods
leave
push
xchg
mov
xlat
scas
imul
jle
mov
lahf
xlat
cmp
cmp
sbb
pop
aas
sbb
lock
inc
repnz
arpl
jp
or
dec
fcmovnb
out
in
insb
xor
lret
arpl
fldenv
scas
dec
sub
popa
xor
aam
xor
push
mov
sub
sbb
sbb
loop
dec
call
pushf
mov
and
mov
ss
push
adc
stc
mov
inc
push
jge
movsb
jb
cli
pop
mov
cs
lds
gs
sbbb
lret
call
fnsave
cld
loop
cwtl
cld
xchg
adc
push
mov
xor
out
inc
or
pop
cli
push
fcomip
pushf
test
mov
inc
popa
es
xchg
push
fnstsw
mov
dec
and
scas
ss
inc
adcb
adc
sub
pop
pop
cs
or
out
pushf
pop
dec
loopne
xor
std
and
xlat
xchg
jne
cmp
cmpsb
pop
xchg
pop
sub
mov
shlb
pop
add
mov
mov
push
push
jnp
repnz
les
and
leave
sbb
mov
movsb
dec
pop
pop
leave
mov
popf
ljmp
aaa
cmpsl
and
shlb
pop
shll
push
inc
test
fs
pop
cmc
sbb
aas
cs
cmp
pop
stos
xor
jl
test
inc
xchg
arpl
fists
xor
aaa
lods
push
test
out
sbb
or
sbb
nop
or
stos
pop
cmc
pop
out
mov
and
pop
jo
loop
xor
dec
add
mov
push
cmp
fmuls
loope
movsl
popa
sahf
je
scas
repz
inc
inc
lods
lcall
into
mov
les
lret
bound
ret
mov
in
push
das
xchg
nop
fmuls
or
cwtl
and
mov
xlat
stc
sub
aad
rorb
pop
and
into
xlat
popf
xchg
sbb
in
dec
mov
xor
and
in
loop
dec
dec
add
inc
js
push
mov
js
adc
scas
outsl
add
mov
cmpsb
clc
ret
cmpsb
nop
shlb
leave
out
fyl2xp1
inc
stos
add
bswap
fisubrl
mov
clc
jg
xchg
andl
test
dec
loope
in
or
fiadds
repz
push
stos
adc
lods
dec
outsb
jne
daa
fdivrs
and
fucomi
clc
cmp
sbb
in
in
movsb
pop
push
test
cmp
popf
jg
xchg
mov
add
sbb
fsubrs
inc
inc
fistpll
ficoml
and
pop
lea
and
xor
xor
or
leave
or
sub
testl
in
sbb
movb
mov
pop
pop
mov
test
or
xchg
out
push
xchg
sbb
shlb
jne
stos
subl
sub
mov
jno
popa
sahf
push
and
shll
and
cld
add
xchg
pop
mov
pop
sti
lahf
mov
xor
aaa
sbb
insl
ds
mov
sbb
and
ja
lods
aas
xor
ret
clc
rclb
in
mov
cmp
push
movsb
mov
sahf
pop
es
addr16
inc
shlb
cmpsb
out
cmpsl
mov
out
cmp
xor
lcall
mov
xchg
sbb
ss
pop
imul
mov
icebp
sahf
push
sbb
ljmp
sub
add
pusha
and
out
xchg
dec
sbb
addr16
mov
addr16
sbb
clc
shrl
xor
jb
and
mov
ss
testl
scas
gs
pop
fs
xor
pop
jle
cmp
adc
cmp
iret
xor
in
pushf
insb
push
ja
jmp
pop
mov
jb
cli
bound
popf
jg
pop
dec
rorl
rorb
inc
push
pop
cltd
rol
js
jecxz
push
dec
pop
fsubrs
in
xor
jb
shll
sbb
sarb
bound
sbb
pop
xchg
and
cwtl
sub
cmc
mov
add
inc
adc
iret
sarl
sbb
fisubrl
movsl
test
jl
rcl
pop
push
or
cmc
inc
in
insl
imul
cmp
clc
inc
cli
popa
xchg
pop
popa
and
shlb
sub
xchg
dec
push
add
out
cmp
iret
inc
in
cmp
sub
loop
cmp
sbbb
dec
pop
push
push
dec
fs
sti
adc
mov
loope
bound
fadds
bound
insb
addr16
sbb
imul
sbb
push
push
adc
push
ja
xchg
mov
sub
jmp
in
mov
jg
inc
add
adc
and
pop
lret
and
test
hlt
mov
dec
xor
xlat
cld
mov
ret
cmp
push
insb
xchg
add
push
loopne
insl
xchg
dec
sti
pop
lret
js
dec
fcompl
loope
dec
mov
or
test
icebp
loope
int3
icebp
stc
lock
push
gs
pop
enter
dec
loope
cmp
dec
lods
in
mov
inc
push
add
mov
roll
cmp
cltd
and
jg
jns
insb
pushf
in
jl
fldt
mov
xchg
clc
push
mov
xor
lods
int3
sbb
imul
mov
cld
mov
dec
jbe
jge
std
push
lcall
cmp
mov
mov
pop
test
outsb
pop
nop
dec
out
test
sub
shlb
es
sbb
cld
stos
adc
xor
xor
leave
and
or
icebp
test
movsl
jge,pn
pop
dec
cmpsb
inc
or
das
jo,pn
adc
mov
not
pop
mov
pushf
or
xchg
stc
in
mov
mov
pop
iret
lods
xchg
add
jo
xor
xor
aam
sbb
test
mov
loopw
sbb
push
mov
popf
sbb
push
outsb
sbb
adc
mov
add
in
outsb
xor
popa
bound
inc
cld
imul
mov
add
jp
or
xchg
data16
sbb
ljmp
call
call
loopne
cmp
inc
js
mov
insb
sub
push
enter
or
or
pop
lds
sbb
pop
xor
sahf
or
aam
pusha
sti
mov
inc
inc
xor
pushf
xchg
addr16
js
xchg
nop
xlat
xchg
inc
stos
or
fsubrs
stos
mov
add
out
push
sbb
pop
outsb
pop
mov
mov
sbb
sbb
pop
lock
sub
xor
test
and
aaa
fs
pop
push
lods
xchg
lahf
jmp
fisubl
out
aas
out
lods
outsb
xlat
lcall
aad
in
xchg
push
sub
shll
les
dec
inc
insl
out
fdivrs
flds
aam
xor
aas
push
cmp
sbb
scas
xchg
dec
sub
aaa
dec
das
jl
cmp
push
inc
push
xchg
pop
inc
xchg
incl
push
fsts
mov
jbe
sub
xchg
dec
stos
loope
mov
xchg
bound
push
ret
js
or
pop
xchg
imul
sub
xchg
cmp
sub
dec
call
jns
xor
cltd
inc
and
test
mov
xor
fs
xchg
jg
daa
push
imulb
iret
in
dec
cmpsl
sbb
or
cld
cmp
sub
pusha
repz
repnz
sbb
scas
sub
mov
sub
adc
iret
pop
pop
insl
sub
dec
out
arpl
pop
jbe
cltd
and
and
in
jb
ficoml
xchg
jno
jno
imul
or
shrl
adc
loopne
fldcw
lods
movsl
insl
inc
sbb
jns
in
mov
mov
jne
add
and
xor
imul
js
cmp
out
lret
popf
push
jle
pop
movsb
test
scas
sbb
cmc
addr16
mov
fcompl
jns
dec
imul
lock
fldcw
lahf
clc
unpcklps
xchg
fs
icebp
aam
cmp
sub
mov
arpl
in
jno
ss
xchg
shlb
pop
xchg
in
lock
sbb
pushf
sub
sub
in
jmp
mov
cmc
fisubrs
push
cmp
and
push
jp
pop
sub
hlt
dec
rorb
roll
lea
pop
mov
mov
cmp
pop
stc
jbe
js
mov
je
push
aam
push
insb
dec
lcall
mov
pop
push
add
sbb
call
loop
cli
stc
jp
jp
jae
out
pusha
hlt
xchg
pop
add
or
jno
xchg
add
std
cmp
loope
xchg
loopne
dec
mov
stos
jle
cld
ret
xor
movl
ret
push
xchg
clc
inc
dec
add
jb
sub
js
stos
push
push
or
out
xchg
jbe
lock
imul
das
mov
cmc
call
ret
mov
cld
pop
fnstcw
mov
les
or
in
lds
cld
xor
or
sbb
jmp
inc
fs
or
mov
jb
dec
jb
inc
mov
dec
jae
mov
loop
jno
mov
es
sub
scas
movsb
es
inc
add
lahf
clc
inc
iret
push
cltd
pop
fs
mov
jne
mov
loope
inc
mov
xor
add
cwtl
int
xchg
ss
aaa
adc
arpl
jns
dec
into
in
aam
fdivr
je
mov
ret
insl
in
mov
daa
sbb
xchg
lods
sbb
lds
cmp
ficomps
inc
mov
dec
or
inc
stc
stc
sahf
fdivl
add
dec
sbb
or
loopne
adc
jo
pop
xor
arpl
xor
sbb
stos
leave
pop
cmpsb
jl
lods
or
test
cmp
jno
pop
shlb
adc
js
dec
int
cs
jge
das
imul
jge
rdmsr
cmp
jmp
aam
jo
jg
int
leave
test
cmp
js
pop
cwtl
arpl
sysenter
push
sub
mov
fnstenv
sbb
pushf
repnz
mov
lahf
lea
xchg
mov
iret
xchg
jecxz
push
add
mov
mov
pop
aad
cli
push
int
cmpsb
xor
xorb
addl
inc
inc
in
xchg
dec
hlt
adc
push
in
cli
dec
sub
or
lds
xchg
shll
xor
jge
aaa
adc
in
add
dec
negb
std
cmp
dec
into
pop
cltd
std
es
mov
add
aad
or
or
jg
mov
aad
lods
ss
lods
sub
rcrl
ds
jl
xchg
sbb
jge
push
shrl
or
out
leave
in
sbb
inc
movsb
cli
movsl
pop
test
add
imul
xor
imul
lock
movsb
jb
insl
push
push
mov
and
and
cld
lea
test
xor
test
test
sub
sub
in
pop
jge
push
dec
sub
pop
cwtl
push
and
xchg
in
fcoml
pop
imul
cwtl
dec
and
popa
in
lock
sbb
inc
add
mov
pusha
mov
jno
rclb
jge
push
cmc
pop
push
sti
or
cltd
lea
push
repnz
lcall
xlat
push
jmp
xor
fcoms
scas
pop
divl
dec
jmp
jae
add
out
adc
and
aaa
aad
inc
jo
enter
fcompl
jno
push
imul
gs
push
cmp
sub
daa
lret
cltd
popa
sbb
rcr
rcrl
mov
incl
outsl
cs
fyl2x
xor
mov
sub
dec
push
jne
into
push
mov
inc
pop
ret
out
xor
pop
sbb
inc
lahf
adc
sub
pushf
lods
mov
push
fnstenv
pop
xchg
pop
xor
lods
mov
add
jge
test
pop
adc
lcall
aaa
push
push
jnp
inc
pusha
push
out
test
scas
sub
dec
movsb
or
inc
and
icebp
inc
cmp
dec
add
jp
xchg
jmp
data16
lods
add
mov
xchg
xor
fs
push
and
stos
lcall
adc
imul
or
aad
sub
jge
sbb
dec
xor
cmp
mov
call
out
xchg
outsb
pop
push
icebp
cmp
fldenv
icebp
aam
inc
ja
sbb
xchg
inc
inc
jb
stos
in
loope
pop
movsb
test
xor
mov
mov
es
ss
popa
nop
inc
mov
bound
pop
stos
jb
negl
cmp
fstps
out
cmp
stos
adc
ss
push
adc
stc
mov
mov
stc
loopne
mov
lock
xor
int
push
test
dec
nop
mov
add
leave
ja
mov
test
push
push
xchg
sbb
mov
push
lods
cmc
nop
adc
fldenv
ss
out
popa
xchg
out
mov
std
and
ja
adc
and
loope
mov
orb
push
mov
sbb
daa
sti
ret
hlt
push
stos
pop
or
cmp
orb
mov
sar
push
pop
in
out
mov
add
sub
sbb
or
movsl
in
imul
rcrl
nop
test
les
or
nop
mov
movsb
sbb
jmp
aas
and
enter
and
inc
ja
cmp
ss
addr16
aad
cmp
push
out
int3
sbb
mov
in
pop
icebp
data16
pop
es
lock
push
nop
insl
pop
je
bound
aad
jle
mov
push
in
mov
jno
arpl
pop
or
les
jns
decl
je
push
unpcklps
por
cltd
jns
arpl
pushf
cmovbe
add
imul
lret
movsb
cmp
xlat
pop
push
cmc
in
mul
push
push
adc
cmp
inc
sbb
cmc
stc
mov
cwtl
mov
jmp
add
xor
jg
stc
mov
repz
mov
mov
xor
xchg
mov
icebp
jge
push
push
mov
mov
fwait
gs
adc
aam
or
stos
pop
push
xor
rolb
inc
iret
xor
insl
lods
dec
dec
loop
filds
jb
inc
lcall
mov
cmc
jbe
xor
dec
pop
dec
push
push
dec
xchg
or
cmpsl
fwait
pop
clc
dec
xchg
shl
push
loope
mov
out
add
adc
fsub
pop
test
imul
push
ss
js
mov
dec
pushl
push
cmp
movb
and
adc
ja
mov
adc
mov
scas
jo
jne
shrb
fcompl
sub
push
outsb
cltd
inc
and
cmp
xlat
call
outsb
xor
shrl
or
and
test
or
mov
into
mov
jno
daa
stos
pop
addl
pushf
or
fidivl
add
xchg
mov
lcall
xlat
or
push
lret
mov
inc
adc
outsb
out
or
jo
xor
outsb
std
pop
push
jg
sub
inc
je
lods
and
sub
je
fnstcw
fld
jmp
daa
mov
imul
sbb
dec
xor
movsb
mov
imul
inc
shll
jb
mov
into
faddl
xor
lret
into
xor
arpl
pusha
add
ds
lea
jne
xchg
dec
dec
scas
inc
adc
outsl
push
call
and
repz
push
loope
hlt
mov
xor
xor
ret
outsl
xchg
mov
mov
je
cli
pop
or
xchg
sbb
push
into
nop
xchg
test
xchg
xchg
mov
loopne
dec
repz
xor
stc
fistl
and
fsubl
cld
fs
add
pop
jno
bound
pop
mov
bound
adc
xor
bound
pop
jae
lcall
and
push
xor
aam
adc
mov
or
inc
add
fldl
sbb
jmp
adc
popa
adc
pop
jg
adc
dec
mov
push
inc
jno,pt
sti
or
fstps
push
mov
inc
inc
and
push
lods
push
cmp
pop
inc
out
jns
push
push
jne
xor
cltd
pushf
push
push
lea
cmpb
out
ffree
cmp
lods
les
stc
rclb
ficomps
cmp
repz
test
or
sub
in
ss
xor
std
stos
push
mov
inc
push
dec
and
out
pop
int
sbb
mov
and
aad
incl
daa
cmp
xchg
stos
xlat
mov
xor
lea
pop
test
and
repz
or
lea
dec
test
es
in
xor
adcl
cmpsl
sti
stos
mov
and
jbe
pop
dec
and
jle
cmp
imulb
pop
repz
mov
push
mov
addr16
pop
dec
sub
jge
stc
dec
sub
clc
icebp
or
imul
fwait
xchg
push
std
inc
in
mov
lahf
loopne
loopne
test
xor
ss
add
mov
das
jb
shrb
aad
nop
adc
mov
push
jns
data16
pusha
aad
mov
pusha
jl
xchg
popf
mov
add
pop
out
jns
test
sub
out
jno
or
imul
loopne
insl
cmp
mov
jno
jns
or
mov
fiadds
cmp
clc
cld
adc
fldenv
cltd
repnz
pop
stc
push
loopne
xor
lock
jecxz
sbb
and
sbb
lods
jp
pop
cwtl
addr16
mov
inc
je
inc
scas
and
jle
xchg
lea
ds
mov
pop
popa
pop
push
push
out
fistpl
sbb
outsl
in
imulb
fucomi
push
mov
subb
and
adcb
js
pop
stos
push
jge
adc
test
cmc
mov
imul
cs
sub
es
pop
lcall
jno
push
cmp
inc
push
push
outsl
std
pop
adcb
sahf
xor
dec
call
hlt
xchg
lods
test
ljmp
insl
pop
pop
fdivs
adc
ja
jo
push
pop
test
mov
test
mov
and
cmp
adc
pop
mov
adc
cmp
or
dec
lods
movsl
mov
jno
loopne
pop
imul
sbb
push
hlt
add
pusha
fisubrs
out
push
jns
fsts
mov
inc
add
es
inc
movsl
popa
xlat
push
out
mov
ror
ds
imull
pop
xchg
ss
loopne
pop
xchg
inc
fmull
sbb
inc
xor
dec
jns
mov
insl
into
insb
cwtl
mov
je
and
pusha
push
lret
sub
xlat
and
shrl
lret
cs
and
mov
adcl
adc
xor
scas
xor
arpl
and
in
push
push
add
push
add
pop
ja
mov
xor
ss
lcall
jg
sarb
mov
sbb
out
xchg
rol
das
daa
xor
sub
in
mov
loope
xchg
pop
pop
and
sbb
mov
mov
rcl
lock
jmp
sub
imul
arpl
cli
jg
roll
sahf
and
les
add
iret
fbld
leave
sbb
outsl
popa
fldln2
xor
int
loop
lret
cmp
pop
loopne
clc
inc
adc
push
and
dec
cmp
cmp
mov
cmp
std
sub
jne
or
cltd
mov
jmp
jne
dec
sub
int3
sub
in
cmp
jg
rcl
push
jbe
loop
ret
mov
popf
shlb
cmpsl
pusha
jg
es
mov
int
sahf
push
add
lods
jle
add
movsb
rolb
out
movsb
add
jns
pusha
adc
jne
add
addr16
les
out
pop
sarb
jne
ljmp
in
mov
cmc
jae
cmp
sbb
popa
dec
enter
push
push
rcl
pop
jle
sub
xchg
add
fadds
jl
lret
cmp
jl
mov
test
push
repz
and
and
cwtl
sbbb
sbb
and
imull
add
clc
xchg
lret
mov
xchg
pop
dec
adc
loope
lret
sbb
mov
mov
in
mov
or
or
or
sub
xchg
add
fstl
lods
adc
shlb
dec
stc
test
test
xchg
out
scas
add
pop
add
xchg
mov
lret
mov
adc
imul
adcl
xlat
mov
sbb
aam
sbb
push
insl
imul
xchg
in
ljmp
stos
popf
sbb
inc
jl
add
test
pusha
xor
scas
mov
ljmp
jp
out
cmp
xchg
movsl
js
mov
xchg
je
cmp
pusha
jl
push
outsb
ret
sub
mov
fs
cwtl
in
call
hlt
pop
js
mov
pop
rcrb
dec
loop
repnz
aaa
and
push
in
out
adc
mov
ljmp
adc
adc
ljmp
or
push
adc
adc
sahf
adc
fs
jp
mov
pushw
sti
setae
imul
rclb
jmp
out
pushw
stos
insb
call
ljmp
cmp
fs
loope
cmp
and
sub
loope
sahf
cmp
mov
movsb
push
push
aas
lret
ret
pop
sub
mov
or
xchg
bound
and
jp
and
adc
mov
xchg
jp
mov
aas
or
arpl
les
imul
xchg
sub
andb
cmpsl
fisubrs
iret
xor
lret
pop
scas
sub
test
dec
loope
fbld
and
pushf
cs
push
push
pop
xchg
inc
lds
push
sahf
shl
lcall
les
adc
inc
push
into
cmp
loopne
adc
pusha
out
add
leave
pop
sbb
pusha
mov
adc
iret
cs
mov
inc
and
add
adc
outsl
sbb
scas
fistl
mov
cmp
inc
mov
ss
int
insl
daa
jp
pop
cmc
xchg
aam
push
orl
sbb
pushf
repz
push
adc
pop
mov
and
xlat
mov
mov
push
out
jmp
js
mov
adc
and
lret
inc
leave
test
mov
outsb
stos
stos
sti
mov
addr16
push
cmpsb
stos
push
cmp
and
dec
das
fs
insb
in
jne
sbb
cld
or
ret
mov
push
jmp
mov
pop
int3
dec
sbb
jns
mov
or
mov
test
push
sbb
mov
add
call
sub
jbe
ds
cmp
jg
sub
xor
pop
in
or
insl
cmp
xchg
sbb
mov
loope
pop
jo
sahf
in
fsubr
push
mov
xor
loope
mov
xchg
mov
aas
adc
clc
int
push
adc
and
dec
mov
jne
jns
mov
xor
push
repz
es
or
mov
mov
fwait
mov
mov
test
push
cmp
cmp
cwtl
xor
sbb
push
mov
faddp
add
jp
mov
mov
stc
jbe
jg
je
in
adc
sub
inc
xchg
mov
repnz
rcrl
dec
in
cld
cs
je
and
jb
es
hlt
adc
xchg
fs
lods
sbb
xor
comiss
sub
pop
in
movsl
xchg
rcrl
sarb
mov
jl
xor
leave
pushl
cmp
inc
filds
sub
std
push
test
sub
push
push
pop
lahf
push
rolb
lahf
push
mov
mov
and
lods
outsb
xchg
sbb
movsb
es
subl
test
cmpsb
mov
stos
not
and
fs
xor
pop
dec
inc
sti
mov
sbb
int3
popf
sub
arpl
ja
push
rcl
pop
nopl
dec
insb
in
leave
jge
in
call
pushf
clc
sub
rcll
pop
sub
arpl
loope
shr
or
add
fcompl
mov
sbb
xchg
mov
push
cli
scas
or
es
outsb
out
lcall
cltd
inc
lcall
lods
and
fisubl
and
subl
pop
call
mov
in
and
jmp
push
push
out
daa
insb
popf
push
and
cltd
pop
das
daa
ficomps
and
inc
xor
cltd
clc
inc
in
punpcklwd
push
stos
clc
pop
push
dec
inc
loope
mov
xchg
jne
outsl
and
mulb
ficoml
aaa
fwait
xchg
mov
mov
jae
loop
ret
stos
test
jbe
incl
jno
jo
cmp
push
pop
mov
pop
sbb
xchg
std
and
jge
inc
add
mov
sbb
push
cmp
lcall
mov
inc
jp
adc
ret
scas
push
cli
mov
mov
fadds
fsubrl
movsb
in
xlat
mov
outsb
sbb
xlat
cmp
dec
enter
xchg
lock
arpl
shl
insl
push
iret
mov
adc
ret
incb
inc
dec
into
stos
push
lods
xchg
inc
jbe
insl
mov
lret
or
cmpsl
dec
lods
fs
xor
add
jl
lret
lock
and
loope
outsb
cmp
inc
xor
mov
in
mov
jnp
ret
xor
jae
leave
mov
stos
and
xlat
inc
test
pop
adc
addr16
mov
jb
push
popa
pop
int3
ss
lods
push
jl
cmpsl
les
fbstp
jnp
or
fcoml
scas
out
orl
out
test
mov
aad
push
xchg
inc
pop
inc
push
in
sbb
outsl
sbb
sub
rcll
iret
data16
push
and
jae
sub
sub
add
popf
clc
mov
mov
push
or
iret
mov
dec
ret
lret
cmp
mov
pop
popf
fwait
cmp
arpl
adc
adcl
or
mov
mov
and
mov
insb
cltd
lods
mov
pop
pop
test
dec
mov
add
gs
push
adc
push
cmpl
lahf
repnz
cmp
icebp
cld
xchg
insb
sub
mov
subl
testb
loop,pn
inc
shlb
test
cmp
mov
add
aas
adc
lea
loop
xchg
cmc
add
popf
mov
jbe
in
fnstcw
adc
push
adc
rcrb
repnz
lahf
aaa
and
sti
aaa
out
mov
sti
jb
jge
dec
mov
or
andl
lds
js
cli
xchg
cmpsl
rcrb
fs
xor
outsb
fistl
jmp
adc
enter
ret
sbb
ret
movsb
gs
push
pop
or
repnz
jno
cwtl
mov
add
xchg
lret
and
push
gs
adc
popl
dec
cmpsl
clc
stos
inc
xchg
shrb
jp
test
stc
in
jne
push
retw
jae
or
push
jbe
mov
aad
imul
sbb
cli
jecxz
lret
sub
push
jp
jmp
or
into
dec
xor
inc
mov
fs
ret
jnp
add
push
dec
into
sub
lods
jnp
idivl
sbb
ja
sub
mov
fcmovnbe
and
leave
and
push
out
adc
dec
xor
xchg
outsl
sbb
mov
dec
pop
pop
dec
fmull
call
arpl
je
int3
pop
inc
stc
xchg
pop
jge
or
mov
nop
jmp
cmc
adc
jns
xchg
rol
out
bound
fcomps
movsb
fcoms
xchg
hlt
fsub
push
insb
inc
add
test
scas
in
in
call
arpl
pushf
cli
add
xchg
push
mov
inc
cmp
ret
gs
mov
gs
mov
in
leave
test
or
lods
or
adc
pop
imul
sbbl
cmp
or
addr16
jecxz
xchg
cli
bound
add
stos
mov
stos
in
cli
xchg
and
adcb
adc
xchg
sbb
and
xchg
jbe
test
xchg
jl
xchg
das
mov
mov
icebp
sbb
test
xchg
add
xlat
incb
in
and
ret
aas
xlat
out
dec
clc
into
adc
xchg
and
sub
pusha
test
dec
push
ss
idivb
adc
mov
dec
add
xchg
inc
inc
dec
jle
sbb
nop
mov
or
sahf
dec
dec
and
call
imul
repz
outsl
popa
sub
pop
jmp
loopne
adc
and
xchg
aad
out
lret
int
pushf
jns
push
pop
xor
pop
ss
lock
push
je
aaa
sub
addb
lea
dec
xor
ret
sti
add
enter
cmpsb
sbb
daa
jb
adc
pop
and
dec
or
add
mov
movl
jge
xor
mov
sbb
das
and
mov
adc
je
dec
mov
out
inc
mov
inc
jbe
pusha
dec
push
iret
dec
repz
addr16
jno
xor
popf
in
repz
mov
dec
ljmp
movsb
js
and
in
int
push
hlt
xchg
mov
xor
ja
adc
dec
xor
push
out
lret
push
int3
push
in
cmpsb
pop
je
lret
lret
int3
mov
lock
dec
cltd
inc
mov
push
and
adc
fucomi
jnp
sbb
xchg
sti
ljmp
out
add
sub
mov
add
or
cwtl
inc
mov
std
out
icebp
mov
push
mov
lock
xor
jmp
aad
sub
push
sub
arpl
mov
inc
lret
test
mov
inc
dec
inc
mov
pop
dec
ljmp
jmp
lea
insl
push
jmp
pushf
jo
cld
mov
cmc
jmp
push
push
into
es
sub
mov
movl
fcompl
rcl
xchg
fwait
mov
lods
dec
in
addr16
pop
inc
in
mov
int
cld
push
imul
cli
addr16
and
in
mov
pop
fdiv
cmpsb
divb
jb
xlat
mov
loope
push
add
mov
inc
sarb
enter
push
ljmp
xlat
lret
mov
sti
popa
addl
mov
xorl
aaa
out
incl
test
mov
gs
shr
xlat
lret
or
push
subb
enter
loop
mov
ficoml
and
sbb
xor
daa
xor
push
iret
mov
mov
and
roll
push
jg
movsb
ret
xchg
cmp
shlb
pop
inc
fldcw
enter
mov
int
push
lds
jae
jl
add
xlat
push
add
iret
iret
push
mov
jo
aad
xor
loopne
loopne
leave
in
xchg
sbb
jmp
and
in
loopne
push
lret
test
lods
pop
push
push
loop,pt
lcall
jl
mov
pop
out
test
int
std
fs
adc
in
scas
shrb
ljmp
ror
sbb
popf
and
cmp
insl
insl
push
lds
loopne
pusha
loopne
daa
lret
pop
fsub
test
cmc
stos
daa
push
add
xchg
mov
adc
inc
pop
imul
shlb
and
sub
adcb
xchg
sbb
xchg
cmpsl
stc
or
xchg
stc
testl
cmp
pop
ret
adc
fldenv
outsb
loope
adc
mov
fstpl
xlat
imul
sub
sub
push
mov
push
aas
subl
daa
mov
inc
fisttpll
int3
loopne
sahf
insb
popf
mov
and
add
sbb
aaa
out
div
jecxz
jne
jle
sub
push
movsb
adc
cmp
inc
cld
push
and
ja
push
push
fildl
ss
popf
mov
ret
lcall
or
xor
mov
flds
in
je
sarb
mov
adc
jp
imul
loope
xchg
in
jecxz
mov
inc
sub
notb
cmp
cs
xchg
je
loop
loope
and
cwtl
pushf
aad
les
jecxz
jl
outsb
push
add
cwtl
jle
lods
icebp
lock
xor
lds
sbb
inc
pushf
movsl
xchg
adc
sub
shll
push
test
and
jne
sbb
xchg
out
les
js
add
in
fsubrs
insb
lcall
and
les
jmp
stc
adc
cwtl
call
adc
in
xor
pop
xor
sbb
lret
movsb
fcoms
in
sub
xchg
scas
movsb
arpl
pop
adc
inc
inc
push
ss
cmc
jne
lea
cli
jbe
mov
and
popf
push
test
push
movsb
jbe
sub
aad
cmc
pop
lahf
xor
fnstcw
stc
into
inc
loopne
fstp
icebp
mov
shll
or
aaa
jnp
fdivr
xchg
cmpsl
dec
inc
aad
fcmovnb
adc
cmc
mov
jp
push
rolb
out
cwtl
xlat
push
pop
arpl
push
xor
mov
sbb
pop
dec
mov
jmp
pop
fldenv
arpl
das
cs
xor
pop
push
sti
xchg
imul
sbb
mov
imul
scas
imul
mov
ret
div
dec
sub
push
inc
xor
mov
mov
cmp
cs
into
add
inc
dec
jb
sbb
ja
jae
sarb
and
std
jne
pop
xchg
lahf
div
mov
test
das
mov
pop
ja
jno
lret
pop
sub
xchg
popa
dec
idivb
subb
aas
jmp
out
jns
or
cmpl
lcall
mov
jbe
loopne
or
push
das
test
leave
stos
std
pop
sti
mov
leave
mov
jg
insb
sbb
jg
mov
repnz
push
inc
inc
mov
bound
adc
jmp
sahf
jb
cmp
adc
sub
mov
iret
mov
cmp
in
add
insb
cmp
mov
push
lea
inc
adc
clc
lret
mov
ja
popf
inc
cs
pop
fwait
cmp
outsl
cs
jns
mov
pop
sub
adc
notb
out
hlt
cld
stc
cmpsb
sbb
mov
cmp
jl
inc
fsub
sub
mov
into
lret
lcall
push
aam
cmc
leave
adc
pop
daa
into
mov
testl
pop
jns
ss
add
je
sbb
jge
nop
mov
repz
lods
clc
dec
repz
stos
xor
movsl
cld
rcrb
in
pop
daa
stos
inc
fwait
cmp
adc
sbb
mov
push
les
adc
dec
mov
test
xor
add
mov
aaa
fcom
or
int3
jmp
pop
ds
les
jmp
addr16
shlb
lea
jmp
pop
fisubs
sarb
xor
fs
pop
xchg
jmp
push
push
in
stos
arpl
outsl
xor
stc
pop
mov
stc
shrl
in
mov
call
mov
lods
add
aam
push
mov
test
int
cmc
mov
repnz
adc
sub
fldl
pop
pusha
sbb
push
jb
xor
repnz
mov
pop
std
mov
fbld
cmpsl
sub
cmp
imul
fnstenv
xor
sub
add
xchg
push
inc
movsb
les
fstl
mov
lock
mov
adc
je
mov
jp
std
sbb
jo
or
mov
scas
inc
inc
push
outsb
xchg
je
hlt
stc
mov
adc
inc
cmp
nop
out
and
push
fldcw
inc
aam
add
mov
jns
xchg
call
stc
mov
movsl
push
and
sbbb
sbb
or
aam
push
jle
xor
xor
sub
sbb
mov
jge
mov
int
stc
not
call
decl
pop
out
pop
push
pop
lret
push
ja
jns
andb
sub
pop
je
test
cmpsl
es
cmp
jbe
jnp
dec
in
mov
popa
cmp
adc
in
xchg
mov
mov
scas
dec
cmp
mov
xchg
int3
imul
cmpsl
rclb
or
adc
xor
dec
cmp
jb
test
stos
pop
into
jo
mov
insb
shrb
in
adc
scas
dec
scas
ret
pop
icebp
xchg
jne
adc
cmc
iret
and
dec
es
sti
xor
cmp
aam
inc
inc
out
mov
cwtl
cmp
jge
ja
ds
dec
xchg
loopne
sub
dec
adcb
pop
jmp
inc
rcll
lds
outsb
push
cs
sub
adc
lea
rolb
xor
dec
sbb
ja
add
or
mov
cs
pop
or
mov
sub
push
mov
sbb
adc
cmpsl
ss
xchg
xchg
xchg
mov
lods
inc
sahf
sbb
cmp
fbld
jns
pop
in
inc
pop
test
js
push
inc
sarl
xor
out
pop
jns
adc
fisubrl
cmp
test
pop
sub
pop
test
int3
adc
rolb
cmpsb
test
rcll
cli
dec
add
xor
jb
es
xlat
repnz
repnz
ret
or
xchg
fimuls
test
inc
adc
addl
dec
addr16
adc
cwtl
inc
or
mov
outsl
pop
xlat
and
andl
fistpl
ss
pusha
lcall
ljmp
xchg
cli
mov
ret
mov
push
xchg
mov
jle
sbb
rcr
bound
jle
cmp
inc
lods
pop
and
dec
xor
in
sbb
add
mov
adc
loope
mov
push
pop
ds
mov
jnp
pop
xchg
dec
repz
mov
lds
hlt
cmp
dec
loopne
shll
inc
or
mov
jae
push
mov
lods
nop
shr
sbb
mov
pushf
dec
pop
mov
movsl
jb
push
int3
xchg
call
jl
shrb
xor
dec
mov
stos
in
inc
popf
arpl
stos
adc
mov
dec
adc
xchg
daa
fcoms
sub
mov
or
jle
incl
xor
push
or
or
mov
push
jnp
push
mov
inc
aas
mov
js
andb
loopne
cmp
or
fsubl
arpl
add
pop
insb
jno
sbb
test
rcl
cmp
lea
push
dec
cwtl
and
add
push
in
sahf
lea
aam
sahf
stc
xchg
outsl
push
leave
push
sbb
mov
sbb
sbb
lahf
dec
in
enter
sti
sbb
shll
mov
xchg
jae
mov
push
xchg
inc
lods
push
mov
mov
imul
mov
inc
inc
and
dec
ss
mov
shrl
mov
mov
add
test
pop
jl
ret
scas
and
shrb
xchg
call
enter
bound
mov
cmc
dec
cmp
jge
adc
sbb
fldln2
aaa
lcall
and
mov
mov
jg
stos
fs
push
jge
aas
push
push
fildl
jne
and
mov
and
mov
or
imul
insb
xchg
mov
push
push
out
add
mov
sub
xchg
xor
hlt
inc
addb
inc
cwtl
test
sti
adc
enter
pusha
mov
into
leave
insl
fs
int
sbb
pop
sbbl
in
in
mov
es
adc
xor
cs
fwait
adc
pop
inc
sbb
fwait
dec
xor
push
data16
shrl
jne
and
out
cmc
arpl
stos
out
or
icebp
scas
cmpsb
cwtl
cmp
and
push
mov
int3
push
loope
pop
sahf
out
je
lods
mov
xchg
outsl
fs
dec
imul
out
push
and
jbe
das
xor
mov
pushf
xor
jb
add
mov
dec
sti
data16
out
pop
cwtl
pop
call
jecxz
data16
stc
cli
call
and
adc
cmp
aam
in
push
add
dec
mov
repnz
in
xchg
jns
push
stc
movsb
sbb
add
outsl
jl
or
pop
pop
out
bound
fsub
and
adc
test
scas
cwtl
cmp
sub
xor
call
mov
adc
jns
xor
cli
pop
jo
stos
pop
mov
enter
mov
lds
ret
or
xor
cmc
inc
scas
test
mov
fnstsw
push
adc
repz
fcoms
inc
push
cmp
pop
clc
push
adc
pusha
jbe
adc
lcall
add
mov
popf
sub
test
jl
mov
loop
adc
and
loope
mov
push
pop
ds
in
cld
shll
imul
aad
mov
std
pushf
pop
adc
clc
push
movsl
add
add
repz
je
out
lds
daa
movsb
mov
in
add
pop
cmc
xchg
jle
lea
sbb
mov
js
imul
cltd
push
mov
cmpsl
mov
mov
stos
out
xlat
mov
and
js
pop
fxch
loop
cld
lahf
mov
or
fists
mov
add
shrb
inc
mov
in
notb
in
pop
cmp
xor
lock
cmp
int
in
or
push
fcmovbe
sbb
ds
jnp
es
adc
pop
mov
xor
sbb
sbb
cmp
push
push
loope
pop
icebp
jmp
in
ljmp
push
or
and
add
clc
cmc
gs
ror
add
mov
add
sub
or
sbb
enter
je
cmp
aas
or
out
cmp
lds
fwait
mov
inc
inc
lret
pop
ds
jbe
shrl
daa
xchg
notb
adc
pop
aas
cmp
push
pusha
fsubrl
mov
push
shl
out
push
pop
jno
add
imul
mov
lret
mov
lret
aaa
dec
iret
cmp
icebp
sarl
mov
es
push
inc
sbb
sub
and
scas
sahf
or
sub
pushf
cmp
cmp
pop
fisubrs
fisubl
pop
inc
sbb
sbb
popa
cli
dec
fmul
mov
pusha
cmc
jbe
cltd
in
push
ja
pop
dec
test
loopne
pusha
jbe
scas
aaa
push
xlat
hlt
fs
xchg
add
leave
cmp
mov
adc
dec
call
dec
outsb
call
mov
and
out
mov
movsb
and
push
dec
je
jno
pop
sbb
or
and
xchg
fcomps
fmulp
push
pop
sub
rcll
repz
push
insb
or
rclb
stos
addr16
mov
test
push
push
sbb
xor
inc
mov
pop
std
dec
cli
fcoms
mov
stos
pop
ljmp
test
dec
jge
into
sub
mov
sbb
adcl
mov
cmp
hlt
adc
pop
cmp
out
adc
lock
dec
out
dec
push
xlat
outsl
lcall
or
incb
stos
jle
and
addb
outsl
movsb
lods
pusha
insb
dec
ret
fstpt
in
insb
inc
dec
lds
adc
les
daa
and
and
jge
cmp
pop
push
push
sbb
fs
repz
lahf
push
and
push
pop
fistpl
adc
scas
push
int3
call
addl
lea
daa
aas
xchg
lea
pop
push
cmp
pushf
or
dec
sub
in
lea
push
dec
icebp
int
push
repz
xchg
push
mov
int3
jns
lock
repz
sarl
shrl
cmp
xor
mov
or
xor
sbbb
ret
sti
add
fnstenvs
ja
sbb
aas
lcall
stos
pop
outsb
ds
inc
sbb
jecxz
push
add
push
push
mov
and
roll
shrl
or
lcall
and
adcl
mov
lret
cs
mov
pop
lock
repz
pop
mov
mov
push
cmpsl
jb
xchg
mov
sti
cltd
xchg
ds
stos
add
mov
addr16
es
sbb
in
andb
xor
jo
loopne
add
pop
test
inc
test
cmp
fs
sbbl
xchg
lea
or
cli
out
fbld
shlb
push
push
gs
jnp
repz
jg
inc
fwait
pop
dec
sti
rol
bound
test
cmpl
or
dec
shll
mov
xchg
mov
add
mov
jae
add
xor
xchg
jg
outsl
mov
ss
ret
je
sahf
test
pop
aam
pop
mov
jb
ret
mov
adc
shrb
mov
cs
push
aas
lret
pop
lods
dec
ja
sbbb
rclb
cs
push
cmp
in
ds
inc
mov
mov
leave
ret
outsl
jns
mov
ljmp
and
mov
cmp
xor
lods
fstps
or
mov
inc
js
add
scas
movb
dec
dec
fwait
inc
sbb
rcrl
mov
call
test
xchg
push
repz
sub
pushf
xorl
or
pop
sbb
jne
xlat
dec
adc
aas
fstl
addr16
lret
mov
or
outsb
daa
sti
sbb
sub
mov
mov
add
adc
fdivl
in
cmp
rorb
es
scas
stos
or
push
sub
dec
jge
cli
xor
pop
cmpsb
sub
pop
cmpsl
sub
cli
in
mov
xchg
dec
stos
fisttpll
jne
loop
in
push
shll
int3
cmp
sub
and
aaa
dec
movsb
lahf
sub
imul
cmpsl
outsl
dec
push
in
dec
jne
in
or
inc
loope
fwait
push
clc
sub
je
adc
jns
pop
sbb
pusha
stos
mov
testb
int3
movsl
clc
lret
int3
mov
cmp
bound
enter
or
mov
sbb
cmp
sbb
cmpsb
mov
xchg
loope
cmp
inc
add
lcall
or
out
adc
sbb
add
fnstenv
lahf
in
sub
in
dec
inc
xor
pop
in
adc
push
fcoms
push
fldl
cmp
loope
sbb
xchg
pop
punpcklwd
adc
fs
ja
dec
pop
fs
mulb
mov
and
repz
adc
xor
inc
mov
push
jbe
pop
sub
scas
bound
sbb
pop
popl
xor
mov
roll
filds
sub
mov
sbb
push
mov
sub
cmovge
and
repz
or
ja
daa
jmp
mov
scas
push
pushfw
pop
fistps
fdivrs
gs
mov
jb
sbb
pushf
jne
cmc
orl
adc
pop
test
add
in
xchg
dec
lret
sub
jne
imul
xor
in
rcrl
sub
or
leave
callw
jbe
pusha
adc
out
stos
jl
sbb
pop
pusha
fmul
adc
ljmp
sub
cli
jno
popf
mov
sub
scas
rcrb
aad
pop
fiaddl
aad
js
cmp
insl
sbb
mov
jp
iret
leave
in
cmpsl
push
jae
out
xchg
shlb
push
js
fs
dec
mov
adcl
cmp
mov
daa
inc
testb
cmp
sub
dec
sub
push
dec
mov
aaa
out
adc
pop
inc
jo
into
fwait
jecxz
mov
imul
iret
push
dec
fwait
xchg
roll
and
insl
inc
push
add
add
push
test
adc
mov
cs
fscale
jmp
pop
sbb
or
ficompl
cmp
sbb
shr
cmpsl
dec
inc
call
into
add
popf
xchg
sbb
jp
int3
push
sub
mov
jp
out
cmc
outsb
and
fdivs
popf
lea
sbb
nop
sub
xchg
hlt
xor
into
lcall
xor
repnz
jae
into
mov
std
mov
dec
mov
iret
lret
pop
int3
dec
mov
cmpsl
filds
das
xor
adc
push
in
insb
pusha
lods
push
xlat
imul
inc
ja
lock
push
jle
bound
mov
push
loopne
popf
adc
loop
jl
aaa
cmpsb
stc
lds
lock
repnz
add
clc
js
fnsave
jl
imul
dec
and
jb
sarb
inc
xor
push
add
mov
out
inc
in
and
sbb
cli
push
clc
shlb
call
add
std
inc
lahf
stos
hlt
jmp
sbb
insb
sub
cmp
pop
lret
sbb
lods
mov
adc
aaa
pop
and
dec
xlat
mov
lret
fsubl
xor
mov
loope
fwait
lods
out
jne
push
jge
or
inc
xchg
and
push
mov
mov
push
jae
add
imul
jne
and
cmp
jns
rcll
jns
push
lds
cli
repz
pushf
push
out
xchg
loopne
pusha
lods
rcrb
inc
and
orb
push
pop
sub
ja
cli
dec
sub
add
add
dec
dec
pop
std
std
inc
xor
sub
in
xlat
iret
or
cmpsl
mov
lret
insb
mov
and
mov
dec
xlat
pop
and
push
xchg
xchg
adc
dec
inc
or
cltd
and
jle
leave
jle
xor
pop
scas
sar
add
lea
mov
adc
ja
push
inc
dec
push
aas
ja
cli
sub
inc
cmp
mov
pop
push
std
pop
xor
sub
in
repnz
jns
leave
adc
leave
gs
cwtl
fistpll
xor
mov
add
xchg
sub
imul
imul
ja
cli
ds
and
mov
or
icebp
dec
test
inc
xchg
movb
cmp
int3
xlat
repz
fcoml
pop
cltd
lea
nop
lret
cmp
xchg
sbb
bound
and
mov
mov
mov
mov
mov
xor
loop
xor
es
in
mov
jno
test
cmp
repnz
aaa
pusha
pusha
pop
clc
xchg
bound
pmuludq
pusha
mov
fidivl
xor
sbb
xchg
lods
test
testb
js
dec
in
shll
imul
mov
pop
jno
rcll
inc
jmp
mov
cmpb
mov
jle
or
insb
sbb
inc
adc
adc
fldenv
fcoms
cmp
popf
bound
ja,pn
pop
movsb
xlat
sub
pop
cld
and
inc
hlt
cwtl
inc
jle
xor
jae
int3
push
imul
jb
fistpl
push
sbbl
dec
outsb
dec
test
hlt
iret
in
outsb
stc
hlt
adc
mov
ret
sub
adc
in
pushf
adc
sub
imul
inc
mov
push
mov
bnd
leave
in
fsubrl
aad
cltd
mov
lds
stc
cld
daa
xor
xchg
int
lea
mov
mov
repnz
sub
lods
leave
add
adc
and
stos
push
or
mov
dec
mov
out
pushf
js
inc
jb
mov
fistpll
pop
fs
or
rcll
in
sarb
dec
push
cmp
cmc
adc
jb
cs
scas
out
cli
xor
shlb
sbb
xchg
and
loope
mov
push
mov
insl
jmp
mov
inc
sahf
das
loope
test
inc
testl
lds
push
push
das
pop
push
divl
repz
add
les
jne
xchg
enter
sbb
pop
lds
jno
sbb
insl
dec
pop
out
or
pusha
jo
sub
insb
insl
sar
ss
xchg
xor
ljmp
das
lods
movsl
in
inc
leave
icebp
popa
sbb
or
mov
out
pop
outsb
mov
test
mov
push
and
cwtl
xchg
mov
and
inc
popa
adc
js
out
xor
lods
and
push
loopne
out
cmp
push
jne
fadds
imul
dec
inc
dec
jb
and
push
jb
push
xor
mov
jb
push
repnz
dec
js
jb
push
repnz
insb
and
inc
cltd
pop
lods
sub
cvttps2pi
shl
and
and
pushf
lret
sbb
in
push
xor
jl
leave
jg
ret
and
fadds
je
ds
ljmp
mov
xor
xchg
enter
dec
mov
xchg
in
inc
pop
loopne
pop
mov
lock
mov
cmpsb
pop
nop
lods
or
push
cld
cmp
in
out
xor
mov
stos
stc
mov
icebp
cmpsl
xchg
xlat
mov
pop
lcall
lret
clc
jnp
divl
and
xor
add
sbb
jno
sbb
add
in
dec
int3
ficoml
or
cmp
xor
push
daa
ud2
jp
mov
sbb
add
mov
jmp
shll
sbb
jge
lret
sub
pop
add
jns
rcr
mov
aaa
xlat
adc
add
dec
arpl
mov
cld
xor
lcall
sbbl
jecxz
mov
xchg
addl
mov
or
xchg
mov
and
jnp
outsl
fsts
pop
in
push
pop
shrl
rol
push
icebp
xchg
cmp
scas
fwait
loopne
pop
pop
fs
mov
cmp
mov
and
iret
adc
stc
push
adc
mulb
sti
idiv
outsb
xor
sbb
or
mov
xchg
lahf
inc
or
mov
cmp
imul
add
dec
orl
stos
push
fs
adc
insl
pop
or
iret
sbb
pop
adc
into
xchg
push
xchg
adc
ljmp
push
adc
xor
mov
sub
add
popa
push
dec
aas
inc
insl
frstor
das
push
int3
jne
jbe
testb
sub
jp
mov
mov
js
lcall
xchg
add
orl
add
out
lcall
nop
lea
mov
loop
mov
and
ds
lret
fwait
mov
cmp
jge
cwtl
jnp
clc
jg
mov
inc
add
test
test
lds
lret
inc
int
lcall
push
lcall
out
sub
js
push
sbb
or
out
mov
fstpl
push
cld
cmp
fcompl
jecxz
xchg
jne
push
les
sti
je
inc
in
out
xchg
sbb
mov
or
xchg
maxps
adc
inc
adc
xchg
xchg
ja
xor
test
icebp
and
in
sbb
fwait
pop
sub
xor
test
fisubs
rolb
rcl
lcall
cmp
add
jne
push
push
pop
int3
ror
push
cmp
ds
xchg
xlat
sbb
dec
jg
shr
push
inc
inc
jns
inc
cwtl
cld
roll
inc
data16
add
rcll
push
in
fisttps
ret
pop
or
outsl
dec
sbb
imul
cmpsb
mov
cltd
adc
xor
fs
int3
mov
fldcw
dec
sbb
test
lahf
sbb
dec
lods
cmp
fs
jge
jg
push
jbe
stos
aas
mov
addr16
xor
decl
push
shlb
cmpsb
das
popa
add
adc
ret
rcll
test
aam
int
sub
cmp
push
sub
rcr
orl
lcall
jle
outsb
dec
xor
movsl
adc
pusha
jno
adc
push
loopne
fiadds
hlt
cmpsl
fs
ljmp
jno
in
addr16
jg
push
loopne
jp
stos
enter
insb
push
lcall
mov
inc
fwait
adc
pop
test
aaa
arpl
push
mov
das
aad
mov
push
out
mov
movsl
xor
arpl
in
divl
int3
int
cmpsl
xor
std
out
es
rcr
jb,pt
scas
imul
xchg
sub
lods
int
mov
push
ljmp
jle
lahf
ljmp
loope
outsb
lahf
xchg
in
js
imul
js
lock
jbe
lahf
scas
lret
push
dec
fdivl
ds
clc
or
inc
xor
or
stc
stos
lcall
and
ret
sbb
sub
aas
repnz
sub
repnz
ret
jns
fdivl
addr16
sti
fwait
jecxz
in
and
mov
imul
notl
xchg
cli
repz
and
shrl
aam
pop
dec
cmp
jno
cltd
jecxz
movsl
sub
mov
getsec
mov
fsubr
int
inc
or
add
xor
and
xor
add
push
popa
into
out
les
jns
xchg
sahf
imul
push
xlat
and
test
jne
sub
sub
mov
scas
push
es
testb
push
and
mov
scas
add
and
sub
lahf
and
imul
and
push
lea
sar
mov
fs
rcrl
inc
jg
cs
xor
fisubrl
call
aaa
jge
pop
push
xlat
fs
cmp
and
aad
ss
jp
imul
mov
dec
or
mov
repnz
loop
jno
nop
or
adc
jge
jl
push
push
jno
pop
mov
push
inc
push
lock
rcr
sub
std
in
xchg
push
inc
mov
shlb
adc
jbe
int3
js
insb
scas
flds
outsb
daa
jbe
clc
js
mov
inc
aam
jne
jns
mov
imul
mov
out
mov
pop
push
cwtl
sbb
mov
cmp
and
cmpsl
push
jnp
aad
add
mov
sti
adc
push
stc
jb
in
cmpsl
jp
addb
mov
mov
cmpsl
add
inc
cld
in
fs
inc
popa
rcr
pop
sub
es
cltd
in
in
add
cmp
or
addb
xor
imul
sbb
push
push
into
fwait
addl
imul
jmp
jne
xchg
stos
dec
clc
pop
lcall
dec
popl
ss
fs
and
mov
mov
mov
rcrb
aam
lds
add
popa
scas
jno
mov
inc
in
adc
xor
stos
add
mov
lock
push
sbb
out
jo
aam
jp
jns
mov
sbb
jno
xchg
lods
in
aaa
rcrb
cwtl
aad
insb
inc
mov
push
adc
outsl
dec
sbb
popf
rcll
out
scas
stc
jno
lcall
lods
mov
mov
push
arpl
mov
xlat
subb
mov
jmp
cmp
pop
jnp
aas
fsubl
jb
pop
loope
xchg
stos
les
fiaddl
pushf
mov
test
int
int
in
sbb
cwtl
aam
insb
cmp
push
ljmp
xorl
pop
inc
xchg
mov
fstps
outsb
leave
add
cwtl
cs
cmc
gs
loope
cs
mov
sbb
jno
out
sbb
divb
ret
dec
mov
sbb
jb
fcoms
lret
dec
dec
pop
hlt
and
fidivl
in
popa
notb
cld
jp
pop
imul
xchg
cld
lret
jg
dec
pop
xor
loopne
pop
jo
xchg
test
dec
cwtl
imul
sahf
loopne
out
aas
rclb
test
jle
jp
push
jae,pt
push
out
inc
and
cld
push
cli
dec
imul
dec
jne
sub
inc
dec
xchg
add
out
movsl
minps
jns
lret
and
push
add
xchg
jl
ret
sub
push
cmp
sub
sub
mov
dec
xor
pop
popa
mov
popa
ss
int
ds
repz
jns
nop
sub
sbb
addr16
in
adc
push
dec
je
lods
int
mov
inc
leave
in
pop
dec
cli
fistpll
cmc
popa
shrl
sbb
pop
add
sub
stos
xorl
xchg
andl
dec
insl
jo
push
mov
and
push
xlat
or
das
xor
fiaddl
push
imul
ds
mov
mov
gs
pop
sti
jne
clc
sbb
push
cs
sbb
add
fdivrl
fs
fldcw
pop
pop
out
popf
in
cld
push
inc
dec
iret
dec
fisttpll
ds
leave
mov
andl
inc
xchg
outsb
and
addb
addr16
imul
mov
sub
inc
sub
fimull
flds
xchg
es
leave
and
pop
push
shrl
cmp
je
in
fstpl
lods
clc
cmpsl
fnstsw
cmc
mov
and
mov
fwait
jecxz
pusha
lock
mov
std
std
fisubs
and
lea
push
jns
icebp
inc
mov
xor
xchg
add
ljmp
mov
les
mov
cmpsb
fstl
pop
jno
or
mov
dec
popf
lods
pop
mov
xchg
inc
inc
mov
inc
sub
aas
pop
fs
xor
xchg
pop
mov
mov
arpl
sbb
xchg
pop
adc
test
xchg
sub
mov
lds
push
adc
scas
aad
aam
push
leave
jmp
mov
jecxz
adc
std
bound
push
in
stc
rcrb
pusha
jl
or
lret
adc
xchg
dec
jo
or
lds
test
dec
cs
adc
out
shll
imul
bswap
shlb
fs
insb
xor
cmpsl
iret
mov
cmp
xchg
stos
jbe
cmp
jae
jle
push
gs
adc
jnp
enter
jge
shll
push
mov
inc
out
cli
imul
shrb
jl
mov
hlt
mov
or
shll
inc
lock
jnp
push
xchg
pop
lds
xor
insb
mov
dec
call
add
jnp
cmp
movsb
sti
mov
inc
data16
inc
addl
adc
fistl
jmp
test
test
dec
cli
dec
jae
mov
pop
pushf
xor
mov
jae
add
fs
mov
insl
cmpsl
mov
mov
addb
adc
imul
sbb
imul
jl
cmpsl
cmp
xor
cmpsl
daa
jns
cmc
xor
call
mov
dec
sti
push
mov
jo
sarl
aas
gs
mov
jae
jecxz
mov
inc
call
in
cs
xchg
es
sbbl
stos
sbb
sti
mov
inc
pushf
movsl
push
jae
pop
sbb
dec
sbb
int
cmp
cltd
rcrb
sub
icebp
sub
ss
sbb
aaa
add
cmp
lret
in
subl
inc
mov
adcb
mov
pushf
stos
inc
into
dec
adc
imul
push
pop
inc
cmp
lock
cwtl
js
loope
out
ret
pop
pop
outsb
test
jno
imul
cmc
ja
jg
dec
push
je
sbb
jge
inc
icebp
je
cmp
push
loop
xchg
dec
jae
imul
jp
mov
not
out
dec
ds
sub
push
cs
mov
into
loop
push
loopne
pop
add
pushf
adc
and
addl
cmp
xor
add
dec
jge
fs
sbb
xlat
fistpll
mov
test
jg
pop
fbstp
cmp
xchg
inc
cmp
mov
xor
pop
gs
sahf
sbb
arpl
les
pop
into
cli
aam
loope
xlat
adcb
jl
stc
mov
popf
dec
xchg
mov
shll
lret
cltd
push
add
nop
xorb
roll
xchg
fbstp
test
jae
cmp
in
cmp
js
jge
addr16
xor
out
push
xor
rcrb
jne
pop
dec
imul
in
adc
and
imul
xor
mov
fistpll
push
mov
adc
pop
or
aas
and
in
mov
fdivl
and
fistps
outsl
pop
nop
jae
adc
mov
loopne
adc
aaa
outsb
loop
rdpmc
sti
hlt
outsl
xchg
shlb
data16
movsl
xchg
cs
mov
loope
mov
dec
stos
sahf
xor
imul
jne
inc
inc
adc
scas
xor
ja
ret
sub
xlat
scas
push
and
stos
dec
or
mov
in
lds
push
loopne
xor
js
or
add
add
push
adc
push
push
or
ret
jno
and
sub
push
je
dec
inc
dec
ret
push
faddl
adc
test
je
or
lods
inc
cmpsl
push
lods
pusha
popa
loope
cmpsl
arpl
cmp
cmp
sub
test
or
pop
shrb
leave
ljmp
jb
addb
jmp
gs
lcall
cmc
jecxz
rol
inc
cli
imul
push
insb
jp
xor
sub
or
push
adc
fists
rcll
jne
aaa
popa
jmp
cmp
or
adc
sbb
push
cmp
jle
xor
gs
std
add
fistpll
mov
cmc
or
jne
sub
dec
outsb
jg
xchg
and
out
in
dec
stos
in
sbb
ret
jne
jg
mov
mov
xor
xor
or
cmpsb
es
sub
push
adc
sbb
enter
ja
fmul
iret
add
adc
xchg
fisttps
addr16
test
or
mull
jne
xchg
pop
rcrl
xchg
jnp
jmp
dec
xchg
sahf
es
inc
inc
scas
loope
cmpsl
stc
lret
je
xor
and
lock
xchg
mov
cmp
xchg
xor
cmpsb
pop
adc
js
or
lods
orl
ja
adc
lods
stc
call
jg
mov
push
subb
movsl
repnz
inc
outsl
or
mov
jnp
cwtl
inc
dec
pop
pushf
jmp
and
add
pop
dec
loop
daa
dec
push
pop
and
cmpb
mov
push
and
stc
lret
dec
xchg
jp
test
adc
add
lds
inc
push
lds
push
adc
sub
pop
cmpsl
lds
push
loopne
mov
movsb
sub
push
jne
push
pop
movsb
leave
sbb
aad
or
stos
popa
decb
fistl
dec
aaa
sbb
addr16
push
test
push
cwtl
xor
mov
int
mov
mov
adc
dec
lods
push
adc
dec
and
xor
pop
call
jecxz
insb
adc
imul
rcll
cld
push
rcl
fisubs
cld
aaa
jns
pop
inc
nop
push
enter
inc
jns
xchg
aad
fisubrl
cli
pop
jg
leave
push
pusha
add
jnp
int
pushf
add
dec
push
mov
imul
jle
adc
jb
ffreep
cld
pop
add
jmp
jne
dec
test
mov
lret
fs
sub
sub
out
jmp
nop
adc
xchg
enter
addr16
sbb
dec
popf
int
jl
add
push
jo
bound
dec
int
lods
movsb
divb
dec
add
ja
stos
jecxz
dec
mov
mov
xor
aad
daa
xchg
fsubrl
jne
or
xchg
mov
in
mov
xchg
jne
push
or
cmp
inc
mov
das
xor
cmp
or
icebp
pop
or
ret
xor
or
cld
or
sbb
inc
mov
scas
jne
push
add
mov
dec
cmc
adc
insl
mov
das
push
xor
std
pop
cltd
mov
or
mov
popf
cltd
inc
loopne
shrl
pop
push
icebp
dec
adc
std
pusha
inc
popf
movsb
dec
mov
enter
das
add
and
pop
mov
pop
push
addr16
stc
inc
fiadds
jnp
aad
mov
sub
outsb
call
xchg
push
xchg
add
jbe
and
lret
fldcw
daa
add
sar
lock
ret
insb
jns
je
loop
data16
shlb
push
popa
pusha
out
push
push
stc
mov
xor
cli
mov
aas
les
aas
test
and
push
pusha
adc
and
inc
mov
lret
mov
fimull
jbe
xchg
sub
inc
ret
daa
stc
jb
cmp
push
jge
add
mov
mov
aad
push
xchg
xor
scas
enter
jp
cwtl
sub
add
ds
adc
insb
mov
int
add
cwtl
popf
xchg
test
popf
into
stc
lcall
gs
jmp
sti
repz
pusha
inc
xchg
and
and
cmp
xchg
ret
inc
and
fdivrl
outsl
jno
xchg
pop
sub
xchg
daa
out
sub
pop
div
push
jp
xchg
mov
aad
sbb
insl
pop
outsb
add
pop
pushf
sub
mov
dec
cmp
fs
in
push
scas
mov
xor
loop
stc
fs
stos
jne
cmc
inc
push
dec
les
xchg
fstpl
xchg
sbb
sti
out
call
jo
std
fisttps
jns
xor
fnstcw
mov
std
aas
xor
jmp
add
test
ret
push
xchg
cmp
push
xor
cmp
fpatan
rorb
shll
add
push
jno
sarl
shrb
or
jo
adc
fisttpl
xchg
sbb
push
ds
push
out
add
pushf
bound
and
stos
cmp
xor
nop
dec
lahf
xchg
cmpb
icebp
enter
push
stos
adc
sbb
and
lock
lcall
push
pusha
hlt
int
jmp
pop
inc
sub
mov
push
mov
mov
fldcw
push
push
dec
out
dec
push
jbe
popf
adc
aad
insl
test
jae
jns
cmp
fcomps
dec
rcl
popf
and
xor
fnstcw
data16
das
pop
outsb
pop
push
jns
dec
jge
sbb
daa
inc
ljmp
sbb
lds
std
or
into
xchg
ret
fdivp
xlat
push
outsb
rolb
daa
ss
ret
add
outsb
fmull
inc
shll
xor
and
inc
insl
int
pop
xchg
test
pop
out
cmp
push
pusha
mov
xchg
mov
jmp
xor
ret
enter
popf
shl
pinsrw
sub
loope
repz
xlat
test
push
fdiv
or
xchg
mov
mov
mov
pop
aad
notl
adc
aas
subb
loopne
xorl
sbb
jg
xor
jno
cmp
adc
dec
stc
subb
pushl
push
pop
aam
ret
mov
and
mov
adc
fdivl
and
fisubrl
add
fnstcw
xor
adc
mov
push
cld
push
xor
aas
mov
dec
dec
movsb
mov
cmp
lds
ds
inc
pop
in
pop
pop
pop
jp
js
lea
movzwl
loop
call
repz
pop
add
mov
or
rcrl
push
sub
stc
sub
push
xor
popa
sub
inc
add
mov
dec
loop
cld
push
ja
mov
jno
sub
fldenv
js
and
mov
and
lods
fs
clc
jno
add
xchg
xchg
pop
jg
jne
ds
pop
xor
xor
scas
xchg
push
push
call
jp
xor
cld
add
mov
jmp
or
gs
aad
lds
jae
aaa
aam
push
lcall
pop
push
sub
mov
std
fcoms
pop
dec
lock
int3
xchg
xor
cmpsb
mov
mov
nop
repz
mov
mov
popf
js
rclb
imul
xchg
sub
push
cltd
or
cmp
rclb
in
mov
dec
xchg
add
jmp
nop
fldcw
push
pop
out
lock
pop
xor
scas
pop
push
subl
in
movsb
nop
dec
sub
pusha
add
push
pop
jl
lods
dec
inc
aas
neg
dec
stc
std
adc
dec
insb
sub
addr16
aaa
push
sti
in
adc
and
imul
mov
xor
xchg
addl
rolb
cmp
lea
fidivl
add
fidivrl
pop
divl
xor
and
fiadds
int3
pop
out
call
das
cs
cmp
fsubr
rorl
pop
aam
jne
out
cltd
ret
mov
fildl
es
inc
test
loope
xchg
sbb
stos
adc
lret
cmpsb
xchg
inc
arpl
ss
push
pop
sub
gs
mov
sarb
jno
or
and
movsb
xor
sahf
lret
jmp
xchg
fwait
pop
mov
xor
jle
int3
mov
pop
js
mov
mov
addr16
push
push
data16
imul
mov
and
lahf
test
inc
cli
scas
dec
inc
lcall
lahf
std
add
adc
aam
in
push
in
outsl
les
pop
loop
add
xlat
sbb
inc
pop
dec
push
imul
xchg
bound
pop
xor
shrl
mov
popa
and
jp
jnp
int3
dec
mov
test
pop
imul
fcmovnu
loop
mov
jno
push
or
push
and
push
sbb
add
dec
push
test
pop
stos
mov
cmp
cmp
and
iret
dec
push
out
xor
shlb
loop
mov
stos
mov
lea
push
and
aam
jg
outsb
daa
sub
sub
or
jo
pop
push
lock
dec
out
xchg
sarl
es
inc
stc
shll
ret
or
js
mov
data16
das
arpl
stc
or
pop
cmp
jge
lcall
popf
sub
inc
les
in
shlb
pop
xor
sbb
sub
sbb
mov
outsl
push
test
outsl
pusha
dec
insl
inc
in
sbb
in
lcall
pop
inc
ficomps
test
and
pop
xor
and
mov
mov
mov
mov
sahf
rolb
sub
pop
insl
and
fucomp
mov
inc
or
cmpsb
push
inc
sub
outsl
in
adc
mov
mov
imul
add
test
stc
ss
jle
je
les
scas
mov
adc
imul
or
out
and
pusha
fldenv
cs
jl
inc
pushf
aas
gs
cmp
xor
cs
and
rol
aad
push
sub
cwtl
push
out
sar
arpl
clc
xorb
pop
leave
cwtl
scas
jge
rcrb
pushf
inc
iret
adc
push
sti
mov
outsl
pop
or
or
in
sub
dec
xchg
or
stos
cmp
fsubrl
hlt
popf
push
ds
cmpsl
sarl
pop
orb
mov
outsl
in
hlt
sbb
sub
inc
xor
adc
sub
out
or
inc
scas
push
push
mov
lcall
pop
adc
xor
pop
out
inc
fucom
testl
addr16
cli
jp
syscall
adc
mov
mov
sbbb
xchg
pop
loope
sub
mov
sub
cmpsl
cmp
pop
mov
mov
lds
sub
inc
pusha
jp
xor
xchg
enter
out
dec
insl
cmp
pop
pop
jbe
xchg
and
aam
fs
push
mov
mov
mov
dec
xor
ds
std
xchg
inc
test
mov
mov
and
scas
or
jne
stos
jne
mov
pop
push
movsb
subl
stos
xor
int3
push
movsl
sbb
xchg
stc
mov
inc
xor
lcall
inc
aas
jne
inc
call
orl
sar
scas
int3
mov
out
cmp
inc
pop
rcr
pop
cli
imul
adc
xor
cmp
sbb
movsb
movsl
push
pop
cwtl
ss
add
shll
icebp
inc
push
lahf
ret
mov
push
jo
xor
pushf
sub
xor
dec
mov
in
add
push
lahf
sbb
inc
jns
jnp
inc
outsl
xchg
lods
stos
jl
adc
sub
cli
jne
imul
xchg
xor
adc
adc
lods
iret
mov
mov
outsl
ds
inc
dec
fstpt
pop
stos
add
add
in
sbb
data16
cli
pop
xchg
daa
ss
jle
or
ljmp
dec
pop
movsl
xchg
jne
push
lods
jp
repz
jg
icebp
inc
xor
lock
mov
orb
jmp
and
cmp
dec
dec
push
jns
lea
je
cltd
and
insb
or
xchg
pusha
inc
and
outsb
xor
pop
sbb
add
jnp
sbb
add
xchg
enter
dec
mov
pop
xor
fbld
sub
pop
xchg
jmp
lret
push
cwtl
inc
push
pop
setnp
dec
roll
pop
rorl
sbb
sti
insl
lds
jg
and
std
xor
aaa
adc
or
lock
outsb
and
lcall
pop
sub
or
outsb
notb
mov
or
dec
mov
inc
jno
std
mov
flds
sti
xor
mov
xlat
pushf
aas
sbb
add
mov
and
test
int3
cmp
inc
fs
and
psrlq
dec
fwait
jp
cmp
adc
sahf
add
notl
pop
sub
in
pop
pop
sbb
mov
loope
jl
mulb
in
dec
dec
mov
aas
and
adc
dec
pop
xchg
jo
out
mov
incb
loope
insb
mov
dec
or
fstpt
jnp
clc
dec
push
sti
cltd
or
movsb
test
and
int3
push
jl
int
dec
cmp
xchg
push
dec
ss
jns
xor
iret
cli
dec
add
inc
inc
sbb
push
loopne
bound
mul
lahf
push
sub
fsubrs
dec
pop
add
enter
push
outsl
cmc
stc
cmpsl
repnz
addr16
push
xlat
mov
test
mov
test
movsw
jmp
repnz
loope
or
sahf
jnp
push
mov
cs
in
add
adc
stc
gs
sti
adc
cmp
xchg
scas
pushf
xchg
and
sbb
mov
cmc
xchg
lcall
lret
popl
cmp
cld
loop
cmp
mov
mull
jno
cmp
pop
int3
xchg
sbbb
cmp
jno
mov
sub
sbb
adc
aad
sbb
jecxz
and
adc
and
xchg
or
xor
push
jae
dec
xorl
dec
sahf
cmp
and
scas
pop
or
and
das
or
lcall
ret
xlat
cmpsl
push
fbld
jmp
push
sub
out
shll
out
lods
movsb
sub
aas
popf
mov
sbbb
inc
out
frstor
adc
xorl
dec
in
outsb
aam
adc
fsts
xlat
xor
push
into
outsl
aad
insl
xchg
mov
push
aad
dec
enter
xchg
fisubl
mov
sahf
jle
pop
repnz
dec
sbb
pop
jp
and
lock
and
pushf
push
mov
adc
dec
push
imul
inc
int3
adc
add
mov
gs
pop
fsubs
mov
adc
xchg
frstor
push
xor
in
push
and
push
inc
ret
jb
gs
jno
stos
sub
test
into
sbb
clc
push
push
fbstp
dec
jl
fs
push
daa
add
and
rorl
sti
fndisi(8087
loopne
stos
adc
cmp
int3
add
dec
fstps
adc
pop
leave
xchg
cmpsl
outsb
jne
cmovs
icebp
adc
push
xchg
jl
inc
xchg
or
ja
xchg
dec
shrb
sbb
cmpsb
cwtl
stc
js
in
inc
icebp
xor
nop
cmp
push
cmp
lds
adc
jle
loop
in
xchg
add
or
jo
lods
fistl
out
adc
movsb
outsb
push
mov
sub
inc
dec
rcll
adc
push
sub
inc
hlt
lods
ja
sahf
and
lods
sbb
cwtl
jmp
test
xchg
paddq
dec
outsb
mov
and
je
cmp
mov
stos
out
pop
js
andl
lahf
bndstx
push
fbld
push
shll
lcall
sbb
jl
push
int
pop
cmpsb
adc
inc
dec
loop
enter
rorb
lret
and
call
scas
push
lret
stc
dec
jo
cli
add
pop
xor
scas
stc
call
into
out
ja
fstps
or
and
lock
ds
inc
ja
ss
sub
inc
cmp
push
addl
stc
enter
fisubl
arpl
loopne
or
loopne
es
test
and
xchg
xchg
ret
hlt
cmp
jne
adc
pusha
and
jg
pop
aam
lea
aam
jae
les
arpl
pusha
repnz
jnp
pop
adc
ja
ljmp
test
cli
inc
xor
rcrl
push
outsl
pop
and
loopne
addl
inc
sub
mov
cmp
add
out
jae
push
je
mov
fsubl
icebp
jmp
insl
or
in
stos
stc
lea
mov
cli
maxps
dec
rcr
loopne
inc
data16
xchg
xchg
pop
push
outsl
push
pop
pushf
dec
mov
pop
lret
jae
xor
xor
rolb
ret
cli
adc
mov
pop
push
ret
xor
insb
fnsave
loop
or
push
movsb
enter
into
mov
mov
dec
stc
mov
out
jle
mov
xchg
out
hlt
cld
push
stc
xchg
cwtl
cmc
cmp
jmp
push
test
add
or
repnz
iret
std
dec
fimull
sti
dec
inc
inc
jl
or
std
dec
xor
dec
test
jbe
cmc
aaa
imul
mov
sbb
mov
gs
scas
addb
cmpsb
and
inc
in
mov
push
sub
cmp
sbb
push
mov
cs
je
into
sub
aam
out
addr16
add
pop
fwait
add
sbb
bound
lea
mov
dec
sub
aas
outsl
pop
jb
jns
jno
dec
mov
cwtl
sub
lcall
stc
addb
stos
xchg
jnp
mov
std
adc
lret
movsl
test
push
shll
adc
push
cmp
xchg
sub
and
loopne
sub
dec
mov
sub
test
ljmp
cmpb
das
sbb
enter
dec
int
jbe
push
out
bnd
sbb
and
hlt
call
pop
or
xor
imul
pop
jns
arpl
and
faddp
in
lret
inc
mov
testl
aad
scas
pop
ret
shlb
cmp
pop
pop
decl
mov
mov
mov
int3
jbe
add
mov
mov
jns
outsl
test
cmp
sbb
cmp
call
push
mov
cld
jl
test
jp
push
xchg
mov
jmp
and
inc
stos
popf
adc
cmc
push
push
jno
jmp
jo
push
daa
mov
pop
inc
sub
ja
bound
jno
push
sub
dec
pop
jns
jnp
je
nop
jge
ficompl
push
mov
mov
aad
cs
rcrb
js
push
mov
pop
popf
iret
inc
cmp
jp
lods
jp
pop
sub
jg
cld
push
inc
aam
sahf
mov
push
cltd
out
or
test
push
dec
aad
inc
aam
popl
cmpsl
das
rcll
and
sbb
xor
mov
inc
sub
pop
pop
dec
mov
pop
and
push
xchg
js
push
scas
leave
aas
or
cs
inc
jnp
xlat
push
mov
test
push
fwait
imul
cs
xchg
js
inc
mov
add
insl
daa
lea
push
push
inc
mov
sub
push
rcll
xchg
cmp
cwtl
leave
fwait
into
adc
cwtl
fstpt
gs
stos
mov
stos
test
gs
sarb
inc
out
lcall
sub
or
inc
cltd
or
sbb
fidivrs
out
sub
aaa
push
adc
je
cltd
sbb
sbb
sahf
jns
imul
pop
mov
and
cmc
sti
ds
inc
pop
jno
adcl
jno
lea
pop
jle
jge
mov
and
pop
inc
mov
std
add
rorl
adc
ret
ds
lea
ljmp
jmp
mov
int3
aas
mov
cltd
fidivrs
es
aaa
loop
push
sub
rorl
outsl
cli
sub
repnz
jne
aaa
mov
int
lret
cmpsl
insl
cmp
jae
cmp
imul
inc
pop
ljmp
pop
rcl
mov
scas
mov
loopne
bound
test
mov
je
xchg
decl
push
sbb
clc
cltd
pop
les
xchg
sti
je
mov
mov
bound
and
jbe
lds
in
loopne
xchg
js
ficompl
and
into
imul
mov
pop
sub
sub
into
les
subl
in
or
std
fbld
and
xor
fiadds
stos
xlat
pop
push
add
lock
roll
and
cmp
cmp
shl
lret
repz
shlb
sub
adc
fidivrl
popf
push
lret
das
dec
pop
imul
sbb
push
push
cmp
pop
sub
sub
rcr
mov
outsl
mov
push
inc
ljmp
or
cmp
loope
push
pop
repnz
xchg
setp
push
or
std
push
xor
push
pop
arpl
ss
scas
lret
daa
and
fimull
adc
mov
inc
in
shlb
insb
push
xlat
mov
gs
mov
push
xchg
pop
mov
dec
out
scas
fldl
pop
dec
pop
jle
add
xchg
out
cmp
scas
jo
fldcw
call
lcall
xchg
sbb
sbb
notb
dec
insb
insl
loope
iret
les
push
add
jne
push
jp
cmc
outsb
jnp
daa
movsb
jbe
adc
and
ss
sub
inc
and
pop
mov
pop
adc
mov
sahf
iret
mov
xchg
hlt
nop
outsb
dec
cmpb
jne
gs
iret
in
dec
je
cld
xchg
and
ss
dec
in
dec
mov
aaa
ret
cmp
movsl
jb,pt
aad
add
xchg
jp
aas
mov
lea
add
cltd
pushf
mov
jns
shlb
test
dec
xchg
cltd
std
subl
cmpb
std
or
jle
cmpsb
dec
sti
cs
push
fisttps
xchg
sub
add
sbb
les
sbb
sbb
add
aaa
adc
push
cmp
cwtl
jae
out
ret
dec
push
sub
aad
mov
in
xor
lret
xor
push
xchg
dec
cli
push
jle
shl
mov
std
lret
popa
loop
pushf
aad
xchg
cld
xor
cmp
dec
inc
jae
std
loop
in
dec
cmp
xlat
imulb
dec
sbb
jne
ds
inc
jle
test
mov
das
lea
and
jne
ss
bound
mov
aam
arpl
lds
daa
or
jmp
dec
mov
das
andb
div
sub
pop
test
inc
cmp
inc
jl
mov
xor
bound
cmpsl
mov
in
xor
pop
cwtl
fdivl
mov
lahf
cltd
dec
mov
cmp
fwait
xor
add
inc
xor
mov
add
cmp
add
ds
pushf
mov
sub
pop
dec
sbb
int
jo
mov
pop
je
test
sbbb
ja
hlt
add
sbb
xor
push
daa
fwait
xor
mov
add
pop
sbb
add
jecxz
mov
add
push
insl
in
inc
inc
loopne
and
xchg
push
sbb
pop
mov
mov
iret
in
faddl
movsb
adc
mov
push
fldpi
je
mov
es
pop
test
push
and
test
jb
fimuls
out
cmpb
aad
inc
cmp
push
xor
xor
jmp
in
dec
mov
or
stos
xchg
jmp
inc
leave
scas
sti
dec
incl
into
in
inc
flds
fnsave
ds
call
dec
and
cltd
push
fmull
jo
stos
bound
and
in
sub
push
ljmp
push
cmp
adc
adc
xchg
fldlg2
mov
gs
xor
insl
clc
dec
mov
int
xchg
xor
test
pop
cmp
aad
or
jbe
ss
rolb
aas
ljmp
xchg
ret
sbb
les
inc
mov
add
ss
test
in
lret
aaa
clc
jmp
add
iret
dec
push
mov
iret
sub
push
cmpsl
ss
cmp
xchg
mov
pop
push
cli
pop
sbb
or
lods
push
into
push
mov
std
jae
lret
mov
sbb
loop
or
pushf
out
dec
loopne
jge
sub
and
lock
mov
mov
xchg
out
push
cmc
cli
push
inc
or
mov
push
lea
std
add
or
jmp
insl
pop
andl
pop
mov
push
incl
sub
cld
cmpsb
dec
adc
notl
jae
xor
jae
xor
add
aaa
sbb
adc
mov
fs
push
pop
jns
shll
aas
cmp
xchg
cmc
add
xchg
push
into
dec
cmp
mov
jns
adc
add
sahf
mov
pop
ja
addr16
push
stos
lock
jns
lock
jno
loopne
daa
xor
repz
jp
fs
push
add
imul
xor
add
add
and
pop
push
cmp
ja
xchg
fimull
and
jnp
lock
repz
jo
cmpsl
push
aas
mov
in
push
mov
mov
jnp
sub
test
enter
add
fldl
sub
jo
inc
mov
inc
sub
int
push
pushf
pop
test
mov
decl
aad
add
xor
pop
sbb
lods
dec
xchg
out
pushf
in
outsb
sub
dec
push
lret
jmp
into
or
stos
subb
inc
push
mov
sub
jae
icebp
xchg
xor
mov
xor
scas
push
jg
adc
pop
cvtdq2ps
adc
test
in
int3
inc
mov
test
jb
jns
dec
mov
dec
dec
sbb
scas
mov
jae
sub
or
adc
fs
jne
xchg
or
push
fwait
jne
cmp
pop
jne
mov
or
pop
lcall
movsb
mov
cli
mov
sub
cli
sbb
das
aam
pop
incl
repz
jp
in
pop
add
dec
pusha
xchg
cli
call
jb
je
in
pusha
xor
dec
orl
jne
gs
adc
out
arpl
cwtl
cmp
add
sub
enter
xor
sbb
ljmp
mov
in
pop
mov
jg
jp
pop
jns
stos
aaa
xchg
mov
ja
xor
ja
test
lods
and
dec
dec
sbb
in
pusha
cmp
push
scas
jg
lea
jbe
lahf
into
jg
mov
pushf
jbe
das
scas
lock
in
jnp
pop
popf
lods
and
push
stc
mov
roll
sbb
cmc
iret
jge
or
pop
mov
fistl
out
lcall
clc
ds
leave
push
insb
xor
jae
jb
adc
cs
or
add
mov
pop
fs
dec
mov
adcb
cltd
inc
add
or
cmp
or
mov
pop
mov
mov
sbb
incl
xlat
stc
leave
add
stos
dec
mov
push
cltd
xor
or
popa
imul
push
mov
shll
dec
inc
and
jl
jnp
in
pop
or
insl
add
jmp
roll
fisttpll
fildl
mov
and
nop
aas
and
inc
insl
mov
inc
xor
mov
notl
inc
inc
jg
push
inc
inc
push
push
jne
pop
jp
cltd
mov
icebp
fwait
jp
dec
adc
mov
cltd
jo
pop
fwait
jne
iret
jae
out
or
mov
sbb
pushf
mov
adc
xlat
stc
les
imul
lods
add
and
mov
test
xchg
sbb
cmpl
jbe
jne
push
mov
repnz
lock
pop
test
je
inc
in
dec
loop
out
flds
mov
or
jmp
test
cltd
int3
add
lds
xor
pop
data16
or
pop
sbb
push
add
pop
enter
lahf
stos
aad
push
hlt
add
adc
sub
outsl
jno
jo
mov
jge
dec
mov
mov
jg
lret
dec
mov
lret
int3
or
fucom
sub
popa
mov
divl
mov
ja
cld
xor
push
xchg
sbb
mov
xor
pop
push
movsl
or
or
cmpsl
outsl
xchg
dec
cld
popa
jno
xchg
pop
jo
jne
fcmovbe
xor
sbb
xor
sbb
mov
aaa
dec
dec
sbb
andl
jp
adc
shll
in
stc
into
hlt
sbb
add
roll
inc
scas
jbe
aam
push
push
jmp
test
dec
mov
daa
and
lcall
push
jecxz
jnp
mov
jp
adc
pop
and
ret
mov
popf
fistpll
loop
gs
cmp
mov
adc
lods
lcall
out
stos
test
gs
adc
inc
cs
push
iret
scas
cli
cmp
repnz
adc
push
lea
aad
lods
sahf
or
adc
ficoms
ja
test
bound
push
bound
inc
je
out
lret
je
dec
stc
fidivl
pushf
outsl
mov
das
mov
js
inc
shll
sbb
outsl
jecxz
stos
xchg
xchg
pop
push
sub
xor
xorb
adc
push
into
test
es
jae
cmp
push
adc
push
loop
gs
add
icebp
xchg
scas
mov
movsb
sarl
sbb
stos
sbb
sbb
test
iret
cmp
out
mov
cmpsb
orl
lret
mov
inc
cmp
loopne
pop
mov
adc
cmp
jmp
or
and
imul
loopne
sbb
mov
out
iret
mov
sbb
pop
add
xor
inc
frstor
lret
sbb
pop
jnp
cmp
js
mov
cmp
lret
push
cwtl
adc
dec
cmpsl
dec
fdivs
jae
aam
jg
dec
jge
xor
push
dec
icebp
xor
push
add
in
testb
popf
dec
cwtl
dec
jge
ja
and
jno
lret
xor
cmpsl
xor
mov
pop
sub
or
dec
pop
sbb
outsl
push
addl
pop
adc
js
xchg
icebp
lods
xor
cmp
movsb
ret
xor
int
sbb
sub
xchg
sbb
pop
mov
leave
lret
add
stos
addr16
pop
xor
jae
scas
mov
jp
mov
test
adc
sbb
push
adc
dec
int
inc
push
repnz
jl
int3
mov
xlat
push
add
jae
int3
sub
es
xchg
dec
js
in
and
jb
adc
pop
sub
ret
xor
test
sub
xchg
mov
outsl
int
out
sub
and
add
cmpsl
test
xchg
pop
xor
pop
sub
pop
data16
cmpsb
push
insl
shrl
dec
cmp
ret
movsb
cmp
addb
and
data16
pop
mov
jne
pop
mov
ret
ljmp
jnp
repnz
cltd
jne
aaa
aam
mov
xchg
insl
cmc
pop
dec
inc
int3
pop
test
pop
jl
jnp
dec
xor
or
test
push
pop
rcrl
sbb
push
xor
xor
stc
xchg
xor
sbb
cli
and
jns
add
pushf
push
in
jo
sahf
sbb
insb
addr16
es
cmp
adc
jne
push
mov
mov
lcall
in
add
addr16
xor
in
jl
insb
xchg
dec
and
inc
sbb
jmp
push
mov
mov
daa
mov
test
jle
movb
enter
shll
mov
dec
in
hlt
lret
js
mov
ds
rolb
jecxz
in
pop
dec
push
aam
pusha
dec
mov
mov
add
fs
or
lds
loope
mov
in
ds
dec
cmp
mov
xor
or
clc
push
insl
pop
lret
or
mov
mov
mov
mov
xor
xchg
xor
dec
fwait
mov
xor
inc
jno
lcall
xor
mov
aad
pop
jno
adc
dec
imul
and
sub
mov
movsb
inc
or
gs
in
iret
mov
outsb
scas
xor
outsb
xchg
cwtl
cmp
jmp
je
mov
push
jle
pop
xlat
cltd
push
dec
xlat
insb
xchg
adc
jne
jno
stc
fnstcw
insb
add
insb
mov
das
fisubl
stc
stc
test
sbb
shr
popa
mov
or
fs
adc
xlat
popf
lea
insb
mov
add
jl
adc
mov
pop
inc
je
push
xchg
test
dec
imul
add
dec
mov
fldln2
pop
leave
add
mov
or
fsubr
add
call
outsl
sbb
mov
sub
pop
mov
test
jbe
add
push
push
push
ss
pusha
repz
jg
jmp
sbb
mov
jmp
or
fldcw
adc
mov
mov
iret
mov
push
cmp
add
ret
fbstp
inc
and
lahf
dec
push
mov
pop
or
ja
fmull
fwait
shrb
push
jl
xlat
vmread
aam
js
movsb
scas
fs
dec
adc
in
sbb
cmp
popa
fs
pusha
adc
js
enter
fldcw
imul
sbb
dec
mov
adc
in
subl
in
add
std
adc
pop
iret
jmp
insl
std
into
xor
cmp
pop
int3
sub
cld
pop
and
cwtl
add
push
push
adc
fimull
inc
or
cmpsl
adc
cmp
in
push
xchg
cmc
sbb
int3
sbb
mov
movsl
ret
fs
jns
jge
fldenv
scas
sbb
sbbb
jb
xor
cmp
sub
cmp
dec
sahf
ret
hlt
jo
mov
shll
cli
shrl
gs
sbb
inc
dec
hlt
pop
js
jl
or
xchg
cmp
pop
cld
sub
and
addb
push
xchg
ja
cli
cmpl
in
add
dec
push
pop
mov
pop
sbb
xchg
xor
test
pop
fildll
or
hlt
sbb
cmp
push
sub
std
stos
lcall
fs
mov
dec
gs
pop
xlat
fldcw
add
mov
notb
lcall
adc
fcoms
xchg
je
adc
sbb
jne
ret
add
pop
add
jnp
or
lds
mov
fwait
inc
add
xchg
arpl
sbb
fimuls
mov
out
push
adc
jo
andb
das
mov
push
scas
and
pmaxub
xchg
jb
push
in
push
imul
int
rcrl
daa
pop
ret
gs
cmc
pop
shll
insl
aam
mov
cmpb
addl
dec
outsb
jnp
insb
scas
test
mov
scas
loope
faddp
mov
add
loopne
pop
inc
std
add
add
xchg
mov
je
and
jge
bswap
sub
xchg
sub
push
add
dec
gs
pop
subl
adc
or
push
jno
jmp
sub
jge
ficomps
and
xchg
push
adc
or
mov
xchg
jb
mov
mov
xchg
and
mov
push
inc
test
adc
cmc
dec
stos
stos
arpl
pop
aam
adc
cltd
pusha
xor
pusha
sbb
adc
dec
into
insb
ret
jo
push
repz
cld
ficoms
sbb
pusha
mov
mov
xor
jp
push
adc
pop
or
pop
adc
loope
arpl
gs
mov
adc
mov
xchg
mov
notl
rcrb
jns
out
je
and
insb
arpl
fs
in
out
fiadds
arpl
xlat
mov
test
lcall
ret
int3
pop
imul
mov
mov
dec
add
xchg
filds
in
adc
xchg
and
fmul
das
mov
sbb
rcll
clc
daa
mov
cwtl
adc
or
fisttpll
bound
ficoml
jno
and
insb
xchg
sbb
movsl
mov
pusha
pusha
cmp
push
addr16
into
cltd
outsb
rcrb
inc
pusha
pop
xor
add
mov
insb
mov
mov
iret
cmp
pop
enter
xchg
mov
push
mov
leave
push
pop
filds
sub
rcr
cmpsb
enter
inc
out
data16
pusha
cmp
mov
fs
push
mov
jno
xor
ficoml
gs
test
mov
push
pushf
adc
xor
stc
mov
bound
push
arpl
ret
fs
jns
sahf
fisttps
fwait
scas
fdivrs
insb
mov
cmpsl
mov
daa
or
icebp
push
add
icebp
dec
mov
fiadds
test
mov
pusha
pushf
bound
scas
jmp
mov
mov
pop
mov
xorb
inc
xchg
mov
loopne
xlat
and
mov
push
cs
insb
adc
and
sbb
sub
lods
mov
mov
inc
js
jbe
jmp
out
push
jmp
out
mov
jle
pop
cmp
gs
imul
jae
cld
ds
imul
aam
xchg
arpl
dec
push
fsubrp
mov
out
fidivs
mov
or
mov
mov
inc
sahf
mov
adc
dec
jl
xchg
push
fisubs
imul
popa
xor
das
rorl
pop
aam
repz
inc
outsl
push
ja
adc
push
ret
mull
les
imul
mov
mov
das
jmp
or
add
test
pusha
adc
aaa
clc
test
lea
push
shlb
movsl
adc
fistpl
mov
add
mov
jmp
add
fidivrs
adc
sbb
sbb
push
and
outsl
out
inc
or
gs
shrl
mov
mov
es
lret
mov
dec
mov
mov
push
pop
mov
inc
movsl
shlb
sti
xlat
fmulp
sbb
pushf
pop
push
jo
lods
inc
out
stos
scas
pop
fiadds
rorl
das
push
mov
adc
xor
pop
xor
mov
jo
outsb
lds
clc
fidivrs
or
scas
outsb
fdivrs
jmp
sbb
pushf
mov
cmp
cmp
hlt
add
pop
mov
sub
mov
and
and
leave
adc
mov
dec
push
sbb
sbb
push
movl
int
out
shlb
xorl
call
cwtl
arpl
call
lahf
dec
dec
int
mov
push
mov
pop
and
lock
daa
aam
adc
gs
sub
inc
push
int
push
xchg
call
cmp
jbe
lea
fs
enter
mov
add
mov
xchg
loop
shlb
adc
mov
sbb
dec
cmpsl
sarb
in
adc
or
gs
push
test
pop
jns
movsb
leave
hlt
lahf
loope
push
in
mov
xor
mov
call
jecxz
xlat
xor
xchg
push
push
dec
sbb
je
push
pop
jl
adc
gs
cltd
cmp
sbb
pop
sbb
icebp
sub
cmpb
test
mov
data16
xchg
out
test
xchg
pop
xchg
insl
push
test
mov
cmp
push
daa
popa
lods
popf
fimuls
pop
or
dec
sub
sub
cmp
fstl
movl
test
push
pop
inc
jl
and
mov
hlt
jl
popa
inc
or
pop
dec
hlt
outsb
jns
aas
push
leave
insl
enter
sbb
jecxz
aam
or
mov
and
out
inc
push
dec
repnz
insb
and
scas
lds
call
sub
mov
and
insl
add
pop
lea
sbb
mov
xor
jno
cmp
setp
popa
test
arpl
jge
add
jecxz
repz
xchg
mov
lds
mov
push
xchg
clc
ljmp
daa
pop
ja
loopne
push
pushf
cltd
in
lods
push
push
sbb
hlt
roll
insb
and
xchg
enter
push
and
sub
ljmp
scas
dec
add
aam
mull
jle
cwtl
pop
jle
xor
in
push
push
dec
push
shll
cli
icebp
xor
in
je
xchg
jge
std
xlat
cmp
xor
jns
jl
xchg
icebp
lret
add
aas
sub
decl
sub
les
and
mov
scas
mov
fs
push
dec
jne
or
mov
iret
fnstsw
iret
lock
sahf
loop
adc
add
pop
cmova
adc
dec
xor
ja
out
mov
add
mov
fadd
addr16
in
pop
adc
in
outsb
xor
jno
negb
std
xchg
xor
sub
mov
rclb
out
xor
inc
push
and
cli
inc
sub
out
mov
out
adc
sahf
xlat
daa
arpl
ljmp
and
sub
dec
push
fcoms
ja
stc
inc
icebp
or
idivb
pop
sbb
and
push
int3
pop
dec
negl
cltd
inc
into
xchg
cmpsl
hlt
mov
fcoms
je
xchg
fs
iret
inc
pop
pusha
cld
dec
and
mov
popl
lcall
dec
popa
js
xor
and
mov
in
dec
xor
test
fs
xchg
gs
fwait
jecxz
pushf
add
shlb
adc
gs
xlat
dec
sbb
mov
je
das
adc
clc
pop
pop
std
xchg
xor
sub
mov
ficoml
stc
xor
jb
je
mov
adc
stos
lcall
push
fwait
ja
cli
mov
or
mov
repz
lods
das
mov
js
mov
cmp
mull
andl
pop
sub
icebp
jno
jle
pop
xchg
mov
and
pop
jle
aad
movsb
imul
or
jbe
push
lcall
test
xchg
mov
bnd
cmpsl
inc
insl
cmp
pop
add
and
cmp
call
mov
or
enter
adc
lods
lods
inc
or
stos
inc
or
pushf
gs
lods
les
shrb
inc
imul
iret
insl
sarb
push
mov
push
jmp
mov
mov
add
arpl
stos
sbb
jecxz
mov
aaa
bound
aad
ss
push
lret
leave
mov
aaa
mov
movsb
inc
or
jp
das
cli
xor
push
inc
mov
lds
or
inc
das
loopne
push
into
loopne
sbb
aaa
es
ret
jp
lds
cmpsb
inc
nop
mul
ljmpw
clc
xorl
cmpsl
mov
arpl
mov
cmpsl
jae
push
lods
jne
clc
mov
and
and
or
jo
lds
ljmp
pop
adc
scas
js
leave
and
cmc
addr16
adc
divl
lret
mul
imul
mov
lock
sbb
ja
dec
push
xor
mov
ljmp
rclb
testl
dec
mov
imul
scas
dec
ja
adc
outsb
mov
xor
xor
xchg
pop
into
adc
push
out
out
and
in
adc
leave
std
mov
in
hlt
movsb
mov
mov
dec
pop
daa
mov
je
and
lods
or
fldt
idivl
dec
test
or
scas
sub
movsb
ljmp
aad
cmpsb
sub
pop
imul
inc
imul
xorl
and
sub
rorb
inc
sub
mov
stos
xchg
push
push
roll
dec
fcoml
or
inc
and
or
and
sub
add
xor
fdivr
into
movb
pop
std
ljmp
push
mov
inc
imull
lret
jp
aam
xor
sub
imul
enter
mov
sti
div
pop
lcall
enter
push
dec
inc
out
pop
add
xchg
fcmovnbe
or
pop
fs
imul
add
or
icebp
pop
scas
pop
mov
pop
mov
dec
mov
mov
add
sub
lcall
cwtl
popl
lcall
push
cmp
aaa
or
mov
inc
divl
mov
inc
sbbb
lahf
pop
sub
jmp
push
adcb
adc
cmp
or
dec
je
inc
mov
jl
xchg
or
fsubs
and
aaa
adc
xchg
sbb
rclb
cmp
outsl
test
xor
mov
int3
cltd
aaa
adc
lret
adc
and
jb
pop
cmc
stos
testl
pop
addr16
in
hlt
test
xor
out
repnz
mov
and
xor
xorl
mov
pop
out
aas
mov
jmp
mov
xor
xchg
les
das
mov
mov
xchg
ret
xchg
cmp
pop
jno
cwtl
pop
test
call
cmp
push
push
mov
inc
sti
js
aaa
sub
inc
mov
xchg
jne
jmp
repnz
mov
into
push
and
mov
leave
repnz
jmp
mov
insl
out
mov
sub
rcl
xor
jnp
dec
lret
xchg
push
mov
cs
jecxz
cmpsb
fs
scas
pop
or
xor
or
scas
mov
inc
or
je
test
dec
pop
mov
pop
or
jns
inc
dec
arpl
ret
mov
inc
enter
pop
inc
mov
pop
xchg
loop
leave
repz
sub
ret
pop
xor
test
dec
sub
add
add
push
dec
cmp
pop
add
inc
loop
mov
cmpsl
inc
cmc
scas
aam
jbe
roll
push
mov
jp
movsb
push
cmp
or
pop
je
inc
fucomip
sbbb
cltd
movsb
dec
popa
inc
adc
dec
gs
cltd
lea
lds
shl
mov
inc
xor
shrb
or
ljmp
dec
inc
push
stc
cmp
inc
stc
xor
dec
stc
or
jne
add
jge
push
inc
xchg
stc
out
cmp
inc
mov
movb
inc
sar
cmpsb
inc
ret
stc
mov
repz
xchg
stc
xchg
pop
adc
add
stc
xor
stc
and
stc
push
inc
es
inc
inc
ss
jae
push
stc
arpl
stc
mov
ret
inc
sar
xlat
inc
mov
notl
inc
sbb
scas
push
pop
ljmp
jo
and
lock
mov
xor
stos
dec
pop
pop
cmp
push
cmp
int
mov
cmpl
fsubrs
imul
in
andb
xorb
mov
sbbb
cmp
jp
lret
jmp
mov
cmp
push
cmc
pop
mov
cmc
testl
in
div
insl
mov
notb
cmp
orl
push
orl
cmp
push
mov
sub
push
and
daa
push
xchg
pop
add
pop
pop
mulb
inc
pop
stos
and
dec
inc
mov
push
test
push
pop
cmp
push
push
cmpsb
sub
dec
dec
arpl
push
pusha
arpl
jo
and
repnz
xchg
inc
jne
rcrb
mov
add
imul
dec
pop
or
pop
mov
push
cmp
lret
rol
addr16
adc
stc
out
cmp
and
pusha
inc
jecxz
mov
stc
in
inc
outsl
jmp
lods
inc
pop
pop
lods
sbb
subl
push
lods
push
push
adc
mov
add
push
pop
fdivl
addr16
sbbl
or
pop
popa
loop
inc
pop
stc
inc
inc
or
outsl
inc
clc
fsubrl
loopne
imul
sub
call
pop
mul
mov
out
pop
mov
inc
and
mov
push
or
inc
pop
mov
and
pop
cli
cmc
cmp
lds
fwait
push
sbb
rcr
push
mov
arpl
push
movsl
arpl
push
push
arpl
push
inc
arpl
push
ja
lret
push
bound
push
das
pop
lahf
add
scas
stc
lock
mov
lock
jo
std
ss
dec
lea
cmp
ss
pop
ss
dec
jae
movsb
dec
clc
es
movsl
mov
pop
movsb
inc
sub
in
pop
idiv
xchg
xchg
lea
cmp
fsubr
cmpsl
daa
repnz
imul
dec
ret
es
movsb
sbb
pop
mov
xchg
jge,pt
mov
pop
push
mov
and
and
cli
cmc
in
in
lods
jle
or
pop
cmp
sub
inc
lods
xor
pop
xchg
adc
dec
mov
pop
ljmp
xchg
arpl
push
mov
sbb
aam
rcrl
ret
out
imul
sub
and
and
bound
in
nop
subl
nop
mov
sub
nop
sti
sub
loopne
idivb
or
dec
dec
cmp
pop
dec
sub
es
pop
idivb
dec
dec
testb
jnp
or
fsub
movsl
push
fnclex
mov
ss
dec
je
xlat
dec
fs
dec
adc
mov
add
xchg
add
dec
adc
cmp
xorl
and
shrb
push
lods
arpl
push
lods
xchg
pop
out
sbb
jl
iret
dec
insb
sar
scas
inc
mov
inc
sti
stc
sahf
dec
jmp
pop
mov
jmp
pop
aam
aad
les
inc
dec
hlt
push
aaa
push
imul
cli
test
mov
xchg
data16
push
rol
divb
dec
xor
sub
push
mov
sub
push
dec
sub
push
jle
int
outsb
fstl
arpl
push
ds
pop
jl
popf
loopne
add
inc
inc
lret
pop
push
lods
push
pop
and
inc
pop
xor
jno
add
sub
push
dec
sub
push
jle
int
outsb
sub
push
push
sub
push
adc
fcmovnu
and
into
cmpb
orb
sbbb
jb
decb
arpl
xor
jbe
rorl
ss
or
mov
dec
cmp
lea
mov
adc
ja
pop
and
pop
and
inc
xchg
pop
xor
add
popf
inc
clc
stc
mov
cli
mov
in
or
outsb
adc
push
test
mov
lea
lock
lea
into
lea
sahf
lea
ret
cmp
mov
mov
dec
jp
int
jb
aad
push
fisttpll
movsl
dec
push
ss
inc
fldenv
popa
dec
imul
ss
xchg
sbb
ss
dec
mov
ss
dec
push
ss
outsb
rorl
mov
dec
push
test
es
dec
shlb
jne
lret
dec
ret
dec
cli
ss
dec
loop
cmp
ss
dec
stos
ss
dec
pop
ss
dec
push
mov
dec
push
ss
push
xor
cld
cmp
pop
js
or
dec
cmp
addl
push
orl
cmp
adc
insl
sub
cmp
subl
cmp
xorl
out
inc
dec
stc
xor
inc
pop
or
clc
push
sbb
imul
pop
subl
pop
leave
lods
mov
dec
pop
mov
stc
or
in
cwtl
dec
sbb
inc
pop
sbbl
jno
sub
pop
andl
cmp
xor
cmp
sbb
cmp
imul
sub
popf
and
dec
imul
insl
dec
push
sub
inc
and
dec
sub
jne
sbb
fld
movsl
jbe
leave
movsl
outsb
fcom
movsl
data16
mov
inc
in
fnsave
adc
stc
jl
add
stc
cmp
dec
stc
xor
stc
or
stc
add
repz
movsl
add
bound
lods
push
adc
push
or
jne
lret
dec
ret
int
out
testl
inc
divb
dec
jge
adc
dec
icebp
lock
ljmp
pop
out
imul
es
idivb
cmp
and
inc
cmpl
cmp
or
js
add
pusha
sbbl
cmp
and
push
pmaddwd
dec
mov
cmp
xor
in
in
pop
push
push
pop
pop
push
packsswb
push
imull
add
adc
sub
scas
cmp
pop
mov
push
push
js
aas
stc
aas
inc
xchg
ficompl
lods
fcoms
add
push
inc
inc
sub
stc
dec
stos
sub
push
inc
pop
lahf
orb
test
and
pop
out
sub
xchg
or
push
cmp
imul
xor
adc
cmp
addl
mov
jmp
dec
inc
sti
bound
mov
inc
imul
dec
sahf
test
inc
xor
sbb
iret
das
inc
and
pop
out
jno
jne
stos
test
nop
cmc
xor
mov
adc
pop
cmc
jmp
mov
rorl
stos
jmp
push
cmp
xor
outsb
lock
out
lock
lea
divl
pop
jmp
jge
sbb
sub
mov
lds
and
adc
push
cmpsl
arpl
xor
jns
push
fsubrp
aaa
lret
cmpsb
pop
and
jp
jl
adc
insb
pop
out
lods
sahf
cs
shrb
and
push
jbe
out
subb
mov
cli
lods
xchg
push
add
pop
push
xchg
arpl
push
mov
test
scas
push
xor
addr16
aad
jp
repz
adc
cmp
sahf
int3
adc
nop
and
xor
int3
lahf
cmpsb
and
and
pop
int
jb
aad
push
fisttpll
shr
cmp
stc
out
in
xlat
cmp
cmp
into
lock
je
ja
sub
push
mulb
pop
lods
add
sub
iret
add
test
fisubrl
mov
cmp
in
xchg
and
and
mov
fstps
jns
incb
jmp
push
arpl
out
pop
sbb
insl
dec
in
inc
sub
cli
data16
sbb
push
push
arpl
and
sub
pop
pusha
nop
add
cli
orl
adcl
push
push
push
lods
sub
dec
push
cmp
sub
push
pusha
sub
push
cmp
mov
das
loop
loop
inc
jo
ss
pop
repnz
repnz
ds
mov
xchg
sub
nop
mov
into
sti
sar
inc
fcomi
mov
loop
xchg
push
xchg
pop
jge
or
in
jo
icebp
lock
stc
lock
shl
leave
lock
xchg
dec
dec
andl
mov
cmc
rol
push
and
stc
repz
mov
fiadds
stc
scas
inc
mov
inc
sti
stc
sahf
inc
jmp
outsb
out
dec
imul
dec
cli
cmp
movsb
in
scas
es
pop
ss
pop
push
repz
xor
dec
dec
decl
ss
dec
insb
fisttps
ss
dec
or
mov
sahf
dec
jmp
outsb
out
cmpl
cmp
push
ret
cs
pop
stc
ds
dec
cmpsb
cmp
out
push
xor
lods
arpl
push
je
xlat
push
arpl
xor
out
pop
xchg
rclb
pop
xchg
xor
pop
xchg
pop
inc
adc
orl
fdivrs
movsl
dec
fdivr
movsl
sub
movsl
jb
aas
sti
xor
jle
adc
das
sahf
popa
xor
repnz
lds
push
push
out
or
fldenv
test
pop
notl
xor
mov
push
out
dec
mov
inc
mov
sub
push
in
sub
dec
inc
pop
fldcw
dec
dec
repz
dec
bound
test
in
movsb
cmpsb
pop
scas
insb
cmc
pop
mov
fstps
int
cmpsb
add
cmpb
fsubl
outsl
pop
jae
rorb
lods
sub
repnz
and
push
mov
aad
dec
sub
in
in
or
arpl
push
or
es
adc
pop
mov
dec
cld
ret
pop
pop
fwait
add
xor
mov
lcall
ret
lret
stc
mov
cmp
popa
out
xor
repnz
lock
int3
out
pop
lcall
sbbl
cmp
cmp
mov
cmc
stos
mov
cli
insl
pop
inc
xchg
popf
sbb
dec
xor
mov
loop
dec
xchg
sub
call
dec
push
fimull
std
and
ljmp
lock
scas
cs
cli
repnz
push
fistpll
not
xlat
das
lret
decb
push
ljmp
pop
pop
adc
ja
mov
lods
movsb
popf
int
jmp
or
loopne
fwait
sti
aas
xlat
mov
push
mulb
dec
cwtl
mov
pop
fdivrs
dec
lods
nop
pop
in
adcl
lods
mov
fsubrl
and
push
popa
pop
push
xor
call
mov
andb
xor
mov
lea
push
ds
loope
mov
sbb
mov
daa
pop
cmp
jns
in
negb
cltd
sub
sbb
push
xor
js
mov
fcomi
mov
mov
xor
push
repnz
mov
cmp
fcompl
inc
pop
ficomps
sbb
xorl
mov
add
push
cmc
into
mov
cmc
bound
ja
mov
mov
jmp
or
sti
test
idiv
push
fidivrs
push
mov
pop
movsb
inc
sbb
push
int3
cli
test
cmp
cmc
jb
push
ret
aad
pop
push
nop
mov
movsl
pop
fldl
mov
ja
add
adc
inc
mov
out
mov
dec
insl
stc
add
jge
sbb
xchg
sbb
push
pop
arpl
push
push
pop
cmc
gs
mov
test
jmp
mov
push
arpl
test
pop
pushf
insb
in
scas
or
dec
mov
and
ljmp
pushf
mov
inc
scas
test
sbb
lahf
and
push
adc
cmc
dec
dec
push
push
lock
mov
enter
outsb
push
sub
sub
push
mov
ret
mov
arpl
arpl
sub
pop
lods
sub
push
lods
push
sub
shr
sub
mov
mov
or
jne
add
xchg
pop
sbb
gs
mov
cltd
and
dec
cmp
aam
hlt
cmpsl
cmp
xlat
and
cmp
xor
js
ljmp
inc
dec
divl
ret
pop
cmpsl
dec
dec
sub
idivb
shlb
outsb
pop
int
jge
negb
and
pop
daa
lea
sbb
movsb
xlat
ret
lahf
rcll
sub
sar
cmpsl
inc
repnz
js
cmp
push
out
mov
xorl
xchg
daa
imul
pop
pop
or
jns
lret
cli
pop
or
mov
jle
sub
and
mov
bound
cmc
outsl
les
push
pushf
inc
inc
lock
cmp
adc
pop
sub
dec
sbb
int
cmp
jo
das
cs
xchg
test
nop
loopne
xchg
popf
sbb
dec
xor
inc
dec
sub
sbb
jae
add
cmc
test
fcom
pusha
pop
xchg
aaa
out
push
addb
sbbl
or
repnz
or
sbb
in
or
push
lock
sbb
push
lock
enter
or
test
bnd
stos
cmpsl
adc
mov
mov
cmc
dec
sub
das
bound
mov
inc
divb
ret
xchg
sbb
sbbb
adcl
movsb
pop
cld
out
pop
sub
out
inc
movsl
lahf
pop
push
xchg
loopne
sub
pop
lock
int
mov
fnstsw
cmc
cwtl
mov
cmp
aas
and
outsb
cmp
mov
add
xchg
and
sub
dec
inc
fincstp
shrb
inc
insb
xchg
sahf
sub
out
shl
mov
xchg
adc
enter
stc
adc
pop
sbb
mov
ret
pop
mov
adc
dec
sub
jl
gs
lods
and
push
testl
push
lahf
ss
cli
ja
inc
push
cmc
lock
dec
pop
movsb
movsl
pop
sub
xor
jge
and
and
inc
add
and
in
cmc
pop
mov
leave
mov
bound
ss
push
ret
or
cmpsb
inc
sub
nop
jb
add
sbb
cmp
sbb
imul
or
xor
mov
xchg
jns
mov
jns
arpl
ja
xchg
sbb
je
outsl
jo
xchg
lea
outsb
pop
xchg
push
loop
pusha
pop
pop
and
sbbl
xchg
mov
je
sub
or
add
ljmp
pop
xchg
adc
out
jns
mov
cwtl
andb
pop
ja
xor
das
lods
pop
cmp
pop
sbb
push
mov
mulb
jecxz
add
loop
add
add
lea
adc
xchg
sti
mov
shrb
aas
pop
andb
inc
push
dec
mov
cmc
es
mov
add
xchg
pop
pop
lods
cmp
js
in
sbb
clc
cli
mov
lock
arpl
cltd
fnsave
adc
icebp
pop
jne
dec
dec
xor
pop
mov
pop
xchg
pop
outsb
pop
into
pop
adc
push
movsl
push
fadd
inc
call
adc
insb
arpl
push
mov
arpl
pop
cli
xor
rcl
dec
es
dec
push
fwait
sub
push
movsl
xor
mull
add
shll
rcrl
cmp
or
mov
push
adc
pop
push
dec
cli
sti
xchg
popa
push
addr16
xchg
inc
push
pop
pop
xchg
dec
outsb
jp
mov
test
or
sub
dec
push
dec
test
jne
mov
rcrl
scas
xorl
daa
adc
pop
fnsave
mov
fsubp
xlat
inc
mov
shlb
pop
sub
push
pop
add
pop
aad
scas
out
sqrtps
insb
out
inc
pop
sbb
add
aam
shlb
mov
adc
and
sub
xchg
inc
or
inc
icebp
dec
aaa
daa
xchg
pop
sub
test
shll
push
xchg
cmpsl
shll
dec
pop
ljmp
imul
adc
jl
fisubrl
lods
dec
add
orl
gs
xor
decl
pop
andl
and
out
dec
sbb
in
mov
jg
pop
mov
xchg
movsb
pusha
pop
push
ret
dec
add
pop
shl
fwait
jns
jbe
sub
dec
add
insb
sbbb
cmc
push
mov
stos
inc
ss
sbb
ret
aas
lds
push
cmp
xchg
fbld
dec
lea
orb
fcomps
inc
aad
aaa
lea
lcall
cs
mov
pop
divl
push
or
jl
or
mov
rolb
push
pop
mov
and
pop
shlb
pop
push
mov
sub
and
lret
add
cmp
jmp
scas
inc
inc
out
sbb
repz
and
movsl
fdivs
gs
sub
sub
inc
jbe,pn
inc
ljmp
xchg
cmpsb
push
pop
dec
nop
push
imul
jmp
mov
cltd
push
dec
jg,pn
xor
cmpb
cwtl
fsubrs
je
push
mov
shrb
mov
xchg
aaa
cmpsl
dec
pop
leave
push
push
ja
fstps
pop
arpl
push
cld
shll
fdivrl
push
out
dec
inc
cmp
sub
xchg
pop
scas
lods
cwtl
movsl
adc
mov
or
mov
insb
mov
sbb
inc
lea
pop
jmp
orl
mov
iret
mov
jnp
jp
and
xor
arpl
push
lods
pop
ljmp
testb
inc
stc
mov
ja
push
jno
push
leave
cmc
inc
mov
arpl
aaa
inc
sbb
sahf
push
mov
rcrl
int3
sub
outsb
shlb
sbb
and
or
mov
imul
dec
arpl
mov
mov
pop
jle
inc
dec
hlt
mov
or
pushf
pop
imul
sbb
inc
push
cli
pusha
test
inc
mov
push
or
pop
stc
or
xchg
out
push
sub
dec
inc
pop
jg
lahf
inc
sub
xchg
ds
bound
int
in
inc
cmc
sar
push
fimuls
aas
insb
or
and
stc
aas
inc
jl
sbb
sub
pop
mov
popa
out
arpl
jmp
mov
stc
mov
loop
in
or
popf
add
mov
arpl
int3
fdivs
fsub
movsl
inc
aas
imul
and
out
inc
sbb
dec
ljmp
xchg
lods
sub
pop
mov
add
imul
pop
lods
sbb
xor
mov
dec
cmp
lock
pop
pop
xor
xchg
mov
into
or
pop
push
mov
cmp
dec
out
jo
divl
mov
jae
in
mov
js
shrb
mov
mov
movsl
adc
sub
out
inc
mov
cltd
dec
push
lods
addr16
xlat
fcoml
push
push
dec
in
jno
int
lcall
or
jns
inc
mov
lret
pop
add
sub
mov
mov
sbb
adcb
xor
fs
jnp
inc
fldt
dec
jg
or
mov
xor
cmp
cmp
pop
pop
shll
call
mov
cs
scas
xor
jb
pop
pop
push
lods
xchg
sub
pop
imul
das
sbbl
or
adc
adc
cmp
jbe
mov
lds
call
adc
dec
int
xchg
jbe
cmc
out
inc
sbbl
pop
mov
xchg
sbb
or
dec
jl
push
stos
pop
sbb
insb
sti
leave
ficoml
pop
dec
dec
decb
mov
pop
mov
lahf
fs
out
pop
and
pop
mov
jb
and
movsl
mov
adc
in
sbb
mov
sbb
xor
int3
out
arpl
jbe
ret
sub
gs
adc
inc
jo
xchg
push
lahf
pop
adc
mov
fisubrl
dec
fstps
sbb
sbb
decb
scas
cld
push
divb
in
cs
xchg
test
jo
icebp
cmp
and
jmp
pop
xchg
fld
dec
lods
cmc
test
and
popf
push
addr16
pop
mov
outsl
cs
push
dec
mov
add
jmp
in
insl
cltd
push
sub
sahf
sub
stc
dec
js
jns
dec
push
cmpsb
in
push
fiaddl
sar
icebp
sub
hlt
xor
dec
lds
jl
lock
dec
jne
pop
xchg
push
out
test
cmpsb
cmp
push
scas
int3
fcmovb
shrl
ret
mov
pop
lds
cmc
in
cwtl
or
cwtl
jmp
es
dec
sahf
xor
cmp
stc
enter
adc
inc
sti
xchg
popa
bound
movsl
push
cmp
xchg
jmp
or
or
js
and
mov
cld
sbb
rcrl
cmpsl
and
cwtl
fsubrs
movsl
sbb
adc
jb
imul
popa
inc
dec
cmp
add
cs
xchg
mov
cmp
insb
roll
xchg
repnz
adcb
mov
aas
and
pop
rorl
mov
int3
insl
mov
push
shll
aaa
jge
add
pop
rcll
leave
scas
aam
mov
bound
xchg
adc
ret
out
cs
ds
pop
movsl
out
lcall
lock
sub
mov
adc
xchg
inc
loopne
test
stc
mov
sar
fdecstp
sti
aad
cli
or
popf
movsl
and
fs
outsl
jp
loope
jo
xchg
imul
dec
inc
aas
add
aad
pop
adc
dec
and
int
xchg
push
xchg
mov
popa
sbbl
dec
mov
xor
repz
ret
int3
dec
mov
pop
jb
bound
push
pusha
shl
test
push
jae
sub
pop
imul
rolb
popa
and
pop
imul
jle
sub
adc
dec
push
inc
sub
xorl
int3
dec
lods
or
gs
scas
les
adc
xor
in
xor
fidivl
adc
in
xor
aaa
add
push
xor
fimuls
aam
mov
int3
inc
rcl
lods
leave
pop
mov
icebp
pop
mov
stc
pop
aam
loope
mov
lods
or
cs
xor
pop
movsl
pop
rcr
cmp
or
fcmovne
adc
xchg
and
cld
icebp
test
inc
pop
bound
je
push
fs
pop
inc
shl
sbb
imul
inc
push
loop
push
lret
jge
jge
cwtl
cwtl
jle
xor
lcall
dec
and
push
pop
jne
adc
mov
xchg
ds
dec
es
jno
cld
scas
in
in
cmp
aad
ss
mov
ljmp
mov
cmp
sbb
sub
inc
shl
loope
pop
dec
data16
int
jo
lock
loopne
push
jne
scas
lea
inc
sub
lcall
mov
inc
je
ret
sub
push
pop
and
xchg
mov
mov
icebp
adc
push
adc
mov
pop
add
test
or
int3
push
scas
jge
add
insl
shrb
mov
xor
add
inc
shll
add
dec
or
orb
xchg
xchg
das
sub
aas
lods
add
test
js
sbb
xor
dec
ja
js
rolb
test
and
mov
pop
jne
add
test
sbb
push
jbe
pop
mov
adc
inc
aam
cmp
sbb
lret
mov
lret
add
jge
lds
clc
insb
call
mov
inc
adc
mov
add
pop
or
mov
loopne
rolb
pop
cmp
cld
pop
mov
mov
sbb
xor
add
fistl
jne
pop
inc
popa
iret
xor
add
inc
mov
pop
dec
jne
call
add
and
push
dec
les
jp
jo
paddusw
inc
or
scas
and
inc
cmp
inc
popa
and
push
test
inc
les
or
pop
add
mov
gs
push
call
inc
and
es
aaa
cmp
jge
lret
std
imull
sub
jne
dec
push
cmp
je
jns
pop
pop
or
and
ret
addr16
lods
fldcw
fwait
adc
pop
or
mov
pop
adc
push
insl
into
pop
push
cmp
clc
mov
mov
test
dec
dec
push
mov
sti
and
inc
daa
jg
popf
jmp
lods
sub
daa
or
jmp
mov
pushf
add
inc
ret
xor
divb
adc
xorb
enter
lock
ror
push
incl
inc
jne
sub
add
and
lea
popf
aaa
sub
sub
lcall
stc
cmpsl
mov
dec
add
add
add
xchg
inc
in
sbb
mov
xchg
aaa
cwtl
jb
enter
dec
add
testl
mov
push
and
and
int
fs
add
push
dec
cmp
cwtl
dec
jns
jo
or
dec
or
ja
fnstcw
pop
mov
test
loope
mov
lods
jns
ficoml
aaa
jl
in
stc
imul
xor
inc
jp
jmp
sbb
test
jp
loop
call
lds
sbb
leave
sbb
sbb
and
icebp
pop
stos
mov
mov
or
aas
adc
and
test
jns
mov
shrl
jp
jbe
adc
cmp
scas
jo
inc
cmpsl
pop
stos
xchg
xchg
aas
sub
or
cmp
out
call
cmpsl
sub
stc
xor
insl
cmp
pop
cmp
jns
inc
push
js
addb
nop
push
sub
ds
scas
push
dec
int
push
add
bound
push
jne
pop
dec
iret
cmp
mov
jbe
inc
mov
xchg
into
mov
mov
and
inc
out
ret
sub
jne
rcrl
mov
push
mov
cmp
aaa
pop
and
shl
pop
adc
mul
xchg
fnstenv
lret
pop
negb
mov
lods
ret
test
or
xchg
and
jle
dec
nop
xchg
out
mov
rcll
inc
nop
jne
add
test
test
mov
mov
fs
mov
das
mov
shr
pop
adc
psllw
push
aam
enter
mov
shlb
mov
jmp
lret
subb
sbb
fwait
into
lea
xor
inc
push
pop
push
subl
xor
mov
aaa
jmp
adc
fnstsw
lret
push
rcrl
cli
xor
or
lcall
pop
cltd
fidivrs
jns
pop
aaa
aas
lahf
sub
notl
jb
das
mov
fstpt
xchg
dec
lea
idivl
adc
lds
cmp
dec
pushf
rorb
lret
adc
popa
aam
mov
xorl
cmp
bnd
xchg
cli
rorl
sub
movsb
stos
adc
decl
sbb
stos
pop
leave
lods
outsb
add
and
aas
adc
jb
and
push
xor
ds
or
iret
mov
outsb
hlt
or
add
add
add
pop
sub
sub
sub
btc
shr
xor
bts
btr
inc
adc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
shl
neg
movzbl
dec
bts
and
test
xor
jmp
lcall
ret
or
xor
shl
bts
not
and
cmp
test
movsbl
jmp
lcall
xor
add
add
pop
xor
xchg
push
sub
btc
shl
bsf
sub
sub
cmp
bswap
call
lcall
incl
ret
neg
sub
inc
xor
test
cmp
and
btr
test
bt
jmp
lcall
bts
mov
adc
shr
btr
shr
add
sub
mov
bts
mov
mov
xchg
push
push
xchg
dec
add
add
call
mov
adc
cmp
bts
bts
or
inc
add
mov
xor
sub
dec
neg
bts
test
neg
shr
adc
mov
mov
shl
sub
xchg
mov
bsf
adc
mov
mov
btr
cmp
bts
inc
test
inc
jmp
lcall
ret
or
mov
add
cmp
dec
dec
bts
bsf
cmp
inc
call
lcall
add
xorl
pop
xor
xchg
push
btc
xor
adc
btc
add
movzwl
test
jmp
lcall
stc
add
xchg
ret
neg
sub
test
bswap
mov
cmp
bts
and
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
xor
xor
add
cmp
cmp
or
cmp
test
test
jmp
lcall
or
call
xor
btc
movsbl
adc
shr
or
cmp
add
mov
xor
bsf
add
shr
neg
mov
mov
btc
call
lcall
add
add
test
xor
inc
adc
xor
xor
inc
call
lcall
or
cmp
dec
bsf
or
adc
or
shr
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
mov
test
bts
btr
shl
adc
bt
call
lcall
ficoms
cmp
mov
test
test
inc
sub
test
mov
dec
jmp
lcall
mov
mov
out
xor
flds
insb
movzwl
adc
sub
mov
bts
neg
cmp
add
sub
add
shl
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
shl
and
sub
movzbl
not
xor
add
bsf
mov
push
add
cmp
btr
add
sub
cmp
sub
add
xor
not
adc
or
shl
mov
adc
add
mov
btr
adc
adc
btr
cmp
cmp
bts
test
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
adc
mov
xor
xor
adc
sub
call
lcall
add
cmp
test
sub
cmp
or
add
cmp
and
inc
mov
add
bt
or
or
sub
btc
bt
btr
sub
mov
movzbl
add
shl
sub
btr
test
test
call
lcall
mov
shl
test
cmp
mov
add
and
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
movsbl
add
adc
movswl
neg
xor
sub
shr
xor
xor
bsf
sub
mov
xor
cmp
jmp
lcall
mov
rcrl
shrl
mov
or
mov
mov
add
adc
sub
btc
inc
test
and
add
call
lcall
add
mov
test
dec
movzbl
movzbl
cmp
and
bsf
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
xor
cmp
test
bts
test
shr
bts
sub
mov
shr
or
bsf
sub
or
cmp
and
movswl
shr
shl
bsf
not
btr
movsbl
mov
mov
btr
bt
mov
add
test
xor
inc
cmp
test
bt
test
lea
inc
cmp
jne
add
bsf
mov
or
adc
xor
dec
add
shr
btr
neg
shr
or
cmp
not
test
call
lcall
je
btc
btc
adc
or
test
shl
bswap
and
sub
mov
mov
sub
or
mov
sub
test
xor
call
lcall
mov
cmp
mov
bts
sub
mov
add
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
cmp
or
adc
and
shr
bt
call
lcall
bsf
or
not
cmp
neg
bts
bt
xor
add
mov
cmp
adc
add
dec
btc
test
shr
jmp
lcall
rcrb
aad
shl
xchg
mov
cmpsb
data16
mov
add
not
btc
btr
shr
inc
sub
and
add
bt
call
lcall
add
btc
test
adc
sub
btc
movswl
xor
push
pop
inc
add
loop
adc
shr
test
shr
shr
test
neg
push
decl
mov
add
and
shl
btc
bt
cmp
add
and
call
lcall
jmp
shlb
push
lea
test
xor
cmp
bt
neg
push
shll
mov
and
test
shr
test
bt
shl
cmp
push
sub
shl
test
and
and
sub
btc
sub
mov
add
and
sub
and
adc
mov
push
push
pop
add
add
call
neg
mov
and
sub
xor
sub
not
neg
xchg
and
adc
bts
xor
bswap
add
add
mov
bt
adc
mov
not
inc
bt
and
xor
add
movzwl
call
lcall
mov
or
sub
aam
lock
cmpsl
xor
cmpsl
add
mov
add
bsf
mov
btc
cmp
shl
add
movzwl
call
lcall
mov
cmp
btc
movzbl
cmp
test
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
shr
test
add
neg
bswap
inc
test
shl
test
test
mov
btr
not
test
inc
bsf
and
xor
dec
call
lcall
sarl
shll
gs
shr
adc
movswl
mov
shr
bsf
test
shl
shl
neg
xor
or
cmp
je
xor
adc
xor
shl
mov
not
xor
bts
add
btc
bt
mov
or
sub
test
bsf
bts
call
lcall
shr
mov
bswap
shr
mov
add
xor
bsf
sub
btr
btc
dec
or
bts
add
or
bsf
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
cmp
bsf
add
mov
shl
movswl
adc
dec
push
decl
mov
add
cmp
adc
cmp
xor
xor
movzwl
btr
push
decl
mov
add
or
sub
xor
cmp
sub
neg
adc
add
and
add
movsbl
bt
or
xor
mov
jmp
dec
btc
adc
mov
add
movzwl
shr
dec
mov
btr
sub
bt
mov
adc
shr
test
btc
movzbl
mov
shr
xor
movzwl
sub
bsf
and
bt
add
and
adc
btr
cmp
shl
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
add
shr
add
add
cmp
neg
shr
shr
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
or
movzwl
bsf
test
adc
adc
sub
dec
push
push
mov
bts
and
bts
sub
dec
xor
push
sub
mov
or
test
bts
inc
xor
mov
test
mov
not
sub
add
shl
cmp
sub
bt
call
lcall
js
ret
jbe
fsub
shl
test
sub
movzbl
movswl
bts
not
lea
and
sub
and
test
shr
add
bsf
cmp
mov
cmp
xor
cmp
shr
movzbl
shl
inc
not
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
lret
mov
outsb
bt
mov
adc
bt
bts
cmp
sub
mov
sub
movzbl
movzwl
btc
movsbl
test
not
mov
push
bswap
neg
shl
mov
mov
and
cmp
bsf
test
dec
push
bsf
bsf
cmp
mov
cmp
and
sub
push
dec
sub
neg
dec
sub
cmp
or
add
call
lcall
mov
btr
test
bt
and
movzbl
add
xor
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btr
shr
and
btr
test
bsf
bts
adc
inc
call
lcall
sub
leave
mov
and
or
sub
bts
adc
bt
add
cmp
mov
adc
shr
shr
mov
btc
call
lcall
mov
cmp
cmp
movzbl
inc
shr
cmp
cmp
btc
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
sbb
and
int3
or
push
imul
gs
test
add
mov
cs
dec
or
cmp
out
xor
add
push
inc
movsl
inc
rcrb
loop
or
or
or
inc
shlb
sti
call
xchg
cwtl
cmpsl
sahf
int3
cld
cmp
add
mov
psllq
mov
jno
cmpsl
add
mov
xor
frstor
pop
mov
lds
mov
or
or
cltd
dec
pop
pop
push
cmp
inc
adc
nop
or
and
lret
lock
add
adc
push
add
cmp
and
add
dec
es
sti
xor
xchg
pop
scas
mov
mov
out
mov
iret
loopne
push
les
jae
sub
add
cmpsb
mov
rcll
scas
xor
test
add
pop
or
inc
adc
sbb
rcrl
adc
sub
movsl
outsb
or
add
xor
mov
fsubl
mov
inc
add
cmp
gs
pop
sbb
or
push
mov
sbb
xchg
jp
call
pop
mov
adc
inc
dec
inc
push
dec
ja
add
inc
pop
inc
aaa
cmp
jbe
cmp
jbe
inc
ds
xor
xor
arpl
pop
fsts
jecxz
dec
inc
xor
dec
pop
push
inc
dec
pop
mov
jbe
idivb
jno
jp
pop
inc
xor
icebp
adc
aaa
flds
xor
std
mov
dec
add
push
push
push
inc
inc
dec
xor
faddl
add
gs
dec
inc
nop
pop
sub
test
add
xor
dec
inc
enter
sbb
push
sahf
ss
aaa
push
pop
pushf
ds
repz
lds
dec
dec
mov
cmp
pop
loop
jmp
pop
cmp
pop
aam
bnd
cmp
inc
cs
pushf
cld
and
push
push
inc
push
pop
add
shll
aaa
fistl
inc
or
pop
push
add
or
add
and
jne
jecxz
jb
hlt
popa
jl
jmp
jecxz
aaa
cs
push
push
outsl
addr16
cmpsl
insl
xorl
jecxz
mov
fsubl
or
push
inc
cli
loope
outsw
loop
sti
adc
push
push
imul
fimull
stc
aas
push
gs
jmp
jecxz
jecxz
mov
xchg
into
jb
es
cs
das
adc
adc
imul
insl
jmp
mov
leave
ja
aam
or
addr16
call
inc
adc
add
and
adc
outsl
fs
pop
data16
cwtl
add
jmp
insl
dec
sbb
decl
cmpsb
push
lock
adc
stos
mov
cmc
stos
add
repnz
push
push
inc
push
dec
push
je
or
fcoml
call
loop
sbb
lahf
add
or
push
gs
int3
sbb
jae
popa
jne
fwait
add
loope
pop
outsl
and
and
jae
and
or
pop
insb
jns
imul
adc
daa
or
mov
pushf
fsubl
jle
bound
das
push
sub
sub
sarl
jmp
insb
fs
inc
pop
push
push
dec
sub
mov
jmp
rclb
jbe
add
push
add
inc
push
inc
pop
sarl
cwtl
mov
dec
inc
jp
lods
addb
