push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
movl
mov
movl
mov
push
call
mov
add
push
call
mov
add
push
call
mov
add
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
lea
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
push
call
call
mov
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
lea
mov
mov
mov
mov
mov
add
mov
add
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
mov
mov
mov
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
lock
or
test
xchg
add
add
jg
ficoms
adc
sahf
xor
xchg
int3
sub
pop
mov
adc
xor
adc
jmp
jmp
jmp
call
stc
jle
iret
inc
sbbb
cs
ljmp
add
cwtl
xor
jnp
popf
dec
adc
xor
mov
mov
aad
aad
gs
cmp
addr16
pcmpgtd
test
push
or
test
jo
adc
mov
ret
sub
shrl
fmull
outsl
sbb
stos
test
jb
stos
jmp
test
or
ret
jae
adc
jb
hlt
adcl
mov
pusha
dec
loop
inc
sub
mov
adc
xor
lock
push
outsb
or
gs
jbe
add
xchg
pop
and
push
inc
sub
movsl
andb
and
rorl
icebp
out
sub
nop
out
popw
sbb
add
cmp
lock
pop
jno
popa
in
ficoml
jns
sbb
outsb
adc
mov
in
scas
out
faddl
mov
stc
pop
daa
cwtl
xorl
out
mov
and
fildll
subl
aam
jo
dec
mov
or
xchg
out
daa
mov
cmpsl
and
sbb
faddl
or
pop
daa
sti
out
push
in
test
or
mov
fsub
in
sbb
mov
add
push
cmpsb
rclb
ds
pop
or
scas
push
imul
lahf
je
arpl
dec
mov
push
jmp
pushf
andb
cmp
repz
iret
inc
hlt
push
push
stos
inc
ss
negb
and
push
or
xchg
clc
inc
aam
xchg
jmp
adc
into
cmpsb
cmpsl
scas
inc
mov
sub
in
add
test
enter
imull
or
adc
mov
mov
push
imul
jle
sub
jmp
add
pop
add
daa
cmc
aad
inc
mov
int
push
mov
adc
and
daa
cld
xor
bound
pop
clc
push
push
pop
insb
push
jge
inc
mov
leave
jecxz
in
xor
std
stos
insb
push
dec
cmp
push
fildll
add
inc
pushf
test
imul
test
fldl
mov
sbb
loop
mov
adc
push
addr16
pop
popf
dec
mov
or
je
outsb
int
xchg
mov
push
and
mov
pop
mov
test
mov
icebp
push
sub
ja
rorb
lret
out
push
dec
xchg
aam
cmp
addr16
jnp
push
setbe
and
loopne
scas
mov
or
mov
push
mov
imul
and
xor
out
je
mov
push
mov
in
dec
js
in
push
dec
movsl
jg
dec
bound
fisubl
xlat
fnsave
dec
add
and
enter
add
jns
xchg
rorb
xchg
jne
dec
lea
sahf
adc
pop
test
adcb
inc
lea
jno
jecxz
jbe
add
in
jmp
loope
cmc
pop
adc
daa
into
push
in
insl
ret
pop
xchg
jne
in
mov
push
scas
sti
pop
gs
pusha
in
scas
fnsave
sbb
popa
mov
ret
cmp
gs
jo
mov
adcb
es
sbb
ficoml
sbb
rolb
mov
leave
ret
ret
into
mov
test
xor
addb
cmpsl
xchg
pop
es
cmc
jge
xor
push
cmp
lret
push
sbb
sub
mull
negl
pop
cmpl
adc
push
lcall
sub
gs
test
sub
xchg
shl
or
movb
push
jbe
and
adc
int
ret
andl
mov
fcoml
clc
and
inc
xchg
sub
sub
or
cmp
jne
cmp
push
loop
jl
cld
push
sub
mov
pop
sub
cmp
data16
dec
mov
outsb
sbb
pop
sbb
aas
jecxz
mov
pusha
test
adc
stos
stos
adc
xchg
aaa
in
repz
aad
outsb
and
addb
lea
mov
out
loop
jle
mov
in
insl
ret
pop
dec
and
cmp
loop
cmpsl
inc
lcall
lea
fwait
mov
jmp
aaa
or
or
lds
repz
push
push
xchg
xlat
loop
negl
sub
ret
dec
das
inc
mov
sub
iret
add
and
xchg
xchg
jp
cli
aaa
dec
mov
inc
sub
mov
clc
roll
xor
xchg
out
fsub
imul
sub
sbb
cmp
xor
mov
jp
stos
xlat
addb
ds
int3
jo
xchg
cmc
call
or
xchg
loope
inc
pop
inc
lock
scas
or
loope
dec
adcl
cmpsb
sbb
rcrl
cmpsl
push
nop
pop
inc
and
mov
pop
mov
xchg
push
push
cmp
xor
xchg
xor
jo
dec
stos
sbb
cmp
xchg
fsubs
jns
sub
jnp
fistps
lea
sub
mov
jge
inc
inc
cld
jbe
sbb
dec
xor
mov
lods
xchg
cmp
jo
cmp
lods
mov
dec
pop
inc
cmc
fisttpll
mov
popa
cld
push
cmp
iret
scas
mov
pusha
dec
dec
xor
dec
mov
mov
jmp
fistpll
adc
sub
jecxz
outsb
jae
mov
xchg
dec
mov
sbb
ss
xor
adc
lea
cld
mov
ljmp
push
daa
insl
pop
scas
stc
cmp
fdiv
lods
add
shrb
adc
mov
xor
outsb
jecxz
sbb
mov
xchg
mov
push
cmpsb
out
xor
dec
orl
xlat
movsl
jl
aad
fiadds
shll
out
pop
ds
imul
adc
adc
sahf
movsb
lds
push
mov
push
adc
mov
movsb
pop
sub
rclb
mov
lea
stos
mov
mov
insl
dec
ss
sarl
shll
mov
push
add
sbb
nop
sbb
mov
push
mov
hlt
push
test
ret
adc
fcmovb
push
addl
mov
jne
or
xchg
and
or
outsb
out
fcompl
and
je
aad
mov
loopne
pusha
jp
ja
adc
sbb
outsl
pop
dec
jecxz
mov
and
push
xorb
ret
xor
or
dec
sbb
adc
mov
jne
and
mov
movsl
add
mov
dec
rol
push
mov
incl
or
jge
fwait
mov
pop
popf
xor
add
xorb
inc
subl
push
jge
inc
stos
push
sbb
jg
cmc
loope
scas
into
jmp
add
call
mov
pop
pop
push
lret
sub
sti
movsb
scas
sbb
push
aaa
dec
insl
lock
adcl
xchg
mov
mov
loope
inc
jle
dec
shrb
loopne
push
js
cs
cmovp
dec
mov
add
jecxz
outsl
inc
mov
sub
adc
sbb
les
dec
in
sub
les
je
xlat
aad
sub
mov
push
and
repz
adc
sub
fabs
adc
pop
dec
gs
imul
enter
inc
dec
xchg
jg
daa
call
test
lock
stc
mov
fdivrs
pop
dec
mov
movsl
out
cmp
inc
jae
movsb
adc
or
fcoml
xor
pop
pop
cld
xchg
mov
jno
aaa
nop
push
xchg
movsb
cld
xor
xor
mov
adc
in
dec
xchg
repnz
fisttpl
push
add
inc
test
mov
mov
mov
inc
cmpl
nop
dec
pop
sub
sbb
dec
mov
gs
pop
pusha
fistpl
jnp
rorb
loopne
jae
xchg
cs
stos
xchg
fdivs
mov
fists
out
xor
popa
lods
mov
fistpll
mov
push
mov
jo
inc
mov
mov
xlat
pop
rclb
push
or
iret
cmp
xchg
popa
iret
adcl
dec
rorb
sbb
fistps
dec
clc
mov
inc
fwait
push
cs
in
mov
movsl
mov
and
jnp
sbb
mov
cmp
pop
rorl
mov
pop
sub
and
mov
fs
aam
adc
stos
sub
or
fldenv
mov
or
aaa
xchg
add
mov
movsb
iret
xchg
mov
repz
cmp
pop
add
mov
popf
and
jo
dec
aaa
add
xor
addl
or
out
mov
jnp
cld
imul
pop
rcl
ss
mov
gs
fadd
gs
fdivrl
push
stc
sbb
add
add
adc
mov
fwait
pavgb
push
mov
sti
filds
cs
mov
jecxz
push
rcrl
in
inc
inc
ss
out
sub
in
fisttpll
push
and
mov
inc
in
sub
push
in
daa
adc
ss
push
ret
and
add
lcall
lcall
xor
and
cmp
mov
sub
test
jb
in
mov
aad
mov
out
mov
pop
dec
mov
scas
jle
pop
loop
push
fidivrl
das
push
aam
push
cli
in
pop
sti
inc
mov
je
jnp
jno
inc
mov
mov
ja
outsb
push
xchg
xchg
dec
and
jp
imull
jbe
xor
inc
scas
ret
mov
dec
andl
arpl
add
lea
pop
sbb
mov
mov
js
mov
dec
jno
popa
dec
dec
in
mov
jnp
jmp
ds
pusha
mov
std
sub
mov
ret
push
add
dec
fdivs
insl
mov
cmp
jl
shrl
leave
mov
mull
ret
js
sahf
mov
sbb
sub
sub
aaa
mov
out
xchg
fidivrl
imul
push
adcl
mov
dec
test
js
iret
jmp
das
mov
dec
es
push
iret
daa
jo
xor
out
xchg
fstl
repnz
push
mov
stos
xlat
sub
repz
xor
fisttpl
cmp
int
add
pop
push
lods
lock
sub
dec
mov
jns
push
pushf
sub
pop
call
popa
gs
adc
sub
push
mov
or
cmp
add
add
cmp
inc
out
in
scas
ss
dec
adc
add
xchg
rcrb
je
js
jecxz
dec
mov
pop
xlat
dec
dec
into
inc
add
push
js
andb
pop
fstpt
orl
lods
call
adc
or
or
daa
iret
aam
lret
rcll
xchg
adc
pop
xchg
inc
lock
lock
sarb
or
arpl
pop
xchg
fyl2x
adc
push
subb
aam
pop
nop
sub
das
xchg
test
pop
daa
cmp
xchg
lods
sub
pop
xchg
ja
in
loop
inc
les
out
out
jbe
mov
rcl
stos
xchg
popf
shr
add
push
adc
aaa
mov
int3
pop
iret
inc
xlat
jns
das
jmp
mov
push
gs
sarb
jge
push
orb
stos
outsl
jl
jne
fidivs
scas
sbb
add
or
leave
divl
jp
mov
push
out
test
push
xchg
lahf
outsl
dec
repz
dec
cmpsl
stos
or
fs
mov
test
pop
xor
test
xchg
das
push
scas
adc
mov
in
mov
leave
cmp
sub
cs
push
jle
in
in
cmc
xor
mov
sub
push
mov
sbb
sub
shlb
lods
mov
pop
jbe
scas
pop
cmp
clc
imul
test
sbb
xchg
inc
lods
call
push
jno
lahf
fnstcw
std
cltd
insb
outsb
push
mov
cltd
inc
out
or
pop
pop
or
pop
clc
dec
sti
stos
xchg
pop
inc
rcll
cmp
mov
jecxz
cltd
pop
fnstenv
pushf
inc
repnz
sbb
das
sub
sub
int
add
cmpsb
cmpb
xor
fidivrl
movsb
pop
mov
stos
fldenv
inc
pop
mov
inc
mov
xchg
mov
lret
adc
jmp
fs
mov
and
adc
out
push
lods
clc
jmp
enter
js
jecxz
jns
add
mov
and
cmp
subb
pop
daa
inc
xchg
aad
sub
arpl
rorb
xor
rclb
addr16
jl
imul
aaa
hlt
arpl
adc
push
clc
inc
push
add
push
cmpsl
push
xchg
mov
insb
popa
pop
cli
cwtl
sbb
lahf
push
pop
repnz
es
xor
icebp
xor
inc
dec
in
faddl
fldl
scas
ja
mov
out
push
ss
cld
lds
shl
repnz
adc
lret
movsl
adc
jns
imul
inc
dec
repnz
je
icebp
cmp
mov
popa
test
mov
pop
fcmovb
xor
int
adc
xor
into
outsl
mov
xchg
cmp
cmp
lret
std
pop
pop
xor
setle
jecxz
cltd
aad
je
xchg
in
test
jno
stc
int
cmp
imul
pop
or
xor
jg
mov
mov
push
test
iret
sti
jge
or
stc
mov
cs
mov
mov
sub
mov
push
enter
ss
nop
cld
add
sub
jmp
jbe
and
iret
xchg
insb
jg
adc
lods
xlat
pop
in
movsb
jl
mov
jnp
push
int
jl
mov
xchg
mov
jno
lret
pop
in
iret
push
ret
les
popf
sbb
and
fisttps
aaa
xor
pop
pop
out
mov
hlt
test
ret
dec
mov
push
cli
push
dec
ss
jno
lods
hlt
outsb
nop
lods
cmpsb
addr16
sbb
and
in
jne
xchg
inc
pop
fsubr
fldt
sub
arpl
sub
das
rclb
cwtl
bound
or
xor
sub
js
inc
inc
lcall
out
es
pop
std
repz
mov
pop
xor
mov
sub
arpl
mov
push
push
pop
dec
aad
sub
aas
sub
sarb
enter
dec
jle
and
outsb
cmc
add
adc
rclb
rcll
mov
and
clc
lods
mov
iret
or
inc
mov
push
inc
adc
or
arpl
dec
repz
cmpsl
insl
inc
inc
adc
mov
inc
mov
cli
push
adc
inc
pop
sbb
test
dec
aad
jno
push
cmp
enter
imul
mov
ret
dec
xchg
into
pop
frstor
inc
pop
jmp
mull
fldcw
ja
push
pusha
ja
inc
xor
inc
stc
cltd
stos
negl
mov
push
xor
mov
ror
push
mov
inc
ret
dec
aam
pop
ss
push
cmp
mov
repnz
ror
jecxz
int
pop
shl
call
sti
xchg
dec
inc
out
in
push
push
mov
cltd
jnp
xor
or
lds
add
daa
out
pusha
test
or
xor
push
rcrb
imul
stos
xchg
das
pop
cld
inc
sub
movsl
sar
sub
roll
inc
cwtl
sahf
shl
or
mov
xchg
sub
mov
inc
aam
aam
das
sub
jl
dec
mov
jno
pop
dec
xchg
mov
inc
shlb
inc
sbbb
out
popf
pop
popa
mov
test
ja
popf
pop
packssdw
and
dec
jg
lahf
dec
mov
fs
jno
test
lods
jg
clc
outsb
repnz
jnp
jne
xchg
jmp
add
add
lcall
lahf
loop
sub
add
mov
mov
add
dec
daa
imul
xor
or
mov
mov
pop
ljmp
mov
daa
jb
outsb
mov
insl
fwait
and
sbb
fsubrs
sti
hlt
push
lcall
bound
xchg
jnp
sahf
int3
mov
cmp
rcrb
in
pushf
cmp
mov
int3
fbld
lock
add
pop
inc
sbb
push
add
inc
imul
jmp
jmp
or
popa
xorl
jp
shl
loop
add
sar
adc
pop
out
adc
sbb
sub
lock
outsl
js
fs
cltd
mov
aas
cmc
pushf
inc
xchg
xchg
imul
aam
cwtl
out
lock
cmp
sbb
add
dec
cltd
lret
inc
neg
xchg
mov
adc
sbb
xchg
sub
sub
pushf
jnp
or
loop
lcall
fmuls
cmp
cmc
cmpsl
popa
sub
fs
ljmp
mov
and
push
xor
outsl
stc
out
push
cltd
loop
mov
push
xchg
push
pop
jno
adc
lahf
or
push
sub
inc
mov
fmuls
add
xor
sub
xchg
loopne
adc
xor
xor
negb
in
jo
cmpsl
mov
cwtl
iret
nop
ret
push
adc
gs
push
mov
iret
scas
lods
inc
bound
rcl
pop
xlat
mov
sub
in
repz
popl
adc
orl
inc
sarb
add
or
dec
ficompl
xchg
sbb
adc
mov
notb
mov
cs
pop
sbbl
popf
cltd
mov
or
insl
mov
push
es
cmpsl
dec
pop
sarl
mov
or
or
mov
lds
jns
jnp
test
push
lods
xor
test
outsb
ret
aad
test
incl
imulb
adc
push
scas
cmc
mov
ret
mov
scas
ret
jnp
pusha
mov
std
mov
int
lds
imul
add
dec
push
add
sbb
dec
and
adc
or
ret
gs
jmp
leave
jne
aas
jbe
add
add
movb
mov
cld
jae
int
mov
jmp
push
and
pop
les
lret
rorb
inc
mov
popa
cwtl
xchg
xor
outsl
jp
rclb
inc
cmp
sbb
dec
jne
inc
cmp
rolb
cmp
fildl
xchg
mov
into
loopne
adc
jbe
sbb
notb
push
bound
aam
sub
sub
fstpt
jmp
or
aam
xchg
arpl
shlb
dec
sub
cmp
sar
mov
add
dec
sub
dec
and
inc
pop
jnp
or
jle
mov
cmp
jns
shr
lods
mov
test
xchg
xchg
lahf
jge
sub
dec
lock
or
xor
scas
and
add
dec
add
fidivrl
iret
loope
dec
out
outsb
adc
dec
mov
js
mov
cs
adc
aad
daa
hlt
imul
lock
sarl
insb
or
sub
out
and
call
in
jl
cs
sub
insb
xor
inc
cmp
push
xor
xchg
cmpsb
ret
out
in
in
lea
js
fistpl
icebp
cmp
cli
mov
adc
jecxz
stos
scas
test
aas
xchg
stc
pop
dec
ficompl
fwait
cmc
and
in
cmp
popf
adc
imul
push
add
insl
testl
jl
push
dec
imul
into
gs
push
test
push
inc
add
nop
sbb
push
add
mov
pop
sti
lcall
push
sub
inc
mov
ss
out
push
pop
or
mov
xchg
jb
mov
push
inc
sahf
pop
mov
mov
sbb
movsl
fwait
in
cmpl
dec
inc
rcl
aaa
mov
fwait
cmpsl
push
pushf
mov
aas
push
add
cmp
inc
or
test
outsl
push
addr16
adc
dec
pop
or
jp
push
shl
sub
sbb
popa
pop
mov
dec
pop
xor
xor
mov
daa
rcr
or
popa
addb
notl
loop
pop
cmc
adc
mov
jecxz
int3
inc
or
pusha
shr
sub
adc
mov
fldenv
or
mov
outsl
cmc
add
mov
lahf
cli
inc
cmp
daa
sub
aad
icebp
sub
mov
data16
sbb
in
out
aad
and
push
jmp
pusha
mov
mov
call
or
xorb
inc
push
and
xchg
jns
mov
pop
inc
jnp
dec
xor
notl
xchg
xor
pop
pushf
dec
sti
ret
mov
scas
fiaddl
push
mov
or
mov
push
cmc
mov
jo
push
adc
sub
rorb
mov
mov
in
cmp
test
add
mov
xor
xchg
mov
mov
test
or
cwtl
xchg
addl
lret
ja
or
add
xor
clc
and
lahf
inc
btl
adc
movsl
xchg
subl
pop
xchg
lock
cmp
hlt
imul
and
xchg
cmp
inc
sbb
cwtl
cmp
pop
pop
xchg
fwait
lea
sub
sub
insb
cmp
stos
adc
aaa
in
jmp
mov
push
hlt
sti
lea
lods
pop
insl
sbb
sub
loop
inc
mov
outsb
test
addr16
push
pop
xchg
mov
mov
jno
sub
stos
jb
push
sbb
arpl
dec
insb
in
in
or
data16
data16
inc
stc
dec
push
into
bound
bound
cld
std
addl
xchg
lds
sbb
push
xchg
cmp
insl
xchg
in
sbb
mov
ficoml
lods
and
lahf
ss
popa
fs
push
ljmp
popf
out
pop
pushw
xchg
push
xorb
mov
dec
idivb
aaa
push
ss
je
xchg
rcll
sub
shl
xchg
jbe
mov
fldcw
stc
cmp
cmpsl
pop
loopne
xor
and
cmp
cmp
outsl
orb
jo
movsb
pop
xchg
out
int
roll
sub
xlat
inc
sub
sub
lahf
enter
mov
mov
adc
jp
mov
cwtl
mov
sahf
mov
and
idiv
fisubrl
fsubrs
push
cwtl
sub
fcoms
push
mov
inc
ljmp
mov
sahf
push
sbb
xor
sub
cld
outsl
cmc
xchg
lahf
int3
loopne
jge
sbb
xchg
out
or
jb
ljmp
adc
fstpl
loopne
push
call
sub
xor
sub
into
imul
jg
mov
xlat
cwtl
fnstenv
inc
data16
cmpb
mov
push
clc
andb
mov
xchg
leave
dec
fdiv
repnz
mov
dec
aaa
add
ja
stos
int3
cmpsb
pop
stos
in
mov
mov
inc
in
emms
inc
fdivrl
xchg
jle
add
inc
xor
and
insl
pusha
imul
int3
ret
cmp
add
and
push
subb
mov
lahf
mov
jo
mov
cmp
pusha
mov
frstor
mov
mov
das
or
out
nopl
cwtl
loop
pop
pop
mov
xchg
in
cld
ja
shlb
std
ljmp
jbe
jl
sub
mov
jne
inc
shll
mov
loop
mov
and
mov
mov
push
push
gs
sub
mov
cmpsl
mov
pop
cmp
imul
sub
stc
fwait
mov
sbb
testb
enter
cwtl
jmp
adcl
stos
arpl
ret
sub
mov
push
std
push
xchg
jae
push
sub
sbb
mov
cmp
jge
sbb
or
addr16
inc
jecxz
push
int
pop
mov
jle
leave
testb
pop
insb
sbb
xchg
es
cwtl
mov
and
add
pop
push
js
fidivrl
pop
xor
shrb
sub
sahf
adc
shl
jae
adc
or
test
loope
shll
sbb
add
fsubl
stos
jg
lcall
movsl
dec
push
ror
icebp
dec
xchg
cmpsb
inc
jle
mov
movsl
lahf
inc
lods
idiv
dec
fstps
stos
cmp
adc
cs
sbb
ret
dec
inc
jno
mov
add
in
cmpsb
cwtl
movsl
addr16
push
pop
add
mov
nop
sahf
fs
popa
mov
test
xor
insl
bound
xlat
popa
int3
test
cli
dec
adc
mov
nop
push
pusha
arpl
and
jbe
fsubrs
pop
xchg
loopne
sub
mov
loop
and
push
xchg
cmpsb
dec
pop
sarl
dec
hlt
push
cmc
loopne
or
scas
rcrl
in
inc
adc
popf
aad
adc
out
test
fnstsw
lret
mov
dec
inc
and
ds
jg,pn
push
jl
aaa
sub
sbb
loope
mov
aad
adc
dec
or
nop
inc
ret
ljmp
das
adc
insl
insl
lcall
inc
repnz
xchg
dec
gs
and
sub
add
push
xor
sbb
mov
mov
enter
inc
das
push
scas
repnz
enter
cmp
scas
aam
gs
in
mov
add
jecxz
lret
xchg
inc
mov
fistps
sub
movsb
mov
into
mov
lock
xchg
cmc
sub
xchg
push
xor
xchg
cmpl
push
loope
into
or
jle
xor
xchg
sub
leave
add
cltd
xor
xchg
add
cmp
jg
dec
mov
mov
fisttpl
and
and
aad
cmp
bound
or
push
std
jl
mov
adc
std
xlat
mov
leave
sbb
jge
dec
xchg
das
mov
cmc
xor
dec
xor
jle
mov
test
pop
sbb
pop
jmp
out
xor
xchg
mov
mov
outsl
adc
test
stc
aas
inc
add
stc
int3
xor
loop
xor
mov
dec
or
in
outsb
loope
push
psadbw
ss
icebp
jp
sub
pop
pop
mov
aas
mov
fiaddl
or
or
out
dec
inc
mov
dec
cmp
or
enter
insl
mov
rcl
xchg
mov
jle
test
inc
cmp
push
mov
dec
cmp
pop
adc
mov
iret
jns
mov
pop
cmp
out
pop
sub
cld
xchg
dec
pop
inc
adc
sub
pushf
mov
repz
sub
dec
pop
push
mov
ss
pushf
or
adc
jmp
pop
dec
mov
dec
popf
enter
jne
mov
dec
mov
shll
jnp
int3
xchg
js
mov
popf
jnp
das
iret
cwtl
jmp
cmpsl
xor
les
or
sub
int
jb
fwait
inc
sti
js
pop
stos
aam
clc
ds
pop
aam
cwtl
shrb
repnz
lret
ret
in
sbb
cmp
inc
inc
mov
loope
mov
lret
mov
cmpb
and
inc
sti
cmp
aad
stos
fs
adc
pop
adc
int3
mov
sbb
jecxz
and
lods
not
int3
sbb
ss
sub
scas
inc
xchg
dec
jnp
xchg
fdiv
lahf
cmp
test
sub
push
add
fsubs
movsl
aas
sbb
push
mov
in
xor
xchg
dec
mov
leave
in
inc
out
xor
mov
xchg
xchg
inc
aam
mov
in
cmpsb
in
pop
or
sahf
or
cmpsb
aas
pop
jne
xor
mov
fs
fldcw
xor
mov
and
js
out
je
and
adc
adc
repz
repnz
add
fdivrp
pop
insb
iret
shlb
lds
xlat
mov
fimuls
jno
sbb
imul
mov
pop
fistpl
stc
mov
mov
aam
cmp
jecxz
sbb
aas
fninit
sbb
aaa
add
ss
mov
cmp
adc
or
mov
cmp
outsb
sub
mov
xchg
loope
fisubrs
incl
mov
out
jle
or
push
dec
xchg
inc
lcall
fists
lea
ljmp
sub
fidivrs
fiaddl
or
xor
icebp
cmp
push
push
in
jae,pn
xchg
push
lods
iret
xor
es
mov
mov
sbb
and
outsl
and
out
or
and
dec
mov
stos
xlat
xor
pop
inc
push
adc
jns
ret
pop
adc
sub
cmpsl
xor
xor
sub
mov
mov
test
mov
lahf
movsb
enter
sbb
lret
mov
jle
pop
cs
dec
cmpsl
inc
icebp
mov
decb
ds
lea
popf
clc
and
sub
inc
test
cwtl
pop
mov
push
sbb
ds
pop
sbb
and
dec
mov
mov
addr16
adc
sub
fcoml
add
dec
sbb
mov
sbb
mov
pop
xor
test
leave
scas
push
js
or
notb
outsl
add
add
data16
lcall
shlb
add
scas
push
loop
lock
pop
ljmp
and
sti
test
and
aad
cmpsb
or
pop
loop
je
scas
notb
push
sbb
inc
or
pop
mov
and
xor
push
dec
jo
fnstenv
cmc
push
and
xlat
push
and
pop
cmp
jle
scas
cmpsl
inc
mov
cmc
rol
inc
icebp
xor
in
out
test
fs
insb
je
imul
inc
push
lret
push
jns
stos
scas
mov
fisubrs
pop
addr16
je
jo
pop
push
shll
xor
testb
xchg
loope
jl
sahf
jo
xchg
mov
hlt
jmp
dec
lret
push
push
push
inc
scas
fldt
test
out
inc
cmpsb
stc
mov
subb
stc
clc
js
in
aam
cli
adc
sub
push
jmp
dec
and
data16
mov
jmp
push
shrb
pop
loop
movsl
add
test
ja
lahf
jle
sbb
mov
je
jne
add
and
mov
test
aad
jge
bndstx
or
mov
es
jmp
ret
add
call
or
insb
and
add
xor
jne
enter
dec
pop
js
enter
scas
je
cmp
lds
mov
cli
add
je
lret
adc
xor
std
cmc
lods
sub
es
ja
and
movsl
fcom
out
pop
aaa
nop
gs
popa
sbb
inc
push
push
scas
js
test
ja
aad
jns
push
clc
rcll
xor
in
xchg
jg
scas
pop
incl
mov
pusha
bound
dec
stc
stos
jb
mov
mov
je
jmp
repz
adc
add
push
push
leave
aaa
pop
jl
lret
ror
xor
out
jae
cmp
flds
aam
push
sub
push
push
test
aad
bndstx
fcomi
xlat
or
dec
lods
stc
iret
notb
push
mov
movsl
shl
sbb
mov
xor
mov
lahf
scas
int3
aas
push
xor
push
add
shlb
or
mov
sbbb
test
test
push
cltd
adcb
test
les
mov
imul
and
jge
out
jno
inc
rolb
jl
je
sbb
stos
xor
decb
xlat
cmp
insl
repz
xor
das
push
ljmp
xchg
lds
sub
cltd
into
clc
cld
stos
inc
mov
jecxz
push
or
data16
sbb
sbb
cmp
ret
stc
lcall
xchg
pop
bound
pop
div
repnz
sub
hlt
test
adc
shrb
rcll
mov
cmpsb
aaa
test
inc
sbb
mov
sarl
xchg
jo
sub
cmp
mov
lods
out
frstor
jmp
imul
sub
mov
lret
xor
cmp
aad
jns
pop
cmp
aas
aaa
imul
adc
jle
loopne
adc
add
mov
jmp
dec
sbb
push
aas
das
test
mov
or
add
sub
mov
pop
addr16
out
dec
imul
and
cmp
dec
cmp
and
cmp
mov
popa
hlt
lods
pcmpgtw
mov
dec
clc
inc
mov
xchg
stos
cmp
add
mov
xchg
and
enter
js
icebp
int
jb
pop
lcall
adc
jge
aas
inc
fldt
inc
je
sbb
mov
jne
dec
jne
xchg
hlt
jmp
mov
sahf
add
or
pop
shlb
jns
mov
aaa
and
cmpsl
int3
rcll
pop
push
dec
or
xchg
shl
add
sbb
or
imul
daa
outsl
mov
loopne
sbb
jp
and
add
cmp
mov
js
std
sahf
addr16
mov
scas
jno
jl
and
jnp
dec
icebp
xchg
andl
insl
xor
and
xor
rorb
add
fimull
sbb
sbb
and
cmp
xchg
mov
pop
jb
push
inc
xchg
mov
bound
pop
inc
add
bound
test
cs
fyl2x
lods
sub
cwtl
dec
mov
mov
mov
ret
mov
jns
sub
icebp
inc
daa
pusha
hlt
fisubl
jg
xor
fidivrs
outsb
lahf
add
jnp
or
outsl
std
dec
or
mov
sqrtps
mov
dec
je
inc
or
aaa
mov
adc
pop
pop
xchg
sbb
hlt
dec
xchg
nop
incl
add
lds
sub
hlt
je
std
arpl
cli
les
xchg
test
gs
aam
les
lea
test
xlat
sbbb
imul
sub
mov
pusha
bound
push
xchg
mov
fwait
js
mov
jae
inc
gs
adc
xchg
jmp
aam
es
loop
xchg
testl
and
add
std
mov
leave
repnz
shrb
xchg
lock
mov
rcrb
mov
mov
loope
cmc
mov
push
leave
or
pop
xchg
fdivs
enter
sbb
dec
pop
scas
adc
adc
fcoml
gs
fabs
movsb
inc
hlt
adc
adc
xor
push
jne
andl
xor
sahf
xchg
pop
jle
notb
cmp
pop
jp
mov
nop
sub
dec
mov
sbb
pusha
js
and
fcmovbe
fisubrs
push
lahf
addr16
lea
mov
imul
out
lea
and
xor
bound
inc
add
jg
js
movsb
push
fiaddl
jge
sbb
mov
xchg
sbb
sbb
dec
cmp
std
push
ds
xlat
cli
push
movsbl
fs
sub
adc
inc
test
stos
adc
pusha
mov
lret
addr16
and
stos
cmp
cmp
dec
xchg
stos
in
pop
mov
mov
push
mov
jns
fnsave
shrl
movl
add
movsl
shll
xchg
shlb
int3
jo
ja
or
jb
and
call
mov
mov
dec
pop
movsl
sbb
and
shrl
clc
inc
rcrl
call
ss
pop
call
pop
loop
sub
shr
icebp
mov
xor
inc
bound
fwait
decb
sub
xor
loop
ljmp
mov
mov
push
xchg
adc
sub
inc
cltd
or
sub
ljmp
jns
mov
rorb
test
sbb
or
aam
cmpsb
int3
imul
cmc
fwait
pop
jge
pop
popf
mov
mov
and
and
cmp
jg
inc
push
cli
jmp
inc
test
pop
adc
mov
jp
rcll
sub
mov
fidivs
mov
xor
xor
sahf
push
decb
jns
int3
rcll
pusha
clc
or
and
mov
inc
add
fwait
movsl
cmp
lcall
cmp
lahf
sbb
aad
xchg
or
stos
dec
sbb
arpl
dec
fadd
insl
iret
mov
ret
pop
push
cmp
popa
jle
jle
and
dec
lock
pause
pop
out
int3
jp
pop
imul
xor
cwtl
lcall
cmp
xor
inc
shll
push
push
hlt
outsb
cmc
mov
scas
cmp
lret
das
cmp
xorb
fwait
or
scas
insl
or
fistpll
or
cmp
shll
sub
mov
push
mov
sbb
cmp
mov
loop
stos
fisubl
stos
jno
imul
call
test
push
xor
add
xor
xchg
pushf
arpl
mov
adc
pop
or
xor
lcall
pop
inc
cld
push
shll
gs
cmpb
mov
mov
mov
dec
push
push
stos
sbb
lods
or
repz
lock
push
mov
loope
cmp
ret
push
shrb
aam
out
scas
hlt
sbb
mov
sbb
adc
pushf
xchg
cmpl
mov
sbb
add
lods
jae
repz
jns
and
push
pop
pop
movsl
iret
lret
mov
sub
adc
mov
fcompl
adc
ja
or
mov
icebp
push
mov
shrl
sub
cmp
addr16
pop
push
jo
daa
inc
adc
xor
mov
dec
lods
push
cmp
pushf
arpl
mov
inc
pop
adc
orb
mov
push
addr16
mov
dec
fcomps
movsb
imul
icebp
aaa
ljmp
jecxz
pop
mov
sbbl
cmpl
xchg
int
fdivrl
test
add
dec
into
xchg
jno
xchg
and
xchg
xchg
and
arpl
rolb
and
dec
scas
mov
cltd
pop
jmp
dec
inc
sub
dec
mov
int3
aaa
xor
xchg
dec
or
adc
and
cli
dec
dec
ljmp
adc
adc
sbb
addl
stos
pop
inc
sahf
cmp
mov
mov
cld
outsb
repnz
mov
inc
mov
test
sahf
pushf
add
push
lret
push
sub
shrb
xchg
push
shrl
inc
je
mov
push
dec
mov
cmpsl
rcrb
dec
mov
add
in
mov
add
js
iret
fistl
andl
out
mov
mov
test
loope
aad
cmp
les
inc
dec
aas
pushf
cli
ds
clc
adc
mov
lods
pop
out
out
out
ljmp
fadd
imul
push
cli
dec
and
inc
packuswb
shlb
xorl
insl
ss
push
outsb
push
mov
cmpl
loop
movsb
jnp
in
cmp
or
into
dec
aaa
test
imul
and
subl
pop
jo
cmp
lods
add
xor
sub
movsb
out
push
out
mull
push
cmp
or
testl
enter
int3
aaa
leave
mov
insl
add
les
mov
adc
sub
clc
jns
sbb
jg
stos
mov
movsb
faddl
rcrb
fnstcw
adc
inc
mov
hlt
loopne
out
sbb
sarb
in
add
outsl
xchg
out
xlat
mov
loop
cmp
mov
pop
inc
cmp
jp
into
sbb
dec
push
bound
inc
xor
jae
sub
out
dec
sub
scas
jns
or
mov
pushf
cwtl
dec
cmc
lcall
mov
mov
insl
loop
es
push
sub
sbb
xchg
pushf
pop
jae
inc
movsb
dec
frstor
push
bound
mov
sub
ljmp
inc
lret
out
push
repnz
sti
sahf
cmp
loopne
in
dec
pop
aaa
insb
xor
cmpsb
lahf
in
jmp
sbb
nop
jne
bound
inc
adc
aaa
dec
dec
pushw
test
pop
jmp
push
loop
int3
mov
jmp
jle
ficoml
mov
xor
adc
sub
mov
xlat
push
test
inc
enter
inc
xchg
scas
mov
les
mov
mov
and
test
repnz
jmp
shufps
in
push
push
push
lds
repnz
dec
pop
sahf
cmp
dec
mov
add
in
bound
add
call
xchg
lar
test
xchg
pop
filds
jns
pop
inc
clc
dec
lock
jmp
jge
mov
inc
lret
loope
test
repz
insl
or
outsb
mov
or
pop
cmpb
test
jg
outsl
rolb
rolb
orb
jl
daa
call
sbb
popa
xchg
loop
mov
js
push
ss
mov
fwait
testb
add
jbe
outsl
pusha
loope
rcr
pop
xchg
ja
cwtl
movsb
push
dec
ss
frndint
mov
test
lahf
mov
faddl
dec
xchg
inc
cmp
cld
stos
xchg
insl
cmpsl
sbb
loop
push
add
aad
iret
cld
in
cs
xor
repnz
jns
arpl
adc
pop
inc
mov
push
push
mov
mov
push
aam
pop
in
dec
fwait
cmp
mov
stos
je
xchg
inc
mov
pop
cmp
imul
test
sbb
insl
push
addr16
jecxz
mov
mov
cltd
mov
xor
jl
mov
je
or
mov
ss
jge
insb
push
mov
push
or
jb
sub
imul
in
xor
imul
xor
loop
push
pushf
int
sub
popf
sub
ljmp
lcall
mov
push
xor
mov
loop
xor
movsb
dec
int3
mov
and
sub
shrb
repnz
pusha
stc
sbb
xor
cld
lahf
ror
in
mov
lcall
xor
fstps
test
cmp
sbb
and
or
mov
aam
scas
jg
in
cmc
xchg
mov
mov
mov
subl
rcl
push
cmp
push
xor
jns
and
push
pop
fmull
stos
mov
hlt
dec
faddp
or
cmp
imul
mov
xor
push
outsl
push
and
stc
add
cmp
sbb
jnp
dec
adc
mov
div
inc
std
int3
mov
aaa
ret
mov
mov
cmp
loop
subb
mov
sbb
dec
out
mov
in
jbe
jnp
iret
xor
fldt
sahf
sub
and
pop
or
mov
aas
jp
jl
push
jp
ret
mov
mov
scas
jae
rorl
jmp
lock
add
xchg
jno
xchg
or
int
jnp
cltd
cwtl
lock
testl
outsl
sub
jg
mov
repz
pop
fildll
ud0
pop
decl
xchg
ficoml
out
lock
pop
fwait
call
inc
jmp
lods
and
cmp
insl
pop
ja
test
dec
adc
push
jo
rcl
pop
ja
xchg
shlb
sub
lcall
ss
and
xor
movb
add
or
hlt
push
cmp
xchg
test
dec
and
pop
cmp
mov
cld
mov
sub
shlb
cmpsl
jb
adc
sub
sbb
outsl
sahf
add
adc
pop
jo,pn
fwait
out
out
add
movsb
insl
or
ss
lea
das
enter
jnp
sub
imul
and
mov
popf
loop
in
scas
inc
pop
sub
fwait
les
test
mov
sbb
xor
cmp
sub
shl
sbb
imull
es
dec
sbb
popa
clc
ret
fs
pop
add
aad
rcll
fsub
leave
loope
dec
adc
sub
sbb
push
add
mov
xor
stc
sti
add
dec
les
add
in
push
sarb
pusha
sahf
in
stos
sahf
dec
bnd
test
xchg
sub
pop
cmp
int3
add
jne
adc
or
push
or
mov
mov
cmp
xchg
imul
ret
sub
and
jo
xlat
call
add
push
push
sub
mov
ret
loope
in
pop
pop
inc
in
pop
cmp
gs
mov
sbb
mov
ss
jne
gs
push
mov
mov
test
data16
pushf
jo
and
xor
sbb
outsl
test
aas
test
cmc
mov
test
fidivrs
and
or
jne
cmp
adc
mov
sbbl
call
mov
es
inc
popf
cmp
mov
xor
cmp
xor
mov
ljmp
sub
arpl
fidivs
inc
ret
push
sub
in
fiaddl
mov
xchg
push
push
push
cmp
out
pop
push
dec
jge
xor
adc
imul
ficoms
sub
sub
insb
enter
push
jl
lret
subb
in
clc
clc
jb
xchg
jne
inc
fstl
adc
xchg
xchg
nop
dec
sti
pushf
ret
cmp
cmp
xchg
sub
je
dec
mov
push
or
fmul
daa
js
cltd
lock
out
dec
sub
js
aam
push
int
mov
aaa
in
add
cmp
in
mov
adc
int3
mov
sbb
lock
pusha
mov
add
rcr
sbb
mov
inc
out
jno
sub
jl
call
mov
pop
cmpsb
shll
xchg
and
inc
mov
hlt
adc
out
or
add
cmp
jnp
cmp
sub
insb
cltd
sbb
mov
add
mov
cmpl
inc
nop
mov
sahf
repz
or
cltd
add
inc
icebp
movsl
adc
sub
lcall
fwait
or
xor
or
and
inc
imul
aam
push
jp
ss
jb
loopne
jbe
xorb
sub
sbb
push
cltd
mov
dec
pop
push
xchg
lret
movsl
mov
rcrb
add
push
pop
push
cs
sub
push
and
sarb
or
dec
test
or
xor
pop
pop
xor
sahf
fcoms
mov
ret
inc
jg
sbb
stos
sbb
cmp
pop
es
push
push
pop
in
mov
push
nop
bnd
inc
cmp
and
jno
into
pusha
test
mov
int3
jle
adc
iret
dec
loop
gs
and
mov
fdecstp
sbb
fstpt
cs
popa
es
push
or
call
sub
or
pop
popf
roll
shlb
fwait
cmp
push
pop
sbb
data16
lods
gs
xlat
rorl
cmp
loope
mov
daa
insb
and
or
inc
mov
das
xchg
or
fs
inc
in
sbb
popa
dec
std
movsb
pop
mov
cli
pushf
mov
lock
mov
mov
call
xchg
insb
inc
adc
repnz
mov
sbb
in
leave
call
sbb
aam
popa
jnp
sti
icebp
lods
pop
xor
mov
dec
add
push
mov
pop
sti
nop
mov
mov
and
cmpb
sbb
push
cmc
xor
pop
sub
jg
mov
pop
sub
lret
imul
cmp
aaa
in
fildll
daa
cmp
in
push
or
popl
stos
js
xchg
add
jle
xchg
jmp
sbb
jl
loopne
ja
add
sbb
insl
and
or
push
xor
ror
add
xlat
mov
dec
outsl
mov
jl
add
lods
loop
mov
ja
dec
cmp
hlt
int
lret
cmp
test
dec
sbb
xchg
adc
adc
lods
popf
dec
repz
pop
jl
xlat
add
insb
xor
push
mov
mov
jecxz
lods
adc
jo
or
pop
icebp
lods
imul
mov
xor
mov
xchg
sbb
jmp
stc
pusha
popa
mov
pop
ret
sbb
into
jb
sub
push
mov
cmp
sbb
xchg
or
mov
push
and
sbb
fstpt
jns
push
orl
sti
stc
stos
stos
sbb
test
pusha
pop
cmp
inc
inc
dec
imul
test
jmp
sbb
aaa
stos
add
add
scas
mov
addl
dec
xchg
rcll
subb
jno
xor
mov
repnz
scas
xchg
dec
mov
imul
cmp
adc
xchg
jnp
lds
pop
fcoms
in
cmc
lret
cmp
xor
adc
test
adc
loope
stc
scas
and
mov
fildll
dec
insl
inc
adc
adc
je
out
dec
xor
xchg
lret
stc
sbb
int
push
imul
mov
scas
movsb
mov
movsb
aaa
cmc
lret
aam
ljmp
cmpsb
mov
jb
mov
adc
pop
sbb
sbb
lea
cmp
mov
cld
outsl
mov
mov
rorl
add
fs
adc
fs
mov
mov
fsubl
loopne
fsubrl
inc
sbb
andb
push
dec
movsb
mov
fwait
pop
fcoml
rep
inc
or
mov
push
mov
cmp
cs
nop
pop
mov
enter
sbb
mov
xor
xor
iret
out
mov
ja
int
pop
xchg
fcompl
xchg
inc
mov
into
and
es
inc
xchg
dec
loope
dec
mov
xchg
mov
add
daa
xor
mov
iret
sub
push
xor
adc
push
dec
aaa
mov
xchg
sbb
xchg
pop
cmp
cld
shll
int
mov
mov
fists
mov
in
cli
inc
rcll
adc
mov
xchg
ret
popa
les
mov
pop
and
jbe
mov
imul
out
mov
andb
les
imul
outsl
pop
xchg
sub
sub
out
or
out
lock
test
pop
lret
outsb
add
mov
fdivrp
sub
jb
movb
pushf
adc
scas
push
sub
push
mov
punpckhbw
adc
mov
inc
cmp
js
jnp
mov
jnp
and
xor
popf
test
add
cmpsl
test
xor
push
iret
leave
outsl
stc
mov
testl
andb
aam
wbinvd
outsb
fldt
pop
xorl
das
ret
fnstenv
aaa
bound
test
add
data16
xchg
push
mov
and
ret
fmulp
les
push
sub
addr16
ds
sub
movzbl
xchg
movsl
std
jns
dec
cmp
lea
cwtl
out
jae
test
xor
outsb
jno
loopne
jns
mov
xor
loopne
xchg
ds
push
sbb
mov
imul
gs
cmp
jnp
xchg
xchg
int3
or
mov
or
jb
lods
push
dec
push
mov
aam
out
mulps
pop
jno
cmp
push
push
mov
data16
cmp
xchg
sbb
stc
movsl
and
fistps
outsb
out
cmp
cmp
cli
cmp
mov
rol
dec
repz
mov
shlb
jg
iret
ret
mov
lods
test
push
adc
mov
inc
jae
mov
mov
pop
push
mov
jg
xor
in
ret
mov
stos
sbb
data16
and
pop
in
adc
dec
mov
imul
jg
repnz
sub
lds
mov
xor
fadds
pop
dec
xor
pushw
jo
lahf
xor
sbb
xchg
or
sbb
or
cmpsb
mov
pop
push
jmp
mov
mov
mov
jge
inc
mov
sbb
adc
lcall
adc
push
jl
jae
xchg
jl
push
sub
push
clc
out
mov
sub
fcomi
imul
inc
push
lret
das
sbbb
pop
andl
cs
icebp
sbb
je
scas
stc
dec
push
mov
push
int
or
mov
rorl
test
jg
jecxz
cltd
jbe
icebp
jecxz
xchg
sbb
es
movsl
out
jge
dec
int3
stos
mov
mov
movsl
mov
gs
out
lret
imull
imul
jnp
fcompl
adc
xchg
or
fidivrl
sbb
xor
mov
pop
cmp
ss
js
test
jmp
sub
mov
xor
inc
mov
inc
mov
xor
stos
fdivrl
test
mov
xorps
int3
cmpsb
mov
adc
enter
xchg
inc
bound
xchg
mov
fidivrs
xchg
mov
mov
mov
cltd
sahf
mov
pop
and
icebp
scas
sub
xchg
sub
test
fsubr
in
xlat
xchg
outsb
hlt
jp
xchg
jae
add
cld
daa
mov
push
repz
fisttps
or
loop
mulb
xor
mov
xor
lea
xchg
inc
xor
aaa
push
lods
jg
ret
sbb
jmp
popf
sbb
jbe
idivb
mov
repz
mov
ret
mov
or
popf
and
pusha
data16
loop
pop
mov
mov
rol
dec
jnp
mov
xchg
insb
inc
dec
fistl
lock
add
pop
test
imull
mov
pop
mov
adc
mulb
push
and
decl
ja
sahf
les
in
jge
adc
testb
or
jnp
mov
push
out
call
jp
cmp
mov
sub
push
jae
push
test
cmc
daa
stos
and
shrb
pop
lds
hlt
adc
les
jns
adc
stos
stos
repnz
mov
xchg
inc
test
jmp
or
rcl
inc
aam
sub
xorl
push
jl
sub
je
lods
pop
data16
mov
into
cltd
sbb
sub
iret
cmp
dec
fnstsw
and
mov
add
add
jmp
aam
add
out
nop
mov
movsl
stos
lcall
push
adc
dec
test
and
mov
outsl
cmp
outsl
lea
xlat
push
mov
arpl
and
out
cmpsb
int
cmpsb
stos
psllq
insl
mov
pop
inc
inc
dec
inc
rcll
sub
dec
psubd
lock
stos
jl
out
lahf
jl
jns
in
sbb
pop
jo
popa
and
jp
inc
xor
xor
pop
and
test
or
fs
and
out
and
mov
repz
aaa
adc
jns
sbb
inc
dec
jbe
xchg
popa
dec
fdiv
lret
sub
and
mov
das
inc
pushw
push
mov
dec
je
mov
icebp
or
loope
in
iret
pop
cmp
jecxz
cmpl
adcl
sbb
das
xchg
jle
inc
push
out
fldl
add
mov
int3
hlt
pop
lret
ret
cmpl
pop
adc
inc
les
jne
test
adc
mov
scas
fildll
imul
stc
jmp
add
stos
xor
mov
pop
or
push
pop
jae
sub
mov
add
jbe
or
and
leave
in
cld
mov
cwtl
push
rcll
push
popa
push
dec
dec
adc
mov
dec
out
aam
jnp
pusha
outsb
jecxz
xor
adc
fwait
and
hlt
lahf
mov
jnp
cmc
mov
popa
or
les
or
dec
pop
xchg
xor
sbb
push
jge
aas
scas
cs
dec
in
cmp
xor
fucomip
shrb
sub
add
dec
shlb
jmp
out
data16
add
xorl
jns
jecxz
out
mov
in
xor
enter
push
decl
xchg
xchg
xchg
cmp
sbb
sbb
roll
test
shl
cwtl
sbbb
cmp
sbb
mov
into
adc
and
das
sti
inc
dec
or
adc
adc
popf
mov
or
add
pop
out
loopne
adc
push
mov
pusha
adc
shlb
adc
mov
or
jle
push
ljmp
mov
pop
leave
adc
sub
lcall
or
push
cs
stc
arpl
out
cmp
cld
das
pop
bound
test
push
enter
pop
push
xor
test
pop
in
jno
jecxz
cmpsb
push
add
lcall
pop
shrl
pusha
jmp
jl
cmp
into
mov
icebp
mov
jmp
xchg
enter
insb
fstpl
sbb
mov
mov
lahf
jecxz
cmpsl
daa
fs
jbe
mov
jae
mov
pop
or
aaa
or
mov
xor
lods
std
jno
jae
addb
mov
push
imul
out
push
rorb
xor
xchg
adc
mov
jmp
iret
jmp
xchg
loopne
jecxz
outsb
adc
fwait
pop
mov
mov
test
push
mov
popf
dec
pop
sbb
jb
out
into
xlat
lcall
cmc
xor
mov
sahf
jge
je
ljmp
push
es
sbb
call
hlt
or
xor
jb
rclb
mov
out
orl
push
addr16
jmp
lret
push
in
cmp
add
adc
or
mov
adc
inc
and
and
repnz
pop
mov
cltd
pop
repz
enter
test
lcall
adc
xor
push
inc
shlb
lahf
fstpt
mov
ret
sub
in
out
dec
out
das
push
outsb
mov
push
sub
pop
mov
in
clc
jg
jbe
je
sar
cmpsl
cwtl
jle
subl
cmp
fistpl
movsl
mov
sbb
test
sub
xor
mov
mov
cmpsb
pop
stos
xor
dec
ficoml
inc
orl
inc
lret
ret
sub
bound
js
inc
sub
imul
das
or
push
and
arpl
sbb
sub
cli
jl
test
aam
fdivr
ja
and
into
mov
sbb
pop
sbb
loop
enter
sub
add
clc
mov
pop
add
cmpsl
add
sbb
xchg
dec
inc
and
cltd
push
adc
popa
in
xchg
add
lds
fcompl
dec
loopne
dec
mov
jmp
movsl
mov
lahf
mov
or
rol
mov
imul
mov
cmp
pop
mov
mov
adc
andb
js
fisttps
jbe
mov
inc
push
sbb
push
cmp
mov
mov
jae
leave
cmc
lret
dec
pop
shll
jge
int
insl
jnp
mov
pop
lret
std
jp
cwtl
pop
pop
test
jns
and
mov
dec
cmp
push
rorl
xor
and
sahf
or
mov
insb
mov
sub
dec
pusha
cmp
and
xchg
fstpl
inc
aam
add
enter
push
je
mov
or
pop
pop
ds
adc
hlt
int
xor
cmpsl
sarl
mov
scas
xlat
hlt
loope
cld
cwtl
int
outsb
dec
add
sbb
mov
out
mov
mov
cmc
xor
cmp
dec
lock
jne
and
imul
jmp
sub
fs
pushf
sub
push
add
dec
cmpsl
dec
ja
cmp
decl
push
xlat
cld
repnz
mov
in
xor
loopne
push
push
in
repz
xlat
sub
fistpll
fstpt
xchg
jb
scas
jae
pop
fcompl
xor
push
gs
repz
xchg
add
sub
dec
ret
sti
xchg
mov
add
xor
jl
cltd
push
fnstcw
aam
pop
and
cmp
out
es
and
mov
fidivl
xor
dec
stos
mov
nop
and
movsbl
and
cmp
test
lds
pop
dec
inc
insl
dec
in
gs
dec
out
jo
loop
or
daa
xchg
push
out
cmp
push
sub
jp
sahf
adc
adc
loope
sbb
jno
and
mov
lret
je
out
sub
or
in
push
int3
lret
adc
in
ljmp
fidivrl
cltd
mov
add
andb
mov
jmp
je
mov
imul
shlb
test
dec
jle
sbb
pushw
scas
mov
dec
fisttps
jl
test
add
fstps
lock
sahf
xor
movsb
push
aad
mov
mov
dec
add
xor
int
daa
xor
pop
cmc
mov
into
in
outsl
addr16
lea
dec
popa
sub
in
inc
jns
cwtl
enter
in
cmc
fdivs
stos
hlt
sti
adc
pop
sahf
ja
fdivs
inc
es
cwtl
aas
cmp
stos
dec
sti
or
insb
pop
add
mov
outsb
mov
jbe
sbb
cmp
mov
and
jmp
cmpsb
inc
cmp
mov
sub
push
ret
hlt
lea
clc
neg
outsb
jne
loop
dec
imul
and
jnp
cmpsl
mov
xchg
push
cmp
insb
jo
cmc
icebp
cmp
push
dec
lds
mov
call
test
aad
push
pop
jns
stc
cmc
shlb
sahf
or
pop
push
lret
pop
dec
xor
ja
scas
mov
sbb
mov
nop
and
jne,pt
int3
mov
dec
pop
xchg
mov
imul
daa
scas
jne
out
popf
stos
addl
mov
cmc
push
or
sbbb
arpl
xchg
jmp
xchg
xchg
lods
push
mov
bound
xor
std
xorb
mov
add
pop
mov
aad
clc
cmp
jge
pop
adc
sub
push
mov
xor
insb
sub
dec
pop
jle
push
repnz
sub
nop
push
pop
repz
xor
jge
and
mov
clc
push
scas
ds
add
pop
cmp
and
das
add
cwtl
push
dec
aaa
int
dec
xchg
call
adc
cmp
hlt
xlat
int
sub
push
cmp
xchg
pop
je
adc
cmp
cltd
hlt
push
sbb
mov
and
and
sub
rolb
gs
lret
gs
sbb
jns
aam
rcrl
iret
hlt
push
jg
adc
cld
shl
push
xor
enter
in
pop
js
fsubr
xor
out
mov
jmp
outsb
dec
pop
push
mov
scas
add
xor
add
ja
mov
stos
movsb
dec
xchg
stos
mov
push
xor
jl
pop
push
push
faddp
and
adc
add
push
sbb
jle
js
xchg
mov
or
adc
lods
insb
mov
mov
mov
sbb
je
je
sti
mov
imul
insb
inc
inc
hlt
arpl
adc
sbb
or
mov
enterw
popf
outsb
xor
mov
add
jne
dec
sarb
addr16
push
repnz
out
and
cmp
std
pop
vpmadcswd
xchg
cmpsl
xor
xchg
adc
lcall
popa
jecxz
fsubl
inc
loop
es
in
mov
icebp
cwtl
hlt
or
inc
pop
call
and
jmp
sbb
ss
insl
cltd
jae
outsl
repnz
pop
stos
in
movb
push
add
mov
xor
mov
inc
arpl
and
lret
mov
jnp
cmpsl
push
cltd
add
cmc
adc
adc
into
lret
in
push
adc
aaa
lods
xor
sub
idivl
movb
xchg
popf
cmpsb
xchg
jae
xchg
push
push
mov
bswap
and
outsl
push
les
or
mov
mov
lds
sub
out
cld
push
lret
fbld
getsec
or
mov
lods
in
ret
je
movsb
cld
jp
push
jns
aam
push
xchg
xorb
loope
mov
int
dec
cltd
jg
aas
cltd
in
fisubl
lcall
mov
pop
cmp
and
ret
popa
sti
in
pop
fstl
jle
push
mov
adc
mov
cltd
pop
enter
and
mov
cmpl
dec
cmp
fs
lret
in
lahf
adc
jnp
or
sub
or
outsb
ds
in
scas
xor
fwait
or
jae
les
push
xchg
or
lahf
lret
inc
orl
into
pop
out
and
xchg
fildl
xchg
mov
sub
or
or
xchg
daa
jns
imul
ror
fidivs
gs
mov
fdivrp
jb
cli
jb
sub
fs
push
inc
or
pop
adc
cmp
add
xchg
test
xchg
das
stos
stc
aam
cmpsl
repz
push
popa
in
stos
rcll
out
ss
pop
inc
adc
mov
jae
cmpsl
jae
test
push
test
dec
arpl
dec
sbb
mov
sub
out
xor
cmc
cmc
fwait
mov
icebp
test
sub
or
outsb
mov
scas
mov
addr16
xchg
cs
add
pop
ss
out
hlt
into
and
test
push
adc
enter
and
adc
ret
cltd
mov
ljmp
ds
dec
and
inc
pminsw
adc
push
shrl
adc
imull
sub
popf
jbe
mov
push
std
sbb
popf
cmpsl
js
cmc
addr16
fs
lahf
sarb
sbbl
push
std
cmp
xchg
mov
xor
mov
jp
insb
adc
jmp
cwtl
pop
repz
pop
lret
lcall
and
outsb
push
mov
std
lahf
lods
mov
and
sub
xor
repz
sbb
stos
xor
loopne
jnp
seta
push
fimull
jb
icebp
push
or
dec
mov
jecxz
sbb
movsl
mov
aam
jbe
push
cmp
sub
jle
jg
pop
daa
adc
orb
pop
lcall
xchg
mov
pop
pop
mov
mov
out
add
push
ficomps
repnz
mov
cmp
jle
cld
xchg
loope
dec
outsb
pop
pusha
xchg
je
popa
rorl
jae
push
stos
div
lock
shll
addl
movsl
out
mov
mov
outsl
sub
js
add
fldl
cwtl
inc
loope
lret
sub
and
and
push
inc
bound
sub
ds
movl
aas
icebp
fwait
mov
pop
add
lret
in
dec
mov
mov
jle
inc
mov
or
jmp
and
xor
pop
cmpsb
push
push
mov
lret
lcall
test
jo
int
imul
xor
push
arpl
or
idivb
cmpb
push
arpl
in
cmc
fstpt
js
push
push
call
xlat
enter
xchg
add
adc
pop
lret
sti
inc
out
scas
icebp
ss
cmp
clc
mov
jl
sbb
jmp
out
shrb
pop
scas
fsubrs
pop
mov
and
pop
ja
into
lcall
mov
pop
les
dec
shr
arpl
mov
adc
add
dec
push
cmp
push
mov
cmc
aas
std
xor
sbb
imul
sbb
add
insb
xor
push
xor
cmpsb
mov
push
cmc
jl
rclb
aam
outsl
lods
pushf
dec
and
dec
fnstcw
cmc
mov
inc
sahf
repnz
add
cmpb
pop
mov
push
inc
xchg
mov
push
jns
insl
xchg
imul
loope
or
outsb
mov
sbb
mov
leave
cld
popa
mov
aaa
mov
pop
adc
call
aam
sbb
jle
js
sbb
or
xchg
add
mov
adc
setp
stos
int3
mov
ljmp
xor
pop
or
int3
loopne
sbb
xorb
inc
lahf
jp
push
adc
xor
test
js
fdivrl
mov
mov
push
aas
add
push
loope
pop
sub
das
push
aad
inc
test
push
jle
jmp
aas
cmp
sbb
daa
sar
std
adc
fists
adc
add
dec
sti
sub
leave
call
imul
int3
shrl
jnp
mov
cmpsb
pop
js
lea
movsb
mov
ret
jne
fcompl
test
int
aaa
std
icebp
push
mov
inc
cmp
cld
and
and
popf
ss
push
xor
cwtl
mov
pop
dec
dec
mov
mov
mov
pop
mov
iret
daa
repz
push
sbb
jle
xor
mov
fdivl
sbbl
xchg
loop
xchg
fildll
fdivs
mov
sub
sbb
lods
sub
jbe
call
add
inc
daa
shlb
xor
iret
das
jns
movsl
test
aam
add
lret
fists
ss
dec
imul
fldenv
or
in
rolb
cmp
dec
jb
shll
mov
repz
les
sar
fidivrl
add
nop
cmc
mov
jecxz
popf
fisttps
shlb
push
movsl
sub
xchg
mov
leave
mov
popa
or
ja
pop
add
lods
pop
imul
xchg
xor
push
mov
mov
jno
test
adc
mov
xlat
sub
sub
add
sbb
mov
inc
jecxz
jmp
outsb
mov
adc
jno
out
push
sbb
mov
clc
popa
hlt
mov
and
dec
shr
jae
out
ja
loop
mov
out
ficoms
lods
scas
dec
ja
or
out
imul
xchg
jne
int
or
test
or
xor
cmc
cmp
sub
andb
inc
jg
gs
lods
jb
cmp
xchg
fcomps
inc
add
mov
add
daa
jp
push
push
dec
mov
clc
xchg
fs
mov
cmpsl
hlt
mov
cmp
lods
push
out
frstor
jmp
sub
jb
in
or
or
inc
push
and
lock
xchg
cmp
daa
sti
dec
lret
daa
cmpsb
add
icebp
stos
jecxz
fnstsw
pop
mov
mov
in
lcall
in
ss
push
add
fistps
js
dec
sti
mov
into
stc
pusha
idivl
mov
imul
in
or
leave
iret
lcall
dec
into
mov
or
mov
out
hlt
push
push
out
loopne
pusha
stc
jg
pop
mov
xchg
mov
mov
jecxz
lret
jno
ds
push
mov
daa
lret
push
mov
cltd
lcall
pop
push
aas
push
lea
lods
mov
mov
fsub
sub
es
iret
push
sbb
shll
cmp
xchg
or
arpl
loope
mov
cld
mov
movsl
les
add
fdivs
or
call
mov
cmp
imul
imul
cs
enter
push
test
in
sbb
ret
inc
stc
std
arpl
sbb
inc
sahf
pop
sbb
mov
inc
sbb
mov
cld
sub
jnp
jno
and
roll
cs
cmc
or
test
push
iret
adc
inc
testl
mov
pop
push
jmp
mov
mov
outsb
sti
outsl
inc
fabs
add
or
sub
mov
pusha
jbe
mov
imul
inc
xchg
sub
test
mov
jno
inc
jl
ja
arpl
pusha
push
adc
sbb
jb
jb
addr16
in
sbb
push
pop
out
add
cwtl
es
mov
daa
dec
mov
pop
test
aam
jp
outsl
aas
sbb
cwtl
clc
jnp
rol
xor
xchg
rcr
dec
pop
sub
outsl
rorb
lds
divl
std
xorb
add
or
lds
clc
ds
mov
arpl
mov
inc
std
mov
cltd
mov
xor
leave
pop
push
inc
ret
inc
int3
aam
imul
lcall
mov
bound
es
leave
int
sub
push
data16
test
jbe
mov
jne
mov
out
int3
push
mov
or
mov
adc
es
xchg
dec
test
push
xchg
sub
mov
mov
out
scas
fs
in
xchg
jg
sbb
insb
ficoms
outsl
popa
out
push
arpl
inc
imul
lods
inc
cld
inc
test
icebp
push
and
mov
in
cmp
imul
and
roll
inc
sub
addr16
jl
imul
lock
push
sub
mov
jns
jnp
stos
sbb
fcoml
lods
mov
sbb
loopne
pop
xchg
and
shr
sub
shl
cmpsw
int3
jmp
ror
ljmp
lods
loope
dec
stc
fstl
mov
aas
mov
xchg
lahf
sarb
movsb
jp
or
cltd
loopne
iret
mov
shl
inc
icebp
add
jns
push
inc
sbb
outsl
cmp
or
stos
je
xchg
push
and
xchg
cmc
dec
cli
mov
sbb
ud1
jecxz
out
sub
mov
out
mov
incb
outsl
data16
xor
test
sub
sbb
test
and
jp
repnz
and
cmpsb
imul
push
lea
pop
push
cli
popa
out
jmp
adc
cmpsl
mov
xor
inc
and
sti
and
mov
div
icebp
out
dec
sbb
repnz
cmp
cmp
ret
cmp
inc
rcll
sub
and
dec
pop
cs
adc
pop
mov
mov
push
xchg
sub
inc
in
pop
mov
and
aaa
sub
int
out
cwtl
bound
adc
adc
insl
jb
cmp
movsl
lods
out
imul
sub
inc
or
sbb
lods
mov
adc
ss
inc
std
jge
les
jno
add
imul
ljmp
jp
pop
out
orb
inc
fnstcw
sbb
cmpsb
sub
loop
pop
test
jno
sub
sbb
bound
ret
push
outsb
and
xchg
sub
mov
js
jo
cwtl
call
pop
jp
xor
mov
add
loope
popa
loope
jno
push
xor
xor
and
scas
fs
aad
in
je
fsubs
push
popa
out
lcall
adc
or
mov
adc
je
jb
xchg
cmpl
mov
icebp
pushl
inc
jmp
sbb
inc
sub
into
andl
adc
ss
mov
insb
ja
cmp
outsb
out
outsb
clc
cmp
add
orb
jl
into
cmc
mov
dec
push
or
repnz
lods
inc
mov
es
mov
cli
jne
stos
repnz
dec
xchg
xor
std
sub
clc
mov
bound
pop
cs
mov
or
dec
bound
imul
jno
mov
push
pop
call
ret
test
sub
cmp
lods
icebp
stc
sbb
and
imul
insb
sbb
jnp,pn
ljmp
pop
scas
mov
mov
mov
js
out
daa
mov
int
add
popa
ret
cmp
mov
mov
test
fwait
sar
out
mov
lahf
add
jecxz
lea
dec
lea
mov
repnz
lcall
lods
lcall
lods
and
jle
inc
push
jge
pushf
xchg
mov
dec
popf
xor
aas
fildl
aas
cs
shrl
push
lcall
inc
loopne
dec
mov
enter
rolb
jl
imul
xor
mov
pop
pop
dec
inc
dec
push
cmc
scas
inc
shl
xchg
jae
std
cmp
jbe
insl
es
into
out
xor
addl
jecxz
cwtl
xchg
scas
out
or
sub
xchg
inc
into
fcomip
fistl
stc
nop
push
pop
scas
xchg
test
xchg
push
aam
mov
incb
mov
jg
aad
xor
rolb
repnz
dec
xchg
scas
loop
ja
js
or
in
hlt
ljmp
inc
and
cmp
xchg
cli
aad
pop
lods
inc
adc
out
push
aas
xchg
jnp
insl
jb
push
adc
or
add
add
push
int
shll
pusha
fucomp
lds
dec
jp
jbe
push
pop
les
out
pop
push
mov
dec
or
roll
xchg
insl
outsb
arpl
dec
aad
std
jne
push
sub
jne
pop
sti
repz
xor
push
jl
or
movsl
sbb
pop
aad
pop
mov
adc
hlt
sahf
and
enter
das
xor
pop
icebp
jnp
and
and
dec
mov
and
or
dec
sbb
in
cld
lods
mov
jo
cld
mov
insl
enterw
pop
mov
cmp
mov
les
xchg
ljmp
mov
pushf
divl
inc
loop
lods
inc
and
sahf
shll
lods
cs
and
mov
std
in
inc
lods
xlat
rolb
aam
lods
test
or
loopne
dec
rorl
lret
std
xchg
aam
mov
mov
xchg
test
mov
jb
bound
pop
repz
and
mov
mov
xor
sbb
sbb
adc
ret
adc
nop
xchg
pop
cmp
mov
and
pusha
mov
inc
subb
push
jmp
xor
out
imul
std
jecxz
dec
les
je
imul
mov
xor
out
inc
jl
movsl
jne
sub
call
push
outsb
push
outsb
mov
shrl
jge
pop
cmp
push
sbb
into
xor
stos
or
hlt
bound
cmpsl
or
test
dec
fstpt
pop
mov
fisttpll
sub
xor
lahf
dec
daa
dec
xor
push
xor
out
data16
jl
shrb
push
pop
pop
lods
mov
push
lds
mov
inc
push
mov
cli
xor
vminsd
rcll
sub
and
cmp
pop
fwait
jns
push
push
push
or
sahf
push
sarb
push
fadd
and
stos
cmp
xor
xlat
imul
addr16
sub
filds
cs
mov
sbb
scas
jnp
adc
scas
mov
out
lds
sbb
and
sbb
xchg
pop
daa
shlb
inc
and
mulb
pop
mov
inc
push
lcall
int
mov
mov
jns
inc
jno
inc
mov
in
les
jb
sbb
das
lods
iret
lds
xor
lock
add
mov
or
sub
jge
cmp
pop
mov
mov
int
push
cs
int
add
pop
test
ljmp
vmwrite
and
cmp
ja
jo
iret
ds
outsb
mov
ja
xor
leave
sbb
add
out
jno
js
inc
fwait
es
mov
shr
sbb
fldt
int3
leave
mov
add
sbb
movsl
stc
dec
xor
adc
mov
mov
cli
pop
shll
inc
div
and
mov
jmp
push
dec
pop
ljmp
jae
inc
and
arpl
dec
sub
cwtl
cmp
jns
ja
adc
add
leave
add
or
outsb
sbb
adc
pop
xor
inc
rcrb
xchg
test
cmp
test
out
imul
dec
or
sub
pop
ret
pusha
rorb
sbb
es
negl
ror
push
xlat
mov
sbb
fs
jecxz
jmp
jecxz
into
sub
call
fdivrl
lds
push
addl
sahf
ss
fidivs
pushf
ret
std
jmp
sbb
nop
jbe
pop
pop
jge
je
repz
cmp
popa
iret
sub
lea
cmp
imul
mov
dec
lods
and
stc
dec
mov
adcb
sub
mov
daa
mov
arpl
xchg
pop
aas
repnz
mov
cmp
jle
dec
jb
imul
sub
mov
sbb
adc
in
mov
rcr
mov
lods
repnz
and
orb
fadd
movsb
jae
arpl
cwtl
xchg
sub
mov
dec
inc
sbb
cmp
jo
mov
add
xchg
adc
hlt
sub
cld
ljmp
in
mov
movsl
cwtl
xchg
mov
or
lds
imul
in
rep
xchg
dec
rcl
adc
mov
inc
sub
or
cld
adc
leave
mov
pop
cmpsb
addr16
pop
cmp
stos
sub
or
dec
jb
add
add
sub
jg
cmpsb
rorb
stos
not
testb
cltd
xlat
cld
insl
pop
push
inc
sub
rcrl
rclb
xchg
out
movsb
out
out
loope
and
push
fs
shll
lds
rolb
inc
int
into
cwtl
out
mov
jbe
aaa
stc
push
test
mov
sub
test
dec
aam
mov
aas
fldt
stc
cld
mov
pop
rolb
fcmovu
dec
sub
icebp
insb
mov
aam
push
ljmp
sbbl
jle
mov
push
lret
in
inc
stc
dec
xchg
in
mov
clc
test
mov
cmp
fs
sub
lret
or
imulb
xchg
cli
fidivrl
loopne
add
dec
jne
xlat
in
mov
cmp
arpl
cmp
jbe
adc
and
lds
xchg
mov
pop
xchg
dec
in
jmp
in
mov
and
rorl
dec
cld
aam
mov
jnp
sub
shlb
js
xor
push
loop
inc
mov
movsb
addl
cmp
jp
dec
add
je
add
enter
pusha
in
and
lea
popa
push
pop
jmp
sbb
mov
pop
xchg
imul
loope
popa
mov
nop
and
jne
lea
adc
imul
fs
inc
push
dec
das
inc
lcall
mov
mov
in
xchg
or
punpckhwd
sbb
scas
stos
jge
xchg
popf
mov
xchg
push
xor
mov
jnp
roll
insl
sbb
loop
std
aad
int
fnstcw
adc
out
xlat
and
jecxz
push
fmull
or
inc
fwait
je
cmp
shrl
test
ficoms
adc
add
jo
enter
inc
out
in
pusha
iret
inc
xchg
frstor
aas
push
jle
jp
bound
jae
sub
mov
fists
movsl
or
xchg
cmp
stos
ja
add
cld
pop
mov
repz
inc
inc
dec
fistpl
ja
jne
cwtl
mov
test
sbb
mov
xor
adcl
mov
xchg
int
mov
in
pop
cmp
loope
xor
addl
xor
divb
daa
mov
mov
lds
pop
mov
push
incb
ret
shll
fidivl
out
in
into
in
adc
inc
lret
push
mov
fs
cmc
sub
jnp
adc
les
push
dec
inc
sub
fldl
add
test
or
mov
push
cmp
push
lods
dec
repz
mov
imul
xchg
sub
add
sub
mov
andl
pop
repz
mov
int
push
mov
aas
leave
push
pop
push
fsubs
ret
aam
aad
int3
cs
dec
jecxz
push
cmp
xchg
mov
push
mov
test
cmpsl
leave
sbb
inc
outsl
pusha
mov
popf
cmpb
push
jne
fdivr
stos
ds
mov
jnp
jmp
pop
xchg
rorl
and
arpl
stos
mov
pusha
xor
int3
cmp
pushf
pop
mov
popa
mov
lcall
popf
stos
fcomps
lods
test
cmp
mov
and
mov
xor
cmp
sub
jae
cmpsl
sub
into
pusha
sub
lret
push
pop
inc
mov
out
dec
xchg
testl
sub
lods
fcmovbe
stos
aam
scas
cld
out
test
hlt
jns
out
loope
fadds
mov
dec
push
sbb
fldenv
mov
in
adc
or
enter
sti
push
pop
and
inc
imul
mov
adc
inc
pop
jo
push
push
fcomps
xchg
insl
cli
popl
cmp
cmp
adc
inc
mov
lock
cmp
mov
fs
call
add
xor
mov
pop
xor
fsubs
sbb
jmp
push
inc
jns
inc
gs
cmpsb
xor
in
nop
rcrl
fdiv
xor
dec
and
mov
dec
mov
pop
cmp
push
in
xor
dec
adc
shll
inc
add
das
stc
pop
mov
pop
mov
out
cmp
pop
shrb
push
in
fldenv
jae
add
out
out
in
xor
mov
iret
adc
cld
mov
mov
clc
pushf
jl
outsb
mov
or
dec
mov
bound
or
jae
jecxz
mov
add
push
scas
sbb
mov
ret
push
cmp
call
movsl
add
mov
je
into
fisubs
out
fdivrs
lcall
ss
daa
pop
aad
and
outsl
cmc
jae
gs
loopne
mov
xlat
subb
xor
jo
cmpsl
lret
movsl
sbb
lds
or
pop
xor
dec
sti
sub
pop
xchg
mov
and
pop
xchg
popf
cmp
push
addr16
mov
xchg
js
sti
ret
xchg
cmp
inc
mov
test
addr16
xor
loopne
mov
add
and
xor
mov
nop
inc
mov
mov
fsts
dec
sbb
mov
pop
out
jl
and
aas
out
rorb
pop
stos
adc
outsl
cmpsl
in
movsl
xchg
xor
inc
dec
push
mov
xchg
pop
add
add
cli
mov
rcr
enter
inc
xchg
push
out
sbb
sub
scas
and
and
jmp
xchg
xor
adc
xor
sub
psubq
mov
lock
dec
cmpsl
ret
je
aaa
mov
mov
sbb
fisubrl
stos
sahf
icebp
inc
mov
bound
add
adc
mov
dec
repz
popa
je
mov
sub
pop
mov
mov
jle
int3
fs
mov
inc
insl
mov
andb
test
push
push
stos
in
in
sub
cmpsb
pop
add
pop
fdivl
mov
jo
pop
cmp
cs
pop
adc
pushf
popf
push
mov
adc
idivb
sub
adc
push
ljmp
push
ret
xchg
rorb
pop
push
sub
inc
rcrl
insl
mov
call
mov
pop
push
scas
cli
popf
adc
mov
jae
jmp
sahf
xchg
sub
cli
ss
and
mov
dec
imul
jl
out
push
sbb
mov
into
popf
ret
dec
repnz
addr16
xchg
push
mov
in
or
ror
test
mov
jns
xchg
lods
out
arpl
xchg
mov
mov
mov
les
or
inc
jb
loop
mov
jmp
jae
adc
std
mov
xchg
fidivl
adcb
xchg
xchg
nop
sub
shr
leave
gs
or
jle
stos
dec
rcll
fwait
minps
cs
sub
push
or
outsb
pop
imul
aaa
pop
out
mov
add
lods
lahf
outsb
sub
dec
jmp
xchg
pop
fisubrl
sbb
jmp
fdivs
ret
shll
add
popf
dec
aam
xchg
mov
cmp
lcall
pop
cmp
cmp
std
pop
xchg
adc
out
imul
subb
mov
fidivl
orl
iret
mov
lret
ss
insb
mov
mov
add
loop
movsb
leave
imul
jns
aad
push
nop
add
sub
jge
insl
xor
enter
js
je
cmp
pop
inc
or
roll
cli
test
in
ss
fisubs
nop
loop
mov
pop
out
inc
popa
cmp
test
imul
mov
hlt
jae
movsl
adc
movsl
add
adc
pop
roll
test
add
mov
test
jmp
mov
jecxz,pt
jns
stos
pop
imul
cmpsb
lret
inc
pusha
stos
adcl
mov
add
mov
add
imul
mov
ja
adc
ret
dec
lret
xchg
jo
ja
fucomip
xchg
mov
aam
xor
push
shlb
jg
xchg
imul
jecxz
lods
jg
inc
sbb
sub
mov
fldenv
in
lea
cs
sub
popa
in
mov
mov
mov
lock
pop
push
inc
jmp
cmp
mov
mov
mov
sbb
and
mov
shll
and
xor
push
sbb
and
push
xchg
lods
or
pop
mov
and
dec
dec
or
nop
scas
data16
icebp
cmpsb
sbb
push
mov
shrb
adc
sub
scas
arpl
mov
adc
aas
in
sub
int
popw
out
stos
int
inc
cmp
mov
in
loopne
jo
test
out
ja
dec
in
dec
hlt
out
cld
jns
fldcw
xchg
aas
fdivrl
push
cs
popa
and
and
jae
inc
xchg
sahf
dec
rclb
and
fs
ljmp
insb
sbb
div
sub
mov
ret
cmp
stc
test
arpl
add
cld
aad
lret
or
mov
fwait
test
sar
xor
pop
xchg
stc
mov
ja
mov
adc
jbe
xchg
icebp
insb
icebp
adc
add
jge
pop
movsb
or
mov
or
lret
popa
push
xchg
sub
cmp
dec
dec
sarl
adc
cmp
mov
xchg
cmpl
sahf
mov
ss
rclb
mov
cs
mov
add
cmp
add
cld
add
mov
mov
mov
add
mov
cmpl
ja
mov
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
cmpl
je
push
push
call
push
pushl
pushl
push
call
push
call
push
call
xor
leave
ret
lds
add
inc
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
dec
.byte
.byte
inc
