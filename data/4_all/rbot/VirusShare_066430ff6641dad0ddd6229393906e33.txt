mov
push
dec
dec
in
push
cltd
es
clc
shlb
aam
je
cmpsl
imul
or
insb
inc
shll
fldt
xor
mov
xor
nop
in
adc
push
mulb
mov
cmp
and
orl
cltd
jno
cltd
jae
daa
mov
idivb
mov
fsub
mov
rclb
in
scas
js
adc
cwtl
mov
push
cmc
dec
fbstp
cmpsl
div
icebp
dec
aam
xchg
fistpl
or
push
and
jo
lret
mov
ss
push
inc
push
inc
mov
push
jne
out
shr
in
push
fs
les
into
push
push
sbb
ds
daa
jb
hlt
xchg
lret
iret
xor
jecxz
push
xchg
imul
insl
daa
or
pop
and
movsl
lock
inc
call
pop
subl
lods
notl
sarb
insb
mov
sub
sbb
push
pusha
jne
mov
jae
jecxz
and
add
or
js
add
xchg
and
rcll
jne
cs
shll
scas
andb
and
and
psubsw
aas
out
and
lea
cld
mov
adc
insl
inc
stos
pop
sub
sbb
xchg
push
popf
mov
jnp
jnp
int3
call
pop
push
es
and
daa
xchg
mov
popa
lcall
arpl
and
test
push
pop
inc
xor
xor
mov
mov
cmc
inc
push
pop
loopne
inc
jne
inc
jg
mov
je
jg,pn
cs
adc
and
cmc
and
and
and
test
push
nop
stos
pop
scas
rcrl
stos
fildll
ljmp
pushf
nop
pop
mov
daa
ret
mov
sbb
adc
mov
loopne
lock
movsl
imul
sub
xchg
fninit
movsl
push
mov
ss
lods
cltd
xor
cmp
or
in
cmp
sbbl
jbe
das
scas
xor
imul
mov
movsb
mov
lret
dec
xor
insl
or
add
js
or
add
ss
mov
sbb
xchg
pop
mov
inc
cwtl
std
inc
lods
ljmp
xchg
jp
pushf
jecxz
xor
es
fadds
adc
shll
xchg
sti
cmp
adc
and
mov
mov
or
mov
mov
lahf
jae
pop
jge
cmpb
ret
inc
arpl
cmp
call
pop
adc
mov
xor
insb
lods
out
int3
movsb
adc
cld
mov
decb
sub
xchg
shrb
add
scas
jns
xchg
aas
pop
sahf
loope
jmp
out
fucomi
punpcklbw
pop
in
cmp
cmp
lea
xor
pop
ljmp
ficompl
out
mull
jge
dec
xor
cmovp
stc
outsl
ss
stc
negb
dec
pop
jns
sbb
pop
gs
xorb
jge
fisttpl
pop
cmp
and
ficoml
movsl
sti
inc
xchg
ds
filds
pop
mov
ret
out
js
push
adc
inc
cwtl
xlat
xor
out
pcmpeqd
sbb
push
jl
mov
dec
insb
push
cmc
and
scas
hlt
inc
cmpsl
cmc
inc
hlt
mov
cmp
cmp
sub
dec
aam
stc
cmp
mov
dec
iret
sti
mov
fiadds
iret
les
cmpl
push
loope
ret
cmpb
dec
sub
daa
xor
mov
lret
ret
std
inc
repnz
mov
mov
xor
cmp
ja
bound
pop
in
mov
cmc
dec
jecxz
dec
into
andl
mov
mov
and
or
pusha
movsl
jnp
xlat
stos
in
cmp
push
mov
stc
mov
adc
adc
push
mov
scas
inc
addr16
pop
cltd
sbb
sbb
popa
or
pop
fidivs
mov
sub
movsb
push
mov
push
rol
mov
into
sub
subb
pop
xchg
sti
sub
ret
add
xor
imulb
add
sub
mov
daa
pusha
inc
push
iret
clc
shll
mov
gs
stc
nop
lods
stos
outsl
out
fldt
cltd
dec
xchg
repz
out
mov
ret
cld
scas
xchg
and
adc
addr16
inc
push
hlt
push
outsb
shrl
mov
xchg
out
lahf
mov
nop
mov
cltd
out
clc
scas
imul
xchg
jg
outsl
add
out
sbb
ds
jbe
mov
testl
iret
jge
cmp
cld
out
stos
mov
pop
or
nop
sub
je
jle
push
add
push
push
pop
pop
rol
pusha
ror
jl
cmp
dec
inc
rol
clc
lea
push
movzbl
push
push
push
push
cltd
pop
pop
pop
pop
shl
loop
pop
push
push
pop
pop
jns
jne
ror
clc
xchg
not
not
cld
mov
xchg
push
call
enter
pop
popa
hlt
test
pop
movsb
adc
ljmp
or
sub
xchg
adc
add
push
mov
pop
jg
push
dec
inc
pop
stc
nop
call
rol
js
push
test
pop
and
cld
add
mov
push
movzbl
sub
or
xchg
loop
pop
clc
push
push
sar
pop
pop
xor
sar
cld
push
pop
push
add
pop
jmp
xchg
shrb
and
mov
jp
test
adc
sahf
inc
pop
pop
sbb
cwtl
movsl
sbb
fwait
pop
pop
loopne
bound
test
and
fs
repz
js
add
lcall
push
mov
pop
xor
push
push
mov
pop
pop
ja
push
sub
pop
add
dec
inc
push
cltd
pop
and
jg
jns
push
sub
pop
add
stc
clc
push
add
mov
pop
loop
jecxz
or
mov
push
call
out
and
mov
insl
stos
popf
clc
mov
mov
mov
popf
and
mov
aaa
pop
pop
pushl
pop
jb
push
sub
pop
mov
test
test
jne
jmp
push
movzbl
jbe
push
push
cmp
pop
pop
jae
jl
test
test
push
push
ja
test
pop
pop
loop
pop
test
push
ror
pop
or
sub
nop
add
jb
test
jmp
lock
xchg
xchg
fstp
push
test
testl
test
jge
cmc
and
xchg
das
cmp
mov
adc
cli
les
lahf
imul
neg
xlat
out
xor
andl
push
mov
xor
pop
jp
push
push
pop
pop
cmp
rol
test
clc
push
xchg
pop
push
pop
xchg
pop
push
push
push
rol
pop
pop
pop
push
call
mov
xorb
fbstp
lcall
cmpsb
pslld
mov
xor
jne
iret
jnp
fisttpll
jle
inc
cmpsl
add
clc
fnstcw
lahf
jb
or
xadd
bound
mov
pop
pop
sub
push
shr
pop
push
call
out
dec
cmp
jp
gs
adc
add
fidivl
sbb
addr16
mov
lret
stos
fiaddl
mov
add
pop
dec
jne
test
nop
jno
jb
test
jp
push
jo
sar
pop
jbe
jl
xchg
xchg
push
test
pop
cmc
cmc
test
cmc
nop
cmc
push
call
shrb
sahf
jge
mov
add
jns
stos
test
enter
and
mov
xor
mov
gs
mov
lods
pop
adc
mov
aaa
xlat
sahf
xchg
insb
addr16
xchg
or
adc
ret
aas
pop
lds
fstpl
mov
push
stc
sub
ret
mov
scas
or
mov
cmp
rcrb
mov
inc
loopne
scas
pop
lahf
xor
scas
insl
dec
mov
jno
push
orl
adc
movsl
sub
sbb
and
pop
sbb
inc
xor
sbb
pop
pop
dec
jne
jmp
push
jge
das
ret
push
lea
mov
ja
adc
movsl
inc
mov
das
add
dec
or
xchg
rcrb
or
std
fucom
jl
sarl
push
lods
xchg
sub
sbb
adc
push
inc
stos
mov
xchg
rcll
add
fucomip
insb
cmp
out
rcr
iret
cli
insb
jg
push
sbb
lods
subb
lods
inc
and
lea
sahf
sub
pmulhuw
mov
nop
int3
or
xor
mov
inc
mov
jl
adc
clc
pop
pop
dec
icebp
sbbb
pop
cld
loope
into
jg
sbb
sarl
or
and
shl
shll
mov
pop
and
or
scas
je
pop
pop
std
dec
add
inc
pop
lods
fiaddl
int3
cmp
xchg
lret
sarl
int
pusha
aaa
xchg
lcall
adc
mov
es
pop
add
fs
inc
fiadds
add
popf
jb
sbb
insb
mov
andb
xchg
push
stos
mov
dec
imul
sti
or
mov
mov
popa
cmp
ret
mov
lret
aam
inc
lret
cmp
out
fsts
pop
or
je
lcall
sub
test
aaa
jns
frstor
and
xorb
push
imul
icebp
pop
pop
or
loope
mov
fdivrl
cmp
negb
mov
std
xchg
cltd
jle
xchg
dec
shll
dec
mov
scas
dec
out
movsl
push
xchg
cs
test
push
xchg
hlt
dec
iret
repnz
inc
push
sub
notl
insb
leave
div
movsb
or
push
mov
mov
mov
test
pop
stos
sub
inc
mov
mov
movsb
and
xchg
mov
rolb
and
ja
adc
cmp
jge,pn
stos
into
pushf
cmc
mov
in
jp
sub
mov
jmp
mov
mov
xchg
push
js
out
mov
and
jle
push
into
sub
lret
movsb
int3
sub
push
xlat
fiadds
aad
sub
sbb
insw
mov
leave
fwait
pop
test
lds
xchg
pop
add
rcrl
mulb
jp
xchg
lea
scas
test
push
ss
div
xchg
mov
xchg
insl
arpl
fwait
jb
fsub
stc
fwait
adc
vmovsd
jge
shrb
cmp
mov
xchg
sub
inc
es
aad
ret
rcll
sahf
or
loop
mov
push
mov
pop
xor
cmp
popf
shl
adc
cmpsl
mov
pop
cs
jecxz
pop
imul
test
sbb
ja
clc
mov
or
sub
push
jle
fwait
cli
scas
fbld
mov
sti
gs
stos
fistpll
pop
xor
ss
inc
sub
mov
ja
test
pop
aaa
scas
repnz
pop
scas
lock
and
mov
repnz
enter
ss
xor
cmp
add
fucomp
dec
aad
mov
movl
leave
sbb
sbb
fstl
into
cltd
xchg
out
negb
pusha
push
sub
xchg
push
test
insb
and
movsb
stos
xchg
rcl
or
mov
out
std
testl
sub
mov
mov
sahf
aad
fcoml
fstpt
mov
dec
mov
xchg
nop
int3
mov
adc
out
sahf
fisubs
mov
mov
pop
dec
aas
popa
mov
push
in
int
jecxz
cs
mov
hlt
pop
stos
sahf
inc
adc
test
bound
mov
out
movb
fcmovnbe
outsl
cs
add
fisubl
mov
mov
jmp
pop
mov
mov
mov
mov
xchg
in
inc
aam
fcmovne
sbbl
lods
jb
push
out
into
inc
mov
push
or
aam
mov
and
mov
stos
xchg
test
cwtl
mov
mov
cmpsl
mov
xor
push
rclb
std
push
pop
sbbb
outsb
mov
popa
inc
jmp
mov
sub
mov
out
jb
in
sub
iret
mov
mov
dec
dec
jmp
mov
mov
mov
xchg
mov
push
cmp
mov
push
add
inc
add
enter
mov
out
jns
push
dec
int3
dec
xor
insl
and
jnp
xlat
push
cld
cvtps2pd
rorb
das
std
orl
xor
dec
xor
mov
out
inc
inc
push
arpl
push
out
jae
or
rcll
std
into
inc
ss
xchg
sub
ds
xlat
sbb
in
jb
lds
xchg
sub
cld
in
nop
dec
icebp
xchg
insl
cmp
imul
push
rcl
rcl
in
xor
inc
sub
int3
pushf
push
xor
stos
shrd
cld
imul
mov
sbb
cmpsl
ret
rolb
in
iret
cmp
sbb
push
and
lock
hlt
adc
mov
icebp
sbb
jo
int3
shll
pop
cmpsl
int3
mov
or
sub
into
cmpsb
push
pop
cmpsl
daa
pop
stos
pusha
or
xor
mov
clc
out
inc
cmp
push
je
or
int
pop
mov
das
adc
lods
mov
mov
ss
dec
fnstcw
mov
pop
xchg
sti
sub
cmp
movsl
leave
pop
jno
fistpll
mov
pop
dec
push
dec
lret
movl
mov
lahf
adc
clc
or
xor
inc
sbb
push
btc
sub
jg
out
cmp
shrl
hlt
sbb
adc
push
mov
mov
fdivrs
scas
push
pop
xorb
sub
mov
mov
inc
shrl
jl
test
jp
xchg
xor
into
or
lret
sbb
mov
sbb
stos
pushf
das
xor
mov
pop
cmp
dec
cmp
mov
xor
fucompp
push
sub
xchg
pop
stc
sbb
test
sbb
dec
xchg
xor
jl
sub
mov
xchg
movsb
outsb
ret
pop
mull
push
mov
popf
rcl
cmpsb
je
testl
leave
lret
or
jo
loop
loop
sub
js
dec
mov
mov
repnz
mov
pusha
mov
outsb
pop
fiadds
out
call
rorl
in
sub
xchg
lods
out
add
adc
cmp
test
sbb
jnp
mov
mov
sbb
lret
fucomip
push
mov
and
or
xchg
lcall
pop
dec
mov
xor
mov
push
call
sub
les
push
mov
arpl
ret
out
cs
mov
xor
aaa
jno
bnd
bnd
xor
and
mov
stc
mov
test
es
xor
mov
mov
mov
pop
insb
add
daa
rcr
sahf
les
ret
lods
pop
scas
cmp
sub
mov
jecxz
or
cli
mov
stc
icebp
or
xor
dec
pop
cwtl
dec
push
rol
jne
sbb
fldcw
ss
jle
inc
ljmp
lcall
call
aam
pop
in
lock
xor
popa
jnp
lds
mov
and
flds
sub
cmpsl
pop
lcall
cmp
ljmp
sarl
mov
pop
jno
aam
popa
lea
inc
adc
jne
push
outsb
scas
movsl
xor
mov
movsl
mov
sbb
push
mov
imul
and
xchg
mov
movq
mov
fldl
loop
sub
inc
push
cltd
cmp
cmp
mov
mov
iret
mov
in
xor
add
icebp
ja
sbb
sti
xchg
divl
lods
adc
andl
pop
movsb
hlt
adcl
pop
jne,pn
cmp
xchg
lock
and
repnz
lea
stos
stc
and
mov
xrelease
sbb
fs
push
xchg
insl
arpl
inc
iret
jge
cmp
call
loop
mov
scas
cs
lds
pop
popf
sahf
mov
mov
add
jae
or
das
or
xor
ja
lret
sahf
mov
mov
in
sbb
lods
je
sti
int3
sbb
dec
xor
mov
inc
cld
clc
jbe
cmc
push
jmp
cmp
ja
cs
xor
lods
loope
hlt
ds
xor
test
test
call
data16
pop
inc
mov
push
dec
dec
ljmp
mov
rolb
or
adc
lahf
or
fdivrp
sbb
bound
das
insb
push
imul
inc
sub
sbb
pop
daa
adc
int3
je
push
cmp
cwtl
add
adc
jno
aad
test
ljmp
cmpsb
push
push
aam
xchg
lret
call
in
mov
mov
and
jle
mov
jns
jae
stos
mov
fldcw
xor
or
out
imul
jne
int
xor
jge
mov
and
jb
pop
and
cmp
jne
and
outsb
loopne
imul
sahf
xor
push
outsl
fiadds
cmpb
inc
stos
and
xchg
xchg
out
fucomp
inc
iret
jmp
xchg
dec
jne
or
in
sarb
add
add
ret
pop
loopne
hlt
and
push
std
icebp
xor
data16
into
test
jne
jp
mov
dec
push
xchg
int3
push
lea
imull
mov
repz
jb
enter
sahf
pusha
or
xchg
jae
sub
out
xchg
cwtl
mov
xchg
push
rorb
rolb
dec
add
imul
push
sub
pop
and
ljmp
pusha
fcom
mov
fsubl
fcoms
subb
sub
hlt
jo
mov
inc
icebp
xor
lahf
push
outsl
pop
mov
ljmp
aas
xchg
aas
or
sbb
gs
fldl
sbb
mov
push
mov
sbb
in
jo
ss
xchg
adc
lcall
dec
dec
decb
jbe
jl
aad
fisttpll
shrb
mov
push
and
bound
jns
mov
push
rcrb
stos
mov
jbe
out
dec
fstpl
push
pop
cmpl
xor
test
mov
mov
into
or
push
xor
mov
ljmp
dec
pusha
sbb
lret
cwtl
or
outsl
lods
int
mov
dec
out
xor
sub
xchg
jo
es
dec
inc
clc
jbe
pop
fistpl
imul
iret
subl
sbb
test
jp
std
scas
cmp
out
cli
inc
cmc
mov
sub
lcall
push
rcrb
xchg
mov
mov
fisttps
lahf
lcall
xchg
xchg
mov
fsubs
lods
lds
arpl
mov
jl
scas
stos
test
mov
scas
cmc
mov
out
imul
insb
loop
push
jecxz
inc
sbb
cmpl
ffreep
call
xchg
fwait
mov
sub
push
daa
je
mov
jae
jnp
mov
adc
push
xchg
data16
pop
inc
adc
cmp
shrl
and
cmc
test
pop
mov
xor
xor
aad
inc
lea
cmp
popa
cmp
mov
pop
cmpb
xchg
cli
dec
addr16
out
sbb
dec
adc
and
add
dec
add
lods
mov
hlt
cmp
xor
cmp
mov
pop
mov
fidivl
add
jl
xchg
push
adc
icebp
pop
sub
push
fwait
mov
sub
pushf
adc
outsl
pop
push
cmpsl
iret
adc
lock
add
mov
cld
xlat
les
xchg
in
or
in
ret
dec
leave
pop
cmp
jo
mov
fsubp
sub
cmp
jl
jle
test
mov
sub
test
fsubr
pop
and
pop
notb
ficoml
insl
movl
cmpsb
pop
sub
xor
jo
out
cmpsb
dec
sub
lret
enter
imul
or
lea
jo
test
or
or
js
or
loop
sub
mull
dec
jmp
stc
dec
cmp
sub
xlat
mov
push
inc
pop
ret
xchg
loope
add
fs
cmp
test
loop
vorps
outsl
sahf
add
mov
gs
call
cld
cmp
and
aaa
hlt
hlt
push
cmpsl
ficompl
push
push
test
out
mov
or
mov
imul
in
mov
scas
je
imul
jo
push
sbb
push
scas
pop
loop
std
push
mov
xlat
fwait
xchg
sub
incl
cwtl
pop
mov
test
pop
jmp
jne
outsb
inc
shl
or
xchg
cmpsb
or
pop
mov
sbb
mov
fcom
imul
pop
push
mov
in
loop
cmp
fstps
ret
or
push
lods
xor
xchg
pop
aad
in
jmp
push
lock
xlat
jg
jmp
repnz
in
popf
pop
insl
nop
adc
adc
cmp
ljmp
adc
sti
dec
cmp
xchg
sbbl
mov
mov
push
mov
jo
lea
adcl
subb
aas
stc
mov
hlt
dec
aad
sbb
xor
or
data16
and
ficoms
dec
add
in
xor
fcmovu
cmpsl
cmp
cmpsl
fcomip
cli
pop
lahf
es
mov
in
pop
daa
popf
adcb
sbb
mov
pop
mov
rcll
insb
dec
call
xor
mov
push
decl
out
lret
and
jns
xchg
pop
mov
xchg
fwait
mov
or
mov
ret
stos
mov
addr16
cmp
leave
gs
push
push
shl
dec
jecxz
sbbb
pusha
test
loopne
pop
outsl
cli
add
int
sub
jecxz
rclb
jae
sub
in
outsl
loope
adc
mov
cmpsl
push
outsl
sub
xchg
xor
add
pop
inc
mov
jo
mov
insl
xchg
movb
arpl
pop
pop
loopne
fidivs
in
in
ficomps
cmp
and
call
push
iret
bound
repnz
dec
cmp
push
stos
dec
std
mov
imul
cmp
push
push
stos
hlt
enter
jge
das
fnstsw
rcrb
dec
mov
clc
outsl
rcrb
or
je
xor
mov
das
shlb
mov
xchg
push
xor
movsb
mov
ljmp
rcrb
xchg
insb
shlb
bound
cmc
cmp
fstl
mov
imulb
push
push
out
lahf
mov
inc
add
pop
imul
and
aas
andl
jge
sbb
jae
js
fsub
xor
cli
mov
adc
pusha
int3
fdivrs
js
jnp
cltd
mov
mov
aas
cmpsl
xchg
fwait
adc
sahf
sbb
adc
xchg
loop
adc
insb
xchg
nop
es
xor
jns
lods
inc
add
in
inc
lods
jge
insb
mov
sbb
lods
mov
ljmp
cli
adc
lea
cmpsb
addr16
or
push
dec
rcrb
inc
iret
fstpt
ja
sbb
mov
repnz
ret
ret
xor
subl
adc
repz
ret
pop
loop
inc
js
inc
enter
xchg
mov
jmp
ljmp
cmpsl
test
int3
mov
cmp
fs
fs
cli
push
xchg
orl
cmp
dec
mov
neg
pop
mov
jecxz
sti
popa
jbe
out
jne
jne
inc
in
add
cmp
pop
fldl
jp
adc
outsb
pop
lret
in
inc
data16
lods
push
scas
push
adc
mov
in
push
idivl
jne
cmc
add
inc
mov
or
inc
inc
push
std
dec
pop
mov
xchg
sbb
test
sub
jge
sub
enter
sbb
mov
sbb
lods
sbb
dec
rcll
rolb
jmp
cmp
xchg
inc
imul
in
adc
cmpsb
jle
movsb
cmp
fs
or
lods
es
or
sub
shrl
dec
nop
mov
push
out
cwtl
pop
int3
outsb
arpl
push
movsl
add
shlb
mov
pop
lea
out
addr16
rol
sub
jmp
jno
jl
adc
les
and
adc
xchg
xor
jae
sbb
in
xchg
stc
inc
data16
insl
xchg
lahf
popa
cmp
and
fistl
das
nop
mov
lret
pop
mov
mov
dec
and
xor
jo
les
jge
inc
pop
cwtl
fisubs
jecxz
cmp
enter
inc
ds
add
mov
leave
sub
testl
jle
mov
mov
mov
or
ljmp
clc
shll
sub
xchg
and
jae
sub
jg
mov
jle
lcall
mov
add
repnz
sbb
mov
lcall
int3
sbb
scas
outsl
push
stos
int3
movsl
sub
shll
sti
push
icebp
mov
and
jns
sti
in
iret
sub
jnp
inc
aaa
jne
pop
stos
xlat
lods
in
xchg
dec
sbb
jg
jmp
cs
jne
rep
mov
jne
mov
add
gs
sub
dec
and
int
mov
sub
adc
outsl
mov
sub
adc
jnp
imul
loop
cli
loop
mov
sbb
xchg
xor
push
or
pop
pusha
jne
mov
aad
pusha
pop
fsubp
ss
clc
pop
ds
cmp
das
adc
fwait
add
xor
rcr
push
cmpsb
jb
enter
pop
or
pop
cld
jge
xchg
test
in
gs
or
das
in
jle,pn
xor
inc
int
ja
cli
mov
rcrb
sbb
mov
mov
outsb
ljmp
mov
cmpsl
jmp
fwait
gs
pop
hlt
stos
subl
rcr
cmp
xchg
cmp
xor
mov
mov
test
adc
or
mov
les
pop
jbe
cmpsl
ss
sti
lock
imul
pop
cmpb
iret
push
in
enter
cmpsb
add
fsubs
mov
add
jbe
xchg
lea
in
mov
mov
arpl
nop
xchg
xchg
pop
popa
push
mov
fbld
sub
clc
mov
mov
add
addr16
push
fisttpll
push
in
inc
jp
sti
push
cmp
cmp
fs
enter
mov
push
fs
repz
mov
addr16
jae
pop
mov
pop
inc
shrb
ret
inc
rcl
leave
std
cmp
jg
inc
dec
ds
rorl
ret
and
insb
push
mov
rcrl
push
dec
sub
mov
aaa
bound
int3
popa
popf
cld
ss
inc
scas
mov
jle
or
lahf
sbb
cmc
mov
adc
fdivs
sub
outsb
fdiv
clc
jno
push
fsts
sub
loopne
lahf
adc
ljmp
cmp
inc
dec
cld
mov
cmp
xchg
xchg
test
push
pop
rolb
sarl
ficoms
cmp
cmp
ret
inc
cmp
mov
push
gs
nop
out
in
jl
scas
sub
mov
aaa
je
aaa
xchg
add
int
push
pusha
push
add
xor
push
inc
scas
dec
lea
jae
dec
mov
pusha
data16
fcmovnu
stc
add
sub
xor
test
fnsave
shr
dec
mov
mov
xchg
or
inc
movsl
pusha
outsb
scas
pop
js
push
mov
leave
and
ja
lahf
icebp
stos
pop
dec
inc
dec
ret
adc
mov
movsl
dec
sub
dec
jmp
in
sub
push
mov
mov
outsb
ss
xor
and
sbb
sbb
lret
sbb
adc
subl
push
sub
jg
mov
xchg
jae
push
dec
push
and
sub
lret
cmp
imul
ret
sti
cmpsb
call
push
or
inc
add
imul
inc
sub
test
negb
lcall
xor
pusha
lods
or
lret
pop
js
cli
scas
pop
sbb
cmp
sub
sub
xor
and
xchg
dec
lret
mov
fmuls
bnd
adc
mov
lret
mov
dec
arpl
pop
in
testb
insb
imul
fmulp
gs
adc
cmp
jne
mov
inc
sub
pop
pop
ret
push
movsb
dec
mov
cmp
pop
mov
jle
leave
mov
lret
stos
xchg
imul
xchg
sbb
out
or
daa
cmc
mov
pushf
and
es
out
es
or
in
outsl
dec
mov
pushf
movsb
mov
les
add
cmp
rcrb
fnstcw
outsb
xchg
adc
push
dec
and
test
xchg
leave
jmp
arpl
sub
jge
movsl
aaa
lds
mov
lods
push
lea
aam
sub
push
dec
mov
adc
mov
inc
push
xchg
pusha
cltd
idivl
xor
leave
mov
lcall
dec
inc
mov
hlt
xchg
rolb
xchg
cmp
sub
dec
cmpsb
pop
mov
pop
cmp
test
xchg
std
sbb
sbb
popf
jecxz
inc
lahf
push
sub
ss
adc
dec
out
xchg
vpmaxsw
push
adc
mov
jmp
hlt
push
adc
fists
mov
cmpl
fldlg2
mov
jg
adc
loopne
mov
cwtl
pop
roll
and
mov
call
lret
dec
mov
pop
test
pop
xchg
push
sbb
popa
testl
add
jb
cmp
mov
test
std
pop
ljmp
lcall
cs
jne
cmp
pop
xchg
call
fsubrl
xchg
mov
rorb
lcall
pushf
xor
jle
ret
rcr
jmp
push
nop
pop
fs
xor
push
ret
ret
cmp
or
inc
push
popf
cmp
mov
cwtl
jmp
mov
xor
pop
dec
cmpsl
loope
cmp
push
cmpsb
test
movsl
push
mov
jecxz
sbb
call
push
push
sub
add
outsb
pop
roll
leave
fwait
xor
push
and
pop
movsl
pop
rcl
push
ds
mov
push
cmp
fs
xchg
mov
cwtl
out
dec
mov
ds
fisubl
jl
rcrb
stos
cmp
inc
icebp
xchg
les
rorl
jbe
lea
xor
xor
subl
add
aad
lret
and
mov
hlt
repnz
xchg
lods
out
loope
inc
mov
shrb
or
dec
pushf
imul
pushl
das
loop
pop
call
dec
push
and
adcb
in
adc
test
into
repz
cmpsb
adc
mov
mov
push
jns
aaa
shr
inc
mov
sub
repnz
cwtl
sub
out
fimuls
mov
mov
sbb
inc
movsb
or
das
lds
arpl
and
inc
in
lea
loop
jns
xorl
sub
mov
lds
sbb
push
test
cmp
inc
jl
or
mov
adc
and
pushw
adc
popa
mov
or
adc
bound
and
sub
out
pop
call
cwtl
push
mov
mov
mov
dec
mov
sbb
leave
icebp
mov
sbb
rolb
aaa
inc
pusha
inc
pusha
fsub
cmp
sbb
out
or
ja
mov
push
fsubr
mov
jge
loopne
lods
jge
in
lret
lds
sti
xlat
cmpsb
js
sub
and
mov
add
xorl
scas
and
jg
push
mov
sub
jmp
or
adc
sahf
testl
cmp
popf
std
ret
sub
stos
out
mov
or
pop
mov
xchg
shll
xlat
cs
jecxz
in
or
or
xchg
inc
push
adc
push
roll
dec
daa
cmp
jecxz
fstpt
sbbl
mov
and
sub
sub
pop
popa
push
push
stos
mov
lcall
mov
ret
pop
mov
mov
pop
dec
xchg
rol
repnz
iret
pushf
mov
subl
or
sbb
cs
movb
imull
je
dec
rcr
insb
or
or
fstpt
outsl
insl
loop
cmp
add
test
and
inc
dec
cmp
adc
dec
sbb
sbb
adc
mov
dec
fbld
xchg
arpl
cmc
cmp
scas
pop
jmp
mov
fdivl
mov
bnd
lcall
mov
inc
in
stos
insl
cmc
aam
mov
cld
add
and
mov
and
mov
cwtl
jnp
stos
xchg
push
pop
mov
xchg
and
dec
roll
ret
add
ja
js
mov
adc
or
push
push
in
xchg
jnp
mov
and
xlat
mov
dec
xchg
or
fdivp
pop
pop
pop
leave
lcall
fwait
mov
sub
or
xchg
push
xchg
push
pushf
xchg
imul
pop
cmpb
adc
cwtl
fnstcw
test
pop
xor
xchg
jns
sar
shlb
iret
pop
les
movsb
xchg
dec
andb
in
rorl
ljmp
cmpsl
mov
pop
push
and
add
mov
mov
mov
add
loopne
leave
lcall
lds
cmpsl
pusha
ficoml
loopne
mov
out
add
sub
cwtl
mov
loop
mov
fsubrs
orl
sub
js
xor
outsb
ds
mov
and
sub
dec
mov
iret
jnp
or
pushf
push
iret
add
mov
es
dec
jb
dec
out
jmp
xor
jne
out
adc
inc
decl
addb
leave
in
dec
sarl
out
stos
jge
das
icebp
dec
cmp
xor
aam
leave
pop
mov
daa
test
push
mov
das
sbb
jno
scas
push
adc
std
add
daa
les
sbb
dec
mov
add
idivb
adc
ds
xor
xor
xchg
cmc
and
mov
mov
jp,pn
mov
push
jp
ds
movsb
mov
sub
sar
push
cli
les
push
dec
dec
fsubr
adc
jmp
push
insl
sub
push
gs
push
jnp
sbb
popf
and
xchg
lcallw
sub
xchg
jnp
lods
and
int3
dec
cltd
iret
mov
xor
inc
and
shrb
xlat
cs
inc
dec
and
push
test
or
xchg
push
mov
ret
and
in
add
jne
cmp
push
jne
mov
jge
cltd
stc
and
fstl
movsl
push
adc
push
aam
scas
icebp
inc
enter
addr16
out
push
adc
cmp
xor
sub
jnp
loope
jg
in
sub
mov
xlat
cli
xchg
mov
inc
and
jb
idivl
cwtl
in
xor
fstpl
dec
inc
xlat
aaa
fcoms
pop
mov
and
sbb
lea
mov
jl
sbb
push
pop
xor
mov
loopne
rorb
push
movsb
pushf
xchg
dec
lahf
push
cmc
push
mov
sbbb
push
inc
push
sub
sub
cld
push
sub
pop
out
outsb
pop
adc
adc
sahf
lahf
xchg
push
dec
cmp
xor
add
insb
gs
and
out
leave
cmp
or
cmp
cmc
ret
imul
inc
cmpsl
popa
fbld
sub
mov
inc
push
ljmp
dec
int3
lahf
test
jmp
pop
pop
add
mov
nop
dec
popa
pop
mov
shll
cmc
aas
sbb
loop
xchg
cld
jno
xchg
and
jmp
inc
out
push
je
lods
in
addr16
mov
sahf
mov
xchg
mov
sub
arpl
sbb
jno
sahf
stos
daa
lods
and
jb
cmp
jle
in
or
cmp
jne
xor
hlt
push
int3
xchg
fnstsw
dec
xchg
or
icebp
sub
pop
lcall
mov
jno
outsb
mov
push
mov
enter
xchg
mov
dec
lret
ss
mov
push
push
fimuls
push
push
fsubrs
outsl
movsb
xchg
outsl
aam
jbe
shlb
imul
inc
or
or
scas
in
cmc
pop
xor
jg
jmp
ficompl
ficomps
push
xor
inc
dec
sbb
adc
adc
popa
outsl
sbb
jno
ret
movsl
mov
dec
call
inc
ja
pop
or
shlb
dec
sbb
mul
and
insl
sub
mov
xchg
or
outsb
mov
and
out
inc
js
shr
repz
jne
enter
mov
xchg
mov
repz
sub
mulb
je
outsl
xchg
jge
jecxz
jle
xor
fstps
mov
lock
cltd
inc
andl
pop
and
fs
cli
fwait
cwtl
jle
testl
mov
call
ret
mov
fstpt
ret
pop
addl
pop
and
mov
sbb
lret
jmp
outsb
inc
push
cmp
loop
out
adc
call
cltd
sub
cmpl
fldt
xchg
data16
test
sub
and
cmp
std
es
and
std
icebp
not
sbb
and
decb
xor
popa
mov
dec
xchg
dec
sub
cmpsb
and
test
and
xor
daa
aas
or
aam
xor
mov
rolb
adc
call
adc
pop
in
push
stos
divl
out
adc
cmpsb
stos
lahf
mov
rcl
mov
lahf
jge
arpl
xchg
lea
daa
add
adc
leave
sub
push
inc
sbb
mov
pop
add
push
sub
fldl
add
xor
out
inc
outsb
lahf
scas
sub
dec
mov
jecxz
shl
das
mov
mov
insl
adc
out
rcrb
out
add
add
xchg
dec
sub
pop
lahf
pop
popa
fcmove
jbe
jle
test
cmp
lods
xor
std
sub
mov
cmpsb
or
test
mov
add
repz
xor
xor
jp
add
mov
daa
dec
rcr
cltd
pop
clc
jg
sub
push
pushf
mov
ja
in
cwtl
jp
bound
cmc
adc
jae
loope
nop
sbb
sub
int
xor
stos
loope
stc
sar
push
push
incl
sti
add
inc
les
jle
xor
sbb
gs
mov
stos
mov
lods
mov
outsl
sbb
neg
fnstcw
lahf
xor
sti
pop
jno
adc
enter
mov
fdivr
add
sbb
loopne
pop
xlat
nop
jecxz
inc
ds
sbb
out
push
xchg
pop
xor
pushf
xchg
add
movsl
pop
push
std
aam
adc
test
adc
fstl
lods
dec
into
pop
xor
cld
mov
fcoms
add
mov
mov
xor
and
dec
inc
push
pop
sub
ds
xchg
push
mov
pop
adc
mov
or
pop
sbb
xchg
inc
aam
cmp
aaa
sti
xchg
and
ljmp
sbbl
dec
mov
int3
iret
lahf
mov
dec
mov
cmpsb
sahf
adc
jb
jne
jmp
jge
pop
push
stc
inc
cmp
mov
dec
and
mov
stc
es
out
adc
loopne
lock
idivb
fdivrl
cmp
mov
movl
lret
or
mov
or
jecxz
mov
xchg
out
pop
test
and
xor
push
popa
lods
popf
out
aam
sub
dec
jmp
xchg
sbb
cmp
sub
mov
lret
mov
fs
nop
outsl
enter
mov
scas
pop
fnstcw
dec
jl
scas
sbb
jne
mov
imul
test
push
retw
popw
fcmovnb
or
das
mov
scas
nop
fcomip
cld
rcl
cmp
or
jae
loope
jnp
xchg
cltd
push
dec
cmpsb
ljmp
orb
push
out
jmp
mov
xor
aas
call
lcall
jbe
lret
repnz
mov
lods
and
inc
fmull
out
inc
into
adc
mov
arpl
xlat
sbb
push
aas
lcall
cmp
mov
sbb
push
pop
mov
fdiv
and
int
push
adc
in
cwtl
test
decb
jp
cli
dec
push
cwtl
stos
add
iret
mov
popf
and
push
pop
add
cwtl
add
imul
jp
lcall
cmp
ficomps
lahf
push
mov
lods
inc
jb
add
jmp
push
push
out
clc
jecxz
call
sbb
inc
test
mov
in
sbb
push
lcall
movsb
sub
or
rorb
sbb
out
jmp
sti
loope
rolb
sbb
push
inc
xor
repnz
ficoml
or
loope
dec
sub
mov
xchg
push
ja
sbb
jmp
xchg
imul
jp
loopne
push
jo
mov
mov
mov
push
out
pop
rcrl
jne
sahf
sub
dec
inc
test
mov
xchg
and
cmc
push
enter
hlt
incl
cmp
xchg
aam
cmpsb
cmp
repz
bound
push
jne
mov
inc
adc
fstl
or
cmp
push
sbbl
fs
mov
adc
les
ret
cltd
lret
or
and
icebp
pushf
adcl
cmp
pop
lret
pop
cmp
jp
repnz
adc
and
and
pop
std
dec
pop
mov
mov
or
out
or
rcll
mov
icebp
dec
mov
cmp
cmp
xchg
ljmp
sub
rorl
stos
push
sbb
rcrl
sbb
add
addr16
jmp
inc
pop
cs
mov
cmp
xor
pop
add
iret
jnp
dec
mov
mov
lds
pop
or
cmp
bound
out
pop
in
jne
in
add
or
outsl
cli
adc
mov
inc
mov
imul
arpl
lret
mov
fldt
sub
lret
xchg
or
and
sahf
ljmp
sarl
dec
xor
stc
xchg
xchg
jge
jno
lcall
js
mov
movq
or
xor
adc
loope
push
aam
jge
shr
push
cmpsl
jno
sub
or
insl
pop
pop
push
push
out
or
sahf
inc
aam
iret
mov
mov
sbb
popa
sub
pop
xorb
jmp
pop
push
dec
push
aas
sub
mov
into
orb
aad
pop
sti
cmpsb
lea
mov
cmp
inc
xchg
adc
or
lcall
daa
push
mov
push
push
cmp
fucomi
or
inc
fisubs
push
cmp
movsb
ds
mov
or
mov
idivb
and
sbb
cmp
loope
push
aaa
test
loopne
jmp
sti
jg
je
inc
push
fdivl
movsb
inc
aad
xchg
shll
inc
fcom
mov
hlt
mov
into
push
mov
int
call
subps
cmp
in
or
ret
push
inc
lds
add
pop
mov
mov
pop
mov
mov
cmp
cmpsb
mov
mov
xchg
ds
pop
fadd
push
push
and
insl
rcll
sbb
push
cmc
popf
mov
push
fnsave
nop
push
or
mov
xor
cmc
inc
push
scas
cmpsb
cmp
pop
je
out
ljmp
es
push
mov
xor
out
movsl
mov
sarl
ss
addb
jo
ret
xorl
mov
loop
scas
jle
and
pop
rcr
push
sahf
sub
jmp
inc
push
push
out
incl
push
fst
fwait
inc
sub
pop
loopne
adc
repz
cmp
mov
fsubs
andb
pop
push
push
mov
mov
dec
sbb
jmp
cld
mov
push
mov
cmpsb
add
mov
fcoml
ffree
dec
loopne
inc
icebp
cmpsl
leave
out
fs
iret
mov
xchg
icebp
or
imul
stc
xchg
stos
pop
mov
adc
xchg
dec
jbe
test
incb
mov
inc
repnz
fcomp
xchg
leave
sbb
pop
jg
mov
pop
sarb
or
ficompl
jns
xchg
fwait
dec
popa
mov
ja
sub
fs
mov
fs
out
dec
ffreep
dec
or
xor
fimull
ds
pop
cmp
sub
outsb
cmc
pop
iret
sbb
repnz
int3
shrb
xchg
push
imul
cmpsl
hlt
ss
cmpsb
iret
shl
xchg
mov
lods
mov
mov
mov
nop
std
mov
lahf
into
stos
cld
inc
popf
mov
xchg
add
fxch
cmp
scas
pop
pop
mov
push
aaa
out
cmpsb
lods
test
mov
ficompl
arpl
pusha
je
pop
xchg
ss
popf
adc
in
inc
in
cmp
adc
out
mov
sahf
xor
push
in
jecxz
xchg
mov
addb
or
mov
pop
mov
fadd
cwtl
add
cmp
ljmp
outsb
fsts
fistpll
cmc
lods
fnclex
sub
jmp
cmp
sbb
dec
xchg
and
xchg
in
movsl
push
jo
cmp
out
adcb
add
mov
cld
jb
fucomip
and
fs
cmp
call
push
popf
arpl
push
jg
push
call
fimull
and
out
dec
or
popf
gs
jne
adc
rcr
xchg
cmpsw
and
sbb
mov
add
lods
or
mov
cmpl
icebp
loopne
cmc
dec
mov
mov
scas
and
inc
pop
jae
jecxz
test
test
sub
fstpt
jecxz
mov
sbb
loope
clc
pusha
in
push
lods
mov
imul
loope
xor
and
dec
fbld
mov
push
decb
adc
sti
out
jle
xchg
sub
jmp
mov
add
add
je
pop
mov
inc
fildll
lcall
mov
push
pop
cmp
test
rol
push
sbb
jg
or
sub
icebp
movsb
add
fnstcw
arpl
jo
lret
in
mov
mov
out
inc
add
loopne
ja
mov
jb
xchg
sub
add
mov
xchg
js
dec
xchg
clc
pop
xor
pop
repnz
cmp
mov
adc
xor
add
mov
push
je
sub
mov
insl
loopne
cmpsl
lds
rolb
xchg
mov
xor
lock
and
cmp
aas
inc
push
aad
xor
fisubs
mov
fsubr
rcll
stos
push
add
lods
and
dec
or
mov
xor
push
in
in
aas
xchg
pop
fs
icebp
xchg
gs
mov
xchg
and
jecxz
jmp
jecxz
fwait
mov
cmp
mov
ret
mov
add
sub
lahf
mov
enter
inc
ja
pop
in
pop
dec
mov
adc
dec
xor
repz
adc
jns
sub
dec
movsl
jecxz
aam
ljmp
out
sub
sub
movsb
cmpsl
dec
lock
notb
ljmp
pusha
push
sub
xor
cmp
pushf
dec
dec
push
fistl
mov
sti
das
mov
mov
or
mov
cmp
std
adc
inc
xlat
stos
test
fisttpl
mov
rcrl
mov
cld
fdivp
divl
stos
cmpsl
pop
xchg
cmp
test
xor
or
pusha
pop
sti
mov
pushf
push
adc
aas
mov
xor
inc
clc
je
pushf
cltd
ret
cmc
ljmp
rclb
shll
into
mov
jae
sub
in
sbb
sahf
and
lret
ljmp
cmpsl
sbb
pop
loopne
or
repz
popf
iret
aad
cmp
cmpsb
mov
sahf
jb
cli
cmp
jne
mov
in
jp
fcmovu
cmpsl
adc
xchg
out
call
mov
scas
aas
mov
pop
pop
leave
ficompl
ficompl
pop
push
jge
popa
mov
jecxz
mov
adc
mov
icebp
adc
inc
jmp
dec
xchg
pop
in
jo
aad
lcall
xchg
push
hlt
mov
xadd
mov
cli
shl
repz
in
sub
fmull
in
test
jae
test
fiaddl
xchg
jecxz
icebp
push
mov
mov
rcl
push
bound
cltd
das
out
out
sbb
push
cmp
push
xchg
movsl
mov
out
bound
sub
xor
lods
pop
ss
add
mov
loop
adc
mov
pop
and
add
iret
xchg
les
lods
loop
xor
mov
pop
xchg
inc
test
imul
pop
insl
inc
or
outsb
jl
repz
jle
jae
lahf
mov
mov
cli
mov
repnz
sbb
das
jg
or
imul
and
mov
iret
nop
dec
xor
gs
add
adc
cwtl
loop
fst
addr16
mov
sbbb
insb
sbbl
cmp
dec
data16
xchg
dec
push
cmove
mov
arpl
scas
cmpsb
shl
daa
fidivl
and
es
insl
dec
jae
loopne
adc
pop
inc
jo
push
je
enter
test
jmp
adc
es
fs
jae
movsl
xchg
pop
sbb
add
jne
and
sub
aas
aad
xchg
cmp
jmp
repnz
shlb
mov
push
shl
adc
lods
pushl
inc
stc
inc
xchg
stos
cmpl
xlat
insl
push
pop
cmpsb
pop
and
popl
cmp
test
lretw
pop
lret
loope
fbld
and
mov
mov
sahf
outsl
push
jno
lods
jnp
movl
movsb
xor
mov
aaa
jb
adc
clc
xchg
pop
xchg
adc
pop
movsb
insl
sbb
cld
je
cwtl
jae
test
pop
inc
or
cmp
mov
js
mov
inc
push
sub
jnp
sahf
ret
mov
fprem
push
and
ljmp
or
lock
jp
add
imul
cmp
push
mov
loopne
test
in
les
stc
cmp
mov
jno
adcb
jno
pop
rcrl
pop
mov
mov
cmp
pop
fstl
mov
pushf
mov
mov
fcmovnbe
push
out
adcb
aad
cli
jo
out
xchg
fidivrl
xchg
test
push
jns
xlat
cltd
mov
pop
xor
shlb
adc
xchg
shll
mov
inc
and
insl
ud2
rclb
mov
mov
xchg
int
cltd
loop
sub
jbe
gs
push
call
mov
push
xor
fiaddl
mov
imull
push
or
mov
js
lock
mull
or
pop
out
push
jo
aas
jp
mov
arpl
add
lea
fildll
push
xchg
loopne
js
mov
outsl
cltd
test
push
sub
ds
jecxz
and
push
push
inc
ss
sub
xchg
imul
xlat
rolb
rcrl
aam
repz
sub
sbbl
subps
mov
lds
sbb
movsl
mov
jno
dec
xor
in
xchg
or
fs
jb
jno
popf
leave
pushf
cmp
fistpll
gs
xchg
xor
cltd
adc
pusha
data16
out
les
jo
adc
cwtl
cmp
jecxz
push
mov
shlb
cmp
add
push
fs
xchg
xchg
lcall
mov
shl
sbb
and
cmp
popf
mov
cmp
sbb
ja
insl
sub
jnp
loop
push
dec
ds
lds
or
pop
enter
ficoml
fsubrl
dec
pop
fsts
fistpll
fcmovnb
pop
xor
int
pop
cmp
lods
push
idiv
ljmp
or
cmpsb
jno
cmp
push
out
pop
xor
mov
repnz
cmpsl
pop
inc
sub
fisttpl
inc
add
shlb
mov
ja
or
xchg
xor
dec
pop
push
sti
inc
sahf
xlat
movq
or
popa
negb
push
lret
add
das
shlb
sarl
out
loop
cmp
scas
int
mov
dec
cmp
outsb
or
neg
mov
mov
in
push
xchg
lss
mov
stos
cmpsb
jmp
xor
in
lcall
sbb
inc
lods
push
jae
pop
push
mov
xor
lock
sbb
leave
xchg
cmpsb
lock
insb
aad
xchg
xchg
or
leave
sbb
and
lock
fsubl
and
fdivs
inc
inc
jns
cmpsl
jp
adc
jmp
mov
imul
and
lret
push
or
mov
add
mov
xchg
push
push
xchg
xor
stos
xor
fimuls
cmpsb
dec
jns
mov
push
adc
dec
sub
fs
lods
add
xor
inc
sbb
and
adc
pop
sbb
jbe
aad
cmp
in
sbb
call
adc
jg
adc
cmp
fadd
dec
mov
jbe
adcb
cld
ds
pop
sub
mov
inc
add
mov
mov
jnp
testl
into
shlb
push
adc
adc
call
inc
mov
bound
or
xchg
testl
jl
cmp
xchg
les
movsl
sahf
push
mov
xchg
fildl
frstor
fmull
mov
testb
popf
hlt
add
push
inc
pop
xchg
pop
shll
xchg
inc
cmp
sbb
dec
xchg
pop
popf
call
inc
mov
pop
popf
jb
mov
inc
adc
stc
pop
divl
mov
mov
xor
adc
inc
popf
sbb
lcall
ret
mov
cmp
mov
add
cmp
jno
jnp
popa
sti
out
jb
pop
pop
inc
jecxz
sub
jbe
in
test
idivl
popa
shrb
mov
sahf
inc
test
pop
fnstcw
lea
arpl
mov
pop
push
addb
out
ret
int3
lods
addl
pop
xor
pop
sub
cmpb
aad
les
scas
dec
into
aas
xor
enter
icebp
dec
in
mov
je
loopne
dec
sub
repnz
adc
repz
and
stos
cmp
xchg
push
cltd
out
xchg
cld
pop
lock
ja
sbbb
xchg
jae
cmpsb
jle
outsb
xchg
add
xchg
out
xchg
shll
push
fcomps
mov
sar
clc
insl
cli
adc
pop
out
push
stc
xchg
iret
mov
and
adc
leave
in
mov
xchg
inc
xchg
push
xchg
cs
dec
xchg
inc
mov
daa
xlat
outsl
adc
cmc
fildl
test
mov
add
mov
push
jecxz
jle
xor
stos
loop
out
jp
in
ljmp
push
loop
mov
sub
mov
cli
cld
rolb
adcl
and
dec
les
or
loope
cmp
popf
mov
add
arpl
pushf
pushf
hlt
addr16
xchg
mov
and
call
rolb
mov
mov
stos
dec
xor
cmp
ret
sbb
mov
or
sbb
mov
fimuls
jge
and
cmp
lods
and
pop
repnz
or
je
or
lods
mov
popa
imul
adc
or
or
push
mov
adcl
fisubl
mov
fisubrl
fmulp
mov
cwtl
mov
xchg
test
ret
add
hlt
or
cmovs
push
outsb
push
adc
jl
lods
lea
and
dec
popa
outsl
sub
movsb
hlt
inc
lds
ja
dec
mov
mov
xor
loope
lds
in
xor
loop
sbb
ljmp
ljmp
jl
push
repz
jb
mov
mov
or
jg
jecxz
sbb
fisttpll
and
push
das
sub
jp
sbb
data16
push
loop
out
aam
outsb
pusha
push
xchg
cmp
pop
xor
and
aaa
mov
inc
fcmovu
mov
lret
mov
jl
xchg
aaa
and
fldenv
mov
test
jo
jne
aas
adcl
and
int3
loop
loope
dec
push
adcl
jmp
fbld
xchg
lcall
sbb
adc
jecxz
inc
gs
loop
sahf
sub
pop
xor
sub
mov
test
mov
xchg
push
xor
ds
sahf
push
and
fisttpll
jmp
ficomps
sbb
lods
lods
mov
fs
je
and
int3
push
gs
mov
or
pop
or
pop
jae
mov
movsb
insb
shrl
lock
dec
pop
icebp
pusha
mov
push
lahf
pop
xor
aam
pop
test
sbb
ret
cmpsl
jmp
addl
stc
and
xorl
out
xor
das
jb
dec
xchg
push
mov
xorl
push
pop
test
push
lock
or
inc
mov
shl
ror
cwtl
sbb
jae
lcall
stc
popf
sub
jcxz
fadd
hlt
xchg
fnsave
lcall
and
adc
lahf
sarl
or
pop
push
push
bound
adc
movsb
jecxz
mov
sti
in
test
or
shlb
enter
sub
xchg
mov
xchg
pop
jae
mov
ror
xor
jo
dec
mov
xor
fstpl
adc
mov
adc
cld
rcrb
lahf
icebp
dec
mov
dec
cwtl
inc
push
daa
leave
or
push
ss
xor
shll
insb
cmp
sbb
insl
jae
clc
dec
aad
cmp
mov
and
pop
mov
cmp
or
dec
int
cmp
push
xchg
xor
add
push
lock
movsl
sbb
pop
adc
pushf
cmpsl
mov
icebp
insl
jb
pop
adc
icebp
xor
addr16
adc
mov
cwtl
data16
cmc
cmp
je
test
push
pop
adc
mov
out
setns
pop
dec
inc
fwait
push
jmp
lcall
jns
and
loop
idivb
dec
sub
psubw
fdivrp
outsl
or
mov
sbb
pop
in
negl
mov
jp
dec
xchg
push
int3
shrb
lods
add
and
pop
pop
adc
psllw
test
inc
clc
clc
xchg
push
pop
js
jecxz
lods
sbb
fistpll
dec
repz
repnz
movsb
iret
sti
cmp
mov
scas
and
jns
jb
imul
mov
or
xchg
mov
out
jae
cmp
ret
sub
sbb
into
sub
inc
outsl
adc
dec
mov
pop
mov
mov
or
jne
push
lods
call
xor
insl
xor
xor
fldcw
jno
xlat
fnstsw
sub
or
push
cld
test
push
iret
xor
jns
ret
sub
jns
shr
xchg
and
mov
inc
mov
orl
pushl
add
push
rolb
or
cmp
fwait
in
sbb
movsl
inc
mov
push
push
jnp
imul
jne
jne
js
adc
lock
mov
imul
push
cmp
jo
std
movsl
jb
sarl
ffree
jecxz
call
pop
or
testb
push
cmp
je
and
cmp
mov
sub
and
stos
pop
loope
into
or
enter
addb
sbb
push
lret
insl
icebp
inc
je
xor
fldenv
mov
popa
sbb
ret
icebp
out
xchg
mov
dec
insb
inc
inc
push
js
inc
cmp
psubd
imul
inc
mov
push
mov
jns
cltd
or
push
xchg
mov
dec
mov
push
add
repz
mov
xchg
lods
in
je
sub
outsl
clc
mov
lahf
add
dec
shl
sahf
daa
or
cli
aas
or
gs
cltd
repz
adc
outsb
and
cltd
or
imul
pop
movsb
jg
xchg
fstps
lret
clc
add
mov
cmp
inc
push
push
mov
das
mov
push
test
sbb
pop
fwait
dec
js
icebp
cmp
jb
movsl
aam
sub
dec
cmp
cmp
ss
mul
xor
lods
arpl
jne
push
adc
adc
sbb
and
push
lods
ret
stc
lods
cmpsl
inc
cmp
mov
popa
cmpsb
in
sub
imul
add
es
inc
xchg
ficoml
loopne
xchg
int
fcoml
xchg
pop
xor
sbb
rcrl
jnp
scas
mov
jmp
and
or
dec
aam
xchg
mov
andb
jns
or
add
mov
mov
pop
insl
push
dec
mov
fsts
or
out
rolb
sub
cld
or
loop
adc
jge
ljmp
sbb
mov
mov
xor
or
loopne
addr16
sbb
xchg
aam
js
repnz
mov
xor
xor
movsb
outsb
ds
push
mov
clc
enter
dec
xlat
push
adc
jbe
insb
or
jbe
out
or
mov
fbstp
out
test
lcall
cwtl
ljmp
pop
sbbb
fbld
mov
into
lods
pop
js
icebp
imul
std
icebp
sub
fcompl
dec
xchg
sar
xor
adc
cli
adc
inc
dec
mov
es
dec
mov
repz
push
fstpt
push
cwtl
cmp
xor
in
lods
pop
enter
mov
push
sbb
pushf
lcall
jb
iret
inc
mov
int
push
inc
iret
aaa
jle
cmp
add
pusha
ss
repnz
xchg
andb
icebp
sbb
inc
loope
pop
push
mov
out
pushf
in
pop
in
aas
outsl
int
mov
cs
sub
jp
nop
cmc
inc
inc
push
ret
xchg
adc
adc
repz
fisubs
test
pop
lea
imul
jg
flds
popf
pop
sub
ret
hlt
into
cmp
fisttpll
inc
inc
or
test
aam
jae
lea
imul
loopne
push
std
cltd
push
imul
mov
or
lods
and
das
dec
mov
xchg
test
push
filds
out
rcrb
cmp
leave
add
mov
mov
fmuls
cmc
inc
clc
testb
comiss
loop
out
out
and
popa
pop
in
addr16
mov
ficoml
cmp
iret
jmp
mov
js
jb
sbb
pop
cmpsb
mov
mov
inc
add
jne
lods
and
je
push
enter
mov
mov
outsb
mov
mov
and
sahf
and
jmp
jbe
jecxz
add
xchg
mov
les
nop
xor
cmp
inc
scas
call
sub
dec
das
iret
xor
pop
dec
mov
jno
stos
jp
xchg
insl
pushf
add
inc
and
mov
sahf
insl
insl
negl
dec
roll
aam
pop
inc
bound
inc
sub
stos
mov
lcall
cli
dec
mov
lock
sub
mov
sub
mov
js
xchg
mov
mov
pop
and
leave
add
stc
out
cmc
or
xchg
jmp
xchg
test
cmp
cmp
sub
pop
add
inc
cwtl
insb
cmp
lds
xchg
jmp
xlat
lret
stos
sbb
sub
test
cmp
xbegin
shl
or
js
loopne
jmp
fimull
movsl
clc
jne
xchg
xchg
hlt
fistps
aas
lds
jle
clc
shrd
pop
sbb
adc
dec
jp
gs
jge
and
mov
les
dec
repnz
lret
out
jmp
insb
push
mov
push
dec
ds
addb
adc
or
stos
xchg
shll
pmaddwd
aaa
cwtl
jp
inc
pop
mov
stc
and
lret
hlt
cli
leave
testb
sbb
jecxz
sbb
and
push
jae
mov
test
lret
fwait
mov
jns
jle
mov
cmpsl
mov
int
ret
mov
sar
hlt
dec
adc
das
mov
das
push
push
movsl
lods
xor
lock
out
inc
jp
dec
sahf
sub
lret
lcall
or
mov
pop
mov
sub
shll
add
leave
shl
test
cli
sbb
sti
jnp
fwait
inc
pop
aad
movsb
pop
adc
fwait
mov
jmp
iret
xor
mov
in
jbe
test
faddl
adc
imul
pushf
shlb
xorl
sub
into
call
aad
jno
add
jg
in
lahf
add
sbb
xchg
adc
ss
jnp
hlt
mov
cli
cmpsb
mov
popf
xchg
mov
imul
cltd
enter
sti
push
pop
int
dec
lea
xor
and
add
sbb
xchg
incb
dec
inc
loope
dec
or
stos
cld
jns
xchg
imul
call
jg
shlb
std
inc
pop
add
jp
jle
jge
outsl
je
in
push
scas
icebp
or
xor
int3
mov
and
cld
lahf
mov
cmpsb
enter
in
xor
xchg
loop
sbb
ja
movsb
sbb
cmp
and
mov
test
xchg
mov
ficoms
lcall
adc
out
insl
xor
jge,pn
fdivrs
jge
in
xchg
lcall
subb
negl
add
push
and
ficoml
adc
cwtl
pop
adc
cmc
cmpsl
int
add
js
iret
push
fstpl
xor
scas
jns
jp
aad
pusha
data16
add
pushf
pop
and
popa
insb
leave
jne
rcr
cmp
pop
xchg
pop
aad
push
movsl
fwait
leave
xchg
movsb
push
movsb
or
pop
das
push
movsl
sbb
cmp
out
push
or
and
in
lods
cmp
mov
insb
dec
scas
or
ljmp
xchg
imul
imul
cmpsb
xchg
cmpsb
pop
shll
mov
and
lods
out
lods
pusha
loope,pn
test
add
fnstenv
orl
mov
xchg
dec
out
xchg
out
lret
dec
sub
xorb
jge
add
adc
lcall
js
aad
mov
jle
daa
adc
xchg
insl
cmpsl
jno
jmp
andl
scas
sahf
pop
push
je
sbb
loope
add
pop
jp
xchg
popf
pop
pop
ret
mov
cmpsb
sarl
iret
mov
xchg
jmp
xchg
fsubr
add
lcall
add
xor
xor
mov
dec
xchg
test
andb
scas
les
adc
inc
data16
dec
sbbl
ss
daa
add
mov
iret
fstenv
iret
repz
lds
fstl
movsl
loopne
icebp
jno
into
mov
mov
in
int
ret
popa
scas
mov
jae
inc
popa
jns
pop
ret
loop
or
imul
adc
mov
in
inc
iret
push
lret
mov
ffree
shrl
inc
pop
outsb
ds
lret
push
fs
out
sti
bound
js
popf
clc
loopne
inc
ret
push
inc
dec
loope
ret
jb
negl
jmp
push
and
inc
or
daa
int
adc
inc
pop
test
lock
fsubs
fs
aaa
hlt
mov
dec
dec
and
or
int3
sub
ja
fidivrs
insb
shrl
mov
stos
sahf
push
adc
cltd
sbb
stos
mov
mov
dec
sbb
sbb
lcall
int
and
jo
mov
shr
mov
insb
mov
scas
cmp
movsb
xor
outsl
inc
push
shrb
lods
mov
jl
stc
stc
mov
enter
adc
adc
std
jne
jo
and
push
cwtl
pop
dec
dec
mov
imul
add
inc
test
push
sbb
xor
xchg
xor
xchg
mov
add
sbbb
clc
add
imul
lret
xchg
jl
inc
insl
cwtl
mov
fs
jns
add
lea
xor
lock
jmp
bound
ljmp
shrl
leave
jmp
into
xchg
mov
in
cmpsl
add
xor
add
pop
jns
mov
jne
scas
leave
jle
jp
pop
negl
jmp
jg
stos
pop
pop
addl
xchg
std
in
mov
dec
push
mov
pop
in
fsubrs
jne
xor
lock
inc
aas
push
ret
sub
pusha
nop
fcmovnbe
push
pop
inc
cld
insb
in
repnz
outsl
aas
push
add
or
dec
push
lahf
jl
mov
lods
les
and
cs
movsl
lcall
cmpsb
mov
or
jb
push
jge
loopnew
fdivl
xorb
out
out
cmp
push
leave
xor
aam
lock
lods
stc
aaa
pusha
fs
inc
jo
cmp
pop
leave
inc
xchg
cmp
pop
sub
mov
fs
insl
sub
dec
xchg
in
lods
pop
roll
imulb
xchg
jmp
jmp
add
mov
sbb
sti
inc
rcr
cmp
pushf
out
and
xor
jecxz
movsl
mov
mov
pop
mov
pusha
loope
clc
ss
and
cli
add
pop
je
jecxz
repnz
xor
enter
ss
icebp
jnp
addr16
cmp
sbbb
and
neg
bnd
mov
push
add
and
out
add
imul
jmp
aaa
dec
push
push
shrb
pop
and
lods
out
ret
adc
dec
sbbb
out
inc
mov
leave
shrl
cwtl
scas
sub
cmp
jmp
daa
in
sbb
add
push
inc
dec
cmpsb
mov
repz
pusha
push
mov
adc
andl
push
xor
mov
out
lahf
push
call
mov
push
jns
in
sbb
negl
pop
shll
test
dec
cmpsb
jg
stos
sub
ds
jns
icebp
ja
rolb
popa
dec
mulb
mov
sbb
or
mov
dec
cmpb
add
ljmp
pop
push
dec
xchg
ja
adc
mov
mov
sub
movsb
mov
popa
sbb
xor
stc
icebp
adc
mov
xor
xor
out
popa
pop
fisubrl
sbb
stc
stc
push
mov
outsb
mov
mov
push
xlat
lcall
xor
push
popf
cwtl
push
add
shlb
xchg
xor
sub
pop
sbb
adc
mov
sub
inc
pop
arpl
outsl
bound
imull
xchg
dec
aas
ds
cmp
imul
push
pop
pop
fidivl
push
and
sbb
pusha
jmp
imul
loope
push
push
and
lcall
jb
mov
pop
or
mov
push
cmpsb
push
or
add
das
jl
pop
mov
xor
ror
and
adc
xchg
movb
into
mov
jg
ret
jl
add
je
mov
mov
and
pop
xchg
pop
xor
mov
lock
add
pop
imul
jle
aaa
std
sub
enter
sbbb
in
or
sub
add
js
test
aas
add
fcomp
xor
mov
push
push
xchg
mov
sbb
scas
add
pop
sub
out
xor
xchg
mov
adc
mov
cmp
cld
pop
inc
jne
push
xchg
subb
stos
int3
and
jle
push
jno
pop
sub
mov
cmp
ds
aad
fcmovb
lds
sub
out
mov
fisubs
xor
int3
jp
ror
aaa
push
adc
into
push
int
pop
mov
pop
dec
mov
dec
jg
mov
insb
jecxz
jl
adc
aam
sbb
mov
ret
enter
ja
pop
repz
or
cmpsl
sahf
xchg
es
xchg
sub
aaa
sbb
dec
test
loop
js
int3
add
jle
cli
sub
fildl
mov
pushf
dec
hlt
lret
pop
cwtl
push
test
cmp
sarl
jo
pop
call
mov
fistps
pop
dec
addr16
mov
frstor
pushf
fildl
mov
mov
bound
mov
pop
and
cmp
sarb
out
ss
adc
lcall
in
out
adc
outsl
adc
js
pusha
cmp
mov
loopew
stos
inc
push
adc
outsl
popa
bound
xchg
pop
jecxz
movsl
lock
rol
xchg
xchg
push
inc
bound
jecxz
clc
mov
mov
scas
in
adc
fs
sahf
enter
pop
and
pop
call
mov
mov
mov
inc
sub
sub
mov
inc
adcb
add
jne
jecxz
fsub
sbb
or
push
icebp
lods
js
stos
sbb
mov
pop
add
mov
or
mov
shll
int
cmp
sub
es
aas
dec
fbstp
mov
jp
pop
fsubs
cs
xchg
xchg
xchg
xor
imul
push
cmp
popa
stc
dec
leave
cltd
shll
js
inc
ds
xchg
jnp
and
xor
divb
mov
dec
adc
lds
and
adc
cmpsb
idivl
sbb
push
repnz
mov
cmpsb
aam
loopne
xlat
dec
loop
inc
or
pop
aad
shl
in
jge
sbb
or
push
daa
pop
data16
cld
mulb
inc
stos
mov
pop
lds
pop
xchg
inc
jnp
mov
leave
xchg
sbb
pushf
mov
jne
pop
movsb
mov
aas
sbb
mov
cmpsl
mov
cmp
sbb
jg
lock
fwait
xor
sub
push
push
cmp
frstor
das
pop
push
push
lods
mov
fdivr
data16
ret
xchg
cwtl
jns
jb
aad
push
dec
js
dec
cs
dec
sub
or
pop
stc
push
out
vpaddw
mov
rorl
les
popf
sbb
xchg
hlt
push
xor
rorl
dec
orb
mov
adc
inc
xor
out
push
inc
aam
sbb
sub
sbb
mov
add
mov
or
push
rorl
sbb
mov
mov
cmc
push
out
adc
pop
bnd
cmpsb
push
cmc
jns
inc
xor
dec
ficomps
cli
lcall
pop
adc
sub
push
adc
stos
xor
push
mov
push
inc
stos
aaa
popa
mov
push
idivb
idivb
icebp
cmp
out
inc
mov
mov
and
cmp
xchg
adc
xchg
popfw
jecxz
insb
and
je
es
dec
and
mov
sbb
mov
jge
les
or
mov
xchg
inc
adc
pop
xor
xor
test
xchg
in
adc
jl
out
inc
lcall
sti
pushf
dec
mov
movnti
mov
aad
sbb
in
jmp
mov
sbb
popf
movsl
iret
adc
and
addr16
fs
push
inc
jmp
mov
sub
popf
sub
aas
ror
mov
dec
cmpsb
mov
icebp
or
fdivrp
inc
outsb
mov
add
pop
xor
pop
outsw
test
xor
mov
mov
cs
xchg
lds
movsl
out
scas
fwait
or
add
rcll
pop
xchg
lock
in
jbe
xchg
fbstp
mov
sbb
rol
mov
arpl
test
xor
xor
inc
enter
popa
mov
scas
mov
xor
pop
testl
jecxz
test
je,pt
stos
in
and
das
lea
pop
fcompl
into
flds
xchg
cmp
insb
nop
fstpt
cld
xchg
pop
lss
bound
pushf
stos
cmp
repnz
mov
shlb
lret
in
insb
pop
cmpsb
push
dec
xchg
cwtl
pushf
aam
sbb
cmp
fbld
pop
in
pusha
repz
outsl
xchg
decb
scas
mov
sar
loopne
mov
out
or
in
adc
cli
into
add
notb
and
nop
inc
xchg
xchg
pop
nop
das
int
sbbl
sub
add
jne
add
pusha
mov
shlb
cmpsb
or
cli
mov
lods
push
add
ljmp
mov
flds
fmul
xor
push
adc
inc
out
xor
jg
jno
cmc
sub
jecxz
pop
pop
mov
xchg
mov
add
movsl
sti
bound
je
jns
aam
mov
adc
sbb
inc
adc
cmpsb
insl
pop
call
scas
and
adc
ret
insb
push
and
les
addl
les
inc
pop
icebp
mov
nop
ret
pusha
mov
dec
sbb
fbstp
mov
in
pop
push
push
neg
sarl
inc
dec
rcll
push
inc
out
scas
add
fstp
add
insl
stos
fimull
insb
shlb
inc
mov
in
in
push
add
inc
pushf
mov
ja
call
sti
test
pop
sub
aad
insl
test
dec
push
test
loope
jne
shrl
push
imul
pop
aam
mov
lea
test
fistpll
lret
adc
mov
dec
in
mov
aaa
popl
icebp
jns
push
cmp
mov
and
mov
repnz
flds
xor
popa
leave
mul
icebp
cli
xlat
push
jge
jge
es
pushf
mov
push
cwtl
sbb
xlat
aaa
stc
popf
cmc
in
insb
icebp
repnz
out
outsl
movsl
xchg
and
inc
mov
mov
scas
fwait
dec
and
scas
pop
test
cmp
shrl
jmp
rcrb
mov
and
stos
lcall
gs
jbe
je
and
cmc
push
iret
pushf
mov
movsl
mov
iret
xchg
mov
jmp
test
test
ds
sti
xchg
sub
inc
pop
movsl
les
mov
mov
sti
push
je
sub
or
or
push
dec
inc
push
lret
mov
imul
pop
mov
stos
mov
adc
aas
imul
or
ret
into
cmpl
cmp
add
adc
push
ret
nop
in
dec
push
sub
fidivl
in
push
pop
stos
adc
jecxz
lahf
pop
test
imul
test
or
daa
push
jp
xchg
dec
cs
out
insl
sub
push
shll
sbbb
or
pop
call
jmp
aas
push
sub
enter
cmp
in
stc
jno
pop
dec
pop
outsb
xor
fidivrs
test
call
popf
js
ret
xor
cs
cmp
xchg
fwait
push
scas
dec
mov
xor
jp
inc
lret
loop
push
sarl
xor
push
rclb
sarl
lret
fisttpll
insb
addr16
iret
jp
scas
fldt
cwtl
test
cmp
or
nop
push
add
jae
sub
cmp
xchg
xchg
jmp
xor
loop
push
cmpsl
lahf
mov
add
xchg
test
mov
or
fcomps
or
in
add
sti
push
mov
jb
cmpsb
or
pop
lahf
cli
shrl
mov
cwtl
pop
loope
mov
dec
shll
or
fs
lret
and
js
jle
jno
das
adc
xchg
daa
dec
rolb
insl
cwtl
add
inc
mov
push
xlat
subl
aas
notl
and
data16
add
xchg
xor
aam
in
jae
jmp
scas
inc
jle
jmp
dec
mov
stos
stos
jle
fildl
mov
cs
push
mov
into
push
hlt
pop
sti
pop
loop
icebp
inc
or
pop
out
mov
jmp
test
in
mov
int
sub
stc
inc
fwait
jmp
dec
into
filds
imul
cmp
mov
and
je
aad
popf
cmpsb
sar
pop
lret
adc
or
pop
sahf
push
mov
filds
lcall
cltd
push
fcmovu
out
or
xor
fidivs
sbb
or
mov
add
mov
aam
inc
jnp
lret
pop
into
mov
scas
jae,pn
xchg
xchg
test
jns
dec
cltd
mov
stos
add
jns
out
in
adc
mov
add
cmpsl
mov
push
xor
sub
sbb
jae
jne
add
int
inc
and
push
adc
std
sbb
cwtl
fnstcw
lods
jo
mov
stc
test
out
mov
cmp
sub
jg
out
flds
dec
xchg
pop
inc
xlat
pushf
and
adc
sbb
jns
into
push
sub
xchg
xlat
cltd
or
adc
jae
cmp
mov
xor
mov
xor
test
out
js
mov
jmp
repnz
inc
in
or
cmc
cmp
ljmp
test
pop
jle
mov
lret
lcall
int
xchg
add
imulb
cmpsl
fwait
mov
and
lcall
loope
lds
imul
rcll
cmp
mov
add
jl
mov
fidivrs
jbe
mov
fsubrs
int
or
jg
jb
mov
jle
cmp
or
popf
pop
mov
je
lods
dec
icebp
rclb
push
out
lret
lods
test
jp
mov
cmpb
mov
dec
xor
imul
mov
fcompl
jmp
mov
push
test
push
sbb
fdivrs
orb
xor
and
add
adc
repnz
lahf
mov
jecxz
cmpsb
and
mov
jnp
fidivrs
stos
and
sbb
cmp
adc
data16
js
cmpsl
fadd
sub
mov
aam
xor
mov
dec
ret
sbb
lahf
dec
jmp
mov
add
add
jbe
enter
push
ror
test
mov
in
pop
sbb
lcall
xchg
dec
movsl
icebp
mov
xor
mov
inc
test
push
lahf
sub
repz
shrb
sub
push
pop
cltd
repz
into
add
movsb
in
scas
notb
fmull
cld
xchg
and
and
sti
rolb
cmpl
cltd
push
cmpsl
xchg
loop
lods
clc
sbb
cmpsl
popf
push
push
pop
mov
push
out
loope
fs
notrack
xor
xchg
mov
out
push
add
jb
icebp
push
mov
and
mov
dec
jne
dec
push
cmpsl
arpl
pop
add
outsb
inc
push
xor
push
xchg
mov
sbb
repz
ret
pop
js
les
test
mov
test
sub
push
adc
and
push
pop
ja
mov
ljmp
out
add
adc
dec
cli
in
repz
mov
sub
ds
xor
cs
xor
lock
adc
mov
adc
movsl
xchg
icebp
in
outsb
ficomps
test
outsl
aad
pop
pop
mov
inc
jle
add
xchg
sbb
push
mov
cmp
in
ror
xlat
and
je
mov
dec
mov
out
sbb
or
add
js
jecxz
cltd
inc
mov
sarb
adc
mulb
adc
mov
data16
cwtl
out
mov
lock
mov
faddl
enter
rcl
int3
add
test
jb
lret
dec
icebp
outsl
out
je
lds
sbb
or
movsl
dec
mov
jo
and
or
rcrb
out
jle
loope
sbb
cmpsl
sahf
mov
mov
and
fnstsw
inc
sbb
jle
inc
cmp
repnz
cmp
xchg
punpckhwd
loope
std
mov
adc
jae
lret
in
fcoms
adc
mov
cmpsb
test
arpl
jno
pop
andl
xchg
cwtl
push
push
outsb
iret
dec
cmp
arpl
movl
cmp
inc
xchg
lret
mov
cmp
and
jne
mov
test
clc
cmpsl
or
pop
js
les
sub
lods
cwtl
cmp
sub
lock
test
push
push
pop
dec
sub
aaa
mov
add
xor
xchg
cmp
dec
stc
pop
push
mov
inc
push
xor
pop
add
call
jb
movsb
or
outsl
mov
fsubs
inc
out
dec
clc
in
jmp
ret
lods
dec
aam
add
inc
inc
cmpsl
sub
jl
mov
lds
and
mov
dec
lods
mov
adc
repz
and
jo
stc
loop
ret
mov
pop
adc
in
jl
mov
in
dec
iret
xchg
sub
mov
daa
stc
push
fstl
inc
push
pop
or
or
jge
cmpsl
shrw
xchg
shll
leave
pop
cmpsb
insl
nop
and
push
iret
xchg
jno
dec
je
repnz
test
test
inc
notb
js
jb
mov
stc
inc
or
cmc
inc
ds
adc
push
mov
inc
das
imul
push
outsl
xlat
test
out
addr16
call
inc
jmp
xchg
cmpsb
fcomps
inc
neg
mov
xlat
dec
mov
push
push
stc
bound
lds
jmp
mov
adc
enter
loope
mov
popa
jns
cmp
mov
aam
push
cmpsl
fsubrl
add
mov
sub
rcrb
adc
xchg
test
xchg
ja
inc
jbe
imul
incb
sub
inc
fs
xlat
add
jle
xor
test
inc
jmp
es
outsb
jno
scas
adc
iret
add
xor
dec
rcll
mov
pop
fmull
repnz
xor
mov
add
xor
push
xor
pop
mov
inc
xchg
ljmp
or
in
mov
push
and
inc
inc
stos
push
es
xor
rcr
and
in
mov
imul
lock
aam
adc
cld
mov
das
pop
xlat
xchg
ds
outsl
mov
and
pop
leave
jbe
lret
push
ficoms
mov
leave
sub
out
hlt
fisttpl
sbb
pop
hlt
sbb
cli
jecxz
xchg
popa
js
sbb
mov
adc
dec
add
push
add
inc
fildll
jns
inc
or
adc
mov
push
xor
mov
aam
out
out
or
insl
jg
cmpb
in
rorl
fcoml
test
test
or
pop
pop
push
cld
dec
insl
jns
icebp
mov
xor
and
adc
addb
or
push
push
stos
lods
les
icebp
stos
jno
movsb
add
lret
mov
rcrl
inc
imul
xchg
adcb
mov
inc
aam
lahf
adc
pop
pop
jb
es
add
xchg
and
leave
add
jnp
inc
fidivs
push
xor
and
frstor
cmp
push
popa
pop
sub
jmp
mov
push
or
and
shl
test
push
mov
xor
pop
pop
repz
scas
push
xchg
das
pop
dec
das
test
cwtl
pop
sbb
jle
je
dec
xlat
push
fucomi
sbb
mov
repz
inc
sti
jge
mov
rcrb
out
sbb
sub
sub
daa
mov
fnstenv
pop
and
xchg
cs
xor
in
cli
fcmovu
and
pop
mov
int3
mov
movsl
ss
scas
lahf
jl
cld
xor
or
cmpl
sub
ja
cmpsl
jno
and
cs
xchg
push
dec
dec
lcall
xor
xchg
push
jecxz
mov
cs
leave
stos
dec
fwait
movsl
jecxz
mov
and
sbb
mov
movsl
mov
pusha
fmuls
js
dec
je
ret
and
jg
adc
in
sar
and
int3
jle
int
jae
add
scas
add
imull
sub
loopne
jbe
pushl
test
inc
inc
ja
aaa
xchg
dec
scas
in
aam
inc
mov
jmp
loope
cmp
lock
scas
test
lahf
push
add
and
push
mov
ret
divl
push
add
jo
fcoml
mov
movsl
dec
loopne
or
cmp
int3
addl
in
mov
dec
movsl
fucomip
or
add
outsb
in
ljmp
dec
push
pop
pop
sub
mov
or
outsl
shl
imul
lds
cmc
pusha
mov
inc
hlt
sbb
and
and
int
sti
and
push
pop
cmp
icebp
jp
cwtl
sti
divb
pop
adc
ljmp
add
jns
push
mov
sub
test
js
cmp
outsb
dec
dec
ret
push
or
in
and
xlat
mov
loope
pop
je
sbb
leave
repz
adc
sahf
sbb
aad
mov
es
in
push
cli
cmpsl
ret
pop
hlt
mov
arpl
inc
divl
sub
mov
fists
mov
daa
mov
sub
out
mov
mov
ret
dec
mov
add
dec
and
dec
ret
iret
or
inc
cmp
out
jp
jecxz
sub
shrb
xor
ja
stos
pop
loop
adc
mov
shl
push
out
popa
pop
cmpsb
mov
adc
in
icebp
adc
loop
pop
repz
into
pop
cmp
sbb
lock
push
mov
lods
out
mov
add
iret
hlt
mov
stos
loopne
cs
or
adc
mov
pop
stos
inc
stos
and
cs
cmpsb
out
imul
sbb
mov
sub
mov
mov
dec
and
movsl
sti
cli
mov
sbb
jecxz
mov
inc
mov
pusha
lret
cld
stos
in
sbb
dec
mov
jne
movsb
jg
xchg
arpl
sub
lods
fistpl
cmpsb
cmp
inc
add
or
push
jge
test
in
inc
mov
sub
pop
jp
shlb
cs
push
pop
xlat
pop
jmp
aad
icebp
popf
pop
pop
xchg
dec
mov
int
lea
mov
test
xor
push
or
lcall
inc
je
fisubrl
dec
cltd
jno
call
pop
xchg
enter
and
adc
pop
lds
sbb
pop
test
les
jno
push
cli
je
push
xor
and
lea
inc
fbstp
repz
adcb
ja
inc
jae
and
test
in
mov
mov
jmp
push
add
jbe
lcall
into
xor
loop
sbb
push
bound
cwtl
dec
cwtl
fdiv
repz
scas
ja
enter
mov
adc
pop
sub
inc
add
add
xchg
enter
pop
and
insl
cmpb
mov
pop
add
jecxz
shl
rcrb
bsr
xor
rcll
xchg
jle
add
insl
fs
pop
clc
out
mov
out
cmp
das
add
adc
xchg
outsb
mov
out
scas
dec
js
jmp
add
pop
ja
rcrl
or
cmpsb
adcb
sub
mov
dec
xorl
push
cmp
mov
lret
hlt
pop
movsb
in
xor
fisubrl
mov
js
mov
push
and
sub
hlt
test
lcall
and
dec
xor
leave
mov
sub
sub
dec
pop
xchg
sub
jnp
jg
jl
in
mov
rorl
push
outsb
xlat
xor
sub
test
addb
jecxz
mov
mov
cltd
jbe
cmp
jae
sbb
stc
jnp
and
sbb
mov
les
sub
fucomp
sbb
dec
iret
outsl
aaa
pop
in
aaa
xchg
or
sbb
add
repnz
lods
aad
jae
nop
pop
jl
pop
repz
push
sub
shrl
and
hlt
stos
cld
arpl
or
adc
xor
add
and
push
scas
ficoml
fldt
aad
imul
std
cmp
subb
push
into
icebp
sbb
andb
mov
cltd
inc
add
fcmovu
clc
push
cmp
push
pop
jbe
sbb
cmp
jae
adc
leave
stos
sarb
repnz
and
std
scas
das
dec
mov
inc
push
mov
push
jbe
mov
out
sbb
adc
push
sbb
add
sbb
sub
jl
cld
inc
push
je
xchg
cs
and
push
outsl
adc
mov
fcoml
mov
sbb
pop
xlat
and
mov
xchg
or
jmp
shrl
fcomp
sbb
loope
xchg
jecxz
add
popf
rclb
dec
pop
popa
cmc
stos
in
pop
cmp
gs
imul
add
mov
dec
xchg
pop
repnz
out
push
dec
push
mov
ret
add
out
stos
out
xor
es
xchg
hlt
stos
xchg
xchg
adc
lods
sbb
pop
push
rorb
push
pop
adc
popf
pop
das
xor
in
sbb
subb
xor
outsl
and
test
push
pop
popf
cmp
lock
js
mov
in
cmp
mov
cmpsl
and
xor
lcall
push
adc
xchg
ja
mov
pop
jne
xor
dec
std
lret
lods
pop
cli
cs
les
inc
push
leave
mov
and
rcr
xchg
les
pop
in
sbb
aaa
xlat
lock
dec
jne
jl
insb
mov
int
dec
std
in
inc
xchg
xchg
lods
in
testb
sbb
scas
jmp
dec
jne
std
xchg
ficompl
sub
dec
fdivl
add
dec
aam
push
push
add
popf
push
jecxz
in
sbb
lods
stos
imul
sub
inc
jp
mov
pop
mov
ljmp
fs
jge
cmp
cmp
jmp
fldl
jmp
ficomps
dec
cmpsb
or
pop
outsl
xlat
or
push
leave
repz
jp
lret
jns
sub
hlt
lds
addr16
xorb
pop
es
repz
cwtl
sbb
fprem1
mov
sti
insb
movsl
xor
push
ds
es
in
sahf
imul
mov
add
lcall
addr16
mov
lds
adc
ficoml
idivl
mov
mov
jno
outsb
ljmp
mov
stos
and
lock
aas
cli
push
in
test
mov
or
scas
jb
and
daa
jp
mov
mov
out
pop
mov
in
mov
rcrb
iret
inc
add
sti
rcrl
addb
fsts
in
adc
ljmp
das
jnp
xlat
mov
cmp
not
lea
popa
fistps
arpl
or
cmp
pop
arpl
xchg
filds
push
jne
push
fnstsw
xchg
dec
inc
mov
or
icebp
test
aad
push
lret
jge
push
cwtl
fwait
pop
sub
adc
ret
push
mov
repz
sub
in
add
mov
int
jo
imul
adc
cltd
mov
imul
push
sbb
xlat
pop
push
dec
cmp
jae
les
stos
idiv
pop
or
push
push
and
push
lar
pop
out
popf
cli
cmp
shrb
or
mov
js
cmp
call
es
mov
xchg
jge
incl
aam
mov
aas
sahf
jne
jg
push
pop
mov
ljmp
sub
pushl
and
adc
sub
fwait
xor
jbe
out
into
mov
andl
jecxz
mov
hlt
jno
pop
lcall
jmp
cltd
cli
cmp
add
dec
les
mov
ja
out
mov
je
mov
popf
and
and
sahf
cld
fcoml
xchg
adc
push
sub
iret
scas
pop
outsl
subl
das
and
cmp
ret
dec
xor
mov
mov
lret
gs
inc
test
aas
sbb
cli
xchg
cmpsb
sbb
sti
and
mov
xor
pushf
and
insb
cmpsb
push
js
and
xchg
dec
xchg
pop
push
in
cld
push
cli
cwtl
ds
and
mov
mov
pop
xchg
dec
arpl
or
jl
mov
xlat
mov
mov
aas
test
jge
jae
pop
mov
push
fnstsw
add
loope
test
enter
xor
pop
push
pushf
xor
jnp
daa
xor
stos
lods
sahf
cmp
sahf
lcallw
lcall
clc
fs
cli
mov
outsb
stc
enter
dec
dec
cmp
mov
or
xor
decl
mov
sbb
xchg
pop
cltd
test
movsb
movb
dec
cmp
inc
addb
jg
rorl
sahf
mov
sub
fldenv
xchg
cmp
xlat
dec
test
xchg
xchg
dec
enter
loopne
mov
jb
mov
jp
iret
inc
xchg
pushf
fnstcw
adc
in
push
inc
ret
mov
sbb
sbb
stc
dec
sbb
jp
mov
stos
sub
dec
pop
cmp
jbe
stos
jle
cmp
cmp
push
cmpsb
inc
mov
repz
test
into
das
cmp
lret
dec
jp
jnp
mov
or
mov
int
push
mov
ja
xchg
jle
push
sbb
cmp
and
sbb
fsincos
sti
mov
pop
shlb
test
or
fwait
lret
scas
andl
int
pop
repnz
push
dec
inc
out
out
hlt
pop
test
fadds
gs
leave
and
xor
lret
fcoml
rorl
xor
dec
inc
xchg
fidivs
aaa
fstl
dec
outsb
push
xor
ss
scas
aaa
jno
notl
dec
fucomip
xor
sbb
shll
int3
in
sbb
push
and
jmp
lods
xchg
sbb
jbe
cld
dec
addr16
pop
notl
xor
pop
jp
cmpsl
mov
lock
mov
leave
adc
iret
adc
inc
and
push
push
imul
xchg
cltd
xor
lahf
hlt
xor
in
jge
pop
cmpl
mov
sub
shlb
aaa
popa
cs
test
xchg
arpl
in
sub
or
adc
dec
sbb
cmp
out
or
mov
es
jecxz
jbe
push
movsl
xchg
outsb
xchg
xor
mull
dec
flds
lret
lds
add
mov
outsl
mov
add
test
mov
andb
pop
mov
popa
loopne
adc
icebp
push
xchg
sub
out
ja
mov
aaa
pmullw
mov
or
clc
sbb
mov
pop
sbb
scas
add
shrb
inc
shrb
ja
arpl
and
faddl
and
xchg
mov
aaa
cld
lret
outsl
lea
sub
shlb
pop
inc
pop
or
pop
or
xchg
mov
pop
mov
pusha
ljmp
mov
pop
enter
adc
add
hlt
out
lds
inc
jp
nop
inc
pop
divl
xchg
xor
std
fs
clc
shlb
fstl
xor
lret
sarb
in
push
adc
negb
mov
fwait
jmp
jnp
or
sbb
cmp
cmp
mov
pusha
xor
adc
les
jbe
ds
and
xor
xchg
jno
and
xchg
dec
lret
mov
loope
adc
sbb
aaa
add
loop
push
aad
jbe
pop
in
and
jl
jle
xchg
jp
insl
inc
or
lock
xchg
fidivrs
xchg
push
or
push
xor
adc
pop
into
xlat
stos
and
shl
pop
insl
sub
jae
scas
out
leave
negl
mov
rcrb
addr16
add
mov
add
filds
xchg
mov
scas
and
fadd
cli
int3
mov
outsb
lods
jnp
push
jnp
pushf
cwtl
dec
xchg
outsl
call
adc
addb
test
jp
outsl
and
jge
mov
jbe
mov
adc
sub
push
arpl
mov
testb
ljmp
lea
insb
mov
outsb
in
lret
sahf
rclb
push
es
popf
or
inc
inc
mov
daa
jno
int3
cmp
fldln2
xor
mov
push
inc
lcall
pop
test
mov
loopne
and
adc
movsl
and
shlb
shrb
aad
jno
or
ja
jo
pop
ja
pop
repnz
ret
shrl
push
mov
and
mov
data16
mov
sbb
xchg
into
dec
inc
or
pop
sub
pop
movsl
pop
pushf
in
xor
xor
es
icebp
inc
outsl
or
outsb
sbb
testb
add
xor
sbb
dec
dec
popa
lods
fcmove
push
adc
xor
push
sub
testl
divb
mov
jle
pop
int3
mov
gs
push
xorb
sub
ret
in
in
stc
mov
outsb
push
mov
or
mov
cmpsb
jbe
xlat
movsl
cmp
fs
loopne
mov
mov
ret
popf
mov
add
sbb
sbb
jo
cmpsb
sbb
inc
mov
mov
mov
out
fs
dec
lea
out
aas
orl
flds
or
push
int3
stos
inc
scas
arpl
jmp
xchg
sbb
or
lea
insb
dec
add
rolb
aam
mov
mov
pop
pop
cmp
sbb
dec
or
in
xor
push
push
inc
push
push
daa
push
gs
pop
daa
fs
arpl
fisttps
movsb
outsb
movsl
mov
pop
adc
roll
pop
rcl
fdivrs
fdivr
scas
push
push
out
jns
bsr
pop
sbb
dec
out
daa
push
pop
mov
sub
mov
movsb
hlt
imull
add
jne
jle
jno
push
push
ss
movsl
int3
dec
adc
sbb
sub
leave
and
imul
in
mov
cmpsb
xchg
ljmp
dec
lea
in
pusha
sub
mov
adc
repz
mov
mov
repnz
popa
push
nop
cmpsb
cmpsb
lds
push
cmp
inc
push
sahf
out
jle
lods
mov
jbe
mov
out
sahf
data16
test
out
jl
or
cld
jecxz
jae
sbb
loop
push
pop
add
repz
sti
in
std
mov
je
mov
cli
cmp
add
jmp
pop
inc
cmp
daa
fisubrl
iret
xorl
mov
rcl
fwait
ljmp
sbbl
jb
xchg
or
mov
out
push
and
xchg
dec
pop
inc
push
aaa
subb
aaa
inc
scas
cmpl
or
icebp
fsubl
sbb
test
scas
mov
push
sbb
ljmp
jae
inc
enter
jno
dec
rol
mov
into
mov
lahf
mov
and
int
mov
in
jo,pt
mov
add
cwtl
jns
mov
cltd
sbb
loope
cmc
xchg
pop
add
pop
repz
xor
int
push
outsl
fldenv
iret
dec
and
push
je
mov
xor
xor
into
mov
call
add
add
mov
subl
lahf
mov
push
lcall
je
jns
popa
mov
ret
incb
and
lret
test
cmp
stc
xor
jecxz
je
enter
mov
pusha
stos
jp
cli
jle
jle
stos
cmp
aam
inc
add
inc
out
fdivs
call
jae
inc
jge
int
mov
mov
pop
dec
add
movsl
mov
loop
push
pop
enter
sub
fwait
add
fistpl
pop
mov
out
mov
mov
jle
test
cmp
xor
mov
push
int
mov
adc
testl
add
popa
jns
popa
adc
repnz
lahf
enter
xchg
or
inc
push
je
in
inc
mov
inc
jl
pop
inc
jl
movsb
mov
inc
lock
ja
add
loopne
jg
pop
clc
orb
cmp
sub
fmulp
add
sbb
cmc
push
arpl
in
nop
mov
inc
ja
mov
fadds
movsl
ret
inc
add
cmp
nop
add
das
mov
out
jo
mulb
jmp
push
in
jae
pop
jle
sahf
ljmp
test
or
rclb
cmc
sub
mov
aaa
fnstsw
scas
fcmovne
mov
inc
nop
mov
pop
inc
int3
jbe
cmp
mov
mov
cmp
das
in
sub
int
jg
push
ss
push
sub
sbb
jl
mov
aam
pop
inc
jg
and
push
ficoms
xchg
fildl
xchg
pop
pop
scas
rolb
setae
in
add
mov
aaa
dec
cmc
ficoml
pop
clc
lret
add
ret
aad
or
adc
mov
nop
into
inc
mov
xchg
cmpl
stos
lds
xor
shrl
fcoml
add
rcrb
movsb
add
iret
addr16
stos
mov
sahf
mov
sub
test
jp
dec
fildll
mov
iret
and
dec
popa
into
loope
adc
pop
dec
scas
inc
in
insb
lea
sub
jnp
xor
mov
popa
jl
outsb
mov
jle
leave
rcl
pop
pop
jmp
add
add
mov
adc
adc
fxch
jg
scas
aad
mov
xlat
jbe
and
cmpsl
clc
stos
test
mov
jg
jne
ljmp
or
mov
push
jmp
mov
or
enter
data16
dec
or
adc
pop
push
jmp
xchg
mov
jl
jmp
cmpsb
push
mov
enter
mov
add
xor
xchg
inc
std
mov
and
imul
jne
sar
nopl
shlb
mov
out
xorb
jo
and
adc
subl
pushf
cmpsb
in
xor
out
call
push
pusha
pop
mov
cmp
mov
mulb
pop
test
enter
in
scas
cmc
sar
bound
mov
push
or
sub
cli
in
inc
and
dec
adc
xor
sbb
fadds
push
sub
or
lea
inc
iret
mull
in
loope
hlt
test
mov
cmp
and
push
xorb
decl
dec
orl
or
jle
jp
push
sahf
cmpsb
cmp
jnp
sbb
jmp
sbb
cmc
xor
es
insl
xlat
enter
stos
pop
repnz
cmp
lock
int3
and
in
enter
stc
lds
nop
enter
or
mov
jg
pop
out
xor
pop
adc
jb
movsb
pop
xorb
pop
sbb
divl
and
movsb
cmp
test
dec
xor
dec
adc
mov
aam
fstpl
das
pop
sbb
cmp
cmp
sbb
mov
addl
aam
cmpl
push
lods
std
push
mov
adc
adc
xor
cmp
outsl
adc
push
les
push
jne
push
roll
shrl
fimull
movsb
and
sbb
cli
aas
add
add
dec
repz
push
add
aam
rorb
add
xchg
stc
pop
nop
xchg
xchg
ds
mov
jns
arpl
pop
lret
mov
scas
pop
sahf
enter
je
insb
dec
int
outsb
sbb
push
xor
jo
or
add
daa
lods
sub
push
repz
loope
sbb
cmp
cmp
rclb
push
idivb
mov
xchg
imul
pushf
lret
pop
and
out
fst
rorb
xchg
mov
lock
xor
sbb
pushf
pop
mov
cmc
adc
inc
das
xchg
movsl
sub
inc
mov
sarb
pop
mov
jae
ss
imul
add
lret
movsb
add
ret
pop
in
movsl
push
mov
ljmp
sub
xchg
jnp
leave
fadds
mov
jle
shrb
cltd
or
mov
cmp
mov
loope
push
jl
dec
pop
lea
mov
lds
push
std
pop
xchg
cmp
bound
aam
xor
lods
stc
in
adc
lcall
mov
cmpsl
dec
dec
fimuls
sub
mov
mov
xor
mov
dec
cltd
rolb
mov
inc
push
rolb
lock
call
pop
xor
daa
jecxz
aas
and
lret
push
popa
mov
fnstsw
adc
dec
sbb
sbbl
push
cmp
jno
daa
lahf
loopne
or
mov
cmc
mov
pop
gs
scas
outsl
push
sbbb
jb
sahf
dec
jb
jmp
and
cmp
test
ljmp
sub
cmpsl
dec
aam
xchg
push
pop
insb
and
loopne
inc
and
imul
dec
sub
aas
movsl
lcall
sub
outsb
pop
fidivrs
pop
sar
mov
daa
mov
cmpsl
or
jp
out
dec
fildll
dec
cmp
inc
les
insl
ja
inc
lods
js
adc
outsl
shlb
sahf
cld
shll
mov
adc
push
lret
lods
xchg
addb
sbb
jge
push
mov
mov
daa
imul
cs
call
movsl
push
lcall
inc
pushf
repz
pop
push
inc
movsl
xor
dec
xchg
test
mov
xorb
pop
in
pop
xchg
or
imul
movsb
push
sbb
pusha
mov
mov
sbb
pop
fstl
xor
add
sti
push
cmp
jns
cmc
xchg
adc
jmp
push
mov
cli
gs
push
xchg
ljmp
dec
rcr
sbb
jae
lret
fistpll
or
cltd
jg
pop
inc
push
adc
ss
mov
das
aaa
je
stc
in
cmp
popa
fstpl
aad
add
dec
loope
xor
shll
xor
or
adc
jmp
adc
imul
sub
out
jge
sub
cmp
jmp
outsl
orl
pop
test
dec
adc
add
push
mov
xor
pop
xor
dec
lds
imul
stos
cltd
and
cmp
dec
iret
les
push
xor
or
pop
xchg
das
aam
pusha
sahf
stos
dec
repz
je
imul
cltd
xchg
std
rolb
pusha
in
ljmp
outsl
ret
jecxz
mov
popa
popa
dec
lret
outsl
push
in
xlat
mov
mov
adc
dec
int
mov
mov
push
in
xchg
lahf
mov
jae
lret
mov
jmp
xchg
jecxz
fdivp
popf
repnz
sbb
mov
rclb
outsb
pop
lahf
pusha
enter
add
cltd
push
je
loop
xchg
es
sbb
and
xchg
out
sub
push
mov
faddl
dec
jnp
mov
divl
cli
or
pop
mov
je
or
mov
arpl
loope
sub
inc
dec
ficoms
jmp
ret
mov
cmp
pushf
cltd
lds
loopne
push
mov
push
push
repz
fsubp
lahf
dec
pop
cmp
test
lahf
cs
lcall
mov
repnz
imulb
mov
outsl
aaa
pop
nop
ljmp
push
and
mov
sub
dec
popf
fidivs
in
test
jne
test
mov
daa
mov
out
ss
imul
and
test
mov
pop
shll
mov
in
push
add
scas
sti
push
fldcw
mov
clc
dec
cmp
sbb
arpl
add
mov
stc
push
pop
push
cmp
cmp
cltd
sub
push
mov
repnz
mov
adc
icebp
inc
enter
xchg
sub
in
jo
adc
or
and
mov
add
sbb
mov
sbb
dec
outsb
sbbl
or
adc
lods
js
out
push
or
into
pushf
jecxz
sub
scas
aaa
shlb
addr16
mov
pop
in
mov
dec
pop
sub
cwtl
jns
es
inc
dec
and
shr
cmpsb
loopne
jnp
testb
nop
fdiv
insl
scas
das
negb
repz
adc
and
scas
les
into
jp
loop
negb
inc
ret
pop
adc
scas
test
outsl
test
jns
push
inc
ljmp
imul
jns
cmp
imul
fadds
dec
cmc
lret
adc
xchg
repnz
inc
inc
xchg
ret
test
ret
sbb
cmpsl
xchg
clc
mov
mov
pop
test
mov
je
and
jmp
add
arpl
fisttps
outsb
jp
sbb
aas
sub
mov
lds
mulb
push
rcrl
mov
scas
movsb
dec
in
mov
pop
xchg
mov
outsb
inc
inc
push
loopnew,pn
cmpsb
gs
xor
cmc
pop
insb
cmp
push
cmpsl
sbb
fstpt
jnp
out
dec
sbb
dec
das
jp
xchg
xor
sbb
or
outsb
aam
cmp
outsb
mov
loop
aam
ret
xchg
mov
fucom
push
jmp
test
mov
add
push
xor
rcrl
outsb
mov
addw
testl
xchg
leave
xchg
xor
xchg
dec
cmp
mov
xor
add
sarl
hlt
xor
inc
fs
icebp
or
stc
outsl
push
jns
vmulpd
and
repnz
test
outsb
pop
in
xchg
out
mov
outsl
cmp
cmp
fcom
jp
gs
imul
gs
jmp
jno
test
cld
adc
mov
stc
mov
les
shrb
pop
scas
xchg
inc
xchg
adc
fildll
aas
cmc
jne
lcall
jg
and
ret
scas
inc
inc
or
cmp
jne
mov
inc
loopne
idivb
loopne
outsb
std
mov
mov
dec
and
mov
sub
add
dec
jp
dec
daa
dec
sbbl
in
dec
sbbb
xlat
pop
insb
stos
sbb
and
adc
push
scas
pop
ja
popa
mov
or
and
sbb
sub
sbb
jno
js
mov
xlat
repnz
push
push
jl
mov
jnp
push
mov
loop
int
inc
dec
xchg
iret
sar
pop
inc
and
sub
push
xor
and
jnp
sbb
cmc
mov
pop
push
mov
sbb
pop
adc
fcom
adc
xor
pusha
add
sub
pop
pop
test
push
in
push
xor
test
adc
sbb
mov
gs
inc
sbb
cmp
push
jo
pusha
jb
pop
adc
cmp
or
jl
push
or
fldpi
ffree
in
mov
inc
scas
sti
xchg
ss
shl
out
push
xorl
rcrb
lods
scas
inc
add
push
in
shll
xchg
xor
cmp
stc
lods
inc
push
repz
stos
outsl
jae
cmp
cli
notb
cmp
inc
or
inc
nop
jle
not
ret
or
mov
fisubl
cli
aaa
sub
out
inc
push
mov
addr16
mov
or
or
in
sbb
dec
add
jmp
leave
clc
cltd
dec
ds
or
ljmp
push
xor
ret
outsl
sub
aaa
push
js
fadd
xlat
pop
mov
jno
inc
aas
in
mov
ss
in
int3
stos
push
fsubrp
xchg
sarb
shlb
cmp
inc
cmp
outsb
repz
dec
in
int
mov
mov
js
clc
pop
shlb
cwtl
scas
js
sbb
inc
mov
sbb
adc
test
sbb
jp
jl
ja
dec
push
dec
sbb
pop
cli
orb
popa
jle
lea
xchg
scas
push
jp,pt
pushl
loopne
xchg
out
cmpsl
sbb
jecxz
lret
adc
dec
add
les
jo
cmp
shl
jecxz
mov
call
or
pop
call
cmp
cwtl
sub
enter
push
xchg
dec
and
pop
and
fs
or
fstl
inc
pushl
push
sbb
push
dec
lret
stos
in
mulb
pop
jb
mov
inc
cmpsb
push
mov
jbe
adc
mov
dec
imul
jnp
mov
xor
cmp
call
or
subb
sub
sbb
loopne
or
das
in
mov
call
cmp
adc
inc
je
in
movsb
les
cld
push
sbb
cwtl
adc
sbb
sub
sub
fwait
lret
out
dec
cltd
in
jle
adc
into
clc
dec
lds
stos
push
or
inc
push
outsl
or
pop
addr16
xor
push
cli
rorb
dec
mov
stos
nop
mov
fists
cmc
out
lret
scas
sbb
popf
and
and
mov
mov
jnp
dec
sbb
repz
scas
test
pop
bound
adc
push
loopne
rcrl
faddp
cs
rcrl
adc
adc
add
addr16
mov
fisubs
idiv
adc
shl
xchg
sahf
dec
sub
dec
adc
xor
lea
cltd
mov
jns
mov
jae
jl
daa
pop
repz
sbb
xchg
cmp
arpl
add
movsb
int3
adc
iret
lret
xor
cwtl
mov
fcomps
cmp
push
jecxz
push
add
fcompl
xchg
sbb
sub
testb
dec
mov
loop
pop
icebp
fiaddl
ljmp
jne
and
loop
jge
into
lea
sub
cmp
iret
jb
sbb
pop
or
cs
int3
in
lds
loope
inc
mov
cmc
adc
arpl
rcrb
cmpsb
xor
mov
fsub
test
mov
sub
adc
shll
cmpsl
stc
mov
mov
lea
test
mov
jg
roll
add
cmp
xor
sub
xor
mov
pop
jle
jo
xor
fmuls
cmp
out
push
sub
test
mov
imul
lret
lret
movsl
stos
mov
pusha
cmp
or
int
cmpsl
stos
and
xor
pop
mov
xlat
mov
jb
rorb
loopne
scas
test
inc
sub
push
mov
pop
scas
cmpb
test
inc
test
jo
cmc
scas
lcall
popf
addr16
imul
sub
ljmp
or
iret
or
fistpll
xchg
addb
mov
sub
fnsave
xchg
scas
mov
sub
nop
out
rorb
sti
jg
iret
pop
add
mov
jne
fdivs
int3
loope
cmpsl
dec
jae
mov
jns
jo
add
movsl
cld
call
aam
mov
mov
sti
lcall
xchg
addb
cld
push
sbb
mov
xor
es
insl
test
jae
pushf
test
fistps
push
jp
shrb
and
pop
jl
mov
enter
push
mov
loop
inc
loope
add
out
out
stc
ja
xchg
or
fucompp
mov
ds
mov
sbb
in
lods
xor
cli
mov
ljmp
pop
out
and
inc
pushf
inc
subb
leave
jecxz
sbb
push
cltd
fwait
cld
cmpsl
and
out
sbb
and
cmp
int
scas
push
adcl
xchg
jnp
ljmp
and
daa
cli
lds
pop
stos
xchg
sbb
fists
fs
mov
cmpsb
fs
mul
pop
xor
inc
pop
arpl
lea
adc
test
lret
adc
xchg
imul
loope
outsl
push
mov
or
cmp
push
cmpsl
push
and
fcompl
fnstenv
arpl
jge
not
pop
push
or
add
jp
add
aad
lret
mov
mov
inc
mov
ret
push
push
stc
orb
xchg
sbb
pop
lods
and
jecxz
jmp
or
dec
imul
add
mov
repz
sub
pop
lods
jg
enter
jo
cmp
scas
popf
mov
movsl
into
sahf
inc
les
xchg
cs
adc
xorl
push
push
mov
mov
push
and
cmp
adc
jp
fisttps
xchg
pusha
jmp
out
xchg
cmp
je
fsubrl
mov
push
push
repnz
mov
fimuls
and
push
dec
aas
push
or
loop
negb
mov
jbe
xchg
dec
inc
inc
dec
jp
rclb
addl
mov
mov
xor
inc
scas
data16
push
sysret
loopne
add
sbb
gs
pop
push
xchg
mov
dec
cltd
test
divb
xchg
xor
add
rcrb
lds
movsl
call
loopne
clc
or
sub
xchg
in
dec
jno
iret
das
aad
jb
outsl
mov
push
push
push
shlb
lds
adc
xor
xchg
addl
cmp
stos
out
cltd
mov
enter
xchg
inc
lock
mov
push
loopne
mov
cmp
int3
xchg
mov
std
jmp
sub
loope
shll
jl
jne
add
or
daa
push
movsb
rclb
and
push
cmp
mov
fs
pop
pushf
xchg
mov
dec
mov
cmp
mov
fcomps
adc
cmpsl
add
or
test
add
rolb
aas
je
addl
cwtl
decl
sub
in
xchg
aaa
cli
lds
stos
ret
mov
dec
dec
jne
scas
es
popl
sti
cltd
js
cld
jl
sub
rorb
cmc
xor
sbb
iret
jb
pop
movb
std
jmp
jl
stos
cltd
cmpsl
aam
dec
data16
pop
add
nop
jnp
dec
ljmp
adc
rcrb
leave
add
fistl
adc
xor
outsl
xlat
mov
fsts
sbb
push
loopnew
sub
stos
xchg
sarb
push
ffree
dec
cmp
jae
xor
sbb
jb
lods
cli
lahf
add
push
leave
es
testb
mov
pop
cs
jmp
push
xchg
push
and
mov
test
xchg
arpl
adc
divb
xchg
mov
lcall
mov
divl
sarb
push
gs
out
and
xor
xchg
sarl
bound
jge
mov
aaa
aas
xchg
js
sub
jo
pop
xor
in
stos
push
test
push
pop
repz
cmpsl
pusha
jg
addb
or
imul
and
add
add
loope
stos
mov
hlt
xchg
mov
std
push
call
adc
dec
out
xchg
adc
pop
push
imul
fsubs
pop
pusha
cmp
nop
enter
push
xchg
lds
push
enter
roll
arpl
cmpl
mov
scas
xchg
lcall
jmp
fdivs
outsl
shll
insb
add
or
mov
addr16
jne
adc
outsb
sub
mov
leave
popf
fnstenv
dec
push
xor
xor
or
mov
scas
and
jns
into
sbb
dec
cmp
dec
push
inc
xor
scas
push
jnp
jne
sti
fs
and
mov
js
jge
test
jp
mov
fcmovne
inc
int
xor
subl
cld
filds
out
xchg
sbbb
xor
mov
testl
pushf
sbb
out
inc
inc
call
shlb
ljmp
pop
add
and
inc
add
inc
int
dec
and
xor
dec
cwtl
inc
clc
imul
xchg
hlt
sub
shl
jle
in
sahf
arpl
dec
push
shrb
rol
dec
pop
daa
adc
hlt
ljmp
mov
test
fsubs
loopne
mov
pop
xchg
inc
mov
in
dec
stos
ss
jl
adc
sbb
push
sahf
test
dec
cmpsl
out
scas
adc
pop
out
xchg
xchg
lea
sbb
adc
sub
mov
aas
sub
pop
pusha
das
sub
inc
loop
cmp
sahf
mov
into
push
ftst
mov
mov
iret
fwait
neg
lods
fisubrl
cmp
lret
loope
cmc
or
repz
push
add
push
sbb
loopne
cld
inc
push
fstps
lret
shll
add
lea
cmp
insb
data16
adcb
jge
push
adc
jecxz
and
jmp
loop
mov
mov
rolb
jbe
add
lds
pop
pop
sub
enter
rcr
daa
daa
dec
enter
scas
notl
cmp
mov
std
sbb
addr16
mov
push
cmp
jb
xchg
inc
or
push
fwait
add
fdivrs
mov
jo
adc
push
cmp
fcmovnb
push
add
test
ljmp
enter
adc
gs
inc
pop
ss
pusha
lcall
lods
jne
cmp
pop
movsl
sbb
mov
js
iret
sub
in
pop
pop
stc
lcall
loope
mov
mov
in
xchg
and
in
test
adc
xor
gs
mov
cli
dec
out
jle
cltd
std
outsl
lock
shr
pop
out
sbb
lds
or
adc
push
das
out
jo
pop
add
mov
dec
into
in
mov
inc
or
cmp
push
std
scas
dec
mov
xchg
push
sub
mov
cmpsb
mov
aam
xchg
xchg
xor
ljmp
cs
mov
es
stc
cs
mov
mov
xchg
ds
fadd
add
xchg
jg
movsl
std
call
mov
jmp
fs
in
jecxz
push
dec
shl
or
fdivrs
sub
fisubs
andl
lock
sbb
xor
mov
testb
ss
xchg
jae
setno
inc
imul
ja
xchg
mov
mov
ljmp
aas
gs
aam
in
movsl
shll
loopne
lcall
and
dec
adc
scas
aas
jne
inc
cli
subl
lds
in
ficompl
dec
dec
je
add
mov
push
addr16
popf
popa
lret
incb
cmpsl
ret
shlb
in
push
jg
leave
sbbl
call
mov
outsb
jb
mov
imul
or
push
mov
lahf
aam
xchg
add
mov
aaa
out
push
xor
sub
rcl
or
inc
cwtd
imul
lret
mov
push
fidivs
xor
and
sbb
inc
jb
shll
movsl
ret
lea
add
pop
lods
mov
lcall
pop
sbb
add
addr16
sub
sub
ret
stos
and
sub
lods
ljmp
icebp
test
mov
cmp
xor
inc
fldt
fidivl
test
subb
jno
hlt
push
ret
sub
push
insb
inc
xor
sar
xor
orb
push
fs
xchg
fwait
into
ret
dec
repnz
repz
bound
and
shll
es
push
cld
cmp
jmp
inc
ds
cmp
inc
pop
pop
sarl
and
adc
in
push
cmpsl
pop
sub
jae
mov
insb
xchg
mov
mov
daa
cmp
pusha
push
add
pushf
repnz
push
sub
ficomps
xchg
mov
lods
loop
fisttpl
xchg
pop
adc
and
rorb
lcall
jp
jge
or
jp
sbb
or
int3
and
ljmp
xorb
aam
mov
cwtl
nop
rclb
ret
jb
sub
scas
dec
cpuid
or
movsb
mov
das
fcoml
add
loop
aaa
int3
fcmovb
ja
cld
dec
adc
mov
ror
xchg
test
aad
das
enter
lahf
pushf
lock
or
xchg
dec
outsl
test
dec
fsubs
int
mov
lods
popa
jge
xchg
fsubrs
out
jno
jg
je
dec
xchg
aaa
pop
insb
shr
add
sbb
cmpsb
xchg
pusha
xor
cltd
jae,pn
out
and
cmpsl
lds
psubq
rorb
xchg
dec
scas
lods
push
or
mov
push
inc
js
cmpb
sub
into
push
loop
xchg
cmp
ss
add
mov
pop
push
cwtl
sub
jbe
ds
mov
in
insb
sbb
xor
push
xlat
outsl
out
out
insb
adc
mov
pushf
mov
fsin
push
mov
lret
popf
and
in
loope
das
add
in
cmpsb
xlat
test
mov
cmp
xchg
push
pop
xchg
ljmp
jge
ret
incl
scas
jne
adc
inc
aaa
pop
lret
int3
xorb
add
outsb
sahf
lcall
sub
std
xchg
and
out
fildl
sub
out
sbb
jae
sbb
pop
clc
push
lahf
nop
fsub
pop
fistl
pop
push
sbb
popf
or
xor
into
imul
xlat
mov
fsub
cs
xchg
dec
push
js
xchg
rorb
in
mov
lock
fmuls
jbe
dec
into
sbb
jo
and
addl
lret
sbb
inc
hlt
or
std
enter
fsubs
xchg
mov
outsb
cli
xchg
dec
push
notb
inc
xchg
out
cltd
and
or
mov
movq
out
loop
popa
outsb
ss
jmp
push
inc
or
mov
dec
lods
sar
cmpsb
hlt
pop
fldl
adc
sbb
push
push
cmp
rorb
jl
xor
pop
xchg
movsb
cmp
adc
inc
pop
jmp
aam
pop
xchg
push
dec
lcall
leave
inc
aaa
mov
out
idiv
add
mov
and
lcall
xchg
test
xchg
std
jmp
pop
push
sbb
cs
jno
cmp
jp
mov
xor
xor
imul
jp
push
push
sbb
outsb
loopne
leavew
xor
add
dec
fidivrl
lea
mov
jns
scas
jge
mov
pop
adc
ljmp
pop
aam
jne
jl
pop
imul
fldt
or
push
push
mov
outsb
fwait
push
test
stos
mov
jmp
cmp
xor
ficompl
pop
pop
mov
push
out
and
push
sbb
lds
ljmp
enter
insl
dec
mov
jb
movsb
lret
rorb
out
pop
push
popf
mov
mov
mov
push
lcall
fildll
add
mov
xor
inc
push
inc
jno
mov
inc
xchg
cmpb
int3
jg
cmp
fs
ljmp
or
roll
in
sbb
decl
or
xor
aam
in
push
xchg
movsb
addb
cmpsl
int3
cld
pusha
dec
imul
pop
adc
hlt
out
xchg
loop
push
lea
push
das
outsb
je
cmp
sub
sbb
mov
loope
jb
je
aaa
mov
push
sbb
inc
cmp
or
rcll
popa
aam
enter
popf
push
push
fs
push
stc
mov
dec
cwtl
mov
outsb
mov
jnp
cld
rorb
inc
cmp
int3
xor
xchg
repz
sbb
mov
pushf
jp
repnz
mov
not
lret
test
pop
xor
mov
adc
notl
sbb
sub
cmp
ffreep
push
negb
cmp
add
mov
push
push
pop
test
pop
mov
mov
sbb
leave
scas
std
sbb
data16
sahf
enter
lock
imul
jnp
repnz
jb
out
cmp
sub
leave
lret
xor
xchg
lds
clc
sub
cmp
push
shrl
fiaddl
push
mov
dec
repnz
mov
fsts
sbb
mov
fnstenv
loope
mov
leave
cmp
pop
pushf
mov
add
pop
push
sbb
mov
cmp
push
outsl
and
lea
jnp
jmp
inc
add
mov
xor
fcomp
adc
lret
clc
jo
and
jbe
lds
ret
add
mov
fcomps
jae
fcomps
mov
mov
or
insb
loope
leave
sub
sbb
mov
std
push
psubusw
clc
add
push
inc
mov
bound
sbb
fmull
mov
mov
adc
scas
fdivrs
cmp
cmp
push
outsl
sahf
cmp
dec
loopne
sbb
mov
cs
jb
sub
mov
sub
hlt
stc
cld
frstor
les
in
sysexit
pushf
int
mov
xchg
xor
aaa
jnp
movsb
sbb
out
and
aam
mov
mov
sbb
data16
enter
ret
cmp
mov
lret
mov
in
sarl
jecxz
outsb
imulb
call
xchg
pop
ret
daa
aaa
es
jle
in
les
cmpsl
adc
and
jmp
lods
inc
sub
lret
pop
and
mov
push
dec
lret
or
jmp
mov
push
lea
imul
pop
xor
push
mov
add
icebp
les
adc
scas
jno
fmull
xchg
jno
adc
dec
adc
xchg
mov
cmp
jp
ret
xor
xchg
stc
popl
sub
mov
push
xchg
add
sbb
orb
sahf
mov
xor
dec
mov
repnz
mov
mov
fst
sbb
shrl
les
pop
fsubl
test
push
xor
jno,pt
aas
mull
xlat
aas
add
jmp
addr16
inc
mov
out
ljmp
adc
cli
enter
add
repnz
inc
xchg
lret
cmp
or
mov
insl
cmpsb
lock
adc
xor
lds
mov
cmpb
fidivrl
cmp
add
adc
cld
stos
cwtl
pushf
jne
adc
add
bound
mov
sub
mov
inc
ds
cmp
pusha
cmp
push
test
jmp
jecxz
mov
mov
ja
ljmp
clc
mov
cmp
ret
mov
lahf
cltd
repz
sbb
in
dec
lea
jo
movsb
cmp
and
rep
jno
lahf
pop
in
fsubr
add
push
jge
mov
lods
lret
stos
lret
mov
pop
jmp
jo
std
sbb
xor
lcall
shrb
insb
and
sbb
sbb
in
stos
fs
xor
lock
lock
pop
clc
sub
ret
cmp
ret
loope
and
xor
xchg
sbbb
mov
lods
mov
fwait
cmp
shll
ret
mov
or
add
inc
testl
jmp
mov
add
push
movsb
add
aas
ret
pop
movsl
mov
jge
sbb
popf
out
pop
fmuls
jl
test
sarb
test
cwtl
xacquire
push
pop
push
sbb
int3
in
iret
scas
mov
xchg
nop
pop
sbb
out
into
xor
test
mov
das
jb
xor
jns
xor
sarl
push
arpl
add
cmp
mov
jmp
inc
push
aaa
rcrb
mov
aad
mov
mov
or
in
ficompl
in
decb
pop
shrl
lret
sbb
push
fimuls
std
fucom
xor
rcll
scas
dec
cmovnp
fldt
and
inc
sub
popf
push
xchg
pushf
mov
lea
and
cwtl
mov
sti
mov
inc
jmp
fs
aad
jecxz
jns
push
xor
fucomp
xchg
popf
test
push
inc
push
dec
xor
popf
mov
int
inc
pop
imul
popa
inc
add
jno
cmp
lcall
dec
push
sub
int3
mov
xchg
aad
rcrb
out
insb
dec
sbb
push
xchg
loopne
mov
imul
jecxz
js
hlt
shll
jmp
fistps
mov
insb
dec
mov
mov
scas
jl
rorl
push
inc
lret
aad
cmpsl
mov
ficoms
fisttpll
in
inc
mov
push
adc
push
mov
lcall
xor
and
ja
jo
aad
loopne
mov
stos
jmp
add
test
sub
gs
sub
jmp
cmpps
xchg
sub
push
loope
movb
cwtl
mov
flds
push
push
lea
push
sbb
rcrl
cmp
inc
addr16
loop
jmp
sbbb
pop
mov
mov
rcl
mov
add
cmpsl
xchg
xchg
into
push
cld
movsb
aam
xchg
xchg
test
mov
or
lcall
movsl
inc
pop
out
xor
mov
mov
inc
push
stc
inc
sbb
imul
shll
mov
push
inc
jg
xlat
repnz
xchg
fs
bound
pop
imulb
fisttpll
ja
or
lea
sahf
jmp
ja
ja
xor
sbb
push
in
mov
mov
mov
out
lea
jp
fisubrl
inc
jne
test
mov
scas
dec
xlat
hlt
pop
repnz
mov
sub
add
insb
cmp
popf
pop
es
ja
rcrb
and
jg
xchg
sub
sub
ss
movsl
cmc
stos
mov
lods
push
add
push
inc
mov
cmp
push
movsb
cmp
lea
push
or
loopne
rcrl
mov
xchg
mov
jne
fwait
mov
test
dec
repz
popa
scas
inc
lods
addr16
int3
and
push
sub
adc
xchg
scas
clc
sub
shll
push
dec
lret
pop
rclb
cwtl
into
andb
mov
leave
dec
push
aam
add
sub
repnz
aad
xchg
fldenv
jmp
xchg
push
sahf
enter
test
inc
push
ss
xchg
mov
jns
sbb
lcall
out
pop
fcomps
xchg
mov
dec
push
mov
mov
adc
xchg
hlt
cmp
cmp
ljmp
sbb
pop
mov
mov
jmp
mov
add
aaa
push
loop
dec
pop
mov
or
std
dec
inc
stc
xchg
jge
fs
and
mov
jns
inc
bound
jb
and
mov
inc
xchg
xchg
lret
push
shll
cmp
lahf
cmp
imul
jle
movsl
add
int
cmpsb
repnz
fiaddl
stos
outsb
sbb
xor
dec
addb
mov
imul
das
lds
push
jge
test
jnp
cmpsb
lods
fidivl
pushf
cmp
stos
outsl
int
subl
outsb
movsb
cmp
les
call
adc
and
push
inc
popf
out
enter
sub
cmp
roll
fadds
and
jne
dec
adc
cld
mov
aaa
inc
pushf
jmp
jge
add
shlb
insl
bound
dec
mov
mov
jno
adc
aam
mov
in
data16
clc
sbb
inc
insb
xchg
leave
stos
lret
adc
mov
les
sub
pop
shll
arpl
fcomip
cmp
xchg
in
push
xor
aam
lahf
mov
out
mov
push
pop
les
fsubp
ret
or
lret
sbb
outsl
sbb
jmp
mov
out
stos
dec
stc
push
lods
pop
les
jns
cmp
sbb
or
xchg
js
and
pop
or
cmc
inc
add
pop
jae
push
sbb
cmp
pop
loop
call
xor
jmp
mov
cmp
bswap
mov
jbe
iret
icebp
jp
mov
ret
imul
les
and
dec
mov
ds
sbb
lock
dec
int3
sysexit
or
fisubrs
bswap
aaa
pusha
or
outsl
cwtl
mov
nop
mov
jo
sarl
push
mov
arpl
test
add
dec
sbb
jp
fdivs
adc
out
rolb
rorb
mov
sbb
iret
push
aas
pop
add
stc
hlt
cmp
jbe
xchg
mov
clc
aam
inc
jge
leave
fldt
lea
lock
lret
fmull
or
ja
sti
jnp
inc
pushf
test
mov
and
cmpsl
add
iret
and
rcl
cmc
pop
roll
js
jge
sbb
imul
lcall
std
add
mov
inc
jmp
rolb
fs
jecxz
xor
mov
pop
into
jmp
filds
push
inc
enter
xor
subl
out
pop
sti
cwtl
repz
xchg
xor
scas
mov
mov
jle
sbb
push
mov
fwait
aas
cld
xrelease
cmp
xchg
sub
jae
cli
xor
jnp
push
cld
and
and
inc
dec
leave
rol
imul
mov
cmp
dec
sub
push
jns
loop
and
push
mov
daa
andl
adcb
pop
inc
cmp
sbb
sbb
in
sub
and
xchg
mov
push
orl
int
sub
iret
pop
pop
fidivs
notl
pop
out
mov
int
ret
movsb
test
incb
or
adc
adc
in
push
decl
sbb
sub
inc
xchg
pop
inc
movsb
inc
jne
jp
ficompl
mov
xor
jp
stos
xor
sahf
ret
sbb
lds
mov
xor
jmp
push
scas
dec
out
sbb
stc
inc
dec
jno
insb
and
mov
dec
flds
mov
repnz
sbb
sbb
fldt
push
inc
add
dec
sbb
loop
repnz
sbb
imul
lea
mov
or
inc
testl
rcr
add
es
xchg
sbb
sbb
fldenv
and
jns
daa
push
movsl
icebp
xor
push
mov
push
lock
rcl
adc
movsl
pop
mov
push
ljmp
and
and
mov
mov
inc
xchg
ja
adcb
cmpsl
mov
mov
cmp
xchg
cld
insb
clc
mov
or
jg
ret
jg
jge
xchg
xlat
xor
dec
ljmp
lcall
dec
dec
xadd
ret
jne
iret
mov
lds
loopne
add
sub
fistpl
out
clc
lods
stc
inc
ficoms
jl
push
adc
push
or
and
mov
sbb
insb
push
mov
fs
mov
stos
iret
enter
imul
pop
pop
popf
push
sahf
imul
xor
repnz
mov
test
push
mov
cld
out
mov
ds
pusha
sahf
mov
int3
pop
xor
imul
inc
cld
xor
test
sub
cmp
pop
inc
push
adcb
aas
inc
xlat
fcoml
jnp
sbb
pop
mov
lret
xlat
push
int3
inc
int3
test
lods
jp
mov
mov
test
xchg
in
fisttps
mov
mov
dec
add
addr16
ret
or
scas
add
ds
bound
das
lock
repz
sub
popf
xchg
sbb
out
or
out
dec
sub
pusha
dec
out
mov
pop
dec
cmp
cmc
sub
mov
cmp
lods
lret
xchg
loope
iret
jmp
or
lods
inc
pushf
and
cld
xchg
lods
push
hlt
xor
push
adc
ficompl
push
cmc
mov
pop
lret
addr16
dec
lods
pop
std
out
test
insl
inc
and
dec
lret
dec
pop
add
mov
sbb
jns
or
jg
js
fidivl
icebp
dec
jecxz
jb
inc
mov
fsubrl
es
inc
add
sub
adc
std
loopne
mov
push
inc
inc
mov
inc
inc
jns
cmp
add
es
pop
test
jg
mov
sti
and
dec
mov
arpl
ret
pop
ret
jmp
into
icebp
gs
or
dec
mov
shlb
inc
es
lock
add
dec
sub
fsubp
sub
sub
mov
adc
and
hlt
clc
mov
cmpsl
mov
or
xchg
inc
fisttpl
cmp
rorl
adc
dec
gs
sbb
xor
stc
add
dec
outsl
sub
pop
add
fldln2
cwtl
in
rolb
cmp
jge
sbb
cmpl
js
scas
out
fs
js
xor
mov
hlt
hlt
icebp
aaa
cwtl
mov
sbb
and
insl
xchg
aaa
stc
or
out
inc
jno
pushf
in
out
test
push
xor
and
or
test
xchg
xor
js
lcall
decl
incb
mov
loopne
daa
mov
add
mov
mov
jge
mov
xorl
sbb
imul
push
sbb
aad
jb
pop
sbb
incb
dec
sbb
int
jno
lcall
dec
loopne
in
jne
xor
aad
mov
mov
dec
sbb
xor
out
mov
ja
aad
fwait
lcall
inc
push
ss
scas
pop
in
cltd
stos
out
push
loop
xchg
mov
mov
fsubrp
js
push
add
sub
xchg
imulb
ds
fwait
mov
lds
sbb
sbbb
faddl
push
stos
and
mov
in
int3
and
fdiv
xchg
pop
mov
pop
testl
aaa
mov
xor
ss
inc
sbb
or
aas
int3
xchg
leave
out
cwtl
adc
add
and
lods
mov
mov
les
pop
or
je
loopne
lock
fsub
inc
sub
out
and
dec
sti
mov
add
fsubrl
fucom
push
inc
mov
loope
movsl
leave
sbb
lods
in
loopne
jl
and
xchg
dec
aaa
adc
and
sar
push
xchg
inc
enter
mov
mov
sahf
sub
es
or
stos
aam
adc
cs
add
std
jbe
daa
mov
jo
xchg
sti
ret
test
sub
xchg
fsubrl
inc
sub
jg
das
mov
push
and
mov
mov
lcall
mov
jmp
dec
jge
inc
sbb
mov
rcrb
rcll
mov
enter
add
mov
and
fxch
and
inc
add
fbld
arpl
inc
push
mov
inc
aas
stos
stc
sti
bound
fidivrs
inc
movsl
js
pop
mov
push
and
sbb
hlt
daa
or
out
lds
outsb
repz
fdivr
push
ret
mov
stos
sti
fidivl
push
sbb
into
or
pop
mov
dec
sub
adc
insb
xlat
xor
mov
sbb
pop
aam
shrb
mov
and
mov
add
and
ja
add
mov
mov
xchg
cmpsl
mov
inc
cli
in
lahf
jle
jg
cltd
popf
sahf
shl
add
adc
push
jp
dec
dec
cmp
mov
dec
add
inc
cmp
dec
sbb
xchg
or
jmp
mov
dec
cmp
add
iret
ja
jnp
imul
xor
pop
daa
clc
adc
push
lret
test
cld
jg
fisttpl
enter
imull
dec
lcall
psubsb
xchg
sbb
int
cmp
pop
fcoml
fisubrl
ret
nop
imul
call
cmc
push
lods
and
and
mov
fs
lea
sub
xlat
mov
mov
sub
or
adc
repnz
loopne
mov
jle
inc
jae
insl
mov
inc
cmpsb
and
fisttps
push
pop
xlat
jp
jle
jl
std
dec
fsubrs
pop
ljmp
lock
aam
add
incl
scas
testl
ret
sub
sub
vmovups
sti
sti
cmpsl
ficompl
sub
int3
pop
inc
add
test
cmp
out
clc
shl
push
cmp
lods
mov
cmp
mov
mov
or
sti
mull
push
and
stos
into
push
fisubrl
addr16
lods
repnz
xchg
mov
push
pop
gs
shr
pusha
gs
cmc
aad
mov
inc
push
cli
or
cli
dec
push
int3
dec
jno
int3
lret
or
outsb
pop
leave
in
test
pop
cmp
lock
enter
cmp
pop
push
iret
nop
and
fldcw
inc
fsubs
sbb
cmpsl
or
fimuls
add
insl
test
xchg
iret
cmp
push
pop
jp
mov
mov
scas
pusha
imul
fsts
mov
cmp
and
imul
mov
adc
mov
aad
xchg
mov
xor
mov
enter
pop
xchg
inc
xchg
adc
int3
mov
inc
fimuls
mov
cli
repnz
pop
jg
sbbb
inc
test
mov
in
std
jo
loope
sub
dec
mov
xchg
shrl
pushf
jnp
mov
jae
imul
lods
sahf
nop
movsl
adc
jecxz
add
mov
icebp
dec
mov
mov
iret
or
addr16
and
sbb
daa
fcoms
cmp
pop
movb
mov
push
mov
clc
shlb
mov
or
inc
rcrb
mov
sub
cmpsb
mov
jecxz
mov
mov
push
test
scas
sbb
imull
je
popa
sub
popl
in
push
inc
sub
ja
mov
pavgb
adc
xor
xor
dec
xchg
int
in
add
mov
bound
mov
dec
adc
inc
sti
pop
mov
dec
adc
fistps
enter
jecxz
mov
mov
aaa
dec
int3
mov
add
mov
mov
push
inc
clc
insb
jmp
loope
fidivrs
fdivrl
je
fisttpll
mov
sub
sub
fstpt
add
sbb
lods
ja
mov
mov
sahf
ds
pop
sbb
lret
mov
add
leave
jns
xchg
or
loope
or
sbb
subl
les
jmp
adc
inc
dec
ret
push
pop
jae
and
inc
or
lahf
or
out
out
inc
dec
fsubl
pusha
pop
cmp
adc
movsl
lea
mov
cmpsl
mov
pop
insl
ljmp
test
mov
icebp
sbb
add
rep
lret
test
jl
and
jmp
add
sbb
movsb
sub
mov
mov
int
outsb
xchg
xor
shrl
sbb
fildl
lret
push
mov
xor
sub
cmp
out
arpl
lock
fstps
je
js
jg
and
push
hlt
sub
sbb
pop
xor
roll
jge
pop
daa
mov
idivb
inc
mov
mov
xchg
pop
out
loope
push
and
jle
aaa
dec
shl
dec
idivl
push
pushf
mov
push
ds
fisubrl
pop
lock
jbe
outsl
xor
inc
lcall
adcb
mov
outsl
test
dec
hlt
dec
sbb
mov
mov
cmpsb
imul
cwtl
cmp
cmp
shll
xor
xchg
inc
add
add
sahf
cmpsl
lahf
addl
pop
lret
cwtl
mov
test
or
jo
sub
aaa
sbb
std
aam
stos
mov
fsubl
leave
push
cwtl
sbbl
and
sub
mov
push
adc
sbb
xchg
cli
idiv
mov
test
jb
rorb
gs
sbb
lea
ja
or
int3
xor
adc
subb
or
push
sub
outsl
lea
cmp
lea
add
out
jne
cmp
mov
adc
pop
orl
pop
pop
ss
in
cld
jmp
in
dec
cli
adc
or
test
shlb
jns
push
jg
adc
push
imul
fwait
paddsw
xor
stos
mov
dec
fxch
xor
popa
out
sahf
lods
push
ja
push
data16
sub
pop
jae
jp
mov
cli
sahf
mov
xor
dec
jns
daa
jp
push
sub
jg
push
inc
movntq
sub
sbb
mov
mov
outsb
pop
pop
xor
mov
je
fldl
mov
testb
lods
icebp
jle
add
add
aaa
scas
mov
inc
fcomi
andl
mov
mov
jl
mov
addr16
xchg
add
adc
cmp
ds
jnp
dec
xchg
scas
hlt
jae
mov
xor
push
loope
sbb
fidivrs
xchg
dec
xchg
adc
jp
inc
ficompl
mov
and
outsl
dec
sti
jmp
mov
jo
jne
cltd
sub
pop
fisttps
push
addr16
fimuls
mov
add
aaa
movsl
mov
movsl
pusha
sti
jnp
sbb
iret
add
rorl
fsubrl
in
cs
out
xchg
adc
mov
mov
mov
inc
ror
std
rorl
or
adc
int
mov
mov
fisttpl
sub
jl
push
or
sub
lods
xchg
jle
mov
add
dec
daa
or
xchg
sbb
sahf
movsb
cmp
fimuls
sarb
stc
cmp
jno
mov
push
in
jecxz
scas
jo
and
adc
sar
lret
cli
scas
cwtl
pop
popf
fwait
cltd
jno
shrb
loope
xchg
and
pop
jecxz
mov
out
mov
mov
int3
cmpb
adc
lahf
popf
jmp
es
lods
mov
adc
xchg
adcb
push
in
mov
ret
outsl
cmp
push
mov
jmp
and
jns
frstor
inc
pop
or
insl
sbb
mov
ffreep
mov
in
pop
in
sub
imul
adc
dec
inc
jecxz
lahf
lds
arpl
adc
mov
sbb
lcall
jp
movsb
test
loop
out
push
fdivl
push
rcl
and
pop
push
pavgw
mov
sbb
je
out
or
aad
and
enter
in
inc
mov
xor
aad
pop
push
movsb
xor
adc
add
jmp
jbe
daa
cld
imul
gs
ret
mov
test
out
dec
dec
jb
imul
mov
pop
ret
xor
and
or
push
push
add
mov
mov
hlt
mov
xchg
cwtl
or
insb
pusha
mov
adc
mov
push
or
arpl
loope
jns
std
dec
mov
arpl
std
or
or
dec
incb
out
mov
cmp
lret
out
mov
mov
addr16
jl,pt
pop
or
pop
out
outsb
jmp
dec
and
fdivrs
stos
ss
sub
or
sbb
mov
test
push
loope
test
mov
adc
push
insl
sbb
je
ficomps
test
mov
lahf
daa
pop
xchg
pushw
hlt
pop
inc
pop
and
or
enter
cmpsb
push
out
dec
pop
jle
sbb
sti
jo
dec
xchg
mov
cltd
push
sub
inc
xlat
out
xor
fstpl
push
fwait
inc
out
cs
push
addr16
jmp
mulb
pushf
test
cmp
imulb
fst
out
pop
test
and
cli
call
dec
and
roll
inc
into
push
cmp
push
cmp
iret
fldcw
fwait
mov
xorb
xchg
mov
add
sub
in
inc
xchg
inc
mov
test
mov
stos
mov
xor
fwait
add
or
dec
insb
lds
std
aaa
and
sub
lock
outsl
xor
loopne
loop
and
mov
add
es
jl
push
mov
inc
jge
pop
jnp
pop
inc
jmp
stos
mov
call
cmp
arpl
jno
and
pushl
cmp
call
sar
sub
in
shll
in
ret
pop
or
cmpsb
add
int3
test
std
and
rorl
inc
jecxz
stc
loop
ljmp
and
cwtl
dec
or
pop
mov
jae
push
outsb
idivb
popf
or
push
lea
dec
cwtl
jg
jmp
hlt
or
xchg
setl
sub
inc
push
cwtl
xchg
stos
inc
mov
decb
jmp
or
popa
dec
inc
xor
jp
and
test
push
mov
cltd
dec
out
in
sub
add
mov
sbb
fs
loop
cltd
mov
xchg
xchg
inc
sbb
adc
roll
daa
call
ja,pn
int3
or
movsb
es
add
xor
aam
lea
popa
inc
adc
cmpsl
dec
testb
push
cmp
ljmp
dec
and
andl
call
aam
arpl
dec
data16
lods
inc
flds
jnp
push
sub
jb
push
jb
mov
cmp
push
scas
subb
pop
lods
aam
xlat
jns
mov
adc
xor
fisttpl
imul
aas
shrb
leave
mov
sbb
jbe
scas
dec
or
cmpsb
mov
out
test
or
jb
outsb
jne
cmp
mov
push
and
mov
and
mov
cmp
cmp
imul
dec
jp
pop
mov
inc
push
cmp
cmc
pop
fwait
shlb
xchg
or
ds
sub
lret
jle
mov
xor
mov
int
and
sbb
imul
aam
jae
into
lcall
data16
cmc
insl
scas
je
mov
push
popa
push
mov
adc
pop
ss
iret
cmp
xchg
mov
popa
cmp
outsb
data16
out
inc
aaa
or
outsb
lea
aas
jg
ret
cmp
sti
aaa
push
ss
or
rorb
pop
fsts
push
clc
mov
add
push
sub
push
loopne
mov
add
ds
or
adc
jmp
add
ret
cmp
enter
addr16
cmpsb
sub
mov
push
add
sahf
add
call
or
ret
and
push
inc
popf
mov
icebp
ret
pop
adc
sbb
mov
xor
sbb
leave
rclb
push
dec
shll
mov
push
xchg
or
dec
mov
cmpsl
cmp
push
jg
jmp
in
data16
out
dec
movsb
inc
stos
loopne
or
adc
pusha
inc
scas
mov
mov
aad
enter
fldcw
lock
jne
jno
scas
pop
test
sar
leave
cmp
lret
inc
shll
out
sarb
jl
mov
pop
cltd
cli
lock
hlt
fstl
out
loope
out
test
xlat
add
je
dec
daa
push
jb
jge
xor
xchg
mov
idiv
leave
out
xchg
mov
test
in
adc
mov
insb
js
adc
adc
sub
idiv
test
mov
pop
jns
roll
out
lock
inc
jne
in
add
push
leave
aad
sub
fadd
xor
addl
add
xor
les
inc
xor
push
xchg
jge
xor
sbbl
loop
sbb
mov
flds
lcall
mov
mov
clc
aad
test
add
movsl
bound
out
and
xor
mov
testb
dec
mov
jnp
mov
sub
pop
jno
jns
mov
cmpl
xor
aaa
orl
and
popl
rcrl
fs
push
fdivr
fsubs
mov
inc
mov
mov
mov
jns
rdpmc
jecxz
gs
cltd
call
aaa
outsl
dec
sub
scas
jnp
sub
mov
stc
ds
and
sub
or
ret
ja
adc
or
testl
adc
xchg
dec
das
or
ja
or
les
roll
aam
ljmp
ja
into
fnstsw
mov
and
fsubrs
js
adc
sbb
int
adc
cmp
outsl
cs
and
inc
in
mov
lods
stc
idivl
je
add
jle
jge
inc
stos
into
cld
lea
dec
aad
or
popa
xor
xchg
inc
mov
xchg
sbb
xor
cmpsb
push
adc
inc
xchg
and
test
pop
jae
sarl
sbb
adc
pushf
inc
hlt
add
sub
repz
and
ret
inc
test
bound
loopne
push
cld
sbb
aam
fidivrl
mov
lock
pop
hlt
add
adc
mov
fsubrp
fldenv
cmp
ds
adc
outsl
test
fisubrl
in
test
xor
stos
arpl
dec
fsubrl
dec
ret
in
pop
mov
xchg
mov
inc
mov
cmc
inc
ss
cmp
jnp
jle
imul
shrl
es
adc
jno
jae
es
test
push
mov
mov
mov
std
xchg
xchg
cmp
cmp
test
or
jae
mov
outsl
nop
mov
movsb
movsl
lret
mov
mov
jne
add
jnp
inc
add
xor
in
ds
pop
mov
cmp
jl
rorl
jg
push
and
pusha
fists
pushf
xchg
fstpl
pop
lock
jge
in
jo
xchg
sub
mov
int
pop
aaa
mov
push
push
sti
and
stos
aam
das
mov
add
test
shll
or
test
jge
inc
ss
xchg
scas
jge
mov
mov
js
adc
mov
jl
and
xchg
and
mov
fldenv
cs
sub
mov
push
lods
pop
inc
sahf
fiaddl
jle,pn
xor
mov
jns
mov
inc
mov
sbb
hlt
adc
stos
xchg
int
test
fcomps
xchg
mov
enter
dec
push
and
sub
pop
pop
adc
sbb
jbe
es
push
in
jae
enter
clc
negl
stos
jmp
int
cmp
mov
faddl
andb
sbb
cltd
inc
das
xor
pop
mov
icebp
xor
jmp
pop
in
mov
mov
in
sub
xlat
stos
mov
cmp
sub
xor
je
xchg
in
jb
into
mov
pop
inc
mov
aaa
inc
bound
pop
fdiv
in
or
adc
xchg
mov
cmp
push
dec
fninit
xchg
push
xchg
lcall
aas
rclb
cmp
ss
fstpt
das
mov
add
insl
pop
sub
jo
xchg
sub
mov
mov
xor
push
cmpsl
dec
iret
xchg
inc
add
jp
sbb
loopne
pop
in
pop
lahf
xchg
test
frstor
cmp
jg
repnz
adc
cld
sbb
shl
and
mov
mov
fstps
xchg
mov
js
rclb
push
insb
int
add
fs
cs
sub
or
add
mov
pop
lcall
jle
in
add
or
leave
fildl
jl
push
mov
je
inc
dec
lods
mov
outsl
stc
addr16
and
dec
sbb
pop
and
out
into
loope
pop
pop
test
lahf
sar
xchg
lds
sbb
inc
xchg
out
bound
xchg
push
enter
mov
xchg
fmul
dec
push
call
sub
popa
mov
scas
hlt
fimuls
dec
arpl
int
stos
push
mov
in
sbbb
in
xchg
idivb
jnp
loopne
ss
pop
mov
inc
scas
inc
and
jecxz
lcall
sbb
sbbb
inc
das
outsb
pushf
mull
mov
pop
iret
divl
add
stos
push
rolb
cli
popa
mov
scas
leave
jle
pusha
and
push
rorb
cmp
subl
mov
or
das
mov
inc
in
mov
inc
aam
inc
or
and
loope
popa
push
lods
pusha
insl
testl
mov
insb
add
inc
shrl
mov
mov
mov
jl
cmp
mov
aad
cmp
mov
popa
mov
add
in
cmc
rolb
mov
and
leave
loope
xchg
xorb
and
cmpsl
ret
jge
loopne
jae
jns
rolb
fwait
cmp
sub
out
cmp
ljmp
mov
test
and
mov
sbb
cli
cmpsb
add
xchg
jae
sbb
mov
lods
cmp
and
push
shlb
xor
es
mov
sbb
es
negl
mov
jbe
add
fcomip
subl
adc
and
pop
adc
pushf
mov
sarb
movsb
lock
and
sarl
or
notl
lods
jo
das
inc
lcall
lock
mov
or
mov
clc
inc
loop
and
inc
add
nop
fimuls
push
push
pop
dec
and
pop
ljmp
mov
hlt
insl
inc
int3
sbbl
or
outsl
es
aaa
enter
test
data16
cmp
inc
lret
mov
scas
xchg
fcompl
sbb
in
mov
adc
ret
rcl
xchg
hlt
movsl
push
cmp
or
mov
gs
leave
push
mov
push
jle
push
sahf
mov
sbbb
mov
cmp
fmul
xchg
ret
lret
mov
insl
sbb
push
xor
cmpsl
dec
leave
push
test
adc
hlt
cmp
inc
fwait
stos
cmpsb
inc
inc
dec
jne
sti
add
jg
in
cld
push
mov
dec
mov
push
cwtl
xchg
enter
sbbl
cld
add
rorl
fsubr
into
and
mov
inc
lret
jmp
les
mov
mov
imul
cli
sub
xchg
push
and
ficoms
fwait
pop
and
imul
movsb
or
push
cmp
sub
cmp
adc
hlt
test
lods
out
int3
aaa
enter
stos
rol
insb
dec
scas
jle
lods
rolb
andl
mov
lret
push
and
lock
sbb
dec
stos
inc
sub
les
or
cmp
rep
lds
aas
push
je
call
jl
sub
movsb
ljmp
push
pop
test
daa
xor
outsl
inc
add
sar
xchg
dec
shrb
sbb
mov
test
jnp
jp
mov
lret
jle
jo
or
lret
frndint
adc
leave
xchg
sti
cmp
mov
xor
test
lcall
mov
mov
loopne
aad
popa
inc
iret
es
mov
aas
mov
lcall
scas
ds
lods
notl
fiaddl
jns
imul
xlat
add
mov
movsb
jle
push
jmp
cmp
and
cmp
and
jbe
mulb
pcmpgtd
in
jl
mov
mov
cmp
push
mov
add
or
xor
push
hlt
scas
outsl
sbb
insl
ss
push
cmp
idivl
cs
push
mov
mov
scas
dec
movsl
add
out
cmp
aas
jae
addr16
loope
pop
cmpsb
movsl
lret
sarl
and
or
inc
cmp
xchg
dec
mov
pop
xor
out
mov
mov
popa
cmp
sahf
mov
mov
test
cmp
out
push
ret
fisttps
loop
mov
mov
xor
int
movsl
inc
xorl
mov
out
add
cli
adc
and
dec
xchg
push
inc
xor
ret
mov
rcll
mov
inc
fwait
pop
iret
lock
adc
lds
mov
mov
adc
mov
pop
fnstcw
inc
outsl
lret
stos
mov
adc
mov
repnz
enter
pop
adc
cltd
pop
lret
pop
fwait
movsb
or
shrb
scas
inc
test
xor
in
cmc
dec
jle
xchg
sbb
and
jb
mov
es
movl
push
add
dec
call
and
addl
xchg
negl
push
cld
ja
xor
or
loopne
das
pop
leave
cmp
ja
mov
popf
and
sbb
imul
lds
add
rcll
lods
pop
in
jecxz
xlat
arpl
mov
data16
repnz
movsb
add
imul
cmpsb
jnp
into
dec
sub
dec
out
sbbb
call
bound
or
ljmp
adc
mov
sbb
cmp
pop
cmp
inc
add
or
inc
imul
mov
clc
lcall
pop
dec
rcrb
or
xor
or
and
movsb
repz
inc
popf
pop
ror
sahf
and
ret
pop
inc
and
sbb
mov
dec
lds
inc
inc
or
sti
sbb
jge
in
cmp
aas
pop
push
popa
xor
push
jne
hlt
lods
sub
inc
addr16
movsb
sub
or
movsb
cld
mov
inc
lods
and
xchg
loope
mov
mov
dec
xchg
sub
or
sbb
mov
push
jne
das
sbb
test
lock
loope
les
or
sahf
dec
xor
dec
xor
push
cmp
mov
aam
xchg
repz
outsl
pop
sub
dec
or
iret
incl
cwtl
sbbb
mov
sbb
inc
dec
dec
negb
pop
orl
insl
call
inc
pushf
inc
mov
icebp
lahf
or
or
notl
stos
cld
mov
adc
jmp
cmp
inc
mov
sti
or
nop
jo
xchg
xor
mov
outsb
lahf
add
stos
cmp
pop
insl
fimull
mov
bnd
cmp
ja
loope
xchg
cmp
lock
cmp
shr
adc
adc
mov
adc
add
loope
popa
and
xor
outsl
push
test
pop
jb
xor
add
mov
mov
add
xchg
push
dec
add
js
mulb
mov
stos
std
fistps
mov
in
or
std
and
sub
xorl
or
pusha
ljmp
gs
inc
cmpsl
ljmp
aad
scas
add
sahf
test
cmp
mov
dec
mov
stos
loop
mov
mov
lahf
dec
dec
inc
test
fidivl
xor
xor
adc
imul
push
and
mov
add
test
jb
adc
pop
cmpb
out
cld
and
sbb
jp
into
dec
out
and
daa
movsb
sarb
pop
xchg
loop
inc
outsb
fimuls
jge
push
loope
jae
jmp
and
xor
rcr
jns
pushf
icebp
into
adc
mov
mov
xchg
adcl
mov
pushf
xor
inc
aam
dec
mov
mov
test
jp
fwait
xlat
sti
stos
enter
pop
mov
adc
pop
iret
fs
clc
ret
mov
push
add
mov
inc
testb
push
cmp
fsts
mov
pop
hlt
in
mov
add
stc
stc
xor
sbb
scas
jnp
leave
pop
icebp
pushf
lods
dec
in
shl
ror
push
or
repnz
lahf
lea
mov
jbe
popa
and
jecxz
mov
popf
int
jg
std
stos
xor
push
fbld
inc
nop
jl
and
aad
sarb
test
mov
sub
dec
inc
add
adc
aad
adc
ss
mov
sub
in
mov
rcl
mov
or
jnp
lods
pop
mov
clc
call
mov
push
pusha
mov
pushl
lahf
push
sbb
push
jnp
mov
shrb
jl
xchg
cmp
ja
adc
fcmovu
pusha
sub
pop
jle
mov
scas
jg
dec
and
cmp
inc
call
arpl
sbb
mov
cld
popa
inc
roll
mov
mov
out
xchg
lock
jmp
mov
jo
and
mov
and
mov
cli
bound
imull
and
xchg
sbb
int
push
jno
loopne
push
mov
mov
xchg
mov
and
add
ret
push
in
cmp
cmp
mov
sahf
add
mov
xor
repz
xchg
xchg
cmp
cmp
or
push
test
pop
jg
jge
sbb
push
sarl
pop
and
lods
pop
cmpsl
inc
testb
xchg
popa
push
adc
dec
push
sahf
cmp
mov
ljmp
inc
cmpl
or
aam
push
aaa
addl
decb
mov
and
and
add
inc
cld
add
and
dec
xor
test
sbb
fcomp
push
mov
and
mov
lret
add
or
sar
lcall
sbb
mov
cmp
loop
cmp
sbb
add
xorl
sub
pushf
push
jbe
lods
mov
sub
xchg
jle
pop
sbb
or
ret
add
lock
add
testb
subl
bswap
fidivrs
cmpsb
xchg
aam
gs
push
mov
cmp
arpl
sub
stos
iret
sbb
fistps
in
adc
and
in
adc
enter
es
xor
pop
mov
adc
push
pop
sahf
sub
ret
sbb
and
movsl
dec
mov
lcall
pop
mov
mov
pop
xor
jl
push
jb
jo
nop
out
repz
ds
test
sahf
icebp
into
mov
push
sub
pushf
sub
data16
sub
adc
sbb
pop
jb
mov
cmc
pop
lock
jmp
int
cmp
std
inc
or
adc
pop
ljmp
stc
gs
add
or
mov
shrb
xlat
pop
cmpsl
adc
test
sub
inc
xchg
jns
or
jno
sbb
or
popf
out
scas
popf
or
pop
mov
ljmp
inc
sbb
lahf
inc
aad
cmc
or
inc
lcall
fsubr
mov
bound
loopne
aam
push
pop
mov
sbb
sbbl
inc
cmp
sub
sub
xchg
push
ffree
loop
adc
xchg
jae
push
fs
push
mov
mov
dec
jp
aad
xor
sub
bound
push
push
mov
push
xchg
es
imul
in
fildl
add
push
pop
or
push
scas
mov
loope
ret
push
push
stos
and
hlt
xchg
dec
gs
push
add
fstps
repnz
shrl
mov
es
and
hlt
pop
fwait
lret
les
pushl
lahf
imul
nop
repnz
fidivrl
call
pop
imul
sub
loop
and
imul
or
roll
push
pop
popf
add
push
push
jmp
xor
mov
mov
sahf
popf
mov
loopne
sbb
inc
fs
pusha
cmpsb
aas
add
push
out
jecxz
paddb
iret
mov
pop
xor
clc
jbe
xchg
movsl
lcall
popf
je
inc
xor
mov
jl
notb
pop
loop
test
fs
add
bound
mov
fwait
lcall
cwtl
loop
and
stc
push
mov
cmpb
cmp
or
or
out
std
gs
add
aam
jns
push
aad
es
push
xor
mov
rclb
inc
loopne
cmp
inc
rol
jae,pn
js
ss
cmp
outsl
cltd
test
inc
stos
xchg
mov
and
mov
xchg
mov
dec
push
push
xchg
inc
lock
and
fsubs
fwait
pop
jo
mov
daa
pop
adc
sbb
test
add
xor
outsb
pop
lcall
repnz
push
pusha
mov
icebp
mov
test
jb
out
mov
jg
mov
sar
adc
dec
push
mov
sbb
mov
cmp
stc
bound
or
insl
cmc
mov
jns
push
ja
push
in
mov
jge
pop
mov
sbb
ss
es
mov
scas
stos
aas
and
mov
ja
pop
dec
xchg
cld
add
mov
mov
inc
js
push
pop
cltd
sub
aad
xor
addr16
and
cltd
adc
lods
outsb
push
sbb
fs
aaa
pop
arpl
add
notl
mov
iret
rolb
lds
sbb
movsl
mov
pop
out
sub
aam
xchg
sarl
inc
es
ret
nop
add
xchg
mov
mov
leave
add
aad
adc
sub
shll
lahf
fabs
nop
iret
mov
ret
test
inc
mov
mov
int3
aaa
inc
dec
or
push
out
ret
movb
or
int3
mov
xchg
lods
ret
and
mov
popa
scas
mov
stos
mov
repnz
repnz
fwait
cmp
xor
mov
xor
xchg
pop
ret
pusha
adc
adc
ljmp
orb
or
mov
lcall
adcl
ljmp
mov
lret
xchg
nop
add
daa
pop
cli
pop
sbb
subl
xchg
dec
dec
xor
or
outsb
pop
faddl
test
xchg
sub
sti
adc
and
pop
call
cwtl
dec
aaa
nop
sbb
scas
jnp
jne
ds
xchg
sub
pop
or
pop
mov
pop
outsl
jle
sub
outsl
mulb
insb
push
mov
cltd
dec
mov
repz
into
in
adc
fwait
xor
popa
and
push
pop
mov
mov
lods
dec
push
aad
add
das
push
mov
and
fistpl
lods
loope
and
jge
ss
popa
es
jge
fiaddl
imul
fildll
or
push
stos
icebp
stos
xchg
mov
pop
pop
sub
mov
push
push
mov
or
out
and
lret
mov
or
xor
sub
pop
fdivs
cmp
pop
sti
mov
xor
add
int
aam
jb
xchg
dec
add
dec
push
push
add
addr16
in
add
pop
rclb
xor
cs
mov
cli
push
push
cs
inc
ret
aas
add
sub
fimull
repnz
repz
mov
jnp
imul
xor
jbe
outsb
daa
fisttpll
jne
xchg
and
shlb
mov
xchg
xchg
cmp
mov
les
mov
mov
xchg
pushf
mov
lods
pop
popf
rcl
cmpsl
mov
dec
lds
test
xchg
shrl
inc
ficoms
and
jnp
rorb
dec
mov
push
mov
jp
pop
fwait
mov
jno
cmp
out
andl
add
gs
out
or
jno
xor
adc
push
je
test
pop
in
push
pop
dec
xlat
lcall
dec
xor
lods
cmp
scas
and
or
out
clc
push
push
mov
sbb
inc
dec
fcmovnb
movsl
sub
pop
into
xchg
je
mov
aas
jb
pop
shrb
xor
or
sub
and
ficoml
cmp
rcll
je
and
mov
xchg
xor
roll
fs
xor
jmp
fildll
mov
or
dec
pop
aad
dec
mov
ljmp
add
inc
adc
fsqrt
jp
scas
xor
es
mov
cli
dec
scas
dec
add
insl
outsl
iret
cmp
cmpsl
dec
and
xor
addr16
movsb
int3
jns
mov
mov
leave
fldt
fistps
outsb
gs
mov
inc
push
lock
sub
add
subb
or
lds
ds
cld
iret
dec
jmp
pop
std
cmp
adc
pop
sbb
divl
sub
cmp
sub
or
dec
cmp
push
je
cmc
jbe
add
pop
jo
mov
dec
sub
gs
stc
xchg
inc
cmp
jb
leave
sub
pop
pop
enter
test
movsb
mov
ds
sub
ficompl
mov
xchg
mov
cmp
jge
jle
jb
sbb
loope
xor
xor
xor
out
outsb
sub
stc
mov
stc
cwtl
lcall
std
pushf
fdivrs
fsubl
xchg
and
adc
xor
sbb
xchg
xchg
adc
lods
add
rorl
rcr
rcrb
scas
add
add
fnstsw
negb
aas
xor
in
in
jno
dec
popf
cmp
and
pop
push
adc
out
es
imul
pop
dec
or
cs
mov
pop
loop
cmpsl
mov
pop
cltd
imul
cmp
lret
popa
inc
test
jb
cwtl
mov
or
xor
mov
push
scas
fsts
jp
lret
jle
pop
sub
loope
pop
cmc
imul
inc
or
xchg
and
es
inc
shlb
les
xor
clc
xor
pop
cmpb
sub
lahf
and
push
loop
push
cmovl
inc
les
mov
xchg
cwtl
mov
push
pushf
leave
pop
insl
inc
sbb
enter
sub
cwtl
sbb
add
out
repz
mov
scas
je
cld
insl
xor
pop
iret
out
mov
add
stos
fnsave
jo
test
movsb
in
scas
push
fstl
xchg
test
aas
pushf
jl
mov
in
pop
pop
inc
ja
adc
dec
jl
xchg
sub
adc
lcall
adc
pop
xchg
push
ljmp
mov
inc
cwtl
xchg
jo
pusha
push
jecxz
pop
xor
xchg
out
dec
subl
mov
sub
xchg
inc
stos
and
outsl
rclb
in
test
outsl
inc
pushf
xchg
cmp
push
test
iret
cmp
fsubp
ds
adc
aaa
add
xchg
lods
outsl
and
shrl
lods
adc
mov
arpl
mov
pop
sub
lods
and
sub
xlat
sub
push
pusha
mov
aaa
dec
mov
stos
leave
sti
mov
dec
jg
das
in
adc
lods
jno
lcall
xchg
out
and
cmp
js
mov
inc
stc
les
stos
int
jb
push
cmp
js
les
adc
arpl
shll
pop
jg
dec
data16
ljmp
es
xor
in
scas
loopne
jo
insl
lods
mov
jbe
sti
stos
jb
jne
jmp
sbb
out
xor
lret
cmp
sbb
pop
or
dec
popa
mov
shlb
rcrl
popa
inc
or
mov
fs
mov
inc
add
ret
push
stos
cli
adc
push
mov
popf
lds
in
in
inc
outsl
inc
gs
inc
and
or
push
imul
xor
lods
pop
bnd
xorl
mov
imul
fisubrs
push
ja
push
lea
repnz
jl
cltd
xor
sbb
pop
pop
sbb
and
dec
enter
pop
lods
xchg
enter
or
fmulp
jno
mov
mov
lds
sbb
dec
leave
mov
pop
xchg
subl
movsb
sub
sbb
push
sbb
xchg
xor
scas
sub
jle
xchg
test
mov
inc
lods
xchg
push
xorl
mov
into
push
push
jae
pop
xchg
push
sub
jb
push
cs
adc
out
and
sbb
push
outsl
stc
scas
jge
cs
aam
adc
aam
push
inc
lea
adc
dec
and
fldenv
lret
xchg
fstl
xchg
mov
cld
and
pop
add
loope
mov
push
and
mov
lods
popf
jg
stos
mov
aad
outsl
add
lock
sub
aad
out
shlb
xchg
jg
sbbb
push
mov
dec
icebp
pop
mov
in
sbb
mov
bound
imul
fdivrl
cs
dec
test
lahf
cli
fs
incb
mov
pop
sahf
and
xchg
cmp
mov
fdivl
push
mov
xor
push
out
pop
cmp
jge
and
leave
insb
lods
rolb
cmc
dec
add
les
shlb
mov
lret
ds
xchg
aam
xchg
fwait
in
pop
cmc
int3
dec
out
int
mov
sub
jb
loope
or
gs
jge
je
mov
movsb
fidivrl
jae
mov
shl
shr
xor
and
and
inc
fscale
pop
in
inc
fistpl
sub
fwait
ss
adc
sbb
popf
cmp
jnp
or
testb
hlt
mov
hlt
aam
jae
mov
sub
pop
dec
cmpsb
cs
sub
movb
ljmp
lret
cmp
cmp
mov
cmp
xlat
cmp
push
lahf
sbb
enter
sub
clc
mov
popf
add
in
jecxz
mov
xchg
pop
xor
fldcw
and
dec
sbb
nop
adc
push
pop
scas
sub
mov
pop
shll
je
js
repz
ljmp
mov
adcl
lods
sub
mov
loope
ljmp
xor
scas
adcb
push
mov
icebp
push
hlt
lcall
push
int
jbe
jmp
in
cmpsb
insb
sbbl
xchg
in
xchg
inc
rcrb
fcom
xchg
pop
lcall
sbb
fbstp
aam
or
fcompl
push
add
lret
jmp
pop
push
into
test
ds
aam
ret
dec
adc
or
jle
fs
dec
loopne
bound
icebp
mov
or
dec
es
and
lea
sbb
push
inc
jle
sti
scas
xchg
adc
insl
lea
popf
mov
add
cmp
add
jl
mov
mov
mov
and
cmp
xor
jg
jge
mov
sbb
cltd
stos
outsl
jnp
and
in
arpl
push
jecxz
data16
sub
call
movsl
adc
testb
flds
js
mov
cli
sahf
fs
mov
dec
je
scas
pop
ret
leave
xorb
enter
cmp
stc
or
mov
ljmp
jle
insb
js
popa
or
mov
mov
cmpsl
inc
andl
inc
cltd
jl
cmpsb
ja
out
repnz
arpl
sahf
push
loop
xchg
adc
jnp
xchg
pop
pop
mov
lss
mov
jbe
leave
cs
and
xchg
sub
xchg
imul
popf
adc
jmp
xlat
jle
cmp
or
lods
pusha
inc
sbb
leave
insb
fists
mov
data16
inc
lods
and
sbb
add
push
cmp
mov
dec
out
loope
dec
add
pop
sahf
add
xchg
jecxz
mov
aaa
js
pusha
imul
daa
push
pop
shrb
sbb
leave
xchg
jb
jg
jle
arpl
rclb
ret
mov
test
movsb
imul
test
int
jp
adc
adc
pusha
jmp
lcall
add
arpl
or
aas
inc
in
xchg
test
aam
jne
jge
xorb
jbe
pop
mov
sahf
cltd
jno
icebp
jno
lea
pusha
je
mov
jmp
add
jg
sbb
scas
or
out
pusha
je
enter
xor
sarl
imul
cmp
mov
adc
pop
or
and
cwtl
cmp
xchg
mov
lods
mov
cmp
and
pop
inc
jg
xchg
ja
push
fisubrl
xchg
fdivrl
cmp
jne
adc
popa
jb
jle
mov
add
icebp
cmp
mov
ret
push
dec
popf
andb
out
or
test
rorb
jmp
or
sub
orb
fidivrl
cltd
test
mov
enter
les
inc
gs
shrb
sub
mov
cs
jns
mov
adc
jae
push
les
fimull
xchg
dec
cs
scas
mov
cmc
aad
ja
and
out
xorb
ja
or
into
mov
cwtl
in
pop
stc
xchg
daa
mov
imul
jae
outsb
out
popa
xchg
nop
or
jge
pushf
into
out
repnz
ja
or
pop
jb
clc
out
ror
addr16
negb
aam
xor
xchg
and
ret
jo
jo
jle
jmp
pop
jbe
inc
and
jl
aas
and
add
mov
pop
sub
shll
pop
inc
or
pop
sbb
sub
in
bound
sahf
jno
pop
mov
jo
fstps
lea
inc
jb
ret
mov
and
mov
fwait
mov
push
sbbb
lahf
mov
out
fistpll
adc
sbb
ljmp
adc
pop
push
movsl
push
scas
shlb
leave
imul
adc
cmp
std
pop
push
push
cmp
shlb
xchg
stos
dec
les
int
dec
push
mov
scas
jge
hlt
es
adc
addl
movnti
cli
cmpsl
mov
inc
sub
or
pop
imull
imul
mov
call
xchg
mov
mov
xor
push
sti
shlb
sti
decl
pop
fwait
testb
fsts
mov
jle
jmp
test
div
cltd
shrb
dec
imul
data16
sbb
jp
inc
fistpl
aad
enter
inc
icebp
sub
out
pop
inc
xor
stos
cmpsl
rclb
pop
dec
hlt
dec
add
xchg
call
pop
imul
iret
dec
mov
xchg
fmuls
ja
and
fbstp
mov
out
jge
mov
mov
jno
push
ret
push
push
jnp
daa
repnz
inc
adc
pop
cmpsb
movsl
adc
cmp
loop
mov
push
cmp
call
inc
or
push
inc
add
lods
mov
jno
jle
xor
mov
sbb
dec
cld
cli
inc
inc
xchg
add
mov
push
mov
incb
inc
movsb
mov
and
cltd
sub
push
ftst
lds
add
cli
inc
lcall
xor
and
dec
sahf
xor
int
mov
adc
dec
arpl
push
in
jns
ljmp
mov
orl
cmp
add
out
dec
or
sub
xchg
pop
jbe
pop
dec
int
loopne
inc
inc
xchg
mov
in
jns
push
sub
pushf
std
shlb
xchg
cmp
push
pop
sub
fmull
fwait
out
pop
addb
test
dec
sub
and
loope
push
inc
cmpb
xchg
push
adc
pusha
out
push
or
sti
cmp
sahf
xor
imul
shrl
cmp
push
add
cmpsl
xchg
adc
or
jecxz
adc
add
scas
inc
jle
pop
pop
mov
and
mov
inc
testb
idivb
insb
pop
ja
pop
sub
in
push
cmpb
dec
xor
sub
xor
mov
jb
test
add
cmpb
icebp
das
inc
cmpsb
outsl
jmp
pop
bound
sub
int
and
pushf
jp
mov
or
test
mov
mov
insb
cmp
in
lock
rcll
inc
jnp
push
fisubl
imulb
or
lods
adc
xchg
push
mov
xlat
push
fldpi
push
lds
sar
jo
es
out
dec
pop
cld
push
test
addr16
dec
fldt
lds
insl
xor
dec
pusha
sub
dec
pop
int3
cmp
sub
mov
and
cld
xor
ja
fbld
rol
in
cli
xchg
lahf
iret
mov
mov
xor
jns
loope
dec
arpl
lock
adcl
hlt
mov
stc
dec
pop
gs
test
inc
adc
ljmp
sub
mov
cmpsl
shrl
in
es
mov
ffreep
std
or
xchg
ljmp
inc
aaa
xorl
pop
mov
sti
or
xchg
cs
adc
sub
xor
pop
dec
inc
xor
push
push
lcall
aas
inc
and
in
mov
mov
es
fucomip
imul
dec
cmp
pop
mov
push
dec
xor
sbb
push
cltd
dec
lret
aam
movsl
pushf
cmc
and
xchg
mov
xchg
mov
dec
rol
shlb
addr16
add
enter
push
inc
shlb
xchg
push
movsl
shll
jnp
mov
aad
into
cmc
cld
mov
repz
mov
jl
sub
push
daa
sahf
mov
das
and
pop
pop
lock
insb
dec
nop
test
jb
mov
pop
loope
std
aad
push
or
sbb
int3
fwait
out
mov
mov
mov
inc
cmc
ret
int
mov
mov
popa
sub
inc
cli
pop
pop
adc
imul
ds
adc
push
cmp
sub
mov
pop
jbe
push
out
pop
les
push
ss
dec
mov
insl
ffreep
xor
mov
jbe
mov
iret
scas
xchg
rol
loop
mov
cmp
xlat
bound
sbb
cmc
xor
add
in
ret
std
popa
repnz
cltd
loope
xchg
and
ljmp
js
ret
ds
bound
xchg
pushf
lods
imul
fcom
in
hlt
inc
cmp
push
lahf
sbb
mov
orl
insl
sarl
test
jno
fisttps
shlb
scas
scas
push
bound
and
js
leave
add
sub
out
sub
dec
sbb
adc
hlt
dec
cs
xchg
rcl
imul
and
inc
ja
sub
popa
sbb
cld
sahf
dec
scas
pop
iret
mov
enter
pusha
mov
outsl
shlb
lret
jge
push
add
cli
xlat
int
clc
push
int
cmpb
mov
xorl
dec
dec
dec
and
lret
shr
adc
out
popa
fisubl
cmp
mov
stos
aas
inc
incl
sbb
jg
inc
push
mov
push
mov
cmpb
cmovo
jns
jns
jne
mov
push
je
jmp
sub
push
rol
sar
iret
hlt
mov
test
aam
dec
jl
xchg
filds
pop
cwtl
mov
add
xor
mov
scas
out
push
pop
ljmp
cltd
pusha
sbb
dec
dec
sbb
pop
inc
lods
lock
or
or
cwtl
cwtl
inc
adc
stos
mov
pop
dec
and
sub
jg
pop
inc
arpl
jmp
inc
mov
or
push
dec
cld
mov
jle
into
inc
call
push
or
and
adc
movsb
jns
mov
pop
dec
imul
inc
mov
in
aaa
mov
cmpsb
call
fwait
enter
rol
ja
xchg
dec
rol
inc
mov
clc
shrb
lahf
outsb
sti
push
repnz
mov
dec
stos
xchg
dec
add
sub
fdivs
movsb
int3
adc
mov
pop
mull
adc
fwait
scas
inc
sti
jp
aam
dec
push
arpl
stc
les
cs
and
ss
lcall
icebp
mov
ja
adc
mov
inc
xor
jns
push
dec
or
and
and
dec
mov
dec
aaa
push
jp
lea
cmpl
test
push
pop
mov
jmp
mov
mov
dec
pushf
rcll
loop
sbb
ljmp
xchg
and
nop
dec
or
adc
imul
lock
or
inc
and
repnz
adc
mov
divb
icebp
mov
stos
jne
jecxz
or
sahf
scas
rcll
ret
mov
and
test
pop
cld
fldt
xor
hlt
insb
ljmp
test
pop
out
in
les
out
mov
and
inc
shr
xchg
popf
mov
pop
or
loop
or
push
xor
enter
jnp
jns
ficoml
loopne
inc
mov
push
xor
mov
imul
clc
arpl
adc
push
cmpsl
popf
in
das
xchg
and
adc
inc
sbb
inc
movsb
idivb
int
and
test
cmp
pop
aam
addr16
arpl
xchg
ss
lods
imul
and
pop
aad
sbb
add
jb
sbb
inc
bound
out
mov
dec
mov
inc
mov
adc
xlat
push
jb
jns
xor
and
and
mov
in
pop
dec
js
dec
clc
mov
push
jo
mov
aam
out
add
rcll
and
xor
flds
sbb
push
and
pop
cmp
xor
inc
and
sub
mov
rcl
shlb
rorb
mov
lds
cmc
jo
mov
stos
insl
mov
xadd
lock
insb
movsl
cld
test
pop
add
or
lret
out
mov
mov
xchg
mov
pusha
xchg
and
push
and
imul
jg
pop
nop
pop
mov
loop
xchg
out
add
or
push
pusha
dec
dec
daa
inc
icebp
xorb
jg
xor
nop
sub
mov
repnz
inc
roll
push
jecxz
nop
sub
js
imul
fisttpll
sbb
cwtl
stos
inc
iret
ljmp
out
push
and
ret
jns
sbb
mov
jg
sbb
sti
add
and
push
sub
loopw
stos
adc
lds
rcrl
fistpll
push
test
imul
movsb
addl
data16
add
movsb
cmp
lret
popf
sub
call
ret
push
sub
imulb
dec
dec
cmovns
int3
fcmovnbe
addb
insl
cmp
stos
cmp
les
dec
mov
jp
jo
out
lods
repz
xor
add
push
shlb
dec
xchg
fs
sub
jns
sub
xchg
jbe
fs
mov
scas
xchg
xchg
test
adc
imul
inc
add
fxch
and
adc
pop
divl
dec
inc
inc
jne
mov
arpl
xor
jo
mov
ret
fldt
xchg
jae
jg
jb
push
inc
push
jno
and
fadd
fistpl
push
sbb
add
cmp
mov
cmp
test
jns
mov
js
add
test
adc
or
sti
in
les
decb
rcrb
sub
lock
lret
int
or
jo
sub
nop
add
cmpl
jecxz
and
aas
lret
mov
mov
call
dec
int3
test
into
jecxz
ja
in
xchg
dec
shlb
sbb
sub
cvtps2pi
or
mov
nop
cli
jns
andl
int
xchg
aam
adc
inc
adc
lea
pop
addr16
inc
enter
dec
push
iret
push
jbe
mov
pop
pop
loop
cmp
xchg
mov
or
movsb
mov
dec
mov
mov
and
movl
sahf
aad
inc
aaa
dec
insl
push
mov
leave
daa
imulb
sbb
mov
adcb
sarl
or
mov
fmull
outsb
outsb
pop
lea
aam
es
xor
xlat
rorb
enter
movsb
das
enter
jle
outsb
jne
addb
jl
pop
int
and
dec
adc
push
jle
repnz
xor
sbb
clc
movsl
xchg
popa
pop
pusha
push
test
clc
dec
fldt
mov
ret
cli
push
scas
data16
movsl
pop
clc
call
gs
sbb
hlt
mov
js
adc
fwait
dec
sahf
cmp
setbe
dec
push
mov
pushf
mov
test
lret
dec
sub
dec
inc
and
lods
scas
cwtl
out
xor
clc
dec
in
fwait
jp
mov
bound
pop
sbb
lods
addb
movb
xchg
sbb
cmp
shlb
fisubs
or
insl
nop
jno
sarb
jl
and
mov
adc
mov
add
daa
jbe
insl
xor
in
push
stc
push
mov
pop
push
add
sar
fimull
xchg
insl
xchg
cmp
addr16
sti
out
mov
clc
push
ret
std
xlat
mov
inc
inc
cmp
xchg
dec
shrb
sarl
jmp
mov
fistps
dec
xchg
sub
fistps
mov
lods
pop
test
xor
inc
negb
jmp
adc
test
xor
mov
sti
nop
cmpsl
aaa
inc
inc
jnp
and
aas
fisttpll
jbe
cli
addr16
jne
add
jbe
loop
pushf
sbb
fcompl
shlb
pop
dec
and
and
out
lea
aas
push
in
out
push
xor
int3
gs
pop
je
sbb
push
stos
pop
push
add
pop
inc
or
push
xor
mov
xchg
mov
bound
cmc
lock
stos
cmp
test
cmp
mov
fsts
imul
mov
inc
js
push
mov
xor
or
dec
mov
adc
adc
xor
test
mov
pop
cmp
jb
ret
mov
lea
push
fstp
leave
and
inc
mov
sti
aam
sahf
xor
and
xor
pop
xchg
pop
and
mov
out
cmp
dec
out
nop
loopne
std
mov
sbb
pop
pop
fwait
in
mov
xchg
cmp
cltd
mov
out
negb
addb
mulb
push
pushf
fnstcw
scas
setae
in
and
movsl
mov
xor
jecxz
pop
lock
shrb
lea
sti
lock
shll
pop
jo
cmpb
add
inc
mov
jp
adc
pop
add
cmp
inc
jge
pcmpeqb
repnz
push
popf
sub
mov
cld
in
lret
loopne
dec
xchg
cmp
push
pop
mov
xorb
mov
insl
and
mov
popa
lret
push
lret
cli
xchg
fcmovb
jbe
mov
sub
js
mov
lcall
or
jl
or
shll
cmp
ljmp
pop
cmpsl
pop
pop
mov
xchg
cwtl
imul
sbb
add
push
aad
js
popf
sbb
into
ret
mov
ja
mov
mov
pop
rcl
or
or
cltd
fs
mov
stc
jl
mov
cli
lahf
popf
arpl
aaa
pop
pop
mov
push
das
jge
mov
js
mov
pop
mov
push
dec
jnp
gs
lret
jecxz
out
aaa
loopne
mov
stos
lock
sbb
int3
fdiv
leave
cmp
pop
fcmovbe
or
pop
mov
xor
loop
lods
loope
jo
dec
inc
cmp
jno
or
mov
ljmp
mov
sbb
mov
mov
xor
pushf
stos
movsb
push
in
sbb
pop
aad
gs
add
scas
pop
push
lods
mov
ljmp
mov
js
cmpsb
add
xor
ret
mov
lds
scas
sbb
fprem1
sbb
sub
sbb
aam
sub
fiaddl
mov
stos
cmc
in
std
xlat
mov
jno
inc
and
sbb
mov
mov
and
sti
push
adc
xor
adc
push
mov
jb
repnz
mov
sarb
jbe
pop
test
mov
jp
add
sbb
cmp
iret
sbb
fs
lret
fsubs
and
dec
pushf
push
cmp
or
loopne
iret
push
hlt
sub
call
pop
mov
push
inc
movb
icebp
cmc
cmp
dec
xchg
lcall
cmp
pushf
push
mov
xchg
insl
sbb
nopl
jo
or
jg
pop
inc
enter
or
in
jno
das
loop
insb
adc
shrl
lret
cmp
cmp
pusha
mov
fistpll
shll
popf
filds
mov
pop
mov
js
ja
popa
cmp
dec
dec
mov
outsl
in
mov
xchg
sahf
cwtl
jb
push
jne,pn
rorb
arpl
fwait
mov
xchg
cmp
mov
in
int3
sbb
add
and
or
cmp
mov
aaa
mov
sub
lret
jns
jns
mov
xor
add
mov
xchg
lret
jbe
inc
pop
mov
jne
test
xchg
dec
jle
jp
sub
dec
mov
repnz
aas
shr
aas
lea
or
add
punpcklwd
scas
imul
inc
je
and
jge
outsl
and
insb
inc
fistl
mov
push
mov
pop
int
mov
sbb
loopne
jno
jl
inc
pop
int
fsubr
ljmp
push
loop
xor
xchg
bound
fisttpl
adc
xchg
ret
mov
sub
mov
loope
or
pop
or
cmc
sbb
inc
cli
mov
std
xchg
push
arpl
jle
xchg
inc
lds
out
enter
imul
pop
std
push
add
out
cmpsb
pop
mov
or
mov
xor
jne
lods
push
and
std
dec
push
movsl
push
and
roll
mov
in
insl
je
xchg
sub
inc
cwtl
insb
loop
or
or
cmp
pop
xchg
jae
push
in
xor
mov
fdivs
xor
cltd
push
and
lret
sbb
xorb
jle
cli
pop
add
das
int
in
call
ffree
pop
cwtl
filds
dec
test
in
leave
pop
out
xchg
pop
nop
pusha
outsb
push
push
scas
das
scas
add
insl
lret
dec
pop
loopne
adc
sub
push
js
sbb
xor
xor
stos
add
pushf
leave
mov
lahf
mov
outsl
xor
xor
out
add
pop
push
lret
ret
fstp
mov
pop
push
insl
fistl
js
cld
push
negl
jnp
inc
inc
lods
sbb
sbb
pop
mov
pop
push
aam
scas
aaa
mov
pop
ljmp
inc
xchg
pop
bound
jmp
jle
je
inc
jbe
pop
xchg
mov
xchg
add
sarl
insb
scas
jb
pushf
imul
stc
xchg
and
inc
pop
mov
lods
jecxz
mov
push
icebp
xor
aaa
test
and
iret
dec
loope
mov
dec
xor
and
pop
mov
out
mov
inc
push
test
mov
test
repnz
fsubrs
xchg
repz
cmp
into
repnz
loope
cmc
jns
aad
pop
je
popa
push
or
fistpll
adc
jne
in
sahf
loopne
fdivl
or
rol
repnz
aad
sbb
sub
jno
inc
xor
clc
ret
fnsave
movsl
adc
das
aas
lret
jns
int
mov
int3
and
lret
mov
push
int
gs
movsl
shl
cmp
pop
cwtl
int
lds
lcall
pop
je
jo
or
mul
xor
and
cwtl
outsl
stc
pop
xchg
aad
out
icebp
dec
test
es
int3
cmp
adcb
jg
jo
shl
push
mov
pushf
adc
mov
and
outsb
inc
mov
adc
inc
mov
jno
mov
lds
notl
or
into
sti
and
sbb
loopne
xchg
pushf
mov
faddl
ljmp
cmovns
cmp
pushf
push
ljmp
push
xor
sub
push
ficomps
dec
push
or
movsb
mov
lock
cmpsb
fidivrl
std
hlt
outsb
and
and
fnstenv
repnz
imul
jns
lea
adc
add
pop
mov
push
mov
cmp
lcall
xchg
clc
add
sub
hlt
loope
lahf
dec
dec
fstps
push
sbb
addb
sysexit
int
inc
lea
add
cmpsb
sub
mov
shlb
sahf
dec
cs
movsb
sbb
orb
xchg
adc
negl
scas
cmp
mov
fldl
loopne
fldt
inc
outsb
inc
or
lcall
mov
gs
mov
mov
cltd
mov
shlb
pop
jns
sub
and
jbe
jae
pop
pusha
fld
cmpsl
mov
mov
jno
bound
push
cwtl
aad
icebp
cmp
push
imul
mov
jle
fadds
mov
popf
mov
ja
fidivs
cmp
hlt
sahf
pop
xchg
stc
ret
mov
mov
clc
test
lahf
test
adc
ret
or
adcb
push
dec
icebp
sbb
je
lahf
mov
mov
push
rcl
out
xchg
outsb
inc
push
psubq
fwait
adc
lcall
enter
sbb
ja
scas
dec
sahf
ds
mov
out
imul
jge
xlat
push
test
cmpsb
test
push
lock
inc
popf
cmp
out
rcrb
cmp
mov
roll
stc
aad
loop
lds
lcall
inc
fwait
jmp
cld
push
jae
out
pop
in
clc
clc
repz
lods
xor
xchg
imul
lods
stos
pop
andl
sub
adc
sub
mov
mov
inc
out
lds
jp
mov
push
push
and
imul
cwtl
pop
clc
pop
inc
test
aam
lock
scas
test
stos
push
sub
cwtl
aaa
daa
mov
add
lahf
cmp
add
test
push
test
stos
adc
mov
mov
adc
jecxz
inc
adc
je
stos
js
test
or
adcl
jb
clc
icebp
pop
inc
inc
movsl
and
add
cli
sub
push
cmpsl
inc
jp,pn
mov
pop
add
enter
jl
loop
loop
pop
cld
icebp
jns
mov
ret
repnz
lods
push
out
lds
push
iret
enter
popa
pushf
leave
cltd
or
in
js
and
mov
dec
lret
dec
out
repz
insl
or
cltd
sbb
mov
pop
jp
call
dec
cltd
notb
xchg
bound
lea
dec
add
mov
lcall
loop
cmp
cwtl
lahf
xor
push
icebp
enter
jle
sbb
clc
jp
fwait
jp
or
scas
inc
adc
mov
mov
insb
mov
repnz
enter
inc
jg
fistl
and
fldt
ljmp
and
ds
jne
pop
inc
stc
push
jl
into
mov
cmpsb
movsb
stos
pop
movzbl
rcrb
add
mov
adc
rolb
mov
pusha
je
xor
call
mov
jb
jl
bound
pop
fiaddl
aad
mov
sbb
push
cmp
enter
xlat
push
stos
xlat
dec
and
sarl
insb
pop
fucomp
imul
push
xchg
js
sbb
adc
push
dec
sbb
push
mov
push
ds
das
enter
and
mov
push
adc
push
insl
popa
or
aas
cmpsb
popf
cmp
adc
mov
jp
xchg
adc
xchg
popa
mov
out
mov
aas
jge
mov
rolb
test
sub
cmpsb
std
push
sub
dec
and
mov
add
push
lret
jne
aad
rcrl
loope
inc
dec
xchg
jns
ret
out
mov
inc
lods
cmp
sbb
pop
sbb
pop
les
xchg
mov
icebp
or
out
sarl
jbe
or
lock
fadds
imul
sub
push
cmp
sub
or
push
sarb
inc
mov
mov
out
movsb
or
in
stos
movl
subl
jno
adc
sysret
sbb
sbb
lock
jb
xchg
or
dec
mov
jne
lret
lcall
jl
sbb
negb
xlat
push
jbe
jg
dec
dec
or
fisubrs
dec
mul
jge
sub
insl
xor
outsb
in
loop
push
push
loopne
out
mov
cmp
rcrl
dec
pop
sub
les
or
aaa
jl
push
add
jae
mov
mov
lock
pop
repz
mov
int3
fbstp
loopne
std
mov
adc
test
lahf
ds
xor
pushf
add
bound
mov
push
or
movsl
popa
out
cmp
loop
and
shl
imul
mov
cs
or
xor
inc
insb
shlb
add
pusha
adc
dec
in
and
adc
mov
pushf
jmp
arpl
out
push
icebp
cwtl
mov
das
inc
pop
mov
ja
ljmp
ss
xorb
pop
je
inc
mov
and
fimull
pop
mov
and
push
jmp
fdivl
adc
add
loopne
je
adc
repnz
imul
and
mov
dec
xor
jno
inc
and
mov
pop
mov
mov
xchg
mov
lret
jl
sbb
dec
out
popf
adc
scas
push
out
xor
add
jmp
inc
pushf
mov
xchg
cmpsb
scas
sub
clc
sub
addr16
mov
aad
shlb
adc
ret
gs
mov
aam
dec
into
ljmp
inc
pop
outsb
aam
mov
and
add
fsubl
pop
mov
cmp
jns
sbb
or
stos
push
jnp
shlb
and
inc
pop
rcr
shll
mov
cmp
pop
jl
adc
cwtl
ret
outsl
daa
cmc
mov
fidivrl
jl
sbb
loop
mov
mov
xor
xchg
xor
out
push
fcmovne
stc
iret
inc
aaa
sub
outsl
notb
xor
cld
test
test
mov
pop
cmp
cltd
xchg
in
xchg
add
lahf
out
push
add
adc
mov
pop
lahf
pop
xor
mov
ret
and
xor
fsts
push
or
fs
cli
mov
inc
jnp
jp
daa
xchg
scas
push
or
dec
les
mov
jl
sbb
sub
mov
jl
cmp
repnz
ja
pop
pop
shlb
xchg
lahf
xorb
cli
and
pop
pop
xchg
imul
xor
mov
dec
cs
sbb
jl
cli
lahf
inc
stos
xor
adc
jle
push
mov
rep
xchg
popa
adc
cltd
xor
or
repnz
lret
outsl
lret
scas
sbb
mov
rcrl
cmpsb
mov
mov
insb
subb
xchg
jns
xor
dec
fmull
pop
das
call
cmpl
sarl
jnp
ss
mov
sbb
pop
adc
call
sbb
arpl
mov
add
sbb
jno
push
pop
xchg
ds
popa
xchg
mov
std
ret
cmpsb
lds
adc
adc
jno
add
dec
add
mov
out
pop
push
jmp
sahf
sysexit
cwtl
cld
pop
sub
pusha
mov
mov
dec
sbb
fadd
adc
add
jp
mov
test
lret
pop
mov
int
fistps
xor
dec
push
jns
out
cmp
loop
jb
loop
push
out
dec
jecxz
mov
adc
xchg
sub
jns
lock
sub
dec
jb
xchg
push
mov
mov
and
gs
into
in
in
pop
mov
mov
sbb
imulb
mov
xlat
push
mov
test
lds
addb
push
nop
stos
in
sti
neg
mov
das
es
adc
push
test
mov
ljmp
lock
push
sbb
mov
pop
adc
mov
sbbb
call
push
or
mov
dec
test
cs
push
xchg
sub
xchg
lea
dec
decb
popa
ficoms
fidivrl
mov
out
lock
push
sub
dec
mov
mov
bswap
mov
mov
pop
out
xchg
subb
cmc
stos
stos
dec
xchg
fmuls
fsubrl
iret
in
adc
mov
mov
clc
ret
xchg
cltd
cwtl
std
jmp
push
icebp
das
xchg
stos
cmp
shl
insl
insl
inc
mov
arpl
mov
push
jb
ds
inc
pop
aas
mov
rcll
xchg
addr16
outsl
xchg
mov
js
or
sbb
fistpl
inc
ljmp
cld
xchg
stc
dec
push
sti
cmpsl
lea
jae
push
dec
xchg
mov
sbb
cmp
sub
mov
andl
inc
pushl
call
xchg
adc
repz
inc
testl
and
mov
imull
or
sbb
ficompl
xchg
xchg
loope
stc
stos
sar
lret
fs
mul
aas
mov
stc
mov
aad
addr16
fs
fimuls
xor
mov
orb
rorb
mov
adc
lcall
inc
add
movsb
adc
mov
and
scas
push
popa
pop
mov
push
outsb
cwtl
inc
sahf
mov
js
jp
xchg
xlat
jno
xlat
mov
mov
cmc
imul
add
mov
out
inc
inc
or
mov
cmp
mov
push
or
sqrtps
xchg
mov
scas
sbb
ds
push
dec
pop
and
mov
aam
mov
rcrl
scas
incl
in
mov
not
dec
adc
dec
mov
outsb
testl
mov
add
sbb
push
xor
pusha
cs
cmp
loop
test
fiadds
inc
push
nop
xchg
mov
mov
jne
ja
mov
das
lea
cltd
popf
imul
mov
mov
iret
add
out
mov
jg
cmpsl
push
dec
jg
xor
mov
cmp
push
xchg
sahf
insb
jge
mov
mov
or
testl
mov
cmp
add
jne
dec
dec
cmp
mov
jmp
int3
fisttps
dec
cld
xchg
mov
inc
ret
insl
mov
iret
pop
bnd
int3
aad
pop
adc
jmp
test
mov
pop
mov
add
adc
rclb
fwait
adc
pop
fidivrs
lahf
pop
adc
xor
push
mov
cmpsb
dec
xor
fstpt
out
aad
ret
cli
xor
lods
inc
jp
cld
mov
push
inc
dec
jne
mov
outsb
mov
lret
sbb
cli
mov
jb
shr
lret
rorb
inc
mov
incl
inc
add
jno
jne
ljmp
xor
jno
or
test
mov
loop
scas
xchg
inc
or
mov
sahf
mov
sbb
xchg
das
jne
stos
mov
lret
es
or
xchg
xchg
xchg
mov
lea
outsb
data16
mov
insl
ffreep
idiv
push
pop
lcall
sbb
lret
call
lods
stos
aas
add
ret
pop
jne
jg
pop
ret
jno
mov
or
inc
xchg
jg
mov
jne
in
adc
or
push
stos
cwtl
and
jb
insl
add
xor
add
mov
adc
sub
jo
in
add
cwtl
bound
sbb
pop
cmpsl
je
paddusw
and
pushf
mov
xchg
and
adc
mov
jmp
adc
addr16
lds
push
stos
push
adc
sahf
je
adcb
adc
dec
inc
incb
stos
push
or
pop
imul
ljmp
mov
inc
or
inc
cmp
mov
jnp
mov
clc
je
xor
loopne
pop
sbb
jae
dec
data16
das
jmp
daa
mov
imul
jge
test
jae
xchg
or
sub
mov
pushf
sbb
int
xchg
ret
mov
mov
fadd
ret
mov
push
movsb
cmp
leave
or
clc
mov
test
push
mov
ss
cmp
adc
cmpsb
dec
in
dec
fcmovbe
inc
push
rorb
dec
lret
mov
loop
out
lret
sbb
pop
lret
gs
or
aam
icebp
pop
mov
mov
out
inc
ror
push
mov
or
aad
testl
lds
ret
add
les
xor
xor
sub
insl
or
inc
insb
jne
stos
cmpsb
adc
insb
jmp
fdivl
inc
or
or
nop
inc
inc
add
add
sbb
cmp
jo
xchg
sahf
adc
jl
xchg
mov
sbb
add
pusha
mov
mov
lds
pop
out
jbe
test
mov
sub
jns
in
or
pop
mov
xchg
shlb
and
add
mov
rorb
add
and
insl
cmp
movsl
loop
mov
mov
add
or
les
cltd
addr16
out
nop
mov
lea
dec
xlat
jmp
stos
xor
push
lods
loopne
xchg
fmuls
repnz
sbb
pop
sub
add
ljmp
lds
movsb
inc
imul
push
jno
jns
jecxz
iret
sbb
insl
add
out
dec
insb
in
cs
push
push
mov
push
push
sub
mov
je
out
movsl
std
cmp
fldenv
inc
popf
cltd
dec
xor
xor
mov
lret
mov
scas
mov
movsb
sub
sub
jnp
repnz
xchg
xlat
call
sbb
mov
pop
xchg
jl,pt
inc
cli
push
jmp
push
or
ds
cmp
pop
test
dec
mov
shrl
jo
xlat
xchg
or
out
iret
push
mov
ret
jecxz
imul
push
pop
clc
aam
mov
pop
jo
sbb
lahf
or
adc
enter
pop
clc
imull
mull
frndint
ret
adc
aas
pop
fs
ds
dec
inc
sub
lods
push
cmp
lock
or
xchg
bound
out
push
mov
mov
ret
xchg
stos
cmp
insl
mov
jge
push
xor
lcall
pushl
jmp
xchg
testb
push
xor
sub
mov
shll
out
and
ds
shlb
inc
int3
ret
jl
movsl
push
add
jl
pop
fbld
jecxz
repnz
adc
sub
jmp
and
cmp
dec
pop
cwtl
sub
test
out
jb
enter
addr16
xchg
mov
dec
shll
hlt
push
cmp
mov
out
push
jne
jns
pop
pop
pusha
jmp
fiadds
cld
cli
loopne
icebp
out
fildll
pop
imull
nop
je
or
stc
js
test
xlat
inc
sbb
aas
mov
sub
push
sbb
pop
leave
lcall
mov
enter
jnp
pop
ja
rcrb
lcall
movsb
std
jnp
xor
pop
insb
repz
or
imulb
dec
dec
jae
cli
lods
outsl
test
xor
mov
mov
roll
out
push
fs
fistpl
inc
lock
xor
lods
cmpb
insb
jb
xchg
pop
in
push
rol
or
shr
push
int
xor
xor
xor
dec
cld
mov
lcall
pop
jne
mov
jle
lret
jne
add
inc
cmp
outsb
cld
mov
aam
addl
push
enter
stc
sarl
jb
addb
jmp
mov
andb
out
push
jge
inc
popa
insl
pusha
jb
add
jmp
icebp
jecxz
xchg
add
es
adc
test
rorl
lcall
jg
pusha
mov
adc
xlat
clc
outsb
pusha
xor
fidivs
inc
or
pop
pushf
pop
and
icebp
ror
aad
mov
adc
ja
dec
pop
pop
push
shrl
jae
push
insb
pop
mov
xchg
test
mov
or
inc
or
loopne
cmp
jmp
jmp
push
adc
clc
xchg
jae
mov
idivb
adc
xchg
jnp
fsts
push
xchg
fimuls
cmp
das
push
xor
insl
les
add
scas
or
in
icebp
pushf
outsb
pop
je
jns
aaa
pusha
adc
lahf
test
adc
les
lret
call
aad
jg
cmp
int3
push
xor
pop
or
add
jecxz
push
repz
leave
mov
pop
and
in
or
cmp
push
cmp
adc
icebp
and
sbb
xor
test
sbb
inc
cmc
and
jbe
add
and
and
jl
adc
mov
lret
xor
insb
or
and
rol
inc
pop
mov
pushf
ds
mov
inc
aaa
popf
xor
out
outsb
sti
sar
sub
imul
push
xor
out
es
sbb
ret
or
lret
inc
fstpt
in
push
popa
adc
in
fsubs
push
aad
mov
inc
out
sub
add
aad
cmp
xchg
cli
rcrl
sbb
fldt
pushf
lcall
jns
push
jle
inc
xor
jle
mov
andb
cmp
cmp
jo
push
idivl
ror
mov
icebp
fstl
das
insl
add
xor
inc
pop
movsl
and
jecxz
ja
cmpsb
dec
sub
scas
push
aad
dec
add
in
add
test
sarl
leave
in
sarb
sahf
jecxz
ja
iret
aaa
fwait
jb
mov
mov
sahf
subl
fst
ljmp
das
mov
lea
stos
add
and
pop
mov
xor
inc
xchg
imul
cmp
push
add
mov
or
shlb
mov
out
sub
ret
dec
mov
in
lds
jle
mov
ret
inc
dec
sbb
xor
sbbl
popa
inc
fldl
ss
jo
cmpsl
test
and
fldl
mov
cmpl
bound
in
imul
sbb
jmp
std
in
mov
pop
ja
inc
call
lret
mov
test
sub
xchg
adc
xchg
aaa
cltd
cmpsb
jp
jge
add
jo
cmp
xor
scas
pop
ret
jmp
roll
movsl
addr16
push
pop
sahf
jns
cli
and
jmp
sub
ds
inc
sbb
xor
fstl
out
jl
shll
nop
xorb
enter
jo
xor
push
push
mov
push
xchg
movsb
insl
adc
push
push
xchg
loope
arpl
cltd
xchg
les
cltd
js
repz
movsl
inc
lcall
ss
sub
push
mov
stc
test
dec
add
scas
or
pop
push
xor
mov
cltd
shl
cwtl
xchg
xchg
sbb
loope
int3
or
dec
lcall
orl
std
lock
add
sahf
xchg
sub
mov
mov
lret
mov
nop
push
lock
fisubs
pushw
out
xor
xchg
imul
icebp
sub
add
les
push
xchg
cmpsb
daa
dec
mov
inc
push
push
push
jne
cs
adc
dec
das
lret
mov
std
ficompl
ds
and
add
push
xor
dec
mov
jbe
xchg
add
pop
mov
xor
into
xchg
leave
ljmp
inc
ds
outsb
push
notl
sub
imull
and
xchg
insl
push
push
bound
push
mov
adc
mov
mov
dec
xlat
push
in
cmpsb
insl
or
sahf
mov
aaa
lock
adc
inc
cltd
push
adc
xchg
leave
je
scas
sarl
into
cli
push
ss
mov
cmp
out
addl
push
pop
jb
and
dec
ljmp
scas
xor
cmp
mov
and
out
pop
enter
cmp
sbb
pop
imul
fbstp
les
dec
pop
or
pushf
xor
cli
nop
xorl
rcl
jge
sbb
mov
jne
jae
mov
out
jns
pop
cmpsb
daa
sbb
adc
and
adc
pop
pop
inc
daa
clc
test
test
test
pop
and
fcmovu
aas
adc
mov
sub
mov
xor
sbb
cmp
les
xor
aam
adcb
sbb
adc
sbb
out
xor
pop
sti
loop
stc
sbb
int3
clc
jl
mov
pop
xchg
in
in
mov
shl
jae
imul
cmpb
enter
cmpb
and
cmp
pushf
cmpsl
adc
inc
inc
pop
add
mov
sub
addb
jl
xchg
pop
mov
fistps
int
add
pushf
xor
rorb
mov
bound
mov
add
jmp
das
jno
leave
and
adc
lret
adc
and
xor
outsb
add
aad
xor
sti
or
mov
or
stos
pop
ja
clc
dec
push
fdivr
or
filds
test
ret
shl
push
outsl
outsb
pop
mov
jne,pt
cmc
call
pop
fists
xor
rcrl
enter
pop
fadd
das
fisttpl
mov
outsb
outsl
out
enter
lods
js
xchg
mov
pop
push
sarl
sbb
cmc
shr
in
adc
mov
mov
ljmp
test
sbb
into
mov
int3
sbb
mov
lods
inc
xor
aad
movsl
inc
fists
sub
jp
xchg
dec
push
push
adcl
loop
sub
dec
pop
lret
cmp
mov
mov
inc
idivl
dec
xor
adc
cmpsb
mov
mov
add
lret
sub
inc
add
adc
dec
jle
mov
xor
jl
ret
inc
add
jnp
aad
ds
je
pop
aad
aas
cltd
jnp
mov
mov
push
stos
inc
sar
push
insb
xchg
dec
pop
dec
popl
mov
xchg
lret
pop
testl
xchg
mov
dec
lods
pop
out
inc
mov
adc
mov
mov
pop
call
bound
aaa
test
dec
dec
mov
dec
adcb
xor
pop
add
or
mov
jne
sbb
stos
lods
mov
push
push
insl
stos
es
adc
scas
cmp
cwtl
adc
mov
repz
sbb
clc
cld
fisttpll
inc
push
into
outsb
enter
cmp
xchg
cmp
lods
int3
jb
cmpsl
bound
inc
scas
scas
nop
int
and
add
orl
out
mov
mov
imul
dec
arpl
inc
mov
sbb
sub
sbb
popf
cmp
jp
adc
push
inc
sub
lea
sbb
les
je
stos
sbb
sub
mov
repz
faddl
pop
jecxz
cwtl
into
dec
sahf
mov
test
mov
pop
and
std
dec
dec
je
sub
add
cmp
sbbl
fmulp
jbe
stos
push
stos
les
push
push
mov
mov
fidivrs
in
cs
or
pop
and
sub
cltd
movsl
shr
pop
sbbl
dec
add
inc
repz
stos
jg
cmp
aas
jae
outsl
faddl
aad
shrl
adc
call
or
add
inc
push
jae
xchg
pop
ret
xchg
xorb
inc
and
sbb
imul
jmp
lds
and
sbb
pop
test
push
mov
fbstp
aas
sbb
or
stc
and
repz
mov
shlb
std
fldcw
incb
in
xlat
les
and
cmp
fisttpl
out
mov
cmpsb
mov
clc
stc
or
incl
fdivr
test
adc
jl
dec
lock
mov
out
jns
loop
mov
or
cmpsb
fincstp
mov
xchg
test
aaa
lea
dec
fsubp
bound
dec
or
in
dec
js
fdivrs
adc
pop
pop
es
mov
mov
call
cmp
cmp
aad
dec
sbb
popa
add
jl
mov
adc
shr
adcb
ljmp
add
out
adc
xor
cmp
xchg
pop
mov
push
out
jno
push
sub
inc
gs
test
mov
and
xchg
xor
scas
call
subl
and
jnp
into
into
stos
sbb
jl
pop
jmp
adc
pop
sbb
lcall
mov
sub
mov
out
movsb
ret
outsb
push
jb
cmp
neg
icebp
hlt
inc
push
fisttpl
dec
mov
sbb
mov
cmp
push
adc
jecxz
add
cmc
outsb
adc
mov
sbb
cmp
add
push
mov
jecxz
and
or
ret
das
fucomi
loopne
pop
mov
mov
xchg
outsb
je
rol
cmc
pop
mov
jge
call
mov
clc
aas
out
jl
pop
into
fs
cmp
push
sub
or
dec
cmp
jbe
jmp
fsubrp
push
mov
pop
cmp
rcr
test
imul
cld
inc
or
dec
pusha
cmpsl
add
mov
icebp
lods
les
popl
outsl
adc
mov
lods
pop
pop
addr16
sub
adc
rcll
pop
das
cmp
idivl
push
test
mov
and
arpl
pop
ds
scas
cli
in
mov
push
or
cmp
ret
mov
mov
push
inc
leave
lcall
lods
add
cld
xchg
lret
sti
sbb
aam
outsb
fwait
cmp
fiaddl
not
mov
xor
xchg
fwait
aas
push
dec
lcall
cmc
lcall
jae
mov
sub
sbb
dec
mulb
nop
xor
cmp
shrl
dec
xchg
and
mov
jle
lahf
std
das
lock
add
mov
mov
mov
mov
sbb
dec
mov
push
xchg
inc
mov
or
dec
bound
data16
add
mov
push
pop
sub
dec
cmpsb
mov
icebp
out
sbbl
mov
bound
mov
pop
jno
xor
push
stc
orl
lret
nop
in
popf
sbb
lcall
push
jp
inc
pop
mov
fbstp
jmp
and
out
adc
jg
pop
sbb
mov
push
outsl
les
sub
leave
add
inc
cmp
push
pop
jg
lret
mov
cmp
jge
mov
aaa
jne
stos
or
mov
sarb
lret
xor
into
adc
sub
divb
and
arpl
push
arpl
es
mov
inc
in
push
jecxz
mov
jb
xchg
scas
fcoms
scas
mov
xor
push
mov
sbb
pop
xor
into
lock
fmuls
adc
and
in
scas
adc
aam
jns
dec
mov
clc
scas
jnp
dec
fld
roll
test
mov
mov
and
ljmp
dec
cmp
stos
xchg
pop
sbb
in
scas
pop
in
lret
movsb
mov
pop
popf
out
arpl
jg
faddl
sub
cmp
pop
adc
mov
mov
out
xchg
rcrl
lods
adc
and
popa
xor
sarl
jae
andl
ds
jno
inc
xor
push
nop
flds
jecxz
push
cmp
cmp
add
xor
sub
and
inc
popa
movsb
call
mov
push
fisubs
add
and
sti
shl
test
out
popf
sbb
sbb
sbb
repz
daa
mov
xor
aaa
jae
pop
mov
idiv
lods
fistpll
xor
shrb
lock
lods
out
insl
lock
mov
xorl
ret
xor
sbb
xchg
ret
push
bound
mov
adc
out
pop
std
xchg
pop
inc
sbb
lds
and
push
mov
loope
mov
pop
sahf
mov
and
hlt
dec
or
add
lret
test
and
pop
popf
dec
outsl
test
dec
fnop
push
shl
lods
imull
jmp
jne
add
mov
jmp
stc
test
divl
cmp
push
xchg
movsb
xchg
jp
and
cmpsl
call
pop
mov
popl
dec
lahf
xlat
out
daa
xchg
mov
xchg
jg
jl
xor
popa
enter
mov
int3
push
popf
cwtl
mov
ret
inc
add
je
shrl
fistps
push
mov
shrl
push
pushl
icebp
stc
jne
inc
pop
call
movsb
negl
fcmovnu
mov
pusha
ljmp
sbb
imul
mov
nop
cmpb
aam
xor
xlat
inc
mov
pop
mov
add
xchg
pop
adc
les
mov
lahf
cmp
mov
pop
sub
or
mov
inc
adc
and
xor
call
and
ror
je
pop
inc
cmc
adc
sub
xchg
outsl
and
leave
push
scas
lods
rolb
lods
out
mov
insb
ss
mov
pcmpgtb
je
xlat
pop
fdiv
stc
test
mov
and
scas
gs
xor
mov
mov
add
jne
addb
sub
xchg
mov
mov
cwtl
loopne
mov
xchg
shlb
sbb
jbe
jns
fsubs
push
rcrb
adc
inc
arpl
push
xchg
mov
add
repz
pop
arpl
jmp
mov
xor
or
jnp
xchg
jo
roll
pusha
andl
sub
mov
wrmsr
loopne
jge
mov
or
orl
mov
mov
shlb
movsl
int
xor
mov
hlt
movsl
aam
cwtl
ret
push
outsb
jg
loope
enter
add
pop
es
sti
leave
adc
testb
stos
jns
cli
jecxz
jl
mov
out
inc
cmp
jo
adc
fbld
fdivrs
ss
lea
mov
lret
outsb
dec
fcomps
pushf
sbb
jl
mov
mov
jns
inc
in
jo
sti
imul
movsl
push
xchg
cltd
bound
mov
add
shlb
dec
lock
in
add
lds
add
pop
aas
push
mov
loopne
xchg
sbb
lret
cmpsb
xor
out
pushf
subl
movsl
call
rcl
sbb
and
pushf
into
xor
mov
dec
xchg
fisttps
jo
imul
rcll
mov
sub
adc
pop
dec
out
bnd
sbb
stc
dec
cmpsl
aaa
push
loopne
mov
mov
inc
xchg
or
mov
inc
jp
or
ss
or
jnp
leave
jmp
mov
loopne
fists
insb
ret
pop
lods
je
cmp
sahf
js
in
cmpsl
pop
outsl
dec
dec
mull
ljmp
fisttpll
repnz
fs
fdivrl
pop
scas
loope
imul
mov
mov
pop
in
cld
mov
push
es
aaa
dec
xor
cmp
cs
cld
or
insl
lahf
mov
and
dec
out
push
mov
adc
push
or
sti
std
mov
sub
daa
in
negb
xor
lock
insl
dec
jno
adc
adc
xor
push
xor
int3
mov
or
icebp
pop
daa
jbe
xor
in
repnz
ret
jge
std
mov
mov
mov
jecxz
adc
fs
inc
out
pop
mov
xor
clc
in
lods
sub
call
loopne
or
in
jmp
idivl
xchg
subl
fisttps
jbe
jae
lds
sbbl
in
shll
mov
fisttpl
mov
shll
and
scas
cld
push
jno
stos
icebp
xlat
mov
rcll
and
pop
xchg
mov
hlt
lahf
cmp
mov
insl
scas
fistl
les
add
test
sbb
push
mov
xchg
jbe
lds
aad
cli
test
iret
js
in
sub
xchg
mov
mov
push
ljmp
mov
push
dec
cwtl
pop
cmp
scas
xchg
push
xor
xor
cli
mov
mov
lds
pop
std
pop
inc
pop
dec
adc
pop
inc
out
sub
andb
mov
mov
int3
xor
and
xchg
inc
cmp
or
and
sahf
rolb
inc
inc
stc
rorl
js
xchg
cld
mov
sub
lods
xorb
sub
sahf
jnp
int3
pop
mov
push
cmpsb
lods
std
in
mov
jno
rcrl
imul
movl
pop
xchg
mov
mov
fimuls
lret
jbe
sbb
dec
xchg
fisttpl
jp
fdivrl
push
pusha
aaa
inc
rcr
cmp
inc
inc
fcoms
push
sbb
fmul
in
lods
cmp
int3
in
mov
add
pop
xchg
lret
nop
cmpsb
pop
jp
std
add
mov
imul
jl
sub
mov
cmpsb
rcrl
jle
ja
ds
shll
fisubrs
imul
xchg
ljmp
daa
pop
push
int3
lods
js
fstpl
jl
xchg
xor
outsb
movsb
adc
cltd
movsl
ljmp
mov
insb
in
test
xchg
in
mov
in
sarl
jge
sub
aaa
xchg
jl
dec
ret
sahf
mov
pop
pop
jbe
xor
mov
aas
jecxz
ljmp
daa
fisubrl
cmp
pop
andb
aad
dec
xchg
js
sar
mov
xlat
sahf
sub
mov
jno
in
mov
xchg
jg
pop
inc
jns
adc
push
push
push
je
and
push
fdivrs
mov
leave
sbb
fcompl
or
sbb
sbb
xchg
sbb
mov
sbb
nop
sbb
testl
pop
pop
lcall
jecxz
cmp
cmp
adc
das
test
push
jmp
cmp
icebp
mov
pop
sti
sub
stos
jmp
ja
cmpb
xchg
jbe
add
cmp
push
sahf
sbb
push
dec
out
mov
stos
inc
dec
and
sub
insb
cmp
jae
cmp
testl
adc
dec
dec
mov
jnp
lcall
out
fyl2x
adcb
push
test
cmp
mov
loope
push
movsb
dec
cmp
dec
xor
push
popf
sub
jecxz
mov
into
cld
out
fsubrl
lock
fisttpll
divl
jb
jg
pop
addr16
out
leave
push
js
sub
rorb
clc
jmp
cmp
out
xchg
clc
lds
shl
dec
pop
mov
and
or
cwtl
xor
and
popa
add
lcall
cwtl
add
dec
daa
faddl
xchg
adc
push
cmp
fmuls
imul
cwtl
dec
in
pop
lret
mov
inc
into
loop
pop
mov
mov
or
or
pop
popa
insb
jecxz
and
add
out
or
mov
xor
dec
das
mov
mov
mov
in
mov
sahf
mov
push
dec
lahf
sar
lret
push
or
sub
pop
std
testb
fiadds
push
or
repnz
cmp
outsl
inc
mov
pop
xchg
fstps
xchg
add
pop
jns
inc
xchg
xchg
pop
ds
idiv
gs
mov
push
mov
pop
xchg
xorl
jne
lcall
push
das
gs
and
xchg
push
mov
outsb
pop
ja
stos
push
clc
pop
xor
lret
push
into
std
fsubrl
mov
ljmp
aas
jne
ficoms
mov
scas
cmp
adc
add
call
fistps
test
or
iret
cmp
lds
mov
xor
fistpl
wbinvd
and
int3
test
pop
ror
mov
adc
mov
inc
sub
add
pop
mov
into
inc
xchg
pop
pop
scas
in
dec
sub
fistps
push
hlt
icebp
je
mov
sbb
aas
lret
div
mov
mov
adc
pop
xchg
pop
pop
call
popa
sbb
mov
adcb
push
cmp
inc
scas
fiadds
push
incl
inc
jge
cltd
mov
xlat
lds
das
rcrl
ret
jmp
cmc
dec
lock
adc
rcrb
lret
popf
sub
cli
pusha
jmp
mov
test
mov
sub
cmp
inc
pop
mov
mov
cmp
sub
icebp
jp
test
std
sbb
popl
or
inc
add
push
or
adc
lret
dec
jne
in
dec
hlt
push
and
inc
cltd
xchg
push
lods
jnp
iret
lcall
fists
popf
jmp
in
jecxz
xor
and
es
jne
add
add
adc
and
adc
ljmp
xchg
lock
fdivrl
shlb
sub
mov
repnz
mov
cmp
and
jnp
hlt
xchg
test
push
lds
sub
mov
or
icebp
aam
cmpsb
or
gs
aad
es
adc
mov
insb
cmp
add
push
jmp
xor
adc
test
cmp
cmp
mov
xchg
out
adc
cmp
sub
sub
xchg
jbe
mov
rcrl
mov
jl
inc
mov
cli
aas
aad
pop
jge
push
jns
adc
and
inc
dec
jne
scas
mov
clc
jb
js
xor
adc
scas
inc
cld
sahf
ja
pop
dec
ljmp
mov
testl
les
lea
dec
out
jecxz
hlt
jle
sbb
add
and
ror
lahf
pop
bound
inc
lea
sarl
mov
test
dec
mov
lcall
testb
test
dec
jne
pop
add
sbbl
shl
adc
xor
out
loop
scas
fwait
pop
lods
sbb
mov
add
jo
fiadds
popf
testl
mov
pop
adc
xor
cmp
sbb
pop
adc
insl
xchg
jg
or
xchg
sahf
sbb
and
out
xchg
push
int
ss
idiv
lea
xchg
ds
sbb
xlat
icebp
xor
pop
mov
add
mov
mov
mov
jl
insl
sbb
dec
shlb
and
jnp
xor
in
dec
mov
mov
inc
push
push
and
loop
xchg
ret
add
dec
clc
mov
cmp
cmpsb
pop
cmpsb
icebp
pop
scas
and
push
shrb
int
mov
ds
mov
xchg
out
and
jl
mov
add
fidivs
push
aad
gs
std
and
arpl
xchg
sbb
adc
cltd
push
test
jb
movsl
jge
icebp
mov
xor
xchg
push
xchg
add
ret
mov
cmpsb
ja
push
iret
add
stos
xchg
sahf
mov
stos
arpl
fs
xor
fidivrs
cmp
jmp
daa
dec
aad
push
ss
push
adc
xor
out
xor
les
cmp
shl
pop
cmp
push
movsb
jge
pop
pop
add
dec
mov
rorb
fstpt
in
jge
call
movsb
outsl
sub
adc
dec
push
negb
mov
into
fldt
ret
scas
sarb
lods
mov
sub
mov
dec
es
int
ljmp
jl
adc
pop
pop
xor
mov
pop
pushf
xchg
cmpsl
andb
mov
daa
das
aaa
nop
pop
pop
out
loope
div
pop
jmp
lahf
xlat
inc
test
push
loop
inc
lahf
imul
jne
inc
outsl
cmp
mov
dec
sti
xor
jo
add
popf
fimull
pop
inc
xchg
enter
inc
icebp
xor
sbbb
or
insb
dec
add
xchg
jo
mov
add
jl
mov
sarl
mov
inc
es
jns,pt
mov
sbb
pop
mov
mov
movsb
test
and
xorb
and
cmc
shlb
sti
clc
fmuls
inc
or
std
adc
rclb
jnp
testl
push
cmpsb
push
in
push
lods
xor
pop
das
cmpsb
inc
cmpb
mov
sbb
pop
pop
and
sub
je
gs
popa
pusha
insl
clc
or
enter
test
lret
fistpl
and
mov
mov
add
xor
sbb
out
jmp
xlat
sub
jo
cmpsl
popa
mov
or
and
hlt
jg
arpl
sub
repnz
mov
rcl
pop
adc
dec
or
mov
mov
or
add
jge
lea
pop
jmp
adc
shll
rcll
xchg
or
sbb
jns
loope
or
pop
movsl
lret
jb
push
repnz
lds
lods
je
mov
mov
fnstenv
push
in
test
movsl
sub
fdivrs
mov
mov
sbb
mov
js
inc
push
jge
and
imul
in
movsl
xchg
lahf
cltd
movsb
imul
xor
loop
insb
jl
pop
js
jbe
lods
fdivrs
mov
dec
xor
mov
dec
pusha
enter
stc
push
out
push
lret
xchg
imul
int3
cmp
mov
and
xchg
std
aam
add
inc
shr
leave
lods
sub
xchg
test
and
inc
dec
pushf
addb
inc
jbe
sub
icebp
rol
xlat
xchg
inc
mov
mov
pop
mov
xchg
aad
lock
repz
xor
jbe
iret
iret
mov
jbe
std
test
pop
cwtl
js
dec
sbbb
insb
push
mov
xchg
adc
fdivr
add
addr16
ljmp
dec
and
in
cmc
jmp
lahf
out
scas
fwait
das
loopne
jl
insb
sbb
mov
into
lea
mov
imul
cmpl
nop
mov
xchg
push
cmpsl
popf
push
std
mov
xor
sbb
adc
sbb
pushf
test
xor
xor
pop
xchg
xchg
fiaddl
mov
movl
out
cmpl
test
nop
in
ret
cmpsb
rclb
enter
adc
cli
test
mov
insl
xchg
push
add
fs
ret
cmc
or
lcall
jmp
jno
xlat
rorb
and
stc
adc
out
or
sub
inc
fdivs
stos
int
shrl
rorb
les
pop
lret
aam
mov
aaa
jno
and
out
xor
adc
mov
ret
jecxz
sub
mov
add
sbb
leave
jae
mov
xor
das
sub
mulb
jg
add
stc
gs
arpl
in
mov
bound
and
or
add
iret
mov
lds
fnstenv
dec
xor
pop
adc
inc
lahf
and
test
in
test
add
mov
in
icebp
adc
sbb
mov
paddusb
das
loop
getsec
je
push
mov
movsb
lds
cmpl
jb
mov
cmovs
lods
stos
push
and
inc
push
jg
cmp
lcall
stc
sbb
adc
and
outsl
das
fisttpll
adc
insl
iret
lods
cmpsl
push
rcrl
sbb
inc
jb
in
sti
int
ss
inc
and
aas
mov
xor
inc
loopne
or
cmpsl
mov
jmp
jmp
in
push
adc
cmpsb
dec
pop
imul
xor
push
aas
or
pop
mov
mov
in
fwait
lea
jns
sbb
mov
mov
and
inc
and
imul
jge
stc
xchg
inc
lea
imul
dec
or
pop
orb
rclb
adc
ficompl
outsl
mov
and
push
mov
cmp
inc
mov
inc
test
mov
les
loope
cmpsb
das
pushf
stc
sub
jbe
scas
outsb
push
fcmovu
inc
adc
xchg
xchg
push
scas
mov
xor
ror
push
jmp
push
push
fldz
xchg
fiadds
daa
enter
out
push
cmpsl
lea
adc
xchg
int
xor
arpl
ja
dec
pavgb
push
dec
xchg
loopne
andl
mov
popa
sub
jl
sbb
dec
dec
cmp
jns
push
call
enter
sub
cmp
cmp
jl
or
pop
leave
cmpsl
inc
aas
add
dec
js
call
daa
dec
and
cmpsb
lret
repnz
push
fldl
fldenv
push
data16
xchg
sbb
xor
daa
int
mov
negl
lock
jl
mov
or
gs
xchg
dec
pop
fdivl
addr16
pop
jbe,pt
adc
pop
or
call
mov
bound
sub
lods
iret
dec
push
dec
stos
cmc
test
lcall
stc
jmp
scas
cmpsl
adc
add
subl
sti
imul
and
fcmovb
and
sti
not
scas
int
push
test
cltd
and
daa
int3
fimuls
or
in
rcrl
fdivrs
jns
xchg
sub
mov
in
xchg
push
imul
push
sub
lret
inc
sbb
cs
mov
pop
jge
mov
and
out
movsl
ret
xchg
push
xlat
lcall
xchg
push
sbb
gs
rcrb
inc
jmp
cwtl
lods
sbbl
scas
movsb
fisubrl
jmp
and
ficoms
lods
frstor
pop
xor
mov
jle
outsb
pusha
aad
outsl
cmp
loop
mov
jns
fdivp
or
dec
xor
xor
stc
fcomi
jbe
pop
stc
sbb
mov
cld
mov
mov
adc
cmp
repz
test
mov
pop
lock
bound
sub
push
push
sbb
dec
pop
mov
sbb
pop
sbb
cmpsl
hlt
push
sarl
cmc
mov
xorl
test
notb
ja
cli
cmpsl
jbe
adc
jl
push
or
lahf
jbe
loope
xchg
and
mov
sub
bound
and
std
or
jmp
fidivrl
jnp
mov
addl
repnz
pop
or
lcall
jns
xor
sub
fs
pop
push
pop
mov
popf
sbb
and
lods
repz
adc
pushf
push
sub
pop
clc
xchg
call
sti
test
in
adc
call
xor
lret
movsb
lods
rol
jmp
add
in
loopne
pop
mov
outsb
lds
cmp
pop
sbb
fisttpll
out
ss
mov
dec
into
rcrl
test
sbb
rcl
mov
sbb
add
pop
int3
std
aaa
sbb
inc
lcall
lea
out
adc
xchg
fnstsw
andl
mov
dec
cwtl
push
shll
movsb
iret
stos
sbb
std
and
push
lods
lods
fs
scas
mov
sub
and
scas
adc
in
adc
mov
fwait
out
call
orb
and
les
mov
xor
push
imul
popf
mov
sub
loop
xchg
popf
or
cmp
mov
and
mov
insl
gs
mov
push
cs
fldl
sti
and
loope
xchg
mov
test
adc
stc
push
jmp
pop
incl
scas
jl
mov
pop
sahf
lret
inc
push
enter
aad
sbb
push
pop
das
inc
jnp
mov
add
or
ret
jecxz
mov
and
adc
pop
aas
sbb
jg
rcrl
mov
js
push
popf
je
jmp
lret
fcom
xor
push
out
lret
mov
push
aam
icebp
fdivp
or
xchg
adc
dec
ret
daa
arpl
jp
lret
nop
sub
fisttpl
sbb
daa
add
lcall
and
jecxz
or
xor
and
cmpsb
xor
jmp
shr
pop
add
push
jg
fists
loopne
push
jle
push
inc
mov
scas
out
xor
ret
xchg
test
xor
or
shll
orl
les
push
lcall
cltd
pusha
cmpsl
mov
pop
and
fsub
int
push
jl
movsb
loopne
pop
nop
jnp
movsb
and
or
test
lods
out
dec
mov
lds
jg
jne
incl
pop
insb
xchg
dec
push
loop
push
mov
jne
in
push
xchg
cmp
jo
xorb
cmp
xor
lret
xor
jne
fmuls
lahf
lcall
mov
sbb
xlat
hlt
addr16
mov
sarb
mov
sbb
xor
or
insb
cmp
or
mov
dec
imul
and
xchg
or
frstor
dec
push
aad
push
outsl
xlat
jecxz
out
xor
adc
inc
sub
in
daa
jle
sub
xlat
lret
repnz
jle
adc
pop
std
int3
push
aaa
repz
inc
sbb
lea
mov
or
pop
cmp
lods
ret
repz
aaa
in
add
pop
rcll
fs
mov
in
or
sbb
sbb
dec
lods
jns
push
cmp
andb
xor
rcl
test
dec
test
mov
add
cmc
mov
jne
outsl
nop
jg
jae
sub
mov
ljmp
sbb
mov
dec
xchg
lea
xchg
cs
pop
mov
iret
mov
adc
stc
push
add
add
mov
pop
int3
push
and
aas
cld
pop
pop
dec
popf
sti
dec
mov
insl
iret
push
lods
fisttpll
insl
pop
ror
xlat
shrb
shll
mov
jnp
aad
outsl
jne
mov
cmpsb
cwtl
inc
or
orb
jecxz
pop
inc
movsb
call
ljmp
int
or
push
and
adc
push
loope
out
enter
in
in
xchg
addr16
movsb
pusha
push
sbb
jns
repz
mov
inc
loopne
shll
inc
jg
dec
je
xchg
mov
movsl
push
cmp
push
mov
loopne
jp
cmc
lret
and
repnz
xor
adc
push
out
mov
inc
cltd
sub
in
jmp
and
sbb
inc
jp
sub
mov
imul
inc
sub
nop
sub
iret
add
outsl
out
ja
movsl
jle
pusha
mov
jmp
outsl
mov
xchg
mov
addl
subl
in
mov
or
or
and
xchg
push
fldcw
call
cmp
aam
test
out
xchg
adc
flds
push
bnd
inc
ret
push
xchg
incl
popf
jle
int
movsb
insl
xchg
stos
shrl
dec
sbb
sti
xor
jo
mov
es
xor
sarl
testb
xor
xor
jg
pop
clc
mov
jmp
mov
shrb
fimull
ljmp
xor
adc
rolb
int
add
push
mov
mov
or
les
mov
jbe
push
cmp
cltd
je
push
or
push
sbb
add
insl
lea
sbb
subl
movsl
push
ret
xor
inc
add
mov
sahf
test
enter
cmp
push
lea
or
je
out
fiaddl
les
pop
xor
lds
push
repz
pop
andl
test
adc
bound
aam
push
imul
lods
xchg
insb
xchg
dec
pop
mov
rorb
and
ljmp
nop
rolb
inc
mov
push
nop
ja
fisubl
cmp
mov
pop
divl
mov
cmc
jbe
popa
lock
mov
arpl
movsb
mov
fs
pop
adc
xchg
clc
xchg
xor
in
fisubrl
mov
xor
mov
fisubl
bound
sbb
sbb
pop
ret
int3
jge
sub
orl
fstl
xor
add
lahf
mov
mov
lock
jbe
sbb
pop
push
lock
rdmsr
cmpsb
ret
test
pop
sbb
std
mov
lea
sbb
xor
or
adc
fs
dec
mov
adc
dec
sarb
cmp
stos
stos
push
adc
or
push
pop
cmpsl
enter
out
mov
jbe
orb
jne
sbb
fcoml
or
push
mov
xchg
in
mov
out
adc
push
rcrl
sbb
loopne
es
or
or
icebp
icebp
cld
fldenv
push
aad
push
pop
lods
pop
mov
add
popf
push
push
push
add
add
sub
adc
add
xchg
std
lcall
ret
orb
imul
xor
mov
les
sbb
divl
sub
and
mov
dec
movsb
aad
and
mov
scas
jp
xor
cs
vminps
lret
jp
inc
ljmp
xchg
jg
clc
pop
jne
fnstsw
ret
sub
cmc
mov
or
pop
dec
incb
or
ljmp
jl
add
pop
pop
push
fsubrl
inc
mov
movsl
shll
pop
mov
adc
adc
cld
dec
leave
es
xorl
xorl
xchg
repnz
fistl
int3
mov
jne
pop
push
and
mov
cwtl
hlt
jne
and
push
ljmp
sar
divl
mov
das
add
push
dec
pop
sub
sbb
into
bound
fwait
clc
scas
push
xchg
cmpsl
inc
or
icebp
out
or
and
add
mov
xor
push
lahf
xor
out
cli
pop
test
imul
iret
ss
shlb
pop
test
xchg
xchg
mov
scas
js
cmc
rcr
xorb
add
aad
cmp
adc
jnp
orb
fistl
mov
fsub
scas
or
into
lahf
in
lret
push
push
xchg
add
sub
mov
push
enter
cwtl
xor
dec
mov
pop
mov
adc
xor
orl
daa
mov
outsb
xor
cmc
push
idivl
mov
test
jo
jg
jmp
in
jle
mov
test
les
or
lock
xchg
mov
enter
fdivl
cld
in
orb
daa
mov
clc
inc
pop
movsb
or
ror
hlt
sub
scas
mov
les
popa
arpl
xchg
andl
jae
ret
dec
ret
ret
aaa
fwait
adc
push
pop
dec
jnp
sub
xchg
cmc
test
pop
in
mov
loope
inc
sub
inc
xlat
cld
xlat
or
subb
mov
repnz
xor
lret
lretw
mov
or
jnp
mov
push
sub
outsl
fwait
or
sbb
shrl
int3
hlt
add
jp
cmp
mov
ret
cmpsb
xchg
ficomps
lahf
mov
push
fmull
mov
sbb
sbb
push
jnp
or
insb
iret
mov
test
push
cld
cld
xchg
fsts
nop
add
pop
and
fdivl
out
mov
les
inc
or
lcall
mov
enter
repnz
add
out
inc
xchg
fsubrl
int
out
inc
rolb
ljmp
lods
subl
mov
and
into
or
ss
xchg
jbe
out
shll
sbb
cmp
inc
mov
push
int
push
push
movsl
xor
fstpl
out
xorb
rcl
aad
in
lret
scas
pop
pop
pusha
popl
add
cmp
fmul
outsl
in
cmp
hlt
dec
mov
orl
fwait
sub
inc
sbb
sub
outsb
push
fdivrp
xor
sbb
leave
xchg
cmp
lcall
mov
das
add
jge
clc
push
hlt
orl
mov
scas
pop
mov
jmp
cmc
or
or
push
negl
mov
movb
push
sti
pop
andb
jp
mov
ja,pt
fcompl
add
into
pop
pop
push
mov
icebp
inc
subb
sbb
sub
dec
dec
sbb
cltd
jmp
jecxz
xchg
inc
fnstsw
popa
std
push
daa
jns
lds
or
leave
outsb
inc
inc
repnz
std
test
fsubrl
or
mov
sbbb
sbb
dec
sbb
jbe
mov
mov
ss
lea
hlt
jnp
cwtl
call
iret
imul
pop
in
dec
xorl
mov
ficoms
xchg
lret
inc
xchg
mov
je
pusha
pop
pop
jnp
and
jbe
sahf
insb
mov
adc
imul
pop
jmp
dec
in
jno
push
and
mov
cmpb
sub
test
pop
inc
jb
dec
mov
ds
mov
dec
insb
popa
addr16
dec
push
add
popl
loope
rcll
sbb
int
jb
arpl
cmp
test
outsl
in
movsb
mov
dec
push
into
push
test
movsb
data16
push
jns
inc
pop
sarb
adc
lret
lcall
sub
mov
jg
mov
sub
and
int
vpcmpgtb
mov
gs
add
add
fistpll
cwtl
mov
outsl
mov
aad
xchg
lcall
mov
push
sbbb
subl
stos
sbb
cmp
fs
dec
loopnew
adc
xor
sub
sub
ds
inc
xchg
push
mov
mov
lds
xor
jbe
sarb
jne
ret
stc
iret
mov
xchg
dec
fs
icebp
fnsave
leave
adc
jne
mov
fbld
jecxz
bnd
and
push
and
cmpb
sti
sbb
sbb
adc
lahf
arpl
mov
dec
and
add
imul
imul
sahf
or
out
fwait
repz
add
aam
xor
mov
aad
std
mov
push
test
inc
sbb
gs
ds
pop
mov
sbb
in
adc
adc
push
cwtl
mov
jne
sub
push
sbb
dec
into
fnsave
sbb
cs
js
ficoml
pop
adc
lock
jle
popa
jbe
lahf
sti
arpl
test
ret
push
cmpsb
loope
dec
mov
es
fwait
ss
arpl
xchg
jnp
push
test
loopne
mov
out
test
mov
shll
xchg
xor
push
test
test
push
sub
repz
xchg
mov
add
pop
int3
dec
daa
gs
cltd
ret
push
movsl
mov
hlt
addr16
je
movsl
xchg
cli
je
and
xchg
or
mov
daa
addl
pand
sbb
imul
cmp
jne
push
sub
andb
fistpl
fnsave
aaa
into
ss
lea
xchg
out
add
rcll
push
pop
jl
mov
repnz
data16
xor
in
push
sub
add
cmpsl
mov
rolb
push
push
sbb
push
leave
mov
xchg
push
mull
fistl
pop
jne
mov
mov
inc
or
or
cmp
movsl
fdiv
sbb
xchg
dec
dec
stos
mov
inc
xor
pop
or
sub
adcl
data16
jne
inc
adc
mov
insl
fisubs
and
out
stos
mov
sbb
or
mov
mov
lea
mov
push
loope
arpl
fstps
xor
dec
stc
mov
sub
fstpt
fildl
jl
cld
cld
add
pop
rclb
mov
fwait
adc
pop
jns
lock
mov
pusha
ss
xchg
cltd
jmp
sti
jbe
enter
cmp
add
cli
and
fld1
loop
xchg
dec
dec
jo
cmp
addr16
mov
mov
inc
sbb
pushf
pushf
mov
mov
ss
hlt
into
pusha
addr16
insb
pop
scas
xchg
fildl
nop
xchg
xchg
cmp
cmpl
add
aam
mov
jbe
push
aaa
in
in
xor
out
movsb
ja
push
ret
cmp
clc
lock
sbb
fldt
repnz
test
xchg
cmp
mov
cwtl
aam
xor
xorb
jle
stc
cmpsb
sub
sub
test
mov
or
add
jecxz
mov
xor
mov
and
aad
leave
mov
fwait
push
ljmp
fbstp
push
jb
jno
fsubs
jbe
mov
cmpsb
fwait
lock
and
jno
movsl
pop
dec
icebp
test
aaa
je
push
scas
enter
sub
insl
sti
ja
adc
cmpl
popa
and
leave
dec
pop
or
xor
or
sub
sub
in
loopne
push
cmp
or
push
ljmp
lds
ja
test
jl
push
pop
adc
and
int
lock
adc
movsb
repnz
les
std
mov
out
aam
push
inc
cwtl
iret
popf
xor
inc
mov
pop
loop
test
xchg
imull
jmp
push
out
int
es
mov
aam
add
adc
rorb
aam
push
sbb
pop
int3
inc
rcr
dec
aaa
out
mov
aam
mov
dec
cmp
cmpsl
ret
pusha
fs
sbb
test
pop
and
cmp
clc
pop
mov
shll
gs
jnp
inc
and
test
pop
or
daa
pop
and
sbb
pop
jl
push
aad
nop
hlt
sbb
mov
xorb
add
notb
xchg
mov
cwtl
xor
pushf
cltd
pop
mov
iret
xchg
fcomip
push
cmp
mov
mov
sbb
xchg
and
addr16
addr16
and
dec
rcrl
fisubl
dec
lods
and
cmp
lds
clc
sub
dec
int3
dec
loop
xor
sub
addr16
idivb
lods
or
mov
mov
xchg
xor
sbb
mov
js
push
adc
call
push
inc
xchg
cmp
icebp
sbb
push
out
dec
lret
mov
ret
xor
xchg
aad
dec
jle
mov
popf
cmpsb
adc
loope
out
mov
adc
mov
filds
in
test
inc
std
and
sbb
xor
inc
push
js
gs
sub
and
rol
les
pop
sub
out
shlb
in
mulb
shl
loop
pminsw
das
jno
mov
into
push
hlt
es
add
add
or
jle
rclb
mov
ss
jl
iret
sub
xor
mov
jo
mov
pop
fwait
js
xchg
xor
jae
call
imul
cli
pshufw
inc
jae
test
fimull
pop
jmp
pop
in
xchg
push
cmpsb
stos
movsl
pop
push
pushf
popa
cmp
mov
pushf
cmp
popa
sbb
ds
jp
push
mov
out
pop
cmp
push
into
iret
adc
or
int3
push
lahf
fs
inc
or
call
and
imul
jle
stos
test
sub
jmp
dec
test
loopne
mov
mov
sbb
repnz
cltd
gs
popf
jle
loope
nop
xchg
mov
adc
rorl
ds
sbb
dec
or
cmp
xor
ret
jb
adc
push
outsb
push
pushf
dec
fwait
cs
xor
sbb
cmp
mov
mov
lret
out
dec
hlt
pop
dec
xchg
pop
push
loopnew
pop
jnp
rolb
cmpl
jmp
pop
repnz
aaa
cmp
xchg
and
fisttpl
push
adc
aas
mov
daa
pop
enter
push
fisttps
in
xor
add
cmp
lock
cmp
leave
in
push
adc
bound
add
dec
push
or
cltd
imul
sbbb
lock
push
test
addr16
int
xlat
ja
inc
nop
inc
insl
sub
pop
mov
jecxz
daa
inc
in
mov
int
mov
push
mov
push
test
movsb
es
dec
adc
or
ds
push
lds
xchg
jecxz
rcrb
lcall
xchg
movsl
fs
sbb
cltd
cli
inc
mov
sbbb
lods
sar
jbe
fcoml
leave
jg
lods
lods
xchg
fisubrl
inc
insl
iret
into
dec
pop
jno
scas
fadds
cmp
push
cmp
cmp
lahf
mov
test
push
xchg
test
fistl
mov
sti
pop
hlt
stos
mov
cs
push
std
pop
jl
repz
ss
or
ret
fcmovne
mov
adc
test
push
jl
out
fbld
adc
outsl
jo
cmp
jp
nop
daa
aam
cli
jae
sub
les
mov
or
arpl
popa
fs
mov
insb
push
pop
call
push
lods
lock
jae
pop
adc
sub
fsubr
xchg
or
sub
fimuls
cmpsl
movsl
aam
ljmp
sbb
outsb
outsl
push
lahf
ret
andl
pop
jp
cs
jg
jb
xchg
leave
or
mov
sbb
subl
jo
sub
je
inc
shrl
ret
add
cmp
fcmovnu
mov
sub
dec
dec
subl
push
aam
das
push
mov
push
in
adc
mov
lret
movsb
inc
jmp
dec
adc
pop
sbb
sub
xchg
or
mov
mov
push
jne
add
inc
or
cmp
sub
rcr
lret
add
jb
mov
and
fisttps
mov
add
inc
adc
icebp
mov
je
jle
jnp
mov
adc
roll
shlb
imul
pop
sbb
hlt
xor
rolb
sarl
xchg
dec
sti
lret
push
dec
divl
and
push
stc
mov
adc
pop
je
or
cltd
pop
inc
add
jg
fdecstp
sbbb
test
movsb
jno
pop
sbb
fwait
repnz
std
inc
fistpll
inc
leave
les
je
add
lods
jbe
mov
insb
or
mov
rcl
add
lcall
lds
orb
push
and
cmpsb
hlt
xlat
inc
dec
cmpsb
dec
inc
into
sbb
clc
xchg
int3
lods
imul
sub
pusha
repz
addr16
imul
test
mov
fsubrl
lods
add
das
je
xor
mov
call
push
cmp
arpl
mov
js
in
pop
push
add
push
jmp
inc
gs
add
addb
enter
ljmp
sub
push
ret
sahf
jae
push
lahf
mov
lret
loop
and
int3
ret
push
int3
dec
imul
pop
and
fisttps
stc
xchg
mov
in
xchg
mov
mull
sub
daa
xchg
ljmp
xchg
nop
sub
leave
jbe
add
fbld
xchg
push
xor
mov
adc
lcall
push
inc
inc
push
ret
iret
aad
jo
push
jmp
popa
mov
or
das
cmp
nop
popf
fiaddl
jmp
pop
sub
popf
pop
sub
add
ja
ficompl
sub
mov
sub
fidivrs
in
nop
add
ss
cmpb
ss
sub
clc
hlt
or
ret
add
xchg
fildl
es
cltd
xor
orb
dec
push
sbb
cmpl
insb
cmp
xchg
jp
sub
pop
in
repnz
and
inc
cmp
sbb
pop
movsl
dec
test
scas
dec
shlb
enter
sub
add
dec
pop
push
call
arpl
movsl
mov
sti
mov
jecxz
in
popf
push
into
sub
jnp
test
out
xlat
push
mov
push
das
ss
xlat
ds
adcl
dec
lea
cmp
xor
daa
mov
cmp
loope
pop
or
xor
mov
call
test
icebp
sahf
sub
popf
or
cmp
test
das
popa
cli
lock
sbb
subb
jno
sbb
inc
lcall
loopne
dec
and
xchg
sub
fnsave
inc
dec
add
or
xor
jb
or
pop
cmpl
repnz
mov
adc
mov
mov
mov
dec
add
rorb
xor
int3
pop
lods
sbb
push
xchg
addl
incb
clc
fiadds
pushf
pop
lock
divl
mov
cld
loope
push
roll
lret
xor
jmp
sub
jg
leave
mov
lods
fnstcw
xchg
xlat
iret
adc
in
push
or
imul
dec
pop
in
mov
fnclex
enter
fsub
xchg
inc
gs
mov
in
push
lods
pusha
xor
mov
hlt
pop
xor
jne
mov
gs
or
xorb
xor
inc
aad
xchg
insb
test
test
imul
mov
jmp
sub
leave
iret
mov
mov
or
aad
dec
mov
rorb
cmpsb
and
cmpb
push
or
jb
mov
push
or
mov
enter
adcb
in
inc
and
mov
mov
mov
dec
out
mov
xor
xchg
adc
insb
mov
xchg
popf
dec
adc
mov
pop
push
xor
negb
sbb
mov
mov
xor
gs
sbb
rcrl
mov
jae
insl
js
cld
icebp
push
cmpl
mov
pushf
inc
fcoms
adc
aaa
xor
gs
jge
inc
lret
clc
outsl
lahf
std
fidivrl
jbe
idiv
inc
inc
std
xor
into
dec
pop
inc
cmp
test
xchg
xchg
xchg
jae
jae
xchg
pop
add
cmp
and
ss
pop
ljmp
push
cltd
js
fs
movsl
pop
addr16
mov
add
jmp
test
sbb
xor
adc
push
jno
jne
dec
adc
push
add
in
adc
cmc
push
idiv
and
pop
mov
fisubs
cmpsl
in
into
cmc
jle
sub
push
inc
inc
leave
xchg
ss
lahf
adc
cmp
lods
fldl
inc
mov
lcall
mov
call
mov
es
mov
imul
into
dec
repnz
adc
mov
dec
mov
dec
lods
jb
mov
stos
lds
pop
and
fisttpll
notl
ss
lret
push
iret
jmp
lds
hlt
fdivl
inc
bswap
mov
jb
rcrb
sbb
or
adc
lret
cmc
pop
into
vphaddubd
or
mov
adcb
sbb
loopne
iret
or
push
mov
nop
or
jb
dec
lods
cmpsl
push
int3
dec
sbb
aaa
lock
jg
jnp
pop
stc
js
lcall
cli
dec
mov
inc
mov
jnp
aam
fdiv
ljmp
gs
jmp
std
mov
notl
inc
clc
fcmovu
and
jnp
mov
cmp
out
and
xchg
stos
aam
cmp
das
mov
sub
mov
orb
aam
cmp
mov
pop
ret
jp
rcrb
cmp
leave
or
push
adc
push
movsl
fidivs
repz
iret
rcll
jo
gs
adc
ja
fmul
inc
icebp
lock
dec
and
cmpsb
add
insl
fldcw
pop
xor
js
rep
and
mov
push
xchg
pop
cmp
dec
jnp
imul
or
xchg
inc
mov
aas
in
repnz
ret
pop
push
xor
pop
cmpsl
or
xchg
xchg
xchg
cmpsb
pop
and
and
push
sub
mov
jge
lahf
xchg
sbb
xchg
repnz
mov
gs
fldt
roll
inc
mov
and
std
jnp
pop
inc
inc
xor
push
ficoml
dec
shrl
lods
stc
pusha
xor
mov
push
test
adc
pop
add
std
xor
cmp
nop
adc
nop
loope
lods
mov
ja
movsb
cmpsb
ficoml
sbb
fnstcw
scas
fdivrs
lds
ds
int
jne
gs
mov
packuswb
js
adc
jo
test
jge
push
xchg
pop
cmp
adc
cmp
xchg
inc
out
iret
jo
addr16
daa
jle
mov
mov
ret
add
daa
test
loop
cmp
lods
out
jmp
rorl
dec
mov
dec
cmp
movsb
dec
pop
popa
jp
inc
outsl
mov
test
mov
scas
inc
ficoml
jns
daa
jno
xchg
and
movsb
xor
xor
arpl
movsl
and
push
or
inc
shll
inc
mov
and
insb
mov
lea
shrl
and
insl
aad
iret
cmp
scas
fnstcw
mov
pop
sbb
mov
xlat
mov
aaa
lock
xchg
inc
sbb
fisttpll
sbb
or
scas
push
mov
les
js
fs
add
push
pop
mov
out
mov
xor
popa
add
push
clc
inc
cwtl
in
shrl
clc
imul
fdivl
jnp
xor
jmp
pusha
fnstenv
subb
out
scas
fsubs
jo
sbb
rcr
pushf
enter
scas
test
ficoml
clc
cld
inc
into
popa
pop
fwait
lret
cmp
mov
cwtl
xor
cmp
rcrl
adc
mov
mov
ret
xor
addb
pop
lret
fisubrs
sbb
std
mov
mov
cmp
mov
in
pushf
pusha
and
cmp
lcall
jmp
cmp
mov
mov
pop
xchg
icebp
or
outsb
cmpsl
scas
popf
xchg
push
mov
mov
in
pop
dec
mov
push
ret
fldenv
pop
fildll
faddl
mov
fwait
and
jg
ljmp
pop
push
push
mov
adc
mov
mov
das
push
cmp
push
add
ljmp
test
dec
pusha
hlt
sti
mov
fnstcw
lcall
xchg
imull
js
in
push
adc
sarb
in
scas
call
or
mov
call
repnz
jmp
mov
insb
int3
mov
xchg
filds
dec
fmuls
or
pushf
mov
adc
or
sahf
xchg
movsb
movsb
cld
ss
shlb
aad
int3
les
test
inc
adc
push
pop
jnp
xchg
out
or
mov
mov
loopne
in
inc
adc
in
aaa
xlat
lds
mov
dec
aam
xchg
jae
push
js
cs
mov
dec
outsb
jle
rolb
scas
cmpsb
jae
aaa
mov
cli
das
outsl
xchg
outsl
jl
cltd
pop
xchg
cltd
mov
repz
pop
fnsave
push
dec
mov
pop
lret
add
ret
jmp
fadd
dec
lock
in
push
inc
push
inc
sti
lea
jmp
ret
xchg
cs
xchg
les
sbb
fstl
push
ds
adcl
fadds
adc
mov
dec
dec
mov
pushf
sbb
xchg
icebp
shrb
fcoml
movsb
mov
lahf
adc
shll
out
lds
pop
lret
iret
out
push
push
or
fdivl
sarb
cmp
out
pop
shl
cmp
add
cltd
jmp
insl
push
imul
push
out
mov
pop
push
shr
pop
mov
loopne
xor
in
lds
sub
xchg
mov
andl
fnsave
sub
cld
loopne
je
adc
push
cltd
ljmp
xchg
cli
ret
mov
fcmovu
fstps
push
dec
icebp
sub
fwait
iret
xchg
cmp
mov
lds
in
cmpsl
ficompl
sub
stc
pusha
xchg
insb
leave
cmp
mov
dec
mov
and
mov
dec
outsl
shr
aas
ljmp
cmp
call
push
xchg
jno
xchg
cld
sbb
cmp
rclb
icebp
pop
stos
xchg
xchg
pop
mov
sub
mov
inc
push
pop
inc
lret
or
stc
dec
int3
lods
push
shl
std
lcall
scas
cmp
and
out
arpl
mov
jo
fidivrl
push
sub
dec
cld
pop
mov
inc
xor
or
enter
mov
and
sub
jbe
push
fsub
and
sub
int3
jp
ljmp
outsb
push
push
jecxz
xchg
fdivrs
xchg
mov
mov
ljmp
jnp
mov
mov
rorb
insl
push
sti
mov
and
inc
add
fistpll
xchg
or
mov
jns
sub
aas
cmc
int
mov
scas
adc
fisttpl
or
and
ss
xor
aas
jp
add
lods
adc
xchg
sbb
mov
cmovl
ret
push
stos
loopne
ret
and
out
sbb
and
inc
adc
mov
and
fwait
in
movsl
sbb
jle
inc
xchg
pop
scas
cmp
and
mov
dec
or
push
pop
mov
cmp
test
lds
repz
notb
in
fs
ja
xchg
je
or
pop
xor
pop
cmpsl
lock
adc
imul
lea
sub
jle
add
mov
sub
add
or
stos
ja
mov
scas
gs
aaa
lods
xor
push
push
xlat
mov
hlt
test
dec
adc
clc
xchg
loop
sarb
shrl
sub
in
jne
shll
push
xchg
adc
jb
sbb
pop
add
pusha
cs
sub
out
jg
fidivl
shll
pop
and
and
jmp
sub
sub
lahf
lcall
mov
inc
aaa
inc
jno
jne
loopne
add
inc
add
movsl
cmp
rolb
inc
mov
jbe
cld
adc
into
cld
das
add
addr16
jb
leave
cmc
lds
cmpl
push
test
sub
mov
xlat
add
je
and
cmp
fsubrl
push
adcl
xchg
dec
in
nop
mov
je
mov
test
lcall
pop
dec
xchg
push
es
push
int
adc
sbb
out
sbb
int
inc
xchg
sub
and
fidivl
test
pop
shl
int3
cmp
lock
test
and
sub
iret
fistpll
jmp
cmp
pusha
rolb
pushf
stos
fs
rorl
cmpsl
aas
add
mov
fsin
pop
fstpt
mov
movsb
xchg
stc
or
aaa
push
orl
lea
test
mov
cmpsl
lods
xchg
jae
std
dec
lods
xor
nop
sbb
xchg
les
cltd
cmp
cld
dec
mov
mov
xor
mov
push
jp
mov
add
push
xchg
scas
push
and
insb
mov
xchg
mov
cmpsb
jbe
sub
sub
cwtl
lahf
mov
sbb
cmc
int
lcall
xor
ret
inc
in
inc
xchg
push
pop
out
xlat
cmc
sbb
mov
cli
repz
xlat
jle
sub
xor
pop
push
test
cli
mov
push
add
jecxz
inc
sti
sub
sbbl
push
adc
movsl
dec
mov
push
cmp
neg
into
into
pop
outsl
xchg
push
xchg
xchg
test
or
add
lods
inc
mov
inc
imul
sub
imul
mov
sbb
jl
cmp
aas
mov
add
cmp
int
lock
pause
test
movsb
inc
shll
adc
scas
xchg
cwtl
loopne
sub
mov
test
xor
mov
cs
adc
adc
sub
jnp
mov
filds
adc
leave
fidivrl
jg
sbb
adc
or
mov
mov
jge
push
repnz
adc
push
inc
popa
xchg
fcoml
fldcw
hlt
popf
sub
dec
lret
pop
inc
data16
jns
pop
movsl
popf
add
pop
cs
fldcw
cltd
lock
xchg
push
or
hlt
repnz
adc
sub
jl
aaa
insb
or
push
imul
out
add
jg
adc
shll
xor
out
loope
outsb
push
push
xchg
out
into
xor
in
cwtl
inc
lock
xchg
add
or
mov
hlt
fists
not
hlt
cmc
aad
stc
in
aas
lcall
cmp
ja
lret
nop
cli
adc
push
xor
or
adc
inc
sbb
jne
mov
mov
mov
inc
nop
jno
iret
jmp
xchg
or
leave
jp
mov
jbe
inc
daa
push
mov
add
mov
xchg
sti
jnp
leave
cwtl
cmpsb
in
aaa
or
pop
sbb
mov
ror
add
in
pop
mov
mov
adc
jp
icebp
enter
push
lods
mov
loope
jp
mov
and
lock
addl
mov
dec
jmp
push
lcall
iret
push
lahf
or
sbb
mov
add
inc
mov
jae
mov
and
cmp
xchg
push
add
push
push
jg
jp
mov
dec
xchg
push
faddl
std
std
icebp
out
xor
mov
adc
in
mov
mov
ret
mov
es
pop
lods
shr
ja
int3
std
push
int
scas
andb
dec
bnd
xor
and
in
imul
or
dec
cmp
sub
adc
xorl
cli
jl
insb
push
push
jmp
pop
in
and
push
loop
cld
iret
inc
outsb
loope
and
pop
push
push
adc
and
inc
cmp
mov
dec
or
mov
mov
xorl
bound
adc
xchg
les
insb
jnp
pop
pop
loopw
jl
pop
cmpl
inc
or
mov
fmuls
jns
xor
jecxz
cs
imul
jbe
arpl
jo
arpl
pop
push
xchg
mov
and
mov
les
mov
ret
fcomp
adc
fdiv
mov
push
push
mov
scas
adc
stc
push
ljmp
sbb
sar
imul
sbb
push
inc
lds
xchg
ret
xor
pop
push
adc
cltd
inc
cld
sbb
sarl
sahf
jnp
pop
mov
scas
push
in
or
popf
test
add
sti
jno
xchg
cmp
pusha
jnp
out
dec
int
popa
and
add
stos
test
shl
mov
jp
jmp
movsl
insb
cld
enter
enter
shrb
jnp
into
pop
xor
mov
dec
aad
bound
xor
or
dec
mov
pop
mov
dec
sbb
inc
push
out
cmc
mov
xchg
jbe
jne
pop
frstor
push
gs
into
movsb
inc
xor
stos
and
fwait
fwait
mov
pop
lods
in
push
dec
cmp
fsts
xchg
mov
xchg
sbb
lods
xchg
xor
xchg
and
mov
push
mov
push
sbb
test
and
xchg
addr16
hlt
mov
dec
xor
imulb
adc
push
int
sub
lea
and
call
pop
jg
mov
int3
jl
xorb
lcall
pop
stc
sub
sahf
push
jp
dec
cmp
xchg
push
mov
mov
jb
mov
inc
cmp
push
push
iret
xchg
pop
sbb
test
in
fsts
cmpsl
jne
cmp
mov
or
test
bound
xchg
aaa
sub
icebp
pop
jecxz
or
outsl
inc
jns
sahf
and
scas
fbld
push
movsl
shl
pop
scas
testb
insl
loope
add
outsb
nop
dec
sarl
stc
and
mov
lea
pushf
in
out
cmp
inc
and
xchg
sbb
xor
fsub
mov
jo
xchg
adc
cli
mov
mov
div
mov
and
fcompl
clc
fstpl
jbe
cmp
mov
fmuls
mov
nop
mov
mov
scas
roll
push
mov
xchg
jg
in
xor
sub
cmp
and
sarb
jne
movsl
stc
push
or
ljmp
sbb
int3
jecxz
sbb
inc
xor
in
xchg
xor
je
push
pop
dec
jno
or
mov
jg
push
pop
mov
mov
movnti
cld
pop
int3
push
cmp
lock
push
enter
cmp
push
std
lea
mov
cmp
mov
lea
divb
xor
jno
inc
imul
xchg
movsb
xchg
xlat
add
stos
inc
jae
fldenv
mov
fs
ds
mov
fucomip
mov
fbstp
push
mov
rclb
incl
stos
jb
bswap
and
pop
out
or
das
push
mov
inc
lret
add
push
or
adcl
out
outsb
jg
mov
mov
es
pop
das
xchg
test
leave
or
sbb
push
cmpsb
mov
fst
test
ficoms
mov
adc
lahf
jne
pop
xor
scas
mov
adc
dec
aas
xor
lret
adc
mov
inc
push
test
out
add
add
testl
adc
xchg
lahf
rcrl
add
imul
xchg
pop
mulb
add
xchg
rclb
jp
add
test
or
add
jecxz
fstpt
pop
adc
cmc
cli
dec
and
gs
cwtl
lods
xor
icebp
aaa
mov
test
jne
and
in
inc
dec
int3
inc
and
sub
xor
jb
fsts
dec
divb
icebp
lret
cld
and
mov
int3
popf
inc
push
js
imul
and
cld
test
jns
pop
pop
daa
bound
filds
aaa
inc
faddp
xchg
jns
stos
cmp
out
dec
and
shll
addr16
push
test
test
inc
xchg
addl
mov
mov
push
and
ja
xchg
stc
dec
not
adc
es
and
or
in
add
dec
xor
add
mov
clc
xacquire
mov
mov
cwtl
aad
mov
std
xchg
or
ret
sahf
xor
pop
jo
sub
jecxz
cmpsl
inc
and
mov
or
cmc
sub
notl
popa
adc
push
sbbb
add
sub
mov
and
je
bound
insl
enter
xor
xchg
xor
jns
movl
jp
cli
outsl
sub
pusha
dec
mov
and
or
aad
mov
mov
and
fldl
xchg
mov
mov
jb
push
movsb
cli
jns
lcall
fsubl
outsb
jecxz
adc
mov
add
bound
ljmp
mul
cmp
xchg
fstpt
or
add
inc
cld
xchg
aas
mov
js
push
inc
adc
xchg
arpl
mov
int3
adc
mov
cld
and
sub
xchg
test
subb
jp
sbb
stos
shrl
test
out
jmp
cmp
test
xor
std
lret
fdivs
jge
lock
fidivrl
dec
and
lods
sub
xor
dec
lret
or
dec
in
popa
sbb
xchg
out
stos
rclb
adc
adc
mov
mov
pop
out
cmp
sar
insb
jle
cmpsl
stos
cmp
or
data16
in
or
pop
js
pop
xor
loope
jecxz
sub
mov
push
mov
out
push
cmp
mov
mov
into
or
ljmp
adcl
movsb
jno
adc
inc
aas
push
jle
fiaddl
imul
das
test
push
test
js
inc
jae
lret
fwait
nop
dec
add
mov
jge
sbb
and
xor
lcall
mov
ljmp
xchg
jo
repnz
pop
mov
stos
jl
loop
xchg
fldenv
ficoms
pop
testb
push
sahf
xorb
inc
aas
push
mov
lret
aaa
adc
dec
pop
push
pop
xor
xchg
add
lods
adc
or
dec
leave
jmp
mov
inc
adc
jecxz
jns
cmp
push
rcr
adc
sub
jo
pushf
jns
cltd
enter
dec
inc
les
out
rorl
je
arpl
fcmovnb
fsubrl
mov
movsb
in
test
lds
mov
mov
xchg
sub
sbb
sbb
mov
imul
jp
pop
and
mov
fsubl
jg
fisubrl
clc
ret
push
shl
jne
cmc
test
stc
fsubl
mov
xchg
sbb
jo
inc
inc
movsb
je
movsl
mov
int3
insl
incb
lcall
sbb
lds
xchg
push
incl
xchg
mov
and
nop
cmpsb
and
cmp
outsb
inc
mov
loope
insl
rolb
and
adc
pop
inc
fisubs
int
sub
cltd
lods
pop
mov
and
lods
mov
mov
jo
sbb
xchg
jmp
cld
aam
mov
test
sbb
ja
je
loope
cmp
xchg
fsubrl
jmp
inc
lcall
fsubrs
in
inc
and
mov
mov
mov
mov
cmpsb
pop
js
mov
insb
pop
enter
lods
test
fstl
xchg
inc
jecxz
cs
and
lock
js
push
rolb
xchg
call
jno
aam
orb
add
sbb
cwtl
mov
push
push
out
or
into
mov
test
mov
rorb
rcll
and
aam
fsts
js
les
or
nop
cmp
mov
pop
adcb
insl
xchg
jmp
and
outsb
out
push
sbb
loopne
push
mov
js
jo
mov
push
arpl
and
mov
cmp
pop
mov
lods
dec
and
jns
or
sbb
push
movsl
mov
fcompl
and
cmc
sub
add
xchg
pop
xor
xchg
jmp
xchg
test
xchg
jle
arpl
std
mov
sub
inc
jae
fwait
imul
xchg
ljmp
mov
mov
rcll
or
cmc
cmp
js
incb
subl
xchg
lret
xor
lods
pop
out
cmp
scas
lret
fwait
stos
dec
test
adc
cmpsb
mov
out
sbb
adc
adc
xor
mov
das
cli
jge
adc
shll
mov
stos
add
mov
lret
mov
sbb
inc
jmp
or
and
push
push
or
int3
ds
insl
jp
jmp
ror
or
lods
dec
dec
or
adc
mov
lret
enter
pusha
fwait
shrb
les
aad
shlb
add
and
or
xchg
dec
int3
pop
ja
adc
push
mov
push
sub
pop
sub
js
ja
mov
cli
addr16
movsb
outsb
test
jp
inc
les
pop
pop
test
ficompl
and
scas
dec
mov
inc
out
cltd
rcr
xchg
popa
sub
lcall
dec
pusha
fidivl
jnp
add
mov
outsb
adc
sub
ljmp
imul
out
into
push
jle
cmp
xchg
cmpsb
push
jo
sbb
or
cmp
and
imul
pushf
inc
outsb
xlat
shrb
push
repz
imul
daa
adc
push
and
lock
stos
xchg
adc
ds
orl
fldl2e
shrl
push
push
jl
in
xchg
or
push
and
in
sub
test
jp
cmp
pop
push
inc
fcomps
lea
aaa
punpcklwd
orb
cmp
sub
jle
out
sbb
jmp
in
mov
fwait
add
inc
inc
shrl
je
in
jb
push
push
movsl
movsb
int3
xchg
jmp
or
dec
lock
fdivl
cmp
xchg
es
cmp
int
fimull
into
inc
pop
pop
fxch
js
in
sbb
jecxz
lahf
xchg
cld
cmp
pop
cld
addr16
daa
mov
xor
int
fisubrs
gs
push
fsubrs
xlat
inc
dec
lcall
adc
jge
fsubl
xchg
inc
lret
arpl
jmp
lcall
dec
into
xlat
or
aaa
ret
aad
xor
inc
imul
xchg
push
xchg
xchg
adc
fcoms
movmskps
pop
add
inc
shl
jns
xchg
lock
cltd
pop
loop
dec
mov
sbb
inc
repnz
cmp
out
adc
cmc
cli
cwtl
inc
sub
and
into
sbbb
scas
pop
cmp
loopne
mov
push
stc
jmp
ret
push
pop
ja
and
cmp
mov
sbb
inc
mov
cmpsb
cltd
sti
loop
dec
push
repnz
or
nop
push
hlt
in
sub
push
pop
sub
aam
adc
stc
insl
jne
test
aad
pop
enter
and
insl
mov
arpl
adcb
mov
scas
or
in
ja
lret
cmp
orb
ja
push
lret
fbstp
hlt
sub
sub
cmp
ds
lock
pop
xorb
dec
push
mov
ja
dec
push
inc
andl
shl
and
adc
mov
pop
sbb
sarb
jae
ret
mull
mov
mov
pop
lods
dec
xor
mov
and
rclb
lods
ds
mov
hlt
jge
mov
sarb
xorb
and
sbb
xchg
into
adc
in
xchg
jecxz
fwait
dec
aas
leave
mov
fldcw
xchg
xchg
cltd
clc
adc
divb
xor
and
movsb
fst
stc
cmpb
fsubl
add
clc
lret
mov
cmp
inc
xchg
pop
lret
imul
mov
stos
add
sub
pop
in
insb
fcom
into
pop
jecxz
ds
jmp
neg
popf
out
test
sbb
inc
dec
test
stc
or
xchg
fcmove
mov
fsubl
xchg
cmp
stc
pop
sbb
sub
cmc
cmp
jb
push
add
ja
or
idivl
aam
test
test
in
and
xchg
mov
pushf
mov
jl
jg
repnz
addl
ds
pop
clc
cld
test
pop
sti
mov
mov
mov
movsb
negb
pop
arpl
mov
xchg
lret
or
push
sahf
lods
or
and
add
dec
aas
push
les
loopne
addb
xchg
push
test
cmpb
xor
inc
xchg
cmp
les
test
mov
jb
nop
jmp
mov
stos
pop
mov
add
int
imul
pop
pop
mov
outsl
insl
sbb
or
lds
xlat
mov
lds
cmp
lock
push
cmpsb
jp
xor
jl
push
and
ret
mov
scas
sbb
xchg
xchg
scas
jne
incl
xchg
mov
inc
jecxz
pop
and
sahf
sbbl
je
mov
fcomps
mov
xor
mov
mov
into
push
jns
mov
imul
push
enter
jecxz
cmc
shrl
subb
jmp
lcall
push
add
lods
mov
lcall
cli
iret
adc
jge
data16
lods
js
mov
dec
pop
inc
sbb
clc
loope
lcall
enter
sbbb
cld
roll
rcrb
aad
shlb
push
mov
sbb
divl
sti
and
outsl
jge
daa
jnp
cmp
pushf
mov
jg
or
sbb
dec
lcall
rcr
pop
cmpsb
insl
push
popa
pop
xor
int
das
xchg
fwait
test
cmp
dec
add
add
add
mov
popf
insl
xor
inc
push
push
in
xchg
mov
fs
shlb
cmpsl
inc
xor
or
int
cmpl
mov
adcl
push
in
jno
dec
das
xlat
xor
test
ljmp
jp
jno
in
xor
mov
bound
into
xchg
cld
test
in
jno
int3
jl
ds
jmp
mov
sbb
sarl
lea
hlt
pop
sub
mov
rcr
and
inc
data16
outsb
dec
call
cmp
sub
xlat
movsb
addr16
movsb
add
push
push
sbb
mov
adc
sbb
ljmp
les
pop
inc
adc
cmp
flds
inc
or
push
sbb
and
enter
ja
insb
mov
mov
mov
repnz
mov
pop
mov
aaa
push
daa
mov
insb
and
call
imul
xchg
adc
sbb
xor
xchg
cli
rol
arpl
pop
push
cmp
xor
les
xchg
pop
mov
imul
scas
js
and
pop
pop
pop
dec
jmp
insb
test
imul
jmp
pop
xchg
fists
ljmp
outsl
mov
lret
ret
dec
push
cltd
pop
sbb
jne
aam
outsl
in
adc
fdivp
aad
scas
dec
mov
mov
bound
lods
inc
jns
filds
data16
mov
sub
daa
cmpsb
mov
pop
push
xchg
clc
enter
loop
imul
push
jmp
fistpl
test
iret
les
inc
xchg
push
mov
mov
cmp
lods
ret
adc
stc
cmp
sahf
jne
pop
sub
int
mov
dec
int
inc
inc
insb
jno
xchg
stos
mov
adc
cmp
pop
into
test
pop
icebp
mov
or
push
xchg
adc
dec
popf
stos
dec
das
dec
mov
imull
jmp
sbb
int
jecxz
mov
pavgw
mov
ljmp
push
mov
fadds
jae
in
cli
aas
gs
jae
mov
ffreep
xor
aad
adc
test
jmp
sub
bound
inc
push
fs
mov
dec
ret
loopne
fs
test
gs
testl
test
sti
jb
in
xlat
in
stos
push
lret
decl
fidivrs
cld
mov
lret
xchg
sbb
nop
sbb
test
faddp
inc
mov
cmpsb
xchg
cltd
testl
xor
cmp
and
jnp
stos
movl
loope
in
and
es
addr16
xor
loope
dec
mov
data16
iret
xchg
mov
inc
add
cmp
andl
aam
and
push
lcall
shll
pop
push
push
dec
or
test
or
pop
je
jno
in
icebp
push
adc
sbb
insb
cmp
ss
test
jmp
test
loop
or
pop
lret
dec
ror
imul
add
insl
loope
lcall
int
xlat
stos
jmp
sbbb
sbb
mov
jp
xchg
fnsave
jg
cmp
mov
ljmp
mov
das
rclb
push
cli
pop
in
mov
rcr
lcall
pushf
enter
pushf
out
sub
or
jno
cmp
lcall
sahf
inc
or
popa
dec
sub
push
push
and
mov
mov
cmpsl
cmp
jno
pop
loope
and
iret
xor
jecxz
mov
mov
or
fdiv
pop
dec
inc
std
insb
cltd
mov
rcrl
inc
mov
icebp
jae
mov
icebp
push
xlat
mov
or
push
pushf
lahf
jnp
cs
inc
add
pop
lcall
sbb
bound
mov
mov
das
push
xlat
jle
idivl
xor
in
imul
and
loope
push
rcll
pusha
jge
fcomip
pop
mov
cs
jno
cmc
icebp
cmpsl
mov
xchg
push
xchg
xchg
lods
dec
lock
cld
loopew
dec
scas
je
call
pop
mov
ficoms
insb
ss
mov
stc
in
sarl
mov
push
loop
dec
ja
in
es
aas
cmp
mov
imul
fnstsw
lods
bound
push
sbb
or
pusha
mov
adc
jmp
pop
lods
mov
adc
test
pusha
adc
and
lock
dec
xchg
mov
test
and
mov
mov
hlt
adc
mov
bound
sbbl
ds
push
fildll
popa
ja
sub
sub
arpl
shrl
adc
addr16
jae
dec
popf
ret
int3
int3
pushf
pop
mov
push
stos
jp
ds
dec
and
inc
inc
push
ror
aas
inc
cmc
mov
js
jle
pusha
es
incb
dec
mov
int
fdiv
mov
jne
push
inc
popf
mov
lds
ljmp
cmc
and
movl
jle
notb
test
inc
test
mov
mov
aaa
mov
push
jne
dec
mov
cmc
adc
sub
or
rcrl
sbb
jbe
xchg
roll
mov
clc
in
dec
push
das
fcmovbe
xorb
cltd
or
pop
or
hlt
or
inc
or
xor
xor
push
or
cmp
ret
mov
cmp
cmpsl
and
mov
aad
adc
dec
stc
hlt
cli
lahf
hlt
mov
cmpsl
mov
xchg
jno
inc
fdivrl
pop
and
mov
test
mov
jns
push
and
xlat
mov
dec
adc
dec
movb
add
cmp
xchg
lods
lds
add
loope
pop
pop
mov
faddl
rclb
cmp
test
lea
fisubrs
xchg
mov
flds
inc
xor
popf
add
push
mov
add
in
nop
fisttps
call
pop
cltd
lret
mov
jne
daa
repz
mov
popa
adc
push
push
inc
pop
and
fldt
ja
fs
or
xor
mov
shlb
notb
jo
stos
ror
xor
test
cmpsb
sbb
mov
stos
push
pop
cmp
es
pusha
mov
pop
shrb
dec
js
mov
roll
mov
mov
cli
ret
add
lds
pop
fcomi
out
push
xlat
fwait
push
lods
add
pop
mov
push
and
dec
imul
shll
lcall
sbb
pop
std
or
repz
mov
xor
ret
es
xchg
adc
in
scas
in
cmpsb
sbb
xchg
jecxz
ja
add
sub
xor
in
adc
fisubl
iret
lahf
mov
xchg
addb
xchg
nop
aam
inc
insl
jne
enter
xchg
sub
jp
xchg
mov
test
cmp
aam
mov
es
pop
hlt
inc
jb
jmp
lahf
in
ficomps
mov
mov
dec
inc
cmp
cmp
mov
lds
add
test
ret
dec
pop
enter
xchg
and
ret
rorl
dec
rcrb
mov
pop
adc
cmpsb
rolb
mov
add
and
sub
andb
cmpl
jb
leave
shll
das
outsb
jmp
mov
push
jp
add
or
leave
pop
pop
or
js
and
pop
sahf
mov
adc
in
dec
push
jge
mov
mov
data16
jno
push
popa
mov
dec
push
test
jb
xchg
inc
pusha
dec
sahf
into
lock
add
mov
adc
je
loopne
jnp
mov
mov
mov
in
sub
sbb
hlt
les
fisubrs
in
fiadds
dec
insl
or
test
jae
mov
jns
add
lcall
sbb
push
or
xor
in
movsb
sub
ja
inc
filds
je
cs
pop
cs
mov
out
push
jg
or
push
fcomp
into
push
jbe
imull
add
and
cmpl
jnp
rol
in
sub
sub
cmp
dec
ret
ficoml
jbe
jecxz
pop
cld
push
fwait
or
aam
popa
cmpsl
aad
xor
das
jmp
aad
sarb
lret
mov
jg
push
adc
dec
addb
jo
mov
jle
in
test
add
mov
pop
stc
leavew
cmp
mov
mov
out
in
cmpsl
pop
jae
xchg
dec
xor
jb
add
mov
pop
pop
fsubrl
mov
ds
jne
sbb
iret
and
add
jae
sub
repz
mov
add
or
xor
push
or
jno
push
out
xchg
test
lds
out
jnp
xchg
adc
stos
jp
ret
or
ja
ret
cli
mov
rclb
out
pop
push
sub
aam
sbb
out
push
pop
testb
fiaddl
imul
dec
idivl
push
mov
cmc
popa
test
fidivrl
loope
mov
andl
xor
cmpsl
shrb
adc
fmulp
or
sbb
ljmp
mov
inc
les
out
aaa
adc
fcompl
cmp
es
jge
cvtps2pi
ja
movsl
clc
or
jns
es
sub
inc
add
sbb
sub
inc
movsb
aam
insb
aam
sbb
sub
fcmovnb
arpl
dec
ss
and
mov
cmp
enter
xor
sbb
iret
pop
iret
es
std
rcrl
mov
movsl
movsl
jge
mov
ds
adc
ficomps
push
in
icebp
jno
pop
test
pop
sub
dec
sub
pop
adc
or
outsl
sub
xchg
lret
push
pop
notl
pop
int3
ja
repnz
pop
push
sub
xorb
push
jge
jno
adc
das
mov
dec
repz
add
mov
jecxz
ljmp
mov
jbe
xor
bound
xchg
scas
push
scas
movsl
push
push
xor
inc
mov
mov
jmp
popf
dec
push
loopne
insl
aaa
outsb
pop
repz
cltd
cmp
iret
sahf
es
xchg
pop
push
push
pop
adc
cmp
fbld
cmp
ret
imul
inc
push
adc
rorb
add
movsb
jl
xor
repz
jbe
jb
test
jge
add
xor
add
out
dec
roll
std
mul
and
add
push
testb
jno
fnstcw
push
adc
cs
pop
andl
mov
imul
cmp
dec
gs
mov
and
cmpsl
jne
sub
lret
jo
out
push
scas
xchg
mov
movsl
addr16
pop
hlt
sbb
into
cltd
add
ds
cltd
ret
mov
cwtl
cmp
scas
sbb
pusha
outsb
sub
xchg
dec
outsb
push
mov
xchg
xor
add
push
xchg
mov
aas
jb
inc
lea
xchg
mov
ss
in
mov
dec
adc
push
push
push
aad
inc
es
inc
fidivrs
add
xor
jno
mov
dec
loopne
pushf
vaddpd
xchg
xor
dec
in
and
pop
stos
loope
js
gs
mov
and
jge
jae
mov
lods
clc
push
fnsave
mov
stc
jmp
lret
or
mov
sub
xor
push
fstpt
push
xchg
cmp
dec
in
lret
fadds
xchg
mov
pop
popf
or
xchg
add
outsl
push
xor
shll
and
lock
push
out
pop
icebp
movsl
xchg
push
mov
xor
or
lret
push
std
sub
pop
jb
inc
jmp
jmp
sbb
mov
adc
adc
push
mov
mov
in
push
xor
cmpsl
xor
fwait
or
ss
movsb
fsubl
lret
xchg
mov
rorl
inc
pushf
jno
inc
sub
inc
dec
jne
out
shlb
movsl
stos
push
test
frstor
sub
push
ja
xor
scas
rcrl
jns
icebp
xchg
xor
lret
lock
mov
pop
fcomp
das
jmp
lds
test
int
or
sarb
lcall
mov
ret
or
scas
lea
lcall
fwait
mov
xor
inc
movsl
mov
popf
inc
shl
leave
xchg
push
dec
rcrb
roll
nop
mov
sbb
fisubrs
jmp
cli
inc
incl
fadds
jno
adc
out
sbb
inc
into
and
jp
aas
out
ret
aad
push
adc
rcr
ret
or
out
mov
fwait
xor
loop
sbb
jmp
js
xchg
mov
ds
dec
inc
push
int3
cmp
dec
loopne
mov
push
pop
or
movsb
loop
stos
loopne
mov
pusha
sbb
sub
push
add
stos
pop
jae
sti
cmp
ja
outsl
mov
xchg
and
sbb
xor
scas
loopne
mov
test
xchg
cmpsl
scas
scas
adc
fsubrs
mov
pop
push
test
mov
adc
rcl
push
ret
adc
cli
mov
subb
ja
dec
mov
fstps
adc
and
ljmp
sub
mov
inc
lds
adc
loope
inc
inc
pop
in
push
daa
sahf
mov
dec
mov
adc
popa
inc
mov
shrl
inc
pop
leave
sub
push
xor
or
int3
int
mov
mov
je
aam
mov
mov
lods
stc
bound
or
rcrl
xchg
inc
xchg
sub
mov
or
shl
inc
jnp
sub
mov
adc
sbb
mov
shl
mov
sub
xchg
push
add
push
and
push
xor
mov
mov
xor
cltd
dec
repnz
fsubrl
rclb
xor
clc
add
popa
mov
insb
dec
cmpsb
jne
push
ret
and
mov
sti
nop
pop
push
inc
decb
or
into
pop
in
test
lret
mov
add
fsubrl
inc
fisubl
jnp
jl
cli
pop
int
pop
push
pop
jne
xchg
popa
mov
stos
adc
xchg
add
inc
jge
mov
loope
xlat
mov
mov
imul
test
mov
ret
sti
jp
push
cmp
iret
xor
data16
mov
xchg
inc
mov
jbe
inc
out
data16
in
mov
cmpsl
imul
jle
sbb
or
or
jns
xchg
fbld
aad
sbb
in
into
rcr
dec
pop
mov
push
cs
cmp
es
cmp
add
xor
jge
fcompl
ror
in
jmp
inc
mov
sub
fnsave
movdqa
stc
mov
out
test
mov
lods
xlat
cmc
inc
dec
xor
xchg
insb
shll
jle
jns
stos
cmp
hlt
jmp
aaa
movsl
mov
jns
sbb
pop
mov
loope
das
and
and
sub
xchg
es
dec
adc
out
sbb
push
cwtl
add
or
ficoms
pop
add
cmp
cmc
xchg
sub
push
stos
scas
sbb
inc
leave
and
mov
jo
adc
ja
adc
data16
test
sbb
mov
push
xchg
cmp
sbb
imul
adc
rorl
xchg
iret
add
xchg
jnp
inc
mov
mov
rolb
outsb
xchg
cmp
inc
pop
int
lahf
cmpsl
aaa
in
mov
out
jmp
stos
cmp
test
add
out
mov
sub
mov
dec
mov
mov
mov
add
aam
and
cmp
in
sbb
mov
xchg
and
in
jo
jb
gs
das
and
xchg
pop
cs
or
ja
or
movsl
insb
call
adc
scas
ficompl
sbb
pop
mov
mov
mov
mov
mov
mov
test
loop
lahf
movsb
mov
xchg
xchg
pusha
outsb
or
cmp
imul
push
paddsw
pusha
repz
inc
je
fsubrl
mov
pop
adc
lea
dec
std
cmp
test
out
test
add
jecxz
gs
mov
mov
addr16
adc
jnp
out
push
jnp
in
dec
ret
adc
lret
fisttps
mov
repz
jmp
jbe
mov
xlat
push
and
and
mov
sub
or
test
ja
addr16
sbb
cmc
xchg
mov
and
mov
pop
dec
push
xor
test
hlt
mov
xlat
mov
sbb
push
and
xor
inc
insb
pop
push
fwait
xchg
orb
pop
adc
adc
in
adc
nop
out
mov
sbb
loope
jmp
pop
mov
dec
pop
mov
or
sarb
mov
sbb
jecxz
cmp
mov
sbb
andl
jbe
push
dec
clc
or
mov
xor
sub
and
mov
aaa
idivb
add
cmp
push
push
jne
sub
shlb
pop
outsl
cmp
outsl
sti
mov
lret
sbb
mov
mov
inc
mov
mov
ja
or
xchg
test
dec
sbb
mov
gs
mov
push
xor
xchg
sbb
push
lret
jge
and
pop
rcll
rolb
sub
pop
jecxz
enter
jmp
cmp
inc
and
cmpsl
jnp
cli
outsw
and
pop
mov
jmp
faddp
push
or
mov
jle
or
orb
out
cmp
call
push
push
das
mov
std
mov
mov
push
je
out
enter
fadds
xchg
and
adc
xlat
stos
js
push
call
mov
das
mov
shrl
js
and
mov
push
sub
pop
adc
into
lock
loop
mov
xor
push
inc
iret
rclb
stc
xchg
mov
sub
scas
stos
aas
jmp
pushf
fsubl
inc
mov
fbstp
jl
addr16
jbe
push
sub
jmp
cmp
lahf
pop
xchg
and
and
lea
mov
cmp
cltd
iret
mov
in
fisttpl
cld
les
aas
sahf
std
and
lahf
test
adc
sub
sub
icebp
inc
mov
xor
ss
aam
xchg
pop
push
iret
popf
scas
aam
loop
or
push
addb
mov
cmp
fiaddl
lods
lret
pop
popf
and
xchg
rcrl
cltd
pop
xor
in
fcomip
push
jnp
enter
ljmp
jno
jb
add
imulb
fdivrs
push
mov
push
sub
mov
and
sub
adc
or
fstl
dec
fnstcw
mov
loope
push
push
mov
shll
push
es
adc
pop
push
mov
jp
loope
insb
mov
loopne
lds
pop
lock
frstor
mov
aas
leave
lds
mov
jl
cmp
sbb
cmpsl
push
into
jae
orb
lods
jle
imul
sarl
aaa
lock
sub
and
and
lock
mov
stos
out
cmpsb
loop
push
inc
fcos
jae
add
mov
fildll
aam
and
aam
or
loop
jno
shrw
jbe
jnp
inc
lds
mov
mov
js
fsubs
jecxz
movsl
lret
pop
aaa
stos
add
cwtl
clc
push
xor
movsb
xchg
sbb
addr16
pop
xchg
cmpsl
xor
stos
push
notl
scas
rcll
iret
push
xchg
cmpsl
and
lcall
loopne
push
sbb
jmp
mov
sbb
push
push
fstpl
rclb
insl
frstor
adc
repz
rcr
add
sbb
push
hlt
movlps
cmp
sub
xor
arpl
lock
cmpsb
and
mov
fsts
adc
dec
jg
in
in
andl
enter
aas
stos
dec
rorl
cmpsl
xchg
test
mov
push
xchg
out
cmp
dec
scas
sbb
shll
and
subb
sub
inc
ret
mov
aam
inc
call
jg
and
or
popa
xchg
in
je
imul
test
dec
push
lock
pop
mov
dec
jl
sbb
add
or
aad
inc
xor
cltd
divb
jbe
cmp
insb
inc
ret
ret
cmp
inc
and
adc
aam
inc
mov
or
mov
movsb
mov
mov
cs
cwtl
xor
jbe
addr16
lds
inc
jnp
sub
dec
lock
sbb
bound
mov
shlb
cmp
lock
mov
cmp
movsl
mov
shlb
cmp
cmp
push
out
xchg
mov
add
dec
faddl
lret
ds
adc
in
outsl
cmpsb
pop
jnp
call
dec
add
xor
sbb
inc
outsb
dec
roll
fldt
jnp
xchg
fldcw
add
scas
push
iret
rsm
xor
jbe
pop
mov
and
mov
scas
xchg
cmp
repnz
mov
subl
lahf
cmpb
dec
shl
pushf
rolb
adc
js
rolb
cs
shlb
mov
mov
mov
popa
inc
cwtl
pop
mov
stos
mov
cmp
ja
or
stos
cs
add
mov
inc
scas
mov
neg
sub
jg
push
sub
add
leave
mov
imul
divb
ljmp
std
ret
jecxz
loope
push
mov
ds
rclb
cmp
bt
insl
lret
jmp
test
sub
sbb
cli
or
cmp
scas
into
and
arpl
call
or
imulb
sbb
push
push
jg
or
inc
out
jo
mov
cmp
add
loop
mov
cltd
ja
mov
mov
in
das
mov
repz
mov
js
add
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
