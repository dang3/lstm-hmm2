xchg
test
push
lret
mov
dec
pop
add
adc
ja
pop
or
adc
sbb
in
xchg
inc
adc
test
int3
icebp
mov
and
jno
fistpll
mov
xchg
ja
fdivl
dec
add
pop
jp
in
scas
fstps
mov
cmp
sub
fxam
xor
cwtl
insl
jns
pop
iret
ja
push
stos
xor
or
repz
icebp
push
push
push
mov
push
xchg
mov
cmp
loope
lods
lret
mov
stc
lret
dec
into
or
insl
jle
push
push
addr16
pop
mov
ret
fisubrs
pop
and
push
adc
jmp
mov
loopne
pop
lcall
mov
push
fs
sbb
ret
clc
gs
aas
mov
lods
sub
jmp
sbb
enter
push
mov
push
push
push
call
pop
and
add
add
add
call
pop
pop
pop
add
pop
pop
add
mov
jmp
push
mov
sub
push
push
push
and
mov
mov
add
xor
add
rol
loop
pushl
pop
add
mov
mov
mov
sub
sub
mov
sub
add
sub
sub
sub
rol
xor
xor
sub
xor
xor
ror
sub
xor
rol
sub
add
add
xor
sub
bswap
sub
not
rol
xor
sub
ror
rol
sub
bswap
xor
ror
sub
sub
xor
sub
add
sub
xor
add
xor
sub
add
sub
sub
mov
test
jne
call
push
push
push
push
push
mov
call
add
mov
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
lea
push
mov
add
push
pop
rep
pop
mov
mov
mov
mov
push
push
push
push
push
call
pop
test
jne
push
push
push
push
call
test
je
mov
mov
mov
push
mov
add
mov
rep
pop
add
add
mov
add
movzbl
lea
push
push
pop
rep
pop
mov
test
je
push
mov
add
mov
mov
mov
add
rep
pop
dec
jne
mov
sub
je
mov
mov
add
mov
test
je
add
mov
test
je
lea
shr
lea
movzwl
push
mov
shr
mov
and
add
add
pop
dec
jne
mov
shr
jmp
dec
jne
movzwl
add
jmp
dec
jne
add
inc
inc
loop
add
jmp
mov
mov
add
mov
cmpl
jne
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
test
je
mov
add
mov
test
je
mov
add
mov
mov
test
jne
mov
add
mov
add
push
mov
call
test
je
mov
mov
mov
test
je
test
je
and
jmp
add
inc
inc
push
push
mov
call
mov
mov
addl
addl
jmp
add
jmp
mov
mov
mov
mov
mov
cmp
je
push
push
push
call
pop
test
jne
mov
add
mov
test
je
add
xor
push
push
pop
repz
pop
je
mov
add
mov
sub
jb
cmp
jbe
add
jmp
push
lea
push
push
call
lea
push
push
pushl
pushl
call
test
je
push
mov
lods
test
je
sub
add
stos
jmp
lea
push
pushl
pushl
pushl
call
pop
jmp
mov
cmp
jne
mov
add
mov
pop
pop
pop
leave
ret
movl
movl
movl
movl
ret
faddp
faddp
ret
lea
ret
lea
test
arpl
inc
ficoml
dec
lcall
dec
fadd
add
divl
cmp
push
xlat
cmp
add
in
or
or
in
das
lcall
fdivrl
mov
imul
nop
pusha
mov
fistpl
push
int
push
sarl
divb
pusha
icebp
sub
jg
xor
adc
push
and
ss
shlb
cmp
jnp
push
push
outsl
call
add
mov
push
dec
pop
cmp
jb
or
push
cmp
pop
sub
clc
pusha
stc
or
stc
mov
xchg
jle
xchg
xchg
clc
mov
and
push
pop
cmc
push
pop
jg
cmp
jnp
jne
rol
nop
sub
cmc
ja
xchg
test
ja
jg
push
push
pop
pop
push
push
sar
pop
pop
push
push
mov
pop
pop
cmp
cld
cmp
call
or
and
jg
push
mov
pop
or
je
push
cmp
pop
dec
inc
cld
mov
inc
inc
inc
inc
add
push
push
test
pop
pop
push
dec
pop
stc
push
add
pop
shl
test
push
push
cmp
pop
pop
push
jp
and
pop
clc
mov
xchg
sub
jl
push
xor
pop
jg
add
jns
js
and
rol
std
cld
std
cld
push
add
pop
dec
inc
jns
test
mov
xor
add
cld
push
stc
pop
xor
mov
push
inc
pop
and
push
pop
and
cmp
je
add
xchg
xchg
jne
push
jge
sub
pop
shr
stc
add
push
call
adc
fstpt
adc
lahf
fdivrl
in
xor
and
add
push
mov
xor
pop
jnp
test
add
mov
inc
inc
inc
inc
inc
jmp
mov
lea
rolb
xchg
ficoml
mov
mov
aaa
push
or
pop
xor
dec
incl
push
mov
pop
shl
push
cltd
pop
push
push
jo
cmp
pop
pop
push
call
lret
jg
inc
sti
mov
adc
shr
push
cmpsb
cli
shlb
push
repnz
dec
xchg
fdivr
nop
jg
test
addr16
setge
fldcw
ja
jp
ficoml
jne
fcomps
in
int3
test
adc
adc
out
cli
test
inc
test
mov
rcrl
xor
scas
sbb
fdivs
xchg
jbe
lock
inc
fwait
inc
rcrl
jg
popa
pusha
jne
je
jge
outsb
lock
pop
push
xchg
subl
call
cmp
lcall
add
xor
je
loop
jecxz
es
xor
dec
ljmp
pop
frstor
pop
addl
call
xchg
out
or
mov
and
mov
add
push
daa
mov
call
sbb
xchg
and
mov
sahf
movsb
incl
jbe
sub
fldenv
jae
pop
cmp
push
xchg
and
outsl
cwtl
fildl
cmp
jb
pushf
push
mov
add
adc
sahf
out
jle
jle
in
sbb
call
fildl
int
repz
stos
into
lahf
xorb
sbb
fidivrl
add
jge
xchg
sub
iret
jae
lods
cs
leave
or
jl
push
sahf
sahf
adc
mov
xchg
mov
outsb
mov
scas
jne
outsb
push
addr16
pushf
daa
sub
daa
dec
dec
fldenv
sub
lret
sbb
es
jno
push
mov
ret
pushf
test
sbb
mov
xor
sbb
mov
cmp
mov
lods
or
ret
stc
test
sub
push
adc
pushf
mov
cmpsl
icebp
gs
adc
mov
pushf
cs
data16
insl
xorb
mov
in
ja
push
add
sbb
adc
cld
add
ljmp
jge
adc
mov
sub
and
rorb
push
pop
push
xor
fstl
jne
mov
sub
cmc
pop
xchg
mov
fnstenv
nop
add
inc
lcall
das
outsl
mov
jo
pop
add
leave
jmp
in
js
dec
push
xlat
in
insl
cmp
dec
and
cmp
jnp
mov
repnz
lret
or
jnp
xor
xor
cmp
pop
xchg
push
mov
mov
mov
mov
mov
dec
mov
inc
pop
jb
jae
aas
ret
cmp
mov
sbb
popa
pushf
fidivrl
push
mov
ret
aas
insb
bound
cs
cmp
sub
jbe
cmp
inc
push
scas
aaa
jo
sbb
mov
btr
xor
pushf
rcl
sbb
jl
arpl
movl
push
test
lods
mov
mov
mov
xchg
mov
jp
imul
leave
jbe
cltd
mov
movsb
jb
sbb
mov
cmp
mov
cmp
sbb
or
mov
in
inc
ret
cwtl
lock
in
dec
sbb
xor
mov
mov
pusha
dec
mov
push
mov
jno
add
xor
sub
addl
mov
es
lcall
jmp
cmp
mov
and
mov
out
mov
push
sub
insl
jbe
xchg
mov
icebp
lret
sub
loop
jae
test
jae
fdivp
sub
or
in
popa
add
icebp
loopne
imul
or
fs
int3
pop
push
xchg
subl
jp
mov
pushf
mov
jl
fwait
mov
lret
jno
icebp
imul
push
mov
ss
cmp
sbb
les
mov
sbb
jmp
xchg
addb
cld
push
mov
dec
and
test
pop
sti
fldt
or
mov
ljmp
dec
pop
std
xor
mov
sar
mov
push
jp
sbb
xchg
dec
pop
jo
mov
mov
pop
fistps
insb
je
jge
jns
pop
xor
enter
shll
int
pop
or
in
rclb
xlat
adc
sti
add
mov
ja
mov
gs
jge
inc
dec
ds
insb
add
movsl
and
lods
int3
rol
aam
into
inc
jp
stos
rcll
push
jmp
jno
mov
jb
mov
arpl
sarb
repz
cld
lods
lcall
inc
fistps
inc
xchg
xorb
jl
xchg
and
outsb
pusha
adcl
movsl
and
jb
lods
aam
call
enter
test
push
xor
dec
data16
jns
loope
test
mov
push
sbb
adc
adc
or
sub
fists
sub
sbb
jnp
out
shlb
imul
or
cmp
insl
cwtl
lret
int3
int3
mov
jl
xor
cmpsl
and
mov
or
roll
jmp
pop
push
mov
mov
ja
jne
sub
cmp
lea
in
adc
mov
fisttpll
mov
stos
aad
inc
jno
jl
jg
sub
fidivrl
xchg
mov
hlt
addl
xchg
add
lret
cmp
cmpsb
fwait
aad
dec
xlat
mov
pop
adc
gs
and
push
test
das
xor
mov
lds
or
sbb
lahf
jl
mov
es
movsl
mov
adc
dec
ret
xchg
jo
icebp
inc
arpl
jp
pop
je
pop
pop
popa
loopne
fucomp
xlat
stc
hlt
mulb
jecxz
adc
ret
sbb
pop
inc
cwtl
cwtl
out
loope
pop
mov
inc
xchg
or
xchg
mov
mov
iret
cwtl
setae
xchg
xchg
in
dec
shll
aas
sbb
mov
adc
ss
xchg
pop
and
xor
incl
aad
inc
movsb
dec
cltd
data16
mov
hlt
mov
cmp
out
ret
fwait
ja
ss
mov
out
push
test
xor
adc
imul
lret
insl
push
xor
xor
cmpsb
xor
ss
jae
pop
sti
mov
sub
mov
cmp
daa
out
bound
je
jg
sti
sbb
std
ret
popf
fsubl
das
stc
mov
pop
dec
jae
dec
decl
mov
repz
fadd
sbb
and
ds
popa
mov
icebp
loop
inc
out
sub
imul
adc
es
pop
ret
insl
cmpsl
lcall
fwait
sub
sub
and
das
mov
add
test
aaa
jo
mov
push
fnsave
les
movl
sti
mov
cmp
lret
add
aad
jl
bound
jp
or
add
dec
xchg
ficompl
sbb
mov
push
outsl
mov
cld
xor
add
ret
add
cwtl
pop
ret
mov
enter
repnz
je
push
adc
pop
sub
xor
jnp
cld
jmp
mov
lcall
push
jnp
mov
lret
loope
lret
test
jg
jmp
insl
enter
lock
ret
or
aam
xor
pop
xchg
ret
ret
sub
popa
sbb
jg
inc
in
mov
adc
cmp
xor
cld
sub
in
add
aas
sbb
pop
mov
and
and
inc
fdivrs
repz
push
and
add
int3
nop
lea
lea
std
bound
ljmp
mov
arpl
stos
xorb
sub
mov
sarl
int3
test
mov
sbb
ror
xchg
int3
mov
je
cmp
andb
in
clc
dec
xchg
adc
inc
adc
imul
fs
daa
cmpsb
inc
jg
jp
loop
loopne
cmp
push
mov
xor
adc
inc
test
enter
lret
icebp
out
mov
movsl
ret
jp
add
sbb
andl
dec
jns
dec
dec
and
sbb
int3
fwait
lahf
outsb
out
stos
cmp
jbe
pushf
pop
fs
jae
push
push
outsb
dec
xor
push
shrb
pop
jne
mov
cmp
push
jge
and
repnz
cmp
xchg
push
in
sti
jecxz
push
scas
push
xchg
cmpb
test
sub
pop
cmc
shlb
mov
mov
add
jnp
aaa
aad
cmpsl
out
add
jo
stc
bnd
mov
dec
shrl
fs
push
movsl
lcall
jmp
add
mov
sub
cli
test
sub
or
or
cmp
aas
cmpsl
mov
ficoml
outsb
pause
jno
fdivr
imul
outsb
and
add
cmp
adc
in
jmp
mov
fdivs
pop
iret
imul
cmc
add
scas
mov
or
leave
mov
sub
hlt
adcl
or
mov
and
mov
xchg
inc
test
pop
test
xor
cld
adc
repz
fcoml
add
add
addr16
repnz
adc
das
adc
pop
mov
adcl
or
add
dec
stos
or
pop
ror
rclb
cld
repnz
xor
mov
and
mov
push
repz
aaa
jge
cmc
mov
push
pop
inc
shll
dec
cwtl
cmp
jb
sahf
inc
push
scas
ja
sbb
fdivr
dec
jnp
andl
and
mov
pop
pop
fwait
add
xchg
adc
mov
stc
inc
push
inc
in
scas
or
pop
scas
jo
pop
movsb
adc
or
loopne
lcall
out
arpl
xor
lock
push
jo
and
dec
das
inc
mov
clc
push
ret
sbb
mov
pop
cmp
enter
xor
inc
sbbl
push
aam
js
push
dec
jp
mov
in
and
sbb
ljmp
add
dec
cmp
cs
jnp
or
jmp
sub
mov
mov
fcoml
mov
shll
push
cmp
pop
cmpsl
jle
fstl
mov
icebp
nopl
stos
fs
loope
inc
mov
int3
xor
and
int3
outsb
push
outsl
aas
pop
jge
mov
shlb
jbe
scas
add
rclb
pushf
pop
mov
daa
test
rolb
pop
mov
cmp
cs
out
add
push
push
inc
shl
push
inc
sub
iret
pusha
dec
subl
pop
add
icebp
jle
sahf
adc
and
loop
or
sbb
mov
inc
push
icebp
int3
inc
les
mov
jg
pushw
inc
jae
sub
jp
mov
clc
hlt
xchg
or
sbb
mov
sub
cmovs
mov
xchg
inc
mov
inc
fwait
inc
leave
iret
pop
mov
ja
dec
jno
repnz
jmp
test
rorl
out
out
mov
loope
ficompl
movsl
push
lock
jecxz
and
loop
bound
loopne
jp
dec
enter
inc
mov
cmc
adc
xchg
inc
dec
mov
jb
xchg
push
mov
ljmp
inc
xor
div
stc
dec
cmp
test
sub
rol
jge
fcompl
fisttpll
ljmp
movsl
ret
rcrl
dec
es
aaa
xor
hlt
seto
jnp
mov
adcl
movsl
pop
add
aaa
inc
lods
mov
mov
adc
xchg
or
cld
loope
push
pop
jge
push
test
into
lods
xchg
mov
mov
mov
xor
ret
ljmp
pop
cmc
and
mov
sbb
xchg
xchg
jo
outsb
jno
xlat
loopne
adc
repz
loope
int
ds
and
push
xchg
ss
call
cmpsl
cltd
mov
cmpsl
xor
xchg
mov
mov
mov
jo
das
lods
cmp
mov
hlt
push
movsl
lahf
push
sub
xchg
jbe
sub
std
sbb
jo
add
mov
ret
outsl
inc
cltd
enter
mov
sbb
mov
jecxz
adc
xor
ja
pop
mov
add
mov
call
repnz
in
xor
sub
enter
daa
sbb
push
lcall
mov
out
pop
gs
lea
xlat
cwtl
enter
lret
incb
mov
pop
out
sarb
jg
out
mov
outsl
lahf
scas
inc
dec
popw
jne
push
fwait
lahf
ret
jle
pop
mov
test
push
mov
jl
in
push
mov
movsb
popf
mov
inc
repz
rcrb
divl
and
insl
shlb
pop
xor
rcl
stc
or
scas
cmp
je
sti
enter
pop
sbb
cmpsl
insb
mov
push
cmp
cmp
or
fimuls
stos
hlt
mov
inc
push
fmuls
insb
xchg
push
or
cmc
mov
cmp
dec
jno
sub
inc
xlat
pop
jge
jp
xorb
sbb
xor
cmp
sarl
daa
add
leave
fistpl
cld
repz
or
pop
jno
in
jg
dec
cmp
adc
pushf
int3
sub
test
mov
or
test
jns
mov
cld
fwait
pop
push
push
jbe
sub
mov
frstpm(287
fmull
sbb
xchg
fs
push
pop
test
jmp
in
mov
aam
mov
dec
test
mov
or
jge
inc
fistl
lret
jg
xor
pop
ss
adc
mov
pop
push
push
pusha
mov
pop
push
in
jmp
mov
hlt
lds
lret
push
lock
jl
add
adc
aad
out
xor
jne
pop
cmp
inc
jnp
loope
dec
leave
mov
pop
insb
mov
pushf
mov
inc
out
add
fcmove
loopne
shlb
jno
loop
mov
loopne
gs
sbb
daa
inc
lret
jb
adc
fs
stos
imulb
lahf
insl
jecxz
push
out
push
popf
sti
sub
sub
lcall
dec
leave
je
inc
sbb
jmp
cltd
inc
cmp
mov
xor
mov
ret
out
push
push
dec
mov
out
pop
mov
lods
sbb
dec
into
adc
xchg
stos
fstps
mov
inc
pop
lods
cmp
dec
inc
mov
dec
xchg
push
add
loope
cmc
leave
push
mov
gs
fs
in
pop
aam
push
pop
rorl
clc
jo
sbb
push
fbld
jbe
xlat
xchg
jecxz
jecxz
loopne
push
sbb
and
sub
xchg
jmp
leave
xchg
pop
mov
fmull
in
lret
negb
cmpsl
jb
add
lea
or
mov
ljmp
mov
pop
daa
pop
pop
mov
pop
mov
sbb
cwtl
mov
push
fsub
enter
data16
test
ficoml
shrl
jne
cwtl
sbb
mov
addr16
jle
jle
cmp
or
mov
ret
fidivl
add
pop
shl
int3
mov
jnp
xchg
adc
cmp
inc
mov
inc
out
pop
cwtl
pop
pop
xchg
or
lea
jmp
mov
or
add
mov
mov
das
out
push
push
test
ljmp
repz
fistps
and
data16
out
push
movsl
mov
push
sti
mov
dec
cs
mov
and
dec
mov
dec
pop
cmp
test
xlat
iret
mov
scas
std
push
enter
sub
xor
insb
ja
mov
mov
je
lret
pop
xor
test
dec
push
pop
les
test
mov
ljmp
fcmove
nop
pushf
inc
out
mov
jle
dec
xchg
fidivl
xchg
and
jne
std
pop
enter
into
dec
mov
push
popf
mov
mov
lods
sub
and
aaa
fwait
pop
stos
xchg
notb
icebp
pop
leave
outsb
hlt
aas
jns
xchg
bound
sbb
leave
test
cli
outsb
fdivl
pop
rcl
lahf
rcl
and
and
inc
fwait
mov
mov
or
fcmove
dec
popa
sarb
sub
mov
in
adc
cs
mov
inc
rcll
sub
jo
dec
xor
into
incb
imull
or
out
xchg
insl
sbb
or
leave
fsub
jg
jmpw
imul
shrl
cwtl
faddp
pop
sub
js
arpl
daa
leave
cs
or
push
push
add
rcrl
icebp
xchg
and
adc
or
out
icebp
sub
outsb
pop
in
cld
pushf
or
pop
cmp
fwait
out
adc
adc
add
cmp
and
push
add
std
ss
lahf
add
jl
outsl
cmpsb
inc
xor
pop
pusha
cmp
mov
bnd
cmpsl
mov
and
adc
faddl
sbb
out
inc
leave
mov
pop
push
frstor
inc
lds
lret
mov
aam
sub
aas
clc
push
outsb
and
mov
push
ret
xor
int3
scas
jbe
mov
out
inc
or
adc
fdiv
cwtl
push
out
dec
sub
jne
inc
dec
pop
dec
xor
sbb
dec
ljmp
push
mov
cmp
push
aas
test
xor
aam
mov
ds
adc
into
and
xchg
jp
xchg
xchg
add
mov
xchg
xchg
dec
jb
inc
mov
xor
xor
enter
dec
mov
mov
cmpsb
adc
mov
jle
mov
enter
pop
inc
inc
ss
cmpsl
xchg
popf
rcrb
sarb
mov
les
arpl
pop
pusha
repz
lods
out
sub
aaa
or
js
jg
push
fwait
mov
adc
lods
sbb
mov
je
xchg
test
xlat
popf
lret
jmp
loope
mov
inc
test
lods
stos
aad
hlt
xchg
addr16
aaa
pop
adc
and
jmp
mov
xchg
pop
in
test
shrb
push
cmc
shlb
inc
sbb
pop
lds
and
lds
push
ficomps
loop
xor
mov
cwtl
in
or
push
cmp
dec
loopne
ja
nop
bound
mov
aam
mov
xor
push
mov
sbb
or
jne
in
shll
sub
sub
push
cmc
ljmp
inc
test
jo
mov
mov
lock
pop
iret
cmp
dec
leave
enter
adc
adc
cs
ret
inc
scas
sbb
mov
xlat
fs
inc
cld
les
pop
sahf
fwait
sbb
aas
cmp
cmp
cmp
mov
inc
loopne
or
lods
cltd
lods
mov
add
dec
test
adc
xchg
inc
mov
divb
pop
xlat
out
pop
mov
js
sbb
cmp
cmp
xchg
pop
jnp
and
gs
xchg
mov
mov
sahf
push
mov
jae
sarb
lds
clc
jae
mov
and
shrb
cmp
pop
jp
xchg
sub
or
dec
jle
jg
cmp
jmp
sarb
jae
mov
rol
rep
cs
add
push
and
sbb
mov
or
mov
mov
mov
int3
mov
push
dec
fs
push
adc
push
xor
cmpsb
pop
push
fdivl
lods
pushf
sbb
pop
xor
inc
in
pop
fiaddl
icebp
daa
insl
pop
shll
fnstsw
mov
daa
jl
xor
xchg
inc
fcoms
mov
sub
icebp
jne
inc
mov
push
mov
incb
fmull
mov
iret
lahf
fwait
pushf
in
adc
mov
stos
fldcw
enter
and
xchg
sbb
outsb
and
adc
int
jl
jmp
inc
push
mov
popa
aas
lretw
out
mov
dec
into
cwtl
std
dec
adc
mov
mov
bnd
sub
push
push
add
pop
pop
add
imul
sub
add
pop
inc
mov
stos
mov
pop
jg
fdivr
scas
mov
lret
test
push
repz
sub
sbb
jmp
in
out
fwait
adc
ljmp
in
mov
and
or
inc
mov
dec
or
cmc
or
aaa
jg
xor
out
sub
subl
push
push
mov
inc
xchg
mov
or
cmpsb
mov
cld
fstpl
sub
adc
push
popa
sahf
nop
sahf
pop
popf
mov
pop
mov
out
jae
clc
fbstp
std
clc
mov
mov
loop
out
mov
push
hlt
mov
adc
push
dec
scas
sti
sub
imul
mov
push
mov
jle
mov
inc
sbb
sbb
or
sahf
pop
popa
cltd
mov
add
fstpl
in
sbb
sahf
ds
ror
aaa
unpcklps
pop
incl
and
mov
repnz
ret
mov
cld
xor
push
mov
stc
cmp
pop
xchg
cmpsl
test
push
popa
repz
sbb
fldl
xchg
loopne
and
pushf
sub
dec
cmp
fldl
fistps
aas
call
addl
into
mov
sub
sbb
test
lahf
jnp
jnp
pop
lock
cltd
gs
lahf
xchg
jb
mov
das
cmpsl
xor
and
cmp
nop
pop
into
roll
push
dec
dec
mov
sbb
dec
push
fs
pop
das
xor
fistps
sub
stos
xlat
mov
shl
mov
sti
pusha
sti
popa
mov
or
jno
dec
dec
xor
sub
and
je
aas
shlb
push
cli
movsb
scas
dec
xchg
push
mov
mov
inc
cmp
enter
test
lds
movsl
mov
sub
xchg
jno
cmp
jne
loopne
adcl
mov
sub
leave
sbb
fisubl
pop
pop
xor
cmp
mov
dec
ret
adc
add
fisubrs
fisttps
adc
add
call
mov
mov
scas
dec
insl
push
dec
mov
lds
jbe
adc
jae
xchg
pop
jbe
or
and
lods
dec
adc
lods
fadd
in
dec
pop
out
imul
xchg
scas
out
mov
int
sbbb
push
loopne
dec
roll
ljmp
or
ds
shlb
and
pushl
out
out
push
aas
inc
sbb
inc
stos
out
cmp
mulb
mov
add
jecxz
adc
movsl
aaa
push
add
das
sbb
lcall
sub
adc
adc
pop
push
sub
and
adc
sub
decb
ss
cmpb
adc
dec
sbb
fisubs
xchg
xchg
xor
mov
loope
or
cmpsl
jle
and
ret
cwtl
stos
jge
jg
addb
push
push
inc
hlt
sarl
dec
inc
xchg
pop
popa
cmpsl
xor
cwtl
cltd
scas
cmp
ja
pop
sbb
lret
push
outsb
or
in
push
in
cld
test
inc
add
lahf
ljmp
inc
test
enter
mov
sbb
sub
xor
je
and
inc
ret
outsl
aaa
xor
lock
xlat
inc
pop
fst
cmc
sub
out
outsl
mov
fwait
and
dec
mov
jg
and
mov
sbb
in
int3
inc
sub
lea
xchg
subl
orb
jl
out
pop
xchg
mov
push
test
jp,pt
mov
scas
sub
add
mov
lret
mov
out
push
jne
andl
xchg
loop
mov
movsl
ljmp
dec
mov
lods
mov
js
fisttpll
mov
lcall
mov
out
pop
imull
adc
out
xchg
movsl
or
xchg
push
stos
jb
add
jge
mov
and
jae
inc
mov
inc
mov
imul
out
sbb
mov
pop
pop
fisttpl
icebp
mov
sbb
enter
dec
je
loop
aas
dec
fisttpl
mov
and
inc
leave
push
dec
pop
mov
mov
cmp
nop
xor
stc
pop
xor
dec
push
aam
cmpsb
lds
add
mov
xchg
nop
gs
mov
imul
fiadds
repz
mov
dec
test
lods
xor
nop
push
jo
jno
fs
fidivrl
jge
jp
sub
cwtl
cmp
inc
sbb
add
mov
fmul
cmc
push
or
rcrl
dec
insb
jns
inc
fistpl
dec
jecxz
mov
add
sub
mov
jmp
or
jns
scas
xor
mov
mov
push
orl
push
add
data16
sahf
int
stos
xchg
jge
mov
mov
add
repnz
lcall
jl,pn
push
xor
outsl
fdivs
shr
mov
xchg
jne
inc
or
jo
fwait
jbe
push
movsl
cmp
mov
imulb
adc
xchg
popf
insb
inc
pop
mov
push
mov
add
nop
clc
inc
or
sub
popl
enter
add
mov
mov
xor
inc
dec
pop
mov
jg
dec
jg
dec
cmp
leave
loop
into
and
nop
popf
xchg
push
rcrl
mov
es
xor
jb
in
xor
gs
mov
xchg
push
or
cmp
cld
and
inc
sub
lock
cmpsl
loop
int3
sub
int
cmpsb
out
jno
jmp
loop
cmp
push
and
out
imul
sub
mov
xchg
addr16
hlt
adc
mov
xorb
js
xchg
mov
or
inc
xchg
imul
mov
xlat
fdivrs
arpl
cmp
or
ljmp
pop
testl
sub
cli
jnp
push
mov
add
sbb
sub
ljmp
push
in
push
adc
mov
sarl
jo
lds
mov
and
int3
mov
push
ja
sbb
adc
jl
fldl
lret
idivb
inc
movsl
ret
test
jbe
inc
adc
mov
arpl
aad
pushf
xchg
inc
inc
xchg
popf
bound
lahf
mov
ret
ret
cmp
pop
mov
gs
ror
and
nop
ret
icebp
xor
mov
push
loop
or
ret
xchg
ss
xchg
cmpsl
rolb
sub
inc
enter
add
adc
pop
jl
push
repz
pop
jp
test
inc
adc
aam
inc
pop
cmp
int
push
fsubl
call
cmc
jae
fsubs
mov
lcall
jbe
inc
mov
sbb
stc
jg
mov
and
mov
push
js
cmp
int
jns
lret
test
js,pt
movsl
push
leave
push
je
fidivl
sub
mov
in
push
lock
cmpsb
movsb
notl
sbb
mov
add
cmp
fcoms
in
sub
pop
lea
jae
push
out
and
xchg
xor
imul
pop
push
adc
iret
dec
pop
mov
icebp
sbb
push
iret
pop
daa
in
lret
xor
popf
push
pop
or
mov
xchg
jo
jl
dec
xor
sub
mov
adc
push
mov
mov
aam
sbb
cld
mov
cmp
mov
xlat
xchg
xchg
cmp
jecxz
or
sbb
mov
xchg
push
xor
push
sarb
jle
dec
mov
nop
clc
test
dec
int
jbe
xchg
icebp
jo
mov
fs
and
push
rcll
jle
inc
mov
jl
psubusb
orb
xchg
pop
or
aam
stc
lret
pop
addr16
sbb
xchg
das
sti
shlb
jnp
inc
mulb
push
jge
add
rcrl
sub
lods
popl
or
lea
xor
aad
xor
adc
cmpsb
xlat
aad
inc
push
fdivrs
inc
push
sar
and
ficoml
into
pop
sbb
jg
mov
inc
in
test
pop
ds
inc
shlb
dec
and
subl
xor
mov
aas
push
and
shlb
in
cmp
add
mov
stos
in
xchg
push
shll
outsl
mov
das
mov
and
xor
pop
sbb
rolb
ret
shrl
xchg
pop
push
add
cmp
cmp
xor
enter
ficoml
movsb
out
jno
jge
imul
jg
mov
aam
dec
fisubs
push
lcall
mov
loop
dec
scas
xchg
movsl
outsb
in
jnp
adc
cmp
rcl
hlt
iret
cli
rclb
fistpll
mov
test
jne
inc
call
andb
jnp
cs
xlat
test
out
xchg
and
and
fcoml
push
testl
clc
dec
fildll
lret
dec
mov
movsl
mov
int
imul
aam
sbb
shr
cs
add
xchg
dec
xchg
int3
rcrl
dec
mov
adc
movsb
das
iret
add
cwtl
repnz
cmp
leave
cmpsb
add
and
xor
shrb
fidivs
aam
mov
mov
cltd
mov
add
or
fwait
push
jle
fidivs
xchg
inc
imul
sub
dec
andl
jb
mov
mov
push
cld
movb
cli
jns
or
popf
pop
add
and
mov
cmp
dec
add
jnp
mov
mov
pop
sbb
sti
scas
lea
inc
pusha
aam
test
bound
aad
fs
jl
lahf
jo
inc
push
sbb
js
push
jae
ljmp
outsb
popa
adc
sbbb
and
add
call
cltd
inc
push
andl
aad
fsubrs
cmp
add
xor
out
insl
dec
in
add
pop
dec
sub
mov
out
add
or
outsl
mov
mov
mov
lea
out
mov
outsl
cmp
icebp
dec
pop
dec
or
jecxz
fwait
repnz
dec
sub
ret
roll
xor
xchg
mov
pop
xchg
mov
jae
lret
and
mov
push
int
cmp
sub
inc
cmp
inc
push
or
les
dec
and
scas
roll
pushf
fisubl
flds
shll
xchg
iret
imul
jnp
cmp
pushf
pop
cmpb
popa
je
sbb
inc
xchg
stc
sub
xchg
and
adc
mov
pop
in
mov
outsb
dec
pop
push
testl
leave
push
and
fs
mov
ljmp
mov
lods
ljmp
lcallw
aam
cmp
rcr
or
xchg
push
push
xor
mov
mov
cmp
fisttps
in
xor
add
daa
cltd
dec
data16
and
xchg
jp
or
and
incb
xor
xor
clc
dec
sbb
mov
sub
push
sbb
mov
mov
flds
addl
dec
in
shr
insl
and
cmpsl
xor
fsts
jge
xor
xchg
insb
mov
fnstsw
sbb
push
mov
test
pop
jb
mov
mov
pop
xlat
jo
dec
mov
jb,pt
aaa
fldenv
pop
push
sbb
in
ficompl
enter
sbb
add
cmp
or
rclb
dec
sbb
cmp
test
cmp
mov
push
mov
sub
jle
jno
cld
or
fs
sub
aas
stc
repz
sahf
xchg
and
test
or
adc
fistps
sub
insb
bound
aas
fistl
mov
ret
mov
dec
std
arpl
fmuls
addl
es
in
daa
cmp
lods
xorl
cltd
xchg
pop
mov
insl
out
xor
les
into
jnp
gs
int
rcrl
loopne
mov
test
bound
out
or
inc
jp
mov
test
imul
popf
lret
cli
push
inc
pop
push
roll
adc
dec
scas
xchg
push
stos
data16
out
insl
rol
sub
inc
das
ficomps
jns
in
aam
stos
popa
ja
lods
add
fcoms
inc
xchg
in
mov
dec
popa
cwtl
cmp
hlt
push
mov
or
xchg
es
es
dec
outsb
xchg
push
inc
testl
lret
adc
xchg
pop
cli
jbe
shrb
imul
add
std
lods
push
fdivs
mov
aas
cmp
lds
pop
sbb
das
mov
xchg
cmp
add
fiadds
xchg
xchg
mov
sub
add
xchg
test
add
arpl
lret
ja
and
out
push
ret
sarb
add
nop
iret
sub
jmp
pop
push
push
pop
in
mov
mov
rcrl
bound
test
mov
xchg
jno
inc
adcb
addl
test
daa
shlb
pop
mov
sbb
loop
cmpsl
fcomps
xor
mov
dec
divb
pop
and
cmpsb
adc
stc
jo
lcall
sub
add
sub
sbbl
jle
push
lock
xchg
mov
jo
and
cmpsl
ds
add
sub
jae
test
jle
movnti
jno
rolb
and
inc
scas
adc
insl
mov
mov
adc
pop
mov
jne
xor
mov
inc
enter
scas
or
lods
mov
push
ret
mov
movsl
or
je
xchg
push
push
dec
mov
jmp
xchg
adc
jne
loope
sahf
pop
scas
add
adc
aas
cli
push
cmp
and
aaa
roll
cmpsb
dec
and
in
xchg
push
xchg
fwait
movsl
in
lea
in
mov
add
sub
jg
mov
sbb
shld
mov
scas
mov
xor
pop
cmp
dec
pop
inc
lret
inc
cmpsl
mov
data16
mov
sahf
mov
jns
pop
ds
inc
lds
lret
adc
cli
aam
in
cmp
scas
popf
ss
mov
pushf
adc
das
mov
pop
nop
mov
mov
stc
stos
pop
push
lods
aam
mov
xor
ljmp
imul
clc
call
fiadds
call
jnp
inc
cld
mov
dec
push
movaps
push
sahf
pop
cmpsl
fstl
push
jnp
push
orb
aam
xchg
push
shl
sahf
test
imul
es
addr16
and
jae
adc
mov
sbb
mov
test
add
inc
movsb
lcall
add
cmp
push
int3
inc
stos
movsl
pop
loopne
inc
das
jno
inc
jge
aad
inc
cmp
cmpsb
scas
popf
dec
aad
fmull
lret
rcl
outsl
and
outsl
sbb
scas
aam
mov
jne
push
inc
mov
cwtl
fsubrs
add
in
push
sub
sub
je
cltd
aad
in
add
lahf
pop
rol
and
ret
jmp
sub
test
inc
out
jmp
sbb
mov
add
roll
jecxz
jae
pop
dec
data16
icebp
imul
add
adc
sbb
and
insl
fildl
popf
xor
fiaddl
pop
jecxz
cmp
push
sub
lds
add
dec
shll
push
push
mov
stc
xchg
cli
push
ds
pop
imul
loopne
mov
ja
int3
shrb
imul
push
sarb
jle
xchg
lock
movb
jp
dec
cmpsl
jp
mov
leave
push
mov
or
pop
mov
int
xchg
sbb
scas
pop
mov
aas
roll
or
sub
mov
cld
pop
mov
je
daa
add
fldl
scas
mov
mov
jl
stos
xchg
out
push
clc
pop
cmp
inc
cmp
fiadds
lahf
mov
cli
mov
pusha
mov
addr16
xlat
and
lock
mov
nop
call
ret
or
mov
xor
imul
in
push
mov
loopne
push
mov
dec
lahf
out
stos
jg
repnz
lock
jmp
push
inc
dec
fincstp
jo
push
add
dec
in
test
mov
repz
pop
jno
mov
clc
pop
popl
inc
cmpsl
sbb
cld
mov
push
jbe
jle
sub
xor
fbld
or
daa
aaa
jnp
cld
orb
repnz
stos
test
pop
mov
loope
popf
rol
test
repnz
sub
adc
push
pop
pop
imul
pop
mov
mov
mov
lcall
fs
call
mov
dec
pop
cmpsb
pop
xor
scas
mov
fisubrl
pop
mov
xchg
xor
lcall
xchg
xchg
pusha
sbb
iret
lcall
into
push
xchg
add
mov
xlat
mov
cmp
stos
je
sbb
or
je
sbb
nop
std
int3
cmpsl
xor
fcom
outsb
add
xor
in
aam
out
out
movb
stc
mov
push
inc
in
leave
cmp
pop
pushf
ja
cmp
inc
fmul
xor
xorb
mov
paddw
sbb
mov
and
sti
push
int3
push
mov
push
cltd
je
pop
inc
push
inc
shll
jecxz
aad
mov
loopne
repnz
jl
mov
jb
in
adc
lods
js
filds
or
xchg
dec
push
iret
fwait
aas
in
push
iret
mov
int
inc
pusha
push
mov
std
sbb
jp
add
clc
sub
jl
out
ljmp
out
imul
orl
fcom
xchg
jge
roll
ret
xchg
mov
add
dec
aad
loop
pop
sbb
sbb
data16
push
and
repnz
data16
in
dec
scas
sbb
or
test
xorl
mov
add
mov
cmp
int
mov
cli
or
cwtl
and
xchg
or
and
push
xlat
cmc
mov
sbbb
lds
je
lret
adc
pop
cmpl
faddl
fildll
mov
es
mov
scas
jne
push
test
fsts
pop
pop
push
jecxz
push
test
rolb
ret
sub
lock
sbb
cmp
adc
fwait
inc
or
adc
cmpsb
lahf
aad
les
out
mov
stos
sbb
mov
and
fucom
xchg
popf
jb
call
out
sbb
mov
iret
lea
or
jecxz
cmp
cmpb
sbb
mov
mov
mov
ret
bswap
mov
test
arpl
sub
mov
cli
inc
stc
add
cs
mov
mov
div
fadds
imul
xchg
out
xchg
insb
inc
sub
pop
push
mov
loop
mov
inc
xor
test
lahf
push
jecxz
xchg
mov
xor
dec
adc
iret
js
leave
addl
jg
data16
mov
ret
cli
sub
push
adc
cmpsb
decb
sahf
unpckhps
filds
jl
call
or
inc
ja
mov
test
sar
adc
sahf
sbb
es
nop
mov
pusha
sbb
mov
dec
outsb
mov
xor
or
lcall
or
mov
cltd
shrl
add
or
popf
mov
mov
add
in
sarb
lcall
jp
inc
mov
and
add
test
loope
in
gs
loop
sarb
in
int
loopne
lods
decb
clc
hlt
das
prefetchw
or
sbb
call
mov
movsl
dec
les
rcll
xor
sbb
inc
jnp
test
mov
xor
sti
in
jge
lret
dec
mov
mov
mov
repnz
push
cmp
shl
stos
das
pop
xchg
push
frstor
pop
ja
push
xchg
push
loopne
jne
leave
fcoms
jmp
imul
mov
mov
inc
jge
mov
test
ds
cmpsl
jmp
mov
xor
inc
outsb
xchg
out
xchg
pop
add
fmull
shr
fsubr
cmpb
push
cs
cmp
add
repz
lock
sbb
mov
test
lock
std
jnp
test
sti
xor
ljmp
cli
sar
cmp
hlt
test
xchg
pop
test
pop
add
cmp
adc
push
and
test
jmp
in
mov
xchg
ficomps
daa
arpl
les
xchg
testl
push
mov
push
lock
pop
aam
clc
out
imul
push
sbb
lcall
shll
fnstcw
mov
jge
stos
pushf
pop
imul
cmp
in
lods
adc
mov
out
sbb
jg
jecxz
test
shll
int
icebp
test
lods
inc
or
and
mov
mov
fildl
insl
mov
cmp
int3
dec
xchg
in
cmpsb
mov
cmp
jl
scas
js
sub
cmpb
fsubrl
mov
push
in
mov
mov
insl
xchg
ret
mov
sbb
fisubrs
movsl
lea
inc
ja
jg
mov
popa
out
mov
jp
push
lcall
add
push
inc
iret
and
clc
cmpb
mov
dec
or
loop
mov
cli
std
lds
fistl
push
ja
pop
pop
dec
pop
pop
lret
es
fdivrl
dec
pusha
and
data16
test
xchg
push
clc
mov
and
sbb
repz
ret
dec
repz
adc
aam
xchg
mov
lret
aam
lahf
sub
push
jae
movsb
jmp
ret
clc
mov
dec
nop
lahf
mov
jle
sti
iret
icebp
add
out
mov
mov
stc
ds
push
sub
fucomi
ljmp
lods
pusha
xchg
jne
sub
dec
fsubrl
add
mov
test
mov
mov
xchg
fmul
mov
cmp
movsl
cmp
jmp
and
xchg
cmp
and
xchg
in
pop
fimuls
mov
adc
push
ss
jmp
rol
jne
jns
ds
out
into
push
jae
and
adc
xlat
push
repnz
mov
int3
test
pop
dec
in
mov
int
pushf
cmp
lea
repz
or
jo
mov
jno
test
roll
cltd
clc
add
push
cs
push
sub
sarb
aaa
outsb
add
cli
imul
dec
and
and
les
push
stos
in
pop
jmp
aam
mov
mov
outsl
dec
jns
ss
jo
daa
shl
stc
mov
in
stc
aad
testb
adc
sub
rorb
mov
out
cmpsl
lret
xor
cmp
gs
jns
sbb
out
mov
cmpsl
out
xor
addr16
pop
jp
mov
stos
aad
lret
insb
enter
push
lret
testb
push
scas
lahf
hlt
xlat
les
bound
in
cmp
jg
in
jb
xor
dec
mov
data16
ret
add
mov
mov
fstps
sub
fsubs
sahf
add
inc
pop
stos
movsb
loope
test
es
pop
das
and
ds
dec
popa
pop
push
dec
mov
xor
out
mov
mov
test
into
divb
out
pop
sub
push
orl
push
and
lret
xor
xor
push
into
daa
xor
loopne
dec
pop
ljmp
dec
or
mov
test
dec
sbb
cmp
fs
insl
in
dec
mov
movsl
lcall
or
bound
cmp
adc
sub
ja
push
shrl
icebp
lods
sti
pop
pop
pop
add
ss
ret
mov
test
mov
mov
popf
aad
popa
mov
sbb
aam
arpl
inc
mov
push
icebp
push
push
lret
std
dec
dec
and
push
mov
sti
lods
push
mov
sti
pop
out
iret
call
xchg
pop
mov
push
imul
mov
push
push
scas
pushf
rclb
xchg
sub
nop
jecxz
hlt
adc
or
push
xchg
cltd
mov
enter
imul
nop
mov
and
add
xlat
jge
ja
pop
sub
mov
fstp
je
sbb
xor
lea
aas
jmp
ficoms
cwtl
js
in
cmp
ret
iret
and
sub
aas
outsb
jecxz
aad
call
repz
inc
xlat
adc
call
add
sahf
and
dec
dec
adc
bnd
stos
xchg
push
mov
pusha
or
cmp
js
cmp
clc
jae
cmc
push
outsl
mov
xchg
xchg
xchg
mov
mov
sbb
leave
fisubrl
aad
fidivs
pop
hlt
jae
sbb
incl
mov
and
jnp
pop
pop
push
xlat
mov
mov
mov
xchg
pop
cmpsl
push
add
cmpsl
push
in
dec
imul
adc
inc
insl
data16
or
mov
xor
js
scas
in
xlat
fildl
js
or
subl
insl
mov
negb
fwait
add
dec
sub
outsb
dec
adc
movsb
mov
jo
adc
sub
push
repz
pop
lret
jbe
xchg
in
sbbl
adc
cmp
mov
sti
inc
je
pop
test
inc
inc
jae
sahf
bound
popa
jle
jne
mov
mov
adc
in
bound
xchg
imul
dec
jno
mov
inc
mov
cltd
movsb
int
fildll
cmp
lahf
inc
cmp
fisttps
push
jl
add
roll
and
xchg
jge
stos
icebp
inc
insl
std
mov
xor
sbb
dec
sub
adc
std
cmpsb
push
fiaddl
adc
inc
mov
add
and
in
xchg
faddl
cmpsl
adc
adc
cli
lcall
cltd
into
sub
and
push
es
inc
cmp
sbb
push
mov
add
push
dec
stos
daa
cmp
sub
stos
je
ss
pushf
sbb
cmp
mov
shrb
das
pop
jns
xchg
dec
in
es
push
xor
fistl
push
cmc
sub
testb
jb
push
jmp
mov
xor
mov
dec
outsb
in
mull
sbb
ljmp
cmpsb
lcall
mov
and
cmpsb
dec
sbb
das
sahf
repz
shrb
popa
outsl
jbe
std
movsb
mov
push
sarl
out
inc
mov
push
mov
sbb
call
mov
fisttpl
rcr
dec
ljmp
addr16
pop
in
into
loopne
sub
arpl
loop
out
add
insl
sub
rorb
ret
scas
ljmp
mov
cmpl
in
repnz
dec
movl
mov
add
in
movsl
test
js
pop
rcrl
lret
daa
push
cltd
addr16
push
js,pn
sbb
inc
pop
cmc
and
add
xchg
mov
and
loop
imul
popa
mov
loop
movsb
lahf
loop
bound
lds
xchg
mov
cmc
shlb
daa
jge
lahf
mov
or
xor
mov
aas
je
pop
in
iret
push
and
out
stos
faddp
adc
xchg
xor
push
in
fiadds
xchg
fsts
out
and
sbb
sbb
lret
xchg
or
aas
mov
addr16
cld
push
repz
mov
cmp
test
outsl
push
push
or
out
xchg
aaa
movsb
ret
push
mov
shl
pop
subb
js
mov
out
mov
cwtl
mov
cmp
adcb
mov
bound
bound
add
lret
lcall
adc
icebp
divl
dec
dec
xchg
insl
adc
ss
push
add
popw
xor
cli
scas
scas
xor
cmpsl
mov
or
pop
fwait
test
pushf
stos
cmpl
sub
in
adc
pop
dec
nop
and
pop
inc
push
sub
mov
ljmp
cmp
jge
mov
leave
sub
push
sahf
mov
mov
cld
dec
call
cmp
sub
ret
rolb
and
adc
push
dec
mov
idivl
xor
adc
adc
pop
pop
cltd
inc
pop
sub
xchg
flds
rcl
es
mov
xchg
cmc
enter
push
add
addr16
mov
lock
pop
nop
test
cmpl
or
int
ss
repz
or
mov
lock
jge
out
or
mov
scas
inc
arpl
lea
je
lahf
jg
sub
xor
leave
sub
lock
mov
adc
cmp
dec
movsl
popa
lret
jns
or
adc
int3
cmpb
shlb
mov
jae
jbe
fisubs
mov
divl
stos
insl
or
mov
cld
add
sub
enter
sub
fbld
or
mov
clc
pop
imul
lods
adc
sub
xchg
repz
lods
jle
cs
cmp
xor
mov
imul
sahf
sbb
lea
sbb
or
outsl
push
xor
fdivrs
xchg
fcompl
xor
cmc
add
mov
push
sbb
cld
pop
mov
nop
fistpl
insb
mov
xchg
outsl
inc
lcall
xor
push
cli
xor
add
push
pushf
xor
push
push
loope
cmp
cmp
or
and
daa
adc
xchg
lea
push
js
sbb
pop
adc
xor
test
adc
push
pop
cmpsl
js
pushf
add
xorb
test
in
aaa
pop
in
fxch
mov
sub
call
popf
mov
and
fs
xor
push
fldt
push
fmuls
int
ds
neg
add
std
int3
rol
scas
fsubrl
cmc
jmp
and
mov
gs
sbb
push
les
jecxz
add
orl
jle
mov
sub
mov
jge
mov
pop
sub
fcomps
jl
fbstp
add
sbb
fwait
in
push
adc
inc
add
lods
testb
mov
mov
mov
repnz
xchg
or
mov
sbb
sub
dec
sarb
sbb
xchg
sbb
mov
pop
mov
leave
es
adc
jne
cmp
mov
js
xlat
push
mov
jae
hlt
int3
ljmp
pop
mov
and
dec
inc
outsl
insl
sub
pop
xchg
test
xchg
fistpll
fwait
pop
adc
dec
jl
jmp
lods
pop
out
xchg
jo
push
push
mov
jno
pop
mov
test
add
jne
and
or
mov
cmc
pop
mov
and
aas
xor
xor
cmc
jns
sub
lds
jne
mov
cmp
sarb
rsm
fstpt
push
or
xchg
jb
push
jecxz
dec
jbe
and
jp
lcall
loop
das
daa
and
sbb
or
arpl
mov
mov
imul
adc
lock
push
jbe
cmp
push
out
test
addr16
push
mov
stc
addb
add
nop
clc
lea
mov
or
sti
push
adc
add
stc
fldt
inc
or
stos
mov
jp
xchg
clc
in
mov
dec
inc
xchg
push
movsl
mov
int3
jo
mov
xchg
dec
mov
or
insb
xchg
jl
mov
fs
dec
sahf
cmp
cli
xor
sub
clc
addb
nop
movsb
xchg
dec
and
dec
push
sbb
adc
in
lret
xchg
sub
rcrb
cmp
cmp
in
add
scas
push
in
lds
cmp
enter
adc
jne
js
jno
int3
in
lock
mov
lahf
ret
inc
xlat
mov
xchg
dec
out
leave
ja
bound
scas
clc
xchg
xor
insb
cltd
icebp
mov
bound
aas
add
inc
clc
lock
mov
mov
push
loop
jo
popf
mov
xchg
and
out
and
inc
cmp
ficompl
sbb
or
mov
clc
push
mov
ss
push
je
fsubp
stos
jp
cld
pusha
in
sub
rcrb
jmp
pop
js
hlt
jl
loopne
dec
mov
or
or
hlt
cmpsl
stc
leave
xchg
mov
mov
or
add
mov
inc
mov
out
gs
sahf
inc
addr16
neg
cs
sub
cmpsl
popf
pop
jp
push
push
frstor
insl
arpl
jb
and
and
popf
sbb
sbb
dec
jne
repnz
adc
je
imul
dec
adc
mov
mov
nop
mov
icebp
pop
pop
shlb
mov
pop
push
jns
testb
sub
lea
in
dec
jl
popa
mov
cmp
dec
jmp
xchg
jnp
or
add
push
into
dec
jno
es
fs
ret
test
test
pop
adc
sub
movsb
lret
int3
stos
xor
cmc
mov
jge
pop
and
sbb
adc
sub
inc
dec
pop
push
inc
adc
enter
aas
sahf
inc
fimuls
mov
xlat
pop
out
iret
lret
jae
fs
mov
int3
add
lcall
pop
add
je
fcom
insl
push
xchg
cmp
mov
mov
icebp
add
add
sbb
xor
aas
in
dec
popf
test
lds
aaa
iret
aas
test
jmp
imull
push
and
mov
mov
jge
mov
jae
lahf
sbb
jae
jns
mov
repz
pusha
cld
xorl
aad
dec
clc
xchg
test
pop
xor
imul
enter
test
pop
and
mov
cmpsb
shll
divl
or
sbb
pop
xor
addr16
mov
loope
fsubl
xor
aam
xchg
push
xchg
jg
mov
or
ror
push
cmpsl
mov
push
out
shll
or
lret
shll
test
popf
cmp
leave
outsb
pop
das
loopne
ja
and
xchg
mov
or
xchg
ds
xor
test
or
adc
clc
jp
and
push
mov
push
dec
das
or
rcl
sarb
inc
nop
and
sub
lret
outsl
test
lods
mov
or
mov
decb
das
addb
sbb
insb
xlat
jmp
dec
cmp
inc
cmp
mov
cmpsb
sbb
orl
pop
rcll
inc
mul
mov
aas
mov
xor
lods
push
mov
mov
dec
outsb
sub
addb
or
loope
push
hlt
push
insb
and
mov
xchg
jo
push
jmp
cmp
int3
shl
outsb
je
mov
pop
jbe
cmc
sub
mov
cmc
lds
mov
outsl
sub
sub
sti
fcompp
pop
dec
ljmp
mov
push
sub
add
and
dec
inc
add
jne
cltd
outsl
mov
dec
jl
sbb
push
mov
imul
or
and
xchg
and
sarb
mov
leave
dec
lret
bound
dec
xchg
outsb
lahf
mov
inc
sub
sbbb
and
ja
xlat
dec
and
jmp
std
sub
pop
addr16
repz
dec
xchg
popf
jns
leave
out
fcompp
mov
andb
inc
in
test
scas
aas
idivl
adc
sar
jle
pop
push
addr16
ror
subb
cwtl
push
sub
fldl
stos
xorl
add
movsb
xchg
cmp
pop
dec
insb
addr16
mov
xor
or
lds
sbb
aad
imul
add
mov
adc
mov
inc
mov
sarb
sti
out
in
shl
movsl
out
divb
inc
mov
outsl
dec
or
popf
jle
pusha
jp
mov
test
mov
divb
cmc
jmp
inc
dec
mov
push
pushf
xchg
mov
jle
ret
les
dec
aaa
popf
out
dec
popa
dec
pop
inc
dec
inc
push
stos
push
call
roll
lcall
fbld
insl
shr
push
nop
imul
push
push
repnz
rolb
jl
dec
mov
adc
pop
sub
daa
lock
aaa
mov
lret
jp
adc
sti
in
sbb
outsb
jno
add
ss
daa
stos
push
sub
or
adc
mov
sbb
xchg
jle
xor
ja
lea
cmpsl
xor
xor
xor
push
call
and
in
and
sbb
lock
lret
pop
imul
inc
mov
lahf
push
insb
lea
pushf
idivl
sbb
dec
neg
mov
pop
sbb
out
mov
mov
pop
into
mov
or
cmp
test
mov
pop
sub
or
adc
in
push
mov
xor
jmp
pop
insb
pop
and
mov
or
mov
pop
hlt
stc
sub
jb
jb
mov
aam
inc
fisttpll
enter
aas
pop
push
faddl
xor
loope
fldcw
insb
sub
sbb
sbb
leave
lods
or
add
adc
mull
adc
cld
xchg
xor
mov
ret
mov
outsb
push
mov
add
jb
sub
mov
int
mov
lar
das
or
sbb
daa
icebp
inc
out
add
pop
push
inc
lea
adc
cltd
test
mov
pop
adc
repz
cmp
xchg
lock
jmp
test
and
sub
fnstsw
popf
jae
cld
ret
in
adc
sbb
and
mov
vshufps
cmp
adc
mov
mov
xchg
pop
pop
movsl
rcll
jno
paddd
jne
daa
sar
xor
fucom
adc
sub
dec
out
ja
lret
mov
mov
push
push
popf
cwtl
cmp
ficoml
push
jno
fdivs
push
pop
int
adc
ss
jl
dec
or
nop
pusha
ret
jle
int3
and
or
rep
mov
out
dec
inc
push
inc
fistpl
iret
inc
jl
jp
xchg
lret
mov
add
mov
push
dec
ljmp
xchg
fimuls
mov
jle
lret
adc
fcoms
add
jge
push
cmc
test
dec
pop
dec
push
aam
mov
mov
pushf
or
xchg
xchg
add
nop
ss
mov
cmp
mov
orl
cwtl
mov
cltd
sub
cld
stos
out
jo
cmp
loopne
or
cli
push
daa
lock
cmp
cs
ljmp
das
push
into
ss
popa
lock
lea
ret
repz
sub
loope
and
adc
cmp
sub
pushfw
xchg
inc
mov
lcall
jb
cmp
cmp
adc
dec
xchg
mull
sub
addr16
cld
xor
xchg
mov
fstpl
mov
out
cmp
dec
push
sub
push
hlt
loope
cmp
js
cmp
bound
addl
es
xor
enter
call
cmp
dec
inc
jns
sbb
fnstcw
call
pusha
or
fsubs
inc
es
xchg
imul
movsl
cmpsl
outsb
lahf
test
loop
push
xchg
jae
imul
clc
mov
mov
int
es
sbb
jp
fisttpl
adc
dec
or
enter
jge
push
jmp
aam
mov
std
xchg
add
fcmovu
inc
jp
mov
push
xor
in
sub
jae
and
ret
mov
loope
xchg
aam
cmpsb
ret
mov
xchg
sahf
push
mov
mov
hlt
imul
lret
in
adc
ficoms
mov
lock
test
test
lds
xchg
mov
adc
xor
add
xor
add
movsl
adc
out
pop
xchg
insb
jmp
and
pop
aaa
pushf
or
nop
fisubs
pushf
mov
in
push
or
jae
add
lcall
push
jecxz
jnp
rcrb
inc
clc
jmp
imul
mov
pop
cmp
mov
or
rcrl
cli
in
push
sbb
mov
sbb
movsb
push
mov
add
adc
std
sbb
dec
cwtl
mov
into
pop
jl
inc
cmpl
push
mov
add
das
mov
jo
push
cmpsl
jo
test
jne
int3
and
pop
sbbl
cmpsl
push
or
cltd
sub
enter
sbb
mov
mov
out
icebp
adc
in
loopne
into
add
out
pop
push
mov
add
adc
in
lahf
adc
stos
xor
dec
mov
sub
inc
aas
adc
ficomps
rcrb
cmp
mov
pusha
lahf
insl
inc
mulb
stc
jno
push
pop
inc
in
or
inc
mov
sbb
fimuls
hlt
adc
leave
ljmp
or
or
and
mov
sbb
sbb
stos
or
movb
jge
xchg
xchg
js
leave
pop
mov
sub
addl
jl
xchg
push
insl
hlt
cltd
or
mov
lds
xchg
cmpsl
std
xor
dec
sarl
xchg
pusha
cwtl
outsl
mov
mov
out
jp
into
int
out
pushl
add
movsl
cmc
mov
cmp
or
pop
fwait
cli
xor
add
lret
fnstenv
push
or
pop
jge
cltd
mov
orb
cld
cmpsl
mov
loopne
xchg
lock
cmc
lahf
into
push
int
cmpb
pop
sub
aas
add
movl
lock
cmc
and
pop
jbe
mull
xchg
repz
cltd
mov
fwait
dec
jle
sub
add
faddp
insl
mov
nop
sub
adc
xchg
mov
scas
cmp
sub
in
xor
int
and
aam
xchg
loop
mov
ficoms
xorl
sub
loope
adc
mov
jg
jmp
les
add
jmp
add
cmp
dec
jle
cmp
lock
or
inc
in
cltd
shlb
pop
nop
rcrb
xor
test
hlt
shll
outsb
insl
sub
push
jle
cld
mov
and
xchg
mov
pop
xchg
push
push
push
push
fcomp
jecxz
adc
loope
lock
mov
call
cmpsb
ljmp
int
daa
lods
sub
stos
or
aad
sbb
jl
add
or
push
imul
xchg
iret
roll
div
adc
clc
sbb
mov
fidivrs
mov
in
add
stc
pop
pushf
xorl
out
push
in
aaa
mov
jl
cs
fdivrl
push
mov
mov
sub
pop
sarb
cli
push
jle
in
test
lock
jecxz
outsb
and
sub
mull
mov
in
aam
sti
inc
or
lret
adc
out
loop
lcall
push
mov
push
aam
push
sti
inc
icebp
sbb
es
jno
adc
dec
pushf
pop
dec
daa
add
adc
sub
xchg
dec
lcall
fistpll
sub
aad
mov
mov
in
sbb
ret
xlat
push
loopne
pop
subl
push
fdiv
test
dec
pop
sbb
sub
pop
dec
daa
pop
jmp
mov
addr16
jl
test
xor
adc
fwait
jle
inc
xlat
sub
movsb
add
aaa
ja
mov
sbb
push
ss
or
mov
mov
iret
arpl
enter
cmpsl
or
mov
push
jmp
mov
or
in
leave
cli
xchg
xchg
dec
outsb
iret
rorl
pop
push
neg
les
lret
pop
adc
sahf
lea
les
lds
ss
popa
outsl
or
push
inc
daa
add
lret
adc
pop
insl
dec
fucompp
xor
cli
sbb
add
and
lods
div
popl
stos
jg
repz
inc
ss
dec
xor
js
lret
add
jns
xorl
and
stos
xchg
inc
pcmpgtb
mov
sub
pop
pop
jmp
shl
insl
xor
orb
sbb
lds
cwtl
push
ds
insl
or
adc
addr16
dec
dec
xchg
les
js
or
and
loop
push
push
mov
push
in
fidivs
popa
cwtl
loope
mov
cmp
ret
popf
cmp
in
popa
jp
lods
xchg
in
stc
push
or
xchg
pop
add
cmp
insb
inc
cltd
and
test
mov
mov
addb
or
xor
cmc
xchg
fnsave
aaa
lcall
inc
cmp
pop
daa
imul
sbb
sbb
je
xor
mov
pop
cmp
andl
dec
nop
xchg
xchg
fstpt
mov
pop
popf
cltd
mov
ss
in
mov
jecxz
adc
mov
xchg
je,pt
adc
dec
scas
std
insb
pop
stc
fstpl
add
and
fcom
std
decb
out
leave
popf
pop
xchg
rcl
adc
fidivl
pop
pop
and
ror
mov
jae
insl
dec
scas
ss
stos
push
jle
or
movsl
add
pop
enter
je
xor
icebp
pop
push
mov
xchg
cld
add
dec
std
pop
insb
mov
push
bound
loop
mov
mov
push
or
jae
cli
jl
cmp
cld
push
lods
das
dec
in
ret
addr16
mov
mov
repz
sub
pop
jmp
test
push
xchg
xchg
stos
and
inc
jb
xchg
lods
aam
inc
mov
lea
stc
ret
popa
cli
dec
sub
scas
inc
adc
adc
pop
sbb
cmp
and
rol
call
sar
ret
mov
xor
add
das
pop
pop
test
pop
pop
ret
sub
sbb
repz
out
adc
pop
daa
adc
insb
jmp
sarb
gs
cmovo
sbb
jp
xchg
ss
add
inc
dec
cmpl
adc
pop
ja
mov
loopne
jne
sub
out
push
dec
and
add
cld
enter
xchg
cmp
pusha
or
pusha
jnp
sub
repnz
push
mov
pop
push
cli
repnz
fcmove
pop
testb
push
jae
in
jne
ret
nop
adc
sub
in
jle
cmp
mov
and
or
faddl
or
out
pushf
subl
adc
add
stos
mov
dec
pop
imul
pop
jae
adc
insb
ja
sub
insb
inc
inc
jns
jp
sub
xchg
push
ret
inc
sar
mov
fiaddl
mov
mov
pop
inc
sbb
mov
movsl
pop
or
pop
es
xlat
rcrb
and
fs
mov
sbb
and
and
enter
fcomps
mov
add
enter
or
inc
xor
stos
shl
xor
popa
ss
dec
sub
xchg
mov
leave
mov
adcl
push
dec
mov
nop
or
imul
lret
loopne
add
jno
mov
mov
or
mov
clc
add
pop
jnp
mov
imul
pop
ljmp
jecxz
aas
mov
dec
mov
repz
icebp
fcomip
pop
sub
adc
out
lret
aad
pop
mov
into
and
push
and
repnz
sahf
sub
add
or
add
movl
add
test
fidivrl
push
sbb
popa
and
push
mov
shrl
adc
movl
loope
inc
xchg
insl
scas
loopne
test
inc
push
mov
mov
iret
out
out
push
push
inc
je
cli
inc
cwtl
jge
sub
jmp
xchg
mov
dec
adc
pop
aaa
test
push
daa
mov
inc
repz
xchg
fbstp
lcall
and
aaa
xchg
sub
ja
mov
sub
jo
orl
nop
lahf
enter
adc
sahf
sbb
pop
add
pop
and
ljmp
mov
jp
cmpsl
mov
imul
jp
test
int3
and
push
mov
lcall
cmp
jecxz
imul
push
lods
mov
arpl
hlt
ja
notb
push
mov
push
movsl
mov
pushf
or
cwtl
jae
push
pop
rcrb
cmp
lds
mov
mov
shrb
inc
cli
lea
and
mov
mov
inc
nop
pushf
and
adc
inc
pushf
ss
xchg
or
jns
popa
outsb
repnz
mov
pop
push
xor
mov
daa
es
popf
lret
or
jle
out
rol
sbb
je
nop
xchg
mov
pop
adc
lods
adc
dec
movsl
push
sbb
subb
add
inc
mov
fs
ss
sbb
aam
push
dec
xor
loope
mov
sub
movsb
inc
ret
dec
lcall
mov
test
outsl
jbe
jae
pop
inc
dec
jle
inc
fidivrs
in
adc
xlat
aas
dec
add
xor
xor
push
shl
sbb
push
xchg
in
push
or
lea
adc
les
call
inc
xchg
mulb
jl
aaa
rcrl
push
ds
mov
xchg
pop
mov
mov
jecxz
es
aaa
hlt
bnd
fldl
push
inc
inc
movsl
test
push
jle
push
insb
inc
ss
push
and
xor
test
sub
ret
loop
jns
xchg
sbb
ja
cmp
adc
clc
cmpsl
out
xlat
dec
movsl
imul
fsubs
mov
mov
subb
sbb
or
enter
aaa
xor
xor
orl
add
mov
mov
ja
lahf
push
add
pop
cmp
xchg
dec
sub
daa
in
div
mov
dec
dec
xor
adc
add
shrl
scas
jle
pop
mov
imul
cmc
out
cmpl
loop
add
sub
mov
cmpsl
mov
mov
lcall
mov
iret
jecxz
in
test
push
sbb
jns
dec
sbb
subb
pop
sub
dec
pop
pop
mov
ret
test
stos
cmpsl
xchg
call
mov
inc
test
cmp
mov
mov
sbb
mov
pop
add
imul
test
xor
and
and
jae
pop
and
stos
test
jle
xchg
adc
mov
outsl
test
repnz
cmpsb
out
in
xchg
ficoms
imul
jmp
xchg
scas
xor
cld
add
mov
testb
jg
adc
int3
xor
pushf
adcb
addl
arpl
movsl
or
or
sub
xor
push
pop
mov
cmc
and
mov
xor
jae
jbe
push
iret
ljmp
xlat
jp
mov
xchg
adc
jge
andl
inc
sti
adc
inc
xor
xor
mov
and
rolb
enter
lea
jl
rorb
xor
lods
aaa
or
sbb
inc
pop
in
push
popa
xor
dec
push
das
aam
ret
and
loopne
jnp
mov
lods
sub
fstpt
xchg
dec
lods
iret
aad
jg
pop
mov
std
cmp
jae
repz
push
sub
jns
lret
test
add
fwait
aas
add
ja
push
jno
into
push
test
cwtl
and
mov
inc
test
clc
xchg
out
mov
and
mov
loopne
or
hlt
aas
addb
inc
inc
pop
mov
adc
ret
pusha
xchg
pop
mov
inc
pop
add
dec
iret
jo
movb
loopne
pushf
dec
mov
psubd
push
ss
xchg
popf
pop
xchg
pop
mov
mov
movsl
in
pushf
ret
mov
mov
inc
imul
sbb
jbe
test
sbb
stc
aas
dec
xor
push
add
or
loopne
dec
inc
lret
xchg
jl
add
fs
jecxz
add
xchg
call
pop
jno
cmp
dec
mov
je
sub
int3
cmp
mov
mov
cli
push
outsb
xchg
or
jle
and
sub
sbb
mov
lret
popf
lds
xchg
aad
mov
out
aam
xchg
dec
mov
shll
scas
xchg
aaa
cmp
out
lret
loop
jnp
mov
mov
adc
pop
cmp
add
ret
jns
sarb
pop
dec
cmpl
lds
dec
aaa
pop
ljmp
bswap
jl
dec
push
lret
das
add
cmp
out
pop
enter
lds
iret
or
hlt
movsl
mov
ljmp
out
xor
pop
in
insb
stos
aas
sub
inc
and
iret
dec
pop
jne
pop
leave
fstpl
jecxz
insl
pop
das
push
mov
xchg
das
mov
push
inc
sub
subl
filds
jecxz
jae
call
test
es
mov
js
aad
push
adc
enter
or
xchg
cwtl
and
loop
and
call
inc
das
jae
iret
sahf
dec
nop
mov
pop
fdivrs
call
push
bound
or
je
and
dec
imul
nop
cmc
sbbl
sub
and
int3
imul
call
sub
cmp
mov
lds
mov
jmp
imul
nop
gs
outsb
call
push
mov
pushf
dec
or
lea
and
mov
and
sub
stc
and
xchg
xor
dec
cs
mov
cwtl
jae
test
sahf
pop
test
add
pop
stos
mov
inc
inc
insl
ds
sbb
enter
jbe
sub
cli
leave
mov
add
xor
scas
insl
ss
xor
lret
hlt
push
rcll
out
imul
push
push
aas
movsb
lods
cmc
mov
sub
ret
cmp
fistl
push
leave
notl
adc
fdivrp
addr16
xchg
fstpt
je
pop
mov
push
sahf
fs
mov
push
lret
dec
add
aam
std
call
in
sbb
pop
aad
movsb
mov
popa
into
ds
sub
data16
mov
inc
jne
push
cs
xlat
or
mov
jnp
dec
ds
cmp
xchg
fstpl
cmp
sub
push
jl
jae
jle
rcrb
inc
sub
enter
mov
pop
and
jbe
aad
out
repnz
scas
push
div
adc
add
fucomp
add
sbb
and
repz
clc
aas
insl
cmp
add
inc
pop
fs
add
add
and
or
imul
mulb
mov
lcall
cmp
insl
sbb
les
dec
or
pop
lret
xchg
shlb
in
in
pop
mov
push
jo
push
scas
lods
sub
out
out
fdiv
dec
jmp
lods
shl
ja
and
add
fidivrs
inc
push
jbe
xchg
push
add
jae
jne,pn
dec
xor
orl
and
add
mov
pop
xchg
cwtl
push
lods
fcoml
jp
mov
stos
sbbb
loope
insl
xor
inc
cs
or
in
into
mov
cmp
jo
hlt
push
mov
xchg
xor
shlb
fwait
jae
pop
and
outsb
cld
call
sbb
cltd
jo
push
mov
mov
add
mov
scas
lahf
pusha
cld
inc
cmp
stos
add
adc
cmp
jbe
dec
jp
xlat
gs
push
add
dec
adc
jnp
inc
jbe
bound
dec
out
adc
outsl
mov
mov
or
movsl
in
pop
jo
push
inc
gs
sbb
in
fsubl
sub
sbbl
popa
push
test
and
stos
sbb
mov
inc
inc
cmp
jns
fsubl
xchg
xchg
outsb
fstps
push
add
mov
mov
test
repnz
les
pop
in
jecxz
in
rolb
fwait
cmp
insb
dec
lock
mov
adc
mov
pop
xorl
std
dec
sub
rcrl
outsl
sub
fdivr
das
cmp
jl
mov
xlat
mov
mov
aas
jne
mov
mov
jo
xchg
adc
sbb
adc
inc
out
cmp
in
xchg
movsl
pushf
shrl
jmp
ret
popf
rclb
arpl
fcompl
and
iret
sub
push
xor
or
dec
lea
mov
xor
inc
das
xchg
add
das
in
insb
add
push
aas
es
jo
push
cmpsl
or
sub
pushw
lcall
inc
and
inc
push
mov
xchg
mov
test
xor
mov
lahf
xor
test
dec
stos
pop
jno
outsb
rcl
adc
stos
inc
popf
sub
inc
lods
sti
xor
loope
fs
ja
loop
pop
jb
insl
sbb
dec
sar
add
mov
dec
les
mov
mov
pop
repz
pushf
pop
test
dec
mov
es
fldln2
mov
sub
es
cmpsl
jno
sbb
pop
arpl
mov
mov
cmpsl
ret
repnz
add
cli
xchg
adc
push
cmpsb
inc
dec
fsubp
ljmp
cmpsl
dec
xor
dec
or
ljmp
mov
fidivrs
pop
xor
js
jg
lret
jecxz
js
js
fidivs
test
rorl
cmpsb
jns
lret
mov
cmp
js
imul
add
lea
xchg
dec
popf
inc
mov
adc
imul
jmp
jecxz
fistl
in
add
jo
mov
dec
inc
int
adc
psubb
dec
and
push
xchg
movsl
lret
mov
jo
loop
mov
cmp
push
sbb
in
roll
dec
in
xor
daa
mov
mulb
sub
sub
hlt
and
pop
jl
scas
lcall
bound
and
outsl
sahf
loop
add
sti
adcb
lds
aad
shrl
testb
jp
sbbl
jle
dec
lahf
cmpsl
sub
dec
pop
dec
inc
adc
pop
xchg
fiadds
lds
jae
ds
push
fcomps
push
test
or
popa
lret
fcmovu
adc
js
mov
mov
cmpb
into
shll
cmpb
cld
lret
ds
fadd
mov
dec
push
and
les
mov
ret
sbb
dec
dec
fildl
cmp
mov
push
dec
sub
rcrl
push
test
add
xchg
dec
or
xorl
and
je
jp
stos
push
mov
mov
arpl
dec
stc
mov
ret
mov
ss
jecxz
inc
aas
hlt
mov
filds
jecxz
pop
cmpsb
rcll
add
les
mov
xor
aad
adc
loopne
jle
pop
push
mulb
fisubs
pushf
xchg
ret
mov
mov
subb
notrack
outsb
mov
mov
sbb
or
dec
push
insb
lahf
sbb
roll
repz
mov
sbb
xchg
in
adc
aas
adc
or
loopne
in
pop
bound
dec
push
add
pop
sub
enter
inc
stc
xor
jl
cmp
xchg
divl
popa
xchg
or
jns
hlt
pop
ret
arpl
jmp
es
fcmovnb
in
pop
mov
fisubrs
lock
stc
ljmp
inc
and
cwtl
xor
mov
iret
pop
rorl
adc
adc
mov
dec
dec
add
jne
cmp
adc
or
rcrb
movsb
jp
test
lret
sbb
ret
imul
bound
cmpb
sbb
or
lods
adc
adc
inc
mov
sbb
inc
xor
add
sahf
popf
or
ds
call
mov
arpl
mov
adc
lret
inc
cmp
imul
mov
or
or
sub
sbb
outsl
adc
repz
jns
dec
xchg
sub
cltd
mov
adc
add
cmc
sub
sub
cmp
sub
mov
js
adc
mov
test
mov
cmc
xchg
test
xor
call
lods
or
mov
cmp
sub
xchg
push
lcall
nop
mov
adc
dec
inc
pop
cmp
shll
lods
push
pop
scas
mov
test
arpl
ss
xor
push
lods
sub
sbbl
mov
pusha
push
dec
jp
xchg
aaa
scas
mov
mov
sbb
stos
xlat
add
xchg
cmp
mov
insl
dec
or
mov
mov
dec
out
imul
push
or
fwait
cli
gs
push
inc
out
push
and
adc
xor
xorb
pop
les
out
xchg
sub
ret
clc
mov
or
incb
mov
imul
jae
ret
mov
sub
sti
ja
clc
dec
xchg
mov
loop
xchg
sub
mull
popa
push
mov
es
js
lret
jl
jmp
enter
clc
lods
icebp
call
ret
fldl
cltd
pop
lcall
push
mov
push
fisubl
mov
xchg
stos
test
cs
out
mov
jecxz
cmpsl
std
cmp
dec
or
nop
sub
mov
in
and
push
jle
jns
fiaddl
dec
movsl
test
push
xor
and
dec
cmp
or
cmp
add
inc
clc
mov
xchg
dec
fwait
mov
jp
add
ret
add
or
out
dec
inc
adc
sbb
dec
negb
pop
mov
push
les
pop
push
ljmp
idivl
sub
imul
call
cmp
pop
sub
or
jmp
dec
push
sbb
and
test
adc
hlt
mul
out
out
jns
mov
mov
in
xchg
sbb
and
and
or
add
jecxz
lds
add
adc
loopne
int3
push
addr16
jns
fwait
aaa
ds
ficoml
and
or
sub
iret
pop
push
mov
lds
lods
pop
movsl
or
cmc
sub
dec
ficomps
pop
pop
aad
dec
andb
cmpl
sub
lcall
imul
xor
scas
ljmp
mov
mov
xchg
mov
fcmove
mov
movsl
scas
scas
lcall
or
push
pop
pop
mov
pusha
addr16
mov
mov
call
aad
insb
push
dec
aas
aas
neg
mov
inc
out
std
inc
das
or
movsb
sub
or
mov
repnz
xor
jno
push
testl
cmp
loope
dec
inc
lods
dec
cmpsb
jae
add
add
xchg
or
mov
loop
bswap
hlt
adc
inc
hlt
std
out
mov
insl
call
jbe
push
jns
pop
mov
in
push
je
imul
data16
mov
scas
sbb
in
xlat
xor
shl
imul
into
or
mov
mov
lods
cmp
and
aaa
in
cwtl
mov
loopne
jp
pop
into
cmp
daa
pop
mov
test
add
imul
ror
lock
xchg
ja
cs
test
sahf
adc
aam
mov
aam
sub
sub
bound
pop
rol
subb
jne
mov
sahf
mov
je
push
aas
in
movsl
aaa
popf
icebp
xchg
inc
adc
sub
and
adc
cli
pop
int
loope
dec
std
enter
lret
mov
dec
arpl
push
xchg
ljmp
das
mull
sbbl
sti
add
mov
jl
dec
fcmovnb
push
or
or
jg
mov
dec
mov
jbe
cwtl
scas
jnp
mov
repnz
imul
mov
fimull
iret
sub
pushf
and
shll
ret
aaa
mov
xorl
xlat
dec
mov
and
fdivl
add
jno
pop
pop
jg
jns
clc
sbb
push
std
pop
mov
aaa
int3
lods
mov
xor
gs
sbb
or
mov
jo
push
ss
cmp
inc
idivl
mov
out
cmpb
sahf
ds
hlt
cmp
mov
mov
push
jecxz
rcl
cwtl
sub
jnp
xor
jmp
mov
inc
dec
push
cmp
pop
popa
negl
xchg
stos
inc
xor
sti
pop
jnp
inc
ja
adc
inc
jnp
aam
dec
push
fsts
rorl
sbb
mov
pop
jg
shl
mov
mov
jl
int3
loop
and
inc
inc
mov
aam
mov
cmp
mov
stos
in
rclb
mov
cli
xchg
adc
push
push
rcl
inc
std
xlat
jmp
std
sub
loopne
mov
jo
add
int3
in
push
push
pop
jo
inc
mov
jg
loop
into
mov
loope
inc
and
push
test
repnz
sbb
xchg
js
sbb
insl
jge
stos
push
insl
fs
inc
lock
jmp
cwtl
scas
cmpsl
decl
lret
fdivrl
sbb
mov
out
mov
aam
xchg
lods
inc
lret
out
clc
fisubrs
xor
sub
out
mov
fisubl
scas
testb
pop
cmpsl
neg
push
bound
sbb
add
and
mov
mov
or
imul
aad
shr
ret
mov
mov
push
out
sub
push
sahf
cmpsb
daa
jae
mov
sbb
add
stos
stos
xorb
dec
jb
jge
pop
loop
lret
in
icebp
xor
insb
adc
mov
adc
stc
rcrl
inc
adc
stc
add
cmc
mov
and
cmp
subb
xor
mov
stc
sbb
xchg
adc
rcrl
loopne
pop
and
stc
aad
and
scas
xchg
ljmp
and
into
sub
je
ss
daa
std
adc
xchg
ds
ss
mov
jns
mov
mov
dec
inc
inc
or
mov
fidivs
bound
mov
scas
aaa
repnz
fwait
cmc
mov
movsl
loope
les
sub
dec
in
push
adc
jbe
lds
sbb
les
push
xor
xlat
pusha
add
repz
adc
sbb
mov
jnp
arpl
mov
mov
in
xchg
stos
faddp
sub
stos
ror
adc
cmp
fsubs
xor
shlb
in
sbb
lods
enter
add
pop
bound
sbb
push
jp
mov
or
movsl
and
jecxz
dec
mov
adc
ljmp
add
aad
fisttps
repz
ret
push
adc
pop
add
adc
cmp
ret
sub
test
insb
fimuls
imul
fistpl
and
xchg
xchg
in
clc
adc
mov
xor
dec
push
daa
icebp
js
inc
arpl
cmpsb
dec
daa
fidivrl
lret
dec
cltd
je
add
push
stc
je
out
and
cwtl
popa
mov
test
and
jmp
in
loopne
inc
cmp
dec
cltd
imul
addr16
outsb
xor
cwtl
or
add
gs
mov
lea
das
cld
jl
jo
andb
in
testb
test
sbb
in
jo
shll
lea
fildl
push
dec
jns
xor
std
fidivs
cmpsl
pop
popa
xchg
in
xchg
xchg
rcl
mov
pop
lret
mov
xor
lret
mov
movsl
incl
paddsw
sbb
sbb
popl
addl
std
jnp
dec
inc
fldenv
and
and
mov
cmc
inc
icebp
mov
shll
insb
sbb
clc
sbbl
fdiv
dec
std
jno
pop
jmp
into
xchg
lock
mov
xchg
mov
adc
test
push
in
push
or
inc
sub
jecxz
dec
arpl
insb
jb
insl
pop
imul
testb
lods
lds
adc
mov
and
jns
sbb
mov
leave
cmp
add
aaa
test
jl
mov
enter
dec
xlat
mov
mov
add
adc
cwtl
rcll
and
jne
mov
pop
les
nop
push
xchg
cmc
into
std
jecxz
jg
mov
lds
test
mov
mov
pop
jb
lret
add
xchg
mov
and
and
lds
xor
pop
xchg
mov
and
out
mov
jbe
lea
xchg
mov
ret
pop
imul
cmp
ja
sub
sbb
cmpsb
mov
sbb
pop
lods
xlat
jmp
shll
mov
mov
dec
mov
ja
lds
movsb
ret
movb
xchg
nop
leave
sub
inc
xchg
mov
push
jp
push
das
pop
clc
pusha
jp
add
xchg
push
pop
cmp
pop
fs
leave
xchg
xor
and
cmovnp
outsb
mov
setns
push
push
jp
sbb
sub
push
ficoms
mov
xchg
stc
xor
enter
or
jmp
aas
cmp
adcl
fistpl
dec
mov
outsb
push
or
pop
ja
mov
jb
cs
add
sub
cs
cmp
xor
ret
or
out
xor
jae
and
mov
pop
test
sbb
pop
jl
dec
mov
pop
mov
and
mov
mov
incb
cltd
fcmovbe
pop
loope
jb
jbe
add
xchg
pop
pop
xchg
aas
dec
cltd
adc
mov
add
gs
mov
cmp
ret
push
add
push
mov
mov
xor
adc
xchg
dec
sti
add
gs
aas
push
xchg
sub
pop
imul
mov
imul
fisubrs
addr16
hlt
cmp
or
cwtl
and
ds
xchg
or
jp
and
sbb
push
mov
sahf
data16
imul
mov
cmpsb
inc
sbb
add
hlt
lahf
sti
push
dec
xor
jle
dec
push
mov
mull
inc
aam
sbb
insl
sti
cmpsb
cmp
or
inc
and
loope
fnstenv
xchg
stos
cmp
pop
dec
pop
mov
popf
mov
stc
push
xchg
mov
fisubrs
xor
mov
xor
add
loop
sarl
mov
mov
das
in
mov
push
sbb
leave
sub
jb
das
in
lret
je
roll
aam
into
xor
adc
inc
dec
clc
adc
push
adc
add
frndint
pop
cmp
pop
pop
jmp
cmpsb
imul
jmp
push
cmp
aad
mov
push
push
stos
jge
push
pusha
hlt
sbb
jns
cld
add
enter
movsb
sbb
iret
int3
xchg
inc
es
dec
in
adc
cmovnp
ret
sbb
leave
and
cmc
cltd
push
pop
outsb
push
es
jp
push
dec
sbb
jo
cmpsl
mov
out
sbb
adcl
aad
push
or
add
stos
rcll
aad
adcl
mov
call
fs
mov
pushf
ljmp
mov
popf
jge
stos
xchg
test
loope
pushf
xchg
jecxz
std
hlt
mov
jg
sti
pushf
imul
and
shll
sbb
sub
add
cs
adc
subb
inc
popf
push
add
popf
mov
inc
add
movsl
movl
ljmp
and
jmp
stos
movsl
cs
test
or
push
je
rcrb
imull
xor
push
in
icebp
xchg
xlat
mov
cmc
fimuls
sub
mov
aam
jae
and
push
push
movsb
push
scas
or
and
xor
sbb
sbbl
dec
mov
mov
adc
fistpl
add
imul
or
mov
push
shlb
aas
push
jmp
mov
outsl
orl
jno
cmc
mov
or
push
or
je
stc
lret
add
and
andb
sub
shrb
mov
ret
arpl
in
sub
aam
int3
sbb
inc
cmp
mov
mov
cmp
repnz
cmp
call
daa
cmpsl
out
lods
ss
test
pop
pusha
xchg
in
dec
jg
jg
das
sti
popa
rcll
add
cmpsl
xchg
movsb
or
or
inc
loopne
aam
dec
xchg
lods
dec
jge
cmp
out
sbb
add
cltd
push
int3
mov
xor
xchg
and
and
inc
cli
hlt
mov
movsb
stos
adc
ds
sbb
lock
mov
push
xor
and
xlat
sbb
jmp
cmp
int3
mov
pop
loopne
dec
jmp
fsubl
mov
xchg
cmp
lock
ret
cltd
mov
pop
adcl
adc
xlat
lret
xor
mov
std
mov
push
or
subb
cmp
jns
cli
or
mov
mov
cmc
stc
pop
stos
pop
sub
cmc
inc
and
or
dec
sub
adc
xchg
mov
notl
dec
pop
or
jbe
sbb
mov
sbb
and
dec
sbb
mov
lret
jo
jno
cmp
adc
xchg
lock
sbb
and
idivb
outsl
sbbb
das
push
repnz
pop
std
inc
test
outsl
mov
push
shlb
pop
out
lea
ljmp
or
add
jle
mov
mov
inc
in
mov
mov
inc
inc
pop
xlat
movsb
xor
or
inc
ficoml
shl
pop
lret
jmp
jmp
mov
test
mov
cltd
sbb
lret
stc
add
mov
pop
mov
shl
hlt
jbe
icebp
nop
imul
push
mov
adc
mov
idivl
mov
or
sub
mov
loop
cs
xorl
cld
cmc
int
pop
stc
cmp
lcall
mov
subl
mov
jg
xlat
subl
dec
andl
repz
jle
loop
pop
lea
xchg
cld
fwait
adc
sbbl
push
call
mov
mov
pop
sti
fbld
lahf
test
inc
aas
shll
ljmp
xchg
aaa
xor
and
rclb
orb
repnz
sahf
test
jge
cmpl
es
mov
xchg
mov
sbb
lcall
jp
cmp
fisttpl
ret
popf
push
subl
sub
mov
jp
xlat
pop
fwait
pop
adc
sub
jnp
push
adc
int3
cmp
into
mov
lock
lcall
xchg
lret
lea
cmp
aad
cli
prefetch
or
xor
xor
and
loop
repz
ja
jno
mov
shrb
dec
push
pop
dec
cli
jg
sbb
jb
pusha
sarb
aaa
mov
mul
ljmp
sub
mov
nop
lds
mov
sbb
ljmp
xchg
inc
inc
in
pop
add
sbbl
mov
cmp
iret
add
sub
push
sub
aaa
sbb
pop
mov
mov
pop
xor
insb
leave
pop
cmp
or
outsb
push
xor
pop
sarl
cmpsl
inc
push
cmp
fisubl
xchg
rcrb
inc
fwait
scas
push
dec
or
insl
mov
sbb
xor
fmull
pop
mov
imul
mov
inc
ss
dec
sub
xor
inc
sub
push
ds
jl
negb
dec
stos
stos
enter
push
jge
outsl
fs
das
mov
jnp
sub
stos
loope
dec
sbb
xchg
insl
adc
push
mov
xchg
dec
cmp
jp
mov
or
jle
das
mov
sub
inc
imul
add
movsl
pop
push
dec
push
or
xorl
hlt
loope
xchg
and
xor
xor
aaa
out
insl
pushl
pop
adc
xor
push
leave
js
push
mov
mov
mov
test
dec
xorl
and
pushf
sbb
jno
test
xchg
push
push
nop
sub
xchg
cltd
cwtl
inc
stc
arpl
icebp
jecxz
lock
loopne
enter
adc
stos
sub
das
stc
adc
popa
or
mov
jl
stos
fdivl
inc
jmp
lock
out
repz
cltd
jl
int3
out
int
dec
aam
mov
movsb
cmc
and
ret
and
testl
outsb
test
mov
jb
idivb
shrl
xchg
aas
mov
pusha
imul
mov
push
sub
cli
fwait
leave
xchg
js
cmp
xchg
xchg
out
inc
stos
mov
sub
mov
and
jle
and
sti
sub
push
and
in
and
mov
fwait
shll
inc
push
sti
mov
or
pop
cmp
mov
sub
push
jno
mov
mov
mov
pusha
sbb
mov
test
inc
cmc
push
mov
mov
int
filds
iret
push
jae
add
inc
or
sub
andb
jg
stos
int
jp
or
mov
lret
cmp
sub
sar
andb
mov
rcr
dec
fidivs
mov
pop
cs
out
aaa
mov
inc
mov
stos
loope
inc
xor
in
dec
clc
lds
stos
fiadds
add
xor
mov
loopne
leave
ret
jl
loope
bound
scas
in
mov
and
dec
out
shll
mov
mov
test
imul
lahf
push
add
enter
pop
push
jb
xor
sub
mov
sub
int3
inc
mov
inc
enter
imul
mov
imul
lret
inc
xor
mov
dec
adc
inc
or
push
pop
jo
in
adc
sbb
negb
movsb
sbb
cmp
incl
jae
sub
push
push
stos
cmp
adc
cmpsl
js
iret
cmpsl
jecxz
fwait
pop
clc
sub
xor
push
mov
fisubs
lods
push
clc
mov
dec
in
arpl
vminss
sbb
lods
out
inc
dec
jnp
lcall
xchg
loop
xchg
jno
xchg
and
pop
out
push
mov
pusha
pop
dec
test
sub
push
xchg
jae
push
mov
das
mov
in
push
xchg
and
cmp
and
push
adcb
pop
ja
xchg
aaa
pop
and
sub
and
cmpsb
push
sbb
inc
sbb
sti
cmpsl
pop
push
movsl
cmp
adc
push
lahf
xlat
fwait
sub
jle
pop
bound
insl
jne
pop
jb
mov
inc
fnstsw
pop
je
jnp
out
mov
clc
stos
fadd
shr
cmpsl
mov
jne
cmp
int
jo
cmp
mov
xor
fstps
mov
jge
addr16
fdivrs
cs
test
inc
mov
clc
mov
fcmovnbe
push
cwtl
xchg
pop
ror
mov
outsb
pop
add
ss
loop
jmp
pop
and
cli
adc
cld
ss
mov
clc
pop
lret
dec
push
push
jmp
inc
mov
std
popa
packuswb
mov
xor
and
cmp
xchg
jne
xlat
jnp
iret
popa
fwait
ret
mov
es
and
pushf
inc
or
mov
ret
loop
xor
bound
xor
sbb
or
xchg
cmc
sub
inc
cmpsb
jg
push
mov
stos
push
test
shl
movsb
jnp
and
sbb
enter
inc
mov
cli
dec
mov
repz
lahf
sub
or
xlat
dec
lods
rorl
outsl
cltd
jne
inc
ja
enter
push
push
adc
push
ljmp
dec
pop
or
ja
shl
mov
push
andb
lods
int3
aam
or
inc
arpl
clc
adc
and
cltd
jns
cltd
nop
xorl
adc
sub
mov
lods
in
jno
mov
xor
inc
sbb
inc
es
push
dec
cwtl
ljmp
mov
push
xchg
pop
pop
push
jb
sti
stos
fldl
mov
mov
inc
addr16
in
ds
jl
repz
daa
adc
sub
shl
inc
out
sbb
sub
sub
dec
pop
sbb
int3
xor
jle
xor
xlat
xor
pop
sbb
iret
data16
pop
fcmove
cwtl
mov
fs
and
adc
push
sbb
loopne
xor
std
sub
movsb
add
add
cli
push
fcoml
imul
jno
test
xchg
jle
popf
pop
jg
push
fbld
mov
fcomi
enter
xchg
dec
jnp
mov
jmp
in
xchg
lret
hlt
mov
fwait
pop
sbbb
outsb
subb
insl
add
testl
roll
int
in
pusha
xor
lds
icebp
sbb
negl
or
ja
mov
pop
cmp
and
sbb
xchg
ror
addr16
or
xlat
jns
stos
fcompl
outsb
push
cmp
xchg
mov
test
cwtl
in
jno
sbb
lret
jp
fistl
lds
mov
add
js
sbb
rcll
mov
test
xchg
sub
pop
push
jne
jae
shlb
out
dec
mov
and
push
sbb
xchg
mov
lds
loope
sub
leave
xchg
add
adcl
mov
into
mov
mov
add
testb
fndisi(8087
aad
popa
inc
pop
pop
mov
or
cli
lcall
stc
jno
push
jmp
pop
movsl
daa
nop
lods
addr16
sub
mov
mov
aam
mov
push
adc
push
clc
js
jle
pop
mov
cmpsb
mov
pop
xor
stos
js
pop
push
ror
call
jl
jp
dec
pop
lds
test
icebp
adc
testb
mov
jo
jge
fimuls
rcr
mov
xchg
adc
shrl
add
push
repnz
add
mov
dec
add
or
cld
data16
sub
xlat
jb
push
movsb
stos
je
lret
and
stos
sbb
mov
ret
aad
loopne
test
cmp
xor
jb
stc
mov
pop
push
in
sahf
fcompl
or
lcall
or
mov
fwait
out
pusha
pop
sar
inc
lods
and
cs
out
sbb
jl
inc
fimuls
sbb
iret
arpl
lcall
sub
xchg
cwtl
pop
and
hlt
mov
testl
sti
mov
rolb
mov
in
insl
lret
push
mov
jecxz
icebp
push
ja
xchg
iret
xchg
sub
aas
xchg
imul
dec
cmp
push
jno
icebp
fadds
xchg
push
daa
sbb
jp
hlt
loop
jp
enter
loope
inc
insl
jo
push
and
jae
xchg
inc
iret
clc
rorl
push
adc
mov
or
out
xchg
jp
test
call
fmuls
cwtl
addr16
mov
dec
pop
les
add
lods
cmp
adc
es
cmpsb
inc
ret
push
and
adc
out
inc
rolb
mov
addr16
mov
sbb
mov
leave
arpl
add
xor
xor
and
xchg
mov
adc
sti
lret
mov
bound
fisubs
sbb
insl
push
jno
xor
pop
iret
iret
pushf
push
dec
dec
ss
es
xchg
dec
cwtl
aaa
andl
mov
lds
pop
cwtl
lods
sub
jo
xchg
ljmp
add
leave
in
xor
mov
cli
push
stos
add
fs
cli
mov
pop
gs
jo
xchg
stos
dec
loop
inc
adc
sub
sti
jmp
add
and
dec
xchg
aam
es
sti
setbe
lea
and
lods
sbb
cltd
cmp
mov
or
mov
lds
inc
pop
xchg
mov
add
inc
or
push
loope
mov
shl
adc
daa
shl
ja
leave
stos
add
es
cmpsl
nop
cltd
into
mov
mov
in
addr16
dec
cmp
test
movsb
add
jecxz
sti
push
push
neg
xor
in
mov
inc
xchg
xchg
xchg
js
aad
push
stos
ljmp
fmull
sbb
fdivrs
push
sub
dec
pusha
mov
jmp
sbb
mov
jbe
adc
popf
dec
notb
leave
jnp
fs
adcl
xor
ret
pop
pop
sub
adc
dec
xchg
push
and
enter
mov
sbb
cmp
fldt
pop
mov
scas
jno
insl
nop
iret
arpl
fdivs
jg
das
stc
stos
dec
sub
sbb
sahf
into
rolb
out
pop
xor
push
mov
aad
mov
jns
pop
mov
test
fldenv
fdivrl
jae
jbe
es
dec
sub
adc
test
mov
pusha
jns
pushf
stos
ss
sbb
jp
mov
enter
add
xchg
out
into
imul
mov
xlat
dec
dec
rcl
xchg
inc
dec
push
inc
mov
subl
mov
cmp
das
and
fdivl
das
pop
push
mov
push
xchg
jae
adc
add
jo
test
rcr
call
inc
sbb
xor
mov
dec
add
call
fidivs
repz
loope
adc
scas
and
mov
idiv
push
ljmp
mov
mov
hlt
mov
shlb
mov
mov
fsubl
movsb
cmp
cmp
pushf
test
and
mov
scas
and
cld
or
add
cli
cmpsb
clc
stos
pop
xchg
cld
mov
dec
sbb
jb
sbb
add
push
out
lret
cmp
mov
insl
adc
adc
stos
cmpsb
push
leave
mov
fdivr
adc
stc
arpl
lcall
out
cmp
or
sbb
js
sbb
cli
xchg
mov
inc
add
scas
movsl
mov
mov
es
stos
stos
jmp
pushf
jno
fs
mov
jo
fldcw
xchg
aaa
xchg
outsl
xchg
movsb
aaa
xchg
sub
mov
clc
fs
dec
fcomip
out
adc
inc
lds
cwtl
xchg
imull
pop
pop
lds
test
fs
mov
sarl
push
and
lods
mov
inc
mov
pop
and
jmp
cmp
xchg
test
lret
movsl
stos
out
and
lock
xlat
test
cmc
jb
or
xchg
inc
pop
shrl
push
fadds
arpl
xor
mov
lret
xchg
jp
xor
call
mov
test
gs
out
xor
rorb
fcomps
js
sbb
popa
es
movsl
xchg
and
pop
xor
les
cs
push
in
fwait
rcrb
test
mov
shrl
pop
lea
push
bound
mov
pop
or
enter
imul
data16
and
pop
stos
inc
mov
sahf
stos
dec
inc
lods
insl
adc
mov
sub
mov
xchg
insb
aaa
popa
pop
mov
xor
inc
jae
inc
and
jae
fildl
mov
out
rcrb
call
lea
out
shll
cmpsb
gs
sbb
cmpsb
shlb
add
lahf
into
sub
pop
inc
bound
icebp
mov
inc
out
sub
and
pop
xchg
mov
dec
dec
insl
add
loopne
and
pop
xchg
xchg
mov
cld
sarb
sahf
cs
or
repnz
roll
cmp
push
push
mov
inc
loope
add
jb
inc
loopne
sub
cmp
sti
roll
dec
sub
imul
mov
mov
xor
lea
mov
adc
sub
test
jno
jl
sbb
dec
popa
clc
test
mov
movsl
pop
add
inc
mov
inc
stos
imul
aad
push
das
iret
mov
orb
sbb
leave
xchg
mov
test
jge
push
dec
xchg
pop
push
and
add
mov
jbe
dec
xchg
dec
jo
outsl
cmp
hlt
xchg
aam
or
xor
xchg
add
arpl
imul
jne
mov
stos
dec
xchg
xchg
scas
cmp
push
pop
jmp
int
cmp
jl
mov
sbb
test
sbbl
stc
mov
cmp
fistpll
addr16
lcall
cli
out
clc
dec
cwtl
jmp
cmc
imul
popf
test
fistpl
idivb
cld
add
sti
int3
movsl
jb
cmp
jle
pop
mov
mov
fisubrs
xchg
pop
xchg
addr16
sbb
push
loopne
sbb
jmp
inc
insl
dec
aam
subl
insb
pop
cmp
pop
xchg
adc
movsb
lods
pop
cmp
pop
xor
gs
aaa
mov
ja
repz
jge
outsl
lcall
adc
xor
xchg
int3
into
jae
mov
rcrb
icebp
mov
mov
adc
imull
cld
pop
pop
mov
movsl
scas
xchg
xor
mov
cmp
xor
xchg
pop
mov
test
imul
std
lahf
mov
xor
cmp
xlat
leave
dec
stos
and
or
cli
mov
outsb
add
clc
cli
lret
cmp
into
lcall
xchg
sbb
fstp
cmpsb
and
mov
cmpb
mov
fistpl
sbb
rolb
jae
arpl
into
mov
inc
pop
loop
mov
xor
mov
int
cmp
pusha
push
repz
in
sbb
sahf
aad
and
push
pop
lods
test
inc
aad
popf
cltd
les
xchg
push
int
sar
or
loope
cmc
jmp
fimull
loop
jnp
push
mov
jge
or
mov
cmpsb
dec
pop
jnp
arpl
dec
pop
jnp
push
imul
xor
js
in
mov
imul
das
mov
xchg
adc
sbb
inc
push
jle
xchg
es
ja
push
aam
add
cmp
mov
dec
sbb
inc
sub
je
or
pop
mov
lods
lods
ds
jp
sbb
jno
mov
popl
mov
nop
add
mov
int
mov
inc
and
loopne
addl
movsb
hlt
int
jmp
cwtl
mov
push
adc
mov
sti
aaa
leave
push
repnz
addl
fstpt
cltd
je
xorb
xor
in
notl
mov
arpl
fdiv
loop
sarb
fistl
stc
leave
into
sbb
sbb
mov
cmp
xor
and
xchg
xchg
xchg
fsts
stos
cmpsl
loopne
jp
out
sbb
push
pop
dec
sbb
and
pop
inc
les
cmp
das
stc
les
and
es
jbe
jnp
mov
ljmp
jp
mov
xor
jle
mov
std
xlat
daa
scas
pop
mov
popf
pop
aam
icebp
fdivrs
mov
das
inc
mov
shlb
dec
sbb
ret
call
jmp
cmp
sbb
fnstcw
xor
in
mov
je
mov
or
mov
xor
inc
pop
movsb
cli
lea
inc
xlat
std
jnp
push
cs
mov
adc
and
std
aad
sti
lods
aaa
inc
nop
ss
clc
insl
jl
or
adc
jmp
add
inc
fsubrp
fisubrs
mov
sahf
stos
imul
icebp
test
sub
ljmp
push
or
nop
add
mov
mov
jns
fbstp
test
sub
add
mov
adc
jbe
mov
mov
inc
fiadds
int
pop
mov
stos
cmpb
and
loopne
sbb
ljmp
mov
lcall
aas
pusha
sbb
or
mov
pop
dec
loopne
ret
ds
andb
cmpsw
hlt
pop
pop
mov
or
mov
mov
cmpsl
shrl
rcrb
jmp
push
or
data16
xor
mov
cmp
or
in
cld
rcrl
int
push
mov
fdiv
mov
sub
sbb
push
push
mov
aad
inc
pusha
js
mov
mov
cmp
push
testl
clc
xchg
lret
sub
cwtl
mov
or
sub
out
xor
fiadds
insl
xor
in
jo
test
movsb
fsubrp
shl
fimuls
mov
and
subl
or
jnp
push
mov
jno
mov
push
mov
pop
xor
sbb
std
add
out
xor
or
sub
xchg
clc
out
out
pushf
cmc
push
cli
push
jg
sub
es
pop
pop
sti
arpl
adc
insb
rolb
imul
adc
mov
adc
mov
push
popa
lods
clc
push
mov
les
aas
loop
aas
mov
sub
sbb
icebp
arpl
and
jo
ret
mov
sahf
fidivl
mov
dec
icebp
out
ds
push
inc
es
js
pop
les
cmp
adc
int
loop
cmc
dec
mov
cwtl
xchg
lods
ljmp
int3
xchg
xchg
mov
pop
cmpl
ds
adc
cmc
dec
dec
push
sub
jae
rcrl
or
push
jmp
scas
cmp
int3
mov
jns
mov
ds
jmp
and
vmread
lods
ja
pop
imul
dec
cmp
outsl
popl
cmc
pop
and
cwtl
scas
test
push
dec
jae
daa
adc
insb
add
jbe
xchg
and
dec
int3
inc
xchg
popa
out
lock
stos
xor
inc
div
inc
shlb
call
lds
loopne
xchg
pop
add
xchg
push
xchg
imulb
sub
mov
filds
les
lea
cmpsl
into
in
popa
jnp
dec
aas
pushf
jnp
popa
lods
adc
lcall
add
adc
ljmp
xchg
out
pop
jp
outsb
xchg
and
fsub
inc
clc
pushf
adc
rorl
pushf
scas
push
xor
cld
sub
mov
xor
sarl
cwtl
pushf
xchg
out
stos
cld
icebp
cmp
pop
in
pop
jl
xchg
mov
cmp
es
push
or
aaa
insb
in
cwtl
call
xor
call
sub
xlat
add
pop
leave
jle
pop
xchg
cltd
xchg
push
xchg
js
in
clc
stc
orb
idiv
or
xor
insl
out
mov
mov
inc
push
and
push
lods
outsb
js
cmp
shlb
out
jp
adc
xlat
fcmovnu
out
test
jmp
dec
shl
push
or
lds
jl
fs
and
adc
js
in
sub
sbb
jmp
pusha
sbb
cmp
repz
mov
mov
mov
pop
imul
push
xchg
or
sbb
sbb
into
hlt
mov
pop
sub
sbb
mov
inc
popa
hlt
loop
mov
out
imulb
xchg
mov
sti
fs
sbb
xchg
into
inc
imulb
jg
push
cmc
mov
addr16
rolb
lea
jno
push
mov
mov
lds
jp
push
and
out
xchg
xchg
das
fmuls
push
leave
movsb
in
fmuls
and
in
add
in
dec
nop
add
jno
and
mov
scas
and
packsswb
mov
xorb
leave
and
cltd
cmp
mov
loopne
bound
ret
movsb
daa
gs
out
insl
xor
sahf
mov
test
inc
inc
pop
inc
push
jge
enter
mov
decl
and
das
xor
movsl
push
arpl
pop
fldenv
cmp
jg
pusha
andb
in
cmpsb
xor
mov
sbb
mov
add
cmp
mov
mov
xchg
loopne
in
cmp
adc
or
inc
lods
std
cmp
sub
outsl
arpl
add
jl
lret
into
pop
push
insl
stos
pop
cmove
out
bound
clc
cmp
jp
pop
mov
xchg
cltd
mov
scas
es
insb
xor
cmp
push
mov
out
lock
xchg
leave
lahf
xchg
pop
push
lock
in
sbb
dec
aas
cmp
dec
inc
sbbb
and
insb
push
fmul
adc
sub
aad
pop
pop
lea
dec
out
leave
and
jnp
dec
loopne
pop
jb
push
shl
inc
mov
ret
push
and
sti
ds
sub
std
lret
icebp
icebp
arpl
test
cmpsl
cmc
mov
imul
cmp
push
and
aad
xor
jns
xchg
arpl
adcl
xchg
test
or
or
hlt
imul
push
pop
cmc
icebp
es
pop
jmp
jge
popa
ficomps
xchg
jmp
pushf
leave
sub
inc
xor
shlb
rcrb
popa
jmp
push
jg
inc
cmc
aas
aad
pop
out
hlt
pop
icebp
and
push
dec
scas
add
or
xchg
subl
negb
adcb
dec
rclb
or
cli
fnstcw
stos
negb
jg
mov
jb
jb
sti
mov
inc
xor
into
xchg
mov
stc
loop
in
inc
add
es
dec
add
and
cwtl
sub
rol
and
add
lock
enter
mov
lds
jno
sub
mov
aas
movsb
adc
adc
jb
out
add
arpl
div
sub
cmp
and
sbb
push
pusha
cltd
shlb
dec
xchg
mov
or
stos
out
cmp
dec
lea
je
inc
xchg
cli
xchg
push
sub
pop
dec
dec
outsb
mov
push
cmp
pop
clc
push
add
sahf
sub
xlat
pop
dec
cli
and
rcrb
dec
add
imul
jl
xor
xchg
lock
mov
faddp
dec
in
idivl
push
xchg
je
sahf
daa
aaa
add
jp
jns
roll
or
aaa
cmpsl
xchg
mov
in
out
mov
roll
push
inc
cmpsb
dec
xchg
xchg
sub
cmp
shrl
jns
sbb
movntps
add
push
out
int
adc
out
lret
inc
fisttpll
xchg
mov
les
xlat
imul
cwtl
adc
jbe
mov
cld
pop
popa
movsl
lea
sbb
jp
sub
cmpsl
scas
dec
pop
and
or
imul
fmulp
pop
cwtl
sbb
fwait
dec
enter
repz
xchg
std
jo
sti
jne
mov
cltd
pusha
test
sbb
cmp
xchg
inc
sar
movsl
aam
lcall
sahf
inc
in
sbb
cmpsb
sub
pop
stos
sub
xor
cmp
and
mov
test
cmp
divb
and
xchg
cmp
adc
ljmp
or
imul
pop
jl
vminpd
stc
cmp
dec
push
mov
movsl
pop
mov
out
add
add
jecxz
lahf
mov
enter
mov
ret
mov
pop
mull
pop
stc
inc
and
mov
mov
adc
pop
xchg
lods
dec
in
fcmovnb
lock
sbb
lcall
lods
mov
cli
clc
xchg
arpl
add
jmp
int
jg
mov
test
push
das
xchg
or
hlt
sub
dec
out
push
stos
xchg
add
in
adc
fsts
xchg
sbb
inc
add
sbb
sbb
jbe
das
fs
leave
imul
adc
out
mov
cs
iret
mov
outsb
pushf
push
mov
jmp
cmpb
jne
sub
or
mov
pop
sbb
iret
sbb
scas
orl
cmpsl
xlat
pusha
aad
xlat
lret
mov
popw
inc
mov
out
dec
add
icebp
leave
repz
cmp
fwait
xchg
popa
or
cmc
jmp
cltd
push
xchg
test
sub
pop
pop
inc
and
dec
aas
jecxz
scas
add
pop
mov
cmpsl
add
into
cmp
data16
dec
push
nop
pushf
into
adcb
mov
push
into
ja
pop
mov
cmp
jl
mov
fwait
es
cmp
sbb
inc
movsl
popf
pop
in
fs
jno
mov
rcl
jae
sbb
push
push
mov
inc
inc
xor
xor
dec
sub
mov
bound
xor
adc
minps
push
leave
cmp
iret
fstps
sub
xor
inc
sub
add
xor
jne
xchg
ja
xchg
adc
or
sbb
and
scas
enter
lock
inc
jns
mov
test
and
in
push
dec
icebp
mov
or
jne
sbbb
mov
fnstsw
or
sbb
dec
mov
xchg
div
adc
pop
not
sub
pop
pop
sub
mov
ljmp
mov
mov
pop
ja
push
and
enter
or
jl
jno
jbe
jl
ret
adc
pop
mov
pop
cmc
std
les
icebp
xor
pop
divb
rcll
mov
xchg
pushf
fs
into
div
imul
jbe
rorl
xchg
push
jb
outsb
loopne
jb
or
add
sub
repz
cmp
jle
enter
hlt
sub
xchg
xchg
loopne
xchg
jg
in
sub
clc
push
xlat
adc
add
in
enter
fsubs
call
test
or
rolb
mov
int3
shrb
popf
jge
xchg
out
inc
add
mov
adc
push
call
std
adcb
lds
jg
loope
xlat
pop
test
add
mulb
mov
stos
xchg
clc
scas
aaa
test
pop
insl
scas
out
add
lea
lea
pmullw
mov
and
and
xchg
jo
inc
jmp
cmpsb
out
mov
test
test
cmp
stos
mov
dec
pushf
shl
mov
cmp
mov
xor
pop
test
test
push
cmc
xchg
lods
dec
fadds
and
sub
jp
mov
cltd
mov
mov
push
lcall
sahf
mov
je
mov
inc
cmp
and
pop
jnp
and
push
inc
xchg
xor
mov
push
dec
repz
insb
cmpsb
fsub
mov
aaa
mov
cmp
push
mov
mov
outsb
or
dec
mov
xchg
adc
xor
xchg
adc
sbb
pop
sub
push
lahf
and
sub
dec
hlt
xchg
loop
subb
ljmp
repz
jmp
xlat
xor
in
cwtl
fisttpll
stc
dec
icebp
push
xchg
mov
sti
ja
sbb
add
or
jl
mov
test
rolb
movsb
movsb
loope
jge
pop
sbb
cld
rcll
test
into
adc
sti
addl
inc
pop
ja
xor
mov
imul
mov
mov
mov
loope
sub
jmp
add
lret
and
mov
cmp
fdiv
cmpsl
jns
cmp
push
ds
push
subl
paddsb
stos
mov
lods
lods
ljmp
out
mov
loopne
add
sbb
popf
sbb
in
push
pop
decl
pop
pop
add
mov
sti
enter
movsl
xor
lock
sub
call
imul
mov
ret
mov
and
inc
shrb
push
out
aad
imul
xchg
mov
mov
test
ret
jl
inc
jge
or
mov
sbbb
pop
cmpsl
push
dec
mov
inc
sbb
push
cmp
and
ljmp
mov
sub
iret
xchg
cmp
inc
add
int3
in
push
inc
cmp
dec
and
lret
inc
mov
mov
lods
inc
movsl
and
pop
orb
cld
enter
jmp
test
fwait
cmc
ficoml
movsl
push
aad
mov
ror
pop
dec
pop
fsubl
xchg
pop
push
mov
out
cltd
xchg
scas
cmp
mov
scas
iret
jge
push
pop
sub
ja
push
pop
mov
sub
cmp
xchg
and
cmp
dec
dec
cli
dec
or
jp
loope
mov
cmpsl
aaa
pop
cmp
push
pop
pop
shrl
out
dec
loope
mov
incb
cli
lock
scas
lods
sahf
push
shr
lahf
adc
jle
repz
jb
fcmovbe
jnp
les
cmp
mov
sbb
xchg
xor
xchg
sbb
cmp
dec
mov
add
movsb
scas
imul
or
lods
mov
pop
hlt
pop
lock
clc
test
xchg
jbe
push
repnz
cmp
mov
mov
mov
push
iret
movsl
xlat
fists
shlb
stos
or
fsubrs
sysenter
aas
push
call
mov
jb
pop
fnop
pop
hlt
mov
loopne
push
shl
sub
test
mov
repz
mov
mov
jmp
cli
xchg
or
pop
xchg
fwait
mov
aas
mov
stos
inc
sub
fsubrs
sub
and
ss
and
iret
jns
add
shlb
xor
loopne
ljmp
push
and
rcl
mov
aaa
mov
rcrl
ss
mov
roll
xchg
popa
insl
xor
mov
out
jg
outsl
sti
mov
sbbb
fldcw
nop
in
dec
and
in
dec
push
out
mul
dec
loop
xor
jb
jmp
jo
sti
mov
imul
cmp
jmp
sbb
ja
mov
sub
inc
push
and
or
fsubp
mov
mov
ret
fwait
mov
fmul
cli
cltd
jo
xchg
dec
arpl
pushf
push
jns
js
mov
push
outsb
or
xchg
adc
das
pop
roll
xchg
xlat
dec
adc
and
mov
pop
push
call
cltd
pushf
mov
pushf
inc
mov
jb
adcb
aaa
dec
sarb
inc
mov
dec
inc
ret
xchg
dec
xor
cmovns
fmuls
cmp
dec
pop
imul
loopne
aas
pushf
jo
cmp
jge
sub
mov
and
out
adc
fs
mov
cmpsb
pop
pop
xchg
inc
in
stc
imul
push
xlat
mov
rorl
ret
push
negl
mov
jecxz
dec
test
inc
sbb
add
jbe
dec
loopne
xlat
sbb
sub
adc
adc
jmp
cmp
sub
cmp
adc
clc
xorb
or
xchg
fnstcw
inc
cmc
addl
inc
movsl
adc
icebp
cli
lds
jo
push
dec
jae
push
dec
jecxz
jl
ljmp
je
adc
inc
dec
push
push
inc
and
or
fucomi
jg
jecxz
loope
ret
and
mov
jge
es
sub
dec
mov
fdivrl
or
sbb
rolb
test
jo
in
xorb
insb
lcall
ljmp
push
lcall
stos
cmpsb
and
or
dec
jnp
iret
insl
jb
xor
in
mov
dec
inc
test
ret
pop
pushf
aas
dec
pop
dec
dec
in
in
popf
sub
insl
shl
pop
cltd
pop
lods
push
pop
pusha
insb
adc
and
es
imul
dec
add
sub
pop
bound
add
dec
das
push
sbb
jb
push
lods
dec
push
pop
jne
mov
lret
rcll
addr16
sub
icebp
xlat
inc
jns
xchg
test
addr16
pop
add
rol
in
lods
std
ffreep
push
js
jp
push
popa
pop
or
test
or
jp
adc
xchg
popa
test
dec
or
imul
cli
ror
xor
dec
cs
adc
lock
inc
enter
movsl
scas
xor
adc
jae
xor
adc
icebp
push
inc
and
sub
arpl
add
fstpt
mov
cmpsb
xchg
cmc
mov
cs
cwtl
icebp
jno
cmpsl
xor
mov
mov
mull
jmp
xchg
out
cmp
add
pusha
into
push
push
mov
fisttpl
push
pop
xchg
nop
rcrl
push
jecxz
push
pop
mov
mov
scas
pop
mov
test
inc
inc
dec
fptan
cld
fcomp
pcmpeqw
enter
or
and
push
dec
cmp
jbe
push
xor
aam
adcl
jne
sub
mov
in
aaa
test
sti
aas
iret
inc
dec
mov
movl
add
cs
jg
sub
dec
in
std
push
pop
sahf
insb
push
xchg
fisttpll
test
inc
push
insl
mov
scas
xor
loopne
cltd
je
and
fcomps
push
mov
mov
mov
in
test
ret
mov
jl
popf
hlt
lret
push
shll
lret
in
mov
stos
pop
inc
aad
push
pusha
icebp
mov
ret
jge
in
ss
adc
add
mov
cmpsl
fisubrs
xchg
lcall
mov
mov
leave
fldenv
cld
pop
sarl
push
in
scas
mov
call
sbb
xor
nop
andb
cmc
mov
cmp
sub
lcall
pop
idivl
popa
adc
lret
dec
test
mov
rcl
pusha
jmp
push
cli
pop
lahf
ja
add
push
cmp
test
push
push
loopne
sbb
pushf
in
sbb
mov
and
sbb
mov
rcr
jl
sarl
cli
xor
or
mov
nop
loope
lret
push
lret
xor
sub
mov
inc
adc
sub
lods
sbb
jbe
in
jno
roll
jmp
lods
shll
adc
inc
fisubs
mov
push
dec
call
pop
scas
push
fwait
adc
cmp
dec
xchg
xorb
mov
adc
rorl
hlt
aas
pop
test
cld
and
sbb
adc
lea
hlt
xor
xlat
mov
or
xor
ljmp
bound
jl
dec
aam
mov
jnp
pop
xchg
mov
xchg
in
mov
mov
xchg
mov
or
aad
xor
aas
scas
mov
je
lret
mov
inc
test
xlat
lahf
lods
push
loop
pop
mov
scas
lods
out
pop
in
dec
push
ss
add
dec
out
idivb
and
in
ret
outsb
and
outsb
repz
jnp
push
aam
sbb
dec
dec
adc
mov
rcll
push
test
lock
faddl
mov
adc
push
sahf
enter
test
in
std
push
jne
rcl
les
push
jg
cld
pop
pushf
lret
mov
es
ja
into
lea
push
sub
dec
mov
cmc
inc
mov
mov
inc
and
adc
mov
testb
sbbl
xchg
loopne
add
stos
rcll
sub
fsubr
jae
scas
mov
jbe
repnz
xchg
sahf
sti
sbb
sbb
inc
sbbb
scas
hlt
adc
adc
aam
dec
data16
jecxz
rorl
arpl
cmp
shll
push
mov
nop
fildll
cmpb
movsl
jns
inc
dec
mov
add
mov
es
or
notb
jecxz
inc
icebp
or
sti
push
push
adc
mov
into
push
add
add
adc
das
in
movsl
inc
push
and
xor
jmp
int3
cwtl
incl
aaa
xchg
xlat
in
daa
push
mov
call
dec
rcll
jl
lahf
std
movsl
aad
xchg
es
cs
pop
mov
jg
mov
lcall
push
imul
repnz
dec
push
push
scas
out
cmp
jmp
cmpsl
fmull
jg
and
xor
out
fs
jl
popf
pop
icebp
mov
dec
push
or
idivl
clc
shlb
lret
xchg
loopne
test
sbb
push
mov
fwait
lods
adc
imul
mov
mov
push
jmp
iret
xor
aaa
jl
adc
je
xchg
scas
jbe
std
das
xchg
les
mov
jp
outsl
push
jae
lock
add
add
fs
jmp
orb
sub
jno
je
aas
out
jg
mov
jne
psubb
xor
xchg
fmull
movsl
jbe
mov
adc
out
ljmp
pop
dec
push
push
add
bound
lcall
mov
mov
push
jmp
inc
lahf
ret
pop
adc
insb
das
mov
cmp
lea
out
stos
mov
je
idivl
add
lods
iret
das
int3
out
xchg
dec
jle
es
out
gs
addr16
cmp
repnz
mov
fnstcw
mov
push
subl
cmp
leave
sarb
fisttpll
xor
lret
adc
sub
add
mov
adc
push
fnstsw
std
cmp
or
inc
dec
jge
mov
bound
pusha
dec
or
pop
sub
sub
jmp
dec
or
movhlps
test
adc
movsl
test
cmp
push
arpl
push
mov
dec
gs
cltd
ljmp
push
cltd
frstor
add
xchg
aam
aad
bound
ljmp
imul
cmpsb
xor
test
in
pop
sahf
aad
ja
xor
and
and
test
xchg
inc
adc
mov
and
mov
push
fwait
arpl
or
jnp
sarb
pushf
into
sbb
std
xor
addr16
ds
xor
les
adc
cmpsl
inc
shl
add
addb
push
popf
adc
mov
out
mov
xor
pop
push
fs
cltd
scas
cmp
xor
or
jb
pusha
mov
fisttpll
das
xlat
pushf
sar
lret
lahf
inc
loopne
ret
inc
xor
add
es
test
dec
inc
out
in
inc
sbb
or
mov
adc
and
les
js
stc
mov
mov
ret
xchg
outsl
out
rolb
frstor
pop
mov
loope
add
fildll
sbb
lahf
push
or
push
popf
xchg
xor
ret
jbe
or
mov
cmp
push
int
inc
cld
pop
jecxz
push
xor
iret
fs
lahf
icebp
xchg
test
mov
scas
and
sbb
xor
sahf
push
inc
add
aaa
insl
in
inc
mov
pop
dec
fstl
roll
inc
mov
sbb
fcoms
into
arpl
lods
sbb
sti
xchg
fs
lock
push
addr16
out
cmp
scas
loopne
je
mov
je
std
mov
ljmp
jb
call
push
shlb
or
int3
lds
mov
cmpsb
popa
std
hlt
jne
loopne
or
sbb
jb
popa
or
shll
jne
push
or
imull
mov
jae
imul
fs
popa
xchg
adc
xchg
mov
int3
inc
sub
test
call
rclb
arpl
inc
stos
xchg
cmp
and
int
sub
push
or
loope
loope
dec
mov
scas
ret
sub
xchg
data16
scas
mov
and
ljmp
cmp
addr16
sbbl
mov
repnz
arpl
gs
pushf
repz
cs
lcall
and
insl
daa
cltd
lock
mov
rclb
push
mov
dec
xor
push
adc
loope
fisubrl
xchg
jo
push
ficomps
adc
mov
movsb
cmp
sub
movsl
dec
les
sbb
add
mov
xchg
test
imul
push
movsl
jae
xor
jecxz
push
sub
sti
lcall
insl
daa
out
movsl
loope
nop
cmpsb
cmp
subb
and
cmp
rcrl
fistl
cwtl
or
test
xchg
frstor
and
inc
sbbb
int3
or
lods
mov
lock
outsb
sub
fimuls
mov
add
sbb
mov
push
and
mov
mov
and
jl
ljmp
and
pusha
test
push
mov
add
jl
xor
sbb
data16
loope
sarb
gs
shlb
outsb
ficomps
mov
icebp
lock
leave
inc
enter
cmp
inc
mov
jmp
cli
daa
or
and
xlat
mov
mov
stos
daa
xchg
in
out
lcall
test
xchg
lret
pop
cwtl
lret
dec
inc
ret
das
cmp
push
andb
pop
jmp
shll
out
pop
push
out
iret
or
out
jb
fcomps
xor
int
cs
push
sub
cmpsl
imul
push
and
jmp
jae
jnp
cli
push
mov
sahf
aas
dec
out
inc
nop
and
inc
outsl
add
mov
mov
sti
ljmp
into
enter
cs
loopne
cmp
mov
cmp
dec
adc
lea
push
inc
in
inc
test
pop
mulb
inc
cmpsb
cmp
aad
imul
mov
popf
xorl
insl
add
in
cmc
pop
push
mov
out
dec
shll
cmc
adc
popf
lahf
pop
cmpsl
orb
aaa
fsub
cmp
xchg
mov
xor
faddl
cmp
loope
decl
dec
jle
mov
gs
push
push
ret
movsb
add
fs
adc
add
pop
mov
pop
popa
pop
out
dec
mov
pop
cmp
lds
xchg
pusha
les
fidivl
stos
xchg
sbb
stc
dec
fs
mov
shl
cmp
out
mov
inc
dec
mov
fcmovne
inc
mov
adc
cmpsl
mov
cmp
out
int3
mov
xor
push
pop
push
movsb
jmp
shlb
scas
mov
cmp
jecxz
add
xchg
pop
pop
pop
or
add
inc
mov
addl
sub
test
sbb
gs
xor
inc
aam
adc
inc
jnp
test
pushf
sbb
lods
add
orl
push
ret
add
aas
sarb
int3
inc
pop
ret
lods
xchg
aam
push
leave
cmpsl
sahf
mov
pop
xchg
mov
lods
push
call
xor
js
out
mov
repnz
arpl
enter
jecxz
gs
repnz
ret
cmpsb
inc
push
das
popa
and
sbb
fdiv
sub
jb
ss
jne
jmp
std
inc
and
ja
les
pop
xchg
mov
cmp
sbb
imul
js
icebp
test
inc
mov
mov
adc
jle
loop
addr16
mov
cmp
lods
xchg
sbb
jl
mov
fldcw
mov
or
mov
ljmp
and
and
imul
add
jge
mov
loop
jge,pt
mov
dec
pop
adc
lret
sbb
mov
cmp
cmp
pop
test
pop
or
outsl
nop
sbb
pop
test
and
push
in
or
dec
jp
push
push
dec
or
mov
shll
jno
imul
sar
stos
push
out
dec
mov
je
rclb
rcll
subl
mov
sbb
xor
xchg
cmpsl
jmp
adc
popf
mov
jecxz
inc
shr
mov
pop
xor
xchg
jbe
jmp
pushf
loope
mov
push
sahf
outsb
std
lret
cmp
xor
jp
shr
popa
icebp
mov
jmp
mov
in
fsubs
sbb
pusha
imul
add
dec
sub
addr16
xchg
dec
aaa
mov
es
dec
sub
bound
adc
loop
addr16
and
push
mov
and
add
std
adc
test
jb
andb
stos
mov
cld
mov
lods
mov
ss
push
lods
pop
mov
xor
loopne
push
mov
push
push
push
sbb
into
push
mov
dec
dec
imul
sbb
xor
pop
sub
orb
push
lret
cltd
into
aad
pop
jp
clc
mov
cmp
out
test
insb
fcomp
adc
sbb
or
pop
rsqrtps
icebp
in
shrl
add
in
jbe
xchg
icebp
ret
andl
xor
ja
push
mov
push
cmp
ret
jge
clc
loopne
cmpsb
popa
pushf
data16
jne
in
mov
int3
dec
push
and
fisttpll
xchg
adc
adc
xor
fistpll
pop
sbb
lcall
out
aaa
mov
pop
nop
cwtl
in
fnstenv
cmovs
push
inc
pinsrw
and
repz
mov
daa
loopne
xchg
pushf
in
repz
sub
es
stos
jb
sbb
add
dec
movsl
pop
cmc
pushf
icebp
sarl
push
xchg
mov
popf
xor
std
pop
mov
and
xchg
jmp
out
ljmp
pop
mov
fs
sbb
fdivrl
rcr
fcmovu
mov
cli
jo
lods
jnp
rol
sbb
das
dec
inc
mov
xchg
mov
cmp
stc
cmpsb
mov
stos
dec
movsl
jo
lock
in
sar
push
lods
cli
mov
pop
jae
sbb
jbe
cmp
or
stc
push
mulb
or
ret
call
sub
adc
aad
sub
int
in
pushf
xchg
sub
andl
faddl
rorl
push
cld
push
sub
dec
mov
inc
mov
es
arpl
in
pop
out
add
les
fsubs
int3
lea
fldenv
xchg
scas
dec
xor
mov
inc
and
out
adc
add
std
iret
les
iret
or
push
call
sbb
xchg
ficoms
shr
scas
scas
or
out
cmpsl
cmp
xor
imul
xor
cmp
lret
into
bound
jne
pop
xor
out
mov
outsl
push
push
ljmp
jo
std
push
dec
jae
addl
xor
in
push
or
test
xchg
leave
cmp
xor
in
cmpsb
mov
xor
std
pop
jmp
stc
repz
add
mov
xchg
push
mov
jb
add
in
push
inc
add
in
fs
movsb
fidivrl
lea
aaa
in
jecxz
aas
cmp
out
mov
idivl
rolb
ljmp
mov
mov
mov
mov
test
into
sub
daa
imul
push
jns
sub
je
mov
cmp
lcall
push
ljmp
xor
lods
loopne
xlat
dec
divl
fdiv
daa
jge
pop
sbb
repz
adc
testl
lcall
aaa
cmp
test
cmp
pop
mov
and
xchg
pop
in
out
aaa
ja
mov
movsl
adc
inc
pop
fstpt
dec
imul
test
out
notb
jb
xchg
dec
mov
cld
stos
pop
out
mov
outsb
xchg
test
sbb
rorl
es
or
add
jno
in
pop
in
or
sbb
sub
add
dec
mov
insb
lea
mov
ljmp
lahf
ret
aas
test
std
repz
dec
lock
movsb
sbb
sbb
ret
std
push
stc
push
jb
lcall
mov
clc
and
ljmp
out
add
imul
daa
and
out
fidivrs
fldt
add
imul
pop
mov
mov
cmp
mov
out
mov
dec
xchg
add
pop
pop
pop
dec
subb
pop
lds
test
lods
xchg
out
sub
sub
add
jg
out
jl
sub
fisttpl
gs
clc
sub
xor
mov
fisubl
scas
mov
xchg
test
leave
lea
and
inc
xor
nop
sbb
iret
sbbb
push
inc
lret
and
int
sbb
lea
les
adc
movsb
jns
aaa
sarl
push
lea
jmp
adc
in
dec
cmp
mov
sbb
push
negl
shl
jg
stos
andl
jmp
jge
xchg
loop
inc
in
insl
inc
mov
pop
cmp
pop
ret
test
leave
xor
or
xchg
fidivl
adcb
pushf
fists
mov
cmp
call
add
xchg
into
rcll
fst
stc
sar
aad
cmp
das
ss
sti
xchg
sahf
jno
or
dec
mov
xchg
jge
std
dec
inc
sahf
data16
and
mov
sub
std
inc
jl
fisttpll
sahf
mov
push
cld
lret
xchg
in
outsb
stc
lret
bound
xor
add
data16
hlt
push
pusha
mov
lods
cltd
mov
hlt
xor
int3
cmp
clc
addr16
jp
add
inc
ret
popa
fs
test
ss
sub
cmp
loop
fstpl
data16
sub
sbb
sti
mov
lea
pusha
stc
cmp
loope
loop
ljmp
cli
shrb
test
sub
loopne
es
lds
arpl
aad
std
lret
mov
call
fldenv
outsb
jp
andnps
xchg
sub
in
add
loopne
pusha
sbb
inc
sub
xchg
in
mov
sbb
int3
cwtl
imul
dec
fsubrl
imul
mov
pop
push
dec
fs
loope
fstpl
or
push
sub
hlt
lahf
hlt
xchg
cli
dec
jmp
push
fadds
hlt
jecxz
mov
fidivrs
testl
mov
xor
outsl
outsl
push
loope
push
xchg
sti
adc
and
icebp
cmp
cli
add
mov
xor
jbe
in
test
std
pop
sbb
cwtl
pushf
mov
lahf
dec
fcoms
cvtdq2ps
sbb
scas
nop
or
jge
test
dec
push
xchg
daa
add
pop
sbb
sbb
mov
icebp
mov
aam
outsl
and
data16
fisttps
jns
mov
lods
dec
imul
bound
mov
daa
call
addb
mov
pop
es
popa
dec
sahf
xchg
outsb
cltd
je
add
pop
daa
lods
and
xor
movsb
mov
decl
shl
movsb
sub
pop
jge
xchg
dec
add
add
jo
das
sbb
loopne
pop
fwait
cmpb
or
xor
push
jae
jno
aam
sub
fimull
sbb
jge
dec
mov
push
jb
movsl
xchg
outsl
std
xchg
ret
ret
push
dec
jg
iret
daa
popa
add
lods
jmp
sahf
or
call
mov
xchg
push
inc
fwait
or
xchg
fwait
movl
cmp
push
add
lcall
mov
or
mov
pop
jg
inc
into
aam
mov
xorb
es
xchg
hlt
loop
test
loopne
mov
in
je
cmpsl
out
je
lahf
fnsave
mov
xchg
fdivs
ret
ja
call
xchg
fptan
mov
movsl
sti
lds
scas
into
xor
or
xchg
imul
les
sbb
push
adc
pusha
lods
sub
dec
mov
xchg
push
iret
add
cwtl
push
xlat
movsl
cmpsl
int
cmpsl
xchg
pop
out
jnp
testl
shlb
and
and
or
push
add
xchg
enter
cmpsb
pushf
pop
call
pop
dec
fsubrs
repnz
xor
lret
dec
dec
mov
pop
cmp
adc
gs
mov
xchg
cld
jnp
xchg
mov
movsl
lods
xor
pop
test
mov
sarl
xor
mov
pusha
and
loop
ss
jg
inc
jne
leave
mov
adc
int
aad
mov
in
aam
stc
jp
ss
cmc
mov
pop
xor
sub
xchg
test
lds
push
and
in
scas
leave
xchg
adc
iret
sti
pop
or
mov
and
mov
pop
mov
in
sbb
sub
xor
xchg
in
xchg
pop
shll
repnz
arpl
sar
lods
mov
or
pop
mov
pop
xchg
mov
cmp
cmp
test
mov
push
pop
mov
cld
packuswb
sbb
sub
add
mull
adc
popf
sub
mov
jg
inc
xorl
cmp
leave
sub
cmp
dec
cld
and
out
or
jbe
mov
incb
pop
pushf
iret
cmp
out
cmpsb
inc
adc
sbb
fisubs
mov
ljmp
aaa
and
xorb
std
mov
shrl
dec
std
jle
add
jl
push
movb
add
daa
ja
sti
mov
inc
in
inc
xor
jne
inc
fnsave
and
push
push
push
jae
push
dec
pusha
dec
mov
inc
stos
out
jl
aas
pushf
or
rclb
bound
push
adc
cmpsb
inc
jbe
fldenv
xchg
das
or
fnsave
jae
jo
arpl
stos
add
inc
aaa
push
stc
xor
or
xchg
jge
push
insb
imul
aad
in
jl
adc
sbb
fcompl
pop
sbb
cmp
mov
mov
int
popf
jge
add
movsl
pop
xlat
mov
pop
cmp
insl
mov
mov
scas
push
js
jo
adc
push
dec
sbb
jae
mov
mov
insb
cmpsl
jbe
pusha
pop
xor
sti
jns
fmul
imul
clc
mov
mov
ucomiss
sub
mull
lret
push
jmp
cld
popf
test
ror
lret
dec
enter
mov
outsl
jl
and
js
jp
repz
mov
jmp
mov
decl
cmp
jl
pop
in
inc
inc
push
adcb
enter
les
jl
and
subl
arpl
addr16
or
push
xchg
push
lahf
imul
mov
cli
in
mov
pop
loope
cli
cmp
sub
inc
imul
push
insl
enter
cli
dec
add
icebp
lds
jl
aas
adc
mov
adc
cmc
jmp
dec
push
lods
jp
divl
and
cld
or
rorb
xchg
push
adc
add
or
mov
xor
mov
dec
popl
sub
mov
roll
jo
addr16
icebp
lret
dec
or
mov
pop
in
or
dec
jecxz
sti
stos
sbb
cmp
xchg
pop
dec
rcll
lcall
add
inc
and
hlt
adc
mov
push
cmc
xchg
mov
scas
jbe
push
xchg
adc
leave
push
data16
aas
sub
mov
loopne
mov
and
insl
mov
and
mov
xor
inc
and
repnz
xor
hlt
pop
fistps
hlt
dec
ss
cs
pushf
push
icebp
ljmp
jb
push
loop
jnp
add
addr16
cltd
dec
mov
pop
and
dec
cmp
mov
mov
mov
rol
or
mov
adc
enter
lret
dec
aas
push
test
inc
into
pop
aam
dec
cwtl
push
lahf
or
fwait
lret
xchg
pop
repnz
out
and
sub
out
sbb
adc
xchg
adc
repnz
inc
mov
xor
pop
add
jo
cmp
pusha
sbb
nop
sub
movsl
ja
mov
bound
stc
sti
xchg
nop
lcall
jg
pop
jae
xchg
pop
movsl
das
push
push
leave
sub
stc
add
lret
and
out
xor
into
mov
fwait
sub
jne
inc
jb
pop
sub
es
lret
pop
lods
sub
test
inc
mov
push
jmp
in
add
subl
xor
or
dec
int
adc
das
outsl
jg
sbb
dec
lock
jmp
stos
out
sbb
and
int
aas
xchg
mov
test
xchg
push
sub
sub
hlt
jl
cmp
jae
sub
sbb
lea
sarl
fisttpl
adc
loop
add
adc
ret
insb
aad
repz
lea
orl
jecxz
adc
cltd
nop
adc
sarl
fs
pop
shr
xor
xchg
fwait
inc
dec
lret
xchg
adc
push
lcall
or
insb
pop
je
add
pop
out
jecxz
nop
movq
jecxz
aaa
enter
sub
mov
notl
mov
ret
ljmp
pop
dec
inc
mov
stc
inc
cltd
pop
pop
and
loop
ficoml
pop
mov
pop
ficompl
pop
inc
pusha
jmp
shr
movb
gs
adc
lock
rolb
mov
fstl
es
xchg
fnstcw
lods
mov
add
sahf
nop
cmp
out
push
xchg
cld
mov
mov
xchg
dec
or
add
mov
pop
fistpll
int3
adc
jecxz
insb
stos
loope
mov
lcall
pushf
mov
mov
jns
rorb
test
xor
rorb
movl
xchg
insb
sub
iret
pop
test
mov
pop
je
push
aaa
iret
sub
ds
cmp
cmc
stc
pop
sbb
mov
out
mov
add
xchg
insb
ljmp
test
pop
je
mov
xchg
int
and
test
je
inc
add
lcall
lods
bound
push
xchg
enter
repnz
lds
sub
sub
and
xchg
js
or
adc
imul
mov
cmpsb
jo
loopne
inc
xor
and
mov
repz
xchg
stc
lret
cmp
xchg
bound
enter
clc
jns
movsb
aaa
pushf
xchg
dec
into
test
mov
out
lds
in
xchg
pushf
mov
jmp
popf
pop
fdivl
dec
das
jl
and
adc
ss
repnz
mov
stos
jge
shl
lea
pop
out
lock
inc
mov
inc
test
sbb
pop
adc
loop
pop
sub
hlt
int3
mov
std
jle
outsb
movsb
adc
dec
add
jl
out
jns
push
movsl
push
pop
mov
sub
or
testb
fcmovnb
ret
fnstcw
mov
xchg
loop
fstpl
aaa
mov
xchg
mov
negl
jns
mov
xchg
clc
add
jle
push
jb
sbb
lahf
fsts
cli
sub
xor
sbb
test
dec
push
sbb
mov
dec
sub
aaa
xor
lock
sti
inc
or
mov
aaa
mov
push
sub
andb
adc
adc
icebp
shll
ret
popa
nop
jo
adc
add
or
fbld
xor
repz
sahf
leave
inc
pop
inc
test
cmc
and
test
cltd
movsb
sbb
pop
nop
jl
hlt
paddsw
xchg
arpl
or
cmpsl
cmp
les
adc
mov
mov
andb
std
inc
push
ja
xchg
fnstenv
xor
cmp
lds
xchg
lods
aaa
std
or
pop
std
inc
sbb
xor
mov
ja
out
sub
out
repnz
cmc
cs
pop
aas
push
add
mov
push
xor
stos
in
addr16
cli
ljmp
repnz
outsb
aaa
push
jae
lcall
aad
jo
jae
iret
imul
jne
or
cltd
xchg
jne
mov
aam
clc
mov
add
sbb
push
adc
pushf
xchg
lods
cmpsb
dec
mov
jns
sub
cmc
mov
sub
inc
in
push
shll
pop
fwait
add
and
fwait
push
xor
xor
fcoms
out
out
ja
fdivl
adc
sti
cmp
push
jmp
fs
and
aad
jnp
mov
or
loope
push
push
aas
cmp
xchg
push
ficompl
mov
fucomip
fidivrl
jmp
xchg
adc
daa
jb
jne
iret
pop
dec
jo
cmp
jno
int3
lcall
js
jb
fs
ret
mov
sbb
addr16
or
cmp
sub
mov
les
imul
lcall
insb
hlt
pop
mov
sub
jb
movl
lods
dec
mov
mov
and
in
cmpsb
addr16
jnp
mov
es
sahf
jl
mov
jmp
shll
push
mov
aaa
loop
xor
xor
sbb
mov
dec
xor
call
xchg
jno
imul
add
vmovmskps
mov
pop
add
push
ljmp
lret
mov
cwtl
lret
sub
add
in
lea
frstor
mov
cmp
pop
inc
mov
icebp
add
sbb
mov
and
iret
jge
or
and
push
jmp
cmp
mov
loope
lock
into
mov
arpl
movsl
mov
and
loop
fs
hlt
push
sub
imul
fs
bnd
or
adc
push
in
les
call
pop
in
add
inc
iret
xor
inc
test
repz
fidivrs
sub
arpl
and
xlat
add
je
xchg
xchg
sub
dec
loopne
sbb
lea
rclb
sar
xchg
push
mov
mov
jnp
fdivl
push
jmp
xchg
mov
push
mov
cmpsb
popa
frstor
xchg
imul
pop
sub
clc
addr16
jg
sub
aam
scas
imul
push
ror
push
pushf
int3
lea
xchg
add
add
jle
sbb
adc
in
push
shlb
mov
shrb
hlt
xor
fstpl
add
pushf
outsl
fwait
cmp
hlt
dec
add
je
inc
shrl
clc
mov
insl
outsb
lea
sbbl
jne
mov
jne
pop
divl
inc
stos
push
sarb
cmp
adc
fdivr
jo
sbb
arpl
mov
stos
pop
ds
xor
fst
jnp
mov
and
shl
pop
in
lcall
cmp
cmp
and
js
mov
fcmove
jge
popa
push
xchg
aam
mov
pop
mov
pop
fnsave
push
xchg
stc
addr16
fisubrs
aaa
outsb
and
add
insb
lds
les
in
rorl
or
pop
sti
dec
mov
dec
mov
adc
das
clc
cld
lods
pop
fcomip
arpl
mov
push
out
arpl
inc
adc
idivl
shrb
xor
nop
clc
dec
ja
push
mov
call
cmp
xor
inc
mov
fs
pushf
adc
in
insl
lods
sti
mov
jne
mov
xlat
push
ljmp
or
pop
fwait
ret
sub
fwait
es
loopne
and
inc
js
aaa
mov
cmc
lret
mov
fildl
aam
push
inc
cmp
pop
adc
push
fldl
and
test
nop
mov
or
mov
xchg
cmp
xchg
fdivrs
stos
ss
jbe
mov
out
push
mov
arpl
stos
adc
dec
sbb
dec
mov
mov
mov
push
cmc
mov
cltd
xchg
push
or
sub
test
cmp
mov
mov
dec
pop
icebp
mov
mov
xchg
push
in
mov
aaa
xor
push
jb
fidivl
ja
and
add
or
mov
shl
adc
mov
stc
es
addb
ds
sbb
mov
jmp
sarb
sbb
sub
divl
mov
dec
xor
mov
cltd
fsubl
mov
jl
xor
push
ss
lds
out
dec
sub
test
jl
cltd
sub
mov
lcall
mov
enter
sti
in
sarl
cmp
sub
icebp
rcrw
add
aas
repz
mov
insl
scas
repnz
movsl
xlat
jne
icebp
leave
das
insb
jno
arpl
pop
xchg
mov
pop
adc
push
xchg
icebp
push
fcoms
sub
pusha
mov
or
shlb
dec
test
xchg
icebp
adc
mov
sbb
adc
imul
dec
mov
adc
pop
andl
cmp
mov
inc
ljmp
fmuls
les
or
inc
or
mov
cmp
push
pop
cmp
roll
xchg
std
or
pop
push
push
stos
test
push
xorb
movsb
xor
xor
cmp
imul
or
sahf
test
xchg
adc
jmp
hlt
in
addl
sub
and
les
inc
mov
mov
insb
jg
push
xchg
mov
lea
or
stos
aam
mov
imul
cld
sbb
mov
mov
insb
call
and
lods
fistpl
test
add
rcrl
lcall
push
stc
adc
iret
fildl
sbb
data16
nop
mov
frstor
xchg
mov
adc
mov
jne
imul
or
mov
sbb
imul
popa
cmp
push
or
pop
mov
xchg
mov
rclb
add
repz
push
dec
out
pop
in
mov
lods
ror
popf
aaa
xor
fdivs
inc
stos
out
jbe
or
mov
jl
sbb
lcall
std
arpl
rclb
arpl
xchg
rorl
mov
mov
dec
push
push
mov
in
inc
push
insl
aas
lods
insb
cmp
es
fisubrl
mov
inc
incb
cmp
dec
gs
adc
ja
lahf
subb
pop
add
in
fnstenv
mov
mov
inc
enter
notb
in
adc
out
add
ds
dec
and
mov
out
dec
fstpl
lcall
cmc
sahf
in
enter
mov
lret
or
push
or
inc
lahf
jae
dec
inc
push
mov
jno
shr
ret
lcall
and
jle
sub
test
cmpsl
les
lahf
jae
stc
pop
dec
inc
or
bound
out
and
push
jg
jmp
sbb
or
fldl2e
fmuls
pop
xor
dec
mov
cmp
int
icebp
loope
pop
clc
jnp
clc
mov
sbb
shrl
dec
arpl
pop
fwait
pop
pop
dec
push
dec
test
shlb
xchg
adc
pop
testb
xchg
inc
inc
call
or
adc
das
add
or
mov
mov
pop
fimuls
dec
xorb
nop
clc
cmp
add
or
ss
adc
jl
mov
dec
add
mov
adc
subb
ret
jmp
adc
jle
cmc
mov
xor
repz
outsb
ljmp
mov
sub
mov
mov
fisubs
lods
xlat
pop
imull
xor
inc
sub
adc
sub
movsb
pop
outsb
cwtl
call
jg
mov
sarb
pop
mov
cwtl
mov
out
sbbl
cmp
js
outsb
add
or
or
adc
addr16
dec
or
cmpsb
mov
mov
jno
and
fidivrs
aaa
jnp
adc
ds
je
in
sub
jno
mov
or
push
nop
and
mov
rclb
xlat
lods
add
andb
jne
call
int3
mov
fiadds
fucomi
ja
dec
or
mov
mov
fmuls
or
or
cmpsl
dec
out
lods
push
jmp
sarb
jmp
clc
stc
out
xchg
xchg
or
mov
lret
leave
aad
dec
xor
inc
movsb
ret
dec
sbb
add
lock
sbb
pop
mov
repz
repnz
mov
mov
les
sti
pop
popa
dec
in
xlat
imul
cltd
and
mov
scas
and
andb
arpl
ds
das
scas
jbe
int3
popa
xor
jl
test
mov
push
pop
mov
pop
xor
lahf
insl
sar
mov
movsl
test
sub
clc
lods
stc
daa
out
fwait
jbe
sub
ja
pop
pop
insl
push
jae
movsb
sbb
lcall
sbb
fbstp
sub
mov
jecxz
leave
test
mov
mov
xchg
jns
lretw
lock
repnz
xor
add
sbb
loopne
inc
mov
inc
push
or
add
negb
outsb
int
push
shll
leave
jae
arpl
stos
scas
test
ja
fldcw
imul
les
arpl
rcrb
jne
iret
xor
into
loop
cmp
push
pop
or
clc
mov
xor
stc
add
add
fisubs
mov
sub
dec
lea
cmp
in
xor
movl
lock
pusha
sarb
xor
ja
out
ds
and
leave
pop
mov
push
imul
xor
mov
icebp
xchg
sub
add
sbbb
cmp
fidivs
jge
mov
dec
jg
or
ss
cmp
hlt
call
in
sbb
xchg
flds
outsb
lock
lds
pop
dec
inc
adc
add
mov
cltd
sbb
xor
jge
pusha
pop
xor
loop
xor
dec
mov
mov
add
inc
mov
sbb
dec
mov
mov
push
xchg
mov
cli
out
mov
les
ret
pusha
sti
inc
mov
sub
ja
push
jle
pop
int3
std
or
mov
gs
rclb
test
mov
cmp
xchg
sbb
aas
and
dec
dec
dec
lret
mov
out
mov
nop
jl
cmpsb
or
mov
loopne
mov
addl
mov
mov
rorb
push
jg
push
das
add
aam
clc
inc
xchg
andb
cwtl
mov
ffree
daa
scas
ljmp
sbb
add
push
ss
dec
jg
jbe
cmp
xor
push
mov
mov
aad
movsl
jb
fadds
fcompl
sub
jns
xchg
cmc
iret
fsts
imul
pushf
idiv
dec
add
mov
jg
movsl
xchg
ds
xchg
loope
shl
or
insb
das
lahf
fildl
xchg
push
mov
stos
lods
jge
repnz
repnz
jg
jbe
sbb
test
pop
fsin
adc
movsl
xor
hlt
or
inc
or
pusha
dec
fnstenv
push
jbe
inc
and
sub
xchg
pop
mov
and
es
cltd
rol
cwtl
mov
xchg
push
cmp
sbb
lret
mov
add
sub
inc
fwait
or
mov
fidivl
sub
cli
cmp
into
adc
je
imul
popa
xchg
cmp
or
gs
cmp
xor
push
clc
insl
xchg
add
in
popf
push
xor
ljmp
jo
push
outsb
aaa
cltd
mov
test
pop
hlt
inc
call
sbb
imul
mov
add
addr16
adc
cmpsl
test
pop
pushf
fdivl
xchg
inc
ja
push
rcrb
ret
out
jo
leave
inc
add
mov
mov
pop
pop
mov
xor
dec
nop
dec
sub
leave
lea
push
ret
fst
into
lahf
int3
pop
insl
and
inc
lods
aad
or
or
mov
aad
push
push
push
cmp
aas
sbb
add
xchg
jnp
dec
cmp
daa
dec
test
xchg
xchg
test
fadds
sub
inc
lods
call
add
dec
jge
lods
fsubl
mov
jle
dec
ss
fidivrs
push
cmp
mov
leave
and
daa
imul
clc
sub
out
and
dec
mov
mov
pop
pop
cmc
cmpsl
lds
roll
inc
xlat
in
ret
popa
in
push
outsb
mov
cmp
mov
xchg
mov
daa
inc
lock
dec
ret
push
jnp
repnz
or
jnp
inc
mov
mov
repnz
dec
push
rcrl
sub
scas
lahf
or
int
fsubr
rcrl
andl
mov
push
test
dec
push
mov
inc
pop
lret
cmp
lods
ss
pushf
inc
sbb
xor
sbb
fdivr
dec
xor
pusha
fsubs
popa
xchg
or
cmpsl
or
roll
mov
pop
insl
jle
xchg
jnp
or
adcb
mov
or
xchg
sub
jb
nop
aaa
inc
ss
fistpll
aad
test
iret
xor
cld
mov
and
dec
or
mov
cmp
push
sbb
cmp
outsl
xchg
adc
notl
jecxz
arpl
mov
std
sub
mov
je
adc
cmp
push
in
or
mov
mov
gs
pop
adc
mov
rcrb
or
pop
std
fsubrp
or
push
mov
jb
out
mov
dec
repz
or
dec
adc
daa
test
fistpl
jae
bnd
roll
adc
xchg
pushf
inc
negl
mov
stos
mov
jb
in
mov
mov
fsts
sbb
lcall
mov
cmp
pop
ret
pop
jne
mov
bound
jno
es
mov
push
mov
sbb
sahf
or
push
sbb
into
sub
test
push
lock
jno
lds
test
in
aad
mov
es
ret
smsw
sbb
mov
hlt
mov
and
xor
pop
call
call
ffree
jnp
pop
ss
out
push
sub
mov
pop
aas
xchg
sbb
xor
bound
cmp
add
or
popf
mov
cmpsl
or
dec
inc
out
pop
ds
adc
test
sti
adc
mov
jbe
mul
cld
jo
mov
pop
jns
pop
pop
sub
shrb
add
scas
mov
pusha
test
sub
pop
xlat
mov
mov
push
mov
mov
iret
testb
push
xchg
xlat
loopne
loop
mov
cmp
es
push
cmpsb
cmp
push
or
sub
push
adc
test
clc
jge
or
push
hlt
lret
xor
and
add
inc
jg
test
cmpsl
cmp
mov
xor
sub
iret
xchg
pop
inc
mov
cwtl
dec
mov
jl
insb
hlt
cmp
jb
adc
daa
ja
addr16
push
into
push
call
insb
gs
jb
outsb
inc
sbb
or
fsubl
xor
in
cmc
pop
lds
push
xor
push
mov
adc
mov
mov
mov
cld
pop
xchg
cmpsl
shll
fdivl
dec
sbb
imul
in
cmp
sahf
inc
sti
adc
and
ss
jo
lock
pop
ret
mov
pop
fiadds
mov
mov
xor
mov
fcoml
xor
icebp
fidivrs
dec
int
push
push
std
and
jmp
inc
mov
push
daa
es
ja
xchg
roll
rclb
inc
scas
insl
inc
mov
push
call
sub
fists
das
mov
xchg
jae
or
aas
xor
ret
cmpsl
or
xor
cmp
inc
addb
fxch
mov
jmp
xchg
imul
aad
test
sub
cld
testb
cld
xchg
arpl
pop
pushf
mov
pop
out
mov
ljmp
fstl
inc
mov
jp
cmp
jle
hlt
mov
xchg
out
inc
imul
xor
repz
je
mov
cli
testl
cmp
lahf
pop
std
popa
lahf
xchg
dec
lods
or
adc
rorl
fs
cmc
iret
les
jnp
rcll
inc
inc
dec
pop
dec
xlat
lahf
sub
ss
mov
xchg
jb
mov
dec
shr
ds
addr16
lods
outsb
cmp
xor
adc
fstpl
cltd
add
mov
xlat
sbb
adc
addl
jae
mov
mov
xchg
leave
xchg
sub
mov
xor
cli
popa
lods
ljmp
mov
cmp
pop
fucomi
fs
adc
cmpsb
or
sbb
outsb
push
push
loope
or
and
push
sbb
outsl
cmp
jo
frstor
jecxz
mull
push
and
add
ficompl
mov
pop
cli
in
je
jl
fdivrs
rol
test
sbb
jg
int
scas
bnd
push
pop
mov
jb
mov
pop
jb
or
lret
jp
stos
fiaddl
mov
sbb
sub
sub
mov
repz
mov
test
fadd
mov
test
xor
cmp
xlat
shlb
mov
xchg
loopne
icebp
mov
movsb
pushf
out
ret
push
loopne
fistpll
in
inc
or
cmpl
push
cltd
jns
cmp
jecxz
std
push
pushf
ljmp
dec
inc
dec
stc
movsl
xorb
ret
aas
mov
test
lret
aas
bound
orb
push
arpl
js
in
nop
adc
mov
xchg
sahf
das
cmc
in
push
jno
pop
mov
int
ficomps
xor
call
sbb
enter
paddsw
mov
cmc
jl
pop
xchg
stc
inc
sub
push
sbb
xlat
orb
pop
fidivrl
andb
scas
add
jg
push
addr16
out
stos
adc
outsl
xor
pusha
lock
dec
sub
mov
jbe
xchg
mov
jp
push
loop
nop
in
cmc
xor
sbb
sti
add
sbb
test
test
mov
scas
test
inc
xor
or
mov
pop
mov
sbb
hlt
repnz
mov
icebp
leave
pop
jo
scas
or
in
leave
mov
lock
fisubrl
push
sahf
hlt
mov
loopne
int3
push
mov
mov
clc
push
out
dec
or
repnz
js
int3
and
idivb
dec
bound
lret
sub
jno
lret
push
sub
clc
cmp
push
pusha
mov
push
mov
dec
imul
pop
test
das
repnz
xchg
ljmp
sub
fwait
jge
jo
das
mov
imul
test
jnp
and
cmpsb
dec
xchg
cmp
inc
sbb
xchg
sub
sub
rcl
add
add
cli
mov
xchg
inc
cmp
jge
mov
je
dec
ficomps
xchg
pusha
add
jbe
pop
jns
clc
ret
inc
or
repnz
jle
jmp
insb
pusha
or
std
imul
pushf
adc
xchg
test
bnd
add
ds
stc
in
mov
dec
mov
inc
in
mov
loope
xchg
pushf
into
test
xchg
sti
add
es
push
stos
int3
pop
aad
or
sbb
lcall
pushf
mov
sbb
mov
sub
js
hlt
pop
gs
dec
pushf
mov
xlat
das
outsl
mov
adc
sti
push
pop
imul
mov
mov
aad
pop
es
or
ds
faddl
xor
clc
roll
mov
jae
mov
jl
lods
xor
roll
loop
mov
sub
sbbb
in
dec
repnz
xor
mov
nop
jbe
jb
xor
mov
cld
mov
iret
xor
mov
xor
lea
ljmp
cmp
mov
test
hlt
push
push
and
push
dec
aaa
or
pop
sti
out
lcall
ss
sbb
dec
xchg
sub
xchg
lock
outsb
adc
jge
mov
dec
cmp
xchg
stos
add
jmp
push
and
rolb
mov
pop
or
mov
mov
rcrb
gs
iret
out
testl
mov
pop
jnp
fwait
dec
rorb
push
sahf
je
ljmp
or
cmp
or
pop
xor
scas
push
jmp
jg
rorl
sub
ret
pop
push
xchg
pusha
pop
les
popa
int
enter
pop
mov
incl
stc
into
jecxz
test
pop
test
repnz
cmp
sub
sti
inc
adc
pop
les
loop
negl
or
lock
ret
sysenter
popf
xchg
inc
jbe
adc
mov
jne
call
add
dec
xchg
scas
or
int
cwtl
scas
or
rcrl
in
xlat
loop
cmc
push
cmpsb
icebp
out
add
pusha
mov
and
dec
in
sbb
das
xor
push
mov
add
xchg
cmpl
cmpsl
hlt
repz
add
push
mov
fsubl
add
rorl
outsb
ret
je
shlb
add
push
shl
pop
fdivs
jns
jl
xlat
sbbb
stos
stos
push
add
add
pop
xchg
rorl
xor
call
mov
imul
aam
lods
jge
mov
sti
xor
xchg
outsb
cmpsb
fst
aam
fisubrl
pop
inc
lods
lock
push
mov
add
xor
cmc
pop
test
mov
mov
pusha
xlat
mov
jp
enter
ss
fidivrs
add
xchg
out
shll
loope
xor
sti
aaa
scas
repz
mov
add
jle
sbb
nop
mov
lret
jecxz
es
cmp
js
andb
mov
lea
pop
out
lret
dec
sbb
clc
and
jnp
cmp
scas
add
cmp
das
ret
dec
mov
sbb
sbb
and
xor
ja
adc
ljmp
out
test
sbb
add
cmp
aad
jle
xchg
xchg
gs
mov
imul
into
sub
add
pushf
push
cmp
xchg
add
add
pop
dec
fldl
loopne
inc
lret
int
lret
test
movsl
adc
fwait
xchg
mov
or
xchg
lret
sar
lock
pop
mov
dec
pop
cwtl
out
mov
scas
test
packuswb
jg
fldt
adc
push
mov
fcmovnbe
xchg
cmc
dec
add
mov
jl
push
adc
testl
pop
outsl
jbe
hlt
push
pop
and
in
add
ret
dec
push
adc
aam
lods
mov
cmp
add
lcall
rcl
cmp
xchg
call
loope
cltd
jo
testl
dec
inc
cmp
fsubrl
xor
mov
shll
div
mov
mov
lret
mov
imul
adc
xchg
fcmovnu
xchg
in
call
pop
in
pop
les
push
test
cld
pop
imul
pop
movsl
stc
int
jae
xor
js
pop
iret
jp
loope
call
repnz
ret
sub
mov
push
scas
add
and
inc
mov
push
repnz
cmp
lahf
pop
insb
popf
or
stc
sub
cwtl
xchg
xchg
pop
shlb
push
pop
hlt
faddl
add
insb
stc
sbbl
mov
gs
pop
ret
mov
jb
mov
inc
xchg
mov
adc
testl
mov
mov
jne
outsl
adc
jae
fsubrl
push
or
or
aas
and
fidivl
rclb
lcall
sbb
cmp
push
xchg
loope
ds
mov
bound
jb
dec
mov
push
adc
pop
test
fwait
lcall
xchg
pop
sub
push
repz
xlat
sbb
mov
addr16
shlb
mov
inc
xor
and
add
popa
xor
bnd
xor
sti
mov
dec
sub
movsb
adc
inc
fisubrs
pop
mov
jo
out
jb
andb
mov
jmp
cmc
flds
mov
jl
push
int
pop
xchg
add
stos
dec
add
fldenv
inc
leave
lcall
jns
jg
sbb
sub
sub
cmp
cltd
adc
push
cmp
data16
test
test
jp
mov
push
lock
pop
sahf
mov
mov
or
pop
hlt
out
fcoml
dec
sbb
into
jnp
cmp
out
mov
pop
rcr
and
pusha
movsb
out
adc
les
mov
jae
lahf
xchg
popa
push
jge
inc
aas
sub
pop
bound
inc
stos
mov
adc
xlat
pop
lahf
gs
adc
sbb
dec
sub
push
js
in
jns
adc
inc
lods
pop
sbb
insl
lea
es
repz
sbb
ds
ja
xchg
cltd
mov
xor
dec
cltd
and
out
cs
sahf
pop
addr16
pushf
add
cltd
mov
in
or
mov
dec
jne
lods
test
xchg
mov
in
lret
sbb
inc
in
jl
sahf
fidivrl
lret
subl
je
loopne
addr16
lcall
out
pop
rorb
xchg
xor
lock
push
fmulp
pop
mov
add
jmp
into
ljmp
out
jo
add
mov
and
cli
les
add
mov
mov
cmpsl
cli
fstps
jbe
out
movsb
xchg
mov
inc
pop
xor
shlb
sub
pop
mov
and
mov
or
pop
push
push
fistpll
fiaddl
out
add
test
daa
mov
jle
cld
ljmp
dec
jl
add
mov
add
ret
js
mov
jne
mov
mov
or
cmp
in
push
pop
aas
leave
mov
in
leave
dec
ja
es
cmc
iret
sub
fists
cmp
sbb
add
js
cmc
into
test
pop
leave
lret
cli
jb
scas
aaa
outsb
in
cmpsb
test
xor
fwait
sub
test
lret
push
cli
shlb
iret
insl
add
push
repz
xor
outsl
orl
js
jbe
jb
jne
xchg
stc
in
je
pop
or
cmc
xchg
add
addr16
mov
bnd
aam
mov
test
andb
into
xor
mov
mov
cmp
add
push
imul
adc
push
adc
inc
icebp
xor
mov
mov
sbbl
fsubrp
mov
imul
jo
and
inc
in
dec
rorb
imull
push
dec
pop
cld
adc
ds
test
jmp
scas
inc
pushf
xor
movsb
mov
mov
in
and
dec
mov
dec
das
xchg
pop
out
mov
dec
shlb
clc
imul
jb
imul
sub
jae
xor
cmp
push
inc
pop
sub
sub
data16
jg
cmp
andl
icebp
cmp
dec
mov
add
loopne
mov
lcall
push
out
into
inc
jp
cli
jne
sar
add
xchg
subps
fisubrl
sub
xor
mov
cmp
imul
and
enter
jmp
or
mov
push
or
movsl
ror
loope
xchg
fbstp
lea
lret
and
push
sbb
dec
mov
inc
leave
cmp
xchg
mov
inc
jb
fucom
mov
in
addr16
xchg
and
mov
lret
pop
enter
les
mov
shll
mov
inc
insl
mov
pop
outsb
es
pop
cli
nop
mov
pop
xchg
sub
pop
cli
repz
test
mov
lret
pusha
addr16
push
fcmovu
out
pop
orl
subl
xor
les
jbe
pop
decl
pop
ds
mov
imul
inc
adc
icebp
popl
es
lock
pop
loop
or
in
arpl
cmp
xor
mov
aas
in
jp
dec
pushf
push
dec
insl
sub
psubsb
out
aaa
ljmp
mov
lods
incl
and
in
add
mov
ror
outsb
sub
imul
or
loopne
lahf
xor
mov
jae
popf
xchg
js
pushf
mov
stos
sbb
sub
lcall
dec
push
int3
ret
adc
pop
and
cmp
lds
loope
and
dec
ret
test
push
cld
cli
push
testb
or
rol
jecxz
lods
mov
mov
in
mov
mov
mov
mov
sub
mov
repnz
inc
mov
mov
dec
cmp
pop
mov
sub
or
mov
jno
sti
add
adc
mov
mov
dec
sbb
sbb
int
pushf
aam
xor
mov
inc
ljmp
std
insb
inc
aaa
lcall
xor
jle
in
mov
stc
push
inc
jecxz
sbb
repz
adc
inc
movl
inc
cmp
xchg
push
mov
xlat
hlt
sub
add
mov
fnsave
in
imul
mov
sahf
inc
xchg
sbb
inc
inc
cli
clc
and
jmp
mov
mov
pushf
test
mov
outsl
xchg
xchg
jns
pop
jmp
std
fcomi
icebp
cmpsb
ret
mov
scas
mov
adc
ret
stos
xor
inc
sub
jnp
add
sub
gs
dec
xchg
pop
lahf
fstps
cmpsl
roll
inc
jp
sub
sub
mov
xchg
cmpsl
scas
test
pop
lcall
xchg
repnz
hlt
mov
xor
mov
retw
stc
add
push
sub
pop
mov
cmp
sbb
ljmp
mov
pop
push
adc
dec
call
imul
test
popf
sbbb
repnz
and
mov
int
xchg
cmc
adc
shlb
call
pop
pop
es
popf
add
sbb
fimuls
sbb
push
xchg
testb
push
mov
sti
lret
adc
test
nop
shrl
nop
fwait
pop
mov
es
loop
sbb
adc
in
jge
pop
mov
test
mov
dec
xchg
inc
adc
dec
jmp
lods
lods
shr
and
std
sahf
or
or
pop
stc
dec
add
test
insb
xor
clc
nop
clc
jecxz
xchg
or
shrl
inc
pop
push
jne
in
fadd
cmc
sbb
sbb
push
push
jnp
std
in
push
in
lahf
cmp
shl
pop
stos
in
cmp
lods
lds
adc
sti
or
sbb
jmp
and
add
mov
outsl
sbbb
inc
lds
test
dec
mov
pop
int3
sub
lods
pop
call
sbb
cmpsb
addr16
leave
sub
lds
sbb
scas
adc
mov
negb
push
es
movsl
nop
les
fldt
cli
lcall
mov
pop
xor
sbb
fadd
or
loop
sbbb
mov
ds
inc
mov
add
and
mov
xor
dec
imul
pop
pop
bound
out
in
mov
lcall
mov
pop
or
add
pushf
xor
add
pop
adc
push
outsl
scas
and
std
xchg
ds
cmp
cmc
insb
jno
mov
leave
push
and
scas
sarl
es
sub
jmp
jnp
jl
pusha
adc
shll
in
gs
xchg
mov
andl
xor
jp
and
xchg
or
cld
ret
pop
insl
jo
rcll
push
ja
push
mov
gs
lret
pop
cmp
aad
int3
int
inc
lcall
jae
mov
pop
hlt
pop
or
aad
movsb
jle
xchg
sub
mov
jge
sub
pop
sbb
leave
adc
stos
jns
jge
aad
mov
jne
xor
pop
pushf
inc
dec
outsl
pusha
sbb
ret
int3
shrb
jne
scas
pop
cld
mov
out
xor
mov
subl
sbb
mov
mov
jp
and
pop
cmp
adc
dec
push
icebp
mov
dec
mov
mov
push
enter
scas
lea
add
clc
dec
jae
mov
sbb
movsl
push
jp
les
lahf
cmpsl
xchg
mov
stos
sbb
xor
push
mov
or
aam
leave
xchg
adc
push
lret
add
xchg
jnp
stos
xlat
pop
inc
int
xorl
scas
dec
pop
pop
cli
xchg
xchg
out
add
cmp
sti
ss
cmpsl
movsb
test
fisubl
cli
cmpsb
and
xor
pop
fwait
jne
iret
mov
repnz
inc
shrb
mov
fldln2
sbbl
es
sub
push
cli
pop
xor
mov
ret
stos
pop
icebp
cmpsb
cwtl
xor
cmp
pop
scas
mov
mov
sbb
daa
xchg
cmp
out
mov
stc
xlat
cmc
arpl
stc
ficompl
pop
lock
enter
mov
lea
jne
ljmp
inc
bt
adc
lods
ss
add
and
fcoml
sub
and
cmp
xchg
inc
pop
mov
cmp
loop
rcrl
cwtl
imul
mov
sub
je
cmp
xchg
sbb
imul
sahf
clc
pop
lods
lret
xorl
cmpsl
cmp
lock
js
testb
pop
mov
mov
adcl
fs
or
js
jno
daa
cmpsb
daa
jmp
loope
nop
mov
or
xlat
je
mov
sbb
ds
pop
aaa
add
push
cmp
cmp
in
shlb
mov
mov
test
pushf
push
pop
dec
mov
and
mov
inc
rorl
xor
sub
inc
movsb
sbb
std
das
les
ljmp
mov
pop
sbb
push
jo
jmp
sub
in
push
mov
popf
mov
cmp
pop
adc
push
fsubrs
sub
mov
add
filds
rclb
iret
lock
xorb
sarl
lret
inc
cli
cmpsl
or
xchg
test
inc
and
iret
mov
mov
inc
jne
adc
and
and
xor
xchg
mov
mov
mov
adc
sti
addb
cmp
jbe
mov
pop
inc
inc
jae
std
insl
xor
xor
movsl
push
imul
test
xor
int3
dec
adc
fnstcw
add
rcrl
out
push
pinsrw
lret
add
mov
enter
mov
mov
cli
enter
sbb
ret
jb
adc
xchg
into
test
inc
pushf
pushf
out
scas
out
test
ret
js
int
sahf
int3
and
shrb
push
inc
call
cs
mov
dec
push
mov
inc
mov
cmp
fcoms
shlb
mov
adc
mov
pop
in
push
jo
sub
mov
sahf
bound
xor
lods
ret
and
stos
aad
andb
jbe
cmc
mov
in
cmpsl
xchg
je
clc
push
mov
ljmp
or
test
scas
push
out
addb
addr16
jecxz
or
dec
mov
hlt
cmovp
adc
and
and
fucomip
orb
int
cmpb
jae
fistpl
pop
jg
and
sub
sub
lds
jno
out
fmull
cmp
or
hlt
jb
addr16
add
jne
fidivrl
sbb
int3
jmp
sbb
enter
pop
sti
psubsw
jmp
sub
push
fnstcw
push
mov
mov
jo
gs
ss
or
cmp
cmp
mov
add
add
cmp
xchg
mov
adc
in
dec
test
xchg
mov
mov
out
std
adc
imul
sbbb
dec
mov
sbb
pop
xchg
ret
jb
pusha
add
cs
cmc
xchg
mov
mov
aas
cmp
test
orb
jge
mov
es
cmpsl
xor
push
mov
rcll
nop
mov
enter
or
mov
scas
dec
xor
or
les
mov
bound
and
jno
lret
pop
fildl
jl
es
test
cmpsl
jge
push
ficompl
jp
lret
mov
ret
daa
fcomps
xchg
mov
pop
cmpsb
mov
sti
jno
data16
pop
mov
mov
test
cmpsb
hlt
xchg
or
mov
bound
incb
pcmpeqw
mov
ss
mov
mov
xor
fcomps
lods
lods
jno
xor
mov
push
out
int3
sbb
stos
jbe
and
loopne
lcall
add
pop
push
dec
and
ss
pop
jle
mov
ja
pop
push
jle
arpl
jge
inc
mov
mov
mov
mov
sub
in
mov
aas
ret
adc
cli
shll
or
ja
fwait
pop
inc
add
mov
aaa
sub
lahf
xchg
mov
hlt
imul
inc
sbb
xor
adc
inc
aaa
push
lods
aam
or
mov
add
jno
push
and
lock
and
mov
lret
push
push
rolb
into
rcrb
dec
jmp
addr16
iret
fisubrs
mov
mov
pop
cmp
shl
call
mov
pop
dec
cld
ss
push
and
ja
dec
xor
cmp
fnstenv
rcl
daa
ds
push
cmp
and
mov
push
dec
test
movsl
clc
or
xchg
pop
out
xchg
add
in
xor
push
clc
mov
inc
push
push
mov
push
cmc
adc
add
lahf
sub
pushf
test
add
int3
rorb
push
pop
xchg
movsb
sbb
or
xor
movsb
stc
jne
jl
sbb
mov
add
xlat
mov
scas
mov
xor
stos
lods
test
clc
push
scas
sti
add
cmp
or
xor
aas
jle
sbb
xchg
dec
inc
fcom
cmpb
pop
push
mov
les
xor
pusha
jno
sbb
jne
sub
ret
sub
fs
or
push
cmc
xor
out
xchg
xchg
pop
cli
fstps
in
dec
adc
gs
jns
pop
jae
inc
add
add
ret
mull
xchg
add
cltd
sarb
imul
inc
xchg
xor
sub
sub
aam
fdivr
lret
stc
push
imul
rorb
inc
es
mov
pop
push
pop
vaddpd
jb
push
mov
jl
shrl
std
push
or
push
xchg
mov
out
adc
pop
xchg
fdivl
mov
xchg
les
lods
jmp
test
mov
or
dec
lahf
dec
mov
sub
ss
ss
popa
inc
xchg
dec
push
dec
sub
mov
addr16
jmp
sbb
out
jmp
inc
sbb
xchg
lea
shlb
jecxz
add
fwait
andl
fisubl
push
out
cwtl
mov
mov
cwtl
mov
stos
mov
rcr
imul
jnp
rorb
sub
inc
lods
xchg
jo
jns
je
ret
mov
xchg
xor
data16
stos
inc
jecxz
push
jge
inc
and
je
push
push
dec
xchg
pop
lds
pop
sub
sbb
pushf
repz
xchg
pushf
push
rcr
aad
in
jbe
sub
sti
mov
aas
in
pop
mov
sbb
mov
insb
int3
jmp
cltd
mov
aaa
shll
pop
push
repz
fwait
in
cmp
inc
mov
fcmovbe
cwtl
push
mov
inc
push
mov
jae
jle
and
jmp
xchg
xchg
xchg
xlat
push
clc
mov
push
cmp
mov
iret
jbe
sub
ljmp
out
jmp
int
add
jno
inc
cs
mov
dec
dec
pop
and
mov
enter
seto
xchg
and
stos
add
push
or
mov
movsb
icebp
mov
add
xor
cmp
adc
out
inc
adc
jle
xchg
das
mov
pop
inc
cld
xchg
lahf
dec
dec
inc
xor
ss
mov
fs
stos
dec
adc
fnstsw
sbb
in
cmc
divb
add
add
xchg
jecxz
shr
imul
sub
fisttpl
ljmp
pop
cmp
mov
mov
or
outsl
jecxz
cli
mov
cmp
sbb
loope
pop
cmc
mov
mov
cmpsb
sub
in
out
and
cld
shrl
cmp
dec
int3
int3
fmul
fwait
or
mov
outsb
sbb
clc
fldcw
push
inc
mov
mov
cli
cwtl
aad
loopne
pop
mov
popf
icebp
dec
into
xchg
xchg
adc
das
sti
and
xor
subl
clc
cmp
jmp
daa
outsb
adc
add
inc
insl
mov
pop
inc
sbb
cld
xor
push
dec
lock
in
in
mov
test
adc
cli
add
push
inc
lcall
fimull
shll
std
sbb
adc
mov
mov
cmpsb
adcl
stc
add
jmp
out
ss
add
loope
sub
cmp
cmc
ret
stos
pop
inc
mov
mov
bound
push
jl
dec
mull
cmpsb
mov
xchg
cmp
push
subl
lcall
adc
mov
push
mov
pop
out
add
and
adc
pushf
cmp
cmp
frstor
gs
dec
dec
ret
scas
inc
adc
or
cli
int3
mov
adc
arpl
test
stc
cltd
bound
loope
icebp
xchg
lahf
out
faddl
fwait
add
rolb
lcall
push
pop
cmp
inc
imul
repz
cmp
push
jnp
jge
arpl
loop
mov
pop
sti
mov
leave
sub
or
mov
aam
xchg
or
test
add
sbb
nop
sarb
jg
shlb
ds
fimull
gs
int3
daa
movsb
stos
mov
pop
in
iret
aam
sub
mov
call
repz
icebp
mov
or
cmpsl
inc
mov
fisubrs
sbb
sub
shrb
xchg
mov
int3
or
add
lock
or
dec
inc
adc
mov
jp
mov
cmp
mov
stc
sbb
clc
out
cmp
cmp
jp
adc
and
js
cmp
jne
xorl
in
stc
xor
addl
es
inc
mov
mov
add
mov
xchg
xchg
loop
daa
bound
cmpsb
lds
adc
adc
sbb
xorl
icebp
dec
lret
inc
xchg
shl
es
or
mov
push
repnz
push
clc
pcmpeqd
add
mov
pop
ja
out
dec
xchg
sar
or
add
xchg
pusha
mov
js
scas
movsb
pop
push
sbb
popa
pop
jecxz
cmpsl
outsb
ret
popf
pop
sbb
in
call
dec
push
mov
jg
xor
test
and
movsb
pop
jl
aaa
rcll
adc
imul
sub
add
cmp
add
cmp
jecxz
push
imul
jne
js
mulb
in
mov
sarb
sti
cmpsb
outsl
sahf
adc
xchg
and
loopne
pop
cli
inc
dec
adc
mov
cld
js
mov
ss
pop
lret
push
xor
inc
repz
dec
push
daa
cltd
push
sub
adc
rcl
and
es
xor
popa
cmp
jns
and
pop
push
inc
jmp
and
test
stos
sbb
jne,pn
sti
in
shrl
sti
aam
jno
shr
push
jns
pop
and
in
scas
dec
bound
mov
mov
sbb
and
jmp
pop
mov
in
mov
je
cmp
jae
pusha
ss
inc
jge
and
leave
inc
xchg
jle
push
sub
xchg
cmp
inc
xlat
jno
xchg
cs
imul
mov
call
and
sub
loop
idivl
cmp
je
push
mov
lcall
popa
lcall
test
std
mov
or
cli
in
ret
and
hlt
arpl
mov
stos
out
mov
jne
xchg
jno
cmp
sbb
sub
push
rorb
pop
mov
inc
mov
push
mov
and
push
scas
js
iret
cld
movsl
pop
push
shll
sub
incl
icebp
pop
jne
xchg
in
shlb
fldt
jns
jge
orb
or
inc
ror
mov
adc
push
jl
ficoms
mov
andl
flds
sbb
pushf
in
stos
mov
push
xor
add
pop
and
mov
fisubs
and
lea
mov
and
xor
outsl
fdivrl
dec
sbb
fnstsw
mov
inc
mov
adc
arpl
dec
jb
add
lahf
push
adc
cmp
lods
pop
hlt
negb
adc
jmp
ljmp
loopne
sbb
mov
mov
int3
ljmp
mov
and
sub
punpckldq
mov
sub
jg
jnp
stos
jne
test
not
test
jmp
add
inc
cs
test
and
sub
inc
mov
fs
ds
mov
jge
andl
jnp
jecxz
imul
sub
in
sub
xchg
push
jp
lea
repnz
adc
push
aam
pop
pop
out
ret
aaa
in
cmpsb
addr16
mov
adc
or
adc
cli
scas
or
xor
push
fildl
lret
ret
out
idivl
fsubrl
mov
fisubs
push
cld
inc
filds
inc
sub
mov
mov
push
jbe
outsb
fucomip
jle
xchg
push
cwtl
hlt
adc
ficomps
inc
jo
xchg
push
inc
jbe
lock
cs
mov
mov
jns
iret
push
movswl
mov
outsl
mov
bound
jl
or
outsb
pop
fdivs
or
adc
fadds
xchg
sbb
fbld
mov
xchg
lock
dec
or
inc
xor
dec
push
sub
inc
cmp
add
in
in
xchg
jb
cwtl
xor
or
pushf
rcll
xchg
repnz
and
pop
fiaddl
mov
out
adc
jns
fdivrp
test
mov
add
mov
jne
pop
fsubl
push
mov
out
call
xchg
mov
inc
xlat
jne
stos
test
fwait
daa
or
pop
xor
lea
cmc
xor
and
add
adc
gs
insb
xor
mov
daa
or
mov
sub
outsb
xor
or
sbb
enter
aad
es
ja
inc
data16
out
mov
insl
cwtl
sub
sbb
push
sbb
jb
xchg
fldcw
mov
dec
insl
sbb
test
stc
cld
pusha
movsb
jmp
mov
and
mov
gs
mov
push
pop
mov
mov
sbb
ret
addr16
mov
mov
cs
fcoms
fs
lret
mov
in
jno
insb
out
mov
pop
inc
inc
push
insl
mov
jmp
adc
or
jp
mov
outsl
scas
mov
ffreep
ret
cld
and
jge
pop
jmp
push
stc
ja
xchg
cwtl
js
loope
xor
imul
fdivs
lock
mov
or
push
push
cwtl
out
xchg
xchg
sbb
push
xor
or
lods
rclb
add
or
xor
sub
imul
or
fcoml
adc
adc
jne
stc
add
subl
out
xchg
adc
push
jecxz
shrl
mov
ja
or
cmp
shlb
mov
push
push
inc
or
popf
push
sub
mov
sub
jb
sti
mov
sub
push
test
out
jmp
nop
push
adc
insb
jge
jbe
inc
in
ret
push
loope
fiadds
fstp
fmull
inc
and
jg
loop
dec
jne
mov
bound
dec
and
ficoml
inc
cs
das
xchg
ja
or
outsl
scas
cld
icebp
pop
sub
sbb
pop
xor
cmc
xorl
mov
outsl
das
mov
sahf
imul
sbb
dec
lret
jmp
adc
add
out
adc
mov
sub
cmp
out
ss
ret
das
mov
jne
mov
add
fdivrl
repnz
sub
mov
stc
mov
pop
popf
in
add
add
sti
mov
and
xchg
rcrl
push
sbb
sbb
je
xchg
mov
iret
lea
mov
push
cmpsb
comiss
loop
cmp
clc
jge
dec
mov
mov
arpl
push
and
fwait
push
or
mov
sub
mov
adc
dec
sub
shl
fdivrs
inc
inc
int
fistpl
sub
pop
and
or
and
iret
arpl
xchg
ljmp
xor
mull
test
jno
in
mov
and
leave
cwtl
cwtl
ss
or
sub
aaa
xor
cmp
mov
push
mulb
inc
jmp
ds
lcall
pop
cwtl
ret
rorl
popf
sbb
mov
lret
ror
scas
or
push
jg
cmpsl
idiv
adc
fnsave
out
test
aaa
lahf
cmp
xor
xor
pusha
divl
xor
fwait
add
movsb
mov
push
xchg
loope
pusha
inc
in
push
cmpsb
xchg
inc
adc
pop
loope
test
fstps
adc
cmpsl
cmpsl
cmpsb
outsl
fwait
inc
or
add
xor
arpl
lret
sbb
jbe
jle
pop
sbb
mov
adc
pop
sarb
dec
lret
and
jne
bound
sub
push
dec
add
jnp
cmpsl
jb
inc
je
pop
icebp
adc
pop
lds
xor
imul
mov
into
jnp
in
imul
inc
popa
and
sbb
push
mov
mov
mov
stos
test
add
mov
stos
mov
test
push
cmpsl
pop
lahf
and
mov
inc
scas
icebp
pop
xchg
jne
mulb
add
in
inc
cmp
inc
scas
cs
jbe
inc
push
jmp
push
ja
mov
xor
jmp
outsb
scas
das
push
jo
sub
jb
out
test
inc
js
xor
es
push
mov
jnp
push
pop
ret
sbb
mov
ret
bnd
ja
pop
lds
adc
and
sub
fwait
dec
and
sub
scas
or
fimull
inc
fsubl
add
mov
mov
test
or
inc
or
mov
pusha
hlt
dec
sub
cs
dec
scas
lret
int
cs
sub
lea
and
mov
int
cmp
jmp
aaa
add
sub
and
inc
insl
dec
inc
imul
ljmp
xlat
jnp
mov
push
cmp
movsb
xor
hlt
aaa
arpl
mov
cmpsl
and
mov
mov
pusha
roll
sub
pop
in
faddl
or
out
jae
jae
add
outsb
dec
inc
inc
pushf
pop
inc
dec
stos
mov
scas
inc
stos
sub
imul
mov
repnz
inc
lret
mov
jle
ljmp
iret
leave
and
repz
loopne
push
lahf
cmpsl
cmc
lods
and
lret
repnz
cmp
aaa
jnp
popf
dec
mov
fisubs
rcrl
xor
imul
and
sbb
mov
sahf
and
pushf
loop
and
jb
dec
jns
mov
and
imul
jmp
dec
jl
gs
bound
clc
data16
xor
mov
jne
gs
aad
jae
push
cmpl
sbb
xor
xor
pop
jl
pop
lahf
jae
pop
push
js
jbe
movsl
mov
ds
and
adc
sbb
or
jge
or
icebp
aaa
fisubrs
nop
ret
inc
mov
mov
cmc
orb
scas
sbb
loopne
push
aad
dec
hlt
push
mov
push
outsl
adc
xchg
sub
rcrl
mov
xor
push
cmp
popa
out
das
pop
faddl
bswap
dec
push
dec
cmpsb
outsl
sub
fs
pop
xchg
js
mov
mov
mul
push
cmp
sbb
add
ret
sub
mov
ljmp
or
mov
mov
cld
fcoms
subb
out
cmp
xchg
push
pop
sahf
jnp
dec
jge
fbstp
lahf
jo
or
xor
pand
aaa
loop
bound
dec
jae
lret
imul
or
pslld
outsl
ljmp
cmp
mov
inc
pminsw
sbb
outsl
cmp
nop
add
imul
in
out
imul
repz
mov
pop
int3
push
leave
iret
movb
ret
int
xchg
and
mov
adc
aam
mov
push
psrlw
pop
fs
pop
test
mov
cli
ret
mov
mov
gs
insb
movsl
mov
jno
mov
popf
pop
push
or
xchg
pop
outsl
cmpsb
mov
lcall
add
dec
jmp
sbb
xlat
loopne
mov
mov
ds
and
ret
add
xor
jl
int3
aad
or
clc
xchg
fistpl
xor
fldenv
mov
test
or
fst
stos
mov
into
jb
test
adc
cmp
orb
cmp
push
cld
push
fildl
mov
xor
pusha
xchg
xchg
add
popa
adc
push
mov
sbb
enter
adc
sub
push
cmp
sarl
aad
ret
cmpsb
jb
icebp
gs
popf
pusha
and
rcrb
sbb
cltd
xor
and
cmp
add
push
mov
arpl
mov
jge
testb
xor
xchg
shll
mov
xor
ja
ret
ds
xor
das
sarb
pop
nop
pop
sahf
and
nop
add
mov
fs
ret
nopl
xor
repnz
mov
mov
je
pusha
push
sub
out
sbb
cmp
mov
xor
xlat
xchg
mov
push
cld
jge
cltd
aam
jge
xlat
pop
jo
pop
bound
cmp
xchg
mov
mov
in
jmp
and
cwtl
pop
pop
adc
add
jecxz
lods
xchg
fucomi
mov
add
jecxz
push
mov
inc
push
pop
insl
add
loopne
pop
push
shl
sbb
dec
cmp
push
ss
and
adc
sbb
adc
lea
xor
mov
sbb
fwait
mov
movsl
mov
add
pop
sbb
adc
loope
and
int
sbb
not
add
ljmp
inc
dec
js
push
cmp
cmp
aaa
in
xorl
mov
push
out
and
shlb
push
lods
addr16
push
mov
add
xor
in
or
sbb
push
cwtl
in
mov
mov
add
popf
push
repz
sbb
mov
cmpsb
adc
jge
sarl
roll
fdivs
rcrb
ja
inc
sub
popa
mov
aad
ret
scas
and
loopne
lods
pop
xchg
adc
icebp
xor
mov
mov
lea
orl
inc
arpl
mov
out
lcall
lods
mov
scas
es
push
mov
in
add
push
insl
xchg
rcrl
push
nop
xchg
imul
jle
out
dec
lahf
push
add
inc
pop
pop
je
pop
mov
push
inc
daa
adc
add
pop
inc
pop
imul
imul
inc
jo
inc
lock
push
mov
mov
jl
ja
imul
je
mov
ja
icebp
lahf
popf
fcompl
enter
xchg
inc
and
mov
mov
cmp
in
imul
sbb
pop
cld
add
popa
flds
into
int
daa
pop
insl
push
or
cmp
icebp
fistps
sub
div
mov
dec
pop
mov
push
sbb
pop
shrl
add
rolb
test
mov
xchg
jb
adc
xor
clc
push
fsubrl
sub
xor
jnp
lods
test
mov
jns
lods
stc
loope
and
push
int
fs
dec
and
inc
leave
ficompl
lods
out
mov
jp
orb
stos
insl
out
sbb
cltd
push
enter
stos
es
sarb
lock
prefetcht0
xchg
jl
stos
int3
xor
test
mov
mov
inc
adc
cli
into
cmpl
mov
in
test
insb
cmp
arpl
outsb
xchg
add
mov
stc
push
inc
xchg
mov
out
dec
dec
dec
mov
push
xchg
push
pusha
inc
adc
pop
pop
dec
out
jle
mov
and
jo
cmpsl
std
xor
pop
das
test
mov
cwtl
test
inc
ficoms
ljmp
pop
cmpsl
push
add
test
add
clc
aam
cwtl
ds
enter
andl
in
rolb
ds
mov
cmp
sbb
sbb
popa
ret
std
sbb
jle
mov
lea
test
dec
sub
add
sahf
cmp
cmp
addr16
xor
scas
das
cmp
push
cmp
sub
sub
mov
mov
and
sub
sbb
dec
jp
sbb
out
sar
in
pop
popa
rcll
lret
test
dec
adc
lock
fs
imul
lods
int3
int
inc
loopne
or
xchg
xor
push
das
and
mov
imul
lahf
inc
loop
dec
xchg
aam
sub
cltd
push
cmp
xchg
or
or
cltd
stc
xlat
shl
movsb
fisttpl
int3
hlt
add
cmp
popf
mov
repnz
push
test
std
test
dec
cmp
movsb
sub
lcall
xor
fwait
xchg
mov
push
out
es
mov
cvtdq2ps
sub
cli
es
add
jnp
mov
add
fiadds
sahf
or
add
shll
inc
repnz
jno
inc
adc
pop
pop
mov
push
xor
aad
ljmp
mov
enter
or
out
not
add
xchg
mov
in
int3
mov
inc
add
icebp
mov
pushf
push
mov
adc
xor
pop
cli
mov
dec
cltd
aaa
mov
mov
inc
mov
iret
fsubl
or
sbb
pop
data16
test
dec
std
lods
popf
and
cld
mov
cmpsl
and
xor
sbb
mov
ds
rol
daa
mov
popa
std
add
psrlq
stc
cmpsl
fstpt
test
xchg
inc
xor
inc
jle
sbb
es
add
rorl
movsl
push
andb
sbb
and
mov
lea
pop
rcll
cs
lods
inc
enter
mov
push
test
push
and
xlat
mov
insl
pop
cmp
and
sti
movsl
add
sti
insb
fsubrp
js
mov
xchg
out
cmpsl
out
out
pop
pop
nop
lods
xchg
loopne
pop
imul
in
mov
mov
les
pop
pop
mov
dec
pop
sahf
stos
mov
mov
pop
test
push
cltd
js
fstps
stos
sti
mov
sbb
rcrl
pop
xorb
aam
int3
mov
ret
mov
out
pop
xor
flds
adc
pop
out
fwait
arpl
cmp
mov
insl
mov
cmpl
pop
and
ja
test
fsubp
lock
and
mov
repz
call
mov
popf
mov
popa
pop
mov
lods
loope
pushf
pusha
add
xorl
mov
test
pusha
push
and
adc
mov
push
mov
out
mov
dec
test
int3
fstp
xchg
mov
fisubs
sarl
gs
js
mov
add
imul
push
xchg
or
dec
or
inc
inc
adc
mov
rcrb
dec
std
aaa
lret
lds
jle
sbb
mov
and
out
mov
xor
lods
mov
dec
mov
shl
add
xlat
sub
and
jmp
outsl
or
mov
adc
jbe
mov
mov
inc
xchg
jge
clc
or
jns
xchg
loope
lret
push
sbb
jl
mov
call
call
mov
sbb
clc
dec
movsb
pop
and
pop
dec
rolb
push
or
lds
lcall
and
movsb
out
cs
js
mov
loop
sbb
mov
lock
lock
adc
pop
and
repnz
into
sbb
cltd
jns
lahf
pop
lds
sbb
xor
addr16
into
jle
js
enter
mov
pop
push
pop
jmp
push
push
jp
int
push
dec
push
cmp
or
data16
fs
sbb
fdivl
pushf
or
xor
xor
jns
mov
xchg
roll
in
add
push
lods
mov
lock
shr
push
lods
push
add
mov
les
cmp
lret
mov
ss
int3
in
push
scas
push
fnstcw
cmp
pop
sub
imull
stos
inc
out
sti
push
inc
adc
mov
dec
arpl
dec
xor
cmp
push
cmp
xor
mov
cltd
jno
adc
xchg
imul
ret
add
test
push
dec
hlt
popf
pop
mov
gs
leave
ss
or
lcall
xor
add
ljmp
sub
dec
imul
cmpb
sti
sub
xchg
add
std
int3
dec
adc
xchg
shlb
lock
jecxz
mov
loop
cmp
mov
loope
pop
jbe
sbb
incl
gs
dec
xchg
test
insl
lahf
test
mov
jns
jo
add
and
cld
adc
and
inc
in
ds
push
movsb
pusha
loopne
adc
js
inc
xchg
cmp
push
mov
or
push
add
mov
lock
cmp
fdivs
popa
mov
fistps
rcrb
sarl
push
sbb
shll
lahf
xchg
xchg
leave
sbb
fmuls
out
fistpll
rol
orl
and
jg
fs
loopne
lods
mov
mov
and
test
xchg
in
fsubrs
inc
inc
pop
addr16
pushf
jb
sbb
xchg
pushf
mov
mov
push
sub
cmp
clc
shrb
insl
xor
aam
sub
ss
ja
adc
mov
fcoml
shlb
and
nop
xor
push
xor
push
mov
push
jp
mov
pop
stos
aaa
aaa
fildl
mov
lods
mov
lds
testl
test
xor
sahf
rorl
pop
pop
mov
mov
stc
stc
cmp
mov
inc
jg
mov
push
outsl
shll
call
pusha
mulb
mov
inc
inc
sbbl
pop
popa
mov
out
cltd
loope
add
out
stos
das
xchg
aam
dec
lcall
ret
adc
lods
dec
inc
mov
mov
fdivrs
sbb
iret
cmp
lcall
add
sahf
mov
jge
mov
cmp
nop
mov
aad
int
fwait
repnz
lock
scas
std
sbb
adc
sub
mov
rcrl
lret
imul
adc
subl
inc
xchg
or
dec
inc
mov
popa
dec
pop
mov
pop
xchg
in
sbb
in
ret
testl
hlt
dec
in
dec
fadds
mov
xchg
mov
cmp
aam
mov
into
xor
fmuls
cmp
push
jp
cmp
dec
xchg
jmp
jbe
fidivs
fs
mov
sub
cmpsb
xchg
adc
adc
pop
pop
or
cmpsb
add
pop
ret
stos
sahf
xor
lds
and
orb
hlt
xor
lock
incb
es
ljmp
push
sub
pop
mov
in
imul
or
loop
movsb
xchg
jnp
push
jl
pop
mov
dec
jg
and
int
xor
jbe
cmp
insl
cmp
jl
jp
pop
scas
stos
outsb
jbe
dec
cmpsl
or
dec
enter
xchg
mov
mov
scas
jmp
add
pushf
mov
sbb
jge
sti
data16
push
add
mov
add
xchg
loopne
shrl
fmuls
ret
xor
mov
adc
pop
adc
mov
mov
xor
sbb
jnp
and
popf
pop
dec
xchg
fnstsw
adc
lcall
mov
xor
inc
imul
mov
pop
lret
xchg
dec
addb
or
enter
outsb
daa
push
add
and
mov
jns
dec
movsb
xchg
or
mov
push
daa
mov
outsb
dec
cmp
inc
xor
dec
imul
xor
rorb
xchg
cmp
pop
shl
push
mov
pusha
jecxz
cmp
ljmp
dec
clc
push
or
dec
fsub
cmc
enter
fs
int3
lcall
movsl
repz
movsb
ret
mov
je
or
jnp
push
sub
jp
xchg
mov
mov
ror
inc
add
mov
mov
push
inc
pusha
fcmovb
xchg
pop
imul
sub
cli
mov
dec
lods
lret
cmpsl
neg
mov
mov
nop
cmc
sbb
movsb
sahf
mov
sbb
stc
pop
xchg
sub
dec
push
test
pop
inc
mov
mov
fmuls
imul
je
cltd
in
adc
nop
cmp
pushf
shll
data16
je
or
sbb
adc
mov
or
test
adc
cs
lods
and
jnp
loop
dec
test
pop
mov
cmp
in
aaa
dec
and
rclb
mov
or
jl
and
mov
xchg
loope
add
into
mov
xchg
mov
xchg
jno
jge
jne
add
ffree
sti
push
dec
les
gs
jno
in
sub
mov
add
xchg
repz
inc
insb
dec
mov
arpl
or
vphaddubw
and
loopne
movsb
scas
in
push
test
sub
push
dec
divl
lds
mov
inc
inc
incb
sub
jnp
jmp
cmp
repz
jnp
int
mov
sub
aad
adc
dec
mov
dec
pop
loope
and
mov
push
sti
pop
out
jno
xchg
cmp
dec
int3
test
minps
das
sbb
xor
shr
test
outsl
in
movsb
jo
add
pcmpgtw
sub
sbb
xor
sbb
push
push
sahf
je
out
mov
fmulp
dec
ret
xchg
push
xchg
stc
xchg
mov
mov
jmp
sub
sub
test
lret
jp
xchg
mov
jb
adc
clc
mov
shll
dec
mov
xor
mov
daa
mov
or
adcb
pop
out
ds
dec
push
pop
inc
es
adc
repz
aas
scas
mov
mov
mov
fstp
mov
ret
cmc
pop
pop
fstpl
ret
in
in
lcall
sbb
roll
dec
dec
add
pop
out
daa
jo
pop
cmpsb
lock
dec
sbb
pop
ret
xchg
jecxz
pop
mov
fdivrl
fidivrs
sub
fwait
out
pop
roll
mov
add
rcrb
jnp
arpl
imul
jns
lock
ja
cmp
add
ret
push
jl
sti
adc
inc
inc
adc
arpl
sbb
out
or
bound
rol
cwtl
lock
mov
imul
push
fwait
repnz
fdivs
jns
push
icebp
fwait
inc
out
rcrl
adc
adc
cmc
mov
adc
pop
mov
cmp
xor
jl
mov
add
outsb
adc
bound
xchg
mov
adc
adc
pop
aad
decl
loope
out
out
popf
dec
dec
adc
cwtl
cmc
js
fsub
fld
sbbl
stos
xchg
xchg
cmpsl
fwait
loop
daa
outsl
adc
jb
lods
push
and
push
fiaddl
jp
js
je
add
cli
push
push
mov
jb
pop
mov
or
pop
lret
fistl
mov
jmp
fildll
and
dec
sbb
xchg
fcmove
imul
cmp
repnz
call
adc
in
fidivl
rcrl
sbb
movsl
xchg
mov
test
fidivrl
in
sub
push
push
rcl
inc
mov
and
loop
or
hlt
ss
inc
mov
sbb
or
out
js
subl
adc
push
add
aad
testl
xchg
int
dec
xchg
dec
fisttpll
push
xchg
cmc
xchg
xchg
or
sbb
and
jle
adc
mov
das
or
in
dec
jecxz
push
xchg
ficompl
repz
imull
sbb
cwtl
mov
pop
xor
dec
xor
cs
les
stos
add
lahf
mov
ljmp
mov
xchg
cmpsb
and
dec
in
pop
inc
in
andb
xor
faddl
dec
add
cltd
mov
cmova
jne
jg
mov
sub
loop
nop
shl
scas
dec
lds
jae
ret
scas
cwtl
mov
push
and
and
mov
in
sub
inc
shlb
scas
inc
or
pop
nop
pop
jp
cli
xchg
das
jg
push
sbb
push
sbb
and
xchg
mov
mov
or
pop
jno
jp
roll
dec
push
mov
sub
mov
sbb
sbbb
stc
cmp
add
jbe
mov
mov
dec
dec
mov
iret
push
or
test
xor
orb
push
sub
mov
int
popf
cs
mov
cli
pop
add
enter
mov
or
stos
jne
push
sub
cltd
pop
in
sbb
fldl
pop
aas
loop
xchg
pop
lret
test
sub
ja
repz
or
mov
dec
in
xor
add
jb
das
test
lods
jg
push
push
mov
sub
mov
icebp
sahf
shrl
lret
xchg
cmp
sbb
inc
stos
mov
daa
fstps
cmovl
in
mov
leave
and
pop
gs
out
scas
jecxz
rol
out
ljmp
pushl
lea
pop
icebp
mov
mov
aad
fld
jno
cwtl
jg
mov
mov
mov
dec
mov
int
movsb
iret
pop
scas
jb
jnp
sbb
jne
pop
mov
jp
loop
mov
sub
fstpl
enter
mov
sub
rolb
xor
pop
aad
and
icebp
std
dec
ljmp
lods
mov
push
shl
pop
popf
pop
and
mov
fwait
shr
jp
frstor
pusha
add
insl
adc
pop
int3
push
pop
lret
clc
sbb
and
pop
push
jno
push
and
sbb
push
push
pop
add
cmc
jl
call
cld
push
les
push
ja
mov
sub
push
dec
mov
mov
lahf
sub
je
shll
mov
out
decl
stos
or
addl
or
jmp
fs
mov
test
cmp
mov
jnp
push
pop
je
insb
subl
lret
rorl
frstor
into
insl
lahf
jecxz
dec
dec
pusha
shr
jmp
push
and
cwtl
mov
cmp
mov
jl
in
fiadds
mov
cwtl
xchg
mov
xor
dec
jne
addb
popf
leave
movsl
jae
mov
dec
imul
push
inc
sbb
out
mov
push
dec
and
dec
insb
neg
mov
jns
sahf
jg
shlb
addr16
scas
dec
push
cmp
lock
scas
cmc
push
mov
pop
and
mov
ret
push
cld
lahf
lock
shlb
aas
leave
push
adc
nop
lods
xchg
jge
pusha
xchg
inc
xchg
lret
and
cmp
or
mov
fsubrs
or
popf
mov
mov
ljmp
or
les
dec
cmp
loop
and
lods
test
inc
aam
nop
mov
bound
adc
dec
inc
daa
add
loop
fadd
insb
cmp
dec
and
movsl
mov
push
out
dec
sbb
lahf
in
sub
ja
ds
in
jl
or
xchg
sbb
mov
lods
mov
xor
or
gs
in
scas
loopne
test
lcall
out
push
jmp
mov
adc
push
mov
cs
les
sub
dec
adc
cmp
lahf
bound
inc
arpl
enter
jne
cli
call
fwait
daa
imul
push
inc
mov
gs
shlb
popf
xorl
addl
or
inc
inc
push
shrl
pop
out
icebp
pop
sub
movsb
pop
cmp
inc
test
sahf
mov
sub
add
mov
xchg
int
push
mov
pop
mov
xchg
scas
ljmp
das
popa
lock
inc
xchg
test
icebp
dec
ret
mov
fistpll
mov
cmpsb
in
popf
outsb
adc
nop
incl
adc
jno
jae
and
fs
es
decb
pop
jmp
lds
mov
jbe
mov
jge
in
repz
out
xchg
cmp
sbbl
sbb
imul
pop
cmpsl
aam
mov
jmp
icebp
sbb
roll
sub
aad
sub
aam
xchg
shll
sahf
inc
das
scas
push
mov
xchg
gs
je
stc
mov
sub
pop
shl
push
lea
fwait
popa
fs
push
sbb
outsl
dec
xchg
movsl
pusha
icebp
add
pop
mov
mov
out
cld
jg
std
stos
std
loope
mov
jmp
pop
stos
js
mov
push
fs
fisttpl
sti
fistps
sbb
fnstsw
fstp
dec
lods
shl
dec
fs
push
mov
cld
sub
xchg
rorb
mov
sbb
dec
out
adc
pop
mov
sti
push
ds
xor
xchg
es
inc
sub
pusha
rolb
mov
xor
dec
pop
or
xchg
jg
sub
pop
aam
mov
lock
std
outsb
xchg
xchg
add
dec
insb
sub
lret
jne
cltd
popa
jb
mov
add
scas
xchg
inc
mov
mov
cmpsl
outsl
sub
enter
in
pop
add
dec
test
inc
xchg
jnp
stos
or
jb
xor
inc
mov
push
cmp
lock
aam
sahf
leave
nop
xchg
popf
cmp
xchg
xchg
sub
mov
mov
cmpsl
stc
xchg
jl
out
std
jne
jb
iret
xlat
sbb
rcl
dec
dec
add
ret
or
lret
addb
lcall
xor
dec
lea
dec
call
inc
pop
inc
xor
or
mov
xor
scas
push
or
jnp
xchg
inc
sti
jae
mov
jl
stc
mov
dec
cwtl
lahf
out
shll
mov
jne
das
es
xchg
data16
mov
clc
push
add
mov
jg
push
nop
iret
ss
push
and
aas
mov
rorb
adc
shll
inc
push
sub
and
addr16
push
negl
adc
stos
cmp
push
mov
adc
test
aas
out
and
aam
and
sbb
jl
pop
sub
or
mov
pushl
subb
into
pop
mov
sub
sarl
xor
gs
mov
rcll
or
test
psubsb
adc
test
jp
es
fwait
cmp
dec
lret
pop
jmp
pop
addl
imul
push
aas
pop
sub
mov
and
and
in
inc
lret
cwtl
add
ja
mov
imul
lcall
dec
bound
lods
ss
pcmpgtw
cli
loope
sbb
movsl
call
jge
mov
outsb
mov
or
rcr
add
ret
jmp
mov
xor
js
inc
cwtl
pop
push
and
pusha
testb
lcall
movsl
notl
xorl
mov
adc
shll
add
mov
fldenv
add
xchg
or
add
jge
cld
cltd
imul
push
xchg
xor
in
orl
gs
lret
push
mov
dec
test
sbb
std
cmc
lret
cli
pop
pushf
xchg
int3
mov
jg
pop
jmp
dec
movsb
daa
or
bound
fwait
sbb
push
js
dec
testl
shlb
mov
add
cmp
cltd
enter
sti
or
insl
or
inc
nop
push
test
ret
jl
loope
pop
orb
arpl
outsb
rcll
icebp
mov
cmp
ret
or
cmc
or
sub
dec
repz
je
rcrl
cmc
fistpll
subw
das
push
xor
dec
lods
inc
pop
xor
push
fidivrl
rol
push
or
das
adc
or
inc
sarl
xchg
pop
rorb
xlat
rclb
ljmp
jo
dec
push
rcrl
jecxz
out
ljmp
mov
pshufw
ret
pop
insl
shl
jl
mov
dec
test
cwtl
mov
or
or
or
push
adc
mov
aad
mov
cmc
sbb
push
filds
cltd
mov
orb
cmp
and
and
dec
xor
rclb
adc
or
push
lahf
js
pop
fnstcw
adc
shrl
jge
pause
pop
pop
outsl
pusha
test
jmp
enter
pop
jb
mov
inc
xchg
sub
mov
adc
lods
and
aad
and
xlat
sbb
or
dec
popa
les
add
stc
cmpsb
push
loope
pusha
loope
pop
sbb
cmp
or
rol
je
es
cmp
jge
addb
sbb
je
add
fs
in
imul
push
pusha
pusha
inc
cmp
or
inc
rcrb
loope
decl
sbbb
push
scas
jbe
dec
sbb
in
cwtl
gs
scas
xchg
sub
jmp
fsub
test
mov
jp
arpl
test
sub
hlt
xchg
aad
mov
shrw
loopne
out
int3
inc
mov
addr16
adc
jmp
inc
pop
test
fisubrs
sbb
cmc
js
insl
test
lcall
cmp
dec
repz
fs
xchg
jno
scas
stos
and
filds
out
scas
cmp
mov
jo
pop
xor
cmpsb
daa
into
js
jl
lock
xchg
ss
fldl
xlat
leave
call
pusha
nop
xchg
loop
fsubrs
test
int3
rcll
pop
ds
push
xchg
cmc
outsb
andb
xor
jl
cli
fnop
pop
jae
mov
fcoms
jle
mov
or
scas
hlt
mov
mov
sub
add
xor
mov
sub
pop
xorb
xor
scas
adc
dec
nop
sub
cmp
sbbb
push
insb
fcmovb
add
ret
imul
andb
and
jns
sub
loope
push
lock
nop
dec
jnp
mov
movsl
ret
xchg
imul
dec
jno
cmp
scas
mov
lahf
push
in
pushl
or
xor
outsl
outsb
les
test
rorl
push
stos
lahf
cwtl
inc
shll
stos
std
pop
loopne
fstpl
mov
loope
pop
adc
out
movsb
sti
dec
mov
jecxz
sub
add
xor
jl
dec
fmull
xchg
jae
cwtl
push
lea
xchg
mov
leave
mov
mov
cli
aam
andl
jmp
orb
mov
push
out
mov
fldcw
mov
mov
ret
lds
fistpll
pop
xchg
xchg
shlb
mov
xorb
cld
or
jg
inc
jl
dec
add
jmp
lea
cli
lcall
pusha
cmp
out
sarl
sarb
lret
cmp
dec
lods
mov
test
xchg
pop
push
aas
out
icebp
paddb
pop
or
jae
cmp
sub
inc
leave
push
push
jns
and
fcomp
xchg
jg
mov
xor
mov
and
or
fcomps
xchg
jmp
mov
je
or
andb
pop
push
dec
das
into
popf
xchg
sahf
pop
sahf
jae
idivl
in
stos
add
cltd
fnsave
movsl
stos
ss
and
insb
imul
pusha
ds
out
mov
pushf
inc
movsb
xor
sahf
das
mov
xlat
mov
sub
dec
and
aam
pop
pop
sahf
adc
lock
test
pop
into
lahf
lods
lods
pop
mov
lds
out
sub
pop
jbe
std
std
pop
or
call
cmp
and
inc
iret
or
push
jp
add
adc
push
mov
repnz
jmp
aas
xadd
and
fisttpl
pop
movsl
push
pop
jmp
imul
add
and
jl
dec
inc
std
fwait
jecxz
mov
xor
int
rcll
and
shrb
jns
xor
jb
add
insl
adc
adc
int3
pop
mov
bound
cmp
and
movsb
lds
xor
push
pop
jno
push
xchg
mov
sbb
mov
test
or
ja
adc
push
mov
pusha
popf
mov
ja
sbb
jne
sbb
push
int3
sbb
dec
mov
push
and
loop
lcall
pusha
xchg
cltd
lods
cmp
jecxz
mov
shll
addr16
sahf
dec
xchg
jp
popa
sub
aas
push
lock
adc
pop
fildl
pop
out
add
iret
insb
dec
or
lret
lds
movsb
movsb
rcrl
pop
les
mov
or
outsl
enter
add
dec
in
inc
inc
push
fnstsw
jne
pop
mov
pop
data16
jmp
pop
hlt
cmpsb
sbb
jp
and
lret
idiv
mov
pop
scas
sbb
movsb
movsl
lods
cli
inc
mov
mov
insl
xchg
popf
jge
xlat
and
stos
subb
add
loope
cmp
xchg
dec
add
cmp
push
subb
ret
lcall
mov
cmp
ret
lahf
call
adc
push
mov
push
add
xchg
sub
xor
mov
and
lahf
loopne
int
xor
inc
or
stos
iret
pop
and
push
cmp
jmp
push
mov
jmp
push
sbb
sbb
add
addr16
outsb
jp
fwait
scas
insl
jmp
aas
sub
mov
in
stos
scas
mov
dec
arpl
adc
and
fisubrs
inc
xor
or
ret
adc
arpl
cli
divl
idivl
hlt
out
push
adc
pop
xor
clc
sbb
dec
fiaddl
into
les
les
iret
fst
mov
mov
xchg
jbe
mov
and
out
cmp
push
addr16
adc
cmpsl
inc
mov
add
fldl
fnsave
xchg
sbb
lret
andl
pop
popf
aam
sbb
ss
pop
jo
outsb
mov
repz
xchg
jmp
mov
push
inc
insb
mov
jbe
rclb
mov
xor
adc
addl
test
daa
jno
sub
cmc
dec
inc
cmpsl
cli
or
push
out
fldt
dec
mov
aaa
xchg
mov
subl
push
movsl
mov
popf
test
es
or
dec
nop
mov
jecxz
fstps
je
fdecstp
jnp
cmp
pushf
dec
lahf
pop
cmp
and
add
sub
jp
fsub
test
rcl
stos
aas
add
jnp
and
cli
clc
or
fs
xor
xor
inc
hlt
or
test
jl
in
xor
into
repnz
aas
mov
xchg
insb
fwait
adc
out
leave
or
sbb
movsb
adc
inc
mov
sub
xchg
rcll
pop
lock
sbb
lret
dec
or
shll
fs
cmp
mov
mov
scas
xchg
loopne
add
push
inc
fyl2x
outsl
stos
int
popf
jmp
fcmovbe
roll
add
fistl
sub
outsl
jl
movq
cmp
mov
adc
aas
int3
jbe
push
pop
js
jmp
test
cs
add
divl
leave
cmp
xchg
addl
push
mov
ret
fs
cmpsl
mov
gs
inc
shll
push
js
fldt
in
imul
jmp
data16
scas
nop
fbld
push
movb
ret
push
fbld
leave
in
shlb
addr16
jbe
rorl
outsl
insb
xor
xor
xor
clc
dec
sub
jmp
cmpsl
bound
mov
jne
arpl
mov
cli
and
jae
fldl
push
int
ja
testl
loop
mov
out
in
cltd
mov
ror
mov
ds
push
sbb
cwtl
push
out
rcr
cltd
mov
fcomps
adc
out
jb
fdivl
dec
lret
aad
push
scas
push
sub
add
scas
mov
jnp
loope
pop
std
mov
mov
scas
mov
inc
popf
outsb
test
push
mov
xchg
ss
jae
mov
int
sbb
inc
sub
cmpsb
loopne
cmp
push
xor
call
ja,pn
and
mov
dec
adc
push
or
pop
add
pop
adc
xchg
popa
leave
mov
add
pop
sbb
jp
cwtl
gs
fwait
fwait
in
xor
sbb
adc
insb
aaa
sub
out
sbb
mov
xor
jmp
out
test
les
or
fs
sub
jns
int
jb
mov
enter
cmp
in
xchg
ja
loope
test
pop
push
aaa
inc
pushf
shrl
inc
jp
out
fistpll
stos
xor
divb
les
inc
lahf
mov
inc
pop
popf
jns
push
scas
or
fisubrl
push
mov
movsb
aam
xor
add
inc
insb
fdivl
fistl
inc
and
rolb
mov
xchg
jge
or
adcb
pop
push
push
ret
and
push
jge
dec
and
inc
push
jae
mov
loope
mov
cmc
lds
enter
mov
lcall
pop
lock
pop
inc
lea
xchg
push
cmc
cmpl
pop
xor
xchg
mov
lea
or
mov
sbbl
outsl
les
lea
push
push
mov
in
or
cli
add
jo
test
dec
cwtl
jnp
xor
or
leave
dec
stc
iret
push
bound
bound
jnp
xchg
andl
dec
js
xor
jg
add
sub
dec
inc
or
insl
pop
sbb
lods
mov
cmc
mov
pop
jecxz
fwait
std
sbb
mov
movsl
or
enter
and
push
andl
add
and
fisubrs
loopne
mov
push
xchg
jmp
in
out
enter
mov
js
pop
sbb
mov
cmpsl
cmp
in
adc
cmp
imul
test
mov
pushf
cmpb
lock
pushf
into
jns
je
or
pop
cmp
fnstenv
jp
fsubl
movsb
ljmp
cmpsb
neg
add
aas
pop
jo
mov
sbb
mov
pop
push
mov
lods
call
in
mov
cmp
lea
or
scas
xchg
jmp
repnz
outsl
and
sub
sub
dec
push
std
lock
or
maskmovq
mull
cli
mov
jno
jg
sti
aas
jne
xchg
fldcw
cmp
pop
and
pop
sahf
add
rep
xor
cmp
ss
jbe
cmpsb
mov
ds
nop
iret
inc
xchg
rorl
dec
and
jne
mov
mov
push
pop
out
inc
cmpsl
push
cltd
int
push
pop
leave
inc
ret
out
sub
test
loop
jmp
cmp
push
test
insb
xchg
mov
mov
jns
xchg
test
or
push
test
je
iret
pop
fsubs
adc
or
lahf
dec
roll
test
xchg
ljmp
mov
xchg
fildl
mov
ja
pop
cmpsl
out
ds
adc
jg
fcmovnu
mov
call
shrl
arpl
bound
fimull
fsubrs
and
in
inc
push
lock
lret
pop
in
sub
xor
push
stos
pop
inc
sub
jne
xor
lret
pop
sub
loop
push
out
mov
sbb
mov
mov
rcll
adc
xorb
inc
push
mov
sti
and
out
push
adc
add
push
jo
xor
stos
push
rcrb
stos
xchg
sbb
push
orl
jmp
aad
and
incb
jmp
aad
bnd
mov
out
inc
mov
idivb
push
sub
or
stos
pop
rcrb
jns
lds
sahf
shrl
clc
outsb
pop
sbb
jne
mov
fcomps
inc
mov
xor
mov
in
dec
shrl
mov
inc
scas
add
push
cmp
mov
pop
mov
add
cmp
fs
xor
cmp
push
scas
popa
cmpsl
out
fdivs
push
cli
jecxz
cmp
pop
mov
adc
aad
xor
xchg
negl
in
fcmovnbe
sahf
mov
xchg
loopne
hlt
movsb
insb
jmp
push
movsl
lahf
xor
mov
incl
add
adc
sub
insl
push
jle
imul
dec
sar
mov
push
mov
in
addr16
xchg
jae
jnp
xchg
mov
enter
fs
dec
rorl
arpl
sbb
fs
scas
cwtl
rcrl
adc
and
xlat
xchg
or
pop
repz
dec
test
out
cli
adc
inc
hlt
mov
sahf
ret
out
lds
sub
nop
decl
out
push
pop
orl
lcall
mov
test
xchg
fstl
mov
addl
pop
std
jmp
and
jp
imul
dec
out
lea
sub
or
rorb
rcrb
loope
and
sahf
jne
test
out
or
push
inc
in
insb
xorb
ja
sbb
imulb
ret
push
xchg
pop
pushf
hlt
cmp
lea
push
push
mov
andl
clc
add
cmp
inc
bound
test
cmpsb
mov
inc
cmc
push
mov
push
jecxz
mov
mov
add
cli
repz
cli
mov
and
cmpsb
xchg
dec
jmp
cwtl
cmpsb
sbbl
sbb
mov
pop
js
add
sub
add
daa
out
pop
call
push
scas
shlb
push
pop
jecxz
or
lret
ljmp
clc
xor
jge
mov
insl
jmp
iret
scas
jmp
je
pmulhuw
jmp
outsl
sub
lret
mov
jae
or
pop
mov
inc
push
adc
inc
inc
std
inc
iret
push
or
sbb
dec
inc
movsl
repz
js
fucomip
mov
jae
push
mov
std
xchg
stos
std
xchg
xor
nop
lahf
fistps
or
jne
xor
loopne
push
jns
mov
mov
jecxz
pop
and
cmp
sti
sbb
lret
es
mov
cmp
ljmp
jae
cmp
sub
jnp
div
inc
cmpsl
push
fnstsw
loop
fxch
inc
decl
jbe
scas
mov
dec
mov
loopne
and
pop
dec
mov
aad
mov
xchg
adc
loope,pt
mov
mov
lods
xchg
fdiv
cltd
push
aaa
fs
and
dec
push
inc
insb
repz
loopne
dec
jg
addr16
xor
inc
or
gs
mov
xlat
cmp
orl
daa
lds
pop
lds
in
jns
andl
into
sti
gs
fndisi(8087
jae
dec
xor
push
mov
sub
cmp
imul
or
rorl
mov
sub
adc
iret
pop
mov
adc
mov
fisubrl
ret
cltd
jle
and
cmp
cmpl
or
test
ja
dec
mov
cmp
pop
push
mov
inc
mov
inc
scas
in
stc
fs
cmp
sub
or
dec
in
lds
inc
xor
push
hlt
stos
cmp
out
sti
sub
and
mov
adc
inc
lods
cwtl
jge
add
lea
lods
jp
add
cltd
outsl
fs
sub
mov
push
lcall
add
and
cld
aam
lods
ljmp
lea
test
lcall
mov
mov
repz
call
js
fisubl
sbb
xchg
leave
xchg
push
jmp
dec
lcall
les
mov
scas
xchg
iret
inc
scas
mov
in
movsl
fstpl
pop
into
jns
mov
add
sti
push
inc
loop
pop
jnp
push
nop
and
xchg
or
dec
mov
mov
aad
ret
repz
pop
sub
mov
sahf
aad
aas
hlt
mov
mov
cmp
popf
or
addr16
mov
jmp
mov
int3
cwtl
push
in
fwait
and
jo
jge
and
xchg
push
push
or
out
push
pop
jp
cmp
aam
sbb
mov
pop
inc
mov
push
sbb
jg
sbb
xlat
je
das
mov
popf
jmp
aad
sub
lret
push
scas
and
lods
sub
data16
fcmove
adc
je
fdiv
mov
lret
fldcw
jg
mov
in
xchg
imul
adc
push
mov
cmp
pop
lret
dec
cmpsl
das
rol
scas
adc
test
add
jle
mov
lret
mov
out
add
adc
inc
mov
test
jb
mov
xchg
mov
cmpsb
outsl
pop
arpl
pop
pushf
mov
test
sub
inc
or
lods
pop
or
mov
sti
shll
fbstp
push
test
lods
or
xchg
call
jae
jp
push
lods
mov
sti
and
sbb
or
xor
inc
mov
adc
cmpb
mov
pop
sub
fisttpll
scas
imul
cwtl
pop
jne
xor
scas
in
pop
icebp
ret
and
fmul
push
ficoms
jge
aas
add
lahf
scas
ret
mov
mov
jge
aad
mov
mov
test
dec
mov
popa
and
mov
lock
mov
xor
fwait
push
movl
and
daa
dec
sub
sub
int
into
dec
movsl
inc
enter
fdivrl
dec
lods
or
push
push
loop
fmull
out
push
in
in
lret
jne
sbb
dec
pop
test
stos
cld
jge
and
pop
push
mov
adc
popf
mov
add
jmp
dec
fcoms
mul
sub
les
repz
insb
or
cli
add
shlb
cs
icebp
int3
xor
add
jp
push
mov
aaa
aam
push
addl
xorb
ja
pusha
movl
and
jae
int3
push
cwtl
test
lods
sub
mov
add
movsl
fimuls
test
adc
push
cmp
pop
xor
fildl
and
lret
inc
dec
sub
cmp
push
cmp
pop
push
addb
jae
mov
popf
cmp
sub
js
mov
scas
out
xchg
add
in
dec
push
hlt
popf
or
les
lds
mov
clc
inc
imul
pop
add
in
xchg
xchg
xorb
into
inc
sar
fisttpll
dec
pop
mov
jbe
ret
out
subl
xor
pop
push
in
xor
roll
push
mov
add
call
add
daa
test
sbb
sub
push
lahf
jle,pt
fiaddl
mov
cli
mov
adc
int3
adc
push
inc
rcll
jnp
xchg
repz
inc
fwait
lret
cwtl
xchg
mov
mov
aam
dec
lds
xor
jecxz
jbe
js
fnsave
adc
mov
jmp
mov
cs
fdivrl
push
cwtl
js
sbb
push
inc
xchg
sti
enter
jbe
fbld
sbb
mov
jbe
imul
mov
pop
sub
das
xchg
fidivs
sub
mov
cld
push
lahf
fidivrs
cmp
cli
in
cltd
xchg
xchg
inc
lret
add
sub
icebp
sbb
sarl
jbe
cmpsl
mov
std
inc
mov
xchg
aas
sub
in
int3
shrl
push
vmaxps
jmp
mov
sbbb
inc
sbb
push
mov
test
xchg
icebp
gs
cmpsb
fisttpll
loope
ret
jo
imul
pop
jp
jecxz
mov
outsl
mov
inc
aaa
gs
inc
int
inc
std
cs
lock
sub
add
aam
mov
inc
add
shll
mov
push
ss
push
ds
sub
push
xlat
popa
mov
sbb
aad
sbbb
pusha
loope
mov
cld
test
ds
icebp
sub
lahf
movsl
mov
das
cmp
popf
xor
cld
xchg
cmp
test
pop
mov
inc
mov
sbb
push
cmpsb
dec
mov
push
mov
mov
xor
xchg
in
sub
or
pop
in
and
cli
push
push
test
test
mov
bound
ret
test
dec
mov
das
into
arpl
jns
sbb
pop
and
sub
test
inc
sub
lahf
rclb
mov
cmp
int
adc
fwait
mov
add
and
xchg
ljmp
sub
fildll
fdivp
aam
adc
mov
ret
mov
cmpsl
xchg
jns
sti
xchg
jge
sub
mov
or
aas
jmp
stc
xchg
cmp
add
inc
sarb
xchg
and
add
add
dec
jg
inc
cmp
ds
addb
mov
xor
test
pop
sub
dec
xchg
fildll
fsubs
sub
pop
jmp
mov
in
mov
sti
dec
sti
jne
fwait
and
or
or
xchg
cmp
add
es
sub
mov
cmp
stc
xchg
sbb
repnz
jl
andl
roll
popf
add
jns
jb
arpl
mov
nop
mov
iret
dec
ja
push
in
scas
mov
xchg
mov
subb
jne
xchg
xchg
mov
xor
pop
cmp
push
inc
sub
add
cmpl
adc
mov
pop
mov
xor
add
popa
icebp
iret
ljmp
jle
and
lret
in
mov
test
dec
pop
jl
jno
and
xchg
add
cmp
add
addb
pop
mov
cmp
loopne
cmp
mov
jl
sub
ds
mov
jl
xor
or
mov
jge,pt
push
out
aas
lahf
sub
ficoms
cmpsb
popf
ret
xchg
int
or
gs
mov
rcrl
mov
jmp
fdivp
flds
dec
test
inc
aad
popa
fpatan
sub
fucomip
add
arpl
xor
cmpsb
data16
pushf
cmpsl
push
adcl
ja
loop
sub
push
loop
xchg
mul
mov
adc
push
ss
insb
adc
scas
xchg
pop
mov
push
push
xchg
lcall
test
push
adc
pop
iret
cmp
jno
adc
cmpsl
pop
cmp
xor
sub
mov
insb
push
imul
jge
out
in
dec
cmp
outsb
aaa
adc
xchg
xchg
mov
xchg
pushf
rclb
inc
sahf
movsl
test
xchg
push
inc
jge
fs
lock
xor
dec
jnp
xor
push
mov
fnstcw
inc
push
leave
in
loope
or
cmp
add
call
stos
xor
je
std
ret
mov
scas
andl
xor
aas
mov
pop
push
leave
mov
cmp
sub
jg
cmpsl
aad
icebp
push
lock
out
ret
int3
js
mov
lea
in
addb
dec
je
mov
xchg
xor
fbstp
mov
stc
pop
and
dec
push
mov
insb
lds
ljmp
jns
or
xchg
fidivrs
jo
inc
sti
add
mov
inc
cmp
shr
jg
cmc
xchg
push
inc
mov
jnp
mov
or
daa
jns
in
sub
xor
js
enter
mov
add
xor
xchg
mov
loopne
scas
mov
pusha
cs
sub
or
in
inc
cmp
sbb
dec
mov
cs
dec
push
inc
mov
and
push
push
sub
cld
adc
mov
dec
int
xor
test
or
mov
test
push
jg
add
jle
adc
add
xlat
dec
mov
dec
rclb
inc
inc
fadds
sub
pop
neg
cmpsl
add
mov
mov
pop
lock
loope
repz
jp
cmc
arpl
in
dec
cs
mov
xor
vrcpss
imul
faddp
repnz
mov
js
int
aaa
cmp
in
loope
mov
rcll
mov
mov
sbb
xchg
arpl
xor
in
je
lret
inc
and
daa
mov
pop
push
or
jg
fisttpl
repnz
sbb
das
ret
ss
cmc
dec
pop
pop
out
dec
rcl
outsl
sbb
jmp
xor
andl
mov
in
fadds
lods
cmp
frstor
gs
aad
out
and
stos
scas
xchg
test
sub
mov
push
aam
addb
jle,pn
jbe
rcrl
mov
cmpl
sbb
pop
repz
jle
mov
or
fwait
or
mov
mov
ds
xor
unpcklps
mov
stc
mov
mov
jmp
divl
jo
movsl
rcr
xor
jno
stc
xchg
test
pop
pop
dec
mov
push
rcr
mov
shrl
mov
cmp
pop
scas
aas
sbb
mov
jg
ucomiss
dec
mov
repnz
or
inc
stos
inc
jg
out
xchg
mov
push
push
inc
adc
jno,pt
loopne
ret
insb
fdivrl
int3
mov
stc
sbb
jns
mov
loop
stos
jns
js
daa
or
pop
xor
inc
inc
push
int3
add
mov
es
mov
addr16
push
push
xor
stc
add
dec
cmp
mov
cmc
shrl
adc
out
dec
inc
mov
mov
add
push
jnp
adc
xor
test
in
pop
mov
and
sub
fisubs
leave
push
jecxz
je
jmp
mov
fdivl
lds
pop
mov
jae
pop
mov
sbb
repnz
out
adc
mov
push
adcb
inc
enter
mov
mov
ja
sub
push
cmc
popf
scas
pop
les
push
lods
mov
jae
test
sbb
add
subl
lcall
cmpsb
cmp
lret
int
insl
movsl
fmull
icebp
xchg
jo
cmp
jb
out
vmread
or
add
add
mov
cld
hlt
xchg
sar
mov
cmp
mov
out
std
pop
stc
cli
out
pop
dec
push
jns
inc
js
jns
fstpl
jmp
inc
lret
dec
movsl
pop
inc
mov
cli
jmp
sbb
mov
xlat
mov
sbb
mov
jbe
rclb
mov
cmp
mov
inc
int
cmp
pop
push
mov
push
into
xor
repnz
les
cmpsl
mov
rcrl
jbe
stos
fs
bound
push
dec
cmp
push
or
mov
adc
pop
fmulp
xchg
sub
aaa
sub
jb
adc
lea
lcall
xor
push
inc
hlt
loopne
sbb
sbb
pop
cmp
cmpsb
and
push
adc
xchg
in
pop
or
xor
cmp
xchg
cld
fldenv
mov
sub
sti
xchg
out
push
or
xor
mov
test
jl
pushf
insb
push
xor
mov
and
push
cmp
xor
xlat
push
test
aas
add
push
sbbl
fcmovu
mov
or
xchg
enter
test
xor
mov
aam
fs
dec
and
dec
test
pop
testl
dec
sub
xchg
cmp
test
inc
push
jae
push
pop
out
or
call
dec
incb
push
jmp
mov
std
lret
addl
jb
nop
or
in
testl
push
sub
xlat
mov
mov
inc
iret
pop
int3
test
sub
insb
xlat
scas
push
mov
and
jnp
ja
dec
ficoml
popl
loop
jmp
test
push
repz
std
mov
outsb
cmpb
sti
fmull
lods
jl
adc
enter
pusha
loope
pop
adc
pop
test
jbe
push
dec
bound
jo
dec
ss
pop
mov
mov
xchg
xchg
je
and
loop
roll
fistl
jmp
sbb
stc
mov
inc
pop
test
in
push
lret
ljmp
xchg
xor
lcall
mov
popf
test
xchg
push
mov
ja
not
jle
pop
insb
stc
mov
into
cltd
lcall
adc
inc
dec
ds
adc
orl
mov
fdivs
cwtl
ficompl
ret
push
pop
pop
repz
pop
push
pop
stos
mov
xchg
stc
push
sub
fsubr
mov
jle
clc
popf
loopne
cmpsl
mov
xchg
data16
sub
fs
adc
and
fcomps
push
push
and
rcll
je
data16
rcrl
adc
jno
mov
or
adc
aaa
inc
test
cli
pusha
mov
dec
pop
add
sti
cwtl
inc
mov
cmpsl
imul
or
xchg
adc
stos
pop
ss
xlat
shl
ja
icebp
sbb
movsl
fsubrs
pushf
sub
ja
xchg
xchg
jle
adc
adc
add
mov
pushf
xor
sarb
sub
daa
scas
jns
fdivl
dec
jp
enter
cmp
xchg
mov
out
sti
lret
mov
test
sarb
xchg
jmp
shll
push
roll
js
xchg
xor
ss
pop
push
mov
in
mov
into
in
xor
cmp
jmp
jo
call
dec
pop
data16
dec
inc
orl
int
xchg
add
cmpsb
shll
popl
loopne
dec
pop
add
sbb
dec
xchg
into
sbb
aad
xor
popf
or
jmp
jg
xor
push
js
aas
or
ds
cmp
fisubrs
push
cli
movsl
ljmp
cmp
mov
out
in
jnp
mov
mov
xorl
add
push
xchg
lahf
and
aaa
and
jns
cmpb
xor
mov
sub
adc
sub
les
aad
dec
mov
adc
dec
es
in
push
adc
pop
lock
popa
push
mov
hlt
call
cmpl
mov
xchg
cmp
out
in
mov
jge
pop
je
or
icebp
test
inc
imulb
push
dec
sub
adc
in
movsb
in
incb
imul
in
in
cmp
out
outsb
xor
addb
insw
fwait
cmpb
cs
movsb
xor
and
sarb
and
jmp
fdivrl
xchg
pop
sub
push
xchg
ss
or
movhps
pop
pop
fcom
or
jle
jle
pop
and
dec
inc
stc
iret
insl
xchg
push
jecxz
es
les
js
outsl
push
fs
rorl
inc
outsb
imul
sbb
stos
cmp
lods
push
sahf
popf
fwait
scas
add
shll
decb
imul
pop
mov
jno
sub
sahf
loop
xlat
aaa
popf
mov
push
shrb
notl
jno
fidivrl
rcl
cmp
sbb
lods
pop
jge
inc
sub
outsl
xchg
in
sbb
inc
lods
xchg
sti
xlat
in
out
je
jmp
xor
imulb
xchg
push
jge
test
outsb
mov
mov
mov
je
shll
sbb
mov
mov
and
push
ss
movsb
lret
mov
jle
cmp
adc
pop
addr16
fsubrp
jl
inc
sbb
mov
insl
jne,pt
mov
cmc
movsl
or
add
out
add
fidivs
sub
test
leave
mov
stos
cmpl
cld
sbb
test
hlt
push
out
ret
les
out
lret
call
je
pop
xchg
ret
cmp
adc
addl
push
adc
jb
mov
mov
mov
neg
xor
cmp
ljmp
sahf
mov
jnp
cwtl
test
stos
mov
out
pop
sbb
scas
mov
mov
cld
push
cmpb
jb
fs
pop
scas
jno
andnps
push
and
test
lock
mov
test
into
push
mov
lds
mov
popa
lret
or
stos
cmc
cmp
mov
loopne
or
lods
arpl
imul
fmulp
ljmp
pop
add
pop
sub
jecxz
iret
mov
in
out
popf
aad
ja
mov
je
gs
mov
test
imul
loop
cld
mov
xchg
mov
or
cld
mov
jp
mov
xchg
cmp
push
loope
ret
daa
andl
push
scas
fxam
aas
inc
arpl
ja
scas
mov
dec
das
pop
stos
mov
out
fwait
jle
rcrl
pop
dec
int3
xchg
add
ljmp
rolb
loope
lds
dec
je
call
jl
fbld
lods
xchg
mov
pop
xchg
mov
jbe
xchg
jecxz
arpl
fdiv
movsb
test
jecxz
fbld
mov
fsubrs
push
les
leave
mov
jmp
cmc
cmp
shlb
int
into
sahf
das
mov
mov
pop
rolb
in
jns
add
pop
push
sarb
call
sbb
xor
es
pmulhw
fisttps
add
in
mov
mov
ds
test
insb
gs
shll
pop
push
sbb
ds
inc
sbb
scas
repnz
mov
jno
add
add
adc
push
push
and
dec
loope
cli
add
shl
mov
stos
xor
jnp
or
ficompl
enter
aaa
inc
sub
mov
loopne
sti
loop
mov
mov
test
xlat
xchg
movsb
sub
add
int3
stos
xchg
xchg
lods
or
cmp
dec
fisubs
inc
pop
mov
inc
pop
xor
pop
es
sbb
mov
add
sub
cmp
pushf
mov
pop
call
mov
pop
out
cs
ret
cmc
and
xor
inc
cmc
and
popf
and
cmp
jb
and
jmp
add
clc
pop
xchg
xchg
xor
and
mov
adc
add
insb
cmc
xchg
ret
adc
test
ljmp
fwait
lea
xchg
mov
inc
bnd
xchg
adc
outsl
cld
fiadds
ss
mov
jl
out
les
sub
call
sbb
mov
push
jmp
movswl
mov
sub
out
cld
push
aaa
jno
xchg
push
push
inc
xchg
in
or
inc
hlt
sub
cmpsl
mov
das
push
mov
push
mov
or
cltd
pop
sarb
push
inc
stos
sbb
mov
mov
jl
add
cmp
imul
scas
scas
js
push
addr16
imull
xchg
retw
int
jns
pusha
mov
sbb
push
and
in
add
rorl
inc
jp
push
imul
imul
daa
bound
in
sarb
outsb
mov
mov
push
adc
in
enterw
aad
push
mov
bound
mov
adc
stos
cli
pop
and
dec
sar
sub
inc
lret
test
cld
cmpsb
xorl
mov
fs
pop
sbb
xor
mov
push
xor
xchg
int
rclb
int
and
push
add
test
adc
imul
mov
fwait
push
mov
sub
fnstcw
popa
cmp
cmpsb
push
push
mov
mulb
mov
pop
pop
insl
xchg
xor
hlt
and
pop
jle
pop
loopne
add
aad
or
arpl
push
xchg
push
les
pop
sbb
roll
jge
or
adc
sbb
gs
aad
mov
icebp
mov
stos
int
xchg
out
shlb
push
add
dec
or
push
cld
push
mov
cmp
cmp
out
and
ljmp
inc
dec
shll
mulb
xchg
aaa
lea
lods
mov
fsubrs
inc
adc
lret
dec
push
imul
lret
sbb
popf
addr16
dec
adc
lods
mov
movsl
mov
dec
fucomi
mov
xchg
push
cmpsl
cmp
mov
cs
add
jno
xchg
jb
push
push
pop
push
out
or
xchg
sbb
shll
es
loopne
in
mov
push
icebp
shrl
bswap
fnclex
mov
pop
stos
xchg
aas
js
pop
std
jns
sub
call
xorl
push
and
out
pop
enter
xchg
rcl
lds
movsb
scas
jo
adc
add
in
sbb
xchg
addr16
mov
ret
cltd
clc
out
add
mov
push
cmpsl
notl
hlt
or
js
lcall
push
add
pop
gs
dec
push
test
sbb
pop
cmp
cmpsb
scas
pop
jae
scas
inc
jae
mov
and
adc
or
lret
ror
cmp
add
jp
inc
pop
dec
aad
out
repnz
cmp
ret
loop
mov
idivb
test
shrb
icebp
movsb
idivb
daa
lahf
lret
jmp
imul
mov
inc
mov
ds
shrb
in
stos
xor
mov
or
sub
jl
mov
inc
idivb
gs
out
scas
inc
pop
ret
call
cmpsb
sub
jbe
gs
fistps
xchg
fsubs
js
push
sbb
mov
gs
cmp
xchg
or
fwait
jl
imul
cs
mov
and
pop
insb
sbb
into
pop
mov
xchg
cmp
fisubs
cmp
push
imul
int3
lock
dec
pop
subl
or
dec
cwtl
es
cmpsl
mov
cmp
jae
xchg
stc
sub
and
cmp
movsb
sarb
lds
outsl
std
mov
xchg
fstpt
lds
cld
dec
inc
imul
dec
ljmp
push
push
fisubl
je
lods
ret
scas
lods
lea
daa
xor
jge
add
into
push
pop
pusha
cmp
in
push
aad
shlb
cmpsl
bound
or
xor
add
pop
insl
testb
sbb
std
sbb
lock
cmp
in
fdivrs
or
bound
inc
ja
dec
add
in
mov
mov
leave
mov
ret
mov
loope
adc
jae
dec
xchg
add
push
push
inc
add
mov
clc
gs
std
pop
push
pusha
sub
outsl
push
push
fwait
jns,pn
imull
adc
cltd
sub
sbb
push
jbe
test
negl
mov
scas
ds
xchg
test
movsl
lcall
jmp
mov
xchg
aas
aaa
out
inc
fisubrs
jnp
and
sti
sub
cmpsl
sub
cltd
pushf
adc
lcall
mov
jle
aam
sbb
test
or
mov
lds
xchg
mov
push
pushf
cmp
sbb
aas
mov
inc
dec
jno
movsb
orl
loopne
xchg
repz
cltd
inc
inc
pop
enter
ljmp
test
pop
das
mov
push
jns
dec
imul
iret
andb
and
flds
lods
mov
movsl
loop
sub
cs
adc
imul
lret
xor
jnp
pusha
aas
hlt
mov
stos
and
js
ret
xchg
gs
aaa
jg
xor
les
jnp
inc
pop
aad
fs
out
fs
cmp
test
les
mov
mov
push
mov
xorl
test
lods
imull
or
mov
insb
das
ljmp
fnstenv
lock
xchg
inc
mov
sub
sub
sahf
loop
out
sub
mull
xchg
adcb
xchg
das
test
lahf
inc
out
icebp
cltd
dec
insb
pop
add
int
insb
xor
out
add
lcall
mov
mulb
cmp
dec
sbb
sbb
ficoml
mov
xchg
sub
pop
or
mov
jne
inc
dec
xchg
cmpsl
test
sarl
inc
int3
add
mov
push
fsubl
jg
cmp
adc
mov
cmpsb
insb
xchg
fildl
add
addl
pusha
jbe
jno
arpl
pop
loope
fistpl
xor
cs
mov
mov
sti
xchg
mov
adc
mov
mov
stos
shrl
pop
out
ds
jecxz
sahf
mov
mov
or
mov
repnz
push
dec
fidivrs
lret
lcall
jo
dec
pop
push
dec
and
outsb
int
sbb
repnz
fdivs
dec
add
add
in
nop
jae
enter
outsb
ret
pop
sub
stc
mov
cs
mov
cli
mov
data16
push
call
out
sbb
xor
push
in
sti
mov
lea
cmp
mov
lods
stos
lcall
mov
cmp
sub
bnd
inc
fcompl
popf
adc
icebp
out
push
fimull
adc
mov
mov
mov
mov
je
adc
dec
pop
fistps
mov
stc
mov
lods
mov
test
shl
push
loop
ret
ret
pop
xor
jne
xchg
add
mov
mov
mov
xlat
cmp
ljmp
cld
jge
push
dec
imull
cli
std
in
int3
xchg
mov
jne
dec
cli
fld
sub
mov
loopne
dec
in
jne
sbb
ljmp
push
dec
sbb
and
loope
hlt
dec
sbb
sarb
jb
out
inc
lret
shll
rclb
or
lahf
mov
dec
jg
push
mov
jl
pop
dec
mov
mov
es
mov
mov
jge
lock
neg
mov
outsl
filds
xorl
push
sbb
inc
mov
xchg
stos
jbe
sub
sub
insb
cwtl
dec
lea
gs
shlb
into
ja
fs
mov
mov
ds
sbb
dec
mov
cld
mov
aas
cmc
adc
mov
test
lret
pop
inc
xchg
cmp
mov
adc
xchg
xor
in
mov
xchg
sahf
lea
mov
insl
stos
stos
mov
jbe
je
jnp
sbb
leave
adc
enter
pop
hlt
cmp
out
sub
imul
mov
repnz
imul
adc
mov
xchg
movaps
into
and
int3
orb
xchg
dec
ficompl
les
and
push
push
lret
xchg
xchg
xchg
mov
flds
in
push
inc
stos
xor
fsubrl
sbbb
ret
clc
into
jl
push
mov
inc
add
les
and
dec
xchg
arpl
sti
pop
lds
aad
cmc
es
dec
mov
cmc
test
js
je
xchg
pop
adc
xchg
sbb
loop
jae
imul
dec
lret
fwait
xor
add
shl
scas
jmp
dec
aaa
ret
in
mulb
nop
insl
sbb
lds
and
out
out
pop
mov
and
inc
sub
jecxz
test
inc
loope
test
pop
lods
scas
inc
outsb
pop
push
and
xor
roll
out
in
cmp
mov
push
jle
daa
jo
leave
je
in
std
ss
xor
ja
xchg
add
adc
ja
js
daa
enter
inc
mov
sub
stos
jb
fcoml
test
xor
shrb
mov
pop
inc
out
mov
push
adc
test
mov
jmp
mov
icebp
cmp
jb
push
push
flds
pop
insl
in
fwait
scas
movb
add
sbb
mov
mov
pushf
jl
fcoml
in
subps
lret
cli
andb
mov
add
fs
aam
psrlq
mov
negl
xchg
test
push
xor
sub
mov
insb
shrb
push
mov
mov
mov
cmp
mov
loop
jno
call
inc
inc
dec
enter
mov
inc
pop
jle
push
pushf
jae
or
in
lods
std
pop
add
dec
cmp
cld
dec
inc
popa
lods
mov
mov
jle
popa
xchg
out
int
dec
std
loop
push
adc
imul
push
clc
ljmp
incb
mov
outsb
movsb
sbb
inc
dec
inc
cltd
hlt
push
loopne
dec
pop
xor
shlb
dec
jbe
cltd
lcall
stos
ljmp
add
add
aas
mov
pop
sti
lahf
dec
adc
repz
adc
test
popa
inc
ja
xor
pop
lret
sbb
and
iret
push
inc
jns
addb
xor
stc
sub
dec
xchg
ljmp
fcompl
cmpsl
iret
cs
adc
adc
lahf
push
repnz
cmpb
pop
ja
xor
fisubs
push
cmp
mov
cmpsl
mov
jb
in
fbstp
cwtl
sti
or
pop
aas
mov
and
mov
jns
jge
sbb
jg
xchg
xchg
inc
fsubl
xchg
inc
mov
hlt
stos
lret
fldenv
addr16
add
test
mov
icebp
movsb
sahf
aam
push
push
jecxz
mov
pusha
addr16
and
inc
bound
dec
fisubrl
lods
daa
gs
cmp
jbe
cmpsb
inc
mov
jecxz
xchg
dec
movsl
xchg
jno
aas
ret
inc
sbb
mov
pop
xor
gs
data16
lds
orb
mov
cmc
test
out
loope
mov
and
push
jne
clc
adc
or
adc
mov
lret
mov
js
es
xchg
push
repnz
pop
mov
int3
xchg
int
pop
in
in
dec
je
or
rcll
cmp
or
subl
cmp
jg
push
arpl
xor
not
movsb
ss
cmp
jo
call
out
les
dec
mov
inc
pop
jne
or
xchg
bnd
sbb
inc
sbb
pop
gs
popf
jg
outsb
and
scas
das
and
loop
aas
lcall
adc
test
cmp
fidivrl
xorl
popa
pop
dec
hlt
sbb
jmp
pop
pop
sbb
jmp
loope
lret
js
in
fsin
jge
icebp
into
aad
pop
inc
inc
aad
jnp
repz
jb
test
cmpsb
fstpt
add
cltd
jecxz
xchg
jnp
jl
and
out
jo
rcrb
sub
sbb
push
arpl
sbb
mov
pop
mov
test
cld
sub
mov
jb
gs
pop
dec
mov
adc
es
inc
cltd
or
imul
push
mov
cmp
iret
pop
addb
adc
mov
fwait
xlat
push
sbbl
jge
mov
je
aaa
mov
ja
inc
xor
cmpb
mov
xor
mov
lods
mov
push
test
fdiv
and
push
aam
pusha
arpl
imul
push
jl
lret
dec
jnp
pusha
jg
sbb
cmp
mov
adc
mov
sub
sub
psubq
add
test
jne
sub
jns
xor
lret
xchg
out
mov
aam
fstps
cmpsl
cs
push
mov
xor
xor
ficomps
fisttps
je
insl
and
loopne
into
mov
sbbb
sbb
and
pop
outsb
push
adc
insl
sub
mov
pop
aaa
jo
mov
jecxz
pushf
jnp
pop
test
add
out
jns
pushf
mov
inc
push
arpl
inc
pop
mov
mov
xchg
std
shl
fdivs
rolb
mov
jo
mov
mov
out
icebp
add
imul
or
dec
popa
or
cwtl
fucomi
inc
in
push
jle
jo
fstl
addr16
pop
inc
sbb
push
in
fbld
pop
enter
mov
repz
dec
ret
mov
mov
insl
ljmp
popf
dec
jmp
jb
sub
fidivs
xlat
mov
ja
adc
inc
jp
cmp
int3
loopne
mov
movsb
mov
fadd
push
pop
pop
lret
loop
or
idivb
ss
jl
je
add
mov
out
nop
fists
pusha
adc
and
xor
fdivrs
push
and
fsubl
andl
adc
mov
dec
loopne
mov
sub
imul
arpl
adc
ljmp
push
xchg
mov
call
cli
xlat
pop
jb
in
clc
ficoms
adc
cmpsb
imul
cmpsb
ret
shrl
enter
int
in
push
dec
push
add
cmp
mov
rcrl
lcall
stc
into
sbb
jle
fldln2
pminsw
sub
push
sahf
stc
jns
dec
push
mov
push
cmp
lret
pop
mov
ss
dec
in
mov
sbb
jmp
mov
cmpsl
js
adcl
test
sub
jae
add
scas
xchg
mov
inc
cmp
or
ror
push
movsl
addr16
cvttps2pi
xchg
andb
dec
sbb
cltd
mov
imulb
pop
andb
arpl
jb
mov
add
push
mov
stc
adc
sub
xchg
movsl
movsl
jnp
pop
inc
xchg
in
lods
mov
inc
lahf
xorl
jbe
neg
sub
jb
pop
sbb
add
movsb
test
ds
lret
jle
insb
cmp
pushf
dec
cmc
hlt
test
dec
mov
pop
js
fnstsw
in
sbb
lds
lret
pop
sub
lahf
push
clc
and
sbb
daa
push
lret
and
orb
inc
jge
fcomi
inc
push
popf
xchg
std
xor
xchg
dec
movsb
movb
test
inc
ret
stc
ss
mov
ret
lds
push
adc
push
and
jmp
fstpl
sbb
pop
cld
jmp
xchg
enter
mov
and
ljmp
scas
je
stos
cs
mov
ljmpw
decl
ds
dec
test
int3
jp
in
mov
das
addr16
popf
mov
adc
pop
or
in
mov
jo
cmp
das
mov
lahf
inc
xchg
insl
pop
cmp
fstp
mov
adc
psubw
pop
pop
and
dec
cmp
mov
push
cli
or
push
jbe
mov
and
repz
xlat
jns
scas
out
push
add
mov
xor
fdivrl
or
dec
lret
or
and
cmpsl
std
das
rolb
ds
in
mov
pop
outsb
orb
popa
push
mov
jne
dec
lock
cmpsl
adc
movsb
push
jle
mov
jo
test
lods
scas
xchg
jl
out
xor
push
pop
outsl
cltd
js
cmp
mov
xchg
cmpsl
outsb
jb
sbb
lock
mov
mov
aad
mov
sahf
insl
xor
stos
pop
rclb
ss
scas
xchg
xchg
sbb
cs
and
mov
mov
movsb
inc
jl
xchg
out
jne
mov
adc
icebp
jmp
in
sub
or
sbb
stc
pop
xor
movsb
sbb
sub
fmul
fs
mov
xor
cli
sbb
sti
call
daa
fs
rcrl
aas
std
cmpsb
mov
sub
push
inc
xor
or
dec
adc
cs
outsb
xor
cmpsl
push
data16
adc
mov
out
sti
sub
pusha
icebp
jb
mov
out
cmp
inc
addr16
cmp
pop
push
inc
sub
movb
mov
cmp
cli
outsl
std
pop
mov
pop
cmp
mov
into
cltd
fdivr
push
push
out
adc
popl
pushf
xorl
outsb
pop
sub
shl
int
sbb
rolb
mov
mov
int
aam
fs
and
call
cmpb
and
cli
or
notl
int3
sbb
jg
dec
ljmp
nop
xor
push
xchg
sbb
imul
inc
data16
cmc
mov
out
insb
ret
movsb
add
ret
aam
xchg
xor
inc
das
push
imull
lea
sub
jb
test
push
fs
sbb
popa
push
push
xchg
push
mov
push
pop
jge
xchg
sbb
xorl
loope
lret
mov
adc
jmp
test
mov
stos
sbb
push
out
hlt
fildl
inc
lock
jo
popa
hlt
mov
sub
shlb
jno
in
push
lods
or
int3
add
jo
sbb
repnz
sbb
out
mov
test
push
sub
rorl
cli
pop
into
in
movsl
shl
jp
setge
cmp
or
aaa
cmp
push
jl
loopne
pop
ret
hlt
add
sbb
sbb
aaa
push
push
icebp
add
fucomi
ret
int
jo
ret
jb
xor
repnz
jg
incl
add
pushf
push
and
push
xor
fistpl
and
adc
mov
jns
jg
inc
inc
sbbb
inc
mov
push
jmp
in
xchg
push
out
and
inc
aad
pop
pop
out
xchg
add
out
cmc
jmp
pop
call
mov
aam
sbb
cmpsb
mov
in
and
in
sub
ds
mov
test
insb
mov
pop
sub
pop
and
inc
xchg
dec
aaa
jl
mov
lds
sbb
loop
and
cld
scas
push
sub
lret
lret
cs
aad
mov
repnz
pavgb
mov
rcrb
sarl
xor
ljmp
ret
cld
ret
cltd
stos
aam
mov
sub
jmp
xchg
pop
push
ret
mov
xchg
fnsave
cmpsb
imul
adc
pop
jno
imul
inc
sbb
clc
stos
std
cld
shlb
mov
mov
mov
das
or
lds
mov
out
xor
lods
adc
xlat
fsubrs
xor
cmp
jmp
and
mov
sub
mov
or
in
xor
mov
lods
call
addr16
and
aas
ror
lods
dec
mov
mov
pop
and
aaa
sub
mov
pop
mov
aas
pop
xchg
imul
mov
shlb
ljmp
lock
mov
in
inc
stos
int
leave
sbb
dec
dec
mov
fwait
sbb
jae
jb
frstor
mov
jmp
inc
xchg
shll
xorb
fidivl
mov
pushf
xor
lods
sbbl
jmp
push
in
xor
xchg
inc
mov
mov
sub
mov
es
leave
push
ja
andb
mov
and
push
xchg
test
jnp
in
les
mov
sub
pop
js
pop
imul
test
jmp
pop
dec
in
cmpsb
sarb
pop
sbb
push
cmpsb
xlat
xorl
mov
popf
addb
shll
push
push
mov
mov
repz
xor
xor
xor
inc
xchg
mov
jo
dec
in
dec
mov
push
push
test
bswap
dec
int
and
lea
lock
loope
enter
les
sbb
cwtl
mov
push
pusha
ds
mov
mov
das
mulb
or
pushf
mov
ds
mov
xor
dec
jnp
loope
cmp
and
aad
fstl
dec
cmpl
xchg
fmuls
xor
dec
scas
outsl
ss
stos
int3
pop
sahf
pop
mov
out
cmp
xchg
insb
inc
xor
jae
out
sub
and
icebp
popa
add
ds
push
cs
push
dec
cltd
push
cmpsl
jb
push
pop
jbe
xor
cmp
fwait
mov
cmc
loope
ja
sbb
js
jae
repnz
leave
dec
xor
in
filds
xchg
mov
cmc
scas
mull
popa
rcll
ljmp
dec
and
pop
sub
popf
push
das
adc
xlat
pop
imul
mov
pop
mov
notb
add
jmp
push
loopne
sti
out
lods
ret
fwait
mov
jmp
and
popa
div
push
push
or
dec
lea
mov
mov
les
add
push
lret
mov
cmp
imul
mov
xchg
push
aaa
testl
add
or
mov
add
adc
pop
insl
lahf
mov
shll
mov
rclb
aad
out
bswap
inc
jle
aam
frstor
sahf
mov
mov
jnp
out
or
repz
mov
loopne
xchg
std
sarb
pop
cs
xchg
mov
cmp
shlb
push
inc
sarl
xor
xor
inc
dec
je
out
push
js
shl
imul
lea
pop
lds
dec
lahf
outsb
sbb
jbe
push
mov
std
out
mov
repz
and
xlat
mov
push
fdivrl
jmp
enter
push
xchg
cmp
add
mov
pop
sbb
mov
cmp
out
push
xor
in
stos
mov
dec
mulb
icebp
inc
pop
stc
dec
dec
jg
stos
ret
test
sbb
fnsave
xchg
mov
gs
add
repz
shl
pop
pop
jno
fdivrs
mov
inc
dec
js
jns
in
pushf
jp
add
rol
add
push
mov
pop
js
dec
outsl
inc
fisttpl
inc
imul
notb
nop
inc
inc
mov
push
neg
nop
out
sub
pop
pop
adc
int3
sahf
fwait
xchg
push
or
lods
movsl
vpextrw
outsb
es
cld
popf
negl
sub
push
je
push
inc
jecxz
aam
and
or
cld
mov
inc
jmp
pop
or
inc
mov
js
xorl
cwtl
push
ret
or
xchg
mov
adc
and
sbb
repnz
ds
scas
lret
aad
enter
xchg
roll
sub
jne
lods
mov
es
adc
dec
roll
push
or
fmull
add
mov
cmp
sbb
and
xchg
inc
jae
adc
or
xor
push
cwtl
mov
cmc
rclb
and
lret
mov
pop
rol
lret
lea
icebp
and
push
aam
addl
push
sub
mov
dec
lahf
popf
and
lock
repnz
cmp
jl
movsl
fdivr
push
sarl
xchg
js
lea
popa
std
dec
cmp
xchg
movsl
cmp
mov
xchg
add
mov
int
icebp
pop
xchg
fstl
mov
add
daa
push
pushf
addl
or
out
fmul
xchg
loopne
lods
mov
lret
xor
imul
mov
sti
out
aam
mov
or
pop
dec
or
fisubl
and
dec
mov
imul
jbe
mov
aad
ret
push
mov
or
pop
sbb
jae
bound
or
movsb
pop
rolb
adc
mov
in
pop
add
adc
iret
mov
sbb
adc
shr
imul
rolb
pop
add
lahf
sub
cmp
mov
jnp
mov
mov
push
sub
xor
outsl
insl
iret
xchg
add
out
insb
js
in
movsb
shll
jg
sar
orl
shlb
sbb
inc
mov
pop
leave
jbe
push
jne
xor
popa
ljmp
and
test
aad
fwait
sahf
cmc
and
xor
xor
fsts
mov
mul
cmp
and
aad
out
and
stos
rorb
scas
cmp
stc
stos
xchg
int
sbb
popa
mov
scas
sub
push
sub
lods
adc
scas
outsl
cmp
pop
sbb
xchg
cmp
vunpckhps
lcall
jmp
xor
xchg
imul
pop
push
enter
jns
daa
cwtl
nop
ficompl
xor
popf
sti
push
int3
ret
ret
mov
cmovp
js
std
aam
jno
adc
icebp
pop
or
ret
lea
inc
addl
pop
fcomps
movsl
push
lds
jge
dec
or
stc
xchg
fs
lret
mov
push
icebp
jbe
mov
sbb
call
jnp
frstor
cld
mov
push
mov
sub
dec
test
and
mov
push
xor
dec
addr16
mov
hlt
popa
imul
mov
in
push
mov
cmpsl
adc
push
shrl
or
fisttpll
mov
repz
ja
push
push
xchg
sarb
pop
sahf
lret
sub
dec
push
sbb
pop
pop
xchg
movsl
jnp
addr16
xchg
add
std
cli
mov
mov
cwtl
xchg
push
push
in
sbb
add
in
call
xlat
add
pop
cmpsb
or
mul
cmp
fwait
cmpb
xorl
mov
pusha
shrl
fs
mov
pop
push
sbb
adc
mov
inc
enter
mov
add
dec
inc
repz
push
stos
aam
addr16
imul
jecxz
xchg
outsb
test
les
in
cmc
cli
sbb
out
daa
and
lahf
jp
sbb
cli
sub
iret
orl
les
stos
sbb
jo
shl
cmpsl
jmp
icebp
xchg
mov
cmpsl
and
ror
in
ror
fmuls
mov
and
fs
cmpsl
mov
mov
pop
sub
xor
add
rcrl
aas
lock
loopne
iret
insb
repz
push
loop
sub
rcll
outsl
inc
insb
int3
jmp
or
pop
cld
add
dec
and
popf
popa
test
or
cmp
mov
push
je
das
add
inc
test
sbb
xchg
sub
int
outsl
fdivrs
inc
cmp
mov
mov
xchg
push
cmpsl
repnz
loop
adc
inc
mov
push
adc
sbb
lret
into
jbe
js,pt
mov
push
xor
sub
fs
push
push
cmpsb
push
push
aas
test
dec
dec
inc
or
adc
shr
out
rol
xchg
xor
imul
push
sti
xor
loopne
mov
mov
adc
xchg
add
xor
jno
call
dec
inc
je
jmp
lods
mov
lock
sbb
dec
pop
push
jb
enter
lds
pop
sarl
push
or
ds
mov
es
bound
aas
push
lea
and
cwtl
js
ljmp
stc
cmp
pusha
xor
jge
sbb
jecxz
jmp
movsb
push
adc
ss
jnp
push
jne
call
nop
adc
jl
sti
ret
fs
loop
ss
mov
xchg
test
push
dec
sub
fdivl
mov
adc
lock
inc
xchg
sbb
sub
push
fmull
movl
mov
sbb
sahf
out
sahf
xchg
lods
fbld
xor
in
push
push
aad
scas
jge
xchg
pusha
inc
mov
xlat
xor
sub
stos
or
addl
sub
mov
pop
xor
lahf
es
pop
mov
xor
fildll
dec
sbb
xchg
xor
adc
jae
out
mov
and
rclb
or
push
icebp
dec
pop
adc
pop
sbb
jno
push
inc
bound
sub
jmp
lods
jl
and
mov
or
sahf
in
or
cmc
sub
daa
call
mov
popa
lret
clc
sbb
and
popf
dec
add
aaa
adc
mov
repz
inc
ficompl
shll
call
or
test
cmp
mov
xchg
cld
sarl
call
sbb
jl
in
cmp
outsb
lret
outsb
jg
cmp
or
and
pop
loopne
xchg
jle
push
sahf
dec
and
out
cmp
mov
pop
in
adc
xchg
std
cmp
sti
fcomp
enter
sub
dec
mov
and
fistpll
dec
nop
call
mov
cltd
loop
aad
insl
out
jbe
mov
mov
mov
movsl
cmp
mov
in
pop
add
loope
fisttpl
and
lods
sbb
jae
dec
test
adc
push
mov
mov
inc
ja
stos
nop
xor
mov
mov
adc
jno
add
cmp
jmp
mov
js
sti
mov
and
dec
sti
movsb
jp
and
mov
xchg
mov
mov
out
das
xor
sbb
mov
jle
mov
push
incb
call
xlat
cmp
lds
mov
clc
jl
sbb
push
popa
rclb
fimull
ret
adc
fstps
xor
sub
and
int3
mov
xchg
lahf
mov
mov
popa
mov
inc
test
in
add
sarb
out
mov
mov
jmp
inc
fadds
scas
add
add
mov
test
add
inc
inc
or
dec
mov
and
ret
push
lock
test
xchg
push
push
pop
dec
int
or
fucomip
fsubrs
cltd
into
jmp
jno
xorl
dec
ss
or
or
sbb
pusha
ljmp
jmp
int3
xor
adc
or
subl
adc
inc
dec
inc
aas
dec
js
mov
ja
jecxz
movsb
ljmp
loop
sahf
push
cmp
jmp
pop
jb
mov
pop
xchg
push
shrl
jb
jl
les
dec
dec
and
scas
push
negb
xlat
push
icebp
test
add
sti
push
aaa
sub
or
inc
lret
pop
jb
and
shl
cmpsl
dec
mov
jge
sub
out
ljmp
andb
inc
jb
cmp
and
int
dec
dec
jge
mov
nop
jl
in
mov
xchg
out
into
mov
into
push
aam
cli
outsl
cld
cmp
int
dec
sbb
and
cwtl
gs
inc
divb
lods
push
mov
dec
daa
and
imul
sbb
andl
xchg
scas
xor
pop
xchg
stc
cmp
jo
adc
xchg
sub
stc
xchg
jae
aad
aaa
cmc
inc
rclb
out
out
xchg
jge
lahf
not
loopne
loope
pop
sub
mov
idivl
aam
mov
shlb
xchg
es
test
xor
aad
cli
jae
subl
out
pop
repnz
cs
lcall
or
mov
scas
xlat
xor
lret
data16
aam
xor
scas
push
sbb
xchg
cmpsb
add
jle
inc
dec
les
inc
mov
dec
xchg
xchg
sub
jne
add
pushf
movsb
lds
xor
lock
scas
jbe
push
pop
xor
icebp
push
lret
test
or
xchg
pop
push
daa
test
jne
and
les
loope
ficoml
or
imull
jp
inc
adc
inc
or
cmpl
cmp
and
int3
call
mov
aad
inc
add
stos
repz
shl
jae
mov
dec
xor
mov
ja
xlat
je
mov
sub
push
inc
sub
outsl
mov
add
xchg
dec
in
sahf
dec
in
pusha
or
out
clc
push
scas
mov
cli
shrb
jbe
push
xchg
push
in
ja
jae
in
shll
xor
sti
sub
data16
fucomip
in
cmp
fisubs
cmp
lods
leave
enter
xchg
repz
dec
cwtl
pop
jnp
std
sarb
lcall
fistpl
mov
mov
adc
fisttpll
cltd
sbb
jl
pop
std
into
aaa
or
out
inc
js
add
xchg
fldcw
push
aam
shrl
bnd
mov
out
into
movsb
mov
divb
push
sub
outsl
outsl
jge
lods
jge
dec
mov
mov
mov
bnd
arpl
adc
cmp
lods
cli
scas
lock
das
mov
jmp
pop
jl
stos
add
dec
fcmovne
xchg
mov
sbb
jns
mul
das
mov
outsl
xchg
jnp
nop
lcall
lds
mov
adc
loopne
cs
aad
ja
sbb
push
pop
loopne
xchg
loopne
mov
in
pop
sub
inc
cmp
cmpl
and
rorl
and
ficoml
mov
cmp
add
jecxz
pop
xchg
inc
mov
mov
scas
sub
dec
or
add
pop
xchg
pop
pop
repz
fidivrs
negl
in
je
movsl
iret
mul
xchg
xchg
repnz
insl
dec
cmpsl
test
push
dec
dec
outsb
push
push
mov
sbb
rcl
or
sbb
bound
out
sbb
jecxz
testb
fdivrs
pop
push
cli
jne
ja
int3
out
lcall
pop
push
dec
daa
sbb
mov
jmp
cwtl
loope
in
mov
xchg
pop
pop
int3
mov
mov
push
scas
in
inc
addb
movsl
stc
mov
aam
sbb
rolb
pop
cmp
mov
add
jbe
cmp
pusha
enter
xchg
fdivl
dec
insl
jne
xchg
pop
loope
pop
pop
mov
aam
aad
push
imul
movsb
pop
sti
ss
hlt
cld
rolb
mov
pop
sbb
sub
aam
cmpsb
and
aam
mov
popa
dec
test
out
sbb
call
ret
mov
mov
push
pushf
jbe
clc
fidivrs
pop
sbb
enter
sbb
mov
xorb
push
jmp
rcll
dec
movsb
push
push
mov
xchg
push
add
xchg
inc
or
ss
push
out
adc
jnp
push
adc
pusha
sub
leave
xchg
mov
jecxz
scas
cli
call
daa
or
xlat
adc
inc
inc
pop
cmc
add
addr16
fcomps
das
cli
imul
push
mov
xor
sub
xor
ret
jo
add
sbb
mov
sbb
and
jl
repz
sti
sarb
in
and
imul
xor
sub
fstp
push
ja
mov
mull
movsb
scas
outsl
lea
add
mov
xchg
xchg
cmp
or
mov
mov
pop
add
sub
push
jge
sbb
or
cli
mov
frstor
xchg
mov
in
lcall
orb
ret
ljmp
push
inc
fstpt
inc
cmpsb
cwtl
rcl
sbb
inc
xor
mov
mov
popf
dec
xchg
mov
out
lea
inc
lods
pop
call
imul
or
xchg
push
mov
repnz
adc
mov
adc
push
jg
push
iret
pop
test
inc
push
cmp
ror
insl
mov
push
push
in
test
iret
jmp
lea
dec
ss
fdivrp
mov
rorl
fcompl
jno
inc
fildll
push
fsubr
mov
data16
gs
loop
sub
xchg
movsl
rorb
fistpll
pop
cmp
mov
push
fwait
jl
scas
xor
dec
into
fisubl
movl
fadds
std
movb
into
loope
sbb
je
pop
repz
bound
cld
xor
out
fidivl
or
sub
in
xor
mov
mov
jb
cmp
test
inc
inc
mov
adcb
mov
pop
daa
add
ficomps
and
stos
sub
pop
xchg
adc
cld
test
pop
jmp
fcomp
and
cmpsb
or
popl
shrl
mov
imul
bound
mov
xor
je
xchg
icebp
mov
out
pop
hlt
sbb
aam
roll
int3
adc
inc
pop
mov
xor
sti
push
aas
sbbb
shll
jne
rclb
and
sbb
repnz
cmpsb
jge
adcb
ret
xchg
xor
sub
int
jo
push
mov
or
cmp
test
std
nop
in
incb
imul
mov
jecxz
shlb
jbe
iret
push
out
lods
fsubl
mov
cmp
mov
call
movb
push
adc
push
xchg
jnp
jle
mov
xchg
cmp
xchg
jmp
popl
pop
pop
out
ss
cmpsb
sbb
shll
push
shlb
ljmp
pusha
outsb
leave
dec
fnstenv
mov
fildl
loope
and
sub
daa
leave
in
mov
xchg
or
gs
rcrl
rcrl
bound
int
stos
push
or
cmp
xchg
cmpb
movsb
or
mov
enter
or
mov
xchg
andl
leave
std
lods
fs
add
mov
dec
or
push
pop
and
fs
mov
js
fs
loope
sbb
leave
pop
movl
test
lds
inc
mov
adc
fsubrs
lcall
and
mov
xchg
std
sahf
ret
into
and
int3
cs
pop
push
push
sub
mov
aaa
aaa
jo
shlb
jl
xchg
sub
pop
inc
and
test
jecxz
jge
jne
aas
inc
lods
mov
push
push
dec
jmp
movsl
loop
and
inc
inc
ret
adc
sti
icebp
cs
pop
pop
movsb
jle
jae
cmp
sahf
add
les
dec
out
mov
mov
inc
mov
inc
pop
push
aad
shll
mov
fs
imul
xchg
xchg
lods
and
imul
in
sub
pop
gs
mov
dec
addr16
stos
dec
mov
cmp
pop
mov
dec
jecxz
xor
mov
testb
test
negl
jecxz
mov
nop
lds
cmp
push
cmp
inc
jo
sub
xchg
push
test
lea
lret
loop
jl
std
jl
mov
sbbb
cmp
sahf
jne
pushf
addr16
je
xor
inc
pop
movsb
dec
xchg
ror
jbe
push
jne
cmpsb
mov
jne
lcall
jge
es
pusha
mov
in
leave
xchg
mov
lods
push
add
dec
test
pop
and
cwtl
loope
je
cmp
aas
or
outsb
xor
mov
adc
mov
jb
popa
in
cmp
arpl
ret
repnz
push
in
inc
cmp
pop
sbb
cmp
sub
inc
sbb
lret
lods
xchg
je
mov
cmp
adc
jbe
sbb
cmp
sarb
in
add
dec
les
sarb
and
pop
incb
jmp
sahf
in
mov
cld
data16
cmp
jno
xchg
inc
xchg
cmp
sub
stos
xchg
cmp
aas
push
rcrl
scas
adc
push
xchg
enter
mov
test
mov
sbb
sub
xorl
and
aaa
pushf
cli
or
adc
fdecstp
pop
mov
jo
mov
lret
enter
rcrl
loop
out
arpl
lret
mov
jg
jns
xchg
inc
and
loopne
pop
outsl
inc
faddl
mov
or
jae
add
sub
subb
cmp
scas
inc
lret
ss
pop
testl
mulb
in
call
mov
and
lods
jmp
mov
call
lcall
std
or
jecxz
fcmovbe
mov
xchg
fld1
fstpl
movsl
xor
cmp
add
hlt
cmp
jge
or
xchg
int3
fcmovbe
bound
push
cmp
add
lock
divl
aam
jp
push
mov
fmul
pop
adc
pusha
jg
scas
imul
fisttpll
xchg
pusha
fdivr
inc
push
or
pop
jb
mov
cmp
inc
sbb
mov
push
jg
inc
push
loopne
mov
dec
or
inc
ss
les
nop
mov
or
ja
dec
push
adcl
lea
xchg
or
fstpt
mov
xchg
ljmp
or
aam
push
str
rol
movsb
adc
jae
sbb
cmp
dec
iret
das
js
loopne
sub
insl
mov
and
xchg
pushf
mov
jnp
sbb
dec
je
notb
fsubl
push
lods
xor
mov
inc
add
inc
insl
insl
jne
mov
lahf
jg
call
pushl
enter
ljmp
lea
cli
cmp
outsb
repz
push
xchg
leave
mov
divl
mov
in
xchg
hlt
jb
cmpsl
push
push
xchg
popa
pop
mov
repnz
dec
orl
cltd
mov
ffreep
cmp
jge
mov
out
mov
xorb
js
push
sbb
dec
and
sbb
fwait
mov
sub
repz
xor
push
enter
sbb
in
in
inc
dec
fwait
in
jl
icebp
divl
lods
repnz
fsubs
mov
mov
add
mov
lret
and
movsb
mov
cmp
sbb
mov
lcall
cmpsl
mov
jecxz
lods
orl
cmp
adc
pop
pop
cmp
pop
sti
in
adc
int
pusha
pop
pop
or
pop
rorl
sahf
jmp
fsts
push
pop
mov
je
xchg
imul
add
mov
and
cli
sbb
inc
push
pop
enter
repz
iretw
xor
dec
repnz
popa
push
jbe
adc
fsts
mov
cwtl
or
mov
imull
and
or
inc
push
movsl
mov
mov
mov
std
loopne
mov
pusha
fistpl
adc
shrb
jb
out
and
cli
in
daa
inc
xchg
xor
call
faddl
lods
loop
and
dec
bnd
push
and
es
mov
pop
and
xchg
push
ljmp
fs
icebp
loop
loopne
jmp
adc
push
and
cld
outsl
xchg
and
sub
xchg
aas
mov
or
sub
add
add
add
inc
mov
add
or
dec
mov
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
